
../repos/coreutils/src/nl:     file format elf32-littlearm


Disassembly of section .init:

00010fa0 <.init>:
   10fa0:	push	{r3, lr}
   10fa4:	bl	11338 <__assert_fail@plt+0x48>
   10fa8:	pop	{r3, pc}

Disassembly of section .plt:

00010fac <pthread_mutex_unlock@plt-0x14>:
   10fac:	push	{lr}		; (str lr, [sp, #-4]!)
   10fb0:	ldr	lr, [pc, #4]	; 10fbc <pthread_mutex_unlock@plt-0x4>
   10fb4:	add	lr, pc, lr
   10fb8:	ldr	pc, [lr, #8]!
   10fbc:	andeq	r3, r3, r4, asr #32

00010fc0 <pthread_mutex_unlock@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #208896	; 0x33000
   10fc8:	ldr	pc, [ip, #68]!	; 0x44

00010fcc <calloc@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #208896	; 0x33000
   10fd4:	ldr	pc, [ip, #60]!	; 0x3c

00010fd8 <fputs_unlocked@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #208896	; 0x33000
   10fe0:	ldr	pc, [ip, #52]!	; 0x34

00010fe4 <wctype@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #208896	; 0x33000
   10fec:	ldr	pc, [ip, #44]!	; 0x2c

00010ff0 <wcrtomb@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #208896	; 0x33000
   10ff8:	ldr	pc, [ip, #36]!	; 0x24

00010ffc <iswctype@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #208896	; 0x33000
   11004:	ldr	pc, [ip, #28]!

00011008 <strcmp@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #208896	; 0x33000
   11010:	ldr	pc, [ip, #20]!

00011014 <posix_fadvise64@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #208896	; 0x33000
   1101c:	ldr	pc, [ip, #12]!

00011020 <printf@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #208896	; 0x33000
   11028:	ldr	pc, [ip, #4]!

0001102c <pthread_mutex_destroy@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #204800	; 0x32000
   11034:	ldr	pc, [ip, #4092]!	; 0xffc

00011038 <fflush@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #204800	; 0x32000
   11040:	ldr	pc, [ip, #4084]!	; 0xff4

00011044 <memmove@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #204800	; 0x32000
   1104c:	ldr	pc, [ip, #4076]!	; 0xfec

00011050 <free@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #204800	; 0x32000
   11058:	ldr	pc, [ip, #4068]!	; 0xfe4

0001105c <pthread_mutex_lock@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #204800	; 0x32000
   11064:	ldr	pc, [ip, #4060]!	; 0xfdc

00011068 <_exit@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #204800	; 0x32000
   11070:	ldr	pc, [ip, #4052]!	; 0xfd4

00011074 <memcpy@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #204800	; 0x32000
   1107c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011080 <tolower@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #204800	; 0x32000
   11088:	ldr	pc, [ip, #4036]!	; 0xfc4

0001108c <pthread_mutex_init@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #204800	; 0x32000
   11094:	ldr	pc, [ip, #4028]!	; 0xfbc

00011098 <towlower@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #204800	; 0x32000
   110a0:	ldr	pc, [ip, #4020]!	; 0xfb4

000110a4 <mbsinit@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #204800	; 0x32000
   110ac:	ldr	pc, [ip, #4012]!	; 0xfac

000110b0 <fwrite_unlocked@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #204800	; 0x32000
   110b8:	ldr	pc, [ip, #4004]!	; 0xfa4

000110bc <memcmp@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #204800	; 0x32000
   110c4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110c8 <stpcpy@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #204800	; 0x32000
   110d0:	ldr	pc, [ip, #3988]!	; 0xf94

000110d4 <fputc_unlocked@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #204800	; 0x32000
   110dc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110e0 <getc_unlocked@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #204800	; 0x32000
   110e8:	ldr	pc, [ip, #3972]!	; 0xf84

000110ec <realloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #204800	; 0x32000
   110f4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110f8 <textdomain@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #204800	; 0x32000
   11100:	ldr	pc, [ip, #3956]!	; 0xf74

00011104 <iswprint@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #204800	; 0x32000
   1110c:	ldr	pc, [ip, #3948]!	; 0xf6c

00011110 <fwrite@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #204800	; 0x32000
   11118:	ldr	pc, [ip, #3940]!	; 0xf64

0001111c <lseek64@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #204800	; 0x32000
   11124:	ldr	pc, [ip, #3932]!	; 0xf5c

00011128 <__ctype_get_mb_cur_max@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #204800	; 0x32000
   11130:	ldr	pc, [ip, #3924]!	; 0xf54

00011134 <strcpy@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #204800	; 0x32000
   1113c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011140 <__fpending@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #204800	; 0x32000
   11148:	ldr	pc, [ip, #3908]!	; 0xf44

0001114c <ferror_unlocked@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #204800	; 0x32000
   11154:	ldr	pc, [ip, #3900]!	; 0xf3c

00011158 <mbrtowc@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #204800	; 0x32000
   11160:	ldr	pc, [ip, #3892]!	; 0xf34

00011164 <error@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #204800	; 0x32000
   1116c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011170 <malloc@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #204800	; 0x32000
   11178:	ldr	pc, [ip, #3876]!	; 0xf24

0001117c <__libc_start_main@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #204800	; 0x32000
   11184:	ldr	pc, [ip, #3868]!	; 0xf1c

00011188 <__freading@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #204800	; 0x32000
   11190:	ldr	pc, [ip, #3860]!	; 0xf14

00011194 <__gmon_start__@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #204800	; 0x32000
   1119c:	ldr	pc, [ip, #3852]!	; 0xf0c

000111a0 <getopt_long@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #204800	; 0x32000
   111a8:	ldr	pc, [ip, #3844]!	; 0xf04

000111ac <__ctype_b_loc@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #204800	; 0x32000
   111b4:	ldr	pc, [ip, #3836]!	; 0xefc

000111b8 <exit@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #204800	; 0x32000
   111c0:	ldr	pc, [ip, #3828]!	; 0xef4

000111c4 <gettext@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #204800	; 0x32000
   111cc:	ldr	pc, [ip, #3820]!	; 0xeec

000111d0 <strlen@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #204800	; 0x32000
   111d8:	ldr	pc, [ip, #3812]!	; 0xee4

000111dc <strchr@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #204800	; 0x32000
   111e4:	ldr	pc, [ip, #3804]!	; 0xedc

000111e8 <fprintf@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #204800	; 0x32000
   111f0:	ldr	pc, [ip, #3796]!	; 0xed4

000111f4 <__errno_location@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #204800	; 0x32000
   111fc:	ldr	pc, [ip, #3788]!	; 0xecc

00011200 <iswalnum@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #204800	; 0x32000
   11208:	ldr	pc, [ip, #3780]!	; 0xec4

0001120c <__cxa_atexit@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #204800	; 0x32000
   11214:	ldr	pc, [ip, #3772]!	; 0xebc

00011218 <memset@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #204800	; 0x32000
   11220:	ldr	pc, [ip, #3764]!	; 0xeb4

00011224 <btowc@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #204800	; 0x32000
   1122c:	ldr	pc, [ip, #3756]!	; 0xeac

00011230 <fileno@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #204800	; 0x32000
   11238:	ldr	pc, [ip, #3748]!	; 0xea4

0001123c <strtoimax@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #204800	; 0x32000
   11244:	ldr	pc, [ip, #3740]!	; 0xe9c

00011248 <fclose@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #204800	; 0x32000
   11250:	ldr	pc, [ip, #3732]!	; 0xe94

00011254 <fseeko64@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #204800	; 0x32000
   1125c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011260 <setlocale@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #204800	; 0x32000
   11268:	ldr	pc, [ip, #3716]!	; 0xe84

0001126c <toupper@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #204800	; 0x32000
   11274:	ldr	pc, [ip, #3708]!	; 0xe7c

00011278 <strrchr@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #204800	; 0x32000
   11280:	ldr	pc, [ip, #3700]!	; 0xe74

00011284 <nl_langinfo@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #204800	; 0x32000
   1128c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011290 <clearerr_unlocked@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #204800	; 0x32000
   11298:	ldr	pc, [ip, #3684]!	; 0xe64

0001129c <fopen64@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #204800	; 0x32000
   112a4:	ldr	pc, [ip, #3676]!	; 0xe5c

000112a8 <bindtextdomain@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #204800	; 0x32000
   112b0:	ldr	pc, [ip, #3668]!	; 0xe54

000112b4 <towupper@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #204800	; 0x32000
   112bc:	ldr	pc, [ip, #3660]!	; 0xe4c

000112c0 <strncmp@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #204800	; 0x32000
   112c8:	ldr	pc, [ip, #3652]!	; 0xe44

000112cc <abort@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #204800	; 0x32000
   112d4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112d8 <feof_unlocked@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #204800	; 0x32000
   112e0:	ldr	pc, [ip, #3636]!	; 0xe34

000112e4 <putchar_unlocked@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #204800	; 0x32000
   112ec:	ldr	pc, [ip, #3628]!	; 0xe2c

000112f0 <__assert_fail@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #204800	; 0x32000
   112f8:	ldr	pc, [ip, #3620]!	; 0xe24

Disassembly of section .text:

000112fc <.text>:
   112fc:	mov	fp, #0
   11300:	mov	lr, #0
   11304:	pop	{r1}		; (ldr r1, [sp], #4)
   11308:	mov	r2, sp
   1130c:	push	{r2}		; (str r2, [sp, #-4]!)
   11310:	push	{r0}		; (str r0, [sp, #-4]!)
   11314:	ldr	ip, [pc, #16]	; 1132c <__assert_fail@plt+0x3c>
   11318:	push	{ip}		; (str ip, [sp, #-4]!)
   1131c:	ldr	r0, [pc, #12]	; 11330 <__assert_fail@plt+0x40>
   11320:	ldr	r3, [pc, #12]	; 11334 <__assert_fail@plt+0x44>
   11324:	bl	1117c <__libc_start_main@plt>
   11328:	bl	112cc <abort@plt>
   1132c:	ldrdeq	r2, [r3], -r0
   11330:	strdeq	r2, [r1], -r0
   11334:	andeq	r2, r3, r0, ror r6
   11338:	ldr	r3, [pc, #20]	; 11354 <__assert_fail@plt+0x64>
   1133c:	ldr	r2, [pc, #20]	; 11358 <__assert_fail@plt+0x68>
   11340:	add	r3, pc, r3
   11344:	ldr	r2, [r3, r2]
   11348:	cmp	r2, #0
   1134c:	bxeq	lr
   11350:	b	11194 <__gmon_start__@plt>
   11354:			; <UNDEFINED> instruction: 0x00032cb8
   11358:	andeq	r0, r0, r0, lsr #2
   1135c:	ldr	r0, [pc, #24]	; 1137c <__assert_fail@plt+0x8c>
   11360:	ldr	r3, [pc, #24]	; 11380 <__assert_fail@plt+0x90>
   11364:	cmp	r3, r0
   11368:	bxeq	lr
   1136c:	ldr	r3, [pc, #16]	; 11384 <__assert_fail@plt+0x94>
   11370:	cmp	r3, #0
   11374:	bxeq	lr
   11378:	bx	r3
   1137c:			; <UNDEFINED> instruction: 0x000441b8
   11380:			; <UNDEFINED> instruction: 0x000441b8
   11384:	andeq	r0, r0, r0
   11388:	ldr	r0, [pc, #36]	; 113b4 <__assert_fail@plt+0xc4>
   1138c:	ldr	r1, [pc, #36]	; 113b8 <__assert_fail@plt+0xc8>
   11390:	sub	r1, r1, r0
   11394:	asr	r1, r1, #2
   11398:	add	r1, r1, r1, lsr #31
   1139c:	asrs	r1, r1, #1
   113a0:	bxeq	lr
   113a4:	ldr	r3, [pc, #16]	; 113bc <__assert_fail@plt+0xcc>
   113a8:	cmp	r3, #0
   113ac:	bxeq	lr
   113b0:	bx	r3
   113b4:			; <UNDEFINED> instruction: 0x000441b8
   113b8:			; <UNDEFINED> instruction: 0x000441b8
   113bc:	andeq	r0, r0, r0
   113c0:	push	{r4, lr}
   113c4:	ldr	r4, [pc, #24]	; 113e4 <__assert_fail@plt+0xf4>
   113c8:	ldrb	r3, [r4]
   113cc:	cmp	r3, #0
   113d0:	popne	{r4, pc}
   113d4:	bl	1135c <__assert_fail@plt+0x6c>
   113d8:	mov	r3, #1
   113dc:	strb	r3, [r4]
   113e0:	pop	{r4, pc}
   113e4:	ldrdeq	r4, [r4], -ip
   113e8:	b	11388 <__assert_fail@plt+0x98>
   113ec:	str	fp, [sp, #-8]!
   113f0:	str	lr, [sp, #4]
   113f4:	add	fp, sp, #4
   113f8:	movw	r0, #9976	; 0x26f8
   113fc:	movt	r0, #3
   11400:	bl	111c4 <gettext@plt>
   11404:	mov	r2, r0
   11408:	movw	r3, #16852	; 0x41d4
   1140c:	movt	r3, #4
   11410:	ldr	r3, [r3]
   11414:	mov	r1, r3
   11418:	mov	r0, r2
   1141c:	bl	10fd8 <fputs_unlocked@plt>
   11420:	nop	{0}
   11424:	sub	sp, fp, #4
   11428:	ldr	fp, [sp]
   1142c:	add	sp, sp, #4
   11430:	pop	{pc}		; (ldr pc, [sp], #4)
   11434:	str	fp, [sp, #-8]!
   11438:	str	lr, [sp, #4]
   1143c:	add	fp, sp, #4
   11440:	movw	r0, #10032	; 0x2730
   11444:	movt	r0, #3
   11448:	bl	111c4 <gettext@plt>
   1144c:	mov	r2, r0
   11450:	movw	r3, #16852	; 0x41d4
   11454:	movt	r3, #4
   11458:	ldr	r3, [r3]
   1145c:	mov	r1, r3
   11460:	mov	r0, r2
   11464:	bl	10fd8 <fputs_unlocked@plt>
   11468:	nop	{0}
   1146c:	sub	sp, fp, #4
   11470:	ldr	fp, [sp]
   11474:	add	sp, sp, #4
   11478:	pop	{pc}		; (ldr pc, [sp], #4)
   1147c:	str	fp, [sp, #-8]!
   11480:	str	lr, [sp, #4]
   11484:	add	fp, sp, #4
   11488:	sub	sp, sp, #80	; 0x50
   1148c:	str	r0, [fp, #-80]	; 0xffffffb0
   11490:	movw	r2, #10480	; 0x28f0
   11494:	movt	r2, #3
   11498:	sub	r3, fp, #72	; 0x48
   1149c:	ldrd	r0, [r2]
   114a0:	strd	r0, [r3]
   114a4:	ldrd	r0, [r2, #8]
   114a8:	strd	r0, [r3, #8]
   114ac:	ldrd	r0, [r2, #16]
   114b0:	strd	r0, [r3, #16]
   114b4:	ldrd	r0, [r2, #24]
   114b8:	strd	r0, [r3, #24]
   114bc:	ldrd	r0, [r2, #32]
   114c0:	strd	r0, [r3, #32]
   114c4:	ldrd	r0, [r2, #40]	; 0x28
   114c8:	strd	r0, [r3, #40]	; 0x28
   114cc:	ldrd	r0, [r2, #48]	; 0x30
   114d0:	strd	r0, [r3, #48]	; 0x30
   114d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   114d8:	str	r3, [fp, #-8]
   114dc:	sub	r3, fp, #72	; 0x48
   114e0:	str	r3, [fp, #-12]
   114e4:	b	114f4 <__assert_fail@plt+0x204>
   114e8:	ldr	r3, [fp, #-12]
   114ec:	add	r3, r3, #8
   114f0:	str	r3, [fp, #-12]
   114f4:	ldr	r3, [fp, #-12]
   114f8:	ldr	r3, [r3]
   114fc:	cmp	r3, #0
   11500:	beq	11524 <__assert_fail@plt+0x234>
   11504:	ldr	r3, [fp, #-12]
   11508:	ldr	r3, [r3]
   1150c:	mov	r1, r3
   11510:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11514:	bl	11008 <strcmp@plt>
   11518:	mov	r3, r0
   1151c:	cmp	r3, #0
   11520:	bne	114e8 <__assert_fail@plt+0x1f8>
   11524:	ldr	r3, [fp, #-12]
   11528:	ldr	r3, [r3, #4]
   1152c:	cmp	r3, #0
   11530:	beq	11540 <__assert_fail@plt+0x250>
   11534:	ldr	r3, [fp, #-12]
   11538:	ldr	r3, [r3, #4]
   1153c:	str	r3, [fp, #-8]
   11540:	movw	r0, #10108	; 0x277c
   11544:	movt	r0, #3
   11548:	bl	111c4 <gettext@plt>
   1154c:	mov	r3, r0
   11550:	movw	r2, #10132	; 0x2794
   11554:	movt	r2, #3
   11558:	movw	r1, #10172	; 0x27bc
   1155c:	movt	r1, #3
   11560:	mov	r0, r3
   11564:	bl	11020 <printf@plt>
   11568:	mov	r1, #0
   1156c:	mov	r0, #5
   11570:	bl	11260 <setlocale@plt>
   11574:	str	r0, [fp, #-16]
   11578:	ldr	r3, [fp, #-16]
   1157c:	cmp	r3, #0
   11580:	beq	115cc <__assert_fail@plt+0x2dc>
   11584:	mov	r2, #3
   11588:	movw	r1, #10188	; 0x27cc
   1158c:	movt	r1, #3
   11590:	ldr	r0, [fp, #-16]
   11594:	bl	112c0 <strncmp@plt>
   11598:	mov	r3, r0
   1159c:	cmp	r3, #0
   115a0:	beq	115cc <__assert_fail@plt+0x2dc>
   115a4:	movw	r0, #10192	; 0x27d0
   115a8:	movt	r0, #3
   115ac:	bl	111c4 <gettext@plt>
   115b0:	mov	r2, r0
   115b4:	movw	r3, #16852	; 0x41d4
   115b8:	movt	r3, #4
   115bc:	ldr	r3, [r3]
   115c0:	mov	r1, r3
   115c4:	mov	r0, r2
   115c8:	bl	10fd8 <fputs_unlocked@plt>
   115cc:	movw	r0, #10264	; 0x2818
   115d0:	movt	r0, #3
   115d4:	bl	111c4 <gettext@plt>
   115d8:	mov	r3, r0
   115dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   115e0:	movw	r1, #10132	; 0x2794
   115e4:	movt	r1, #3
   115e8:	mov	r0, r3
   115ec:	bl	11020 <printf@plt>
   115f0:	movw	r0, #10292	; 0x2834
   115f4:	movt	r0, #3
   115f8:	bl	111c4 <gettext@plt>
   115fc:	ldr	r2, [fp, #-8]
   11600:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11604:	cmp	r2, r3
   11608:	bne	11618 <__assert_fail@plt+0x328>
   1160c:	movw	r3, #10344	; 0x2868
   11610:	movt	r3, #3
   11614:	b	11620 <__assert_fail@plt+0x330>
   11618:	movw	r3, #10356	; 0x2874
   1161c:	movt	r3, #3
   11620:	mov	r2, r3
   11624:	ldr	r1, [fp, #-8]
   11628:	bl	11020 <printf@plt>
   1162c:	nop	{0}
   11630:	sub	sp, fp, #4
   11634:	ldr	fp, [sp]
   11638:	add	sp, sp, #4
   1163c:	pop	{pc}		; (ldr pc, [sp], #4)
   11640:	str	r4, [sp, #-12]!
   11644:	str	fp, [sp, #4]
   11648:	str	lr, [sp, #8]
   1164c:	add	fp, sp, #8
   11650:	sub	sp, sp, #12
   11654:	str	r0, [fp, #-16]
   11658:	ldr	r3, [fp, #-16]
   1165c:	cmp	r3, #0
   11660:	beq	1169c <__assert_fail@plt+0x3ac>
   11664:	movw	r3, #16840	; 0x41c8
   11668:	movt	r3, #4
   1166c:	ldr	r4, [r3]
   11670:	movw	r0, #11020	; 0x2b0c
   11674:	movt	r0, #3
   11678:	bl	111c4 <gettext@plt>
   1167c:	mov	r1, r0
   11680:	movw	r3, #17808	; 0x4590
   11684:	movt	r3, #4
   11688:	ldr	r3, [r3]
   1168c:	mov	r2, r3
   11690:	mov	r0, r4
   11694:	bl	111e8 <fprintf@plt>
   11698:	b	11840 <__assert_fail@plt+0x550>
   1169c:	movw	r0, #11060	; 0x2b34
   116a0:	movt	r0, #3
   116a4:	bl	111c4 <gettext@plt>
   116a8:	mov	r2, r0
   116ac:	movw	r3, #17808	; 0x4590
   116b0:	movt	r3, #4
   116b4:	ldr	r3, [r3]
   116b8:	mov	r1, r3
   116bc:	mov	r0, r2
   116c0:	bl	11020 <printf@plt>
   116c4:	movw	r0, #11096	; 0x2b58
   116c8:	movt	r0, #3
   116cc:	bl	111c4 <gettext@plt>
   116d0:	mov	r2, r0
   116d4:	movw	r3, #16852	; 0x41d4
   116d8:	movt	r3, #4
   116dc:	ldr	r3, [r3]
   116e0:	mov	r1, r3
   116e4:	mov	r0, r2
   116e8:	bl	10fd8 <fputs_unlocked@plt>
   116ec:	bl	113ec <__assert_fail@plt+0xfc>
   116f0:	bl	11434 <__assert_fail@plt+0x144>
   116f4:	movw	r0, #11160	; 0x2b98
   116f8:	movt	r0, #3
   116fc:	bl	111c4 <gettext@plt>
   11700:	mov	r2, r0
   11704:	movw	r3, #16852	; 0x41d4
   11708:	movt	r3, #4
   1170c:	ldr	r3, [r3]
   11710:	mov	r1, r3
   11714:	mov	r0, r2
   11718:	bl	10fd8 <fputs_unlocked@plt>
   1171c:	movw	r0, #11372	; 0x2c6c
   11720:	movt	r0, #3
   11724:	bl	111c4 <gettext@plt>
   11728:	mov	r2, r0
   1172c:	movw	r3, #16852	; 0x41d4
   11730:	movt	r3, #4
   11734:	ldr	r3, [r3]
   11738:	mov	r1, r3
   1173c:	mov	r0, r2
   11740:	bl	10fd8 <fputs_unlocked@plt>
   11744:	movw	r0, #11816	; 0x2e28
   11748:	movt	r0, #3
   1174c:	bl	111c4 <gettext@plt>
   11750:	mov	r2, r0
   11754:	movw	r3, #16852	; 0x41d4
   11758:	movt	r3, #4
   1175c:	ldr	r3, [r3]
   11760:	mov	r1, r3
   11764:	mov	r0, r2
   11768:	bl	10fd8 <fputs_unlocked@plt>
   1176c:	movw	r0, #11960	; 0x2eb8
   11770:	movt	r0, #3
   11774:	bl	111c4 <gettext@plt>
   11778:	mov	r2, r0
   1177c:	movw	r3, #16852	; 0x41d4
   11780:	movt	r3, #4
   11784:	ldr	r3, [r3]
   11788:	mov	r1, r3
   1178c:	mov	r0, r2
   11790:	bl	10fd8 <fputs_unlocked@plt>
   11794:	movw	r0, #12008	; 0x2ee8
   11798:	movt	r0, #3
   1179c:	bl	111c4 <gettext@plt>
   117a0:	mov	r2, r0
   117a4:	movw	r3, #16852	; 0x41d4
   117a8:	movt	r3, #4
   117ac:	ldr	r3, [r3]
   117b0:	mov	r1, r3
   117b4:	mov	r0, r2
   117b8:	bl	10fd8 <fputs_unlocked@plt>
   117bc:	movw	r0, #12064	; 0x2f20
   117c0:	movt	r0, #3
   117c4:	bl	111c4 <gettext@plt>
   117c8:	mov	r2, r0
   117cc:	movw	r3, #16852	; 0x41d4
   117d0:	movt	r3, #4
   117d4:	ldr	r3, [r3]
   117d8:	mov	r1, r3
   117dc:	mov	r0, r2
   117e0:	bl	10fd8 <fputs_unlocked@plt>
   117e4:	movw	r0, #12388	; 0x3064
   117e8:	movt	r0, #3
   117ec:	bl	111c4 <gettext@plt>
   117f0:	mov	r2, r0
   117f4:	movw	r3, #16852	; 0x41d4
   117f8:	movt	r3, #4
   117fc:	ldr	r3, [r3]
   11800:	mov	r1, r3
   11804:	mov	r0, r2
   11808:	bl	10fd8 <fputs_unlocked@plt>
   1180c:	movw	r0, #12592	; 0x3130
   11810:	movt	r0, #3
   11814:	bl	111c4 <gettext@plt>
   11818:	mov	r2, r0
   1181c:	movw	r3, #16852	; 0x41d4
   11820:	movt	r3, #4
   11824:	ldr	r3, [r3]
   11828:	mov	r1, r3
   1182c:	mov	r0, r2
   11830:	bl	10fd8 <fputs_unlocked@plt>
   11834:	movw	r0, #12740	; 0x31c4
   11838:	movt	r0, #3
   1183c:	bl	1147c <__assert_fail@plt+0x18c>
   11840:	ldr	r0, [fp, #-16]
   11844:	bl	111b8 <exit@plt>
   11848:	str	r4, [sp, #-12]!
   1184c:	str	fp, [sp, #4]
   11850:	str	lr, [sp, #8]
   11854:	add	fp, sp, #8
   11858:	sub	sp, sp, #28
   1185c:	str	r0, [fp, #-24]	; 0xffffffe8
   11860:	str	r1, [fp, #-28]	; 0xffffffe4
   11864:	str	r2, [fp, #-32]	; 0xffffffe0
   11868:	mov	r3, #1
   1186c:	strb	r3, [fp, #-13]
   11870:	movw	r3, #16856	; 0x41d8
   11874:	movt	r3, #4
   11878:	ldr	r3, [r3]
   1187c:	ldrb	r3, [r3]
   11880:	sub	r3, r3, #97	; 0x61
   11884:	cmp	r3, #19
   11888:	ldrls	pc, [pc, r3, lsl #2]
   1188c:	b	119b8 <__assert_fail@plt+0x6c8>
   11890:	andeq	r1, r1, r0, ror #17
   11894:			; <UNDEFINED> instruction: 0x000119b8
   11898:			; <UNDEFINED> instruction: 0x000119b8
   1189c:			; <UNDEFINED> instruction: 0x000119b8
   118a0:			; <UNDEFINED> instruction: 0x000119b8
   118a4:			; <UNDEFINED> instruction: 0x000119b8
   118a8:			; <UNDEFINED> instruction: 0x000119b8
   118ac:			; <UNDEFINED> instruction: 0x000119b8
   118b0:			; <UNDEFINED> instruction: 0x000119b8
   118b4:			; <UNDEFINED> instruction: 0x000119b8
   118b8:			; <UNDEFINED> instruction: 0x000119b8
   118bc:			; <UNDEFINED> instruction: 0x000119b8
   118c0:			; <UNDEFINED> instruction: 0x000119b8
   118c4:	andeq	r1, r1, r0, ror #17
   118c8:			; <UNDEFINED> instruction: 0x000119b8
   118cc:	strdeq	r1, [r1], -r8
   118d0:			; <UNDEFINED> instruction: 0x000119b8
   118d4:			; <UNDEFINED> instruction: 0x000119b8
   118d8:			; <UNDEFINED> instruction: 0x000119b8
   118dc:	andeq	r1, r1, r0, ror #17
   118e0:	movw	r3, #16856	; 0x41d8
   118e4:	movt	r3, #4
   118e8:	ldr	r2, [r3]
   118ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118f0:	str	r2, [r3]
   118f4:	b	119c8 <__assert_fail@plt+0x6d8>
   118f8:	movw	r3, #16856	; 0x41d8
   118fc:	movt	r3, #4
   11900:	ldr	r2, [r3]
   11904:	add	r1, r2, #1
   11908:	movw	r3, #16856	; 0x41d8
   1190c:	movt	r3, #4
   11910:	str	r1, [r3]
   11914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11918:	str	r2, [r3]
   1191c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11920:	mov	r2, #0
   11924:	str	r2, [r3]
   11928:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1192c:	mov	r2, #0
   11930:	str	r2, [r3, #4]
   11934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11938:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1193c:	str	r2, [r3, #16]
   11940:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11944:	mov	r2, #0
   11948:	str	r2, [r3, #20]
   1194c:	movw	r3, #18116	; 0x46c4
   11950:	movt	r3, #4
   11954:	movw	r2, #710	; 0x2c6
   11958:	str	r2, [r3]
   1195c:	movw	r3, #16856	; 0x41d8
   11960:	movt	r3, #4
   11964:	ldr	r4, [r3]
   11968:	movw	r3, #16856	; 0x41d8
   1196c:	movt	r3, #4
   11970:	ldr	r3, [r3]
   11974:	mov	r0, r3
   11978:	bl	111d0 <strlen@plt>
   1197c:	mov	r3, r0
   11980:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11984:	mov	r1, r3
   11988:	mov	r0, r4
   1198c:	bl	1b4d4 <__assert_fail@plt+0xa1e4>
   11990:	str	r0, [fp, #-20]	; 0xffffffec
   11994:	ldr	r3, [fp, #-20]	; 0xffffffec
   11998:	cmp	r3, #0
   1199c:	beq	119c4 <__assert_fail@plt+0x6d4>
   119a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   119a4:	movw	r2, #12744	; 0x31c8
   119a8:	movt	r2, #3
   119ac:	mov	r1, #0
   119b0:	mov	r0, #1
   119b4:	bl	11164 <error@plt>
   119b8:	mov	r3, #0
   119bc:	strb	r3, [fp, #-13]
   119c0:	b	119c8 <__assert_fail@plt+0x6d8>
   119c4:	nop	{0}
   119c8:	ldrb	r3, [fp, #-13]
   119cc:	mov	r0, r3
   119d0:	sub	sp, fp, #8
   119d4:	ldr	r4, [sp]
   119d8:	ldr	fp, [sp, #4]
   119dc:	add	sp, sp, #8
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)
   119e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   119e8:	strd	r6, [sp, #8]
   119ec:	str	fp, [sp, #16]
   119f0:	str	lr, [sp, #20]
   119f4:	add	fp, sp, #20
   119f8:	sub	sp, sp, #8
   119fc:	movw	r3, #17784	; 0x4578
   11a00:	movt	r3, #4
   11a04:	ldrb	r3, [r3]
   11a08:	cmp	r3, #0
   11a0c:	beq	11a30 <__assert_fail@plt+0x740>
   11a10:	movw	r0, #12748	; 0x31cc
   11a14:	movt	r0, #3
   11a18:	bl	111c4 <gettext@plt>
   11a1c:	mov	r3, r0
   11a20:	mov	r2, r3
   11a24:	mov	r1, #0
   11a28:	mov	r0, #1
   11a2c:	bl	11164 <error@plt>
   11a30:	movw	r3, #16748	; 0x416c
   11a34:	movt	r3, #4
   11a38:	ldr	ip, [r3]
   11a3c:	movw	r3, #16744	; 0x4168
   11a40:	movt	r3, #4
   11a44:	ldr	lr, [r3]
   11a48:	movw	r3, #17776	; 0x4570
   11a4c:	movt	r3, #4
   11a50:	ldrd	r0, [r3]
   11a54:	movw	r3, #16704	; 0x4140
   11a58:	movt	r3, #4
   11a5c:	ldr	r3, [r3]
   11a60:	str	r3, [sp]
   11a64:	mov	r2, r0
   11a68:	mov	r3, r1
   11a6c:	mov	r1, lr
   11a70:	mov	r0, ip
   11a74:	bl	11020 <printf@plt>
   11a78:	movw	r3, #17776	; 0x4570
   11a7c:	movt	r3, #4
   11a80:	ldrd	r0, [r3]
   11a84:	movw	r3, #16720	; 0x4150
   11a88:	movt	r3, #4
   11a8c:	ldrd	r2, [r3]
   11a90:	mov	r4, #0
   11a94:	mov	r5, #0
   11a98:	adds	r6, r0, r2
   11a9c:	adcs	r7, r1, r3
   11aa0:	bvc	11aac <__assert_fail@plt+0x7bc>
   11aa4:	mov	r4, #1
   11aa8:	mov	r5, #0
   11aac:	mov	r2, r6
   11ab0:	mov	r3, r7
   11ab4:	mov	r0, r2
   11ab8:	mov	r1, r3
   11abc:	movw	r3, #17776	; 0x4570
   11ac0:	movt	r3, #4
   11ac4:	strd	r0, [r3]
   11ac8:	mov	r2, r4
   11acc:	mov	r3, r5
   11ad0:	mov	r3, r2
   11ad4:	and	r3, r3, #1
   11ad8:	uxtb	r3, r3
   11adc:	cmp	r3, #0
   11ae0:	beq	11af4 <__assert_fail@plt+0x804>
   11ae4:	movw	r3, #17784	; 0x4578
   11ae8:	movt	r3, #4
   11aec:	mov	r2, #1
   11af0:	strb	r2, [r3]
   11af4:	nop	{0}
   11af8:	sub	sp, fp, #20
   11afc:	ldrd	r4, [sp]
   11b00:	ldrd	r6, [sp, #8]
   11b04:	ldr	fp, [sp, #16]
   11b08:	add	sp, sp, #20
   11b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b10:	push	{fp}		; (str fp, [sp, #-4]!)
   11b14:	add	fp, sp, #0
   11b18:	movw	r3, #16728	; 0x4158
   11b1c:	movt	r3, #4
   11b20:	ldrb	r3, [r3]
   11b24:	cmp	r3, #0
   11b28:	beq	11b54 <__assert_fail@plt+0x864>
   11b2c:	movw	r3, #16712	; 0x4148
   11b30:	movt	r3, #4
   11b34:	ldrd	r0, [r3]
   11b38:	movw	r3, #17776	; 0x4570
   11b3c:	movt	r3, #4
   11b40:	strd	r0, [r3]
   11b44:	movw	r3, #17784	; 0x4578
   11b48:	movt	r3, #4
   11b4c:	mov	r2, #0
   11b50:	strb	r2, [r3]
   11b54:	nop	{0}
   11b58:	add	sp, fp, #0
   11b5c:	pop	{fp}		; (ldr fp, [sp], #4)
   11b60:	bx	lr
   11b64:	str	fp, [sp, #-8]!
   11b68:	str	lr, [sp, #4]
   11b6c:	add	fp, sp, #4
   11b70:	movw	r3, #16696	; 0x4138
   11b74:	movt	r3, #4
   11b78:	ldr	r2, [r3]
   11b7c:	movw	r3, #16864	; 0x41e0
   11b80:	movt	r3, #4
   11b84:	str	r2, [r3]
   11b88:	movw	r3, #17732	; 0x4544
   11b8c:	movt	r3, #4
   11b90:	movw	r2, #16900	; 0x4204
   11b94:	movt	r2, #4
   11b98:	str	r2, [r3]
   11b9c:	bl	11b10 <__assert_fail@plt+0x820>
   11ba0:	mov	r0, #10
   11ba4:	bl	112e4 <putchar_unlocked@plt>
   11ba8:	nop	{0}
   11bac:	sub	sp, fp, #4
   11bb0:	ldr	fp, [sp]
   11bb4:	add	sp, sp, #4
   11bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bbc:	str	fp, [sp, #-8]!
   11bc0:	str	lr, [sp, #4]
   11bc4:	add	fp, sp, #4
   11bc8:	movw	r3, #16692	; 0x4134
   11bcc:	movt	r3, #4
   11bd0:	ldr	r2, [r3]
   11bd4:	movw	r3, #16864	; 0x41e0
   11bd8:	movt	r3, #4
   11bdc:	str	r2, [r3]
   11be0:	movw	r3, #17732	; 0x4544
   11be4:	movt	r3, #4
   11be8:	movw	r2, #16868	; 0x41e4
   11bec:	movt	r2, #4
   11bf0:	str	r2, [r3]
   11bf4:	bl	11b10 <__assert_fail@plt+0x820>
   11bf8:	mov	r0, #10
   11bfc:	bl	112e4 <putchar_unlocked@plt>
   11c00:	nop	{0}
   11c04:	sub	sp, fp, #4
   11c08:	ldr	fp, [sp]
   11c0c:	add	sp, sp, #4
   11c10:	pop	{pc}		; (ldr pc, [sp], #4)
   11c14:	str	fp, [sp, #-8]!
   11c18:	str	lr, [sp, #4]
   11c1c:	add	fp, sp, #4
   11c20:	movw	r3, #16700	; 0x413c
   11c24:	movt	r3, #4
   11c28:	ldr	r2, [r3]
   11c2c:	movw	r3, #16864	; 0x41e0
   11c30:	movt	r3, #4
   11c34:	str	r2, [r3]
   11c38:	movw	r3, #17732	; 0x4544
   11c3c:	movt	r3, #4
   11c40:	movw	r2, #16932	; 0x4224
   11c44:	movt	r2, #4
   11c48:	str	r2, [r3]
   11c4c:	bl	11b10 <__assert_fail@plt+0x820>
   11c50:	mov	r0, #10
   11c54:	bl	112e4 <putchar_unlocked@plt>
   11c58:	nop	{0}
   11c5c:	sub	sp, fp, #4
   11c60:	ldr	fp, [sp]
   11c64:	add	sp, sp, #4
   11c68:	pop	{pc}		; (ldr pc, [sp], #4)
   11c6c:	str	r4, [sp, #-12]!
   11c70:	str	fp, [sp, #4]
   11c74:	str	lr, [sp, #8]
   11c78:	add	fp, sp, #8
   11c7c:	sub	sp, sp, #12
   11c80:	movw	r3, #16864	; 0x41e0
   11c84:	movt	r3, #4
   11c88:	ldr	r3, [r3]
   11c8c:	ldrb	r3, [r3]
   11c90:	sub	r3, r3, #97	; 0x61
   11c94:	cmp	r3, #19
   11c98:	ldrls	pc, [pc, r3, lsl #2]
   11c9c:	b	11edc <__assert_fail@plt+0xbec>
   11ca0:	strdeq	r1, [r1], -r0
   11ca4:	ldrdeq	r1, [r1], -ip
   11ca8:	ldrdeq	r1, [r1], -ip
   11cac:	ldrdeq	r1, [r1], -ip
   11cb0:	ldrdeq	r1, [r1], -ip
   11cb4:	ldrdeq	r1, [r1], -ip
   11cb8:	ldrdeq	r1, [r1], -ip
   11cbc:	ldrdeq	r1, [r1], -ip
   11cc0:	ldrdeq	r1, [r1], -ip
   11cc4:	ldrdeq	r1, [r1], -ip
   11cc8:	ldrdeq	r1, [r1], -ip
   11ccc:	ldrdeq	r1, [r1], -ip
   11cd0:	ldrdeq	r1, [r1], -ip
   11cd4:	strdeq	r1, [r1], -r0
   11cd8:	ldrdeq	r1, [r1], -ip
   11cdc:	andeq	r1, r1, r8, lsl lr
   11ce0:	ldrdeq	r1, [r1], -ip
   11ce4:	ldrdeq	r1, [r1], -ip
   11ce8:	ldrdeq	r1, [r1], -ip
   11cec:	andeq	r1, r1, ip, lsr #27
   11cf0:	movw	r3, #16736	; 0x4160
   11cf4:	movt	r3, #4
   11cf8:	ldrd	r2, [r3]
   11cfc:	cmp	r2, #2
   11d00:	sbcs	r3, r3, #0
   11d04:	blt	11da4 <__assert_fail@plt+0xab4>
   11d08:	movw	r3, #17760	; 0x4560
   11d0c:	movt	r3, #4
   11d10:	ldr	r3, [r3, #4]
   11d14:	cmp	r3, #1
   11d18:	bgt	11d60 <__assert_fail@plt+0xa70>
   11d1c:	movw	r3, #17792	; 0x4580
   11d20:	movt	r3, #4
   11d24:	ldrd	r2, [r3]
   11d28:	adds	r0, r2, #1
   11d2c:	adc	r1, r3, #0
   11d30:	movw	r3, #17792	; 0x4580
   11d34:	movt	r3, #4
   11d38:	strd	r0, [r3]
   11d3c:	movw	r3, #17792	; 0x4580
   11d40:	movt	r3, #4
   11d44:	ldrd	r0, [r3]
   11d48:	movw	r3, #16736	; 0x4160
   11d4c:	movt	r3, #4
   11d50:	ldrd	r2, [r3]
   11d54:	cmp	r1, r3
   11d58:	cmpeq	r0, r2
   11d5c:	bne	11d7c <__assert_fail@plt+0xa8c>
   11d60:	bl	119e4 <__assert_fail@plt+0x6f4>
   11d64:	movw	r3, #17792	; 0x4580
   11d68:	movt	r3, #4
   11d6c:	mov	r0, #0
   11d70:	mov	r1, #0
   11d74:	strd	r0, [r3]
   11d78:	b	11edc <__assert_fail@plt+0xbec>
   11d7c:	movw	r3, #17772	; 0x456c
   11d80:	movt	r3, #4
   11d84:	ldr	r2, [r3]
   11d88:	movw	r3, #16852	; 0x41d4
   11d8c:	movt	r3, #4
   11d90:	ldr	r3, [r3]
   11d94:	mov	r1, r3
   11d98:	mov	r0, r2
   11d9c:	bl	10fd8 <fputs_unlocked@plt>
   11da0:	b	11edc <__assert_fail@plt+0xbec>
   11da4:	bl	119e4 <__assert_fail@plt+0x6f4>
   11da8:	b	11edc <__assert_fail@plt+0xbec>
   11dac:	movw	r3, #17760	; 0x4560
   11db0:	movt	r3, #4
   11db4:	ldr	r3, [r3, #4]
   11db8:	cmp	r3, #1
   11dbc:	ble	11dc8 <__assert_fail@plt+0xad8>
   11dc0:	bl	119e4 <__assert_fail@plt+0x6f4>
   11dc4:	b	11edc <__assert_fail@plt+0xbec>
   11dc8:	movw	r3, #17772	; 0x456c
   11dcc:	movt	r3, #4
   11dd0:	ldr	r2, [r3]
   11dd4:	movw	r3, #16852	; 0x41d4
   11dd8:	movt	r3, #4
   11ddc:	ldr	r3, [r3]
   11de0:	mov	r1, r3
   11de4:	mov	r0, r2
   11de8:	bl	10fd8 <fputs_unlocked@plt>
   11dec:	b	11edc <__assert_fail@plt+0xbec>
   11df0:	movw	r3, #17772	; 0x456c
   11df4:	movt	r3, #4
   11df8:	ldr	r2, [r3]
   11dfc:	movw	r3, #16852	; 0x41d4
   11e00:	movt	r3, #4
   11e04:	ldr	r3, [r3]
   11e08:	mov	r1, r3
   11e0c:	mov	r0, r2
   11e10:	bl	10fd8 <fputs_unlocked@plt>
   11e14:	b	11edc <__assert_fail@plt+0xbec>
   11e18:	movw	r3, #17732	; 0x4544
   11e1c:	movt	r3, #4
   11e20:	ldr	r0, [r3]
   11e24:	movw	r3, #17760	; 0x4560
   11e28:	movt	r3, #4
   11e2c:	ldr	r1, [r3, #8]
   11e30:	movw	r3, #17760	; 0x4560
   11e34:	movt	r3, #4
   11e38:	ldr	r3, [r3, #4]
   11e3c:	sub	ip, r3, #1
   11e40:	movw	r3, #17760	; 0x4560
   11e44:	movt	r3, #4
   11e48:	ldr	r3, [r3, #4]
   11e4c:	sub	r3, r3, #1
   11e50:	mov	r2, #0
   11e54:	str	r2, [sp, #4]
   11e58:	str	r3, [sp]
   11e5c:	mov	r3, #0
   11e60:	mov	r2, ip
   11e64:	bl	24998 <__assert_fail@plt+0x136a8>
   11e68:	mov	r3, r0
   11e6c:	cmn	r3, #2
   11e70:	beq	11e80 <__assert_fail@plt+0xb90>
   11e74:	cmn	r3, #1
   11e78:	beq	11eac <__assert_fail@plt+0xbbc>
   11e7c:	b	11ed4 <__assert_fail@plt+0xbe4>
   11e80:	bl	111f4 <__errno_location@plt>
   11e84:	mov	r3, r0
   11e88:	ldr	r4, [r3]
   11e8c:	movw	r0, #12772	; 0x31e4
   11e90:	movt	r0, #3
   11e94:	bl	111c4 <gettext@plt>
   11e98:	mov	r3, r0
   11e9c:	mov	r2, r3
   11ea0:	mov	r1, r4
   11ea4:	mov	r0, #1
   11ea8:	bl	11164 <error@plt>
   11eac:	movw	r3, #17772	; 0x456c
   11eb0:	movt	r3, #4
   11eb4:	ldr	r2, [r3]
   11eb8:	movw	r3, #16852	; 0x41d4
   11ebc:	movt	r3, #4
   11ec0:	ldr	r3, [r3]
   11ec4:	mov	r1, r3
   11ec8:	mov	r0, r2
   11ecc:	bl	10fd8 <fputs_unlocked@plt>
   11ed0:	b	11edc <__assert_fail@plt+0xbec>
   11ed4:	bl	119e4 <__assert_fail@plt+0x6f4>
   11ed8:	nop	{0}
   11edc:	movw	r3, #17760	; 0x4560
   11ee0:	movt	r3, #4
   11ee4:	ldr	r0, [r3, #8]
   11ee8:	movw	r3, #17760	; 0x4560
   11eec:	movt	r3, #4
   11ef0:	ldr	r3, [r3, #4]
   11ef4:	mov	r2, r3
   11ef8:	movw	r3, #16852	; 0x41d4
   11efc:	movt	r3, #4
   11f00:	ldr	r3, [r3]
   11f04:	mov	r1, #1
   11f08:	bl	110b0 <fwrite_unlocked@plt>
   11f0c:	nop	{0}
   11f10:	sub	sp, fp, #8
   11f14:	ldr	r4, [sp]
   11f18:	ldr	fp, [sp, #4]
   11f1c:	add	sp, sp, #8
   11f20:	pop	{pc}		; (ldr pc, [sp], #4)
   11f24:	str	fp, [sp, #-8]!
   11f28:	str	lr, [sp, #4]
   11f2c:	add	fp, sp, #4
   11f30:	sub	sp, sp, #8
   11f34:	movw	r3, #17760	; 0x4560
   11f38:	movt	r3, #4
   11f3c:	ldr	r3, [r3, #4]
   11f40:	sub	r3, r3, #1
   11f44:	str	r3, [fp, #-8]
   11f48:	ldr	r3, [fp, #-8]
   11f4c:	cmp	r3, #1
   11f50:	bls	11f98 <__assert_fail@plt+0xca8>
   11f54:	movw	r3, #17756	; 0x455c
   11f58:	movt	r3, #4
   11f5c:	ldr	r3, [r3]
   11f60:	cmp	r3, #1
   11f64:	bls	11f98 <__assert_fail@plt+0xca8>
   11f68:	movw	r3, #17760	; 0x4560
   11f6c:	movt	r3, #4
   11f70:	ldr	r0, [r3, #8]
   11f74:	movw	r3, #16708	; 0x4144
   11f78:	movt	r3, #4
   11f7c:	ldr	r3, [r3]
   11f80:	mov	r2, #2
   11f84:	mov	r1, r3
   11f88:	bl	110bc <memcmp@plt>
   11f8c:	mov	r3, r0
   11f90:	cmp	r3, #0
   11f94:	beq	11fa0 <__assert_fail@plt+0xcb0>
   11f98:	mov	r3, #3
   11f9c:	b	120ac <__assert_fail@plt+0xdbc>
   11fa0:	movw	r3, #17740	; 0x454c
   11fa4:	movt	r3, #4
   11fa8:	ldr	r3, [r3]
   11fac:	ldr	r2, [fp, #-8]
   11fb0:	cmp	r2, r3
   11fb4:	bne	11ff8 <__assert_fail@plt+0xd08>
   11fb8:	movw	r3, #17760	; 0x4560
   11fbc:	movt	r3, #4
   11fc0:	ldr	r0, [r3, #8]
   11fc4:	movw	r3, #17736	; 0x4548
   11fc8:	movt	r3, #4
   11fcc:	ldr	r1, [r3]
   11fd0:	movw	r3, #17740	; 0x454c
   11fd4:	movt	r3, #4
   11fd8:	ldr	r3, [r3]
   11fdc:	mov	r2, r3
   11fe0:	bl	110bc <memcmp@plt>
   11fe4:	mov	r3, r0
   11fe8:	cmp	r3, #0
   11fec:	bne	11ff8 <__assert_fail@plt+0xd08>
   11ff0:	mov	r3, #0
   11ff4:	b	120ac <__assert_fail@plt+0xdbc>
   11ff8:	movw	r3, #17748	; 0x4554
   11ffc:	movt	r3, #4
   12000:	ldr	r3, [r3]
   12004:	ldr	r2, [fp, #-8]
   12008:	cmp	r2, r3
   1200c:	bne	12050 <__assert_fail@plt+0xd60>
   12010:	movw	r3, #17760	; 0x4560
   12014:	movt	r3, #4
   12018:	ldr	r0, [r3, #8]
   1201c:	movw	r3, #17744	; 0x4550
   12020:	movt	r3, #4
   12024:	ldr	r1, [r3]
   12028:	movw	r3, #17748	; 0x4554
   1202c:	movt	r3, #4
   12030:	ldr	r3, [r3]
   12034:	mov	r2, r3
   12038:	bl	110bc <memcmp@plt>
   1203c:	mov	r3, r0
   12040:	cmp	r3, #0
   12044:	bne	12050 <__assert_fail@plt+0xd60>
   12048:	mov	r3, #1
   1204c:	b	120ac <__assert_fail@plt+0xdbc>
   12050:	movw	r3, #17756	; 0x455c
   12054:	movt	r3, #4
   12058:	ldr	r3, [r3]
   1205c:	ldr	r2, [fp, #-8]
   12060:	cmp	r2, r3
   12064:	bne	120a8 <__assert_fail@plt+0xdb8>
   12068:	movw	r3, #17760	; 0x4560
   1206c:	movt	r3, #4
   12070:	ldr	r0, [r3, #8]
   12074:	movw	r3, #17752	; 0x4558
   12078:	movt	r3, #4
   1207c:	ldr	r1, [r3]
   12080:	movw	r3, #17756	; 0x455c
   12084:	movt	r3, #4
   12088:	ldr	r3, [r3]
   1208c:	mov	r2, r3
   12090:	bl	110bc <memcmp@plt>
   12094:	mov	r3, r0
   12098:	cmp	r3, #0
   1209c:	bne	120a8 <__assert_fail@plt+0xdb8>
   120a0:	mov	r3, #2
   120a4:	b	120ac <__assert_fail@plt+0xdbc>
   120a8:	mov	r3, #3
   120ac:	mov	r0, r3
   120b0:	sub	sp, fp, #4
   120b4:	ldr	fp, [sp]
   120b8:	add	sp, sp, #4
   120bc:	pop	{pc}		; (ldr pc, [sp], #4)
   120c0:	str	fp, [sp, #-8]!
   120c4:	str	lr, [sp, #4]
   120c8:	add	fp, sp, #4
   120cc:	sub	sp, sp, #8
   120d0:	str	r0, [fp, #-8]
   120d4:	b	1211c <__assert_fail@plt+0xe2c>
   120d8:	bl	11f24 <__assert_fail@plt+0xc34>
   120dc:	mov	r3, r0
   120e0:	cmp	r3, #3
   120e4:	ldrls	pc, [pc, r3, lsl #2]
   120e8:	b	1211c <__assert_fail@plt+0xe2c>
   120ec:	strdeq	r2, [r1], -ip
   120f0:	andeq	r2, r1, r4, lsl #2
   120f4:	andeq	r2, r1, ip, lsl #2
   120f8:	andeq	r2, r1, r4, lsl r1
   120fc:	bl	11b64 <__assert_fail@plt+0x874>
   12100:	b	1211c <__assert_fail@plt+0xe2c>
   12104:	bl	11bbc <__assert_fail@plt+0x8cc>
   12108:	b	1211c <__assert_fail@plt+0xe2c>
   1210c:	bl	11c14 <__assert_fail@plt+0x924>
   12110:	b	1211c <__assert_fail@plt+0xe2c>
   12114:	bl	11c6c <__assert_fail@plt+0x97c>
   12118:	nop	{0}
   1211c:	ldr	r1, [fp, #-8]
   12120:	movw	r0, #17760	; 0x4560
   12124:	movt	r0, #4
   12128:	bl	13388 <__assert_fail@plt+0x2098>
   1212c:	mov	r3, r0
   12130:	cmp	r3, #0
   12134:	bne	120d8 <__assert_fail@plt+0xde8>
   12138:	nop	{0}
   1213c:	sub	sp, fp, #4
   12140:	ldr	fp, [sp]
   12144:	add	sp, sp, #4
   12148:	pop	{pc}		; (ldr pc, [sp], #4)
   1214c:	str	r4, [sp, #-12]!
   12150:	str	fp, [sp, #4]
   12154:	str	lr, [sp, #8]
   12158:	add	fp, sp, #8
   1215c:	sub	sp, sp, #20
   12160:	str	r0, [fp, #-24]	; 0xffffffe8
   12164:	movw	r1, #12808	; 0x3208
   12168:	movt	r1, #3
   1216c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12170:	bl	11008 <strcmp@plt>
   12174:	mov	r3, r0
   12178:	cmp	r3, #0
   1217c:	bne	121a4 <__assert_fail@plt+0xeb4>
   12180:	movw	r3, #17785	; 0x4579
   12184:	movt	r3, #4
   12188:	mov	r2, #1
   1218c:	strb	r2, [r3]
   12190:	movw	r3, #16848	; 0x41d0
   12194:	movt	r3, #4
   12198:	ldr	r3, [r3]
   1219c:	str	r3, [fp, #-16]
   121a0:	b	12200 <__assert_fail@plt+0xf10>
   121a4:	movw	r1, #12812	; 0x320c
   121a8:	movt	r1, #3
   121ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121b0:	bl	1129c <fopen64@plt>
   121b4:	str	r0, [fp, #-16]
   121b8:	ldr	r3, [fp, #-16]
   121bc:	cmp	r3, #0
   121c0:	bne	12200 <__assert_fail@plt+0xf10>
   121c4:	bl	111f4 <__errno_location@plt>
   121c8:	mov	r3, r0
   121cc:	ldr	r4, [r3]
   121d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121d4:	mov	r1, #3
   121d8:	mov	r0, #0
   121dc:	bl	15c00 <__assert_fail@plt+0x4910>
   121e0:	mov	r3, r0
   121e4:	movw	r2, #12744	; 0x31c8
   121e8:	movt	r2, #3
   121ec:	mov	r1, r4
   121f0:	mov	r0, #0
   121f4:	bl	11164 <error@plt>
   121f8:	mov	r3, #0
   121fc:	b	122d8 <__assert_fail@plt+0xfe8>
   12200:	mov	r1, #2
   12204:	ldr	r0, [fp, #-16]
   12208:	bl	13034 <__assert_fail@plt+0x1d44>
   1220c:	ldr	r0, [fp, #-16]
   12210:	bl	120c0 <__assert_fail@plt+0xdd0>
   12214:	bl	111f4 <__errno_location@plt>
   12218:	mov	r3, r0
   1221c:	ldr	r3, [r3]
   12220:	str	r3, [fp, #-20]	; 0xffffffec
   12224:	ldr	r0, [fp, #-16]
   12228:	bl	1114c <ferror_unlocked@plt>
   1222c:	mov	r3, r0
   12230:	cmp	r3, #0
   12234:	bne	12240 <__assert_fail@plt+0xf50>
   12238:	mov	r3, #0
   1223c:	str	r3, [fp, #-20]	; 0xffffffec
   12240:	movw	r1, #12808	; 0x3208
   12244:	movt	r1, #3
   12248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1224c:	bl	11008 <strcmp@plt>
   12250:	mov	r3, r0
   12254:	cmp	r3, #0
   12258:	bne	12268 <__assert_fail@plt+0xf78>
   1225c:	ldr	r0, [fp, #-16]
   12260:	bl	11290 <clearerr_unlocked@plt>
   12264:	b	12298 <__assert_fail@plt+0xfa8>
   12268:	ldr	r0, [fp, #-16]
   1226c:	bl	1309c <__assert_fail@plt+0x1dac>
   12270:	mov	r3, r0
   12274:	cmp	r3, #0
   12278:	beq	12298 <__assert_fail@plt+0xfa8>
   1227c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12280:	cmp	r3, #0
   12284:	bne	12298 <__assert_fail@plt+0xfa8>
   12288:	bl	111f4 <__errno_location@plt>
   1228c:	mov	r3, r0
   12290:	ldr	r3, [r3]
   12294:	str	r3, [fp, #-20]	; 0xffffffec
   12298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1229c:	cmp	r3, #0
   122a0:	beq	122d4 <__assert_fail@plt+0xfe4>
   122a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   122a8:	mov	r1, #3
   122ac:	mov	r0, #0
   122b0:	bl	15c00 <__assert_fail@plt+0x4910>
   122b4:	mov	r3, r0
   122b8:	movw	r2, #12744	; 0x31c8
   122bc:	movt	r2, #3
   122c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   122c4:	mov	r0, #0
   122c8:	bl	11164 <error@plt>
   122cc:	mov	r3, #0
   122d0:	b	122d8 <__assert_fail@plt+0xfe8>
   122d4:	mov	r3, #1
   122d8:	mov	r0, r3
   122dc:	sub	sp, fp, #8
   122e0:	ldr	r4, [sp]
   122e4:	ldr	fp, [sp, #4]
   122e8:	add	sp, sp, #8
   122ec:	pop	{pc}		; (ldr pc, [sp], #4)
   122f0:	str	r4, [sp, #-12]!
   122f4:	str	fp, [sp, #4]
   122f8:	str	lr, [sp, #8]
   122fc:	add	fp, sp, #8
   12300:	sub	sp, sp, #52	; 0x34
   12304:	str	r0, [fp, #-32]	; 0xffffffe0
   12308:	str	r1, [fp, #-36]	; 0xffffffdc
   1230c:	mov	r3, #1
   12310:	strb	r3, [fp, #-13]
   12314:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12318:	ldr	r3, [r3]
   1231c:	mov	r0, r3
   12320:	bl	1359c <__assert_fail@plt+0x22ac>
   12324:	movw	r1, #10356	; 0x2874
   12328:	movt	r1, #3
   1232c:	mov	r0, #6
   12330:	bl	11260 <setlocale@plt>
   12334:	movw	r1, #12816	; 0x3210
   12338:	movt	r1, #3
   1233c:	movw	r0, #10380	; 0x288c
   12340:	movt	r0, #3
   12344:	bl	112a8 <bindtextdomain@plt>
   12348:	movw	r0, #10380	; 0x288c
   1234c:	movt	r0, #3
   12350:	bl	110f8 <textdomain@plt>
   12354:	movw	r0, #11928	; 0x2e98
   12358:	movt	r0, #1
   1235c:	bl	326d4 <__assert_fail@plt+0x213e4>
   12360:	movw	r3, #17785	; 0x4579
   12364:	movt	r3, #4
   12368:	mov	r2, #0
   1236c:	strb	r2, [r3]
   12370:	b	12aa4 <__assert_fail@plt+0x17b4>
   12374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12378:	add	r3, r3, #3
   1237c:	cmp	r3, #122	; 0x7a
   12380:	ldrls	pc, [pc, r3, lsl #2]
   12384:	b	12a98 <__assert_fail@plt+0x17a8>
   12388:	andeq	r2, r1, r0, asr #20
   1238c:	andeq	r2, r1, r8, lsr sl
   12390:	muleq	r1, r8, sl
   12394:	muleq	r1, r8, sl
   12398:	muleq	r1, r8, sl
   1239c:	muleq	r1, r8, sl
   123a0:	muleq	r1, r8, sl
   123a4:	muleq	r1, r8, sl
   123a8:	muleq	r1, r8, sl
   123ac:	muleq	r1, r8, sl
   123b0:	muleq	r1, r8, sl
   123b4:	muleq	r1, r8, sl
   123b8:	muleq	r1, r8, sl
   123bc:	muleq	r1, r8, sl
   123c0:	muleq	r1, r8, sl
   123c4:	muleq	r1, r8, sl
   123c8:	muleq	r1, r8, sl
   123cc:	muleq	r1, r8, sl
   123d0:	muleq	r1, r8, sl
   123d4:	muleq	r1, r8, sl
   123d8:	muleq	r1, r8, sl
   123dc:	muleq	r1, r8, sl
   123e0:	muleq	r1, r8, sl
   123e4:	muleq	r1, r8, sl
   123e8:	muleq	r1, r8, sl
   123ec:	muleq	r1, r8, sl
   123f0:	muleq	r1, r8, sl
   123f4:	muleq	r1, r8, sl
   123f8:	muleq	r1, r8, sl
   123fc:	muleq	r1, r8, sl
   12400:	muleq	r1, r8, sl
   12404:	muleq	r1, r8, sl
   12408:	muleq	r1, r8, sl
   1240c:	muleq	r1, r8, sl
   12410:	muleq	r1, r8, sl
   12414:	muleq	r1, r8, sl
   12418:	muleq	r1, r8, sl
   1241c:	muleq	r1, r8, sl
   12420:	muleq	r1, r8, sl
   12424:	muleq	r1, r8, sl
   12428:	muleq	r1, r8, sl
   1242c:	muleq	r1, r8, sl
   12430:	muleq	r1, r8, sl
   12434:	muleq	r1, r8, sl
   12438:	muleq	r1, r8, sl
   1243c:	muleq	r1, r8, sl
   12440:	muleq	r1, r8, sl
   12444:	muleq	r1, r8, sl
   12448:	muleq	r1, r8, sl
   1244c:	muleq	r1, r8, sl
   12450:	muleq	r1, r8, sl
   12454:	muleq	r1, r8, sl
   12458:	muleq	r1, r8, sl
   1245c:	muleq	r1, r8, sl
   12460:	muleq	r1, r8, sl
   12464:	muleq	r1, r8, sl
   12468:	muleq	r1, r8, sl
   1246c:	muleq	r1, r8, sl
   12470:	muleq	r1, r8, sl
   12474:	muleq	r1, r8, sl
   12478:	muleq	r1, r8, sl
   1247c:	muleq	r1, r8, sl
   12480:	muleq	r1, r8, sl
   12484:	muleq	r1, r8, sl
   12488:	muleq	r1, r8, sl
   1248c:	muleq	r1, r8, sl
   12490:	muleq	r1, r8, sl
   12494:	muleq	r1, r8, sl
   12498:	muleq	r1, r8, sl
   1249c:	muleq	r1, r8, sl
   124a0:	muleq	r1, r8, sl
   124a4:	muleq	r1, r8, sl
   124a8:	muleq	r1, r8, sl
   124ac:	muleq	r1, r8, sl
   124b0:	muleq	r1, r8, sl
   124b4:	muleq	r1, r8, sl
   124b8:	muleq	r1, r8, sl
   124bc:	muleq	r1, r8, sl
   124c0:	muleq	r1, r8, sl
   124c4:	muleq	r1, r8, sl
   124c8:	muleq	r1, r8, sl
   124cc:	muleq	r1, r8, sl
   124d0:	muleq	r1, r8, sl
   124d4:	muleq	r1, r8, sl
   124d8:	muleq	r1, r8, sl
   124dc:	muleq	r1, r8, sl
   124e0:	muleq	r1, r8, sl
   124e4:	muleq	r1, r8, sl
   124e8:	muleq	r1, r8, sl
   124ec:	muleq	r1, r8, sl
   124f0:	muleq	r1, r8, sl
   124f4:	muleq	r1, r8, sl
   124f8:	muleq	r1, r8, sl
   124fc:	muleq	r1, r8, sl
   12500:	muleq	r1, r8, sl
   12504:	muleq	r1, r8, sl
   12508:	muleq	r1, r8, sl
   1250c:	muleq	r1, r8, sl
   12510:	muleq	r1, r8, sl
   12514:	muleq	r1, r8, sl
   12518:	muleq	r1, r8, sl
   1251c:	andeq	r2, r1, r8, ror #11
   12520:	muleq	r1, r8, sl
   12524:	andeq	r2, r1, ip, lsl #19
   12528:	muleq	r1, r8, sl
   1252c:	andeq	r2, r1, ip, asr r6
   12530:	muleq	r1, r8, sl
   12534:	andeq	r2, r1, r4, ror r5
   12538:	andeq	r2, r1, r0, lsr r7
   1253c:	muleq	r1, r8, sl
   12540:	muleq	r1, r8, sl
   12544:	andeq	r2, r1, r4, lsr #15
   12548:	muleq	r1, r8, sl
   1254c:	andeq	r2, r1, r8, lsl #17
   12550:	muleq	r1, r8, sl
   12554:	muleq	r1, r0, r7
   12558:	muleq	r1, r8, sl
   1255c:	muleq	r1, r8, sl
   12560:	andeq	r2, r1, r4, lsl #16
   12564:	muleq	r1, r8, sl
   12568:	muleq	r1, r8, sl
   1256c:	ldrdeq	r2, [r1], -r0
   12570:	andeq	r2, r1, r0, lsr #16
   12574:	movw	r2, #17220	; 0x4344
   12578:	movt	r2, #4
   1257c:	movw	r1, #16900	; 0x4204
   12580:	movt	r1, #4
   12584:	movw	r0, #16696	; 0x4138
   12588:	movt	r0, #4
   1258c:	bl	11848 <__assert_fail@plt+0x558>
   12590:	mov	r3, r0
   12594:	eor	r3, r3, #1
   12598:	uxtb	r3, r3
   1259c:	cmp	r3, #0
   125a0:	beq	12aa4 <__assert_fail@plt+0x17b4>
   125a4:	movw	r0, #12840	; 0x3228
   125a8:	movt	r0, #3
   125ac:	bl	111c4 <gettext@plt>
   125b0:	mov	r4, r0
   125b4:	movw	r3, #16856	; 0x41d8
   125b8:	movt	r3, #4
   125bc:	ldr	r3, [r3]
   125c0:	mov	r0, r3
   125c4:	bl	15efc <__assert_fail@plt+0x4c0c>
   125c8:	mov	r3, r0
   125cc:	mov	r2, r4
   125d0:	mov	r1, #0
   125d4:	mov	r0, #0
   125d8:	bl	11164 <error@plt>
   125dc:	mov	r3, #0
   125e0:	strb	r3, [fp, #-13]
   125e4:	b	12aa4 <__assert_fail@plt+0x17b4>
   125e8:	movw	r2, #16964	; 0x4244
   125ec:	movt	r2, #4
   125f0:	movw	r1, #16868	; 0x41e4
   125f4:	movt	r1, #4
   125f8:	movw	r0, #16692	; 0x4134
   125fc:	movt	r0, #4
   12600:	bl	11848 <__assert_fail@plt+0x558>
   12604:	mov	r3, r0
   12608:	eor	r3, r3, #1
   1260c:	uxtb	r3, r3
   12610:	cmp	r3, #0
   12614:	beq	12aa4 <__assert_fail@plt+0x17b4>
   12618:	movw	r0, #12876	; 0x324c
   1261c:	movt	r0, #3
   12620:	bl	111c4 <gettext@plt>
   12624:	mov	r4, r0
   12628:	movw	r3, #16856	; 0x41d8
   1262c:	movt	r3, #4
   12630:	ldr	r3, [r3]
   12634:	mov	r0, r3
   12638:	bl	15efc <__assert_fail@plt+0x4c0c>
   1263c:	mov	r3, r0
   12640:	mov	r2, r4
   12644:	mov	r1, #0
   12648:	mov	r0, #0
   1264c:	bl	11164 <error@plt>
   12650:	mov	r3, #0
   12654:	strb	r3, [fp, #-13]
   12658:	b	12aa4 <__assert_fail@plt+0x17b4>
   1265c:	movw	r2, #17476	; 0x4444
   12660:	movt	r2, #4
   12664:	movw	r1, #16932	; 0x4224
   12668:	movt	r1, #4
   1266c:	movw	r0, #16700	; 0x413c
   12670:	movt	r0, #4
   12674:	bl	11848 <__assert_fail@plt+0x558>
   12678:	mov	r3, r0
   1267c:	eor	r3, r3, #1
   12680:	uxtb	r3, r3
   12684:	cmp	r3, #0
   12688:	beq	12aa4 <__assert_fail@plt+0x17b4>
   1268c:	movw	r0, #12912	; 0x3270
   12690:	movt	r0, #3
   12694:	bl	111c4 <gettext@plt>
   12698:	mov	r4, r0
   1269c:	movw	r3, #16856	; 0x41d8
   126a0:	movt	r3, #4
   126a4:	ldr	r3, [r3]
   126a8:	mov	r0, r3
   126ac:	bl	15efc <__assert_fail@plt+0x4c0c>
   126b0:	mov	r3, r0
   126b4:	mov	r2, r4
   126b8:	mov	r1, #0
   126bc:	mov	r0, #0
   126c0:	bl	11164 <error@plt>
   126c4:	mov	r3, #0
   126c8:	strb	r3, [fp, #-13]
   126cc:	b	12aa4 <__assert_fail@plt+0x17b4>
   126d0:	movw	r3, #16856	; 0x41d8
   126d4:	movt	r3, #4
   126d8:	ldr	r4, [r3]
   126dc:	movw	r0, #12948	; 0x3294
   126e0:	movt	r0, #3
   126e4:	bl	111c4 <gettext@plt>
   126e8:	mov	r2, r0
   126ec:	mov	r3, #0
   126f0:	str	r3, [sp, #16]
   126f4:	str	r2, [sp, #12]
   126f8:	movw	r3, #10356	; 0x2874
   126fc:	movt	r3, #3
   12700:	str	r3, [sp, #8]
   12704:	mvn	r2, #0
   12708:	mvn	r3, #-2147483648	; 0x80000000
   1270c:	strd	r2, [sp]
   12710:	mov	r2, #0
   12714:	mov	r3, #-2147483648	; 0x80000000
   12718:	mov	r0, r4
   1271c:	bl	309a4 <__assert_fail@plt+0x1f6b4>
   12720:	movw	r3, #16712	; 0x4148
   12724:	movt	r3, #4
   12728:	strd	r0, [r3]
   1272c:	b	12aa4 <__assert_fail@plt+0x17b4>
   12730:	movw	r3, #16856	; 0x41d8
   12734:	movt	r3, #4
   12738:	ldr	r4, [r3]
   1273c:	movw	r0, #12980	; 0x32b4
   12740:	movt	r0, #3
   12744:	bl	111c4 <gettext@plt>
   12748:	mov	r2, r0
   1274c:	mov	r3, #0
   12750:	str	r3, [sp, #16]
   12754:	str	r2, [sp, #12]
   12758:	movw	r3, #10356	; 0x2874
   1275c:	movt	r3, #3
   12760:	str	r3, [sp, #8]
   12764:	mvn	r2, #0
   12768:	mvn	r3, #-2147483648	; 0x80000000
   1276c:	strd	r2, [sp]
   12770:	mov	r2, #0
   12774:	mov	r3, #-2147483648	; 0x80000000
   12778:	mov	r0, r4
   1277c:	bl	309a4 <__assert_fail@plt+0x1f6b4>
   12780:	movw	r3, #16720	; 0x4150
   12784:	movt	r3, #4
   12788:	strd	r0, [r3]
   1278c:	b	12aa4 <__assert_fail@plt+0x17b4>
   12790:	movw	r3, #16728	; 0x4158
   12794:	movt	r3, #4
   12798:	mov	r2, #0
   1279c:	strb	r2, [r3]
   127a0:	b	12aa4 <__assert_fail@plt+0x17b4>
   127a4:	movw	r3, #16856	; 0x41d8
   127a8:	movt	r3, #4
   127ac:	ldr	r4, [r3]
   127b0:	movw	r0, #13012	; 0x32d4
   127b4:	movt	r0, #3
   127b8:	bl	111c4 <gettext@plt>
   127bc:	mov	r2, r0
   127c0:	mov	r3, #0
   127c4:	str	r3, [sp, #16]
   127c8:	str	r2, [sp, #12]
   127cc:	movw	r3, #10356	; 0x2874
   127d0:	movt	r3, #3
   127d4:	str	r3, [sp, #8]
   127d8:	mvn	r2, #0
   127dc:	mvn	r3, #-2147483648	; 0x80000000
   127e0:	strd	r2, [sp]
   127e4:	mov	r2, #1
   127e8:	mov	r3, #0
   127ec:	mov	r0, r4
   127f0:	bl	309a4 <__assert_fail@plt+0x1f6b4>
   127f4:	movw	r3, #16736	; 0x4160
   127f8:	movt	r3, #4
   127fc:	strd	r0, [r3]
   12800:	b	12aa4 <__assert_fail@plt+0x17b4>
   12804:	movw	r3, #16856	; 0x41d8
   12808:	movt	r3, #4
   1280c:	ldr	r2, [r3]
   12810:	movw	r3, #16704	; 0x4140
   12814:	movt	r3, #4
   12818:	str	r2, [r3]
   1281c:	b	12aa4 <__assert_fail@plt+0x17b4>
   12820:	movw	r3, #16856	; 0x41d8
   12824:	movt	r3, #4
   12828:	ldr	r4, [r3]
   1282c:	movw	r0, #13048	; 0x32f8
   12830:	movt	r0, #3
   12834:	bl	111c4 <gettext@plt>
   12838:	mov	r2, r0
   1283c:	mov	r3, #0
   12840:	str	r3, [sp, #16]
   12844:	str	r2, [sp, #12]
   12848:	movw	r3, #10356	; 0x2874
   1284c:	movt	r3, #3
   12850:	str	r3, [sp, #8]
   12854:	mvn	r2, #-2147483648	; 0x80000000
   12858:	mov	r3, #0
   1285c:	strd	r2, [sp]
   12860:	mov	r2, #1
   12864:	mov	r3, #0
   12868:	mov	r0, r4
   1286c:	bl	309a4 <__assert_fail@plt+0x1f6b4>
   12870:	mov	r2, r0
   12874:	mov	r3, r1
   12878:	movw	r3, #16744	; 0x4168
   1287c:	movt	r3, #4
   12880:	str	r2, [r3]
   12884:	b	12aa4 <__assert_fail@plt+0x17b4>
   12888:	movw	r3, #16856	; 0x41d8
   1288c:	movt	r3, #4
   12890:	ldr	r3, [r3]
   12894:	movw	r1, #13080	; 0x3318
   12898:	movt	r1, #3
   1289c:	mov	r0, r3
   128a0:	bl	11008 <strcmp@plt>
   128a4:	mov	r3, r0
   128a8:	cmp	r3, #0
   128ac:	bne	128c8 <__assert_fail@plt+0x15d8>
   128b0:	movw	r3, #16748	; 0x416c
   128b4:	movt	r3, #4
   128b8:	movw	r2, #10556	; 0x293c
   128bc:	movt	r2, #3
   128c0:	str	r2, [r3]
   128c4:	b	12aa4 <__assert_fail@plt+0x17b4>
   128c8:	movw	r3, #16856	; 0x41d8
   128cc:	movt	r3, #4
   128d0:	ldr	r3, [r3]
   128d4:	movw	r1, #13084	; 0x331c
   128d8:	movt	r1, #3
   128dc:	mov	r0, r3
   128e0:	bl	11008 <strcmp@plt>
   128e4:	mov	r3, r0
   128e8:	cmp	r3, #0
   128ec:	bne	12908 <__assert_fail@plt+0x1618>
   128f0:	movw	r3, #16748	; 0x416c
   128f4:	movt	r3, #4
   128f8:	movw	r2, #10536	; 0x2928
   128fc:	movt	r2, #3
   12900:	str	r2, [r3]
   12904:	b	12aa4 <__assert_fail@plt+0x17b4>
   12908:	movw	r3, #16856	; 0x41d8
   1290c:	movt	r3, #4
   12910:	ldr	r3, [r3]
   12914:	movw	r1, #13088	; 0x3320
   12918:	movt	r1, #3
   1291c:	mov	r0, r3
   12920:	bl	11008 <strcmp@plt>
   12924:	mov	r3, r0
   12928:	cmp	r3, #0
   1292c:	bne	12948 <__assert_fail@plt+0x1658>
   12930:	movw	r3, #16748	; 0x416c
   12934:	movt	r3, #4
   12938:	movw	r2, #10544	; 0x2930
   1293c:	movt	r2, #3
   12940:	str	r2, [r3]
   12944:	b	12aa4 <__assert_fail@plt+0x17b4>
   12948:	movw	r0, #13092	; 0x3324
   1294c:	movt	r0, #3
   12950:	bl	111c4 <gettext@plt>
   12954:	mov	r4, r0
   12958:	movw	r3, #16856	; 0x41d8
   1295c:	movt	r3, #4
   12960:	ldr	r3, [r3]
   12964:	mov	r0, r3
   12968:	bl	15efc <__assert_fail@plt+0x4c0c>
   1296c:	mov	r3, r0
   12970:	mov	r2, r4
   12974:	mov	r1, #0
   12978:	mov	r0, #0
   1297c:	bl	11164 <error@plt>
   12980:	mov	r3, #0
   12984:	strb	r3, [fp, #-13]
   12988:	b	12aa4 <__assert_fail@plt+0x17b4>
   1298c:	movw	r3, #16856	; 0x41d8
   12990:	movt	r3, #4
   12994:	ldr	r3, [r3]
   12998:	mov	r0, r3
   1299c:	bl	111d0 <strlen@plt>
   129a0:	str	r0, [fp, #-28]	; 0xffffffe4
   129a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129a8:	cmp	r3, #1
   129ac:	beq	129bc <__assert_fail@plt+0x16cc>
   129b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129b4:	cmp	r3, #2
   129b8:	bne	12a1c <__assert_fail@plt+0x172c>
   129bc:	movw	r3, #16708	; 0x4144
   129c0:	movt	r3, #4
   129c4:	ldr	r3, [r3]
   129c8:	str	r3, [fp, #-20]	; 0xffffffec
   129cc:	b	12a00 <__assert_fail@plt+0x1710>
   129d0:	movw	r3, #16856	; 0x41d8
   129d4:	movt	r3, #4
   129d8:	ldr	r2, [r3]
   129dc:	add	r1, r2, #1
   129e0:	movw	r3, #16856	; 0x41d8
   129e4:	movt	r3, #4
   129e8:	str	r1, [r3]
   129ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   129f0:	add	r1, r3, #1
   129f4:	str	r1, [fp, #-20]	; 0xffffffec
   129f8:	ldrb	r2, [r2]
   129fc:	strb	r2, [r3]
   12a00:	movw	r3, #16856	; 0x41d8
   12a04:	movt	r3, #4
   12a08:	ldr	r3, [r3]
   12a0c:	ldrb	r3, [r3]
   12a10:	cmp	r3, #0
   12a14:	bne	129d0 <__assert_fail@plt+0x16e0>
   12a18:	b	12a34 <__assert_fail@plt+0x1744>
   12a1c:	movw	r3, #16856	; 0x41d8
   12a20:	movt	r3, #4
   12a24:	ldr	r2, [r3]
   12a28:	movw	r3, #16708	; 0x4144
   12a2c:	movt	r3, #4
   12a30:	str	r2, [r3]
   12a34:	b	12aa4 <__assert_fail@plt+0x17b4>
   12a38:	mov	r0, #0
   12a3c:	bl	11640 <__assert_fail@plt+0x350>
   12a40:	movw	r3, #16852	; 0x41d4
   12a44:	movt	r3, #4
   12a48:	ldr	r0, [r3]
   12a4c:	movw	r3, #16752	; 0x4170
   12a50:	movt	r3, #4
   12a54:	ldr	r2, [r3]
   12a58:	mov	r3, #0
   12a5c:	str	r3, [sp, #8]
   12a60:	movw	r3, #13128	; 0x3348
   12a64:	movt	r3, #3
   12a68:	str	r3, [sp, #4]
   12a6c:	movw	r3, #13144	; 0x3358
   12a70:	movt	r3, #3
   12a74:	str	r3, [sp]
   12a78:	mov	r3, r2
   12a7c:	movw	r2, #10172	; 0x27bc
   12a80:	movt	r2, #3
   12a84:	movw	r1, #12740	; 0x31c4
   12a88:	movt	r1, #3
   12a8c:	bl	2fdb0 <__assert_fail@plt+0x1eac0>
   12a90:	mov	r0, #0
   12a94:	bl	111b8 <exit@plt>
   12a98:	mov	r3, #0
   12a9c:	strb	r3, [fp, #-13]
   12aa0:	nop	{0}
   12aa4:	mov	r3, #0
   12aa8:	str	r3, [sp]
   12aac:	movw	r3, #10796	; 0x2a2c
   12ab0:	movt	r3, #3
   12ab4:	movw	r2, #13160	; 0x3368
   12ab8:	movt	r2, #3
   12abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ac4:	bl	111a0 <getopt_long@plt>
   12ac8:	str	r0, [fp, #-24]	; 0xffffffe8
   12acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ad0:	cmn	r3, #1
   12ad4:	bne	12374 <__assert_fail@plt+0x1084>
   12ad8:	ldrb	r3, [fp, #-13]
   12adc:	eor	r3, r3, #1
   12ae0:	uxtb	r3, r3
   12ae4:	cmp	r3, #0
   12ae8:	beq	12af4 <__assert_fail@plt+0x1804>
   12aec:	mov	r0, #1
   12af0:	bl	11640 <__assert_fail@plt+0x350>
   12af4:	movw	r3, #16708	; 0x4144
   12af8:	movt	r3, #4
   12afc:	ldr	r3, [r3]
   12b00:	mov	r0, r3
   12b04:	bl	111d0 <strlen@plt>
   12b08:	str	r0, [fp, #-28]	; 0xffffffe4
   12b0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b10:	mov	r3, r2
   12b14:	lsl	r3, r3, #1
   12b18:	add	r2, r3, r2
   12b1c:	movw	r3, #17740	; 0x454c
   12b20:	movt	r3, #4
   12b24:	str	r2, [r3]
   12b28:	movw	r3, #17740	; 0x454c
   12b2c:	movt	r3, #4
   12b30:	ldr	r3, [r3]
   12b34:	add	r3, r3, #1
   12b38:	mov	r0, r3
   12b3c:	bl	2ff30 <__assert_fail@plt+0x1ec40>
   12b40:	mov	r3, r0
   12b44:	mov	r2, r3
   12b48:	movw	r3, #17736	; 0x4548
   12b4c:	movt	r3, #4
   12b50:	str	r2, [r3]
   12b54:	movw	r3, #17736	; 0x4548
   12b58:	movt	r3, #4
   12b5c:	ldr	r2, [r3]
   12b60:	movw	r3, #16708	; 0x4144
   12b64:	movt	r3, #4
   12b68:	ldr	r3, [r3]
   12b6c:	mov	r1, r3
   12b70:	mov	r0, r2
   12b74:	bl	110c8 <stpcpy@plt>
   12b78:	mov	r2, r0
   12b7c:	movw	r3, #16708	; 0x4144
   12b80:	movt	r3, #4
   12b84:	ldr	r3, [r3]
   12b88:	mov	r1, r3
   12b8c:	mov	r0, r2
   12b90:	bl	110c8 <stpcpy@plt>
   12b94:	mov	r2, r0
   12b98:	movw	r3, #16708	; 0x4144
   12b9c:	movt	r3, #4
   12ba0:	ldr	r3, [r3]
   12ba4:	mov	r1, r3
   12ba8:	mov	r0, r2
   12bac:	bl	11134 <strcpy@plt>
   12bb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12bb4:	lsl	r2, r3, #1
   12bb8:	movw	r3, #17748	; 0x4554
   12bbc:	movt	r3, #4
   12bc0:	str	r2, [r3]
   12bc4:	movw	r3, #17736	; 0x4548
   12bc8:	movt	r3, #4
   12bcc:	ldr	r2, [r3]
   12bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12bd4:	add	r2, r2, r3
   12bd8:	movw	r3, #17744	; 0x4550
   12bdc:	movt	r3, #4
   12be0:	str	r2, [r3]
   12be4:	movw	r3, #17756	; 0x455c
   12be8:	movt	r3, #4
   12bec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12bf0:	str	r2, [r3]
   12bf4:	movw	r3, #17744	; 0x4550
   12bf8:	movt	r3, #4
   12bfc:	ldr	r2, [r3]
   12c00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c04:	add	r2, r2, r3
   12c08:	movw	r3, #17752	; 0x4558
   12c0c:	movt	r3, #4
   12c10:	str	r2, [r3]
   12c14:	movw	r0, #17760	; 0x4560
   12c18:	movt	r0, #4
   12c1c:	bl	13350 <__assert_fail@plt+0x2060>
   12c20:	movw	r3, #16704	; 0x4140
   12c24:	movt	r3, #4
   12c28:	ldr	r3, [r3]
   12c2c:	mov	r0, r3
   12c30:	bl	111d0 <strlen@plt>
   12c34:	str	r0, [fp, #-28]	; 0xffffffe4
   12c38:	movw	r3, #16744	; 0x4168
   12c3c:	movt	r3, #4
   12c40:	ldr	r3, [r3]
   12c44:	mov	r2, r3
   12c48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c4c:	add	r3, r2, r3
   12c50:	add	r3, r3, #1
   12c54:	mov	r0, r3
   12c58:	bl	2ff30 <__assert_fail@plt+0x1ec40>
   12c5c:	mov	r3, r0
   12c60:	mov	r2, r3
   12c64:	movw	r3, #17772	; 0x456c
   12c68:	movt	r3, #4
   12c6c:	str	r2, [r3]
   12c70:	movw	r3, #17772	; 0x456c
   12c74:	movt	r3, #4
   12c78:	ldr	r0, [r3]
   12c7c:	movw	r3, #16744	; 0x4168
   12c80:	movt	r3, #4
   12c84:	ldr	r3, [r3]
   12c88:	mov	r2, r3
   12c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c90:	add	r3, r2, r3
   12c94:	mov	r2, r3
   12c98:	mov	r1, #32
   12c9c:	bl	11218 <memset@plt>
   12ca0:	movw	r3, #17772	; 0x456c
   12ca4:	movt	r3, #4
   12ca8:	ldr	r2, [r3]
   12cac:	movw	r3, #16744	; 0x4168
   12cb0:	movt	r3, #4
   12cb4:	ldr	r3, [r3]
   12cb8:	mov	r1, r3
   12cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12cc0:	add	r3, r1, r3
   12cc4:	add	r3, r2, r3
   12cc8:	mov	r2, #0
   12ccc:	strb	r2, [r3]
   12cd0:	movw	r3, #16712	; 0x4148
   12cd4:	movt	r3, #4
   12cd8:	ldrd	r0, [r3]
   12cdc:	movw	r3, #17776	; 0x4570
   12ce0:	movt	r3, #4
   12ce4:	strd	r0, [r3]
   12ce8:	movw	r3, #16692	; 0x4134
   12cec:	movt	r3, #4
   12cf0:	ldr	r2, [r3]
   12cf4:	movw	r3, #16864	; 0x41e0
   12cf8:	movt	r3, #4
   12cfc:	str	r2, [r3]
   12d00:	movw	r3, #17732	; 0x4544
   12d04:	movt	r3, #4
   12d08:	movw	r2, #16868	; 0x41e4
   12d0c:	movt	r2, #4
   12d10:	str	r2, [r3]
   12d14:	movw	r3, #16832	; 0x41c0
   12d18:	movt	r3, #4
   12d1c:	ldr	r3, [r3]
   12d20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12d24:	cmp	r2, r3
   12d28:	bne	12da4 <__assert_fail@plt+0x1ab4>
   12d2c:	movw	r0, #12808	; 0x3208
   12d30:	movt	r0, #3
   12d34:	bl	1214c <__assert_fail@plt+0xe5c>
   12d38:	mov	r3, r0
   12d3c:	strb	r3, [fp, #-13]
   12d40:	b	12dbc <__assert_fail@plt+0x1acc>
   12d44:	movw	r3, #16832	; 0x41c0
   12d48:	movt	r3, #4
   12d4c:	ldr	r3, [r3]
   12d50:	lsl	r3, r3, #2
   12d54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12d58:	add	r3, r2, r3
   12d5c:	ldr	r3, [r3]
   12d60:	mov	r0, r3
   12d64:	bl	1214c <__assert_fail@plt+0xe5c>
   12d68:	mov	r3, r0
   12d6c:	mov	r2, r3
   12d70:	ldrb	r3, [fp, #-13]
   12d74:	and	r3, r3, r2
   12d78:	cmp	r3, #0
   12d7c:	movne	r3, #1
   12d80:	moveq	r3, #0
   12d84:	strb	r3, [fp, #-13]
   12d88:	movw	r3, #16832	; 0x41c0
   12d8c:	movt	r3, #4
   12d90:	ldr	r3, [r3]
   12d94:	add	r2, r3, #1
   12d98:	movw	r3, #16832	; 0x41c0
   12d9c:	movt	r3, #4
   12da0:	str	r2, [r3]
   12da4:	movw	r3, #16832	; 0x41c0
   12da8:	movt	r3, #4
   12dac:	ldr	r3, [r3]
   12db0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12db4:	cmp	r2, r3
   12db8:	bgt	12d44 <__assert_fail@plt+0x1a54>
   12dbc:	movw	r3, #17785	; 0x4579
   12dc0:	movt	r3, #4
   12dc4:	ldrb	r3, [r3]
   12dc8:	cmp	r3, #0
   12dcc:	beq	12e10 <__assert_fail@plt+0x1b20>
   12dd0:	movw	r3, #16848	; 0x41d0
   12dd4:	movt	r3, #4
   12dd8:	ldr	r3, [r3]
   12ddc:	mov	r0, r3
   12de0:	bl	1309c <__assert_fail@plt+0x1dac>
   12de4:	mov	r3, r0
   12de8:	cmn	r3, #1
   12dec:	bne	12e10 <__assert_fail@plt+0x1b20>
   12df0:	bl	111f4 <__errno_location@plt>
   12df4:	mov	r3, r0
   12df8:	ldr	r3, [r3]
   12dfc:	movw	r2, #12808	; 0x3208
   12e00:	movt	r2, #3
   12e04:	mov	r1, r3
   12e08:	mov	r0, #1
   12e0c:	bl	11164 <error@plt>
   12e10:	ldrb	r3, [fp, #-13]
   12e14:	eor	r3, r3, #1
   12e18:	uxtb	r3, r3
   12e1c:	mov	r0, r3
   12e20:	sub	sp, fp, #8
   12e24:	ldr	r4, [sp]
   12e28:	ldr	fp, [sp, #4]
   12e2c:	add	sp, sp, #8
   12e30:	pop	{pc}		; (ldr pc, [sp], #4)
   12e34:	push	{fp}		; (str fp, [sp, #-4]!)
   12e38:	add	fp, sp, #0
   12e3c:	sub	sp, sp, #12
   12e40:	str	r0, [fp, #-8]
   12e44:	movw	r3, #17800	; 0x4588
   12e48:	movt	r3, #4
   12e4c:	ldr	r2, [fp, #-8]
   12e50:	str	r2, [r3]
   12e54:	nop	{0}
   12e58:	add	sp, fp, #0
   12e5c:	pop	{fp}		; (ldr fp, [sp], #4)
   12e60:	bx	lr
   12e64:	push	{fp}		; (str fp, [sp, #-4]!)
   12e68:	add	fp, sp, #0
   12e6c:	sub	sp, sp, #12
   12e70:	mov	r3, r0
   12e74:	strb	r3, [fp, #-5]
   12e78:	movw	r3, #17804	; 0x458c
   12e7c:	movt	r3, #4
   12e80:	ldrb	r2, [fp, #-5]
   12e84:	strb	r2, [r3]
   12e88:	nop	{0}
   12e8c:	add	sp, fp, #0
   12e90:	pop	{fp}		; (ldr fp, [sp], #4)
   12e94:	bx	lr
   12e98:	str	r4, [sp, #-12]!
   12e9c:	str	fp, [sp, #4]
   12ea0:	str	lr, [sp, #8]
   12ea4:	add	fp, sp, #8
   12ea8:	sub	sp, sp, #20
   12eac:	movw	r3, #16852	; 0x41d4
   12eb0:	movt	r3, #4
   12eb4:	ldr	r3, [r3]
   12eb8:	mov	r0, r3
   12ebc:	bl	31540 <__assert_fail@plt+0x20250>
   12ec0:	mov	r3, r0
   12ec4:	cmp	r3, #0
   12ec8:	beq	12f9c <__assert_fail@plt+0x1cac>
   12ecc:	movw	r3, #17804	; 0x458c
   12ed0:	movt	r3, #4
   12ed4:	ldrb	r3, [r3]
   12ed8:	eor	r3, r3, #1
   12edc:	uxtb	r3, r3
   12ee0:	cmp	r3, #0
   12ee4:	bne	12efc <__assert_fail@plt+0x1c0c>
   12ee8:	bl	111f4 <__errno_location@plt>
   12eec:	mov	r3, r0
   12ef0:	ldr	r3, [r3]
   12ef4:	cmp	r3, #32
   12ef8:	beq	12f9c <__assert_fail@plt+0x1cac>
   12efc:	movw	r0, #13200	; 0x3390
   12f00:	movt	r0, #3
   12f04:	bl	111c4 <gettext@plt>
   12f08:	str	r0, [fp, #-16]
   12f0c:	movw	r3, #17800	; 0x4588
   12f10:	movt	r3, #4
   12f14:	ldr	r3, [r3]
   12f18:	cmp	r3, #0
   12f1c:	beq	12f68 <__assert_fail@plt+0x1c78>
   12f20:	bl	111f4 <__errno_location@plt>
   12f24:	mov	r3, r0
   12f28:	ldr	r4, [r3]
   12f2c:	movw	r3, #17800	; 0x4588
   12f30:	movt	r3, #4
   12f34:	ldr	r3, [r3]
   12f38:	mov	r0, r3
   12f3c:	bl	15b88 <__assert_fail@plt+0x4898>
   12f40:	mov	r2, r0
   12f44:	ldr	r3, [fp, #-16]
   12f48:	str	r3, [sp]
   12f4c:	mov	r3, r2
   12f50:	movw	r2, #13212	; 0x339c
   12f54:	movt	r2, #3
   12f58:	mov	r1, r4
   12f5c:	mov	r0, #0
   12f60:	bl	11164 <error@plt>
   12f64:	b	12f88 <__assert_fail@plt+0x1c98>
   12f68:	bl	111f4 <__errno_location@plt>
   12f6c:	mov	r3, r0
   12f70:	ldr	r1, [r3]
   12f74:	ldr	r3, [fp, #-16]
   12f78:	movw	r2, #13220	; 0x33a4
   12f7c:	movt	r2, #3
   12f80:	mov	r0, #0
   12f84:	bl	11164 <error@plt>
   12f88:	movw	r3, #16756	; 0x4174
   12f8c:	movt	r3, #4
   12f90:	ldr	r3, [r3]
   12f94:	mov	r0, r3
   12f98:	bl	11068 <_exit@plt>
   12f9c:	movw	r3, #16840	; 0x41c8
   12fa0:	movt	r3, #4
   12fa4:	ldr	r3, [r3]
   12fa8:	mov	r0, r3
   12fac:	bl	31540 <__assert_fail@plt+0x20250>
   12fb0:	mov	r3, r0
   12fb4:	cmp	r3, #0
   12fb8:	beq	12fd0 <__assert_fail@plt+0x1ce0>
   12fbc:	movw	r3, #16756	; 0x4174
   12fc0:	movt	r3, #4
   12fc4:	ldr	r3, [r3]
   12fc8:	mov	r0, r3
   12fcc:	bl	11068 <_exit@plt>
   12fd0:	nop	{0}
   12fd4:	sub	sp, fp, #8
   12fd8:	ldr	r4, [sp]
   12fdc:	ldr	fp, [sp, #4]
   12fe0:	add	sp, sp, #8
   12fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   12fe8:	str	fp, [sp, #-8]!
   12fec:	str	lr, [sp, #4]
   12ff0:	add	fp, sp, #4
   12ff4:	sub	sp, sp, #40	; 0x28
   12ff8:	str	r0, [fp, #-16]
   12ffc:	strd	r2, [fp, #-28]	; 0xffffffe4
   13000:	ldr	r3, [fp, #12]
   13004:	str	r3, [sp, #8]
   13008:	ldrd	r2, [fp, #4]
   1300c:	strd	r2, [sp]
   13010:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13014:	ldr	r0, [fp, #-16]
   13018:	bl	11014 <posix_fadvise64@plt>
   1301c:	str	r0, [fp, #-8]
   13020:	nop	{0}
   13024:	sub	sp, fp, #4
   13028:	ldr	fp, [sp]
   1302c:	add	sp, sp, #4
   13030:	pop	{pc}		; (ldr pc, [sp], #4)
   13034:	str	fp, [sp, #-8]!
   13038:	str	lr, [sp, #4]
   1303c:	add	fp, sp, #4
   13040:	sub	sp, sp, #24
   13044:	str	r0, [fp, #-8]
   13048:	str	r1, [fp, #-12]
   1304c:	ldr	r3, [fp, #-8]
   13050:	cmp	r3, #0
   13054:	beq	13088 <__assert_fail@plt+0x1d98>
   13058:	ldr	r0, [fp, #-8]
   1305c:	bl	11230 <fileno@plt>
   13060:	mov	r1, r0
   13064:	ldr	r3, [fp, #-12]
   13068:	str	r3, [sp, #8]
   1306c:	mov	r2, #0
   13070:	mov	r3, #0
   13074:	strd	r2, [sp]
   13078:	mov	r2, #0
   1307c:	mov	r3, #0
   13080:	mov	r0, r1
   13084:	bl	12fe8 <__assert_fail@plt+0x1cf8>
   13088:	nop	{0}
   1308c:	sub	sp, fp, #4
   13090:	ldr	fp, [sp]
   13094:	add	sp, sp, #4
   13098:	pop	{pc}		; (ldr pc, [sp], #4)
   1309c:	str	fp, [sp, #-8]!
   130a0:	str	lr, [sp, #4]
   130a4:	add	fp, sp, #4
   130a8:	sub	sp, sp, #32
   130ac:	str	r0, [fp, #-24]	; 0xffffffe8
   130b0:	mov	r3, #0
   130b4:	str	r3, [fp, #-8]
   130b8:	mov	r3, #0
   130bc:	str	r3, [fp, #-12]
   130c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130c4:	bl	11230 <fileno@plt>
   130c8:	str	r0, [fp, #-16]
   130cc:	ldr	r3, [fp, #-16]
   130d0:	cmp	r3, #0
   130d4:	bge	130e8 <__assert_fail@plt+0x1df8>
   130d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130dc:	bl	11248 <fclose@plt>
   130e0:	mov	r3, r0
   130e4:	b	1318c <__assert_fail@plt+0x1e9c>
   130e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130ec:	bl	11188 <__freading@plt>
   130f0:	mov	r3, r0
   130f4:	cmp	r3, #0
   130f8:	beq	13134 <__assert_fail@plt+0x1e44>
   130fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13100:	bl	11230 <fileno@plt>
   13104:	mov	r1, r0
   13108:	mov	r3, #1
   1310c:	str	r3, [sp]
   13110:	mov	r2, #0
   13114:	mov	r3, #0
   13118:	mov	r0, r1
   1311c:	bl	1111c <lseek64@plt>
   13120:	mvn	r2, #0
   13124:	mvn	r3, #0
   13128:	cmp	r1, r3
   1312c:	cmpeq	r0, r2
   13130:	beq	13158 <__assert_fail@plt+0x1e68>
   13134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13138:	bl	131f4 <__assert_fail@plt+0x1f04>
   1313c:	mov	r3, r0
   13140:	cmp	r3, #0
   13144:	beq	13158 <__assert_fail@plt+0x1e68>
   13148:	bl	111f4 <__errno_location@plt>
   1314c:	mov	r3, r0
   13150:	ldr	r3, [r3]
   13154:	str	r3, [fp, #-8]
   13158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1315c:	bl	11248 <fclose@plt>
   13160:	str	r0, [fp, #-12]
   13164:	ldr	r3, [fp, #-8]
   13168:	cmp	r3, #0
   1316c:	beq	13188 <__assert_fail@plt+0x1e98>
   13170:	bl	111f4 <__errno_location@plt>
   13174:	mov	r2, r0
   13178:	ldr	r3, [fp, #-8]
   1317c:	str	r3, [r2]
   13180:	mvn	r3, #0
   13184:	str	r3, [fp, #-12]
   13188:	ldr	r3, [fp, #-12]
   1318c:	mov	r0, r3
   13190:	sub	sp, fp, #4
   13194:	ldr	fp, [sp]
   13198:	add	sp, sp, #4
   1319c:	pop	{pc}		; (ldr pc, [sp], #4)
   131a0:	str	fp, [sp, #-8]!
   131a4:	str	lr, [sp, #4]
   131a8:	add	fp, sp, #4
   131ac:	sub	sp, sp, #16
   131b0:	str	r0, [fp, #-8]
   131b4:	ldr	r3, [fp, #-8]
   131b8:	ldr	r3, [r3]
   131bc:	and	r3, r3, #256	; 0x100
   131c0:	cmp	r3, #0
   131c4:	beq	131e0 <__assert_fail@plt+0x1ef0>
   131c8:	mov	r3, #1
   131cc:	str	r3, [sp]
   131d0:	mov	r2, #0
   131d4:	mov	r3, #0
   131d8:	ldr	r0, [fp, #-8]
   131dc:	bl	13260 <__assert_fail@plt+0x1f70>
   131e0:	nop	{0}
   131e4:	sub	sp, fp, #4
   131e8:	ldr	fp, [sp]
   131ec:	add	sp, sp, #4
   131f0:	pop	{pc}		; (ldr pc, [sp], #4)
   131f4:	str	fp, [sp, #-8]!
   131f8:	str	lr, [sp, #4]
   131fc:	add	fp, sp, #4
   13200:	sub	sp, sp, #8
   13204:	str	r0, [fp, #-8]
   13208:	ldr	r3, [fp, #-8]
   1320c:	cmp	r3, #0
   13210:	beq	13228 <__assert_fail@plt+0x1f38>
   13214:	ldr	r0, [fp, #-8]
   13218:	bl	11188 <__freading@plt>
   1321c:	mov	r3, r0
   13220:	cmp	r3, #0
   13224:	bne	13238 <__assert_fail@plt+0x1f48>
   13228:	ldr	r0, [fp, #-8]
   1322c:	bl	11038 <fflush@plt>
   13230:	mov	r3, r0
   13234:	b	1324c <__assert_fail@plt+0x1f5c>
   13238:	ldr	r0, [fp, #-8]
   1323c:	bl	131a0 <__assert_fail@plt+0x1eb0>
   13240:	ldr	r0, [fp, #-8]
   13244:	bl	11038 <fflush@plt>
   13248:	mov	r3, r0
   1324c:	mov	r0, r3
   13250:	sub	sp, fp, #4
   13254:	ldr	fp, [sp]
   13258:	add	sp, sp, #4
   1325c:	pop	{pc}		; (ldr pc, [sp], #4)
   13260:	str	fp, [sp, #-8]!
   13264:	str	lr, [sp, #4]
   13268:	add	fp, sp, #4
   1326c:	sub	sp, sp, #32
   13270:	str	r0, [fp, #-16]
   13274:	strd	r2, [fp, #-28]	; 0xffffffe4
   13278:	ldr	r3, [fp, #-16]
   1327c:	ldr	r2, [r3, #8]
   13280:	ldr	r3, [fp, #-16]
   13284:	ldr	r3, [r3, #4]
   13288:	cmp	r2, r3
   1328c:	bne	13324 <__assert_fail@plt+0x2034>
   13290:	ldr	r3, [fp, #-16]
   13294:	ldr	r2, [r3, #20]
   13298:	ldr	r3, [fp, #-16]
   1329c:	ldr	r3, [r3, #16]
   132a0:	cmp	r2, r3
   132a4:	bne	13324 <__assert_fail@plt+0x2034>
   132a8:	ldr	r3, [fp, #-16]
   132ac:	ldr	r3, [r3, #36]	; 0x24
   132b0:	cmp	r3, #0
   132b4:	bne	13324 <__assert_fail@plt+0x2034>
   132b8:	ldr	r0, [fp, #-16]
   132bc:	bl	11230 <fileno@plt>
   132c0:	mov	r1, r0
   132c4:	ldr	r3, [fp, #4]
   132c8:	str	r3, [sp]
   132cc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   132d0:	mov	r0, r1
   132d4:	bl	1111c <lseek64@plt>
   132d8:	strd	r0, [fp, #-12]
   132dc:	ldrd	r2, [fp, #-12]
   132e0:	mvn	r0, #0
   132e4:	mvn	r1, #0
   132e8:	cmp	r3, r1
   132ec:	cmpeq	r2, r0
   132f0:	bne	132fc <__assert_fail@plt+0x200c>
   132f4:	mvn	r3, #0
   132f8:	b	1333c <__assert_fail@plt+0x204c>
   132fc:	ldr	r3, [fp, #-16]
   13300:	ldr	r3, [r3]
   13304:	bic	r2, r3, #16
   13308:	ldr	r3, [fp, #-16]
   1330c:	str	r2, [r3]
   13310:	ldr	r1, [fp, #-16]
   13314:	ldrd	r2, [fp, #-12]
   13318:	strd	r2, [r1, #80]	; 0x50
   1331c:	mov	r3, #0
   13320:	b	1333c <__assert_fail@plt+0x204c>
   13324:	ldr	r3, [fp, #4]
   13328:	str	r3, [sp]
   1332c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13330:	ldr	r0, [fp, #-16]
   13334:	bl	11254 <fseeko64@plt>
   13338:	mov	r3, r0
   1333c:	mov	r0, r3
   13340:	sub	sp, fp, #4
   13344:	ldr	fp, [sp]
   13348:	add	sp, sp, #4
   1334c:	pop	{pc}		; (ldr pc, [sp], #4)
   13350:	str	fp, [sp, #-8]!
   13354:	str	lr, [sp, #4]
   13358:	add	fp, sp, #4
   1335c:	sub	sp, sp, #8
   13360:	str	r0, [fp, #-8]
   13364:	mov	r2, #12
   13368:	mov	r1, #0
   1336c:	ldr	r0, [fp, #-8]
   13370:	bl	11218 <memset@plt>
   13374:	nop	{0}
   13378:	sub	sp, fp, #4
   1337c:	ldr	fp, [sp]
   13380:	add	sp, sp, #4
   13384:	pop	{pc}		; (ldr pc, [sp], #4)
   13388:	str	fp, [sp, #-8]!
   1338c:	str	lr, [sp, #4]
   13390:	add	fp, sp, #4
   13394:	sub	sp, sp, #8
   13398:	str	r0, [fp, #-8]
   1339c:	str	r1, [fp, #-12]
   133a0:	mov	r2, #10
   133a4:	ldr	r1, [fp, #-12]
   133a8:	ldr	r0, [fp, #-8]
   133ac:	bl	133c8 <__assert_fail@plt+0x20d8>
   133b0:	mov	r3, r0
   133b4:	mov	r0, r3
   133b8:	sub	sp, fp, #4
   133bc:	ldr	fp, [sp]
   133c0:	add	sp, sp, #4
   133c4:	pop	{pc}		; (ldr pc, [sp], #4)
   133c8:	str	fp, [sp, #-8]!
   133cc:	str	lr, [sp, #4]
   133d0:	add	fp, sp, #4
   133d4:	sub	sp, sp, #48	; 0x30
   133d8:	str	r0, [fp, #-32]	; 0xffffffe0
   133dc:	str	r1, [fp, #-36]	; 0xffffffdc
   133e0:	mov	r3, r2
   133e4:	strb	r3, [fp, #-37]	; 0xffffffdb
   133e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133ec:	ldr	r3, [r3, #8]
   133f0:	str	r3, [fp, #-12]
   133f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133f8:	ldr	r3, [r3, #8]
   133fc:	str	r3, [fp, #-16]
   13400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13404:	ldr	r3, [r3]
   13408:	mov	r2, r3
   1340c:	ldr	r3, [fp, #-12]
   13410:	add	r3, r3, r2
   13414:	str	r3, [fp, #-20]	; 0xffffffec
   13418:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1341c:	bl	112d8 <feof_unlocked@plt>
   13420:	mov	r3, r0
   13424:	cmp	r3, #0
   13428:	beq	13434 <__assert_fail@plt+0x2144>
   1342c:	mov	r3, #0
   13430:	b	13550 <__assert_fail@plt+0x2260>
   13434:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13438:	bl	110e0 <getc_unlocked@plt>
   1343c:	str	r0, [fp, #-8]
   13440:	ldr	r3, [fp, #-8]
   13444:	cmn	r3, #1
   13448:	bne	13498 <__assert_fail@plt+0x21a8>
   1344c:	ldr	r2, [fp, #-16]
   13450:	ldr	r3, [fp, #-12]
   13454:	cmp	r2, r3
   13458:	beq	13470 <__assert_fail@plt+0x2180>
   1345c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13460:	bl	1114c <ferror_unlocked@plt>
   13464:	mov	r3, r0
   13468:	cmp	r3, #0
   1346c:	beq	13478 <__assert_fail@plt+0x2188>
   13470:	mov	r3, #0
   13474:	b	13550 <__assert_fail@plt+0x2260>
   13478:	ldr	r3, [fp, #-16]
   1347c:	sub	r3, r3, #1
   13480:	ldrb	r3, [r3]
   13484:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   13488:	cmp	r2, r3
   1348c:	beq	13534 <__assert_fail@plt+0x2244>
   13490:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13494:	str	r3, [fp, #-8]
   13498:	ldr	r2, [fp, #-16]
   1349c:	ldr	r3, [fp, #-20]	; 0xffffffec
   134a0:	cmp	r2, r3
   134a4:	bne	13508 <__assert_fail@plt+0x2218>
   134a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134ac:	ldr	r3, [r3]
   134b0:	str	r3, [fp, #-24]	; 0xffffffe8
   134b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   134b8:	mov	r3, #1
   134bc:	str	r3, [sp]
   134c0:	mvn	r3, #0
   134c4:	mov	r2, #1
   134c8:	ldr	r0, [fp, #-12]
   134cc:	bl	30310 <__assert_fail@plt+0x1f020>
   134d0:	str	r0, [fp, #-12]
   134d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134d8:	ldr	r2, [fp, #-12]
   134dc:	add	r3, r2, r3
   134e0:	str	r3, [fp, #-16]
   134e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134e8:	ldr	r2, [fp, #-12]
   134ec:	str	r2, [r3, #8]
   134f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134f4:	ldr	r3, [r3]
   134f8:	mov	r2, r3
   134fc:	ldr	r3, [fp, #-12]
   13500:	add	r3, r3, r2
   13504:	str	r3, [fp, #-20]	; 0xffffffec
   13508:	ldr	r3, [fp, #-16]
   1350c:	add	r2, r3, #1
   13510:	str	r2, [fp, #-16]
   13514:	ldr	r2, [fp, #-8]
   13518:	uxtb	r2, r2
   1351c:	strb	r2, [r3]
   13520:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13524:	ldr	r2, [fp, #-8]
   13528:	cmp	r2, r3
   1352c:	bne	13434 <__assert_fail@plt+0x2144>
   13530:	b	13538 <__assert_fail@plt+0x2248>
   13534:	nop	{0}
   13538:	ldr	r2, [fp, #-16]
   1353c:	ldr	r3, [fp, #-12]
   13540:	sub	r2, r2, r3
   13544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13548:	str	r2, [r3, #4]
   1354c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13550:	mov	r0, r3
   13554:	sub	sp, fp, #4
   13558:	ldr	fp, [sp]
   1355c:	add	sp, sp, #4
   13560:	pop	{pc}		; (ldr pc, [sp], #4)
   13564:	str	fp, [sp, #-8]!
   13568:	str	lr, [sp, #4]
   1356c:	add	fp, sp, #4
   13570:	sub	sp, sp, #8
   13574:	str	r0, [fp, #-8]
   13578:	ldr	r3, [fp, #-8]
   1357c:	ldr	r3, [r3, #8]
   13580:	mov	r0, r3
   13584:	bl	31b28 <__assert_fail@plt+0x20838>
   13588:	nop	{0}
   1358c:	sub	sp, fp, #4
   13590:	ldr	fp, [sp]
   13594:	add	sp, sp, #4
   13598:	pop	{pc}		; (ldr pc, [sp], #4)
   1359c:	str	fp, [sp, #-8]!
   135a0:	str	lr, [sp, #4]
   135a4:	add	fp, sp, #4
   135a8:	sub	sp, sp, #16
   135ac:	str	r0, [fp, #-16]
   135b0:	ldr	r3, [fp, #-16]
   135b4:	cmp	r3, #0
   135b8:	bne	135e0 <__assert_fail@plt+0x22f0>
   135bc:	movw	r3, #16840	; 0x41c8
   135c0:	movt	r3, #4
   135c4:	ldr	r3, [r3]
   135c8:	mov	r2, #55	; 0x37
   135cc:	mov	r1, #1
   135d0:	movw	r0, #13224	; 0x33a8
   135d4:	movt	r0, #3
   135d8:	bl	11110 <fwrite@plt>
   135dc:	bl	112cc <abort@plt>
   135e0:	mov	r1, #47	; 0x2f
   135e4:	ldr	r0, [fp, #-16]
   135e8:	bl	11278 <strrchr@plt>
   135ec:	str	r0, [fp, #-8]
   135f0:	ldr	r3, [fp, #-8]
   135f4:	cmp	r3, #0
   135f8:	beq	13608 <__assert_fail@plt+0x2318>
   135fc:	ldr	r3, [fp, #-8]
   13600:	add	r3, r3, #1
   13604:	b	1360c <__assert_fail@plt+0x231c>
   13608:	ldr	r3, [fp, #-16]
   1360c:	str	r3, [fp, #-12]
   13610:	ldr	r2, [fp, #-12]
   13614:	ldr	r3, [fp, #-16]
   13618:	sub	r3, r2, r3
   1361c:	cmp	r3, #6
   13620:	ble	13690 <__assert_fail@plt+0x23a0>
   13624:	ldr	r3, [fp, #-12]
   13628:	sub	r3, r3, #7
   1362c:	mov	r2, #7
   13630:	movw	r1, #13280	; 0x33e0
   13634:	movt	r1, #3
   13638:	mov	r0, r3
   1363c:	bl	112c0 <strncmp@plt>
   13640:	mov	r3, r0
   13644:	cmp	r3, #0
   13648:	bne	13690 <__assert_fail@plt+0x23a0>
   1364c:	ldr	r3, [fp, #-12]
   13650:	str	r3, [fp, #-16]
   13654:	mov	r2, #3
   13658:	movw	r1, #13288	; 0x33e8
   1365c:	movt	r1, #3
   13660:	ldr	r0, [fp, #-12]
   13664:	bl	112c0 <strncmp@plt>
   13668:	mov	r3, r0
   1366c:	cmp	r3, #0
   13670:	bne	13690 <__assert_fail@plt+0x23a0>
   13674:	ldr	r3, [fp, #-12]
   13678:	add	r3, r3, #3
   1367c:	str	r3, [fp, #-16]
   13680:	movw	r3, #16824	; 0x41b8
   13684:	movt	r3, #4
   13688:	ldr	r2, [fp, #-16]
   1368c:	str	r2, [r3]
   13690:	movw	r3, #17808	; 0x4590
   13694:	movt	r3, #4
   13698:	ldr	r2, [fp, #-16]
   1369c:	str	r2, [r3]
   136a0:	movw	r3, #16828	; 0x41bc
   136a4:	movt	r3, #4
   136a8:	ldr	r2, [fp, #-16]
   136ac:	str	r2, [r3]
   136b0:	nop	{0}
   136b4:	sub	sp, fp, #4
   136b8:	ldr	fp, [sp]
   136bc:	add	sp, sp, #4
   136c0:	pop	{pc}		; (ldr pc, [sp], #4)
   136c4:	str	fp, [sp, #-8]!
   136c8:	str	lr, [sp, #4]
   136cc:	add	fp, sp, #4
   136d0:	sub	sp, sp, #16
   136d4:	str	r0, [fp, #-16]
   136d8:	bl	111f4 <__errno_location@plt>
   136dc:	mov	r3, r0
   136e0:	ldr	r3, [r3]
   136e4:	str	r3, [fp, #-8]
   136e8:	ldr	r3, [fp, #-16]
   136ec:	cmp	r3, #0
   136f0:	beq	136fc <__assert_fail@plt+0x240c>
   136f4:	ldr	r3, [fp, #-16]
   136f8:	b	13704 <__assert_fail@plt+0x2414>
   136fc:	movw	r3, #17812	; 0x4594
   13700:	movt	r3, #4
   13704:	mov	r1, #48	; 0x30
   13708:	mov	r0, r3
   1370c:	bl	30650 <__assert_fail@plt+0x1f360>
   13710:	mov	r3, r0
   13714:	str	r3, [fp, #-12]
   13718:	bl	111f4 <__errno_location@plt>
   1371c:	mov	r2, r0
   13720:	ldr	r3, [fp, #-8]
   13724:	str	r3, [r2]
   13728:	ldr	r3, [fp, #-12]
   1372c:	mov	r0, r3
   13730:	sub	sp, fp, #4
   13734:	ldr	fp, [sp]
   13738:	add	sp, sp, #4
   1373c:	pop	{pc}		; (ldr pc, [sp], #4)
   13740:	push	{fp}		; (str fp, [sp, #-4]!)
   13744:	add	fp, sp, #0
   13748:	sub	sp, sp, #12
   1374c:	str	r0, [fp, #-8]
   13750:	ldr	r3, [fp, #-8]
   13754:	cmp	r3, #0
   13758:	beq	13764 <__assert_fail@plt+0x2474>
   1375c:	ldr	r3, [fp, #-8]
   13760:	b	1376c <__assert_fail@plt+0x247c>
   13764:	movw	r3, #17812	; 0x4594
   13768:	movt	r3, #4
   1376c:	ldr	r3, [r3]
   13770:	mov	r0, r3
   13774:	add	sp, fp, #0
   13778:	pop	{fp}		; (ldr fp, [sp], #4)
   1377c:	bx	lr
   13780:	push	{fp}		; (str fp, [sp, #-4]!)
   13784:	add	fp, sp, #0
   13788:	sub	sp, sp, #12
   1378c:	str	r0, [fp, #-8]
   13790:	str	r1, [fp, #-12]
   13794:	ldr	r3, [fp, #-8]
   13798:	cmp	r3, #0
   1379c:	beq	137a8 <__assert_fail@plt+0x24b8>
   137a0:	ldr	r3, [fp, #-8]
   137a4:	b	137b0 <__assert_fail@plt+0x24c0>
   137a8:	movw	r3, #17812	; 0x4594
   137ac:	movt	r3, #4
   137b0:	ldr	r2, [fp, #-12]
   137b4:	str	r2, [r3]
   137b8:	nop	{0}
   137bc:	add	sp, fp, #0
   137c0:	pop	{fp}		; (ldr fp, [sp], #4)
   137c4:	bx	lr
   137c8:	push	{fp}		; (str fp, [sp, #-4]!)
   137cc:	add	fp, sp, #0
   137d0:	sub	sp, sp, #36	; 0x24
   137d4:	str	r0, [fp, #-24]	; 0xffffffe8
   137d8:	mov	r3, r1
   137dc:	str	r2, [fp, #-32]	; 0xffffffe0
   137e0:	strb	r3, [fp, #-25]	; 0xffffffe7
   137e4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   137e8:	strb	r3, [fp, #-5]
   137ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137f0:	cmp	r3, #0
   137f4:	beq	13800 <__assert_fail@plt+0x2510>
   137f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137fc:	b	13808 <__assert_fail@plt+0x2518>
   13800:	movw	r3, #17812	; 0x4594
   13804:	movt	r3, #4
   13808:	add	r2, r3, #8
   1380c:	ldrb	r3, [fp, #-5]
   13810:	lsr	r3, r3, #5
   13814:	uxtb	r3, r3
   13818:	lsl	r3, r3, #2
   1381c:	add	r3, r2, r3
   13820:	str	r3, [fp, #-12]
   13824:	ldrb	r3, [fp, #-5]
   13828:	and	r3, r3, #31
   1382c:	str	r3, [fp, #-16]
   13830:	ldr	r3, [fp, #-12]
   13834:	ldr	r2, [r3]
   13838:	ldr	r3, [fp, #-16]
   1383c:	lsr	r3, r2, r3
   13840:	and	r3, r3, #1
   13844:	str	r3, [fp, #-20]	; 0xffffffec
   13848:	ldr	r3, [fp, #-12]
   1384c:	ldr	r3, [r3]
   13850:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13854:	and	r1, r2, #1
   13858:	ldr	r2, [fp, #-20]	; 0xffffffec
   1385c:	eor	r1, r1, r2
   13860:	ldr	r2, [fp, #-16]
   13864:	lsl	r2, r1, r2
   13868:	eor	r2, r2, r3
   1386c:	ldr	r3, [fp, #-12]
   13870:	str	r2, [r3]
   13874:	ldr	r3, [fp, #-20]	; 0xffffffec
   13878:	mov	r0, r3
   1387c:	add	sp, fp, #0
   13880:	pop	{fp}		; (ldr fp, [sp], #4)
   13884:	bx	lr
   13888:	push	{fp}		; (str fp, [sp, #-4]!)
   1388c:	add	fp, sp, #0
   13890:	sub	sp, sp, #20
   13894:	str	r0, [fp, #-16]
   13898:	str	r1, [fp, #-20]	; 0xffffffec
   1389c:	ldr	r3, [fp, #-16]
   138a0:	cmp	r3, #0
   138a4:	bne	138b4 <__assert_fail@plt+0x25c4>
   138a8:	movw	r3, #17812	; 0x4594
   138ac:	movt	r3, #4
   138b0:	str	r3, [fp, #-16]
   138b4:	ldr	r3, [fp, #-16]
   138b8:	ldr	r3, [r3, #4]
   138bc:	str	r3, [fp, #-8]
   138c0:	ldr	r3, [fp, #-16]
   138c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   138c8:	str	r2, [r3, #4]
   138cc:	ldr	r3, [fp, #-8]
   138d0:	mov	r0, r3
   138d4:	add	sp, fp, #0
   138d8:	pop	{fp}		; (ldr fp, [sp], #4)
   138dc:	bx	lr
   138e0:	str	fp, [sp, #-8]!
   138e4:	str	lr, [sp, #4]
   138e8:	add	fp, sp, #4
   138ec:	sub	sp, sp, #16
   138f0:	str	r0, [fp, #-8]
   138f4:	str	r1, [fp, #-12]
   138f8:	str	r2, [fp, #-16]
   138fc:	ldr	r3, [fp, #-8]
   13900:	cmp	r3, #0
   13904:	bne	13914 <__assert_fail@plt+0x2624>
   13908:	movw	r3, #17812	; 0x4594
   1390c:	movt	r3, #4
   13910:	str	r3, [fp, #-8]
   13914:	ldr	r3, [fp, #-8]
   13918:	mov	r2, #10
   1391c:	str	r2, [r3]
   13920:	ldr	r3, [fp, #-12]
   13924:	cmp	r3, #0
   13928:	beq	13938 <__assert_fail@plt+0x2648>
   1392c:	ldr	r3, [fp, #-16]
   13930:	cmp	r3, #0
   13934:	bne	1393c <__assert_fail@plt+0x264c>
   13938:	bl	112cc <abort@plt>
   1393c:	ldr	r3, [fp, #-8]
   13940:	ldr	r2, [fp, #-12]
   13944:	str	r2, [r3, #40]	; 0x28
   13948:	ldr	r3, [fp, #-8]
   1394c:	ldr	r2, [fp, #-16]
   13950:	str	r2, [r3, #44]	; 0x2c
   13954:	nop	{0}
   13958:	sub	sp, fp, #4
   1395c:	ldr	fp, [sp]
   13960:	add	sp, sp, #4
   13964:	pop	{pc}		; (ldr pc, [sp], #4)
   13968:	str	fp, [sp, #-8]!
   1396c:	str	lr, [sp, #4]
   13970:	add	fp, sp, #4
   13974:	sub	sp, sp, #56	; 0x38
   13978:	str	r0, [fp, #-56]	; 0xffffffc8
   1397c:	str	r1, [fp, #-60]	; 0xffffffc4
   13980:	sub	r1, fp, #52	; 0x34
   13984:	mov	r2, #0
   13988:	mov	r3, #0
   1398c:	strd	r2, [r1]
   13990:	strd	r2, [r1, #8]
   13994:	strd	r2, [r1, #16]
   13998:	strd	r2, [r1, #24]
   1399c:	strd	r2, [r1, #32]
   139a0:	strd	r2, [r1, #40]	; 0x28
   139a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   139a8:	cmp	r3, #10
   139ac:	bne	139b4 <__assert_fail@plt+0x26c4>
   139b0:	bl	112cc <abort@plt>
   139b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   139b8:	str	r3, [fp, #-52]	; 0xffffffcc
   139bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   139c0:	mov	r2, r3
   139c4:	sub	r3, fp, #52	; 0x34
   139c8:	ldrd	r0, [r3]
   139cc:	strd	r0, [r2]
   139d0:	ldrd	r0, [r3, #8]
   139d4:	strd	r0, [r2, #8]
   139d8:	ldrd	r0, [r3, #16]
   139dc:	strd	r0, [r2, #16]
   139e0:	ldrd	r0, [r3, #24]
   139e4:	strd	r0, [r2, #24]
   139e8:	ldrd	r0, [r3, #32]
   139ec:	strd	r0, [r2, #32]
   139f0:	ldrd	r0, [r3, #40]	; 0x28
   139f4:	strd	r0, [r2, #40]	; 0x28
   139f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   139fc:	sub	sp, fp, #4
   13a00:	ldr	fp, [sp]
   13a04:	add	sp, sp, #4
   13a08:	pop	{pc}		; (ldr pc, [sp], #4)
   13a0c:	str	fp, [sp, #-8]!
   13a10:	str	lr, [sp, #4]
   13a14:	add	fp, sp, #4
   13a18:	sub	sp, sp, #16
   13a1c:	str	r0, [fp, #-16]
   13a20:	str	r1, [fp, #-20]	; 0xffffffec
   13a24:	ldr	r0, [fp, #-16]
   13a28:	bl	111c4 <gettext@plt>
   13a2c:	str	r0, [fp, #-8]
   13a30:	ldr	r2, [fp, #-8]
   13a34:	ldr	r3, [fp, #-16]
   13a38:	cmp	r2, r3
   13a3c:	beq	13a48 <__assert_fail@plt+0x2758>
   13a40:	ldr	r3, [fp, #-8]
   13a44:	b	13af8 <__assert_fail@plt+0x2808>
   13a48:	bl	31d48 <__assert_fail@plt+0x20a58>
   13a4c:	str	r0, [fp, #-12]
   13a50:	movw	r1, #13480	; 0x34a8
   13a54:	movt	r1, #3
   13a58:	ldr	r0, [fp, #-12]
   13a5c:	bl	31494 <__assert_fail@plt+0x201a4>
   13a60:	mov	r3, r0
   13a64:	cmp	r3, #0
   13a68:	bne	13a94 <__assert_fail@plt+0x27a4>
   13a6c:	ldr	r3, [fp, #-16]
   13a70:	ldrb	r3, [r3]
   13a74:	cmp	r3, #96	; 0x60
   13a78:	bne	13a88 <__assert_fail@plt+0x2798>
   13a7c:	movw	r3, #13488	; 0x34b0
   13a80:	movt	r3, #3
   13a84:	b	13af8 <__assert_fail@plt+0x2808>
   13a88:	movw	r3, #13492	; 0x34b4
   13a8c:	movt	r3, #3
   13a90:	b	13af8 <__assert_fail@plt+0x2808>
   13a94:	movw	r1, #13496	; 0x34b8
   13a98:	movt	r1, #3
   13a9c:	ldr	r0, [fp, #-12]
   13aa0:	bl	31494 <__assert_fail@plt+0x201a4>
   13aa4:	mov	r3, r0
   13aa8:	cmp	r3, #0
   13aac:	bne	13ad8 <__assert_fail@plt+0x27e8>
   13ab0:	ldr	r3, [fp, #-16]
   13ab4:	ldrb	r3, [r3]
   13ab8:	cmp	r3, #96	; 0x60
   13abc:	bne	13acc <__assert_fail@plt+0x27dc>
   13ac0:	movw	r3, #13504	; 0x34c0
   13ac4:	movt	r3, #3
   13ac8:	b	13af8 <__assert_fail@plt+0x2808>
   13acc:	movw	r3, #13508	; 0x34c4
   13ad0:	movt	r3, #3
   13ad4:	b	13af8 <__assert_fail@plt+0x2808>
   13ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13adc:	cmp	r3, #9
   13ae0:	bne	13af0 <__assert_fail@plt+0x2800>
   13ae4:	movw	r3, #13512	; 0x34c8
   13ae8:	movt	r3, #3
   13aec:	b	13af8 <__assert_fail@plt+0x2808>
   13af0:	movw	r3, #13516	; 0x34cc
   13af4:	movt	r3, #3
   13af8:	mov	r0, r3
   13afc:	sub	sp, fp, #4
   13b00:	ldr	fp, [sp]
   13b04:	add	sp, sp, #4
   13b08:	pop	{pc}		; (ldr pc, [sp], #4)
   13b0c:	str	r4, [sp, #-12]!
   13b10:	str	fp, [sp, #4]
   13b14:	str	lr, [sp, #8]
   13b18:	add	fp, sp, #8
   13b1c:	sub	sp, sp, #116	; 0x74
   13b20:	str	r0, [fp, #-88]	; 0xffffffa8
   13b24:	str	r1, [fp, #-92]	; 0xffffffa4
   13b28:	str	r2, [fp, #-96]	; 0xffffffa0
   13b2c:	str	r3, [fp, #-100]	; 0xffffff9c
   13b30:	mov	r3, #0
   13b34:	str	r3, [fp, #-20]	; 0xffffffec
   13b38:	mov	r3, #0
   13b3c:	str	r3, [fp, #-24]	; 0xffffffe8
   13b40:	mov	r3, #0
   13b44:	str	r3, [fp, #-28]	; 0xffffffe4
   13b48:	mov	r3, #0
   13b4c:	str	r3, [fp, #-32]	; 0xffffffe0
   13b50:	mov	r3, #0
   13b54:	strb	r3, [fp, #-33]	; 0xffffffdf
   13b58:	bl	11128 <__ctype_get_mb_cur_max@plt>
   13b5c:	mov	r3, r0
   13b60:	cmp	r3, #1
   13b64:	moveq	r3, #1
   13b68:	movne	r3, #0
   13b6c:	strb	r3, [fp, #-57]	; 0xffffffc7
   13b70:	ldr	r3, [fp, #8]
   13b74:	and	r3, r3, #2
   13b78:	cmp	r3, #0
   13b7c:	movne	r3, #1
   13b80:	moveq	r3, #0
   13b84:	strb	r3, [fp, #-34]	; 0xffffffde
   13b88:	mov	r3, #0
   13b8c:	strb	r3, [fp, #-35]	; 0xffffffdd
   13b90:	mov	r3, #0
   13b94:	strb	r3, [fp, #-36]	; 0xffffffdc
   13b98:	mov	r3, #1
   13b9c:	strb	r3, [fp, #-37]	; 0xffffffdb
   13ba0:	ldr	r3, [fp, #4]
   13ba4:	cmp	r3, #10
   13ba8:	ldrls	pc, [pc, r3, lsl #2]
   13bac:	b	13dc4 <__assert_fail@plt+0x2ad4>
   13bb0:			; <UNDEFINED> instruction: 0x00013db8
   13bb4:	andeq	r3, r1, r0, lsr sp
   13bb8:	andeq	r3, r1, r4, asr sp
   13bbc:	andeq	r3, r1, r8, lsr #26
   13bc0:	andeq	r3, r1, r8, lsr sp
   13bc4:	andeq	r3, r1, ip, ror #23
   13bc8:	ldrdeq	r3, [r1], -ip
   13bcc:	andeq	r3, r1, r0, asr ip
   13bd0:	andeq	r3, r1, r4, ror #24
   13bd4:	andeq	r3, r1, r4, ror #24
   13bd8:	andeq	r3, r1, r4, ror #24
   13bdc:	mov	r3, #5
   13be0:	str	r3, [fp, #4]
   13be4:	mov	r3, #1
   13be8:	strb	r3, [fp, #-34]	; 0xffffffde
   13bec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13bf0:	eor	r3, r3, #1
   13bf4:	uxtb	r3, r3
   13bf8:	cmp	r3, #0
   13bfc:	beq	13c30 <__assert_fail@plt+0x2940>
   13c00:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c04:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c08:	cmp	r2, r3
   13c0c:	bcs	13c24 <__assert_fail@plt+0x2934>
   13c10:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c18:	add	r3, r2, r3
   13c1c:	mov	r2, #34	; 0x22
   13c20:	strb	r2, [r3]
   13c24:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c28:	add	r3, r3, #1
   13c2c:	str	r3, [fp, #-20]	; 0xffffffec
   13c30:	mov	r3, #1
   13c34:	strb	r3, [fp, #-33]	; 0xffffffdf
   13c38:	movw	r3, #13512	; 0x34c8
   13c3c:	movt	r3, #3
   13c40:	str	r3, [fp, #-28]	; 0xffffffe4
   13c44:	mov	r3, #1
   13c48:	str	r3, [fp, #-32]	; 0xffffffe0
   13c4c:	b	13dc8 <__assert_fail@plt+0x2ad8>
   13c50:	mov	r3, #1
   13c54:	strb	r3, [fp, #-33]	; 0xffffffdf
   13c58:	mov	r3, #0
   13c5c:	strb	r3, [fp, #-34]	; 0xffffffde
   13c60:	b	13dc8 <__assert_fail@plt+0x2ad8>
   13c64:	ldr	r3, [fp, #4]
   13c68:	cmp	r3, #10
   13c6c:	beq	13c98 <__assert_fail@plt+0x29a8>
   13c70:	ldr	r1, [fp, #4]
   13c74:	movw	r0, #13520	; 0x34d0
   13c78:	movt	r0, #3
   13c7c:	bl	13a0c <__assert_fail@plt+0x271c>
   13c80:	str	r0, [fp, #16]
   13c84:	ldr	r1, [fp, #4]
   13c88:	movw	r0, #13516	; 0x34cc
   13c8c:	movt	r0, #3
   13c90:	bl	13a0c <__assert_fail@plt+0x271c>
   13c94:	str	r0, [fp, #20]
   13c98:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13c9c:	eor	r3, r3, #1
   13ca0:	uxtb	r3, r3
   13ca4:	cmp	r3, #0
   13ca8:	beq	13d08 <__assert_fail@plt+0x2a18>
   13cac:	ldr	r3, [fp, #16]
   13cb0:	str	r3, [fp, #-28]	; 0xffffffe4
   13cb4:	b	13cf8 <__assert_fail@plt+0x2a08>
   13cb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13cbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13cc0:	cmp	r2, r3
   13cc4:	bcs	13ce0 <__assert_fail@plt+0x29f0>
   13cc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cd0:	add	r3, r2, r3
   13cd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13cd8:	ldrb	r2, [r2]
   13cdc:	strb	r2, [r3]
   13ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ce4:	add	r3, r3, #1
   13ce8:	str	r3, [fp, #-20]	; 0xffffffec
   13cec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13cf0:	add	r3, r3, #1
   13cf4:	str	r3, [fp, #-28]	; 0xffffffe4
   13cf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13cfc:	ldrb	r3, [r3]
   13d00:	cmp	r3, #0
   13d04:	bne	13cb8 <__assert_fail@plt+0x29c8>
   13d08:	mov	r3, #1
   13d0c:	strb	r3, [fp, #-33]	; 0xffffffdf
   13d10:	ldr	r3, [fp, #20]
   13d14:	str	r3, [fp, #-28]	; 0xffffffe4
   13d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d1c:	bl	111d0 <strlen@plt>
   13d20:	str	r0, [fp, #-32]	; 0xffffffe0
   13d24:	b	13dc8 <__assert_fail@plt+0x2ad8>
   13d28:	mov	r3, #1
   13d2c:	strb	r3, [fp, #-33]	; 0xffffffdf
   13d30:	mov	r3, #1
   13d34:	strb	r3, [fp, #-34]	; 0xffffffde
   13d38:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13d3c:	eor	r3, r3, #1
   13d40:	uxtb	r3, r3
   13d44:	cmp	r3, #0
   13d48:	beq	13d54 <__assert_fail@plt+0x2a64>
   13d4c:	mov	r3, #1
   13d50:	strb	r3, [fp, #-33]	; 0xffffffdf
   13d54:	mov	r3, #2
   13d58:	str	r3, [fp, #4]
   13d5c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13d60:	eor	r3, r3, #1
   13d64:	uxtb	r3, r3
   13d68:	cmp	r3, #0
   13d6c:	beq	13da0 <__assert_fail@plt+0x2ab0>
   13d70:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d74:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13d78:	cmp	r2, r3
   13d7c:	bcs	13d94 <__assert_fail@plt+0x2aa4>
   13d80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d88:	add	r3, r2, r3
   13d8c:	mov	r2, #39	; 0x27
   13d90:	strb	r2, [r3]
   13d94:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d98:	add	r3, r3, #1
   13d9c:	str	r3, [fp, #-20]	; 0xffffffec
   13da0:	movw	r3, #13516	; 0x34cc
   13da4:	movt	r3, #3
   13da8:	str	r3, [fp, #-28]	; 0xffffffe4
   13dac:	mov	r3, #1
   13db0:	str	r3, [fp, #-32]	; 0xffffffe0
   13db4:	b	13dc8 <__assert_fail@plt+0x2ad8>
   13db8:	mov	r3, #0
   13dbc:	strb	r3, [fp, #-34]	; 0xffffffde
   13dc0:	b	13dc8 <__assert_fail@plt+0x2ad8>
   13dc4:	bl	112cc <abort@plt>
   13dc8:	mov	r3, #0
   13dcc:	str	r3, [fp, #-16]
   13dd0:	b	14f6c <__assert_fail@plt+0x3c7c>
   13dd4:	mov	r3, #0
   13dd8:	strb	r3, [fp, #-40]	; 0xffffffd8
   13ddc:	mov	r3, #0
   13de0:	strb	r3, [fp, #-41]	; 0xffffffd7
   13de4:	mov	r3, #0
   13de8:	strb	r3, [fp, #-42]	; 0xffffffd6
   13dec:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13df0:	cmp	r3, #0
   13df4:	beq	13e90 <__assert_fail@plt+0x2ba0>
   13df8:	ldr	r3, [fp, #4]
   13dfc:	cmp	r3, #2
   13e00:	beq	13e90 <__assert_fail@plt+0x2ba0>
   13e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e08:	cmp	r3, #0
   13e0c:	beq	13e90 <__assert_fail@plt+0x2ba0>
   13e10:	ldr	r2, [fp, #-16]
   13e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e18:	add	r4, r2, r3
   13e1c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13e20:	cmn	r3, #1
   13e24:	bne	13e48 <__assert_fail@plt+0x2b58>
   13e28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e2c:	cmp	r3, #1
   13e30:	bls	13e48 <__assert_fail@plt+0x2b58>
   13e34:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13e38:	bl	111d0 <strlen@plt>
   13e3c:	str	r0, [fp, #-100]	; 0xffffff9c
   13e40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13e44:	b	13e4c <__assert_fail@plt+0x2b5c>
   13e48:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13e4c:	cmp	r3, r4
   13e50:	bcc	13e90 <__assert_fail@plt+0x2ba0>
   13e54:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13e58:	ldr	r3, [fp, #-16]
   13e5c:	add	r3, r2, r3
   13e60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e68:	mov	r0, r3
   13e6c:	bl	110bc <memcmp@plt>
   13e70:	mov	r3, r0
   13e74:	cmp	r3, #0
   13e78:	bne	13e90 <__assert_fail@plt+0x2ba0>
   13e7c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13e80:	cmp	r3, #0
   13e84:	bne	15128 <__assert_fail@plt+0x3e38>
   13e88:	mov	r3, #1
   13e8c:	strb	r3, [fp, #-40]	; 0xffffffd8
   13e90:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13e94:	ldr	r3, [fp, #-16]
   13e98:	add	r3, r2, r3
   13e9c:	ldrb	r3, [r3]
   13ea0:	strb	r3, [fp, #-38]	; 0xffffffda
   13ea4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13ea8:	cmp	r3, #126	; 0x7e
   13eac:	ldrls	pc, [pc, r3, lsl #2]
   13eb0:	b	146e8 <__assert_fail@plt+0x33f8>
   13eb4:	strheq	r4, [r1], -r0
   13eb8:	andeq	r4, r1, r8, ror #13
   13ebc:	andeq	r4, r1, r8, ror #13
   13ec0:	andeq	r4, r1, r8, ror #13
   13ec4:	andeq	r4, r1, r8, ror #13
   13ec8:	andeq	r4, r1, r8, ror #13
   13ecc:	andeq	r4, r1, r8, ror #13
   13ed0:	andeq	r4, r1, r4, lsr #9
   13ed4:			; <UNDEFINED> instruction: 0x000144b0
   13ed8:	andeq	r4, r1, r0, ror #9
   13edc:	andeq	r4, r1, r8, asr #9
   13ee0:	andeq	r4, r1, ip, ror #9
   13ee4:			; <UNDEFINED> instruction: 0x000144bc
   13ee8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13eec:	andeq	r4, r1, r8, ror #13
   13ef0:	andeq	r4, r1, r8, ror #13
   13ef4:	andeq	r4, r1, r8, ror #13
   13ef8:	andeq	r4, r1, r8, ror #13
   13efc:	andeq	r4, r1, r8, ror #13
   13f00:	andeq	r4, r1, r8, ror #13
   13f04:	andeq	r4, r1, r8, ror #13
   13f08:	andeq	r4, r1, r8, ror #13
   13f0c:	andeq	r4, r1, r8, ror #13
   13f10:	andeq	r4, r1, r8, ror #13
   13f14:	andeq	r4, r1, r8, ror #13
   13f18:	andeq	r4, r1, r8, ror #13
   13f1c:	andeq	r4, r1, r8, ror #13
   13f20:	andeq	r4, r1, r8, ror #13
   13f24:	andeq	r4, r1, r8, ror #13
   13f28:	andeq	r4, r1, r8, ror #13
   13f2c:	andeq	r4, r1, r8, ror #13
   13f30:	andeq	r4, r1, r8, ror #13
   13f34:	andeq	r4, r1, ip, asr #11
   13f38:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f3c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f40:	andeq	r4, r1, r0, asr #11
   13f44:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f48:	ldrdeq	r4, [r1], -ip
   13f4c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f50:	strdeq	r4, [r1], -r0
   13f54:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f58:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f5c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f60:	ldrdeq	r4, [r1], -ip
   13f64:	ldrdeq	r4, [r1], -ip
   13f68:	ldrdeq	r4, [r1], -ip
   13f6c:	ldrdeq	r4, [r1], -ip
   13f70:	ldrdeq	r4, [r1], -ip
   13f74:	ldrdeq	r4, [r1], -ip
   13f78:	ldrdeq	r4, [r1], -ip
   13f7c:	ldrdeq	r4, [r1], -ip
   13f80:	ldrdeq	r4, [r1], -ip
   13f84:	ldrdeq	r4, [r1], -ip
   13f88:	ldrdeq	r4, [r1], -ip
   13f8c:	ldrdeq	r4, [r1], -ip
   13f90:	ldrdeq	r4, [r1], -ip
   13f94:	ldrdeq	r4, [r1], -ip
   13f98:	ldrdeq	r4, [r1], -ip
   13f9c:	ldrdeq	r4, [r1], -ip
   13fa0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fa4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fa8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fb0:	muleq	r1, r0, r2
   13fb4:	andeq	r4, r1, r8, ror #13
   13fb8:	ldrdeq	r4, [r1], -ip
   13fbc:	ldrdeq	r4, [r1], -ip
   13fc0:	ldrdeq	r4, [r1], -ip
   13fc4:	ldrdeq	r4, [r1], -ip
   13fc8:	ldrdeq	r4, [r1], -ip
   13fcc:	ldrdeq	r4, [r1], -ip
   13fd0:	ldrdeq	r4, [r1], -ip
   13fd4:	ldrdeq	r4, [r1], -ip
   13fd8:	ldrdeq	r4, [r1], -ip
   13fdc:	ldrdeq	r4, [r1], -ip
   13fe0:	ldrdeq	r4, [r1], -ip
   13fe4:	ldrdeq	r4, [r1], -ip
   13fe8:	ldrdeq	r4, [r1], -ip
   13fec:	ldrdeq	r4, [r1], -ip
   13ff0:	ldrdeq	r4, [r1], -ip
   13ff4:	ldrdeq	r4, [r1], -ip
   13ff8:	ldrdeq	r4, [r1], -ip
   13ffc:	ldrdeq	r4, [r1], -ip
   14000:	ldrdeq	r4, [r1], -ip
   14004:	ldrdeq	r4, [r1], -ip
   14008:	ldrdeq	r4, [r1], -ip
   1400c:	ldrdeq	r4, [r1], -ip
   14010:	ldrdeq	r4, [r1], -ip
   14014:	ldrdeq	r4, [r1], -ip
   14018:	ldrdeq	r4, [r1], -ip
   1401c:	ldrdeq	r4, [r1], -ip
   14020:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14024:	strdeq	r4, [r1], -r8
   14028:	ldrdeq	r4, [r1], -ip
   1402c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14030:	ldrdeq	r4, [r1], -ip
   14034:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14038:	ldrdeq	r4, [r1], -ip
   1403c:	ldrdeq	r4, [r1], -ip
   14040:	ldrdeq	r4, [r1], -ip
   14044:	ldrdeq	r4, [r1], -ip
   14048:	ldrdeq	r4, [r1], -ip
   1404c:	ldrdeq	r4, [r1], -ip
   14050:	ldrdeq	r4, [r1], -ip
   14054:	ldrdeq	r4, [r1], -ip
   14058:	ldrdeq	r4, [r1], -ip
   1405c:	ldrdeq	r4, [r1], -ip
   14060:	ldrdeq	r4, [r1], -ip
   14064:	ldrdeq	r4, [r1], -ip
   14068:	ldrdeq	r4, [r1], -ip
   1406c:	ldrdeq	r4, [r1], -ip
   14070:	ldrdeq	r4, [r1], -ip
   14074:	ldrdeq	r4, [r1], -ip
   14078:	ldrdeq	r4, [r1], -ip
   1407c:	ldrdeq	r4, [r1], -ip
   14080:	ldrdeq	r4, [r1], -ip
   14084:	ldrdeq	r4, [r1], -ip
   14088:	ldrdeq	r4, [r1], -ip
   1408c:	ldrdeq	r4, [r1], -ip
   14090:	ldrdeq	r4, [r1], -ip
   14094:	ldrdeq	r4, [r1], -ip
   14098:	ldrdeq	r4, [r1], -ip
   1409c:	ldrdeq	r4, [r1], -ip
   140a0:	andeq	r4, r1, r8, ror r5
   140a4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140a8:	andeq	r4, r1, r8, ror r5
   140ac:	andeq	r4, r1, r0, asr #11
   140b0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   140b4:	cmp	r3, #0
   140b8:	beq	1427c <__assert_fail@plt+0x2f8c>
   140bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   140c0:	cmp	r3, #0
   140c4:	bne	15130 <__assert_fail@plt+0x3e40>
   140c8:	mov	r3, #1
   140cc:	strb	r3, [fp, #-41]	; 0xffffffd7
   140d0:	ldr	r3, [fp, #4]
   140d4:	cmp	r3, #2
   140d8:	bne	14188 <__assert_fail@plt+0x2e98>
   140dc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   140e0:	eor	r3, r3, #1
   140e4:	uxtb	r3, r3
   140e8:	cmp	r3, #0
   140ec:	beq	14188 <__assert_fail@plt+0x2e98>
   140f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   140f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140f8:	cmp	r2, r3
   140fc:	bcs	14114 <__assert_fail@plt+0x2e24>
   14100:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14104:	ldr	r3, [fp, #-20]	; 0xffffffec
   14108:	add	r3, r2, r3
   1410c:	mov	r2, #39	; 0x27
   14110:	strb	r2, [r3]
   14114:	ldr	r3, [fp, #-20]	; 0xffffffec
   14118:	add	r3, r3, #1
   1411c:	str	r3, [fp, #-20]	; 0xffffffec
   14120:	ldr	r2, [fp, #-20]	; 0xffffffec
   14124:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14128:	cmp	r2, r3
   1412c:	bcs	14144 <__assert_fail@plt+0x2e54>
   14130:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14134:	ldr	r3, [fp, #-20]	; 0xffffffec
   14138:	add	r3, r2, r3
   1413c:	mov	r2, #36	; 0x24
   14140:	strb	r2, [r3]
   14144:	ldr	r3, [fp, #-20]	; 0xffffffec
   14148:	add	r3, r3, #1
   1414c:	str	r3, [fp, #-20]	; 0xffffffec
   14150:	ldr	r2, [fp, #-20]	; 0xffffffec
   14154:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14158:	cmp	r2, r3
   1415c:	bcs	14174 <__assert_fail@plt+0x2e84>
   14160:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14164:	ldr	r3, [fp, #-20]	; 0xffffffec
   14168:	add	r3, r2, r3
   1416c:	mov	r2, #39	; 0x27
   14170:	strb	r2, [r3]
   14174:	ldr	r3, [fp, #-20]	; 0xffffffec
   14178:	add	r3, r3, #1
   1417c:	str	r3, [fp, #-20]	; 0xffffffec
   14180:	mov	r3, #1
   14184:	strb	r3, [fp, #-35]	; 0xffffffdd
   14188:	ldr	r2, [fp, #-20]	; 0xffffffec
   1418c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14190:	cmp	r2, r3
   14194:	bcs	141ac <__assert_fail@plt+0x2ebc>
   14198:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1419c:	ldr	r3, [fp, #-20]	; 0xffffffec
   141a0:	add	r3, r2, r3
   141a4:	mov	r2, #92	; 0x5c
   141a8:	strb	r2, [r3]
   141ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   141b0:	add	r3, r3, #1
   141b4:	str	r3, [fp, #-20]	; 0xffffffec
   141b8:	ldr	r3, [fp, #4]
   141bc:	cmp	r3, #2
   141c0:	beq	14270 <__assert_fail@plt+0x2f80>
   141c4:	ldr	r3, [fp, #-16]
   141c8:	add	r3, r3, #1
   141cc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   141d0:	cmp	r2, r3
   141d4:	bls	14270 <__assert_fail@plt+0x2f80>
   141d8:	ldr	r3, [fp, #-16]
   141dc:	add	r3, r3, #1
   141e0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   141e4:	add	r3, r2, r3
   141e8:	ldrb	r3, [r3]
   141ec:	cmp	r3, #47	; 0x2f
   141f0:	bls	14270 <__assert_fail@plt+0x2f80>
   141f4:	ldr	r3, [fp, #-16]
   141f8:	add	r3, r3, #1
   141fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14200:	add	r3, r2, r3
   14204:	ldrb	r3, [r3]
   14208:	cmp	r3, #57	; 0x39
   1420c:	bhi	14270 <__assert_fail@plt+0x2f80>
   14210:	ldr	r2, [fp, #-20]	; 0xffffffec
   14214:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14218:	cmp	r2, r3
   1421c:	bcs	14234 <__assert_fail@plt+0x2f44>
   14220:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14224:	ldr	r3, [fp, #-20]	; 0xffffffec
   14228:	add	r3, r2, r3
   1422c:	mov	r2, #48	; 0x30
   14230:	strb	r2, [r3]
   14234:	ldr	r3, [fp, #-20]	; 0xffffffec
   14238:	add	r3, r3, #1
   1423c:	str	r3, [fp, #-20]	; 0xffffffec
   14240:	ldr	r2, [fp, #-20]	; 0xffffffec
   14244:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14248:	cmp	r2, r3
   1424c:	bcs	14264 <__assert_fail@plt+0x2f74>
   14250:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14254:	ldr	r3, [fp, #-20]	; 0xffffffec
   14258:	add	r3, r2, r3
   1425c:	mov	r2, #48	; 0x30
   14260:	strb	r2, [r3]
   14264:	ldr	r3, [fp, #-20]	; 0xffffffec
   14268:	add	r3, r3, #1
   1426c:	str	r3, [fp, #-20]	; 0xffffffec
   14270:	mov	r3, #48	; 0x30
   14274:	strb	r3, [fp, #-38]	; 0xffffffda
   14278:	b	14cb8 <__assert_fail@plt+0x39c8>
   1427c:	ldr	r3, [fp, #8]
   14280:	and	r3, r3, #1
   14284:	cmp	r3, #0
   14288:	beq	14cb8 <__assert_fail@plt+0x39c8>
   1428c:	b	14f60 <__assert_fail@plt+0x3c70>
   14290:	ldr	r3, [fp, #4]
   14294:	cmp	r3, #2
   14298:	beq	142ac <__assert_fail@plt+0x2fbc>
   1429c:	ldr	r3, [fp, #4]
   142a0:	cmp	r3, #5
   142a4:	beq	142bc <__assert_fail@plt+0x2fcc>
   142a8:	b	144a0 <__assert_fail@plt+0x31b0>
   142ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   142b0:	cmp	r3, #0
   142b4:	beq	14494 <__assert_fail@plt+0x31a4>
   142b8:	b	15164 <__assert_fail@plt+0x3e74>
   142bc:	ldr	r3, [fp, #8]
   142c0:	and	r3, r3, #4
   142c4:	cmp	r3, #0
   142c8:	beq	1449c <__assert_fail@plt+0x31ac>
   142cc:	ldr	r3, [fp, #-16]
   142d0:	add	r3, r3, #2
   142d4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   142d8:	cmp	r2, r3
   142dc:	bls	1449c <__assert_fail@plt+0x31ac>
   142e0:	ldr	r3, [fp, #-16]
   142e4:	add	r3, r3, #1
   142e8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   142ec:	add	r3, r2, r3
   142f0:	ldrb	r3, [r3]
   142f4:	cmp	r3, #63	; 0x3f
   142f8:	bne	1449c <__assert_fail@plt+0x31ac>
   142fc:	ldr	r3, [fp, #-16]
   14300:	add	r3, r3, #2
   14304:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14308:	add	r3, r2, r3
   1430c:	ldrb	r3, [r3]
   14310:	sub	r3, r3, #33	; 0x21
   14314:	cmp	r3, #29
   14318:	ldrls	pc, [pc, r3, lsl #2]
   1431c:	b	1448c <__assert_fail@plt+0x319c>
   14320:	muleq	r1, r8, r3
   14324:	andeq	r4, r1, ip, lsl #9
   14328:	andeq	r4, r1, ip, lsl #9
   1432c:	andeq	r4, r1, ip, lsl #9
   14330:	andeq	r4, r1, ip, lsl #9
   14334:	andeq	r4, r1, ip, lsl #9
   14338:	muleq	r1, r8, r3
   1433c:	muleq	r1, r8, r3
   14340:	muleq	r1, r8, r3
   14344:	andeq	r4, r1, ip, lsl #9
   14348:	andeq	r4, r1, ip, lsl #9
   1434c:	andeq	r4, r1, ip, lsl #9
   14350:	muleq	r1, r8, r3
   14354:	andeq	r4, r1, ip, lsl #9
   14358:	muleq	r1, r8, r3
   1435c:	andeq	r4, r1, ip, lsl #9
   14360:	andeq	r4, r1, ip, lsl #9
   14364:	andeq	r4, r1, ip, lsl #9
   14368:	andeq	r4, r1, ip, lsl #9
   1436c:	andeq	r4, r1, ip, lsl #9
   14370:	andeq	r4, r1, ip, lsl #9
   14374:	andeq	r4, r1, ip, lsl #9
   14378:	andeq	r4, r1, ip, lsl #9
   1437c:	andeq	r4, r1, ip, lsl #9
   14380:	andeq	r4, r1, ip, lsl #9
   14384:	andeq	r4, r1, ip, lsl #9
   14388:	andeq	r4, r1, ip, lsl #9
   1438c:	muleq	r1, r8, r3
   14390:	muleq	r1, r8, r3
   14394:	muleq	r1, r8, r3
   14398:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1439c:	cmp	r3, #0
   143a0:	bne	15138 <__assert_fail@plt+0x3e48>
   143a4:	ldr	r3, [fp, #-16]
   143a8:	add	r3, r3, #2
   143ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   143b0:	add	r3, r2, r3
   143b4:	ldrb	r3, [r3]
   143b8:	strb	r3, [fp, #-38]	; 0xffffffda
   143bc:	ldr	r3, [fp, #-16]
   143c0:	add	r3, r3, #2
   143c4:	str	r3, [fp, #-16]
   143c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   143cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   143d0:	cmp	r2, r3
   143d4:	bcs	143ec <__assert_fail@plt+0x30fc>
   143d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   143dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   143e0:	add	r3, r2, r3
   143e4:	mov	r2, #63	; 0x3f
   143e8:	strb	r2, [r3]
   143ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   143f0:	add	r3, r3, #1
   143f4:	str	r3, [fp, #-20]	; 0xffffffec
   143f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   143fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14400:	cmp	r2, r3
   14404:	bcs	1441c <__assert_fail@plt+0x312c>
   14408:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1440c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14410:	add	r3, r2, r3
   14414:	mov	r2, #34	; 0x22
   14418:	strb	r2, [r3]
   1441c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14420:	add	r3, r3, #1
   14424:	str	r3, [fp, #-20]	; 0xffffffec
   14428:	ldr	r2, [fp, #-20]	; 0xffffffec
   1442c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14430:	cmp	r2, r3
   14434:	bcs	1444c <__assert_fail@plt+0x315c>
   14438:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1443c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14440:	add	r3, r2, r3
   14444:	mov	r2, #34	; 0x22
   14448:	strb	r2, [r3]
   1444c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14450:	add	r3, r3, #1
   14454:	str	r3, [fp, #-20]	; 0xffffffec
   14458:	ldr	r2, [fp, #-20]	; 0xffffffec
   1445c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14460:	cmp	r2, r3
   14464:	bcs	1447c <__assert_fail@plt+0x318c>
   14468:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1446c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14470:	add	r3, r2, r3
   14474:	mov	r2, #63	; 0x3f
   14478:	strb	r2, [r3]
   1447c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14480:	add	r3, r3, #1
   14484:	str	r3, [fp, #-20]	; 0xffffffec
   14488:	b	14490 <__assert_fail@plt+0x31a0>
   1448c:	nop	{0}
   14490:	b	1449c <__assert_fail@plt+0x31ac>
   14494:	nop	{0}
   14498:	b	14cec <__assert_fail@plt+0x39fc>
   1449c:	nop	{0}
   144a0:	b	14cec <__assert_fail@plt+0x39fc>
   144a4:	mov	r3, #97	; 0x61
   144a8:	strb	r3, [fp, #-39]	; 0xffffffd9
   144ac:	b	14560 <__assert_fail@plt+0x3270>
   144b0:	mov	r3, #98	; 0x62
   144b4:	strb	r3, [fp, #-39]	; 0xffffffd9
   144b8:	b	14560 <__assert_fail@plt+0x3270>
   144bc:	mov	r3, #102	; 0x66
   144c0:	strb	r3, [fp, #-39]	; 0xffffffd9
   144c4:	b	14560 <__assert_fail@plt+0x3270>
   144c8:	mov	r3, #110	; 0x6e
   144cc:	strb	r3, [fp, #-39]	; 0xffffffd9
   144d0:	b	14544 <__assert_fail@plt+0x3254>
   144d4:	mov	r3, #114	; 0x72
   144d8:	strb	r3, [fp, #-39]	; 0xffffffd9
   144dc:	b	14544 <__assert_fail@plt+0x3254>
   144e0:	mov	r3, #116	; 0x74
   144e4:	strb	r3, [fp, #-39]	; 0xffffffd9
   144e8:	b	14544 <__assert_fail@plt+0x3254>
   144ec:	mov	r3, #118	; 0x76
   144f0:	strb	r3, [fp, #-39]	; 0xffffffd9
   144f4:	b	14560 <__assert_fail@plt+0x3270>
   144f8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   144fc:	strb	r3, [fp, #-39]	; 0xffffffd9
   14500:	ldr	r3, [fp, #4]
   14504:	cmp	r3, #2
   14508:	bne	1451c <__assert_fail@plt+0x322c>
   1450c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14510:	cmp	r3, #0
   14514:	beq	14e78 <__assert_fail@plt+0x3b88>
   14518:	b	15164 <__assert_fail@plt+0x3e74>
   1451c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14520:	cmp	r3, #0
   14524:	beq	14540 <__assert_fail@plt+0x3250>
   14528:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1452c:	cmp	r3, #0
   14530:	beq	14540 <__assert_fail@plt+0x3250>
   14534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14538:	cmp	r3, #0
   1453c:	bne	14e80 <__assert_fail@plt+0x3b90>
   14540:	nop	{0}
   14544:	ldr	r3, [fp, #4]
   14548:	cmp	r3, #2
   1454c:	bne	1455c <__assert_fail@plt+0x326c>
   14550:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14554:	cmp	r3, #0
   14558:	bne	15140 <__assert_fail@plt+0x3e50>
   1455c:	nop	{0}
   14560:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14564:	cmp	r3, #0
   14568:	beq	14cc0 <__assert_fail@plt+0x39d0>
   1456c:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   14570:	strb	r3, [fp, #-38]	; 0xffffffda
   14574:	b	14d78 <__assert_fail@plt+0x3a88>
   14578:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1457c:	cmn	r3, #1
   14580:	bne	145a4 <__assert_fail@plt+0x32b4>
   14584:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14588:	add	r3, r3, #1
   1458c:	ldrb	r3, [r3]
   14590:	cmp	r3, #0
   14594:	movne	r3, #1
   14598:	moveq	r3, #0
   1459c:	uxtb	r3, r3
   145a0:	b	145b8 <__assert_fail@plt+0x32c8>
   145a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   145a8:	cmp	r3, #1
   145ac:	movne	r3, #1
   145b0:	moveq	r3, #0
   145b4:	uxtb	r3, r3
   145b8:	cmp	r3, #0
   145bc:	bne	14cc8 <__assert_fail@plt+0x39d8>
   145c0:	ldr	r3, [fp, #-16]
   145c4:	cmp	r3, #0
   145c8:	bne	14cd0 <__assert_fail@plt+0x39e0>
   145cc:	mov	r3, #1
   145d0:	strb	r3, [fp, #-42]	; 0xffffffd6
   145d4:	ldr	r3, [fp, #4]
   145d8:	cmp	r3, #2
   145dc:	bne	14cd8 <__assert_fail@plt+0x39e8>
   145e0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   145e4:	cmp	r3, #0
   145e8:	beq	14cd8 <__assert_fail@plt+0x39e8>
   145ec:	b	15164 <__assert_fail@plt+0x3e74>
   145f0:	mov	r3, #1
   145f4:	strb	r3, [fp, #-36]	; 0xffffffdc
   145f8:	mov	r3, #1
   145fc:	strb	r3, [fp, #-42]	; 0xffffffd6
   14600:	ldr	r3, [fp, #4]
   14604:	cmp	r3, #2
   14608:	bne	14ce0 <__assert_fail@plt+0x39f0>
   1460c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14610:	cmp	r3, #0
   14614:	bne	15148 <__assert_fail@plt+0x3e58>
   14618:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1461c:	cmp	r3, #0
   14620:	beq	14640 <__assert_fail@plt+0x3350>
   14624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14628:	cmp	r3, #0
   1462c:	bne	14640 <__assert_fail@plt+0x3350>
   14630:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14634:	str	r3, [fp, #-24]	; 0xffffffe8
   14638:	mov	r3, #0
   1463c:	str	r3, [fp, #-92]	; 0xffffffa4
   14640:	ldr	r2, [fp, #-20]	; 0xffffffec
   14644:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14648:	cmp	r2, r3
   1464c:	bcs	14664 <__assert_fail@plt+0x3374>
   14650:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14654:	ldr	r3, [fp, #-20]	; 0xffffffec
   14658:	add	r3, r2, r3
   1465c:	mov	r2, #39	; 0x27
   14660:	strb	r2, [r3]
   14664:	ldr	r3, [fp, #-20]	; 0xffffffec
   14668:	add	r3, r3, #1
   1466c:	str	r3, [fp, #-20]	; 0xffffffec
   14670:	ldr	r2, [fp, #-20]	; 0xffffffec
   14674:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14678:	cmp	r2, r3
   1467c:	bcs	14694 <__assert_fail@plt+0x33a4>
   14680:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14684:	ldr	r3, [fp, #-20]	; 0xffffffec
   14688:	add	r3, r2, r3
   1468c:	mov	r2, #92	; 0x5c
   14690:	strb	r2, [r3]
   14694:	ldr	r3, [fp, #-20]	; 0xffffffec
   14698:	add	r3, r3, #1
   1469c:	str	r3, [fp, #-20]	; 0xffffffec
   146a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   146a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   146a8:	cmp	r2, r3
   146ac:	bcs	146c4 <__assert_fail@plt+0x33d4>
   146b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   146b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   146b8:	add	r3, r2, r3
   146bc:	mov	r2, #39	; 0x27
   146c0:	strb	r2, [r3]
   146c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   146c8:	add	r3, r3, #1
   146cc:	str	r3, [fp, #-20]	; 0xffffffec
   146d0:	mov	r3, #0
   146d4:	strb	r3, [fp, #-35]	; 0xffffffdd
   146d8:	b	14ce0 <__assert_fail@plt+0x39f0>
   146dc:	mov	r3, #1
   146e0:	strb	r3, [fp, #-42]	; 0xffffffd6
   146e4:	b	14cec <__assert_fail@plt+0x39fc>
   146e8:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   146ec:	cmp	r3, #0
   146f0:	beq	14730 <__assert_fail@plt+0x3440>
   146f4:	mov	r3, #1
   146f8:	str	r3, [fp, #-48]	; 0xffffffd0
   146fc:	bl	111ac <__ctype_b_loc@plt>
   14700:	mov	r3, r0
   14704:	ldr	r2, [r3]
   14708:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1470c:	lsl	r3, r3, #1
   14710:	add	r3, r2, r3
   14714:	ldrh	r3, [r3]
   14718:	and	r3, r3, #16384	; 0x4000
   1471c:	cmp	r3, #0
   14720:	movne	r3, #1
   14724:	moveq	r3, #0
   14728:	strb	r3, [fp, #-49]	; 0xffffffcf
   1472c:	b	1497c <__assert_fail@plt+0x368c>
   14730:	sub	r3, fp, #76	; 0x4c
   14734:	mov	r2, #8
   14738:	mov	r1, #0
   1473c:	mov	r0, r3
   14740:	bl	11218 <memset@plt>
   14744:	mov	r3, #0
   14748:	str	r3, [fp, #-48]	; 0xffffffd0
   1474c:	mov	r3, #1
   14750:	strb	r3, [fp, #-49]	; 0xffffffcf
   14754:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14758:	cmn	r3, #1
   1475c:	bne	1476c <__assert_fail@plt+0x347c>
   14760:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14764:	bl	111d0 <strlen@plt>
   14768:	str	r0, [fp, #-100]	; 0xffffff9c
   1476c:	ldr	r2, [fp, #-16]
   14770:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14774:	add	r3, r2, r3
   14778:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1477c:	add	r1, r2, r3
   14780:	ldr	r2, [fp, #-16]
   14784:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14788:	add	r3, r2, r3
   1478c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14790:	sub	r2, r2, r3
   14794:	sub	r3, fp, #76	; 0x4c
   14798:	sub	r0, fp, #80	; 0x50
   1479c:	bl	31db0 <__assert_fail@plt+0x20ac0>
   147a0:	str	r0, [fp, #-64]	; 0xffffffc0
   147a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   147a8:	cmp	r3, #0
   147ac:	beq	14970 <__assert_fail@plt+0x3680>
   147b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   147b4:	cmn	r3, #1
   147b8:	bne	147c8 <__assert_fail@plt+0x34d8>
   147bc:	mov	r3, #0
   147c0:	strb	r3, [fp, #-49]	; 0xffffffcf
   147c4:	b	1497c <__assert_fail@plt+0x368c>
   147c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   147cc:	cmn	r3, #2
   147d0:	bne	14828 <__assert_fail@plt+0x3538>
   147d4:	mov	r3, #0
   147d8:	strb	r3, [fp, #-49]	; 0xffffffcf
   147dc:	b	147ec <__assert_fail@plt+0x34fc>
   147e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   147e4:	add	r3, r3, #1
   147e8:	str	r3, [fp, #-48]	; 0xffffffd0
   147ec:	ldr	r2, [fp, #-16]
   147f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   147f4:	add	r3, r2, r3
   147f8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   147fc:	cmp	r2, r3
   14800:	bls	14978 <__assert_fail@plt+0x3688>
   14804:	ldr	r2, [fp, #-16]
   14808:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1480c:	add	r3, r2, r3
   14810:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14814:	add	r3, r2, r3
   14818:	ldrb	r3, [r3]
   1481c:	cmp	r3, #0
   14820:	bne	147e0 <__assert_fail@plt+0x34f0>
   14824:	b	14978 <__assert_fail@plt+0x3688>
   14828:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1482c:	cmp	r3, #0
   14830:	beq	14924 <__assert_fail@plt+0x3634>
   14834:	ldr	r3, [fp, #4]
   14838:	cmp	r3, #2
   1483c:	bne	14924 <__assert_fail@plt+0x3634>
   14840:	mov	r3, #1
   14844:	str	r3, [fp, #-56]	; 0xffffffc8
   14848:	b	14914 <__assert_fail@plt+0x3624>
   1484c:	ldr	r2, [fp, #-16]
   14850:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14854:	add	r2, r2, r3
   14858:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1485c:	add	r3, r2, r3
   14860:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14864:	add	r3, r2, r3
   14868:	ldrb	r3, [r3]
   1486c:	sub	r3, r3, #91	; 0x5b
   14870:	cmp	r3, #33	; 0x21
   14874:	ldrls	pc, [pc, r3, lsl #2]
   14878:	b	14904 <__assert_fail@plt+0x3614>
   1487c:	andeq	r5, r1, r4, ror #2
   14880:	andeq	r5, r1, r4, ror #2
   14884:	andeq	r4, r1, r4, lsl #18
   14888:	andeq	r5, r1, r4, ror #2
   1488c:	andeq	r4, r1, r4, lsl #18
   14890:	andeq	r5, r1, r4, ror #2
   14894:	andeq	r4, r1, r4, lsl #18
   14898:	andeq	r4, r1, r4, lsl #18
   1489c:	andeq	r4, r1, r4, lsl #18
   148a0:	andeq	r4, r1, r4, lsl #18
   148a4:	andeq	r4, r1, r4, lsl #18
   148a8:	andeq	r4, r1, r4, lsl #18
   148ac:	andeq	r4, r1, r4, lsl #18
   148b0:	andeq	r4, r1, r4, lsl #18
   148b4:	andeq	r4, r1, r4, lsl #18
   148b8:	andeq	r4, r1, r4, lsl #18
   148bc:	andeq	r4, r1, r4, lsl #18
   148c0:	andeq	r4, r1, r4, lsl #18
   148c4:	andeq	r4, r1, r4, lsl #18
   148c8:	andeq	r4, r1, r4, lsl #18
   148cc:	andeq	r4, r1, r4, lsl #18
   148d0:	andeq	r4, r1, r4, lsl #18
   148d4:	andeq	r4, r1, r4, lsl #18
   148d8:	andeq	r4, r1, r4, lsl #18
   148dc:	andeq	r4, r1, r4, lsl #18
   148e0:	andeq	r4, r1, r4, lsl #18
   148e4:	andeq	r4, r1, r4, lsl #18
   148e8:	andeq	r4, r1, r4, lsl #18
   148ec:	andeq	r4, r1, r4, lsl #18
   148f0:	andeq	r4, r1, r4, lsl #18
   148f4:	andeq	r4, r1, r4, lsl #18
   148f8:	andeq	r4, r1, r4, lsl #18
   148fc:	andeq	r4, r1, r4, lsl #18
   14900:	andeq	r5, r1, r4, ror #2
   14904:	nop	{0}
   14908:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1490c:	add	r3, r3, #1
   14910:	str	r3, [fp, #-56]	; 0xffffffc8
   14914:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14918:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1491c:	cmp	r2, r3
   14920:	bcc	1484c <__assert_fail@plt+0x355c>
   14924:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14928:	mov	r0, r3
   1492c:	bl	11104 <iswprint@plt>
   14930:	mov	r3, r0
   14934:	cmp	r3, #0
   14938:	bne	14944 <__assert_fail@plt+0x3654>
   1493c:	mov	r3, #0
   14940:	strb	r3, [fp, #-49]	; 0xffffffcf
   14944:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14948:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1494c:	add	r3, r2, r3
   14950:	str	r3, [fp, #-48]	; 0xffffffd0
   14954:	sub	r3, fp, #76	; 0x4c
   14958:	mov	r0, r3
   1495c:	bl	110a4 <mbsinit@plt>
   14960:	mov	r3, r0
   14964:	cmp	r3, #0
   14968:	beq	1476c <__assert_fail@plt+0x347c>
   1496c:	b	1497c <__assert_fail@plt+0x368c>
   14970:	nop	{0}
   14974:	b	1497c <__assert_fail@plt+0x368c>
   14978:	nop	{0}
   1497c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14980:	strb	r3, [fp, #-42]	; 0xffffffd6
   14984:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14988:	cmp	r3, #1
   1498c:	bhi	149b0 <__assert_fail@plt+0x36c0>
   14990:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14994:	cmp	r3, #0
   14998:	beq	14ce8 <__assert_fail@plt+0x39f8>
   1499c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   149a0:	eor	r3, r3, #1
   149a4:	uxtb	r3, r3
   149a8:	cmp	r3, #0
   149ac:	beq	14ce8 <__assert_fail@plt+0x39f8>
   149b0:	ldr	r2, [fp, #-16]
   149b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   149b8:	add	r3, r2, r3
   149bc:	str	r3, [fp, #-68]	; 0xffffffbc
   149c0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   149c4:	cmp	r3, #0
   149c8:	beq	14b7c <__assert_fail@plt+0x388c>
   149cc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   149d0:	eor	r3, r3, #1
   149d4:	uxtb	r3, r3
   149d8:	cmp	r3, #0
   149dc:	beq	14b7c <__assert_fail@plt+0x388c>
   149e0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   149e4:	cmp	r3, #0
   149e8:	bne	15150 <__assert_fail@plt+0x3e60>
   149ec:	mov	r3, #1
   149f0:	strb	r3, [fp, #-41]	; 0xffffffd7
   149f4:	ldr	r3, [fp, #4]
   149f8:	cmp	r3, #2
   149fc:	bne	14aac <__assert_fail@plt+0x37bc>
   14a00:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14a04:	eor	r3, r3, #1
   14a08:	uxtb	r3, r3
   14a0c:	cmp	r3, #0
   14a10:	beq	14aac <__assert_fail@plt+0x37bc>
   14a14:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14a1c:	cmp	r2, r3
   14a20:	bcs	14a38 <__assert_fail@plt+0x3748>
   14a24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a2c:	add	r3, r2, r3
   14a30:	mov	r2, #39	; 0x27
   14a34:	strb	r2, [r3]
   14a38:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a3c:	add	r3, r3, #1
   14a40:	str	r3, [fp, #-20]	; 0xffffffec
   14a44:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14a4c:	cmp	r2, r3
   14a50:	bcs	14a68 <__assert_fail@plt+0x3778>
   14a54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a5c:	add	r3, r2, r3
   14a60:	mov	r2, #36	; 0x24
   14a64:	strb	r2, [r3]
   14a68:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a6c:	add	r3, r3, #1
   14a70:	str	r3, [fp, #-20]	; 0xffffffec
   14a74:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14a7c:	cmp	r2, r3
   14a80:	bcs	14a98 <__assert_fail@plt+0x37a8>
   14a84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a8c:	add	r3, r2, r3
   14a90:	mov	r2, #39	; 0x27
   14a94:	strb	r2, [r3]
   14a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a9c:	add	r3, r3, #1
   14aa0:	str	r3, [fp, #-20]	; 0xffffffec
   14aa4:	mov	r3, #1
   14aa8:	strb	r3, [fp, #-35]	; 0xffffffdd
   14aac:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ab0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ab4:	cmp	r2, r3
   14ab8:	bcs	14ad0 <__assert_fail@plt+0x37e0>
   14abc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ac4:	add	r3, r2, r3
   14ac8:	mov	r2, #92	; 0x5c
   14acc:	strb	r2, [r3]
   14ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ad4:	add	r3, r3, #1
   14ad8:	str	r3, [fp, #-20]	; 0xffffffec
   14adc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ae0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ae4:	cmp	r2, r3
   14ae8:	bcs	14b10 <__assert_fail@plt+0x3820>
   14aec:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14af0:	lsr	r3, r3, #6
   14af4:	uxtb	r2, r3
   14af8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b00:	add	r3, r1, r3
   14b04:	add	r2, r2, #48	; 0x30
   14b08:	uxtb	r2, r2
   14b0c:	strb	r2, [r3]
   14b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b14:	add	r3, r3, #1
   14b18:	str	r3, [fp, #-20]	; 0xffffffec
   14b1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b24:	cmp	r2, r3
   14b28:	bcs	14b58 <__assert_fail@plt+0x3868>
   14b2c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14b30:	lsr	r3, r3, #3
   14b34:	uxtb	r3, r3
   14b38:	and	r3, r3, #7
   14b3c:	uxtb	r2, r3
   14b40:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b48:	add	r3, r1, r3
   14b4c:	add	r2, r2, #48	; 0x30
   14b50:	uxtb	r2, r2
   14b54:	strb	r2, [r3]
   14b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b5c:	add	r3, r3, #1
   14b60:	str	r3, [fp, #-20]	; 0xffffffec
   14b64:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14b68:	and	r3, r3, #7
   14b6c:	uxtb	r3, r3
   14b70:	add	r3, r3, #48	; 0x30
   14b74:	strb	r3, [fp, #-38]	; 0xffffffda
   14b78:	b	14bc0 <__assert_fail@plt+0x38d0>
   14b7c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14b80:	cmp	r3, #0
   14b84:	beq	14bc0 <__assert_fail@plt+0x38d0>
   14b88:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b90:	cmp	r2, r3
   14b94:	bcs	14bac <__assert_fail@plt+0x38bc>
   14b98:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ba0:	add	r3, r2, r3
   14ba4:	mov	r2, #92	; 0x5c
   14ba8:	strb	r2, [r3]
   14bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bb0:	add	r3, r3, #1
   14bb4:	str	r3, [fp, #-20]	; 0xffffffec
   14bb8:	mov	r3, #0
   14bbc:	strb	r3, [fp, #-40]	; 0xffffffd8
   14bc0:	ldr	r3, [fp, #-16]
   14bc4:	add	r3, r3, #1
   14bc8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14bcc:	cmp	r2, r3
   14bd0:	bls	14cb0 <__assert_fail@plt+0x39c0>
   14bd4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14bd8:	cmp	r3, #0
   14bdc:	beq	14c5c <__assert_fail@plt+0x396c>
   14be0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14be4:	eor	r3, r3, #1
   14be8:	uxtb	r3, r3
   14bec:	cmp	r3, #0
   14bf0:	beq	14c5c <__assert_fail@plt+0x396c>
   14bf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14bf8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14bfc:	cmp	r2, r3
   14c00:	bcs	14c18 <__assert_fail@plt+0x3928>
   14c04:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c0c:	add	r3, r2, r3
   14c10:	mov	r2, #39	; 0x27
   14c14:	strb	r2, [r3]
   14c18:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c1c:	add	r3, r3, #1
   14c20:	str	r3, [fp, #-20]	; 0xffffffec
   14c24:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c2c:	cmp	r2, r3
   14c30:	bcs	14c48 <__assert_fail@plt+0x3958>
   14c34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c3c:	add	r3, r2, r3
   14c40:	mov	r2, #39	; 0x27
   14c44:	strb	r2, [r3]
   14c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c4c:	add	r3, r3, #1
   14c50:	str	r3, [fp, #-20]	; 0xffffffec
   14c54:	mov	r3, #0
   14c58:	strb	r3, [fp, #-35]	; 0xffffffdd
   14c5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c64:	cmp	r2, r3
   14c68:	bcs	14c80 <__assert_fail@plt+0x3990>
   14c6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c74:	add	r3, r2, r3
   14c78:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14c7c:	strb	r2, [r3]
   14c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c84:	add	r3, r3, #1
   14c88:	str	r3, [fp, #-20]	; 0xffffffec
   14c8c:	ldr	r3, [fp, #-16]
   14c90:	add	r3, r3, #1
   14c94:	str	r3, [fp, #-16]
   14c98:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14c9c:	ldr	r3, [fp, #-16]
   14ca0:	add	r3, r2, r3
   14ca4:	ldrb	r3, [r3]
   14ca8:	strb	r3, [fp, #-38]	; 0xffffffda
   14cac:	b	149c0 <__assert_fail@plt+0x36d0>
   14cb0:	nop	{0}
   14cb4:	b	14e8c <__assert_fail@plt+0x3b9c>
   14cb8:	nop	{0}
   14cbc:	b	14cec <__assert_fail@plt+0x39fc>
   14cc0:	nop	{0}
   14cc4:	b	14cec <__assert_fail@plt+0x39fc>
   14cc8:	nop	{0}
   14ccc:	b	14cec <__assert_fail@plt+0x39fc>
   14cd0:	nop	{0}
   14cd4:	b	14cec <__assert_fail@plt+0x39fc>
   14cd8:	nop	{0}
   14cdc:	b	14cec <__assert_fail@plt+0x39fc>
   14ce0:	nop	{0}
   14ce4:	b	14cec <__assert_fail@plt+0x39fc>
   14ce8:	nop	{0}
   14cec:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14cf0:	eor	r3, r3, #1
   14cf4:	uxtb	r3, r3
   14cf8:	cmp	r3, #0
   14cfc:	bne	14d0c <__assert_fail@plt+0x3a1c>
   14d00:	ldr	r3, [fp, #4]
   14d04:	cmp	r3, #2
   14d08:	bne	14d20 <__assert_fail@plt+0x3a30>
   14d0c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14d10:	eor	r3, r3, #1
   14d14:	uxtb	r3, r3
   14d18:	cmp	r3, #0
   14d1c:	bne	14d60 <__assert_fail@plt+0x3a70>
   14d20:	ldr	r3, [fp, #12]
   14d24:	cmp	r3, #0
   14d28:	beq	14d60 <__assert_fail@plt+0x3a70>
   14d2c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14d30:	lsr	r3, r3, #5
   14d34:	uxtb	r3, r3
   14d38:	lsl	r3, r3, #2
   14d3c:	ldr	r2, [fp, #12]
   14d40:	add	r3, r2, r3
   14d44:	ldr	r2, [r3]
   14d48:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14d4c:	and	r3, r3, #31
   14d50:	lsr	r3, r2, r3
   14d54:	and	r3, r3, #1
   14d58:	cmp	r3, #0
   14d5c:	bne	14d74 <__assert_fail@plt+0x3a84>
   14d60:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14d64:	eor	r3, r3, #1
   14d68:	uxtb	r3, r3
   14d6c:	cmp	r3, #0
   14d70:	bne	14e88 <__assert_fail@plt+0x3b98>
   14d74:	nop	{0}
   14d78:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14d7c:	cmp	r3, #0
   14d80:	bne	15158 <__assert_fail@plt+0x3e68>
   14d84:	mov	r3, #1
   14d88:	strb	r3, [fp, #-41]	; 0xffffffd7
   14d8c:	ldr	r3, [fp, #4]
   14d90:	cmp	r3, #2
   14d94:	bne	14e44 <__assert_fail@plt+0x3b54>
   14d98:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14d9c:	eor	r3, r3, #1
   14da0:	uxtb	r3, r3
   14da4:	cmp	r3, #0
   14da8:	beq	14e44 <__assert_fail@plt+0x3b54>
   14dac:	ldr	r2, [fp, #-20]	; 0xffffffec
   14db0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14db4:	cmp	r2, r3
   14db8:	bcs	14dd0 <__assert_fail@plt+0x3ae0>
   14dbc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14dc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14dc4:	add	r3, r2, r3
   14dc8:	mov	r2, #39	; 0x27
   14dcc:	strb	r2, [r3]
   14dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14dd4:	add	r3, r3, #1
   14dd8:	str	r3, [fp, #-20]	; 0xffffffec
   14ddc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14de0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14de4:	cmp	r2, r3
   14de8:	bcs	14e00 <__assert_fail@plt+0x3b10>
   14dec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14df4:	add	r3, r2, r3
   14df8:	mov	r2, #36	; 0x24
   14dfc:	strb	r2, [r3]
   14e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e04:	add	r3, r3, #1
   14e08:	str	r3, [fp, #-20]	; 0xffffffec
   14e0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e14:	cmp	r2, r3
   14e18:	bcs	14e30 <__assert_fail@plt+0x3b40>
   14e1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e24:	add	r3, r2, r3
   14e28:	mov	r2, #39	; 0x27
   14e2c:	strb	r2, [r3]
   14e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e34:	add	r3, r3, #1
   14e38:	str	r3, [fp, #-20]	; 0xffffffec
   14e3c:	mov	r3, #1
   14e40:	strb	r3, [fp, #-35]	; 0xffffffdd
   14e44:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e4c:	cmp	r2, r3
   14e50:	bcs	14e68 <__assert_fail@plt+0x3b78>
   14e54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e5c:	add	r3, r2, r3
   14e60:	mov	r2, #92	; 0x5c
   14e64:	strb	r2, [r3]
   14e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e6c:	add	r3, r3, #1
   14e70:	str	r3, [fp, #-20]	; 0xffffffec
   14e74:	b	14e8c <__assert_fail@plt+0x3b9c>
   14e78:	nop	{0}
   14e7c:	b	14e8c <__assert_fail@plt+0x3b9c>
   14e80:	nop	{0}
   14e84:	b	14e8c <__assert_fail@plt+0x3b9c>
   14e88:	nop	{0}
   14e8c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14e90:	cmp	r3, #0
   14e94:	beq	14f14 <__assert_fail@plt+0x3c24>
   14e98:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14e9c:	eor	r3, r3, #1
   14ea0:	uxtb	r3, r3
   14ea4:	cmp	r3, #0
   14ea8:	beq	14f14 <__assert_fail@plt+0x3c24>
   14eac:	ldr	r2, [fp, #-20]	; 0xffffffec
   14eb0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14eb4:	cmp	r2, r3
   14eb8:	bcs	14ed0 <__assert_fail@plt+0x3be0>
   14ebc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ec4:	add	r3, r2, r3
   14ec8:	mov	r2, #39	; 0x27
   14ecc:	strb	r2, [r3]
   14ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ed4:	add	r3, r3, #1
   14ed8:	str	r3, [fp, #-20]	; 0xffffffec
   14edc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ee0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ee4:	cmp	r2, r3
   14ee8:	bcs	14f00 <__assert_fail@plt+0x3c10>
   14eec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ef4:	add	r3, r2, r3
   14ef8:	mov	r2, #39	; 0x27
   14efc:	strb	r2, [r3]
   14f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f04:	add	r3, r3, #1
   14f08:	str	r3, [fp, #-20]	; 0xffffffec
   14f0c:	mov	r3, #0
   14f10:	strb	r3, [fp, #-35]	; 0xffffffdd
   14f14:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14f1c:	cmp	r2, r3
   14f20:	bcs	14f38 <__assert_fail@plt+0x3c48>
   14f24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f2c:	add	r3, r2, r3
   14f30:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14f34:	strb	r2, [r3]
   14f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f3c:	add	r3, r3, #1
   14f40:	str	r3, [fp, #-20]	; 0xffffffec
   14f44:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   14f48:	eor	r3, r3, #1
   14f4c:	uxtb	r3, r3
   14f50:	cmp	r3, #0
   14f54:	beq	14f60 <__assert_fail@plt+0x3c70>
   14f58:	mov	r3, #0
   14f5c:	strb	r3, [fp, #-37]	; 0xffffffdb
   14f60:	ldr	r3, [fp, #-16]
   14f64:	add	r3, r3, #1
   14f68:	str	r3, [fp, #-16]
   14f6c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14f70:	cmn	r3, #1
   14f74:	bne	14f9c <__assert_fail@plt+0x3cac>
   14f78:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14f7c:	ldr	r3, [fp, #-16]
   14f80:	add	r3, r2, r3
   14f84:	ldrb	r3, [r3]
   14f88:	cmp	r3, #0
   14f8c:	movne	r3, #1
   14f90:	moveq	r3, #0
   14f94:	uxtb	r3, r3
   14f98:	b	14fb4 <__assert_fail@plt+0x3cc4>
   14f9c:	ldr	r2, [fp, #-16]
   14fa0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14fa4:	cmp	r2, r3
   14fa8:	movne	r3, #1
   14fac:	moveq	r3, #0
   14fb0:	uxtb	r3, r3
   14fb4:	cmp	r3, #0
   14fb8:	bne	13dd4 <__assert_fail@plt+0x2ae4>
   14fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fc0:	cmp	r3, #0
   14fc4:	bne	14fe0 <__assert_fail@plt+0x3cf0>
   14fc8:	ldr	r3, [fp, #4]
   14fcc:	cmp	r3, #2
   14fd0:	bne	14fe0 <__assert_fail@plt+0x3cf0>
   14fd4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14fd8:	cmp	r3, #0
   14fdc:	bne	15160 <__assert_fail@plt+0x3e70>
   14fe0:	ldr	r3, [fp, #4]
   14fe4:	cmp	r3, #2
   14fe8:	bne	15088 <__assert_fail@plt+0x3d98>
   14fec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14ff0:	eor	r3, r3, #1
   14ff4:	uxtb	r3, r3
   14ff8:	cmp	r3, #0
   14ffc:	beq	15088 <__assert_fail@plt+0x3d98>
   15000:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   15004:	cmp	r3, #0
   15008:	beq	15088 <__assert_fail@plt+0x3d98>
   1500c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15010:	cmp	r3, #0
   15014:	beq	1505c <__assert_fail@plt+0x3d6c>
   15018:	ldr	r3, [fp, #20]
   1501c:	str	r3, [sp, #16]
   15020:	ldr	r3, [fp, #16]
   15024:	str	r3, [sp, #12]
   15028:	ldr	r3, [fp, #12]
   1502c:	str	r3, [sp, #8]
   15030:	ldr	r3, [fp, #8]
   15034:	str	r3, [sp, #4]
   15038:	mov	r3, #5
   1503c:	str	r3, [sp]
   15040:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15044:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1504c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15050:	bl	13b0c <__assert_fail@plt+0x281c>
   15054:	mov	r3, r0
   15058:	b	151c8 <__assert_fail@plt+0x3ed8>
   1505c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15060:	cmp	r3, #0
   15064:	bne	15088 <__assert_fail@plt+0x3d98>
   15068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1506c:	cmp	r3, #0
   15070:	beq	15088 <__assert_fail@plt+0x3d98>
   15074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15078:	str	r3, [fp, #-92]	; 0xffffffa4
   1507c:	mov	r3, #0
   15080:	str	r3, [fp, #-20]	; 0xffffffec
   15084:	b	13ba0 <__assert_fail@plt+0x28b0>
   15088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1508c:	cmp	r3, #0
   15090:	beq	150fc <__assert_fail@plt+0x3e0c>
   15094:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15098:	eor	r3, r3, #1
   1509c:	uxtb	r3, r3
   150a0:	cmp	r3, #0
   150a4:	beq	150fc <__assert_fail@plt+0x3e0c>
   150a8:	b	150ec <__assert_fail@plt+0x3dfc>
   150ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   150b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150b4:	cmp	r2, r3
   150b8:	bcs	150d4 <__assert_fail@plt+0x3de4>
   150bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   150c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   150c4:	add	r3, r2, r3
   150c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150cc:	ldrb	r2, [r2]
   150d0:	strb	r2, [r3]
   150d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   150d8:	add	r3, r3, #1
   150dc:	str	r3, [fp, #-20]	; 0xffffffec
   150e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150e4:	add	r3, r3, #1
   150e8:	str	r3, [fp, #-28]	; 0xffffffe4
   150ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150f0:	ldrb	r3, [r3]
   150f4:	cmp	r3, #0
   150f8:	bne	150ac <__assert_fail@plt+0x3dbc>
   150fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15100:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15104:	cmp	r2, r3
   15108:	bcs	15120 <__assert_fail@plt+0x3e30>
   1510c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15110:	ldr	r3, [fp, #-20]	; 0xffffffec
   15114:	add	r3, r2, r3
   15118:	mov	r2, #0
   1511c:	strb	r2, [r3]
   15120:	ldr	r3, [fp, #-20]	; 0xffffffec
   15124:	b	151c8 <__assert_fail@plt+0x3ed8>
   15128:	nop	{0}
   1512c:	b	15164 <__assert_fail@plt+0x3e74>
   15130:	nop	{0}
   15134:	b	15164 <__assert_fail@plt+0x3e74>
   15138:	nop	{0}
   1513c:	b	15164 <__assert_fail@plt+0x3e74>
   15140:	nop	{0}
   15144:	b	15164 <__assert_fail@plt+0x3e74>
   15148:	nop	{0}
   1514c:	b	15164 <__assert_fail@plt+0x3e74>
   15150:	nop	{0}
   15154:	b	15164 <__assert_fail@plt+0x3e74>
   15158:	nop	{0}
   1515c:	b	15164 <__assert_fail@plt+0x3e74>
   15160:	nop	{0}
   15164:	ldr	r3, [fp, #4]
   15168:	cmp	r3, #2
   1516c:	bne	15184 <__assert_fail@plt+0x3e94>
   15170:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15174:	cmp	r3, #0
   15178:	beq	15184 <__assert_fail@plt+0x3e94>
   1517c:	mov	r3, #4
   15180:	str	r3, [fp, #4]
   15184:	ldr	r3, [fp, #8]
   15188:	bic	r3, r3, #2
   1518c:	ldr	r2, [fp, #20]
   15190:	str	r2, [sp, #16]
   15194:	ldr	r2, [fp, #16]
   15198:	str	r2, [sp, #12]
   1519c:	mov	r2, #0
   151a0:	str	r2, [sp, #8]
   151a4:	str	r3, [sp, #4]
   151a8:	ldr	r3, [fp, #4]
   151ac:	str	r3, [sp]
   151b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   151b4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   151b8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   151bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   151c0:	bl	13b0c <__assert_fail@plt+0x281c>
   151c4:	mov	r3, r0
   151c8:	mov	r0, r3
   151cc:	sub	sp, fp, #8
   151d0:	ldr	r4, [sp]
   151d4:	ldr	fp, [sp, #4]
   151d8:	add	sp, sp, #8
   151dc:	pop	{pc}		; (ldr pc, [sp], #4)
   151e0:	str	fp, [sp, #-8]!
   151e4:	str	lr, [sp, #4]
   151e8:	add	fp, sp, #4
   151ec:	sub	sp, sp, #56	; 0x38
   151f0:	str	r0, [fp, #-24]	; 0xffffffe8
   151f4:	str	r1, [fp, #-28]	; 0xffffffe4
   151f8:	str	r2, [fp, #-32]	; 0xffffffe0
   151fc:	str	r3, [fp, #-36]	; 0xffffffdc
   15200:	ldr	r3, [fp, #4]
   15204:	cmp	r3, #0
   15208:	beq	15214 <__assert_fail@plt+0x3f24>
   1520c:	ldr	r3, [fp, #4]
   15210:	b	1521c <__assert_fail@plt+0x3f2c>
   15214:	movw	r3, #17812	; 0x4594
   15218:	movt	r3, #4
   1521c:	str	r3, [fp, #-8]
   15220:	bl	111f4 <__errno_location@plt>
   15224:	mov	r3, r0
   15228:	ldr	r3, [r3]
   1522c:	str	r3, [fp, #-12]
   15230:	ldr	r3, [fp, #-8]
   15234:	ldr	r3, [r3]
   15238:	ldr	r2, [fp, #-8]
   1523c:	ldr	r2, [r2, #4]
   15240:	ldr	r1, [fp, #-8]
   15244:	add	r1, r1, #8
   15248:	ldr	r0, [fp, #-8]
   1524c:	ldr	r0, [r0, #40]	; 0x28
   15250:	ldr	ip, [fp, #-8]
   15254:	ldr	ip, [ip, #44]	; 0x2c
   15258:	str	ip, [sp, #16]
   1525c:	str	r0, [sp, #12]
   15260:	str	r1, [sp, #8]
   15264:	str	r2, [sp, #4]
   15268:	str	r3, [sp]
   1526c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15270:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1527c:	bl	13b0c <__assert_fail@plt+0x281c>
   15280:	str	r0, [fp, #-16]
   15284:	bl	111f4 <__errno_location@plt>
   15288:	mov	r2, r0
   1528c:	ldr	r3, [fp, #-12]
   15290:	str	r3, [r2]
   15294:	ldr	r3, [fp, #-16]
   15298:	mov	r0, r3
   1529c:	sub	sp, fp, #4
   152a0:	ldr	fp, [sp]
   152a4:	add	sp, sp, #4
   152a8:	pop	{pc}		; (ldr pc, [sp], #4)
   152ac:	str	fp, [sp, #-8]!
   152b0:	str	lr, [sp, #4]
   152b4:	add	fp, sp, #4
   152b8:	sub	sp, sp, #16
   152bc:	str	r0, [fp, #-8]
   152c0:	str	r1, [fp, #-12]
   152c4:	str	r2, [fp, #-16]
   152c8:	ldr	r3, [fp, #-16]
   152cc:	mov	r2, #0
   152d0:	ldr	r1, [fp, #-12]
   152d4:	ldr	r0, [fp, #-8]
   152d8:	bl	152f4 <__assert_fail@plt+0x4004>
   152dc:	mov	r3, r0
   152e0:	mov	r0, r3
   152e4:	sub	sp, fp, #4
   152e8:	ldr	fp, [sp]
   152ec:	add	sp, sp, #4
   152f0:	pop	{pc}		; (ldr pc, [sp], #4)
   152f4:	str	fp, [sp, #-8]!
   152f8:	str	lr, [sp, #4]
   152fc:	add	fp, sp, #4
   15300:	sub	sp, sp, #64	; 0x40
   15304:	str	r0, [fp, #-32]	; 0xffffffe0
   15308:	str	r1, [fp, #-36]	; 0xffffffdc
   1530c:	str	r2, [fp, #-40]	; 0xffffffd8
   15310:	str	r3, [fp, #-44]	; 0xffffffd4
   15314:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15318:	cmp	r3, #0
   1531c:	beq	15328 <__assert_fail@plt+0x4038>
   15320:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15324:	b	15330 <__assert_fail@plt+0x4040>
   15328:	movw	r3, #17812	; 0x4594
   1532c:	movt	r3, #4
   15330:	str	r3, [fp, #-8]
   15334:	bl	111f4 <__errno_location@plt>
   15338:	mov	r3, r0
   1533c:	ldr	r3, [r3]
   15340:	str	r3, [fp, #-12]
   15344:	ldr	r3, [fp, #-8]
   15348:	ldr	r3, [r3, #4]
   1534c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15350:	cmp	r2, #0
   15354:	moveq	r2, #1
   15358:	movne	r2, #0
   1535c:	uxtb	r2, r2
   15360:	orr	r3, r3, r2
   15364:	str	r3, [fp, #-16]
   15368:	ldr	r3, [fp, #-8]
   1536c:	ldr	r3, [r3]
   15370:	ldr	r2, [fp, #-8]
   15374:	add	r2, r2, #8
   15378:	ldr	r1, [fp, #-8]
   1537c:	ldr	r1, [r1, #40]	; 0x28
   15380:	ldr	r0, [fp, #-8]
   15384:	ldr	r0, [r0, #44]	; 0x2c
   15388:	str	r0, [sp, #16]
   1538c:	str	r1, [sp, #12]
   15390:	str	r2, [sp, #8]
   15394:	ldr	r2, [fp, #-16]
   15398:	str	r2, [sp, #4]
   1539c:	str	r3, [sp]
   153a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   153a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   153a8:	mov	r1, #0
   153ac:	mov	r0, #0
   153b0:	bl	13b0c <__assert_fail@plt+0x281c>
   153b4:	mov	r3, r0
   153b8:	add	r3, r3, #1
   153bc:	str	r3, [fp, #-20]	; 0xffffffec
   153c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   153c4:	bl	2ffb0 <__assert_fail@plt+0x1ecc0>
   153c8:	mov	r3, r0
   153cc:	str	r3, [fp, #-24]	; 0xffffffe8
   153d0:	ldr	r3, [fp, #-8]
   153d4:	ldr	r3, [r3]
   153d8:	ldr	r2, [fp, #-8]
   153dc:	add	r2, r2, #8
   153e0:	ldr	r1, [fp, #-8]
   153e4:	ldr	r1, [r1, #40]	; 0x28
   153e8:	ldr	r0, [fp, #-8]
   153ec:	ldr	r0, [r0, #44]	; 0x2c
   153f0:	str	r0, [sp, #16]
   153f4:	str	r1, [sp, #12]
   153f8:	str	r2, [sp, #8]
   153fc:	ldr	r2, [fp, #-16]
   15400:	str	r2, [sp, #4]
   15404:	str	r3, [sp]
   15408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1540c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15410:	ldr	r1, [fp, #-20]	; 0xffffffec
   15414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15418:	bl	13b0c <__assert_fail@plt+0x281c>
   1541c:	bl	111f4 <__errno_location@plt>
   15420:	mov	r2, r0
   15424:	ldr	r3, [fp, #-12]
   15428:	str	r3, [r2]
   1542c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15430:	cmp	r3, #0
   15434:	beq	15448 <__assert_fail@plt+0x4158>
   15438:	ldr	r3, [fp, #-20]	; 0xffffffec
   1543c:	sub	r2, r3, #1
   15440:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15444:	str	r2, [r3]
   15448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1544c:	mov	r0, r3
   15450:	sub	sp, fp, #4
   15454:	ldr	fp, [sp]
   15458:	add	sp, sp, #4
   1545c:	pop	{pc}		; (ldr pc, [sp], #4)
   15460:	str	fp, [sp, #-8]!
   15464:	str	lr, [sp, #4]
   15468:	add	fp, sp, #4
   1546c:	sub	sp, sp, #8
   15470:	movw	r3, #16772	; 0x4184
   15474:	movt	r3, #4
   15478:	ldr	r3, [r3]
   1547c:	str	r3, [fp, #-12]
   15480:	mov	r3, #1
   15484:	str	r3, [fp, #-8]
   15488:	b	154b4 <__assert_fail@plt+0x41c4>
   1548c:	ldr	r3, [fp, #-8]
   15490:	lsl	r3, r3, #3
   15494:	ldr	r2, [fp, #-12]
   15498:	add	r3, r2, r3
   1549c:	ldr	r3, [r3, #4]
   154a0:	mov	r0, r3
   154a4:	bl	31b28 <__assert_fail@plt+0x20838>
   154a8:	ldr	r3, [fp, #-8]
   154ac:	add	r3, r3, #1
   154b0:	str	r3, [fp, #-8]
   154b4:	movw	r3, #16760	; 0x4178
   154b8:	movt	r3, #4
   154bc:	ldr	r3, [r3]
   154c0:	ldr	r2, [fp, #-8]
   154c4:	cmp	r2, r3
   154c8:	blt	1548c <__assert_fail@plt+0x419c>
   154cc:	ldr	r3, [fp, #-12]
   154d0:	ldr	r2, [r3, #4]
   154d4:	movw	r3, #17860	; 0x45c4
   154d8:	movt	r3, #4
   154dc:	cmp	r2, r3
   154e0:	beq	15518 <__assert_fail@plt+0x4228>
   154e4:	ldr	r3, [fp, #-12]
   154e8:	ldr	r3, [r3, #4]
   154ec:	mov	r0, r3
   154f0:	bl	31b28 <__assert_fail@plt+0x20838>
   154f4:	movw	r3, #16764	; 0x417c
   154f8:	movt	r3, #4
   154fc:	mov	r2, #256	; 0x100
   15500:	str	r2, [r3]
   15504:	movw	r3, #16764	; 0x417c
   15508:	movt	r3, #4
   1550c:	movw	r2, #17860	; 0x45c4
   15510:	movt	r2, #4
   15514:	str	r2, [r3, #4]
   15518:	ldr	r2, [fp, #-12]
   1551c:	movw	r3, #16764	; 0x417c
   15520:	movt	r3, #4
   15524:	cmp	r2, r3
   15528:	beq	15548 <__assert_fail@plt+0x4258>
   1552c:	ldr	r0, [fp, #-12]
   15530:	bl	31b28 <__assert_fail@plt+0x20838>
   15534:	movw	r3, #16772	; 0x4184
   15538:	movt	r3, #4
   1553c:	movw	r2, #16764	; 0x417c
   15540:	movt	r2, #4
   15544:	str	r2, [r3]
   15548:	movw	r3, #16760	; 0x4178
   1554c:	movt	r3, #4
   15550:	mov	r2, #1
   15554:	str	r2, [r3]
   15558:	nop	{0}
   1555c:	sub	sp, fp, #4
   15560:	ldr	fp, [sp]
   15564:	add	sp, sp, #4
   15568:	pop	{pc}		; (ldr pc, [sp], #4)
   1556c:	str	fp, [sp, #-8]!
   15570:	str	lr, [sp, #4]
   15574:	add	fp, sp, #4
   15578:	sub	sp, sp, #80	; 0x50
   1557c:	str	r0, [fp, #-48]	; 0xffffffd0
   15580:	str	r1, [fp, #-52]	; 0xffffffcc
   15584:	str	r2, [fp, #-56]	; 0xffffffc8
   15588:	str	r3, [fp, #-60]	; 0xffffffc4
   1558c:	bl	111f4 <__errno_location@plt>
   15590:	mov	r3, r0
   15594:	ldr	r3, [r3]
   15598:	str	r3, [fp, #-16]
   1559c:	movw	r3, #16772	; 0x4184
   155a0:	movt	r3, #4
   155a4:	ldr	r3, [r3]
   155a8:	str	r3, [fp, #-8]
   155ac:	mvn	r3, #-2147483648	; 0x80000000
   155b0:	str	r3, [fp, #-20]	; 0xffffffec
   155b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   155b8:	cmp	r3, #0
   155bc:	blt	155d0 <__assert_fail@plt+0x42e0>
   155c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   155c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155c8:	cmp	r2, r3
   155cc:	blt	155d4 <__assert_fail@plt+0x42e4>
   155d0:	bl	112cc <abort@plt>
   155d4:	movw	r3, #16760	; 0x4178
   155d8:	movt	r3, #4
   155dc:	ldr	r3, [r3]
   155e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   155e4:	cmp	r2, r3
   155e8:	blt	156e0 <__assert_fail@plt+0x43f0>
   155ec:	ldr	r2, [fp, #-8]
   155f0:	movw	r3, #16764	; 0x417c
   155f4:	movt	r3, #4
   155f8:	cmp	r2, r3
   155fc:	moveq	r3, #1
   15600:	movne	r3, #0
   15604:	strb	r3, [fp, #-21]	; 0xffffffeb
   15608:	movw	r3, #16760	; 0x4178
   1560c:	movt	r3, #4
   15610:	ldr	r3, [r3]
   15614:	str	r3, [fp, #-40]	; 0xffffffd8
   15618:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1561c:	cmp	r3, #0
   15620:	beq	1562c <__assert_fail@plt+0x433c>
   15624:	mov	r0, #0
   15628:	b	15630 <__assert_fail@plt+0x4340>
   1562c:	ldr	r0, [fp, #-8]
   15630:	movw	r3, #16760	; 0x4178
   15634:	movt	r3, #4
   15638:	ldr	r3, [r3]
   1563c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15640:	sub	r3, r2, r3
   15644:	add	r2, r3, #1
   15648:	sub	r1, fp, #40	; 0x28
   1564c:	mov	r3, #8
   15650:	str	r3, [sp]
   15654:	ldr	r3, [fp, #-20]	; 0xffffffec
   15658:	bl	30310 <__assert_fail@plt+0x1f020>
   1565c:	str	r0, [fp, #-8]
   15660:	movw	r3, #16772	; 0x4184
   15664:	movt	r3, #4
   15668:	ldr	r2, [fp, #-8]
   1566c:	str	r2, [r3]
   15670:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   15674:	cmp	r3, #0
   15678:	beq	15694 <__assert_fail@plt+0x43a4>
   1567c:	ldr	r2, [fp, #-8]
   15680:	movw	r3, #16764	; 0x417c
   15684:	movt	r3, #4
   15688:	mov	r1, r2
   1568c:	ldrd	r2, [r3]
   15690:	strd	r2, [r1]
   15694:	movw	r3, #16760	; 0x4178
   15698:	movt	r3, #4
   1569c:	ldr	r3, [r3]
   156a0:	lsl	r3, r3, #3
   156a4:	ldr	r2, [fp, #-8]
   156a8:	add	r0, r2, r3
   156ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156b0:	movw	r3, #16760	; 0x4178
   156b4:	movt	r3, #4
   156b8:	ldr	r3, [r3]
   156bc:	sub	r3, r2, r3
   156c0:	lsl	r3, r3, #3
   156c4:	mov	r2, r3
   156c8:	mov	r1, #0
   156cc:	bl	11218 <memset@plt>
   156d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156d4:	movw	r3, #16760	; 0x4178
   156d8:	movt	r3, #4
   156dc:	str	r2, [r3]
   156e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156e4:	lsl	r3, r3, #3
   156e8:	ldr	r2, [fp, #-8]
   156ec:	add	r3, r2, r3
   156f0:	ldr	r3, [r3]
   156f4:	str	r3, [fp, #-28]	; 0xffffffe4
   156f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156fc:	lsl	r3, r3, #3
   15700:	ldr	r2, [fp, #-8]
   15704:	add	r3, r2, r3
   15708:	ldr	r3, [r3, #4]
   1570c:	str	r3, [fp, #-12]
   15710:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15714:	ldr	r3, [r3, #4]
   15718:	orr	r3, r3, #1
   1571c:	str	r3, [fp, #-32]	; 0xffffffe0
   15720:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15724:	ldr	r3, [r3]
   15728:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1572c:	add	r2, r2, #8
   15730:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15734:	ldr	r1, [r1, #40]	; 0x28
   15738:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1573c:	ldr	r0, [r0, #44]	; 0x2c
   15740:	str	r0, [sp, #16]
   15744:	str	r1, [sp, #12]
   15748:	str	r2, [sp, #8]
   1574c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15750:	str	r2, [sp, #4]
   15754:	str	r3, [sp]
   15758:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1575c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15764:	ldr	r0, [fp, #-12]
   15768:	bl	13b0c <__assert_fail@plt+0x281c>
   1576c:	str	r0, [fp, #-36]	; 0xffffffdc
   15770:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15774:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15778:	cmp	r2, r3
   1577c:	bhi	15834 <__assert_fail@plt+0x4544>
   15780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15784:	add	r3, r3, #1
   15788:	str	r3, [fp, #-28]	; 0xffffffe4
   1578c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15790:	lsl	r3, r3, #3
   15794:	ldr	r2, [fp, #-8]
   15798:	add	r3, r2, r3
   1579c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   157a0:	str	r2, [r3]
   157a4:	ldr	r2, [fp, #-12]
   157a8:	movw	r3, #17860	; 0x45c4
   157ac:	movt	r3, #4
   157b0:	cmp	r2, r3
   157b4:	beq	157c0 <__assert_fail@plt+0x44d0>
   157b8:	ldr	r0, [fp, #-12]
   157bc:	bl	31b28 <__assert_fail@plt+0x20838>
   157c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   157c4:	bl	2ffb0 <__assert_fail@plt+0x1ecc0>
   157c8:	mov	r3, r0
   157cc:	str	r3, [fp, #-12]
   157d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   157d4:	lsl	r3, r3, #3
   157d8:	ldr	r2, [fp, #-8]
   157dc:	add	r3, r2, r3
   157e0:	ldr	r2, [fp, #-12]
   157e4:	str	r2, [r3, #4]
   157e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   157ec:	ldr	r3, [r3]
   157f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   157f4:	add	r2, r2, #8
   157f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   157fc:	ldr	r1, [r1, #40]	; 0x28
   15800:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15804:	ldr	r0, [r0, #44]	; 0x2c
   15808:	str	r0, [sp, #16]
   1580c:	str	r1, [sp, #12]
   15810:	str	r2, [sp, #8]
   15814:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15818:	str	r2, [sp, #4]
   1581c:	str	r3, [sp]
   15820:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15824:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1582c:	ldr	r0, [fp, #-12]
   15830:	bl	13b0c <__assert_fail@plt+0x281c>
   15834:	bl	111f4 <__errno_location@plt>
   15838:	mov	r2, r0
   1583c:	ldr	r3, [fp, #-16]
   15840:	str	r3, [r2]
   15844:	ldr	r3, [fp, #-12]
   15848:	mov	r0, r3
   1584c:	sub	sp, fp, #4
   15850:	ldr	fp, [sp]
   15854:	add	sp, sp, #4
   15858:	pop	{pc}		; (ldr pc, [sp], #4)
   1585c:	str	fp, [sp, #-8]!
   15860:	str	lr, [sp, #4]
   15864:	add	fp, sp, #4
   15868:	sub	sp, sp, #8
   1586c:	str	r0, [fp, #-8]
   15870:	str	r1, [fp, #-12]
   15874:	movw	r3, #17812	; 0x4594
   15878:	movt	r3, #4
   1587c:	mvn	r2, #0
   15880:	ldr	r1, [fp, #-12]
   15884:	ldr	r0, [fp, #-8]
   15888:	bl	1556c <__assert_fail@plt+0x427c>
   1588c:	mov	r3, r0
   15890:	mov	r0, r3
   15894:	sub	sp, fp, #4
   15898:	ldr	fp, [sp]
   1589c:	add	sp, sp, #4
   158a0:	pop	{pc}		; (ldr pc, [sp], #4)
   158a4:	str	fp, [sp, #-8]!
   158a8:	str	lr, [sp, #4]
   158ac:	add	fp, sp, #4
   158b0:	sub	sp, sp, #16
   158b4:	str	r0, [fp, #-8]
   158b8:	str	r1, [fp, #-12]
   158bc:	str	r2, [fp, #-16]
   158c0:	movw	r3, #17812	; 0x4594
   158c4:	movt	r3, #4
   158c8:	ldr	r2, [fp, #-16]
   158cc:	ldr	r1, [fp, #-12]
   158d0:	ldr	r0, [fp, #-8]
   158d4:	bl	1556c <__assert_fail@plt+0x427c>
   158d8:	mov	r3, r0
   158dc:	mov	r0, r3
   158e0:	sub	sp, fp, #4
   158e4:	ldr	fp, [sp]
   158e8:	add	sp, sp, #4
   158ec:	pop	{pc}		; (ldr pc, [sp], #4)
   158f0:	str	fp, [sp, #-8]!
   158f4:	str	lr, [sp, #4]
   158f8:	add	fp, sp, #4
   158fc:	sub	sp, sp, #8
   15900:	str	r0, [fp, #-8]
   15904:	ldr	r1, [fp, #-8]
   15908:	mov	r0, #0
   1590c:	bl	1585c <__assert_fail@plt+0x456c>
   15910:	mov	r3, r0
   15914:	mov	r0, r3
   15918:	sub	sp, fp, #4
   1591c:	ldr	fp, [sp]
   15920:	add	sp, sp, #4
   15924:	pop	{pc}		; (ldr pc, [sp], #4)
   15928:	str	fp, [sp, #-8]!
   1592c:	str	lr, [sp, #4]
   15930:	add	fp, sp, #4
   15934:	sub	sp, sp, #8
   15938:	str	r0, [fp, #-8]
   1593c:	str	r1, [fp, #-12]
   15940:	ldr	r2, [fp, #-12]
   15944:	ldr	r1, [fp, #-8]
   15948:	mov	r0, #0
   1594c:	bl	158a4 <__assert_fail@plt+0x45b4>
   15950:	mov	r3, r0
   15954:	mov	r0, r3
   15958:	sub	sp, fp, #4
   1595c:	ldr	fp, [sp]
   15960:	add	sp, sp, #4
   15964:	pop	{pc}		; (ldr pc, [sp], #4)
   15968:	str	fp, [sp, #-8]!
   1596c:	str	lr, [sp, #4]
   15970:	add	fp, sp, #4
   15974:	sub	sp, sp, #64	; 0x40
   15978:	str	r0, [fp, #-56]	; 0xffffffc8
   1597c:	str	r1, [fp, #-60]	; 0xffffffc4
   15980:	str	r2, [fp, #-64]	; 0xffffffc0
   15984:	sub	r3, fp, #52	; 0x34
   15988:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1598c:	mov	r0, r3
   15990:	bl	13968 <__assert_fail@plt+0x2678>
   15994:	sub	r3, fp, #52	; 0x34
   15998:	mvn	r2, #0
   1599c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   159a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   159a4:	bl	1556c <__assert_fail@plt+0x427c>
   159a8:	mov	r3, r0
   159ac:	mov	r0, r3
   159b0:	sub	sp, fp, #4
   159b4:	ldr	fp, [sp]
   159b8:	add	sp, sp, #4
   159bc:	pop	{pc}		; (ldr pc, [sp], #4)
   159c0:	str	fp, [sp, #-8]!
   159c4:	str	lr, [sp, #4]
   159c8:	add	fp, sp, #4
   159cc:	sub	sp, sp, #64	; 0x40
   159d0:	str	r0, [fp, #-56]	; 0xffffffc8
   159d4:	str	r1, [fp, #-60]	; 0xffffffc4
   159d8:	str	r2, [fp, #-64]	; 0xffffffc0
   159dc:	str	r3, [fp, #-68]	; 0xffffffbc
   159e0:	sub	r3, fp, #52	; 0x34
   159e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   159e8:	mov	r0, r3
   159ec:	bl	13968 <__assert_fail@plt+0x2678>
   159f0:	sub	r3, fp, #52	; 0x34
   159f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   159f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   159fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15a00:	bl	1556c <__assert_fail@plt+0x427c>
   15a04:	mov	r3, r0
   15a08:	mov	r0, r3
   15a0c:	sub	sp, fp, #4
   15a10:	ldr	fp, [sp]
   15a14:	add	sp, sp, #4
   15a18:	pop	{pc}		; (ldr pc, [sp], #4)
   15a1c:	str	fp, [sp, #-8]!
   15a20:	str	lr, [sp, #4]
   15a24:	add	fp, sp, #4
   15a28:	sub	sp, sp, #8
   15a2c:	str	r0, [fp, #-8]
   15a30:	str	r1, [fp, #-12]
   15a34:	ldr	r2, [fp, #-12]
   15a38:	ldr	r1, [fp, #-8]
   15a3c:	mov	r0, #0
   15a40:	bl	15968 <__assert_fail@plt+0x4678>
   15a44:	mov	r3, r0
   15a48:	mov	r0, r3
   15a4c:	sub	sp, fp, #4
   15a50:	ldr	fp, [sp]
   15a54:	add	sp, sp, #4
   15a58:	pop	{pc}		; (ldr pc, [sp], #4)
   15a5c:	str	fp, [sp, #-8]!
   15a60:	str	lr, [sp, #4]
   15a64:	add	fp, sp, #4
   15a68:	sub	sp, sp, #16
   15a6c:	str	r0, [fp, #-8]
   15a70:	str	r1, [fp, #-12]
   15a74:	str	r2, [fp, #-16]
   15a78:	ldr	r3, [fp, #-16]
   15a7c:	ldr	r2, [fp, #-12]
   15a80:	ldr	r1, [fp, #-8]
   15a84:	mov	r0, #0
   15a88:	bl	159c0 <__assert_fail@plt+0x46d0>
   15a8c:	mov	r3, r0
   15a90:	mov	r0, r3
   15a94:	sub	sp, fp, #4
   15a98:	ldr	fp, [sp]
   15a9c:	add	sp, sp, #4
   15aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   15aa4:	str	fp, [sp, #-8]!
   15aa8:	str	lr, [sp, #4]
   15aac:	add	fp, sp, #4
   15ab0:	sub	sp, sp, #64	; 0x40
   15ab4:	str	r0, [fp, #-56]	; 0xffffffc8
   15ab8:	str	r1, [fp, #-60]	; 0xffffffc4
   15abc:	mov	r3, r2
   15ac0:	strb	r3, [fp, #-61]	; 0xffffffc3
   15ac4:	movw	r2, #17812	; 0x4594
   15ac8:	movt	r2, #4
   15acc:	sub	r3, fp, #52	; 0x34
   15ad0:	ldrd	r0, [r2]
   15ad4:	strd	r0, [r3]
   15ad8:	ldrd	r0, [r2, #8]
   15adc:	strd	r0, [r3, #8]
   15ae0:	ldrd	r0, [r2, #16]
   15ae4:	strd	r0, [r3, #16]
   15ae8:	ldrd	r0, [r2, #24]
   15aec:	strd	r0, [r3, #24]
   15af0:	ldrd	r0, [r2, #32]
   15af4:	strd	r0, [r3, #32]
   15af8:	ldrd	r0, [r2, #40]	; 0x28
   15afc:	strd	r0, [r3, #40]	; 0x28
   15b00:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   15b04:	sub	r3, fp, #52	; 0x34
   15b08:	mov	r2, #1
   15b0c:	mov	r0, r3
   15b10:	bl	137c8 <__assert_fail@plt+0x24d8>
   15b14:	sub	r3, fp, #52	; 0x34
   15b18:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15b1c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15b20:	mov	r0, #0
   15b24:	bl	1556c <__assert_fail@plt+0x427c>
   15b28:	mov	r3, r0
   15b2c:	mov	r0, r3
   15b30:	sub	sp, fp, #4
   15b34:	ldr	fp, [sp]
   15b38:	add	sp, sp, #4
   15b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b40:	str	fp, [sp, #-8]!
   15b44:	str	lr, [sp, #4]
   15b48:	add	fp, sp, #4
   15b4c:	sub	sp, sp, #8
   15b50:	str	r0, [fp, #-8]
   15b54:	mov	r3, r1
   15b58:	strb	r3, [fp, #-9]
   15b5c:	ldrb	r3, [fp, #-9]
   15b60:	mov	r2, r3
   15b64:	mvn	r1, #0
   15b68:	ldr	r0, [fp, #-8]
   15b6c:	bl	15aa4 <__assert_fail@plt+0x47b4>
   15b70:	mov	r3, r0
   15b74:	mov	r0, r3
   15b78:	sub	sp, fp, #4
   15b7c:	ldr	fp, [sp]
   15b80:	add	sp, sp, #4
   15b84:	pop	{pc}		; (ldr pc, [sp], #4)
   15b88:	str	fp, [sp, #-8]!
   15b8c:	str	lr, [sp, #4]
   15b90:	add	fp, sp, #4
   15b94:	sub	sp, sp, #8
   15b98:	str	r0, [fp, #-8]
   15b9c:	mov	r1, #58	; 0x3a
   15ba0:	ldr	r0, [fp, #-8]
   15ba4:	bl	15b40 <__assert_fail@plt+0x4850>
   15ba8:	mov	r3, r0
   15bac:	mov	r0, r3
   15bb0:	sub	sp, fp, #4
   15bb4:	ldr	fp, [sp]
   15bb8:	add	sp, sp, #4
   15bbc:	pop	{pc}		; (ldr pc, [sp], #4)
   15bc0:	str	fp, [sp, #-8]!
   15bc4:	str	lr, [sp, #4]
   15bc8:	add	fp, sp, #4
   15bcc:	sub	sp, sp, #8
   15bd0:	str	r0, [fp, #-8]
   15bd4:	str	r1, [fp, #-12]
   15bd8:	mov	r2, #58	; 0x3a
   15bdc:	ldr	r1, [fp, #-12]
   15be0:	ldr	r0, [fp, #-8]
   15be4:	bl	15aa4 <__assert_fail@plt+0x47b4>
   15be8:	mov	r3, r0
   15bec:	mov	r0, r3
   15bf0:	sub	sp, fp, #4
   15bf4:	ldr	fp, [sp]
   15bf8:	add	sp, sp, #4
   15bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   15c00:	str	fp, [sp, #-8]!
   15c04:	str	lr, [sp, #4]
   15c08:	add	fp, sp, #4
   15c0c:	sub	sp, sp, #112	; 0x70
   15c10:	str	r0, [fp, #-56]	; 0xffffffc8
   15c14:	str	r1, [fp, #-60]	; 0xffffffc4
   15c18:	str	r2, [fp, #-64]	; 0xffffffc0
   15c1c:	sub	r3, fp, #116	; 0x74
   15c20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15c24:	mov	r0, r3
   15c28:	bl	13968 <__assert_fail@plt+0x2678>
   15c2c:	sub	r3, fp, #52	; 0x34
   15c30:	sub	r2, fp, #116	; 0x74
   15c34:	ldrd	r0, [r2]
   15c38:	strd	r0, [r3]
   15c3c:	ldrd	r0, [r2, #8]
   15c40:	strd	r0, [r3, #8]
   15c44:	ldrd	r0, [r2, #16]
   15c48:	strd	r0, [r3, #16]
   15c4c:	ldrd	r0, [r2, #24]
   15c50:	strd	r0, [r3, #24]
   15c54:	ldrd	r0, [r2, #32]
   15c58:	strd	r0, [r3, #32]
   15c5c:	ldrd	r0, [r2, #40]	; 0x28
   15c60:	strd	r0, [r3, #40]	; 0x28
   15c64:	sub	r3, fp, #52	; 0x34
   15c68:	mov	r2, #1
   15c6c:	mov	r1, #58	; 0x3a
   15c70:	mov	r0, r3
   15c74:	bl	137c8 <__assert_fail@plt+0x24d8>
   15c78:	sub	r3, fp, #52	; 0x34
   15c7c:	mvn	r2, #0
   15c80:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15c84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15c88:	bl	1556c <__assert_fail@plt+0x427c>
   15c8c:	mov	r3, r0
   15c90:	mov	r0, r3
   15c94:	sub	sp, fp, #4
   15c98:	ldr	fp, [sp]
   15c9c:	add	sp, sp, #4
   15ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ca4:	str	fp, [sp, #-8]!
   15ca8:	str	lr, [sp, #4]
   15cac:	add	fp, sp, #4
   15cb0:	sub	sp, sp, #24
   15cb4:	str	r0, [fp, #-8]
   15cb8:	str	r1, [fp, #-12]
   15cbc:	str	r2, [fp, #-16]
   15cc0:	str	r3, [fp, #-20]	; 0xffffffec
   15cc4:	mvn	r3, #0
   15cc8:	str	r3, [sp]
   15ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cd0:	ldr	r2, [fp, #-16]
   15cd4:	ldr	r1, [fp, #-12]
   15cd8:	ldr	r0, [fp, #-8]
   15cdc:	bl	15cf8 <__assert_fail@plt+0x4a08>
   15ce0:	mov	r3, r0
   15ce4:	mov	r0, r3
   15ce8:	sub	sp, fp, #4
   15cec:	ldr	fp, [sp]
   15cf0:	add	sp, sp, #4
   15cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   15cf8:	str	fp, [sp, #-8]!
   15cfc:	str	lr, [sp, #4]
   15d00:	add	fp, sp, #4
   15d04:	sub	sp, sp, #64	; 0x40
   15d08:	str	r0, [fp, #-56]	; 0xffffffc8
   15d0c:	str	r1, [fp, #-60]	; 0xffffffc4
   15d10:	str	r2, [fp, #-64]	; 0xffffffc0
   15d14:	str	r3, [fp, #-68]	; 0xffffffbc
   15d18:	movw	r2, #17812	; 0x4594
   15d1c:	movt	r2, #4
   15d20:	sub	r3, fp, #52	; 0x34
   15d24:	ldrd	r0, [r2]
   15d28:	strd	r0, [r3]
   15d2c:	ldrd	r0, [r2, #8]
   15d30:	strd	r0, [r3, #8]
   15d34:	ldrd	r0, [r2, #16]
   15d38:	strd	r0, [r3, #16]
   15d3c:	ldrd	r0, [r2, #24]
   15d40:	strd	r0, [r3, #24]
   15d44:	ldrd	r0, [r2, #32]
   15d48:	strd	r0, [r3, #32]
   15d4c:	ldrd	r0, [r2, #40]	; 0x28
   15d50:	strd	r0, [r3, #40]	; 0x28
   15d54:	sub	r3, fp, #52	; 0x34
   15d58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15d5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15d60:	mov	r0, r3
   15d64:	bl	138e0 <__assert_fail@plt+0x25f0>
   15d68:	sub	r3, fp, #52	; 0x34
   15d6c:	ldr	r2, [fp, #4]
   15d70:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15d74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d78:	bl	1556c <__assert_fail@plt+0x427c>
   15d7c:	mov	r3, r0
   15d80:	mov	r0, r3
   15d84:	sub	sp, fp, #4
   15d88:	ldr	fp, [sp]
   15d8c:	add	sp, sp, #4
   15d90:	pop	{pc}		; (ldr pc, [sp], #4)
   15d94:	str	fp, [sp, #-8]!
   15d98:	str	lr, [sp, #4]
   15d9c:	add	fp, sp, #4
   15da0:	sub	sp, sp, #16
   15da4:	str	r0, [fp, #-8]
   15da8:	str	r1, [fp, #-12]
   15dac:	str	r2, [fp, #-16]
   15db0:	ldr	r3, [fp, #-16]
   15db4:	ldr	r2, [fp, #-12]
   15db8:	ldr	r1, [fp, #-8]
   15dbc:	mov	r0, #0
   15dc0:	bl	15ca4 <__assert_fail@plt+0x49b4>
   15dc4:	mov	r3, r0
   15dc8:	mov	r0, r3
   15dcc:	sub	sp, fp, #4
   15dd0:	ldr	fp, [sp]
   15dd4:	add	sp, sp, #4
   15dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   15ddc:	str	fp, [sp, #-8]!
   15de0:	str	lr, [sp, #4]
   15de4:	add	fp, sp, #4
   15de8:	sub	sp, sp, #24
   15dec:	str	r0, [fp, #-8]
   15df0:	str	r1, [fp, #-12]
   15df4:	str	r2, [fp, #-16]
   15df8:	str	r3, [fp, #-20]	; 0xffffffec
   15dfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e00:	str	r3, [sp]
   15e04:	ldr	r3, [fp, #-16]
   15e08:	ldr	r2, [fp, #-12]
   15e0c:	ldr	r1, [fp, #-8]
   15e10:	mov	r0, #0
   15e14:	bl	15cf8 <__assert_fail@plt+0x4a08>
   15e18:	mov	r3, r0
   15e1c:	mov	r0, r3
   15e20:	sub	sp, fp, #4
   15e24:	ldr	fp, [sp]
   15e28:	add	sp, sp, #4
   15e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e30:	str	fp, [sp, #-8]!
   15e34:	str	lr, [sp, #4]
   15e38:	add	fp, sp, #4
   15e3c:	sub	sp, sp, #16
   15e40:	str	r0, [fp, #-8]
   15e44:	str	r1, [fp, #-12]
   15e48:	str	r2, [fp, #-16]
   15e4c:	movw	r3, #16776	; 0x4188
   15e50:	movt	r3, #4
   15e54:	ldr	r2, [fp, #-16]
   15e58:	ldr	r1, [fp, #-12]
   15e5c:	ldr	r0, [fp, #-8]
   15e60:	bl	1556c <__assert_fail@plt+0x427c>
   15e64:	mov	r3, r0
   15e68:	mov	r0, r3
   15e6c:	sub	sp, fp, #4
   15e70:	ldr	fp, [sp]
   15e74:	add	sp, sp, #4
   15e78:	pop	{pc}		; (ldr pc, [sp], #4)
   15e7c:	str	fp, [sp, #-8]!
   15e80:	str	lr, [sp, #4]
   15e84:	add	fp, sp, #4
   15e88:	sub	sp, sp, #8
   15e8c:	str	r0, [fp, #-8]
   15e90:	str	r1, [fp, #-12]
   15e94:	ldr	r2, [fp, #-12]
   15e98:	ldr	r1, [fp, #-8]
   15e9c:	mov	r0, #0
   15ea0:	bl	15e30 <__assert_fail@plt+0x4b40>
   15ea4:	mov	r3, r0
   15ea8:	mov	r0, r3
   15eac:	sub	sp, fp, #4
   15eb0:	ldr	fp, [sp]
   15eb4:	add	sp, sp, #4
   15eb8:	pop	{pc}		; (ldr pc, [sp], #4)
   15ebc:	str	fp, [sp, #-8]!
   15ec0:	str	lr, [sp, #4]
   15ec4:	add	fp, sp, #4
   15ec8:	sub	sp, sp, #8
   15ecc:	str	r0, [fp, #-8]
   15ed0:	str	r1, [fp, #-12]
   15ed4:	mvn	r2, #0
   15ed8:	ldr	r1, [fp, #-12]
   15edc:	ldr	r0, [fp, #-8]
   15ee0:	bl	15e30 <__assert_fail@plt+0x4b40>
   15ee4:	mov	r3, r0
   15ee8:	mov	r0, r3
   15eec:	sub	sp, fp, #4
   15ef0:	ldr	fp, [sp]
   15ef4:	add	sp, sp, #4
   15ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   15efc:	str	fp, [sp, #-8]!
   15f00:	str	lr, [sp, #4]
   15f04:	add	fp, sp, #4
   15f08:	sub	sp, sp, #8
   15f0c:	str	r0, [fp, #-8]
   15f10:	ldr	r1, [fp, #-8]
   15f14:	mov	r0, #0
   15f18:	bl	15ebc <__assert_fail@plt+0x4bcc>
   15f1c:	mov	r3, r0
   15f20:	mov	r0, r3
   15f24:	sub	sp, fp, #4
   15f28:	ldr	fp, [sp]
   15f2c:	add	sp, sp, #4
   15f30:	pop	{pc}		; (ldr pc, [sp], #4)
   15f34:	push	{fp}		; (str fp, [sp, #-4]!)
   15f38:	add	fp, sp, #0
   15f3c:	mvn	r3, #0
   15f40:	mov	r0, r3
   15f44:	add	sp, fp, #0
   15f48:	pop	{fp}		; (ldr fp, [sp], #4)
   15f4c:	bx	lr
   15f50:	push	{fp}		; (str fp, [sp, #-4]!)
   15f54:	add	fp, sp, #0
   15f58:	sub	sp, sp, #12
   15f5c:	str	r0, [fp, #-8]
   15f60:	str	r1, [fp, #-12]
   15f64:	ldr	r3, [fp, #-12]
   15f68:	add	r2, r3, #31
   15f6c:	cmp	r3, #0
   15f70:	movlt	r3, r2
   15f74:	movge	r3, r3
   15f78:	asr	r3, r3, #5
   15f7c:	mov	r0, r3
   15f80:	mov	r3, r0
   15f84:	lsl	r3, r3, #2
   15f88:	ldr	r2, [fp, #-8]
   15f8c:	add	r3, r2, r3
   15f90:	ldr	r1, [r3]
   15f94:	ldr	r3, [fp, #-12]
   15f98:	rsbs	r2, r3, #0
   15f9c:	and	r3, r3, #31
   15fa0:	and	r2, r2, #31
   15fa4:	rsbpl	r3, r2, #0
   15fa8:	mov	r2, #1
   15fac:	lsl	r2, r2, r3
   15fb0:	mov	r3, r0
   15fb4:	lsl	r3, r3, #2
   15fb8:	ldr	r0, [fp, #-8]
   15fbc:	add	r3, r0, r3
   15fc0:	orr	r2, r1, r2
   15fc4:	str	r2, [r3]
   15fc8:	nop	{0}
   15fcc:	add	sp, fp, #0
   15fd0:	pop	{fp}		; (ldr fp, [sp], #4)
   15fd4:	bx	lr
   15fd8:	push	{fp}		; (str fp, [sp, #-4]!)
   15fdc:	add	fp, sp, #0
   15fe0:	sub	sp, sp, #12
   15fe4:	str	r0, [fp, #-8]
   15fe8:	str	r1, [fp, #-12]
   15fec:	ldr	r3, [fp, #-12]
   15ff0:	add	r2, r3, #31
   15ff4:	cmp	r3, #0
   15ff8:	movlt	r3, r2
   15ffc:	movge	r3, r3
   16000:	asr	r3, r3, #5
   16004:	mov	r0, r3
   16008:	mov	r3, r0
   1600c:	lsl	r3, r3, #2
   16010:	ldr	r2, [fp, #-8]
   16014:	add	r3, r2, r3
   16018:	ldr	r1, [r3]
   1601c:	ldr	r3, [fp, #-12]
   16020:	rsbs	r2, r3, #0
   16024:	and	r3, r3, #31
   16028:	and	r2, r2, #31
   1602c:	rsbpl	r3, r2, #0
   16030:	mov	r2, #1
   16034:	lsl	r3, r2, r3
   16038:	mvn	r2, r3
   1603c:	mov	r3, r0
   16040:	lsl	r3, r3, #2
   16044:	ldr	r0, [fp, #-8]
   16048:	add	r3, r0, r3
   1604c:	and	r2, r2, r1
   16050:	str	r2, [r3]
   16054:	nop	{0}
   16058:	add	sp, fp, #0
   1605c:	pop	{fp}		; (ldr fp, [sp], #4)
   16060:	bx	lr
   16064:	push	{fp}		; (str fp, [sp, #-4]!)
   16068:	add	fp, sp, #0
   1606c:	sub	sp, sp, #12
   16070:	str	r0, [fp, #-8]
   16074:	str	r1, [fp, #-12]
   16078:	ldr	r3, [fp, #-12]
   1607c:	add	r2, r3, #31
   16080:	cmp	r3, #0
   16084:	movlt	r3, r2
   16088:	movge	r3, r3
   1608c:	asr	r3, r3, #5
   16090:	lsl	r3, r3, #2
   16094:	ldr	r2, [fp, #-8]
   16098:	add	r3, r2, r3
   1609c:	ldr	r2, [r3]
   160a0:	ldr	r3, [fp, #-12]
   160a4:	rsbs	r1, r3, #0
   160a8:	and	r3, r3, #31
   160ac:	and	r1, r1, #31
   160b0:	rsbpl	r3, r1, #0
   160b4:	lsr	r3, r2, r3
   160b8:	and	r3, r3, #1
   160bc:	cmp	r3, #0
   160c0:	movne	r3, #1
   160c4:	moveq	r3, #0
   160c8:	uxtb	r3, r3
   160cc:	mov	r0, r3
   160d0:	add	sp, fp, #0
   160d4:	pop	{fp}		; (ldr fp, [sp], #4)
   160d8:	bx	lr
   160dc:	str	fp, [sp, #-8]!
   160e0:	str	lr, [sp, #4]
   160e4:	add	fp, sp, #4
   160e8:	sub	sp, sp, #8
   160ec:	str	r0, [fp, #-8]
   160f0:	mov	r2, #32
   160f4:	mov	r1, #0
   160f8:	ldr	r0, [fp, #-8]
   160fc:	bl	11218 <memset@plt>
   16100:	nop	{0}
   16104:	sub	sp, fp, #4
   16108:	ldr	fp, [sp]
   1610c:	add	sp, sp, #4
   16110:	pop	{pc}		; (ldr pc, [sp], #4)
   16114:	str	fp, [sp, #-8]!
   16118:	str	lr, [sp, #4]
   1611c:	add	fp, sp, #4
   16120:	sub	sp, sp, #8
   16124:	str	r0, [fp, #-8]
   16128:	mov	r2, #32
   1612c:	mvn	r1, #0
   16130:	ldr	r0, [fp, #-8]
   16134:	bl	11218 <memset@plt>
   16138:	nop	{0}
   1613c:	sub	sp, fp, #4
   16140:	ldr	fp, [sp]
   16144:	add	sp, sp, #4
   16148:	pop	{pc}		; (ldr pc, [sp], #4)
   1614c:	str	fp, [sp, #-8]!
   16150:	str	lr, [sp, #4]
   16154:	add	fp, sp, #4
   16158:	sub	sp, sp, #8
   1615c:	str	r0, [fp, #-8]
   16160:	str	r1, [fp, #-12]
   16164:	mov	r2, #32
   16168:	ldr	r1, [fp, #-12]
   1616c:	ldr	r0, [fp, #-8]
   16170:	bl	11074 <memcpy@plt>
   16174:	nop	{0}
   16178:	sub	sp, fp, #4
   1617c:	ldr	fp, [sp]
   16180:	add	sp, sp, #4
   16184:	pop	{pc}		; (ldr pc, [sp], #4)
   16188:	push	{fp}		; (str fp, [sp, #-4]!)
   1618c:	add	fp, sp, #0
   16190:	sub	sp, sp, #20
   16194:	str	r0, [fp, #-16]
   16198:	mov	r3, #0
   1619c:	str	r3, [fp, #-8]
   161a0:	b	161dc <__assert_fail@plt+0x4eec>
   161a4:	ldr	r3, [fp, #-8]
   161a8:	lsl	r3, r3, #2
   161ac:	ldr	r2, [fp, #-16]
   161b0:	add	r3, r2, r3
   161b4:	ldr	r2, [r3]
   161b8:	ldr	r3, [fp, #-8]
   161bc:	lsl	r3, r3, #2
   161c0:	ldr	r1, [fp, #-16]
   161c4:	add	r3, r1, r3
   161c8:	mvn	r2, r2
   161cc:	str	r2, [r3]
   161d0:	ldr	r3, [fp, #-8]
   161d4:	add	r3, r3, #1
   161d8:	str	r3, [fp, #-8]
   161dc:	ldr	r3, [fp, #-8]
   161e0:	cmp	r3, #7
   161e4:	ble	161a4 <__assert_fail@plt+0x4eb4>
   161e8:	nop	{0}
   161ec:	add	sp, fp, #0
   161f0:	pop	{fp}		; (ldr fp, [sp], #4)
   161f4:	bx	lr
   161f8:	push	{fp}		; (str fp, [sp, #-4]!)
   161fc:	add	fp, sp, #0
   16200:	sub	sp, sp, #20
   16204:	str	r0, [fp, #-16]
   16208:	str	r1, [fp, #-20]	; 0xffffffec
   1620c:	mov	r3, #0
   16210:	str	r3, [fp, #-8]
   16214:	b	16264 <__assert_fail@plt+0x4f74>
   16218:	ldr	r3, [fp, #-8]
   1621c:	lsl	r3, r3, #2
   16220:	ldr	r2, [fp, #-16]
   16224:	add	r3, r2, r3
   16228:	ldr	r1, [r3]
   1622c:	ldr	r3, [fp, #-8]
   16230:	lsl	r3, r3, #2
   16234:	ldr	r2, [fp, #-20]	; 0xffffffec
   16238:	add	r3, r2, r3
   1623c:	ldr	r2, [r3]
   16240:	ldr	r3, [fp, #-8]
   16244:	lsl	r3, r3, #2
   16248:	ldr	r0, [fp, #-16]
   1624c:	add	r3, r0, r3
   16250:	orr	r2, r1, r2
   16254:	str	r2, [r3]
   16258:	ldr	r3, [fp, #-8]
   1625c:	add	r3, r3, #1
   16260:	str	r3, [fp, #-8]
   16264:	ldr	r3, [fp, #-8]
   16268:	cmp	r3, #7
   1626c:	ble	16218 <__assert_fail@plt+0x4f28>
   16270:	nop	{0}
   16274:	add	sp, fp, #0
   16278:	pop	{fp}		; (ldr fp, [sp], #4)
   1627c:	bx	lr
   16280:	push	{fp}		; (str fp, [sp, #-4]!)
   16284:	add	fp, sp, #0
   16288:	sub	sp, sp, #20
   1628c:	str	r0, [fp, #-16]
   16290:	str	r1, [fp, #-20]	; 0xffffffec
   16294:	mov	r3, #0
   16298:	str	r3, [fp, #-8]
   1629c:	b	162ec <__assert_fail@plt+0x4ffc>
   162a0:	ldr	r3, [fp, #-8]
   162a4:	lsl	r3, r3, #2
   162a8:	ldr	r2, [fp, #-16]
   162ac:	add	r3, r2, r3
   162b0:	ldr	r1, [r3]
   162b4:	ldr	r3, [fp, #-8]
   162b8:	lsl	r3, r3, #2
   162bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   162c0:	add	r3, r2, r3
   162c4:	ldr	r2, [r3]
   162c8:	ldr	r3, [fp, #-8]
   162cc:	lsl	r3, r3, #2
   162d0:	ldr	r0, [fp, #-16]
   162d4:	add	r3, r0, r3
   162d8:	and	r2, r2, r1
   162dc:	str	r2, [r3]
   162e0:	ldr	r3, [fp, #-8]
   162e4:	add	r3, r3, #1
   162e8:	str	r3, [fp, #-8]
   162ec:	ldr	r3, [fp, #-8]
   162f0:	cmp	r3, #7
   162f4:	ble	162a0 <__assert_fail@plt+0x4fb0>
   162f8:	nop	{0}
   162fc:	add	sp, fp, #0
   16300:	pop	{fp}		; (ldr fp, [sp], #4)
   16304:	bx	lr
   16308:	push	{fp}		; (str fp, [sp, #-4]!)
   1630c:	add	fp, sp, #0
   16310:	sub	sp, sp, #20
   16314:	str	r0, [fp, #-16]
   16318:	str	r1, [fp, #-20]	; 0xffffffec
   1631c:	ldr	r3, [fp, #-16]
   16320:	ldr	r3, [r3, #80]	; 0x50
   16324:	cmp	r3, #1
   16328:	bne	16334 <__assert_fail@plt+0x5044>
   1632c:	mov	r3, #1
   16330:	b	1639c <__assert_fail@plt+0x50ac>
   16334:	mov	r3, #1
   16338:	str	r3, [fp, #-8]
   1633c:	b	16374 <__assert_fail@plt+0x5084>
   16340:	ldr	r3, [fp, #-16]
   16344:	ldr	r2, [r3, #8]
   16348:	ldr	r1, [fp, #-20]	; 0xffffffec
   1634c:	ldr	r3, [fp, #-8]
   16350:	add	r3, r1, r3
   16354:	lsl	r3, r3, #2
   16358:	add	r3, r2, r3
   1635c:	ldr	r3, [r3]
   16360:	cmn	r3, #1
   16364:	bne	16394 <__assert_fail@plt+0x50a4>
   16368:	ldr	r3, [fp, #-8]
   1636c:	add	r3, r3, #1
   16370:	str	r3, [fp, #-8]
   16374:	ldr	r2, [fp, #-20]	; 0xffffffec
   16378:	ldr	r3, [fp, #-8]
   1637c:	add	r2, r2, r3
   16380:	ldr	r3, [fp, #-16]
   16384:	ldr	r3, [r3, #28]
   16388:	cmp	r2, r3
   1638c:	blt	16340 <__assert_fail@plt+0x5050>
   16390:	b	16398 <__assert_fail@plt+0x50a8>
   16394:	nop	{0}
   16398:	ldr	r3, [fp, #-8]
   1639c:	mov	r0, r3
   163a0:	add	sp, fp, #0
   163a4:	pop	{fp}		; (ldr fp, [sp], #4)
   163a8:	bx	lr
   163ac:	push	{fp}		; (str fp, [sp, #-4]!)
   163b0:	add	fp, sp, #0
   163b4:	sub	sp, sp, #12
   163b8:	str	r0, [fp, #-8]
   163bc:	str	r1, [fp, #-12]
   163c0:	ldr	r3, [fp, #-8]
   163c4:	ldr	r3, [r3, #80]	; 0x50
   163c8:	cmp	r3, #1
   163cc:	bne	163e8 <__assert_fail@plt+0x50f8>
   163d0:	ldr	r3, [fp, #-8]
   163d4:	ldr	r2, [r3, #4]
   163d8:	ldr	r3, [fp, #-12]
   163dc:	add	r3, r2, r3
   163e0:	ldrb	r3, [r3]
   163e4:	b	16400 <__assert_fail@plt+0x5110>
   163e8:	ldr	r3, [fp, #-8]
   163ec:	ldr	r2, [r3, #8]
   163f0:	ldr	r3, [fp, #-12]
   163f4:	lsl	r3, r3, #2
   163f8:	add	r3, r2, r3
   163fc:	ldr	r3, [r3]
   16400:	mov	r0, r3
   16404:	add	sp, fp, #0
   16408:	pop	{fp}		; (ldr fp, [sp], #4)
   1640c:	bx	lr
   16410:	push	{fp}		; (str fp, [sp, #-4]!)
   16414:	add	fp, sp, #0
   16418:	sub	sp, sp, #12
   1641c:	str	r0, [fp, #-8]
   16420:	str	r1, [fp, #-12]
   16424:	mov	r3, #1
   16428:	mov	r0, r3
   1642c:	add	sp, fp, #0
   16430:	pop	{fp}		; (ldr fp, [sp], #4)
   16434:	bx	lr
   16438:	str	fp, [sp, #-8]!
   1643c:	str	lr, [sp, #4]
   16440:	add	fp, sp, #4
   16444:	sub	sp, sp, #32
   16448:	str	r0, [fp, #-16]
   1644c:	str	r1, [fp, #-20]	; 0xffffffec
   16450:	str	r2, [fp, #-24]	; 0xffffffe8
   16454:	str	r3, [fp, #-28]	; 0xffffffe4
   16458:	ldr	r3, [fp, #12]
   1645c:	ldr	r3, [r3, #92]	; 0x5c
   16460:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16464:	cmp	r2, r3
   16468:	bge	16478 <__assert_fail@plt+0x5188>
   1646c:	ldr	r3, [fp, #12]
   16470:	ldr	r3, [r3, #92]	; 0x5c
   16474:	str	r3, [fp, #-28]	; 0xffffffe4
   16478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1647c:	add	r3, r3, #1
   16480:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16484:	cmp	r2, r3
   16488:	movlt	r3, r2
   1648c:	movge	r3, r3
   16490:	str	r3, [fp, #-8]
   16494:	ldr	r3, [fp, #12]
   16498:	str	r3, [sp, #4]
   1649c:	ldrb	r3, [fp, #8]
   164a0:	str	r3, [sp]
   164a4:	ldr	r3, [fp, #4]
   164a8:	ldr	r2, [fp, #-16]
   164ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   164b4:	bl	16958 <__assert_fail@plt+0x5668>
   164b8:	ldr	r1, [fp, #-8]
   164bc:	ldr	r0, [fp, #-16]
   164c0:	bl	167ac <__assert_fail@plt+0x54bc>
   164c4:	str	r0, [fp, #-12]
   164c8:	ldr	r3, [fp, #-12]
   164cc:	cmp	r3, #0
   164d0:	movne	r3, #1
   164d4:	moveq	r3, #0
   164d8:	uxtb	r3, r3
   164dc:	cmp	r3, #0
   164e0:	beq	164ec <__assert_fail@plt+0x51fc>
   164e4:	ldr	r3, [fp, #-12]
   164e8:	b	16588 <__assert_fail@plt+0x5298>
   164ec:	ldr	r3, [fp, #12]
   164f0:	add	r2, r3, #96	; 0x60
   164f4:	ldr	r3, [fp, #-16]
   164f8:	str	r2, [r3, #68]	; 0x44
   164fc:	ldr	r3, [fp, #12]
   16500:	ldrb	r3, [r3, #88]	; 0x58
   16504:	ubfx	r3, r3, #4, #1
   16508:	uxtb	r3, r3
   1650c:	mov	r2, r3
   16510:	ldr	r3, [fp, #-16]
   16514:	strb	r2, [r3, #78]	; 0x4e
   16518:	ldr	r3, [fp, #-16]
   1651c:	ldrb	r3, [r3, #75]	; 0x4b
   16520:	cmp	r3, #0
   16524:	beq	16534 <__assert_fail@plt+0x5244>
   16528:	ldr	r3, [fp, #-16]
   1652c:	ldr	r3, [r3, #4]
   16530:	b	16538 <__assert_fail@plt+0x5248>
   16534:	ldr	r3, [fp, #-20]	; 0xffffffec
   16538:	ldr	r2, [fp, #-16]
   1653c:	str	r3, [r2, #4]
   16540:	ldr	r3, [fp, #-16]
   16544:	ldrb	r3, [r3, #75]	; 0x4b
   16548:	cmp	r3, #0
   1654c:	bne	16568 <__assert_fail@plt+0x5278>
   16550:	ldr	r3, [fp, #12]
   16554:	ldr	r3, [r3, #92]	; 0x5c
   16558:	cmp	r3, #1
   1655c:	bgt	16568 <__assert_fail@plt+0x5278>
   16560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16564:	b	1656c <__assert_fail@plt+0x527c>
   16568:	mov	r3, #0
   1656c:	ldr	r2, [fp, #-16]
   16570:	str	r3, [r2, #28]
   16574:	ldr	r3, [fp, #-16]
   16578:	ldr	r2, [r3, #28]
   1657c:	ldr	r3, [fp, #-16]
   16580:	str	r2, [r3, #32]
   16584:	mov	r3, #0
   16588:	mov	r0, r3
   1658c:	sub	sp, fp, #4
   16590:	ldr	fp, [sp]
   16594:	add	sp, sp, #4
   16598:	pop	{pc}		; (ldr pc, [sp], #4)
   1659c:	str	fp, [sp, #-8]!
   165a0:	str	lr, [sp, #4]
   165a4:	add	fp, sp, #4
   165a8:	sub	sp, sp, #32
   165ac:	str	r0, [fp, #-16]
   165b0:	str	r1, [fp, #-20]	; 0xffffffec
   165b4:	str	r2, [fp, #-24]	; 0xffffffe8
   165b8:	str	r3, [fp, #-28]	; 0xffffffe4
   165bc:	mov	r2, #84	; 0x54
   165c0:	mov	r1, #0
   165c4:	ldr	r0, [fp, #-16]
   165c8:	bl	11218 <memset@plt>
   165cc:	ldr	r3, [fp, #8]
   165d0:	str	r3, [sp, #4]
   165d4:	ldrb	r3, [fp, #4]
   165d8:	str	r3, [sp]
   165dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   165e0:	ldr	r2, [fp, #-16]
   165e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   165ec:	bl	16958 <__assert_fail@plt+0x5668>
   165f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   165f4:	cmp	r3, #0
   165f8:	ble	16638 <__assert_fail@plt+0x5348>
   165fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16600:	add	r3, r3, #1
   16604:	mov	r1, r3
   16608:	ldr	r0, [fp, #-16]
   1660c:	bl	167ac <__assert_fail@plt+0x54bc>
   16610:	str	r0, [fp, #-8]
   16614:	ldr	r3, [fp, #-8]
   16618:	cmp	r3, #0
   1661c:	movne	r3, #1
   16620:	moveq	r3, #0
   16624:	uxtb	r3, r3
   16628:	cmp	r3, #0
   1662c:	beq	16638 <__assert_fail@plt+0x5348>
   16630:	ldr	r3, [fp, #-8]
   16634:	b	16798 <__assert_fail@plt+0x54a8>
   16638:	ldr	r3, [fp, #-16]
   1663c:	ldrb	r3, [r3, #75]	; 0x4b
   16640:	cmp	r3, #0
   16644:	beq	16654 <__assert_fail@plt+0x5364>
   16648:	ldr	r3, [fp, #-16]
   1664c:	ldr	r3, [r3, #4]
   16650:	b	16658 <__assert_fail@plt+0x5368>
   16654:	ldr	r3, [fp, #-20]	; 0xffffffec
   16658:	ldr	r2, [fp, #-16]
   1665c:	str	r3, [r2, #4]
   16660:	ldrb	r3, [fp, #4]
   16664:	cmp	r3, #0
   16668:	beq	16730 <__assert_fail@plt+0x5440>
   1666c:	ldr	r3, [fp, #8]
   16670:	ldr	r3, [r3, #92]	; 0x5c
   16674:	cmp	r3, #1
   16678:	ble	16724 <__assert_fail@plt+0x5434>
   1667c:	ldr	r0, [fp, #-16]
   16680:	bl	16ddc <__assert_fail@plt+0x5aec>
   16684:	str	r0, [fp, #-8]
   16688:	ldr	r3, [fp, #-8]
   1668c:	cmp	r3, #0
   16690:	movne	r3, #1
   16694:	moveq	r3, #0
   16698:	uxtb	r3, r3
   1669c:	cmp	r3, #0
   166a0:	beq	166ac <__assert_fail@plt+0x53bc>
   166a4:	ldr	r3, [fp, #-8]
   166a8:	b	16798 <__assert_fail@plt+0x54a8>
   166ac:	ldr	r3, [fp, #-16]
   166b0:	ldr	r3, [r3, #32]
   166b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166b8:	cmp	r2, r3
   166bc:	ble	16788 <__assert_fail@plt+0x5498>
   166c0:	ldr	r3, [fp, #-16]
   166c4:	ldr	r2, [r3, #36]	; 0x24
   166c8:	ldr	r3, [fp, #-16]
   166cc:	ldr	r1, [r3, #28]
   166d0:	ldr	r3, [fp, #8]
   166d4:	ldr	r3, [r3, #92]	; 0x5c
   166d8:	add	r3, r1, r3
   166dc:	cmp	r2, r3
   166e0:	bgt	16790 <__assert_fail@plt+0x54a0>
   166e4:	ldr	r3, [fp, #-16]
   166e8:	ldr	r3, [r3, #36]	; 0x24
   166ec:	lsl	r3, r3, #1
   166f0:	mov	r1, r3
   166f4:	ldr	r0, [fp, #-16]
   166f8:	bl	167ac <__assert_fail@plt+0x54bc>
   166fc:	str	r0, [fp, #-8]
   16700:	ldr	r3, [fp, #-8]
   16704:	cmp	r3, #0
   16708:	movne	r3, #1
   1670c:	moveq	r3, #0
   16710:	uxtb	r3, r3
   16714:	cmp	r3, #0
   16718:	beq	1667c <__assert_fail@plt+0x538c>
   1671c:	ldr	r3, [fp, #-8]
   16720:	b	16798 <__assert_fail@plt+0x54a8>
   16724:	ldr	r0, [fp, #-16]
   16728:	bl	17ac8 <__assert_fail@plt+0x67d8>
   1672c:	b	16794 <__assert_fail@plt+0x54a4>
   16730:	ldr	r3, [fp, #8]
   16734:	ldr	r3, [r3, #92]	; 0x5c
   16738:	cmp	r3, #1
   1673c:	ble	1674c <__assert_fail@plt+0x545c>
   16740:	ldr	r0, [fp, #-16]
   16744:	bl	16a58 <__assert_fail@plt+0x5768>
   16748:	b	16794 <__assert_fail@plt+0x54a4>
   1674c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16750:	cmp	r3, #0
   16754:	beq	16764 <__assert_fail@plt+0x5474>
   16758:	ldr	r0, [fp, #-16]
   1675c:	bl	17bd4 <__assert_fail@plt+0x68e4>
   16760:	b	16794 <__assert_fail@plt+0x54a4>
   16764:	ldr	r3, [fp, #-16]
   16768:	ldr	r2, [r3, #36]	; 0x24
   1676c:	ldr	r3, [fp, #-16]
   16770:	str	r2, [r3, #28]
   16774:	ldr	r3, [fp, #-16]
   16778:	ldr	r2, [r3, #36]	; 0x24
   1677c:	ldr	r3, [fp, #-16]
   16780:	str	r2, [r3, #32]
   16784:	b	16794 <__assert_fail@plt+0x54a4>
   16788:	nop	{0}
   1678c:	b	16794 <__assert_fail@plt+0x54a4>
   16790:	nop	{0}
   16794:	mov	r3, #0
   16798:	mov	r0, r3
   1679c:	sub	sp, fp, #4
   167a0:	ldr	fp, [sp]
   167a4:	add	sp, sp, #4
   167a8:	pop	{pc}		; (ldr pc, [sp], #4)
   167ac:	str	fp, [sp, #-8]!
   167b0:	str	lr, [sp, #4]
   167b4:	add	fp, sp, #4
   167b8:	sub	sp, sp, #24
   167bc:	str	r0, [fp, #-24]	; 0xffffffe8
   167c0:	str	r1, [fp, #-28]	; 0xffffffe4
   167c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   167c8:	ldr	r3, [r3, #80]	; 0x50
   167cc:	cmp	r3, #1
   167d0:	ble	168d8 <__assert_fail@plt+0x55e8>
   167d4:	mov	r3, #4
   167d8:	str	r3, [fp, #-8]
   167dc:	mvn	r2, #0
   167e0:	ldr	r3, [fp, #-8]
   167e4:	udiv	r3, r2, r3
   167e8:	cmp	r3, #0
   167ec:	blt	16800 <__assert_fail@plt+0x5510>
   167f0:	mvn	r2, #0
   167f4:	ldr	r3, [fp, #-8]
   167f8:	udiv	r3, r2, r3
   167fc:	b	16804 <__assert_fail@plt+0x5514>
   16800:	mvn	r3, #-2147483648	; 0x80000000
   16804:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16808:	cmp	r3, r2
   1680c:	movcc	r3, #1
   16810:	movcs	r3, #0
   16814:	uxtb	r3, r3
   16818:	cmp	r3, #0
   1681c:	beq	16828 <__assert_fail@plt+0x5538>
   16820:	mov	r3, #12
   16824:	b	16944 <__assert_fail@plt+0x5654>
   16828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1682c:	ldr	r2, [r3, #8]
   16830:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16834:	lsl	r3, r3, #2
   16838:	mov	r1, r3
   1683c:	mov	r0, r2
   16840:	bl	313dc <__assert_fail@plt+0x200ec>
   16844:	str	r0, [fp, #-12]
   16848:	ldr	r3, [fp, #-12]
   1684c:	cmp	r3, #0
   16850:	moveq	r3, #1
   16854:	movne	r3, #0
   16858:	uxtb	r3, r3
   1685c:	cmp	r3, #0
   16860:	beq	1686c <__assert_fail@plt+0x557c>
   16864:	mov	r3, #12
   16868:	b	16944 <__assert_fail@plt+0x5654>
   1686c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16870:	ldr	r2, [fp, #-12]
   16874:	str	r2, [r3, #8]
   16878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1687c:	ldr	r3, [r3, #12]
   16880:	cmp	r3, #0
   16884:	beq	168d8 <__assert_fail@plt+0x55e8>
   16888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1688c:	ldr	r2, [r3, #12]
   16890:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16894:	lsl	r3, r3, #2
   16898:	mov	r1, r3
   1689c:	mov	r0, r2
   168a0:	bl	313dc <__assert_fail@plt+0x200ec>
   168a4:	str	r0, [fp, #-16]
   168a8:	ldr	r3, [fp, #-16]
   168ac:	cmp	r3, #0
   168b0:	moveq	r3, #1
   168b4:	movne	r3, #0
   168b8:	uxtb	r3, r3
   168bc:	cmp	r3, #0
   168c0:	beq	168cc <__assert_fail@plt+0x55dc>
   168c4:	mov	r3, #12
   168c8:	b	16944 <__assert_fail@plt+0x5654>
   168cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168d0:	ldr	r2, [fp, #-16]
   168d4:	str	r2, [r3, #12]
   168d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168dc:	ldrb	r3, [r3, #75]	; 0x4b
   168e0:	cmp	r3, #0
   168e4:	beq	16934 <__assert_fail@plt+0x5644>
   168e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168ec:	ldr	r3, [r3, #4]
   168f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   168f4:	mov	r1, r2
   168f8:	mov	r0, r3
   168fc:	bl	313dc <__assert_fail@plt+0x200ec>
   16900:	str	r0, [fp, #-20]	; 0xffffffec
   16904:	ldr	r3, [fp, #-20]	; 0xffffffec
   16908:	cmp	r3, #0
   1690c:	moveq	r3, #1
   16910:	movne	r3, #0
   16914:	uxtb	r3, r3
   16918:	cmp	r3, #0
   1691c:	beq	16928 <__assert_fail@plt+0x5638>
   16920:	mov	r3, #12
   16924:	b	16944 <__assert_fail@plt+0x5654>
   16928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1692c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16930:	str	r2, [r3, #4]
   16934:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16938:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1693c:	str	r2, [r3, #36]	; 0x24
   16940:	mov	r3, #0
   16944:	mov	r0, r3
   16948:	sub	sp, fp, #4
   1694c:	ldr	fp, [sp]
   16950:	add	sp, sp, #4
   16954:	pop	{pc}		; (ldr pc, [sp], #4)
   16958:	push	{fp}		; (str fp, [sp, #-4]!)
   1695c:	add	fp, sp, #0
   16960:	sub	sp, sp, #20
   16964:	str	r0, [fp, #-8]
   16968:	str	r1, [fp, #-12]
   1696c:	str	r2, [fp, #-16]
   16970:	str	r3, [fp, #-20]	; 0xffffffec
   16974:	ldr	r3, [fp, #-16]
   16978:	ldr	r2, [fp, #-8]
   1697c:	str	r2, [r3]
   16980:	ldr	r3, [fp, #-16]
   16984:	ldr	r2, [fp, #-12]
   16988:	str	r2, [r3, #48]	; 0x30
   1698c:	ldr	r3, [fp, #-16]
   16990:	ldr	r2, [fp, #-12]
   16994:	str	r2, [r3, #44]	; 0x2c
   16998:	ldr	r3, [fp, #-16]
   1699c:	ldr	r2, [fp, #-20]	; 0xffffffec
   169a0:	str	r2, [r3, #64]	; 0x40
   169a4:	ldrb	r2, [fp, #4]
   169a8:	ldr	r3, [fp, #-16]
   169ac:	strb	r2, [r3, #72]	; 0x48
   169b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169b4:	cmp	r3, #0
   169b8:	bne	169c8 <__assert_fail@plt+0x56d8>
   169bc:	ldrb	r3, [fp, #4]
   169c0:	cmp	r3, #0
   169c4:	beq	169d0 <__assert_fail@plt+0x56e0>
   169c8:	mov	r3, #1
   169cc:	b	169d4 <__assert_fail@plt+0x56e4>
   169d0:	mov	r3, #0
   169d4:	uxtb	r2, r3
   169d8:	ldr	r3, [fp, #-16]
   169dc:	strb	r2, [r3, #75]	; 0x4b
   169e0:	ldr	r3, [fp, #8]
   169e4:	ldr	r2, [r3, #92]	; 0x5c
   169e8:	ldr	r3, [fp, #-16]
   169ec:	str	r2, [r3, #80]	; 0x50
   169f0:	ldr	r3, [fp, #8]
   169f4:	ldrb	r3, [r3, #88]	; 0x58
   169f8:	ubfx	r3, r3, #2, #1
   169fc:	uxtb	r3, r3
   16a00:	mov	r2, r3
   16a04:	ldr	r3, [fp, #-16]
   16a08:	strb	r2, [r3, #73]	; 0x49
   16a0c:	ldr	r3, [fp, #8]
   16a10:	ldrb	r3, [r3, #88]	; 0x58
   16a14:	ubfx	r3, r3, #3, #1
   16a18:	uxtb	r3, r3
   16a1c:	mov	r2, r3
   16a20:	ldr	r3, [fp, #-16]
   16a24:	strb	r2, [r3, #74]	; 0x4a
   16a28:	ldr	r3, [fp, #-16]
   16a2c:	ldr	r2, [r3, #48]	; 0x30
   16a30:	ldr	r3, [fp, #-16]
   16a34:	str	r2, [r3, #56]	; 0x38
   16a38:	ldr	r3, [fp, #-16]
   16a3c:	ldr	r2, [r3, #56]	; 0x38
   16a40:	ldr	r3, [fp, #-16]
   16a44:	str	r2, [r3, #52]	; 0x34
   16a48:	nop	{0}
   16a4c:	add	sp, fp, #0
   16a50:	pop	{fp}		; (ldr fp, [sp], #4)
   16a54:	bx	lr
   16a58:	str	fp, [sp, #-8]!
   16a5c:	str	lr, [sp, #4]
   16a60:	add	fp, sp, #4
   16a64:	sub	sp, sp, #112	; 0x70
   16a68:	str	r0, [fp, #-112]	; 0xffffff90
   16a6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16a70:	ldr	r2, [r3, #36]	; 0x24
   16a74:	ldr	r3, [fp, #-112]	; 0xffffff90
   16a78:	ldr	r3, [r3, #48]	; 0x30
   16a7c:	cmp	r2, r3
   16a80:	movlt	r3, r2
   16a84:	movge	r3, r3
   16a88:	str	r3, [fp, #-24]	; 0xffffffe8
   16a8c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16a90:	ldr	r3, [r3, #28]
   16a94:	str	r3, [fp, #-8]
   16a98:	b	16da0 <__assert_fail@plt+0x5ab0>
   16a9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16aa0:	ldr	r3, [fp, #-8]
   16aa4:	sub	r3, r2, r3
   16aa8:	str	r3, [fp, #-28]	; 0xffffffe4
   16aac:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ab0:	sub	r1, fp, #104	; 0x68
   16ab4:	add	r3, r3, #16
   16ab8:	ldrd	r2, [r3]
   16abc:	strd	r2, [r1]
   16ac0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ac4:	ldr	r3, [r3, #64]	; 0x40
   16ac8:	cmp	r3, #0
   16acc:	movne	r3, #1
   16ad0:	moveq	r3, #0
   16ad4:	uxtb	r3, r3
   16ad8:	cmp	r3, #0
   16adc:	beq	16b9c <__assert_fail@plt+0x58ac>
   16ae0:	mov	r3, #0
   16ae4:	str	r3, [fp, #-20]	; 0xffffffec
   16ae8:	b	16b6c <__assert_fail@plt+0x587c>
   16aec:	ldr	r3, [fp, #-112]	; 0xffffff90
   16af0:	ldr	r3, [r3]
   16af4:	ldr	r2, [fp, #-112]	; 0xffffff90
   16af8:	ldr	r1, [r2, #24]
   16afc:	ldr	r2, [fp, #-8]
   16b00:	add	r1, r1, r2
   16b04:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b08:	add	r2, r1, r2
   16b0c:	add	r3, r3, r2
   16b10:	ldrb	r3, [r3]
   16b14:	str	r3, [fp, #-32]	; 0xffffffe0
   16b18:	ldr	r3, [fp, #-112]	; 0xffffff90
   16b1c:	ldr	r2, [r3, #64]	; 0x40
   16b20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16b24:	add	r2, r2, r3
   16b28:	ldr	r3, [fp, #-112]	; 0xffffff90
   16b2c:	ldr	r3, [r3, #4]
   16b30:	ldr	r0, [fp, #-8]
   16b34:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b38:	add	r1, r0, r1
   16b3c:	add	r3, r3, r1
   16b40:	ldrb	r2, [r2]
   16b44:	strb	r2, [r3]
   16b48:	ldrb	r1, [r3]
   16b4c:	sub	r2, fp, #96	; 0x60
   16b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b54:	add	r3, r2, r3
   16b58:	mov	r2, r1
   16b5c:	strb	r2, [r3]
   16b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b64:	add	r3, r3, #1
   16b68:	str	r3, [fp, #-20]	; 0xffffffec
   16b6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16b70:	ldr	r3, [r3, #80]	; 0x50
   16b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b78:	cmp	r2, r3
   16b7c:	bge	16b90 <__assert_fail@plt+0x58a0>
   16b80:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b88:	cmp	r2, r3
   16b8c:	blt	16aec <__assert_fail@plt+0x57fc>
   16b90:	sub	r3, fp, #96	; 0x60
   16b94:	str	r3, [fp, #-16]
   16b98:	b	16bc0 <__assert_fail@plt+0x58d0>
   16b9c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ba0:	ldr	r2, [r3]
   16ba4:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ba8:	ldr	r3, [r3, #24]
   16bac:	mov	r1, r3
   16bb0:	ldr	r3, [fp, #-8]
   16bb4:	add	r3, r1, r3
   16bb8:	add	r3, r2, r3
   16bbc:	str	r3, [fp, #-16]
   16bc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16bc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   16bc8:	add	r3, r3, #16
   16bcc:	sub	r0, fp, #108	; 0x6c
   16bd0:	ldr	r1, [fp, #-16]
   16bd4:	bl	31db0 <__assert_fail@plt+0x20ac0>
   16bd8:	str	r0, [fp, #-12]
   16bdc:	ldr	r3, [fp, #-12]
   16be0:	cmn	r3, #1
   16be4:	moveq	r3, #1
   16be8:	movne	r3, #0
   16bec:	uxtb	r3, r3
   16bf0:	cmp	r3, #0
   16bf4:	bne	16c14 <__assert_fail@plt+0x5924>
   16bf8:	ldr	r3, [fp, #-12]
   16bfc:	cmp	r3, #0
   16c00:	moveq	r3, #1
   16c04:	movne	r3, #0
   16c08:	uxtb	r3, r3
   16c0c:	cmp	r3, #0
   16c10:	beq	16c1c <__assert_fail@plt+0x592c>
   16c14:	mov	r3, #1
   16c18:	b	16c20 <__assert_fail@plt+0x5930>
   16c1c:	mov	r3, #0
   16c20:	cmp	r3, #0
   16c24:	bne	16c80 <__assert_fail@plt+0x5990>
   16c28:	ldr	r3, [fp, #-12]
   16c2c:	cmn	r3, #2
   16c30:	moveq	r3, #1
   16c34:	movne	r3, #0
   16c38:	uxtb	r3, r3
   16c3c:	cmp	r3, #0
   16c40:	beq	16c74 <__assert_fail@plt+0x5984>
   16c44:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c48:	ldr	r2, [r3, #36]	; 0x24
   16c4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c50:	ldr	r3, [r3, #48]	; 0x30
   16c54:	cmp	r2, r3
   16c58:	movge	r3, #1
   16c5c:	movlt	r3, #0
   16c60:	uxtb	r3, r3
   16c64:	cmp	r3, #0
   16c68:	beq	16c74 <__assert_fail@plt+0x5984>
   16c6c:	mov	r3, #1
   16c70:	b	16c78 <__assert_fail@plt+0x5988>
   16c74:	mov	r3, #0
   16c78:	cmp	r3, #0
   16c7c:	beq	16cfc <__assert_fail@plt+0x5a0c>
   16c80:	mov	r3, #1
   16c84:	str	r3, [fp, #-12]
   16c88:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c8c:	ldr	r3, [r3]
   16c90:	ldr	r2, [fp, #-112]	; 0xffffff90
   16c94:	ldr	r1, [r2, #24]
   16c98:	ldr	r2, [fp, #-8]
   16c9c:	add	r2, r1, r2
   16ca0:	add	r3, r3, r2
   16ca4:	ldrb	r3, [r3]
   16ca8:	str	r3, [fp, #-108]	; 0xffffff94
   16cac:	ldr	r3, [fp, #-112]	; 0xffffff90
   16cb0:	ldr	r3, [r3, #64]	; 0x40
   16cb4:	cmp	r3, #0
   16cb8:	movne	r3, #1
   16cbc:	moveq	r3, #0
   16cc0:	uxtb	r3, r3
   16cc4:	cmp	r3, #0
   16cc8:	beq	16ce4 <__assert_fail@plt+0x59f4>
   16ccc:	ldr	r3, [fp, #-112]	; 0xffffff90
   16cd0:	ldr	r2, [r3, #64]	; 0x40
   16cd4:	ldr	r3, [fp, #-108]	; 0xffffff94
   16cd8:	add	r3, r2, r3
   16cdc:	ldrb	r3, [r3]
   16ce0:	str	r3, [fp, #-108]	; 0xffffff94
   16ce4:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ce8:	add	r1, r3, #16
   16cec:	sub	r3, fp, #104	; 0x68
   16cf0:	ldrd	r2, [r3]
   16cf4:	strd	r2, [r1]
   16cf8:	b	16d30 <__assert_fail@plt+0x5a40>
   16cfc:	ldr	r3, [fp, #-12]
   16d00:	cmn	r3, #2
   16d04:	moveq	r3, #1
   16d08:	movne	r3, #0
   16d0c:	uxtb	r3, r3
   16d10:	cmp	r3, #0
   16d14:	beq	16d30 <__assert_fail@plt+0x5a40>
   16d18:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d1c:	add	r1, r3, #16
   16d20:	sub	r3, fp, #104	; 0x68
   16d24:	ldrd	r2, [r3]
   16d28:	strd	r2, [r1]
   16d2c:	b	16db0 <__assert_fail@plt+0x5ac0>
   16d30:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d34:	ldr	r2, [r3, #8]
   16d38:	ldr	r3, [fp, #-8]
   16d3c:	add	r1, r3, #1
   16d40:	str	r1, [fp, #-8]
   16d44:	lsl	r3, r3, #2
   16d48:	add	r3, r2, r3
   16d4c:	ldr	r2, [fp, #-108]	; 0xffffff94
   16d50:	str	r2, [r3]
   16d54:	ldr	r2, [fp, #-8]
   16d58:	ldr	r3, [fp, #-12]
   16d5c:	add	r3, r2, r3
   16d60:	sub	r3, r3, #1
   16d64:	str	r3, [fp, #-28]	; 0xffffffe4
   16d68:	b	16d90 <__assert_fail@plt+0x5aa0>
   16d6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d70:	ldr	r2, [r3, #8]
   16d74:	ldr	r3, [fp, #-8]
   16d78:	add	r1, r3, #1
   16d7c:	str	r1, [fp, #-8]
   16d80:	lsl	r3, r3, #2
   16d84:	add	r3, r2, r3
   16d88:	mvn	r2, #0
   16d8c:	str	r2, [r3]
   16d90:	ldr	r2, [fp, #-8]
   16d94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d98:	cmp	r2, r3
   16d9c:	blt	16d6c <__assert_fail@plt+0x5a7c>
   16da0:	ldr	r2, [fp, #-8]
   16da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16da8:	cmp	r2, r3
   16dac:	blt	16a9c <__assert_fail@plt+0x57ac>
   16db0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16db4:	ldr	r2, [fp, #-8]
   16db8:	str	r2, [r3, #28]
   16dbc:	ldr	r3, [fp, #-112]	; 0xffffff90
   16dc0:	ldr	r2, [fp, #-8]
   16dc4:	str	r2, [r3, #32]
   16dc8:	nop	{0}
   16dcc:	sub	sp, fp, #4
   16dd0:	ldr	fp, [sp]
   16dd4:	add	sp, sp, #4
   16dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   16ddc:	str	fp, [sp, #-8]!
   16de0:	str	lr, [sp, #4]
   16de4:	add	fp, sp, #4
   16de8:	sub	sp, sp, #160	; 0xa0
   16dec:	str	r0, [fp, #-160]	; 0xffffff60
   16df0:	ldr	r3, [fp, #-160]	; 0xffffff60
   16df4:	ldr	r3, [r3, #28]
   16df8:	str	r3, [fp, #-12]
   16dfc:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e00:	ldr	r2, [r3, #36]	; 0x24
   16e04:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e08:	ldr	r3, [r3, #48]	; 0x30
   16e0c:	cmp	r2, r3
   16e10:	movlt	r3, r2
   16e14:	movge	r3, r3
   16e18:	str	r3, [fp, #-16]
   16e1c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e20:	ldrb	r3, [r3, #74]	; 0x4a
   16e24:	cmp	r3, #0
   16e28:	bne	171c8 <__assert_fail@plt+0x5ed8>
   16e2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e30:	ldr	r3, [r3, #64]	; 0x40
   16e34:	cmp	r3, #0
   16e38:	bne	171c8 <__assert_fail@plt+0x5ed8>
   16e3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e40:	ldrb	r3, [r3, #76]	; 0x4c
   16e44:	cmp	r3, #0
   16e48:	bne	171c8 <__assert_fail@plt+0x5ed8>
   16e4c:	b	17198 <__assert_fail@plt+0x5ea8>
   16e50:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e54:	ldr	r3, [r3]
   16e58:	ldr	r2, [fp, #-160]	; 0xffffff60
   16e5c:	ldr	r1, [r2, #24]
   16e60:	ldr	r2, [fp, #-12]
   16e64:	add	r2, r1, r2
   16e68:	add	r3, r3, r2
   16e6c:	ldrb	r3, [r3]
   16e70:	strb	r3, [fp, #-37]	; 0xffffffdb
   16e74:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16e78:	bic	r3, r3, #127	; 0x7f
   16e7c:	cmp	r3, #0
   16e80:	bne	16f08 <__assert_fail@plt+0x5c18>
   16e84:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e88:	add	r3, r3, #16
   16e8c:	mov	r0, r3
   16e90:	bl	110a4 <mbsinit@plt>
   16e94:	mov	r3, r0
   16e98:	cmp	r3, #0
   16e9c:	beq	16f08 <__assert_fail@plt+0x5c18>
   16ea0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16ea4:	mov	r0, r3
   16ea8:	bl	112b4 <towupper@plt>
   16eac:	str	r0, [fp, #-44]	; 0xffffffd4
   16eb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16eb4:	bic	r3, r3, #127	; 0x7f
   16eb8:	cmp	r3, #0
   16ebc:	bne	16f08 <__assert_fail@plt+0x5c18>
   16ec0:	ldr	r3, [fp, #-160]	; 0xffffff60
   16ec4:	ldr	r2, [r3, #4]
   16ec8:	ldr	r3, [fp, #-12]
   16ecc:	add	r3, r2, r3
   16ed0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16ed4:	uxtb	r2, r2
   16ed8:	strb	r2, [r3]
   16edc:	ldr	r3, [fp, #-160]	; 0xffffff60
   16ee0:	ldr	r2, [r3, #8]
   16ee4:	ldr	r3, [fp, #-12]
   16ee8:	lsl	r3, r3, #2
   16eec:	add	r3, r2, r3
   16ef0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16ef4:	str	r2, [r3]
   16ef8:	ldr	r3, [fp, #-12]
   16efc:	add	r3, r3, #1
   16f00:	str	r3, [fp, #-12]
   16f04:	b	17198 <__assert_fail@plt+0x5ea8>
   16f08:	ldr	r2, [fp, #-16]
   16f0c:	ldr	r3, [fp, #-12]
   16f10:	sub	r3, r2, r3
   16f14:	str	r3, [fp, #-48]	; 0xffffffd0
   16f18:	ldr	r3, [fp, #-160]	; 0xffffff60
   16f1c:	sub	r1, fp, #80	; 0x50
   16f20:	add	r3, r3, #16
   16f24:	ldrd	r2, [r3]
   16f28:	strd	r2, [r1]
   16f2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16f30:	ldr	r2, [r3]
   16f34:	ldr	r3, [fp, #-160]	; 0xffffff60
   16f38:	ldr	r3, [r3, #24]
   16f3c:	mov	r1, r3
   16f40:	ldr	r3, [fp, #-12]
   16f44:	add	r3, r1, r3
   16f48:	add	r1, r2, r3
   16f4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16f50:	ldr	r3, [fp, #-160]	; 0xffffff60
   16f54:	add	r3, r3, #16
   16f58:	sub	r0, fp, #148	; 0x94
   16f5c:	bl	31db0 <__assert_fail@plt+0x20ac0>
   16f60:	str	r0, [fp, #-52]	; 0xffffffcc
   16f64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f68:	cmp	r3, #0
   16f6c:	movne	r3, #1
   16f70:	moveq	r3, #0
   16f74:	uxtb	r3, r3
   16f78:	cmp	r3, #0
   16f7c:	beq	170d4 <__assert_fail@plt+0x5de4>
   16f80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f84:	cmn	r3, #3
   16f88:	movls	r3, #1
   16f8c:	movhi	r3, #0
   16f90:	uxtb	r3, r3
   16f94:	cmp	r3, #0
   16f98:	beq	170d4 <__assert_fail@plt+0x5de4>
   16f9c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16fa0:	mov	r0, r3
   16fa4:	bl	112b4 <towupper@plt>
   16fa8:	str	r0, [fp, #-56]	; 0xffffffc8
   16fac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16fb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16fb4:	cmp	r2, r3
   16fb8:	beq	17024 <__assert_fail@plt+0x5d34>
   16fbc:	sub	r2, fp, #80	; 0x50
   16fc0:	sub	r3, fp, #144	; 0x90
   16fc4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16fc8:	mov	r0, r3
   16fcc:	bl	10ff0 <wcrtomb@plt>
   16fd0:	str	r0, [fp, #-60]	; 0xffffffc4
   16fd4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16fd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16fdc:	cmp	r2, r3
   16fe0:	moveq	r3, #1
   16fe4:	movne	r3, #0
   16fe8:	uxtb	r3, r3
   16fec:	cmp	r3, #0
   16ff0:	beq	17018 <__assert_fail@plt+0x5d28>
   16ff4:	ldr	r3, [fp, #-160]	; 0xffffff60
   16ff8:	ldr	r2, [r3, #4]
   16ffc:	ldr	r3, [fp, #-12]
   17000:	add	r3, r2, r3
   17004:	sub	r1, fp, #144	; 0x90
   17008:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1700c:	mov	r0, r3
   17010:	bl	11074 <memcpy@plt>
   17014:	b	17060 <__assert_fail@plt+0x5d70>
   17018:	ldr	r3, [fp, #-12]
   1701c:	str	r3, [fp, #-8]
   17020:	b	171dc <__assert_fail@plt+0x5eec>
   17024:	ldr	r3, [fp, #-160]	; 0xffffff60
   17028:	ldr	r2, [r3, #4]
   1702c:	ldr	r3, [fp, #-12]
   17030:	add	r0, r2, r3
   17034:	ldr	r3, [fp, #-160]	; 0xffffff60
   17038:	ldr	r2, [r3]
   1703c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17040:	ldr	r3, [r3, #24]
   17044:	mov	r1, r3
   17048:	ldr	r3, [fp, #-12]
   1704c:	add	r3, r1, r3
   17050:	add	r3, r2, r3
   17054:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17058:	mov	r1, r3
   1705c:	bl	11074 <memcpy@plt>
   17060:	ldr	r3, [fp, #-160]	; 0xffffff60
   17064:	ldr	r2, [r3, #8]
   17068:	ldr	r3, [fp, #-12]
   1706c:	add	r1, r3, #1
   17070:	str	r1, [fp, #-12]
   17074:	lsl	r3, r3, #2
   17078:	add	r3, r2, r3
   1707c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17080:	str	r2, [r3]
   17084:	ldr	r2, [fp, #-12]
   17088:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1708c:	add	r3, r2, r3
   17090:	sub	r3, r3, #1
   17094:	str	r3, [fp, #-48]	; 0xffffffd0
   17098:	b	170c0 <__assert_fail@plt+0x5dd0>
   1709c:	ldr	r3, [fp, #-160]	; 0xffffff60
   170a0:	ldr	r2, [r3, #8]
   170a4:	ldr	r3, [fp, #-12]
   170a8:	add	r1, r3, #1
   170ac:	str	r1, [fp, #-12]
   170b0:	lsl	r3, r3, #2
   170b4:	add	r3, r2, r3
   170b8:	mvn	r2, #0
   170bc:	str	r2, [r3]
   170c0:	ldr	r2, [fp, #-12]
   170c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   170c8:	cmp	r2, r3
   170cc:	blt	1709c <__assert_fail@plt+0x5dac>
   170d0:	b	17198 <__assert_fail@plt+0x5ea8>
   170d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170d8:	cmn	r3, #1
   170dc:	beq	17110 <__assert_fail@plt+0x5e20>
   170e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170e4:	cmp	r3, #0
   170e8:	beq	17110 <__assert_fail@plt+0x5e20>
   170ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170f0:	cmn	r3, #2
   170f4:	bne	17180 <__assert_fail@plt+0x5e90>
   170f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   170fc:	ldr	r2, [r3, #36]	; 0x24
   17100:	ldr	r3, [fp, #-160]	; 0xffffff60
   17104:	ldr	r3, [r3, #48]	; 0x30
   17108:	cmp	r2, r3
   1710c:	blt	17180 <__assert_fail@plt+0x5e90>
   17110:	ldr	r3, [fp, #-160]	; 0xffffff60
   17114:	ldr	r2, [r3, #4]
   17118:	ldr	r3, [fp, #-12]
   1711c:	add	r3, r2, r3
   17120:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   17124:	strb	r2, [r3]
   17128:	ldr	r3, [fp, #-160]	; 0xffffff60
   1712c:	ldr	r2, [r3, #8]
   17130:	ldr	r3, [fp, #-12]
   17134:	add	r1, r3, #1
   17138:	str	r1, [fp, #-12]
   1713c:	lsl	r3, r3, #2
   17140:	add	r3, r2, r3
   17144:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   17148:	str	r2, [r3]
   1714c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17150:	cmn	r3, #1
   17154:	moveq	r3, #1
   17158:	movne	r3, #0
   1715c:	uxtb	r3, r3
   17160:	cmp	r3, #0
   17164:	beq	17198 <__assert_fail@plt+0x5ea8>
   17168:	ldr	r3, [fp, #-160]	; 0xffffff60
   1716c:	add	r1, r3, #16
   17170:	sub	r3, fp, #80	; 0x50
   17174:	ldrd	r2, [r3]
   17178:	strd	r2, [r1]
   1717c:	b	17198 <__assert_fail@plt+0x5ea8>
   17180:	ldr	r3, [fp, #-160]	; 0xffffff60
   17184:	add	r1, r3, #16
   17188:	sub	r3, fp, #80	; 0x50
   1718c:	ldrd	r2, [r3]
   17190:	strd	r2, [r1]
   17194:	b	171a8 <__assert_fail@plt+0x5eb8>
   17198:	ldr	r2, [fp, #-12]
   1719c:	ldr	r3, [fp, #-16]
   171a0:	cmp	r2, r3
   171a4:	blt	16e50 <__assert_fail@plt+0x5b60>
   171a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   171ac:	ldr	r2, [fp, #-12]
   171b0:	str	r2, [r3, #28]
   171b4:	ldr	r3, [fp, #-160]	; 0xffffff60
   171b8:	ldr	r2, [fp, #-12]
   171bc:	str	r2, [r3, #32]
   171c0:	mov	r3, #0
   171c4:	b	17914 <__assert_fail@plt+0x6624>
   171c8:	ldr	r3, [fp, #-160]	; 0xffffff60
   171cc:	ldr	r3, [r3, #32]
   171d0:	str	r3, [fp, #-8]
   171d4:	b	178e8 <__assert_fail@plt+0x65f8>
   171d8:	nop	{0}
   171dc:	ldr	r2, [fp, #-16]
   171e0:	ldr	r3, [fp, #-12]
   171e4:	sub	r3, r2, r3
   171e8:	str	r3, [fp, #-48]	; 0xffffffd0
   171ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   171f0:	sub	r1, fp, #80	; 0x50
   171f4:	add	r3, r3, #16
   171f8:	ldrd	r2, [r3]
   171fc:	strd	r2, [r1]
   17200:	ldr	r3, [fp, #-160]	; 0xffffff60
   17204:	ldr	r3, [r3, #64]	; 0x40
   17208:	cmp	r3, #0
   1720c:	movne	r3, #1
   17210:	moveq	r3, #0
   17214:	uxtb	r3, r3
   17218:	cmp	r3, #0
   1721c:	beq	172bc <__assert_fail@plt+0x5fcc>
   17220:	mov	r3, #0
   17224:	str	r3, [fp, #-24]	; 0xffffffe8
   17228:	b	1728c <__assert_fail@plt+0x5f9c>
   1722c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17230:	ldr	r3, [r3]
   17234:	ldr	r2, [fp, #-160]	; 0xffffff60
   17238:	ldr	r1, [r2, #24]
   1723c:	ldr	r2, [fp, #-8]
   17240:	add	r1, r1, r2
   17244:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17248:	add	r2, r1, r2
   1724c:	add	r3, r3, r2
   17250:	ldrb	r3, [r3]
   17254:	str	r3, [fp, #-64]	; 0xffffffc0
   17258:	ldr	r3, [fp, #-160]	; 0xffffff60
   1725c:	ldr	r2, [r3, #64]	; 0x40
   17260:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17264:	add	r3, r2, r3
   17268:	ldrb	r1, [r3]
   1726c:	sub	r2, fp, #144	; 0x90
   17270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17274:	add	r3, r2, r3
   17278:	mov	r2, r1
   1727c:	strb	r2, [r3]
   17280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17284:	add	r3, r3, #1
   17288:	str	r3, [fp, #-24]	; 0xffffffe8
   1728c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17290:	ldr	r3, [r3, #80]	; 0x50
   17294:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17298:	cmp	r2, r3
   1729c:	bge	172b0 <__assert_fail@plt+0x5fc0>
   172a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   172a8:	cmp	r2, r3
   172ac:	blt	1722c <__assert_fail@plt+0x5f3c>
   172b0:	sub	r3, fp, #144	; 0x90
   172b4:	str	r3, [fp, #-20]	; 0xffffffec
   172b8:	b	172e0 <__assert_fail@plt+0x5ff0>
   172bc:	ldr	r3, [fp, #-160]	; 0xffffff60
   172c0:	ldr	r2, [r3]
   172c4:	ldr	r3, [fp, #-160]	; 0xffffff60
   172c8:	ldr	r3, [r3, #24]
   172cc:	mov	r1, r3
   172d0:	ldr	r3, [fp, #-8]
   172d4:	add	r3, r1, r3
   172d8:	add	r3, r2, r3
   172dc:	str	r3, [fp, #-20]	; 0xffffffec
   172e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   172e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   172e8:	add	r3, r3, #16
   172ec:	sub	r0, fp, #152	; 0x98
   172f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   172f4:	bl	31db0 <__assert_fail@plt+0x20ac0>
   172f8:	str	r0, [fp, #-52]	; 0xffffffcc
   172fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17300:	cmp	r3, #0
   17304:	movne	r3, #1
   17308:	moveq	r3, #0
   1730c:	uxtb	r3, r3
   17310:	cmp	r3, #0
   17314:	beq	17774 <__assert_fail@plt+0x6484>
   17318:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1731c:	cmn	r3, #3
   17320:	movls	r3, #1
   17324:	movhi	r3, #0
   17328:	uxtb	r3, r3
   1732c:	cmp	r3, #0
   17330:	beq	17774 <__assert_fail@plt+0x6484>
   17334:	ldr	r3, [fp, #-152]	; 0xffffff68
   17338:	mov	r0, r3
   1733c:	bl	112b4 <towupper@plt>
   17340:	str	r0, [fp, #-68]	; 0xffffffbc
   17344:	ldr	r3, [fp, #-152]	; 0xffffff68
   17348:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1734c:	cmp	r2, r3
   17350:	beq	17658 <__assert_fail@plt+0x6368>
   17354:	sub	r2, fp, #80	; 0x50
   17358:	sub	r3, fp, #144	; 0x90
   1735c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17360:	mov	r0, r3
   17364:	bl	10ff0 <wcrtomb@plt>
   17368:	str	r0, [fp, #-72]	; 0xffffffb8
   1736c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17370:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17374:	cmp	r2, r3
   17378:	moveq	r3, #1
   1737c:	movne	r3, #0
   17380:	uxtb	r3, r3
   17384:	cmp	r3, #0
   17388:	beq	173b0 <__assert_fail@plt+0x60c0>
   1738c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17390:	ldr	r2, [r3, #4]
   17394:	ldr	r3, [fp, #-12]
   17398:	add	r3, r2, r3
   1739c:	sub	r1, fp, #144	; 0x90
   173a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   173a4:	mov	r0, r3
   173a8:	bl	11074 <memcpy@plt>
   173ac:	b	17678 <__assert_fail@plt+0x6388>
   173b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   173b4:	cmn	r3, #1
   173b8:	beq	17634 <__assert_fail@plt+0x6344>
   173bc:	ldr	r2, [fp, #-12]
   173c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   173c4:	add	r3, r2, r3
   173c8:	ldr	r2, [fp, #-160]	; 0xffffff60
   173cc:	ldr	r2, [r2, #36]	; 0x24
   173d0:	cmp	r3, r2
   173d4:	bls	173f0 <__assert_fail@plt+0x6100>
   173d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   173dc:	add	r1, r3, #16
   173e0:	sub	r3, fp, #80	; 0x50
   173e4:	ldrd	r2, [r3]
   173e8:	strd	r2, [r1]
   173ec:	b	178f8 <__assert_fail@plt+0x6608>
   173f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   173f4:	ldr	r3, [r3, #12]
   173f8:	cmp	r3, #0
   173fc:	bne	1743c <__assert_fail@plt+0x614c>
   17400:	ldr	r3, [fp, #-160]	; 0xffffff60
   17404:	ldr	r3, [r3, #36]	; 0x24
   17408:	lsl	r3, r3, #2
   1740c:	mov	r0, r3
   17410:	bl	3134c <__assert_fail@plt+0x2005c>
   17414:	mov	r3, r0
   17418:	mov	r2, r3
   1741c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17420:	str	r2, [r3, #12]
   17424:	ldr	r3, [fp, #-160]	; 0xffffff60
   17428:	ldr	r3, [r3, #12]
   1742c:	cmp	r3, #0
   17430:	bne	1743c <__assert_fail@plt+0x614c>
   17434:	mov	r3, #12
   17438:	b	17914 <__assert_fail@plt+0x6624>
   1743c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17440:	ldrb	r3, [r3, #76]	; 0x4c
   17444:	cmp	r3, #0
   17448:	bne	1749c <__assert_fail@plt+0x61ac>
   1744c:	mov	r3, #0
   17450:	str	r3, [fp, #-28]	; 0xffffffe4
   17454:	b	17480 <__assert_fail@plt+0x6190>
   17458:	ldr	r3, [fp, #-160]	; 0xffffff60
   1745c:	ldr	r2, [r3, #12]
   17460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17464:	lsl	r3, r3, #2
   17468:	add	r3, r2, r3
   1746c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17470:	str	r2, [r3]
   17474:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17478:	add	r3, r3, #1
   1747c:	str	r3, [fp, #-28]	; 0xffffffe4
   17480:	ldr	r3, [fp, #-12]
   17484:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17488:	cmp	r2, r3
   1748c:	bcc	17458 <__assert_fail@plt+0x6168>
   17490:	ldr	r3, [fp, #-160]	; 0xffffff60
   17494:	mov	r2, #1
   17498:	strb	r2, [r3, #76]	; 0x4c
   1749c:	ldr	r3, [fp, #-160]	; 0xffffff60
   174a0:	ldr	r2, [r3, #4]
   174a4:	ldr	r3, [fp, #-12]
   174a8:	add	r3, r2, r3
   174ac:	sub	r1, fp, #144	; 0x90
   174b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   174b4:	mov	r0, r3
   174b8:	bl	11074 <memcpy@plt>
   174bc:	ldr	r3, [fp, #-160]	; 0xffffff60
   174c0:	ldr	r2, [r3, #8]
   174c4:	ldr	r3, [fp, #-12]
   174c8:	lsl	r3, r3, #2
   174cc:	add	r3, r2, r3
   174d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   174d4:	str	r2, [r3]
   174d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   174dc:	ldr	r2, [r3, #12]
   174e0:	ldr	r3, [fp, #-12]
   174e4:	lsl	r3, r3, #2
   174e8:	add	r3, r2, r3
   174ec:	ldr	r2, [fp, #-8]
   174f0:	str	r2, [r3]
   174f4:	mov	r3, #1
   174f8:	str	r3, [fp, #-28]	; 0xffffffe4
   174fc:	b	1757c <__assert_fail@plt+0x628c>
   17500:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17504:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17508:	cmp	r2, r3
   1750c:	bcc	1751c <__assert_fail@plt+0x622c>
   17510:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17514:	sub	r3, r3, #1
   17518:	b	17520 <__assert_fail@plt+0x6230>
   1751c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17520:	ldr	r2, [fp, #-8]
   17524:	add	r0, r3, r2
   17528:	ldr	r3, [fp, #-160]	; 0xffffff60
   1752c:	ldr	r2, [r3, #12]
   17530:	ldr	r1, [fp, #-12]
   17534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17538:	add	r3, r1, r3
   1753c:	lsl	r3, r3, #2
   17540:	add	r3, r2, r3
   17544:	mov	r2, r0
   17548:	str	r2, [r3]
   1754c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17550:	ldr	r2, [r3, #8]
   17554:	ldr	r1, [fp, #-12]
   17558:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1755c:	add	r3, r1, r3
   17560:	lsl	r3, r3, #2
   17564:	add	r3, r2, r3
   17568:	mvn	r2, #0
   1756c:	str	r2, [r3]
   17570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17574:	add	r3, r3, #1
   17578:	str	r3, [fp, #-28]	; 0xffffffe4
   1757c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17580:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17584:	cmp	r2, r3
   17588:	bcc	17500 <__assert_fail@plt+0x6210>
   1758c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17590:	ldr	r3, [r3, #48]	; 0x30
   17594:	mov	r1, r3
   17598:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1759c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   175a0:	sub	r3, r2, r3
   175a4:	add	r3, r1, r3
   175a8:	mov	r2, r3
   175ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   175b0:	str	r2, [r3, #48]	; 0x30
   175b4:	ldr	r3, [fp, #-160]	; 0xffffff60
   175b8:	ldr	r3, [r3, #52]	; 0x34
   175bc:	ldr	r2, [fp, #-8]
   175c0:	cmp	r2, r3
   175c4:	bge	175f0 <__assert_fail@plt+0x6300>
   175c8:	ldr	r3, [fp, #-160]	; 0xffffff60
   175cc:	ldr	r3, [r3, #56]	; 0x38
   175d0:	mov	r1, r3
   175d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   175d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   175dc:	sub	r3, r2, r3
   175e0:	add	r3, r1, r3
   175e4:	mov	r2, r3
   175e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   175ec:	str	r2, [r3, #56]	; 0x38
   175f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   175f4:	ldr	r2, [r3, #36]	; 0x24
   175f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   175fc:	ldr	r3, [r3, #48]	; 0x30
   17600:	cmp	r2, r3
   17604:	movlt	r3, r2
   17608:	movge	r3, r3
   1760c:	str	r3, [fp, #-16]
   17610:	ldr	r2, [fp, #-12]
   17614:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17618:	add	r3, r2, r3
   1761c:	str	r3, [fp, #-12]
   17620:	ldr	r2, [fp, #-8]
   17624:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17628:	add	r3, r2, r3
   1762c:	str	r3, [fp, #-8]
   17630:	b	178e8 <__assert_fail@plt+0x65f8>
   17634:	ldr	r3, [fp, #-160]	; 0xffffff60
   17638:	ldr	r2, [r3, #4]
   1763c:	ldr	r3, [fp, #-12]
   17640:	add	r3, r2, r3
   17644:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17648:	ldr	r1, [fp, #-20]	; 0xffffffec
   1764c:	mov	r0, r3
   17650:	bl	11074 <memcpy@plt>
   17654:	b	17678 <__assert_fail@plt+0x6388>
   17658:	ldr	r3, [fp, #-160]	; 0xffffff60
   1765c:	ldr	r2, [r3, #4]
   17660:	ldr	r3, [fp, #-12]
   17664:	add	r3, r2, r3
   17668:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1766c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17670:	mov	r0, r3
   17674:	bl	11074 <memcpy@plt>
   17678:	ldr	r3, [fp, #-160]	; 0xffffff60
   1767c:	ldrb	r3, [r3, #76]	; 0x4c
   17680:	cmp	r3, #0
   17684:	movne	r3, #1
   17688:	moveq	r3, #0
   1768c:	uxtb	r3, r3
   17690:	cmp	r3, #0
   17694:	beq	176f0 <__assert_fail@plt+0x6400>
   17698:	mov	r3, #0
   1769c:	str	r3, [fp, #-32]	; 0xffffffe0
   176a0:	b	176e0 <__assert_fail@plt+0x63f0>
   176a4:	ldr	r2, [fp, #-8]
   176a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176ac:	add	r0, r2, r3
   176b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   176b4:	ldr	r2, [r3, #12]
   176b8:	ldr	r1, [fp, #-12]
   176bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176c0:	add	r3, r1, r3
   176c4:	lsl	r3, r3, #2
   176c8:	add	r3, r2, r3
   176cc:	mov	r2, r0
   176d0:	str	r2, [r3]
   176d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176d8:	add	r3, r3, #1
   176dc:	str	r3, [fp, #-32]	; 0xffffffe0
   176e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   176e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   176e8:	cmp	r2, r3
   176ec:	bcc	176a4 <__assert_fail@plt+0x63b4>
   176f0:	ldr	r2, [fp, #-8]
   176f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   176f8:	add	r3, r2, r3
   176fc:	str	r3, [fp, #-8]
   17700:	ldr	r3, [fp, #-160]	; 0xffffff60
   17704:	ldr	r2, [r3, #8]
   17708:	ldr	r3, [fp, #-12]
   1770c:	add	r1, r3, #1
   17710:	str	r1, [fp, #-12]
   17714:	lsl	r3, r3, #2
   17718:	add	r3, r2, r3
   1771c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17720:	str	r2, [r3]
   17724:	ldr	r2, [fp, #-12]
   17728:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1772c:	add	r3, r2, r3
   17730:	sub	r3, r3, #1
   17734:	str	r3, [fp, #-48]	; 0xffffffd0
   17738:	b	17760 <__assert_fail@plt+0x6470>
   1773c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17740:	ldr	r2, [r3, #8]
   17744:	ldr	r3, [fp, #-12]
   17748:	add	r1, r3, #1
   1774c:	str	r1, [fp, #-12]
   17750:	lsl	r3, r3, #2
   17754:	add	r3, r2, r3
   17758:	mvn	r2, #0
   1775c:	str	r2, [r3]
   17760:	ldr	r2, [fp, #-12]
   17764:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17768:	cmp	r2, r3
   1776c:	blt	1773c <__assert_fail@plt+0x644c>
   17770:	b	178e8 <__assert_fail@plt+0x65f8>
   17774:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17778:	cmn	r3, #1
   1777c:	beq	177b0 <__assert_fail@plt+0x64c0>
   17780:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17784:	cmp	r3, #0
   17788:	beq	177b0 <__assert_fail@plt+0x64c0>
   1778c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17790:	cmn	r3, #2
   17794:	bne	178c8 <__assert_fail@plt+0x65d8>
   17798:	ldr	r3, [fp, #-160]	; 0xffffff60
   1779c:	ldr	r2, [r3, #36]	; 0x24
   177a0:	ldr	r3, [fp, #-160]	; 0xffffff60
   177a4:	ldr	r3, [r3, #48]	; 0x30
   177a8:	cmp	r2, r3
   177ac:	blt	178c8 <__assert_fail@plt+0x65d8>
   177b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   177b4:	ldr	r3, [r3]
   177b8:	ldr	r2, [fp, #-160]	; 0xffffff60
   177bc:	ldr	r1, [r2, #24]
   177c0:	ldr	r2, [fp, #-8]
   177c4:	add	r2, r1, r2
   177c8:	add	r3, r3, r2
   177cc:	ldrb	r3, [r3]
   177d0:	str	r3, [fp, #-36]	; 0xffffffdc
   177d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   177d8:	ldr	r3, [r3, #64]	; 0x40
   177dc:	cmp	r3, #0
   177e0:	movne	r3, #1
   177e4:	moveq	r3, #0
   177e8:	uxtb	r3, r3
   177ec:	cmp	r3, #0
   177f0:	beq	1780c <__assert_fail@plt+0x651c>
   177f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   177f8:	ldr	r2, [r3, #64]	; 0x40
   177fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17800:	add	r3, r2, r3
   17804:	ldrb	r3, [r3]
   17808:	str	r3, [fp, #-36]	; 0xffffffdc
   1780c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17810:	ldr	r2, [r3, #4]
   17814:	ldr	r3, [fp, #-12]
   17818:	add	r3, r2, r3
   1781c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17820:	uxtb	r2, r2
   17824:	strb	r2, [r3]
   17828:	ldr	r3, [fp, #-160]	; 0xffffff60
   1782c:	ldrb	r3, [r3, #76]	; 0x4c
   17830:	cmp	r3, #0
   17834:	movne	r3, #1
   17838:	moveq	r3, #0
   1783c:	uxtb	r3, r3
   17840:	cmp	r3, #0
   17844:	beq	17864 <__assert_fail@plt+0x6574>
   17848:	ldr	r3, [fp, #-160]	; 0xffffff60
   1784c:	ldr	r2, [r3, #12]
   17850:	ldr	r3, [fp, #-12]
   17854:	lsl	r3, r3, #2
   17858:	add	r3, r2, r3
   1785c:	ldr	r2, [fp, #-8]
   17860:	str	r2, [r3]
   17864:	ldr	r3, [fp, #-8]
   17868:	add	r3, r3, #1
   1786c:	str	r3, [fp, #-8]
   17870:	ldr	r3, [fp, #-160]	; 0xffffff60
   17874:	ldr	r2, [r3, #8]
   17878:	ldr	r3, [fp, #-12]
   1787c:	add	r1, r3, #1
   17880:	str	r1, [fp, #-12]
   17884:	lsl	r3, r3, #2
   17888:	add	r3, r2, r3
   1788c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17890:	str	r2, [r3]
   17894:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17898:	cmn	r3, #1
   1789c:	moveq	r3, #1
   178a0:	movne	r3, #0
   178a4:	uxtb	r3, r3
   178a8:	cmp	r3, #0
   178ac:	beq	178e4 <__assert_fail@plt+0x65f4>
   178b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   178b4:	add	r1, r3, #16
   178b8:	sub	r3, fp, #80	; 0x50
   178bc:	ldrd	r2, [r3]
   178c0:	strd	r2, [r1]
   178c4:	b	178e4 <__assert_fail@plt+0x65f4>
   178c8:	ldr	r3, [fp, #-160]	; 0xffffff60
   178cc:	add	r1, r3, #16
   178d0:	sub	r3, fp, #80	; 0x50
   178d4:	ldrd	r2, [r3]
   178d8:	strd	r2, [r1]
   178dc:	nop	{0}
   178e0:	b	178f8 <__assert_fail@plt+0x6608>
   178e4:	nop	{0}
   178e8:	ldr	r2, [fp, #-12]
   178ec:	ldr	r3, [fp, #-16]
   178f0:	cmp	r2, r3
   178f4:	blt	171d8 <__assert_fail@plt+0x5ee8>
   178f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   178fc:	ldr	r2, [fp, #-12]
   17900:	str	r2, [r3, #28]
   17904:	ldr	r3, [fp, #-160]	; 0xffffff60
   17908:	ldr	r2, [fp, #-8]
   1790c:	str	r2, [r3, #32]
   17910:	mov	r3, #0
   17914:	mov	r0, r3
   17918:	sub	sp, fp, #4
   1791c:	ldr	fp, [sp]
   17920:	add	sp, sp, #4
   17924:	pop	{pc}		; (ldr pc, [sp], #4)
   17928:	str	fp, [sp, #-8]!
   1792c:	str	lr, [sp, #4]
   17930:	add	fp, sp, #4
   17934:	sub	sp, sp, #48	; 0x30
   17938:	str	r0, [fp, #-40]	; 0xffffffd8
   1793c:	str	r1, [fp, #-44]	; 0xffffffd4
   17940:	str	r2, [fp, #-48]	; 0xffffffd0
   17944:	mvn	r3, #0
   17948:	str	r3, [fp, #-16]
   1794c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17950:	ldr	r2, [r3, #24]
   17954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17958:	ldr	r3, [r3, #32]
   1795c:	add	r3, r2, r3
   17960:	str	r3, [fp, #-8]
   17964:	b	17a94 <__assert_fail@plt+0x67a4>
   17968:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1796c:	ldr	r2, [r3, #44]	; 0x2c
   17970:	ldr	r3, [fp, #-8]
   17974:	sub	r3, r2, r3
   17978:	str	r3, [fp, #-20]	; 0xffffffec
   1797c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17980:	sub	r1, fp, #28
   17984:	add	r3, r3, #16
   17988:	ldrd	r2, [r3]
   1798c:	strd	r2, [r1]
   17990:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17994:	ldr	r2, [r3]
   17998:	ldr	r3, [fp, #-8]
   1799c:	add	r1, r2, r3
   179a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   179a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   179a8:	add	r3, r3, #16
   179ac:	sub	r0, fp, #32
   179b0:	bl	31db0 <__assert_fail@plt+0x20ac0>
   179b4:	str	r0, [fp, #-12]
   179b8:	ldr	r3, [fp, #-12]
   179bc:	cmn	r3, #2
   179c0:	moveq	r3, #1
   179c4:	movne	r3, #0
   179c8:	uxtb	r3, r3
   179cc:	cmp	r3, #0
   179d0:	bne	179f0 <__assert_fail@plt+0x6700>
   179d4:	ldr	r3, [fp, #-12]
   179d8:	cmn	r3, #1
   179dc:	moveq	r3, #1
   179e0:	movne	r3, #0
   179e4:	uxtb	r3, r3
   179e8:	cmp	r3, #0
   179ec:	beq	179f8 <__assert_fail@plt+0x6708>
   179f0:	mov	r3, #1
   179f4:	b	179fc <__assert_fail@plt+0x670c>
   179f8:	mov	r3, #0
   179fc:	cmp	r3, #0
   17a00:	bne	17a20 <__assert_fail@plt+0x6730>
   17a04:	ldr	r3, [fp, #-12]
   17a08:	cmp	r3, #0
   17a0c:	moveq	r3, #1
   17a10:	movne	r3, #0
   17a14:	uxtb	r3, r3
   17a18:	cmp	r3, #0
   17a1c:	beq	17a7c <__assert_fail@plt+0x678c>
   17a20:	ldr	r3, [fp, #-12]
   17a24:	cmp	r3, #0
   17a28:	beq	17a38 <__assert_fail@plt+0x6748>
   17a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a30:	cmp	r3, #0
   17a34:	bne	17a44 <__assert_fail@plt+0x6754>
   17a38:	mov	r3, #0
   17a3c:	str	r3, [fp, #-16]
   17a40:	b	17a5c <__assert_fail@plt+0x676c>
   17a44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17a48:	ldr	r2, [r3]
   17a4c:	ldr	r3, [fp, #-8]
   17a50:	add	r3, r2, r3
   17a54:	ldrb	r3, [r3]
   17a58:	str	r3, [fp, #-16]
   17a5c:	mov	r3, #1
   17a60:	str	r3, [fp, #-12]
   17a64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17a68:	add	r1, r3, #16
   17a6c:	sub	r3, fp, #28
   17a70:	ldrd	r2, [r3]
   17a74:	strd	r2, [r1]
   17a78:	b	17a84 <__assert_fail@plt+0x6794>
   17a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17a80:	str	r3, [fp, #-16]
   17a84:	ldr	r2, [fp, #-8]
   17a88:	ldr	r3, [fp, #-12]
   17a8c:	add	r3, r2, r3
   17a90:	str	r3, [fp, #-8]
   17a94:	ldr	r2, [fp, #-8]
   17a98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17a9c:	cmp	r2, r3
   17aa0:	blt	17968 <__assert_fail@plt+0x6678>
   17aa4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17aa8:	ldr	r2, [fp, #-16]
   17aac:	str	r2, [r3]
   17ab0:	ldr	r3, [fp, #-8]
   17ab4:	mov	r0, r3
   17ab8:	sub	sp, fp, #4
   17abc:	ldr	fp, [sp]
   17ac0:	add	sp, sp, #4
   17ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ac8:	str	fp, [sp, #-8]!
   17acc:	str	lr, [sp, #4]
   17ad0:	add	fp, sp, #4
   17ad4:	sub	sp, sp, #24
   17ad8:	str	r0, [fp, #-24]	; 0xffffffe8
   17adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ae0:	ldr	r2, [r3, #36]	; 0x24
   17ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ae8:	ldr	r3, [r3, #48]	; 0x30
   17aec:	cmp	r2, r3
   17af0:	movlt	r3, r2
   17af4:	movge	r3, r3
   17af8:	str	r3, [fp, #-16]
   17afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b00:	ldr	r3, [r3, #28]
   17b04:	str	r3, [fp, #-8]
   17b08:	b	17b98 <__assert_fail@plt+0x68a8>
   17b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b10:	ldr	r3, [r3]
   17b14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b18:	ldr	r1, [r2, #24]
   17b1c:	ldr	r2, [fp, #-8]
   17b20:	add	r2, r1, r2
   17b24:	add	r3, r3, r2
   17b28:	ldrb	r3, [r3]
   17b2c:	str	r3, [fp, #-12]
   17b30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b34:	ldr	r3, [r3, #64]	; 0x40
   17b38:	cmp	r3, #0
   17b3c:	movne	r3, #1
   17b40:	moveq	r3, #0
   17b44:	uxtb	r3, r3
   17b48:	cmp	r3, #0
   17b4c:	beq	17b68 <__assert_fail@plt+0x6878>
   17b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b54:	ldr	r2, [r3, #64]	; 0x40
   17b58:	ldr	r3, [fp, #-12]
   17b5c:	add	r3, r2, r3
   17b60:	ldrb	r3, [r3]
   17b64:	str	r3, [fp, #-12]
   17b68:	ldr	r0, [fp, #-12]
   17b6c:	bl	1126c <toupper@plt>
   17b70:	mov	r1, r0
   17b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b78:	ldr	r2, [r3, #4]
   17b7c:	ldr	r3, [fp, #-8]
   17b80:	add	r3, r2, r3
   17b84:	uxtb	r2, r1
   17b88:	strb	r2, [r3]
   17b8c:	ldr	r3, [fp, #-8]
   17b90:	add	r3, r3, #1
   17b94:	str	r3, [fp, #-8]
   17b98:	ldr	r2, [fp, #-8]
   17b9c:	ldr	r3, [fp, #-16]
   17ba0:	cmp	r2, r3
   17ba4:	blt	17b0c <__assert_fail@plt+0x681c>
   17ba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17bac:	ldr	r2, [fp, #-8]
   17bb0:	str	r2, [r3, #28]
   17bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17bb8:	ldr	r2, [fp, #-8]
   17bbc:	str	r2, [r3, #32]
   17bc0:	nop	{0}
   17bc4:	sub	sp, fp, #4
   17bc8:	ldr	fp, [sp]
   17bcc:	add	sp, sp, #4
   17bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   17bd4:	push	{fp}		; (str fp, [sp, #-4]!)
   17bd8:	add	fp, sp, #0
   17bdc:	sub	sp, sp, #28
   17be0:	str	r0, [fp, #-24]	; 0xffffffe8
   17be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17be8:	ldr	r2, [r3, #36]	; 0x24
   17bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17bf0:	ldr	r3, [r3, #48]	; 0x30
   17bf4:	cmp	r2, r3
   17bf8:	movlt	r3, r2
   17bfc:	movge	r3, r3
   17c00:	str	r3, [fp, #-12]
   17c04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c08:	ldr	r3, [r3, #28]
   17c0c:	str	r3, [fp, #-8]
   17c10:	b	17c6c <__assert_fail@plt+0x697c>
   17c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c18:	ldr	r3, [r3]
   17c1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17c20:	ldr	r1, [r2, #24]
   17c24:	ldr	r2, [fp, #-8]
   17c28:	add	r2, r1, r2
   17c2c:	add	r3, r3, r2
   17c30:	ldrb	r3, [r3]
   17c34:	str	r3, [fp, #-16]
   17c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c3c:	ldr	r2, [r3, #64]	; 0x40
   17c40:	ldr	r3, [fp, #-16]
   17c44:	add	r2, r2, r3
   17c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c4c:	ldr	r1, [r3, #4]
   17c50:	ldr	r3, [fp, #-8]
   17c54:	add	r3, r1, r3
   17c58:	ldrb	r2, [r2]
   17c5c:	strb	r2, [r3]
   17c60:	ldr	r3, [fp, #-8]
   17c64:	add	r3, r3, #1
   17c68:	str	r3, [fp, #-8]
   17c6c:	ldr	r2, [fp, #-8]
   17c70:	ldr	r3, [fp, #-12]
   17c74:	cmp	r2, r3
   17c78:	blt	17c14 <__assert_fail@plt+0x6924>
   17c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c80:	ldr	r2, [fp, #-8]
   17c84:	str	r2, [r3, #28]
   17c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c8c:	ldr	r2, [fp, #-8]
   17c90:	str	r2, [r3, #32]
   17c94:	nop	{0}
   17c98:	add	sp, fp, #0
   17c9c:	pop	{fp}		; (ldr fp, [sp], #4)
   17ca0:	bx	lr
   17ca4:	str	fp, [sp, #-8]!
   17ca8:	str	lr, [sp, #4]
   17cac:	add	fp, sp, #4
   17cb0:	sub	sp, sp, #104	; 0x68
   17cb4:	str	r0, [fp, #-96]	; 0xffffffa0
   17cb8:	str	r1, [fp, #-100]	; 0xffffff9c
   17cbc:	str	r2, [fp, #-104]	; 0xffffff98
   17cc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17cc4:	ldr	r3, [r3, #24]
   17cc8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17ccc:	cmp	r2, r3
   17cd0:	movge	r3, #1
   17cd4:	movlt	r3, #0
   17cd8:	uxtb	r3, r3
   17cdc:	cmp	r3, #0
   17ce0:	beq	17cfc <__assert_fail@plt+0x6a0c>
   17ce4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ce8:	ldr	r3, [r3, #24]
   17cec:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17cf0:	sub	r3, r2, r3
   17cf4:	str	r3, [fp, #-8]
   17cf8:	b	17dc0 <__assert_fail@plt+0x6ad0>
   17cfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d00:	ldr	r3, [r3, #80]	; 0x50
   17d04:	cmp	r3, #1
   17d08:	ble	17d24 <__assert_fail@plt+0x6a34>
   17d0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d10:	add	r3, r3, #16
   17d14:	mov	r2, #8
   17d18:	mov	r1, #0
   17d1c:	mov	r0, r3
   17d20:	bl	11218 <memset@plt>
   17d24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d28:	ldr	r2, [r3, #44]	; 0x2c
   17d2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d30:	str	r2, [r3, #48]	; 0x30
   17d34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d38:	ldr	r2, [r3, #52]	; 0x34
   17d3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d40:	str	r2, [r3, #56]	; 0x38
   17d44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d48:	mov	r2, #0
   17d4c:	str	r2, [r3, #28]
   17d50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d54:	mov	r2, #0
   17d58:	str	r2, [r3, #24]
   17d5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d60:	mov	r2, #0
   17d64:	str	r2, [r3, #32]
   17d68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d6c:	mov	r2, #0
   17d70:	strb	r2, [r3, #76]	; 0x4c
   17d74:	ldr	r3, [fp, #-104]	; 0xffffff98
   17d78:	and	r3, r3, #1
   17d7c:	cmp	r3, #0
   17d80:	beq	17d8c <__assert_fail@plt+0x6a9c>
   17d84:	mov	r2, #4
   17d88:	b	17d90 <__assert_fail@plt+0x6aa0>
   17d8c:	mov	r2, #6
   17d90:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d94:	str	r2, [r3, #60]	; 0x3c
   17d98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d9c:	ldrb	r3, [r3, #75]	; 0x4b
   17da0:	cmp	r3, #0
   17da4:	bne	17db8 <__assert_fail@plt+0x6ac8>
   17da8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17dac:	ldr	r2, [r3]
   17db0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17db4:	str	r2, [r3, #4]
   17db8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17dbc:	str	r3, [fp, #-8]
   17dc0:	ldr	r3, [fp, #-8]
   17dc4:	cmp	r3, #0
   17dc8:	movne	r3, #1
   17dcc:	moveq	r3, #0
   17dd0:	uxtb	r3, r3
   17dd4:	cmp	r3, #0
   17dd8:	beq	187f8 <__assert_fail@plt+0x7508>
   17ddc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17de0:	ldr	r3, [r3, #32]
   17de4:	ldr	r2, [fp, #-8]
   17de8:	cmp	r2, r3
   17dec:	movlt	r3, #1
   17df0:	movge	r3, #0
   17df4:	uxtb	r3, r3
   17df8:	cmp	r3, #0
   17dfc:	beq	182f8 <__assert_fail@plt+0x7008>
   17e00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e04:	ldrb	r3, [r3, #76]	; 0x4c
   17e08:	cmp	r3, #0
   17e0c:	beq	1820c <__assert_fail@plt+0x6f1c>
   17e10:	mov	r3, #0
   17e14:	str	r3, [fp, #-12]
   17e18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e1c:	ldr	r3, [r3, #28]
   17e20:	str	r3, [fp, #-16]
   17e24:	ldr	r2, [fp, #-16]
   17e28:	ldr	r3, [fp, #-12]
   17e2c:	add	r3, r2, r3
   17e30:	lsr	r2, r3, #31
   17e34:	add	r3, r2, r3
   17e38:	asr	r3, r3, #1
   17e3c:	str	r3, [fp, #-20]	; 0xffffffec
   17e40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e44:	ldr	r2, [r3, #12]
   17e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e4c:	lsl	r3, r3, #2
   17e50:	add	r3, r2, r3
   17e54:	ldr	r3, [r3]
   17e58:	ldr	r2, [fp, #-8]
   17e5c:	cmp	r2, r3
   17e60:	bge	17e70 <__assert_fail@plt+0x6b80>
   17e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e68:	str	r3, [fp, #-16]
   17e6c:	b	17ea0 <__assert_fail@plt+0x6bb0>
   17e70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e74:	ldr	r2, [r3, #12]
   17e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e7c:	lsl	r3, r3, #2
   17e80:	add	r3, r2, r3
   17e84:	ldr	r3, [r3]
   17e88:	ldr	r2, [fp, #-8]
   17e8c:	cmp	r2, r3
   17e90:	ble	17eb4 <__assert_fail@plt+0x6bc4>
   17e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e98:	add	r3, r3, #1
   17e9c:	str	r3, [fp, #-12]
   17ea0:	ldr	r2, [fp, #-12]
   17ea4:	ldr	r3, [fp, #-16]
   17ea8:	cmp	r2, r3
   17eac:	blt	17e24 <__assert_fail@plt+0x6b34>
   17eb0:	b	17eb8 <__assert_fail@plt+0x6bc8>
   17eb4:	nop	{0}
   17eb8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ebc:	ldr	r2, [r3, #12]
   17ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ec4:	lsl	r3, r3, #2
   17ec8:	add	r3, r2, r3
   17ecc:	ldr	r3, [r3]
   17ed0:	ldr	r2, [fp, #-8]
   17ed4:	cmp	r2, r3
   17ed8:	ble	17ee8 <__assert_fail@plt+0x6bf8>
   17edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ee0:	add	r3, r3, #1
   17ee4:	str	r3, [fp, #-20]	; 0xffffffec
   17ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17eec:	sub	r3, r3, #1
   17ef0:	ldr	r2, [fp, #-104]	; 0xffffff98
   17ef4:	mov	r1, r3
   17ef8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17efc:	bl	18d10 <__assert_fail@plt+0x7a20>
   17f00:	mov	r2, r0
   17f04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f08:	str	r2, [r3, #60]	; 0x3c
   17f0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f10:	ldr	r3, [r3, #28]
   17f14:	ldr	r2, [fp, #-8]
   17f18:	cmp	r2, r3
   17f1c:	bge	1805c <__assert_fail@plt+0x6d6c>
   17f20:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f24:	ldr	r3, [fp, #-8]
   17f28:	cmp	r2, r3
   17f2c:	bne	1805c <__assert_fail@plt+0x6d6c>
   17f30:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f34:	ldr	r2, [r3, #12]
   17f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f3c:	lsl	r3, r3, #2
   17f40:	add	r3, r2, r3
   17f44:	ldr	r3, [r3]
   17f48:	ldr	r2, [fp, #-8]
   17f4c:	cmp	r2, r3
   17f50:	bne	1805c <__assert_fail@plt+0x6d6c>
   17f54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f58:	ldr	r0, [r3, #8]
   17f5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f60:	ldr	r2, [r3, #8]
   17f64:	ldr	r3, [fp, #-8]
   17f68:	lsl	r3, r3, #2
   17f6c:	add	r1, r2, r3
   17f70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f74:	ldr	r2, [r3, #28]
   17f78:	ldr	r3, [fp, #-8]
   17f7c:	sub	r3, r2, r3
   17f80:	lsl	r3, r3, #2
   17f84:	mov	r2, r3
   17f88:	bl	11044 <memmove@plt>
   17f8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f90:	ldr	r0, [r3, #4]
   17f94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f98:	ldr	r2, [r3, #4]
   17f9c:	ldr	r3, [fp, #-8]
   17fa0:	add	r1, r2, r3
   17fa4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fa8:	ldr	r2, [r3, #28]
   17fac:	ldr	r3, [fp, #-8]
   17fb0:	sub	r3, r2, r3
   17fb4:	mov	r2, r3
   17fb8:	bl	11044 <memmove@plt>
   17fbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fc0:	ldr	r2, [r3, #28]
   17fc4:	ldr	r3, [fp, #-8]
   17fc8:	sub	r2, r2, r3
   17fcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fd0:	str	r2, [r3, #28]
   17fd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fd8:	ldr	r2, [r3, #32]
   17fdc:	ldr	r3, [fp, #-8]
   17fe0:	sub	r2, r2, r3
   17fe4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fe8:	str	r2, [r3, #32]
   17fec:	mov	r3, #0
   17ff0:	str	r3, [fp, #-12]
   17ff4:	b	18044 <__assert_fail@plt+0x6d54>
   17ff8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ffc:	ldr	r2, [r3, #12]
   18000:	ldr	r1, [fp, #-12]
   18004:	ldr	r3, [fp, #-8]
   18008:	add	r3, r1, r3
   1800c:	lsl	r3, r3, #2
   18010:	add	r3, r2, r3
   18014:	ldr	r1, [r3]
   18018:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1801c:	ldr	r2, [r3, #12]
   18020:	ldr	r3, [fp, #-12]
   18024:	lsl	r3, r3, #2
   18028:	add	r3, r2, r3
   1802c:	ldr	r2, [fp, #-8]
   18030:	sub	r2, r1, r2
   18034:	str	r2, [r3]
   18038:	ldr	r3, [fp, #-12]
   1803c:	add	r3, r3, #1
   18040:	str	r3, [fp, #-12]
   18044:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18048:	ldr	r3, [r3, #28]
   1804c:	ldr	r2, [fp, #-12]
   18050:	cmp	r2, r3
   18054:	blt	17ff8 <__assert_fail@plt+0x6d08>
   18058:	b	187d0 <__assert_fail@plt+0x74e0>
   1805c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18060:	ldr	r2, [r3, #44]	; 0x2c
   18064:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18068:	sub	r2, r2, r3
   1806c:	ldr	r3, [fp, #-8]
   18070:	add	r2, r2, r3
   18074:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18078:	str	r2, [r3, #48]	; 0x30
   1807c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18080:	ldr	r2, [r3, #52]	; 0x34
   18084:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18088:	sub	r2, r2, r3
   1808c:	ldr	r3, [fp, #-8]
   18090:	add	r2, r2, r3
   18094:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18098:	str	r2, [r3, #56]	; 0x38
   1809c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   180a0:	mov	r2, #0
   180a4:	strb	r2, [r3, #76]	; 0x4c
   180a8:	b	180b8 <__assert_fail@plt+0x6dc8>
   180ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   180b0:	sub	r3, r3, #1
   180b4:	str	r3, [fp, #-20]	; 0xffffffec
   180b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   180bc:	cmp	r3, #0
   180c0:	ble	1811c <__assert_fail@plt+0x6e2c>
   180c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   180c8:	ldr	r2, [r3, #12]
   180cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   180d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   180d4:	lsl	r3, r3, #2
   180d8:	add	r3, r2, r3
   180dc:	ldr	r3, [r3]
   180e0:	ldr	r2, [fp, #-8]
   180e4:	cmp	r2, r3
   180e8:	beq	180ac <__assert_fail@plt+0x6dbc>
   180ec:	b	1811c <__assert_fail@plt+0x6e2c>
   180f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   180f4:	ldr	r2, [r3, #8]
   180f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   180fc:	lsl	r3, r3, #2
   18100:	add	r3, r2, r3
   18104:	ldr	r3, [r3]
   18108:	cmn	r3, #1
   1810c:	bne	18134 <__assert_fail@plt+0x6e44>
   18110:	ldr	r3, [fp, #-20]	; 0xffffffec
   18114:	add	r3, r3, #1
   18118:	str	r3, [fp, #-20]	; 0xffffffec
   1811c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18120:	ldr	r3, [r3, #28]
   18124:	ldr	r2, [fp, #-20]	; 0xffffffec
   18128:	cmp	r2, r3
   1812c:	blt	180f0 <__assert_fail@plt+0x6e00>
   18130:	b	18138 <__assert_fail@plt+0x6e48>
   18134:	nop	{0}
   18138:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1813c:	ldr	r3, [r3, #28]
   18140:	ldr	r2, [fp, #-20]	; 0xffffffec
   18144:	cmp	r2, r3
   18148:	bne	1815c <__assert_fail@plt+0x6e6c>
   1814c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18150:	mov	r2, #0
   18154:	str	r2, [r3, #28]
   18158:	b	181f8 <__assert_fail@plt+0x6f08>
   1815c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18160:	ldr	r2, [r3, #12]
   18164:	ldr	r3, [fp, #-20]	; 0xffffffec
   18168:	lsl	r3, r3, #2
   1816c:	add	r3, r2, r3
   18170:	ldr	r2, [r3]
   18174:	ldr	r3, [fp, #-8]
   18178:	sub	r2, r2, r3
   1817c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18180:	str	r2, [r3, #28]
   18184:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18188:	ldr	r3, [r3, #28]
   1818c:	cmp	r3, #0
   18190:	beq	181f8 <__assert_fail@plt+0x6f08>
   18194:	mov	r3, #0
   18198:	str	r3, [fp, #-12]
   1819c:	b	181c8 <__assert_fail@plt+0x6ed8>
   181a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181a4:	ldr	r2, [r3, #8]
   181a8:	ldr	r3, [fp, #-12]
   181ac:	lsl	r3, r3, #2
   181b0:	add	r3, r2, r3
   181b4:	mvn	r2, #0
   181b8:	str	r2, [r3]
   181bc:	ldr	r3, [fp, #-12]
   181c0:	add	r3, r3, #1
   181c4:	str	r3, [fp, #-12]
   181c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181cc:	ldr	r3, [r3, #28]
   181d0:	ldr	r2, [fp, #-12]
   181d4:	cmp	r2, r3
   181d8:	blt	181a0 <__assert_fail@plt+0x6eb0>
   181dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181e0:	ldr	r0, [r3, #4]
   181e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181e8:	ldr	r3, [r3, #28]
   181ec:	mov	r2, r3
   181f0:	mov	r1, #255	; 0xff
   181f4:	bl	11218 <memset@plt>
   181f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181fc:	ldr	r2, [r3, #28]
   18200:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18204:	str	r2, [r3, #32]
   18208:	b	187d0 <__assert_fail@plt+0x74e0>
   1820c:	ldr	r3, [fp, #-8]
   18210:	sub	r3, r3, #1
   18214:	ldr	r2, [fp, #-104]	; 0xffffff98
   18218:	mov	r1, r3
   1821c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18220:	bl	18d10 <__assert_fail@plt+0x7a20>
   18224:	mov	r2, r0
   18228:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1822c:	str	r2, [r3, #60]	; 0x3c
   18230:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18234:	ldr	r3, [r3, #80]	; 0x50
   18238:	cmp	r3, #1
   1823c:	ble	18278 <__assert_fail@plt+0x6f88>
   18240:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18244:	ldr	r0, [r3, #8]
   18248:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1824c:	ldr	r2, [r3, #8]
   18250:	ldr	r3, [fp, #-8]
   18254:	lsl	r3, r3, #2
   18258:	add	r1, r2, r3
   1825c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18260:	ldr	r2, [r3, #28]
   18264:	ldr	r3, [fp, #-8]
   18268:	sub	r3, r2, r3
   1826c:	lsl	r3, r3, #2
   18270:	mov	r2, r3
   18274:	bl	11044 <memmove@plt>
   18278:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1827c:	ldrb	r3, [r3, #75]	; 0x4b
   18280:	cmp	r3, #0
   18284:	beq	182b8 <__assert_fail@plt+0x6fc8>
   18288:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1828c:	ldr	r0, [r3, #4]
   18290:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18294:	ldr	r2, [r3, #4]
   18298:	ldr	r3, [fp, #-8]
   1829c:	add	r1, r2, r3
   182a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182a4:	ldr	r2, [r3, #28]
   182a8:	ldr	r3, [fp, #-8]
   182ac:	sub	r3, r2, r3
   182b0:	mov	r2, r3
   182b4:	bl	11044 <memmove@plt>
   182b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182bc:	ldr	r2, [r3, #28]
   182c0:	ldr	r3, [fp, #-8]
   182c4:	sub	r2, r2, r3
   182c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182cc:	str	r2, [r3, #28]
   182d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182d4:	ldr	r2, [r3, #32]
   182d8:	ldr	r3, [fp, #-8]
   182dc:	sub	r2, r2, r3
   182e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182e4:	str	r2, [r3, #32]
   182e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182ec:	ldr	r3, [r3, #28]
   182f0:	cmp	r3, #0
   182f4:	b	187d0 <__assert_fail@plt+0x74e0>
   182f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182fc:	ldr	r3, [r3, #28]
   18300:	str	r3, [fp, #-48]	; 0xffffffd0
   18304:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18308:	ldrb	r3, [r3, #76]	; 0x4c
   1830c:	cmp	r3, #0
   18310:	beq	18360 <__assert_fail@plt+0x7070>
   18314:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18318:	ldr	r2, [r3, #44]	; 0x2c
   1831c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18320:	sub	r2, r2, r3
   18324:	ldr	r3, [fp, #-8]
   18328:	add	r2, r2, r3
   1832c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18330:	str	r2, [r3, #48]	; 0x30
   18334:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18338:	ldr	r2, [r3, #52]	; 0x34
   1833c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18340:	sub	r2, r2, r3
   18344:	ldr	r3, [fp, #-8]
   18348:	add	r2, r2, r3
   1834c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18350:	str	r2, [r3, #56]	; 0x38
   18354:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18358:	mov	r2, #0
   1835c:	strb	r2, [r3, #76]	; 0x4c
   18360:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18364:	mov	r2, #0
   18368:	str	r2, [r3, #28]
   1836c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18370:	ldr	r3, [r3, #80]	; 0x50
   18374:	cmp	r3, #1
   18378:	ble	1871c <__assert_fail@plt+0x742c>
   1837c:	mvn	r3, #0
   18380:	str	r3, [fp, #-68]	; 0xffffffbc
   18384:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18388:	ldrb	r3, [r3, #73]	; 0x49
   1838c:	cmp	r3, #0
   18390:	beq	185a0 <__assert_fail@plt+0x72b0>
   18394:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18398:	ldr	r3, [r3]
   1839c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   183a0:	ldr	r2, [r2, #24]
   183a4:	add	r3, r3, r2
   183a8:	str	r3, [fp, #-52]	; 0xffffffcc
   183ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183b0:	ldr	r3, [r3, #80]	; 0x50
   183b4:	ldr	r2, [fp, #-8]
   183b8:	sub	r3, r2, r3
   183bc:	mov	r2, r3
   183c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   183c4:	add	r3, r3, r2
   183c8:	str	r3, [fp, #-32]	; 0xffffffe0
   183cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183d0:	ldr	r3, [r3]
   183d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   183d8:	cmp	r2, r3
   183dc:	bcs	183ec <__assert_fail@plt+0x70fc>
   183e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183e4:	ldr	r3, [r3]
   183e8:	str	r3, [fp, #-32]	; 0xffffffe0
   183ec:	ldr	r3, [fp, #-8]
   183f0:	sub	r3, r3, #1
   183f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   183f8:	add	r3, r2, r3
   183fc:	str	r3, [fp, #-28]	; 0xffffffe4
   18400:	b	18588 <__assert_fail@plt+0x7298>
   18404:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18408:	ldrb	r3, [r3]
   1840c:	and	r3, r3, #192	; 0xc0
   18410:	cmp	r3, #128	; 0x80
   18414:	beq	1857c <__assert_fail@plt+0x728c>
   18418:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1841c:	ldr	r3, [r3, #48]	; 0x30
   18420:	mov	r2, r3
   18424:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18428:	add	r2, r3, r2
   1842c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18430:	sub	r3, r2, r3
   18434:	str	r3, [fp, #-56]	; 0xffffffc8
   18438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1843c:	str	r3, [fp, #-36]	; 0xffffffdc
   18440:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18444:	ldr	r3, [r3, #64]	; 0x40
   18448:	cmp	r3, #0
   1844c:	movne	r3, #1
   18450:	moveq	r3, #0
   18454:	uxtb	r3, r3
   18458:	cmp	r3, #0
   1845c:	beq	184cc <__assert_fail@plt+0x71dc>
   18460:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18464:	cmp	r3, #6
   18468:	movlt	r3, r3
   1846c:	movge	r3, #6
   18470:	str	r3, [fp, #-40]	; 0xffffffd8
   18474:	b	184ac <__assert_fail@plt+0x71bc>
   18478:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1847c:	ldr	r3, [r3, #64]	; 0x40
   18480:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18488:	add	r2, r1, r2
   1848c:	ldrb	r2, [r2]
   18490:	add	r3, r3, r2
   18494:	ldrb	r1, [r3]
   18498:	sub	r2, fp, #88	; 0x58
   1849c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   184a0:	add	r3, r2, r3
   184a4:	mov	r2, r1
   184a8:	strb	r2, [r3]
   184ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   184b0:	sub	r3, r3, #1
   184b4:	str	r3, [fp, #-40]	; 0xffffffd8
   184b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   184bc:	cmp	r3, #0
   184c0:	bge	18478 <__assert_fail@plt+0x7188>
   184c4:	sub	r3, fp, #88	; 0x58
   184c8:	str	r3, [fp, #-36]	; 0xffffffdc
   184cc:	sub	r3, fp, #76	; 0x4c
   184d0:	mov	r2, #8
   184d4:	mov	r1, #0
   184d8:	mov	r0, r3
   184dc:	bl	11218 <memset@plt>
   184e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   184e4:	sub	r3, fp, #76	; 0x4c
   184e8:	sub	r0, fp, #80	; 0x50
   184ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   184f0:	bl	31db0 <__assert_fail@plt+0x20ac0>
   184f4:	str	r0, [fp, #-60]	; 0xffffffc4
   184f8:	ldr	r3, [fp, #-8]
   184fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18500:	add	r2, r2, r3
   18504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18508:	sub	r3, r2, r3
   1850c:	mov	r2, r3
   18510:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18514:	cmp	r3, r2
   18518:	bcc	1859c <__assert_fail@plt+0x72ac>
   1851c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18520:	cmn	r3, #3
   18524:	bhi	1859c <__assert_fail@plt+0x72ac>
   18528:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1852c:	add	r3, r3, #16
   18530:	mov	r2, #8
   18534:	mov	r1, #0
   18538:	mov	r0, r3
   1853c:	bl	11218 <memset@plt>
   18540:	ldr	r3, [fp, #-8]
   18544:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18548:	add	r2, r2, r3
   1854c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18550:	sub	r3, r2, r3
   18554:	mov	r2, r3
   18558:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1855c:	sub	r3, r3, r2
   18560:	mov	r2, r3
   18564:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18568:	str	r2, [r3, #28]
   1856c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18570:	str	r3, [fp, #-68]	; 0xffffffbc
   18574:	nop	{0}
   18578:	b	1859c <__assert_fail@plt+0x72ac>
   1857c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18580:	sub	r3, r3, #1
   18584:	str	r3, [fp, #-28]	; 0xffffffe4
   18588:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1858c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18590:	cmp	r2, r3
   18594:	bcs	18404 <__assert_fail@plt+0x7114>
   18598:	b	185a0 <__assert_fail@plt+0x72b0>
   1859c:	nop	{0}
   185a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   185a4:	cmn	r3, #1
   185a8:	bne	185d4 <__assert_fail@plt+0x72e4>
   185ac:	sub	r3, fp, #68	; 0x44
   185b0:	mov	r2, r3
   185b4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   185b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   185bc:	bl	17928 <__assert_fail@plt+0x6638>
   185c0:	mov	r2, r0
   185c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   185c8:	sub	r2, r2, r3
   185cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   185d0:	str	r2, [r3, #28]
   185d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   185d8:	cmn	r3, #1
   185dc:	bne	18608 <__assert_fail@plt+0x7318>
   185e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   185e4:	sub	r3, r3, #1
   185e8:	ldr	r2, [fp, #-104]	; 0xffffff98
   185ec:	mov	r1, r3
   185f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   185f4:	bl	18d10 <__assert_fail@plt+0x7a20>
   185f8:	mov	r2, r0
   185fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18600:	str	r2, [r3, #60]	; 0x3c
   18604:	b	18684 <__assert_fail@plt+0x7394>
   18608:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1860c:	ldrb	r3, [r3, #78]	; 0x4e
   18610:	cmp	r3, #0
   18614:	movne	r3, #1
   18618:	moveq	r3, #0
   1861c:	uxtb	r3, r3
   18620:	cmp	r3, #0
   18624:	beq	1864c <__assert_fail@plt+0x735c>
   18628:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1862c:	mov	r0, r3
   18630:	bl	11200 <iswalnum@plt>
   18634:	mov	r3, r0
   18638:	cmp	r3, #0
   1863c:	bne	18678 <__assert_fail@plt+0x7388>
   18640:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18644:	cmp	r3, #95	; 0x5f
   18648:	beq	18678 <__assert_fail@plt+0x7388>
   1864c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18650:	cmp	r3, #10
   18654:	bne	18670 <__assert_fail@plt+0x7380>
   18658:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1865c:	ldrb	r3, [r3, #77]	; 0x4d
   18660:	cmp	r3, #0
   18664:	beq	18670 <__assert_fail@plt+0x7380>
   18668:	mov	r3, #2
   1866c:	b	1867c <__assert_fail@plt+0x738c>
   18670:	mov	r3, #0
   18674:	b	1867c <__assert_fail@plt+0x738c>
   18678:	mov	r3, #1
   1867c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18680:	str	r3, [r2, #60]	; 0x3c
   18684:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18688:	ldr	r3, [r3, #28]
   1868c:	cmp	r3, #0
   18690:	beq	18708 <__assert_fail@plt+0x7418>
   18694:	mov	r3, #0
   18698:	str	r3, [fp, #-24]	; 0xffffffe8
   1869c:	b	186c8 <__assert_fail@plt+0x73d8>
   186a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   186a4:	ldr	r2, [r3, #8]
   186a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186ac:	lsl	r3, r3, #2
   186b0:	add	r3, r2, r3
   186b4:	mvn	r2, #0
   186b8:	str	r2, [r3]
   186bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186c0:	add	r3, r3, #1
   186c4:	str	r3, [fp, #-24]	; 0xffffffe8
   186c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   186cc:	ldr	r3, [r3, #28]
   186d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186d4:	cmp	r2, r3
   186d8:	blt	186a0 <__assert_fail@plt+0x73b0>
   186dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   186e0:	ldrb	r3, [r3, #75]	; 0x4b
   186e4:	cmp	r3, #0
   186e8:	beq	18708 <__assert_fail@plt+0x7418>
   186ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   186f0:	ldr	r0, [r3, #4]
   186f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   186f8:	ldr	r3, [r3, #28]
   186fc:	mov	r2, r3
   18700:	mov	r1, #255	; 0xff
   18704:	bl	11218 <memset@plt>
   18708:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1870c:	ldr	r2, [r3, #28]
   18710:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18714:	str	r2, [r3, #32]
   18718:	b	187d0 <__assert_fail@plt+0x74e0>
   1871c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18720:	ldr	r2, [r3]
   18724:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18728:	ldr	r1, [r3, #24]
   1872c:	ldr	r3, [fp, #-8]
   18730:	add	r3, r1, r3
   18734:	sub	r3, r3, #1
   18738:	add	r3, r2, r3
   1873c:	ldrb	r3, [r3]
   18740:	str	r3, [fp, #-44]	; 0xffffffd4
   18744:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18748:	mov	r2, #0
   1874c:	str	r2, [r3, #32]
   18750:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18754:	ldr	r3, [r3, #64]	; 0x40
   18758:	cmp	r3, #0
   1875c:	beq	18778 <__assert_fail@plt+0x7488>
   18760:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18764:	ldr	r2, [r3, #64]	; 0x40
   18768:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1876c:	add	r3, r2, r3
   18770:	ldrb	r3, [r3]
   18774:	str	r3, [fp, #-44]	; 0xffffffd4
   18778:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1877c:	ldr	r3, [r3, #68]	; 0x44
   18780:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18784:	mov	r0, r3
   18788:	bl	16064 <__assert_fail@plt+0x4d74>
   1878c:	mov	r3, r0
   18790:	cmp	r3, #0
   18794:	bne	187c4 <__assert_fail@plt+0x74d4>
   18798:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1879c:	cmp	r3, #10
   187a0:	bne	187bc <__assert_fail@plt+0x74cc>
   187a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   187a8:	ldrb	r3, [r3, #77]	; 0x4d
   187ac:	cmp	r3, #0
   187b0:	beq	187bc <__assert_fail@plt+0x74cc>
   187b4:	mov	r3, #2
   187b8:	b	187c8 <__assert_fail@plt+0x74d8>
   187bc:	mov	r3, #0
   187c0:	b	187c8 <__assert_fail@plt+0x74d8>
   187c4:	mov	r3, #1
   187c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   187cc:	str	r3, [r2, #60]	; 0x3c
   187d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   187d4:	ldrb	r3, [r3, #75]	; 0x4b
   187d8:	cmp	r3, #0
   187dc:	bne	187f8 <__assert_fail@plt+0x7508>
   187e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   187e4:	ldr	r2, [r3, #4]
   187e8:	ldr	r3, [fp, #-8]
   187ec:	add	r2, r2, r3
   187f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   187f4:	str	r2, [r3, #4]
   187f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   187fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18800:	str	r2, [r3, #24]
   18804:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18808:	ldr	r2, [r3, #48]	; 0x30
   1880c:	ldr	r3, [fp, #-8]
   18810:	sub	r2, r2, r3
   18814:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18818:	str	r2, [r3, #48]	; 0x30
   1881c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18820:	ldr	r2, [r3, #56]	; 0x38
   18824:	ldr	r3, [fp, #-8]
   18828:	sub	r2, r2, r3
   1882c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18830:	str	r2, [r3, #56]	; 0x38
   18834:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18838:	ldr	r3, [r3, #80]	; 0x50
   1883c:	cmp	r3, #1
   18840:	ble	18890 <__assert_fail@plt+0x75a0>
   18844:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18848:	ldrb	r3, [r3, #72]	; 0x48
   1884c:	cmp	r3, #0
   18850:	beq	18884 <__assert_fail@plt+0x7594>
   18854:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18858:	bl	16ddc <__assert_fail@plt+0x5aec>
   1885c:	str	r0, [fp, #-64]	; 0xffffffc0
   18860:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18864:	cmp	r3, #0
   18868:	movne	r3, #1
   1886c:	moveq	r3, #0
   18870:	uxtb	r3, r3
   18874:	cmp	r3, #0
   18878:	beq	188e8 <__assert_fail@plt+0x75f8>
   1887c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18880:	b	188f8 <__assert_fail@plt+0x7608>
   18884:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18888:	bl	16a58 <__assert_fail@plt+0x5768>
   1888c:	b	188e8 <__assert_fail@plt+0x75f8>
   18890:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18894:	ldrb	r3, [r3, #75]	; 0x4b
   18898:	cmp	r3, #0
   1889c:	beq	188d8 <__assert_fail@plt+0x75e8>
   188a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   188a4:	ldrb	r3, [r3, #72]	; 0x48
   188a8:	cmp	r3, #0
   188ac:	beq	188bc <__assert_fail@plt+0x75cc>
   188b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   188b4:	bl	17ac8 <__assert_fail@plt+0x67d8>
   188b8:	b	188e8 <__assert_fail@plt+0x75f8>
   188bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   188c0:	ldr	r3, [r3, #64]	; 0x40
   188c4:	cmp	r3, #0
   188c8:	beq	188e8 <__assert_fail@plt+0x75f8>
   188cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   188d0:	bl	17bd4 <__assert_fail@plt+0x68e4>
   188d4:	b	188e8 <__assert_fail@plt+0x75f8>
   188d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   188dc:	ldr	r2, [r3, #48]	; 0x30
   188e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   188e4:	str	r2, [r3, #28]
   188e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   188ec:	mov	r2, #0
   188f0:	str	r2, [r3, #40]	; 0x28
   188f4:	mov	r3, #0
   188f8:	mov	r0, r3
   188fc:	sub	sp, fp, #4
   18900:	ldr	fp, [sp]
   18904:	add	sp, sp, #4
   18908:	pop	{pc}		; (ldr pc, [sp], #4)
   1890c:	push	{fp}		; (str fp, [sp, #-4]!)
   18910:	add	fp, sp, #0
   18914:	sub	sp, sp, #20
   18918:	str	r0, [fp, #-16]
   1891c:	str	r1, [fp, #-20]	; 0xffffffec
   18920:	ldr	r3, [fp, #-16]
   18924:	ldrb	r3, [r3, #75]	; 0x4b
   18928:	cmp	r3, #0
   1892c:	moveq	r3, #1
   18930:	movne	r3, #0
   18934:	uxtb	r3, r3
   18938:	cmp	r3, #0
   1893c:	beq	18964 <__assert_fail@plt+0x7674>
   18940:	ldr	r3, [fp, #-16]
   18944:	ldr	r3, [r3, #4]
   18948:	ldr	r2, [fp, #-16]
   1894c:	ldr	r1, [r2, #40]	; 0x28
   18950:	ldr	r2, [fp, #-20]	; 0xffffffec
   18954:	add	r2, r1, r2
   18958:	add	r3, r3, r2
   1895c:	ldrb	r3, [r3]
   18960:	b	18ac8 <__assert_fail@plt+0x77d8>
   18964:	ldr	r3, [fp, #-16]
   18968:	ldr	r3, [r3, #80]	; 0x50
   1896c:	cmp	r3, #1
   18970:	ble	18a18 <__assert_fail@plt+0x7728>
   18974:	ldr	r3, [fp, #-16]
   18978:	ldr	r2, [r3, #8]
   1897c:	ldr	r3, [fp, #-16]
   18980:	ldr	r1, [r3, #40]	; 0x28
   18984:	ldr	r3, [fp, #-20]	; 0xffffffec
   18988:	add	r3, r1, r3
   1898c:	lsl	r3, r3, #2
   18990:	add	r3, r2, r3
   18994:	ldr	r3, [r3]
   18998:	cmn	r3, #1
   1899c:	beq	189f4 <__assert_fail@plt+0x7704>
   189a0:	ldr	r3, [fp, #-16]
   189a4:	ldr	r2, [r3, #28]
   189a8:	ldr	r3, [fp, #-16]
   189ac:	ldr	r1, [r3, #40]	; 0x28
   189b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   189b4:	add	r3, r1, r3
   189b8:	add	r3, r3, #1
   189bc:	cmp	r2, r3
   189c0:	beq	18a18 <__assert_fail@plt+0x7728>
   189c4:	ldr	r3, [fp, #-16]
   189c8:	ldr	r2, [r3, #8]
   189cc:	ldr	r3, [fp, #-16]
   189d0:	ldr	r1, [r3, #40]	; 0x28
   189d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   189d8:	add	r3, r1, r3
   189dc:	add	r3, r3, #1
   189e0:	lsl	r3, r3, #2
   189e4:	add	r3, r2, r3
   189e8:	ldr	r3, [r3]
   189ec:	cmn	r3, #1
   189f0:	bne	18a18 <__assert_fail@plt+0x7728>
   189f4:	ldr	r3, [fp, #-16]
   189f8:	ldr	r3, [r3, #4]
   189fc:	ldr	r2, [fp, #-16]
   18a00:	ldr	r1, [r2, #40]	; 0x28
   18a04:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a08:	add	r2, r1, r2
   18a0c:	add	r3, r3, r2
   18a10:	ldrb	r3, [r3]
   18a14:	b	18ac8 <__assert_fail@plt+0x77d8>
   18a18:	ldr	r3, [fp, #-16]
   18a1c:	ldr	r3, [r3, #40]	; 0x28
   18a20:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a24:	add	r3, r2, r3
   18a28:	str	r3, [fp, #-8]
   18a2c:	ldr	r3, [fp, #-16]
   18a30:	ldrb	r3, [r3, #76]	; 0x4c
   18a34:	cmp	r3, #0
   18a38:	beq	18a58 <__assert_fail@plt+0x7768>
   18a3c:	ldr	r3, [fp, #-16]
   18a40:	ldr	r2, [r3, #12]
   18a44:	ldr	r3, [fp, #-8]
   18a48:	lsl	r3, r3, #2
   18a4c:	add	r3, r2, r3
   18a50:	ldr	r3, [r3]
   18a54:	str	r3, [fp, #-8]
   18a58:	ldr	r3, [fp, #-16]
   18a5c:	ldr	r3, [r3]
   18a60:	ldr	r2, [fp, #-16]
   18a64:	ldr	r1, [r2, #24]
   18a68:	ldr	r2, [fp, #-8]
   18a6c:	add	r2, r1, r2
   18a70:	add	r3, r3, r2
   18a74:	ldrb	r3, [r3]
   18a78:	str	r3, [fp, #-12]
   18a7c:	ldr	r3, [fp, #-16]
   18a80:	ldrb	r3, [r3, #76]	; 0x4c
   18a84:	cmp	r3, #0
   18a88:	beq	18ac0 <__assert_fail@plt+0x77d0>
   18a8c:	ldr	r3, [fp, #-12]
   18a90:	bic	r3, r3, #127	; 0x7f
   18a94:	cmp	r3, #0
   18a98:	beq	18ac0 <__assert_fail@plt+0x77d0>
   18a9c:	ldr	r3, [fp, #-16]
   18aa0:	ldr	r3, [r3, #4]
   18aa4:	ldr	r2, [fp, #-16]
   18aa8:	ldr	r1, [r2, #40]	; 0x28
   18aac:	ldr	r2, [fp, #-20]	; 0xffffffec
   18ab0:	add	r2, r1, r2
   18ab4:	add	r3, r3, r2
   18ab8:	ldrb	r3, [r3]
   18abc:	b	18ac8 <__assert_fail@plt+0x77d8>
   18ac0:	ldr	r3, [fp, #-12]
   18ac4:	uxtb	r3, r3
   18ac8:	mov	r0, r3
   18acc:	add	sp, fp, #0
   18ad0:	pop	{fp}		; (ldr fp, [sp], #4)
   18ad4:	bx	lr
   18ad8:	str	r4, [sp, #-12]!
   18adc:	str	fp, [sp, #4]
   18ae0:	str	lr, [sp, #8]
   18ae4:	add	fp, sp, #8
   18ae8:	sub	sp, sp, #20
   18aec:	str	r0, [fp, #-24]	; 0xffffffe8
   18af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18af4:	ldrb	r3, [r3, #75]	; 0x4b
   18af8:	cmp	r3, #0
   18afc:	moveq	r3, #1
   18b00:	movne	r3, #0
   18b04:	uxtb	r3, r3
   18b08:	cmp	r3, #0
   18b0c:	beq	18b38 <__assert_fail@plt+0x7848>
   18b10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b14:	ldr	r2, [r3, #4]
   18b18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b1c:	ldr	r3, [r3, #40]	; 0x28
   18b20:	add	r0, r3, #1
   18b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b28:	str	r0, [r1, #40]	; 0x28
   18b2c:	add	r3, r2, r3
   18b30:	ldrb	r3, [r3]
   18b34:	b	18c90 <__assert_fail@plt+0x79a0>
   18b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b3c:	ldrb	r3, [r3, #76]	; 0x4c
   18b40:	cmp	r3, #0
   18b44:	beq	18c60 <__assert_fail@plt+0x7970>
   18b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b4c:	ldr	r2, [r3, #40]	; 0x28
   18b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b54:	ldr	r3, [r3, #28]
   18b58:	cmp	r2, r3
   18b5c:	beq	18bac <__assert_fail@plt+0x78bc>
   18b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b64:	ldr	r2, [r3, #8]
   18b68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b6c:	ldr	r3, [r3, #40]	; 0x28
   18b70:	lsl	r3, r3, #2
   18b74:	add	r3, r2, r3
   18b78:	ldr	r3, [r3]
   18b7c:	cmn	r3, #1
   18b80:	bne	18bac <__assert_fail@plt+0x78bc>
   18b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b88:	ldr	r2, [r3, #4]
   18b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b90:	ldr	r3, [r3, #40]	; 0x28
   18b94:	add	r0, r3, #1
   18b98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b9c:	str	r0, [r1, #40]	; 0x28
   18ba0:	add	r3, r2, r3
   18ba4:	ldrb	r3, [r3]
   18ba8:	b	18c90 <__assert_fail@plt+0x79a0>
   18bac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bb0:	ldr	r2, [r3, #12]
   18bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bb8:	ldr	r3, [r3, #40]	; 0x28
   18bbc:	lsl	r3, r3, #2
   18bc0:	add	r3, r2, r3
   18bc4:	ldr	r3, [r3]
   18bc8:	str	r3, [fp, #-16]
   18bcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bd0:	ldr	r3, [r3]
   18bd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bd8:	ldr	r1, [r2, #24]
   18bdc:	ldr	r2, [fp, #-16]
   18be0:	add	r2, r1, r2
   18be4:	add	r3, r3, r2
   18be8:	ldrb	r3, [r3]
   18bec:	str	r3, [fp, #-20]	; 0xffffffec
   18bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18bf4:	bic	r3, r3, #127	; 0x7f
   18bf8:	cmp	r3, #0
   18bfc:	beq	18c28 <__assert_fail@plt+0x7938>
   18c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c04:	ldr	r2, [r3, #4]
   18c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c0c:	ldr	r3, [r3, #40]	; 0x28
   18c10:	add	r0, r3, #1
   18c14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c18:	str	r0, [r1, #40]	; 0x28
   18c1c:	add	r3, r2, r3
   18c20:	ldrb	r3, [r3]
   18c24:	b	18c90 <__assert_fail@plt+0x79a0>
   18c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c2c:	ldr	r4, [r3, #40]	; 0x28
   18c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c34:	ldr	r3, [r3, #40]	; 0x28
   18c38:	mov	r1, r3
   18c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c40:	bl	16308 <__assert_fail@plt+0x5018>
   18c44:	mov	r3, r0
   18c48:	add	r2, r4, r3
   18c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c50:	str	r2, [r3, #40]	; 0x28
   18c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c58:	uxtb	r3, r3
   18c5c:	b	18c90 <__assert_fail@plt+0x79a0>
   18c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c64:	ldr	r2, [r3]
   18c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c6c:	ldr	r1, [r3, #24]
   18c70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c74:	ldr	r3, [r3, #40]	; 0x28
   18c78:	add	ip, r3, #1
   18c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c80:	str	ip, [r0, #40]	; 0x28
   18c84:	add	r3, r1, r3
   18c88:	add	r3, r2, r3
   18c8c:	ldrb	r3, [r3]
   18c90:	mov	r0, r3
   18c94:	sub	sp, fp, #8
   18c98:	ldr	r4, [sp]
   18c9c:	ldr	fp, [sp, #4]
   18ca0:	add	sp, sp, #8
   18ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ca8:	str	fp, [sp, #-8]!
   18cac:	str	lr, [sp, #4]
   18cb0:	add	fp, sp, #4
   18cb4:	sub	sp, sp, #8
   18cb8:	str	r0, [fp, #-8]
   18cbc:	ldr	r3, [fp, #-8]
   18cc0:	ldr	r3, [r3, #8]
   18cc4:	mov	r0, r3
   18cc8:	bl	31b28 <__assert_fail@plt+0x20838>
   18ccc:	ldr	r3, [fp, #-8]
   18cd0:	ldr	r3, [r3, #12]
   18cd4:	mov	r0, r3
   18cd8:	bl	31b28 <__assert_fail@plt+0x20838>
   18cdc:	ldr	r3, [fp, #-8]
   18ce0:	ldrb	r3, [r3, #75]	; 0x4b
   18ce4:	cmp	r3, #0
   18ce8:	beq	18cfc <__assert_fail@plt+0x7a0c>
   18cec:	ldr	r3, [fp, #-8]
   18cf0:	ldr	r3, [r3, #4]
   18cf4:	mov	r0, r3
   18cf8:	bl	31b28 <__assert_fail@plt+0x20838>
   18cfc:	nop	{0}
   18d00:	sub	sp, fp, #4
   18d04:	ldr	fp, [sp]
   18d08:	add	sp, sp, #4
   18d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   18d10:	str	fp, [sp, #-8]!
   18d14:	str	lr, [sp, #4]
   18d18:	add	fp, sp, #4
   18d1c:	sub	sp, sp, #32
   18d20:	str	r0, [fp, #-24]	; 0xffffffe8
   18d24:	str	r1, [fp, #-28]	; 0xffffffe4
   18d28:	str	r2, [fp, #-32]	; 0xffffffe0
   18d2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18d30:	lsr	r3, r3, #31
   18d34:	uxtb	r3, r3
   18d38:	cmp	r3, #0
   18d3c:	beq	18d4c <__assert_fail@plt+0x7a5c>
   18d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d44:	ldr	r3, [r3, #60]	; 0x3c
   18d48:	b	18ef0 <__assert_fail@plt+0x7c00>
   18d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d50:	ldr	r3, [r3, #48]	; 0x30
   18d54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18d58:	cmp	r2, r3
   18d5c:	moveq	r3, #1
   18d60:	movne	r3, #0
   18d64:	uxtb	r3, r3
   18d68:	cmp	r3, #0
   18d6c:	beq	18d90 <__assert_fail@plt+0x7aa0>
   18d70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d74:	and	r3, r3, #2
   18d78:	cmp	r3, #0
   18d7c:	beq	18d88 <__assert_fail@plt+0x7a98>
   18d80:	mov	r3, #8
   18d84:	b	18ef0 <__assert_fail@plt+0x7c00>
   18d88:	mov	r3, #10
   18d8c:	b	18ef0 <__assert_fail@plt+0x7c00>
   18d90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d94:	ldr	r3, [r3, #80]	; 0x50
   18d98:	cmp	r3, #1
   18d9c:	ble	18e88 <__assert_fail@plt+0x7b98>
   18da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18da4:	str	r3, [fp, #-8]
   18da8:	b	18dd8 <__assert_fail@plt+0x7ae8>
   18dac:	ldr	r3, [fp, #-8]
   18db0:	cmp	r3, #0
   18db4:	ldr	r3, [fp, #-8]
   18db8:	sub	r3, r3, #1
   18dbc:	str	r3, [fp, #-8]
   18dc0:	ldr	r3, [fp, #-8]
   18dc4:	cmp	r3, #0
   18dc8:	bge	18dd8 <__assert_fail@plt+0x7ae8>
   18dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18dd0:	ldr	r3, [r3, #60]	; 0x3c
   18dd4:	b	18ef0 <__assert_fail@plt+0x7c00>
   18dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ddc:	ldr	r2, [r3, #8]
   18de0:	ldr	r3, [fp, #-8]
   18de4:	lsl	r3, r3, #2
   18de8:	add	r3, r2, r3
   18dec:	ldr	r3, [r3]
   18df0:	cmn	r3, #1
   18df4:	beq	18dac <__assert_fail@plt+0x7abc>
   18df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18dfc:	ldr	r2, [r3, #8]
   18e00:	ldr	r3, [fp, #-8]
   18e04:	lsl	r3, r3, #2
   18e08:	add	r3, r2, r3
   18e0c:	ldr	r3, [r3]
   18e10:	str	r3, [fp, #-12]
   18e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e18:	ldrb	r3, [r3, #78]	; 0x4e
   18e1c:	cmp	r3, #0
   18e20:	movne	r3, #1
   18e24:	moveq	r3, #0
   18e28:	uxtb	r3, r3
   18e2c:	cmp	r3, #0
   18e30:	beq	18e5c <__assert_fail@plt+0x7b6c>
   18e34:	ldr	r0, [fp, #-12]
   18e38:	bl	11200 <iswalnum@plt>
   18e3c:	mov	r3, r0
   18e40:	cmp	r3, #0
   18e44:	bne	18e54 <__assert_fail@plt+0x7b64>
   18e48:	ldr	r3, [fp, #-12]
   18e4c:	cmp	r3, #95	; 0x5f
   18e50:	bne	18e5c <__assert_fail@plt+0x7b6c>
   18e54:	mov	r3, #1
   18e58:	b	18ef0 <__assert_fail@plt+0x7c00>
   18e5c:	ldr	r3, [fp, #-12]
   18e60:	cmp	r3, #10
   18e64:	bne	18e80 <__assert_fail@plt+0x7b90>
   18e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e6c:	ldrb	r3, [r3, #77]	; 0x4d
   18e70:	cmp	r3, #0
   18e74:	beq	18e80 <__assert_fail@plt+0x7b90>
   18e78:	mov	r3, #2
   18e7c:	b	18ef0 <__assert_fail@plt+0x7c00>
   18e80:	mov	r3, #0
   18e84:	b	18ef0 <__assert_fail@plt+0x7c00>
   18e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e8c:	ldr	r2, [r3, #4]
   18e90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18e94:	add	r3, r2, r3
   18e98:	ldrb	r3, [r3]
   18e9c:	str	r3, [fp, #-16]
   18ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ea4:	ldr	r3, [r3, #68]	; 0x44
   18ea8:	ldr	r1, [fp, #-16]
   18eac:	mov	r0, r3
   18eb0:	bl	16064 <__assert_fail@plt+0x4d74>
   18eb4:	mov	r3, r0
   18eb8:	cmp	r3, #0
   18ebc:	beq	18ec8 <__assert_fail@plt+0x7bd8>
   18ec0:	mov	r3, #1
   18ec4:	b	18ef0 <__assert_fail@plt+0x7c00>
   18ec8:	ldr	r3, [fp, #-16]
   18ecc:	cmp	r3, #10
   18ed0:	bne	18eec <__assert_fail@plt+0x7bfc>
   18ed4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ed8:	ldrb	r3, [r3, #77]	; 0x4d
   18edc:	cmp	r3, #0
   18ee0:	beq	18eec <__assert_fail@plt+0x7bfc>
   18ee4:	mov	r3, #2
   18ee8:	b	18ef0 <__assert_fail@plt+0x7c00>
   18eec:	mov	r3, #0
   18ef0:	mov	r0, r3
   18ef4:	sub	sp, fp, #4
   18ef8:	ldr	fp, [sp]
   18efc:	add	sp, sp, #4
   18f00:	pop	{pc}		; (ldr pc, [sp], #4)
   18f04:	str	fp, [sp, #-8]!
   18f08:	str	lr, [sp, #4]
   18f0c:	add	fp, sp, #4
   18f10:	sub	sp, sp, #8
   18f14:	str	r0, [fp, #-8]
   18f18:	str	r1, [fp, #-12]
   18f1c:	ldr	r3, [fp, #-8]
   18f20:	ldr	r2, [fp, #-12]
   18f24:	str	r2, [r3]
   18f28:	ldr	r3, [fp, #-8]
   18f2c:	mov	r2, #0
   18f30:	str	r2, [r3, #4]
   18f34:	ldr	r3, [fp, #-12]
   18f38:	lsl	r3, r3, #2
   18f3c:	mov	r0, r3
   18f40:	bl	3134c <__assert_fail@plt+0x2005c>
   18f44:	mov	r3, r0
   18f48:	mov	r2, r3
   18f4c:	ldr	r3, [fp, #-8]
   18f50:	str	r2, [r3, #8]
   18f54:	ldr	r3, [fp, #-8]
   18f58:	ldr	r3, [r3, #8]
   18f5c:	cmp	r3, #0
   18f60:	moveq	r3, #1
   18f64:	movne	r3, #0
   18f68:	uxtb	r3, r3
   18f6c:	cmp	r3, #0
   18f70:	beq	18f7c <__assert_fail@plt+0x7c8c>
   18f74:	mov	r3, #12
   18f78:	b	18f80 <__assert_fail@plt+0x7c90>
   18f7c:	mov	r3, #0
   18f80:	mov	r0, r3
   18f84:	sub	sp, fp, #4
   18f88:	ldr	fp, [sp]
   18f8c:	add	sp, sp, #4
   18f90:	pop	{pc}		; (ldr pc, [sp], #4)
   18f94:	str	fp, [sp, #-8]!
   18f98:	str	lr, [sp, #4]
   18f9c:	add	fp, sp, #4
   18fa0:	sub	sp, sp, #8
   18fa4:	str	r0, [fp, #-8]
   18fa8:	str	r1, [fp, #-12]
   18fac:	ldr	r3, [fp, #-8]
   18fb0:	mov	r2, #1
   18fb4:	str	r2, [r3]
   18fb8:	ldr	r3, [fp, #-8]
   18fbc:	mov	r2, #1
   18fc0:	str	r2, [r3, #4]
   18fc4:	mov	r0, #4
   18fc8:	bl	3134c <__assert_fail@plt+0x2005c>
   18fcc:	mov	r3, r0
   18fd0:	mov	r2, r3
   18fd4:	ldr	r3, [fp, #-8]
   18fd8:	str	r2, [r3, #8]
   18fdc:	ldr	r3, [fp, #-8]
   18fe0:	ldr	r3, [r3, #8]
   18fe4:	cmp	r3, #0
   18fe8:	moveq	r3, #1
   18fec:	movne	r3, #0
   18ff0:	uxtb	r3, r3
   18ff4:	cmp	r3, #0
   18ff8:	beq	19020 <__assert_fail@plt+0x7d30>
   18ffc:	ldr	r3, [fp, #-8]
   19000:	mov	r2, #0
   19004:	str	r2, [r3, #4]
   19008:	ldr	r3, [fp, #-8]
   1900c:	ldr	r2, [r3, #4]
   19010:	ldr	r3, [fp, #-8]
   19014:	str	r2, [r3]
   19018:	mov	r3, #12
   1901c:	b	19034 <__assert_fail@plt+0x7d44>
   19020:	ldr	r3, [fp, #-8]
   19024:	ldr	r3, [r3, #8]
   19028:	ldr	r2, [fp, #-12]
   1902c:	str	r2, [r3]
   19030:	mov	r3, #0
   19034:	mov	r0, r3
   19038:	sub	sp, fp, #4
   1903c:	ldr	fp, [sp]
   19040:	add	sp, sp, #4
   19044:	pop	{pc}		; (ldr pc, [sp], #4)
   19048:	str	fp, [sp, #-8]!
   1904c:	str	lr, [sp, #4]
   19050:	add	fp, sp, #4
   19054:	sub	sp, sp, #16
   19058:	str	r0, [fp, #-8]
   1905c:	str	r1, [fp, #-12]
   19060:	str	r2, [fp, #-16]
   19064:	ldr	r3, [fp, #-8]
   19068:	mov	r2, #2
   1906c:	str	r2, [r3]
   19070:	mov	r0, #8
   19074:	bl	3134c <__assert_fail@plt+0x2005c>
   19078:	mov	r3, r0
   1907c:	mov	r2, r3
   19080:	ldr	r3, [fp, #-8]
   19084:	str	r2, [r3, #8]
   19088:	ldr	r3, [fp, #-8]
   1908c:	ldr	r3, [r3, #8]
   19090:	cmp	r3, #0
   19094:	moveq	r3, #1
   19098:	movne	r3, #0
   1909c:	uxtb	r3, r3
   190a0:	cmp	r3, #0
   190a4:	beq	190b0 <__assert_fail@plt+0x7dc0>
   190a8:	mov	r3, #12
   190ac:	b	1914c <__assert_fail@plt+0x7e5c>
   190b0:	ldr	r2, [fp, #-12]
   190b4:	ldr	r3, [fp, #-16]
   190b8:	cmp	r2, r3
   190bc:	bne	190e0 <__assert_fail@plt+0x7df0>
   190c0:	ldr	r3, [fp, #-8]
   190c4:	mov	r2, #1
   190c8:	str	r2, [r3, #4]
   190cc:	ldr	r3, [fp, #-8]
   190d0:	ldr	r3, [r3, #8]
   190d4:	ldr	r2, [fp, #-12]
   190d8:	str	r2, [r3]
   190dc:	b	19148 <__assert_fail@plt+0x7e58>
   190e0:	ldr	r3, [fp, #-8]
   190e4:	mov	r2, #2
   190e8:	str	r2, [r3, #4]
   190ec:	ldr	r2, [fp, #-12]
   190f0:	ldr	r3, [fp, #-16]
   190f4:	cmp	r2, r3
   190f8:	bge	19124 <__assert_fail@plt+0x7e34>
   190fc:	ldr	r3, [fp, #-8]
   19100:	ldr	r3, [r3, #8]
   19104:	ldr	r2, [fp, #-12]
   19108:	str	r2, [r3]
   1910c:	ldr	r3, [fp, #-8]
   19110:	ldr	r3, [r3, #8]
   19114:	add	r3, r3, #4
   19118:	ldr	r2, [fp, #-16]
   1911c:	str	r2, [r3]
   19120:	b	19148 <__assert_fail@plt+0x7e58>
   19124:	ldr	r3, [fp, #-8]
   19128:	ldr	r3, [r3, #8]
   1912c:	ldr	r2, [fp, #-16]
   19130:	str	r2, [r3]
   19134:	ldr	r3, [fp, #-8]
   19138:	ldr	r3, [r3, #8]
   1913c:	add	r3, r3, #4
   19140:	ldr	r2, [fp, #-12]
   19144:	str	r2, [r3]
   19148:	mov	r3, #0
   1914c:	mov	r0, r3
   19150:	sub	sp, fp, #4
   19154:	ldr	fp, [sp]
   19158:	add	sp, sp, #4
   1915c:	pop	{pc}		; (ldr pc, [sp], #4)
   19160:	str	fp, [sp, #-8]!
   19164:	str	lr, [sp, #4]
   19168:	add	fp, sp, #4
   1916c:	sub	sp, sp, #8
   19170:	str	r0, [fp, #-8]
   19174:	str	r1, [fp, #-12]
   19178:	ldr	r3, [fp, #-12]
   1917c:	ldr	r2, [r3, #4]
   19180:	ldr	r3, [fp, #-8]
   19184:	str	r2, [r3, #4]
   19188:	ldr	r3, [fp, #-12]
   1918c:	ldr	r3, [r3, #4]
   19190:	cmp	r3, #0
   19194:	ble	19238 <__assert_fail@plt+0x7f48>
   19198:	ldr	r3, [fp, #-8]
   1919c:	ldr	r2, [r3, #4]
   191a0:	ldr	r3, [fp, #-8]
   191a4:	str	r2, [r3]
   191a8:	ldr	r3, [fp, #-8]
   191ac:	ldr	r3, [r3]
   191b0:	lsl	r3, r3, #2
   191b4:	mov	r0, r3
   191b8:	bl	3134c <__assert_fail@plt+0x2005c>
   191bc:	mov	r3, r0
   191c0:	mov	r2, r3
   191c4:	ldr	r3, [fp, #-8]
   191c8:	str	r2, [r3, #8]
   191cc:	ldr	r3, [fp, #-8]
   191d0:	ldr	r3, [r3, #8]
   191d4:	cmp	r3, #0
   191d8:	moveq	r3, #1
   191dc:	movne	r3, #0
   191e0:	uxtb	r3, r3
   191e4:	cmp	r3, #0
   191e8:	beq	19210 <__assert_fail@plt+0x7f20>
   191ec:	ldr	r3, [fp, #-8]
   191f0:	mov	r2, #0
   191f4:	str	r2, [r3, #4]
   191f8:	ldr	r3, [fp, #-8]
   191fc:	ldr	r2, [r3, #4]
   19200:	ldr	r3, [fp, #-8]
   19204:	str	r2, [r3]
   19208:	mov	r3, #12
   1920c:	b	1924c <__assert_fail@plt+0x7f5c>
   19210:	ldr	r3, [fp, #-8]
   19214:	ldr	r0, [r3, #8]
   19218:	ldr	r3, [fp, #-12]
   1921c:	ldr	r1, [r3, #8]
   19220:	ldr	r3, [fp, #-12]
   19224:	ldr	r3, [r3, #4]
   19228:	lsl	r3, r3, #2
   1922c:	mov	r2, r3
   19230:	bl	11074 <memcpy@plt>
   19234:	b	19248 <__assert_fail@plt+0x7f58>
   19238:	mov	r2, #12
   1923c:	mov	r1, #0
   19240:	ldr	r0, [fp, #-8]
   19244:	bl	11218 <memset@plt>
   19248:	mov	r3, #0
   1924c:	mov	r0, r3
   19250:	sub	sp, fp, #4
   19254:	ldr	fp, [sp]
   19258:	add	sp, sp, #4
   1925c:	pop	{pc}		; (ldr pc, [sp], #4)
   19260:	str	fp, [sp, #-8]!
   19264:	str	lr, [sp, #4]
   19268:	add	fp, sp, #4
   1926c:	sub	sp, sp, #48	; 0x30
   19270:	str	r0, [fp, #-40]	; 0xffffffd8
   19274:	str	r1, [fp, #-44]	; 0xffffffd4
   19278:	str	r2, [fp, #-48]	; 0xffffffd0
   1927c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19280:	ldr	r3, [r3, #4]
   19284:	cmp	r3, #0
   19288:	beq	1929c <__assert_fail@plt+0x7fac>
   1928c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19290:	ldr	r3, [r3, #4]
   19294:	cmp	r3, #0
   19298:	bne	192a4 <__assert_fail@plt+0x7fb4>
   1929c:	mov	r3, #0
   192a0:	b	196f0 <__assert_fail@plt+0x8400>
   192a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   192a8:	ldr	r2, [r3, #4]
   192ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   192b0:	ldr	r3, [r3, #4]
   192b4:	add	r2, r2, r3
   192b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192bc:	ldr	r3, [r3, #4]
   192c0:	add	r2, r2, r3
   192c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192c8:	ldr	r3, [r3]
   192cc:	cmp	r2, r3
   192d0:	ble	19354 <__assert_fail@plt+0x8064>
   192d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   192d8:	ldr	r2, [r3, #4]
   192dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   192e0:	ldr	r3, [r3, #4]
   192e4:	add	r2, r2, r3
   192e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192ec:	ldr	r3, [r3]
   192f0:	add	r3, r2, r3
   192f4:	str	r3, [fp, #-32]	; 0xffffffe0
   192f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192fc:	ldr	r2, [r3, #8]
   19300:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19304:	lsl	r3, r3, #2
   19308:	mov	r1, r3
   1930c:	mov	r0, r2
   19310:	bl	313dc <__assert_fail@plt+0x200ec>
   19314:	str	r0, [fp, #-36]	; 0xffffffdc
   19318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1931c:	cmp	r3, #0
   19320:	moveq	r3, #1
   19324:	movne	r3, #0
   19328:	uxtb	r3, r3
   1932c:	cmp	r3, #0
   19330:	beq	1933c <__assert_fail@plt+0x804c>
   19334:	mov	r3, #12
   19338:	b	196f0 <__assert_fail@plt+0x8400>
   1933c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19340:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19344:	str	r2, [r3, #8]
   19348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1934c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19350:	str	r2, [r3]
   19354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19358:	ldr	r2, [r3, #4]
   1935c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19360:	ldr	r3, [r3, #4]
   19364:	add	r2, r2, r3
   19368:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1936c:	ldr	r3, [r3, #4]
   19370:	add	r3, r2, r3
   19374:	str	r3, [fp, #-28]	; 0xffffffe4
   19378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1937c:	ldr	r3, [r3, #4]
   19380:	sub	r3, r3, #1
   19384:	str	r3, [fp, #-8]
   19388:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1938c:	ldr	r3, [r3, #4]
   19390:	sub	r3, r3, #1
   19394:	str	r3, [fp, #-12]
   19398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1939c:	ldr	r3, [r3, #4]
   193a0:	sub	r3, r3, #1
   193a4:	str	r3, [fp, #-20]	; 0xffffffec
   193a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   193ac:	ldr	r2, [r3, #8]
   193b0:	ldr	r3, [fp, #-8]
   193b4:	lsl	r3, r3, #2
   193b8:	add	r3, r2, r3
   193bc:	ldr	r2, [r3]
   193c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   193c4:	ldr	r1, [r3, #8]
   193c8:	ldr	r3, [fp, #-12]
   193cc:	lsl	r3, r3, #2
   193d0:	add	r3, r1, r3
   193d4:	ldr	r3, [r3]
   193d8:	cmp	r2, r3
   193dc:	bne	194e8 <__assert_fail@plt+0x81f8>
   193e0:	b	193f0 <__assert_fail@plt+0x8100>
   193e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   193e8:	sub	r3, r3, #1
   193ec:	str	r3, [fp, #-20]	; 0xffffffec
   193f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   193f4:	cmp	r3, #0
   193f8:	blt	19434 <__assert_fail@plt+0x8144>
   193fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19400:	ldr	r2, [r3, #8]
   19404:	ldr	r3, [fp, #-20]	; 0xffffffec
   19408:	lsl	r3, r3, #2
   1940c:	add	r3, r2, r3
   19410:	ldr	r2, [r3]
   19414:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19418:	ldr	r1, [r3, #8]
   1941c:	ldr	r3, [fp, #-8]
   19420:	lsl	r3, r3, #2
   19424:	add	r3, r1, r3
   19428:	ldr	r3, [r3]
   1942c:	cmp	r2, r3
   19430:	bgt	193e4 <__assert_fail@plt+0x80f4>
   19434:	ldr	r3, [fp, #-20]	; 0xffffffec
   19438:	cmp	r3, #0
   1943c:	blt	19478 <__assert_fail@plt+0x8188>
   19440:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19444:	ldr	r2, [r3, #8]
   19448:	ldr	r3, [fp, #-20]	; 0xffffffec
   1944c:	lsl	r3, r3, #2
   19450:	add	r3, r2, r3
   19454:	ldr	r2, [r3]
   19458:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1945c:	ldr	r1, [r3, #8]
   19460:	ldr	r3, [fp, #-8]
   19464:	lsl	r3, r3, #2
   19468:	add	r3, r1, r3
   1946c:	ldr	r3, [r3]
   19470:	cmp	r2, r3
   19474:	beq	194b4 <__assert_fail@plt+0x81c4>
   19478:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1947c:	ldr	r2, [r3, #8]
   19480:	ldr	r3, [fp, #-8]
   19484:	lsl	r3, r3, #2
   19488:	add	r2, r2, r3
   1948c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19490:	ldr	r1, [r3, #8]
   19494:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19498:	sub	r3, r3, #1
   1949c:	str	r3, [fp, #-28]	; 0xffffffe4
   194a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194a4:	lsl	r3, r3, #2
   194a8:	add	r3, r1, r3
   194ac:	ldr	r2, [r2]
   194b0:	str	r2, [r3]
   194b4:	ldr	r3, [fp, #-8]
   194b8:	sub	r3, r3, #1
   194bc:	str	r3, [fp, #-8]
   194c0:	ldr	r3, [fp, #-8]
   194c4:	cmp	r3, #0
   194c8:	blt	1955c <__assert_fail@plt+0x826c>
   194cc:	ldr	r3, [fp, #-12]
   194d0:	sub	r3, r3, #1
   194d4:	str	r3, [fp, #-12]
   194d8:	ldr	r3, [fp, #-12]
   194dc:	cmp	r3, #0
   194e0:	blt	1955c <__assert_fail@plt+0x826c>
   194e4:	b	193a8 <__assert_fail@plt+0x80b8>
   194e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   194ec:	ldr	r2, [r3, #8]
   194f0:	ldr	r3, [fp, #-8]
   194f4:	lsl	r3, r3, #2
   194f8:	add	r3, r2, r3
   194fc:	ldr	r2, [r3]
   19500:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19504:	ldr	r1, [r3, #8]
   19508:	ldr	r3, [fp, #-12]
   1950c:	lsl	r3, r3, #2
   19510:	add	r3, r1, r3
   19514:	ldr	r3, [r3]
   19518:	cmp	r2, r3
   1951c:	bge	1953c <__assert_fail@plt+0x824c>
   19520:	ldr	r3, [fp, #-12]
   19524:	sub	r3, r3, #1
   19528:	str	r3, [fp, #-12]
   1952c:	ldr	r3, [fp, #-12]
   19530:	cmp	r3, #0
   19534:	bge	193a8 <__assert_fail@plt+0x80b8>
   19538:	b	1955c <__assert_fail@plt+0x826c>
   1953c:	ldr	r3, [fp, #-8]
   19540:	sub	r3, r3, #1
   19544:	str	r3, [fp, #-8]
   19548:	ldr	r3, [fp, #-8]
   1954c:	cmp	r3, #0
   19550:	blt	19558 <__assert_fail@plt+0x8268>
   19554:	b	193a8 <__assert_fail@plt+0x80b8>
   19558:	nop	{0}
   1955c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19560:	ldr	r3, [r3, #4]
   19564:	sub	r3, r3, #1
   19568:	str	r3, [fp, #-20]	; 0xffffffec
   1956c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19570:	ldr	r2, [r3, #4]
   19574:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19578:	ldr	r3, [r3, #4]
   1957c:	add	r2, r2, r3
   19580:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19584:	ldr	r3, [r3, #4]
   19588:	add	r3, r2, r3
   1958c:	sub	r3, r3, #1
   19590:	str	r3, [fp, #-16]
   19594:	ldr	r2, [fp, #-16]
   19598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1959c:	sub	r3, r2, r3
   195a0:	add	r3, r3, #1
   195a4:	str	r3, [fp, #-24]	; 0xffffffe8
   195a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   195ac:	ldr	r2, [r3, #4]
   195b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   195b4:	add	r2, r2, r3
   195b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   195bc:	str	r2, [r3, #4]
   195c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   195c4:	cmp	r3, #0
   195c8:	ble	196c0 <__assert_fail@plt+0x83d0>
   195cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   195d0:	cmp	r3, #0
   195d4:	blt	196c0 <__assert_fail@plt+0x83d0>
   195d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   195dc:	ldr	r2, [r3, #8]
   195e0:	ldr	r3, [fp, #-16]
   195e4:	lsl	r3, r3, #2
   195e8:	add	r3, r2, r3
   195ec:	ldr	r2, [r3]
   195f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   195f4:	ldr	r1, [r3, #8]
   195f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   195fc:	lsl	r3, r3, #2
   19600:	add	r3, r1, r3
   19604:	ldr	r3, [r3]
   19608:	cmp	r2, r3
   1960c:	ble	19668 <__assert_fail@plt+0x8378>
   19610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19614:	ldr	r2, [r3, #8]
   19618:	ldr	r3, [fp, #-16]
   1961c:	sub	r1, r3, #1
   19620:	str	r1, [fp, #-16]
   19624:	lsl	r3, r3, #2
   19628:	add	r2, r2, r3
   1962c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19630:	ldr	r1, [r3, #8]
   19634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19638:	sub	r0, r3, #1
   1963c:	str	r0, [fp, #-24]	; 0xffffffe8
   19640:	ldr	r0, [fp, #-20]	; 0xffffffec
   19644:	add	r3, r3, r0
   19648:	lsl	r3, r3, #2
   1964c:	add	r3, r1, r3
   19650:	ldr	r2, [r2]
   19654:	str	r2, [r3]
   19658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1965c:	cmp	r3, #0
   19660:	bne	195d8 <__assert_fail@plt+0x82e8>
   19664:	b	196c0 <__assert_fail@plt+0x83d0>
   19668:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1966c:	ldr	r2, [r3, #8]
   19670:	ldr	r3, [fp, #-20]	; 0xffffffec
   19674:	lsl	r3, r3, #2
   19678:	add	r2, r2, r3
   1967c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19680:	ldr	r1, [r3, #8]
   19684:	ldr	r0, [fp, #-20]	; 0xffffffec
   19688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1968c:	add	r3, r0, r3
   19690:	lsl	r3, r3, #2
   19694:	add	r3, r1, r3
   19698:	ldr	r2, [r2]
   1969c:	str	r2, [r3]
   196a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   196a4:	sub	r3, r3, #1
   196a8:	str	r3, [fp, #-20]	; 0xffffffec
   196ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   196b0:	cmp	r3, #0
   196b4:	blt	196bc <__assert_fail@plt+0x83cc>
   196b8:	b	195d8 <__assert_fail@plt+0x82e8>
   196bc:	nop	{0}
   196c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   196c4:	ldr	r0, [r3, #8]
   196c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   196cc:	ldr	r2, [r3, #8]
   196d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   196d4:	lsl	r3, r3, #2
   196d8:	add	r1, r2, r3
   196dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   196e0:	lsl	r3, r3, #2
   196e4:	mov	r2, r3
   196e8:	bl	11074 <memcpy@plt>
   196ec:	mov	r3, #0
   196f0:	mov	r0, r3
   196f4:	sub	sp, fp, #4
   196f8:	ldr	fp, [sp]
   196fc:	add	sp, sp, #4
   19700:	pop	{pc}		; (ldr pc, [sp], #4)
   19704:	str	fp, [sp, #-8]!
   19708:	str	lr, [sp, #4]
   1970c:	add	fp, sp, #4
   19710:	sub	sp, sp, #32
   19714:	str	r0, [fp, #-24]	; 0xffffffe8
   19718:	str	r1, [fp, #-28]	; 0xffffffe4
   1971c:	str	r2, [fp, #-32]	; 0xffffffe0
   19720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19724:	cmp	r3, #0
   19728:	beq	197c0 <__assert_fail@plt+0x84d0>
   1972c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19730:	ldr	r3, [r3, #4]
   19734:	cmp	r3, #0
   19738:	ble	197c0 <__assert_fail@plt+0x84d0>
   1973c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19740:	cmp	r3, #0
   19744:	beq	197c0 <__assert_fail@plt+0x84d0>
   19748:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1974c:	ldr	r3, [r3, #4]
   19750:	cmp	r3, #0
   19754:	ble	197c0 <__assert_fail@plt+0x84d0>
   19758:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1975c:	ldr	r2, [r3, #4]
   19760:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19764:	ldr	r3, [r3, #4]
   19768:	add	r2, r2, r3
   1976c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19770:	str	r2, [r3]
   19774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19778:	ldr	r3, [r3]
   1977c:	lsl	r3, r3, #2
   19780:	mov	r0, r3
   19784:	bl	3134c <__assert_fail@plt+0x2005c>
   19788:	mov	r3, r0
   1978c:	mov	r2, r3
   19790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19794:	str	r2, [r3, #8]
   19798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1979c:	ldr	r3, [r3, #8]
   197a0:	cmp	r3, #0
   197a4:	moveq	r3, #1
   197a8:	movne	r3, #0
   197ac:	uxtb	r3, r3
   197b0:	cmp	r3, #0
   197b4:	beq	19838 <__assert_fail@plt+0x8548>
   197b8:	mov	r3, #12
   197bc:	b	19a78 <__assert_fail@plt+0x8788>
   197c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197c4:	cmp	r3, #0
   197c8:	beq	197f0 <__assert_fail@plt+0x8500>
   197cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197d0:	ldr	r3, [r3, #4]
   197d4:	cmp	r3, #0
   197d8:	ble	197f0 <__assert_fail@plt+0x8500>
   197dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   197e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197e4:	bl	19160 <__assert_fail@plt+0x7e70>
   197e8:	mov	r3, r0
   197ec:	b	19a78 <__assert_fail@plt+0x8788>
   197f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197f4:	cmp	r3, #0
   197f8:	beq	19820 <__assert_fail@plt+0x8530>
   197fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19800:	ldr	r3, [r3, #4]
   19804:	cmp	r3, #0
   19808:	ble	19820 <__assert_fail@plt+0x8530>
   1980c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19814:	bl	19160 <__assert_fail@plt+0x7e70>
   19818:	mov	r3, r0
   1981c:	b	19a78 <__assert_fail@plt+0x8788>
   19820:	mov	r2, #12
   19824:	mov	r1, #0
   19828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1982c:	bl	11218 <memset@plt>
   19830:	mov	r3, #0
   19834:	b	19a78 <__assert_fail@plt+0x8788>
   19838:	mov	r3, #0
   1983c:	str	r3, [fp, #-16]
   19840:	ldr	r3, [fp, #-16]
   19844:	str	r3, [fp, #-12]
   19848:	ldr	r3, [fp, #-12]
   1984c:	str	r3, [fp, #-8]
   19850:	b	19954 <__assert_fail@plt+0x8664>
   19854:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19858:	ldr	r2, [r3, #8]
   1985c:	ldr	r3, [fp, #-8]
   19860:	lsl	r3, r3, #2
   19864:	add	r3, r2, r3
   19868:	ldr	r2, [r3]
   1986c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19870:	ldr	r1, [r3, #8]
   19874:	ldr	r3, [fp, #-12]
   19878:	lsl	r3, r3, #2
   1987c:	add	r3, r1, r3
   19880:	ldr	r3, [r3]
   19884:	cmp	r2, r3
   19888:	ble	198d0 <__assert_fail@plt+0x85e0>
   1988c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19890:	ldr	r2, [r3, #8]
   19894:	ldr	r3, [fp, #-12]
   19898:	add	r1, r3, #1
   1989c:	str	r1, [fp, #-12]
   198a0:	lsl	r3, r3, #2
   198a4:	add	r2, r2, r3
   198a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   198ac:	ldr	r1, [r3, #8]
   198b0:	ldr	r3, [fp, #-16]
   198b4:	add	r0, r3, #1
   198b8:	str	r0, [fp, #-16]
   198bc:	lsl	r3, r3, #2
   198c0:	add	r3, r1, r3
   198c4:	ldr	r2, [r2]
   198c8:	str	r2, [r3]
   198cc:	b	19954 <__assert_fail@plt+0x8664>
   198d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   198d4:	ldr	r2, [r3, #8]
   198d8:	ldr	r3, [fp, #-8]
   198dc:	lsl	r3, r3, #2
   198e0:	add	r3, r2, r3
   198e4:	ldr	r2, [r3]
   198e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   198ec:	ldr	r1, [r3, #8]
   198f0:	ldr	r3, [fp, #-12]
   198f4:	lsl	r3, r3, #2
   198f8:	add	r3, r1, r3
   198fc:	ldr	r3, [r3]
   19900:	cmp	r2, r3
   19904:	bne	19914 <__assert_fail@plt+0x8624>
   19908:	ldr	r3, [fp, #-12]
   1990c:	add	r3, r3, #1
   19910:	str	r3, [fp, #-12]
   19914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19918:	ldr	r2, [r3, #8]
   1991c:	ldr	r3, [fp, #-8]
   19920:	add	r1, r3, #1
   19924:	str	r1, [fp, #-8]
   19928:	lsl	r3, r3, #2
   1992c:	add	r2, r2, r3
   19930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19934:	ldr	r1, [r3, #8]
   19938:	ldr	r3, [fp, #-16]
   1993c:	add	r0, r3, #1
   19940:	str	r0, [fp, #-16]
   19944:	lsl	r3, r3, #2
   19948:	add	r3, r1, r3
   1994c:	ldr	r2, [r2]
   19950:	str	r2, [r3]
   19954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19958:	ldr	r3, [r3, #4]
   1995c:	ldr	r2, [fp, #-8]
   19960:	cmp	r2, r3
   19964:	bge	1997c <__assert_fail@plt+0x868c>
   19968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1996c:	ldr	r3, [r3, #4]
   19970:	ldr	r2, [fp, #-12]
   19974:	cmp	r2, r3
   19978:	blt	19854 <__assert_fail@plt+0x8564>
   1997c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19980:	ldr	r3, [r3, #4]
   19984:	ldr	r2, [fp, #-8]
   19988:	cmp	r2, r3
   1998c:	bge	199f4 <__assert_fail@plt+0x8704>
   19990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19994:	ldr	r2, [r3, #8]
   19998:	ldr	r3, [fp, #-16]
   1999c:	lsl	r3, r3, #2
   199a0:	add	r0, r2, r3
   199a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   199a8:	ldr	r2, [r3, #8]
   199ac:	ldr	r3, [fp, #-8]
   199b0:	lsl	r3, r3, #2
   199b4:	add	r1, r2, r3
   199b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   199bc:	ldr	r2, [r3, #4]
   199c0:	ldr	r3, [fp, #-8]
   199c4:	sub	r3, r2, r3
   199c8:	lsl	r3, r3, #2
   199cc:	mov	r2, r3
   199d0:	bl	11074 <memcpy@plt>
   199d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   199d8:	ldr	r2, [r3, #4]
   199dc:	ldr	r3, [fp, #-8]
   199e0:	sub	r3, r2, r3
   199e4:	ldr	r2, [fp, #-16]
   199e8:	add	r3, r2, r3
   199ec:	str	r3, [fp, #-16]
   199f0:	b	19a68 <__assert_fail@plt+0x8778>
   199f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   199f8:	ldr	r3, [r3, #4]
   199fc:	ldr	r2, [fp, #-12]
   19a00:	cmp	r2, r3
   19a04:	bge	19a68 <__assert_fail@plt+0x8778>
   19a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a0c:	ldr	r2, [r3, #8]
   19a10:	ldr	r3, [fp, #-16]
   19a14:	lsl	r3, r3, #2
   19a18:	add	r0, r2, r3
   19a1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a20:	ldr	r2, [r3, #8]
   19a24:	ldr	r3, [fp, #-12]
   19a28:	lsl	r3, r3, #2
   19a2c:	add	r1, r2, r3
   19a30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a34:	ldr	r2, [r3, #4]
   19a38:	ldr	r3, [fp, #-12]
   19a3c:	sub	r3, r2, r3
   19a40:	lsl	r3, r3, #2
   19a44:	mov	r2, r3
   19a48:	bl	11074 <memcpy@plt>
   19a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a50:	ldr	r2, [r3, #4]
   19a54:	ldr	r3, [fp, #-12]
   19a58:	sub	r3, r2, r3
   19a5c:	ldr	r2, [fp, #-16]
   19a60:	add	r3, r2, r3
   19a64:	str	r3, [fp, #-16]
   19a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a6c:	ldr	r2, [fp, #-16]
   19a70:	str	r2, [r3, #4]
   19a74:	mov	r3, #0
   19a78:	mov	r0, r3
   19a7c:	sub	sp, fp, #4
   19a80:	ldr	fp, [sp]
   19a84:	add	sp, sp, #4
   19a88:	pop	{pc}		; (ldr pc, [sp], #4)
   19a8c:	str	fp, [sp, #-8]!
   19a90:	str	lr, [sp, #4]
   19a94:	add	fp, sp, #4
   19a98:	sub	sp, sp, #32
   19a9c:	str	r0, [fp, #-32]	; 0xffffffe0
   19aa0:	str	r1, [fp, #-36]	; 0xffffffdc
   19aa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19aa8:	cmp	r3, #0
   19aac:	beq	19ac0 <__assert_fail@plt+0x87d0>
   19ab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ab4:	ldr	r3, [r3, #4]
   19ab8:	cmp	r3, #0
   19abc:	bne	19ac8 <__assert_fail@plt+0x87d8>
   19ac0:	mov	r3, #0
   19ac4:	b	19ed8 <__assert_fail@plt+0x8be8>
   19ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19acc:	ldr	r2, [r3]
   19ad0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ad4:	ldr	r3, [r3, #4]
   19ad8:	lsl	r1, r3, #1
   19adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ae0:	ldr	r3, [r3, #4]
   19ae4:	add	r3, r1, r3
   19ae8:	cmp	r2, r3
   19aec:	bge	19b68 <__assert_fail@plt+0x8878>
   19af0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19af4:	ldr	r2, [r3, #4]
   19af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19afc:	ldr	r3, [r3]
   19b00:	add	r3, r2, r3
   19b04:	lsl	r3, r3, #1
   19b08:	str	r3, [fp, #-24]	; 0xffffffe8
   19b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b10:	ldr	r2, [r3, #8]
   19b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b18:	lsl	r3, r3, #2
   19b1c:	mov	r1, r3
   19b20:	mov	r0, r2
   19b24:	bl	313dc <__assert_fail@plt+0x200ec>
   19b28:	str	r0, [fp, #-28]	; 0xffffffe4
   19b2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b30:	cmp	r3, #0
   19b34:	moveq	r3, #1
   19b38:	movne	r3, #0
   19b3c:	uxtb	r3, r3
   19b40:	cmp	r3, #0
   19b44:	beq	19b50 <__assert_fail@plt+0x8860>
   19b48:	mov	r3, #12
   19b4c:	b	19ed8 <__assert_fail@plt+0x8be8>
   19b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19b58:	str	r2, [r3, #8]
   19b5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b64:	str	r2, [r3]
   19b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b6c:	ldr	r3, [r3, #4]
   19b70:	cmp	r3, #0
   19b74:	moveq	r3, #1
   19b78:	movne	r3, #0
   19b7c:	uxtb	r3, r3
   19b80:	cmp	r3, #0
   19b84:	beq	19bd0 <__assert_fail@plt+0x88e0>
   19b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b8c:	ldr	r3, [r3, #8]
   19b90:	cmp	r3, #0
   19b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19b98:	ldr	r2, [r3, #4]
   19b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ba0:	str	r2, [r3, #4]
   19ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ba8:	ldr	r0, [r3, #8]
   19bac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19bb0:	ldr	r1, [r3, #8]
   19bb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19bb8:	ldr	r3, [r3, #4]
   19bbc:	lsl	r3, r3, #2
   19bc0:	mov	r2, r3
   19bc4:	bl	11074 <memcpy@plt>
   19bc8:	mov	r3, #0
   19bcc:	b	19ed8 <__assert_fail@plt+0x8be8>
   19bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bd4:	ldr	r2, [r3, #4]
   19bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19bdc:	ldr	r3, [r3, #4]
   19be0:	lsl	r3, r3, #1
   19be4:	add	r3, r2, r3
   19be8:	str	r3, [fp, #-16]
   19bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19bf0:	ldr	r3, [r3, #4]
   19bf4:	sub	r3, r3, #1
   19bf8:	str	r3, [fp, #-8]
   19bfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c00:	ldr	r3, [r3, #4]
   19c04:	sub	r3, r3, #1
   19c08:	str	r3, [fp, #-12]
   19c0c:	b	19cf0 <__assert_fail@plt+0x8a00>
   19c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c14:	ldr	r2, [r3, #8]
   19c18:	ldr	r3, [fp, #-12]
   19c1c:	lsl	r3, r3, #2
   19c20:	add	r3, r2, r3
   19c24:	ldr	r2, [r3]
   19c28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19c2c:	ldr	r1, [r3, #8]
   19c30:	ldr	r3, [fp, #-8]
   19c34:	lsl	r3, r3, #2
   19c38:	add	r3, r1, r3
   19c3c:	ldr	r3, [r3]
   19c40:	cmp	r2, r3
   19c44:	bne	19c64 <__assert_fail@plt+0x8974>
   19c48:	ldr	r3, [fp, #-8]
   19c4c:	sub	r3, r3, #1
   19c50:	str	r3, [fp, #-8]
   19c54:	ldr	r3, [fp, #-12]
   19c58:	sub	r3, r3, #1
   19c5c:	str	r3, [fp, #-12]
   19c60:	b	19cf0 <__assert_fail@plt+0x8a00>
   19c64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c68:	ldr	r2, [r3, #8]
   19c6c:	ldr	r3, [fp, #-12]
   19c70:	lsl	r3, r3, #2
   19c74:	add	r3, r2, r3
   19c78:	ldr	r2, [r3]
   19c7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19c80:	ldr	r1, [r3, #8]
   19c84:	ldr	r3, [fp, #-8]
   19c88:	lsl	r3, r3, #2
   19c8c:	add	r3, r1, r3
   19c90:	ldr	r3, [r3]
   19c94:	cmp	r2, r3
   19c98:	bge	19ce4 <__assert_fail@plt+0x89f4>
   19c9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ca0:	ldr	r2, [r3, #8]
   19ca4:	ldr	r3, [fp, #-8]
   19ca8:	sub	r1, r3, #1
   19cac:	str	r1, [fp, #-8]
   19cb0:	lsl	r3, r3, #2
   19cb4:	add	r2, r2, r3
   19cb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19cbc:	ldr	r1, [r3, #8]
   19cc0:	ldr	r3, [fp, #-16]
   19cc4:	sub	r3, r3, #1
   19cc8:	str	r3, [fp, #-16]
   19ccc:	ldr	r3, [fp, #-16]
   19cd0:	lsl	r3, r3, #2
   19cd4:	add	r3, r1, r3
   19cd8:	ldr	r2, [r2]
   19cdc:	str	r2, [r3]
   19ce0:	b	19cf0 <__assert_fail@plt+0x8a00>
   19ce4:	ldr	r3, [fp, #-12]
   19ce8:	sub	r3, r3, #1
   19cec:	str	r3, [fp, #-12]
   19cf0:	ldr	r3, [fp, #-8]
   19cf4:	cmp	r3, #0
   19cf8:	blt	19d08 <__assert_fail@plt+0x8a18>
   19cfc:	ldr	r3, [fp, #-12]
   19d00:	cmp	r3, #0
   19d04:	bge	19c10 <__assert_fail@plt+0x8920>
   19d08:	ldr	r3, [fp, #-8]
   19d0c:	cmp	r3, #0
   19d10:	blt	19d58 <__assert_fail@plt+0x8a68>
   19d14:	ldr	r3, [fp, #-8]
   19d18:	add	r3, r3, #1
   19d1c:	ldr	r2, [fp, #-16]
   19d20:	sub	r3, r2, r3
   19d24:	str	r3, [fp, #-16]
   19d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d2c:	ldr	r2, [r3, #8]
   19d30:	ldr	r3, [fp, #-16]
   19d34:	lsl	r3, r3, #2
   19d38:	add	r0, r2, r3
   19d3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19d40:	ldr	r1, [r3, #8]
   19d44:	ldr	r3, [fp, #-8]
   19d48:	add	r3, r3, #1
   19d4c:	lsl	r3, r3, #2
   19d50:	mov	r2, r3
   19d54:	bl	11074 <memcpy@plt>
   19d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d5c:	ldr	r3, [r3, #4]
   19d60:	sub	r3, r3, #1
   19d64:	str	r3, [fp, #-12]
   19d68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d6c:	ldr	r2, [r3, #4]
   19d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19d74:	ldr	r3, [r3, #4]
   19d78:	lsl	r3, r3, #1
   19d7c:	add	r3, r2, r3
   19d80:	sub	r3, r3, #1
   19d84:	str	r3, [fp, #-8]
   19d88:	ldr	r2, [fp, #-8]
   19d8c:	ldr	r3, [fp, #-16]
   19d90:	sub	r3, r2, r3
   19d94:	add	r3, r3, #1
   19d98:	str	r3, [fp, #-20]	; 0xffffffec
   19d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19da0:	cmp	r3, #0
   19da4:	bne	19db0 <__assert_fail@plt+0x8ac0>
   19da8:	mov	r3, #0
   19dac:	b	19ed8 <__assert_fail@plt+0x8be8>
   19db0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19db4:	ldr	r2, [r3, #4]
   19db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19dbc:	add	r2, r2, r3
   19dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19dc4:	str	r2, [r3, #4]
   19dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19dcc:	ldr	r2, [r3, #8]
   19dd0:	ldr	r3, [fp, #-8]
   19dd4:	lsl	r3, r3, #2
   19dd8:	add	r3, r2, r3
   19ddc:	ldr	r2, [r3]
   19de0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19de4:	ldr	r1, [r3, #8]
   19de8:	ldr	r3, [fp, #-12]
   19dec:	lsl	r3, r3, #2
   19df0:	add	r3, r1, r3
   19df4:	ldr	r3, [r3]
   19df8:	cmp	r2, r3
   19dfc:	ble	19e58 <__assert_fail@plt+0x8b68>
   19e00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e04:	ldr	r2, [r3, #8]
   19e08:	ldr	r3, [fp, #-8]
   19e0c:	sub	r1, r3, #1
   19e10:	str	r1, [fp, #-8]
   19e14:	lsl	r3, r3, #2
   19e18:	add	r2, r2, r3
   19e1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e20:	ldr	r1, [r3, #8]
   19e24:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e28:	sub	r0, r3, #1
   19e2c:	str	r0, [fp, #-20]	; 0xffffffec
   19e30:	ldr	r0, [fp, #-12]
   19e34:	add	r3, r3, r0
   19e38:	lsl	r3, r3, #2
   19e3c:	add	r3, r1, r3
   19e40:	ldr	r2, [r2]
   19e44:	str	r2, [r3]
   19e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e4c:	cmp	r3, #0
   19e50:	bne	19dc8 <__assert_fail@plt+0x8ad8>
   19e54:	b	19ed4 <__assert_fail@plt+0x8be4>
   19e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e5c:	ldr	r2, [r3, #8]
   19e60:	ldr	r3, [fp, #-12]
   19e64:	lsl	r3, r3, #2
   19e68:	add	r2, r2, r3
   19e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e70:	ldr	r1, [r3, #8]
   19e74:	ldr	r0, [fp, #-12]
   19e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e7c:	add	r3, r0, r3
   19e80:	lsl	r3, r3, #2
   19e84:	add	r3, r1, r3
   19e88:	ldr	r2, [r2]
   19e8c:	str	r2, [r3]
   19e90:	ldr	r3, [fp, #-12]
   19e94:	sub	r3, r3, #1
   19e98:	str	r3, [fp, #-12]
   19e9c:	ldr	r3, [fp, #-12]
   19ea0:	cmp	r3, #0
   19ea4:	bge	19dc8 <__assert_fail@plt+0x8ad8>
   19ea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19eac:	ldr	r0, [r3, #8]
   19eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19eb4:	ldr	r2, [r3, #8]
   19eb8:	ldr	r3, [fp, #-16]
   19ebc:	lsl	r3, r3, #2
   19ec0:	add	r1, r2, r3
   19ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   19ec8:	lsl	r3, r3, #2
   19ecc:	mov	r2, r3
   19ed0:	bl	11074 <memcpy@plt>
   19ed4:	mov	r3, #0
   19ed8:	mov	r0, r3
   19edc:	sub	sp, fp, #4
   19ee0:	ldr	fp, [sp]
   19ee4:	add	sp, sp, #4
   19ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   19eec:	str	fp, [sp, #-8]!
   19ef0:	str	lr, [sp, #4]
   19ef4:	add	fp, sp, #4
   19ef8:	sub	sp, sp, #16
   19efc:	str	r0, [fp, #-16]
   19f00:	str	r1, [fp, #-20]	; 0xffffffec
   19f04:	ldr	r3, [fp, #-16]
   19f08:	ldr	r3, [r3]
   19f0c:	cmp	r3, #0
   19f10:	bne	19f48 <__assert_fail@plt+0x8c58>
   19f14:	ldr	r1, [fp, #-20]	; 0xffffffec
   19f18:	ldr	r0, [fp, #-16]
   19f1c:	bl	18f94 <__assert_fail@plt+0x7ca4>
   19f20:	mov	r3, r0
   19f24:	cmp	r3, #0
   19f28:	moveq	r3, #1
   19f2c:	movne	r3, #0
   19f30:	uxtb	r3, r3
   19f34:	cmp	r3, #0
   19f38:	movne	r3, #1
   19f3c:	moveq	r3, #0
   19f40:	uxtb	r3, r3
   19f44:	b	1a158 <__assert_fail@plt+0x8e68>
   19f48:	ldr	r3, [fp, #-16]
   19f4c:	ldr	r3, [r3, #4]
   19f50:	cmp	r3, #0
   19f54:	bne	19f90 <__assert_fail@plt+0x8ca0>
   19f58:	ldr	r3, [fp, #-16]
   19f5c:	ldr	r3, [r3, #8]
   19f60:	cmp	r3, #0
   19f64:	ldr	r3, [fp, #-16]
   19f68:	ldr	r3, [r3, #8]
   19f6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19f70:	str	r2, [r3]
   19f74:	ldr	r3, [fp, #-16]
   19f78:	ldr	r3, [r3, #4]
   19f7c:	add	r2, r3, #1
   19f80:	ldr	r3, [fp, #-16]
   19f84:	str	r2, [r3, #4]
   19f88:	mov	r3, #1
   19f8c:	b	1a158 <__assert_fail@plt+0x8e68>
   19f90:	ldr	r3, [fp, #-16]
   19f94:	ldr	r2, [r3]
   19f98:	ldr	r3, [fp, #-16]
   19f9c:	ldr	r3, [r3, #4]
   19fa0:	cmp	r2, r3
   19fa4:	bne	1a010 <__assert_fail@plt+0x8d20>
   19fa8:	ldr	r3, [fp, #-16]
   19fac:	ldr	r3, [r3]
   19fb0:	lsl	r2, r3, #1
   19fb4:	ldr	r3, [fp, #-16]
   19fb8:	str	r2, [r3]
   19fbc:	ldr	r3, [fp, #-16]
   19fc0:	ldr	r2, [r3, #8]
   19fc4:	ldr	r3, [fp, #-16]
   19fc8:	ldr	r3, [r3]
   19fcc:	lsl	r3, r3, #2
   19fd0:	mov	r1, r3
   19fd4:	mov	r0, r2
   19fd8:	bl	313dc <__assert_fail@plt+0x200ec>
   19fdc:	str	r0, [fp, #-12]
   19fe0:	ldr	r3, [fp, #-12]
   19fe4:	cmp	r3, #0
   19fe8:	moveq	r3, #1
   19fec:	movne	r3, #0
   19ff0:	uxtb	r3, r3
   19ff4:	cmp	r3, #0
   19ff8:	beq	1a004 <__assert_fail@plt+0x8d14>
   19ffc:	mov	r3, #0
   1a000:	b	1a158 <__assert_fail@plt+0x8e68>
   1a004:	ldr	r3, [fp, #-16]
   1a008:	ldr	r2, [fp, #-12]
   1a00c:	str	r2, [r3, #8]
   1a010:	ldr	r3, [fp, #-16]
   1a014:	ldr	r3, [r3, #8]
   1a018:	ldr	r3, [r3]
   1a01c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a020:	cmp	r2, r3
   1a024:	bge	1a088 <__assert_fail@plt+0x8d98>
   1a028:	ldr	r3, [fp, #-16]
   1a02c:	ldr	r3, [r3, #4]
   1a030:	str	r3, [fp, #-8]
   1a034:	b	1a078 <__assert_fail@plt+0x8d88>
   1a038:	ldr	r3, [fp, #-16]
   1a03c:	ldr	r2, [r3, #8]
   1a040:	ldr	r3, [fp, #-8]
   1a044:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a048:	lsl	r3, r3, #2
   1a04c:	add	r2, r2, r3
   1a050:	ldr	r3, [fp, #-16]
   1a054:	ldr	r1, [r3, #8]
   1a058:	ldr	r3, [fp, #-8]
   1a05c:	lsl	r3, r3, #2
   1a060:	add	r3, r1, r3
   1a064:	ldr	r2, [r2]
   1a068:	str	r2, [r3]
   1a06c:	ldr	r3, [fp, #-8]
   1a070:	sub	r3, r3, #1
   1a074:	str	r3, [fp, #-8]
   1a078:	ldr	r3, [fp, #-8]
   1a07c:	cmp	r3, #0
   1a080:	bgt	1a038 <__assert_fail@plt+0x8d48>
   1a084:	b	1a124 <__assert_fail@plt+0x8e34>
   1a088:	ldr	r3, [fp, #-16]
   1a08c:	ldr	r3, [r3, #4]
   1a090:	str	r3, [fp, #-8]
   1a094:	b	1a0d8 <__assert_fail@plt+0x8de8>
   1a098:	ldr	r3, [fp, #-16]
   1a09c:	ldr	r2, [r3, #8]
   1a0a0:	ldr	r3, [fp, #-8]
   1a0a4:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a0a8:	lsl	r3, r3, #2
   1a0ac:	add	r2, r2, r3
   1a0b0:	ldr	r3, [fp, #-16]
   1a0b4:	ldr	r1, [r3, #8]
   1a0b8:	ldr	r3, [fp, #-8]
   1a0bc:	lsl	r3, r3, #2
   1a0c0:	add	r3, r1, r3
   1a0c4:	ldr	r2, [r2]
   1a0c8:	str	r2, [r3]
   1a0cc:	ldr	r3, [fp, #-8]
   1a0d0:	sub	r3, r3, #1
   1a0d4:	str	r3, [fp, #-8]
   1a0d8:	ldr	r3, [fp, #-16]
   1a0dc:	ldr	r2, [r3, #8]
   1a0e0:	ldr	r3, [fp, #-8]
   1a0e4:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a0e8:	lsl	r3, r3, #2
   1a0ec:	add	r3, r2, r3
   1a0f0:	ldr	r3, [r3]
   1a0f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a0f8:	cmp	r2, r3
   1a0fc:	blt	1a098 <__assert_fail@plt+0x8da8>
   1a100:	ldr	r3, [fp, #-16]
   1a104:	ldr	r2, [r3, #8]
   1a108:	ldr	r3, [fp, #-8]
   1a10c:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a110:	lsl	r3, r3, #2
   1a114:	add	r3, r2, r3
   1a118:	ldr	r3, [r3]
   1a11c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a120:	cmp	r2, r3
   1a124:	ldr	r3, [fp, #-16]
   1a128:	ldr	r2, [r3, #8]
   1a12c:	ldr	r3, [fp, #-8]
   1a130:	lsl	r3, r3, #2
   1a134:	add	r3, r2, r3
   1a138:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a13c:	str	r2, [r3]
   1a140:	ldr	r3, [fp, #-16]
   1a144:	ldr	r3, [r3, #4]
   1a148:	add	r2, r3, #1
   1a14c:	ldr	r3, [fp, #-16]
   1a150:	str	r2, [r3, #4]
   1a154:	mov	r3, #1
   1a158:	mov	r0, r3
   1a15c:	sub	sp, fp, #4
   1a160:	ldr	fp, [sp]
   1a164:	add	sp, sp, #4
   1a168:	pop	{pc}		; (ldr pc, [sp], #4)
   1a16c:	str	fp, [sp, #-8]!
   1a170:	str	lr, [sp, #4]
   1a174:	add	fp, sp, #4
   1a178:	sub	sp, sp, #16
   1a17c:	str	r0, [fp, #-16]
   1a180:	str	r1, [fp, #-20]	; 0xffffffec
   1a184:	ldr	r3, [fp, #-16]
   1a188:	ldr	r2, [r3]
   1a18c:	ldr	r3, [fp, #-16]
   1a190:	ldr	r3, [r3, #4]
   1a194:	cmp	r2, r3
   1a198:	bne	1a208 <__assert_fail@plt+0x8f18>
   1a19c:	ldr	r3, [fp, #-16]
   1a1a0:	ldr	r3, [r3]
   1a1a4:	add	r3, r3, #1
   1a1a8:	lsl	r2, r3, #1
   1a1ac:	ldr	r3, [fp, #-16]
   1a1b0:	str	r2, [r3]
   1a1b4:	ldr	r3, [fp, #-16]
   1a1b8:	ldr	r2, [r3, #8]
   1a1bc:	ldr	r3, [fp, #-16]
   1a1c0:	ldr	r3, [r3]
   1a1c4:	lsl	r3, r3, #2
   1a1c8:	mov	r1, r3
   1a1cc:	mov	r0, r2
   1a1d0:	bl	313dc <__assert_fail@plt+0x200ec>
   1a1d4:	str	r0, [fp, #-8]
   1a1d8:	ldr	r3, [fp, #-8]
   1a1dc:	cmp	r3, #0
   1a1e0:	moveq	r3, #1
   1a1e4:	movne	r3, #0
   1a1e8:	uxtb	r3, r3
   1a1ec:	cmp	r3, #0
   1a1f0:	beq	1a1fc <__assert_fail@plt+0x8f0c>
   1a1f4:	mov	r3, #0
   1a1f8:	b	1a238 <__assert_fail@plt+0x8f48>
   1a1fc:	ldr	r3, [fp, #-16]
   1a200:	ldr	r2, [fp, #-8]
   1a204:	str	r2, [r3, #8]
   1a208:	ldr	r3, [fp, #-16]
   1a20c:	ldr	r2, [r3, #8]
   1a210:	ldr	r3, [fp, #-16]
   1a214:	ldr	r3, [r3, #4]
   1a218:	add	r0, r3, #1
   1a21c:	ldr	r1, [fp, #-16]
   1a220:	str	r0, [r1, #4]
   1a224:	lsl	r3, r3, #2
   1a228:	add	r3, r2, r3
   1a22c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a230:	str	r2, [r3]
   1a234:	mov	r3, #1
   1a238:	mov	r0, r3
   1a23c:	sub	sp, fp, #4
   1a240:	ldr	fp, [sp]
   1a244:	add	sp, sp, #4
   1a248:	pop	{pc}		; (ldr pc, [sp], #4)
   1a24c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a250:	add	fp, sp, #0
   1a254:	sub	sp, sp, #20
   1a258:	str	r0, [fp, #-16]
   1a25c:	str	r1, [fp, #-20]	; 0xffffffec
   1a260:	ldr	r3, [fp, #-16]
   1a264:	cmp	r3, #0
   1a268:	beq	1a290 <__assert_fail@plt+0x8fa0>
   1a26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a270:	cmp	r3, #0
   1a274:	beq	1a290 <__assert_fail@plt+0x8fa0>
   1a278:	ldr	r3, [fp, #-16]
   1a27c:	ldr	r2, [r3, #4]
   1a280:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a284:	ldr	r3, [r3, #4]
   1a288:	cmp	r2, r3
   1a28c:	beq	1a298 <__assert_fail@plt+0x8fa8>
   1a290:	mov	r3, #0
   1a294:	b	1a304 <__assert_fail@plt+0x9014>
   1a298:	ldr	r3, [fp, #-16]
   1a29c:	ldr	r3, [r3, #4]
   1a2a0:	str	r3, [fp, #-8]
   1a2a4:	b	1a2e8 <__assert_fail@plt+0x8ff8>
   1a2a8:	ldr	r3, [fp, #-16]
   1a2ac:	ldr	r2, [r3, #8]
   1a2b0:	ldr	r3, [fp, #-8]
   1a2b4:	lsl	r3, r3, #2
   1a2b8:	add	r3, r2, r3
   1a2bc:	ldr	r2, [r3]
   1a2c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a2c4:	ldr	r1, [r3, #8]
   1a2c8:	ldr	r3, [fp, #-8]
   1a2cc:	lsl	r3, r3, #2
   1a2d0:	add	r3, r1, r3
   1a2d4:	ldr	r3, [r3]
   1a2d8:	cmp	r2, r3
   1a2dc:	beq	1a2e8 <__assert_fail@plt+0x8ff8>
   1a2e0:	mov	r3, #0
   1a2e4:	b	1a304 <__assert_fail@plt+0x9014>
   1a2e8:	ldr	r3, [fp, #-8]
   1a2ec:	sub	r3, r3, #1
   1a2f0:	str	r3, [fp, #-8]
   1a2f4:	ldr	r3, [fp, #-8]
   1a2f8:	cmp	r3, #0
   1a2fc:	bge	1a2a8 <__assert_fail@plt+0x8fb8>
   1a300:	mov	r3, #1
   1a304:	mov	r0, r3
   1a308:	add	sp, fp, #0
   1a30c:	pop	{fp}		; (ldr fp, [sp], #4)
   1a310:	bx	lr
   1a314:	push	{fp}		; (str fp, [sp, #-4]!)
   1a318:	add	fp, sp, #0
   1a31c:	sub	sp, sp, #28
   1a320:	str	r0, [fp, #-24]	; 0xffffffe8
   1a324:	str	r1, [fp, #-28]	; 0xffffffe4
   1a328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a32c:	ldr	r3, [r3, #4]
   1a330:	cmp	r3, #0
   1a334:	bgt	1a340 <__assert_fail@plt+0x9050>
   1a338:	mov	r3, #0
   1a33c:	b	1a3f0 <__assert_fail@plt+0x9100>
   1a340:	mov	r3, #0
   1a344:	str	r3, [fp, #-8]
   1a348:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a34c:	ldr	r3, [r3, #4]
   1a350:	sub	r3, r3, #1
   1a354:	str	r3, [fp, #-12]
   1a358:	b	1a3ac <__assert_fail@plt+0x90bc>
   1a35c:	ldr	r2, [fp, #-8]
   1a360:	ldr	r3, [fp, #-12]
   1a364:	add	r3, r2, r3
   1a368:	lsr	r3, r3, #1
   1a36c:	str	r3, [fp, #-16]
   1a370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a374:	ldr	r2, [r3, #8]
   1a378:	ldr	r3, [fp, #-16]
   1a37c:	lsl	r3, r3, #2
   1a380:	add	r3, r2, r3
   1a384:	ldr	r3, [r3]
   1a388:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a38c:	cmp	r2, r3
   1a390:	ble	1a3a4 <__assert_fail@plt+0x90b4>
   1a394:	ldr	r3, [fp, #-16]
   1a398:	add	r3, r3, #1
   1a39c:	str	r3, [fp, #-8]
   1a3a0:	b	1a3ac <__assert_fail@plt+0x90bc>
   1a3a4:	ldr	r3, [fp, #-16]
   1a3a8:	str	r3, [fp, #-12]
   1a3ac:	ldr	r2, [fp, #-8]
   1a3b0:	ldr	r3, [fp, #-12]
   1a3b4:	cmp	r2, r3
   1a3b8:	bcc	1a35c <__assert_fail@plt+0x906c>
   1a3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3c0:	ldr	r2, [r3, #8]
   1a3c4:	ldr	r3, [fp, #-8]
   1a3c8:	lsl	r3, r3, #2
   1a3cc:	add	r3, r2, r3
   1a3d0:	ldr	r3, [r3]
   1a3d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a3d8:	cmp	r2, r3
   1a3dc:	bne	1a3ec <__assert_fail@plt+0x90fc>
   1a3e0:	ldr	r3, [fp, #-8]
   1a3e4:	add	r3, r3, #1
   1a3e8:	b	1a3f0 <__assert_fail@plt+0x9100>
   1a3ec:	mov	r3, #0
   1a3f0:	mov	r0, r3
   1a3f4:	add	sp, fp, #0
   1a3f8:	pop	{fp}		; (ldr fp, [sp], #4)
   1a3fc:	bx	lr
   1a400:	push	{fp}		; (str fp, [sp, #-4]!)
   1a404:	add	fp, sp, #0
   1a408:	sub	sp, sp, #12
   1a40c:	str	r0, [fp, #-8]
   1a410:	str	r1, [fp, #-12]
   1a414:	ldr	r3, [fp, #-12]
   1a418:	cmp	r3, #0
   1a41c:	blt	1a4a4 <__assert_fail@plt+0x91b4>
   1a420:	ldr	r3, [fp, #-8]
   1a424:	ldr	r3, [r3, #4]
   1a428:	ldr	r2, [fp, #-12]
   1a42c:	cmp	r2, r3
   1a430:	bge	1a4a4 <__assert_fail@plt+0x91b4>
   1a434:	ldr	r3, [fp, #-8]
   1a438:	ldr	r3, [r3, #4]
   1a43c:	sub	r2, r3, #1
   1a440:	ldr	r3, [fp, #-8]
   1a444:	str	r2, [r3, #4]
   1a448:	b	1a48c <__assert_fail@plt+0x919c>
   1a44c:	ldr	r3, [fp, #-8]
   1a450:	ldr	r2, [r3, #8]
   1a454:	ldr	r3, [fp, #-12]
   1a458:	add	r3, r3, #1
   1a45c:	lsl	r3, r3, #2
   1a460:	add	r2, r2, r3
   1a464:	ldr	r3, [fp, #-8]
   1a468:	ldr	r1, [r3, #8]
   1a46c:	ldr	r3, [fp, #-12]
   1a470:	lsl	r3, r3, #2
   1a474:	add	r3, r1, r3
   1a478:	ldr	r2, [r2]
   1a47c:	str	r2, [r3]
   1a480:	ldr	r3, [fp, #-12]
   1a484:	add	r3, r3, #1
   1a488:	str	r3, [fp, #-12]
   1a48c:	ldr	r3, [fp, #-8]
   1a490:	ldr	r3, [r3, #4]
   1a494:	ldr	r2, [fp, #-12]
   1a498:	cmp	r2, r3
   1a49c:	blt	1a44c <__assert_fail@plt+0x915c>
   1a4a0:	b	1a4a8 <__assert_fail@plt+0x91b8>
   1a4a4:	nop	{0}
   1a4a8:	add	sp, fp, #0
   1a4ac:	pop	{fp}		; (ldr fp, [sp], #4)
   1a4b0:	bx	lr
   1a4b4:	str	fp, [sp, #-8]!
   1a4b8:	str	lr, [sp, #4]
   1a4bc:	add	fp, sp, #4
   1a4c0:	sub	sp, sp, #48	; 0x30
   1a4c4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a4c8:	sub	r3, fp, #48	; 0x30
   1a4cc:	stm	r3, {r1, r2}
   1a4d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a4d4:	ldr	r2, [r3, #8]
   1a4d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a4dc:	ldr	r3, [r3, #4]
   1a4e0:	cmp	r2, r3
   1a4e4:	movcs	r3, #1
   1a4e8:	movcc	r3, #0
   1a4ec:	uxtb	r3, r3
   1a4f0:	cmp	r3, #0
   1a4f4:	beq	1a738 <__assert_fail@plt+0x9448>
   1a4f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a4fc:	ldr	r3, [r3, #4]
   1a500:	lsl	r3, r3, #1
   1a504:	str	r3, [fp, #-8]
   1a508:	mov	r3, #12
   1a50c:	str	r3, [fp, #-12]
   1a510:	mvn	r2, #0
   1a514:	ldr	r3, [fp, #-12]
   1a518:	udiv	r3, r2, r3
   1a51c:	cmp	r3, #0
   1a520:	blt	1a534 <__assert_fail@plt+0x9244>
   1a524:	mvn	r2, #0
   1a528:	ldr	r3, [fp, #-12]
   1a52c:	udiv	r3, r2, r3
   1a530:	b	1a538 <__assert_fail@plt+0x9248>
   1a534:	mvn	r3, #-2147483648	; 0x80000000
   1a538:	ldr	r2, [fp, #-8]
   1a53c:	cmp	r3, r2
   1a540:	movcc	r3, #1
   1a544:	movcs	r3, #0
   1a548:	uxtb	r3, r3
   1a54c:	cmp	r3, #0
   1a550:	beq	1a55c <__assert_fail@plt+0x926c>
   1a554:	mvn	r3, #0
   1a558:	b	1a884 <__assert_fail@plt+0x9594>
   1a55c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a560:	ldr	r2, [r3]
   1a564:	ldr	r3, [fp, #-8]
   1a568:	lsl	r3, r3, #3
   1a56c:	mov	r1, r3
   1a570:	mov	r0, r2
   1a574:	bl	313dc <__assert_fail@plt+0x200ec>
   1a578:	str	r0, [fp, #-16]
   1a57c:	ldr	r3, [fp, #-16]
   1a580:	cmp	r3, #0
   1a584:	moveq	r3, #1
   1a588:	movne	r3, #0
   1a58c:	uxtb	r3, r3
   1a590:	cmp	r3, #0
   1a594:	beq	1a5a0 <__assert_fail@plt+0x92b0>
   1a598:	mvn	r3, #0
   1a59c:	b	1a884 <__assert_fail@plt+0x9594>
   1a5a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5a4:	ldr	r2, [fp, #-16]
   1a5a8:	str	r2, [r3]
   1a5ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5b0:	ldr	r2, [r3, #12]
   1a5b4:	ldr	r3, [fp, #-8]
   1a5b8:	lsl	r3, r3, #2
   1a5bc:	mov	r1, r3
   1a5c0:	mov	r0, r2
   1a5c4:	bl	313dc <__assert_fail@plt+0x200ec>
   1a5c8:	str	r0, [fp, #-20]	; 0xffffffec
   1a5cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5d0:	ldr	r2, [r3, #16]
   1a5d4:	ldr	r3, [fp, #-8]
   1a5d8:	lsl	r3, r3, #2
   1a5dc:	mov	r1, r3
   1a5e0:	mov	r0, r2
   1a5e4:	bl	313dc <__assert_fail@plt+0x200ec>
   1a5e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1a5ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a5f0:	ldr	r0, [r3, #20]
   1a5f4:	ldr	r2, [fp, #-8]
   1a5f8:	mov	r3, r2
   1a5fc:	lsl	r3, r3, #1
   1a600:	add	r3, r3, r2
   1a604:	lsl	r3, r3, #2
   1a608:	mov	r1, r3
   1a60c:	bl	313dc <__assert_fail@plt+0x200ec>
   1a610:	str	r0, [fp, #-28]	; 0xffffffe4
   1a614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a618:	ldr	r0, [r3, #24]
   1a61c:	ldr	r2, [fp, #-8]
   1a620:	mov	r3, r2
   1a624:	lsl	r3, r3, #1
   1a628:	add	r3, r3, r2
   1a62c:	lsl	r3, r3, #2
   1a630:	mov	r1, r3
   1a634:	bl	313dc <__assert_fail@plt+0x200ec>
   1a638:	str	r0, [fp, #-32]	; 0xffffffe0
   1a63c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a640:	cmp	r3, #0
   1a644:	moveq	r3, #1
   1a648:	movne	r3, #0
   1a64c:	uxtb	r3, r3
   1a650:	cmp	r3, #0
   1a654:	bne	1a674 <__assert_fail@plt+0x9384>
   1a658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a65c:	cmp	r3, #0
   1a660:	moveq	r3, #1
   1a664:	movne	r3, #0
   1a668:	uxtb	r3, r3
   1a66c:	cmp	r3, #0
   1a670:	beq	1a67c <__assert_fail@plt+0x938c>
   1a674:	mov	r3, #1
   1a678:	b	1a680 <__assert_fail@plt+0x9390>
   1a67c:	mov	r3, #0
   1a680:	cmp	r3, #0
   1a684:	bne	1a6a4 <__assert_fail@plt+0x93b4>
   1a688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a68c:	cmp	r3, #0
   1a690:	moveq	r3, #1
   1a694:	movne	r3, #0
   1a698:	uxtb	r3, r3
   1a69c:	cmp	r3, #0
   1a6a0:	beq	1a6ac <__assert_fail@plt+0x93bc>
   1a6a4:	mov	r3, #1
   1a6a8:	b	1a6b0 <__assert_fail@plt+0x93c0>
   1a6ac:	mov	r3, #0
   1a6b0:	cmp	r3, #0
   1a6b4:	bne	1a6d4 <__assert_fail@plt+0x93e4>
   1a6b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a6bc:	cmp	r3, #0
   1a6c0:	moveq	r3, #1
   1a6c4:	movne	r3, #0
   1a6c8:	uxtb	r3, r3
   1a6cc:	cmp	r3, #0
   1a6d0:	beq	1a6fc <__assert_fail@plt+0x940c>
   1a6d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6d8:	bl	31b28 <__assert_fail@plt+0x20838>
   1a6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6e0:	bl	31b28 <__assert_fail@plt+0x20838>
   1a6e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a6e8:	bl	31b28 <__assert_fail@plt+0x20838>
   1a6ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6f0:	bl	31b28 <__assert_fail@plt+0x20838>
   1a6f4:	mvn	r3, #0
   1a6f8:	b	1a884 <__assert_fail@plt+0x9594>
   1a6fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a700:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a704:	str	r2, [r3, #12]
   1a708:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a70c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a710:	str	r2, [r3, #16]
   1a714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a718:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a71c:	str	r2, [r3, #20]
   1a720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a724:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a728:	str	r2, [r3, #24]
   1a72c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a730:	ldr	r2, [fp, #-8]
   1a734:	str	r2, [r3, #4]
   1a738:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a73c:	ldr	r2, [r3]
   1a740:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a744:	ldr	r3, [r3, #8]
   1a748:	lsl	r3, r3, #3
   1a74c:	add	r3, r2, r3
   1a750:	mov	r1, r3
   1a754:	sub	r3, fp, #48	; 0x30
   1a758:	ldrd	r2, [r3]
   1a75c:	strd	r2, [r1]
   1a760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a764:	ldr	r2, [r3]
   1a768:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a76c:	ldr	r3, [r3, #8]
   1a770:	lsl	r3, r3, #3
   1a774:	add	r2, r2, r3
   1a778:	ldr	r3, [r2, #4]
   1a77c:	bfc	r3, #8, #10
   1a780:	str	r3, [r2, #4]
   1a784:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1a788:	cmp	r3, #5
   1a78c:	bne	1a7a0 <__assert_fail@plt+0x94b0>
   1a790:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a794:	ldr	r3, [r3, #92]	; 0x5c
   1a798:	cmp	r3, #1
   1a79c:	bgt	1a7ac <__assert_fail@plt+0x94bc>
   1a7a0:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1a7a4:	cmp	r3, #6
   1a7a8:	bne	1a7b4 <__assert_fail@plt+0x94c4>
   1a7ac:	mov	r1, #1
   1a7b0:	b	1a7b8 <__assert_fail@plt+0x94c8>
   1a7b4:	mov	r1, #0
   1a7b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7bc:	ldr	r2, [r3]
   1a7c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7c4:	ldr	r3, [r3, #8]
   1a7c8:	lsl	r3, r3, #3
   1a7cc:	add	r2, r2, r3
   1a7d0:	mov	r3, r1
   1a7d4:	and	r3, r3, #1
   1a7d8:	uxtb	r1, r3
   1a7dc:	ldrb	r3, [r2, #6]
   1a7e0:	bfi	r3, r1, #4, #1
   1a7e4:	strb	r3, [r2, #6]
   1a7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7ec:	ldr	r2, [r3, #12]
   1a7f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7f4:	ldr	r3, [r3, #8]
   1a7f8:	lsl	r3, r3, #2
   1a7fc:	add	r3, r2, r3
   1a800:	mvn	r2, #0
   1a804:	str	r2, [r3]
   1a808:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a80c:	ldr	r1, [r3, #20]
   1a810:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a814:	ldr	r2, [r3, #8]
   1a818:	mov	r3, r2
   1a81c:	lsl	r3, r3, #1
   1a820:	add	r3, r3, r2
   1a824:	lsl	r3, r3, #2
   1a828:	add	r3, r1, r3
   1a82c:	mov	r2, #12
   1a830:	mov	r1, #0
   1a834:	mov	r0, r3
   1a838:	bl	11218 <memset@plt>
   1a83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a840:	ldr	r1, [r3, #24]
   1a844:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a848:	ldr	r2, [r3, #8]
   1a84c:	mov	r3, r2
   1a850:	lsl	r3, r3, #1
   1a854:	add	r3, r3, r2
   1a858:	lsl	r3, r3, #2
   1a85c:	add	r3, r1, r3
   1a860:	mov	r2, #12
   1a864:	mov	r1, #0
   1a868:	mov	r0, r3
   1a86c:	bl	11218 <memset@plt>
   1a870:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a874:	ldr	r3, [r3, #8]
   1a878:	add	r1, r3, #1
   1a87c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a880:	str	r1, [r2, #8]
   1a884:	mov	r0, r3
   1a888:	sub	sp, fp, #4
   1a88c:	ldr	fp, [sp]
   1a890:	add	sp, sp, #4
   1a894:	pop	{pc}		; (ldr pc, [sp], #4)
   1a898:	push	{fp}		; (str fp, [sp, #-4]!)
   1a89c:	add	fp, sp, #0
   1a8a0:	sub	sp, sp, #20
   1a8a4:	str	r0, [fp, #-16]
   1a8a8:	str	r1, [fp, #-20]	; 0xffffffec
   1a8ac:	ldr	r3, [fp, #-16]
   1a8b0:	ldr	r3, [r3, #4]
   1a8b4:	mov	r2, r3
   1a8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8bc:	add	r3, r3, r2
   1a8c0:	str	r3, [fp, #-8]
   1a8c4:	mov	r3, #0
   1a8c8:	str	r3, [fp, #-12]
   1a8cc:	b	1a904 <__assert_fail@plt+0x9614>
   1a8d0:	ldr	r3, [fp, #-16]
   1a8d4:	ldr	r2, [r3, #8]
   1a8d8:	ldr	r3, [fp, #-12]
   1a8dc:	lsl	r3, r3, #2
   1a8e0:	add	r3, r2, r3
   1a8e4:	ldr	r3, [r3]
   1a8e8:	mov	r2, r3
   1a8ec:	ldr	r3, [fp, #-8]
   1a8f0:	add	r3, r3, r2
   1a8f4:	str	r3, [fp, #-8]
   1a8f8:	ldr	r3, [fp, #-12]
   1a8fc:	add	r3, r3, #1
   1a900:	str	r3, [fp, #-12]
   1a904:	ldr	r3, [fp, #-16]
   1a908:	ldr	r3, [r3, #4]
   1a90c:	ldr	r2, [fp, #-12]
   1a910:	cmp	r2, r3
   1a914:	blt	1a8d0 <__assert_fail@plt+0x95e0>
   1a918:	ldr	r3, [fp, #-8]
   1a91c:	mov	r0, r3
   1a920:	add	sp, fp, #0
   1a924:	pop	{fp}		; (ldr fp, [sp], #4)
   1a928:	bx	lr
   1a92c:	str	fp, [sp, #-8]!
   1a930:	str	lr, [sp, #4]
   1a934:	add	fp, sp, #4
   1a938:	sub	sp, sp, #40	; 0x28
   1a93c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a940:	str	r1, [fp, #-36]	; 0xffffffdc
   1a944:	str	r2, [fp, #-40]	; 0xffffffd8
   1a948:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a94c:	mov	r2, #0
   1a950:	str	r2, [r3]
   1a954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a958:	ldr	r3, [r3, #4]
   1a95c:	cmp	r3, #0
   1a960:	moveq	r3, #1
   1a964:	movne	r3, #0
   1a968:	uxtb	r3, r3
   1a96c:	cmp	r3, #0
   1a970:	beq	1a988 <__assert_fail@plt+0x9698>
   1a974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a978:	mov	r2, #0
   1a97c:	str	r2, [r3]
   1a980:	mov	r3, #0
   1a984:	b	1aa90 <__assert_fail@plt+0x97a0>
   1a988:	mov	r1, #0
   1a98c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a990:	bl	1a898 <__assert_fail@plt+0x95a8>
   1a994:	str	r0, [fp, #-12]
   1a998:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a99c:	ldr	r1, [r3, #32]
   1a9a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a9a4:	ldr	r2, [r3, #68]	; 0x44
   1a9a8:	ldr	r3, [fp, #-12]
   1a9ac:	and	r2, r2, r3
   1a9b0:	mov	r3, r2
   1a9b4:	lsl	r3, r3, #1
   1a9b8:	add	r3, r3, r2
   1a9bc:	lsl	r3, r3, #2
   1a9c0:	add	r3, r1, r3
   1a9c4:	str	r3, [fp, #-16]
   1a9c8:	mov	r3, #0
   1a9cc:	str	r3, [fp, #-8]
   1a9d0:	b	1aa3c <__assert_fail@plt+0x974c>
   1a9d4:	ldr	r3, [fp, #-16]
   1a9d8:	ldr	r2, [r3, #8]
   1a9dc:	ldr	r3, [fp, #-8]
   1a9e0:	lsl	r3, r3, #2
   1a9e4:	add	r3, r2, r3
   1a9e8:	ldr	r3, [r3]
   1a9ec:	str	r3, [fp, #-20]	; 0xffffffec
   1a9f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a9f4:	ldr	r3, [r3]
   1a9f8:	ldr	r2, [fp, #-12]
   1a9fc:	cmp	r2, r3
   1aa00:	bne	1aa2c <__assert_fail@plt+0x973c>
   1aa04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa08:	add	r3, r3, #4
   1aa0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aa10:	mov	r0, r3
   1aa14:	bl	1a24c <__assert_fail@plt+0x8f5c>
   1aa18:	mov	r3, r0
   1aa1c:	cmp	r3, #0
   1aa20:	beq	1aa30 <__assert_fail@plt+0x9740>
   1aa24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa28:	b	1aa90 <__assert_fail@plt+0x97a0>
   1aa2c:	nop	{0}
   1aa30:	ldr	r3, [fp, #-8]
   1aa34:	add	r3, r3, #1
   1aa38:	str	r3, [fp, #-8]
   1aa3c:	ldr	r3, [fp, #-16]
   1aa40:	ldr	r3, [r3]
   1aa44:	ldr	r2, [fp, #-8]
   1aa48:	cmp	r2, r3
   1aa4c:	blt	1a9d4 <__assert_fail@plt+0x96e4>
   1aa50:	ldr	r2, [fp, #-12]
   1aa54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aa58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aa5c:	bl	1af00 <__assert_fail@plt+0x9c10>
   1aa60:	str	r0, [fp, #-24]	; 0xffffffe8
   1aa64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa68:	cmp	r3, #0
   1aa6c:	moveq	r3, #1
   1aa70:	movne	r3, #0
   1aa74:	uxtb	r3, r3
   1aa78:	cmp	r3, #0
   1aa7c:	beq	1aa8c <__assert_fail@plt+0x979c>
   1aa80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aa84:	mov	r2, #12
   1aa88:	str	r2, [r3]
   1aa8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa90:	mov	r0, r3
   1aa94:	sub	sp, fp, #4
   1aa98:	ldr	fp, [sp]
   1aa9c:	add	sp, sp, #4
   1aaa0:	pop	{pc}		; (ldr pc, [sp], #4)
   1aaa4:	str	fp, [sp, #-8]!
   1aaa8:	str	lr, [sp, #4]
   1aaac:	add	fp, sp, #4
   1aab0:	sub	sp, sp, #40	; 0x28
   1aab4:	str	r0, [fp, #-32]	; 0xffffffe0
   1aab8:	str	r1, [fp, #-36]	; 0xffffffdc
   1aabc:	str	r2, [fp, #-40]	; 0xffffffd8
   1aac0:	str	r3, [fp, #-44]	; 0xffffffd4
   1aac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aac8:	mov	r2, #0
   1aacc:	str	r2, [r3]
   1aad0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aad4:	ldr	r3, [r3, #4]
   1aad8:	cmp	r3, #0
   1aadc:	bne	1aaf4 <__assert_fail@plt+0x9804>
   1aae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aae4:	mov	r2, #0
   1aae8:	str	r2, [r3]
   1aaec:	mov	r3, #0
   1aaf0:	b	1ac1c <__assert_fail@plt+0x992c>
   1aaf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aaf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aafc:	bl	1a898 <__assert_fail@plt+0x95a8>
   1ab00:	str	r0, [fp, #-12]
   1ab04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab08:	ldr	r1, [r3, #32]
   1ab0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab10:	ldr	r2, [r3, #68]	; 0x44
   1ab14:	ldr	r3, [fp, #-12]
   1ab18:	and	r2, r2, r3
   1ab1c:	mov	r3, r2
   1ab20:	lsl	r3, r3, #1
   1ab24:	add	r3, r3, r2
   1ab28:	lsl	r3, r3, #2
   1ab2c:	add	r3, r1, r3
   1ab30:	str	r3, [fp, #-16]
   1ab34:	mov	r3, #0
   1ab38:	str	r3, [fp, #-8]
   1ab3c:	b	1abc4 <__assert_fail@plt+0x98d4>
   1ab40:	ldr	r3, [fp, #-16]
   1ab44:	ldr	r2, [r3, #8]
   1ab48:	ldr	r3, [fp, #-8]
   1ab4c:	lsl	r3, r3, #2
   1ab50:	add	r3, r2, r3
   1ab54:	ldr	r3, [r3]
   1ab58:	str	r3, [fp, #-20]	; 0xffffffec
   1ab5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab60:	ldr	r3, [r3]
   1ab64:	ldr	r2, [fp, #-12]
   1ab68:	cmp	r2, r3
   1ab6c:	bne	1abb8 <__assert_fail@plt+0x98c8>
   1ab70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab74:	ldrb	r3, [r3, #52]	; 0x34
   1ab78:	ubfx	r3, r3, #0, #4
   1ab7c:	uxtb	r3, r3
   1ab80:	mov	r2, r3
   1ab84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab88:	cmp	r3, r2
   1ab8c:	bne	1abb8 <__assert_fail@plt+0x98c8>
   1ab90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab94:	ldr	r3, [r3, #40]	; 0x28
   1ab98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab9c:	mov	r0, r3
   1aba0:	bl	1a24c <__assert_fail@plt+0x8f5c>
   1aba4:	mov	r3, r0
   1aba8:	cmp	r3, #0
   1abac:	beq	1abb8 <__assert_fail@plt+0x98c8>
   1abb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1abb4:	b	1ac1c <__assert_fail@plt+0x992c>
   1abb8:	ldr	r3, [fp, #-8]
   1abbc:	add	r3, r3, #1
   1abc0:	str	r3, [fp, #-8]
   1abc4:	ldr	r3, [fp, #-16]
   1abc8:	ldr	r3, [r3]
   1abcc:	ldr	r2, [fp, #-8]
   1abd0:	cmp	r2, r3
   1abd4:	blt	1ab40 <__assert_fail@plt+0x9850>
   1abd8:	ldr	r3, [fp, #-12]
   1abdc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1abe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1abe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1abe8:	bl	1b144 <__assert_fail@plt+0x9e54>
   1abec:	str	r0, [fp, #-24]	; 0xffffffe8
   1abf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1abf4:	cmp	r3, #0
   1abf8:	moveq	r3, #1
   1abfc:	movne	r3, #0
   1ac00:	uxtb	r3, r3
   1ac04:	cmp	r3, #0
   1ac08:	beq	1ac18 <__assert_fail@plt+0x9928>
   1ac0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac10:	mov	r2, #12
   1ac14:	str	r2, [r3]
   1ac18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac1c:	mov	r0, r3
   1ac20:	sub	sp, fp, #4
   1ac24:	ldr	fp, [sp]
   1ac28:	add	sp, sp, #4
   1ac2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac30:	str	fp, [sp, #-8]!
   1ac34:	str	lr, [sp, #4]
   1ac38:	add	fp, sp, #4
   1ac3c:	sub	sp, sp, #40	; 0x28
   1ac40:	str	r0, [fp, #-32]	; 0xffffffe0
   1ac44:	str	r1, [fp, #-36]	; 0xffffffdc
   1ac48:	str	r2, [fp, #-40]	; 0xffffffd8
   1ac4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ac50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ac54:	str	r2, [r3]
   1ac58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ac5c:	add	r2, r3, #16
   1ac60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ac64:	ldr	r3, [r3, #8]
   1ac68:	mov	r1, r3
   1ac6c:	mov	r0, r2
   1ac70:	bl	18f04 <__assert_fail@plt+0x7c14>
   1ac74:	str	r0, [fp, #-12]
   1ac78:	ldr	r3, [fp, #-12]
   1ac7c:	cmp	r3, #0
   1ac80:	movne	r3, #1
   1ac84:	moveq	r3, #0
   1ac88:	uxtb	r3, r3
   1ac8c:	cmp	r3, #0
   1ac90:	beq	1ac9c <__assert_fail@plt+0x99ac>
   1ac94:	mov	r3, #12
   1ac98:	b	1ae30 <__assert_fail@plt+0x9b40>
   1ac9c:	mov	r3, #0
   1aca0:	str	r3, [fp, #-8]
   1aca4:	b	1ad24 <__assert_fail@plt+0x9a34>
   1aca8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1acac:	ldr	r2, [r3, #12]
   1acb0:	ldr	r3, [fp, #-8]
   1acb4:	lsl	r3, r3, #2
   1acb8:	add	r3, r2, r3
   1acbc:	ldr	r3, [r3]
   1acc0:	str	r3, [fp, #-16]
   1acc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1acc8:	ldr	r2, [r3]
   1accc:	ldr	r3, [fp, #-16]
   1acd0:	lsl	r3, r3, #3
   1acd4:	add	r3, r2, r3
   1acd8:	ldrb	r3, [r3, #4]
   1acdc:	and	r3, r3, #8
   1ace0:	cmp	r3, #0
   1ace4:	bne	1ad18 <__assert_fail@plt+0x9a28>
   1ace8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1acec:	add	r3, r3, #16
   1acf0:	ldr	r1, [fp, #-16]
   1acf4:	mov	r0, r3
   1acf8:	bl	1a16c <__assert_fail@plt+0x8e7c>
   1acfc:	mov	r3, r0
   1ad00:	eor	r3, r3, #1
   1ad04:	uxtb	r3, r3
   1ad08:	cmp	r3, #0
   1ad0c:	beq	1ad18 <__assert_fail@plt+0x9a28>
   1ad10:	mov	r3, #12
   1ad14:	b	1ae30 <__assert_fail@plt+0x9b40>
   1ad18:	ldr	r3, [fp, #-8]
   1ad1c:	add	r3, r3, #1
   1ad20:	str	r3, [fp, #-8]
   1ad24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ad28:	ldr	r3, [r3, #8]
   1ad2c:	ldr	r2, [fp, #-8]
   1ad30:	cmp	r2, r3
   1ad34:	blt	1aca8 <__assert_fail@plt+0x99b8>
   1ad38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ad3c:	ldr	r1, [r3, #32]
   1ad40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ad44:	ldr	r2, [r3, #68]	; 0x44
   1ad48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ad4c:	and	r2, r2, r3
   1ad50:	mov	r3, r2
   1ad54:	lsl	r3, r3, #1
   1ad58:	add	r3, r3, r2
   1ad5c:	lsl	r3, r3, #2
   1ad60:	add	r3, r1, r3
   1ad64:	str	r3, [fp, #-20]	; 0xffffffec
   1ad68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad6c:	ldr	r2, [r3, #4]
   1ad70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad74:	ldr	r3, [r3]
   1ad78:	cmp	r2, r3
   1ad7c:	movle	r3, #1
   1ad80:	movgt	r3, #0
   1ad84:	uxtb	r3, r3
   1ad88:	cmp	r3, #0
   1ad8c:	beq	1ae00 <__assert_fail@plt+0x9b10>
   1ad90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad94:	ldr	r3, [r3]
   1ad98:	add	r3, r3, #1
   1ad9c:	lsl	r3, r3, #1
   1ada0:	str	r3, [fp, #-24]	; 0xffffffe8
   1ada4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ada8:	ldr	r2, [r3, #8]
   1adac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adb0:	lsl	r3, r3, #2
   1adb4:	mov	r1, r3
   1adb8:	mov	r0, r2
   1adbc:	bl	313dc <__assert_fail@plt+0x200ec>
   1adc0:	str	r0, [fp, #-28]	; 0xffffffe4
   1adc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1adc8:	cmp	r3, #0
   1adcc:	moveq	r3, #1
   1add0:	movne	r3, #0
   1add4:	uxtb	r3, r3
   1add8:	cmp	r3, #0
   1addc:	beq	1ade8 <__assert_fail@plt+0x9af8>
   1ade0:	mov	r3, #12
   1ade4:	b	1ae30 <__assert_fail@plt+0x9b40>
   1ade8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1adec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1adf0:	str	r2, [r3, #8]
   1adf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1adf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1adfc:	str	r2, [r3, #4]
   1ae00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae04:	ldr	r2, [r3, #8]
   1ae08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae0c:	ldr	r3, [r3]
   1ae10:	add	r0, r3, #1
   1ae14:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae18:	str	r0, [r1]
   1ae1c:	lsl	r3, r3, #2
   1ae20:	add	r3, r2, r3
   1ae24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ae28:	str	r2, [r3]
   1ae2c:	mov	r3, #0
   1ae30:	mov	r0, r3
   1ae34:	sub	sp, fp, #4
   1ae38:	ldr	fp, [sp]
   1ae3c:	add	sp, sp, #4
   1ae40:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae44:	str	fp, [sp, #-8]!
   1ae48:	str	lr, [sp, #4]
   1ae4c:	add	fp, sp, #4
   1ae50:	sub	sp, sp, #8
   1ae54:	str	r0, [fp, #-8]
   1ae58:	ldr	r3, [fp, #-8]
   1ae5c:	ldr	r3, [r3, #24]
   1ae60:	mov	r0, r3
   1ae64:	bl	31b28 <__assert_fail@plt+0x20838>
   1ae68:	ldr	r3, [fp, #-8]
   1ae6c:	ldr	r3, [r3, #36]	; 0x24
   1ae70:	mov	r0, r3
   1ae74:	bl	31b28 <__assert_fail@plt+0x20838>
   1ae78:	ldr	r3, [fp, #-8]
   1ae7c:	ldr	r2, [r3, #40]	; 0x28
   1ae80:	ldr	r3, [fp, #-8]
   1ae84:	add	r3, r3, #4
   1ae88:	cmp	r2, r3
   1ae8c:	beq	1aeb4 <__assert_fail@plt+0x9bc4>
   1ae90:	ldr	r3, [fp, #-8]
   1ae94:	ldr	r3, [r3, #40]	; 0x28
   1ae98:	ldr	r3, [r3, #8]
   1ae9c:	mov	r0, r3
   1aea0:	bl	31b28 <__assert_fail@plt+0x20838>
   1aea4:	ldr	r3, [fp, #-8]
   1aea8:	ldr	r3, [r3, #40]	; 0x28
   1aeac:	mov	r0, r3
   1aeb0:	bl	31b28 <__assert_fail@plt+0x20838>
   1aeb4:	ldr	r3, [fp, #-8]
   1aeb8:	ldr	r3, [r3, #12]
   1aebc:	mov	r0, r3
   1aec0:	bl	31b28 <__assert_fail@plt+0x20838>
   1aec4:	ldr	r3, [fp, #-8]
   1aec8:	ldr	r3, [r3, #48]	; 0x30
   1aecc:	mov	r0, r3
   1aed0:	bl	31b28 <__assert_fail@plt+0x20838>
   1aed4:	ldr	r3, [fp, #-8]
   1aed8:	ldr	r3, [r3, #44]	; 0x2c
   1aedc:	mov	r0, r3
   1aee0:	bl	31b28 <__assert_fail@plt+0x20838>
   1aee4:	ldr	r0, [fp, #-8]
   1aee8:	bl	31b28 <__assert_fail@plt+0x20838>
   1aeec:	nop	{0}
   1aef0:	sub	sp, fp, #4
   1aef4:	ldr	fp, [sp]
   1aef8:	add	sp, sp, #4
   1aefc:	pop	{pc}		; (ldr pc, [sp], #4)
   1af00:	str	fp, [sp, #-8]!
   1af04:	str	lr, [sp, #4]
   1af08:	add	fp, sp, #4
   1af0c:	sub	sp, sp, #40	; 0x28
   1af10:	str	r0, [fp, #-32]	; 0xffffffe0
   1af14:	str	r1, [fp, #-36]	; 0xffffffdc
   1af18:	str	r2, [fp, #-40]	; 0xffffffd8
   1af1c:	mov	r1, #1
   1af20:	mov	r0, #56	; 0x38
   1af24:	bl	3127c <__assert_fail@plt+0x1ff8c>
   1af28:	mov	r3, r0
   1af2c:	str	r3, [fp, #-12]
   1af30:	ldr	r3, [fp, #-12]
   1af34:	cmp	r3, #0
   1af38:	moveq	r3, #1
   1af3c:	movne	r3, #0
   1af40:	uxtb	r3, r3
   1af44:	cmp	r3, #0
   1af48:	beq	1af54 <__assert_fail@plt+0x9c64>
   1af4c:	mov	r3, #0
   1af50:	b	1b130 <__assert_fail@plt+0x9e40>
   1af54:	ldr	r3, [fp, #-12]
   1af58:	add	r3, r3, #4
   1af5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1af60:	mov	r0, r3
   1af64:	bl	19160 <__assert_fail@plt+0x7e70>
   1af68:	str	r0, [fp, #-16]
   1af6c:	ldr	r3, [fp, #-16]
   1af70:	cmp	r3, #0
   1af74:	movne	r3, #1
   1af78:	moveq	r3, #0
   1af7c:	uxtb	r3, r3
   1af80:	cmp	r3, #0
   1af84:	beq	1af98 <__assert_fail@plt+0x9ca8>
   1af88:	ldr	r0, [fp, #-12]
   1af8c:	bl	31b28 <__assert_fail@plt+0x20838>
   1af90:	mov	r3, #0
   1af94:	b	1b130 <__assert_fail@plt+0x9e40>
   1af98:	ldr	r3, [fp, #-12]
   1af9c:	add	r2, r3, #4
   1afa0:	ldr	r3, [fp, #-12]
   1afa4:	str	r2, [r3, #40]	; 0x28
   1afa8:	mov	r3, #0
   1afac:	str	r3, [fp, #-8]
   1afb0:	b	1b0d8 <__assert_fail@plt+0x9de8>
   1afb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1afb8:	ldr	r2, [r3]
   1afbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1afc0:	ldr	r1, [r3, #8]
   1afc4:	ldr	r3, [fp, #-8]
   1afc8:	lsl	r3, r3, #2
   1afcc:	add	r3, r1, r3
   1afd0:	ldr	r3, [r3]
   1afd4:	lsl	r3, r3, #3
   1afd8:	add	r3, r2, r3
   1afdc:	str	r3, [fp, #-20]	; 0xffffffec
   1afe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afe4:	ldrb	r3, [r3, #4]
   1afe8:	str	r3, [fp, #-24]	; 0xffffffe8
   1afec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aff0:	cmp	r3, #1
   1aff4:	bne	1b014 <__assert_fail@plt+0x9d24>
   1aff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1affc:	ldr	r2, [r3, #4]
   1b000:	mov	r3, #65280	; 0xff00
   1b004:	movt	r3, #3
   1b008:	and	r3, r3, r2
   1b00c:	cmp	r3, #0
   1b010:	beq	1b0c8 <__assert_fail@plt+0x9dd8>
   1b014:	ldr	r3, [fp, #-12]
   1b018:	ldrb	r3, [r3, #52]	; 0x34
   1b01c:	ubfx	r3, r3, #5, #1
   1b020:	uxtb	r2, r3
   1b024:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b028:	ldrb	r3, [r3, #6]
   1b02c:	ubfx	r3, r3, #4, #1
   1b030:	uxtb	r3, r3
   1b034:	orr	r3, r2, r3
   1b038:	uxtb	r1, r3
   1b03c:	ldr	r2, [fp, #-12]
   1b040:	ldrb	r3, [r2, #52]	; 0x34
   1b044:	bfi	r3, r1, #5, #1
   1b048:	strb	r3, [r2, #52]	; 0x34
   1b04c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b050:	cmp	r3, #2
   1b054:	bne	1b06c <__assert_fail@plt+0x9d7c>
   1b058:	ldr	r2, [fp, #-12]
   1b05c:	ldrb	r3, [r2, #52]	; 0x34
   1b060:	orr	r3, r3, #16
   1b064:	strb	r3, [r2, #52]	; 0x34
   1b068:	b	1b0cc <__assert_fail@plt+0x9ddc>
   1b06c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b070:	cmp	r3, #4
   1b074:	bne	1b08c <__assert_fail@plt+0x9d9c>
   1b078:	ldr	r2, [fp, #-12]
   1b07c:	ldrb	r3, [r2, #52]	; 0x34
   1b080:	orr	r3, r3, #64	; 0x40
   1b084:	strb	r3, [r2, #52]	; 0x34
   1b088:	b	1b0cc <__assert_fail@plt+0x9ddc>
   1b08c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b090:	cmp	r3, #12
   1b094:	beq	1b0b4 <__assert_fail@plt+0x9dc4>
   1b098:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b09c:	ldr	r2, [r3, #4]
   1b0a0:	mov	r3, #65280	; 0xff00
   1b0a4:	movt	r3, #3
   1b0a8:	and	r3, r3, r2
   1b0ac:	cmp	r3, #0
   1b0b0:	beq	1b0cc <__assert_fail@plt+0x9ddc>
   1b0b4:	ldr	r2, [fp, #-12]
   1b0b8:	ldrb	r3, [r2, #52]	; 0x34
   1b0bc:	orr	r3, r3, #128	; 0x80
   1b0c0:	strb	r3, [r2, #52]	; 0x34
   1b0c4:	b	1b0cc <__assert_fail@plt+0x9ddc>
   1b0c8:	nop	{0}
   1b0cc:	ldr	r3, [fp, #-8]
   1b0d0:	add	r3, r3, #1
   1b0d4:	str	r3, [fp, #-8]
   1b0d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b0dc:	ldr	r3, [r3, #4]
   1b0e0:	ldr	r2, [fp, #-8]
   1b0e4:	cmp	r2, r3
   1b0e8:	blt	1afb4 <__assert_fail@plt+0x9cc4>
   1b0ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b0f0:	ldr	r1, [fp, #-12]
   1b0f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b0f8:	bl	1ac30 <__assert_fail@plt+0x9940>
   1b0fc:	str	r0, [fp, #-16]
   1b100:	ldr	r3, [fp, #-16]
   1b104:	cmp	r3, #0
   1b108:	movne	r3, #1
   1b10c:	moveq	r3, #0
   1b110:	uxtb	r3, r3
   1b114:	cmp	r3, #0
   1b118:	beq	1b12c <__assert_fail@plt+0x9e3c>
   1b11c:	ldr	r0, [fp, #-12]
   1b120:	bl	1ae44 <__assert_fail@plt+0x9b54>
   1b124:	mov	r3, #0
   1b128:	str	r3, [fp, #-12]
   1b12c:	ldr	r3, [fp, #-12]
   1b130:	mov	r0, r3
   1b134:	sub	sp, fp, #4
   1b138:	ldr	fp, [sp]
   1b13c:	add	sp, sp, #4
   1b140:	pop	{pc}		; (ldr pc, [sp], #4)
   1b144:	str	fp, [sp, #-8]!
   1b148:	str	lr, [sp, #4]
   1b14c:	add	fp, sp, #4
   1b150:	sub	sp, sp, #48	; 0x30
   1b154:	str	r0, [fp, #-40]	; 0xffffffd8
   1b158:	str	r1, [fp, #-44]	; 0xffffffd4
   1b15c:	str	r2, [fp, #-48]	; 0xffffffd0
   1b160:	str	r3, [fp, #-52]	; 0xffffffcc
   1b164:	mov	r3, #0
   1b168:	str	r3, [fp, #-12]
   1b16c:	mov	r1, #1
   1b170:	mov	r0, #56	; 0x38
   1b174:	bl	3127c <__assert_fail@plt+0x1ff8c>
   1b178:	mov	r3, r0
   1b17c:	str	r3, [fp, #-16]
   1b180:	ldr	r3, [fp, #-16]
   1b184:	cmp	r3, #0
   1b188:	moveq	r3, #1
   1b18c:	movne	r3, #0
   1b190:	uxtb	r3, r3
   1b194:	cmp	r3, #0
   1b198:	beq	1b1a4 <__assert_fail@plt+0x9eb4>
   1b19c:	mov	r3, #0
   1b1a0:	b	1b4c0 <__assert_fail@plt+0xa1d0>
   1b1a4:	ldr	r3, [fp, #-16]
   1b1a8:	add	r3, r3, #4
   1b1ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b1b0:	mov	r0, r3
   1b1b4:	bl	19160 <__assert_fail@plt+0x7e70>
   1b1b8:	str	r0, [fp, #-20]	; 0xffffffec
   1b1bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1c0:	cmp	r3, #0
   1b1c4:	movne	r3, #1
   1b1c8:	moveq	r3, #0
   1b1cc:	uxtb	r3, r3
   1b1d0:	cmp	r3, #0
   1b1d4:	beq	1b1e8 <__assert_fail@plt+0x9ef8>
   1b1d8:	ldr	r0, [fp, #-16]
   1b1dc:	bl	31b28 <__assert_fail@plt+0x20838>
   1b1e0:	mov	r3, #0
   1b1e4:	b	1b4c0 <__assert_fail@plt+0xa1d0>
   1b1e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b1ec:	and	r3, r3, #15
   1b1f0:	uxtb	r1, r3
   1b1f4:	ldr	r2, [fp, #-16]
   1b1f8:	ldrb	r3, [r2, #52]	; 0x34
   1b1fc:	bfi	r3, r1, #0, #4
   1b200:	strb	r3, [r2, #52]	; 0x34
   1b204:	ldr	r3, [fp, #-16]
   1b208:	add	r2, r3, #4
   1b20c:	ldr	r3, [fp, #-16]
   1b210:	str	r2, [r3, #40]	; 0x28
   1b214:	mov	r3, #0
   1b218:	str	r3, [fp, #-8]
   1b21c:	b	1b468 <__assert_fail@plt+0xa178>
   1b220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b224:	ldr	r2, [r3]
   1b228:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b22c:	ldr	r1, [r3, #8]
   1b230:	ldr	r3, [fp, #-8]
   1b234:	lsl	r3, r3, #2
   1b238:	add	r3, r1, r3
   1b23c:	ldr	r3, [r3]
   1b240:	lsl	r3, r3, #3
   1b244:	add	r3, r2, r3
   1b248:	str	r3, [fp, #-24]	; 0xffffffe8
   1b24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b250:	ldrb	r3, [r3, #4]
   1b254:	str	r3, [fp, #-28]	; 0xffffffe4
   1b258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b25c:	ldr	r3, [r3, #4]
   1b260:	ubfx	r3, r3, #8, #10
   1b264:	uxth	r3, r3
   1b268:	str	r3, [fp, #-32]	; 0xffffffe0
   1b26c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b270:	cmp	r3, #1
   1b274:	bne	1b284 <__assert_fail@plt+0x9f94>
   1b278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b27c:	cmp	r3, #0
   1b280:	beq	1b458 <__assert_fail@plt+0xa168>
   1b284:	ldr	r3, [fp, #-16]
   1b288:	ldrb	r3, [r3, #52]	; 0x34
   1b28c:	ubfx	r3, r3, #5, #1
   1b290:	uxtb	r2, r3
   1b294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b298:	ldrb	r3, [r3, #6]
   1b29c:	ubfx	r3, r3, #4, #1
   1b2a0:	uxtb	r3, r3
   1b2a4:	orr	r3, r2, r3
   1b2a8:	uxtb	r1, r3
   1b2ac:	ldr	r2, [fp, #-16]
   1b2b0:	ldrb	r3, [r2, #52]	; 0x34
   1b2b4:	bfi	r3, r1, #5, #1
   1b2b8:	strb	r3, [r2, #52]	; 0x34
   1b2bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b2c0:	cmp	r3, #2
   1b2c4:	bne	1b2dc <__assert_fail@plt+0x9fec>
   1b2c8:	ldr	r2, [fp, #-16]
   1b2cc:	ldrb	r3, [r2, #52]	; 0x34
   1b2d0:	orr	r3, r3, #16
   1b2d4:	strb	r3, [r2, #52]	; 0x34
   1b2d8:	b	1b2f8 <__assert_fail@plt+0xa008>
   1b2dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b2e0:	cmp	r3, #4
   1b2e4:	bne	1b2f8 <__assert_fail@plt+0xa008>
   1b2e8:	ldr	r2, [fp, #-16]
   1b2ec:	ldrb	r3, [r2, #52]	; 0x34
   1b2f0:	orr	r3, r3, #64	; 0x40
   1b2f4:	strb	r3, [r2, #52]	; 0x34
   1b2f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b2fc:	cmp	r3, #0
   1b300:	beq	1b45c <__assert_fail@plt+0xa16c>
   1b304:	ldr	r3, [fp, #-16]
   1b308:	ldr	r2, [r3, #40]	; 0x28
   1b30c:	ldr	r3, [fp, #-16]
   1b310:	add	r3, r3, #4
   1b314:	cmp	r2, r3
   1b318:	bne	1b3ac <__assert_fail@plt+0xa0bc>
   1b31c:	mov	r0, #12
   1b320:	bl	3134c <__assert_fail@plt+0x2005c>
   1b324:	mov	r3, r0
   1b328:	str	r3, [fp, #-36]	; 0xffffffdc
   1b32c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b330:	cmp	r3, #0
   1b334:	moveq	r3, #1
   1b338:	movne	r3, #0
   1b33c:	uxtb	r3, r3
   1b340:	cmp	r3, #0
   1b344:	beq	1b358 <__assert_fail@plt+0xa068>
   1b348:	ldr	r0, [fp, #-16]
   1b34c:	bl	1ae44 <__assert_fail@plt+0x9b54>
   1b350:	mov	r3, #0
   1b354:	b	1b4c0 <__assert_fail@plt+0xa1d0>
   1b358:	ldr	r3, [fp, #-16]
   1b35c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b360:	str	r2, [r3, #40]	; 0x28
   1b364:	ldr	r3, [fp, #-16]
   1b368:	ldr	r3, [r3, #40]	; 0x28
   1b36c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b370:	mov	r0, r3
   1b374:	bl	19160 <__assert_fail@plt+0x7e70>
   1b378:	mov	r3, r0
   1b37c:	cmp	r3, #0
   1b380:	beq	1b394 <__assert_fail@plt+0xa0a4>
   1b384:	ldr	r0, [fp, #-16]
   1b388:	bl	1ae44 <__assert_fail@plt+0x9b54>
   1b38c:	mov	r3, #0
   1b390:	b	1b4c0 <__assert_fail@plt+0xa1d0>
   1b394:	mov	r3, #0
   1b398:	str	r3, [fp, #-12]
   1b39c:	ldr	r2, [fp, #-16]
   1b3a0:	ldrb	r3, [r2, #52]	; 0x34
   1b3a4:	orr	r3, r3, #128	; 0x80
   1b3a8:	strb	r3, [r2, #52]	; 0x34
   1b3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3b0:	and	r3, r3, #1
   1b3b4:	cmp	r3, #0
   1b3b8:	beq	1b3cc <__assert_fail@plt+0xa0dc>
   1b3bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b3c0:	and	r3, r3, #1
   1b3c4:	cmp	r3, #0
   1b3c8:	beq	1b42c <__assert_fail@plt+0xa13c>
   1b3cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3d0:	and	r3, r3, #2
   1b3d4:	cmp	r3, #0
   1b3d8:	beq	1b3ec <__assert_fail@plt+0xa0fc>
   1b3dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b3e0:	and	r3, r3, #1
   1b3e4:	cmp	r3, #0
   1b3e8:	bne	1b42c <__assert_fail@plt+0xa13c>
   1b3ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3f0:	and	r3, r3, #16
   1b3f4:	cmp	r3, #0
   1b3f8:	beq	1b40c <__assert_fail@plt+0xa11c>
   1b3fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b400:	and	r3, r3, #2
   1b404:	cmp	r3, #0
   1b408:	beq	1b42c <__assert_fail@plt+0xa13c>
   1b40c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b410:	and	r3, r3, #64	; 0x40
   1b414:	cmp	r3, #0
   1b418:	beq	1b45c <__assert_fail@plt+0xa16c>
   1b41c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b420:	and	r3, r3, #4
   1b424:	cmp	r3, #0
   1b428:	bne	1b45c <__assert_fail@plt+0xa16c>
   1b42c:	ldr	r3, [fp, #-16]
   1b430:	add	r0, r3, #4
   1b434:	ldr	r2, [fp, #-8]
   1b438:	ldr	r3, [fp, #-12]
   1b43c:	sub	r3, r2, r3
   1b440:	mov	r1, r3
   1b444:	bl	1a400 <__assert_fail@plt+0x9110>
   1b448:	ldr	r3, [fp, #-12]
   1b44c:	add	r3, r3, #1
   1b450:	str	r3, [fp, #-12]
   1b454:	b	1b45c <__assert_fail@plt+0xa16c>
   1b458:	nop	{0}
   1b45c:	ldr	r3, [fp, #-8]
   1b460:	add	r3, r3, #1
   1b464:	str	r3, [fp, #-8]
   1b468:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b46c:	ldr	r3, [r3, #4]
   1b470:	ldr	r2, [fp, #-8]
   1b474:	cmp	r2, r3
   1b478:	blt	1b220 <__assert_fail@plt+0x9f30>
   1b47c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b480:	ldr	r1, [fp, #-16]
   1b484:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b488:	bl	1ac30 <__assert_fail@plt+0x9940>
   1b48c:	str	r0, [fp, #-20]	; 0xffffffec
   1b490:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b494:	cmp	r3, #0
   1b498:	movne	r3, #1
   1b49c:	moveq	r3, #0
   1b4a0:	uxtb	r3, r3
   1b4a4:	cmp	r3, #0
   1b4a8:	beq	1b4bc <__assert_fail@plt+0xa1cc>
   1b4ac:	ldr	r0, [fp, #-16]
   1b4b0:	bl	1ae44 <__assert_fail@plt+0x9b54>
   1b4b4:	mov	r3, #0
   1b4b8:	str	r3, [fp, #-16]
   1b4bc:	ldr	r3, [fp, #-16]
   1b4c0:	mov	r0, r3
   1b4c4:	sub	sp, fp, #4
   1b4c8:	ldr	fp, [sp]
   1b4cc:	add	sp, sp, #4
   1b4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4d4:	str	fp, [sp, #-8]!
   1b4d8:	str	lr, [sp, #4]
   1b4dc:	add	fp, sp, #4
   1b4e0:	sub	sp, sp, #24
   1b4e4:	str	r0, [fp, #-16]
   1b4e8:	str	r1, [fp, #-20]	; 0xffffffec
   1b4ec:	str	r2, [fp, #-24]	; 0xffffffe8
   1b4f0:	movw	r3, #18116	; 0x46c4
   1b4f4:	movt	r3, #4
   1b4f8:	ldr	r3, [r3]
   1b4fc:	and	r3, r3, #33554432	; 0x2000000
   1b500:	cmp	r3, #0
   1b504:	movne	r3, #1
   1b508:	moveq	r3, #0
   1b50c:	uxtb	r1, r3
   1b510:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b514:	ldrb	r3, [r2, #28]
   1b518:	bfi	r3, r1, #4, #1
   1b51c:	strb	r3, [r2, #28]
   1b520:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b524:	ldrb	r3, [r2, #28]
   1b528:	orr	r3, r3, #128	; 0x80
   1b52c:	strb	r3, [r2, #28]
   1b530:	movw	r3, #18116	; 0x46c4
   1b534:	movt	r3, #4
   1b538:	ldr	r3, [r3]
   1b53c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b540:	ldr	r1, [fp, #-16]
   1b544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b548:	bl	1c4c4 <__assert_fail@plt+0xb1d4>
   1b54c:	str	r0, [fp, #-8]
   1b550:	ldr	r3, [fp, #-8]
   1b554:	cmp	r3, #0
   1b558:	bne	1b564 <__assert_fail@plt+0xa274>
   1b55c:	mov	r3, #0
   1b560:	b	1b58c <__assert_fail@plt+0xa29c>
   1b564:	movw	r3, #13908	; 0x3654
   1b568:	movt	r3, #3
   1b56c:	ldr	r2, [fp, #-8]
   1b570:	ldr	r2, [r3, r2, lsl #2]
   1b574:	movw	r3, #13524	; 0x34d4
   1b578:	movt	r3, #3
   1b57c:	add	r3, r2, r3
   1b580:	mov	r0, r3
   1b584:	bl	111c4 <gettext@plt>
   1b588:	mov	r3, r0
   1b58c:	mov	r0, r3
   1b590:	sub	sp, fp, #4
   1b594:	ldr	fp, [sp]
   1b598:	add	sp, sp, #4
   1b59c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1b5a4:	add	fp, sp, #0
   1b5a8:	sub	sp, sp, #20
   1b5ac:	str	r0, [fp, #-16]
   1b5b0:	movw	r3, #18116	; 0x46c4
   1b5b4:	movt	r3, #4
   1b5b8:	ldr	r3, [r3]
   1b5bc:	str	r3, [fp, #-8]
   1b5c0:	movw	r3, #18116	; 0x46c4
   1b5c4:	movt	r3, #4
   1b5c8:	ldr	r2, [fp, #-16]
   1b5cc:	str	r2, [r3]
   1b5d0:	ldr	r3, [fp, #-8]
   1b5d4:	mov	r0, r3
   1b5d8:	add	sp, fp, #0
   1b5dc:	pop	{fp}		; (ldr fp, [sp], #4)
   1b5e0:	bx	lr
   1b5e4:	str	fp, [sp, #-8]!
   1b5e8:	str	lr, [sp, #4]
   1b5ec:	add	fp, sp, #4
   1b5f0:	sub	sp, sp, #16
   1b5f4:	str	r0, [fp, #-16]
   1b5f8:	ldr	r3, [fp, #-16]
   1b5fc:	ldr	r3, [r3]
   1b600:	str	r3, [fp, #-8]
   1b604:	ldr	r3, [fp, #-16]
   1b608:	ldr	r3, [r3, #16]
   1b60c:	str	r3, [fp, #-12]
   1b610:	mov	r2, #256	; 0x100
   1b614:	mov	r1, #0
   1b618:	ldr	r0, [fp, #-12]
   1b61c:	bl	11218 <memset@plt>
   1b620:	ldr	r3, [fp, #-8]
   1b624:	ldr	r3, [r3, #36]	; 0x24
   1b628:	ldr	r2, [fp, #-12]
   1b62c:	mov	r1, r3
   1b630:	ldr	r0, [fp, #-16]
   1b634:	bl	1b6f0 <__assert_fail@plt+0xa400>
   1b638:	ldr	r3, [fp, #-8]
   1b63c:	ldr	r2, [r3, #36]	; 0x24
   1b640:	ldr	r3, [fp, #-8]
   1b644:	ldr	r3, [r3, #40]	; 0x28
   1b648:	cmp	r2, r3
   1b64c:	beq	1b668 <__assert_fail@plt+0xa378>
   1b650:	ldr	r3, [fp, #-8]
   1b654:	ldr	r3, [r3, #40]	; 0x28
   1b658:	ldr	r2, [fp, #-12]
   1b65c:	mov	r1, r3
   1b660:	ldr	r0, [fp, #-16]
   1b664:	bl	1b6f0 <__assert_fail@plt+0xa400>
   1b668:	ldr	r3, [fp, #-8]
   1b66c:	ldr	r2, [r3, #36]	; 0x24
   1b670:	ldr	r3, [fp, #-8]
   1b674:	ldr	r3, [r3, #44]	; 0x2c
   1b678:	cmp	r2, r3
   1b67c:	beq	1b698 <__assert_fail@plt+0xa3a8>
   1b680:	ldr	r3, [fp, #-8]
   1b684:	ldr	r3, [r3, #44]	; 0x2c
   1b688:	ldr	r2, [fp, #-12]
   1b68c:	mov	r1, r3
   1b690:	ldr	r0, [fp, #-16]
   1b694:	bl	1b6f0 <__assert_fail@plt+0xa400>
   1b698:	ldr	r3, [fp, #-8]
   1b69c:	ldr	r2, [r3, #36]	; 0x24
   1b6a0:	ldr	r3, [fp, #-8]
   1b6a4:	ldr	r3, [r3, #48]	; 0x30
   1b6a8:	cmp	r2, r3
   1b6ac:	beq	1b6c8 <__assert_fail@plt+0xa3d8>
   1b6b0:	ldr	r3, [fp, #-8]
   1b6b4:	ldr	r3, [r3, #48]	; 0x30
   1b6b8:	ldr	r2, [fp, #-12]
   1b6bc:	mov	r1, r3
   1b6c0:	ldr	r0, [fp, #-16]
   1b6c4:	bl	1b6f0 <__assert_fail@plt+0xa400>
   1b6c8:	ldr	r2, [fp, #-16]
   1b6cc:	ldrb	r3, [r2, #28]
   1b6d0:	orr	r3, r3, #8
   1b6d4:	strb	r3, [r2, #28]
   1b6d8:	mov	r3, #0
   1b6dc:	mov	r0, r3
   1b6e0:	sub	sp, fp, #4
   1b6e4:	ldr	fp, [sp]
   1b6e8:	add	sp, sp, #4
   1b6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6f0:	str	fp, [sp, #-8]!
   1b6f4:	str	lr, [sp, #4]
   1b6f8:	add	fp, sp, #4
   1b6fc:	sub	sp, sp, #440	; 0x1b8
   1b700:	str	r0, [fp, #-432]	; 0xfffffe50
   1b704:	str	r1, [fp, #-436]	; 0xfffffe4c
   1b708:	str	r2, [fp, #-440]	; 0xfffffe48
   1b70c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1b710:	ldr	r3, [r3]
   1b714:	str	r3, [fp, #-36]	; 0xffffffdc
   1b718:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b71c:	ldr	r3, [r3, #92]	; 0x5c
   1b720:	cmp	r3, #1
   1b724:	bne	1b744 <__assert_fail@plt+0xa454>
   1b728:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1b72c:	ldr	r3, [r3, #12]
   1b730:	and	r3, r3, #4194304	; 0x400000
   1b734:	cmp	r3, #0
   1b738:	beq	1b744 <__assert_fail@plt+0xa454>
   1b73c:	mov	r3, #1
   1b740:	b	1b748 <__assert_fail@plt+0xa458>
   1b744:	mov	r3, #0
   1b748:	strb	r3, [fp, #-37]	; 0xffffffdb
   1b74c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b750:	and	r3, r3, #1
   1b754:	strb	r3, [fp, #-37]	; 0xffffffdb
   1b758:	mov	r3, #0
   1b75c:	str	r3, [fp, #-8]
   1b760:	b	1be04 <__assert_fail@plt+0xab14>
   1b764:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1b768:	ldr	r2, [r3, #12]
   1b76c:	ldr	r3, [fp, #-8]
   1b770:	lsl	r3, r3, #2
   1b774:	add	r3, r2, r3
   1b778:	ldr	r3, [r3]
   1b77c:	str	r3, [fp, #-12]
   1b780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b784:	ldr	r2, [r3]
   1b788:	ldr	r3, [fp, #-12]
   1b78c:	lsl	r3, r3, #3
   1b790:	add	r3, r2, r3
   1b794:	ldrb	r3, [r3, #4]
   1b798:	str	r3, [fp, #-44]	; 0xffffffd4
   1b79c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b7a0:	cmp	r3, #1
   1b7a4:	bne	1b9d8 <__assert_fail@plt+0xa6e8>
   1b7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b7ac:	ldr	r2, [r3]
   1b7b0:	ldr	r3, [fp, #-12]
   1b7b4:	lsl	r3, r3, #3
   1b7b8:	add	r3, r2, r3
   1b7bc:	ldrb	r3, [r3]
   1b7c0:	mov	r2, r3
   1b7c4:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b7c8:	str	r3, [fp, #-56]	; 0xffffffc8
   1b7cc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b7d0:	strb	r3, [fp, #-57]	; 0xffffffc7
   1b7d4:	str	r2, [fp, #-64]	; 0xffffffc0
   1b7d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b7dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b7e0:	add	r3, r2, r3
   1b7e4:	mov	r2, #1
   1b7e8:	strb	r2, [r3]
   1b7ec:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1b7f0:	cmp	r3, #0
   1b7f4:	beq	1b818 <__assert_fail@plt+0xa528>
   1b7f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b7fc:	bl	11080 <tolower@plt>
   1b800:	mov	r3, r0
   1b804:	mov	r2, r3
   1b808:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b80c:	add	r3, r3, r2
   1b810:	mov	r2, #1
   1b814:	strb	r2, [r3]
   1b818:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1b81c:	ldr	r3, [r3, #12]
   1b820:	and	r3, r3, #4194304	; 0x400000
   1b824:	cmp	r3, #0
   1b828:	beq	1bdf8 <__assert_fail@plt+0xab08>
   1b82c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b830:	ldr	r3, [r3, #92]	; 0x5c
   1b834:	cmp	r3, #1
   1b838:	ble	1bdf8 <__assert_fail@plt+0xab08>
   1b83c:	sub	r3, fp, #140	; 0x8c
   1b840:	str	r3, [fp, #-16]
   1b844:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b848:	ldr	r2, [r3]
   1b84c:	ldr	r3, [fp, #-12]
   1b850:	lsl	r3, r3, #3
   1b854:	add	r2, r2, r3
   1b858:	ldr	r3, [fp, #-16]
   1b85c:	add	r1, r3, #1
   1b860:	str	r1, [fp, #-16]
   1b864:	ldrb	r2, [r2]
   1b868:	strb	r2, [r3]
   1b86c:	b	1b898 <__assert_fail@plt+0xa5a8>
   1b870:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b874:	ldr	r2, [r3]
   1b878:	ldr	r3, [fp, #-12]
   1b87c:	lsl	r3, r3, #3
   1b880:	add	r2, r2, r3
   1b884:	ldr	r3, [fp, #-16]
   1b888:	add	r1, r3, #1
   1b88c:	str	r1, [fp, #-16]
   1b890:	ldrb	r2, [r2]
   1b894:	strb	r2, [r3]
   1b898:	ldr	r3, [fp, #-12]
   1b89c:	add	r3, r3, #1
   1b8a0:	str	r3, [fp, #-12]
   1b8a4:	ldr	r2, [fp, #-12]
   1b8a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b8ac:	ldr	r3, [r3, #8]
   1b8b0:	cmp	r2, r3
   1b8b4:	bcs	1b900 <__assert_fail@plt+0xa610>
   1b8b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b8bc:	ldr	r2, [r3]
   1b8c0:	ldr	r3, [fp, #-12]
   1b8c4:	lsl	r3, r3, #3
   1b8c8:	add	r3, r2, r3
   1b8cc:	ldrb	r3, [r3, #4]
   1b8d0:	cmp	r3, #1
   1b8d4:	bne	1b900 <__assert_fail@plt+0xa610>
   1b8d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b8dc:	ldr	r2, [r3]
   1b8e0:	ldr	r3, [fp, #-12]
   1b8e4:	lsl	r3, r3, #3
   1b8e8:	add	r3, r2, r3
   1b8ec:	ldrb	r3, [r3, #6]
   1b8f0:	and	r3, r3, #32
   1b8f4:	uxtb	r3, r3
   1b8f8:	cmp	r3, #0
   1b8fc:	bne	1b870 <__assert_fail@plt+0xa580>
   1b900:	sub	r3, fp, #152	; 0x98
   1b904:	mov	r2, #8
   1b908:	mov	r1, #0
   1b90c:	mov	r0, r3
   1b910:	bl	11218 <memset@plt>
   1b914:	sub	r3, fp, #140	; 0x8c
   1b918:	ldr	r2, [fp, #-16]
   1b91c:	sub	r3, r2, r3
   1b920:	mov	r2, r3
   1b924:	sub	r3, fp, #152	; 0x98
   1b928:	sub	r1, fp, #140	; 0x8c
   1b92c:	sub	r0, fp, #144	; 0x90
   1b930:	bl	31db0 <__assert_fail@plt+0x20ac0>
   1b934:	mov	r1, r0
   1b938:	sub	r3, fp, #140	; 0x8c
   1b93c:	ldr	r2, [fp, #-16]
   1b940:	sub	r3, r2, r3
   1b944:	cmp	r1, r3
   1b948:	bne	1bdf8 <__assert_fail@plt+0xab08>
   1b94c:	ldr	r3, [fp, #-144]	; 0xffffff70
   1b950:	mov	r0, r3
   1b954:	bl	11098 <towlower@plt>
   1b958:	mov	r1, r0
   1b95c:	sub	r2, fp, #152	; 0x98
   1b960:	sub	r3, fp, #140	; 0x8c
   1b964:	mov	r0, r3
   1b968:	bl	10ff0 <wcrtomb@plt>
   1b96c:	mov	r3, r0
   1b970:	cmn	r3, #1
   1b974:	beq	1bdf8 <__assert_fail@plt+0xab08>
   1b978:	ldrb	r3, [fp, #-140]	; 0xffffff74
   1b97c:	mov	r2, r3
   1b980:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b984:	str	r3, [fp, #-68]	; 0xffffffbc
   1b988:	mov	r3, #0
   1b98c:	strb	r3, [fp, #-69]	; 0xffffffbb
   1b990:	str	r2, [fp, #-76]	; 0xffffffb4
   1b994:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b998:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1b99c:	add	r3, r2, r3
   1b9a0:	mov	r2, #1
   1b9a4:	strb	r2, [r3]
   1b9a8:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   1b9ac:	cmp	r3, #0
   1b9b0:	beq	1bdf8 <__assert_fail@plt+0xab08>
   1b9b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1b9b8:	bl	11080 <tolower@plt>
   1b9bc:	mov	r3, r0
   1b9c0:	mov	r2, r3
   1b9c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b9c8:	add	r3, r3, r2
   1b9cc:	mov	r2, #1
   1b9d0:	strb	r2, [r3]
   1b9d4:	b	1bdf8 <__assert_fail@plt+0xab08>
   1b9d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b9dc:	cmp	r3, #3
   1b9e0:	bne	1bae0 <__assert_fail@plt+0xa7f0>
   1b9e4:	mov	r3, #0
   1b9e8:	str	r3, [fp, #-20]	; 0xffffffec
   1b9ec:	mov	r3, #0
   1b9f0:	str	r3, [fp, #-24]	; 0xffffffe8
   1b9f4:	b	1bad0 <__assert_fail@plt+0xa7e0>
   1b9f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b9fc:	ldr	r2, [r3]
   1ba00:	ldr	r3, [fp, #-12]
   1ba04:	lsl	r3, r3, #3
   1ba08:	add	r3, r2, r3
   1ba0c:	ldr	r2, [r3]
   1ba10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba14:	lsl	r3, r3, #2
   1ba18:	add	r3, r2, r3
   1ba1c:	ldr	r3, [r3]
   1ba20:	str	r3, [fp, #-48]	; 0xffffffd0
   1ba24:	mov	r3, #0
   1ba28:	str	r3, [fp, #-28]	; 0xffffffe4
   1ba2c:	b	1bab8 <__assert_fail@plt+0xa7c8>
   1ba30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ba34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba38:	lsr	r3, r2, r3
   1ba3c:	and	r3, r3, #1
   1ba40:	cmp	r3, #0
   1ba44:	beq	1baa0 <__assert_fail@plt+0xa7b0>
   1ba48:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1ba4c:	str	r3, [fp, #-80]	; 0xffffffb0
   1ba50:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1ba54:	strb	r3, [fp, #-81]	; 0xffffffaf
   1ba58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba5c:	str	r3, [fp, #-88]	; 0xffffffa8
   1ba60:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ba64:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ba68:	add	r3, r2, r3
   1ba6c:	mov	r2, #1
   1ba70:	strb	r2, [r3]
   1ba74:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   1ba78:	cmp	r3, #0
   1ba7c:	beq	1baa0 <__assert_fail@plt+0xa7b0>
   1ba80:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1ba84:	bl	11080 <tolower@plt>
   1ba88:	mov	r3, r0
   1ba8c:	mov	r2, r3
   1ba90:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ba94:	add	r3, r3, r2
   1ba98:	mov	r2, #1
   1ba9c:	strb	r2, [r3]
   1baa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1baa4:	add	r3, r3, #1
   1baa8:	str	r3, [fp, #-28]	; 0xffffffe4
   1baac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bab0:	add	r3, r3, #1
   1bab4:	str	r3, [fp, #-24]	; 0xffffffe8
   1bab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1babc:	cmp	r3, #31
   1bac0:	ble	1ba30 <__assert_fail@plt+0xa740>
   1bac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bac8:	add	r3, r3, #1
   1bacc:	str	r3, [fp, #-20]	; 0xffffffec
   1bad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bad4:	cmp	r3, #7
   1bad8:	ble	1b9f8 <__assert_fail@plt+0xa708>
   1badc:	b	1bdf8 <__assert_fail@plt+0xab08>
   1bae0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bae4:	cmp	r3, #6
   1bae8:	bne	1bda4 <__assert_fail@plt+0xaab4>
   1baec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1baf0:	ldr	r2, [r3]
   1baf4:	ldr	r3, [fp, #-12]
   1baf8:	lsl	r3, r3, #3
   1bafc:	add	r3, r2, r3
   1bb00:	ldr	r3, [r3]
   1bb04:	str	r3, [fp, #-52]	; 0xffffffcc
   1bb08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb0c:	ldr	r3, [r3, #92]	; 0x5c
   1bb10:	cmp	r3, #1
   1bb14:	ble	1bc08 <__assert_fail@plt+0xa918>
   1bb18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bb1c:	ldr	r3, [r3, #36]	; 0x24
   1bb20:	cmp	r3, #0
   1bb24:	bne	1bb50 <__assert_fail@plt+0xa860>
   1bb28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bb2c:	ldrb	r3, [r3, #16]
   1bb30:	and	r3, r3, #1
   1bb34:	uxtb	r3, r3
   1bb38:	cmp	r3, #0
   1bb3c:	bne	1bb50 <__assert_fail@plt+0xa860>
   1bb40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bb44:	ldr	r3, [r3, #32]
   1bb48:	cmp	r3, #0
   1bb4c:	beq	1bc08 <__assert_fail@plt+0xa918>
   1bb50:	mov	r3, #0
   1bb54:	strb	r3, [fp, #-153]	; 0xffffff67
   1bb58:	sub	r3, fp, #164	; 0xa4
   1bb5c:	mov	r2, #8
   1bb60:	mov	r1, #0
   1bb64:	mov	r0, r3
   1bb68:	bl	11218 <memset@plt>
   1bb6c:	sub	r3, fp, #164	; 0xa4
   1bb70:	sub	r1, fp, #153	; 0x99
   1bb74:	mov	r2, #1
   1bb78:	mov	r0, #0
   1bb7c:	bl	31db0 <__assert_fail@plt+0x20ac0>
   1bb80:	mov	r3, r0
   1bb84:	cmn	r3, #2
   1bb88:	bne	1bbe8 <__assert_fail@plt+0xa8f8>
   1bb8c:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1bb90:	mov	r2, r3
   1bb94:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1bb98:	str	r3, [fp, #-92]	; 0xffffffa4
   1bb9c:	mov	r3, #0
   1bba0:	strb	r3, [fp, #-93]	; 0xffffffa3
   1bba4:	str	r2, [fp, #-100]	; 0xffffff9c
   1bba8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bbac:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1bbb0:	add	r3, r2, r3
   1bbb4:	mov	r2, #1
   1bbb8:	strb	r2, [r3]
   1bbbc:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   1bbc0:	cmp	r3, #0
   1bbc4:	beq	1bbe8 <__assert_fail@plt+0xa8f8>
   1bbc8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1bbcc:	bl	11080 <tolower@plt>
   1bbd0:	mov	r3, r0
   1bbd4:	mov	r2, r3
   1bbd8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bbdc:	add	r3, r3, r2
   1bbe0:	mov	r2, #1
   1bbe4:	strb	r2, [r3]
   1bbe8:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1bbec:	add	r3, r3, #1
   1bbf0:	uxtb	r3, r3
   1bbf4:	strb	r3, [fp, #-153]	; 0xffffff67
   1bbf8:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1bbfc:	cmp	r3, #0
   1bc00:	bne	1bb58 <__assert_fail@plt+0xa868>
   1bc04:	b	1bdf8 <__assert_fail@plt+0xab08>
   1bc08:	mov	r3, #0
   1bc0c:	str	r3, [fp, #-32]	; 0xffffffe0
   1bc10:	b	1bd8c <__assert_fail@plt+0xaa9c>
   1bc14:	sub	r3, fp, #172	; 0xac
   1bc18:	mov	r2, #8
   1bc1c:	mov	r1, #0
   1bc20:	mov	r0, r3
   1bc24:	bl	11218 <memset@plt>
   1bc28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bc2c:	ldr	r2, [r3]
   1bc30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc34:	lsl	r3, r3, #2
   1bc38:	add	r3, r2, r3
   1bc3c:	ldr	r1, [r3]
   1bc40:	sub	r2, fp, #172	; 0xac
   1bc44:	sub	r3, fp, #428	; 0x1ac
   1bc48:	mov	r0, r3
   1bc4c:	bl	10ff0 <wcrtomb@plt>
   1bc50:	mov	r3, r0
   1bc54:	cmn	r3, #1
   1bc58:	beq	1bcbc <__assert_fail@plt+0xa9cc>
   1bc5c:	sub	r3, fp, #428	; 0x1ac
   1bc60:	ldrb	r3, [r3]
   1bc64:	mov	r2, r3
   1bc68:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1bc6c:	str	r3, [fp, #-104]	; 0xffffff98
   1bc70:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1bc74:	strb	r3, [fp, #-105]	; 0xffffff97
   1bc78:	str	r2, [fp, #-112]	; 0xffffff90
   1bc7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bc80:	ldr	r2, [fp, #-104]	; 0xffffff98
   1bc84:	add	r3, r2, r3
   1bc88:	mov	r2, #1
   1bc8c:	strb	r2, [r3]
   1bc90:	ldrb	r3, [fp, #-105]	; 0xffffff97
   1bc94:	cmp	r3, #0
   1bc98:	beq	1bcbc <__assert_fail@plt+0xa9cc>
   1bc9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1bca0:	bl	11080 <tolower@plt>
   1bca4:	mov	r3, r0
   1bca8:	mov	r2, r3
   1bcac:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bcb0:	add	r3, r3, r2
   1bcb4:	mov	r2, #1
   1bcb8:	strb	r2, [r3]
   1bcbc:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1bcc0:	ldr	r3, [r3, #12]
   1bcc4:	and	r3, r3, #4194304	; 0x400000
   1bcc8:	cmp	r3, #0
   1bccc:	beq	1bd80 <__assert_fail@plt+0xaa90>
   1bcd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bcd4:	ldr	r3, [r3, #92]	; 0x5c
   1bcd8:	cmp	r3, #1
   1bcdc:	ble	1bd80 <__assert_fail@plt+0xaa90>
   1bce0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bce4:	ldr	r2, [r3]
   1bce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bcec:	lsl	r3, r3, #2
   1bcf0:	add	r3, r2, r3
   1bcf4:	ldr	r3, [r3]
   1bcf8:	mov	r0, r3
   1bcfc:	bl	11098 <towlower@plt>
   1bd00:	mov	r1, r0
   1bd04:	sub	r2, fp, #172	; 0xac
   1bd08:	sub	r3, fp, #428	; 0x1ac
   1bd0c:	mov	r0, r3
   1bd10:	bl	10ff0 <wcrtomb@plt>
   1bd14:	mov	r3, r0
   1bd18:	cmn	r3, #1
   1bd1c:	beq	1bd80 <__assert_fail@plt+0xaa90>
   1bd20:	sub	r3, fp, #428	; 0x1ac
   1bd24:	ldrb	r3, [r3]
   1bd28:	mov	r2, r3
   1bd2c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1bd30:	str	r3, [fp, #-116]	; 0xffffff8c
   1bd34:	mov	r3, #0
   1bd38:	strb	r3, [fp, #-117]	; 0xffffff8b
   1bd3c:	str	r2, [fp, #-124]	; 0xffffff84
   1bd40:	ldr	r3, [fp, #-124]	; 0xffffff84
   1bd44:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1bd48:	add	r3, r2, r3
   1bd4c:	mov	r2, #1
   1bd50:	strb	r2, [r3]
   1bd54:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   1bd58:	cmp	r3, #0
   1bd5c:	beq	1bd80 <__assert_fail@plt+0xaa90>
   1bd60:	ldr	r0, [fp, #-124]	; 0xffffff84
   1bd64:	bl	11080 <tolower@plt>
   1bd68:	mov	r3, r0
   1bd6c:	mov	r2, r3
   1bd70:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1bd74:	add	r3, r3, r2
   1bd78:	mov	r2, #1
   1bd7c:	strb	r2, [r3]
   1bd80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd84:	add	r3, r3, #1
   1bd88:	str	r3, [fp, #-32]	; 0xffffffe0
   1bd8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bd90:	ldr	r3, [r3, #20]
   1bd94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bd98:	cmp	r2, r3
   1bd9c:	blt	1bc14 <__assert_fail@plt+0xa924>
   1bda0:	b	1bdf8 <__assert_fail@plt+0xab08>
   1bda4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bda8:	cmp	r3, #5
   1bdac:	beq	1bdc8 <__assert_fail@plt+0xaad8>
   1bdb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bdb4:	cmp	r3, #7
   1bdb8:	beq	1bdc8 <__assert_fail@plt+0xaad8>
   1bdbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bdc0:	cmp	r3, #2
   1bdc4:	bne	1bdf8 <__assert_fail@plt+0xab08>
   1bdc8:	mov	r2, #256	; 0x100
   1bdcc:	mov	r1, #1
   1bdd0:	ldr	r0, [fp, #-440]	; 0xfffffe48
   1bdd4:	bl	11218 <memset@plt>
   1bdd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bddc:	cmp	r3, #2
   1bde0:	bne	1be1c <__assert_fail@plt+0xab2c>
   1bde4:	ldr	r2, [fp, #-432]	; 0xfffffe50
   1bde8:	ldrb	r3, [r2, #28]
   1bdec:	orr	r3, r3, #1
   1bdf0:	strb	r3, [r2, #28]
   1bdf4:	b	1be1c <__assert_fail@plt+0xab2c>
   1bdf8:	ldr	r3, [fp, #-8]
   1bdfc:	add	r3, r3, #1
   1be00:	str	r3, [fp, #-8]
   1be04:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1be08:	ldr	r3, [r3, #8]
   1be0c:	ldr	r2, [fp, #-8]
   1be10:	cmp	r2, r3
   1be14:	blt	1b764 <__assert_fail@plt+0xa474>
   1be18:	b	1be20 <__assert_fail@plt+0xab30>
   1be1c:	nop	{0}
   1be20:	sub	sp, fp, #4
   1be24:	ldr	fp, [sp]
   1be28:	add	sp, sp, #4
   1be2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1be30:	str	fp, [sp, #-8]!
   1be34:	str	lr, [sp, #4]
   1be38:	add	fp, sp, #4
   1be3c:	sub	sp, sp, #24
   1be40:	str	r0, [fp, #-16]
   1be44:	str	r1, [fp, #-20]	; 0xffffffec
   1be48:	str	r2, [fp, #-24]	; 0xffffffe8
   1be4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be50:	and	r3, r3, #1
   1be54:	cmp	r3, #0
   1be58:	beq	1be68 <__assert_fail@plt+0xab78>
   1be5c:	movw	r3, #45820	; 0xb2fc
   1be60:	movt	r3, #3
   1be64:	b	1be70 <__assert_fail@plt+0xab80>
   1be68:	movw	r3, #710	; 0x2c6
   1be6c:	movt	r3, #257	; 0x101
   1be70:	str	r3, [fp, #-12]
   1be74:	ldr	r3, [fp, #-16]
   1be78:	mov	r2, #0
   1be7c:	str	r2, [r3]
   1be80:	ldr	r3, [fp, #-16]
   1be84:	mov	r2, #0
   1be88:	str	r2, [r3, #4]
   1be8c:	ldr	r3, [fp, #-16]
   1be90:	mov	r2, #0
   1be94:	str	r2, [r3, #8]
   1be98:	mov	r0, #256	; 0x100
   1be9c:	bl	3134c <__assert_fail@plt+0x2005c>
   1bea0:	mov	r3, r0
   1bea4:	mov	r2, r3
   1bea8:	ldr	r3, [fp, #-16]
   1beac:	str	r2, [r3, #16]
   1beb0:	ldr	r3, [fp, #-16]
   1beb4:	ldr	r3, [r3, #16]
   1beb8:	cmp	r3, #0
   1bebc:	moveq	r3, #1
   1bec0:	movne	r3, #0
   1bec4:	uxtb	r3, r3
   1bec8:	cmp	r3, #0
   1becc:	beq	1bed8 <__assert_fail@plt+0xabe8>
   1bed0:	mov	r3, #12
   1bed4:	b	1bfec <__assert_fail@plt+0xacfc>
   1bed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bedc:	lsl	r3, r3, #21
   1bee0:	and	r3, r3, #4194304	; 0x400000
   1bee4:	ldr	r2, [fp, #-12]
   1bee8:	orr	r3, r2, r3
   1beec:	str	r3, [fp, #-12]
   1bef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bef4:	and	r3, r3, #4
   1bef8:	cmp	r3, #0
   1befc:	beq	1bf2c <__assert_fail@plt+0xac3c>
   1bf00:	ldr	r3, [fp, #-12]
   1bf04:	bic	r3, r3, #64	; 0x40
   1bf08:	str	r3, [fp, #-12]
   1bf0c:	ldr	r3, [fp, #-12]
   1bf10:	orr	r3, r3, #256	; 0x100
   1bf14:	str	r3, [fp, #-12]
   1bf18:	ldr	r2, [fp, #-16]
   1bf1c:	ldrb	r3, [r2, #28]
   1bf20:	orr	r3, r3, #128	; 0x80
   1bf24:	strb	r3, [r2, #28]
   1bf28:	b	1bf3c <__assert_fail@plt+0xac4c>
   1bf2c:	ldr	r2, [fp, #-16]
   1bf30:	ldrb	r3, [r2, #28]
   1bf34:	bfc	r3, #7, #1
   1bf38:	strb	r3, [r2, #28]
   1bf3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf40:	and	r3, r3, #8
   1bf44:	cmp	r3, #0
   1bf48:	movne	r3, #1
   1bf4c:	moveq	r3, #0
   1bf50:	uxtb	r1, r3
   1bf54:	ldr	r2, [fp, #-16]
   1bf58:	ldrb	r3, [r2, #28]
   1bf5c:	bfi	r3, r1, #4, #1
   1bf60:	strb	r3, [r2, #28]
   1bf64:	ldr	r3, [fp, #-16]
   1bf68:	mov	r2, #0
   1bf6c:	str	r2, [r3, #20]
   1bf70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf74:	bl	111d0 <strlen@plt>
   1bf78:	mov	r2, r0
   1bf7c:	ldr	r3, [fp, #-12]
   1bf80:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bf84:	ldr	r0, [fp, #-16]
   1bf88:	bl	1c4c4 <__assert_fail@plt+0xb1d4>
   1bf8c:	str	r0, [fp, #-8]
   1bf90:	ldr	r3, [fp, #-8]
   1bf94:	cmp	r3, #16
   1bf98:	bne	1bfa4 <__assert_fail@plt+0xacb4>
   1bf9c:	mov	r3, #8
   1bfa0:	str	r3, [fp, #-8]
   1bfa4:	ldr	r3, [fp, #-8]
   1bfa8:	cmp	r3, #0
   1bfac:	moveq	r3, #1
   1bfb0:	movne	r3, #0
   1bfb4:	uxtb	r3, r3
   1bfb8:	cmp	r3, #0
   1bfbc:	beq	1bfcc <__assert_fail@plt+0xacdc>
   1bfc0:	ldr	r0, [fp, #-16]
   1bfc4:	bl	1b5e4 <__assert_fail@plt+0xa2f4>
   1bfc8:	b	1bfe8 <__assert_fail@plt+0xacf8>
   1bfcc:	ldr	r3, [fp, #-16]
   1bfd0:	ldr	r3, [r3, #16]
   1bfd4:	mov	r0, r3
   1bfd8:	bl	31b28 <__assert_fail@plt+0x20838>
   1bfdc:	ldr	r3, [fp, #-16]
   1bfe0:	mov	r2, #0
   1bfe4:	str	r2, [r3, #16]
   1bfe8:	ldr	r3, [fp, #-8]
   1bfec:	mov	r0, r3
   1bff0:	sub	sp, fp, #4
   1bff4:	ldr	fp, [sp]
   1bff8:	add	sp, sp, #4
   1bffc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c000:	str	fp, [sp, #-8]!
   1c004:	str	lr, [sp, #4]
   1c008:	add	fp, sp, #4
   1c00c:	sub	sp, sp, #32
   1c010:	str	r0, [fp, #-24]	; 0xffffffe8
   1c014:	str	r1, [fp, #-28]	; 0xffffffe4
   1c018:	str	r2, [fp, #-32]	; 0xffffffe0
   1c01c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c020:	mov	r3, #17
   1c024:	str	r3, [fp, #-12]
   1c028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c02c:	lsr	r3, r3, #31
   1c030:	uxtb	r3, r3
   1c034:	cmp	r3, #0
   1c038:	bne	1c05c <__assert_fail@plt+0xad6c>
   1c03c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c040:	ldr	r3, [fp, #-12]
   1c044:	cmp	r2, r3
   1c048:	movge	r3, #1
   1c04c:	movlt	r3, #0
   1c050:	uxtb	r3, r3
   1c054:	cmp	r3, #0
   1c058:	beq	1c060 <__assert_fail@plt+0xad70>
   1c05c:	bl	112cc <abort@plt>
   1c060:	movw	r3, #13908	; 0x3654
   1c064:	movt	r3, #3
   1c068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c06c:	ldr	r2, [r3, r2, lsl #2]
   1c070:	movw	r3, #13524	; 0x34d4
   1c074:	movt	r3, #3
   1c078:	add	r3, r2, r3
   1c07c:	mov	r0, r3
   1c080:	bl	111c4 <gettext@plt>
   1c084:	str	r0, [fp, #-16]
   1c088:	ldr	r0, [fp, #-16]
   1c08c:	bl	111d0 <strlen@plt>
   1c090:	mov	r3, r0
   1c094:	add	r3, r3, #1
   1c098:	str	r3, [fp, #-20]	; 0xffffffec
   1c09c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c0a0:	cmp	r3, #0
   1c0a4:	movne	r3, #1
   1c0a8:	moveq	r3, #0
   1c0ac:	uxtb	r3, r3
   1c0b0:	cmp	r3, #0
   1c0b4:	beq	1c110 <__assert_fail@plt+0xae20>
   1c0b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0bc:	str	r3, [fp, #-8]
   1c0c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c0c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c0c8:	cmp	r2, r3
   1c0cc:	movhi	r3, #1
   1c0d0:	movls	r3, #0
   1c0d4:	uxtb	r3, r3
   1c0d8:	cmp	r3, #0
   1c0dc:	beq	1c100 <__assert_fail@plt+0xae10>
   1c0e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c0e4:	sub	r3, r3, #1
   1c0e8:	str	r3, [fp, #-8]
   1c0ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c0f0:	ldr	r3, [fp, #-8]
   1c0f4:	add	r3, r2, r3
   1c0f8:	mov	r2, #0
   1c0fc:	strb	r2, [r3]
   1c100:	ldr	r2, [fp, #-8]
   1c104:	ldr	r1, [fp, #-16]
   1c108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c10c:	bl	11074 <memcpy@plt>
   1c110:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c114:	mov	r0, r3
   1c118:	sub	sp, fp, #4
   1c11c:	ldr	fp, [sp]
   1c120:	add	sp, sp, #4
   1c124:	pop	{pc}		; (ldr pc, [sp], #4)
   1c128:	str	fp, [sp, #-8]!
   1c12c:	str	lr, [sp, #4]
   1c130:	add	fp, sp, #4
   1c134:	sub	sp, sp, #24
   1c138:	str	r0, [fp, #-24]	; 0xffffffe8
   1c13c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c140:	ldr	r3, [r3]
   1c144:	cmp	r3, #0
   1c148:	beq	1c194 <__assert_fail@plt+0xaea4>
   1c14c:	mov	r3, #0
   1c150:	str	r3, [fp, #-8]
   1c154:	b	1c180 <__assert_fail@plt+0xae90>
   1c158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c15c:	ldr	r2, [r3]
   1c160:	ldr	r3, [fp, #-8]
   1c164:	lsl	r3, r3, #3
   1c168:	add	r3, r2, r3
   1c16c:	mov	r0, r3
   1c170:	bl	2453c <__assert_fail@plt+0x1324c>
   1c174:	ldr	r3, [fp, #-8]
   1c178:	add	r3, r3, #1
   1c17c:	str	r3, [fp, #-8]
   1c180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c184:	ldr	r2, [r3, #8]
   1c188:	ldr	r3, [fp, #-8]
   1c18c:	cmp	r2, r3
   1c190:	bhi	1c158 <__assert_fail@plt+0xae68>
   1c194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c198:	ldr	r3, [r3, #12]
   1c19c:	mov	r0, r3
   1c1a0:	bl	31b28 <__assert_fail@plt+0x20838>
   1c1a4:	mov	r3, #0
   1c1a8:	str	r3, [fp, #-8]
   1c1ac:	b	1c270 <__assert_fail@plt+0xaf80>
   1c1b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1b4:	ldr	r3, [r3, #24]
   1c1b8:	cmp	r3, #0
   1c1bc:	beq	1c1ec <__assert_fail@plt+0xaefc>
   1c1c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1c4:	ldr	r1, [r3, #24]
   1c1c8:	ldr	r2, [fp, #-8]
   1c1cc:	mov	r3, r2
   1c1d0:	lsl	r3, r3, #1
   1c1d4:	add	r3, r3, r2
   1c1d8:	lsl	r3, r3, #2
   1c1dc:	add	r3, r1, r3
   1c1e0:	ldr	r3, [r3, #8]
   1c1e4:	mov	r0, r3
   1c1e8:	bl	31b28 <__assert_fail@plt+0x20838>
   1c1ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1f0:	ldr	r3, [r3, #28]
   1c1f4:	cmp	r3, #0
   1c1f8:	beq	1c228 <__assert_fail@plt+0xaf38>
   1c1fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c200:	ldr	r1, [r3, #28]
   1c204:	ldr	r2, [fp, #-8]
   1c208:	mov	r3, r2
   1c20c:	lsl	r3, r3, #1
   1c210:	add	r3, r3, r2
   1c214:	lsl	r3, r3, #2
   1c218:	add	r3, r1, r3
   1c21c:	ldr	r3, [r3, #8]
   1c220:	mov	r0, r3
   1c224:	bl	31b28 <__assert_fail@plt+0x20838>
   1c228:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c22c:	ldr	r3, [r3, #20]
   1c230:	cmp	r3, #0
   1c234:	beq	1c264 <__assert_fail@plt+0xaf74>
   1c238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c23c:	ldr	r1, [r3, #20]
   1c240:	ldr	r2, [fp, #-8]
   1c244:	mov	r3, r2
   1c248:	lsl	r3, r3, #1
   1c24c:	add	r3, r3, r2
   1c250:	lsl	r3, r3, #2
   1c254:	add	r3, r1, r3
   1c258:	ldr	r3, [r3, #8]
   1c25c:	mov	r0, r3
   1c260:	bl	31b28 <__assert_fail@plt+0x20838>
   1c264:	ldr	r3, [fp, #-8]
   1c268:	add	r3, r3, #1
   1c26c:	str	r3, [fp, #-8]
   1c270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c274:	ldr	r2, [r3, #8]
   1c278:	ldr	r3, [fp, #-8]
   1c27c:	cmp	r2, r3
   1c280:	bhi	1c1b0 <__assert_fail@plt+0xaec0>
   1c284:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c288:	ldr	r3, [r3, #20]
   1c28c:	mov	r0, r3
   1c290:	bl	31b28 <__assert_fail@plt+0x20838>
   1c294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c298:	ldr	r3, [r3, #24]
   1c29c:	mov	r0, r3
   1c2a0:	bl	31b28 <__assert_fail@plt+0x20838>
   1c2a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2a8:	ldr	r3, [r3, #28]
   1c2ac:	mov	r0, r3
   1c2b0:	bl	31b28 <__assert_fail@plt+0x20838>
   1c2b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2b8:	ldr	r3, [r3]
   1c2bc:	mov	r0, r3
   1c2c0:	bl	31b28 <__assert_fail@plt+0x20838>
   1c2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2c8:	ldr	r3, [r3, #32]
   1c2cc:	cmp	r3, #0
   1c2d0:	beq	1c384 <__assert_fail@plt+0xb094>
   1c2d4:	mov	r3, #0
   1c2d8:	str	r3, [fp, #-8]
   1c2dc:	b	1c370 <__assert_fail@plt+0xb080>
   1c2e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2e4:	ldr	r1, [r3, #32]
   1c2e8:	ldr	r2, [fp, #-8]
   1c2ec:	mov	r3, r2
   1c2f0:	lsl	r3, r3, #1
   1c2f4:	add	r3, r3, r2
   1c2f8:	lsl	r3, r3, #2
   1c2fc:	add	r3, r1, r3
   1c300:	str	r3, [fp, #-16]
   1c304:	mov	r3, #0
   1c308:	str	r3, [fp, #-12]
   1c30c:	b	1c340 <__assert_fail@plt+0xb050>
   1c310:	ldr	r3, [fp, #-16]
   1c314:	ldr	r2, [r3, #8]
   1c318:	ldr	r3, [fp, #-12]
   1c31c:	lsl	r3, r3, #2
   1c320:	add	r3, r2, r3
   1c324:	ldr	r3, [r3]
   1c328:	str	r3, [fp, #-20]	; 0xffffffec
   1c32c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c330:	bl	1ae44 <__assert_fail@plt+0x9b54>
   1c334:	ldr	r3, [fp, #-12]
   1c338:	add	r3, r3, #1
   1c33c:	str	r3, [fp, #-12]
   1c340:	ldr	r3, [fp, #-16]
   1c344:	ldr	r3, [r3]
   1c348:	ldr	r2, [fp, #-12]
   1c34c:	cmp	r2, r3
   1c350:	blt	1c310 <__assert_fail@plt+0xb020>
   1c354:	ldr	r3, [fp, #-16]
   1c358:	ldr	r3, [r3, #8]
   1c35c:	mov	r0, r3
   1c360:	bl	31b28 <__assert_fail@plt+0x20838>
   1c364:	ldr	r3, [fp, #-8]
   1c368:	add	r3, r3, #1
   1c36c:	str	r3, [fp, #-8]
   1c370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c374:	ldr	r2, [r3, #68]	; 0x44
   1c378:	ldr	r3, [fp, #-8]
   1c37c:	cmp	r2, r3
   1c380:	bcs	1c2e0 <__assert_fail@plt+0xaff0>
   1c384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c388:	ldr	r3, [r3, #32]
   1c38c:	mov	r0, r3
   1c390:	bl	31b28 <__assert_fail@plt+0x20838>
   1c394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c398:	ldr	r2, [r3, #60]	; 0x3c
   1c39c:	movw	r3, #13976	; 0x3698
   1c3a0:	movt	r3, #3
   1c3a4:	cmp	r2, r3
   1c3a8:	beq	1c3bc <__assert_fail@plt+0xb0cc>
   1c3ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3b0:	ldr	r3, [r3, #60]	; 0x3c
   1c3b4:	mov	r0, r3
   1c3b8:	bl	31b28 <__assert_fail@plt+0x20838>
   1c3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3c0:	ldr	r3, [r3, #132]	; 0x84
   1c3c4:	mov	r0, r3
   1c3c8:	bl	31b28 <__assert_fail@plt+0x20838>
   1c3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3d0:	bl	31b28 <__assert_fail@plt+0x20838>
   1c3d4:	nop	{0}
   1c3d8:	sub	sp, fp, #4
   1c3dc:	ldr	fp, [sp]
   1c3e0:	add	sp, sp, #4
   1c3e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3e8:	str	fp, [sp, #-8]!
   1c3ec:	str	lr, [sp, #4]
   1c3f0:	add	fp, sp, #4
   1c3f4:	sub	sp, sp, #16
   1c3f8:	str	r0, [fp, #-16]
   1c3fc:	ldr	r3, [fp, #-16]
   1c400:	ldr	r3, [r3]
   1c404:	str	r3, [fp, #-8]
   1c408:	ldr	r3, [fp, #-8]
   1c40c:	cmp	r3, #0
   1c410:	movne	r3, #1
   1c414:	moveq	r3, #0
   1c418:	uxtb	r3, r3
   1c41c:	cmp	r3, #0
   1c420:	beq	1c460 <__assert_fail@plt+0xb170>
   1c424:	movw	r3, #0
   1c428:	movt	r3, #0
   1c42c:	cmp	r3, #0
   1c430:	bne	1c444 <__assert_fail@plt+0xb154>
   1c434:	movw	r3, #0
   1c438:	movt	r3, #0
   1c43c:	cmp	r3, #0
   1c440:	beq	1c458 <__assert_fail@plt+0xb168>
   1c444:	ldr	r3, [fp, #-8]
   1c448:	add	r3, r3, #136	; 0x88
   1c44c:	mov	r0, r3
   1c450:	bl	1102c <pthread_mutex_destroy@plt>
   1c454:	nop	{0}
   1c458:	ldr	r0, [fp, #-8]
   1c45c:	bl	1c128 <__assert_fail@plt+0xae38>
   1c460:	ldr	r3, [fp, #-16]
   1c464:	mov	r2, #0
   1c468:	str	r2, [r3]
   1c46c:	ldr	r3, [fp, #-16]
   1c470:	mov	r2, #0
   1c474:	str	r2, [r3, #4]
   1c478:	ldr	r3, [fp, #-16]
   1c47c:	ldr	r3, [r3, #16]
   1c480:	mov	r0, r3
   1c484:	bl	31b28 <__assert_fail@plt+0x20838>
   1c488:	ldr	r3, [fp, #-16]
   1c48c:	mov	r2, #0
   1c490:	str	r2, [r3, #16]
   1c494:	ldr	r3, [fp, #-16]
   1c498:	ldr	r3, [r3, #20]
   1c49c:	mov	r0, r3
   1c4a0:	bl	31b28 <__assert_fail@plt+0x20838>
   1c4a4:	ldr	r3, [fp, #-16]
   1c4a8:	mov	r2, #0
   1c4ac:	str	r2, [r3, #20]
   1c4b0:	nop	{0}
   1c4b4:	sub	sp, fp, #4
   1c4b8:	ldr	fp, [sp]
   1c4bc:	add	sp, sp, #4
   1c4c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4c4:	str	fp, [sp, #-8]!
   1c4c8:	str	lr, [sp, #4]
   1c4cc:	add	fp, sp, #4
   1c4d0:	sub	sp, sp, #120	; 0x78
   1c4d4:	str	r0, [fp, #-104]	; 0xffffff98
   1c4d8:	str	r1, [fp, #-108]	; 0xffffff94
   1c4dc:	str	r2, [fp, #-112]	; 0xffffff90
   1c4e0:	str	r3, [fp, #-116]	; 0xffffff8c
   1c4e4:	mov	r3, #0
   1c4e8:	str	r3, [fp, #-12]
   1c4ec:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c4f0:	ldrb	r3, [r2, #28]
   1c4f4:	bfc	r3, #3, #1
   1c4f8:	strb	r3, [r2, #28]
   1c4fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c500:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1c504:	str	r2, [r3, #12]
   1c508:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c50c:	ldrb	r3, [r2, #28]
   1c510:	bfc	r3, #6, #1
   1c514:	strb	r3, [r2, #28]
   1c518:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c51c:	ldrb	r3, [r3, #28]
   1c520:	ubfx	r3, r3, #6, #1
   1c524:	uxtb	r1, r3
   1c528:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c52c:	ldrb	r3, [r2, #28]
   1c530:	bfi	r3, r1, #5, #1
   1c534:	strb	r3, [r2, #28]
   1c538:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c53c:	mov	r2, #0
   1c540:	str	r2, [r3, #8]
   1c544:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c548:	mov	r2, #0
   1c54c:	str	r2, [r3, #24]
   1c550:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c554:	ldrb	r3, [r2, #28]
   1c558:	bfc	r3, #0, #1
   1c55c:	strb	r3, [r2, #28]
   1c560:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c564:	ldrb	r3, [r2, #28]
   1c568:	bfc	r3, #1, #2
   1c56c:	strb	r3, [r2, #28]
   1c570:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c574:	ldr	r3, [r3]
   1c578:	str	r3, [fp, #-8]
   1c57c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c580:	ldr	r3, [r3, #4]
   1c584:	cmp	r3, #159	; 0x9f
   1c588:	movls	r3, #1
   1c58c:	movhi	r3, #0
   1c590:	uxtb	r3, r3
   1c594:	cmp	r3, #0
   1c598:	beq	1c5e0 <__assert_fail@plt+0xb2f0>
   1c59c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c5a0:	ldr	r3, [r3]
   1c5a4:	mov	r1, #160	; 0xa0
   1c5a8:	mov	r0, r3
   1c5ac:	bl	313dc <__assert_fail@plt+0x200ec>
   1c5b0:	str	r0, [fp, #-8]
   1c5b4:	ldr	r3, [fp, #-8]
   1c5b8:	cmp	r3, #0
   1c5bc:	bne	1c5c8 <__assert_fail@plt+0xb2d8>
   1c5c0:	mov	r3, #12
   1c5c4:	b	1c91c <__assert_fail@plt+0xb62c>
   1c5c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c5cc:	mov	r2, #160	; 0xa0
   1c5d0:	str	r2, [r3, #4]
   1c5d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c5d8:	ldr	r2, [fp, #-8]
   1c5dc:	str	r2, [r3]
   1c5e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c5e4:	mov	r2, #160	; 0xa0
   1c5e8:	str	r2, [r3, #8]
   1c5ec:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c5f0:	ldr	r0, [fp, #-8]
   1c5f4:	bl	1c930 <__assert_fail@plt+0xb640>
   1c5f8:	mov	r3, r0
   1c5fc:	str	r3, [fp, #-12]
   1c600:	ldr	r3, [fp, #-12]
   1c604:	cmp	r3, #0
   1c608:	moveq	r3, #1
   1c60c:	movne	r3, #0
   1c610:	uxtb	r3, r3
   1c614:	cmp	r3, #0
   1c618:	beq	1c69c <__assert_fail@plt+0xb3ac>
   1c61c:	movw	r3, #0
   1c620:	movt	r3, #0
   1c624:	cmp	r3, #0
   1c628:	bne	1c63c <__assert_fail@plt+0xb34c>
   1c62c:	movw	r3, #0
   1c630:	movt	r3, #0
   1c634:	cmp	r3, #0
   1c638:	beq	1c644 <__assert_fail@plt+0xb354>
   1c63c:	mov	r3, #1
   1c640:	b	1c648 <__assert_fail@plt+0xb358>
   1c644:	mov	r3, #0
   1c648:	cmp	r3, #0
   1c64c:	beq	1c688 <__assert_fail@plt+0xb398>
   1c650:	ldr	r3, [fp, #-8]
   1c654:	add	r3, r3, #136	; 0x88
   1c658:	mov	r1, #0
   1c65c:	mov	r0, r3
   1c660:	bl	1108c <pthread_mutex_init@plt>
   1c664:	mov	r3, r0
   1c668:	cmp	r3, #0
   1c66c:	movne	r3, #1
   1c670:	moveq	r3, #0
   1c674:	uxtb	r3, r3
   1c678:	cmp	r3, #0
   1c67c:	beq	1c688 <__assert_fail@plt+0xb398>
   1c680:	mov	r3, #1
   1c684:	b	1c68c <__assert_fail@plt+0xb39c>
   1c688:	mov	r3, #0
   1c68c:	cmp	r3, #0
   1c690:	beq	1c69c <__assert_fail@plt+0xb3ac>
   1c694:	mov	r3, #12
   1c698:	str	r3, [fp, #-12]
   1c69c:	ldr	r3, [fp, #-12]
   1c6a0:	cmp	r3, #0
   1c6a4:	movne	r3, #1
   1c6a8:	moveq	r3, #0
   1c6ac:	uxtb	r3, r3
   1c6b0:	cmp	r3, #0
   1c6b4:	beq	1c6e0 <__assert_fail@plt+0xb3f0>
   1c6b8:	ldr	r0, [fp, #-8]
   1c6bc:	bl	1c128 <__assert_fail@plt+0xae38>
   1c6c0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c6c4:	mov	r2, #0
   1c6c8:	str	r2, [r3]
   1c6cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c6d0:	mov	r2, #0
   1c6d4:	str	r2, [r3, #4]
   1c6d8:	ldr	r3, [fp, #-12]
   1c6dc:	b	1c91c <__assert_fail@plt+0xb62c>
   1c6e0:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c6e4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c6e8:	ldr	ip, [r3, #20]
   1c6ec:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1c6f0:	and	r3, r3, #4194304	; 0x400000
   1c6f4:	cmp	r3, #0
   1c6f8:	movne	r3, #1
   1c6fc:	moveq	r3, #0
   1c700:	uxtb	r3, r3
   1c704:	sub	r0, fp, #96	; 0x60
   1c708:	ldr	r2, [fp, #-8]
   1c70c:	str	r2, [sp, #4]
   1c710:	str	r3, [sp]
   1c714:	mov	r3, ip
   1c718:	mov	r2, r1
   1c71c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c720:	bl	1659c <__assert_fail@plt+0x52ac>
   1c724:	mov	r3, r0
   1c728:	str	r3, [fp, #-12]
   1c72c:	ldr	r3, [fp, #-12]
   1c730:	cmp	r3, #0
   1c734:	movne	r3, #1
   1c738:	moveq	r3, #0
   1c73c:	uxtb	r3, r3
   1c740:	cmp	r3, #0
   1c744:	beq	1c7cc <__assert_fail@plt+0xb4dc>
   1c748:	nop	{0}
   1c74c:	b	1c75c <__assert_fail@plt+0xb46c>
   1c750:	nop	{0}
   1c754:	b	1c75c <__assert_fail@plt+0xb46c>
   1c758:	nop	{0}
   1c75c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c760:	bl	1cf60 <__assert_fail@plt+0xbc70>
   1c764:	sub	r3, fp, #96	; 0x60
   1c768:	mov	r0, r3
   1c76c:	bl	18ca8 <__assert_fail@plt+0x79b8>
   1c770:	movw	r3, #0
   1c774:	movt	r3, #0
   1c778:	cmp	r3, #0
   1c77c:	bne	1c790 <__assert_fail@plt+0xb4a0>
   1c780:	movw	r3, #0
   1c784:	movt	r3, #0
   1c788:	cmp	r3, #0
   1c78c:	beq	1c7a4 <__assert_fail@plt+0xb4b4>
   1c790:	ldr	r3, [fp, #-8]
   1c794:	add	r3, r3, #136	; 0x88
   1c798:	mov	r0, r3
   1c79c:	bl	1102c <pthread_mutex_destroy@plt>
   1c7a0:	nop	{0}
   1c7a4:	ldr	r0, [fp, #-8]
   1c7a8:	bl	1c128 <__assert_fail@plt+0xae38>
   1c7ac:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c7b0:	mov	r2, #0
   1c7b4:	str	r2, [r3]
   1c7b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c7bc:	mov	r2, #0
   1c7c0:	str	r2, [r3, #4]
   1c7c4:	ldr	r3, [fp, #-12]
   1c7c8:	b	1c91c <__assert_fail@plt+0xb62c>
   1c7cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c7d0:	mov	r2, #0
   1c7d4:	str	r2, [r3, #24]
   1c7d8:	sub	r3, fp, #12
   1c7dc:	sub	r0, fp, #96	; 0x60
   1c7e0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1c7e4:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c7e8:	bl	20648 <__assert_fail@plt+0xf358>
   1c7ec:	mov	r2, r0
   1c7f0:	ldr	r3, [fp, #-8]
   1c7f4:	str	r2, [r3, #52]	; 0x34
   1c7f8:	ldr	r3, [fp, #-8]
   1c7fc:	ldr	r3, [r3, #52]	; 0x34
   1c800:	cmp	r3, #0
   1c804:	moveq	r3, #1
   1c808:	movne	r3, #0
   1c80c:	uxtb	r3, r3
   1c810:	cmp	r3, #0
   1c814:	bne	1c750 <__assert_fail@plt+0xb460>
   1c818:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c81c:	bl	1d71c <__assert_fail@plt+0xc42c>
   1c820:	mov	r3, r0
   1c824:	str	r3, [fp, #-12]
   1c828:	ldr	r3, [fp, #-12]
   1c82c:	cmp	r3, #0
   1c830:	movne	r3, #1
   1c834:	moveq	r3, #0
   1c838:	uxtb	r3, r3
   1c83c:	cmp	r3, #0
   1c840:	bne	1c758 <__assert_fail@plt+0xb468>
   1c844:	ldr	r3, [fp, #-8]
   1c848:	ldrb	r3, [r3, #88]	; 0x58
   1c84c:	and	r3, r3, #4
   1c850:	uxtb	r3, r3
   1c854:	cmp	r3, #0
   1c858:	beq	1c884 <__assert_fail@plt+0xb594>
   1c85c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1c860:	and	r3, r3, #4194304	; 0x400000
   1c864:	cmp	r3, #0
   1c868:	bne	1c884 <__assert_fail@plt+0xb594>
   1c86c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c870:	ldr	r3, [r3, #20]
   1c874:	cmp	r3, #0
   1c878:	bne	1c884 <__assert_fail@plt+0xb594>
   1c87c:	ldr	r0, [fp, #-8]
   1c880:	bl	1d3fc <__assert_fail@plt+0xc10c>
   1c884:	ldr	r0, [fp, #-8]
   1c888:	bl	1d00c <__assert_fail@plt+0xbd1c>
   1c88c:	mov	r3, r0
   1c890:	str	r3, [fp, #-12]
   1c894:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c898:	bl	1cf60 <__assert_fail@plt+0xbc70>
   1c89c:	sub	r3, fp, #96	; 0x60
   1c8a0:	mov	r0, r3
   1c8a4:	bl	18ca8 <__assert_fail@plt+0x79b8>
   1c8a8:	ldr	r3, [fp, #-12]
   1c8ac:	cmp	r3, #0
   1c8b0:	movne	r3, #1
   1c8b4:	moveq	r3, #0
   1c8b8:	uxtb	r3, r3
   1c8bc:	cmp	r3, #0
   1c8c0:	beq	1c918 <__assert_fail@plt+0xb628>
   1c8c4:	movw	r3, #0
   1c8c8:	movt	r3, #0
   1c8cc:	cmp	r3, #0
   1c8d0:	bne	1c8e4 <__assert_fail@plt+0xb5f4>
   1c8d4:	movw	r3, #0
   1c8d8:	movt	r3, #0
   1c8dc:	cmp	r3, #0
   1c8e0:	beq	1c8f8 <__assert_fail@plt+0xb608>
   1c8e4:	ldr	r3, [fp, #-8]
   1c8e8:	add	r3, r3, #136	; 0x88
   1c8ec:	mov	r0, r3
   1c8f0:	bl	1102c <pthread_mutex_destroy@plt>
   1c8f4:	nop	{0}
   1c8f8:	ldr	r0, [fp, #-8]
   1c8fc:	bl	1c128 <__assert_fail@plt+0xae38>
   1c900:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c904:	mov	r2, #0
   1c908:	str	r2, [r3]
   1c90c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c910:	mov	r2, #0
   1c914:	str	r2, [r3, #4]
   1c918:	ldr	r3, [fp, #-12]
   1c91c:	mov	r0, r3
   1c920:	sub	sp, fp, #4
   1c924:	ldr	fp, [sp]
   1c928:	add	sp, sp, #4
   1c92c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c930:	str	fp, [sp, #-8]!
   1c934:	str	lr, [sp, #4]
   1c938:	add	fp, sp, #4
   1c93c:	sub	sp, sp, #40	; 0x28
   1c940:	str	r0, [fp, #-40]	; 0xffffffd8
   1c944:	str	r1, [fp, #-44]	; 0xffffffd4
   1c948:	mov	r3, #4
   1c94c:	str	r3, [fp, #-24]	; 0xffffffe8
   1c950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c954:	cmp	r3, #12
   1c958:	bls	1c968 <__assert_fail@plt+0xb678>
   1c95c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c960:	cmp	r3, #8
   1c964:	bls	1c9cc <__assert_fail@plt+0xb6dc>
   1c968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c96c:	cmp	r3, #12
   1c970:	bls	1c9cc <__assert_fail@plt+0xb6dc>
   1c974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c978:	cmp	r3, #12
   1c97c:	bls	1c9cc <__assert_fail@plt+0xb6dc>
   1c980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c984:	cmp	r3, #12
   1c988:	bls	1c998 <__assert_fail@plt+0xb6a8>
   1c98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c990:	cmp	r3, #8
   1c994:	bls	1c9c0 <__assert_fail@plt+0xb6d0>
   1c998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c99c:	cmp	r3, #12
   1c9a0:	bls	1c9b8 <__assert_fail@plt+0xb6c8>
   1c9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c9a8:	cmp	r3, #8
   1c9ac:	movcs	r3, r3
   1c9b0:	movcc	r3, #8
   1c9b4:	b	1c9c8 <__assert_fail@plt+0xb6d8>
   1c9b8:	mov	r3, #12
   1c9bc:	b	1c9c8 <__assert_fail@plt+0xb6d8>
   1c9c0:	mov	r3, #8
   1c9c4:	b	1c9d0 <__assert_fail@plt+0xb6e0>
   1c9c8:	b	1c9d0 <__assert_fail@plt+0xb6e0>
   1c9cc:	mov	r3, #12
   1c9d0:	str	r3, [fp, #-28]	; 0xffffffe4
   1c9d4:	mov	r2, #160	; 0xa0
   1c9d8:	mov	r1, #0
   1c9dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9e0:	bl	11218 <memset@plt>
   1c9e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c9e8:	mov	r2, #31
   1c9ec:	str	r2, [r3, #64]	; 0x40
   1c9f0:	mvn	r2, #0
   1c9f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c9f8:	udiv	r3, r2, r3
   1c9fc:	cmp	r3, #0
   1ca00:	blt	1ca18 <__assert_fail@plt+0xb728>
   1ca04:	mvn	r2, #0
   1ca08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ca0c:	udiv	r3, r2, r3
   1ca10:	lsr	r3, r3, #1
   1ca14:	b	1ca1c <__assert_fail@plt+0xb72c>
   1ca18:	mvn	r3, #-1073741824	; 0xc0000000
   1ca1c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ca20:	cmp	r3, r2
   1ca24:	movls	r3, #1
   1ca28:	movhi	r3, #0
   1ca2c:	uxtb	r3, r3
   1ca30:	cmp	r3, #0
   1ca34:	beq	1ca40 <__assert_fail@plt+0xb750>
   1ca38:	mov	r3, #12
   1ca3c:	b	1cd70 <__assert_fail@plt+0xba80>
   1ca40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ca44:	add	r2, r3, #1
   1ca48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ca4c:	str	r2, [r3, #4]
   1ca50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ca54:	ldr	r3, [r3, #4]
   1ca58:	lsl	r3, r3, #3
   1ca5c:	mov	r0, r3
   1ca60:	bl	3134c <__assert_fail@plt+0x2005c>
   1ca64:	mov	r3, r0
   1ca68:	mov	r2, r3
   1ca6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ca70:	str	r2, [r3]
   1ca74:	mov	r3, #1
   1ca78:	str	r3, [fp, #-8]
   1ca7c:	ldr	r2, [fp, #-8]
   1ca80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ca84:	cmp	r2, r3
   1ca88:	bhi	1ca9c <__assert_fail@plt+0xb7ac>
   1ca8c:	ldr	r3, [fp, #-8]
   1ca90:	lsl	r3, r3, #1
   1ca94:	str	r3, [fp, #-8]
   1ca98:	b	1ca7c <__assert_fail@plt+0xb78c>
   1ca9c:	nop	{0}
   1caa0:	ldr	r1, [fp, #-8]
   1caa4:	mov	r0, #12
   1caa8:	bl	3127c <__assert_fail@plt+0x1ff8c>
   1caac:	mov	r3, r0
   1cab0:	mov	r2, r3
   1cab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cab8:	str	r2, [r3, #32]
   1cabc:	ldr	r3, [fp, #-8]
   1cac0:	sub	r2, r3, #1
   1cac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cac8:	str	r2, [r3, #68]	; 0x44
   1cacc:	bl	11128 <__ctype_get_mb_cur_max@plt>
   1cad0:	mov	r3, r0
   1cad4:	mov	r2, r3
   1cad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cadc:	str	r2, [r3, #92]	; 0x5c
   1cae0:	mov	r0, #14
   1cae4:	bl	11284 <nl_langinfo@plt>
   1cae8:	str	r0, [fp, #-32]	; 0xffffffe0
   1caec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1caf0:	ldrb	r3, [r3]
   1caf4:	cmp	r3, #85	; 0x55
   1caf8:	beq	1cb0c <__assert_fail@plt+0xb81c>
   1cafc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb00:	ldrb	r3, [r3]
   1cb04:	cmp	r3, #117	; 0x75
   1cb08:	bne	1cbb0 <__assert_fail@plt+0xb8c0>
   1cb0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb10:	add	r3, r3, #1
   1cb14:	ldrb	r3, [r3]
   1cb18:	cmp	r3, #84	; 0x54
   1cb1c:	beq	1cb34 <__assert_fail@plt+0xb844>
   1cb20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb24:	add	r3, r3, #1
   1cb28:	ldrb	r3, [r3]
   1cb2c:	cmp	r3, #116	; 0x74
   1cb30:	bne	1cbb0 <__assert_fail@plt+0xb8c0>
   1cb34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb38:	add	r3, r3, #2
   1cb3c:	ldrb	r3, [r3]
   1cb40:	cmp	r3, #70	; 0x46
   1cb44:	beq	1cb5c <__assert_fail@plt+0xb86c>
   1cb48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb4c:	add	r3, r3, #2
   1cb50:	ldrb	r3, [r3]
   1cb54:	cmp	r3, #102	; 0x66
   1cb58:	bne	1cbb0 <__assert_fail@plt+0xb8c0>
   1cb5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb60:	add	r3, r3, #3
   1cb64:	ldrb	r3, [r3]
   1cb68:	cmp	r3, #45	; 0x2d
   1cb6c:	bne	1cb78 <__assert_fail@plt+0xb888>
   1cb70:	mov	r3, #4
   1cb74:	b	1cb7c <__assert_fail@plt+0xb88c>
   1cb78:	mov	r3, #3
   1cb7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cb80:	add	r3, r2, r3
   1cb84:	movw	r1, #14008	; 0x36b8
   1cb88:	movt	r1, #3
   1cb8c:	mov	r0, r3
   1cb90:	bl	11008 <strcmp@plt>
   1cb94:	mov	r3, r0
   1cb98:	cmp	r3, #0
   1cb9c:	bne	1cbb0 <__assert_fail@plt+0xb8c0>
   1cba0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cba4:	ldrb	r3, [r2, #88]	; 0x58
   1cba8:	orr	r3, r3, #4
   1cbac:	strb	r3, [r2, #88]	; 0x58
   1cbb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cbb4:	ldrb	r3, [r2, #88]	; 0x58
   1cbb8:	bfc	r3, #3, #1
   1cbbc:	strb	r3, [r2, #88]	; 0x58
   1cbc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cbc4:	ldr	r3, [r3, #92]	; 0x5c
   1cbc8:	cmp	r3, #1
   1cbcc:	ble	1cd24 <__assert_fail@plt+0xba34>
   1cbd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cbd4:	ldrb	r3, [r3, #88]	; 0x58
   1cbd8:	and	r3, r3, #4
   1cbdc:	uxtb	r3, r3
   1cbe0:	cmp	r3, #0
   1cbe4:	beq	1cbfc <__assert_fail@plt+0xb90c>
   1cbe8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cbec:	movw	r3, #13976	; 0x3698
   1cbf0:	movt	r3, #3
   1cbf4:	str	r3, [r2, #60]	; 0x3c
   1cbf8:	b	1cd24 <__assert_fail@plt+0xba34>
   1cbfc:	mov	r1, #1
   1cc00:	mov	r0, #32
   1cc04:	bl	3127c <__assert_fail@plt+0x1ff8c>
   1cc08:	mov	r3, r0
   1cc0c:	mov	r2, r3
   1cc10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cc14:	str	r2, [r3, #60]	; 0x3c
   1cc18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cc1c:	ldr	r3, [r3, #60]	; 0x3c
   1cc20:	cmp	r3, #0
   1cc24:	moveq	r3, #1
   1cc28:	movne	r3, #0
   1cc2c:	uxtb	r3, r3
   1cc30:	cmp	r3, #0
   1cc34:	beq	1cc40 <__assert_fail@plt+0xb950>
   1cc38:	mov	r3, #12
   1cc3c:	b	1cd70 <__assert_fail@plt+0xba80>
   1cc40:	mov	r3, #0
   1cc44:	str	r3, [fp, #-12]
   1cc48:	mov	r3, #0
   1cc4c:	str	r3, [fp, #-20]	; 0xffffffec
   1cc50:	b	1cd18 <__assert_fail@plt+0xba28>
   1cc54:	mov	r3, #0
   1cc58:	str	r3, [fp, #-16]
   1cc5c:	b	1cd00 <__assert_fail@plt+0xba10>
   1cc60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc64:	bl	11224 <btowc@plt>
   1cc68:	str	r0, [fp, #-36]	; 0xffffffdc
   1cc6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cc70:	cmn	r3, #1
   1cc74:	beq	1ccb8 <__assert_fail@plt+0xb9c8>
   1cc78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cc7c:	ldr	r2, [r3, #60]	; 0x3c
   1cc80:	ldr	r3, [fp, #-12]
   1cc84:	lsl	r3, r3, #2
   1cc88:	add	r3, r2, r3
   1cc8c:	ldr	r1, [r3]
   1cc90:	mov	r2, #1
   1cc94:	ldr	r3, [fp, #-16]
   1cc98:	lsl	r2, r2, r3
   1cc9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cca0:	ldr	r0, [r3, #60]	; 0x3c
   1cca4:	ldr	r3, [fp, #-12]
   1cca8:	lsl	r3, r3, #2
   1ccac:	add	r3, r0, r3
   1ccb0:	orr	r2, r1, r2
   1ccb4:	str	r2, [r3]
   1ccb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ccbc:	bic	r3, r3, #127	; 0x7f
   1ccc0:	cmp	r3, #0
   1ccc4:	bne	1cce8 <__assert_fail@plt+0xb9f8>
   1ccc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cccc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ccd0:	cmp	r2, r3
   1ccd4:	beq	1cce8 <__assert_fail@plt+0xb9f8>
   1ccd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ccdc:	ldrb	r3, [r2, #88]	; 0x58
   1cce0:	orr	r3, r3, #8
   1cce4:	strb	r3, [r2, #88]	; 0x58
   1cce8:	ldr	r3, [fp, #-16]
   1ccec:	add	r3, r3, #1
   1ccf0:	str	r3, [fp, #-16]
   1ccf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ccf8:	add	r3, r3, #1
   1ccfc:	str	r3, [fp, #-20]	; 0xffffffec
   1cd00:	ldr	r3, [fp, #-16]
   1cd04:	cmp	r3, #31
   1cd08:	ble	1cc60 <__assert_fail@plt+0xb970>
   1cd0c:	ldr	r3, [fp, #-12]
   1cd10:	add	r3, r3, #1
   1cd14:	str	r3, [fp, #-12]
   1cd18:	ldr	r3, [fp, #-12]
   1cd1c:	cmp	r3, #7
   1cd20:	ble	1cc54 <__assert_fail@plt+0xb964>
   1cd24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cd28:	ldr	r3, [r3]
   1cd2c:	cmp	r3, #0
   1cd30:	moveq	r3, #1
   1cd34:	movne	r3, #0
   1cd38:	uxtb	r3, r3
   1cd3c:	cmp	r3, #0
   1cd40:	bne	1cd64 <__assert_fail@plt+0xba74>
   1cd44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cd48:	ldr	r3, [r3, #32]
   1cd4c:	cmp	r3, #0
   1cd50:	moveq	r3, #1
   1cd54:	movne	r3, #0
   1cd58:	uxtb	r3, r3
   1cd5c:	cmp	r3, #0
   1cd60:	beq	1cd6c <__assert_fail@plt+0xba7c>
   1cd64:	mov	r3, #12
   1cd68:	b	1cd70 <__assert_fail@plt+0xba80>
   1cd6c:	mov	r3, #0
   1cd70:	mov	r0, r3
   1cd74:	sub	sp, fp, #4
   1cd78:	ldr	fp, [sp]
   1cd7c:	add	sp, sp, #4
   1cd80:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd84:	str	fp, [sp, #-8]!
   1cd88:	str	lr, [sp, #4]
   1cd8c:	add	fp, sp, #4
   1cd90:	sub	sp, sp, #40	; 0x28
   1cd94:	str	r0, [fp, #-40]	; 0xffffffd8
   1cd98:	mov	r3, #0
   1cd9c:	str	r3, [fp, #-8]
   1cda0:	mov	r3, #0
   1cda4:	str	r3, [fp, #-16]
   1cda8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cdac:	ldrb	r3, [r2, #88]	; 0x58
   1cdb0:	orr	r3, r3, #16
   1cdb4:	strb	r3, [r2, #88]	; 0x58
   1cdb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cdbc:	ldrb	r3, [r3, #88]	; 0x58
   1cdc0:	and	r3, r3, #8
   1cdc4:	uxtb	r3, r3
   1cdc8:	cmp	r3, #0
   1cdcc:	moveq	r3, #1
   1cdd0:	movne	r3, #0
   1cdd4:	uxtb	r3, r3
   1cdd8:	cmp	r3, #0
   1cddc:	beq	1ce9c <__assert_fail@plt+0xbbac>
   1cde0:	mov	r3, #0
   1cde4:	str	r3, [fp, #-20]	; 0xffffffec
   1cde8:	mov	r3, #0
   1cdec:	movt	r3, #1023	; 0x3ff
   1cdf0:	str	r3, [fp, #-24]	; 0xffffffe8
   1cdf4:	mvn	r3, #2013265921	; 0x78000001
   1cdf8:	str	r3, [fp, #-28]	; 0xffffffe4
   1cdfc:	mvn	r3, #-134217727	; 0xf8000001
   1ce00:	str	r3, [fp, #-32]	; 0xffffffe0
   1ce04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ce0c:	str	r2, [r3, #96]	; 0x60
   1ce10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ce18:	str	r2, [r3, #100]	; 0x64
   1ce1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ce24:	str	r2, [r3, #104]	; 0x68
   1ce28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ce30:	str	r2, [r3, #108]	; 0x6c
   1ce34:	mov	r3, #4
   1ce38:	str	r3, [fp, #-8]
   1ce3c:	mov	r3, #128	; 0x80
   1ce40:	str	r3, [fp, #-16]
   1ce44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce48:	ldrb	r3, [r3, #88]	; 0x58
   1ce4c:	ubfx	r3, r3, #2, #1
   1ce50:	uxtb	r3, r3
   1ce54:	cmp	r3, #0
   1ce58:	beq	1ce9c <__assert_fail@plt+0xbbac>
   1ce5c:	ldr	r3, [fp, #-8]
   1ce60:	add	r3, r3, #24
   1ce64:	lsl	r3, r3, #2
   1ce68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ce6c:	add	r0, r2, r3
   1ce70:	ldr	r3, [fp, #-16]
   1ce74:	rsb	r3, r3, #256	; 0x100
   1ce78:	add	r2, r3, #7
   1ce7c:	cmp	r3, #0
   1ce80:	movlt	r3, r2
   1ce84:	movge	r3, r3
   1ce88:	asr	r3, r3, #3
   1ce8c:	mov	r2, r3
   1ce90:	mov	r1, #0
   1ce94:	bl	11218 <memset@plt>
   1ce98:	b	1cf50 <__assert_fail@plt+0xbc60>
   1ce9c:	nop	{0}
   1cea0:	b	1cf44 <__assert_fail@plt+0xbc54>
   1cea4:	mov	r3, #0
   1cea8:	str	r3, [fp, #-12]
   1ceac:	b	1cf2c <__assert_fail@plt+0xbc3c>
   1ceb0:	bl	111ac <__ctype_b_loc@plt>
   1ceb4:	mov	r3, r0
   1ceb8:	ldr	r2, [r3]
   1cebc:	ldr	r3, [fp, #-16]
   1cec0:	lsl	r3, r3, #1
   1cec4:	add	r3, r2, r3
   1cec8:	ldrh	r3, [r3]
   1cecc:	and	r3, r3, #8
   1ced0:	cmp	r3, #0
   1ced4:	bne	1cee4 <__assert_fail@plt+0xbbf4>
   1ced8:	ldr	r3, [fp, #-16]
   1cedc:	cmp	r3, #95	; 0x5f
   1cee0:	bne	1cf14 <__assert_fail@plt+0xbc24>
   1cee4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cee8:	ldr	r2, [fp, #-8]
   1ceec:	add	r2, r2, #24
   1cef0:	ldr	r2, [r3, r2, lsl #2]
   1cef4:	mov	r1, #1
   1cef8:	ldr	r3, [fp, #-12]
   1cefc:	lsl	r3, r1, r3
   1cf00:	orr	r1, r2, r3
   1cf04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cf08:	ldr	r2, [fp, #-8]
   1cf0c:	add	r2, r2, #24
   1cf10:	str	r1, [r3, r2, lsl #2]
   1cf14:	ldr	r3, [fp, #-12]
   1cf18:	add	r3, r3, #1
   1cf1c:	str	r3, [fp, #-12]
   1cf20:	ldr	r3, [fp, #-16]
   1cf24:	add	r3, r3, #1
   1cf28:	str	r3, [fp, #-16]
   1cf2c:	ldr	r3, [fp, #-12]
   1cf30:	cmp	r3, #31
   1cf34:	ble	1ceb0 <__assert_fail@plt+0xbbc0>
   1cf38:	ldr	r3, [fp, #-8]
   1cf3c:	add	r3, r3, #1
   1cf40:	str	r3, [fp, #-8]
   1cf44:	ldr	r3, [fp, #-8]
   1cf48:	cmp	r3, #7
   1cf4c:	ble	1cea4 <__assert_fail@plt+0xbbb4>
   1cf50:	sub	sp, fp, #4
   1cf54:	ldr	fp, [sp]
   1cf58:	add	sp, sp, #4
   1cf5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf60:	str	fp, [sp, #-8]!
   1cf64:	str	lr, [sp, #4]
   1cf68:	add	fp, sp, #4
   1cf6c:	sub	sp, sp, #24
   1cf70:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf78:	ldr	r3, [r3]
   1cf7c:	str	r3, [fp, #-12]
   1cf80:	ldr	r3, [fp, #-12]
   1cf84:	ldr	r3, [r3, #56]	; 0x38
   1cf88:	str	r3, [fp, #-8]
   1cf8c:	b	1cfac <__assert_fail@plt+0xbcbc>
   1cf90:	ldr	r3, [fp, #-8]
   1cf94:	ldr	r3, [r3]
   1cf98:	str	r3, [fp, #-16]
   1cf9c:	ldr	r0, [fp, #-8]
   1cfa0:	bl	31b28 <__assert_fail@plt+0x20838>
   1cfa4:	ldr	r3, [fp, #-16]
   1cfa8:	str	r3, [fp, #-8]
   1cfac:	ldr	r3, [fp, #-8]
   1cfb0:	cmp	r3, #0
   1cfb4:	bne	1cf90 <__assert_fail@plt+0xbca0>
   1cfb8:	ldr	r3, [fp, #-12]
   1cfbc:	mov	r2, #0
   1cfc0:	str	r2, [r3, #56]	; 0x38
   1cfc4:	ldr	r3, [fp, #-12]
   1cfc8:	mov	r2, #31
   1cfcc:	str	r2, [r3, #64]	; 0x40
   1cfd0:	ldr	r3, [fp, #-12]
   1cfd4:	mov	r2, #0
   1cfd8:	str	r2, [r3, #52]	; 0x34
   1cfdc:	ldr	r3, [fp, #-12]
   1cfe0:	ldr	r3, [r3, #16]
   1cfe4:	mov	r0, r3
   1cfe8:	bl	31b28 <__assert_fail@plt+0x20838>
   1cfec:	ldr	r3, [fp, #-12]
   1cff0:	mov	r2, #0
   1cff4:	str	r2, [r3, #16]
   1cff8:	nop	{0}
   1cffc:	sub	sp, fp, #4
   1d000:	ldr	fp, [sp]
   1d004:	add	sp, sp, #4
   1d008:	pop	{pc}		; (ldr pc, [sp], #4)
   1d00c:	str	fp, [sp, #-8]!
   1d010:	str	lr, [sp, #4]
   1d014:	add	fp, sp, #4
   1d018:	sub	sp, sp, #56	; 0x38
   1d01c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d020:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d024:	ldr	r3, [r3, #52]	; 0x34
   1d028:	ldr	r3, [r3, #12]
   1d02c:	ldr	r3, [r3, #28]
   1d030:	str	r3, [fp, #-16]
   1d034:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d038:	ldr	r2, [fp, #-16]
   1d03c:	str	r2, [r3, #72]	; 0x48
   1d040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d044:	ldr	r1, [r3, #24]
   1d048:	ldr	r2, [fp, #-16]
   1d04c:	mov	r3, r2
   1d050:	lsl	r3, r3, #1
   1d054:	add	r3, r3, r2
   1d058:	lsl	r3, r3, #2
   1d05c:	add	r2, r1, r3
   1d060:	sub	r3, fp, #52	; 0x34
   1d064:	mov	r1, r2
   1d068:	mov	r0, r3
   1d06c:	bl	19160 <__assert_fail@plt+0x7e70>
   1d070:	mov	r3, r0
   1d074:	str	r3, [fp, #-40]	; 0xffffffd8
   1d078:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d07c:	cmp	r3, #0
   1d080:	movne	r3, #1
   1d084:	moveq	r3, #0
   1d088:	uxtb	r3, r3
   1d08c:	cmp	r3, #0
   1d090:	beq	1d09c <__assert_fail@plt+0xbdac>
   1d094:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d098:	b	1d3e8 <__assert_fail@plt+0xc0f8>
   1d09c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d0a0:	ldr	r3, [r3, #76]	; 0x4c
   1d0a4:	cmp	r3, #0
   1d0a8:	ble	1d268 <__assert_fail@plt+0xbf78>
   1d0ac:	mov	r3, #0
   1d0b0:	str	r3, [fp, #-8]
   1d0b4:	b	1d258 <__assert_fail@plt+0xbf68>
   1d0b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d0bc:	ldr	r3, [fp, #-8]
   1d0c0:	lsl	r3, r3, #2
   1d0c4:	add	r3, r2, r3
   1d0c8:	ldr	r3, [r3]
   1d0cc:	str	r3, [fp, #-20]	; 0xffffffec
   1d0d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d0d4:	ldr	r2, [r3]
   1d0d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d0dc:	lsl	r3, r3, #3
   1d0e0:	add	r3, r2, r3
   1d0e4:	ldrb	r3, [r3, #4]
   1d0e8:	str	r3, [fp, #-24]	; 0xffffffe8
   1d0ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d0f0:	cmp	r3, #4
   1d0f4:	bne	1d240 <__assert_fail@plt+0xbf50>
   1d0f8:	mov	r3, #0
   1d0fc:	str	r3, [fp, #-12]
   1d100:	b	1d170 <__assert_fail@plt+0xbe80>
   1d104:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d108:	ldr	r2, [r3]
   1d10c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d110:	ldr	r3, [fp, #-12]
   1d114:	lsl	r3, r3, #2
   1d118:	add	r3, r1, r3
   1d11c:	ldr	r3, [r3]
   1d120:	lsl	r3, r3, #3
   1d124:	add	r3, r2, r3
   1d128:	str	r3, [fp, #-28]	; 0xffffffe4
   1d12c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d130:	ldrb	r3, [r3, #4]
   1d134:	cmp	r3, #9
   1d138:	bne	1d164 <__assert_fail@plt+0xbe74>
   1d13c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d140:	ldr	r2, [r3]
   1d144:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d148:	ldr	r1, [r3]
   1d14c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d150:	lsl	r3, r3, #3
   1d154:	add	r3, r1, r3
   1d158:	ldr	r3, [r3]
   1d15c:	cmp	r2, r3
   1d160:	beq	1d184 <__assert_fail@plt+0xbe94>
   1d164:	ldr	r3, [fp, #-12]
   1d168:	add	r3, r3, #1
   1d16c:	str	r3, [fp, #-12]
   1d170:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d174:	ldr	r2, [fp, #-12]
   1d178:	cmp	r2, r3
   1d17c:	blt	1d104 <__assert_fail@plt+0xbe14>
   1d180:	b	1d188 <__assert_fail@plt+0xbe98>
   1d184:	nop	{0}
   1d188:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d18c:	ldr	r2, [fp, #-12]
   1d190:	cmp	r2, r3
   1d194:	beq	1d248 <__assert_fail@plt+0xbf58>
   1d198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d19c:	cmp	r3, #4
   1d1a0:	bne	1d24c <__assert_fail@plt+0xbf5c>
   1d1a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d1a8:	ldr	r1, [r3, #20]
   1d1ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d1b0:	mov	r3, r2
   1d1b4:	lsl	r3, r3, #1
   1d1b8:	add	r3, r3, r2
   1d1bc:	lsl	r3, r3, #2
   1d1c0:	add	r3, r1, r3
   1d1c4:	ldr	r3, [r3, #8]
   1d1c8:	ldr	r3, [r3]
   1d1cc:	str	r3, [fp, #-32]	; 0xffffffe0
   1d1d0:	sub	r3, fp, #52	; 0x34
   1d1d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d1d8:	mov	r0, r3
   1d1dc:	bl	1a314 <__assert_fail@plt+0x9024>
   1d1e0:	mov	r3, r0
   1d1e4:	cmp	r3, #0
   1d1e8:	bne	1d24c <__assert_fail@plt+0xbf5c>
   1d1ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d1f0:	ldr	r1, [r3, #24]
   1d1f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d1f8:	mov	r3, r2
   1d1fc:	lsl	r3, r3, #1
   1d200:	add	r3, r3, r2
   1d204:	lsl	r3, r3, #2
   1d208:	add	r2, r1, r3
   1d20c:	sub	r3, fp, #52	; 0x34
   1d210:	mov	r1, r2
   1d214:	mov	r0, r3
   1d218:	bl	19a8c <__assert_fail@plt+0x879c>
   1d21c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d220:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d224:	cmp	r3, #0
   1d228:	beq	1d234 <__assert_fail@plt+0xbf44>
   1d22c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d230:	b	1d3e8 <__assert_fail@plt+0xc0f8>
   1d234:	mov	r3, #0
   1d238:	str	r3, [fp, #-8]
   1d23c:	b	1d24c <__assert_fail@plt+0xbf5c>
   1d240:	nop	{0}
   1d244:	b	1d24c <__assert_fail@plt+0xbf5c>
   1d248:	nop	{0}
   1d24c:	ldr	r3, [fp, #-8]
   1d250:	add	r3, r3, #1
   1d254:	str	r3, [fp, #-8]
   1d258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d25c:	ldr	r2, [fp, #-8]
   1d260:	cmp	r2, r3
   1d264:	blt	1d0b8 <__assert_fail@plt+0xbdc8>
   1d268:	sub	r2, fp, #52	; 0x34
   1d26c:	sub	r0, fp, #40	; 0x28
   1d270:	mov	r3, #0
   1d274:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d278:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   1d27c:	mov	r2, r0
   1d280:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d284:	str	r2, [r3, #36]	; 0x24
   1d288:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d28c:	ldr	r3, [r3, #36]	; 0x24
   1d290:	cmp	r3, #0
   1d294:	moveq	r3, #1
   1d298:	movne	r3, #0
   1d29c:	uxtb	r3, r3
   1d2a0:	cmp	r3, #0
   1d2a4:	beq	1d2b0 <__assert_fail@plt+0xbfc0>
   1d2a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d2ac:	b	1d3e8 <__assert_fail@plt+0xc0f8>
   1d2b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d2b4:	ldr	r3, [r3, #36]	; 0x24
   1d2b8:	ldrb	r3, [r3, #52]	; 0x34
   1d2bc:	bic	r3, r3, #127	; 0x7f
   1d2c0:	uxtb	r3, r3
   1d2c4:	cmp	r3, #0
   1d2c8:	beq	1d3a8 <__assert_fail@plt+0xc0b8>
   1d2cc:	sub	r2, fp, #52	; 0x34
   1d2d0:	sub	r0, fp, #40	; 0x28
   1d2d4:	mov	r3, #1
   1d2d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d2dc:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   1d2e0:	mov	r2, r0
   1d2e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d2e8:	str	r2, [r3, #40]	; 0x28
   1d2ec:	sub	r2, fp, #52	; 0x34
   1d2f0:	sub	r0, fp, #40	; 0x28
   1d2f4:	mov	r3, #2
   1d2f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d2fc:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   1d300:	mov	r2, r0
   1d304:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d308:	str	r2, [r3, #44]	; 0x2c
   1d30c:	sub	r2, fp, #52	; 0x34
   1d310:	sub	r0, fp, #40	; 0x28
   1d314:	mov	r3, #6
   1d318:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d31c:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   1d320:	mov	r2, r0
   1d324:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d328:	str	r2, [r3, #48]	; 0x30
   1d32c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d330:	ldr	r3, [r3, #40]	; 0x28
   1d334:	cmp	r3, #0
   1d338:	moveq	r3, #1
   1d33c:	movne	r3, #0
   1d340:	uxtb	r3, r3
   1d344:	cmp	r3, #0
   1d348:	bne	1d36c <__assert_fail@plt+0xc07c>
   1d34c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d350:	ldr	r3, [r3, #44]	; 0x2c
   1d354:	cmp	r3, #0
   1d358:	moveq	r3, #1
   1d35c:	movne	r3, #0
   1d360:	uxtb	r3, r3
   1d364:	cmp	r3, #0
   1d368:	beq	1d374 <__assert_fail@plt+0xc084>
   1d36c:	mov	r3, #1
   1d370:	b	1d378 <__assert_fail@plt+0xc088>
   1d374:	mov	r3, #0
   1d378:	cmp	r3, #0
   1d37c:	bne	1d3a0 <__assert_fail@plt+0xc0b0>
   1d380:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d384:	ldr	r3, [r3, #48]	; 0x30
   1d388:	cmp	r3, #0
   1d38c:	moveq	r3, #1
   1d390:	movne	r3, #0
   1d394:	uxtb	r3, r3
   1d398:	cmp	r3, #0
   1d39c:	beq	1d3d8 <__assert_fail@plt+0xc0e8>
   1d3a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d3a4:	b	1d3e8 <__assert_fail@plt+0xc0f8>
   1d3a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3ac:	ldr	r2, [r3, #36]	; 0x24
   1d3b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3b4:	str	r2, [r3, #48]	; 0x30
   1d3b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3bc:	ldr	r2, [r3, #48]	; 0x30
   1d3c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3c4:	str	r2, [r3, #44]	; 0x2c
   1d3c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3cc:	ldr	r2, [r3, #44]	; 0x2c
   1d3d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3d4:	str	r2, [r3, #40]	; 0x28
   1d3d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d3dc:	mov	r0, r3
   1d3e0:	bl	31b28 <__assert_fail@plt+0x20838>
   1d3e4:	mov	r3, #0
   1d3e8:	mov	r0, r3
   1d3ec:	sub	sp, fp, #4
   1d3f0:	ldr	fp, [sp]
   1d3f4:	add	sp, sp, #4
   1d3f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d3fc:	str	fp, [sp, #-8]!
   1d400:	str	lr, [sp, #4]
   1d404:	add	fp, sp, #4
   1d408:	sub	sp, sp, #24
   1d40c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d410:	mov	r3, #0
   1d414:	strb	r3, [fp, #-13]
   1d418:	mov	r3, #0
   1d41c:	strb	r3, [fp, #-14]
   1d420:	mov	r3, #0
   1d424:	str	r3, [fp, #-8]
   1d428:	b	1d59c <__assert_fail@plt+0xc2ac>
   1d42c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d430:	ldr	r2, [r3]
   1d434:	ldr	r3, [fp, #-8]
   1d438:	lsl	r3, r3, #3
   1d43c:	add	r3, r2, r3
   1d440:	ldrb	r3, [r3, #4]
   1d444:	sub	r3, r3, #1
   1d448:	cmp	r3, #11
   1d44c:	ldrls	pc, [pc, r3, lsl #2]
   1d450:	b	1d580 <__assert_fail@plt+0xc290>
   1d454:	andeq	sp, r1, r4, lsl #9
   1d458:	andeq	sp, r1, r4, lsl #11
   1d45c:	andeq	sp, r1, ip, lsl #10
   1d460:	andeq	sp, r1, r4, lsl #11
   1d464:	andeq	sp, r1, r0, lsl #10
   1d468:	strdeq	sp, [r1], -r8
   1d46c:	andeq	sp, r1, r0, lsl #11
   1d470:	andeq	sp, r1, r4, lsl #11
   1d474:	andeq	sp, r1, r4, lsl #11
   1d478:	andeq	sp, r1, r4, lsl #11
   1d47c:	andeq	sp, r1, r4, lsl #11
   1d480:			; <UNDEFINED> instruction: 0x0001d4b4
   1d484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d488:	ldr	r2, [r3]
   1d48c:	ldr	r3, [fp, #-8]
   1d490:	lsl	r3, r3, #3
   1d494:	add	r3, r2, r3
   1d498:	ldrb	r3, [r3]
   1d49c:	sxtb	r3, r3
   1d4a0:	cmp	r3, #0
   1d4a4:	bge	1d58c <__assert_fail@plt+0xc29c>
   1d4a8:	mov	r3, #1
   1d4ac:	strb	r3, [fp, #-13]
   1d4b0:	b	1d58c <__assert_fail@plt+0xc29c>
   1d4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4b8:	ldr	r2, [r3]
   1d4bc:	ldr	r3, [fp, #-8]
   1d4c0:	lsl	r3, r3, #3
   1d4c4:	add	r3, r2, r3
   1d4c8:	ldr	r3, [r3]
   1d4cc:	cmp	r3, #32
   1d4d0:	beq	1d4f8 <__assert_fail@plt+0xc208>
   1d4d4:	cmp	r3, #32
   1d4d8:	bhi	1d4e8 <__assert_fail@plt+0xc1f8>
   1d4dc:	cmp	r3, #16
   1d4e0:	beq	1d4f8 <__assert_fail@plt+0xc208>
   1d4e4:	b	1d700 <__assert_fail@plt+0xc410>
   1d4e8:	cmp	r3, #64	; 0x40
   1d4ec:	beq	1d4f8 <__assert_fail@plt+0xc208>
   1d4f0:	cmp	r3, #128	; 0x80
   1d4f4:	bne	1d700 <__assert_fail@plt+0xc410>
   1d4f8:	nop	{0}
   1d4fc:	b	1d590 <__assert_fail@plt+0xc2a0>
   1d500:	mov	r3, #1
   1d504:	strb	r3, [fp, #-14]
   1d508:	b	1d590 <__assert_fail@plt+0xc2a0>
   1d50c:	mov	r3, #0
   1d510:	str	r3, [fp, #-20]	; 0xffffffec
   1d514:	mov	r3, #4
   1d518:	str	r3, [fp, #-12]
   1d51c:	b	1d56c <__assert_fail@plt+0xc27c>
   1d520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d524:	ldr	r2, [r3]
   1d528:	ldr	r3, [fp, #-8]
   1d52c:	lsl	r3, r3, #3
   1d530:	add	r3, r2, r3
   1d534:	ldr	r2, [r3]
   1d538:	ldr	r3, [fp, #-12]
   1d53c:	lsl	r3, r3, #2
   1d540:	add	r3, r2, r3
   1d544:	ldr	r2, [r3]
   1d548:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d54c:	lsr	r3, r2, r3
   1d550:	cmp	r3, #0
   1d554:	bne	1d708 <__assert_fail@plt+0xc418>
   1d558:	mov	r3, #0
   1d55c:	str	r3, [fp, #-20]	; 0xffffffec
   1d560:	ldr	r3, [fp, #-12]
   1d564:	add	r3, r3, #1
   1d568:	str	r3, [fp, #-12]
   1d56c:	ldr	r3, [fp, #-12]
   1d570:	cmp	r3, #7
   1d574:	ble	1d520 <__assert_fail@plt+0xc230>
   1d578:	nop	{0}
   1d57c:	b	1d590 <__assert_fail@plt+0xc2a0>
   1d580:	bl	112cc <abort@plt>
   1d584:	nop	{0}
   1d588:	b	1d590 <__assert_fail@plt+0xc2a0>
   1d58c:	nop	{0}
   1d590:	ldr	r3, [fp, #-8]
   1d594:	add	r3, r3, #1
   1d598:	str	r3, [fp, #-8]
   1d59c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d5a0:	ldr	r2, [r3, #8]
   1d5a4:	ldr	r3, [fp, #-8]
   1d5a8:	cmp	r2, r3
   1d5ac:	bhi	1d42c <__assert_fail@plt+0xc13c>
   1d5b0:	ldrb	r3, [fp, #-13]
   1d5b4:	cmp	r3, #0
   1d5b8:	bne	1d5c8 <__assert_fail@plt+0xc2d8>
   1d5bc:	ldrb	r3, [fp, #-14]
   1d5c0:	cmp	r3, #0
   1d5c4:	beq	1d698 <__assert_fail@plt+0xc3a8>
   1d5c8:	mov	r3, #0
   1d5cc:	str	r3, [fp, #-8]
   1d5d0:	b	1d684 <__assert_fail@plt+0xc394>
   1d5d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d5d8:	ldr	r2, [r3]
   1d5dc:	ldr	r3, [fp, #-8]
   1d5e0:	lsl	r3, r3, #3
   1d5e4:	add	r3, r2, r3
   1d5e8:	ldrb	r3, [r3, #4]
   1d5ec:	cmp	r3, #1
   1d5f0:	bne	1d63c <__assert_fail@plt+0xc34c>
   1d5f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d5f8:	ldr	r2, [r3]
   1d5fc:	ldr	r3, [fp, #-8]
   1d600:	lsl	r3, r3, #3
   1d604:	add	r3, r2, r3
   1d608:	ldrb	r3, [r3]
   1d60c:	sxtb	r3, r3
   1d610:	cmp	r3, #0
   1d614:	bge	1d63c <__assert_fail@plt+0xc34c>
   1d618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d61c:	ldr	r2, [r3]
   1d620:	ldr	r3, [fp, #-8]
   1d624:	lsl	r3, r3, #3
   1d628:	add	r2, r2, r3
   1d62c:	ldrb	r3, [r2, #6]
   1d630:	bfc	r3, #5, #1
   1d634:	strb	r3, [r2, #6]
   1d638:	b	1d678 <__assert_fail@plt+0xc388>
   1d63c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d640:	ldr	r2, [r3]
   1d644:	ldr	r3, [fp, #-8]
   1d648:	lsl	r3, r3, #3
   1d64c:	add	r3, r2, r3
   1d650:	ldrb	r3, [r3, #4]
   1d654:	cmp	r3, #5
   1d658:	bne	1d678 <__assert_fail@plt+0xc388>
   1d65c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d660:	ldr	r2, [r3]
   1d664:	ldr	r3, [fp, #-8]
   1d668:	lsl	r3, r3, #3
   1d66c:	add	r3, r2, r3
   1d670:	mov	r2, #7
   1d674:	strb	r2, [r3, #4]
   1d678:	ldr	r3, [fp, #-8]
   1d67c:	add	r3, r3, #1
   1d680:	str	r3, [fp, #-8]
   1d684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d688:	ldr	r2, [r3, #8]
   1d68c:	ldr	r3, [fp, #-8]
   1d690:	cmp	r2, r3
   1d694:	bhi	1d5d4 <__assert_fail@plt+0xc2e4>
   1d698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d69c:	mov	r2, #1
   1d6a0:	str	r2, [r3, #92]	; 0x5c
   1d6a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d6a8:	ldrb	r3, [r2, #88]	; 0x58
   1d6ac:	bfc	r3, #2, #1
   1d6b0:	strb	r3, [r2, #88]	; 0x58
   1d6b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d6b8:	ldr	r3, [r3, #76]	; 0x4c
   1d6bc:	cmp	r3, #0
   1d6c0:	bgt	1d6d0 <__assert_fail@plt+0xc3e0>
   1d6c4:	ldrb	r3, [fp, #-14]
   1d6c8:	cmp	r3, #0
   1d6cc:	beq	1d6d8 <__assert_fail@plt+0xc3e8>
   1d6d0:	mov	r3, #1
   1d6d4:	b	1d6dc <__assert_fail@plt+0xc3ec>
   1d6d8:	mov	r3, #0
   1d6dc:	and	r3, r3, #1
   1d6e0:	uxtb	r1, r3
   1d6e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d6e8:	ldrb	r3, [r2, #88]	; 0x58
   1d6ec:	bfi	r3, r1, #1, #1
   1d6f0:	strb	r3, [r2, #88]	; 0x58
   1d6f4:	b	1d70c <__assert_fail@plt+0xc41c>
   1d6f8:	nop	{0}
   1d6fc:	b	1d70c <__assert_fail@plt+0xc41c>
   1d700:	nop	{0}
   1d704:	b	1d70c <__assert_fail@plt+0xc41c>
   1d708:	nop	{0}
   1d70c:	sub	sp, fp, #4
   1d710:	ldr	fp, [sp]
   1d714:	add	sp, sp, #4
   1d718:	pop	{pc}		; (ldr pc, [sp], #4)
   1d71c:	str	fp, [sp, #-8]!
   1d720:	str	lr, [sp, #4]
   1d724:	add	fp, sp, #4
   1d728:	sub	sp, sp, #24
   1d72c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d734:	ldr	r3, [r3]
   1d738:	str	r3, [fp, #-16]
   1d73c:	ldr	r3, [fp, #-16]
   1d740:	ldr	r3, [r3, #4]
   1d744:	lsl	r3, r3, #2
   1d748:	mov	r0, r3
   1d74c:	bl	3134c <__assert_fail@plt+0x2005c>
   1d750:	mov	r3, r0
   1d754:	mov	r2, r3
   1d758:	ldr	r3, [fp, #-16]
   1d75c:	str	r2, [r3, #12]
   1d760:	ldr	r3, [fp, #-16]
   1d764:	ldr	r3, [r3, #4]
   1d768:	lsl	r3, r3, #2
   1d76c:	mov	r0, r3
   1d770:	bl	3134c <__assert_fail@plt+0x2005c>
   1d774:	mov	r3, r0
   1d778:	mov	r2, r3
   1d77c:	ldr	r3, [fp, #-16]
   1d780:	str	r2, [r3, #16]
   1d784:	ldr	r3, [fp, #-16]
   1d788:	ldr	r2, [r3, #4]
   1d78c:	mov	r3, r2
   1d790:	lsl	r3, r3, #1
   1d794:	add	r3, r3, r2
   1d798:	lsl	r3, r3, #2
   1d79c:	mov	r0, r3
   1d7a0:	bl	3134c <__assert_fail@plt+0x2005c>
   1d7a4:	mov	r3, r0
   1d7a8:	mov	r2, r3
   1d7ac:	ldr	r3, [fp, #-16]
   1d7b0:	str	r2, [r3, #20]
   1d7b4:	ldr	r3, [fp, #-16]
   1d7b8:	ldr	r2, [r3, #4]
   1d7bc:	mov	r3, r2
   1d7c0:	lsl	r3, r3, #1
   1d7c4:	add	r3, r3, r2
   1d7c8:	lsl	r3, r3, #2
   1d7cc:	mov	r0, r3
   1d7d0:	bl	3134c <__assert_fail@plt+0x2005c>
   1d7d4:	mov	r3, r0
   1d7d8:	mov	r2, r3
   1d7dc:	ldr	r3, [fp, #-16]
   1d7e0:	str	r2, [r3, #24]
   1d7e4:	ldr	r3, [fp, #-16]
   1d7e8:	ldr	r3, [r3, #12]
   1d7ec:	cmp	r3, #0
   1d7f0:	moveq	r3, #1
   1d7f4:	movne	r3, #0
   1d7f8:	uxtb	r3, r3
   1d7fc:	cmp	r3, #0
   1d800:	bne	1d824 <__assert_fail@plt+0xc534>
   1d804:	ldr	r3, [fp, #-16]
   1d808:	ldr	r3, [r3, #16]
   1d80c:	cmp	r3, #0
   1d810:	moveq	r3, #1
   1d814:	movne	r3, #0
   1d818:	uxtb	r3, r3
   1d81c:	cmp	r3, #0
   1d820:	beq	1d82c <__assert_fail@plt+0xc53c>
   1d824:	mov	r3, #1
   1d828:	b	1d830 <__assert_fail@plt+0xc540>
   1d82c:	mov	r3, #0
   1d830:	cmp	r3, #0
   1d834:	bne	1d858 <__assert_fail@plt+0xc568>
   1d838:	ldr	r3, [fp, #-16]
   1d83c:	ldr	r3, [r3, #20]
   1d840:	cmp	r3, #0
   1d844:	moveq	r3, #1
   1d848:	movne	r3, #0
   1d84c:	uxtb	r3, r3
   1d850:	cmp	r3, #0
   1d854:	beq	1d860 <__assert_fail@plt+0xc570>
   1d858:	mov	r3, #1
   1d85c:	b	1d864 <__assert_fail@plt+0xc574>
   1d860:	mov	r3, #0
   1d864:	cmp	r3, #0
   1d868:	bne	1d88c <__assert_fail@plt+0xc59c>
   1d86c:	ldr	r3, [fp, #-16]
   1d870:	ldr	r3, [r3, #24]
   1d874:	cmp	r3, #0
   1d878:	moveq	r3, #1
   1d87c:	movne	r3, #0
   1d880:	uxtb	r3, r3
   1d884:	cmp	r3, #0
   1d888:	beq	1d894 <__assert_fail@plt+0xc5a4>
   1d88c:	mov	r3, #12
   1d890:	b	1db84 <__assert_fail@plt+0xc894>
   1d894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d898:	ldr	r3, [r3, #24]
   1d89c:	lsl	r3, r3, #2
   1d8a0:	mov	r0, r3
   1d8a4:	bl	3134c <__assert_fail@plt+0x2005c>
   1d8a8:	mov	r3, r0
   1d8ac:	mov	r2, r3
   1d8b0:	ldr	r3, [fp, #-16]
   1d8b4:	str	r2, [r3, #132]	; 0x84
   1d8b8:	ldr	r3, [fp, #-16]
   1d8bc:	ldr	r3, [r3, #132]	; 0x84
   1d8c0:	cmp	r3, #0
   1d8c4:	beq	1d9b4 <__assert_fail@plt+0xc6c4>
   1d8c8:	mov	r3, #0
   1d8cc:	str	r3, [fp, #-12]
   1d8d0:	b	1d8fc <__assert_fail@plt+0xc60c>
   1d8d4:	ldr	r3, [fp, #-16]
   1d8d8:	ldr	r2, [r3, #132]	; 0x84
   1d8dc:	ldr	r3, [fp, #-12]
   1d8e0:	lsl	r3, r3, #2
   1d8e4:	add	r3, r2, r3
   1d8e8:	ldr	r2, [fp, #-12]
   1d8ec:	str	r2, [r3]
   1d8f0:	ldr	r3, [fp, #-12]
   1d8f4:	add	r3, r3, #1
   1d8f8:	str	r3, [fp, #-12]
   1d8fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d900:	ldr	r2, [r3, #24]
   1d904:	ldr	r3, [fp, #-12]
   1d908:	cmp	r2, r3
   1d90c:	bhi	1d8d4 <__assert_fail@plt+0xc5e4>
   1d910:	ldr	r3, [fp, #-16]
   1d914:	ldr	r3, [r3, #52]	; 0x34
   1d918:	ldr	r2, [fp, #-16]
   1d91c:	movw	r1, #56752	; 0xddb0
   1d920:	movt	r1, #1
   1d924:	mov	r0, r3
   1d928:	bl	1dcb8 <__assert_fail@plt+0xc9c8>
   1d92c:	mov	r3, #0
   1d930:	str	r3, [fp, #-12]
   1d934:	b	1d968 <__assert_fail@plt+0xc678>
   1d938:	ldr	r3, [fp, #-16]
   1d93c:	ldr	r2, [r3, #132]	; 0x84
   1d940:	ldr	r3, [fp, #-12]
   1d944:	lsl	r3, r3, #2
   1d948:	add	r3, r2, r3
   1d94c:	ldr	r3, [r3]
   1d950:	ldr	r2, [fp, #-12]
   1d954:	cmp	r2, r3
   1d958:	bne	1d980 <__assert_fail@plt+0xc690>
   1d95c:	ldr	r3, [fp, #-12]
   1d960:	add	r3, r3, #1
   1d964:	str	r3, [fp, #-12]
   1d968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d96c:	ldr	r2, [r3, #24]
   1d970:	ldr	r3, [fp, #-12]
   1d974:	cmp	r2, r3
   1d978:	bhi	1d938 <__assert_fail@plt+0xc648>
   1d97c:	b	1d984 <__assert_fail@plt+0xc694>
   1d980:	nop	{0}
   1d984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d988:	ldr	r2, [r3, #24]
   1d98c:	ldr	r3, [fp, #-12]
   1d990:	cmp	r2, r3
   1d994:	bne	1d9b4 <__assert_fail@plt+0xc6c4>
   1d998:	ldr	r3, [fp, #-16]
   1d99c:	ldr	r3, [r3, #132]	; 0x84
   1d9a0:	mov	r0, r3
   1d9a4:	bl	31b28 <__assert_fail@plt+0x20838>
   1d9a8:	ldr	r3, [fp, #-16]
   1d9ac:	mov	r2, #0
   1d9b0:	str	r2, [r3, #132]	; 0x84
   1d9b4:	ldr	r3, [fp, #-16]
   1d9b8:	ldr	r3, [r3, #52]	; 0x34
   1d9bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d9c0:	movw	r1, #57136	; 0xdf30
   1d9c4:	movt	r1, #1
   1d9c8:	mov	r0, r3
   1d9cc:	bl	1db98 <__assert_fail@plt+0xc8a8>
   1d9d0:	str	r0, [fp, #-8]
   1d9d4:	ldr	r3, [fp, #-8]
   1d9d8:	cmp	r3, #0
   1d9dc:	movne	r3, #1
   1d9e0:	moveq	r3, #0
   1d9e4:	uxtb	r3, r3
   1d9e8:	cmp	r3, #0
   1d9ec:	beq	1d9f8 <__assert_fail@plt+0xc708>
   1d9f0:	ldr	r3, [fp, #-8]
   1d9f4:	b	1db84 <__assert_fail@plt+0xc894>
   1d9f8:	ldr	r3, [fp, #-16]
   1d9fc:	ldr	r3, [r3, #52]	; 0x34
   1da00:	ldr	r2, [fp, #-16]
   1da04:	movw	r1, #57972	; 0xe274
   1da08:	movt	r1, #1
   1da0c:	mov	r0, r3
   1da10:	bl	1db98 <__assert_fail@plt+0xc8a8>
   1da14:	str	r0, [fp, #-8]
   1da18:	ldr	r3, [fp, #-8]
   1da1c:	cmp	r3, #0
   1da20:	movne	r3, #1
   1da24:	moveq	r3, #0
   1da28:	uxtb	r3, r3
   1da2c:	cmp	r3, #0
   1da30:	beq	1da3c <__assert_fail@plt+0xc74c>
   1da34:	ldr	r3, [fp, #-8]
   1da38:	b	1db84 <__assert_fail@plt+0xc894>
   1da3c:	ldr	r3, [fp, #-16]
   1da40:	ldr	r3, [r3, #52]	; 0x34
   1da44:	ldr	r2, [fp, #-16]
   1da48:	movw	r1, #58244	; 0xe384
   1da4c:	movt	r1, #1
   1da50:	mov	r0, r3
   1da54:	bl	1dcb8 <__assert_fail@plt+0xc9c8>
   1da58:	ldr	r3, [fp, #-16]
   1da5c:	ldr	r3, [r3, #52]	; 0x34
   1da60:	ldr	r2, [fp, #-16]
   1da64:	movw	r1, #58456	; 0xe458
   1da68:	movt	r1, #1
   1da6c:	mov	r0, r3
   1da70:	bl	1dcb8 <__assert_fail@plt+0xc9c8>
   1da74:	str	r0, [fp, #-8]
   1da78:	ldr	r3, [fp, #-8]
   1da7c:	cmp	r3, #0
   1da80:	movne	r3, #1
   1da84:	moveq	r3, #0
   1da88:	uxtb	r3, r3
   1da8c:	cmp	r3, #0
   1da90:	beq	1da9c <__assert_fail@plt+0xc7ac>
   1da94:	ldr	r3, [fp, #-8]
   1da98:	b	1db84 <__assert_fail@plt+0xc894>
   1da9c:	ldr	r0, [fp, #-16]
   1daa0:	bl	1f048 <__assert_fail@plt+0xdd58>
   1daa4:	str	r0, [fp, #-8]
   1daa8:	ldr	r3, [fp, #-8]
   1daac:	cmp	r3, #0
   1dab0:	movne	r3, #1
   1dab4:	moveq	r3, #0
   1dab8:	uxtb	r3, r3
   1dabc:	cmp	r3, #0
   1dac0:	beq	1dacc <__assert_fail@plt+0xc7dc>
   1dac4:	ldr	r3, [fp, #-8]
   1dac8:	b	1db84 <__assert_fail@plt+0xc894>
   1dacc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dad0:	ldrb	r3, [r3, #28]
   1dad4:	and	r3, r3, #16
   1dad8:	uxtb	r3, r3
   1dadc:	cmp	r3, #0
   1dae0:	bne	1db0c <__assert_fail@plt+0xc81c>
   1dae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dae8:	ldr	r3, [r3, #24]
   1daec:	cmp	r3, #0
   1daf0:	beq	1db0c <__assert_fail@plt+0xc81c>
   1daf4:	ldr	r3, [fp, #-16]
   1daf8:	ldrb	r3, [r3, #88]	; 0x58
   1dafc:	and	r3, r3, #1
   1db00:	uxtb	r3, r3
   1db04:	cmp	r3, #0
   1db08:	bne	1db1c <__assert_fail@plt+0xc82c>
   1db0c:	ldr	r3, [fp, #-16]
   1db10:	ldr	r3, [r3, #76]	; 0x4c
   1db14:	cmp	r3, #0
   1db18:	beq	1db80 <__assert_fail@plt+0xc890>
   1db1c:	ldr	r3, [fp, #-16]
   1db20:	ldr	r2, [r3, #8]
   1db24:	mov	r3, r2
   1db28:	lsl	r3, r3, #1
   1db2c:	add	r3, r3, r2
   1db30:	lsl	r3, r3, #2
   1db34:	mov	r0, r3
   1db38:	bl	3134c <__assert_fail@plt+0x2005c>
   1db3c:	mov	r3, r0
   1db40:	mov	r2, r3
   1db44:	ldr	r3, [fp, #-16]
   1db48:	str	r2, [r3, #28]
   1db4c:	ldr	r3, [fp, #-16]
   1db50:	ldr	r3, [r3, #28]
   1db54:	cmp	r3, #0
   1db58:	moveq	r3, #1
   1db5c:	movne	r3, #0
   1db60:	uxtb	r3, r3
   1db64:	cmp	r3, #0
   1db68:	beq	1db74 <__assert_fail@plt+0xc884>
   1db6c:	mov	r3, #12
   1db70:	b	1db84 <__assert_fail@plt+0xc894>
   1db74:	ldr	r0, [fp, #-16]
   1db78:	bl	1eec0 <__assert_fail@plt+0xdbd0>
   1db7c:	str	r0, [fp, #-8]
   1db80:	ldr	r3, [fp, #-8]
   1db84:	mov	r0, r3
   1db88:	sub	sp, fp, #4
   1db8c:	ldr	fp, [sp]
   1db90:	add	sp, sp, #4
   1db94:	pop	{pc}		; (ldr pc, [sp], #4)
   1db98:	str	fp, [sp, #-8]!
   1db9c:	str	lr, [sp, #4]
   1dba0:	add	fp, sp, #4
   1dba4:	sub	sp, sp, #32
   1dba8:	str	r0, [fp, #-24]	; 0xffffffe8
   1dbac:	str	r1, [fp, #-28]	; 0xffffffe4
   1dbb0:	str	r2, [fp, #-32]	; 0xffffffe0
   1dbb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dbb8:	str	r3, [fp, #-8]
   1dbbc:	b	1dbec <__assert_fail@plt+0xc8fc>
   1dbc0:	ldr	r3, [fp, #-8]
   1dbc4:	ldr	r3, [r3, #4]
   1dbc8:	cmp	r3, #0
   1dbcc:	beq	1dbe0 <__assert_fail@plt+0xc8f0>
   1dbd0:	ldr	r3, [fp, #-8]
   1dbd4:	ldr	r3, [r3, #4]
   1dbd8:	str	r3, [fp, #-8]
   1dbdc:	b	1dbec <__assert_fail@plt+0xc8fc>
   1dbe0:	ldr	r3, [fp, #-8]
   1dbe4:	ldr	r3, [r3, #8]
   1dbe8:	str	r3, [fp, #-8]
   1dbec:	ldr	r3, [fp, #-8]
   1dbf0:	ldr	r3, [r3, #4]
   1dbf4:	cmp	r3, #0
   1dbf8:	bne	1dbc0 <__assert_fail@plt+0xc8d0>
   1dbfc:	ldr	r3, [fp, #-8]
   1dc00:	ldr	r3, [r3, #8]
   1dc04:	cmp	r3, #0
   1dc08:	bne	1dbc0 <__assert_fail@plt+0xc8d0>
   1dc0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc10:	ldr	r1, [fp, #-8]
   1dc14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dc18:	blx	r3
   1dc1c:	str	r0, [fp, #-12]
   1dc20:	ldr	r3, [fp, #-12]
   1dc24:	cmp	r3, #0
   1dc28:	movne	r3, #1
   1dc2c:	moveq	r3, #0
   1dc30:	uxtb	r3, r3
   1dc34:	cmp	r3, #0
   1dc38:	beq	1dc44 <__assert_fail@plt+0xc954>
   1dc3c:	ldr	r3, [fp, #-12]
   1dc40:	b	1dca4 <__assert_fail@plt+0xc9b4>
   1dc44:	ldr	r3, [fp, #-8]
   1dc48:	ldr	r3, [r3]
   1dc4c:	cmp	r3, #0
   1dc50:	bne	1dc5c <__assert_fail@plt+0xc96c>
   1dc54:	mov	r3, #0
   1dc58:	b	1dca4 <__assert_fail@plt+0xc9b4>
   1dc5c:	ldr	r3, [fp, #-8]
   1dc60:	str	r3, [fp, #-16]
   1dc64:	ldr	r3, [fp, #-8]
   1dc68:	ldr	r3, [r3]
   1dc6c:	str	r3, [fp, #-8]
   1dc70:	ldr	r3, [fp, #-8]
   1dc74:	ldr	r3, [r3, #8]
   1dc78:	ldr	r2, [fp, #-16]
   1dc7c:	cmp	r2, r3
   1dc80:	beq	1dc0c <__assert_fail@plt+0xc91c>
   1dc84:	ldr	r3, [fp, #-8]
   1dc88:	ldr	r3, [r3, #8]
   1dc8c:	cmp	r3, #0
   1dc90:	beq	1dc0c <__assert_fail@plt+0xc91c>
   1dc94:	ldr	r3, [fp, #-8]
   1dc98:	ldr	r3, [r3, #8]
   1dc9c:	str	r3, [fp, #-8]
   1dca0:	b	1dbec <__assert_fail@plt+0xc8fc>
   1dca4:	mov	r0, r3
   1dca8:	sub	sp, fp, #4
   1dcac:	ldr	fp, [sp]
   1dcb0:	add	sp, sp, #4
   1dcb4:	pop	{pc}		; (ldr pc, [sp], #4)
   1dcb8:	str	fp, [sp, #-8]!
   1dcbc:	str	lr, [sp, #4]
   1dcc0:	add	fp, sp, #4
   1dcc4:	sub	sp, sp, #32
   1dcc8:	str	r0, [fp, #-24]	; 0xffffffe8
   1dccc:	str	r1, [fp, #-28]	; 0xffffffe4
   1dcd0:	str	r2, [fp, #-32]	; 0xffffffe0
   1dcd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dcd8:	str	r3, [fp, #-8]
   1dcdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dce0:	ldr	r1, [fp, #-8]
   1dce4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dce8:	blx	r3
   1dcec:	str	r0, [fp, #-16]
   1dcf0:	ldr	r3, [fp, #-16]
   1dcf4:	cmp	r3, #0
   1dcf8:	movne	r3, #1
   1dcfc:	moveq	r3, #0
   1dd00:	uxtb	r3, r3
   1dd04:	cmp	r3, #0
   1dd08:	beq	1dd14 <__assert_fail@plt+0xca24>
   1dd0c:	ldr	r3, [fp, #-16]
   1dd10:	b	1dd9c <__assert_fail@plt+0xcaac>
   1dd14:	ldr	r3, [fp, #-8]
   1dd18:	ldr	r3, [r3, #4]
   1dd1c:	cmp	r3, #0
   1dd20:	beq	1dd34 <__assert_fail@plt+0xca44>
   1dd24:	ldr	r3, [fp, #-8]
   1dd28:	ldr	r3, [r3, #4]
   1dd2c:	str	r3, [fp, #-8]
   1dd30:	b	1dcdc <__assert_fail@plt+0xc9ec>
   1dd34:	mov	r3, #0
   1dd38:	str	r3, [fp, #-12]
   1dd3c:	b	1dd68 <__assert_fail@plt+0xca78>
   1dd40:	ldr	r3, [fp, #-8]
   1dd44:	str	r3, [fp, #-12]
   1dd48:	ldr	r3, [fp, #-8]
   1dd4c:	ldr	r3, [r3]
   1dd50:	str	r3, [fp, #-8]
   1dd54:	ldr	r3, [fp, #-8]
   1dd58:	cmp	r3, #0
   1dd5c:	bne	1dd68 <__assert_fail@plt+0xca78>
   1dd60:	mov	r3, #0
   1dd64:	b	1dd9c <__assert_fail@plt+0xcaac>
   1dd68:	ldr	r3, [fp, #-8]
   1dd6c:	ldr	r3, [r3, #8]
   1dd70:	ldr	r2, [fp, #-12]
   1dd74:	cmp	r2, r3
   1dd78:	beq	1dd40 <__assert_fail@plt+0xca50>
   1dd7c:	ldr	r3, [fp, #-8]
   1dd80:	ldr	r3, [r3, #8]
   1dd84:	cmp	r3, #0
   1dd88:	beq	1dd40 <__assert_fail@plt+0xca50>
   1dd8c:	ldr	r3, [fp, #-8]
   1dd90:	ldr	r3, [r3, #8]
   1dd94:	str	r3, [fp, #-8]
   1dd98:	b	1dcdc <__assert_fail@plt+0xc9ec>
   1dd9c:	mov	r0, r3
   1dda0:	sub	sp, fp, #4
   1dda4:	ldr	fp, [sp]
   1dda8:	add	sp, sp, #4
   1ddac:	pop	{pc}		; (ldr pc, [sp], #4)
   1ddb0:	push	{fp}		; (str fp, [sp, #-4]!)
   1ddb4:	add	fp, sp, #0
   1ddb8:	sub	sp, sp, #28
   1ddbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ddc0:	str	r1, [fp, #-28]	; 0xffffffe4
   1ddc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddc8:	str	r3, [fp, #-8]
   1ddcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddd0:	ldrb	r3, [r3, #24]
   1ddd4:	cmp	r3, #4
   1ddd8:	bne	1de40 <__assert_fail@plt+0xcb50>
   1dddc:	ldr	r3, [fp, #-8]
   1dde0:	ldr	r3, [r3, #132]	; 0x84
   1dde4:	cmp	r3, #0
   1dde8:	beq	1de40 <__assert_fail@plt+0xcb50>
   1ddec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddf0:	ldr	r3, [r3, #20]
   1ddf4:	str	r3, [fp, #-12]
   1ddf8:	ldr	r3, [fp, #-8]
   1ddfc:	ldr	r2, [r3, #132]	; 0x84
   1de00:	ldr	r3, [fp, #-12]
   1de04:	lsl	r3, r3, #2
   1de08:	add	r3, r2, r3
   1de0c:	ldr	r2, [r3]
   1de10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de14:	str	r2, [r3, #20]
   1de18:	ldr	r3, [fp, #-8]
   1de1c:	ldr	r3, [r3, #80]	; 0x50
   1de20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1de24:	ldr	r2, [r2, #20]
   1de28:	mov	r1, #1
   1de2c:	lsl	r2, r1, r2
   1de30:	orr	r2, r3, r2
   1de34:	ldr	r3, [fp, #-8]
   1de38:	str	r2, [r3, #80]	; 0x50
   1de3c:	b	1df1c <__assert_fail@plt+0xcc2c>
   1de40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de44:	ldrb	r3, [r3, #24]
   1de48:	cmp	r3, #17
   1de4c:	bne	1df1c <__assert_fail@plt+0xcc2c>
   1de50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de54:	ldr	r3, [r3, #4]
   1de58:	cmp	r3, #0
   1de5c:	beq	1df1c <__assert_fail@plt+0xcc2c>
   1de60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de64:	ldr	r3, [r3, #4]
   1de68:	ldrb	r3, [r3, #24]
   1de6c:	cmp	r3, #17
   1de70:	bne	1df1c <__assert_fail@plt+0xcc2c>
   1de74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de78:	ldr	r3, [r3, #4]
   1de7c:	ldr	r3, [r3, #20]
   1de80:	str	r3, [fp, #-16]
   1de84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de88:	ldr	r3, [r3, #4]
   1de8c:	ldr	r2, [r3, #4]
   1de90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de94:	str	r2, [r3, #4]
   1de98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de9c:	ldr	r3, [r3, #4]
   1dea0:	cmp	r3, #0
   1dea4:	beq	1deb8 <__assert_fail@plt+0xcbc8>
   1dea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1deac:	ldr	r3, [r3, #4]
   1deb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1deb4:	str	r2, [r3]
   1deb8:	ldr	r3, [fp, #-8]
   1debc:	ldr	r2, [r3, #132]	; 0x84
   1dec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dec4:	ldr	r3, [r3, #20]
   1dec8:	lsl	r3, r3, #2
   1decc:	add	r2, r2, r3
   1ded0:	ldr	r3, [fp, #-8]
   1ded4:	ldr	r1, [r3, #132]	; 0x84
   1ded8:	ldr	r3, [fp, #-16]
   1dedc:	lsl	r3, r3, #2
   1dee0:	add	r3, r1, r3
   1dee4:	ldr	r2, [r2]
   1dee8:	str	r2, [r3]
   1deec:	ldr	r3, [fp, #-16]
   1def0:	cmp	r3, #31
   1def4:	bgt	1df1c <__assert_fail@plt+0xcc2c>
   1def8:	ldr	r3, [fp, #-8]
   1defc:	ldr	r2, [r3, #80]	; 0x50
   1df00:	mov	r1, #1
   1df04:	ldr	r3, [fp, #-16]
   1df08:	lsl	r3, r1, r3
   1df0c:	mvn	r3, r3
   1df10:	and	r2, r2, r3
   1df14:	ldr	r3, [fp, #-8]
   1df18:	str	r2, [r3, #80]	; 0x50
   1df1c:	mov	r3, #0
   1df20:	mov	r0, r3
   1df24:	add	sp, fp, #0
   1df28:	pop	{fp}		; (ldr fp, [sp], #4)
   1df2c:	bx	lr
   1df30:	str	fp, [sp, #-8]!
   1df34:	str	lr, [sp, #4]
   1df38:	add	fp, sp, #4
   1df3c:	sub	sp, sp, #16
   1df40:	str	r0, [fp, #-16]
   1df44:	str	r1, [fp, #-20]	; 0xffffffec
   1df48:	ldr	r3, [fp, #-16]
   1df4c:	str	r3, [fp, #-8]
   1df50:	mov	r3, #0
   1df54:	str	r3, [fp, #-12]
   1df58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df5c:	ldr	r3, [r3, #4]
   1df60:	cmp	r3, #0
   1df64:	beq	1dfc0 <__assert_fail@plt+0xccd0>
   1df68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df6c:	ldr	r3, [r3, #4]
   1df70:	ldrb	r3, [r3, #24]
   1df74:	cmp	r3, #17
   1df78:	bne	1dfc0 <__assert_fail@plt+0xccd0>
   1df7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df80:	ldr	r2, [r3, #4]
   1df84:	sub	r3, fp, #12
   1df88:	ldr	r1, [fp, #-8]
   1df8c:	mov	r0, r3
   1df90:	bl	1e040 <__assert_fail@plt+0xcd50>
   1df94:	mov	r2, r0
   1df98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df9c:	str	r2, [r3, #4]
   1dfa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfa4:	ldr	r3, [r3, #4]
   1dfa8:	cmp	r3, #0
   1dfac:	beq	1dfc0 <__assert_fail@plt+0xccd0>
   1dfb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfb4:	ldr	r3, [r3, #4]
   1dfb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dfbc:	str	r2, [r3]
   1dfc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfc4:	ldr	r3, [r3, #8]
   1dfc8:	cmp	r3, #0
   1dfcc:	beq	1e028 <__assert_fail@plt+0xcd38>
   1dfd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfd4:	ldr	r3, [r3, #8]
   1dfd8:	ldrb	r3, [r3, #24]
   1dfdc:	cmp	r3, #17
   1dfe0:	bne	1e028 <__assert_fail@plt+0xcd38>
   1dfe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfe8:	ldr	r2, [r3, #8]
   1dfec:	sub	r3, fp, #12
   1dff0:	ldr	r1, [fp, #-8]
   1dff4:	mov	r0, r3
   1dff8:	bl	1e040 <__assert_fail@plt+0xcd50>
   1dffc:	mov	r2, r0
   1e000:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e004:	str	r2, [r3, #8]
   1e008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e00c:	ldr	r3, [r3, #8]
   1e010:	cmp	r3, #0
   1e014:	beq	1e028 <__assert_fail@plt+0xcd38>
   1e018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e01c:	ldr	r3, [r3, #8]
   1e020:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e024:	str	r2, [r3]
   1e028:	ldr	r3, [fp, #-12]
   1e02c:	mov	r0, r3
   1e030:	sub	sp, fp, #4
   1e034:	ldr	fp, [sp]
   1e038:	add	sp, sp, #4
   1e03c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e040:	str	fp, [sp, #-8]!
   1e044:	str	lr, [sp, #4]
   1e048:	add	fp, sp, #4
   1e04c:	sub	sp, sp, #40	; 0x28
   1e050:	str	r0, [fp, #-32]	; 0xffffffe0
   1e054:	str	r1, [fp, #-36]	; 0xffffffdc
   1e058:	str	r2, [fp, #-40]	; 0xffffffd8
   1e05c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e060:	ldr	r3, [r3]
   1e064:	str	r3, [fp, #-8]
   1e068:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e06c:	ldr	r3, [r3, #4]
   1e070:	str	r3, [fp, #-12]
   1e074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e078:	ldrb	r3, [r3, #28]
   1e07c:	and	r3, r3, #16
   1e080:	uxtb	r3, r3
   1e084:	cmp	r3, #0
   1e088:	beq	1e0d8 <__assert_fail@plt+0xcde8>
   1e08c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e090:	ldr	r3, [r3, #4]
   1e094:	cmp	r3, #0
   1e098:	beq	1e0d8 <__assert_fail@plt+0xcde8>
   1e09c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e0a0:	ldr	r3, [r3, #20]
   1e0a4:	cmp	r3, #31
   1e0a8:	bgt	1e0cc <__assert_fail@plt+0xcddc>
   1e0ac:	ldr	r3, [fp, #-8]
   1e0b0:	ldr	r2, [r3, #80]	; 0x50
   1e0b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e0b8:	ldr	r3, [r3, #20]
   1e0bc:	lsr	r3, r2, r3
   1e0c0:	and	r3, r3, #1
   1e0c4:	cmp	r3, #0
   1e0c8:	bne	1e0d8 <__assert_fail@plt+0xcde8>
   1e0cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e0d0:	ldr	r3, [r3, #4]
   1e0d4:	b	1e260 <__assert_fail@plt+0xcf70>
   1e0d8:	mov	r3, #8
   1e0dc:	mov	r2, #0
   1e0e0:	mov	r1, #0
   1e0e4:	ldr	r0, [fp, #-8]
   1e0e8:	bl	242f0 <__assert_fail@plt+0x13000>
   1e0ec:	str	r0, [fp, #-16]
   1e0f0:	mov	r3, #9
   1e0f4:	mov	r2, #0
   1e0f8:	mov	r1, #0
   1e0fc:	ldr	r0, [fp, #-8]
   1e100:	bl	242f0 <__assert_fail@plt+0x13000>
   1e104:	str	r0, [fp, #-20]	; 0xffffffec
   1e108:	ldr	r3, [fp, #-12]
   1e10c:	cmp	r3, #0
   1e110:	beq	1e130 <__assert_fail@plt+0xce40>
   1e114:	mov	r3, #16
   1e118:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e11c:	ldr	r1, [fp, #-12]
   1e120:	ldr	r0, [fp, #-8]
   1e124:	bl	242f0 <__assert_fail@plt+0x13000>
   1e128:	mov	r3, r0
   1e12c:	b	1e134 <__assert_fail@plt+0xce44>
   1e130:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e134:	str	r3, [fp, #-24]	; 0xffffffe8
   1e138:	mov	r3, #16
   1e13c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e140:	ldr	r1, [fp, #-16]
   1e144:	ldr	r0, [fp, #-8]
   1e148:	bl	242f0 <__assert_fail@plt+0x13000>
   1e14c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e150:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e154:	cmp	r3, #0
   1e158:	moveq	r3, #1
   1e15c:	movne	r3, #0
   1e160:	uxtb	r3, r3
   1e164:	cmp	r3, #0
   1e168:	bne	1e188 <__assert_fail@plt+0xce98>
   1e16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e170:	cmp	r3, #0
   1e174:	moveq	r3, #1
   1e178:	movne	r3, #0
   1e17c:	uxtb	r3, r3
   1e180:	cmp	r3, #0
   1e184:	beq	1e190 <__assert_fail@plt+0xcea0>
   1e188:	mov	r3, #1
   1e18c:	b	1e194 <__assert_fail@plt+0xcea4>
   1e190:	mov	r3, #0
   1e194:	cmp	r3, #0
   1e198:	bne	1e1b8 <__assert_fail@plt+0xcec8>
   1e19c:	ldr	r3, [fp, #-16]
   1e1a0:	cmp	r3, #0
   1e1a4:	moveq	r3, #1
   1e1a8:	movne	r3, #0
   1e1ac:	uxtb	r3, r3
   1e1b0:	cmp	r3, #0
   1e1b4:	beq	1e1c0 <__assert_fail@plt+0xced0>
   1e1b8:	mov	r3, #1
   1e1bc:	b	1e1c4 <__assert_fail@plt+0xced4>
   1e1c0:	mov	r3, #0
   1e1c4:	cmp	r3, #0
   1e1c8:	bne	1e1e8 <__assert_fail@plt+0xcef8>
   1e1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e1d0:	cmp	r3, #0
   1e1d4:	moveq	r3, #1
   1e1d8:	movne	r3, #0
   1e1dc:	uxtb	r3, r3
   1e1e0:	cmp	r3, #0
   1e1e4:	beq	1e1fc <__assert_fail@plt+0xcf0c>
   1e1e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e1ec:	mov	r2, #12
   1e1f0:	str	r2, [r3]
   1e1f4:	mov	r3, #0
   1e1f8:	b	1e260 <__assert_fail@plt+0xcf70>
   1e1fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e200:	ldr	r2, [r3, #20]
   1e204:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e208:	str	r2, [r3, #20]
   1e20c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e210:	ldr	r2, [r3, #20]
   1e214:	ldr	r3, [fp, #-16]
   1e218:	str	r2, [r3, #20]
   1e21c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e220:	ldrb	r3, [r3, #26]
   1e224:	ubfx	r3, r3, #3, #1
   1e228:	uxtb	r1, r3
   1e22c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e230:	ldrb	r3, [r2, #26]
   1e234:	bfi	r3, r1, #3, #1
   1e238:	strb	r3, [r2, #26]
   1e23c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e240:	ldrb	r3, [r3, #26]
   1e244:	ubfx	r3, r3, #3, #1
   1e248:	uxtb	r1, r3
   1e24c:	ldr	r2, [fp, #-16]
   1e250:	ldrb	r3, [r2, #26]
   1e254:	bfi	r3, r1, #3, #1
   1e258:	strb	r3, [r2, #26]
   1e25c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e260:	mov	r0, r3
   1e264:	sub	sp, fp, #4
   1e268:	ldr	fp, [sp]
   1e26c:	add	sp, sp, #4
   1e270:	pop	{pc}		; (ldr pc, [sp], #4)
   1e274:	str	fp, [sp, #-8]!
   1e278:	str	lr, [sp, #4]
   1e27c:	add	fp, sp, #4
   1e280:	sub	sp, sp, #16
   1e284:	str	r0, [fp, #-16]
   1e288:	str	r1, [fp, #-20]	; 0xffffffec
   1e28c:	ldr	r3, [fp, #-16]
   1e290:	str	r3, [fp, #-8]
   1e294:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e298:	ldrb	r3, [r3, #24]
   1e29c:	cmp	r3, #16
   1e2a0:	bne	1e2d0 <__assert_fail@plt+0xcfe0>
   1e2a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2a8:	ldr	r3, [r3, #4]
   1e2ac:	ldr	r2, [r3, #12]
   1e2b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2b4:	str	r2, [r3, #12]
   1e2b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2bc:	ldr	r3, [r3, #4]
   1e2c0:	ldr	r2, [r3, #28]
   1e2c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2c8:	str	r2, [r3, #28]
   1e2cc:	b	1e36c <__assert_fail@plt+0xd07c>
   1e2d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e2d8:	str	r2, [r3, #12]
   1e2dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2e0:	add	r3, r3, #20
   1e2e4:	ldm	r3, {r1, r2}
   1e2e8:	ldr	r0, [fp, #-8]
   1e2ec:	bl	1a4b4 <__assert_fail@plt+0x91c4>
   1e2f0:	mov	r2, r0
   1e2f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2f8:	str	r2, [r3, #28]
   1e2fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e300:	ldr	r3, [r3, #28]
   1e304:	cmn	r3, #1
   1e308:	moveq	r3, #1
   1e30c:	movne	r3, #0
   1e310:	uxtb	r3, r3
   1e314:	cmp	r3, #0
   1e318:	beq	1e324 <__assert_fail@plt+0xd034>
   1e31c:	mov	r3, #12
   1e320:	b	1e370 <__assert_fail@plt+0xd080>
   1e324:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e328:	ldrb	r3, [r3, #24]
   1e32c:	cmp	r3, #12
   1e330:	bne	1e36c <__assert_fail@plt+0xd07c>
   1e334:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e338:	ldr	r1, [r3, #20]
   1e33c:	ldr	r3, [fp, #-8]
   1e340:	ldr	r2, [r3]
   1e344:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e348:	ldr	r3, [r3, #28]
   1e34c:	lsl	r3, r3, #3
   1e350:	add	r2, r2, r3
   1e354:	mov	r3, r1
   1e358:	ubfx	r3, r3, #0, #10
   1e35c:	uxth	r1, r3
   1e360:	ldr	r3, [r2, #4]
   1e364:	bfi	r3, r1, #8, #10
   1e368:	str	r3, [r2, #4]
   1e36c:	mov	r3, #0
   1e370:	mov	r0, r3
   1e374:	sub	sp, fp, #4
   1e378:	ldr	fp, [sp]
   1e37c:	add	sp, sp, #4
   1e380:	pop	{pc}		; (ldr pc, [sp], #4)
   1e384:	push	{fp}		; (str fp, [sp, #-4]!)
   1e388:	add	fp, sp, #0
   1e38c:	sub	sp, sp, #12
   1e390:	str	r0, [fp, #-8]
   1e394:	str	r1, [fp, #-12]
   1e398:	ldr	r3, [fp, #-12]
   1e39c:	ldrb	r3, [r3, #24]
   1e3a0:	cmp	r3, #11
   1e3a4:	beq	1e3b4 <__assert_fail@plt+0xd0c4>
   1e3a8:	cmp	r3, #16
   1e3ac:	beq	1e3c8 <__assert_fail@plt+0xd0d8>
   1e3b0:	b	1e3f8 <__assert_fail@plt+0xd108>
   1e3b4:	ldr	r3, [fp, #-12]
   1e3b8:	ldr	r3, [r3, #4]
   1e3bc:	ldr	r2, [fp, #-12]
   1e3c0:	str	r2, [r3, #16]
   1e3c4:	b	1e444 <__assert_fail@plt+0xd154>
   1e3c8:	ldr	r3, [fp, #-12]
   1e3cc:	ldr	r2, [r3, #8]
   1e3d0:	ldr	r3, [fp, #-12]
   1e3d4:	ldr	r3, [r3, #4]
   1e3d8:	ldr	r2, [r2, #12]
   1e3dc:	str	r2, [r3, #16]
   1e3e0:	ldr	r3, [fp, #-12]
   1e3e4:	ldr	r3, [r3, #8]
   1e3e8:	ldr	r2, [fp, #-12]
   1e3ec:	ldr	r2, [r2, #16]
   1e3f0:	str	r2, [r3, #16]
   1e3f4:	b	1e444 <__assert_fail@plt+0xd154>
   1e3f8:	ldr	r3, [fp, #-12]
   1e3fc:	ldr	r3, [r3, #4]
   1e400:	cmp	r3, #0
   1e404:	beq	1e41c <__assert_fail@plt+0xd12c>
   1e408:	ldr	r3, [fp, #-12]
   1e40c:	ldr	r3, [r3, #4]
   1e410:	ldr	r2, [fp, #-12]
   1e414:	ldr	r2, [r2, #16]
   1e418:	str	r2, [r3, #16]
   1e41c:	ldr	r3, [fp, #-12]
   1e420:	ldr	r3, [r3, #8]
   1e424:	cmp	r3, #0
   1e428:	beq	1e440 <__assert_fail@plt+0xd150>
   1e42c:	ldr	r3, [fp, #-12]
   1e430:	ldr	r3, [r3, #8]
   1e434:	ldr	r2, [fp, #-12]
   1e438:	ldr	r2, [r2, #16]
   1e43c:	str	r2, [r3, #16]
   1e440:	nop	{0}
   1e444:	mov	r3, #0
   1e448:	mov	r0, r3
   1e44c:	add	sp, fp, #0
   1e450:	pop	{fp}		; (ldr fp, [sp], #4)
   1e454:	bx	lr
   1e458:	str	fp, [sp, #-8]!
   1e45c:	str	lr, [sp, #4]
   1e460:	add	fp, sp, #4
   1e464:	sub	sp, sp, #32
   1e468:	str	r0, [fp, #-32]	; 0xffffffe0
   1e46c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e474:	str	r3, [fp, #-20]	; 0xffffffec
   1e478:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e47c:	ldr	r3, [r3, #28]
   1e480:	str	r3, [fp, #-24]	; 0xffffffe8
   1e484:	mov	r3, #0
   1e488:	str	r3, [fp, #-8]
   1e48c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e490:	ldrb	r3, [r3, #24]
   1e494:	sub	r3, r3, #2
   1e498:	cmp	r3, #14
   1e49c:	ldrls	pc, [pc, r3, lsl #2]
   1e4a0:	b	1e674 <__assert_fail@plt+0xd384>
   1e4a4:	andeq	lr, r1, r0, ror #9
   1e4a8:	andeq	lr, r1, r4, ror r6
   1e4ac:	strdeq	lr, [r1], -r8
   1e4b0:	andeq	lr, r1, r4, ror r6
   1e4b4:	andeq	lr, r1, r4, ror r6
   1e4b8:	andeq	lr, r1, r4, ror r6
   1e4bc:			; <UNDEFINED> instruction: 0x0001e5b8
   1e4c0:			; <UNDEFINED> instruction: 0x0001e5b8
   1e4c4:	strdeq	lr, [r1], -r0
   1e4c8:	strdeq	lr, [r1], -r0
   1e4cc:			; <UNDEFINED> instruction: 0x0001e5b8
   1e4d0:	andeq	lr, r1, r4, ror r6
   1e4d4:	andeq	lr, r1, r4, ror r6
   1e4d8:	andeq	lr, r1, r4, ror r6
   1e4dc:	andeq	lr, r1, ip, lsr #13
   1e4e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e4e4:	ldr	r3, [r3, #16]
   1e4e8:	cmp	r3, #0
   1e4ec:	b	1e6b8 <__assert_fail@plt+0xd3c8>
   1e4f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e4f4:	ldrb	r3, [r2, #88]	; 0x58
   1e4f8:	orr	r3, r3, #1
   1e4fc:	strb	r3, [r2, #88]	; 0x58
   1e500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e504:	ldr	r3, [r3, #4]
   1e508:	cmp	r3, #0
   1e50c:	beq	1e528 <__assert_fail@plt+0xd238>
   1e510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e514:	ldr	r3, [r3, #4]
   1e518:	ldr	r3, [r3, #12]
   1e51c:	ldr	r3, [r3, #28]
   1e520:	str	r3, [fp, #-12]
   1e524:	b	1e538 <__assert_fail@plt+0xd248>
   1e528:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e52c:	ldr	r3, [r3, #16]
   1e530:	ldr	r3, [r3, #28]
   1e534:	str	r3, [fp, #-12]
   1e538:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e53c:	ldr	r3, [r3, #8]
   1e540:	cmp	r3, #0
   1e544:	beq	1e560 <__assert_fail@plt+0xd270>
   1e548:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e54c:	ldr	r3, [r3, #8]
   1e550:	ldr	r3, [r3, #12]
   1e554:	ldr	r3, [r3, #28]
   1e558:	str	r3, [fp, #-16]
   1e55c:	b	1e570 <__assert_fail@plt+0xd280>
   1e560:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e564:	ldr	r3, [r3, #16]
   1e568:	ldr	r3, [r3, #28]
   1e56c:	str	r3, [fp, #-16]
   1e570:	ldr	r3, [fp, #-12]
   1e574:	cmp	r3, #0
   1e578:	ldr	r3, [fp, #-16]
   1e57c:	cmp	r3, #0
   1e580:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e584:	ldr	r1, [r3, #20]
   1e588:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e58c:	mov	r3, r2
   1e590:	lsl	r3, r3, #1
   1e594:	add	r3, r3, r2
   1e598:	lsl	r3, r3, #2
   1e59c:	add	r3, r1, r3
   1e5a0:	ldr	r2, [fp, #-16]
   1e5a4:	ldr	r1, [fp, #-12]
   1e5a8:	mov	r0, r3
   1e5ac:	bl	19048 <__assert_fail@plt+0x7d58>
   1e5b0:	str	r0, [fp, #-8]
   1e5b4:	b	1e6b8 <__assert_fail@plt+0xd3c8>
   1e5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e5bc:	ldr	r1, [r3, #20]
   1e5c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e5c4:	mov	r3, r2
   1e5c8:	lsl	r3, r3, #1
   1e5cc:	add	r3, r3, r2
   1e5d0:	lsl	r3, r3, #2
   1e5d4:	add	r2, r1, r3
   1e5d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e5dc:	ldr	r3, [r3, #16]
   1e5e0:	ldr	r3, [r3, #28]
   1e5e4:	mov	r1, r3
   1e5e8:	mov	r0, r2
   1e5ec:	bl	18f94 <__assert_fail@plt+0x7ca4>
   1e5f0:	str	r0, [fp, #-8]
   1e5f4:	b	1e6b8 <__assert_fail@plt+0xd3c8>
   1e5f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e5fc:	ldr	r2, [r3, #16]
   1e600:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e604:	ldr	r1, [r3, #12]
   1e608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e60c:	lsl	r3, r3, #2
   1e610:	add	r3, r1, r3
   1e614:	ldr	r2, [r2, #28]
   1e618:	str	r2, [r3]
   1e61c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e620:	ldrb	r3, [r3, #24]
   1e624:	cmp	r3, #4
   1e628:	bne	1e6b4 <__assert_fail@plt+0xd3c4>
   1e62c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e630:	ldr	r1, [r3, #20]
   1e634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e638:	mov	r3, r2
   1e63c:	lsl	r3, r3, #1
   1e640:	add	r3, r3, r2
   1e644:	lsl	r3, r3, #2
   1e648:	add	r0, r1, r3
   1e64c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e650:	ldr	r2, [r3, #12]
   1e654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e658:	lsl	r3, r3, #2
   1e65c:	add	r3, r2, r3
   1e660:	ldr	r3, [r3]
   1e664:	mov	r1, r3
   1e668:	bl	18f94 <__assert_fail@plt+0x7ca4>
   1e66c:	str	r0, [fp, #-8]
   1e670:	b	1e6b4 <__assert_fail@plt+0xd3c4>
   1e674:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e678:	ldrb	r3, [r3, #24]
   1e67c:	and	r3, r3, #8
   1e680:	cmp	r3, #0
   1e684:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e688:	ldr	r2, [r3, #16]
   1e68c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e690:	ldr	r1, [r3, #12]
   1e694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e698:	lsl	r3, r3, #2
   1e69c:	add	r3, r1, r3
   1e6a0:	ldr	r2, [r2, #28]
   1e6a4:	str	r2, [r3]
   1e6a8:	b	1e6b8 <__assert_fail@plt+0xd3c8>
   1e6ac:	nop	{0}
   1e6b0:	b	1e6b8 <__assert_fail@plt+0xd3c8>
   1e6b4:	nop	{0}
   1e6b8:	ldr	r3, [fp, #-8]
   1e6bc:	mov	r0, r3
   1e6c0:	sub	sp, fp, #4
   1e6c4:	ldr	fp, [sp]
   1e6c8:	add	sp, sp, #4
   1e6cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e6d0:	str	fp, [sp, #-8]!
   1e6d4:	str	lr, [sp, #4]
   1e6d8:	add	fp, sp, #4
   1e6dc:	sub	sp, sp, #56	; 0x38
   1e6e0:	str	r0, [fp, #-40]	; 0xffffffd8
   1e6e4:	str	r1, [fp, #-44]	; 0xffffffd4
   1e6e8:	str	r2, [fp, #-48]	; 0xffffffd0
   1e6ec:	str	r3, [fp, #-52]	; 0xffffffcc
   1e6f0:	ldr	r3, [fp, #4]
   1e6f4:	str	r3, [fp, #-16]
   1e6f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e6fc:	str	r3, [fp, #-8]
   1e700:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e704:	str	r3, [fp, #-12]
   1e708:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e70c:	ldr	r2, [r3]
   1e710:	ldr	r3, [fp, #-8]
   1e714:	lsl	r3, r3, #3
   1e718:	add	r3, r2, r3
   1e71c:	ldrb	r3, [r3, #4]
   1e720:	cmp	r3, #4
   1e724:	bne	1e824 <__assert_fail@plt+0xd534>
   1e728:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e72c:	ldr	r2, [r3, #12]
   1e730:	ldr	r3, [fp, #-8]
   1e734:	lsl	r3, r3, #2
   1e738:	add	r3, r2, r3
   1e73c:	ldr	r3, [r3]
   1e740:	str	r3, [fp, #-20]	; 0xffffffec
   1e744:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e748:	ldr	r1, [r3, #20]
   1e74c:	ldr	r2, [fp, #-12]
   1e750:	mov	r3, r2
   1e754:	lsl	r3, r3, #1
   1e758:	add	r3, r3, r2
   1e75c:	lsl	r3, r3, #2
   1e760:	add	r3, r1, r3
   1e764:	mov	r2, #0
   1e768:	str	r2, [r3, #4]
   1e76c:	ldr	r2, [fp, #-16]
   1e770:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e778:	bl	1ed7c <__assert_fail@plt+0xda8c>
   1e77c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e784:	cmn	r3, #1
   1e788:	moveq	r3, #1
   1e78c:	movne	r3, #0
   1e790:	uxtb	r3, r3
   1e794:	cmp	r3, #0
   1e798:	beq	1e7a4 <__assert_fail@plt+0xd4b4>
   1e79c:	mov	r3, #12
   1e7a0:	b	1ec8c <__assert_fail@plt+0xd99c>
   1e7a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e7a8:	ldr	r2, [r3, #12]
   1e7ac:	ldr	r3, [fp, #-8]
   1e7b0:	lsl	r3, r3, #2
   1e7b4:	add	r2, r2, r3
   1e7b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e7bc:	ldr	r1, [r3, #12]
   1e7c0:	ldr	r3, [fp, #-12]
   1e7c4:	lsl	r3, r3, #2
   1e7c8:	add	r3, r1, r3
   1e7cc:	ldr	r2, [r2]
   1e7d0:	str	r2, [r3]
   1e7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e7d8:	ldr	r1, [r3, #20]
   1e7dc:	ldr	r2, [fp, #-12]
   1e7e0:	mov	r3, r2
   1e7e4:	lsl	r3, r3, #1
   1e7e8:	add	r3, r3, r2
   1e7ec:	lsl	r3, r3, #2
   1e7f0:	add	r3, r1, r3
   1e7f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7f8:	mov	r0, r3
   1e7fc:	bl	19eec <__assert_fail@plt+0x8bfc>
   1e800:	mov	r3, r0
   1e804:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e808:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e80c:	eor	r3, r3, #1
   1e810:	uxtb	r3, r3
   1e814:	cmp	r3, #0
   1e818:	beq	1ec70 <__assert_fail@plt+0xd980>
   1e81c:	mov	r3, #12
   1e820:	b	1ec8c <__assert_fail@plt+0xd99c>
   1e824:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e828:	ldr	r1, [r3, #20]
   1e82c:	ldr	r2, [fp, #-8]
   1e830:	mov	r3, r2
   1e834:	lsl	r3, r3, #1
   1e838:	add	r3, r3, r2
   1e83c:	lsl	r3, r3, #2
   1e840:	add	r3, r1, r3
   1e844:	ldr	r3, [r3, #4]
   1e848:	cmp	r3, #0
   1e84c:	bne	1e884 <__assert_fail@plt+0xd594>
   1e850:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e854:	ldr	r2, [r3, #12]
   1e858:	ldr	r3, [fp, #-8]
   1e85c:	lsl	r3, r3, #2
   1e860:	add	r2, r2, r3
   1e864:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e868:	ldr	r1, [r3, #12]
   1e86c:	ldr	r3, [fp, #-12]
   1e870:	lsl	r3, r3, #2
   1e874:	add	r3, r1, r3
   1e878:	ldr	r2, [r2]
   1e87c:	str	r2, [r3]
   1e880:	b	1ec88 <__assert_fail@plt+0xd998>
   1e884:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e888:	ldr	r1, [r3, #20]
   1e88c:	ldr	r2, [fp, #-8]
   1e890:	mov	r3, r2
   1e894:	lsl	r3, r3, #1
   1e898:	add	r3, r3, r2
   1e89c:	lsl	r3, r3, #2
   1e8a0:	add	r3, r1, r3
   1e8a4:	ldr	r3, [r3, #4]
   1e8a8:	cmp	r3, #1
   1e8ac:	bne	1ea2c <__assert_fail@plt+0xd73c>
   1e8b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e8b4:	ldr	r1, [r3, #20]
   1e8b8:	ldr	r2, [fp, #-8]
   1e8bc:	mov	r3, r2
   1e8c0:	lsl	r3, r3, #1
   1e8c4:	add	r3, r3, r2
   1e8c8:	lsl	r3, r3, #2
   1e8cc:	add	r3, r1, r3
   1e8d0:	ldr	r3, [r3, #8]
   1e8d4:	ldr	r3, [r3]
   1e8d8:	str	r3, [fp, #-20]	; 0xffffffec
   1e8dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e8e0:	ldr	r1, [r3, #20]
   1e8e4:	ldr	r2, [fp, #-12]
   1e8e8:	mov	r3, r2
   1e8ec:	lsl	r3, r3, #1
   1e8f0:	add	r3, r3, r2
   1e8f4:	lsl	r3, r3, #2
   1e8f8:	add	r3, r1, r3
   1e8fc:	mov	r2, #0
   1e900:	str	r2, [r3, #4]
   1e904:	ldr	r2, [fp, #-8]
   1e908:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e90c:	cmp	r2, r3
   1e910:	bne	1e974 <__assert_fail@plt+0xd684>
   1e914:	ldr	r2, [fp, #-12]
   1e918:	ldr	r3, [fp, #-8]
   1e91c:	cmp	r2, r3
   1e920:	beq	1e974 <__assert_fail@plt+0xd684>
   1e924:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e928:	ldr	r1, [r3, #20]
   1e92c:	ldr	r2, [fp, #-12]
   1e930:	mov	r3, r2
   1e934:	lsl	r3, r3, #1
   1e938:	add	r3, r3, r2
   1e93c:	lsl	r3, r3, #2
   1e940:	add	r3, r1, r3
   1e944:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e948:	mov	r0, r3
   1e94c:	bl	19eec <__assert_fail@plt+0x8bfc>
   1e950:	mov	r3, r0
   1e954:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e958:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e95c:	eor	r3, r3, #1
   1e960:	uxtb	r3, r3
   1e964:	cmp	r3, #0
   1e968:	beq	1ec84 <__assert_fail@plt+0xd994>
   1e96c:	mov	r3, #12
   1e970:	b	1ec8c <__assert_fail@plt+0xd99c>
   1e974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e978:	ldr	r2, [r3]
   1e97c:	ldr	r3, [fp, #-8]
   1e980:	lsl	r3, r3, #3
   1e984:	add	r3, r2, r3
   1e988:	ldr	r3, [r3, #4]
   1e98c:	ubfx	r3, r3, #8, #10
   1e990:	uxth	r3, r3
   1e994:	mov	r2, r3
   1e998:	ldr	r3, [fp, #-16]
   1e99c:	orr	r3, r3, r2
   1e9a0:	str	r3, [fp, #-16]
   1e9a4:	ldr	r2, [fp, #-16]
   1e9a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e9ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e9b0:	bl	1ed7c <__assert_fail@plt+0xda8c>
   1e9b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9bc:	cmn	r3, #1
   1e9c0:	moveq	r3, #1
   1e9c4:	movne	r3, #0
   1e9c8:	uxtb	r3, r3
   1e9cc:	cmp	r3, #0
   1e9d0:	beq	1e9dc <__assert_fail@plt+0xd6ec>
   1e9d4:	mov	r3, #12
   1e9d8:	b	1ec8c <__assert_fail@plt+0xd99c>
   1e9dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9e0:	ldr	r1, [r3, #20]
   1e9e4:	ldr	r2, [fp, #-12]
   1e9e8:	mov	r3, r2
   1e9ec:	lsl	r3, r3, #1
   1e9f0:	add	r3, r3, r2
   1e9f4:	lsl	r3, r3, #2
   1e9f8:	add	r3, r1, r3
   1e9fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea00:	mov	r0, r3
   1ea04:	bl	19eec <__assert_fail@plt+0x8bfc>
   1ea08:	mov	r3, r0
   1ea0c:	strb	r3, [fp, #-25]	; 0xffffffe7
   1ea10:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1ea14:	eor	r3, r3, #1
   1ea18:	uxtb	r3, r3
   1ea1c:	cmp	r3, #0
   1ea20:	beq	1ec70 <__assert_fail@plt+0xd980>
   1ea24:	mov	r3, #12
   1ea28:	b	1ec8c <__assert_fail@plt+0xd99c>
   1ea2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ea30:	ldr	r1, [r3, #20]
   1ea34:	ldr	r2, [fp, #-8]
   1ea38:	mov	r3, r2
   1ea3c:	lsl	r3, r3, #1
   1ea40:	add	r3, r3, r2
   1ea44:	lsl	r3, r3, #2
   1ea48:	add	r3, r1, r3
   1ea4c:	ldr	r3, [r3, #8]
   1ea50:	ldr	r3, [r3]
   1ea54:	str	r3, [fp, #-20]	; 0xffffffec
   1ea58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ea5c:	ldr	r1, [r3, #20]
   1ea60:	ldr	r2, [fp, #-12]
   1ea64:	mov	r3, r2
   1ea68:	lsl	r3, r3, #1
   1ea6c:	add	r3, r3, r2
   1ea70:	lsl	r3, r3, #2
   1ea74:	add	r3, r1, r3
   1ea78:	mov	r2, #0
   1ea7c:	str	r2, [r3, #4]
   1ea80:	ldr	r2, [fp, #-16]
   1ea84:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ea88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ea8c:	bl	1eca0 <__assert_fail@plt+0xd9b0>
   1ea90:	str	r0, [fp, #-24]	; 0xffffffe8
   1ea94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea98:	cmn	r3, #1
   1ea9c:	bne	1eb6c <__assert_fail@plt+0xd87c>
   1eaa0:	ldr	r2, [fp, #-16]
   1eaa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eaa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1eaac:	bl	1ed7c <__assert_fail@plt+0xda8c>
   1eab0:	str	r0, [fp, #-24]	; 0xffffffe8
   1eab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eab8:	cmn	r3, #1
   1eabc:	moveq	r3, #1
   1eac0:	movne	r3, #0
   1eac4:	uxtb	r3, r3
   1eac8:	cmp	r3, #0
   1eacc:	beq	1ead8 <__assert_fail@plt+0xd7e8>
   1ead0:	mov	r3, #12
   1ead4:	b	1ec8c <__assert_fail@plt+0xd99c>
   1ead8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eadc:	ldr	r1, [r3, #20]
   1eae0:	ldr	r2, [fp, #-12]
   1eae4:	mov	r3, r2
   1eae8:	lsl	r3, r3, #1
   1eaec:	add	r3, r3, r2
   1eaf0:	lsl	r3, r3, #2
   1eaf4:	add	r3, r1, r3
   1eaf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eafc:	mov	r0, r3
   1eb00:	bl	19eec <__assert_fail@plt+0x8bfc>
   1eb04:	mov	r3, r0
   1eb08:	strb	r3, [fp, #-25]	; 0xffffffe7
   1eb0c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1eb10:	eor	r3, r3, #1
   1eb14:	uxtb	r3, r3
   1eb18:	cmp	r3, #0
   1eb1c:	beq	1eb28 <__assert_fail@plt+0xd838>
   1eb20:	mov	r3, #12
   1eb24:	b	1ec8c <__assert_fail@plt+0xd99c>
   1eb28:	ldr	r3, [fp, #-16]
   1eb2c:	str	r3, [sp]
   1eb30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eb34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eb38:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eb3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1eb40:	bl	1e6d0 <__assert_fail@plt+0xd3e0>
   1eb44:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb4c:	cmp	r3, #0
   1eb50:	movne	r3, #1
   1eb54:	moveq	r3, #0
   1eb58:	uxtb	r3, r3
   1eb5c:	cmp	r3, #0
   1eb60:	beq	1ebbc <__assert_fail@plt+0xd8cc>
   1eb64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb68:	b	1ec8c <__assert_fail@plt+0xd99c>
   1eb6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb70:	ldr	r1, [r3, #20]
   1eb74:	ldr	r2, [fp, #-12]
   1eb78:	mov	r3, r2
   1eb7c:	lsl	r3, r3, #1
   1eb80:	add	r3, r3, r2
   1eb84:	lsl	r3, r3, #2
   1eb88:	add	r3, r1, r3
   1eb8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb90:	mov	r0, r3
   1eb94:	bl	19eec <__assert_fail@plt+0x8bfc>
   1eb98:	mov	r3, r0
   1eb9c:	strb	r3, [fp, #-25]	; 0xffffffe7
   1eba0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1eba4:	eor	r3, r3, #1
   1eba8:	uxtb	r3, r3
   1ebac:	cmp	r3, #0
   1ebb0:	beq	1ebbc <__assert_fail@plt+0xd8cc>
   1ebb4:	mov	r3, #12
   1ebb8:	b	1ec8c <__assert_fail@plt+0xd99c>
   1ebbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ebc0:	ldr	r1, [r3, #20]
   1ebc4:	ldr	r2, [fp, #-8]
   1ebc8:	mov	r3, r2
   1ebcc:	lsl	r3, r3, #1
   1ebd0:	add	r3, r3, r2
   1ebd4:	lsl	r3, r3, #2
   1ebd8:	add	r3, r1, r3
   1ebdc:	ldr	r3, [r3, #8]
   1ebe0:	ldr	r3, [r3, #4]
   1ebe4:	str	r3, [fp, #-20]	; 0xffffffec
   1ebe8:	ldr	r2, [fp, #-16]
   1ebec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ebf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ebf4:	bl	1ed7c <__assert_fail@plt+0xda8c>
   1ebf8:	str	r0, [fp, #-24]	; 0xffffffe8
   1ebfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ec00:	cmn	r3, #1
   1ec04:	moveq	r3, #1
   1ec08:	movne	r3, #0
   1ec0c:	uxtb	r3, r3
   1ec10:	cmp	r3, #0
   1ec14:	beq	1ec20 <__assert_fail@plt+0xd930>
   1ec18:	mov	r3, #12
   1ec1c:	b	1ec8c <__assert_fail@plt+0xd99c>
   1ec20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ec24:	ldr	r1, [r3, #20]
   1ec28:	ldr	r2, [fp, #-12]
   1ec2c:	mov	r3, r2
   1ec30:	lsl	r3, r3, #1
   1ec34:	add	r3, r3, r2
   1ec38:	lsl	r3, r3, #2
   1ec3c:	add	r3, r1, r3
   1ec40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec44:	mov	r0, r3
   1ec48:	bl	19eec <__assert_fail@plt+0x8bfc>
   1ec4c:	mov	r3, r0
   1ec50:	strb	r3, [fp, #-25]	; 0xffffffe7
   1ec54:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1ec58:	eor	r3, r3, #1
   1ec5c:	uxtb	r3, r3
   1ec60:	cmp	r3, #0
   1ec64:	beq	1ec70 <__assert_fail@plt+0xd980>
   1ec68:	mov	r3, #12
   1ec6c:	b	1ec8c <__assert_fail@plt+0xd99c>
   1ec70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec74:	str	r3, [fp, #-8]
   1ec78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ec7c:	str	r3, [fp, #-12]
   1ec80:	b	1e708 <__assert_fail@plt+0xd418>
   1ec84:	nop	{0}
   1ec88:	mov	r3, #0
   1ec8c:	mov	r0, r3
   1ec90:	sub	sp, fp, #4
   1ec94:	ldr	fp, [sp]
   1ec98:	add	sp, sp, #4
   1ec9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1eca0:	push	{fp}		; (str fp, [sp, #-4]!)
   1eca4:	add	fp, sp, #0
   1eca8:	sub	sp, sp, #28
   1ecac:	str	r0, [fp, #-16]
   1ecb0:	str	r1, [fp, #-20]	; 0xffffffec
   1ecb4:	str	r2, [fp, #-24]	; 0xffffffe8
   1ecb8:	ldr	r3, [fp, #-16]
   1ecbc:	ldr	r3, [r3, #8]
   1ecc0:	sub	r3, r3, #1
   1ecc4:	str	r3, [fp, #-8]
   1ecc8:	b	1ed34 <__assert_fail@plt+0xda44>
   1eccc:	ldr	r3, [fp, #-16]
   1ecd0:	ldr	r2, [r3, #16]
   1ecd4:	ldr	r3, [fp, #-8]
   1ecd8:	lsl	r3, r3, #2
   1ecdc:	add	r3, r2, r3
   1ece0:	ldr	r3, [r3]
   1ece4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ece8:	cmp	r2, r3
   1ecec:	bne	1ed28 <__assert_fail@plt+0xda38>
   1ecf0:	ldr	r3, [fp, #-16]
   1ecf4:	ldr	r2, [r3]
   1ecf8:	ldr	r3, [fp, #-8]
   1ecfc:	lsl	r3, r3, #3
   1ed00:	add	r3, r2, r3
   1ed04:	ldr	r3, [r3, #4]
   1ed08:	ubfx	r3, r3, #8, #10
   1ed0c:	uxth	r3, r3
   1ed10:	mov	r2, r3
   1ed14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed18:	cmp	r3, r2
   1ed1c:	bne	1ed28 <__assert_fail@plt+0xda38>
   1ed20:	ldr	r3, [fp, #-8]
   1ed24:	b	1ed6c <__assert_fail@plt+0xda7c>
   1ed28:	ldr	r3, [fp, #-8]
   1ed2c:	sub	r3, r3, #1
   1ed30:	str	r3, [fp, #-8]
   1ed34:	ldr	r3, [fp, #-16]
   1ed38:	ldr	r2, [r3]
   1ed3c:	ldr	r3, [fp, #-8]
   1ed40:	lsl	r3, r3, #3
   1ed44:	add	r3, r2, r3
   1ed48:	ldrb	r3, [r3, #6]
   1ed4c:	and	r3, r3, #4
   1ed50:	uxtb	r3, r3
   1ed54:	cmp	r3, #0
   1ed58:	beq	1ed68 <__assert_fail@plt+0xda78>
   1ed5c:	ldr	r3, [fp, #-8]
   1ed60:	cmp	r3, #0
   1ed64:	bgt	1eccc <__assert_fail@plt+0xd9dc>
   1ed68:	mvn	r3, #0
   1ed6c:	mov	r0, r3
   1ed70:	add	sp, fp, #0
   1ed74:	pop	{fp}		; (ldr fp, [sp], #4)
   1ed78:	bx	lr
   1ed7c:	str	fp, [sp, #-8]!
   1ed80:	str	lr, [sp, #4]
   1ed84:	add	fp, sp, #4
   1ed88:	sub	sp, sp, #24
   1ed8c:	str	r0, [fp, #-16]
   1ed90:	str	r1, [fp, #-20]	; 0xffffffec
   1ed94:	str	r2, [fp, #-24]	; 0xffffffe8
   1ed98:	ldr	r3, [fp, #-16]
   1ed9c:	ldr	r2, [r3]
   1eda0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eda4:	lsl	r3, r3, #3
   1eda8:	add	r3, r2, r3
   1edac:	ldm	r3, {r1, r2}
   1edb0:	ldr	r0, [fp, #-16]
   1edb4:	bl	1a4b4 <__assert_fail@plt+0x91c4>
   1edb8:	str	r0, [fp, #-8]
   1edbc:	ldr	r3, [fp, #-8]
   1edc0:	cmn	r3, #1
   1edc4:	movne	r3, #1
   1edc8:	moveq	r3, #0
   1edcc:	uxtb	r3, r3
   1edd0:	cmp	r3, #0
   1edd4:	beq	1eea8 <__assert_fail@plt+0xdbb8>
   1edd8:	ldr	r3, [fp, #-16]
   1eddc:	ldr	r2, [r3]
   1ede0:	ldr	r3, [fp, #-8]
   1ede4:	lsl	r3, r3, #3
   1ede8:	add	r2, r2, r3
   1edec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edf0:	ubfx	r3, r3, #0, #10
   1edf4:	uxth	r1, r3
   1edf8:	ldr	r3, [r2, #4]
   1edfc:	bfi	r3, r1, #8, #10
   1ee00:	str	r3, [r2, #4]
   1ee04:	ldr	r3, [fp, #-16]
   1ee08:	ldr	r2, [r3]
   1ee0c:	ldr	r3, [fp, #-8]
   1ee10:	lsl	r3, r3, #3
   1ee14:	add	r3, r2, r3
   1ee18:	ldr	r3, [r3, #4]
   1ee1c:	ubfx	r3, r3, #8, #10
   1ee20:	uxth	r1, r3
   1ee24:	ldr	r3, [fp, #-16]
   1ee28:	ldr	r2, [r3]
   1ee2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee30:	lsl	r3, r3, #3
   1ee34:	add	r3, r2, r3
   1ee38:	ldr	r3, [r3, #4]
   1ee3c:	ubfx	r3, r3, #8, #10
   1ee40:	uxth	r3, r3
   1ee44:	ldr	r2, [fp, #-16]
   1ee48:	ldr	r0, [r2]
   1ee4c:	ldr	r2, [fp, #-8]
   1ee50:	lsl	r2, r2, #3
   1ee54:	add	r2, r0, r2
   1ee58:	orr	r3, r1, r3
   1ee5c:	uxth	r1, r3
   1ee60:	ldr	r3, [r2, #4]
   1ee64:	bfi	r3, r1, #8, #10
   1ee68:	str	r3, [r2, #4]
   1ee6c:	ldr	r3, [fp, #-16]
   1ee70:	ldr	r2, [r3]
   1ee74:	ldr	r3, [fp, #-8]
   1ee78:	lsl	r3, r3, #3
   1ee7c:	add	r2, r2, r3
   1ee80:	ldrb	r3, [r2, #6]
   1ee84:	orr	r3, r3, #4
   1ee88:	strb	r3, [r2, #6]
   1ee8c:	ldr	r3, [fp, #-16]
   1ee90:	ldr	r2, [r3, #16]
   1ee94:	ldr	r3, [fp, #-8]
   1ee98:	lsl	r3, r3, #2
   1ee9c:	add	r3, r2, r3
   1eea0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eea4:	str	r2, [r3]
   1eea8:	ldr	r3, [fp, #-8]
   1eeac:	mov	r0, r3
   1eeb0:	sub	sp, fp, #4
   1eeb4:	ldr	fp, [sp]
   1eeb8:	add	sp, sp, #4
   1eebc:	pop	{pc}		; (ldr pc, [sp], #4)
   1eec0:	str	fp, [sp, #-8]!
   1eec4:	str	lr, [sp, #4]
   1eec8:	add	fp, sp, #4
   1eecc:	sub	sp, sp, #24
   1eed0:	str	r0, [fp, #-24]	; 0xffffffe8
   1eed4:	mov	r3, #0
   1eed8:	str	r3, [fp, #-12]
   1eedc:	b	1ef1c <__assert_fail@plt+0xdc2c>
   1eee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eee4:	ldr	r1, [r3, #28]
   1eee8:	ldr	r2, [fp, #-12]
   1eeec:	mov	r3, r2
   1eef0:	lsl	r3, r3, #1
   1eef4:	add	r3, r3, r2
   1eef8:	lsl	r3, r3, #2
   1eefc:	add	r3, r1, r3
   1ef00:	mov	r2, #12
   1ef04:	mov	r1, #0
   1ef08:	mov	r0, r3
   1ef0c:	bl	11218 <memset@plt>
   1ef10:	ldr	r3, [fp, #-12]
   1ef14:	add	r3, r3, #1
   1ef18:	str	r3, [fp, #-12]
   1ef1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef20:	ldr	r2, [r3, #8]
   1ef24:	ldr	r3, [fp, #-12]
   1ef28:	cmp	r2, r3
   1ef2c:	bhi	1eee0 <__assert_fail@plt+0xdbf0>
   1ef30:	mov	r3, #0
   1ef34:	str	r3, [fp, #-8]
   1ef38:	b	1f01c <__assert_fail@plt+0xdd2c>
   1ef3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef40:	ldr	r1, [r3, #24]
   1ef44:	ldr	r2, [fp, #-8]
   1ef48:	mov	r3, r2
   1ef4c:	lsl	r3, r3, #1
   1ef50:	add	r3, r3, r2
   1ef54:	lsl	r3, r3, #2
   1ef58:	add	r3, r1, r3
   1ef5c:	ldr	r3, [r3, #8]
   1ef60:	str	r3, [fp, #-16]
   1ef64:	mov	r3, #0
   1ef68:	str	r3, [fp, #-12]
   1ef6c:	b	1efe0 <__assert_fail@plt+0xdcf0>
   1ef70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef74:	ldr	r2, [r3, #28]
   1ef78:	ldr	r3, [fp, #-12]
   1ef7c:	lsl	r3, r3, #2
   1ef80:	ldr	r1, [fp, #-16]
   1ef84:	add	r3, r1, r3
   1ef88:	ldr	r3, [r3]
   1ef8c:	mov	r1, r3
   1ef90:	mov	r3, r1
   1ef94:	lsl	r3, r3, #1
   1ef98:	add	r3, r3, r1
   1ef9c:	lsl	r3, r3, #2
   1efa0:	add	r3, r2, r3
   1efa4:	ldr	r1, [fp, #-8]
   1efa8:	mov	r0, r3
   1efac:	bl	1a16c <__assert_fail@plt+0x8e7c>
   1efb0:	mov	r3, r0
   1efb4:	strb	r3, [fp, #-17]	; 0xffffffef
   1efb8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1efbc:	eor	r3, r3, #1
   1efc0:	uxtb	r3, r3
   1efc4:	cmp	r3, #0
   1efc8:	beq	1efd4 <__assert_fail@plt+0xdce4>
   1efcc:	mov	r3, #12
   1efd0:	b	1f034 <__assert_fail@plt+0xdd44>
   1efd4:	ldr	r3, [fp, #-12]
   1efd8:	add	r3, r3, #1
   1efdc:	str	r3, [fp, #-12]
   1efe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1efe4:	ldr	r1, [r3, #24]
   1efe8:	ldr	r2, [fp, #-8]
   1efec:	mov	r3, r2
   1eff0:	lsl	r3, r3, #1
   1eff4:	add	r3, r3, r2
   1eff8:	lsl	r3, r3, #2
   1effc:	add	r3, r1, r3
   1f000:	ldr	r3, [r3, #4]
   1f004:	ldr	r2, [fp, #-12]
   1f008:	cmp	r2, r3
   1f00c:	blt	1ef70 <__assert_fail@plt+0xdc80>
   1f010:	ldr	r3, [fp, #-8]
   1f014:	add	r3, r3, #1
   1f018:	str	r3, [fp, #-8]
   1f01c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f020:	ldr	r2, [r3, #8]
   1f024:	ldr	r3, [fp, #-8]
   1f028:	cmp	r2, r3
   1f02c:	bhi	1ef3c <__assert_fail@plt+0xdc4c>
   1f030:	mov	r3, #0
   1f034:	mov	r0, r3
   1f038:	sub	sp, fp, #4
   1f03c:	ldr	fp, [sp]
   1f040:	add	sp, sp, #4
   1f044:	pop	{pc}		; (ldr pc, [sp], #4)
   1f048:	str	fp, [sp, #-8]!
   1f04c:	str	lr, [sp, #4]
   1f050:	add	fp, sp, #4
   1f054:	sub	sp, sp, #32
   1f058:	str	r0, [fp, #-32]	; 0xffffffe0
   1f05c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f060:	ldr	r3, [r3, #8]
   1f064:	cmp	r3, #0
   1f068:	mov	r3, #0
   1f06c:	strb	r3, [fp, #-9]
   1f070:	mov	r3, #0
   1f074:	str	r3, [fp, #-8]
   1f078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f07c:	ldr	r2, [r3, #8]
   1f080:	ldr	r3, [fp, #-8]
   1f084:	cmp	r2, r3
   1f088:	bne	1f0b8 <__assert_fail@plt+0xddc8>
   1f08c:	ldrb	r3, [fp, #-9]
   1f090:	eor	r3, r3, #1
   1f094:	uxtb	r3, r3
   1f098:	cmp	r3, #0
   1f09c:	beq	1f0a8 <__assert_fail@plt+0xddb8>
   1f0a0:	mov	r3, #0
   1f0a4:	b	1f1a0 <__assert_fail@plt+0xdeb0>
   1f0a8:	mov	r3, #0
   1f0ac:	strb	r3, [fp, #-9]
   1f0b0:	mov	r3, #0
   1f0b4:	str	r3, [fp, #-8]
   1f0b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f0bc:	ldr	r1, [r3, #24]
   1f0c0:	ldr	r2, [fp, #-8]
   1f0c4:	mov	r3, r2
   1f0c8:	lsl	r3, r3, #1
   1f0cc:	add	r3, r3, r2
   1f0d0:	lsl	r3, r3, #2
   1f0d4:	add	r3, r1, r3
   1f0d8:	ldr	r3, [r3, #4]
   1f0dc:	cmn	r3, #1
   1f0e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f0e4:	ldr	r1, [r3, #24]
   1f0e8:	ldr	r2, [fp, #-8]
   1f0ec:	mov	r3, r2
   1f0f0:	lsl	r3, r3, #1
   1f0f4:	add	r3, r3, r2
   1f0f8:	lsl	r3, r3, #2
   1f0fc:	add	r3, r1, r3
   1f100:	ldr	r3, [r3, #4]
   1f104:	cmp	r3, #0
   1f108:	bne	1f18c <__assert_fail@plt+0xde9c>
   1f10c:	sub	r0, fp, #28
   1f110:	mov	r3, #1
   1f114:	ldr	r2, [fp, #-8]
   1f118:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f11c:	bl	1f1b4 <__assert_fail@plt+0xdec4>
   1f120:	str	r0, [fp, #-16]
   1f124:	ldr	r3, [fp, #-16]
   1f128:	cmp	r3, #0
   1f12c:	movne	r3, #1
   1f130:	moveq	r3, #0
   1f134:	uxtb	r3, r3
   1f138:	cmp	r3, #0
   1f13c:	beq	1f148 <__assert_fail@plt+0xde58>
   1f140:	ldr	r3, [fp, #-16]
   1f144:	b	1f1a0 <__assert_fail@plt+0xdeb0>
   1f148:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f14c:	ldr	r1, [r3, #24]
   1f150:	ldr	r2, [fp, #-8]
   1f154:	mov	r3, r2
   1f158:	lsl	r3, r3, #1
   1f15c:	add	r3, r3, r2
   1f160:	lsl	r3, r3, #2
   1f164:	add	r3, r1, r3
   1f168:	ldr	r3, [r3, #4]
   1f16c:	cmp	r3, #0
   1f170:	bne	1f190 <__assert_fail@plt+0xdea0>
   1f174:	mov	r3, #1
   1f178:	strb	r3, [fp, #-9]
   1f17c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f180:	mov	r0, r3
   1f184:	bl	31b28 <__assert_fail@plt+0x20838>
   1f188:	b	1f190 <__assert_fail@plt+0xdea0>
   1f18c:	nop	{0}
   1f190:	ldr	r3, [fp, #-8]
   1f194:	add	r3, r3, #1
   1f198:	str	r3, [fp, #-8]
   1f19c:	b	1f078 <__assert_fail@plt+0xdd88>
   1f1a0:	mov	r0, r3
   1f1a4:	sub	sp, fp, #4
   1f1a8:	ldr	fp, [sp]
   1f1ac:	add	sp, sp, #4
   1f1b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1f1b4:	str	fp, [sp, #-8]!
   1f1b8:	str	lr, [sp, #4]
   1f1bc:	add	fp, sp, #4
   1f1c0:	sub	sp, sp, #64	; 0x40
   1f1c4:	str	r0, [fp, #-48]	; 0xffffffd0
   1f1c8:	str	r1, [fp, #-52]	; 0xffffffcc
   1f1cc:	str	r2, [fp, #-56]	; 0xffffffc8
   1f1d0:	strb	r3, [fp, #-57]	; 0xffffffc7
   1f1d4:	mov	r3, #0
   1f1d8:	strb	r3, [fp, #-9]
   1f1dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f1e0:	ldr	r1, [r3, #20]
   1f1e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f1e8:	mov	r3, r2
   1f1ec:	lsl	r3, r3, #1
   1f1f0:	add	r3, r3, r2
   1f1f4:	lsl	r3, r3, #2
   1f1f8:	add	r3, r1, r3
   1f1fc:	ldr	r3, [r3, #4]
   1f200:	add	r2, r3, #1
   1f204:	sub	r3, fp, #32
   1f208:	mov	r1, r2
   1f20c:	mov	r0, r3
   1f210:	bl	18f04 <__assert_fail@plt+0x7c14>
   1f214:	str	r0, [fp, #-16]
   1f218:	ldr	r3, [fp, #-16]
   1f21c:	cmp	r3, #0
   1f220:	movne	r3, #1
   1f224:	moveq	r3, #0
   1f228:	uxtb	r3, r3
   1f22c:	cmp	r3, #0
   1f230:	beq	1f23c <__assert_fail@plt+0xdf4c>
   1f234:	ldr	r3, [fp, #-16]
   1f238:	b	1f624 <__assert_fail@plt+0xe334>
   1f23c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f240:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f244:	add	r1, r3, #1
   1f248:	str	r1, [fp, #-28]	; 0xffffffe4
   1f24c:	lsl	r3, r3, #2
   1f250:	add	r3, r2, r3
   1f254:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f258:	str	r2, [r3]
   1f25c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f260:	ldr	r1, [r3, #24]
   1f264:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f268:	mov	r3, r2
   1f26c:	lsl	r3, r3, #1
   1f270:	add	r3, r3, r2
   1f274:	lsl	r3, r3, #2
   1f278:	add	r3, r1, r3
   1f27c:	mvn	r2, #0
   1f280:	str	r2, [r3, #4]
   1f284:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f288:	ldr	r2, [r3]
   1f28c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f290:	lsl	r3, r3, #3
   1f294:	add	r3, r2, r3
   1f298:	ldr	r2, [r3, #4]
   1f29c:	mov	r3, #65280	; 0xff00
   1f2a0:	movt	r3, #3
   1f2a4:	and	r3, r3, r2
   1f2a8:	cmp	r3, #0
   1f2ac:	beq	1f388 <__assert_fail@plt+0xe098>
   1f2b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f2b4:	ldr	r1, [r3, #20]
   1f2b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f2bc:	mov	r3, r2
   1f2c0:	lsl	r3, r3, #1
   1f2c4:	add	r3, r3, r2
   1f2c8:	lsl	r3, r3, #2
   1f2cc:	add	r3, r1, r3
   1f2d0:	ldr	r3, [r3, #4]
   1f2d4:	cmp	r3, #0
   1f2d8:	beq	1f388 <__assert_fail@plt+0xe098>
   1f2dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f2e0:	ldr	r1, [r3]
   1f2e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f2e8:	ldr	r0, [r3, #20]
   1f2ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f2f0:	mov	r3, r2
   1f2f4:	lsl	r3, r3, #1
   1f2f8:	add	r3, r3, r2
   1f2fc:	lsl	r3, r3, #2
   1f300:	add	r3, r0, r3
   1f304:	ldr	r3, [r3, #8]
   1f308:	ldr	r3, [r3]
   1f30c:	lsl	r3, r3, #3
   1f310:	add	r3, r1, r3
   1f314:	ldrb	r3, [r3, #6]
   1f318:	and	r3, r3, #4
   1f31c:	uxtb	r3, r3
   1f320:	cmp	r3, #0
   1f324:	bne	1f388 <__assert_fail@plt+0xe098>
   1f328:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f32c:	ldr	r2, [r3]
   1f330:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f334:	lsl	r3, r3, #3
   1f338:	add	r3, r2, r3
   1f33c:	ldr	r3, [r3, #4]
   1f340:	ubfx	r3, r3, #8, #10
   1f344:	uxth	r3, r3
   1f348:	str	r3, [sp]
   1f34c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f350:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f354:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f358:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f35c:	bl	1e6d0 <__assert_fail@plt+0xd3e0>
   1f360:	str	r0, [fp, #-16]
   1f364:	ldr	r3, [fp, #-16]
   1f368:	cmp	r3, #0
   1f36c:	movne	r3, #1
   1f370:	moveq	r3, #0
   1f374:	uxtb	r3, r3
   1f378:	cmp	r3, #0
   1f37c:	beq	1f388 <__assert_fail@plt+0xe098>
   1f380:	ldr	r3, [fp, #-16]
   1f384:	b	1f624 <__assert_fail@plt+0xe334>
   1f388:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f38c:	ldr	r2, [r3]
   1f390:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f394:	lsl	r3, r3, #3
   1f398:	add	r3, r2, r3
   1f39c:	ldrb	r3, [r3, #4]
   1f3a0:	and	r3, r3, #8
   1f3a4:	cmp	r3, #0
   1f3a8:	beq	1f580 <__assert_fail@plt+0xe290>
   1f3ac:	mov	r3, #0
   1f3b0:	str	r3, [fp, #-8]
   1f3b4:	b	1f550 <__assert_fail@plt+0xe260>
   1f3b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f3bc:	ldr	r1, [r3, #20]
   1f3c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f3c4:	mov	r3, r2
   1f3c8:	lsl	r3, r3, #1
   1f3cc:	add	r3, r3, r2
   1f3d0:	lsl	r3, r3, #2
   1f3d4:	add	r3, r1, r3
   1f3d8:	ldr	r2, [r3, #8]
   1f3dc:	ldr	r3, [fp, #-8]
   1f3e0:	lsl	r3, r3, #2
   1f3e4:	add	r3, r2, r3
   1f3e8:	ldr	r3, [r3]
   1f3ec:	str	r3, [fp, #-20]	; 0xffffffec
   1f3f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f3f4:	ldr	r1, [r3, #24]
   1f3f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f3fc:	mov	r3, r2
   1f400:	lsl	r3, r3, #1
   1f404:	add	r3, r3, r2
   1f408:	lsl	r3, r3, #2
   1f40c:	add	r3, r1, r3
   1f410:	ldr	r3, [r3, #4]
   1f414:	cmn	r3, #1
   1f418:	bne	1f428 <__assert_fail@plt+0xe138>
   1f41c:	mov	r3, #1
   1f420:	strb	r3, [fp, #-9]
   1f424:	b	1f544 <__assert_fail@plt+0xe254>
   1f428:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f42c:	ldr	r1, [r3, #24]
   1f430:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f434:	mov	r3, r2
   1f438:	lsl	r3, r3, #1
   1f43c:	add	r3, r3, r2
   1f440:	lsl	r3, r3, #2
   1f444:	add	r3, r1, r3
   1f448:	ldr	r3, [r3, #4]
   1f44c:	cmp	r3, #0
   1f450:	bne	1f490 <__assert_fail@plt+0xe1a0>
   1f454:	sub	r0, fp, #44	; 0x2c
   1f458:	mov	r3, #0
   1f45c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f460:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f464:	bl	1f1b4 <__assert_fail@plt+0xdec4>
   1f468:	str	r0, [fp, #-16]
   1f46c:	ldr	r3, [fp, #-16]
   1f470:	cmp	r3, #0
   1f474:	movne	r3, #1
   1f478:	moveq	r3, #0
   1f47c:	uxtb	r3, r3
   1f480:	cmp	r3, #0
   1f484:	beq	1f4c8 <__assert_fail@plt+0xe1d8>
   1f488:	ldr	r3, [fp, #-16]
   1f48c:	b	1f624 <__assert_fail@plt+0xe334>
   1f490:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f494:	ldr	r1, [r3, #24]
   1f498:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f49c:	mov	r3, r2
   1f4a0:	lsl	r3, r3, #1
   1f4a4:	add	r3, r3, r2
   1f4a8:	lsl	r3, r3, #2
   1f4ac:	add	r3, r1, r3
   1f4b0:	sub	r1, fp, #44	; 0x2c
   1f4b4:	mov	r0, r3
   1f4b8:	ldrd	r2, [r0]
   1f4bc:	strd	r2, [r1]
   1f4c0:	ldr	r3, [r0, #8]
   1f4c4:	str	r3, [r1, #8]
   1f4c8:	sub	r2, fp, #44	; 0x2c
   1f4cc:	sub	r3, fp, #32
   1f4d0:	mov	r1, r2
   1f4d4:	mov	r0, r3
   1f4d8:	bl	19a8c <__assert_fail@plt+0x879c>
   1f4dc:	str	r0, [fp, #-16]
   1f4e0:	ldr	r3, [fp, #-16]
   1f4e4:	cmp	r3, #0
   1f4e8:	movne	r3, #1
   1f4ec:	moveq	r3, #0
   1f4f0:	uxtb	r3, r3
   1f4f4:	cmp	r3, #0
   1f4f8:	beq	1f504 <__assert_fail@plt+0xe214>
   1f4fc:	ldr	r3, [fp, #-16]
   1f500:	b	1f624 <__assert_fail@plt+0xe334>
   1f504:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f508:	ldr	r1, [r3, #24]
   1f50c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f510:	mov	r3, r2
   1f514:	lsl	r3, r3, #1
   1f518:	add	r3, r3, r2
   1f51c:	lsl	r3, r3, #2
   1f520:	add	r3, r1, r3
   1f524:	ldr	r3, [r3, #4]
   1f528:	cmp	r3, #0
   1f52c:	bne	1f544 <__assert_fail@plt+0xe254>
   1f530:	mov	r3, #1
   1f534:	strb	r3, [fp, #-9]
   1f538:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f53c:	mov	r0, r3
   1f540:	bl	31b28 <__assert_fail@plt+0x20838>
   1f544:	ldr	r3, [fp, #-8]
   1f548:	add	r3, r3, #1
   1f54c:	str	r3, [fp, #-8]
   1f550:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f554:	ldr	r1, [r3, #20]
   1f558:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f55c:	mov	r3, r2
   1f560:	lsl	r3, r3, #1
   1f564:	add	r3, r3, r2
   1f568:	lsl	r3, r3, #2
   1f56c:	add	r3, r1, r3
   1f570:	ldr	r3, [r3, #4]
   1f574:	ldr	r2, [fp, #-8]
   1f578:	cmp	r2, r3
   1f57c:	blt	1f3b8 <__assert_fail@plt+0xe0c8>
   1f580:	ldrb	r3, [fp, #-9]
   1f584:	cmp	r3, #0
   1f588:	beq	1f5cc <__assert_fail@plt+0xe2dc>
   1f58c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1f590:	eor	r3, r3, #1
   1f594:	uxtb	r3, r3
   1f598:	cmp	r3, #0
   1f59c:	beq	1f5cc <__assert_fail@plt+0xe2dc>
   1f5a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f5a4:	ldr	r1, [r3, #24]
   1f5a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f5ac:	mov	r3, r2
   1f5b0:	lsl	r3, r3, #1
   1f5b4:	add	r3, r3, r2
   1f5b8:	lsl	r3, r3, #2
   1f5bc:	add	r3, r1, r3
   1f5c0:	mov	r2, #0
   1f5c4:	str	r2, [r3, #4]
   1f5c8:	b	1f604 <__assert_fail@plt+0xe314>
   1f5cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f5d0:	ldr	r1, [r3, #24]
   1f5d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f5d8:	mov	r3, r2
   1f5dc:	lsl	r3, r3, #1
   1f5e0:	add	r3, r3, r2
   1f5e4:	lsl	r3, r3, #2
   1f5e8:	add	r3, r1, r3
   1f5ec:	mov	r0, r3
   1f5f0:	sub	r1, fp, #32
   1f5f4:	ldrd	r2, [r1]
   1f5f8:	strd	r2, [r0]
   1f5fc:	ldr	r3, [r1, #8]
   1f600:	str	r3, [r0, #8]
   1f604:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f608:	mov	r0, r3
   1f60c:	sub	r1, fp, #32
   1f610:	ldrd	r2, [r1]
   1f614:	strd	r2, [r0]
   1f618:	ldr	r3, [r1, #8]
   1f61c:	str	r3, [r0, #8]
   1f620:	mov	r3, #0
   1f624:	mov	r0, r3
   1f628:	sub	sp, fp, #4
   1f62c:	ldr	fp, [sp]
   1f630:	add	sp, sp, #4
   1f634:	pop	{pc}		; (ldr pc, [sp], #4)
   1f638:	str	fp, [sp, #-8]!
   1f63c:	str	lr, [sp, #4]
   1f640:	add	fp, sp, #4
   1f644:	sub	sp, sp, #16
   1f648:	str	r0, [fp, #-8]
   1f64c:	str	r1, [fp, #-12]
   1f650:	str	r2, [fp, #-16]
   1f654:	ldr	r2, [fp, #-16]
   1f658:	ldr	r1, [fp, #-12]
   1f65c:	ldr	r0, [fp, #-8]
   1f660:	bl	1f690 <__assert_fail@plt+0xe3a0>
   1f664:	mov	r2, r0
   1f668:	ldr	r3, [fp, #-12]
   1f66c:	ldr	r3, [r3, #40]	; 0x28
   1f670:	add	r2, r2, r3
   1f674:	ldr	r3, [fp, #-12]
   1f678:	str	r2, [r3, #40]	; 0x28
   1f67c:	nop	{0}
   1f680:	sub	sp, fp, #4
   1f684:	ldr	fp, [sp]
   1f688:	add	sp, sp, #4
   1f68c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f690:	str	fp, [sp, #-8]!
   1f694:	str	lr, [sp, #4]
   1f698:	add	fp, sp, #4
   1f69c:	sub	sp, sp, #40	; 0x28
   1f6a0:	str	r0, [fp, #-32]	; 0xffffffe0
   1f6a4:	str	r1, [fp, #-36]	; 0xffffffdc
   1f6a8:	str	r2, [fp, #-40]	; 0xffffffd8
   1f6ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f6b0:	ldr	r2, [r3, #56]	; 0x38
   1f6b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f6b8:	ldr	r3, [r3, #40]	; 0x28
   1f6bc:	cmp	r2, r3
   1f6c0:	bgt	1f6d8 <__assert_fail@plt+0xe3e8>
   1f6c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6c8:	mov	r2, #2
   1f6cc:	strb	r2, [r3, #4]
   1f6d0:	mov	r3, #0
   1f6d4:	b	20384 <__assert_fail@plt+0xf094>
   1f6d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f6dc:	ldr	r3, [r3, #4]
   1f6e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f6e4:	ldr	r2, [r2, #40]	; 0x28
   1f6e8:	add	r3, r3, r2
   1f6ec:	ldrb	r3, [r3]
   1f6f0:	strb	r3, [fp, #-5]
   1f6f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6f8:	ldrb	r2, [fp, #-5]
   1f6fc:	strb	r2, [r3]
   1f700:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f704:	ldrb	r3, [r2, #6]
   1f708:	bfc	r3, #6, #1
   1f70c:	strb	r3, [r2, #6]
   1f710:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f714:	ldrb	r3, [r2, #6]
   1f718:	bfc	r3, #5, #1
   1f71c:	strb	r3, [r2, #6]
   1f720:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f724:	ldr	r3, [r3, #80]	; 0x50
   1f728:	cmp	r3, #1
   1f72c:	ble	1f790 <__assert_fail@plt+0xe4a0>
   1f730:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f734:	ldr	r2, [r3, #40]	; 0x28
   1f738:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f73c:	ldr	r3, [r3, #28]
   1f740:	cmp	r2, r3
   1f744:	beq	1f790 <__assert_fail@plt+0xe4a0>
   1f748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f74c:	ldr	r2, [r3, #8]
   1f750:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f754:	ldr	r3, [r3, #40]	; 0x28
   1f758:	lsl	r3, r3, #2
   1f75c:	add	r3, r2, r3
   1f760:	ldr	r3, [r3]
   1f764:	cmn	r3, #1
   1f768:	bne	1f790 <__assert_fail@plt+0xe4a0>
   1f76c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f770:	mov	r2, #1
   1f774:	strb	r2, [r3, #4]
   1f778:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f77c:	ldrb	r3, [r2, #6]
   1f780:	orr	r3, r3, #32
   1f784:	strb	r3, [r2, #6]
   1f788:	mov	r3, #1
   1f78c:	b	20384 <__assert_fail@plt+0xf094>
   1f790:	ldrb	r3, [fp, #-5]
   1f794:	cmp	r3, #92	; 0x5c
   1f798:	bne	1fdc8 <__assert_fail@plt+0xead8>
   1f79c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f7a0:	ldr	r3, [r3, #40]	; 0x28
   1f7a4:	add	r2, r3, #1
   1f7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f7ac:	ldr	r3, [r3, #48]	; 0x30
   1f7b0:	cmp	r2, r3
   1f7b4:	blt	1f7cc <__assert_fail@plt+0xe4dc>
   1f7b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f7bc:	mov	r2, #36	; 0x24
   1f7c0:	strb	r2, [r3, #4]
   1f7c4:	mov	r3, #1
   1f7c8:	b	20384 <__assert_fail@plt+0xf094>
   1f7cc:	mov	r1, #1
   1f7d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f7d4:	bl	1890c <__assert_fail@plt+0x761c>
   1f7d8:	mov	r3, r0
   1f7dc:	strb	r3, [fp, #-6]
   1f7e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f7e4:	ldrb	r2, [fp, #-6]
   1f7e8:	strb	r2, [r3]
   1f7ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f7f0:	mov	r2, #1
   1f7f4:	strb	r2, [r3, #4]
   1f7f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f7fc:	ldr	r3, [r3, #80]	; 0x50
   1f800:	cmp	r3, #1
   1f804:	ble	1f874 <__assert_fail@plt+0xe584>
   1f808:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f80c:	ldr	r3, [r3, #40]	; 0x28
   1f810:	add	r3, r3, #1
   1f814:	mov	r1, r3
   1f818:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f81c:	bl	163ac <__assert_fail@plt+0x50bc>
   1f820:	str	r0, [fp, #-12]
   1f824:	ldr	r0, [fp, #-12]
   1f828:	bl	11200 <iswalnum@plt>
   1f82c:	mov	r3, r0
   1f830:	cmp	r3, #0
   1f834:	bne	1f844 <__assert_fail@plt+0xe554>
   1f838:	ldr	r3, [fp, #-12]
   1f83c:	cmp	r3, #95	; 0x5f
   1f840:	bne	1f84c <__assert_fail@plt+0xe55c>
   1f844:	mov	r3, #1
   1f848:	b	1f850 <__assert_fail@plt+0xe560>
   1f84c:	mov	r3, #0
   1f850:	cmp	r3, #0
   1f854:	movne	r3, #1
   1f858:	moveq	r3, #0
   1f85c:	uxtb	r1, r3
   1f860:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f864:	ldrb	r3, [r2, #6]
   1f868:	bfi	r3, r1, #6, #1
   1f86c:	strb	r3, [r2, #6]
   1f870:	b	1f8d4 <__assert_fail@plt+0xe5e4>
   1f874:	bl	111ac <__ctype_b_loc@plt>
   1f878:	mov	r3, r0
   1f87c:	ldr	r2, [r3]
   1f880:	ldrb	r3, [fp, #-6]
   1f884:	lsl	r3, r3, #1
   1f888:	add	r3, r2, r3
   1f88c:	ldrh	r3, [r3]
   1f890:	and	r3, r3, #8
   1f894:	cmp	r3, #0
   1f898:	bne	1f8a8 <__assert_fail@plt+0xe5b8>
   1f89c:	ldrb	r3, [fp, #-6]
   1f8a0:	cmp	r3, #95	; 0x5f
   1f8a4:	bne	1f8b0 <__assert_fail@plt+0xe5c0>
   1f8a8:	mov	r3, #1
   1f8ac:	b	1f8b4 <__assert_fail@plt+0xe5c4>
   1f8b0:	mov	r3, #0
   1f8b4:	cmp	r3, #0
   1f8b8:	movne	r3, #1
   1f8bc:	moveq	r3, #0
   1f8c0:	uxtb	r1, r3
   1f8c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f8c8:	ldrb	r3, [r2, #6]
   1f8cc:	bfi	r3, r1, #6, #1
   1f8d0:	strb	r3, [r2, #6]
   1f8d4:	ldrb	r3, [fp, #-6]
   1f8d8:	sub	r3, r3, #39	; 0x27
   1f8dc:	cmp	r3, #86	; 0x56
   1f8e0:	ldrls	pc, [pc, r3, lsl #2]
   1f8e4:	b	1fd2c <__assert_fail@plt+0xea3c>
   1f8e8:	andeq	pc, r1, r0, lsl #24
   1f8ec:	andeq	pc, r1, ip, lsr #24
   1f8f0:	andeq	pc, r1, ip, asr #24
   1f8f4:	andeq	pc, r1, ip, lsr #26
   1f8f8:	andeq	pc, r1, ip, ror #24
   1f8fc:	andeq	pc, r1, ip, lsr #26
   1f900:	andeq	pc, r1, ip, lsr #26
   1f904:	andeq	pc, r1, ip, lsr #26
   1f908:	andeq	pc, r1, ip, lsr #26
   1f90c:	andeq	pc, r1, ip, lsr #26
   1f910:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f914:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f918:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f91c:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f920:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f924:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f928:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f92c:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f930:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f934:	andeq	pc, r1, ip, lsr #26
   1f938:	andeq	pc, r1, ip, lsr #26
   1f93c:	andeq	pc, r1, r4, lsr #21
   1f940:	andeq	pc, r1, ip, lsr #26
   1f944:	ldrdeq	pc, [r1], -r0
   1f948:	muleq	r1, ip, ip
   1f94c:	andeq	pc, r1, ip, lsr #26
   1f950:	andeq	pc, r1, ip, lsr #26
   1f954:	andeq	pc, r1, r8, lsr #22
   1f958:	andeq	pc, r1, ip, lsr #26
   1f95c:	andeq	pc, r1, ip, lsr #26
   1f960:	andeq	pc, r1, ip, lsr #26
   1f964:	andeq	pc, r1, ip, lsr #26
   1f968:	andeq	pc, r1, ip, lsr #26
   1f96c:	andeq	pc, r1, ip, lsr #26
   1f970:	andeq	pc, r1, ip, lsr #26
   1f974:	andeq	pc, r1, ip, lsr #26
   1f978:	andeq	pc, r1, ip, lsr #26
   1f97c:	andeq	pc, r1, ip, lsr #26
   1f980:	andeq	pc, r1, ip, lsr #26
   1f984:	andeq	pc, r1, ip, lsr #26
   1f988:	andeq	pc, r1, ip, lsr #26
   1f98c:	andeq	pc, r1, ip, lsr #26
   1f990:	andeq	pc, r1, ip, lsr #26
   1f994:	andeq	pc, r1, ip, lsr #26
   1f998:			; <UNDEFINED> instruction: 0x0001fbb4
   1f99c:	andeq	pc, r1, ip, lsr #26
   1f9a0:	andeq	pc, r1, ip, lsr #26
   1f9a4:	andeq	pc, r1, ip, lsr #26
   1f9a8:	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1f9ac:	andeq	pc, r1, ip, lsr #26
   1f9b0:	andeq	pc, r1, ip, lsr #26
   1f9b4:	andeq	pc, r1, ip, lsr #26
   1f9b8:	andeq	pc, r1, ip, lsr #26
   1f9bc:	andeq	pc, r1, ip, lsr #26
   1f9c0:	andeq	pc, r1, ip, lsr #26
   1f9c4:	andeq	pc, r1, ip, lsr #26
   1f9c8:	andeq	pc, r1, ip, lsr #26
   1f9cc:	ldrdeq	pc, [r1], -r4
   1f9d0:	andeq	pc, r1, ip, lsr #26
   1f9d4:	strdeq	pc, [r1], -ip
   1f9d8:	andeq	pc, r1, ip, lsr #26
   1f9dc:	andeq	pc, r1, ip, lsr #26
   1f9e0:	andeq	pc, r1, ip, lsr #26
   1f9e4:	andeq	pc, r1, ip, lsr #26
   1f9e8:	andeq	pc, r1, ip, lsr #26
   1f9ec:	andeq	pc, r1, ip, lsr #26
   1f9f0:	andeq	pc, r1, ip, lsr #26
   1f9f4:	andeq	pc, r1, ip, lsr #26
   1f9f8:	andeq	pc, r1, ip, lsr #26
   1f9fc:	andeq	pc, r1, ip, lsr #26
   1fa00:	andeq	pc, r1, ip, lsr #26
   1fa04:	andeq	pc, r1, ip, lsr #26
   1fa08:	andeq	pc, r1, ip, lsr #26
   1fa0c:	andeq	pc, r1, ip, lsr #26
   1fa10:	andeq	pc, r1, ip, lsr #26
   1fa14:	andeq	pc, r1, ip, lsr #26
   1fa18:	muleq	r1, r4, fp
   1fa1c:	andeq	pc, r1, ip, lsr #26
   1fa20:	andeq	pc, r1, ip, lsr #26
   1fa24:	andeq	pc, r1, ip, lsr #26
   1fa28:	andeq	pc, r1, r4, asr fp	; <UNPREDICTABLE>
   1fa2c:	andeq	pc, r1, ip, lsr #26
   1fa30:	andeq	pc, r1, ip, lsr #26
   1fa34:	andeq	pc, r1, ip, lsr #26
   1fa38:	andeq	pc, r1, ip, asr #25
   1fa3c:	andeq	pc, r1, r4, asr #20
   1fa40:	strdeq	pc, [r1], -ip
   1fa44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fa48:	and	r3, r3, #1024	; 0x400
   1fa4c:	cmp	r3, #0
   1fa50:	bne	1fd34 <__assert_fail@plt+0xea44>
   1fa54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fa58:	and	r3, r3, #32768	; 0x8000
   1fa5c:	cmp	r3, #0
   1fa60:	bne	1fd34 <__assert_fail@plt+0xea44>
   1fa64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fa68:	mov	r2, #10
   1fa6c:	strb	r2, [r3, #4]
   1fa70:	b	1fd34 <__assert_fail@plt+0xea44>
   1fa74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fa78:	and	r3, r3, #16384	; 0x4000
   1fa7c:	cmp	r3, #0
   1fa80:	bne	1fd3c <__assert_fail@plt+0xea4c>
   1fa84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fa88:	mov	r2, #4
   1fa8c:	strb	r2, [r3, #4]
   1fa90:	ldrb	r3, [fp, #-6]
   1fa94:	sub	r2, r3, #49	; 0x31
   1fa98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fa9c:	str	r2, [r3]
   1faa0:	b	1fd3c <__assert_fail@plt+0xea4c>
   1faa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1faa8:	and	r3, r3, #524288	; 0x80000
   1faac:	cmp	r3, #0
   1fab0:	bne	1fd44 <__assert_fail@plt+0xea54>
   1fab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fab8:	mov	r2, #12
   1fabc:	strb	r2, [r3, #4]
   1fac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fac4:	mov	r2, #6
   1fac8:	str	r2, [r3]
   1facc:	b	1fd44 <__assert_fail@plt+0xea54>
   1fad0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fad4:	and	r3, r3, #524288	; 0x80000
   1fad8:	cmp	r3, #0
   1fadc:	bne	1fd4c <__assert_fail@plt+0xea5c>
   1fae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fae4:	mov	r2, #12
   1fae8:	strb	r2, [r3, #4]
   1faec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1faf0:	mov	r2, #9
   1faf4:	str	r2, [r3]
   1faf8:	b	1fd4c <__assert_fail@plt+0xea5c>
   1fafc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb00:	and	r3, r3, #524288	; 0x80000
   1fb04:	cmp	r3, #0
   1fb08:	bne	1fd54 <__assert_fail@plt+0xea64>
   1fb0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb10:	mov	r2, #12
   1fb14:	strb	r2, [r3, #4]
   1fb18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb1c:	mov	r2, #256	; 0x100
   1fb20:	str	r2, [r3]
   1fb24:	b	1fd54 <__assert_fail@plt+0xea64>
   1fb28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb2c:	and	r3, r3, #524288	; 0x80000
   1fb30:	cmp	r3, #0
   1fb34:	bne	1fd5c <__assert_fail@plt+0xea6c>
   1fb38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb3c:	mov	r2, #12
   1fb40:	strb	r2, [r3, #4]
   1fb44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb48:	mov	r2, #512	; 0x200
   1fb4c:	str	r2, [r3]
   1fb50:	b	1fd5c <__assert_fail@plt+0xea6c>
   1fb54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb58:	and	r3, r3, #524288	; 0x80000
   1fb5c:	cmp	r3, #0
   1fb60:	bne	1fd64 <__assert_fail@plt+0xea74>
   1fb64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb68:	mov	r2, #32
   1fb6c:	strb	r2, [r3, #4]
   1fb70:	b	1fd64 <__assert_fail@plt+0xea74>
   1fb74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb78:	and	r3, r3, #524288	; 0x80000
   1fb7c:	cmp	r3, #0
   1fb80:	bne	1fd6c <__assert_fail@plt+0xea7c>
   1fb84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb88:	mov	r2, #33	; 0x21
   1fb8c:	strb	r2, [r3, #4]
   1fb90:	b	1fd6c <__assert_fail@plt+0xea7c>
   1fb94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb98:	and	r3, r3, #524288	; 0x80000
   1fb9c:	cmp	r3, #0
   1fba0:	bne	1fd74 <__assert_fail@plt+0xea84>
   1fba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fba8:	mov	r2, #34	; 0x22
   1fbac:	strb	r2, [r3, #4]
   1fbb0:	b	1fd74 <__assert_fail@plt+0xea84>
   1fbb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fbb8:	and	r3, r3, #524288	; 0x80000
   1fbbc:	cmp	r3, #0
   1fbc0:	bne	1fd7c <__assert_fail@plt+0xea8c>
   1fbc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbc8:	mov	r2, #35	; 0x23
   1fbcc:	strb	r2, [r3, #4]
   1fbd0:	b	1fd7c <__assert_fail@plt+0xea8c>
   1fbd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fbd8:	and	r3, r3, #524288	; 0x80000
   1fbdc:	cmp	r3, #0
   1fbe0:	bne	1fd84 <__assert_fail@plt+0xea94>
   1fbe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbe8:	mov	r2, #12
   1fbec:	strb	r2, [r3, #4]
   1fbf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbf4:	mov	r2, #64	; 0x40
   1fbf8:	str	r2, [r3]
   1fbfc:	b	1fd84 <__assert_fail@plt+0xea94>
   1fc00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc04:	and	r3, r3, #524288	; 0x80000
   1fc08:	cmp	r3, #0
   1fc0c:	bne	1fd8c <__assert_fail@plt+0xea9c>
   1fc10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc14:	mov	r2, #12
   1fc18:	strb	r2, [r3, #4]
   1fc1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc20:	mov	r2, #128	; 0x80
   1fc24:	str	r2, [r3]
   1fc28:	b	1fd8c <__assert_fail@plt+0xea9c>
   1fc2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc30:	and	r3, r3, #8192	; 0x2000
   1fc34:	cmp	r3, #0
   1fc38:	bne	1fd94 <__assert_fail@plt+0xeaa4>
   1fc3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc40:	mov	r2, #8
   1fc44:	strb	r2, [r3, #4]
   1fc48:	b	1fd94 <__assert_fail@plt+0xeaa4>
   1fc4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc50:	and	r3, r3, #8192	; 0x2000
   1fc54:	cmp	r3, #0
   1fc58:	bne	1fd9c <__assert_fail@plt+0xeaac>
   1fc5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc60:	mov	r2, #9
   1fc64:	strb	r2, [r3, #4]
   1fc68:	b	1fd9c <__assert_fail@plt+0xeaac>
   1fc6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc70:	and	r3, r3, #1024	; 0x400
   1fc74:	cmp	r3, #0
   1fc78:	bne	1fda4 <__assert_fail@plt+0xeab4>
   1fc7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc80:	and	r3, r3, #2
   1fc84:	cmp	r3, #0
   1fc88:	beq	1fda4 <__assert_fail@plt+0xeab4>
   1fc8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc90:	mov	r2, #18
   1fc94:	strb	r2, [r3, #4]
   1fc98:	b	1fda4 <__assert_fail@plt+0xeab4>
   1fc9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fca0:	and	r3, r3, #1024	; 0x400
   1fca4:	cmp	r3, #0
   1fca8:	bne	1fdac <__assert_fail@plt+0xeabc>
   1fcac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fcb0:	and	r3, r3, #2
   1fcb4:	cmp	r3, #0
   1fcb8:	beq	1fdac <__assert_fail@plt+0xeabc>
   1fcbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fcc0:	mov	r2, #19
   1fcc4:	strb	r2, [r3, #4]
   1fcc8:	b	1fdac <__assert_fail@plt+0xeabc>
   1fccc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fcd0:	and	r3, r3, #512	; 0x200
   1fcd4:	cmp	r3, #0
   1fcd8:	beq	1fdb4 <__assert_fail@plt+0xeac4>
   1fcdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fce0:	and	r3, r3, #4096	; 0x1000
   1fce4:	cmp	r3, #0
   1fce8:	bne	1fdb4 <__assert_fail@plt+0xeac4>
   1fcec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fcf0:	mov	r2, #23
   1fcf4:	strb	r2, [r3, #4]
   1fcf8:	b	1fdb4 <__assert_fail@plt+0xeac4>
   1fcfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fd00:	and	r3, r3, #512	; 0x200
   1fd04:	cmp	r3, #0
   1fd08:	beq	1fdbc <__assert_fail@plt+0xeacc>
   1fd0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fd10:	and	r3, r3, #4096	; 0x1000
   1fd14:	cmp	r3, #0
   1fd18:	bne	1fdbc <__assert_fail@plt+0xeacc>
   1fd1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fd20:	mov	r2, #24
   1fd24:	strb	r2, [r3, #4]
   1fd28:	b	1fdbc <__assert_fail@plt+0xeacc>
   1fd2c:	nop	{0}
   1fd30:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd34:	nop	{0}
   1fd38:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd3c:	nop	{0}
   1fd40:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd44:	nop	{0}
   1fd48:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd4c:	nop	{0}
   1fd50:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd54:	nop	{0}
   1fd58:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd5c:	nop	{0}
   1fd60:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd64:	nop	{0}
   1fd68:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd6c:	nop	{0}
   1fd70:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd74:	nop	{0}
   1fd78:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd7c:	nop	{0}
   1fd80:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd84:	nop	{0}
   1fd88:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd8c:	nop	{0}
   1fd90:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd94:	nop	{0}
   1fd98:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fd9c:	nop	{0}
   1fda0:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fda4:	nop	{0}
   1fda8:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fdac:	nop	{0}
   1fdb0:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fdb4:	nop	{0}
   1fdb8:	b	1fdc0 <__assert_fail@plt+0xead0>
   1fdbc:	nop	{0}
   1fdc0:	mov	r3, #2
   1fdc4:	b	20384 <__assert_fail@plt+0xf094>
   1fdc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fdcc:	mov	r2, #1
   1fdd0:	strb	r2, [r3, #4]
   1fdd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fdd8:	ldr	r3, [r3, #80]	; 0x50
   1fddc:	cmp	r3, #1
   1fde0:	ble	1fe4c <__assert_fail@plt+0xeb5c>
   1fde4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fde8:	ldr	r3, [r3, #40]	; 0x28
   1fdec:	mov	r1, r3
   1fdf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fdf4:	bl	163ac <__assert_fail@plt+0x50bc>
   1fdf8:	str	r0, [fp, #-16]
   1fdfc:	ldr	r0, [fp, #-16]
   1fe00:	bl	11200 <iswalnum@plt>
   1fe04:	mov	r3, r0
   1fe08:	cmp	r3, #0
   1fe0c:	bne	1fe1c <__assert_fail@plt+0xeb2c>
   1fe10:	ldr	r3, [fp, #-16]
   1fe14:	cmp	r3, #95	; 0x5f
   1fe18:	bne	1fe24 <__assert_fail@plt+0xeb34>
   1fe1c:	mov	r3, #1
   1fe20:	b	1fe28 <__assert_fail@plt+0xeb38>
   1fe24:	mov	r3, #0
   1fe28:	cmp	r3, #0
   1fe2c:	movne	r3, #1
   1fe30:	moveq	r3, #0
   1fe34:	uxtb	r1, r3
   1fe38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fe3c:	ldrb	r3, [r2, #6]
   1fe40:	bfi	r3, r1, #6, #1
   1fe44:	strb	r3, [r2, #6]
   1fe48:	b	1feac <__assert_fail@plt+0xebbc>
   1fe4c:	bl	111ac <__ctype_b_loc@plt>
   1fe50:	mov	r3, r0
   1fe54:	ldr	r2, [r3]
   1fe58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fe5c:	ldrb	r3, [r3]
   1fe60:	lsl	r3, r3, #1
   1fe64:	add	r3, r2, r3
   1fe68:	ldrh	r3, [r3]
   1fe6c:	and	r3, r3, #8
   1fe70:	cmp	r3, #0
   1fe74:	bne	1fe88 <__assert_fail@plt+0xeb98>
   1fe78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fe7c:	ldrb	r3, [r3]
   1fe80:	cmp	r3, #95	; 0x5f
   1fe84:	bne	1fe90 <__assert_fail@plt+0xeba0>
   1fe88:	mov	r3, #1
   1fe8c:	b	1fe94 <__assert_fail@plt+0xeba4>
   1fe90:	mov	r3, #0
   1fe94:	and	r3, r3, #1
   1fe98:	uxtb	r1, r3
   1fe9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fea0:	ldrb	r3, [r2, #6]
   1fea4:	bfi	r3, r1, #6, #1
   1fea8:	strb	r3, [r2, #6]
   1feac:	ldrb	r3, [fp, #-5]
   1feb0:	sub	r3, r3, #10
   1feb4:	cmp	r3, #115	; 0x73
   1feb8:	ldrls	pc, [pc, r3, lsl #2]
   1febc:	b	2032c <__assert_fail@plt+0xf03c>
   1fec0:	muleq	r2, r0, r0
   1fec4:	andeq	r0, r2, ip, lsr #6
   1fec8:	andeq	r0, r2, ip, lsr #6
   1fecc:	andeq	r0, r2, ip, lsr #6
   1fed0:	andeq	r0, r2, ip, lsr #6
   1fed4:	andeq	r0, r2, ip, lsr #6
   1fed8:	andeq	r0, r2, ip, lsr #6
   1fedc:	andeq	r0, r2, ip, lsr #6
   1fee0:	andeq	r0, r2, ip, lsr #6
   1fee4:	andeq	r0, r2, ip, lsr #6
   1fee8:	andeq	r0, r2, ip, lsr #6
   1feec:	andeq	r0, r2, ip, lsr #6
   1fef0:	andeq	r0, r2, ip, lsr #6
   1fef4:	andeq	r0, r2, ip, lsr #6
   1fef8:	andeq	r0, r2, ip, lsr #6
   1fefc:	andeq	r0, r2, ip, lsr #6
   1ff00:	andeq	r0, r2, ip, lsr #6
   1ff04:	andeq	r0, r2, ip, lsr #6
   1ff08:	andeq	r0, r2, ip, lsr #6
   1ff0c:	andeq	r0, r2, ip, lsr #6
   1ff10:	andeq	r0, r2, ip, lsr #6
   1ff14:	andeq	r0, r2, ip, lsr #6
   1ff18:	andeq	r0, r2, ip, lsr #6
   1ff1c:	andeq	r0, r2, ip, lsr #6
   1ff20:	andeq	r0, r2, ip, lsr #6
   1ff24:	andeq	r0, r2, ip, lsr #6
   1ff28:	muleq	r2, r0, r2
   1ff2c:	andeq	r0, r2, ip, lsr #6
   1ff30:	andeq	r0, r2, ip, lsr #6
   1ff34:	andeq	r0, r2, ip, lsr #6
   1ff38:			; <UNDEFINED> instruction: 0x000201b0
   1ff3c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1ff40:	andeq	r0, r2, r0, ror #1
   1ff44:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1ff48:	andeq	r0, r2, ip, lsr #6
   1ff4c:	andeq	r0, r2, ip, lsr #6
   1ff50:	andeq	r0, r2, r0, lsl #4
   1ff54:	andeq	r0, r2, ip, lsr #6
   1ff58:	andeq	r0, r2, ip, lsr #6
   1ff5c:	andeq	r0, r2, ip, lsr #6
   1ff60:	andeq	r0, r2, ip, lsr #6
   1ff64:	andeq	r0, r2, ip, lsr #6
   1ff68:	andeq	r0, r2, ip, lsr #6
   1ff6c:	andeq	r0, r2, ip, lsr #6
   1ff70:	andeq	r0, r2, ip, lsr #6
   1ff74:	andeq	r0, r2, ip, lsr #6
   1ff78:	andeq	r0, r2, ip, lsr #6
   1ff7c:	andeq	r0, r2, ip, lsr #6
   1ff80:	andeq	r0, r2, ip, lsr #6
   1ff84:	andeq	r0, r2, ip, lsr #6
   1ff88:	andeq	r0, r2, ip, lsr #6
   1ff8c:	andeq	r0, r2, ip, lsr #6
   1ff90:	andeq	r0, r2, ip, lsr #6
   1ff94:	andeq	r0, r2, r0, lsr #2
   1ff98:	andeq	r0, r2, ip, lsr #6
   1ff9c:	andeq	r0, r2, ip, lsr #6
   1ffa0:	andeq	r0, r2, ip, lsr #6
   1ffa4:	andeq	r0, r2, ip, lsr #6
   1ffa8:	andeq	r0, r2, ip, lsr #6
   1ffac:	andeq	r0, r2, ip, lsr #6
   1ffb0:	andeq	r0, r2, ip, lsr #6
   1ffb4:	andeq	r0, r2, ip, lsr #6
   1ffb8:	andeq	r0, r2, ip, lsr #6
   1ffbc:	andeq	r0, r2, ip, lsr #6
   1ffc0:	andeq	r0, r2, ip, lsr #6
   1ffc4:	andeq	r0, r2, ip, lsr #6
   1ffc8:	andeq	r0, r2, ip, lsr #6
   1ffcc:	andeq	r0, r2, ip, lsr #6
   1ffd0:	andeq	r0, r2, ip, lsr #6
   1ffd4:	andeq	r0, r2, ip, lsr #6
   1ffd8:	andeq	r0, r2, ip, lsr #6
   1ffdc:	andeq	r0, r2, ip, lsr #6
   1ffe0:	andeq	r0, r2, ip, lsr #6
   1ffe4:	andeq	r0, r2, ip, lsr #6
   1ffe8:	andeq	r0, r2, ip, lsr #6
   1ffec:	andeq	r0, r2, ip, lsr #6
   1fff0:	andeq	r0, r2, ip, lsr #6
   1fff4:	andeq	r0, r2, ip, lsr #6
   1fff8:	andeq	r0, r2, ip, lsr #6
   1fffc:	andeq	r0, r2, ip, lsr #6
   20000:	andeq	r0, r2, ip, lsr #6
   20004:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20008:	andeq	r0, r2, ip, lsr #6
   2000c:	andeq	r0, r2, ip, lsr #6
   20010:	andeq	r0, r2, r0, lsl r2
   20014:	andeq	r0, r2, ip, lsr #6
   20018:	andeq	r0, r2, ip, lsr #6
   2001c:	andeq	r0, r2, ip, lsr #6
   20020:	andeq	r0, r2, ip, lsr #6
   20024:	andeq	r0, r2, ip, lsr #6
   20028:	andeq	r0, r2, ip, lsr #6
   2002c:	andeq	r0, r2, ip, lsr #6
   20030:	andeq	r0, r2, ip, lsr #6
   20034:	andeq	r0, r2, ip, lsr #6
   20038:	andeq	r0, r2, ip, lsr #6
   2003c:	andeq	r0, r2, ip, lsr #6
   20040:	andeq	r0, r2, ip, lsr #6
   20044:	andeq	r0, r2, ip, lsr #6
   20048:	andeq	r0, r2, ip, lsr #6
   2004c:	andeq	r0, r2, ip, lsr #6
   20050:	andeq	r0, r2, ip, lsr #6
   20054:	andeq	r0, r2, ip, lsr #6
   20058:	andeq	r0, r2, ip, lsr #6
   2005c:	andeq	r0, r2, ip, lsr #6
   20060:	andeq	r0, r2, ip, lsr #6
   20064:	andeq	r0, r2, ip, lsr #6
   20068:	andeq	r0, r2, ip, lsr #6
   2006c:	andeq	r0, r2, ip, lsr #6
   20070:	andeq	r0, r2, ip, lsr #6
   20074:	andeq	r0, r2, ip, lsr #6
   20078:	andeq	r0, r2, ip, lsr #6
   2007c:	andeq	r0, r2, ip, lsr #6
   20080:	andeq	r0, r2, ip, lsr #6
   20084:	andeq	r0, r2, r0, asr r1
   20088:	strheq	r0, [r2], -r0	; <UNPREDICTABLE>
   2008c:	andeq	r0, r2, r0, lsl #3
   20090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20094:	and	r3, r3, #2048	; 0x800
   20098:	cmp	r3, #0
   2009c:	beq	20334 <__assert_fail@plt+0xf044>
   200a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200a4:	mov	r2, #10
   200a8:	strb	r2, [r3, #4]
   200ac:	b	20334 <__assert_fail@plt+0xf044>
   200b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   200b4:	and	r3, r3, #1024	; 0x400
   200b8:	cmp	r3, #0
   200bc:	bne	2033c <__assert_fail@plt+0xf04c>
   200c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   200c4:	and	r3, r3, #32768	; 0x8000
   200c8:	cmp	r3, #0
   200cc:	beq	2033c <__assert_fail@plt+0xf04c>
   200d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200d4:	mov	r2, #10
   200d8:	strb	r2, [r3, #4]
   200dc:	b	2033c <__assert_fail@plt+0xf04c>
   200e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200e4:	mov	r2, #11
   200e8:	strb	r2, [r3, #4]
   200ec:	b	20380 <__assert_fail@plt+0xf090>
   200f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   200f4:	and	r3, r3, #1024	; 0x400
   200f8:	cmp	r3, #0
   200fc:	bne	20344 <__assert_fail@plt+0xf054>
   20100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20104:	and	r3, r3, #2
   20108:	cmp	r3, #0
   2010c:	bne	20344 <__assert_fail@plt+0xf054>
   20110:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20114:	mov	r2, #18
   20118:	strb	r2, [r3, #4]
   2011c:	b	20344 <__assert_fail@plt+0xf054>
   20120:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20124:	and	r3, r3, #1024	; 0x400
   20128:	cmp	r3, #0
   2012c:	bne	2034c <__assert_fail@plt+0xf05c>
   20130:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20134:	and	r3, r3, #2
   20138:	cmp	r3, #0
   2013c:	bne	2034c <__assert_fail@plt+0xf05c>
   20140:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20144:	mov	r2, #19
   20148:	strb	r2, [r3, #4]
   2014c:	b	2034c <__assert_fail@plt+0xf05c>
   20150:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20154:	and	r3, r3, #512	; 0x200
   20158:	cmp	r3, #0
   2015c:	beq	20354 <__assert_fail@plt+0xf064>
   20160:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20164:	and	r3, r3, #4096	; 0x1000
   20168:	cmp	r3, #0
   2016c:	beq	20354 <__assert_fail@plt+0xf064>
   20170:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20174:	mov	r2, #23
   20178:	strb	r2, [r3, #4]
   2017c:	b	20354 <__assert_fail@plt+0xf064>
   20180:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20184:	and	r3, r3, #512	; 0x200
   20188:	cmp	r3, #0
   2018c:	beq	2035c <__assert_fail@plt+0xf06c>
   20190:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20194:	and	r3, r3, #4096	; 0x1000
   20198:	cmp	r3, #0
   2019c:	beq	2035c <__assert_fail@plt+0xf06c>
   201a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   201a4:	mov	r2, #24
   201a8:	strb	r2, [r3, #4]
   201ac:	b	2035c <__assert_fail@plt+0xf06c>
   201b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   201b4:	and	r3, r3, #8192	; 0x2000
   201b8:	cmp	r3, #0
   201bc:	beq	20364 <__assert_fail@plt+0xf074>
   201c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   201c4:	mov	r2, #8
   201c8:	strb	r2, [r3, #4]
   201cc:	b	20364 <__assert_fail@plt+0xf074>
   201d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   201d4:	and	r3, r3, #8192	; 0x2000
   201d8:	cmp	r3, #0
   201dc:	beq	2036c <__assert_fail@plt+0xf07c>
   201e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   201e4:	mov	r2, #9
   201e8:	strb	r2, [r3, #4]
   201ec:	b	2036c <__assert_fail@plt+0xf07c>
   201f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   201f4:	mov	r2, #20
   201f8:	strb	r2, [r3, #4]
   201fc:	b	20380 <__assert_fail@plt+0xf090>
   20200:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20204:	mov	r2, #5
   20208:	strb	r2, [r3, #4]
   2020c:	b	20380 <__assert_fail@plt+0xf090>
   20210:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20214:	mov	r3, #8
   20218:	movt	r3, #128	; 0x80
   2021c:	and	r3, r3, r2
   20220:	cmp	r3, #0
   20224:	bne	20274 <__assert_fail@plt+0xef84>
   20228:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2022c:	ldr	r3, [r3, #40]	; 0x28
   20230:	cmp	r3, #0
   20234:	beq	20274 <__assert_fail@plt+0xef84>
   20238:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2023c:	ldr	r2, [r3, #4]
   20240:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20244:	ldr	r3, [r3, #40]	; 0x28
   20248:	sub	r3, r3, #1
   2024c:	add	r3, r2, r3
   20250:	ldrb	r3, [r3]
   20254:	strb	r3, [fp, #-17]	; 0xffffffef
   20258:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2025c:	and	r3, r3, #2048	; 0x800
   20260:	cmp	r3, #0
   20264:	beq	20374 <__assert_fail@plt+0xf084>
   20268:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2026c:	cmp	r3, #10
   20270:	bne	20374 <__assert_fail@plt+0xf084>
   20274:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20278:	mov	r2, #12
   2027c:	strb	r2, [r3, #4]
   20280:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20284:	mov	r2, #16
   20288:	str	r2, [r3]
   2028c:	b	20380 <__assert_fail@plt+0xf090>
   20290:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20294:	and	r3, r3, #8
   20298:	cmp	r3, #0
   2029c:	bne	20310 <__assert_fail@plt+0xf020>
   202a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   202a4:	ldr	r3, [r3, #40]	; 0x28
   202a8:	add	r2, r3, #1
   202ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   202b0:	ldr	r3, [r3, #48]	; 0x30
   202b4:	cmp	r2, r3
   202b8:	beq	20310 <__assert_fail@plt+0xf020>
   202bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   202c0:	ldr	r3, [r3, #40]	; 0x28
   202c4:	add	r2, r3, #1
   202c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   202cc:	str	r2, [r3, #40]	; 0x28
   202d0:	sub	r3, fp, #28
   202d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   202d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   202dc:	mov	r0, r3
   202e0:	bl	1f690 <__assert_fail@plt+0xe3a0>
   202e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   202e8:	ldr	r3, [r3, #40]	; 0x28
   202ec:	sub	r2, r3, #1
   202f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   202f4:	str	r2, [r3, #40]	; 0x28
   202f8:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   202fc:	cmp	r3, #10
   20300:	beq	20310 <__assert_fail@plt+0xf020>
   20304:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   20308:	cmp	r3, #9
   2030c:	bne	2037c <__assert_fail@plt+0xf08c>
   20310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20314:	mov	r2, #12
   20318:	strb	r2, [r3, #4]
   2031c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20320:	mov	r2, #32
   20324:	str	r2, [r3]
   20328:	b	20380 <__assert_fail@plt+0xf090>
   2032c:	nop	{0}
   20330:	b	20380 <__assert_fail@plt+0xf090>
   20334:	nop	{0}
   20338:	b	20380 <__assert_fail@plt+0xf090>
   2033c:	nop	{0}
   20340:	b	20380 <__assert_fail@plt+0xf090>
   20344:	nop	{0}
   20348:	b	20380 <__assert_fail@plt+0xf090>
   2034c:	nop	{0}
   20350:	b	20380 <__assert_fail@plt+0xf090>
   20354:	nop	{0}
   20358:	b	20380 <__assert_fail@plt+0xf090>
   2035c:	nop	{0}
   20360:	b	20380 <__assert_fail@plt+0xf090>
   20364:	nop	{0}
   20368:	b	20380 <__assert_fail@plt+0xf090>
   2036c:	nop	{0}
   20370:	b	20380 <__assert_fail@plt+0xf090>
   20374:	nop	{0}
   20378:	b	20380 <__assert_fail@plt+0xf090>
   2037c:	nop	{0}
   20380:	mov	r3, #1
   20384:	mov	r0, r3
   20388:	sub	sp, fp, #4
   2038c:	ldr	fp, [sp]
   20390:	add	sp, sp, #4
   20394:	pop	{pc}		; (ldr pc, [sp], #4)
   20398:	push	{fp}		; (str fp, [sp, #-4]!)
   2039c:	add	fp, sp, #0
   203a0:	sub	sp, sp, #36	; 0x24
   203a4:	str	r0, [fp, #-24]	; 0xffffffe8
   203a8:	str	r1, [fp, #-28]	; 0xffffffe4
   203ac:	str	r2, [fp, #-32]	; 0xffffffe0
   203b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203b4:	ldr	r2, [r3, #56]	; 0x38
   203b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203bc:	ldr	r3, [r3, #40]	; 0x28
   203c0:	cmp	r2, r3
   203c4:	bgt	203dc <__assert_fail@plt+0xf0ec>
   203c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   203cc:	mov	r2, #2
   203d0:	strb	r2, [r3, #4]
   203d4:	mov	r3, #0
   203d8:	b	20638 <__assert_fail@plt+0xf348>
   203dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203e0:	ldr	r3, [r3, #4]
   203e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   203e8:	ldr	r2, [r2, #40]	; 0x28
   203ec:	add	r3, r3, r2
   203f0:	ldrb	r3, [r3]
   203f4:	strb	r3, [fp, #-13]
   203f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   203fc:	ldrb	r2, [fp, #-13]
   20400:	strb	r2, [r3]
   20404:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20408:	ldr	r3, [r3, #80]	; 0x50
   2040c:	cmp	r3, #1
   20410:	ble	20464 <__assert_fail@plt+0xf174>
   20414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20418:	ldr	r2, [r3, #40]	; 0x28
   2041c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20420:	ldr	r3, [r3, #28]
   20424:	cmp	r2, r3
   20428:	beq	20464 <__assert_fail@plt+0xf174>
   2042c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20430:	ldr	r2, [r3, #8]
   20434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20438:	ldr	r3, [r3, #40]	; 0x28
   2043c:	lsl	r3, r3, #2
   20440:	add	r3, r2, r3
   20444:	ldr	r3, [r3]
   20448:	cmn	r3, #1
   2044c:	bne	20464 <__assert_fail@plt+0xf174>
   20450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20454:	mov	r2, #1
   20458:	strb	r2, [r3, #4]
   2045c:	mov	r3, #1
   20460:	b	20638 <__assert_fail@plt+0xf348>
   20464:	ldrb	r3, [fp, #-13]
   20468:	cmp	r3, #92	; 0x5c
   2046c:	bne	204ec <__assert_fail@plt+0xf1fc>
   20470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20474:	and	r3, r3, #1
   20478:	cmp	r3, #0
   2047c:	beq	204ec <__assert_fail@plt+0xf1fc>
   20480:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20484:	ldr	r3, [r3, #40]	; 0x28
   20488:	add	r2, r3, #1
   2048c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20490:	ldr	r3, [r3, #48]	; 0x30
   20494:	cmp	r2, r3
   20498:	bge	204ec <__assert_fail@plt+0xf1fc>
   2049c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   204a0:	ldr	r3, [r3, #40]	; 0x28
   204a4:	add	r2, r3, #1
   204a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   204ac:	str	r2, [r3, #40]	; 0x28
   204b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   204b4:	ldr	r3, [r3, #4]
   204b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   204bc:	ldr	r2, [r2, #40]	; 0x28
   204c0:	add	r3, r3, r2
   204c4:	ldrb	r3, [r3]
   204c8:	strb	r3, [fp, #-14]
   204cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   204d0:	ldrb	r2, [fp, #-14]
   204d4:	strb	r2, [r3]
   204d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   204dc:	mov	r2, #1
   204e0:	strb	r2, [r3, #4]
   204e4:	mov	r3, #1
   204e8:	b	20638 <__assert_fail@plt+0xf348>
   204ec:	ldrb	r3, [fp, #-13]
   204f0:	cmp	r3, #91	; 0x5b
   204f4:	bne	205dc <__assert_fail@plt+0xf2ec>
   204f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   204fc:	ldr	r3, [r3, #40]	; 0x28
   20500:	add	r2, r3, #1
   20504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20508:	ldr	r3, [r3, #48]	; 0x30
   2050c:	cmp	r2, r3
   20510:	bge	20538 <__assert_fail@plt+0xf248>
   20514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20518:	ldr	r2, [r3, #4]
   2051c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20520:	ldr	r3, [r3, #40]	; 0x28
   20524:	add	r3, r3, #1
   20528:	add	r3, r2, r3
   2052c:	ldrb	r3, [r3]
   20530:	strb	r3, [fp, #-5]
   20534:	b	20540 <__assert_fail@plt+0xf250>
   20538:	mov	r3, #0
   2053c:	strb	r3, [fp, #-5]
   20540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20544:	ldrb	r2, [fp, #-5]
   20548:	strb	r2, [r3]
   2054c:	mov	r3, #2
   20550:	str	r3, [fp, #-12]
   20554:	ldrb	r3, [fp, #-5]
   20558:	cmp	r3, #58	; 0x3a
   2055c:	beq	20590 <__assert_fail@plt+0xf2a0>
   20560:	cmp	r3, #61	; 0x3d
   20564:	beq	20580 <__assert_fail@plt+0xf290>
   20568:	cmp	r3, #46	; 0x2e
   2056c:	bne	205b0 <__assert_fail@plt+0xf2c0>
   20570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20574:	mov	r2, #26
   20578:	strb	r2, [r3, #4]
   2057c:	b	205d4 <__assert_fail@plt+0xf2e4>
   20580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20584:	mov	r2, #28
   20588:	strb	r2, [r3, #4]
   2058c:	b	205d4 <__assert_fail@plt+0xf2e4>
   20590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20594:	and	r3, r3, #4
   20598:	cmp	r3, #0
   2059c:	beq	205b0 <__assert_fail@plt+0xf2c0>
   205a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205a4:	mov	r2, #30
   205a8:	strb	r2, [r3, #4]
   205ac:	b	205d4 <__assert_fail@plt+0xf2e4>
   205b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205b4:	mov	r2, #1
   205b8:	strb	r2, [r3, #4]
   205bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205c0:	ldrb	r2, [fp, #-13]
   205c4:	strb	r2, [r3]
   205c8:	mov	r3, #1
   205cc:	str	r3, [fp, #-12]
   205d0:	nop	{0}
   205d4:	ldr	r3, [fp, #-12]
   205d8:	b	20638 <__assert_fail@plt+0xf348>
   205dc:	ldrb	r3, [fp, #-13]
   205e0:	cmp	r3, #93	; 0x5d
   205e4:	beq	20608 <__assert_fail@plt+0xf318>
   205e8:	cmp	r3, #94	; 0x5e
   205ec:	beq	20618 <__assert_fail@plt+0xf328>
   205f0:	cmp	r3, #45	; 0x2d
   205f4:	bne	20628 <__assert_fail@plt+0xf338>
   205f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205fc:	mov	r2, #22
   20600:	strb	r2, [r3, #4]
   20604:	b	20634 <__assert_fail@plt+0xf344>
   20608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2060c:	mov	r2, #21
   20610:	strb	r2, [r3, #4]
   20614:	b	20634 <__assert_fail@plt+0xf344>
   20618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2061c:	mov	r2, #25
   20620:	strb	r2, [r3, #4]
   20624:	b	20634 <__assert_fail@plt+0xf344>
   20628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2062c:	mov	r2, #1
   20630:	strb	r2, [r3, #4]
   20634:	mov	r3, #1
   20638:	mov	r0, r3
   2063c:	add	sp, fp, #0
   20640:	pop	{fp}		; (ldr fp, [sp], #4)
   20644:	bx	lr
   20648:	str	fp, [sp, #-8]!
   2064c:	str	lr, [sp, #4]
   20650:	add	fp, sp, #4
   20654:	sub	sp, sp, #48	; 0x30
   20658:	str	r0, [fp, #-32]	; 0xffffffe0
   2065c:	str	r1, [fp, #-36]	; 0xffffffdc
   20660:	str	r2, [fp, #-40]	; 0xffffffd8
   20664:	str	r3, [fp, #-44]	; 0xffffffd4
   20668:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2066c:	ldr	r3, [r3]
   20670:	str	r3, [fp, #-12]
   20674:	ldr	r3, [fp, #-12]
   20678:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2067c:	str	r2, [r3, #128]	; 0x80
   20680:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20684:	orr	r2, r3, #8388608	; 0x800000
   20688:	sub	r3, fp, #28
   2068c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20690:	mov	r0, r3
   20694:	bl	1f638 <__assert_fail@plt+0xe348>
   20698:	sub	r2, fp, #28
   2069c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   206a0:	str	r3, [sp, #4]
   206a4:	mov	r3, #0
   206a8:	str	r3, [sp]
   206ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   206b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   206b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   206b8:	bl	207b0 <__assert_fail@plt+0xf4c0>
   206bc:	str	r0, [fp, #-16]
   206c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   206c4:	ldr	r3, [r3]
   206c8:	cmp	r3, #0
   206cc:	movne	r3, #1
   206d0:	moveq	r3, #0
   206d4:	uxtb	r3, r3
   206d8:	cmp	r3, #0
   206dc:	beq	20704 <__assert_fail@plt+0xf414>
   206e0:	ldr	r3, [fp, #-16]
   206e4:	cmp	r3, #0
   206e8:	moveq	r3, #1
   206ec:	movne	r3, #0
   206f0:	uxtb	r3, r3
   206f4:	cmp	r3, #0
   206f8:	beq	20704 <__assert_fail@plt+0xf414>
   206fc:	mov	r3, #0
   20700:	b	2079c <__assert_fail@plt+0xf4ac>
   20704:	mov	r3, #2
   20708:	mov	r2, #0
   2070c:	mov	r1, #0
   20710:	ldr	r0, [fp, #-12]
   20714:	bl	242f0 <__assert_fail@plt+0x13000>
   20718:	str	r0, [fp, #-20]	; 0xffffffec
   2071c:	ldr	r3, [fp, #-16]
   20720:	cmp	r3, #0
   20724:	beq	20744 <__assert_fail@plt+0xf454>
   20728:	mov	r3, #16
   2072c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20730:	ldr	r1, [fp, #-16]
   20734:	ldr	r0, [fp, #-12]
   20738:	bl	242f0 <__assert_fail@plt+0x13000>
   2073c:	str	r0, [fp, #-8]
   20740:	b	2074c <__assert_fail@plt+0xf45c>
   20744:	ldr	r3, [fp, #-20]	; 0xffffffec
   20748:	str	r3, [fp, #-8]
   2074c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20750:	cmp	r3, #0
   20754:	moveq	r3, #1
   20758:	movne	r3, #0
   2075c:	uxtb	r3, r3
   20760:	cmp	r3, #0
   20764:	bne	20784 <__assert_fail@plt+0xf494>
   20768:	ldr	r3, [fp, #-8]
   2076c:	cmp	r3, #0
   20770:	moveq	r3, #1
   20774:	movne	r3, #0
   20778:	uxtb	r3, r3
   2077c:	cmp	r3, #0
   20780:	beq	20798 <__assert_fail@plt+0xf4a8>
   20784:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20788:	mov	r2, #12
   2078c:	str	r2, [r3]
   20790:	mov	r3, #0
   20794:	b	2079c <__assert_fail@plt+0xf4ac>
   20798:	ldr	r3, [fp, #-8]
   2079c:	mov	r0, r3
   207a0:	sub	sp, fp, #4
   207a4:	ldr	fp, [sp]
   207a8:	add	sp, sp, #4
   207ac:	pop	{pc}		; (ldr pc, [sp], #4)
   207b0:	str	fp, [sp, #-8]!
   207b4:	str	lr, [sp, #4]
   207b8:	add	fp, sp, #4
   207bc:	sub	sp, sp, #48	; 0x30
   207c0:	str	r0, [fp, #-32]	; 0xffffffe0
   207c4:	str	r1, [fp, #-36]	; 0xffffffdc
   207c8:	str	r2, [fp, #-40]	; 0xffffffd8
   207cc:	str	r3, [fp, #-44]	; 0xffffffd4
   207d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   207d4:	ldr	r3, [r3]
   207d8:	str	r3, [fp, #-16]
   207dc:	mov	r3, #0
   207e0:	str	r3, [fp, #-12]
   207e4:	ldr	r3, [fp, #-16]
   207e8:	ldr	r3, [r3, #84]	; 0x54
   207ec:	str	r3, [fp, #-20]	; 0xffffffec
   207f0:	ldr	r3, [fp, #8]
   207f4:	str	r3, [sp, #4]
   207f8:	ldr	r3, [fp, #4]
   207fc:	str	r3, [sp]
   20800:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20804:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20808:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2080c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20810:	bl	209e8 <__assert_fail@plt+0xf6f8>
   20814:	str	r0, [fp, #-8]
   20818:	ldr	r3, [fp, #8]
   2081c:	ldr	r3, [r3]
   20820:	cmp	r3, #0
   20824:	movne	r3, #1
   20828:	moveq	r3, #0
   2082c:	uxtb	r3, r3
   20830:	cmp	r3, #0
   20834:	beq	209c0 <__assert_fail@plt+0xf6d0>
   20838:	ldr	r3, [fp, #-8]
   2083c:	cmp	r3, #0
   20840:	moveq	r3, #1
   20844:	movne	r3, #0
   20848:	uxtb	r3, r3
   2084c:	cmp	r3, #0
   20850:	beq	209c0 <__assert_fail@plt+0xf6d0>
   20854:	mov	r3, #0
   20858:	b	209d4 <__assert_fail@plt+0xf6e4>
   2085c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20860:	orr	r3, r3, #8388608	; 0x800000
   20864:	mov	r2, r3
   20868:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2086c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20870:	bl	1f638 <__assert_fail@plt+0xe348>
   20874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20878:	ldrb	r3, [r3, #4]
   2087c:	cmp	r3, #10
   20880:	beq	20970 <__assert_fail@plt+0xf680>
   20884:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20888:	ldrb	r3, [r3, #4]
   2088c:	cmp	r3, #2
   20890:	beq	20970 <__assert_fail@plt+0xf680>
   20894:	ldr	r3, [fp, #4]
   20898:	cmp	r3, #0
   2089c:	beq	208b0 <__assert_fail@plt+0xf5c0>
   208a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   208a4:	ldrb	r3, [r3, #4]
   208a8:	cmp	r3, #9
   208ac:	beq	20970 <__assert_fail@plt+0xf680>
   208b0:	ldr	r3, [fp, #-16]
   208b4:	ldr	r3, [r3, #84]	; 0x54
   208b8:	str	r3, [fp, #-24]	; 0xffffffe8
   208bc:	ldr	r3, [fp, #-16]
   208c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   208c4:	str	r2, [r3, #84]	; 0x54
   208c8:	ldr	r3, [fp, #8]
   208cc:	str	r3, [sp, #4]
   208d0:	ldr	r3, [fp, #4]
   208d4:	str	r3, [sp]
   208d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   208dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   208e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   208e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   208e8:	bl	209e8 <__assert_fail@plt+0xf6f8>
   208ec:	str	r0, [fp, #-12]
   208f0:	ldr	r3, [fp, #8]
   208f4:	ldr	r3, [r3]
   208f8:	cmp	r3, #0
   208fc:	movne	r3, #1
   20900:	moveq	r3, #0
   20904:	uxtb	r3, r3
   20908:	cmp	r3, #0
   2090c:	beq	20954 <__assert_fail@plt+0xf664>
   20910:	ldr	r3, [fp, #-12]
   20914:	cmp	r3, #0
   20918:	moveq	r3, #1
   2091c:	movne	r3, #0
   20920:	uxtb	r3, r3
   20924:	cmp	r3, #0
   20928:	beq	20954 <__assert_fail@plt+0xf664>
   2092c:	ldr	r3, [fp, #-8]
   20930:	cmp	r3, #0
   20934:	beq	2094c <__assert_fail@plt+0xf65c>
   20938:	mov	r2, #0
   2093c:	movw	r1, #17880	; 0x45d8
   20940:	movt	r1, #2
   20944:	ldr	r0, [fp, #-8]
   20948:	bl	1db98 <__assert_fail@plt+0xc8a8>
   2094c:	mov	r3, #0
   20950:	b	209d4 <__assert_fail@plt+0xf6e4>
   20954:	ldr	r3, [fp, #-16]
   20958:	ldr	r2, [r3, #84]	; 0x54
   2095c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20960:	orr	r2, r2, r3
   20964:	ldr	r3, [fp, #-16]
   20968:	str	r2, [r3, #84]	; 0x54
   2096c:	b	20978 <__assert_fail@plt+0xf688>
   20970:	mov	r3, #0
   20974:	str	r3, [fp, #-12]
   20978:	mov	r3, #10
   2097c:	ldr	r2, [fp, #-12]
   20980:	ldr	r1, [fp, #-8]
   20984:	ldr	r0, [fp, #-16]
   20988:	bl	242f0 <__assert_fail@plt+0x13000>
   2098c:	str	r0, [fp, #-8]
   20990:	ldr	r3, [fp, #-8]
   20994:	cmp	r3, #0
   20998:	moveq	r3, #1
   2099c:	movne	r3, #0
   209a0:	uxtb	r3, r3
   209a4:	cmp	r3, #0
   209a8:	beq	209c0 <__assert_fail@plt+0xf6d0>
   209ac:	ldr	r3, [fp, #8]
   209b0:	mov	r2, #12
   209b4:	str	r2, [r3]
   209b8:	mov	r3, #0
   209bc:	b	209d4 <__assert_fail@plt+0xf6e4>
   209c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   209c4:	ldrb	r3, [r3, #4]
   209c8:	cmp	r3, #10
   209cc:	beq	2085c <__assert_fail@plt+0xf56c>
   209d0:	ldr	r3, [fp, #-8]
   209d4:	mov	r0, r3
   209d8:	sub	sp, fp, #4
   209dc:	ldr	fp, [sp]
   209e0:	add	sp, sp, #4
   209e4:	pop	{pc}		; (ldr pc, [sp], #4)
   209e8:	str	fp, [sp, #-8]!
   209ec:	str	lr, [sp, #4]
   209f0:	add	fp, sp, #4
   209f4:	sub	sp, sp, #40	; 0x28
   209f8:	str	r0, [fp, #-24]	; 0xffffffe8
   209fc:	str	r1, [fp, #-28]	; 0xffffffe4
   20a00:	str	r2, [fp, #-32]	; 0xffffffe0
   20a04:	str	r3, [fp, #-36]	; 0xffffffdc
   20a08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a0c:	ldr	r3, [r3]
   20a10:	str	r3, [fp, #-12]
   20a14:	ldr	r3, [fp, #8]
   20a18:	str	r3, [sp, #4]
   20a1c:	ldr	r3, [fp, #4]
   20a20:	str	r3, [sp]
   20a24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20a28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20a34:	bl	20bf8 <__assert_fail@plt+0xf908>
   20a38:	str	r0, [fp, #-8]
   20a3c:	ldr	r3, [fp, #8]
   20a40:	ldr	r3, [r3]
   20a44:	cmp	r3, #0
   20a48:	movne	r3, #1
   20a4c:	moveq	r3, #0
   20a50:	uxtb	r3, r3
   20a54:	cmp	r3, #0
   20a58:	beq	20ba4 <__assert_fail@plt+0xf8b4>
   20a5c:	ldr	r3, [fp, #-8]
   20a60:	cmp	r3, #0
   20a64:	moveq	r3, #1
   20a68:	movne	r3, #0
   20a6c:	uxtb	r3, r3
   20a70:	cmp	r3, #0
   20a74:	beq	20ba4 <__assert_fail@plt+0xf8b4>
   20a78:	mov	r3, #0
   20a7c:	b	20be4 <__assert_fail@plt+0xf8f4>
   20a80:	ldr	r3, [fp, #8]
   20a84:	str	r3, [sp, #4]
   20a88:	ldr	r3, [fp, #4]
   20a8c:	str	r3, [sp]
   20a90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20a94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20aa0:	bl	20bf8 <__assert_fail@plt+0xf908>
   20aa4:	str	r0, [fp, #-16]
   20aa8:	ldr	r3, [fp, #8]
   20aac:	ldr	r3, [r3]
   20ab0:	cmp	r3, #0
   20ab4:	movne	r3, #1
   20ab8:	moveq	r3, #0
   20abc:	uxtb	r3, r3
   20ac0:	cmp	r3, #0
   20ac4:	beq	20b0c <__assert_fail@plt+0xf81c>
   20ac8:	ldr	r3, [fp, #-16]
   20acc:	cmp	r3, #0
   20ad0:	moveq	r3, #1
   20ad4:	movne	r3, #0
   20ad8:	uxtb	r3, r3
   20adc:	cmp	r3, #0
   20ae0:	beq	20b0c <__assert_fail@plt+0xf81c>
   20ae4:	ldr	r3, [fp, #-8]
   20ae8:	cmp	r3, #0
   20aec:	beq	20b04 <__assert_fail@plt+0xf814>
   20af0:	mov	r2, #0
   20af4:	movw	r1, #17880	; 0x45d8
   20af8:	movt	r1, #2
   20afc:	ldr	r0, [fp, #-8]
   20b00:	bl	1db98 <__assert_fail@plt+0xc8a8>
   20b04:	mov	r3, #0
   20b08:	b	20be4 <__assert_fail@plt+0xf8f4>
   20b0c:	ldr	r3, [fp, #-8]
   20b10:	cmp	r3, #0
   20b14:	beq	20b90 <__assert_fail@plt+0xf8a0>
   20b18:	ldr	r3, [fp, #-16]
   20b1c:	cmp	r3, #0
   20b20:	beq	20b90 <__assert_fail@plt+0xf8a0>
   20b24:	mov	r3, #16
   20b28:	ldr	r2, [fp, #-16]
   20b2c:	ldr	r1, [fp, #-8]
   20b30:	ldr	r0, [fp, #-12]
   20b34:	bl	242f0 <__assert_fail@plt+0x13000>
   20b38:	str	r0, [fp, #-20]	; 0xffffffec
   20b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20b40:	cmp	r3, #0
   20b44:	bne	20b84 <__assert_fail@plt+0xf894>
   20b48:	mov	r2, #0
   20b4c:	movw	r1, #17880	; 0x45d8
   20b50:	movt	r1, #2
   20b54:	ldr	r0, [fp, #-16]
   20b58:	bl	1db98 <__assert_fail@plt+0xc8a8>
   20b5c:	mov	r2, #0
   20b60:	movw	r1, #17880	; 0x45d8
   20b64:	movt	r1, #2
   20b68:	ldr	r0, [fp, #-8]
   20b6c:	bl	1db98 <__assert_fail@plt+0xc8a8>
   20b70:	ldr	r3, [fp, #8]
   20b74:	mov	r2, #12
   20b78:	str	r2, [r3]
   20b7c:	mov	r3, #0
   20b80:	b	20be4 <__assert_fail@plt+0xf8f4>
   20b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   20b88:	str	r3, [fp, #-8]
   20b8c:	b	20ba4 <__assert_fail@plt+0xf8b4>
   20b90:	ldr	r3, [fp, #-8]
   20b94:	cmp	r3, #0
   20b98:	bne	20ba4 <__assert_fail@plt+0xf8b4>
   20b9c:	ldr	r3, [fp, #-16]
   20ba0:	str	r3, [fp, #-8]
   20ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20ba8:	ldrb	r3, [r3, #4]
   20bac:	cmp	r3, #10
   20bb0:	beq	20be0 <__assert_fail@plt+0xf8f0>
   20bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20bb8:	ldrb	r3, [r3, #4]
   20bbc:	cmp	r3, #2
   20bc0:	beq	20be0 <__assert_fail@plt+0xf8f0>
   20bc4:	ldr	r3, [fp, #4]
   20bc8:	cmp	r3, #0
   20bcc:	beq	20a80 <__assert_fail@plt+0xf790>
   20bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20bd4:	ldrb	r3, [r3, #4]
   20bd8:	cmp	r3, #9
   20bdc:	bne	20a80 <__assert_fail@plt+0xf790>
   20be0:	ldr	r3, [fp, #-8]
   20be4:	mov	r0, r3
   20be8:	sub	sp, fp, #4
   20bec:	ldr	fp, [sp]
   20bf0:	add	sp, sp, #4
   20bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   20bf8:	str	fp, [sp, #-8]!
   20bfc:	str	lr, [sp, #4]
   20c00:	add	fp, sp, #4
   20c04:	sub	sp, sp, #48	; 0x30
   20c08:	str	r0, [fp, #-32]	; 0xffffffe0
   20c0c:	str	r1, [fp, #-36]	; 0xffffffdc
   20c10:	str	r2, [fp, #-40]	; 0xffffffd8
   20c14:	str	r3, [fp, #-44]	; 0xffffffd4
   20c18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20c1c:	ldr	r3, [r3]
   20c20:	str	r3, [fp, #-16]
   20c24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20c28:	ldrb	r3, [r3, #4]
   20c2c:	sub	r3, r3, #1
   20c30:	cmp	r3, #35	; 0x23
   20c34:	ldrls	pc, [pc, r3, lsl #2]
   20c38:	b	21430 <__assert_fail@plt+0x10140>
   20c3c:	andeq	r0, r2, ip, asr #25
   20c40:	andeq	r1, r2, r8, lsr #8
   20c44:	andeq	r1, r2, r0, lsr r4
   20c48:	andeq	r0, r2, r0, ror #29
   20c4c:	andeq	r1, r2, r4, lsr #5
   20c50:	andeq	r1, r2, r0, lsr r4
   20c54:	andeq	r1, r2, r0, lsr r4
   20c58:	andeq	r0, r2, ip, lsl #28
   20c5c:	andeq	r1, r2, r0, asr #32
   20c60:	andeq	r1, r2, r8, lsr #8
   20c64:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c68:	andeq	r1, r2, r8, asr #1
   20c6c:	andeq	r1, r2, r0, lsr r4
   20c70:	andeq	r1, r2, r0, lsr r4
   20c74:	andeq	r1, r2, r0, lsr r4
   20c78:	andeq	r1, r2, r0, lsr r4
   20c7c:	andeq	r1, r2, r0, lsr r4
   20c80:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c84:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20c88:	andeq	r0, r2, ip, ror lr
   20c8c:	andeq	r1, r2, r0, lsr r4
   20c90:	andeq	r1, r2, r0, lsr r4
   20c94:	andeq	r0, r2, ip, lsr #31
   20c98:	andeq	r1, r2, r4, ror r0
   20c9c:	andeq	r1, r2, r0, lsr r4
   20ca0:	andeq	r1, r2, r0, lsr r4
   20ca4:	andeq	r1, r2, r0, lsr r4
   20ca8:	andeq	r1, r2, r0, lsr r4
   20cac:	andeq	r1, r2, r0, lsr r4
   20cb0:	andeq	r1, r2, r0, lsr r4
   20cb4:	andeq	r1, r2, r0, lsr r4
   20cb8:	andeq	r1, r2, r0, lsl r3
   20cbc:	andeq	r1, r2, r0, lsl r3
   20cc0:	muleq	r2, ip, r3
   20cc4:	muleq	r2, ip, r3
   20cc8:	andeq	r1, r2, r0, lsr r4
   20ccc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20cd0:	mov	r2, #0
   20cd4:	mov	r1, #0
   20cd8:	ldr	r0, [fp, #-16]
   20cdc:	bl	24358 <__assert_fail@plt+0x13068>
   20ce0:	str	r0, [fp, #-8]
   20ce4:	ldr	r3, [fp, #-8]
   20ce8:	cmp	r3, #0
   20cec:	moveq	r3, #1
   20cf0:	movne	r3, #0
   20cf4:	uxtb	r3, r3
   20cf8:	cmp	r3, #0
   20cfc:	beq	20d14 <__assert_fail@plt+0xfa24>
   20d00:	ldr	r3, [fp, #8]
   20d04:	mov	r2, #12
   20d08:	str	r2, [r3]
   20d0c:	mov	r3, #0
   20d10:	b	215c8 <__assert_fail@plt+0x102d8>
   20d14:	ldr	r3, [fp, #-16]
   20d18:	ldr	r3, [r3, #92]	; 0x5c
   20d1c:	cmp	r3, #1
   20d20:	ble	21444 <__assert_fail@plt+0x10154>
   20d24:	b	20db4 <__assert_fail@plt+0xfac4>
   20d28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20d2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20d30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d34:	bl	1f638 <__assert_fail@plt+0xe348>
   20d38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20d3c:	mov	r2, #0
   20d40:	mov	r1, #0
   20d44:	ldr	r0, [fp, #-16]
   20d48:	bl	24358 <__assert_fail@plt+0x13068>
   20d4c:	str	r0, [fp, #-20]	; 0xffffffec
   20d50:	mov	r3, #16
   20d54:	ldr	r2, [fp, #-20]	; 0xffffffec
   20d58:	ldr	r1, [fp, #-8]
   20d5c:	ldr	r0, [fp, #-16]
   20d60:	bl	242f0 <__assert_fail@plt+0x13000>
   20d64:	str	r0, [fp, #-8]
   20d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d6c:	cmp	r3, #0
   20d70:	moveq	r3, #1
   20d74:	movne	r3, #0
   20d78:	uxtb	r3, r3
   20d7c:	cmp	r3, #0
   20d80:	bne	20da0 <__assert_fail@plt+0xfab0>
   20d84:	ldr	r3, [fp, #-8]
   20d88:	cmp	r3, #0
   20d8c:	moveq	r3, #1
   20d90:	movne	r3, #0
   20d94:	uxtb	r3, r3
   20d98:	cmp	r3, #0
   20d9c:	beq	20db4 <__assert_fail@plt+0xfac4>
   20da0:	ldr	r3, [fp, #8]
   20da4:	mov	r2, #12
   20da8:	str	r2, [r3]
   20dac:	mov	r3, #0
   20db0:	b	215c8 <__assert_fail@plt+0x102d8>
   20db4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20db8:	ldr	r2, [r3, #56]	; 0x38
   20dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20dc0:	ldr	r3, [r3, #40]	; 0x28
   20dc4:	cmp	r2, r3
   20dc8:	ble	21444 <__assert_fail@plt+0x10154>
   20dcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20dd0:	ldr	r2, [r3, #40]	; 0x28
   20dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20dd8:	ldr	r3, [r3, #28]
   20ddc:	cmp	r2, r3
   20de0:	beq	21444 <__assert_fail@plt+0x10154>
   20de4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20de8:	ldr	r2, [r3, #8]
   20dec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20df0:	ldr	r3, [r3, #40]	; 0x28
   20df4:	lsl	r3, r3, #2
   20df8:	add	r3, r2, r3
   20dfc:	ldr	r3, [r3]
   20e00:	cmn	r3, #1
   20e04:	beq	20d28 <__assert_fail@plt+0xfa38>
   20e08:	b	21444 <__assert_fail@plt+0x10154>
   20e0c:	ldr	r3, [fp, #4]
   20e10:	add	r3, r3, #1
   20e14:	ldr	r2, [fp, #8]
   20e18:	str	r2, [sp, #4]
   20e1c:	str	r3, [sp]
   20e20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20e24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20e28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20e2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20e30:	bl	215dc <__assert_fail@plt+0x102ec>
   20e34:	str	r0, [fp, #-8]
   20e38:	ldr	r3, [fp, #8]
   20e3c:	ldr	r3, [r3]
   20e40:	cmp	r3, #0
   20e44:	movne	r3, #1
   20e48:	moveq	r3, #0
   20e4c:	uxtb	r3, r3
   20e50:	cmp	r3, #0
   20e54:	beq	2144c <__assert_fail@plt+0x1015c>
   20e58:	ldr	r3, [fp, #-8]
   20e5c:	cmp	r3, #0
   20e60:	moveq	r3, #1
   20e64:	movne	r3, #0
   20e68:	uxtb	r3, r3
   20e6c:	cmp	r3, #0
   20e70:	beq	2144c <__assert_fail@plt+0x1015c>
   20e74:	mov	r3, #0
   20e78:	b	215c8 <__assert_fail@plt+0x102d8>
   20e7c:	ldr	r3, [fp, #8]
   20e80:	str	r3, [sp]
   20e84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20e88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20e8c:	ldr	r1, [fp, #-16]
   20e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20e94:	bl	2239c <__assert_fail@plt+0x110ac>
   20e98:	str	r0, [fp, #-8]
   20e9c:	ldr	r3, [fp, #8]
   20ea0:	ldr	r3, [r3]
   20ea4:	cmp	r3, #0
   20ea8:	movne	r3, #1
   20eac:	moveq	r3, #0
   20eb0:	uxtb	r3, r3
   20eb4:	cmp	r3, #0
   20eb8:	beq	21454 <__assert_fail@plt+0x10164>
   20ebc:	ldr	r3, [fp, #-8]
   20ec0:	cmp	r3, #0
   20ec4:	moveq	r3, #1
   20ec8:	movne	r3, #0
   20ecc:	uxtb	r3, r3
   20ed0:	cmp	r3, #0
   20ed4:	beq	21454 <__assert_fail@plt+0x10164>
   20ed8:	mov	r3, #0
   20edc:	b	215c8 <__assert_fail@plt+0x102d8>
   20ee0:	ldr	r3, [fp, #-16]
   20ee4:	ldr	r3, [r3, #84]	; 0x54
   20ee8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20eec:	ldr	r2, [r2]
   20ef0:	mov	r1, #1
   20ef4:	lsl	r2, r1, r2
   20ef8:	and	r3, r3, r2
   20efc:	cmp	r3, #0
   20f00:	bne	20f18 <__assert_fail@plt+0xfc28>
   20f04:	ldr	r3, [fp, #8]
   20f08:	mov	r2, #6
   20f0c:	str	r2, [r3]
   20f10:	mov	r3, #0
   20f14:	b	215c8 <__assert_fail@plt+0x102d8>
   20f18:	ldr	r3, [fp, #-16]
   20f1c:	ldr	r3, [r3, #80]	; 0x50
   20f20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20f24:	ldr	r2, [r2]
   20f28:	mov	r1, #1
   20f2c:	lsl	r2, r1, r2
   20f30:	orr	r2, r3, r2
   20f34:	ldr	r3, [fp, #-16]
   20f38:	str	r2, [r3, #80]	; 0x50
   20f3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20f40:	mov	r2, #0
   20f44:	mov	r1, #0
   20f48:	ldr	r0, [fp, #-16]
   20f4c:	bl	24358 <__assert_fail@plt+0x13068>
   20f50:	str	r0, [fp, #-8]
   20f54:	ldr	r3, [fp, #-8]
   20f58:	cmp	r3, #0
   20f5c:	moveq	r3, #1
   20f60:	movne	r3, #0
   20f64:	uxtb	r3, r3
   20f68:	cmp	r3, #0
   20f6c:	beq	20f84 <__assert_fail@plt+0xfc94>
   20f70:	ldr	r3, [fp, #8]
   20f74:	mov	r2, #12
   20f78:	str	r2, [r3]
   20f7c:	mov	r3, #0
   20f80:	b	215c8 <__assert_fail@plt+0x102d8>
   20f84:	ldr	r3, [fp, #-16]
   20f88:	ldr	r3, [r3, #76]	; 0x4c
   20f8c:	add	r2, r3, #1
   20f90:	ldr	r3, [fp, #-16]
   20f94:	str	r2, [r3, #76]	; 0x4c
   20f98:	ldr	r2, [fp, #-16]
   20f9c:	ldrb	r3, [r2, #88]	; 0x58
   20fa0:	orr	r3, r3, #2
   20fa4:	strb	r3, [r2, #88]	; 0x58
   20fa8:	b	21478 <__assert_fail@plt+0x10188>
   20fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20fb0:	and	r3, r3, #16777216	; 0x1000000
   20fb4:	cmp	r3, #0
   20fb8:	beq	20fd0 <__assert_fail@plt+0xfce0>
   20fbc:	ldr	r3, [fp, #8]
   20fc0:	mov	r2, #13
   20fc4:	str	r2, [r3]
   20fc8:	mov	r3, #0
   20fcc:	b	215c8 <__assert_fail@plt+0x102d8>
   20fd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20fd4:	and	r3, r3, #32
   20fd8:	cmp	r3, #0
   20fdc:	beq	20ff4 <__assert_fail@plt+0xfd04>
   20fe0:	ldr	r3, [fp, #8]
   20fe4:	mov	r2, #13
   20fe8:	str	r2, [r3]
   20fec:	mov	r3, #0
   20ff0:	b	215c8 <__assert_fail@plt+0x102d8>
   20ff4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20ff8:	and	r3, r3, #16
   20ffc:	cmp	r3, #0
   21000:	beq	21040 <__assert_fail@plt+0xfd50>
   21004:	ldr	r2, [fp, #-44]	; 0xffffffd4
   21008:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2100c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21010:	bl	1f638 <__assert_fail@plt+0xe348>
   21014:	ldr	r3, [fp, #8]
   21018:	str	r3, [sp, #4]
   2101c:	ldr	r3, [fp, #4]
   21020:	str	r3, [sp]
   21024:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21028:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2102c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21034:	bl	20bf8 <__assert_fail@plt+0xf908>
   21038:	mov	r3, r0
   2103c:	b	215c8 <__assert_fail@plt+0x102d8>
   21040:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21044:	ldrb	r3, [r3, #4]
   21048:	cmp	r3, #9
   2104c:	bne	21074 <__assert_fail@plt+0xfd84>
   21050:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21054:	and	r3, r3, #131072	; 0x20000
   21058:	cmp	r3, #0
   2105c:	bne	21074 <__assert_fail@plt+0xfd84>
   21060:	ldr	r3, [fp, #8]
   21064:	mov	r2, #16
   21068:	str	r2, [r3]
   2106c:	mov	r3, #0
   21070:	b	215c8 <__assert_fail@plt+0x102d8>
   21074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21078:	mov	r2, #1
   2107c:	strb	r2, [r3, #4]
   21080:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21084:	mov	r2, #0
   21088:	mov	r1, #0
   2108c:	ldr	r0, [fp, #-16]
   21090:	bl	24358 <__assert_fail@plt+0x13068>
   21094:	str	r0, [fp, #-8]
   21098:	ldr	r3, [fp, #-8]
   2109c:	cmp	r3, #0
   210a0:	moveq	r3, #1
   210a4:	movne	r3, #0
   210a8:	uxtb	r3, r3
   210ac:	cmp	r3, #0
   210b0:	beq	2145c <__assert_fail@plt+0x1016c>
   210b4:	ldr	r3, [fp, #8]
   210b8:	mov	r2, #12
   210bc:	str	r2, [r3]
   210c0:	mov	r3, #0
   210c4:	b	215c8 <__assert_fail@plt+0x102d8>
   210c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   210cc:	ldr	r2, [r3]
   210d0:	movw	r3, #783	; 0x30f
   210d4:	and	r3, r3, r2
   210d8:	cmp	r3, #0
   210dc:	beq	21100 <__assert_fail@plt+0xfe10>
   210e0:	ldr	r3, [fp, #-16]
   210e4:	ldrb	r3, [r3, #88]	; 0x58
   210e8:	and	r3, r3, #16
   210ec:	uxtb	r3, r3
   210f0:	cmp	r3, #0
   210f4:	bne	21100 <__assert_fail@plt+0xfe10>
   210f8:	ldr	r0, [fp, #-16]
   210fc:	bl	1cd84 <__assert_fail@plt+0xba94>
   21100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21104:	ldr	r3, [r3]
   21108:	cmp	r3, #256	; 0x100
   2110c:	beq	21120 <__assert_fail@plt+0xfe30>
   21110:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21114:	ldr	r3, [r3]
   21118:	cmp	r3, #512	; 0x200
   2111c:	bne	21240 <__assert_fail@plt+0xff50>
   21120:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21124:	ldr	r3, [r3]
   21128:	cmp	r3, #256	; 0x100
   2112c:	bne	21164 <__assert_fail@plt+0xfe74>
   21130:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21134:	mov	r2, #6
   21138:	str	r2, [r3]
   2113c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21140:	mov	r2, #0
   21144:	mov	r1, #0
   21148:	ldr	r0, [fp, #-16]
   2114c:	bl	24358 <__assert_fail@plt+0x13068>
   21150:	str	r0, [fp, #-12]
   21154:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21158:	mov	r2, #9
   2115c:	str	r2, [r3]
   21160:	b	21194 <__assert_fail@plt+0xfea4>
   21164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21168:	mov	r2, #5
   2116c:	str	r2, [r3]
   21170:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21174:	mov	r2, #0
   21178:	mov	r1, #0
   2117c:	ldr	r0, [fp, #-16]
   21180:	bl	24358 <__assert_fail@plt+0x13068>
   21184:	str	r0, [fp, #-12]
   21188:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2118c:	mov	r2, #10
   21190:	str	r2, [r3]
   21194:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21198:	mov	r2, #0
   2119c:	mov	r1, #0
   211a0:	ldr	r0, [fp, #-16]
   211a4:	bl	24358 <__assert_fail@plt+0x13068>
   211a8:	str	r0, [fp, #-24]	; 0xffffffe8
   211ac:	mov	r3, #10
   211b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   211b4:	ldr	r1, [fp, #-12]
   211b8:	ldr	r0, [fp, #-16]
   211bc:	bl	242f0 <__assert_fail@plt+0x13000>
   211c0:	str	r0, [fp, #-8]
   211c4:	ldr	r3, [fp, #-12]
   211c8:	cmp	r3, #0
   211cc:	moveq	r3, #1
   211d0:	movne	r3, #0
   211d4:	uxtb	r3, r3
   211d8:	cmp	r3, #0
   211dc:	bne	211fc <__assert_fail@plt+0xff0c>
   211e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   211e4:	cmp	r3, #0
   211e8:	moveq	r3, #1
   211ec:	movne	r3, #0
   211f0:	uxtb	r3, r3
   211f4:	cmp	r3, #0
   211f8:	beq	21204 <__assert_fail@plt+0xff14>
   211fc:	mov	r3, #1
   21200:	b	21208 <__assert_fail@plt+0xff18>
   21204:	mov	r3, #0
   21208:	cmp	r3, #0
   2120c:	bne	2122c <__assert_fail@plt+0xff3c>
   21210:	ldr	r3, [fp, #-8]
   21214:	cmp	r3, #0
   21218:	moveq	r3, #1
   2121c:	movne	r3, #0
   21220:	uxtb	r3, r3
   21224:	cmp	r3, #0
   21228:	beq	21288 <__assert_fail@plt+0xff98>
   2122c:	ldr	r3, [fp, #8]
   21230:	mov	r2, #12
   21234:	str	r2, [r3]
   21238:	mov	r3, #0
   2123c:	b	215c8 <__assert_fail@plt+0x102d8>
   21240:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21244:	mov	r2, #0
   21248:	mov	r1, #0
   2124c:	ldr	r0, [fp, #-16]
   21250:	bl	24358 <__assert_fail@plt+0x13068>
   21254:	str	r0, [fp, #-8]
   21258:	ldr	r3, [fp, #-8]
   2125c:	cmp	r3, #0
   21260:	moveq	r3, #1
   21264:	movne	r3, #0
   21268:	uxtb	r3, r3
   2126c:	cmp	r3, #0
   21270:	beq	2128c <__assert_fail@plt+0xff9c>
   21274:	ldr	r3, [fp, #8]
   21278:	mov	r2, #12
   2127c:	str	r2, [r3]
   21280:	mov	r3, #0
   21284:	b	215c8 <__assert_fail@plt+0x102d8>
   21288:	nop	{0}
   2128c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   21290:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21294:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21298:	bl	1f638 <__assert_fail@plt+0xe348>
   2129c:	ldr	r3, [fp, #-8]
   212a0:	b	215c8 <__assert_fail@plt+0x102d8>
   212a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   212a8:	mov	r2, #0
   212ac:	mov	r1, #0
   212b0:	ldr	r0, [fp, #-16]
   212b4:	bl	24358 <__assert_fail@plt+0x13068>
   212b8:	str	r0, [fp, #-8]
   212bc:	ldr	r3, [fp, #-8]
   212c0:	cmp	r3, #0
   212c4:	moveq	r3, #1
   212c8:	movne	r3, #0
   212cc:	uxtb	r3, r3
   212d0:	cmp	r3, #0
   212d4:	beq	212ec <__assert_fail@plt+0xfffc>
   212d8:	ldr	r3, [fp, #8]
   212dc:	mov	r2, #12
   212e0:	str	r2, [r3]
   212e4:	mov	r3, #0
   212e8:	b	215c8 <__assert_fail@plt+0x102d8>
   212ec:	ldr	r3, [fp, #-16]
   212f0:	ldr	r3, [r3, #92]	; 0x5c
   212f4:	cmp	r3, #1
   212f8:	ble	21464 <__assert_fail@plt+0x10174>
   212fc:	ldr	r2, [fp, #-16]
   21300:	ldrb	r3, [r2, #88]	; 0x58
   21304:	orr	r3, r3, #2
   21308:	strb	r3, [r2, #88]	; 0x58
   2130c:	b	21464 <__assert_fail@plt+0x10174>
   21310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21314:	ldr	r1, [r3, #64]	; 0x40
   21318:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2131c:	ldrb	r3, [r3, #4]
   21320:	cmp	r3, #33	; 0x21
   21324:	moveq	r3, #1
   21328:	movne	r3, #0
   2132c:	uxtb	r3, r3
   21330:	ldr	r2, [fp, #8]
   21334:	str	r2, [sp, #4]
   21338:	str	r3, [sp]
   2133c:	movw	r3, #14012	; 0x36bc
   21340:	movt	r3, #3
   21344:	movw	r2, #14016	; 0x36c0
   21348:	movt	r2, #3
   2134c:	ldr	r0, [fp, #-16]
   21350:	bl	23e70 <__assert_fail@plt+0x12b80>
   21354:	str	r0, [fp, #-8]
   21358:	ldr	r3, [fp, #8]
   2135c:	ldr	r3, [r3]
   21360:	cmp	r3, #0
   21364:	movne	r3, #1
   21368:	moveq	r3, #0
   2136c:	uxtb	r3, r3
   21370:	cmp	r3, #0
   21374:	beq	2146c <__assert_fail@plt+0x1017c>
   21378:	ldr	r3, [fp, #-8]
   2137c:	cmp	r3, #0
   21380:	moveq	r3, #1
   21384:	movne	r3, #0
   21388:	uxtb	r3, r3
   2138c:	cmp	r3, #0
   21390:	beq	2146c <__assert_fail@plt+0x1017c>
   21394:	mov	r3, #0
   21398:	b	215c8 <__assert_fail@plt+0x102d8>
   2139c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213a0:	ldr	r1, [r3, #64]	; 0x40
   213a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   213a8:	ldrb	r3, [r3, #4]
   213ac:	cmp	r3, #35	; 0x23
   213b0:	moveq	r3, #1
   213b4:	movne	r3, #0
   213b8:	uxtb	r3, r3
   213bc:	ldr	r2, [fp, #8]
   213c0:	str	r2, [sp, #4]
   213c4:	str	r3, [sp]
   213c8:	movw	r3, #14024	; 0x36c8
   213cc:	movt	r3, #3
   213d0:	movw	r2, #14028	; 0x36cc
   213d4:	movt	r2, #3
   213d8:	ldr	r0, [fp, #-16]
   213dc:	bl	23e70 <__assert_fail@plt+0x12b80>
   213e0:	str	r0, [fp, #-8]
   213e4:	ldr	r3, [fp, #8]
   213e8:	ldr	r3, [r3]
   213ec:	cmp	r3, #0
   213f0:	movne	r3, #1
   213f4:	moveq	r3, #0
   213f8:	uxtb	r3, r3
   213fc:	cmp	r3, #0
   21400:	beq	21474 <__assert_fail@plt+0x10184>
   21404:	ldr	r3, [fp, #-8]
   21408:	cmp	r3, #0
   2140c:	moveq	r3, #1
   21410:	movne	r3, #0
   21414:	uxtb	r3, r3
   21418:	cmp	r3, #0
   2141c:	beq	21474 <__assert_fail@plt+0x10184>
   21420:	mov	r3, #0
   21424:	b	215c8 <__assert_fail@plt+0x102d8>
   21428:	mov	r3, #0
   2142c:	b	215c8 <__assert_fail@plt+0x102d8>
   21430:	ldr	r3, [fp, #8]
   21434:	mov	r2, #5
   21438:	str	r2, [r3]
   2143c:	mov	r3, #0
   21440:	b	215c8 <__assert_fail@plt+0x102d8>
   21444:	nop	{0}
   21448:	b	21478 <__assert_fail@plt+0x10188>
   2144c:	nop	{0}
   21450:	b	21478 <__assert_fail@plt+0x10188>
   21454:	nop	{0}
   21458:	b	21478 <__assert_fail@plt+0x10188>
   2145c:	nop	{0}
   21460:	b	21478 <__assert_fail@plt+0x10188>
   21464:	nop	{0}
   21468:	b	21478 <__assert_fail@plt+0x10188>
   2146c:	nop	{0}
   21470:	b	21478 <__assert_fail@plt+0x10188>
   21474:	nop	{0}
   21478:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2147c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21480:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21484:	bl	1f638 <__assert_fail@plt+0xe348>
   21488:	b	21584 <__assert_fail@plt+0x10294>
   2148c:	ldr	r3, [fp, #8]
   21490:	str	r3, [sp, #4]
   21494:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21498:	str	r3, [sp]
   2149c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   214a0:	ldr	r2, [fp, #-16]
   214a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   214a8:	ldr	r0, [fp, #-8]
   214ac:	bl	217a8 <__assert_fail@plt+0x104b8>
   214b0:	str	r0, [fp, #-28]	; 0xffffffe4
   214b4:	ldr	r3, [fp, #8]
   214b8:	ldr	r3, [r3]
   214bc:	cmp	r3, #0
   214c0:	movne	r3, #1
   214c4:	moveq	r3, #0
   214c8:	uxtb	r3, r3
   214cc:	cmp	r3, #0
   214d0:	beq	21518 <__assert_fail@plt+0x10228>
   214d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   214d8:	cmp	r3, #0
   214dc:	moveq	r3, #1
   214e0:	movne	r3, #0
   214e4:	uxtb	r3, r3
   214e8:	cmp	r3, #0
   214ec:	beq	21518 <__assert_fail@plt+0x10228>
   214f0:	ldr	r3, [fp, #-8]
   214f4:	cmp	r3, #0
   214f8:	beq	21510 <__assert_fail@plt+0x10220>
   214fc:	mov	r2, #0
   21500:	movw	r1, #17880	; 0x45d8
   21504:	movt	r1, #2
   21508:	ldr	r0, [fp, #-8]
   2150c:	bl	1db98 <__assert_fail@plt+0xc8a8>
   21510:	mov	r3, #0
   21514:	b	215c8 <__assert_fail@plt+0x102d8>
   21518:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2151c:	str	r3, [fp, #-8]
   21520:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21524:	and	r3, r3, #16777216	; 0x1000000
   21528:	cmp	r3, #0
   2152c:	beq	21584 <__assert_fail@plt+0x10294>
   21530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21534:	ldrb	r3, [r3, #4]
   21538:	cmp	r3, #11
   2153c:	beq	21550 <__assert_fail@plt+0x10260>
   21540:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21544:	ldrb	r3, [r3, #4]
   21548:	cmp	r3, #23
   2154c:	bne	21584 <__assert_fail@plt+0x10294>
   21550:	ldr	r3, [fp, #-8]
   21554:	cmp	r3, #0
   21558:	beq	21570 <__assert_fail@plt+0x10280>
   2155c:	mov	r2, #0
   21560:	movw	r1, #17880	; 0x45d8
   21564:	movt	r1, #2
   21568:	ldr	r0, [fp, #-8]
   2156c:	bl	1db98 <__assert_fail@plt+0xc8a8>
   21570:	ldr	r3, [fp, #8]
   21574:	mov	r2, #13
   21578:	str	r2, [r3]
   2157c:	mov	r3, #0
   21580:	b	215c8 <__assert_fail@plt+0x102d8>
   21584:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21588:	ldrb	r3, [r3, #4]
   2158c:	cmp	r3, #11
   21590:	beq	2148c <__assert_fail@plt+0x1019c>
   21594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21598:	ldrb	r3, [r3, #4]
   2159c:	cmp	r3, #18
   215a0:	beq	2148c <__assert_fail@plt+0x1019c>
   215a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   215a8:	ldrb	r3, [r3, #4]
   215ac:	cmp	r3, #19
   215b0:	beq	2148c <__assert_fail@plt+0x1019c>
   215b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   215b8:	ldrb	r3, [r3, #4]
   215bc:	cmp	r3, #23
   215c0:	beq	2148c <__assert_fail@plt+0x1019c>
   215c4:	ldr	r3, [fp, #-8]
   215c8:	mov	r0, r3
   215cc:	sub	sp, fp, #4
   215d0:	ldr	fp, [sp]
   215d4:	add	sp, sp, #4
   215d8:	pop	{pc}		; (ldr pc, [sp], #4)
   215dc:	str	fp, [sp, #-8]!
   215e0:	str	lr, [sp, #4]
   215e4:	add	fp, sp, #4
   215e8:	sub	sp, sp, #40	; 0x28
   215ec:	str	r0, [fp, #-24]	; 0xffffffe8
   215f0:	str	r1, [fp, #-28]	; 0xffffffe4
   215f4:	str	r2, [fp, #-32]	; 0xffffffe0
   215f8:	str	r3, [fp, #-36]	; 0xffffffdc
   215fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21600:	ldr	r3, [r3]
   21604:	str	r3, [fp, #-12]
   21608:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2160c:	ldr	r3, [r3, #24]
   21610:	add	r1, r3, #1
   21614:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21618:	str	r1, [r2, #24]
   2161c:	str	r3, [fp, #-16]
   21620:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21624:	orr	r3, r3, #8388608	; 0x800000
   21628:	mov	r2, r3
   2162c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21634:	bl	1f638 <__assert_fail@plt+0xe348>
   21638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2163c:	ldrb	r3, [r3, #4]
   21640:	cmp	r3, #9
   21644:	bne	21654 <__assert_fail@plt+0x10364>
   21648:	mov	r3, #0
   2164c:	str	r3, [fp, #-8]
   21650:	b	21710 <__assert_fail@plt+0x10420>
   21654:	ldr	r3, [fp, #8]
   21658:	str	r3, [sp, #4]
   2165c:	ldr	r3, [fp, #4]
   21660:	str	r3, [sp]
   21664:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21668:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2166c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21674:	bl	207b0 <__assert_fail@plt+0xf4c0>
   21678:	str	r0, [fp, #-8]
   2167c:	ldr	r3, [fp, #8]
   21680:	ldr	r3, [r3]
   21684:	cmp	r3, #0
   21688:	moveq	r3, #1
   2168c:	movne	r3, #0
   21690:	uxtb	r3, r3
   21694:	cmp	r3, #0
   21698:	beq	216e8 <__assert_fail@plt+0x103f8>
   2169c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   216a0:	ldrb	r3, [r3, #4]
   216a4:	cmp	r3, #9
   216a8:	movne	r3, #1
   216ac:	moveq	r3, #0
   216b0:	uxtb	r3, r3
   216b4:	cmp	r3, #0
   216b8:	beq	216e8 <__assert_fail@plt+0x103f8>
   216bc:	ldr	r3, [fp, #-8]
   216c0:	cmp	r3, #0
   216c4:	beq	216dc <__assert_fail@plt+0x103ec>
   216c8:	mov	r2, #0
   216cc:	movw	r1, #17880	; 0x45d8
   216d0:	movt	r1, #2
   216d4:	ldr	r0, [fp, #-8]
   216d8:	bl	1db98 <__assert_fail@plt+0xc8a8>
   216dc:	ldr	r3, [fp, #8]
   216e0:	mov	r2, #8
   216e4:	str	r2, [r3]
   216e8:	ldr	r3, [fp, #8]
   216ec:	ldr	r3, [r3]
   216f0:	cmp	r3, #0
   216f4:	movne	r3, #1
   216f8:	moveq	r3, #0
   216fc:	uxtb	r3, r3
   21700:	cmp	r3, #0
   21704:	beq	21710 <__assert_fail@plt+0x10420>
   21708:	mov	r3, #0
   2170c:	b	21794 <__assert_fail@plt+0x104a4>
   21710:	ldr	r3, [fp, #-16]
   21714:	cmp	r3, #8
   21718:	bhi	2173c <__assert_fail@plt+0x1044c>
   2171c:	ldr	r3, [fp, #-12]
   21720:	ldr	r3, [r3, #84]	; 0x54
   21724:	mov	r1, #1
   21728:	ldr	r2, [fp, #-16]
   2172c:	lsl	r2, r1, r2
   21730:	orr	r2, r3, r2
   21734:	ldr	r3, [fp, #-12]
   21738:	str	r2, [r3, #84]	; 0x54
   2173c:	mov	r3, #17
   21740:	mov	r2, #0
   21744:	ldr	r1, [fp, #-8]
   21748:	ldr	r0, [fp, #-12]
   2174c:	bl	242f0 <__assert_fail@plt+0x13000>
   21750:	str	r0, [fp, #-8]
   21754:	ldr	r3, [fp, #-8]
   21758:	cmp	r3, #0
   2175c:	moveq	r3, #1
   21760:	movne	r3, #0
   21764:	uxtb	r3, r3
   21768:	cmp	r3, #0
   2176c:	beq	21784 <__assert_fail@plt+0x10494>
   21770:	ldr	r3, [fp, #8]
   21774:	mov	r2, #12
   21778:	str	r2, [r3]
   2177c:	mov	r3, #0
   21780:	b	21794 <__assert_fail@plt+0x104a4>
   21784:	ldr	r2, [fp, #-16]
   21788:	ldr	r3, [fp, #-8]
   2178c:	str	r2, [r3, #20]
   21790:	ldr	r3, [fp, #-8]
   21794:	mov	r0, r3
   21798:	sub	sp, fp, #4
   2179c:	ldr	fp, [sp]
   217a0:	add	sp, sp, #4
   217a4:	pop	{pc}		; (ldr pc, [sp], #4)
   217a8:	str	fp, [sp, #-8]!
   217ac:	str	lr, [sp, #4]
   217b0:	add	fp, sp, #4
   217b4:	sub	sp, sp, #56	; 0x38
   217b8:	str	r0, [fp, #-48]	; 0xffffffd0
   217bc:	str	r1, [fp, #-52]	; 0xffffffcc
   217c0:	str	r2, [fp, #-56]	; 0xffffffc8
   217c4:	str	r3, [fp, #-60]	; 0xffffffc4
   217c8:	mov	r3, #0
   217cc:	str	r3, [fp, #-8]
   217d0:	mov	r3, #0
   217d4:	str	r3, [fp, #-12]
   217d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   217dc:	ldr	r3, [r3, #40]	; 0x28
   217e0:	str	r3, [fp, #-28]	; 0xffffffe4
   217e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   217e8:	sub	r1, fp, #40	; 0x28
   217ec:	ldrd	r2, [r3]
   217f0:	strd	r2, [r1]
   217f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   217f8:	ldrb	r3, [r3, #4]
   217fc:	cmp	r3, #23
   21800:	bne	21a80 <__assert_fail@plt+0x10790>
   21804:	mov	r3, #0
   21808:	str	r3, [fp, #-24]	; 0xffffffe8
   2180c:	ldr	r2, [fp, #4]
   21810:	ldr	r1, [fp, #-60]	; 0xffffffc4
   21814:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21818:	bl	24154 <__assert_fail@plt+0x12e64>
   2181c:	str	r0, [fp, #-20]	; 0xffffffec
   21820:	ldr	r3, [fp, #-20]	; 0xffffffec
   21824:	cmn	r3, #1
   21828:	bne	2186c <__assert_fail@plt+0x1057c>
   2182c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21830:	ldrb	r3, [r3, #4]
   21834:	cmp	r3, #1
   21838:	bne	21858 <__assert_fail@plt+0x10568>
   2183c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21840:	ldrb	r3, [r3]
   21844:	cmp	r3, #44	; 0x2c
   21848:	bne	21858 <__assert_fail@plt+0x10568>
   2184c:	mov	r3, #0
   21850:	str	r3, [fp, #-20]	; 0xffffffec
   21854:	b	2186c <__assert_fail@plt+0x1057c>
   21858:	ldr	r3, [fp, #8]
   2185c:	mov	r2, #10
   21860:	str	r2, [r3]
   21864:	mov	r3, #0
   21868:	b	21de4 <__assert_fail@plt+0x10af4>
   2186c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21870:	cmn	r3, #2
   21874:	movne	r3, #1
   21878:	moveq	r3, #0
   2187c:	uxtb	r3, r3
   21880:	cmp	r3, #0
   21884:	beq	218e0 <__assert_fail@plt+0x105f0>
   21888:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2188c:	ldrb	r3, [r3, #4]
   21890:	cmp	r3, #24
   21894:	beq	218d8 <__assert_fail@plt+0x105e8>
   21898:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2189c:	ldrb	r3, [r3, #4]
   218a0:	cmp	r3, #1
   218a4:	bne	218d0 <__assert_fail@plt+0x105e0>
   218a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   218ac:	ldrb	r3, [r3]
   218b0:	cmp	r3, #44	; 0x2c
   218b4:	bne	218d0 <__assert_fail@plt+0x105e0>
   218b8:	ldr	r2, [fp, #4]
   218bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   218c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   218c4:	bl	24154 <__assert_fail@plt+0x12e64>
   218c8:	mov	r3, r0
   218cc:	b	218dc <__assert_fail@plt+0x105ec>
   218d0:	mvn	r3, #1
   218d4:	b	218dc <__assert_fail@plt+0x105ec>
   218d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   218dc:	str	r3, [fp, #-24]	; 0xffffffe8
   218e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   218e4:	cmn	r3, #2
   218e8:	moveq	r3, #1
   218ec:	movne	r3, #0
   218f0:	uxtb	r3, r3
   218f4:	cmp	r3, #0
   218f8:	bne	21918 <__assert_fail@plt+0x10628>
   218fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21900:	cmn	r3, #2
   21904:	moveq	r3, #1
   21908:	movne	r3, #0
   2190c:	uxtb	r3, r3
   21910:	cmp	r3, #0
   21914:	beq	219a0 <__assert_fail@plt+0x106b0>
   21918:	ldr	r3, [fp, #4]
   2191c:	and	r3, r3, #2097152	; 0x200000
   21920:	cmp	r3, #0
   21924:	moveq	r3, #1
   21928:	movne	r3, #0
   2192c:	uxtb	r3, r3
   21930:	cmp	r3, #0
   21934:	beq	2196c <__assert_fail@plt+0x1067c>
   21938:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2193c:	ldrb	r3, [r3, #4]
   21940:	cmp	r3, #2
   21944:	bne	21958 <__assert_fail@plt+0x10668>
   21948:	ldr	r3, [fp, #8]
   2194c:	mov	r2, #9
   21950:	str	r2, [r3]
   21954:	b	21964 <__assert_fail@plt+0x10674>
   21958:	ldr	r3, [fp, #8]
   2195c:	mov	r2, #10
   21960:	str	r2, [r3]
   21964:	mov	r3, #0
   21968:	b	21de4 <__assert_fail@plt+0x10af4>
   2196c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21970:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21974:	str	r2, [r3, #40]	; 0x28
   21978:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2197c:	mov	r1, r3
   21980:	sub	r3, fp, #40	; 0x28
   21984:	ldrd	r2, [r3]
   21988:	strd	r2, [r1]
   2198c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21990:	mov	r2, #1
   21994:	strb	r2, [r3, #4]
   21998:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2199c:	b	21de4 <__assert_fail@plt+0x10af4>
   219a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   219a4:	cmn	r3, #1
   219a8:	movne	r3, #1
   219ac:	moveq	r3, #0
   219b0:	uxtb	r3, r3
   219b4:	cmp	r3, #0
   219b8:	beq	219e4 <__assert_fail@plt+0x106f4>
   219bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   219c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   219c4:	cmp	r2, r3
   219c8:	movgt	r3, #1
   219cc:	movle	r3, #0
   219d0:	uxtb	r3, r3
   219d4:	cmp	r3, #0
   219d8:	beq	219e4 <__assert_fail@plt+0x106f4>
   219dc:	mov	r3, #1
   219e0:	b	219e8 <__assert_fail@plt+0x106f8>
   219e4:	mov	r3, #0
   219e8:	cmp	r3, #0
   219ec:	bne	21a10 <__assert_fail@plt+0x10720>
   219f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   219f4:	ldrb	r3, [r3, #4]
   219f8:	cmp	r3, #24
   219fc:	movne	r3, #1
   21a00:	moveq	r3, #0
   21a04:	uxtb	r3, r3
   21a08:	cmp	r3, #0
   21a0c:	beq	21a24 <__assert_fail@plt+0x10734>
   21a10:	ldr	r3, [fp, #8]
   21a14:	mov	r2, #10
   21a18:	str	r2, [r3]
   21a1c:	mov	r3, #0
   21a20:	b	21de4 <__assert_fail@plt+0x10af4>
   21a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a28:	cmn	r3, #1
   21a2c:	bne	21a4c <__assert_fail@plt+0x1075c>
   21a30:	ldr	r3, [fp, #-20]	; 0xffffffec
   21a34:	movw	r2, #32767	; 0x7fff
   21a38:	cmp	r3, r2
   21a3c:	movgt	r3, #1
   21a40:	movle	r3, #0
   21a44:	uxtb	r3, r3
   21a48:	b	21a64 <__assert_fail@plt+0x10774>
   21a4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a50:	movw	r2, #32767	; 0x7fff
   21a54:	cmp	r3, r2
   21a58:	movgt	r3, #1
   21a5c:	movle	r3, #0
   21a60:	uxtb	r3, r3
   21a64:	cmp	r3, #0
   21a68:	beq	21abc <__assert_fail@plt+0x107cc>
   21a6c:	ldr	r3, [fp, #8]
   21a70:	mov	r2, #15
   21a74:	str	r2, [r3]
   21a78:	mov	r3, #0
   21a7c:	b	21de4 <__assert_fail@plt+0x10af4>
   21a80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21a84:	ldrb	r3, [r3, #4]
   21a88:	cmp	r3, #18
   21a8c:	moveq	r3, #1
   21a90:	movne	r3, #0
   21a94:	uxtb	r3, r3
   21a98:	str	r3, [fp, #-20]	; 0xffffffec
   21a9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21aa0:	ldrb	r3, [r3, #4]
   21aa4:	cmp	r3, #19
   21aa8:	bne	21ab4 <__assert_fail@plt+0x107c4>
   21aac:	mov	r3, #1
   21ab0:	b	21ab8 <__assert_fail@plt+0x107c8>
   21ab4:	mvn	r3, #0
   21ab8:	str	r3, [fp, #-24]	; 0xffffffe8
   21abc:	ldr	r2, [fp, #4]
   21ac0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21ac4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   21ac8:	bl	1f638 <__assert_fail@plt+0xe348>
   21acc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21ad0:	cmp	r3, #0
   21ad4:	moveq	r3, #1
   21ad8:	movne	r3, #0
   21adc:	uxtb	r3, r3
   21ae0:	cmp	r3, #0
   21ae4:	beq	21af0 <__assert_fail@plt+0x10800>
   21ae8:	mov	r3, #0
   21aec:	b	21de4 <__assert_fail@plt+0x10af4>
   21af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21af4:	cmp	r3, #0
   21af8:	moveq	r3, #1
   21afc:	movne	r3, #0
   21b00:	uxtb	r3, r3
   21b04:	cmp	r3, #0
   21b08:	beq	21b44 <__assert_fail@plt+0x10854>
   21b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21b10:	cmp	r3, #0
   21b14:	moveq	r3, #1
   21b18:	movne	r3, #0
   21b1c:	uxtb	r3, r3
   21b20:	cmp	r3, #0
   21b24:	beq	21b44 <__assert_fail@plt+0x10854>
   21b28:	mov	r2, #0
   21b2c:	movw	r1, #17880	; 0x45d8
   21b30:	movt	r1, #2
   21b34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21b38:	bl	1db98 <__assert_fail@plt+0xc8a8>
   21b3c:	mov	r3, #0
   21b40:	b	21de4 <__assert_fail@plt+0x10af4>
   21b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b48:	cmp	r3, #0
   21b4c:	movgt	r3, #1
   21b50:	movle	r3, #0
   21b54:	uxtb	r3, r3
   21b58:	cmp	r3, #0
   21b5c:	beq	21c40 <__assert_fail@plt+0x10950>
   21b60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21b64:	str	r3, [fp, #-8]
   21b68:	mov	r3, #2
   21b6c:	str	r3, [fp, #-16]
   21b70:	b	21be0 <__assert_fail@plt+0x108f0>
   21b74:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21b78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21b7c:	bl	24618 <__assert_fail@plt+0x13328>
   21b80:	str	r0, [fp, #-48]	; 0xffffffd0
   21b84:	mov	r3, #16
   21b88:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21b8c:	ldr	r1, [fp, #-8]
   21b90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21b94:	bl	242f0 <__assert_fail@plt+0x13000>
   21b98:	str	r0, [fp, #-8]
   21b9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21ba0:	cmp	r3, #0
   21ba4:	moveq	r3, #1
   21ba8:	movne	r3, #0
   21bac:	uxtb	r3, r3
   21bb0:	cmp	r3, #0
   21bb4:	bne	21db0 <__assert_fail@plt+0x10ac0>
   21bb8:	ldr	r3, [fp, #-8]
   21bbc:	cmp	r3, #0
   21bc0:	moveq	r3, #1
   21bc4:	movne	r3, #0
   21bc8:	uxtb	r3, r3
   21bcc:	cmp	r3, #0
   21bd0:	bne	21db0 <__assert_fail@plt+0x10ac0>
   21bd4:	ldr	r3, [fp, #-16]
   21bd8:	add	r3, r3, #1
   21bdc:	str	r3, [fp, #-16]
   21be0:	ldr	r2, [fp, #-16]
   21be4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21be8:	cmp	r2, r3
   21bec:	ble	21b74 <__assert_fail@plt+0x10884>
   21bf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   21bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21bf8:	cmp	r2, r3
   21bfc:	bne	21c08 <__assert_fail@plt+0x10918>
   21c00:	ldr	r3, [fp, #-8]
   21c04:	b	21de4 <__assert_fail@plt+0x10af4>
   21c08:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21c0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21c10:	bl	24618 <__assert_fail@plt+0x13328>
   21c14:	str	r0, [fp, #-48]	; 0xffffffd0
   21c18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21c1c:	cmp	r3, #0
   21c20:	moveq	r3, #1
   21c24:	movne	r3, #0
   21c28:	uxtb	r3, r3
   21c2c:	cmp	r3, #0
   21c30:	bne	21db8 <__assert_fail@plt+0x10ac8>
   21c34:	ldr	r3, [fp, #-8]
   21c38:	str	r3, [fp, #-12]
   21c3c:	b	21c48 <__assert_fail@plt+0x10958>
   21c40:	mov	r3, #0
   21c44:	str	r3, [fp, #-12]
   21c48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21c4c:	ldrb	r3, [r3, #24]
   21c50:	cmp	r3, #17
   21c54:	bne	21c7c <__assert_fail@plt+0x1098c>
   21c58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21c5c:	ldr	r3, [r3, #20]
   21c60:	str	r3, [fp, #-32]	; 0xffffffe0
   21c64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21c68:	mov	r2, r3
   21c6c:	movw	r1, #17624	; 0x44d8
   21c70:	movt	r1, #2
   21c74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21c78:	bl	1db98 <__assert_fail@plt+0xc8a8>
   21c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c80:	cmn	r3, #1
   21c84:	bne	21c90 <__assert_fail@plt+0x109a0>
   21c88:	mov	r3, #11
   21c8c:	b	21c94 <__assert_fail@plt+0x109a4>
   21c90:	mov	r3, #10
   21c94:	mov	r2, #0
   21c98:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21c9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21ca0:	bl	242f0 <__assert_fail@plt+0x13000>
   21ca4:	str	r0, [fp, #-8]
   21ca8:	ldr	r3, [fp, #-8]
   21cac:	cmp	r3, #0
   21cb0:	moveq	r3, #1
   21cb4:	movne	r3, #0
   21cb8:	uxtb	r3, r3
   21cbc:	cmp	r3, #0
   21cc0:	bne	21dc0 <__assert_fail@plt+0x10ad0>
   21cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21cc8:	add	r3, r3, #2
   21ccc:	str	r3, [fp, #-16]
   21cd0:	b	21d74 <__assert_fail@plt+0x10a84>
   21cd4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21cd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21cdc:	bl	24618 <__assert_fail@plt+0x13328>
   21ce0:	str	r0, [fp, #-48]	; 0xffffffd0
   21ce4:	mov	r3, #16
   21ce8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21cec:	ldr	r1, [fp, #-8]
   21cf0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21cf4:	bl	242f0 <__assert_fail@plt+0x13000>
   21cf8:	str	r0, [fp, #-8]
   21cfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21d00:	cmp	r3, #0
   21d04:	moveq	r3, #1
   21d08:	movne	r3, #0
   21d0c:	uxtb	r3, r3
   21d10:	cmp	r3, #0
   21d14:	bne	21dc8 <__assert_fail@plt+0x10ad8>
   21d18:	ldr	r3, [fp, #-8]
   21d1c:	cmp	r3, #0
   21d20:	moveq	r3, #1
   21d24:	movne	r3, #0
   21d28:	uxtb	r3, r3
   21d2c:	cmp	r3, #0
   21d30:	bne	21dc8 <__assert_fail@plt+0x10ad8>
   21d34:	mov	r3, #10
   21d38:	mov	r2, #0
   21d3c:	ldr	r1, [fp, #-8]
   21d40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21d44:	bl	242f0 <__assert_fail@plt+0x13000>
   21d48:	str	r0, [fp, #-8]
   21d4c:	ldr	r3, [fp, #-8]
   21d50:	cmp	r3, #0
   21d54:	moveq	r3, #1
   21d58:	movne	r3, #0
   21d5c:	uxtb	r3, r3
   21d60:	cmp	r3, #0
   21d64:	bne	21dd0 <__assert_fail@plt+0x10ae0>
   21d68:	ldr	r3, [fp, #-16]
   21d6c:	add	r3, r3, #1
   21d70:	str	r3, [fp, #-16]
   21d74:	ldr	r2, [fp, #-16]
   21d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d7c:	cmp	r2, r3
   21d80:	ble	21cd4 <__assert_fail@plt+0x109e4>
   21d84:	ldr	r3, [fp, #-12]
   21d88:	cmp	r3, #0
   21d8c:	beq	21da8 <__assert_fail@plt+0x10ab8>
   21d90:	mov	r3, #16
   21d94:	ldr	r2, [fp, #-8]
   21d98:	ldr	r1, [fp, #-12]
   21d9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21da0:	bl	242f0 <__assert_fail@plt+0x13000>
   21da4:	str	r0, [fp, #-8]
   21da8:	ldr	r3, [fp, #-8]
   21dac:	b	21de4 <__assert_fail@plt+0x10af4>
   21db0:	nop	{0}
   21db4:	b	21dd4 <__assert_fail@plt+0x10ae4>
   21db8:	nop	{0}
   21dbc:	b	21dd4 <__assert_fail@plt+0x10ae4>
   21dc0:	nop	{0}
   21dc4:	b	21dd4 <__assert_fail@plt+0x10ae4>
   21dc8:	nop	{0}
   21dcc:	b	21dd4 <__assert_fail@plt+0x10ae4>
   21dd0:	nop	{0}
   21dd4:	ldr	r3, [fp, #8]
   21dd8:	mov	r2, #12
   21ddc:	str	r2, [r3]
   21de0:	mov	r3, #0
   21de4:	mov	r0, r3
   21de8:	sub	sp, fp, #4
   21dec:	ldr	fp, [sp]
   21df0:	add	sp, sp, #4
   21df4:	pop	{pc}		; (ldr pc, [sp], #4)
   21df8:	str	fp, [sp, #-8]!
   21dfc:	str	lr, [sp, #4]
   21e00:	add	fp, sp, #4
   21e04:	sub	sp, sp, #8
   21e08:	mov	r3, r0
   21e0c:	str	r1, [fp, #-12]
   21e10:	strb	r3, [fp, #-5]
   21e14:	ldr	r3, [fp, #-12]
   21e18:	ldr	r3, [r3, #92]	; 0x5c
   21e1c:	cmp	r3, #1
   21e20:	ble	21e38 <__assert_fail@plt+0x10b48>
   21e24:	ldrb	r3, [fp, #-5]
   21e28:	mov	r0, r3
   21e2c:	bl	11224 <btowc@plt>
   21e30:	mov	r3, r0
   21e34:	b	21e3c <__assert_fail@plt+0x10b4c>
   21e38:	ldrb	r3, [fp, #-5]
   21e3c:	mov	r0, r3
   21e40:	sub	sp, fp, #4
   21e44:	ldr	fp, [sp]
   21e48:	add	sp, sp, #4
   21e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   21e50:	str	fp, [sp, #-8]!
   21e54:	str	lr, [sp, #4]
   21e58:	add	fp, sp, #4
   21e5c:	sub	sp, sp, #48	; 0x30
   21e60:	str	r0, [fp, #-40]	; 0xffffffd8
   21e64:	str	r1, [fp, #-44]	; 0xffffffd4
   21e68:	str	r2, [fp, #-48]	; 0xffffffd0
   21e6c:	str	r3, [fp, #-52]	; 0xffffffcc
   21e70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21e74:	ldr	r3, [r3]
   21e78:	cmp	r3, #2
   21e7c:	moveq	r3, #1
   21e80:	movne	r3, #0
   21e84:	uxtb	r3, r3
   21e88:	cmp	r3, #0
   21e8c:	bne	21eb0 <__assert_fail@plt+0x10bc0>
   21e90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21e94:	ldr	r3, [r3]
   21e98:	cmp	r3, #4
   21e9c:	moveq	r3, #1
   21ea0:	movne	r3, #0
   21ea4:	uxtb	r3, r3
   21ea8:	cmp	r3, #0
   21eac:	beq	21eb8 <__assert_fail@plt+0x10bc8>
   21eb0:	mov	r3, #1
   21eb4:	b	21ebc <__assert_fail@plt+0x10bcc>
   21eb8:	mov	r3, #0
   21ebc:	cmp	r3, #0
   21ec0:	bne	21ee4 <__assert_fail@plt+0x10bf4>
   21ec4:	ldr	r3, [fp, #4]
   21ec8:	ldr	r3, [r3]
   21ecc:	cmp	r3, #2
   21ed0:	moveq	r3, #1
   21ed4:	movne	r3, #0
   21ed8:	uxtb	r3, r3
   21edc:	cmp	r3, #0
   21ee0:	beq	21eec <__assert_fail@plt+0x10bfc>
   21ee4:	mov	r3, #1
   21ee8:	b	21ef0 <__assert_fail@plt+0x10c00>
   21eec:	mov	r3, #0
   21ef0:	cmp	r3, #0
   21ef4:	bne	21f18 <__assert_fail@plt+0x10c28>
   21ef8:	ldr	r3, [fp, #4]
   21efc:	ldr	r3, [r3]
   21f00:	cmp	r3, #4
   21f04:	moveq	r3, #1
   21f08:	movne	r3, #0
   21f0c:	uxtb	r3, r3
   21f10:	cmp	r3, #0
   21f14:	beq	21f20 <__assert_fail@plt+0x10c30>
   21f18:	mov	r3, #11
   21f1c:	b	2230c <__assert_fail@plt+0x1101c>
   21f20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21f24:	ldr	r3, [r3]
   21f28:	cmp	r3, #3
   21f2c:	moveq	r3, #1
   21f30:	movne	r3, #0
   21f34:	uxtb	r3, r3
   21f38:	cmp	r3, #0
   21f3c:	beq	21f74 <__assert_fail@plt+0x10c84>
   21f40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21f44:	ldr	r3, [r3, #4]
   21f48:	mov	r0, r3
   21f4c:	bl	111d0 <strlen@plt>
   21f50:	mov	r3, r0
   21f54:	cmp	r3, #1
   21f58:	movhi	r3, #1
   21f5c:	movls	r3, #0
   21f60:	uxtb	r3, r3
   21f64:	cmp	r3, #0
   21f68:	beq	21f74 <__assert_fail@plt+0x10c84>
   21f6c:	mov	r3, #1
   21f70:	b	21f78 <__assert_fail@plt+0x10c88>
   21f74:	mov	r3, #0
   21f78:	cmp	r3, #0
   21f7c:	bne	21fe0 <__assert_fail@plt+0x10cf0>
   21f80:	ldr	r3, [fp, #4]
   21f84:	ldr	r3, [r3]
   21f88:	cmp	r3, #3
   21f8c:	moveq	r3, #1
   21f90:	movne	r3, #0
   21f94:	uxtb	r3, r3
   21f98:	cmp	r3, #0
   21f9c:	beq	21fd4 <__assert_fail@plt+0x10ce4>
   21fa0:	ldr	r3, [fp, #4]
   21fa4:	ldr	r3, [r3, #4]
   21fa8:	mov	r0, r3
   21fac:	bl	111d0 <strlen@plt>
   21fb0:	mov	r3, r0
   21fb4:	cmp	r3, #1
   21fb8:	movhi	r3, #1
   21fbc:	movls	r3, #0
   21fc0:	uxtb	r3, r3
   21fc4:	cmp	r3, #0
   21fc8:	beq	21fd4 <__assert_fail@plt+0x10ce4>
   21fcc:	mov	r3, #1
   21fd0:	b	21fd8 <__assert_fail@plt+0x10ce8>
   21fd4:	mov	r3, #0
   21fd8:	cmp	r3, #0
   21fdc:	beq	21fe8 <__assert_fail@plt+0x10cf8>
   21fe0:	mov	r3, #3
   21fe4:	b	2230c <__assert_fail@plt+0x1101c>
   21fe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21fec:	ldr	r3, [r3]
   21ff0:	cmp	r3, #0
   21ff4:	bne	22004 <__assert_fail@plt+0x10d14>
   21ff8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21ffc:	ldrb	r3, [r3, #4]
   22000:	b	22028 <__assert_fail@plt+0x10d38>
   22004:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22008:	ldr	r3, [r3]
   2200c:	cmp	r3, #3
   22010:	bne	22024 <__assert_fail@plt+0x10d34>
   22014:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22018:	ldr	r3, [r3, #4]
   2201c:	ldrb	r3, [r3]
   22020:	b	22028 <__assert_fail@plt+0x10d38>
   22024:	mov	r3, #0
   22028:	str	r3, [fp, #-12]
   2202c:	ldr	r3, [fp, #4]
   22030:	ldr	r3, [r3]
   22034:	cmp	r3, #0
   22038:	bne	22048 <__assert_fail@plt+0x10d58>
   2203c:	ldr	r3, [fp, #4]
   22040:	ldrb	r3, [r3, #4]
   22044:	b	2206c <__assert_fail@plt+0x10d7c>
   22048:	ldr	r3, [fp, #4]
   2204c:	ldr	r3, [r3]
   22050:	cmp	r3, #3
   22054:	bne	22068 <__assert_fail@plt+0x10d78>
   22058:	ldr	r3, [fp, #4]
   2205c:	ldr	r3, [r3, #4]
   22060:	ldrb	r3, [r3]
   22064:	b	2206c <__assert_fail@plt+0x10d7c>
   22068:	mov	r3, #0
   2206c:	str	r3, [fp, #-16]
   22070:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22074:	ldr	r3, [r3]
   22078:	cmp	r3, #0
   2207c:	beq	22090 <__assert_fail@plt+0x10da0>
   22080:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22084:	ldr	r3, [r3]
   22088:	cmp	r3, #3
   2208c:	bne	220ac <__assert_fail@plt+0x10dbc>
   22090:	ldr	r3, [fp, #-12]
   22094:	uxtb	r3, r3
   22098:	ldr	r1, [fp, #8]
   2209c:	mov	r0, r3
   220a0:	bl	21df8 <__assert_fail@plt+0x10b08>
   220a4:	mov	r3, r0
   220a8:	b	220b4 <__assert_fail@plt+0x10dc4>
   220ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   220b0:	ldr	r3, [r3, #4]
   220b4:	str	r3, [fp, #-20]	; 0xffffffec
   220b8:	ldr	r3, [fp, #4]
   220bc:	ldr	r3, [r3]
   220c0:	cmp	r3, #0
   220c4:	beq	220d8 <__assert_fail@plt+0x10de8>
   220c8:	ldr	r3, [fp, #4]
   220cc:	ldr	r3, [r3]
   220d0:	cmp	r3, #3
   220d4:	bne	220f4 <__assert_fail@plt+0x10e04>
   220d8:	ldr	r3, [fp, #-16]
   220dc:	uxtb	r3, r3
   220e0:	ldr	r1, [fp, #8]
   220e4:	mov	r0, r3
   220e8:	bl	21df8 <__assert_fail@plt+0x10b08>
   220ec:	mov	r3, r0
   220f0:	b	220fc <__assert_fail@plt+0x10e0c>
   220f4:	ldr	r3, [fp, #4]
   220f8:	ldr	r3, [r3, #4]
   220fc:	str	r3, [fp, #-24]	; 0xffffffe8
   22100:	ldr	r3, [fp, #-20]	; 0xffffffec
   22104:	cmn	r3, #1
   22108:	beq	22118 <__assert_fail@plt+0x10e28>
   2210c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22110:	cmn	r3, #1
   22114:	bne	22120 <__assert_fail@plt+0x10e30>
   22118:	mov	r3, #3
   2211c:	b	2230c <__assert_fail@plt+0x1101c>
   22120:	ldr	r3, [fp, #12]
   22124:	and	r3, r3, #65536	; 0x10000
   22128:	cmp	r3, #0
   2212c:	movne	r3, #1
   22130:	moveq	r3, #0
   22134:	uxtb	r3, r3
   22138:	cmp	r3, #0
   2213c:	beq	22168 <__assert_fail@plt+0x10e78>
   22140:	ldr	r2, [fp, #-20]	; 0xffffffec
   22144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22148:	cmp	r2, r3
   2214c:	movhi	r3, #1
   22150:	movls	r3, #0
   22154:	uxtb	r3, r3
   22158:	cmp	r3, #0
   2215c:	beq	22168 <__assert_fail@plt+0x10e78>
   22160:	mov	r3, #11
   22164:	b	2230c <__assert_fail@plt+0x1101c>
   22168:	ldr	r3, [fp, #8]
   2216c:	ldr	r3, [r3, #92]	; 0x5c
   22170:	cmp	r3, #1
   22174:	ble	222b4 <__assert_fail@plt+0x10fc4>
   22178:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2217c:	ldr	r2, [r3]
   22180:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22184:	ldr	r3, [r3, #32]
   22188:	cmp	r2, r3
   2218c:	moveq	r3, #1
   22190:	movne	r3, #0
   22194:	uxtb	r3, r3
   22198:	cmp	r3, #0
   2219c:	beq	22268 <__assert_fail@plt+0x10f78>
   221a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   221a4:	ldr	r3, [r3, #32]
   221a8:	lsl	r3, r3, #1
   221ac:	add	r3, r3, #1
   221b0:	str	r3, [fp, #-28]	; 0xffffffe4
   221b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   221b8:	ldr	r2, [r3, #4]
   221bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   221c0:	lsl	r3, r3, #2
   221c4:	mov	r1, r3
   221c8:	mov	r0, r2
   221cc:	bl	313dc <__assert_fail@plt+0x200ec>
   221d0:	str	r0, [fp, #-32]	; 0xffffffe0
   221d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   221d8:	ldr	r2, [r3, #8]
   221dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   221e0:	lsl	r3, r3, #2
   221e4:	mov	r1, r3
   221e8:	mov	r0, r2
   221ec:	bl	313dc <__assert_fail@plt+0x200ec>
   221f0:	str	r0, [fp, #-36]	; 0xffffffdc
   221f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   221f8:	cmp	r3, #0
   221fc:	moveq	r3, #1
   22200:	movne	r3, #0
   22204:	uxtb	r3, r3
   22208:	cmp	r3, #0
   2220c:	bne	2222c <__assert_fail@plt+0x10f3c>
   22210:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22214:	cmp	r3, #0
   22218:	moveq	r3, #1
   2221c:	movne	r3, #0
   22220:	uxtb	r3, r3
   22224:	cmp	r3, #0
   22228:	beq	22244 <__assert_fail@plt+0x10f54>
   2222c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22230:	bl	31b28 <__assert_fail@plt+0x20838>
   22234:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22238:	bl	31b28 <__assert_fail@plt+0x20838>
   2223c:	mov	r3, #12
   22240:	b	2230c <__assert_fail@plt+0x1101c>
   22244:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22248:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2224c:	str	r2, [r3, #4]
   22250:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22254:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22258:	str	r2, [r3, #8]
   2225c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22260:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22264:	str	r2, [r3]
   22268:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2226c:	ldr	r2, [r3, #4]
   22270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22274:	ldr	r3, [r3, #32]
   22278:	lsl	r3, r3, #2
   2227c:	add	r3, r2, r3
   22280:	ldr	r2, [fp, #-20]	; 0xffffffec
   22284:	str	r2, [r3]
   22288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2228c:	ldr	r2, [r3, #8]
   22290:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22294:	ldr	r3, [r3, #32]
   22298:	add	r0, r3, #1
   2229c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   222a0:	str	r0, [r1, #32]
   222a4:	lsl	r3, r3, #2
   222a8:	add	r3, r2, r3
   222ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   222b0:	str	r2, [r3]
   222b4:	mov	r3, #0
   222b8:	str	r3, [fp, #-8]
   222bc:	b	222fc <__assert_fail@plt+0x1100c>
   222c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   222c4:	ldr	r3, [fp, #-8]
   222c8:	cmp	r2, r3
   222cc:	bhi	222f0 <__assert_fail@plt+0x11000>
   222d0:	ldr	r2, [fp, #-8]
   222d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   222d8:	cmp	r2, r3
   222dc:	bhi	222f0 <__assert_fail@plt+0x11000>
   222e0:	ldr	r3, [fp, #-8]
   222e4:	mov	r1, r3
   222e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   222ec:	bl	15f50 <__assert_fail@plt+0x4c60>
   222f0:	ldr	r3, [fp, #-8]
   222f4:	add	r3, r3, #1
   222f8:	str	r3, [fp, #-8]
   222fc:	ldr	r3, [fp, #-8]
   22300:	cmp	r3, #255	; 0xff
   22304:	bls	222c0 <__assert_fail@plt+0x10fd0>
   22308:	mov	r3, #0
   2230c:	mov	r0, r3
   22310:	sub	sp, fp, #4
   22314:	ldr	fp, [sp]
   22318:	add	sp, sp, #4
   2231c:	pop	{pc}		; (ldr pc, [sp], #4)
   22320:	str	fp, [sp, #-8]!
   22324:	str	lr, [sp, #4]
   22328:	add	fp, sp, #4
   2232c:	sub	sp, sp, #24
   22330:	str	r0, [fp, #-16]
   22334:	str	r1, [fp, #-20]	; 0xffffffec
   22338:	str	r2, [fp, #-24]	; 0xffffffe8
   2233c:	str	r3, [fp, #-28]	; 0xffffffe4
   22340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22344:	bl	111d0 <strlen@plt>
   22348:	str	r0, [fp, #-8]
   2234c:	ldr	r3, [fp, #-8]
   22350:	cmp	r3, #1
   22354:	movne	r3, #1
   22358:	moveq	r3, #0
   2235c:	uxtb	r3, r3
   22360:	cmp	r3, #0
   22364:	beq	22370 <__assert_fail@plt+0x11080>
   22368:	mov	r3, #3
   2236c:	b	22388 <__assert_fail@plt+0x11098>
   22370:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22374:	ldrb	r3, [r3]
   22378:	mov	r1, r3
   2237c:	ldr	r0, [fp, #-16]
   22380:	bl	15f50 <__assert_fail@plt+0x4c60>
   22384:	mov	r3, #0
   22388:	mov	r0, r3
   2238c:	sub	sp, fp, #4
   22390:	ldr	fp, [sp]
   22394:	add	sp, sp, #4
   22398:	pop	{pc}		; (ldr pc, [sp], #4)
   2239c:	str	fp, [sp, #-8]!
   223a0:	str	lr, [sp, #4]
   223a4:	add	fp, sp, #4
   223a8:	sub	sp, sp, #248	; 0xf8
   223ac:	str	r0, [fp, #-200]	; 0xffffff38
   223b0:	str	r1, [fp, #-204]	; 0xffffff34
   223b4:	str	r2, [fp, #-208]	; 0xffffff30
   223b8:	str	r3, [fp, #-212]	; 0xffffff2c
   223bc:	mov	r3, #0
   223c0:	str	r3, [fp, #-40]	; 0xffffffd8
   223c4:	mov	r3, #0
   223c8:	str	r3, [fp, #-44]	; 0xffffffd4
   223cc:	mov	r3, #0
   223d0:	str	r3, [fp, #-48]	; 0xffffffd0
   223d4:	mov	r3, #0
   223d8:	str	r3, [fp, #-52]	; 0xffffffcc
   223dc:	mov	r3, #0
   223e0:	str	r3, [fp, #-56]	; 0xffffffc8
   223e4:	mov	r3, #0
   223e8:	str	r3, [fp, #-60]	; 0xffffffc4
   223ec:	mov	r3, #0
   223f0:	str	r3, [fp, #-92]	; 0xffffffa4
   223f4:	mov	r3, #0
   223f8:	str	r3, [fp, #-96]	; 0xffffffa0
   223fc:	mov	r3, #0
   22400:	str	r3, [fp, #-8]
   22404:	mov	r3, #0
   22408:	str	r3, [fp, #-100]	; 0xffffff9c
   2240c:	mov	r3, #0
   22410:	str	r3, [fp, #-104]	; 0xffffff98
   22414:	mov	r3, #0
   22418:	strb	r3, [fp, #-9]
   2241c:	mov	r3, #1
   22420:	strb	r3, [fp, #-21]	; 0xffffffeb
   22424:	mov	r1, #1
   22428:	mov	r0, #32
   2242c:	bl	3127c <__assert_fail@plt+0x1ff8c>
   22430:	mov	r3, r0
   22434:	str	r3, [fp, #-64]	; 0xffffffc0
   22438:	mov	r1, #1
   2243c:	mov	r0, #40	; 0x28
   22440:	bl	3127c <__assert_fail@plt+0x1ff8c>
   22444:	mov	r3, r0
   22448:	str	r3, [fp, #-68]	; 0xffffffbc
   2244c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22450:	cmp	r3, #0
   22454:	moveq	r3, #1
   22458:	movne	r3, #0
   2245c:	uxtb	r3, r3
   22460:	cmp	r3, #0
   22464:	bne	22484 <__assert_fail@plt+0x11194>
   22468:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2246c:	cmp	r3, #0
   22470:	moveq	r3, #1
   22474:	movne	r3, #0
   22478:	uxtb	r3, r3
   2247c:	cmp	r3, #0
   22480:	beq	224a8 <__assert_fail@plt+0x111b8>
   22484:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22488:	bl	31b28 <__assert_fail@plt+0x20838>
   2248c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   22490:	bl	31b28 <__assert_fail@plt+0x20838>
   22494:	ldr	r3, [fp, #4]
   22498:	mov	r2, #12
   2249c:	str	r2, [r3]
   224a0:	mov	r3, #0
   224a4:	b	22d30 <__assert_fail@plt+0x11a40>
   224a8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   224ac:	ldr	r1, [fp, #-200]	; 0xffffff38
   224b0:	ldr	r0, [fp, #-208]	; 0xffffff30
   224b4:	bl	20398 <__assert_fail@plt+0xf0a8>
   224b8:	str	r0, [fp, #-20]	; 0xffffffec
   224bc:	ldr	r3, [fp, #-208]	; 0xffffff30
   224c0:	ldrb	r3, [r3, #4]
   224c4:	cmp	r3, #2
   224c8:	moveq	r3, #1
   224cc:	movne	r3, #0
   224d0:	uxtb	r3, r3
   224d4:	cmp	r3, #0
   224d8:	beq	224ec <__assert_fail@plt+0x111fc>
   224dc:	ldr	r3, [fp, #4]
   224e0:	mov	r2, #2
   224e4:	str	r2, [r3]
   224e8:	b	22d1c <__assert_fail@plt+0x11a2c>
   224ec:	ldr	r3, [fp, #-208]	; 0xffffff30
   224f0:	ldrb	r3, [r3, #4]
   224f4:	cmp	r3, #25
   224f8:	bne	2258c <__assert_fail@plt+0x1129c>
   224fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   22500:	ldrb	r3, [r2, #16]
   22504:	orr	r3, r3, #1
   22508:	strb	r3, [r2, #16]
   2250c:	mov	r3, #1
   22510:	strb	r3, [fp, #-9]
   22514:	ldr	r3, [fp, #-212]	; 0xffffff2c
   22518:	and	r3, r3, #256	; 0x100
   2251c:	cmp	r3, #0
   22520:	beq	22530 <__assert_fail@plt+0x11240>
   22524:	mov	r1, #10
   22528:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2252c:	bl	15f50 <__assert_fail@plt+0x4c60>
   22530:	ldr	r3, [fp, #-200]	; 0xffffff38
   22534:	ldr	r2, [r3, #40]	; 0x28
   22538:	ldr	r3, [fp, #-20]	; 0xffffffec
   2253c:	add	r2, r2, r3
   22540:	ldr	r3, [fp, #-200]	; 0xffffff38
   22544:	str	r2, [r3, #40]	; 0x28
   22548:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2254c:	ldr	r1, [fp, #-200]	; 0xffffff38
   22550:	ldr	r0, [fp, #-208]	; 0xffffff30
   22554:	bl	20398 <__assert_fail@plt+0xf0a8>
   22558:	str	r0, [fp, #-20]	; 0xffffffec
   2255c:	ldr	r3, [fp, #-208]	; 0xffffff30
   22560:	ldrb	r3, [r3, #4]
   22564:	cmp	r3, #2
   22568:	moveq	r3, #1
   2256c:	movne	r3, #0
   22570:	uxtb	r3, r3
   22574:	cmp	r3, #0
   22578:	beq	2258c <__assert_fail@plt+0x1129c>
   2257c:	ldr	r3, [fp, #4]
   22580:	mov	r2, #2
   22584:	str	r2, [r3]
   22588:	b	22d1c <__assert_fail@plt+0x11a2c>
   2258c:	ldr	r3, [fp, #-208]	; 0xffffff30
   22590:	ldrb	r3, [r3, #4]
   22594:	cmp	r3, #21
   22598:	bne	225a8 <__assert_fail@plt+0x112b8>
   2259c:	ldr	r3, [fp, #-208]	; 0xffffff30
   225a0:	mov	r2, #1
   225a4:	strb	r2, [r3, #4]
   225a8:	mov	r3, #0
   225ac:	str	r3, [fp, #-28]	; 0xffffffe4
   225b0:	mov	r3, #0
   225b4:	strb	r3, [fp, #-29]	; 0xffffffe3
   225b8:	sub	r3, fp, #192	; 0xc0
   225bc:	str	r3, [fp, #-108]	; 0xffffff94
   225c0:	mov	r3, #3
   225c4:	str	r3, [fp, #-112]	; 0xffffff90
   225c8:	sub	r0, fp, #112	; 0x70
   225cc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   225d0:	str	r3, [sp, #8]
   225d4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   225d8:	str	r3, [sp, #4]
   225dc:	ldr	r3, [fp, #-204]	; 0xffffff34
   225e0:	str	r3, [sp]
   225e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   225e8:	ldr	r2, [fp, #-208]	; 0xffffff30
   225ec:	ldr	r1, [fp, #-200]	; 0xffffff38
   225f0:	bl	22d44 <__assert_fail@plt+0x11a54>
   225f4:	str	r0, [fp, #-72]	; 0xffffffb8
   225f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   225fc:	cmp	r3, #0
   22600:	movne	r3, #1
   22604:	moveq	r3, #0
   22608:	uxtb	r3, r3
   2260c:	cmp	r3, #0
   22610:	beq	22624 <__assert_fail@plt+0x11334>
   22614:	ldr	r3, [fp, #4]
   22618:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2261c:	str	r2, [r3]
   22620:	b	22d1c <__assert_fail@plt+0x11a2c>
   22624:	mov	r3, #0
   22628:	strb	r3, [fp, #-21]	; 0xffffffeb
   2262c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   22630:	ldr	r1, [fp, #-200]	; 0xffffff38
   22634:	ldr	r0, [fp, #-208]	; 0xffffff30
   22638:	bl	20398 <__assert_fail@plt+0xf0a8>
   2263c:	str	r0, [fp, #-20]	; 0xffffffec
   22640:	ldr	r3, [fp, #-112]	; 0xffffff90
   22644:	cmp	r3, #4
   22648:	beq	22730 <__assert_fail@plt+0x11440>
   2264c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22650:	cmp	r3, #2
   22654:	beq	22730 <__assert_fail@plt+0x11440>
   22658:	ldr	r3, [fp, #-208]	; 0xffffff30
   2265c:	ldrb	r3, [r3, #4]
   22660:	cmp	r3, #2
   22664:	moveq	r3, #1
   22668:	movne	r3, #0
   2266c:	uxtb	r3, r3
   22670:	cmp	r3, #0
   22674:	beq	22688 <__assert_fail@plt+0x11398>
   22678:	ldr	r3, [fp, #4]
   2267c:	mov	r2, #7
   22680:	str	r2, [r3]
   22684:	b	22d1c <__assert_fail@plt+0x11a2c>
   22688:	ldr	r3, [fp, #-208]	; 0xffffff30
   2268c:	ldrb	r3, [r3, #4]
   22690:	cmp	r3, #22
   22694:	bne	22730 <__assert_fail@plt+0x11440>
   22698:	ldr	r3, [fp, #-200]	; 0xffffff38
   2269c:	ldr	r2, [r3, #40]	; 0x28
   226a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   226a4:	add	r2, r2, r3
   226a8:	ldr	r3, [fp, #-200]	; 0xffffff38
   226ac:	str	r2, [r3, #40]	; 0x28
   226b0:	sub	r3, fp, #128	; 0x80
   226b4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   226b8:	ldr	r1, [fp, #-200]	; 0xffffff38
   226bc:	mov	r0, r3
   226c0:	bl	20398 <__assert_fail@plt+0xf0a8>
   226c4:	str	r0, [fp, #-28]	; 0xffffffe4
   226c8:	ldrb	r3, [fp, #-124]	; 0xffffff84
   226cc:	cmp	r3, #2
   226d0:	moveq	r3, #1
   226d4:	movne	r3, #0
   226d8:	uxtb	r3, r3
   226dc:	cmp	r3, #0
   226e0:	beq	226f4 <__assert_fail@plt+0x11404>
   226e4:	ldr	r3, [fp, #4]
   226e8:	mov	r2, #7
   226ec:	str	r2, [r3]
   226f0:	b	22d1c <__assert_fail@plt+0x11a2c>
   226f4:	ldrb	r3, [fp, #-124]	; 0xffffff84
   226f8:	cmp	r3, #21
   226fc:	bne	22728 <__assert_fail@plt+0x11438>
   22700:	ldr	r3, [fp, #-200]	; 0xffffff38
   22704:	ldr	r2, [r3, #40]	; 0x28
   22708:	ldr	r3, [fp, #-20]	; 0xffffffec
   2270c:	sub	r2, r2, r3
   22710:	ldr	r3, [fp, #-200]	; 0xffffff38
   22714:	str	r2, [r3, #40]	; 0x28
   22718:	ldr	r3, [fp, #-208]	; 0xffffff30
   2271c:	mov	r2, #1
   22720:	strb	r2, [r3, #4]
   22724:	b	22730 <__assert_fail@plt+0x11440>
   22728:	mov	r3, #1
   2272c:	strb	r3, [fp, #-29]	; 0xffffffe3
   22730:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   22734:	cmp	r3, #0
   22738:	beq	2284c <__assert_fail@plt+0x1155c>
   2273c:	sub	r3, fp, #160	; 0xa0
   22740:	str	r3, [fp, #-116]	; 0xffffff8c
   22744:	mov	r3, #3
   22748:	str	r3, [fp, #-120]	; 0xffffff88
   2274c:	sub	r2, fp, #128	; 0x80
   22750:	sub	r0, fp, #120	; 0x78
   22754:	mov	r3, #1
   22758:	str	r3, [sp, #8]
   2275c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   22760:	str	r3, [sp, #4]
   22764:	ldr	r3, [fp, #-204]	; 0xffffff34
   22768:	str	r3, [sp]
   2276c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22770:	ldr	r1, [fp, #-200]	; 0xffffff38
   22774:	bl	22d44 <__assert_fail@plt+0x11a54>
   22778:	str	r0, [fp, #-72]	; 0xffffffb8
   2277c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22780:	cmp	r3, #0
   22784:	movne	r3, #1
   22788:	moveq	r3, #0
   2278c:	uxtb	r3, r3
   22790:	cmp	r3, #0
   22794:	beq	227a8 <__assert_fail@plt+0x114b8>
   22798:	ldr	r3, [fp, #4]
   2279c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   227a0:	str	r2, [r3]
   227a4:	b	22d1c <__assert_fail@plt+0x11a2c>
   227a8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   227ac:	ldr	r1, [fp, #-200]	; 0xffffff38
   227b0:	ldr	r0, [fp, #-208]	; 0xffffff30
   227b4:	bl	20398 <__assert_fail@plt+0xf0a8>
   227b8:	str	r0, [fp, #-20]	; 0xffffffec
   227bc:	sub	r1, fp, #112	; 0x70
   227c0:	sub	r2, fp, #96	; 0x60
   227c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   227c8:	str	r3, [sp, #32]
   227cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   227d0:	str	r3, [sp, #28]
   227d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   227d8:	str	r3, [sp, #24]
   227dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   227e0:	str	r3, [sp, #20]
   227e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   227e8:	str	r3, [sp, #16]
   227ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   227f0:	str	r3, [sp, #12]
   227f4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   227f8:	str	r3, [sp, #8]
   227fc:	ldr	r3, [fp, #-204]	; 0xffffff34
   22800:	str	r3, [sp, #4]
   22804:	sub	r3, fp, #120	; 0x78
   22808:	str	r3, [sp]
   2280c:	mov	r3, r1
   22810:	ldr	r1, [fp, #-68]	; 0xffffffbc
   22814:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22818:	bl	21e50 <__assert_fail@plt+0x10b60>
   2281c:	mov	r2, r0
   22820:	ldr	r3, [fp, #4]
   22824:	str	r2, [r3]
   22828:	ldr	r3, [fp, #4]
   2282c:	ldr	r3, [r3]
   22830:	cmp	r3, #0
   22834:	movne	r3, #1
   22838:	moveq	r3, #0
   2283c:	uxtb	r3, r3
   22840:	cmp	r3, #0
   22844:	beq	22a48 <__assert_fail@plt+0x11758>
   22848:	b	22d1c <__assert_fail@plt+0x11a2c>
   2284c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22850:	cmp	r3, #4
   22854:	ldrls	pc, [pc, r3, lsl #2]
   22858:	b	229e0 <__assert_fail@plt+0x116f0>
   2285c:	andeq	r2, r2, r0, ror r8
   22860:	andeq	r2, r2, r4, lsl #17
   22864:	andeq	r2, r2, r4, lsr r9
   22868:	andeq	r2, r2, r8, ror r9
   2286c:	andeq	r2, r2, r0, ror #19
   22870:	ldrb	r3, [fp, #-108]	; 0xffffff94
   22874:	mov	r1, r3
   22878:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2287c:	bl	15f50 <__assert_fail@plt+0x4c60>
   22880:	b	22a48 <__assert_fail@plt+0x11758>
   22884:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22888:	ldr	r3, [r3, #20]
   2288c:	ldr	r2, [fp, #-8]
   22890:	cmp	r2, r3
   22894:	moveq	r3, #1
   22898:	movne	r3, #0
   2289c:	uxtb	r3, r3
   228a0:	cmp	r3, #0
   228a4:	beq	22904 <__assert_fail@plt+0x11614>
   228a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   228ac:	ldr	r3, [r3, #20]
   228b0:	lsl	r3, r3, #1
   228b4:	add	r3, r3, #1
   228b8:	str	r3, [fp, #-8]
   228bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   228c0:	ldr	r2, [r3]
   228c4:	ldr	r3, [fp, #-8]
   228c8:	lsl	r3, r3, #2
   228cc:	mov	r1, r3
   228d0:	mov	r0, r2
   228d4:	bl	313dc <__assert_fail@plt+0x200ec>
   228d8:	str	r0, [fp, #-76]	; 0xffffffb4
   228dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   228e0:	cmp	r3, #0
   228e4:	moveq	r3, #1
   228e8:	movne	r3, #0
   228ec:	uxtb	r3, r3
   228f0:	cmp	r3, #0
   228f4:	bne	22cec <__assert_fail@plt+0x119fc>
   228f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   228fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   22900:	str	r2, [r3]
   22904:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22908:	ldr	r2, [r3]
   2290c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22910:	ldr	r3, [r3, #20]
   22914:	add	r0, r3, #1
   22918:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2291c:	str	r0, [r1, #20]
   22920:	lsl	r3, r3, #2
   22924:	add	r3, r2, r3
   22928:	ldr	r2, [fp, #-108]	; 0xffffff94
   2292c:	str	r2, [r3]
   22930:	b	22a48 <__assert_fail@plt+0x11758>
   22934:	ldr	r3, [fp, #-108]	; 0xffffff94
   22938:	sub	r2, fp, #100	; 0x64
   2293c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   22940:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22944:	bl	23088 <__assert_fail@plt+0x11d98>
   22948:	mov	r2, r0
   2294c:	ldr	r3, [fp, #4]
   22950:	str	r2, [r3]
   22954:	ldr	r3, [fp, #4]
   22958:	ldr	r3, [r3]
   2295c:	cmp	r3, #0
   22960:	movne	r3, #1
   22964:	moveq	r3, #0
   22968:	uxtb	r3, r3
   2296c:	cmp	r3, #0
   22970:	beq	22a3c <__assert_fail@plt+0x1174c>
   22974:	b	22d1c <__assert_fail@plt+0x11a2c>
   22978:	ldr	r1, [fp, #-108]	; 0xffffff94
   2297c:	sub	r2, fp, #92	; 0x5c
   22980:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22984:	str	r3, [sp, #12]
   22988:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2298c:	str	r3, [sp, #8]
   22990:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22994:	str	r3, [sp, #4]
   22998:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2299c:	str	r3, [sp]
   229a0:	mov	r3, r1
   229a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   229a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   229ac:	bl	22320 <__assert_fail@plt+0x11030>
   229b0:	mov	r2, r0
   229b4:	ldr	r3, [fp, #4]
   229b8:	str	r2, [r3]
   229bc:	ldr	r3, [fp, #4]
   229c0:	ldr	r3, [r3]
   229c4:	cmp	r3, #0
   229c8:	movne	r3, #1
   229cc:	moveq	r3, #0
   229d0:	uxtb	r3, r3
   229d4:	cmp	r3, #0
   229d8:	beq	22a44 <__assert_fail@plt+0x11754>
   229dc:	b	22d1c <__assert_fail@plt+0x11a2c>
   229e0:	ldr	r3, [fp, #-200]	; 0xffffff38
   229e4:	ldr	r0, [r3, #64]	; 0x40
   229e8:	ldr	r3, [fp, #-108]	; 0xffffff94
   229ec:	sub	r1, fp, #104	; 0x68
   229f0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   229f4:	str	r2, [sp, #4]
   229f8:	str	r3, [sp]
   229fc:	mov	r3, r1
   22a00:	ldr	r2, [fp, #-68]	; 0xffffffbc
   22a04:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22a08:	bl	23100 <__assert_fail@plt+0x11e10>
   22a0c:	mov	r2, r0
   22a10:	ldr	r3, [fp, #4]
   22a14:	str	r2, [r3]
   22a18:	ldr	r3, [fp, #4]
   22a1c:	ldr	r3, [r3]
   22a20:	cmp	r3, #0
   22a24:	movne	r3, #1
   22a28:	moveq	r3, #0
   22a2c:	uxtb	r3, r3
   22a30:	cmp	r3, #0
   22a34:	bne	22d18 <__assert_fail@plt+0x11a28>
   22a38:	b	22a48 <__assert_fail@plt+0x11758>
   22a3c:	nop	{0}
   22a40:	b	22a48 <__assert_fail@plt+0x11758>
   22a44:	nop	{0}
   22a48:	ldr	r3, [fp, #-208]	; 0xffffff30
   22a4c:	ldrb	r3, [r3, #4]
   22a50:	cmp	r3, #2
   22a54:	moveq	r3, #1
   22a58:	movne	r3, #0
   22a5c:	uxtb	r3, r3
   22a60:	cmp	r3, #0
   22a64:	beq	22a7c <__assert_fail@plt+0x1178c>
   22a68:	ldr	r3, [fp, #4]
   22a6c:	mov	r2, #7
   22a70:	str	r2, [r3]
   22a74:	nop	{0}
   22a78:	b	22d1c <__assert_fail@plt+0x11a2c>
   22a7c:	ldr	r3, [fp, #-208]	; 0xffffff30
   22a80:	ldrb	r3, [r3, #4]
   22a84:	cmp	r3, #21
   22a88:	bne	225a8 <__assert_fail@plt+0x112b8>
   22a8c:	ldr	r3, [fp, #-200]	; 0xffffff38
   22a90:	ldr	r2, [r3, #40]	; 0x28
   22a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a98:	add	r2, r2, r3
   22a9c:	ldr	r3, [fp, #-200]	; 0xffffff38
   22aa0:	str	r2, [r3, #40]	; 0x28
   22aa4:	ldrb	r3, [fp, #-9]
   22aa8:	cmp	r3, #0
   22aac:	bne	22ab4 <__assert_fail@plt+0x117c4>
   22ab0:	b	22abc <__assert_fail@plt+0x117cc>
   22ab4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22ab8:	bl	16188 <__assert_fail@plt+0x4e98>
   22abc:	ldr	r3, [fp, #-204]	; 0xffffff34
   22ac0:	ldr	r3, [r3, #92]	; 0x5c
   22ac4:	cmp	r3, #1
   22ac8:	ble	22ae0 <__assert_fail@plt+0x117f0>
   22acc:	ldr	r3, [fp, #-204]	; 0xffffff34
   22ad0:	ldr	r3, [r3, #60]	; 0x3c
   22ad4:	mov	r1, r3
   22ad8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22adc:	bl	16280 <__assert_fail@plt+0x4f90>
   22ae0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22ae4:	ldr	r3, [r3, #20]
   22ae8:	cmp	r3, #0
   22aec:	bne	22b58 <__assert_fail@plt+0x11868>
   22af0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22af4:	ldr	r3, [r3, #24]
   22af8:	cmp	r3, #0
   22afc:	bne	22b58 <__assert_fail@plt+0x11868>
   22b00:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22b04:	ldr	r3, [r3, #28]
   22b08:	cmp	r3, #0
   22b0c:	bne	22b58 <__assert_fail@plt+0x11868>
   22b10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22b14:	ldr	r3, [r3, #32]
   22b18:	cmp	r3, #0
   22b1c:	bne	22b58 <__assert_fail@plt+0x11868>
   22b20:	ldr	r3, [fp, #-204]	; 0xffffff34
   22b24:	ldr	r3, [r3, #92]	; 0x5c
   22b28:	cmp	r3, #1
   22b2c:	ble	22c90 <__assert_fail@plt+0x119a0>
   22b30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22b34:	ldr	r3, [r3, #36]	; 0x24
   22b38:	cmp	r3, #0
   22b3c:	bne	22b58 <__assert_fail@plt+0x11868>
   22b40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22b44:	ldrb	r3, [r3, #16]
   22b48:	and	r3, r3, #1
   22b4c:	uxtb	r3, r3
   22b50:	cmp	r3, #0
   22b54:	beq	22c90 <__assert_fail@plt+0x119a0>
   22b58:	ldr	r2, [fp, #-204]	; 0xffffff34
   22b5c:	ldrb	r3, [r2, #88]	; 0x58
   22b60:	orr	r3, r3, #2
   22b64:	strb	r3, [r2, #88]	; 0x58
   22b68:	mov	r3, #6
   22b6c:	strb	r3, [fp, #-84]	; 0xffffffac
   22b70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22b74:	str	r3, [fp, #-88]	; 0xffffffa8
   22b78:	sub	r3, fp, #88	; 0x58
   22b7c:	mov	r2, #0
   22b80:	mov	r1, #0
   22b84:	ldr	r0, [fp, #-204]	; 0xffffff34
   22b88:	bl	24358 <__assert_fail@plt+0x13068>
   22b8c:	str	r0, [fp, #-80]	; 0xffffffb0
   22b90:	ldr	r3, [fp, #-80]	; 0xffffffb0
   22b94:	cmp	r3, #0
   22b98:	moveq	r3, #1
   22b9c:	movne	r3, #0
   22ba0:	uxtb	r3, r3
   22ba4:	cmp	r3, #0
   22ba8:	bne	22cf4 <__assert_fail@plt+0x11a04>
   22bac:	mov	r3, #0
   22bb0:	str	r3, [fp, #-36]	; 0xffffffdc
   22bb4:	b	22be0 <__assert_fail@plt+0x118f0>
   22bb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22bbc:	lsl	r3, r3, #2
   22bc0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   22bc4:	add	r3, r2, r3
   22bc8:	ldr	r3, [r3]
   22bcc:	cmp	r3, #0
   22bd0:	bne	22bf0 <__assert_fail@plt+0x11900>
   22bd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22bd8:	add	r3, r3, #1
   22bdc:	str	r3, [fp, #-36]	; 0xffffffdc
   22be0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22be4:	cmp	r3, #7
   22be8:	ble	22bb8 <__assert_fail@plt+0x118c8>
   22bec:	b	22bf4 <__assert_fail@plt+0x11904>
   22bf0:	nop	{0}
   22bf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22bf8:	cmp	r3, #7
   22bfc:	bgt	22c7c <__assert_fail@plt+0x1198c>
   22c00:	mov	r3, #3
   22c04:	strb	r3, [fp, #-84]	; 0xffffffac
   22c08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22c0c:	str	r3, [fp, #-88]	; 0xffffffa8
   22c10:	sub	r3, fp, #88	; 0x58
   22c14:	mov	r2, #0
   22c18:	mov	r1, #0
   22c1c:	ldr	r0, [fp, #-204]	; 0xffffff34
   22c20:	bl	24358 <__assert_fail@plt+0x13068>
   22c24:	str	r0, [fp, #-16]
   22c28:	ldr	r3, [fp, #-16]
   22c2c:	cmp	r3, #0
   22c30:	moveq	r3, #1
   22c34:	movne	r3, #0
   22c38:	uxtb	r3, r3
   22c3c:	cmp	r3, #0
   22c40:	bne	22cfc <__assert_fail@plt+0x11a0c>
   22c44:	mov	r3, #10
   22c48:	ldr	r2, [fp, #-80]	; 0xffffffb0
   22c4c:	ldr	r1, [fp, #-16]
   22c50:	ldr	r0, [fp, #-204]	; 0xffffff34
   22c54:	bl	242f0 <__assert_fail@plt+0x13000>
   22c58:	str	r0, [fp, #-16]
   22c5c:	ldr	r3, [fp, #-16]
   22c60:	cmp	r3, #0
   22c64:	moveq	r3, #1
   22c68:	movne	r3, #0
   22c6c:	uxtb	r3, r3
   22c70:	cmp	r3, #0
   22c74:	beq	22ce0 <__assert_fail@plt+0x119f0>
   22c78:	b	22d08 <__assert_fail@plt+0x11a18>
   22c7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22c80:	bl	31b28 <__assert_fail@plt+0x20838>
   22c84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   22c88:	str	r3, [fp, #-16]
   22c8c:	b	22ce0 <__assert_fail@plt+0x119f0>
   22c90:	ldr	r0, [fp, #-68]	; 0xffffffbc
   22c94:	bl	24280 <__assert_fail@plt+0x12f90>
   22c98:	mov	r3, #3
   22c9c:	strb	r3, [fp, #-84]	; 0xffffffac
   22ca0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22ca4:	str	r3, [fp, #-88]	; 0xffffffa8
   22ca8:	sub	r3, fp, #88	; 0x58
   22cac:	mov	r2, #0
   22cb0:	mov	r1, #0
   22cb4:	ldr	r0, [fp, #-204]	; 0xffffff34
   22cb8:	bl	24358 <__assert_fail@plt+0x13068>
   22cbc:	str	r0, [fp, #-16]
   22cc0:	ldr	r3, [fp, #-16]
   22cc4:	cmp	r3, #0
   22cc8:	moveq	r3, #1
   22ccc:	movne	r3, #0
   22cd0:	uxtb	r3, r3
   22cd4:	cmp	r3, #0
   22cd8:	bne	22d04 <__assert_fail@plt+0x11a14>
   22cdc:	b	22ce4 <__assert_fail@plt+0x119f4>
   22ce0:	nop	{0}
   22ce4:	ldr	r3, [fp, #-16]
   22ce8:	b	22d30 <__assert_fail@plt+0x11a40>
   22cec:	nop	{0}
   22cf0:	b	22d08 <__assert_fail@plt+0x11a18>
   22cf4:	nop	{0}
   22cf8:	b	22d08 <__assert_fail@plt+0x11a18>
   22cfc:	nop	{0}
   22d00:	b	22d08 <__assert_fail@plt+0x11a18>
   22d04:	nop	{0}
   22d08:	ldr	r3, [fp, #4]
   22d0c:	mov	r2, #12
   22d10:	str	r2, [r3]
   22d14:	b	22d1c <__assert_fail@plt+0x11a2c>
   22d18:	nop	{0}
   22d1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22d20:	bl	31b28 <__assert_fail@plt+0x20838>
   22d24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   22d28:	bl	24280 <__assert_fail@plt+0x12f90>
   22d2c:	mov	r3, #0
   22d30:	mov	r0, r3
   22d34:	sub	sp, fp, #4
   22d38:	ldr	fp, [sp]
   22d3c:	add	sp, sp, #4
   22d40:	pop	{pc}		; (ldr pc, [sp], #4)
   22d44:	str	fp, [sp, #-8]!
   22d48:	str	lr, [sp, #4]
   22d4c:	add	fp, sp, #4
   22d50:	sub	sp, sp, #32
   22d54:	str	r0, [fp, #-24]	; 0xffffffe8
   22d58:	str	r1, [fp, #-28]	; 0xffffffe4
   22d5c:	str	r2, [fp, #-32]	; 0xffffffe0
   22d60:	str	r3, [fp, #-36]	; 0xffffffdc
   22d64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22d68:	ldr	r3, [r3, #40]	; 0x28
   22d6c:	mov	r1, r3
   22d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22d74:	bl	16308 <__assert_fail@plt+0x5018>
   22d78:	str	r0, [fp, #-8]
   22d7c:	ldr	r3, [fp, #-8]
   22d80:	cmp	r3, #1
   22d84:	ble	22dd4 <__assert_fail@plt+0x11ae4>
   22d88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d8c:	mov	r2, #1
   22d90:	str	r2, [r3]
   22d94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22d98:	ldr	r3, [r3, #40]	; 0x28
   22d9c:	mov	r1, r3
   22da0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22da4:	bl	163ac <__assert_fail@plt+0x50bc>
   22da8:	mov	r2, r0
   22dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22db0:	str	r2, [r3, #4]
   22db4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22db8:	ldr	r2, [r3, #40]	; 0x28
   22dbc:	ldr	r3, [fp, #-8]
   22dc0:	add	r2, r2, r3
   22dc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22dc8:	str	r2, [r3, #40]	; 0x28
   22dcc:	mov	r3, #0
   22dd0:	b	22eb0 <__assert_fail@plt+0x11bc0>
   22dd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22dd8:	ldr	r2, [r3, #40]	; 0x28
   22ddc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22de0:	add	r2, r2, r3
   22de4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22de8:	str	r2, [r3, #40]	; 0x28
   22dec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22df0:	ldrb	r3, [r3, #4]
   22df4:	cmp	r3, #26
   22df8:	beq	22e1c <__assert_fail@plt+0x11b2c>
   22dfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22e00:	ldrb	r3, [r3, #4]
   22e04:	cmp	r3, #30
   22e08:	beq	22e1c <__assert_fail@plt+0x11b2c>
   22e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22e10:	ldrb	r3, [r3, #4]
   22e14:	cmp	r3, #28
   22e18:	bne	22e34 <__assert_fail@plt+0x11b44>
   22e1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22e28:	bl	22ec4 <__assert_fail@plt+0x11bd4>
   22e2c:	mov	r3, r0
   22e30:	b	22eb0 <__assert_fail@plt+0x11bc0>
   22e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22e38:	ldrb	r3, [r3, #4]
   22e3c:	cmp	r3, #22
   22e40:	moveq	r3, #1
   22e44:	movne	r3, #0
   22e48:	uxtb	r3, r3
   22e4c:	cmp	r3, #0
   22e50:	beq	22e90 <__assert_fail@plt+0x11ba0>
   22e54:	ldrb	r3, [fp, #12]
   22e58:	eor	r3, r3, #1
   22e5c:	uxtb	r3, r3
   22e60:	cmp	r3, #0
   22e64:	beq	22e90 <__assert_fail@plt+0x11ba0>
   22e68:	sub	r3, fp, #16
   22e6c:	ldr	r2, [fp, #8]
   22e70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22e74:	mov	r0, r3
   22e78:	bl	20398 <__assert_fail@plt+0xf0a8>
   22e7c:	ldrb	r3, [fp, #-12]
   22e80:	cmp	r3, #21
   22e84:	beq	22e90 <__assert_fail@plt+0x11ba0>
   22e88:	mov	r3, #11
   22e8c:	b	22eb0 <__assert_fail@plt+0x11bc0>
   22e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22e94:	mov	r2, #0
   22e98:	str	r2, [r3]
   22e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22ea0:	ldrb	r2, [r3]
   22ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22ea8:	strb	r2, [r3, #4]
   22eac:	mov	r3, #0
   22eb0:	mov	r0, r3
   22eb4:	sub	sp, fp, #4
   22eb8:	ldr	fp, [sp]
   22ebc:	add	sp, sp, #4
   22ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   22ec4:	str	fp, [sp, #-8]!
   22ec8:	str	lr, [sp, #4]
   22ecc:	add	fp, sp, #4
   22ed0:	sub	sp, sp, #32
   22ed4:	str	r0, [fp, #-24]	; 0xffffffe8
   22ed8:	str	r1, [fp, #-28]	; 0xffffffe4
   22edc:	str	r2, [fp, #-32]	; 0xffffffe0
   22ee0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22ee4:	ldrb	r3, [r3]
   22ee8:	strb	r3, [fp, #-13]
   22eec:	mov	r3, #0
   22ef0:	str	r3, [fp, #-12]
   22ef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22ef8:	ldr	r2, [r3, #56]	; 0x38
   22efc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22f00:	ldr	r3, [r3, #40]	; 0x28
   22f04:	cmp	r2, r3
   22f08:	bgt	22f14 <__assert_fail@plt+0x11c24>
   22f0c:	mov	r3, #7
   22f10:	b	23074 <__assert_fail@plt+0x11d84>
   22f14:	ldr	r3, [fp, #-12]
   22f18:	cmp	r3, #31
   22f1c:	ble	22f28 <__assert_fail@plt+0x11c38>
   22f20:	mov	r3, #7
   22f24:	b	23074 <__assert_fail@plt+0x11d84>
   22f28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22f2c:	ldrb	r3, [r3, #4]
   22f30:	cmp	r3, #30
   22f34:	bne	22f4c <__assert_fail@plt+0x11c5c>
   22f38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22f3c:	bl	18ad8 <__assert_fail@plt+0x77e8>
   22f40:	mov	r3, r0
   22f44:	strb	r3, [fp, #-5]
   22f48:	b	22f74 <__assert_fail@plt+0x11c84>
   22f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22f50:	ldr	r2, [r3, #4]
   22f54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22f58:	ldr	r3, [r3, #40]	; 0x28
   22f5c:	add	r0, r3, #1
   22f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22f64:	str	r0, [r1, #40]	; 0x28
   22f68:	add	r3, r2, r3
   22f6c:	ldrb	r3, [r3]
   22f70:	strb	r3, [fp, #-5]
   22f74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22f78:	ldr	r2, [r3, #56]	; 0x38
   22f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22f80:	ldr	r3, [r3, #40]	; 0x28
   22f84:	cmp	r2, r3
   22f88:	bgt	22f94 <__assert_fail@plt+0x11ca4>
   22f8c:	mov	r3, #7
   22f90:	b	23074 <__assert_fail@plt+0x11d84>
   22f94:	ldrb	r2, [fp, #-5]
   22f98:	ldrb	r3, [fp, #-13]
   22f9c:	cmp	r2, r3
   22fa0:	bne	22fc4 <__assert_fail@plt+0x11cd4>
   22fa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22fa8:	ldr	r3, [r3, #4]
   22fac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22fb0:	ldr	r2, [r2, #40]	; 0x28
   22fb4:	add	r3, r3, r2
   22fb8:	ldrb	r3, [r3]
   22fbc:	cmp	r3, #93	; 0x5d
   22fc0:	beq	22fec <__assert_fail@plt+0x11cfc>
   22fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22fc8:	ldr	r2, [r3, #4]
   22fcc:	ldr	r3, [fp, #-12]
   22fd0:	add	r3, r2, r3
   22fd4:	ldrb	r2, [fp, #-5]
   22fd8:	strb	r2, [r3]
   22fdc:	ldr	r3, [fp, #-12]
   22fe0:	add	r3, r3, #1
   22fe4:	str	r3, [fp, #-12]
   22fe8:	b	22f14 <__assert_fail@plt+0x11c24>
   22fec:	nop	{0}
   22ff0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22ff4:	ldr	r3, [r3, #40]	; 0x28
   22ff8:	add	r2, r3, #1
   22ffc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23000:	str	r2, [r3, #40]	; 0x28
   23004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23008:	ldr	r2, [r3, #4]
   2300c:	ldr	r3, [fp, #-12]
   23010:	add	r3, r2, r3
   23014:	mov	r2, #0
   23018:	strb	r2, [r3]
   2301c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23020:	ldrb	r3, [r3, #4]
   23024:	cmp	r3, #28
   23028:	beq	2304c <__assert_fail@plt+0x11d5c>
   2302c:	cmp	r3, #30
   23030:	beq	2305c <__assert_fail@plt+0x11d6c>
   23034:	cmp	r3, #26
   23038:	bne	2306c <__assert_fail@plt+0x11d7c>
   2303c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23040:	mov	r2, #3
   23044:	str	r2, [r3]
   23048:	b	23070 <__assert_fail@plt+0x11d80>
   2304c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23050:	mov	r2, #2
   23054:	str	r2, [r3]
   23058:	b	23070 <__assert_fail@plt+0x11d80>
   2305c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23060:	mov	r2, #4
   23064:	str	r2, [r3]
   23068:	b	23070 <__assert_fail@plt+0x11d80>
   2306c:	nop	{0}
   23070:	mov	r3, #0
   23074:	mov	r0, r3
   23078:	sub	sp, fp, #4
   2307c:	ldr	fp, [sp]
   23080:	add	sp, sp, #4
   23084:	pop	{pc}		; (ldr pc, [sp], #4)
   23088:	str	fp, [sp, #-8]!
   2308c:	str	lr, [sp, #4]
   23090:	add	fp, sp, #4
   23094:	sub	sp, sp, #16
   23098:	str	r0, [fp, #-8]
   2309c:	str	r1, [fp, #-12]
   230a0:	str	r2, [fp, #-16]
   230a4:	str	r3, [fp, #-20]	; 0xffffffec
   230a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   230ac:	bl	111d0 <strlen@plt>
   230b0:	mov	r3, r0
   230b4:	cmp	r3, #1
   230b8:	movne	r3, #1
   230bc:	moveq	r3, #0
   230c0:	uxtb	r3, r3
   230c4:	cmp	r3, #0
   230c8:	beq	230d4 <__assert_fail@plt+0x11de4>
   230cc:	mov	r3, #3
   230d0:	b	230ec <__assert_fail@plt+0x11dfc>
   230d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   230d8:	ldrb	r3, [r3]
   230dc:	mov	r1, r3
   230e0:	ldr	r0, [fp, #-8]
   230e4:	bl	15f50 <__assert_fail@plt+0x4c60>
   230e8:	mov	r3, #0
   230ec:	mov	r0, r3
   230f0:	sub	sp, fp, #4
   230f4:	ldr	fp, [sp]
   230f8:	add	sp, sp, #4
   230fc:	pop	{pc}		; (ldr pc, [sp], #4)
   23100:	str	r4, [sp, #-12]!
   23104:	str	fp, [sp, #4]
   23108:	str	lr, [sp, #8]
   2310c:	add	fp, sp, #8
   23110:	sub	sp, sp, #36	; 0x24
   23114:	str	r0, [fp, #-32]	; 0xffffffe0
   23118:	str	r1, [fp, #-36]	; 0xffffffdc
   2311c:	str	r2, [fp, #-40]	; 0xffffffd8
   23120:	str	r3, [fp, #-44]	; 0xffffffd4
   23124:	ldr	r3, [fp, #4]
   23128:	str	r3, [fp, #-20]	; 0xffffffec
   2312c:	ldr	r3, [fp, #8]
   23130:	and	r3, r3, #4194304	; 0x400000
   23134:	cmp	r3, #0
   23138:	beq	23180 <__assert_fail@plt+0x11e90>
   2313c:	movw	r1, #14036	; 0x36d4
   23140:	movt	r1, #3
   23144:	ldr	r0, [fp, #-20]	; 0xffffffec
   23148:	bl	11008 <strcmp@plt>
   2314c:	mov	r3, r0
   23150:	cmp	r3, #0
   23154:	beq	23174 <__assert_fail@plt+0x11e84>
   23158:	movw	r1, #14044	; 0x36dc
   2315c:	movt	r1, #3
   23160:	ldr	r0, [fp, #-20]	; 0xffffffec
   23164:	bl	11008 <strcmp@plt>
   23168:	mov	r3, r0
   2316c:	cmp	r3, #0
   23170:	bne	23180 <__assert_fail@plt+0x11e90>
   23174:	movw	r3, #14052	; 0x36e4
   23178:	movt	r3, #3
   2317c:	str	r3, [fp, #-20]	; 0xffffffec
   23180:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23184:	ldr	r2, [r3]
   23188:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2318c:	ldr	r3, [r3, #36]	; 0x24
   23190:	cmp	r2, r3
   23194:	moveq	r3, #1
   23198:	movne	r3, #0
   2319c:	uxtb	r3, r3
   231a0:	cmp	r3, #0
   231a4:	beq	23218 <__assert_fail@plt+0x11f28>
   231a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   231ac:	ldr	r3, [r3, #36]	; 0x24
   231b0:	lsl	r3, r3, #1
   231b4:	add	r3, r3, #1
   231b8:	str	r3, [fp, #-24]	; 0xffffffe8
   231bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   231c0:	ldr	r2, [r3, #12]
   231c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   231c8:	lsl	r3, r3, #2
   231cc:	mov	r1, r3
   231d0:	mov	r0, r2
   231d4:	bl	313dc <__assert_fail@plt+0x200ec>
   231d8:	str	r0, [fp, #-28]	; 0xffffffe4
   231dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   231e0:	cmp	r3, #0
   231e4:	moveq	r3, #1
   231e8:	movne	r3, #0
   231ec:	uxtb	r3, r3
   231f0:	cmp	r3, #0
   231f4:	beq	23200 <__assert_fail@plt+0x11f10>
   231f8:	mov	r3, #12
   231fc:	b	23e58 <__assert_fail@plt+0x12b68>
   23200:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23204:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23208:	str	r2, [r3, #12]
   2320c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23210:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23214:	str	r2, [r3]
   23218:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2321c:	ldr	r2, [r3, #12]
   23220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23224:	ldr	r3, [r3, #36]	; 0x24
   23228:	add	r0, r3, #1
   2322c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23230:	str	r0, [r1, #36]	; 0x24
   23234:	lsl	r3, r3, #2
   23238:	add	r4, r2, r3
   2323c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23240:	bl	10fe4 <wctype@plt>
   23244:	mov	r3, r0
   23248:	str	r3, [r4]
   2324c:	movw	r1, #14016	; 0x36c0
   23250:	movt	r1, #3
   23254:	ldr	r0, [fp, #-20]	; 0xffffffec
   23258:	bl	11008 <strcmp@plt>
   2325c:	mov	r3, r0
   23260:	cmp	r3, #0
   23264:	bne	2334c <__assert_fail@plt+0x1205c>
   23268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2326c:	cmp	r3, #0
   23270:	movne	r3, #1
   23274:	moveq	r3, #0
   23278:	uxtb	r3, r3
   2327c:	cmp	r3, #0
   23280:	beq	232f0 <__assert_fail@plt+0x12000>
   23284:	mov	r3, #0
   23288:	str	r3, [fp, #-16]
   2328c:	b	232e0 <__assert_fail@plt+0x11ff0>
   23290:	bl	111ac <__ctype_b_loc@plt>
   23294:	mov	r3, r0
   23298:	ldr	r2, [r3]
   2329c:	ldr	r3, [fp, #-16]
   232a0:	lsl	r3, r3, #1
   232a4:	add	r3, r2, r3
   232a8:	ldrh	r3, [r3]
   232ac:	and	r3, r3, #8
   232b0:	cmp	r3, #0
   232b4:	beq	232d4 <__assert_fail@plt+0x11fe4>
   232b8:	ldr	r3, [fp, #-16]
   232bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   232c0:	add	r3, r2, r3
   232c4:	ldrb	r3, [r3]
   232c8:	mov	r1, r3
   232cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   232d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   232d4:	ldr	r3, [fp, #-16]
   232d8:	add	r3, r3, #1
   232dc:	str	r3, [fp, #-16]
   232e0:	ldr	r3, [fp, #-16]
   232e4:	cmp	r3, #255	; 0xff
   232e8:	ble	23290 <__assert_fail@plt+0x11fa0>
   232ec:	b	23e54 <__assert_fail@plt+0x12b64>
   232f0:	mov	r3, #0
   232f4:	str	r3, [fp, #-16]
   232f8:	b	2333c <__assert_fail@plt+0x1204c>
   232fc:	bl	111ac <__ctype_b_loc@plt>
   23300:	mov	r3, r0
   23304:	ldr	r2, [r3]
   23308:	ldr	r3, [fp, #-16]
   2330c:	lsl	r3, r3, #1
   23310:	add	r3, r2, r3
   23314:	ldrh	r3, [r3]
   23318:	and	r3, r3, #8
   2331c:	cmp	r3, #0
   23320:	beq	23330 <__assert_fail@plt+0x12040>
   23324:	ldr	r1, [fp, #-16]
   23328:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2332c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23330:	ldr	r3, [fp, #-16]
   23334:	add	r3, r3, #1
   23338:	str	r3, [fp, #-16]
   2333c:	ldr	r3, [fp, #-16]
   23340:	cmp	r3, #255	; 0xff
   23344:	ble	232fc <__assert_fail@plt+0x1200c>
   23348:	b	23e54 <__assert_fail@plt+0x12b64>
   2334c:	movw	r1, #14060	; 0x36ec
   23350:	movt	r1, #3
   23354:	ldr	r0, [fp, #-20]	; 0xffffffec
   23358:	bl	11008 <strcmp@plt>
   2335c:	mov	r3, r0
   23360:	cmp	r3, #0
   23364:	bne	2344c <__assert_fail@plt+0x1215c>
   23368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2336c:	cmp	r3, #0
   23370:	movne	r3, #1
   23374:	moveq	r3, #0
   23378:	uxtb	r3, r3
   2337c:	cmp	r3, #0
   23380:	beq	233f0 <__assert_fail@plt+0x12100>
   23384:	mov	r3, #0
   23388:	str	r3, [fp, #-16]
   2338c:	b	233e0 <__assert_fail@plt+0x120f0>
   23390:	bl	111ac <__ctype_b_loc@plt>
   23394:	mov	r3, r0
   23398:	ldr	r2, [r3]
   2339c:	ldr	r3, [fp, #-16]
   233a0:	lsl	r3, r3, #1
   233a4:	add	r3, r2, r3
   233a8:	ldrh	r3, [r3]
   233ac:	and	r3, r3, #2
   233b0:	cmp	r3, #0
   233b4:	beq	233d4 <__assert_fail@plt+0x120e4>
   233b8:	ldr	r3, [fp, #-16]
   233bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   233c0:	add	r3, r2, r3
   233c4:	ldrb	r3, [r3]
   233c8:	mov	r1, r3
   233cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   233d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   233d4:	ldr	r3, [fp, #-16]
   233d8:	add	r3, r3, #1
   233dc:	str	r3, [fp, #-16]
   233e0:	ldr	r3, [fp, #-16]
   233e4:	cmp	r3, #255	; 0xff
   233e8:	ble	23390 <__assert_fail@plt+0x120a0>
   233ec:	b	23e54 <__assert_fail@plt+0x12b64>
   233f0:	mov	r3, #0
   233f4:	str	r3, [fp, #-16]
   233f8:	b	2343c <__assert_fail@plt+0x1214c>
   233fc:	bl	111ac <__ctype_b_loc@plt>
   23400:	mov	r3, r0
   23404:	ldr	r2, [r3]
   23408:	ldr	r3, [fp, #-16]
   2340c:	lsl	r3, r3, #1
   23410:	add	r3, r2, r3
   23414:	ldrh	r3, [r3]
   23418:	and	r3, r3, #2
   2341c:	cmp	r3, #0
   23420:	beq	23430 <__assert_fail@plt+0x12140>
   23424:	ldr	r1, [fp, #-16]
   23428:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2342c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23430:	ldr	r3, [fp, #-16]
   23434:	add	r3, r3, #1
   23438:	str	r3, [fp, #-16]
   2343c:	ldr	r3, [fp, #-16]
   23440:	cmp	r3, #255	; 0xff
   23444:	ble	233fc <__assert_fail@plt+0x1210c>
   23448:	b	23e54 <__assert_fail@plt+0x12b64>
   2344c:	movw	r1, #14044	; 0x36dc
   23450:	movt	r1, #3
   23454:	ldr	r0, [fp, #-20]	; 0xffffffec
   23458:	bl	11008 <strcmp@plt>
   2345c:	mov	r3, r0
   23460:	cmp	r3, #0
   23464:	bne	2354c <__assert_fail@plt+0x1225c>
   23468:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2346c:	cmp	r3, #0
   23470:	movne	r3, #1
   23474:	moveq	r3, #0
   23478:	uxtb	r3, r3
   2347c:	cmp	r3, #0
   23480:	beq	234f0 <__assert_fail@plt+0x12200>
   23484:	mov	r3, #0
   23488:	str	r3, [fp, #-16]
   2348c:	b	234e0 <__assert_fail@plt+0x121f0>
   23490:	bl	111ac <__ctype_b_loc@plt>
   23494:	mov	r3, r0
   23498:	ldr	r2, [r3]
   2349c:	ldr	r3, [fp, #-16]
   234a0:	lsl	r3, r3, #1
   234a4:	add	r3, r2, r3
   234a8:	ldrh	r3, [r3]
   234ac:	and	r3, r3, #512	; 0x200
   234b0:	cmp	r3, #0
   234b4:	beq	234d4 <__assert_fail@plt+0x121e4>
   234b8:	ldr	r3, [fp, #-16]
   234bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   234c0:	add	r3, r2, r3
   234c4:	ldrb	r3, [r3]
   234c8:	mov	r1, r3
   234cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   234d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   234d4:	ldr	r3, [fp, #-16]
   234d8:	add	r3, r3, #1
   234dc:	str	r3, [fp, #-16]
   234e0:	ldr	r3, [fp, #-16]
   234e4:	cmp	r3, #255	; 0xff
   234e8:	ble	23490 <__assert_fail@plt+0x121a0>
   234ec:	b	23e54 <__assert_fail@plt+0x12b64>
   234f0:	mov	r3, #0
   234f4:	str	r3, [fp, #-16]
   234f8:	b	2353c <__assert_fail@plt+0x1224c>
   234fc:	bl	111ac <__ctype_b_loc@plt>
   23500:	mov	r3, r0
   23504:	ldr	r2, [r3]
   23508:	ldr	r3, [fp, #-16]
   2350c:	lsl	r3, r3, #1
   23510:	add	r3, r2, r3
   23514:	ldrh	r3, [r3]
   23518:	and	r3, r3, #512	; 0x200
   2351c:	cmp	r3, #0
   23520:	beq	23530 <__assert_fail@plt+0x12240>
   23524:	ldr	r1, [fp, #-16]
   23528:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2352c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23530:	ldr	r3, [fp, #-16]
   23534:	add	r3, r3, #1
   23538:	str	r3, [fp, #-16]
   2353c:	ldr	r3, [fp, #-16]
   23540:	cmp	r3, #255	; 0xff
   23544:	ble	234fc <__assert_fail@plt+0x1220c>
   23548:	b	23e54 <__assert_fail@plt+0x12b64>
   2354c:	movw	r1, #14028	; 0x36cc
   23550:	movt	r1, #3
   23554:	ldr	r0, [fp, #-20]	; 0xffffffec
   23558:	bl	11008 <strcmp@plt>
   2355c:	mov	r3, r0
   23560:	cmp	r3, #0
   23564:	bne	2364c <__assert_fail@plt+0x1235c>
   23568:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2356c:	cmp	r3, #0
   23570:	movne	r3, #1
   23574:	moveq	r3, #0
   23578:	uxtb	r3, r3
   2357c:	cmp	r3, #0
   23580:	beq	235f0 <__assert_fail@plt+0x12300>
   23584:	mov	r3, #0
   23588:	str	r3, [fp, #-16]
   2358c:	b	235e0 <__assert_fail@plt+0x122f0>
   23590:	bl	111ac <__ctype_b_loc@plt>
   23594:	mov	r3, r0
   23598:	ldr	r2, [r3]
   2359c:	ldr	r3, [fp, #-16]
   235a0:	lsl	r3, r3, #1
   235a4:	add	r3, r2, r3
   235a8:	ldrh	r3, [r3]
   235ac:	and	r3, r3, #8192	; 0x2000
   235b0:	cmp	r3, #0
   235b4:	beq	235d4 <__assert_fail@plt+0x122e4>
   235b8:	ldr	r3, [fp, #-16]
   235bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   235c0:	add	r3, r2, r3
   235c4:	ldrb	r3, [r3]
   235c8:	mov	r1, r3
   235cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   235d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   235d4:	ldr	r3, [fp, #-16]
   235d8:	add	r3, r3, #1
   235dc:	str	r3, [fp, #-16]
   235e0:	ldr	r3, [fp, #-16]
   235e4:	cmp	r3, #255	; 0xff
   235e8:	ble	23590 <__assert_fail@plt+0x122a0>
   235ec:	b	23e54 <__assert_fail@plt+0x12b64>
   235f0:	mov	r3, #0
   235f4:	str	r3, [fp, #-16]
   235f8:	b	2363c <__assert_fail@plt+0x1234c>
   235fc:	bl	111ac <__ctype_b_loc@plt>
   23600:	mov	r3, r0
   23604:	ldr	r2, [r3]
   23608:	ldr	r3, [fp, #-16]
   2360c:	lsl	r3, r3, #1
   23610:	add	r3, r2, r3
   23614:	ldrh	r3, [r3]
   23618:	and	r3, r3, #8192	; 0x2000
   2361c:	cmp	r3, #0
   23620:	beq	23630 <__assert_fail@plt+0x12340>
   23624:	ldr	r1, [fp, #-16]
   23628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2362c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23630:	ldr	r3, [fp, #-16]
   23634:	add	r3, r3, #1
   23638:	str	r3, [fp, #-16]
   2363c:	ldr	r3, [fp, #-16]
   23640:	cmp	r3, #255	; 0xff
   23644:	ble	235fc <__assert_fail@plt+0x1230c>
   23648:	b	23e54 <__assert_fail@plt+0x12b64>
   2364c:	movw	r1, #14052	; 0x36e4
   23650:	movt	r1, #3
   23654:	ldr	r0, [fp, #-20]	; 0xffffffec
   23658:	bl	11008 <strcmp@plt>
   2365c:	mov	r3, r0
   23660:	cmp	r3, #0
   23664:	bne	2374c <__assert_fail@plt+0x1245c>
   23668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2366c:	cmp	r3, #0
   23670:	movne	r3, #1
   23674:	moveq	r3, #0
   23678:	uxtb	r3, r3
   2367c:	cmp	r3, #0
   23680:	beq	236f0 <__assert_fail@plt+0x12400>
   23684:	mov	r3, #0
   23688:	str	r3, [fp, #-16]
   2368c:	b	236e0 <__assert_fail@plt+0x123f0>
   23690:	bl	111ac <__ctype_b_loc@plt>
   23694:	mov	r3, r0
   23698:	ldr	r2, [r3]
   2369c:	ldr	r3, [fp, #-16]
   236a0:	lsl	r3, r3, #1
   236a4:	add	r3, r2, r3
   236a8:	ldrh	r3, [r3]
   236ac:	and	r3, r3, #1024	; 0x400
   236b0:	cmp	r3, #0
   236b4:	beq	236d4 <__assert_fail@plt+0x123e4>
   236b8:	ldr	r3, [fp, #-16]
   236bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   236c0:	add	r3, r2, r3
   236c4:	ldrb	r3, [r3]
   236c8:	mov	r1, r3
   236cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   236d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   236d4:	ldr	r3, [fp, #-16]
   236d8:	add	r3, r3, #1
   236dc:	str	r3, [fp, #-16]
   236e0:	ldr	r3, [fp, #-16]
   236e4:	cmp	r3, #255	; 0xff
   236e8:	ble	23690 <__assert_fail@plt+0x123a0>
   236ec:	b	23e54 <__assert_fail@plt+0x12b64>
   236f0:	mov	r3, #0
   236f4:	str	r3, [fp, #-16]
   236f8:	b	2373c <__assert_fail@plt+0x1244c>
   236fc:	bl	111ac <__ctype_b_loc@plt>
   23700:	mov	r3, r0
   23704:	ldr	r2, [r3]
   23708:	ldr	r3, [fp, #-16]
   2370c:	lsl	r3, r3, #1
   23710:	add	r3, r2, r3
   23714:	ldrh	r3, [r3]
   23718:	and	r3, r3, #1024	; 0x400
   2371c:	cmp	r3, #0
   23720:	beq	23730 <__assert_fail@plt+0x12440>
   23724:	ldr	r1, [fp, #-16]
   23728:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2372c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23730:	ldr	r3, [fp, #-16]
   23734:	add	r3, r3, #1
   23738:	str	r3, [fp, #-16]
   2373c:	ldr	r3, [fp, #-16]
   23740:	cmp	r3, #255	; 0xff
   23744:	ble	236fc <__assert_fail@plt+0x1240c>
   23748:	b	23e54 <__assert_fail@plt+0x12b64>
   2374c:	movw	r1, #14068	; 0x36f4
   23750:	movt	r1, #3
   23754:	ldr	r0, [fp, #-20]	; 0xffffffec
   23758:	bl	11008 <strcmp@plt>
   2375c:	mov	r3, r0
   23760:	cmp	r3, #0
   23764:	bne	2384c <__assert_fail@plt+0x1255c>
   23768:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2376c:	cmp	r3, #0
   23770:	movne	r3, #1
   23774:	moveq	r3, #0
   23778:	uxtb	r3, r3
   2377c:	cmp	r3, #0
   23780:	beq	237f0 <__assert_fail@plt+0x12500>
   23784:	mov	r3, #0
   23788:	str	r3, [fp, #-16]
   2378c:	b	237e0 <__assert_fail@plt+0x124f0>
   23790:	bl	111ac <__ctype_b_loc@plt>
   23794:	mov	r3, r0
   23798:	ldr	r2, [r3]
   2379c:	ldr	r3, [fp, #-16]
   237a0:	lsl	r3, r3, #1
   237a4:	add	r3, r2, r3
   237a8:	ldrh	r3, [r3]
   237ac:	and	r3, r3, #2048	; 0x800
   237b0:	cmp	r3, #0
   237b4:	beq	237d4 <__assert_fail@plt+0x124e4>
   237b8:	ldr	r3, [fp, #-16]
   237bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   237c0:	add	r3, r2, r3
   237c4:	ldrb	r3, [r3]
   237c8:	mov	r1, r3
   237cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   237d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   237d4:	ldr	r3, [fp, #-16]
   237d8:	add	r3, r3, #1
   237dc:	str	r3, [fp, #-16]
   237e0:	ldr	r3, [fp, #-16]
   237e4:	cmp	r3, #255	; 0xff
   237e8:	ble	23790 <__assert_fail@plt+0x124a0>
   237ec:	b	23e54 <__assert_fail@plt+0x12b64>
   237f0:	mov	r3, #0
   237f4:	str	r3, [fp, #-16]
   237f8:	b	2383c <__assert_fail@plt+0x1254c>
   237fc:	bl	111ac <__ctype_b_loc@plt>
   23800:	mov	r3, r0
   23804:	ldr	r2, [r3]
   23808:	ldr	r3, [fp, #-16]
   2380c:	lsl	r3, r3, #1
   23810:	add	r3, r2, r3
   23814:	ldrh	r3, [r3]
   23818:	and	r3, r3, #2048	; 0x800
   2381c:	cmp	r3, #0
   23820:	beq	23830 <__assert_fail@plt+0x12540>
   23824:	ldr	r1, [fp, #-16]
   23828:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2382c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23830:	ldr	r3, [fp, #-16]
   23834:	add	r3, r3, #1
   23838:	str	r3, [fp, #-16]
   2383c:	ldr	r3, [fp, #-16]
   23840:	cmp	r3, #255	; 0xff
   23844:	ble	237fc <__assert_fail@plt+0x1250c>
   23848:	b	23e54 <__assert_fail@plt+0x12b64>
   2384c:	movw	r1, #14076	; 0x36fc
   23850:	movt	r1, #3
   23854:	ldr	r0, [fp, #-20]	; 0xffffffec
   23858:	bl	11008 <strcmp@plt>
   2385c:	mov	r3, r0
   23860:	cmp	r3, #0
   23864:	bne	2394c <__assert_fail@plt+0x1265c>
   23868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2386c:	cmp	r3, #0
   23870:	movne	r3, #1
   23874:	moveq	r3, #0
   23878:	uxtb	r3, r3
   2387c:	cmp	r3, #0
   23880:	beq	238f0 <__assert_fail@plt+0x12600>
   23884:	mov	r3, #0
   23888:	str	r3, [fp, #-16]
   2388c:	b	238e0 <__assert_fail@plt+0x125f0>
   23890:	bl	111ac <__ctype_b_loc@plt>
   23894:	mov	r3, r0
   23898:	ldr	r2, [r3]
   2389c:	ldr	r3, [fp, #-16]
   238a0:	lsl	r3, r3, #1
   238a4:	add	r3, r2, r3
   238a8:	ldrh	r3, [r3]
   238ac:	and	r3, r3, #16384	; 0x4000
   238b0:	cmp	r3, #0
   238b4:	beq	238d4 <__assert_fail@plt+0x125e4>
   238b8:	ldr	r3, [fp, #-16]
   238bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   238c0:	add	r3, r2, r3
   238c4:	ldrb	r3, [r3]
   238c8:	mov	r1, r3
   238cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   238d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   238d4:	ldr	r3, [fp, #-16]
   238d8:	add	r3, r3, #1
   238dc:	str	r3, [fp, #-16]
   238e0:	ldr	r3, [fp, #-16]
   238e4:	cmp	r3, #255	; 0xff
   238e8:	ble	23890 <__assert_fail@plt+0x125a0>
   238ec:	b	23e54 <__assert_fail@plt+0x12b64>
   238f0:	mov	r3, #0
   238f4:	str	r3, [fp, #-16]
   238f8:	b	2393c <__assert_fail@plt+0x1264c>
   238fc:	bl	111ac <__ctype_b_loc@plt>
   23900:	mov	r3, r0
   23904:	ldr	r2, [r3]
   23908:	ldr	r3, [fp, #-16]
   2390c:	lsl	r3, r3, #1
   23910:	add	r3, r2, r3
   23914:	ldrh	r3, [r3]
   23918:	and	r3, r3, #16384	; 0x4000
   2391c:	cmp	r3, #0
   23920:	beq	23930 <__assert_fail@plt+0x12640>
   23924:	ldr	r1, [fp, #-16]
   23928:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2392c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23930:	ldr	r3, [fp, #-16]
   23934:	add	r3, r3, #1
   23938:	str	r3, [fp, #-16]
   2393c:	ldr	r3, [fp, #-16]
   23940:	cmp	r3, #255	; 0xff
   23944:	ble	238fc <__assert_fail@plt+0x1260c>
   23948:	b	23e54 <__assert_fail@plt+0x12b64>
   2394c:	movw	r1, #14036	; 0x36d4
   23950:	movt	r1, #3
   23954:	ldr	r0, [fp, #-20]	; 0xffffffec
   23958:	bl	11008 <strcmp@plt>
   2395c:	mov	r3, r0
   23960:	cmp	r3, #0
   23964:	bne	23a4c <__assert_fail@plt+0x1275c>
   23968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2396c:	cmp	r3, #0
   23970:	movne	r3, #1
   23974:	moveq	r3, #0
   23978:	uxtb	r3, r3
   2397c:	cmp	r3, #0
   23980:	beq	239f0 <__assert_fail@plt+0x12700>
   23984:	mov	r3, #0
   23988:	str	r3, [fp, #-16]
   2398c:	b	239e0 <__assert_fail@plt+0x126f0>
   23990:	bl	111ac <__ctype_b_loc@plt>
   23994:	mov	r3, r0
   23998:	ldr	r2, [r3]
   2399c:	ldr	r3, [fp, #-16]
   239a0:	lsl	r3, r3, #1
   239a4:	add	r3, r2, r3
   239a8:	ldrh	r3, [r3]
   239ac:	and	r3, r3, #256	; 0x100
   239b0:	cmp	r3, #0
   239b4:	beq	239d4 <__assert_fail@plt+0x126e4>
   239b8:	ldr	r3, [fp, #-16]
   239bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   239c0:	add	r3, r2, r3
   239c4:	ldrb	r3, [r3]
   239c8:	mov	r1, r3
   239cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   239d0:	bl	15f50 <__assert_fail@plt+0x4c60>
   239d4:	ldr	r3, [fp, #-16]
   239d8:	add	r3, r3, #1
   239dc:	str	r3, [fp, #-16]
   239e0:	ldr	r3, [fp, #-16]
   239e4:	cmp	r3, #255	; 0xff
   239e8:	ble	23990 <__assert_fail@plt+0x126a0>
   239ec:	b	23e54 <__assert_fail@plt+0x12b64>
   239f0:	mov	r3, #0
   239f4:	str	r3, [fp, #-16]
   239f8:	b	23a3c <__assert_fail@plt+0x1274c>
   239fc:	bl	111ac <__ctype_b_loc@plt>
   23a00:	mov	r3, r0
   23a04:	ldr	r2, [r3]
   23a08:	ldr	r3, [fp, #-16]
   23a0c:	lsl	r3, r3, #1
   23a10:	add	r3, r2, r3
   23a14:	ldrh	r3, [r3]
   23a18:	and	r3, r3, #256	; 0x100
   23a1c:	cmp	r3, #0
   23a20:	beq	23a30 <__assert_fail@plt+0x12740>
   23a24:	ldr	r1, [fp, #-16]
   23a28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23a2c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23a30:	ldr	r3, [fp, #-16]
   23a34:	add	r3, r3, #1
   23a38:	str	r3, [fp, #-16]
   23a3c:	ldr	r3, [fp, #-16]
   23a40:	cmp	r3, #255	; 0xff
   23a44:	ble	239fc <__assert_fail@plt+0x1270c>
   23a48:	b	23e54 <__assert_fail@plt+0x12b64>
   23a4c:	movw	r1, #14084	; 0x3704
   23a50:	movt	r1, #3
   23a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a58:	bl	11008 <strcmp@plt>
   23a5c:	mov	r3, r0
   23a60:	cmp	r3, #0
   23a64:	bne	23b4c <__assert_fail@plt+0x1285c>
   23a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23a6c:	cmp	r3, #0
   23a70:	movne	r3, #1
   23a74:	moveq	r3, #0
   23a78:	uxtb	r3, r3
   23a7c:	cmp	r3, #0
   23a80:	beq	23af0 <__assert_fail@plt+0x12800>
   23a84:	mov	r3, #0
   23a88:	str	r3, [fp, #-16]
   23a8c:	b	23ae0 <__assert_fail@plt+0x127f0>
   23a90:	bl	111ac <__ctype_b_loc@plt>
   23a94:	mov	r3, r0
   23a98:	ldr	r2, [r3]
   23a9c:	ldr	r3, [fp, #-16]
   23aa0:	lsl	r3, r3, #1
   23aa4:	add	r3, r2, r3
   23aa8:	ldrh	r3, [r3]
   23aac:	and	r3, r3, #1
   23ab0:	cmp	r3, #0
   23ab4:	beq	23ad4 <__assert_fail@plt+0x127e4>
   23ab8:	ldr	r3, [fp, #-16]
   23abc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23ac0:	add	r3, r2, r3
   23ac4:	ldrb	r3, [r3]
   23ac8:	mov	r1, r3
   23acc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23ad0:	bl	15f50 <__assert_fail@plt+0x4c60>
   23ad4:	ldr	r3, [fp, #-16]
   23ad8:	add	r3, r3, #1
   23adc:	str	r3, [fp, #-16]
   23ae0:	ldr	r3, [fp, #-16]
   23ae4:	cmp	r3, #255	; 0xff
   23ae8:	ble	23a90 <__assert_fail@plt+0x127a0>
   23aec:	b	23e54 <__assert_fail@plt+0x12b64>
   23af0:	mov	r3, #0
   23af4:	str	r3, [fp, #-16]
   23af8:	b	23b3c <__assert_fail@plt+0x1284c>
   23afc:	bl	111ac <__ctype_b_loc@plt>
   23b00:	mov	r3, r0
   23b04:	ldr	r2, [r3]
   23b08:	ldr	r3, [fp, #-16]
   23b0c:	lsl	r3, r3, #1
   23b10:	add	r3, r2, r3
   23b14:	ldrh	r3, [r3]
   23b18:	and	r3, r3, #1
   23b1c:	cmp	r3, #0
   23b20:	beq	23b30 <__assert_fail@plt+0x12840>
   23b24:	ldr	r1, [fp, #-16]
   23b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b2c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23b30:	ldr	r3, [fp, #-16]
   23b34:	add	r3, r3, #1
   23b38:	str	r3, [fp, #-16]
   23b3c:	ldr	r3, [fp, #-16]
   23b40:	cmp	r3, #255	; 0xff
   23b44:	ble	23afc <__assert_fail@plt+0x1280c>
   23b48:	b	23e54 <__assert_fail@plt+0x12b64>
   23b4c:	movw	r1, #14092	; 0x370c
   23b50:	movt	r1, #3
   23b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b58:	bl	11008 <strcmp@plt>
   23b5c:	mov	r3, r0
   23b60:	cmp	r3, #0
   23b64:	bne	23c4c <__assert_fail@plt+0x1295c>
   23b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23b6c:	cmp	r3, #0
   23b70:	movne	r3, #1
   23b74:	moveq	r3, #0
   23b78:	uxtb	r3, r3
   23b7c:	cmp	r3, #0
   23b80:	beq	23bf0 <__assert_fail@plt+0x12900>
   23b84:	mov	r3, #0
   23b88:	str	r3, [fp, #-16]
   23b8c:	b	23be0 <__assert_fail@plt+0x128f0>
   23b90:	bl	111ac <__ctype_b_loc@plt>
   23b94:	mov	r3, r0
   23b98:	ldr	r2, [r3]
   23b9c:	ldr	r3, [fp, #-16]
   23ba0:	lsl	r3, r3, #1
   23ba4:	add	r3, r2, r3
   23ba8:	ldrh	r3, [r3]
   23bac:	sxth	r3, r3
   23bb0:	cmp	r3, #0
   23bb4:	bge	23bd4 <__assert_fail@plt+0x128e4>
   23bb8:	ldr	r3, [fp, #-16]
   23bbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23bc0:	add	r3, r2, r3
   23bc4:	ldrb	r3, [r3]
   23bc8:	mov	r1, r3
   23bcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23bd0:	bl	15f50 <__assert_fail@plt+0x4c60>
   23bd4:	ldr	r3, [fp, #-16]
   23bd8:	add	r3, r3, #1
   23bdc:	str	r3, [fp, #-16]
   23be0:	ldr	r3, [fp, #-16]
   23be4:	cmp	r3, #255	; 0xff
   23be8:	ble	23b90 <__assert_fail@plt+0x128a0>
   23bec:	b	23e54 <__assert_fail@plt+0x12b64>
   23bf0:	mov	r3, #0
   23bf4:	str	r3, [fp, #-16]
   23bf8:	b	23c3c <__assert_fail@plt+0x1294c>
   23bfc:	bl	111ac <__ctype_b_loc@plt>
   23c00:	mov	r3, r0
   23c04:	ldr	r2, [r3]
   23c08:	ldr	r3, [fp, #-16]
   23c0c:	lsl	r3, r3, #1
   23c10:	add	r3, r2, r3
   23c14:	ldrh	r3, [r3]
   23c18:	sxth	r3, r3
   23c1c:	cmp	r3, #0
   23c20:	bge	23c30 <__assert_fail@plt+0x12940>
   23c24:	ldr	r1, [fp, #-16]
   23c28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23c2c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23c30:	ldr	r3, [fp, #-16]
   23c34:	add	r3, r3, #1
   23c38:	str	r3, [fp, #-16]
   23c3c:	ldr	r3, [fp, #-16]
   23c40:	cmp	r3, #255	; 0xff
   23c44:	ble	23bfc <__assert_fail@plt+0x1290c>
   23c48:	b	23e54 <__assert_fail@plt+0x12b64>
   23c4c:	movw	r1, #14100	; 0x3714
   23c50:	movt	r1, #3
   23c54:	ldr	r0, [fp, #-20]	; 0xffffffec
   23c58:	bl	11008 <strcmp@plt>
   23c5c:	mov	r3, r0
   23c60:	cmp	r3, #0
   23c64:	bne	23d4c <__assert_fail@plt+0x12a5c>
   23c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23c6c:	cmp	r3, #0
   23c70:	movne	r3, #1
   23c74:	moveq	r3, #0
   23c78:	uxtb	r3, r3
   23c7c:	cmp	r3, #0
   23c80:	beq	23cf0 <__assert_fail@plt+0x12a00>
   23c84:	mov	r3, #0
   23c88:	str	r3, [fp, #-16]
   23c8c:	b	23ce0 <__assert_fail@plt+0x129f0>
   23c90:	bl	111ac <__ctype_b_loc@plt>
   23c94:	mov	r3, r0
   23c98:	ldr	r2, [r3]
   23c9c:	ldr	r3, [fp, #-16]
   23ca0:	lsl	r3, r3, #1
   23ca4:	add	r3, r2, r3
   23ca8:	ldrh	r3, [r3]
   23cac:	and	r3, r3, #4
   23cb0:	cmp	r3, #0
   23cb4:	beq	23cd4 <__assert_fail@plt+0x129e4>
   23cb8:	ldr	r3, [fp, #-16]
   23cbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23cc0:	add	r3, r2, r3
   23cc4:	ldrb	r3, [r3]
   23cc8:	mov	r1, r3
   23ccc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23cd0:	bl	15f50 <__assert_fail@plt+0x4c60>
   23cd4:	ldr	r3, [fp, #-16]
   23cd8:	add	r3, r3, #1
   23cdc:	str	r3, [fp, #-16]
   23ce0:	ldr	r3, [fp, #-16]
   23ce4:	cmp	r3, #255	; 0xff
   23ce8:	ble	23c90 <__assert_fail@plt+0x129a0>
   23cec:	b	23e54 <__assert_fail@plt+0x12b64>
   23cf0:	mov	r3, #0
   23cf4:	str	r3, [fp, #-16]
   23cf8:	b	23d3c <__assert_fail@plt+0x12a4c>
   23cfc:	bl	111ac <__ctype_b_loc@plt>
   23d00:	mov	r3, r0
   23d04:	ldr	r2, [r3]
   23d08:	ldr	r3, [fp, #-16]
   23d0c:	lsl	r3, r3, #1
   23d10:	add	r3, r2, r3
   23d14:	ldrh	r3, [r3]
   23d18:	and	r3, r3, #4
   23d1c:	cmp	r3, #0
   23d20:	beq	23d30 <__assert_fail@plt+0x12a40>
   23d24:	ldr	r1, [fp, #-16]
   23d28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23d2c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23d30:	ldr	r3, [fp, #-16]
   23d34:	add	r3, r3, #1
   23d38:	str	r3, [fp, #-16]
   23d3c:	ldr	r3, [fp, #-16]
   23d40:	cmp	r3, #255	; 0xff
   23d44:	ble	23cfc <__assert_fail@plt+0x12a0c>
   23d48:	b	23e54 <__assert_fail@plt+0x12b64>
   23d4c:	movw	r1, #14108	; 0x371c
   23d50:	movt	r1, #3
   23d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   23d58:	bl	11008 <strcmp@plt>
   23d5c:	mov	r3, r0
   23d60:	cmp	r3, #0
   23d64:	bne	23e4c <__assert_fail@plt+0x12b5c>
   23d68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23d6c:	cmp	r3, #0
   23d70:	movne	r3, #1
   23d74:	moveq	r3, #0
   23d78:	uxtb	r3, r3
   23d7c:	cmp	r3, #0
   23d80:	beq	23df0 <__assert_fail@plt+0x12b00>
   23d84:	mov	r3, #0
   23d88:	str	r3, [fp, #-16]
   23d8c:	b	23de0 <__assert_fail@plt+0x12af0>
   23d90:	bl	111ac <__ctype_b_loc@plt>
   23d94:	mov	r3, r0
   23d98:	ldr	r2, [r3]
   23d9c:	ldr	r3, [fp, #-16]
   23da0:	lsl	r3, r3, #1
   23da4:	add	r3, r2, r3
   23da8:	ldrh	r3, [r3]
   23dac:	and	r3, r3, #4096	; 0x1000
   23db0:	cmp	r3, #0
   23db4:	beq	23dd4 <__assert_fail@plt+0x12ae4>
   23db8:	ldr	r3, [fp, #-16]
   23dbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23dc0:	add	r3, r2, r3
   23dc4:	ldrb	r3, [r3]
   23dc8:	mov	r1, r3
   23dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23dd0:	bl	15f50 <__assert_fail@plt+0x4c60>
   23dd4:	ldr	r3, [fp, #-16]
   23dd8:	add	r3, r3, #1
   23ddc:	str	r3, [fp, #-16]
   23de0:	ldr	r3, [fp, #-16]
   23de4:	cmp	r3, #255	; 0xff
   23de8:	ble	23d90 <__assert_fail@plt+0x12aa0>
   23dec:	b	23e54 <__assert_fail@plt+0x12b64>
   23df0:	mov	r3, #0
   23df4:	str	r3, [fp, #-16]
   23df8:	b	23e3c <__assert_fail@plt+0x12b4c>
   23dfc:	bl	111ac <__ctype_b_loc@plt>
   23e00:	mov	r3, r0
   23e04:	ldr	r2, [r3]
   23e08:	ldr	r3, [fp, #-16]
   23e0c:	lsl	r3, r3, #1
   23e10:	add	r3, r2, r3
   23e14:	ldrh	r3, [r3]
   23e18:	and	r3, r3, #4096	; 0x1000
   23e1c:	cmp	r3, #0
   23e20:	beq	23e30 <__assert_fail@plt+0x12b40>
   23e24:	ldr	r1, [fp, #-16]
   23e28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23e2c:	bl	15f50 <__assert_fail@plt+0x4c60>
   23e30:	ldr	r3, [fp, #-16]
   23e34:	add	r3, r3, #1
   23e38:	str	r3, [fp, #-16]
   23e3c:	ldr	r3, [fp, #-16]
   23e40:	cmp	r3, #255	; 0xff
   23e44:	ble	23dfc <__assert_fail@plt+0x12b0c>
   23e48:	b	23e54 <__assert_fail@plt+0x12b64>
   23e4c:	mov	r3, #4
   23e50:	b	23e58 <__assert_fail@plt+0x12b68>
   23e54:	mov	r3, #0
   23e58:	mov	r0, r3
   23e5c:	sub	sp, fp, #8
   23e60:	ldr	r4, [sp]
   23e64:	ldr	fp, [sp, #4]
   23e68:	add	sp, sp, #8
   23e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   23e70:	str	fp, [sp, #-8]!
   23e74:	str	lr, [sp, #4]
   23e78:	add	fp, sp, #4
   23e7c:	sub	sp, sp, #56	; 0x38
   23e80:	str	r0, [fp, #-40]	; 0xffffffd8
   23e84:	str	r1, [fp, #-44]	; 0xffffffd4
   23e88:	str	r2, [fp, #-48]	; 0xffffffd0
   23e8c:	str	r3, [fp, #-52]	; 0xffffffcc
   23e90:	mov	r3, #0
   23e94:	str	r3, [fp, #-28]	; 0xffffffe4
   23e98:	mov	r1, #1
   23e9c:	mov	r0, #32
   23ea0:	bl	3127c <__assert_fail@plt+0x1ff8c>
   23ea4:	mov	r3, r0
   23ea8:	str	r3, [fp, #-8]
   23eac:	ldr	r3, [fp, #-8]
   23eb0:	cmp	r3, #0
   23eb4:	moveq	r3, #1
   23eb8:	movne	r3, #0
   23ebc:	uxtb	r3, r3
   23ec0:	cmp	r3, #0
   23ec4:	beq	23edc <__assert_fail@plt+0x12bec>
   23ec8:	ldr	r3, [fp, #8]
   23ecc:	mov	r2, #12
   23ed0:	str	r2, [r3]
   23ed4:	mov	r3, #0
   23ed8:	b	24140 <__assert_fail@plt+0x12e50>
   23edc:	mov	r1, #1
   23ee0:	mov	r0, #40	; 0x28
   23ee4:	bl	3127c <__assert_fail@plt+0x1ff8c>
   23ee8:	mov	r3, r0
   23eec:	str	r3, [fp, #-12]
   23ef0:	ldr	r3, [fp, #-12]
   23ef4:	cmp	r3, #0
   23ef8:	moveq	r3, #1
   23efc:	movne	r3, #0
   23f00:	uxtb	r3, r3
   23f04:	cmp	r3, #0
   23f08:	beq	23f28 <__assert_fail@plt+0x12c38>
   23f0c:	ldr	r0, [fp, #-8]
   23f10:	bl	31b28 <__assert_fail@plt+0x20838>
   23f14:	ldr	r3, [fp, #8]
   23f18:	mov	r2, #12
   23f1c:	str	r2, [r3]
   23f20:	mov	r3, #0
   23f24:	b	24140 <__assert_fail@plt+0x12e50>
   23f28:	ldr	r2, [fp, #-12]
   23f2c:	ldrb	r3, [r2, #16]
   23f30:	ldrb	r1, [fp, #4]
   23f34:	bfi	r3, r1, #0, #1
   23f38:	strb	r3, [r2, #16]
   23f3c:	sub	r2, fp, #28
   23f40:	mov	r3, #0
   23f44:	str	r3, [sp, #4]
   23f48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23f4c:	str	r3, [sp]
   23f50:	mov	r3, r2
   23f54:	ldr	r2, [fp, #-12]
   23f58:	ldr	r1, [fp, #-8]
   23f5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23f60:	bl	23100 <__assert_fail@plt+0x11e10>
   23f64:	str	r0, [fp, #-16]
   23f68:	ldr	r3, [fp, #-16]
   23f6c:	cmp	r3, #0
   23f70:	movne	r3, #1
   23f74:	moveq	r3, #0
   23f78:	uxtb	r3, r3
   23f7c:	cmp	r3, #0
   23f80:	beq	23fc8 <__assert_fail@plt+0x12cd8>
   23f84:	ldr	r0, [fp, #-8]
   23f88:	bl	31b28 <__assert_fail@plt+0x20838>
   23f8c:	ldr	r0, [fp, #-12]
   23f90:	bl	24280 <__assert_fail@plt+0x12f90>
   23f94:	ldr	r3, [fp, #8]
   23f98:	ldr	r2, [fp, #-16]
   23f9c:	str	r2, [r3]
   23fa0:	mov	r3, #0
   23fa4:	b	24140 <__assert_fail@plt+0x12e50>
   23fa8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23fac:	ldrb	r3, [r3]
   23fb0:	mov	r1, r3
   23fb4:	ldr	r0, [fp, #-8]
   23fb8:	bl	15f50 <__assert_fail@plt+0x4c60>
   23fbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23fc0:	add	r3, r3, #1
   23fc4:	str	r3, [fp, #-52]	; 0xffffffcc
   23fc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23fcc:	ldrb	r3, [r3]
   23fd0:	cmp	r3, #0
   23fd4:	bne	23fa8 <__assert_fail@plt+0x12cb8>
   23fd8:	ldrb	r3, [fp, #4]
   23fdc:	cmp	r3, #0
   23fe0:	beq	23fec <__assert_fail@plt+0x12cfc>
   23fe4:	ldr	r0, [fp, #-8]
   23fe8:	bl	16188 <__assert_fail@plt+0x4e98>
   23fec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23ff0:	ldr	r3, [r3, #92]	; 0x5c
   23ff4:	cmp	r3, #1
   23ff8:	ble	24010 <__assert_fail@plt+0x12d20>
   23ffc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24000:	ldr	r3, [r3, #60]	; 0x3c
   24004:	mov	r1, r3
   24008:	ldr	r0, [fp, #-8]
   2400c:	bl	16280 <__assert_fail@plt+0x4f90>
   24010:	sub	r1, fp, #36	; 0x24
   24014:	mov	r2, #0
   24018:	mov	r3, #0
   2401c:	strd	r2, [r1]
   24020:	ldr	r3, [fp, #-8]
   24024:	str	r3, [fp, #-36]	; 0xffffffdc
   24028:	mov	r3, #3
   2402c:	strb	r3, [fp, #-32]	; 0xffffffe0
   24030:	sub	r3, fp, #36	; 0x24
   24034:	mov	r2, #0
   24038:	mov	r1, #0
   2403c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24040:	bl	24358 <__assert_fail@plt+0x13068>
   24044:	str	r0, [fp, #-20]	; 0xffffffec
   24048:	ldr	r3, [fp, #-20]	; 0xffffffec
   2404c:	cmp	r3, #0
   24050:	moveq	r3, #1
   24054:	movne	r3, #0
   24058:	uxtb	r3, r3
   2405c:	cmp	r3, #0
   24060:	bne	24114 <__assert_fail@plt+0x12e24>
   24064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24068:	ldr	r3, [r3, #92]	; 0x5c
   2406c:	cmp	r3, #1
   24070:	ble	24104 <__assert_fail@plt+0x12e14>
   24074:	mov	r3, #6
   24078:	strb	r3, [fp, #-32]	; 0xffffffe0
   2407c:	ldr	r3, [fp, #-12]
   24080:	str	r3, [fp, #-36]	; 0xffffffdc
   24084:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24088:	ldrb	r3, [r2, #88]	; 0x58
   2408c:	orr	r3, r3, #2
   24090:	strb	r3, [r2, #88]	; 0x58
   24094:	sub	r3, fp, #36	; 0x24
   24098:	mov	r2, #0
   2409c:	mov	r1, #0
   240a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   240a4:	bl	24358 <__assert_fail@plt+0x13068>
   240a8:	str	r0, [fp, #-24]	; 0xffffffe8
   240ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   240b0:	cmp	r3, #0
   240b4:	moveq	r3, #1
   240b8:	movne	r3, #0
   240bc:	uxtb	r3, r3
   240c0:	cmp	r3, #0
   240c4:	bne	2411c <__assert_fail@plt+0x12e2c>
   240c8:	mov	r3, #10
   240cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   240d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   240d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   240d8:	bl	242f0 <__assert_fail@plt+0x13000>
   240dc:	str	r0, [fp, #-20]	; 0xffffffec
   240e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   240e4:	cmp	r3, #0
   240e8:	movne	r3, #1
   240ec:	moveq	r3, #0
   240f0:	uxtb	r3, r3
   240f4:	cmp	r3, #0
   240f8:	beq	24120 <__assert_fail@plt+0x12e30>
   240fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   24100:	b	24140 <__assert_fail@plt+0x12e50>
   24104:	ldr	r0, [fp, #-12]
   24108:	bl	24280 <__assert_fail@plt+0x12f90>
   2410c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24110:	b	24140 <__assert_fail@plt+0x12e50>
   24114:	nop	{0}
   24118:	b	24120 <__assert_fail@plt+0x12e30>
   2411c:	nop	{0}
   24120:	ldr	r0, [fp, #-8]
   24124:	bl	31b28 <__assert_fail@plt+0x20838>
   24128:	ldr	r0, [fp, #-12]
   2412c:	bl	24280 <__assert_fail@plt+0x12f90>
   24130:	ldr	r3, [fp, #8]
   24134:	mov	r2, #12
   24138:	str	r2, [r3]
   2413c:	mov	r3, #0
   24140:	mov	r0, r3
   24144:	sub	sp, fp, #4
   24148:	ldr	fp, [sp]
   2414c:	add	sp, sp, #4
   24150:	pop	{pc}		; (ldr pc, [sp], #4)
   24154:	str	fp, [sp, #-8]!
   24158:	str	lr, [sp, #4]
   2415c:	add	fp, sp, #4
   24160:	sub	sp, sp, #24
   24164:	str	r0, [fp, #-16]
   24168:	str	r1, [fp, #-20]	; 0xffffffec
   2416c:	str	r2, [fp, #-24]	; 0xffffffe8
   24170:	mvn	r3, #0
   24174:	str	r3, [fp, #-8]
   24178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2417c:	ldr	r1, [fp, #-16]
   24180:	ldr	r0, [fp, #-20]	; 0xffffffec
   24184:	bl	1f638 <__assert_fail@plt+0xe348>
   24188:	ldr	r3, [fp, #-20]	; 0xffffffec
   2418c:	ldrb	r3, [r3]
   24190:	strb	r3, [fp, #-9]
   24194:	ldr	r3, [fp, #-20]	; 0xffffffec
   24198:	ldrb	r3, [r3, #4]
   2419c:	cmp	r3, #2
   241a0:	moveq	r3, #1
   241a4:	movne	r3, #0
   241a8:	uxtb	r3, r3
   241ac:	cmp	r3, #0
   241b0:	beq	241bc <__assert_fail@plt+0x12ecc>
   241b4:	mvn	r3, #1
   241b8:	b	2426c <__assert_fail@plt+0x12f7c>
   241bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   241c0:	ldrb	r3, [r3, #4]
   241c4:	cmp	r3, #24
   241c8:	beq	24268 <__assert_fail@plt+0x12f78>
   241cc:	ldrb	r3, [fp, #-9]
   241d0:	cmp	r3, #44	; 0x2c
   241d4:	beq	24268 <__assert_fail@plt+0x12f78>
   241d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   241dc:	ldrb	r3, [r3, #4]
   241e0:	cmp	r3, #1
   241e4:	bne	2425c <__assert_fail@plt+0x12f6c>
   241e8:	ldrb	r3, [fp, #-9]
   241ec:	cmp	r3, #47	; 0x2f
   241f0:	bls	2425c <__assert_fail@plt+0x12f6c>
   241f4:	ldrb	r3, [fp, #-9]
   241f8:	cmp	r3, #57	; 0x39
   241fc:	bhi	2425c <__assert_fail@plt+0x12f6c>
   24200:	ldr	r3, [fp, #-8]
   24204:	cmn	r3, #2
   24208:	beq	2425c <__assert_fail@plt+0x12f6c>
   2420c:	ldr	r3, [fp, #-8]
   24210:	cmn	r3, #1
   24214:	bne	24224 <__assert_fail@plt+0x12f34>
   24218:	ldrb	r3, [fp, #-9]
   2421c:	sub	r3, r3, #48	; 0x30
   24220:	b	24260 <__assert_fail@plt+0x12f70>
   24224:	ldr	r2, [fp, #-8]
   24228:	mov	r3, r2
   2422c:	lsl	r3, r3, #2
   24230:	add	r3, r3, r2
   24234:	lsl	r3, r3, #1
   24238:	mov	r2, r3
   2423c:	ldrb	r3, [fp, #-9]
   24240:	add	r3, r2, r3
   24244:	movw	r2, #32816	; 0x8030
   24248:	cmp	r3, r2
   2424c:	movlt	r3, r3
   24250:	movge	r3, r2
   24254:	sub	r3, r3, #48	; 0x30
   24258:	b	24260 <__assert_fail@plt+0x12f70>
   2425c:	mvn	r3, #1
   24260:	str	r3, [fp, #-8]
   24264:	b	24178 <__assert_fail@plt+0x12e88>
   24268:	ldr	r3, [fp, #-8]
   2426c:	mov	r0, r3
   24270:	sub	sp, fp, #4
   24274:	ldr	fp, [sp]
   24278:	add	sp, sp, #4
   2427c:	pop	{pc}		; (ldr pc, [sp], #4)
   24280:	str	fp, [sp, #-8]!
   24284:	str	lr, [sp, #4]
   24288:	add	fp, sp, #4
   2428c:	sub	sp, sp, #8
   24290:	str	r0, [fp, #-8]
   24294:	ldr	r3, [fp, #-8]
   24298:	ldr	r3, [r3]
   2429c:	mov	r0, r3
   242a0:	bl	31b28 <__assert_fail@plt+0x20838>
   242a4:	ldr	r3, [fp, #-8]
   242a8:	ldr	r3, [r3, #4]
   242ac:	mov	r0, r3
   242b0:	bl	31b28 <__assert_fail@plt+0x20838>
   242b4:	ldr	r3, [fp, #-8]
   242b8:	ldr	r3, [r3, #8]
   242bc:	mov	r0, r3
   242c0:	bl	31b28 <__assert_fail@plt+0x20838>
   242c4:	ldr	r3, [fp, #-8]
   242c8:	ldr	r3, [r3, #12]
   242cc:	mov	r0, r3
   242d0:	bl	31b28 <__assert_fail@plt+0x20838>
   242d4:	ldr	r0, [fp, #-8]
   242d8:	bl	31b28 <__assert_fail@plt+0x20838>
   242dc:	nop	{0}
   242e0:	sub	sp, fp, #4
   242e4:	ldr	fp, [sp]
   242e8:	add	sp, sp, #4
   242ec:	pop	{pc}		; (ldr pc, [sp], #4)
   242f0:	str	fp, [sp, #-8]!
   242f4:	str	lr, [sp, #4]
   242f8:	add	fp, sp, #4
   242fc:	sub	sp, sp, #24
   24300:	str	r0, [fp, #-16]
   24304:	str	r1, [fp, #-20]	; 0xffffffec
   24308:	str	r2, [fp, #-24]	; 0xffffffe8
   2430c:	str	r3, [fp, #-28]	; 0xffffffe4
   24310:	sub	r1, fp, #12
   24314:	mov	r2, #0
   24318:	mov	r3, #0
   2431c:	strd	r2, [r1]
   24320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24324:	uxtb	r3, r3
   24328:	strb	r3, [fp, #-8]
   2432c:	sub	r3, fp, #12
   24330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24334:	ldr	r1, [fp, #-20]	; 0xffffffec
   24338:	ldr	r0, [fp, #-16]
   2433c:	bl	24358 <__assert_fail@plt+0x13068>
   24340:	mov	r3, r0
   24344:	mov	r0, r3
   24348:	sub	sp, fp, #4
   2434c:	ldr	fp, [sp]
   24350:	add	sp, sp, #4
   24354:	pop	{pc}		; (ldr pc, [sp], #4)
   24358:	str	fp, [sp, #-8]!
   2435c:	str	lr, [sp, #4]
   24360:	add	fp, sp, #4
   24364:	sub	sp, sp, #24
   24368:	str	r0, [fp, #-16]
   2436c:	str	r1, [fp, #-20]	; 0xffffffec
   24370:	str	r2, [fp, #-24]	; 0xffffffe8
   24374:	str	r3, [fp, #-28]	; 0xffffffe4
   24378:	ldr	r3, [fp, #-16]
   2437c:	ldr	r3, [r3, #64]	; 0x40
   24380:	cmp	r3, #31
   24384:	moveq	r3, #1
   24388:	movne	r3, #0
   2438c:	uxtb	r3, r3
   24390:	cmp	r3, #0
   24394:	beq	243e4 <__assert_fail@plt+0x130f4>
   24398:	mov	r0, #996	; 0x3e4
   2439c:	bl	3134c <__assert_fail@plt+0x2005c>
   243a0:	mov	r3, r0
   243a4:	str	r3, [fp, #-8]
   243a8:	ldr	r3, [fp, #-8]
   243ac:	cmp	r3, #0
   243b0:	bne	243bc <__assert_fail@plt+0x130cc>
   243b4:	mov	r3, #0
   243b8:	b	244c4 <__assert_fail@plt+0x131d4>
   243bc:	ldr	r3, [fp, #-16]
   243c0:	ldr	r2, [r3, #56]	; 0x38
   243c4:	ldr	r3, [fp, #-8]
   243c8:	str	r2, [r3]
   243cc:	ldr	r3, [fp, #-16]
   243d0:	ldr	r2, [fp, #-8]
   243d4:	str	r2, [r3, #56]	; 0x38
   243d8:	ldr	r3, [fp, #-16]
   243dc:	mov	r2, #0
   243e0:	str	r2, [r3, #64]	; 0x40
   243e4:	ldr	r3, [fp, #-16]
   243e8:	ldr	r2, [r3, #56]	; 0x38
   243ec:	ldr	r3, [fp, #-16]
   243f0:	ldr	r3, [r3, #64]	; 0x40
   243f4:	add	r0, r3, #1
   243f8:	ldr	r1, [fp, #-16]
   243fc:	str	r0, [r1, #64]	; 0x40
   24400:	lsl	r3, r3, #5
   24404:	add	r3, r2, r3
   24408:	add	r3, r3, #4
   2440c:	str	r3, [fp, #-12]
   24410:	ldr	r3, [fp, #-12]
   24414:	mov	r2, #0
   24418:	str	r2, [r3]
   2441c:	ldr	r3, [fp, #-12]
   24420:	ldr	r2, [fp, #-20]	; 0xffffffec
   24424:	str	r2, [r3, #4]
   24428:	ldr	r3, [fp, #-12]
   2442c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24430:	str	r2, [r3, #8]
   24434:	ldr	r3, [fp, #-12]
   24438:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2443c:	add	r1, r3, #20
   24440:	mov	r3, r2
   24444:	ldrd	r2, [r3]
   24448:	strd	r2, [r1]
   2444c:	ldr	r2, [fp, #-12]
   24450:	ldrb	r3, [r2, #26]
   24454:	bfc	r3, #2, #1
   24458:	strb	r3, [r2, #26]
   2445c:	ldr	r2, [fp, #-12]
   24460:	ldrb	r3, [r2, #26]
   24464:	bfc	r3, #3, #1
   24468:	strb	r3, [r2, #26]
   2446c:	ldr	r3, [fp, #-12]
   24470:	mov	r2, #0
   24474:	str	r2, [r3, #12]
   24478:	ldr	r3, [fp, #-12]
   2447c:	mov	r2, #0
   24480:	str	r2, [r3, #16]
   24484:	ldr	r3, [fp, #-12]
   24488:	mvn	r2, #0
   2448c:	str	r2, [r3, #28]
   24490:	ldr	r3, [fp, #-20]	; 0xffffffec
   24494:	cmp	r3, #0
   24498:	beq	244a8 <__assert_fail@plt+0x131b8>
   2449c:	ldr	r3, [fp, #-20]	; 0xffffffec
   244a0:	ldr	r2, [fp, #-12]
   244a4:	str	r2, [r3]
   244a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244ac:	cmp	r3, #0
   244b0:	beq	244c0 <__assert_fail@plt+0x131d0>
   244b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244b8:	ldr	r2, [fp, #-12]
   244bc:	str	r2, [r3]
   244c0:	ldr	r3, [fp, #-12]
   244c4:	mov	r0, r3
   244c8:	sub	sp, fp, #4
   244cc:	ldr	fp, [sp]
   244d0:	add	sp, sp, #4
   244d4:	pop	{pc}		; (ldr pc, [sp], #4)
   244d8:	push	{fp}		; (str fp, [sp, #-4]!)
   244dc:	add	fp, sp, #0
   244e0:	sub	sp, sp, #20
   244e4:	str	r0, [fp, #-16]
   244e8:	str	r1, [fp, #-20]	; 0xffffffec
   244ec:	ldr	r3, [fp, #-16]
   244f0:	str	r3, [fp, #-8]
   244f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   244f8:	ldrb	r3, [r3, #24]
   244fc:	cmp	r3, #17
   24500:	bne	24528 <__assert_fail@plt+0x13238>
   24504:	ldr	r3, [fp, #-20]	; 0xffffffec
   24508:	ldr	r3, [r3, #20]
   2450c:	ldr	r2, [fp, #-8]
   24510:	cmp	r2, r3
   24514:	bne	24528 <__assert_fail@plt+0x13238>
   24518:	ldr	r2, [fp, #-20]	; 0xffffffec
   2451c:	ldrb	r3, [r2, #26]
   24520:	orr	r3, r3, #8
   24524:	strb	r3, [r2, #26]
   24528:	mov	r3, #0
   2452c:	mov	r0, r3
   24530:	add	sp, fp, #0
   24534:	pop	{fp}		; (ldr fp, [sp], #4)
   24538:	bx	lr
   2453c:	str	fp, [sp, #-8]!
   24540:	str	lr, [sp, #4]
   24544:	add	fp, sp, #4
   24548:	sub	sp, sp, #8
   2454c:	str	r0, [fp, #-8]
   24550:	ldr	r3, [fp, #-8]
   24554:	ldrb	r3, [r3, #4]
   24558:	cmp	r3, #6
   2455c:	bne	2458c <__assert_fail@plt+0x1329c>
   24560:	ldr	r3, [fp, #-8]
   24564:	ldrb	r3, [r3, #6]
   24568:	and	r3, r3, #4
   2456c:	uxtb	r3, r3
   24570:	cmp	r3, #0
   24574:	bne	2458c <__assert_fail@plt+0x1329c>
   24578:	ldr	r3, [fp, #-8]
   2457c:	ldr	r3, [r3]
   24580:	mov	r0, r3
   24584:	bl	24280 <__assert_fail@plt+0x12f90>
   24588:	b	245c4 <__assert_fail@plt+0x132d4>
   2458c:	ldr	r3, [fp, #-8]
   24590:	ldrb	r3, [r3, #4]
   24594:	cmp	r3, #3
   24598:	bne	245c4 <__assert_fail@plt+0x132d4>
   2459c:	ldr	r3, [fp, #-8]
   245a0:	ldrb	r3, [r3, #6]
   245a4:	and	r3, r3, #4
   245a8:	uxtb	r3, r3
   245ac:	cmp	r3, #0
   245b0:	bne	245c4 <__assert_fail@plt+0x132d4>
   245b4:	ldr	r3, [fp, #-8]
   245b8:	ldr	r3, [r3]
   245bc:	mov	r0, r3
   245c0:	bl	31b28 <__assert_fail@plt+0x20838>
   245c4:	nop	{0}
   245c8:	sub	sp, fp, #4
   245cc:	ldr	fp, [sp]
   245d0:	add	sp, sp, #4
   245d4:	pop	{pc}		; (ldr pc, [sp], #4)
   245d8:	str	fp, [sp, #-8]!
   245dc:	str	lr, [sp, #4]
   245e0:	add	fp, sp, #4
   245e4:	sub	sp, sp, #8
   245e8:	str	r0, [fp, #-8]
   245ec:	str	r1, [fp, #-12]
   245f0:	ldr	r3, [fp, #-12]
   245f4:	add	r3, r3, #20
   245f8:	mov	r0, r3
   245fc:	bl	2453c <__assert_fail@plt+0x1324c>
   24600:	mov	r3, #0
   24604:	mov	r0, r3
   24608:	sub	sp, fp, #4
   2460c:	ldr	fp, [sp]
   24610:	add	sp, sp, #4
   24614:	pop	{pc}		; (ldr pc, [sp], #4)
   24618:	str	fp, [sp, #-8]!
   2461c:	str	lr, [sp, #4]
   24620:	add	fp, sp, #4
   24624:	sub	sp, sp, #32
   24628:	str	r0, [fp, #-32]	; 0xffffffe0
   2462c:	str	r1, [fp, #-36]	; 0xffffffdc
   24630:	sub	r3, fp, #24
   24634:	str	r3, [fp, #-12]
   24638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2463c:	ldr	r3, [r3]
   24640:	str	r3, [fp, #-16]
   24644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24648:	str	r3, [fp, #-8]
   2464c:	ldr	r3, [fp, #-8]
   24650:	add	r3, r3, #20
   24654:	mov	r2, #0
   24658:	mov	r1, #0
   2465c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24660:	bl	24358 <__assert_fail@plt+0x13068>
   24664:	mov	r2, r0
   24668:	ldr	r3, [fp, #-12]
   2466c:	str	r2, [r3]
   24670:	ldr	r3, [fp, #-12]
   24674:	ldr	r3, [r3]
   24678:	cmp	r3, #0
   2467c:	bne	24688 <__assert_fail@plt+0x13398>
   24680:	mov	r3, #0
   24684:	b	24764 <__assert_fail@plt+0x13474>
   24688:	ldr	r3, [fp, #-12]
   2468c:	ldr	r3, [r3]
   24690:	ldr	r2, [fp, #-16]
   24694:	str	r2, [r3]
   24698:	ldr	r3, [fp, #-12]
   2469c:	ldr	r2, [r3]
   246a0:	ldrb	r3, [r2, #26]
   246a4:	orr	r3, r3, #4
   246a8:	strb	r3, [r2, #26]
   246ac:	ldr	r3, [fp, #-12]
   246b0:	ldr	r3, [r3]
   246b4:	str	r3, [fp, #-16]
   246b8:	ldr	r3, [fp, #-8]
   246bc:	ldr	r3, [r3, #4]
   246c0:	cmp	r3, #0
   246c4:	beq	246e4 <__assert_fail@plt+0x133f4>
   246c8:	ldr	r3, [fp, #-8]
   246cc:	ldr	r3, [r3, #4]
   246d0:	str	r3, [fp, #-8]
   246d4:	ldr	r3, [fp, #-16]
   246d8:	add	r3, r3, #4
   246dc:	str	r3, [fp, #-12]
   246e0:	b	2464c <__assert_fail@plt+0x1335c>
   246e4:	mov	r3, #0
   246e8:	str	r3, [fp, #-20]	; 0xffffffec
   246ec:	b	24724 <__assert_fail@plt+0x13434>
   246f0:	ldr	r3, [fp, #-8]
   246f4:	str	r3, [fp, #-20]	; 0xffffffec
   246f8:	ldr	r3, [fp, #-8]
   246fc:	ldr	r3, [r3]
   24700:	str	r3, [fp, #-8]
   24704:	ldr	r3, [fp, #-16]
   24708:	ldr	r3, [r3]
   2470c:	str	r3, [fp, #-16]
   24710:	ldr	r3, [fp, #-8]
   24714:	cmp	r3, #0
   24718:	bne	24724 <__assert_fail@plt+0x13434>
   2471c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24720:	b	24764 <__assert_fail@plt+0x13474>
   24724:	ldr	r3, [fp, #-8]
   24728:	ldr	r3, [r3, #8]
   2472c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24730:	cmp	r2, r3
   24734:	beq	246f0 <__assert_fail@plt+0x13400>
   24738:	ldr	r3, [fp, #-8]
   2473c:	ldr	r3, [r3, #8]
   24740:	cmp	r3, #0
   24744:	beq	246f0 <__assert_fail@plt+0x13400>
   24748:	ldr	r3, [fp, #-8]
   2474c:	ldr	r3, [r3, #8]
   24750:	str	r3, [fp, #-8]
   24754:	ldr	r3, [fp, #-16]
   24758:	add	r3, r3, #8
   2475c:	str	r3, [fp, #-12]
   24760:	b	2464c <__assert_fail@plt+0x1335c>
   24764:	mov	r0, r3
   24768:	sub	sp, fp, #4
   2476c:	ldr	fp, [sp]
   24770:	add	sp, sp, #4
   24774:	pop	{pc}		; (ldr pc, [sp], #4)
   24778:	str	fp, [sp, #-8]!
   2477c:	str	lr, [sp, #4]
   24780:	add	fp, sp, #4
   24784:	sub	sp, sp, #56	; 0x38
   24788:	str	r0, [fp, #-24]	; 0xffffffe8
   2478c:	str	r1, [fp, #-28]	; 0xffffffe4
   24790:	str	r2, [fp, #-32]	; 0xffffffe0
   24794:	str	r3, [fp, #-36]	; 0xffffffdc
   24798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2479c:	ldr	r3, [r3]
   247a0:	str	r3, [fp, #-20]	; 0xffffffec
   247a4:	ldr	r3, [fp, #4]
   247a8:	bic	r3, r3, #7
   247ac:	cmp	r3, #0
   247b0:	beq	247bc <__assert_fail@plt+0x134cc>
   247b4:	mov	r3, #2
   247b8:	b	24918 <__assert_fail@plt+0x13628>
   247bc:	ldr	r3, [fp, #4]
   247c0:	and	r3, r3, #4
   247c4:	cmp	r3, #0
   247c8:	beq	247e8 <__assert_fail@plt+0x134f8>
   247cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   247d0:	ldr	r3, [r3]
   247d4:	str	r3, [fp, #-12]
   247d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   247dc:	ldr	r3, [r3, #4]
   247e0:	str	r3, [fp, #-16]
   247e4:	b	24800 <__assert_fail@plt+0x13510>
   247e8:	mov	r3, #0
   247ec:	str	r3, [fp, #-12]
   247f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   247f4:	bl	111d0 <strlen@plt>
   247f8:	mov	r3, r0
   247fc:	str	r3, [fp, #-16]
   24800:	movw	r3, #0
   24804:	movt	r3, #0
   24808:	cmp	r3, #0
   2480c:	bne	24820 <__assert_fail@plt+0x13530>
   24810:	movw	r3, #0
   24814:	movt	r3, #0
   24818:	cmp	r3, #0
   2481c:	beq	24834 <__assert_fail@plt+0x13544>
   24820:	ldr	r3, [fp, #-20]	; 0xffffffec
   24824:	add	r3, r3, #136	; 0x88
   24828:	mov	r0, r3
   2482c:	bl	1105c <pthread_mutex_lock@plt>
   24830:	nop	{0}
   24834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24838:	ldrb	r3, [r3, #28]
   2483c:	and	r3, r3, #16
   24840:	uxtb	r3, r3
   24844:	cmp	r3, #0
   24848:	beq	24890 <__assert_fail@plt+0x135a0>
   2484c:	ldr	r3, [fp, #4]
   24850:	str	r3, [sp, #16]
   24854:	mov	r3, #0
   24858:	str	r3, [sp, #12]
   2485c:	mov	r3, #0
   24860:	str	r3, [sp, #8]
   24864:	ldr	r3, [fp, #-16]
   24868:	str	r3, [sp, #4]
   2486c:	ldr	r3, [fp, #-16]
   24870:	str	r3, [sp]
   24874:	ldr	r3, [fp, #-12]
   24878:	ldr	r2, [fp, #-16]
   2487c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24884:	bl	25510 <__assert_fail@plt+0x14220>
   24888:	str	r0, [fp, #-8]
   2488c:	b	248d0 <__assert_fail@plt+0x135e0>
   24890:	ldr	r3, [fp, #4]
   24894:	str	r3, [sp, #16]
   24898:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2489c:	str	r3, [sp, #12]
   248a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   248a4:	str	r3, [sp, #8]
   248a8:	ldr	r3, [fp, #-16]
   248ac:	str	r3, [sp, #4]
   248b0:	ldr	r3, [fp, #-16]
   248b4:	str	r3, [sp]
   248b8:	ldr	r3, [fp, #-12]
   248bc:	ldr	r2, [fp, #-16]
   248c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   248c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   248c8:	bl	25510 <__assert_fail@plt+0x14220>
   248cc:	str	r0, [fp, #-8]
   248d0:	movw	r3, #0
   248d4:	movt	r3, #0
   248d8:	cmp	r3, #0
   248dc:	bne	248f0 <__assert_fail@plt+0x13600>
   248e0:	movw	r3, #0
   248e4:	movt	r3, #0
   248e8:	cmp	r3, #0
   248ec:	beq	24904 <__assert_fail@plt+0x13614>
   248f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   248f4:	add	r3, r3, #136	; 0x88
   248f8:	mov	r0, r3
   248fc:	bl	10fc0 <pthread_mutex_unlock@plt>
   24900:	nop	{0}
   24904:	ldr	r3, [fp, #-8]
   24908:	cmp	r3, #0
   2490c:	movne	r3, #1
   24910:	moveq	r3, #0
   24914:	uxtb	r3, r3
   24918:	mov	r0, r3
   2491c:	sub	sp, fp, #4
   24920:	ldr	fp, [sp]
   24924:	add	sp, sp, #4
   24928:	pop	{pc}		; (ldr pc, [sp], #4)
   2492c:	str	fp, [sp, #-8]!
   24930:	str	lr, [sp, #4]
   24934:	add	fp, sp, #4
   24938:	sub	sp, sp, #32
   2493c:	str	r0, [fp, #-8]
   24940:	str	r1, [fp, #-12]
   24944:	str	r2, [fp, #-16]
   24948:	str	r3, [fp, #-20]	; 0xffffffec
   2494c:	mov	r3, #1
   24950:	str	r3, [sp, #12]
   24954:	ldr	r3, [fp, #4]
   24958:	str	r3, [sp, #8]
   2495c:	ldr	r3, [fp, #-16]
   24960:	str	r3, [sp, #4]
   24964:	mov	r3, #0
   24968:	str	r3, [sp]
   2496c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24970:	ldr	r2, [fp, #-16]
   24974:	ldr	r1, [fp, #-12]
   24978:	ldr	r0, [fp, #-8]
   2497c:	bl	24cb8 <__assert_fail@plt+0x139c8>
   24980:	mov	r3, r0
   24984:	mov	r0, r3
   24988:	sub	sp, fp, #4
   2498c:	ldr	fp, [sp]
   24990:	add	sp, sp, #4
   24994:	pop	{pc}		; (ldr pc, [sp], #4)
   24998:	str	fp, [sp, #-8]!
   2499c:	str	lr, [sp, #4]
   249a0:	add	fp, sp, #4
   249a4:	sub	sp, sp, #32
   249a8:	str	r0, [fp, #-8]
   249ac:	str	r1, [fp, #-12]
   249b0:	str	r2, [fp, #-16]
   249b4:	str	r3, [fp, #-20]	; 0xffffffec
   249b8:	mov	r3, #0
   249bc:	str	r3, [sp, #12]
   249c0:	ldr	r3, [fp, #8]
   249c4:	str	r3, [sp, #8]
   249c8:	ldr	r3, [fp, #-16]
   249cc:	str	r3, [sp, #4]
   249d0:	ldr	r3, [fp, #4]
   249d4:	str	r3, [sp]
   249d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   249dc:	ldr	r2, [fp, #-16]
   249e0:	ldr	r1, [fp, #-12]
   249e4:	ldr	r0, [fp, #-8]
   249e8:	bl	24cb8 <__assert_fail@plt+0x139c8>
   249ec:	mov	r3, r0
   249f0:	mov	r0, r3
   249f4:	sub	sp, fp, #4
   249f8:	ldr	fp, [sp]
   249fc:	add	sp, sp, #4
   24a00:	pop	{pc}		; (ldr pc, [sp], #4)
   24a04:	str	fp, [sp, #-8]!
   24a08:	str	lr, [sp, #4]
   24a0c:	add	fp, sp, #4
   24a10:	sub	sp, sp, #40	; 0x28
   24a14:	str	r0, [fp, #-8]
   24a18:	str	r1, [fp, #-12]
   24a1c:	str	r2, [fp, #-16]
   24a20:	str	r3, [fp, #-20]	; 0xffffffec
   24a24:	mov	r3, #1
   24a28:	str	r3, [sp, #20]
   24a2c:	ldr	r3, [fp, #16]
   24a30:	str	r3, [sp, #16]
   24a34:	ldr	r3, [fp, #12]
   24a38:	str	r3, [sp, #12]
   24a3c:	mov	r3, #0
   24a40:	str	r3, [sp, #8]
   24a44:	ldr	r3, [fp, #8]
   24a48:	str	r3, [sp, #4]
   24a4c:	ldr	r3, [fp, #4]
   24a50:	str	r3, [sp]
   24a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   24a58:	ldr	r2, [fp, #-16]
   24a5c:	ldr	r1, [fp, #-12]
   24a60:	ldr	r0, [fp, #-8]
   24a64:	bl	24afc <__assert_fail@plt+0x1380c>
   24a68:	mov	r3, r0
   24a6c:	mov	r0, r3
   24a70:	sub	sp, fp, #4
   24a74:	ldr	fp, [sp]
   24a78:	add	sp, sp, #4
   24a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   24a80:	str	fp, [sp, #-8]!
   24a84:	str	lr, [sp, #4]
   24a88:	add	fp, sp, #4
   24a8c:	sub	sp, sp, #40	; 0x28
   24a90:	str	r0, [fp, #-8]
   24a94:	str	r1, [fp, #-12]
   24a98:	str	r2, [fp, #-16]
   24a9c:	str	r3, [fp, #-20]	; 0xffffffec
   24aa0:	mov	r3, #0
   24aa4:	str	r3, [sp, #20]
   24aa8:	ldr	r3, [fp, #20]
   24aac:	str	r3, [sp, #16]
   24ab0:	ldr	r3, [fp, #16]
   24ab4:	str	r3, [sp, #12]
   24ab8:	ldr	r3, [fp, #12]
   24abc:	str	r3, [sp, #8]
   24ac0:	ldr	r3, [fp, #8]
   24ac4:	str	r3, [sp, #4]
   24ac8:	ldr	r3, [fp, #4]
   24acc:	str	r3, [sp]
   24ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   24ad4:	ldr	r2, [fp, #-16]
   24ad8:	ldr	r1, [fp, #-12]
   24adc:	ldr	r0, [fp, #-8]
   24ae0:	bl	24afc <__assert_fail@plt+0x1380c>
   24ae4:	mov	r3, r0
   24ae8:	mov	r0, r3
   24aec:	sub	sp, fp, #4
   24af0:	ldr	fp, [sp]
   24af4:	add	sp, sp, #4
   24af8:	pop	{pc}		; (ldr pc, [sp], #4)
   24afc:	str	fp, [sp, #-8]!
   24b00:	str	lr, [sp, #4]
   24b04:	add	fp, sp, #4
   24b08:	sub	sp, sp, #48	; 0x30
   24b0c:	str	r0, [fp, #-24]	; 0xffffffe8
   24b10:	str	r1, [fp, #-28]	; 0xffffffe4
   24b14:	str	r2, [fp, #-32]	; 0xffffffe0
   24b18:	str	r3, [fp, #-36]	; 0xffffffdc
   24b1c:	mov	r3, #0
   24b20:	str	r3, [fp, #-12]
   24b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b28:	lsr	r3, r3, #31
   24b2c:	uxtb	r3, r3
   24b30:	cmp	r3, #0
   24b34:	bne	24b4c <__assert_fail@plt+0x1385c>
   24b38:	ldr	r3, [fp, #4]
   24b3c:	lsr	r3, r3, #31
   24b40:	uxtb	r3, r3
   24b44:	cmp	r3, #0
   24b48:	beq	24b54 <__assert_fail@plt+0x13864>
   24b4c:	mov	r3, #1
   24b50:	b	24b58 <__assert_fail@plt+0x13868>
   24b54:	mov	r3, #0
   24b58:	cmp	r3, #0
   24b5c:	bne	24b74 <__assert_fail@plt+0x13884>
   24b60:	ldr	r3, [fp, #20]
   24b64:	lsr	r3, r3, #31
   24b68:	uxtb	r3, r3
   24b6c:	cmp	r3, #0
   24b70:	beq	24b7c <__assert_fail@plt+0x1388c>
   24b74:	mov	r3, #1
   24b78:	b	24b80 <__assert_fail@plt+0x13890>
   24b7c:	mov	r3, #0
   24b80:	cmp	r3, #0
   24b84:	bne	24bb8 <__assert_fail@plt+0x138c8>
   24b88:	mov	r1, #0
   24b8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24b90:	ldr	r3, [fp, #4]
   24b94:	adds	r3, r2, r3
   24b98:	bvc	24ba0 <__assert_fail@plt+0x138b0>
   24b9c:	mov	r1, #1
   24ba0:	str	r3, [fp, #-20]	; 0xffffffec
   24ba4:	mov	r3, r1
   24ba8:	and	r3, r3, #1
   24bac:	uxtb	r3, r3
   24bb0:	cmp	r3, #0
   24bb4:	beq	24bc0 <__assert_fail@plt+0x138d0>
   24bb8:	mvn	r3, #1
   24bbc:	b	24ca4 <__assert_fail@plt+0x139b4>
   24bc0:	ldr	r3, [fp, #4]
   24bc4:	cmp	r3, #0
   24bc8:	ble	24c58 <__assert_fail@plt+0x13968>
   24bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24bd0:	cmp	r3, #0
   24bd4:	ble	24c4c <__assert_fail@plt+0x1395c>
   24bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   24bdc:	mov	r0, r3
   24be0:	bl	3134c <__assert_fail@plt+0x2005c>
   24be4:	mov	r3, r0
   24be8:	str	r3, [fp, #-12]
   24bec:	ldr	r3, [fp, #-12]
   24bf0:	cmp	r3, #0
   24bf4:	moveq	r3, #1
   24bf8:	movne	r3, #0
   24bfc:	uxtb	r3, r3
   24c00:	cmp	r3, #0
   24c04:	beq	24c10 <__assert_fail@plt+0x13920>
   24c08:	mvn	r3, #1
   24c0c:	b	24ca4 <__assert_fail@plt+0x139b4>
   24c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c14:	mov	r2, r3
   24c18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24c1c:	ldr	r0, [fp, #-12]
   24c20:	bl	11074 <memcpy@plt>
   24c24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c28:	ldr	r2, [fp, #-12]
   24c2c:	add	r3, r2, r3
   24c30:	ldr	r2, [fp, #4]
   24c34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24c38:	mov	r0, r3
   24c3c:	bl	11074 <memcpy@plt>
   24c40:	ldr	r3, [fp, #-12]
   24c44:	str	r3, [fp, #-8]
   24c48:	b	24c60 <__assert_fail@plt+0x13970>
   24c4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c50:	str	r3, [fp, #-8]
   24c54:	b	24c60 <__assert_fail@plt+0x13970>
   24c58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24c5c:	str	r3, [fp, #-8]
   24c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   24c64:	ldrb	r3, [fp, #24]
   24c68:	str	r3, [sp, #12]
   24c6c:	ldr	r3, [fp, #16]
   24c70:	str	r3, [sp, #8]
   24c74:	ldr	r3, [fp, #20]
   24c78:	str	r3, [sp, #4]
   24c7c:	ldr	r3, [fp, #12]
   24c80:	str	r3, [sp]
   24c84:	ldr	r3, [fp, #8]
   24c88:	ldr	r1, [fp, #-8]
   24c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24c90:	bl	24cb8 <__assert_fail@plt+0x139c8>
   24c94:	str	r0, [fp, #-16]
   24c98:	ldr	r0, [fp, #-12]
   24c9c:	bl	31b28 <__assert_fail@plt+0x20838>
   24ca0:	ldr	r3, [fp, #-16]
   24ca4:	mov	r0, r3
   24ca8:	sub	sp, fp, #4
   24cac:	ldr	fp, [sp]
   24cb0:	add	sp, sp, #4
   24cb4:	pop	{pc}		; (ldr pc, [sp], #4)
   24cb8:	str	fp, [sp, #-8]!
   24cbc:	str	lr, [sp, #4]
   24cc0:	add	fp, sp, #4
   24cc4:	sub	sp, sp, #72	; 0x48
   24cc8:	str	r0, [fp, #-40]	; 0xffffffd8
   24ccc:	str	r1, [fp, #-44]	; 0xffffffd4
   24cd0:	str	r2, [fp, #-48]	; 0xffffffd0
   24cd4:	str	r3, [fp, #-52]	; 0xffffffcc
   24cd8:	mov	r3, #0
   24cdc:	str	r3, [fp, #-20]	; 0xffffffec
   24ce0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ce4:	ldr	r3, [r3]
   24ce8:	str	r3, [fp, #-24]	; 0xffffffe8
   24cec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24cf0:	ldr	r3, [fp, #4]
   24cf4:	add	r3, r2, r3
   24cf8:	str	r3, [fp, #-16]
   24cfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24d00:	lsr	r3, r3, #31
   24d04:	uxtb	r3, r3
   24d08:	cmp	r3, #0
   24d0c:	bne	24d30 <__assert_fail@plt+0x13a40>
   24d10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24d14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24d18:	cmp	r2, r3
   24d1c:	movgt	r3, #1
   24d20:	movle	r3, #0
   24d24:	uxtb	r3, r3
   24d28:	cmp	r3, #0
   24d2c:	beq	24d38 <__assert_fail@plt+0x13a48>
   24d30:	mvn	r3, #0
   24d34:	b	25164 <__assert_fail@plt+0x13e74>
   24d38:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24d3c:	ldr	r3, [fp, #-16]
   24d40:	cmp	r2, r3
   24d44:	movlt	r3, #1
   24d48:	movge	r3, #0
   24d4c:	uxtb	r3, r3
   24d50:	cmp	r3, #0
   24d54:	bne	24da4 <__assert_fail@plt+0x13ab4>
   24d58:	ldr	r3, [fp, #4]
   24d5c:	mvn	r3, r3
   24d60:	lsr	r3, r3, #31
   24d64:	uxtb	r3, r3
   24d68:	cmp	r3, #0
   24d6c:	beq	24d98 <__assert_fail@plt+0x13aa8>
   24d70:	ldr	r2, [fp, #-16]
   24d74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24d78:	cmp	r2, r3
   24d7c:	movlt	r3, #1
   24d80:	movge	r3, #0
   24d84:	uxtb	r3, r3
   24d88:	cmp	r3, #0
   24d8c:	beq	24d98 <__assert_fail@plt+0x13aa8>
   24d90:	mov	r3, #1
   24d94:	b	24d9c <__assert_fail@plt+0x13aac>
   24d98:	mov	r3, #0
   24d9c:	cmp	r3, #0
   24da0:	beq	24db0 <__assert_fail@plt+0x13ac0>
   24da4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24da8:	str	r3, [fp, #-16]
   24dac:	b	24e14 <__assert_fail@plt+0x13b24>
   24db0:	ldr	r3, [fp, #-16]
   24db4:	lsr	r3, r3, #31
   24db8:	uxtb	r3, r3
   24dbc:	cmp	r3, #0
   24dc0:	bne	24e0c <__assert_fail@plt+0x13b1c>
   24dc4:	ldr	r3, [fp, #4]
   24dc8:	lsr	r3, r3, #31
   24dcc:	uxtb	r3, r3
   24dd0:	cmp	r3, #0
   24dd4:	beq	24e00 <__assert_fail@plt+0x13b10>
   24dd8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24ddc:	ldr	r3, [fp, #-16]
   24de0:	cmp	r2, r3
   24de4:	movle	r3, #1
   24de8:	movgt	r3, #0
   24dec:	uxtb	r3, r3
   24df0:	cmp	r3, #0
   24df4:	beq	24e00 <__assert_fail@plt+0x13b10>
   24df8:	mov	r3, #1
   24dfc:	b	24e04 <__assert_fail@plt+0x13b14>
   24e00:	mov	r3, #0
   24e04:	cmp	r3, #0
   24e08:	beq	24e14 <__assert_fail@plt+0x13b24>
   24e0c:	mov	r3, #0
   24e10:	str	r3, [fp, #-16]
   24e14:	movw	r3, #0
   24e18:	movt	r3, #0
   24e1c:	cmp	r3, #0
   24e20:	bne	24e34 <__assert_fail@plt+0x13b44>
   24e24:	movw	r3, #0
   24e28:	movt	r3, #0
   24e2c:	cmp	r3, #0
   24e30:	beq	24e48 <__assert_fail@plt+0x13b58>
   24e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24e38:	add	r3, r3, #136	; 0x88
   24e3c:	mov	r0, r3
   24e40:	bl	1105c <pthread_mutex_lock@plt>
   24e44:	nop	{0}
   24e48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24e4c:	ldrb	r3, [r3, #28]
   24e50:	lsr	r3, r3, #5
   24e54:	uxtb	r3, r3
   24e58:	and	r3, r3, #1
   24e5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24e60:	orr	r3, r2, r3
   24e64:	str	r3, [fp, #-20]	; 0xffffffec
   24e68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24e6c:	ldrb	r3, [r3, #28]
   24e70:	lsr	r3, r3, #5
   24e74:	uxtb	r3, r3
   24e78:	and	r3, r3, #2
   24e7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24e80:	orr	r3, r2, r3
   24e84:	str	r3, [fp, #-20]	; 0xffffffec
   24e88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24e8c:	ldr	r3, [fp, #-16]
   24e90:	cmp	r2, r3
   24e94:	bge	24ec8 <__assert_fail@plt+0x13bd8>
   24e98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24e9c:	ldr	r3, [r3, #16]
   24ea0:	cmp	r3, #0
   24ea4:	beq	24ec8 <__assert_fail@plt+0x13bd8>
   24ea8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24eac:	ldrb	r3, [r3, #28]
   24eb0:	and	r3, r3, #8
   24eb4:	uxtb	r3, r3
   24eb8:	cmp	r3, #0
   24ebc:	bne	24ec8 <__assert_fail@plt+0x13bd8>
   24ec0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24ec4:	bl	1b5e4 <__assert_fail@plt+0xa2f4>
   24ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ecc:	ldrb	r3, [r3, #28]
   24ed0:	ubfx	r3, r3, #4, #1
   24ed4:	uxtb	r3, r3
   24ed8:	cmp	r3, #0
   24edc:	beq	24ee8 <__assert_fail@plt+0x13bf8>
   24ee0:	mov	r3, #0
   24ee4:	str	r3, [fp, #12]
   24ee8:	ldr	r3, [fp, #12]
   24eec:	cmp	r3, #0
   24ef0:	bne	24f00 <__assert_fail@plt+0x13c10>
   24ef4:	mov	r3, #1
   24ef8:	str	r3, [fp, #-8]
   24efc:	b	24f9c <__assert_fail@plt+0x13cac>
   24f00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24f04:	ldrb	r3, [r3, #28]
   24f08:	and	r3, r3, #6
   24f0c:	uxtb	r3, r3
   24f10:	cmp	r3, #4
   24f14:	moveq	r3, #1
   24f18:	movne	r3, #0
   24f1c:	uxtb	r3, r3
   24f20:	cmp	r3, #0
   24f24:	beq	24f8c <__assert_fail@plt+0x13c9c>
   24f28:	ldr	r3, [fp, #12]
   24f2c:	ldr	r2, [r3]
   24f30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24f34:	ldr	r3, [r3, #24]
   24f38:	cmp	r2, r3
   24f3c:	movls	r3, #1
   24f40:	movhi	r3, #0
   24f44:	uxtb	r3, r3
   24f48:	cmp	r3, #0
   24f4c:	beq	24f8c <__assert_fail@plt+0x13c9c>
   24f50:	ldr	r3, [fp, #12]
   24f54:	ldr	r3, [r3]
   24f58:	str	r3, [fp, #-8]
   24f5c:	ldr	r3, [fp, #-8]
   24f60:	cmp	r3, #0
   24f64:	movle	r3, #1
   24f68:	movgt	r3, #0
   24f6c:	uxtb	r3, r3
   24f70:	cmp	r3, #0
   24f74:	beq	24f9c <__assert_fail@plt+0x13cac>
   24f78:	mov	r3, #0
   24f7c:	str	r3, [fp, #12]
   24f80:	mov	r3, #1
   24f84:	str	r3, [fp, #-8]
   24f88:	b	24f9c <__assert_fail@plt+0x13cac>
   24f8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24f90:	ldr	r3, [r3, #24]
   24f94:	add	r3, r3, #1
   24f98:	str	r3, [fp, #-8]
   24f9c:	ldr	r3, [fp, #-8]
   24fa0:	lsl	r3, r3, #3
   24fa4:	mov	r0, r3
   24fa8:	bl	3134c <__assert_fail@plt+0x2005c>
   24fac:	mov	r3, r0
   24fb0:	str	r3, [fp, #-28]	; 0xffffffe4
   24fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24fb8:	cmp	r3, #0
   24fbc:	moveq	r3, #1
   24fc0:	movne	r3, #0
   24fc4:	uxtb	r3, r3
   24fc8:	cmp	r3, #0
   24fcc:	beq	24fdc <__assert_fail@plt+0x13cec>
   24fd0:	mvn	r3, #1
   24fd4:	str	r3, [fp, #-12]
   24fd8:	b	2512c <__assert_fail@plt+0x13e3c>
   24fdc:	ldr	r3, [fp, #-8]
   24fe0:	ldr	r2, [fp, #-20]	; 0xffffffec
   24fe4:	str	r2, [sp, #16]
   24fe8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24fec:	str	r2, [sp, #12]
   24ff0:	str	r3, [sp, #8]
   24ff4:	ldr	r3, [fp, #8]
   24ff8:	str	r3, [sp, #4]
   24ffc:	ldr	r3, [fp, #-16]
   25000:	str	r3, [sp]
   25004:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25008:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2500c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25010:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25014:	bl	25510 <__assert_fail@plt+0x14220>
   25018:	str	r0, [fp, #-32]	; 0xffffffe0
   2501c:	mov	r3, #0
   25020:	str	r3, [fp, #-12]
   25024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25028:	cmp	r3, #0
   2502c:	beq	25050 <__assert_fail@plt+0x13d60>
   25030:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25034:	cmp	r3, #1
   25038:	bne	25044 <__assert_fail@plt+0x13d54>
   2503c:	mvn	r3, #0
   25040:	b	25048 <__assert_fail@plt+0x13d58>
   25044:	mvn	r3, #1
   25048:	str	r3, [fp, #-12]
   2504c:	b	250c8 <__assert_fail@plt+0x13dd8>
   25050:	ldr	r3, [fp, #12]
   25054:	cmp	r3, #0
   25058:	beq	250c8 <__assert_fail@plt+0x13dd8>
   2505c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25060:	ldrb	r3, [r3, #28]
   25064:	ubfx	r3, r3, #1, #2
   25068:	uxtb	r3, r3
   2506c:	ldr	r2, [fp, #-8]
   25070:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25074:	ldr	r0, [fp, #12]
   25078:	bl	25178 <__assert_fail@plt+0x13e88>
   2507c:	mov	r3, r0
   25080:	and	r3, r3, #3
   25084:	uxtb	r1, r3
   25088:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2508c:	ldrb	r3, [r2, #28]
   25090:	bfi	r3, r1, #1, #2
   25094:	strb	r3, [r2, #28]
   25098:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2509c:	ldrb	r3, [r3, #28]
   250a0:	and	r3, r3, #6
   250a4:	uxtb	r3, r3
   250a8:	cmp	r3, #0
   250ac:	moveq	r3, #1
   250b0:	movne	r3, #0
   250b4:	uxtb	r3, r3
   250b8:	cmp	r3, #0
   250bc:	beq	250c8 <__assert_fail@plt+0x13dd8>
   250c0:	mvn	r3, #1
   250c4:	str	r3, [fp, #-12]
   250c8:	ldr	r3, [fp, #-12]
   250cc:	cmp	r3, #0
   250d0:	moveq	r3, #1
   250d4:	movne	r3, #0
   250d8:	uxtb	r3, r3
   250dc:	cmp	r3, #0
   250e0:	beq	25124 <__assert_fail@plt+0x13e34>
   250e4:	ldrb	r3, [fp, #16]
   250e8:	cmp	r3, #0
   250ec:	beq	25118 <__assert_fail@plt+0x13e28>
   250f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   250f4:	ldr	r3, [r3]
   250f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   250fc:	cmp	r2, r3
   25100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25104:	ldr	r2, [r3, #4]
   25108:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2510c:	sub	r3, r2, r3
   25110:	str	r3, [fp, #-12]
   25114:	b	25124 <__assert_fail@plt+0x13e34>
   25118:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2511c:	ldr	r3, [r3]
   25120:	str	r3, [fp, #-12]
   25124:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25128:	bl	31b28 <__assert_fail@plt+0x20838>
   2512c:	movw	r3, #0
   25130:	movt	r3, #0
   25134:	cmp	r3, #0
   25138:	bne	2514c <__assert_fail@plt+0x13e5c>
   2513c:	movw	r3, #0
   25140:	movt	r3, #0
   25144:	cmp	r3, #0
   25148:	beq	25160 <__assert_fail@plt+0x13e70>
   2514c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25150:	add	r3, r3, #136	; 0x88
   25154:	mov	r0, r3
   25158:	bl	10fc0 <pthread_mutex_unlock@plt>
   2515c:	nop	{0}
   25160:	ldr	r3, [fp, #-12]
   25164:	mov	r0, r3
   25168:	sub	sp, fp, #4
   2516c:	ldr	fp, [sp]
   25170:	add	sp, sp, #4
   25174:	pop	{pc}		; (ldr pc, [sp], #4)
   25178:	str	fp, [sp, #-8]!
   2517c:	str	lr, [sp, #4]
   25180:	add	fp, sp, #4
   25184:	sub	sp, sp, #40	; 0x28
   25188:	str	r0, [fp, #-32]	; 0xffffffe0
   2518c:	str	r1, [fp, #-36]	; 0xffffffdc
   25190:	str	r2, [fp, #-40]	; 0xffffffd8
   25194:	str	r3, [fp, #-44]	; 0xffffffd4
   25198:	mov	r3, #1
   2519c:	str	r3, [fp, #-8]
   251a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   251a4:	add	r3, r3, #1
   251a8:	str	r3, [fp, #-16]
   251ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   251b0:	cmp	r3, #0
   251b4:	bne	25268 <__assert_fail@plt+0x13f78>
   251b8:	ldr	r3, [fp, #-16]
   251bc:	lsl	r3, r3, #2
   251c0:	mov	r0, r3
   251c4:	bl	3134c <__assert_fail@plt+0x2005c>
   251c8:	mov	r3, r0
   251cc:	mov	r2, r3
   251d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   251d4:	str	r2, [r3, #4]
   251d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   251dc:	ldr	r3, [r3, #4]
   251e0:	cmp	r3, #0
   251e4:	moveq	r3, #1
   251e8:	movne	r3, #0
   251ec:	uxtb	r3, r3
   251f0:	cmp	r3, #0
   251f4:	beq	25200 <__assert_fail@plt+0x13f10>
   251f8:	mov	r3, #0
   251fc:	b	25450 <__assert_fail@plt+0x14160>
   25200:	ldr	r3, [fp, #-16]
   25204:	lsl	r3, r3, #2
   25208:	mov	r0, r3
   2520c:	bl	3134c <__assert_fail@plt+0x2005c>
   25210:	mov	r3, r0
   25214:	mov	r2, r3
   25218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2521c:	str	r2, [r3, #8]
   25220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25224:	ldr	r3, [r3, #8]
   25228:	cmp	r3, #0
   2522c:	moveq	r3, #1
   25230:	movne	r3, #0
   25234:	uxtb	r3, r3
   25238:	cmp	r3, #0
   2523c:	beq	25258 <__assert_fail@plt+0x13f68>
   25240:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25244:	ldr	r3, [r3, #4]
   25248:	mov	r0, r3
   2524c:	bl	31b28 <__assert_fail@plt+0x20838>
   25250:	mov	r3, #0
   25254:	b	25450 <__assert_fail@plt+0x14160>
   25258:	ldr	r2, [fp, #-16]
   2525c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25260:	str	r2, [r3]
   25264:	b	25370 <__assert_fail@plt+0x14080>
   25268:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2526c:	cmp	r3, #1
   25270:	bne	25350 <__assert_fail@plt+0x14060>
   25274:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25278:	ldr	r2, [r3]
   2527c:	ldr	r3, [fp, #-16]
   25280:	cmp	r2, r3
   25284:	movcc	r3, #1
   25288:	movcs	r3, #0
   2528c:	uxtb	r3, r3
   25290:	cmp	r3, #0
   25294:	beq	25370 <__assert_fail@plt+0x14080>
   25298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2529c:	ldr	r2, [r3, #4]
   252a0:	ldr	r3, [fp, #-16]
   252a4:	lsl	r3, r3, #2
   252a8:	mov	r1, r3
   252ac:	mov	r0, r2
   252b0:	bl	313dc <__assert_fail@plt+0x200ec>
   252b4:	str	r0, [fp, #-20]	; 0xffffffec
   252b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   252bc:	cmp	r3, #0
   252c0:	moveq	r3, #1
   252c4:	movne	r3, #0
   252c8:	uxtb	r3, r3
   252cc:	cmp	r3, #0
   252d0:	beq	252dc <__assert_fail@plt+0x13fec>
   252d4:	mov	r3, #0
   252d8:	b	25450 <__assert_fail@plt+0x14160>
   252dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   252e0:	ldr	r2, [r3, #8]
   252e4:	ldr	r3, [fp, #-16]
   252e8:	lsl	r3, r3, #2
   252ec:	mov	r1, r3
   252f0:	mov	r0, r2
   252f4:	bl	313dc <__assert_fail@plt+0x200ec>
   252f8:	str	r0, [fp, #-24]	; 0xffffffe8
   252fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25300:	cmp	r3, #0
   25304:	moveq	r3, #1
   25308:	movne	r3, #0
   2530c:	uxtb	r3, r3
   25310:	cmp	r3, #0
   25314:	beq	25328 <__assert_fail@plt+0x14038>
   25318:	ldr	r0, [fp, #-20]	; 0xffffffec
   2531c:	bl	31b28 <__assert_fail@plt+0x20838>
   25320:	mov	r3, #0
   25324:	b	25450 <__assert_fail@plt+0x14160>
   25328:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2532c:	ldr	r2, [fp, #-20]	; 0xffffffec
   25330:	str	r2, [r3, #4]
   25334:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25338:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2533c:	str	r2, [r3, #8]
   25340:	ldr	r2, [fp, #-16]
   25344:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25348:	str	r2, [r3]
   2534c:	b	25370 <__assert_fail@plt+0x14080>
   25350:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25354:	cmp	r3, #2
   25358:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2535c:	ldr	r2, [r3]
   25360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25364:	cmp	r2, r3
   25368:	mov	r3, #2
   2536c:	str	r3, [fp, #-8]
   25370:	mov	r3, #0
   25374:	str	r3, [fp, #-12]
   25378:	b	253e0 <__assert_fail@plt+0x140f0>
   2537c:	ldr	r3, [fp, #-12]
   25380:	lsl	r3, r3, #3
   25384:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25388:	add	r2, r2, r3
   2538c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25390:	ldr	r1, [r3, #4]
   25394:	ldr	r3, [fp, #-12]
   25398:	lsl	r3, r3, #2
   2539c:	add	r3, r1, r3
   253a0:	ldr	r2, [r2]
   253a4:	str	r2, [r3]
   253a8:	ldr	r3, [fp, #-12]
   253ac:	lsl	r3, r3, #3
   253b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   253b4:	add	r2, r2, r3
   253b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253bc:	ldr	r1, [r3, #8]
   253c0:	ldr	r3, [fp, #-12]
   253c4:	lsl	r3, r3, #2
   253c8:	add	r3, r1, r3
   253cc:	ldr	r2, [r2, #4]
   253d0:	str	r2, [r3]
   253d4:	ldr	r3, [fp, #-12]
   253d8:	add	r3, r3, #1
   253dc:	str	r3, [fp, #-12]
   253e0:	ldr	r2, [fp, #-12]
   253e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   253e8:	cmp	r2, r3
   253ec:	blt	2537c <__assert_fail@plt+0x1408c>
   253f0:	b	25438 <__assert_fail@plt+0x14148>
   253f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253f8:	ldr	r2, [r3, #8]
   253fc:	ldr	r3, [fp, #-12]
   25400:	lsl	r3, r3, #2
   25404:	add	r3, r2, r3
   25408:	mvn	r2, #0
   2540c:	str	r2, [r3]
   25410:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25414:	ldr	r1, [r2, #4]
   25418:	ldr	r2, [fp, #-12]
   2541c:	lsl	r2, r2, #2
   25420:	add	r2, r1, r2
   25424:	ldr	r3, [r3]
   25428:	str	r3, [r2]
   2542c:	ldr	r3, [fp, #-12]
   25430:	add	r3, r3, #1
   25434:	str	r3, [fp, #-12]
   25438:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2543c:	ldr	r2, [r3]
   25440:	ldr	r3, [fp, #-12]
   25444:	cmp	r2, r3
   25448:	bhi	253f4 <__assert_fail@plt+0x14104>
   2544c:	ldr	r3, [fp, #-8]
   25450:	mov	r0, r3
   25454:	sub	sp, fp, #4
   25458:	ldr	fp, [sp]
   2545c:	add	sp, sp, #4
   25460:	pop	{pc}		; (ldr pc, [sp], #4)
   25464:	push	{fp}		; (str fp, [sp, #-4]!)
   25468:	add	fp, sp, #0
   2546c:	sub	sp, sp, #20
   25470:	str	r0, [fp, #-8]
   25474:	str	r1, [fp, #-12]
   25478:	str	r2, [fp, #-16]
   2547c:	str	r3, [fp, #-20]	; 0xffffffec
   25480:	ldr	r3, [fp, #-16]
   25484:	cmp	r3, #0
   25488:	beq	254c8 <__assert_fail@plt+0x141d8>
   2548c:	ldr	r2, [fp, #-8]
   25490:	ldrb	r3, [r2, #28]
   25494:	mov	r1, #1
   25498:	bfi	r3, r1, #1, #2
   2549c:	strb	r3, [r2, #28]
   254a0:	ldr	r3, [fp, #-12]
   254a4:	ldr	r2, [fp, #-16]
   254a8:	str	r2, [r3]
   254ac:	ldr	r3, [fp, #-12]
   254b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   254b4:	str	r2, [r3, #4]
   254b8:	ldr	r3, [fp, #-12]
   254bc:	ldr	r2, [fp, #4]
   254c0:	str	r2, [r3, #8]
   254c4:	b	25500 <__assert_fail@plt+0x14210>
   254c8:	ldr	r2, [fp, #-8]
   254cc:	ldrb	r3, [r2, #28]
   254d0:	bfc	r3, #1, #2
   254d4:	strb	r3, [r2, #28]
   254d8:	ldr	r3, [fp, #-12]
   254dc:	mov	r2, #0
   254e0:	str	r2, [r3]
   254e4:	ldr	r3, [fp, #-12]
   254e8:	mov	r2, #0
   254ec:	str	r2, [r3, #8]
   254f0:	ldr	r3, [fp, #-12]
   254f4:	ldr	r2, [r3, #8]
   254f8:	ldr	r3, [fp, #-12]
   254fc:	str	r2, [r3, #4]
   25500:	nop	{0}
   25504:	add	sp, fp, #0
   25508:	pop	{fp}		; (ldr fp, [sp], #4)
   2550c:	bx	lr
   25510:	str	fp, [sp, #-8]!
   25514:	str	lr, [sp, #4]
   25518:	add	fp, sp, #4
   2551c:	sub	sp, sp, #240	; 0xf0
   25520:	str	r0, [fp, #-216]	; 0xffffff28
   25524:	str	r1, [fp, #-220]	; 0xffffff24
   25528:	str	r2, [fp, #-224]	; 0xffffff20
   2552c:	str	r3, [fp, #-228]	; 0xffffff1c
   25530:	ldr	r3, [fp, #-216]	; 0xffffff28
   25534:	ldr	r3, [r3]
   25538:	str	r3, [fp, #-20]	; 0xffffffec
   2553c:	mvn	r3, #0
   25540:	str	r3, [fp, #-24]	; 0xffffffe8
   25544:	sub	r3, fp, #208	; 0xd0
   25548:	mov	r2, #136	; 0x88
   2554c:	mov	r1, #0
   25550:	mov	r0, r3
   25554:	bl	11218 <memset@plt>
   25558:	ldr	r3, [fp, #-20]	; 0xffffffec
   2555c:	str	r3, [fp, #-124]	; 0xffffff84
   25560:	ldr	r3, [fp, #-216]	; 0xffffff28
   25564:	ldr	r3, [r3, #16]
   25568:	cmp	r3, #0
   2556c:	beq	255bc <__assert_fail@plt+0x142cc>
   25570:	ldr	r3, [fp, #-216]	; 0xffffff28
   25574:	ldrb	r3, [r3, #28]
   25578:	and	r3, r3, #8
   2557c:	uxtb	r3, r3
   25580:	cmp	r3, #0
   25584:	beq	255bc <__assert_fail@plt+0x142cc>
   25588:	ldr	r2, [fp, #-228]	; 0xffffff1c
   2558c:	ldr	r3, [fp, #4]
   25590:	cmp	r2, r3
   25594:	beq	255bc <__assert_fail@plt+0x142cc>
   25598:	ldr	r3, [fp, #-216]	; 0xffffff28
   2559c:	ldrb	r3, [r3, #28]
   255a0:	and	r3, r3, #1
   255a4:	uxtb	r3, r3
   255a8:	cmp	r3, #0
   255ac:	bne	255bc <__assert_fail@plt+0x142cc>
   255b0:	ldr	r3, [fp, #-216]	; 0xffffff28
   255b4:	ldr	r3, [r3, #16]
   255b8:	b	255c0 <__assert_fail@plt+0x142d0>
   255bc:	mov	r3, #0
   255c0:	str	r3, [fp, #-28]	; 0xffffffe4
   255c4:	ldr	r3, [fp, #-216]	; 0xffffff28
   255c8:	ldr	r3, [r3, #20]
   255cc:	str	r3, [fp, #-32]	; 0xffffffe0
   255d0:	ldr	r3, [fp, #-216]	; 0xffffff28
   255d4:	ldr	r3, [r3, #24]
   255d8:	ldr	r2, [fp, #12]
   255dc:	cmp	r2, r3
   255e0:	bls	255fc <__assert_fail@plt+0x1430c>
   255e4:	ldr	r3, [fp, #-216]	; 0xffffff28
   255e8:	ldr	r3, [r3, #24]
   255ec:	ldr	r2, [fp, #12]
   255f0:	sub	r3, r2, r3
   255f4:	sub	r3, r3, #1
   255f8:	b	25600 <__assert_fail@plt+0x14310>
   255fc:	mov	r3, #0
   25600:	str	r3, [fp, #-36]	; 0xffffffdc
   25604:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25608:	ldr	r2, [fp, #12]
   2560c:	sub	r3, r2, r3
   25610:	str	r3, [fp, #12]
   25614:	ldr	r3, [fp, #-216]	; 0xffffff28
   25618:	ldr	r3, [r3, #8]
   2561c:	cmp	r3, #0
   25620:	moveq	r3, #1
   25624:	movne	r3, #0
   25628:	uxtb	r3, r3
   2562c:	cmp	r3, #0
   25630:	bne	25654 <__assert_fail@plt+0x14364>
   25634:	ldr	r3, [fp, #-20]	; 0xffffffec
   25638:	ldr	r3, [r3, #36]	; 0x24
   2563c:	cmp	r3, #0
   25640:	moveq	r3, #1
   25644:	movne	r3, #0
   25648:	uxtb	r3, r3
   2564c:	cmp	r3, #0
   25650:	beq	2565c <__assert_fail@plt+0x1436c>
   25654:	mov	r3, #1
   25658:	b	25660 <__assert_fail@plt+0x14370>
   2565c:	mov	r3, #0
   25660:	cmp	r3, #0
   25664:	bne	25688 <__assert_fail@plt+0x14398>
   25668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2566c:	ldr	r3, [r3, #40]	; 0x28
   25670:	cmp	r3, #0
   25674:	moveq	r3, #1
   25678:	movne	r3, #0
   2567c:	uxtb	r3, r3
   25680:	cmp	r3, #0
   25684:	beq	25690 <__assert_fail@plt+0x143a0>
   25688:	mov	r3, #1
   2568c:	b	25694 <__assert_fail@plt+0x143a4>
   25690:	mov	r3, #0
   25694:	cmp	r3, #0
   25698:	bne	256bc <__assert_fail@plt+0x143cc>
   2569c:	ldr	r3, [fp, #-20]	; 0xffffffec
   256a0:	ldr	r3, [r3, #44]	; 0x2c
   256a4:	cmp	r3, #0
   256a8:	moveq	r3, #1
   256ac:	movne	r3, #0
   256b0:	uxtb	r3, r3
   256b4:	cmp	r3, #0
   256b8:	beq	256c4 <__assert_fail@plt+0x143d4>
   256bc:	mov	r3, #1
   256c0:	b	256c8 <__assert_fail@plt+0x143d8>
   256c4:	mov	r3, #0
   256c8:	cmp	r3, #0
   256cc:	bne	256f0 <__assert_fail@plt+0x14400>
   256d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   256d4:	ldr	r3, [r3, #48]	; 0x30
   256d8:	cmp	r3, #0
   256dc:	moveq	r3, #1
   256e0:	movne	r3, #0
   256e4:	uxtb	r3, r3
   256e8:	cmp	r3, #0
   256ec:	beq	256f8 <__assert_fail@plt+0x14408>
   256f0:	mov	r3, #1
   256f4:	b	26438 <__assert_fail@plt+0x15148>
   256f8:	ldr	r3, [fp, #4]
   256fc:	cmp	r3, #0
   25700:	blt	25714 <__assert_fail@plt+0x14424>
   25704:	ldr	r2, [fp, #4]
   25708:	ldr	r3, [fp, #-224]	; 0xffffff20
   2570c:	cmp	r2, r3
   25710:	ble	25714 <__assert_fail@plt+0x14424>
   25714:	ldr	r3, [fp, #-20]	; 0xffffffec
   25718:	ldr	r3, [r3, #36]	; 0x24
   2571c:	ldr	r3, [r3, #8]
   25720:	cmp	r3, #0
   25724:	bne	25798 <__assert_fail@plt+0x144a8>
   25728:	ldr	r3, [fp, #-20]	; 0xffffffec
   2572c:	ldr	r3, [r3, #40]	; 0x28
   25730:	ldr	r3, [r3, #8]
   25734:	cmp	r3, #0
   25738:	bne	25798 <__assert_fail@plt+0x144a8>
   2573c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25740:	ldr	r3, [r3, #44]	; 0x2c
   25744:	ldr	r3, [r3, #8]
   25748:	cmp	r3, #0
   2574c:	beq	25768 <__assert_fail@plt+0x14478>
   25750:	ldr	r3, [fp, #-216]	; 0xffffff28
   25754:	ldrb	r3, [r3, #28]
   25758:	bic	r3, r3, #127	; 0x7f
   2575c:	uxtb	r3, r3
   25760:	cmp	r3, #0
   25764:	bne	25798 <__assert_fail@plt+0x144a8>
   25768:	ldr	r3, [fp, #-228]	; 0xffffff1c
   2576c:	cmp	r3, #0
   25770:	beq	25788 <__assert_fail@plt+0x14498>
   25774:	ldr	r3, [fp, #4]
   25778:	cmp	r3, #0
   2577c:	beq	25788 <__assert_fail@plt+0x14498>
   25780:	mov	r3, #1
   25784:	b	26438 <__assert_fail@plt+0x15148>
   25788:	mov	r3, #0
   2578c:	str	r3, [fp, #4]
   25790:	ldr	r3, [fp, #4]
   25794:	str	r3, [fp, #-228]	; 0xffffff1c
   25798:	ldr	r3, [fp, #12]
   2579c:	cmp	r3, #0
   257a0:	bne	257b4 <__assert_fail@plt+0x144c4>
   257a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   257a8:	ldr	r3, [r3, #76]	; 0x4c
   257ac:	cmp	r3, #0
   257b0:	beq	257bc <__assert_fail@plt+0x144cc>
   257b4:	mov	r3, #1
   257b8:	b	257c0 <__assert_fail@plt+0x144d0>
   257bc:	mov	r3, #0
   257c0:	strb	r3, [fp, #-37]	; 0xffffffdb
   257c4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   257c8:	and	r3, r3, #1
   257cc:	strb	r3, [fp, #-37]	; 0xffffffdb
   257d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   257d4:	ldr	r3, [r3, #8]
   257d8:	add	r3, r3, #1
   257dc:	mov	ip, r3
   257e0:	ldr	r3, [fp, #-216]	; 0xffffff28
   257e4:	ldr	r3, [r3, #20]
   257e8:	ldr	r2, [fp, #-216]	; 0xffffff28
   257ec:	ldr	r2, [r2, #12]
   257f0:	and	r2, r2, #4194304	; 0x400000
   257f4:	cmp	r2, #0
   257f8:	movne	r2, #1
   257fc:	moveq	r2, #0
   25800:	uxtb	r2, r2
   25804:	sub	r0, fp, #208	; 0xd0
   25808:	ldr	r1, [fp, #-20]	; 0xffffffec
   2580c:	str	r1, [sp, #8]
   25810:	str	r2, [sp, #4]
   25814:	str	r3, [sp]
   25818:	mov	r3, ip
   2581c:	ldr	r2, [fp, #-224]	; 0xffffff20
   25820:	ldr	r1, [fp, #-220]	; 0xffffff24
   25824:	bl	16438 <__assert_fail@plt+0x5148>
   25828:	str	r0, [fp, #-8]
   2582c:	ldr	r3, [fp, #-8]
   25830:	cmp	r3, #0
   25834:	movne	r3, #1
   25838:	moveq	r3, #0
   2583c:	uxtb	r3, r3
   25840:	cmp	r3, #0
   25844:	bne	263c4 <__assert_fail@plt+0x150d4>
   25848:	ldr	r3, [fp, #8]
   2584c:	str	r3, [fp, #-152]	; 0xffffff68
   25850:	ldr	r3, [fp, #8]
   25854:	str	r3, [fp, #-156]	; 0xffffff64
   25858:	ldr	r3, [fp, #-216]	; 0xffffff28
   2585c:	ldrb	r3, [r3, #28]
   25860:	ubfx	r3, r3, #7, #1
   25864:	uxtb	r3, r3
   25868:	strb	r3, [fp, #-131]	; 0xffffff7d
   2586c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25870:	ldr	r3, [r3, #76]	; 0x4c
   25874:	lsl	r2, r3, #1
   25878:	sub	r3, fp, #208	; 0xd0
   2587c:	ldr	r1, [fp, #20]
   25880:	mov	r0, r3
   25884:	bl	2ec74 <__assert_fail@plt+0x1d984>
   25888:	str	r0, [fp, #-8]
   2588c:	ldr	r3, [fp, #-8]
   25890:	cmp	r3, #0
   25894:	movne	r3, #1
   25898:	moveq	r3, #0
   2589c:	uxtb	r3, r3
   258a0:	cmp	r3, #0
   258a4:	bne	263cc <__assert_fail@plt+0x150dc>
   258a8:	ldr	r3, [fp, #12]
   258ac:	cmp	r3, #1
   258b0:	bhi	258cc <__assert_fail@plt+0x145dc>
   258b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   258b8:	ldrb	r3, [r3, #88]	; 0x58
   258bc:	and	r3, r3, #2
   258c0:	uxtb	r3, r3
   258c4:	cmp	r3, #0
   258c8:	beq	25938 <__assert_fail@plt+0x14648>
   258cc:	ldr	r3, [fp, #-172]	; 0xffffff54
   258d0:	cmn	r3, #-1073741822	; 0xc0000002
   258d4:	movhi	r3, #1
   258d8:	movls	r3, #0
   258dc:	uxtb	r3, r3
   258e0:	cmp	r3, #0
   258e4:	beq	258f4 <__assert_fail@plt+0x14604>
   258e8:	mov	r3, #12
   258ec:	str	r3, [fp, #-8]
   258f0:	b	26400 <__assert_fail@plt+0x15110>
   258f4:	ldr	r3, [fp, #-172]	; 0xffffff54
   258f8:	add	r3, r3, #1
   258fc:	lsl	r3, r3, #2
   25900:	mov	r0, r3
   25904:	bl	3134c <__assert_fail@plt+0x2005c>
   25908:	mov	r3, r0
   2590c:	str	r3, [fp, #-108]	; 0xffffff94
   25910:	ldr	r3, [fp, #-108]	; 0xffffff94
   25914:	cmp	r3, #0
   25918:	moveq	r3, #1
   2591c:	movne	r3, #0
   25920:	uxtb	r3, r3
   25924:	cmp	r3, #0
   25928:	beq	25938 <__assert_fail@plt+0x14648>
   2592c:	mov	r3, #12
   25930:	str	r3, [fp, #-8]
   25934:	b	26400 <__assert_fail@plt+0x15110>
   25938:	ldr	r3, [fp, #-228]	; 0xffffff1c
   2593c:	str	r3, [fp, #-72]	; 0xffffffb8
   25940:	ldr	r3, [fp, #20]
   25944:	and	r3, r3, #1
   25948:	cmp	r3, #0
   2594c:	beq	25958 <__assert_fail@plt+0x14668>
   25950:	mov	r3, #4
   25954:	b	2595c <__assert_fail@plt+0x1466c>
   25958:	mov	r3, #6
   2595c:	str	r3, [fp, #-148]	; 0xffffff6c
   25960:	ldr	r2, [fp, #4]
   25964:	ldr	r3, [fp, #-228]	; 0xffffff1c
   25968:	cmp	r2, r3
   2596c:	bge	25978 <__assert_fail@plt+0x14688>
   25970:	mvn	r3, #0
   25974:	b	2597c <__assert_fail@plt+0x1468c>
   25978:	mov	r3, #1
   2597c:	str	r3, [fp, #-44]	; 0xffffffd4
   25980:	ldr	r2, [fp, #-228]	; 0xffffff1c
   25984:	ldr	r3, [fp, #4]
   25988:	cmp	r2, r3
   2598c:	movlt	r3, r2
   25990:	movge	r3, r3
   25994:	str	r3, [fp, #-48]	; 0xffffffd0
   25998:	ldr	r2, [fp, #4]
   2599c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   259a0:	cmp	r2, r3
   259a4:	movge	r3, r2
   259a8:	movlt	r3, r3
   259ac:	str	r3, [fp, #-52]	; 0xffffffcc
   259b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   259b4:	ldr	r3, [r3, #92]	; 0x5c
   259b8:	cmp	r3, #1
   259bc:	moveq	r3, #1
   259c0:	movne	r3, #0
   259c4:	strb	r3, [fp, #-53]	; 0xffffffcb
   259c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   259cc:	cmp	r3, #0
   259d0:	beq	25a48 <__assert_fail@plt+0x14758>
   259d4:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   259d8:	cmp	r3, #0
   259dc:	bne	25a00 <__assert_fail@plt+0x14710>
   259e0:	ldr	r3, [fp, #-216]	; 0xffffff28
   259e4:	ldr	r3, [r3, #12]
   259e8:	and	r3, r3, #4194304	; 0x400000
   259ec:	cmp	r3, #0
   259f0:	bne	25a08 <__assert_fail@plt+0x14718>
   259f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   259f8:	cmp	r3, #0
   259fc:	bne	25a08 <__assert_fail@plt+0x14718>
   25a00:	mov	r2, #4
   25a04:	b	25a0c <__assert_fail@plt+0x1471c>
   25a08:	mov	r2, #0
   25a0c:	ldr	r1, [fp, #-228]	; 0xffffff1c
   25a10:	ldr	r3, [fp, #4]
   25a14:	cmp	r1, r3
   25a18:	bgt	25a24 <__assert_fail@plt+0x14734>
   25a1c:	mov	r3, #2
   25a20:	b	25a28 <__assert_fail@plt+0x14738>
   25a24:	mov	r3, #0
   25a28:	orr	r3, r2, r3
   25a2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25a30:	cmp	r2, #0
   25a34:	movne	r2, #1
   25a38:	moveq	r2, #0
   25a3c:	uxtb	r2, r2
   25a40:	orr	r3, r3, r2
   25a44:	b	25a4c <__assert_fail@plt+0x1475c>
   25a48:	mov	r3, #8
   25a4c:	str	r3, [fp, #-60]	; 0xffffffc4
   25a50:	mov	r3, #1
   25a54:	str	r3, [fp, #-8]
   25a58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25a5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25a60:	cmp	r2, r3
   25a64:	bgt	263d4 <__assert_fail@plt+0x150e4>
   25a68:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25a6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25a70:	cmp	r2, r3
   25a74:	blt	263d4 <__assert_fail@plt+0x150e4>
   25a78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25a7c:	sub	r3, r3, #4
   25a80:	cmp	r3, #4
   25a84:	ldrls	pc, [pc, r3, lsl #2]
   25a88:	b	25ca0 <__assert_fail@plt+0x149b0>
   25a8c:	andeq	r5, r2, r4, ror ip
   25a90:	andeq	r5, r2, r4, ror ip
   25a94:	andeq	r5, r2, r8, lsl fp
   25a98:	andeq	r5, r2, ip, lsr #21
   25a9c:	andeq	r5, r2, ip, lsr #27
   25aa0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25aa4:	add	r3, r3, #1
   25aa8:	str	r3, [fp, #-72]	; 0xffffffb8
   25aac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25ab0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25ab4:	cmp	r2, r3
   25ab8:	movgt	r3, #1
   25abc:	movle	r3, #0
   25ac0:	uxtb	r3, r3
   25ac4:	cmp	r3, #0
   25ac8:	beq	25b68 <__assert_fail@plt+0x14878>
   25acc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25ad0:	mov	r2, r3
   25ad4:	ldr	r3, [fp, #-220]	; 0xffffff24
   25ad8:	add	r3, r3, r2
   25adc:	ldrb	r3, [r3]
   25ae0:	mov	r2, r3
   25ae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25ae8:	add	r3, r3, r2
   25aec:	ldrb	r3, [r3]
   25af0:	mov	r2, r3
   25af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25af8:	add	r3, r3, r2
   25afc:	ldrb	r3, [r3]
   25b00:	cmp	r3, #0
   25b04:	beq	25aa0 <__assert_fail@plt+0x147b0>
   25b08:	b	25b68 <__assert_fail@plt+0x14878>
   25b0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25b10:	add	r3, r3, #1
   25b14:	str	r3, [fp, #-72]	; 0xffffffb8
   25b18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25b1c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25b20:	cmp	r2, r3
   25b24:	movgt	r3, #1
   25b28:	movle	r3, #0
   25b2c:	uxtb	r3, r3
   25b30:	cmp	r3, #0
   25b34:	beq	25b70 <__assert_fail@plt+0x14880>
   25b38:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25b3c:	mov	r2, r3
   25b40:	ldr	r3, [fp, #-220]	; 0xffffff24
   25b44:	add	r3, r3, r2
   25b48:	ldrb	r3, [r3]
   25b4c:	mov	r2, r3
   25b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25b54:	add	r3, r3, r2
   25b58:	ldrb	r3, [r3]
   25b5c:	cmp	r3, #0
   25b60:	beq	25b0c <__assert_fail@plt+0x1481c>
   25b64:	b	25b70 <__assert_fail@plt+0x14880>
   25b68:	nop	{0}
   25b6c:	b	25b74 <__assert_fail@plt+0x14884>
   25b70:	nop	{0}
   25b74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25b78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25b7c:	cmp	r2, r3
   25b80:	moveq	r3, #1
   25b84:	movne	r3, #0
   25b88:	uxtb	r3, r3
   25b8c:	cmp	r3, #0
   25b90:	beq	25db4 <__assert_fail@plt+0x14ac4>
   25b94:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25b98:	ldr	r2, [fp, #-224]	; 0xffffff20
   25b9c:	cmp	r2, r3
   25ba0:	ble	25bbc <__assert_fail@plt+0x148cc>
   25ba4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25ba8:	mov	r2, r3
   25bac:	ldr	r3, [fp, #-220]	; 0xffffff24
   25bb0:	add	r3, r3, r2
   25bb4:	ldrb	r3, [r3]
   25bb8:	b	25bc0 <__assert_fail@plt+0x148d0>
   25bbc:	mov	r3, #0
   25bc0:	str	r3, [fp, #-64]	; 0xffffffc0
   25bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25bc8:	cmp	r3, #0
   25bcc:	beq	25be4 <__assert_fail@plt+0x148f4>
   25bd0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25bd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25bd8:	add	r3, r2, r3
   25bdc:	ldrb	r3, [r3]
   25be0:	b	25be8 <__assert_fail@plt+0x148f8>
   25be4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25be8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25bec:	add	r3, r2, r3
   25bf0:	ldrb	r3, [r3]
   25bf4:	cmp	r3, #0
   25bf8:	bne	25db4 <__assert_fail@plt+0x14ac4>
   25bfc:	b	26400 <__assert_fail@plt+0x15110>
   25c00:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25c04:	ldr	r2, [fp, #-224]	; 0xffffff20
   25c08:	cmp	r2, r3
   25c0c:	ble	25c28 <__assert_fail@plt+0x14938>
   25c10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25c14:	mov	r2, r3
   25c18:	ldr	r3, [fp, #-220]	; 0xffffff24
   25c1c:	add	r3, r3, r2
   25c20:	ldrb	r3, [r3]
   25c24:	b	25c2c <__assert_fail@plt+0x1493c>
   25c28:	mov	r3, #0
   25c2c:	str	r3, [fp, #-64]	; 0xffffffc0
   25c30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c34:	cmp	r3, #0
   25c38:	beq	25c50 <__assert_fail@plt+0x14960>
   25c3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25c40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25c44:	add	r3, r2, r3
   25c48:	ldrb	r3, [r3]
   25c4c:	b	25c54 <__assert_fail@plt+0x14964>
   25c50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25c54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25c58:	add	r3, r2, r3
   25c5c:	ldrb	r3, [r3]
   25c60:	cmp	r3, #0
   25c64:	bne	25c88 <__assert_fail@plt+0x14998>
   25c68:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25c6c:	sub	r3, r3, #1
   25c70:	str	r3, [fp, #-72]	; 0xffffffb8
   25c74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25c78:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25c7c:	cmp	r2, r3
   25c80:	ble	25c00 <__assert_fail@plt+0x14910>
   25c84:	b	25c8c <__assert_fail@plt+0x1499c>
   25c88:	nop	{0}
   25c8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25c90:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25c94:	cmp	r2, r3
   25c98:	ble	25dbc <__assert_fail@plt+0x14acc>
   25c9c:	b	26400 <__assert_fail@plt+0x15110>
   25ca0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25ca4:	ldr	r3, [fp, #-184]	; 0xffffff48
   25ca8:	sub	r3, r2, r3
   25cac:	str	r3, [fp, #-12]
   25cb0:	ldr	r3, [fp, #-176]	; 0xffffff50
   25cb4:	mov	r2, r3
   25cb8:	ldr	r3, [fp, #-12]
   25cbc:	cmp	r3, r2
   25cc0:	movcs	r3, #1
   25cc4:	movcc	r3, #0
   25cc8:	uxtb	r3, r3
   25ccc:	cmp	r3, #0
   25cd0:	beq	25d18 <__assert_fail@plt+0x14a28>
   25cd4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   25cd8:	sub	r3, fp, #208	; 0xd0
   25cdc:	ldr	r2, [fp, #20]
   25ce0:	mov	r0, r3
   25ce4:	bl	17ca4 <__assert_fail@plt+0x69b4>
   25ce8:	str	r0, [fp, #-8]
   25cec:	ldr	r3, [fp, #-8]
   25cf0:	cmp	r3, #0
   25cf4:	movne	r3, #1
   25cf8:	moveq	r3, #0
   25cfc:	uxtb	r3, r3
   25d00:	cmp	r3, #0
   25d04:	bne	263dc <__assert_fail@plt+0x150ec>
   25d08:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25d0c:	ldr	r3, [fp, #-184]	; 0xffffff48
   25d10:	sub	r3, r2, r3
   25d14:	str	r3, [fp, #-12]
   25d18:	ldr	r3, [fp, #-180]	; 0xffffff4c
   25d1c:	mov	r2, r3
   25d20:	ldr	r3, [fp, #-12]
   25d24:	cmp	r3, r2
   25d28:	bcs	25d40 <__assert_fail@plt+0x14a50>
   25d2c:	ldr	r2, [fp, #-204]	; 0xffffff34
   25d30:	ldr	r3, [fp, #-12]
   25d34:	add	r3, r2, r3
   25d38:	ldrb	r3, [r3]
   25d3c:	b	25d44 <__assert_fail@plt+0x14a54>
   25d40:	mov	r3, #0
   25d44:	str	r3, [fp, #-64]	; 0xffffffc0
   25d48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25d4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25d50:	add	r3, r2, r3
   25d54:	ldrb	r3, [r3]
   25d58:	cmp	r3, #0
   25d5c:	bne	25da4 <__assert_fail@plt+0x14ab4>
   25d60:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25d64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25d68:	add	r3, r2, r3
   25d6c:	str	r3, [fp, #-72]	; 0xffffffb8
   25d70:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25d74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25d78:	cmp	r2, r3
   25d7c:	bgt	25d90 <__assert_fail@plt+0x14aa0>
   25d80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25d84:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25d88:	cmp	r2, r3
   25d8c:	bge	25d9c <__assert_fail@plt+0x14aac>
   25d90:	mov	r3, #1
   25d94:	str	r3, [fp, #-8]
   25d98:	b	26400 <__assert_fail@plt+0x15110>
   25d9c:	nop	{0}
   25da0:	b	25ca0 <__assert_fail@plt+0x149b0>
   25da4:	nop	{0}
   25da8:	b	25dc0 <__assert_fail@plt+0x14ad0>
   25dac:	nop	{0}
   25db0:	b	25dc0 <__assert_fail@plt+0x14ad0>
   25db4:	nop	{0}
   25db8:	b	25dc0 <__assert_fail@plt+0x14ad0>
   25dbc:	nop	{0}
   25dc0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   25dc4:	sub	r3, fp, #208	; 0xd0
   25dc8:	ldr	r2, [fp, #20]
   25dcc:	mov	r0, r3
   25dd0:	bl	17ca4 <__assert_fail@plt+0x69b4>
   25dd4:	str	r0, [fp, #-8]
   25dd8:	ldr	r3, [fp, #-8]
   25ddc:	cmp	r3, #0
   25de0:	movne	r3, #1
   25de4:	moveq	r3, #0
   25de8:	uxtb	r3, r3
   25dec:	cmp	r3, #0
   25df0:	bne	263e4 <__assert_fail@plt+0x150f4>
   25df4:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   25df8:	eor	r3, r3, #1
   25dfc:	uxtb	r3, r3
   25e00:	cmp	r3, #0
   25e04:	beq	25e24 <__assert_fail@plt+0x14b34>
   25e08:	ldr	r3, [fp, #-180]	; 0xffffff4c
   25e0c:	cmp	r3, #0
   25e10:	beq	25e24 <__assert_fail@plt+0x14b34>
   25e14:	ldr	r3, [fp, #-200]	; 0xffffff38
   25e18:	ldr	r3, [r3]
   25e1c:	cmn	r3, #1
   25e20:	beq	25fac <__assert_fail@plt+0x14cbc>
   25e24:	mov	r3, #0
   25e28:	str	r3, [fp, #-88]	; 0xffffffa8
   25e2c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25e30:	str	r3, [fp, #-100]	; 0xffffff9c
   25e34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   25e38:	str	r3, [fp, #-104]	; 0xffffff98
   25e3c:	ldr	r2, [fp, #-228]	; 0xffffff1c
   25e40:	ldr	r3, [fp, #4]
   25e44:	cmp	r2, r3
   25e48:	bgt	25e54 <__assert_fail@plt+0x14b64>
   25e4c:	sub	r3, fp, #72	; 0x48
   25e50:	b	25e58 <__assert_fail@plt+0x14b68>
   25e54:	mov	r3, #0
   25e58:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   25e5c:	sub	r0, fp, #208	; 0xd0
   25e60:	mov	r2, r3
   25e64:	bl	267c4 <__assert_fail@plt+0x154d4>
   25e68:	str	r0, [fp, #-24]	; 0xffffffe8
   25e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e70:	cmn	r3, #1
   25e74:	beq	25f9c <__assert_fail@plt+0x14cac>
   25e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e7c:	cmn	r3, #2
   25e80:	moveq	r3, #1
   25e84:	movne	r3, #0
   25e88:	uxtb	r3, r3
   25e8c:	cmp	r3, #0
   25e90:	beq	25ea0 <__assert_fail@plt+0x14bb0>
   25e94:	mov	r3, #12
   25e98:	str	r3, [fp, #-8]
   25e9c:	b	26400 <__assert_fail@plt+0x15110>
   25ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ea4:	str	r3, [fp, #-116]	; 0xffffff8c
   25ea8:	ldr	r3, [fp, #-216]	; 0xffffff28
   25eac:	ldrb	r3, [r3, #28]
   25eb0:	and	r3, r3, #16
   25eb4:	uxtb	r3, r3
   25eb8:	cmp	r3, #0
   25ebc:	bne	25ecc <__assert_fail@plt+0x14bdc>
   25ec0:	ldr	r3, [fp, #12]
   25ec4:	cmp	r3, #1
   25ec8:	bhi	25edc <__assert_fail@plt+0x14bec>
   25ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ed0:	ldr	r3, [r3, #76]	; 0x4c
   25ed4:	cmp	r3, #0
   25ed8:	beq	25f10 <__assert_fail@plt+0x14c20>
   25edc:	ldr	r2, [fp, #-108]	; 0xffffff94
   25ee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ee4:	lsl	r3, r3, #2
   25ee8:	add	r3, r2, r3
   25eec:	ldr	r3, [r3]
   25ef0:	str	r3, [fp, #-68]	; 0xffffffbc
   25ef4:	sub	r3, fp, #208	; 0xd0
   25ef8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25efc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25f00:	mov	r0, r3
   25f04:	bl	26ea4 <__assert_fail@plt+0x15bb4>
   25f08:	mov	r3, r0
   25f0c:	str	r3, [fp, #-112]	; 0xffffff90
   25f10:	ldr	r3, [fp, #-216]	; 0xffffff28
   25f14:	ldrb	r3, [r3, #28]
   25f18:	and	r3, r3, #16
   25f1c:	uxtb	r3, r3
   25f20:	cmp	r3, #0
   25f24:	bne	25f4c <__assert_fail@plt+0x14c5c>
   25f28:	ldr	r3, [fp, #12]
   25f2c:	cmp	r3, #1
   25f30:	bls	25f4c <__assert_fail@plt+0x14c5c>
   25f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   25f38:	ldrb	r3, [r3, #88]	; 0x58
   25f3c:	and	r3, r3, #1
   25f40:	uxtb	r3, r3
   25f44:	cmp	r3, #0
   25f48:	bne	25f5c <__assert_fail@plt+0x14c6c>
   25f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25f50:	ldr	r3, [r3, #76]	; 0x4c
   25f54:	cmp	r3, #0
   25f58:	beq	25fc8 <__assert_fail@plt+0x14cd8>
   25f5c:	sub	r3, fp, #208	; 0xd0
   25f60:	mov	r0, r3
   25f64:	bl	2644c <__assert_fail@plt+0x1515c>
   25f68:	str	r0, [fp, #-8]
   25f6c:	ldr	r3, [fp, #-8]
   25f70:	cmp	r3, #0
   25f74:	beq	25fc4 <__assert_fail@plt+0x14cd4>
   25f78:	ldr	r3, [fp, #-8]
   25f7c:	cmp	r3, #1
   25f80:	movne	r3, #1
   25f84:	moveq	r3, #0
   25f88:	uxtb	r3, r3
   25f8c:	cmp	r3, #0
   25f90:	bne	263ec <__assert_fail@plt+0x150fc>
   25f94:	mvn	r3, #0
   25f98:	str	r3, [fp, #-24]	; 0xffffffe8
   25f9c:	sub	r3, fp, #208	; 0xd0
   25fa0:	mov	r0, r3
   25fa4:	bl	2edd8 <__assert_fail@plt+0x1dae8>
   25fa8:	b	25fb0 <__assert_fail@plt+0x14cc0>
   25fac:	nop	{0}
   25fb0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25fb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25fb8:	add	r3, r2, r3
   25fbc:	str	r3, [fp, #-72]	; 0xffffffb8
   25fc0:	b	25a50 <__assert_fail@plt+0x14760>
   25fc4:	nop	{0}
   25fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25fcc:	cmn	r3, #1
   25fd0:	ldr	r3, [fp, #-8]
   25fd4:	cmp	r3, #0
   25fd8:	ldr	r3, [fp, #12]
   25fdc:	cmp	r3, #0
   25fe0:	beq	263f4 <__assert_fail@plt+0x15104>
   25fe4:	mov	r3, #1
   25fe8:	str	r3, [fp, #-16]
   25fec:	b	2602c <__assert_fail@plt+0x14d3c>
   25ff0:	ldr	r3, [fp, #-16]
   25ff4:	lsl	r3, r3, #3
   25ff8:	ldr	r2, [fp, #16]
   25ffc:	add	r3, r2, r3
   26000:	mvn	r2, #0
   26004:	str	r2, [r3, #4]
   26008:	ldr	r2, [fp, #-16]
   2600c:	lsl	r2, r2, #3
   26010:	ldr	r1, [fp, #16]
   26014:	add	r2, r1, r2
   26018:	ldr	r3, [r3, #4]
   2601c:	str	r3, [r2]
   26020:	ldr	r3, [fp, #-16]
   26024:	add	r3, r3, #1
   26028:	str	r3, [fp, #-16]
   2602c:	ldr	r3, [fp, #-16]
   26030:	ldr	r2, [fp, #12]
   26034:	cmp	r2, r3
   26038:	bhi	25ff0 <__assert_fail@plt+0x14d00>
   2603c:	ldr	r3, [fp, #16]
   26040:	mov	r2, #0
   26044:	str	r2, [r3]
   26048:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2604c:	ldr	r3, [fp, #16]
   26050:	str	r2, [r3, #4]
   26054:	ldr	r3, [fp, #-216]	; 0xffffff28
   26058:	ldrb	r3, [r3, #28]
   2605c:	and	r3, r3, #16
   26060:	uxtb	r3, r3
   26064:	cmp	r3, #0
   26068:	bne	260ec <__assert_fail@plt+0x14dfc>
   2606c:	ldr	r3, [fp, #12]
   26070:	cmp	r3, #1
   26074:	bls	260ec <__assert_fail@plt+0x14dfc>
   26078:	ldr	r3, [fp, #-20]	; 0xffffffec
   2607c:	ldrb	r3, [r3, #88]	; 0x58
   26080:	and	r3, r3, #1
   26084:	uxtb	r3, r3
   26088:	cmp	r3, #0
   2608c:	beq	260a8 <__assert_fail@plt+0x14db8>
   26090:	ldr	r3, [fp, #-20]	; 0xffffffec
   26094:	ldr	r3, [r3, #76]	; 0x4c
   26098:	cmp	r3, #0
   2609c:	ble	260a8 <__assert_fail@plt+0x14db8>
   260a0:	mov	r3, #1
   260a4:	b	260ac <__assert_fail@plt+0x14dbc>
   260a8:	mov	r3, #0
   260ac:	and	r3, r3, #1
   260b0:	uxtb	r3, r3
   260b4:	sub	r1, fp, #208	; 0xd0
   260b8:	str	r3, [sp]
   260bc:	ldr	r3, [fp, #16]
   260c0:	ldr	r2, [fp, #12]
   260c4:	ldr	r0, [fp, #-216]	; 0xffffff28
   260c8:	bl	27e34 <__assert_fail@plt+0x16b44>
   260cc:	str	r0, [fp, #-8]
   260d0:	ldr	r3, [fp, #-8]
   260d4:	cmp	r3, #0
   260d8:	movne	r3, #1
   260dc:	moveq	r3, #0
   260e0:	uxtb	r3, r3
   260e4:	cmp	r3, #0
   260e8:	bne	263fc <__assert_fail@plt+0x1510c>
   260ec:	mov	r3, #0
   260f0:	str	r3, [fp, #-16]
   260f4:	b	2625c <__assert_fail@plt+0x14f6c>
   260f8:	ldr	r3, [fp, #-16]
   260fc:	lsl	r3, r3, #3
   26100:	ldr	r2, [fp, #16]
   26104:	add	r3, r2, r3
   26108:	ldr	r3, [r3]
   2610c:	cmn	r3, #1
   26110:	beq	26250 <__assert_fail@plt+0x14f60>
   26114:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   26118:	cmp	r3, #0
   2611c:	movne	r3, #1
   26120:	moveq	r3, #0
   26124:	uxtb	r3, r3
   26128:	cmp	r3, #0
   2612c:	beq	261f0 <__assert_fail@plt+0x14f00>
   26130:	ldr	r3, [fp, #-16]
   26134:	lsl	r3, r3, #3
   26138:	ldr	r2, [fp, #16]
   2613c:	add	r3, r2, r3
   26140:	ldr	r2, [r3]
   26144:	ldr	r3, [fp, #-180]	; 0xffffff4c
   26148:	cmp	r2, r3
   2614c:	bne	26158 <__assert_fail@plt+0x14e68>
   26150:	ldr	r3, [fp, #-176]	; 0xffffff50
   26154:	b	2617c <__assert_fail@plt+0x14e8c>
   26158:	ldr	r2, [fp, #-196]	; 0xffffff3c
   2615c:	ldr	r3, [fp, #-16]
   26160:	lsl	r3, r3, #3
   26164:	ldr	r1, [fp, #16]
   26168:	add	r3, r1, r3
   2616c:	ldr	r3, [r3]
   26170:	lsl	r3, r3, #2
   26174:	add	r3, r2, r3
   26178:	ldr	r3, [r3]
   2617c:	ldr	r2, [fp, #-16]
   26180:	lsl	r2, r2, #3
   26184:	ldr	r1, [fp, #16]
   26188:	add	r2, r1, r2
   2618c:	str	r3, [r2]
   26190:	ldr	r3, [fp, #-16]
   26194:	lsl	r3, r3, #3
   26198:	ldr	r2, [fp, #16]
   2619c:	add	r3, r2, r3
   261a0:	ldr	r2, [r3, #4]
   261a4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   261a8:	cmp	r2, r3
   261ac:	bne	261b8 <__assert_fail@plt+0x14ec8>
   261b0:	ldr	r3, [fp, #-176]	; 0xffffff50
   261b4:	b	261dc <__assert_fail@plt+0x14eec>
   261b8:	ldr	r2, [fp, #-196]	; 0xffffff3c
   261bc:	ldr	r3, [fp, #-16]
   261c0:	lsl	r3, r3, #3
   261c4:	ldr	r1, [fp, #16]
   261c8:	add	r3, r1, r3
   261cc:	ldr	r3, [r3, #4]
   261d0:	lsl	r3, r3, #2
   261d4:	add	r3, r2, r3
   261d8:	ldr	r3, [r3]
   261dc:	ldr	r2, [fp, #-16]
   261e0:	lsl	r2, r2, #3
   261e4:	ldr	r1, [fp, #16]
   261e8:	add	r2, r1, r2
   261ec:	str	r3, [r2, #4]
   261f0:	ldr	r3, [fp, #-16]
   261f4:	lsl	r3, r3, #3
   261f8:	ldr	r2, [fp, #16]
   261fc:	add	r3, r2, r3
   26200:	ldr	r1, [r3]
   26204:	ldr	r2, [fp, #-72]	; 0xffffffb8
   26208:	ldr	r3, [fp, #-16]
   2620c:	lsl	r3, r3, #3
   26210:	ldr	r0, [fp, #16]
   26214:	add	r3, r0, r3
   26218:	add	r2, r1, r2
   2621c:	str	r2, [r3]
   26220:	ldr	r3, [fp, #-16]
   26224:	lsl	r3, r3, #3
   26228:	ldr	r2, [fp, #16]
   2622c:	add	r3, r2, r3
   26230:	ldr	r1, [r3, #4]
   26234:	ldr	r2, [fp, #-72]	; 0xffffffb8
   26238:	ldr	r3, [fp, #-16]
   2623c:	lsl	r3, r3, #3
   26240:	ldr	r0, [fp, #16]
   26244:	add	r3, r0, r3
   26248:	add	r2, r1, r2
   2624c:	str	r2, [r3, #4]
   26250:	ldr	r3, [fp, #-16]
   26254:	add	r3, r3, #1
   26258:	str	r3, [fp, #-16]
   2625c:	ldr	r3, [fp, #-16]
   26260:	ldr	r2, [fp, #12]
   26264:	cmp	r2, r3
   26268:	bhi	260f8 <__assert_fail@plt+0x14e08>
   2626c:	mov	r3, #0
   26270:	str	r3, [fp, #-16]
   26274:	b	262c4 <__assert_fail@plt+0x14fd4>
   26278:	ldr	r2, [fp, #-16]
   2627c:	ldr	r3, [fp, #12]
   26280:	add	r3, r2, r3
   26284:	lsl	r3, r3, #3
   26288:	ldr	r2, [fp, #16]
   2628c:	add	r3, r2, r3
   26290:	mvn	r2, #0
   26294:	str	r2, [r3]
   26298:	ldr	r2, [fp, #-16]
   2629c:	ldr	r3, [fp, #12]
   262a0:	add	r3, r2, r3
   262a4:	lsl	r3, r3, #3
   262a8:	ldr	r2, [fp, #16]
   262ac:	add	r3, r2, r3
   262b0:	mvn	r2, #0
   262b4:	str	r2, [r3, #4]
   262b8:	ldr	r3, [fp, #-16]
   262bc:	add	r3, r3, #1
   262c0:	str	r3, [fp, #-16]
   262c4:	ldr	r2, [fp, #-16]
   262c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   262cc:	cmp	r2, r3
   262d0:	blt	26278 <__assert_fail@plt+0x14f88>
   262d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   262d8:	ldr	r3, [r3, #132]	; 0x84
   262dc:	cmp	r3, #0
   262e0:	beq	263f4 <__assert_fail@plt+0x15104>
   262e4:	mov	r3, #0
   262e8:	str	r3, [fp, #-16]
   262ec:	b	263a8 <__assert_fail@plt+0x150b8>
   262f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   262f4:	ldr	r2, [r3, #132]	; 0x84
   262f8:	ldr	r3, [fp, #-16]
   262fc:	lsl	r3, r3, #2
   26300:	add	r3, r2, r3
   26304:	ldr	r3, [r3]
   26308:	ldr	r2, [fp, #-16]
   2630c:	cmp	r2, r3
   26310:	beq	2639c <__assert_fail@plt+0x150ac>
   26314:	ldr	r3, [fp, #-20]	; 0xffffffec
   26318:	ldr	r2, [r3, #132]	; 0x84
   2631c:	ldr	r3, [fp, #-16]
   26320:	lsl	r3, r3, #2
   26324:	add	r3, r2, r3
   26328:	ldr	r3, [r3]
   2632c:	add	r3, r3, #1
   26330:	lsl	r3, r3, #3
   26334:	ldr	r2, [fp, #16]
   26338:	add	r2, r2, r3
   2633c:	ldr	r3, [fp, #-16]
   26340:	add	r3, r3, #1
   26344:	lsl	r3, r3, #3
   26348:	ldr	r1, [fp, #16]
   2634c:	add	r3, r1, r3
   26350:	ldr	r2, [r2]
   26354:	str	r2, [r3]
   26358:	ldr	r3, [fp, #-20]	; 0xffffffec
   2635c:	ldr	r2, [r3, #132]	; 0x84
   26360:	ldr	r3, [fp, #-16]
   26364:	lsl	r3, r3, #2
   26368:	add	r3, r2, r3
   2636c:	ldr	r3, [r3]
   26370:	add	r3, r3, #1
   26374:	lsl	r3, r3, #3
   26378:	ldr	r2, [fp, #16]
   2637c:	add	r2, r2, r3
   26380:	ldr	r3, [fp, #-16]
   26384:	add	r3, r3, #1
   26388:	lsl	r3, r3, #3
   2638c:	ldr	r1, [fp, #16]
   26390:	add	r3, r1, r3
   26394:	ldr	r2, [r2, #4]
   26398:	str	r2, [r3, #4]
   2639c:	ldr	r3, [fp, #-16]
   263a0:	add	r3, r3, #1
   263a4:	str	r3, [fp, #-16]
   263a8:	ldr	r3, [fp, #-16]
   263ac:	add	r3, r3, #1
   263b0:	mov	r2, r3
   263b4:	ldr	r3, [fp, #12]
   263b8:	cmp	r3, r2
   263bc:	bhi	262f0 <__assert_fail@plt+0x15000>
   263c0:	b	263f4 <__assert_fail@plt+0x15104>
   263c4:	nop	{0}
   263c8:	b	26400 <__assert_fail@plt+0x15110>
   263cc:	nop	{0}
   263d0:	b	26400 <__assert_fail@plt+0x15110>
   263d4:	nop	{0}
   263d8:	b	26400 <__assert_fail@plt+0x15110>
   263dc:	nop	{0}
   263e0:	b	26400 <__assert_fail@plt+0x15110>
   263e4:	nop	{0}
   263e8:	b	26400 <__assert_fail@plt+0x15110>
   263ec:	nop	{0}
   263f0:	b	26400 <__assert_fail@plt+0x15110>
   263f4:	nop	{0}
   263f8:	b	26400 <__assert_fail@plt+0x15110>
   263fc:	nop	{0}
   26400:	ldr	r3, [fp, #-108]	; 0xffffff94
   26404:	mov	r0, r3
   26408:	bl	31b28 <__assert_fail@plt+0x20838>
   2640c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26410:	ldr	r3, [r3, #76]	; 0x4c
   26414:	cmp	r3, #0
   26418:	beq	26428 <__assert_fail@plt+0x15138>
   2641c:	sub	r3, fp, #208	; 0xd0
   26420:	mov	r0, r3
   26424:	bl	2ef0c <__assert_fail@plt+0x1dc1c>
   26428:	sub	r3, fp, #208	; 0xd0
   2642c:	mov	r0, r3
   26430:	bl	18ca8 <__assert_fail@plt+0x79b8>
   26434:	ldr	r3, [fp, #-8]
   26438:	mov	r0, r3
   2643c:	sub	sp, fp, #4
   26440:	ldr	fp, [sp]
   26444:	add	sp, sp, #4
   26448:	pop	{pc}		; (ldr pc, [sp], #4)
   2644c:	str	fp, [sp, #-8]!
   26450:	str	lr, [sp, #4]
   26454:	add	fp, sp, #4
   26458:	sub	sp, sp, #72	; 0x48
   2645c:	str	r0, [fp, #-64]	; 0xffffffc0
   26460:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26464:	ldr	r3, [r3, #84]	; 0x54
   26468:	str	r3, [fp, #-28]	; 0xffffffe4
   2646c:	mov	r3, #0
   26470:	str	r3, [fp, #-24]	; 0xffffffe8
   26474:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26478:	ldr	r3, [r3, #100]	; 0x64
   2647c:	cmp	r3, #0
   26480:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26484:	ldr	r3, [r3, #92]	; 0x5c
   26488:	str	r3, [fp, #-12]
   2648c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26490:	ldr	r3, [r3, #96]	; 0x60
   26494:	str	r3, [fp, #-8]
   26498:	ldr	r3, [fp, #-12]
   2649c:	cmn	r3, #-1073741822	; 0xc0000002
   264a0:	movhi	r3, #1
   264a4:	movls	r3, #0
   264a8:	uxtb	r3, r3
   264ac:	cmp	r3, #0
   264b0:	beq	264bc <__assert_fail@plt+0x151cc>
   264b4:	mov	r3, #12
   264b8:	b	267b0 <__assert_fail@plt+0x154c0>
   264bc:	ldr	r3, [fp, #-12]
   264c0:	add	r3, r3, #1
   264c4:	lsl	r3, r3, #2
   264c8:	mov	r0, r3
   264cc:	bl	3134c <__assert_fail@plt+0x2005c>
   264d0:	mov	r3, r0
   264d4:	str	r3, [fp, #-20]	; 0xffffffec
   264d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   264dc:	cmp	r3, #0
   264e0:	moveq	r3, #1
   264e4:	movne	r3, #0
   264e8:	uxtb	r3, r3
   264ec:	cmp	r3, #0
   264f0:	beq	26500 <__assert_fail@plt+0x15210>
   264f4:	mov	r3, #12
   264f8:	str	r3, [fp, #-16]
   264fc:	b	2679c <__assert_fail@plt+0x154ac>
   26500:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26504:	ldr	r3, [r3, #76]	; 0x4c
   26508:	cmp	r3, #0
   2650c:	beq	266d4 <__assert_fail@plt+0x153e4>
   26510:	ldr	r3, [fp, #-12]
   26514:	add	r3, r3, #1
   26518:	lsl	r3, r3, #2
   2651c:	mov	r0, r3
   26520:	bl	3134c <__assert_fail@plt+0x2005c>
   26524:	mov	r3, r0
   26528:	str	r3, [fp, #-24]	; 0xffffffe8
   2652c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26530:	cmp	r3, #0
   26534:	moveq	r3, #1
   26538:	movne	r3, #0
   2653c:	uxtb	r3, r3
   26540:	cmp	r3, #0
   26544:	beq	26554 <__assert_fail@plt+0x15264>
   26548:	mov	r3, #12
   2654c:	str	r3, [fp, #-16]
   26550:	b	2679c <__assert_fail@plt+0x154ac>
   26554:	ldr	r3, [fp, #-12]
   26558:	add	r3, r3, #1
   2655c:	lsl	r3, r3, #2
   26560:	mov	r2, r3
   26564:	mov	r1, #0
   26568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2656c:	bl	11218 <memset@plt>
   26570:	sub	r0, fp, #56	; 0x38
   26574:	ldr	r3, [fp, #-12]
   26578:	str	r3, [sp]
   2657c:	ldr	r3, [fp, #-8]
   26580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26584:	ldr	r1, [fp, #-20]	; 0xffffffec
   26588:	bl	2f664 <__assert_fail@plt+0x1e374>
   2658c:	sub	r3, fp, #56	; 0x38
   26590:	mov	r1, r3
   26594:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26598:	bl	284ac <__assert_fail@plt+0x171bc>
   2659c:	str	r0, [fp, #-16]
   265a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   265a4:	mov	r0, r3
   265a8:	bl	31b28 <__assert_fail@plt+0x20838>
   265ac:	ldr	r3, [fp, #-16]
   265b0:	cmp	r3, #0
   265b4:	movne	r3, #1
   265b8:	moveq	r3, #0
   265bc:	uxtb	r3, r3
   265c0:	cmp	r3, #0
   265c4:	bne	26790 <__assert_fail@plt+0x154a0>
   265c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   265cc:	ldr	r3, [r3]
   265d0:	cmp	r3, #0
   265d4:	bne	26688 <__assert_fail@plt+0x15398>
   265d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   265dc:	ldr	r3, [r3]
   265e0:	cmp	r3, #0
   265e4:	bne	26688 <__assert_fail@plt+0x15398>
   265e8:	ldr	r3, [fp, #-12]
   265ec:	sub	r3, r3, #1
   265f0:	str	r3, [fp, #-12]
   265f4:	ldr	r3, [fp, #-12]
   265f8:	cmp	r3, #0
   265fc:	bge	2660c <__assert_fail@plt+0x1531c>
   26600:	mov	r3, #1
   26604:	str	r3, [fp, #-16]
   26608:	b	2679c <__assert_fail@plt+0x154ac>
   2660c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26610:	ldr	r2, [r3, #100]	; 0x64
   26614:	ldr	r3, [fp, #-12]
   26618:	lsl	r3, r3, #2
   2661c:	add	r3, r2, r3
   26620:	ldr	r3, [r3]
   26624:	cmp	r3, #0
   26628:	beq	265e8 <__assert_fail@plt+0x152f8>
   2662c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26630:	ldr	r2, [r3, #100]	; 0x64
   26634:	ldr	r3, [fp, #-12]
   26638:	lsl	r3, r3, #2
   2663c:	add	r3, r2, r3
   26640:	ldr	r3, [r3]
   26644:	ldrb	r3, [r3, #52]	; 0x34
   26648:	and	r3, r3, #16
   2664c:	uxtb	r3, r3
   26650:	cmp	r3, #0
   26654:	beq	265e8 <__assert_fail@plt+0x152f8>
   26658:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2665c:	ldr	r2, [r3, #100]	; 0x64
   26660:	ldr	r3, [fp, #-12]
   26664:	lsl	r3, r3, #2
   26668:	add	r3, r2, r3
   2666c:	ldr	r3, [r3]
   26670:	ldr	r2, [fp, #-12]
   26674:	mov	r1, r3
   26678:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2667c:	bl	26ea4 <__assert_fail@plt+0x15bb4>
   26680:	str	r0, [fp, #-8]
   26684:	b	26554 <__assert_fail@plt+0x15264>
   26688:	ldr	r3, [fp, #-12]
   2668c:	add	r3, r3, #1
   26690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26694:	ldr	r1, [fp, #-20]	; 0xffffffec
   26698:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2669c:	bl	28a94 <__assert_fail@plt+0x177a4>
   266a0:	str	r0, [fp, #-16]
   266a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   266a8:	bl	31b28 <__assert_fail@plt+0x20838>
   266ac:	mov	r3, #0
   266b0:	str	r3, [fp, #-24]	; 0xffffffe8
   266b4:	ldr	r3, [fp, #-16]
   266b8:	cmp	r3, #0
   266bc:	movne	r3, #1
   266c0:	moveq	r3, #0
   266c4:	uxtb	r3, r3
   266c8:	cmp	r3, #0
   266cc:	beq	26748 <__assert_fail@plt+0x15458>
   266d0:	b	2679c <__assert_fail@plt+0x154ac>
   266d4:	sub	r0, fp, #56	; 0x38
   266d8:	ldr	r3, [fp, #-12]
   266dc:	str	r3, [sp]
   266e0:	ldr	r3, [fp, #-8]
   266e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   266e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   266ec:	bl	2f664 <__assert_fail@plt+0x1e374>
   266f0:	sub	r3, fp, #56	; 0x38
   266f4:	mov	r1, r3
   266f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   266fc:	bl	284ac <__assert_fail@plt+0x171bc>
   26700:	str	r0, [fp, #-16]
   26704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26708:	mov	r0, r3
   2670c:	bl	31b28 <__assert_fail@plt+0x20838>
   26710:	ldr	r3, [fp, #-16]
   26714:	cmp	r3, #0
   26718:	movne	r3, #1
   2671c:	moveq	r3, #0
   26720:	uxtb	r3, r3
   26724:	cmp	r3, #0
   26728:	bne	26798 <__assert_fail@plt+0x154a8>
   2672c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26730:	ldr	r3, [r3]
   26734:	cmp	r3, #0
   26738:	bne	26748 <__assert_fail@plt+0x15458>
   2673c:	mov	r3, #1
   26740:	str	r3, [fp, #-16]
   26744:	b	2679c <__assert_fail@plt+0x154ac>
   26748:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2674c:	ldr	r3, [r3, #100]	; 0x64
   26750:	mov	r0, r3
   26754:	bl	31b28 <__assert_fail@plt+0x20838>
   26758:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2675c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26760:	str	r2, [r3, #100]	; 0x64
   26764:	mov	r3, #0
   26768:	str	r3, [fp, #-20]	; 0xffffffec
   2676c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26770:	ldr	r2, [fp, #-8]
   26774:	str	r2, [r3, #96]	; 0x60
   26778:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2677c:	ldr	r2, [fp, #-12]
   26780:	str	r2, [r3, #92]	; 0x5c
   26784:	mov	r3, #0
   26788:	str	r3, [fp, #-16]
   2678c:	b	2679c <__assert_fail@plt+0x154ac>
   26790:	nop	{0}
   26794:	b	2679c <__assert_fail@plt+0x154ac>
   26798:	nop	{0}
   2679c:	ldr	r0, [fp, #-20]	; 0xffffffec
   267a0:	bl	31b28 <__assert_fail@plt+0x20838>
   267a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267a8:	bl	31b28 <__assert_fail@plt+0x20838>
   267ac:	ldr	r3, [fp, #-16]
   267b0:	mov	r0, r3
   267b4:	sub	sp, fp, #4
   267b8:	ldr	fp, [sp]
   267bc:	add	sp, sp, #4
   267c0:	pop	{pc}		; (ldr pc, [sp], #4)
   267c4:	str	fp, [sp, #-8]!
   267c8:	str	lr, [sp, #4]
   267cc:	add	fp, sp, #4
   267d0:	sub	sp, sp, #80	; 0x50
   267d4:	str	r0, [fp, #-72]	; 0xffffffb8
   267d8:	mov	r3, r1
   267dc:	str	r2, [fp, #-80]	; 0xffffffb0
   267e0:	strb	r3, [fp, #-73]	; 0xffffffb7
   267e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   267e8:	ldr	r3, [r3, #84]	; 0x54
   267ec:	str	r3, [fp, #-28]	; 0xffffffe4
   267f0:	mov	r3, #0
   267f4:	str	r3, [fp, #-8]
   267f8:	mvn	r3, #0
   267fc:	str	r3, [fp, #-12]
   26800:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26804:	ldr	r3, [r3, #40]	; 0x28
   26808:	str	r3, [fp, #-32]	; 0xffffffe0
   2680c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26810:	cmp	r3, #0
   26814:	movne	r3, #1
   26818:	moveq	r3, #0
   2681c:	strb	r3, [fp, #-17]	; 0xffffffef
   26820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26824:	str	r3, [fp, #-24]	; 0xffffffe8
   26828:	mov	r3, #0
   2682c:	str	r3, [fp, #-64]	; 0xffffffc0
   26830:	sub	r3, fp, #64	; 0x40
   26834:	str	r3, [fp, #-44]	; 0xffffffd4
   26838:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2683c:	str	r3, [fp, #-48]	; 0xffffffd0
   26840:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26844:	str	r3, [fp, #-52]	; 0xffffffcc
   26848:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2684c:	ldr	r3, [r3, #84]	; 0x54
   26850:	str	r3, [fp, #-56]	; 0xffffffc8
   26854:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26858:	ldr	r3, [r3, #36]	; 0x24
   2685c:	ldrb	r3, [r3, #52]	; 0x34
   26860:	bic	r3, r3, #127	; 0x7f
   26864:	uxtb	r3, r3
   26868:	cmp	r3, #0
   2686c:	beq	2694c <__assert_fail@plt+0x1565c>
   26870:	ldr	r0, [fp, #-48]	; 0xffffffd0
   26874:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26878:	sub	r1, r3, #1
   2687c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26880:	ldr	r3, [r3, #88]	; 0x58
   26884:	mov	r2, r3
   26888:	bl	18d10 <__assert_fail@plt+0x7a20>
   2688c:	str	r0, [fp, #-60]	; 0xffffffc4
   26890:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26894:	and	r3, r3, #1
   26898:	cmp	r3, #0
   2689c:	beq	268ac <__assert_fail@plt+0x155bc>
   268a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   268a4:	ldr	r3, [r3, #40]	; 0x28
   268a8:	b	26954 <__assert_fail@plt+0x15664>
   268ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   268b0:	cmp	r3, #0
   268b4:	bne	268c4 <__assert_fail@plt+0x155d4>
   268b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   268bc:	ldr	r3, [r3, #36]	; 0x24
   268c0:	b	26954 <__assert_fail@plt+0x15664>
   268c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   268c8:	and	r3, r3, #4
   268cc:	cmp	r3, #0
   268d0:	beq	268f0 <__assert_fail@plt+0x15600>
   268d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   268d8:	and	r3, r3, #2
   268dc:	cmp	r3, #0
   268e0:	beq	268f0 <__assert_fail@plt+0x15600>
   268e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   268e8:	ldr	r3, [r3, #48]	; 0x30
   268ec:	b	26954 <__assert_fail@plt+0x15664>
   268f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   268f4:	and	r3, r3, #2
   268f8:	cmp	r3, #0
   268fc:	beq	2690c <__assert_fail@plt+0x1561c>
   26900:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26904:	ldr	r3, [r3, #44]	; 0x2c
   26908:	b	26954 <__assert_fail@plt+0x15664>
   2690c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26910:	and	r3, r3, #4
   26914:	cmp	r3, #0
   26918:	beq	26940 <__assert_fail@plt+0x15650>
   2691c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26920:	ldr	r3, [r3, #36]	; 0x24
   26924:	ldr	r2, [r3, #40]	; 0x28
   26928:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2692c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   26930:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26934:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   26938:	mov	r3, r0
   2693c:	b	26954 <__assert_fail@plt+0x15664>
   26940:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26944:	ldr	r3, [r3, #36]	; 0x24
   26948:	b	26954 <__assert_fail@plt+0x15664>
   2694c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26950:	ldr	r3, [r3, #36]	; 0x24
   26954:	str	r3, [fp, #-16]
   26958:	ldr	r3, [fp, #-16]
   2695c:	cmp	r3, #0
   26960:	moveq	r3, #1
   26964:	movne	r3, #0
   26968:	uxtb	r3, r3
   2696c:	cmp	r3, #0
   26970:	beq	26984 <__assert_fail@plt+0x15694>
   26974:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26978:	cmp	r3, #12
   2697c:	mvn	r3, #1
   26980:	b	26d74 <__assert_fail@plt+0x15a84>
   26984:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26988:	ldr	r3, [r3, #100]	; 0x64
   2698c:	cmp	r3, #0
   26990:	beq	26a64 <__assert_fail@plt+0x15774>
   26994:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26998:	ldr	r2, [r3, #100]	; 0x64
   2699c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269a0:	lsl	r3, r3, #2
   269a4:	add	r3, r2, r3
   269a8:	ldr	r2, [fp, #-16]
   269ac:	str	r2, [r3]
   269b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   269b4:	ldr	r3, [r3, #76]	; 0x4c
   269b8:	cmp	r3, #0
   269bc:	beq	26a64 <__assert_fail@plt+0x15774>
   269c0:	mov	r3, #0
   269c4:	strb	r3, [fp, #-17]	; 0xffffffef
   269c8:	ldr	r3, [fp, #-16]
   269cc:	add	r3, r3, #4
   269d0:	mov	r2, #0
   269d4:	mov	r1, r3
   269d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   269dc:	bl	2a7a0 <__assert_fail@plt+0x194b0>
   269e0:	mov	r3, r0
   269e4:	str	r3, [fp, #-64]	; 0xffffffc0
   269e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   269ec:	cmp	r3, #0
   269f0:	movne	r3, #1
   269f4:	moveq	r3, #0
   269f8:	uxtb	r3, r3
   269fc:	cmp	r3, #0
   26a00:	beq	26a0c <__assert_fail@plt+0x1571c>
   26a04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26a08:	b	26d74 <__assert_fail@plt+0x15a84>
   26a0c:	ldr	r3, [fp, #-16]
   26a10:	ldrb	r3, [r3, #52]	; 0x34
   26a14:	and	r3, r3, #64	; 0x40
   26a18:	uxtb	r3, r3
   26a1c:	cmp	r3, #0
   26a20:	beq	26a64 <__assert_fail@plt+0x15774>
   26a24:	ldr	r3, [fp, #-16]
   26a28:	add	r3, r3, #4
   26a2c:	mov	r1, r3
   26a30:	ldr	r0, [fp, #-72]	; 0xffffffb8
   26a34:	bl	2ad08 <__assert_fail@plt+0x19a18>
   26a38:	mov	r3, r0
   26a3c:	str	r3, [fp, #-64]	; 0xffffffc0
   26a40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26a44:	cmp	r3, #0
   26a48:	movne	r3, #1
   26a4c:	moveq	r3, #0
   26a50:	uxtb	r3, r3
   26a54:	cmp	r3, #0
   26a58:	beq	26a64 <__assert_fail@plt+0x15774>
   26a5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26a60:	b	26d74 <__assert_fail@plt+0x15a84>
   26a64:	ldr	r3, [fp, #-16]
   26a68:	ldrb	r3, [r3, #52]	; 0x34
   26a6c:	ubfx	r3, r3, #4, #1
   26a70:	uxtb	r3, r3
   26a74:	cmp	r3, #0
   26a78:	beq	26d2c <__assert_fail@plt+0x15a3c>
   26a7c:	ldr	r3, [fp, #-16]
   26a80:	ldrb	r3, [r3, #52]	; 0x34
   26a84:	bic	r3, r3, #127	; 0x7f
   26a88:	uxtb	r3, r3
   26a8c:	cmp	r3, #0
   26a90:	beq	26ab0 <__assert_fail@plt+0x157c0>
   26a94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26a98:	ldr	r1, [fp, #-16]
   26a9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   26aa0:	bl	26ea4 <__assert_fail@plt+0x15bb4>
   26aa4:	mov	r3, r0
   26aa8:	cmp	r3, #0
   26aac:	beq	26d2c <__assert_fail@plt+0x15a3c>
   26ab0:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   26ab4:	eor	r3, r3, #1
   26ab8:	uxtb	r3, r3
   26abc:	cmp	r3, #0
   26ac0:	beq	26acc <__assert_fail@plt+0x157dc>
   26ac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ac8:	b	26d74 <__assert_fail@plt+0x15a84>
   26acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ad0:	str	r3, [fp, #-12]
   26ad4:	mov	r3, #1
   26ad8:	str	r3, [fp, #-8]
   26adc:	b	26d2c <__assert_fail@plt+0x15a3c>
   26ae0:	ldr	r3, [fp, #-16]
   26ae4:	str	r3, [fp, #-36]	; 0xffffffdc
   26ae8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26aec:	ldr	r3, [r3, #40]	; 0x28
   26af0:	add	r3, r3, #1
   26af4:	str	r3, [fp, #-40]	; 0xffffffd8
   26af8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26afc:	ldr	r3, [r3, #36]	; 0x24
   26b00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26b04:	cmp	r2, r3
   26b08:	movge	r3, #1
   26b0c:	movlt	r3, #0
   26b10:	uxtb	r3, r3
   26b14:	cmp	r3, #0
   26b18:	beq	26b34 <__assert_fail@plt+0x15844>
   26b1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26b20:	ldr	r2, [r3, #36]	; 0x24
   26b24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26b28:	ldr	r3, [r3, #48]	; 0x30
   26b2c:	cmp	r2, r3
   26b30:	blt	26b70 <__assert_fail@plt+0x15880>
   26b34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26b38:	ldr	r3, [r3, #28]
   26b3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26b40:	cmp	r2, r3
   26b44:	movge	r3, #1
   26b48:	movlt	r3, #0
   26b4c:	uxtb	r3, r3
   26b50:	cmp	r3, #0
   26b54:	beq	26bb8 <__assert_fail@plt+0x158c8>
   26b58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26b5c:	ldr	r2, [r3, #28]
   26b60:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26b64:	ldr	r3, [r3, #48]	; 0x30
   26b68:	cmp	r2, r3
   26b6c:	bge	26bb8 <__assert_fail@plt+0x158c8>
   26b70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26b74:	add	r3, r3, #1
   26b78:	mov	r1, r3
   26b7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   26b80:	bl	2eab8 <__assert_fail@plt+0x1d7c8>
   26b84:	mov	r3, r0
   26b88:	str	r3, [fp, #-64]	; 0xffffffc0
   26b8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26b90:	cmp	r3, #0
   26b94:	movne	r3, #1
   26b98:	moveq	r3, #0
   26b9c:	uxtb	r3, r3
   26ba0:	cmp	r3, #0
   26ba4:	beq	26bb8 <__assert_fail@plt+0x158c8>
   26ba8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26bac:	cmp	r3, #12
   26bb0:	mvn	r3, #1
   26bb4:	b	26d74 <__assert_fail@plt+0x15a84>
   26bb8:	sub	r3, fp, #64	; 0x40
   26bbc:	ldr	r2, [fp, #-16]
   26bc0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   26bc4:	mov	r0, r3
   26bc8:	bl	2a240 <__assert_fail@plt+0x18f50>
   26bcc:	str	r0, [fp, #-16]
   26bd0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26bd4:	ldr	r3, [r3, #100]	; 0x64
   26bd8:	cmp	r3, #0
   26bdc:	beq	26bf8 <__assert_fail@plt+0x15908>
   26be0:	sub	r3, fp, #64	; 0x40
   26be4:	ldr	r2, [fp, #-16]
   26be8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   26bec:	mov	r0, r3
   26bf0:	bl	2a3f8 <__assert_fail@plt+0x19108>
   26bf4:	str	r0, [fp, #-16]
   26bf8:	ldr	r3, [fp, #-16]
   26bfc:	cmp	r3, #0
   26c00:	bne	26c78 <__assert_fail@plt+0x15988>
   26c04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26c08:	cmp	r3, #0
   26c0c:	movne	r3, #1
   26c10:	moveq	r3, #0
   26c14:	uxtb	r3, r3
   26c18:	cmp	r3, #0
   26c1c:	beq	26c28 <__assert_fail@plt+0x15938>
   26c20:	mvn	r3, #1
   26c24:	b	26d74 <__assert_fail@plt+0x15a84>
   26c28:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26c2c:	ldr	r3, [r3, #100]	; 0x64
   26c30:	cmp	r3, #0
   26c34:	beq	26d4c <__assert_fail@plt+0x15a5c>
   26c38:	ldr	r3, [fp, #-8]
   26c3c:	cmp	r3, #0
   26c40:	beq	26c58 <__assert_fail@plt+0x15968>
   26c44:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   26c48:	eor	r3, r3, #1
   26c4c:	uxtb	r3, r3
   26c50:	cmp	r3, #0
   26c54:	bne	26d4c <__assert_fail@plt+0x15a5c>
   26c58:	sub	r3, fp, #64	; 0x40
   26c5c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   26c60:	mov	r0, r3
   26c64:	bl	2a6d0 <__assert_fail@plt+0x193e0>
   26c68:	str	r0, [fp, #-16]
   26c6c:	ldr	r3, [fp, #-16]
   26c70:	cmp	r3, #0
   26c74:	beq	26d4c <__assert_fail@plt+0x15a5c>
   26c78:	ldrb	r3, [fp, #-17]	; 0xffffffef
   26c7c:	cmp	r3, #0
   26c80:	beq	26ca8 <__assert_fail@plt+0x159b8>
   26c84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26c88:	ldr	r3, [fp, #-16]
   26c8c:	cmp	r2, r3
   26c90:	bne	26ca0 <__assert_fail@plt+0x159b0>
   26c94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26c98:	str	r3, [fp, #-24]	; 0xffffffe8
   26c9c:	b	26ca8 <__assert_fail@plt+0x159b8>
   26ca0:	mov	r3, #0
   26ca4:	strb	r3, [fp, #-17]	; 0xffffffef
   26ca8:	ldr	r3, [fp, #-16]
   26cac:	ldrb	r3, [r3, #52]	; 0x34
   26cb0:	and	r3, r3, #16
   26cb4:	uxtb	r3, r3
   26cb8:	cmp	r3, #0
   26cbc:	beq	26d2c <__assert_fail@plt+0x15a3c>
   26cc0:	ldr	r3, [fp, #-16]
   26cc4:	ldrb	r3, [r3, #52]	; 0x34
   26cc8:	bic	r3, r3, #127	; 0x7f
   26ccc:	uxtb	r3, r3
   26cd0:	cmp	r3, #0
   26cd4:	beq	26cfc <__assert_fail@plt+0x15a0c>
   26cd8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26cdc:	ldr	r3, [r3, #40]	; 0x28
   26ce0:	mov	r2, r3
   26ce4:	ldr	r1, [fp, #-16]
   26ce8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   26cec:	bl	26ea4 <__assert_fail@plt+0x15bb4>
   26cf0:	mov	r3, r0
   26cf4:	cmp	r3, #0
   26cf8:	beq	26d2c <__assert_fail@plt+0x15a3c>
   26cfc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26d00:	ldr	r3, [r3, #40]	; 0x28
   26d04:	str	r3, [fp, #-12]
   26d08:	mov	r3, #1
   26d0c:	str	r3, [fp, #-8]
   26d10:	mov	r3, #0
   26d14:	str	r3, [fp, #-80]	; 0xffffffb0
   26d18:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   26d1c:	eor	r3, r3, #1
   26d20:	uxtb	r3, r3
   26d24:	cmp	r3, #0
   26d28:	bne	26d48 <__assert_fail@plt+0x15a58>
   26d2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26d30:	ldr	r2, [r3, #56]	; 0x38
   26d34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26d38:	ldr	r3, [r3, #40]	; 0x28
   26d3c:	cmp	r2, r3
   26d40:	bgt	26ae0 <__assert_fail@plt+0x157f0>
   26d44:	b	26d4c <__assert_fail@plt+0x15a5c>
   26d48:	nop	{0}
   26d4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26d50:	cmp	r3, #0
   26d54:	beq	26d70 <__assert_fail@plt+0x15a80>
   26d58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26d5c:	ldr	r2, [r3]
   26d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26d64:	add	r2, r2, r3
   26d68:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26d6c:	str	r2, [r3]
   26d70:	ldr	r3, [fp, #-12]
   26d74:	mov	r0, r3
   26d78:	sub	sp, fp, #4
   26d7c:	ldr	fp, [sp]
   26d80:	add	sp, sp, #4
   26d84:	pop	{pc}		; (ldr pc, [sp], #4)
   26d88:	push	{fp}		; (str fp, [sp, #-4]!)
   26d8c:	add	fp, sp, #0
   26d90:	sub	sp, sp, #28
   26d94:	str	r0, [fp, #-16]
   26d98:	str	r1, [fp, #-20]	; 0xffffffec
   26d9c:	str	r2, [fp, #-24]	; 0xffffffe8
   26da0:	ldr	r3, [fp, #-16]
   26da4:	ldr	r2, [r3]
   26da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   26dac:	lsl	r3, r3, #3
   26db0:	add	r3, r2, r3
   26db4:	ldrb	r3, [r3, #4]
   26db8:	str	r3, [fp, #-8]
   26dbc:	ldr	r3, [fp, #-16]
   26dc0:	ldr	r2, [r3]
   26dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26dc8:	lsl	r3, r3, #3
   26dcc:	add	r3, r2, r3
   26dd0:	ldr	r3, [r3, #4]
   26dd4:	ubfx	r3, r3, #8, #10
   26dd8:	uxth	r3, r3
   26ddc:	str	r3, [fp, #-12]
   26de0:	ldr	r3, [fp, #-8]
   26de4:	cmp	r3, #2
   26de8:	beq	26df4 <__assert_fail@plt+0x15b04>
   26dec:	mov	r3, #0
   26df0:	b	26e94 <__assert_fail@plt+0x15ba4>
   26df4:	ldr	r3, [fp, #-12]
   26df8:	cmp	r3, #0
   26dfc:	bne	26e08 <__assert_fail@plt+0x15b18>
   26e00:	mov	r3, #1
   26e04:	b	26e94 <__assert_fail@plt+0x15ba4>
   26e08:	ldr	r3, [fp, #-12]
   26e0c:	and	r3, r3, #4
   26e10:	cmp	r3, #0
   26e14:	beq	26e28 <__assert_fail@plt+0x15b38>
   26e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26e1c:	and	r3, r3, #1
   26e20:	cmp	r3, #0
   26e24:	beq	26e88 <__assert_fail@plt+0x15b98>
   26e28:	ldr	r3, [fp, #-12]
   26e2c:	and	r3, r3, #8
   26e30:	cmp	r3, #0
   26e34:	beq	26e48 <__assert_fail@plt+0x15b58>
   26e38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26e3c:	and	r3, r3, #1
   26e40:	cmp	r3, #0
   26e44:	bne	26e88 <__assert_fail@plt+0x15b98>
   26e48:	ldr	r3, [fp, #-12]
   26e4c:	and	r3, r3, #32
   26e50:	cmp	r3, #0
   26e54:	beq	26e68 <__assert_fail@plt+0x15b78>
   26e58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26e5c:	and	r3, r3, #2
   26e60:	cmp	r3, #0
   26e64:	beq	26e88 <__assert_fail@plt+0x15b98>
   26e68:	ldr	r3, [fp, #-12]
   26e6c:	and	r3, r3, #128	; 0x80
   26e70:	cmp	r3, #0
   26e74:	beq	26e90 <__assert_fail@plt+0x15ba0>
   26e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26e7c:	and	r3, r3, #8
   26e80:	cmp	r3, #0
   26e84:	bne	26e90 <__assert_fail@plt+0x15ba0>
   26e88:	mov	r3, #0
   26e8c:	b	26e94 <__assert_fail@plt+0x15ba4>
   26e90:	mov	r3, #1
   26e94:	mov	r0, r3
   26e98:	add	sp, fp, #0
   26e9c:	pop	{fp}		; (ldr fp, [sp], #4)
   26ea0:	bx	lr
   26ea4:	str	fp, [sp, #-8]!
   26ea8:	str	lr, [sp, #4]
   26eac:	add	fp, sp, #4
   26eb0:	sub	sp, sp, #24
   26eb4:	str	r0, [fp, #-16]
   26eb8:	str	r1, [fp, #-20]	; 0xffffffec
   26ebc:	str	r2, [fp, #-24]	; 0xffffffe8
   26ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ec4:	ldrb	r3, [r3, #52]	; 0x34
   26ec8:	and	r3, r3, #16
   26ecc:	uxtb	r3, r3
   26ed0:	cmp	r3, #0
   26ed4:	ldr	r0, [fp, #-16]
   26ed8:	ldr	r3, [fp, #-16]
   26edc:	ldr	r3, [r3, #88]	; 0x58
   26ee0:	mov	r2, r3
   26ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26ee8:	bl	18d10 <__assert_fail@plt+0x7a20>
   26eec:	str	r0, [fp, #-12]
   26ef0:	mov	r3, #0
   26ef4:	str	r3, [fp, #-8]
   26ef8:	b	26f5c <__assert_fail@plt+0x15c6c>
   26efc:	ldr	r3, [fp, #-16]
   26f00:	ldr	r0, [r3, #84]	; 0x54
   26f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   26f08:	ldr	r2, [r3, #12]
   26f0c:	ldr	r3, [fp, #-8]
   26f10:	lsl	r3, r3, #2
   26f14:	add	r3, r2, r3
   26f18:	ldr	r3, [r3]
   26f1c:	ldr	r2, [fp, #-12]
   26f20:	mov	r1, r3
   26f24:	bl	26d88 <__assert_fail@plt+0x15a98>
   26f28:	mov	r3, r0
   26f2c:	cmp	r3, #0
   26f30:	beq	26f50 <__assert_fail@plt+0x15c60>
   26f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   26f38:	ldr	r2, [r3, #12]
   26f3c:	ldr	r3, [fp, #-8]
   26f40:	lsl	r3, r3, #2
   26f44:	add	r3, r2, r3
   26f48:	ldr	r3, [r3]
   26f4c:	b	26f74 <__assert_fail@plt+0x15c84>
   26f50:	ldr	r3, [fp, #-8]
   26f54:	add	r3, r3, #1
   26f58:	str	r3, [fp, #-8]
   26f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26f60:	ldr	r3, [r3, #8]
   26f64:	ldr	r2, [fp, #-8]
   26f68:	cmp	r2, r3
   26f6c:	blt	26efc <__assert_fail@plt+0x15c0c>
   26f70:	mov	r3, #0
   26f74:	mov	r0, r3
   26f78:	sub	sp, fp, #4
   26f7c:	ldr	fp, [sp]
   26f80:	add	sp, sp, #4
   26f84:	pop	{pc}		; (ldr pc, [sp], #4)
   26f88:	str	fp, [sp, #-8]!
   26f8c:	str	lr, [sp, #4]
   26f90:	add	fp, sp, #4
   26f94:	sub	sp, sp, #88	; 0x58
   26f98:	str	r0, [fp, #-64]	; 0xffffffc0
   26f9c:	str	r1, [fp, #-68]	; 0xffffffbc
   26fa0:	str	r2, [fp, #-72]	; 0xffffffb8
   26fa4:	str	r3, [fp, #-76]	; 0xffffffb4
   26fa8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26fac:	ldr	r3, [r3, #84]	; 0x54
   26fb0:	str	r3, [fp, #-20]	; 0xffffffec
   26fb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26fb8:	ldr	r2, [r3]
   26fbc:	ldr	r3, [fp, #8]
   26fc0:	lsl	r3, r3, #3
   26fc4:	add	r3, r2, r3
   26fc8:	ldrb	r3, [r3, #4]
   26fcc:	and	r3, r3, #8
   26fd0:	cmp	r3, #0
   26fd4:	beq	2716c <__assert_fail@plt+0x15e7c>
   26fd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26fdc:	ldr	r2, [r3, #100]	; 0x64
   26fe0:	ldr	r3, [fp, #4]
   26fe4:	ldr	r3, [r3]
   26fe8:	lsl	r3, r3, #2
   26fec:	add	r3, r2, r3
   26ff0:	ldr	r3, [r3]
   26ff4:	add	r3, r3, #4
   26ff8:	str	r3, [fp, #-24]	; 0xffffffe8
   26ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   27000:	ldr	r1, [r3, #20]
   27004:	ldr	r2, [fp, #8]
   27008:	mov	r3, r2
   2700c:	lsl	r3, r3, #1
   27010:	add	r3, r3, r2
   27014:	lsl	r3, r3, #2
   27018:	add	r3, r1, r3
   2701c:	str	r3, [fp, #-28]	; 0xffffffe4
   27020:	ldr	r1, [fp, #8]
   27024:	ldr	r0, [fp, #12]
   27028:	bl	1a314 <__assert_fail@plt+0x9024>
   2702c:	mov	r3, r0
   27030:	cmp	r3, #0
   27034:	bne	27068 <__assert_fail@plt+0x15d78>
   27038:	ldr	r1, [fp, #8]
   2703c:	ldr	r0, [fp, #12]
   27040:	bl	19eec <__assert_fail@plt+0x8bfc>
   27044:	mov	r3, r0
   27048:	strb	r3, [fp, #-29]	; 0xffffffe3
   2704c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   27050:	eor	r3, r3, #1
   27054:	uxtb	r3, r3
   27058:	cmp	r3, #0
   2705c:	beq	27068 <__assert_fail@plt+0x15d78>
   27060:	mvn	r3, #1
   27064:	b	27504 <__assert_fail@plt+0x16214>
   27068:	mvn	r3, #0
   2706c:	str	r3, [fp, #-8]
   27070:	mov	r3, #0
   27074:	str	r3, [fp, #-12]
   27078:	b	27148 <__assert_fail@plt+0x15e58>
   2707c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27080:	ldr	r2, [r3, #8]
   27084:	ldr	r3, [fp, #-12]
   27088:	lsl	r3, r3, #2
   2708c:	add	r3, r2, r3
   27090:	ldr	r3, [r3]
   27094:	str	r3, [fp, #-36]	; 0xffffffdc
   27098:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2709c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   270a0:	bl	1a314 <__assert_fail@plt+0x9024>
   270a4:	mov	r3, r0
   270a8:	cmp	r3, #0
   270ac:	beq	27138 <__assert_fail@plt+0x15e48>
   270b0:	ldr	r3, [fp, #-8]
   270b4:	cmn	r3, #1
   270b8:	bne	270c8 <__assert_fail@plt+0x15dd8>
   270bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   270c0:	str	r3, [fp, #-8]
   270c4:	b	2713c <__assert_fail@plt+0x15e4c>
   270c8:	ldr	r1, [fp, #-8]
   270cc:	ldr	r0, [fp, #12]
   270d0:	bl	1a314 <__assert_fail@plt+0x9024>
   270d4:	mov	r3, r0
   270d8:	cmp	r3, #0
   270dc:	beq	270e8 <__assert_fail@plt+0x15df8>
   270e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   270e4:	b	27504 <__assert_fail@plt+0x16214>
   270e8:	ldr	r3, [fp, #16]
   270ec:	cmp	r3, #0
   270f0:	beq	27160 <__assert_fail@plt+0x15e70>
   270f4:	ldr	r3, [fp, #4]
   270f8:	ldr	r1, [r3]
   270fc:	ldr	r3, [fp, #12]
   27100:	str	r3, [sp, #8]
   27104:	ldr	r3, [fp, #-76]	; 0xffffffb4
   27108:	str	r3, [sp, #4]
   2710c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27110:	str	r3, [sp]
   27114:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27118:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2711c:	ldr	r0, [fp, #16]
   27120:	bl	27518 <__assert_fail@plt+0x16228>
   27124:	mov	r3, r0
   27128:	cmp	r3, #0
   2712c:	beq	27160 <__assert_fail@plt+0x15e70>
   27130:	mvn	r3, #1
   27134:	b	27504 <__assert_fail@plt+0x16214>
   27138:	nop	{0}
   2713c:	ldr	r3, [fp, #-12]
   27140:	add	r3, r3, #1
   27144:	str	r3, [fp, #-12]
   27148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2714c:	ldr	r3, [r3, #4]
   27150:	ldr	r2, [fp, #-12]
   27154:	cmp	r2, r3
   27158:	blt	2707c <__assert_fail@plt+0x15d8c>
   2715c:	b	27164 <__assert_fail@plt+0x15e74>
   27160:	nop	{0}
   27164:	ldr	r3, [fp, #-8]
   27168:	b	27504 <__assert_fail@plt+0x16214>
   2716c:	mov	r3, #0
   27170:	str	r3, [fp, #-16]
   27174:	ldr	r3, [fp, #-20]	; 0xffffffec
   27178:	ldr	r2, [r3]
   2717c:	ldr	r3, [fp, #8]
   27180:	lsl	r3, r3, #3
   27184:	add	r3, r2, r3
   27188:	ldrb	r3, [r3, #4]
   2718c:	str	r3, [fp, #-40]	; 0xffffffd8
   27190:	ldr	r3, [fp, #-20]	; 0xffffffec
   27194:	ldr	r2, [r3]
   27198:	ldr	r3, [fp, #8]
   2719c:	lsl	r3, r3, #3
   271a0:	add	r3, r2, r3
   271a4:	ldrb	r3, [r3, #6]
   271a8:	and	r3, r3, #16
   271ac:	uxtb	r3, r3
   271b0:	cmp	r3, #0
   271b4:	beq	271d8 <__assert_fail@plt+0x15ee8>
   271b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   271bc:	ldr	r3, [fp, #4]
   271c0:	ldr	r3, [r3]
   271c4:	ldr	r1, [fp, #8]
   271c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   271cc:	bl	2e308 <__assert_fail@plt+0x1d018>
   271d0:	str	r0, [fp, #-16]
   271d4:	b	273d4 <__assert_fail@plt+0x160e4>
   271d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   271dc:	cmp	r3, #4
   271e0:	bne	273d4 <__assert_fail@plt+0x160e4>
   271e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   271e8:	ldr	r2, [r3]
   271ec:	ldr	r3, [fp, #8]
   271f0:	lsl	r3, r3, #3
   271f4:	add	r3, r2, r3
   271f8:	ldr	r3, [r3]
   271fc:	add	r3, r3, #1
   27200:	str	r3, [fp, #-44]	; 0xffffffd4
   27204:	ldr	r2, [fp, #-44]	; 0xffffffd4
   27208:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2720c:	cmp	r2, r3
   27210:	bge	27244 <__assert_fail@plt+0x15f54>
   27214:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27218:	lsl	r3, r3, #3
   2721c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27220:	add	r3, r2, r3
   27224:	ldr	r2, [r3, #4]
   27228:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2722c:	lsl	r3, r3, #3
   27230:	ldr	r1, [fp, #-72]	; 0xffffffb8
   27234:	add	r3, r1, r3
   27238:	ldr	r3, [r3]
   2723c:	sub	r3, r2, r3
   27240:	str	r3, [fp, #-16]
   27244:	ldr	r3, [fp, #16]
   27248:	cmp	r3, #0
   2724c:	beq	2732c <__assert_fail@plt+0x1603c>
   27250:	ldr	r2, [fp, #-44]	; 0xffffffd4
   27254:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27258:	cmp	r2, r3
   2725c:	bge	27298 <__assert_fail@plt+0x15fa8>
   27260:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27264:	lsl	r3, r3, #3
   27268:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2726c:	add	r3, r2, r3
   27270:	ldr	r3, [r3]
   27274:	cmn	r3, #1
   27278:	beq	27298 <__assert_fail@plt+0x15fa8>
   2727c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27280:	lsl	r3, r3, #3
   27284:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27288:	add	r3, r2, r3
   2728c:	ldr	r3, [r3, #4]
   27290:	cmn	r3, #1
   27294:	bne	272a0 <__assert_fail@plt+0x15fb0>
   27298:	mvn	r3, #0
   2729c:	b	27504 <__assert_fail@plt+0x16214>
   272a0:	ldr	r3, [fp, #-16]
   272a4:	cmp	r3, #0
   272a8:	beq	2732c <__assert_fail@plt+0x1603c>
   272ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   272b0:	ldr	r3, [r3, #4]
   272b4:	str	r3, [fp, #-48]	; 0xffffffd0
   272b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   272bc:	ldr	r2, [r3, #28]
   272c0:	ldr	r3, [fp, #4]
   272c4:	ldr	r3, [r3]
   272c8:	sub	r3, r2, r3
   272cc:	ldr	r2, [fp, #-16]
   272d0:	cmp	r2, r3
   272d4:	bgt	27324 <__assert_fail@plt+0x16034>
   272d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   272dc:	lsl	r3, r3, #3
   272e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   272e4:	add	r3, r2, r3
   272e8:	ldr	r3, [r3]
   272ec:	mov	r2, r3
   272f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   272f4:	add	r0, r3, r2
   272f8:	ldr	r3, [fp, #4]
   272fc:	ldr	r3, [r3]
   27300:	mov	r2, r3
   27304:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27308:	add	r3, r3, r2
   2730c:	ldr	r2, [fp, #-16]
   27310:	mov	r1, r3
   27314:	bl	110bc <memcmp@plt>
   27318:	mov	r3, r0
   2731c:	cmp	r3, #0
   27320:	beq	2732c <__assert_fail@plt+0x1603c>
   27324:	mvn	r3, #0
   27328:	b	27504 <__assert_fail@plt+0x16214>
   2732c:	ldr	r3, [fp, #-16]
   27330:	cmp	r3, #0
   27334:	bne	273d4 <__assert_fail@plt+0x160e4>
   27338:	ldr	r1, [fp, #8]
   2733c:	ldr	r0, [fp, #12]
   27340:	bl	19eec <__assert_fail@plt+0x8bfc>
   27344:	mov	r3, r0
   27348:	strb	r3, [fp, #-49]	; 0xffffffcf
   2734c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   27350:	eor	r3, r3, #1
   27354:	uxtb	r3, r3
   27358:	cmp	r3, #0
   2735c:	beq	27368 <__assert_fail@plt+0x16078>
   27360:	mvn	r3, #1
   27364:	b	27504 <__assert_fail@plt+0x16214>
   27368:	ldr	r3, [fp, #-20]	; 0xffffffec
   2736c:	ldr	r1, [r3, #20]
   27370:	ldr	r2, [fp, #8]
   27374:	mov	r3, r2
   27378:	lsl	r3, r3, #1
   2737c:	add	r3, r3, r2
   27380:	lsl	r3, r3, #2
   27384:	add	r3, r1, r3
   27388:	ldr	r3, [r3, #8]
   2738c:	ldr	r3, [r3]
   27390:	str	r3, [fp, #-56]	; 0xffffffc8
   27394:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27398:	ldr	r2, [r3, #100]	; 0x64
   2739c:	ldr	r3, [fp, #4]
   273a0:	ldr	r3, [r3]
   273a4:	lsl	r3, r3, #2
   273a8:	add	r3, r2, r3
   273ac:	ldr	r3, [r3]
   273b0:	add	r3, r3, #4
   273b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   273b8:	mov	r0, r3
   273bc:	bl	1a314 <__assert_fail@plt+0x9024>
   273c0:	mov	r3, r0
   273c4:	cmp	r3, #0
   273c8:	beq	273d4 <__assert_fail@plt+0x160e4>
   273cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   273d0:	b	27504 <__assert_fail@plt+0x16214>
   273d4:	ldr	r3, [fp, #-16]
   273d8:	cmp	r3, #0
   273dc:	bne	27414 <__assert_fail@plt+0x16124>
   273e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   273e4:	ldr	r2, [r3]
   273e8:	ldr	r3, [fp, #8]
   273ec:	lsl	r3, r3, #3
   273f0:	add	r1, r2, r3
   273f4:	ldr	r3, [fp, #4]
   273f8:	ldr	r3, [r3]
   273fc:	mov	r2, r3
   27400:	ldr	r0, [fp, #-64]	; 0xffffffc0
   27404:	bl	2e878 <__assert_fail@plt+0x1d588>
   27408:	mov	r3, r0
   2740c:	cmp	r3, #0
   27410:	beq	27500 <__assert_fail@plt+0x16210>
   27414:	ldr	r3, [fp, #-20]	; 0xffffffec
   27418:	ldr	r2, [r3, #12]
   2741c:	ldr	r3, [fp, #8]
   27420:	lsl	r3, r3, #2
   27424:	add	r3, r2, r3
   27428:	ldr	r3, [r3]
   2742c:	str	r3, [fp, #-60]	; 0xffffffc4
   27430:	ldr	r3, [fp, #-16]
   27434:	cmp	r3, #0
   27438:	bne	2744c <__assert_fail@plt+0x1615c>
   2743c:	ldr	r3, [fp, #4]
   27440:	ldr	r3, [r3]
   27444:	add	r3, r3, #1
   27448:	b	2745c <__assert_fail@plt+0x1616c>
   2744c:	ldr	r3, [fp, #4]
   27450:	ldr	r2, [r3]
   27454:	ldr	r3, [fp, #-16]
   27458:	add	r3, r2, r3
   2745c:	ldr	r2, [fp, #4]
   27460:	str	r3, [r2]
   27464:	ldr	r3, [fp, #16]
   27468:	cmp	r3, #0
   2746c:	beq	274ec <__assert_fail@plt+0x161fc>
   27470:	ldr	r3, [fp, #4]
   27474:	ldr	r2, [r3]
   27478:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2747c:	ldr	r3, [r3, #92]	; 0x5c
   27480:	cmp	r2, r3
   27484:	bgt	274e4 <__assert_fail@plt+0x161f4>
   27488:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2748c:	ldr	r2, [r3, #100]	; 0x64
   27490:	ldr	r3, [fp, #4]
   27494:	ldr	r3, [r3]
   27498:	lsl	r3, r3, #2
   2749c:	add	r3, r2, r3
   274a0:	ldr	r3, [r3]
   274a4:	cmp	r3, #0
   274a8:	beq	274e4 <__assert_fail@plt+0x161f4>
   274ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   274b0:	ldr	r2, [r3, #100]	; 0x64
   274b4:	ldr	r3, [fp, #4]
   274b8:	ldr	r3, [r3]
   274bc:	lsl	r3, r3, #2
   274c0:	add	r3, r2, r3
   274c4:	ldr	r3, [r3]
   274c8:	add	r3, r3, #4
   274cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   274d0:	mov	r0, r3
   274d4:	bl	1a314 <__assert_fail@plt+0x9024>
   274d8:	mov	r3, r0
   274dc:	cmp	r3, #0
   274e0:	bne	274ec <__assert_fail@plt+0x161fc>
   274e4:	mvn	r3, #0
   274e8:	b	27504 <__assert_fail@plt+0x16214>
   274ec:	ldr	r3, [fp, #12]
   274f0:	mov	r2, #0
   274f4:	str	r2, [r3, #4]
   274f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   274fc:	b	27504 <__assert_fail@plt+0x16214>
   27500:	mvn	r3, #0
   27504:	mov	r0, r3
   27508:	sub	sp, fp, #4
   2750c:	ldr	fp, [sp]
   27510:	add	sp, sp, #4
   27514:	pop	{pc}		; (ldr pc, [sp], #4)
   27518:	str	r4, [sp, #-12]!
   2751c:	str	fp, [sp, #4]
   27520:	str	lr, [sp, #8]
   27524:	add	fp, sp, #8
   27528:	sub	sp, sp, #36	; 0x24
   2752c:	str	r0, [fp, #-32]	; 0xffffffe0
   27530:	str	r1, [fp, #-36]	; 0xffffffdc
   27534:	str	r2, [fp, #-40]	; 0xffffffd8
   27538:	str	r3, [fp, #-44]	; 0xffffffd4
   2753c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27540:	ldr	r3, [r3]
   27544:	add	r1, r3, #1
   27548:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2754c:	str	r1, [r2]
   27550:	str	r3, [fp, #-16]
   27554:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27558:	ldr	r2, [r3]
   2755c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27560:	ldr	r3, [r3, #4]
   27564:	cmp	r2, r3
   27568:	bne	275d0 <__assert_fail@plt+0x162e0>
   2756c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27570:	ldr	r0, [r3, #8]
   27574:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27578:	ldr	r3, [r3, #4]
   2757c:	mov	r2, r3
   27580:	mov	r3, r2
   27584:	lsl	r3, r3, #1
   27588:	add	r3, r3, r2
   2758c:	lsl	r3, r3, #4
   27590:	mov	r1, r3
   27594:	bl	313dc <__assert_fail@plt+0x200ec>
   27598:	str	r0, [fp, #-20]	; 0xffffffec
   2759c:	ldr	r3, [fp, #-20]	; 0xffffffec
   275a0:	cmp	r3, #0
   275a4:	bne	275b0 <__assert_fail@plt+0x162c0>
   275a8:	mov	r3, #12
   275ac:	b	2773c <__assert_fail@plt+0x1644c>
   275b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   275b4:	ldr	r3, [r3, #4]
   275b8:	lsl	r2, r3, #1
   275bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   275c0:	str	r2, [r3, #4]
   275c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   275c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   275cc:	str	r2, [r3, #8]
   275d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   275d4:	ldr	r1, [r3, #8]
   275d8:	ldr	r2, [fp, #-16]
   275dc:	mov	r3, r2
   275e0:	lsl	r3, r3, #1
   275e4:	add	r3, r3, r2
   275e8:	lsl	r3, r3, #3
   275ec:	add	r3, r1, r3
   275f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   275f4:	str	r2, [r3]
   275f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   275fc:	ldr	r1, [r3, #8]
   27600:	ldr	r2, [fp, #-16]
   27604:	mov	r3, r2
   27608:	lsl	r3, r3, #1
   2760c:	add	r3, r3, r2
   27610:	lsl	r3, r3, #3
   27614:	add	r3, r1, r3
   27618:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2761c:	str	r2, [r3, #4]
   27620:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27624:	lsl	r0, r3, #4
   27628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2762c:	ldr	r1, [r3, #8]
   27630:	ldr	r2, [fp, #-16]
   27634:	mov	r3, r2
   27638:	lsl	r3, r3, #1
   2763c:	add	r3, r3, r2
   27640:	lsl	r3, r3, #3
   27644:	add	r4, r1, r3
   27648:	bl	3134c <__assert_fail@plt+0x2005c>
   2764c:	mov	r3, r0
   27650:	str	r3, [r4, #8]
   27654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27658:	ldr	r1, [r3, #8]
   2765c:	ldr	r2, [fp, #-16]
   27660:	mov	r3, r2
   27664:	lsl	r3, r3, #1
   27668:	add	r3, r3, r2
   2766c:	lsl	r3, r3, #3
   27670:	add	r3, r1, r3
   27674:	ldr	r3, [r3, #8]
   27678:	cmp	r3, #0
   2767c:	bne	27688 <__assert_fail@plt+0x16398>
   27680:	mov	r3, #12
   27684:	b	2773c <__assert_fail@plt+0x1644c>
   27688:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2768c:	ldr	r1, [r3, #8]
   27690:	ldr	r2, [fp, #-16]
   27694:	mov	r3, r2
   27698:	lsl	r3, r3, #1
   2769c:	add	r3, r3, r2
   276a0:	lsl	r3, r3, #3
   276a4:	add	r3, r1, r3
   276a8:	ldr	r0, [r3, #8]
   276ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   276b0:	lsl	r3, r3, #3
   276b4:	mov	r2, r3
   276b8:	ldr	r1, [fp, #4]
   276bc:	bl	11074 <memcpy@plt>
   276c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   276c4:	ldr	r1, [r3, #8]
   276c8:	ldr	r2, [fp, #-16]
   276cc:	mov	r3, r2
   276d0:	lsl	r3, r3, #1
   276d4:	add	r3, r3, r2
   276d8:	lsl	r3, r3, #3
   276dc:	add	r3, r1, r3
   276e0:	ldr	r2, [r3, #8]
   276e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   276e8:	lsl	r3, r3, #3
   276ec:	add	r0, r2, r3
   276f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   276f4:	lsl	r3, r3, #3
   276f8:	mov	r2, r3
   276fc:	ldr	r1, [fp, #8]
   27700:	bl	11074 <memcpy@plt>
   27704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27708:	ldr	r1, [r3, #8]
   2770c:	ldr	r2, [fp, #-16]
   27710:	mov	r3, r2
   27714:	lsl	r3, r3, #1
   27718:	add	r3, r3, r2
   2771c:	lsl	r3, r3, #3
   27720:	add	r3, r1, r3
   27724:	add	r3, r3, #12
   27728:	ldr	r1, [fp, #12]
   2772c:	mov	r0, r3
   27730:	bl	19160 <__assert_fail@plt+0x7e70>
   27734:	str	r0, [fp, #-24]	; 0xffffffe8
   27738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2773c:	mov	r0, r3
   27740:	sub	sp, fp, #8
   27744:	ldr	r4, [sp]
   27748:	ldr	fp, [sp, #4]
   2774c:	add	sp, sp, #8
   27750:	pop	{pc}		; (ldr pc, [sp], #4)
   27754:	str	fp, [sp, #-8]!
   27758:	str	lr, [sp, #4]
   2775c:	add	fp, sp, #4
   27760:	sub	sp, sp, #24
   27764:	str	r0, [fp, #-16]
   27768:	str	r1, [fp, #-20]	; 0xffffffec
   2776c:	str	r2, [fp, #-24]	; 0xffffffe8
   27770:	str	r3, [fp, #-28]	; 0xffffffe4
   27774:	ldr	r3, [fp, #-16]
   27778:	cmp	r3, #0
   2777c:	beq	27790 <__assert_fail@plt+0x164a0>
   27780:	ldr	r3, [fp, #-16]
   27784:	ldr	r3, [r3]
   27788:	cmp	r3, #0
   2778c:	bne	27798 <__assert_fail@plt+0x164a8>
   27790:	mvn	r3, #0
   27794:	b	27924 <__assert_fail@plt+0x16634>
   27798:	ldr	r3, [fp, #-16]
   2779c:	ldr	r3, [r3]
   277a0:	sub	r2, r3, #1
   277a4:	ldr	r3, [fp, #-16]
   277a8:	str	r2, [r3]
   277ac:	ldr	r3, [fp, #-16]
   277b0:	ldr	r3, [r3]
   277b4:	str	r3, [fp, #-8]
   277b8:	ldr	r3, [fp, #-16]
   277bc:	ldr	r1, [r3, #8]
   277c0:	ldr	r2, [fp, #-8]
   277c4:	mov	r3, r2
   277c8:	lsl	r3, r3, #1
   277cc:	add	r3, r3, r2
   277d0:	lsl	r3, r3, #3
   277d4:	add	r3, r1, r3
   277d8:	ldr	r2, [r3]
   277dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   277e0:	str	r2, [r3]
   277e4:	ldr	r3, [fp, #-16]
   277e8:	ldr	r1, [r3, #8]
   277ec:	ldr	r2, [fp, #-8]
   277f0:	mov	r3, r2
   277f4:	lsl	r3, r3, #1
   277f8:	add	r3, r3, r2
   277fc:	lsl	r3, r3, #3
   27800:	add	r3, r1, r3
   27804:	ldr	r1, [r3, #8]
   27808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2780c:	lsl	r3, r3, #3
   27810:	mov	r2, r3
   27814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27818:	bl	11074 <memcpy@plt>
   2781c:	ldr	r3, [fp, #-16]
   27820:	ldr	r1, [r3, #8]
   27824:	ldr	r2, [fp, #-8]
   27828:	mov	r3, r2
   2782c:	lsl	r3, r3, #1
   27830:	add	r3, r3, r2
   27834:	lsl	r3, r3, #3
   27838:	add	r3, r1, r3
   2783c:	ldr	r2, [r3, #8]
   27840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27844:	lsl	r3, r3, #3
   27848:	add	r1, r2, r3
   2784c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27850:	lsl	r3, r3, #3
   27854:	mov	r2, r3
   27858:	ldr	r0, [fp, #4]
   2785c:	bl	11074 <memcpy@plt>
   27860:	ldr	r3, [fp, #8]
   27864:	ldr	r3, [r3, #8]
   27868:	mov	r0, r3
   2786c:	bl	31b28 <__assert_fail@plt+0x20838>
   27870:	ldr	r3, [fp, #-16]
   27874:	ldr	r1, [r3, #8]
   27878:	ldr	r2, [fp, #-8]
   2787c:	mov	r3, r2
   27880:	lsl	r3, r3, #1
   27884:	add	r3, r3, r2
   27888:	lsl	r3, r3, #3
   2788c:	add	r3, r1, r3
   27890:	ldr	r3, [r3, #8]
   27894:	mov	r0, r3
   27898:	bl	31b28 <__assert_fail@plt+0x20838>
   2789c:	ldr	r3, [fp, #-16]
   278a0:	ldr	r1, [r3, #8]
   278a4:	ldr	r2, [fp, #-8]
   278a8:	mov	r3, r2
   278ac:	lsl	r3, r3, #1
   278b0:	add	r3, r3, r2
   278b4:	lsl	r3, r3, #3
   278b8:	add	r3, r1, r3
   278bc:	ldr	r2, [fp, #8]
   278c0:	mov	r0, r2
   278c4:	add	r1, r3, #12
   278c8:	ldrd	r2, [r1]
   278cc:	strd	r2, [r0]
   278d0:	ldr	r3, [r1, #8]
   278d4:	str	r3, [r0, #8]
   278d8:	ldr	r3, [fp, #-16]
   278dc:	ldr	r1, [r3, #8]
   278e0:	ldr	r2, [fp, #-8]
   278e4:	mov	r3, r2
   278e8:	lsl	r3, r3, #1
   278ec:	add	r3, r3, r2
   278f0:	lsl	r3, r3, #3
   278f4:	add	r3, r1, r3
   278f8:	ldr	r3, [r3, #4]
   278fc:	cmp	r3, #0
   27900:	ldr	r3, [fp, #-16]
   27904:	ldr	r1, [r3, #8]
   27908:	ldr	r2, [fp, #-8]
   2790c:	mov	r3, r2
   27910:	lsl	r3, r3, #1
   27914:	add	r3, r3, r2
   27918:	lsl	r3, r3, #3
   2791c:	add	r3, r1, r3
   27920:	ldr	r3, [r3, #4]
   27924:	mov	r0, r3
   27928:	sub	sp, fp, #4
   2792c:	ldr	fp, [sp]
   27930:	add	sp, sp, #4
   27934:	pop	{pc}		; (ldr pc, [sp], #4)
   27938:	push	{fp}		; (str fp, [sp, #-4]!)
   2793c:	add	fp, sp, #0
   27940:	sub	sp, sp, #12
   27944:	str	r0, [fp, #-8]
   27948:	str	r1, [fp, #-12]
   2794c:	nop	{0}
   27950:	add	sp, fp, #0
   27954:	pop	{fp}		; (ldr fp, [sp], #4)
   27958:	bx	lr
   2795c:	str	fp, [sp, #-8]!
   27960:	str	lr, [sp, #4]
   27964:	add	fp, sp, #4
   27968:	sub	sp, sp, #8
   2796c:	str	r0, [fp, #-8]
   27970:	ldr	r3, [fp, #-8]
   27974:	ldr	r2, [r3, #8]
   27978:	ldr	r3, [fp, #-8]
   2797c:	add	r3, r3, #12
   27980:	cmp	r2, r3
   27984:	beq	27998 <__assert_fail@plt+0x166a8>
   27988:	ldr	r3, [fp, #-8]
   2798c:	ldr	r3, [r3, #8]
   27990:	mov	r0, r3
   27994:	bl	31b28 <__assert_fail@plt+0x20838>
   27998:	nop	{0}
   2799c:	sub	sp, fp, #4
   279a0:	ldr	fp, [sp]
   279a4:	add	sp, sp, #4
   279a8:	pop	{pc}		; (ldr pc, [sp], #4)
   279ac:	push	{fp}		; (str fp, [sp, #-4]!)
   279b0:	add	fp, sp, #0
   279b4:	sub	sp, sp, #12
   279b8:	str	r0, [fp, #-8]
   279bc:	ldr	r3, [fp, #-8]
   279c0:	mov	r2, #0
   279c4:	str	r2, [r3]
   279c8:	ldr	r3, [fp, #-8]
   279cc:	mov	r2, #16
   279d0:	str	r2, [r3, #4]
   279d4:	ldr	r3, [fp, #-8]
   279d8:	add	r2, r3, #12
   279dc:	ldr	r3, [fp, #-8]
   279e0:	str	r2, [r3, #8]
   279e4:	nop	{0}
   279e8:	add	sp, fp, #0
   279ec:	pop	{fp}		; (ldr fp, [sp], #4)
   279f0:	bx	lr
   279f4:	str	fp, [sp, #-8]!
   279f8:	str	lr, [sp, #4]
   279fc:	add	fp, sp, #4
   27a00:	sub	sp, sp, #8
   27a04:	str	r0, [fp, #-8]
   27a08:	ldr	r3, [fp, #-8]
   27a0c:	ldr	r2, [r3, #8]
   27a10:	ldr	r3, [fp, #-8]
   27a14:	ldr	r3, [r3]
   27a18:	mov	r1, r3
   27a1c:	mov	r0, r2
   27a20:	bl	27938 <__assert_fail@plt+0x16648>
   27a24:	ldr	r0, [fp, #-8]
   27a28:	bl	2795c <__assert_fail@plt+0x1666c>
   27a2c:	ldr	r0, [fp, #-8]
   27a30:	bl	279ac <__assert_fail@plt+0x166bc>
   27a34:	nop	{0}
   27a38:	sub	sp, fp, #4
   27a3c:	ldr	fp, [sp]
   27a40:	add	sp, sp, #4
   27a44:	pop	{pc}		; (ldr pc, [sp], #4)
   27a48:	str	fp, [sp, #-8]!
   27a4c:	str	lr, [sp, #4]
   27a50:	add	fp, sp, #4
   27a54:	sub	sp, sp, #8
   27a58:	str	r0, [fp, #-8]
   27a5c:	ldr	r3, [fp, #-8]
   27a60:	ldr	r2, [r3, #8]
   27a64:	ldr	r3, [fp, #-8]
   27a68:	ldr	r3, [r3]
   27a6c:	mov	r1, r3
   27a70:	mov	r0, r2
   27a74:	bl	27938 <__assert_fail@plt+0x16648>
   27a78:	ldr	r0, [fp, #-8]
   27a7c:	bl	2795c <__assert_fail@plt+0x1666c>
   27a80:	ldr	r3, [fp, #-8]
   27a84:	add	r2, r3, #12
   27a88:	ldr	r3, [fp, #-8]
   27a8c:	str	r2, [r3, #8]
   27a90:	ldr	r3, [fp, #-8]
   27a94:	mov	r2, #0
   27a98:	str	r2, [r3]
   27a9c:	bl	15f34 <__assert_fail@plt+0x4c44>
   27aa0:	mov	r2, r0
   27aa4:	ldr	r3, [fp, #-8]
   27aa8:	str	r2, [r3, #4]
   27aac:	nop	{0}
   27ab0:	sub	sp, fp, #4
   27ab4:	ldr	fp, [sp]
   27ab8:	add	sp, sp, #4
   27abc:	pop	{pc}		; (ldr pc, [sp], #4)
   27ac0:	push	{fp}		; (str fp, [sp, #-4]!)
   27ac4:	add	fp, sp, #0
   27ac8:	sub	sp, sp, #12
   27acc:	str	r0, [fp, #-8]
   27ad0:	ldr	r3, [fp, #-8]
   27ad4:	ldr	r3, [r3, #8]
   27ad8:	mov	r0, r3
   27adc:	add	sp, fp, #0
   27ae0:	pop	{fp}		; (ldr fp, [sp], #4)
   27ae4:	bx	lr
   27ae8:	str	fp, [sp, #-8]!
   27aec:	str	lr, [sp, #4]
   27af0:	add	fp, sp, #4
   27af4:	sub	sp, sp, #16
   27af8:	str	r0, [fp, #-8]
   27afc:	sub	r3, fp, #16
   27b00:	stm	r3, {r1, r2}
   27b04:	ldr	r0, [fp, #-8]
   27b08:	ldr	r3, [fp, #-8]
   27b0c:	add	r3, r3, #12
   27b10:	mov	r2, #8
   27b14:	mov	r1, r3
   27b18:	bl	31624 <__assert_fail@plt+0x20334>
   27b1c:	mov	r3, r0
   27b20:	eor	r3, r3, #1
   27b24:	uxtb	r3, r3
   27b28:	cmp	r3, #0
   27b2c:	beq	27b3c <__assert_fail@plt+0x1684c>
   27b30:	ldr	r0, [fp, #-8]
   27b34:	bl	27a48 <__assert_fail@plt+0x16758>
   27b38:	b	27b70 <__assert_fail@plt+0x16880>
   27b3c:	ldr	r3, [fp, #-8]
   27b40:	ldr	r2, [r3, #8]
   27b44:	ldr	r3, [fp, #-8]
   27b48:	ldr	r3, [r3]
   27b4c:	add	r0, r3, #1
   27b50:	ldr	r1, [fp, #-8]
   27b54:	str	r0, [r1]
   27b58:	lsl	r3, r3, #3
   27b5c:	add	r3, r2, r3
   27b60:	mov	r1, r3
   27b64:	sub	r3, fp, #16
   27b68:	ldrd	r2, [r3]
   27b6c:	strd	r2, [r1]
   27b70:	sub	sp, fp, #4
   27b74:	ldr	fp, [sp]
   27b78:	add	sp, sp, #4
   27b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   27b80:	push	{fp}		; (str fp, [sp, #-4]!)
   27b84:	add	fp, sp, #0
   27b88:	sub	sp, sp, #20
   27b8c:	str	r0, [fp, #-16]
   27b90:	ldr	r3, [fp, #-16]
   27b94:	ldr	r2, [r3, #8]
   27b98:	ldr	r3, [fp, #-16]
   27b9c:	ldr	r3, [r3]
   27ba0:	lsl	r3, r3, #3
   27ba4:	add	r3, r2, r3
   27ba8:	str	r3, [fp, #-8]
   27bac:	ldr	r3, [fp, #-16]
   27bb0:	ldr	r3, [r3]
   27bb4:	add	r2, r3, #1
   27bb8:	ldr	r3, [fp, #-16]
   27bbc:	str	r2, [r3]
   27bc0:	ldr	r3, [fp, #-8]
   27bc4:	mov	r0, r3
   27bc8:	add	sp, fp, #0
   27bcc:	pop	{fp}		; (ldr fp, [sp], #4)
   27bd0:	bx	lr
   27bd4:	str	fp, [sp, #-8]!
   27bd8:	str	lr, [sp, #4]
   27bdc:	add	fp, sp, #4
   27be0:	sub	sp, sp, #8
   27be4:	str	r0, [fp, #-8]
   27be8:	ldr	r0, [fp, #-8]
   27bec:	ldr	r3, [fp, #-8]
   27bf0:	add	r3, r3, #12
   27bf4:	mov	r2, #8
   27bf8:	mov	r1, r3
   27bfc:	bl	31624 <__assert_fail@plt+0x20334>
   27c00:	mov	r3, r0
   27c04:	eor	r3, r3, #1
   27c08:	uxtb	r3, r3
   27c0c:	cmp	r3, #0
   27c10:	beq	27c24 <__assert_fail@plt+0x16934>
   27c14:	ldr	r0, [fp, #-8]
   27c18:	bl	27a48 <__assert_fail@plt+0x16758>
   27c1c:	mov	r3, #0
   27c20:	b	27c30 <__assert_fail@plt+0x16940>
   27c24:	ldr	r0, [fp, #-8]
   27c28:	bl	27b80 <__assert_fail@plt+0x16890>
   27c2c:	mov	r3, r0
   27c30:	mov	r0, r3
   27c34:	sub	sp, fp, #4
   27c38:	ldr	fp, [sp]
   27c3c:	add	sp, sp, #4
   27c40:	pop	{pc}		; (ldr pc, [sp], #4)
   27c44:	str	fp, [sp, #-8]!
   27c48:	str	lr, [sp, #4]
   27c4c:	add	fp, sp, #4
   27c50:	sub	sp, sp, #16
   27c54:	str	r0, [fp, #-16]
   27c58:	str	r1, [fp, #-20]	; 0xffffffec
   27c5c:	ldr	r3, [fp, #-16]
   27c60:	ldr	r3, [r3]
   27c64:	ldr	r2, [fp, #-20]	; 0xffffffec
   27c68:	cmp	r2, r3
   27c6c:	bls	27cb4 <__assert_fail@plt+0x169c4>
   27c70:	ldr	r0, [fp, #-16]
   27c74:	ldr	r3, [fp, #-16]
   27c78:	add	r2, r3, #12
   27c7c:	mov	r3, #8
   27c80:	ldr	r1, [fp, #-20]	; 0xffffffec
   27c84:	bl	319a8 <__assert_fail@plt+0x206b8>
   27c88:	mov	r3, r0
   27c8c:	strb	r3, [fp, #-5]
   27c90:	ldrb	r3, [fp, #-5]
   27c94:	eor	r3, r3, #1
   27c98:	uxtb	r3, r3
   27c9c:	cmp	r3, #0
   27ca0:	beq	27cac <__assert_fail@plt+0x169bc>
   27ca4:	ldr	r0, [fp, #-16]
   27ca8:	bl	27a48 <__assert_fail@plt+0x16758>
   27cac:	ldrb	r3, [fp, #-5]
   27cb0:	b	27cf0 <__assert_fail@plt+0x16a00>
   27cb4:	ldr	r3, [fp, #-16]
   27cb8:	ldr	r2, [r3, #8]
   27cbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   27cc0:	lsl	r3, r3, #3
   27cc4:	add	r0, r2, r3
   27cc8:	ldr	r3, [fp, #-16]
   27ccc:	ldr	r2, [r3]
   27cd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   27cd4:	sub	r3, r2, r3
   27cd8:	mov	r1, r3
   27cdc:	bl	27938 <__assert_fail@plt+0x16648>
   27ce0:	ldr	r3, [fp, #-16]
   27ce4:	ldr	r2, [fp, #-20]	; 0xffffffec
   27ce8:	str	r2, [r3]
   27cec:	mov	r3, #1
   27cf0:	mov	r0, r3
   27cf4:	sub	sp, fp, #4
   27cf8:	ldr	fp, [sp]
   27cfc:	add	sp, sp, #4
   27d00:	pop	{pc}		; (ldr pc, [sp], #4)
   27d04:	push	{fp}		; (str fp, [sp, #-4]!)
   27d08:	add	fp, sp, #0
   27d0c:	sub	sp, sp, #20
   27d10:	str	r0, [fp, #-16]
   27d14:	ldr	r3, [fp, #-16]
   27d18:	ldr	r3, [r3]
   27d1c:	cmp	r3, #0
   27d20:	beq	27d40 <__assert_fail@plt+0x16a50>
   27d24:	ldr	r3, [fp, #-16]
   27d28:	ldr	r3, [r3]
   27d2c:	sub	r3, r3, #1
   27d30:	str	r3, [fp, #-8]
   27d34:	ldr	r3, [fp, #-16]
   27d38:	ldr	r2, [fp, #-8]
   27d3c:	str	r2, [r3]
   27d40:	nop	{0}
   27d44:	add	sp, fp, #0
   27d48:	pop	{fp}		; (ldr fp, [sp], #4)
   27d4c:	bx	lr
   27d50:	str	fp, [sp, #-8]!
   27d54:	str	lr, [sp, #4]
   27d58:	add	fp, sp, #4
   27d5c:	sub	sp, sp, #8
   27d60:	str	r0, [fp, #-8]
   27d64:	ldr	r3, [fp, #-8]
   27d68:	ldr	r2, [r3, #8]
   27d6c:	ldr	r3, [fp, #-8]
   27d70:	ldr	r3, [r3]
   27d74:	mov	r1, r3
   27d78:	mov	r0, r2
   27d7c:	bl	27938 <__assert_fail@plt+0x16648>
   27d80:	ldr	r3, [fp, #-8]
   27d84:	mov	r2, #0
   27d88:	str	r2, [r3]
   27d8c:	nop	{0}
   27d90:	sub	sp, fp, #4
   27d94:	ldr	fp, [sp]
   27d98:	add	sp, sp, #4
   27d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   27da0:	str	fp, [sp, #-8]!
   27da4:	str	lr, [sp, #4]
   27da8:	add	fp, sp, #4
   27dac:	sub	sp, sp, #16
   27db0:	str	r0, [fp, #-16]
   27db4:	str	r1, [fp, #-20]	; 0xffffffec
   27db8:	ldr	r0, [fp, #-16]
   27dbc:	ldr	r3, [fp, #-16]
   27dc0:	add	r1, r3, #12
   27dc4:	sub	r3, fp, #12
   27dc8:	mov	r2, #8
   27dcc:	bl	31860 <__assert_fail@plt+0x20570>
   27dd0:	mov	r3, r0
   27dd4:	cmp	r3, #0
   27dd8:	beq	27e04 <__assert_fail@plt+0x16b14>
   27ddc:	ldr	r0, [fp, #-16]
   27de0:	bl	279ac <__assert_fail@plt+0x166bc>
   27de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27de8:	cmp	r3, #0
   27dec:	beq	27dfc <__assert_fail@plt+0x16b0c>
   27df0:	ldr	r2, [fp, #-8]
   27df4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27df8:	str	r2, [r3]
   27dfc:	ldr	r3, [fp, #-12]
   27e00:	b	27e20 <__assert_fail@plt+0x16b30>
   27e04:	ldr	r0, [fp, #-16]
   27e08:	bl	279f4 <__assert_fail@plt+0x16704>
   27e0c:	bl	111f4 <__errno_location@plt>
   27e10:	mov	r2, r0
   27e14:	mov	r3, #12
   27e18:	str	r3, [r2]
   27e1c:	mov	r3, #0
   27e20:	mov	r0, r3
   27e24:	sub	sp, fp, #4
   27e28:	ldr	fp, [sp]
   27e2c:	add	sp, sp, #4
   27e30:	pop	{pc}		; (ldr pc, [sp], #4)
   27e34:	str	fp, [sp, #-8]!
   27e38:	str	lr, [sp, #4]
   27e3c:	add	fp, sp, #4
   27e40:	sub	sp, sp, #224	; 0xe0
   27e44:	str	r0, [fp, #-200]	; 0xffffff38
   27e48:	str	r1, [fp, #-204]	; 0xffffff34
   27e4c:	str	r2, [fp, #-208]	; 0xffffff30
   27e50:	str	r3, [fp, #-212]	; 0xffffff2c
   27e54:	ldr	r3, [fp, #-200]	; 0xffffff38
   27e58:	ldr	r3, [r3]
   27e5c:	str	r3, [fp, #-20]	; 0xffffffec
   27e60:	mov	r3, #0
   27e64:	str	r3, [fp, #-52]	; 0xffffffcc
   27e68:	mov	r3, #2
   27e6c:	str	r3, [fp, #-48]	; 0xffffffd0
   27e70:	mov	r3, #0
   27e74:	str	r3, [fp, #-44]	; 0xffffffd4
   27e78:	sub	r3, fp, #192	; 0xc0
   27e7c:	mov	r0, r3
   27e80:	bl	279ac <__assert_fail@plt+0x166bc>
   27e84:	ldr	r3, [fp, #-208]	; 0xffffff30
   27e88:	cmp	r3, #1
   27e8c:	ldr	r3, [fp, #-204]	; 0xffffff34
   27e90:	ldr	r3, [r3, #100]	; 0x64
   27e94:	cmp	r3, #0
   27e98:	ldrb	r3, [fp, #4]
   27e9c:	cmp	r3, #0
   27ea0:	beq	27ef8 <__assert_fail@plt+0x16c08>
   27ea4:	sub	r3, fp, #52	; 0x34
   27ea8:	str	r3, [fp, #-12]
   27eac:	ldr	r3, [fp, #-12]
   27eb0:	ldr	r3, [r3, #4]
   27eb4:	mov	r2, r3
   27eb8:	mov	r3, r2
   27ebc:	lsl	r3, r3, #1
   27ec0:	add	r3, r3, r2
   27ec4:	lsl	r3, r3, #3
   27ec8:	mov	r0, r3
   27ecc:	bl	3134c <__assert_fail@plt+0x2005c>
   27ed0:	mov	r3, r0
   27ed4:	mov	r2, r3
   27ed8:	ldr	r3, [fp, #-12]
   27edc:	str	r2, [r3, #8]
   27ee0:	ldr	r3, [fp, #-12]
   27ee4:	ldr	r3, [r3, #8]
   27ee8:	cmp	r3, #0
   27eec:	bne	27f00 <__assert_fail@plt+0x16c10>
   27ef0:	mov	r3, #12
   27ef4:	b	28204 <__assert_fail@plt+0x16f14>
   27ef8:	mov	r3, #0
   27efc:	str	r3, [fp, #-12]
   27f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f04:	ldr	r3, [r3, #72]	; 0x48
   27f08:	str	r3, [fp, #-8]
   27f0c:	sub	r3, fp, #40	; 0x28
   27f10:	mov	r2, #12
   27f14:	mov	r1, #0
   27f18:	mov	r0, r3
   27f1c:	bl	11218 <memset@plt>
   27f20:	sub	r3, fp, #192	; 0xc0
   27f24:	ldr	r1, [fp, #-208]	; 0xffffff30
   27f28:	mov	r0, r3
   27f2c:	bl	27c44 <__assert_fail@plt+0x16954>
   27f30:	mov	r3, r0
   27f34:	eor	r3, r3, #1
   27f38:	uxtb	r3, r3
   27f3c:	cmp	r3, #0
   27f40:	beq	27f60 <__assert_fail@plt+0x16c70>
   27f44:	sub	r3, fp, #192	; 0xc0
   27f48:	mov	r0, r3
   27f4c:	bl	279f4 <__assert_fail@plt+0x16704>
   27f50:	ldr	r0, [fp, #-12]
   27f54:	bl	28218 <__assert_fail@plt+0x16f28>
   27f58:	mov	r3, #12
   27f5c:	b	28204 <__assert_fail@plt+0x16f14>
   27f60:	sub	r3, fp, #192	; 0xc0
   27f64:	mov	r0, r3
   27f68:	bl	27ac0 <__assert_fail@plt+0x167d0>
   27f6c:	str	r0, [fp, #-24]	; 0xffffffe8
   27f70:	ldr	r3, [fp, #-208]	; 0xffffff30
   27f74:	lsl	r3, r3, #3
   27f78:	mov	r2, r3
   27f7c:	ldr	r1, [fp, #-212]	; 0xffffff2c
   27f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27f84:	bl	11074 <memcpy@plt>
   27f88:	ldr	r3, [fp, #-212]	; 0xffffff2c
   27f8c:	ldr	r3, [r3]
   27f90:	str	r3, [fp, #-28]	; 0xffffffe4
   27f94:	b	281cc <__assert_fail@plt+0x16edc>
   27f98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27f9c:	ldr	r2, [fp, #-208]	; 0xffffff30
   27fa0:	str	r2, [sp, #4]
   27fa4:	str	r3, [sp]
   27fa8:	ldr	r3, [fp, #-8]
   27fac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27fb0:	ldr	r1, [fp, #-212]	; 0xffffff2c
   27fb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   27fb8:	bl	282e4 <__assert_fail@plt+0x16ff4>
   27fbc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   27fc0:	ldr	r2, [r3, #4]
   27fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27fc8:	cmp	r2, r3
   27fcc:	bne	27fe4 <__assert_fail@plt+0x16cf4>
   27fd0:	ldr	r3, [fp, #-204]	; 0xffffff34
   27fd4:	ldr	r3, [r3, #96]	; 0x60
   27fd8:	ldr	r2, [fp, #-8]
   27fdc:	cmp	r2, r3
   27fe0:	beq	2800c <__assert_fail@plt+0x16d1c>
   27fe4:	ldr	r3, [fp, #-12]
   27fe8:	cmp	r3, #0
   27fec:	beq	280e0 <__assert_fail@plt+0x16df0>
   27ff0:	sub	r3, fp, #40	; 0x28
   27ff4:	ldr	r1, [fp, #-8]
   27ff8:	mov	r0, r3
   27ffc:	bl	1a314 <__assert_fail@plt+0x9024>
   28000:	mov	r3, r0
   28004:	cmp	r3, #0
   28008:	beq	280e0 <__assert_fail@plt+0x16df0>
   2800c:	mvn	r3, #0
   28010:	str	r3, [fp, #-8]
   28014:	ldr	r3, [fp, #-12]
   28018:	cmp	r3, #0
   2801c:	beq	280ac <__assert_fail@plt+0x16dbc>
   28020:	mov	r3, #0
   28024:	str	r3, [fp, #-16]
   28028:	b	2809c <__assert_fail@plt+0x16dac>
   2802c:	ldr	r3, [fp, #-16]
   28030:	lsl	r3, r3, #3
   28034:	ldr	r2, [fp, #-212]	; 0xffffff2c
   28038:	add	r3, r2, r3
   2803c:	ldr	r3, [r3]
   28040:	cmp	r3, #0
   28044:	blt	28090 <__assert_fail@plt+0x16da0>
   28048:	ldr	r3, [fp, #-16]
   2804c:	lsl	r3, r3, #3
   28050:	ldr	r2, [fp, #-212]	; 0xffffff2c
   28054:	add	r3, r2, r3
   28058:	ldr	r3, [r3, #4]
   2805c:	cmn	r3, #1
   28060:	bne	28090 <__assert_fail@plt+0x16da0>
   28064:	ldr	r2, [fp, #-208]	; 0xffffff30
   28068:	sub	r1, fp, #28
   2806c:	sub	r3, fp, #40	; 0x28
   28070:	str	r3, [sp, #4]
   28074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28078:	str	r3, [sp]
   2807c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   28080:	ldr	r0, [fp, #-12]
   28084:	bl	27754 <__assert_fail@plt+0x16464>
   28088:	str	r0, [fp, #-8]
   2808c:	b	280ac <__assert_fail@plt+0x16dbc>
   28090:	ldr	r3, [fp, #-16]
   28094:	add	r3, r3, #1
   28098:	str	r3, [fp, #-16]
   2809c:	ldr	r3, [fp, #-16]
   280a0:	ldr	r2, [fp, #-208]	; 0xffffff30
   280a4:	cmp	r2, r3
   280a8:	bhi	2802c <__assert_fail@plt+0x16d3c>
   280ac:	ldr	r3, [fp, #-8]
   280b0:	cmp	r3, #0
   280b4:	bge	280e0 <__assert_fail@plt+0x16df0>
   280b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   280bc:	mov	r0, r3
   280c0:	bl	31b28 <__assert_fail@plt+0x20838>
   280c4:	sub	r3, fp, #192	; 0xc0
   280c8:	mov	r0, r3
   280cc:	bl	279f4 <__assert_fail@plt+0x16704>
   280d0:	ldr	r0, [fp, #-12]
   280d4:	bl	28218 <__assert_fail@plt+0x16f28>
   280d8:	mov	r3, r0
   280dc:	b	28204 <__assert_fail@plt+0x16f14>
   280e0:	ldr	r1, [fp, #-208]	; 0xffffff30
   280e4:	ldr	r3, [fp, #-12]
   280e8:	str	r3, [sp, #12]
   280ec:	sub	r3, fp, #40	; 0x28
   280f0:	str	r3, [sp, #8]
   280f4:	ldr	r3, [fp, #-8]
   280f8:	str	r3, [sp, #4]
   280fc:	sub	r3, fp, #28
   28100:	str	r3, [sp]
   28104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28108:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2810c:	ldr	r0, [fp, #-204]	; 0xffffff34
   28110:	bl	26f88 <__assert_fail@plt+0x15c98>
   28114:	str	r0, [fp, #-8]
   28118:	ldr	r3, [fp, #-8]
   2811c:	lsr	r3, r3, #31
   28120:	uxtb	r3, r3
   28124:	cmp	r3, #0
   28128:	beq	281cc <__assert_fail@plt+0x16edc>
   2812c:	ldr	r3, [fp, #-8]
   28130:	cmn	r3, #2
   28134:	moveq	r3, #1
   28138:	movne	r3, #0
   2813c:	uxtb	r3, r3
   28140:	cmp	r3, #0
   28144:	beq	28170 <__assert_fail@plt+0x16e80>
   28148:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2814c:	mov	r0, r3
   28150:	bl	31b28 <__assert_fail@plt+0x20838>
   28154:	sub	r3, fp, #192	; 0xc0
   28158:	mov	r0, r3
   2815c:	bl	279f4 <__assert_fail@plt+0x16704>
   28160:	ldr	r0, [fp, #-12]
   28164:	bl	28218 <__assert_fail@plt+0x16f28>
   28168:	mov	r3, #12
   2816c:	b	28204 <__assert_fail@plt+0x16f14>
   28170:	ldr	r2, [fp, #-208]	; 0xffffff30
   28174:	sub	r1, fp, #28
   28178:	sub	r3, fp, #40	; 0x28
   2817c:	str	r3, [sp, #4]
   28180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28184:	str	r3, [sp]
   28188:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2818c:	ldr	r0, [fp, #-12]
   28190:	bl	27754 <__assert_fail@plt+0x16464>
   28194:	str	r0, [fp, #-8]
   28198:	ldr	r3, [fp, #-8]
   2819c:	cmp	r3, #0
   281a0:	bge	281cc <__assert_fail@plt+0x16edc>
   281a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   281a8:	mov	r0, r3
   281ac:	bl	31b28 <__assert_fail@plt+0x20838>
   281b0:	sub	r3, fp, #192	; 0xc0
   281b4:	mov	r0, r3
   281b8:	bl	279f4 <__assert_fail@plt+0x16704>
   281bc:	ldr	r0, [fp, #-12]
   281c0:	bl	28218 <__assert_fail@plt+0x16f28>
   281c4:	mov	r3, #1
   281c8:	b	28204 <__assert_fail@plt+0x16f14>
   281cc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   281d0:	ldr	r2, [r3, #4]
   281d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281d8:	cmp	r2, r3
   281dc:	bge	27f98 <__assert_fail@plt+0x16ca8>
   281e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   281e4:	mov	r0, r3
   281e8:	bl	31b28 <__assert_fail@plt+0x20838>
   281ec:	sub	r3, fp, #192	; 0xc0
   281f0:	mov	r0, r3
   281f4:	bl	279f4 <__assert_fail@plt+0x16704>
   281f8:	ldr	r0, [fp, #-12]
   281fc:	bl	28218 <__assert_fail@plt+0x16f28>
   28200:	mov	r3, r0
   28204:	mov	r0, r3
   28208:	sub	sp, fp, #4
   2820c:	ldr	fp, [sp]
   28210:	add	sp, sp, #4
   28214:	pop	{pc}		; (ldr pc, [sp], #4)
   28218:	str	fp, [sp, #-8]!
   2821c:	str	lr, [sp, #4]
   28220:	add	fp, sp, #4
   28224:	sub	sp, sp, #16
   28228:	str	r0, [fp, #-16]
   2822c:	ldr	r3, [fp, #-16]
   28230:	cmp	r3, #0
   28234:	beq	282cc <__assert_fail@plt+0x16fdc>
   28238:	mov	r3, #0
   2823c:	str	r3, [fp, #-8]
   28240:	b	282a8 <__assert_fail@plt+0x16fb8>
   28244:	ldr	r3, [fp, #-16]
   28248:	ldr	r1, [r3, #8]
   2824c:	ldr	r2, [fp, #-8]
   28250:	mov	r3, r2
   28254:	lsl	r3, r3, #1
   28258:	add	r3, r3, r2
   2825c:	lsl	r3, r3, #3
   28260:	add	r3, r1, r3
   28264:	ldr	r3, [r3, #20]
   28268:	mov	r0, r3
   2826c:	bl	31b28 <__assert_fail@plt+0x20838>
   28270:	ldr	r3, [fp, #-16]
   28274:	ldr	r1, [r3, #8]
   28278:	ldr	r2, [fp, #-8]
   2827c:	mov	r3, r2
   28280:	lsl	r3, r3, #1
   28284:	add	r3, r3, r2
   28288:	lsl	r3, r3, #3
   2828c:	add	r3, r1, r3
   28290:	ldr	r3, [r3, #8]
   28294:	mov	r0, r3
   28298:	bl	31b28 <__assert_fail@plt+0x20838>
   2829c:	ldr	r3, [fp, #-8]
   282a0:	add	r3, r3, #1
   282a4:	str	r3, [fp, #-8]
   282a8:	ldr	r3, [fp, #-16]
   282ac:	ldr	r3, [r3]
   282b0:	ldr	r2, [fp, #-8]
   282b4:	cmp	r2, r3
   282b8:	blt	28244 <__assert_fail@plt+0x16f54>
   282bc:	ldr	r3, [fp, #-16]
   282c0:	ldr	r3, [r3, #8]
   282c4:	mov	r0, r3
   282c8:	bl	31b28 <__assert_fail@plt+0x20838>
   282cc:	mov	r3, #0
   282d0:	mov	r0, r3
   282d4:	sub	sp, fp, #4
   282d8:	ldr	fp, [sp]
   282dc:	add	sp, sp, #4
   282e0:	pop	{pc}		; (ldr pc, [sp], #4)
   282e4:	str	fp, [sp, #-8]!
   282e8:	str	lr, [sp, #4]
   282ec:	add	fp, sp, #4
   282f0:	sub	sp, sp, #32
   282f4:	str	r0, [fp, #-24]	; 0xffffffe8
   282f8:	str	r1, [fp, #-28]	; 0xffffffe4
   282fc:	str	r2, [fp, #-32]	; 0xffffffe0
   28300:	str	r3, [fp, #-36]	; 0xffffffdc
   28304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28308:	ldr	r2, [r3]
   2830c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28310:	lsl	r3, r3, #3
   28314:	add	r3, r2, r3
   28318:	ldrb	r3, [r3, #4]
   2831c:	str	r3, [fp, #-8]
   28320:	ldr	r3, [fp, #-8]
   28324:	cmp	r3, #8
   28328:	bne	28390 <__assert_fail@plt+0x170a0>
   2832c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28330:	ldr	r2, [r3]
   28334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28338:	lsl	r3, r3, #3
   2833c:	add	r3, r2, r3
   28340:	ldr	r3, [r3]
   28344:	add	r3, r3, #1
   28348:	str	r3, [fp, #-12]
   2834c:	ldr	r2, [fp, #-12]
   28350:	ldr	r3, [fp, #8]
   28354:	cmp	r2, r3
   28358:	bge	28498 <__assert_fail@plt+0x171a8>
   2835c:	ldr	r3, [fp, #-12]
   28360:	lsl	r3, r3, #3
   28364:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28368:	add	r3, r2, r3
   2836c:	ldr	r2, [fp, #4]
   28370:	str	r2, [r3]
   28374:	ldr	r3, [fp, #-12]
   28378:	lsl	r3, r3, #3
   2837c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28380:	add	r3, r2, r3
   28384:	mvn	r2, #0
   28388:	str	r2, [r3, #4]
   2838c:	b	28498 <__assert_fail@plt+0x171a8>
   28390:	ldr	r3, [fp, #-8]
   28394:	cmp	r3, #9
   28398:	bne	28498 <__assert_fail@plt+0x171a8>
   2839c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   283a0:	ldr	r2, [r3]
   283a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   283a8:	lsl	r3, r3, #3
   283ac:	add	r3, r2, r3
   283b0:	ldr	r3, [r3]
   283b4:	add	r3, r3, #1
   283b8:	str	r3, [fp, #-16]
   283bc:	ldr	r2, [fp, #-16]
   283c0:	ldr	r3, [fp, #8]
   283c4:	cmp	r2, r3
   283c8:	bge	28498 <__assert_fail@plt+0x171a8>
   283cc:	ldr	r3, [fp, #-16]
   283d0:	lsl	r3, r3, #3
   283d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   283d8:	add	r3, r2, r3
   283dc:	ldr	r3, [r3]
   283e0:	ldr	r2, [fp, #4]
   283e4:	cmp	r2, r3
   283e8:	ble	28420 <__assert_fail@plt+0x17130>
   283ec:	ldr	r3, [fp, #-16]
   283f0:	lsl	r3, r3, #3
   283f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   283f8:	add	r3, r2, r3
   283fc:	ldr	r2, [fp, #4]
   28400:	str	r2, [r3, #4]
   28404:	ldr	r3, [fp, #8]
   28408:	lsl	r3, r3, #3
   2840c:	mov	r2, r3
   28410:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28418:	bl	11074 <memcpy@plt>
   2841c:	b	28498 <__assert_fail@plt+0x171a8>
   28420:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28424:	ldr	r2, [r3]
   28428:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2842c:	lsl	r3, r3, #3
   28430:	add	r3, r2, r3
   28434:	ldrb	r3, [r3, #6]
   28438:	and	r3, r3, #8
   2843c:	uxtb	r3, r3
   28440:	cmp	r3, #0
   28444:	beq	28480 <__assert_fail@plt+0x17190>
   28448:	ldr	r3, [fp, #-16]
   2844c:	lsl	r3, r3, #3
   28450:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28454:	add	r3, r2, r3
   28458:	ldr	r3, [r3]
   2845c:	cmn	r3, #1
   28460:	beq	28480 <__assert_fail@plt+0x17190>
   28464:	ldr	r3, [fp, #8]
   28468:	lsl	r3, r3, #3
   2846c:	mov	r2, r3
   28470:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28474:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28478:	bl	11074 <memcpy@plt>
   2847c:	b	28498 <__assert_fail@plt+0x171a8>
   28480:	ldr	r3, [fp, #-16]
   28484:	lsl	r3, r3, #3
   28488:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2848c:	add	r3, r2, r3
   28490:	ldr	r2, [fp, #4]
   28494:	str	r2, [r3, #4]
   28498:	nop	{0}
   2849c:	sub	sp, fp, #4
   284a0:	ldr	fp, [sp]
   284a4:	add	sp, sp, #4
   284a8:	pop	{pc}		; (ldr pc, [sp], #4)
   284ac:	str	fp, [sp, #-8]!
   284b0:	str	lr, [sp, #4]
   284b4:	add	fp, sp, #4
   284b8:	sub	sp, sp, #32
   284bc:	str	r0, [fp, #-32]	; 0xffffffe0
   284c0:	str	r1, [fp, #-36]	; 0xffffffdc
   284c4:	mov	r3, #0
   284c8:	str	r3, [fp, #-12]
   284cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   284d0:	ldr	r3, [r3, #12]
   284d4:	str	r3, [fp, #-16]
   284d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   284dc:	ldr	r3, [r3, #100]	; 0x64
   284e0:	cmp	r3, #0
   284e4:	beq	28508 <__assert_fail@plt+0x17218>
   284e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   284ec:	ldr	r2, [r3, #100]	; 0x64
   284f0:	ldr	r3, [fp, #-16]
   284f4:	lsl	r3, r3, #2
   284f8:	add	r3, r2, r3
   284fc:	ldr	r3, [r3]
   28500:	cmp	r3, #0
   28504:	bne	28508 <__assert_fail@plt+0x17218>
   28508:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2850c:	ldr	r2, [r3, #8]
   28510:	sub	r3, fp, #28
   28514:	mov	r1, r2
   28518:	mov	r0, r3
   2851c:	bl	18f94 <__assert_fail@plt+0x7ca4>
   28520:	str	r0, [fp, #-8]
   28524:	ldr	r3, [fp, #-8]
   28528:	cmp	r3, #0
   2852c:	movne	r3, #1
   28530:	moveq	r3, #0
   28534:	uxtb	r3, r3
   28538:	cmp	r3, #0
   2853c:	beq	28548 <__assert_fail@plt+0x17258>
   28540:	ldr	r3, [fp, #-8]
   28544:	b	286d0 <__assert_fail@plt+0x173e0>
   28548:	sub	r3, fp, #28
   2854c:	ldr	r2, [fp, #-16]
   28550:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28558:	bl	28c24 <__assert_fail@plt+0x17934>
   2855c:	str	r0, [fp, #-8]
   28560:	ldr	r3, [fp, #-8]
   28564:	cmp	r3, #0
   28568:	movne	r3, #1
   2856c:	moveq	r3, #0
   28570:	uxtb	r3, r3
   28574:	cmp	r3, #0
   28578:	bne	286ac <__assert_fail@plt+0x173bc>
   2857c:	b	28694 <__assert_fail@plt+0x173a4>
   28580:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28584:	ldr	r2, [r3]
   28588:	ldr	r3, [fp, #-16]
   2858c:	lsl	r3, r3, #2
   28590:	add	r3, r2, r3
   28594:	ldr	r3, [r3]
   28598:	cmp	r3, #0
   2859c:	bne	285ac <__assert_fail@plt+0x172bc>
   285a0:	ldr	r3, [fp, #-12]
   285a4:	add	r3, r3, #1
   285a8:	b	285b0 <__assert_fail@plt+0x172c0>
   285ac:	mov	r3, #0
   285b0:	str	r3, [fp, #-12]
   285b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   285b8:	ldr	r3, [r3, #120]	; 0x78
   285bc:	ldr	r2, [fp, #-12]
   285c0:	cmp	r2, r3
   285c4:	ble	285f8 <__assert_fail@plt+0x17308>
   285c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   285cc:	ldr	r0, [r3]
   285d0:	ldr	r3, [fp, #-16]
   285d4:	lsl	r3, r3, #2
   285d8:	mov	r2, r3
   285dc:	mov	r1, #0
   285e0:	bl	11218 <memset@plt>
   285e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   285e8:	mov	r0, r3
   285ec:	bl	31b28 <__assert_fail@plt+0x20838>
   285f0:	mov	r3, #0
   285f4:	b	286d0 <__assert_fail@plt+0x173e0>
   285f8:	mov	r3, #0
   285fc:	str	r3, [fp, #-24]	; 0xffffffe8
   28600:	ldr	r3, [fp, #-16]
   28604:	sub	r3, r3, #1
   28608:	str	r3, [fp, #-16]
   2860c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28610:	ldr	r2, [r3, #100]	; 0x64
   28614:	ldr	r3, [fp, #-16]
   28618:	lsl	r3, r3, #2
   2861c:	add	r3, r2, r3
   28620:	ldr	r3, [r3]
   28624:	cmp	r3, #0
   28628:	beq	28660 <__assert_fail@plt+0x17370>
   2862c:	sub	r3, fp, #28
   28630:	ldr	r2, [fp, #-16]
   28634:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28638:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2863c:	bl	286e4 <__assert_fail@plt+0x173f4>
   28640:	str	r0, [fp, #-8]
   28644:	ldr	r3, [fp, #-8]
   28648:	cmp	r3, #0
   2864c:	movne	r3, #1
   28650:	moveq	r3, #0
   28654:	uxtb	r3, r3
   28658:	cmp	r3, #0
   2865c:	bne	286b4 <__assert_fail@plt+0x173c4>
   28660:	sub	r3, fp, #28
   28664:	ldr	r2, [fp, #-16]
   28668:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2866c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28670:	bl	28c24 <__assert_fail@plt+0x17934>
   28674:	str	r0, [fp, #-8]
   28678:	ldr	r3, [fp, #-8]
   2867c:	cmp	r3, #0
   28680:	movne	r3, #1
   28684:	moveq	r3, #0
   28688:	uxtb	r3, r3
   2868c:	cmp	r3, #0
   28690:	bne	286bc <__assert_fail@plt+0x173cc>
   28694:	ldr	r3, [fp, #-16]
   28698:	cmp	r3, #0
   2869c:	bgt	28580 <__assert_fail@plt+0x17290>
   286a0:	mov	r3, #0
   286a4:	str	r3, [fp, #-8]
   286a8:	b	286c0 <__assert_fail@plt+0x173d0>
   286ac:	nop	{0}
   286b0:	b	286c0 <__assert_fail@plt+0x173d0>
   286b4:	nop	{0}
   286b8:	b	286c0 <__assert_fail@plt+0x173d0>
   286bc:	nop	{0}
   286c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   286c4:	mov	r0, r3
   286c8:	bl	31b28 <__assert_fail@plt+0x20838>
   286cc:	ldr	r3, [fp, #-8]
   286d0:	mov	r0, r3
   286d4:	sub	sp, fp, #4
   286d8:	ldr	fp, [sp]
   286dc:	add	sp, sp, #4
   286e0:	pop	{pc}		; (ldr pc, [sp], #4)
   286e4:	str	fp, [sp, #-8]!
   286e8:	str	lr, [sp, #4]
   286ec:	add	fp, sp, #4
   286f0:	sub	sp, sp, #56	; 0x38
   286f4:	str	r0, [fp, #-40]	; 0xffffffd8
   286f8:	str	r1, [fp, #-44]	; 0xffffffd4
   286fc:	str	r2, [fp, #-48]	; 0xffffffd0
   28700:	str	r3, [fp, #-52]	; 0xffffffcc
   28704:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28708:	ldr	r3, [r3, #84]	; 0x54
   2870c:	str	r3, [fp, #-16]
   28710:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28714:	ldr	r2, [r3, #100]	; 0x64
   28718:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2871c:	lsl	r3, r3, #2
   28720:	add	r3, r2, r3
   28724:	ldr	r3, [r3]
   28728:	add	r3, r3, #16
   2872c:	str	r3, [fp, #-20]	; 0xffffffec
   28730:	mov	r3, #0
   28734:	str	r3, [fp, #-8]
   28738:	b	2893c <__assert_fail@plt+0x1764c>
   2873c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28740:	ldr	r2, [r3, #8]
   28744:	ldr	r3, [fp, #-8]
   28748:	lsl	r3, r3, #2
   2874c:	add	r3, r2, r3
   28750:	ldr	r3, [r3]
   28754:	str	r3, [fp, #-24]	; 0xffffffe8
   28758:	mov	r3, #0
   2875c:	str	r3, [fp, #-12]
   28760:	ldr	r3, [fp, #-16]
   28764:	ldr	r2, [r3]
   28768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2876c:	lsl	r3, r3, #3
   28770:	add	r3, r2, r3
   28774:	ldrb	r3, [r3, #4]
   28778:	and	r3, r3, #8
   2877c:	cmp	r3, #0
   28780:	ldr	r3, [fp, #-16]
   28784:	ldr	r2, [r3]
   28788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2878c:	lsl	r3, r3, #3
   28790:	add	r3, r2, r3
   28794:	ldrb	r3, [r3, #6]
   28798:	and	r3, r3, #16
   2879c:	uxtb	r3, r3
   287a0:	cmp	r3, #0
   287a4:	beq	287cc <__assert_fail@plt+0x174dc>
   287a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   287ac:	ldr	r3, [r3, #12]
   287b0:	str	r3, [sp]
   287b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   287b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   287bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   287c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   287c4:	bl	2a140 <__assert_fail@plt+0x18e50>
   287c8:	str	r0, [fp, #-12]
   287cc:	ldr	r3, [fp, #-12]
   287d0:	cmp	r3, #0
   287d4:	bne	28880 <__assert_fail@plt+0x17590>
   287d8:	ldr	r3, [fp, #-16]
   287dc:	ldr	r2, [r3]
   287e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   287e4:	lsl	r3, r3, #3
   287e8:	add	r3, r2, r3
   287ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   287f0:	mov	r1, r3
   287f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   287f8:	bl	2e878 <__assert_fail@plt+0x1d588>
   287fc:	mov	r3, r0
   28800:	cmp	r3, #0
   28804:	beq	28880 <__assert_fail@plt+0x17590>
   28808:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2880c:	ldr	r2, [r3]
   28810:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28814:	add	r3, r3, #1
   28818:	lsl	r3, r3, #2
   2881c:	add	r3, r2, r3
   28820:	ldr	r3, [r3]
   28824:	cmp	r3, #0
   28828:	beq	28880 <__assert_fail@plt+0x17590>
   2882c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28830:	ldr	r2, [r3]
   28834:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28838:	add	r3, r3, #1
   2883c:	lsl	r3, r3, #2
   28840:	add	r3, r2, r3
   28844:	ldr	r3, [r3]
   28848:	add	r0, r3, #4
   2884c:	ldr	r3, [fp, #-16]
   28850:	ldr	r2, [r3, #12]
   28854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28858:	lsl	r3, r3, #2
   2885c:	add	r3, r2, r3
   28860:	ldr	r3, [r3]
   28864:	mov	r1, r3
   28868:	bl	1a314 <__assert_fail@plt+0x9024>
   2886c:	mov	r3, r0
   28870:	cmp	r3, #0
   28874:	beq	28880 <__assert_fail@plt+0x17590>
   28878:	mov	r3, #1
   2887c:	str	r3, [fp, #-12]
   28880:	ldr	r3, [fp, #-12]
   28884:	cmp	r3, #0
   28888:	beq	28924 <__assert_fail@plt+0x17634>
   2888c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28890:	ldr	r3, [r3, #20]
   28894:	cmp	r3, #0
   28898:	beq	288f4 <__assert_fail@plt+0x17604>
   2889c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   288a0:	ldr	r3, [fp, #-12]
   288a4:	add	r3, r2, r3
   288a8:	str	r3, [fp, #-28]	; 0xffffffe4
   288ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   288b0:	add	r1, r3, #16
   288b4:	ldr	r3, [fp, #-16]
   288b8:	ldr	r2, [r3, #12]
   288bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   288c0:	lsl	r3, r3, #2
   288c4:	add	r3, r2, r3
   288c8:	ldr	r2, [r3]
   288cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   288d0:	str	r3, [sp, #4]
   288d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   288d8:	str	r3, [sp]
   288dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   288e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   288e4:	bl	292dc <__assert_fail@plt+0x17fec>
   288e8:	mov	r3, r0
   288ec:	cmp	r3, #0
   288f0:	bne	2892c <__assert_fail@plt+0x1763c>
   288f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   288f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   288fc:	bl	19eec <__assert_fail@plt+0x8bfc>
   28900:	mov	r3, r0
   28904:	strb	r3, [fp, #-29]	; 0xffffffe3
   28908:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2890c:	eor	r3, r3, #1
   28910:	uxtb	r3, r3
   28914:	cmp	r3, #0
   28918:	beq	28930 <__assert_fail@plt+0x17640>
   2891c:	mov	r3, #12
   28920:	b	28954 <__assert_fail@plt+0x17664>
   28924:	nop	{0}
   28928:	b	28930 <__assert_fail@plt+0x17640>
   2892c:	nop	{0}
   28930:	ldr	r3, [fp, #-8]
   28934:	add	r3, r3, #1
   28938:	str	r3, [fp, #-8]
   2893c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28940:	ldr	r3, [r3, #4]
   28944:	ldr	r2, [fp, #-8]
   28948:	cmp	r2, r3
   2894c:	blt	2873c <__assert_fail@plt+0x1744c>
   28950:	mov	r3, #0
   28954:	mov	r0, r3
   28958:	sub	sp, fp, #4
   2895c:	ldr	fp, [sp]
   28960:	add	sp, sp, #4
   28964:	pop	{pc}		; (ldr pc, [sp], #4)
   28968:	str	fp, [sp, #-8]!
   2896c:	str	lr, [sp, #4]
   28970:	add	fp, sp, #4
   28974:	sub	sp, sp, #16
   28978:	str	r0, [fp, #-16]
   2897c:	str	r1, [fp, #-20]	; 0xffffffec
   28980:	ldr	r3, [fp, #-16]
   28984:	ldr	r3, [r3, #104]	; 0x68
   28988:	str	r3, [fp, #-8]
   2898c:	ldr	r3, [fp, #-16]
   28990:	ldr	r3, [r3, #36]	; 0x24
   28994:	ldr	r2, [fp, #-20]	; 0xffffffec
   28998:	cmp	r2, r3
   2899c:	blt	289b8 <__assert_fail@plt+0x176c8>
   289a0:	ldr	r3, [fp, #-16]
   289a4:	ldr	r2, [r3, #36]	; 0x24
   289a8:	ldr	r3, [fp, #-16]
   289ac:	ldr	r3, [r3, #48]	; 0x30
   289b0:	cmp	r2, r3
   289b4:	blt	289e4 <__assert_fail@plt+0x176f4>
   289b8:	ldr	r3, [fp, #-16]
   289bc:	ldr	r3, [r3, #28]
   289c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   289c4:	cmp	r2, r3
   289c8:	blt	28a20 <__assert_fail@plt+0x17730>
   289cc:	ldr	r3, [fp, #-16]
   289d0:	ldr	r2, [r3, #28]
   289d4:	ldr	r3, [fp, #-16]
   289d8:	ldr	r3, [r3, #48]	; 0x30
   289dc:	cmp	r2, r3
   289e0:	bge	28a20 <__assert_fail@plt+0x17730>
   289e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   289e8:	add	r3, r3, #1
   289ec:	mov	r1, r3
   289f0:	ldr	r0, [fp, #-16]
   289f4:	bl	2eab8 <__assert_fail@plt+0x1d7c8>
   289f8:	str	r0, [fp, #-12]
   289fc:	ldr	r3, [fp, #-12]
   28a00:	cmp	r3, #0
   28a04:	movne	r3, #1
   28a08:	moveq	r3, #0
   28a0c:	uxtb	r3, r3
   28a10:	cmp	r3, #0
   28a14:	beq	28a20 <__assert_fail@plt+0x17730>
   28a18:	ldr	r3, [fp, #-12]
   28a1c:	b	28a80 <__assert_fail@plt+0x17790>
   28a20:	ldr	r2, [fp, #-8]
   28a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a28:	cmp	r2, r3
   28a2c:	bge	28a7c <__assert_fail@plt+0x1778c>
   28a30:	ldr	r3, [fp, #-16]
   28a34:	ldr	r3, [r3, #100]	; 0x64
   28a38:	cmp	r3, #0
   28a3c:	ldr	r3, [fp, #-16]
   28a40:	ldr	r2, [r3, #100]	; 0x64
   28a44:	ldr	r3, [fp, #-8]
   28a48:	add	r3, r3, #1
   28a4c:	lsl	r3, r3, #2
   28a50:	add	r0, r2, r3
   28a54:	ldr	r2, [fp, #-20]	; 0xffffffec
   28a58:	ldr	r3, [fp, #-8]
   28a5c:	sub	r3, r2, r3
   28a60:	lsl	r3, r3, #2
   28a64:	mov	r2, r3
   28a68:	mov	r1, #0
   28a6c:	bl	11218 <memset@plt>
   28a70:	ldr	r3, [fp, #-16]
   28a74:	ldr	r2, [fp, #-20]	; 0xffffffec
   28a78:	str	r2, [r3, #104]	; 0x68
   28a7c:	mov	r3, #0
   28a80:	mov	r0, r3
   28a84:	sub	sp, fp, #4
   28a88:	ldr	fp, [sp]
   28a8c:	add	sp, sp, #4
   28a90:	pop	{pc}		; (ldr pc, [sp], #4)
   28a94:	str	r4, [sp, #-12]!
   28a98:	str	fp, [sp, #4]
   28a9c:	str	lr, [sp, #8]
   28aa0:	add	fp, sp, #8
   28aa4:	sub	sp, sp, #44	; 0x2c
   28aa8:	str	r0, [fp, #-40]	; 0xffffffd8
   28aac:	str	r1, [fp, #-44]	; 0xffffffd4
   28ab0:	str	r2, [fp, #-48]	; 0xffffffd0
   28ab4:	str	r3, [fp, #-52]	; 0xffffffcc
   28ab8:	mov	r3, #0
   28abc:	str	r3, [fp, #-16]
   28ac0:	b	28bf8 <__assert_fail@plt+0x17908>
   28ac4:	ldr	r3, [fp, #-16]
   28ac8:	lsl	r3, r3, #2
   28acc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28ad0:	add	r3, r2, r3
   28ad4:	ldr	r3, [r3]
   28ad8:	cmp	r3, #0
   28adc:	bne	28b0c <__assert_fail@plt+0x1781c>
   28ae0:	ldr	r3, [fp, #-16]
   28ae4:	lsl	r3, r3, #2
   28ae8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28aec:	add	r2, r2, r3
   28af0:	ldr	r3, [fp, #-16]
   28af4:	lsl	r3, r3, #2
   28af8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28afc:	add	r3, r1, r3
   28b00:	ldr	r2, [r2]
   28b04:	str	r2, [r3]
   28b08:	b	28bec <__assert_fail@plt+0x178fc>
   28b0c:	ldr	r3, [fp, #-16]
   28b10:	lsl	r3, r3, #2
   28b14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28b18:	add	r3, r2, r3
   28b1c:	ldr	r3, [r3]
   28b20:	cmp	r3, #0
   28b24:	beq	28bec <__assert_fail@plt+0x178fc>
   28b28:	ldr	r3, [fp, #-16]
   28b2c:	lsl	r3, r3, #2
   28b30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28b34:	add	r3, r2, r3
   28b38:	ldr	r3, [r3]
   28b3c:	add	r1, r3, #4
   28b40:	ldr	r3, [fp, #-16]
   28b44:	lsl	r3, r3, #2
   28b48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28b4c:	add	r3, r2, r3
   28b50:	ldr	r3, [r3]
   28b54:	add	r2, r3, #4
   28b58:	sub	r3, fp, #32
   28b5c:	mov	r0, r3
   28b60:	bl	19704 <__assert_fail@plt+0x8414>
   28b64:	mov	r3, r0
   28b68:	str	r3, [fp, #-20]	; 0xffffffec
   28b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28b70:	cmp	r3, #0
   28b74:	movne	r3, #1
   28b78:	moveq	r3, #0
   28b7c:	uxtb	r3, r3
   28b80:	cmp	r3, #0
   28b84:	beq	28b90 <__assert_fail@plt+0x178a0>
   28b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   28b8c:	b	28c0c <__assert_fail@plt+0x1791c>
   28b90:	ldr	r3, [fp, #-16]
   28b94:	lsl	r3, r3, #2
   28b98:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28b9c:	add	r4, r2, r3
   28ba0:	sub	r2, fp, #32
   28ba4:	sub	r3, fp, #20
   28ba8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28bac:	mov	r0, r3
   28bb0:	bl	1a92c <__assert_fail@plt+0x963c>
   28bb4:	mov	r3, r0
   28bb8:	str	r3, [r4]
   28bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28bc0:	mov	r0, r3
   28bc4:	bl	31b28 <__assert_fail@plt+0x20838>
   28bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28bcc:	cmp	r3, #0
   28bd0:	movne	r3, #1
   28bd4:	moveq	r3, #0
   28bd8:	uxtb	r3, r3
   28bdc:	cmp	r3, #0
   28be0:	beq	28bec <__assert_fail@plt+0x178fc>
   28be4:	ldr	r3, [fp, #-20]	; 0xffffffec
   28be8:	b	28c0c <__assert_fail@plt+0x1791c>
   28bec:	ldr	r3, [fp, #-16]
   28bf0:	add	r3, r3, #1
   28bf4:	str	r3, [fp, #-16]
   28bf8:	ldr	r2, [fp, #-16]
   28bfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28c00:	cmp	r2, r3
   28c04:	blt	28ac4 <__assert_fail@plt+0x177d4>
   28c08:	mov	r3, #0
   28c0c:	mov	r0, r3
   28c10:	sub	sp, fp, #8
   28c14:	ldr	r4, [sp]
   28c18:	ldr	fp, [sp, #4]
   28c1c:	add	sp, sp, #8
   28c20:	pop	{pc}		; (ldr pc, [sp], #4)
   28c24:	str	r4, [sp, #-12]!
   28c28:	str	fp, [sp, #4]
   28c2c:	str	lr, [sp, #8]
   28c30:	add	fp, sp, #8
   28c34:	sub	sp, sp, #44	; 0x2c
   28c38:	str	r0, [fp, #-32]	; 0xffffffe0
   28c3c:	str	r1, [fp, #-36]	; 0xffffffdc
   28c40:	str	r2, [fp, #-40]	; 0xffffffd8
   28c44:	str	r3, [fp, #-44]	; 0xffffffd4
   28c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c4c:	ldr	r3, [r3, #84]	; 0x54
   28c50:	str	r3, [fp, #-16]
   28c54:	mov	r3, #0
   28c58:	str	r3, [fp, #-24]	; 0xffffffe8
   28c5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c60:	ldr	r2, [r3, #100]	; 0x64
   28c64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28c68:	lsl	r3, r3, #2
   28c6c:	add	r3, r2, r3
   28c70:	ldr	r3, [r3]
   28c74:	cmp	r3, #0
   28c78:	beq	28c9c <__assert_fail@plt+0x179ac>
   28c7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c80:	ldr	r2, [r3, #100]	; 0x64
   28c84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28c88:	lsl	r3, r3, #2
   28c8c:	add	r3, r2, r3
   28c90:	ldr	r3, [r3]
   28c94:	add	r3, r3, #4
   28c98:	b	28ca0 <__assert_fail@plt+0x179b0>
   28c9c:	mov	r3, #0
   28ca0:	str	r3, [fp, #-20]	; 0xffffffec
   28ca4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28ca8:	ldr	r3, [r3, #4]
   28cac:	cmp	r3, #0
   28cb0:	bne	28cd4 <__assert_fail@plt+0x179e4>
   28cb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28cb8:	ldr	r2, [r3]
   28cbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28cc0:	lsl	r3, r3, #2
   28cc4:	add	r3, r2, r3
   28cc8:	mov	r2, #0
   28ccc:	str	r2, [r3]
   28cd0:	b	28ddc <__assert_fail@plt+0x17aec>
   28cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   28cd8:	cmp	r3, #0
   28cdc:	beq	28d88 <__assert_fail@plt+0x17a98>
   28ce0:	ldr	r2, [fp, #-20]	; 0xffffffec
   28ce4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28ce8:	ldr	r0, [fp, #-16]
   28cec:	bl	28e70 <__assert_fail@plt+0x17b80>
   28cf0:	mov	r3, r0
   28cf4:	str	r3, [fp, #-24]	; 0xffffffe8
   28cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28cfc:	cmp	r3, #0
   28d00:	movne	r3, #1
   28d04:	moveq	r3, #0
   28d08:	uxtb	r3, r3
   28d0c:	cmp	r3, #0
   28d10:	beq	28d1c <__assert_fail@plt+0x17a2c>
   28d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d18:	b	28e58 <__assert_fail@plt+0x17b68>
   28d1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28d20:	ldr	r3, [r3, #20]
   28d24:	cmp	r3, #0
   28d28:	beq	28d88 <__assert_fail@plt+0x17a98>
   28d2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28d30:	add	r1, r3, #16
   28d34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28d38:	ldr	r3, [r3, #116]	; 0x74
   28d3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28d40:	str	r2, [sp, #4]
   28d44:	str	r3, [sp]
   28d48:	mov	r3, r1
   28d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   28d50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28d54:	ldr	r0, [fp, #-16]
   28d58:	bl	29864 <__assert_fail@plt+0x18574>
   28d5c:	mov	r3, r0
   28d60:	str	r3, [fp, #-24]	; 0xffffffe8
   28d64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d68:	cmp	r3, #0
   28d6c:	movne	r3, #1
   28d70:	moveq	r3, #0
   28d74:	uxtb	r3, r3
   28d78:	cmp	r3, #0
   28d7c:	beq	28d88 <__assert_fail@plt+0x17a98>
   28d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d84:	b	28e58 <__assert_fail@plt+0x17b68>
   28d88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28d8c:	ldr	r2, [r3]
   28d90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28d94:	lsl	r3, r3, #2
   28d98:	add	r4, r2, r3
   28d9c:	sub	r3, fp, #24
   28da0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28da4:	ldr	r1, [fp, #-16]
   28da8:	mov	r0, r3
   28dac:	bl	1a92c <__assert_fail@plt+0x963c>
   28db0:	mov	r3, r0
   28db4:	str	r3, [r4]
   28db8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28dbc:	cmp	r3, #0
   28dc0:	movne	r3, #1
   28dc4:	moveq	r3, #0
   28dc8:	uxtb	r3, r3
   28dcc:	cmp	r3, #0
   28dd0:	beq	28ddc <__assert_fail@plt+0x17aec>
   28dd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28dd8:	b	28e58 <__assert_fail@plt+0x17b68>
   28ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   28de0:	cmp	r3, #0
   28de4:	beq	28e54 <__assert_fail@plt+0x17b64>
   28de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28dec:	ldr	r2, [r3, #100]	; 0x64
   28df0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28df4:	lsl	r3, r3, #2
   28df8:	add	r3, r2, r3
   28dfc:	ldr	r3, [r3]
   28e00:	ldrb	r3, [r3, #52]	; 0x34
   28e04:	and	r3, r3, #64	; 0x40
   28e08:	uxtb	r3, r3
   28e0c:	cmp	r3, #0
   28e10:	beq	28e54 <__assert_fail@plt+0x17b64>
   28e14:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28e1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28e24:	bl	29c88 <__assert_fail@plt+0x18998>
   28e28:	mov	r3, r0
   28e2c:	str	r3, [fp, #-24]	; 0xffffffe8
   28e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e34:	cmp	r3, #0
   28e38:	movne	r3, #1
   28e3c:	moveq	r3, #0
   28e40:	uxtb	r3, r3
   28e44:	cmp	r3, #0
   28e48:	beq	28e54 <__assert_fail@plt+0x17b64>
   28e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e50:	b	28e58 <__assert_fail@plt+0x17b68>
   28e54:	mov	r3, #0
   28e58:	mov	r0, r3
   28e5c:	sub	sp, fp, #8
   28e60:	ldr	r4, [sp]
   28e64:	ldr	fp, [sp, #4]
   28e68:	add	sp, sp, #8
   28e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   28e70:	str	fp, [sp, #-8]!
   28e74:	str	lr, [sp, #4]
   28e78:	add	fp, sp, #4
   28e7c:	sub	sp, sp, #32
   28e80:	str	r0, [fp, #-24]	; 0xffffffe8
   28e84:	str	r1, [fp, #-28]	; 0xffffffe4
   28e88:	str	r2, [fp, #-32]	; 0xffffffe0
   28e8c:	mov	r3, #0
   28e90:	str	r3, [fp, #-16]
   28e94:	sub	r3, fp, #16
   28e98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28e9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28ea0:	mov	r0, r3
   28ea4:	bl	1a92c <__assert_fail@plt+0x963c>
   28ea8:	str	r0, [fp, #-12]
   28eac:	ldr	r3, [fp, #-16]
   28eb0:	cmp	r3, #0
   28eb4:	movne	r3, #1
   28eb8:	moveq	r3, #0
   28ebc:	uxtb	r3, r3
   28ec0:	cmp	r3, #0
   28ec4:	beq	28ed0 <__assert_fail@plt+0x17be0>
   28ec8:	ldr	r3, [fp, #-16]
   28ecc:	b	28fe4 <__assert_fail@plt+0x17cf4>
   28ed0:	ldr	r3, [fp, #-12]
   28ed4:	ldr	r3, [r3, #28]
   28ed8:	cmp	r3, #0
   28edc:	bne	28fc8 <__assert_fail@plt+0x17cd8>
   28ee0:	ldr	r3, [fp, #-12]
   28ee4:	add	r2, r3, #28
   28ee8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28eec:	ldr	r3, [r3, #4]
   28ef0:	mov	r1, r3
   28ef4:	mov	r0, r2
   28ef8:	bl	18f04 <__assert_fail@plt+0x7c14>
   28efc:	mov	r3, r0
   28f00:	str	r3, [fp, #-16]
   28f04:	ldr	r3, [fp, #-16]
   28f08:	cmp	r3, #0
   28f0c:	movne	r3, #1
   28f10:	moveq	r3, #0
   28f14:	uxtb	r3, r3
   28f18:	cmp	r3, #0
   28f1c:	beq	28f28 <__assert_fail@plt+0x17c38>
   28f20:	mov	r3, #12
   28f24:	b	28fe4 <__assert_fail@plt+0x17cf4>
   28f28:	mov	r3, #0
   28f2c:	str	r3, [fp, #-8]
   28f30:	b	28fb4 <__assert_fail@plt+0x17cc4>
   28f34:	ldr	r3, [fp, #-12]
   28f38:	add	r0, r3, #28
   28f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f40:	ldr	r2, [r3, #28]
   28f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28f48:	ldr	r1, [r3, #8]
   28f4c:	ldr	r3, [fp, #-8]
   28f50:	lsl	r3, r3, #2
   28f54:	add	r3, r1, r3
   28f58:	ldr	r3, [r3]
   28f5c:	mov	r1, r3
   28f60:	mov	r3, r1
   28f64:	lsl	r3, r3, #1
   28f68:	add	r3, r3, r1
   28f6c:	lsl	r3, r3, #2
   28f70:	add	r3, r2, r3
   28f74:	mov	r1, r3
   28f78:	bl	19a8c <__assert_fail@plt+0x879c>
   28f7c:	mov	r3, r0
   28f80:	str	r3, [fp, #-16]
   28f84:	ldr	r3, [fp, #-16]
   28f88:	cmp	r3, #0
   28f8c:	movne	r3, #1
   28f90:	moveq	r3, #0
   28f94:	uxtb	r3, r3
   28f98:	cmp	r3, #0
   28f9c:	beq	28fa8 <__assert_fail@plt+0x17cb8>
   28fa0:	mov	r3, #12
   28fa4:	b	28fe4 <__assert_fail@plt+0x17cf4>
   28fa8:	ldr	r3, [fp, #-8]
   28fac:	add	r3, r3, #1
   28fb0:	str	r3, [fp, #-8]
   28fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28fb8:	ldr	r3, [r3, #4]
   28fbc:	ldr	r2, [fp, #-8]
   28fc0:	cmp	r2, r3
   28fc4:	blt	28f34 <__assert_fail@plt+0x17c44>
   28fc8:	ldr	r3, [fp, #-12]
   28fcc:	add	r3, r3, #28
   28fd0:	mov	r2, r3
   28fd4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28fd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28fdc:	bl	19260 <__assert_fail@plt+0x7f70>
   28fe0:	mov	r3, r0
   28fe4:	mov	r0, r3
   28fe8:	sub	sp, fp, #4
   28fec:	ldr	fp, [sp]
   28ff0:	add	sp, sp, #4
   28ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   28ff8:	str	fp, [sp, #-8]!
   28ffc:	str	lr, [sp, #4]
   29000:	add	fp, sp, #4
   29004:	sub	sp, sp, #64	; 0x40
   29008:	str	r0, [fp, #-56]	; 0xffffffc8
   2900c:	str	r1, [fp, #-60]	; 0xffffffc4
   29010:	str	r2, [fp, #-64]	; 0xffffffc0
   29014:	str	r3, [fp, #-68]	; 0xffffffbc
   29018:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2901c:	ldr	r1, [r3, #28]
   29020:	ldr	r2, [fp, #-60]	; 0xffffffc4
   29024:	mov	r3, r2
   29028:	lsl	r3, r3, #1
   2902c:	add	r3, r3, r2
   29030:	lsl	r3, r3, #2
   29034:	add	r3, r1, r3
   29038:	str	r3, [fp, #-12]
   2903c:	sub	r3, fp, #48	; 0x30
   29040:	mov	r2, #12
   29044:	mov	r1, #0
   29048:	mov	r0, r3
   2904c:	bl	11218 <memset@plt>
   29050:	mov	r3, #0
   29054:	str	r3, [fp, #-8]
   29058:	b	2921c <__assert_fail@plt+0x17f2c>
   2905c:	ldr	r3, [fp, #-12]
   29060:	ldr	r2, [r3, #8]
   29064:	ldr	r3, [fp, #-8]
   29068:	lsl	r3, r3, #2
   2906c:	add	r3, r2, r3
   29070:	ldr	r3, [r3]
   29074:	str	r3, [fp, #-16]
   29078:	ldr	r2, [fp, #-16]
   2907c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29080:	cmp	r2, r3
   29084:	beq	2920c <__assert_fail@plt+0x17f1c>
   29088:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2908c:	ldr	r2, [r3]
   29090:	ldr	r3, [fp, #-16]
   29094:	lsl	r3, r3, #3
   29098:	add	r3, r2, r3
   2909c:	ldrb	r3, [r3, #4]
   290a0:	and	r3, r3, #8
   290a4:	cmp	r3, #0
   290a8:	beq	29210 <__assert_fail@plt+0x17f20>
   290ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   290b0:	ldr	r1, [r3, #20]
   290b4:	ldr	r2, [fp, #-16]
   290b8:	mov	r3, r2
   290bc:	lsl	r3, r3, #1
   290c0:	add	r3, r3, r2
   290c4:	lsl	r3, r3, #2
   290c8:	add	r3, r1, r3
   290cc:	ldr	r3, [r3, #8]
   290d0:	ldr	r3, [r3]
   290d4:	str	r3, [fp, #-20]	; 0xffffffec
   290d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   290dc:	ldr	r1, [r3, #20]
   290e0:	ldr	r2, [fp, #-16]
   290e4:	mov	r3, r2
   290e8:	lsl	r3, r3, #1
   290ec:	add	r3, r3, r2
   290f0:	lsl	r3, r3, #2
   290f4:	add	r3, r1, r3
   290f8:	ldr	r3, [r3, #4]
   290fc:	cmp	r3, #1
   29100:	ble	29134 <__assert_fail@plt+0x17e44>
   29104:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29108:	ldr	r1, [r3, #20]
   2910c:	ldr	r2, [fp, #-16]
   29110:	mov	r3, r2
   29114:	lsl	r3, r3, #1
   29118:	add	r3, r3, r2
   2911c:	lsl	r3, r3, #2
   29120:	add	r3, r1, r3
   29124:	ldr	r3, [r3, #8]
   29128:	add	r3, r3, #4
   2912c:	ldr	r3, [r3]
   29130:	b	29138 <__assert_fail@plt+0x17e48>
   29134:	mvn	r3, #0
   29138:	str	r3, [fp, #-24]	; 0xffffffe8
   2913c:	ldr	r1, [fp, #-20]	; 0xffffffec
   29140:	ldr	r0, [fp, #-12]
   29144:	bl	1a314 <__assert_fail@plt+0x9024>
   29148:	mov	r3, r0
   2914c:	cmp	r3, #0
   29150:	bne	2916c <__assert_fail@plt+0x17e7c>
   29154:	ldr	r1, [fp, #-20]	; 0xffffffec
   29158:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2915c:	bl	1a314 <__assert_fail@plt+0x9024>
   29160:	mov	r3, r0
   29164:	cmp	r3, #0
   29168:	bne	291a8 <__assert_fail@plt+0x17eb8>
   2916c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29170:	cmp	r3, #0
   29174:	ble	29210 <__assert_fail@plt+0x17f20>
   29178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2917c:	ldr	r0, [fp, #-12]
   29180:	bl	1a314 <__assert_fail@plt+0x9024>
   29184:	mov	r3, r0
   29188:	cmp	r3, #0
   2918c:	bne	29210 <__assert_fail@plt+0x17f20>
   29190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29194:	ldr	r0, [fp, #-64]	; 0xffffffc0
   29198:	bl	1a314 <__assert_fail@plt+0x9024>
   2919c:	mov	r3, r0
   291a0:	cmp	r3, #0
   291a4:	beq	29210 <__assert_fail@plt+0x17f20>
   291a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   291ac:	ldr	r1, [r3, #28]
   291b0:	ldr	r2, [fp, #-16]
   291b4:	mov	r3, r2
   291b8:	lsl	r3, r3, #1
   291bc:	add	r3, r3, r2
   291c0:	lsl	r3, r3, #2
   291c4:	add	r2, r1, r3
   291c8:	sub	r3, fp, #48	; 0x30
   291cc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   291d0:	mov	r0, r3
   291d4:	bl	19260 <__assert_fail@plt+0x7f70>
   291d8:	str	r0, [fp, #-28]	; 0xffffffe4
   291dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   291e0:	cmp	r3, #0
   291e4:	movne	r3, #1
   291e8:	moveq	r3, #0
   291ec:	uxtb	r3, r3
   291f0:	cmp	r3, #0
   291f4:	beq	29210 <__assert_fail@plt+0x17f20>
   291f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   291fc:	mov	r0, r3
   29200:	bl	31b28 <__assert_fail@plt+0x20838>
   29204:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29208:	b	292c8 <__assert_fail@plt+0x17fd8>
   2920c:	nop	{0}
   29210:	ldr	r3, [fp, #-8]
   29214:	add	r3, r3, #1
   29218:	str	r3, [fp, #-8]
   2921c:	ldr	r3, [fp, #-12]
   29220:	ldr	r3, [r3, #4]
   29224:	ldr	r2, [fp, #-8]
   29228:	cmp	r2, r3
   2922c:	blt	2905c <__assert_fail@plt+0x17d6c>
   29230:	mov	r3, #0
   29234:	str	r3, [fp, #-8]
   29238:	b	292a4 <__assert_fail@plt+0x17fb4>
   2923c:	ldr	r3, [fp, #-12]
   29240:	ldr	r2, [r3, #8]
   29244:	ldr	r3, [fp, #-8]
   29248:	lsl	r3, r3, #2
   2924c:	add	r3, r2, r3
   29250:	ldr	r3, [r3]
   29254:	str	r3, [fp, #-32]	; 0xffffffe0
   29258:	sub	r3, fp, #48	; 0x30
   2925c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29260:	mov	r0, r3
   29264:	bl	1a314 <__assert_fail@plt+0x9024>
   29268:	mov	r3, r0
   2926c:	cmp	r3, #0
   29270:	bne	29298 <__assert_fail@plt+0x17fa8>
   29274:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29278:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2927c:	bl	1a314 <__assert_fail@plt+0x9024>
   29280:	mov	r3, r0
   29284:	sub	r3, r3, #1
   29288:	str	r3, [fp, #-36]	; 0xffffffdc
   2928c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29290:	ldr	r0, [fp, #-64]	; 0xffffffc0
   29294:	bl	1a400 <__assert_fail@plt+0x9110>
   29298:	ldr	r3, [fp, #-8]
   2929c:	add	r3, r3, #1
   292a0:	str	r3, [fp, #-8]
   292a4:	ldr	r3, [fp, #-12]
   292a8:	ldr	r3, [r3, #4]
   292ac:	ldr	r2, [fp, #-8]
   292b0:	cmp	r2, r3
   292b4:	blt	2923c <__assert_fail@plt+0x17f4c>
   292b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   292bc:	mov	r0, r3
   292c0:	bl	31b28 <__assert_fail@plt+0x20838>
   292c4:	mov	r3, #0
   292c8:	mov	r0, r3
   292cc:	sub	sp, fp, #4
   292d0:	ldr	fp, [sp]
   292d4:	add	sp, sp, #4
   292d8:	pop	{pc}		; (ldr pc, [sp], #4)
   292dc:	str	fp, [sp, #-8]!
   292e0:	str	lr, [sp, #4]
   292e4:	add	fp, sp, #4
   292e8:	sub	sp, sp, #56	; 0x38
   292ec:	str	r0, [fp, #-40]	; 0xffffffd8
   292f0:	str	r1, [fp, #-44]	; 0xffffffd4
   292f4:	str	r2, [fp, #-48]	; 0xffffffd0
   292f8:	str	r3, [fp, #-52]	; 0xffffffcc
   292fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29300:	ldr	r3, [r3, #84]	; 0x54
   29304:	str	r3, [fp, #-12]
   29308:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2930c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29310:	bl	2f274 <__assert_fail@plt+0x1df84>
   29314:	str	r0, [fp, #-16]
   29318:	ldr	r1, [fp, #8]
   2931c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29320:	bl	2f274 <__assert_fail@plt+0x1df84>
   29324:	str	r0, [fp, #-20]	; 0xffffffec
   29328:	mov	r3, #0
   2932c:	str	r3, [fp, #-8]
   29330:	b	29430 <__assert_fail@plt+0x18140>
   29334:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29338:	ldr	r2, [r3, #116]	; 0x74
   2933c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29340:	ldr	r1, [r3, #8]
   29344:	ldr	r3, [fp, #-8]
   29348:	lsl	r3, r3, #2
   2934c:	add	r3, r1, r3
   29350:	ldr	r3, [r3]
   29354:	mov	r1, r3
   29358:	mov	r3, r1
   2935c:	lsl	r3, r3, #1
   29360:	add	r3, r3, r1
   29364:	lsl	r3, r3, #3
   29368:	add	r3, r2, r3
   2936c:	str	r3, [fp, #-24]	; 0xffffffe8
   29370:	ldr	r3, [fp, #-12]
   29374:	ldr	r2, [r3]
   29378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2937c:	ldr	r3, [r3]
   29380:	lsl	r3, r3, #3
   29384:	add	r3, r2, r3
   29388:	ldr	r3, [r3]
   2938c:	str	r3, [fp, #-28]	; 0xffffffe4
   29390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29394:	ldr	r2, [r3, #8]
   29398:	ldr	r3, [fp, #-8]
   2939c:	lsl	r3, r3, #2
   293a0:	add	r3, r2, r3
   293a4:	ldr	r1, [r3]
   293a8:	ldr	r3, [fp, #-16]
   293ac:	str	r3, [sp, #4]
   293b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   293b4:	str	r3, [sp]
   293b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   293bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   293c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   293c4:	bl	29754 <__assert_fail@plt+0x18464>
   293c8:	str	r0, [fp, #-32]	; 0xffffffe0
   293cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   293d0:	ldr	r2, [r3, #8]
   293d4:	ldr	r3, [fp, #-8]
   293d8:	lsl	r3, r3, #2
   293dc:	add	r3, r2, r3
   293e0:	ldr	r1, [r3]
   293e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   293e8:	str	r3, [sp, #4]
   293ec:	ldr	r3, [fp, #8]
   293f0:	str	r3, [sp]
   293f4:	ldr	r3, [fp, #4]
   293f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   293fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29400:	bl	29754 <__assert_fail@plt+0x18464>
   29404:	str	r0, [fp, #-36]	; 0xffffffdc
   29408:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2940c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29410:	cmp	r2, r3
   29414:	bne	29428 <__assert_fail@plt+0x18138>
   29418:	ldr	r3, [fp, #-8]
   2941c:	add	r3, r3, #1
   29420:	str	r3, [fp, #-8]
   29424:	b	29430 <__assert_fail@plt+0x18140>
   29428:	mov	r3, #1
   2942c:	b	29448 <__assert_fail@plt+0x18158>
   29430:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29434:	ldr	r3, [r3, #4]
   29438:	ldr	r2, [fp, #-8]
   2943c:	cmp	r2, r3
   29440:	blt	29334 <__assert_fail@plt+0x18044>
   29444:	mov	r3, #0
   29448:	mov	r0, r3
   2944c:	sub	sp, fp, #4
   29450:	ldr	fp, [sp]
   29454:	add	sp, sp, #4
   29458:	pop	{pc}		; (ldr pc, [sp], #4)
   2945c:	str	fp, [sp, #-8]!
   29460:	str	lr, [sp, #4]
   29464:	add	fp, sp, #4
   29468:	sub	sp, sp, #56	; 0x38
   2946c:	str	r0, [fp, #-40]	; 0xffffffd8
   29470:	str	r1, [fp, #-44]	; 0xffffffd4
   29474:	str	r2, [fp, #-48]	; 0xffffffd0
   29478:	str	r3, [fp, #-52]	; 0xffffffcc
   2947c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29480:	ldr	r3, [r3, #84]	; 0x54
   29484:	str	r3, [fp, #-16]
   29488:	ldr	r3, [fp, #-16]
   2948c:	ldr	r1, [r3, #24]
   29490:	ldr	r2, [fp, #-52]	; 0xffffffcc
   29494:	mov	r3, r2
   29498:	lsl	r3, r3, #1
   2949c:	add	r3, r3, r2
   294a0:	lsl	r3, r3, #2
   294a4:	add	r3, r1, r3
   294a8:	str	r3, [fp, #-20]	; 0xffffffec
   294ac:	mov	r3, #0
   294b0:	str	r3, [fp, #-8]
   294b4:	b	29720 <__assert_fail@plt+0x18430>
   294b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   294bc:	ldr	r2, [r3, #8]
   294c0:	ldr	r3, [fp, #-8]
   294c4:	lsl	r3, r3, #2
   294c8:	add	r3, r2, r3
   294cc:	ldr	r3, [r3]
   294d0:	str	r3, [fp, #-24]	; 0xffffffe8
   294d4:	ldr	r3, [fp, #-16]
   294d8:	ldr	r2, [r3]
   294dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   294e0:	lsl	r3, r3, #3
   294e4:	add	r3, r2, r3
   294e8:	ldrb	r3, [r3, #4]
   294ec:	cmp	r3, #8
   294f0:	beq	29680 <__assert_fail@plt+0x18390>
   294f4:	cmp	r3, #9
   294f8:	beq	296bc <__assert_fail@plt+0x183cc>
   294fc:	cmp	r3, #4
   29500:	bne	296f8 <__assert_fail@plt+0x18408>
   29504:	ldr	r3, [fp, #4]
   29508:	cmn	r3, #1
   2950c:	beq	29700 <__assert_fail@plt+0x18410>
   29510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29514:	ldr	r1, [r3, #116]	; 0x74
   29518:	ldr	r2, [fp, #4]
   2951c:	mov	r3, r2
   29520:	lsl	r3, r3, #1
   29524:	add	r3, r3, r2
   29528:	lsl	r3, r3, #3
   2952c:	add	r3, r1, r3
   29530:	str	r3, [fp, #-12]
   29534:	ldr	r3, [fp, #-12]
   29538:	ldr	r3, [r3]
   2953c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29540:	cmp	r2, r3
   29544:	bne	29658 <__assert_fail@plt+0x18368>
   29548:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2954c:	cmp	r3, #31
   29550:	bgt	29570 <__assert_fail@plt+0x18280>
   29554:	ldr	r3, [fp, #-12]
   29558:	ldr	r2, [r3, #16]
   2955c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29560:	lsr	r3, r2, r3
   29564:	and	r3, r3, #1
   29568:	cmp	r3, #0
   2956c:	beq	29660 <__assert_fail@plt+0x18370>
   29570:	ldr	r3, [fp, #-16]
   29574:	ldr	r1, [r3, #20]
   29578:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2957c:	mov	r3, r2
   29580:	lsl	r3, r3, #1
   29584:	add	r3, r3, r2
   29588:	lsl	r3, r3, #2
   2958c:	add	r3, r1, r3
   29590:	ldr	r3, [r3, #8]
   29594:	ldr	r3, [r3]
   29598:	str	r3, [fp, #-28]	; 0xffffffe4
   2959c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   295a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   295a4:	cmp	r2, r3
   295a8:	bne	295cc <__assert_fail@plt+0x182dc>
   295ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   295b0:	and	r3, r3, #1
   295b4:	cmp	r3, #0
   295b8:	beq	295c4 <__assert_fail@plt+0x182d4>
   295bc:	mvn	r3, #0
   295c0:	b	29740 <__assert_fail@plt+0x18450>
   295c4:	mov	r3, #0
   295c8:	b	29740 <__assert_fail@plt+0x18450>
   295cc:	ldr	r3, [fp, #4]
   295d0:	str	r3, [sp]
   295d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   295d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   295dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   295e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   295e4:	bl	2945c <__assert_fail@plt+0x1816c>
   295e8:	str	r0, [fp, #-32]	; 0xffffffe0
   295ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   295f0:	cmn	r3, #1
   295f4:	bne	29600 <__assert_fail@plt+0x18310>
   295f8:	mvn	r3, #0
   295fc:	b	29740 <__assert_fail@plt+0x18450>
   29600:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29604:	cmp	r3, #0
   29608:	bne	29624 <__assert_fail@plt+0x18334>
   2960c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29610:	and	r3, r3, #2
   29614:	cmp	r3, #0
   29618:	beq	29624 <__assert_fail@plt+0x18334>
   2961c:	mov	r3, #0
   29620:	b	29740 <__assert_fail@plt+0x18450>
   29624:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29628:	cmp	r3, #31
   2962c:	bgt	29664 <__assert_fail@plt+0x18374>
   29630:	ldr	r3, [fp, #-12]
   29634:	ldr	r2, [r3, #16]
   29638:	mov	r1, #1
   2963c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29640:	lsl	r3, r1, r3
   29644:	mvn	r3, r3
   29648:	and	r2, r2, r3
   2964c:	ldr	r3, [fp, #-12]
   29650:	str	r2, [r3, #16]
   29654:	b	29664 <__assert_fail@plt+0x18374>
   29658:	nop	{0}
   2965c:	b	29664 <__assert_fail@plt+0x18374>
   29660:	nop	{0}
   29664:	ldr	r3, [fp, #-12]
   29668:	add	r2, r3, #24
   2966c:	str	r2, [fp, #-12]
   29670:	ldrb	r3, [r3, #20]
   29674:	cmp	r3, #0
   29678:	bne	29534 <__assert_fail@plt+0x18244>
   2967c:	b	29700 <__assert_fail@plt+0x18410>
   29680:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29684:	and	r3, r3, #1
   29688:	cmp	r3, #0
   2968c:	beq	29708 <__assert_fail@plt+0x18418>
   29690:	ldr	r3, [fp, #-16]
   29694:	ldr	r2, [r3]
   29698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2969c:	lsl	r3, r3, #3
   296a0:	add	r3, r2, r3
   296a4:	ldr	r3, [r3]
   296a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   296ac:	cmp	r2, r3
   296b0:	bne	29708 <__assert_fail@plt+0x18418>
   296b4:	mvn	r3, #0
   296b8:	b	29740 <__assert_fail@plt+0x18450>
   296bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   296c0:	and	r3, r3, #2
   296c4:	cmp	r3, #0
   296c8:	beq	29710 <__assert_fail@plt+0x18420>
   296cc:	ldr	r3, [fp, #-16]
   296d0:	ldr	r2, [r3]
   296d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   296d8:	lsl	r3, r3, #3
   296dc:	add	r3, r2, r3
   296e0:	ldr	r3, [r3]
   296e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   296e8:	cmp	r2, r3
   296ec:	bne	29710 <__assert_fail@plt+0x18420>
   296f0:	mov	r3, #0
   296f4:	b	29740 <__assert_fail@plt+0x18450>
   296f8:	nop	{0}
   296fc:	b	29714 <__assert_fail@plt+0x18424>
   29700:	nop	{0}
   29704:	b	29714 <__assert_fail@plt+0x18424>
   29708:	nop	{0}
   2970c:	b	29714 <__assert_fail@plt+0x18424>
   29710:	nop	{0}
   29714:	ldr	r3, [fp, #-8]
   29718:	add	r3, r3, #1
   2971c:	str	r3, [fp, #-8]
   29720:	ldr	r3, [fp, #-20]	; 0xffffffec
   29724:	ldr	r3, [r3, #4]
   29728:	ldr	r2, [fp, #-8]
   2972c:	cmp	r2, r3
   29730:	blt	294b8 <__assert_fail@plt+0x181c8>
   29734:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29738:	asr	r3, r3, #1
   2973c:	and	r3, r3, #1
   29740:	mov	r0, r3
   29744:	sub	sp, fp, #4
   29748:	ldr	fp, [sp]
   2974c:	add	sp, sp, #4
   29750:	pop	{pc}		; (ldr pc, [sp], #4)
   29754:	str	fp, [sp, #-8]!
   29758:	str	lr, [sp, #4]
   2975c:	add	fp, sp, #4
   29760:	sub	sp, sp, #32
   29764:	str	r0, [fp, #-16]
   29768:	str	r1, [fp, #-20]	; 0xffffffec
   2976c:	str	r2, [fp, #-24]	; 0xffffffe8
   29770:	str	r3, [fp, #-28]	; 0xffffffe4
   29774:	ldr	r3, [fp, #-16]
   29778:	ldr	r1, [r3, #116]	; 0x74
   2977c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29780:	mov	r3, r2
   29784:	lsl	r3, r3, #1
   29788:	add	r3, r3, r2
   2978c:	lsl	r3, r3, #3
   29790:	add	r3, r1, r3
   29794:	str	r3, [fp, #-8]
   29798:	ldr	r3, [fp, #-8]
   2979c:	ldr	r3, [r3, #8]
   297a0:	ldr	r2, [fp, #4]
   297a4:	cmp	r2, r3
   297a8:	bge	297b4 <__assert_fail@plt+0x184c4>
   297ac:	mvn	r3, #0
   297b0:	b	29850 <__assert_fail@plt+0x18560>
   297b4:	ldr	r3, [fp, #-8]
   297b8:	ldr	r3, [r3, #12]
   297bc:	ldr	r2, [fp, #4]
   297c0:	cmp	r2, r3
   297c4:	ble	297d0 <__assert_fail@plt+0x184e0>
   297c8:	mov	r3, #1
   297cc:	b	29850 <__assert_fail@plt+0x18560>
   297d0:	ldr	r3, [fp, #-8]
   297d4:	ldr	r3, [r3, #8]
   297d8:	ldr	r2, [fp, #4]
   297dc:	cmp	r2, r3
   297e0:	moveq	r3, #1
   297e4:	movne	r3, #0
   297e8:	uxtb	r3, r3
   297ec:	str	r3, [fp, #-12]
   297f0:	ldr	r3, [fp, #-8]
   297f4:	ldr	r3, [r3, #12]
   297f8:	ldr	r2, [fp, #4]
   297fc:	cmp	r2, r3
   29800:	bne	2980c <__assert_fail@plt+0x1851c>
   29804:	mov	r3, #2
   29808:	b	29810 <__assert_fail@plt+0x18520>
   2980c:	mov	r3, #0
   29810:	ldr	r2, [fp, #-12]
   29814:	orr	r3, r2, r3
   29818:	str	r3, [fp, #-12]
   2981c:	ldr	r3, [fp, #-12]
   29820:	cmp	r3, #0
   29824:	bne	29830 <__assert_fail@plt+0x18540>
   29828:	mov	r3, #0
   2982c:	b	29850 <__assert_fail@plt+0x18560>
   29830:	ldr	r3, [fp, #8]
   29834:	str	r3, [sp]
   29838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2983c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29840:	ldr	r1, [fp, #-12]
   29844:	ldr	r0, [fp, #-16]
   29848:	bl	2945c <__assert_fail@plt+0x1816c>
   2984c:	mov	r3, r0
   29850:	mov	r0, r3
   29854:	sub	sp, fp, #4
   29858:	ldr	fp, [sp]
   2985c:	add	sp, sp, #4
   29860:	pop	{pc}		; (ldr pc, [sp], #4)
   29864:	str	fp, [sp, #-8]!
   29868:	str	lr, [sp, #4]
   2986c:	add	fp, sp, #4
   29870:	sub	sp, sp, #64	; 0x40
   29874:	str	r0, [fp, #-56]	; 0xffffffc8
   29878:	str	r1, [fp, #-60]	; 0xffffffc4
   2987c:	str	r2, [fp, #-64]	; 0xffffffc0
   29880:	str	r3, [fp, #-68]	; 0xffffffbc
   29884:	mov	r3, #0
   29888:	str	r3, [fp, #-12]
   2988c:	b	29c5c <__assert_fail@plt+0x1896c>
   29890:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29894:	ldr	r2, [r3, #8]
   29898:	ldr	r3, [fp, #-12]
   2989c:	lsl	r3, r3, #2
   298a0:	add	r3, r2, r3
   298a4:	ldr	r3, [r3]
   298a8:	mov	r2, r3
   298ac:	mov	r3, r2
   298b0:	lsl	r3, r3, #1
   298b4:	add	r3, r3, r2
   298b8:	lsl	r3, r3, #3
   298bc:	mov	r2, r3
   298c0:	ldr	r3, [fp, #4]
   298c4:	add	r3, r3, r2
   298c8:	str	r3, [fp, #-24]	; 0xffffffe8
   298cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298d0:	ldr	r3, [r3, #8]
   298d4:	ldr	r2, [fp, #8]
   298d8:	cmp	r2, r3
   298dc:	ble	29c4c <__assert_fail@plt+0x1895c>
   298e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298e4:	ldr	r3, [r3, #4]
   298e8:	ldr	r2, [fp, #8]
   298ec:	cmp	r2, r3
   298f0:	bgt	29c4c <__assert_fail@plt+0x1895c>
   298f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   298f8:	ldr	r2, [r3]
   298fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29900:	ldr	r3, [r3]
   29904:	lsl	r3, r3, #3
   29908:	add	r3, r2, r3
   2990c:	ldr	r3, [r3]
   29910:	str	r3, [fp, #-28]	; 0xffffffe4
   29914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29918:	ldr	r3, [r3, #12]
   2991c:	ldr	r2, [fp, #8]
   29920:	cmp	r2, r3
   29924:	bne	29b68 <__assert_fail@plt+0x18878>
   29928:	mvn	r3, #0
   2992c:	str	r3, [fp, #-16]
   29930:	mvn	r3, #0
   29934:	str	r3, [fp, #-20]	; 0xffffffec
   29938:	mov	r3, #0
   2993c:	str	r3, [fp, #-8]
   29940:	b	299fc <__assert_fail@plt+0x1870c>
   29944:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29948:	ldr	r2, [r3, #8]
   2994c:	ldr	r3, [fp, #-8]
   29950:	lsl	r3, r3, #2
   29954:	add	r3, r2, r3
   29958:	ldr	r3, [r3]
   2995c:	str	r3, [fp, #-32]	; 0xffffffe0
   29960:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29964:	ldr	r2, [r3]
   29968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2996c:	lsl	r3, r3, #3
   29970:	add	r3, r2, r3
   29974:	ldrb	r3, [r3, #4]
   29978:	str	r3, [fp, #-36]	; 0xffffffdc
   2997c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29980:	cmp	r3, #8
   29984:	bne	299b8 <__assert_fail@plt+0x186c8>
   29988:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2998c:	ldr	r2, [r3]
   29990:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29994:	lsl	r3, r3, #3
   29998:	add	r3, r2, r3
   2999c:	ldr	r3, [r3]
   299a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   299a4:	cmp	r2, r3
   299a8:	bne	299b8 <__assert_fail@plt+0x186c8>
   299ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   299b0:	str	r3, [fp, #-16]
   299b4:	b	299f0 <__assert_fail@plt+0x18700>
   299b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   299bc:	cmp	r3, #9
   299c0:	bne	299f0 <__assert_fail@plt+0x18700>
   299c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   299c8:	ldr	r2, [r3]
   299cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   299d0:	lsl	r3, r3, #3
   299d4:	add	r3, r2, r3
   299d8:	ldr	r3, [r3]
   299dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   299e0:	cmp	r2, r3
   299e4:	bne	299f0 <__assert_fail@plt+0x18700>
   299e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   299ec:	str	r3, [fp, #-20]	; 0xffffffec
   299f0:	ldr	r3, [fp, #-8]
   299f4:	add	r3, r3, #1
   299f8:	str	r3, [fp, #-8]
   299fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29a00:	ldr	r3, [r3, #4]
   29a04:	ldr	r2, [fp, #-8]
   29a08:	cmp	r2, r3
   29a0c:	blt	29944 <__assert_fail@plt+0x18654>
   29a10:	ldr	r3, [fp, #-16]
   29a14:	cmp	r3, #0
   29a18:	blt	29a58 <__assert_fail@plt+0x18768>
   29a1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29a20:	ldr	r2, [fp, #-60]	; 0xffffffc4
   29a24:	ldr	r1, [fp, #-16]
   29a28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29a2c:	bl	28ff8 <__assert_fail@plt+0x17d08>
   29a30:	str	r0, [fp, #-40]	; 0xffffffd8
   29a34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29a38:	cmp	r3, #0
   29a3c:	movne	r3, #1
   29a40:	moveq	r3, #0
   29a44:	uxtb	r3, r3
   29a48:	cmp	r3, #0
   29a4c:	beq	29a58 <__assert_fail@plt+0x18768>
   29a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29a54:	b	29c74 <__assert_fail@plt+0x18984>
   29a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a5c:	cmp	r3, #0
   29a60:	blt	29c50 <__assert_fail@plt+0x18960>
   29a64:	mov	r3, #0
   29a68:	str	r3, [fp, #-8]
   29a6c:	b	29b50 <__assert_fail@plt+0x18860>
   29a70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29a74:	ldr	r2, [r3, #8]
   29a78:	ldr	r3, [fp, #-8]
   29a7c:	lsl	r3, r3, #2
   29a80:	add	r3, r2, r3
   29a84:	ldr	r3, [r3]
   29a88:	str	r3, [fp, #-44]	; 0xffffffd4
   29a8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29a90:	ldr	r1, [r3, #28]
   29a94:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29a98:	mov	r3, r2
   29a9c:	lsl	r3, r3, #1
   29aa0:	add	r3, r3, r2
   29aa4:	lsl	r3, r3, #2
   29aa8:	add	r3, r1, r3
   29aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   29ab0:	mov	r0, r3
   29ab4:	bl	1a314 <__assert_fail@plt+0x9024>
   29ab8:	mov	r3, r0
   29abc:	cmp	r3, #0
   29ac0:	bne	29b44 <__assert_fail@plt+0x18854>
   29ac4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29ac8:	ldr	r1, [r3, #24]
   29acc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29ad0:	mov	r3, r2
   29ad4:	lsl	r3, r3, #1
   29ad8:	add	r3, r3, r2
   29adc:	lsl	r3, r3, #2
   29ae0:	add	r3, r1, r3
   29ae4:	ldr	r1, [fp, #-20]	; 0xffffffec
   29ae8:	mov	r0, r3
   29aec:	bl	1a314 <__assert_fail@plt+0x9024>
   29af0:	mov	r3, r0
   29af4:	cmp	r3, #0
   29af8:	bne	29b44 <__assert_fail@plt+0x18854>
   29afc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29b00:	ldr	r2, [fp, #-60]	; 0xffffffc4
   29b04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29b08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29b0c:	bl	28ff8 <__assert_fail@plt+0x17d08>
   29b10:	str	r0, [fp, #-40]	; 0xffffffd8
   29b14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29b18:	cmp	r3, #0
   29b1c:	movne	r3, #1
   29b20:	moveq	r3, #0
   29b24:	uxtb	r3, r3
   29b28:	cmp	r3, #0
   29b2c:	beq	29b38 <__assert_fail@plt+0x18848>
   29b30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29b34:	b	29c74 <__assert_fail@plt+0x18984>
   29b38:	ldr	r3, [fp, #-8]
   29b3c:	sub	r3, r3, #1
   29b40:	str	r3, [fp, #-8]
   29b44:	ldr	r3, [fp, #-8]
   29b48:	add	r3, r3, #1
   29b4c:	str	r3, [fp, #-8]
   29b50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29b54:	ldr	r3, [r3, #4]
   29b58:	ldr	r2, [fp, #-8]
   29b5c:	cmp	r2, r3
   29b60:	blt	29a70 <__assert_fail@plt+0x18780>
   29b64:	b	29c50 <__assert_fail@plt+0x18960>
   29b68:	mov	r3, #0
   29b6c:	str	r3, [fp, #-8]
   29b70:	b	29c34 <__assert_fail@plt+0x18944>
   29b74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29b78:	ldr	r2, [r3, #8]
   29b7c:	ldr	r3, [fp, #-8]
   29b80:	lsl	r3, r3, #2
   29b84:	add	r3, r2, r3
   29b88:	ldr	r3, [r3]
   29b8c:	str	r3, [fp, #-48]	; 0xffffffd0
   29b90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29b94:	ldr	r2, [r3]
   29b98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29b9c:	lsl	r3, r3, #3
   29ba0:	add	r3, r2, r3
   29ba4:	ldrb	r3, [r3, #4]
   29ba8:	str	r3, [fp, #-52]	; 0xffffffcc
   29bac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29bb0:	cmp	r3, #9
   29bb4:	beq	29bc4 <__assert_fail@plt+0x188d4>
   29bb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29bbc:	cmp	r3, #8
   29bc0:	bne	29c28 <__assert_fail@plt+0x18938>
   29bc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29bc8:	ldr	r2, [r3]
   29bcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29bd0:	lsl	r3, r3, #3
   29bd4:	add	r3, r2, r3
   29bd8:	ldr	r3, [r3]
   29bdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29be0:	cmp	r2, r3
   29be4:	bne	29c24 <__assert_fail@plt+0x18934>
   29be8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29bec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   29bf0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   29bf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29bf8:	bl	28ff8 <__assert_fail@plt+0x17d08>
   29bfc:	str	r0, [fp, #-40]	; 0xffffffd8
   29c00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29c04:	cmp	r3, #0
   29c08:	movne	r3, #1
   29c0c:	moveq	r3, #0
   29c10:	uxtb	r3, r3
   29c14:	cmp	r3, #0
   29c18:	beq	29c28 <__assert_fail@plt+0x18938>
   29c1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29c20:	b	29c74 <__assert_fail@plt+0x18984>
   29c24:	nop	{0}
   29c28:	ldr	r3, [fp, #-8]
   29c2c:	add	r3, r3, #1
   29c30:	str	r3, [fp, #-8]
   29c34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29c38:	ldr	r3, [r3, #4]
   29c3c:	ldr	r2, [fp, #-8]
   29c40:	cmp	r2, r3
   29c44:	blt	29b74 <__assert_fail@plt+0x18884>
   29c48:	b	29c50 <__assert_fail@plt+0x18960>
   29c4c:	nop	{0}
   29c50:	ldr	r3, [fp, #-12]
   29c54:	add	r3, r3, #1
   29c58:	str	r3, [fp, #-12]
   29c5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29c60:	ldr	r3, [r3, #4]
   29c64:	ldr	r2, [fp, #-12]
   29c68:	cmp	r2, r3
   29c6c:	blt	29890 <__assert_fail@plt+0x185a0>
   29c70:	mov	r3, #0
   29c74:	mov	r0, r3
   29c78:	sub	sp, fp, #4
   29c7c:	ldr	fp, [sp]
   29c80:	add	sp, sp, #4
   29c84:	pop	{pc}		; (ldr pc, [sp], #4)
   29c88:	str	fp, [sp, #-8]!
   29c8c:	str	lr, [sp, #4]
   29c90:	add	fp, sp, #4
   29c94:	sub	sp, sp, #104	; 0x68
   29c98:	str	r0, [fp, #-88]	; 0xffffffa8
   29c9c:	str	r1, [fp, #-92]	; 0xffffffa4
   29ca0:	str	r2, [fp, #-96]	; 0xffffffa0
   29ca4:	str	r3, [fp, #-100]	; 0xffffff9c
   29ca8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   29cac:	ldr	r3, [r3, #84]	; 0x54
   29cb0:	str	r3, [fp, #-24]	; 0xffffffe8
   29cb4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   29cb8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29cbc:	bl	2f274 <__assert_fail@plt+0x1df84>
   29cc0:	str	r0, [fp, #-28]	; 0xffffffe4
   29cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29cc8:	cmn	r3, #1
   29ccc:	bne	29cd8 <__assert_fail@plt+0x189e8>
   29cd0:	mov	r3, #0
   29cd4:	b	2a12c <__assert_fail@plt+0x18e3c>
   29cd8:	mov	r3, #0
   29cdc:	str	r3, [fp, #-84]	; 0xffffffac
   29ce0:	mov	r3, #0
   29ce4:	str	r3, [fp, #-12]
   29ce8:	b	2a0dc <__assert_fail@plt+0x18dec>
   29cec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29cf0:	ldr	r2, [r3, #8]
   29cf4:	ldr	r3, [fp, #-12]
   29cf8:	lsl	r3, r3, #2
   29cfc:	add	r3, r2, r3
   29d00:	ldr	r3, [r3]
   29d04:	str	r3, [fp, #-32]	; 0xffffffe0
   29d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29d0c:	ldr	r2, [r3]
   29d10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29d14:	lsl	r3, r3, #3
   29d18:	add	r3, r2, r3
   29d1c:	ldrb	r3, [r3, #4]
   29d20:	str	r3, [fp, #-36]	; 0xffffffdc
   29d24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29d28:	ldr	r3, [r3, #8]
   29d2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29d30:	cmp	r2, r3
   29d34:	bne	29d4c <__assert_fail@plt+0x18a5c>
   29d38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29d3c:	ldr	r3, [r3, #12]
   29d40:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29d44:	cmp	r2, r3
   29d48:	beq	2a0c4 <__assert_fail@plt+0x18dd4>
   29d4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29d50:	cmp	r3, #4
   29d54:	bne	2a0cc <__assert_fail@plt+0x18ddc>
   29d58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   29d5c:	ldr	r1, [r3, #116]	; 0x74
   29d60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29d64:	mov	r3, r2
   29d68:	lsl	r3, r3, #1
   29d6c:	add	r3, r3, r2
   29d70:	lsl	r3, r3, #3
   29d74:	add	r3, r1, r3
   29d78:	str	r3, [fp, #-20]	; 0xffffffec
   29d7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29d80:	str	r3, [fp, #-16]
   29d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   29d88:	ldr	r3, [r3]
   29d8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29d90:	cmp	r2, r3
   29d94:	bne	2a090 <__assert_fail@plt+0x18da0>
   29d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   29d9c:	ldr	r2, [r3, #12]
   29da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   29da4:	ldr	r3, [r3, #8]
   29da8:	sub	r3, r2, r3
   29dac:	str	r3, [fp, #-40]	; 0xffffffd8
   29db0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29db4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29db8:	add	r3, r2, r3
   29dbc:	str	r3, [fp, #-44]	; 0xffffffd4
   29dc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29dc4:	cmp	r3, #0
   29dc8:	beq	29de8 <__assert_fail@plt+0x18af8>
   29dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29dd0:	ldr	r2, [r3, #12]
   29dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29dd8:	lsl	r3, r3, #2
   29ddc:	add	r3, r2, r3
   29de0:	ldr	r3, [r3]
   29de4:	b	29e10 <__assert_fail@plt+0x18b20>
   29de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29dec:	ldr	r1, [r3, #20]
   29df0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29df4:	mov	r3, r2
   29df8:	lsl	r3, r3, #1
   29dfc:	add	r3, r3, r2
   29e00:	lsl	r3, r3, #2
   29e04:	add	r3, r1, r3
   29e08:	ldr	r3, [r3, #8]
   29e0c:	ldr	r3, [r3]
   29e10:	str	r3, [fp, #-48]	; 0xffffffd0
   29e14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29e18:	ldr	r3, [r3, #12]
   29e1c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29e20:	cmp	r2, r3
   29e24:	bgt	2a098 <__assert_fail@plt+0x18da8>
   29e28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29e2c:	ldr	r2, [r3]
   29e30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29e34:	lsl	r3, r3, #2
   29e38:	add	r3, r2, r3
   29e3c:	ldr	r3, [r3]
   29e40:	cmp	r3, #0
   29e44:	beq	2a098 <__assert_fail@plt+0x18da8>
   29e48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29e4c:	ldr	r2, [r3]
   29e50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29e54:	lsl	r3, r3, #2
   29e58:	add	r3, r2, r3
   29e5c:	ldr	r3, [r3]
   29e60:	cmp	r3, #0
   29e64:	beq	2a098 <__assert_fail@plt+0x18da8>
   29e68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29e6c:	ldr	r2, [r3]
   29e70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29e74:	lsl	r3, r3, #2
   29e78:	add	r3, r2, r3
   29e7c:	ldr	r3, [r3]
   29e80:	add	r3, r3, #4
   29e84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   29e88:	mov	r0, r3
   29e8c:	bl	1a314 <__assert_fail@plt+0x9024>
   29e90:	mov	r3, r0
   29e94:	cmp	r3, #0
   29e98:	beq	2a098 <__assert_fail@plt+0x18da8>
   29e9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29ea0:	add	r1, r3, #16
   29ea4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29ea8:	str	r3, [sp, #4]
   29eac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29eb0:	str	r3, [sp]
   29eb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29eb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29ebc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29ec0:	bl	292dc <__assert_fail@plt+0x17fec>
   29ec4:	mov	r3, r0
   29ec8:	cmp	r3, #0
   29ecc:	bne	2a098 <__assert_fail@plt+0x18da8>
   29ed0:	ldr	r3, [fp, #-84]	; 0xffffffac
   29ed4:	cmp	r3, #0
   29ed8:	bne	29f40 <__assert_fail@plt+0x18c50>
   29edc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   29ee0:	sub	r3, fp, #84	; 0x54
   29ee4:	ldrd	r0, [r2]
   29ee8:	strd	r0, [r3]
   29eec:	ldrd	r0, [r2, #8]
   29ef0:	strd	r0, [r3, #8]
   29ef4:	ldrd	r0, [r2, #16]
   29ef8:	strd	r0, [r3, #16]
   29efc:	ldr	r2, [r2, #24]
   29f00:	str	r2, [r3, #24]
   29f04:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29f08:	add	r2, r3, #16
   29f0c:	sub	r3, fp, #84	; 0x54
   29f10:	add	r3, r3, #16
   29f14:	mov	r1, r2
   29f18:	mov	r0, r3
   29f1c:	bl	19160 <__assert_fail@plt+0x7e70>
   29f20:	str	r0, [fp, #-8]
   29f24:	ldr	r3, [fp, #-8]
   29f28:	cmp	r3, #0
   29f2c:	movne	r3, #1
   29f30:	moveq	r3, #0
   29f34:	uxtb	r3, r3
   29f38:	cmp	r3, #0
   29f3c:	bne	2a0fc <__assert_fail@plt+0x18e0c>
   29f40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29f44:	str	r3, [fp, #-76]	; 0xffffffb4
   29f48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29f4c:	str	r3, [fp, #-72]	; 0xffffffb8
   29f50:	sub	r3, fp, #84	; 0x54
   29f54:	add	r3, r3, #16
   29f58:	ldr	r1, [fp, #-16]
   29f5c:	mov	r0, r3
   29f60:	bl	19eec <__assert_fail@plt+0x8bfc>
   29f64:	mov	r3, r0
   29f68:	strb	r3, [fp, #-49]	; 0xffffffcf
   29f6c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   29f70:	eor	r3, r3, #1
   29f74:	uxtb	r3, r3
   29f78:	cmp	r3, #0
   29f7c:	beq	29f8c <__assert_fail@plt+0x18c9c>
   29f80:	mov	r3, #12
   29f84:	str	r3, [fp, #-8]
   29f88:	b	2a110 <__assert_fail@plt+0x18e20>
   29f8c:	ldr	r2, [fp, #-84]	; 0xffffffac
   29f90:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29f94:	lsl	r3, r3, #2
   29f98:	add	r3, r2, r3
   29f9c:	ldr	r3, [r3]
   29fa0:	str	r3, [fp, #-56]	; 0xffffffc8
   29fa4:	sub	r3, fp, #84	; 0x54
   29fa8:	mov	r1, r3
   29fac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29fb0:	bl	284ac <__assert_fail@plt+0x171bc>
   29fb4:	str	r0, [fp, #-8]
   29fb8:	ldr	r3, [fp, #-8]
   29fbc:	cmp	r3, #0
   29fc0:	movne	r3, #1
   29fc4:	moveq	r3, #0
   29fc8:	uxtb	r3, r3
   29fcc:	cmp	r3, #0
   29fd0:	bne	2a104 <__assert_fail@plt+0x18e14>
   29fd4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29fd8:	ldr	r3, [r3, #4]
   29fdc:	cmp	r3, #0
   29fe0:	beq	2a020 <__assert_fail@plt+0x18d30>
   29fe4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29fe8:	ldr	r1, [r3, #4]
   29fec:	ldr	r2, [fp, #-84]	; 0xffffffac
   29ff0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29ff4:	add	r3, r3, #1
   29ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29ffc:	bl	28a94 <__assert_fail@plt+0x177a4>
   2a000:	str	r0, [fp, #-8]
   2a004:	ldr	r3, [fp, #-8]
   2a008:	cmp	r3, #0
   2a00c:	movne	r3, #1
   2a010:	moveq	r3, #0
   2a014:	uxtb	r3, r3
   2a018:	cmp	r3, #0
   2a01c:	bne	2a10c <__assert_fail@plt+0x18e1c>
   2a020:	ldr	r2, [fp, #-84]	; 0xffffffac
   2a024:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2a028:	lsl	r3, r3, #2
   2a02c:	add	r3, r2, r3
   2a030:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2a034:	str	r2, [r3]
   2a038:	sub	r3, fp, #84	; 0x54
   2a03c:	add	r3, r3, #16
   2a040:	ldr	r1, [fp, #-16]
   2a044:	mov	r0, r3
   2a048:	bl	1a314 <__assert_fail@plt+0x9024>
   2a04c:	mov	r3, r0
   2a050:	sub	r2, r3, #1
   2a054:	sub	r3, fp, #84	; 0x54
   2a058:	add	r3, r3, #16
   2a05c:	mov	r1, r2
   2a060:	mov	r0, r3
   2a064:	bl	1a400 <__assert_fail@plt+0x9110>
   2a068:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a06c:	ldr	r1, [r3, #116]	; 0x74
   2a070:	ldr	r2, [fp, #-16]
   2a074:	mov	r3, r2
   2a078:	lsl	r3, r3, #1
   2a07c:	add	r3, r3, r2
   2a080:	lsl	r3, r3, #3
   2a084:	add	r3, r1, r3
   2a088:	str	r3, [fp, #-20]	; 0xffffffec
   2a08c:	b	2a09c <__assert_fail@plt+0x18dac>
   2a090:	nop	{0}
   2a094:	b	2a09c <__assert_fail@plt+0x18dac>
   2a098:	nop	{0}
   2a09c:	ldr	r3, [fp, #-16]
   2a0a0:	add	r3, r3, #1
   2a0a4:	str	r3, [fp, #-16]
   2a0a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a0ac:	add	r2, r3, #24
   2a0b0:	str	r2, [fp, #-20]	; 0xffffffec
   2a0b4:	ldrb	r3, [r3, #20]
   2a0b8:	cmp	r3, #0
   2a0bc:	bne	29d84 <__assert_fail@plt+0x18a94>
   2a0c0:	b	2a0d0 <__assert_fail@plt+0x18de0>
   2a0c4:	nop	{0}
   2a0c8:	b	2a0d0 <__assert_fail@plt+0x18de0>
   2a0cc:	nop	{0}
   2a0d0:	ldr	r3, [fp, #-12]
   2a0d4:	add	r3, r3, #1
   2a0d8:	str	r3, [fp, #-12]
   2a0dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2a0e0:	ldr	r3, [r3, #4]
   2a0e4:	ldr	r2, [fp, #-12]
   2a0e8:	cmp	r2, r3
   2a0ec:	blt	29cec <__assert_fail@plt+0x189fc>
   2a0f0:	mov	r3, #0
   2a0f4:	str	r3, [fp, #-8]
   2a0f8:	b	2a110 <__assert_fail@plt+0x18e20>
   2a0fc:	nop	{0}
   2a100:	b	2a110 <__assert_fail@plt+0x18e20>
   2a104:	nop	{0}
   2a108:	b	2a110 <__assert_fail@plt+0x18e20>
   2a10c:	nop	{0}
   2a110:	ldr	r3, [fp, #-84]	; 0xffffffac
   2a114:	cmp	r3, #0
   2a118:	beq	2a128 <__assert_fail@plt+0x18e38>
   2a11c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a120:	mov	r0, r3
   2a124:	bl	31b28 <__assert_fail@plt+0x20838>
   2a128:	ldr	r3, [fp, #-8]
   2a12c:	mov	r0, r3
   2a130:	sub	sp, fp, #4
   2a134:	ldr	fp, [sp]
   2a138:	add	sp, sp, #4
   2a13c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a140:	str	fp, [sp, #-8]!
   2a144:	str	lr, [sp, #4]
   2a148:	add	fp, sp, #4
   2a14c:	sub	sp, sp, #24
   2a150:	str	r0, [fp, #-16]
   2a154:	str	r1, [fp, #-20]	; 0xffffffec
   2a158:	str	r2, [fp, #-24]	; 0xffffffe8
   2a15c:	str	r3, [fp, #-28]	; 0xffffffe4
   2a160:	ldr	r3, [fp, #-16]
   2a164:	ldr	r3, [r3, #84]	; 0x54
   2a168:	str	r3, [fp, #-12]
   2a16c:	ldr	r2, [fp, #-16]
   2a170:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a178:	ldr	r0, [fp, #-12]
   2a17c:	bl	2e308 <__assert_fail@plt+0x1d018>
   2a180:	str	r0, [fp, #-8]
   2a184:	ldr	r3, [fp, #-8]
   2a188:	cmp	r3, #0
   2a18c:	ble	2a228 <__assert_fail@plt+0x18f38>
   2a190:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a194:	ldr	r3, [fp, #-8]
   2a198:	add	r3, r2, r3
   2a19c:	ldr	r2, [fp, #4]
   2a1a0:	cmp	r2, r3
   2a1a4:	blt	2a228 <__assert_fail@plt+0x18f38>
   2a1a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a1ac:	ldr	r2, [r3]
   2a1b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a1b4:	ldr	r3, [fp, #-8]
   2a1b8:	add	r3, r1, r3
   2a1bc:	lsl	r3, r3, #2
   2a1c0:	add	r3, r2, r3
   2a1c4:	ldr	r3, [r3]
   2a1c8:	cmp	r3, #0
   2a1cc:	beq	2a220 <__assert_fail@plt+0x18f30>
   2a1d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a1d4:	ldr	r2, [r3]
   2a1d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a1dc:	ldr	r3, [fp, #-8]
   2a1e0:	add	r3, r1, r3
   2a1e4:	lsl	r3, r3, #2
   2a1e8:	add	r3, r2, r3
   2a1ec:	ldr	r3, [r3]
   2a1f0:	add	r0, r3, #4
   2a1f4:	ldr	r3, [fp, #-12]
   2a1f8:	ldr	r2, [r3, #12]
   2a1fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a200:	lsl	r3, r3, #2
   2a204:	add	r3, r2, r3
   2a208:	ldr	r3, [r3]
   2a20c:	mov	r1, r3
   2a210:	bl	1a314 <__assert_fail@plt+0x9024>
   2a214:	mov	r3, r0
   2a218:	cmp	r3, #0
   2a21c:	bne	2a228 <__assert_fail@plt+0x18f38>
   2a220:	mov	r3, #0
   2a224:	str	r3, [fp, #-8]
   2a228:	ldr	r3, [fp, #-8]
   2a22c:	mov	r0, r3
   2a230:	sub	sp, fp, #4
   2a234:	ldr	fp, [sp]
   2a238:	add	sp, sp, #4
   2a23c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a240:	str	fp, [sp, #-8]!
   2a244:	str	lr, [sp, #4]
   2a248:	add	fp, sp, #4
   2a24c:	sub	sp, sp, #32
   2a250:	str	r0, [fp, #-24]	; 0xffffffe8
   2a254:	str	r1, [fp, #-28]	; 0xffffffe4
   2a258:	str	r2, [fp, #-32]	; 0xffffffe0
   2a25c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a260:	ldrb	r3, [r3, #52]	; 0x34
   2a264:	ubfx	r3, r3, #5, #1
   2a268:	uxtb	r3, r3
   2a26c:	cmp	r3, #0
   2a270:	beq	2a2b4 <__assert_fail@plt+0x18fc4>
   2a274:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a278:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a27c:	bl	2a8d0 <__assert_fail@plt+0x195e0>
   2a280:	mov	r2, r0
   2a284:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a288:	str	r2, [r3]
   2a28c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a290:	ldr	r3, [r3]
   2a294:	cmp	r3, #0
   2a298:	movne	r3, #1
   2a29c:	moveq	r3, #0
   2a2a0:	uxtb	r3, r3
   2a2a4:	cmp	r3, #0
   2a2a8:	beq	2a2b4 <__assert_fail@plt+0x18fc4>
   2a2ac:	mov	r3, #0
   2a2b0:	b	2a3e4 <__assert_fail@plt+0x190f4>
   2a2b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a2b8:	ldr	r2, [r3, #4]
   2a2bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a2c0:	ldr	r3, [r3, #40]	; 0x28
   2a2c4:	add	r0, r3, #1
   2a2c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a2cc:	str	r0, [r1, #40]	; 0x28
   2a2d0:	add	r3, r2, r3
   2a2d4:	ldrb	r3, [r3]
   2a2d8:	strb	r3, [fp, #-5]
   2a2dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2e0:	ldr	r3, [r3, #44]	; 0x2c
   2a2e4:	str	r3, [fp, #-12]
   2a2e8:	ldr	r3, [fp, #-12]
   2a2ec:	cmp	r3, #0
   2a2f0:	movne	r3, #1
   2a2f4:	moveq	r3, #0
   2a2f8:	uxtb	r3, r3
   2a2fc:	cmp	r3, #0
   2a300:	beq	2a31c <__assert_fail@plt+0x1902c>
   2a304:	ldrb	r3, [fp, #-5]
   2a308:	lsl	r3, r3, #2
   2a30c:	ldr	r2, [fp, #-12]
   2a310:	add	r3, r2, r3
   2a314:	ldr	r3, [r3]
   2a318:	b	2a3e4 <__assert_fail@plt+0x190f4>
   2a31c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a320:	ldr	r3, [r3, #48]	; 0x30
   2a324:	str	r3, [fp, #-12]
   2a328:	ldr	r3, [fp, #-12]
   2a32c:	cmp	r3, #0
   2a330:	movne	r3, #1
   2a334:	moveq	r3, #0
   2a338:	uxtb	r3, r3
   2a33c:	cmp	r3, #0
   2a340:	beq	2a3ac <__assert_fail@plt+0x190bc>
   2a344:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a34c:	ldr	r3, [r3, #40]	; 0x28
   2a350:	sub	r1, r3, #1
   2a354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a358:	ldr	r3, [r3, #88]	; 0x58
   2a35c:	mov	r2, r3
   2a360:	bl	18d10 <__assert_fail@plt+0x7a20>
   2a364:	str	r0, [fp, #-16]
   2a368:	ldr	r3, [fp, #-16]
   2a36c:	and	r3, r3, #1
   2a370:	cmp	r3, #0
   2a374:	beq	2a394 <__assert_fail@plt+0x190a4>
   2a378:	ldrb	r3, [fp, #-5]
   2a37c:	add	r3, r3, #256	; 0x100
   2a380:	lsl	r3, r3, #2
   2a384:	ldr	r2, [fp, #-12]
   2a388:	add	r3, r2, r3
   2a38c:	ldr	r3, [r3]
   2a390:	b	2a3e4 <__assert_fail@plt+0x190f4>
   2a394:	ldrb	r3, [fp, #-5]
   2a398:	lsl	r3, r3, #2
   2a39c:	ldr	r2, [fp, #-12]
   2a3a0:	add	r3, r2, r3
   2a3a4:	ldr	r3, [r3]
   2a3a8:	b	2a3e4 <__assert_fail@plt+0x190f4>
   2a3ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a3b0:	ldr	r3, [r3, #84]	; 0x54
   2a3b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a3b8:	mov	r0, r3
   2a3bc:	bl	2ce1c <__assert_fail@plt+0x1bb2c>
   2a3c0:	mov	r3, r0
   2a3c4:	eor	r3, r3, #1
   2a3c8:	uxtb	r3, r3
   2a3cc:	cmp	r3, #0
   2a3d0:	beq	2a2dc <__assert_fail@plt+0x18fec>
   2a3d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a3d8:	mov	r2, #12
   2a3dc:	str	r2, [r3]
   2a3e0:	mov	r3, #0
   2a3e4:	mov	r0, r3
   2a3e8:	sub	sp, fp, #4
   2a3ec:	ldr	fp, [sp]
   2a3f0:	add	sp, sp, #4
   2a3f4:	pop	{pc}		; (ldr pc, [sp], #4)
   2a3f8:	str	r4, [sp, #-12]!
   2a3fc:	str	fp, [sp, #4]
   2a400:	str	lr, [sp, #8]
   2a404:	add	fp, sp, #8
   2a408:	sub	sp, sp, #60	; 0x3c
   2a40c:	str	r0, [fp, #-56]	; 0xffffffc8
   2a410:	str	r1, [fp, #-60]	; 0xffffffc4
   2a414:	str	r2, [fp, #-64]	; 0xffffffc0
   2a418:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a41c:	ldr	r3, [r3, #84]	; 0x54
   2a420:	str	r3, [fp, #-20]	; 0xffffffec
   2a424:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a428:	ldr	r3, [r3, #40]	; 0x28
   2a42c:	str	r3, [fp, #-24]	; 0xffffffe8
   2a430:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a434:	ldr	r3, [r3, #104]	; 0x68
   2a438:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a43c:	cmp	r2, r3
   2a440:	ble	2a470 <__assert_fail@plt+0x19180>
   2a444:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a448:	ldr	r2, [r3, #100]	; 0x64
   2a44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a450:	lsl	r3, r3, #2
   2a454:	add	r3, r2, r3
   2a458:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2a45c:	str	r2, [r3]
   2a460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a464:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a468:	str	r2, [r3, #104]	; 0x68
   2a46c:	b	2a5d0 <__assert_fail@plt+0x192e0>
   2a470:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a474:	ldr	r2, [r3, #100]	; 0x64
   2a478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a47c:	lsl	r3, r3, #2
   2a480:	add	r3, r2, r3
   2a484:	ldr	r3, [r3]
   2a488:	cmp	r3, #0
   2a48c:	bne	2a4b0 <__assert_fail@plt+0x191c0>
   2a490:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a494:	ldr	r2, [r3, #100]	; 0x64
   2a498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a49c:	lsl	r3, r3, #2
   2a4a0:	add	r3, r2, r3
   2a4a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2a4a8:	str	r2, [r3]
   2a4ac:	b	2a5d0 <__assert_fail@plt+0x192e0>
   2a4b0:	mov	r3, #0
   2a4b4:	str	r3, [fp, #-16]
   2a4b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a4bc:	ldr	r2, [r3, #100]	; 0x64
   2a4c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a4c4:	lsl	r3, r3, #2
   2a4c8:	add	r3, r2, r3
   2a4cc:	ldr	r3, [r3]
   2a4d0:	str	r3, [fp, #-28]	; 0xffffffe4
   2a4d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a4d8:	ldr	r3, [r3, #40]	; 0x28
   2a4dc:	str	r3, [fp, #-32]	; 0xffffffe0
   2a4e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a4e4:	cmp	r3, #0
   2a4e8:	beq	2a540 <__assert_fail@plt+0x19250>
   2a4ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a4f0:	ldr	r3, [r3, #40]	; 0x28
   2a4f4:	str	r3, [fp, #-16]
   2a4f8:	sub	r3, fp, #48	; 0x30
   2a4fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a500:	ldr	r1, [fp, #-16]
   2a504:	mov	r0, r3
   2a508:	bl	19704 <__assert_fail@plt+0x8414>
   2a50c:	mov	r2, r0
   2a510:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a514:	str	r2, [r3]
   2a518:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a51c:	ldr	r3, [r3]
   2a520:	cmp	r3, #0
   2a524:	movne	r3, #1
   2a528:	moveq	r3, #0
   2a52c:	uxtb	r3, r3
   2a530:	cmp	r3, #0
   2a534:	beq	2a55c <__assert_fail@plt+0x1926c>
   2a538:	mov	r3, #0
   2a53c:	b	2a6b8 <__assert_fail@plt+0x193c8>
   2a540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a544:	sub	r1, fp, #48	; 0x30
   2a548:	mov	r0, r3
   2a54c:	ldrd	r2, [r0]
   2a550:	strd	r2, [r1]
   2a554:	ldr	r3, [r0, #8]
   2a558:	str	r3, [r1, #8]
   2a55c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2a560:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a564:	ldr	r3, [r3, #40]	; 0x28
   2a568:	sub	r1, r3, #1
   2a56c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a570:	ldr	r3, [r3, #88]	; 0x58
   2a574:	mov	r2, r3
   2a578:	bl	18d10 <__assert_fail@plt+0x7a20>
   2a57c:	str	r0, [fp, #-36]	; 0xffffffdc
   2a580:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a584:	ldr	r2, [r3, #100]	; 0x64
   2a588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a58c:	lsl	r3, r3, #2
   2a590:	add	r4, r2, r3
   2a594:	sub	r2, fp, #48	; 0x30
   2a598:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a59c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a5a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a5a4:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2a5a8:	mov	r3, r0
   2a5ac:	str	r3, [r4]
   2a5b0:	ldr	r3, [r4]
   2a5b4:	str	r3, [fp, #-64]	; 0xffffffc0
   2a5b8:	ldr	r3, [fp, #-16]
   2a5bc:	cmp	r3, #0
   2a5c0:	beq	2a5d0 <__assert_fail@plt+0x192e0>
   2a5c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a5c8:	mov	r0, r3
   2a5cc:	bl	31b28 <__assert_fail@plt+0x20838>
   2a5d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a5d4:	ldr	r3, [r3, #76]	; 0x4c
   2a5d8:	cmp	r3, #0
   2a5dc:	beq	2a6b4 <__assert_fail@plt+0x193c4>
   2a5e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a5e4:	cmp	r3, #0
   2a5e8:	beq	2a6b4 <__assert_fail@plt+0x193c4>
   2a5ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a5f0:	add	r3, r3, #4
   2a5f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a5f8:	mov	r1, r3
   2a5fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2a600:	bl	2a7a0 <__assert_fail@plt+0x194b0>
   2a604:	mov	r2, r0
   2a608:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a60c:	str	r2, [r3]
   2a610:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a614:	ldr	r3, [r3]
   2a618:	cmp	r3, #0
   2a61c:	movne	r3, #1
   2a620:	moveq	r3, #0
   2a624:	uxtb	r3, r3
   2a628:	cmp	r3, #0
   2a62c:	beq	2a638 <__assert_fail@plt+0x19348>
   2a630:	mov	r3, #0
   2a634:	b	2a6b8 <__assert_fail@plt+0x193c8>
   2a638:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a63c:	ldrb	r3, [r3, #52]	; 0x34
   2a640:	and	r3, r3, #64	; 0x40
   2a644:	uxtb	r3, r3
   2a648:	cmp	r3, #0
   2a64c:	beq	2a6b4 <__assert_fail@plt+0x193c4>
   2a650:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a654:	add	r3, r3, #4
   2a658:	mov	r1, r3
   2a65c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2a660:	bl	2ad08 <__assert_fail@plt+0x19a18>
   2a664:	mov	r2, r0
   2a668:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a66c:	str	r2, [r3]
   2a670:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a674:	ldr	r3, [r3]
   2a678:	cmp	r3, #0
   2a67c:	movne	r3, #1
   2a680:	moveq	r3, #0
   2a684:	uxtb	r3, r3
   2a688:	cmp	r3, #0
   2a68c:	beq	2a698 <__assert_fail@plt+0x193a8>
   2a690:	mov	r3, #0
   2a694:	b	2a6b8 <__assert_fail@plt+0x193c8>
   2a698:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a69c:	ldr	r2, [r3, #100]	; 0x64
   2a6a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a6a4:	lsl	r3, r3, #2
   2a6a8:	add	r3, r2, r3
   2a6ac:	ldr	r3, [r3]
   2a6b0:	str	r3, [fp, #-64]	; 0xffffffc0
   2a6b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a6b8:	mov	r0, r3
   2a6bc:	sub	sp, fp, #8
   2a6c0:	ldr	r4, [sp]
   2a6c4:	ldr	fp, [sp, #4]
   2a6c8:	add	sp, sp, #8
   2a6cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2a6d0:	str	fp, [sp, #-8]!
   2a6d4:	str	lr, [sp, #4]
   2a6d8:	add	fp, sp, #4
   2a6dc:	sub	sp, sp, #24
   2a6e0:	str	r0, [fp, #-24]	; 0xffffffe8
   2a6e4:	str	r1, [fp, #-28]	; 0xffffffe4
   2a6e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a6ec:	ldr	r3, [r3, #104]	; 0x68
   2a6f0:	str	r3, [fp, #-12]
   2a6f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a6f8:	ldr	r3, [r3, #40]	; 0x28
   2a6fc:	str	r3, [fp, #-8]
   2a700:	ldr	r3, [fp, #-8]
   2a704:	add	r3, r3, #1
   2a708:	str	r3, [fp, #-8]
   2a70c:	ldr	r2, [fp, #-8]
   2a710:	ldr	r3, [fp, #-12]
   2a714:	cmp	r2, r3
   2a718:	ble	2a724 <__assert_fail@plt+0x19434>
   2a71c:	mov	r3, #0
   2a720:	b	2a78c <__assert_fail@plt+0x1949c>
   2a724:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a728:	ldr	r3, [r3, #40]	; 0x28
   2a72c:	add	r2, r3, #1
   2a730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a734:	str	r2, [r3, #40]	; 0x28
   2a738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a73c:	ldr	r2, [r3, #100]	; 0x64
   2a740:	ldr	r3, [fp, #-8]
   2a744:	lsl	r3, r3, #2
   2a748:	add	r3, r2, r3
   2a74c:	ldr	r3, [r3]
   2a750:	cmp	r3, #0
   2a754:	beq	2a700 <__assert_fail@plt+0x19410>
   2a758:	mov	r2, #0
   2a75c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a764:	bl	2a3f8 <__assert_fail@plt+0x19108>
   2a768:	str	r0, [fp, #-16]
   2a76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a770:	ldr	r3, [r3]
   2a774:	cmp	r3, #0
   2a778:	bne	2a788 <__assert_fail@plt+0x19498>
   2a77c:	ldr	r3, [fp, #-16]
   2a780:	cmp	r3, #0
   2a784:	beq	2a6e8 <__assert_fail@plt+0x193f8>
   2a788:	ldr	r3, [fp, #-16]
   2a78c:	mov	r0, r3
   2a790:	sub	sp, fp, #4
   2a794:	ldr	fp, [sp]
   2a798:	add	sp, sp, #4
   2a79c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a7a0:	str	fp, [sp, #-8]!
   2a7a4:	str	lr, [sp, #4]
   2a7a8:	add	fp, sp, #4
   2a7ac:	sub	sp, sp, #32
   2a7b0:	str	r0, [fp, #-24]	; 0xffffffe8
   2a7b4:	str	r1, [fp, #-28]	; 0xffffffe4
   2a7b8:	str	r2, [fp, #-32]	; 0xffffffe0
   2a7bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a7c0:	ldr	r3, [r3, #84]	; 0x54
   2a7c4:	str	r3, [fp, #-12]
   2a7c8:	mov	r3, #0
   2a7cc:	str	r3, [fp, #-8]
   2a7d0:	b	2a8a4 <__assert_fail@plt+0x195b4>
   2a7d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a7d8:	ldr	r2, [r3, #8]
   2a7dc:	ldr	r3, [fp, #-8]
   2a7e0:	lsl	r3, r3, #2
   2a7e4:	add	r3, r2, r3
   2a7e8:	ldr	r3, [r3]
   2a7ec:	str	r3, [fp, #-16]
   2a7f0:	ldr	r3, [fp, #-12]
   2a7f4:	ldr	r2, [r3]
   2a7f8:	ldr	r3, [fp, #-16]
   2a7fc:	lsl	r3, r3, #3
   2a800:	add	r3, r2, r3
   2a804:	ldrb	r3, [r3, #4]
   2a808:	cmp	r3, #8
   2a80c:	bne	2a898 <__assert_fail@plt+0x195a8>
   2a810:	ldr	r3, [fp, #-12]
   2a814:	ldr	r2, [r3]
   2a818:	ldr	r3, [fp, #-16]
   2a81c:	lsl	r3, r3, #3
   2a820:	add	r3, r2, r3
   2a824:	ldr	r3, [r3]
   2a828:	cmp	r3, #31
   2a82c:	bgt	2a898 <__assert_fail@plt+0x195a8>
   2a830:	ldr	r3, [fp, #-12]
   2a834:	ldr	r2, [r3, #80]	; 0x50
   2a838:	ldr	r3, [fp, #-12]
   2a83c:	ldr	r1, [r3]
   2a840:	ldr	r3, [fp, #-16]
   2a844:	lsl	r3, r3, #3
   2a848:	add	r3, r1, r3
   2a84c:	ldr	r3, [r3]
   2a850:	lsr	r3, r2, r3
   2a854:	and	r3, r3, #1
   2a858:	cmp	r3, #0
   2a85c:	beq	2a898 <__assert_fail@plt+0x195a8>
   2a860:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a864:	ldr	r1, [fp, #-16]
   2a868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a86c:	bl	2f378 <__assert_fail@plt+0x1e088>
   2a870:	str	r0, [fp, #-20]	; 0xffffffec
   2a874:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a878:	cmp	r3, #0
   2a87c:	movne	r3, #1
   2a880:	moveq	r3, #0
   2a884:	uxtb	r3, r3
   2a888:	cmp	r3, #0
   2a88c:	beq	2a898 <__assert_fail@plt+0x195a8>
   2a890:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a894:	b	2a8bc <__assert_fail@plt+0x195cc>
   2a898:	ldr	r3, [fp, #-8]
   2a89c:	add	r3, r3, #1
   2a8a0:	str	r3, [fp, #-8]
   2a8a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a8a8:	ldr	r3, [r3, #4]
   2a8ac:	ldr	r2, [fp, #-8]
   2a8b0:	cmp	r2, r3
   2a8b4:	blt	2a7d4 <__assert_fail@plt+0x194e4>
   2a8b8:	mov	r3, #0
   2a8bc:	mov	r0, r3
   2a8c0:	sub	sp, fp, #4
   2a8c4:	ldr	fp, [sp]
   2a8c8:	add	sp, sp, #4
   2a8cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2a8d0:	str	r4, [sp, #-12]!
   2a8d4:	str	fp, [sp, #4]
   2a8d8:	str	lr, [sp, #8]
   2a8dc:	add	fp, sp, #8
   2a8e0:	sub	sp, sp, #60	; 0x3c
   2a8e4:	str	r0, [fp, #-64]	; 0xffffffc0
   2a8e8:	str	r1, [fp, #-68]	; 0xffffffbc
   2a8ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a8f0:	ldr	r3, [r3, #84]	; 0x54
   2a8f4:	str	r3, [fp, #-20]	; 0xffffffec
   2a8f8:	mov	r3, #0
   2a8fc:	str	r3, [fp, #-16]
   2a900:	b	2acd8 <__assert_fail@plt+0x199e8>
   2a904:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a908:	ldr	r2, [r3, #12]
   2a90c:	ldr	r3, [fp, #-16]
   2a910:	lsl	r3, r3, #2
   2a914:	add	r3, r2, r3
   2a918:	ldr	r3, [r3]
   2a91c:	str	r3, [fp, #-24]	; 0xffffffe8
   2a920:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a924:	ldr	r2, [r3]
   2a928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a92c:	lsl	r3, r3, #3
   2a930:	add	r3, r2, r3
   2a934:	ldrb	r3, [r3, #6]
   2a938:	and	r3, r3, #16
   2a93c:	uxtb	r3, r3
   2a940:	cmp	r3, #0
   2a944:	beq	2acb8 <__assert_fail@plt+0x199c8>
   2a948:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a94c:	ldr	r2, [r3]
   2a950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a954:	lsl	r3, r3, #3
   2a958:	add	r3, r2, r3
   2a95c:	ldr	r2, [r3, #4]
   2a960:	mov	r3, #65280	; 0xff00
   2a964:	movt	r3, #3
   2a968:	and	r3, r3, r2
   2a96c:	cmp	r3, #0
   2a970:	beq	2aa84 <__assert_fail@plt+0x19794>
   2a974:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a978:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a97c:	ldr	r1, [r3, #40]	; 0x28
   2a980:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a984:	ldr	r3, [r3, #88]	; 0x58
   2a988:	mov	r2, r3
   2a98c:	bl	18d10 <__assert_fail@plt+0x7a20>
   2a990:	str	r0, [fp, #-28]	; 0xffffffe4
   2a994:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a998:	ldr	r2, [r3]
   2a99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a9a0:	lsl	r3, r3, #3
   2a9a4:	add	r3, r2, r3
   2a9a8:	ldr	r3, [r3, #4]
   2a9ac:	ubfx	r3, r3, #8, #10
   2a9b0:	uxth	r3, r3
   2a9b4:	and	r3, r3, #4
   2a9b8:	cmp	r3, #0
   2a9bc:	beq	2a9d0 <__assert_fail@plt+0x196e0>
   2a9c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a9c4:	and	r3, r3, #1
   2a9c8:	cmp	r3, #0
   2a9cc:	beq	2acc0 <__assert_fail@plt+0x199d0>
   2a9d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a9d4:	ldr	r2, [r3]
   2a9d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a9dc:	lsl	r3, r3, #3
   2a9e0:	add	r3, r2, r3
   2a9e4:	ldr	r3, [r3, #4]
   2a9e8:	ubfx	r3, r3, #8, #10
   2a9ec:	uxth	r3, r3
   2a9f0:	and	r3, r3, #8
   2a9f4:	cmp	r3, #0
   2a9f8:	beq	2aa0c <__assert_fail@plt+0x1971c>
   2a9fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aa00:	and	r3, r3, #1
   2aa04:	cmp	r3, #0
   2aa08:	bne	2acc0 <__assert_fail@plt+0x199d0>
   2aa0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa10:	ldr	r2, [r3]
   2aa14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aa18:	lsl	r3, r3, #3
   2aa1c:	add	r3, r2, r3
   2aa20:	ldr	r3, [r3, #4]
   2aa24:	ubfx	r3, r3, #8, #10
   2aa28:	uxth	r3, r3
   2aa2c:	and	r3, r3, #32
   2aa30:	cmp	r3, #0
   2aa34:	beq	2aa48 <__assert_fail@plt+0x19758>
   2aa38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aa3c:	and	r3, r3, #2
   2aa40:	cmp	r3, #0
   2aa44:	beq	2acc0 <__assert_fail@plt+0x199d0>
   2aa48:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa4c:	ldr	r2, [r3]
   2aa50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aa54:	lsl	r3, r3, #3
   2aa58:	add	r3, r2, r3
   2aa5c:	ldr	r3, [r3, #4]
   2aa60:	ubfx	r3, r3, #8, #10
   2aa64:	uxth	r3, r3
   2aa68:	and	r3, r3, #128	; 0x80
   2aa6c:	cmp	r3, #0
   2aa70:	beq	2aa84 <__assert_fail@plt+0x19794>
   2aa74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aa78:	and	r3, r3, #8
   2aa7c:	cmp	r3, #0
   2aa80:	beq	2acc0 <__assert_fail@plt+0x199d0>
   2aa84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2aa88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2aa8c:	ldr	r3, [r3, #40]	; 0x28
   2aa90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2aa94:	ldr	r0, [fp, #-20]	; 0xffffffec
   2aa98:	bl	2e308 <__assert_fail@plt+0x1d018>
   2aa9c:	str	r0, [fp, #-32]	; 0xffffffe0
   2aaa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aaa4:	cmp	r3, #0
   2aaa8:	beq	2acc8 <__assert_fail@plt+0x199d8>
   2aaac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2aab0:	ldr	r3, [r3, #40]	; 0x28
   2aab4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2aab8:	add	r3, r2, r3
   2aabc:	str	r3, [fp, #-36]	; 0xffffffdc
   2aac0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2aac4:	ldr	r2, [r3, #120]	; 0x78
   2aac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aacc:	cmp	r2, r3
   2aad0:	movge	r2, r2
   2aad4:	movlt	r2, r3
   2aad8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2aadc:	str	r2, [r3, #120]	; 0x78
   2aae0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2aae4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2aae8:	bl	28968 <__assert_fail@plt+0x17678>
   2aaec:	mov	r3, r0
   2aaf0:	str	r3, [fp, #-48]	; 0xffffffd0
   2aaf4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2aaf8:	cmp	r3, #0
   2aafc:	movne	r3, #1
   2ab00:	moveq	r3, #0
   2ab04:	uxtb	r3, r3
   2ab08:	cmp	r3, #0
   2ab0c:	beq	2ab18 <__assert_fail@plt+0x19828>
   2ab10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ab14:	b	2acf0 <__assert_fail@plt+0x19a00>
   2ab18:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab1c:	ldr	r2, [r3, #12]
   2ab20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ab24:	lsl	r3, r3, #2
   2ab28:	add	r3, r2, r3
   2ab2c:	ldr	r3, [r3]
   2ab30:	cmn	r3, #1
   2ab34:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab38:	ldr	r2, [r3, #24]
   2ab3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ab40:	ldr	r1, [r3, #12]
   2ab44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ab48:	lsl	r3, r3, #2
   2ab4c:	add	r3, r1, r3
   2ab50:	ldr	r3, [r3]
   2ab54:	mov	r1, r3
   2ab58:	mov	r3, r1
   2ab5c:	lsl	r3, r3, #1
   2ab60:	add	r3, r3, r1
   2ab64:	lsl	r3, r3, #2
   2ab68:	add	r3, r2, r3
   2ab6c:	str	r3, [fp, #-40]	; 0xffffffd8
   2ab70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ab74:	ldr	r2, [r3, #100]	; 0x64
   2ab78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ab7c:	lsl	r3, r3, #2
   2ab80:	add	r3, r2, r3
   2ab84:	ldr	r3, [r3]
   2ab88:	str	r3, [fp, #-44]	; 0xffffffd4
   2ab8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ab90:	cmp	r3, #0
   2ab94:	bne	2abb8 <__assert_fail@plt+0x198c8>
   2ab98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab9c:	sub	r1, fp, #60	; 0x3c
   2aba0:	mov	r0, r3
   2aba4:	ldrd	r2, [r0]
   2aba8:	strd	r2, [r1]
   2abac:	ldr	r3, [r0, #8]
   2abb0:	str	r3, [r1, #8]
   2abb4:	b	2abfc <__assert_fail@plt+0x1990c>
   2abb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2abbc:	ldr	r1, [r3, #40]	; 0x28
   2abc0:	sub	r3, fp, #60	; 0x3c
   2abc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2abc8:	mov	r0, r3
   2abcc:	bl	19704 <__assert_fail@plt+0x8414>
   2abd0:	mov	r3, r0
   2abd4:	str	r3, [fp, #-48]	; 0xffffffd0
   2abd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2abdc:	cmp	r3, #0
   2abe0:	movne	r3, #1
   2abe4:	moveq	r3, #0
   2abe8:	uxtb	r3, r3
   2abec:	cmp	r3, #0
   2abf0:	beq	2abfc <__assert_fail@plt+0x1990c>
   2abf4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2abf8:	b	2acf0 <__assert_fail@plt+0x19a00>
   2abfc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ac00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac04:	sub	r1, r3, #1
   2ac08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ac0c:	ldr	r3, [r3, #88]	; 0x58
   2ac10:	mov	r2, r3
   2ac14:	bl	18d10 <__assert_fail@plt+0x7a20>
   2ac18:	str	r0, [fp, #-28]	; 0xffffffe4
   2ac1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ac20:	ldr	r2, [r3, #100]	; 0x64
   2ac24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac28:	lsl	r3, r3, #2
   2ac2c:	add	r4, r2, r3
   2ac30:	sub	r2, fp, #60	; 0x3c
   2ac34:	sub	r0, fp, #48	; 0x30
   2ac38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ac3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ac40:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2ac44:	mov	r3, r0
   2ac48:	str	r3, [r4]
   2ac4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ac50:	cmp	r3, #0
   2ac54:	beq	2ac64 <__assert_fail@plt+0x19974>
   2ac58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ac5c:	mov	r0, r3
   2ac60:	bl	31b28 <__assert_fail@plt+0x20838>
   2ac64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ac68:	ldr	r2, [r3, #100]	; 0x64
   2ac6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ac70:	lsl	r3, r3, #2
   2ac74:	add	r3, r2, r3
   2ac78:	ldr	r3, [r3]
   2ac7c:	cmp	r3, #0
   2ac80:	moveq	r3, #1
   2ac84:	movne	r3, #0
   2ac88:	uxtb	r3, r3
   2ac8c:	cmp	r3, #0
   2ac90:	beq	2accc <__assert_fail@plt+0x199dc>
   2ac94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ac98:	cmp	r3, #0
   2ac9c:	movne	r3, #1
   2aca0:	moveq	r3, #0
   2aca4:	uxtb	r3, r3
   2aca8:	cmp	r3, #0
   2acac:	beq	2accc <__assert_fail@plt+0x199dc>
   2acb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2acb4:	b	2acf0 <__assert_fail@plt+0x19a00>
   2acb8:	nop	{0}
   2acbc:	b	2accc <__assert_fail@plt+0x199dc>
   2acc0:	nop	{0}
   2acc4:	b	2accc <__assert_fail@plt+0x199dc>
   2acc8:	nop	{0}
   2accc:	ldr	r3, [fp, #-16]
   2acd0:	add	r3, r3, #1
   2acd4:	str	r3, [fp, #-16]
   2acd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2acdc:	ldr	r3, [r3, #8]
   2ace0:	ldr	r2, [fp, #-16]
   2ace4:	cmp	r2, r3
   2ace8:	blt	2a904 <__assert_fail@plt+0x19614>
   2acec:	mov	r3, #0
   2acf0:	mov	r0, r3
   2acf4:	sub	sp, fp, #8
   2acf8:	ldr	r4, [sp]
   2acfc:	ldr	fp, [sp, #4]
   2ad00:	add	sp, sp, #8
   2ad04:	pop	{pc}		; (ldr pc, [sp], #4)
   2ad08:	str	r4, [sp, #-12]!
   2ad0c:	str	fp, [sp, #4]
   2ad10:	str	lr, [sp, #8]
   2ad14:	add	fp, sp, #8
   2ad18:	sub	sp, sp, #84	; 0x54
   2ad1c:	str	r0, [fp, #-88]	; 0xffffffa8
   2ad20:	str	r1, [fp, #-92]	; 0xffffffa4
   2ad24:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ad28:	ldr	r3, [r3, #84]	; 0x54
   2ad2c:	str	r3, [fp, #-24]	; 0xffffffe8
   2ad30:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ad34:	ldr	r3, [r3, #40]	; 0x28
   2ad38:	str	r3, [fp, #-28]	; 0xffffffe4
   2ad3c:	mov	r3, #0
   2ad40:	str	r3, [fp, #-16]
   2ad44:	b	2b2b4 <__assert_fail@plt+0x19fc4>
   2ad48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ad4c:	ldr	r2, [r3, #8]
   2ad50:	ldr	r3, [fp, #-16]
   2ad54:	lsl	r3, r3, #2
   2ad58:	add	r3, r2, r3
   2ad5c:	ldr	r3, [r3]
   2ad60:	str	r3, [fp, #-32]	; 0xffffffe0
   2ad64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad68:	ldr	r2, [r3]
   2ad6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ad70:	lsl	r3, r3, #3
   2ad74:	add	r3, r2, r3
   2ad78:	str	r3, [fp, #-36]	; 0xffffffdc
   2ad7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ad80:	ldrb	r3, [r3, #4]
   2ad84:	cmp	r3, #4
   2ad88:	bne	2b29c <__assert_fail@plt+0x19fac>
   2ad8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ad90:	ldr	r2, [r3, #4]
   2ad94:	mov	r3, #65280	; 0xff00
   2ad98:	movt	r3, #3
   2ad9c:	and	r3, r3, r2
   2ada0:	cmp	r3, #0
   2ada4:	beq	2ae74 <__assert_fail@plt+0x19b84>
   2ada8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2adac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2adb0:	ldr	r3, [r3, #88]	; 0x58
   2adb4:	mov	r2, r3
   2adb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2adbc:	bl	18d10 <__assert_fail@plt+0x7a20>
   2adc0:	str	r0, [fp, #-40]	; 0xffffffd8
   2adc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2adc8:	ldr	r3, [r3, #4]
   2adcc:	ubfx	r3, r3, #8, #10
   2add0:	uxth	r3, r3
   2add4:	and	r3, r3, #4
   2add8:	cmp	r3, #0
   2addc:	beq	2adf0 <__assert_fail@plt+0x19b00>
   2ade0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ade4:	and	r3, r3, #1
   2ade8:	cmp	r3, #0
   2adec:	beq	2b2a4 <__assert_fail@plt+0x19fb4>
   2adf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2adf4:	ldr	r3, [r3, #4]
   2adf8:	ubfx	r3, r3, #8, #10
   2adfc:	uxth	r3, r3
   2ae00:	and	r3, r3, #8
   2ae04:	cmp	r3, #0
   2ae08:	beq	2ae1c <__assert_fail@plt+0x19b2c>
   2ae0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ae10:	and	r3, r3, #1
   2ae14:	cmp	r3, #0
   2ae18:	bne	2b2a4 <__assert_fail@plt+0x19fb4>
   2ae1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ae20:	ldr	r3, [r3, #4]
   2ae24:	ubfx	r3, r3, #8, #10
   2ae28:	uxth	r3, r3
   2ae2c:	and	r3, r3, #32
   2ae30:	cmp	r3, #0
   2ae34:	beq	2ae48 <__assert_fail@plt+0x19b58>
   2ae38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ae3c:	and	r3, r3, #2
   2ae40:	cmp	r3, #0
   2ae44:	beq	2b2a4 <__assert_fail@plt+0x19fb4>
   2ae48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ae4c:	ldr	r3, [r3, #4]
   2ae50:	ubfx	r3, r3, #8, #10
   2ae54:	uxth	r3, r3
   2ae58:	and	r3, r3, #128	; 0x80
   2ae5c:	cmp	r3, #0
   2ae60:	beq	2ae74 <__assert_fail@plt+0x19b84>
   2ae64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ae68:	and	r3, r3, #8
   2ae6c:	cmp	r3, #0
   2ae70:	beq	2b2a4 <__assert_fail@plt+0x19fb4>
   2ae74:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ae78:	ldr	r3, [r3, #108]	; 0x6c
   2ae7c:	str	r3, [fp, #-20]	; 0xffffffec
   2ae80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ae84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ae88:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2ae8c:	bl	2b304 <__assert_fail@plt+0x1a014>
   2ae90:	mov	r3, r0
   2ae94:	str	r3, [fp, #-68]	; 0xffffffbc
   2ae98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ae9c:	cmp	r3, #0
   2aea0:	movne	r3, #1
   2aea4:	moveq	r3, #0
   2aea8:	uxtb	r3, r3
   2aeac:	cmp	r3, #0
   2aeb0:	bne	2b2d4 <__assert_fail@plt+0x19fe4>
   2aeb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aeb8:	ldr	r2, [r3, #12]
   2aebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aec0:	lsl	r3, r3, #2
   2aec4:	add	r3, r2, r3
   2aec8:	ldr	r3, [r3]
   2aecc:	cmn	r3, #1
   2aed0:	b	2b284 <__assert_fail@plt+0x19f94>
   2aed4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2aed8:	ldr	r1, [r3, #116]	; 0x74
   2aedc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2aee0:	mov	r3, r2
   2aee4:	lsl	r3, r3, #1
   2aee8:	add	r3, r3, r2
   2aeec:	lsl	r3, r3, #3
   2aef0:	add	r3, r1, r3
   2aef4:	str	r3, [fp, #-44]	; 0xffffffd4
   2aef8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2aefc:	ldr	r3, [r3]
   2af00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2af04:	cmp	r2, r3
   2af08:	bne	2b274 <__assert_fail@plt+0x19f84>
   2af0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2af10:	ldr	r3, [r3, #4]
   2af14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2af18:	cmp	r2, r3
   2af1c:	bne	2b274 <__assert_fail@plt+0x19f84>
   2af20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2af24:	ldr	r2, [r3, #12]
   2af28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2af2c:	ldr	r3, [r3, #8]
   2af30:	sub	r3, r2, r3
   2af34:	str	r3, [fp, #-48]	; 0xffffffd0
   2af38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2af3c:	cmp	r3, #0
   2af40:	bne	2af90 <__assert_fail@plt+0x19ca0>
   2af44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af48:	ldr	r1, [r3, #24]
   2af4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af50:	ldr	r0, [r3, #20]
   2af54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2af58:	mov	r3, r2
   2af5c:	lsl	r3, r3, #1
   2af60:	add	r3, r3, r2
   2af64:	lsl	r3, r3, #2
   2af68:	add	r3, r0, r3
   2af6c:	ldr	r3, [r3, #8]
   2af70:	ldr	r3, [r3]
   2af74:	mov	r2, r3
   2af78:	mov	r3, r2
   2af7c:	lsl	r3, r3, #1
   2af80:	add	r3, r3, r2
   2af84:	lsl	r3, r3, #2
   2af88:	add	r3, r1, r3
   2af8c:	b	2afc8 <__assert_fail@plt+0x19cd8>
   2af90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af94:	ldr	r2, [r3, #24]
   2af98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af9c:	ldr	r1, [r3, #12]
   2afa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2afa4:	lsl	r3, r3, #2
   2afa8:	add	r3, r1, r3
   2afac:	ldr	r3, [r3]
   2afb0:	mov	r1, r3
   2afb4:	mov	r3, r1
   2afb8:	lsl	r3, r3, #1
   2afbc:	add	r3, r3, r1
   2afc0:	lsl	r3, r3, #2
   2afc4:	add	r3, r2, r3
   2afc8:	str	r3, [fp, #-52]	; 0xffffffcc
   2afcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2afd0:	ldr	r2, [r3, #12]
   2afd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2afd8:	add	r2, r2, r3
   2afdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2afe0:	ldr	r3, [r3, #8]
   2afe4:	sub	r3, r2, r3
   2afe8:	str	r3, [fp, #-56]	; 0xffffffc8
   2afec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2aff0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2aff4:	sub	r1, r3, #1
   2aff8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2affc:	ldr	r3, [r3, #88]	; 0x58
   2b000:	mov	r2, r3
   2b004:	bl	18d10 <__assert_fail@plt+0x7a20>
   2b008:	str	r0, [fp, #-40]	; 0xffffffd8
   2b00c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b010:	ldr	r2, [r3, #100]	; 0x64
   2b014:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b018:	lsl	r3, r3, #2
   2b01c:	add	r3, r2, r3
   2b020:	ldr	r3, [r3]
   2b024:	str	r3, [fp, #-60]	; 0xffffffc4
   2b028:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b02c:	ldr	r2, [r3, #100]	; 0x64
   2b030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b034:	lsl	r3, r3, #2
   2b038:	add	r3, r2, r3
   2b03c:	ldr	r3, [r3]
   2b040:	cmp	r3, #0
   2b044:	beq	2b068 <__assert_fail@plt+0x19d78>
   2b048:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b04c:	ldr	r2, [r3, #100]	; 0x64
   2b050:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b054:	lsl	r3, r3, #2
   2b058:	add	r3, r2, r3
   2b05c:	ldr	r3, [r3]
   2b060:	ldr	r3, [r3, #8]
   2b064:	b	2b06c <__assert_fail@plt+0x19d7c>
   2b068:	mov	r3, #0
   2b06c:	str	r3, [fp, #-64]	; 0xffffffc0
   2b070:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b074:	cmp	r3, #0
   2b078:	bne	2b0fc <__assert_fail@plt+0x19e0c>
   2b07c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b080:	ldr	r2, [r3, #100]	; 0x64
   2b084:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b088:	lsl	r3, r3, #2
   2b08c:	add	r4, r2, r3
   2b090:	sub	r0, fp, #68	; 0x44
   2b094:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b098:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2b09c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b0a0:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2b0a4:	mov	r3, r0
   2b0a8:	str	r3, [r4]
   2b0ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b0b0:	ldr	r2, [r3, #100]	; 0x64
   2b0b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0b8:	lsl	r3, r3, #2
   2b0bc:	add	r3, r2, r3
   2b0c0:	ldr	r3, [r3]
   2b0c4:	cmp	r3, #0
   2b0c8:	moveq	r3, #1
   2b0cc:	movne	r3, #0
   2b0d0:	uxtb	r3, r3
   2b0d4:	cmp	r3, #0
   2b0d8:	beq	2b1d8 <__assert_fail@plt+0x19ee8>
   2b0dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b0e0:	cmp	r3, #0
   2b0e4:	movne	r3, #1
   2b0e8:	moveq	r3, #0
   2b0ec:	uxtb	r3, r3
   2b0f0:	cmp	r3, #0
   2b0f4:	beq	2b1d8 <__assert_fail@plt+0x19ee8>
   2b0f8:	b	2b2e8 <__assert_fail@plt+0x19ff8>
   2b0fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b100:	ldr	r1, [r3, #40]	; 0x28
   2b104:	sub	r3, fp, #80	; 0x50
   2b108:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2b10c:	mov	r0, r3
   2b110:	bl	19704 <__assert_fail@plt+0x8414>
   2b114:	mov	r3, r0
   2b118:	str	r3, [fp, #-68]	; 0xffffffbc
   2b11c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b120:	cmp	r3, #0
   2b124:	movne	r3, #1
   2b128:	moveq	r3, #0
   2b12c:	uxtb	r3, r3
   2b130:	cmp	r3, #0
   2b134:	beq	2b148 <__assert_fail@plt+0x19e58>
   2b138:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b13c:	mov	r0, r3
   2b140:	bl	31b28 <__assert_fail@plt+0x20838>
   2b144:	b	2b2e8 <__assert_fail@plt+0x19ff8>
   2b148:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b14c:	ldr	r2, [r3, #100]	; 0x64
   2b150:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b154:	lsl	r3, r3, #2
   2b158:	add	r4, r2, r3
   2b15c:	sub	r2, fp, #80	; 0x50
   2b160:	sub	r0, fp, #68	; 0x44
   2b164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b16c:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2b170:	mov	r3, r0
   2b174:	str	r3, [r4]
   2b178:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b17c:	mov	r0, r3
   2b180:	bl	31b28 <__assert_fail@plt+0x20838>
   2b184:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b188:	ldr	r2, [r3, #100]	; 0x64
   2b18c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b190:	lsl	r3, r3, #2
   2b194:	add	r3, r2, r3
   2b198:	ldr	r3, [r3]
   2b19c:	cmp	r3, #0
   2b1a0:	moveq	r3, #1
   2b1a4:	movne	r3, #0
   2b1a8:	uxtb	r3, r3
   2b1ac:	cmp	r3, #0
   2b1b0:	beq	2b1d8 <__assert_fail@plt+0x19ee8>
   2b1b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b1b8:	cmp	r3, #0
   2b1bc:	movne	r3, #1
   2b1c0:	moveq	r3, #0
   2b1c4:	uxtb	r3, r3
   2b1c8:	cmp	r3, #0
   2b1cc:	beq	2b1d8 <__assert_fail@plt+0x19ee8>
   2b1d0:	nop	{0}
   2b1d4:	b	2b2e8 <__assert_fail@plt+0x19ff8>
   2b1d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b1dc:	cmp	r3, #0
   2b1e0:	bne	2b278 <__assert_fail@plt+0x19f88>
   2b1e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b1e8:	ldr	r2, [r3, #100]	; 0x64
   2b1ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b1f0:	lsl	r3, r3, #2
   2b1f4:	add	r3, r2, r3
   2b1f8:	ldr	r3, [r3]
   2b1fc:	ldr	r3, [r3, #8]
   2b200:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2b204:	cmp	r2, r3
   2b208:	bge	2b278 <__assert_fail@plt+0x19f88>
   2b20c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b210:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2b214:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b218:	bl	2a7a0 <__assert_fail@plt+0x194b0>
   2b21c:	mov	r3, r0
   2b220:	str	r3, [fp, #-68]	; 0xffffffbc
   2b224:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b228:	cmp	r3, #0
   2b22c:	movne	r3, #1
   2b230:	moveq	r3, #0
   2b234:	uxtb	r3, r3
   2b238:	cmp	r3, #0
   2b23c:	bne	2b2dc <__assert_fail@plt+0x19fec>
   2b240:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2b244:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b248:	bl	2ad08 <__assert_fail@plt+0x19a18>
   2b24c:	mov	r3, r0
   2b250:	str	r3, [fp, #-68]	; 0xffffffbc
   2b254:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b258:	cmp	r3, #0
   2b25c:	movne	r3, #1
   2b260:	moveq	r3, #0
   2b264:	uxtb	r3, r3
   2b268:	cmp	r3, #0
   2b26c:	bne	2b2e4 <__assert_fail@plt+0x19ff4>
   2b270:	b	2b278 <__assert_fail@plt+0x19f88>
   2b274:	nop	{0}
   2b278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b27c:	add	r3, r3, #1
   2b280:	str	r3, [fp, #-20]	; 0xffffffec
   2b284:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b288:	ldr	r3, [r3, #108]	; 0x6c
   2b28c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b290:	cmp	r2, r3
   2b294:	blt	2aed4 <__assert_fail@plt+0x19be4>
   2b298:	b	2b2a8 <__assert_fail@plt+0x19fb8>
   2b29c:	nop	{0}
   2b2a0:	b	2b2a8 <__assert_fail@plt+0x19fb8>
   2b2a4:	nop	{0}
   2b2a8:	ldr	r3, [fp, #-16]
   2b2ac:	add	r3, r3, #1
   2b2b0:	str	r3, [fp, #-16]
   2b2b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b2b8:	ldr	r3, [r3, #4]
   2b2bc:	ldr	r2, [fp, #-16]
   2b2c0:	cmp	r2, r3
   2b2c4:	blt	2ad48 <__assert_fail@plt+0x19a58>
   2b2c8:	mov	r3, #0
   2b2cc:	str	r3, [fp, #-68]	; 0xffffffbc
   2b2d0:	b	2b2e8 <__assert_fail@plt+0x19ff8>
   2b2d4:	nop	{0}
   2b2d8:	b	2b2e8 <__assert_fail@plt+0x19ff8>
   2b2dc:	nop	{0}
   2b2e0:	b	2b2e8 <__assert_fail@plt+0x19ff8>
   2b2e4:	nop	{0}
   2b2e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b2ec:	mov	r0, r3
   2b2f0:	sub	sp, fp, #8
   2b2f4:	ldr	r4, [sp]
   2b2f8:	ldr	fp, [sp, #4]
   2b2fc:	add	sp, sp, #8
   2b300:	pop	{pc}		; (ldr pc, [sp], #4)
   2b304:	str	fp, [sp, #-8]!
   2b308:	str	lr, [sp, #4]
   2b30c:	add	fp, sp, #4
   2b310:	sub	sp, sp, #96	; 0x60
   2b314:	str	r0, [fp, #-72]	; 0xffffffb8
   2b318:	str	r1, [fp, #-76]	; 0xffffffb4
   2b31c:	str	r2, [fp, #-80]	; 0xffffffb0
   2b320:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b324:	ldr	r3, [r3, #84]	; 0x54
   2b328:	str	r3, [fp, #-32]	; 0xffffffe0
   2b32c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b330:	ldr	r3, [r3, #4]
   2b334:	str	r3, [fp, #-12]
   2b338:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2b33c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2b340:	bl	2f274 <__assert_fail@plt+0x1df84>
   2b344:	str	r0, [fp, #-36]	; 0xffffffdc
   2b348:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b34c:	cmn	r3, #1
   2b350:	beq	2b3ac <__assert_fail@plt+0x1a0bc>
   2b354:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b358:	ldr	r1, [r3, #116]	; 0x74
   2b35c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b360:	mov	r3, r2
   2b364:	lsl	r3, r3, #1
   2b368:	add	r3, r3, r2
   2b36c:	lsl	r3, r3, #3
   2b370:	add	r3, r1, r3
   2b374:	str	r3, [fp, #-16]
   2b378:	ldr	r3, [fp, #-16]
   2b37c:	ldr	r3, [r3]
   2b380:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2b384:	cmp	r2, r3
   2b388:	bne	2b394 <__assert_fail@plt+0x1a0a4>
   2b38c:	mov	r3, #0
   2b390:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b394:	ldr	r3, [fp, #-16]
   2b398:	add	r2, r3, #24
   2b39c:	str	r2, [fp, #-16]
   2b3a0:	ldrb	r3, [r3, #20]
   2b3a4:	cmp	r3, #0
   2b3a8:	bne	2b378 <__assert_fail@plt+0x1a088>
   2b3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b3b0:	ldr	r2, [r3]
   2b3b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2b3b8:	lsl	r3, r3, #3
   2b3bc:	add	r3, r2, r3
   2b3c0:	ldr	r3, [r3]
   2b3c4:	str	r3, [fp, #-40]	; 0xffffffd8
   2b3c8:	mov	r3, #0
   2b3cc:	str	r3, [fp, #-8]
   2b3d0:	b	2b914 <__assert_fail@plt+0x1a624>
   2b3d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b3d8:	ldr	r2, [r3, #132]	; 0x84
   2b3dc:	ldr	r3, [fp, #-8]
   2b3e0:	lsl	r3, r3, #2
   2b3e4:	add	r3, r2, r3
   2b3e8:	ldr	r3, [r3]
   2b3ec:	str	r3, [fp, #-44]	; 0xffffffd4
   2b3f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b3f4:	ldr	r2, [r3]
   2b3f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b3fc:	ldr	r3, [r3, #4]
   2b400:	lsl	r3, r3, #3
   2b404:	add	r3, r2, r3
   2b408:	ldr	r3, [r3]
   2b40c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b410:	cmp	r2, r3
   2b414:	bne	2b8ec <__assert_fail@plt+0x1a5fc>
   2b418:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b41c:	ldr	r3, [r3]
   2b420:	str	r3, [fp, #-24]	; 0xffffffe8
   2b424:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b428:	str	r3, [fp, #-28]	; 0xffffffe4
   2b42c:	mov	r3, #0
   2b430:	str	r3, [fp, #-20]	; 0xffffffec
   2b434:	b	2b5c4 <__assert_fail@plt+0x1a2d4>
   2b438:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b43c:	ldr	r2, [r3, #20]
   2b440:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b444:	lsl	r3, r3, #2
   2b448:	add	r3, r2, r3
   2b44c:	ldr	r3, [r3]
   2b450:	str	r3, [fp, #-48]	; 0xffffffd0
   2b454:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b458:	ldr	r2, [r3, #4]
   2b45c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b460:	sub	r3, r2, r3
   2b464:	str	r3, [fp, #-52]	; 0xffffffcc
   2b468:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b46c:	cmp	r3, #0
   2b470:	ble	2b538 <__assert_fail@plt+0x1a248>
   2b474:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b478:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b47c:	add	r2, r2, r3
   2b480:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b484:	ldr	r3, [r3, #28]
   2b488:	cmp	r2, r3
   2b48c:	movgt	r3, #1
   2b490:	movle	r3, #0
   2b494:	uxtb	r3, r3
   2b498:	cmp	r3, #0
   2b49c:	beq	2b508 <__assert_fail@plt+0x1a218>
   2b4a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b4a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b4a8:	add	r2, r2, r3
   2b4ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b4b0:	ldr	r3, [r3, #48]	; 0x30
   2b4b4:	cmp	r2, r3
   2b4b8:	bgt	2b5dc <__assert_fail@plt+0x1a2ec>
   2b4bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b4c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b4c4:	add	r3, r2, r3
   2b4c8:	mov	r1, r3
   2b4cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2b4d0:	bl	28968 <__assert_fail@plt+0x17678>
   2b4d4:	str	r0, [fp, #-56]	; 0xffffffc8
   2b4d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b4dc:	cmp	r3, #0
   2b4e0:	movne	r3, #1
   2b4e4:	moveq	r3, #0
   2b4e8:	uxtb	r3, r3
   2b4ec:	cmp	r3, #0
   2b4f0:	beq	2b4fc <__assert_fail@plt+0x1a20c>
   2b4f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b4f8:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b4fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b500:	ldr	r3, [r3, #4]
   2b504:	str	r3, [fp, #-12]
   2b508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b50c:	ldr	r2, [fp, #-12]
   2b510:	add	r0, r2, r3
   2b514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b518:	ldr	r2, [fp, #-12]
   2b51c:	add	r3, r2, r3
   2b520:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2b524:	mov	r1, r3
   2b528:	bl	110bc <memcmp@plt>
   2b52c:	mov	r3, r0
   2b530:	cmp	r3, #0
   2b534:	bne	2b5e4 <__assert_fail@plt+0x1a2f4>
   2b538:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b53c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b540:	add	r3, r2, r3
   2b544:	str	r3, [fp, #-28]	; 0xffffffe4
   2b548:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b54c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b550:	add	r3, r2, r3
   2b554:	str	r3, [fp, #-24]	; 0xffffffe8
   2b558:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b55c:	str	r3, [sp]
   2b560:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2b564:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b56c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2b570:	bl	2b940 <__assert_fail@plt+0x1a650>
   2b574:	str	r0, [fp, #-56]	; 0xffffffc8
   2b578:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b57c:	ldr	r3, [r3, #4]
   2b580:	str	r3, [fp, #-12]
   2b584:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b588:	cmp	r3, #1
   2b58c:	beq	2b5b4 <__assert_fail@plt+0x1a2c4>
   2b590:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b594:	cmp	r3, #0
   2b598:	movne	r3, #1
   2b59c:	moveq	r3, #0
   2b5a0:	uxtb	r3, r3
   2b5a4:	cmp	r3, #0
   2b5a8:	beq	2b5b8 <__assert_fail@plt+0x1a2c8>
   2b5ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b5b0:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b5b4:	nop	{0}
   2b5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b5bc:	add	r3, r3, #1
   2b5c0:	str	r3, [fp, #-20]	; 0xffffffec
   2b5c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b5c8:	ldr	r3, [r3, #16]
   2b5cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b5d0:	cmp	r2, r3
   2b5d4:	blt	2b438 <__assert_fail@plt+0x1a148>
   2b5d8:	b	2b5e8 <__assert_fail@plt+0x1a2f8>
   2b5dc:	nop	{0}
   2b5e0:	b	2b5e8 <__assert_fail@plt+0x1a2f8>
   2b5e4:	nop	{0}
   2b5e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b5ec:	ldr	r3, [r3, #16]
   2b5f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b5f4:	cmp	r2, r3
   2b5f8:	blt	2b8f4 <__assert_fail@plt+0x1a604>
   2b5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b600:	cmp	r3, #0
   2b604:	ble	2b8d8 <__assert_fail@plt+0x1a5e8>
   2b608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b60c:	add	r3, r3, #1
   2b610:	str	r3, [fp, #-24]	; 0xffffffe8
   2b614:	b	2b8d8 <__assert_fail@plt+0x1a5e8>
   2b618:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b61c:	ldr	r3, [r3]
   2b620:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b624:	sub	r3, r2, r3
   2b628:	str	r3, [fp, #-60]	; 0xffffffc4
   2b62c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b630:	cmp	r3, #0
   2b634:	ble	2b6f0 <__assert_fail@plt+0x1a400>
   2b638:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b63c:	ldr	r3, [r3, #28]
   2b640:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b644:	cmp	r2, r3
   2b648:	movge	r3, #1
   2b64c:	movlt	r3, #0
   2b650:	uxtb	r3, r3
   2b654:	cmp	r3, #0
   2b658:	beq	2b6b8 <__assert_fail@plt+0x1a3c8>
   2b65c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b660:	ldr	r3, [r3, #48]	; 0x30
   2b664:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b668:	cmp	r2, r3
   2b66c:	bge	2b8fc <__assert_fail@plt+0x1a60c>
   2b670:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b674:	add	r3, r3, #1
   2b678:	mov	r1, r3
   2b67c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2b680:	bl	2eab8 <__assert_fail@plt+0x1d7c8>
   2b684:	str	r0, [fp, #-56]	; 0xffffffc8
   2b688:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b68c:	cmp	r3, #0
   2b690:	movne	r3, #1
   2b694:	moveq	r3, #0
   2b698:	uxtb	r3, r3
   2b69c:	cmp	r3, #0
   2b6a0:	beq	2b6ac <__assert_fail@plt+0x1a3bc>
   2b6a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b6a8:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b6ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b6b0:	ldr	r3, [r3, #4]
   2b6b4:	str	r3, [fp, #-12]
   2b6b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b6bc:	add	r2, r3, #1
   2b6c0:	str	r2, [fp, #-28]	; 0xffffffe4
   2b6c4:	mov	r2, r3
   2b6c8:	ldr	r3, [fp, #-12]
   2b6cc:	add	r3, r3, r2
   2b6d0:	ldrb	r2, [r3]
   2b6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b6d8:	sub	r3, r3, #1
   2b6dc:	ldr	r1, [fp, #-12]
   2b6e0:	add	r3, r1, r3
   2b6e4:	ldrb	r3, [r3]
   2b6e8:	cmp	r2, r3
   2b6ec:	bne	2b904 <__assert_fail@plt+0x1a614>
   2b6f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b6f4:	ldr	r2, [r3, #100]	; 0x64
   2b6f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b6fc:	lsl	r3, r3, #2
   2b700:	add	r3, r2, r3
   2b704:	ldr	r3, [r3]
   2b708:	cmp	r3, #0
   2b70c:	beq	2b8b0 <__assert_fail@plt+0x1a5c0>
   2b710:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b714:	ldr	r2, [r3, #100]	; 0x64
   2b718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b71c:	lsl	r3, r3, #2
   2b720:	add	r3, r2, r3
   2b724:	ldr	r3, [r3]
   2b728:	add	r3, r3, #4
   2b72c:	str	r3, [fp, #-64]	; 0xffffffc0
   2b730:	mov	r3, #9
   2b734:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b738:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2b73c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b740:	bl	2ba48 <__assert_fail@plt+0x1a758>
   2b744:	str	r0, [fp, #-68]	; 0xffffffbc
   2b748:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b74c:	cmn	r3, #1
   2b750:	beq	2b8b8 <__assert_fail@plt+0x1a5c8>
   2b754:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b758:	ldr	r3, [r3, #8]
   2b75c:	cmp	r3, #0
   2b760:	bne	2b7ac <__assert_fail@plt+0x1a4bc>
   2b764:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b768:	ldr	r3, [r3]
   2b76c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b770:	sub	r3, r2, r3
   2b774:	add	r3, r3, #1
   2b778:	mov	r1, r3
   2b77c:	mov	r0, #12
   2b780:	bl	3127c <__assert_fail@plt+0x1ff8c>
   2b784:	mov	r3, r0
   2b788:	mov	r2, r3
   2b78c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b790:	str	r2, [r3, #8]
   2b794:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b798:	ldr	r3, [r3, #8]
   2b79c:	cmp	r3, #0
   2b7a0:	bne	2b7ac <__assert_fail@plt+0x1a4bc>
   2b7a4:	mov	r3, #12
   2b7a8:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b7ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b7b0:	ldr	r1, [r3, #8]
   2b7b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b7b8:	ldr	r2, [r3, #4]
   2b7bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b7c0:	ldr	r0, [r3]
   2b7c4:	mov	r3, #9
   2b7c8:	str	r3, [sp, #8]
   2b7cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b7d0:	str	r3, [sp, #4]
   2b7d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b7d8:	str	r3, [sp]
   2b7dc:	mov	r3, r0
   2b7e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2b7e4:	bl	2bb0c <__assert_fail@plt+0x1a81c>
   2b7e8:	str	r0, [fp, #-56]	; 0xffffffc8
   2b7ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b7f0:	cmp	r3, #1
   2b7f4:	beq	2b8c0 <__assert_fail@plt+0x1a5d0>
   2b7f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b7fc:	cmp	r3, #0
   2b800:	movne	r3, #1
   2b804:	moveq	r3, #0
   2b808:	uxtb	r3, r3
   2b80c:	cmp	r3, #0
   2b810:	beq	2b81c <__assert_fail@plt+0x1a52c>
   2b814:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b818:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b81c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b820:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2b824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b828:	bl	2f51c <__assert_fail@plt+0x1e22c>
   2b82c:	str	r0, [fp, #-48]	; 0xffffffd0
   2b830:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b834:	cmp	r3, #0
   2b838:	moveq	r3, #1
   2b83c:	movne	r3, #0
   2b840:	uxtb	r3, r3
   2b844:	cmp	r3, #0
   2b848:	beq	2b854 <__assert_fail@plt+0x1a564>
   2b84c:	mov	r3, #12
   2b850:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b854:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b858:	str	r3, [sp]
   2b85c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2b860:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b864:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b868:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2b86c:	bl	2b940 <__assert_fail@plt+0x1a650>
   2b870:	str	r0, [fp, #-56]	; 0xffffffc8
   2b874:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b878:	ldr	r3, [r3, #4]
   2b87c:	str	r3, [fp, #-12]
   2b880:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b884:	cmp	r3, #1
   2b888:	beq	2b8c8 <__assert_fail@plt+0x1a5d8>
   2b88c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b890:	cmp	r3, #0
   2b894:	movne	r3, #1
   2b898:	moveq	r3, #0
   2b89c:	uxtb	r3, r3
   2b8a0:	cmp	r3, #0
   2b8a4:	beq	2b8cc <__assert_fail@plt+0x1a5dc>
   2b8a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b8ac:	b	2b92c <__assert_fail@plt+0x1a63c>
   2b8b0:	nop	{0}
   2b8b4:	b	2b8cc <__assert_fail@plt+0x1a5dc>
   2b8b8:	nop	{0}
   2b8bc:	b	2b8cc <__assert_fail@plt+0x1a5dc>
   2b8c0:	nop	{0}
   2b8c4:	b	2b8cc <__assert_fail@plt+0x1a5dc>
   2b8c8:	nop	{0}
   2b8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b8d0:	add	r3, r3, #1
   2b8d4:	str	r3, [fp, #-24]	; 0xffffffe8
   2b8d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b8dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b8e0:	cmp	r2, r3
   2b8e4:	ble	2b618 <__assert_fail@plt+0x1a328>
   2b8e8:	b	2b908 <__assert_fail@plt+0x1a618>
   2b8ec:	nop	{0}
   2b8f0:	b	2b908 <__assert_fail@plt+0x1a618>
   2b8f4:	nop	{0}
   2b8f8:	b	2b908 <__assert_fail@plt+0x1a618>
   2b8fc:	nop	{0}
   2b900:	b	2b908 <__assert_fail@plt+0x1a618>
   2b904:	nop	{0}
   2b908:	ldr	r3, [fp, #-8]
   2b90c:	add	r3, r3, #1
   2b910:	str	r3, [fp, #-8]
   2b914:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b918:	ldr	r3, [r3, #124]	; 0x7c
   2b91c:	ldr	r2, [fp, #-8]
   2b920:	cmp	r2, r3
   2b924:	blt	2b3d4 <__assert_fail@plt+0x1a0e4>
   2b928:	mov	r3, #0
   2b92c:	mov	r0, r3
   2b930:	sub	sp, fp, #4
   2b934:	ldr	fp, [sp]
   2b938:	add	sp, sp, #4
   2b93c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b940:	str	fp, [sp, #-8]!
   2b944:	str	lr, [sp, #4]
   2b948:	add	fp, sp, #4
   2b94c:	sub	sp, sp, #40	; 0x28
   2b950:	str	r0, [fp, #-16]
   2b954:	str	r1, [fp, #-20]	; 0xffffffec
   2b958:	str	r2, [fp, #-24]	; 0xffffffe8
   2b95c:	str	r3, [fp, #-28]	; 0xffffffe4
   2b960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b964:	add	r1, r3, #8
   2b968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b96c:	ldr	r2, [r3]
   2b970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b974:	ldr	r0, [r3, #4]
   2b978:	mov	r3, #8
   2b97c:	str	r3, [sp, #8]
   2b980:	ldr	r3, [fp, #4]
   2b984:	str	r3, [sp, #4]
   2b988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b98c:	str	r3, [sp]
   2b990:	mov	r3, r0
   2b994:	ldr	r0, [fp, #-16]
   2b998:	bl	2bb0c <__assert_fail@plt+0x1a81c>
   2b99c:	str	r0, [fp, #-8]
   2b9a0:	ldr	r3, [fp, #-8]
   2b9a4:	cmp	r3, #0
   2b9a8:	beq	2b9b4 <__assert_fail@plt+0x1a6c4>
   2b9ac:	ldr	r3, [fp, #-8]
   2b9b0:	b	2ba34 <__assert_fail@plt+0x1a744>
   2b9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b9b8:	ldr	r2, [r3]
   2b9bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b9c0:	ldr	r3, [r3, #4]
   2b9c4:	str	r3, [sp]
   2b9c8:	mov	r3, r2
   2b9cc:	ldr	r2, [fp, #4]
   2b9d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b9d4:	ldr	r0, [fp, #-16]
   2b9d8:	bl	2ef5c <__assert_fail@plt+0x1dc6c>
   2b9dc:	str	r0, [fp, #-8]
   2b9e0:	ldr	r3, [fp, #-8]
   2b9e4:	cmp	r3, #0
   2b9e8:	movne	r3, #1
   2b9ec:	moveq	r3, #0
   2b9f0:	uxtb	r3, r3
   2b9f4:	cmp	r3, #0
   2b9f8:	beq	2ba04 <__assert_fail@plt+0x1a714>
   2b9fc:	ldr	r3, [fp, #-8]
   2ba00:	b	2ba34 <__assert_fail@plt+0x1a744>
   2ba04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba08:	ldr	r2, [r3, #4]
   2ba0c:	ldr	r3, [fp, #4]
   2ba10:	add	r2, r2, r3
   2ba14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ba18:	ldr	r3, [r3]
   2ba1c:	sub	r3, r2, r3
   2ba20:	str	r3, [fp, #-12]
   2ba24:	ldr	r1, [fp, #-12]
   2ba28:	ldr	r0, [fp, #-16]
   2ba2c:	bl	28968 <__assert_fail@plt+0x17678>
   2ba30:	mov	r3, r0
   2ba34:	mov	r0, r3
   2ba38:	sub	sp, fp, #4
   2ba3c:	ldr	fp, [sp]
   2ba40:	add	sp, sp, #4
   2ba44:	pop	{pc}		; (ldr pc, [sp], #4)
   2ba48:	push	{fp}		; (str fp, [sp, #-4]!)
   2ba4c:	add	fp, sp, #0
   2ba50:	sub	sp, sp, #36	; 0x24
   2ba54:	str	r0, [fp, #-24]	; 0xffffffe8
   2ba58:	str	r1, [fp, #-28]	; 0xffffffe4
   2ba5c:	str	r2, [fp, #-32]	; 0xffffffe0
   2ba60:	str	r3, [fp, #-36]	; 0xffffffdc
   2ba64:	mov	r3, #0
   2ba68:	str	r3, [fp, #-8]
   2ba6c:	b	2bae4 <__assert_fail@plt+0x1a7f4>
   2ba70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ba74:	ldr	r2, [r3, #8]
   2ba78:	ldr	r3, [fp, #-8]
   2ba7c:	lsl	r3, r3, #2
   2ba80:	add	r3, r2, r3
   2ba84:	ldr	r3, [r3]
   2ba88:	str	r3, [fp, #-12]
   2ba8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba90:	ldr	r2, [r3]
   2ba94:	ldr	r3, [fp, #-12]
   2ba98:	lsl	r3, r3, #3
   2ba9c:	add	r3, r2, r3
   2baa0:	str	r3, [fp, #-16]
   2baa4:	ldr	r3, [fp, #-16]
   2baa8:	ldrb	r3, [r3, #4]
   2baac:	mov	r2, r3
   2bab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bab4:	cmp	r3, r2
   2bab8:	bne	2bad8 <__assert_fail@plt+0x1a7e8>
   2babc:	ldr	r3, [fp, #-16]
   2bac0:	ldr	r3, [r3]
   2bac4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bac8:	cmp	r2, r3
   2bacc:	bne	2bad8 <__assert_fail@plt+0x1a7e8>
   2bad0:	ldr	r3, [fp, #-12]
   2bad4:	b	2bafc <__assert_fail@plt+0x1a80c>
   2bad8:	ldr	r3, [fp, #-8]
   2badc:	add	r3, r3, #1
   2bae0:	str	r3, [fp, #-8]
   2bae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bae8:	ldr	r3, [r3, #4]
   2baec:	ldr	r2, [fp, #-8]
   2baf0:	cmp	r2, r3
   2baf4:	blt	2ba70 <__assert_fail@plt+0x1a780>
   2baf8:	mvn	r3, #0
   2bafc:	mov	r0, r3
   2bb00:	add	sp, fp, #0
   2bb04:	pop	{fp}		; (ldr fp, [sp], #4)
   2bb08:	bx	lr
   2bb0c:	str	fp, [sp, #-8]!
   2bb10:	str	lr, [sp, #4]
   2bb14:	add	fp, sp, #4
   2bb18:	sub	sp, sp, #96	; 0x60
   2bb1c:	str	r0, [fp, #-80]	; 0xffffffb0
   2bb20:	str	r1, [fp, #-84]	; 0xffffffac
   2bb24:	str	r2, [fp, #-88]	; 0xffffffa8
   2bb28:	str	r3, [fp, #-92]	; 0xffffffa4
   2bb2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bb30:	ldr	r3, [r3, #84]	; 0x54
   2bb34:	str	r3, [fp, #-20]	; 0xffffffec
   2bb38:	mov	r3, #0
   2bb3c:	str	r3, [fp, #-60]	; 0xffffffc4
   2bb40:	mov	r3, #0
   2bb44:	str	r3, [fp, #-16]
   2bb48:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb4c:	ldr	r2, [r3]
   2bb50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2bb54:	lsl	r3, r3, #3
   2bb58:	add	r3, r2, r3
   2bb5c:	ldr	r3, [r3]
   2bb60:	str	r3, [fp, #-24]	; 0xffffffe8
   2bb64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bb68:	ldr	r2, [r3, #120]	; 0x78
   2bb6c:	ldr	r3, [fp, #8]
   2bb70:	add	r2, r2, r3
   2bb74:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bb78:	ldr	r3, [r3, #4]
   2bb7c:	cmp	r2, r3
   2bb80:	movge	r3, #1
   2bb84:	movlt	r3, #0
   2bb88:	uxtb	r3, r3
   2bb8c:	cmp	r3, #0
   2bb90:	beq	2bcac <__assert_fail@plt+0x1a9bc>
   2bb94:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bb98:	ldr	r3, [r3, #4]
   2bb9c:	str	r3, [fp, #-28]	; 0xffffffe4
   2bba0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bba4:	ldr	r2, [r3, #120]	; 0x78
   2bba8:	ldr	r3, [fp, #8]
   2bbac:	add	r3, r2, r3
   2bbb0:	add	r3, r3, #1
   2bbb4:	str	r3, [fp, #-32]	; 0xffffffe0
   2bbb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bbbc:	movw	r3, #65535	; 0xffff
   2bbc0:	movt	r3, #32767	; 0x7fff
   2bbc4:	sub	r3, r3, r2
   2bbc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bbcc:	cmp	r2, r3
   2bbd0:	movgt	r3, #1
   2bbd4:	movle	r3, #0
   2bbd8:	uxtb	r3, r3
   2bbdc:	cmp	r3, #0
   2bbe0:	beq	2bbec <__assert_fail@plt+0x1a8fc>
   2bbe4:	mov	r3, #12
   2bbe8:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2bbec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bbf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bbf4:	add	r3, r2, r3
   2bbf8:	str	r3, [fp, #-36]	; 0xffffffdc
   2bbfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bc00:	cmn	r3, #-1073741823	; 0xc0000001
   2bc04:	movhi	r3, #1
   2bc08:	movls	r3, #0
   2bc0c:	uxtb	r3, r3
   2bc10:	cmp	r3, #0
   2bc14:	beq	2bc20 <__assert_fail@plt+0x1a930>
   2bc18:	mov	r3, #12
   2bc1c:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2bc20:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bc24:	ldr	r2, [r3, #8]
   2bc28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bc2c:	lsl	r3, r3, #2
   2bc30:	mov	r1, r3
   2bc34:	mov	r0, r2
   2bc38:	bl	313dc <__assert_fail@plt+0x200ec>
   2bc3c:	str	r0, [fp, #-40]	; 0xffffffd8
   2bc40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bc44:	cmp	r3, #0
   2bc48:	moveq	r3, #1
   2bc4c:	movne	r3, #0
   2bc50:	uxtb	r3, r3
   2bc54:	cmp	r3, #0
   2bc58:	beq	2bc64 <__assert_fail@plt+0x1a974>
   2bc5c:	mov	r3, #12
   2bc60:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2bc64:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bc68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2bc6c:	str	r2, [r3, #8]
   2bc70:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bc74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2bc78:	str	r2, [r3, #4]
   2bc7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bc80:	lsl	r3, r3, #2
   2bc84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2bc88:	add	r0, r2, r3
   2bc8c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bc90:	ldr	r2, [r3, #4]
   2bc94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bc98:	sub	r3, r2, r3
   2bc9c:	lsl	r3, r3, #2
   2bca0:	mov	r2, r3
   2bca4:	mov	r1, #0
   2bca8:	bl	11218 <memset@plt>
   2bcac:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bcb0:	ldr	r3, [r3]
   2bcb4:	cmp	r3, #0
   2bcb8:	beq	2bcc8 <__assert_fail@plt+0x1a9d8>
   2bcbc:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bcc0:	ldr	r3, [r3]
   2bcc4:	b	2bccc <__assert_fail@plt+0x1a9dc>
   2bcc8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bccc:	str	r3, [fp, #-8]
   2bcd0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bcd4:	ldr	r3, [r3, #100]	; 0x64
   2bcd8:	str	r3, [fp, #-44]	; 0xffffffd4
   2bcdc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bce0:	ldr	r3, [r3, #40]	; 0x28
   2bce4:	str	r3, [fp, #-48]	; 0xffffffd0
   2bce8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2bcec:	ldr	r2, [r3, #8]
   2bcf0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bcf4:	str	r2, [r3, #100]	; 0x64
   2bcf8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bcfc:	ldr	r2, [fp, #-8]
   2bd00:	str	r2, [r3, #40]	; 0x28
   2bd04:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2bd08:	ldr	r3, [fp, #-8]
   2bd0c:	sub	r1, r3, #1
   2bd10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bd14:	ldr	r3, [r3, #88]	; 0x58
   2bd18:	mov	r2, r3
   2bd1c:	bl	18d10 <__assert_fail@plt+0x7a20>
   2bd20:	str	r0, [fp, #-52]	; 0xffffffcc
   2bd24:	ldr	r2, [fp, #-8]
   2bd28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bd2c:	cmp	r2, r3
   2bd30:	bne	2bdbc <__assert_fail@plt+0x1aacc>
   2bd34:	sub	r3, fp, #72	; 0x48
   2bd38:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2bd3c:	mov	r0, r3
   2bd40:	bl	18f94 <__assert_fail@plt+0x7ca4>
   2bd44:	mov	r3, r0
   2bd48:	str	r3, [fp, #-60]	; 0xffffffc4
   2bd4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bd50:	cmp	r3, #0
   2bd54:	movne	r3, #1
   2bd58:	moveq	r3, #0
   2bd5c:	uxtb	r3, r3
   2bd60:	cmp	r3, #0
   2bd64:	beq	2bd70 <__assert_fail@plt+0x1aa80>
   2bd68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bd6c:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2bd70:	sub	r1, fp, #72	; 0x48
   2bd74:	ldr	r3, [fp, #12]
   2bd78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2bd7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bd80:	bl	2c5f8 <__assert_fail@plt+0x1b308>
   2bd84:	mov	r3, r0
   2bd88:	str	r3, [fp, #-60]	; 0xffffffc4
   2bd8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bd90:	cmp	r3, #0
   2bd94:	movne	r3, #1
   2bd98:	moveq	r3, #0
   2bd9c:	uxtb	r3, r3
   2bda0:	cmp	r3, #0
   2bda4:	beq	2be54 <__assert_fail@plt+0x1ab64>
   2bda8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bdac:	mov	r0, r3
   2bdb0:	bl	31b28 <__assert_fail@plt+0x20838>
   2bdb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bdb8:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2bdbc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bdc0:	ldr	r2, [r3, #100]	; 0x64
   2bdc4:	ldr	r3, [fp, #-8]
   2bdc8:	lsl	r3, r3, #2
   2bdcc:	add	r3, r2, r3
   2bdd0:	ldr	r3, [r3]
   2bdd4:	str	r3, [fp, #-16]
   2bdd8:	ldr	r3, [fp, #-16]
   2bddc:	cmp	r3, #0
   2bde0:	beq	2be40 <__assert_fail@plt+0x1ab50>
   2bde4:	ldr	r3, [fp, #-16]
   2bde8:	ldrb	r3, [r3, #52]	; 0x34
   2bdec:	and	r3, r3, #64	; 0x40
   2bdf0:	uxtb	r3, r3
   2bdf4:	cmp	r3, #0
   2bdf8:	beq	2be40 <__assert_fail@plt+0x1ab50>
   2bdfc:	ldr	r3, [fp, #-16]
   2be00:	add	r2, r3, #4
   2be04:	sub	r3, fp, #72	; 0x48
   2be08:	mov	r1, r2
   2be0c:	mov	r0, r3
   2be10:	bl	19160 <__assert_fail@plt+0x7e70>
   2be14:	mov	r3, r0
   2be18:	str	r3, [fp, #-60]	; 0xffffffc4
   2be1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2be20:	cmp	r3, #0
   2be24:	movne	r3, #1
   2be28:	moveq	r3, #0
   2be2c:	uxtb	r3, r3
   2be30:	cmp	r3, #0
   2be34:	beq	2be54 <__assert_fail@plt+0x1ab64>
   2be38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2be3c:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2be40:	sub	r3, fp, #72	; 0x48
   2be44:	mov	r2, #12
   2be48:	mov	r1, #0
   2be4c:	mov	r0, r3
   2be50:	bl	11218 <memset@plt>
   2be54:	ldr	r2, [fp, #-8]
   2be58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2be5c:	cmp	r2, r3
   2be60:	beq	2be88 <__assert_fail@plt+0x1ab98>
   2be64:	ldr	r3, [fp, #-16]
   2be68:	cmp	r3, #0
   2be6c:	beq	2bf68 <__assert_fail@plt+0x1ac78>
   2be70:	ldr	r3, [fp, #-16]
   2be74:	ldrb	r3, [r3, #52]	; 0x34
   2be78:	and	r3, r3, #64	; 0x40
   2be7c:	uxtb	r3, r3
   2be80:	cmp	r3, #0
   2be84:	beq	2bf68 <__assert_fail@plt+0x1ac78>
   2be88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2be8c:	cmp	r3, #0
   2be90:	beq	2bee8 <__assert_fail@plt+0x1abf8>
   2be94:	sub	r1, fp, #72	; 0x48
   2be98:	ldr	r3, [fp, #12]
   2be9c:	str	r3, [sp]
   2bea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bea4:	ldr	r2, [fp, #-8]
   2bea8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2beac:	bl	2c9e0 <__assert_fail@plt+0x1b6f0>
   2beb0:	mov	r3, r0
   2beb4:	str	r3, [fp, #-60]	; 0xffffffc4
   2beb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bebc:	cmp	r3, #0
   2bec0:	movne	r3, #1
   2bec4:	moveq	r3, #0
   2bec8:	uxtb	r3, r3
   2becc:	cmp	r3, #0
   2bed0:	beq	2bee8 <__assert_fail@plt+0x1abf8>
   2bed4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bed8:	mov	r0, r3
   2bedc:	bl	31b28 <__assert_fail@plt+0x20838>
   2bee0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bee4:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2bee8:	sub	r2, fp, #72	; 0x48
   2beec:	sub	r0, fp, #60	; 0x3c
   2bef0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bef8:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2befc:	str	r0, [fp, #-16]
   2bf00:	ldr	r3, [fp, #-16]
   2bf04:	cmp	r3, #0
   2bf08:	moveq	r3, #1
   2bf0c:	movne	r3, #0
   2bf10:	uxtb	r3, r3
   2bf14:	cmp	r3, #0
   2bf18:	beq	2bf4c <__assert_fail@plt+0x1ac5c>
   2bf1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bf20:	cmp	r3, #0
   2bf24:	movne	r3, #1
   2bf28:	moveq	r3, #0
   2bf2c:	uxtb	r3, r3
   2bf30:	cmp	r3, #0
   2bf34:	beq	2bf4c <__assert_fail@plt+0x1ac5c>
   2bf38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bf3c:	mov	r0, r3
   2bf40:	bl	31b28 <__assert_fail@plt+0x20838>
   2bf44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bf48:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2bf4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bf50:	ldr	r2, [r3, #100]	; 0x64
   2bf54:	ldr	r3, [fp, #-8]
   2bf58:	lsl	r3, r3, #2
   2bf5c:	add	r3, r2, r3
   2bf60:	ldr	r2, [fp, #-16]
   2bf64:	str	r2, [r3]
   2bf68:	mov	r3, #0
   2bf6c:	str	r3, [fp, #-12]
   2bf70:	b	2c1dc <__assert_fail@plt+0x1aeec>
   2bf74:	mov	r3, #0
   2bf78:	str	r3, [fp, #-68]	; 0xffffffbc
   2bf7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bf80:	ldr	r2, [r3, #100]	; 0x64
   2bf84:	ldr	r3, [fp, #-8]
   2bf88:	add	r3, r3, #1
   2bf8c:	lsl	r3, r3, #2
   2bf90:	add	r3, r2, r3
   2bf94:	ldr	r3, [r3]
   2bf98:	cmp	r3, #0
   2bf9c:	beq	2c008 <__assert_fail@plt+0x1ad18>
   2bfa0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2bfa4:	ldr	r2, [r3, #100]	; 0x64
   2bfa8:	ldr	r3, [fp, #-8]
   2bfac:	add	r3, r3, #1
   2bfb0:	lsl	r3, r3, #2
   2bfb4:	add	r3, r2, r3
   2bfb8:	ldr	r3, [r3]
   2bfbc:	add	r2, r3, #4
   2bfc0:	sub	r3, fp, #72	; 0x48
   2bfc4:	mov	r1, r2
   2bfc8:	mov	r0, r3
   2bfcc:	bl	19a8c <__assert_fail@plt+0x879c>
   2bfd0:	mov	r3, r0
   2bfd4:	str	r3, [fp, #-60]	; 0xffffffc4
   2bfd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bfdc:	cmp	r3, #0
   2bfe0:	movne	r3, #1
   2bfe4:	moveq	r3, #0
   2bfe8:	uxtb	r3, r3
   2bfec:	cmp	r3, #0
   2bff0:	beq	2c008 <__assert_fail@plt+0x1ad18>
   2bff4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bff8:	mov	r0, r3
   2bffc:	bl	31b28 <__assert_fail@plt+0x20838>
   2c000:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c004:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2c008:	ldr	r3, [fp, #-16]
   2c00c:	cmp	r3, #0
   2c010:	beq	2c064 <__assert_fail@plt+0x1ad74>
   2c014:	ldr	r3, [fp, #-16]
   2c018:	add	r2, r3, #16
   2c01c:	sub	r3, fp, #72	; 0x48
   2c020:	ldr	r1, [fp, #-8]
   2c024:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2c028:	bl	2c2bc <__assert_fail@plt+0x1afcc>
   2c02c:	mov	r3, r0
   2c030:	str	r3, [fp, #-60]	; 0xffffffc4
   2c034:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c038:	cmp	r3, #0
   2c03c:	movne	r3, #1
   2c040:	moveq	r3, #0
   2c044:	uxtb	r3, r3
   2c048:	cmp	r3, #0
   2c04c:	beq	2c064 <__assert_fail@plt+0x1ad74>
   2c050:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c054:	mov	r0, r3
   2c058:	bl	31b28 <__assert_fail@plt+0x20838>
   2c05c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c060:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2c064:	ldr	r3, [fp, #-8]
   2c068:	add	r3, r3, #1
   2c06c:	str	r3, [fp, #-8]
   2c070:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c074:	cmp	r3, #0
   2c078:	beq	2c11c <__assert_fail@plt+0x1ae2c>
   2c07c:	sub	r1, fp, #72	; 0x48
   2c080:	ldr	r3, [fp, #12]
   2c084:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c088:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c08c:	bl	2c5f8 <__assert_fail@plt+0x1b308>
   2c090:	mov	r3, r0
   2c094:	str	r3, [fp, #-60]	; 0xffffffc4
   2c098:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c09c:	cmp	r3, #0
   2c0a0:	movne	r3, #1
   2c0a4:	moveq	r3, #0
   2c0a8:	uxtb	r3, r3
   2c0ac:	cmp	r3, #0
   2c0b0:	beq	2c0c8 <__assert_fail@plt+0x1add8>
   2c0b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c0b8:	mov	r0, r3
   2c0bc:	bl	31b28 <__assert_fail@plt+0x20838>
   2c0c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c0c4:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2c0c8:	sub	r1, fp, #72	; 0x48
   2c0cc:	ldr	r3, [fp, #12]
   2c0d0:	str	r3, [sp]
   2c0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c0d8:	ldr	r2, [fp, #-8]
   2c0dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2c0e0:	bl	2c9e0 <__assert_fail@plt+0x1b6f0>
   2c0e4:	mov	r3, r0
   2c0e8:	str	r3, [fp, #-60]	; 0xffffffc4
   2c0ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c0f0:	cmp	r3, #0
   2c0f4:	movne	r3, #1
   2c0f8:	moveq	r3, #0
   2c0fc:	uxtb	r3, r3
   2c100:	cmp	r3, #0
   2c104:	beq	2c11c <__assert_fail@plt+0x1ae2c>
   2c108:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c10c:	mov	r0, r3
   2c110:	bl	31b28 <__assert_fail@plt+0x20838>
   2c114:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c118:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2c11c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2c120:	ldr	r3, [fp, #-8]
   2c124:	sub	r1, r3, #1
   2c128:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c12c:	ldr	r3, [r3, #88]	; 0x58
   2c130:	mov	r2, r3
   2c134:	bl	18d10 <__assert_fail@plt+0x7a20>
   2c138:	str	r0, [fp, #-52]	; 0xffffffcc
   2c13c:	sub	r2, fp, #72	; 0x48
   2c140:	sub	r0, fp, #60	; 0x3c
   2c144:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c148:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c14c:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2c150:	str	r0, [fp, #-16]
   2c154:	ldr	r3, [fp, #-16]
   2c158:	cmp	r3, #0
   2c15c:	moveq	r3, #1
   2c160:	movne	r3, #0
   2c164:	uxtb	r3, r3
   2c168:	cmp	r3, #0
   2c16c:	beq	2c1a0 <__assert_fail@plt+0x1aeb0>
   2c170:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c174:	cmp	r3, #0
   2c178:	movne	r3, #1
   2c17c:	moveq	r3, #0
   2c180:	uxtb	r3, r3
   2c184:	cmp	r3, #0
   2c188:	beq	2c1a0 <__assert_fail@plt+0x1aeb0>
   2c18c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c190:	mov	r0, r3
   2c194:	bl	31b28 <__assert_fail@plt+0x20838>
   2c198:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c19c:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2c1a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c1a4:	ldr	r2, [r3, #100]	; 0x64
   2c1a8:	ldr	r3, [fp, #-8]
   2c1ac:	lsl	r3, r3, #2
   2c1b0:	add	r3, r2, r3
   2c1b4:	ldr	r2, [fp, #-16]
   2c1b8:	str	r2, [r3]
   2c1bc:	ldr	r3, [fp, #-16]
   2c1c0:	cmp	r3, #0
   2c1c4:	bne	2c1d4 <__assert_fail@plt+0x1aee4>
   2c1c8:	ldr	r3, [fp, #-12]
   2c1cc:	add	r3, r3, #1
   2c1d0:	b	2c1d8 <__assert_fail@plt+0x1aee8>
   2c1d4:	mov	r3, #0
   2c1d8:	str	r3, [fp, #-12]
   2c1dc:	ldr	r2, [fp, #-8]
   2c1e0:	ldr	r3, [fp, #8]
   2c1e4:	cmp	r2, r3
   2c1e8:	bge	2c200 <__assert_fail@plt+0x1af10>
   2c1ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c1f0:	ldr	r3, [r3, #120]	; 0x78
   2c1f4:	ldr	r2, [fp, #-12]
   2c1f8:	cmp	r2, r3
   2c1fc:	ble	2bf74 <__assert_fail@plt+0x1ac84>
   2c200:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c204:	mov	r0, r3
   2c208:	bl	31b28 <__assert_fail@plt+0x20838>
   2c20c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c210:	ldr	r2, [r3, #100]	; 0x64
   2c214:	ldr	r3, [fp, #8]
   2c218:	lsl	r3, r3, #2
   2c21c:	add	r3, r2, r3
   2c220:	ldr	r3, [r3]
   2c224:	cmp	r3, #0
   2c228:	beq	2c24c <__assert_fail@plt+0x1af5c>
   2c22c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c230:	ldr	r2, [r3, #100]	; 0x64
   2c234:	ldr	r3, [fp, #8]
   2c238:	lsl	r3, r3, #2
   2c23c:	add	r3, r2, r3
   2c240:	ldr	r3, [r3]
   2c244:	add	r3, r3, #4
   2c248:	b	2c250 <__assert_fail@plt+0x1af60>
   2c24c:	mov	r3, #0
   2c250:	str	r3, [fp, #-56]	; 0xffffffc8
   2c254:	ldr	r3, [fp, #-84]	; 0xffffffac
   2c258:	ldr	r2, [fp, #-8]
   2c25c:	str	r2, [r3]
   2c260:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c264:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2c268:	str	r2, [r3, #100]	; 0x64
   2c26c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c270:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2c274:	str	r2, [r3, #40]	; 0x28
   2c278:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c27c:	cmp	r3, #0
   2c280:	beq	2c2a4 <__assert_fail@plt+0x1afb4>
   2c284:	ldr	r1, [fp, #4]
   2c288:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c28c:	bl	1a314 <__assert_fail@plt+0x9024>
   2c290:	mov	r3, r0
   2c294:	cmp	r3, #0
   2c298:	beq	2c2a4 <__assert_fail@plt+0x1afb4>
   2c29c:	mov	r3, #0
   2c2a0:	b	2c2a8 <__assert_fail@plt+0x1afb8>
   2c2a4:	mov	r3, #1
   2c2a8:	mov	r0, r3
   2c2ac:	sub	sp, fp, #4
   2c2b0:	ldr	fp, [sp]
   2c2b4:	add	sp, sp, #4
   2c2b8:	pop	{pc}		; (ldr pc, [sp], #4)
   2c2bc:	str	r4, [sp, #-12]!
   2c2c0:	str	fp, [sp, #4]
   2c2c4:	str	lr, [sp, #8]
   2c2c8:	add	fp, sp, #8
   2c2cc:	sub	sp, sp, #68	; 0x44
   2c2d0:	str	r0, [fp, #-64]	; 0xffffffc0
   2c2d4:	str	r1, [fp, #-68]	; 0xffffffbc
   2c2d8:	str	r2, [fp, #-72]	; 0xffffffb8
   2c2dc:	str	r3, [fp, #-76]	; 0xffffffb4
   2c2e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c2e4:	ldr	r3, [r3, #84]	; 0x54
   2c2e8:	str	r3, [fp, #-24]	; 0xffffffe8
   2c2ec:	mov	r3, #0
   2c2f0:	str	r3, [fp, #-48]	; 0xffffffd0
   2c2f4:	sub	r3, fp, #60	; 0x3c
   2c2f8:	mov	r2, #12
   2c2fc:	mov	r1, #0
   2c300:	mov	r0, r3
   2c304:	bl	11218 <memset@plt>
   2c308:	mov	r3, #0
   2c30c:	str	r3, [fp, #-16]
   2c310:	b	2c5bc <__assert_fail@plt+0x1b2cc>
   2c314:	mov	r3, #0
   2c318:	str	r3, [fp, #-20]	; 0xffffffec
   2c31c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c320:	ldr	r2, [r3, #8]
   2c324:	ldr	r3, [fp, #-16]
   2c328:	lsl	r3, r3, #2
   2c32c:	add	r3, r2, r3
   2c330:	ldr	r3, [r3]
   2c334:	str	r3, [fp, #-28]	; 0xffffffe4
   2c338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c33c:	ldr	r2, [r3]
   2c340:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c344:	lsl	r3, r3, #3
   2c348:	add	r3, r2, r3
   2c34c:	ldrb	r3, [r3, #4]
   2c350:	and	r3, r3, #8
   2c354:	cmp	r3, #0
   2c358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c35c:	ldr	r2, [r3]
   2c360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c364:	lsl	r3, r3, #3
   2c368:	add	r3, r2, r3
   2c36c:	ldrb	r3, [r3, #6]
   2c370:	and	r3, r3, #16
   2c374:	uxtb	r3, r3
   2c378:	cmp	r3, #0
   2c37c:	beq	2c520 <__assert_fail@plt+0x1b230>
   2c380:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2c384:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c390:	bl	2e308 <__assert_fail@plt+0x1d018>
   2c394:	str	r0, [fp, #-20]	; 0xffffffec
   2c398:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c39c:	cmp	r3, #1
   2c3a0:	ble	2c520 <__assert_fail@plt+0x1b230>
   2c3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3a8:	ldr	r2, [r3, #12]
   2c3ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c3b0:	lsl	r3, r3, #2
   2c3b4:	add	r3, r2, r3
   2c3b8:	ldr	r3, [r3]
   2c3bc:	str	r3, [fp, #-32]	; 0xffffffe0
   2c3c0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2c3c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c3c8:	add	r3, r2, r3
   2c3cc:	str	r3, [fp, #-36]	; 0xffffffdc
   2c3d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c3d4:	ldr	r2, [r3, #100]	; 0x64
   2c3d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c3dc:	lsl	r3, r3, #2
   2c3e0:	add	r3, r2, r3
   2c3e4:	ldr	r3, [r3]
   2c3e8:	str	r3, [fp, #-40]	; 0xffffffd8
   2c3ec:	mov	r3, #0
   2c3f0:	str	r3, [fp, #-56]	; 0xffffffc8
   2c3f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c3f8:	cmp	r3, #0
   2c3fc:	beq	2c450 <__assert_fail@plt+0x1b160>
   2c400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c404:	add	r2, r3, #4
   2c408:	sub	r3, fp, #60	; 0x3c
   2c40c:	mov	r1, r2
   2c410:	mov	r0, r3
   2c414:	bl	19a8c <__assert_fail@plt+0x879c>
   2c418:	mov	r3, r0
   2c41c:	str	r3, [fp, #-48]	; 0xffffffd0
   2c420:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c424:	cmp	r3, #0
   2c428:	movne	r3, #1
   2c42c:	moveq	r3, #0
   2c430:	uxtb	r3, r3
   2c434:	cmp	r3, #0
   2c438:	beq	2c450 <__assert_fail@plt+0x1b160>
   2c43c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c440:	mov	r0, r3
   2c444:	bl	31b28 <__assert_fail@plt+0x20838>
   2c448:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c44c:	b	2c5e0 <__assert_fail@plt+0x1b2f0>
   2c450:	sub	r3, fp, #60	; 0x3c
   2c454:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c458:	mov	r0, r3
   2c45c:	bl	19eec <__assert_fail@plt+0x8bfc>
   2c460:	mov	r3, r0
   2c464:	strb	r3, [fp, #-41]	; 0xffffffd7
   2c468:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2c46c:	eor	r3, r3, #1
   2c470:	uxtb	r3, r3
   2c474:	cmp	r3, #0
   2c478:	beq	2c490 <__assert_fail@plt+0x1b1a0>
   2c47c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c480:	mov	r0, r3
   2c484:	bl	31b28 <__assert_fail@plt+0x20838>
   2c488:	mov	r3, #12
   2c48c:	b	2c5e0 <__assert_fail@plt+0x1b2f0>
   2c490:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c494:	ldr	r2, [r3, #100]	; 0x64
   2c498:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c49c:	lsl	r3, r3, #2
   2c4a0:	add	r4, r2, r3
   2c4a4:	sub	r2, fp, #60	; 0x3c
   2c4a8:	sub	r3, fp, #48	; 0x30
   2c4ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c4b0:	mov	r0, r3
   2c4b4:	bl	1a92c <__assert_fail@plt+0x963c>
   2c4b8:	mov	r3, r0
   2c4bc:	str	r3, [r4]
   2c4c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c4c4:	ldr	r2, [r3, #100]	; 0x64
   2c4c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c4cc:	lsl	r3, r3, #2
   2c4d0:	add	r3, r2, r3
   2c4d4:	ldr	r3, [r3]
   2c4d8:	cmp	r3, #0
   2c4dc:	moveq	r3, #1
   2c4e0:	movne	r3, #0
   2c4e4:	uxtb	r3, r3
   2c4e8:	cmp	r3, #0
   2c4ec:	beq	2c520 <__assert_fail@plt+0x1b230>
   2c4f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c4f4:	cmp	r3, #0
   2c4f8:	movne	r3, #1
   2c4fc:	moveq	r3, #0
   2c500:	uxtb	r3, r3
   2c504:	cmp	r3, #0
   2c508:	beq	2c520 <__assert_fail@plt+0x1b230>
   2c50c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c510:	mov	r0, r3
   2c514:	bl	31b28 <__assert_fail@plt+0x20838>
   2c518:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c51c:	b	2c5e0 <__assert_fail@plt+0x1b2f0>
   2c520:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c524:	cmp	r3, #0
   2c528:	bne	2c55c <__assert_fail@plt+0x1b26c>
   2c52c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c530:	ldr	r2, [r3]
   2c534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c538:	lsl	r3, r3, #3
   2c53c:	add	r3, r2, r3
   2c540:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2c544:	mov	r1, r3
   2c548:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2c54c:	bl	2e878 <__assert_fail@plt+0x1d588>
   2c550:	mov	r3, r0
   2c554:	cmp	r3, #0
   2c558:	beq	2c5b0 <__assert_fail@plt+0x1b2c0>
   2c55c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c560:	ldr	r2, [r3, #12]
   2c564:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c568:	lsl	r3, r3, #2
   2c56c:	add	r3, r2, r3
   2c570:	ldr	r3, [r3]
   2c574:	mov	r1, r3
   2c578:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2c57c:	bl	19eec <__assert_fail@plt+0x8bfc>
   2c580:	mov	r3, r0
   2c584:	strb	r3, [fp, #-41]	; 0xffffffd7
   2c588:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2c58c:	eor	r3, r3, #1
   2c590:	uxtb	r3, r3
   2c594:	cmp	r3, #0
   2c598:	beq	2c5b0 <__assert_fail@plt+0x1b2c0>
   2c59c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c5a0:	mov	r0, r3
   2c5a4:	bl	31b28 <__assert_fail@plt+0x20838>
   2c5a8:	mov	r3, #12
   2c5ac:	b	2c5e0 <__assert_fail@plt+0x1b2f0>
   2c5b0:	ldr	r3, [fp, #-16]
   2c5b4:	add	r3, r3, #1
   2c5b8:	str	r3, [fp, #-16]
   2c5bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c5c0:	ldr	r3, [r3, #4]
   2c5c4:	ldr	r2, [fp, #-16]
   2c5c8:	cmp	r2, r3
   2c5cc:	blt	2c314 <__assert_fail@plt+0x1b024>
   2c5d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c5d4:	mov	r0, r3
   2c5d8:	bl	31b28 <__assert_fail@plt+0x20838>
   2c5dc:	mov	r3, #0
   2c5e0:	mov	r0, r3
   2c5e4:	sub	sp, fp, #8
   2c5e8:	ldr	r4, [sp]
   2c5ec:	ldr	fp, [sp, #4]
   2c5f0:	add	sp, sp, #8
   2c5f4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c5f8:	str	fp, [sp, #-8]!
   2c5fc:	str	lr, [sp, #4]
   2c600:	add	fp, sp, #4
   2c604:	sub	sp, sp, #56	; 0x38
   2c608:	str	r0, [fp, #-40]	; 0xffffffd8
   2c60c:	str	r1, [fp, #-44]	; 0xffffffd4
   2c610:	str	r2, [fp, #-48]	; 0xffffffd0
   2c614:	str	r3, [fp, #-52]	; 0xffffffcc
   2c618:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c61c:	ldr	r3, [r3, #4]
   2c620:	cmp	r3, #0
   2c624:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c628:	ldr	r2, [r3, #4]
   2c62c:	sub	r3, fp, #36	; 0x24
   2c630:	mov	r1, r2
   2c634:	mov	r0, r3
   2c638:	bl	18f04 <__assert_fail@plt+0x7c14>
   2c63c:	str	r0, [fp, #-12]
   2c640:	ldr	r3, [fp, #-12]
   2c644:	cmp	r3, #0
   2c648:	movne	r3, #1
   2c64c:	moveq	r3, #0
   2c650:	uxtb	r3, r3
   2c654:	cmp	r3, #0
   2c658:	beq	2c664 <__assert_fail@plt+0x1b374>
   2c65c:	ldr	r3, [fp, #-12]
   2c660:	b	2c7b8 <__assert_fail@plt+0x1b4c8>
   2c664:	mov	r3, #0
   2c668:	str	r3, [fp, #-8]
   2c66c:	b	2c774 <__assert_fail@plt+0x1b484>
   2c670:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c674:	ldr	r2, [r3, #8]
   2c678:	ldr	r3, [fp, #-8]
   2c67c:	lsl	r3, r3, #2
   2c680:	add	r3, r2, r3
   2c684:	ldr	r3, [r3]
   2c688:	str	r3, [fp, #-16]
   2c68c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c690:	ldr	r1, [r3, #24]
   2c694:	ldr	r2, [fp, #-16]
   2c698:	mov	r3, r2
   2c69c:	lsl	r3, r3, #1
   2c6a0:	add	r3, r3, r2
   2c6a4:	lsl	r3, r3, #2
   2c6a8:	add	r3, r1, r3
   2c6ac:	str	r3, [fp, #-20]	; 0xffffffec
   2c6b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c6b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2c6b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c6bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c6c0:	bl	2ba48 <__assert_fail@plt+0x1a758>
   2c6c4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c6c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c6cc:	cmn	r3, #1
   2c6d0:	bne	2c718 <__assert_fail@plt+0x1b428>
   2c6d4:	sub	r3, fp, #36	; 0x24
   2c6d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c6dc:	mov	r0, r3
   2c6e0:	bl	19a8c <__assert_fail@plt+0x879c>
   2c6e4:	str	r0, [fp, #-12]
   2c6e8:	ldr	r3, [fp, #-12]
   2c6ec:	cmp	r3, #0
   2c6f0:	movne	r3, #1
   2c6f4:	moveq	r3, #0
   2c6f8:	uxtb	r3, r3
   2c6fc:	cmp	r3, #0
   2c700:	beq	2c768 <__assert_fail@plt+0x1b478>
   2c704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c708:	mov	r0, r3
   2c70c:	bl	31b28 <__assert_fail@plt+0x20838>
   2c710:	ldr	r3, [fp, #-12]
   2c714:	b	2c7b8 <__assert_fail@plt+0x1b4c8>
   2c718:	sub	r1, fp, #36	; 0x24
   2c71c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c720:	str	r3, [sp]
   2c724:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c728:	ldr	r2, [fp, #-16]
   2c72c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c730:	bl	2c7cc <__assert_fail@plt+0x1b4dc>
   2c734:	str	r0, [fp, #-12]
   2c738:	ldr	r3, [fp, #-12]
   2c73c:	cmp	r3, #0
   2c740:	movne	r3, #1
   2c744:	moveq	r3, #0
   2c748:	uxtb	r3, r3
   2c74c:	cmp	r3, #0
   2c750:	beq	2c768 <__assert_fail@plt+0x1b478>
   2c754:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c758:	mov	r0, r3
   2c75c:	bl	31b28 <__assert_fail@plt+0x20838>
   2c760:	ldr	r3, [fp, #-12]
   2c764:	b	2c7b8 <__assert_fail@plt+0x1b4c8>
   2c768:	ldr	r3, [fp, #-8]
   2c76c:	add	r3, r3, #1
   2c770:	str	r3, [fp, #-8]
   2c774:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c778:	ldr	r3, [r3, #4]
   2c77c:	ldr	r2, [fp, #-8]
   2c780:	cmp	r2, r3
   2c784:	blt	2c670 <__assert_fail@plt+0x1b380>
   2c788:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c78c:	ldr	r3, [r3, #8]
   2c790:	mov	r0, r3
   2c794:	bl	31b28 <__assert_fail@plt+0x20838>
   2c798:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c79c:	mov	r0, r3
   2c7a0:	sub	r1, fp, #36	; 0x24
   2c7a4:	ldrd	r2, [r1]
   2c7a8:	strd	r2, [r0]
   2c7ac:	ldr	r3, [r1, #8]
   2c7b0:	str	r3, [r0, #8]
   2c7b4:	mov	r3, #0
   2c7b8:	mov	r0, r3
   2c7bc:	sub	sp, fp, #4
   2c7c0:	ldr	fp, [sp]
   2c7c4:	add	sp, sp, #4
   2c7c8:	pop	{pc}		; (ldr pc, [sp], #4)
   2c7cc:	str	fp, [sp, #-8]!
   2c7d0:	str	lr, [sp, #4]
   2c7d4:	add	fp, sp, #4
   2c7d8:	sub	sp, sp, #40	; 0x28
   2c7dc:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7e0:	str	r1, [fp, #-28]	; 0xffffffe4
   2c7e4:	str	r2, [fp, #-32]	; 0xffffffe0
   2c7e8:	str	r3, [fp, #-36]	; 0xffffffdc
   2c7ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c7f0:	str	r3, [fp, #-8]
   2c7f4:	b	2c9a0 <__assert_fail@plt+0x1b6b0>
   2c7f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c7fc:	ldr	r2, [r3]
   2c800:	ldr	r3, [fp, #-8]
   2c804:	lsl	r3, r3, #3
   2c808:	add	r3, r2, r3
   2c80c:	ldrb	r3, [r3, #4]
   2c810:	mov	r2, r3
   2c814:	ldr	r3, [fp, #4]
   2c818:	cmp	r3, r2
   2c81c:	bne	2c880 <__assert_fail@plt+0x1b590>
   2c820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c824:	ldr	r2, [r3]
   2c828:	ldr	r3, [fp, #-8]
   2c82c:	lsl	r3, r3, #3
   2c830:	add	r3, r2, r3
   2c834:	ldr	r3, [r3]
   2c838:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c83c:	cmp	r2, r3
   2c840:	bne	2c880 <__assert_fail@plt+0x1b590>
   2c844:	ldr	r3, [fp, #4]
   2c848:	cmp	r3, #9
   2c84c:	bne	2c9bc <__assert_fail@plt+0x1b6cc>
   2c850:	ldr	r1, [fp, #-8]
   2c854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c858:	bl	19eec <__assert_fail@plt+0x8bfc>
   2c85c:	mov	r3, r0
   2c860:	strb	r3, [fp, #-9]
   2c864:	ldrb	r3, [fp, #-9]
   2c868:	eor	r3, r3, #1
   2c86c:	uxtb	r3, r3
   2c870:	cmp	r3, #0
   2c874:	beq	2c9bc <__assert_fail@plt+0x1b6cc>
   2c878:	mov	r3, #12
   2c87c:	b	2c9cc <__assert_fail@plt+0x1b6dc>
   2c880:	ldr	r1, [fp, #-8]
   2c884:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c888:	bl	19eec <__assert_fail@plt+0x8bfc>
   2c88c:	mov	r3, r0
   2c890:	strb	r3, [fp, #-9]
   2c894:	ldrb	r3, [fp, #-9]
   2c898:	eor	r3, r3, #1
   2c89c:	uxtb	r3, r3
   2c8a0:	cmp	r3, #0
   2c8a4:	beq	2c8b0 <__assert_fail@plt+0x1b5c0>
   2c8a8:	mov	r3, #12
   2c8ac:	b	2c9cc <__assert_fail@plt+0x1b6dc>
   2c8b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8b4:	ldr	r1, [r3, #20]
   2c8b8:	ldr	r2, [fp, #-8]
   2c8bc:	mov	r3, r2
   2c8c0:	lsl	r3, r3, #1
   2c8c4:	add	r3, r3, r2
   2c8c8:	lsl	r3, r3, #2
   2c8cc:	add	r3, r1, r3
   2c8d0:	ldr	r3, [r3, #4]
   2c8d4:	cmp	r3, #0
   2c8d8:	beq	2c9c4 <__assert_fail@plt+0x1b6d4>
   2c8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8e0:	ldr	r1, [r3, #20]
   2c8e4:	ldr	r2, [fp, #-8]
   2c8e8:	mov	r3, r2
   2c8ec:	lsl	r3, r3, #1
   2c8f0:	add	r3, r3, r2
   2c8f4:	lsl	r3, r3, #2
   2c8f8:	add	r3, r1, r3
   2c8fc:	ldr	r3, [r3, #4]
   2c900:	cmp	r3, #2
   2c904:	bne	2c974 <__assert_fail@plt+0x1b684>
   2c908:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c90c:	ldr	r1, [r3, #20]
   2c910:	ldr	r2, [fp, #-8]
   2c914:	mov	r3, r2
   2c918:	lsl	r3, r3, #1
   2c91c:	add	r3, r3, r2
   2c920:	lsl	r3, r3, #2
   2c924:	add	r3, r1, r3
   2c928:	ldr	r3, [r3, #8]
   2c92c:	add	r3, r3, #4
   2c930:	ldr	r2, [r3]
   2c934:	ldr	r3, [fp, #4]
   2c938:	str	r3, [sp]
   2c93c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c940:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c948:	bl	2c7cc <__assert_fail@plt+0x1b4dc>
   2c94c:	str	r0, [fp, #-16]
   2c950:	ldr	r3, [fp, #-16]
   2c954:	cmp	r3, #0
   2c958:	movne	r3, #1
   2c95c:	moveq	r3, #0
   2c960:	uxtb	r3, r3
   2c964:	cmp	r3, #0
   2c968:	beq	2c974 <__assert_fail@plt+0x1b684>
   2c96c:	ldr	r3, [fp, #-16]
   2c970:	b	2c9cc <__assert_fail@plt+0x1b6dc>
   2c974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c978:	ldr	r1, [r3, #20]
   2c97c:	ldr	r2, [fp, #-8]
   2c980:	mov	r3, r2
   2c984:	lsl	r3, r3, #1
   2c988:	add	r3, r3, r2
   2c98c:	lsl	r3, r3, #2
   2c990:	add	r3, r1, r3
   2c994:	ldr	r3, [r3, #8]
   2c998:	ldr	r3, [r3]
   2c99c:	str	r3, [fp, #-8]
   2c9a0:	ldr	r1, [fp, #-8]
   2c9a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c9a8:	bl	1a314 <__assert_fail@plt+0x9024>
   2c9ac:	mov	r3, r0
   2c9b0:	cmp	r3, #0
   2c9b4:	beq	2c7f8 <__assert_fail@plt+0x1b508>
   2c9b8:	b	2c9c8 <__assert_fail@plt+0x1b6d8>
   2c9bc:	nop	{0}
   2c9c0:	b	2c9c8 <__assert_fail@plt+0x1b6d8>
   2c9c4:	nop	{0}
   2c9c8:	mov	r3, #0
   2c9cc:	mov	r0, r3
   2c9d0:	sub	sp, fp, #4
   2c9d4:	ldr	fp, [sp]
   2c9d8:	add	sp, sp, #4
   2c9dc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c9e0:	str	r4, [sp, #-12]!
   2c9e4:	str	fp, [sp, #4]
   2c9e8:	str	lr, [sp, #8]
   2c9ec:	add	fp, sp, #8
   2c9f0:	sub	sp, sp, #84	; 0x54
   2c9f4:	str	r0, [fp, #-80]	; 0xffffffb0
   2c9f8:	str	r1, [fp, #-84]	; 0xffffffac
   2c9fc:	str	r2, [fp, #-88]	; 0xffffffa8
   2ca00:	str	r3, [fp, #-92]	; 0xffffffa4
   2ca04:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ca08:	ldr	r3, [r3, #84]	; 0x54
   2ca0c:	str	r3, [fp, #-20]	; 0xffffffec
   2ca10:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2ca14:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2ca18:	bl	2f274 <__assert_fail@plt+0x1df84>
   2ca1c:	str	r0, [fp, #-24]	; 0xffffffe8
   2ca20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca24:	cmn	r3, #1
   2ca28:	bne	2ca34 <__assert_fail@plt+0x1b744>
   2ca2c:	mov	r3, #0
   2ca30:	b	2ce04 <__assert_fail@plt+0x1bb14>
   2ca34:	nop	{0}
   2ca38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ca3c:	ldr	r1, [r3, #116]	; 0x74
   2ca40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ca44:	mov	r3, r2
   2ca48:	lsl	r3, r3, #1
   2ca4c:	add	r3, r3, r2
   2ca50:	lsl	r3, r3, #3
   2ca54:	add	r3, r1, r3
   2ca58:	str	r3, [fp, #-16]
   2ca5c:	ldr	r3, [fp, #-16]
   2ca60:	ldr	r3, [r3]
   2ca64:	mov	r1, r3
   2ca68:	ldr	r0, [fp, #-84]	; 0xffffffac
   2ca6c:	bl	1a314 <__assert_fail@plt+0x9024>
   2ca70:	mov	r3, r0
   2ca74:	cmp	r3, #0
   2ca78:	beq	2cdd4 <__assert_fail@plt+0x1bae4>
   2ca7c:	ldr	r3, [fp, #-16]
   2ca80:	ldr	r2, [r3, #12]
   2ca84:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ca88:	add	r2, r2, r3
   2ca8c:	ldr	r3, [fp, #-16]
   2ca90:	ldr	r3, [r3, #8]
   2ca94:	sub	r3, r2, r3
   2ca98:	str	r3, [fp, #-28]	; 0xffffffe4
   2ca9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2caa0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2caa4:	cmp	r2, r3
   2caa8:	bne	2cbe8 <__assert_fail@plt+0x1b8f8>
   2caac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cab0:	ldr	r2, [r3, #20]
   2cab4:	ldr	r3, [fp, #-16]
   2cab8:	ldr	r3, [r3]
   2cabc:	mov	r1, r3
   2cac0:	mov	r3, r1
   2cac4:	lsl	r3, r3, #1
   2cac8:	add	r3, r3, r1
   2cacc:	lsl	r3, r3, #2
   2cad0:	add	r3, r2, r3
   2cad4:	ldr	r3, [r3, #8]
   2cad8:	ldr	r3, [r3]
   2cadc:	str	r3, [fp, #-32]	; 0xffffffe0
   2cae0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cae4:	ldr	r0, [fp, #-84]	; 0xffffffac
   2cae8:	bl	1a314 <__assert_fail@plt+0x9024>
   2caec:	mov	r3, r0
   2caf0:	cmp	r3, #0
   2caf4:	bne	2cddc <__assert_fail@plt+0x1baec>
   2caf8:	sub	r3, fp, #60	; 0x3c
   2cafc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cb00:	mov	r0, r3
   2cb04:	bl	18f94 <__assert_fail@plt+0x7ca4>
   2cb08:	mov	r3, r0
   2cb0c:	str	r3, [fp, #-48]	; 0xffffffd0
   2cb10:	sub	r1, fp, #60	; 0x3c
   2cb14:	ldr	r3, [fp, #4]
   2cb18:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2cb1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cb20:	bl	2c5f8 <__assert_fail@plt+0x1b308>
   2cb24:	str	r0, [fp, #-36]	; 0xffffffdc
   2cb28:	sub	r3, fp, #60	; 0x3c
   2cb2c:	mov	r1, r3
   2cb30:	ldr	r0, [fp, #-84]	; 0xffffffac
   2cb34:	bl	19a8c <__assert_fail@plt+0x879c>
   2cb38:	str	r0, [fp, #-40]	; 0xffffffd8
   2cb3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cb40:	mov	r0, r3
   2cb44:	bl	31b28 <__assert_fail@plt+0x20838>
   2cb48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cb4c:	cmp	r3, #0
   2cb50:	movne	r3, #1
   2cb54:	moveq	r3, #0
   2cb58:	uxtb	r3, r3
   2cb5c:	cmp	r3, #0
   2cb60:	bne	2cb80 <__assert_fail@plt+0x1b890>
   2cb64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cb68:	cmp	r3, #0
   2cb6c:	movne	r3, #1
   2cb70:	moveq	r3, #0
   2cb74:	uxtb	r3, r3
   2cb78:	cmp	r3, #0
   2cb7c:	beq	2cb88 <__assert_fail@plt+0x1b898>
   2cb80:	mov	r3, #1
   2cb84:	b	2cb8c <__assert_fail@plt+0x1b89c>
   2cb88:	mov	r3, #0
   2cb8c:	cmp	r3, #0
   2cb90:	bne	2cbb0 <__assert_fail@plt+0x1b8c0>
   2cb94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cb98:	cmp	r3, #0
   2cb9c:	movne	r3, #1
   2cba0:	moveq	r3, #0
   2cba4:	uxtb	r3, r3
   2cba8:	cmp	r3, #0
   2cbac:	beq	2ca38 <__assert_fail@plt+0x1b748>
   2cbb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cbb4:	cmp	r3, #0
   2cbb8:	bne	2cbd8 <__assert_fail@plt+0x1b8e8>
   2cbbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cbc0:	cmp	r3, #0
   2cbc4:	beq	2cbd0 <__assert_fail@plt+0x1b8e0>
   2cbc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cbcc:	b	2cbdc <__assert_fail@plt+0x1b8ec>
   2cbd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cbd4:	b	2cbdc <__assert_fail@plt+0x1b8ec>
   2cbd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cbdc:	str	r3, [fp, #-48]	; 0xffffffd0
   2cbe0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cbe4:	b	2ce04 <__assert_fail@plt+0x1bb14>
   2cbe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbec:	ldr	r2, [r3, #12]
   2cbf0:	ldr	r3, [fp, #-16]
   2cbf4:	ldr	r3, [r3]
   2cbf8:	lsl	r3, r3, #2
   2cbfc:	add	r3, r2, r3
   2cc00:	ldr	r3, [r3]
   2cc04:	str	r3, [fp, #-32]	; 0xffffffe0
   2cc08:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cc0c:	ldr	r2, [r3, #100]	; 0x64
   2cc10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cc14:	lsl	r3, r3, #2
   2cc18:	add	r3, r2, r3
   2cc1c:	ldr	r3, [r3]
   2cc20:	cmp	r3, #0
   2cc24:	beq	2cd08 <__assert_fail@plt+0x1ba18>
   2cc28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cc2c:	ldr	r2, [r3, #100]	; 0x64
   2cc30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cc34:	lsl	r3, r3, #2
   2cc38:	add	r3, r2, r3
   2cc3c:	ldr	r3, [r3]
   2cc40:	add	r3, r3, #4
   2cc44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cc48:	mov	r0, r3
   2cc4c:	bl	1a314 <__assert_fail@plt+0x9024>
   2cc50:	mov	r3, r0
   2cc54:	cmp	r3, #0
   2cc58:	bne	2cde4 <__assert_fail@plt+0x1baf4>
   2cc5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cc60:	ldr	r2, [r3, #100]	; 0x64
   2cc64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cc68:	lsl	r3, r3, #2
   2cc6c:	add	r3, r2, r3
   2cc70:	ldr	r3, [r3]
   2cc74:	add	r2, r3, #4
   2cc78:	sub	r3, fp, #72	; 0x48
   2cc7c:	mov	r1, r2
   2cc80:	mov	r0, r3
   2cc84:	bl	19160 <__assert_fail@plt+0x7e70>
   2cc88:	mov	r3, r0
   2cc8c:	str	r3, [fp, #-48]	; 0xffffffd0
   2cc90:	sub	r3, fp, #72	; 0x48
   2cc94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cc98:	mov	r0, r3
   2cc9c:	bl	19eec <__assert_fail@plt+0x8bfc>
   2cca0:	mov	r3, r0
   2cca4:	strb	r3, [fp, #-41]	; 0xffffffd7
   2cca8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ccac:	cmp	r3, #0
   2ccb0:	movne	r3, #1
   2ccb4:	moveq	r3, #0
   2ccb8:	uxtb	r3, r3
   2ccbc:	cmp	r3, #0
   2ccc0:	bne	2ccd8 <__assert_fail@plt+0x1b9e8>
   2ccc4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2ccc8:	eor	r3, r3, #1
   2cccc:	uxtb	r3, r3
   2ccd0:	cmp	r3, #0
   2ccd4:	beq	2cd44 <__assert_fail@plt+0x1ba54>
   2ccd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ccdc:	mov	r0, r3
   2cce0:	bl	31b28 <__assert_fail@plt+0x20838>
   2cce4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cce8:	cmp	r3, #0
   2ccec:	beq	2ccf8 <__assert_fail@plt+0x1ba08>
   2ccf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ccf4:	b	2ccfc <__assert_fail@plt+0x1ba0c>
   2ccf8:	mov	r3, #12
   2ccfc:	str	r3, [fp, #-48]	; 0xffffffd0
   2cd00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cd04:	b	2ce04 <__assert_fail@plt+0x1bb14>
   2cd08:	sub	r3, fp, #72	; 0x48
   2cd0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cd10:	mov	r0, r3
   2cd14:	bl	18f94 <__assert_fail@plt+0x7ca4>
   2cd18:	mov	r3, r0
   2cd1c:	str	r3, [fp, #-48]	; 0xffffffd0
   2cd20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cd24:	cmp	r3, #0
   2cd28:	movne	r3, #1
   2cd2c:	moveq	r3, #0
   2cd30:	uxtb	r3, r3
   2cd34:	cmp	r3, #0
   2cd38:	beq	2cd44 <__assert_fail@plt+0x1ba54>
   2cd3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cd40:	b	2ce04 <__assert_fail@plt+0x1bb14>
   2cd44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cd48:	ldr	r2, [r3, #100]	; 0x64
   2cd4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cd50:	lsl	r3, r3, #2
   2cd54:	add	r4, r2, r3
   2cd58:	sub	r2, fp, #72	; 0x48
   2cd5c:	sub	r3, fp, #48	; 0x30
   2cd60:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cd64:	mov	r0, r3
   2cd68:	bl	1a92c <__assert_fail@plt+0x963c>
   2cd6c:	mov	r3, r0
   2cd70:	str	r3, [r4]
   2cd74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2cd78:	mov	r0, r3
   2cd7c:	bl	31b28 <__assert_fail@plt+0x20838>
   2cd80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cd84:	ldr	r2, [r3, #100]	; 0x64
   2cd88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cd8c:	lsl	r3, r3, #2
   2cd90:	add	r3, r2, r3
   2cd94:	ldr	r3, [r3]
   2cd98:	cmp	r3, #0
   2cd9c:	moveq	r3, #1
   2cda0:	movne	r3, #0
   2cda4:	uxtb	r3, r3
   2cda8:	cmp	r3, #0
   2cdac:	beq	2cde8 <__assert_fail@plt+0x1baf8>
   2cdb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cdb4:	cmp	r3, #0
   2cdb8:	movne	r3, #1
   2cdbc:	moveq	r3, #0
   2cdc0:	uxtb	r3, r3
   2cdc4:	cmp	r3, #0
   2cdc8:	beq	2cde8 <__assert_fail@plt+0x1baf8>
   2cdcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cdd0:	b	2ce04 <__assert_fail@plt+0x1bb14>
   2cdd4:	nop	{0}
   2cdd8:	b	2cde8 <__assert_fail@plt+0x1baf8>
   2cddc:	nop	{0}
   2cde0:	b	2cde8 <__assert_fail@plt+0x1baf8>
   2cde4:	nop	{0}
   2cde8:	ldr	r3, [fp, #-16]
   2cdec:	add	r2, r3, #24
   2cdf0:	str	r2, [fp, #-16]
   2cdf4:	ldrb	r3, [r3, #20]
   2cdf8:	cmp	r3, #0
   2cdfc:	bne	2ca5c <__assert_fail@plt+0x1b76c>
   2ce00:	mov	r3, #0
   2ce04:	mov	r0, r3
   2ce08:	sub	sp, fp, #8
   2ce0c:	ldr	r4, [sp]
   2ce10:	ldr	fp, [sp, #4]
   2ce14:	add	sp, sp, #8
   2ce18:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce1c:	str	fp, [sp, #-8]!
   2ce20:	str	lr, [sp, #4]
   2ce24:	add	fp, sp, #4
   2ce28:	sub	sp, sp, #14400	; 0x3840
   2ce2c:	sub	sp, sp, #32
   2ce30:	sub	r3, fp, #12288	; 0x3000
   2ce34:	sub	r3, r3, #4
   2ce38:	str	r0, [r3, #-2140]	; 0xfffff7a4
   2ce3c:	sub	r3, fp, #12288	; 0x3000
   2ce40:	sub	r3, r3, #4
   2ce44:	str	r1, [r3, #-2144]	; 0xfffff7a0
   2ce48:	mov	r3, #0
   2ce4c:	strb	r3, [fp, #-17]	; 0xffffffef
   2ce50:	sub	r3, fp, #12288	; 0x3000
   2ce54:	sub	r3, r3, #4
   2ce58:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ce5c:	mov	r2, #0
   2ce60:	str	r2, [r3, #44]	; 0x2c
   2ce64:	sub	r3, fp, #12288	; 0x3000
   2ce68:	sub	r3, r3, #4
   2ce6c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ce70:	ldr	r2, [r3, #44]	; 0x2c
   2ce74:	sub	r3, fp, #12288	; 0x3000
   2ce78:	sub	r3, r3, #4
   2ce7c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ce80:	str	r2, [r3, #48]	; 0x30
   2ce84:	sub	r3, fp, #14400	; 0x3840
   2ce88:	sub	r3, r3, #4
   2ce8c:	sub	r3, r3, #20
   2ce90:	sub	r2, fp, #6208	; 0x1840
   2ce94:	sub	r2, r2, #4
   2ce98:	sub	r2, r2, #20
   2ce9c:	sub	r1, fp, #12288	; 0x3000
   2cea0:	sub	r1, r1, #4
   2cea4:	sub	r0, fp, #12288	; 0x3000
   2cea8:	sub	r0, r0, #4
   2ceac:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   2ceb0:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   2ceb4:	bl	2d8c8 <__assert_fail@plt+0x1c5d8>
   2ceb8:	str	r0, [fp, #-36]	; 0xffffffdc
   2cebc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cec0:	cmp	r3, #0
   2cec4:	movle	r3, #1
   2cec8:	movgt	r3, #0
   2cecc:	uxtb	r3, r3
   2ced0:	cmp	r3, #0
   2ced4:	beq	2cf48 <__assert_fail@plt+0x1bc58>
   2ced8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cedc:	cmp	r3, #0
   2cee0:	bne	2cf40 <__assert_fail@plt+0x1bc50>
   2cee4:	mov	r1, #256	; 0x100
   2cee8:	mov	r0, #4
   2ceec:	bl	3127c <__assert_fail@plt+0x1ff8c>
   2cef0:	mov	r3, r0
   2cef4:	mov	r2, r3
   2cef8:	sub	r3, fp, #12288	; 0x3000
   2cefc:	sub	r3, r3, #4
   2cf00:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2cf04:	str	r2, [r3, #44]	; 0x2c
   2cf08:	sub	r3, fp, #12288	; 0x3000
   2cf0c:	sub	r3, r3, #4
   2cf10:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2cf14:	ldr	r3, [r3, #44]	; 0x2c
   2cf18:	cmp	r3, #0
   2cf1c:	moveq	r3, #1
   2cf20:	movne	r3, #0
   2cf24:	uxtb	r3, r3
   2cf28:	cmp	r3, #0
   2cf2c:	beq	2cf38 <__assert_fail@plt+0x1bc48>
   2cf30:	mov	r3, #0
   2cf34:	b	2d8b4 <__assert_fail@plt+0x1c5c4>
   2cf38:	mov	r3, #1
   2cf3c:	b	2d8b4 <__assert_fail@plt+0x1c5c4>
   2cf40:	mov	r3, #0
   2cf44:	b	2d8b4 <__assert_fail@plt+0x1c5c4>
   2cf48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cf4c:	add	r2, r3, #1
   2cf50:	sub	r3, fp, #3120	; 0xc30
   2cf54:	sub	r3, r3, #4
   2cf58:	sub	r3, r3, #4
   2cf5c:	mov	r1, r2
   2cf60:	mov	r0, r3
   2cf64:	bl	18f04 <__assert_fail@plt+0x7c14>
   2cf68:	mov	r3, r0
   2cf6c:	str	r3, [fp, #-44]	; 0xffffffd4
   2cf70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cf74:	cmp	r3, #0
   2cf78:	movne	r3, #1
   2cf7c:	moveq	r3, #0
   2cf80:	uxtb	r3, r3
   2cf84:	cmp	r3, #0
   2cf88:	beq	2d028 <__assert_fail@plt+0x1bd38>
   2cf8c:	nop	{0}
   2cf90:	b	2cfb8 <__assert_fail@plt+0x1bcc8>
   2cf94:	nop	{0}
   2cf98:	b	2cfb8 <__assert_fail@plt+0x1bcc8>
   2cf9c:	nop	{0}
   2cfa0:	b	2cfb8 <__assert_fail@plt+0x1bcc8>
   2cfa4:	nop	{0}
   2cfa8:	b	2cfb8 <__assert_fail@plt+0x1bcc8>
   2cfac:	nop	{0}
   2cfb0:	b	2cfb8 <__assert_fail@plt+0x1bcc8>
   2cfb4:	nop	{0}
   2cfb8:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2cfbc:	mov	r0, r3
   2cfc0:	bl	31b28 <__assert_fail@plt+0x20838>
   2cfc4:	mov	r3, #0
   2cfc8:	str	r3, [fp, #-8]
   2cfcc:	b	2d010 <__assert_fail@plt+0x1bd20>
   2cfd0:	ldr	r2, [fp, #-8]
   2cfd4:	mov	r3, r2
   2cfd8:	lsl	r3, r3, #1
   2cfdc:	add	r3, r3, r2
   2cfe0:	lsl	r3, r3, #2
   2cfe4:	mov	r2, r3
   2cfe8:	sub	r3, fp, #6208	; 0x1840
   2cfec:	sub	r3, r3, #4
   2cff0:	sub	r3, r3, #20
   2cff4:	add	r3, r3, r2
   2cff8:	ldr	r3, [r3, #8]
   2cffc:	mov	r0, r3
   2d000:	bl	31b28 <__assert_fail@plt+0x20838>
   2d004:	ldr	r3, [fp, #-8]
   2d008:	add	r3, r3, #1
   2d00c:	str	r3, [fp, #-8]
   2d010:	ldr	r2, [fp, #-8]
   2d014:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d018:	cmp	r2, r3
   2d01c:	blt	2cfd0 <__assert_fail@plt+0x1bce0>
   2d020:	mov	r3, #0
   2d024:	b	2d8b4 <__assert_fail@plt+0x1c5c4>
   2d028:	sub	r3, fp, #3152	; 0xc50
   2d02c:	sub	r3, r3, #4
   2d030:	sub	r3, r3, #4
   2d034:	mov	r0, r3
   2d038:	bl	160dc <__assert_fail@plt+0x4dec>
   2d03c:	mov	r3, #0
   2d040:	str	r3, [fp, #-8]
   2d044:	b	2d410 <__assert_fail@plt+0x1c120>
   2d048:	mov	r3, #0
   2d04c:	str	r3, [fp, #-3124]	; 0xfffff3cc
   2d050:	mov	r3, #0
   2d054:	str	r3, [fp, #-12]
   2d058:	b	2d138 <__assert_fail@plt+0x1be48>
   2d05c:	sub	r3, fp, #12288	; 0x3000
   2d060:	sub	r3, r3, #4
   2d064:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2d068:	ldr	r1, [r3, #12]
   2d06c:	sub	r3, fp, #4096	; 0x1000
   2d070:	sub	r3, r3, #4
   2d074:	mov	r0, r3
   2d078:	ldr	r2, [fp, #-8]
   2d07c:	mov	r3, r2
   2d080:	lsl	r3, r3, #1
   2d084:	add	r3, r3, r2
   2d088:	lsl	r3, r3, #2
   2d08c:	add	r3, r0, r3
   2d090:	sub	r3, r3, #2112	; 0x840
   2d094:	sub	r3, r3, #12
   2d098:	ldr	r2, [r3]
   2d09c:	ldr	r3, [fp, #-12]
   2d0a0:	lsl	r3, r3, #2
   2d0a4:	add	r3, r2, r3
   2d0a8:	ldr	r3, [r3]
   2d0ac:	lsl	r3, r3, #2
   2d0b0:	add	r3, r1, r3
   2d0b4:	ldr	r3, [r3]
   2d0b8:	str	r3, [fp, #-40]	; 0xffffffd8
   2d0bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d0c0:	cmn	r3, #1
   2d0c4:	beq	2d12c <__assert_fail@plt+0x1be3c>
   2d0c8:	sub	r3, fp, #12288	; 0x3000
   2d0cc:	sub	r3, r3, #4
   2d0d0:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2d0d4:	ldr	r1, [r3, #24]
   2d0d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d0dc:	mov	r3, r2
   2d0e0:	lsl	r3, r3, #1
   2d0e4:	add	r3, r3, r2
   2d0e8:	lsl	r3, r3, #2
   2d0ec:	add	r2, r1, r3
   2d0f0:	sub	r3, fp, #3120	; 0xc30
   2d0f4:	sub	r3, r3, #4
   2d0f8:	sub	r3, r3, #4
   2d0fc:	mov	r1, r2
   2d100:	mov	r0, r3
   2d104:	bl	19a8c <__assert_fail@plt+0x879c>
   2d108:	mov	r3, r0
   2d10c:	str	r3, [fp, #-44]	; 0xffffffd4
   2d110:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d114:	cmp	r3, #0
   2d118:	movne	r3, #1
   2d11c:	moveq	r3, #0
   2d120:	uxtb	r3, r3
   2d124:	cmp	r3, #0
   2d128:	bne	2cf94 <__assert_fail@plt+0x1bca4>
   2d12c:	ldr	r3, [fp, #-12]
   2d130:	add	r3, r3, #1
   2d134:	str	r3, [fp, #-12]
   2d138:	sub	r3, fp, #4096	; 0x1000
   2d13c:	sub	r3, r3, #4
   2d140:	mov	r1, r3
   2d144:	ldr	r2, [fp, #-8]
   2d148:	mov	r3, r2
   2d14c:	lsl	r3, r3, #1
   2d150:	add	r3, r3, r2
   2d154:	lsl	r3, r3, #2
   2d158:	add	r3, r1, r3
   2d15c:	sub	r3, r3, #2128	; 0x850
   2d160:	ldr	r3, [r3]
   2d164:	ldr	r2, [fp, #-12]
   2d168:	cmp	r2, r3
   2d16c:	blt	2d05c <__assert_fail@plt+0x1bd6c>
   2d170:	sub	r2, fp, #3120	; 0xc30
   2d174:	sub	r2, r2, #4
   2d178:	sub	r2, r2, #4
   2d17c:	sub	r3, fp, #12288	; 0x3000
   2d180:	sub	r3, r3, #4
   2d184:	mov	r1, r3
   2d188:	sub	r0, fp, #44	; 0x2c
   2d18c:	mov	r3, #0
   2d190:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2d194:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2d198:	mov	r2, r0
   2d19c:	ldr	r3, [fp, #-8]
   2d1a0:	lsl	r3, r3, #2
   2d1a4:	sub	r1, fp, #4
   2d1a8:	add	r3, r1, r3
   2d1ac:	str	r2, [r3, #-1064]	; 0xfffffbd8
   2d1b0:	ldr	r3, [fp, #-8]
   2d1b4:	lsl	r3, r3, #2
   2d1b8:	sub	r2, fp, #4
   2d1bc:	add	r3, r2, r3
   2d1c0:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2d1c4:	cmp	r3, #0
   2d1c8:	moveq	r3, #1
   2d1cc:	movne	r3, #0
   2d1d0:	uxtb	r3, r3
   2d1d4:	cmp	r3, #0
   2d1d8:	beq	2d1f8 <__assert_fail@plt+0x1bf08>
   2d1dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d1e0:	cmp	r3, #0
   2d1e4:	movne	r3, #1
   2d1e8:	moveq	r3, #0
   2d1ec:	uxtb	r3, r3
   2d1f0:	cmp	r3, #0
   2d1f4:	bne	2cf9c <__assert_fail@plt+0x1bcac>
   2d1f8:	ldr	r3, [fp, #-8]
   2d1fc:	lsl	r3, r3, #2
   2d200:	sub	r2, fp, #4
   2d204:	add	r3, r2, r3
   2d208:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2d20c:	ldrb	r3, [r3, #52]	; 0x34
   2d210:	bic	r3, r3, #127	; 0x7f
   2d214:	uxtb	r3, r3
   2d218:	cmp	r3, #0
   2d21c:	beq	2d384 <__assert_fail@plt+0x1c094>
   2d220:	sub	r2, fp, #3120	; 0xc30
   2d224:	sub	r2, r2, #4
   2d228:	sub	r2, r2, #4
   2d22c:	sub	r3, fp, #12288	; 0x3000
   2d230:	sub	r3, r3, #4
   2d234:	mov	r1, r3
   2d238:	sub	r0, fp, #44	; 0x2c
   2d23c:	mov	r3, #1
   2d240:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2d244:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2d248:	mov	r2, r0
   2d24c:	ldr	r3, [fp, #-8]
   2d250:	lsl	r3, r3, #2
   2d254:	sub	r1, fp, #4
   2d258:	add	r3, r1, r3
   2d25c:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2d260:	ldr	r3, [fp, #-8]
   2d264:	lsl	r3, r3, #2
   2d268:	sub	r2, fp, #4
   2d26c:	add	r3, r2, r3
   2d270:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2d274:	cmp	r3, #0
   2d278:	moveq	r3, #1
   2d27c:	movne	r3, #0
   2d280:	uxtb	r3, r3
   2d284:	cmp	r3, #0
   2d288:	beq	2d2a8 <__assert_fail@plt+0x1bfb8>
   2d28c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d290:	cmp	r3, #0
   2d294:	movne	r3, #1
   2d298:	moveq	r3, #0
   2d29c:	uxtb	r3, r3
   2d2a0:	cmp	r3, #0
   2d2a4:	bne	2cfa4 <__assert_fail@plt+0x1bcb4>
   2d2a8:	ldr	r3, [fp, #-8]
   2d2ac:	lsl	r3, r3, #2
   2d2b0:	sub	r2, fp, #4
   2d2b4:	add	r3, r2, r3
   2d2b8:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2d2bc:	ldr	r3, [fp, #-8]
   2d2c0:	lsl	r3, r3, #2
   2d2c4:	sub	r1, fp, #4
   2d2c8:	add	r3, r1, r3
   2d2cc:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2d2d0:	cmp	r2, r3
   2d2d4:	beq	2d2f8 <__assert_fail@plt+0x1c008>
   2d2d8:	sub	r3, fp, #12288	; 0x3000
   2d2dc:	sub	r3, r3, #4
   2d2e0:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2d2e4:	ldr	r3, [r3, #92]	; 0x5c
   2d2e8:	cmp	r3, #1
   2d2ec:	ble	2d2f8 <__assert_fail@plt+0x1c008>
   2d2f0:	mov	r3, #1
   2d2f4:	strb	r3, [fp, #-17]	; 0xffffffef
   2d2f8:	sub	r2, fp, #3120	; 0xc30
   2d2fc:	sub	r2, r2, #4
   2d300:	sub	r2, r2, #4
   2d304:	sub	r3, fp, #12288	; 0x3000
   2d308:	sub	r3, r3, #4
   2d30c:	mov	r1, r3
   2d310:	sub	r0, fp, #44	; 0x2c
   2d314:	mov	r3, #2
   2d318:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2d31c:	bl	1aaa4 <__assert_fail@plt+0x97b4>
   2d320:	mov	r2, r0
   2d324:	ldr	r3, [fp, #-8]
   2d328:	lsl	r3, r3, #2
   2d32c:	sub	r1, fp, #4
   2d330:	add	r3, r1, r3
   2d334:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2d338:	ldr	r3, [fp, #-8]
   2d33c:	lsl	r3, r3, #2
   2d340:	sub	r2, fp, #4
   2d344:	add	r3, r2, r3
   2d348:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2d34c:	cmp	r3, #0
   2d350:	moveq	r3, #1
   2d354:	movne	r3, #0
   2d358:	uxtb	r3, r3
   2d35c:	cmp	r3, #0
   2d360:	beq	2d3d4 <__assert_fail@plt+0x1c0e4>
   2d364:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d368:	cmp	r3, #0
   2d36c:	movne	r3, #1
   2d370:	moveq	r3, #0
   2d374:	uxtb	r3, r3
   2d378:	cmp	r3, #0
   2d37c:	beq	2d3d4 <__assert_fail@plt+0x1c0e4>
   2d380:	b	2cfb8 <__assert_fail@plt+0x1bcc8>
   2d384:	ldr	r3, [fp, #-8]
   2d388:	lsl	r3, r3, #2
   2d38c:	sub	r2, fp, #4
   2d390:	add	r3, r2, r3
   2d394:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2d398:	ldr	r3, [fp, #-8]
   2d39c:	lsl	r3, r3, #2
   2d3a0:	sub	r1, fp, #4
   2d3a4:	add	r3, r1, r3
   2d3a8:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2d3ac:	ldr	r3, [fp, #-8]
   2d3b0:	lsl	r3, r3, #2
   2d3b4:	sub	r2, fp, #4
   2d3b8:	add	r3, r2, r3
   2d3bc:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2d3c0:	ldr	r3, [fp, #-8]
   2d3c4:	lsl	r3, r3, #2
   2d3c8:	sub	r1, fp, #4
   2d3cc:	add	r3, r1, r3
   2d3d0:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2d3d4:	sub	r3, fp, #14400	; 0x3840
   2d3d8:	sub	r3, r3, #4
   2d3dc:	sub	r3, r3, #20
   2d3e0:	ldr	r2, [fp, #-8]
   2d3e4:	lsl	r2, r2, #5
   2d3e8:	add	r2, r3, r2
   2d3ec:	sub	r3, fp, #3152	; 0xc50
   2d3f0:	sub	r3, r3, #4
   2d3f4:	sub	r3, r3, #4
   2d3f8:	mov	r1, r2
   2d3fc:	mov	r0, r3
   2d400:	bl	161f8 <__assert_fail@plt+0x4f08>
   2d404:	ldr	r3, [fp, #-8]
   2d408:	add	r3, r3, #1
   2d40c:	str	r3, [fp, #-8]
   2d410:	ldr	r2, [fp, #-8]
   2d414:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d418:	cmp	r2, r3
   2d41c:	blt	2d048 <__assert_fail@plt+0x1bd58>
   2d420:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2d424:	cmp	r3, #0
   2d428:	bne	2d5e4 <__assert_fail@plt+0x1c2f4>
   2d42c:	mov	r1, #256	; 0x100
   2d430:	mov	r0, #4
   2d434:	bl	3127c <__assert_fail@plt+0x1ff8c>
   2d438:	mov	r3, r0
   2d43c:	mov	r2, r3
   2d440:	sub	r3, fp, #12288	; 0x3000
   2d444:	sub	r3, r3, #4
   2d448:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2d44c:	str	r2, [r3, #44]	; 0x2c
   2d450:	sub	r3, fp, #12288	; 0x3000
   2d454:	sub	r3, r3, #4
   2d458:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2d45c:	ldr	r3, [r3, #44]	; 0x2c
   2d460:	str	r3, [fp, #-32]	; 0xffffffe0
   2d464:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d468:	cmp	r3, #0
   2d46c:	moveq	r3, #1
   2d470:	movne	r3, #0
   2d474:	uxtb	r3, r3
   2d478:	cmp	r3, #0
   2d47c:	bne	2cfac <__assert_fail@plt+0x1bcbc>
   2d480:	mov	r3, #0
   2d484:	str	r3, [fp, #-8]
   2d488:	b	2d5d4 <__assert_fail@plt+0x1c2e4>
   2d48c:	ldr	r3, [fp, #-8]
   2d490:	lsl	r3, r3, #5
   2d494:	str	r3, [fp, #-16]
   2d498:	ldr	r3, [fp, #-8]
   2d49c:	lsl	r3, r3, #2
   2d4a0:	sub	r2, fp, #4
   2d4a4:	add	r3, r2, r3
   2d4a8:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2d4ac:	str	r3, [fp, #-24]	; 0xffffffe8
   2d4b0:	mov	r3, #1
   2d4b4:	str	r3, [fp, #-28]	; 0xffffffe4
   2d4b8:	b	2d5bc <__assert_fail@plt+0x1c2cc>
   2d4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4c0:	and	r3, r3, #1
   2d4c4:	cmp	r3, #0
   2d4c8:	beq	2d598 <__assert_fail@plt+0x1c2a8>
   2d4cc:	mov	r3, #0
   2d4d0:	str	r3, [fp, #-12]
   2d4d4:	b	2d4e4 <__assert_fail@plt+0x1c1f4>
   2d4d8:	ldr	r3, [fp, #-12]
   2d4dc:	add	r3, r3, #1
   2d4e0:	str	r3, [fp, #-12]
   2d4e4:	sub	r3, fp, #12288	; 0x3000
   2d4e8:	sub	r3, r3, #4
   2d4ec:	mov	r1, r3
   2d4f0:	ldr	r3, [fp, #-12]
   2d4f4:	lsl	r2, r3, #3
   2d4f8:	ldr	r3, [fp, #-8]
   2d4fc:	add	r3, r2, r3
   2d500:	lsl	r3, r3, #2
   2d504:	add	r3, r1, r3
   2d508:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2d50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d510:	and	r3, r3, r2
   2d514:	cmp	r3, #0
   2d518:	beq	2d4d8 <__assert_fail@plt+0x1c1e8>
   2d51c:	sub	r3, fp, #12288	; 0x3000
   2d520:	sub	r3, r3, #4
   2d524:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2d528:	ldr	r2, [fp, #-8]
   2d52c:	add	r2, r2, #24
   2d530:	ldr	r2, [r3, r2, lsl #2]
   2d534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d538:	and	r3, r3, r2
   2d53c:	cmp	r3, #0
   2d540:	beq	2d570 <__assert_fail@plt+0x1c280>
   2d544:	ldr	r3, [fp, #-16]
   2d548:	lsl	r3, r3, #2
   2d54c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d550:	add	r2, r2, r3
   2d554:	ldr	r3, [fp, #-12]
   2d558:	lsl	r3, r3, #2
   2d55c:	sub	r1, fp, #4
   2d560:	add	r3, r1, r3
   2d564:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2d568:	str	r3, [r2]
   2d56c:	b	2d598 <__assert_fail@plt+0x1c2a8>
   2d570:	ldr	r3, [fp, #-16]
   2d574:	lsl	r3, r3, #2
   2d578:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d57c:	add	r2, r2, r3
   2d580:	ldr	r3, [fp, #-12]
   2d584:	lsl	r3, r3, #2
   2d588:	sub	r1, fp, #4
   2d58c:	add	r3, r1, r3
   2d590:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2d594:	str	r3, [r2]
   2d598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d59c:	lsl	r3, r3, #1
   2d5a0:	str	r3, [fp, #-28]	; 0xffffffe4
   2d5a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5a8:	lsr	r3, r3, #1
   2d5ac:	str	r3, [fp, #-24]	; 0xffffffe8
   2d5b0:	ldr	r3, [fp, #-16]
   2d5b4:	add	r3, r3, #1
   2d5b8:	str	r3, [fp, #-16]
   2d5bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5c0:	cmp	r3, #0
   2d5c4:	bne	2d4bc <__assert_fail@plt+0x1c1cc>
   2d5c8:	ldr	r3, [fp, #-8]
   2d5cc:	add	r3, r3, #1
   2d5d0:	str	r3, [fp, #-8]
   2d5d4:	ldr	r3, [fp, #-8]
   2d5d8:	cmp	r3, #7
   2d5dc:	ble	2d48c <__assert_fail@plt+0x1c19c>
   2d5e0:	b	2d770 <__assert_fail@plt+0x1c480>
   2d5e4:	mov	r1, #512	; 0x200
   2d5e8:	mov	r0, #4
   2d5ec:	bl	3127c <__assert_fail@plt+0x1ff8c>
   2d5f0:	mov	r3, r0
   2d5f4:	mov	r2, r3
   2d5f8:	sub	r3, fp, #12288	; 0x3000
   2d5fc:	sub	r3, r3, #4
   2d600:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2d604:	str	r2, [r3, #48]	; 0x30
   2d608:	sub	r3, fp, #12288	; 0x3000
   2d60c:	sub	r3, r3, #4
   2d610:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2d614:	ldr	r3, [r3, #48]	; 0x30
   2d618:	str	r3, [fp, #-32]	; 0xffffffe0
   2d61c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d620:	cmp	r3, #0
   2d624:	moveq	r3, #1
   2d628:	movne	r3, #0
   2d62c:	uxtb	r3, r3
   2d630:	cmp	r3, #0
   2d634:	bne	2cfb4 <__assert_fail@plt+0x1bcc4>
   2d638:	mov	r3, #0
   2d63c:	str	r3, [fp, #-8]
   2d640:	b	2d764 <__assert_fail@plt+0x1c474>
   2d644:	ldr	r3, [fp, #-8]
   2d648:	lsl	r3, r3, #5
   2d64c:	str	r3, [fp, #-16]
   2d650:	ldr	r3, [fp, #-8]
   2d654:	lsl	r3, r3, #2
   2d658:	sub	r2, fp, #4
   2d65c:	add	r3, r2, r3
   2d660:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2d664:	str	r3, [fp, #-24]	; 0xffffffe8
   2d668:	mov	r3, #1
   2d66c:	str	r3, [fp, #-28]	; 0xffffffe4
   2d670:	b	2d74c <__assert_fail@plt+0x1c45c>
   2d674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d678:	and	r3, r3, #1
   2d67c:	cmp	r3, #0
   2d680:	beq	2d728 <__assert_fail@plt+0x1c438>
   2d684:	mov	r3, #0
   2d688:	str	r3, [fp, #-12]
   2d68c:	b	2d69c <__assert_fail@plt+0x1c3ac>
   2d690:	ldr	r3, [fp, #-12]
   2d694:	add	r3, r3, #1
   2d698:	str	r3, [fp, #-12]
   2d69c:	sub	r3, fp, #12288	; 0x3000
   2d6a0:	sub	r3, r3, #4
   2d6a4:	mov	r1, r3
   2d6a8:	ldr	r3, [fp, #-12]
   2d6ac:	lsl	r2, r3, #3
   2d6b0:	ldr	r3, [fp, #-8]
   2d6b4:	add	r3, r2, r3
   2d6b8:	lsl	r3, r3, #2
   2d6bc:	add	r3, r1, r3
   2d6c0:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2d6c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d6c8:	and	r3, r3, r2
   2d6cc:	cmp	r3, #0
   2d6d0:	beq	2d690 <__assert_fail@plt+0x1c3a0>
   2d6d4:	ldr	r3, [fp, #-16]
   2d6d8:	lsl	r3, r3, #2
   2d6dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d6e0:	add	r2, r2, r3
   2d6e4:	ldr	r3, [fp, #-12]
   2d6e8:	lsl	r3, r3, #2
   2d6ec:	sub	r1, fp, #4
   2d6f0:	add	r3, r1, r3
   2d6f4:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2d6f8:	str	r3, [r2]
   2d6fc:	ldr	r3, [fp, #-16]
   2d700:	add	r3, r3, #256	; 0x100
   2d704:	lsl	r3, r3, #2
   2d708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d70c:	add	r2, r2, r3
   2d710:	ldr	r3, [fp, #-12]
   2d714:	lsl	r3, r3, #2
   2d718:	sub	r1, fp, #4
   2d71c:	add	r3, r1, r3
   2d720:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2d724:	str	r3, [r2]
   2d728:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d72c:	lsl	r3, r3, #1
   2d730:	str	r3, [fp, #-28]	; 0xffffffe4
   2d734:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d738:	lsr	r3, r3, #1
   2d73c:	str	r3, [fp, #-24]	; 0xffffffe8
   2d740:	ldr	r3, [fp, #-16]
   2d744:	add	r3, r3, #1
   2d748:	str	r3, [fp, #-16]
   2d74c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d750:	cmp	r3, #0
   2d754:	bne	2d674 <__assert_fail@plt+0x1c384>
   2d758:	ldr	r3, [fp, #-8]
   2d75c:	add	r3, r3, #1
   2d760:	str	r3, [fp, #-8]
   2d764:	ldr	r3, [fp, #-8]
   2d768:	cmp	r3, #7
   2d76c:	ble	2d644 <__assert_fail@plt+0x1c354>
   2d770:	sub	r3, fp, #3152	; 0xc50
   2d774:	sub	r3, r3, #4
   2d778:	sub	r3, r3, #4
   2d77c:	mov	r1, #10
   2d780:	mov	r0, r3
   2d784:	bl	16064 <__assert_fail@plt+0x4d74>
   2d788:	mov	r3, r0
   2d78c:	cmp	r3, #0
   2d790:	beq	2d848 <__assert_fail@plt+0x1c558>
   2d794:	mov	r3, #0
   2d798:	str	r3, [fp, #-12]
   2d79c:	b	2d830 <__assert_fail@plt+0x1c540>
   2d7a0:	sub	r3, fp, #14400	; 0x3840
   2d7a4:	sub	r3, r3, #4
   2d7a8:	sub	r3, r3, #20
   2d7ac:	ldr	r2, [fp, #-12]
   2d7b0:	lsl	r2, r2, #5
   2d7b4:	add	r3, r3, r2
   2d7b8:	mov	r1, #10
   2d7bc:	mov	r0, r3
   2d7c0:	bl	16064 <__assert_fail@plt+0x4d74>
   2d7c4:	mov	r3, r0
   2d7c8:	cmp	r3, #0
   2d7cc:	beq	2d824 <__assert_fail@plt+0x1c534>
   2d7d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d7d4:	add	r2, r3, #40	; 0x28
   2d7d8:	ldr	r3, [fp, #-12]
   2d7dc:	lsl	r3, r3, #2
   2d7e0:	sub	r1, fp, #4
   2d7e4:	add	r3, r1, r3
   2d7e8:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2d7ec:	str	r3, [r2]
   2d7f0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2d7f4:	cmp	r3, #0
   2d7f8:	beq	2d844 <__assert_fail@plt+0x1c554>
   2d7fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d800:	add	r3, r3, #1056	; 0x420
   2d804:	add	r3, r3, #8
   2d808:	ldr	r2, [fp, #-12]
   2d80c:	lsl	r2, r2, #2
   2d810:	sub	r1, fp, #4
   2d814:	add	r2, r1, r2
   2d818:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   2d81c:	str	r2, [r3]
   2d820:	b	2d844 <__assert_fail@plt+0x1c554>
   2d824:	ldr	r3, [fp, #-12]
   2d828:	add	r3, r3, #1
   2d82c:	str	r3, [fp, #-12]
   2d830:	ldr	r2, [fp, #-12]
   2d834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d838:	cmp	r2, r3
   2d83c:	blt	2d7a0 <__assert_fail@plt+0x1c4b0>
   2d840:	b	2d848 <__assert_fail@plt+0x1c558>
   2d844:	nop	{0}
   2d848:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2d84c:	mov	r0, r3
   2d850:	bl	31b28 <__assert_fail@plt+0x20838>
   2d854:	mov	r3, #0
   2d858:	str	r3, [fp, #-8]
   2d85c:	b	2d8a0 <__assert_fail@plt+0x1c5b0>
   2d860:	ldr	r2, [fp, #-8]
   2d864:	mov	r3, r2
   2d868:	lsl	r3, r3, #1
   2d86c:	add	r3, r3, r2
   2d870:	lsl	r3, r3, #2
   2d874:	mov	r2, r3
   2d878:	sub	r3, fp, #6208	; 0x1840
   2d87c:	sub	r3, r3, #4
   2d880:	sub	r3, r3, #20
   2d884:	add	r3, r3, r2
   2d888:	ldr	r3, [r3, #8]
   2d88c:	mov	r0, r3
   2d890:	bl	31b28 <__assert_fail@plt+0x20838>
   2d894:	ldr	r3, [fp, #-8]
   2d898:	add	r3, r3, #1
   2d89c:	str	r3, [fp, #-8]
   2d8a0:	ldr	r2, [fp, #-8]
   2d8a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d8a8:	cmp	r2, r3
   2d8ac:	blt	2d860 <__assert_fail@plt+0x1c570>
   2d8b0:	mov	r3, #1
   2d8b4:	mov	r0, r3
   2d8b8:	sub	sp, fp, #4
   2d8bc:	ldr	fp, [sp]
   2d8c0:	add	sp, sp, #4
   2d8c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2d8c8:	str	fp, [sp, #-8]!
   2d8cc:	str	lr, [sp, #4]
   2d8d0:	add	fp, sp, #4
   2d8d4:	sub	sp, sp, #176	; 0xb0
   2d8d8:	str	r0, [fp, #-168]	; 0xffffff58
   2d8dc:	str	r1, [fp, #-172]	; 0xffffff54
   2d8e0:	str	r2, [fp, #-176]	; 0xffffff50
   2d8e4:	str	r3, [fp, #-180]	; 0xffffff4c
   2d8e8:	ldr	r3, [fp, #-172]	; 0xffffff54
   2d8ec:	add	r3, r3, #4
   2d8f0:	str	r3, [fp, #-44]	; 0xffffffd4
   2d8f4:	sub	r3, fp, #100	; 0x64
   2d8f8:	mov	r0, r3
   2d8fc:	bl	160dc <__assert_fail@plt+0x4dec>
   2d900:	mov	r3, #0
   2d904:	str	r3, [fp, #-20]	; 0xffffffec
   2d908:	mov	r3, #0
   2d90c:	str	r3, [fp, #-8]
   2d910:	b	2e264 <__assert_fail@plt+0x1cf74>
   2d914:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d918:	ldr	r2, [r3]
   2d91c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d920:	ldr	r1, [r3, #8]
   2d924:	ldr	r3, [fp, #-8]
   2d928:	lsl	r3, r3, #2
   2d92c:	add	r3, r1, r3
   2d930:	ldr	r3, [r3]
   2d934:	lsl	r3, r3, #3
   2d938:	add	r3, r2, r3
   2d93c:	str	r3, [fp, #-48]	; 0xffffffd0
   2d940:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d944:	ldrb	r3, [r3, #4]
   2d948:	str	r3, [fp, #-52]	; 0xffffffcc
   2d94c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d950:	ldr	r3, [r3, #4]
   2d954:	ubfx	r3, r3, #8, #10
   2d958:	uxth	r3, r3
   2d95c:	str	r3, [fp, #-56]	; 0xffffffc8
   2d960:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d964:	cmp	r3, #1
   2d968:	bne	2d98c <__assert_fail@plt+0x1c69c>
   2d96c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d970:	ldrb	r3, [r3]
   2d974:	mov	r2, r3
   2d978:	sub	r3, fp, #100	; 0x64
   2d97c:	mov	r1, r2
   2d980:	mov	r0, r3
   2d984:	bl	15f50 <__assert_fail@plt+0x4c60>
   2d988:	b	2daac <__assert_fail@plt+0x1c7bc>
   2d98c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d990:	cmp	r3, #3
   2d994:	bne	2d9b4 <__assert_fail@plt+0x1c6c4>
   2d998:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d99c:	ldr	r2, [r3]
   2d9a0:	sub	r3, fp, #100	; 0x64
   2d9a4:	mov	r1, r2
   2d9a8:	mov	r0, r3
   2d9ac:	bl	161f8 <__assert_fail@plt+0x4f08>
   2d9b0:	b	2daac <__assert_fail@plt+0x1c7bc>
   2d9b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d9b8:	cmp	r3, #5
   2d9bc:	bne	2da44 <__assert_fail@plt+0x1c754>
   2d9c0:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d9c4:	ldr	r3, [r3, #92]	; 0x5c
   2d9c8:	cmp	r3, #1
   2d9cc:	ble	2d9ec <__assert_fail@plt+0x1c6fc>
   2d9d0:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d9d4:	ldr	r2, [r3, #60]	; 0x3c
   2d9d8:	sub	r3, fp, #100	; 0x64
   2d9dc:	mov	r1, r2
   2d9e0:	mov	r0, r3
   2d9e4:	bl	161f8 <__assert_fail@plt+0x4f08>
   2d9e8:	b	2d9f8 <__assert_fail@plt+0x1c708>
   2d9ec:	sub	r3, fp, #100	; 0x64
   2d9f0:	mov	r0, r3
   2d9f4:	bl	16114 <__assert_fail@plt+0x4e24>
   2d9f8:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d9fc:	ldr	r3, [r3, #128]	; 0x80
   2da00:	and	r3, r3, #64	; 0x40
   2da04:	cmp	r3, #0
   2da08:	bne	2da1c <__assert_fail@plt+0x1c72c>
   2da0c:	sub	r3, fp, #100	; 0x64
   2da10:	mov	r1, #10
   2da14:	mov	r0, r3
   2da18:	bl	15fd8 <__assert_fail@plt+0x4ce8>
   2da1c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2da20:	ldr	r3, [r3, #128]	; 0x80
   2da24:	and	r3, r3, #128	; 0x80
   2da28:	cmp	r3, #0
   2da2c:	beq	2daac <__assert_fail@plt+0x1c7bc>
   2da30:	sub	r3, fp, #100	; 0x64
   2da34:	mov	r1, #0
   2da38:	mov	r0, r3
   2da3c:	bl	15fd8 <__assert_fail@plt+0x4ce8>
   2da40:	b	2daac <__assert_fail@plt+0x1c7bc>
   2da44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2da48:	cmp	r3, #7
   2da4c:	bne	2e23c <__assert_fail@plt+0x1cf4c>
   2da50:	sub	r3, fp, #100	; 0x64
   2da54:	mov	r2, #16
   2da58:	mvn	r1, #0
   2da5c:	mov	r0, r3
   2da60:	bl	11218 <memset@plt>
   2da64:	ldr	r3, [fp, #-168]	; 0xffffff58
   2da68:	ldr	r3, [r3, #128]	; 0x80
   2da6c:	and	r3, r3, #64	; 0x40
   2da70:	cmp	r3, #0
   2da74:	bne	2da88 <__assert_fail@plt+0x1c798>
   2da78:	sub	r3, fp, #100	; 0x64
   2da7c:	mov	r1, #10
   2da80:	mov	r0, r3
   2da84:	bl	15fd8 <__assert_fail@plt+0x4ce8>
   2da88:	ldr	r3, [fp, #-168]	; 0xffffff58
   2da8c:	ldr	r3, [r3, #128]	; 0x80
   2da90:	and	r3, r3, #128	; 0x80
   2da94:	cmp	r3, #0
   2da98:	beq	2daac <__assert_fail@plt+0x1c7bc>
   2da9c:	sub	r3, fp, #100	; 0x64
   2daa0:	mov	r1, #0
   2daa4:	mov	r0, r3
   2daa8:	bl	15fd8 <__assert_fail@plt+0x4ce8>
   2daac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dab0:	cmp	r3, #0
   2dab4:	beq	2de44 <__assert_fail@plt+0x1cb54>
   2dab8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dabc:	and	r3, r3, #32
   2dac0:	cmp	r3, #0
   2dac4:	beq	2db08 <__assert_fail@plt+0x1c818>
   2dac8:	sub	r3, fp, #100	; 0x64
   2dacc:	mov	r1, #10
   2dad0:	mov	r0, r3
   2dad4:	bl	16064 <__assert_fail@plt+0x4d74>
   2dad8:	mov	r3, r0
   2dadc:	strb	r3, [fp, #-57]	; 0xffffffc7
   2dae0:	sub	r3, fp, #100	; 0x64
   2dae4:	mov	r0, r3
   2dae8:	bl	160dc <__assert_fail@plt+0x4dec>
   2daec:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   2daf0:	cmp	r3, #0
   2daf4:	beq	2e244 <__assert_fail@plt+0x1cf54>
   2daf8:	sub	r3, fp, #100	; 0x64
   2dafc:	mov	r1, #10
   2db00:	mov	r0, r3
   2db04:	bl	15f50 <__assert_fail@plt+0x4c60>
   2db08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db0c:	and	r3, r3, #128	; 0x80
   2db10:	cmp	r3, #0
   2db14:	beq	2db28 <__assert_fail@plt+0x1c838>
   2db18:	sub	r3, fp, #100	; 0x64
   2db1c:	mov	r0, r3
   2db20:	bl	160dc <__assert_fail@plt+0x4dec>
   2db24:	b	2e258 <__assert_fail@plt+0x1cf68>
   2db28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db2c:	and	r3, r3, #4
   2db30:	cmp	r3, #0
   2db34:	beq	2dcb4 <__assert_fail@plt+0x1c9c4>
   2db38:	mov	r3, #0
   2db3c:	str	r3, [fp, #-24]	; 0xffffffe8
   2db40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2db44:	cmp	r3, #1
   2db48:	bne	2db74 <__assert_fail@plt+0x1c884>
   2db4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2db50:	ldrb	r3, [r3, #6]
   2db54:	and	r3, r3, #64	; 0x40
   2db58:	uxtb	r3, r3
   2db5c:	cmp	r3, #0
   2db60:	bne	2db74 <__assert_fail@plt+0x1c884>
   2db64:	sub	r3, fp, #100	; 0x64
   2db68:	mov	r0, r3
   2db6c:	bl	160dc <__assert_fail@plt+0x4dec>
   2db70:	b	2e258 <__assert_fail@plt+0x1cf68>
   2db74:	ldr	r3, [fp, #-168]	; 0xffffff58
   2db78:	ldr	r3, [r3, #92]	; 0x5c
   2db7c:	cmp	r3, #1
   2db80:	ble	2dc28 <__assert_fail@plt+0x1c938>
   2db84:	mov	r3, #0
   2db88:	str	r3, [fp, #-12]
   2db8c:	b	2dc18 <__assert_fail@plt+0x1c928>
   2db90:	ldr	r3, [fp, #-12]
   2db94:	lsl	r3, r3, #2
   2db98:	sub	r2, fp, #4
   2db9c:	add	r3, r2, r3
   2dba0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2dba4:	ldr	r3, [fp, #-168]	; 0xffffff58
   2dba8:	ldr	r1, [fp, #-12]
   2dbac:	add	r1, r1, #24
   2dbb0:	ldr	r1, [r3, r1, lsl #2]
   2dbb4:	ldr	r3, [fp, #-168]	; 0xffffff58
   2dbb8:	ldr	r0, [r3, #60]	; 0x3c
   2dbbc:	ldr	r3, [fp, #-12]
   2dbc0:	lsl	r3, r3, #2
   2dbc4:	add	r3, r0, r3
   2dbc8:	ldr	r3, [r3]
   2dbcc:	mvn	r3, r3
   2dbd0:	orr	r3, r1, r3
   2dbd4:	and	r2, r2, r3
   2dbd8:	ldr	r3, [fp, #-12]
   2dbdc:	lsl	r3, r3, #2
   2dbe0:	sub	r1, fp, #4
   2dbe4:	add	r3, r1, r3
   2dbe8:	str	r2, [r3, #-96]	; 0xffffffa0
   2dbec:	ldr	r3, [fp, #-12]
   2dbf0:	lsl	r3, r3, #2
   2dbf4:	sub	r2, fp, #4
   2dbf8:	add	r3, r2, r3
   2dbfc:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2dc00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dc04:	orr	r3, r2, r3
   2dc08:	str	r3, [fp, #-24]	; 0xffffffe8
   2dc0c:	ldr	r3, [fp, #-12]
   2dc10:	add	r3, r3, #1
   2dc14:	str	r3, [fp, #-12]
   2dc18:	ldr	r3, [fp, #-12]
   2dc1c:	cmp	r3, #7
   2dc20:	ble	2db90 <__assert_fail@plt+0x1c8a0>
   2dc24:	b	2dca8 <__assert_fail@plt+0x1c9b8>
   2dc28:	mov	r3, #0
   2dc2c:	str	r3, [fp, #-12]
   2dc30:	b	2dc9c <__assert_fail@plt+0x1c9ac>
   2dc34:	ldr	r3, [fp, #-12]
   2dc38:	lsl	r3, r3, #2
   2dc3c:	sub	r2, fp, #4
   2dc40:	add	r3, r2, r3
   2dc44:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2dc48:	ldr	r3, [fp, #-168]	; 0xffffff58
   2dc4c:	ldr	r1, [fp, #-12]
   2dc50:	add	r1, r1, #24
   2dc54:	ldr	r3, [r3, r1, lsl #2]
   2dc58:	and	r2, r2, r3
   2dc5c:	ldr	r3, [fp, #-12]
   2dc60:	lsl	r3, r3, #2
   2dc64:	sub	r1, fp, #4
   2dc68:	add	r3, r1, r3
   2dc6c:	str	r2, [r3, #-96]	; 0xffffffa0
   2dc70:	ldr	r3, [fp, #-12]
   2dc74:	lsl	r3, r3, #2
   2dc78:	sub	r2, fp, #4
   2dc7c:	add	r3, r2, r3
   2dc80:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2dc84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dc88:	orr	r3, r2, r3
   2dc8c:	str	r3, [fp, #-24]	; 0xffffffe8
   2dc90:	ldr	r3, [fp, #-12]
   2dc94:	add	r3, r3, #1
   2dc98:	str	r3, [fp, #-12]
   2dc9c:	ldr	r3, [fp, #-12]
   2dca0:	cmp	r3, #7
   2dca4:	ble	2dc34 <__assert_fail@plt+0x1c944>
   2dca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dcac:	cmp	r3, #0
   2dcb0:	beq	2e24c <__assert_fail@plt+0x1cf5c>
   2dcb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dcb8:	and	r3, r3, #8
   2dcbc:	cmp	r3, #0
   2dcc0:	beq	2de44 <__assert_fail@plt+0x1cb54>
   2dcc4:	mov	r3, #0
   2dcc8:	str	r3, [fp, #-28]	; 0xffffffe4
   2dccc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dcd0:	cmp	r3, #1
   2dcd4:	bne	2dd00 <__assert_fail@plt+0x1ca10>
   2dcd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dcdc:	ldrb	r3, [r3, #6]
   2dce0:	and	r3, r3, #64	; 0x40
   2dce4:	uxtb	r3, r3
   2dce8:	cmp	r3, #0
   2dcec:	beq	2dd00 <__assert_fail@plt+0x1ca10>
   2dcf0:	sub	r3, fp, #100	; 0x64
   2dcf4:	mov	r0, r3
   2dcf8:	bl	160dc <__assert_fail@plt+0x4dec>
   2dcfc:	b	2e258 <__assert_fail@plt+0x1cf68>
   2dd00:	ldr	r3, [fp, #-168]	; 0xffffff58
   2dd04:	ldr	r3, [r3, #92]	; 0x5c
   2dd08:	cmp	r3, #1
   2dd0c:	ble	2ddb4 <__assert_fail@plt+0x1cac4>
   2dd10:	mov	r3, #0
   2dd14:	str	r3, [fp, #-12]
   2dd18:	b	2dda4 <__assert_fail@plt+0x1cab4>
   2dd1c:	ldr	r3, [fp, #-12]
   2dd20:	lsl	r3, r3, #2
   2dd24:	sub	r2, fp, #4
   2dd28:	add	r3, r2, r3
   2dd2c:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2dd30:	ldr	r3, [fp, #-168]	; 0xffffff58
   2dd34:	ldr	r1, [fp, #-12]
   2dd38:	add	r1, r1, #24
   2dd3c:	ldr	r1, [r3, r1, lsl #2]
   2dd40:	ldr	r3, [fp, #-168]	; 0xffffff58
   2dd44:	ldr	r0, [r3, #60]	; 0x3c
   2dd48:	ldr	r3, [fp, #-12]
   2dd4c:	lsl	r3, r3, #2
   2dd50:	add	r3, r0, r3
   2dd54:	ldr	r3, [r3]
   2dd58:	and	r3, r3, r1
   2dd5c:	mvn	r3, r3
   2dd60:	and	r2, r2, r3
   2dd64:	ldr	r3, [fp, #-12]
   2dd68:	lsl	r3, r3, #2
   2dd6c:	sub	r1, fp, #4
   2dd70:	add	r3, r1, r3
   2dd74:	str	r2, [r3, #-96]	; 0xffffffa0
   2dd78:	ldr	r3, [fp, #-12]
   2dd7c:	lsl	r3, r3, #2
   2dd80:	sub	r2, fp, #4
   2dd84:	add	r3, r2, r3
   2dd88:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2dd8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dd90:	orr	r3, r2, r3
   2dd94:	str	r3, [fp, #-28]	; 0xffffffe4
   2dd98:	ldr	r3, [fp, #-12]
   2dd9c:	add	r3, r3, #1
   2dda0:	str	r3, [fp, #-12]
   2dda4:	ldr	r3, [fp, #-12]
   2dda8:	cmp	r3, #7
   2ddac:	ble	2dd1c <__assert_fail@plt+0x1ca2c>
   2ddb0:	b	2de38 <__assert_fail@plt+0x1cb48>
   2ddb4:	mov	r3, #0
   2ddb8:	str	r3, [fp, #-12]
   2ddbc:	b	2de2c <__assert_fail@plt+0x1cb3c>
   2ddc0:	ldr	r3, [fp, #-12]
   2ddc4:	lsl	r3, r3, #2
   2ddc8:	sub	r2, fp, #4
   2ddcc:	add	r3, r2, r3
   2ddd0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2ddd4:	ldr	r3, [fp, #-168]	; 0xffffff58
   2ddd8:	ldr	r1, [fp, #-12]
   2dddc:	add	r1, r1, #24
   2dde0:	ldr	r3, [r3, r1, lsl #2]
   2dde4:	mvn	r3, r3
   2dde8:	and	r2, r2, r3
   2ddec:	ldr	r3, [fp, #-12]
   2ddf0:	lsl	r3, r3, #2
   2ddf4:	sub	r1, fp, #4
   2ddf8:	add	r3, r1, r3
   2ddfc:	str	r2, [r3, #-96]	; 0xffffffa0
   2de00:	ldr	r3, [fp, #-12]
   2de04:	lsl	r3, r3, #2
   2de08:	sub	r2, fp, #4
   2de0c:	add	r3, r2, r3
   2de10:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2de14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2de18:	orr	r3, r2, r3
   2de1c:	str	r3, [fp, #-28]	; 0xffffffe4
   2de20:	ldr	r3, [fp, #-12]
   2de24:	add	r3, r3, #1
   2de28:	str	r3, [fp, #-12]
   2de2c:	ldr	r3, [fp, #-12]
   2de30:	cmp	r3, #7
   2de34:	ble	2ddc0 <__assert_fail@plt+0x1cad0>
   2de38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2de3c:	cmp	r3, #0
   2de40:	beq	2e254 <__assert_fail@plt+0x1cf64>
   2de44:	mov	r3, #0
   2de48:	str	r3, [fp, #-12]
   2de4c:	b	2e178 <__assert_fail@plt+0x1ce88>
   2de50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2de54:	cmp	r3, #1
   2de58:	bne	2de94 <__assert_fail@plt+0x1cba4>
   2de5c:	ldr	r3, [fp, #-12]
   2de60:	lsl	r3, r3, #5
   2de64:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2de68:	add	r2, r2, r3
   2de6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2de70:	ldrb	r3, [r3]
   2de74:	mov	r1, r3
   2de78:	mov	r0, r2
   2de7c:	bl	16064 <__assert_fail@plt+0x4d74>
   2de80:	mov	r3, r0
   2de84:	eor	r3, r3, #1
   2de88:	uxtb	r3, r3
   2de8c:	cmp	r3, #0
   2de90:	bne	2e160 <__assert_fail@plt+0x1ce70>
   2de94:	mov	r3, #0
   2de98:	str	r3, [fp, #-32]	; 0xffffffe0
   2de9c:	mov	r3, #0
   2dea0:	str	r3, [fp, #-16]
   2dea4:	b	2df18 <__assert_fail@plt+0x1cc28>
   2dea8:	ldr	r3, [fp, #-16]
   2deac:	lsl	r3, r3, #2
   2deb0:	sub	r2, fp, #4
   2deb4:	add	r3, r2, r3
   2deb8:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2debc:	ldr	r3, [fp, #-12]
   2dec0:	lsl	r3, r3, #5
   2dec4:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2dec8:	add	r3, r1, r3
   2decc:	ldr	r1, [fp, #-16]
   2ded0:	ldr	r3, [r3, r1, lsl #2]
   2ded4:	and	r2, r2, r3
   2ded8:	ldr	r3, [fp, #-16]
   2dedc:	lsl	r3, r3, #2
   2dee0:	sub	r1, fp, #4
   2dee4:	add	r3, r1, r3
   2dee8:	str	r2, [r3, #-160]	; 0xffffff60
   2deec:	ldr	r3, [fp, #-16]
   2def0:	lsl	r3, r3, #2
   2def4:	sub	r2, fp, #4
   2def8:	add	r3, r2, r3
   2defc:	ldr	r3, [r3, #-160]	; 0xffffff60
   2df00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2df04:	orr	r3, r2, r3
   2df08:	str	r3, [fp, #-32]	; 0xffffffe0
   2df0c:	ldr	r3, [fp, #-16]
   2df10:	add	r3, r3, #1
   2df14:	str	r3, [fp, #-16]
   2df18:	ldr	r3, [fp, #-16]
   2df1c:	cmp	r3, #7
   2df20:	ble	2dea8 <__assert_fail@plt+0x1cbb8>
   2df24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df28:	cmp	r3, #0
   2df2c:	beq	2e168 <__assert_fail@plt+0x1ce78>
   2df30:	mov	r3, #0
   2df34:	str	r3, [fp, #-40]	; 0xffffffd8
   2df38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2df3c:	str	r3, [fp, #-36]	; 0xffffffdc
   2df40:	mov	r3, #0
   2df44:	str	r3, [fp, #-16]
   2df48:	b	2e028 <__assert_fail@plt+0x1cd38>
   2df4c:	ldr	r3, [fp, #-16]
   2df50:	lsl	r3, r3, #2
   2df54:	sub	r2, fp, #4
   2df58:	add	r3, r2, r3
   2df5c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2df60:	mvn	r2, r3
   2df64:	ldr	r3, [fp, #-12]
   2df68:	lsl	r3, r3, #5
   2df6c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2df70:	add	r3, r1, r3
   2df74:	ldr	r1, [fp, #-16]
   2df78:	ldr	r3, [r3, r1, lsl #2]
   2df7c:	and	r2, r2, r3
   2df80:	ldr	r3, [fp, #-16]
   2df84:	lsl	r3, r3, #2
   2df88:	sub	r1, fp, #4
   2df8c:	add	r3, r1, r3
   2df90:	str	r2, [r3, #-128]	; 0xffffff80
   2df94:	ldr	r3, [fp, #-16]
   2df98:	lsl	r3, r3, #2
   2df9c:	sub	r2, fp, #4
   2dfa0:	add	r3, r2, r3
   2dfa4:	ldr	r3, [r3, #-128]	; 0xffffff80
   2dfa8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2dfac:	orr	r3, r2, r3
   2dfb0:	str	r3, [fp, #-36]	; 0xffffffdc
   2dfb4:	ldr	r3, [fp, #-16]
   2dfb8:	lsl	r3, r3, #2
   2dfbc:	sub	r2, fp, #4
   2dfc0:	add	r3, r2, r3
   2dfc4:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2dfc8:	ldr	r3, [fp, #-12]
   2dfcc:	lsl	r3, r3, #5
   2dfd0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2dfd4:	add	r3, r1, r3
   2dfd8:	ldr	r1, [fp, #-16]
   2dfdc:	ldr	r3, [r3, r1, lsl #2]
   2dfe0:	mvn	r3, r3
   2dfe4:	and	r2, r2, r3
   2dfe8:	ldr	r3, [fp, #-16]
   2dfec:	lsl	r3, r3, #2
   2dff0:	sub	r1, fp, #4
   2dff4:	add	r3, r1, r3
   2dff8:	str	r2, [r3, #-96]	; 0xffffffa0
   2dffc:	ldr	r3, [fp, #-16]
   2e000:	lsl	r3, r3, #2
   2e004:	sub	r2, fp, #4
   2e008:	add	r3, r2, r3
   2e00c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2e010:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e014:	orr	r3, r2, r3
   2e018:	str	r3, [fp, #-40]	; 0xffffffd8
   2e01c:	ldr	r3, [fp, #-16]
   2e020:	add	r3, r3, #1
   2e024:	str	r3, [fp, #-16]
   2e028:	ldr	r3, [fp, #-16]
   2e02c:	cmp	r3, #7
   2e030:	ble	2df4c <__assert_fail@plt+0x1cc5c>
   2e034:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e038:	cmp	r3, #0
   2e03c:	beq	2e0f4 <__assert_fail@plt+0x1ce04>
   2e040:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e044:	lsl	r3, r3, #5
   2e048:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2e04c:	add	r3, r2, r3
   2e050:	sub	r2, fp, #132	; 0x84
   2e054:	mov	r1, r2
   2e058:	mov	r0, r3
   2e05c:	bl	1614c <__assert_fail@plt+0x4e5c>
   2e060:	ldr	r3, [fp, #-12]
   2e064:	lsl	r3, r3, #5
   2e068:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2e06c:	add	r3, r2, r3
   2e070:	sub	r2, fp, #164	; 0xa4
   2e074:	mov	r1, r2
   2e078:	mov	r0, r3
   2e07c:	bl	1614c <__assert_fail@plt+0x4e5c>
   2e080:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e084:	mov	r3, r2
   2e088:	lsl	r3, r3, #1
   2e08c:	add	r3, r3, r2
   2e090:	lsl	r3, r3, #2
   2e094:	mov	r2, r3
   2e098:	ldr	r3, [fp, #-176]	; 0xffffff50
   2e09c:	add	r0, r3, r2
   2e0a0:	ldr	r2, [fp, #-12]
   2e0a4:	mov	r3, r2
   2e0a8:	lsl	r3, r3, #1
   2e0ac:	add	r3, r3, r2
   2e0b0:	lsl	r3, r3, #2
   2e0b4:	mov	r2, r3
   2e0b8:	ldr	r3, [fp, #-176]	; 0xffffff50
   2e0bc:	add	r3, r3, r2
   2e0c0:	mov	r1, r3
   2e0c4:	bl	19160 <__assert_fail@plt+0x7e70>
   2e0c8:	str	r0, [fp, #-64]	; 0xffffffc0
   2e0cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e0d0:	cmp	r3, #0
   2e0d4:	movne	r3, #1
   2e0d8:	moveq	r3, #0
   2e0dc:	uxtb	r3, r3
   2e0e0:	cmp	r3, #0
   2e0e4:	bne	2e288 <__assert_fail@plt+0x1cf98>
   2e0e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e0ec:	add	r3, r3, #1
   2e0f0:	str	r3, [fp, #-20]	; 0xffffffec
   2e0f4:	ldr	r2, [fp, #-12]
   2e0f8:	mov	r3, r2
   2e0fc:	lsl	r3, r3, #1
   2e100:	add	r3, r3, r2
   2e104:	lsl	r3, r3, #2
   2e108:	mov	r2, r3
   2e10c:	ldr	r3, [fp, #-176]	; 0xffffff50
   2e110:	add	r0, r3, r2
   2e114:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e118:	ldr	r2, [r3, #8]
   2e11c:	ldr	r3, [fp, #-8]
   2e120:	lsl	r3, r3, #2
   2e124:	add	r3, r2, r3
   2e128:	ldr	r3, [r3]
   2e12c:	mov	r1, r3
   2e130:	bl	19eec <__assert_fail@plt+0x8bfc>
   2e134:	mov	r3, r0
   2e138:	strb	r3, [fp, #-65]	; 0xffffffbf
   2e13c:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   2e140:	eor	r3, r3, #1
   2e144:	uxtb	r3, r3
   2e148:	cmp	r3, #0
   2e14c:	bne	2e290 <__assert_fail@plt+0x1cfa0>
   2e150:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e154:	cmp	r3, #0
   2e158:	beq	2e18c <__assert_fail@plt+0x1ce9c>
   2e15c:	b	2e16c <__assert_fail@plt+0x1ce7c>
   2e160:	nop	{0}
   2e164:	b	2e16c <__assert_fail@plt+0x1ce7c>
   2e168:	nop	{0}
   2e16c:	ldr	r3, [fp, #-12]
   2e170:	add	r3, r3, #1
   2e174:	str	r3, [fp, #-12]
   2e178:	ldr	r2, [fp, #-12]
   2e17c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e180:	cmp	r2, r3
   2e184:	blt	2de50 <__assert_fail@plt+0x1cb60>
   2e188:	b	2e190 <__assert_fail@plt+0x1cea0>
   2e18c:	nop	{0}
   2e190:	ldr	r2, [fp, #-12]
   2e194:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e198:	cmp	r2, r3
   2e19c:	bne	2e258 <__assert_fail@plt+0x1cf68>
   2e1a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e1a4:	lsl	r3, r3, #5
   2e1a8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2e1ac:	add	r3, r2, r3
   2e1b0:	sub	r2, fp, #100	; 0x64
   2e1b4:	mov	r1, r2
   2e1b8:	mov	r0, r3
   2e1bc:	bl	1614c <__assert_fail@plt+0x4e5c>
   2e1c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e1c4:	mov	r3, r2
   2e1c8:	lsl	r3, r3, #1
   2e1cc:	add	r3, r3, r2
   2e1d0:	lsl	r3, r3, #2
   2e1d4:	mov	r2, r3
   2e1d8:	ldr	r3, [fp, #-176]	; 0xffffff50
   2e1dc:	add	r0, r3, r2
   2e1e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e1e4:	ldr	r2, [r3, #8]
   2e1e8:	ldr	r3, [fp, #-8]
   2e1ec:	lsl	r3, r3, #2
   2e1f0:	add	r3, r2, r3
   2e1f4:	ldr	r3, [r3]
   2e1f8:	mov	r1, r3
   2e1fc:	bl	18f94 <__assert_fail@plt+0x7ca4>
   2e200:	str	r0, [fp, #-64]	; 0xffffffc0
   2e204:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e208:	cmp	r3, #0
   2e20c:	movne	r3, #1
   2e210:	moveq	r3, #0
   2e214:	uxtb	r3, r3
   2e218:	cmp	r3, #0
   2e21c:	bne	2e298 <__assert_fail@plt+0x1cfa8>
   2e220:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e224:	add	r3, r3, #1
   2e228:	str	r3, [fp, #-20]	; 0xffffffec
   2e22c:	sub	r3, fp, #100	; 0x64
   2e230:	mov	r0, r3
   2e234:	bl	160dc <__assert_fail@plt+0x4dec>
   2e238:	b	2e258 <__assert_fail@plt+0x1cf68>
   2e23c:	nop	{0}
   2e240:	b	2e258 <__assert_fail@plt+0x1cf68>
   2e244:	nop	{0}
   2e248:	b	2e258 <__assert_fail@plt+0x1cf68>
   2e24c:	nop	{0}
   2e250:	b	2e258 <__assert_fail@plt+0x1cf68>
   2e254:	nop	{0}
   2e258:	ldr	r3, [fp, #-8]
   2e25c:	add	r3, r3, #1
   2e260:	str	r3, [fp, #-8]
   2e264:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e268:	ldr	r3, [r3, #4]
   2e26c:	ldr	r2, [fp, #-8]
   2e270:	cmp	r2, r3
   2e274:	blt	2d914 <__assert_fail@plt+0x1c624>
   2e278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e27c:	cmp	r3, #256	; 0x100
   2e280:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e284:	b	2e2f4 <__assert_fail@plt+0x1d004>
   2e288:	nop	{0}
   2e28c:	b	2e29c <__assert_fail@plt+0x1cfac>
   2e290:	nop	{0}
   2e294:	b	2e29c <__assert_fail@plt+0x1cfac>
   2e298:	nop	{0}
   2e29c:	mov	r3, #0
   2e2a0:	str	r3, [fp, #-12]
   2e2a4:	b	2e2e0 <__assert_fail@plt+0x1cff0>
   2e2a8:	ldr	r2, [fp, #-12]
   2e2ac:	mov	r3, r2
   2e2b0:	lsl	r3, r3, #1
   2e2b4:	add	r3, r3, r2
   2e2b8:	lsl	r3, r3, #2
   2e2bc:	mov	r2, r3
   2e2c0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2e2c4:	add	r3, r3, r2
   2e2c8:	ldr	r3, [r3, #8]
   2e2cc:	mov	r0, r3
   2e2d0:	bl	31b28 <__assert_fail@plt+0x20838>
   2e2d4:	ldr	r3, [fp, #-12]
   2e2d8:	add	r3, r3, #1
   2e2dc:	str	r3, [fp, #-12]
   2e2e0:	ldr	r2, [fp, #-12]
   2e2e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e2e8:	cmp	r2, r3
   2e2ec:	blt	2e2a8 <__assert_fail@plt+0x1cfb8>
   2e2f0:	mvn	r3, #0
   2e2f4:	mov	r0, r3
   2e2f8:	sub	sp, fp, #4
   2e2fc:	ldr	fp, [sp]
   2e300:	add	sp, sp, #4
   2e304:	pop	{pc}		; (ldr pc, [sp], #4)
   2e308:	str	fp, [sp, #-8]!
   2e30c:	str	lr, [sp, #4]
   2e310:	add	fp, sp, #4
   2e314:	sub	sp, sp, #56	; 0x38
   2e318:	str	r0, [fp, #-48]	; 0xffffffd0
   2e31c:	str	r1, [fp, #-52]	; 0xffffffcc
   2e320:	str	r2, [fp, #-56]	; 0xffffffc8
   2e324:	str	r3, [fp, #-60]	; 0xffffffc4
   2e328:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e32c:	ldr	r2, [r3]
   2e330:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e334:	lsl	r3, r3, #3
   2e338:	add	r3, r2, r3
   2e33c:	str	r3, [fp, #-20]	; 0xffffffec
   2e340:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e344:	ldrb	r3, [r3, #4]
   2e348:	cmp	r3, #7
   2e34c:	moveq	r3, #1
   2e350:	movne	r3, #0
   2e354:	uxtb	r3, r3
   2e358:	cmp	r3, #0
   2e35c:	beq	2e578 <__assert_fail@plt+0x1d288>
   2e360:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e364:	ldr	r2, [r3, #4]
   2e368:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e36c:	add	r3, r2, r3
   2e370:	ldrb	r3, [r3]
   2e374:	strb	r3, [fp, #-21]	; 0xffffffeb
   2e378:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e37c:	cmp	r3, #193	; 0xc1
   2e380:	movls	r3, #1
   2e384:	movhi	r3, #0
   2e388:	uxtb	r3, r3
   2e38c:	cmp	r3, #0
   2e390:	beq	2e39c <__assert_fail@plt+0x1d0ac>
   2e394:	mov	r3, #0
   2e398:	b	2e864 <__assert_fail@plt+0x1d574>
   2e39c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e3a0:	add	r2, r3, #1
   2e3a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e3a8:	ldr	r3, [r3, #48]	; 0x30
   2e3ac:	cmp	r2, r3
   2e3b0:	blt	2e3bc <__assert_fail@plt+0x1d0cc>
   2e3b4:	mov	r3, #0
   2e3b8:	b	2e864 <__assert_fail@plt+0x1d574>
   2e3bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e3c0:	ldr	r2, [r3, #4]
   2e3c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e3c8:	add	r3, r3, #1
   2e3cc:	add	r3, r2, r3
   2e3d0:	ldrb	r3, [r3]
   2e3d4:	strb	r3, [fp, #-22]	; 0xffffffea
   2e3d8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e3dc:	cmp	r3, #223	; 0xdf
   2e3e0:	bhi	2e40c <__assert_fail@plt+0x1d11c>
   2e3e4:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   2e3e8:	cmp	r3, #0
   2e3ec:	bge	2e3fc <__assert_fail@plt+0x1d10c>
   2e3f0:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2e3f4:	cmp	r3, #191	; 0xbf
   2e3f8:	bls	2e404 <__assert_fail@plt+0x1d114>
   2e3fc:	mov	r3, #0
   2e400:	b	2e864 <__assert_fail@plt+0x1d574>
   2e404:	mov	r3, #2
   2e408:	b	2e864 <__assert_fail@plt+0x1d574>
   2e40c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e410:	cmp	r3, #239	; 0xef
   2e414:	bhi	2e440 <__assert_fail@plt+0x1d150>
   2e418:	mov	r3, #3
   2e41c:	str	r3, [fp, #-8]
   2e420:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e424:	cmp	r3, #224	; 0xe0
   2e428:	bne	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e42c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2e430:	cmp	r3, #159	; 0x9f
   2e434:	bhi	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e438:	mov	r3, #0
   2e43c:	b	2e864 <__assert_fail@plt+0x1d574>
   2e440:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e444:	cmp	r3, #247	; 0xf7
   2e448:	bhi	2e474 <__assert_fail@plt+0x1d184>
   2e44c:	mov	r3, #4
   2e450:	str	r3, [fp, #-8]
   2e454:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e458:	cmp	r3, #240	; 0xf0
   2e45c:	bne	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e460:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2e464:	cmp	r3, #143	; 0x8f
   2e468:	bhi	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e46c:	mov	r3, #0
   2e470:	b	2e864 <__assert_fail@plt+0x1d574>
   2e474:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e478:	cmp	r3, #251	; 0xfb
   2e47c:	bhi	2e4a8 <__assert_fail@plt+0x1d1b8>
   2e480:	mov	r3, #5
   2e484:	str	r3, [fp, #-8]
   2e488:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e48c:	cmp	r3, #248	; 0xf8
   2e490:	bne	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e494:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2e498:	cmp	r3, #135	; 0x87
   2e49c:	bhi	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e4a0:	mov	r3, #0
   2e4a4:	b	2e864 <__assert_fail@plt+0x1d574>
   2e4a8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e4ac:	cmp	r3, #253	; 0xfd
   2e4b0:	bhi	2e4dc <__assert_fail@plt+0x1d1ec>
   2e4b4:	mov	r3, #6
   2e4b8:	str	r3, [fp, #-8]
   2e4bc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2e4c0:	cmp	r3, #252	; 0xfc
   2e4c4:	bne	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e4c8:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2e4cc:	cmp	r3, #131	; 0x83
   2e4d0:	bhi	2e4e4 <__assert_fail@plt+0x1d1f4>
   2e4d4:	mov	r3, #0
   2e4d8:	b	2e864 <__assert_fail@plt+0x1d574>
   2e4dc:	mov	r3, #0
   2e4e0:	b	2e864 <__assert_fail@plt+0x1d574>
   2e4e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2e4e8:	ldr	r3, [fp, #-8]
   2e4ec:	add	r2, r2, r3
   2e4f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e4f4:	ldr	r3, [r3, #48]	; 0x30
   2e4f8:	cmp	r2, r3
   2e4fc:	ble	2e508 <__assert_fail@plt+0x1d218>
   2e500:	mov	r3, #0
   2e504:	b	2e864 <__assert_fail@plt+0x1d574>
   2e508:	mov	r3, #1
   2e50c:	str	r3, [fp, #-12]
   2e510:	b	2e560 <__assert_fail@plt+0x1d270>
   2e514:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e518:	ldr	r3, [r3, #4]
   2e51c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e520:	ldr	r2, [fp, #-12]
   2e524:	add	r2, r1, r2
   2e528:	add	r3, r3, r2
   2e52c:	ldrb	r3, [r3]
   2e530:	strb	r3, [fp, #-22]	; 0xffffffea
   2e534:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   2e538:	cmp	r3, #0
   2e53c:	bge	2e54c <__assert_fail@plt+0x1d25c>
   2e540:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2e544:	cmp	r3, #191	; 0xbf
   2e548:	bls	2e554 <__assert_fail@plt+0x1d264>
   2e54c:	mov	r3, #0
   2e550:	b	2e864 <__assert_fail@plt+0x1d574>
   2e554:	ldr	r3, [fp, #-12]
   2e558:	add	r3, r3, #1
   2e55c:	str	r3, [fp, #-12]
   2e560:	ldr	r2, [fp, #-12]
   2e564:	ldr	r3, [fp, #-8]
   2e568:	cmp	r2, r3
   2e56c:	blt	2e514 <__assert_fail@plt+0x1d224>
   2e570:	ldr	r3, [fp, #-8]
   2e574:	b	2e864 <__assert_fail@plt+0x1d574>
   2e578:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e57c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e580:	bl	16308 <__assert_fail@plt+0x5018>
   2e584:	str	r0, [fp, #-8]
   2e588:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e58c:	ldrb	r3, [r3, #4]
   2e590:	cmp	r3, #5
   2e594:	bne	2e61c <__assert_fail@plt+0x1d32c>
   2e598:	ldr	r3, [fp, #-8]
   2e59c:	cmp	r3, #1
   2e5a0:	bgt	2e5ac <__assert_fail@plt+0x1d2bc>
   2e5a4:	mov	r3, #0
   2e5a8:	b	2e864 <__assert_fail@plt+0x1d574>
   2e5ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e5b0:	ldr	r3, [r3, #128]	; 0x80
   2e5b4:	and	r3, r3, #64	; 0x40
   2e5b8:	cmp	r3, #0
   2e5bc:	bne	2e5dc <__assert_fail@plt+0x1d2ec>
   2e5c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e5c4:	ldr	r2, [r3, #4]
   2e5c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e5cc:	add	r3, r2, r3
   2e5d0:	ldrb	r3, [r3]
   2e5d4:	cmp	r3, #10
   2e5d8:	beq	2e60c <__assert_fail@plt+0x1d31c>
   2e5dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e5e0:	ldr	r3, [r3, #128]	; 0x80
   2e5e4:	and	r3, r3, #128	; 0x80
   2e5e8:	cmp	r3, #0
   2e5ec:	beq	2e614 <__assert_fail@plt+0x1d324>
   2e5f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e5f4:	ldr	r2, [r3, #4]
   2e5f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e5fc:	add	r3, r2, r3
   2e600:	ldrb	r3, [r3]
   2e604:	cmp	r3, #0
   2e608:	bne	2e614 <__assert_fail@plt+0x1d324>
   2e60c:	mov	r3, #0
   2e610:	b	2e864 <__assert_fail@plt+0x1d574>
   2e614:	ldr	r3, [fp, #-8]
   2e618:	b	2e864 <__assert_fail@plt+0x1d574>
   2e61c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e620:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e624:	bl	16410 <__assert_fail@plt+0x5120>
   2e628:	str	r0, [fp, #-28]	; 0xffffffe4
   2e62c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e630:	cmp	r3, #1
   2e634:	bgt	2e644 <__assert_fail@plt+0x1d354>
   2e638:	ldr	r3, [fp, #-8]
   2e63c:	cmp	r3, #1
   2e640:	ble	2e650 <__assert_fail@plt+0x1d360>
   2e644:	ldr	r3, [fp, #-8]
   2e648:	cmp	r3, #0
   2e64c:	bne	2e658 <__assert_fail@plt+0x1d368>
   2e650:	mov	r3, #0
   2e654:	b	2e864 <__assert_fail@plt+0x1d574>
   2e658:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e65c:	ldrb	r3, [r3, #4]
   2e660:	cmp	r3, #6
   2e664:	bne	2e860 <__assert_fail@plt+0x1d570>
   2e668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e66c:	ldr	r3, [r3]
   2e670:	str	r3, [fp, #-32]	; 0xffffffe0
   2e674:	mov	r3, #0
   2e678:	str	r3, [fp, #-16]
   2e67c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e680:	ldr	r3, [r3, #32]
   2e684:	cmp	r3, #0
   2e688:	bne	2e6ac <__assert_fail@plt+0x1d3bc>
   2e68c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e690:	ldr	r3, [r3, #36]	; 0x24
   2e694:	cmp	r3, #0
   2e698:	bne	2e6ac <__assert_fail@plt+0x1d3bc>
   2e69c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e6a0:	ldr	r3, [r3, #20]
   2e6a4:	cmp	r3, #0
   2e6a8:	beq	2e6c0 <__assert_fail@plt+0x1d3d0>
   2e6ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e6b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e6b4:	bl	163ac <__assert_fail@plt+0x50bc>
   2e6b8:	mov	r3, r0
   2e6bc:	b	2e6c4 <__assert_fail@plt+0x1d3d4>
   2e6c0:	mov	r3, #0
   2e6c4:	str	r3, [fp, #-36]	; 0xffffffdc
   2e6c8:	mov	r3, #0
   2e6cc:	str	r3, [fp, #-12]
   2e6d0:	b	2e710 <__assert_fail@plt+0x1d420>
   2e6d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e6d8:	ldr	r2, [r3]
   2e6dc:	ldr	r3, [fp, #-12]
   2e6e0:	lsl	r3, r3, #2
   2e6e4:	add	r3, r2, r3
   2e6e8:	ldr	r3, [r3]
   2e6ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e6f0:	cmp	r2, r3
   2e6f4:	bne	2e704 <__assert_fail@plt+0x1d414>
   2e6f8:	ldr	r3, [fp, #-8]
   2e6fc:	str	r3, [fp, #-16]
   2e700:	b	2e814 <__assert_fail@plt+0x1d524>
   2e704:	ldr	r3, [fp, #-12]
   2e708:	add	r3, r3, #1
   2e70c:	str	r3, [fp, #-12]
   2e710:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e714:	ldr	r3, [r3, #20]
   2e718:	ldr	r2, [fp, #-12]
   2e71c:	cmp	r2, r3
   2e720:	blt	2e6d4 <__assert_fail@plt+0x1d3e4>
   2e724:	mov	r3, #0
   2e728:	str	r3, [fp, #-12]
   2e72c:	b	2e77c <__assert_fail@plt+0x1d48c>
   2e730:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e734:	ldr	r2, [r3, #12]
   2e738:	ldr	r3, [fp, #-12]
   2e73c:	lsl	r3, r3, #2
   2e740:	add	r3, r2, r3
   2e744:	ldr	r3, [r3]
   2e748:	str	r3, [fp, #-40]	; 0xffffffd8
   2e74c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2e750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e754:	bl	10ffc <iswctype@plt>
   2e758:	mov	r3, r0
   2e75c:	cmp	r3, #0
   2e760:	beq	2e770 <__assert_fail@plt+0x1d480>
   2e764:	ldr	r3, [fp, #-8]
   2e768:	str	r3, [fp, #-16]
   2e76c:	b	2e814 <__assert_fail@plt+0x1d524>
   2e770:	ldr	r3, [fp, #-12]
   2e774:	add	r3, r3, #1
   2e778:	str	r3, [fp, #-12]
   2e77c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e780:	ldr	r3, [r3, #36]	; 0x24
   2e784:	ldr	r2, [fp, #-12]
   2e788:	cmp	r2, r3
   2e78c:	blt	2e730 <__assert_fail@plt+0x1d440>
   2e790:	mov	r3, #0
   2e794:	str	r3, [fp, #-12]
   2e798:	b	2e7fc <__assert_fail@plt+0x1d50c>
   2e79c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e7a0:	ldr	r2, [r3, #4]
   2e7a4:	ldr	r3, [fp, #-12]
   2e7a8:	lsl	r3, r3, #2
   2e7ac:	add	r3, r2, r3
   2e7b0:	ldr	r3, [r3]
   2e7b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e7b8:	cmp	r2, r3
   2e7bc:	bcc	2e7f0 <__assert_fail@plt+0x1d500>
   2e7c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e7c4:	ldr	r2, [r3, #8]
   2e7c8:	ldr	r3, [fp, #-12]
   2e7cc:	lsl	r3, r3, #2
   2e7d0:	add	r3, r2, r3
   2e7d4:	ldr	r3, [r3]
   2e7d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e7dc:	cmp	r2, r3
   2e7e0:	bhi	2e7f0 <__assert_fail@plt+0x1d500>
   2e7e4:	ldr	r3, [fp, #-8]
   2e7e8:	str	r3, [fp, #-16]
   2e7ec:	b	2e814 <__assert_fail@plt+0x1d524>
   2e7f0:	ldr	r3, [fp, #-12]
   2e7f4:	add	r3, r3, #1
   2e7f8:	str	r3, [fp, #-12]
   2e7fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e800:	ldr	r3, [r3, #32]
   2e804:	ldr	r2, [fp, #-12]
   2e808:	cmp	r2, r3
   2e80c:	blt	2e79c <__assert_fail@plt+0x1d4ac>
   2e810:	nop	{0}
   2e814:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e818:	ldrb	r3, [r3, #16]
   2e81c:	and	r3, r3, #1
   2e820:	uxtb	r3, r3
   2e824:	cmp	r3, #0
   2e828:	bne	2e834 <__assert_fail@plt+0x1d544>
   2e82c:	ldr	r3, [fp, #-16]
   2e830:	b	2e864 <__assert_fail@plt+0x1d574>
   2e834:	ldr	r3, [fp, #-16]
   2e838:	cmp	r3, #0
   2e83c:	ble	2e848 <__assert_fail@plt+0x1d558>
   2e840:	mov	r3, #0
   2e844:	b	2e864 <__assert_fail@plt+0x1d574>
   2e848:	ldr	r2, [fp, #-8]
   2e84c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e850:	cmp	r2, r3
   2e854:	movge	r3, r2
   2e858:	movlt	r3, r3
   2e85c:	b	2e864 <__assert_fail@plt+0x1d574>
   2e860:	mov	r3, #0
   2e864:	mov	r0, r3
   2e868:	sub	sp, fp, #4
   2e86c:	ldr	fp, [sp]
   2e870:	add	sp, sp, #4
   2e874:	pop	{pc}		; (ldr pc, [sp], #4)
   2e878:	str	fp, [sp, #-8]!
   2e87c:	str	lr, [sp, #4]
   2e880:	add	fp, sp, #4
   2e884:	sub	sp, sp, #24
   2e888:	str	r0, [fp, #-16]
   2e88c:	str	r1, [fp, #-20]	; 0xffffffec
   2e890:	str	r2, [fp, #-24]	; 0xffffffe8
   2e894:	ldr	r3, [fp, #-16]
   2e898:	ldr	r2, [r3, #4]
   2e89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e8a0:	add	r3, r2, r3
   2e8a4:	ldrb	r3, [r3]
   2e8a8:	strb	r3, [fp, #-5]
   2e8ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8b0:	ldrb	r3, [r3, #4]
   2e8b4:	sub	r3, r3, #1
   2e8b8:	cmp	r3, #6
   2e8bc:	ldrls	pc, [pc, r3, lsl #2]
   2e8c0:	b	2e994 <__assert_fail@plt+0x1d6a4>
   2e8c4:	andeq	lr, r2, r0, ror #17
   2e8c8:	muleq	r2, r4, r9
   2e8cc:	strdeq	lr, [r2], -ip
   2e8d0:	muleq	r2, r4, r9
   2e8d4:	andeq	lr, r2, r4, asr #18
   2e8d8:	muleq	r2, r4, r9
   2e8dc:	andeq	lr, r2, r0, lsr r9
   2e8e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8e4:	ldrb	r3, [r3]
   2e8e8:	ldrb	r2, [fp, #-5]
   2e8ec:	cmp	r2, r3
   2e8f0:	beq	2e99c <__assert_fail@plt+0x1d6ac>
   2e8f4:	mov	r3, #0
   2e8f8:	b	2eaa4 <__assert_fail@plt+0x1d7b4>
   2e8fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e900:	ldr	r3, [r3]
   2e904:	ldrb	r2, [fp, #-5]
   2e908:	mov	r1, r2
   2e90c:	mov	r0, r3
   2e910:	bl	16064 <__assert_fail@plt+0x4d74>
   2e914:	mov	r3, r0
   2e918:	eor	r3, r3, #1
   2e91c:	uxtb	r3, r3
   2e920:	cmp	r3, #0
   2e924:	beq	2e9a4 <__assert_fail@plt+0x1d6b4>
   2e928:	mov	r3, #0
   2e92c:	b	2eaa4 <__assert_fail@plt+0x1d7b4>
   2e930:	ldrsb	r3, [fp, #-5]
   2e934:	cmp	r3, #0
   2e938:	bge	2e944 <__assert_fail@plt+0x1d654>
   2e93c:	mov	r3, #0
   2e940:	b	2eaa4 <__assert_fail@plt+0x1d7b4>
   2e944:	ldrb	r3, [fp, #-5]
   2e948:	cmp	r3, #10
   2e94c:	bne	2e968 <__assert_fail@plt+0x1d678>
   2e950:	ldr	r3, [fp, #-16]
   2e954:	ldr	r3, [r3, #84]	; 0x54
   2e958:	ldr	r3, [r3, #128]	; 0x80
   2e95c:	and	r3, r3, #64	; 0x40
   2e960:	cmp	r3, #0
   2e964:	beq	2e98c <__assert_fail@plt+0x1d69c>
   2e968:	ldrb	r3, [fp, #-5]
   2e96c:	cmp	r3, #0
   2e970:	bne	2e9ac <__assert_fail@plt+0x1d6bc>
   2e974:	ldr	r3, [fp, #-16]
   2e978:	ldr	r3, [r3, #84]	; 0x54
   2e97c:	ldr	r3, [r3, #128]	; 0x80
   2e980:	and	r3, r3, #128	; 0x80
   2e984:	cmp	r3, #0
   2e988:	beq	2e9ac <__assert_fail@plt+0x1d6bc>
   2e98c:	mov	r3, #0
   2e990:	b	2eaa4 <__assert_fail@plt+0x1d7b4>
   2e994:	mov	r3, #0
   2e998:	b	2eaa4 <__assert_fail@plt+0x1d7b4>
   2e99c:	nop	{0}
   2e9a0:	b	2e9b0 <__assert_fail@plt+0x1d6c0>
   2e9a4:	nop	{0}
   2e9a8:	b	2e9b0 <__assert_fail@plt+0x1d6c0>
   2e9ac:	nop	{0}
   2e9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e9b4:	ldr	r2, [r3, #4]
   2e9b8:	mov	r3, #65280	; 0xff00
   2e9bc:	movt	r3, #3
   2e9c0:	and	r3, r3, r2
   2e9c4:	cmp	r3, #0
   2e9c8:	beq	2eaa0 <__assert_fail@plt+0x1d7b0>
   2e9cc:	ldr	r0, [fp, #-16]
   2e9d0:	ldr	r3, [fp, #-16]
   2e9d4:	ldr	r3, [r3, #88]	; 0x58
   2e9d8:	mov	r2, r3
   2e9dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e9e0:	bl	18d10 <__assert_fail@plt+0x7a20>
   2e9e4:	str	r0, [fp, #-12]
   2e9e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e9ec:	ldr	r3, [r3, #4]
   2e9f0:	ubfx	r3, r3, #8, #10
   2e9f4:	uxth	r3, r3
   2e9f8:	and	r3, r3, #4
   2e9fc:	cmp	r3, #0
   2ea00:	beq	2ea14 <__assert_fail@plt+0x1d724>
   2ea04:	ldr	r3, [fp, #-12]
   2ea08:	and	r3, r3, #1
   2ea0c:	cmp	r3, #0
   2ea10:	beq	2ea98 <__assert_fail@plt+0x1d7a8>
   2ea14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea18:	ldr	r3, [r3, #4]
   2ea1c:	ubfx	r3, r3, #8, #10
   2ea20:	uxth	r3, r3
   2ea24:	and	r3, r3, #8
   2ea28:	cmp	r3, #0
   2ea2c:	beq	2ea40 <__assert_fail@plt+0x1d750>
   2ea30:	ldr	r3, [fp, #-12]
   2ea34:	and	r3, r3, #1
   2ea38:	cmp	r3, #0
   2ea3c:	bne	2ea98 <__assert_fail@plt+0x1d7a8>
   2ea40:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea44:	ldr	r3, [r3, #4]
   2ea48:	ubfx	r3, r3, #8, #10
   2ea4c:	uxth	r3, r3
   2ea50:	and	r3, r3, #32
   2ea54:	cmp	r3, #0
   2ea58:	beq	2ea6c <__assert_fail@plt+0x1d77c>
   2ea5c:	ldr	r3, [fp, #-12]
   2ea60:	and	r3, r3, #2
   2ea64:	cmp	r3, #0
   2ea68:	beq	2ea98 <__assert_fail@plt+0x1d7a8>
   2ea6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea70:	ldr	r3, [r3, #4]
   2ea74:	ubfx	r3, r3, #8, #10
   2ea78:	uxth	r3, r3
   2ea7c:	and	r3, r3, #128	; 0x80
   2ea80:	cmp	r3, #0
   2ea84:	beq	2eaa0 <__assert_fail@plt+0x1d7b0>
   2ea88:	ldr	r3, [fp, #-12]
   2ea8c:	and	r3, r3, #8
   2ea90:	cmp	r3, #0
   2ea94:	bne	2eaa0 <__assert_fail@plt+0x1d7b0>
   2ea98:	mov	r3, #0
   2ea9c:	b	2eaa4 <__assert_fail@plt+0x1d7b4>
   2eaa0:	mov	r3, #1
   2eaa4:	mov	r0, r3
   2eaa8:	sub	sp, fp, #4
   2eaac:	ldr	fp, [sp]
   2eab0:	add	sp, sp, #4
   2eab4:	pop	{pc}		; (ldr pc, [sp], #4)
   2eab8:	str	fp, [sp, #-8]!
   2eabc:	str	lr, [sp, #4]
   2eac0:	add	fp, sp, #4
   2eac4:	sub	sp, sp, #24
   2eac8:	str	r0, [fp, #-24]	; 0xffffffe8
   2eacc:	str	r1, [fp, #-28]	; 0xffffffe4
   2ead0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ead4:	str	r3, [fp, #-8]
   2ead8:	ldr	r3, [fp, #-8]
   2eadc:	ldr	r3, [r3, #36]	; 0x24
   2eae0:	cmn	r3, #-536870910	; 0xe0000002
   2eae4:	movhi	r3, #1
   2eae8:	movls	r3, #0
   2eaec:	uxtb	r3, r3
   2eaf0:	cmp	r3, #0
   2eaf4:	beq	2eb00 <__assert_fail@plt+0x1d810>
   2eaf8:	mov	r3, #12
   2eafc:	b	2ec60 <__assert_fail@plt+0x1d970>
   2eb00:	ldr	r3, [fp, #-8]
   2eb04:	ldr	r3, [r3, #36]	; 0x24
   2eb08:	lsl	r2, r3, #1
   2eb0c:	ldr	r3, [fp, #-8]
   2eb10:	ldr	r3, [r3, #48]	; 0x30
   2eb14:	cmp	r2, r3
   2eb18:	movlt	r2, r2
   2eb1c:	movge	r2, r3
   2eb20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb24:	cmp	r2, r3
   2eb28:	movge	r3, r2
   2eb2c:	movlt	r3, r3
   2eb30:	mov	r1, r3
   2eb34:	ldr	r0, [fp, #-8]
   2eb38:	bl	167ac <__assert_fail@plt+0x54bc>
   2eb3c:	str	r0, [fp, #-12]
   2eb40:	ldr	r3, [fp, #-12]
   2eb44:	cmp	r3, #0
   2eb48:	movne	r3, #1
   2eb4c:	moveq	r3, #0
   2eb50:	uxtb	r3, r3
   2eb54:	cmp	r3, #0
   2eb58:	beq	2eb64 <__assert_fail@plt+0x1d874>
   2eb5c:	ldr	r3, [fp, #-12]
   2eb60:	b	2ec60 <__assert_fail@plt+0x1d970>
   2eb64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb68:	ldr	r3, [r3, #100]	; 0x64
   2eb6c:	cmp	r3, #0
   2eb70:	beq	2ebcc <__assert_fail@plt+0x1d8dc>
   2eb74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb78:	ldr	r2, [r3, #100]	; 0x64
   2eb7c:	ldr	r3, [fp, #-8]
   2eb80:	ldr	r3, [r3, #36]	; 0x24
   2eb84:	add	r3, r3, #1
   2eb88:	lsl	r3, r3, #2
   2eb8c:	mov	r1, r3
   2eb90:	mov	r0, r2
   2eb94:	bl	313dc <__assert_fail@plt+0x200ec>
   2eb98:	str	r0, [fp, #-16]
   2eb9c:	ldr	r3, [fp, #-16]
   2eba0:	cmp	r3, #0
   2eba4:	moveq	r3, #1
   2eba8:	movne	r3, #0
   2ebac:	uxtb	r3, r3
   2ebb0:	cmp	r3, #0
   2ebb4:	beq	2ebc0 <__assert_fail@plt+0x1d8d0>
   2ebb8:	mov	r3, #12
   2ebbc:	b	2ec60 <__assert_fail@plt+0x1d970>
   2ebc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ebc4:	ldr	r2, [fp, #-16]
   2ebc8:	str	r2, [r3, #100]	; 0x64
   2ebcc:	ldr	r3, [fp, #-8]
   2ebd0:	ldrb	r3, [r3, #72]	; 0x48
   2ebd4:	cmp	r3, #0
   2ebd8:	beq	2ec28 <__assert_fail@plt+0x1d938>
   2ebdc:	ldr	r3, [fp, #-8]
   2ebe0:	ldr	r3, [r3, #80]	; 0x50
   2ebe4:	cmp	r3, #1
   2ebe8:	ble	2ec1c <__assert_fail@plt+0x1d92c>
   2ebec:	ldr	r0, [fp, #-8]
   2ebf0:	bl	16ddc <__assert_fail@plt+0x5aec>
   2ebf4:	str	r0, [fp, #-12]
   2ebf8:	ldr	r3, [fp, #-12]
   2ebfc:	cmp	r3, #0
   2ec00:	movne	r3, #1
   2ec04:	moveq	r3, #0
   2ec08:	uxtb	r3, r3
   2ec0c:	cmp	r3, #0
   2ec10:	beq	2ec5c <__assert_fail@plt+0x1d96c>
   2ec14:	ldr	r3, [fp, #-12]
   2ec18:	b	2ec60 <__assert_fail@plt+0x1d970>
   2ec1c:	ldr	r0, [fp, #-8]
   2ec20:	bl	17ac8 <__assert_fail@plt+0x67d8>
   2ec24:	b	2ec5c <__assert_fail@plt+0x1d96c>
   2ec28:	ldr	r3, [fp, #-8]
   2ec2c:	ldr	r3, [r3, #80]	; 0x50
   2ec30:	cmp	r3, #1
   2ec34:	ble	2ec44 <__assert_fail@plt+0x1d954>
   2ec38:	ldr	r0, [fp, #-8]
   2ec3c:	bl	16a58 <__assert_fail@plt+0x5768>
   2ec40:	b	2ec5c <__assert_fail@plt+0x1d96c>
   2ec44:	ldr	r3, [fp, #-8]
   2ec48:	ldr	r3, [r3, #64]	; 0x40
   2ec4c:	cmp	r3, #0
   2ec50:	beq	2ec5c <__assert_fail@plt+0x1d96c>
   2ec54:	ldr	r0, [fp, #-8]
   2ec58:	bl	17bd4 <__assert_fail@plt+0x68e4>
   2ec5c:	mov	r3, #0
   2ec60:	mov	r0, r3
   2ec64:	sub	sp, fp, #4
   2ec68:	ldr	fp, [sp]
   2ec6c:	add	sp, sp, #4
   2ec70:	pop	{pc}		; (ldr pc, [sp], #4)
   2ec74:	str	fp, [sp, #-8]!
   2ec78:	str	lr, [sp, #4]
   2ec7c:	add	fp, sp, #4
   2ec80:	sub	sp, sp, #24
   2ec84:	str	r0, [fp, #-16]
   2ec88:	str	r1, [fp, #-20]	; 0xffffffec
   2ec8c:	str	r2, [fp, #-24]	; 0xffffffe8
   2ec90:	ldr	r3, [fp, #-16]
   2ec94:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ec98:	str	r2, [r3, #88]	; 0x58
   2ec9c:	ldr	r3, [fp, #-16]
   2eca0:	mvn	r2, #0
   2eca4:	str	r2, [r3, #92]	; 0x5c
   2eca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ecac:	cmp	r3, #0
   2ecb0:	ble	2ed9c <__assert_fail@plt+0x1daac>
   2ecb4:	mov	r3, #24
   2ecb8:	str	r3, [fp, #-8]
   2ecbc:	mvn	r2, #0
   2ecc0:	ldr	r3, [fp, #-8]
   2ecc4:	udiv	r3, r2, r3
   2ecc8:	cmp	r3, #0
   2eccc:	blt	2ece0 <__assert_fail@plt+0x1d9f0>
   2ecd0:	mvn	r2, #0
   2ecd4:	ldr	r3, [fp, #-8]
   2ecd8:	udiv	r3, r2, r3
   2ecdc:	b	2ece4 <__assert_fail@plt+0x1d9f4>
   2ece0:	mvn	r3, #-2147483648	; 0x80000000
   2ece4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ece8:	cmp	r3, r2
   2ecec:	movcc	r3, #1
   2ecf0:	movcs	r3, #0
   2ecf4:	uxtb	r3, r3
   2ecf8:	cmp	r3, #0
   2ecfc:	beq	2ed08 <__assert_fail@plt+0x1da18>
   2ed00:	mov	r3, #12
   2ed04:	b	2edc4 <__assert_fail@plt+0x1dad4>
   2ed08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ed0c:	mov	r3, r2
   2ed10:	lsl	r3, r3, #1
   2ed14:	add	r3, r3, r2
   2ed18:	lsl	r3, r3, #3
   2ed1c:	mov	r0, r3
   2ed20:	bl	3134c <__assert_fail@plt+0x2005c>
   2ed24:	mov	r3, r0
   2ed28:	mov	r2, r3
   2ed2c:	ldr	r3, [fp, #-16]
   2ed30:	str	r2, [r3, #116]	; 0x74
   2ed34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed38:	lsl	r3, r3, #2
   2ed3c:	mov	r0, r3
   2ed40:	bl	3134c <__assert_fail@plt+0x2005c>
   2ed44:	mov	r3, r0
   2ed48:	mov	r2, r3
   2ed4c:	ldr	r3, [fp, #-16]
   2ed50:	str	r2, [r3, #132]	; 0x84
   2ed54:	ldr	r3, [fp, #-16]
   2ed58:	ldr	r3, [r3, #116]	; 0x74
   2ed5c:	cmp	r3, #0
   2ed60:	moveq	r3, #1
   2ed64:	movne	r3, #0
   2ed68:	uxtb	r3, r3
   2ed6c:	cmp	r3, #0
   2ed70:	bne	2ed94 <__assert_fail@plt+0x1daa4>
   2ed74:	ldr	r3, [fp, #-16]
   2ed78:	ldr	r3, [r3, #132]	; 0x84
   2ed7c:	cmp	r3, #0
   2ed80:	moveq	r3, #1
   2ed84:	movne	r3, #0
   2ed88:	uxtb	r3, r3
   2ed8c:	cmp	r3, #0
   2ed90:	beq	2ed9c <__assert_fail@plt+0x1daac>
   2ed94:	mov	r3, #12
   2ed98:	b	2edc4 <__assert_fail@plt+0x1dad4>
   2ed9c:	ldr	r3, [fp, #-16]
   2eda0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eda4:	str	r2, [r3, #112]	; 0x70
   2eda8:	ldr	r3, [fp, #-16]
   2edac:	mov	r2, #1
   2edb0:	str	r2, [r3, #120]	; 0x78
   2edb4:	ldr	r3, [fp, #-16]
   2edb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2edbc:	str	r2, [r3, #128]	; 0x80
   2edc0:	mov	r3, #0
   2edc4:	mov	r0, r3
   2edc8:	sub	sp, fp, #4
   2edcc:	ldr	fp, [sp]
   2edd0:	add	sp, sp, #4
   2edd4:	pop	{pc}		; (ldr pc, [sp], #4)
   2edd8:	str	fp, [sp, #-8]!
   2eddc:	str	lr, [sp, #4]
   2ede0:	add	fp, sp, #4
   2ede4:	sub	sp, sp, #24
   2ede8:	str	r0, [fp, #-24]	; 0xffffffe8
   2edec:	mov	r3, #0
   2edf0:	str	r3, [fp, #-8]
   2edf4:	b	2eecc <__assert_fail@plt+0x1dbdc>
   2edf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2edfc:	ldr	r2, [r3, #132]	; 0x84
   2ee00:	ldr	r3, [fp, #-8]
   2ee04:	lsl	r3, r3, #2
   2ee08:	add	r3, r2, r3
   2ee0c:	ldr	r3, [r3]
   2ee10:	str	r3, [fp, #-16]
   2ee14:	mov	r3, #0
   2ee18:	str	r3, [fp, #-12]
   2ee1c:	b	2ee60 <__assert_fail@plt+0x1db70>
   2ee20:	ldr	r3, [fp, #-16]
   2ee24:	ldr	r2, [r3, #20]
   2ee28:	ldr	r3, [fp, #-12]
   2ee2c:	lsl	r3, r3, #2
   2ee30:	add	r3, r2, r3
   2ee34:	ldr	r3, [r3]
   2ee38:	str	r3, [fp, #-20]	; 0xffffffec
   2ee3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ee40:	ldr	r3, [r3, #16]
   2ee44:	mov	r0, r3
   2ee48:	bl	31b28 <__assert_fail@plt+0x20838>
   2ee4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ee50:	bl	31b28 <__assert_fail@plt+0x20838>
   2ee54:	ldr	r3, [fp, #-12]
   2ee58:	add	r3, r3, #1
   2ee5c:	str	r3, [fp, #-12]
   2ee60:	ldr	r3, [fp, #-16]
   2ee64:	ldr	r3, [r3, #16]
   2ee68:	ldr	r2, [fp, #-12]
   2ee6c:	cmp	r2, r3
   2ee70:	blt	2ee20 <__assert_fail@plt+0x1db30>
   2ee74:	ldr	r3, [fp, #-16]
   2ee78:	ldr	r3, [r3, #20]
   2ee7c:	mov	r0, r3
   2ee80:	bl	31b28 <__assert_fail@plt+0x20838>
   2ee84:	ldr	r3, [fp, #-16]
   2ee88:	ldr	r3, [r3, #8]
   2ee8c:	cmp	r3, #0
   2ee90:	beq	2eeb8 <__assert_fail@plt+0x1dbc8>
   2ee94:	ldr	r3, [fp, #-16]
   2ee98:	ldr	r3, [r3, #8]
   2ee9c:	ldr	r3, [r3, #8]
   2eea0:	mov	r0, r3
   2eea4:	bl	31b28 <__assert_fail@plt+0x20838>
   2eea8:	ldr	r3, [fp, #-16]
   2eeac:	ldr	r3, [r3, #8]
   2eeb0:	mov	r0, r3
   2eeb4:	bl	31b28 <__assert_fail@plt+0x20838>
   2eeb8:	ldr	r0, [fp, #-16]
   2eebc:	bl	31b28 <__assert_fail@plt+0x20838>
   2eec0:	ldr	r3, [fp, #-8]
   2eec4:	add	r3, r3, #1
   2eec8:	str	r3, [fp, #-8]
   2eecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eed0:	ldr	r3, [r3, #124]	; 0x7c
   2eed4:	ldr	r2, [fp, #-8]
   2eed8:	cmp	r2, r3
   2eedc:	blt	2edf8 <__assert_fail@plt+0x1db08>
   2eee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eee4:	mov	r2, #0
   2eee8:	str	r2, [r3, #124]	; 0x7c
   2eeec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eef0:	mov	r2, #0
   2eef4:	str	r2, [r3, #108]	; 0x6c
   2eef8:	nop	{0}
   2eefc:	sub	sp, fp, #4
   2ef00:	ldr	fp, [sp]
   2ef04:	add	sp, sp, #4
   2ef08:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef0c:	str	fp, [sp, #-8]!
   2ef10:	str	lr, [sp, #4]
   2ef14:	add	fp, sp, #4
   2ef18:	sub	sp, sp, #8
   2ef1c:	str	r0, [fp, #-8]
   2ef20:	ldr	r0, [fp, #-8]
   2ef24:	bl	2edd8 <__assert_fail@plt+0x1dae8>
   2ef28:	ldr	r3, [fp, #-8]
   2ef2c:	ldr	r3, [r3, #132]	; 0x84
   2ef30:	mov	r0, r3
   2ef34:	bl	31b28 <__assert_fail@plt+0x20838>
   2ef38:	ldr	r3, [fp, #-8]
   2ef3c:	ldr	r3, [r3, #116]	; 0x74
   2ef40:	mov	r0, r3
   2ef44:	bl	31b28 <__assert_fail@plt+0x20838>
   2ef48:	nop	{0}
   2ef4c:	sub	sp, fp, #4
   2ef50:	ldr	fp, [sp]
   2ef54:	add	sp, sp, #4
   2ef58:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef5c:	str	fp, [sp, #-8]!
   2ef60:	str	lr, [sp, #4]
   2ef64:	add	fp, sp, #4
   2ef68:	sub	sp, sp, #24
   2ef6c:	str	r0, [fp, #-16]
   2ef70:	str	r1, [fp, #-20]	; 0xffffffec
   2ef74:	str	r2, [fp, #-24]	; 0xffffffe8
   2ef78:	str	r3, [fp, #-28]	; 0xffffffe4
   2ef7c:	ldr	r3, [fp, #-16]
   2ef80:	ldr	r2, [r3, #108]	; 0x6c
   2ef84:	ldr	r3, [fp, #-16]
   2ef88:	ldr	r3, [r3, #112]	; 0x70
   2ef8c:	cmp	r2, r3
   2ef90:	blt	2f068 <__assert_fail@plt+0x1dd78>
   2ef94:	ldr	r3, [fp, #-16]
   2ef98:	ldr	r0, [r3, #116]	; 0x74
   2ef9c:	ldr	r3, [fp, #-16]
   2efa0:	ldr	r3, [r3, #112]	; 0x70
   2efa4:	mov	r2, r3
   2efa8:	mov	r3, r2
   2efac:	lsl	r3, r3, #1
   2efb0:	add	r3, r3, r2
   2efb4:	lsl	r3, r3, #4
   2efb8:	mov	r1, r3
   2efbc:	bl	313dc <__assert_fail@plt+0x200ec>
   2efc0:	str	r0, [fp, #-8]
   2efc4:	ldr	r3, [fp, #-8]
   2efc8:	cmp	r3, #0
   2efcc:	moveq	r3, #1
   2efd0:	movne	r3, #0
   2efd4:	uxtb	r3, r3
   2efd8:	cmp	r3, #0
   2efdc:	beq	2eff8 <__assert_fail@plt+0x1dd08>
   2efe0:	ldr	r3, [fp, #-16]
   2efe4:	ldr	r3, [r3, #116]	; 0x74
   2efe8:	mov	r0, r3
   2efec:	bl	31b28 <__assert_fail@plt+0x20838>
   2eff0:	mov	r3, #12
   2eff4:	b	2f260 <__assert_fail@plt+0x1df70>
   2eff8:	ldr	r3, [fp, #-16]
   2effc:	ldr	r2, [fp, #-8]
   2f000:	str	r2, [r3, #116]	; 0x74
   2f004:	ldr	r3, [fp, #-16]
   2f008:	ldr	r2, [r3, #116]	; 0x74
   2f00c:	ldr	r3, [fp, #-16]
   2f010:	ldr	r3, [r3, #108]	; 0x6c
   2f014:	mov	r1, r3
   2f018:	mov	r3, r1
   2f01c:	lsl	r3, r3, #1
   2f020:	add	r3, r3, r1
   2f024:	lsl	r3, r3, #3
   2f028:	add	r0, r2, r3
   2f02c:	ldr	r3, [fp, #-16]
   2f030:	ldr	r3, [r3, #112]	; 0x70
   2f034:	mov	r2, r3
   2f038:	mov	r3, r2
   2f03c:	lsl	r3, r3, #1
   2f040:	add	r3, r3, r2
   2f044:	lsl	r3, r3, #3
   2f048:	mov	r2, r3
   2f04c:	mov	r1, #0
   2f050:	bl	11218 <memset@plt>
   2f054:	ldr	r3, [fp, #-16]
   2f058:	ldr	r3, [r3, #112]	; 0x70
   2f05c:	lsl	r2, r3, #1
   2f060:	ldr	r3, [fp, #-16]
   2f064:	str	r2, [r3, #112]	; 0x70
   2f068:	ldr	r3, [fp, #-16]
   2f06c:	ldr	r3, [r3, #108]	; 0x6c
   2f070:	cmp	r3, #0
   2f074:	ble	2f0e8 <__assert_fail@plt+0x1ddf8>
   2f078:	ldr	r3, [fp, #-16]
   2f07c:	ldr	r2, [r3, #116]	; 0x74
   2f080:	ldr	r3, [fp, #-16]
   2f084:	ldr	r3, [r3, #108]	; 0x6c
   2f088:	mov	r1, r3
   2f08c:	mov	r3, r1
   2f090:	lsl	r3, r3, #1
   2f094:	add	r3, r3, r1
   2f098:	lsl	r3, r3, #3
   2f09c:	sub	r3, r3, #24
   2f0a0:	add	r3, r2, r3
   2f0a4:	ldr	r3, [r3, #4]
   2f0a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f0ac:	cmp	r2, r3
   2f0b0:	bne	2f0e8 <__assert_fail@plt+0x1ddf8>
   2f0b4:	ldr	r3, [fp, #-16]
   2f0b8:	ldr	r2, [r3, #116]	; 0x74
   2f0bc:	ldr	r3, [fp, #-16]
   2f0c0:	ldr	r3, [r3, #108]	; 0x6c
   2f0c4:	mov	r1, r3
   2f0c8:	mov	r3, r1
   2f0cc:	lsl	r3, r3, #1
   2f0d0:	add	r3, r3, r1
   2f0d4:	lsl	r3, r3, #3
   2f0d8:	sub	r3, r3, #24
   2f0dc:	add	r3, r2, r3
   2f0e0:	mov	r2, #1
   2f0e4:	strb	r2, [r3, #20]
   2f0e8:	ldr	r3, [fp, #-16]
   2f0ec:	ldr	r2, [r3, #116]	; 0x74
   2f0f0:	ldr	r3, [fp, #-16]
   2f0f4:	ldr	r3, [r3, #108]	; 0x6c
   2f0f8:	mov	r1, r3
   2f0fc:	mov	r3, r1
   2f100:	lsl	r3, r3, #1
   2f104:	add	r3, r3, r1
   2f108:	lsl	r3, r3, #3
   2f10c:	add	r3, r2, r3
   2f110:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f114:	str	r2, [r3]
   2f118:	ldr	r3, [fp, #-16]
   2f11c:	ldr	r2, [r3, #116]	; 0x74
   2f120:	ldr	r3, [fp, #-16]
   2f124:	ldr	r3, [r3, #108]	; 0x6c
   2f128:	mov	r1, r3
   2f12c:	mov	r3, r1
   2f130:	lsl	r3, r3, #1
   2f134:	add	r3, r3, r1
   2f138:	lsl	r3, r3, #3
   2f13c:	add	r3, r2, r3
   2f140:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f144:	str	r2, [r3, #4]
   2f148:	ldr	r3, [fp, #-16]
   2f14c:	ldr	r2, [r3, #116]	; 0x74
   2f150:	ldr	r3, [fp, #-16]
   2f154:	ldr	r3, [r3, #108]	; 0x6c
   2f158:	mov	r1, r3
   2f15c:	mov	r3, r1
   2f160:	lsl	r3, r3, #1
   2f164:	add	r3, r3, r1
   2f168:	lsl	r3, r3, #3
   2f16c:	add	r3, r2, r3
   2f170:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f174:	str	r2, [r3, #8]
   2f178:	ldr	r3, [fp, #-16]
   2f17c:	ldr	r2, [r3, #116]	; 0x74
   2f180:	ldr	r3, [fp, #-16]
   2f184:	ldr	r3, [r3, #108]	; 0x6c
   2f188:	mov	r1, r3
   2f18c:	mov	r3, r1
   2f190:	lsl	r3, r3, #1
   2f194:	add	r3, r3, r1
   2f198:	lsl	r3, r3, #3
   2f19c:	add	r3, r2, r3
   2f1a0:	ldr	r2, [fp, #4]
   2f1a4:	str	r2, [r3, #12]
   2f1a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f1ac:	ldr	r3, [fp, #4]
   2f1b0:	cmp	r2, r3
   2f1b4:	bne	2f1c0 <__assert_fail@plt+0x1ded0>
   2f1b8:	mvn	r2, #0
   2f1bc:	b	2f1c4 <__assert_fail@plt+0x1ded4>
   2f1c0:	mov	r2, #0
   2f1c4:	ldr	r3, [fp, #-16]
   2f1c8:	ldr	r1, [r3, #116]	; 0x74
   2f1cc:	ldr	r3, [fp, #-16]
   2f1d0:	ldr	r3, [r3, #108]	; 0x6c
   2f1d4:	mov	r0, r3
   2f1d8:	mov	r3, r0
   2f1dc:	lsl	r3, r3, #1
   2f1e0:	add	r3, r3, r0
   2f1e4:	lsl	r3, r3, #3
   2f1e8:	add	r3, r1, r3
   2f1ec:	str	r2, [r3, #16]
   2f1f0:	ldr	r3, [fp, #-16]
   2f1f4:	ldr	r2, [r3, #116]	; 0x74
   2f1f8:	ldr	r3, [fp, #-16]
   2f1fc:	ldr	r3, [r3, #108]	; 0x6c
   2f200:	add	r0, r3, #1
   2f204:	ldr	r1, [fp, #-16]
   2f208:	str	r0, [r1, #108]	; 0x6c
   2f20c:	mov	r1, r3
   2f210:	mov	r3, r1
   2f214:	lsl	r3, r3, #1
   2f218:	add	r3, r3, r1
   2f21c:	lsl	r3, r3, #3
   2f220:	add	r3, r2, r3
   2f224:	mov	r2, #0
   2f228:	strb	r2, [r3, #20]
   2f22c:	ldr	r3, [fp, #-16]
   2f230:	ldr	r2, [r3, #120]	; 0x78
   2f234:	ldr	r1, [fp, #4]
   2f238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f23c:	sub	r3, r1, r3
   2f240:	cmp	r2, r3
   2f244:	bge	2f25c <__assert_fail@plt+0x1df6c>
   2f248:	ldr	r2, [fp, #4]
   2f24c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f250:	sub	r2, r2, r3
   2f254:	ldr	r3, [fp, #-16]
   2f258:	str	r2, [r3, #120]	; 0x78
   2f25c:	mov	r3, #0
   2f260:	mov	r0, r3
   2f264:	sub	sp, fp, #4
   2f268:	ldr	fp, [sp]
   2f26c:	add	sp, sp, #4
   2f270:	pop	{pc}		; (ldr pc, [sp], #4)
   2f274:	push	{fp}		; (str fp, [sp, #-4]!)
   2f278:	add	fp, sp, #0
   2f27c:	sub	sp, sp, #28
   2f280:	str	r0, [fp, #-24]	; 0xffffffe8
   2f284:	str	r1, [fp, #-28]	; 0xffffffe4
   2f288:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f28c:	ldr	r3, [r3, #108]	; 0x6c
   2f290:	str	r3, [fp, #-12]
   2f294:	ldr	r3, [fp, #-12]
   2f298:	str	r3, [fp, #-16]
   2f29c:	mov	r3, #0
   2f2a0:	str	r3, [fp, #-8]
   2f2a4:	b	2f30c <__assert_fail@plt+0x1e01c>
   2f2a8:	ldr	r2, [fp, #-8]
   2f2ac:	ldr	r3, [fp, #-12]
   2f2b0:	add	r3, r2, r3
   2f2b4:	lsr	r2, r3, #31
   2f2b8:	add	r3, r2, r3
   2f2bc:	asr	r3, r3, #1
   2f2c0:	str	r3, [fp, #-20]	; 0xffffffec
   2f2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2c8:	ldr	r1, [r3, #116]	; 0x74
   2f2cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f2d0:	mov	r3, r2
   2f2d4:	lsl	r3, r3, #1
   2f2d8:	add	r3, r3, r2
   2f2dc:	lsl	r3, r3, #3
   2f2e0:	add	r3, r1, r3
   2f2e4:	ldr	r3, [r3, #4]
   2f2e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f2ec:	cmp	r2, r3
   2f2f0:	ble	2f304 <__assert_fail@plt+0x1e014>
   2f2f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f2f8:	add	r3, r3, #1
   2f2fc:	str	r3, [fp, #-8]
   2f300:	b	2f30c <__assert_fail@plt+0x1e01c>
   2f304:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f308:	str	r3, [fp, #-12]
   2f30c:	ldr	r2, [fp, #-8]
   2f310:	ldr	r3, [fp, #-12]
   2f314:	cmp	r2, r3
   2f318:	blt	2f2a8 <__assert_fail@plt+0x1dfb8>
   2f31c:	ldr	r2, [fp, #-8]
   2f320:	ldr	r3, [fp, #-16]
   2f324:	cmp	r2, r3
   2f328:	bge	2f364 <__assert_fail@plt+0x1e074>
   2f32c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f330:	ldr	r1, [r3, #116]	; 0x74
   2f334:	ldr	r2, [fp, #-8]
   2f338:	mov	r3, r2
   2f33c:	lsl	r3, r3, #1
   2f340:	add	r3, r3, r2
   2f344:	lsl	r3, r3, #3
   2f348:	add	r3, r1, r3
   2f34c:	ldr	r3, [r3, #4]
   2f350:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f354:	cmp	r2, r3
   2f358:	bne	2f364 <__assert_fail@plt+0x1e074>
   2f35c:	ldr	r3, [fp, #-8]
   2f360:	b	2f368 <__assert_fail@plt+0x1e078>
   2f364:	mvn	r3, #0
   2f368:	mov	r0, r3
   2f36c:	add	sp, fp, #0
   2f370:	pop	{fp}		; (ldr fp, [sp], #4)
   2f374:	bx	lr
   2f378:	str	r4, [sp, #-12]!
   2f37c:	str	fp, [sp, #4]
   2f380:	str	lr, [sp, #8]
   2f384:	add	fp, sp, #8
   2f388:	sub	sp, sp, #28
   2f38c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f390:	str	r1, [fp, #-28]	; 0xffffffe4
   2f394:	str	r2, [fp, #-32]	; 0xffffffe0
   2f398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f39c:	ldr	r3, [r3, #132]	; 0x84
   2f3a0:	cmp	r3, #0
   2f3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3a8:	ldr	r3, [r3, #128]	; 0x80
   2f3ac:	cmp	r3, #0
   2f3b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3b4:	ldr	r2, [r3, #124]	; 0x7c
   2f3b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3bc:	ldr	r3, [r3, #128]	; 0x80
   2f3c0:	cmp	r2, r3
   2f3c4:	moveq	r3, #1
   2f3c8:	movne	r3, #0
   2f3cc:	uxtb	r3, r3
   2f3d0:	cmp	r3, #0
   2f3d4:	beq	2f444 <__assert_fail@plt+0x1e154>
   2f3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3dc:	ldr	r3, [r3, #128]	; 0x80
   2f3e0:	lsl	r3, r3, #1
   2f3e4:	str	r3, [fp, #-16]
   2f3e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3ec:	ldr	r2, [r3, #132]	; 0x84
   2f3f0:	ldr	r3, [fp, #-16]
   2f3f4:	lsl	r3, r3, #2
   2f3f8:	mov	r1, r3
   2f3fc:	mov	r0, r2
   2f400:	bl	313dc <__assert_fail@plt+0x200ec>
   2f404:	str	r0, [fp, #-20]	; 0xffffffec
   2f408:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f40c:	cmp	r3, #0
   2f410:	moveq	r3, #1
   2f414:	movne	r3, #0
   2f418:	uxtb	r3, r3
   2f41c:	cmp	r3, #0
   2f420:	beq	2f42c <__assert_fail@plt+0x1e13c>
   2f424:	mov	r3, #12
   2f428:	b	2f504 <__assert_fail@plt+0x1e214>
   2f42c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f430:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f434:	str	r2, [r3, #132]	; 0x84
   2f438:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f43c:	ldr	r2, [fp, #-16]
   2f440:	str	r2, [r3, #128]	; 0x80
   2f444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f448:	ldr	r2, [r3, #132]	; 0x84
   2f44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f450:	ldr	r3, [r3, #124]	; 0x7c
   2f454:	lsl	r3, r3, #2
   2f458:	add	r4, r2, r3
   2f45c:	mov	r1, #24
   2f460:	mov	r0, #1
   2f464:	bl	3127c <__assert_fail@plt+0x1ff8c>
   2f468:	mov	r3, r0
   2f46c:	str	r3, [r4]
   2f470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f474:	ldr	r2, [r3, #132]	; 0x84
   2f478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f47c:	ldr	r3, [r3, #124]	; 0x7c
   2f480:	lsl	r3, r3, #2
   2f484:	add	r3, r2, r3
   2f488:	ldr	r3, [r3]
   2f48c:	cmp	r3, #0
   2f490:	moveq	r3, #1
   2f494:	movne	r3, #0
   2f498:	uxtb	r3, r3
   2f49c:	cmp	r3, #0
   2f4a0:	beq	2f4ac <__assert_fail@plt+0x1e1bc>
   2f4a4:	mov	r3, #12
   2f4a8:	b	2f504 <__assert_fail@plt+0x1e214>
   2f4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4b0:	ldr	r2, [r3, #132]	; 0x84
   2f4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4b8:	ldr	r3, [r3, #124]	; 0x7c
   2f4bc:	lsl	r3, r3, #2
   2f4c0:	add	r3, r2, r3
   2f4c4:	ldr	r3, [r3]
   2f4c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f4cc:	str	r2, [r3, #4]
   2f4d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4d4:	ldr	r2, [r3, #132]	; 0x84
   2f4d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4dc:	ldr	r3, [r3, #124]	; 0x7c
   2f4e0:	add	r0, r3, #1
   2f4e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f4e8:	str	r0, [r1, #124]	; 0x7c
   2f4ec:	lsl	r3, r3, #2
   2f4f0:	add	r3, r2, r3
   2f4f4:	ldr	r3, [r3]
   2f4f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f4fc:	str	r2, [r3]
   2f500:	mov	r3, #0
   2f504:	mov	r0, r3
   2f508:	sub	sp, fp, #8
   2f50c:	ldr	r4, [sp]
   2f510:	ldr	fp, [sp, #4]
   2f514:	add	sp, sp, #8
   2f518:	pop	{pc}		; (ldr pc, [sp], #4)
   2f51c:	str	fp, [sp, #-8]!
   2f520:	str	lr, [sp, #4]
   2f524:	add	fp, sp, #4
   2f528:	sub	sp, sp, #32
   2f52c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f530:	str	r1, [fp, #-28]	; 0xffffffe4
   2f534:	str	r2, [fp, #-32]	; 0xffffffe0
   2f538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f53c:	ldr	r2, [r3, #16]
   2f540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f544:	ldr	r3, [r3, #12]
   2f548:	cmp	r2, r3
   2f54c:	moveq	r3, #1
   2f550:	movne	r3, #0
   2f554:	uxtb	r3, r3
   2f558:	cmp	r3, #0
   2f55c:	beq	2f5d0 <__assert_fail@plt+0x1e2e0>
   2f560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f564:	ldr	r3, [r3, #12]
   2f568:	lsl	r3, r3, #1
   2f56c:	add	r3, r3, #1
   2f570:	str	r3, [fp, #-8]
   2f574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f578:	ldr	r2, [r3, #20]
   2f57c:	ldr	r3, [fp, #-8]
   2f580:	lsl	r3, r3, #2
   2f584:	mov	r1, r3
   2f588:	mov	r0, r2
   2f58c:	bl	313dc <__assert_fail@plt+0x200ec>
   2f590:	str	r0, [fp, #-12]
   2f594:	ldr	r3, [fp, #-12]
   2f598:	cmp	r3, #0
   2f59c:	moveq	r3, #1
   2f5a0:	movne	r3, #0
   2f5a4:	uxtb	r3, r3
   2f5a8:	cmp	r3, #0
   2f5ac:	beq	2f5b8 <__assert_fail@plt+0x1e2c8>
   2f5b0:	mov	r3, #0
   2f5b4:	b	2f650 <__assert_fail@plt+0x1e360>
   2f5b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f5bc:	ldr	r2, [fp, #-12]
   2f5c0:	str	r2, [r3, #20]
   2f5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f5c8:	ldr	r2, [fp, #-8]
   2f5cc:	str	r2, [r3, #12]
   2f5d0:	mov	r1, #20
   2f5d4:	mov	r0, #1
   2f5d8:	bl	3127c <__assert_fail@plt+0x1ff8c>
   2f5dc:	mov	r3, r0
   2f5e0:	str	r3, [fp, #-16]
   2f5e4:	ldr	r3, [fp, #-16]
   2f5e8:	cmp	r3, #0
   2f5ec:	movne	r3, #1
   2f5f0:	moveq	r3, #0
   2f5f4:	uxtb	r3, r3
   2f5f8:	cmp	r3, #0
   2f5fc:	beq	2f64c <__assert_fail@plt+0x1e35c>
   2f600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f604:	ldr	r2, [r3, #20]
   2f608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f60c:	ldr	r3, [r3, #16]
   2f610:	lsl	r3, r3, #2
   2f614:	add	r3, r2, r3
   2f618:	ldr	r2, [fp, #-16]
   2f61c:	str	r2, [r3]
   2f620:	ldr	r3, [fp, #-16]
   2f624:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f628:	str	r2, [r3]
   2f62c:	ldr	r3, [fp, #-16]
   2f630:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f634:	str	r2, [r3, #4]
   2f638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f63c:	ldr	r3, [r3, #16]
   2f640:	add	r2, r3, #1
   2f644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f648:	str	r2, [r3, #16]
   2f64c:	ldr	r3, [fp, #-16]
   2f650:	mov	r0, r3
   2f654:	sub	sp, fp, #4
   2f658:	ldr	fp, [sp]
   2f65c:	add	sp, sp, #4
   2f660:	pop	{pc}		; (ldr pc, [sp], #4)
   2f664:	str	fp, [sp, #-8]!
   2f668:	str	lr, [sp, #4]
   2f66c:	add	fp, sp, #4
   2f670:	sub	sp, sp, #16
   2f674:	str	r0, [fp, #-8]
   2f678:	str	r1, [fp, #-12]
   2f67c:	str	r2, [fp, #-16]
   2f680:	str	r3, [fp, #-20]	; 0xffffffec
   2f684:	ldr	r3, [fp, #-8]
   2f688:	ldr	r2, [fp, #-12]
   2f68c:	str	r2, [r3]
   2f690:	ldr	r3, [fp, #-8]
   2f694:	ldr	r2, [fp, #-16]
   2f698:	str	r2, [r3, #4]
   2f69c:	ldr	r3, [fp, #-8]
   2f6a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f6a4:	str	r2, [r3, #8]
   2f6a8:	ldr	r3, [fp, #-8]
   2f6ac:	ldr	r2, [fp, #4]
   2f6b0:	str	r2, [r3, #12]
   2f6b4:	ldr	r3, [fp, #-8]
   2f6b8:	add	r3, r3, #16
   2f6bc:	mov	r2, #12
   2f6c0:	mov	r1, #0
   2f6c4:	mov	r0, r3
   2f6c8:	bl	11218 <memset@plt>
   2f6cc:	nop	{0}
   2f6d0:	sub	sp, fp, #4
   2f6d4:	ldr	fp, [sp]
   2f6d8:	add	sp, sp, #4
   2f6dc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f6e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2f6e4:	strd	r6, [sp, #8]
   2f6e8:	str	fp, [sp, #16]
   2f6ec:	str	lr, [sp, #20]
   2f6f0:	add	fp, sp, #20
   2f6f4:	sub	sp, sp, #48	; 0x30
   2f6f8:	str	r0, [fp, #-24]	; 0xffffffe8
   2f6fc:	str	r1, [fp, #-28]	; 0xffffffe4
   2f700:	str	r2, [fp, #-32]	; 0xffffffe0
   2f704:	str	r3, [fp, #-36]	; 0xffffffdc
   2f708:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f70c:	cmp	r3, #0
   2f710:	beq	2f738 <__assert_fail@plt+0x1e448>
   2f714:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f718:	str	r3, [sp]
   2f71c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f720:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f724:	movw	r1, #14116	; 0x3724
   2f728:	movt	r1, #3
   2f72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f730:	bl	111e8 <fprintf@plt>
   2f734:	b	2f750 <__assert_fail@plt+0x1e460>
   2f738:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f73c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f740:	movw	r1, #14128	; 0x3730
   2f744:	movt	r1, #3
   2f748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f74c:	bl	111e8 <fprintf@plt>
   2f750:	movw	r0, #14136	; 0x3738
   2f754:	movt	r0, #3
   2f758:	bl	111c4 <gettext@plt>
   2f75c:	mov	r2, r0
   2f760:	movw	r3, #2022	; 0x7e6
   2f764:	movw	r1, #14920	; 0x3a48
   2f768:	movt	r1, #3
   2f76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f770:	bl	111e8 <fprintf@plt>
   2f774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f778:	mov	r0, #10
   2f77c:	bl	110d4 <fputc_unlocked@plt>
   2f780:	movw	r0, #14140	; 0x373c
   2f784:	movt	r0, #3
   2f788:	bl	111c4 <gettext@plt>
   2f78c:	mov	r3, r0
   2f790:	movw	r2, #14312	; 0x37e8
   2f794:	movt	r2, #3
   2f798:	mov	r1, r3
   2f79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7a0:	bl	111e8 <fprintf@plt>
   2f7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f7a8:	mov	r0, #10
   2f7ac:	bl	110d4 <fputc_unlocked@plt>
   2f7b0:	ldr	r3, [fp, #8]
   2f7b4:	cmp	r3, #9
   2f7b8:	ldrls	pc, [pc, r3, lsl #2]
   2f7bc:	b	2fb9c <__assert_fail@plt+0x1e8ac>
   2f7c0:	andeq	pc, r2, r8, asr #24
   2f7c4:	andeq	pc, r2, r8, ror #15
   2f7c8:	andeq	pc, r2, r0, lsl r8	; <UNPREDICTABLE>
   2f7cc:	andeq	pc, r2, r0, asr #16
   2f7d0:	andeq	pc, r2, r4, lsl #17
   2f7d4:	andeq	pc, r2, r0, ror #17
   2f7d8:	andeq	pc, r2, ip, asr #18
   2f7dc:	andeq	pc, r2, r8, asr #19
   2f7e0:	andeq	pc, r2, r4, asr sl	; <UNPREDICTABLE>
   2f7e4:	strdeq	pc, [r2], -r0
   2f7e8:	movw	r0, #14348	; 0x380c
   2f7ec:	movt	r0, #3
   2f7f0:	bl	111c4 <gettext@plt>
   2f7f4:	mov	r1, r0
   2f7f8:	ldr	r3, [fp, #4]
   2f7fc:	ldr	r3, [r3]
   2f800:	mov	r2, r3
   2f804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f808:	bl	111e8 <fprintf@plt>
   2f80c:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2f810:	movw	r0, #14364	; 0x381c
   2f814:	movt	r0, #3
   2f818:	bl	111c4 <gettext@plt>
   2f81c:	mov	r1, r0
   2f820:	ldr	r3, [fp, #4]
   2f824:	ldr	r2, [r3]
   2f828:	ldr	r3, [fp, #4]
   2f82c:	add	r3, r3, #4
   2f830:	ldr	r3, [r3]
   2f834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f838:	bl	111e8 <fprintf@plt>
   2f83c:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2f840:	movw	r0, #14388	; 0x3834
   2f844:	movt	r0, #3
   2f848:	bl	111c4 <gettext@plt>
   2f84c:	ldr	r3, [fp, #4]
   2f850:	ldr	r2, [r3]
   2f854:	ldr	r3, [fp, #4]
   2f858:	add	r3, r3, #4
   2f85c:	ldr	r1, [r3]
   2f860:	ldr	r3, [fp, #4]
   2f864:	add	r3, r3, #8
   2f868:	ldr	r3, [r3]
   2f86c:	str	r3, [sp]
   2f870:	mov	r3, r1
   2f874:	mov	r1, r0
   2f878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f87c:	bl	111e8 <fprintf@plt>
   2f880:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2f884:	movw	r0, #14416	; 0x3850
   2f888:	movt	r0, #3
   2f88c:	bl	111c4 <gettext@plt>
   2f890:	mov	ip, r0
   2f894:	ldr	r3, [fp, #4]
   2f898:	ldr	r1, [r3]
   2f89c:	ldr	r3, [fp, #4]
   2f8a0:	add	r3, r3, #4
   2f8a4:	ldr	r0, [r3]
   2f8a8:	ldr	r3, [fp, #4]
   2f8ac:	add	r3, r3, #8
   2f8b0:	ldr	r3, [r3]
   2f8b4:	ldr	r2, [fp, #4]
   2f8b8:	add	r2, r2, #12
   2f8bc:	ldr	r2, [r2]
   2f8c0:	str	r2, [sp, #4]
   2f8c4:	str	r3, [sp]
   2f8c8:	mov	r3, r0
   2f8cc:	mov	r2, r1
   2f8d0:	mov	r1, ip
   2f8d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8d8:	bl	111e8 <fprintf@plt>
   2f8dc:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2f8e0:	movw	r0, #14448	; 0x3870
   2f8e4:	movt	r0, #3
   2f8e8:	bl	111c4 <gettext@plt>
   2f8ec:	mov	lr, r0
   2f8f0:	ldr	r3, [fp, #4]
   2f8f4:	ldr	r0, [r3]
   2f8f8:	ldr	r3, [fp, #4]
   2f8fc:	add	r3, r3, #4
   2f900:	ldr	ip, [r3]
   2f904:	ldr	r3, [fp, #4]
   2f908:	add	r3, r3, #8
   2f90c:	ldr	r3, [r3]
   2f910:	ldr	r2, [fp, #4]
   2f914:	add	r2, r2, #12
   2f918:	ldr	r2, [r2]
   2f91c:	ldr	r1, [fp, #4]
   2f920:	add	r1, r1, #16
   2f924:	ldr	r1, [r1]
   2f928:	str	r1, [sp, #8]
   2f92c:	str	r2, [sp, #4]
   2f930:	str	r3, [sp]
   2f934:	mov	r3, ip
   2f938:	mov	r2, r0
   2f93c:	mov	r1, lr
   2f940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f944:	bl	111e8 <fprintf@plt>
   2f948:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2f94c:	movw	r0, #14484	; 0x3894
   2f950:	movt	r0, #3
   2f954:	bl	111c4 <gettext@plt>
   2f958:	mov	r4, r0
   2f95c:	ldr	r3, [fp, #4]
   2f960:	ldr	ip, [r3]
   2f964:	ldr	r3, [fp, #4]
   2f968:	add	r3, r3, #4
   2f96c:	ldr	lr, [r3]
   2f970:	ldr	r3, [fp, #4]
   2f974:	add	r3, r3, #8
   2f978:	ldr	r3, [r3]
   2f97c:	ldr	r2, [fp, #4]
   2f980:	add	r2, r2, #12
   2f984:	ldr	r2, [r2]
   2f988:	ldr	r1, [fp, #4]
   2f98c:	add	r1, r1, #16
   2f990:	ldr	r1, [r1]
   2f994:	ldr	r0, [fp, #4]
   2f998:	add	r0, r0, #20
   2f99c:	ldr	r0, [r0]
   2f9a0:	str	r0, [sp, #12]
   2f9a4:	str	r1, [sp, #8]
   2f9a8:	str	r2, [sp, #4]
   2f9ac:	str	r3, [sp]
   2f9b0:	mov	r3, lr
   2f9b4:	mov	r2, ip
   2f9b8:	mov	r1, r4
   2f9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f9c0:	bl	111e8 <fprintf@plt>
   2f9c4:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2f9c8:	movw	r0, #14524	; 0x38bc
   2f9cc:	movt	r0, #3
   2f9d0:	bl	111c4 <gettext@plt>
   2f9d4:	mov	r5, r0
   2f9d8:	ldr	r3, [fp, #4]
   2f9dc:	ldr	lr, [r3]
   2f9e0:	ldr	r3, [fp, #4]
   2f9e4:	add	r3, r3, #4
   2f9e8:	ldr	r4, [r3]
   2f9ec:	ldr	r3, [fp, #4]
   2f9f0:	add	r3, r3, #8
   2f9f4:	ldr	r3, [r3]
   2f9f8:	ldr	r2, [fp, #4]
   2f9fc:	add	r2, r2, #12
   2fa00:	ldr	r2, [r2]
   2fa04:	ldr	r1, [fp, #4]
   2fa08:	add	r1, r1, #16
   2fa0c:	ldr	r1, [r1]
   2fa10:	ldr	r0, [fp, #4]
   2fa14:	add	r0, r0, #20
   2fa18:	ldr	r0, [r0]
   2fa1c:	ldr	ip, [fp, #4]
   2fa20:	add	ip, ip, #24
   2fa24:	ldr	ip, [ip]
   2fa28:	str	ip, [sp, #16]
   2fa2c:	str	r0, [sp, #12]
   2fa30:	str	r1, [sp, #8]
   2fa34:	str	r2, [sp, #4]
   2fa38:	str	r3, [sp]
   2fa3c:	mov	r3, r4
   2fa40:	mov	r2, lr
   2fa44:	mov	r1, r5
   2fa48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa4c:	bl	111e8 <fprintf@plt>
   2fa50:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2fa54:	movw	r0, #14568	; 0x38e8
   2fa58:	movt	r0, #3
   2fa5c:	bl	111c4 <gettext@plt>
   2fa60:	mov	r6, r0
   2fa64:	ldr	r3, [fp, #4]
   2fa68:	ldr	r4, [r3]
   2fa6c:	ldr	r3, [fp, #4]
   2fa70:	add	r3, r3, #4
   2fa74:	ldr	r5, [r3]
   2fa78:	ldr	r3, [fp, #4]
   2fa7c:	add	r3, r3, #8
   2fa80:	ldr	r3, [r3]
   2fa84:	ldr	r2, [fp, #4]
   2fa88:	add	r2, r2, #12
   2fa8c:	ldr	r2, [r2]
   2fa90:	ldr	r1, [fp, #4]
   2fa94:	add	r1, r1, #16
   2fa98:	ldr	r1, [r1]
   2fa9c:	ldr	r0, [fp, #4]
   2faa0:	add	r0, r0, #20
   2faa4:	ldr	r0, [r0]
   2faa8:	ldr	ip, [fp, #4]
   2faac:	add	ip, ip, #24
   2fab0:	ldr	ip, [ip]
   2fab4:	ldr	lr, [fp, #4]
   2fab8:	add	lr, lr, #28
   2fabc:	ldr	lr, [lr]
   2fac0:	str	lr, [sp, #20]
   2fac4:	str	ip, [sp, #16]
   2fac8:	str	r0, [sp, #12]
   2facc:	str	r1, [sp, #8]
   2fad0:	str	r2, [sp, #4]
   2fad4:	str	r3, [sp]
   2fad8:	mov	r3, r5
   2fadc:	mov	r2, r4
   2fae0:	mov	r1, r6
   2fae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fae8:	bl	111e8 <fprintf@plt>
   2faec:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2faf0:	movw	r0, #14616	; 0x3918
   2faf4:	movt	r0, #3
   2faf8:	bl	111c4 <gettext@plt>
   2fafc:	mov	r7, r0
   2fb00:	ldr	r3, [fp, #4]
   2fb04:	ldr	r5, [r3]
   2fb08:	ldr	r3, [fp, #4]
   2fb0c:	add	r3, r3, #4
   2fb10:	ldr	r6, [r3]
   2fb14:	ldr	r3, [fp, #4]
   2fb18:	add	r3, r3, #8
   2fb1c:	ldr	r3, [r3]
   2fb20:	ldr	r2, [fp, #4]
   2fb24:	add	r2, r2, #12
   2fb28:	ldr	r2, [r2]
   2fb2c:	ldr	r1, [fp, #4]
   2fb30:	add	r1, r1, #16
   2fb34:	ldr	r1, [r1]
   2fb38:	ldr	r0, [fp, #4]
   2fb3c:	add	r0, r0, #20
   2fb40:	ldr	r0, [r0]
   2fb44:	ldr	ip, [fp, #4]
   2fb48:	add	ip, ip, #24
   2fb4c:	ldr	ip, [ip]
   2fb50:	ldr	lr, [fp, #4]
   2fb54:	add	lr, lr, #28
   2fb58:	ldr	lr, [lr]
   2fb5c:	ldr	r4, [fp, #4]
   2fb60:	add	r4, r4, #32
   2fb64:	ldr	r4, [r4]
   2fb68:	str	r4, [sp, #24]
   2fb6c:	str	lr, [sp, #20]
   2fb70:	str	ip, [sp, #16]
   2fb74:	str	r0, [sp, #12]
   2fb78:	str	r1, [sp, #8]
   2fb7c:	str	r2, [sp, #4]
   2fb80:	str	r3, [sp]
   2fb84:	mov	r3, r6
   2fb88:	mov	r2, r5
   2fb8c:	mov	r1, r7
   2fb90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb94:	bl	111e8 <fprintf@plt>
   2fb98:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2fb9c:	movw	r0, #14668	; 0x394c
   2fba0:	movt	r0, #3
   2fba4:	bl	111c4 <gettext@plt>
   2fba8:	mov	r7, r0
   2fbac:	ldr	r3, [fp, #4]
   2fbb0:	ldr	r5, [r3]
   2fbb4:	ldr	r3, [fp, #4]
   2fbb8:	add	r3, r3, #4
   2fbbc:	ldr	r6, [r3]
   2fbc0:	ldr	r3, [fp, #4]
   2fbc4:	add	r3, r3, #8
   2fbc8:	ldr	r3, [r3]
   2fbcc:	ldr	r2, [fp, #4]
   2fbd0:	add	r2, r2, #12
   2fbd4:	ldr	r2, [r2]
   2fbd8:	ldr	r1, [fp, #4]
   2fbdc:	add	r1, r1, #16
   2fbe0:	ldr	r1, [r1]
   2fbe4:	ldr	r0, [fp, #4]
   2fbe8:	add	r0, r0, #20
   2fbec:	ldr	r0, [r0]
   2fbf0:	ldr	ip, [fp, #4]
   2fbf4:	add	ip, ip, #24
   2fbf8:	ldr	ip, [ip]
   2fbfc:	ldr	lr, [fp, #4]
   2fc00:	add	lr, lr, #28
   2fc04:	ldr	lr, [lr]
   2fc08:	ldr	r4, [fp, #4]
   2fc0c:	add	r4, r4, #32
   2fc10:	ldr	r4, [r4]
   2fc14:	str	r4, [sp, #24]
   2fc18:	str	lr, [sp, #20]
   2fc1c:	str	ip, [sp, #16]
   2fc20:	str	r0, [sp, #12]
   2fc24:	str	r1, [sp, #8]
   2fc28:	str	r2, [sp, #4]
   2fc2c:	str	r3, [sp]
   2fc30:	mov	r3, r6
   2fc34:	mov	r2, r5
   2fc38:	mov	r1, r7
   2fc3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc40:	bl	111e8 <fprintf@plt>
   2fc44:	b	2fc4c <__assert_fail@plt+0x1e95c>
   2fc48:	nop	{0}
   2fc4c:	nop	{0}
   2fc50:	sub	sp, fp, #20
   2fc54:	ldrd	r4, [sp]
   2fc58:	ldrd	r6, [sp, #8]
   2fc5c:	ldr	fp, [sp, #16]
   2fc60:	add	sp, sp, #20
   2fc64:	pop	{pc}		; (ldr pc, [sp], #4)
   2fc68:	str	fp, [sp, #-8]!
   2fc6c:	str	lr, [sp, #4]
   2fc70:	add	fp, sp, #4
   2fc74:	sub	sp, sp, #32
   2fc78:	str	r0, [fp, #-16]
   2fc7c:	str	r1, [fp, #-20]	; 0xffffffec
   2fc80:	str	r2, [fp, #-24]	; 0xffffffe8
   2fc84:	str	r3, [fp, #-28]	; 0xffffffe4
   2fc88:	mov	r3, #0
   2fc8c:	str	r3, [fp, #-8]
   2fc90:	b	2fca0 <__assert_fail@plt+0x1e9b0>
   2fc94:	ldr	r3, [fp, #-8]
   2fc98:	add	r3, r3, #1
   2fc9c:	str	r3, [fp, #-8]
   2fca0:	ldr	r3, [fp, #-8]
   2fca4:	lsl	r3, r3, #2
   2fca8:	ldr	r2, [fp, #4]
   2fcac:	add	r3, r2, r3
   2fcb0:	ldr	r3, [r3]
   2fcb4:	cmp	r3, #0
   2fcb8:	bne	2fc94 <__assert_fail@plt+0x1e9a4>
   2fcbc:	ldr	r3, [fp, #-8]
   2fcc0:	str	r3, [sp, #4]
   2fcc4:	ldr	r3, [fp, #4]
   2fcc8:	str	r3, [sp]
   2fccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fcd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fcd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fcd8:	ldr	r0, [fp, #-16]
   2fcdc:	bl	2f6e0 <__assert_fail@plt+0x1e3f0>
   2fce0:	nop	{0}
   2fce4:	sub	sp, fp, #4
   2fce8:	ldr	fp, [sp]
   2fcec:	add	sp, sp, #4
   2fcf0:	pop	{pc}		; (ldr pc, [sp], #4)
   2fcf4:	str	fp, [sp, #-8]!
   2fcf8:	str	lr, [sp, #4]
   2fcfc:	add	fp, sp, #4
   2fd00:	sub	sp, sp, #72	; 0x48
   2fd04:	str	r0, [fp, #-56]	; 0xffffffc8
   2fd08:	str	r1, [fp, #-60]	; 0xffffffc4
   2fd0c:	str	r2, [fp, #-64]	; 0xffffffc0
   2fd10:	str	r3, [fp, #-68]	; 0xffffffbc
   2fd14:	mov	r3, #0
   2fd18:	str	r3, [fp, #-8]
   2fd1c:	b	2fd2c <__assert_fail@plt+0x1ea3c>
   2fd20:	ldr	r3, [fp, #-8]
   2fd24:	add	r3, r3, #1
   2fd28:	str	r3, [fp, #-8]
   2fd2c:	ldr	r3, [fp, #-8]
   2fd30:	cmp	r3, #9
   2fd34:	bhi	2fd78 <__assert_fail@plt+0x1ea88>
   2fd38:	ldr	r3, [fp, #4]
   2fd3c:	add	r2, r3, #4
   2fd40:	str	r2, [fp, #4]
   2fd44:	ldr	r2, [r3]
   2fd48:	ldr	r3, [fp, #-8]
   2fd4c:	lsl	r3, r3, #2
   2fd50:	sub	r1, fp, #4
   2fd54:	add	r3, r1, r3
   2fd58:	str	r2, [r3, #-44]	; 0xffffffd4
   2fd5c:	ldr	r3, [fp, #-8]
   2fd60:	lsl	r3, r3, #2
   2fd64:	sub	r2, fp, #4
   2fd68:	add	r3, r2, r3
   2fd6c:	ldr	r3, [r3, #-44]	; 0xffffffd4
   2fd70:	cmp	r3, #0
   2fd74:	bne	2fd20 <__assert_fail@plt+0x1ea30>
   2fd78:	ldr	r3, [fp, #-8]
   2fd7c:	str	r3, [sp, #4]
   2fd80:	sub	r3, fp, #48	; 0x30
   2fd84:	str	r3, [sp]
   2fd88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2fd8c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2fd90:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2fd94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2fd98:	bl	2f6e0 <__assert_fail@plt+0x1e3f0>
   2fd9c:	nop	{0}
   2fda0:	sub	sp, fp, #4
   2fda4:	ldr	fp, [sp]
   2fda8:	add	sp, sp, #4
   2fdac:	pop	{pc}		; (ldr pc, [sp], #4)
   2fdb0:	push	{r3}		; (str r3, [sp, #-4]!)
   2fdb4:	str	fp, [sp, #-8]!
   2fdb8:	str	lr, [sp, #4]
   2fdbc:	add	fp, sp, #4
   2fdc0:	sub	sp, sp, #36	; 0x24
   2fdc4:	str	r0, [fp, #-20]	; 0xffffffec
   2fdc8:	str	r1, [fp, #-24]	; 0xffffffe8
   2fdcc:	str	r2, [fp, #-28]	; 0xffffffe4
   2fdd0:	add	r3, fp, #8
   2fdd4:	str	r3, [fp, #-12]
   2fdd8:	ldr	r3, [fp, #-12]
   2fddc:	str	r3, [sp]
   2fde0:	ldr	r3, [fp, #4]
   2fde4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2fde8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fdec:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fdf0:	bl	2fcf4 <__assert_fail@plt+0x1ea04>
   2fdf4:	nop	{0}
   2fdf8:	sub	sp, fp, #4
   2fdfc:	ldr	fp, [sp]
   2fe00:	ldr	lr, [sp, #4]
   2fe04:	add	sp, sp, #8
   2fe08:	add	sp, sp, #4
   2fe0c:	bx	lr
   2fe10:	str	fp, [sp, #-8]!
   2fe14:	str	lr, [sp, #4]
   2fe18:	add	fp, sp, #4
   2fe1c:	movw	r3, #16852	; 0x41d4
   2fe20:	movt	r3, #4
   2fe24:	ldr	r3, [r3]
   2fe28:	mov	r1, r3
   2fe2c:	mov	r0, #10
   2fe30:	bl	110d4 <fputc_unlocked@plt>
   2fe34:	movw	r0, #14728	; 0x3988
   2fe38:	movt	r0, #3
   2fe3c:	bl	111c4 <gettext@plt>
   2fe40:	mov	r3, r0
   2fe44:	movw	r1, #14748	; 0x399c
   2fe48:	movt	r1, #3
   2fe4c:	mov	r0, r3
   2fe50:	bl	11020 <printf@plt>
   2fe54:	movw	r0, #14772	; 0x39b4
   2fe58:	movt	r0, #3
   2fe5c:	bl	111c4 <gettext@plt>
   2fe60:	mov	r3, r0
   2fe64:	movw	r2, #14792	; 0x39c8
   2fe68:	movt	r2, #3
   2fe6c:	movw	r1, #14832	; 0x39f0
   2fe70:	movt	r1, #3
   2fe74:	mov	r0, r3
   2fe78:	bl	11020 <printf@plt>
   2fe7c:	movw	r0, #14848	; 0x3a00
   2fe80:	movt	r0, #3
   2fe84:	bl	111c4 <gettext@plt>
   2fe88:	mov	r3, r0
   2fe8c:	movw	r1, #14888	; 0x3a28
   2fe90:	movt	r1, #3
   2fe94:	mov	r0, r3
   2fe98:	bl	11020 <printf@plt>
   2fe9c:	nop	{0}
   2fea0:	sub	sp, fp, #4
   2fea4:	ldr	fp, [sp]
   2fea8:	add	sp, sp, #4
   2feac:	pop	{pc}		; (ldr pc, [sp], #4)
   2feb0:	str	fp, [sp, #-8]!
   2feb4:	str	lr, [sp, #4]
   2feb8:	add	fp, sp, #4
   2febc:	sub	sp, sp, #16
   2fec0:	str	r0, [fp, #-8]
   2fec4:	str	r1, [fp, #-12]
   2fec8:	str	r2, [fp, #-16]
   2fecc:	ldr	r2, [fp, #-16]
   2fed0:	ldr	r1, [fp, #-12]
   2fed4:	ldr	r0, [fp, #-8]
   2fed8:	bl	30094 <__assert_fail@plt+0x1eda4>
   2fedc:	mov	r3, r0
   2fee0:	mov	r0, r3
   2fee4:	sub	sp, fp, #4
   2fee8:	ldr	fp, [sp]
   2feec:	add	sp, sp, #4
   2fef0:	pop	{pc}		; (ldr pc, [sp], #4)
   2fef4:	str	fp, [sp, #-8]!
   2fef8:	str	lr, [sp, #4]
   2fefc:	add	fp, sp, #4
   2ff00:	sub	sp, sp, #8
   2ff04:	str	r0, [fp, #-8]
   2ff08:	ldr	r3, [fp, #-8]
   2ff0c:	cmp	r3, #0
   2ff10:	bne	2ff18 <__assert_fail@plt+0x1ec28>
   2ff14:	bl	307a4 <__assert_fail@plt+0x1f4b4>
   2ff18:	ldr	r3, [fp, #-8]
   2ff1c:	mov	r0, r3
   2ff20:	sub	sp, fp, #4
   2ff24:	ldr	fp, [sp]
   2ff28:	add	sp, sp, #4
   2ff2c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ff30:	str	fp, [sp, #-8]!
   2ff34:	str	lr, [sp, #4]
   2ff38:	add	fp, sp, #4
   2ff3c:	sub	sp, sp, #8
   2ff40:	str	r0, [fp, #-8]
   2ff44:	ldr	r0, [fp, #-8]
   2ff48:	bl	3134c <__assert_fail@plt+0x2005c>
   2ff4c:	mov	r3, r0
   2ff50:	mov	r0, r3
   2ff54:	bl	2fef4 <__assert_fail@plt+0x1ec04>
   2ff58:	mov	r3, r0
   2ff5c:	mov	r0, r3
   2ff60:	sub	sp, fp, #4
   2ff64:	ldr	fp, [sp]
   2ff68:	add	sp, sp, #4
   2ff6c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ff70:	str	fp, [sp, #-8]!
   2ff74:	str	lr, [sp, #4]
   2ff78:	add	fp, sp, #4
   2ff7c:	sub	sp, sp, #8
   2ff80:	str	r0, [fp, #-8]
   2ff84:	ldr	r0, [fp, #-8]
   2ff88:	bl	31c00 <__assert_fail@plt+0x20910>
   2ff8c:	mov	r3, r0
   2ff90:	mov	r0, r3
   2ff94:	bl	2fef4 <__assert_fail@plt+0x1ec04>
   2ff98:	mov	r3, r0
   2ff9c:	mov	r0, r3
   2ffa0:	sub	sp, fp, #4
   2ffa4:	ldr	fp, [sp]
   2ffa8:	add	sp, sp, #4
   2ffac:	pop	{pc}		; (ldr pc, [sp], #4)
   2ffb0:	str	fp, [sp, #-8]!
   2ffb4:	str	lr, [sp, #4]
   2ffb8:	add	fp, sp, #4
   2ffbc:	sub	sp, sp, #8
   2ffc0:	str	r0, [fp, #-8]
   2ffc4:	ldr	r0, [fp, #-8]
   2ffc8:	bl	2ff30 <__assert_fail@plt+0x1ec40>
   2ffcc:	mov	r3, r0
   2ffd0:	mov	r0, r3
   2ffd4:	sub	sp, fp, #4
   2ffd8:	ldr	fp, [sp]
   2ffdc:	add	sp, sp, #4
   2ffe0:	pop	{pc}		; (ldr pc, [sp], #4)
   2ffe4:	str	fp, [sp, #-8]!
   2ffe8:	str	lr, [sp, #4]
   2ffec:	add	fp, sp, #4
   2fff0:	sub	sp, sp, #16
   2fff4:	str	r0, [fp, #-16]
   2fff8:	str	r1, [fp, #-20]	; 0xffffffec
   2fffc:	ldr	r1, [fp, #-20]	; 0xffffffec
   30000:	ldr	r0, [fp, #-16]
   30004:	bl	313dc <__assert_fail@plt+0x200ec>
   30008:	str	r0, [fp, #-8]
   3000c:	ldr	r3, [fp, #-8]
   30010:	cmp	r3, #0
   30014:	bne	30034 <__assert_fail@plt+0x1ed44>
   30018:	ldr	r3, [fp, #-16]
   3001c:	cmp	r3, #0
   30020:	beq	30030 <__assert_fail@plt+0x1ed40>
   30024:	ldr	r3, [fp, #-20]	; 0xffffffec
   30028:	cmp	r3, #0
   3002c:	beq	30034 <__assert_fail@plt+0x1ed44>
   30030:	bl	307a4 <__assert_fail@plt+0x1f4b4>
   30034:	ldr	r3, [fp, #-8]
   30038:	mov	r0, r3
   3003c:	sub	sp, fp, #4
   30040:	ldr	fp, [sp]
   30044:	add	sp, sp, #4
   30048:	pop	{pc}		; (ldr pc, [sp], #4)
   3004c:	str	fp, [sp, #-8]!
   30050:	str	lr, [sp, #4]
   30054:	add	fp, sp, #4
   30058:	sub	sp, sp, #8
   3005c:	str	r0, [fp, #-8]
   30060:	str	r1, [fp, #-12]
   30064:	ldr	r1, [fp, #-12]
   30068:	ldr	r0, [fp, #-8]
   3006c:	bl	31c38 <__assert_fail@plt+0x20948>
   30070:	mov	r3, r0
   30074:	mov	r0, r3
   30078:	bl	2fef4 <__assert_fail@plt+0x1ec04>
   3007c:	mov	r3, r0
   30080:	mov	r0, r3
   30084:	sub	sp, fp, #4
   30088:	ldr	fp, [sp]
   3008c:	add	sp, sp, #4
   30090:	pop	{pc}		; (ldr pc, [sp], #4)
   30094:	str	fp, [sp, #-8]!
   30098:	str	lr, [sp, #4]
   3009c:	add	fp, sp, #4
   300a0:	sub	sp, sp, #24
   300a4:	str	r0, [fp, #-16]
   300a8:	str	r1, [fp, #-20]	; 0xffffffec
   300ac:	str	r2, [fp, #-24]	; 0xffffffe8
   300b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   300b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   300b8:	ldr	r0, [fp, #-16]
   300bc:	bl	31e68 <__assert_fail@plt+0x20b78>
   300c0:	str	r0, [fp, #-8]
   300c4:	ldr	r3, [fp, #-8]
   300c8:	cmp	r3, #0
   300cc:	bne	300f8 <__assert_fail@plt+0x1ee08>
   300d0:	ldr	r3, [fp, #-16]
   300d4:	cmp	r3, #0
   300d8:	beq	300f4 <__assert_fail@plt+0x1ee04>
   300dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   300e0:	cmp	r3, #0
   300e4:	beq	300f8 <__assert_fail@plt+0x1ee08>
   300e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   300ec:	cmp	r3, #0
   300f0:	beq	300f8 <__assert_fail@plt+0x1ee08>
   300f4:	bl	307a4 <__assert_fail@plt+0x1f4b4>
   300f8:	ldr	r3, [fp, #-8]
   300fc:	mov	r0, r3
   30100:	sub	sp, fp, #4
   30104:	ldr	fp, [sp]
   30108:	add	sp, sp, #4
   3010c:	pop	{pc}		; (ldr pc, [sp], #4)
   30110:	str	fp, [sp, #-8]!
   30114:	str	lr, [sp, #4]
   30118:	add	fp, sp, #4
   3011c:	sub	sp, sp, #16
   30120:	str	r0, [fp, #-8]
   30124:	str	r1, [fp, #-12]
   30128:	str	r2, [fp, #-16]
   3012c:	ldr	r2, [fp, #-16]
   30130:	ldr	r1, [fp, #-12]
   30134:	ldr	r0, [fp, #-8]
   30138:	bl	31cd8 <__assert_fail@plt+0x209e8>
   3013c:	mov	r3, r0
   30140:	mov	r0, r3
   30144:	bl	2fef4 <__assert_fail@plt+0x1ec04>
   30148:	mov	r3, r0
   3014c:	mov	r0, r3
   30150:	sub	sp, fp, #4
   30154:	ldr	fp, [sp]
   30158:	add	sp, sp, #4
   3015c:	pop	{pc}		; (ldr pc, [sp], #4)
   30160:	str	fp, [sp, #-8]!
   30164:	str	lr, [sp, #4]
   30168:	add	fp, sp, #4
   3016c:	sub	sp, sp, #8
   30170:	str	r0, [fp, #-8]
   30174:	str	r1, [fp, #-12]
   30178:	ldr	r2, [fp, #-12]
   3017c:	ldr	r1, [fp, #-8]
   30180:	mov	r0, #0
   30184:	bl	30094 <__assert_fail@plt+0x1eda4>
   30188:	mov	r3, r0
   3018c:	mov	r0, r3
   30190:	sub	sp, fp, #4
   30194:	ldr	fp, [sp]
   30198:	add	sp, sp, #4
   3019c:	pop	{pc}		; (ldr pc, [sp], #4)
   301a0:	str	fp, [sp, #-8]!
   301a4:	str	lr, [sp, #4]
   301a8:	add	fp, sp, #4
   301ac:	sub	sp, sp, #8
   301b0:	str	r0, [fp, #-8]
   301b4:	str	r1, [fp, #-12]
   301b8:	ldr	r2, [fp, #-12]
   301bc:	ldr	r1, [fp, #-8]
   301c0:	mov	r0, #0
   301c4:	bl	30110 <__assert_fail@plt+0x1ee20>
   301c8:	mov	r3, r0
   301cc:	mov	r0, r3
   301d0:	sub	sp, fp, #4
   301d4:	ldr	fp, [sp]
   301d8:	add	sp, sp, #4
   301dc:	pop	{pc}		; (ldr pc, [sp], #4)
   301e0:	str	fp, [sp, #-8]!
   301e4:	str	lr, [sp, #4]
   301e8:	add	fp, sp, #4
   301ec:	sub	sp, sp, #8
   301f0:	str	r0, [fp, #-8]
   301f4:	str	r1, [fp, #-12]
   301f8:	mov	r2, #1
   301fc:	ldr	r1, [fp, #-12]
   30200:	ldr	r0, [fp, #-8]
   30204:	bl	30220 <__assert_fail@plt+0x1ef30>
   30208:	mov	r3, r0
   3020c:	mov	r0, r3
   30210:	sub	sp, fp, #4
   30214:	ldr	fp, [sp]
   30218:	add	sp, sp, #4
   3021c:	pop	{pc}		; (ldr pc, [sp], #4)
   30220:	str	fp, [sp, #-8]!
   30224:	str	lr, [sp, #4]
   30228:	add	fp, sp, #4
   3022c:	sub	sp, sp, #24
   30230:	str	r0, [fp, #-16]
   30234:	str	r1, [fp, #-20]	; 0xffffffec
   30238:	str	r2, [fp, #-24]	; 0xffffffe8
   3023c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30240:	ldr	r3, [r3]
   30244:	str	r3, [fp, #-8]
   30248:	ldr	r3, [fp, #-16]
   3024c:	cmp	r3, #0
   30250:	bne	30298 <__assert_fail@plt+0x1efa8>
   30254:	ldr	r3, [fp, #-8]
   30258:	cmp	r3, #0
   3025c:	bne	302d4 <__assert_fail@plt+0x1efe4>
   30260:	mov	r2, #64	; 0x40
   30264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30268:	udiv	r3, r2, r3
   3026c:	str	r3, [fp, #-8]
   30270:	ldr	r3, [fp, #-8]
   30274:	cmp	r3, #0
   30278:	moveq	r3, #1
   3027c:	movne	r3, #0
   30280:	uxtb	r3, r3
   30284:	mov	r2, r3
   30288:	ldr	r3, [fp, #-8]
   3028c:	add	r3, r2, r3
   30290:	str	r3, [fp, #-8]
   30294:	b	302d4 <__assert_fail@plt+0x1efe4>
   30298:	ldr	r2, [fp, #-8]
   3029c:	ldr	r3, [fp, #-8]
   302a0:	lsr	r3, r3, #1
   302a4:	add	r3, r3, #1
   302a8:	mov	r1, #0
   302ac:	adds	r3, r2, r3
   302b0:	bcc	302b8 <__assert_fail@plt+0x1efc8>
   302b4:	mov	r1, #1
   302b8:	str	r3, [fp, #-8]
   302bc:	mov	r3, r1
   302c0:	and	r3, r3, #1
   302c4:	uxtb	r3, r3
   302c8:	cmp	r3, #0
   302cc:	beq	302d4 <__assert_fail@plt+0x1efe4>
   302d0:	bl	307a4 <__assert_fail@plt+0x1f4b4>
   302d4:	ldr	r3, [fp, #-8]
   302d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   302dc:	mov	r1, r3
   302e0:	ldr	r0, [fp, #-16]
   302e4:	bl	30094 <__assert_fail@plt+0x1eda4>
   302e8:	str	r0, [fp, #-16]
   302ec:	ldr	r2, [fp, #-8]
   302f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   302f4:	str	r2, [r3]
   302f8:	ldr	r3, [fp, #-16]
   302fc:	mov	r0, r3
   30300:	sub	sp, fp, #4
   30304:	ldr	fp, [sp]
   30308:	add	sp, sp, #4
   3030c:	pop	{pc}		; (ldr pc, [sp], #4)
   30310:	str	fp, [sp, #-8]!
   30314:	str	lr, [sp, #4]
   30318:	add	fp, sp, #4
   3031c:	sub	sp, sp, #32
   30320:	str	r0, [fp, #-24]	; 0xffffffe8
   30324:	str	r1, [fp, #-28]	; 0xffffffe4
   30328:	str	r2, [fp, #-32]	; 0xffffffe0
   3032c:	str	r3, [fp, #-36]	; 0xffffffdc
   30330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30334:	ldr	r3, [r3]
   30338:	str	r3, [fp, #-8]
   3033c:	ldr	r3, [fp, #-8]
   30340:	asr	r3, r3, #1
   30344:	mov	r1, #0
   30348:	ldr	r2, [fp, #-8]
   3034c:	adds	r3, r2, r3
   30350:	bvc	30358 <__assert_fail@plt+0x1f068>
   30354:	mov	r1, #1
   30358:	str	r3, [fp, #-16]
   3035c:	mov	r3, r1
   30360:	and	r3, r3, #1
   30364:	uxtb	r3, r3
   30368:	cmp	r3, #0
   3036c:	beq	30378 <__assert_fail@plt+0x1f088>
   30370:	mvn	r3, #-2147483648	; 0x80000000
   30374:	str	r3, [fp, #-16]
   30378:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3037c:	cmp	r3, #0
   30380:	blt	3039c <__assert_fail@plt+0x1f0ac>
   30384:	ldr	r3, [fp, #-16]
   30388:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3038c:	cmp	r2, r3
   30390:	bge	3039c <__assert_fail@plt+0x1f0ac>
   30394:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30398:	str	r3, [fp, #-16]
   3039c:	ldr	r2, [fp, #-16]
   303a0:	mov	lr, #0
   303a4:	ldr	r3, [fp, #4]
   303a8:	smull	r2, r3, r2, r3
   303ac:	mov	r0, #0
   303b0:	mov	r1, #0
   303b4:	mov	r0, r3
   303b8:	asr	r1, r3, #31
   303bc:	asr	ip, r2, #31
   303c0:	cmp	ip, r0
   303c4:	beq	303cc <__assert_fail@plt+0x1f0dc>
   303c8:	mov	lr, #1
   303cc:	mov	r3, r2
   303d0:	str	r3, [fp, #-20]	; 0xffffffec
   303d4:	mov	r3, lr
   303d8:	and	r3, r3, #1
   303dc:	uxtb	r3, r3
   303e0:	cmp	r3, #0
   303e4:	beq	303f0 <__assert_fail@plt+0x1f100>
   303e8:	mvn	r3, #-2147483648	; 0x80000000
   303ec:	b	30408 <__assert_fail@plt+0x1f118>
   303f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   303f4:	cmp	r3, #63	; 0x3f
   303f8:	bgt	30404 <__assert_fail@plt+0x1f114>
   303fc:	mov	r3, #64	; 0x40
   30400:	b	30408 <__assert_fail@plt+0x1f118>
   30404:	mov	r3, #0
   30408:	str	r3, [fp, #-12]
   3040c:	ldr	r3, [fp, #-12]
   30410:	cmp	r3, #0
   30414:	beq	3044c <__assert_fail@plt+0x1f15c>
   30418:	ldr	r2, [fp, #-12]
   3041c:	ldr	r3, [fp, #4]
   30420:	sdiv	r3, r2, r3
   30424:	str	r3, [fp, #-16]
   30428:	ldr	r3, [fp, #-12]
   3042c:	ldr	r2, [fp, #4]
   30430:	sdiv	r2, r3, r2
   30434:	ldr	r1, [fp, #4]
   30438:	mul	r2, r1, r2
   3043c:	sub	r3, r3, r2
   30440:	ldr	r2, [fp, #-12]
   30444:	sub	r3, r2, r3
   30448:	str	r3, [fp, #-20]	; 0xffffffec
   3044c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30450:	cmp	r3, #0
   30454:	bne	30464 <__assert_fail@plt+0x1f174>
   30458:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3045c:	mov	r2, #0
   30460:	str	r2, [r3]
   30464:	ldr	r2, [fp, #-16]
   30468:	ldr	r3, [fp, #-8]
   3046c:	sub	r3, r2, r3
   30470:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30474:	cmp	r2, r3
   30478:	ble	30518 <__assert_fail@plt+0x1f228>
   3047c:	mov	r1, #0
   30480:	ldr	r2, [fp, #-8]
   30484:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30488:	adds	r3, r2, r3
   3048c:	bvc	30494 <__assert_fail@plt+0x1f1a4>
   30490:	mov	r1, #1
   30494:	str	r3, [fp, #-16]
   30498:	mov	r3, r1
   3049c:	and	r3, r3, #1
   304a0:	uxtb	r3, r3
   304a4:	cmp	r3, #0
   304a8:	bne	30514 <__assert_fail@plt+0x1f224>
   304ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   304b0:	cmp	r3, #0
   304b4:	blt	304c8 <__assert_fail@plt+0x1f1d8>
   304b8:	ldr	r3, [fp, #-16]
   304bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   304c0:	cmp	r2, r3
   304c4:	blt	30514 <__assert_fail@plt+0x1f224>
   304c8:	ldr	r2, [fp, #-16]
   304cc:	mov	lr, #0
   304d0:	ldr	r3, [fp, #4]
   304d4:	smull	r2, r3, r2, r3
   304d8:	mov	r0, #0
   304dc:	mov	r1, #0
   304e0:	mov	r0, r3
   304e4:	asr	r1, r3, #31
   304e8:	asr	ip, r2, #31
   304ec:	cmp	ip, r0
   304f0:	beq	304f8 <__assert_fail@plt+0x1f208>
   304f4:	mov	lr, #1
   304f8:	mov	r3, r2
   304fc:	str	r3, [fp, #-20]	; 0xffffffec
   30500:	mov	r3, lr
   30504:	and	r3, r3, #1
   30508:	uxtb	r3, r3
   3050c:	cmp	r3, #0
   30510:	beq	30518 <__assert_fail@plt+0x1f228>
   30514:	bl	307a4 <__assert_fail@plt+0x1f4b4>
   30518:	ldr	r3, [fp, #-20]	; 0xffffffec
   3051c:	mov	r1, r3
   30520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30524:	bl	2ffe4 <__assert_fail@plt+0x1ecf4>
   30528:	str	r0, [fp, #-24]	; 0xffffffe8
   3052c:	ldr	r2, [fp, #-16]
   30530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30534:	str	r2, [r3]
   30538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3053c:	mov	r0, r3
   30540:	sub	sp, fp, #4
   30544:	ldr	fp, [sp]
   30548:	add	sp, sp, #4
   3054c:	pop	{pc}		; (ldr pc, [sp], #4)
   30550:	str	fp, [sp, #-8]!
   30554:	str	lr, [sp, #4]
   30558:	add	fp, sp, #4
   3055c:	sub	sp, sp, #8
   30560:	str	r0, [fp, #-8]
   30564:	mov	r1, #1
   30568:	ldr	r0, [fp, #-8]
   3056c:	bl	305c0 <__assert_fail@plt+0x1f2d0>
   30570:	mov	r3, r0
   30574:	mov	r0, r3
   30578:	sub	sp, fp, #4
   3057c:	ldr	fp, [sp]
   30580:	add	sp, sp, #4
   30584:	pop	{pc}		; (ldr pc, [sp], #4)
   30588:	str	fp, [sp, #-8]!
   3058c:	str	lr, [sp, #4]
   30590:	add	fp, sp, #4
   30594:	sub	sp, sp, #8
   30598:	str	r0, [fp, #-8]
   3059c:	mov	r1, #1
   305a0:	ldr	r0, [fp, #-8]
   305a4:	bl	30608 <__assert_fail@plt+0x1f318>
   305a8:	mov	r3, r0
   305ac:	mov	r0, r3
   305b0:	sub	sp, fp, #4
   305b4:	ldr	fp, [sp]
   305b8:	add	sp, sp, #4
   305bc:	pop	{pc}		; (ldr pc, [sp], #4)
   305c0:	str	fp, [sp, #-8]!
   305c4:	str	lr, [sp, #4]
   305c8:	add	fp, sp, #4
   305cc:	sub	sp, sp, #8
   305d0:	str	r0, [fp, #-8]
   305d4:	str	r1, [fp, #-12]
   305d8:	ldr	r1, [fp, #-12]
   305dc:	ldr	r0, [fp, #-8]
   305e0:	bl	3127c <__assert_fail@plt+0x1ff8c>
   305e4:	mov	r3, r0
   305e8:	mov	r0, r3
   305ec:	bl	2fef4 <__assert_fail@plt+0x1ec04>
   305f0:	mov	r3, r0
   305f4:	mov	r0, r3
   305f8:	sub	sp, fp, #4
   305fc:	ldr	fp, [sp]
   30600:	add	sp, sp, #4
   30604:	pop	{pc}		; (ldr pc, [sp], #4)
   30608:	str	fp, [sp, #-8]!
   3060c:	str	lr, [sp, #4]
   30610:	add	fp, sp, #4
   30614:	sub	sp, sp, #8
   30618:	str	r0, [fp, #-8]
   3061c:	str	r1, [fp, #-12]
   30620:	ldr	r1, [fp, #-12]
   30624:	ldr	r0, [fp, #-8]
   30628:	bl	31c94 <__assert_fail@plt+0x209a4>
   3062c:	mov	r3, r0
   30630:	mov	r0, r3
   30634:	bl	2fef4 <__assert_fail@plt+0x1ec04>
   30638:	mov	r3, r0
   3063c:	mov	r0, r3
   30640:	sub	sp, fp, #4
   30644:	ldr	fp, [sp]
   30648:	add	sp, sp, #4
   3064c:	pop	{pc}		; (ldr pc, [sp], #4)
   30650:	str	fp, [sp, #-8]!
   30654:	str	lr, [sp, #4]
   30658:	add	fp, sp, #4
   3065c:	sub	sp, sp, #8
   30660:	str	r0, [fp, #-8]
   30664:	str	r1, [fp, #-12]
   30668:	ldr	r0, [fp, #-12]
   3066c:	bl	2ff30 <__assert_fail@plt+0x1ec40>
   30670:	mov	r3, r0
   30674:	ldr	r2, [fp, #-12]
   30678:	ldr	r1, [fp, #-8]
   3067c:	mov	r0, r3
   30680:	bl	11074 <memcpy@plt>
   30684:	mov	r3, r0
   30688:	mov	r0, r3
   3068c:	sub	sp, fp, #4
   30690:	ldr	fp, [sp]
   30694:	add	sp, sp, #4
   30698:	pop	{pc}		; (ldr pc, [sp], #4)
   3069c:	str	fp, [sp, #-8]!
   306a0:	str	lr, [sp, #4]
   306a4:	add	fp, sp, #4
   306a8:	sub	sp, sp, #8
   306ac:	str	r0, [fp, #-8]
   306b0:	str	r1, [fp, #-12]
   306b4:	ldr	r0, [fp, #-12]
   306b8:	bl	2ff70 <__assert_fail@plt+0x1ec80>
   306bc:	mov	r3, r0
   306c0:	mov	r0, r3
   306c4:	ldr	r3, [fp, #-12]
   306c8:	mov	r2, r3
   306cc:	ldr	r1, [fp, #-8]
   306d0:	bl	11074 <memcpy@plt>
   306d4:	mov	r3, r0
   306d8:	mov	r0, r3
   306dc:	sub	sp, fp, #4
   306e0:	ldr	fp, [sp]
   306e4:	add	sp, sp, #4
   306e8:	pop	{pc}		; (ldr pc, [sp], #4)
   306ec:	str	fp, [sp, #-8]!
   306f0:	str	lr, [sp, #4]
   306f4:	add	fp, sp, #4
   306f8:	sub	sp, sp, #16
   306fc:	str	r0, [fp, #-16]
   30700:	str	r1, [fp, #-20]	; 0xffffffec
   30704:	ldr	r3, [fp, #-20]	; 0xffffffec
   30708:	add	r3, r3, #1
   3070c:	mov	r0, r3
   30710:	bl	2ff70 <__assert_fail@plt+0x1ec80>
   30714:	mov	r3, r0
   30718:	str	r3, [fp, #-8]
   3071c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30720:	ldr	r2, [fp, #-8]
   30724:	add	r3, r2, r3
   30728:	mov	r2, #0
   3072c:	strb	r2, [r3]
   30730:	ldr	r3, [fp, #-20]	; 0xffffffec
   30734:	mov	r2, r3
   30738:	ldr	r1, [fp, #-16]
   3073c:	ldr	r0, [fp, #-8]
   30740:	bl	11074 <memcpy@plt>
   30744:	mov	r3, r0
   30748:	mov	r0, r3
   3074c:	sub	sp, fp, #4
   30750:	ldr	fp, [sp]
   30754:	add	sp, sp, #4
   30758:	pop	{pc}		; (ldr pc, [sp], #4)
   3075c:	str	fp, [sp, #-8]!
   30760:	str	lr, [sp, #4]
   30764:	add	fp, sp, #4
   30768:	sub	sp, sp, #8
   3076c:	str	r0, [fp, #-8]
   30770:	ldr	r0, [fp, #-8]
   30774:	bl	111d0 <strlen@plt>
   30778:	mov	r3, r0
   3077c:	add	r3, r3, #1
   30780:	mov	r1, r3
   30784:	ldr	r0, [fp, #-8]
   30788:	bl	30650 <__assert_fail@plt+0x1f360>
   3078c:	mov	r3, r0
   30790:	mov	r0, r3
   30794:	sub	sp, fp, #4
   30798:	ldr	fp, [sp]
   3079c:	add	sp, sp, #4
   307a0:	pop	{pc}		; (ldr pc, [sp], #4)
   307a4:	strd	r4, [sp, #-16]!
   307a8:	str	fp, [sp, #8]
   307ac:	str	lr, [sp, #12]
   307b0:	add	fp, sp, #12
   307b4:	movw	r3, #16756	; 0x4174
   307b8:	movt	r3, #4
   307bc:	ldr	r4, [r3]
   307c0:	movw	r0, #14968	; 0x3a78
   307c4:	movt	r0, #3
   307c8:	bl	111c4 <gettext@plt>
   307cc:	mov	r3, r0
   307d0:	movw	r2, #14988	; 0x3a8c
   307d4:	movt	r2, #3
   307d8:	mov	r1, #0
   307dc:	mov	r0, r4
   307e0:	bl	11164 <error@plt>
   307e4:	bl	112cc <abort@plt>
   307e8:	strd	r4, [sp, #-16]!
   307ec:	str	fp, [sp, #8]
   307f0:	str	lr, [sp, #12]
   307f4:	add	fp, sp, #12
   307f8:	sub	sp, sp, #40	; 0x28
   307fc:	str	r0, [fp, #-32]	; 0xffffffe0
   30800:	str	r1, [fp, #-36]	; 0xffffffdc
   30804:	strd	r2, [fp, #-44]	; 0xffffffd4
   30808:	sub	r2, fp, #28
   3080c:	ldr	r3, [fp, #12]
   30810:	str	r3, [sp]
   30814:	mov	r3, r2
   30818:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3081c:	mov	r1, #0
   30820:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30824:	bl	30c94 <__assert_fail@plt+0x1f9a4>
   30828:	str	r0, [fp, #-16]
   3082c:	ldr	r3, [fp, #-16]
   30830:	cmp	r3, #0
   30834:	bne	308d4 <__assert_fail@plt+0x1f5e4>
   30838:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   3083c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   30840:	cmp	r0, r2
   30844:	sbcs	r3, r1, r3
   30848:	blt	30860 <__assert_fail@plt+0x1f570>
   3084c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   30850:	ldrd	r0, [fp, #4]
   30854:	cmp	r0, r2
   30858:	sbcs	r3, r1, r3
   3085c:	bge	30910 <__assert_fail@plt+0x1f620>
   30860:	mov	r3, #1
   30864:	str	r3, [fp, #-16]
   30868:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3086c:	mvn	r0, #-1073741824	; 0xc0000000
   30870:	mov	r1, #0
   30874:	cmp	r0, r2
   30878:	sbcs	r3, r1, r3
   3087c:	bge	30894 <__assert_fail@plt+0x1f5a4>
   30880:	bl	111f4 <__errno_location@plt>
   30884:	mov	r2, r0
   30888:	mov	r3, #75	; 0x4b
   3088c:	str	r3, [r2]
   30890:	b	30910 <__assert_fail@plt+0x1f620>
   30894:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   30898:	mov	r0, #-1073741824	; 0xc0000000
   3089c:	mvn	r1, #0
   308a0:	cmp	r2, r0
   308a4:	sbcs	r3, r3, r1
   308a8:	bge	308c0 <__assert_fail@plt+0x1f5d0>
   308ac:	bl	111f4 <__errno_location@plt>
   308b0:	mov	r2, r0
   308b4:	mov	r3, #75	; 0x4b
   308b8:	str	r3, [r2]
   308bc:	b	30910 <__assert_fail@plt+0x1f620>
   308c0:	bl	111f4 <__errno_location@plt>
   308c4:	mov	r2, r0
   308c8:	mov	r3, #34	; 0x22
   308cc:	str	r3, [r2]
   308d0:	b	30910 <__assert_fail@plt+0x1f620>
   308d4:	ldr	r3, [fp, #-16]
   308d8:	cmp	r3, #1
   308dc:	bne	308f4 <__assert_fail@plt+0x1f604>
   308e0:	bl	111f4 <__errno_location@plt>
   308e4:	mov	r2, r0
   308e8:	mov	r3, #75	; 0x4b
   308ec:	str	r3, [r2]
   308f0:	b	30910 <__assert_fail@plt+0x1f620>
   308f4:	ldr	r3, [fp, #-16]
   308f8:	cmp	r3, #3
   308fc:	bne	30910 <__assert_fail@plt+0x1f620>
   30900:	bl	111f4 <__errno_location@plt>
   30904:	mov	r2, r0
   30908:	mov	r3, #0
   3090c:	str	r3, [r2]
   30910:	ldr	r3, [fp, #-16]
   30914:	cmp	r3, #0
   30918:	beq	30984 <__assert_fail@plt+0x1f694>
   3091c:	ldr	r3, [fp, #20]
   30920:	cmp	r3, #0
   30924:	beq	30930 <__assert_fail@plt+0x1f640>
   30928:	ldr	r4, [fp, #20]
   3092c:	b	30934 <__assert_fail@plt+0x1f644>
   30930:	mov	r4, #1
   30934:	bl	111f4 <__errno_location@plt>
   30938:	mov	r3, r0
   3093c:	ldr	r3, [r3]
   30940:	cmp	r3, #22
   30944:	beq	30958 <__assert_fail@plt+0x1f668>
   30948:	bl	111f4 <__errno_location@plt>
   3094c:	mov	r3, r0
   30950:	ldr	r5, [r3]
   30954:	b	3095c <__assert_fail@plt+0x1f66c>
   30958:	mov	r5, #0
   3095c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30960:	bl	15efc <__assert_fail@plt+0x4c0c>
   30964:	mov	r3, r0
   30968:	str	r3, [sp]
   3096c:	ldr	r3, [fp, #16]
   30970:	movw	r2, #14992	; 0x3a90
   30974:	movt	r2, #3
   30978:	mov	r1, r5
   3097c:	mov	r0, r4
   30980:	bl	11164 <error@plt>
   30984:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   30988:	mov	r0, r2
   3098c:	mov	r1, r3
   30990:	sub	sp, fp, #12
   30994:	ldrd	r4, [sp]
   30998:	ldr	fp, [sp, #8]
   3099c:	add	sp, sp, #12
   309a0:	pop	{pc}		; (ldr pc, [sp], #4)
   309a4:	str	fp, [sp, #-8]!
   309a8:	str	lr, [sp, #4]
   309ac:	add	fp, sp, #4
   309b0:	sub	sp, sp, #40	; 0x28
   309b4:	str	r0, [fp, #-8]
   309b8:	strd	r2, [fp, #-20]	; 0xffffffec
   309bc:	ldr	r3, [fp, #20]
   309c0:	str	r3, [sp, #16]
   309c4:	ldr	r3, [fp, #16]
   309c8:	str	r3, [sp, #12]
   309cc:	ldr	r3, [fp, #12]
   309d0:	str	r3, [sp, #8]
   309d4:	ldrd	r2, [fp, #4]
   309d8:	strd	r2, [sp]
   309dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   309e0:	mov	r1, #10
   309e4:	ldr	r0, [fp, #-8]
   309e8:	bl	307e8 <__assert_fail@plt+0x1f4f8>
   309ec:	mov	r2, r0
   309f0:	mov	r3, r1
   309f4:	mov	r0, r2
   309f8:	mov	r1, r3
   309fc:	sub	sp, fp, #4
   30a00:	ldr	fp, [sp]
   30a04:	add	sp, sp, #4
   30a08:	pop	{pc}		; (ldr pc, [sp], #4)
   30a0c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30a10:	strd	r6, [sp, #8]
   30a14:	strd	r8, [sp, #16]
   30a18:	str	fp, [sp, #24]
   30a1c:	str	lr, [sp, #28]
   30a20:	add	fp, sp, #28
   30a24:	sub	sp, sp, #72	; 0x48
   30a28:	str	r0, [fp, #-40]	; 0xffffffd8
   30a2c:	str	r1, [fp, #-44]	; 0xffffffd4
   30a30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30a34:	ldrd	r6, [r3]
   30a38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30a3c:	mov	r8, r3
   30a40:	asr	r9, r8, #31
   30a44:	mov	r2, #0
   30a48:	mov	r3, #0
   30a4c:	strd	r2, [fp, #-60]	; 0xffffffc4
   30a50:	mov	r0, #0
   30a54:	mov	r1, #0
   30a58:	mov	r0, r7
   30a5c:	asr	r1, r7, #31
   30a60:	asr	ip, r6, #31
   30a64:	mov	r2, #0
   30a68:	mov	r3, #0
   30a6c:	mov	r2, r9
   30a70:	asr	r3, r9, #31
   30a74:	cmp	ip, r0
   30a78:	bne	30a88 <__assert_fail@plt+0x1f798>
   30a7c:	smull	r2, r3, r6, r8
   30a80:	strd	r2, [fp, #-52]	; 0xffffffcc
   30a84:	b	30b9c <__assert_fail@plt+0x1f8ac>
   30a88:	strd	r6, [fp, #-92]	; 0xffffffa4
   30a8c:	mov	ip, r0
   30a90:	mov	lr, r8
   30a94:	umull	r2, r3, r6, r8
   30a98:	strd	r2, [fp, #-100]	; 0xffffff9c
   30a9c:	umull	r2, r3, lr, ip
   30aa0:	mov	r0, r2
   30aa4:	mov	r1, r3
   30aa8:	cmp	ip, #0
   30aac:	bge	30adc <__assert_fail@plt+0x1f7ec>
   30ab0:	mov	r2, lr
   30ab4:	mov	r3, #0
   30ab8:	mov	r4, #0
   30abc:	mov	r5, #0
   30ac0:	mov	r5, r2
   30ac4:	mov	r4, #0
   30ac8:	subs	r3, r0, r4
   30acc:	str	r3, [fp, #-68]	; 0xffffffbc
   30ad0:	sbc	r3, r1, r5
   30ad4:	str	r3, [fp, #-64]	; 0xffffffc0
   30ad8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   30adc:	cmp	lr, #0
   30ae0:	bge	30b00 <__assert_fail@plt+0x1f810>
   30ae4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   30ae8:	mov	ip, r2
   30aec:	subs	ip, r0, ip
   30af0:	str	ip, [fp, #-76]	; 0xffffffb4
   30af4:	sbc	r3, r1, r3
   30af8:	str	r3, [fp, #-72]	; 0xffffffb8
   30afc:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   30b00:	mov	r2, #0
   30b04:	mov	r3, #0
   30b08:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   30b0c:	mov	ip, r5
   30b10:	mov	r2, ip
   30b14:	mov	r3, #0
   30b18:	adds	ip, r0, r2
   30b1c:	str	ip, [fp, #-84]	; 0xffffffac
   30b20:	adc	r3, r1, r3
   30b24:	str	r3, [fp, #-80]	; 0xffffffb0
   30b28:	ldrd	r0, [fp, #-84]	; 0xffffffac
   30b2c:	mov	r2, #0
   30b30:	mov	r3, #0
   30b34:	mov	r2, r1
   30b38:	asr	r3, r1, #31
   30b3c:	asr	ip, r0, #31
   30b40:	cmp	ip, r2
   30b44:	bne	30b74 <__assert_fail@plt+0x1f884>
   30b48:	mov	r2, #0
   30b4c:	mov	r3, #0
   30b50:	mov	r3, r0
   30b54:	mov	r2, #0
   30b58:	mov	r0, r4
   30b5c:	mov	r1, #0
   30b60:	orr	ip, r2, r0
   30b64:	str	ip, [fp, #-52]	; 0xffffffcc
   30b68:	orr	r3, r3, r1
   30b6c:	str	r3, [fp, #-48]	; 0xffffffd0
   30b70:	b	30b9c <__assert_fail@plt+0x1f8ac>
   30b74:	mul	r2, r8, r7
   30b78:	mul	r3, r6, r9
   30b7c:	add	r1, r2, r3
   30b80:	umull	r2, r3, r6, r8
   30b84:	add	r1, r1, r3
   30b88:	mov	r3, r1
   30b8c:	strd	r2, [fp, #-52]	; 0xffffffcc
   30b90:	mov	r2, #1
   30b94:	mov	r3, #0
   30b98:	strd	r2, [fp, #-60]	; 0xffffffc4
   30b9c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   30ba0:	strd	r2, [fp, #-36]	; 0xffffffdc
   30ba4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   30ba8:	mov	r3, r2
   30bac:	and	r3, r3, #1
   30bb0:	uxtb	r3, r3
   30bb4:	cmp	r3, #0
   30bb8:	beq	30bf4 <__assert_fail@plt+0x1f904>
   30bbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30bc0:	ldrd	r2, [r3]
   30bc4:	cmp	r2, #0
   30bc8:	sbcs	r3, r3, #0
   30bcc:	bge	30bdc <__assert_fail@plt+0x1f8ec>
   30bd0:	mov	r2, #0
   30bd4:	mov	r3, #-2147483648	; 0x80000000
   30bd8:	b	30be4 <__assert_fail@plt+0x1f8f4>
   30bdc:	mvn	r2, #0
   30be0:	mvn	r3, #-2147483648	; 0x80000000
   30be4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   30be8:	strd	r2, [r1]
   30bec:	mov	r3, #1
   30bf0:	b	30c04 <__assert_fail@plt+0x1f914>
   30bf4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30bf8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   30bfc:	strd	r2, [r1]
   30c00:	mov	r3, #0
   30c04:	mov	r0, r3
   30c08:	sub	sp, fp, #28
   30c0c:	ldrd	r4, [sp]
   30c10:	ldrd	r6, [sp, #8]
   30c14:	ldrd	r8, [sp, #16]
   30c18:	ldr	fp, [sp, #24]
   30c1c:	add	sp, sp, #28
   30c20:	pop	{pc}		; (ldr pc, [sp], #4)
   30c24:	str	fp, [sp, #-8]!
   30c28:	str	lr, [sp, #4]
   30c2c:	add	fp, sp, #4
   30c30:	sub	sp, sp, #24
   30c34:	str	r0, [fp, #-16]
   30c38:	str	r1, [fp, #-20]	; 0xffffffec
   30c3c:	str	r2, [fp, #-24]	; 0xffffffe8
   30c40:	mov	r3, #0
   30c44:	str	r3, [fp, #-8]
   30c48:	b	30c68 <__assert_fail@plt+0x1f978>
   30c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   30c50:	ldr	r0, [fp, #-16]
   30c54:	bl	30a0c <__assert_fail@plt+0x1f71c>
   30c58:	mov	r2, r0
   30c5c:	ldr	r3, [fp, #-8]
   30c60:	orr	r3, r3, r2
   30c64:	str	r3, [fp, #-8]
   30c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30c6c:	sub	r2, r3, #1
   30c70:	str	r2, [fp, #-24]	; 0xffffffe8
   30c74:	cmp	r3, #0
   30c78:	bne	30c4c <__assert_fail@plt+0x1f95c>
   30c7c:	ldr	r3, [fp, #-8]
   30c80:	mov	r0, r3
   30c84:	sub	sp, fp, #4
   30c88:	ldr	fp, [sp]
   30c8c:	add	sp, sp, #4
   30c90:	pop	{pc}		; (ldr pc, [sp], #4)
   30c94:	str	fp, [sp, #-8]!
   30c98:	str	lr, [sp, #4]
   30c9c:	add	fp, sp, #4
   30ca0:	sub	sp, sp, #48	; 0x30
   30ca4:	str	r0, [fp, #-40]	; 0xffffffd8
   30ca8:	str	r1, [fp, #-44]	; 0xffffffd4
   30cac:	str	r2, [fp, #-48]	; 0xffffffd0
   30cb0:	str	r3, [fp, #-52]	; 0xffffffcc
   30cb4:	mov	r3, #0
   30cb8:	str	r3, [fp, #-8]
   30cbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   30cc0:	cmp	r3, #0
   30cc4:	blt	30cd4 <__assert_fail@plt+0x1f9e4>
   30cc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   30ccc:	cmp	r3, #36	; 0x24
   30cd0:	ble	30cf4 <__assert_fail@plt+0x1fa04>
   30cd4:	movw	r3, #15056	; 0x3ad0
   30cd8:	movt	r3, #3
   30cdc:	mov	r2, #85	; 0x55
   30ce0:	movw	r1, #15000	; 0x3a98
   30ce4:	movt	r1, #3
   30ce8:	movw	r0, #15016	; 0x3aa8
   30cec:	movt	r0, #3
   30cf0:	bl	112f0 <__assert_fail@plt>
   30cf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30cf8:	cmp	r3, #0
   30cfc:	bne	30d08 <__assert_fail@plt+0x1fa18>
   30d00:	sub	r3, fp, #28
   30d04:	b	30d0c <__assert_fail@plt+0x1fa1c>
   30d08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30d0c:	str	r3, [fp, #-24]	; 0xffffffe8
   30d10:	bl	111f4 <__errno_location@plt>
   30d14:	mov	r2, r0
   30d18:	mov	r3, #0
   30d1c:	str	r3, [r2]
   30d20:	ldr	r2, [fp, #-48]	; 0xffffffd0
   30d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30d2c:	bl	1123c <strtoimax@plt>
   30d30:	mov	r2, r0
   30d34:	mov	r3, r1
   30d38:	strd	r2, [fp, #-36]	; 0xffffffdc
   30d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d40:	ldr	r3, [r3]
   30d44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30d48:	cmp	r2, r3
   30d4c:	bne	30dac <__assert_fail@plt+0x1fabc>
   30d50:	ldr	r3, [fp, #4]
   30d54:	cmp	r3, #0
   30d58:	beq	30da4 <__assert_fail@plt+0x1fab4>
   30d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d60:	ldr	r3, [r3]
   30d64:	ldrb	r3, [r3]
   30d68:	cmp	r3, #0
   30d6c:	beq	30da4 <__assert_fail@plt+0x1fab4>
   30d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d74:	ldr	r3, [r3]
   30d78:	ldrb	r3, [r3]
   30d7c:	mov	r1, r3
   30d80:	ldr	r0, [fp, #4]
   30d84:	bl	111dc <strchr@plt>
   30d88:	mov	r3, r0
   30d8c:	cmp	r3, #0
   30d90:	beq	30da4 <__assert_fail@plt+0x1fab4>
   30d94:	mov	r2, #1
   30d98:	mov	r3, #0
   30d9c:	strd	r2, [fp, #-36]	; 0xffffffdc
   30da0:	b	30de4 <__assert_fail@plt+0x1faf4>
   30da4:	mov	r3, #4
   30da8:	b	31268 <__assert_fail@plt+0x1ff78>
   30dac:	bl	111f4 <__errno_location@plt>
   30db0:	mov	r3, r0
   30db4:	ldr	r3, [r3]
   30db8:	cmp	r3, #0
   30dbc:	beq	30de4 <__assert_fail@plt+0x1faf4>
   30dc0:	bl	111f4 <__errno_location@plt>
   30dc4:	mov	r3, r0
   30dc8:	ldr	r3, [r3]
   30dcc:	cmp	r3, #34	; 0x22
   30dd0:	beq	30ddc <__assert_fail@plt+0x1faec>
   30dd4:	mov	r3, #4
   30dd8:	b	31268 <__assert_fail@plt+0x1ff78>
   30ddc:	mov	r3, #1
   30de0:	str	r3, [fp, #-8]
   30de4:	ldr	r3, [fp, #4]
   30de8:	cmp	r3, #0
   30dec:	bne	30e04 <__assert_fail@plt+0x1fb14>
   30df0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30df4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30df8:	strd	r2, [r1]
   30dfc:	ldr	r3, [fp, #-8]
   30e00:	b	31268 <__assert_fail@plt+0x1ff78>
   30e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e08:	ldr	r3, [r3]
   30e0c:	ldrb	r3, [r3]
   30e10:	cmp	r3, #0
   30e14:	beq	31258 <__assert_fail@plt+0x1ff68>
   30e18:	mov	r3, #1024	; 0x400
   30e1c:	str	r3, [fp, #-12]
   30e20:	mov	r3, #1
   30e24:	str	r3, [fp, #-16]
   30e28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e2c:	ldr	r3, [r3]
   30e30:	ldrb	r3, [r3]
   30e34:	mov	r1, r3
   30e38:	ldr	r0, [fp, #4]
   30e3c:	bl	111dc <strchr@plt>
   30e40:	mov	r3, r0
   30e44:	cmp	r3, #0
   30e48:	bne	30e64 <__assert_fail@plt+0x1fb74>
   30e4c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30e50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30e54:	strd	r2, [r1]
   30e58:	ldr	r3, [fp, #-8]
   30e5c:	orr	r3, r3, #2
   30e60:	b	31268 <__assert_fail@plt+0x1ff78>
   30e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e68:	ldr	r3, [r3]
   30e6c:	ldrb	r3, [r3]
   30e70:	sub	r3, r3, #69	; 0x45
   30e74:	cmp	r3, #47	; 0x2f
   30e78:	ldrls	pc, [pc, r3, lsl #2]
   30e7c:	b	30fd0 <__assert_fail@plt+0x1fce0>
   30e80:	andeq	r0, r3, r0, asr #30
   30e84:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30e88:	andeq	r0, r3, r0, asr #30
   30e8c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30e90:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30e94:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30e98:	andeq	r0, r3, r0, asr #30
   30e9c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ea0:	andeq	r0, r3, r0, asr #30
   30ea4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ea8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30eac:	andeq	r0, r3, r0, asr #30
   30eb0:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30eb4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30eb8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ebc:	andeq	r0, r3, r0, asr #30
   30ec0:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ec4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ec8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ecc:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ed0:	andeq	r0, r3, r0, asr #30
   30ed4:	andeq	r0, r3, r0, asr #30
   30ed8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30edc:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ee0:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ee4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ee8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30eec:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ef0:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ef4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30ef8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30efc:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f00:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f04:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f08:	andeq	r0, r3, r0, asr #30
   30f0c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f10:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f14:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f18:	andeq	r0, r3, r0, asr #30
   30f1c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f20:	andeq	r0, r3, r0, asr #30
   30f24:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f28:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f2c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f30:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f34:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f38:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30f3c:	andeq	r0, r3, r0, asr #30
   30f40:	mov	r1, #48	; 0x30
   30f44:	ldr	r0, [fp, #4]
   30f48:	bl	111dc <strchr@plt>
   30f4c:	mov	r3, r0
   30f50:	cmp	r3, #0
   30f54:	beq	30fc4 <__assert_fail@plt+0x1fcd4>
   30f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f5c:	ldr	r3, [r3]
   30f60:	add	r3, r3, #1
   30f64:	ldrb	r3, [r3]
   30f68:	cmp	r3, #68	; 0x44
   30f6c:	beq	30fac <__assert_fail@plt+0x1fcbc>
   30f70:	cmp	r3, #105	; 0x69
   30f74:	beq	30f84 <__assert_fail@plt+0x1fc94>
   30f78:	cmp	r3, #66	; 0x42
   30f7c:	beq	30fac <__assert_fail@plt+0x1fcbc>
   30f80:	b	30fd0 <__assert_fail@plt+0x1fce0>
   30f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f88:	ldr	r3, [r3]
   30f8c:	add	r3, r3, #2
   30f90:	ldrb	r3, [r3]
   30f94:	cmp	r3, #66	; 0x42
   30f98:	bne	30fcc <__assert_fail@plt+0x1fcdc>
   30f9c:	ldr	r3, [fp, #-16]
   30fa0:	add	r3, r3, #2
   30fa4:	str	r3, [fp, #-16]
   30fa8:	b	30fcc <__assert_fail@plt+0x1fcdc>
   30fac:	mov	r3, #1000	; 0x3e8
   30fb0:	str	r3, [fp, #-12]
   30fb4:	ldr	r3, [fp, #-16]
   30fb8:	add	r3, r3, #1
   30fbc:	str	r3, [fp, #-16]
   30fc0:	b	30fd0 <__assert_fail@plt+0x1fce0>
   30fc4:	nop	{0}
   30fc8:	b	30fd0 <__assert_fail@plt+0x1fce0>
   30fcc:	nop	{0}
   30fd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30fd4:	ldr	r3, [r3]
   30fd8:	ldrb	r3, [r3]
   30fdc:	sub	r3, r3, #66	; 0x42
   30fe0:	cmp	r3, #53	; 0x35
   30fe4:	ldrls	pc, [pc, r3, lsl #2]
   30fe8:	b	311f8 <__assert_fail@plt+0x1ff08>
   30fec:	ldrdeq	r1, [r3], -ip
   30ff0:	strdeq	r1, [r3], -r8
   30ff4:	strdeq	r1, [r3], -r8
   30ff8:	andeq	r1, r3, r0, lsl #2
   30ffc:	strdeq	r1, [r3], -r8
   31000:	andeq	r1, r3, ip, lsl r1
   31004:	strdeq	r1, [r3], -r8
   31008:	strdeq	r1, [r3], -r8
   3100c:	strdeq	r1, [r3], -r8
   31010:	andeq	r1, r3, r8, lsr r1
   31014:	strdeq	r1, [r3], -r8
   31018:	andeq	r1, r3, r4, asr r1
   3101c:	strdeq	r1, [r3], -r8
   31020:	strdeq	r1, [r3], -r8
   31024:	andeq	r1, r3, r0, ror r1
   31028:	strdeq	r1, [r3], -r8
   3102c:	strdeq	r1, [r3], -r8
   31030:	strdeq	r1, [r3], -r8
   31034:	andeq	r1, r3, ip, lsl #3
   31038:	strdeq	r1, [r3], -r8
   3103c:	strdeq	r1, [r3], -r8
   31040:	strdeq	r1, [r3], -r8
   31044:	strdeq	r1, [r3], -r8
   31048:	andeq	r1, r3, r0, asr #3
   3104c:	ldrdeq	r1, [r3], -ip
   31050:	strdeq	r1, [r3], -r8
   31054:	strdeq	r1, [r3], -r8
   31058:	strdeq	r1, [r3], -r8
   3105c:	strdeq	r1, [r3], -r8
   31060:	strdeq	r1, [r3], -r8
   31064:	strdeq	r1, [r3], -r8
   31068:	strdeq	r1, [r3], -r8
   3106c:	andeq	r1, r3, r4, asr #1
   31070:	strdeq	r1, [r3], -r4
   31074:	strdeq	r1, [r3], -r8
   31078:	strdeq	r1, [r3], -r8
   3107c:	strdeq	r1, [r3], -r8
   31080:	andeq	r1, r3, ip, lsl r1
   31084:	strdeq	r1, [r3], -r8
   31088:	strdeq	r1, [r3], -r8
   3108c:	strdeq	r1, [r3], -r8
   31090:	andeq	r1, r3, r8, lsr r1
   31094:	strdeq	r1, [r3], -r8
   31098:	andeq	r1, r3, r4, asr r1
   3109c:	strdeq	r1, [r3], -r8
   310a0:	strdeq	r1, [r3], -r8
   310a4:	strdeq	r1, [r3], -r8
   310a8:	strdeq	r1, [r3], -r8
   310ac:	strdeq	r1, [r3], -r8
   310b0:	strdeq	r1, [r3], -r8
   310b4:	andeq	r1, r3, ip, lsl #3
   310b8:	strdeq	r1, [r3], -r8
   310bc:	strdeq	r1, [r3], -r8
   310c0:	andeq	r1, r3, r8, lsr #3
   310c4:	sub	r3, fp, #36	; 0x24
   310c8:	mov	r1, #512	; 0x200
   310cc:	mov	r0, r3
   310d0:	bl	30a0c <__assert_fail@plt+0x1f71c>
   310d4:	str	r0, [fp, #-20]	; 0xffffffec
   310d8:	b	31210 <__assert_fail@plt+0x1ff20>
   310dc:	sub	r3, fp, #36	; 0x24
   310e0:	mov	r1, #1024	; 0x400
   310e4:	mov	r0, r3
   310e8:	bl	30a0c <__assert_fail@plt+0x1f71c>
   310ec:	str	r0, [fp, #-20]	; 0xffffffec
   310f0:	b	31210 <__assert_fail@plt+0x1ff20>
   310f4:	mov	r3, #0
   310f8:	str	r3, [fp, #-20]	; 0xffffffec
   310fc:	b	31210 <__assert_fail@plt+0x1ff20>
   31100:	sub	r3, fp, #36	; 0x24
   31104:	mov	r2, #6
   31108:	ldr	r1, [fp, #-12]
   3110c:	mov	r0, r3
   31110:	bl	30c24 <__assert_fail@plt+0x1f934>
   31114:	str	r0, [fp, #-20]	; 0xffffffec
   31118:	b	31210 <__assert_fail@plt+0x1ff20>
   3111c:	sub	r3, fp, #36	; 0x24
   31120:	mov	r2, #3
   31124:	ldr	r1, [fp, #-12]
   31128:	mov	r0, r3
   3112c:	bl	30c24 <__assert_fail@plt+0x1f934>
   31130:	str	r0, [fp, #-20]	; 0xffffffec
   31134:	b	31210 <__assert_fail@plt+0x1ff20>
   31138:	sub	r3, fp, #36	; 0x24
   3113c:	mov	r2, #1
   31140:	ldr	r1, [fp, #-12]
   31144:	mov	r0, r3
   31148:	bl	30c24 <__assert_fail@plt+0x1f934>
   3114c:	str	r0, [fp, #-20]	; 0xffffffec
   31150:	b	31210 <__assert_fail@plt+0x1ff20>
   31154:	sub	r3, fp, #36	; 0x24
   31158:	mov	r2, #2
   3115c:	ldr	r1, [fp, #-12]
   31160:	mov	r0, r3
   31164:	bl	30c24 <__assert_fail@plt+0x1f934>
   31168:	str	r0, [fp, #-20]	; 0xffffffec
   3116c:	b	31210 <__assert_fail@plt+0x1ff20>
   31170:	sub	r3, fp, #36	; 0x24
   31174:	mov	r2, #5
   31178:	ldr	r1, [fp, #-12]
   3117c:	mov	r0, r3
   31180:	bl	30c24 <__assert_fail@plt+0x1f934>
   31184:	str	r0, [fp, #-20]	; 0xffffffec
   31188:	b	31210 <__assert_fail@plt+0x1ff20>
   3118c:	sub	r3, fp, #36	; 0x24
   31190:	mov	r2, #4
   31194:	ldr	r1, [fp, #-12]
   31198:	mov	r0, r3
   3119c:	bl	30c24 <__assert_fail@plt+0x1f934>
   311a0:	str	r0, [fp, #-20]	; 0xffffffec
   311a4:	b	31210 <__assert_fail@plt+0x1ff20>
   311a8:	sub	r3, fp, #36	; 0x24
   311ac:	mov	r1, #2
   311b0:	mov	r0, r3
   311b4:	bl	30a0c <__assert_fail@plt+0x1f71c>
   311b8:	str	r0, [fp, #-20]	; 0xffffffec
   311bc:	b	31210 <__assert_fail@plt+0x1ff20>
   311c0:	sub	r3, fp, #36	; 0x24
   311c4:	mov	r2, #8
   311c8:	ldr	r1, [fp, #-12]
   311cc:	mov	r0, r3
   311d0:	bl	30c24 <__assert_fail@plt+0x1f934>
   311d4:	str	r0, [fp, #-20]	; 0xffffffec
   311d8:	b	31210 <__assert_fail@plt+0x1ff20>
   311dc:	sub	r3, fp, #36	; 0x24
   311e0:	mov	r2, #7
   311e4:	ldr	r1, [fp, #-12]
   311e8:	mov	r0, r3
   311ec:	bl	30c24 <__assert_fail@plt+0x1f934>
   311f0:	str	r0, [fp, #-20]	; 0xffffffec
   311f4:	b	31210 <__assert_fail@plt+0x1ff20>
   311f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   311fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31200:	strd	r2, [r1]
   31204:	ldr	r3, [fp, #-8]
   31208:	orr	r3, r3, #2
   3120c:	b	31268 <__assert_fail@plt+0x1ff78>
   31210:	ldr	r2, [fp, #-8]
   31214:	ldr	r3, [fp, #-20]	; 0xffffffec
   31218:	orr	r3, r2, r3
   3121c:	str	r3, [fp, #-8]
   31220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31224:	ldr	r2, [r3]
   31228:	ldr	r3, [fp, #-16]
   3122c:	add	r2, r2, r3
   31230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31234:	str	r2, [r3]
   31238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3123c:	ldr	r3, [r3]
   31240:	ldrb	r3, [r3]
   31244:	cmp	r3, #0
   31248:	beq	31258 <__assert_fail@plt+0x1ff68>
   3124c:	ldr	r3, [fp, #-8]
   31250:	orr	r3, r3, #2
   31254:	str	r3, [fp, #-8]
   31258:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3125c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31260:	strd	r2, [r1]
   31264:	ldr	r3, [fp, #-8]
   31268:	mov	r0, r3
   3126c:	sub	sp, fp, #4
   31270:	ldr	fp, [sp]
   31274:	add	sp, sp, #4
   31278:	pop	{pc}		; (ldr pc, [sp], #4)
   3127c:	str	fp, [sp, #-8]!
   31280:	str	lr, [sp, #4]
   31284:	add	fp, sp, #4
   31288:	sub	sp, sp, #16
   3128c:	str	r0, [fp, #-16]
   31290:	str	r1, [fp, #-20]	; 0xffffffec
   31294:	ldr	r3, [fp, #-16]
   31298:	cmp	r3, #0
   3129c:	beq	312ac <__assert_fail@plt+0x1ffbc>
   312a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   312a4:	cmp	r3, #0
   312a8:	bne	312bc <__assert_fail@plt+0x1ffcc>
   312ac:	mov	r3, #1
   312b0:	str	r3, [fp, #-20]	; 0xffffffec
   312b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   312b8:	str	r3, [fp, #-16]
   312bc:	mov	ip, #0
   312c0:	ldr	r2, [fp, #-16]
   312c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   312c8:	umull	r0, r1, r2, r3
   312cc:	mov	r2, #0
   312d0:	mov	r3, #0
   312d4:	mov	r2, r1
   312d8:	mov	r3, #0
   312dc:	cmp	r2, #0
   312e0:	beq	312e8 <__assert_fail@plt+0x1fff8>
   312e4:	mov	ip, #1
   312e8:	cmp	r0, #0
   312ec:	bge	312f4 <__assert_fail@plt+0x20004>
   312f0:	mov	ip, #1
   312f4:	mov	r3, ip
   312f8:	and	r3, r3, #1
   312fc:	uxtb	r3, r3
   31300:	cmp	r3, #0
   31304:	beq	31320 <__assert_fail@plt+0x20030>
   31308:	bl	111f4 <__errno_location@plt>
   3130c:	mov	r2, r0
   31310:	mov	r3, #12
   31314:	str	r3, [r2]
   31318:	mov	r3, #0
   3131c:	b	31338 <__assert_fail@plt+0x20048>
   31320:	ldr	r1, [fp, #-20]	; 0xffffffec
   31324:	ldr	r0, [fp, #-16]
   31328:	bl	10fcc <calloc@plt>
   3132c:	mov	r3, r0
   31330:	str	r3, [fp, #-8]
   31334:	ldr	r3, [fp, #-8]
   31338:	mov	r0, r3
   3133c:	sub	sp, fp, #4
   31340:	ldr	fp, [sp]
   31344:	add	sp, sp, #4
   31348:	pop	{pc}		; (ldr pc, [sp], #4)
   3134c:	str	fp, [sp, #-8]!
   31350:	str	lr, [sp, #4]
   31354:	add	fp, sp, #4
   31358:	sub	sp, sp, #16
   3135c:	str	r0, [fp, #-16]
   31360:	ldr	r3, [fp, #-16]
   31364:	cmp	r3, #0
   31368:	bne	31374 <__assert_fail@plt+0x20084>
   3136c:	mov	r3, #1
   31370:	str	r3, [fp, #-16]
   31374:	mov	r2, #0
   31378:	ldr	r3, [fp, #-16]
   3137c:	cmp	r3, #0
   31380:	bge	31388 <__assert_fail@plt+0x20098>
   31384:	mov	r2, #1
   31388:	mov	r3, r2
   3138c:	and	r3, r3, #1
   31390:	uxtb	r3, r3
   31394:	cmp	r3, #0
   31398:	beq	313b4 <__assert_fail@plt+0x200c4>
   3139c:	bl	111f4 <__errno_location@plt>
   313a0:	mov	r2, r0
   313a4:	mov	r3, #12
   313a8:	str	r3, [r2]
   313ac:	mov	r3, #0
   313b0:	b	313c8 <__assert_fail@plt+0x200d8>
   313b4:	ldr	r0, [fp, #-16]
   313b8:	bl	11170 <malloc@plt>
   313bc:	mov	r3, r0
   313c0:	str	r3, [fp, #-8]
   313c4:	ldr	r3, [fp, #-8]
   313c8:	mov	r0, r3
   313cc:	sub	sp, fp, #4
   313d0:	ldr	fp, [sp]
   313d4:	add	sp, sp, #4
   313d8:	pop	{pc}		; (ldr pc, [sp], #4)
   313dc:	str	fp, [sp, #-8]!
   313e0:	str	lr, [sp, #4]
   313e4:	add	fp, sp, #4
   313e8:	sub	sp, sp, #16
   313ec:	str	r0, [fp, #-16]
   313f0:	str	r1, [fp, #-20]	; 0xffffffec
   313f4:	ldr	r3, [fp, #-16]
   313f8:	cmp	r3, #0
   313fc:	bne	31410 <__assert_fail@plt+0x20120>
   31400:	ldr	r0, [fp, #-20]	; 0xffffffec
   31404:	bl	3134c <__assert_fail@plt+0x2005c>
   31408:	mov	r3, r0
   3140c:	b	31480 <__assert_fail@plt+0x20190>
   31410:	ldr	r3, [fp, #-20]	; 0xffffffec
   31414:	cmp	r3, #0
   31418:	bne	3142c <__assert_fail@plt+0x2013c>
   3141c:	ldr	r0, [fp, #-16]
   31420:	bl	31b28 <__assert_fail@plt+0x20838>
   31424:	mov	r3, #0
   31428:	b	31480 <__assert_fail@plt+0x20190>
   3142c:	mov	r2, #0
   31430:	ldr	r3, [fp, #-20]	; 0xffffffec
   31434:	cmp	r3, #0
   31438:	bge	31440 <__assert_fail@plt+0x20150>
   3143c:	mov	r2, #1
   31440:	mov	r3, r2
   31444:	and	r3, r3, #1
   31448:	uxtb	r3, r3
   3144c:	cmp	r3, #0
   31450:	beq	3146c <__assert_fail@plt+0x2017c>
   31454:	bl	111f4 <__errno_location@plt>
   31458:	mov	r2, r0
   3145c:	mov	r3, #12
   31460:	str	r3, [r2]
   31464:	mov	r3, #0
   31468:	b	31480 <__assert_fail@plt+0x20190>
   3146c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31470:	ldr	r0, [fp, #-16]
   31474:	bl	110ec <realloc@plt>
   31478:	str	r0, [fp, #-8]
   3147c:	ldr	r3, [fp, #-8]
   31480:	mov	r0, r3
   31484:	sub	sp, fp, #4
   31488:	ldr	fp, [sp]
   3148c:	add	sp, sp, #4
   31490:	pop	{pc}		; (ldr pc, [sp], #4)
   31494:	strd	r4, [sp, #-16]!
   31498:	str	fp, [sp, #8]
   3149c:	str	lr, [sp, #12]
   314a0:	add	fp, sp, #12
   314a4:	sub	sp, sp, #16
   314a8:	str	r0, [fp, #-24]	; 0xffffffe8
   314ac:	str	r1, [fp, #-28]	; 0xffffffe4
   314b0:	ldr	r5, [fp, #-24]	; 0xffffffe8
   314b4:	ldr	r4, [fp, #-28]	; 0xffffffe4
   314b8:	cmp	r5, r4
   314bc:	bne	314c8 <__assert_fail@plt+0x201d8>
   314c0:	mov	r3, #0
   314c4:	b	31528 <__assert_fail@plt+0x20238>
   314c8:	ldrb	r3, [r5]
   314cc:	mov	r0, r3
   314d0:	bl	323b4 <__assert_fail@plt+0x210c4>
   314d4:	mov	r3, r0
   314d8:	strb	r3, [fp, #-13]
   314dc:	ldrb	r3, [r4]
   314e0:	mov	r0, r3
   314e4:	bl	323b4 <__assert_fail@plt+0x210c4>
   314e8:	mov	r3, r0
   314ec:	strb	r3, [fp, #-14]
   314f0:	ldrb	r3, [fp, #-13]
   314f4:	cmp	r3, #0
   314f8:	beq	31518 <__assert_fail@plt+0x20228>
   314fc:	add	r5, r5, #1
   31500:	add	r4, r4, #1
   31504:	ldrb	r2, [fp, #-13]
   31508:	ldrb	r3, [fp, #-14]
   3150c:	cmp	r2, r3
   31510:	beq	314c8 <__assert_fail@plt+0x201d8>
   31514:	b	3151c <__assert_fail@plt+0x2022c>
   31518:	nop	{0}
   3151c:	ldrb	r2, [fp, #-13]
   31520:	ldrb	r3, [fp, #-14]
   31524:	sub	r3, r2, r3
   31528:	mov	r0, r3
   3152c:	sub	sp, fp, #12
   31530:	ldrd	r4, [sp]
   31534:	ldr	fp, [sp, #8]
   31538:	add	sp, sp, #12
   3153c:	pop	{pc}		; (ldr pc, [sp], #4)
   31540:	str	fp, [sp, #-8]!
   31544:	str	lr, [sp, #4]
   31548:	add	fp, sp, #4
   3154c:	sub	sp, sp, #16
   31550:	str	r0, [fp, #-16]
   31554:	ldr	r0, [fp, #-16]
   31558:	bl	11140 <__fpending@plt>
   3155c:	mov	r3, r0
   31560:	cmp	r3, #0
   31564:	movne	r3, #1
   31568:	moveq	r3, #0
   3156c:	strb	r3, [fp, #-5]
   31570:	ldr	r0, [fp, #-16]
   31574:	bl	1114c <ferror_unlocked@plt>
   31578:	mov	r3, r0
   3157c:	cmp	r3, #0
   31580:	movne	r3, #1
   31584:	moveq	r3, #0
   31588:	strb	r3, [fp, #-6]
   3158c:	ldr	r0, [fp, #-16]
   31590:	bl	1309c <__assert_fail@plt+0x1dac>
   31594:	mov	r3, r0
   31598:	cmp	r3, #0
   3159c:	movne	r3, #1
   315a0:	moveq	r3, #0
   315a4:	strb	r3, [fp, #-7]
   315a8:	ldrb	r3, [fp, #-6]
   315ac:	cmp	r3, #0
   315b0:	bne	315e0 <__assert_fail@plt+0x202f0>
   315b4:	ldrb	r3, [fp, #-7]
   315b8:	cmp	r3, #0
   315bc:	beq	3160c <__assert_fail@plt+0x2031c>
   315c0:	ldrb	r3, [fp, #-5]
   315c4:	cmp	r3, #0
   315c8:	bne	315e0 <__assert_fail@plt+0x202f0>
   315cc:	bl	111f4 <__errno_location@plt>
   315d0:	mov	r3, r0
   315d4:	ldr	r3, [r3]
   315d8:	cmp	r3, #9
   315dc:	beq	3160c <__assert_fail@plt+0x2031c>
   315e0:	ldrb	r3, [fp, #-7]
   315e4:	eor	r3, r3, #1
   315e8:	uxtb	r3, r3
   315ec:	cmp	r3, #0
   315f0:	beq	31604 <__assert_fail@plt+0x20314>
   315f4:	bl	111f4 <__errno_location@plt>
   315f8:	mov	r2, r0
   315fc:	mov	r3, #0
   31600:	str	r3, [r2]
   31604:	mvn	r3, #0
   31608:	b	31610 <__assert_fail@plt+0x20320>
   3160c:	mov	r3, #0
   31610:	mov	r0, r3
   31614:	sub	sp, fp, #4
   31618:	ldr	fp, [sp]
   3161c:	add	sp, sp, #4
   31620:	pop	{pc}		; (ldr pc, [sp], #4)
   31624:	str	fp, [sp, #-8]!
   31628:	str	lr, [sp, #4]
   3162c:	add	fp, sp, #4
   31630:	sub	sp, sp, #32
   31634:	str	r0, [fp, #-24]	; 0xffffffe8
   31638:	str	r1, [fp, #-28]	; 0xffffffe4
   3163c:	str	r2, [fp, #-32]	; 0xffffffe0
   31640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31644:	ldr	r3, [r3, #4]
   31648:	cmp	r3, #0
   3164c:	bne	3168c <__assert_fail@plt+0x2039c>
   31650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31654:	cmp	r3, #3
   31658:	bhi	31668 <__assert_fail@plt+0x20378>
   3165c:	mov	r3, #16
   31660:	str	r3, [fp, #-8]
   31664:	b	316d8 <__assert_fail@plt+0x203e8>
   31668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3166c:	cmp	r3, #7
   31670:	bhi	31680 <__assert_fail@plt+0x20390>
   31674:	mov	r3, #8
   31678:	str	r3, [fp, #-8]
   3167c:	b	316d8 <__assert_fail@plt+0x203e8>
   31680:	mov	r3, #4
   31684:	str	r3, [fp, #-8]
   31688:	b	316d8 <__assert_fail@plt+0x203e8>
   3168c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31690:	ldr	r2, [r3, #4]
   31694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31698:	ldr	r3, [r3, #4]
   3169c:	lsr	r3, r3, #1
   316a0:	add	r3, r2, r3
   316a4:	add	r3, r3, #1
   316a8:	str	r3, [fp, #-8]
   316ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   316b0:	ldr	r3, [r3, #4]
   316b4:	ldr	r2, [fp, #-8]
   316b8:	cmp	r2, r3
   316bc:	bhi	316d8 <__assert_fail@plt+0x203e8>
   316c0:	bl	111f4 <__errno_location@plt>
   316c4:	mov	r2, r0
   316c8:	mov	r3, #12
   316cc:	str	r3, [r2]
   316d0:	mov	r3, #0
   316d4:	b	317e0 <__assert_fail@plt+0x204f0>
   316d8:	mov	ip, #0
   316dc:	ldr	r2, [fp, #-8]
   316e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   316e4:	umull	r0, r1, r2, r3
   316e8:	mov	r2, #0
   316ec:	mov	r3, #0
   316f0:	mov	r2, r1
   316f4:	mov	r3, #0
   316f8:	cmp	r2, #0
   316fc:	beq	31704 <__assert_fail@plt+0x20414>
   31700:	mov	ip, #1
   31704:	mov	r3, r0
   31708:	str	r3, [fp, #-16]
   3170c:	mov	r3, ip
   31710:	and	r3, r3, #1
   31714:	uxtb	r3, r3
   31718:	cmp	r3, #0
   3171c:	beq	31728 <__assert_fail@plt+0x20438>
   31720:	mov	r3, #0
   31724:	b	317e0 <__assert_fail@plt+0x204f0>
   31728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3172c:	ldr	r3, [r3, #8]
   31730:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31734:	cmp	r2, r3
   31738:	bne	31794 <__assert_fail@plt+0x204a4>
   3173c:	ldr	r3, [fp, #-16]
   31740:	mov	r0, r3
   31744:	bl	3134c <__assert_fail@plt+0x2005c>
   31748:	mov	r3, r0
   3174c:	str	r3, [fp, #-12]
   31750:	ldr	r3, [fp, #-12]
   31754:	cmp	r3, #0
   31758:	beq	317b0 <__assert_fail@plt+0x204c0>
   3175c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31760:	ldr	r3, [r3, #8]
   31764:	cmp	r3, #0
   31768:	beq	317b0 <__assert_fail@plt+0x204c0>
   3176c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31770:	ldr	r1, [r3, #8]
   31774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31778:	ldr	r3, [r3]
   3177c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31780:	mul	r3, r2, r3
   31784:	mov	r2, r3
   31788:	ldr	r0, [fp, #-12]
   3178c:	bl	11074 <memcpy@plt>
   31790:	b	317b0 <__assert_fail@plt+0x204c0>
   31794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31798:	ldr	r3, [r3, #8]
   3179c:	ldr	r2, [fp, #-16]
   317a0:	mov	r1, r2
   317a4:	mov	r0, r3
   317a8:	bl	313dc <__assert_fail@plt+0x200ec>
   317ac:	str	r0, [fp, #-12]
   317b0:	ldr	r3, [fp, #-12]
   317b4:	cmp	r3, #0
   317b8:	bne	317c4 <__assert_fail@plt+0x204d4>
   317bc:	mov	r3, #0
   317c0:	b	317e0 <__assert_fail@plt+0x204f0>
   317c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   317c8:	ldr	r2, [fp, #-12]
   317cc:	str	r2, [r3, #8]
   317d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   317d4:	ldr	r2, [fp, #-8]
   317d8:	str	r2, [r3, #4]
   317dc:	mov	r3, #1
   317e0:	mov	r0, r3
   317e4:	sub	sp, fp, #4
   317e8:	ldr	fp, [sp]
   317ec:	add	sp, sp, #4
   317f0:	pop	{pc}		; (ldr pc, [sp], #4)
   317f4:	push	{fp}		; (str fp, [sp, #-4]!)
   317f8:	add	fp, sp, #0
   317fc:	mvn	r3, #0
   31800:	mov	r0, r3
   31804:	add	sp, fp, #0
   31808:	pop	{fp}		; (ldr fp, [sp], #4)
   3180c:	bx	lr
   31810:	str	r4, [sp, #-12]!
   31814:	str	fp, [sp, #4]
   31818:	str	lr, [sp, #8]
   3181c:	add	fp, sp, #8
   31820:	sub	sp, sp, #12
   31824:	str	r0, [fp, #-16]
   31828:	ldr	r3, [fp, #-16]
   3182c:	ldr	r4, [r3, #4]
   31830:	bl	317f4 <__assert_fail@plt+0x20504>
   31834:	mov	r3, r0
   31838:	cmp	r4, r3
   3183c:	moveq	r3, #1
   31840:	movne	r3, #0
   31844:	uxtb	r3, r3
   31848:	mov	r0, r3
   3184c:	sub	sp, fp, #8
   31850:	ldr	r4, [sp]
   31854:	ldr	fp, [sp, #4]
   31858:	add	sp, sp, #8
   3185c:	pop	{pc}		; (ldr pc, [sp], #4)
   31860:	str	fp, [sp, #-8]!
   31864:	str	lr, [sp, #4]
   31868:	add	fp, sp, #4
   3186c:	sub	sp, sp, #32
   31870:	str	r0, [fp, #-24]	; 0xffffffe8
   31874:	str	r1, [fp, #-28]	; 0xffffffe4
   31878:	str	r2, [fp, #-32]	; 0xffffffe0
   3187c:	str	r3, [fp, #-36]	; 0xffffffdc
   31880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31884:	bl	31810 <__assert_fail@plt+0x20520>
   31888:	mov	r3, r0
   3188c:	cmp	r3, #0
   31890:	beq	3189c <__assert_fail@plt+0x205ac>
   31894:	mov	r3, #0
   31898:	b	31994 <__assert_fail@plt+0x206a4>
   3189c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   318a0:	ldr	r3, [r3]
   318a4:	str	r3, [fp, #-8]
   318a8:	ldr	r3, [fp, #-8]
   318ac:	cmp	r3, #0
   318b0:	bne	318f8 <__assert_fail@plt+0x20608>
   318b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   318b8:	ldr	r3, [r3, #8]
   318bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   318c0:	cmp	r2, r3
   318c4:	beq	318d8 <__assert_fail@plt+0x205e8>
   318c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   318cc:	ldr	r3, [r3, #8]
   318d0:	mov	r0, r3
   318d4:	bl	31b28 <__assert_fail@plt+0x20838>
   318d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   318dc:	mov	r2, #0
   318e0:	str	r2, [r3]
   318e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   318e8:	mov	r2, #0
   318ec:	str	r2, [r3, #4]
   318f0:	mov	r3, #1
   318f4:	b	31994 <__assert_fail@plt+0x206a4>
   318f8:	ldr	r3, [fp, #-8]
   318fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31900:	mul	r3, r2, r3
   31904:	str	r3, [fp, #-12]
   31908:	ldr	r0, [fp, #-12]
   3190c:	bl	3134c <__assert_fail@plt+0x2005c>
   31910:	mov	r3, r0
   31914:	str	r3, [fp, #-16]
   31918:	ldr	r3, [fp, #-16]
   3191c:	cmp	r3, #0
   31920:	beq	31990 <__assert_fail@plt+0x206a0>
   31924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31928:	ldr	r3, [r3, #8]
   3192c:	cmp	r3, #0
   31930:	beq	3194c <__assert_fail@plt+0x2065c>
   31934:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31938:	ldr	r3, [r3, #8]
   3193c:	ldr	r2, [fp, #-12]
   31940:	mov	r1, r3
   31944:	ldr	r0, [fp, #-16]
   31948:	bl	11074 <memcpy@plt>
   3194c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31950:	ldr	r3, [r3, #8]
   31954:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31958:	cmp	r2, r3
   3195c:	beq	31970 <__assert_fail@plt+0x20680>
   31960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31964:	ldr	r3, [r3, #8]
   31968:	mov	r0, r3
   3196c:	bl	31b28 <__assert_fail@plt+0x20838>
   31970:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31974:	ldr	r2, [fp, #-16]
   31978:	str	r2, [r3]
   3197c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31980:	ldr	r2, [fp, #-8]
   31984:	str	r2, [r3, #4]
   31988:	mov	r3, #1
   3198c:	b	31994 <__assert_fail@plt+0x206a4>
   31990:	mov	r3, #0
   31994:	mov	r0, r3
   31998:	sub	sp, fp, #4
   3199c:	ldr	fp, [sp]
   319a0:	add	sp, sp, #4
   319a4:	pop	{pc}		; (ldr pc, [sp], #4)
   319a8:	str	fp, [sp, #-8]!
   319ac:	str	lr, [sp, #4]
   319b0:	add	fp, sp, #4
   319b4:	sub	sp, sp, #24
   319b8:	str	r0, [fp, #-16]
   319bc:	str	r1, [fp, #-20]	; 0xffffffec
   319c0:	str	r2, [fp, #-24]	; 0xffffffe8
   319c4:	str	r3, [fp, #-28]	; 0xffffffe4
   319c8:	ldr	r3, [fp, #-16]
   319cc:	ldr	r3, [r3, #4]
   319d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   319d4:	cmp	r2, r3
   319d8:	bhi	319f0 <__assert_fail@plt+0x20700>
   319dc:	ldr	r3, [fp, #-16]
   319e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   319e4:	str	r2, [r3]
   319e8:	mov	r3, #1
   319ec:	b	31b14 <__assert_fail@plt+0x20824>
   319f0:	mov	ip, #0
   319f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   319f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   319fc:	umull	r0, r1, r2, r3
   31a00:	mov	r2, #0
   31a04:	mov	r3, #0
   31a08:	mov	r2, r1
   31a0c:	mov	r3, #0
   31a10:	cmp	r2, #0
   31a14:	beq	31a1c <__assert_fail@plt+0x2072c>
   31a18:	mov	ip, #1
   31a1c:	mov	r3, r0
   31a20:	str	r3, [fp, #-12]
   31a24:	mov	r3, ip
   31a28:	and	r3, r3, #1
   31a2c:	uxtb	r3, r3
   31a30:	cmp	r3, #0
   31a34:	beq	31a50 <__assert_fail@plt+0x20760>
   31a38:	bl	111f4 <__errno_location@plt>
   31a3c:	mov	r2, r0
   31a40:	mov	r3, #12
   31a44:	str	r3, [r2]
   31a48:	mov	r3, #0
   31a4c:	b	31b14 <__assert_fail@plt+0x20824>
   31a50:	ldr	r3, [fp, #-16]
   31a54:	ldr	r3, [r3, #8]
   31a58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31a5c:	cmp	r2, r3
   31a60:	bne	31abc <__assert_fail@plt+0x207cc>
   31a64:	ldr	r3, [fp, #-12]
   31a68:	mov	r0, r3
   31a6c:	bl	3134c <__assert_fail@plt+0x2005c>
   31a70:	mov	r3, r0
   31a74:	str	r3, [fp, #-8]
   31a78:	ldr	r3, [fp, #-8]
   31a7c:	cmp	r3, #0
   31a80:	beq	31ad8 <__assert_fail@plt+0x207e8>
   31a84:	ldr	r3, [fp, #-16]
   31a88:	ldr	r3, [r3, #8]
   31a8c:	cmp	r3, #0
   31a90:	beq	31ad8 <__assert_fail@plt+0x207e8>
   31a94:	ldr	r3, [fp, #-16]
   31a98:	ldr	r1, [r3, #8]
   31a9c:	ldr	r3, [fp, #-16]
   31aa0:	ldr	r3, [r3]
   31aa4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31aa8:	mul	r3, r2, r3
   31aac:	mov	r2, r3
   31ab0:	ldr	r0, [fp, #-8]
   31ab4:	bl	11074 <memcpy@plt>
   31ab8:	b	31ad8 <__assert_fail@plt+0x207e8>
   31abc:	ldr	r3, [fp, #-16]
   31ac0:	ldr	r3, [r3, #8]
   31ac4:	ldr	r2, [fp, #-12]
   31ac8:	mov	r1, r2
   31acc:	mov	r0, r3
   31ad0:	bl	313dc <__assert_fail@plt+0x200ec>
   31ad4:	str	r0, [fp, #-8]
   31ad8:	ldr	r3, [fp, #-8]
   31adc:	cmp	r3, #0
   31ae0:	bne	31aec <__assert_fail@plt+0x207fc>
   31ae4:	mov	r3, #0
   31ae8:	b	31b14 <__assert_fail@plt+0x20824>
   31aec:	ldr	r3, [fp, #-16]
   31af0:	ldr	r2, [fp, #-8]
   31af4:	str	r2, [r3, #8]
   31af8:	ldr	r3, [fp, #-16]
   31afc:	ldr	r2, [fp, #-20]	; 0xffffffec
   31b00:	str	r2, [r3, #4]
   31b04:	ldr	r3, [fp, #-16]
   31b08:	ldr	r2, [fp, #-20]	; 0xffffffec
   31b0c:	str	r2, [r3]
   31b10:	mov	r3, #1
   31b14:	mov	r0, r3
   31b18:	sub	sp, fp, #4
   31b1c:	ldr	fp, [sp]
   31b20:	add	sp, sp, #4
   31b24:	pop	{pc}		; (ldr pc, [sp], #4)
   31b28:	str	r4, [sp, #-12]!
   31b2c:	str	fp, [sp, #4]
   31b30:	str	lr, [sp, #8]
   31b34:	add	fp, sp, #8
   31b38:	sub	sp, sp, #20
   31b3c:	str	r0, [fp, #-24]	; 0xffffffe8
   31b40:	bl	111f4 <__errno_location@plt>
   31b44:	mov	r3, r0
   31b48:	ldr	r3, [r3]
   31b4c:	str	r3, [fp, #-20]	; 0xffffffec
   31b50:	bl	111f4 <__errno_location@plt>
   31b54:	mov	r3, r0
   31b58:	ldr	r3, [r3]
   31b5c:	str	r3, [fp, #-16]
   31b60:	bl	111f4 <__errno_location@plt>
   31b64:	mov	r2, r0
   31b68:	mov	r3, #0
   31b6c:	str	r3, [r2]
   31b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b74:	bl	11050 <free@plt>
   31b78:	bl	111f4 <__errno_location@plt>
   31b7c:	mov	r3, r0
   31b80:	ldr	r3, [r3]
   31b84:	cmp	r3, #0
   31b88:	moveq	r3, #1
   31b8c:	movne	r3, #0
   31b90:	uxtb	r3, r3
   31b94:	mov	r4, r3
   31b98:	bl	111f4 <__errno_location@plt>
   31b9c:	mov	r2, r0
   31ba0:	lsl	r3, r4, #2
   31ba4:	sub	r1, fp, #12
   31ba8:	add	r3, r1, r3
   31bac:	ldr	r3, [r3, #-8]
   31bb0:	str	r3, [r2]
   31bb4:	nop	{0}
   31bb8:	sub	sp, fp, #8
   31bbc:	ldr	r4, [sp]
   31bc0:	ldr	fp, [sp, #4]
   31bc4:	add	sp, sp, #8
   31bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   31bcc:	str	fp, [sp, #-8]!
   31bd0:	str	lr, [sp, #4]
   31bd4:	add	fp, sp, #4
   31bd8:	bl	111f4 <__errno_location@plt>
   31bdc:	mov	r2, r0
   31be0:	mov	r3, #12
   31be4:	str	r3, [r2]
   31be8:	mov	r3, #0
   31bec:	mov	r0, r3
   31bf0:	sub	sp, fp, #4
   31bf4:	ldr	fp, [sp]
   31bf8:	add	sp, sp, #4
   31bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   31c00:	str	fp, [sp, #-8]!
   31c04:	str	lr, [sp, #4]
   31c08:	add	fp, sp, #4
   31c0c:	sub	sp, sp, #8
   31c10:	str	r0, [fp, #-8]
   31c14:	ldr	r3, [fp, #-8]
   31c18:	mov	r0, r3
   31c1c:	bl	3134c <__assert_fail@plt+0x2005c>
   31c20:	mov	r3, r0
   31c24:	mov	r0, r3
   31c28:	sub	sp, fp, #4
   31c2c:	ldr	fp, [sp]
   31c30:	add	sp, sp, #4
   31c34:	pop	{pc}		; (ldr pc, [sp], #4)
   31c38:	str	fp, [sp, #-8]!
   31c3c:	str	lr, [sp, #4]
   31c40:	add	fp, sp, #4
   31c44:	sub	sp, sp, #8
   31c48:	str	r0, [fp, #-8]
   31c4c:	str	r1, [fp, #-12]
   31c50:	ldr	r3, [fp, #-12]
   31c54:	cmp	r3, #0
   31c58:	moveq	r3, #1
   31c5c:	movne	r3, #0
   31c60:	uxtb	r3, r3
   31c64:	mov	r2, r3
   31c68:	ldr	r3, [fp, #-12]
   31c6c:	orr	r3, r2, r3
   31c70:	mov	r1, r3
   31c74:	ldr	r0, [fp, #-8]
   31c78:	bl	313dc <__assert_fail@plt+0x200ec>
   31c7c:	mov	r3, r0
   31c80:	mov	r0, r3
   31c84:	sub	sp, fp, #4
   31c88:	ldr	fp, [sp]
   31c8c:	add	sp, sp, #4
   31c90:	pop	{pc}		; (ldr pc, [sp], #4)
   31c94:	str	fp, [sp, #-8]!
   31c98:	str	lr, [sp, #4]
   31c9c:	add	fp, sp, #4
   31ca0:	sub	sp, sp, #8
   31ca4:	str	r0, [fp, #-8]
   31ca8:	str	r1, [fp, #-12]
   31cac:	ldr	r3, [fp, #-8]
   31cb0:	ldr	r2, [fp, #-12]
   31cb4:	mov	r1, r2
   31cb8:	mov	r0, r3
   31cbc:	bl	3127c <__assert_fail@plt+0x1ff8c>
   31cc0:	mov	r3, r0
   31cc4:	mov	r0, r3
   31cc8:	sub	sp, fp, #4
   31ccc:	ldr	fp, [sp]
   31cd0:	add	sp, sp, #4
   31cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   31cd8:	str	fp, [sp, #-8]!
   31cdc:	str	lr, [sp, #4]
   31ce0:	add	fp, sp, #4
   31ce4:	sub	sp, sp, #16
   31ce8:	str	r0, [fp, #-8]
   31cec:	str	r1, [fp, #-12]
   31cf0:	str	r2, [fp, #-16]
   31cf4:	ldr	r3, [fp, #-12]
   31cf8:	cmp	r3, #0
   31cfc:	beq	31d0c <__assert_fail@plt+0x20a1c>
   31d00:	ldr	r3, [fp, #-16]
   31d04:	cmp	r3, #0
   31d08:	bne	31d1c <__assert_fail@plt+0x20a2c>
   31d0c:	mov	r3, #1
   31d10:	str	r3, [fp, #-16]
   31d14:	ldr	r3, [fp, #-16]
   31d18:	str	r3, [fp, #-12]
   31d1c:	ldr	r3, [fp, #-12]
   31d20:	ldr	r2, [fp, #-16]
   31d24:	mov	r1, r3
   31d28:	ldr	r0, [fp, #-8]
   31d2c:	bl	31e68 <__assert_fail@plt+0x20b78>
   31d30:	mov	r3, r0
   31d34:	mov	r0, r3
   31d38:	sub	sp, fp, #4
   31d3c:	ldr	fp, [sp]
   31d40:	add	sp, sp, #4
   31d44:	pop	{pc}		; (ldr pc, [sp], #4)
   31d48:	str	fp, [sp, #-8]!
   31d4c:	str	lr, [sp, #4]
   31d50:	add	fp, sp, #4
   31d54:	sub	sp, sp, #8
   31d58:	mov	r0, #14
   31d5c:	bl	11284 <nl_langinfo@plt>
   31d60:	str	r0, [fp, #-8]
   31d64:	ldr	r3, [fp, #-8]
   31d68:	cmp	r3, #0
   31d6c:	bne	31d7c <__assert_fail@plt+0x20a8c>
   31d70:	movw	r3, #15068	; 0x3adc
   31d74:	movt	r3, #3
   31d78:	str	r3, [fp, #-8]
   31d7c:	ldr	r3, [fp, #-8]
   31d80:	ldrb	r3, [r3]
   31d84:	cmp	r3, #0
   31d88:	bne	31d98 <__assert_fail@plt+0x20aa8>
   31d8c:	movw	r3, #15072	; 0x3ae0
   31d90:	movt	r3, #3
   31d94:	str	r3, [fp, #-8]
   31d98:	ldr	r3, [fp, #-8]
   31d9c:	mov	r0, r3
   31da0:	sub	sp, fp, #4
   31da4:	ldr	fp, [sp]
   31da8:	add	sp, sp, #4
   31dac:	pop	{pc}		; (ldr pc, [sp], #4)
   31db0:	str	fp, [sp, #-8]!
   31db4:	str	lr, [sp, #4]
   31db8:	add	fp, sp, #4
   31dbc:	sub	sp, sp, #32
   31dc0:	str	r0, [fp, #-24]	; 0xffffffe8
   31dc4:	str	r1, [fp, #-28]	; 0xffffffe4
   31dc8:	str	r2, [fp, #-32]	; 0xffffffe0
   31dcc:	str	r3, [fp, #-36]	; 0xffffffdc
   31dd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31dd4:	cmp	r3, #0
   31dd8:	bne	31de4 <__assert_fail@plt+0x20af4>
   31ddc:	sub	r3, fp, #16
   31de0:	str	r3, [fp, #-24]	; 0xffffffe8
   31de4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31de8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31df4:	bl	11158 <mbrtowc@plt>
   31df8:	str	r0, [fp, #-8]
   31dfc:	ldr	r3, [fp, #-8]
   31e00:	cmn	r3, #3
   31e04:	bls	31e50 <__assert_fail@plt+0x20b60>
   31e08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31e0c:	cmp	r3, #0
   31e10:	beq	31e50 <__assert_fail@plt+0x20b60>
   31e14:	mov	r0, #0
   31e18:	bl	32434 <__assert_fail@plt+0x21144>
   31e1c:	mov	r3, r0
   31e20:	eor	r3, r3, #1
   31e24:	uxtb	r3, r3
   31e28:	cmp	r3, #0
   31e2c:	beq	31e50 <__assert_fail@plt+0x20b60>
   31e30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31e34:	ldrb	r3, [r3]
   31e38:	strb	r3, [fp, #-9]
   31e3c:	ldrb	r2, [fp, #-9]
   31e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e44:	str	r2, [r3]
   31e48:	mov	r3, #1
   31e4c:	b	31e54 <__assert_fail@plt+0x20b64>
   31e50:	ldr	r3, [fp, #-8]
   31e54:	mov	r0, r3
   31e58:	sub	sp, fp, #4
   31e5c:	ldr	fp, [sp]
   31e60:	add	sp, sp, #4
   31e64:	pop	{pc}		; (ldr pc, [sp], #4)
   31e68:	str	fp, [sp, #-8]!
   31e6c:	str	lr, [sp, #4]
   31e70:	add	fp, sp, #4
   31e74:	sub	sp, sp, #24
   31e78:	str	r0, [fp, #-16]
   31e7c:	str	r1, [fp, #-20]	; 0xffffffec
   31e80:	str	r2, [fp, #-24]	; 0xffffffe8
   31e84:	mov	ip, #0
   31e88:	ldr	r2, [fp, #-20]	; 0xffffffec
   31e8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e90:	umull	r0, r1, r2, r3
   31e94:	mov	r2, #0
   31e98:	mov	r3, #0
   31e9c:	mov	r2, r1
   31ea0:	mov	r3, #0
   31ea4:	cmp	r2, #0
   31ea8:	beq	31eb0 <__assert_fail@plt+0x20bc0>
   31eac:	mov	ip, #1
   31eb0:	mov	r3, r0
   31eb4:	str	r3, [fp, #-8]
   31eb8:	mov	r3, ip
   31ebc:	and	r3, r3, #1
   31ec0:	uxtb	r3, r3
   31ec4:	cmp	r3, #0
   31ec8:	beq	31ee4 <__assert_fail@plt+0x20bf4>
   31ecc:	bl	111f4 <__errno_location@plt>
   31ed0:	mov	r2, r0
   31ed4:	mov	r3, #12
   31ed8:	str	r3, [r2]
   31edc:	mov	r3, #0
   31ee0:	b	31ef8 <__assert_fail@plt+0x20c08>
   31ee4:	ldr	r3, [fp, #-8]
   31ee8:	mov	r1, r3
   31eec:	ldr	r0, [fp, #-16]
   31ef0:	bl	313dc <__assert_fail@plt+0x200ec>
   31ef4:	mov	r3, r0
   31ef8:	mov	r0, r3
   31efc:	sub	sp, fp, #4
   31f00:	ldr	fp, [sp]
   31f04:	add	sp, sp, #4
   31f08:	pop	{pc}		; (ldr pc, [sp], #4)
   31f0c:	push	{fp}		; (str fp, [sp, #-4]!)
   31f10:	add	fp, sp, #0
   31f14:	sub	sp, sp, #12
   31f18:	str	r0, [fp, #-8]
   31f1c:	ldr	r3, [fp, #-8]
   31f20:	cmp	r3, #90	; 0x5a
   31f24:	bgt	31f48 <__assert_fail@plt+0x20c58>
   31f28:	ldr	r3, [fp, #-8]
   31f2c:	cmp	r3, #65	; 0x41
   31f30:	bge	31f58 <__assert_fail@plt+0x20c68>
   31f34:	ldr	r3, [fp, #-8]
   31f38:	sub	r3, r3, #48	; 0x30
   31f3c:	cmp	r3, #9
   31f40:	bhi	31f60 <__assert_fail@plt+0x20c70>
   31f44:	b	31f58 <__assert_fail@plt+0x20c68>
   31f48:	ldr	r3, [fp, #-8]
   31f4c:	sub	r3, r3, #97	; 0x61
   31f50:	cmp	r3, #25
   31f54:	bhi	31f60 <__assert_fail@plt+0x20c70>
   31f58:	mov	r3, #1
   31f5c:	b	31f64 <__assert_fail@plt+0x20c74>
   31f60:	mov	r3, #0
   31f64:	mov	r0, r3
   31f68:	add	sp, fp, #0
   31f6c:	pop	{fp}		; (ldr fp, [sp], #4)
   31f70:	bx	lr
   31f74:	push	{fp}		; (str fp, [sp, #-4]!)
   31f78:	add	fp, sp, #0
   31f7c:	sub	sp, sp, #12
   31f80:	str	r0, [fp, #-8]
   31f84:	ldr	r3, [fp, #-8]
   31f88:	cmp	r3, #65	; 0x41
   31f8c:	blt	31fb4 <__assert_fail@plt+0x20cc4>
   31f90:	ldr	r3, [fp, #-8]
   31f94:	cmp	r3, #90	; 0x5a
   31f98:	ble	31fac <__assert_fail@plt+0x20cbc>
   31f9c:	ldr	r3, [fp, #-8]
   31fa0:	sub	r3, r3, #97	; 0x61
   31fa4:	cmp	r3, #25
   31fa8:	bhi	31fb4 <__assert_fail@plt+0x20cc4>
   31fac:	mov	r3, #1
   31fb0:	b	31fb8 <__assert_fail@plt+0x20cc8>
   31fb4:	mov	r3, #0
   31fb8:	mov	r0, r3
   31fbc:	add	sp, fp, #0
   31fc0:	pop	{fp}		; (ldr fp, [sp], #4)
   31fc4:	bx	lr
   31fc8:	push	{fp}		; (str fp, [sp, #-4]!)
   31fcc:	add	fp, sp, #0
   31fd0:	sub	sp, sp, #12
   31fd4:	str	r0, [fp, #-8]
   31fd8:	ldr	r3, [fp, #-8]
   31fdc:	cmp	r3, #127	; 0x7f
   31fe0:	bhi	31fec <__assert_fail@plt+0x20cfc>
   31fe4:	mov	r3, #1
   31fe8:	b	31ff0 <__assert_fail@plt+0x20d00>
   31fec:	mov	r3, #0
   31ff0:	mov	r0, r3
   31ff4:	add	sp, fp, #0
   31ff8:	pop	{fp}		; (ldr fp, [sp], #4)
   31ffc:	bx	lr
   32000:	push	{fp}		; (str fp, [sp, #-4]!)
   32004:	add	fp, sp, #0
   32008:	sub	sp, sp, #12
   3200c:	str	r0, [fp, #-8]
   32010:	ldr	r3, [fp, #-8]
   32014:	cmp	r3, #32
   32018:	beq	32028 <__assert_fail@plt+0x20d38>
   3201c:	ldr	r3, [fp, #-8]
   32020:	cmp	r3, #9
   32024:	bne	32030 <__assert_fail@plt+0x20d40>
   32028:	mov	r3, #1
   3202c:	b	32034 <__assert_fail@plt+0x20d44>
   32030:	mov	r3, #0
   32034:	and	r3, r3, #1
   32038:	uxtb	r3, r3
   3203c:	mov	r0, r3
   32040:	add	sp, fp, #0
   32044:	pop	{fp}		; (ldr fp, [sp], #4)
   32048:	bx	lr
   3204c:	push	{fp}		; (str fp, [sp, #-4]!)
   32050:	add	fp, sp, #0
   32054:	sub	sp, sp, #12
   32058:	str	r0, [fp, #-8]
   3205c:	ldr	r3, [fp, #-8]
   32060:	cmp	r3, #0
   32064:	blt	32088 <__assert_fail@plt+0x20d98>
   32068:	ldr	r3, [fp, #-8]
   3206c:	cmp	r3, #31
   32070:	ble	32080 <__assert_fail@plt+0x20d90>
   32074:	ldr	r3, [fp, #-8]
   32078:	cmp	r3, #127	; 0x7f
   3207c:	bne	32088 <__assert_fail@plt+0x20d98>
   32080:	mov	r3, #1
   32084:	b	3208c <__assert_fail@plt+0x20d9c>
   32088:	mov	r3, #0
   3208c:	mov	r0, r3
   32090:	add	sp, fp, #0
   32094:	pop	{fp}		; (ldr fp, [sp], #4)
   32098:	bx	lr
   3209c:	push	{fp}		; (str fp, [sp, #-4]!)
   320a0:	add	fp, sp, #0
   320a4:	sub	sp, sp, #12
   320a8:	str	r0, [fp, #-8]
   320ac:	ldr	r3, [fp, #-8]
   320b0:	sub	r3, r3, #48	; 0x30
   320b4:	cmp	r3, #9
   320b8:	bhi	320c4 <__assert_fail@plt+0x20dd4>
   320bc:	mov	r3, #1
   320c0:	b	320c8 <__assert_fail@plt+0x20dd8>
   320c4:	mov	r3, #0
   320c8:	mov	r0, r3
   320cc:	add	sp, fp, #0
   320d0:	pop	{fp}		; (ldr fp, [sp], #4)
   320d4:	bx	lr
   320d8:	push	{fp}		; (str fp, [sp, #-4]!)
   320dc:	add	fp, sp, #0
   320e0:	sub	sp, sp, #12
   320e4:	str	r0, [fp, #-8]
   320e8:	ldr	r3, [fp, #-8]
   320ec:	sub	r3, r3, #33	; 0x21
   320f0:	cmp	r3, #93	; 0x5d
   320f4:	bhi	32100 <__assert_fail@plt+0x20e10>
   320f8:	mov	r3, #1
   320fc:	b	32104 <__assert_fail@plt+0x20e14>
   32100:	mov	r3, #0
   32104:	mov	r0, r3
   32108:	add	sp, fp, #0
   3210c:	pop	{fp}		; (ldr fp, [sp], #4)
   32110:	bx	lr
   32114:	push	{fp}		; (str fp, [sp, #-4]!)
   32118:	add	fp, sp, #0
   3211c:	sub	sp, sp, #12
   32120:	str	r0, [fp, #-8]
   32124:	ldr	r3, [fp, #-8]
   32128:	sub	r3, r3, #97	; 0x61
   3212c:	cmp	r3, #25
   32130:	bhi	3213c <__assert_fail@plt+0x20e4c>
   32134:	mov	r3, #1
   32138:	b	32140 <__assert_fail@plt+0x20e50>
   3213c:	mov	r3, #0
   32140:	mov	r0, r3
   32144:	add	sp, fp, #0
   32148:	pop	{fp}		; (ldr fp, [sp], #4)
   3214c:	bx	lr
   32150:	push	{fp}		; (str fp, [sp, #-4]!)
   32154:	add	fp, sp, #0
   32158:	sub	sp, sp, #12
   3215c:	str	r0, [fp, #-8]
   32160:	ldr	r3, [fp, #-8]
   32164:	sub	r3, r3, #32
   32168:	cmp	r3, #94	; 0x5e
   3216c:	bhi	32178 <__assert_fail@plt+0x20e88>
   32170:	mov	r3, #1
   32174:	b	3217c <__assert_fail@plt+0x20e8c>
   32178:	mov	r3, #0
   3217c:	mov	r0, r3
   32180:	add	sp, fp, #0
   32184:	pop	{fp}		; (ldr fp, [sp], #4)
   32188:	bx	lr
   3218c:	push	{fp}		; (str fp, [sp, #-4]!)
   32190:	add	fp, sp, #0
   32194:	sub	sp, sp, #12
   32198:	str	r0, [fp, #-8]
   3219c:	ldr	r3, [fp, #-8]
   321a0:	cmp	r3, #64	; 0x40
   321a4:	bgt	321c8 <__assert_fail@plt+0x20ed8>
   321a8:	ldr	r3, [fp, #-8]
   321ac:	cmp	r3, #58	; 0x3a
   321b0:	bge	321f0 <__assert_fail@plt+0x20f00>
   321b4:	ldr	r3, [fp, #-8]
   321b8:	sub	r3, r3, #33	; 0x21
   321bc:	cmp	r3, #14
   321c0:	bhi	321f8 <__assert_fail@plt+0x20f08>
   321c4:	b	321f0 <__assert_fail@plt+0x20f00>
   321c8:	ldr	r3, [fp, #-8]
   321cc:	cmp	r3, #91	; 0x5b
   321d0:	blt	321f8 <__assert_fail@plt+0x20f08>
   321d4:	ldr	r3, [fp, #-8]
   321d8:	cmp	r3, #96	; 0x60
   321dc:	ble	321f0 <__assert_fail@plt+0x20f00>
   321e0:	ldr	r3, [fp, #-8]
   321e4:	sub	r3, r3, #123	; 0x7b
   321e8:	cmp	r3, #3
   321ec:	bhi	321f8 <__assert_fail@plt+0x20f08>
   321f0:	mov	r3, #1
   321f4:	b	321fc <__assert_fail@plt+0x20f0c>
   321f8:	mov	r3, #0
   321fc:	mov	r0, r3
   32200:	add	sp, fp, #0
   32204:	pop	{fp}		; (ldr fp, [sp], #4)
   32208:	bx	lr
   3220c:	push	{fp}		; (str fp, [sp, #-4]!)
   32210:	add	fp, sp, #0
   32214:	sub	sp, sp, #12
   32218:	str	r0, [fp, #-8]
   3221c:	ldr	r3, [fp, #-8]
   32220:	cmp	r3, #9
   32224:	blt	32248 <__assert_fail@plt+0x20f58>
   32228:	ldr	r3, [fp, #-8]
   3222c:	cmp	r3, #13
   32230:	ble	32240 <__assert_fail@plt+0x20f50>
   32234:	ldr	r3, [fp, #-8]
   32238:	cmp	r3, #32
   3223c:	bne	32248 <__assert_fail@plt+0x20f58>
   32240:	mov	r3, #1
   32244:	b	3224c <__assert_fail@plt+0x20f5c>
   32248:	mov	r3, #0
   3224c:	mov	r0, r3
   32250:	add	sp, fp, #0
   32254:	pop	{fp}		; (ldr fp, [sp], #4)
   32258:	bx	lr
   3225c:	push	{fp}		; (str fp, [sp, #-4]!)
   32260:	add	fp, sp, #0
   32264:	sub	sp, sp, #12
   32268:	str	r0, [fp, #-8]
   3226c:	ldr	r3, [fp, #-8]
   32270:	sub	r3, r3, #65	; 0x41
   32274:	cmp	r3, #25
   32278:	bhi	32284 <__assert_fail@plt+0x20f94>
   3227c:	mov	r3, #1
   32280:	b	32288 <__assert_fail@plt+0x20f98>
   32284:	mov	r3, #0
   32288:	mov	r0, r3
   3228c:	add	sp, fp, #0
   32290:	pop	{fp}		; (ldr fp, [sp], #4)
   32294:	bx	lr
   32298:	push	{fp}		; (str fp, [sp, #-4]!)
   3229c:	add	fp, sp, #0
   322a0:	sub	sp, sp, #12
   322a4:	str	r0, [fp, #-8]
   322a8:	ldr	r3, [fp, #-8]
   322ac:	sub	r3, r3, #48	; 0x30
   322b0:	cmp	r3, #54	; 0x36
   322b4:	ldrls	pc, [pc, r3, lsl #2]
   322b8:	b	323a0 <__assert_fail@plt+0x210b0>
   322bc:	muleq	r3, r8, r3
   322c0:	muleq	r3, r8, r3
   322c4:	muleq	r3, r8, r3
   322c8:	muleq	r3, r8, r3
   322cc:	muleq	r3, r8, r3
   322d0:	muleq	r3, r8, r3
   322d4:	muleq	r3, r8, r3
   322d8:	muleq	r3, r8, r3
   322dc:	muleq	r3, r8, r3
   322e0:	muleq	r3, r8, r3
   322e4:	andeq	r2, r3, r0, lsr #7
   322e8:	andeq	r2, r3, r0, lsr #7
   322ec:	andeq	r2, r3, r0, lsr #7
   322f0:	andeq	r2, r3, r0, lsr #7
   322f4:	andeq	r2, r3, r0, lsr #7
   322f8:	andeq	r2, r3, r0, lsr #7
   322fc:	andeq	r2, r3, r0, lsr #7
   32300:	muleq	r3, r8, r3
   32304:	muleq	r3, r8, r3
   32308:	muleq	r3, r8, r3
   3230c:	muleq	r3, r8, r3
   32310:	muleq	r3, r8, r3
   32314:	muleq	r3, r8, r3
   32318:	andeq	r2, r3, r0, lsr #7
   3231c:	andeq	r2, r3, r0, lsr #7
   32320:	andeq	r2, r3, r0, lsr #7
   32324:	andeq	r2, r3, r0, lsr #7
   32328:	andeq	r2, r3, r0, lsr #7
   3232c:	andeq	r2, r3, r0, lsr #7
   32330:	andeq	r2, r3, r0, lsr #7
   32334:	andeq	r2, r3, r0, lsr #7
   32338:	andeq	r2, r3, r0, lsr #7
   3233c:	andeq	r2, r3, r0, lsr #7
   32340:	andeq	r2, r3, r0, lsr #7
   32344:	andeq	r2, r3, r0, lsr #7
   32348:	andeq	r2, r3, r0, lsr #7
   3234c:	andeq	r2, r3, r0, lsr #7
   32350:	andeq	r2, r3, r0, lsr #7
   32354:	andeq	r2, r3, r0, lsr #7
   32358:	andeq	r2, r3, r0, lsr #7
   3235c:	andeq	r2, r3, r0, lsr #7
   32360:	andeq	r2, r3, r0, lsr #7
   32364:	andeq	r2, r3, r0, lsr #7
   32368:	andeq	r2, r3, r0, lsr #7
   3236c:	andeq	r2, r3, r0, lsr #7
   32370:	andeq	r2, r3, r0, lsr #7
   32374:	andeq	r2, r3, r0, lsr #7
   32378:	andeq	r2, r3, r0, lsr #7
   3237c:	andeq	r2, r3, r0, lsr #7
   32380:	muleq	r3, r8, r3
   32384:	muleq	r3, r8, r3
   32388:	muleq	r3, r8, r3
   3238c:	muleq	r3, r8, r3
   32390:	muleq	r3, r8, r3
   32394:	muleq	r3, r8, r3
   32398:	mov	r3, #1
   3239c:	b	323a4 <__assert_fail@plt+0x210b4>
   323a0:	mov	r3, #0
   323a4:	mov	r0, r3
   323a8:	add	sp, fp, #0
   323ac:	pop	{fp}		; (ldr fp, [sp], #4)
   323b0:	bx	lr
   323b4:	push	{fp}		; (str fp, [sp, #-4]!)
   323b8:	add	fp, sp, #0
   323bc:	sub	sp, sp, #12
   323c0:	str	r0, [fp, #-8]
   323c4:	ldr	r3, [fp, #-8]
   323c8:	sub	r3, r3, #65	; 0x41
   323cc:	cmp	r3, #25
   323d0:	bhi	323e0 <__assert_fail@plt+0x210f0>
   323d4:	ldr	r3, [fp, #-8]
   323d8:	add	r3, r3, #32
   323dc:	b	323e4 <__assert_fail@plt+0x210f4>
   323e0:	ldr	r3, [fp, #-8]
   323e4:	mov	r0, r3
   323e8:	add	sp, fp, #0
   323ec:	pop	{fp}		; (ldr fp, [sp], #4)
   323f0:	bx	lr
   323f4:	push	{fp}		; (str fp, [sp, #-4]!)
   323f8:	add	fp, sp, #0
   323fc:	sub	sp, sp, #12
   32400:	str	r0, [fp, #-8]
   32404:	ldr	r3, [fp, #-8]
   32408:	sub	r3, r3, #97	; 0x61
   3240c:	cmp	r3, #25
   32410:	bhi	32420 <__assert_fail@plt+0x21130>
   32414:	ldr	r3, [fp, #-8]
   32418:	sub	r3, r3, #32
   3241c:	b	32424 <__assert_fail@plt+0x21134>
   32420:	ldr	r3, [fp, #-8]
   32424:	mov	r0, r3
   32428:	add	sp, fp, #0
   3242c:	pop	{fp}		; (ldr fp, [sp], #4)
   32430:	bx	lr
   32434:	str	fp, [sp, #-8]!
   32438:	str	lr, [sp, #4]
   3243c:	add	fp, sp, #4
   32440:	sub	sp, sp, #272	; 0x110
   32444:	str	r0, [fp, #-272]	; 0xfffffef0
   32448:	sub	r3, fp, #264	; 0x108
   3244c:	movw	r2, #257	; 0x101
   32450:	mov	r1, r3
   32454:	ldr	r0, [fp, #-272]	; 0xfffffef0
   32458:	bl	325f8 <__assert_fail@plt+0x21308>
   3245c:	mov	r3, r0
   32460:	cmp	r3, #0
   32464:	beq	32470 <__assert_fail@plt+0x21180>
   32468:	mov	r3, #0
   3246c:	b	324c4 <__assert_fail@plt+0x211d4>
   32470:	sub	r3, fp, #264	; 0x108
   32474:	movw	r1, #15080	; 0x3ae8
   32478:	movt	r1, #3
   3247c:	mov	r0, r3
   32480:	bl	11008 <strcmp@plt>
   32484:	mov	r3, r0
   32488:	cmp	r3, #0
   3248c:	beq	324b8 <__assert_fail@plt+0x211c8>
   32490:	sub	r3, fp, #264	; 0x108
   32494:	movw	r1, #15084	; 0x3aec
   32498:	movt	r1, #3
   3249c:	mov	r0, r3
   324a0:	bl	11008 <strcmp@plt>
   324a4:	mov	r3, r0
   324a8:	cmp	r3, #0
   324ac:	beq	324b8 <__assert_fail@plt+0x211c8>
   324b0:	mov	r3, #1
   324b4:	b	324bc <__assert_fail@plt+0x211cc>
   324b8:	mov	r3, #0
   324bc:	and	r3, r3, #1
   324c0:	uxtb	r3, r3
   324c4:	mov	r0, r3
   324c8:	sub	sp, fp, #4
   324cc:	ldr	fp, [sp]
   324d0:	add	sp, sp, #4
   324d4:	pop	{pc}		; (ldr pc, [sp], #4)
   324d8:	str	fp, [sp, #-8]!
   324dc:	str	lr, [sp, #4]
   324e0:	add	fp, sp, #4
   324e4:	sub	sp, sp, #16
   324e8:	str	r0, [fp, #-16]
   324ec:	mov	r1, #0
   324f0:	ldr	r0, [fp, #-16]
   324f4:	bl	11260 <setlocale@plt>
   324f8:	str	r0, [fp, #-8]
   324fc:	ldr	r3, [fp, #-8]
   32500:	mov	r0, r3
   32504:	sub	sp, fp, #4
   32508:	ldr	fp, [sp]
   3250c:	add	sp, sp, #4
   32510:	pop	{pc}		; (ldr pc, [sp], #4)
   32514:	str	fp, [sp, #-8]!
   32518:	str	lr, [sp, #4]
   3251c:	add	fp, sp, #4
   32520:	sub	sp, sp, #24
   32524:	str	r0, [fp, #-16]
   32528:	str	r1, [fp, #-20]	; 0xffffffec
   3252c:	str	r2, [fp, #-24]	; 0xffffffe8
   32530:	ldr	r0, [fp, #-16]
   32534:	bl	324d8 <__assert_fail@plt+0x211e8>
   32538:	str	r0, [fp, #-8]
   3253c:	ldr	r3, [fp, #-8]
   32540:	cmp	r3, #0
   32544:	bne	32568 <__assert_fail@plt+0x21278>
   32548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3254c:	cmp	r3, #0
   32550:	beq	32560 <__assert_fail@plt+0x21270>
   32554:	ldr	r3, [fp, #-20]	; 0xffffffec
   32558:	mov	r2, #0
   3255c:	strb	r2, [r3]
   32560:	mov	r3, #22
   32564:	b	325e4 <__assert_fail@plt+0x212f4>
   32568:	ldr	r0, [fp, #-8]
   3256c:	bl	111d0 <strlen@plt>
   32570:	str	r0, [fp, #-12]
   32574:	ldr	r2, [fp, #-12]
   32578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3257c:	cmp	r2, r3
   32580:	bcs	325a4 <__assert_fail@plt+0x212b4>
   32584:	ldr	r3, [fp, #-12]
   32588:	add	r3, r3, #1
   3258c:	mov	r2, r3
   32590:	ldr	r1, [fp, #-8]
   32594:	ldr	r0, [fp, #-20]	; 0xffffffec
   32598:	bl	11074 <memcpy@plt>
   3259c:	mov	r3, #0
   325a0:	b	325e4 <__assert_fail@plt+0x212f4>
   325a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   325a8:	cmp	r3, #0
   325ac:	beq	325e0 <__assert_fail@plt+0x212f0>
   325b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   325b4:	sub	r3, r3, #1
   325b8:	mov	r2, r3
   325bc:	ldr	r1, [fp, #-8]
   325c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   325c4:	bl	11074 <memcpy@plt>
   325c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   325cc:	sub	r3, r3, #1
   325d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   325d4:	add	r3, r2, r3
   325d8:	mov	r2, #0
   325dc:	strb	r2, [r3]
   325e0:	mov	r3, #34	; 0x22
   325e4:	mov	r0, r3
   325e8:	sub	sp, fp, #4
   325ec:	ldr	fp, [sp]
   325f0:	add	sp, sp, #4
   325f4:	pop	{pc}		; (ldr pc, [sp], #4)
   325f8:	str	fp, [sp, #-8]!
   325fc:	str	lr, [sp, #4]
   32600:	add	fp, sp, #4
   32604:	sub	sp, sp, #16
   32608:	str	r0, [fp, #-8]
   3260c:	str	r1, [fp, #-12]
   32610:	str	r2, [fp, #-16]
   32614:	ldr	r2, [fp, #-16]
   32618:	ldr	r1, [fp, #-12]
   3261c:	ldr	r0, [fp, #-8]
   32620:	bl	32514 <__assert_fail@plt+0x21224>
   32624:	mov	r3, r0
   32628:	mov	r0, r3
   3262c:	sub	sp, fp, #4
   32630:	ldr	fp, [sp]
   32634:	add	sp, sp, #4
   32638:	pop	{pc}		; (ldr pc, [sp], #4)
   3263c:	str	fp, [sp, #-8]!
   32640:	str	lr, [sp, #4]
   32644:	add	fp, sp, #4
   32648:	sub	sp, sp, #8
   3264c:	str	r0, [fp, #-8]
   32650:	ldr	r0, [fp, #-8]
   32654:	bl	324d8 <__assert_fail@plt+0x211e8>
   32658:	mov	r3, r0
   3265c:	mov	r0, r3
   32660:	sub	sp, fp, #4
   32664:	ldr	fp, [sp]
   32668:	add	sp, sp, #4
   3266c:	pop	{pc}		; (ldr pc, [sp], #4)
   32670:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32674:	mov	r7, r0
   32678:	ldr	r6, [pc, #72]	; 326c8 <__assert_fail@plt+0x213d8>
   3267c:	ldr	r5, [pc, #72]	; 326cc <__assert_fail@plt+0x213dc>
   32680:	add	r6, pc, r6
   32684:	add	r5, pc, r5
   32688:	sub	r6, r6, r5
   3268c:	mov	r8, r1
   32690:	mov	r9, r2
   32694:	bl	10fa0 <pthread_mutex_unlock@plt-0x20>
   32698:	asrs	r6, r6, #2
   3269c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   326a0:	mov	r4, #0
   326a4:	add	r4, r4, #1
   326a8:	ldr	r3, [r5], #4
   326ac:	mov	r2, r9
   326b0:	mov	r1, r8
   326b4:	mov	r0, r7
   326b8:	blx	r3
   326bc:	cmp	r6, r4
   326c0:	bne	326a4 <__assert_fail@plt+0x213b4>
   326c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   326c8:	andeq	r1, r1, ip, lsl #17
   326cc:	andeq	r1, r1, r4, lsl #17
   326d0:	bx	lr
   326d4:	ldr	r3, [pc, #12]	; 326e8 <__assert_fail@plt+0x213f8>
   326d8:	mov	r1, #0
   326dc:	add	r3, pc, r3
   326e0:	ldr	r2, [r3]
   326e4:	b	1120c <__cxa_atexit@plt>
   326e8:	andeq	r1, r1, r8, asr #20

Disassembly of section .fini:

000326ec <.fini>:
   326ec:	push	{r3, lr}
   326f0:	pop	{r3, pc}
