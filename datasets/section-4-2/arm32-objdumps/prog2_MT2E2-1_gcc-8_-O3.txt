
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010e68 <.init>:
   10e68:	push	{r3, lr}
   10e6c:	bl	1115c <_start@@Base+0x3c>
   10e70:	pop	{r3, pc}

Disassembly of section .plt:

00010e74 <calloc@plt-0x14>:
   10e74:	push	{lr}		; (str lr, [sp, #-4]!)
   10e78:	ldr	lr, [pc, #4]	; 10e84 <calloc@plt-0x4>
   10e7c:	add	lr, pc, lr
   10e80:	ldr	pc, [lr, #8]!
   10e84:	andeq	r3, r1, ip, ror r1

00010e88 <calloc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #77824	; 0x13000
   10e90:	ldr	pc, [ip, #380]!	; 0x17c

00010e94 <strcmp@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #77824	; 0x13000
   10e9c:	ldr	pc, [ip, #372]!	; 0x174

00010ea0 <printf@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #77824	; 0x13000
   10ea8:	ldr	pc, [ip, #364]!	; 0x16c

00010eac <__isoc99_fscanf@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #77824	; 0x13000
   10eb4:	ldr	pc, [ip, #356]!	; 0x164

00010eb8 <fopen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #77824	; 0x13000
   10ec0:	ldr	pc, [ip, #348]!	; 0x15c

00010ec4 <free@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #77824	; 0x13000
   10ecc:	ldr	pc, [ip, #340]!	; 0x154

00010ed0 <memcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #77824	; 0x13000
   10ed8:	ldr	pc, [ip, #332]!	; 0x14c

00010edc <realloc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #77824	; 0x13000
   10ee4:	ldr	pc, [ip, #324]!	; 0x144

00010ee8 <strcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #77824	; 0x13000
   10ef0:	ldr	pc, [ip, #316]!	; 0x13c

00010ef4 <puts@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #77824	; 0x13000
   10efc:	ldr	pc, [ip, #308]!	; 0x134

00010f00 <malloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #77824	; 0x13000
   10f08:	ldr	pc, [ip, #300]!	; 0x12c

00010f0c <__libc_start_main@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #77824	; 0x13000
   10f14:	ldr	pc, [ip, #292]!	; 0x124

00010f18 <__gmon_start__@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #77824	; 0x13000
   10f20:	ldr	pc, [ip, #284]!	; 0x11c

00010f24 <strlen@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #77824	; 0x13000
   10f2c:	ldr	pc, [ip, #276]!	; 0x114

00010f30 <putchar@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #77824	; 0x13000
   10f38:	ldr	pc, [ip, #268]!	; 0x10c

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #77824	; 0x13000
   10f44:	ldr	pc, [ip, #260]!	; 0x104

00010f48 <abort@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #77824	; 0x13000
   10f50:	ldr	pc, [ip, #252]!	; 0xfc

Disassembly of section .text:

00010f54 <main@@Base>:
   10f54:	movw	r1, #13132	; 0x334c
   10f58:	movt	r1, #1
   10f5c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10f60:	ldrd	r4, [r1]
   10f64:	movw	r0, #13648	; 0x3550
   10f68:	movt	r0, #1
   10f6c:	strd	r6, [sp, #8]
   10f70:	strd	r8, [sp, #16]
   10f74:	str	lr, [sp, #24]
   10f78:	sub	sp, sp, #380	; 0x17c
   10f7c:	ldrd	r2, [r1, #8]
   10f80:	add	r6, sp, #76	; 0x4c
   10f84:	add	r7, sp, #128	; 0x80
   10f88:	strd	r4, [sp, #76]	; 0x4c
   10f8c:	ldrd	r4, [r1, #16]
   10f90:	ldrd	r8, [r1, #32]
   10f94:	strd	r2, [sp, #84]	; 0x54
   10f98:	ldrd	r2, [r1, #24]
   10f9c:	strd	r4, [sp, #92]	; 0x5c
   10fa0:	ldrd	r4, [r1, #40]	; 0x28
   10fa4:	ldr	ip, [r1, #48]	; 0x30
   10fa8:	strd	r2, [sp, #100]	; 0x64
   10fac:	strd	r8, [sp, #108]	; 0x6c
   10fb0:	strd	r4, [sp, #116]	; 0x74
   10fb4:	str	ip, [sp, #124]	; 0x7c
   10fb8:	bl	10ef4 <puts@plt>
   10fbc:	bl	11468 <avl_nova@@Base>
   10fc0:	mov	r4, r0
   10fc4:	mov	r1, r6
   10fc8:	mov	r0, r4
   10fcc:	add	r6, r6, #4
   10fd0:	bl	11b60 <avl_insere@@Base>
   10fd4:	cmp	r6, r7
   10fd8:	bne	10fc4 <main@@Base+0x70>
   10fdc:	movw	r0, #13668	; 0x3564
   10fe0:	movt	r0, #1
   10fe4:	bl	10ea0 <printf@plt>
   10fe8:	ldr	r0, [r4]
   10fec:	bl	125ec <avl_imprime@@Base>
   10ff0:	movw	r0, #13688	; 0x3578
   10ff4:	movt	r0, #1
   10ff8:	bl	10ea0 <printf@plt>
   10ffc:	ldr	r0, [r4]
   11000:	bl	11210 <crescente@@Base>
   11004:	movw	r0, #13720	; 0x3598
   11008:	movt	r0, #1
   1100c:	bl	10ef4 <puts@plt>
   11010:	mov	r2, #300	; 0x12c
   11014:	ldr	r1, [pc, #252]	; 11118 <main@@Base+0x1c4>
   11018:	add	r0, sp, #76	; 0x4c
   1101c:	bl	10ed0 <memcpy@plt>
   11020:	mov	r2, #75	; 0x4b
   11024:	ldr	r1, [pc, #240]	; 1111c <main@@Base+0x1c8>
   11028:	mov	r0, sp
   1102c:	bl	10ed0 <memcpy@plt>
   11030:	movw	r0, #13724	; 0x359c
   11034:	movt	r0, #1
   11038:	bl	10ef4 <puts@plt>
   1103c:	movw	r1, #13744	; 0x35b0
   11040:	movt	r1, #1
   11044:	movw	r0, #13748	; 0x35b4
   11048:	movt	r0, #1
   1104c:	bl	10eb8 <fopen@plt>
   11050:	subs	r6, r0, #0
   11054:	beq	11104 <main@@Base+0x1b0>
   11058:	bl	126d0 <lista_nova@@Base>
   1105c:	mov	r5, r0
   11060:	add	r1, sp, #76	; 0x4c
   11064:	mov	r2, #0
   11068:	bl	12798 <lista_insere@@Base>
   1106c:	mov	r2, #0
   11070:	add	r1, sp, #176	; 0xb0
   11074:	mov	r0, r5
   11078:	bl	12798 <lista_insere@@Base>
   1107c:	mov	r2, #0
   11080:	add	r1, sp, #276	; 0x114
   11084:	mov	r0, r5
   11088:	bl	12798 <lista_insere@@Base>
   1108c:	bl	126d0 <lista_nova@@Base>
   11090:	mov	r4, r0
   11094:	mov	r2, #0
   11098:	mov	r1, sp
   1109c:	bl	12798 <lista_insere@@Base>
   110a0:	mov	r2, #0
   110a4:	add	r1, sp, #25
   110a8:	mov	r0, r4
   110ac:	bl	12798 <lista_insere@@Base>
   110b0:	add	r1, sp, #50	; 0x32
   110b4:	mov	r2, #0
   110b8:	mov	r0, r4
   110bc:	bl	12798 <lista_insere@@Base>
   110c0:	mov	r2, r4
   110c4:	mov	r1, r5
   110c8:	mov	r0, r6
   110cc:	bl	11340 <valida_passwds@@Base>
   110d0:	mov	r0, r5
   110d4:	bl	12710 <lista_apaga@@Base>
   110d8:	mov	r0, r4
   110dc:	bl	12710 <lista_apaga@@Base>
   110e0:	mov	r0, r6
   110e4:	bl	10f3c <fclose@plt>
   110e8:	mov	r0, #0
   110ec:	add	sp, sp, #380	; 0x17c
   110f0:	ldrd	r4, [sp]
   110f4:	ldrd	r6, [sp, #8]
   110f8:	ldrd	r8, [sp, #16]
   110fc:	add	sp, sp, #24
   11100:	pop	{pc}		; (ldr pc, [sp], #4)
   11104:	movw	r0, #13764	; 0x35c4
   11108:	movt	r0, #1
   1110c:	bl	10ef4 <puts@plt>
   11110:	mvn	r0, #0
   11114:	b	110ec <main@@Base+0x198>
   11118:	andeq	r3, r1, r0, lsl #7
   1111c:	andeq	r3, r1, ip, lsr #9

00011120 <_start@@Base>:
   11120:	mov	fp, #0
   11124:	mov	lr, #0
   11128:	pop	{r1}		; (ldr r1, [sp], #4)
   1112c:	mov	r2, sp
   11130:	push	{r2}		; (str r2, [sp, #-4]!)
   11134:	push	{r0}		; (str r0, [sp, #-4]!)
   11138:	ldr	ip, [pc, #16]	; 11150 <_start@@Base+0x30>
   1113c:	push	{ip}		; (str ip, [sp, #-4]!)
   11140:	ldr	r0, [pc, #12]	; 11154 <_start@@Base+0x34>
   11144:	ldr	r3, [pc, #12]	; 11158 <_start@@Base+0x38>
   11148:	bl	10f0c <__libc_start_main@plt>
   1114c:	bl	10f48 <abort@plt>
   11150:	andeq	r3, r1, ip, lsr r3
   11154:	andeq	r0, r1, r4, asr pc
   11158:	ldrdeq	r3, [r1], -ip
   1115c:	ldr	r3, [pc, #20]	; 11178 <_start@@Base+0x58>
   11160:	ldr	r2, [pc, #20]	; 1117c <_start@@Base+0x5c>
   11164:	add	r3, pc, r3
   11168:	ldr	r2, [r3, r2]
   1116c:	cmp	r2, #0
   11170:	bxeq	lr
   11174:	b	10f18 <__gmon_start__@plt>
   11178:	muleq	r1, r4, lr
   1117c:	andeq	r0, r0, r0, asr r0
   11180:	ldr	r0, [pc, #24]	; 111a0 <_start@@Base+0x80>
   11184:	ldr	r3, [pc, #24]	; 111a4 <_start@@Base+0x84>
   11188:	cmp	r3, r0
   1118c:	bxeq	lr
   11190:	ldr	r3, [pc, #16]	; 111a8 <_start@@Base+0x88>
   11194:	cmp	r3, #0
   11198:	bxeq	lr
   1119c:	bx	r3
   111a0:	andeq	r4, r2, ip, asr r0
   111a4:	andeq	r4, r2, ip, asr r0
   111a8:	andeq	r0, r0, r0
   111ac:	ldr	r0, [pc, #36]	; 111d8 <_start@@Base+0xb8>
   111b0:	ldr	r1, [pc, #36]	; 111dc <_start@@Base+0xbc>
   111b4:	sub	r1, r1, r0
   111b8:	asr	r1, r1, #2
   111bc:	add	r1, r1, r1, lsr #31
   111c0:	asrs	r1, r1, #1
   111c4:	bxeq	lr
   111c8:	ldr	r3, [pc, #16]	; 111e0 <_start@@Base+0xc0>
   111cc:	cmp	r3, #0
   111d0:	bxeq	lr
   111d4:	bx	r3
   111d8:	andeq	r4, r2, ip, asr r0
   111dc:	andeq	r4, r2, ip, asr r0
   111e0:	andeq	r0, r0, r0
   111e4:	push	{r4, lr}
   111e8:	ldr	r4, [pc, #24]	; 11208 <_start@@Base+0xe8>
   111ec:	ldrb	r3, [r4]
   111f0:	cmp	r3, #0
   111f4:	popne	{r4, pc}
   111f8:	bl	11180 <_start@@Base+0x60>
   111fc:	mov	r3, #1
   11200:	strb	r3, [r4]
   11204:	pop	{r4, pc}
   11208:	andeq	r4, r2, ip, asr r0
   1120c:	b	111ac <_start@@Base+0x8c>

00011210 <crescente@@Base>:
   11210:	strd	r4, [sp, #-16]!
   11214:	subs	r4, r0, #0
   11218:	str	r6, [sp, #8]
   1121c:	str	lr, [sp, #12]
   11220:	beq	1124c <crescente@@Base+0x3c>
   11224:	movw	r5, #13560	; 0x34f8
   11228:	movt	r5, #1
   1122c:	ldr	r0, [r4, #4]
   11230:	bl	11210 <crescente@@Base>
   11234:	mov	r0, r5
   11238:	ldr	r1, [r4]
   1123c:	bl	10ea0 <printf@plt>
   11240:	ldr	r4, [r4, #8]
   11244:	cmp	r4, #0
   11248:	bne	1122c <crescente@@Base+0x1c>
   1124c:	ldrd	r4, [sp]
   11250:	ldr	r6, [sp, #8]
   11254:	add	sp, sp, #12
   11258:	pop	{pc}		; (ldr pc, [sp], #4)

0001125c <decrescente@@Base>:
   1125c:	strd	r4, [sp, #-16]!
   11260:	subs	r4, r0, #0
   11264:	str	r6, [sp, #8]
   11268:	str	lr, [sp, #12]
   1126c:	beq	11298 <decrescente@@Base+0x3c>
   11270:	movw	r5, #13560	; 0x34f8
   11274:	movt	r5, #1
   11278:	ldr	r0, [r4, #8]
   1127c:	bl	1125c <decrescente@@Base>
   11280:	mov	r0, r5
   11284:	ldr	r1, [r4]
   11288:	bl	10ea0 <printf@plt>
   1128c:	ldr	r4, [r4, #4]
   11290:	cmp	r4, #0
   11294:	bne	11278 <decrescente@@Base+0x1c>
   11298:	ldrd	r4, [sp]
   1129c:	ldr	r6, [sp, #8]
   112a0:	add	sp, sp, #12
   112a4:	pop	{pc}		; (ldr pc, [sp], #4)

000112a8 <avl_imprime_ord@@Base>:
   112a8:	cmp	r1, #0
   112ac:	strd	r4, [sp, #-16]!
   112b0:	ldr	r4, [r0]
   112b4:	str	r6, [sp, #8]
   112b8:	str	lr, [sp, #12]
   112bc:	blt	11300 <avl_imprime_ord@@Base+0x58>
   112c0:	cmp	r4, #0
   112c4:	beq	112f0 <avl_imprime_ord@@Base+0x48>
   112c8:	movw	r5, #13560	; 0x34f8
   112cc:	movt	r5, #1
   112d0:	ldr	r0, [r4, #4]
   112d4:	bl	11210 <crescente@@Base>
   112d8:	mov	r0, r5
   112dc:	ldr	r1, [r4]
   112e0:	bl	10ea0 <printf@plt>
   112e4:	ldr	r4, [r4, #8]
   112e8:	cmp	r4, #0
   112ec:	bne	112d0 <avl_imprime_ord@@Base+0x28>
   112f0:	ldrd	r4, [sp]
   112f4:	ldr	r6, [sp, #8]
   112f8:	add	sp, sp, #12
   112fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11300:	cmp	r4, #0
   11304:	beq	112f0 <avl_imprime_ord@@Base+0x48>
   11308:	movw	r5, #13560	; 0x34f8
   1130c:	movt	r5, #1
   11310:	ldr	r0, [r4, #8]
   11314:	bl	1125c <decrescente@@Base>
   11318:	mov	r0, r5
   1131c:	ldr	r1, [r4]
   11320:	bl	10ea0 <printf@plt>
   11324:	ldr	r4, [r4, #4]
   11328:	cmp	r4, #0
   1132c:	bne	11310 <avl_imprime_ord@@Base+0x68>
   11330:	ldrd	r4, [sp]
   11334:	ldr	r6, [sp, #8]
   11338:	add	sp, sp, #12
   1133c:	pop	{pc}		; (ldr pc, [sp], #4)

00011340 <valida_passwds@@Base>:
   11340:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11344:	mov	r5, r0
   11348:	mov	r0, #10
   1134c:	strd	r6, [sp, #8]
   11350:	mov	r7, r2
   11354:	movw	r4, #13564	; 0x34fc
   11358:	movt	r4, #1
   1135c:	strd	r8, [sp, #16]
   11360:	mov	r8, r1
   11364:	movw	r1, #12688	; 0x3190
   11368:	movt	r1, #1
   1136c:	str	lr, [sp, #24]
   11370:	sub	sp, sp, #60	; 0x3c
   11374:	bl	12b48 <tabela_nova@@Base>
   11378:	mov	r6, r0
   1137c:	b	11384 <valida_passwds@@Base+0x44>
   11380:	bl	12c64 <tabela_adiciona@@Base>
   11384:	mov	r2, sp
   11388:	mov	r1, r4
   1138c:	add	r3, sp, #28
   11390:	mov	r0, r5
   11394:	bl	10eac <__isoc99_fscanf@plt>
   11398:	cmp	r0, #2
   1139c:	add	r2, sp, #28
   113a0:	mov	r1, sp
   113a4:	mov	r0, r6
   113a8:	beq	11380 <valida_passwds@@Base+0x40>
   113ac:	ldr	r4, [r7]
   113b0:	ldr	r5, [r8]
   113b4:	cmp	r5, #0
   113b8:	cmpne	r4, #0
   113bc:	beq	11420 <valida_passwds@@Base+0xe0>
   113c0:	movw	r8, #13572	; 0x3504
   113c4:	movt	r8, #1
   113c8:	movw	r9, #13624	; 0x3538
   113cc:	movt	r9, #1
   113d0:	movw	r7, #13596	; 0x351c
   113d4:	movt	r7, #1
   113d8:	mov	r0, r8
   113dc:	ldr	r2, [r4]
   113e0:	ldr	r1, [r5]
   113e4:	bl	10ea0 <printf@plt>
   113e8:	mov	r0, r6
   113ec:	ldr	r1, [r5]
   113f0:	bl	12ecc <tabela_valor@@Base>
   113f4:	ldr	r1, [r4]
   113f8:	bl	10e94 <strcmp@plt>
   113fc:	cmp	r0, #0
   11400:	mov	r0, r7
   11404:	bne	11448 <valida_passwds@@Base+0x108>
   11408:	bl	10ef4 <puts@plt>
   1140c:	ldr	r4, [r4, #4]
   11410:	ldr	r5, [r5, #4]
   11414:	cmp	r4, #0
   11418:	cmpne	r5, #0
   1141c:	bne	113d8 <valida_passwds@@Base+0x98>
   11420:	mov	r0, r6
   11424:	bl	12f54 <tabela_esvazia@@Base>
   11428:	mov	r0, r6
   1142c:	bl	10ec4 <free@plt>
   11430:	add	sp, sp, #60	; 0x3c
   11434:	ldrd	r4, [sp]
   11438:	ldrd	r6, [sp, #8]
   1143c:	ldrd	r8, [sp, #16]
   11440:	add	sp, sp, #24
   11444:	pop	{pc}		; (ldr pc, [sp], #4)
   11448:	mov	r0, r9
   1144c:	bl	10ef4 <puts@plt>
   11450:	ldr	r4, [r4, #4]
   11454:	ldr	r5, [r5, #4]
   11458:	cmp	r5, #0
   1145c:	cmpne	r4, #0
   11460:	bne	113d8 <valida_passwds@@Base+0x98>
   11464:	b	11420 <valida_passwds@@Base+0xe0>

00011468 <avl_nova@@Base>:
   11468:	mov	r0, #4
   1146c:	str	r4, [sp, #-8]!
   11470:	str	lr, [sp, #4]
   11474:	bl	10f00 <malloc@plt>
   11478:	cmp	r0, #0
   1147c:	ldr	r4, [sp]
   11480:	add	sp, sp, #4
   11484:	movne	r3, #0
   11488:	strne	r3, [r0]
   1148c:	pop	{pc}		; (ldr pc, [sp], #4)

00011490 <avl_pesquisa@@Base>:
   11490:	cmp	r1, #0
   11494:	cmpne	r0, #0
   11498:	strd	r4, [sp, #-16]!
   1149c:	moveq	r4, #0
   114a0:	str	r6, [sp, #8]
   114a4:	str	lr, [sp, #12]
   114a8:	beq	114f0 <avl_pesquisa@@Base+0x60>
   114ac:	ldr	r4, [r0]
   114b0:	mov	r5, r1
   114b4:	cmp	r4, #0
   114b8:	bne	114d0 <avl_pesquisa@@Base+0x40>
   114bc:	b	114f0 <avl_pesquisa@@Base+0x60>
   114c0:	beq	114f0 <avl_pesquisa@@Base+0x60>
   114c4:	ldr	r4, [r4, #8]
   114c8:	cmp	r4, #0
   114cc:	beq	114f0 <avl_pesquisa@@Base+0x60>
   114d0:	mov	r0, r5
   114d4:	ldr	r1, [r4]
   114d8:	bl	10e94 <strcmp@plt>
   114dc:	cmp	r0, #0
   114e0:	bge	114c0 <avl_pesquisa@@Base+0x30>
   114e4:	ldr	r4, [r4, #4]
   114e8:	cmp	r4, #0
   114ec:	bne	114d0 <avl_pesquisa@@Base+0x40>
   114f0:	mov	r0, r4
   114f4:	ldrd	r4, [sp]
   114f8:	ldr	r6, [sp, #8]
   114fc:	add	sp, sp, #12
   11500:	pop	{pc}		; (ldr pc, [sp], #4)

00011504 <avl_min@@Base>:
   11504:	cmp	r0, #0
   11508:	bne	11514 <avl_min@@Base+0x10>
   1150c:	b	11528 <avl_min@@Base+0x24>
   11510:	mov	r0, r3
   11514:	ldr	r3, [r0, #4]
   11518:	cmp	r3, #0
   1151c:	bne	11510 <avl_min@@Base+0xc>
   11520:	ldr	r0, [r0]
   11524:	bx	lr
   11528:	bx	lr

0001152c <avl_max@@Base>:
   1152c:	cmp	r0, #0
   11530:	bne	1153c <avl_max@@Base+0x10>
   11534:	b	11550 <avl_max@@Base+0x24>
   11538:	mov	r0, r3
   1153c:	ldr	r3, [r0, #8]
   11540:	cmp	r3, #0
   11544:	bne	11538 <avl_max@@Base+0xc>
   11548:	ldr	r0, [r0]
   1154c:	bx	lr
   11550:	bx	lr

00011554 <avl_altura@@Base>:
   11554:	cmp	r0, #0
   11558:	ldrne	r0, [r0, #12]
   1155c:	mvneq	r0, #0
   11560:	bx	lr

00011564 <max@@Base>:
   11564:	cmp	r1, r0
   11568:	movge	r0, r1
   1156c:	bx	lr

00011570 <avl_novo_no@@Base>:
   11570:	strd	r4, [sp, #-16]!
   11574:	mov	r5, r0
   11578:	mov	r0, #16
   1157c:	str	r6, [sp, #8]
   11580:	str	lr, [sp, #12]
   11584:	bl	10f00 <malloc@plt>
   11588:	mov	r4, r0
   1158c:	mov	r0, r5
   11590:	bl	10f24 <strlen@plt>
   11594:	add	r6, r0, #1
   11598:	mov	r0, r6
   1159c:	bl	10f00 <malloc@plt>
   115a0:	mov	r2, r6
   115a4:	mov	r1, r5
   115a8:	str	r0, [r4]
   115ac:	bl	10ed0 <memcpy@plt>
   115b0:	mov	r3, #0
   115b4:	mov	r0, r4
   115b8:	ldr	r6, [sp, #8]
   115bc:	str	r3, [r4, #4]
   115c0:	str	r3, [r4, #8]
   115c4:	str	r3, [r4, #12]
   115c8:	ldrd	r4, [sp]
   115cc:	add	sp, sp, #12
   115d0:	pop	{pc}		; (ldr pc, [sp], #4)

000115d4 <roda_direita@@Base>:
   115d4:	ldr	r2, [r0, #4]
   115d8:	ldr	r3, [r2, #8]
   115dc:	str	r0, [r2, #8]
   115e0:	cmp	r3, #0
   115e4:	str	r3, [r0, #4]
   115e8:	ldrne	r1, [r3, #12]
   115ec:	mvneq	r1, #0
   115f0:	ldr	r3, [r0, #8]
   115f4:	ldr	ip, [r2, #4]
   115f8:	cmp	r3, #0
   115fc:	ldrne	r3, [r3, #12]
   11600:	mvneq	r3, #0
   11604:	cmp	r3, r1
   11608:	movlt	r3, r1
   1160c:	cmp	ip, #0
   11610:	add	r3, r3, #1
   11614:	mvneq	r1, #0
   11618:	str	r3, [r0, #12]
   1161c:	mov	r0, r2
   11620:	ldrne	r1, [ip, #12]
   11624:	cmp	r3, r1
   11628:	movlt	r3, r1
   1162c:	add	r3, r3, #1
   11630:	str	r3, [r2, #12]
   11634:	bx	lr

00011638 <roda_esquerda@@Base>:
   11638:	ldr	r2, [r0, #8]
   1163c:	ldr	r1, [r2, #4]
   11640:	str	r0, [r2, #4]
   11644:	ldr	r3, [r0, #4]
   11648:	str	r1, [r0, #8]
   1164c:	cmp	r3, #0
   11650:	ldrne	ip, [r3, #12]
   11654:	mvneq	ip, #0
   11658:	cmp	r1, #0
   1165c:	mvneq	r3, #0
   11660:	ldrne	r3, [r1, #12]
   11664:	ldr	r1, [r2, #8]
   11668:	cmp	r3, ip
   1166c:	movlt	r3, ip
   11670:	add	r3, r3, #1
   11674:	cmp	r1, #0
   11678:	mvneq	r1, #0
   1167c:	str	r3, [r0, #12]
   11680:	mov	r0, r2
   11684:	ldrne	r1, [r1, #12]
   11688:	cmp	r3, r1
   1168c:	movlt	r3, r1
   11690:	add	r3, r3, #1
   11694:	str	r3, [r2, #12]
   11698:	bx	lr

0001169c <calc_balanceamento@@Base>:
   1169c:	cmp	r0, #0
   116a0:	beq	116c8 <calc_balanceamento@@Base+0x2c>
   116a4:	ldr	r3, [r0, #8]
   116a8:	cmp	r3, #0
   116ac:	ldrne	r2, [r3, #12]
   116b0:	mvneq	r2, #0
   116b4:	ldr	r3, [r0, #4]
   116b8:	cmp	r3, #0
   116bc:	ldrne	r0, [r3, #12]
   116c0:	mvneq	r0, #0
   116c4:	sub	r0, r2, r0
   116c8:	bx	lr

000116cc <avl_pesquisa_impl@@Base>:
   116cc:	strd	r4, [sp, #-16]!
   116d0:	subs	r4, r0, #0
   116d4:	movne	r5, r1
   116d8:	str	r6, [sp, #8]
   116dc:	str	lr, [sp, #12]
   116e0:	bne	116f8 <avl_pesquisa_impl@@Base+0x2c>
   116e4:	b	11718 <avl_pesquisa_impl@@Base+0x4c>
   116e8:	beq	11718 <avl_pesquisa_impl@@Base+0x4c>
   116ec:	ldr	r4, [r4, #8]
   116f0:	cmp	r4, #0
   116f4:	beq	11718 <avl_pesquisa_impl@@Base+0x4c>
   116f8:	mov	r0, r5
   116fc:	ldr	r1, [r4]
   11700:	bl	10e94 <strcmp@plt>
   11704:	cmp	r0, #0
   11708:	bge	116e8 <avl_pesquisa_impl@@Base+0x1c>
   1170c:	ldr	r4, [r4, #4]
   11710:	cmp	r4, #0
   11714:	bne	116f8 <avl_pesquisa_impl@@Base+0x2c>
   11718:	mov	r0, r4
   1171c:	ldrd	r4, [sp]
   11720:	ldr	r6, [sp, #8]
   11724:	add	sp, sp, #12
   11728:	pop	{pc}		; (ldr pc, [sp], #4)

0001172c <avl_insere_impl@@Base>:
   1172c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11730:	subs	r5, r0, #0
   11734:	strd	r6, [sp, #8]
   11738:	mov	r6, r1
   1173c:	str	r8, [sp, #16]
   11740:	str	lr, [sp, #20]
   11744:	beq	118f0 <avl_insere_impl@@Base+0x1c4>
   11748:	mov	r0, r1
   1174c:	ldr	r1, [r5]
   11750:	bl	10e94 <strcmp@plt>
   11754:	cmp	r0, #0
   11758:	blt	118d8 <avl_insere_impl@@Base+0x1ac>
   1175c:	beq	1184c <avl_insere_impl@@Base+0x120>
   11760:	mov	r1, r6
   11764:	ldr	r0, [r5, #8]
   11768:	bl	1172c <avl_insere_impl@@Base>
   1176c:	mov	r4, r0
   11770:	ldr	r0, [r5, #4]
   11774:	str	r4, [r5, #8]
   11778:	cmp	r0, #0
   1177c:	beq	11a7c <avl_insere_impl@@Base+0x350>
   11780:	cmp	r4, #0
   11784:	ldr	r3, [r0, #12]
   11788:	beq	11a60 <avl_insere_impl@@Base+0x334>
   1178c:	ldr	r2, [r4, #12]
   11790:	cmp	r3, r2
   11794:	movlt	r3, r2
   11798:	add	r3, r3, #1
   1179c:	str	r3, [r5, #12]
   117a0:	ldr	r2, [r4, #12]
   117a4:	ldr	r3, [r0, #12]
   117a8:	sub	r3, r2, r3
   117ac:	cmp	r3, #1
   117b0:	ble	11854 <avl_insere_impl@@Base+0x128>
   117b4:	ldrd	r2, [r4, #4]
   117b8:	cmp	r3, #0
   117bc:	beq	11aa8 <avl_insere_impl@@Base+0x37c>
   117c0:	cmp	r2, #0
   117c4:	ldr	r3, [r3, #12]
   117c8:	beq	11ac0 <avl_insere_impl@@Base+0x394>
   117cc:	ldr	r1, [r2, #12]
   117d0:	sub	r3, r3, r1
   117d4:	cmp	r3, #0
   117d8:	blt	11930 <avl_insere_impl@@Base+0x204>
   117dc:	str	r5, [r4, #4]
   117e0:	ldr	r3, [r5, #4]
   117e4:	str	r2, [r5, #8]
   117e8:	cmp	r3, #0
   117ec:	beq	11ab8 <avl_insere_impl@@Base+0x38c>
   117f0:	ldr	r1, [r3, #12]
   117f4:	cmp	r2, #0
   117f8:	ldrne	r3, [r2, #12]
   117fc:	mvneq	r3, #0
   11800:	ldr	r2, [r4, #8]
   11804:	cmp	r3, r1
   11808:	movlt	r3, r1
   1180c:	cmp	r2, #0
   11810:	add	r3, r3, #1
   11814:	mvneq	r2, #0
   11818:	str	r3, [r5, #12]
   1181c:	ldrne	r2, [r2, #12]
   11820:	cmp	r3, r2
   11824:	movlt	r3, r2
   11828:	add	r3, r3, #1
   1182c:	str	r3, [r4, #12]
   11830:	mov	r0, r4
   11834:	ldrd	r4, [sp]
   11838:	ldrd	r6, [sp, #8]
   1183c:	ldr	r8, [sp, #16]
   11840:	add	sp, sp, #20
   11844:	pop	{pc}		; (ldr pc, [sp], #4)
   11848:	str	r4, [r5, #12]
   1184c:	mov	r4, r5
   11850:	b	11830 <avl_insere_impl@@Base+0x104>
   11854:	cmn	r3, #1
   11858:	bge	1184c <avl_insere_impl@@Base+0x120>
   1185c:	ldmib	r0, {r2, r4}
   11860:	cmp	r4, #0
   11864:	beq	11ac8 <avl_insere_impl@@Base+0x39c>
   11868:	cmp	r2, #0
   1186c:	ldr	r3, [r4, #12]
   11870:	beq	119dc <avl_insere_impl@@Base+0x2b0>
   11874:	ldr	r2, [r2, #12]
   11878:	sub	r2, r3, r2
   1187c:	cmp	r2, #0
   11880:	bgt	119e4 <avl_insere_impl@@Base+0x2b8>
   11884:	mov	r2, r3
   11888:	str	r5, [r0, #8]
   1188c:	str	r4, [r5, #4]
   11890:	ldr	r3, [r5, #8]
   11894:	mov	r4, r0
   11898:	ldr	r1, [r0, #4]
   1189c:	cmp	r3, #0
   118a0:	ldrne	r3, [r3, #12]
   118a4:	mvneq	r3, #0
   118a8:	cmp	r3, r2
   118ac:	movlt	r3, r2
   118b0:	cmp	r1, #0
   118b4:	add	r3, r3, #1
   118b8:	mvneq	r2, #0
   118bc:	str	r3, [r5, #12]
   118c0:	ldrne	r2, [r1, #12]
   118c4:	cmp	r3, r2
   118c8:	movlt	r3, r2
   118cc:	add	r3, r3, #1
   118d0:	str	r3, [r0, #12]
   118d4:	b	11830 <avl_insere_impl@@Base+0x104>
   118d8:	mov	r1, r6
   118dc:	ldr	r0, [r5, #4]
   118e0:	bl	1172c <avl_insere_impl@@Base>
   118e4:	str	r0, [r5, #4]
   118e8:	ldr	r4, [r5, #8]
   118ec:	b	11778 <avl_insere_impl@@Base+0x4c>
   118f0:	mov	r0, #16
   118f4:	bl	10f00 <malloc@plt>
   118f8:	mov	r4, r0
   118fc:	mov	r0, r6
   11900:	bl	10f24 <strlen@plt>
   11904:	add	r7, r0, #1
   11908:	mov	r0, r7
   1190c:	bl	10f00 <malloc@plt>
   11910:	mov	r2, r7
   11914:	mov	r1, r6
   11918:	str	r0, [r4]
   1191c:	bl	10ed0 <memcpy@plt>
   11920:	str	r5, [r4, #4]
   11924:	str	r5, [r4, #8]
   11928:	str	r5, [r4, #12]
   1192c:	b	11830 <avl_insere_impl@@Base+0x104>
   11930:	ldr	r3, [r2, #8]
   11934:	str	r4, [r2, #8]
   11938:	ldr	r1, [r4, #8]
   1193c:	cmp	r3, #0
   11940:	str	r3, [r4, #4]
   11944:	ldrne	r3, [r3, #12]
   11948:	mvneq	r3, #0
   1194c:	cmp	r1, #0
   11950:	ldrne	r1, [r1, #12]
   11954:	mvneq	r1, #0
   11958:	ldr	r0, [r2, #4]
   1195c:	cmp	r1, r3
   11960:	movlt	r1, r3
   11964:	add	r1, r1, #1
   11968:	cmp	r0, #0
   1196c:	str	r1, [r4, #12]
   11970:	beq	11aec <avl_insere_impl@@Base+0x3c0>
   11974:	ldr	ip, [r0, #12]
   11978:	str	r5, [r2, #4]
   1197c:	ldr	r3, [r5, #4]
   11980:	cmp	r1, ip
   11984:	movlt	r1, ip
   11988:	add	r1, r1, #1
   1198c:	cmp	r3, #0
   11990:	str	r1, [r2, #12]
   11994:	mvneq	r1, #0
   11998:	ldrne	r1, [r3, #12]
   1199c:	str	r0, [r5, #8]
   119a0:	ldr	r3, [r0, #12]
   119a4:	cmp	r3, r1
   119a8:	mov	r4, r2
   119ac:	ldr	r0, [r2, #8]
   119b0:	movlt	r3, r1
   119b4:	add	r3, r3, #1
   119b8:	str	r3, [r5, #12]
   119bc:	cmp	r0, #0
   119c0:	ldrne	r1, [r0, #12]
   119c4:	mvneq	r1, #0
   119c8:	cmp	r3, r1
   119cc:	movlt	r3, r1
   119d0:	add	r3, r3, #1
   119d4:	str	r3, [r2, #12]
   119d8:	b	11830 <avl_insere_impl@@Base+0x104>
   119dc:	cmp	r3, #0
   119e0:	blt	11884 <avl_insere_impl@@Base+0x158>
   119e4:	ldr	r2, [r4, #4]
   119e8:	str	r0, [r4, #4]
   119ec:	ldr	r3, [r0, #4]
   119f0:	str	r2, [r0, #8]
   119f4:	cmp	r3, #0
   119f8:	ldrne	r1, [r3, #12]
   119fc:	mvneq	r1, #0
   11a00:	cmp	r2, #0
   11a04:	mvneq	r3, #0
   11a08:	ldrne	r3, [r2, #12]
   11a0c:	ldr	r2, [r4, #8]
   11a10:	cmp	r3, r1
   11a14:	movlt	r3, r1
   11a18:	add	r3, r3, #1
   11a1c:	cmp	r2, #0
   11a20:	str	r3, [r0, #12]
   11a24:	beq	11b1c <avl_insere_impl@@Base+0x3f0>
   11a28:	ldr	r1, [r2, #12]
   11a2c:	str	r5, [r4, #8]
   11a30:	cmp	r3, r1
   11a34:	movlt	r3, r1
   11a38:	add	r3, r3, #1
   11a3c:	str	r3, [r4, #12]
   11a40:	ldr	r1, [r2, #12]
   11a44:	str	r2, [r5, #4]
   11a48:	ldr	r3, [r5, #8]
   11a4c:	ldr	r2, [r4, #4]
   11a50:	cmp	r3, #0
   11a54:	ldrne	r3, [r3, #12]
   11a58:	mvneq	r3, #0
   11a5c:	b	11804 <avl_insere_impl@@Base+0xd8>
   11a60:	mvn	r1, #0
   11a64:	cmp	r3, r1
   11a68:	mov	r2, r1
   11a6c:	movlt	r3, r1
   11a70:	add	r3, r3, #1
   11a74:	str	r3, [r5, #12]
   11a78:	b	117a4 <avl_insere_impl@@Base+0x78>
   11a7c:	cmp	r4, #0
   11a80:	beq	11848 <avl_insere_impl@@Base+0x11c>
   11a84:	ldr	r2, [r4, #12]
   11a88:	mvn	r1, #0
   11a8c:	mov	r3, r1
   11a90:	cmp	r2, r1
   11a94:	movlt	r2, r1
   11a98:	add	r2, r2, #1
   11a9c:	str	r2, [r5, #12]
   11aa0:	ldr	r2, [r4, #12]
   11aa4:	b	117a8 <avl_insere_impl@@Base+0x7c>
   11aa8:	cmp	r2, #0
   11aac:	beq	11b40 <avl_insere_impl@@Base+0x414>
   11ab0:	mvn	r3, #0
   11ab4:	b	117cc <avl_insere_impl@@Base+0xa0>
   11ab8:	mvn	r1, #0
   11abc:	b	117f4 <avl_insere_impl@@Base+0xc8>
   11ac0:	mvn	r1, #0
   11ac4:	b	117d0 <avl_insere_impl@@Base+0xa4>
   11ac8:	cmp	r2, #0
   11acc:	beq	11adc <avl_insere_impl@@Base+0x3b0>
   11ad0:	ldr	r3, [r2, #12]
   11ad4:	cmn	r3, #1
   11ad8:	blt	119e4 <avl_insere_impl@@Base+0x2b8>
   11adc:	mvn	r2, #0
   11ae0:	str	r5, [r0, #8]
   11ae4:	str	r4, [r5, #4]
   11ae8:	b	11890 <avl_insere_impl@@Base+0x164>
   11aec:	str	r5, [r2, #4]
   11af0:	mvn	r3, #0
   11af4:	ldr	ip, [r5, #4]
   11af8:	cmp	r1, r3
   11afc:	movlt	r1, r3
   11b00:	add	r1, r1, #1
   11b04:	str	r1, [r2, #12]
   11b08:	cmp	ip, #0
   11b0c:	str	r0, [r5, #8]
   11b10:	ldrne	r1, [ip, #12]
   11b14:	moveq	r1, r3
   11b18:	b	119a4 <avl_insere_impl@@Base+0x278>
   11b1c:	mvn	r0, #0
   11b20:	str	r5, [r4, #8]
   11b24:	cmp	r3, r0
   11b28:	mov	r1, r0
   11b2c:	movlt	r3, r0
   11b30:	add	r3, r3, #1
   11b34:	str	r3, [r4, #12]
   11b38:	str	r2, [r5, #4]
   11b3c:	b	11a48 <avl_insere_impl@@Base+0x31c>
   11b40:	str	r5, [r4, #4]
   11b44:	ldr	r3, [r5, #4]
   11b48:	str	r2, [r5, #8]
   11b4c:	cmp	r3, #0
   11b50:	bne	117f0 <avl_insere_impl@@Base+0xc4>
   11b54:	mvn	r1, #0
   11b58:	mov	r3, r1
   11b5c:	b	11800 <avl_insere_impl@@Base+0xd4>

00011b60 <avl_insere@@Base>:
   11b60:	clz	r3, r1
   11b64:	cmp	r0, #0
   11b68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b6c:	lsr	r3, r3, #5
   11b70:	moveq	r5, #1
   11b74:	strd	r6, [sp, #8]
   11b78:	str	r8, [sp, #16]
   11b7c:	movne	r5, r3
   11b80:	str	lr, [sp, #20]
   11b84:	cmp	r5, #0
   11b88:	bne	11ed4 <avl_insere@@Base+0x374>
   11b8c:	ldr	r4, [r0]
   11b90:	mov	r7, r1
   11b94:	mov	r6, r0
   11b98:	cmp	r4, #0
   11b9c:	beq	11d34 <avl_insere@@Base+0x1d4>
   11ba0:	mov	r0, r1
   11ba4:	ldr	r1, [r4]
   11ba8:	bl	10e94 <strcmp@plt>
   11bac:	cmp	r0, #0
   11bb0:	blt	11d18 <avl_insere@@Base+0x1b8>
   11bb4:	beq	11c88 <avl_insere@@Base+0x128>
   11bb8:	mov	r1, r7
   11bbc:	ldr	r0, [r4, #8]
   11bc0:	bl	1172c <avl_insere_impl@@Base>
   11bc4:	ldr	r2, [r4, #4]
   11bc8:	str	r0, [r4, #8]
   11bcc:	cmp	r2, #0
   11bd0:	beq	11edc <avl_insere@@Base+0x37c>
   11bd4:	cmp	r0, #0
   11bd8:	ldr	r3, [r2, #12]
   11bdc:	beq	11f08 <avl_insere@@Base+0x3a8>
   11be0:	ldr	r1, [r0, #12]
   11be4:	cmp	r3, r1
   11be8:	movlt	r3, r1
   11bec:	add	r3, r3, #1
   11bf0:	str	r3, [r4, #12]
   11bf4:	ldr	r1, [r0, #12]
   11bf8:	ldr	r3, [r2, #12]
   11bfc:	sub	r3, r1, r3
   11c00:	cmp	r3, #1
   11c04:	ble	11ca4 <avl_insere@@Base+0x144>
   11c08:	ldrd	r2, [r0, #4]
   11c0c:	cmp	r3, #0
   11c10:	beq	11f2c <avl_insere@@Base+0x3cc>
   11c14:	cmp	r2, #0
   11c18:	ldr	r3, [r3, #12]
   11c1c:	beq	11f3c <avl_insere@@Base+0x3dc>
   11c20:	ldr	r1, [r2, #12]
   11c24:	sub	r3, r3, r1
   11c28:	cmp	r3, #0
   11c2c:	blt	11d74 <avl_insere@@Base+0x214>
   11c30:	str	r4, [r0, #4]
   11c34:	ldr	r3, [r4, #4]
   11c38:	str	r2, [r4, #8]
   11c3c:	cmp	r3, #0
   11c40:	beq	11f24 <avl_insere@@Base+0x3c4>
   11c44:	ldr	r1, [r3, #12]
   11c48:	cmp	r2, #0
   11c4c:	ldrne	r3, [r2, #12]
   11c50:	mvneq	r3, #0
   11c54:	cmp	r3, r1
   11c58:	ldr	r2, [r0, #8]
   11c5c:	movlt	r3, r1
   11c60:	add	r3, r3, #1
   11c64:	str	r3, [r4, #12]
   11c68:	mov	r4, r0
   11c6c:	cmp	r2, #0
   11c70:	ldrne	r2, [r2, #12]
   11c74:	mvneq	r2, #0
   11c78:	cmp	r3, r2
   11c7c:	movlt	r3, r2
   11c80:	add	r3, r3, #1
   11c84:	str	r3, [r0, #12]
   11c88:	mov	r0, #0
   11c8c:	str	r4, [r6]
   11c90:	ldrd	r4, [sp]
   11c94:	ldrd	r6, [sp, #8]
   11c98:	ldr	r8, [sp, #16]
   11c9c:	add	sp, sp, #20
   11ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ca4:	cmn	r3, #1
   11ca8:	bge	11c88 <avl_insere@@Base+0x128>
   11cac:	ldr	ip, [r2, #4]
   11cb0:	ldr	r1, [r2, #8]
   11cb4:	cmp	r1, #0
   11cb8:	beq	11f4c <avl_insere@@Base+0x3ec>
   11cbc:	cmp	ip, #0
   11cc0:	ldr	r3, [r1, #12]
   11cc4:	beq	11e20 <avl_insere@@Base+0x2c0>
   11cc8:	ldr	r0, [ip, #12]
   11ccc:	sub	r0, r3, r0
   11cd0:	cmp	r0, #0
   11cd4:	bgt	11e28 <avl_insere@@Base+0x2c8>
   11cd8:	mov	r0, r3
   11cdc:	str	r4, [r2, #8]
   11ce0:	str	r1, [r4, #4]
   11ce4:	ldr	r3, [r4, #8]
   11ce8:	ldr	r1, [r2, #4]
   11cec:	cmp	r3, #0
   11cf0:	ldrne	r3, [r3, #12]
   11cf4:	mvneq	r3, #0
   11cf8:	cmp	r3, r0
   11cfc:	movlt	r3, r0
   11d00:	cmp	r1, #0
   11d04:	add	r3, r3, #1
   11d08:	str	r3, [r4, #12]
   11d0c:	beq	11f44 <avl_insere@@Base+0x3e4>
   11d10:	ldr	r1, [r1, #12]
   11d14:	b	11e08 <avl_insere@@Base+0x2a8>
   11d18:	mov	r1, r7
   11d1c:	ldr	r0, [r4, #4]
   11d20:	bl	1172c <avl_insere_impl@@Base>
   11d24:	mov	r2, r0
   11d28:	ldr	r0, [r4, #8]
   11d2c:	str	r2, [r4, #4]
   11d30:	b	11bcc <avl_insere@@Base+0x6c>
   11d34:	mov	r0, #16
   11d38:	bl	10f00 <malloc@plt>
   11d3c:	mov	r4, r0
   11d40:	mov	r0, r7
   11d44:	bl	10f24 <strlen@plt>
   11d48:	add	r8, r0, #1
   11d4c:	mov	r0, r8
   11d50:	bl	10f00 <malloc@plt>
   11d54:	mov	r2, r8
   11d58:	mov	r1, r7
   11d5c:	str	r0, [r4]
   11d60:	bl	10ed0 <memcpy@plt>
   11d64:	str	r5, [r4, #4]
   11d68:	str	r5, [r4, #8]
   11d6c:	str	r5, [r4, #12]
   11d70:	b	11c88 <avl_insere@@Base+0x128>
   11d74:	ldr	r3, [r2, #8]
   11d78:	str	r0, [r2, #8]
   11d7c:	cmp	r3, #0
   11d80:	str	r3, [r0, #4]
   11d84:	ldrne	r1, [r3, #12]
   11d88:	mvneq	r1, #0
   11d8c:	ldr	r3, [r0, #8]
   11d90:	ldr	ip, [r2, #4]
   11d94:	cmp	r3, #0
   11d98:	ldrne	r3, [r3, #12]
   11d9c:	mvneq	r3, #0
   11da0:	cmp	r3, r1
   11da4:	movlt	r3, r1
   11da8:	cmp	ip, #0
   11dac:	add	r3, r3, #1
   11db0:	str	r3, [r0, #12]
   11db4:	beq	11f70 <avl_insere@@Base+0x410>
   11db8:	ldr	r0, [ip, #12]
   11dbc:	str	r4, [r2, #4]
   11dc0:	ldr	r1, [r4, #4]
   11dc4:	cmp	r3, r0
   11dc8:	movlt	r3, r0
   11dcc:	add	r3, r3, #1
   11dd0:	cmp	r1, #0
   11dd4:	mvneq	r1, #0
   11dd8:	str	r3, [r2, #12]
   11ddc:	ldrne	r1, [r1, #12]
   11de0:	str	ip, [r4, #8]
   11de4:	ldr	r3, [ip, #12]
   11de8:	cmp	r3, r1
   11dec:	ldr	r0, [r2, #8]
   11df0:	movlt	r3, r1
   11df4:	add	r3, r3, #1
   11df8:	str	r3, [r4, #12]
   11dfc:	cmp	r0, #0
   11e00:	beq	11f44 <avl_insere@@Base+0x3e4>
   11e04:	ldr	r1, [r0, #12]
   11e08:	cmp	r3, r1
   11e0c:	mov	r4, r2
   11e10:	movlt	r3, r1
   11e14:	add	r3, r3, #1
   11e18:	str	r3, [r2, #12]
   11e1c:	b	11c88 <avl_insere@@Base+0x128>
   11e20:	cmp	r3, #0
   11e24:	blt	11cd8 <avl_insere@@Base+0x178>
   11e28:	ldr	r0, [r1, #4]
   11e2c:	str	r2, [r1, #4]
   11e30:	ldr	r3, [r2, #4]
   11e34:	str	r0, [r2, #8]
   11e38:	cmp	r3, #0
   11e3c:	ldrne	ip, [r3, #12]
   11e40:	mvneq	ip, #0
   11e44:	cmp	r0, #0
   11e48:	mvneq	r3, #0
   11e4c:	ldrne	r3, [r0, #12]
   11e50:	ldr	r0, [r1, #8]
   11e54:	cmp	r3, ip
   11e58:	movlt	r3, ip
   11e5c:	add	r3, r3, #1
   11e60:	cmp	r0, #0
   11e64:	str	r3, [r2, #12]
   11e68:	beq	11fa4 <avl_insere@@Base+0x444>
   11e6c:	ldr	r2, [r0, #12]
   11e70:	str	r4, [r1, #8]
   11e74:	cmp	r3, r2
   11e78:	movlt	r3, r2
   11e7c:	add	r3, r3, #1
   11e80:	str	r3, [r1, #12]
   11e84:	ldr	r2, [r0, #12]
   11e88:	str	r0, [r4, #4]
   11e8c:	ldr	r3, [r4, #8]
   11e90:	ldr	r0, [r1, #4]
   11e94:	cmp	r3, #0
   11e98:	ldrne	r3, [r3, #12]
   11e9c:	mvneq	r3, #0
   11ea0:	cmp	r3, r2
   11ea4:	movlt	r3, r2
   11ea8:	cmp	r0, #0
   11eac:	add	r3, r3, #1
   11eb0:	mvneq	r2, #0
   11eb4:	str	r3, [r4, #12]
   11eb8:	mov	r4, r1
   11ebc:	ldrne	r2, [r0, #12]
   11ec0:	cmp	r3, r2
   11ec4:	movlt	r3, r2
   11ec8:	add	r3, r3, #1
   11ecc:	str	r3, [r1, #12]
   11ed0:	b	11c88 <avl_insere@@Base+0x128>
   11ed4:	mvn	r0, #0
   11ed8:	b	11c90 <avl_insere@@Base+0x130>
   11edc:	cmp	r0, #0
   11ee0:	beq	11fc8 <avl_insere@@Base+0x468>
   11ee4:	ldr	r1, [r0, #12]
   11ee8:	mvn	ip, #0
   11eec:	mov	r3, ip
   11ef0:	cmp	r1, ip
   11ef4:	movlt	r1, ip
   11ef8:	add	r1, r1, #1
   11efc:	str	r1, [r4, #12]
   11f00:	ldr	r1, [r0, #12]
   11f04:	b	11bfc <avl_insere@@Base+0x9c>
   11f08:	mvn	ip, #0
   11f0c:	cmp	r3, ip
   11f10:	mov	r1, ip
   11f14:	movlt	r3, ip
   11f18:	add	r3, r3, #1
   11f1c:	str	r3, [r4, #12]
   11f20:	b	11bf8 <avl_insere@@Base+0x98>
   11f24:	mvn	r1, #0
   11f28:	b	11c48 <avl_insere@@Base+0xe8>
   11f2c:	cmp	r2, #0
   11f30:	beq	11fd0 <avl_insere@@Base+0x470>
   11f34:	mvn	r3, #0
   11f38:	b	11c20 <avl_insere@@Base+0xc0>
   11f3c:	mvn	r1, #0
   11f40:	b	11c24 <avl_insere@@Base+0xc4>
   11f44:	mvn	r1, #0
   11f48:	b	11e08 <avl_insere@@Base+0x2a8>
   11f4c:	cmp	ip, #0
   11f50:	beq	11ff0 <avl_insere@@Base+0x490>
   11f54:	ldr	r3, [ip, #12]
   11f58:	cmn	r3, #1
   11f5c:	blt	11e28 <avl_insere@@Base+0x2c8>
   11f60:	mvn	r0, #0
   11f64:	str	r4, [r2, #8]
   11f68:	str	r1, [r4, #4]
   11f6c:	b	11ce4 <avl_insere@@Base+0x184>
   11f70:	str	r4, [r2, #4]
   11f74:	mvn	r1, #0
   11f78:	ldr	r0, [r4, #4]
   11f7c:	cmp	r3, r1
   11f80:	movlt	r3, r1
   11f84:	add	r3, r3, #1
   11f88:	str	r3, [r2, #12]
   11f8c:	cmp	r0, #0
   11f90:	str	ip, [r4, #8]
   11f94:	movne	r3, r1
   11f98:	ldrne	r1, [r0, #12]
   11f9c:	moveq	r3, r1
   11fa0:	b	11de8 <avl_insere@@Base+0x288>
   11fa4:	mvn	ip, #0
   11fa8:	str	r4, [r1, #8]
   11fac:	cmp	r3, ip
   11fb0:	mov	r2, ip
   11fb4:	movlt	r3, ip
   11fb8:	add	r3, r3, #1
   11fbc:	str	r3, [r1, #12]
   11fc0:	str	r0, [r4, #4]
   11fc4:	b	11e8c <avl_insere@@Base+0x32c>
   11fc8:	str	r0, [r4, #12]
   11fcc:	b	11c88 <avl_insere@@Base+0x128>
   11fd0:	str	r4, [r0, #4]
   11fd4:	ldr	r3, [r4, #4]
   11fd8:	str	r2, [r4, #8]
   11fdc:	cmp	r3, #0
   11fe0:	bne	11c44 <avl_insere@@Base+0xe4>
   11fe4:	mvn	r1, #0
   11fe8:	mov	r3, r1
   11fec:	b	11c54 <avl_insere@@Base+0xf4>
   11ff0:	mvn	r0, #0
   11ff4:	str	r4, [r2, #8]
   11ff8:	str	ip, [r4, #4]
   11ffc:	b	11ce4 <avl_insere@@Base+0x184>

00012000 <avl_no_valormin@@Base>:
   12000:	b	12008 <avl_no_valormin@@Base+0x8>
   12004:	mov	r0, r3
   12008:	ldr	r3, [r0, #4]
   1200c:	cmp	r3, #0
   12010:	bne	12004 <avl_no_valormin@@Base+0x4>
   12014:	bx	lr

00012018 <avl_no_valormax@@Base>:
   12018:	b	12020 <avl_no_valormax@@Base+0x8>
   1201c:	mov	r0, r3
   12020:	ldr	r3, [r0, #8]
   12024:	cmp	r3, #0
   12028:	bne	1201c <avl_no_valormax@@Base+0x4>
   1202c:	bx	lr

00012030 <avl_remove_impl@@Base>:
   12030:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12034:	subs	r5, r0, #0
   12038:	strd	r6, [sp, #8]
   1203c:	str	r8, [sp, #16]
   12040:	str	lr, [sp, #20]
   12044:	beq	121fc <avl_remove_impl@@Base+0x1cc>
   12048:	ldr	r7, [r5]
   1204c:	mov	r0, r1
   12050:	mov	r6, r1
   12054:	mov	r1, r7
   12058:	bl	10e94 <strcmp@plt>
   1205c:	cmp	r0, #0
   12060:	blt	12204 <avl_remove_impl@@Base+0x1d4>
   12064:	ldr	r4, [r5, #8]
   12068:	bne	1210c <avl_remove_impl@@Base+0xdc>
   1206c:	ldr	r6, [r5, #4]
   12070:	cmp	r6, #0
   12074:	beq	12344 <avl_remove_impl@@Base+0x314>
   12078:	cmp	r4, #0
   1207c:	bne	120c4 <avl_remove_impl@@Base+0x94>
   12080:	ldr	r0, [r6]
   12084:	bl	10f24 <strlen@plt>
   12088:	add	r1, r0, #1
   1208c:	mov	r0, r7
   12090:	bl	10edc <realloc@plt>
   12094:	str	r0, [r5]
   12098:	ldr	r1, [r6]
   1209c:	bl	10ee8 <strcpy@plt>
   120a0:	ldrd	r0, [r6]
   120a4:	ldrd	r2, [r6, #8]
   120a8:	stmib	r5, {r1, r2, r3}
   120ac:	bl	10ec4 <free@plt>
   120b0:	mov	r0, r6
   120b4:	bl	10ec4 <free@plt>
   120b8:	ldmib	r5, {r0, r4}
   120bc:	b	12124 <avl_remove_impl@@Base+0xf4>
   120c0:	mov	r4, r3
   120c4:	ldr	r3, [r4, #4]
   120c8:	cmp	r3, #0
   120cc:	bne	120c0 <avl_remove_impl@@Base+0x90>
   120d0:	ldr	r0, [r4]
   120d4:	bl	10f24 <strlen@plt>
   120d8:	add	r1, r0, #1
   120dc:	mov	r0, r7
   120e0:	bl	10edc <realloc@plt>
   120e4:	str	r0, [r5]
   120e8:	ldr	r1, [r4]
   120ec:	bl	10ee8 <strcpy@plt>
   120f0:	ldr	r1, [r4]
   120f4:	ldr	r0, [r5, #8]
   120f8:	bl	12030 <avl_remove_impl@@Base>
   120fc:	mov	r4, r0
   12100:	ldr	r0, [r5, #4]
   12104:	str	r4, [r5, #8]
   12108:	b	12124 <avl_remove_impl@@Base+0xf4>
   1210c:	mov	r0, r4
   12110:	mov	r1, r6
   12114:	bl	12030 <avl_remove_impl@@Base>
   12118:	mov	r4, r0
   1211c:	ldr	r0, [r5, #4]
   12120:	str	r4, [r5, #8]
   12124:	cmp	r0, #0
   12128:	beq	123e4 <avl_remove_impl@@Base+0x3b4>
   1212c:	cmp	r4, #0
   12130:	ldr	r3, [r0, #12]
   12134:	beq	12410 <avl_remove_impl@@Base+0x3e0>
   12138:	ldr	r2, [r4, #12]
   1213c:	cmp	r3, r2
   12140:	movlt	r3, r2
   12144:	add	r3, r3, #1
   12148:	str	r3, [r5, #12]
   1214c:	ldr	r2, [r4, #12]
   12150:	ldr	r3, [r0, #12]
   12154:	sub	r3, r2, r3
   12158:	cmp	r3, #1
   1215c:	ble	121f4 <avl_remove_impl@@Base+0x1c4>
   12160:	ldrd	r2, [r4, #4]
   12164:	cmp	r3, #0
   12168:	beq	1242c <avl_remove_impl@@Base+0x3fc>
   1216c:	cmp	r2, #0
   12170:	ldr	r3, [r3, #12]
   12174:	beq	1243c <avl_remove_impl@@Base+0x40c>
   12178:	ldr	r1, [r2, #12]
   1217c:	sub	r3, r3, r1
   12180:	cmp	r3, #0
   12184:	blt	12298 <avl_remove_impl@@Base+0x268>
   12188:	str	r5, [r4, #4]
   1218c:	ldr	r3, [r5, #4]
   12190:	str	r2, [r5, #8]
   12194:	cmp	r3, #0
   12198:	beq	12444 <avl_remove_impl@@Base+0x414>
   1219c:	ldr	r1, [r3, #12]
   121a0:	cmp	r2, #0
   121a4:	ldrne	r3, [r2, #12]
   121a8:	mvneq	r3, #0
   121ac:	ldr	r2, [r4, #8]
   121b0:	cmp	r3, r1
   121b4:	movlt	r3, r1
   121b8:	cmp	r2, #0
   121bc:	add	r3, r3, #1
   121c0:	mvneq	r2, #0
   121c4:	str	r3, [r5, #12]
   121c8:	ldrne	r2, [r2, #12]
   121cc:	cmp	r3, r2
   121d0:	movlt	r3, r2
   121d4:	add	r3, r3, #1
   121d8:	str	r3, [r4, #12]
   121dc:	mov	r0, r4
   121e0:	ldrd	r4, [sp]
   121e4:	ldrd	r6, [sp, #8]
   121e8:	ldr	r8, [sp, #16]
   121ec:	add	sp, sp, #20
   121f0:	pop	{pc}		; (ldr pc, [sp], #4)
   121f4:	cmn	r3, #1
   121f8:	blt	1221c <avl_remove_impl@@Base+0x1ec>
   121fc:	mov	r4, r5
   12200:	b	121dc <avl_remove_impl@@Base+0x1ac>
   12204:	mov	r1, r6
   12208:	ldr	r0, [r5, #4]
   1220c:	bl	12030 <avl_remove_impl@@Base>
   12210:	str	r0, [r5, #4]
   12214:	ldr	r4, [r5, #8]
   12218:	b	12124 <avl_remove_impl@@Base+0xf4>
   1221c:	ldmib	r0, {r2, r4}
   12220:	cmp	r4, #0
   12224:	beq	1244c <avl_remove_impl@@Base+0x41c>
   12228:	cmp	r2, #0
   1222c:	ldr	r3, [r4, #12]
   12230:	beq	12360 <avl_remove_impl@@Base+0x330>
   12234:	ldr	r2, [r2, #12]
   12238:	sub	r2, r3, r2
   1223c:	cmp	r2, #0
   12240:	bgt	12368 <avl_remove_impl@@Base+0x338>
   12244:	mov	r2, r3
   12248:	str	r5, [r0, #8]
   1224c:	str	r4, [r5, #4]
   12250:	ldr	r3, [r5, #8]
   12254:	mov	r4, r0
   12258:	ldr	r1, [r0, #4]
   1225c:	cmp	r3, #0
   12260:	ldrne	r3, [r3, #12]
   12264:	mvneq	r3, #0
   12268:	cmp	r3, r2
   1226c:	movlt	r3, r2
   12270:	cmp	r1, #0
   12274:	add	r3, r3, #1
   12278:	mvneq	r2, #0
   1227c:	str	r3, [r5, #12]
   12280:	ldrne	r2, [r1, #12]
   12284:	cmp	r3, r2
   12288:	movlt	r3, r2
   1228c:	add	r3, r3, #1
   12290:	str	r3, [r0, #12]
   12294:	b	121dc <avl_remove_impl@@Base+0x1ac>
   12298:	ldr	r3, [r2, #8]
   1229c:	str	r4, [r2, #8]
   122a0:	ldr	r1, [r4, #8]
   122a4:	cmp	r3, #0
   122a8:	str	r3, [r4, #4]
   122ac:	ldrne	r3, [r3, #12]
   122b0:	mvneq	r3, #0
   122b4:	cmp	r1, #0
   122b8:	ldrne	r1, [r1, #12]
   122bc:	mvneq	r1, #0
   122c0:	ldr	r0, [r2, #4]
   122c4:	cmp	r1, r3
   122c8:	movlt	r1, r3
   122cc:	add	r1, r1, #1
   122d0:	cmp	r0, #0
   122d4:	str	r1, [r4, #12]
   122d8:	beq	12470 <avl_remove_impl@@Base+0x440>
   122dc:	ldr	ip, [r0, #12]
   122e0:	str	r5, [r2, #4]
   122e4:	ldr	r3, [r5, #4]
   122e8:	cmp	r1, ip
   122ec:	movlt	r1, ip
   122f0:	add	r1, r1, #1
   122f4:	cmp	r3, #0
   122f8:	str	r1, [r2, #12]
   122fc:	mvneq	r1, #0
   12300:	ldrne	r1, [r3, #12]
   12304:	str	r0, [r5, #8]
   12308:	ldr	r3, [r0, #12]
   1230c:	cmp	r3, r1
   12310:	mov	r4, r2
   12314:	ldr	r0, [r2, #8]
   12318:	movlt	r3, r1
   1231c:	add	r3, r3, #1
   12320:	str	r3, [r5, #12]
   12324:	cmp	r0, #0
   12328:	ldrne	r1, [r0, #12]
   1232c:	mvneq	r1, #0
   12330:	cmp	r3, r1
   12334:	movlt	r3, r1
   12338:	add	r3, r3, #1
   1233c:	str	r3, [r2, #12]
   12340:	b	121dc <avl_remove_impl@@Base+0x1ac>
   12344:	cmp	r4, #0
   12348:	bne	124ec <avl_remove_impl@@Base+0x4bc>
   1234c:	mov	r0, r7
   12350:	bl	10ec4 <free@plt>
   12354:	mov	r0, r5
   12358:	bl	10ec4 <free@plt>
   1235c:	b	121dc <avl_remove_impl@@Base+0x1ac>
   12360:	cmp	r3, #0
   12364:	blt	12244 <avl_remove_impl@@Base+0x214>
   12368:	ldr	r2, [r4, #4]
   1236c:	str	r0, [r4, #4]
   12370:	ldr	r3, [r0, #4]
   12374:	str	r2, [r0, #8]
   12378:	cmp	r3, #0
   1237c:	ldrne	r1, [r3, #12]
   12380:	mvneq	r1, #0
   12384:	cmp	r2, #0
   12388:	mvneq	r3, #0
   1238c:	ldrne	r3, [r2, #12]
   12390:	ldr	r2, [r4, #8]
   12394:	cmp	r3, r1
   12398:	movlt	r3, r1
   1239c:	add	r3, r3, #1
   123a0:	cmp	r2, #0
   123a4:	str	r3, [r0, #12]
   123a8:	beq	124a0 <avl_remove_impl@@Base+0x470>
   123ac:	ldr	r1, [r2, #12]
   123b0:	str	r5, [r4, #8]
   123b4:	cmp	r3, r1
   123b8:	movlt	r3, r1
   123bc:	add	r3, r3, #1
   123c0:	str	r3, [r4, #12]
   123c4:	ldr	r1, [r2, #12]
   123c8:	str	r2, [r5, #4]
   123cc:	ldr	r3, [r5, #8]
   123d0:	ldr	r2, [r4, #4]
   123d4:	cmp	r3, #0
   123d8:	ldrne	r3, [r3, #12]
   123dc:	mvneq	r3, #0
   123e0:	b	121b0 <avl_remove_impl@@Base+0x180>
   123e4:	cmp	r4, #0
   123e8:	beq	124c4 <avl_remove_impl@@Base+0x494>
   123ec:	ldr	r2, [r4, #12]
   123f0:	mvn	r1, #0
   123f4:	mov	r3, r1
   123f8:	cmp	r2, r1
   123fc:	movlt	r2, r1
   12400:	add	r2, r2, #1
   12404:	str	r2, [r5, #12]
   12408:	ldr	r2, [r4, #12]
   1240c:	b	12154 <avl_remove_impl@@Base+0x124>
   12410:	mvn	r1, #0
   12414:	cmp	r3, r1
   12418:	mov	r2, r1
   1241c:	movlt	r3, r1
   12420:	add	r3, r3, #1
   12424:	str	r3, [r5, #12]
   12428:	b	12150 <avl_remove_impl@@Base+0x120>
   1242c:	cmp	r2, #0
   12430:	beq	124cc <avl_remove_impl@@Base+0x49c>
   12434:	mvn	r3, #0
   12438:	b	12178 <avl_remove_impl@@Base+0x148>
   1243c:	mvn	r1, #0
   12440:	b	1217c <avl_remove_impl@@Base+0x14c>
   12444:	mvn	r1, #0
   12448:	b	121a0 <avl_remove_impl@@Base+0x170>
   1244c:	cmp	r2, #0
   12450:	beq	12460 <avl_remove_impl@@Base+0x430>
   12454:	ldr	r3, [r2, #12]
   12458:	cmn	r3, #1
   1245c:	blt	12368 <avl_remove_impl@@Base+0x338>
   12460:	mvn	r2, #0
   12464:	str	r5, [r0, #8]
   12468:	str	r4, [r5, #4]
   1246c:	b	12250 <avl_remove_impl@@Base+0x220>
   12470:	str	r5, [r2, #4]
   12474:	mvn	r3, #0
   12478:	ldr	ip, [r5, #4]
   1247c:	cmp	r1, r3
   12480:	movlt	r1, r3
   12484:	add	r1, r1, #1
   12488:	str	r1, [r2, #12]
   1248c:	cmp	ip, #0
   12490:	str	r0, [r5, #8]
   12494:	ldrne	r1, [ip, #12]
   12498:	moveq	r1, r3
   1249c:	b	1230c <avl_remove_impl@@Base+0x2dc>
   124a0:	mvn	r0, #0
   124a4:	str	r5, [r4, #8]
   124a8:	cmp	r3, r0
   124ac:	mov	r1, r0
   124b0:	movlt	r3, r0
   124b4:	add	r3, r3, #1
   124b8:	str	r3, [r4, #12]
   124bc:	str	r2, [r5, #4]
   124c0:	b	123cc <avl_remove_impl@@Base+0x39c>
   124c4:	str	r4, [r5, #12]
   124c8:	b	121fc <avl_remove_impl@@Base+0x1cc>
   124cc:	str	r5, [r4, #4]
   124d0:	ldr	r3, [r5, #4]
   124d4:	str	r2, [r5, #8]
   124d8:	cmp	r3, #0
   124dc:	bne	1219c <avl_remove_impl@@Base+0x16c>
   124e0:	mvn	r1, #0
   124e4:	mov	r3, r1
   124e8:	b	121ac <avl_remove_impl@@Base+0x17c>
   124ec:	mov	r6, r4
   124f0:	b	12080 <avl_remove_impl@@Base+0x50>

000124f4 <avl_apaga@@Base>:
   124f4:	str	r4, [sp, #-8]!
   124f8:	subs	r4, r0, #0
   124fc:	str	lr, [sp, #4]
   12500:	beq	12540 <avl_apaga@@Base+0x4c>
   12504:	ldr	r3, [r4]
   12508:	cmp	r3, #0
   1250c:	beq	1252c <avl_apaga@@Base+0x38>
   12510:	mov	r0, r3
   12514:	ldr	r1, [r3]
   12518:	bl	12030 <avl_remove_impl@@Base>
   1251c:	cmp	r0, #0
   12520:	mov	r3, r0
   12524:	str	r0, [r4]
   12528:	bne	12510 <avl_apaga@@Base+0x1c>
   1252c:	mov	r0, r4
   12530:	ldr	r4, [sp]
   12534:	ldr	lr, [sp, #4]
   12538:	add	sp, sp, #8
   1253c:	b	10ec4 <free@plt>
   12540:	ldr	r4, [sp]
   12544:	add	sp, sp, #4
   12548:	pop	{pc}		; (ldr pc, [sp], #4)

0001254c <avl_remove@@Base>:
   1254c:	clz	r3, r1
   12550:	cmp	r0, #0
   12554:	strd	r4, [sp, #-16]!
   12558:	lsr	r3, r3, #5
   1255c:	moveq	r4, #1
   12560:	str	r6, [sp, #8]
   12564:	str	lr, [sp, #12]
   12568:	movne	r4, r3
   1256c:	cmp	r4, #0
   12570:	bne	12598 <avl_remove@@Base+0x4c>
   12574:	mov	r5, r0
   12578:	ldr	r0, [r0]
   1257c:	bl	12030 <avl_remove_impl@@Base>
   12580:	str	r0, [r5]
   12584:	mov	r0, r4
   12588:	ldrd	r4, [sp]
   1258c:	ldr	r6, [sp, #8]
   12590:	add	sp, sp, #12
   12594:	pop	{pc}		; (ldr pc, [sp], #4)
   12598:	mvn	r4, #0
   1259c:	b	12584 <avl_remove@@Base+0x38>

000125a0 <avl_preordem_impl@@Base>:
   125a0:	strd	r4, [sp, #-16]!
   125a4:	subs	r4, r0, #0
   125a8:	str	r6, [sp, #8]
   125ac:	str	lr, [sp, #12]
   125b0:	beq	125dc <avl_preordem_impl@@Base+0x3c>
   125b4:	movw	r5, #13560	; 0x34f8
   125b8:	movt	r5, #1
   125bc:	mov	r0, r5
   125c0:	ldr	r1, [r4]
   125c4:	bl	10ea0 <printf@plt>
   125c8:	ldr	r0, [r4, #4]
   125cc:	bl	125a0 <avl_preordem_impl@@Base>
   125d0:	ldr	r4, [r4, #8]
   125d4:	cmp	r4, #0
   125d8:	bne	125bc <avl_preordem_impl@@Base+0x1c>
   125dc:	ldrd	r4, [sp]
   125e0:	ldr	r6, [sp, #8]
   125e4:	add	sp, sp, #12
   125e8:	pop	{pc}		; (ldr pc, [sp], #4)

000125ec <avl_imprime@@Base>:
   125ec:	strd	r4, [sp, #-16]!
   125f0:	subs	r4, r0, #0
   125f4:	str	r6, [sp, #8]
   125f8:	str	lr, [sp, #12]
   125fc:	beq	12640 <avl_imprime@@Base+0x54>
   12600:	movw	r5, #13560	; 0x34f8
   12604:	movt	r5, #1
   12608:	mov	r0, r5
   1260c:	ldr	r1, [r4]
   12610:	bl	10ea0 <printf@plt>
   12614:	ldr	r0, [r4, #4]
   12618:	bl	125a0 <avl_preordem_impl@@Base>
   1261c:	ldr	r4, [r4, #8]
   12620:	cmp	r4, #0
   12624:	bne	12608 <avl_imprime@@Base+0x1c>
   12628:	mov	r0, #10
   1262c:	ldrd	r4, [sp]
   12630:	ldr	r6, [sp, #8]
   12634:	ldr	lr, [sp, #12]
   12638:	add	sp, sp, #16
   1263c:	b	10f30 <putchar@plt>
   12640:	ldrd	r4, [sp]
   12644:	ldr	r6, [sp, #8]
   12648:	add	sp, sp, #12
   1264c:	pop	{pc}		; (ldr pc, [sp], #4)

00012650 <novo_str@@Base>:
   12650:	strd	r4, [sp, #-16]!
   12654:	mov	r5, r0
   12658:	mov	r0, #12
   1265c:	str	r6, [sp, #8]
   12660:	str	lr, [sp, #12]
   12664:	bl	10f00 <malloc@plt>
   12668:	subs	r4, r0, #0
   1266c:	beq	126ac <novo_str@@Base+0x5c>
   12670:	mov	r0, r5
   12674:	bl	10f24 <strlen@plt>
   12678:	add	r6, r0, #1
   1267c:	mov	r0, r6
   12680:	bl	10f00 <malloc@plt>
   12684:	cmp	r0, #0
   12688:	mov	r3, r0
   1268c:	str	r0, [r4]
   12690:	beq	126c0 <novo_str@@Base+0x70>
   12694:	mov	r2, r6
   12698:	mov	r1, r5
   1269c:	bl	10ed0 <memcpy@plt>
   126a0:	mov	r3, #0
   126a4:	str	r3, [r4, #4]
   126a8:	str	r3, [r4, #8]
   126ac:	mov	r0, r4
   126b0:	ldrd	r4, [sp]
   126b4:	ldr	r6, [sp, #8]
   126b8:	add	sp, sp, #12
   126bc:	pop	{pc}		; (ldr pc, [sp], #4)
   126c0:	mov	r0, r4
   126c4:	mov	r4, r3
   126c8:	bl	10ec4 <free@plt>
   126cc:	b	126ac <novo_str@@Base+0x5c>

000126d0 <lista_nova@@Base>:
   126d0:	mov	r0, #12
   126d4:	strd	r4, [sp, #-16]!
   126d8:	str	r6, [sp, #8]
   126dc:	str	lr, [sp, #12]
   126e0:	bl	10f00 <malloc@plt>
   126e4:	cmp	r0, #0
   126e8:	beq	12700 <lista_nova@@Base+0x30>
   126ec:	mov	r4, #0
   126f0:	mov	r5, #0
   126f4:	mov	r3, #0
   126f8:	strd	r4, [r0]
   126fc:	str	r3, [r0, #8]
   12700:	ldrd	r4, [sp]
   12704:	ldr	r6, [sp, #8]
   12708:	add	sp, sp, #12
   1270c:	pop	{pc}		; (ldr pc, [sp], #4)

00012710 <lista_apaga@@Base>:
   12710:	strd	r4, [sp, #-16]!
   12714:	subs	r5, r0, #0
   12718:	str	r6, [sp, #8]
   1271c:	str	lr, [sp, #12]
   12720:	bne	1273c <lista_apaga@@Base+0x2c>
   12724:	b	12760 <lista_apaga@@Base+0x50>
   12728:	ldm	r4, {r0, r3}
   1272c:	str	r3, [r5]
   12730:	bl	10ec4 <free@plt>
   12734:	mov	r0, r4
   12738:	bl	10ec4 <free@plt>
   1273c:	ldr	r4, [r5]
   12740:	cmp	r4, #0
   12744:	bne	12728 <lista_apaga@@Base+0x18>
   12748:	mov	r0, r5
   1274c:	ldrd	r4, [sp]
   12750:	ldr	r6, [sp, #8]
   12754:	ldr	lr, [sp, #12]
   12758:	add	sp, sp, #16
   1275c:	b	10ec4 <free@plt>
   12760:	ldrd	r4, [sp]
   12764:	ldr	r6, [sp, #8]
   12768:	add	sp, sp, #12
   1276c:	pop	{pc}		; (ldr pc, [sp], #4)

00012770 <lista_tamanho@@Base>:
   12770:	cmp	r0, #0
   12774:	ldrne	r0, [r0, #8]
   12778:	mvneq	r0, #0
   1277c:	bx	lr

00012780 <lista_inicio@@Base>:
   12780:	cmp	r0, #0
   12784:	ldrne	r0, [r0]
   12788:	bx	lr

0001278c <lista_fim@@Base>:
   1278c:	cmp	r0, #0
   12790:	ldrne	r0, [r0, #4]
   12794:	bx	lr

00012798 <lista_insere@@Base>:
   12798:	clz	r3, r1
   1279c:	cmp	r0, #0
   127a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   127a4:	lsr	r3, r3, #5
   127a8:	strd	r6, [sp, #8]
   127ac:	moveq	r7, #1
   127b0:	strd	r8, [sp, #16]
   127b4:	movne	r7, r3
   127b8:	str	sl, [sp, #24]
   127bc:	cmp	r7, #0
   127c0:	str	lr, [sp, #28]
   127c4:	bne	12878 <lista_insere@@Base+0xe0>
   127c8:	mov	r5, r0
   127cc:	mov	r0, #12
   127d0:	mov	r8, r1
   127d4:	mov	r6, r2
   127d8:	bl	10f00 <malloc@plt>
   127dc:	subs	r4, r0, #0
   127e0:	beq	12878 <lista_insere@@Base+0xe0>
   127e4:	mov	r0, r8
   127e8:	bl	10f24 <strlen@plt>
   127ec:	add	r9, r0, #1
   127f0:	mov	r0, r9
   127f4:	bl	10f00 <malloc@plt>
   127f8:	cmp	r0, #0
   127fc:	mov	r3, r0
   12800:	str	r0, [r4]
   12804:	beq	1289c <lista_insere@@Base+0x104>
   12808:	mov	r2, r9
   1280c:	mov	r1, r8
   12810:	bl	10ed0 <memcpy@plt>
   12814:	cmp	r6, #0
   12818:	str	r7, [r4, #4]
   1281c:	ldr	r3, [r5, #8]
   12820:	str	r7, [r4, #8]
   12824:	ldr	r2, [r5]
   12828:	add	r3, r3, #1
   1282c:	str	r3, [r5, #8]
   12830:	beq	12880 <lista_insere@@Base+0xe8>
   12834:	cmp	r6, r2
   12838:	streq	r6, [r4, #4]
   1283c:	streq	r4, [r6, #8]
   12840:	streq	r4, [r5]
   12844:	beq	1285c <lista_insere@@Base+0xc4>
   12848:	ldr	r3, [r6, #8]
   1284c:	str	r6, [r4, #4]
   12850:	str	r3, [r4, #8]
   12854:	str	r4, [r3, #4]
   12858:	str	r4, [r6, #8]
   1285c:	mov	r0, r4
   12860:	ldrd	r4, [sp]
   12864:	ldrd	r6, [sp, #8]
   12868:	ldrd	r8, [sp, #16]
   1286c:	ldr	sl, [sp, #24]
   12870:	add	sp, sp, #28
   12874:	pop	{pc}		; (ldr pc, [sp], #4)
   12878:	mov	r4, #0
   1287c:	b	1285c <lista_insere@@Base+0xc4>
   12880:	cmp	r2, #0
   12884:	ldrne	r3, [r5, #4]
   12888:	streq	r4, [r5]
   1288c:	strne	r3, [r4, #8]
   12890:	strne	r4, [r3, #4]
   12894:	str	r4, [r5, #4]
   12898:	b	1285c <lista_insere@@Base+0xc4>
   1289c:	mov	r0, r4
   128a0:	mov	r4, r3
   128a4:	bl	10ec4 <free@plt>
   128a8:	b	1285c <lista_insere@@Base+0xc4>

000128ac <lista_remove@@Base>:
   128ac:	cmp	r1, #0
   128b0:	cmpne	r0, #0
   128b4:	strd	r4, [sp, #-16]!
   128b8:	moveq	r5, #0
   128bc:	str	r6, [sp, #8]
   128c0:	str	lr, [sp, #12]
   128c4:	beq	1290c <lista_remove@@Base+0x60>
   128c8:	ldr	r3, [r0, #8]
   128cc:	mov	r4, r1
   128d0:	ldr	r2, [r1, #8]
   128d4:	ldr	r5, [r1, #4]
   128d8:	sub	r3, r3, #1
   128dc:	cmp	r2, #0
   128e0:	str	r3, [r0, #8]
   128e4:	strne	r5, [r2, #4]
   128e8:	ldrne	r5, [r1, #4]
   128ec:	streq	r5, [r0]
   128f0:	cmp	r5, #0
   128f4:	streq	r2, [r0, #4]
   128f8:	strne	r2, [r5, #8]
   128fc:	ldr	r0, [r1]
   12900:	bl	10ec4 <free@plt>
   12904:	mov	r0, r4
   12908:	bl	10ec4 <free@plt>
   1290c:	mov	r0, r5
   12910:	ldrd	r4, [sp]
   12914:	ldr	r6, [sp, #8]
   12918:	add	sp, sp, #12
   1291c:	pop	{pc}		; (ldr pc, [sp], #4)

00012920 <lista_pesquisa@@Base>:
   12920:	strd	r4, [sp, #-16]!
   12924:	clz	r4, r1
   12928:	cmp	r0, #0
   1292c:	lsr	r4, r4, #5
   12930:	moveq	r4, #1
   12934:	str	r6, [sp, #8]
   12938:	str	lr, [sp, #12]
   1293c:	cmp	r4, #0
   12940:	movne	r4, #0
   12944:	bne	1298c <lista_pesquisa@@Base+0x6c>
   12948:	cmp	r2, #1
   1294c:	bhi	1298c <lista_pesquisa@@Base+0x6c>
   12950:	cmp	r2, #0
   12954:	mov	r5, r1
   12958:	bne	129a0 <lista_pesquisa@@Base+0x80>
   1295c:	ldr	r4, [r0]
   12960:	cmp	r4, #0
   12964:	bne	12978 <lista_pesquisa@@Base+0x58>
   12968:	b	1298c <lista_pesquisa@@Base+0x6c>
   1296c:	ldr	r4, [r4, #4]
   12970:	cmp	r4, #0
   12974:	beq	1298c <lista_pesquisa@@Base+0x6c>
   12978:	mov	r1, r5
   1297c:	ldr	r0, [r4]
   12980:	bl	10e94 <strcmp@plt>
   12984:	cmp	r0, #0
   12988:	bne	1296c <lista_pesquisa@@Base+0x4c>
   1298c:	mov	r0, r4
   12990:	ldrd	r4, [sp]
   12994:	ldr	r6, [sp, #8]
   12998:	add	sp, sp, #12
   1299c:	pop	{pc}		; (ldr pc, [sp], #4)
   129a0:	ldr	r4, [r0, #4]
   129a4:	cmp	r4, #0
   129a8:	bne	129bc <lista_pesquisa@@Base+0x9c>
   129ac:	b	1298c <lista_pesquisa@@Base+0x6c>
   129b0:	ldr	r4, [r4, #8]
   129b4:	cmp	r4, #0
   129b8:	beq	1298c <lista_pesquisa@@Base+0x6c>
   129bc:	mov	r1, r5
   129c0:	ldr	r0, [r4]
   129c4:	bl	10e94 <strcmp@plt>
   129c8:	cmp	r0, #0
   129cc:	bne	129b0 <lista_pesquisa@@Base+0x90>
   129d0:	b	1298c <lista_pesquisa@@Base+0x6c>

000129d4 <lista_ordena@@Base>:
   129d4:	cmp	r0, #0
   129d8:	beq	12a98 <lista_ordena@@Base+0xc4>
   129dc:	ldr	r3, [r0, #8]
   129e0:	cmp	r3, #0
   129e4:	beq	12a90 <lista_ordena@@Base+0xbc>
   129e8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   129ec:	strd	r6, [sp, #8]
   129f0:	strd	r8, [sp, #16]
   129f4:	ldr	r8, [r0]
   129f8:	str	sl, [sp, #24]
   129fc:	str	lr, [sp, #28]
   12a00:	ldr	r9, [r8, #4]
   12a04:	cmp	r9, #0
   12a08:	beq	12a74 <lista_ordena@@Base+0xa0>
   12a0c:	ldr	sl, [r8]
   12a10:	mov	r7, r8
   12a14:	mov	r4, r9
   12a18:	mov	r5, sl
   12a1c:	ldr	r6, [r4]
   12a20:	mov	r1, r5
   12a24:	mov	r0, r6
   12a28:	bl	10e94 <strcmp@plt>
   12a2c:	cmp	r0, #0
   12a30:	movlt	r7, r4
   12a34:	ldr	r4, [r4, #4]
   12a38:	movlt	r5, r6
   12a3c:	cmp	r4, #0
   12a40:	bne	12a1c <lista_ordena@@Base+0x48>
   12a44:	cmp	r7, r8
   12a48:	ldr	r3, [r9, #4]
   12a4c:	beq	12a6c <lista_ordena@@Base+0x98>
   12a50:	cmp	r3, #0
   12a54:	str	r5, [r8]
   12a58:	str	sl, [r7]
   12a5c:	beq	12a74 <lista_ordena@@Base+0xa0>
   12a60:	mov	r8, r9
   12a64:	mov	r9, r3
   12a68:	b	12a0c <lista_ordena@@Base+0x38>
   12a6c:	cmp	r3, #0
   12a70:	bne	12a60 <lista_ordena@@Base+0x8c>
   12a74:	ldrd	r4, [sp]
   12a78:	mov	r0, #0
   12a7c:	ldrd	r6, [sp, #8]
   12a80:	ldrd	r8, [sp, #16]
   12a84:	ldr	sl, [sp, #24]
   12a88:	add	sp, sp, #28
   12a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a90:	mov	r0, #0
   12a94:	bx	lr
   12a98:	mvn	r0, #0
   12a9c:	bx	lr

00012aa0 <lista_inverte@@Base>:
   12aa0:	strd	r4, [sp, #-12]!
   12aa4:	subs	r5, r0, #0
   12aa8:	str	lr, [sp, #8]
   12aac:	beq	12b40 <lista_inverte@@Base+0xa0>
   12ab0:	ldr	r4, [r5, #8]
   12ab4:	cmp	r4, #1
   12ab8:	movle	r0, #0
   12abc:	ble	12b2c <lista_inverte@@Base+0x8c>
   12ac0:	ldr	r1, [r5]
   12ac4:	cmp	r4, #2
   12ac8:	ldr	r3, [r1, #4]
   12acc:	beq	12b38 <lista_inverte@@Base+0x98>
   12ad0:	sub	r4, r4, #2
   12ad4:	mov	ip, #0
   12ad8:	b	12ae0 <lista_inverte@@Base+0x40>
   12adc:	mov	r3, r2
   12ae0:	ldmib	r3, {r2, lr}
   12ae4:	add	ip, ip, #1
   12ae8:	cmp	r4, ip
   12aec:	str	r2, [lr, #4]
   12af0:	str	lr, [r2, #8]
   12af4:	str	r1, [r3, #4]
   12af8:	str	r3, [r1, #8]
   12afc:	mov	r1, r3
   12b00:	bne	12adc <lista_inverte@@Base+0x3c>
   12b04:	ldr	r2, [r5, #4]
   12b08:	mov	r1, #0
   12b0c:	mov	r0, r1
   12b10:	ldr	ip, [r2, #8]
   12b14:	str	ip, [r5, #4]
   12b18:	str	r1, [ip, #4]
   12b1c:	str	r3, [r2, #4]
   12b20:	str	r1, [r2, #8]
   12b24:	str	r2, [r3, #8]
   12b28:	str	r2, [r5]
   12b2c:	ldrd	r4, [sp]
   12b30:	add	sp, sp, #8
   12b34:	pop	{pc}		; (ldr pc, [sp], #4)
   12b38:	mov	r3, r1
   12b3c:	b	12b04 <lista_inverte@@Base+0x64>
   12b40:	mvn	r0, #0
   12b44:	b	12b2c <lista_inverte@@Base+0x8c>

00012b48 <tabela_nova@@Base>:
   12b48:	strd	r4, [sp, #-16]!
   12b4c:	str	r6, [sp, #8]
   12b50:	subs	r6, r0, #0
   12b54:	movle	r3, #1
   12b58:	movgt	r3, #0
   12b5c:	str	lr, [sp, #12]
   12b60:	cmp	r1, #0
   12b64:	moveq	r3, #1
   12b68:	cmp	r3, #0
   12b6c:	bne	12bbc <tabela_nova@@Base+0x74>
   12b70:	mov	r0, #12
   12b74:	mov	r4, r1
   12b78:	bl	10f00 <malloc@plt>
   12b7c:	subs	r5, r0, #0
   12b80:	beq	12bbc <tabela_nova@@Base+0x74>
   12b84:	mov	r1, #4
   12b88:	mov	r0, r6
   12b8c:	bl	10e88 <calloc@plt>
   12b90:	cmp	r0, #0
   12b94:	mov	r3, r0
   12b98:	str	r0, [r5, #4]
   12b9c:	strne	r4, [r5]
   12ba0:	strne	r6, [r5, #8]
   12ba4:	beq	12bc4 <tabela_nova@@Base+0x7c>
   12ba8:	mov	r0, r5
   12bac:	ldrd	r4, [sp]
   12bb0:	ldr	r6, [sp, #8]
   12bb4:	add	sp, sp, #12
   12bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bbc:	mov	r5, #0
   12bc0:	b	12ba8 <tabela_nova@@Base+0x60>
   12bc4:	mov	r0, r5
   12bc8:	mov	r5, r3
   12bcc:	bl	10ec4 <free@plt>
   12bd0:	b	12ba8 <tabela_nova@@Base+0x60>

00012bd4 <tabela_apaga@@Base>:
   12bd4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12bd8:	strd	r6, [sp, #8]
   12bdc:	subs	r7, r0, #0
   12be0:	str	r8, [sp, #16]
   12be4:	str	lr, [sp, #20]
   12be8:	beq	12c50 <tabela_apaga@@Base+0x7c>
   12bec:	ldmib	r7, {r0, r3}
   12bf0:	cmp	r3, #0
   12bf4:	ble	12c30 <tabela_apaga@@Base+0x5c>
   12bf8:	mov	r6, #0
   12bfc:	ldr	r4, [r0, r6, lsl #2]
   12c00:	cmp	r4, #0
   12c04:	beq	12c24 <tabela_apaga@@Base+0x50>
   12c08:	ldm	r4, {r0, r5}
   12c0c:	bl	10ec4 <free@plt>
   12c10:	mov	r0, r4
   12c14:	bl	10ec4 <free@plt>
   12c18:	subs	r4, r5, #0
   12c1c:	bne	12c08 <tabela_apaga@@Base+0x34>
   12c20:	ldmib	r7, {r0, r3}
   12c24:	add	r6, r6, #1
   12c28:	cmp	r6, r3
   12c2c:	blt	12bfc <tabela_apaga@@Base+0x28>
   12c30:	bl	10ec4 <free@plt>
   12c34:	mov	r0, r7
   12c38:	ldrd	r4, [sp]
   12c3c:	ldrd	r6, [sp, #8]
   12c40:	ldr	r8, [sp, #16]
   12c44:	ldr	lr, [sp, #20]
   12c48:	add	sp, sp, #24
   12c4c:	b	10ec4 <free@plt>
   12c50:	ldrd	r4, [sp]
   12c54:	ldrd	r6, [sp, #8]
   12c58:	ldr	r8, [sp, #16]
   12c5c:	add	sp, sp, #20
   12c60:	pop	{pc}		; (ldr pc, [sp], #4)

00012c64 <tabela_adiciona@@Base>:
   12c64:	cmp	r1, #0
   12c68:	clz	r3, r2
   12c6c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12c70:	lsr	r3, r3, #5
   12c74:	moveq	r3, #1
   12c78:	cmp	r0, #0
   12c7c:	moveq	r3, #1
   12c80:	strd	r6, [sp, #8]
   12c84:	cmp	r3, #0
   12c88:	strd	r8, [sp, #16]
   12c8c:	str	sl, [sp, #24]
   12c90:	str	lr, [sp, #28]
   12c94:	bne	12d68 <tabela_adiciona@@Base+0x104>
   12c98:	mov	r4, r0
   12c9c:	mov	r6, r1
   12ca0:	mov	r0, r1
   12ca4:	ldr	r3, [r4]
   12ca8:	mov	r8, r2
   12cac:	ldr	r1, [r4, #8]
   12cb0:	blx	r3
   12cb4:	ldr	sl, [r4, #4]
   12cb8:	mov	r9, r0
   12cbc:	ldr	r4, [sl, r0, lsl #2]
   12cc0:	cmp	r4, #0
   12cc4:	bne	12cd8 <tabela_adiciona@@Base+0x74>
   12cc8:	b	12d18 <tabela_adiciona@@Base+0xb4>
   12ccc:	ldr	r4, [r4, #4]
   12cd0:	cmp	r4, #0
   12cd4:	beq	12d18 <tabela_adiciona@@Base+0xb4>
   12cd8:	ldr	r5, [r4]
   12cdc:	mov	r1, r6
   12ce0:	mov	r0, r5
   12ce4:	bl	10e94 <strcmp@plt>
   12ce8:	subs	r7, r0, #0
   12cec:	bne	12ccc <tabela_adiciona@@Base+0x68>
   12cf0:	mov	r1, r8
   12cf4:	add	r0, r5, #25
   12cf8:	bl	10ee8 <strcpy@plt>
   12cfc:	mov	r0, r7
   12d00:	ldrd	r4, [sp]
   12d04:	ldrd	r6, [sp, #8]
   12d08:	ldrd	r8, [sp, #16]
   12d0c:	ldr	sl, [sp, #24]
   12d10:	add	sp, sp, #28
   12d14:	pop	{pc}		; (ldr pc, [sp], #4)
   12d18:	mov	r0, #8
   12d1c:	bl	10f00 <malloc@plt>
   12d20:	subs	r4, r0, #0
   12d24:	beq	12d68 <tabela_adiciona@@Base+0x104>
   12d28:	mov	r0, #125	; 0x7d
   12d2c:	bl	10f00 <malloc@plt>
   12d30:	cmp	r0, #0
   12d34:	mov	r5, r0
   12d38:	str	r0, [r4]
   12d3c:	beq	12d68 <tabela_adiciona@@Base+0x104>
   12d40:	mov	r1, r6
   12d44:	mov	r7, #0
   12d48:	bl	10ee8 <strcpy@plt>
   12d4c:	mov	r1, r8
   12d50:	add	r0, r5, #25
   12d54:	bl	10ee8 <strcpy@plt>
   12d58:	ldr	r3, [sl, r9, lsl #2]
   12d5c:	str	r3, [r4, #4]
   12d60:	str	r4, [sl, r9, lsl #2]
   12d64:	b	12cfc <tabela_adiciona@@Base+0x98>
   12d68:	mvn	r7, #1
   12d6c:	b	12cfc <tabela_adiciona@@Base+0x98>

00012d70 <tabela_remove@@Base>:
   12d70:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12d74:	subs	r4, r0, #0
   12d78:	strd	r6, [sp, #8]
   12d7c:	strd	r8, [sp, #16]
   12d80:	str	sl, [sp, #24]
   12d84:	str	lr, [sp, #28]
   12d88:	beq	12e24 <tabela_remove@@Base+0xb4>
   12d8c:	mov	r0, r1
   12d90:	mov	r6, r1
   12d94:	ldr	r3, [r4]
   12d98:	ldr	r1, [r4, #8]
   12d9c:	blx	r3
   12da0:	ldr	sl, [r4, #4]
   12da4:	mov	r9, r0
   12da8:	ldr	r4, [sl, r0, lsl #2]
   12dac:	cmp	r4, #0
   12db0:	beq	12e04 <tabela_remove@@Base+0x94>
   12db4:	mov	r8, #0
   12db8:	b	12dc8 <tabela_remove@@Base+0x58>
   12dbc:	mov	r8, r4
   12dc0:	subs	r4, r3, #0
   12dc4:	beq	12e04 <tabela_remove@@Base+0x94>
   12dc8:	ldr	r5, [r4]
   12dcc:	mov	r1, r6
   12dd0:	mov	r0, r5
   12dd4:	bl	10e94 <strcmp@plt>
   12dd8:	subs	r7, r0, #0
   12ddc:	ldr	r3, [r4, #4]
   12de0:	bne	12dbc <tabela_remove@@Base+0x4c>
   12de4:	cmp	r8, #0
   12de8:	mov	r0, r5
   12dec:	strne	r3, [r8, #4]
   12df0:	streq	r3, [sl, r9, lsl #2]
   12df4:	bl	10ec4 <free@plt>
   12df8:	mov	r0, r4
   12dfc:	bl	10ec4 <free@plt>
   12e00:	b	12e08 <tabela_remove@@Base+0x98>
   12e04:	mvn	r7, #2
   12e08:	mov	r0, r7
   12e0c:	ldrd	r4, [sp]
   12e10:	ldrd	r6, [sp, #8]
   12e14:	ldrd	r8, [sp, #16]
   12e18:	ldr	sl, [sp, #24]
   12e1c:	add	sp, sp, #28
   12e20:	pop	{pc}		; (ldr pc, [sp], #4)
   12e24:	mvn	r7, #1
   12e28:	b	12e08 <tabela_remove@@Base+0x98>

00012e2c <tabela_existe@@Base>:
   12e2c:	cmp	r0, #0
   12e30:	cmpne	r1, #0
   12e34:	beq	12ec4 <tabela_existe@@Base+0x98>
   12e38:	strd	r4, [sp, #-16]!
   12e3c:	mov	r4, r0
   12e40:	mov	r5, r1
   12e44:	mov	r0, r1
   12e48:	ldr	r3, [r4]
   12e4c:	ldr	r1, [r4, #8]
   12e50:	str	r6, [sp, #8]
   12e54:	str	lr, [sp, #12]
   12e58:	blx	r3
   12e5c:	ldr	r3, [r4, #4]
   12e60:	ldr	r4, [r3, r0, lsl #2]
   12e64:	cmp	r4, #0
   12e68:	bne	12e7c <tabela_existe@@Base+0x50>
   12e6c:	b	12eb0 <tabela_existe@@Base+0x84>
   12e70:	ldr	r4, [r4, #4]
   12e74:	cmp	r4, #0
   12e78:	beq	12eb0 <tabela_existe@@Base+0x84>
   12e7c:	ldr	r6, [r4]
   12e80:	mov	r1, r5
   12e84:	mov	r0, r6
   12e88:	bl	10e94 <strcmp@plt>
   12e8c:	cmp	r0, #0
   12e90:	bne	12e70 <tabela_existe@@Base+0x44>
   12e94:	cmn	r6, #25
   12e98:	ldrd	r4, [sp]
   12e9c:	mvneq	r0, #2
   12ea0:	movne	r0, #1
   12ea4:	ldr	r6, [sp, #8]
   12ea8:	add	sp, sp, #12
   12eac:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb0:	ldrd	r4, [sp]
   12eb4:	mvn	r0, #2
   12eb8:	ldr	r6, [sp, #8]
   12ebc:	add	sp, sp, #12
   12ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ec4:	mvn	r0, #1
   12ec8:	bx	lr

00012ecc <tabela_valor@@Base>:
   12ecc:	strd	r4, [sp, #-16]!
   12ed0:	subs	r4, r0, #0
   12ed4:	str	r6, [sp, #8]
   12ed8:	str	lr, [sp, #12]
   12edc:	beq	12f40 <tabela_valor@@Base+0x74>
   12ee0:	mov	r0, r1
   12ee4:	mov	r6, r1
   12ee8:	ldr	r3, [r4]
   12eec:	ldr	r1, [r4, #8]
   12ef0:	blx	r3
   12ef4:	ldr	r3, [r4, #4]
   12ef8:	ldr	r4, [r3, r0, lsl #2]
   12efc:	cmp	r4, #0
   12f00:	bne	12f14 <tabela_valor@@Base+0x48>
   12f04:	b	12f40 <tabela_valor@@Base+0x74>
   12f08:	ldr	r4, [r4, #4]
   12f0c:	cmp	r4, #0
   12f10:	beq	12f40 <tabela_valor@@Base+0x74>
   12f14:	ldr	r5, [r4]
   12f18:	mov	r1, r6
   12f1c:	mov	r0, r5
   12f20:	bl	10e94 <strcmp@plt>
   12f24:	cmp	r0, #0
   12f28:	bne	12f08 <tabela_valor@@Base+0x3c>
   12f2c:	add	r0, r5, #25
   12f30:	ldrd	r4, [sp]
   12f34:	ldr	r6, [sp, #8]
   12f38:	add	sp, sp, #12
   12f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f40:	ldrd	r4, [sp]
   12f44:	mov	r0, #0
   12f48:	ldr	r6, [sp, #8]
   12f4c:	add	sp, sp, #12
   12f50:	pop	{pc}		; (ldr pc, [sp], #4)

00012f54 <tabela_esvazia@@Base>:
   12f54:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12f58:	strd	r6, [sp, #8]
   12f5c:	strd	r8, [sp, #16]
   12f60:	subs	r8, r0, #0
   12f64:	str	sl, [sp, #24]
   12f68:	str	lr, [sp, #28]
   12f6c:	beq	12fec <tabela_esvazia@@Base+0x98>
   12f70:	ldr	r1, [r8, #8]
   12f74:	cmp	r1, #0
   12f78:	ble	12fd0 <tabela_esvazia@@Base+0x7c>
   12f7c:	ldr	r3, [r8, #4]
   12f80:	mov	r6, #0
   12f84:	mov	r9, r6
   12f88:	ldr	r4, [r3, r6, lsl #2]
   12f8c:	lsl	r7, r6, #2
   12f90:	add	r2, r3, r7
   12f94:	cmp	r4, #0
   12f98:	beq	12fc0 <tabela_esvazia@@Base+0x6c>
   12f9c:	ldm	r4, {r0, r5}
   12fa0:	bl	10ec4 <free@plt>
   12fa4:	mov	r0, r4
   12fa8:	bl	10ec4 <free@plt>
   12fac:	subs	r4, r5, #0
   12fb0:	bne	12f9c <tabela_esvazia@@Base+0x48>
   12fb4:	ldr	r3, [r8, #4]
   12fb8:	ldr	r1, [r8, #8]
   12fbc:	add	r2, r3, r7
   12fc0:	add	r6, r6, #1
   12fc4:	str	r9, [r2]
   12fc8:	cmp	r6, r1
   12fcc:	blt	12f88 <tabela_esvazia@@Base+0x34>
   12fd0:	mov	r0, #0
   12fd4:	ldrd	r4, [sp]
   12fd8:	ldrd	r6, [sp, #8]
   12fdc:	ldrd	r8, [sp, #16]
   12fe0:	ldr	sl, [sp, #24]
   12fe4:	add	sp, sp, #28
   12fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   12fec:	mvn	r0, #1
   12ff0:	b	12fd4 <tabela_esvazia@@Base+0x80>

00012ff4 <tabela_numelementos@@Base>:
   12ff4:	cmp	r0, #0
   12ff8:	beq	13044 <tabela_numelementos@@Base+0x50>
   12ffc:	ldr	r1, [r0, #8]
   13000:	cmp	r1, #0
   13004:	ble	1303c <tabela_numelementos@@Base+0x48>
   13008:	ldr	r2, [r0, #4]
   1300c:	mov	r0, #0
   13010:	add	r1, r2, r1, lsl #2
   13014:	ldr	r3, [r2], #4
   13018:	cmp	r3, #0
   1301c:	beq	13030 <tabela_numelementos@@Base+0x3c>
   13020:	ldr	r3, [r3, #4]
   13024:	add	r0, r0, #1
   13028:	cmp	r3, #0
   1302c:	bne	13020 <tabela_numelementos@@Base+0x2c>
   13030:	cmp	r1, r2
   13034:	bne	13014 <tabela_numelementos@@Base+0x20>
   13038:	bx	lr
   1303c:	mov	r0, #0
   13040:	bx	lr
   13044:	mvn	r0, #1
   13048:	bx	lr

0001304c <tabela_elementos@@Base>:
   1304c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13050:	subs	r4, r0, #0
   13054:	strd	r6, [sp, #8]
   13058:	strd	r8, [sp, #16]
   1305c:	str	sl, [sp, #24]
   13060:	str	lr, [sp, #28]
   13064:	beq	13154 <tabela_elementos@@Base+0x108>
   13068:	ldr	lr, [r4, #8]
   1306c:	cmp	lr, #0
   13070:	movle	r3, #0
   13074:	movle	r9, r3
   13078:	strle	r3, [r1]
   1307c:	ble	13130 <tabela_elementos@@Base+0xe4>
   13080:	ldr	r6, [r4, #4]
   13084:	mov	r2, #0
   13088:	add	lr, r6, lr, lsl #2
   1308c:	mov	ip, r6
   13090:	ldr	r3, [ip], #4
   13094:	cmp	r3, #0
   13098:	beq	130ac <tabela_elementos@@Base+0x60>
   1309c:	ldr	r3, [r3, #4]
   130a0:	add	r2, r2, #1
   130a4:	cmp	r3, #0
   130a8:	bne	1309c <tabela_elementos@@Base+0x50>
   130ac:	cmp	ip, lr
   130b0:	bne	13090 <tabela_elementos@@Base+0x44>
   130b4:	cmp	r2, #0
   130b8:	str	r2, [r1]
   130bc:	beq	1314c <tabela_elementos@@Base+0x100>
   130c0:	mov	r8, #125	; 0x7d
   130c4:	mul	r0, r8, r2
   130c8:	bl	10f00 <malloc@plt>
   130cc:	subs	r9, r0, #0
   130d0:	beq	1314c <tabela_elementos@@Base+0x100>
   130d4:	ldr	r7, [r4, #8]
   130d8:	cmp	r7, #0
   130dc:	ble	13130 <tabela_elementos@@Base+0xe4>
   130e0:	add	r7, r6, r7, lsl #2
   130e4:	mov	r5, #0
   130e8:	b	130f4 <tabela_elementos@@Base+0xa8>
   130ec:	cmp	r7, r6
   130f0:	beq	13130 <tabela_elementos@@Base+0xe4>
   130f4:	ldr	r4, [r6], #4
   130f8:	cmp	r4, #0
   130fc:	beq	130ec <tabela_elementos@@Base+0xa0>
   13100:	mla	r3, r8, r5, r9
   13104:	mov	r0, r3
   13108:	mov	r2, #125	; 0x7d
   1310c:	ldr	r1, [r4]
   13110:	bl	10ed0 <memcpy@plt>
   13114:	ldr	r4, [r4, #4]
   13118:	add	r5, r5, #1
   1311c:	add	r3, r0, #125	; 0x7d
   13120:	cmp	r4, #0
   13124:	bne	13104 <tabela_elementos@@Base+0xb8>
   13128:	cmp	r7, r6
   1312c:	bne	130f4 <tabela_elementos@@Base+0xa8>
   13130:	mov	r0, r9
   13134:	ldrd	r4, [sp]
   13138:	ldrd	r6, [sp, #8]
   1313c:	ldrd	r8, [sp, #16]
   13140:	ldr	sl, [sp, #24]
   13144:	add	sp, sp, #28
   13148:	pop	{pc}		; (ldr pc, [sp], #4)
   1314c:	mov	r9, #0
   13150:	b	13130 <tabela_elementos@@Base+0xe4>
   13154:	mvn	r3, #1
   13158:	mov	r9, r4
   1315c:	str	r3, [r1]
   13160:	b	13130 <tabela_elementos@@Base+0xe4>

00013164 <hash_krm@@Base>:
   13164:	ldrb	r3, [r0]
   13168:	mov	r2, #7
   1316c:	cmp	r3, #0
   13170:	beq	13184 <hash_krm@@Base+0x20>
   13174:	add	r2, r2, r3
   13178:	ldrb	r3, [r0, #1]!
   1317c:	cmp	r3, #0
   13180:	bne	13174 <hash_krm@@Base+0x10>
   13184:	udiv	r0, r2, r1
   13188:	mls	r0, r1, r0, r2
   1318c:	bx	lr

00013190 <hash_djbm@@Base>:
   13190:	ldrb	r2, [r0]
   13194:	movw	r3, #5347	; 0x14e3
   13198:	cmp	r2, #0
   1319c:	beq	131b4 <hash_djbm@@Base+0x24>
   131a0:	rsb	r3, r3, r3, lsl #5
   131a4:	eor	r3, r3, r2
   131a8:	ldrb	r2, [r0, #1]!
   131ac:	cmp	r2, #0
   131b0:	bne	131a0 <hash_djbm@@Base+0x10>
   131b4:	udiv	r0, r3, r1
   131b8:	mls	r0, r1, r0, r3
   131bc:	bx	lr

000131c0 <mostraTabela@@Base>:
   131c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   131c4:	strd	r6, [sp, #8]
   131c8:	subs	r7, r0, #0
   131cc:	str	r8, [sp, #16]
   131d0:	str	lr, [sp, #20]
   131d4:	beq	132d4 <mostraTabela@@Base+0x114>
   131d8:	ldr	r0, [r7, #8]
   131dc:	cmp	r0, #0
   131e0:	ble	132cc <mostraTabela@@Base+0x10c>
   131e4:	ldr	r2, [r7, #4]
   131e8:	mov	r1, #0
   131ec:	add	r0, r2, r0, lsl #2
   131f0:	ldr	r3, [r2], #4
   131f4:	cmp	r3, #0
   131f8:	beq	1320c <mostraTabela@@Base+0x4c>
   131fc:	ldr	r3, [r3, #4]
   13200:	add	r1, r1, #1
   13204:	cmp	r3, #0
   13208:	bne	131fc <mostraTabela@@Base+0x3c>
   1320c:	cmp	r0, r2
   13210:	bne	131f0 <mostraTabela@@Base+0x30>
   13214:	movw	r0, #13800	; 0x35e8
   13218:	movt	r0, #1
   1321c:	bl	10ea0 <printf@plt>
   13220:	ldr	r2, [r7, #8]
   13224:	cmp	r2, #0
   13228:	ble	132b0 <mostraTabela@@Base+0xf0>
   1322c:	movw	r8, #13836	; 0x360c
   13230:	movt	r8, #1
   13234:	movw	r6, #13844	; 0x3614
   13238:	movt	r6, #1
   1323c:	mov	r5, #0
   13240:	b	13250 <mostraTabela@@Base+0x90>
   13244:	add	r5, r5, #1
   13248:	cmp	r5, r2
   1324c:	bge	132b0 <mostraTabela@@Base+0xf0>
   13250:	ldr	r3, [r7, #4]
   13254:	ldr	r3, [r3, r5, lsl #2]
   13258:	cmp	r3, #0
   1325c:	beq	13244 <mostraTabela@@Base+0x84>
   13260:	mov	r1, r5
   13264:	mov	r0, r8
   13268:	bl	10ea0 <printf@plt>
   1326c:	ldr	r3, [r7, #4]
   13270:	ldr	r4, [r3, r5, lsl #2]
   13274:	cmp	r4, #0
   13278:	beq	13298 <mostraTabela@@Base+0xd8>
   1327c:	ldr	r1, [r4]
   13280:	mov	r0, r6
   13284:	add	r2, r1, #25
   13288:	bl	10ea0 <printf@plt>
   1328c:	ldr	r4, [r4, #4]
   13290:	cmp	r4, #0
   13294:	bne	1327c <mostraTabela@@Base+0xbc>
   13298:	mov	r0, #10
   1329c:	add	r5, r5, #1
   132a0:	bl	10f30 <putchar@plt>
   132a4:	ldr	r2, [r7, #8]
   132a8:	cmp	r5, r2
   132ac:	blt	13250 <mostraTabela@@Base+0x90>
   132b0:	mov	r0, #10
   132b4:	ldrd	r4, [sp]
   132b8:	ldrd	r6, [sp, #8]
   132bc:	ldr	r8, [sp, #16]
   132c0:	ldr	lr, [sp, #20]
   132c4:	add	sp, sp, #24
   132c8:	b	10f30 <putchar@plt>
   132cc:	mov	r1, #0
   132d0:	b	13214 <mostraTabela@@Base+0x54>
   132d4:	mvn	r1, #1
   132d8:	b	13214 <mostraTabela@@Base+0x54>

000132dc <__libc_csu_init@@Base>:
   132dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132e0:	mov	r7, r0
   132e4:	ldr	r6, [pc, #72]	; 13334 <__libc_csu_init@@Base+0x58>
   132e8:	ldr	r5, [pc, #72]	; 13338 <__libc_csu_init@@Base+0x5c>
   132ec:	add	r6, pc, r6
   132f0:	add	r5, pc, r5
   132f4:	sub	r6, r6, r5
   132f8:	mov	r8, r1
   132fc:	mov	r9, r2
   13300:	bl	10e68 <calloc@plt-0x20>
   13304:	asrs	r6, r6, #2
   13308:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1330c:	mov	r4, #0
   13310:	add	r4, r4, #1
   13314:	ldr	r3, [r5], #4
   13318:	mov	r2, r9
   1331c:	mov	r1, r8
   13320:	mov	r0, r7
   13324:	blx	r3
   13328:	cmp	r6, r4
   1332c:	bne	13310 <__libc_csu_init@@Base+0x34>
   13330:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13334:	andeq	r0, r1, r0, lsr #24
   13338:	andeq	r0, r1, r8, lsl ip

0001333c <__libc_csu_fini@@Base>:
   1333c:	bx	lr

Disassembly of section .fini:

00013340 <.fini>:
   13340:	push	{r3, lr}
   13344:	pop	{r3, pc}
