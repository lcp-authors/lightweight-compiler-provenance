
../repos/charybdis/modules/.libs/m_user.so:     file format elf32-littlearm


Disassembly of section .init:

000005dc <_init>:
 5dc:	push	{r3, lr}
 5e0:	bl	698 <call_weak_fn>
 5e4:	pop	{r3, pc}

Disassembly of section .plt:

000005e8 <.plt>:
 5e8:	push	{lr}		; (str lr, [sp, #-4]!)
 5ec:	ldr	lr, [pc, #4]	; 5f8 <.plt+0x10>
 5f0:	add	lr, pc, lr
 5f4:	ldr	pc, [lr, #8]!
 5f8:	.word	0x00010a08

000005fc <__cxa_finalize@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #16, 20	; 0x10000
 604:	ldr	pc, [ip, #2568]!	; 0xa08

00000608 <free@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #16, 20	; 0x10000
 610:	ldr	pc, [ip, #2560]!	; 0xa00

00000614 <rb_outofmemory@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #16, 20	; 0x10000
 61c:	ldr	pc, [ip, #2552]!	; 0x9f8

00000620 <strcpy@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #16, 20	; 0x10000
 628:	ldr	pc, [ip, #2544]!	; 0x9f0

0000062c <malloc@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #16, 20	; 0x10000
 634:	ldr	pc, [ip, #2536]!	; 0x9e8

00000638 <__gmon_start__@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #16, 20	; 0x10000
 640:	ldr	pc, [ip, #2528]!	; 0x9e0

00000644 <strlen@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #16, 20	; 0x10000
 64c:	ldr	pc, [ip, #2520]!	; 0x9d8

00000650 <strchr@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #16, 20	; 0x10000
 658:	ldr	pc, [ip, #2512]!	; 0x9d0

0000065c <snprintf@plt>:
 65c:	add	ip, pc, #0, 12
 660:	add	ip, ip, #16, 20	; 0x10000
 664:	ldr	pc, [ip, #2504]!	; 0x9c8

00000668 <make_user@plt>:
 668:	add	ip, pc, #0, 12
 66c:	add	ip, ip, #16, 20	; 0x10000
 670:	ldr	pc, [ip, #2496]!	; 0x9c0

00000674 <rb_strlcpy@plt>:
 674:	add	ip, pc, #0, 12
 678:	add	ip, ip, #16, 20	; 0x10000
 67c:	ldr	pc, [ip, #2488]!	; 0x9b8

00000680 <register_local_user@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #16, 20	; 0x10000
 688:	ldr	pc, [ip, #2480]!	; 0x9b0

0000068c <exit_client@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #16, 20	; 0x10000
 694:	ldr	pc, [ip, #2472]!	; 0x9a8

Disassembly of section .text:

00000698 <call_weak_fn>:
 698:	ldr	r3, [pc, #20]	; 6b4 <call_weak_fn+0x1c>
 69c:	ldr	r2, [pc, #20]	; 6b8 <call_weak_fn+0x20>
 6a0:	add	r3, pc, r3
 6a4:	ldr	r2, [r3, r2]
 6a8:	cmp	r2, #0
 6ac:	bxeq	lr
 6b0:	b	638 <__gmon_start__@plt>
 6b4:	.word	0x00010958
 6b8:	.word	0x00000048

000006bc <deregister_tm_clones>:
 6bc:	ldr	r0, [pc, #44]	; 6f0 <deregister_tm_clones+0x34>
 6c0:	ldr	r3, [pc, #44]	; 6f4 <deregister_tm_clones+0x38>
 6c4:	add	r0, pc, r0
 6c8:	add	r3, pc, r3
 6cc:	cmp	r3, r0
 6d0:	ldr	r3, [pc, #32]	; 6f8 <deregister_tm_clones+0x3c>
 6d4:	add	r3, pc, r3
 6d8:	bxeq	lr
 6dc:	ldr	r2, [pc, #24]	; 6fc <deregister_tm_clones+0x40>
 6e0:	ldr	r3, [r3, r2]
 6e4:	cmp	r3, #0
 6e8:	bxeq	lr
 6ec:	bx	r3
 6f0:	.word	0x000109fc
 6f4:	.word	0x000109f8
 6f8:	.word	0x00010924
 6fc:	.word	0x00000044

00000700 <register_tm_clones>:
 700:	ldr	r0, [pc, #56]	; 740 <register_tm_clones+0x40>
 704:	ldr	r3, [pc, #56]	; 744 <register_tm_clones+0x44>
 708:	add	r0, pc, r0
 70c:	add	r3, pc, r3
 710:	sub	r1, r3, r0
 714:	ldr	r3, [pc, #44]	; 748 <register_tm_clones+0x48>
 718:	asr	r1, r1, #2
 71c:	add	r3, pc, r3
 720:	add	r1, r1, r1, lsr #31
 724:	asrs	r1, r1, #1
 728:	bxeq	lr
 72c:	ldr	r2, [pc, #24]	; 74c <register_tm_clones+0x4c>
 730:	ldr	r3, [r3, r2]
 734:	cmp	r3, #0
 738:	bxeq	lr
 73c:	bx	r3
 740:	.word	0x000109b8
 744:	.word	0x000109b4
 748:	.word	0x000108dc
 74c:	.word	0x0000004c

00000750 <__do_global_dtors_aux>:
 750:	ldr	r3, [pc, #76]	; 7a4 <__do_global_dtors_aux+0x54>
 754:	ldr	r2, [pc, #76]	; 7a8 <__do_global_dtors_aux+0x58>
 758:	add	r3, pc, r3
 75c:	add	r2, pc, r2
 760:	ldrb	r3, [r3]
 764:	cmp	r3, #0
 768:	bxne	lr
 76c:	ldr	r3, [pc, #56]	; 7ac <__do_global_dtors_aux+0x5c>
 770:	push	{r4, lr}
 774:	ldr	r3, [r2, r3]
 778:	cmp	r3, #0
 77c:	beq	78c <__do_global_dtors_aux+0x3c>
 780:	ldr	r3, [pc, #40]	; 7b0 <__do_global_dtors_aux+0x60>
 784:	ldr	r0, [pc, r3]
 788:	bl	5fc <__cxa_finalize@plt>
 78c:	bl	6bc <deregister_tm_clones>
 790:	ldr	r3, [pc, #28]	; 7b4 <__do_global_dtors_aux+0x64>
 794:	mov	r2, #1
 798:	add	r3, pc, r3
 79c:	strb	r2, [r3]
 7a0:	pop	{r4, pc}
 7a4:	.word	0x00010968
 7a8:	.word	0x0001089c
 7ac:	.word	0x00000040
 7b0:	.word	0x000108c4
 7b4:	.word	0x00010928

000007b8 <frame_dummy>:
 7b8:	b	700 <register_tm_clones>

000007bc <mr_user>:
 7bc:	push	{fp, lr}
 7c0:	mov	fp, sp
 7c4:	sub	sp, sp, #40	; 0x28
 7c8:	ldr	ip, [fp, #8]
 7cc:	str	r0, [fp, #-4]
 7d0:	str	r1, [fp, #-8]
 7d4:	str	r2, [fp, #-12]
 7d8:	str	r3, [fp, #-16]
 7dc:	ldr	r0, [fp, #-8]
 7e0:	add	r0, r0, #396	; 0x18c
 7e4:	str	ip, [sp, #16]
 7e8:	bl	644 <strlen@plt>
 7ec:	cmp	r0, #3
 7f0:	beq	834 <mr_user+0x78>
 7f4:	ldr	r0, [fp, #-12]
 7f8:	ldr	r0, [r0, #436]	; 0x1b4
 7fc:	movw	r1, #0
 800:	cmp	r0, r1
 804:	beq	854 <mr_user+0x98>
 808:	ldr	r0, [fp, #-12]
 80c:	ldr	r0, [r0, #436]	; 0x1b4
 810:	add	r0, r0, #260	; 0x104
 814:	movw	r1, #0
 818:	cmp	r0, r1
 81c:	beq	854 <mr_user+0x98>
 820:	ldr	r0, [fp, #-12]
 824:	ldr	r0, [r0, #436]	; 0x1b4
 828:	ldrb	r0, [r0, #260]	; 0x104
 82c:	cmp	r0, #0
 830:	beq	854 <mr_user+0x98>
 834:	ldr	r0, [pc, #244]	; 930 <mr_user+0x174>
 838:	add	r3, pc, r0
 83c:	ldr	r0, [fp, #-8]
 840:	ldr	r1, [fp, #-8]
 844:	ldr	r2, [fp, #-8]
 848:	bl	68c <exit_client@plt>
 84c:	str	r0, [sp, #12]
 850:	b	91c <mr_user+0x160>
 854:	ldr	r0, [fp, #-12]
 858:	ldrb	r0, [r0, #64]	; 0x40
 85c:	tst	r0, #8
 860:	beq	86c <mr_user+0xb0>
 864:	b	868 <mr_user+0xac>
 868:	b	91c <mr_user+0x160>
 86c:	ldr	r0, [fp, #8]
 870:	ldr	r0, [r0, #4]
 874:	movw	r1, #64	; 0x40
 878:	bl	650 <strchr@plt>
 87c:	str	r0, [sp, #20]
 880:	movw	r1, #0
 884:	cmp	r0, r1
 888:	beq	898 <mr_user+0xdc>
 88c:	ldr	r0, [sp, #20]
 890:	movw	r1, #0
 894:	strb	r1, [r0]
 898:	ldr	r0, [pc, #136]	; 928 <mr_user+0x16c>
 89c:	add	r0, pc, r0
 8a0:	ldr	r1, [pc, #132]	; 92c <mr_user+0x170>
 8a4:	add	r2, pc, r1
 8a8:	ldr	r1, [fp, #8]
 8ac:	ldr	r3, [r1, #8]
 8b0:	ldr	r1, [fp, #8]
 8b4:	ldr	r1, [r1, #12]
 8b8:	movw	ip, #512	; 0x200
 8bc:	str	r1, [sp, #8]
 8c0:	mov	r1, ip
 8c4:	ldr	ip, [sp, #8]
 8c8:	str	ip, [sp]
 8cc:	bl	65c <snprintf@plt>
 8d0:	ldr	r1, [fp, #-12]
 8d4:	ldr	r1, [r1, #432]	; 0x1b0
 8d8:	ldr	r1, [r1, #288]	; 0x120
 8dc:	str	r0, [sp, #4]
 8e0:	mov	r0, r1
 8e4:	bl	934 <rb_free>
 8e8:	ldr	r0, [pc, #52]	; 924 <mr_user+0x168>
 8ec:	add	r0, pc, r0
 8f0:	bl	97c <rb_strdup>
 8f4:	ldr	r1, [fp, #-12]
 8f8:	ldr	r1, [r1, #432]	; 0x1b0
 8fc:	str	r0, [r1, #288]	; 0x120
 900:	ldr	r0, [fp, #-8]
 904:	ldr	r1, [fp, #-12]
 908:	ldr	r2, [fp, #8]
 90c:	ldr	r2, [r2, #4]
 910:	ldr	r3, [fp, #8]
 914:	ldr	r3, [r3, #16]
 918:	bl	9ec <do_local_user>
 91c:	mov	sp, fp
 920:	pop	{fp, pc}
 924:	.word	0x000107d5
 928:	.word	0x00010825
 92c:	.word	0x0000022b
 930:	.word	0x00000275

00000934 <rb_free>:
 934:	push	{fp, lr}
 938:	mov	fp, sp
 93c:	sub	sp, sp, #8
 940:	str	r0, [sp, #4]
 944:	ldr	r0, [sp, #4]
 948:	movw	r1, #0
 94c:	cmp	r0, r1
 950:	movw	r0, #0
 954:	movne	r0, #1
 958:	mvn	r1, #0
 95c:	eor	r0, r0, r1
 960:	eor	r0, r0, r1
 964:	tst	r0, #1
 968:	beq	974 <rb_free+0x40>
 96c:	ldr	r0, [sp, #4]
 970:	bl	608 <free@plt>
 974:	mov	sp, fp
 978:	pop	{fp, pc}

0000097c <rb_strdup>:
 97c:	push	{fp, lr}
 980:	mov	fp, sp
 984:	sub	sp, sp, #16
 988:	str	r0, [fp, #-4]
 98c:	ldr	r0, [fp, #-4]
 990:	bl	644 <strlen@plt>
 994:	add	r0, r0, #1
 998:	bl	62c <malloc@plt>
 99c:	str	r0, [sp, #8]
 9a0:	ldr	r0, [sp, #8]
 9a4:	movw	lr, #0
 9a8:	cmp	r0, lr
 9ac:	movw	r0, #0
 9b0:	moveq	r0, #1
 9b4:	mvn	lr, #0
 9b8:	eor	r0, r0, lr
 9bc:	eor	r0, r0, lr
 9c0:	tst	r0, #1
 9c4:	beq	9cc <rb_strdup+0x50>
 9c8:	bl	614 <rb_outofmemory@plt>
 9cc:	ldr	r0, [sp, #8]
 9d0:	ldr	r1, [fp, #-4]
 9d4:	bl	620 <strcpy@plt>
 9d8:	ldr	r1, [sp, #8]
 9dc:	str	r0, [sp, #4]
 9e0:	mov	r0, r1
 9e4:	mov	sp, fp
 9e8:	pop	{fp, pc}

000009ec <do_local_user>:
 9ec:	push	{fp, lr}
 9f0:	mov	fp, sp
 9f4:	sub	sp, sp, #32
 9f8:	str	r0, [fp, #-4]
 9fc:	str	r1, [fp, #-8]
 a00:	str	r2, [fp, #-12]
 a04:	str	r3, [sp, #16]
 a08:	ldr	r0, [fp, #-8]
 a0c:	bl	668 <make_user@plt>
 a10:	ldr	r1, [fp, #-8]
 a14:	ldr	r2, [r1, #64]	; 0x40
 a18:	ldr	r3, [r1, #68]	; 0x44
 a1c:	orr	r2, r2, #8
 a20:	str	r3, [r1, #68]	; 0x44
 a24:	str	r2, [r1, #64]	; 0x40
 a28:	ldr	r1, [fp, #-8]
 a2c:	movw	r2, #345	; 0x159
 a30:	add	r1, r1, r2
 a34:	ldr	r2, [sp, #16]
 a38:	mov	r3, #51	; 0x33
 a3c:	str	r0, [sp, #12]
 a40:	mov	r0, r1
 a44:	mov	r1, r2
 a48:	mov	r2, r3
 a4c:	bl	674 <rb_strlcpy@plt>
 a50:	ldr	r1, [fp, #-8]
 a54:	ldrb	r1, [r1, #64]	; 0x40
 a58:	tst	r1, #128	; 0x80
 a5c:	str	r0, [sp, #8]
 a60:	bne	a80 <do_local_user+0x94>
 a64:	b	a68 <do_local_user+0x7c>
 a68:	ldr	r0, [fp, #-8]
 a6c:	add	r0, r0, #152	; 0x98
 a70:	ldr	r1, [fp, #-12]
 a74:	movw	r2, #11
 a78:	bl	674 <rb_strlcpy@plt>
 a7c:	str	r0, [sp, #4]
 a80:	ldr	r0, [fp, #-8]
 a84:	ldrsb	r0, [r0, #88]	; 0x58
 a88:	cmp	r0, #0
 a8c:	beq	aa0 <do_local_user+0xb4>
 a90:	ldr	r0, [fp, #-4]
 a94:	ldr	r1, [fp, #-8]
 a98:	bl	680 <register_local_user@plt>
 a9c:	str	r0, [sp]
 aa0:	mov	sp, fp
 aa4:	pop	{fp, pc}

Disassembly of section .fini:

00000aa8 <_fini>:
 aa8:	push	{r3, lr}
 aac:	pop	{r3, pc}
