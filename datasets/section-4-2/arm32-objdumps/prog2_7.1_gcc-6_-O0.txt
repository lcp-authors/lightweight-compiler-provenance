
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10d68 <_start@@Base+0x3c>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <strcmp@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <strcmp@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <strcmp@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <printf@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <fopen@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <free@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <fgets@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <realloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <strcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <puts@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <malloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <__libc_start_main@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <__gmon_start__@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <strlen@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <putchar@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fclose@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <strtok@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

Disassembly of section .text:

00010d2c <_start@@Base>:
   10d2c:	mov	fp, #0
   10d30:	mov	lr, #0
   10d34:	pop	{r1}		; (ldr r1, [sp], #4)
   10d38:	mov	r2, sp
   10d3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d40:	push	{r0}		; (str r0, [sp, #-4]!)
   10d44:	ldr	ip, [pc, #16]	; 10d5c <_start@@Base+0x30>
   10d48:	push	{ip}		; (str ip, [sp, #-4]!)
   10d4c:	ldr	r0, [pc, #12]	; 10d60 <_start@@Base+0x34>
   10d50:	ldr	r3, [pc, #12]	; 10d64 <_start@@Base+0x38>
   10d54:	bl	10cd8 <__libc_start_main@plt>
   10d58:	bl	10d20 <abort@plt>
   10d5c:	andeq	r2, r1, r0, lsl #15
   10d60:	andeq	r0, r1, r4, asr lr
   10d64:	andeq	r2, r1, r0, lsr #14
   10d68:	ldr	r3, [pc, #20]	; 10d84 <_start@@Base+0x58>
   10d6c:	ldr	r2, [pc, #20]	; 10d88 <_start@@Base+0x5c>
   10d70:	add	r3, pc, r3
   10d74:	ldr	r2, [r3, r2]
   10d78:	cmp	r2, #0
   10d7c:	bxeq	lr
   10d80:	b	10ce4 <__gmon_start__@plt>
   10d84:	andeq	r2, r1, r8, lsl #5
   10d88:	andeq	r0, r0, ip, asr #32
   10d8c:	ldr	r3, [pc, #28]	; 10db0 <_start@@Base+0x84>
   10d90:	ldr	r0, [pc, #28]	; 10db4 <_start@@Base+0x88>
   10d94:	sub	r3, r3, r0
   10d98:	cmp	r3, #6
   10d9c:	bxls	lr
   10da0:	ldr	r3, [pc, #16]	; 10db8 <_start@@Base+0x8c>
   10da4:	cmp	r3, #0
   10da8:	bxeq	lr
   10dac:	bx	r3
   10db0:	andeq	r3, r2, r3, lsl #1
   10db4:	andeq	r3, r2, r0, lsl #1
   10db8:	andeq	r0, r0, r0
   10dbc:	ldr	r1, [pc, #36]	; 10de8 <_start@@Base+0xbc>
   10dc0:	ldr	r0, [pc, #36]	; 10dec <_start@@Base+0xc0>
   10dc4:	sub	r1, r1, r0
   10dc8:	asr	r1, r1, #2
   10dcc:	add	r1, r1, r1, lsr #31
   10dd0:	asrs	r1, r1, #1
   10dd4:	bxeq	lr
   10dd8:	ldr	r3, [pc, #16]	; 10df0 <_start@@Base+0xc4>
   10ddc:	cmp	r3, #0
   10de0:	bxeq	lr
   10de4:	bx	r3
   10de8:	andeq	r3, r2, r0, lsl #1
   10dec:	andeq	r3, r2, r0, lsl #1
   10df0:	andeq	r0, r0, r0
   10df4:	push	{r4, lr}
   10df8:	ldr	r4, [pc, #24]	; 10e18 <_start@@Base+0xec>
   10dfc:	ldrb	r3, [r4]
   10e00:	cmp	r3, #0
   10e04:	popne	{r4, pc}
   10e08:	bl	10d8c <_start@@Base+0x60>
   10e0c:	mov	r3, #1
   10e10:	strb	r3, [r4]
   10e14:	pop	{r4, pc}
   10e18:	andeq	r3, r2, r0, lsl #1
   10e1c:	ldr	r0, [pc, #40]	; 10e4c <_start@@Base+0x120>
   10e20:	ldr	r3, [r0]
   10e24:	cmp	r3, #0
   10e28:	bne	10e30 <_start@@Base+0x104>
   10e2c:	b	10dbc <_start@@Base+0x90>
   10e30:	ldr	r3, [pc, #24]	; 10e50 <_start@@Base+0x124>
   10e34:	cmp	r3, #0
   10e38:	beq	10e2c <_start@@Base+0x100>
   10e3c:	push	{r4, lr}
   10e40:	blx	r3
   10e44:	pop	{r4, lr}
   10e48:	b	10dbc <_start@@Base+0x90>
   10e4c:	andeq	r2, r2, r4, lsl pc
   10e50:	andeq	r0, r0, r0

00010e54 <main@@Base>:
   10e54:	push	{fp, lr}
   10e58:	add	fp, sp, #4
   10e5c:	sub	sp, sp, #160	; 0xa0
   10e60:	ldr	r3, [pc, #640]	; 110e8 <main@@Base+0x294>
   10e64:	add	r3, pc, r3
   10e68:	mov	r0, r3
   10e6c:	bl	10cc0 <puts@plt>
   10e70:	ldr	r3, [pc, #628]	; 110ec <main@@Base+0x298>
   10e74:	add	r3, pc, r3
   10e78:	sub	ip, fp, #64	; 0x40
   10e7c:	mov	lr, r3
   10e80:	ldm	lr!, {r0, r1, r2, r3}
   10e84:	stmia	ip!, {r0, r1, r2, r3}
   10e88:	ldm	lr!, {r0, r1, r2, r3}
   10e8c:	stmia	ip!, {r0, r1, r2, r3}
   10e90:	ldm	lr, {r0, r1}
   10e94:	stm	ip, {r0, r1}
   10e98:	bl	11e4c <bst_nova@@Base>
   10e9c:	str	r0, [fp, #-12]
   10ea0:	mov	r3, #0
   10ea4:	str	r3, [fp, #-8]
   10ea8:	b	10ed8 <main@@Base+0x84>
   10eac:	ldr	r3, [fp, #-8]
   10eb0:	lsl	r3, r3, #2
   10eb4:	sub	r2, fp, #4
   10eb8:	add	r3, r2, r3
   10ebc:	ldr	r3, [r3, #-60]	; 0xffffffc4
   10ec0:	mov	r1, r3
   10ec4:	ldr	r0, [fp, #-12]
   10ec8:	bl	11f54 <bst_insere@@Base>
   10ecc:	ldr	r3, [fp, #-8]
   10ed0:	add	r3, r3, #1
   10ed4:	str	r3, [fp, #-8]
   10ed8:	ldr	r3, [fp, #-8]
   10edc:	cmp	r3, #9
   10ee0:	ble	10eac <main@@Base+0x58>
   10ee4:	ldr	r3, [fp, #-12]
   10ee8:	ldr	r3, [r3]
   10eec:	mov	r0, r3
   10ef0:	bl	125dc <bst_altura@@Base>
   10ef4:	mov	r3, r0
   10ef8:	mov	r1, r3
   10efc:	ldr	r3, [pc, #492]	; 110f0 <main@@Base+0x29c>
   10f00:	add	r3, pc, r3
   10f04:	mov	r0, r3
   10f08:	bl	10c78 <printf@plt>
   10f0c:	ldr	r0, [fp, #-12]
   10f10:	bl	120ac <bst_imprime@@Base>
   10f14:	ldr	r3, [pc, #472]	; 110f4 <main@@Base+0x2a0>
   10f18:	add	r3, pc, r3
   10f1c:	mov	r0, r3
   10f20:	bl	10cc0 <puts@plt>
   10f24:	bl	11120 <avl_nova@@Base>
   10f28:	str	r0, [fp, #-16]
   10f2c:	ldr	r3, [pc, #452]	; 110f8 <main@@Base+0x2a4>
   10f30:	add	r3, pc, r3
   10f34:	mov	r1, r3
   10f38:	ldr	r3, [pc, #444]	; 110fc <main@@Base+0x2a8>
   10f3c:	add	r3, pc, r3
   10f40:	mov	r0, r3
   10f44:	bl	10c84 <fopen@plt>
   10f48:	str	r0, [fp, #-20]	; 0xffffffec
   10f4c:	b	10fd8 <main@@Base+0x184>
   10f50:	sub	r3, fp, #164	; 0xa4
   10f54:	ldr	r2, [pc, #420]	; 11100 <main@@Base+0x2ac>
   10f58:	add	r2, pc, r2
   10f5c:	mov	r1, r2
   10f60:	mov	r0, r3
   10f64:	bl	10d14 <strtok@plt>
   10f68:	mov	r2, r0
   10f6c:	sub	r3, fp, #164	; 0xa4
   10f70:	mov	r1, r2
   10f74:	mov	r0, r3
   10f78:	bl	10cb4 <strcpy@plt>
   10f7c:	ldr	r3, [pc, #384]	; 11104 <main@@Base+0x2b0>
   10f80:	add	r3, pc, r3
   10f84:	mov	r1, r3
   10f88:	mov	r0, #0
   10f8c:	bl	10d14 <strtok@plt>
   10f90:	mov	r2, r0
   10f94:	sub	r3, fp, #164	; 0xa4
   10f98:	mov	r1, r2
   10f9c:	mov	r0, r3
   10fa0:	bl	10cb4 <strcpy@plt>
   10fa4:	sub	r3, fp, #164	; 0xa4
   10fa8:	mov	r0, r3
   10fac:	bl	10cf0 <strlen@plt>
   10fb0:	mov	r3, r0
   10fb4:	sub	r3, r3, #1
   10fb8:	sub	r2, fp, #4
   10fbc:	add	r3, r2, r3
   10fc0:	mov	r2, #0
   10fc4:	strb	r2, [r3, #-160]	; 0xffffff60
   10fc8:	sub	r3, fp, #164	; 0xa4
   10fcc:	mov	r1, r3
   10fd0:	ldr	r0, [fp, #-16]
   10fd4:	bl	11238 <avl_insere@@Base>
   10fd8:	sub	r3, fp, #164	; 0xa4
   10fdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   10fe0:	mov	r1, #100	; 0x64
   10fe4:	mov	r0, r3
   10fe8:	bl	10c9c <fgets@plt>
   10fec:	mov	r3, r0
   10ff0:	cmp	r3, #0
   10ff4:	bne	10f50 <main@@Base+0xfc>
   10ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ffc:	bl	10d08 <fclose@plt>
   11000:	ldr	r3, [pc, #256]	; 11108 <main@@Base+0x2b4>
   11004:	add	r3, pc, r3
   11008:	mov	r1, r3
   1100c:	ldr	r0, [fp, #-16]
   11010:	bl	111e0 <avl_pesquisa@@Base>
   11014:	str	r0, [fp, #-24]	; 0xffffffe8
   11018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1101c:	cmp	r3, #0
   11020:	beq	11048 <main@@Base+0x1f4>
   11024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11028:	ldr	r1, [r3]
   1102c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11030:	ldr	r3, [r3, #16]
   11034:	mov	r2, r3
   11038:	ldr	r3, [pc, #204]	; 1110c <main@@Base+0x2b8>
   1103c:	add	r3, pc, r3
   11040:	mov	r0, r3
   11044:	bl	10c78 <printf@plt>
   11048:	ldr	r3, [pc, #192]	; 11110 <main@@Base+0x2bc>
   1104c:	add	r3, pc, r3
   11050:	mov	r1, r3
   11054:	ldr	r0, [fp, #-16]
   11058:	bl	111e0 <avl_pesquisa@@Base>
   1105c:	str	r0, [fp, #-24]	; 0xffffffe8
   11060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11064:	cmp	r3, #0
   11068:	beq	11090 <main@@Base+0x23c>
   1106c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11070:	ldr	r1, [r3]
   11074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11078:	ldr	r3, [r3, #16]
   1107c:	mov	r2, r3
   11080:	ldr	r3, [pc, #140]	; 11114 <main@@Base+0x2c0>
   11084:	add	r3, pc, r3
   11088:	mov	r0, r3
   1108c:	bl	10c78 <printf@plt>
   11090:	ldr	r3, [pc, #128]	; 11118 <main@@Base+0x2c4>
   11094:	add	r3, pc, r3
   11098:	mov	r1, r3
   1109c:	ldr	r0, [fp, #-16]
   110a0:	bl	111e0 <avl_pesquisa@@Base>
   110a4:	str	r0, [fp, #-24]	; 0xffffffe8
   110a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110ac:	cmp	r3, #0
   110b0:	beq	110d8 <main@@Base+0x284>
   110b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110b8:	ldr	r1, [r3]
   110bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110c0:	ldr	r3, [r3, #16]
   110c4:	mov	r2, r3
   110c8:	ldr	r3, [pc, #76]	; 1111c <main@@Base+0x2c8>
   110cc:	add	r3, pc, r3
   110d0:	mov	r0, r3
   110d4:	bl	10c78 <printf@plt>
   110d8:	mov	r3, #0
   110dc:	mov	r0, r3
   110e0:	sub	sp, fp, #4
   110e4:	pop	{fp, pc}
   110e8:	andeq	r1, r0, r4, lsr #18
   110ec:	ldrdeq	r2, [r1], -ip
   110f0:	andeq	r1, r0, ip, lsl #17
   110f4:	andeq	r1, r0, r8, lsl #17
   110f8:	andeq	r1, r0, r4, ror r8
   110fc:	andeq	r1, r0, ip, ror #16
   11100:	andeq	r1, r0, ip, asr r8
   11104:	andeq	r1, r0, r4, lsr r8
   11108:			; <UNDEFINED> instruction: 0x000017b4
   1110c:	andeq	r1, r0, r8, lsl #15
   11110:	andeq	r1, r0, r4, lsl #15
   11114:	andeq	r1, r0, r0, asr #14
   11118:	andeq	r1, r0, r4, asr #14
   1111c:	strdeq	r1, [r0], -r8

00011120 <avl_nova@@Base>:
   11120:	push	{fp, lr}
   11124:	add	fp, sp, #4
   11128:	sub	sp, sp, #8
   1112c:	mov	r0, #4
   11130:	bl	10ccc <malloc@plt>
   11134:	mov	r3, r0
   11138:	str	r3, [fp, #-8]
   1113c:	ldr	r3, [fp, #-8]
   11140:	cmp	r3, #0
   11144:	bne	11150 <avl_nova@@Base+0x30>
   11148:	mov	r3, #0
   1114c:	b	11160 <avl_nova@@Base+0x40>
   11150:	ldr	r3, [fp, #-8]
   11154:	mov	r2, #0
   11158:	str	r2, [r3]
   1115c:	ldr	r3, [fp, #-8]
   11160:	mov	r0, r3
   11164:	sub	sp, fp, #4
   11168:	pop	{fp, pc}

0001116c <avl_apaga@@Base>:
   1116c:	push	{fp, lr}
   11170:	add	fp, sp, #4
   11174:	sub	sp, sp, #8
   11178:	str	r0, [fp, #-8]
   1117c:	ldr	r3, [fp, #-8]
   11180:	cmp	r3, #0
   11184:	beq	111d4 <avl_apaga@@Base+0x68>
   11188:	b	111b8 <avl_apaga@@Base+0x4c>
   1118c:	ldr	r3, [fp, #-8]
   11190:	ldr	r2, [r3]
   11194:	ldr	r3, [fp, #-8]
   11198:	ldr	r3, [r3]
   1119c:	ldr	r3, [r3]
   111a0:	mov	r1, r3
   111a4:	mov	r0, r2
   111a8:	bl	11a54 <avl_remove_impl@@Base>
   111ac:	mov	r2, r0
   111b0:	ldr	r3, [fp, #-8]
   111b4:	str	r2, [r3]
   111b8:	ldr	r3, [fp, #-8]
   111bc:	ldr	r3, [r3]
   111c0:	cmp	r3, #0
   111c4:	bne	1118c <avl_apaga@@Base+0x20>
   111c8:	ldr	r0, [fp, #-8]
   111cc:	bl	10c90 <free@plt>
   111d0:	b	111d8 <avl_apaga@@Base+0x6c>
   111d4:	nop			; (mov r0, r0)
   111d8:	sub	sp, fp, #4
   111dc:	pop	{fp, pc}

000111e0 <avl_pesquisa@@Base>:
   111e0:	push	{fp, lr}
   111e4:	add	fp, sp, #4
   111e8:	sub	sp, sp, #8
   111ec:	str	r0, [fp, #-8]
   111f0:	str	r1, [fp, #-12]
   111f4:	ldr	r3, [fp, #-8]
   111f8:	cmp	r3, #0
   111fc:	beq	1120c <avl_pesquisa@@Base+0x2c>
   11200:	ldr	r3, [fp, #-12]
   11204:	cmp	r3, #0
   11208:	bne	11214 <avl_pesquisa@@Base+0x34>
   1120c:	mov	r3, #0
   11210:	b	1122c <avl_pesquisa@@Base+0x4c>
   11214:	ldr	r3, [fp, #-8]
   11218:	ldr	r3, [r3]
   1121c:	ldr	r1, [fp, #-12]
   11220:	mov	r0, r3
   11224:	bl	116f0 <avl_pesquisa_impl@@Base>
   11228:	mov	r3, r0
   1122c:	mov	r0, r3
   11230:	sub	sp, fp, #4
   11234:	pop	{fp, pc}

00011238 <avl_insere@@Base>:
   11238:	push	{fp, lr}
   1123c:	add	fp, sp, #4
   11240:	sub	sp, sp, #8
   11244:	str	r0, [fp, #-8]
   11248:	str	r1, [fp, #-12]
   1124c:	ldr	r3, [fp, #-8]
   11250:	cmp	r3, #0
   11254:	beq	11264 <avl_insere@@Base+0x2c>
   11258:	ldr	r3, [fp, #-12]
   1125c:	cmp	r3, #0
   11260:	bne	1126c <avl_insere@@Base+0x34>
   11264:	mvn	r3, #0
   11268:	b	11290 <avl_insere@@Base+0x58>
   1126c:	ldr	r3, [fp, #-8]
   11270:	ldr	r3, [r3]
   11274:	ldr	r1, [fp, #-12]
   11278:	mov	r0, r3
   1127c:	bl	117a0 <avl_insere_impl@@Base>
   11280:	mov	r2, r0
   11284:	ldr	r3, [fp, #-8]
   11288:	str	r2, [r3]
   1128c:	mov	r3, #0
   11290:	mov	r0, r3
   11294:	sub	sp, fp, #4
   11298:	pop	{fp, pc}

0001129c <avl_remove@@Base>:
   1129c:	push	{fp, lr}
   112a0:	add	fp, sp, #4
   112a4:	sub	sp, sp, #8
   112a8:	str	r0, [fp, #-8]
   112ac:	str	r1, [fp, #-12]
   112b0:	ldr	r3, [fp, #-8]
   112b4:	cmp	r3, #0
   112b8:	beq	112c8 <avl_remove@@Base+0x2c>
   112bc:	ldr	r3, [fp, #-12]
   112c0:	cmp	r3, #0
   112c4:	bne	112d0 <avl_remove@@Base+0x34>
   112c8:	mvn	r3, #0
   112cc:	b	112f4 <avl_remove@@Base+0x58>
   112d0:	ldr	r3, [fp, #-8]
   112d4:	ldr	r3, [r3]
   112d8:	ldr	r1, [fp, #-12]
   112dc:	mov	r0, r3
   112e0:	bl	11a54 <avl_remove_impl@@Base>
   112e4:	mov	r2, r0
   112e8:	ldr	r3, [fp, #-8]
   112ec:	str	r2, [r3]
   112f0:	mov	r3, #0
   112f4:	mov	r0, r3
   112f8:	sub	sp, fp, #4
   112fc:	pop	{fp, pc}

00011300 <avl_min@@Base>:
   11300:	push	{fp, lr}
   11304:	add	fp, sp, #4
   11308:	sub	sp, sp, #8
   1130c:	str	r0, [fp, #-8]
   11310:	ldr	r3, [fp, #-8]
   11314:	cmp	r3, #0
   11318:	bne	11324 <avl_min@@Base+0x24>
   1131c:	mov	r3, #0
   11320:	b	1133c <avl_min@@Base+0x3c>
   11324:	ldr	r3, [fp, #-8]
   11328:	ldr	r3, [r3]
   1132c:	mov	r0, r3
   11330:	bl	119bc <avl_no_valormin@@Base>
   11334:	mov	r3, r0
   11338:	ldr	r3, [r3]
   1133c:	mov	r0, r3
   11340:	sub	sp, fp, #4
   11344:	pop	{fp, pc}

00011348 <avl_max@@Base>:
   11348:	push	{fp, lr}
   1134c:	add	fp, sp, #4
   11350:	sub	sp, sp, #8
   11354:	str	r0, [fp, #-8]
   11358:	ldr	r3, [fp, #-8]
   1135c:	cmp	r3, #0
   11360:	bne	1136c <avl_max@@Base+0x24>
   11364:	mov	r3, #0
   11368:	b	11384 <avl_max@@Base+0x3c>
   1136c:	ldr	r3, [fp, #-8]
   11370:	ldr	r3, [r3]
   11374:	mov	r0, r3
   11378:	bl	11a08 <avl_no_valormax@@Base>
   1137c:	mov	r3, r0
   11380:	ldr	r3, [r3]
   11384:	mov	r0, r3
   11388:	sub	sp, fp, #4
   1138c:	pop	{fp, pc}

00011390 <avl_imprime@@Base>:
   11390:	push	{fp, lr}
   11394:	add	fp, sp, #4
   11398:	sub	sp, sp, #8
   1139c:	str	r0, [fp, #-8]
   113a0:	ldr	r3, [fp, #-8]
   113a4:	cmp	r3, #0
   113a8:	beq	113c8 <avl_imprime@@Base+0x38>
   113ac:	ldr	r3, [fp, #-8]
   113b0:	ldr	r3, [r3]
   113b4:	mov	r0, r3
   113b8:	bl	11dd8 <avl_preordem_impl@@Base>
   113bc:	mov	r0, #10
   113c0:	bl	10cfc <putchar@plt>
   113c4:	b	113cc <avl_imprime@@Base+0x3c>
   113c8:	nop			; (mov r0, r0)
   113cc:	sub	sp, fp, #4
   113d0:	pop	{fp, pc}

000113d4 <avl_altura@@Base>:
   113d4:	push	{fp}		; (str fp, [sp, #-4]!)
   113d8:	add	fp, sp, #0
   113dc:	sub	sp, sp, #12
   113e0:	str	r0, [fp, #-8]
   113e4:	ldr	r3, [fp, #-8]
   113e8:	cmp	r3, #0
   113ec:	bne	113f8 <avl_altura@@Base+0x24>
   113f0:	mvn	r3, #0
   113f4:	b	11400 <avl_altura@@Base+0x2c>
   113f8:	ldr	r3, [fp, #-8]
   113fc:	ldr	r3, [r3, #12]
   11400:	mov	r0, r3
   11404:	add	sp, fp, #0
   11408:	pop	{fp}		; (ldr fp, [sp], #4)
   1140c:	bx	lr

00011410 <max@@Base>:
   11410:	push	{fp}		; (str fp, [sp, #-4]!)
   11414:	add	fp, sp, #0
   11418:	sub	sp, sp, #12
   1141c:	str	r0, [fp, #-8]
   11420:	str	r1, [fp, #-12]
   11424:	ldr	r2, [fp, #-12]
   11428:	ldr	r3, [fp, #-8]
   1142c:	cmp	r2, r3
   11430:	movge	r3, r2
   11434:	movlt	r3, r3
   11438:	mov	r0, r3
   1143c:	add	sp, fp, #0
   11440:	pop	{fp}		; (ldr fp, [sp], #4)
   11444:	bx	lr

00011448 <avl_novo_no@@Base>:
   11448:	push	{fp, lr}
   1144c:	add	fp, sp, #4
   11450:	sub	sp, sp, #16
   11454:	str	r0, [fp, #-16]
   11458:	mov	r0, #20
   1145c:	bl	10ccc <malloc@plt>
   11460:	mov	r3, r0
   11464:	str	r3, [fp, #-8]
   11468:	ldr	r0, [fp, #-16]
   1146c:	bl	10cf0 <strlen@plt>
   11470:	mov	r3, r0
   11474:	add	r3, r3, #1
   11478:	mov	r0, r3
   1147c:	bl	10ccc <malloc@plt>
   11480:	mov	r3, r0
   11484:	mov	r2, r3
   11488:	ldr	r3, [fp, #-8]
   1148c:	str	r2, [r3]
   11490:	ldr	r3, [fp, #-8]
   11494:	ldr	r3, [r3]
   11498:	ldr	r1, [fp, #-16]
   1149c:	mov	r0, r3
   114a0:	bl	10cb4 <strcpy@plt>
   114a4:	ldr	r3, [fp, #-8]
   114a8:	mov	r2, #0
   114ac:	str	r2, [r3, #4]
   114b0:	ldr	r3, [fp, #-8]
   114b4:	mov	r2, #0
   114b8:	str	r2, [r3, #8]
   114bc:	ldr	r3, [fp, #-8]
   114c0:	mov	r2, #0
   114c4:	str	r2, [r3, #12]
   114c8:	ldr	r3, [fp, #-8]
   114cc:	mov	r2, #1
   114d0:	str	r2, [r3, #16]
   114d4:	ldr	r3, [fp, #-8]
   114d8:	mov	r0, r3
   114dc:	sub	sp, fp, #4
   114e0:	pop	{fp, pc}

000114e4 <roda_direita@@Base>:
   114e4:	push	{r4, fp, lr}
   114e8:	add	fp, sp, #8
   114ec:	sub	sp, sp, #20
   114f0:	str	r0, [fp, #-24]	; 0xffffffe8
   114f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114f8:	ldr	r3, [r3, #4]
   114fc:	str	r3, [fp, #-16]
   11500:	ldr	r3, [fp, #-16]
   11504:	ldr	r3, [r3, #8]
   11508:	str	r3, [fp, #-20]	; 0xffffffec
   1150c:	ldr	r3, [fp, #-16]
   11510:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11514:	str	r2, [r3, #8]
   11518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1151c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11520:	str	r2, [r3, #4]
   11524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11528:	ldr	r3, [r3, #4]
   1152c:	mov	r0, r3
   11530:	bl	113d4 <avl_altura@@Base>
   11534:	mov	r4, r0
   11538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1153c:	ldr	r3, [r3, #8]
   11540:	mov	r0, r3
   11544:	bl	113d4 <avl_altura@@Base>
   11548:	mov	r3, r0
   1154c:	mov	r1, r3
   11550:	mov	r0, r4
   11554:	bl	11410 <max@@Base>
   11558:	mov	r3, r0
   1155c:	add	r2, r3, #1
   11560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11564:	str	r2, [r3, #12]
   11568:	ldr	r3, [fp, #-16]
   1156c:	ldr	r3, [r3, #4]
   11570:	mov	r0, r3
   11574:	bl	113d4 <avl_altura@@Base>
   11578:	mov	r4, r0
   1157c:	ldr	r3, [fp, #-16]
   11580:	ldr	r3, [r3, #8]
   11584:	mov	r0, r3
   11588:	bl	113d4 <avl_altura@@Base>
   1158c:	mov	r3, r0
   11590:	mov	r1, r3
   11594:	mov	r0, r4
   11598:	bl	11410 <max@@Base>
   1159c:	mov	r3, r0
   115a0:	add	r2, r3, #1
   115a4:	ldr	r3, [fp, #-16]
   115a8:	str	r2, [r3, #12]
   115ac:	ldr	r3, [fp, #-16]
   115b0:	mov	r0, r3
   115b4:	sub	sp, fp, #8
   115b8:	pop	{r4, fp, pc}

000115bc <roda_esquerda@@Base>:
   115bc:	push	{r4, fp, lr}
   115c0:	add	fp, sp, #8
   115c4:	sub	sp, sp, #20
   115c8:	str	r0, [fp, #-24]	; 0xffffffe8
   115cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115d0:	ldr	r3, [r3, #8]
   115d4:	str	r3, [fp, #-16]
   115d8:	ldr	r3, [fp, #-16]
   115dc:	ldr	r3, [r3, #4]
   115e0:	str	r3, [fp, #-20]	; 0xffffffec
   115e4:	ldr	r3, [fp, #-16]
   115e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   115ec:	str	r2, [r3, #4]
   115f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   115f8:	str	r2, [r3, #8]
   115fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11600:	ldr	r3, [r3, #4]
   11604:	mov	r0, r3
   11608:	bl	113d4 <avl_altura@@Base>
   1160c:	mov	r4, r0
   11610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11614:	ldr	r3, [r3, #8]
   11618:	mov	r0, r3
   1161c:	bl	113d4 <avl_altura@@Base>
   11620:	mov	r3, r0
   11624:	mov	r1, r3
   11628:	mov	r0, r4
   1162c:	bl	11410 <max@@Base>
   11630:	mov	r3, r0
   11634:	add	r2, r3, #1
   11638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1163c:	str	r2, [r3, #12]
   11640:	ldr	r3, [fp, #-16]
   11644:	ldr	r3, [r3, #4]
   11648:	mov	r0, r3
   1164c:	bl	113d4 <avl_altura@@Base>
   11650:	mov	r4, r0
   11654:	ldr	r3, [fp, #-16]
   11658:	ldr	r3, [r3, #8]
   1165c:	mov	r0, r3
   11660:	bl	113d4 <avl_altura@@Base>
   11664:	mov	r3, r0
   11668:	mov	r1, r3
   1166c:	mov	r0, r4
   11670:	bl	11410 <max@@Base>
   11674:	mov	r3, r0
   11678:	add	r2, r3, #1
   1167c:	ldr	r3, [fp, #-16]
   11680:	str	r2, [r3, #12]
   11684:	ldr	r3, [fp, #-16]
   11688:	mov	r0, r3
   1168c:	sub	sp, fp, #8
   11690:	pop	{r4, fp, pc}

00011694 <calc_balanceamento@@Base>:
   11694:	push	{r4, fp, lr}
   11698:	add	fp, sp, #8
   1169c:	sub	sp, sp, #12
   116a0:	str	r0, [fp, #-16]
   116a4:	ldr	r3, [fp, #-16]
   116a8:	cmp	r3, #0
   116ac:	bne	116b8 <calc_balanceamento@@Base+0x24>
   116b0:	mov	r3, #0
   116b4:	b	116e4 <calc_balanceamento@@Base+0x50>
   116b8:	ldr	r3, [fp, #-16]
   116bc:	ldr	r3, [r3, #8]
   116c0:	mov	r0, r3
   116c4:	bl	113d4 <avl_altura@@Base>
   116c8:	mov	r4, r0
   116cc:	ldr	r3, [fp, #-16]
   116d0:	ldr	r3, [r3, #4]
   116d4:	mov	r0, r3
   116d8:	bl	113d4 <avl_altura@@Base>
   116dc:	mov	r3, r0
   116e0:	sub	r3, r4, r3
   116e4:	mov	r0, r3
   116e8:	sub	sp, fp, #8
   116ec:	pop	{r4, fp, pc}

000116f0 <avl_pesquisa_impl@@Base>:
   116f0:	push	{fp, lr}
   116f4:	add	fp, sp, #4
   116f8:	sub	sp, sp, #8
   116fc:	str	r0, [fp, #-8]
   11700:	str	r1, [fp, #-12]
   11704:	ldr	r3, [fp, #-8]
   11708:	cmp	r3, #0
   1170c:	bne	11718 <avl_pesquisa_impl@@Base+0x28>
   11710:	mov	r3, #0
   11714:	b	11794 <avl_pesquisa_impl@@Base+0xa4>
   11718:	ldr	r3, [fp, #-8]
   1171c:	ldr	r3, [r3]
   11720:	mov	r1, r3
   11724:	ldr	r0, [fp, #-12]
   11728:	bl	10c6c <strcmp@plt>
   1172c:	mov	r3, r0
   11730:	cmp	r3, #0
   11734:	bge	11754 <avl_pesquisa_impl@@Base+0x64>
   11738:	ldr	r3, [fp, #-8]
   1173c:	ldr	r3, [r3, #4]
   11740:	ldr	r1, [fp, #-12]
   11744:	mov	r0, r3
   11748:	bl	116f0 <avl_pesquisa_impl@@Base>
   1174c:	mov	r3, r0
   11750:	b	11794 <avl_pesquisa_impl@@Base+0xa4>
   11754:	ldr	r3, [fp, #-8]
   11758:	ldr	r3, [r3]
   1175c:	mov	r1, r3
   11760:	ldr	r0, [fp, #-12]
   11764:	bl	10c6c <strcmp@plt>
   11768:	mov	r3, r0
   1176c:	cmp	r3, #0
   11770:	ble	11790 <avl_pesquisa_impl@@Base+0xa0>
   11774:	ldr	r3, [fp, #-8]
   11778:	ldr	r3, [r3, #8]
   1177c:	ldr	r1, [fp, #-12]
   11780:	mov	r0, r3
   11784:	bl	116f0 <avl_pesquisa_impl@@Base>
   11788:	mov	r3, r0
   1178c:	b	11794 <avl_pesquisa_impl@@Base+0xa4>
   11790:	ldr	r3, [fp, #-8]
   11794:	mov	r0, r3
   11798:	sub	sp, fp, #4
   1179c:	pop	{fp, pc}

000117a0 <avl_insere_impl@@Base>:
   117a0:	push	{r4, fp, lr}
   117a4:	add	fp, sp, #8
   117a8:	sub	sp, sp, #20
   117ac:	str	r0, [fp, #-24]	; 0xffffffe8
   117b0:	str	r1, [fp, #-28]	; 0xffffffe4
   117b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117b8:	cmp	r3, #0
   117bc:	bne	117d0 <avl_insere_impl@@Base+0x30>
   117c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117c4:	bl	11448 <avl_novo_no@@Base>
   117c8:	mov	r3, r0
   117cc:	b	119b0 <avl_insere_impl@@Base+0x210>
   117d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117d4:	ldr	r3, [r3]
   117d8:	mov	r1, r3
   117dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117e0:	bl	10c6c <strcmp@plt>
   117e4:	mov	r3, r0
   117e8:	cmp	r3, #0
   117ec:	bge	11814 <avl_insere_impl@@Base+0x74>
   117f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117f4:	ldr	r3, [r3, #4]
   117f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   117fc:	mov	r0, r3
   11800:	bl	117a0 <avl_insere_impl@@Base>
   11804:	mov	r2, r0
   11808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1180c:	str	r2, [r3, #4]
   11810:	b	11894 <avl_insere_impl@@Base+0xf4>
   11814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11818:	ldr	r3, [r3]
   1181c:	mov	r1, r3
   11820:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11824:	bl	10c6c <strcmp@plt>
   11828:	mov	r3, r0
   1182c:	cmp	r3, #0
   11830:	ble	11858 <avl_insere_impl@@Base+0xb8>
   11834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11838:	ldr	r3, [r3, #8]
   1183c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11840:	mov	r0, r3
   11844:	bl	117a0 <avl_insere_impl@@Base>
   11848:	mov	r2, r0
   1184c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11850:	str	r2, [r3, #8]
   11854:	b	11894 <avl_insere_impl@@Base+0xf4>
   11858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1185c:	ldr	r3, [r3]
   11860:	mov	r1, r3
   11864:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11868:	bl	10c6c <strcmp@plt>
   1186c:	mov	r3, r0
   11870:	cmp	r3, #0
   11874:	bne	11894 <avl_insere_impl@@Base+0xf4>
   11878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1187c:	ldr	r3, [r3, #16]
   11880:	add	r2, r3, #1
   11884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11888:	str	r2, [r3, #16]
   1188c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11890:	b	119b0 <avl_insere_impl@@Base+0x210>
   11894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11898:	ldr	r3, [r3, #4]
   1189c:	mov	r0, r3
   118a0:	bl	113d4 <avl_altura@@Base>
   118a4:	mov	r4, r0
   118a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118ac:	ldr	r3, [r3, #8]
   118b0:	mov	r0, r3
   118b4:	bl	113d4 <avl_altura@@Base>
   118b8:	mov	r3, r0
   118bc:	mov	r1, r3
   118c0:	mov	r0, r4
   118c4:	bl	11410 <max@@Base>
   118c8:	mov	r3, r0
   118cc:	add	r2, r3, #1
   118d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118d4:	str	r2, [r3, #12]
   118d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118dc:	bl	11694 <calc_balanceamento@@Base>
   118e0:	str	r0, [fp, #-16]
   118e4:	ldr	r3, [fp, #-16]
   118e8:	cmp	r3, #1
   118ec:	ble	11948 <avl_insere_impl@@Base+0x1a8>
   118f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118f4:	ldr	r3, [r3, #8]
   118f8:	mov	r0, r3
   118fc:	bl	11694 <calc_balanceamento@@Base>
   11900:	mov	r3, r0
   11904:	cmp	r3, #0
   11908:	bge	11938 <avl_insere_impl@@Base+0x198>
   1190c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11910:	ldr	r3, [r3, #8]
   11914:	mov	r0, r3
   11918:	bl	114e4 <roda_direita@@Base>
   1191c:	mov	r2, r0
   11920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11924:	str	r2, [r3, #8]
   11928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1192c:	bl	115bc <roda_esquerda@@Base>
   11930:	mov	r3, r0
   11934:	b	119b0 <avl_insere_impl@@Base+0x210>
   11938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1193c:	bl	115bc <roda_esquerda@@Base>
   11940:	mov	r3, r0
   11944:	b	119b0 <avl_insere_impl@@Base+0x210>
   11948:	ldr	r3, [fp, #-16]
   1194c:	cmn	r3, #1
   11950:	bge	119ac <avl_insere_impl@@Base+0x20c>
   11954:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11958:	ldr	r3, [r3, #4]
   1195c:	mov	r0, r3
   11960:	bl	11694 <calc_balanceamento@@Base>
   11964:	mov	r3, r0
   11968:	cmp	r3, #0
   1196c:	ble	1199c <avl_insere_impl@@Base+0x1fc>
   11970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11974:	ldr	r3, [r3, #4]
   11978:	mov	r0, r3
   1197c:	bl	115bc <roda_esquerda@@Base>
   11980:	mov	r2, r0
   11984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11988:	str	r2, [r3, #4]
   1198c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11990:	bl	114e4 <roda_direita@@Base>
   11994:	mov	r3, r0
   11998:	b	119b0 <avl_insere_impl@@Base+0x210>
   1199c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119a0:	bl	114e4 <roda_direita@@Base>
   119a4:	mov	r3, r0
   119a8:	b	119b0 <avl_insere_impl@@Base+0x210>
   119ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119b0:	mov	r0, r3
   119b4:	sub	sp, fp, #8
   119b8:	pop	{r4, fp, pc}

000119bc <avl_no_valormin@@Base>:
   119bc:	push	{fp}		; (str fp, [sp, #-4]!)
   119c0:	add	fp, sp, #0
   119c4:	sub	sp, sp, #20
   119c8:	str	r0, [fp, #-16]
   119cc:	ldr	r3, [fp, #-16]
   119d0:	str	r3, [fp, #-8]
   119d4:	b	119e4 <avl_no_valormin@@Base+0x28>
   119d8:	ldr	r3, [fp, #-8]
   119dc:	ldr	r3, [r3, #4]
   119e0:	str	r3, [fp, #-8]
   119e4:	ldr	r3, [fp, #-8]
   119e8:	ldr	r3, [r3, #4]
   119ec:	cmp	r3, #0
   119f0:	bne	119d8 <avl_no_valormin@@Base+0x1c>
   119f4:	ldr	r3, [fp, #-8]
   119f8:	mov	r0, r3
   119fc:	add	sp, fp, #0
   11a00:	pop	{fp}		; (ldr fp, [sp], #4)
   11a04:	bx	lr

00011a08 <avl_no_valormax@@Base>:
   11a08:	push	{fp}		; (str fp, [sp, #-4]!)
   11a0c:	add	fp, sp, #0
   11a10:	sub	sp, sp, #20
   11a14:	str	r0, [fp, #-16]
   11a18:	ldr	r3, [fp, #-16]
   11a1c:	str	r3, [fp, #-8]
   11a20:	b	11a30 <avl_no_valormax@@Base+0x28>
   11a24:	ldr	r3, [fp, #-8]
   11a28:	ldr	r3, [r3, #8]
   11a2c:	str	r3, [fp, #-8]
   11a30:	ldr	r3, [fp, #-8]
   11a34:	ldr	r3, [r3, #8]
   11a38:	cmp	r3, #0
   11a3c:	bne	11a24 <avl_no_valormax@@Base+0x1c>
   11a40:	ldr	r3, [fp, #-8]
   11a44:	mov	r0, r3
   11a48:	add	sp, fp, #0
   11a4c:	pop	{fp}		; (ldr fp, [sp], #4)
   11a50:	bx	lr

00011a54 <avl_remove_impl@@Base>:
   11a54:	push	{r4, fp, lr}
   11a58:	add	fp, sp, #8
   11a5c:	sub	sp, sp, #28
   11a60:	str	r0, [fp, #-32]	; 0xffffffe0
   11a64:	str	r1, [fp, #-36]	; 0xffffffdc
   11a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a6c:	cmp	r3, #0
   11a70:	bne	11a7c <avl_remove_impl@@Base+0x28>
   11a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a78:	b	11dcc <avl_remove_impl@@Base+0x378>
   11a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a80:	ldr	r3, [r3]
   11a84:	mov	r1, r3
   11a88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a8c:	bl	10c6c <strcmp@plt>
   11a90:	mov	r3, r0
   11a94:	cmp	r3, #0
   11a98:	bge	11ac0 <avl_remove_impl@@Base+0x6c>
   11a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11aa0:	ldr	r3, [r3, #4]
   11aa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11aa8:	mov	r0, r3
   11aac:	bl	11a54 <avl_remove_impl@@Base>
   11ab0:	mov	r2, r0
   11ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ab8:	str	r2, [r3, #4]
   11abc:	b	11c9c <avl_remove_impl@@Base+0x248>
   11ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ac4:	ldr	r3, [r3]
   11ac8:	mov	r1, r3
   11acc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ad0:	bl	10c6c <strcmp@plt>
   11ad4:	mov	r3, r0
   11ad8:	cmp	r3, #0
   11adc:	ble	11b04 <avl_remove_impl@@Base+0xb0>
   11ae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ae4:	ldr	r3, [r3, #8]
   11ae8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11aec:	mov	r0, r3
   11af0:	bl	11a54 <avl_remove_impl@@Base>
   11af4:	mov	r2, r0
   11af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11afc:	str	r2, [r3, #8]
   11b00:	b	11c9c <avl_remove_impl@@Base+0x248>
   11b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b08:	ldr	r3, [r3, #4]
   11b0c:	cmp	r3, #0
   11b10:	beq	11b24 <avl_remove_impl@@Base+0xd0>
   11b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b18:	ldr	r3, [r3, #8]
   11b1c:	cmp	r3, #0
   11b20:	bne	11c0c <avl_remove_impl@@Base+0x1b8>
   11b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b28:	ldr	r3, [r3, #4]
   11b2c:	cmp	r3, #0
   11b30:	beq	11b40 <avl_remove_impl@@Base+0xec>
   11b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b38:	ldr	r3, [r3, #4]
   11b3c:	b	11b48 <avl_remove_impl@@Base+0xf4>
   11b40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b44:	ldr	r3, [r3, #8]
   11b48:	str	r3, [fp, #-16]
   11b4c:	ldr	r3, [fp, #-16]
   11b50:	cmp	r3, #0
   11b54:	bne	11b6c <avl_remove_impl@@Base+0x118>
   11b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b5c:	str	r3, [fp, #-16]
   11b60:	mov	r3, #0
   11b64:	str	r3, [fp, #-32]	; 0xffffffe0
   11b68:	b	11bf0 <avl_remove_impl@@Base+0x19c>
   11b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b70:	ldr	r4, [r3]
   11b74:	ldr	r3, [fp, #-16]
   11b78:	ldr	r3, [r3]
   11b7c:	mov	r0, r3
   11b80:	bl	10cf0 <strlen@plt>
   11b84:	mov	r3, r0
   11b88:	add	r3, r3, #1
   11b8c:	mov	r1, r3
   11b90:	mov	r0, r4
   11b94:	bl	10ca8 <realloc@plt>
   11b98:	mov	r2, r0
   11b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ba0:	str	r2, [r3]
   11ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ba8:	ldr	r2, [r3]
   11bac:	ldr	r3, [fp, #-16]
   11bb0:	ldr	r3, [r3]
   11bb4:	mov	r1, r3
   11bb8:	mov	r0, r2
   11bbc:	bl	10cb4 <strcpy@plt>
   11bc0:	ldr	r3, [fp, #-16]
   11bc4:	ldr	r2, [r3, #4]
   11bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bcc:	str	r2, [r3, #4]
   11bd0:	ldr	r3, [fp, #-16]
   11bd4:	ldr	r2, [r3, #8]
   11bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bdc:	str	r2, [r3, #8]
   11be0:	ldr	r3, [fp, #-16]
   11be4:	ldr	r2, [r3, #12]
   11be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bec:	str	r2, [r3, #12]
   11bf0:	ldr	r3, [fp, #-16]
   11bf4:	ldr	r3, [r3]
   11bf8:	mov	r0, r3
   11bfc:	bl	10c90 <free@plt>
   11c00:	ldr	r0, [fp, #-16]
   11c04:	bl	10c90 <free@plt>
   11c08:	b	11c9c <avl_remove_impl@@Base+0x248>
   11c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c10:	ldr	r3, [r3, #8]
   11c14:	mov	r0, r3
   11c18:	bl	119bc <avl_no_valormin@@Base>
   11c1c:	str	r0, [fp, #-20]	; 0xffffffec
   11c20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c24:	ldr	r4, [r3]
   11c28:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c2c:	ldr	r3, [r3]
   11c30:	mov	r0, r3
   11c34:	bl	10cf0 <strlen@plt>
   11c38:	mov	r3, r0
   11c3c:	add	r3, r3, #1
   11c40:	mov	r1, r3
   11c44:	mov	r0, r4
   11c48:	bl	10ca8 <realloc@plt>
   11c4c:	mov	r2, r0
   11c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c54:	str	r2, [r3]
   11c58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c5c:	ldr	r2, [r3]
   11c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c64:	ldr	r3, [r3]
   11c68:	mov	r1, r3
   11c6c:	mov	r0, r2
   11c70:	bl	10cb4 <strcpy@plt>
   11c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c78:	ldr	r2, [r3, #8]
   11c7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c80:	ldr	r3, [r3]
   11c84:	mov	r1, r3
   11c88:	mov	r0, r2
   11c8c:	bl	11a54 <avl_remove_impl@@Base>
   11c90:	mov	r2, r0
   11c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c98:	str	r2, [r3, #8]
   11c9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ca0:	cmp	r3, #0
   11ca4:	bne	11cb0 <avl_remove_impl@@Base+0x25c>
   11ca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cac:	b	11dcc <avl_remove_impl@@Base+0x378>
   11cb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cb4:	ldr	r3, [r3, #4]
   11cb8:	mov	r0, r3
   11cbc:	bl	113d4 <avl_altura@@Base>
   11cc0:	mov	r4, r0
   11cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cc8:	ldr	r3, [r3, #8]
   11ccc:	mov	r0, r3
   11cd0:	bl	113d4 <avl_altura@@Base>
   11cd4:	mov	r3, r0
   11cd8:	mov	r1, r3
   11cdc:	mov	r0, r4
   11ce0:	bl	11410 <max@@Base>
   11ce4:	mov	r3, r0
   11ce8:	add	r2, r3, #1
   11cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cf0:	str	r2, [r3, #12]
   11cf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11cf8:	bl	11694 <calc_balanceamento@@Base>
   11cfc:	str	r0, [fp, #-24]	; 0xffffffe8
   11d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d04:	cmp	r3, #1
   11d08:	ble	11d64 <avl_remove_impl@@Base+0x310>
   11d0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d10:	ldr	r3, [r3, #8]
   11d14:	mov	r0, r3
   11d18:	bl	11694 <calc_balanceamento@@Base>
   11d1c:	mov	r3, r0
   11d20:	cmp	r3, #0
   11d24:	bge	11d54 <avl_remove_impl@@Base+0x300>
   11d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d2c:	ldr	r3, [r3, #8]
   11d30:	mov	r0, r3
   11d34:	bl	114e4 <roda_direita@@Base>
   11d38:	mov	r2, r0
   11d3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d40:	str	r2, [r3, #8]
   11d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d48:	bl	115bc <roda_esquerda@@Base>
   11d4c:	mov	r3, r0
   11d50:	b	11dcc <avl_remove_impl@@Base+0x378>
   11d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d58:	bl	115bc <roda_esquerda@@Base>
   11d5c:	mov	r3, r0
   11d60:	b	11dcc <avl_remove_impl@@Base+0x378>
   11d64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d68:	cmn	r3, #1
   11d6c:	bge	11dc8 <avl_remove_impl@@Base+0x374>
   11d70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d74:	ldr	r3, [r3, #4]
   11d78:	mov	r0, r3
   11d7c:	bl	11694 <calc_balanceamento@@Base>
   11d80:	mov	r3, r0
   11d84:	cmp	r3, #0
   11d88:	ble	11db8 <avl_remove_impl@@Base+0x364>
   11d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d90:	ldr	r3, [r3, #4]
   11d94:	mov	r0, r3
   11d98:	bl	115bc <roda_esquerda@@Base>
   11d9c:	mov	r2, r0
   11da0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11da4:	str	r2, [r3, #4]
   11da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dac:	bl	114e4 <roda_direita@@Base>
   11db0:	mov	r3, r0
   11db4:	b	11dcc <avl_remove_impl@@Base+0x378>
   11db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dbc:	bl	114e4 <roda_direita@@Base>
   11dc0:	mov	r3, r0
   11dc4:	b	11dcc <avl_remove_impl@@Base+0x378>
   11dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11dcc:	mov	r0, r3
   11dd0:	sub	sp, fp, #8
   11dd4:	pop	{r4, fp, pc}

00011dd8 <avl_preordem_impl@@Base>:
   11dd8:	push	{fp, lr}
   11ddc:	add	fp, sp, #4
   11de0:	sub	sp, sp, #8
   11de4:	str	r0, [fp, #-8]
   11de8:	ldr	r3, [fp, #-8]
   11dec:	cmp	r3, #0
   11df0:	beq	11e3c <avl_preordem_impl@@Base+0x64>
   11df4:	ldr	r3, [fp, #-8]
   11df8:	ldr	r1, [r3]
   11dfc:	ldr	r3, [fp, #-8]
   11e00:	ldr	r3, [r3, #16]
   11e04:	mov	r2, r3
   11e08:	ldr	r3, [pc, #56]	; 11e48 <avl_preordem_impl@@Base+0x70>
   11e0c:	add	r3, pc, r3
   11e10:	mov	r0, r3
   11e14:	bl	10c78 <printf@plt>
   11e18:	ldr	r3, [fp, #-8]
   11e1c:	ldr	r3, [r3, #4]
   11e20:	mov	r0, r3
   11e24:	bl	11dd8 <avl_preordem_impl@@Base>
   11e28:	ldr	r3, [fp, #-8]
   11e2c:	ldr	r3, [r3, #8]
   11e30:	mov	r0, r3
   11e34:	bl	11dd8 <avl_preordem_impl@@Base>
   11e38:	b	11e40 <avl_preordem_impl@@Base+0x68>
   11e3c:	nop			; (mov r0, r0)
   11e40:	sub	sp, fp, #4
   11e44:	pop	{fp, pc}
   11e48:	strdeq	r0, [r0], -ip

00011e4c <bst_nova@@Base>:
   11e4c:	push	{fp, lr}
   11e50:	add	fp, sp, #4
   11e54:	sub	sp, sp, #8
   11e58:	mov	r0, #4
   11e5c:	bl	10ccc <malloc@plt>
   11e60:	mov	r3, r0
   11e64:	str	r3, [fp, #-8]
   11e68:	ldr	r3, [fp, #-8]
   11e6c:	cmp	r3, #0
   11e70:	bne	11e7c <bst_nova@@Base+0x30>
   11e74:	mov	r3, #0
   11e78:	b	11e8c <bst_nova@@Base+0x40>
   11e7c:	ldr	r3, [fp, #-8]
   11e80:	mov	r2, #0
   11e84:	str	r2, [r3]
   11e88:	ldr	r3, [fp, #-8]
   11e8c:	mov	r0, r3
   11e90:	sub	sp, fp, #4
   11e94:	pop	{fp, pc}

00011e98 <bst_apaga@@Base>:
   11e98:	push	{fp, lr}
   11e9c:	add	fp, sp, #4
   11ea0:	sub	sp, sp, #8
   11ea4:	str	r0, [fp, #-8]
   11ea8:	b	11ed8 <bst_apaga@@Base+0x40>
   11eac:	ldr	r3, [fp, #-8]
   11eb0:	ldr	r2, [r3]
   11eb4:	ldr	r3, [fp, #-8]
   11eb8:	ldr	r3, [r3]
   11ebc:	ldr	r3, [r3]
   11ec0:	mov	r1, r3
   11ec4:	mov	r0, r2
   11ec8:	bl	12394 <bst_remove_impl@@Base>
   11ecc:	mov	r2, r0
   11ed0:	ldr	r3, [fp, #-8]
   11ed4:	str	r2, [r3]
   11ed8:	ldr	r3, [fp, #-8]
   11edc:	ldr	r3, [r3]
   11ee0:	cmp	r3, #0
   11ee4:	bne	11eac <bst_apaga@@Base+0x14>
   11ee8:	ldr	r0, [fp, #-8]
   11eec:	bl	10c90 <free@plt>
   11ef0:	nop			; (mov r0, r0)
   11ef4:	sub	sp, fp, #4
   11ef8:	pop	{fp, pc}

00011efc <bst_pesquisa@@Base>:
   11efc:	push	{fp, lr}
   11f00:	add	fp, sp, #4
   11f04:	sub	sp, sp, #8
   11f08:	str	r0, [fp, #-8]
   11f0c:	str	r1, [fp, #-12]
   11f10:	ldr	r3, [fp, #-8]
   11f14:	cmp	r3, #0
   11f18:	beq	11f28 <bst_pesquisa@@Base+0x2c>
   11f1c:	ldr	r3, [fp, #-12]
   11f20:	cmp	r3, #0
   11f24:	bne	11f30 <bst_pesquisa@@Base+0x34>
   11f28:	mov	r3, #0
   11f2c:	b	11f48 <bst_pesquisa@@Base+0x4c>
   11f30:	ldr	r3, [fp, #-8]
   11f34:	ldr	r3, [r3]
   11f38:	ldr	r1, [fp, #-12]
   11f3c:	mov	r0, r3
   11f40:	bl	12220 <bst_pesquisa_impl@@Base>
   11f44:	mov	r3, r0
   11f48:	mov	r0, r3
   11f4c:	sub	sp, fp, #4
   11f50:	pop	{fp, pc}

00011f54 <bst_insere@@Base>:
   11f54:	push	{fp, lr}
   11f58:	add	fp, sp, #4
   11f5c:	sub	sp, sp, #8
   11f60:	str	r0, [fp, #-8]
   11f64:	str	r1, [fp, #-12]
   11f68:	ldr	r3, [fp, #-8]
   11f6c:	cmp	r3, #0
   11f70:	beq	11f80 <bst_insere@@Base+0x2c>
   11f74:	ldr	r3, [fp, #-12]
   11f78:	cmp	r3, #0
   11f7c:	bne	11f88 <bst_insere@@Base+0x34>
   11f80:	mvn	r3, #0
   11f84:	b	11fac <bst_insere@@Base+0x58>
   11f88:	ldr	r3, [fp, #-8]
   11f8c:	ldr	r3, [r3]
   11f90:	ldr	r1, [fp, #-12]
   11f94:	mov	r0, r3
   11f98:	bl	122d0 <bst_insere_impl@@Base>
   11f9c:	mov	r2, r0
   11fa0:	ldr	r3, [fp, #-8]
   11fa4:	str	r2, [r3]
   11fa8:	mov	r3, #0
   11fac:	mov	r0, r3
   11fb0:	sub	sp, fp, #4
   11fb4:	pop	{fp, pc}

00011fb8 <bst_remove@@Base>:
   11fb8:	push	{fp, lr}
   11fbc:	add	fp, sp, #4
   11fc0:	sub	sp, sp, #8
   11fc4:	str	r0, [fp, #-8]
   11fc8:	str	r1, [fp, #-12]
   11fcc:	ldr	r3, [fp, #-8]
   11fd0:	cmp	r3, #0
   11fd4:	beq	11fe4 <bst_remove@@Base+0x2c>
   11fd8:	ldr	r3, [fp, #-12]
   11fdc:	cmp	r3, #0
   11fe0:	bne	11fec <bst_remove@@Base+0x34>
   11fe4:	mvn	r3, #0
   11fe8:	b	12010 <bst_remove@@Base+0x58>
   11fec:	ldr	r3, [fp, #-8]
   11ff0:	ldr	r3, [r3]
   11ff4:	ldr	r1, [fp, #-12]
   11ff8:	mov	r0, r3
   11ffc:	bl	12394 <bst_remove_impl@@Base>
   12000:	mov	r2, r0
   12004:	ldr	r3, [fp, #-8]
   12008:	str	r2, [r3]
   1200c:	mov	r3, #0
   12010:	mov	r0, r3
   12014:	sub	sp, fp, #4
   12018:	pop	{fp, pc}

0001201c <bst_min@@Base>:
   1201c:	push	{fp, lr}
   12020:	add	fp, sp, #4
   12024:	sub	sp, sp, #8
   12028:	str	r0, [fp, #-8]
   1202c:	ldr	r3, [fp, #-8]
   12030:	cmp	r3, #0
   12034:	bne	12040 <bst_min@@Base+0x24>
   12038:	mov	r3, #0
   1203c:	b	12058 <bst_min@@Base+0x3c>
   12040:	ldr	r3, [fp, #-8]
   12044:	ldr	r3, [r3]
   12048:	mov	r0, r3
   1204c:	bl	12188 <bst_no_valormin@@Base>
   12050:	mov	r3, r0
   12054:	ldr	r3, [r3]
   12058:	mov	r0, r3
   1205c:	sub	sp, fp, #4
   12060:	pop	{fp, pc}

00012064 <bst_max@@Base>:
   12064:	push	{fp, lr}
   12068:	add	fp, sp, #4
   1206c:	sub	sp, sp, #8
   12070:	str	r0, [fp, #-8]
   12074:	ldr	r3, [fp, #-8]
   12078:	cmp	r3, #0
   1207c:	bne	12088 <bst_max@@Base+0x24>
   12080:	mov	r3, #0
   12084:	b	120a0 <bst_max@@Base+0x3c>
   12088:	ldr	r3, [fp, #-8]
   1208c:	ldr	r3, [r3]
   12090:	mov	r0, r3
   12094:	bl	121d4 <bst_no_valormax@@Base>
   12098:	mov	r3, r0
   1209c:	ldr	r3, [r3]
   120a0:	mov	r0, r3
   120a4:	sub	sp, fp, #4
   120a8:	pop	{fp, pc}

000120ac <bst_imprime@@Base>:
   120ac:	push	{fp, lr}
   120b0:	add	fp, sp, #4
   120b4:	sub	sp, sp, #8
   120b8:	str	r0, [fp, #-8]
   120bc:	ldr	r3, [fp, #-8]
   120c0:	cmp	r3, #0
   120c4:	beq	120f4 <bst_imprime@@Base+0x48>
   120c8:	ldr	r3, [pc, #48]	; 12100 <bst_imprime@@Base+0x54>
   120cc:	add	r3, pc, r3
   120d0:	mov	r0, r3
   120d4:	bl	10c78 <printf@plt>
   120d8:	ldr	r3, [fp, #-8]
   120dc:	ldr	r3, [r3]
   120e0:	mov	r0, r3
   120e4:	bl	126b0 <bst_preordem_impl@@Base>
   120e8:	mov	r0, #10
   120ec:	bl	10cfc <putchar@plt>
   120f0:	b	120f8 <bst_imprime@@Base+0x4c>
   120f4:	nop			; (mov r0, r0)
   120f8:	sub	sp, fp, #4
   120fc:	pop	{fp, pc}
   12100:	andeq	r0, r0, r4, asr #14

00012104 <bst_novo_no@@Base>:
   12104:	push	{fp, lr}
   12108:	add	fp, sp, #4
   1210c:	sub	sp, sp, #16
   12110:	str	r0, [fp, #-16]
   12114:	mov	r0, #12
   12118:	bl	10ccc <malloc@plt>
   1211c:	mov	r3, r0
   12120:	str	r3, [fp, #-8]
   12124:	ldr	r0, [fp, #-16]
   12128:	bl	10cf0 <strlen@plt>
   1212c:	mov	r3, r0
   12130:	add	r3, r3, #1
   12134:	mov	r0, r3
   12138:	bl	10ccc <malloc@plt>
   1213c:	mov	r3, r0
   12140:	mov	r2, r3
   12144:	ldr	r3, [fp, #-8]
   12148:	str	r2, [r3]
   1214c:	ldr	r3, [fp, #-8]
   12150:	ldr	r3, [r3]
   12154:	ldr	r1, [fp, #-16]
   12158:	mov	r0, r3
   1215c:	bl	10cb4 <strcpy@plt>
   12160:	ldr	r3, [fp, #-8]
   12164:	mov	r2, #0
   12168:	str	r2, [r3, #4]
   1216c:	ldr	r3, [fp, #-8]
   12170:	mov	r2, #0
   12174:	str	r2, [r3, #8]
   12178:	ldr	r3, [fp, #-8]
   1217c:	mov	r0, r3
   12180:	sub	sp, fp, #4
   12184:	pop	{fp, pc}

00012188 <bst_no_valormin@@Base>:
   12188:	push	{fp}		; (str fp, [sp, #-4]!)
   1218c:	add	fp, sp, #0
   12190:	sub	sp, sp, #20
   12194:	str	r0, [fp, #-16]
   12198:	ldr	r3, [fp, #-16]
   1219c:	str	r3, [fp, #-8]
   121a0:	b	121b0 <bst_no_valormin@@Base+0x28>
   121a4:	ldr	r3, [fp, #-8]
   121a8:	ldr	r3, [r3, #4]
   121ac:	str	r3, [fp, #-8]
   121b0:	ldr	r3, [fp, #-8]
   121b4:	ldr	r3, [r3, #4]
   121b8:	cmp	r3, #0
   121bc:	bne	121a4 <bst_no_valormin@@Base+0x1c>
   121c0:	ldr	r3, [fp, #-8]
   121c4:	mov	r0, r3
   121c8:	add	sp, fp, #0
   121cc:	pop	{fp}		; (ldr fp, [sp], #4)
   121d0:	bx	lr

000121d4 <bst_no_valormax@@Base>:
   121d4:	push	{fp}		; (str fp, [sp, #-4]!)
   121d8:	add	fp, sp, #0
   121dc:	sub	sp, sp, #20
   121e0:	str	r0, [fp, #-16]
   121e4:	ldr	r3, [fp, #-16]
   121e8:	str	r3, [fp, #-8]
   121ec:	b	121fc <bst_no_valormax@@Base+0x28>
   121f0:	ldr	r3, [fp, #-8]
   121f4:	ldr	r3, [r3, #8]
   121f8:	str	r3, [fp, #-8]
   121fc:	ldr	r3, [fp, #-8]
   12200:	ldr	r3, [r3, #8]
   12204:	cmp	r3, #0
   12208:	bne	121f0 <bst_no_valormax@@Base+0x1c>
   1220c:	ldr	r3, [fp, #-8]
   12210:	mov	r0, r3
   12214:	add	sp, fp, #0
   12218:	pop	{fp}		; (ldr fp, [sp], #4)
   1221c:	bx	lr

00012220 <bst_pesquisa_impl@@Base>:
   12220:	push	{fp, lr}
   12224:	add	fp, sp, #4
   12228:	sub	sp, sp, #8
   1222c:	str	r0, [fp, #-8]
   12230:	str	r1, [fp, #-12]
   12234:	ldr	r3, [fp, #-8]
   12238:	cmp	r3, #0
   1223c:	bne	12248 <bst_pesquisa_impl@@Base+0x28>
   12240:	mov	r3, #0
   12244:	b	122c4 <bst_pesquisa_impl@@Base+0xa4>
   12248:	ldr	r3, [fp, #-8]
   1224c:	ldr	r3, [r3]
   12250:	mov	r1, r3
   12254:	ldr	r0, [fp, #-12]
   12258:	bl	10c6c <strcmp@plt>
   1225c:	mov	r3, r0
   12260:	cmp	r3, #0
   12264:	bge	12284 <bst_pesquisa_impl@@Base+0x64>
   12268:	ldr	r3, [fp, #-8]
   1226c:	ldr	r3, [r3, #4]
   12270:	ldr	r1, [fp, #-12]
   12274:	mov	r0, r3
   12278:	bl	12220 <bst_pesquisa_impl@@Base>
   1227c:	mov	r3, r0
   12280:	b	122c4 <bst_pesquisa_impl@@Base+0xa4>
   12284:	ldr	r3, [fp, #-8]
   12288:	ldr	r3, [r3]
   1228c:	mov	r1, r3
   12290:	ldr	r0, [fp, #-12]
   12294:	bl	10c6c <strcmp@plt>
   12298:	mov	r3, r0
   1229c:	cmp	r3, #0
   122a0:	ble	122c0 <bst_pesquisa_impl@@Base+0xa0>
   122a4:	ldr	r3, [fp, #-8]
   122a8:	ldr	r3, [r3, #8]
   122ac:	ldr	r1, [fp, #-12]
   122b0:	mov	r0, r3
   122b4:	bl	12220 <bst_pesquisa_impl@@Base>
   122b8:	mov	r3, r0
   122bc:	b	122c4 <bst_pesquisa_impl@@Base+0xa4>
   122c0:	ldr	r3, [fp, #-8]
   122c4:	mov	r0, r3
   122c8:	sub	sp, fp, #4
   122cc:	pop	{fp, pc}

000122d0 <bst_insere_impl@@Base>:
   122d0:	push	{fp, lr}
   122d4:	add	fp, sp, #4
   122d8:	sub	sp, sp, #8
   122dc:	str	r0, [fp, #-8]
   122e0:	str	r1, [fp, #-12]
   122e4:	ldr	r3, [fp, #-8]
   122e8:	cmp	r3, #0
   122ec:	bne	12300 <bst_insere_impl@@Base+0x30>
   122f0:	ldr	r0, [fp, #-12]
   122f4:	bl	12104 <bst_novo_no@@Base>
   122f8:	mov	r3, r0
   122fc:	b	12388 <bst_insere_impl@@Base+0xb8>
   12300:	ldr	r3, [fp, #-8]
   12304:	ldr	r3, [r3]
   12308:	mov	r1, r3
   1230c:	ldr	r0, [fp, #-12]
   12310:	bl	10c6c <strcmp@plt>
   12314:	mov	r3, r0
   12318:	cmp	r3, #0
   1231c:	bge	12344 <bst_insere_impl@@Base+0x74>
   12320:	ldr	r3, [fp, #-8]
   12324:	ldr	r3, [r3, #4]
   12328:	ldr	r1, [fp, #-12]
   1232c:	mov	r0, r3
   12330:	bl	122d0 <bst_insere_impl@@Base>
   12334:	mov	r2, r0
   12338:	ldr	r3, [fp, #-8]
   1233c:	str	r2, [r3, #4]
   12340:	b	12384 <bst_insere_impl@@Base+0xb4>
   12344:	ldr	r3, [fp, #-8]
   12348:	ldr	r3, [r3]
   1234c:	mov	r1, r3
   12350:	ldr	r0, [fp, #-12]
   12354:	bl	10c6c <strcmp@plt>
   12358:	mov	r3, r0
   1235c:	cmp	r3, #0
   12360:	ble	12384 <bst_insere_impl@@Base+0xb4>
   12364:	ldr	r3, [fp, #-8]
   12368:	ldr	r3, [r3, #8]
   1236c:	ldr	r1, [fp, #-12]
   12370:	mov	r0, r3
   12374:	bl	122d0 <bst_insere_impl@@Base>
   12378:	mov	r2, r0
   1237c:	ldr	r3, [fp, #-8]
   12380:	str	r2, [r3, #8]
   12384:	ldr	r3, [fp, #-8]
   12388:	mov	r0, r3
   1238c:	sub	sp, fp, #4
   12390:	pop	{fp, pc}

00012394 <bst_remove_impl@@Base>:
   12394:	push	{r4, fp, lr}
   12398:	add	fp, sp, #8
   1239c:	sub	sp, sp, #20
   123a0:	str	r0, [fp, #-24]	; 0xffffffe8
   123a4:	str	r1, [fp, #-28]	; 0xffffffe4
   123a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123ac:	cmp	r3, #0
   123b0:	bne	123bc <bst_remove_impl@@Base+0x28>
   123b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123b8:	b	125d0 <bst_remove_impl@@Base+0x23c>
   123bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123c0:	ldr	r3, [r3]
   123c4:	mov	r1, r3
   123c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   123cc:	bl	10c6c <strcmp@plt>
   123d0:	mov	r3, r0
   123d4:	cmp	r3, #0
   123d8:	bge	12400 <bst_remove_impl@@Base+0x6c>
   123dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123e0:	ldr	r3, [r3, #4]
   123e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   123e8:	mov	r0, r3
   123ec:	bl	12394 <bst_remove_impl@@Base>
   123f0:	mov	r2, r0
   123f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123f8:	str	r2, [r3, #4]
   123fc:	b	125cc <bst_remove_impl@@Base+0x238>
   12400:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12404:	ldr	r3, [r3]
   12408:	mov	r1, r3
   1240c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12410:	bl	10c6c <strcmp@plt>
   12414:	mov	r3, r0
   12418:	cmp	r3, #0
   1241c:	ble	12444 <bst_remove_impl@@Base+0xb0>
   12420:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12424:	ldr	r3, [r3, #8]
   12428:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1242c:	mov	r0, r3
   12430:	bl	12394 <bst_remove_impl@@Base>
   12434:	mov	r2, r0
   12438:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1243c:	str	r2, [r3, #8]
   12440:	b	125cc <bst_remove_impl@@Base+0x238>
   12444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12448:	ldr	r3, [r3, #4]
   1244c:	cmp	r3, #0
   12450:	beq	12464 <bst_remove_impl@@Base+0xd0>
   12454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12458:	ldr	r3, [r3, #8]
   1245c:	cmp	r3, #0
   12460:	bne	1253c <bst_remove_impl@@Base+0x1a8>
   12464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12468:	ldr	r3, [r3, #4]
   1246c:	cmp	r3, #0
   12470:	beq	12480 <bst_remove_impl@@Base+0xec>
   12474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12478:	ldr	r3, [r3, #4]
   1247c:	b	12488 <bst_remove_impl@@Base+0xf4>
   12480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12484:	ldr	r3, [r3, #8]
   12488:	str	r3, [fp, #-16]
   1248c:	ldr	r3, [fp, #-16]
   12490:	cmp	r3, #0
   12494:	bne	124ac <bst_remove_impl@@Base+0x118>
   12498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1249c:	str	r3, [fp, #-16]
   124a0:	mov	r3, #0
   124a4:	str	r3, [fp, #-24]	; 0xffffffe8
   124a8:	b	12520 <bst_remove_impl@@Base+0x18c>
   124ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124b0:	ldr	r4, [r3]
   124b4:	ldr	r3, [fp, #-16]
   124b8:	ldr	r3, [r3]
   124bc:	mov	r0, r3
   124c0:	bl	10cf0 <strlen@plt>
   124c4:	mov	r3, r0
   124c8:	add	r3, r3, #1
   124cc:	mov	r1, r3
   124d0:	mov	r0, r4
   124d4:	bl	10ca8 <realloc@plt>
   124d8:	mov	r2, r0
   124dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124e0:	str	r2, [r3]
   124e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124e8:	ldr	r2, [r3]
   124ec:	ldr	r3, [fp, #-16]
   124f0:	ldr	r3, [r3]
   124f4:	mov	r1, r3
   124f8:	mov	r0, r2
   124fc:	bl	10cb4 <strcpy@plt>
   12500:	ldr	r3, [fp, #-16]
   12504:	ldr	r2, [r3, #4]
   12508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1250c:	str	r2, [r3, #4]
   12510:	ldr	r3, [fp, #-16]
   12514:	ldr	r2, [r3, #8]
   12518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1251c:	str	r2, [r3, #8]
   12520:	ldr	r3, [fp, #-16]
   12524:	ldr	r3, [r3]
   12528:	mov	r0, r3
   1252c:	bl	10c90 <free@plt>
   12530:	ldr	r0, [fp, #-16]
   12534:	bl	10c90 <free@plt>
   12538:	b	125cc <bst_remove_impl@@Base+0x238>
   1253c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12540:	ldr	r3, [r3, #8]
   12544:	mov	r0, r3
   12548:	bl	12188 <bst_no_valormin@@Base>
   1254c:	str	r0, [fp, #-20]	; 0xffffffec
   12550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12554:	ldr	r4, [r3]
   12558:	ldr	r3, [fp, #-20]	; 0xffffffec
   1255c:	ldr	r3, [r3]
   12560:	mov	r0, r3
   12564:	bl	10cf0 <strlen@plt>
   12568:	mov	r3, r0
   1256c:	add	r3, r3, #1
   12570:	mov	r1, r3
   12574:	mov	r0, r4
   12578:	bl	10ca8 <realloc@plt>
   1257c:	mov	r2, r0
   12580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12584:	str	r2, [r3]
   12588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1258c:	ldr	r2, [r3]
   12590:	ldr	r3, [fp, #-20]	; 0xffffffec
   12594:	ldr	r3, [r3]
   12598:	mov	r1, r3
   1259c:	mov	r0, r2
   125a0:	bl	10cb4 <strcpy@plt>
   125a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125a8:	ldr	r2, [r3, #8]
   125ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   125b0:	ldr	r3, [r3]
   125b4:	mov	r1, r3
   125b8:	mov	r0, r2
   125bc:	bl	12394 <bst_remove_impl@@Base>
   125c0:	mov	r2, r0
   125c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125c8:	str	r2, [r3, #8]
   125cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125d0:	mov	r0, r3
   125d4:	sub	sp, fp, #8
   125d8:	pop	{r4, fp, pc}

000125dc <bst_altura@@Base>:
   125dc:	push	{fp, lr}
   125e0:	add	fp, sp, #4
   125e4:	sub	sp, sp, #16
   125e8:	str	r0, [fp, #-16]
   125ec:	mov	r3, #0
   125f0:	str	r3, [fp, #-8]
   125f4:	mov	r3, #0
   125f8:	str	r3, [fp, #-12]
   125fc:	ldr	r3, [fp, #-16]
   12600:	cmp	r3, #0
   12604:	bne	12610 <bst_altura@@Base+0x34>
   12608:	mvn	r3, #0
   1260c:	b	126a4 <bst_altura@@Base+0xc8>
   12610:	ldr	r3, [fp, #-16]
   12614:	ldr	r3, [r3, #8]
   12618:	cmp	r3, #0
   1261c:	bne	12638 <bst_altura@@Base+0x5c>
   12620:	ldr	r3, [fp, #-16]
   12624:	ldr	r3, [r3, #4]
   12628:	cmp	r3, #0
   1262c:	bne	12638 <bst_altura@@Base+0x5c>
   12630:	mov	r3, #0
   12634:	b	126a4 <bst_altura@@Base+0xc8>
   12638:	ldr	r3, [fp, #-16]
   1263c:	ldr	r3, [r3, #4]
   12640:	mov	r0, r3
   12644:	bl	125dc <bst_altura@@Base>
   12648:	str	r0, [fp, #-8]
   1264c:	ldr	r3, [fp, #-16]
   12650:	ldr	r3, [r3, #8]
   12654:	mov	r0, r3
   12658:	bl	125dc <bst_altura@@Base>
   1265c:	str	r0, [fp, #-12]
   12660:	ldr	r2, [fp, #-8]
   12664:	ldr	r3, [fp, #-12]
   12668:	cmp	r2, r3
   1266c:	ble	1268c <bst_altura@@Base+0xb0>
   12670:	ldr	r3, [fp, #-16]
   12674:	ldr	r3, [r3, #4]
   12678:	mov	r0, r3
   1267c:	bl	125dc <bst_altura@@Base>
   12680:	mov	r3, r0
   12684:	add	r3, r3, #1
   12688:	b	126a4 <bst_altura@@Base+0xc8>
   1268c:	ldr	r3, [fp, #-16]
   12690:	ldr	r3, [r3, #8]
   12694:	mov	r0, r3
   12698:	bl	125dc <bst_altura@@Base>
   1269c:	mov	r3, r0
   126a0:	add	r3, r3, #1
   126a4:	mov	r0, r3
   126a8:	sub	sp, fp, #4
   126ac:	pop	{fp, pc}

000126b0 <bst_preordem_impl@@Base>:
   126b0:	push	{fp, lr}
   126b4:	add	fp, sp, #4
   126b8:	sub	sp, sp, #8
   126bc:	str	r0, [fp, #-8]
   126c0:	ldr	r3, [fp, #-8]
   126c4:	cmp	r3, #0
   126c8:	beq	12710 <bst_preordem_impl@@Base+0x60>
   126cc:	ldr	r3, [fp, #-8]
   126d0:	ldr	r3, [r3]
   126d4:	mov	r1, r3
   126d8:	ldr	r3, [pc, #60]	; 1271c <bst_preordem_impl@@Base+0x6c>
   126dc:	add	r3, pc, r3
   126e0:	mov	r0, r3
   126e4:	bl	10c78 <printf@plt>
   126e8:	ldr	r3, [fp, #-8]
   126ec:	ldr	r3, [r3, #4]
   126f0:	mov	r0, r3
   126f4:	bl	126b0 <bst_preordem_impl@@Base>
   126f8:	ldr	r3, [fp, #-8]
   126fc:	ldr	r3, [r3, #8]
   12700:	mov	r0, r3
   12704:	bl	126b0 <bst_preordem_impl@@Base>
   12708:	nop			; (mov r0, r0)
   1270c:	b	12714 <bst_preordem_impl@@Base+0x64>
   12710:	nop			; (mov r0, r0)
   12714:	sub	sp, fp, #4
   12718:	pop	{fp, pc}
   1271c:	andeq	r0, r0, r0, asr #2

00012720 <__libc_csu_init@@Base>:
   12720:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12724:	mov	r7, r0
   12728:	ldr	r6, [pc, #72]	; 12778 <__libc_csu_init@@Base+0x58>
   1272c:	ldr	r5, [pc, #72]	; 1277c <__libc_csu_init@@Base+0x5c>
   12730:	add	r6, pc, r6
   12734:	add	r5, pc, r5
   12738:	sub	r6, r6, r5
   1273c:	mov	r8, r1
   12740:	mov	r9, r2
   12744:	bl	10c4c <strcmp@plt-0x20>
   12748:	asrs	r6, r6, #2
   1274c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12750:	mov	r4, #0
   12754:	add	r4, r4, #1
   12758:	ldr	r3, [r5], #4
   1275c:	mov	r2, r9
   12760:	mov	r1, r8
   12764:	mov	r0, r7
   12768:	blx	r3
   1276c:	cmp	r6, r4
   12770:	bne	12754 <__libc_csu_init@@Base+0x34>
   12774:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12778:	ldrdeq	r0, [r1], -r8
   1277c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00012780 <__libc_csu_fini@@Base>:
   12780:	bx	lr

Disassembly of section .fini:

00012784 <.fini>:
   12784:	push	{r3, lr}
   12788:	pop	{r3, pc}
