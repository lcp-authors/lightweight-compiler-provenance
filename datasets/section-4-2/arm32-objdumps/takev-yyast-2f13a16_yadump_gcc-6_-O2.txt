
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

000104a4 <.init>:
   104a4:	push	{r3, lr}
   104a8:	bl	10714 <close@plt+0x1a8>
   104ac:	pop	{r3, pc}

Disassembly of section .plt:

000104b0 <free@plt-0x14>:
   104b0:	push	{lr}		; (str lr, [sp, #-4]!)
   104b4:	ldr	lr, [pc, #4]	; 104c0 <free@plt-0x4>
   104b8:	add	lr, pc, lr
   104bc:	ldr	pc, [lr, #8]!
   104c0:	andeq	r0, r1, r0, asr #22

000104c4 <free@plt>:
   104c4:	add	ip, pc, #0, 12
   104c8:	add	ip, ip, #16, 20	; 0x10000
   104cc:	ldr	pc, [ip, #2880]!	; 0xb40

000104d0 <strndup@plt>:
   104d0:	add	ip, pc, #0, 12
   104d4:	add	ip, ip, #16, 20	; 0x10000
   104d8:	ldr	pc, [ip, #2872]!	; 0xb38

000104dc <perror@plt>:
   104dc:	add	ip, pc, #0, 12
   104e0:	add	ip, ip, #16, 20	; 0x10000
   104e4:	ldr	pc, [ip, #2864]!	; 0xb30

000104e8 <fwrite@plt>:
   104e8:	add	ip, pc, #0, 12
   104ec:	add	ip, ip, #16, 20	; 0x10000
   104f0:	ldr	pc, [ip, #2856]!	; 0xb28

000104f4 <__libc_start_main@plt>:
   104f4:	add	ip, pc, #0, 12
   104f8:	add	ip, ip, #16, 20	; 0x10000
   104fc:	ldr	pc, [ip, #2848]!	; 0xb20

00010500 <__fxstat@plt>:
   10500:	add	ip, pc, #0, 12
   10504:	add	ip, ip, #16, 20	; 0x10000
   10508:	ldr	pc, [ip, #2840]!	; 0xb18

0001050c <__gmon_start__@plt>:
   1050c:	add	ip, pc, #0, 12
   10510:	add	ip, ip, #16, 20	; 0x10000
   10514:	ldr	pc, [ip, #2832]!	; 0xb10

00010518 <open@plt>:
   10518:	add	ip, pc, #0, 12
   1051c:	add	ip, ip, #16, 20	; 0x10000
   10520:	ldr	pc, [ip, #2824]!	; 0xb08

00010524 <exit@plt>:
   10524:	add	ip, pc, #0, 12
   10528:	add	ip, ip, #16, 20	; 0x10000
   1052c:	ldr	pc, [ip, #2816]!	; 0xb00

00010530 <mmap@plt>:
   10530:	add	ip, pc, #0, 12
   10534:	add	ip, ip, #16, 20	; 0x10000
   10538:	ldr	pc, [ip, #2808]!	; 0xaf8

0001053c <fprintf@plt>:
   1053c:	add	ip, pc, #0, 12
   10540:	add	ip, ip, #16, 20	; 0x10000
   10544:	ldr	pc, [ip, #2800]!	; 0xaf0

00010548 <munmap@plt>:
   10548:	add	ip, pc, #0, 12
   1054c:	add	ip, ip, #16, 20	; 0x10000
   10550:	ldr	pc, [ip, #2792]!	; 0xae8

00010554 <fputc@plt>:
   10554:	add	ip, pc, #0, 12
   10558:	add	ip, ip, #16, 20	; 0x10000
   1055c:	ldr	pc, [ip, #2784]!	; 0xae0

00010560 <abort@plt>:
   10560:	add	ip, pc, #0, 12
   10564:	add	ip, ip, #16, 20	; 0x10000
   10568:	ldr	pc, [ip, #2776]!	; 0xad8

0001056c <close@plt>:
   1056c:	add	ip, pc, #0, 12
   10570:	add	ip, ip, #16, 20	; 0x10000
   10574:	ldr	pc, [ip, #2768]!	; 0xad0

Disassembly of section .text:

00010578 <.text>:
   10578:	ldr	r3, [pc, #312]	; 106b8 <close@plt+0x14c>
   1057c:	cmp	r0, #2
   10580:	push	{r4, r5, r6, r7, lr}
   10584:	add	r3, pc, r3
   10588:	sub	sp, sp, #100	; 0x64
   1058c:	bne	1062c <close@plt+0xc0>
   10590:	ldr	r0, [r1, #4]
   10594:	mov	r1, #0
   10598:	bl	10518 <open@plt>
   1059c:	cmn	r0, #1
   105a0:	mov	r4, r0
   105a4:	beq	106a4 <close@plt+0x138>
   105a8:	mov	r1, r0
   105ac:	add	r2, sp, #8
   105b0:	mov	r0, #3
   105b4:	bl	10500 <__fxstat@plt>
   105b8:	cmn	r0, #1
   105bc:	beq	10690 <close@plt+0x124>
   105c0:	ldr	r6, [sp, #52]	; 0x34
   105c4:	mov	r5, #0
   105c8:	mov	r3, #1
   105cc:	str	r4, [sp]
   105d0:	mov	r1, r6
   105d4:	str	r5, [sp, #4]
   105d8:	mov	r0, r5
   105dc:	mov	r2, r3
   105e0:	bl	10530 <mmap@plt>
   105e4:	cmn	r0, #1
   105e8:	mov	r7, r0
   105ec:	beq	1067c <close@plt+0x110>
   105f0:	mov	r2, r5
   105f4:	mov	r1, r6
   105f8:	bl	108e4 <close@plt+0x378>
   105fc:	mov	r1, r6
   10600:	mov	r0, r7
   10604:	bl	10548 <munmap@plt>
   10608:	cmn	r0, #1
   1060c:	beq	10668 <close@plt+0xfc>
   10610:	mov	r0, r4
   10614:	bl	1056c <close@plt>
   10618:	cmn	r0, #1
   1061c:	beq	10654 <close@plt+0xe8>
   10620:	mov	r0, r5
   10624:	add	sp, sp, #100	; 0x64
   10628:	pop	{r4, r5, r6, r7, pc}
   1062c:	ldr	r0, [pc, #136]	; 106bc <close@plt+0x150>
   10630:	mov	r2, #31
   10634:	mov	r1, #1
   10638:	ldr	r3, [r3, r0]
   1063c:	ldr	r0, [pc, #124]	; 106c0 <close@plt+0x154>
   10640:	ldr	r3, [r3]
   10644:	add	r0, pc, r0
   10648:	bl	104e8 <fwrite@plt>
   1064c:	mov	r0, #1
   10650:	bl	10524 <exit@plt>
   10654:	ldr	r0, [pc, #104]	; 106c4 <close@plt+0x158>
   10658:	add	r0, pc, r0
   1065c:	bl	104dc <perror@plt>
   10660:	mov	r0, #1
   10664:	bl	10524 <exit@plt>
   10668:	ldr	r0, [pc, #88]	; 106c8 <close@plt+0x15c>
   1066c:	add	r0, pc, r0
   10670:	bl	104dc <perror@plt>
   10674:	mov	r0, #1
   10678:	bl	10524 <exit@plt>
   1067c:	ldr	r0, [pc, #72]	; 106cc <close@plt+0x160>
   10680:	add	r0, pc, r0
   10684:	bl	104dc <perror@plt>
   10688:	mov	r0, #1
   1068c:	bl	10524 <exit@plt>
   10690:	ldr	r0, [pc, #56]	; 106d0 <close@plt+0x164>
   10694:	add	r0, pc, r0
   10698:	bl	104dc <perror@plt>
   1069c:	mov	r0, #1
   106a0:	bl	10524 <exit@plt>
   106a4:	ldr	r0, [pc, #40]	; 106d4 <close@plt+0x168>
   106a8:	add	r0, pc, r0
   106ac:	bl	104dc <perror@plt>
   106b0:	mov	r0, #1
   106b4:	bl	10524 <exit@plt>
   106b8:	andeq	r0, r1, r4, ror sl
   106bc:	andeq	r0, r0, r8, asr #32
   106c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   106c4:	andeq	r0, r0, ip, asr r8
   106c8:	andeq	r0, r0, r0, lsr #16
   106cc:	andeq	r0, r0, r8, ror #15
   106d0:			; <UNDEFINED> instruction: 0x000007b8
   106d4:	andeq	r0, r0, ip, lsl #15
   106d8:	mov	fp, #0
   106dc:	mov	lr, #0
   106e0:	pop	{r1}		; (ldr r1, [sp], #4)
   106e4:	mov	r2, sp
   106e8:	push	{r2}		; (str r2, [sp, #-4]!)
   106ec:	push	{r0}		; (str r0, [sp, #-4]!)
   106f0:	ldr	ip, [pc, #16]	; 10708 <close@plt+0x19c>
   106f4:	push	{ip}		; (str ip, [sp, #-4]!)
   106f8:	ldr	r0, [pc, #12]	; 1070c <close@plt+0x1a0>
   106fc:	ldr	r3, [pc, #12]	; 10710 <close@plt+0x1a4>
   10700:	bl	104f4 <__libc_start_main@plt>
   10704:	bl	10560 <abort@plt>
   10708:	andeq	r0, r1, ip, lsl sp
   1070c:	andeq	r0, r1, r8, ror r5
   10710:			; <UNDEFINED> instruction: 0x00010cbc
   10714:	ldr	r3, [pc, #20]	; 10730 <close@plt+0x1c4>
   10718:	ldr	r2, [pc, #20]	; 10734 <close@plt+0x1c8>
   1071c:	add	r3, pc, r3
   10720:	ldr	r2, [r3, r2]
   10724:	cmp	r2, #0
   10728:	bxeq	lr
   1072c:	b	1050c <__gmon_start__@plt>
   10730:	ldrdeq	r0, [r1], -ip
   10734:	andeq	r0, r0, ip, asr #32
   10738:	ldr	r3, [pc, #28]	; 1075c <close@plt+0x1f0>
   1073c:	ldr	r0, [pc, #28]	; 10760 <close@plt+0x1f4>
   10740:	sub	r3, r3, r0
   10744:	cmp	r3, #6
   10748:	bxls	lr
   1074c:	ldr	r3, [pc, #16]	; 10764 <close@plt+0x1f8>
   10750:	cmp	r3, #0
   10754:	bxeq	lr
   10758:	bx	r3
   1075c:	andeq	r1, r2, pc, asr r0
   10760:	andeq	r1, r2, ip, asr r0
   10764:	andeq	r0, r0, r0
   10768:	ldr	r1, [pc, #36]	; 10794 <close@plt+0x228>
   1076c:	ldr	r0, [pc, #36]	; 10798 <close@plt+0x22c>
   10770:	sub	r1, r1, r0
   10774:	asr	r1, r1, #2
   10778:	add	r1, r1, r1, lsr #31
   1077c:	asrs	r1, r1, #1
   10780:	bxeq	lr
   10784:	ldr	r3, [pc, #16]	; 1079c <close@plt+0x230>
   10788:	cmp	r3, #0
   1078c:	bxeq	lr
   10790:	bx	r3
   10794:	andeq	r1, r2, ip, asr r0
   10798:	andeq	r1, r2, ip, asr r0
   1079c:	andeq	r0, r0, r0
   107a0:	push	{r4, lr}
   107a4:	ldr	r4, [pc, #24]	; 107c4 <close@plt+0x258>
   107a8:	ldrb	r3, [r4]
   107ac:	cmp	r3, #0
   107b0:	popne	{r4, pc}
   107b4:	bl	10738 <close@plt+0x1cc>
   107b8:	mov	r3, #1
   107bc:	strb	r3, [r4]
   107c0:	pop	{r4, pc}
   107c4:	andeq	r1, r2, ip, asr r0
   107c8:	ldr	r0, [pc, #40]	; 107f8 <close@plt+0x28c>
   107cc:	ldr	r3, [r0]
   107d0:	cmp	r3, #0
   107d4:	bne	107dc <close@plt+0x270>
   107d8:	b	10768 <close@plt+0x1fc>
   107dc:	ldr	r3, [pc, #24]	; 107fc <close@plt+0x290>
   107e0:	cmp	r3, #0
   107e4:	beq	107d8 <close@plt+0x26c>
   107e8:	push	{r4, lr}
   107ec:	blx	r3
   107f0:	pop	{r4, lr}
   107f4:	b	10768 <close@plt+0x1fc>
   107f8:	andeq	r0, r2, r4, lsl pc
   107fc:	andeq	r0, r0, r0
   10800:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10804:	subs	r5, r0, #0
   10808:	ldr	r2, [pc, #68]	; 10854 <close@plt+0x2e8>
   1080c:	add	r2, pc, r2
   10810:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10814:	ldr	r3, [pc, #60]	; 10858 <close@plt+0x2ec>
   10818:	ldr	r9, [pc, #60]	; 1085c <close@plt+0x2f0>
   1081c:	mov	r4, #0
   10820:	ldr	r8, [r2, r3]
   10824:	add	r9, pc, r9
   10828:	mov	r7, #2
   1082c:	mov	r6, #1
   10830:	add	r4, r4, #1
   10834:	ldr	r3, [r8]
   10838:	mov	r2, r7
   1083c:	mov	r1, r6
   10840:	mov	r0, r9
   10844:	bl	104e8 <fwrite@plt>
   10848:	cmp	r5, r4
   1084c:	bne	10830 <close@plt+0x2c4>
   10850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10854:	andeq	r0, r1, ip, ror #15
   10858:	andeq	r0, r0, r0, asr r0
   1085c:	andeq	r0, r0, r0, lsl #10
   10860:	push	{r4, r5, r6, lr}
   10864:	lsr	ip, r0, #8
   10868:	ldr	lr, [pc, #104]	; 108d8 <close@plt+0x36c>
   1086c:	ldr	r3, [pc, #104]	; 108dc <close@plt+0x370>
   10870:	add	lr, pc, lr
   10874:	lsr	r4, r0, #16
   10878:	ldr	r3, [lr, r3]
   1087c:	lsr	r2, r1, #8
   10880:	sub	sp, sp, #24
   10884:	uxtb	ip, ip
   10888:	uxtb	r4, r4
   1088c:	uxtb	r2, r2
   10890:	ldr	r6, [r3]
   10894:	str	ip, [sp, #16]
   10898:	str	r4, [sp, #12]
   1089c:	lsr	ip, r0, #24
   108a0:	uxtb	r4, r1
   108a4:	str	r2, [sp]
   108a8:	lsr	r3, r1, #16
   108ac:	lsr	r2, r1, #24
   108b0:	ldr	r1, [pc, #40]	; 108e0 <close@plt+0x374>
   108b4:	uxtb	r5, r0
   108b8:	uxtb	r3, r3
   108bc:	mov	r0, r6
   108c0:	str	r5, [sp, #20]
   108c4:	stmib	sp, {r4, ip}
   108c8:	add	r1, pc, r1
   108cc:	bl	1053c <fprintf@plt>
   108d0:	add	sp, sp, #24
   108d4:	pop	{r4, r5, r6, pc}
   108d8:	andeq	r0, r1, r8, lsl #15
   108dc:	andeq	r0, r0, r0, asr r0
   108e0:	andeq	r0, r0, r0, ror #8
   108e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108e8:	cmp	r1, #31
   108ec:	ldr	sl, [pc, #900]	; 10c78 <close@plt+0x70c>
   108f0:	sub	sp, sp, #12
   108f4:	add	sl, pc, sl
   108f8:	bls	10c50 <close@plt+0x6e4>
   108fc:	ldr	r5, [r0, #12]
   10900:	mov	r9, r2
   10904:	rev	r5, r5
   10908:	ldr	r7, [r0]
   1090c:	sub	r5, r5, #32
   10910:	ldr	r8, [r0, #4]
   10914:	ldr	r3, [r0, #16]
   10918:	ldr	ip, [r0, #20]
   1091c:	ldr	r2, [r0, #24]
   10920:	cmp	r1, r5
   10924:	mov	r4, r0
   10928:	rev	r7, r7
   1092c:	rev	r8, r8
   10930:	rev	r3, r3
   10934:	rev	ip, ip
   10938:	rev	r2, r2
   1093c:	ldrb	fp, [r0, #31]
   10940:	bcc	10c1c <close@plt+0x6b0>
   10944:	cmn	r2, #1
   10948:	beq	109c8 <close@plt+0x45c>
   1094c:	ldr	r1, [pc, #808]	; 10c7c <close@plt+0x710>
   10950:	ldr	r6, [sl, r1]
   10954:	ldr	r1, [pc, #804]	; 10c80 <close@plt+0x714>
   10958:	ldr	r0, [r6]
   1095c:	add	r1, pc, r1
   10960:	str	ip, [sp]
   10964:	bl	1053c <fprintf@plt>
   10968:	ldr	r1, [pc, #788]	; 10c84 <close@plt+0x718>
   1096c:	mov	r2, r5
   10970:	mov	r3, #0
   10974:	add	r1, pc, r1
   10978:	ldr	r0, [r6]
   1097c:	bl	1053c <fprintf@plt>
   10980:	mov	r0, r9
   10984:	bl	10800 <close@plt+0x294>
   10988:	ldr	r1, [r6]
   1098c:	mov	r0, #32
   10990:	bl	10554 <fputc@plt>
   10994:	mov	r0, r8
   10998:	mov	r1, r7
   1099c:	bl	10860 <close@plt+0x2f4>
   109a0:	cmp	fp, #6
   109a4:	addls	pc, pc, fp, lsl #2
   109a8:	b	10af4 <close@plt+0x588>
   109ac:	b	10a20 <close@plt+0x4b4>
   109b0:	b	10af4 <close@plt+0x588>
   109b4:	b	10a3c <close@plt+0x4d0>
   109b8:	b	10a84 <close@plt+0x518>
   109bc:	b	10ab4 <close@plt+0x548>
   109c0:	b	10ad4 <close@plt+0x568>
   109c4:	b	109ec <close@plt+0x480>
   109c8:	ldr	r3, [pc, #684]	; 10c7c <close@plt+0x710>
   109cc:	ldr	r0, [pc, #692]	; 10c88 <close@plt+0x71c>
   109d0:	mov	r2, #11
   109d4:	ldr	r6, [sl, r3]
   109d8:	mov	r1, #1
   109dc:	add	r0, pc, r0
   109e0:	ldr	r3, [r6]
   109e4:	bl	104e8 <fwrite@plt>
   109e8:	b	10968 <close@plt+0x3fc>
   109ec:	cmp	r5, #8
   109f0:	beq	10b18 <close@plt+0x5ac>
   109f4:	ldr	r1, [pc, #656]	; 10c8c <close@plt+0x720>
   109f8:	mov	r2, r5
   109fc:	ldr	r0, [r6]
   10a00:	add	r1, pc, r1
   10a04:	bl	1053c <fprintf@plt>
   10a08:	ldr	r0, [r4, #12]
   10a0c:	rev	r0, r0
   10a10:	add	r0, r0, #7
   10a14:	bic	r0, r0, #7
   10a18:	add	sp, sp, #12
   10a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a20:	ldr	r0, [pc, #616]	; 10c90 <close@plt+0x724>
   10a24:	ldr	r3, [r6]
   10a28:	mov	r2, #6
   10a2c:	mov	r1, #1
   10a30:	add	r0, pc, r0
   10a34:	bl	104e8 <fwrite@plt>
   10a38:	b	10a08 <close@plt+0x49c>
   10a3c:	ldr	r1, [r6]
   10a40:	mov	r0, #10
   10a44:	bl	10554 <fputc@plt>
   10a48:	cmp	r5, #0
   10a4c:	beq	10a08 <close@plt+0x49c>
   10a50:	mov	r1, #0
   10a54:	add	r9, r9, #1
   10a58:	mov	r6, r1
   10a5c:	add	r0, r6, #32
   10a60:	sub	r1, r5, r1
   10a64:	add	r0, r4, r0
   10a68:	mov	r2, r9
   10a6c:	bl	108e4 <close@plt+0x378>
   10a70:	add	r6, r6, r0
   10a74:	cmp	r5, r6
   10a78:	mov	r1, r6
   10a7c:	bhi	10a5c <close@plt+0x4f0>
   10a80:	b	10a08 <close@plt+0x49c>
   10a84:	mov	r1, r5
   10a88:	add	r0, r4, #32
   10a8c:	bl	104d0 <strndup@plt>
   10a90:	ldr	r1, [pc, #508]	; 10c94 <close@plt+0x728>
   10a94:	add	r1, pc, r1
   10a98:	mov	r5, r0
   10a9c:	mov	r2, r0
   10aa0:	ldr	r0, [r6]
   10aa4:	bl	1053c <fprintf@plt>
   10aa8:	mov	r0, r5
   10aac:	bl	104c4 <free@plt>
   10ab0:	b	10a08 <close@plt+0x49c>
   10ab4:	cmp	r5, #8
   10ab8:	beq	10bc8 <close@plt+0x65c>
   10abc:	ldr	r1, [pc, #468]	; 10c98 <close@plt+0x72c>
   10ac0:	mov	r2, r5
   10ac4:	ldr	r0, [r6]
   10ac8:	add	r1, pc, r1
   10acc:	bl	1053c <fprintf@plt>
   10ad0:	b	10a08 <close@plt+0x49c>
   10ad4:	cmp	r5, #8
   10ad8:	beq	10b74 <close@plt+0x608>
   10adc:	ldr	r1, [pc, #440]	; 10c9c <close@plt+0x730>
   10ae0:	mov	r2, r5
   10ae4:	ldr	r0, [r6]
   10ae8:	add	r1, pc, r1
   10aec:	bl	1053c <fprintf@plt>
   10af0:	b	10a08 <close@plt+0x49c>
   10af4:	ldr	r3, [pc, #420]	; 10ca0 <close@plt+0x734>
   10af8:	ldr	r0, [pc, #420]	; 10ca4 <close@plt+0x738>
   10afc:	mov	r2, #11
   10b00:	ldr	r3, [sl, r3]
   10b04:	mov	r1, #1
   10b08:	add	r0, pc, r0
   10b0c:	ldr	r3, [r3]
   10b10:	bl	104e8 <fwrite@plt>
   10b14:	b	10a08 <close@plt+0x49c>
   10b18:	ldrb	r0, [r4, #37]	; 0x25
   10b1c:	ldrb	r2, [r4, #33]	; 0x21
   10b20:	ldrb	r1, [r4, #36]	; 0x24
   10b24:	ldrb	r3, [r4, #32]
   10b28:	ldrb	lr, [r4, #38]	; 0x26
   10b2c:	ldrb	ip, [r4, #34]	; 0x22
   10b30:	orr	r1, r1, r0, lsl #8
   10b34:	ldrb	r0, [r4, #39]	; 0x27
   10b38:	orr	r3, r3, r2, lsl #8
   10b3c:	ldrb	r2, [r4, #35]	; 0x23
   10b40:	orr	r1, r1, lr, lsl #16
   10b44:	orr	r1, r1, r0, lsl #24
   10b48:	orr	r3, r3, ip, lsl #16
   10b4c:	orr	r3, r3, r2, lsl #24
   10b50:	rev	r8, r1
   10b54:	ldr	r1, [pc, #332]	; 10ca8 <close@plt+0x73c>
   10b58:	rev	r9, r3
   10b5c:	ldr	r0, [r6]
   10b60:	mov	r2, r8
   10b64:	mov	r3, r9
   10b68:	add	r1, pc, r1
   10b6c:	bl	1053c <fprintf@plt>
   10b70:	b	10a08 <close@plt+0x49c>
   10b74:	ldrb	r1, [r4, #37]	; 0x25
   10b78:	ldrb	r0, [r4, #33]	; 0x21
   10b7c:	ldrb	r2, [r4, #36]	; 0x24
   10b80:	ldrb	r3, [r4, #32]
   10b84:	ldrb	ip, [r4, #38]	; 0x26
   10b88:	ldrb	lr, [r4, #34]	; 0x22
   10b8c:	orr	r2, r2, r1, lsl #8
   10b90:	ldrb	r1, [r4, #39]	; 0x27
   10b94:	orr	r3, r3, r0, lsl #8
   10b98:	ldrb	r0, [r4, #35]	; 0x23
   10b9c:	orr	r2, r2, ip, lsl #16
   10ba0:	orr	r3, r3, lr, lsl #16
   10ba4:	orr	r2, r2, r1, lsl #24
   10ba8:	ldr	r1, [pc, #252]	; 10cac <close@plt+0x740>
   10bac:	orr	r3, r3, r0, lsl #24
   10bb0:	rev	r3, r3
   10bb4:	ldr	r0, [r6]
   10bb8:	rev	r2, r2
   10bbc:	add	r1, pc, r1
   10bc0:	bl	1053c <fprintf@plt>
   10bc4:	b	10a08 <close@plt+0x49c>
   10bc8:	ldrb	r1, [r4, #37]	; 0x25
   10bcc:	ldrb	r0, [r4, #33]	; 0x21
   10bd0:	ldrb	r2, [r4, #36]	; 0x24
   10bd4:	ldrb	r3, [r4, #32]
   10bd8:	ldrb	ip, [r4, #38]	; 0x26
   10bdc:	ldrb	lr, [r4, #34]	; 0x22
   10be0:	orr	r2, r2, r1, lsl #8
   10be4:	ldrb	r1, [r4, #39]	; 0x27
   10be8:	orr	r3, r3, r0, lsl #8
   10bec:	ldrb	r0, [r4, #35]	; 0x23
   10bf0:	orr	r2, r2, ip, lsl #16
   10bf4:	orr	r3, r3, lr, lsl #16
   10bf8:	orr	r2, r2, r1, lsl #24
   10bfc:	ldr	r1, [pc, #172]	; 10cb0 <close@plt+0x744>
   10c00:	orr	r3, r3, r0, lsl #24
   10c04:	rev	r3, r3
   10c08:	ldr	r0, [r6]
   10c0c:	rev	r2, r2
   10c10:	add	r1, pc, r1
   10c14:	bl	1053c <fprintf@plt>
   10c18:	b	10a08 <close@plt+0x49c>
   10c1c:	ldr	r3, [pc, #88]	; 10c7c <close@plt+0x710>
   10c20:	mov	ip, #0
   10c24:	mov	r2, r5
   10c28:	ldr	r0, [sl, r3]
   10c2c:	str	r1, [sp]
   10c30:	ldr	r1, [pc, #124]	; 10cb4 <close@plt+0x748>
   10c34:	ldr	r0, [r0]
   10c38:	mov	r3, ip
   10c3c:	str	ip, [sp, #4]
   10c40:	add	r1, pc, r1
   10c44:	bl	1053c <fprintf@plt>
   10c48:	mov	r0, #1
   10c4c:	bl	10524 <exit@plt>
   10c50:	ldr	r3, [pc, #36]	; 10c7c <close@plt+0x710>
   10c54:	ldr	r0, [pc, #92]	; 10cb8 <close@plt+0x74c>
   10c58:	mov	r2, #39	; 0x27
   10c5c:	ldr	r3, [sl, r3]
   10c60:	mov	r1, #1
   10c64:	add	r0, pc, r0
   10c68:	ldr	r3, [r3]
   10c6c:	bl	104e8 <fwrite@plt>
   10c70:	mov	r0, #1
   10c74:	bl	10524 <exit@plt>
   10c78:	andeq	r0, r1, r4, lsl #14
   10c7c:	andeq	r0, r0, r0, asr r0
   10c80:	andeq	r0, r0, r4, asr #8
   10c84:	andeq	r0, r0, r8, asr #8
   10c88:	ldrdeq	r0, [r0], -r4
   10c8c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10c90:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10c94:	andeq	r0, r0, r4, ror #6
   10c98:	andeq	r0, r0, r8, lsl #6
   10c9c:	strdeq	r0, [r0], -r8
   10ca0:	andeq	r0, r0, r8, asr #32
   10ca4:	andeq	r0, r0, r0, lsl #6
   10ca8:	andeq	r0, r0, r0, lsl #5
   10cac:	andeq	r0, r0, ip, lsl r2
   10cb0:			; <UNDEFINED> instruction: 0x000001b8
   10cb4:	andeq	r0, r0, r4, lsr #2
   10cb8:	ldrdeq	r0, [r0], -r8
   10cbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10cc0:	mov	r7, r0
   10cc4:	ldr	r6, [pc, #72]	; 10d14 <close@plt+0x7a8>
   10cc8:	ldr	r5, [pc, #72]	; 10d18 <close@plt+0x7ac>
   10ccc:	add	r6, pc, r6
   10cd0:	add	r5, pc, r5
   10cd4:	sub	r6, r6, r5
   10cd8:	mov	r8, r1
   10cdc:	mov	r9, r2
   10ce0:	bl	104a4 <free@plt-0x20>
   10ce4:	asrs	r6, r6, #2
   10ce8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cec:	mov	r4, #0
   10cf0:	add	r4, r4, #1
   10cf4:	ldr	r3, [r5], #4
   10cf8:	mov	r2, r9
   10cfc:	mov	r1, r8
   10d00:	mov	r0, r7
   10d04:	blx	r3
   10d08:	cmp	r6, r4
   10d0c:	bne	10cf0 <close@plt+0x784>
   10d10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d14:	andeq	r0, r1, ip, lsr r2
   10d18:	andeq	r0, r1, r4, lsr r2
   10d1c:	bx	lr

Disassembly of section .fini:

00010d20 <.fini>:
   10d20:	push	{r3, lr}
   10d24:	pop	{r3, pc}
