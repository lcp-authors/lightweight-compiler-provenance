
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010680 <.init>:
   10680:	push	{r3, lr}
   10684:	bl	10f10 <sprintf@plt+0x774>
   10688:	pop	{r3, pc}

Disassembly of section .plt:

0001068c <open@plt-0x14>:
   1068c:	push	{lr}		; (str lr, [sp, #-4]!)
   10690:	ldr	lr, [pc, #4]	; 1069c <open@plt-0x4>
   10694:	add	lr, pc, lr
   10698:	ldr	pc, [lr, #8]!
   1069c:	andeq	r1, r1, r4, ror #18

000106a0 <open@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2404]!	; 0x964

000106ac <abort@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2396]!	; 0x95c

000106b8 <srand@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2388]!	; 0x954

000106c4 <__libc_start_main@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2380]!	; 0x94c

000106d0 <__gmon_start__@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2372]!	; 0x944

000106dc <getpass@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2364]!	; 0x93c

000106e8 <calloc@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2356]!	; 0x934

000106f4 <free@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2348]!	; 0x92c

00010700 <read@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2340]!	; 0x924

0001070c <strlen@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2332]!	; 0x91c

00010718 <getopt@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2324]!	; 0x914

00010724 <strtol@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2316]!	; 0x90c

00010730 <printf@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2308]!	; 0x904

0001073c <fwrite@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2300]!	; 0x8fc

00010748 <time@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2292]!	; 0x8f4

00010754 <strdup@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2284]!	; 0x8ec

00010760 <rb_crypt@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2276]!	; 0x8e4

0001076c <puts@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2268]!	; 0x8dc

00010778 <rand@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2260]!	; 0x8d4

00010784 <strcmp@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010790 <exit@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2244]!	; 0x8c4

0001079c <sprintf@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2236]!	; 0x8bc

Disassembly of section .text:

000107a8 <.text>:
   107a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107ac:	mov	r5, #0
   107b0:	ldr	r6, [pc, #1640]	; 10e20 <sprintf@plt+0x684>
   107b4:	ldr	r9, [pc, #1640]	; 10e24 <sprintf@plt+0x688>
   107b8:	sub	sp, sp, #28
   107bc:	mov	r8, r0
   107c0:	mov	r7, r1
   107c4:	mov	r4, r5
   107c8:	mov	fp, r5
   107cc:	mov	sl, #10
   107d0:	str	r5, [sp, #4]
   107d4:	str	r5, [sp, #12]
   107d8:	str	r5, [sp, #8]
   107dc:	mov	r2, r6
   107e0:	mov	r1, r7
   107e4:	mov	r0, r8
   107e8:	bl	10718 <getopt@plt>
   107ec:	cmn	r0, #1
   107f0:	beq	10a24 <sprintf@plt+0x288>
   107f4:	sub	r3, r0, #63	; 0x3f
   107f8:	cmp	r3, #58	; 0x3a
   107fc:	ldrls	pc, [pc, r3, lsl #2]
   10800:	b	10a14 <sprintf@plt+0x278>
   10804:	ldrdeq	r0, [r1], -r4
   10808:	andeq	r0, r1, r4, lsl sl
   1080c:	andeq	r0, r1, r4, lsl sl
   10810:	andeq	r0, r1, r4, lsl sl
   10814:	andeq	r0, r1, r4, lsl sl
   10818:	andeq	r0, r1, r4, lsl sl
   1081c:	andeq	r0, r1, r4, lsl sl
   10820:	andeq	r0, r1, r4, lsl sl
   10824:	andeq	r0, r1, r4, lsl sl
   10828:	andeq	r0, r1, r4, lsl sl
   1082c:	andeq	r0, r1, r4, lsl sl
   10830:	andeq	r0, r1, r4, lsl sl
   10834:	andeq	r0, r1, r4, lsl sl
   10838:	andeq	r0, r1, r4, lsl sl
   1083c:	andeq	r0, r1, r4, lsl sl
   10840:	andeq	r0, r1, r4, lsl sl
   10844:	andeq	r0, r1, r4, lsl sl
   10848:	andeq	r0, r1, r4, lsl sl
   1084c:	andeq	r0, r1, r4, lsl sl
   10850:	andeq	r0, r1, r4, lsl sl
   10854:	andeq	r0, r1, r4, lsl sl
   10858:	andeq	r0, r1, r4, lsl sl
   1085c:	andeq	r0, r1, r4, lsl sl
   10860:	andeq	r0, r1, r4, lsl sl
   10864:	andeq	r0, r1, r4, lsl sl
   10868:	andeq	r0, r1, r4, lsl sl
   1086c:	andeq	r0, r1, r4, lsl sl
   10870:	andeq	r0, r1, r4, lsl sl
   10874:	andeq	r0, r1, r4, lsl sl
   10878:	andeq	r0, r1, r4, lsl sl
   1087c:	andeq	r0, r1, r4, lsl sl
   10880:	andeq	r0, r1, r4, lsl sl
   10884:	andeq	r0, r1, r4, lsl sl
   10888:	andeq	r0, r1, r4, lsl sl
   1088c:	andeq	r0, r1, r4, lsl sl
   10890:	andeq	r0, r1, r8, asr #19
   10894:	andeq	r0, r1, r4, lsl sl
   10898:	andeq	r0, r1, r4, lsl sl
   1089c:	andeq	r0, r1, r4, lsl sl
   108a0:	andeq	r0, r1, r4, lsl sl
   108a4:	andeq	r0, r1, r4, lsl sl
   108a8:	andeq	r0, r1, r0, ror #18
   108ac:	andeq	r0, r1, r4, lsl sl
   108b0:	andeq	r0, r1, r4, lsl sl
   108b4:	andeq	r0, r1, r4, lsl sl
   108b8:	andeq	r0, r1, r4, asr #18
   108bc:	andeq	r0, r1, ip, lsr r9
   108c0:	andeq	r0, r1, r4, lsl sl
   108c4:	andeq	r0, r1, r4, lsl sl
   108c8:	andeq	r0, r1, ip, lsr #18
   108cc:	andeq	r0, r1, r4, lsl sl
   108d0:	andeq	r0, r1, r0, lsl r9
   108d4:	andeq	r0, r1, r0, lsl #18
   108d8:	andeq	r0, r1, r4, lsl sl
   108dc:	andeq	r0, r1, r4, lsl sl
   108e0:	andeq	r0, r1, r4, lsl sl
   108e4:	andeq	r0, r1, r4, lsl sl
   108e8:	strdeq	r0, [r1], -r8
   108ec:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   108f0:	orr	r4, r4, #128	; 0x80
   108f4:	b	107dc <sprintf@plt+0x40>
   108f8:	orr	r4, r4, #64	; 0x40
   108fc:	b	107dc <sprintf@plt+0x40>
   10900:	ldr	r3, [r9]
   10904:	orr	r4, r4, #2
   10908:	str	r3, [sp, #12]
   1090c:	b	107dc <sprintf@plt+0x40>
   10910:	mov	r2, sl
   10914:	mov	r1, fp
   10918:	ldr	r0, [r9]
   1091c:	bl	10724 <strtol@plt>
   10920:	orr	r4, r4, #32
   10924:	mov	r5, r0
   10928:	b	107dc <sprintf@plt+0x40>
   1092c:	ldr	r3, [r9]
   10930:	orr	r4, r4, #4
   10934:	str	r3, [sp, #8]
   10938:	b	107dc <sprintf@plt+0x40>
   1093c:	orr	r4, r4, #1
   10940:	b	107dc <sprintf@plt+0x40>
   10944:	mov	r2, sl
   10948:	mov	r1, fp
   1094c:	ldr	r0, [r9]
   10950:	bl	10724 <strtol@plt>
   10954:	orr	r4, r4, #8
   10958:	str	r0, [sp, #4]
   1095c:	b	107dc <sprintf@plt+0x40>
   10960:	ldr	r0, [pc, #1216]	; 10e28 <sprintf@plt+0x68c>
   10964:	bl	1076c <puts@plt>
   10968:	ldr	r0, [pc, #1212]	; 10e2c <sprintf@plt+0x690>
   1096c:	bl	1076c <puts@plt>
   10970:	ldr	r0, [pc, #1208]	; 10e30 <sprintf@plt+0x694>
   10974:	bl	1076c <puts@plt>
   10978:	ldr	r0, [pc, #1204]	; 10e34 <sprintf@plt+0x698>
   1097c:	bl	1076c <puts@plt>
   10980:	ldr	r0, [pc, #1200]	; 10e38 <sprintf@plt+0x69c>
   10984:	bl	1076c <puts@plt>
   10988:	ldr	r0, [pc, #1196]	; 10e3c <sprintf@plt+0x6a0>
   1098c:	bl	1076c <puts@plt>
   10990:	ldr	r0, [pc, #1192]	; 10e40 <sprintf@plt+0x6a4>
   10994:	bl	1076c <puts@plt>
   10998:	ldr	r0, [pc, #1188]	; 10e44 <sprintf@plt+0x6a8>
   1099c:	bl	1076c <puts@plt>
   109a0:	ldr	r0, [pc, #1184]	; 10e48 <sprintf@plt+0x6ac>
   109a4:	bl	1076c <puts@plt>
   109a8:	ldr	r0, [pc, #1180]	; 10e4c <sprintf@plt+0x6b0>
   109ac:	bl	1076c <puts@plt>
   109b0:	ldr	r0, [pc, #1176]	; 10e50 <sprintf@plt+0x6b4>
   109b4:	bl	1076c <puts@plt>
   109b8:	ldr	r0, [pc, #1172]	; 10e54 <sprintf@plt+0x6b8>
   109bc:	bl	1076c <puts@plt>
   109c0:	mov	r0, #0
   109c4:	bl	10790 <exit@plt>
   109c8:	orr	r4, r4, #16
   109cc:	mov	r5, #4
   109d0:	b	107dc <sprintf@plt+0x40>
   109d4:	ldr	r0, [pc, #1148]	; 10e58 <sprintf@plt+0x6bc>
   109d8:	bl	1076c <puts@plt>
   109dc:	ldr	r0, [pc, #1144]	; 10e5c <sprintf@plt+0x6c0>
   109e0:	bl	1076c <puts@plt>
   109e4:	ldr	r0, [pc, #1140]	; 10e60 <sprintf@plt+0x6c4>
   109e8:	bl	1076c <puts@plt>
   109ec:	ldr	r0, [pc, #1136]	; 10e64 <sprintf@plt+0x6c8>
   109f0:	bl	1076c <puts@plt>
   109f4:	ldr	r0, [pc, #1132]	; 10e68 <sprintf@plt+0x6cc>
   109f8:	bl	1076c <puts@plt>
   109fc:	ldr	r0, [pc, #1128]	; 10e6c <sprintf@plt+0x6d0>
   10a00:	bl	1076c <puts@plt>
   10a04:	ldr	r0, [pc, #1124]	; 10e70 <sprintf@plt+0x6d4>
   10a08:	bl	1076c <puts@plt>
   10a0c:	mov	r0, #0
   10a10:	bl	10790 <exit@plt>
   10a14:	mov	r1, r0
   10a18:	ldr	r0, [pc, #1108]	; 10e74 <sprintf@plt+0x6d8>
   10a1c:	bl	10730 <printf@plt>
   10a20:	b	107dc <sprintf@plt+0x40>
   10a24:	tst	r4, #1
   10a28:	ldr	r3, [sp, #4]
   10a2c:	beq	10a7c <sprintf@plt+0x2e0>
   10a30:	cmp	r3, #0
   10a34:	bne	10b88 <sprintf@plt+0x3ec>
   10a38:	tst	r4, #2
   10a3c:	moveq	r3, #8
   10a40:	streq	r3, [sp, #4]
   10a44:	beq	10b9c <sprintf@plt+0x400>
   10a48:	ldr	r5, [sp, #12]
   10a4c:	cmp	r5, #0
   10a50:	beq	10de0 <sprintf@plt+0x644>
   10a54:	mov	r0, r5
   10a58:	bl	1070c <strlen@plt>
   10a5c:	cmp	r0, #16
   10a60:	bhi	10de0 <sprintf@plt+0x644>
   10a64:	mov	r2, r5
   10a68:	ldr	r1, [pc, #1032]	; 10e78 <sprintf@plt+0x6dc>
   10a6c:	ldr	r0, [pc, #1032]	; 10e7c <sprintf@plt+0x6e0>
   10a70:	bl	1079c <sprintf@plt>
   10a74:	ldr	r5, [pc, #1024]	; 10e7c <sprintf@plt+0x6e0>
   10a78:	b	10ae4 <sprintf@plt+0x348>
   10a7c:	tst	r4, #16
   10a80:	bne	10b1c <sprintf@plt+0x380>
   10a84:	tst	r4, #64	; 0x40
   10a88:	beq	10c44 <sprintf@plt+0x4a8>
   10a8c:	cmp	r3, #0
   10a90:	beq	10d18 <sprintf@plt+0x57c>
   10a94:	ands	r5, r4, #2
   10a98:	bne	10d28 <sprintf@plt+0x58c>
   10a9c:	ldr	r3, [sp, #4]
   10aa0:	cmp	r3, #16
   10aa4:	bgt	10df0 <sprintf@plt+0x654>
   10aa8:	ldr	r5, [pc, #976]	; 10e80 <sprintf@plt+0x6e4>
   10aac:	ldr	r7, [sp, #4]
   10ab0:	mov	r3, #53	; 0x35
   10ab4:	mov	r6, #36	; 0x24
   10ab8:	strb	r3, [r5, #57]	; 0x39
   10abc:	add	sl, r5, r7
   10ac0:	add	r0, r5, #59	; 0x3b
   10ac4:	strb	r6, [r5, #56]	; 0x38
   10ac8:	strb	r6, [r5, #58]	; 0x3a
   10acc:	mov	r1, r7
   10ad0:	add	r5, r5, #56	; 0x38
   10ad4:	bl	1105c <sprintf@plt+0x8c0>
   10ad8:	mov	r3, #0
   10adc:	strb	r6, [sl, #59]	; 0x3b
   10ae0:	strb	r3, [sl, #60]	; 0x3c
   10ae4:	tst	r4, #4
   10ae8:	beq	10bd8 <sprintf@plt+0x43c>
   10aec:	ldr	r3, [sp, #8]
   10af0:	cmp	r3, #0
   10af4:	beq	10cf8 <sprintf@plt+0x55c>
   10af8:	mov	r1, r5
   10afc:	ldr	r0, [sp, #8]
   10b00:	bl	10760 <rb_crypt@plt>
   10b04:	mov	r4, r0
   10b08:	mov	r0, r4
   10b0c:	bl	1076c <puts@plt>
   10b10:	mov	r0, #0
   10b14:	add	sp, sp, #28
   10b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b1c:	cmp	r3, #0
   10b20:	beq	10ca0 <sprintf@plt+0x504>
   10b24:	ands	r6, r4, #2
   10b28:	bne	10cb0 <sprintf@plt+0x514>
   10b2c:	ldr	r3, [sp, #4]
   10b30:	cmp	r3, #22
   10b34:	bgt	10e00 <sprintf@plt+0x664>
   10b38:	ldr	r6, [pc, #832]	; 10e80 <sprintf@plt+0x6e4>
   10b3c:	mov	r2, r5
   10b40:	ldr	r1, [pc, #828]	; 10e84 <sprintf@plt+0x6e8>
   10b44:	add	r0, sp, #20
   10b48:	bl	1079c <sprintf@plt>
   10b4c:	add	r2, sp, #20
   10b50:	ldr	r1, [pc, #816]	; 10e88 <sprintf@plt+0x6ec>
   10b54:	add	r0, r6, #24
   10b58:	bl	1079c <sprintf@plt>
   10b5c:	ldr	r5, [sp, #4]
   10b60:	add	r0, r6, #31
   10b64:	add	sl, r6, r5
   10b68:	mov	r1, r5
   10b6c:	bl	1105c <sprintf@plt+0x8c0>
   10b70:	mov	r2, #36	; 0x24
   10b74:	mov	r3, #0
   10b78:	add	r5, r6, #24
   10b7c:	strb	r2, [sl, #31]
   10b80:	strb	r3, [sl, #32]
   10b84:	b	10ae4 <sprintf@plt+0x348>
   10b88:	ands	r5, r4, #2
   10b8c:	bne	10a48 <sprintf@plt+0x2ac>
   10b90:	ldr	r3, [sp, #4]
   10b94:	cmp	r3, #16
   10b98:	bgt	10e10 <sprintf@plt+0x674>
   10b9c:	ldr	r5, [pc, #732]	; 10e80 <sprintf@plt+0x6e4>
   10ba0:	ldr	r7, [sp, #4]
   10ba4:	mov	r3, #49	; 0x31
   10ba8:	mov	r6, #36	; 0x24
   10bac:	add	sl, r5, r7
   10bb0:	add	r0, r5, #3
   10bb4:	mov	r1, r7
   10bb8:	strb	r3, [r5, #1]
   10bbc:	strb	r6, [r5]
   10bc0:	strb	r6, [r5, #2]
   10bc4:	bl	1105c <sprintf@plt+0x8c0>
   10bc8:	mov	r3, #0
   10bcc:	strb	r6, [sl, #3]
   10bd0:	strb	r3, [sl, #4]
   10bd4:	b	10ae4 <sprintf@plt+0x348>
   10bd8:	ldr	r0, [pc, #684]	; 10e8c <sprintf@plt+0x6f0>
   10bdc:	bl	106dc <getpass@plt>
   10be0:	mov	r1, r5
   10be4:	bl	10760 <rb_crypt@plt>
   10be8:	cmp	r0, #0
   10bec:	beq	10da0 <sprintf@plt+0x604>
   10bf0:	bl	10754 <strdup@plt>
   10bf4:	mov	r6, r0
   10bf8:	ldr	r0, [pc, #656]	; 10e90 <sprintf@plt+0x6f4>
   10bfc:	bl	106dc <getpass@plt>
   10c00:	mov	r1, r5
   10c04:	bl	10760 <rb_crypt@plt>
   10c08:	mov	r4, r6
   10c0c:	subs	r1, r0, #0
   10c10:	beq	10da0 <sprintf@plt+0x604>
   10c14:	mov	r0, r6
   10c18:	bl	10784 <strcmp@plt>
   10c1c:	cmp	r0, #0
   10c20:	beq	10b08 <sprintf@plt+0x36c>
   10c24:	ldr	r3, [pc, #616]	; 10e94 <sprintf@plt+0x6f8>
   10c28:	mov	r2, #23
   10c2c:	mov	r1, #1
   10c30:	ldr	r3, [r3]
   10c34:	ldr	r0, [pc, #604]	; 10e98 <sprintf@plt+0x6fc>
   10c38:	bl	1073c <fwrite@plt>
   10c3c:	mov	r0, #1
   10c40:	b	10b14 <sprintf@plt+0x378>
   10c44:	cmp	r3, #0
   10c48:	beq	10d5c <sprintf@plt+0x5c0>
   10c4c:	ands	r5, r4, #2
   10c50:	bne	10d6c <sprintf@plt+0x5d0>
   10c54:	ldr	r3, [sp, #4]
   10c58:	cmp	r3, #16
   10c5c:	bgt	10dc0 <sprintf@plt+0x624>
   10c60:	ldr	r6, [pc, #536]	; 10e80 <sprintf@plt+0x6e4>
   10c64:	ldr	r8, [sp, #4]
   10c68:	mov	r3, #54	; 0x36
   10c6c:	mov	r7, #36	; 0x24
   10c70:	strb	r3, [r6, #105]	; 0x69
   10c74:	add	r0, r6, #107	; 0x6b
   10c78:	strb	r7, [r6, #104]	; 0x68
   10c7c:	strb	r7, [r6, #106]	; 0x6a
   10c80:	mov	r1, r8
   10c84:	add	r5, r6, #104	; 0x68
   10c88:	add	r6, r6, r8
   10c8c:	bl	1105c <sprintf@plt+0x8c0>
   10c90:	mov	r3, #0
   10c94:	strb	r7, [r6, #107]	; 0x6b
   10c98:	strb	r3, [r6, #108]	; 0x6c
   10c9c:	b	10ae4 <sprintf@plt+0x348>
   10ca0:	tst	r4, #2
   10ca4:	moveq	r3, #22
   10ca8:	streq	r3, [sp, #4]
   10cac:	beq	10b38 <sprintf@plt+0x39c>
   10cb0:	ldr	r6, [sp, #12]
   10cb4:	cmp	r6, #0
   10cb8:	beq	10dd0 <sprintf@plt+0x634>
   10cbc:	mov	r0, r6
   10cc0:	bl	1070c <strlen@plt>
   10cc4:	cmp	r0, #22
   10cc8:	bhi	10dd0 <sprintf@plt+0x634>
   10ccc:	mov	r2, r5
   10cd0:	ldr	r1, [pc, #428]	; 10e84 <sprintf@plt+0x6e8>
   10cd4:	add	r0, sp, #20
   10cd8:	bl	1079c <sprintf@plt>
   10cdc:	mov	r3, r6
   10ce0:	add	r2, sp, #20
   10ce4:	ldr	r1, [pc, #432]	; 10e9c <sprintf@plt+0x700>
   10ce8:	ldr	r0, [pc, #432]	; 10ea0 <sprintf@plt+0x704>
   10cec:	bl	1079c <sprintf@plt>
   10cf0:	ldr	r5, [pc, #424]	; 10ea0 <sprintf@plt+0x704>
   10cf4:	b	10ae4 <sprintf@plt+0x348>
   10cf8:	ldr	r3, [pc, #404]	; 10e94 <sprintf@plt+0x6f8>
   10cfc:	mov	r2, #30
   10d00:	mov	r1, #1
   10d04:	ldr	r3, [r3]
   10d08:	ldr	r0, [pc, #404]	; 10ea4 <sprintf@plt+0x708>
   10d0c:	bl	1073c <fwrite@plt>
   10d10:	mov	r0, #1
   10d14:	b	10b14 <sprintf@plt+0x378>
   10d18:	tst	r4, #2
   10d1c:	moveq	r3, #16
   10d20:	streq	r3, [sp, #4]
   10d24:	beq	10aa8 <sprintf@plt+0x30c>
   10d28:	ldr	r5, [sp, #12]
   10d2c:	cmp	r5, #0
   10d30:	beq	10de0 <sprintf@plt+0x644>
   10d34:	mov	r0, r5
   10d38:	bl	1070c <strlen@plt>
   10d3c:	cmp	r0, #16
   10d40:	bhi	10de0 <sprintf@plt+0x644>
   10d44:	mov	r2, r5
   10d48:	ldr	r1, [pc, #344]	; 10ea8 <sprintf@plt+0x70c>
   10d4c:	ldr	r0, [pc, #344]	; 10eac <sprintf@plt+0x710>
   10d50:	bl	1079c <sprintf@plt>
   10d54:	ldr	r5, [pc, #336]	; 10eac <sprintf@plt+0x710>
   10d58:	b	10ae4 <sprintf@plt+0x348>
   10d5c:	tst	r4, #2
   10d60:	moveq	r3, #16
   10d64:	streq	r3, [sp, #4]
   10d68:	beq	10c60 <sprintf@plt+0x4c4>
   10d6c:	ldr	r5, [sp, #12]
   10d70:	cmp	r5, #0
   10d74:	beq	10de0 <sprintf@plt+0x644>
   10d78:	mov	r0, r5
   10d7c:	bl	1070c <strlen@plt>
   10d80:	cmp	r0, #16
   10d84:	bhi	10de0 <sprintf@plt+0x644>
   10d88:	mov	r2, r5
   10d8c:	ldr	r1, [pc, #284]	; 10eb0 <sprintf@plt+0x714>
   10d90:	ldr	r0, [pc, #284]	; 10eb4 <sprintf@plt+0x718>
   10d94:	bl	1079c <sprintf@plt>
   10d98:	ldr	r5, [pc, #276]	; 10eb4 <sprintf@plt+0x718>
   10d9c:	b	10ae4 <sprintf@plt+0x348>
   10da0:	ldr	r3, [pc, #236]	; 10e94 <sprintf@plt+0x6f8>
   10da4:	mov	r2, #18
   10da8:	mov	r1, #1
   10dac:	ldr	r3, [r3]
   10db0:	ldr	r0, [pc, #256]	; 10eb8 <sprintf@plt+0x71c>
   10db4:	bl	1073c <fwrite@plt>
   10db8:	mov	r0, #1
   10dbc:	b	10b14 <sprintf@plt+0x378>
   10dc0:	ldr	r0, [pc, #244]	; 10ebc <sprintf@plt+0x720>
   10dc4:	bl	1076c <puts@plt>
   10dc8:	mov	r0, r5
   10dcc:	bl	10790 <exit@plt>
   10dd0:	ldr	r0, [pc, #232]	; 10ec0 <sprintf@plt+0x724>
   10dd4:	bl	1076c <puts@plt>
   10dd8:	mov	r0, #1
   10ddc:	bl	10790 <exit@plt>
   10de0:	ldr	r0, [pc, #220]	; 10ec4 <sprintf@plt+0x728>
   10de4:	bl	1076c <puts@plt>
   10de8:	mov	r0, #1
   10dec:	bl	10790 <exit@plt>
   10df0:	ldr	r0, [pc, #208]	; 10ec8 <sprintf@plt+0x72c>
   10df4:	bl	1076c <puts@plt>
   10df8:	mov	r0, r5
   10dfc:	bl	10790 <exit@plt>
   10e00:	ldr	r0, [pc, #196]	; 10ecc <sprintf@plt+0x730>
   10e04:	bl	1076c <puts@plt>
   10e08:	mov	r0, r6
   10e0c:	bl	10790 <exit@plt>
   10e10:	ldr	r0, [pc, #184]	; 10ed0 <sprintf@plt+0x734>
   10e14:	bl	1076c <puts@plt>
   10e18:	mov	r0, r5
   10e1c:	bl	10790 <exit@plt>
   10e20:	andeq	r1, r1, r8, asr #10
   10e24:	andeq	r2, r2, r8, ror r0
   10e28:	andeq	r1, r1, r4, asr #3
   10e2c:	andeq	r1, r1, r0, lsl r2
   10e30:	andeq	r1, r1, r0, lsr r2
   10e34:	andeq	r1, r1, r0, asr r2
   10e38:	andeq	r1, r1, ip, ror #4
   10e3c:	andeq	r1, r1, ip, lsl #5
   10e40:	andeq	r1, r1, r4, asr #5
   10e44:	strdeq	r1, [r1], -ip
   10e48:	andeq	r1, r1, r8, lsr #6
   10e4c:	andeq	r1, r1, r0, ror #6
   10e50:	andeq	r1, r1, ip, ror r3
   10e54:	andeq	r1, r1, r4, lsr #7
   10e58:	andeq	r1, r1, r8, asr #7
   10e5c:	andeq	r1, r1, ip, ror #7
   10e60:	andeq	r1, r1, r0, lsr r4
   10e64:	andeq	r1, r1, r0, ror r4
   10e68:			; <UNDEFINED> instruction: 0x000114b0
   10e6c:	strdeq	r1, [r1], -r0
   10e70:	andeq	r1, r1, r8, lsl r5
   10e74:	andeq	r1, r1, r0, lsr r5
   10e78:	andeq	r1, r1, r8, asr r5
   10e7c:	andeq	r2, r2, r0, lsl #2
   10e80:	andeq	r2, r2, r0, lsl #1
   10e84:	andeq	r1, r1, r0, asr #11
   10e88:	andeq	r1, r1, r8, lsr r6
   10e8c:	andeq	r1, r1, r8, lsr #13
   10e90:	andeq	r1, r1, r8, asr #13
   10e94:	andeq	r2, r2, r0, ror r0
   10e98:	ldrdeq	r1, [r1], -r0
   10e9c:	andeq	r1, r1, r8, asr #11
   10ea0:	andeq	r2, r2, r8, lsl r1
   10ea4:	andeq	r1, r1, r8, lsl #13
   10ea8:	andeq	r1, r1, r0, asr #12
   10eac:	andeq	r2, r2, r8, lsr r1
   10eb0:	andeq	r1, r1, r4, ror #12
   10eb4:	ldrdeq	r2, [r2], -r0
   10eb8:			; <UNDEFINED> instruction: 0x000116b4
   10ebc:	andeq	r1, r1, ip, ror #12
   10ec0:	ldrdeq	r1, [r1], -r4
   10ec4:	andeq	r1, r1, r0, ror #10
   10ec8:	andeq	r1, r1, r8, asr #12
   10ecc:	andeq	r1, r1, r8, lsl r6
   10ed0:	andeq	r1, r1, r4, lsr #11
   10ed4:	mov	fp, #0
   10ed8:	mov	lr, #0
   10edc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ee0:	mov	r2, sp
   10ee4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ee8:	push	{r0}		; (str r0, [sp, #-4]!)
   10eec:	ldr	ip, [pc, #16]	; 10f04 <sprintf@plt+0x768>
   10ef0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ef4:	ldr	r0, [pc, #12]	; 10f08 <sprintf@plt+0x76c>
   10ef8:	ldr	r3, [pc, #12]	; 10f0c <sprintf@plt+0x770>
   10efc:	bl	106c4 <__libc_start_main@plt>
   10f00:	bl	106ac <abort@plt>
   10f04:	andeq	r1, r1, r4, ror #2
   10f08:	andeq	r0, r1, r8, lsr #15
   10f0c:	andeq	r1, r1, r4, lsl #2
   10f10:	ldr	r3, [pc, #20]	; 10f2c <sprintf@plt+0x790>
   10f14:	ldr	r2, [pc, #20]	; 10f30 <sprintf@plt+0x794>
   10f18:	add	r3, pc, r3
   10f1c:	ldr	r2, [r3, r2]
   10f20:	cmp	r2, #0
   10f24:	bxeq	lr
   10f28:	b	106d0 <__gmon_start__@plt>
   10f2c:	andeq	r1, r1, r0, ror #1
   10f30:	andeq	r0, r0, r4, rrx
   10f34:	ldr	r3, [pc, #28]	; 10f58 <sprintf@plt+0x7bc>
   10f38:	ldr	r0, [pc, #28]	; 10f5c <sprintf@plt+0x7c0>
   10f3c:	sub	r3, r3, r0
   10f40:	cmp	r3, #6
   10f44:	bxls	lr
   10f48:	ldr	r3, [pc, #16]	; 10f60 <sprintf@plt+0x7c4>
   10f4c:	cmp	r3, #0
   10f50:	bxeq	lr
   10f54:	bx	r3
   10f58:	andeq	r2, r2, r3, ror r0
   10f5c:	andeq	r2, r2, r0, ror r0
   10f60:	andeq	r0, r0, r0
   10f64:	ldr	r1, [pc, #36]	; 10f90 <sprintf@plt+0x7f4>
   10f68:	ldr	r0, [pc, #36]	; 10f94 <sprintf@plt+0x7f8>
   10f6c:	sub	r1, r1, r0
   10f70:	asr	r1, r1, #2
   10f74:	add	r1, r1, r1, lsr #31
   10f78:	asrs	r1, r1, #1
   10f7c:	bxeq	lr
   10f80:	ldr	r3, [pc, #16]	; 10f98 <sprintf@plt+0x7fc>
   10f84:	cmp	r3, #0
   10f88:	bxeq	lr
   10f8c:	bx	r3
   10f90:	andeq	r2, r2, r0, ror r0
   10f94:	andeq	r2, r2, r0, ror r0
   10f98:	andeq	r0, r0, r0
   10f9c:	push	{r4, lr}
   10fa0:	ldr	r4, [pc, #24]	; 10fc0 <sprintf@plt+0x824>
   10fa4:	ldrb	r3, [r4]
   10fa8:	cmp	r3, #0
   10fac:	popne	{r4, pc}
   10fb0:	bl	10f34 <sprintf@plt+0x798>
   10fb4:	mov	r3, #1
   10fb8:	strb	r3, [r4]
   10fbc:	pop	{r4, pc}
   10fc0:	andeq	r2, r2, ip, ror r0
   10fc4:	ldr	r0, [pc, #40]	; 10ff4 <sprintf@plt+0x858>
   10fc8:	ldr	r3, [r0]
   10fcc:	cmp	r3, #0
   10fd0:	bne	10fd8 <sprintf@plt+0x83c>
   10fd4:	b	10f64 <sprintf@plt+0x7c8>
   10fd8:	ldr	r3, [pc, #24]	; 10ff8 <sprintf@plt+0x85c>
   10fdc:	cmp	r3, #0
   10fe0:	beq	10fd4 <sprintf@plt+0x838>
   10fe4:	push	{r4, lr}
   10fe8:	blx	r3
   10fec:	pop	{r4, lr}
   10ff0:	b	10f64 <sprintf@plt+0x7c8>
   10ff4:	strdeq	r1, [r2], -ip
   10ff8:	andeq	r0, r0, r0
   10ffc:	push	{r4, r5, r6, r7, r8, lr}
   11000:	mov	r6, r0
   11004:	mov	r0, #0
   11008:	mov	r4, r1
   1100c:	bl	10748 <time@plt>
   11010:	bl	106b8 <srand@plt>
   11014:	cmp	r4, #0
   11018:	ble	11050 <sprintf@plt+0x8b4>
   1101c:	ldr	r5, [pc, #52]	; 11058 <sprintf@plt+0x8bc>
   11020:	add	r4, r6, r4
   11024:	mov	r7, r6
   11028:	bl	10778 <rand@plt>
   1102c:	asr	r3, r0, #31
   11030:	lsr	r3, r3, #26
   11034:	add	r0, r0, r3
   11038:	and	r0, r0, #63	; 0x3f
   1103c:	sub	r0, r0, r3
   11040:	ldrb	r3, [r5, r0]
   11044:	strb	r3, [r7], #1
   11048:	cmp	r7, r4
   1104c:	bne	11028 <sprintf@plt+0x88c>
   11050:	mov	r0, r6
   11054:	pop	{r4, r5, r6, r7, r8, pc}
   11058:	andeq	r1, r1, r4, ror r1
   1105c:	push	{r4, r5, r6, r7, r8, lr}
   11060:	mov	r4, r1
   11064:	mov	r5, r0
   11068:	mov	r1, #0
   1106c:	ldr	r0, [pc, #136]	; 110fc <sprintf@plt+0x960>
   11070:	bl	106a0 <open@plt>
   11074:	mov	r1, r4
   11078:	subs	r7, r0, #0
   1107c:	blt	110f0 <sprintf@plt+0x954>
   11080:	mov	r0, #1
   11084:	bl	106e8 <calloc@plt>
   11088:	mov	r2, r4
   1108c:	mov	r1, r0
   11090:	mov	r6, r0
   11094:	mov	r0, r7
   11098:	bl	10700 <read@plt>
   1109c:	cmp	r4, r0
   110a0:	bne	110e4 <sprintf@plt+0x948>
   110a4:	cmp	r4, #0
   110a8:	ble	110d4 <sprintf@plt+0x938>
   110ac:	ldr	ip, [pc, #76]	; 11100 <sprintf@plt+0x964>
   110b0:	add	r1, r6, r4
   110b4:	mov	r2, r6
   110b8:	sub	r0, r5, #1
   110bc:	ldrb	r3, [r2], #1
   110c0:	and	r3, r3, #63	; 0x3f
   110c4:	cmp	r1, r2
   110c8:	ldrb	r3, [ip, r3]
   110cc:	strb	r3, [r0, #1]!
   110d0:	bne	110bc <sprintf@plt+0x920>
   110d4:	mov	r0, r6
   110d8:	bl	106f4 <free@plt>
   110dc:	mov	r0, r5
   110e0:	pop	{r4, r5, r6, r7, r8, pc}
   110e4:	mov	r0, r6
   110e8:	bl	106f4 <free@plt>
   110ec:	mov	r1, r4
   110f0:	mov	r0, r5
   110f4:	pop	{r4, r5, r6, r7, r8, lr}
   110f8:	b	10ffc <sprintf@plt+0x860>
   110fc:			; <UNDEFINED> instruction: 0x000111b8
   11100:	andeq	r1, r1, r4, ror r1
   11104:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11108:	mov	r7, r0
   1110c:	ldr	r6, [pc, #72]	; 1115c <sprintf@plt+0x9c0>
   11110:	ldr	r5, [pc, #72]	; 11160 <sprintf@plt+0x9c4>
   11114:	add	r6, pc, r6
   11118:	add	r5, pc, r5
   1111c:	sub	r6, r6, r5
   11120:	mov	r8, r1
   11124:	mov	r9, r2
   11128:	bl	10680 <open@plt-0x20>
   1112c:	asrs	r6, r6, #2
   11130:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11134:	mov	r4, #0
   11138:	add	r4, r4, #1
   1113c:	ldr	r3, [r5], #4
   11140:	mov	r2, r9
   11144:	mov	r1, r8
   11148:	mov	r0, r7
   1114c:	blx	r3
   11150:	cmp	r6, r4
   11154:	bne	11138 <sprintf@plt+0x99c>
   11158:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1115c:	ldrdeq	r0, [r1], -ip
   11160:	ldrdeq	r0, [r1], -r4
   11164:	bx	lr

Disassembly of section .fini:

00011168 <.fini>:
   11168:	push	{r3, lr}
   1116c:	pop	{r3, pc}
