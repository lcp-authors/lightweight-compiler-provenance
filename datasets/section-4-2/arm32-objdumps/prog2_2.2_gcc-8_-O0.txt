
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106ac <.init>:
   106ac:	push	{r3, lr}
   106b0:	bl	107a4 <_start@@Base+0x3c>
   106b4:	pop	{r3, pc}

Disassembly of section .plt:

000106b8 <printf@plt-0x14>:
   106b8:	push	{lr}		; (str lr, [sp, #-4]!)
   106bc:	ldr	lr, [pc, #4]	; 106c8 <printf@plt-0x4>
   106c0:	add	lr, pc, lr
   106c4:	ldr	pc, [lr, #8]!
   106c8:	andeq	r0, r1, r8, lsr r9

000106cc <printf@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2360]!	; 0x938

000106d8 <free@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2352]!	; 0x930

000106e4 <fgets@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2344]!	; 0x928

000106f0 <getchar@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2336]!	; 0x920

000106fc <realloc@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2328]!	; 0x918

00010708 <strcpy@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2320]!	; 0x910

00010714 <puts@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2312]!	; 0x908

00010720 <malloc@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2304]!	; 0x900

0001072c <__libc_start_main@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2296]!	; 0x8f8

00010738 <__gmon_start__@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2288]!	; 0x8f0

00010744 <strlen@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2280]!	; 0x8e8

00010750 <__isoc99_scanf@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2272]!	; 0x8e0

0001075c <abort@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2264]!	; 0x8d8

Disassembly of section .text:

00010768 <_start@@Base>:
   10768:	mov	fp, #0
   1076c:	mov	lr, #0
   10770:	pop	{r1}		; (ldr r1, [sp], #4)
   10774:	mov	r2, sp
   10778:	push	{r2}		; (str r2, [sp, #-4]!)
   1077c:	push	{r0}		; (str r0, [sp, #-4]!)
   10780:	ldr	ip, [pc, #16]	; 10798 <_start@@Base+0x30>
   10784:	push	{ip}		; (str ip, [sp, #-4]!)
   10788:	ldr	r0, [pc, #12]	; 1079c <_start@@Base+0x34>
   1078c:	ldr	r3, [pc, #12]	; 107a0 <_start@@Base+0x38>
   10790:	bl	1072c <__libc_start_main@plt>
   10794:	bl	1075c <abort@plt>
   10798:	andeq	r0, r1, r8, asr fp
   1079c:	andeq	r0, r1, r8, asr r8
   107a0:	strdeq	r0, [r1], -r8
   107a4:	ldr	r3, [pc, #20]	; 107c0 <_start@@Base+0x58>
   107a8:	ldr	r2, [pc, #20]	; 107c4 <_start@@Base+0x5c>
   107ac:	add	r3, pc, r3
   107b0:	ldr	r2, [r3, r2]
   107b4:	cmp	r2, #0
   107b8:	bxeq	lr
   107bc:	b	10738 <__gmon_start__@plt>
   107c0:	andeq	r0, r1, ip, asr #16
   107c4:	andeq	r0, r0, r0, asr #32
   107c8:	ldr	r0, [pc, #24]	; 107e8 <_start@@Base+0x80>
   107cc:	ldr	r3, [pc, #24]	; 107ec <_start@@Base+0x84>
   107d0:	cmp	r3, r0
   107d4:	bxeq	lr
   107d8:	ldr	r3, [pc, #16]	; 107f0 <_start@@Base+0x88>
   107dc:	cmp	r3, #0
   107e0:	bxeq	lr
   107e4:	bx	r3
   107e8:	andeq	r1, r2, r0, asr r0
   107ec:	andeq	r1, r2, r0, asr r0
   107f0:	andeq	r0, r0, r0
   107f4:	ldr	r0, [pc, #36]	; 10820 <_start@@Base+0xb8>
   107f8:	ldr	r1, [pc, #36]	; 10824 <_start@@Base+0xbc>
   107fc:	sub	r1, r1, r0
   10800:	asr	r1, r1, #2
   10804:	add	r1, r1, r1, lsr #31
   10808:	asrs	r1, r1, #1
   1080c:	bxeq	lr
   10810:	ldr	r3, [pc, #16]	; 10828 <_start@@Base+0xc0>
   10814:	cmp	r3, #0
   10818:	bxeq	lr
   1081c:	bx	r3
   10820:	andeq	r1, r2, r0, asr r0
   10824:	andeq	r1, r2, r0, asr r0
   10828:	andeq	r0, r0, r0
   1082c:	push	{r4, lr}
   10830:	ldr	r4, [pc, #24]	; 10850 <_start@@Base+0xe8>
   10834:	ldrb	r3, [r4]
   10838:	cmp	r3, #0
   1083c:	popne	{r4, pc}
   10840:	bl	107c8 <_start@@Base+0x60>
   10844:	mov	r3, #1
   10848:	strb	r3, [r4]
   1084c:	pop	{r4, pc}
   10850:	andeq	r1, r2, r0, asr r0
   10854:	b	107f4 <_start@@Base+0x8c>

00010858 <main@@Base>:
   10858:	strd	r4, [sp, #-20]!	; 0xffffffec
   1085c:	str	r6, [sp, #8]
   10860:	str	fp, [sp, #12]
   10864:	str	lr, [sp, #16]
   10868:	add	fp, sp, #16
   1086c:	sub	sp, sp, #100	; 0x64
   10870:	ldr	r5, [pc, #612]	; 10adc <main@@Base+0x284>
   10874:	add	r5, pc, r5
   10878:	mov	r0, #12
   1087c:	bl	10720 <malloc@plt>
   10880:	mov	r3, r0
   10884:	str	r3, [fp, #-28]	; 0xffffffe4
   10888:	mov	r3, #0
   1088c:	str	r3, [fp, #-24]	; 0xffffffe8
   10890:	b	108b8 <main@@Base+0x60>
   10894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10898:	lsl	r3, r3, #2
   1089c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   108a0:	add	r3, r2, r3
   108a4:	mov	r2, #0
   108a8:	str	r2, [r3]
   108ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108b0:	add	r3, r3, #1
   108b4:	str	r3, [fp, #-24]	; 0xffffffe8
   108b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108bc:	cmp	r3, #2
   108c0:	ble	10894 <main@@Base+0x3c>
   108c4:	mov	r3, #0
   108c8:	str	r3, [fp, #-24]	; 0xffffffe8
   108cc:	b	10944 <main@@Base+0xec>
   108d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108d4:	add	r3, r3, #1
   108d8:	mov	r1, r3
   108dc:	ldr	r3, [pc, #508]	; 10ae0 <main@@Base+0x288>
   108e0:	add	r3, pc, r3
   108e4:	mov	r0, r3
   108e8:	bl	106cc <printf@plt>
   108ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108f0:	lsl	r3, r3, #2
   108f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   108f8:	add	r3, r2, r3
   108fc:	ldr	r3, [r3]
   10900:	cmp	r3, #0
   10904:	bne	1091c <main@@Base+0xc4>
   10908:	ldr	r3, [pc, #468]	; 10ae4 <main@@Base+0x28c>
   1090c:	add	r3, pc, r3
   10910:	mov	r0, r3
   10914:	bl	10714 <puts@plt>
   10918:	b	10938 <main@@Base+0xe0>
   1091c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10920:	lsl	r3, r3, #2
   10924:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10928:	add	r3, r2, r3
   1092c:	ldr	r3, [r3]
   10930:	mov	r0, r3
   10934:	bl	10714 <puts@plt>
   10938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1093c:	add	r3, r3, #1
   10940:	str	r3, [fp, #-24]	; 0xffffffe8
   10944:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10948:	cmp	r3, #2
   1094c:	ble	108d0 <main@@Base+0x78>
   10950:	mov	r1, #3
   10954:	ldr	r3, [pc, #396]	; 10ae8 <main@@Base+0x290>
   10958:	add	r3, pc, r3
   1095c:	mov	r0, r3
   10960:	bl	106cc <printf@plt>
   10964:	sub	r3, fp, #112	; 0x70
   10968:	mov	r1, r3
   1096c:	ldr	r3, [pc, #376]	; 10aec <main@@Base+0x294>
   10970:	add	r3, pc, r3
   10974:	mov	r0, r3
   10978:	bl	10750 <__isoc99_scanf@plt>
   1097c:	bl	106f0 <getchar@plt>
   10980:	ldr	r3, [fp, #-112]	; 0xffffff90
   10984:	cmp	r3, #0
   10988:	blt	10950 <main@@Base+0xf8>
   1098c:	ldr	r3, [fp, #-112]	; 0xffffff90
   10990:	cmp	r3, #3
   10994:	bgt	10950 <main@@Base+0xf8>
   10998:	ldr	r3, [fp, #-112]	; 0xffffff90
   1099c:	cmp	r3, #0
   109a0:	beq	10a70 <main@@Base+0x218>
   109a4:	ldr	r3, [pc, #324]	; 10af0 <main@@Base+0x298>
   109a8:	add	r3, pc, r3
   109ac:	mov	r0, r3
   109b0:	bl	106cc <printf@plt>
   109b4:	ldr	r3, [pc, #312]	; 10af4 <main@@Base+0x29c>
   109b8:	ldr	r3, [r5, r3]
   109bc:	ldr	r2, [r3]
   109c0:	sub	r3, fp, #108	; 0x6c
   109c4:	mov	r1, #80	; 0x50
   109c8:	mov	r0, r3
   109cc:	bl	106e4 <fgets@plt>
   109d0:	sub	r3, fp, #108	; 0x6c
   109d4:	mov	r0, r3
   109d8:	bl	10744 <strlen@plt>
   109dc:	mov	r3, r0
   109e0:	sub	r3, r3, #1
   109e4:	sub	r2, fp, #20
   109e8:	add	r3, r2, r3
   109ec:	mov	r2, #0
   109f0:	strb	r2, [r3, #-88]	; 0xffffffa8
   109f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   109f8:	sub	r3, r3, #-1073741823	; 0xc0000001
   109fc:	lsl	r3, r3, #2
   10a00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10a04:	add	r3, r2, r3
   10a08:	ldr	r6, [r3]
   10a0c:	sub	r3, fp, #108	; 0x6c
   10a10:	mov	r0, r3
   10a14:	bl	10744 <strlen@plt>
   10a18:	mov	r3, r0
   10a1c:	add	r1, r3, #1
   10a20:	ldr	r3, [fp, #-112]	; 0xffffff90
   10a24:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a28:	lsl	r3, r3, #2
   10a2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10a30:	add	r4, r2, r3
   10a34:	mov	r0, r6
   10a38:	bl	106fc <realloc@plt>
   10a3c:	mov	r3, r0
   10a40:	str	r3, [r4]
   10a44:	ldr	r3, [fp, #-112]	; 0xffffff90
   10a48:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a4c:	lsl	r3, r3, #2
   10a50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10a54:	add	r3, r2, r3
   10a58:	ldr	r3, [r3]
   10a5c:	sub	r2, fp, #108	; 0x6c
   10a60:	mov	r1, r2
   10a64:	mov	r0, r3
   10a68:	bl	10708 <strcpy@plt>
   10a6c:	b	108c4 <main@@Base+0x6c>
   10a70:	nop	{0}
   10a74:	mov	r3, #0
   10a78:	str	r3, [fp, #-24]	; 0xffffffe8
   10a7c:	b	10aa8 <main@@Base+0x250>
   10a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a84:	lsl	r3, r3, #2
   10a88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10a8c:	add	r3, r2, r3
   10a90:	ldr	r3, [r3]
   10a94:	mov	r0, r3
   10a98:	bl	106d8 <free@plt>
   10a9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10aa0:	add	r3, r3, #1
   10aa4:	str	r3, [fp, #-24]	; 0xffffffe8
   10aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10aac:	cmp	r3, #2
   10ab0:	ble	10a80 <main@@Base+0x228>
   10ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10ab8:	bl	106d8 <free@plt>
   10abc:	mov	r3, #0
   10ac0:	mov	r0, r3
   10ac4:	sub	sp, fp, #16
   10ac8:	ldrd	r4, [sp]
   10acc:	ldr	r6, [sp, #8]
   10ad0:	ldr	fp, [sp, #12]
   10ad4:	add	sp, sp, #16
   10ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   10adc:	andeq	r0, r1, r4, lsl #15
   10ae0:	andeq	r0, r0, r0, lsl #5
   10ae4:	andeq	r0, r0, ip, asr r2
   10ae8:	andeq	r0, r0, r8, lsl r2
   10aec:	andeq	r0, r0, r4, lsr #4
   10af0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10af4:	andeq	r0, r0, r4, asr #32

00010af8 <__libc_csu_init@@Base>:
   10af8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10afc:	mov	r7, r0
   10b00:	ldr	r6, [pc, #72]	; 10b50 <__libc_csu_init@@Base+0x58>
   10b04:	ldr	r5, [pc, #72]	; 10b54 <__libc_csu_init@@Base+0x5c>
   10b08:	add	r6, pc, r6
   10b0c:	add	r5, pc, r5
   10b10:	sub	r6, r6, r5
   10b14:	mov	r8, r1
   10b18:	mov	r9, r2
   10b1c:	bl	106ac <printf@plt-0x20>
   10b20:	asrs	r6, r6, #2
   10b24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b28:	mov	r4, #0
   10b2c:	add	r4, r4, #1
   10b30:	ldr	r3, [r5], #4
   10b34:	mov	r2, r9
   10b38:	mov	r1, r8
   10b3c:	mov	r0, r7
   10b40:	blx	r3
   10b44:	cmp	r6, r4
   10b48:	bne	10b2c <__libc_csu_init@@Base+0x34>
   10b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b50:	andeq	r0, r1, r4, lsl #8
   10b54:	strdeq	r0, [r1], -ip

00010b58 <__libc_csu_fini@@Base>:
   10b58:	bx	lr

Disassembly of section .fini:

00010b5c <.fini>:
   10b5c:	push	{r3, lr}
   10b60:	pop	{r3, pc}
