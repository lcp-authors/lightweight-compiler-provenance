
../repos/charybdis/modules/.libs/m_capab.so:     file format elf32-littlearm


Disassembly of section .init:

0000056c <_init>:
 56c:	push	{r3, lr}
 570:	bl	604 <call_weak_fn>
 574:	pop	{r3, pc}

Disassembly of section .plt:

00000578 <.plt>:
 578:	push	{lr}		; (str lr, [sp, #-4]!)
 57c:	ldr	lr, [pc, #4]	; 588 <.plt+0x10>
 580:	add	lr, pc, lr
 584:	ldr	pc, [lr, #8]!
 588:	.word	0x00010a78

0000058c <__cxa_finalize@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2680]!	; 0xa78

00000598 <free@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2672]!	; 0xa70

000005a4 <rb_outofmemory@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2664]!	; 0xa68

000005b0 <strcpy@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2656]!	; 0xa60

000005bc <malloc@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2648]!	; 0xa58

000005c8 <__gmon_start__@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2640]!	; 0xa50

000005d4 <strlen@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2632]!	; 0xa48

000005e0 <capability_get@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2624]!	; 0xa40

000005ec <rb_strtok_r@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2616]!	; 0xa38

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2608]!	; 0xa30

Disassembly of section .text:

00000604 <call_weak_fn>:
 604:	ldr	r3, [pc, #20]	; 620 <call_weak_fn+0x1c>
 608:	ldr	r2, [pc, #20]	; 624 <call_weak_fn+0x20>
 60c:	add	r3, pc, r3
 610:	ldr	r2, [r3, r2]
 614:	cmp	r2, #0
 618:	bxeq	lr
 61c:	b	5c8 <__gmon_start__@plt>
 620:	.word	0x000109ec
 624:	.word	0x00000048

00000628 <deregister_tm_clones>:
 628:	ldr	r3, [pc, #52]	; 664 <deregister_tm_clones+0x3c>
 62c:	ldr	r0, [pc, #52]	; 668 <deregister_tm_clones+0x40>
 630:	add	r3, pc, r3
 634:	add	r0, pc, r0
 638:	add	r3, r3, #3
 63c:	sub	r3, r3, r0
 640:	cmp	r3, #6
 644:	ldr	r3, [pc, #32]	; 66c <deregister_tm_clones+0x44>
 648:	add	r3, pc, r3
 64c:	bxls	lr
 650:	ldr	r2, [pc, #24]	; 670 <deregister_tm_clones+0x48>
 654:	ldr	r3, [r3, r2]
 658:	cmp	r3, #0
 65c:	bxeq	lr
 660:	bx	r3
 664:	.word	0x00010adc
 668:	.word	0x00010ad8
 66c:	.word	0x000109b0
 670:	.word	0x00000040

00000674 <register_tm_clones>:
 674:	ldr	r1, [pc, #56]	; 6b4 <register_tm_clones+0x40>
 678:	ldr	r0, [pc, #56]	; 6b8 <register_tm_clones+0x44>
 67c:	add	r1, pc, r1
 680:	add	r0, pc, r0
 684:	sub	r1, r1, r0
 688:	ldr	r3, [pc, #44]	; 6bc <register_tm_clones+0x48>
 68c:	asr	r1, r1, #2
 690:	add	r3, pc, r3
 694:	add	r1, r1, r1, lsr #31
 698:	asrs	r1, r1, #1
 69c:	bxeq	lr
 6a0:	ldr	r2, [pc, #24]	; 6c0 <register_tm_clones+0x4c>
 6a4:	ldr	r3, [r3, r2]
 6a8:	cmp	r3, #0
 6ac:	bxeq	lr
 6b0:	bx	r3
 6b4:	.word	0x00010a90
 6b8:	.word	0x00010a8c
 6bc:	.word	0x00010968
 6c0:	.word	0x00000050

000006c4 <__do_global_dtors_aux>:
 6c4:	ldr	r3, [pc, #76]	; 718 <__do_global_dtors_aux+0x54>
 6c8:	ldr	r2, [pc, #76]	; 71c <__do_global_dtors_aux+0x58>
 6cc:	add	r3, pc, r3
 6d0:	add	r2, pc, r2
 6d4:	ldrb	r3, [r3]
 6d8:	cmp	r3, #0
 6dc:	bxne	lr
 6e0:	ldr	r3, [pc, #56]	; 720 <__do_global_dtors_aux+0x5c>
 6e4:	push	{r4, lr}
 6e8:	ldr	r3, [r2, r3]
 6ec:	cmp	r3, #0
 6f0:	beq	700 <__do_global_dtors_aux+0x3c>
 6f4:	ldr	r3, [pc, #40]	; 724 <__do_global_dtors_aux+0x60>
 6f8:	ldr	r0, [pc, r3]
 6fc:	bl	58c <__cxa_finalize@plt>
 700:	bl	628 <deregister_tm_clones>
 704:	ldr	r3, [pc, #28]	; 728 <__do_global_dtors_aux+0x64>
 708:	mov	r2, #1
 70c:	add	r3, pc, r3
 710:	strb	r2, [r3]
 714:	pop	{r4, pc}
 718:	.word	0x00010a40
 71c:	.word	0x00010928
 720:	.word	0x00000038
 724:	.word	0x00010954
 728:	.word	0x00010a00

0000072c <frame_dummy>:
 72c:	ldr	r0, [pc, #56]	; 76c <frame_dummy+0x40>
 730:	ldr	r3, [pc, #56]	; 770 <frame_dummy+0x44>
 734:	add	r0, pc, r0
 738:	ldr	r2, [r0]
 73c:	add	r3, pc, r3
 740:	cmp	r2, #0
 744:	bne	74c <frame_dummy+0x20>
 748:	b	674 <register_tm_clones>
 74c:	ldr	r2, [pc, #32]	; 774 <frame_dummy+0x48>
 750:	ldr	r3, [r3, r2]
 754:	cmp	r3, #0
 758:	beq	748 <frame_dummy+0x1c>
 75c:	push	{r4, lr}
 760:	blx	r3
 764:	pop	{r4, lr}
 768:	b	674 <register_tm_clones>
 76c:	.word	0x000107c0
 770:	.word	0x000108bc
 774:	.word	0x0000004c

00000778 <rb_strdup>:
 778:	push	{fp, lr}
 77c:	add	fp, sp, #4
 780:	sub	sp, sp, #16
 784:	str	r0, [fp, #-16]
 788:	ldr	r0, [fp, #-16]
 78c:	bl	5d4 <strlen@plt>
 790:	mov	r3, r0
 794:	add	r3, r3, #1
 798:	mov	r0, r3
 79c:	bl	5bc <malloc@plt>
 7a0:	mov	r3, r0
 7a4:	str	r3, [fp, #-8]
 7a8:	ldr	r3, [fp, #-8]
 7ac:	cmp	r3, #0
 7b0:	moveq	r3, #1
 7b4:	movne	r3, #0
 7b8:	uxtb	r3, r3
 7bc:	cmp	r3, #0
 7c0:	beq	7c8 <rb_strdup+0x50>
 7c4:	bl	5a4 <rb_outofmemory@plt>
 7c8:	ldr	r1, [fp, #-16]
 7cc:	ldr	r0, [fp, #-8]
 7d0:	bl	5b0 <strcpy@plt>
 7d4:	ldr	r3, [fp, #-8]
 7d8:	mov	r0, r3
 7dc:	sub	sp, fp, #4
 7e0:	pop	{fp, pc}

000007e4 <rb_free>:
 7e4:	push	{fp, lr}
 7e8:	add	fp, sp, #4
 7ec:	sub	sp, sp, #8
 7f0:	str	r0, [fp, #-8]
 7f4:	ldr	r3, [fp, #-8]
 7f8:	cmp	r3, #0
 7fc:	movne	r3, #1
 800:	moveq	r3, #0
 804:	uxtb	r3, r3
 808:	cmp	r3, #0
 80c:	beq	818 <rb_free+0x34>
 810:	ldr	r0, [fp, #-8]
 814:	bl	598 <free@plt>
 818:	nop			; (mov r0, r0)
 81c:	sub	sp, fp, #4
 820:	pop	{fp, pc}

00000824 <mr_capab>:
 824:	push	{r4, r5, fp, lr}
 828:	add	fp, sp, #12
 82c:	sub	sp, sp, #40	; 0x28
 830:	str	r0, [fp, #-40]	; 0xffffffd8
 834:	str	r1, [fp, #-44]	; 0xffffffd4
 838:	str	r2, [fp, #-48]	; 0xffffffd0
 83c:	str	r3, [fp, #-52]	; 0xffffffcc
 840:	ldr	r4, [pc, #524]	; a54 <mr_capab+0x230>
 844:	add	r4, pc, r4
 848:	ldr	r3, [fp, #-44]	; 0xffffffd4
 84c:	ldr	r3, [r3, #432]	; 0x1b0
 850:	cmp	r3, #0
 854:	beq	a40 <mr_capab+0x21c>
 858:	ldr	r3, [fp, #-44]	; 0xffffffd4
 85c:	ldr	r3, [r3, #24]
 860:	cmp	r3, #0
 864:	bne	a48 <mr_capab+0x224>
 868:	ldr	r3, [fp, #-44]	; 0xffffffd4
 86c:	ldr	r3, [r3, #432]	; 0x1b0
 870:	ldr	r3, [r3, #296]	; 0x128
 874:	mov	r2, r3
 878:	ldr	r3, [pc, #472]	; a58 <mr_capab+0x234>
 87c:	ldr	r3, [r4, r3]
 880:	ldr	r3, [r3]
 884:	mvn	r3, r3
 888:	and	r3, r3, r2
 88c:	cmp	r3, #0
 890:	beq	8b0 <mr_capab+0x8c>
 894:	ldr	r3, [pc, #448]	; a5c <mr_capab+0x238>
 898:	add	r3, pc, r3
 89c:	ldr	r2, [fp, #-44]	; 0xffffffd4
 8a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
 8a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
 8a8:	bl	5f8 <exit_client@plt>
 8ac:	b	a4c <mr_capab+0x228>
 8b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
 8b4:	ldr	r3, [r3, #432]	; 0x1b0
 8b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
 8bc:	ldr	r2, [r2, #432]	; 0x1b0
 8c0:	ldr	r2, [r2, #296]	; 0x128
 8c4:	mov	r1, r2
 8c8:	ldr	r2, [pc, #400]	; a60 <mr_capab+0x23c>
 8cc:	ldr	r2, [r4, r2]
 8d0:	ldr	r2, [r2]
 8d4:	orr	r2, r1, r2
 8d8:	str	r2, [r3, #296]	; 0x128
 8dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
 8e0:	ldr	r3, [r3, #432]	; 0x1b0
 8e4:	ldr	r3, [r3, #288]	; 0x120
 8e8:	mov	r0, r3
 8ec:	bl	7e4 <rb_free>
 8f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
 8f4:	ldr	r5, [r3, #432]	; 0x1b0
 8f8:	ldr	r3, [fp, #4]
 8fc:	add	r3, r3, #4
 900:	ldr	r3, [r3]
 904:	mov	r0, r3
 908:	bl	778 <rb_strdup>
 90c:	mov	r3, r0
 910:	str	r3, [r5, #288]	; 0x120
 914:	mov	r3, #1
 918:	str	r3, [fp, #-16]
 91c:	b	a2c <mr_capab+0x208>
 920:	ldr	r3, [fp, #-16]
 924:	lsl	r3, r3, #2
 928:	ldr	r2, [fp, #4]
 92c:	add	r3, r2, r3
 930:	ldr	r3, [r3]
 934:	mov	r0, r3
 938:	bl	5d4 <strlen@plt>
 93c:	mov	r3, r0
 940:	add	r3, r3, #1
 944:	add	r3, r3, #7
 948:	add	r3, r3, #7
 94c:	lsr	r3, r3, #3
 950:	lsl	r3, r3, #3
 954:	sub	sp, sp, r3
 958:	mov	r3, sp
 95c:	add	r3, r3, #7
 960:	lsr	r3, r3, #3
 964:	lsl	r3, r3, #3
 968:	str	r3, [fp, #-24]	; 0xffffffe8
 96c:	ldr	r3, [fp, #-16]
 970:	lsl	r3, r3, #2
 974:	ldr	r2, [fp, #4]
 978:	add	r3, r2, r3
 97c:	ldr	r3, [r3]
 980:	mov	r1, r3
 984:	ldr	r0, [fp, #-24]	; 0xffffffe8
 988:	bl	5b0 <strcpy@plt>
 98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 990:	str	r3, [fp, #-28]	; 0xffffffe4
 994:	sub	r3, fp, #32
 998:	mov	r2, r3
 99c:	ldr	r3, [pc, #192]	; a64 <mr_capab+0x240>
 9a0:	add	r3, pc, r3
 9a4:	mov	r1, r3
 9a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
 9ac:	bl	5ec <rb_strtok_r@plt>
 9b0:	str	r0, [fp, #-20]	; 0xffffffec
 9b4:	b	a14 <mr_capab+0x1f0>
 9b8:	ldr	r3, [pc, #168]	; a68 <mr_capab+0x244>
 9bc:	ldr	r3, [r4, r3]
 9c0:	ldr	r3, [r3]
 9c4:	mov	r2, #0
 9c8:	ldr	r1, [fp, #-20]	; 0xffffffec
 9cc:	mov	r0, r3
 9d0:	bl	5e0 <capability_get@plt>
 9d4:	mov	r1, r0
 9d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
 9dc:	ldr	r3, [r3, #432]	; 0x1b0
 9e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
 9e4:	ldr	r2, [r2, #432]	; 0x1b0
 9e8:	ldr	r2, [r2, #296]	; 0x128
 9ec:	orr	r2, r2, r1
 9f0:	str	r2, [r3, #296]	; 0x128
 9f4:	sub	r3, fp, #32
 9f8:	mov	r2, r3
 9fc:	ldr	r3, [pc, #104]	; a6c <mr_capab+0x248>
 a00:	add	r3, pc, r3
 a04:	mov	r1, r3
 a08:	mov	r0, #0
 a0c:	bl	5ec <rb_strtok_r@plt>
 a10:	str	r0, [fp, #-20]	; 0xffffffec
 a14:	ldr	r3, [fp, #-20]	; 0xffffffec
 a18:	cmp	r3, #0
 a1c:	bne	9b8 <mr_capab+0x194>
 a20:	ldr	r3, [fp, #-16]
 a24:	add	r3, r3, #1
 a28:	str	r3, [fp, #-16]
 a2c:	ldr	r2, [fp, #-16]
 a30:	ldr	r3, [fp, #-52]	; 0xffffffcc
 a34:	cmp	r2, r3
 a38:	blt	920 <mr_capab+0xfc>
 a3c:	b	a4c <mr_capab+0x228>
 a40:	nop			; (mov r0, r0)
 a44:	b	a4c <mr_capab+0x228>
 a48:	nop			; (mov r0, r0)
 a4c:	sub	sp, fp, #12
 a50:	pop	{r4, r5, fp, pc}
 a54:	.word	0x000107b4
 a58:	.word	0x00000044
 a5c:	.word	0x000003e8
 a60:	.word	0x00000034
 a64:	.word	0x000002f8
 a68:	.word	0x0000003c
 a6c:	.word	0x00000298

00000a70 <me_gcap>:
 a70:	push	{r4, r5, fp, lr}
 a74:	add	fp, sp, #12
 a78:	sub	sp, sp, #32
 a7c:	str	r0, [fp, #-32]	; 0xffffffe0
 a80:	str	r1, [fp, #-36]	; 0xffffffdc
 a84:	str	r2, [fp, #-40]	; 0xffffffd8
 a88:	str	r3, [fp, #-44]	; 0xffffffd4
 a8c:	ldr	r4, [pc, #388]	; c18 <me_gcap+0x1a8>
 a90:	add	r4, pc, r4
 a94:	ldr	r3, [fp, #4]
 a98:	add	r3, r3, #4
 a9c:	ldr	r3, [r3]
 aa0:	mov	r0, r3
 aa4:	bl	5d4 <strlen@plt>
 aa8:	mov	r3, r0
 aac:	add	r3, r3, #1
 ab0:	add	r3, r3, #7
 ab4:	add	r3, r3, #7
 ab8:	lsr	r3, r3, #3
 abc:	lsl	r3, r3, #3
 ac0:	sub	sp, sp, r3
 ac4:	mov	r3, sp
 ac8:	add	r3, r3, #7
 acc:	lsr	r3, r3, #3
 ad0:	lsl	r3, r3, #3
 ad4:	str	r3, [fp, #-20]	; 0xffffffec
 ad8:	ldr	r3, [fp, #4]
 adc:	add	r3, r3, #4
 ae0:	ldr	r3, [r3]
 ae4:	mov	r1, r3
 ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
 aec:	bl	5b0 <strcpy@plt>
 af0:	ldr	r3, [fp, #-20]	; 0xffffffec
 af4:	str	r3, [fp, #-24]	; 0xffffffe8
 af8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 afc:	ldrh	r3, [r3, #80]	; 0x50
 b00:	cmp	r3, #32
 b04:	bne	c0c <me_gcap+0x19c>
 b08:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b0c:	ldr	r3, [r3, #28]
 b10:	ldr	r3, [r3, #64]	; 0x40
 b14:	cmp	r3, #0
 b18:	beq	b58 <me_gcap+0xe8>
 b1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b20:	ldr	r3, [r3, #28]
 b24:	ldr	r3, [r3, #64]	; 0x40
 b28:	ldrb	r3, [r3]
 b2c:	cmp	r3, #0
 b30:	beq	b58 <me_gcap+0xe8>
 b34:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b38:	ldr	r3, [r3, #28]
 b3c:	mov	r2, #0
 b40:	str	r2, [r3, #60]	; 0x3c
 b44:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b48:	ldr	r3, [r3, #28]
 b4c:	ldr	r3, [r3, #64]	; 0x40
 b50:	mov	r0, r3
 b54:	bl	7e4 <rb_free>
 b58:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b5c:	ldr	r5, [r3, #28]
 b60:	ldr	r3, [fp, #4]
 b64:	add	r3, r3, #4
 b68:	ldr	r3, [r3]
 b6c:	mov	r0, r3
 b70:	bl	778 <rb_strdup>
 b74:	mov	r3, r0
 b78:	str	r3, [r5, #64]	; 0x40
 b7c:	sub	r3, fp, #28
 b80:	mov	r2, r3
 b84:	ldr	r3, [pc, #144]	; c1c <me_gcap+0x1ac>
 b88:	add	r3, pc, r3
 b8c:	mov	r1, r3
 b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
 b94:	bl	5ec <rb_strtok_r@plt>
 b98:	str	r0, [fp, #-16]
 b9c:	b	bfc <me_gcap+0x18c>
 ba0:	ldr	r3, [pc, #120]	; c20 <me_gcap+0x1b0>
 ba4:	ldr	r3, [r4, r3]
 ba8:	ldr	r3, [r3]
 bac:	mov	r2, #0
 bb0:	ldr	r1, [fp, #-16]
 bb4:	mov	r0, r3
 bb8:	bl	5e0 <capability_get@plt>
 bbc:	mov	r1, r0
 bc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 bc4:	ldr	r3, [r3, #28]
 bc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
 bcc:	ldr	r2, [r2, #28]
 bd0:	ldr	r2, [r2, #60]	; 0x3c
 bd4:	orr	r2, r2, r1
 bd8:	str	r2, [r3, #60]	; 0x3c
 bdc:	sub	r3, fp, #28
 be0:	mov	r2, r3
 be4:	ldr	r3, [pc, #56]	; c24 <me_gcap+0x1b4>
 be8:	add	r3, pc, r3
 bec:	mov	r1, r3
 bf0:	mov	r0, #0
 bf4:	bl	5ec <rb_strtok_r@plt>
 bf8:	str	r0, [fp, #-16]
 bfc:	ldr	r3, [fp, #-16]
 c00:	cmp	r3, #0
 c04:	bne	ba0 <me_gcap+0x130>
 c08:	b	c10 <me_gcap+0x1a0>
 c0c:	nop			; (mov r0, r0)
 c10:	sub	sp, fp, #12
 c14:	pop	{r4, r5, fp, pc}
 c18:	.word	0x00010568
 c1c:	.word	0x00000110
 c20:	.word	0x0000003c
 c24:	.word	0x000000b0

Disassembly of section .fini:

00000c28 <_fini>:
 c28:	push	{r3, lr}
 c2c:	pop	{r3, pc}
