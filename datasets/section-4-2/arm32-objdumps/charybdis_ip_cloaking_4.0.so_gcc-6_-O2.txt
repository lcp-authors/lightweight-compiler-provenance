
../repos/charybdis/extensions/.libs/ip_cloaking_4.0.so:     file format elf32-littlearm


Disassembly of section .init:

000005fc <_init>:
 5fc:	push	{r3, lr}
 600:	bl	6d0 <call_weak_fn>
 604:	pop	{r3, pc}

Disassembly of section .plt:

00000608 <.plt>:
 608:	push	{lr}		; (str lr, [sp, #-4]!)
 60c:	ldr	lr, [pc, #4]	; 618 <.plt+0x10>
 610:	add	lr, pc, lr
 614:	ldr	pc, [lr, #8]!
 618:	.word	0x000119e8

0000061c <calloc@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #69632	; 0x11000
 624:	ldr	pc, [ip, #2536]!	; 0x9e8

00000628 <strcmp@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #69632	; 0x11000
 630:	ldr	pc, [ip, #2528]!	; 0x9e0

00000634 <__cxa_finalize@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2520]!	; 0x9d8

00000640 <rb_outofmemory@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2512]!	; 0x9d0

0000064c <find_umode_slot@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2504]!	; 0x9c8

00000658 <fnv_hash@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2496]!	; 0x9c0

00000664 <sendto_server@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2488]!	; 0x9b8

00000670 <__gmon_start__@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2480]!	; 0x9b0

0000067c <__ctype_b_loc@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2472]!	; 0x9a8

00000688 <sendto_one_numeric@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2464]!	; 0x9a0

00000694 <strchr@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2456]!	; 0x998

000006a0 <change_nick_user_host@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2448]!	; 0x990

000006ac <rb_strlcpy@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2440]!	; 0x988

000006b8 <irccmp@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2432]!	; 0x980

000006c4 <construct_umodebuf@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2424]!	; 0x978

Disassembly of section .text:

000006d0 <call_weak_fn>:
 6d0:	ldr	r3, [pc, #20]	; 6ec <call_weak_fn+0x1c>
 6d4:	ldr	r2, [pc, #20]	; 6f0 <call_weak_fn+0x20>
 6d8:	add	r3, pc, r3
 6dc:	ldr	r2, [r3, r2]
 6e0:	cmp	r2, #0
 6e4:	bxeq	lr
 6e8:	b	670 <__gmon_start__@plt>
 6ec:	.word	0x00011920
 6f0:	.word	0x00000058

000006f4 <deregister_tm_clones>:
 6f4:	ldr	r3, [pc, #52]	; 730 <deregister_tm_clones+0x3c>
 6f8:	ldr	r0, [pc, #52]	; 734 <deregister_tm_clones+0x40>
 6fc:	add	r3, pc, r3
 700:	add	r0, pc, r0
 704:	add	r3, r3, #3
 708:	sub	r3, r3, r0
 70c:	cmp	r3, #6
 710:	ldr	r3, [pc, #32]	; 738 <deregister_tm_clones+0x44>
 714:	add	r3, pc, r3
 718:	bxls	lr
 71c:	ldr	r2, [pc, #24]	; 73c <deregister_tm_clones+0x48>
 720:	ldr	r3, [r3, r2]
 724:	cmp	r3, #0
 728:	bxeq	lr
 72c:	bx	r3
 730:	.word	0x000119b8
 734:	.word	0x000119b4
 738:	.word	0x000118e4
 73c:	.word	0x0000004c

00000740 <register_tm_clones>:
 740:	ldr	r1, [pc, #56]	; 780 <register_tm_clones+0x40>
 744:	ldr	r0, [pc, #56]	; 784 <register_tm_clones+0x44>
 748:	add	r1, pc, r1
 74c:	add	r0, pc, r0
 750:	sub	r1, r1, r0
 754:	ldr	r3, [pc, #44]	; 788 <register_tm_clones+0x48>
 758:	asr	r1, r1, #2
 75c:	add	r3, pc, r3
 760:	add	r1, r1, r1, lsr #31
 764:	asrs	r1, r1, #1
 768:	bxeq	lr
 76c:	ldr	r2, [pc, #24]	; 78c <register_tm_clones+0x4c>
 770:	ldr	r3, [r3, r2]
 774:	cmp	r3, #0
 778:	bxeq	lr
 77c:	bx	r3
 780:	.word	0x0001196c
 784:	.word	0x00011968
 788:	.word	0x0001189c
 78c:	.word	0x00000064

00000790 <__do_global_dtors_aux>:
 790:	ldr	r3, [pc, #76]	; 7e4 <__do_global_dtors_aux+0x54>
 794:	ldr	r2, [pc, #76]	; 7e8 <__do_global_dtors_aux+0x58>
 798:	add	r3, pc, r3
 79c:	add	r2, pc, r2
 7a0:	ldrb	r3, [r3]
 7a4:	cmp	r3, #0
 7a8:	bxne	lr
 7ac:	ldr	r3, [pc, #56]	; 7ec <__do_global_dtors_aux+0x5c>
 7b0:	push	{r4, lr}
 7b4:	ldr	r3, [r2, r3]
 7b8:	cmp	r3, #0
 7bc:	beq	7cc <__do_global_dtors_aux+0x3c>
 7c0:	ldr	r3, [pc, #40]	; 7f0 <__do_global_dtors_aux+0x60>
 7c4:	ldr	r0, [pc, r3]
 7c8:	bl	634 <__cxa_finalize@plt>
 7cc:	bl	6f4 <deregister_tm_clones>
 7d0:	ldr	r3, [pc, #28]	; 7f4 <__do_global_dtors_aux+0x64>
 7d4:	mov	r2, #1
 7d8:	add	r3, pc, r3
 7dc:	strb	r2, [r3]
 7e0:	pop	{r4, pc}
 7e4:	.word	0x0001191c
 7e8:	.word	0x0001185c
 7ec:	.word	0x00000048
 7f0:	.word	0x000118a0
 7f4:	.word	0x000118dc

000007f8 <frame_dummy>:
 7f8:	ldr	r0, [pc, #56]	; 838 <frame_dummy+0x40>
 7fc:	ldr	r3, [pc, #56]	; 83c <frame_dummy+0x44>
 800:	add	r0, pc, r0
 804:	ldr	r2, [r0]
 808:	add	r3, pc, r3
 80c:	cmp	r2, #0
 810:	bne	818 <frame_dummy+0x20>
 814:	b	740 <register_tm_clones>
 818:	ldr	r2, [pc, #32]	; 840 <frame_dummy+0x48>
 81c:	ldr	r3, [r3, r2]
 820:	cmp	r3, #0
 824:	beq	814 <frame_dummy+0x1c>
 828:	push	{r4, lr}
 82c:	blx	r3
 830:	pop	{r4, lr}
 834:	b	740 <register_tm_clones>
 838:	.word	0x000116f4
 83c:	.word	0x000117f0
 840:	.word	0x00000060

00000844 <distribute_hostchange>:
 844:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 848:	add	r8, r0, #227	; 0xe3
 84c:	ldr	r7, [pc, #312]	; 98c <distribute_hostchange+0x148>
 850:	cmp	r8, r1
 854:	sub	sp, sp, #16
 858:	mov	r4, r0
 85c:	mov	r6, r1
 860:	add	r7, pc, r7
 864:	beq	974 <distribute_hostchange+0x130>
 868:	ldr	r2, [pc, #288]	; 990 <distribute_hostchange+0x14c>
 86c:	mov	r3, r1
 870:	add	r2, pc, r2
 874:	mov	r1, #396	; 0x18c
 878:	bl	688 <sendto_one_numeric@plt>
 87c:	ldr	r1, [pc, #272]	; 994 <distribute_hostchange+0x150>
 880:	ldr	r2, [pc, #272]	; 998 <distribute_hostchange+0x154>
 884:	ldr	r3, [pc, #272]	; 99c <distribute_hostchange+0x158>
 888:	ldr	r5, [r7, r1]
 88c:	ldr	r9, [r7, r2]
 890:	ldr	sl, [r7, r3]
 894:	ldrb	r1, [r5, #396]	; 0x18c
 898:	ldr	r2, [r9]
 89c:	ldr	r3, [sl]
 8a0:	cmp	r1, #0
 8a4:	orr	r2, r2, r3
 8a8:	ldrb	r3, [r4, #396]	; 0x18c
 8ac:	ldr	r1, [pc, #236]	; 9a0 <distribute_hostchange+0x15c>
 8b0:	addne	ip, r5, #396	; 0x18c
 8b4:	addeq	ip, r5, #88	; 0x58
 8b8:	add	r1, pc, r1
 8bc:	cmp	r3, #0
 8c0:	addeq	r0, r4, #88	; 0x58
 8c4:	addne	r0, r4, #396	; 0x18c
 8c8:	mov	r3, #0
 8cc:	moveq	r7, r0
 8d0:	stm	sp, {r1, ip}
 8d4:	str	r0, [sp, #8]
 8d8:	mov	r1, r3
 8dc:	mov	r0, r3
 8e0:	str	r6, [sp, #12]
 8e4:	addne	r7, r4, #88	; 0x58
 8e8:	bl	664 <sendto_server@plt>
 8ec:	ldrb	r1, [r5, #396]	; 0x18c
 8f0:	ldr	r0, [pc, #172]	; 9a4 <distribute_hostchange+0x160>
 8f4:	ldr	r2, [sl]
 8f8:	cmp	r1, #0
 8fc:	ldrb	r1, [r4, #396]	; 0x18c
 900:	addne	r5, r5, #396	; 0x18c
 904:	addeq	r5, r5, #88	; 0x58
 908:	cmp	r1, #0
 90c:	addne	r1, r4, #396	; 0x18c
 910:	moveq	r1, r7
 914:	add	r0, pc, r0
 918:	ldr	r3, [r9]
 91c:	str	r1, [sp, #8]
 920:	mov	r1, #0
 924:	stm	sp, {r0, r5}
 928:	str	r6, [sp, #12]
 92c:	mov	r0, r1
 930:	bl	664 <sendto_server@plt>
 934:	ldr	r3, [pc, #108]	; 9a8 <distribute_hostchange+0x164>
 938:	mov	r2, #0
 93c:	add	r3, pc, r3
 940:	mov	r1, r7
 944:	stm	sp, {r2, r3}
 948:	mov	r0, r4
 94c:	mov	r3, r6
 950:	add	r2, r4, #152	; 0x98
 954:	bl	6a0 <change_nick_user_host@plt>
 958:	ldrd	r2, [r4, #64]	; 0x40
 95c:	cmp	r8, r6
 960:	orrne	r2, r2, #131072	; 0x20000
 964:	biceq	r2, r2, #131072	; 0x20000
 968:	strd	r2, [r4, #64]	; 0x40
 96c:	add	sp, sp, #16
 970:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 974:	ldr	r2, [pc, #48]	; 9ac <distribute_hostchange+0x168>
 978:	mov	r3, r8
 97c:	add	r2, pc, r2
 980:	mov	r1, #396	; 0x18c
 984:	bl	688 <sendto_one_numeric@plt>
 988:	b	87c <distribute_hostchange+0x38>
 98c:	.word	0x00011798
 990:	.word	0x00000640
 994:	.word	0x00000068
 998:	.word	0x0000005c
 99c:	.word	0x00000050
 9a0:	.word	0x00000628
 9a4:	.word	0x000005e0
 9a8:	.word	0x000005d4
 9ac:	.word	0x00000550

000009b0 <check_umode_change>:
 9b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 9b4:	mov	r9, #0
 9b8:	ldr	r4, [r0]
 9bc:	ldr	r3, [pc, #264]	; acc <check_umode_change+0x11c>
 9c0:	ldrd	r6, [r4, #64]	; 0x40
 9c4:	add	r3, pc, r3
 9c8:	and	r8, r6, #8192	; 0x2000
 9cc:	orrs	r2, r8, r9
 9d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 9d4:	ldrh	r2, [r4, #80]	; 0x50
 9d8:	cmp	r2, #64	; 0x40
 9dc:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 9e0:	ldr	r1, [pc, #232]	; ad0 <check_umode_change+0x120>
 9e4:	ldr	r2, [r0, #4]
 9e8:	ldr	r5, [r4, #56]	; 0x38
 9ec:	ldr	r1, [r3, r1]
 9f0:	eor	r3, r5, r2
 9f4:	ldr	r8, [r1, #480]	; 0x1e0
 9f8:	tst	r3, r8
 9fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 a00:	tst	r5, r8
 a04:	beq	a6c <check_umode_change+0xbc>
 a08:	and	r2, r6, #16777216	; 0x1000000
 a0c:	mov	r3, #0
 a10:	orrs	r3, r2, r3
 a14:	bne	a9c <check_umode_change+0xec>
 a18:	ldr	r3, [r4, #432]	; 0x1b0
 a1c:	ldr	r9, [r3, #432]	; 0x1b0
 a20:	cmp	r9, #0
 a24:	beq	a9c <check_umode_change+0xec>
 a28:	and	r6, r6, #131072	; 0x20000
 a2c:	mov	r7, #0
 a30:	orrs	r3, r6, r7
 a34:	add	r6, r4, #163	; 0xa3
 a38:	beq	aa8 <check_umode_change+0xf8>
 a3c:	mov	r1, r9
 a40:	mov	r0, r6
 a44:	bl	628 <strcmp@plt>
 a48:	cmp	r0, #0
 a4c:	bne	a9c <check_umode_change+0xec>
 a50:	ldr	r2, [pc, #124]	; ad4 <check_umode_change+0x124>
 a54:	mov	r3, r6
 a58:	mov	r0, r4
 a5c:	add	r2, pc, r2
 a60:	mov	r1, #396	; 0x18c
 a64:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a68:	b	688 <sendto_one_numeric@plt>
 a6c:	ldr	r3, [r4, #432]	; 0x1b0
 a70:	ldr	r1, [r3, #432]	; 0x1b0
 a74:	cmp	r1, #0
 a78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 a7c:	add	r0, r4, #163	; 0xa3
 a80:	bl	628 <strcmp@plt>
 a84:	cmp	r0, #0
 a88:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 a8c:	add	r1, r4, #227	; 0xe3
 a90:	mov	r0, r4
 a94:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a98:	b	844 <distribute_hostchange>
 a9c:	bic	r5, r5, r8
 aa0:	str	r5, [r4, #56]	; 0x38
 aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 aa8:	mov	r0, r6
 aac:	mov	r1, r9
 ab0:	bl	628 <strcmp@plt>
 ab4:	cmp	r0, #0
 ab8:	beq	a50 <check_umode_change+0xa0>
 abc:	mov	r1, r9
 ac0:	mov	r0, r4
 ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 ac8:	b	844 <distribute_hostchange>
 acc:	.word	0x00011634
 ad0:	.word	0x00000054
 ad4:	.word	0x00000454

00000ad8 <_moddeinit>:
 ad8:	ldr	r3, [pc, #20]	; af4 <_moddeinit+0x1c>
 adc:	ldr	r2, [pc, #20]	; af8 <_moddeinit+0x20>
 ae0:	add	r3, pc, r3
 ae4:	mov	r1, #0
 ae8:	ldr	r3, [r3, r2]
 aec:	str	r1, [r3, #480]	; 0x1e0
 af0:	b	6c4 <construct_umodebuf@plt>
 af4:	.word	0x00011518
 af8:	.word	0x00000054

00000afc <_modinit>:
 afc:	push	{r4, lr}
 b00:	bl	64c <find_umode_slot@plt>
 b04:	ldr	r3, [pc, #24]	; b24 <_modinit+0x28>
 b08:	ldr	r2, [pc, #24]	; b28 <_modinit+0x2c>
 b0c:	add	r3, pc, r3
 b10:	ldr	r3, [r3, r2]
 b14:	str	r0, [r3, #480]	; 0x1e0
 b18:	bl	6c4 <construct_umodebuf@plt>
 b1c:	mov	r0, #0
 b20:	pop	{r4, pc}
 b24:	.word	0x000114ec
 b28:	.word	0x00000054

00000b2c <check_new_user>:
 b2c:	ldrd	r2, [r0, #64]	; 0x40
 b30:	push	{r4, r5, r6, r7, r8, r9, lr}
 b34:	mov	r3, #0
 b38:	ldr	r6, [pc, #796]	; e5c <check_new_user+0x330>
 b3c:	and	r2, r2, #16777216	; 0x1000000
 b40:	orrs	r3, r2, r3
 b44:	add	r6, pc, r6
 b48:	sub	sp, sp, #36	; 0x24
 b4c:	beq	b70 <check_new_user+0x44>
 b50:	ldr	r2, [pc, #776]	; e60 <check_new_user+0x334>
 b54:	ldr	r3, [r0, #56]	; 0x38
 b58:	ldr	r2, [r6, r2]
 b5c:	ldr	r2, [r2, #480]	; 0x1e0
 b60:	bic	r3, r3, r2
 b64:	str	r3, [r0, #56]	; 0x38
 b68:	add	sp, sp, #36	; 0x24
 b6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
 b70:	mov	r5, r0
 b74:	mov	r1, #64	; 0x40
 b78:	mov	r0, #1
 b7c:	ldr	r4, [r5, #432]	; 0x1b0
 b80:	bl	61c <calloc@plt>
 b84:	cmp	r0, #0
 b88:	beq	e2c <check_new_user+0x300>
 b8c:	add	r7, r5, #227	; 0xe3
 b90:	add	r1, r5, #288	; 0x120
 b94:	str	r0, [r4, #432]	; 0x1b0
 b98:	add	r1, r1, #3
 b9c:	mov	r0, r7
 ba0:	bl	6b8 <irccmp@plt>
 ba4:	subs	r8, r0, #0
 ba8:	beq	d34 <check_new_user+0x208>
 bac:	ldr	lr, [pc, #688]	; e64 <check_new_user+0x338>
 bb0:	add	ip, sp, #4
 bb4:	add	lr, pc, lr
 bb8:	ldr	r4, [r5, #432]	; 0x1b0
 bbc:	ldm	lr!, {r0, r1, r2, r3}
 bc0:	ldr	r8, [r4, #432]	; 0x1b0
 bc4:	stmia	ip!, {r0, r1, r2, r3}
 bc8:	ldm	lr, {r0, r1, r2}
 bcc:	stmia	ip!, {r0, r1}
 bd0:	lsr	r3, r2, #16
 bd4:	mov	r1, #32
 bd8:	mov	r0, r7
 bdc:	strh	r2, [ip], #2
 be0:	strb	r3, [ip]
 be4:	bl	658 <fnv_hash@plt>
 be8:	mov	r2, #64	; 0x40
 bec:	mov	r1, r7
 bf0:	mov	r9, r0
 bf4:	mov	r0, r8
 bf8:	bl	6ac <rb_strlcpy@plt>
 bfc:	ldrb	r4, [r8]
 c00:	cmp	r4, #0
 c04:	cmpne	r4, #46	; 0x2e
 c08:	beq	c78 <check_new_user+0x14c>
 c0c:	bl	67c <__ctype_b_loc@plt>
 c10:	ldr	ip, [pc, #592]	; e68 <check_new_user+0x33c>
 c14:	mov	r2, r8
 c18:	mov	r1, #26
 c1c:	ldr	lr, [r0]
 c20:	lsl	r3, r4, #1
 c24:	ldrh	r3, [lr, r3]
 c28:	lsr	r3, r3, #11
 c2c:	cmp	r4, #45	; 0x2d
 c30:	orreq	r3, r3, #1
 c34:	tst	r3, #1
 c38:	bne	c64 <check_new_user+0x138>
 c3c:	add	r4, r4, r9
 c40:	ror	r9, r9, #31
 c44:	umull	lr, r3, ip, r4
 c48:	lsr	r3, r3, #3
 c4c:	mul	r3, r1, r3
 c50:	sub	r4, r4, r3
 c54:	add	r3, sp, #32
 c58:	add	r4, r3, r4
 c5c:	ldrb	r3, [r4, #-28]	; 0xffffffe4
 c60:	strb	r3, [r2]
 c64:	ldrb	r4, [r2, #1]!
 c68:	cmp	r4, #0
 c6c:	cmpne	r4, #46	; 0x2e
 c70:	bne	c1c <check_new_user+0xf0>
 c74:	ldrb	r4, [r8]
 c78:	cmp	r4, #0
 c7c:	beq	cc8 <check_new_user+0x19c>
 c80:	bl	67c <__ctype_b_loc@plt>
 c84:	ldr	r2, [pc, #480]	; e6c <check_new_user+0x340>
 c88:	ldr	r1, [r0]
 c8c:	lsl	r3, r4, #1
 c90:	ldrh	r3, [r1, r3]
 c94:	tst	r3, #2048	; 0x800
 c98:	beq	cb8 <check_new_user+0x18c>
 c9c:	add	r4, r4, r9
 ca0:	umull	r1, r3, r2, r4
 ca4:	lsr	r3, r3, #3
 ca8:	add	r3, r3, r3, lsl #2
 cac:	sub	r4, r4, r3, lsl #1
 cb0:	add	r4, r4, #48	; 0x30
 cb4:	strb	r4, [r8]
 cb8:	ldrb	r4, [r8, #1]!
 cbc:	ror	r9, r9, #31
 cc0:	cmp	r4, #0
 cc4:	bne	c88 <check_new_user+0x15c>
 cc8:	ldrd	r2, [r5, #64]	; 0x40
 ccc:	mov	r3, #0
 cd0:	and	r2, r2, #131072	; 0x20000
 cd4:	orrs	r3, r2, r3
 cd8:	ldr	r2, [pc, #384]	; e60 <check_new_user+0x334>
 cdc:	ldr	r3, [r5, #56]	; 0x38
 ce0:	ldr	r2, [r6, r2]
 ce4:	ldrne	r1, [r2, #480]	; 0x1e0
 ce8:	bicne	r3, r3, r1
 cec:	strne	r3, [r5, #56]	; 0x38
 cf0:	ldr	r2, [r2, #480]	; 0x1e0
 cf4:	tst	r3, r2
 cf8:	beq	b68 <check_new_user+0x3c>
 cfc:	ldr	r3, [r5, #432]	; 0x1b0
 d00:	add	r4, r5, #163	; 0xa3
 d04:	mov	r2, #64	; 0x40
 d08:	ldr	r1, [r3, #432]	; 0x1b0
 d0c:	mov	r0, r4
 d10:	bl	6ac <rb_strlcpy@plt>
 d14:	mov	r1, r7
 d18:	mov	r0, r4
 d1c:	bl	6b8 <irccmp@plt>
 d20:	cmp	r0, #0
 d24:	ldrdne	r2, [r5, #64]	; 0x40
 d28:	orrne	r2, r2, #131072	; 0x20000
 d2c:	strdne	r2, [r5, #64]	; 0x40
 d30:	b	b68 <check_new_user+0x3c>
 d34:	ldr	lr, [pc, #308]	; e70 <check_new_user+0x344>
 d38:	add	ip, sp, #4
 d3c:	add	lr, pc, lr
 d40:	ldr	r4, [r5, #432]	; 0x1b0
 d44:	ldm	lr!, {r0, r1, r2, r3}
 d48:	ldr	r4, [r4, #432]	; 0x1b0
 d4c:	stmia	ip!, {r0, r1, r2, r3}
 d50:	ldm	lr, {r0, r1}
 d54:	str	r0, [ip], #4
 d58:	mov	r0, r7
 d5c:	strb	r1, [ip]
 d60:	mov	r1, #32
 d64:	bl	658 <fnv_hash@plt>
 d68:	mov	r2, #64	; 0x40
 d6c:	mov	r1, r7
 d70:	mov	r9, r0
 d74:	mov	r0, r4
 d78:	bl	6ac <rb_strlcpy@plt>
 d7c:	mov	r0, r4
 d80:	mov	r1, #58	; 0x3a
 d84:	bl	694 <strchr@plt>
 d88:	cmp	r0, #0
 d8c:	beq	e30 <check_new_user+0x304>
 d90:	ldrb	r3, [r4]
 d94:	cmp	r3, #0
 d98:	beq	cc8 <check_new_user+0x19c>
 d9c:	mov	r1, r4
 da0:	mov	lr, r8
 da4:	mov	r2, r3
 da8:	cmp	r2, #58	; 0x3a
 dac:	ldrb	r2, [r1, #1]!
 db0:	addeq	lr, lr, #1
 db4:	cmp	r2, #0
 db8:	bne	da8 <check_new_user+0x27c>
 dbc:	mov	r0, #1
 dc0:	ldr	ip, [pc, #164]	; e6c <check_new_user+0x340>
 dc4:	asr	r1, lr, #1
 dc8:	b	e08 <check_new_user+0x2dc>
 dcc:	cmp	r1, r8
 dd0:	bgt	dfc <check_new_user+0x2d0>
 dd4:	add	r3, r3, r9
 dd8:	ror	r9, r9, #31
 ddc:	umull	lr, r2, ip, r3
 de0:	lsr	r2, r2, #4
 de4:	add	r2, r2, r2, lsl #2
 de8:	sub	r3, r3, r2, lsl #2
 dec:	add	r2, sp, #32
 df0:	add	r3, r2, r3
 df4:	ldrb	r3, [r3, #-28]	; 0xffffffe4
 df8:	strb	r3, [r4]
 dfc:	ldrb	r3, [r4, #1]!
 e00:	cmp	r3, #0
 e04:	beq	cc8 <check_new_user+0x19c>
 e08:	cmp	r3, #46	; 0x2e
 e0c:	cmpne	r3, #58	; 0x3a
 e10:	addeq	r8, r8, #1
 e14:	beq	dfc <check_new_user+0x2d0>
 e18:	cmp	r0, #0
 e1c:	bne	dcc <check_new_user+0x2a0>
 e20:	cmp	r8, #1
 e24:	ble	dfc <check_new_user+0x2d0>
 e28:	b	dd4 <check_new_user+0x2a8>
 e2c:	bl	640 <rb_outofmemory@plt>
 e30:	mov	r1, #46	; 0x2e
 e34:	mov	r0, r4
 e38:	bl	694 <strchr@plt>
 e3c:	cmp	r0, #0
 e40:	beq	cc8 <check_new_user+0x19c>
 e44:	ldrb	r3, [r4]
 e48:	cmp	r3, #0
 e4c:	beq	cc8 <check_new_user+0x19c>
 e50:	mov	lr, r8
 e54:	mov	r0, r8
 e58:	b	dc0 <check_new_user+0x294>
 e5c:	.word	0x000114b4
 e60:	.word	0x00000054
 e64:	.word	0x0000036c
 e68:	.word	0x4ec4ec4f
 e6c:	.word	0xcccccccd
 e70:	.word	0x00000200

Disassembly of section .fini:

00000e74 <_fini>:
 e74:	push	{r3, lr}
 e78:	pop	{r3, pc}
