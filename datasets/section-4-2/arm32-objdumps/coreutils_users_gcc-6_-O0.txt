
../repos/coreutils/src/users:     file format elf32-littlearm


Disassembly of section .init:

00010c2c <.init>:
   10c2c:	push	{r3, lr}
   10c30:	bl	10ef8 <putchar_unlocked@plt+0x48>
   10c34:	pop	{r3, pc}

Disassembly of section .plt:

00010c38 <calloc@plt-0x14>:
   10c38:	push	{lr}		; (str lr, [sp, #-4]!)
   10c3c:	ldr	lr, [pc, #4]	; 10c48 <calloc@plt-0x4>
   10c40:	add	lr, pc, lr
   10c44:	ldr	pc, [lr, #8]!
   10c48:			; <UNDEFINED> instruction: 0x000173b8

00010c4c <calloc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #94208	; 0x17000
   10c54:	ldr	pc, [ip, #952]!	; 0x3b8

00010c58 <fputs_unlocked@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #94208	; 0x17000
   10c60:	ldr	pc, [ip, #944]!	; 0x3b0

00010c64 <raise@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #94208	; 0x17000
   10c6c:	ldr	pc, [ip, #936]!	; 0x3a8

00010c70 <strcmp@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #94208	; 0x17000
   10c78:	ldr	pc, [ip, #928]!	; 0x3a0

00010c7c <printf@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #94208	; 0x17000
   10c84:	ldr	pc, [ip, #920]!	; 0x398

00010c88 <fflush@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #94208	; 0x17000
   10c90:	ldr	pc, [ip, #912]!	; 0x390

00010c94 <utmpxname@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #94208	; 0x17000
   10c9c:	ldr	pc, [ip, #904]!	; 0x388

00010ca0 <free@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #94208	; 0x17000
   10ca8:	ldr	pc, [ip, #896]!	; 0x380

00010cac <_exit@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #94208	; 0x17000
   10cb4:	ldr	pc, [ip, #888]!	; 0x378

00010cb8 <memcpy@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #94208	; 0x17000
   10cc0:	ldr	pc, [ip, #880]!	; 0x370

00010cc4 <mbsinit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #94208	; 0x17000
   10ccc:	ldr	pc, [ip, #872]!	; 0x368

00010cd0 <memcmp@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #94208	; 0x17000
   10cd8:	ldr	pc, [ip, #864]!	; 0x360

00010cdc <fputc_unlocked@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #94208	; 0x17000
   10ce4:	ldr	pc, [ip, #856]!	; 0x358

00010ce8 <setutxent@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #94208	; 0x17000
   10cf0:	ldr	pc, [ip, #848]!	; 0x350

00010cf4 <realloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #94208	; 0x17000
   10cfc:	ldr	pc, [ip, #840]!	; 0x348

00010d00 <textdomain@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #94208	; 0x17000
   10d08:	ldr	pc, [ip, #832]!	; 0x340

00010d0c <iswprint@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #94208	; 0x17000
   10d14:	ldr	pc, [ip, #824]!	; 0x338

00010d18 <fwrite@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #94208	; 0x17000
   10d20:	ldr	pc, [ip, #816]!	; 0x330

00010d24 <lseek64@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #94208	; 0x17000
   10d2c:	ldr	pc, [ip, #808]!	; 0x328

00010d30 <__ctype_get_mb_cur_max@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #94208	; 0x17000
   10d38:	ldr	pc, [ip, #800]!	; 0x320

00010d3c <__fpending@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #94208	; 0x17000
   10d44:	ldr	pc, [ip, #792]!	; 0x318

00010d48 <ferror_unlocked@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #94208	; 0x17000
   10d50:	ldr	pc, [ip, #784]!	; 0x310

00010d54 <mbrtowc@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #94208	; 0x17000
   10d5c:	ldr	pc, [ip, #776]!	; 0x308

00010d60 <error@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #94208	; 0x17000
   10d68:	ldr	pc, [ip, #768]!	; 0x300

00010d6c <malloc@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #94208	; 0x17000
   10d74:	ldr	pc, [ip, #760]!	; 0x2f8

00010d78 <__libc_start_main@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #94208	; 0x17000
   10d80:	ldr	pc, [ip, #752]!	; 0x2f0

00010d84 <__freading@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #94208	; 0x17000
   10d8c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d90 <__gmon_start__@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #94208	; 0x17000
   10d98:	ldr	pc, [ip, #736]!	; 0x2e0

00010d9c <getopt_long@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #94208	; 0x17000
   10da4:	ldr	pc, [ip, #728]!	; 0x2d8

00010da8 <kill@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #94208	; 0x17000
   10db0:	ldr	pc, [ip, #720]!	; 0x2d0

00010db4 <__ctype_b_loc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #94208	; 0x17000
   10dbc:	ldr	pc, [ip, #712]!	; 0x2c8

00010dc0 <exit@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #94208	; 0x17000
   10dc8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dcc <gettext@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dd8 <strlen@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #688]!	; 0x2b0

00010de4 <fprintf@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #680]!	; 0x2a8

00010df0 <__errno_location@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dfc <__cxa_atexit@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #664]!	; 0x298

00010e08 <memset@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #656]!	; 0x290

00010e14 <strncpy@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #648]!	; 0x288

00010e20 <fileno@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #640]!	; 0x280

00010e2c <fclose@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #632]!	; 0x278

00010e38 <fseeko64@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #624]!	; 0x270

00010e44 <endutxent@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #616]!	; 0x268

00010e50 <setlocale@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #608]!	; 0x260

00010e5c <strrchr@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #600]!	; 0x258

00010e68 <nl_langinfo@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #94208	; 0x17000
   10e70:	ldr	pc, [ip, #592]!	; 0x250

00010e74 <qsort@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #94208	; 0x17000
   10e7c:	ldr	pc, [ip, #584]!	; 0x248

00010e80 <bindtextdomain@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #94208	; 0x17000
   10e88:	ldr	pc, [ip, #576]!	; 0x240

00010e8c <strncmp@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #94208	; 0x17000
   10e94:	ldr	pc, [ip, #568]!	; 0x238

00010e98 <abort@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #94208	; 0x17000
   10ea0:	ldr	pc, [ip, #560]!	; 0x230

00010ea4 <getutxent@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #94208	; 0x17000
   10eac:	ldr	pc, [ip, #552]!	; 0x228

00010eb0 <putchar_unlocked@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #94208	; 0x17000
   10eb8:	ldr	pc, [ip, #544]!	; 0x220

Disassembly of section .text:

00010ebc <.text>:
   10ebc:	mov	fp, #0
   10ec0:	mov	lr, #0
   10ec4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec8:	mov	r2, sp
   10ecc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ed0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ed4:	ldr	ip, [pc, #16]	; 10eec <putchar_unlocked@plt+0x3c>
   10ed8:	push	{ip}		; (str ip, [sp, #-4]!)
   10edc:	ldr	r0, [pc, #12]	; 10ef0 <putchar_unlocked@plt+0x40>
   10ee0:	ldr	r3, [pc, #12]	; 10ef4 <putchar_unlocked@plt+0x44>
   10ee4:	bl	10d78 <__libc_start_main@plt>
   10ee8:	bl	10e98 <abort@plt>
   10eec:	andeq	r6, r1, ip, ror #25
   10ef0:	andeq	r1, r1, r4, lsl #10
   10ef4:	andeq	r6, r1, ip, lsl #25
   10ef8:	ldr	r3, [pc, #20]	; 10f14 <putchar_unlocked@plt+0x64>
   10efc:	ldr	r2, [pc, #20]	; 10f18 <putchar_unlocked@plt+0x68>
   10f00:	add	r3, pc, r3
   10f04:	ldr	r2, [r3, r2]
   10f08:	cmp	r2, #0
   10f0c:	bxeq	lr
   10f10:	b	10d90 <__gmon_start__@plt>
   10f14:	strdeq	r7, [r1], -r8
   10f18:	ldrdeq	r0, [r0], -ip
   10f1c:	ldr	r3, [pc, #28]	; 10f40 <putchar_unlocked@plt+0x90>
   10f20:	ldr	r0, [pc, #28]	; 10f44 <putchar_unlocked@plt+0x94>
   10f24:	sub	r3, r3, r0
   10f28:	cmp	r3, #6
   10f2c:	bxls	lr
   10f30:	ldr	r3, [pc, #16]	; 10f48 <putchar_unlocked@plt+0x98>
   10f34:	cmp	r3, #0
   10f38:	bxeq	lr
   10f3c:	bx	r3
   10f40:	andeq	r8, r2, r3, lsr r1
   10f44:	andeq	r8, r2, r0, lsr r1
   10f48:	andeq	r0, r0, r0
   10f4c:	ldr	r1, [pc, #36]	; 10f78 <putchar_unlocked@plt+0xc8>
   10f50:	ldr	r0, [pc, #36]	; 10f7c <putchar_unlocked@plt+0xcc>
   10f54:	sub	r1, r1, r0
   10f58:	asr	r1, r1, #2
   10f5c:	add	r1, r1, r1, lsr #31
   10f60:	asrs	r1, r1, #1
   10f64:	bxeq	lr
   10f68:	ldr	r3, [pc, #16]	; 10f80 <putchar_unlocked@plt+0xd0>
   10f6c:	cmp	r3, #0
   10f70:	bxeq	lr
   10f74:	bx	r3
   10f78:	andeq	r8, r2, r0, lsr r1
   10f7c:	andeq	r8, r2, r0, lsr r1
   10f80:	andeq	r0, r0, r0
   10f84:	push	{r4, lr}
   10f88:	ldr	r4, [pc, #24]	; 10fa8 <putchar_unlocked@plt+0xf8>
   10f8c:	ldrb	r3, [r4]
   10f90:	cmp	r3, #0
   10f94:	popne	{r4, pc}
   10f98:	bl	10f1c <putchar_unlocked@plt+0x6c>
   10f9c:	mov	r3, #1
   10fa0:	strb	r3, [r4]
   10fa4:	pop	{r4, pc}
   10fa8:	andeq	r8, r2, ip, asr #2
   10fac:	ldr	r0, [pc, #40]	; 10fdc <putchar_unlocked@plt+0x12c>
   10fb0:	ldr	r3, [r0]
   10fb4:	cmp	r3, #0
   10fb8:	bne	10fc0 <putchar_unlocked@plt+0x110>
   10fbc:	b	10f4c <putchar_unlocked@plt+0x9c>
   10fc0:	ldr	r3, [pc, #24]	; 10fe0 <putchar_unlocked@plt+0x130>
   10fc4:	cmp	r3, #0
   10fc8:	beq	10fbc <putchar_unlocked@plt+0x10c>
   10fcc:	push	{r4, lr}
   10fd0:	blx	r3
   10fd4:	pop	{r4, lr}
   10fd8:	b	10f4c <putchar_unlocked@plt+0x9c>
   10fdc:	andeq	r7, r2, r4, lsl pc
   10fe0:	andeq	r0, r0, r0
   10fe4:	push	{fp, lr}
   10fe8:	add	fp, sp, #4
   10fec:	sub	sp, sp, #80	; 0x50
   10ff0:	str	r0, [fp, #-80]	; 0xffffffb0
   10ff4:	ldr	r3, [pc, #348]	; 11158 <putchar_unlocked@plt+0x2a8>
   10ff8:	sub	ip, fp, #72	; 0x48
   10ffc:	mov	lr, r3
   11000:	ldm	lr!, {r0, r1, r2, r3}
   11004:	stmia	ip!, {r0, r1, r2, r3}
   11008:	ldm	lr!, {r0, r1, r2, r3}
   1100c:	stmia	ip!, {r0, r1, r2, r3}
   11010:	ldm	lr!, {r0, r1, r2, r3}
   11014:	stmia	ip!, {r0, r1, r2, r3}
   11018:	ldm	lr, {r0, r1}
   1101c:	stm	ip, {r0, r1}
   11020:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11024:	str	r3, [fp, #-8]
   11028:	sub	r3, fp, #72	; 0x48
   1102c:	str	r3, [fp, #-12]
   11030:	b	11040 <putchar_unlocked@plt+0x190>
   11034:	ldr	r3, [fp, #-12]
   11038:	add	r3, r3, #8
   1103c:	str	r3, [fp, #-12]
   11040:	ldr	r3, [fp, #-12]
   11044:	ldr	r3, [r3]
   11048:	cmp	r3, #0
   1104c:	beq	11070 <putchar_unlocked@plt+0x1c0>
   11050:	ldr	r3, [fp, #-12]
   11054:	ldr	r3, [r3]
   11058:	mov	r1, r3
   1105c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11060:	bl	10c70 <strcmp@plt>
   11064:	mov	r3, r0
   11068:	cmp	r3, #0
   1106c:	bne	11034 <putchar_unlocked@plt+0x184>
   11070:	ldr	r3, [fp, #-12]
   11074:	ldr	r3, [r3, #4]
   11078:	cmp	r3, #0
   1107c:	beq	1108c <putchar_unlocked@plt+0x1dc>
   11080:	ldr	r3, [fp, #-12]
   11084:	ldr	r3, [r3, #4]
   11088:	str	r3, [fp, #-8]
   1108c:	ldr	r0, [pc, #200]	; 1115c <putchar_unlocked@plt+0x2ac>
   11090:	bl	10dcc <gettext@plt>
   11094:	mov	r3, r0
   11098:	ldr	r2, [pc, #192]	; 11160 <putchar_unlocked@plt+0x2b0>
   1109c:	ldr	r1, [pc, #192]	; 11164 <putchar_unlocked@plt+0x2b4>
   110a0:	mov	r0, r3
   110a4:	bl	10c7c <printf@plt>
   110a8:	mov	r1, #0
   110ac:	mov	r0, #5
   110b0:	bl	10e50 <setlocale@plt>
   110b4:	str	r0, [fp, #-16]
   110b8:	ldr	r3, [fp, #-16]
   110bc:	cmp	r3, #0
   110c0:	beq	11100 <putchar_unlocked@plt+0x250>
   110c4:	mov	r2, #3
   110c8:	ldr	r1, [pc, #152]	; 11168 <putchar_unlocked@plt+0x2b8>
   110cc:	ldr	r0, [fp, #-16]
   110d0:	bl	10e8c <strncmp@plt>
   110d4:	mov	r3, r0
   110d8:	cmp	r3, #0
   110dc:	beq	11100 <putchar_unlocked@plt+0x250>
   110e0:	ldr	r0, [pc, #132]	; 1116c <putchar_unlocked@plt+0x2bc>
   110e4:	bl	10dcc <gettext@plt>
   110e8:	mov	r2, r0
   110ec:	ldr	r3, [pc, #124]	; 11170 <putchar_unlocked@plt+0x2c0>
   110f0:	ldr	r3, [r3]
   110f4:	mov	r1, r3
   110f8:	mov	r0, r2
   110fc:	bl	10c58 <fputs_unlocked@plt>
   11100:	ldr	r0, [pc, #108]	; 11174 <putchar_unlocked@plt+0x2c4>
   11104:	bl	10dcc <gettext@plt>
   11108:	mov	r3, r0
   1110c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11110:	ldr	r1, [pc, #72]	; 11160 <putchar_unlocked@plt+0x2b0>
   11114:	mov	r0, r3
   11118:	bl	10c7c <printf@plt>
   1111c:	ldr	r0, [pc, #84]	; 11178 <putchar_unlocked@plt+0x2c8>
   11120:	bl	10dcc <gettext@plt>
   11124:	ldr	r2, [fp, #-8]
   11128:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1112c:	cmp	r2, r3
   11130:	bne	1113c <putchar_unlocked@plt+0x28c>
   11134:	ldr	r3, [pc, #64]	; 1117c <putchar_unlocked@plt+0x2cc>
   11138:	b	11140 <putchar_unlocked@plt+0x290>
   1113c:	ldr	r3, [pc, #60]	; 11180 <putchar_unlocked@plt+0x2d0>
   11140:	mov	r2, r3
   11144:	ldr	r1, [fp, #-8]
   11148:	bl	10c7c <printf@plt>
   1114c:	nop			; (mov r0, r0)
   11150:	sub	sp, fp, #4
   11154:	pop	{fp, pc}
   11158:	andeq	r6, r1, r8, lsl #29
   1115c:	andeq	r6, r1, r4, lsl sp
   11160:	andeq	r6, r1, ip, lsr #26
   11164:	andeq	r6, r1, r4, asr sp
   11168:	andeq	r6, r1, r4, ror #26
   1116c:	andeq	r6, r1, r8, ror #26
   11170:	andeq	r8, r2, r4, asr #2
   11174:			; <UNDEFINED> instruction: 0x00016db0
   11178:	andeq	r6, r1, ip, asr #27
   1117c:	andeq	r6, r1, r0, lsl #28
   11180:	andeq	r6, r1, ip, lsl #28
   11184:	push	{fp, lr}
   11188:	add	fp, sp, #4
   1118c:	sub	sp, sp, #16
   11190:	str	r0, [fp, #-16]
   11194:	str	r1, [fp, #-20]	; 0xffffffec
   11198:	ldr	r3, [fp, #-16]
   1119c:	str	r3, [fp, #-8]
   111a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   111a4:	str	r3, [fp, #-12]
   111a8:	ldr	r3, [fp, #-8]
   111ac:	ldr	r2, [r3]
   111b0:	ldr	r3, [fp, #-12]
   111b4:	ldr	r3, [r3]
   111b8:	mov	r1, r3
   111bc:	mov	r0, r2
   111c0:	bl	10c70 <strcmp@plt>
   111c4:	mov	r3, r0
   111c8:	mov	r0, r3
   111cc:	sub	sp, fp, #4
   111d0:	pop	{fp, pc}
   111d4:	push	{fp, lr}
   111d8:	add	fp, sp, #4
   111dc:	sub	sp, sp, #32
   111e0:	str	r0, [fp, #-32]	; 0xffffffe0
   111e4:	str	r1, [fp, #-36]	; 0xffffffdc
   111e8:	mov	r1, #4
   111ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   111f0:	bl	14e98 <putchar_unlocked@plt+0x3fe8>
   111f4:	mov	r3, r0
   111f8:	str	r3, [fp, #-16]
   111fc:	mov	r3, #0
   11200:	str	r3, [fp, #-12]
   11204:	b	11268 <putchar_unlocked@plt+0x3b8>
   11208:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1120c:	ldrb	r3, [r3, #44]	; 0x2c
   11210:	cmp	r3, #0
   11214:	beq	1125c <putchar_unlocked@plt+0x3ac>
   11218:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1121c:	ldrsh	r3, [r3]
   11220:	cmp	r3, #7
   11224:	bne	1125c <putchar_unlocked@plt+0x3ac>
   11228:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1122c:	bl	1421c <putchar_unlocked@plt+0x336c>
   11230:	mov	r3, r0
   11234:	str	r3, [fp, #-20]	; 0xffffffec
   11238:	ldr	r3, [fp, #-12]
   1123c:	lsl	r3, r3, #2
   11240:	ldr	r2, [fp, #-16]
   11244:	add	r3, r2, r3
   11248:	ldr	r2, [fp, #-20]	; 0xffffffec
   1124c:	str	r2, [r3]
   11250:	ldr	r3, [fp, #-12]
   11254:	add	r3, r3, #1
   11258:	str	r3, [fp, #-12]
   1125c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11260:	add	r3, r3, #384	; 0x180
   11264:	str	r3, [fp, #-36]	; 0xffffffdc
   11268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1126c:	sub	r2, r3, #1
   11270:	str	r2, [fp, #-32]	; 0xffffffe0
   11274:	cmp	r3, #0
   11278:	bne	11208 <putchar_unlocked@plt+0x358>
   1127c:	ldr	r3, [pc, #228]	; 11368 <putchar_unlocked@plt+0x4b8>
   11280:	mov	r2, #4
   11284:	ldr	r1, [fp, #-12]
   11288:	ldr	r0, [fp, #-16]
   1128c:	bl	10e74 <qsort@plt>
   11290:	mov	r3, #0
   11294:	str	r3, [fp, #-8]
   11298:	b	11300 <putchar_unlocked@plt+0x450>
   1129c:	ldr	r3, [fp, #-12]
   112a0:	sub	r2, r3, #1
   112a4:	ldr	r3, [fp, #-8]
   112a8:	cmp	r2, r3
   112ac:	bls	112b8 <putchar_unlocked@plt+0x408>
   112b0:	mov	r3, #32
   112b4:	b	112bc <putchar_unlocked@plt+0x40c>
   112b8:	mov	r3, #10
   112bc:	strb	r3, [fp, #-21]	; 0xffffffeb
   112c0:	ldr	r3, [fp, #-8]
   112c4:	lsl	r3, r3, #2
   112c8:	ldr	r2, [fp, #-16]
   112cc:	add	r3, r2, r3
   112d0:	ldr	r2, [r3]
   112d4:	ldr	r3, [pc, #144]	; 1136c <putchar_unlocked@plt+0x4bc>
   112d8:	ldr	r3, [r3]
   112dc:	mov	r1, r3
   112e0:	mov	r0, r2
   112e4:	bl	10c58 <fputs_unlocked@plt>
   112e8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   112ec:	mov	r0, r3
   112f0:	bl	10eb0 <putchar_unlocked@plt>
   112f4:	ldr	r3, [fp, #-8]
   112f8:	add	r3, r3, #1
   112fc:	str	r3, [fp, #-8]
   11300:	ldr	r2, [fp, #-8]
   11304:	ldr	r3, [fp, #-12]
   11308:	cmp	r2, r3
   1130c:	bcc	1129c <putchar_unlocked@plt+0x3ec>
   11310:	mov	r3, #0
   11314:	str	r3, [fp, #-8]
   11318:	b	11344 <putchar_unlocked@plt+0x494>
   1131c:	ldr	r3, [fp, #-8]
   11320:	lsl	r3, r3, #2
   11324:	ldr	r2, [fp, #-16]
   11328:	add	r3, r2, r3
   1132c:	ldr	r3, [r3]
   11330:	mov	r0, r3
   11334:	bl	1181c <putchar_unlocked@plt+0x96c>
   11338:	ldr	r3, [fp, #-8]
   1133c:	add	r3, r3, #1
   11340:	str	r3, [fp, #-8]
   11344:	ldr	r2, [fp, #-8]
   11348:	ldr	r3, [fp, #-12]
   1134c:	cmp	r2, r3
   11350:	bcc	1131c <putchar_unlocked@plt+0x46c>
   11354:	ldr	r0, [fp, #-16]
   11358:	bl	1181c <putchar_unlocked@plt+0x96c>
   1135c:	nop			; (mov r0, r0)
   11360:	sub	sp, fp, #4
   11364:	pop	{fp, pc}
   11368:	andeq	r1, r1, r4, lsl #3
   1136c:	andeq	r8, r2, r4, asr #2
   11370:	push	{r4, fp, lr}
   11374:	add	fp, sp, #8
   11378:	sub	sp, sp, #20
   1137c:	str	r0, [fp, #-24]	; 0xffffffe8
   11380:	str	r1, [fp, #-28]	; 0xffffffe4
   11384:	sub	r2, fp, #20
   11388:	sub	r1, fp, #16
   1138c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11394:	bl	143c0 <putchar_unlocked@plt+0x3510>
   11398:	mov	r3, r0
   1139c:	cmp	r3, #0
   113a0:	beq	113d4 <putchar_unlocked@plt+0x524>
   113a4:	bl	10df0 <__errno_location@plt>
   113a8:	mov	r3, r0
   113ac:	ldr	r4, [r3]
   113b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   113b4:	mov	r1, #3
   113b8:	mov	r0, #0
   113bc:	bl	13f80 <putchar_unlocked@plt+0x30d0>
   113c0:	mov	r3, r0
   113c4:	ldr	r2, [pc, #52]	; 11400 <putchar_unlocked@plt+0x550>
   113c8:	mov	r1, r4
   113cc:	mov	r0, #1
   113d0:	bl	10d60 <error@plt>
   113d4:	ldr	r3, [fp, #-16]
   113d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   113dc:	mov	r1, r2
   113e0:	mov	r0, r3
   113e4:	bl	111d4 <putchar_unlocked@plt+0x324>
   113e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   113ec:	mov	r0, r3
   113f0:	bl	1181c <putchar_unlocked@plt+0x96c>
   113f4:	nop			; (mov r0, r0)
   113f8:	sub	sp, fp, #8
   113fc:	pop	{r4, fp, pc}
   11400:	andeq	r6, r1, r0, asr #29
   11404:	push	{r4, fp, lr}
   11408:	add	fp, sp, #8
   1140c:	sub	sp, sp, #12
   11410:	str	r0, [fp, #-16]
   11414:	ldr	r3, [fp, #-16]
   11418:	cmp	r3, #0
   1141c:	beq	1144c <putchar_unlocked@plt+0x59c>
   11420:	ldr	r3, [pc, #176]	; 114d8 <putchar_unlocked@plt+0x628>
   11424:	ldr	r4, [r3]
   11428:	ldr	r0, [pc, #172]	; 114dc <putchar_unlocked@plt+0x62c>
   1142c:	bl	10dcc <gettext@plt>
   11430:	mov	r1, r0
   11434:	ldr	r3, [pc, #164]	; 114e0 <putchar_unlocked@plt+0x630>
   11438:	ldr	r3, [r3]
   1143c:	mov	r2, r3
   11440:	mov	r0, r4
   11444:	bl	10de4 <fprintf@plt>
   11448:	b	114d0 <putchar_unlocked@plt+0x620>
   1144c:	ldr	r0, [pc, #144]	; 114e4 <putchar_unlocked@plt+0x634>
   11450:	bl	10dcc <gettext@plt>
   11454:	mov	r2, r0
   11458:	ldr	r3, [pc, #128]	; 114e0 <putchar_unlocked@plt+0x630>
   1145c:	ldr	r3, [r3]
   11460:	mov	r1, r3
   11464:	mov	r0, r2
   11468:	bl	10c7c <printf@plt>
   1146c:	ldr	r0, [pc, #116]	; 114e8 <putchar_unlocked@plt+0x638>
   11470:	bl	10dcc <gettext@plt>
   11474:	mov	r3, r0
   11478:	ldr	r2, [pc, #108]	; 114ec <putchar_unlocked@plt+0x63c>
   1147c:	ldr	r1, [pc, #108]	; 114f0 <putchar_unlocked@plt+0x640>
   11480:	mov	r0, r3
   11484:	bl	10c7c <printf@plt>
   11488:	ldr	r0, [pc, #100]	; 114f4 <putchar_unlocked@plt+0x644>
   1148c:	bl	10dcc <gettext@plt>
   11490:	mov	r2, r0
   11494:	ldr	r3, [pc, #92]	; 114f8 <putchar_unlocked@plt+0x648>
   11498:	ldr	r3, [r3]
   1149c:	mov	r1, r3
   114a0:	mov	r0, r2
   114a4:	bl	10c58 <fputs_unlocked@plt>
   114a8:	ldr	r0, [pc, #76]	; 114fc <putchar_unlocked@plt+0x64c>
   114ac:	bl	10dcc <gettext@plt>
   114b0:	mov	r2, r0
   114b4:	ldr	r3, [pc, #60]	; 114f8 <putchar_unlocked@plt+0x648>
   114b8:	ldr	r3, [r3]
   114bc:	mov	r1, r3
   114c0:	mov	r0, r2
   114c4:	bl	10c58 <fputs_unlocked@plt>
   114c8:	ldr	r0, [pc, #48]	; 11500 <putchar_unlocked@plt+0x650>
   114cc:	bl	10fe4 <putchar_unlocked@plt+0x134>
   114d0:	ldr	r0, [fp, #-16]
   114d4:	bl	10dc0 <exit@plt>
   114d8:	andeq	r8, r2, r0, asr #2
   114dc:	andeq	r6, r1, r4, asr #29
   114e0:	andeq	r8, r2, r8, asr r1
   114e4:	andeq	r6, r1, ip, ror #29
   114e8:	andeq	r6, r1, ip, lsl #30
   114ec:	andeq	r6, r1, ip, ror pc
   114f0:	andeq	r6, r1, ip, lsl #31
   114f4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   114f8:	andeq	r8, r2, r4, asr #2
   114fc:	andeq	r6, r1, ip, asr #31
   11500:	andeq	r7, r1, r4
   11504:	push	{r4, fp, lr}
   11508:	add	fp, sp, #8
   1150c:	sub	sp, sp, #36	; 0x24
   11510:	str	r0, [fp, #-16]
   11514:	str	r1, [fp, #-20]	; 0xffffffec
   11518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1151c:	ldr	r3, [r3]
   11520:	mov	r0, r3
   11524:	bl	11ac0 <putchar_unlocked@plt+0xc10>
   11528:	ldr	r1, [pc, #288]	; 11650 <putchar_unlocked@plt+0x7a0>
   1152c:	mov	r0, #6
   11530:	bl	10e50 <setlocale@plt>
   11534:	ldr	r1, [pc, #280]	; 11654 <putchar_unlocked@plt+0x7a4>
   11538:	ldr	r0, [pc, #280]	; 11658 <putchar_unlocked@plt+0x7a8>
   1153c:	bl	10e80 <bindtextdomain@plt>
   11540:	ldr	r0, [pc, #272]	; 11658 <putchar_unlocked@plt+0x7a8>
   11544:	bl	10d00 <textdomain@plt>
   11548:	ldr	r0, [pc, #268]	; 1165c <putchar_unlocked@plt+0x7ac>
   1154c:	bl	16cf0 <putchar_unlocked@plt+0x5e40>
   11550:	ldr	r3, [pc, #264]	; 11660 <putchar_unlocked@plt+0x7b0>
   11554:	ldr	r3, [r3]
   11558:	mov	r2, #0
   1155c:	str	r2, [sp, #20]
   11560:	ldr	r2, [pc, #252]	; 11664 <putchar_unlocked@plt+0x7b4>
   11564:	str	r2, [sp, #16]
   11568:	ldr	r2, [pc, #248]	; 11668 <putchar_unlocked@plt+0x7b8>
   1156c:	str	r2, [sp, #12]
   11570:	ldr	r2, [pc, #244]	; 1166c <putchar_unlocked@plt+0x7bc>
   11574:	str	r2, [sp, #8]
   11578:	mov	r2, #1
   1157c:	str	r2, [sp, #4]
   11580:	str	r3, [sp]
   11584:	ldr	r3, [pc, #228]	; 11670 <putchar_unlocked@plt+0x7c0>
   11588:	ldr	r2, [pc, #228]	; 11674 <putchar_unlocked@plt+0x7c4>
   1158c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11590:	ldr	r0, [fp, #-16]
   11594:	bl	119a4 <putchar_unlocked@plt+0xaf4>
   11598:	ldr	r3, [pc, #216]	; 11678 <putchar_unlocked@plt+0x7c8>
   1159c:	ldr	r3, [r3]
   115a0:	ldr	r2, [fp, #-16]
   115a4:	sub	r3, r2, r3
   115a8:	cmp	r3, #0
   115ac:	beq	115bc <putchar_unlocked@plt+0x70c>
   115b0:	cmp	r3, #1
   115b4:	beq	115cc <putchar_unlocked@plt+0x71c>
   115b8:	b	115f4 <putchar_unlocked@plt+0x744>
   115bc:	mov	r1, #1
   115c0:	ldr	r0, [pc, #180]	; 1167c <putchar_unlocked@plt+0x7cc>
   115c4:	bl	11370 <putchar_unlocked@plt+0x4c0>
   115c8:	b	11640 <putchar_unlocked@plt+0x790>
   115cc:	ldr	r3, [pc, #164]	; 11678 <putchar_unlocked@plt+0x7c8>
   115d0:	ldr	r3, [r3]
   115d4:	lsl	r3, r3, #2
   115d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   115dc:	add	r3, r2, r3
   115e0:	ldr	r3, [r3]
   115e4:	mov	r1, #0
   115e8:	mov	r0, r3
   115ec:	bl	11370 <putchar_unlocked@plt+0x4c0>
   115f0:	b	11640 <putchar_unlocked@plt+0x790>
   115f4:	ldr	r0, [pc, #132]	; 11680 <putchar_unlocked@plt+0x7d0>
   115f8:	bl	10dcc <gettext@plt>
   115fc:	mov	r4, r0
   11600:	ldr	r3, [pc, #112]	; 11678 <putchar_unlocked@plt+0x7c8>
   11604:	ldr	r3, [r3]
   11608:	add	r3, r3, #1
   1160c:	lsl	r3, r3, #2
   11610:	ldr	r2, [fp, #-20]	; 0xffffffec
   11614:	add	r3, r2, r3
   11618:	ldr	r3, [r3]
   1161c:	mov	r0, r3
   11620:	bl	141f0 <putchar_unlocked@plt+0x3340>
   11624:	mov	r3, r0
   11628:	mov	r2, r4
   1162c:	mov	r1, #0
   11630:	mov	r0, #0
   11634:	bl	10d60 <error@plt>
   11638:	mov	r0, #1
   1163c:	bl	11404 <putchar_unlocked@plt+0x554>
   11640:	mov	r3, #0
   11644:	mov	r0, r3
   11648:	sub	sp, fp, #8
   1164c:	pop	{r4, fp, pc}
   11650:	andeq	r6, r1, ip, lsl #28
   11654:	andeq	r7, r1, ip
   11658:	andeq	r6, r1, r4, lsr #28
   1165c:	andeq	r1, r1, r8, ror #13
   11660:	andeq	r8, r2, r8, ror #1
   11664:	andeq	r7, r1, r4, lsr #32
   11668:	andeq	r7, r1, r4, lsr r0
   1166c:	andeq	r1, r1, r4, lsl #8
   11670:	andeq	r6, r1, r4, asr sp
   11674:	andeq	r7, r1, r4
   11678:	andeq	r8, r2, r8, lsr r1
   1167c:	andeq	r6, r1, ip, lsl #31
   11680:	andeq	r7, r1, r8, asr #32
   11684:	push	{fp}		; (str fp, [sp, #-4]!)
   11688:	add	fp, sp, #0
   1168c:	sub	sp, sp, #12
   11690:	str	r0, [fp, #-8]
   11694:	ldr	r2, [pc, #20]	; 116b0 <putchar_unlocked@plt+0x800>
   11698:	ldr	r3, [fp, #-8]
   1169c:	str	r3, [r2]
   116a0:	nop			; (mov r0, r0)
   116a4:	add	sp, fp, #0
   116a8:	pop	{fp}		; (ldr fp, [sp], #4)
   116ac:	bx	lr
   116b0:	andeq	r8, r2, r0, asr r1
   116b4:	push	{fp}		; (str fp, [sp, #-4]!)
   116b8:	add	fp, sp, #0
   116bc:	sub	sp, sp, #12
   116c0:	mov	r3, r0
   116c4:	strb	r3, [fp, #-5]
   116c8:	ldr	r2, [pc, #20]	; 116e4 <putchar_unlocked@plt+0x834>
   116cc:	ldrb	r3, [fp, #-5]
   116d0:	strb	r3, [r2]
   116d4:	nop			; (mov r0, r0)
   116d8:	add	sp, fp, #0
   116dc:	pop	{fp}		; (ldr fp, [sp], #4)
   116e0:	bx	lr
   116e4:	andeq	r8, r2, r4, asr r1
   116e8:	push	{r4, fp, lr}
   116ec:	add	fp, sp, #8
   116f0:	sub	sp, sp, #20
   116f4:	ldr	r3, [pc, #256]	; 117fc <putchar_unlocked@plt+0x94c>
   116f8:	ldr	r3, [r3]
   116fc:	mov	r0, r3
   11700:	bl	15ae8 <putchar_unlocked@plt+0x4c38>
   11704:	mov	r3, r0
   11708:	cmp	r3, #0
   1170c:	beq	117c4 <putchar_unlocked@plt+0x914>
   11710:	ldr	r3, [pc, #232]	; 11800 <putchar_unlocked@plt+0x950>
   11714:	ldrb	r3, [r3]
   11718:	eor	r3, r3, #1
   1171c:	uxtb	r3, r3
   11720:	cmp	r3, #0
   11724:	bne	1173c <putchar_unlocked@plt+0x88c>
   11728:	bl	10df0 <__errno_location@plt>
   1172c:	mov	r3, r0
   11730:	ldr	r3, [r3]
   11734:	cmp	r3, #32
   11738:	beq	117c4 <putchar_unlocked@plt+0x914>
   1173c:	ldr	r0, [pc, #192]	; 11804 <putchar_unlocked@plt+0x954>
   11740:	bl	10dcc <gettext@plt>
   11744:	str	r0, [fp, #-16]
   11748:	ldr	r3, [pc, #184]	; 11808 <putchar_unlocked@plt+0x958>
   1174c:	ldr	r3, [r3]
   11750:	cmp	r3, #0
   11754:	beq	11798 <putchar_unlocked@plt+0x8e8>
   11758:	bl	10df0 <__errno_location@plt>
   1175c:	mov	r3, r0
   11760:	ldr	r4, [r3]
   11764:	ldr	r3, [pc, #156]	; 11808 <putchar_unlocked@plt+0x958>
   11768:	ldr	r3, [r3]
   1176c:	mov	r0, r3
   11770:	bl	13f20 <putchar_unlocked@plt+0x3070>
   11774:	mov	r2, r0
   11778:	ldr	r3, [fp, #-16]
   1177c:	str	r3, [sp]
   11780:	mov	r3, r2
   11784:	ldr	r2, [pc, #128]	; 1180c <putchar_unlocked@plt+0x95c>
   11788:	mov	r1, r4
   1178c:	mov	r0, #0
   11790:	bl	10d60 <error@plt>
   11794:	b	117b4 <putchar_unlocked@plt+0x904>
   11798:	bl	10df0 <__errno_location@plt>
   1179c:	mov	r3, r0
   117a0:	ldr	r1, [r3]
   117a4:	ldr	r3, [fp, #-16]
   117a8:	ldr	r2, [pc, #96]	; 11810 <putchar_unlocked@plt+0x960>
   117ac:	mov	r0, #0
   117b0:	bl	10d60 <error@plt>
   117b4:	ldr	r3, [pc, #88]	; 11814 <putchar_unlocked@plt+0x964>
   117b8:	ldr	r3, [r3]
   117bc:	mov	r0, r3
   117c0:	bl	10cac <_exit@plt>
   117c4:	ldr	r3, [pc, #76]	; 11818 <putchar_unlocked@plt+0x968>
   117c8:	ldr	r3, [r3]
   117cc:	mov	r0, r3
   117d0:	bl	15ae8 <putchar_unlocked@plt+0x4c38>
   117d4:	mov	r3, r0
   117d8:	cmp	r3, #0
   117dc:	beq	117f0 <putchar_unlocked@plt+0x940>
   117e0:	ldr	r3, [pc, #44]	; 11814 <putchar_unlocked@plt+0x964>
   117e4:	ldr	r3, [r3]
   117e8:	mov	r0, r3
   117ec:	bl	10cac <_exit@plt>
   117f0:	nop			; (mov r0, r0)
   117f4:	sub	sp, fp, #8
   117f8:	pop	{r4, fp, pc}
   117fc:	andeq	r8, r2, r4, asr #2
   11800:	andeq	r8, r2, r4, asr r1
   11804:	andeq	r7, r1, ip, rrx
   11808:	andeq	r8, r2, r0, asr r1
   1180c:	andeq	r7, r1, r8, ror r0
   11810:	andeq	r7, r1, r0, lsl #1
   11814:	andeq	r8, r2, ip, ror #1
   11818:	andeq	r8, r2, r0, asr #2
   1181c:	push	{r4, fp, lr}
   11820:	add	fp, sp, #8
   11824:	sub	sp, sp, #20
   11828:	str	r0, [fp, #-24]	; 0xffffffe8
   1182c:	bl	10df0 <__errno_location@plt>
   11830:	mov	r3, r0
   11834:	ldr	r3, [r3]
   11838:	str	r3, [fp, #-20]	; 0xffffffec
   1183c:	bl	10df0 <__errno_location@plt>
   11840:	mov	r3, r0
   11844:	ldr	r3, [r3]
   11848:	str	r3, [fp, #-16]
   1184c:	bl	10df0 <__errno_location@plt>
   11850:	mov	r2, r0
   11854:	mov	r3, #0
   11858:	str	r3, [r2]
   1185c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11860:	bl	10ca0 <free@plt>
   11864:	bl	10df0 <__errno_location@plt>
   11868:	mov	r4, r0
   1186c:	bl	10df0 <__errno_location@plt>
   11870:	mov	r3, r0
   11874:	ldr	r3, [r3]
   11878:	cmp	r3, #0
   1187c:	moveq	r3, #1
   11880:	movne	r3, #0
   11884:	uxtb	r3, r3
   11888:	lsl	r3, r3, #2
   1188c:	sub	r2, fp, #12
   11890:	add	r3, r2, r3
   11894:	ldr	r3, [r3, #-8]
   11898:	str	r3, [r4]
   1189c:	nop			; (mov r0, r0)
   118a0:	sub	sp, fp, #8
   118a4:	pop	{r4, fp, pc}
   118a8:	push	{fp, lr}
   118ac:	add	fp, sp, #4
   118b0:	sub	sp, sp, #40	; 0x28
   118b4:	str	r0, [fp, #-24]	; 0xffffffe8
   118b8:	str	r1, [fp, #-28]	; 0xffffffe4
   118bc:	str	r2, [fp, #-32]	; 0xffffffe0
   118c0:	str	r3, [fp, #-36]	; 0xffffffdc
   118c4:	ldr	r3, [pc, #196]	; 11990 <putchar_unlocked@plt+0xae0>
   118c8:	ldr	r3, [r3]
   118cc:	str	r3, [fp, #-8]
   118d0:	ldr	r3, [pc, #184]	; 11990 <putchar_unlocked@plt+0xae0>
   118d4:	mov	r2, #0
   118d8:	str	r2, [r3]
   118dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118e0:	cmp	r3, #2
   118e4:	bne	1196c <putchar_unlocked@plt+0xabc>
   118e8:	mov	r3, #0
   118ec:	str	r3, [sp]
   118f0:	ldr	r3, [pc, #156]	; 11994 <putchar_unlocked@plt+0xae4>
   118f4:	ldr	r2, [pc, #156]	; 11998 <putchar_unlocked@plt+0xae8>
   118f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   118fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11900:	bl	10d9c <getopt_long@plt>
   11904:	str	r0, [fp, #-12]
   11908:	ldr	r3, [fp, #-12]
   1190c:	cmn	r3, #1
   11910:	beq	1196c <putchar_unlocked@plt+0xabc>
   11914:	ldr	r3, [fp, #-12]
   11918:	cmp	r3, #104	; 0x68
   1191c:	beq	1192c <putchar_unlocked@plt+0xa7c>
   11920:	cmp	r3, #118	; 0x76
   11924:	beq	1193c <putchar_unlocked@plt+0xa8c>
   11928:	b	1196c <putchar_unlocked@plt+0xabc>
   1192c:	ldr	r3, [fp, #8]
   11930:	mov	r0, #0
   11934:	blx	r3
   11938:	b	1196c <putchar_unlocked@plt+0xabc>
   1193c:	add	r3, fp, #12
   11940:	str	r3, [fp, #-16]
   11944:	ldr	r3, [pc, #80]	; 1199c <putchar_unlocked@plt+0xaec>
   11948:	ldr	r0, [r3]
   1194c:	ldr	r3, [fp, #-16]
   11950:	str	r3, [sp]
   11954:	ldr	r3, [fp, #4]
   11958:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1195c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11960:	bl	14ac0 <putchar_unlocked@plt+0x3c10>
   11964:	mov	r0, #0
   11968:	bl	10dc0 <exit@plt>
   1196c:	ldr	r2, [pc, #28]	; 11990 <putchar_unlocked@plt+0xae0>
   11970:	ldr	r3, [fp, #-8]
   11974:	str	r3, [r2]
   11978:	ldr	r3, [pc, #32]	; 119a0 <putchar_unlocked@plt+0xaf0>
   1197c:	mov	r2, #0
   11980:	str	r2, [r3]
   11984:	nop			; (mov r0, r0)
   11988:	sub	sp, fp, #4
   1198c:	pop	{fp, pc}
   11990:	andeq	r8, r2, r8, asr #2
   11994:	muleq	r1, r4, r0
   11998:	andeq	r7, r1, r4, asr #1
   1199c:	andeq	r8, r2, r4, asr #2
   119a0:	andeq	r8, r2, r8, lsr r1
   119a4:	push	{fp, lr}
   119a8:	add	fp, sp, #4
   119ac:	sub	sp, sp, #40	; 0x28
   119b0:	str	r0, [fp, #-24]	; 0xffffffe8
   119b4:	str	r1, [fp, #-28]	; 0xffffffe4
   119b8:	str	r2, [fp, #-32]	; 0xffffffe0
   119bc:	str	r3, [fp, #-36]	; 0xffffffdc
   119c0:	ldr	r3, [pc, #224]	; 11aa8 <putchar_unlocked@plt+0xbf8>
   119c4:	ldr	r3, [r3]
   119c8:	str	r3, [fp, #-8]
   119cc:	ldr	r3, [pc, #212]	; 11aa8 <putchar_unlocked@plt+0xbf8>
   119d0:	mov	r2, #1
   119d4:	str	r2, [r3]
   119d8:	ldrb	r3, [fp, #8]
   119dc:	cmp	r3, #0
   119e0:	beq	119ec <putchar_unlocked@plt+0xb3c>
   119e4:	ldr	r3, [pc, #192]	; 11aac <putchar_unlocked@plt+0xbfc>
   119e8:	b	119f0 <putchar_unlocked@plt+0xb40>
   119ec:	ldr	r3, [pc, #188]	; 11ab0 <putchar_unlocked@plt+0xc00>
   119f0:	str	r3, [fp, #-12]
   119f4:	mov	r3, #0
   119f8:	str	r3, [sp]
   119fc:	ldr	r3, [pc, #176]	; 11ab4 <putchar_unlocked@plt+0xc04>
   11a00:	ldr	r2, [fp, #-12]
   11a04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a0c:	bl	10d9c <getopt_long@plt>
   11a10:	str	r0, [fp, #-16]
   11a14:	ldr	r3, [fp, #-16]
   11a18:	cmn	r3, #1
   11a1c:	beq	11a90 <putchar_unlocked@plt+0xbe0>
   11a20:	ldr	r3, [fp, #-16]
   11a24:	cmp	r3, #104	; 0x68
   11a28:	beq	11a38 <putchar_unlocked@plt+0xb88>
   11a2c:	cmp	r3, #118	; 0x76
   11a30:	beq	11a48 <putchar_unlocked@plt+0xb98>
   11a34:	b	11a78 <putchar_unlocked@plt+0xbc8>
   11a38:	ldr	r3, [fp, #12]
   11a3c:	mov	r0, #0
   11a40:	blx	r3
   11a44:	b	11a90 <putchar_unlocked@plt+0xbe0>
   11a48:	add	r3, fp, #16
   11a4c:	str	r3, [fp, #-20]	; 0xffffffec
   11a50:	ldr	r3, [pc, #96]	; 11ab8 <putchar_unlocked@plt+0xc08>
   11a54:	ldr	r0, [r3]
   11a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a5c:	str	r3, [sp]
   11a60:	ldr	r3, [fp, #4]
   11a64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11a68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11a6c:	bl	14ac0 <putchar_unlocked@plt+0x3c10>
   11a70:	mov	r0, #0
   11a74:	bl	10dc0 <exit@plt>
   11a78:	ldr	r3, [pc, #60]	; 11abc <putchar_unlocked@plt+0xc0c>
   11a7c:	ldr	r2, [r3]
   11a80:	ldr	r3, [fp, #12]
   11a84:	mov	r0, r2
   11a88:	blx	r3
   11a8c:	nop			; (mov r0, r0)
   11a90:	ldr	r2, [pc, #16]	; 11aa8 <putchar_unlocked@plt+0xbf8>
   11a94:	ldr	r3, [fp, #-8]
   11a98:	str	r3, [r2]
   11a9c:	nop			; (mov r0, r0)
   11aa0:	sub	sp, fp, #4
   11aa4:	pop	{fp, pc}
   11aa8:	andeq	r8, r2, r8, asr #2
   11aac:	andeq	r7, r1, r8, asr #1
   11ab0:	andeq	r7, r1, r4, asr #1
   11ab4:	muleq	r1, r4, r0
   11ab8:	andeq	r8, r2, r4, asr #2
   11abc:	andeq	r8, r2, ip, ror #1
   11ac0:	push	{fp, lr}
   11ac4:	add	fp, sp, #4
   11ac8:	sub	sp, sp, #16
   11acc:	str	r0, [fp, #-16]
   11ad0:	ldr	r3, [fp, #-16]
   11ad4:	cmp	r3, #0
   11ad8:	bne	11af8 <putchar_unlocked@plt+0xc48>
   11adc:	ldr	r3, [pc, #220]	; 11bc0 <putchar_unlocked@plt+0xd10>
   11ae0:	ldr	r3, [r3]
   11ae4:	mov	r2, #55	; 0x37
   11ae8:	mov	r1, #1
   11aec:	ldr	r0, [pc, #208]	; 11bc4 <putchar_unlocked@plt+0xd14>
   11af0:	bl	10d18 <fwrite@plt>
   11af4:	bl	10e98 <abort@plt>
   11af8:	mov	r1, #47	; 0x2f
   11afc:	ldr	r0, [fp, #-16]
   11b00:	bl	10e5c <strrchr@plt>
   11b04:	str	r0, [fp, #-8]
   11b08:	ldr	r3, [fp, #-8]
   11b0c:	cmp	r3, #0
   11b10:	beq	11b20 <putchar_unlocked@plt+0xc70>
   11b14:	ldr	r3, [fp, #-8]
   11b18:	add	r3, r3, #1
   11b1c:	b	11b24 <putchar_unlocked@plt+0xc74>
   11b20:	ldr	r3, [fp, #-16]
   11b24:	str	r3, [fp, #-12]
   11b28:	ldr	r2, [fp, #-12]
   11b2c:	ldr	r3, [fp, #-16]
   11b30:	sub	r3, r2, r3
   11b34:	cmp	r3, #6
   11b38:	ble	11b9c <putchar_unlocked@plt+0xcec>
   11b3c:	ldr	r3, [fp, #-12]
   11b40:	sub	r3, r3, #7
   11b44:	mov	r2, #7
   11b48:	ldr	r1, [pc, #120]	; 11bc8 <putchar_unlocked@plt+0xd18>
   11b4c:	mov	r0, r3
   11b50:	bl	10e8c <strncmp@plt>
   11b54:	mov	r3, r0
   11b58:	cmp	r3, #0
   11b5c:	bne	11b9c <putchar_unlocked@plt+0xcec>
   11b60:	ldr	r3, [fp, #-12]
   11b64:	str	r3, [fp, #-16]
   11b68:	mov	r2, #3
   11b6c:	ldr	r1, [pc, #88]	; 11bcc <putchar_unlocked@plt+0xd1c>
   11b70:	ldr	r0, [fp, #-12]
   11b74:	bl	10e8c <strncmp@plt>
   11b78:	mov	r3, r0
   11b7c:	cmp	r3, #0
   11b80:	bne	11b9c <putchar_unlocked@plt+0xcec>
   11b84:	ldr	r3, [fp, #-12]
   11b88:	add	r3, r3, #3
   11b8c:	str	r3, [fp, #-16]
   11b90:	ldr	r2, [pc, #56]	; 11bd0 <putchar_unlocked@plt+0xd20>
   11b94:	ldr	r3, [fp, #-16]
   11b98:	str	r3, [r2]
   11b9c:	ldr	r2, [pc, #48]	; 11bd4 <putchar_unlocked@plt+0xd24>
   11ba0:	ldr	r3, [fp, #-16]
   11ba4:	str	r3, [r2]
   11ba8:	ldr	r2, [pc, #40]	; 11bd8 <putchar_unlocked@plt+0xd28>
   11bac:	ldr	r3, [fp, #-16]
   11bb0:	str	r3, [r2]
   11bb4:	nop			; (mov r0, r0)
   11bb8:	sub	sp, fp, #4
   11bbc:	pop	{fp, pc}
   11bc0:	andeq	r8, r2, r0, asr #2
   11bc4:	andeq	r7, r1, ip, asr #1
   11bc8:	andeq	r7, r1, r4, lsl #2
   11bcc:	andeq	r7, r1, ip, lsl #2
   11bd0:	andeq	r8, r2, r0, lsr r1
   11bd4:	andeq	r8, r2, r8, asr r1
   11bd8:	andeq	r8, r2, r4, lsr r1
   11bdc:	push	{fp, lr}
   11be0:	add	fp, sp, #4
   11be4:	sub	sp, sp, #16
   11be8:	str	r0, [fp, #-16]
   11bec:	bl	10df0 <__errno_location@plt>
   11bf0:	mov	r3, r0
   11bf4:	ldr	r3, [r3]
   11bf8:	str	r3, [fp, #-8]
   11bfc:	ldr	r3, [fp, #-16]
   11c00:	cmp	r3, #0
   11c04:	beq	11c10 <putchar_unlocked@plt+0xd60>
   11c08:	ldr	r3, [fp, #-16]
   11c0c:	b	11c14 <putchar_unlocked@plt+0xd64>
   11c10:	ldr	r3, [pc, #48]	; 11c48 <putchar_unlocked@plt+0xd98>
   11c14:	mov	r1, #48	; 0x30
   11c18:	mov	r0, r3
   11c1c:	bl	156b4 <putchar_unlocked@plt+0x4804>
   11c20:	mov	r3, r0
   11c24:	str	r3, [fp, #-12]
   11c28:	bl	10df0 <__errno_location@plt>
   11c2c:	mov	r2, r0
   11c30:	ldr	r3, [fp, #-8]
   11c34:	str	r3, [r2]
   11c38:	ldr	r3, [fp, #-12]
   11c3c:	mov	r0, r3
   11c40:	sub	sp, fp, #4
   11c44:	pop	{fp, pc}
   11c48:	andeq	r8, r2, ip, asr r1
   11c4c:	push	{fp}		; (str fp, [sp, #-4]!)
   11c50:	add	fp, sp, #0
   11c54:	sub	sp, sp, #12
   11c58:	str	r0, [fp, #-8]
   11c5c:	ldr	r3, [fp, #-8]
   11c60:	cmp	r3, #0
   11c64:	beq	11c70 <putchar_unlocked@plt+0xdc0>
   11c68:	ldr	r3, [fp, #-8]
   11c6c:	b	11c74 <putchar_unlocked@plt+0xdc4>
   11c70:	ldr	r3, [pc, #16]	; 11c88 <putchar_unlocked@plt+0xdd8>
   11c74:	ldr	r3, [r3]
   11c78:	mov	r0, r3
   11c7c:	add	sp, fp, #0
   11c80:	pop	{fp}		; (ldr fp, [sp], #4)
   11c84:	bx	lr
   11c88:	andeq	r8, r2, ip, asr r1
   11c8c:	push	{fp}		; (str fp, [sp, #-4]!)
   11c90:	add	fp, sp, #0
   11c94:	sub	sp, sp, #12
   11c98:	str	r0, [fp, #-8]
   11c9c:	str	r1, [fp, #-12]
   11ca0:	ldr	r3, [fp, #-8]
   11ca4:	cmp	r3, #0
   11ca8:	beq	11cb4 <putchar_unlocked@plt+0xe04>
   11cac:	ldr	r3, [fp, #-8]
   11cb0:	b	11cb8 <putchar_unlocked@plt+0xe08>
   11cb4:	ldr	r3, [pc, #20]	; 11cd0 <putchar_unlocked@plt+0xe20>
   11cb8:	ldr	r2, [fp, #-12]
   11cbc:	str	r2, [r3]
   11cc0:	nop			; (mov r0, r0)
   11cc4:	add	sp, fp, #0
   11cc8:	pop	{fp}		; (ldr fp, [sp], #4)
   11ccc:	bx	lr
   11cd0:	andeq	r8, r2, ip, asr r1
   11cd4:	push	{fp}		; (str fp, [sp, #-4]!)
   11cd8:	add	fp, sp, #0
   11cdc:	sub	sp, sp, #36	; 0x24
   11ce0:	str	r0, [fp, #-24]	; 0xffffffe8
   11ce4:	mov	r3, r1
   11ce8:	str	r2, [fp, #-32]	; 0xffffffe0
   11cec:	strb	r3, [fp, #-25]	; 0xffffffe7
   11cf0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   11cf4:	strb	r3, [fp, #-5]
   11cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cfc:	cmp	r3, #0
   11d00:	beq	11d0c <putchar_unlocked@plt+0xe5c>
   11d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d08:	b	11d10 <putchar_unlocked@plt+0xe60>
   11d0c:	ldr	r3, [pc, #124]	; 11d90 <putchar_unlocked@plt+0xee0>
   11d10:	add	r2, r3, #8
   11d14:	ldrb	r3, [fp, #-5]
   11d18:	lsr	r3, r3, #5
   11d1c:	uxtb	r3, r3
   11d20:	lsl	r3, r3, #2
   11d24:	add	r3, r2, r3
   11d28:	str	r3, [fp, #-12]
   11d2c:	ldrb	r3, [fp, #-5]
   11d30:	and	r3, r3, #31
   11d34:	str	r3, [fp, #-16]
   11d38:	ldr	r3, [fp, #-12]
   11d3c:	ldr	r2, [r3]
   11d40:	ldr	r3, [fp, #-16]
   11d44:	lsr	r3, r2, r3
   11d48:	and	r3, r3, #1
   11d4c:	str	r3, [fp, #-20]	; 0xffffffec
   11d50:	ldr	r3, [fp, #-12]
   11d54:	ldr	r3, [r3]
   11d58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11d5c:	and	r1, r2, #1
   11d60:	ldr	r2, [fp, #-20]	; 0xffffffec
   11d64:	eor	r1, r1, r2
   11d68:	ldr	r2, [fp, #-16]
   11d6c:	lsl	r2, r1, r2
   11d70:	eor	r2, r2, r3
   11d74:	ldr	r3, [fp, #-12]
   11d78:	str	r2, [r3]
   11d7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d80:	mov	r0, r3
   11d84:	add	sp, fp, #0
   11d88:	pop	{fp}		; (ldr fp, [sp], #4)
   11d8c:	bx	lr
   11d90:	andeq	r8, r2, ip, asr r1
   11d94:	push	{fp}		; (str fp, [sp, #-4]!)
   11d98:	add	fp, sp, #0
   11d9c:	sub	sp, sp, #20
   11da0:	str	r0, [fp, #-16]
   11da4:	str	r1, [fp, #-20]	; 0xffffffec
   11da8:	ldr	r3, [fp, #-16]
   11dac:	cmp	r3, #0
   11db0:	bne	11dbc <putchar_unlocked@plt+0xf0c>
   11db4:	ldr	r3, [pc, #44]	; 11de8 <putchar_unlocked@plt+0xf38>
   11db8:	str	r3, [fp, #-16]
   11dbc:	ldr	r3, [fp, #-16]
   11dc0:	ldr	r3, [r3, #4]
   11dc4:	str	r3, [fp, #-8]
   11dc8:	ldr	r3, [fp, #-16]
   11dcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   11dd0:	str	r2, [r3, #4]
   11dd4:	ldr	r3, [fp, #-8]
   11dd8:	mov	r0, r3
   11ddc:	add	sp, fp, #0
   11de0:	pop	{fp}		; (ldr fp, [sp], #4)
   11de4:	bx	lr
   11de8:	andeq	r8, r2, ip, asr r1
   11dec:	push	{fp, lr}
   11df0:	add	fp, sp, #4
   11df4:	sub	sp, sp, #16
   11df8:	str	r0, [fp, #-8]
   11dfc:	str	r1, [fp, #-12]
   11e00:	str	r2, [fp, #-16]
   11e04:	ldr	r3, [fp, #-8]
   11e08:	cmp	r3, #0
   11e0c:	bne	11e18 <putchar_unlocked@plt+0xf68>
   11e10:	ldr	r3, [pc, #76]	; 11e64 <putchar_unlocked@plt+0xfb4>
   11e14:	str	r3, [fp, #-8]
   11e18:	ldr	r3, [fp, #-8]
   11e1c:	mov	r2, #10
   11e20:	str	r2, [r3]
   11e24:	ldr	r3, [fp, #-12]
   11e28:	cmp	r3, #0
   11e2c:	beq	11e3c <putchar_unlocked@plt+0xf8c>
   11e30:	ldr	r3, [fp, #-16]
   11e34:	cmp	r3, #0
   11e38:	bne	11e40 <putchar_unlocked@plt+0xf90>
   11e3c:	bl	10e98 <abort@plt>
   11e40:	ldr	r3, [fp, #-8]
   11e44:	ldr	r2, [fp, #-12]
   11e48:	str	r2, [r3, #40]	; 0x28
   11e4c:	ldr	r3, [fp, #-8]
   11e50:	ldr	r2, [fp, #-16]
   11e54:	str	r2, [r3, #44]	; 0x2c
   11e58:	nop			; (mov r0, r0)
   11e5c:	sub	sp, fp, #4
   11e60:	pop	{fp, pc}
   11e64:	andeq	r8, r2, ip, asr r1
   11e68:	push	{fp, lr}
   11e6c:	add	fp, sp, #4
   11e70:	sub	sp, sp, #56	; 0x38
   11e74:	str	r0, [fp, #-56]	; 0xffffffc8
   11e78:	str	r1, [fp, #-60]	; 0xffffffc4
   11e7c:	sub	r3, fp, #52	; 0x34
   11e80:	mov	r2, #48	; 0x30
   11e84:	mov	r1, #0
   11e88:	mov	r0, r3
   11e8c:	bl	10e08 <memset@plt>
   11e90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11e94:	cmp	r3, #10
   11e98:	bne	11ea0 <putchar_unlocked@plt+0xff0>
   11e9c:	bl	10e98 <abort@plt>
   11ea0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ea4:	str	r3, [fp, #-52]	; 0xffffffcc
   11ea8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11eac:	mov	lr, r3
   11eb0:	sub	ip, fp, #52	; 0x34
   11eb4:	ldm	ip!, {r0, r1, r2, r3}
   11eb8:	stmia	lr!, {r0, r1, r2, r3}
   11ebc:	ldm	ip!, {r0, r1, r2, r3}
   11ec0:	stmia	lr!, {r0, r1, r2, r3}
   11ec4:	ldm	ip, {r0, r1, r2, r3}
   11ec8:	stm	lr, {r0, r1, r2, r3}
   11ecc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ed0:	sub	sp, fp, #4
   11ed4:	pop	{fp, pc}
   11ed8:	push	{fp, lr}
   11edc:	add	fp, sp, #4
   11ee0:	sub	sp, sp, #16
   11ee4:	str	r0, [fp, #-16]
   11ee8:	str	r1, [fp, #-20]	; 0xffffffec
   11eec:	ldr	r0, [fp, #-16]
   11ef0:	bl	10dcc <gettext@plt>
   11ef4:	str	r0, [fp, #-8]
   11ef8:	ldr	r2, [fp, #-8]
   11efc:	ldr	r3, [fp, #-16]
   11f00:	cmp	r2, r3
   11f04:	beq	11f10 <putchar_unlocked@plt+0x1060>
   11f08:	ldr	r3, [fp, #-8]
   11f0c:	b	11fa0 <putchar_unlocked@plt+0x10f0>
   11f10:	bl	15f80 <putchar_unlocked@plt+0x50d0>
   11f14:	str	r0, [fp, #-12]
   11f18:	ldr	r1, [pc, #140]	; 11fac <putchar_unlocked@plt+0x10fc>
   11f1c:	ldr	r0, [fp, #-12]
   11f20:	bl	15a50 <putchar_unlocked@plt+0x4ba0>
   11f24:	mov	r3, r0
   11f28:	cmp	r3, #0
   11f2c:	bne	11f50 <putchar_unlocked@plt+0x10a0>
   11f30:	ldr	r3, [fp, #-16]
   11f34:	ldrb	r3, [r3]
   11f38:	cmp	r3, #96	; 0x60
   11f3c:	bne	11f48 <putchar_unlocked@plt+0x1098>
   11f40:	ldr	r3, [pc, #104]	; 11fb0 <putchar_unlocked@plt+0x1100>
   11f44:	b	11fa0 <putchar_unlocked@plt+0x10f0>
   11f48:	ldr	r3, [pc, #100]	; 11fb4 <putchar_unlocked@plt+0x1104>
   11f4c:	b	11fa0 <putchar_unlocked@plt+0x10f0>
   11f50:	ldr	r1, [pc, #96]	; 11fb8 <putchar_unlocked@plt+0x1108>
   11f54:	ldr	r0, [fp, #-12]
   11f58:	bl	15a50 <putchar_unlocked@plt+0x4ba0>
   11f5c:	mov	r3, r0
   11f60:	cmp	r3, #0
   11f64:	bne	11f88 <putchar_unlocked@plt+0x10d8>
   11f68:	ldr	r3, [fp, #-16]
   11f6c:	ldrb	r3, [r3]
   11f70:	cmp	r3, #96	; 0x60
   11f74:	bne	11f80 <putchar_unlocked@plt+0x10d0>
   11f78:	ldr	r3, [pc, #60]	; 11fbc <putchar_unlocked@plt+0x110c>
   11f7c:	b	11fa0 <putchar_unlocked@plt+0x10f0>
   11f80:	ldr	r3, [pc, #56]	; 11fc0 <putchar_unlocked@plt+0x1110>
   11f84:	b	11fa0 <putchar_unlocked@plt+0x10f0>
   11f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f8c:	cmp	r3, #9
   11f90:	bne	11f9c <putchar_unlocked@plt+0x10ec>
   11f94:	ldr	r3, [pc, #40]	; 11fc4 <putchar_unlocked@plt+0x1114>
   11f98:	b	11fa0 <putchar_unlocked@plt+0x10f0>
   11f9c:	ldr	r3, [pc, #36]	; 11fc8 <putchar_unlocked@plt+0x1118>
   11fa0:	mov	r0, r3
   11fa4:	sub	sp, fp, #4
   11fa8:	pop	{fp, pc}
   11fac:	andeq	r7, r1, ip, asr #3
   11fb0:	ldrdeq	r7, [r1], -r4
   11fb4:	ldrdeq	r7, [r1], -r8
   11fb8:	ldrdeq	r7, [r1], -ip
   11fbc:	andeq	r7, r1, r4, ror #3
   11fc0:	andeq	r7, r1, r8, ror #3
   11fc4:	andeq	r7, r1, ip, ror #3
   11fc8:	strdeq	r7, [r1], -r0
   11fcc:	push	{r4, fp, lr}
   11fd0:	add	fp, sp, #8
   11fd4:	sub	sp, sp, #116	; 0x74
   11fd8:	str	r0, [fp, #-88]	; 0xffffffa8
   11fdc:	str	r1, [fp, #-92]	; 0xffffffa4
   11fe0:	str	r2, [fp, #-96]	; 0xffffffa0
   11fe4:	str	r3, [fp, #-100]	; 0xffffff9c
   11fe8:	mov	r3, #0
   11fec:	str	r3, [fp, #-20]	; 0xffffffec
   11ff0:	mov	r3, #0
   11ff4:	str	r3, [fp, #-24]	; 0xffffffe8
   11ff8:	mov	r3, #0
   11ffc:	str	r3, [fp, #-28]	; 0xffffffe4
   12000:	mov	r3, #0
   12004:	str	r3, [fp, #-32]	; 0xffffffe0
   12008:	mov	r3, #0
   1200c:	strb	r3, [fp, #-33]	; 0xffffffdf
   12010:	bl	10d30 <__ctype_get_mb_cur_max@plt>
   12014:	mov	r3, r0
   12018:	cmp	r3, #1
   1201c:	moveq	r3, #1
   12020:	movne	r3, #0
   12024:	strb	r3, [fp, #-57]	; 0xffffffc7
   12028:	ldr	r3, [fp, #8]
   1202c:	and	r3, r3, #2
   12030:	cmp	r3, #0
   12034:	movne	r3, #1
   12038:	moveq	r3, #0
   1203c:	strb	r3, [fp, #-34]	; 0xffffffde
   12040:	mov	r3, #0
   12044:	strb	r3, [fp, #-35]	; 0xffffffdd
   12048:	mov	r3, #0
   1204c:	strb	r3, [fp, #-36]	; 0xffffffdc
   12050:	mov	r3, #1
   12054:	strb	r3, [fp, #-37]	; 0xffffffdb
   12058:	ldr	r3, [fp, #4]
   1205c:	cmp	r3, #10
   12060:	ldrls	pc, [pc, r3, lsl #2]
   12064:	b	1226c <putchar_unlocked@plt+0x13bc>
   12068:	andeq	r2, r1, r0, ror #4
   1206c:	ldrdeq	r2, [r1], -ip
   12070:	andeq	r2, r1, r0, lsl #4
   12074:	ldrdeq	r2, [r1], -r4
   12078:	andeq	r2, r1, r4, ror #3
   1207c:	andeq	r2, r1, r4, lsr #1
   12080:	muleq	r1, r4, r0
   12084:	andeq	r2, r1, r4, lsl #2
   12088:	andeq	r2, r1, r8, lsl r1
   1208c:	andeq	r2, r1, r8, lsl r1
   12090:	andeq	r2, r1, r8, lsl r1
   12094:	mov	r3, #5
   12098:	str	r3, [fp, #4]
   1209c:	mov	r3, #1
   120a0:	strb	r3, [fp, #-34]	; 0xffffffde
   120a4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   120a8:	eor	r3, r3, #1
   120ac:	uxtb	r3, r3
   120b0:	cmp	r3, #0
   120b4:	beq	120e8 <putchar_unlocked@plt+0x1238>
   120b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   120bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   120c0:	cmp	r2, r3
   120c4:	bcs	120dc <putchar_unlocked@plt+0x122c>
   120c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   120cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   120d0:	add	r3, r2, r3
   120d4:	mov	r2, #34	; 0x22
   120d8:	strb	r2, [r3]
   120dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   120e0:	add	r3, r3, #1
   120e4:	str	r3, [fp, #-20]	; 0xffffffec
   120e8:	mov	r3, #1
   120ec:	strb	r3, [fp, #-33]	; 0xffffffdf
   120f0:	ldr	r3, [pc, #3872]	; 13018 <putchar_unlocked@plt+0x2168>
   120f4:	str	r3, [fp, #-28]	; 0xffffffe4
   120f8:	mov	r3, #1
   120fc:	str	r3, [fp, #-32]	; 0xffffffe0
   12100:	b	12270 <putchar_unlocked@plt+0x13c0>
   12104:	mov	r3, #1
   12108:	strb	r3, [fp, #-33]	; 0xffffffdf
   1210c:	mov	r3, #0
   12110:	strb	r3, [fp, #-34]	; 0xffffffde
   12114:	b	12270 <putchar_unlocked@plt+0x13c0>
   12118:	ldr	r3, [fp, #4]
   1211c:	cmp	r3, #10
   12120:	beq	12144 <putchar_unlocked@plt+0x1294>
   12124:	ldr	r1, [fp, #4]
   12128:	ldr	r0, [pc, #3820]	; 1301c <putchar_unlocked@plt+0x216c>
   1212c:	bl	11ed8 <putchar_unlocked@plt+0x1028>
   12130:	str	r0, [fp, #16]
   12134:	ldr	r1, [fp, #4]
   12138:	ldr	r0, [pc, #3808]	; 13020 <putchar_unlocked@plt+0x2170>
   1213c:	bl	11ed8 <putchar_unlocked@plt+0x1028>
   12140:	str	r0, [fp, #20]
   12144:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12148:	eor	r3, r3, #1
   1214c:	uxtb	r3, r3
   12150:	cmp	r3, #0
   12154:	beq	121b4 <putchar_unlocked@plt+0x1304>
   12158:	ldr	r3, [fp, #16]
   1215c:	str	r3, [fp, #-28]	; 0xffffffe4
   12160:	b	121a4 <putchar_unlocked@plt+0x12f4>
   12164:	ldr	r2, [fp, #-20]	; 0xffffffec
   12168:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1216c:	cmp	r2, r3
   12170:	bcs	1218c <putchar_unlocked@plt+0x12dc>
   12174:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1217c:	add	r3, r2, r3
   12180:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12184:	ldrb	r2, [r2]
   12188:	strb	r2, [r3]
   1218c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12190:	add	r3, r3, #1
   12194:	str	r3, [fp, #-20]	; 0xffffffec
   12198:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1219c:	add	r3, r3, #1
   121a0:	str	r3, [fp, #-28]	; 0xffffffe4
   121a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   121a8:	ldrb	r3, [r3]
   121ac:	cmp	r3, #0
   121b0:	bne	12164 <putchar_unlocked@plt+0x12b4>
   121b4:	mov	r3, #1
   121b8:	strb	r3, [fp, #-33]	; 0xffffffdf
   121bc:	ldr	r3, [fp, #20]
   121c0:	str	r3, [fp, #-28]	; 0xffffffe4
   121c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   121c8:	bl	10dd8 <strlen@plt>
   121cc:	str	r0, [fp, #-32]	; 0xffffffe0
   121d0:	b	12270 <putchar_unlocked@plt+0x13c0>
   121d4:	mov	r3, #1
   121d8:	strb	r3, [fp, #-33]	; 0xffffffdf
   121dc:	mov	r3, #1
   121e0:	strb	r3, [fp, #-34]	; 0xffffffde
   121e4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   121e8:	eor	r3, r3, #1
   121ec:	uxtb	r3, r3
   121f0:	cmp	r3, #0
   121f4:	beq	12200 <putchar_unlocked@plt+0x1350>
   121f8:	mov	r3, #1
   121fc:	strb	r3, [fp, #-33]	; 0xffffffdf
   12200:	mov	r3, #2
   12204:	str	r3, [fp, #4]
   12208:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1220c:	eor	r3, r3, #1
   12210:	uxtb	r3, r3
   12214:	cmp	r3, #0
   12218:	beq	1224c <putchar_unlocked@plt+0x139c>
   1221c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12220:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12224:	cmp	r2, r3
   12228:	bcs	12240 <putchar_unlocked@plt+0x1390>
   1222c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12230:	ldr	r3, [fp, #-20]	; 0xffffffec
   12234:	add	r3, r2, r3
   12238:	mov	r2, #39	; 0x27
   1223c:	strb	r2, [r3]
   12240:	ldr	r3, [fp, #-20]	; 0xffffffec
   12244:	add	r3, r3, #1
   12248:	str	r3, [fp, #-20]	; 0xffffffec
   1224c:	ldr	r3, [pc, #3532]	; 13020 <putchar_unlocked@plt+0x2170>
   12250:	str	r3, [fp, #-28]	; 0xffffffe4
   12254:	mov	r3, #1
   12258:	str	r3, [fp, #-32]	; 0xffffffe0
   1225c:	b	12270 <putchar_unlocked@plt+0x13c0>
   12260:	mov	r3, #0
   12264:	strb	r3, [fp, #-34]	; 0xffffffde
   12268:	b	12270 <putchar_unlocked@plt+0x13c0>
   1226c:	bl	10e98 <abort@plt>
   12270:	mov	r3, #0
   12274:	str	r3, [fp, #-16]
   12278:	b	13408 <putchar_unlocked@plt+0x2558>
   1227c:	mov	r3, #0
   12280:	strb	r3, [fp, #-40]	; 0xffffffd8
   12284:	mov	r3, #0
   12288:	strb	r3, [fp, #-41]	; 0xffffffd7
   1228c:	mov	r3, #0
   12290:	strb	r3, [fp, #-42]	; 0xffffffd6
   12294:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12298:	cmp	r3, #0
   1229c:	beq	12338 <putchar_unlocked@plt+0x1488>
   122a0:	ldr	r3, [fp, #4]
   122a4:	cmp	r3, #2
   122a8:	beq	12338 <putchar_unlocked@plt+0x1488>
   122ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122b0:	cmp	r3, #0
   122b4:	beq	12338 <putchar_unlocked@plt+0x1488>
   122b8:	ldr	r2, [fp, #-16]
   122bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122c0:	add	r4, r2, r3
   122c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   122c8:	cmn	r3, #1
   122cc:	bne	122f0 <putchar_unlocked@plt+0x1440>
   122d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122d4:	cmp	r3, #1
   122d8:	bls	122f0 <putchar_unlocked@plt+0x1440>
   122dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   122e0:	bl	10dd8 <strlen@plt>
   122e4:	str	r0, [fp, #-100]	; 0xffffff9c
   122e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   122ec:	b	122f4 <putchar_unlocked@plt+0x1444>
   122f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   122f4:	cmp	r4, r3
   122f8:	bhi	12338 <putchar_unlocked@plt+0x1488>
   122fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12300:	ldr	r3, [fp, #-16]
   12304:	add	r3, r2, r3
   12308:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1230c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12310:	mov	r0, r3
   12314:	bl	10cd0 <memcmp@plt>
   12318:	mov	r3, r0
   1231c:	cmp	r3, #0
   12320:	bne	12338 <putchar_unlocked@plt+0x1488>
   12324:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12328:	cmp	r3, #0
   1232c:	bne	135c4 <putchar_unlocked@plt+0x2714>
   12330:	mov	r3, #1
   12334:	strb	r3, [fp, #-40]	; 0xffffffd8
   12338:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1233c:	ldr	r3, [fp, #-16]
   12340:	add	r3, r2, r3
   12344:	ldrb	r3, [r3]
   12348:	strb	r3, [fp, #-38]	; 0xffffffda
   1234c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12350:	cmp	r3, #126	; 0x7e
   12354:	ldrls	pc, [pc, r3, lsl #2]
   12358:	b	12b84 <putchar_unlocked@plt+0x1cd4>
   1235c:	andeq	r2, r1, r8, asr r5
   12360:	andeq	r2, r1, r4, lsl #23
   12364:	andeq	r2, r1, r4, lsl #23
   12368:	andeq	r2, r1, r4, lsl #23
   1236c:	andeq	r2, r1, r4, lsl #23
   12370:	andeq	r2, r1, r4, lsl #23
   12374:	andeq	r2, r1, r4, lsl #23
   12378:	andeq	r2, r1, r8, asr #18
   1237c:	andeq	r2, r1, r4, asr r9
   12380:	andeq	r2, r1, r4, lsl #19
   12384:	andeq	r2, r1, ip, ror #18
   12388:	muleq	r1, r0, r9
   1238c:	andeq	r2, r1, r0, ror #18
   12390:	andeq	r2, r1, r8, ror r9
   12394:	andeq	r2, r1, r4, lsl #23
   12398:	andeq	r2, r1, r4, lsl #23
   1239c:	andeq	r2, r1, r4, lsl #23
   123a0:	andeq	r2, r1, r4, lsl #23
   123a4:	andeq	r2, r1, r4, lsl #23
   123a8:	andeq	r2, r1, r4, lsl #23
   123ac:	andeq	r2, r1, r4, lsl #23
   123b0:	andeq	r2, r1, r4, lsl #23
   123b4:	andeq	r2, r1, r4, lsl #23
   123b8:	andeq	r2, r1, r4, lsl #23
   123bc:	andeq	r2, r1, r4, lsl #23
   123c0:	andeq	r2, r1, r4, lsl #23
   123c4:	andeq	r2, r1, r4, lsl #23
   123c8:	andeq	r2, r1, r4, lsl #23
   123cc:	andeq	r2, r1, r4, lsl #23
   123d0:	andeq	r2, r1, r4, lsl #23
   123d4:	andeq	r2, r1, r4, lsl #23
   123d8:	andeq	r2, r1, r4, lsl #23
   123dc:	andeq	r2, r1, r8, ror #20
   123e0:	andeq	r2, r1, r0, ror sl
   123e4:	andeq	r2, r1, r0, ror sl
   123e8:	andeq	r2, r1, ip, asr sl
   123ec:	andeq	r2, r1, r0, ror sl
   123f0:	andeq	r2, r1, r8, ror fp
   123f4:	andeq	r2, r1, r0, ror sl
   123f8:	andeq	r2, r1, ip, lsl #21
   123fc:	andeq	r2, r1, r0, ror sl
   12400:	andeq	r2, r1, r0, ror sl
   12404:	andeq	r2, r1, r0, ror sl
   12408:	andeq	r2, r1, r8, ror fp
   1240c:	andeq	r2, r1, r8, ror fp
   12410:	andeq	r2, r1, r8, ror fp
   12414:	andeq	r2, r1, r8, ror fp
   12418:	andeq	r2, r1, r8, ror fp
   1241c:	andeq	r2, r1, r8, ror fp
   12420:	andeq	r2, r1, r8, ror fp
   12424:	andeq	r2, r1, r8, ror fp
   12428:	andeq	r2, r1, r8, ror fp
   1242c:	andeq	r2, r1, r8, ror fp
   12430:	andeq	r2, r1, r8, ror fp
   12434:	andeq	r2, r1, r8, ror fp
   12438:	andeq	r2, r1, r8, ror fp
   1243c:	andeq	r2, r1, r8, ror fp
   12440:	andeq	r2, r1, r8, ror fp
   12444:	andeq	r2, r1, r8, ror fp
   12448:	andeq	r2, r1, r0, ror sl
   1244c:	andeq	r2, r1, r0, ror sl
   12450:	andeq	r2, r1, r0, ror sl
   12454:	andeq	r2, r1, r0, ror sl
   12458:	andeq	r2, r1, r8, lsr r7
   1245c:	andeq	r2, r1, r4, lsl #23
   12460:	andeq	r2, r1, r8, ror fp
   12464:	andeq	r2, r1, r8, ror fp
   12468:	andeq	r2, r1, r8, ror fp
   1246c:	andeq	r2, r1, r8, ror fp
   12470:	andeq	r2, r1, r8, ror fp
   12474:	andeq	r2, r1, r8, ror fp
   12478:	andeq	r2, r1, r8, ror fp
   1247c:	andeq	r2, r1, r8, ror fp
   12480:	andeq	r2, r1, r8, ror fp
   12484:	andeq	r2, r1, r8, ror fp
   12488:	andeq	r2, r1, r8, ror fp
   1248c:	andeq	r2, r1, r8, ror fp
   12490:	andeq	r2, r1, r8, ror fp
   12494:	andeq	r2, r1, r8, ror fp
   12498:	andeq	r2, r1, r8, ror fp
   1249c:	andeq	r2, r1, r8, ror fp
   124a0:	andeq	r2, r1, r8, ror fp
   124a4:	andeq	r2, r1, r8, ror fp
   124a8:	andeq	r2, r1, r8, ror fp
   124ac:	andeq	r2, r1, r8, ror fp
   124b0:	andeq	r2, r1, r8, ror fp
   124b4:	andeq	r2, r1, r8, ror fp
   124b8:	andeq	r2, r1, r8, ror fp
   124bc:	andeq	r2, r1, r8, ror fp
   124c0:	andeq	r2, r1, r8, ror fp
   124c4:	andeq	r2, r1, r8, ror fp
   124c8:	andeq	r2, r1, r0, ror sl
   124cc:	muleq	r1, ip, r9
   124d0:	andeq	r2, r1, r8, ror fp
   124d4:	andeq	r2, r1, r0, ror sl
   124d8:	andeq	r2, r1, r8, ror fp
   124dc:	andeq	r2, r1, r0, ror sl
   124e0:	andeq	r2, r1, r8, ror fp
   124e4:	andeq	r2, r1, r8, ror fp
   124e8:	andeq	r2, r1, r8, ror fp
   124ec:	andeq	r2, r1, r8, ror fp
   124f0:	andeq	r2, r1, r8, ror fp
   124f4:	andeq	r2, r1, r8, ror fp
   124f8:	andeq	r2, r1, r8, ror fp
   124fc:	andeq	r2, r1, r8, ror fp
   12500:	andeq	r2, r1, r8, ror fp
   12504:	andeq	r2, r1, r8, ror fp
   12508:	andeq	r2, r1, r8, ror fp
   1250c:	andeq	r2, r1, r8, ror fp
   12510:	andeq	r2, r1, r8, ror fp
   12514:	andeq	r2, r1, r8, ror fp
   12518:	andeq	r2, r1, r8, ror fp
   1251c:	andeq	r2, r1, r8, ror fp
   12520:	andeq	r2, r1, r8, ror fp
   12524:	andeq	r2, r1, r8, ror fp
   12528:	andeq	r2, r1, r8, ror fp
   1252c:	andeq	r2, r1, r8, ror fp
   12530:	andeq	r2, r1, r8, ror fp
   12534:	andeq	r2, r1, r8, ror fp
   12538:	andeq	r2, r1, r8, ror fp
   1253c:	andeq	r2, r1, r8, ror fp
   12540:	andeq	r2, r1, r8, ror fp
   12544:	andeq	r2, r1, r8, ror fp
   12548:	andeq	r2, r1, r4, lsl sl
   1254c:	andeq	r2, r1, r0, ror sl
   12550:	andeq	r2, r1, r4, lsl sl
   12554:	andeq	r2, r1, ip, asr sl
   12558:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1255c:	cmp	r3, #0
   12560:	beq	12724 <putchar_unlocked@plt+0x1874>
   12564:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12568:	cmp	r3, #0
   1256c:	bne	135cc <putchar_unlocked@plt+0x271c>
   12570:	mov	r3, #1
   12574:	strb	r3, [fp, #-41]	; 0xffffffd7
   12578:	ldr	r3, [fp, #4]
   1257c:	cmp	r3, #2
   12580:	bne	12630 <putchar_unlocked@plt+0x1780>
   12584:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   12588:	eor	r3, r3, #1
   1258c:	uxtb	r3, r3
   12590:	cmp	r3, #0
   12594:	beq	12630 <putchar_unlocked@plt+0x1780>
   12598:	ldr	r2, [fp, #-20]	; 0xffffffec
   1259c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   125a0:	cmp	r2, r3
   125a4:	bcs	125bc <putchar_unlocked@plt+0x170c>
   125a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   125ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   125b0:	add	r3, r2, r3
   125b4:	mov	r2, #39	; 0x27
   125b8:	strb	r2, [r3]
   125bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   125c0:	add	r3, r3, #1
   125c4:	str	r3, [fp, #-20]	; 0xffffffec
   125c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   125cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   125d0:	cmp	r2, r3
   125d4:	bcs	125ec <putchar_unlocked@plt+0x173c>
   125d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   125dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   125e0:	add	r3, r2, r3
   125e4:	mov	r2, #36	; 0x24
   125e8:	strb	r2, [r3]
   125ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   125f0:	add	r3, r3, #1
   125f4:	str	r3, [fp, #-20]	; 0xffffffec
   125f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   125fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12600:	cmp	r2, r3
   12604:	bcs	1261c <putchar_unlocked@plt+0x176c>
   12608:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1260c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12610:	add	r3, r2, r3
   12614:	mov	r2, #39	; 0x27
   12618:	strb	r2, [r3]
   1261c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12620:	add	r3, r3, #1
   12624:	str	r3, [fp, #-20]	; 0xffffffec
   12628:	mov	r3, #1
   1262c:	strb	r3, [fp, #-35]	; 0xffffffdd
   12630:	ldr	r2, [fp, #-20]	; 0xffffffec
   12634:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12638:	cmp	r2, r3
   1263c:	bcs	12654 <putchar_unlocked@plt+0x17a4>
   12640:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12644:	ldr	r3, [fp, #-20]	; 0xffffffec
   12648:	add	r3, r2, r3
   1264c:	mov	r2, #92	; 0x5c
   12650:	strb	r2, [r3]
   12654:	ldr	r3, [fp, #-20]	; 0xffffffec
   12658:	add	r3, r3, #1
   1265c:	str	r3, [fp, #-20]	; 0xffffffec
   12660:	ldr	r3, [fp, #4]
   12664:	cmp	r3, #2
   12668:	beq	12718 <putchar_unlocked@plt+0x1868>
   1266c:	ldr	r3, [fp, #-16]
   12670:	add	r2, r3, #1
   12674:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12678:	cmp	r2, r3
   1267c:	bcs	12718 <putchar_unlocked@plt+0x1868>
   12680:	ldr	r3, [fp, #-16]
   12684:	add	r3, r3, #1
   12688:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1268c:	add	r3, r2, r3
   12690:	ldrb	r3, [r3]
   12694:	cmp	r3, #47	; 0x2f
   12698:	bls	12718 <putchar_unlocked@plt+0x1868>
   1269c:	ldr	r3, [fp, #-16]
   126a0:	add	r3, r3, #1
   126a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   126a8:	add	r3, r2, r3
   126ac:	ldrb	r3, [r3]
   126b0:	cmp	r3, #57	; 0x39
   126b4:	bhi	12718 <putchar_unlocked@plt+0x1868>
   126b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   126bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   126c0:	cmp	r2, r3
   126c4:	bcs	126dc <putchar_unlocked@plt+0x182c>
   126c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   126cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   126d0:	add	r3, r2, r3
   126d4:	mov	r2, #48	; 0x30
   126d8:	strb	r2, [r3]
   126dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   126e0:	add	r3, r3, #1
   126e4:	str	r3, [fp, #-20]	; 0xffffffec
   126e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   126ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   126f0:	cmp	r2, r3
   126f4:	bcs	1270c <putchar_unlocked@plt+0x185c>
   126f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   126fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12700:	add	r3, r2, r3
   12704:	mov	r2, #48	; 0x30
   12708:	strb	r2, [r3]
   1270c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12710:	add	r3, r3, #1
   12714:	str	r3, [fp, #-20]	; 0xffffffec
   12718:	mov	r3, #48	; 0x30
   1271c:	strb	r3, [fp, #-38]	; 0xffffffda
   12720:	b	13160 <putchar_unlocked@plt+0x22b0>
   12724:	ldr	r3, [fp, #8]
   12728:	and	r3, r3, #1
   1272c:	cmp	r3, #0
   12730:	beq	13160 <putchar_unlocked@plt+0x22b0>
   12734:	b	133fc <putchar_unlocked@plt+0x254c>
   12738:	ldr	r3, [fp, #4]
   1273c:	cmp	r3, #2
   12740:	beq	12750 <putchar_unlocked@plt+0x18a0>
   12744:	cmp	r3, #5
   12748:	beq	12760 <putchar_unlocked@plt+0x18b0>
   1274c:	b	12944 <putchar_unlocked@plt+0x1a94>
   12750:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12754:	cmp	r3, #0
   12758:	beq	12938 <putchar_unlocked@plt+0x1a88>
   1275c:	b	13608 <putchar_unlocked@plt+0x2758>
   12760:	ldr	r3, [fp, #8]
   12764:	and	r3, r3, #4
   12768:	cmp	r3, #0
   1276c:	beq	12940 <putchar_unlocked@plt+0x1a90>
   12770:	ldr	r3, [fp, #-16]
   12774:	add	r2, r3, #2
   12778:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1277c:	cmp	r2, r3
   12780:	bcs	12940 <putchar_unlocked@plt+0x1a90>
   12784:	ldr	r3, [fp, #-16]
   12788:	add	r3, r3, #1
   1278c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12790:	add	r3, r2, r3
   12794:	ldrb	r3, [r3]
   12798:	cmp	r3, #63	; 0x3f
   1279c:	bne	12940 <putchar_unlocked@plt+0x1a90>
   127a0:	ldr	r3, [fp, #-16]
   127a4:	add	r3, r3, #2
   127a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   127ac:	add	r3, r2, r3
   127b0:	ldrb	r3, [r3]
   127b4:	sub	r3, r3, #33	; 0x21
   127b8:	cmp	r3, #29
   127bc:	ldrls	pc, [pc, r3, lsl #2]
   127c0:	b	12930 <putchar_unlocked@plt+0x1a80>
   127c4:	andeq	r2, r1, ip, lsr r8
   127c8:	andeq	r2, r1, r0, lsr r9
   127cc:	andeq	r2, r1, r0, lsr r9
   127d0:	andeq	r2, r1, r0, lsr r9
   127d4:	andeq	r2, r1, r0, lsr r9
   127d8:	andeq	r2, r1, r0, lsr r9
   127dc:	andeq	r2, r1, ip, lsr r8
   127e0:	andeq	r2, r1, ip, lsr r8
   127e4:	andeq	r2, r1, ip, lsr r8
   127e8:	andeq	r2, r1, r0, lsr r9
   127ec:	andeq	r2, r1, r0, lsr r9
   127f0:	andeq	r2, r1, r0, lsr r9
   127f4:	andeq	r2, r1, ip, lsr r8
   127f8:	andeq	r2, r1, r0, lsr r9
   127fc:	andeq	r2, r1, ip, lsr r8
   12800:	andeq	r2, r1, r0, lsr r9
   12804:	andeq	r2, r1, r0, lsr r9
   12808:	andeq	r2, r1, r0, lsr r9
   1280c:	andeq	r2, r1, r0, lsr r9
   12810:	andeq	r2, r1, r0, lsr r9
   12814:	andeq	r2, r1, r0, lsr r9
   12818:	andeq	r2, r1, r0, lsr r9
   1281c:	andeq	r2, r1, r0, lsr r9
   12820:	andeq	r2, r1, r0, lsr r9
   12824:	andeq	r2, r1, r0, lsr r9
   12828:	andeq	r2, r1, r0, lsr r9
   1282c:	andeq	r2, r1, r0, lsr r9
   12830:	andeq	r2, r1, ip, lsr r8
   12834:	andeq	r2, r1, ip, lsr r8
   12838:	andeq	r2, r1, ip, lsr r8
   1283c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12840:	cmp	r3, #0
   12844:	bne	135d4 <putchar_unlocked@plt+0x2724>
   12848:	ldr	r3, [fp, #-16]
   1284c:	add	r3, r3, #2
   12850:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12854:	add	r3, r2, r3
   12858:	ldrb	r3, [r3]
   1285c:	strb	r3, [fp, #-38]	; 0xffffffda
   12860:	ldr	r3, [fp, #-16]
   12864:	add	r3, r3, #2
   12868:	str	r3, [fp, #-16]
   1286c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12870:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12874:	cmp	r2, r3
   12878:	bcs	12890 <putchar_unlocked@plt+0x19e0>
   1287c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12880:	ldr	r3, [fp, #-20]	; 0xffffffec
   12884:	add	r3, r2, r3
   12888:	mov	r2, #63	; 0x3f
   1288c:	strb	r2, [r3]
   12890:	ldr	r3, [fp, #-20]	; 0xffffffec
   12894:	add	r3, r3, #1
   12898:	str	r3, [fp, #-20]	; 0xffffffec
   1289c:	ldr	r2, [fp, #-20]	; 0xffffffec
   128a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   128a4:	cmp	r2, r3
   128a8:	bcs	128c0 <putchar_unlocked@plt+0x1a10>
   128ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   128b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   128b4:	add	r3, r2, r3
   128b8:	mov	r2, #34	; 0x22
   128bc:	strb	r2, [r3]
   128c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   128c4:	add	r3, r3, #1
   128c8:	str	r3, [fp, #-20]	; 0xffffffec
   128cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   128d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   128d4:	cmp	r2, r3
   128d8:	bcs	128f0 <putchar_unlocked@plt+0x1a40>
   128dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   128e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   128e4:	add	r3, r2, r3
   128e8:	mov	r2, #34	; 0x22
   128ec:	strb	r2, [r3]
   128f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   128f4:	add	r3, r3, #1
   128f8:	str	r3, [fp, #-20]	; 0xffffffec
   128fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   12900:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12904:	cmp	r2, r3
   12908:	bcs	12920 <putchar_unlocked@plt+0x1a70>
   1290c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12910:	ldr	r3, [fp, #-20]	; 0xffffffec
   12914:	add	r3, r2, r3
   12918:	mov	r2, #63	; 0x3f
   1291c:	strb	r2, [r3]
   12920:	ldr	r3, [fp, #-20]	; 0xffffffec
   12924:	add	r3, r3, #1
   12928:	str	r3, [fp, #-20]	; 0xffffffec
   1292c:	b	12934 <putchar_unlocked@plt+0x1a84>
   12930:	nop			; (mov r0, r0)
   12934:	b	12940 <putchar_unlocked@plt+0x1a90>
   12938:	nop			; (mov r0, r0)
   1293c:	b	1318c <putchar_unlocked@plt+0x22dc>
   12940:	nop			; (mov r0, r0)
   12944:	b	1318c <putchar_unlocked@plt+0x22dc>
   12948:	mov	r3, #97	; 0x61
   1294c:	strb	r3, [fp, #-39]	; 0xffffffd9
   12950:	b	129fc <putchar_unlocked@plt+0x1b4c>
   12954:	mov	r3, #98	; 0x62
   12958:	strb	r3, [fp, #-39]	; 0xffffffd9
   1295c:	b	129fc <putchar_unlocked@plt+0x1b4c>
   12960:	mov	r3, #102	; 0x66
   12964:	strb	r3, [fp, #-39]	; 0xffffffd9
   12968:	b	129fc <putchar_unlocked@plt+0x1b4c>
   1296c:	mov	r3, #110	; 0x6e
   12970:	strb	r3, [fp, #-39]	; 0xffffffd9
   12974:	b	129e4 <putchar_unlocked@plt+0x1b34>
   12978:	mov	r3, #114	; 0x72
   1297c:	strb	r3, [fp, #-39]	; 0xffffffd9
   12980:	b	129e4 <putchar_unlocked@plt+0x1b34>
   12984:	mov	r3, #116	; 0x74
   12988:	strb	r3, [fp, #-39]	; 0xffffffd9
   1298c:	b	129e4 <putchar_unlocked@plt+0x1b34>
   12990:	mov	r3, #118	; 0x76
   12994:	strb	r3, [fp, #-39]	; 0xffffffd9
   12998:	b	129fc <putchar_unlocked@plt+0x1b4c>
   1299c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   129a0:	strb	r3, [fp, #-39]	; 0xffffffd9
   129a4:	ldr	r3, [fp, #4]
   129a8:	cmp	r3, #2
   129ac:	bne	129c0 <putchar_unlocked@plt+0x1b10>
   129b0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   129b4:	cmp	r3, #0
   129b8:	beq	13314 <putchar_unlocked@plt+0x2464>
   129bc:	b	13608 <putchar_unlocked@plt+0x2758>
   129c0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   129c4:	cmp	r3, #0
   129c8:	beq	129e4 <putchar_unlocked@plt+0x1b34>
   129cc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   129d0:	cmp	r3, #0
   129d4:	beq	129e4 <putchar_unlocked@plt+0x1b34>
   129d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   129dc:	cmp	r3, #0
   129e0:	bne	1331c <putchar_unlocked@plt+0x246c>
   129e4:	ldr	r3, [fp, #4]
   129e8:	cmp	r3, #2
   129ec:	bne	129fc <putchar_unlocked@plt+0x1b4c>
   129f0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   129f4:	cmp	r3, #0
   129f8:	bne	135dc <putchar_unlocked@plt+0x272c>
   129fc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12a00:	cmp	r3, #0
   12a04:	beq	13168 <putchar_unlocked@plt+0x22b8>
   12a08:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   12a0c:	strb	r3, [fp, #-38]	; 0xffffffda
   12a10:	b	13214 <putchar_unlocked@plt+0x2364>
   12a14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12a18:	cmn	r3, #1
   12a1c:	bne	12a40 <putchar_unlocked@plt+0x1b90>
   12a20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   12a24:	add	r3, r3, #1
   12a28:	ldrb	r3, [r3]
   12a2c:	cmp	r3, #0
   12a30:	movne	r3, #1
   12a34:	moveq	r3, #0
   12a38:	uxtb	r3, r3
   12a3c:	b	12a54 <putchar_unlocked@plt+0x1ba4>
   12a40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12a44:	cmp	r3, #1
   12a48:	movne	r3, #1
   12a4c:	moveq	r3, #0
   12a50:	uxtb	r3, r3
   12a54:	cmp	r3, #0
   12a58:	bne	13170 <putchar_unlocked@plt+0x22c0>
   12a5c:	ldr	r3, [fp, #-16]
   12a60:	cmp	r3, #0
   12a64:	bne	13178 <putchar_unlocked@plt+0x22c8>
   12a68:	mov	r3, #1
   12a6c:	strb	r3, [fp, #-42]	; 0xffffffd6
   12a70:	ldr	r3, [fp, #4]
   12a74:	cmp	r3, #2
   12a78:	bne	13180 <putchar_unlocked@plt+0x22d0>
   12a7c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12a80:	cmp	r3, #0
   12a84:	beq	13180 <putchar_unlocked@plt+0x22d0>
   12a88:	b	13608 <putchar_unlocked@plt+0x2758>
   12a8c:	mov	r3, #1
   12a90:	strb	r3, [fp, #-36]	; 0xffffffdc
   12a94:	mov	r3, #1
   12a98:	strb	r3, [fp, #-42]	; 0xffffffd6
   12a9c:	ldr	r3, [fp, #4]
   12aa0:	cmp	r3, #2
   12aa4:	bne	13188 <putchar_unlocked@plt+0x22d8>
   12aa8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12aac:	cmp	r3, #0
   12ab0:	bne	135e4 <putchar_unlocked@plt+0x2734>
   12ab4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12ab8:	cmp	r3, #0
   12abc:	beq	12adc <putchar_unlocked@plt+0x1c2c>
   12ac0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ac4:	cmp	r3, #0
   12ac8:	bne	12adc <putchar_unlocked@plt+0x1c2c>
   12acc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12ad0:	str	r3, [fp, #-24]	; 0xffffffe8
   12ad4:	mov	r3, #0
   12ad8:	str	r3, [fp, #-92]	; 0xffffffa4
   12adc:	ldr	r2, [fp, #-20]	; 0xffffffec
   12ae0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12ae4:	cmp	r2, r3
   12ae8:	bcs	12b00 <putchar_unlocked@plt+0x1c50>
   12aec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   12af4:	add	r3, r2, r3
   12af8:	mov	r2, #39	; 0x27
   12afc:	strb	r2, [r3]
   12b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b04:	add	r3, r3, #1
   12b08:	str	r3, [fp, #-20]	; 0xffffffec
   12b0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12b10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12b14:	cmp	r2, r3
   12b18:	bcs	12b30 <putchar_unlocked@plt+0x1c80>
   12b1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b24:	add	r3, r2, r3
   12b28:	mov	r2, #92	; 0x5c
   12b2c:	strb	r2, [r3]
   12b30:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b34:	add	r3, r3, #1
   12b38:	str	r3, [fp, #-20]	; 0xffffffec
   12b3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12b40:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12b44:	cmp	r2, r3
   12b48:	bcs	12b60 <putchar_unlocked@plt+0x1cb0>
   12b4c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b54:	add	r3, r2, r3
   12b58:	mov	r2, #39	; 0x27
   12b5c:	strb	r2, [r3]
   12b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b64:	add	r3, r3, #1
   12b68:	str	r3, [fp, #-20]	; 0xffffffec
   12b6c:	mov	r3, #0
   12b70:	strb	r3, [fp, #-35]	; 0xffffffdd
   12b74:	b	13188 <putchar_unlocked@plt+0x22d8>
   12b78:	mov	r3, #1
   12b7c:	strb	r3, [fp, #-42]	; 0xffffffd6
   12b80:	b	1318c <putchar_unlocked@plt+0x22dc>
   12b84:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   12b88:	cmp	r3, #0
   12b8c:	beq	12bcc <putchar_unlocked@plt+0x1d1c>
   12b90:	mov	r3, #1
   12b94:	str	r3, [fp, #-48]	; 0xffffffd0
   12b98:	bl	10db4 <__ctype_b_loc@plt>
   12b9c:	mov	r3, r0
   12ba0:	ldr	r2, [r3]
   12ba4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12ba8:	lsl	r3, r3, #1
   12bac:	add	r3, r2, r3
   12bb0:	ldrh	r3, [r3]
   12bb4:	and	r3, r3, #16384	; 0x4000
   12bb8:	cmp	r3, #0
   12bbc:	movne	r3, #1
   12bc0:	moveq	r3, #0
   12bc4:	strb	r3, [fp, #-49]	; 0xffffffcf
   12bc8:	b	12e18 <putchar_unlocked@plt+0x1f68>
   12bcc:	sub	r3, fp, #76	; 0x4c
   12bd0:	mov	r2, #8
   12bd4:	mov	r1, #0
   12bd8:	mov	r0, r3
   12bdc:	bl	10e08 <memset@plt>
   12be0:	mov	r3, #0
   12be4:	str	r3, [fp, #-48]	; 0xffffffd0
   12be8:	mov	r3, #1
   12bec:	strb	r3, [fp, #-49]	; 0xffffffcf
   12bf0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12bf4:	cmn	r3, #1
   12bf8:	bne	12c08 <putchar_unlocked@plt+0x1d58>
   12bfc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12c00:	bl	10dd8 <strlen@plt>
   12c04:	str	r0, [fp, #-100]	; 0xffffff9c
   12c08:	ldr	r2, [fp, #-16]
   12c0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c10:	add	r3, r2, r3
   12c14:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12c18:	add	r1, r2, r3
   12c1c:	ldr	r2, [fp, #-16]
   12c20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c24:	add	r3, r2, r3
   12c28:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12c2c:	sub	r2, r2, r3
   12c30:	sub	r3, fp, #76	; 0x4c
   12c34:	sub	r0, fp, #80	; 0x50
   12c38:	bl	15fdc <putchar_unlocked@plt+0x512c>
   12c3c:	str	r0, [fp, #-64]	; 0xffffffc0
   12c40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c44:	cmp	r3, #0
   12c48:	beq	12e0c <putchar_unlocked@plt+0x1f5c>
   12c4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c50:	cmn	r3, #1
   12c54:	bne	12c64 <putchar_unlocked@plt+0x1db4>
   12c58:	mov	r3, #0
   12c5c:	strb	r3, [fp, #-49]	; 0xffffffcf
   12c60:	b	12e18 <putchar_unlocked@plt+0x1f68>
   12c64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c68:	cmn	r3, #2
   12c6c:	bne	12cc4 <putchar_unlocked@plt+0x1e14>
   12c70:	mov	r3, #0
   12c74:	strb	r3, [fp, #-49]	; 0xffffffcf
   12c78:	b	12c88 <putchar_unlocked@plt+0x1dd8>
   12c7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c80:	add	r3, r3, #1
   12c84:	str	r3, [fp, #-48]	; 0xffffffd0
   12c88:	ldr	r2, [fp, #-16]
   12c8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c90:	add	r2, r2, r3
   12c94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12c98:	cmp	r2, r3
   12c9c:	bcs	12e14 <putchar_unlocked@plt+0x1f64>
   12ca0:	ldr	r2, [fp, #-16]
   12ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12ca8:	add	r3, r2, r3
   12cac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12cb0:	add	r3, r2, r3
   12cb4:	ldrb	r3, [r3]
   12cb8:	cmp	r3, #0
   12cbc:	bne	12c7c <putchar_unlocked@plt+0x1dcc>
   12cc0:	b	12e14 <putchar_unlocked@plt+0x1f64>
   12cc4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12cc8:	cmp	r3, #0
   12ccc:	beq	12dc0 <putchar_unlocked@plt+0x1f10>
   12cd0:	ldr	r3, [fp, #4]
   12cd4:	cmp	r3, #2
   12cd8:	bne	12dc0 <putchar_unlocked@plt+0x1f10>
   12cdc:	mov	r3, #1
   12ce0:	str	r3, [fp, #-56]	; 0xffffffc8
   12ce4:	b	12db0 <putchar_unlocked@plt+0x1f00>
   12ce8:	ldr	r2, [fp, #-16]
   12cec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12cf0:	add	r2, r2, r3
   12cf4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12cf8:	add	r3, r2, r3
   12cfc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12d00:	add	r3, r2, r3
   12d04:	ldrb	r3, [r3]
   12d08:	sub	r3, r3, #91	; 0x5b
   12d0c:	cmp	r3, #33	; 0x21
   12d10:	ldrls	pc, [pc, r3, lsl #2]
   12d14:	b	12da0 <putchar_unlocked@plt+0x1ef0>
   12d18:	andeq	r3, r1, ip, ror #11
   12d1c:	andeq	r3, r1, ip, ror #11
   12d20:	andeq	r2, r1, r0, lsr #27
   12d24:	andeq	r3, r1, ip, ror #11
   12d28:	andeq	r2, r1, r0, lsr #27
   12d2c:	andeq	r3, r1, ip, ror #11
   12d30:	andeq	r2, r1, r0, lsr #27
   12d34:	andeq	r2, r1, r0, lsr #27
   12d38:	andeq	r2, r1, r0, lsr #27
   12d3c:	andeq	r2, r1, r0, lsr #27
   12d40:	andeq	r2, r1, r0, lsr #27
   12d44:	andeq	r2, r1, r0, lsr #27
   12d48:	andeq	r2, r1, r0, lsr #27
   12d4c:	andeq	r2, r1, r0, lsr #27
   12d50:	andeq	r2, r1, r0, lsr #27
   12d54:	andeq	r2, r1, r0, lsr #27
   12d58:	andeq	r2, r1, r0, lsr #27
   12d5c:	andeq	r2, r1, r0, lsr #27
   12d60:	andeq	r2, r1, r0, lsr #27
   12d64:	andeq	r2, r1, r0, lsr #27
   12d68:	andeq	r2, r1, r0, lsr #27
   12d6c:	andeq	r2, r1, r0, lsr #27
   12d70:	andeq	r2, r1, r0, lsr #27
   12d74:	andeq	r2, r1, r0, lsr #27
   12d78:	andeq	r2, r1, r0, lsr #27
   12d7c:	andeq	r2, r1, r0, lsr #27
   12d80:	andeq	r2, r1, r0, lsr #27
   12d84:	andeq	r2, r1, r0, lsr #27
   12d88:	andeq	r2, r1, r0, lsr #27
   12d8c:	andeq	r2, r1, r0, lsr #27
   12d90:	andeq	r2, r1, r0, lsr #27
   12d94:	andeq	r2, r1, r0, lsr #27
   12d98:	andeq	r2, r1, r0, lsr #27
   12d9c:	andeq	r3, r1, ip, ror #11
   12da0:	nop			; (mov r0, r0)
   12da4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12da8:	add	r3, r3, #1
   12dac:	str	r3, [fp, #-56]	; 0xffffffc8
   12db0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12db4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12db8:	cmp	r2, r3
   12dbc:	bcc	12ce8 <putchar_unlocked@plt+0x1e38>
   12dc0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12dc4:	mov	r0, r3
   12dc8:	bl	10d0c <iswprint@plt>
   12dcc:	mov	r3, r0
   12dd0:	cmp	r3, #0
   12dd4:	bne	12de0 <putchar_unlocked@plt+0x1f30>
   12dd8:	mov	r3, #0
   12ddc:	strb	r3, [fp, #-49]	; 0xffffffcf
   12de0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12de4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12de8:	add	r3, r2, r3
   12dec:	str	r3, [fp, #-48]	; 0xffffffd0
   12df0:	sub	r3, fp, #76	; 0x4c
   12df4:	mov	r0, r3
   12df8:	bl	10cc4 <mbsinit@plt>
   12dfc:	mov	r3, r0
   12e00:	cmp	r3, #0
   12e04:	beq	12c08 <putchar_unlocked@plt+0x1d58>
   12e08:	b	12e18 <putchar_unlocked@plt+0x1f68>
   12e0c:	nop			; (mov r0, r0)
   12e10:	b	12e18 <putchar_unlocked@plt+0x1f68>
   12e14:	nop			; (mov r0, r0)
   12e18:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12e1c:	strb	r3, [fp, #-42]	; 0xffffffd6
   12e20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12e24:	cmp	r3, #1
   12e28:	bhi	12e4c <putchar_unlocked@plt+0x1f9c>
   12e2c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12e30:	cmp	r3, #0
   12e34:	beq	1318c <putchar_unlocked@plt+0x22dc>
   12e38:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12e3c:	eor	r3, r3, #1
   12e40:	uxtb	r3, r3
   12e44:	cmp	r3, #0
   12e48:	beq	1318c <putchar_unlocked@plt+0x22dc>
   12e4c:	ldr	r2, [fp, #-16]
   12e50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12e54:	add	r3, r2, r3
   12e58:	str	r3, [fp, #-68]	; 0xffffffbc
   12e5c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12e60:	cmp	r3, #0
   12e64:	beq	13024 <putchar_unlocked@plt+0x2174>
   12e68:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12e6c:	eor	r3, r3, #1
   12e70:	uxtb	r3, r3
   12e74:	cmp	r3, #0
   12e78:	beq	13024 <putchar_unlocked@plt+0x2174>
   12e7c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12e80:	cmp	r3, #0
   12e84:	bne	135f4 <putchar_unlocked@plt+0x2744>
   12e88:	mov	r3, #1
   12e8c:	strb	r3, [fp, #-41]	; 0xffffffd7
   12e90:	ldr	r3, [fp, #4]
   12e94:	cmp	r3, #2
   12e98:	bne	12f48 <putchar_unlocked@plt+0x2098>
   12e9c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   12ea0:	eor	r3, r3, #1
   12ea4:	uxtb	r3, r3
   12ea8:	cmp	r3, #0
   12eac:	beq	12f48 <putchar_unlocked@plt+0x2098>
   12eb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12eb4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12eb8:	cmp	r2, r3
   12ebc:	bcs	12ed4 <putchar_unlocked@plt+0x2024>
   12ec0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ec8:	add	r3, r2, r3
   12ecc:	mov	r2, #39	; 0x27
   12ed0:	strb	r2, [r3]
   12ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ed8:	add	r3, r3, #1
   12edc:	str	r3, [fp, #-20]	; 0xffffffec
   12ee0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12ee4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12ee8:	cmp	r2, r3
   12eec:	bcs	12f04 <putchar_unlocked@plt+0x2054>
   12ef0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ef8:	add	r3, r2, r3
   12efc:	mov	r2, #36	; 0x24
   12f00:	strb	r2, [r3]
   12f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f08:	add	r3, r3, #1
   12f0c:	str	r3, [fp, #-20]	; 0xffffffec
   12f10:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f18:	cmp	r2, r3
   12f1c:	bcs	12f34 <putchar_unlocked@plt+0x2084>
   12f20:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f28:	add	r3, r2, r3
   12f2c:	mov	r2, #39	; 0x27
   12f30:	strb	r2, [r3]
   12f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f38:	add	r3, r3, #1
   12f3c:	str	r3, [fp, #-20]	; 0xffffffec
   12f40:	mov	r3, #1
   12f44:	strb	r3, [fp, #-35]	; 0xffffffdd
   12f48:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f50:	cmp	r2, r3
   12f54:	bcs	12f6c <putchar_unlocked@plt+0x20bc>
   12f58:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f60:	add	r3, r2, r3
   12f64:	mov	r2, #92	; 0x5c
   12f68:	strb	r2, [r3]
   12f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f70:	add	r3, r3, #1
   12f74:	str	r3, [fp, #-20]	; 0xffffffec
   12f78:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f7c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f80:	cmp	r2, r3
   12f84:	bcs	12fac <putchar_unlocked@plt+0x20fc>
   12f88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f90:	add	r3, r2, r3
   12f94:	ldrb	r2, [fp, #-38]	; 0xffffffda
   12f98:	lsr	r2, r2, #6
   12f9c:	uxtb	r2, r2
   12fa0:	add	r2, r2, #48	; 0x30
   12fa4:	uxtb	r2, r2
   12fa8:	strb	r2, [r3]
   12fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   12fb0:	add	r3, r3, #1
   12fb4:	str	r3, [fp, #-20]	; 0xffffffec
   12fb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   12fbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12fc0:	cmp	r2, r3
   12fc4:	bcs	12ff4 <putchar_unlocked@plt+0x2144>
   12fc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12fd0:	add	r3, r2, r3
   12fd4:	ldrb	r2, [fp, #-38]	; 0xffffffda
   12fd8:	lsr	r2, r2, #3
   12fdc:	uxtb	r2, r2
   12fe0:	and	r2, r2, #7
   12fe4:	uxtb	r2, r2
   12fe8:	add	r2, r2, #48	; 0x30
   12fec:	uxtb	r2, r2
   12ff0:	strb	r2, [r3]
   12ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ff8:	add	r3, r3, #1
   12ffc:	str	r3, [fp, #-20]	; 0xffffffec
   13000:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13004:	and	r3, r3, #7
   13008:	uxtb	r3, r3
   1300c:	add	r3, r3, #48	; 0x30
   13010:	strb	r3, [fp, #-38]	; 0xffffffda
   13014:	b	13068 <putchar_unlocked@plt+0x21b8>
   13018:	andeq	r7, r1, ip, ror #3
   1301c:	strdeq	r7, [r1], -r4
   13020:	strdeq	r7, [r1], -r0
   13024:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   13028:	cmp	r3, #0
   1302c:	beq	13068 <putchar_unlocked@plt+0x21b8>
   13030:	ldr	r2, [fp, #-20]	; 0xffffffec
   13034:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13038:	cmp	r2, r3
   1303c:	bcs	13054 <putchar_unlocked@plt+0x21a4>
   13040:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13044:	ldr	r3, [fp, #-20]	; 0xffffffec
   13048:	add	r3, r2, r3
   1304c:	mov	r2, #92	; 0x5c
   13050:	strb	r2, [r3]
   13054:	ldr	r3, [fp, #-20]	; 0xffffffec
   13058:	add	r3, r3, #1
   1305c:	str	r3, [fp, #-20]	; 0xffffffec
   13060:	mov	r3, #0
   13064:	strb	r3, [fp, #-40]	; 0xffffffd8
   13068:	ldr	r3, [fp, #-16]
   1306c:	add	r2, r3, #1
   13070:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13074:	cmp	r2, r3
   13078:	bcs	13158 <putchar_unlocked@plt+0x22a8>
   1307c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13080:	cmp	r3, #0
   13084:	beq	13104 <putchar_unlocked@plt+0x2254>
   13088:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1308c:	eor	r3, r3, #1
   13090:	uxtb	r3, r3
   13094:	cmp	r3, #0
   13098:	beq	13104 <putchar_unlocked@plt+0x2254>
   1309c:	ldr	r2, [fp, #-20]	; 0xffffffec
   130a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   130a4:	cmp	r2, r3
   130a8:	bcs	130c0 <putchar_unlocked@plt+0x2210>
   130ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   130b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   130b4:	add	r3, r2, r3
   130b8:	mov	r2, #39	; 0x27
   130bc:	strb	r2, [r3]
   130c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   130c4:	add	r3, r3, #1
   130c8:	str	r3, [fp, #-20]	; 0xffffffec
   130cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   130d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   130d4:	cmp	r2, r3
   130d8:	bcs	130f0 <putchar_unlocked@plt+0x2240>
   130dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   130e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   130e4:	add	r3, r2, r3
   130e8:	mov	r2, #39	; 0x27
   130ec:	strb	r2, [r3]
   130f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   130f4:	add	r3, r3, #1
   130f8:	str	r3, [fp, #-20]	; 0xffffffec
   130fc:	mov	r3, #0
   13100:	strb	r3, [fp, #-35]	; 0xffffffdd
   13104:	ldr	r2, [fp, #-20]	; 0xffffffec
   13108:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1310c:	cmp	r2, r3
   13110:	bcs	13128 <putchar_unlocked@plt+0x2278>
   13114:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13118:	ldr	r3, [fp, #-20]	; 0xffffffec
   1311c:	add	r3, r2, r3
   13120:	ldrb	r2, [fp, #-38]	; 0xffffffda
   13124:	strb	r2, [r3]
   13128:	ldr	r3, [fp, #-20]	; 0xffffffec
   1312c:	add	r3, r3, #1
   13130:	str	r3, [fp, #-20]	; 0xffffffec
   13134:	ldr	r3, [fp, #-16]
   13138:	add	r3, r3, #1
   1313c:	str	r3, [fp, #-16]
   13140:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13144:	ldr	r3, [fp, #-16]
   13148:	add	r3, r2, r3
   1314c:	ldrb	r3, [r3]
   13150:	strb	r3, [fp, #-38]	; 0xffffffda
   13154:	b	12e5c <putchar_unlocked@plt+0x1fac>
   13158:	nop			; (mov r0, r0)
   1315c:	b	13328 <putchar_unlocked@plt+0x2478>
   13160:	nop			; (mov r0, r0)
   13164:	b	1318c <putchar_unlocked@plt+0x22dc>
   13168:	nop			; (mov r0, r0)
   1316c:	b	1318c <putchar_unlocked@plt+0x22dc>
   13170:	nop			; (mov r0, r0)
   13174:	b	1318c <putchar_unlocked@plt+0x22dc>
   13178:	nop			; (mov r0, r0)
   1317c:	b	1318c <putchar_unlocked@plt+0x22dc>
   13180:	nop			; (mov r0, r0)
   13184:	b	1318c <putchar_unlocked@plt+0x22dc>
   13188:	nop			; (mov r0, r0)
   1318c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13190:	eor	r3, r3, #1
   13194:	uxtb	r3, r3
   13198:	cmp	r3, #0
   1319c:	bne	131ac <putchar_unlocked@plt+0x22fc>
   131a0:	ldr	r3, [fp, #4]
   131a4:	cmp	r3, #2
   131a8:	bne	131c0 <putchar_unlocked@plt+0x2310>
   131ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   131b0:	eor	r3, r3, #1
   131b4:	uxtb	r3, r3
   131b8:	cmp	r3, #0
   131bc:	bne	13200 <putchar_unlocked@plt+0x2350>
   131c0:	ldr	r3, [fp, #12]
   131c4:	cmp	r3, #0
   131c8:	beq	13200 <putchar_unlocked@plt+0x2350>
   131cc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   131d0:	lsr	r3, r3, #5
   131d4:	uxtb	r3, r3
   131d8:	lsl	r3, r3, #2
   131dc:	ldr	r2, [fp, #12]
   131e0:	add	r3, r2, r3
   131e4:	ldr	r2, [r3]
   131e8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   131ec:	and	r3, r3, #31
   131f0:	lsr	r3, r2, r3
   131f4:	and	r3, r3, #1
   131f8:	cmp	r3, #0
   131fc:	bne	13214 <putchar_unlocked@plt+0x2364>
   13200:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   13204:	eor	r3, r3, #1
   13208:	uxtb	r3, r3
   1320c:	cmp	r3, #0
   13210:	bne	13324 <putchar_unlocked@plt+0x2474>
   13214:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13218:	cmp	r3, #0
   1321c:	bne	135fc <putchar_unlocked@plt+0x274c>
   13220:	mov	r3, #1
   13224:	strb	r3, [fp, #-41]	; 0xffffffd7
   13228:	ldr	r3, [fp, #4]
   1322c:	cmp	r3, #2
   13230:	bne	132e0 <putchar_unlocked@plt+0x2430>
   13234:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13238:	eor	r3, r3, #1
   1323c:	uxtb	r3, r3
   13240:	cmp	r3, #0
   13244:	beq	132e0 <putchar_unlocked@plt+0x2430>
   13248:	ldr	r2, [fp, #-20]	; 0xffffffec
   1324c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13250:	cmp	r2, r3
   13254:	bcs	1326c <putchar_unlocked@plt+0x23bc>
   13258:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1325c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13260:	add	r3, r2, r3
   13264:	mov	r2, #39	; 0x27
   13268:	strb	r2, [r3]
   1326c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13270:	add	r3, r3, #1
   13274:	str	r3, [fp, #-20]	; 0xffffffec
   13278:	ldr	r2, [fp, #-20]	; 0xffffffec
   1327c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13280:	cmp	r2, r3
   13284:	bcs	1329c <putchar_unlocked@plt+0x23ec>
   13288:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1328c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13290:	add	r3, r2, r3
   13294:	mov	r2, #36	; 0x24
   13298:	strb	r2, [r3]
   1329c:	ldr	r3, [fp, #-20]	; 0xffffffec
   132a0:	add	r3, r3, #1
   132a4:	str	r3, [fp, #-20]	; 0xffffffec
   132a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   132ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   132b0:	cmp	r2, r3
   132b4:	bcs	132cc <putchar_unlocked@plt+0x241c>
   132b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   132bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   132c0:	add	r3, r2, r3
   132c4:	mov	r2, #39	; 0x27
   132c8:	strb	r2, [r3]
   132cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   132d0:	add	r3, r3, #1
   132d4:	str	r3, [fp, #-20]	; 0xffffffec
   132d8:	mov	r3, #1
   132dc:	strb	r3, [fp, #-35]	; 0xffffffdd
   132e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   132e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   132e8:	cmp	r2, r3
   132ec:	bcs	13304 <putchar_unlocked@plt+0x2454>
   132f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   132f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   132f8:	add	r3, r2, r3
   132fc:	mov	r2, #92	; 0x5c
   13300:	strb	r2, [r3]
   13304:	ldr	r3, [fp, #-20]	; 0xffffffec
   13308:	add	r3, r3, #1
   1330c:	str	r3, [fp, #-20]	; 0xffffffec
   13310:	b	13328 <putchar_unlocked@plt+0x2478>
   13314:	nop			; (mov r0, r0)
   13318:	b	13328 <putchar_unlocked@plt+0x2478>
   1331c:	nop			; (mov r0, r0)
   13320:	b	13328 <putchar_unlocked@plt+0x2478>
   13324:	nop			; (mov r0, r0)
   13328:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1332c:	cmp	r3, #0
   13330:	beq	133b0 <putchar_unlocked@plt+0x2500>
   13334:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   13338:	eor	r3, r3, #1
   1333c:	uxtb	r3, r3
   13340:	cmp	r3, #0
   13344:	beq	133b0 <putchar_unlocked@plt+0x2500>
   13348:	ldr	r2, [fp, #-20]	; 0xffffffec
   1334c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13350:	cmp	r2, r3
   13354:	bcs	1336c <putchar_unlocked@plt+0x24bc>
   13358:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1335c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13360:	add	r3, r2, r3
   13364:	mov	r2, #39	; 0x27
   13368:	strb	r2, [r3]
   1336c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13370:	add	r3, r3, #1
   13374:	str	r3, [fp, #-20]	; 0xffffffec
   13378:	ldr	r2, [fp, #-20]	; 0xffffffec
   1337c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13380:	cmp	r2, r3
   13384:	bcs	1339c <putchar_unlocked@plt+0x24ec>
   13388:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1338c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13390:	add	r3, r2, r3
   13394:	mov	r2, #39	; 0x27
   13398:	strb	r2, [r3]
   1339c:	ldr	r3, [fp, #-20]	; 0xffffffec
   133a0:	add	r3, r3, #1
   133a4:	str	r3, [fp, #-20]	; 0xffffffec
   133a8:	mov	r3, #0
   133ac:	strb	r3, [fp, #-35]	; 0xffffffdd
   133b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   133b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   133b8:	cmp	r2, r3
   133bc:	bcs	133d4 <putchar_unlocked@plt+0x2524>
   133c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   133c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   133c8:	add	r3, r2, r3
   133cc:	ldrb	r2, [fp, #-38]	; 0xffffffda
   133d0:	strb	r2, [r3]
   133d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   133d8:	add	r3, r3, #1
   133dc:	str	r3, [fp, #-20]	; 0xffffffec
   133e0:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   133e4:	eor	r3, r3, #1
   133e8:	uxtb	r3, r3
   133ec:	cmp	r3, #0
   133f0:	beq	133fc <putchar_unlocked@plt+0x254c>
   133f4:	mov	r3, #0
   133f8:	strb	r3, [fp, #-37]	; 0xffffffdb
   133fc:	ldr	r3, [fp, #-16]
   13400:	add	r3, r3, #1
   13404:	str	r3, [fp, #-16]
   13408:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1340c:	cmn	r3, #1
   13410:	bne	13438 <putchar_unlocked@plt+0x2588>
   13414:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13418:	ldr	r3, [fp, #-16]
   1341c:	add	r3, r2, r3
   13420:	ldrb	r3, [r3]
   13424:	cmp	r3, #0
   13428:	movne	r3, #1
   1342c:	moveq	r3, #0
   13430:	uxtb	r3, r3
   13434:	b	13450 <putchar_unlocked@plt+0x25a0>
   13438:	ldr	r2, [fp, #-16]
   1343c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13440:	cmp	r2, r3
   13444:	movne	r3, #1
   13448:	moveq	r3, #0
   1344c:	uxtb	r3, r3
   13450:	cmp	r3, #0
   13454:	bne	1227c <putchar_unlocked@plt+0x13cc>
   13458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1345c:	cmp	r3, #0
   13460:	bne	1347c <putchar_unlocked@plt+0x25cc>
   13464:	ldr	r3, [fp, #4]
   13468:	cmp	r3, #2
   1346c:	bne	1347c <putchar_unlocked@plt+0x25cc>
   13470:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13474:	cmp	r3, #0
   13478:	bne	13604 <putchar_unlocked@plt+0x2754>
   1347c:	ldr	r3, [fp, #4]
   13480:	cmp	r3, #2
   13484:	bne	13524 <putchar_unlocked@plt+0x2674>
   13488:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1348c:	eor	r3, r3, #1
   13490:	uxtb	r3, r3
   13494:	cmp	r3, #0
   13498:	beq	13524 <putchar_unlocked@plt+0x2674>
   1349c:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   134a0:	cmp	r3, #0
   134a4:	beq	13524 <putchar_unlocked@plt+0x2674>
   134a8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   134ac:	cmp	r3, #0
   134b0:	beq	134f8 <putchar_unlocked@plt+0x2648>
   134b4:	ldr	r3, [fp, #20]
   134b8:	str	r3, [sp, #16]
   134bc:	ldr	r3, [fp, #16]
   134c0:	str	r3, [sp, #12]
   134c4:	ldr	r3, [fp, #12]
   134c8:	str	r3, [sp, #8]
   134cc:	ldr	r3, [fp, #8]
   134d0:	str	r3, [sp, #4]
   134d4:	mov	r3, #5
   134d8:	str	r3, [sp]
   134dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   134e0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   134e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134e8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   134ec:	bl	11fcc <putchar_unlocked@plt+0x111c>
   134f0:	mov	r3, r0
   134f4:	b	1366c <putchar_unlocked@plt+0x27bc>
   134f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   134fc:	cmp	r3, #0
   13500:	bne	13524 <putchar_unlocked@plt+0x2674>
   13504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13508:	cmp	r3, #0
   1350c:	beq	13524 <putchar_unlocked@plt+0x2674>
   13510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13514:	str	r3, [fp, #-92]	; 0xffffffa4
   13518:	mov	r3, #0
   1351c:	str	r3, [fp, #-20]	; 0xffffffec
   13520:	b	12058 <putchar_unlocked@plt+0x11a8>
   13524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13528:	cmp	r3, #0
   1352c:	beq	13598 <putchar_unlocked@plt+0x26e8>
   13530:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13534:	eor	r3, r3, #1
   13538:	uxtb	r3, r3
   1353c:	cmp	r3, #0
   13540:	beq	13598 <putchar_unlocked@plt+0x26e8>
   13544:	b	13588 <putchar_unlocked@plt+0x26d8>
   13548:	ldr	r2, [fp, #-20]	; 0xffffffec
   1354c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13550:	cmp	r2, r3
   13554:	bcs	13570 <putchar_unlocked@plt+0x26c0>
   13558:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1355c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13560:	add	r3, r2, r3
   13564:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13568:	ldrb	r2, [r2]
   1356c:	strb	r2, [r3]
   13570:	ldr	r3, [fp, #-20]	; 0xffffffec
   13574:	add	r3, r3, #1
   13578:	str	r3, [fp, #-20]	; 0xffffffec
   1357c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13580:	add	r3, r3, #1
   13584:	str	r3, [fp, #-28]	; 0xffffffe4
   13588:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1358c:	ldrb	r3, [r3]
   13590:	cmp	r3, #0
   13594:	bne	13548 <putchar_unlocked@plt+0x2698>
   13598:	ldr	r2, [fp, #-20]	; 0xffffffec
   1359c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   135a0:	cmp	r2, r3
   135a4:	bcs	135bc <putchar_unlocked@plt+0x270c>
   135a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   135ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   135b0:	add	r3, r2, r3
   135b4:	mov	r2, #0
   135b8:	strb	r2, [r3]
   135bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   135c0:	b	1366c <putchar_unlocked@plt+0x27bc>
   135c4:	nop			; (mov r0, r0)
   135c8:	b	13608 <putchar_unlocked@plt+0x2758>
   135cc:	nop			; (mov r0, r0)
   135d0:	b	13608 <putchar_unlocked@plt+0x2758>
   135d4:	nop			; (mov r0, r0)
   135d8:	b	13608 <putchar_unlocked@plt+0x2758>
   135dc:	nop			; (mov r0, r0)
   135e0:	b	13608 <putchar_unlocked@plt+0x2758>
   135e4:	nop			; (mov r0, r0)
   135e8:	b	13608 <putchar_unlocked@plt+0x2758>
   135ec:	nop			; (mov r0, r0)
   135f0:	b	13608 <putchar_unlocked@plt+0x2758>
   135f4:	nop			; (mov r0, r0)
   135f8:	b	13608 <putchar_unlocked@plt+0x2758>
   135fc:	nop			; (mov r0, r0)
   13600:	b	13608 <putchar_unlocked@plt+0x2758>
   13604:	nop			; (mov r0, r0)
   13608:	ldr	r3, [fp, #4]
   1360c:	cmp	r3, #2
   13610:	bne	13628 <putchar_unlocked@plt+0x2778>
   13614:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13618:	cmp	r3, #0
   1361c:	beq	13628 <putchar_unlocked@plt+0x2778>
   13620:	mov	r3, #4
   13624:	str	r3, [fp, #4]
   13628:	ldr	r3, [fp, #8]
   1362c:	bic	r3, r3, #2
   13630:	ldr	r2, [fp, #20]
   13634:	str	r2, [sp, #16]
   13638:	ldr	r2, [fp, #16]
   1363c:	str	r2, [sp, #12]
   13640:	mov	r2, #0
   13644:	str	r2, [sp, #8]
   13648:	str	r3, [sp, #4]
   1364c:	ldr	r3, [fp, #4]
   13650:	str	r3, [sp]
   13654:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13658:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1365c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   13660:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13664:	bl	11fcc <putchar_unlocked@plt+0x111c>
   13668:	mov	r3, r0
   1366c:	mov	r0, r3
   13670:	sub	sp, fp, #8
   13674:	pop	{r4, fp, pc}
   13678:	push	{fp, lr}
   1367c:	add	fp, sp, #4
   13680:	sub	sp, sp, #56	; 0x38
   13684:	str	r0, [fp, #-24]	; 0xffffffe8
   13688:	str	r1, [fp, #-28]	; 0xffffffe4
   1368c:	str	r2, [fp, #-32]	; 0xffffffe0
   13690:	str	r3, [fp, #-36]	; 0xffffffdc
   13694:	ldr	r3, [fp, #4]
   13698:	cmp	r3, #0
   1369c:	beq	136a8 <putchar_unlocked@plt+0x27f8>
   136a0:	ldr	r3, [fp, #4]
   136a4:	b	136ac <putchar_unlocked@plt+0x27fc>
   136a8:	ldr	r3, [pc, #132]	; 13734 <putchar_unlocked@plt+0x2884>
   136ac:	str	r3, [fp, #-8]
   136b0:	bl	10df0 <__errno_location@plt>
   136b4:	mov	r3, r0
   136b8:	ldr	r3, [r3]
   136bc:	str	r3, [fp, #-12]
   136c0:	ldr	r3, [fp, #-8]
   136c4:	ldr	r3, [r3]
   136c8:	ldr	r2, [fp, #-8]
   136cc:	ldr	r2, [r2, #4]
   136d0:	ldr	r1, [fp, #-8]
   136d4:	add	r1, r1, #8
   136d8:	ldr	r0, [fp, #-8]
   136dc:	ldr	r0, [r0, #40]	; 0x28
   136e0:	ldr	ip, [fp, #-8]
   136e4:	ldr	ip, [ip, #44]	; 0x2c
   136e8:	str	ip, [sp, #16]
   136ec:	str	r0, [sp, #12]
   136f0:	str	r1, [sp, #8]
   136f4:	str	r2, [sp, #4]
   136f8:	str	r3, [sp]
   136fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13700:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13704:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1370c:	bl	11fcc <putchar_unlocked@plt+0x111c>
   13710:	str	r0, [fp, #-16]
   13714:	bl	10df0 <__errno_location@plt>
   13718:	mov	r2, r0
   1371c:	ldr	r3, [fp, #-12]
   13720:	str	r3, [r2]
   13724:	ldr	r3, [fp, #-16]
   13728:	mov	r0, r3
   1372c:	sub	sp, fp, #4
   13730:	pop	{fp, pc}
   13734:	andeq	r8, r2, ip, asr r1
   13738:	push	{fp, lr}
   1373c:	add	fp, sp, #4
   13740:	sub	sp, sp, #16
   13744:	str	r0, [fp, #-8]
   13748:	str	r1, [fp, #-12]
   1374c:	str	r2, [fp, #-16]
   13750:	ldr	r3, [fp, #-16]
   13754:	mov	r2, #0
   13758:	ldr	r1, [fp, #-12]
   1375c:	ldr	r0, [fp, #-8]
   13760:	bl	13774 <putchar_unlocked@plt+0x28c4>
   13764:	mov	r3, r0
   13768:	mov	r0, r3
   1376c:	sub	sp, fp, #4
   13770:	pop	{fp, pc}
   13774:	push	{fp, lr}
   13778:	add	fp, sp, #4
   1377c:	sub	sp, sp, #64	; 0x40
   13780:	str	r0, [fp, #-32]	; 0xffffffe0
   13784:	str	r1, [fp, #-36]	; 0xffffffdc
   13788:	str	r2, [fp, #-40]	; 0xffffffd8
   1378c:	str	r3, [fp, #-44]	; 0xffffffd4
   13790:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13794:	cmp	r3, #0
   13798:	beq	137a4 <putchar_unlocked@plt+0x28f4>
   1379c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   137a0:	b	137a8 <putchar_unlocked@plt+0x28f8>
   137a4:	ldr	r3, [pc, #292]	; 138d0 <putchar_unlocked@plt+0x2a20>
   137a8:	str	r3, [fp, #-8]
   137ac:	bl	10df0 <__errno_location@plt>
   137b0:	mov	r3, r0
   137b4:	ldr	r3, [r3]
   137b8:	str	r3, [fp, #-12]
   137bc:	ldr	r3, [fp, #-8]
   137c0:	ldr	r3, [r3, #4]
   137c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   137c8:	cmp	r2, #0
   137cc:	moveq	r2, #1
   137d0:	movne	r2, #0
   137d4:	uxtb	r2, r2
   137d8:	orr	r3, r3, r2
   137dc:	str	r3, [fp, #-16]
   137e0:	ldr	r3, [fp, #-8]
   137e4:	ldr	r3, [r3]
   137e8:	ldr	r2, [fp, #-8]
   137ec:	add	r2, r2, #8
   137f0:	ldr	r1, [fp, #-8]
   137f4:	ldr	r1, [r1, #40]	; 0x28
   137f8:	ldr	r0, [fp, #-8]
   137fc:	ldr	r0, [r0, #44]	; 0x2c
   13800:	str	r0, [sp, #16]
   13804:	str	r1, [sp, #12]
   13808:	str	r2, [sp, #8]
   1380c:	ldr	r2, [fp, #-16]
   13810:	str	r2, [sp, #4]
   13814:	str	r3, [sp]
   13818:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1381c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13820:	mov	r1, #0
   13824:	mov	r0, #0
   13828:	bl	11fcc <putchar_unlocked@plt+0x111c>
   1382c:	mov	r3, r0
   13830:	add	r3, r3, #1
   13834:	str	r3, [fp, #-20]	; 0xffffffec
   13838:	ldr	r0, [fp, #-20]	; 0xffffffec
   1383c:	bl	14d24 <putchar_unlocked@plt+0x3e74>
   13840:	mov	r3, r0
   13844:	str	r3, [fp, #-24]	; 0xffffffe8
   13848:	ldr	r3, [fp, #-8]
   1384c:	ldr	r3, [r3]
   13850:	ldr	r2, [fp, #-8]
   13854:	add	r2, r2, #8
   13858:	ldr	r1, [fp, #-8]
   1385c:	ldr	r1, [r1, #40]	; 0x28
   13860:	ldr	r0, [fp, #-8]
   13864:	ldr	r0, [r0, #44]	; 0x2c
   13868:	str	r0, [sp, #16]
   1386c:	str	r1, [sp, #12]
   13870:	str	r2, [sp, #8]
   13874:	ldr	r2, [fp, #-16]
   13878:	str	r2, [sp, #4]
   1387c:	str	r3, [sp]
   13880:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13884:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13888:	ldr	r1, [fp, #-20]	; 0xffffffec
   1388c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13890:	bl	11fcc <putchar_unlocked@plt+0x111c>
   13894:	bl	10df0 <__errno_location@plt>
   13898:	mov	r2, r0
   1389c:	ldr	r3, [fp, #-12]
   138a0:	str	r3, [r2]
   138a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   138a8:	cmp	r3, #0
   138ac:	beq	138c0 <putchar_unlocked@plt+0x2a10>
   138b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   138b4:	sub	r2, r3, #1
   138b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   138bc:	str	r2, [r3]
   138c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   138c4:	mov	r0, r3
   138c8:	sub	sp, fp, #4
   138cc:	pop	{fp, pc}
   138d0:	andeq	r8, r2, ip, asr r1
   138d4:	push	{fp, lr}
   138d8:	add	fp, sp, #4
   138dc:	sub	sp, sp, #8
   138e0:	ldr	r3, [pc, #196]	; 139ac <putchar_unlocked@plt+0x2afc>
   138e4:	ldr	r3, [r3]
   138e8:	str	r3, [fp, #-12]
   138ec:	mov	r3, #1
   138f0:	str	r3, [fp, #-8]
   138f4:	b	13920 <putchar_unlocked@plt+0x2a70>
   138f8:	ldr	r3, [fp, #-8]
   138fc:	lsl	r3, r3, #3
   13900:	ldr	r2, [fp, #-12]
   13904:	add	r3, r2, r3
   13908:	ldr	r3, [r3, #4]
   1390c:	mov	r0, r3
   13910:	bl	1181c <putchar_unlocked@plt+0x96c>
   13914:	ldr	r3, [fp, #-8]
   13918:	add	r3, r3, #1
   1391c:	str	r3, [fp, #-8]
   13920:	ldr	r3, [pc, #136]	; 139b0 <putchar_unlocked@plt+0x2b00>
   13924:	ldr	r3, [r3]
   13928:	ldr	r2, [fp, #-8]
   1392c:	cmp	r2, r3
   13930:	blt	138f8 <putchar_unlocked@plt+0x2a48>
   13934:	ldr	r3, [fp, #-12]
   13938:	ldr	r3, [r3, #4]
   1393c:	ldr	r2, [pc, #112]	; 139b4 <putchar_unlocked@plt+0x2b04>
   13940:	cmp	r3, r2
   13944:	beq	13970 <putchar_unlocked@plt+0x2ac0>
   13948:	ldr	r3, [fp, #-12]
   1394c:	ldr	r3, [r3, #4]
   13950:	mov	r0, r3
   13954:	bl	1181c <putchar_unlocked@plt+0x96c>
   13958:	ldr	r3, [pc, #88]	; 139b8 <putchar_unlocked@plt+0x2b08>
   1395c:	mov	r2, #256	; 0x100
   13960:	str	r2, [r3]
   13964:	ldr	r3, [pc, #76]	; 139b8 <putchar_unlocked@plt+0x2b08>
   13968:	ldr	r2, [pc, #68]	; 139b4 <putchar_unlocked@plt+0x2b04>
   1396c:	str	r2, [r3, #4]
   13970:	ldr	r3, [fp, #-12]
   13974:	ldr	r2, [pc, #60]	; 139b8 <putchar_unlocked@plt+0x2b08>
   13978:	cmp	r3, r2
   1397c:	beq	13994 <putchar_unlocked@plt+0x2ae4>
   13980:	ldr	r0, [fp, #-12]
   13984:	bl	1181c <putchar_unlocked@plt+0x96c>
   13988:	ldr	r3, [pc, #28]	; 139ac <putchar_unlocked@plt+0x2afc>
   1398c:	ldr	r2, [pc, #36]	; 139b8 <putchar_unlocked@plt+0x2b08>
   13990:	str	r2, [r3]
   13994:	ldr	r3, [pc, #20]	; 139b0 <putchar_unlocked@plt+0x2b00>
   13998:	mov	r2, #1
   1399c:	str	r2, [r3]
   139a0:	nop			; (mov r0, r0)
   139a4:	sub	sp, fp, #4
   139a8:	pop	{fp, pc}
   139ac:	strdeq	r8, [r2], -ip
   139b0:	strdeq	r8, [r2], -r0
   139b4:	andeq	r8, r2, ip, lsl #3
   139b8:	strdeq	r8, [r2], -r4
   139bc:	push	{r4, fp, lr}
   139c0:	add	fp, sp, #8
   139c4:	sub	sp, sp, #84	; 0x54
   139c8:	str	r0, [fp, #-56]	; 0xffffffc8
   139cc:	str	r1, [fp, #-60]	; 0xffffffc4
   139d0:	str	r2, [fp, #-64]	; 0xffffffc0
   139d4:	str	r3, [fp, #-68]	; 0xffffffbc
   139d8:	bl	10df0 <__errno_location@plt>
   139dc:	mov	r3, r0
   139e0:	ldr	r3, [r3]
   139e4:	str	r3, [fp, #-24]	; 0xffffffe8
   139e8:	ldr	r3, [pc, #640]	; 13c70 <putchar_unlocked@plt+0x2dc0>
   139ec:	ldr	r3, [r3]
   139f0:	str	r3, [fp, #-16]
   139f4:	mvn	r3, #-2147483648	; 0x80000000
   139f8:	str	r3, [fp, #-28]	; 0xffffffe4
   139fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a00:	cmp	r3, #0
   13a04:	blt	13a18 <putchar_unlocked@plt+0x2b68>
   13a08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a10:	cmp	r2, r3
   13a14:	blt	13a1c <putchar_unlocked@plt+0x2b6c>
   13a18:	bl	10e98 <abort@plt>
   13a1c:	ldr	r3, [pc, #592]	; 13c74 <putchar_unlocked@plt+0x2dc4>
   13a20:	ldr	r2, [r3]
   13a24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a28:	cmp	r2, r3
   13a2c:	bgt	13b00 <putchar_unlocked@plt+0x2c50>
   13a30:	ldr	r3, [fp, #-16]
   13a34:	ldr	r2, [pc, #572]	; 13c78 <putchar_unlocked@plt+0x2dc8>
   13a38:	cmp	r3, r2
   13a3c:	moveq	r3, #1
   13a40:	movne	r3, #0
   13a44:	strb	r3, [fp, #-29]	; 0xffffffe3
   13a48:	ldr	r3, [pc, #548]	; 13c74 <putchar_unlocked@plt+0x2dc4>
   13a4c:	ldr	r3, [r3]
   13a50:	str	r3, [fp, #-48]	; 0xffffffd0
   13a54:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   13a58:	cmp	r3, #0
   13a5c:	beq	13a68 <putchar_unlocked@plt+0x2bb8>
   13a60:	mov	r0, #0
   13a64:	b	13a6c <putchar_unlocked@plt+0x2bbc>
   13a68:	ldr	r0, [fp, #-16]
   13a6c:	ldr	r3, [pc, #512]	; 13c74 <putchar_unlocked@plt+0x2dc4>
   13a70:	ldr	r3, [r3]
   13a74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a78:	sub	r3, r2, r3
   13a7c:	add	r2, r3, #1
   13a80:	sub	r1, fp, #48	; 0x30
   13a84:	mov	r3, #8
   13a88:	str	r3, [sp]
   13a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a90:	bl	15044 <putchar_unlocked@plt+0x4194>
   13a94:	str	r0, [fp, #-16]
   13a98:	ldr	r2, [pc, #464]	; 13c70 <putchar_unlocked@plt+0x2dc0>
   13a9c:	ldr	r3, [fp, #-16]
   13aa0:	str	r3, [r2]
   13aa4:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   13aa8:	cmp	r3, #0
   13aac:	beq	13ac0 <putchar_unlocked@plt+0x2c10>
   13ab0:	ldr	r3, [fp, #-16]
   13ab4:	ldr	r2, [pc, #444]	; 13c78 <putchar_unlocked@plt+0x2dc8>
   13ab8:	ldm	r2, {r0, r1}
   13abc:	stm	r3, {r0, r1}
   13ac0:	ldr	r3, [pc, #428]	; 13c74 <putchar_unlocked@plt+0x2dc4>
   13ac4:	ldr	r3, [r3]
   13ac8:	lsl	r3, r3, #3
   13acc:	ldr	r2, [fp, #-16]
   13ad0:	add	r0, r2, r3
   13ad4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13ad8:	ldr	r3, [pc, #404]	; 13c74 <putchar_unlocked@plt+0x2dc4>
   13adc:	ldr	r3, [r3]
   13ae0:	sub	r3, r2, r3
   13ae4:	lsl	r3, r3, #3
   13ae8:	mov	r2, r3
   13aec:	mov	r1, #0
   13af0:	bl	10e08 <memset@plt>
   13af4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13af8:	ldr	r2, [pc, #372]	; 13c74 <putchar_unlocked@plt+0x2dc4>
   13afc:	str	r3, [r2]
   13b00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b04:	lsl	r3, r3, #3
   13b08:	ldr	r2, [fp, #-16]
   13b0c:	add	r3, r2, r3
   13b10:	ldr	r3, [r3]
   13b14:	str	r3, [fp, #-36]	; 0xffffffdc
   13b18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b1c:	lsl	r3, r3, #3
   13b20:	ldr	r2, [fp, #-16]
   13b24:	add	r3, r2, r3
   13b28:	ldr	r3, [r3, #4]
   13b2c:	str	r3, [fp, #-20]	; 0xffffffec
   13b30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b34:	ldr	r3, [r3, #4]
   13b38:	orr	r3, r3, #1
   13b3c:	str	r3, [fp, #-40]	; 0xffffffd8
   13b40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b44:	ldr	r3, [r3]
   13b48:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13b4c:	add	r2, r2, #8
   13b50:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13b54:	ldr	r1, [r1, #40]	; 0x28
   13b58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13b5c:	ldr	r0, [r0, #44]	; 0x2c
   13b60:	str	r0, [sp, #16]
   13b64:	str	r1, [sp, #12]
   13b68:	str	r2, [sp, #8]
   13b6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13b70:	str	r2, [sp, #4]
   13b74:	str	r3, [sp]
   13b78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13b7c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13b80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b84:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b88:	bl	11fcc <putchar_unlocked@plt+0x111c>
   13b8c:	str	r0, [fp, #-44]	; 0xffffffd4
   13b90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13b94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b98:	cmp	r2, r3
   13b9c:	bhi	13c50 <putchar_unlocked@plt+0x2da0>
   13ba0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13ba4:	lsl	r3, r3, #3
   13ba8:	ldr	r2, [fp, #-16]
   13bac:	add	r3, r2, r3
   13bb0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13bb4:	add	r2, r2, #1
   13bb8:	str	r2, [fp, #-36]	; 0xffffffdc
   13bbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13bc0:	str	r2, [r3]
   13bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bc8:	ldr	r2, [pc, #172]	; 13c7c <putchar_unlocked@plt+0x2dcc>
   13bcc:	cmp	r3, r2
   13bd0:	beq	13bdc <putchar_unlocked@plt+0x2d2c>
   13bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bd8:	bl	1181c <putchar_unlocked@plt+0x96c>
   13bdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13be0:	lsl	r3, r3, #3
   13be4:	ldr	r2, [fp, #-16]
   13be8:	add	r4, r2, r3
   13bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13bf0:	bl	14d24 <putchar_unlocked@plt+0x3e74>
   13bf4:	mov	r3, r0
   13bf8:	str	r3, [fp, #-20]	; 0xffffffec
   13bfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c00:	str	r3, [r4, #4]
   13c04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13c08:	ldr	r3, [r3]
   13c0c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13c10:	add	r2, r2, #8
   13c14:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13c18:	ldr	r1, [r1, #40]	; 0x28
   13c1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13c20:	ldr	r0, [r0, #44]	; 0x2c
   13c24:	str	r0, [sp, #16]
   13c28:	str	r1, [sp, #12]
   13c2c:	str	r2, [sp, #8]
   13c30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13c34:	str	r2, [sp, #4]
   13c38:	str	r3, [sp]
   13c3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13c40:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13c44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13c48:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c4c:	bl	11fcc <putchar_unlocked@plt+0x111c>
   13c50:	bl	10df0 <__errno_location@plt>
   13c54:	mov	r2, r0
   13c58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c5c:	str	r3, [r2]
   13c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c64:	mov	r0, r3
   13c68:	sub	sp, fp, #8
   13c6c:	pop	{r4, fp, pc}
   13c70:	strdeq	r8, [r2], -ip
   13c74:	strdeq	r8, [r2], -r0
   13c78:	strdeq	r8, [r2], -r4
   13c7c:	andeq	r8, r2, ip, lsl #3
   13c80:	push	{fp, lr}
   13c84:	add	fp, sp, #4
   13c88:	sub	sp, sp, #8
   13c8c:	str	r0, [fp, #-8]
   13c90:	str	r1, [fp, #-12]
   13c94:	ldr	r3, [pc, #28]	; 13cb8 <putchar_unlocked@plt+0x2e08>
   13c98:	mvn	r2, #0
   13c9c:	ldr	r1, [fp, #-12]
   13ca0:	ldr	r0, [fp, #-8]
   13ca4:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   13ca8:	mov	r3, r0
   13cac:	mov	r0, r3
   13cb0:	sub	sp, fp, #4
   13cb4:	pop	{fp, pc}
   13cb8:	andeq	r8, r2, ip, asr r1
   13cbc:	push	{fp, lr}
   13cc0:	add	fp, sp, #4
   13cc4:	sub	sp, sp, #16
   13cc8:	str	r0, [fp, #-8]
   13ccc:	str	r1, [fp, #-12]
   13cd0:	str	r2, [fp, #-16]
   13cd4:	ldr	r3, [pc, #28]	; 13cf8 <putchar_unlocked@plt+0x2e48>
   13cd8:	ldr	r2, [fp, #-16]
   13cdc:	ldr	r1, [fp, #-12]
   13ce0:	ldr	r0, [fp, #-8]
   13ce4:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   13ce8:	mov	r3, r0
   13cec:	mov	r0, r3
   13cf0:	sub	sp, fp, #4
   13cf4:	pop	{fp, pc}
   13cf8:	andeq	r8, r2, ip, asr r1
   13cfc:	push	{fp, lr}
   13d00:	add	fp, sp, #4
   13d04:	sub	sp, sp, #8
   13d08:	str	r0, [fp, #-8]
   13d0c:	ldr	r1, [fp, #-8]
   13d10:	mov	r0, #0
   13d14:	bl	13c80 <putchar_unlocked@plt+0x2dd0>
   13d18:	mov	r3, r0
   13d1c:	mov	r0, r3
   13d20:	sub	sp, fp, #4
   13d24:	pop	{fp, pc}
   13d28:	push	{fp, lr}
   13d2c:	add	fp, sp, #4
   13d30:	sub	sp, sp, #8
   13d34:	str	r0, [fp, #-8]
   13d38:	str	r1, [fp, #-12]
   13d3c:	ldr	r2, [fp, #-12]
   13d40:	ldr	r1, [fp, #-8]
   13d44:	mov	r0, #0
   13d48:	bl	13cbc <putchar_unlocked@plt+0x2e0c>
   13d4c:	mov	r3, r0
   13d50:	mov	r0, r3
   13d54:	sub	sp, fp, #4
   13d58:	pop	{fp, pc}
   13d5c:	push	{fp, lr}
   13d60:	add	fp, sp, #4
   13d64:	sub	sp, sp, #64	; 0x40
   13d68:	str	r0, [fp, #-56]	; 0xffffffc8
   13d6c:	str	r1, [fp, #-60]	; 0xffffffc4
   13d70:	str	r2, [fp, #-64]	; 0xffffffc0
   13d74:	sub	r3, fp, #52	; 0x34
   13d78:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13d7c:	mov	r0, r3
   13d80:	bl	11e68 <putchar_unlocked@plt+0xfb8>
   13d84:	sub	r3, fp, #52	; 0x34
   13d88:	mvn	r2, #0
   13d8c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13d90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13d94:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   13d98:	mov	r3, r0
   13d9c:	mov	r0, r3
   13da0:	sub	sp, fp, #4
   13da4:	pop	{fp, pc}
   13da8:	push	{fp, lr}
   13dac:	add	fp, sp, #4
   13db0:	sub	sp, sp, #64	; 0x40
   13db4:	str	r0, [fp, #-56]	; 0xffffffc8
   13db8:	str	r1, [fp, #-60]	; 0xffffffc4
   13dbc:	str	r2, [fp, #-64]	; 0xffffffc0
   13dc0:	str	r3, [fp, #-68]	; 0xffffffbc
   13dc4:	sub	r3, fp, #52	; 0x34
   13dc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13dcc:	mov	r0, r3
   13dd0:	bl	11e68 <putchar_unlocked@plt+0xfb8>
   13dd4:	sub	r3, fp, #52	; 0x34
   13dd8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13ddc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13de0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13de4:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   13de8:	mov	r3, r0
   13dec:	mov	r0, r3
   13df0:	sub	sp, fp, #4
   13df4:	pop	{fp, pc}
   13df8:	push	{fp, lr}
   13dfc:	add	fp, sp, #4
   13e00:	sub	sp, sp, #8
   13e04:	str	r0, [fp, #-8]
   13e08:	str	r1, [fp, #-12]
   13e0c:	ldr	r2, [fp, #-12]
   13e10:	ldr	r1, [fp, #-8]
   13e14:	mov	r0, #0
   13e18:	bl	13d5c <putchar_unlocked@plt+0x2eac>
   13e1c:	mov	r3, r0
   13e20:	mov	r0, r3
   13e24:	sub	sp, fp, #4
   13e28:	pop	{fp, pc}
   13e2c:	push	{fp, lr}
   13e30:	add	fp, sp, #4
   13e34:	sub	sp, sp, #16
   13e38:	str	r0, [fp, #-8]
   13e3c:	str	r1, [fp, #-12]
   13e40:	str	r2, [fp, #-16]
   13e44:	ldr	r3, [fp, #-16]
   13e48:	ldr	r2, [fp, #-12]
   13e4c:	ldr	r1, [fp, #-8]
   13e50:	mov	r0, #0
   13e54:	bl	13da8 <putchar_unlocked@plt+0x2ef8>
   13e58:	mov	r3, r0
   13e5c:	mov	r0, r3
   13e60:	sub	sp, fp, #4
   13e64:	pop	{fp, pc}
   13e68:	push	{fp, lr}
   13e6c:	add	fp, sp, #4
   13e70:	sub	sp, sp, #64	; 0x40
   13e74:	str	r0, [fp, #-56]	; 0xffffffc8
   13e78:	str	r1, [fp, #-60]	; 0xffffffc4
   13e7c:	mov	r3, r2
   13e80:	strb	r3, [fp, #-61]	; 0xffffffc3
   13e84:	ldr	r3, [pc, #84]	; 13ee0 <putchar_unlocked@plt+0x3030>
   13e88:	sub	ip, fp, #52	; 0x34
   13e8c:	mov	lr, r3
   13e90:	ldm	lr!, {r0, r1, r2, r3}
   13e94:	stmia	ip!, {r0, r1, r2, r3}
   13e98:	ldm	lr!, {r0, r1, r2, r3}
   13e9c:	stmia	ip!, {r0, r1, r2, r3}
   13ea0:	ldm	lr, {r0, r1, r2, r3}
   13ea4:	stm	ip, {r0, r1, r2, r3}
   13ea8:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   13eac:	sub	r3, fp, #52	; 0x34
   13eb0:	mov	r2, #1
   13eb4:	mov	r0, r3
   13eb8:	bl	11cd4 <putchar_unlocked@plt+0xe24>
   13ebc:	sub	r3, fp, #52	; 0x34
   13ec0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13ec4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13ec8:	mov	r0, #0
   13ecc:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   13ed0:	mov	r3, r0
   13ed4:	mov	r0, r3
   13ed8:	sub	sp, fp, #4
   13edc:	pop	{fp, pc}
   13ee0:	andeq	r8, r2, ip, asr r1
   13ee4:	push	{fp, lr}
   13ee8:	add	fp, sp, #4
   13eec:	sub	sp, sp, #8
   13ef0:	str	r0, [fp, #-8]
   13ef4:	mov	r3, r1
   13ef8:	strb	r3, [fp, #-9]
   13efc:	ldrb	r3, [fp, #-9]
   13f00:	mov	r2, r3
   13f04:	mvn	r1, #0
   13f08:	ldr	r0, [fp, #-8]
   13f0c:	bl	13e68 <putchar_unlocked@plt+0x2fb8>
   13f10:	mov	r3, r0
   13f14:	mov	r0, r3
   13f18:	sub	sp, fp, #4
   13f1c:	pop	{fp, pc}
   13f20:	push	{fp, lr}
   13f24:	add	fp, sp, #4
   13f28:	sub	sp, sp, #8
   13f2c:	str	r0, [fp, #-8]
   13f30:	mov	r1, #58	; 0x3a
   13f34:	ldr	r0, [fp, #-8]
   13f38:	bl	13ee4 <putchar_unlocked@plt+0x3034>
   13f3c:	mov	r3, r0
   13f40:	mov	r0, r3
   13f44:	sub	sp, fp, #4
   13f48:	pop	{fp, pc}
   13f4c:	push	{fp, lr}
   13f50:	add	fp, sp, #4
   13f54:	sub	sp, sp, #8
   13f58:	str	r0, [fp, #-8]
   13f5c:	str	r1, [fp, #-12]
   13f60:	mov	r2, #58	; 0x3a
   13f64:	ldr	r1, [fp, #-12]
   13f68:	ldr	r0, [fp, #-8]
   13f6c:	bl	13e68 <putchar_unlocked@plt+0x2fb8>
   13f70:	mov	r3, r0
   13f74:	mov	r0, r3
   13f78:	sub	sp, fp, #4
   13f7c:	pop	{fp, pc}
   13f80:	push	{fp, lr}
   13f84:	add	fp, sp, #4
   13f88:	sub	sp, sp, #112	; 0x70
   13f8c:	str	r0, [fp, #-56]	; 0xffffffc8
   13f90:	str	r1, [fp, #-60]	; 0xffffffc4
   13f94:	str	r2, [fp, #-64]	; 0xffffffc0
   13f98:	sub	r3, fp, #116	; 0x74
   13f9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13fa0:	mov	r0, r3
   13fa4:	bl	11e68 <putchar_unlocked@plt+0xfb8>
   13fa8:	sub	ip, fp, #52	; 0x34
   13fac:	sub	lr, fp, #116	; 0x74
   13fb0:	ldm	lr!, {r0, r1, r2, r3}
   13fb4:	stmia	ip!, {r0, r1, r2, r3}
   13fb8:	ldm	lr!, {r0, r1, r2, r3}
   13fbc:	stmia	ip!, {r0, r1, r2, r3}
   13fc0:	ldm	lr, {r0, r1, r2, r3}
   13fc4:	stm	ip, {r0, r1, r2, r3}
   13fc8:	sub	r3, fp, #52	; 0x34
   13fcc:	mov	r2, #1
   13fd0:	mov	r1, #58	; 0x3a
   13fd4:	mov	r0, r3
   13fd8:	bl	11cd4 <putchar_unlocked@plt+0xe24>
   13fdc:	sub	r3, fp, #52	; 0x34
   13fe0:	mvn	r2, #0
   13fe4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13fe8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13fec:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   13ff0:	mov	r3, r0
   13ff4:	mov	r0, r3
   13ff8:	sub	sp, fp, #4
   13ffc:	pop	{fp, pc}
   14000:	push	{fp, lr}
   14004:	add	fp, sp, #4
   14008:	sub	sp, sp, #24
   1400c:	str	r0, [fp, #-8]
   14010:	str	r1, [fp, #-12]
   14014:	str	r2, [fp, #-16]
   14018:	str	r3, [fp, #-20]	; 0xffffffec
   1401c:	mvn	r3, #0
   14020:	str	r3, [sp]
   14024:	ldr	r3, [fp, #-20]	; 0xffffffec
   14028:	ldr	r2, [fp, #-16]
   1402c:	ldr	r1, [fp, #-12]
   14030:	ldr	r0, [fp, #-8]
   14034:	bl	14048 <putchar_unlocked@plt+0x3198>
   14038:	mov	r3, r0
   1403c:	mov	r0, r3
   14040:	sub	sp, fp, #4
   14044:	pop	{fp, pc}
   14048:	push	{fp, lr}
   1404c:	add	fp, sp, #4
   14050:	sub	sp, sp, #64	; 0x40
   14054:	str	r0, [fp, #-56]	; 0xffffffc8
   14058:	str	r1, [fp, #-60]	; 0xffffffc4
   1405c:	str	r2, [fp, #-64]	; 0xffffffc0
   14060:	str	r3, [fp, #-68]	; 0xffffffbc
   14064:	ldr	r3, [pc, #84]	; 140c0 <putchar_unlocked@plt+0x3210>
   14068:	sub	ip, fp, #52	; 0x34
   1406c:	mov	lr, r3
   14070:	ldm	lr!, {r0, r1, r2, r3}
   14074:	stmia	ip!, {r0, r1, r2, r3}
   14078:	ldm	lr!, {r0, r1, r2, r3}
   1407c:	stmia	ip!, {r0, r1, r2, r3}
   14080:	ldm	lr, {r0, r1, r2, r3}
   14084:	stm	ip, {r0, r1, r2, r3}
   14088:	sub	r3, fp, #52	; 0x34
   1408c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14090:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14094:	mov	r0, r3
   14098:	bl	11dec <putchar_unlocked@plt+0xf3c>
   1409c:	sub	r3, fp, #52	; 0x34
   140a0:	ldr	r2, [fp, #4]
   140a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   140a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   140ac:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   140b0:	mov	r3, r0
   140b4:	mov	r0, r3
   140b8:	sub	sp, fp, #4
   140bc:	pop	{fp, pc}
   140c0:	andeq	r8, r2, ip, asr r1
   140c4:	push	{fp, lr}
   140c8:	add	fp, sp, #4
   140cc:	sub	sp, sp, #16
   140d0:	str	r0, [fp, #-8]
   140d4:	str	r1, [fp, #-12]
   140d8:	str	r2, [fp, #-16]
   140dc:	ldr	r3, [fp, #-16]
   140e0:	ldr	r2, [fp, #-12]
   140e4:	ldr	r1, [fp, #-8]
   140e8:	mov	r0, #0
   140ec:	bl	14000 <putchar_unlocked@plt+0x3150>
   140f0:	mov	r3, r0
   140f4:	mov	r0, r3
   140f8:	sub	sp, fp, #4
   140fc:	pop	{fp, pc}
   14100:	push	{fp, lr}
   14104:	add	fp, sp, #4
   14108:	sub	sp, sp, #24
   1410c:	str	r0, [fp, #-8]
   14110:	str	r1, [fp, #-12]
   14114:	str	r2, [fp, #-16]
   14118:	str	r3, [fp, #-20]	; 0xffffffec
   1411c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14120:	str	r3, [sp]
   14124:	ldr	r3, [fp, #-16]
   14128:	ldr	r2, [fp, #-12]
   1412c:	ldr	r1, [fp, #-8]
   14130:	mov	r0, #0
   14134:	bl	14048 <putchar_unlocked@plt+0x3198>
   14138:	mov	r3, r0
   1413c:	mov	r0, r3
   14140:	sub	sp, fp, #4
   14144:	pop	{fp, pc}
   14148:	push	{fp, lr}
   1414c:	add	fp, sp, #4
   14150:	sub	sp, sp, #16
   14154:	str	r0, [fp, #-8]
   14158:	str	r1, [fp, #-12]
   1415c:	str	r2, [fp, #-16]
   14160:	ldr	r3, [pc, #28]	; 14184 <putchar_unlocked@plt+0x32d4>
   14164:	ldr	r2, [fp, #-16]
   14168:	ldr	r1, [fp, #-12]
   1416c:	ldr	r0, [fp, #-8]
   14170:	bl	139bc <putchar_unlocked@plt+0x2b0c>
   14174:	mov	r3, r0
   14178:	mov	r0, r3
   1417c:	sub	sp, fp, #4
   14180:	pop	{fp, pc}
   14184:	andeq	r8, r2, r0, lsl #2
   14188:	push	{fp, lr}
   1418c:	add	fp, sp, #4
   14190:	sub	sp, sp, #8
   14194:	str	r0, [fp, #-8]
   14198:	str	r1, [fp, #-12]
   1419c:	ldr	r2, [fp, #-12]
   141a0:	ldr	r1, [fp, #-8]
   141a4:	mov	r0, #0
   141a8:	bl	14148 <putchar_unlocked@plt+0x3298>
   141ac:	mov	r3, r0
   141b0:	mov	r0, r3
   141b4:	sub	sp, fp, #4
   141b8:	pop	{fp, pc}
   141bc:	push	{fp, lr}
   141c0:	add	fp, sp, #4
   141c4:	sub	sp, sp, #8
   141c8:	str	r0, [fp, #-8]
   141cc:	str	r1, [fp, #-12]
   141d0:	mvn	r2, #0
   141d4:	ldr	r1, [fp, #-12]
   141d8:	ldr	r0, [fp, #-8]
   141dc:	bl	14148 <putchar_unlocked@plt+0x3298>
   141e0:	mov	r3, r0
   141e4:	mov	r0, r3
   141e8:	sub	sp, fp, #4
   141ec:	pop	{fp, pc}
   141f0:	push	{fp, lr}
   141f4:	add	fp, sp, #4
   141f8:	sub	sp, sp, #8
   141fc:	str	r0, [fp, #-8]
   14200:	ldr	r1, [fp, #-8]
   14204:	mov	r0, #0
   14208:	bl	141bc <putchar_unlocked@plt+0x330c>
   1420c:	mov	r3, r0
   14210:	mov	r0, r3
   14214:	sub	sp, fp, #4
   14218:	pop	{fp, pc}
   1421c:	push	{fp, lr}
   14220:	add	fp, sp, #4
   14224:	sub	sp, sp, #16
   14228:	str	r0, [fp, #-16]
   1422c:	mov	r0, #33	; 0x21
   14230:	bl	14cbc <putchar_unlocked@plt+0x3e0c>
   14234:	mov	r3, r0
   14238:	str	r3, [fp, #-12]
   1423c:	ldr	r3, [fp, #-16]
   14240:	add	r3, r3, #44	; 0x2c
   14244:	mov	r2, #32
   14248:	mov	r1, r3
   1424c:	ldr	r0, [fp, #-12]
   14250:	bl	10e14 <strncpy@plt>
   14254:	ldr	r3, [fp, #-12]
   14258:	add	r3, r3, #32
   1425c:	mov	r2, #0
   14260:	strb	r2, [r3]
   14264:	ldr	r0, [fp, #-12]
   14268:	bl	10dd8 <strlen@plt>
   1426c:	mov	r2, r0
   14270:	ldr	r3, [fp, #-12]
   14274:	add	r3, r3, r2
   14278:	str	r3, [fp, #-8]
   1427c:	b	14298 <putchar_unlocked@plt+0x33e8>
   14280:	ldr	r3, [fp, #-8]
   14284:	sub	r3, r3, #1
   14288:	str	r3, [fp, #-8]
   1428c:	ldr	r3, [fp, #-8]
   14290:	mov	r2, #0
   14294:	strb	r2, [r3]
   14298:	ldr	r2, [fp, #-12]
   1429c:	ldr	r3, [fp, #-8]
   142a0:	cmp	r2, r3
   142a4:	bcs	142bc <putchar_unlocked@plt+0x340c>
   142a8:	ldr	r3, [fp, #-8]
   142ac:	sub	r3, r3, #1
   142b0:	ldrb	r3, [r3]
   142b4:	cmp	r3, #32
   142b8:	beq	14280 <putchar_unlocked@plt+0x33d0>
   142bc:	ldr	r3, [fp, #-12]
   142c0:	mov	r0, r3
   142c4:	sub	sp, fp, #4
   142c8:	pop	{fp, pc}
   142cc:	push	{fp, lr}
   142d0:	add	fp, sp, #4
   142d4:	sub	sp, sp, #16
   142d8:	str	r0, [fp, #-16]
   142dc:	str	r1, [fp, #-20]	; 0xffffffec
   142e0:	ldr	r3, [fp, #-16]
   142e4:	ldrb	r3, [r3, #44]	; 0x2c
   142e8:	cmp	r3, #0
   142ec:	beq	14308 <putchar_unlocked@plt+0x3458>
   142f0:	ldr	r3, [fp, #-16]
   142f4:	ldrsh	r3, [r3]
   142f8:	cmp	r3, #7
   142fc:	bne	14308 <putchar_unlocked@plt+0x3458>
   14300:	mov	r3, #1
   14304:	b	1430c <putchar_unlocked@plt+0x345c>
   14308:	mov	r3, #0
   1430c:	strb	r3, [fp, #-5]
   14310:	ldrb	r3, [fp, #-5]
   14314:	and	r3, r3, #1
   14318:	strb	r3, [fp, #-5]
   1431c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14320:	and	r3, r3, #2
   14324:	cmp	r3, #0
   14328:	beq	14348 <putchar_unlocked@plt+0x3498>
   1432c:	ldrb	r3, [fp, #-5]
   14330:	eor	r3, r3, #1
   14334:	uxtb	r3, r3
   14338:	cmp	r3, #0
   1433c:	beq	14348 <putchar_unlocked@plt+0x3498>
   14340:	mov	r3, #0
   14344:	b	143b4 <putchar_unlocked@plt+0x3504>
   14348:	ldr	r3, [fp, #-20]	; 0xffffffec
   1434c:	and	r3, r3, #1
   14350:	cmp	r3, #0
   14354:	beq	143b0 <putchar_unlocked@plt+0x3500>
   14358:	ldrb	r3, [fp, #-5]
   1435c:	cmp	r3, #0
   14360:	beq	143b0 <putchar_unlocked@plt+0x3500>
   14364:	ldr	r3, [fp, #-16]
   14368:	ldr	r3, [r3, #4]
   1436c:	cmp	r3, #0
   14370:	ble	143b0 <putchar_unlocked@plt+0x3500>
   14374:	ldr	r3, [fp, #-16]
   14378:	ldr	r3, [r3, #4]
   1437c:	mov	r1, #0
   14380:	mov	r0, r3
   14384:	bl	10da8 <kill@plt>
   14388:	mov	r3, r0
   1438c:	cmp	r3, #0
   14390:	bge	143b0 <putchar_unlocked@plt+0x3500>
   14394:	bl	10df0 <__errno_location@plt>
   14398:	mov	r3, r0
   1439c:	ldr	r3, [r3]
   143a0:	cmp	r3, #3
   143a4:	bne	143b0 <putchar_unlocked@plt+0x3500>
   143a8:	mov	r3, #0
   143ac:	b	143b4 <putchar_unlocked@plt+0x3504>
   143b0:	mov	r3, #1
   143b4:	mov	r0, r3
   143b8:	sub	sp, fp, #4
   143bc:	pop	{fp, pc}
   143c0:	push	{fp, lr}
   143c4:	add	fp, sp, #4
   143c8:	sub	sp, sp, #40	; 0x28
   143cc:	str	r0, [fp, #-24]	; 0xffffffe8
   143d0:	str	r1, [fp, #-28]	; 0xffffffe4
   143d4:	str	r2, [fp, #-32]	; 0xffffffe0
   143d8:	str	r3, [fp, #-36]	; 0xffffffdc
   143dc:	mov	r3, #0
   143e0:	str	r3, [fp, #-8]
   143e4:	mov	r3, #0
   143e8:	str	r3, [fp, #-20]	; 0xffffffec
   143ec:	mov	r3, #0
   143f0:	str	r3, [fp, #-12]
   143f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143f8:	bl	10c94 <utmpxname@plt>
   143fc:	bl	10ce8 <setutxent@plt>
   14400:	b	14490 <putchar_unlocked@plt+0x35e0>
   14404:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14408:	ldr	r0, [fp, #-16]
   1440c:	bl	142cc <putchar_unlocked@plt+0x341c>
   14410:	mov	r3, r0
   14414:	cmp	r3, #0
   14418:	beq	14490 <putchar_unlocked@plt+0x35e0>
   1441c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14420:	ldr	r2, [fp, #-8]
   14424:	cmp	r2, r3
   14428:	bne	1444c <putchar_unlocked@plt+0x359c>
   1442c:	sub	r1, fp, #20
   14430:	mov	r3, #384	; 0x180
   14434:	str	r3, [sp]
   14438:	mvn	r3, #0
   1443c:	mov	r2, #1
   14440:	ldr	r0, [fp, #-12]
   14444:	bl	15044 <putchar_unlocked@plt+0x4194>
   14448:	str	r0, [fp, #-12]
   1444c:	ldr	r3, [fp, #-8]
   14450:	add	r2, r3, #1
   14454:	str	r2, [fp, #-8]
   14458:	mov	r2, r3
   1445c:	mov	r3, r2
   14460:	lsl	r3, r3, #1
   14464:	add	r3, r3, r2
   14468:	lsl	r3, r3, #7
   1446c:	mov	r2, r3
   14470:	ldr	r3, [fp, #-12]
   14474:	add	r2, r3, r2
   14478:	ldr	r3, [fp, #-16]
   1447c:	mov	r0, r2
   14480:	mov	r1, r3
   14484:	mov	r3, #384	; 0x180
   14488:	mov	r2, r3
   1448c:	bl	10cb8 <memcpy@plt>
   14490:	bl	10ea4 <getutxent@plt>
   14494:	str	r0, [fp, #-16]
   14498:	ldr	r3, [fp, #-16]
   1449c:	cmp	r3, #0
   144a0:	bne	14404 <putchar_unlocked@plt+0x3554>
   144a4:	bl	10e44 <endutxent@plt>
   144a8:	ldr	r2, [fp, #-8]
   144ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144b0:	str	r2, [r3]
   144b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   144b8:	ldr	r2, [fp, #-12]
   144bc:	str	r2, [r3]
   144c0:	mov	r3, #0
   144c4:	mov	r0, r3
   144c8:	sub	sp, fp, #4
   144cc:	pop	{fp, pc}
   144d0:	push	{r4, r5, r6, r7, fp, lr}
   144d4:	add	fp, sp, #20
   144d8:	sub	sp, sp, #48	; 0x30
   144dc:	str	r0, [fp, #-24]	; 0xffffffe8
   144e0:	str	r1, [fp, #-28]	; 0xffffffe4
   144e4:	str	r2, [fp, #-32]	; 0xffffffe0
   144e8:	str	r3, [fp, #-36]	; 0xffffffdc
   144ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144f0:	cmp	r3, #0
   144f4:	beq	14518 <putchar_unlocked@plt+0x3668>
   144f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   144fc:	str	r3, [sp]
   14500:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14504:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14508:	ldr	r1, [pc, #1260]	; 149fc <putchar_unlocked@plt+0x3b4c>
   1450c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14510:	bl	10de4 <fprintf@plt>
   14514:	b	1452c <putchar_unlocked@plt+0x367c>
   14518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1451c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14520:	ldr	r1, [pc, #1240]	; 14a00 <putchar_unlocked@plt+0x3b50>
   14524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14528:	bl	10de4 <fprintf@plt>
   1452c:	ldr	r0, [pc, #1232]	; 14a04 <putchar_unlocked@plt+0x3b54>
   14530:	bl	10dcc <gettext@plt>
   14534:	mov	r2, r0
   14538:	ldr	r3, [pc, #1224]	; 14a08 <putchar_unlocked@plt+0x3b58>
   1453c:	ldr	r1, [pc, #1224]	; 14a0c <putchar_unlocked@plt+0x3b5c>
   14540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14544:	bl	10de4 <fprintf@plt>
   14548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1454c:	mov	r0, #10
   14550:	bl	10cdc <fputc_unlocked@plt>
   14554:	ldr	r0, [pc, #1204]	; 14a10 <putchar_unlocked@plt+0x3b60>
   14558:	bl	10dcc <gettext@plt>
   1455c:	mov	r3, r0
   14560:	ldr	r2, [pc, #1196]	; 14a14 <putchar_unlocked@plt+0x3b64>
   14564:	mov	r1, r3
   14568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1456c:	bl	10de4 <fprintf@plt>
   14570:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14574:	mov	r0, #10
   14578:	bl	10cdc <fputc_unlocked@plt>
   1457c:	ldr	r3, [fp, #8]
   14580:	cmp	r3, #9
   14584:	ldrls	pc, [pc, r3, lsl #2]
   14588:	b	14944 <putchar_unlocked@plt+0x3a94>
   1458c:	andeq	r4, r1, ip, ror #19
   14590:			; <UNDEFINED> instruction: 0x000145b4
   14594:	ldrdeq	r4, [r1], -r8
   14598:	andeq	r4, r1, r4, lsl #12
   1459c:	andeq	r4, r1, r4, asr #12
   145a0:	muleq	r1, ip, r6
   145a4:	andeq	r4, r1, r4, lsl #14
   145a8:	andeq	r4, r1, ip, ror r7
   145ac:	andeq	r4, r1, r4, lsl #16
   145b0:	muleq	r1, ip, r8
   145b4:	ldr	r0, [pc, #1116]	; 14a18 <putchar_unlocked@plt+0x3b68>
   145b8:	bl	10dcc <gettext@plt>
   145bc:	mov	r1, r0
   145c0:	ldr	r3, [fp, #4]
   145c4:	ldr	r3, [r3]
   145c8:	mov	r2, r3
   145cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145d0:	bl	10de4 <fprintf@plt>
   145d4:	b	149f0 <putchar_unlocked@plt+0x3b40>
   145d8:	ldr	r0, [pc, #1084]	; 14a1c <putchar_unlocked@plt+0x3b6c>
   145dc:	bl	10dcc <gettext@plt>
   145e0:	mov	r1, r0
   145e4:	ldr	r3, [fp, #4]
   145e8:	ldr	r2, [r3]
   145ec:	ldr	r3, [fp, #4]
   145f0:	add	r3, r3, #4
   145f4:	ldr	r3, [r3]
   145f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145fc:	bl	10de4 <fprintf@plt>
   14600:	b	149f0 <putchar_unlocked@plt+0x3b40>
   14604:	ldr	r0, [pc, #1044]	; 14a20 <putchar_unlocked@plt+0x3b70>
   14608:	bl	10dcc <gettext@plt>
   1460c:	ldr	r3, [fp, #4]
   14610:	ldr	r2, [r3]
   14614:	ldr	r3, [fp, #4]
   14618:	add	r3, r3, #4
   1461c:	ldr	r1, [r3]
   14620:	ldr	r3, [fp, #4]
   14624:	add	r3, r3, #8
   14628:	ldr	r3, [r3]
   1462c:	str	r3, [sp]
   14630:	mov	r3, r1
   14634:	mov	r1, r0
   14638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1463c:	bl	10de4 <fprintf@plt>
   14640:	b	149f0 <putchar_unlocked@plt+0x3b40>
   14644:	ldr	r0, [pc, #984]	; 14a24 <putchar_unlocked@plt+0x3b74>
   14648:	bl	10dcc <gettext@plt>
   1464c:	mov	ip, r0
   14650:	ldr	r3, [fp, #4]
   14654:	ldr	r1, [r3]
   14658:	ldr	r3, [fp, #4]
   1465c:	add	r3, r3, #4
   14660:	ldr	r0, [r3]
   14664:	ldr	r3, [fp, #4]
   14668:	add	r3, r3, #8
   1466c:	ldr	r3, [r3]
   14670:	ldr	r2, [fp, #4]
   14674:	add	r2, r2, #12
   14678:	ldr	r2, [r2]
   1467c:	str	r2, [sp, #4]
   14680:	str	r3, [sp]
   14684:	mov	r3, r0
   14688:	mov	r2, r1
   1468c:	mov	r1, ip
   14690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14694:	bl	10de4 <fprintf@plt>
   14698:	b	149f0 <putchar_unlocked@plt+0x3b40>
   1469c:	ldr	r0, [pc, #900]	; 14a28 <putchar_unlocked@plt+0x3b78>
   146a0:	bl	10dcc <gettext@plt>
   146a4:	mov	lr, r0
   146a8:	ldr	r3, [fp, #4]
   146ac:	ldr	r0, [r3]
   146b0:	ldr	r3, [fp, #4]
   146b4:	add	r3, r3, #4
   146b8:	ldr	ip, [r3]
   146bc:	ldr	r3, [fp, #4]
   146c0:	add	r3, r3, #8
   146c4:	ldr	r3, [r3]
   146c8:	ldr	r2, [fp, #4]
   146cc:	add	r2, r2, #12
   146d0:	ldr	r2, [r2]
   146d4:	ldr	r1, [fp, #4]
   146d8:	add	r1, r1, #16
   146dc:	ldr	r1, [r1]
   146e0:	str	r1, [sp, #8]
   146e4:	str	r2, [sp, #4]
   146e8:	str	r3, [sp]
   146ec:	mov	r3, ip
   146f0:	mov	r2, r0
   146f4:	mov	r1, lr
   146f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146fc:	bl	10de4 <fprintf@plt>
   14700:	b	149f0 <putchar_unlocked@plt+0x3b40>
   14704:	ldr	r0, [pc, #800]	; 14a2c <putchar_unlocked@plt+0x3b7c>
   14708:	bl	10dcc <gettext@plt>
   1470c:	mov	r4, r0
   14710:	ldr	r3, [fp, #4]
   14714:	ldr	ip, [r3]
   14718:	ldr	r3, [fp, #4]
   1471c:	add	r3, r3, #4
   14720:	ldr	lr, [r3]
   14724:	ldr	r3, [fp, #4]
   14728:	add	r3, r3, #8
   1472c:	ldr	r3, [r3]
   14730:	ldr	r2, [fp, #4]
   14734:	add	r2, r2, #12
   14738:	ldr	r2, [r2]
   1473c:	ldr	r1, [fp, #4]
   14740:	add	r1, r1, #16
   14744:	ldr	r1, [r1]
   14748:	ldr	r0, [fp, #4]
   1474c:	add	r0, r0, #20
   14750:	ldr	r0, [r0]
   14754:	str	r0, [sp, #12]
   14758:	str	r1, [sp, #8]
   1475c:	str	r2, [sp, #4]
   14760:	str	r3, [sp]
   14764:	mov	r3, lr
   14768:	mov	r2, ip
   1476c:	mov	r1, r4
   14770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14774:	bl	10de4 <fprintf@plt>
   14778:	b	149f0 <putchar_unlocked@plt+0x3b40>
   1477c:	ldr	r0, [pc, #684]	; 14a30 <putchar_unlocked@plt+0x3b80>
   14780:	bl	10dcc <gettext@plt>
   14784:	mov	r5, r0
   14788:	ldr	r3, [fp, #4]
   1478c:	ldr	lr, [r3]
   14790:	ldr	r3, [fp, #4]
   14794:	add	r3, r3, #4
   14798:	ldr	r4, [r3]
   1479c:	ldr	r3, [fp, #4]
   147a0:	add	r3, r3, #8
   147a4:	ldr	r3, [r3]
   147a8:	ldr	r2, [fp, #4]
   147ac:	add	r2, r2, #12
   147b0:	ldr	r2, [r2]
   147b4:	ldr	r1, [fp, #4]
   147b8:	add	r1, r1, #16
   147bc:	ldr	r1, [r1]
   147c0:	ldr	r0, [fp, #4]
   147c4:	add	r0, r0, #20
   147c8:	ldr	r0, [r0]
   147cc:	ldr	ip, [fp, #4]
   147d0:	add	ip, ip, #24
   147d4:	ldr	ip, [ip]
   147d8:	str	ip, [sp, #16]
   147dc:	str	r0, [sp, #12]
   147e0:	str	r1, [sp, #8]
   147e4:	str	r2, [sp, #4]
   147e8:	str	r3, [sp]
   147ec:	mov	r3, r4
   147f0:	mov	r2, lr
   147f4:	mov	r1, r5
   147f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147fc:	bl	10de4 <fprintf@plt>
   14800:	b	149f0 <putchar_unlocked@plt+0x3b40>
   14804:	ldr	r0, [pc, #552]	; 14a34 <putchar_unlocked@plt+0x3b84>
   14808:	bl	10dcc <gettext@plt>
   1480c:	mov	r6, r0
   14810:	ldr	r3, [fp, #4]
   14814:	ldr	r4, [r3]
   14818:	ldr	r3, [fp, #4]
   1481c:	add	r3, r3, #4
   14820:	ldr	r5, [r3]
   14824:	ldr	r3, [fp, #4]
   14828:	add	r3, r3, #8
   1482c:	ldr	r3, [r3]
   14830:	ldr	r2, [fp, #4]
   14834:	add	r2, r2, #12
   14838:	ldr	r2, [r2]
   1483c:	ldr	r1, [fp, #4]
   14840:	add	r1, r1, #16
   14844:	ldr	r1, [r1]
   14848:	ldr	r0, [fp, #4]
   1484c:	add	r0, r0, #20
   14850:	ldr	r0, [r0]
   14854:	ldr	ip, [fp, #4]
   14858:	add	ip, ip, #24
   1485c:	ldr	ip, [ip]
   14860:	ldr	lr, [fp, #4]
   14864:	add	lr, lr, #28
   14868:	ldr	lr, [lr]
   1486c:	str	lr, [sp, #20]
   14870:	str	ip, [sp, #16]
   14874:	str	r0, [sp, #12]
   14878:	str	r1, [sp, #8]
   1487c:	str	r2, [sp, #4]
   14880:	str	r3, [sp]
   14884:	mov	r3, r5
   14888:	mov	r2, r4
   1488c:	mov	r1, r6
   14890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14894:	bl	10de4 <fprintf@plt>
   14898:	b	149f0 <putchar_unlocked@plt+0x3b40>
   1489c:	ldr	r0, [pc, #404]	; 14a38 <putchar_unlocked@plt+0x3b88>
   148a0:	bl	10dcc <gettext@plt>
   148a4:	mov	r7, r0
   148a8:	ldr	r3, [fp, #4]
   148ac:	ldr	r5, [r3]
   148b0:	ldr	r3, [fp, #4]
   148b4:	add	r3, r3, #4
   148b8:	ldr	r6, [r3]
   148bc:	ldr	r3, [fp, #4]
   148c0:	add	r3, r3, #8
   148c4:	ldr	r3, [r3]
   148c8:	ldr	r2, [fp, #4]
   148cc:	add	r2, r2, #12
   148d0:	ldr	r2, [r2]
   148d4:	ldr	r1, [fp, #4]
   148d8:	add	r1, r1, #16
   148dc:	ldr	r1, [r1]
   148e0:	ldr	r0, [fp, #4]
   148e4:	add	r0, r0, #20
   148e8:	ldr	r0, [r0]
   148ec:	ldr	ip, [fp, #4]
   148f0:	add	ip, ip, #24
   148f4:	ldr	ip, [ip]
   148f8:	ldr	lr, [fp, #4]
   148fc:	add	lr, lr, #28
   14900:	ldr	lr, [lr]
   14904:	ldr	r4, [fp, #4]
   14908:	add	r4, r4, #32
   1490c:	ldr	r4, [r4]
   14910:	str	r4, [sp, #24]
   14914:	str	lr, [sp, #20]
   14918:	str	ip, [sp, #16]
   1491c:	str	r0, [sp, #12]
   14920:	str	r1, [sp, #8]
   14924:	str	r2, [sp, #4]
   14928:	str	r3, [sp]
   1492c:	mov	r3, r6
   14930:	mov	r2, r5
   14934:	mov	r1, r7
   14938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1493c:	bl	10de4 <fprintf@plt>
   14940:	b	149f0 <putchar_unlocked@plt+0x3b40>
   14944:	ldr	r0, [pc, #240]	; 14a3c <putchar_unlocked@plt+0x3b8c>
   14948:	bl	10dcc <gettext@plt>
   1494c:	mov	r7, r0
   14950:	ldr	r3, [fp, #4]
   14954:	ldr	r5, [r3]
   14958:	ldr	r3, [fp, #4]
   1495c:	add	r3, r3, #4
   14960:	ldr	r6, [r3]
   14964:	ldr	r3, [fp, #4]
   14968:	add	r3, r3, #8
   1496c:	ldr	r3, [r3]
   14970:	ldr	r2, [fp, #4]
   14974:	add	r2, r2, #12
   14978:	ldr	r2, [r2]
   1497c:	ldr	r1, [fp, #4]
   14980:	add	r1, r1, #16
   14984:	ldr	r1, [r1]
   14988:	ldr	r0, [fp, #4]
   1498c:	add	r0, r0, #20
   14990:	ldr	r0, [r0]
   14994:	ldr	ip, [fp, #4]
   14998:	add	ip, ip, #24
   1499c:	ldr	ip, [ip]
   149a0:	ldr	lr, [fp, #4]
   149a4:	add	lr, lr, #28
   149a8:	ldr	lr, [lr]
   149ac:	ldr	r4, [fp, #4]
   149b0:	add	r4, r4, #32
   149b4:	ldr	r4, [r4]
   149b8:	str	r4, [sp, #24]
   149bc:	str	lr, [sp, #20]
   149c0:	str	ip, [sp, #16]
   149c4:	str	r0, [sp, #12]
   149c8:	str	r1, [sp, #8]
   149cc:	str	r2, [sp, #4]
   149d0:	str	r3, [sp]
   149d4:	mov	r3, r6
   149d8:	mov	r2, r5
   149dc:	mov	r1, r7
   149e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149e4:	bl	10de4 <fprintf@plt>
   149e8:	b	149f0 <putchar_unlocked@plt+0x3b40>
   149ec:	nop			; (mov r0, r0)
   149f0:	nop			; (mov r0, r0)
   149f4:	sub	sp, fp, #20
   149f8:	pop	{r4, r5, r6, r7, fp, pc}
   149fc:	strdeq	r7, [r1], -r8
   14a00:	andeq	r7, r1, r4, lsl #4
   14a04:	andeq	r7, r1, ip, lsl #4
   14a08:	andeq	r0, r0, r6, ror #15
   14a0c:	andeq	r7, r1, ip, lsl r5
   14a10:	andeq	r7, r1, r0, lsl r2
   14a14:			; <UNDEFINED> instruction: 0x000172bc
   14a18:	andeq	r7, r1, r0, ror #5
   14a1c:	strdeq	r7, [r1], -r0
   14a20:	andeq	r7, r1, r8, lsl #6
   14a24:	andeq	r7, r1, r4, lsr #6
   14a28:	andeq	r7, r1, r4, asr #6
   14a2c:	andeq	r7, r1, r8, ror #6
   14a30:	muleq	r1, r0, r3
   14a34:			; <UNDEFINED> instruction: 0x000173bc
   14a38:	andeq	r7, r1, ip, ror #7
   14a3c:	andeq	r7, r1, r0, lsr #8
   14a40:	push	{fp, lr}
   14a44:	add	fp, sp, #4
   14a48:	sub	sp, sp, #32
   14a4c:	str	r0, [fp, #-16]
   14a50:	str	r1, [fp, #-20]	; 0xffffffec
   14a54:	str	r2, [fp, #-24]	; 0xffffffe8
   14a58:	str	r3, [fp, #-28]	; 0xffffffe4
   14a5c:	mov	r3, #0
   14a60:	str	r3, [fp, #-8]
   14a64:	b	14a74 <putchar_unlocked@plt+0x3bc4>
   14a68:	ldr	r3, [fp, #-8]
   14a6c:	add	r3, r3, #1
   14a70:	str	r3, [fp, #-8]
   14a74:	ldr	r3, [fp, #-8]
   14a78:	lsl	r3, r3, #2
   14a7c:	ldr	r2, [fp, #4]
   14a80:	add	r3, r2, r3
   14a84:	ldr	r3, [r3]
   14a88:	cmp	r3, #0
   14a8c:	bne	14a68 <putchar_unlocked@plt+0x3bb8>
   14a90:	ldr	r3, [fp, #-8]
   14a94:	str	r3, [sp, #4]
   14a98:	ldr	r3, [fp, #4]
   14a9c:	str	r3, [sp]
   14aa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14aa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14aac:	ldr	r0, [fp, #-16]
   14ab0:	bl	144d0 <putchar_unlocked@plt+0x3620>
   14ab4:	nop			; (mov r0, r0)
   14ab8:	sub	sp, fp, #4
   14abc:	pop	{fp, pc}
   14ac0:	push	{fp, lr}
   14ac4:	add	fp, sp, #4
   14ac8:	sub	sp, sp, #72	; 0x48
   14acc:	str	r0, [fp, #-56]	; 0xffffffc8
   14ad0:	str	r1, [fp, #-60]	; 0xffffffc4
   14ad4:	str	r2, [fp, #-64]	; 0xffffffc0
   14ad8:	str	r3, [fp, #-68]	; 0xffffffbc
   14adc:	mov	r3, #0
   14ae0:	str	r3, [fp, #-8]
   14ae4:	b	14af4 <putchar_unlocked@plt+0x3c44>
   14ae8:	ldr	r3, [fp, #-8]
   14aec:	add	r3, r3, #1
   14af0:	str	r3, [fp, #-8]
   14af4:	ldr	r3, [fp, #-8]
   14af8:	cmp	r3, #9
   14afc:	bhi	14b40 <putchar_unlocked@plt+0x3c90>
   14b00:	ldr	r3, [fp, #4]
   14b04:	add	r2, r3, #4
   14b08:	str	r2, [fp, #4]
   14b0c:	ldr	r2, [r3]
   14b10:	ldr	r3, [fp, #-8]
   14b14:	lsl	r3, r3, #2
   14b18:	sub	r1, fp, #4
   14b1c:	add	r3, r1, r3
   14b20:	str	r2, [r3, #-44]	; 0xffffffd4
   14b24:	ldr	r3, [fp, #-8]
   14b28:	lsl	r3, r3, #2
   14b2c:	sub	r2, fp, #4
   14b30:	add	r3, r2, r3
   14b34:	ldr	r3, [r3, #-44]	; 0xffffffd4
   14b38:	cmp	r3, #0
   14b3c:	bne	14ae8 <putchar_unlocked@plt+0x3c38>
   14b40:	ldr	r3, [fp, #-8]
   14b44:	str	r3, [sp, #4]
   14b48:	sub	r3, fp, #48	; 0x30
   14b4c:	str	r3, [sp]
   14b50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14b54:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14b58:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14b5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b60:	bl	144d0 <putchar_unlocked@plt+0x3620>
   14b64:	nop			; (mov r0, r0)
   14b68:	sub	sp, fp, #4
   14b6c:	pop	{fp, pc}
   14b70:	push	{r3}		; (str r3, [sp, #-4]!)
   14b74:	push	{fp, lr}
   14b78:	add	fp, sp, #4
   14b7c:	sub	sp, sp, #36	; 0x24
   14b80:	str	r0, [fp, #-20]	; 0xffffffec
   14b84:	str	r1, [fp, #-24]	; 0xffffffe8
   14b88:	str	r2, [fp, #-28]	; 0xffffffe4
   14b8c:	add	r3, fp, #8
   14b90:	str	r3, [fp, #-12]
   14b94:	ldr	r3, [fp, #-12]
   14b98:	str	r3, [sp]
   14b9c:	ldr	r3, [fp, #4]
   14ba0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14ba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14ba8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14bac:	bl	14ac0 <putchar_unlocked@plt+0x3c10>
   14bb0:	nop			; (mov r0, r0)
   14bb4:	sub	sp, fp, #4
   14bb8:	pop	{fp, lr}
   14bbc:	add	sp, sp, #4
   14bc0:	bx	lr
   14bc4:	push	{fp, lr}
   14bc8:	add	fp, sp, #4
   14bcc:	ldr	r3, [pc, #96]	; 14c34 <putchar_unlocked@plt+0x3d84>
   14bd0:	ldr	r3, [r3]
   14bd4:	mov	r1, r3
   14bd8:	mov	r0, #10
   14bdc:	bl	10cdc <fputc_unlocked@plt>
   14be0:	ldr	r0, [pc, #80]	; 14c38 <putchar_unlocked@plt+0x3d88>
   14be4:	bl	10dcc <gettext@plt>
   14be8:	mov	r3, r0
   14bec:	ldr	r1, [pc, #72]	; 14c3c <putchar_unlocked@plt+0x3d8c>
   14bf0:	mov	r0, r3
   14bf4:	bl	10c7c <printf@plt>
   14bf8:	ldr	r0, [pc, #64]	; 14c40 <putchar_unlocked@plt+0x3d90>
   14bfc:	bl	10dcc <gettext@plt>
   14c00:	mov	r3, r0
   14c04:	ldr	r2, [pc, #56]	; 14c44 <putchar_unlocked@plt+0x3d94>
   14c08:	ldr	r1, [pc, #56]	; 14c48 <putchar_unlocked@plt+0x3d98>
   14c0c:	mov	r0, r3
   14c10:	bl	10c7c <printf@plt>
   14c14:	ldr	r0, [pc, #48]	; 14c4c <putchar_unlocked@plt+0x3d9c>
   14c18:	bl	10dcc <gettext@plt>
   14c1c:	mov	r3, r0
   14c20:	ldr	r1, [pc, #40]	; 14c50 <putchar_unlocked@plt+0x3da0>
   14c24:	mov	r0, r3
   14c28:	bl	10c7c <printf@plt>
   14c2c:	nop			; (mov r0, r0)
   14c30:	pop	{fp, pc}
   14c34:	andeq	r8, r2, r4, asr #2
   14c38:	andeq	r7, r1, ip, asr r4
   14c3c:	andeq	r7, r1, r0, ror r4
   14c40:	andeq	r7, r1, r8, lsl #9
   14c44:	muleq	r1, ip, r4
   14c48:	andeq	r7, r1, r4, asr #9
   14c4c:	ldrdeq	r7, [r1], -r4
   14c50:	strdeq	r7, [r1], -ip
   14c54:	push	{fp, lr}
   14c58:	add	fp, sp, #4
   14c5c:	sub	sp, sp, #16
   14c60:	str	r0, [fp, #-8]
   14c64:	str	r1, [fp, #-12]
   14c68:	str	r2, [fp, #-16]
   14c6c:	ldr	r2, [fp, #-16]
   14c70:	ldr	r1, [fp, #-12]
   14c74:	ldr	r0, [fp, #-8]
   14c78:	bl	14de4 <putchar_unlocked@plt+0x3f34>
   14c7c:	mov	r3, r0
   14c80:	mov	r0, r3
   14c84:	sub	sp, fp, #4
   14c88:	pop	{fp, pc}
   14c8c:	push	{fp, lr}
   14c90:	add	fp, sp, #4
   14c94:	sub	sp, sp, #8
   14c98:	str	r0, [fp, #-8]
   14c9c:	ldr	r3, [fp, #-8]
   14ca0:	cmp	r3, #0
   14ca4:	bne	14cac <putchar_unlocked@plt+0x3dfc>
   14ca8:	bl	157d8 <putchar_unlocked@plt+0x4928>
   14cac:	ldr	r3, [fp, #-8]
   14cb0:	mov	r0, r3
   14cb4:	sub	sp, fp, #4
   14cb8:	pop	{fp, pc}
   14cbc:	push	{fp, lr}
   14cc0:	add	fp, sp, #4
   14cc4:	sub	sp, sp, #8
   14cc8:	str	r0, [fp, #-8]
   14ccc:	ldr	r0, [fp, #-8]
   14cd0:	bl	158d8 <putchar_unlocked@plt+0x4a28>
   14cd4:	mov	r3, r0
   14cd8:	mov	r0, r3
   14cdc:	bl	14c8c <putchar_unlocked@plt+0x3ddc>
   14ce0:	mov	r3, r0
   14ce4:	mov	r0, r3
   14ce8:	sub	sp, fp, #4
   14cec:	pop	{fp, pc}
   14cf0:	push	{fp, lr}
   14cf4:	add	fp, sp, #4
   14cf8:	sub	sp, sp, #8
   14cfc:	str	r0, [fp, #-8]
   14d00:	ldr	r0, [fp, #-8]
   14d04:	bl	15e68 <putchar_unlocked@plt+0x4fb8>
   14d08:	mov	r3, r0
   14d0c:	mov	r0, r3
   14d10:	bl	14c8c <putchar_unlocked@plt+0x3ddc>
   14d14:	mov	r3, r0
   14d18:	mov	r0, r3
   14d1c:	sub	sp, fp, #4
   14d20:	pop	{fp, pc}
   14d24:	push	{fp, lr}
   14d28:	add	fp, sp, #4
   14d2c:	sub	sp, sp, #8
   14d30:	str	r0, [fp, #-8]
   14d34:	ldr	r0, [fp, #-8]
   14d38:	bl	14cbc <putchar_unlocked@plt+0x3e0c>
   14d3c:	mov	r3, r0
   14d40:	mov	r0, r3
   14d44:	sub	sp, fp, #4
   14d48:	pop	{fp, pc}
   14d4c:	push	{fp, lr}
   14d50:	add	fp, sp, #4
   14d54:	sub	sp, sp, #16
   14d58:	str	r0, [fp, #-16]
   14d5c:	str	r1, [fp, #-20]	; 0xffffffec
   14d60:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d64:	ldr	r0, [fp, #-16]
   14d68:	bl	15980 <putchar_unlocked@plt+0x4ad0>
   14d6c:	str	r0, [fp, #-8]
   14d70:	ldr	r3, [fp, #-8]
   14d74:	cmp	r3, #0
   14d78:	bne	14d98 <putchar_unlocked@plt+0x3ee8>
   14d7c:	ldr	r3, [fp, #-16]
   14d80:	cmp	r3, #0
   14d84:	beq	14d94 <putchar_unlocked@plt+0x3ee4>
   14d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d8c:	cmp	r3, #0
   14d90:	beq	14d98 <putchar_unlocked@plt+0x3ee8>
   14d94:	bl	157d8 <putchar_unlocked@plt+0x4928>
   14d98:	ldr	r3, [fp, #-8]
   14d9c:	mov	r0, r3
   14da0:	sub	sp, fp, #4
   14da4:	pop	{fp, pc}
   14da8:	push	{fp, lr}
   14dac:	add	fp, sp, #4
   14db0:	sub	sp, sp, #8
   14db4:	str	r0, [fp, #-8]
   14db8:	str	r1, [fp, #-12]
   14dbc:	ldr	r1, [fp, #-12]
   14dc0:	ldr	r0, [fp, #-8]
   14dc4:	bl	15e94 <putchar_unlocked@plt+0x4fe4>
   14dc8:	mov	r3, r0
   14dcc:	mov	r0, r3
   14dd0:	bl	14c8c <putchar_unlocked@plt+0x3ddc>
   14dd4:	mov	r3, r0
   14dd8:	mov	r0, r3
   14ddc:	sub	sp, fp, #4
   14de0:	pop	{fp, pc}
   14de4:	push	{fp, lr}
   14de8:	add	fp, sp, #4
   14dec:	sub	sp, sp, #24
   14df0:	str	r0, [fp, #-16]
   14df4:	str	r1, [fp, #-20]	; 0xffffffec
   14df8:	str	r2, [fp, #-24]	; 0xffffffe8
   14dfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e00:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e04:	ldr	r0, [fp, #-16]
   14e08:	bl	16088 <putchar_unlocked@plt+0x51d8>
   14e0c:	str	r0, [fp, #-8]
   14e10:	ldr	r3, [fp, #-8]
   14e14:	cmp	r3, #0
   14e18:	bne	14e44 <putchar_unlocked@plt+0x3f94>
   14e1c:	ldr	r3, [fp, #-16]
   14e20:	cmp	r3, #0
   14e24:	beq	14e40 <putchar_unlocked@plt+0x3f90>
   14e28:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e2c:	cmp	r3, #0
   14e30:	beq	14e44 <putchar_unlocked@plt+0x3f94>
   14e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e38:	cmp	r3, #0
   14e3c:	beq	14e44 <putchar_unlocked@plt+0x3f94>
   14e40:	bl	157d8 <putchar_unlocked@plt+0x4928>
   14e44:	ldr	r3, [fp, #-8]
   14e48:	mov	r0, r3
   14e4c:	sub	sp, fp, #4
   14e50:	pop	{fp, pc}
   14e54:	push	{fp, lr}
   14e58:	add	fp, sp, #4
   14e5c:	sub	sp, sp, #16
   14e60:	str	r0, [fp, #-8]
   14e64:	str	r1, [fp, #-12]
   14e68:	str	r2, [fp, #-16]
   14e6c:	ldr	r2, [fp, #-16]
   14e70:	ldr	r1, [fp, #-12]
   14e74:	ldr	r0, [fp, #-8]
   14e78:	bl	15f1c <putchar_unlocked@plt+0x506c>
   14e7c:	mov	r3, r0
   14e80:	mov	r0, r3
   14e84:	bl	14c8c <putchar_unlocked@plt+0x3ddc>
   14e88:	mov	r3, r0
   14e8c:	mov	r0, r3
   14e90:	sub	sp, fp, #4
   14e94:	pop	{fp, pc}
   14e98:	push	{fp, lr}
   14e9c:	add	fp, sp, #4
   14ea0:	sub	sp, sp, #8
   14ea4:	str	r0, [fp, #-8]
   14ea8:	str	r1, [fp, #-12]
   14eac:	ldr	r2, [fp, #-12]
   14eb0:	ldr	r1, [fp, #-8]
   14eb4:	mov	r0, #0
   14eb8:	bl	14de4 <putchar_unlocked@plt+0x3f34>
   14ebc:	mov	r3, r0
   14ec0:	mov	r0, r3
   14ec4:	sub	sp, fp, #4
   14ec8:	pop	{fp, pc}
   14ecc:	push	{fp, lr}
   14ed0:	add	fp, sp, #4
   14ed4:	sub	sp, sp, #8
   14ed8:	str	r0, [fp, #-8]
   14edc:	str	r1, [fp, #-12]
   14ee0:	ldr	r2, [fp, #-12]
   14ee4:	ldr	r1, [fp, #-8]
   14ee8:	mov	r0, #0
   14eec:	bl	14e54 <putchar_unlocked@plt+0x3fa4>
   14ef0:	mov	r3, r0
   14ef4:	mov	r0, r3
   14ef8:	sub	sp, fp, #4
   14efc:	pop	{fp, pc}
   14f00:	push	{fp, lr}
   14f04:	add	fp, sp, #4
   14f08:	sub	sp, sp, #8
   14f0c:	str	r0, [fp, #-8]
   14f10:	str	r1, [fp, #-12]
   14f14:	mov	r2, #1
   14f18:	ldr	r1, [fp, #-12]
   14f1c:	ldr	r0, [fp, #-8]
   14f20:	bl	14f34 <putchar_unlocked@plt+0x4084>
   14f24:	mov	r3, r0
   14f28:	mov	r0, r3
   14f2c:	sub	sp, fp, #4
   14f30:	pop	{fp, pc}
   14f34:	push	{fp, lr}
   14f38:	add	fp, sp, #4
   14f3c:	sub	sp, sp, #24
   14f40:	str	r0, [fp, #-16]
   14f44:	str	r1, [fp, #-20]	; 0xffffffec
   14f48:	str	r2, [fp, #-24]	; 0xffffffe8
   14f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f50:	ldr	r3, [r3]
   14f54:	str	r3, [fp, #-8]
   14f58:	ldr	r3, [fp, #-16]
   14f5c:	cmp	r3, #0
   14f60:	bne	14fac <putchar_unlocked@plt+0x40fc>
   14f64:	ldr	r3, [fp, #-8]
   14f68:	cmp	r3, #0
   14f6c:	bne	15010 <putchar_unlocked@plt+0x4160>
   14f70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f74:	mov	r0, #64	; 0x40
   14f78:	bl	16830 <putchar_unlocked@plt+0x5980>
   14f7c:	mov	r3, r0
   14f80:	str	r3, [fp, #-8]
   14f84:	ldr	r3, [fp, #-8]
   14f88:	cmp	r3, #0
   14f8c:	moveq	r3, #1
   14f90:	movne	r3, #0
   14f94:	uxtb	r3, r3
   14f98:	mov	r2, r3
   14f9c:	ldr	r3, [fp, #-8]
   14fa0:	add	r3, r2, r3
   14fa4:	str	r3, [fp, #-8]
   14fa8:	b	15010 <putchar_unlocked@plt+0x4160>
   14fac:	ldr	r3, [fp, #-8]
   14fb0:	lsr	r3, r3, #1
   14fb4:	add	r3, r3, #1
   14fb8:	mvn	r2, r3
   14fbc:	ldr	r3, [fp, #-8]
   14fc0:	cmp	r2, r3
   14fc4:	bcs	14fe8 <putchar_unlocked@plt+0x4138>
   14fc8:	ldr	r3, [fp, #-8]
   14fcc:	lsr	r2, r3, #1
   14fd0:	ldr	r3, [fp, #-8]
   14fd4:	add	r3, r2, r3
   14fd8:	add	r3, r3, #1
   14fdc:	str	r3, [fp, #-8]
   14fe0:	mov	r3, #1
   14fe4:	b	15004 <putchar_unlocked@plt+0x4154>
   14fe8:	ldr	r3, [fp, #-8]
   14fec:	lsr	r2, r3, #1
   14ff0:	ldr	r3, [fp, #-8]
   14ff4:	add	r3, r2, r3
   14ff8:	add	r3, r3, #1
   14ffc:	str	r3, [fp, #-8]
   15000:	mov	r3, #0
   15004:	cmp	r3, #0
   15008:	beq	15010 <putchar_unlocked@plt+0x4160>
   1500c:	bl	157d8 <putchar_unlocked@plt+0x4928>
   15010:	ldr	r3, [fp, #-8]
   15014:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15018:	mov	r1, r3
   1501c:	ldr	r0, [fp, #-16]
   15020:	bl	14de4 <putchar_unlocked@plt+0x3f34>
   15024:	str	r0, [fp, #-16]
   15028:	ldr	r2, [fp, #-8]
   1502c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15030:	str	r2, [r3]
   15034:	ldr	r3, [fp, #-16]
   15038:	mov	r0, r3
   1503c:	sub	sp, fp, #4
   15040:	pop	{fp, pc}
   15044:	push	{fp, lr}
   15048:	add	fp, sp, #4
   1504c:	sub	sp, sp, #32
   15050:	str	r0, [fp, #-24]	; 0xffffffe8
   15054:	str	r1, [fp, #-28]	; 0xffffffe4
   15058:	str	r2, [fp, #-32]	; 0xffffffe0
   1505c:	str	r3, [fp, #-36]	; 0xffffffdc
   15060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15064:	ldr	r3, [r3]
   15068:	str	r3, [fp, #-8]
   1506c:	ldr	r3, [fp, #-8]
   15070:	asr	r3, r3, #1
   15074:	cmp	r3, #0
   15078:	bge	150a0 <putchar_unlocked@plt+0x41f0>
   1507c:	ldr	r3, [fp, #-8]
   15080:	asr	r3, r3, #1
   15084:	rsb	r2, r3, #-2147483648	; 0x80000000
   15088:	ldr	r3, [fp, #-8]
   1508c:	cmp	r2, r3
   15090:	movgt	r3, #1
   15094:	movle	r3, #0
   15098:	uxtb	r3, r3
   1509c:	b	150f4 <putchar_unlocked@plt+0x4244>
   150a0:	ldr	r3, [fp, #-8]
   150a4:	cmp	r3, #0
   150a8:	bge	150d0 <putchar_unlocked@plt+0x4220>
   150ac:	ldr	r3, [fp, #-8]
   150b0:	asr	r2, r3, #1
   150b4:	ldr	r3, [fp, #-8]
   150b8:	rsb	r3, r3, #-2147483648	; 0x80000000
   150bc:	cmp	r2, r3
   150c0:	movlt	r3, #1
   150c4:	movge	r3, #0
   150c8:	uxtb	r3, r3
   150cc:	b	150f4 <putchar_unlocked@plt+0x4244>
   150d0:	ldr	r3, [fp, #-8]
   150d4:	asr	r2, r3, #1
   150d8:	mvn	r3, #-2147483648	; 0x80000000
   150dc:	sub	r3, r3, r2
   150e0:	ldr	r2, [fp, #-8]
   150e4:	cmp	r3, r2
   150e8:	movlt	r3, #1
   150ec:	movge	r3, #0
   150f0:	uxtb	r3, r3
   150f4:	cmp	r3, #0
   150f8:	beq	1511c <putchar_unlocked@plt+0x426c>
   150fc:	ldr	r3, [fp, #-8]
   15100:	asr	r3, r3, #1
   15104:	mov	r2, r3
   15108:	ldr	r3, [fp, #-8]
   1510c:	add	r3, r2, r3
   15110:	str	r3, [fp, #-16]
   15114:	mov	r3, #1
   15118:	b	15138 <putchar_unlocked@plt+0x4288>
   1511c:	ldr	r3, [fp, #-8]
   15120:	asr	r3, r3, #1
   15124:	mov	r2, r3
   15128:	ldr	r3, [fp, #-8]
   1512c:	add	r3, r2, r3
   15130:	str	r3, [fp, #-16]
   15134:	mov	r3, #0
   15138:	cmp	r3, #0
   1513c:	beq	15148 <putchar_unlocked@plt+0x4298>
   15140:	mvn	r3, #-2147483648	; 0x80000000
   15144:	str	r3, [fp, #-16]
   15148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1514c:	cmp	r3, #0
   15150:	blt	1516c <putchar_unlocked@plt+0x42bc>
   15154:	ldr	r3, [fp, #-16]
   15158:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1515c:	cmp	r2, r3
   15160:	bge	1516c <putchar_unlocked@plt+0x42bc>
   15164:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15168:	str	r3, [fp, #-16]
   1516c:	ldr	r3, [fp, #4]
   15170:	cmp	r3, #0
   15174:	bge	15204 <putchar_unlocked@plt+0x4354>
   15178:	ldr	r3, [fp, #-16]
   1517c:	cmp	r3, #0
   15180:	bge	151b0 <putchar_unlocked@plt+0x4300>
   15184:	ldr	r1, [fp, #4]
   15188:	mvn	r0, #-2147483648	; 0x80000000
   1518c:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   15190:	mov	r3, r0
   15194:	mov	r2, r3
   15198:	ldr	r3, [fp, #-16]
   1519c:	cmp	r2, r3
   151a0:	movgt	r3, #1
   151a4:	movle	r3, #0
   151a8:	uxtb	r3, r3
   151ac:	b	152a4 <putchar_unlocked@plt+0x43f4>
   151b0:	ldr	r3, [fp, #4]
   151b4:	cmn	r3, #1
   151b8:	bne	151d8 <putchar_unlocked@plt+0x4328>
   151bc:	ldr	r3, [fp, #-16]
   151c0:	add	r3, r3, #-2147483648	; 0x80000000
   151c4:	cmp	r3, #0
   151c8:	movgt	r3, #1
   151cc:	movle	r3, #0
   151d0:	uxtb	r3, r3
   151d4:	b	152a4 <putchar_unlocked@plt+0x43f4>
   151d8:	ldr	r1, [fp, #4]
   151dc:	mov	r0, #-2147483648	; 0x80000000
   151e0:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   151e4:	mov	r3, r0
   151e8:	mov	r2, r3
   151ec:	ldr	r3, [fp, #-16]
   151f0:	cmp	r2, r3
   151f4:	movlt	r3, #1
   151f8:	movge	r3, #0
   151fc:	uxtb	r3, r3
   15200:	b	152a4 <putchar_unlocked@plt+0x43f4>
   15204:	ldr	r3, [fp, #4]
   15208:	cmp	r3, #0
   1520c:	beq	152a0 <putchar_unlocked@plt+0x43f0>
   15210:	ldr	r3, [fp, #-16]
   15214:	cmp	r3, #0
   15218:	bge	15274 <putchar_unlocked@plt+0x43c4>
   1521c:	ldr	r3, [fp, #-16]
   15220:	cmn	r3, #1
   15224:	bne	15244 <putchar_unlocked@plt+0x4394>
   15228:	ldr	r3, [fp, #4]
   1522c:	add	r3, r3, #-2147483648	; 0x80000000
   15230:	cmp	r3, #0
   15234:	movgt	r3, #1
   15238:	movle	r3, #0
   1523c:	uxtb	r3, r3
   15240:	b	152a4 <putchar_unlocked@plt+0x43f4>
   15244:	ldr	r3, [fp, #-16]
   15248:	mov	r1, r3
   1524c:	mov	r0, #-2147483648	; 0x80000000
   15250:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   15254:	mov	r3, r0
   15258:	mov	r2, r3
   1525c:	ldr	r3, [fp, #4]
   15260:	cmp	r2, r3
   15264:	movlt	r3, #1
   15268:	movge	r3, #0
   1526c:	uxtb	r3, r3
   15270:	b	152a4 <putchar_unlocked@plt+0x43f4>
   15274:	ldr	r1, [fp, #4]
   15278:	mvn	r0, #-2147483648	; 0x80000000
   1527c:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   15280:	mov	r3, r0
   15284:	mov	r2, r3
   15288:	ldr	r3, [fp, #-16]
   1528c:	cmp	r2, r3
   15290:	movlt	r3, #1
   15294:	movge	r3, #0
   15298:	uxtb	r3, r3
   1529c:	b	152a4 <putchar_unlocked@plt+0x43f4>
   152a0:	mov	r3, #0
   152a4:	cmp	r3, #0
   152a8:	beq	152c8 <putchar_unlocked@plt+0x4418>
   152ac:	ldr	r3, [fp, #-16]
   152b0:	mov	r2, r3
   152b4:	ldr	r3, [fp, #4]
   152b8:	mul	r3, r3, r2
   152bc:	str	r3, [fp, #-20]	; 0xffffffec
   152c0:	mov	r3, #1
   152c4:	b	152e0 <putchar_unlocked@plt+0x4430>
   152c8:	ldr	r3, [fp, #-16]
   152cc:	mov	r2, r3
   152d0:	ldr	r3, [fp, #4]
   152d4:	mul	r3, r3, r2
   152d8:	str	r3, [fp, #-20]	; 0xffffffec
   152dc:	mov	r3, #0
   152e0:	cmp	r3, #0
   152e4:	beq	152f0 <putchar_unlocked@plt+0x4440>
   152e8:	mvn	r3, #-2147483648	; 0x80000000
   152ec:	b	15308 <putchar_unlocked@plt+0x4458>
   152f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   152f4:	cmp	r3, #63	; 0x3f
   152f8:	bgt	15304 <putchar_unlocked@plt+0x4454>
   152fc:	mov	r3, #64	; 0x40
   15300:	b	15308 <putchar_unlocked@plt+0x4458>
   15304:	mov	r3, #0
   15308:	str	r3, [fp, #-12]
   1530c:	ldr	r3, [fp, #-12]
   15310:	cmp	r3, #0
   15314:	beq	15350 <putchar_unlocked@plt+0x44a0>
   15318:	ldr	r1, [fp, #4]
   1531c:	ldr	r0, [fp, #-12]
   15320:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   15324:	mov	r3, r0
   15328:	str	r3, [fp, #-16]
   1532c:	ldr	r3, [fp, #-12]
   15330:	ldr	r1, [fp, #4]
   15334:	mov	r0, r3
   15338:	bl	16c5c <putchar_unlocked@plt+0x5dac>
   1533c:	mov	r3, r1
   15340:	mov	r2, r3
   15344:	ldr	r3, [fp, #-12]
   15348:	sub	r3, r3, r2
   1534c:	str	r3, [fp, #-20]	; 0xffffffec
   15350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15354:	cmp	r3, #0
   15358:	bne	15368 <putchar_unlocked@plt+0x44b8>
   1535c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15360:	mov	r2, #0
   15364:	str	r2, [r3]
   15368:	ldr	r2, [fp, #-16]
   1536c:	ldr	r3, [fp, #-8]
   15370:	sub	r2, r2, r3
   15374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15378:	cmp	r2, r3
   1537c:	bge	155b4 <putchar_unlocked@plt+0x4704>
   15380:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15384:	cmp	r3, #0
   15388:	bge	153ac <putchar_unlocked@plt+0x44fc>
   1538c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15390:	rsb	r2, r3, #-2147483648	; 0x80000000
   15394:	ldr	r3, [fp, #-8]
   15398:	cmp	r2, r3
   1539c:	movgt	r3, #1
   153a0:	movle	r3, #0
   153a4:	uxtb	r3, r3
   153a8:	b	153f8 <putchar_unlocked@plt+0x4548>
   153ac:	ldr	r3, [fp, #-8]
   153b0:	cmp	r3, #0
   153b4:	bge	153d8 <putchar_unlocked@plt+0x4528>
   153b8:	ldr	r3, [fp, #-8]
   153bc:	rsb	r2, r3, #-2147483648	; 0x80000000
   153c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   153c4:	cmp	r2, r3
   153c8:	movgt	r3, #1
   153cc:	movle	r3, #0
   153d0:	uxtb	r3, r3
   153d4:	b	153f8 <putchar_unlocked@plt+0x4548>
   153d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   153dc:	mvn	r3, #-2147483648	; 0x80000000
   153e0:	sub	r3, r3, r2
   153e4:	ldr	r2, [fp, #-8]
   153e8:	cmp	r3, r2
   153ec:	movlt	r3, #1
   153f0:	movge	r3, #0
   153f4:	uxtb	r3, r3
   153f8:	cmp	r3, #0
   153fc:	beq	15414 <putchar_unlocked@plt+0x4564>
   15400:	ldr	r2, [fp, #-8]
   15404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15408:	add	r3, r2, r3
   1540c:	str	r3, [fp, #-16]
   15410:	b	155b0 <putchar_unlocked@plt+0x4700>
   15414:	ldr	r2, [fp, #-8]
   15418:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1541c:	add	r3, r2, r3
   15420:	str	r3, [fp, #-16]
   15424:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15428:	cmp	r3, #0
   1542c:	blt	15440 <putchar_unlocked@plt+0x4590>
   15430:	ldr	r3, [fp, #-16]
   15434:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15438:	cmp	r2, r3
   1543c:	blt	155b0 <putchar_unlocked@plt+0x4700>
   15440:	ldr	r3, [fp, #4]
   15444:	cmp	r3, #0
   15448:	bge	154d8 <putchar_unlocked@plt+0x4628>
   1544c:	ldr	r3, [fp, #-16]
   15450:	cmp	r3, #0
   15454:	bge	15484 <putchar_unlocked@plt+0x45d4>
   15458:	ldr	r1, [fp, #4]
   1545c:	mvn	r0, #-2147483648	; 0x80000000
   15460:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   15464:	mov	r3, r0
   15468:	mov	r2, r3
   1546c:	ldr	r3, [fp, #-16]
   15470:	cmp	r2, r3
   15474:	movgt	r3, #1
   15478:	movle	r3, #0
   1547c:	uxtb	r3, r3
   15480:	b	15578 <putchar_unlocked@plt+0x46c8>
   15484:	ldr	r3, [fp, #4]
   15488:	cmn	r3, #1
   1548c:	bne	154ac <putchar_unlocked@plt+0x45fc>
   15490:	ldr	r3, [fp, #-16]
   15494:	add	r3, r3, #-2147483648	; 0x80000000
   15498:	cmp	r3, #0
   1549c:	movgt	r3, #1
   154a0:	movle	r3, #0
   154a4:	uxtb	r3, r3
   154a8:	b	15578 <putchar_unlocked@plt+0x46c8>
   154ac:	ldr	r1, [fp, #4]
   154b0:	mov	r0, #-2147483648	; 0x80000000
   154b4:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   154b8:	mov	r3, r0
   154bc:	mov	r2, r3
   154c0:	ldr	r3, [fp, #-16]
   154c4:	cmp	r2, r3
   154c8:	movlt	r3, #1
   154cc:	movge	r3, #0
   154d0:	uxtb	r3, r3
   154d4:	b	15578 <putchar_unlocked@plt+0x46c8>
   154d8:	ldr	r3, [fp, #4]
   154dc:	cmp	r3, #0
   154e0:	beq	15574 <putchar_unlocked@plt+0x46c4>
   154e4:	ldr	r3, [fp, #-16]
   154e8:	cmp	r3, #0
   154ec:	bge	15548 <putchar_unlocked@plt+0x4698>
   154f0:	ldr	r3, [fp, #-16]
   154f4:	cmn	r3, #1
   154f8:	bne	15518 <putchar_unlocked@plt+0x4668>
   154fc:	ldr	r3, [fp, #4]
   15500:	add	r3, r3, #-2147483648	; 0x80000000
   15504:	cmp	r3, #0
   15508:	movgt	r3, #1
   1550c:	movle	r3, #0
   15510:	uxtb	r3, r3
   15514:	b	15578 <putchar_unlocked@plt+0x46c8>
   15518:	ldr	r3, [fp, #-16]
   1551c:	mov	r1, r3
   15520:	mov	r0, #-2147483648	; 0x80000000
   15524:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   15528:	mov	r3, r0
   1552c:	mov	r2, r3
   15530:	ldr	r3, [fp, #4]
   15534:	cmp	r2, r3
   15538:	movlt	r3, #1
   1553c:	movge	r3, #0
   15540:	uxtb	r3, r3
   15544:	b	15578 <putchar_unlocked@plt+0x46c8>
   15548:	ldr	r1, [fp, #4]
   1554c:	mvn	r0, #-2147483648	; 0x80000000
   15550:	bl	16a3c <putchar_unlocked@plt+0x5b8c>
   15554:	mov	r3, r0
   15558:	mov	r2, r3
   1555c:	ldr	r3, [fp, #-16]
   15560:	cmp	r2, r3
   15564:	movlt	r3, #1
   15568:	movge	r3, #0
   1556c:	uxtb	r3, r3
   15570:	b	15578 <putchar_unlocked@plt+0x46c8>
   15574:	mov	r3, #0
   15578:	cmp	r3, #0
   1557c:	beq	15598 <putchar_unlocked@plt+0x46e8>
   15580:	ldr	r3, [fp, #-16]
   15584:	mov	r2, r3
   15588:	ldr	r3, [fp, #4]
   1558c:	mul	r3, r3, r2
   15590:	str	r3, [fp, #-20]	; 0xffffffec
   15594:	b	155b0 <putchar_unlocked@plt+0x4700>
   15598:	ldr	r3, [fp, #-16]
   1559c:	mov	r2, r3
   155a0:	ldr	r3, [fp, #4]
   155a4:	mul	r3, r3, r2
   155a8:	str	r3, [fp, #-20]	; 0xffffffec
   155ac:	b	155b4 <putchar_unlocked@plt+0x4704>
   155b0:	bl	157d8 <putchar_unlocked@plt+0x4928>
   155b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155b8:	mov	r1, r3
   155bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155c0:	bl	14d4c <putchar_unlocked@plt+0x3e9c>
   155c4:	str	r0, [fp, #-24]	; 0xffffffe8
   155c8:	ldr	r2, [fp, #-16]
   155cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155d0:	str	r2, [r3]
   155d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155d8:	mov	r0, r3
   155dc:	sub	sp, fp, #4
   155e0:	pop	{fp, pc}
   155e4:	push	{fp, lr}
   155e8:	add	fp, sp, #4
   155ec:	sub	sp, sp, #8
   155f0:	str	r0, [fp, #-8]
   155f4:	mov	r1, #1
   155f8:	ldr	r0, [fp, #-8]
   155fc:	bl	1563c <putchar_unlocked@plt+0x478c>
   15600:	mov	r3, r0
   15604:	mov	r0, r3
   15608:	sub	sp, fp, #4
   1560c:	pop	{fp, pc}
   15610:	push	{fp, lr}
   15614:	add	fp, sp, #4
   15618:	sub	sp, sp, #8
   1561c:	str	r0, [fp, #-8]
   15620:	mov	r1, #1
   15624:	ldr	r0, [fp, #-8]
   15628:	bl	15678 <putchar_unlocked@plt+0x47c8>
   1562c:	mov	r3, r0
   15630:	mov	r0, r3
   15634:	sub	sp, fp, #4
   15638:	pop	{fp, pc}
   1563c:	push	{fp, lr}
   15640:	add	fp, sp, #4
   15644:	sub	sp, sp, #8
   15648:	str	r0, [fp, #-8]
   1564c:	str	r1, [fp, #-12]
   15650:	ldr	r1, [fp, #-12]
   15654:	ldr	r0, [fp, #-8]
   15658:	bl	15814 <putchar_unlocked@plt+0x4964>
   1565c:	mov	r3, r0
   15660:	mov	r0, r3
   15664:	bl	14c8c <putchar_unlocked@plt+0x3ddc>
   15668:	mov	r3, r0
   1566c:	mov	r0, r3
   15670:	sub	sp, fp, #4
   15674:	pop	{fp, pc}
   15678:	push	{fp, lr}
   1567c:	add	fp, sp, #4
   15680:	sub	sp, sp, #8
   15684:	str	r0, [fp, #-8]
   15688:	str	r1, [fp, #-12]
   1568c:	ldr	r1, [fp, #-12]
   15690:	ldr	r0, [fp, #-8]
   15694:	bl	15ee4 <putchar_unlocked@plt+0x5034>
   15698:	mov	r3, r0
   1569c:	mov	r0, r3
   156a0:	bl	14c8c <putchar_unlocked@plt+0x3ddc>
   156a4:	mov	r3, r0
   156a8:	mov	r0, r3
   156ac:	sub	sp, fp, #4
   156b0:	pop	{fp, pc}
   156b4:	push	{fp, lr}
   156b8:	add	fp, sp, #4
   156bc:	sub	sp, sp, #8
   156c0:	str	r0, [fp, #-8]
   156c4:	str	r1, [fp, #-12]
   156c8:	ldr	r0, [fp, #-12]
   156cc:	bl	14cbc <putchar_unlocked@plt+0x3e0c>
   156d0:	mov	r3, r0
   156d4:	ldr	r2, [fp, #-12]
   156d8:	ldr	r1, [fp, #-8]
   156dc:	mov	r0, r3
   156e0:	bl	10cb8 <memcpy@plt>
   156e4:	mov	r3, r0
   156e8:	mov	r0, r3
   156ec:	sub	sp, fp, #4
   156f0:	pop	{fp, pc}
   156f4:	push	{fp, lr}
   156f8:	add	fp, sp, #4
   156fc:	sub	sp, sp, #8
   15700:	str	r0, [fp, #-8]
   15704:	str	r1, [fp, #-12]
   15708:	ldr	r0, [fp, #-12]
   1570c:	bl	14cf0 <putchar_unlocked@plt+0x3e40>
   15710:	mov	r3, r0
   15714:	mov	r0, r3
   15718:	ldr	r3, [fp, #-12]
   1571c:	mov	r2, r3
   15720:	ldr	r1, [fp, #-8]
   15724:	bl	10cb8 <memcpy@plt>
   15728:	mov	r3, r0
   1572c:	mov	r0, r3
   15730:	sub	sp, fp, #4
   15734:	pop	{fp, pc}
   15738:	push	{fp, lr}
   1573c:	add	fp, sp, #4
   15740:	sub	sp, sp, #16
   15744:	str	r0, [fp, #-16]
   15748:	str	r1, [fp, #-20]	; 0xffffffec
   1574c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15750:	add	r3, r3, #1
   15754:	mov	r0, r3
   15758:	bl	14cf0 <putchar_unlocked@plt+0x3e40>
   1575c:	mov	r3, r0
   15760:	str	r3, [fp, #-8]
   15764:	ldr	r3, [fp, #-20]	; 0xffffffec
   15768:	ldr	r2, [fp, #-8]
   1576c:	add	r3, r2, r3
   15770:	mov	r2, #0
   15774:	strb	r2, [r3]
   15778:	ldr	r3, [fp, #-20]	; 0xffffffec
   1577c:	mov	r2, r3
   15780:	ldr	r1, [fp, #-16]
   15784:	ldr	r0, [fp, #-8]
   15788:	bl	10cb8 <memcpy@plt>
   1578c:	mov	r3, r0
   15790:	mov	r0, r3
   15794:	sub	sp, fp, #4
   15798:	pop	{fp, pc}
   1579c:	push	{fp, lr}
   157a0:	add	fp, sp, #4
   157a4:	sub	sp, sp, #8
   157a8:	str	r0, [fp, #-8]
   157ac:	ldr	r0, [fp, #-8]
   157b0:	bl	10dd8 <strlen@plt>
   157b4:	mov	r3, r0
   157b8:	add	r3, r3, #1
   157bc:	mov	r1, r3
   157c0:	ldr	r0, [fp, #-8]
   157c4:	bl	156b4 <putchar_unlocked@plt+0x4804>
   157c8:	mov	r3, r0
   157cc:	mov	r0, r3
   157d0:	sub	sp, fp, #4
   157d4:	pop	{fp, pc}
   157d8:	push	{r4, r5, fp, lr}
   157dc:	add	fp, sp, #12
   157e0:	ldr	r3, [pc, #32]	; 15808 <putchar_unlocked@plt+0x4958>
   157e4:	ldr	r4, [r3]
   157e8:	ldr	r0, [pc, #28]	; 1580c <putchar_unlocked@plt+0x495c>
   157ec:	bl	10dcc <gettext@plt>
   157f0:	mov	r3, r0
   157f4:	ldr	r2, [pc, #20]	; 15810 <putchar_unlocked@plt+0x4960>
   157f8:	mov	r1, #0
   157fc:	mov	r0, r4
   15800:	bl	10d60 <error@plt>
   15804:	bl	10e98 <abort@plt>
   15808:	andeq	r8, r2, ip, ror #1
   1580c:	andeq	r7, r1, ip, asr #10
   15810:	andeq	r7, r1, r0, ror #10
   15814:	push	{r4, r5, fp, lr}
   15818:	add	fp, sp, #12
   1581c:	sub	sp, sp, #16
   15820:	str	r0, [fp, #-24]	; 0xffffffe8
   15824:	str	r1, [fp, #-28]	; 0xffffffe4
   15828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1582c:	cmp	r3, #0
   15830:	beq	15840 <putchar_unlocked@plt+0x4990>
   15834:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15838:	cmp	r3, #0
   1583c:	bne	15850 <putchar_unlocked@plt+0x49a0>
   15840:	mov	r3, #1
   15844:	str	r3, [fp, #-28]	; 0xffffffe4
   15848:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1584c:	str	r3, [fp, #-24]	; 0xffffffe8
   15850:	mov	r1, #0
   15854:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1585c:	umull	r2, r3, r2, r3
   15860:	mov	r4, r3
   15864:	mov	r5, #0
   15868:	cmp	r4, #0
   1586c:	beq	15874 <putchar_unlocked@plt+0x49c4>
   15870:	mov	r1, #1
   15874:	cmp	r2, #0
   15878:	bge	15880 <putchar_unlocked@plt+0x49d0>
   1587c:	mov	r1, #1
   15880:	mov	r3, r2
   15884:	str	r3, [fp, #-20]	; 0xffffffec
   15888:	mov	r3, r1
   1588c:	and	r3, r3, #1
   15890:	uxtb	r3, r3
   15894:	cmp	r3, #0
   15898:	beq	158b4 <putchar_unlocked@plt+0x4a04>
   1589c:	bl	10df0 <__errno_location@plt>
   158a0:	mov	r2, r0
   158a4:	mov	r3, #12
   158a8:	str	r3, [r2]
   158ac:	mov	r3, #0
   158b0:	b	158cc <putchar_unlocked@plt+0x4a1c>
   158b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158bc:	bl	10c4c <calloc@plt>
   158c0:	mov	r3, r0
   158c4:	str	r3, [fp, #-16]
   158c8:	ldr	r3, [fp, #-16]
   158cc:	mov	r0, r3
   158d0:	sub	sp, fp, #12
   158d4:	pop	{r4, r5, fp, pc}
   158d8:	push	{r4, r5, fp, lr}
   158dc:	add	fp, sp, #12
   158e0:	sub	sp, sp, #16
   158e4:	str	r0, [fp, #-24]	; 0xffffffe8
   158e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158ec:	cmp	r3, #0
   158f0:	bne	158fc <putchar_unlocked@plt+0x4a4c>
   158f4:	mov	r3, #1
   158f8:	str	r3, [fp, #-24]	; 0xffffffe8
   158fc:	mov	r1, #0
   15900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15904:	mov	r2, r3
   15908:	mov	r3, #0
   1590c:	mov	r4, r3
   15910:	mov	r5, #0
   15914:	cmp	r4, #0
   15918:	beq	15920 <putchar_unlocked@plt+0x4a70>
   1591c:	mov	r1, #1
   15920:	cmp	r2, #0
   15924:	bge	1592c <putchar_unlocked@plt+0x4a7c>
   15928:	mov	r1, #1
   1592c:	mov	r3, r2
   15930:	str	r3, [fp, #-20]	; 0xffffffec
   15934:	mov	r3, r1
   15938:	and	r3, r3, #1
   1593c:	uxtb	r3, r3
   15940:	cmp	r3, #0
   15944:	beq	15960 <putchar_unlocked@plt+0x4ab0>
   15948:	bl	10df0 <__errno_location@plt>
   1594c:	mov	r2, r0
   15950:	mov	r3, #12
   15954:	str	r3, [r2]
   15958:	mov	r3, #0
   1595c:	b	15974 <putchar_unlocked@plt+0x4ac4>
   15960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15964:	bl	10d6c <malloc@plt>
   15968:	mov	r3, r0
   1596c:	str	r3, [fp, #-16]
   15970:	ldr	r3, [fp, #-16]
   15974:	mov	r0, r3
   15978:	sub	sp, fp, #12
   1597c:	pop	{r4, r5, fp, pc}
   15980:	push	{r4, r5, fp, lr}
   15984:	add	fp, sp, #12
   15988:	sub	sp, sp, #16
   1598c:	str	r0, [fp, #-24]	; 0xffffffe8
   15990:	str	r1, [fp, #-28]	; 0xffffffe4
   15994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15998:	cmp	r3, #0
   1599c:	bne	159b0 <putchar_unlocked@plt+0x4b00>
   159a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   159a4:	bl	158d8 <putchar_unlocked@plt+0x4a28>
   159a8:	mov	r3, r0
   159ac:	b	15a44 <putchar_unlocked@plt+0x4b94>
   159b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159b4:	cmp	r3, #0
   159b8:	bne	159cc <putchar_unlocked@plt+0x4b1c>
   159bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c0:	bl	1181c <putchar_unlocked@plt+0x96c>
   159c4:	mov	r3, #0
   159c8:	b	15a44 <putchar_unlocked@plt+0x4b94>
   159cc:	mov	r1, #0
   159d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159d4:	mov	r2, r3
   159d8:	mov	r3, #0
   159dc:	mov	r4, r3
   159e0:	mov	r5, #0
   159e4:	cmp	r4, #0
   159e8:	beq	159f0 <putchar_unlocked@plt+0x4b40>
   159ec:	mov	r1, #1
   159f0:	cmp	r2, #0
   159f4:	bge	159fc <putchar_unlocked@plt+0x4b4c>
   159f8:	mov	r1, #1
   159fc:	mov	r3, r2
   15a00:	str	r3, [fp, #-20]	; 0xffffffec
   15a04:	mov	r3, r1
   15a08:	and	r3, r3, #1
   15a0c:	uxtb	r3, r3
   15a10:	cmp	r3, #0
   15a14:	beq	15a30 <putchar_unlocked@plt+0x4b80>
   15a18:	bl	10df0 <__errno_location@plt>
   15a1c:	mov	r2, r0
   15a20:	mov	r3, #12
   15a24:	str	r3, [r2]
   15a28:	mov	r3, #0
   15a2c:	b	15a44 <putchar_unlocked@plt+0x4b94>
   15a30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a38:	bl	10cf4 <realloc@plt>
   15a3c:	str	r0, [fp, #-16]
   15a40:	ldr	r3, [fp, #-16]
   15a44:	mov	r0, r3
   15a48:	sub	sp, fp, #12
   15a4c:	pop	{r4, r5, fp, pc}
   15a50:	push	{r4, r5, fp, lr}
   15a54:	add	fp, sp, #12
   15a58:	sub	sp, sp, #16
   15a5c:	str	r0, [fp, #-24]	; 0xffffffe8
   15a60:	str	r1, [fp, #-28]	; 0xffffffe4
   15a64:	ldr	r5, [fp, #-24]	; 0xffffffe8
   15a68:	ldr	r4, [fp, #-28]	; 0xffffffe4
   15a6c:	cmp	r5, r4
   15a70:	bne	15a7c <putchar_unlocked@plt+0x4bcc>
   15a74:	mov	r3, #0
   15a78:	b	15adc <putchar_unlocked@plt+0x4c2c>
   15a7c:	ldrb	r3, [r5]
   15a80:	mov	r0, r3
   15a84:	bl	165ac <putchar_unlocked@plt+0x56fc>
   15a88:	mov	r3, r0
   15a8c:	strb	r3, [fp, #-13]
   15a90:	ldrb	r3, [r4]
   15a94:	mov	r0, r3
   15a98:	bl	165ac <putchar_unlocked@plt+0x56fc>
   15a9c:	mov	r3, r0
   15aa0:	strb	r3, [fp, #-14]
   15aa4:	ldrb	r3, [fp, #-13]
   15aa8:	cmp	r3, #0
   15aac:	beq	15acc <putchar_unlocked@plt+0x4c1c>
   15ab0:	add	r5, r5, #1
   15ab4:	add	r4, r4, #1
   15ab8:	ldrb	r2, [fp, #-13]
   15abc:	ldrb	r3, [fp, #-14]
   15ac0:	cmp	r2, r3
   15ac4:	beq	15a7c <putchar_unlocked@plt+0x4bcc>
   15ac8:	b	15ad0 <putchar_unlocked@plt+0x4c20>
   15acc:	nop			; (mov r0, r0)
   15ad0:	ldrb	r2, [fp, #-13]
   15ad4:	ldrb	r3, [fp, #-14]
   15ad8:	sub	r3, r2, r3
   15adc:	mov	r0, r3
   15ae0:	sub	sp, fp, #12
   15ae4:	pop	{r4, r5, fp, pc}
   15ae8:	push	{fp, lr}
   15aec:	add	fp, sp, #4
   15af0:	sub	sp, sp, #16
   15af4:	str	r0, [fp, #-16]
   15af8:	ldr	r0, [fp, #-16]
   15afc:	bl	10d3c <__fpending@plt>
   15b00:	mov	r3, r0
   15b04:	cmp	r3, #0
   15b08:	movne	r3, #1
   15b0c:	moveq	r3, #0
   15b10:	strb	r3, [fp, #-5]
   15b14:	ldr	r0, [fp, #-16]
   15b18:	bl	10d48 <ferror_unlocked@plt>
   15b1c:	mov	r3, r0
   15b20:	cmp	r3, #0
   15b24:	movne	r3, #1
   15b28:	moveq	r3, #0
   15b2c:	strb	r3, [fp, #-6]
   15b30:	ldr	r0, [fp, #-16]
   15b34:	bl	15bc0 <putchar_unlocked@plt+0x4d10>
   15b38:	mov	r3, r0
   15b3c:	cmp	r3, #0
   15b40:	movne	r3, #1
   15b44:	moveq	r3, #0
   15b48:	strb	r3, [fp, #-7]
   15b4c:	ldrb	r3, [fp, #-6]
   15b50:	cmp	r3, #0
   15b54:	bne	15b84 <putchar_unlocked@plt+0x4cd4>
   15b58:	ldrb	r3, [fp, #-7]
   15b5c:	cmp	r3, #0
   15b60:	beq	15bb0 <putchar_unlocked@plt+0x4d00>
   15b64:	ldrb	r3, [fp, #-5]
   15b68:	cmp	r3, #0
   15b6c:	bne	15b84 <putchar_unlocked@plt+0x4cd4>
   15b70:	bl	10df0 <__errno_location@plt>
   15b74:	mov	r3, r0
   15b78:	ldr	r3, [r3]
   15b7c:	cmp	r3, #9
   15b80:	beq	15bb0 <putchar_unlocked@plt+0x4d00>
   15b84:	ldrb	r3, [fp, #-7]
   15b88:	eor	r3, r3, #1
   15b8c:	uxtb	r3, r3
   15b90:	cmp	r3, #0
   15b94:	beq	15ba8 <putchar_unlocked@plt+0x4cf8>
   15b98:	bl	10df0 <__errno_location@plt>
   15b9c:	mov	r2, r0
   15ba0:	mov	r3, #0
   15ba4:	str	r3, [r2]
   15ba8:	mvn	r3, #0
   15bac:	b	15bb4 <putchar_unlocked@plt+0x4d04>
   15bb0:	mov	r3, #0
   15bb4:	mov	r0, r3
   15bb8:	sub	sp, fp, #4
   15bbc:	pop	{fp, pc}
   15bc0:	push	{fp, lr}
   15bc4:	add	fp, sp, #4
   15bc8:	sub	sp, sp, #32
   15bcc:	str	r0, [fp, #-24]	; 0xffffffe8
   15bd0:	mov	r3, #0
   15bd4:	str	r3, [fp, #-8]
   15bd8:	mov	r3, #0
   15bdc:	str	r3, [fp, #-12]
   15be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15be4:	bl	10e20 <fileno@plt>
   15be8:	str	r0, [fp, #-16]
   15bec:	ldr	r3, [fp, #-16]
   15bf0:	cmp	r3, #0
   15bf4:	bge	15c08 <putchar_unlocked@plt+0x4d58>
   15bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bfc:	bl	10e2c <fclose@plt>
   15c00:	mov	r3, r0
   15c04:	b	15cac <putchar_unlocked@plt+0x4dfc>
   15c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c0c:	bl	10d84 <__freading@plt>
   15c10:	mov	r3, r0
   15c14:	cmp	r3, #0
   15c18:	beq	15c54 <putchar_unlocked@plt+0x4da4>
   15c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c20:	bl	10e20 <fileno@plt>
   15c24:	mov	r1, r0
   15c28:	mov	r3, #1
   15c2c:	str	r3, [sp]
   15c30:	mov	r2, #0
   15c34:	mov	r3, #0
   15c38:	mov	r0, r1
   15c3c:	bl	10d24 <lseek64@plt>
   15c40:	mvn	r2, #0
   15c44:	mvn	r3, #0
   15c48:	cmp	r1, r3
   15c4c:	cmpeq	r0, r2
   15c50:	beq	15c78 <putchar_unlocked@plt+0x4dc8>
   15c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c58:	bl	15d00 <putchar_unlocked@plt+0x4e50>
   15c5c:	mov	r3, r0
   15c60:	cmp	r3, #0
   15c64:	beq	15c78 <putchar_unlocked@plt+0x4dc8>
   15c68:	bl	10df0 <__errno_location@plt>
   15c6c:	mov	r3, r0
   15c70:	ldr	r3, [r3]
   15c74:	str	r3, [fp, #-8]
   15c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c7c:	bl	10e2c <fclose@plt>
   15c80:	str	r0, [fp, #-12]
   15c84:	ldr	r3, [fp, #-8]
   15c88:	cmp	r3, #0
   15c8c:	beq	15ca8 <putchar_unlocked@plt+0x4df8>
   15c90:	bl	10df0 <__errno_location@plt>
   15c94:	mov	r2, r0
   15c98:	ldr	r3, [fp, #-8]
   15c9c:	str	r3, [r2]
   15ca0:	mvn	r3, #0
   15ca4:	str	r3, [fp, #-12]
   15ca8:	ldr	r3, [fp, #-12]
   15cac:	mov	r0, r3
   15cb0:	sub	sp, fp, #4
   15cb4:	pop	{fp, pc}
   15cb8:	push	{fp, lr}
   15cbc:	add	fp, sp, #4
   15cc0:	sub	sp, sp, #16
   15cc4:	str	r0, [fp, #-8]
   15cc8:	ldr	r3, [fp, #-8]
   15ccc:	ldr	r3, [r3]
   15cd0:	and	r3, r3, #256	; 0x100
   15cd4:	cmp	r3, #0
   15cd8:	beq	15cf4 <putchar_unlocked@plt+0x4e44>
   15cdc:	mov	r3, #1
   15ce0:	str	r3, [sp]
   15ce4:	mov	r2, #0
   15ce8:	mov	r3, #0
   15cec:	ldr	r0, [fp, #-8]
   15cf0:	bl	15d60 <putchar_unlocked@plt+0x4eb0>
   15cf4:	nop			; (mov r0, r0)
   15cf8:	sub	sp, fp, #4
   15cfc:	pop	{fp, pc}
   15d00:	push	{fp, lr}
   15d04:	add	fp, sp, #4
   15d08:	sub	sp, sp, #8
   15d0c:	str	r0, [fp, #-8]
   15d10:	ldr	r3, [fp, #-8]
   15d14:	cmp	r3, #0
   15d18:	beq	15d30 <putchar_unlocked@plt+0x4e80>
   15d1c:	ldr	r0, [fp, #-8]
   15d20:	bl	10d84 <__freading@plt>
   15d24:	mov	r3, r0
   15d28:	cmp	r3, #0
   15d2c:	bne	15d40 <putchar_unlocked@plt+0x4e90>
   15d30:	ldr	r0, [fp, #-8]
   15d34:	bl	10c88 <fflush@plt>
   15d38:	mov	r3, r0
   15d3c:	b	15d54 <putchar_unlocked@plt+0x4ea4>
   15d40:	ldr	r0, [fp, #-8]
   15d44:	bl	15cb8 <putchar_unlocked@plt+0x4e08>
   15d48:	ldr	r0, [fp, #-8]
   15d4c:	bl	10c88 <fflush@plt>
   15d50:	mov	r3, r0
   15d54:	mov	r0, r3
   15d58:	sub	sp, fp, #4
   15d5c:	pop	{fp, pc}
   15d60:	push	{fp, lr}
   15d64:	add	fp, sp, #4
   15d68:	sub	sp, sp, #32
   15d6c:	str	r0, [fp, #-16]
   15d70:	strd	r2, [fp, #-28]	; 0xffffffe4
   15d74:	ldr	r3, [fp, #-16]
   15d78:	ldr	r2, [r3, #8]
   15d7c:	ldr	r3, [fp, #-16]
   15d80:	ldr	r3, [r3, #4]
   15d84:	cmp	r2, r3
   15d88:	bne	15e20 <putchar_unlocked@plt+0x4f70>
   15d8c:	ldr	r3, [fp, #-16]
   15d90:	ldr	r2, [r3, #20]
   15d94:	ldr	r3, [fp, #-16]
   15d98:	ldr	r3, [r3, #16]
   15d9c:	cmp	r2, r3
   15da0:	bne	15e20 <putchar_unlocked@plt+0x4f70>
   15da4:	ldr	r3, [fp, #-16]
   15da8:	ldr	r3, [r3, #36]	; 0x24
   15dac:	cmp	r3, #0
   15db0:	bne	15e20 <putchar_unlocked@plt+0x4f70>
   15db4:	ldr	r0, [fp, #-16]
   15db8:	bl	10e20 <fileno@plt>
   15dbc:	mov	r1, r0
   15dc0:	ldr	r3, [fp, #4]
   15dc4:	str	r3, [sp]
   15dc8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15dcc:	mov	r0, r1
   15dd0:	bl	10d24 <lseek64@plt>
   15dd4:	strd	r0, [fp, #-12]
   15dd8:	ldrd	r2, [fp, #-12]
   15ddc:	mvn	r0, #0
   15de0:	mvn	r1, #0
   15de4:	cmp	r3, r1
   15de8:	cmpeq	r2, r0
   15dec:	bne	15df8 <putchar_unlocked@plt+0x4f48>
   15df0:	mvn	r3, #0
   15df4:	b	15e38 <putchar_unlocked@plt+0x4f88>
   15df8:	ldr	r3, [fp, #-16]
   15dfc:	ldr	r3, [r3]
   15e00:	bic	r2, r3, #16
   15e04:	ldr	r3, [fp, #-16]
   15e08:	str	r2, [r3]
   15e0c:	ldr	r1, [fp, #-16]
   15e10:	ldrd	r2, [fp, #-12]
   15e14:	strd	r2, [r1, #80]	; 0x50
   15e18:	mov	r3, #0
   15e1c:	b	15e38 <putchar_unlocked@plt+0x4f88>
   15e20:	ldr	r3, [fp, #4]
   15e24:	str	r3, [sp]
   15e28:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15e2c:	ldr	r0, [fp, #-16]
   15e30:	bl	10e38 <fseeko64@plt>
   15e34:	mov	r3, r0
   15e38:	mov	r0, r3
   15e3c:	sub	sp, fp, #4
   15e40:	pop	{fp, pc}
   15e44:	push	{fp, lr}
   15e48:	add	fp, sp, #4
   15e4c:	bl	10df0 <__errno_location@plt>
   15e50:	mov	r2, r0
   15e54:	mov	r3, #12
   15e58:	str	r3, [r2]
   15e5c:	mov	r3, #0
   15e60:	mov	r0, r3
   15e64:	pop	{fp, pc}
   15e68:	push	{fp, lr}
   15e6c:	add	fp, sp, #4
   15e70:	sub	sp, sp, #8
   15e74:	str	r0, [fp, #-8]
   15e78:	ldr	r3, [fp, #-8]
   15e7c:	mov	r0, r3
   15e80:	bl	158d8 <putchar_unlocked@plt+0x4a28>
   15e84:	mov	r3, r0
   15e88:	mov	r0, r3
   15e8c:	sub	sp, fp, #4
   15e90:	pop	{fp, pc}
   15e94:	push	{fp, lr}
   15e98:	add	fp, sp, #4
   15e9c:	sub	sp, sp, #8
   15ea0:	str	r0, [fp, #-8]
   15ea4:	str	r1, [fp, #-12]
   15ea8:	ldr	r3, [fp, #-12]
   15eac:	cmp	r3, #0
   15eb0:	moveq	r3, #1
   15eb4:	movne	r3, #0
   15eb8:	uxtb	r3, r3
   15ebc:	mov	r2, r3
   15ec0:	ldr	r3, [fp, #-12]
   15ec4:	orr	r3, r2, r3
   15ec8:	mov	r1, r3
   15ecc:	ldr	r0, [fp, #-8]
   15ed0:	bl	15980 <putchar_unlocked@plt+0x4ad0>
   15ed4:	mov	r3, r0
   15ed8:	mov	r0, r3
   15edc:	sub	sp, fp, #4
   15ee0:	pop	{fp, pc}
   15ee4:	push	{fp, lr}
   15ee8:	add	fp, sp, #4
   15eec:	sub	sp, sp, #8
   15ef0:	str	r0, [fp, #-8]
   15ef4:	str	r1, [fp, #-12]
   15ef8:	ldr	r3, [fp, #-8]
   15efc:	ldr	r2, [fp, #-12]
   15f00:	mov	r1, r2
   15f04:	mov	r0, r3
   15f08:	bl	15814 <putchar_unlocked@plt+0x4964>
   15f0c:	mov	r3, r0
   15f10:	mov	r0, r3
   15f14:	sub	sp, fp, #4
   15f18:	pop	{fp, pc}
   15f1c:	push	{fp, lr}
   15f20:	add	fp, sp, #4
   15f24:	sub	sp, sp, #16
   15f28:	str	r0, [fp, #-8]
   15f2c:	str	r1, [fp, #-12]
   15f30:	str	r2, [fp, #-16]
   15f34:	ldr	r3, [fp, #-12]
   15f38:	cmp	r3, #0
   15f3c:	beq	15f4c <putchar_unlocked@plt+0x509c>
   15f40:	ldr	r3, [fp, #-16]
   15f44:	cmp	r3, #0
   15f48:	bne	15f5c <putchar_unlocked@plt+0x50ac>
   15f4c:	mov	r3, #1
   15f50:	str	r3, [fp, #-16]
   15f54:	ldr	r3, [fp, #-16]
   15f58:	str	r3, [fp, #-12]
   15f5c:	ldr	r3, [fp, #-12]
   15f60:	ldr	r2, [fp, #-16]
   15f64:	mov	r1, r3
   15f68:	ldr	r0, [fp, #-8]
   15f6c:	bl	16088 <putchar_unlocked@plt+0x51d8>
   15f70:	mov	r3, r0
   15f74:	mov	r0, r3
   15f78:	sub	sp, fp, #4
   15f7c:	pop	{fp, pc}
   15f80:	push	{fp, lr}
   15f84:	add	fp, sp, #4
   15f88:	sub	sp, sp, #8
   15f8c:	mov	r0, #14
   15f90:	bl	10e68 <nl_langinfo@plt>
   15f94:	str	r0, [fp, #-8]
   15f98:	ldr	r3, [fp, #-8]
   15f9c:	cmp	r3, #0
   15fa0:	bne	15fac <putchar_unlocked@plt+0x50fc>
   15fa4:	ldr	r3, [pc, #40]	; 15fd4 <putchar_unlocked@plt+0x5124>
   15fa8:	str	r3, [fp, #-8]
   15fac:	ldr	r3, [fp, #-8]
   15fb0:	ldrb	r3, [r3]
   15fb4:	cmp	r3, #0
   15fb8:	bne	15fc4 <putchar_unlocked@plt+0x5114>
   15fbc:	ldr	r3, [pc, #20]	; 15fd8 <putchar_unlocked@plt+0x5128>
   15fc0:	str	r3, [fp, #-8]
   15fc4:	ldr	r3, [fp, #-8]
   15fc8:	mov	r0, r3
   15fcc:	sub	sp, fp, #4
   15fd0:	pop	{fp, pc}
   15fd4:	andeq	r7, r1, r4, ror #10
   15fd8:	andeq	r7, r1, r8, ror #10
   15fdc:	push	{fp, lr}
   15fe0:	add	fp, sp, #4
   15fe4:	sub	sp, sp, #32
   15fe8:	str	r0, [fp, #-24]	; 0xffffffe8
   15fec:	str	r1, [fp, #-28]	; 0xffffffe4
   15ff0:	str	r2, [fp, #-32]	; 0xffffffe0
   15ff4:	str	r3, [fp, #-36]	; 0xffffffdc
   15ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ffc:	cmp	r3, #0
   16000:	bne	1600c <putchar_unlocked@plt+0x515c>
   16004:	sub	r3, fp, #16
   16008:	str	r3, [fp, #-24]	; 0xffffffe8
   1600c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16010:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16014:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1601c:	bl	10d54 <mbrtowc@plt>
   16020:	str	r0, [fp, #-8]
   16024:	ldr	r3, [fp, #-8]
   16028:	cmn	r3, #3
   1602c:	bls	16078 <putchar_unlocked@plt+0x51c8>
   16030:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16034:	cmp	r3, #0
   16038:	beq	16078 <putchar_unlocked@plt+0x51c8>
   1603c:	mov	r0, #0
   16040:	bl	1662c <putchar_unlocked@plt+0x577c>
   16044:	mov	r3, r0
   16048:	eor	r3, r3, #1
   1604c:	uxtb	r3, r3
   16050:	cmp	r3, #0
   16054:	beq	16078 <putchar_unlocked@plt+0x51c8>
   16058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1605c:	ldrb	r3, [r3]
   16060:	strb	r3, [fp, #-9]
   16064:	ldrb	r2, [fp, #-9]
   16068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1606c:	str	r2, [r3]
   16070:	mov	r3, #1
   16074:	b	1607c <putchar_unlocked@plt+0x51cc>
   16078:	ldr	r3, [fp, #-8]
   1607c:	mov	r0, r3
   16080:	sub	sp, fp, #4
   16084:	pop	{fp, pc}
   16088:	push	{fp, lr}
   1608c:	add	fp, sp, #4
   16090:	sub	sp, sp, #24
   16094:	str	r0, [fp, #-16]
   16098:	str	r1, [fp, #-20]	; 0xffffffec
   1609c:	str	r2, [fp, #-24]	; 0xffffffe8
   160a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   160a4:	cmp	r3, #0
   160a8:	beq	160e4 <putchar_unlocked@plt+0x5234>
   160ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160b0:	mvn	r0, #0
   160b4:	bl	16830 <putchar_unlocked@plt+0x5980>
   160b8:	mov	r3, r0
   160bc:	mov	r2, r3
   160c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   160c4:	cmp	r2, r3
   160c8:	bcs	160e4 <putchar_unlocked@plt+0x5234>
   160cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   160d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160d4:	mul	r3, r2, r3
   160d8:	str	r3, [fp, #-8]
   160dc:	mov	r3, #1
   160e0:	b	160f8 <putchar_unlocked@plt+0x5248>
   160e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   160e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160ec:	mul	r3, r2, r3
   160f0:	str	r3, [fp, #-8]
   160f4:	mov	r3, #0
   160f8:	cmp	r3, #0
   160fc:	beq	16118 <putchar_unlocked@plt+0x5268>
   16100:	bl	10df0 <__errno_location@plt>
   16104:	mov	r2, r0
   16108:	mov	r3, #12
   1610c:	str	r3, [r2]
   16110:	mov	r3, #0
   16114:	b	1612c <putchar_unlocked@plt+0x527c>
   16118:	ldr	r3, [fp, #-8]
   1611c:	mov	r1, r3
   16120:	ldr	r0, [fp, #-16]
   16124:	bl	15980 <putchar_unlocked@plt+0x4ad0>
   16128:	mov	r3, r0
   1612c:	mov	r0, r3
   16130:	sub	sp, fp, #4
   16134:	pop	{fp, pc}
   16138:	push	{fp}		; (str fp, [sp, #-4]!)
   1613c:	add	fp, sp, #0
   16140:	sub	sp, sp, #12
   16144:	str	r0, [fp, #-8]
   16148:	ldr	r3, [fp, #-8]
   1614c:	cmp	r3, #90	; 0x5a
   16150:	bgt	1616c <putchar_unlocked@plt+0x52bc>
   16154:	cmp	r3, #65	; 0x41
   16158:	bge	16178 <putchar_unlocked@plt+0x52c8>
   1615c:	sub	r3, r3, #48	; 0x30
   16160:	cmp	r3, #9
   16164:	bhi	16180 <putchar_unlocked@plt+0x52d0>
   16168:	b	16178 <putchar_unlocked@plt+0x52c8>
   1616c:	sub	r3, r3, #97	; 0x61
   16170:	cmp	r3, #25
   16174:	bhi	16180 <putchar_unlocked@plt+0x52d0>
   16178:	mov	r3, #1
   1617c:	b	16184 <putchar_unlocked@plt+0x52d4>
   16180:	mov	r3, #0
   16184:	mov	r0, r3
   16188:	add	sp, fp, #0
   1618c:	pop	{fp}		; (ldr fp, [sp], #4)
   16190:	bx	lr
   16194:	push	{fp}		; (str fp, [sp, #-4]!)
   16198:	add	fp, sp, #0
   1619c:	sub	sp, sp, #12
   161a0:	str	r0, [fp, #-8]
   161a4:	ldr	r3, [fp, #-8]
   161a8:	cmp	r3, #65	; 0x41
   161ac:	blt	161cc <putchar_unlocked@plt+0x531c>
   161b0:	cmp	r3, #90	; 0x5a
   161b4:	ble	161c4 <putchar_unlocked@plt+0x5314>
   161b8:	sub	r3, r3, #97	; 0x61
   161bc:	cmp	r3, #25
   161c0:	bhi	161cc <putchar_unlocked@plt+0x531c>
   161c4:	mov	r3, #1
   161c8:	b	161d0 <putchar_unlocked@plt+0x5320>
   161cc:	mov	r3, #0
   161d0:	mov	r0, r3
   161d4:	add	sp, fp, #0
   161d8:	pop	{fp}		; (ldr fp, [sp], #4)
   161dc:	bx	lr
   161e0:	push	{fp}		; (str fp, [sp, #-4]!)
   161e4:	add	fp, sp, #0
   161e8:	sub	sp, sp, #12
   161ec:	str	r0, [fp, #-8]
   161f0:	ldr	r3, [fp, #-8]
   161f4:	add	r3, r3, #0
   161f8:	cmp	r3, #127	; 0x7f
   161fc:	bhi	16208 <putchar_unlocked@plt+0x5358>
   16200:	mov	r3, #1
   16204:	b	1620c <putchar_unlocked@plt+0x535c>
   16208:	mov	r3, #0
   1620c:	mov	r0, r3
   16210:	add	sp, fp, #0
   16214:	pop	{fp}		; (ldr fp, [sp], #4)
   16218:	bx	lr
   1621c:	push	{fp}		; (str fp, [sp, #-4]!)
   16220:	add	fp, sp, #0
   16224:	sub	sp, sp, #12
   16228:	str	r0, [fp, #-8]
   1622c:	ldr	r3, [fp, #-8]
   16230:	cmp	r3, #32
   16234:	beq	16244 <putchar_unlocked@plt+0x5394>
   16238:	ldr	r3, [fp, #-8]
   1623c:	cmp	r3, #9
   16240:	bne	1624c <putchar_unlocked@plt+0x539c>
   16244:	mov	r3, #1
   16248:	b	16250 <putchar_unlocked@plt+0x53a0>
   1624c:	mov	r3, #0
   16250:	and	r3, r3, #1
   16254:	uxtb	r3, r3
   16258:	mov	r0, r3
   1625c:	add	sp, fp, #0
   16260:	pop	{fp}		; (ldr fp, [sp], #4)
   16264:	bx	lr
   16268:	push	{fp}		; (str fp, [sp, #-4]!)
   1626c:	add	fp, sp, #0
   16270:	sub	sp, sp, #12
   16274:	str	r0, [fp, #-8]
   16278:	ldr	r3, [fp, #-8]
   1627c:	cmp	r3, #0
   16280:	blt	1629c <putchar_unlocked@plt+0x53ec>
   16284:	cmp	r3, #31
   16288:	ble	16294 <putchar_unlocked@plt+0x53e4>
   1628c:	cmp	r3, #127	; 0x7f
   16290:	bne	1629c <putchar_unlocked@plt+0x53ec>
   16294:	mov	r3, #1
   16298:	b	162a0 <putchar_unlocked@plt+0x53f0>
   1629c:	mov	r3, #0
   162a0:	mov	r0, r3
   162a4:	add	sp, fp, #0
   162a8:	pop	{fp}		; (ldr fp, [sp], #4)
   162ac:	bx	lr
   162b0:	push	{fp}		; (str fp, [sp, #-4]!)
   162b4:	add	fp, sp, #0
   162b8:	sub	sp, sp, #12
   162bc:	str	r0, [fp, #-8]
   162c0:	ldr	r3, [fp, #-8]
   162c4:	sub	r3, r3, #48	; 0x30
   162c8:	cmp	r3, #9
   162cc:	bhi	162d8 <putchar_unlocked@plt+0x5428>
   162d0:	mov	r3, #1
   162d4:	b	162dc <putchar_unlocked@plt+0x542c>
   162d8:	mov	r3, #0
   162dc:	mov	r0, r3
   162e0:	add	sp, fp, #0
   162e4:	pop	{fp}		; (ldr fp, [sp], #4)
   162e8:	bx	lr
   162ec:	push	{fp}		; (str fp, [sp, #-4]!)
   162f0:	add	fp, sp, #0
   162f4:	sub	sp, sp, #12
   162f8:	str	r0, [fp, #-8]
   162fc:	ldr	r3, [fp, #-8]
   16300:	sub	r3, r3, #33	; 0x21
   16304:	cmp	r3, #93	; 0x5d
   16308:	bhi	16314 <putchar_unlocked@plt+0x5464>
   1630c:	mov	r3, #1
   16310:	b	16318 <putchar_unlocked@plt+0x5468>
   16314:	mov	r3, #0
   16318:	mov	r0, r3
   1631c:	add	sp, fp, #0
   16320:	pop	{fp}		; (ldr fp, [sp], #4)
   16324:	bx	lr
   16328:	push	{fp}		; (str fp, [sp, #-4]!)
   1632c:	add	fp, sp, #0
   16330:	sub	sp, sp, #12
   16334:	str	r0, [fp, #-8]
   16338:	ldr	r3, [fp, #-8]
   1633c:	sub	r3, r3, #97	; 0x61
   16340:	cmp	r3, #25
   16344:	bhi	16350 <putchar_unlocked@plt+0x54a0>
   16348:	mov	r3, #1
   1634c:	b	16354 <putchar_unlocked@plt+0x54a4>
   16350:	mov	r3, #0
   16354:	mov	r0, r3
   16358:	add	sp, fp, #0
   1635c:	pop	{fp}		; (ldr fp, [sp], #4)
   16360:	bx	lr
   16364:	push	{fp}		; (str fp, [sp, #-4]!)
   16368:	add	fp, sp, #0
   1636c:	sub	sp, sp, #12
   16370:	str	r0, [fp, #-8]
   16374:	ldr	r3, [fp, #-8]
   16378:	sub	r3, r3, #32
   1637c:	cmp	r3, #94	; 0x5e
   16380:	bhi	1638c <putchar_unlocked@plt+0x54dc>
   16384:	mov	r3, #1
   16388:	b	16390 <putchar_unlocked@plt+0x54e0>
   1638c:	mov	r3, #0
   16390:	mov	r0, r3
   16394:	add	sp, fp, #0
   16398:	pop	{fp}		; (ldr fp, [sp], #4)
   1639c:	bx	lr
   163a0:	push	{fp}		; (str fp, [sp, #-4]!)
   163a4:	add	fp, sp, #0
   163a8:	sub	sp, sp, #12
   163ac:	str	r0, [fp, #-8]
   163b0:	ldr	r3, [fp, #-8]
   163b4:	cmp	r3, #64	; 0x40
   163b8:	bgt	163d4 <putchar_unlocked@plt+0x5524>
   163bc:	cmp	r3, #58	; 0x3a
   163c0:	bge	163f0 <putchar_unlocked@plt+0x5540>
   163c4:	sub	r3, r3, #33	; 0x21
   163c8:	cmp	r3, #14
   163cc:	bhi	163f8 <putchar_unlocked@plt+0x5548>
   163d0:	b	163f0 <putchar_unlocked@plt+0x5540>
   163d4:	cmp	r3, #91	; 0x5b
   163d8:	blt	163f8 <putchar_unlocked@plt+0x5548>
   163dc:	cmp	r3, #96	; 0x60
   163e0:	ble	163f0 <putchar_unlocked@plt+0x5540>
   163e4:	sub	r3, r3, #123	; 0x7b
   163e8:	cmp	r3, #3
   163ec:	bhi	163f8 <putchar_unlocked@plt+0x5548>
   163f0:	mov	r3, #1
   163f4:	b	163fc <putchar_unlocked@plt+0x554c>
   163f8:	mov	r3, #0
   163fc:	mov	r0, r3
   16400:	add	sp, fp, #0
   16404:	pop	{fp}		; (ldr fp, [sp], #4)
   16408:	bx	lr
   1640c:	push	{fp}		; (str fp, [sp, #-4]!)
   16410:	add	fp, sp, #0
   16414:	sub	sp, sp, #12
   16418:	str	r0, [fp, #-8]
   1641c:	ldr	r3, [fp, #-8]
   16420:	cmp	r3, #9
   16424:	blt	16440 <putchar_unlocked@plt+0x5590>
   16428:	cmp	r3, #13
   1642c:	ble	16438 <putchar_unlocked@plt+0x5588>
   16430:	cmp	r3, #32
   16434:	bne	16440 <putchar_unlocked@plt+0x5590>
   16438:	mov	r3, #1
   1643c:	b	16444 <putchar_unlocked@plt+0x5594>
   16440:	mov	r3, #0
   16444:	mov	r0, r3
   16448:	add	sp, fp, #0
   1644c:	pop	{fp}		; (ldr fp, [sp], #4)
   16450:	bx	lr
   16454:	push	{fp}		; (str fp, [sp, #-4]!)
   16458:	add	fp, sp, #0
   1645c:	sub	sp, sp, #12
   16460:	str	r0, [fp, #-8]
   16464:	ldr	r3, [fp, #-8]
   16468:	sub	r3, r3, #65	; 0x41
   1646c:	cmp	r3, #25
   16470:	bhi	1647c <putchar_unlocked@plt+0x55cc>
   16474:	mov	r3, #1
   16478:	b	16480 <putchar_unlocked@plt+0x55d0>
   1647c:	mov	r3, #0
   16480:	mov	r0, r3
   16484:	add	sp, fp, #0
   16488:	pop	{fp}		; (ldr fp, [sp], #4)
   1648c:	bx	lr
   16490:	push	{fp}		; (str fp, [sp, #-4]!)
   16494:	add	fp, sp, #0
   16498:	sub	sp, sp, #12
   1649c:	str	r0, [fp, #-8]
   164a0:	ldr	r3, [fp, #-8]
   164a4:	sub	r3, r3, #48	; 0x30
   164a8:	cmp	r3, #54	; 0x36
   164ac:	addls	pc, pc, r3, lsl #2
   164b0:	b	16598 <putchar_unlocked@plt+0x56e8>
   164b4:	b	16590 <putchar_unlocked@plt+0x56e0>
   164b8:	b	16590 <putchar_unlocked@plt+0x56e0>
   164bc:	b	16590 <putchar_unlocked@plt+0x56e0>
   164c0:	b	16590 <putchar_unlocked@plt+0x56e0>
   164c4:	b	16590 <putchar_unlocked@plt+0x56e0>
   164c8:	b	16590 <putchar_unlocked@plt+0x56e0>
   164cc:	b	16590 <putchar_unlocked@plt+0x56e0>
   164d0:	b	16590 <putchar_unlocked@plt+0x56e0>
   164d4:	b	16590 <putchar_unlocked@plt+0x56e0>
   164d8:	b	16590 <putchar_unlocked@plt+0x56e0>
   164dc:	b	16598 <putchar_unlocked@plt+0x56e8>
   164e0:	b	16598 <putchar_unlocked@plt+0x56e8>
   164e4:	b	16598 <putchar_unlocked@plt+0x56e8>
   164e8:	b	16598 <putchar_unlocked@plt+0x56e8>
   164ec:	b	16598 <putchar_unlocked@plt+0x56e8>
   164f0:	b	16598 <putchar_unlocked@plt+0x56e8>
   164f4:	b	16598 <putchar_unlocked@plt+0x56e8>
   164f8:	b	16590 <putchar_unlocked@plt+0x56e0>
   164fc:	b	16590 <putchar_unlocked@plt+0x56e0>
   16500:	b	16590 <putchar_unlocked@plt+0x56e0>
   16504:	b	16590 <putchar_unlocked@plt+0x56e0>
   16508:	b	16590 <putchar_unlocked@plt+0x56e0>
   1650c:	b	16590 <putchar_unlocked@plt+0x56e0>
   16510:	b	16598 <putchar_unlocked@plt+0x56e8>
   16514:	b	16598 <putchar_unlocked@plt+0x56e8>
   16518:	b	16598 <putchar_unlocked@plt+0x56e8>
   1651c:	b	16598 <putchar_unlocked@plt+0x56e8>
   16520:	b	16598 <putchar_unlocked@plt+0x56e8>
   16524:	b	16598 <putchar_unlocked@plt+0x56e8>
   16528:	b	16598 <putchar_unlocked@plt+0x56e8>
   1652c:	b	16598 <putchar_unlocked@plt+0x56e8>
   16530:	b	16598 <putchar_unlocked@plt+0x56e8>
   16534:	b	16598 <putchar_unlocked@plt+0x56e8>
   16538:	b	16598 <putchar_unlocked@plt+0x56e8>
   1653c:	b	16598 <putchar_unlocked@plt+0x56e8>
   16540:	b	16598 <putchar_unlocked@plt+0x56e8>
   16544:	b	16598 <putchar_unlocked@plt+0x56e8>
   16548:	b	16598 <putchar_unlocked@plt+0x56e8>
   1654c:	b	16598 <putchar_unlocked@plt+0x56e8>
   16550:	b	16598 <putchar_unlocked@plt+0x56e8>
   16554:	b	16598 <putchar_unlocked@plt+0x56e8>
   16558:	b	16598 <putchar_unlocked@plt+0x56e8>
   1655c:	b	16598 <putchar_unlocked@plt+0x56e8>
   16560:	b	16598 <putchar_unlocked@plt+0x56e8>
   16564:	b	16598 <putchar_unlocked@plt+0x56e8>
   16568:	b	16598 <putchar_unlocked@plt+0x56e8>
   1656c:	b	16598 <putchar_unlocked@plt+0x56e8>
   16570:	b	16598 <putchar_unlocked@plt+0x56e8>
   16574:	b	16598 <putchar_unlocked@plt+0x56e8>
   16578:	b	16590 <putchar_unlocked@plt+0x56e0>
   1657c:	b	16590 <putchar_unlocked@plt+0x56e0>
   16580:	b	16590 <putchar_unlocked@plt+0x56e0>
   16584:	b	16590 <putchar_unlocked@plt+0x56e0>
   16588:	b	16590 <putchar_unlocked@plt+0x56e0>
   1658c:	b	16590 <putchar_unlocked@plt+0x56e0>
   16590:	mov	r3, #1
   16594:	b	1659c <putchar_unlocked@plt+0x56ec>
   16598:	mov	r3, #0
   1659c:	mov	r0, r3
   165a0:	add	sp, fp, #0
   165a4:	pop	{fp}		; (ldr fp, [sp], #4)
   165a8:	bx	lr
   165ac:	push	{fp}		; (str fp, [sp, #-4]!)
   165b0:	add	fp, sp, #0
   165b4:	sub	sp, sp, #12
   165b8:	str	r0, [fp, #-8]
   165bc:	ldr	r3, [fp, #-8]
   165c0:	sub	r3, r3, #65	; 0x41
   165c4:	cmp	r3, #25
   165c8:	bhi	165d8 <putchar_unlocked@plt+0x5728>
   165cc:	ldr	r3, [fp, #-8]
   165d0:	add	r3, r3, #32
   165d4:	b	165dc <putchar_unlocked@plt+0x572c>
   165d8:	ldr	r3, [fp, #-8]
   165dc:	mov	r0, r3
   165e0:	add	sp, fp, #0
   165e4:	pop	{fp}		; (ldr fp, [sp], #4)
   165e8:	bx	lr
   165ec:	push	{fp}		; (str fp, [sp, #-4]!)
   165f0:	add	fp, sp, #0
   165f4:	sub	sp, sp, #12
   165f8:	str	r0, [fp, #-8]
   165fc:	ldr	r3, [fp, #-8]
   16600:	sub	r3, r3, #97	; 0x61
   16604:	cmp	r3, #25
   16608:	bhi	16618 <putchar_unlocked@plt+0x5768>
   1660c:	ldr	r3, [fp, #-8]
   16610:	sub	r3, r3, #32
   16614:	b	1661c <putchar_unlocked@plt+0x576c>
   16618:	ldr	r3, [fp, #-8]
   1661c:	mov	r0, r3
   16620:	add	sp, fp, #0
   16624:	pop	{fp}		; (ldr fp, [sp], #4)
   16628:	bx	lr
   1662c:	push	{fp, lr}
   16630:	add	fp, sp, #4
   16634:	sub	sp, sp, #272	; 0x110
   16638:	str	r0, [fp, #-272]	; 0xfffffef0
   1663c:	sub	r3, fp, #264	; 0x108
   16640:	ldr	r2, [pc, #116]	; 166bc <putchar_unlocked@plt+0x580c>
   16644:	mov	r1, r3
   16648:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1664c:	bl	167d0 <putchar_unlocked@plt+0x5920>
   16650:	mov	r3, r0
   16654:	cmp	r3, #0
   16658:	beq	16664 <putchar_unlocked@plt+0x57b4>
   1665c:	mov	r3, #0
   16660:	b	166b0 <putchar_unlocked@plt+0x5800>
   16664:	sub	r3, fp, #264	; 0x108
   16668:	ldr	r1, [pc, #80]	; 166c0 <putchar_unlocked@plt+0x5810>
   1666c:	mov	r0, r3
   16670:	bl	10c70 <strcmp@plt>
   16674:	mov	r3, r0
   16678:	cmp	r3, #0
   1667c:	beq	166a4 <putchar_unlocked@plt+0x57f4>
   16680:	sub	r3, fp, #264	; 0x108
   16684:	ldr	r1, [pc, #56]	; 166c4 <putchar_unlocked@plt+0x5814>
   16688:	mov	r0, r3
   1668c:	bl	10c70 <strcmp@plt>
   16690:	mov	r3, r0
   16694:	cmp	r3, #0
   16698:	beq	166a4 <putchar_unlocked@plt+0x57f4>
   1669c:	mov	r3, #1
   166a0:	b	166a8 <putchar_unlocked@plt+0x57f8>
   166a4:	mov	r3, #0
   166a8:	and	r3, r3, #1
   166ac:	uxtb	r3, r3
   166b0:	mov	r0, r3
   166b4:	sub	sp, fp, #4
   166b8:	pop	{fp, pc}
   166bc:	andeq	r0, r0, r1, lsl #2
   166c0:	andeq	r7, r1, r0, ror r5
   166c4:	andeq	r7, r1, r4, ror r5
   166c8:	push	{fp, lr}
   166cc:	add	fp, sp, #4
   166d0:	sub	sp, sp, #16
   166d4:	str	r0, [fp, #-16]
   166d8:	mov	r1, #0
   166dc:	ldr	r0, [fp, #-16]
   166e0:	bl	10e50 <setlocale@plt>
   166e4:	str	r0, [fp, #-8]
   166e8:	ldr	r3, [fp, #-8]
   166ec:	mov	r0, r3
   166f0:	sub	sp, fp, #4
   166f4:	pop	{fp, pc}
   166f8:	push	{fp, lr}
   166fc:	add	fp, sp, #4
   16700:	sub	sp, sp, #24
   16704:	str	r0, [fp, #-16]
   16708:	str	r1, [fp, #-20]	; 0xffffffec
   1670c:	str	r2, [fp, #-24]	; 0xffffffe8
   16710:	ldr	r0, [fp, #-16]
   16714:	bl	166c8 <putchar_unlocked@plt+0x5818>
   16718:	str	r0, [fp, #-8]
   1671c:	ldr	r3, [fp, #-8]
   16720:	cmp	r3, #0
   16724:	bne	16748 <putchar_unlocked@plt+0x5898>
   16728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1672c:	cmp	r3, #0
   16730:	beq	16740 <putchar_unlocked@plt+0x5890>
   16734:	ldr	r3, [fp, #-20]	; 0xffffffec
   16738:	mov	r2, #0
   1673c:	strb	r2, [r3]
   16740:	mov	r3, #22
   16744:	b	167c4 <putchar_unlocked@plt+0x5914>
   16748:	ldr	r0, [fp, #-8]
   1674c:	bl	10dd8 <strlen@plt>
   16750:	str	r0, [fp, #-12]
   16754:	ldr	r2, [fp, #-12]
   16758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1675c:	cmp	r2, r3
   16760:	bcs	16784 <putchar_unlocked@plt+0x58d4>
   16764:	ldr	r3, [fp, #-12]
   16768:	add	r3, r3, #1
   1676c:	mov	r2, r3
   16770:	ldr	r1, [fp, #-8]
   16774:	ldr	r0, [fp, #-20]	; 0xffffffec
   16778:	bl	10cb8 <memcpy@plt>
   1677c:	mov	r3, #0
   16780:	b	167c4 <putchar_unlocked@plt+0x5914>
   16784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16788:	cmp	r3, #0
   1678c:	beq	167c0 <putchar_unlocked@plt+0x5910>
   16790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16794:	sub	r3, r3, #1
   16798:	mov	r2, r3
   1679c:	ldr	r1, [fp, #-8]
   167a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   167a4:	bl	10cb8 <memcpy@plt>
   167a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   167ac:	sub	r3, r3, #1
   167b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   167b4:	add	r3, r2, r3
   167b8:	mov	r2, #0
   167bc:	strb	r2, [r3]
   167c0:	mov	r3, #34	; 0x22
   167c4:	mov	r0, r3
   167c8:	sub	sp, fp, #4
   167cc:	pop	{fp, pc}
   167d0:	push	{fp, lr}
   167d4:	add	fp, sp, #4
   167d8:	sub	sp, sp, #16
   167dc:	str	r0, [fp, #-8]
   167e0:	str	r1, [fp, #-12]
   167e4:	str	r2, [fp, #-16]
   167e8:	ldr	r2, [fp, #-16]
   167ec:	ldr	r1, [fp, #-12]
   167f0:	ldr	r0, [fp, #-8]
   167f4:	bl	166f8 <putchar_unlocked@plt+0x5848>
   167f8:	mov	r3, r0
   167fc:	mov	r0, r3
   16800:	sub	sp, fp, #4
   16804:	pop	{fp, pc}
   16808:	push	{fp, lr}
   1680c:	add	fp, sp, #4
   16810:	sub	sp, sp, #8
   16814:	str	r0, [fp, #-8]
   16818:	ldr	r0, [fp, #-8]
   1681c:	bl	166c8 <putchar_unlocked@plt+0x5818>
   16820:	mov	r3, r0
   16824:	mov	r0, r3
   16828:	sub	sp, fp, #4
   1682c:	pop	{fp, pc}
   16830:	subs	r2, r1, #1
   16834:	bxeq	lr
   16838:	bcc	16a10 <putchar_unlocked@plt+0x5b60>
   1683c:	cmp	r0, r1
   16840:	bls	169f4 <putchar_unlocked@plt+0x5b44>
   16844:	tst	r1, r2
   16848:	beq	16a00 <putchar_unlocked@plt+0x5b50>
   1684c:	clz	r3, r0
   16850:	clz	r2, r1
   16854:	sub	r3, r2, r3
   16858:	rsbs	r3, r3, #31
   1685c:	addne	r3, r3, r3, lsl #1
   16860:	mov	r2, #0
   16864:	addne	pc, pc, r3, lsl #2
   16868:	nop			; (mov r0, r0)
   1686c:	cmp	r0, r1, lsl #31
   16870:	adc	r2, r2, r2
   16874:	subcs	r0, r0, r1, lsl #31
   16878:	cmp	r0, r1, lsl #30
   1687c:	adc	r2, r2, r2
   16880:	subcs	r0, r0, r1, lsl #30
   16884:	cmp	r0, r1, lsl #29
   16888:	adc	r2, r2, r2
   1688c:	subcs	r0, r0, r1, lsl #29
   16890:	cmp	r0, r1, lsl #28
   16894:	adc	r2, r2, r2
   16898:	subcs	r0, r0, r1, lsl #28
   1689c:	cmp	r0, r1, lsl #27
   168a0:	adc	r2, r2, r2
   168a4:	subcs	r0, r0, r1, lsl #27
   168a8:	cmp	r0, r1, lsl #26
   168ac:	adc	r2, r2, r2
   168b0:	subcs	r0, r0, r1, lsl #26
   168b4:	cmp	r0, r1, lsl #25
   168b8:	adc	r2, r2, r2
   168bc:	subcs	r0, r0, r1, lsl #25
   168c0:	cmp	r0, r1, lsl #24
   168c4:	adc	r2, r2, r2
   168c8:	subcs	r0, r0, r1, lsl #24
   168cc:	cmp	r0, r1, lsl #23
   168d0:	adc	r2, r2, r2
   168d4:	subcs	r0, r0, r1, lsl #23
   168d8:	cmp	r0, r1, lsl #22
   168dc:	adc	r2, r2, r2
   168e0:	subcs	r0, r0, r1, lsl #22
   168e4:	cmp	r0, r1, lsl #21
   168e8:	adc	r2, r2, r2
   168ec:	subcs	r0, r0, r1, lsl #21
   168f0:	cmp	r0, r1, lsl #20
   168f4:	adc	r2, r2, r2
   168f8:	subcs	r0, r0, r1, lsl #20
   168fc:	cmp	r0, r1, lsl #19
   16900:	adc	r2, r2, r2
   16904:	subcs	r0, r0, r1, lsl #19
   16908:	cmp	r0, r1, lsl #18
   1690c:	adc	r2, r2, r2
   16910:	subcs	r0, r0, r1, lsl #18
   16914:	cmp	r0, r1, lsl #17
   16918:	adc	r2, r2, r2
   1691c:	subcs	r0, r0, r1, lsl #17
   16920:	cmp	r0, r1, lsl #16
   16924:	adc	r2, r2, r2
   16928:	subcs	r0, r0, r1, lsl #16
   1692c:	cmp	r0, r1, lsl #15
   16930:	adc	r2, r2, r2
   16934:	subcs	r0, r0, r1, lsl #15
   16938:	cmp	r0, r1, lsl #14
   1693c:	adc	r2, r2, r2
   16940:	subcs	r0, r0, r1, lsl #14
   16944:	cmp	r0, r1, lsl #13
   16948:	adc	r2, r2, r2
   1694c:	subcs	r0, r0, r1, lsl #13
   16950:	cmp	r0, r1, lsl #12
   16954:	adc	r2, r2, r2
   16958:	subcs	r0, r0, r1, lsl #12
   1695c:	cmp	r0, r1, lsl #11
   16960:	adc	r2, r2, r2
   16964:	subcs	r0, r0, r1, lsl #11
   16968:	cmp	r0, r1, lsl #10
   1696c:	adc	r2, r2, r2
   16970:	subcs	r0, r0, r1, lsl #10
   16974:	cmp	r0, r1, lsl #9
   16978:	adc	r2, r2, r2
   1697c:	subcs	r0, r0, r1, lsl #9
   16980:	cmp	r0, r1, lsl #8
   16984:	adc	r2, r2, r2
   16988:	subcs	r0, r0, r1, lsl #8
   1698c:	cmp	r0, r1, lsl #7
   16990:	adc	r2, r2, r2
   16994:	subcs	r0, r0, r1, lsl #7
   16998:	cmp	r0, r1, lsl #6
   1699c:	adc	r2, r2, r2
   169a0:	subcs	r0, r0, r1, lsl #6
   169a4:	cmp	r0, r1, lsl #5
   169a8:	adc	r2, r2, r2
   169ac:	subcs	r0, r0, r1, lsl #5
   169b0:	cmp	r0, r1, lsl #4
   169b4:	adc	r2, r2, r2
   169b8:	subcs	r0, r0, r1, lsl #4
   169bc:	cmp	r0, r1, lsl #3
   169c0:	adc	r2, r2, r2
   169c4:	subcs	r0, r0, r1, lsl #3
   169c8:	cmp	r0, r1, lsl #2
   169cc:	adc	r2, r2, r2
   169d0:	subcs	r0, r0, r1, lsl #2
   169d4:	cmp	r0, r1, lsl #1
   169d8:	adc	r2, r2, r2
   169dc:	subcs	r0, r0, r1, lsl #1
   169e0:	cmp	r0, r1
   169e4:	adc	r2, r2, r2
   169e8:	subcs	r0, r0, r1
   169ec:	mov	r0, r2
   169f0:	bx	lr
   169f4:	moveq	r0, #1
   169f8:	movne	r0, #0
   169fc:	bx	lr
   16a00:	clz	r2, r1
   16a04:	rsb	r2, r2, #31
   16a08:	lsr	r0, r0, r2
   16a0c:	bx	lr
   16a10:	cmp	r0, #0
   16a14:	mvnne	r0, #0
   16a18:	b	16c7c <putchar_unlocked@plt+0x5dcc>
   16a1c:	cmp	r1, #0
   16a20:	beq	16a10 <putchar_unlocked@plt+0x5b60>
   16a24:	push	{r0, r1, lr}
   16a28:	bl	16830 <putchar_unlocked@plt+0x5980>
   16a2c:	pop	{r1, r2, lr}
   16a30:	mul	r3, r2, r0
   16a34:	sub	r1, r1, r3
   16a38:	bx	lr
   16a3c:	cmp	r1, #0
   16a40:	beq	16c4c <putchar_unlocked@plt+0x5d9c>
   16a44:	eor	ip, r0, r1
   16a48:	rsbmi	r1, r1, #0
   16a4c:	subs	r2, r1, #1
   16a50:	beq	16c18 <putchar_unlocked@plt+0x5d68>
   16a54:	movs	r3, r0
   16a58:	rsbmi	r3, r0, #0
   16a5c:	cmp	r3, r1
   16a60:	bls	16c24 <putchar_unlocked@plt+0x5d74>
   16a64:	tst	r1, r2
   16a68:	beq	16c34 <putchar_unlocked@plt+0x5d84>
   16a6c:	clz	r2, r3
   16a70:	clz	r0, r1
   16a74:	sub	r2, r0, r2
   16a78:	rsbs	r2, r2, #31
   16a7c:	addne	r2, r2, r2, lsl #1
   16a80:	mov	r0, #0
   16a84:	addne	pc, pc, r2, lsl #2
   16a88:	nop			; (mov r0, r0)
   16a8c:	cmp	r3, r1, lsl #31
   16a90:	adc	r0, r0, r0
   16a94:	subcs	r3, r3, r1, lsl #31
   16a98:	cmp	r3, r1, lsl #30
   16a9c:	adc	r0, r0, r0
   16aa0:	subcs	r3, r3, r1, lsl #30
   16aa4:	cmp	r3, r1, lsl #29
   16aa8:	adc	r0, r0, r0
   16aac:	subcs	r3, r3, r1, lsl #29
   16ab0:	cmp	r3, r1, lsl #28
   16ab4:	adc	r0, r0, r0
   16ab8:	subcs	r3, r3, r1, lsl #28
   16abc:	cmp	r3, r1, lsl #27
   16ac0:	adc	r0, r0, r0
   16ac4:	subcs	r3, r3, r1, lsl #27
   16ac8:	cmp	r3, r1, lsl #26
   16acc:	adc	r0, r0, r0
   16ad0:	subcs	r3, r3, r1, lsl #26
   16ad4:	cmp	r3, r1, lsl #25
   16ad8:	adc	r0, r0, r0
   16adc:	subcs	r3, r3, r1, lsl #25
   16ae0:	cmp	r3, r1, lsl #24
   16ae4:	adc	r0, r0, r0
   16ae8:	subcs	r3, r3, r1, lsl #24
   16aec:	cmp	r3, r1, lsl #23
   16af0:	adc	r0, r0, r0
   16af4:	subcs	r3, r3, r1, lsl #23
   16af8:	cmp	r3, r1, lsl #22
   16afc:	adc	r0, r0, r0
   16b00:	subcs	r3, r3, r1, lsl #22
   16b04:	cmp	r3, r1, lsl #21
   16b08:	adc	r0, r0, r0
   16b0c:	subcs	r3, r3, r1, lsl #21
   16b10:	cmp	r3, r1, lsl #20
   16b14:	adc	r0, r0, r0
   16b18:	subcs	r3, r3, r1, lsl #20
   16b1c:	cmp	r3, r1, lsl #19
   16b20:	adc	r0, r0, r0
   16b24:	subcs	r3, r3, r1, lsl #19
   16b28:	cmp	r3, r1, lsl #18
   16b2c:	adc	r0, r0, r0
   16b30:	subcs	r3, r3, r1, lsl #18
   16b34:	cmp	r3, r1, lsl #17
   16b38:	adc	r0, r0, r0
   16b3c:	subcs	r3, r3, r1, lsl #17
   16b40:	cmp	r3, r1, lsl #16
   16b44:	adc	r0, r0, r0
   16b48:	subcs	r3, r3, r1, lsl #16
   16b4c:	cmp	r3, r1, lsl #15
   16b50:	adc	r0, r0, r0
   16b54:	subcs	r3, r3, r1, lsl #15
   16b58:	cmp	r3, r1, lsl #14
   16b5c:	adc	r0, r0, r0
   16b60:	subcs	r3, r3, r1, lsl #14
   16b64:	cmp	r3, r1, lsl #13
   16b68:	adc	r0, r0, r0
   16b6c:	subcs	r3, r3, r1, lsl #13
   16b70:	cmp	r3, r1, lsl #12
   16b74:	adc	r0, r0, r0
   16b78:	subcs	r3, r3, r1, lsl #12
   16b7c:	cmp	r3, r1, lsl #11
   16b80:	adc	r0, r0, r0
   16b84:	subcs	r3, r3, r1, lsl #11
   16b88:	cmp	r3, r1, lsl #10
   16b8c:	adc	r0, r0, r0
   16b90:	subcs	r3, r3, r1, lsl #10
   16b94:	cmp	r3, r1, lsl #9
   16b98:	adc	r0, r0, r0
   16b9c:	subcs	r3, r3, r1, lsl #9
   16ba0:	cmp	r3, r1, lsl #8
   16ba4:	adc	r0, r0, r0
   16ba8:	subcs	r3, r3, r1, lsl #8
   16bac:	cmp	r3, r1, lsl #7
   16bb0:	adc	r0, r0, r0
   16bb4:	subcs	r3, r3, r1, lsl #7
   16bb8:	cmp	r3, r1, lsl #6
   16bbc:	adc	r0, r0, r0
   16bc0:	subcs	r3, r3, r1, lsl #6
   16bc4:	cmp	r3, r1, lsl #5
   16bc8:	adc	r0, r0, r0
   16bcc:	subcs	r3, r3, r1, lsl #5
   16bd0:	cmp	r3, r1, lsl #4
   16bd4:	adc	r0, r0, r0
   16bd8:	subcs	r3, r3, r1, lsl #4
   16bdc:	cmp	r3, r1, lsl #3
   16be0:	adc	r0, r0, r0
   16be4:	subcs	r3, r3, r1, lsl #3
   16be8:	cmp	r3, r1, lsl #2
   16bec:	adc	r0, r0, r0
   16bf0:	subcs	r3, r3, r1, lsl #2
   16bf4:	cmp	r3, r1, lsl #1
   16bf8:	adc	r0, r0, r0
   16bfc:	subcs	r3, r3, r1, lsl #1
   16c00:	cmp	r3, r1
   16c04:	adc	r0, r0, r0
   16c08:	subcs	r3, r3, r1
   16c0c:	cmp	ip, #0
   16c10:	rsbmi	r0, r0, #0
   16c14:	bx	lr
   16c18:	teq	ip, r0
   16c1c:	rsbmi	r0, r0, #0
   16c20:	bx	lr
   16c24:	movcc	r0, #0
   16c28:	asreq	r0, ip, #31
   16c2c:	orreq	r0, r0, #1
   16c30:	bx	lr
   16c34:	clz	r2, r1
   16c38:	rsb	r2, r2, #31
   16c3c:	cmp	ip, #0
   16c40:	lsr	r0, r3, r2
   16c44:	rsbmi	r0, r0, #0
   16c48:	bx	lr
   16c4c:	cmp	r0, #0
   16c50:	mvngt	r0, #-2147483648	; 0x80000000
   16c54:	movlt	r0, #-2147483648	; 0x80000000
   16c58:	b	16c7c <putchar_unlocked@plt+0x5dcc>
   16c5c:	cmp	r1, #0
   16c60:	beq	16c4c <putchar_unlocked@plt+0x5d9c>
   16c64:	push	{r0, r1, lr}
   16c68:	bl	16a44 <putchar_unlocked@plt+0x5b94>
   16c6c:	pop	{r1, r2, lr}
   16c70:	mul	r3, r2, r0
   16c74:	sub	r1, r1, r3
   16c78:	bx	lr
   16c7c:	push	{r1, lr}
   16c80:	mov	r0, #8
   16c84:	bl	10c64 <raise@plt>
   16c88:	pop	{r1, pc}
   16c8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16c90:	mov	r7, r0
   16c94:	ldr	r6, [pc, #72]	; 16ce4 <putchar_unlocked@plt+0x5e34>
   16c98:	ldr	r5, [pc, #72]	; 16ce8 <putchar_unlocked@plt+0x5e38>
   16c9c:	add	r6, pc, r6
   16ca0:	add	r5, pc, r5
   16ca4:	sub	r6, r6, r5
   16ca8:	mov	r8, r1
   16cac:	mov	r9, r2
   16cb0:	bl	10c2c <calloc@plt-0x20>
   16cb4:	asrs	r6, r6, #2
   16cb8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16cbc:	mov	r4, #0
   16cc0:	add	r4, r4, #1
   16cc4:	ldr	r3, [r5], #4
   16cc8:	mov	r2, r9
   16ccc:	mov	r1, r8
   16cd0:	mov	r0, r7
   16cd4:	blx	r3
   16cd8:	cmp	r6, r4
   16cdc:	bne	16cc0 <putchar_unlocked@plt+0x5e10>
   16ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ce4:	andeq	r1, r1, ip, ror #4
   16ce8:	andeq	r1, r1, r4, ror #4
   16cec:	bx	lr
   16cf0:	ldr	r3, [pc, #12]	; 16d04 <putchar_unlocked@plt+0x5e54>
   16cf4:	mov	r1, #0
   16cf8:	add	r3, pc, r3
   16cfc:	ldr	r2, [r3]
   16d00:	b	10dfc <__cxa_atexit@plt>
   16d04:	andeq	r1, r1, r4, ror #7

Disassembly of section .fini:

00016d08 <.fini>:
   16d08:	push	{r3, lr}
   16d0c:	pop	{r3, pc}
