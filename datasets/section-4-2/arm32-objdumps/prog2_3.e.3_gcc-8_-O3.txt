
../repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

0001066c <.init>:
   1066c:	push	{r3, lr}
   10670:	bl	10890 <_start@@Base+0x3c>
   10674:	pop	{r3, pc}

Disassembly of section .plt:

00010678 <__isoc99_fscanf@plt-0x14>:
   10678:	push	{lr}		; (str lr, [sp, #-4]!)
   1067c:	ldr	lr, [pc, #4]	; 10688 <__isoc99_fscanf@plt-0x4>
   10680:	add	lr, pc, lr
   10684:	ldr	pc, [lr, #8]!
   10688:	andeq	r0, r1, r8, ror r9

0001068c <__isoc99_fscanf@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2424]!	; 0x978

00010698 <fopen@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2416]!	; 0x970

000106a4 <realloc@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2408]!	; 0x968

000106b0 <fwrite@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2400]!	; 0x960

000106bc <malloc@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2392]!	; 0x958

000106c8 <__libc_start_main@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2384]!	; 0x950

000106d4 <__gmon_start__@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2376]!	; 0x948

000106e0 <fprintf@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2368]!	; 0x940

000106ec <fclose@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2360]!	; 0x938

000106f8 <abort@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010704 <main@@Base>:
   10704:	movw	r1, #2876	; 0xb3c
   10708:	movt	r1, #1
   1070c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10710:	movw	r0, #2880	; 0xb40
   10714:	movt	r0, #1
   10718:	strd	r6, [sp, #8]
   1071c:	strd	r8, [sp, #16]
   10720:	movw	r6, #2896	; 0xb50
   10724:	movt	r6, #1
   10728:	str	lr, [sp, #24]
   1072c:	sub	sp, sp, #12
   10730:	mov	r4, #0
   10734:	bl	10698 <fopen@plt>
   10738:	mov	r8, r0
   1073c:	mov	r0, #104	; 0x68
   10740:	bl	106bc <malloc@plt>
   10744:	mov	r7, r0
   10748:	mov	r9, #104	; 0x68
   1074c:	b	1075c <main@@Base+0x58>
   10750:	bl	106a4 <realloc@plt>
   10754:	mov	r7, r0
   10758:	add	r4, r4, #1
   1075c:	mul	r5, r9, r4
   10760:	mov	r1, r6
   10764:	mov	r0, r8
   10768:	add	r2, r7, r5
   1076c:	add	ip, r2, #100	; 0x64
   10770:	add	r3, r2, #50	; 0x32
   10774:	str	ip, [sp]
   10778:	bl	1068c <__isoc99_fscanf@plt>
   1077c:	cmp	r0, #3
   10780:	add	r1, r5, #104	; 0x68
   10784:	mov	r0, r7
   10788:	beq	10750 <main@@Base+0x4c>
   1078c:	mov	r0, r8
   10790:	bl	106ec <fclose@plt>
   10794:	movw	r1, #2908	; 0xb5c
   10798:	movt	r1, #1
   1079c:	movw	r0, #2944	; 0xb80
   107a0:	movt	r0, #1
   107a4:	bl	10698 <fopen@plt>
   107a8:	mov	r3, r0
   107ac:	mov	r2, #10
   107b0:	mov	r1, #1
   107b4:	mov	r7, r0
   107b8:	movw	r0, #2912	; 0xb60
   107bc:	movt	r0, #1
   107c0:	bl	106b0 <fwrite@plt>
   107c4:	mov	r0, #104	; 0x68
   107c8:	bl	106bc <malloc@plt>
   107cc:	cmp	r4, #0
   107d0:	mov	r8, r0
   107d4:	beq	10830 <main@@Base+0x12c>
   107d8:	movw	r9, #2924	; 0xb6c
   107dc:	movt	r9, #1
   107e0:	mov	r6, #104	; 0x68
   107e4:	mov	r5, #0
   107e8:	mov	r1, r6
   107ec:	mov	r0, r8
   107f0:	bl	106a4 <realloc@plt>
   107f4:	sub	r1, r6, #104	; 0x68
   107f8:	mov	r8, r0
   107fc:	add	r1, r0, r1
   10800:	add	r0, r5, #1
   10804:	ldr	ip, [r1, #100]	; 0x64
   10808:	add	r3, r1, #50	; 0x32
   1080c:	mov	r2, r5
   10810:	mov	r5, r0
   10814:	mov	r0, r7
   10818:	add	r6, r6, #104	; 0x68
   1081c:	stm	sp, {r1, ip}
   10820:	mov	r1, r9
   10824:	bl	106e0 <fprintf@plt>
   10828:	cmp	r5, r4
   1082c:	bne	107e8 <main@@Base+0xe4>
   10830:	mov	r0, r7
   10834:	bl	106ec <fclose@plt>
   10838:	mov	r0, #0
   1083c:	add	sp, sp, #12
   10840:	ldrd	r4, [sp]
   10844:	ldrd	r6, [sp, #8]
   10848:	ldrd	r8, [sp, #16]
   1084c:	add	sp, sp, #24
   10850:	pop	{pc}		; (ldr pc, [sp], #4)

00010854 <_start@@Base>:
   10854:	mov	fp, #0
   10858:	mov	lr, #0
   1085c:	pop	{r1}		; (ldr r1, [sp], #4)
   10860:	mov	r2, sp
   10864:	push	{r2}		; (str r2, [sp, #-4]!)
   10868:	push	{r0}		; (str r0, [sp, #-4]!)
   1086c:	ldr	ip, [pc, #16]	; 10884 <_start@@Base+0x30>
   10870:	push	{ip}		; (str ip, [sp, #-4]!)
   10874:	ldr	r0, [pc, #12]	; 10888 <_start@@Base+0x34>
   10878:	ldr	r3, [pc, #12]	; 1088c <_start@@Base+0x38>
   1087c:	bl	106c8 <__libc_start_main@plt>
   10880:	bl	106f8 <abort@plt>
   10884:	andeq	r0, r1, ip, lsr #22
   10888:	andeq	r0, r1, r4, lsl #14
   1088c:	andeq	r0, r1, ip, asr #21
   10890:	ldr	r3, [pc, #20]	; 108ac <_start@@Base+0x58>
   10894:	ldr	r2, [pc, #20]	; 108b0 <_start@@Base+0x5c>
   10898:	add	r3, pc, r3
   1089c:	ldr	r2, [r3, r2]
   108a0:	cmp	r2, #0
   108a4:	bxeq	lr
   108a8:	b	106d4 <__gmon_start__@plt>
   108ac:	andeq	r0, r1, r0, ror #14
   108b0:	andeq	r0, r0, r4, lsr r0
   108b4:	ldr	r0, [pc, #24]	; 108d4 <_start@@Base+0x80>
   108b8:	ldr	r3, [pc, #24]	; 108d8 <_start@@Base+0x84>
   108bc:	cmp	r3, r0
   108c0:	bxeq	lr
   108c4:	ldr	r3, [pc, #16]	; 108dc <_start@@Base+0x88>
   108c8:	cmp	r3, #0
   108cc:	bxeq	lr
   108d0:	bx	r3
   108d4:	andeq	r1, r2, r0, asr #32
   108d8:	andeq	r1, r2, r0, asr #32
   108dc:	andeq	r0, r0, r0
   108e0:	ldr	r0, [pc, #36]	; 1090c <_start@@Base+0xb8>
   108e4:	ldr	r1, [pc, #36]	; 10910 <_start@@Base+0xbc>
   108e8:	sub	r1, r1, r0
   108ec:	asr	r1, r1, #2
   108f0:	add	r1, r1, r1, lsr #31
   108f4:	asrs	r1, r1, #1
   108f8:	bxeq	lr
   108fc:	ldr	r3, [pc, #16]	; 10914 <_start@@Base+0xc0>
   10900:	cmp	r3, #0
   10904:	bxeq	lr
   10908:	bx	r3
   1090c:	andeq	r1, r2, r0, asr #32
   10910:	andeq	r1, r2, r0, asr #32
   10914:	andeq	r0, r0, r0
   10918:	push	{r4, lr}
   1091c:	ldr	r4, [pc, #24]	; 1093c <_start@@Base+0xe8>
   10920:	ldrb	r3, [r4]
   10924:	cmp	r3, #0
   10928:	popne	{r4, pc}
   1092c:	bl	108b4 <_start@@Base+0x60>
   10930:	mov	r3, #1
   10934:	strb	r3, [r4]
   10938:	pop	{r4, pc}
   1093c:	andeq	r1, r2, r0, asr #32
   10940:	b	108e0 <_start@@Base+0x8c>

00010944 <analisarFicheiro@@Base>:
   10944:	movw	r0, #2880	; 0xb40
   10948:	movt	r0, #1
   1094c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10950:	strd	r6, [sp, #8]
   10954:	movw	r7, #2896	; 0xb50
   10958:	movt	r7, #1
   1095c:	strd	r8, [sp, #16]
   10960:	mov	r6, #0
   10964:	mov	r9, #104	; 0x68
   10968:	str	sl, [sp, #24]
   1096c:	mov	sl, r1
   10970:	movw	r1, #2876	; 0xb3c
   10974:	movt	r1, #1
   10978:	str	lr, [sp, #28]
   1097c:	sub	sp, sp, #8
   10980:	bl	10698 <fopen@plt>
   10984:	mov	r8, r0
   10988:	mov	r0, #104	; 0x68
   1098c:	bl	106bc <malloc@plt>
   10990:	mov	r5, r0
   10994:	b	109a4 <analisarFicheiro@@Base+0x60>
   10998:	bl	106a4 <realloc@plt>
   1099c:	mov	r5, r0
   109a0:	add	r6, r6, #1
   109a4:	mul	r4, r9, r6
   109a8:	mov	r1, r7
   109ac:	mov	r0, r8
   109b0:	add	r2, r5, r4
   109b4:	add	ip, r2, #100	; 0x64
   109b8:	add	r3, r2, #50	; 0x32
   109bc:	str	ip, [sp]
   109c0:	bl	1068c <__isoc99_fscanf@plt>
   109c4:	cmp	r0, #3
   109c8:	add	r1, r4, #104	; 0x68
   109cc:	mov	r0, r5
   109d0:	beq	10998 <analisarFicheiro@@Base+0x54>
   109d4:	mov	r0, r8
   109d8:	str	r6, [sl]
   109dc:	bl	106ec <fclose@plt>
   109e0:	mov	r0, r5
   109e4:	add	sp, sp, #8
   109e8:	ldrd	r4, [sp]
   109ec:	ldrd	r6, [sp, #8]
   109f0:	ldrd	r8, [sp, #16]
   109f4:	ldr	sl, [sp, #24]
   109f8:	add	sp, sp, #28
   109fc:	pop	{pc}		; (ldr pc, [sp], #4)

00010a00 <gerarRelatorio@@Base>:
   10a00:	movw	r1, #2908	; 0xb5c
   10a04:	movt	r1, #1
   10a08:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10a0c:	strd	r6, [sp, #8]
   10a10:	strd	r8, [sp, #16]
   10a14:	mov	r9, r2
   10a18:	str	lr, [sp, #24]
   10a1c:	sub	sp, sp, #12
   10a20:	bl	10698 <fopen@plt>
   10a24:	mov	r3, r0
   10a28:	mov	r2, #10
   10a2c:	mov	r1, #1
   10a30:	mov	r7, r0
   10a34:	movw	r0, #2912	; 0xb60
   10a38:	movt	r0, #1
   10a3c:	bl	106b0 <fwrite@plt>
   10a40:	mov	r0, #104	; 0x68
   10a44:	bl	106bc <malloc@plt>
   10a48:	cmp	r9, #0
   10a4c:	ble	10aac <gerarRelatorio@@Base+0xac>
   10a50:	movw	r8, #2924	; 0xb6c
   10a54:	movt	r8, #1
   10a58:	mov	r6, r0
   10a5c:	mov	r5, #104	; 0x68
   10a60:	mov	r4, #0
   10a64:	mov	r1, r5
   10a68:	mov	r0, r6
   10a6c:	bl	106a4 <realloc@plt>
   10a70:	mov	r6, r0
   10a74:	sub	r0, r5, #104	; 0x68
   10a78:	add	r0, r6, r0
   10a7c:	add	lr, r4, #1
   10a80:	ldr	ip, [r0, #100]	; 0x64
   10a84:	add	r3, r0, #50	; 0x32
   10a88:	mov	r2, r4
   10a8c:	mov	r1, r8
   10a90:	mov	r4, lr
   10a94:	add	r5, r5, #104	; 0x68
   10a98:	stm	sp, {r0, ip}
   10a9c:	mov	r0, r7
   10aa0:	bl	106e0 <fprintf@plt>
   10aa4:	cmp	r4, r9
   10aa8:	bne	10a64 <gerarRelatorio@@Base+0x64>
   10aac:	mov	r0, r7
   10ab0:	add	sp, sp, #12
   10ab4:	ldrd	r4, [sp]
   10ab8:	ldrd	r6, [sp, #8]
   10abc:	ldrd	r8, [sp, #16]
   10ac0:	ldr	lr, [sp, #24]
   10ac4:	add	sp, sp, #28
   10ac8:	b	106ec <fclose@plt>

00010acc <__libc_csu_init@@Base>:
   10acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ad0:	mov	r7, r0
   10ad4:	ldr	r6, [pc, #72]	; 10b24 <__libc_csu_init@@Base+0x58>
   10ad8:	ldr	r5, [pc, #72]	; 10b28 <__libc_csu_init@@Base+0x5c>
   10adc:	add	r6, pc, r6
   10ae0:	add	r5, pc, r5
   10ae4:	sub	r6, r6, r5
   10ae8:	mov	r8, r1
   10aec:	mov	r9, r2
   10af0:	bl	1066c <__isoc99_fscanf@plt-0x20>
   10af4:	asrs	r6, r6, #2
   10af8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10afc:	mov	r4, #0
   10b00:	add	r4, r4, #1
   10b04:	ldr	r3, [r5], #4
   10b08:	mov	r2, r9
   10b0c:	mov	r1, r8
   10b10:	mov	r0, r7
   10b14:	blx	r3
   10b18:	cmp	r6, r4
   10b1c:	bne	10b00 <__libc_csu_init@@Base+0x34>
   10b20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b24:	andeq	r0, r1, r0, lsr r4
   10b28:	andeq	r0, r1, r8, lsr #8

00010b2c <__libc_csu_fini@@Base>:
   10b2c:	bx	lr

Disassembly of section .fini:

00010b30 <.fini>:
   10b30:	push	{r3, lr}
   10b34:	pop	{r3, pc}
