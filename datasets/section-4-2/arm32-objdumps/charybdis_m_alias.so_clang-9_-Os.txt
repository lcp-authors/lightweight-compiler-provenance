
../repos/charybdis/modules/.libs/m_alias.so:     file format elf32-littlearm


Disassembly of section .init:

0000081c <_init>:
 81c:	push	{r3, lr}
 820:	bl	950 <call_weak_fn>
 824:	pop	{r3, pc}

Disassembly of section .plt:

00000828 <.plt>:
 828:	push	{lr}		; (str lr, [sp, #-4]!)
 82c:	ldr	lr, [pc, #4]	; 838 <.plt+0x10>
 830:	add	lr, pc, lr
 834:	ldr	pc, [lr, #8]!
 838:	.word	0x000117c8

0000083c <calloc@plt>:
 83c:	add	ip, pc, #0, 12
 840:	add	ip, ip, #69632	; 0x11000
 844:	ldr	pc, [ip, #1992]!	; 0x7c8

00000848 <mod_del_cmd@plt>:
 848:	add	ip, pc, #0, 12
 84c:	add	ip, ip, #69632	; 0x11000
 850:	ldr	pc, [ip, #1984]!	; 0x7c0

00000854 <__cxa_finalize@plt>:
 854:	add	ip, pc, #0, 12
 858:	add	ip, ip, #69632	; 0x11000
 85c:	ldr	pc, [ip, #1976]!	; 0x7b8

00000860 <sendto_one@plt>:
 860:	add	ip, pc, #0, 12
 864:	add	ip, ip, #69632	; 0x11000
 868:	ldr	pc, [ip, #1968]!	; 0x7b0

0000086c <free@plt>:
 86c:	add	ip, pc, #0, 12
 870:	add	ip, ip, #69632	; 0x11000
 874:	ldr	pc, [ip, #1960]!	; 0x7a8

00000878 <rb_outofmemory@plt>:
 878:	add	ip, pc, #0, 12
 87c:	add	ip, ip, #69632	; 0x11000
 880:	ldr	pc, [ip, #1952]!	; 0x7a0

00000884 <rb_free_rb_dlink_node@plt>:
 884:	add	ip, pc, #0, 12
 888:	add	ip, ip, #69632	; 0x11000
 88c:	ldr	pc, [ip, #1944]!	; 0x798

00000890 <strcpy@plt>:
 890:	add	ip, pc, #0, 12
 894:	add	ip, ip, #69632	; 0x11000
 898:	ldr	pc, [ip, #1936]!	; 0x790

0000089c <rb_dictionary_foreach_start@plt>:
 89c:	add	ip, pc, #0, 12
 8a0:	add	ip, ip, #69632	; 0x11000
 8a4:	ldr	pc, [ip, #1928]!	; 0x788

000008a8 <msgbuf_reconstruct_tail@plt>:
 8a8:	add	ip, pc, #0, 12
 8ac:	add	ip, ip, #69632	; 0x11000
 8b0:	ldr	pc, [ip, #1920]!	; 0x780

000008b4 <__gmon_start__@plt>:
 8b4:	add	ip, pc, #0, 12
 8b8:	add	ip, ip, #69632	; 0x11000
 8bc:	ldr	pc, [ip, #1912]!	; 0x778

000008c0 <rb_make_rb_dlink_node@plt>:
 8c0:	add	ip, pc, #0, 12
 8c4:	add	ip, ip, #69632	; 0x11000
 8c8:	ldr	pc, [ip, #1904]!	; 0x770

000008cc <sendto_one_numeric@plt>:
 8cc:	add	ip, pc, #0, 12
 8d0:	add	ip, ip, #69632	; 0x11000
 8d4:	ldr	pc, [ip, #1896]!	; 0x768

000008d8 <strlen@plt>:
 8d8:	add	ip, pc, #0, 12
 8dc:	add	ip, ip, #69632	; 0x11000
 8e0:	ldr	pc, [ip, #1888]!	; 0x760

000008e4 <strchr@plt>:
 8e4:	add	ip, pc, #0, 12
 8e8:	add	ip, ip, #69632	; 0x11000
 8ec:	ldr	pc, [ip, #1880]!	; 0x758

000008f0 <find_server@plt>:
 8f0:	add	ip, pc, #0, 12
 8f4:	add	ip, ip, #69632	; 0x11000
 8f8:	ldr	pc, [ip, #1872]!	; 0x750

000008fc <rb_dictionary_foreach_cur@plt>:
 8fc:	add	ip, pc, #0, 12
 900:	add	ip, ip, #69632	; 0x11000
 904:	ldr	pc, [ip, #1864]!	; 0x748

00000908 <find_named_person@plt>:
 908:	add	ip, pc, #0, 12
 90c:	add	ip, ip, #69632	; 0x11000
 910:	ldr	pc, [ip, #1856]!	; 0x740

00000914 <flood_endgrace@plt>:
 914:	add	ip, pc, #0, 12
 918:	add	ip, ip, #69632	; 0x11000
 91c:	ldr	pc, [ip, #1848]!	; 0x738

00000920 <rb_dictionary_foreach_next@plt>:
 920:	add	ip, pc, #0, 12
 924:	add	ip, ip, #69632	; 0x11000
 928:	ldr	pc, [ip, #1840]!	; 0x730

0000092c <mod_add_cmd@plt>:
 92c:	add	ip, pc, #0, 12
 930:	add	ip, ip, #69632	; 0x11000
 934:	ldr	pc, [ip, #1832]!	; 0x728

00000938 <rb_dictionary_retrieve@plt>:
 938:	add	ip, pc, #0, 12
 93c:	add	ip, ip, #69632	; 0x11000
 940:	ldr	pc, [ip, #1824]!	; 0x720

00000944 <__assert_fail@plt>:
 944:	add	ip, pc, #0, 12
 948:	add	ip, ip, #69632	; 0x11000
 94c:	ldr	pc, [ip, #1816]!	; 0x718

Disassembly of section .text:

00000950 <call_weak_fn>:
 950:	ldr	r3, [pc, #20]	; 96c <call_weak_fn+0x1c>
 954:	ldr	r2, [pc, #20]	; 970 <call_weak_fn+0x20>
 958:	add	r3, pc, r3
 95c:	ldr	r2, [r3, r2]
 960:	cmp	r2, #0
 964:	bxeq	lr
 968:	b	8b4 <__gmon_start__@plt>
 96c:	.word	0x000116a0
 970:	.word	0x00000074

00000974 <deregister_tm_clones>:
 974:	ldr	r0, [pc, #44]	; 9a8 <deregister_tm_clones+0x34>
 978:	ldr	r3, [pc, #44]	; 9ac <deregister_tm_clones+0x38>
 97c:	add	r0, pc, r0
 980:	add	r3, pc, r3
 984:	cmp	r3, r0
 988:	ldr	r3, [pc, #32]	; 9b0 <deregister_tm_clones+0x3c>
 98c:	add	r3, pc, r3
 990:	bxeq	lr
 994:	ldr	r2, [pc, #24]	; 9b4 <deregister_tm_clones+0x40>
 998:	ldr	r3, [r3, r2]
 99c:	cmp	r3, #0
 9a0:	bxeq	lr
 9a4:	bx	r3
 9a8:	.word	0x00011740
 9ac:	.word	0x0001173c
 9b0:	.word	0x0001166c
 9b4:	.word	0x0000006c

000009b8 <register_tm_clones>:
 9b8:	ldr	r0, [pc, #56]	; 9f8 <register_tm_clones+0x40>
 9bc:	ldr	r3, [pc, #56]	; 9fc <register_tm_clones+0x44>
 9c0:	add	r0, pc, r0
 9c4:	add	r3, pc, r3
 9c8:	sub	r1, r3, r0
 9cc:	ldr	r3, [pc, #44]	; a00 <register_tm_clones+0x48>
 9d0:	asr	r1, r1, #2
 9d4:	add	r3, pc, r3
 9d8:	add	r1, r1, r1, lsr #31
 9dc:	asrs	r1, r1, #1
 9e0:	bxeq	lr
 9e4:	ldr	r2, [pc, #24]	; a04 <register_tm_clones+0x4c>
 9e8:	ldr	r3, [r3, r2]
 9ec:	cmp	r3, #0
 9f0:	bxeq	lr
 9f4:	bx	r3
 9f8:	.word	0x000116fc
 9fc:	.word	0x000116f8
 a00:	.word	0x00011624
 a04:	.word	0x00000078

00000a08 <__do_global_dtors_aux>:
 a08:	ldr	r3, [pc, #76]	; a5c <__do_global_dtors_aux+0x54>
 a0c:	ldr	r2, [pc, #76]	; a60 <__do_global_dtors_aux+0x58>
 a10:	add	r3, pc, r3
 a14:	add	r2, pc, r2
 a18:	ldrb	r3, [r3]
 a1c:	cmp	r3, #0
 a20:	bxne	lr
 a24:	ldr	r3, [pc, #56]	; a64 <__do_global_dtors_aux+0x5c>
 a28:	push	{r4, lr}
 a2c:	ldr	r3, [r2, r3]
 a30:	cmp	r3, #0
 a34:	beq	a44 <__do_global_dtors_aux+0x3c>
 a38:	ldr	r3, [pc, #40]	; a68 <__do_global_dtors_aux+0x60>
 a3c:	ldr	r0, [pc, r3]
 a40:	bl	854 <__cxa_finalize@plt>
 a44:	bl	974 <deregister_tm_clones>
 a48:	ldr	r3, [pc, #28]	; a6c <__do_global_dtors_aux+0x64>
 a4c:	mov	r2, #1
 a50:	add	r3, pc, r3
 a54:	strb	r2, [r3]
 a58:	pop	{r4, pc}
 a5c:	.word	0x000116ac
 a60:	.word	0x000115e4
 a64:	.word	0x00000068
 a68:	.word	0x0001163c
 a6c:	.word	0x0001166c

00000a70 <frame_dummy>:
 a70:	b	9b8 <register_tm_clones>

00000a74 <reload_aliases>:
 a74:	push	{r4, r5, r6, r7, fp, lr}
 a78:	add	fp, sp, #16
 a7c:	ldr	r4, [pc, #148]	; b18 <reload_aliases+0xa4>
 a80:	ldr	r4, [pc, r4]
 a84:	cmp	r4, #0
 a88:	beq	b0c <reload_aliases+0x98>
 a8c:	ldr	r5, [pc, #136]	; b1c <reload_aliases+0xa8>
 a90:	mov	r6, #0
 a94:	add	r5, pc, r5
 a98:	ldr	r0, [r4]
 a9c:	ldr	r7, [r4, #8]
 aa0:	bl	848 <mod_del_cmd@plt>
 aa4:	ldr	r0, [r4]
 aa8:	cmp	r0, #0
 aac:	beq	ab4 <reload_aliases+0x40>
 ab0:	bl	86c <free@plt>
 ab4:	ldr	r0, [r4, #8]
 ab8:	ldr	r1, [r4, #4]
 abc:	cmp	r0, #0
 ac0:	beq	ad0 <reload_aliases+0x5c>
 ac4:	str	r1, [r0, #4]
 ac8:	ldr	r1, [r4, #4]
 acc:	b	ad4 <reload_aliases+0x60>
 ad0:	str	r1, [r5, #4]
 ad4:	cmp	r1, #0
 ad8:	mov	r2, r5
 adc:	addne	r2, r1, #8
 ae0:	str	r0, [r2]
 ae4:	str	r6, [r4, #4]
 ae8:	str	r6, [r4, #8]
 aec:	ldr	r0, [r5, #8]
 af0:	sub	r0, r0, #1
 af4:	str	r0, [r5, #8]
 af8:	mov	r0, r4
 afc:	bl	884 <rb_free_rb_dlink_node@plt>
 b00:	cmp	r7, #0
 b04:	mov	r4, r7
 b08:	bne	a98 <reload_aliases+0x24>
 b0c:	bl	bd8 <create_aliases>
 b10:	mov	r0, #0
 b14:	pop	{r4, r5, r6, r7, fp, pc}
 b18:	.word	0x00011640
 b1c:	.word	0x0001162c

00000b20 <_modinit>:
 b20:	push	{fp, lr}
 b24:	mov	fp, sp
 b28:	bl	bd8 <create_aliases>
 b2c:	mov	r0, #0
 b30:	pop	{fp, pc}

00000b34 <_moddeinit>:
 b34:	push	{r4, r5, r6, r7, fp, lr}
 b38:	add	fp, sp, #16
 b3c:	ldr	r4, [pc, #140]	; bd0 <_moddeinit+0x9c>
 b40:	ldr	r4, [pc, r4]
 b44:	cmp	r4, #0
 b48:	beq	bcc <_moddeinit+0x98>
 b4c:	ldr	r5, [pc, #128]	; bd4 <_moddeinit+0xa0>
 b50:	mov	r6, #0
 b54:	add	r5, pc, r5
 b58:	ldr	r0, [r4]
 b5c:	ldr	r7, [r4, #8]
 b60:	bl	848 <mod_del_cmd@plt>
 b64:	ldr	r0, [r4]
 b68:	cmp	r0, #0
 b6c:	beq	b74 <_moddeinit+0x40>
 b70:	bl	86c <free@plt>
 b74:	ldr	r0, [r4, #8]
 b78:	ldr	r1, [r4, #4]
 b7c:	cmp	r0, #0
 b80:	beq	b90 <_moddeinit+0x5c>
 b84:	str	r1, [r0, #4]
 b88:	ldr	r1, [r4, #4]
 b8c:	b	b94 <_moddeinit+0x60>
 b90:	str	r1, [r5, #4]
 b94:	cmp	r1, #0
 b98:	mov	r2, r5
 b9c:	addne	r2, r1, #8
 ba0:	str	r0, [r2]
 ba4:	str	r6, [r4, #4]
 ba8:	str	r6, [r4, #8]
 bac:	ldr	r0, [r5, #8]
 bb0:	sub	r0, r0, #1
 bb4:	str	r0, [r5, #8]
 bb8:	mov	r0, r4
 bbc:	bl	884 <rb_free_rb_dlink_node@plt>
 bc0:	cmp	r7, #0
 bc4:	mov	r4, r7
 bc8:	bne	b58 <_moddeinit+0x24>
 bcc:	pop	{r4, r5, r6, r7, fp, pc}
 bd0:	.word	0x00011580
 bd4:	.word	0x0001156c

00000bd8 <create_aliases>:
 bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 bdc:	add	fp, sp, #28
 be0:	sub	sp, sp, #12
 be4:	ldr	r5, [pc, #316]	; d28 <create_aliases+0x150>
 be8:	add	r4, sp, #4
 bec:	mov	r1, r4
 bf0:	ldr	r5, [pc, r5]
 bf4:	ldr	r0, [r5]
 bf8:	bl	89c <rb_dictionary_foreach_start@plt>
 bfc:	ldr	r0, [r5]
 c00:	mov	r1, r4
 c04:	bl	8fc <rb_dictionary_foreach_cur@plt>
 c08:	cmp	r0, #0
 c0c:	beq	cfc <create_aliases+0x124>
 c10:	ldr	r8, [pc, #276]	; d2c <create_aliases+0x154>
 c14:	mov	r5, r0
 c18:	add	r9, sp, #4
 c1c:	add	r8, pc, r8
 c20:	ldr	r0, [r5]
 c24:	bl	8d8 <strlen@plt>
 c28:	add	r1, r0, #69	; 0x45
 c2c:	mov	r0, #1
 c30:	bl	83c <calloc@plt>
 c34:	cmp	r0, #0
 c38:	beq	d04 <create_aliases+0x12c>
 c3c:	ldr	r1, [r5]
 c40:	mov	sl, r0
 c44:	add	r0, r0, #68	; 0x44
 c48:	bl	890 <strcpy@plt>
 c4c:	mov	r1, sl
 c50:	str	r0, [r1], #20
 c54:	ldr	r0, [pc, #212]	; d30 <create_aliases+0x158>
 c58:	add	r0, pc, r0
 c5c:	ldm	r0!, {r2, r3, r4, r5, r6, r7}
 c60:	stmia	r1!, {r2, r3, r4, r5, r6, r7}
 c64:	ldm	r0, {r2, r3, r4, r5, r6, r7}
 c68:	mov	r0, sl
 c6c:	stm	r1, {r2, r3, r4, r5, r6, r7}
 c70:	bl	92c <mod_add_cmd@plt>
 c74:	bl	8c0 <rb_make_rb_dlink_node@plt>
 c78:	cmp	r0, #0
 c7c:	beq	d08 <create_aliases+0x130>
 c80:	mov	r1, #0
 c84:	str	r1, [r0, #4]
 c88:	str	sl, [r0]
 c8c:	ldr	r1, [pc, #160]	; d34 <create_aliases+0x15c>
 c90:	ldr	r1, [pc, r1]
 c94:	cmp	r1, #0
 c98:	str	r1, [r0, #8]
 c9c:	beq	cac <create_aliases+0xd4>
 ca0:	add	r1, r1, #4
 ca4:	str	r0, [r1]
 ca8:	b	cbc <create_aliases+0xe4>
 cac:	mov	r1, r8
 cb0:	ldr	r2, [r1, #4]!
 cb4:	cmp	r2, #0
 cb8:	streq	r0, [r1]
 cbc:	str	r0, [r8]
 cc0:	mov	r1, r9
 cc4:	ldr	r0, [r8, #8]
 cc8:	add	r0, r0, #1
 ccc:	str	r0, [r8, #8]
 cd0:	ldr	r0, [pc, #96]	; d38 <create_aliases+0x160>
 cd4:	ldr	r0, [pc, r0]
 cd8:	mov	r4, r0
 cdc:	ldr	r0, [r0]
 ce0:	bl	920 <rb_dictionary_foreach_next@plt>
 ce4:	ldr	r0, [r4]
 ce8:	mov	r1, r9
 cec:	bl	8fc <rb_dictionary_foreach_cur@plt>
 cf0:	mov	r5, r0
 cf4:	cmp	r0, #0
 cf8:	bne	c20 <create_aliases+0x48>
 cfc:	sub	sp, fp, #28
 d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d04:	bl	878 <rb_outofmemory@plt>
 d08:	ldr	r0, [pc, #44]	; d3c <create_aliases+0x164>
 d0c:	ldr	r1, [pc, #44]	; d40 <create_aliases+0x168>
 d10:	ldr	r3, [pc, #44]	; d44 <create_aliases+0x16c>
 d14:	mov	r2, #144	; 0x90
 d18:	add	r0, pc, r0
 d1c:	add	r1, pc, r1
 d20:	add	r3, pc, r3
 d24:	bl	944 <__assert_fail@plt>
 d28:	.word	0x00011478
 d2c:	.word	0x000114a4
 d30:	.word	0x00011268
 d34:	.word	0x00011430
 d38:	.word	0x00011394
 d3c:	.word	0x00000317
 d40:	.word	0x000002bc
 d44:	.word	0x000002d4

00000d48 <m_alias>:
 d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 d4c:	add	fp, sp, #28
 d50:	sub	sp, sp, #4
 d54:	mov	r4, r1
 d58:	mov	r7, r0
 d5c:	ldr	r1, [r0, #192]	; 0xc0
 d60:	ldr	r0, [pc, #472]	; f40 <m_alias+0x1f8>
 d64:	ldr	r0, [pc, r0]
 d68:	ldr	r0, [r0]
 d6c:	bl	938 <rb_dictionary_retrieve@plt>
 d70:	cmp	r0, #0
 d74:	beq	de8 <m_alias+0xa0>
 d78:	mov	r5, r0
 d7c:	ldrb	r0, [r4, #65]	; 0x41
 d80:	ldr	sl, [fp, #8]
 d84:	tst	r0, #1
 d88:	bne	da4 <m_alias+0x5c>
 d8c:	ldr	r0, [r4, #432]	; 0x1b0
 d90:	ldr	r0, [r0, #116]	; 0x74
 d94:	cmp	r0, #21
 d98:	bcc	da4 <m_alias+0x5c>
 d9c:	mov	r0, r4
 da0:	bl	914 <flood_endgrace@plt>
 da4:	ldr	r6, [r5, #4]
 da8:	mov	r1, #64	; 0x40
 dac:	mov	r0, r6
 db0:	bl	8e4 <strchr@plt>
 db4:	mov	r9, r0
 db8:	cmp	r0, #0
 dbc:	beq	e28 <m_alias+0xe0>
 dc0:	add	r1, r9, #1
 dc4:	mov	r0, #0
 dc8:	bl	8f0 <find_server@plt>
 dcc:	cmp	r0, #0
 dd0:	beq	e48 <m_alias+0x100>
 dd4:	mov	r8, r0
 dd8:	ldrh	r0, [r0, #80]	; 0x50
 ddc:	cmp	r0, #4
 de0:	beq	e48 <m_alias+0x100>
 de4:	b	e68 <m_alias+0x120>
 de8:	ldrh	r0, [r4, #80]	; 0x50
 dec:	cmp	r0, #64	; 0x40
 df0:	bne	f38 <m_alias+0x1f0>
 df4:	ldr	r0, [r4, #24]
 df8:	cmp	r0, #0
 dfc:	beq	f38 <m_alias+0x1f0>
 e00:	ldr	r0, [r7, #192]	; 0xc0
 e04:	add	r3, r4, #88	; 0x58
 e08:	str	r0, [sp]
 e0c:	ldr	r0, [pc, #304]	; f44 <m_alias+0x1fc>
 e10:	ldr	r0, [pc, r0]
 e14:	ldr	r1, [pc, #300]	; f48 <m_alias+0x200>
 e18:	add	r2, r0, #88	; 0x58
 e1c:	add	r1, pc, r1
 e20:	mov	r0, r4
 e24:	b	f34 <m_alias+0x1ec>
 e28:	mov	r0, r6
 e2c:	bl	908 <find_named_person@plt>
 e30:	cmp	r0, #0
 e34:	beq	e48 <m_alias+0x100>
 e38:	mov	r8, r0
 e3c:	ldrb	r0, [r0, #56]	; 0x38
 e40:	tst	r0, #64	; 0x40
 e44:	bne	e68 <m_alias+0x120>
 e48:	ldr	r3, [r5, #4]
 e4c:	ldr	r2, [pc, #248]	; f4c <m_alias+0x204>
 e50:	mov	r0, r4
 e54:	mov	r1, #440	; 0x1b8
 e58:	add	r2, pc, r2
 e5c:	sub	sp, fp, #28
 e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 e64:	b	8cc <sendto_one_numeric@plt>
 e68:	mov	r0, r7
 e6c:	mov	r1, #1
 e70:	bl	8a8 <msgbuf_reconstruct_tail@plt>
 e74:	ldr	r0, [sl, #4]
 e78:	cmp	r0, #0
 e7c:	beq	eb8 <m_alias+0x170>
 e80:	ldrb	r1, [r0]
 e84:	cmp	r1, #0
 e88:	beq	eb8 <m_alias+0x170>
 e8c:	ldr	r1, [r8, #36]	; 0x24
 e90:	ldrh	r2, [r1, #80]	; 0x50
 e94:	cmp	r2, #32
 e98:	bne	ee0 <m_alias+0x198>
 e9c:	ldrb	r3, [r1, #396]	; 0x18c
 ea0:	cmp	r3, #0
 ea4:	beq	ee0 <m_alias+0x198>
 ea8:	ldrb	r3, [r4, #396]!	; 0x18c
 eac:	cmp	r3, #0
 eb0:	subeq	r4, r4, #308	; 0x134
 eb4:	b	ee4 <m_alias+0x19c>
 eb8:	ldr	r0, [pc, #148]	; f54 <m_alias+0x20c>
 ebc:	add	r3, r8, #88	; 0x58
 ec0:	ldr	r0, [pc, r0]
 ec4:	ldr	r1, [pc, #140]	; f58 <m_alias+0x210>
 ec8:	add	r2, r0, #88	; 0x58
 ecc:	add	r1, pc, r1
 ed0:	mov	r0, r4
 ed4:	sub	sp, fp, #28
 ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 edc:	b	860 <sendto_one@plt>
 ee0:	add	r4, r4, #88	; 0x58
 ee4:	cmp	r9, #0
 ee8:	beq	ef4 <m_alias+0x1ac>
 eec:	ldr	r3, [r5, #4]
 ef0:	b	f20 <m_alias+0x1d8>
 ef4:	cmp	r2, #32
 ef8:	bne	f1c <m_alias+0x1d4>
 efc:	ldrb	r1, [r1, #396]	; 0x18c
 f00:	cmp	r1, #0
 f04:	beq	f1c <m_alias+0x1d4>
 f08:	mov	r3, r8
 f0c:	ldrb	r1, [r3, #396]!	; 0x18c
 f10:	cmp	r1, #0
 f14:	subeq	r3, r3, #308	; 0x134
 f18:	b	f20 <m_alias+0x1d8>
 f1c:	add	r3, r8, #88	; 0x58
 f20:	str	r0, [sp]
 f24:	mov	r0, r8
 f28:	mov	r2, r4
 f2c:	ldr	r1, [pc, #28]	; f50 <m_alias+0x208>
 f30:	add	r1, pc, r1
 f34:	bl	860 <sendto_one@plt>
 f38:	sub	sp, fp, #28
 f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 f40:	.word	0x00011304
 f44:	.word	0x00011264
 f48:	.word	0x00000147
 f4c:	.word	0x0000012a
 f50:	.word	0x00000095
 f54:	.word	0x000111b4
 f58:	.word	0x000000dd

Disassembly of section .fini:

00000f5c <_fini>:
 f5c:	push	{r3, lr}
 f60:	pop	{r3, pc}
