
../repos/charybdis/extensions/.libs/ip_cloaking_4.0.so:     file format elf32-littlearm


Disassembly of section .init:

0000061c <_init>:
 61c:	push	{r3, lr}
 620:	bl	6fc <call_weak_fn>
 624:	pop	{r3, pc}

Disassembly of section .plt:

00000628 <.plt>:
 628:	push	{lr}		; (str lr, [sp, #-4]!)
 62c:	ldr	lr, [pc, #4]	; 638 <.plt+0x10>
 630:	add	lr, pc, lr
 634:	ldr	pc, [lr, #8]!
 638:	.word	0x000119c8

0000063c <calloc@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #69632	; 0x11000
 644:	ldr	pc, [ip, #2504]!	; 0x9c8

00000648 <raise@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #69632	; 0x11000
 650:	ldr	pc, [ip, #2496]!	; 0x9c0

00000654 <strcmp@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #69632	; 0x11000
 65c:	ldr	pc, [ip, #2488]!	; 0x9b8

00000660 <__cxa_finalize@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2480]!	; 0x9b0

0000066c <rb_outofmemory@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2472]!	; 0x9a8

00000678 <find_umode_slot@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2464]!	; 0x9a0

00000684 <fnv_hash@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2456]!	; 0x998

00000690 <sendto_server@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2448]!	; 0x990

0000069c <__gmon_start__@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2440]!	; 0x988

000006a8 <__ctype_b_loc@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2432]!	; 0x980

000006b4 <sendto_one_numeric@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2424]!	; 0x978

000006c0 <strchr@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2416]!	; 0x970

000006cc <change_nick_user_host@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2408]!	; 0x968

000006d8 <rb_strlcpy@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2400]!	; 0x960

000006e4 <irccmp@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2392]!	; 0x958

000006f0 <construct_umodebuf@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2384]!	; 0x950

Disassembly of section .text:

000006fc <call_weak_fn>:
     6fc:	ldr	r3, [pc, #20]	; 718 <call_weak_fn+0x1c>
     700:	ldr	r2, [pc, #20]	; 71c <call_weak_fn+0x20>
     704:	add	r3, pc, r3
     708:	ldr	r2, [r3, r2]
     70c:	cmp	r2, #0
     710:	bxeq	lr
     714:	b	69c <__gmon_start__@plt>
     718:	.word	0x000118f4
     71c:	.word	0x0000005c

00000720 <deregister_tm_clones>:
     720:	ldr	r3, [pc, #52]	; 75c <deregister_tm_clones+0x3c>
     724:	ldr	r0, [pc, #52]	; 760 <deregister_tm_clones+0x40>
     728:	add	r3, pc, r3
     72c:	add	r0, pc, r0
     730:	add	r3, r3, #3
     734:	sub	r3, r3, r0
     738:	cmp	r3, #6
     73c:	ldr	r3, [pc, #32]	; 764 <deregister_tm_clones+0x44>
     740:	add	r3, pc, r3
     744:	bxls	lr
     748:	ldr	r2, [pc, #24]	; 768 <deregister_tm_clones+0x48>
     74c:	ldr	r3, [r3, r2]
     750:	cmp	r3, #0
     754:	bxeq	lr
     758:	bx	r3
     75c:	.word	0x00011990
     760:	.word	0x0001198c
     764:	.word	0x000118b8
     768:	.word	0x00000050

0000076c <register_tm_clones>:
     76c:	ldr	r1, [pc, #56]	; 7ac <register_tm_clones+0x40>
     770:	ldr	r0, [pc, #56]	; 7b0 <register_tm_clones+0x44>
     774:	add	r1, pc, r1
     778:	add	r0, pc, r0
     77c:	sub	r1, r1, r0
     780:	ldr	r3, [pc, #44]	; 7b4 <register_tm_clones+0x48>
     784:	asr	r1, r1, #2
     788:	add	r3, pc, r3
     78c:	add	r1, r1, r1, lsr #31
     790:	asrs	r1, r1, #1
     794:	bxeq	lr
     798:	ldr	r2, [pc, #24]	; 7b8 <register_tm_clones+0x4c>
     79c:	ldr	r3, [r3, r2]
     7a0:	cmp	r3, #0
     7a4:	bxeq	lr
     7a8:	bx	r3
     7ac:	.word	0x00011944
     7b0:	.word	0x00011940
     7b4:	.word	0x00011870
     7b8:	.word	0x00000068

000007bc <__do_global_dtors_aux>:
     7bc:	ldr	r3, [pc, #76]	; 810 <__do_global_dtors_aux+0x54>
     7c0:	ldr	r2, [pc, #76]	; 814 <__do_global_dtors_aux+0x58>
     7c4:	add	r3, pc, r3
     7c8:	add	r2, pc, r2
     7cc:	ldrb	r3, [r3]
     7d0:	cmp	r3, #0
     7d4:	bxne	lr
     7d8:	ldr	r3, [pc, #56]	; 818 <__do_global_dtors_aux+0x5c>
     7dc:	push	{r4, lr}
     7e0:	ldr	r3, [r2, r3]
     7e4:	cmp	r3, #0
     7e8:	beq	7f8 <__do_global_dtors_aux+0x3c>
     7ec:	ldr	r3, [pc, #40]	; 81c <__do_global_dtors_aux+0x60>
     7f0:	ldr	r0, [pc, r3]
     7f4:	bl	660 <__cxa_finalize@plt>
     7f8:	bl	720 <deregister_tm_clones>
     7fc:	ldr	r3, [pc, #28]	; 820 <__do_global_dtors_aux+0x64>
     800:	mov	r2, #1
     804:	add	r3, pc, r3
     808:	strb	r2, [r3]
     80c:	pop	{r4, pc}
     810:	.word	0x000118f4
     814:	.word	0x00011830
     818:	.word	0x0000004c
     81c:	.word	0x00011878
     820:	.word	0x000118b4

00000824 <frame_dummy>:
     824:	ldr	r0, [pc, #56]	; 864 <frame_dummy+0x40>
     828:	ldr	r3, [pc, #56]	; 868 <frame_dummy+0x44>
     82c:	add	r0, pc, r0
     830:	ldr	r2, [r0]
     834:	add	r3, pc, r3
     838:	cmp	r2, #0
     83c:	bne	844 <frame_dummy+0x20>
     840:	b	76c <register_tm_clones>
     844:	ldr	r2, [pc, #32]	; 86c <frame_dummy+0x48>
     848:	ldr	r3, [r3, r2]
     84c:	cmp	r3, #0
     850:	beq	840 <frame_dummy+0x1c>
     854:	push	{r4, lr}
     858:	blx	r3
     85c:	pop	{r4, lr}
     860:	b	76c <register_tm_clones>
     864:	.word	0x000116c8
     868:	.word	0x000117c4
     86c:	.word	0x00000064

00000870 <distribute_hostchange>:
     870:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
     874:	add	r7, r0, #227	; 0xe3
     878:	ldr	r5, [pc, #308]	; 9b4 <distribute_hostchange+0x144>
     87c:	cmp	r7, r1
     880:	add	r5, pc, r5
     884:	mov	r4, r0
     888:	mov	r6, r1
     88c:	beq	9a4 <distribute_hostchange+0x134>
     890:	ldr	r2, [pc, #288]	; 9b8 <distribute_hostchange+0x148>
     894:	mov	r3, r1
     898:	add	r2, pc, r2
     89c:	mov	r1, #396	; 0x18c
     8a0:	bl	6b4 <sendto_one_numeric@plt>
     8a4:	ldr	r3, [pc, #272]	; 9bc <distribute_hostchange+0x14c>
     8a8:	ldrb	r1, [r4, #396]	; 0x18c
     8ac:	add	r8, r4, #88	; 0x58
     8b0:	ldr	r9, [r5, r3]
     8b4:	ldr	r3, [pc, #260]	; 9c0 <distribute_hostchange+0x150>
     8b8:	ldr	sl, [r5, r3]
     8bc:	ldr	r3, [r9]
     8c0:	ldr	r2, [sl]
     8c4:	orr	r2, r3, r2
     8c8:	ldr	r3, [pc, #244]	; 9c4 <distribute_hostchange+0x154>
     8cc:	ldr	r5, [r5, r3]
     8d0:	ldrb	r3, [r5, #396]	; 0x18c
     8d4:	str	r6, [sp, #12]
     8d8:	cmp	r3, #0
     8dc:	addeq	r3, r5, #88	; 0x58
     8e0:	addne	r3, r5, #396	; 0x18c
     8e4:	str	r3, [sp, #4]
     8e8:	ldr	r3, [pc, #216]	; 9c8 <distribute_hostchange+0x158>
     8ec:	cmp	r1, #0
     8f0:	add	r3, pc, r3
     8f4:	addne	r1, r4, #396	; 0x18c
     8f8:	moveq	r1, r8
     8fc:	str	r3, [sp]
     900:	mov	r3, #0
     904:	str	r1, [sp, #8]
     908:	mov	r0, r3
     90c:	mov	r1, r3
     910:	bl	690 <sendto_server@plt>
     914:	ldrb	r1, [r5, #396]	; 0x18c
     918:	ldr	r2, [sl]
     91c:	ldr	r3, [r9]
     920:	cmp	r1, #0
     924:	ldrb	r1, [r4, #396]	; 0x18c
     928:	addeq	r5, r5, #88	; 0x58
     92c:	addne	r5, r5, #396	; 0x18c
     930:	cmp	r1, #0
     934:	addne	r1, r4, #396	; 0x18c
     938:	moveq	r1, r8
     93c:	str	r1, [sp, #8]
     940:	ldr	r1, [pc, #132]	; 9cc <distribute_hostchange+0x15c>
     944:	str	r6, [sp, #12]
     948:	add	r1, pc, r1
     94c:	str	r1, [sp]
     950:	mov	r1, #0
     954:	mov	r0, r1
     958:	str	r5, [sp, #4]
     95c:	bl	690 <sendto_server@plt>
     960:	ldr	r3, [pc, #104]	; 9d0 <distribute_hostchange+0x160>
     964:	add	r2, r4, #152	; 0x98
     968:	add	r3, pc, r3
     96c:	str	r3, [sp, #4]
     970:	mov	r3, #0
     974:	str	r3, [sp]
     978:	mov	r1, r8
     97c:	mov	r3, r6
     980:	mov	r0, r4
     984:	bl	6cc <change_nick_user_host@plt>
     988:	ldrd	r2, [r4, #64]	; 0x40
     98c:	cmp	r7, r6
     990:	orrne	r2, r2, #131072	; 0x20000
     994:	biceq	r2, r2, #131072	; 0x20000
     998:	strd	r2, [r4, #64]	; 0x40
     99c:	add	sp, sp, #16
     9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     9a4:	ldr	r2, [pc, #40]	; 9d4 <distribute_hostchange+0x164>
     9a8:	mov	r3, r7
     9ac:	add	r2, pc, r2
     9b0:	b	89c <distribute_hostchange+0x2c>
     9b4:	.word	0x00011778
     9b8:	.word	0x00000854
     9bc:	.word	0x00000060
     9c0:	.word	0x00000054
     9c4:	.word	0x0000006c
     9c8:	.word	0x0000082b
     9cc:	.word	0x000007e6
     9d0:	.word	0x000007e1
     9d4:	.word	0x0000075c

000009d8 <check_umode_change>:
     9d8:	push	{r4, r5, r6, r7, r8, lr}
     9dc:	mov	r7, #0
     9e0:	ldr	r4, [r0]
     9e4:	ldr	r1, [pc, #252]	; ae8 <check_umode_change+0x110>
     9e8:	ldrd	r2, [r4, #64]	; 0x40
     9ec:	add	r1, pc, r1
     9f0:	and	r6, r2, #8192	; 0x2000
     9f4:	orrs	ip, r6, r7
     9f8:	popeq	{r4, r5, r6, r7, r8, pc}
     9fc:	ldrh	ip, [r4, #80]	; 0x50
     a00:	cmp	ip, #64	; 0x40
     a04:	popne	{r4, r5, r6, r7, r8, pc}
     a08:	ldr	ip, [pc, #220]	; aec <check_umode_change+0x114>
     a0c:	ldr	r5, [r4, #56]	; 0x38
     a10:	ldr	r1, [r1, ip]
     a14:	ldr	r8, [r1, #480]	; 0x1e0
     a18:	ldr	r1, [r0, #4]
     a1c:	eor	r1, r1, r5
     a20:	tst	r1, r8
     a24:	popeq	{r4, r5, r6, r7, r8, pc}
     a28:	tst	r5, r8
     a2c:	beq	ab8 <check_umode_change+0xe0>
     a30:	and	r0, r2, #16777216	; 0x1000000
     a34:	mov	r1, #0
     a38:	orrs	r1, r0, r1
     a3c:	bne	a78 <check_umode_change+0xa0>
     a40:	ldr	r1, [r4, #432]	; 0x1b0
     a44:	ldr	r6, [r1, #432]	; 0x1b0
     a48:	cmp	r6, #0
     a4c:	beq	a78 <check_umode_change+0xa0>
     a50:	and	r2, r2, #131072	; 0x20000
     a54:	mov	r3, #0
     a58:	orrs	r3, r2, r3
     a5c:	add	r7, r4, #163	; 0xa3
     a60:	beq	a84 <check_umode_change+0xac>
     a64:	mov	r1, r6
     a68:	mov	r0, r7
     a6c:	bl	654 <strcmp@plt>
     a70:	cmp	r0, #0
     a74:	beq	a84 <check_umode_change+0xac>
     a78:	bic	r5, r5, r8
     a7c:	str	r5, [r4, #56]	; 0x38
     a80:	pop	{r4, r5, r6, r7, r8, pc}
     a84:	mov	r1, r6
     a88:	mov	r0, r7
     a8c:	bl	654 <strcmp@plt>
     a90:	cmp	r0, #0
     a94:	movne	r1, r6
     a98:	bne	adc <check_umode_change+0x104>
     a9c:	ldr	r2, [pc, #76]	; af0 <check_umode_change+0x118>
     aa0:	mov	r3, r7
     aa4:	mov	r0, r4
     aa8:	add	r2, pc, r2
     aac:	mov	r1, #396	; 0x18c
     ab0:	pop	{r4, r5, r6, r7, r8, lr}
     ab4:	b	6b4 <sendto_one_numeric@plt>
     ab8:	ldr	r3, [r4, #432]	; 0x1b0
     abc:	ldr	r1, [r3, #432]	; 0x1b0
     ac0:	cmp	r1, #0
     ac4:	popeq	{r4, r5, r6, r7, r8, pc}
     ac8:	add	r0, r4, #163	; 0xa3
     acc:	bl	654 <strcmp@plt>
     ad0:	cmp	r0, #0
     ad4:	popne	{r4, r5, r6, r7, r8, pc}
     ad8:	add	r1, r4, #227	; 0xe3
     adc:	mov	r0, r4
     ae0:	pop	{r4, r5, r6, r7, r8, lr}
     ae4:	b	870 <distribute_hostchange>
     ae8:	.word	0x0001160c
     aec:	.word	0x00000058
     af0:	.word	0x00000644

00000af4 <_moddeinit>:
     af4:	ldr	r3, [pc, #20]	; b10 <_moddeinit+0x1c>
     af8:	ldr	r2, [pc, #20]	; b14 <_moddeinit+0x20>
     afc:	add	r3, pc, r3
     b00:	ldr	r3, [r3, r2]
     b04:	mov	r2, #0
     b08:	str	r2, [r3, #480]	; 0x1e0
     b0c:	b	6f0 <construct_umodebuf@plt>
     b10:	.word	0x000114fc
     b14:	.word	0x00000058

00000b18 <_modinit>:
     b18:	push	{r4, lr}
     b1c:	bl	678 <find_umode_slot@plt>
     b20:	ldr	r4, [pc, #24]	; b40 <_modinit+0x28>
     b24:	ldr	r3, [pc, #24]	; b44 <_modinit+0x2c>
     b28:	add	r4, pc, r4
     b2c:	ldr	r3, [r4, r3]
     b30:	str	r0, [r3, #480]	; 0x1e0
     b34:	bl	6f0 <construct_umodebuf@plt>
     b38:	mov	r0, #0
     b3c:	pop	{r4, pc}
     b40:	.word	0x000114d0
     b44:	.word	0x00000058

00000b48 <check_new_user>:
     b48:	ldrd	r2, [r0, #64]	; 0x40
     b4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     b50:	mov	r3, #0
     b54:	ldr	r7, [pc, #808]	; e84 <check_new_user+0x33c>
     b58:	and	r2, r2, #16777216	; 0x1000000
     b5c:	orrs	r3, r2, r3
     b60:	add	r7, pc, r7
     b64:	sub	sp, sp, #44	; 0x2c
     b68:	beq	b8c <check_new_user+0x44>
     b6c:	ldr	r3, [pc, #788]	; e88 <check_new_user+0x340>
     b70:	ldr	r3, [r7, r3]
     b74:	ldr	r2, [r3, #480]	; 0x1e0
     b78:	ldr	r3, [r0, #56]	; 0x38
     b7c:	bic	r3, r3, r2
     b80:	str	r3, [r0, #56]	; 0x38
     b84:	add	sp, sp, #44	; 0x2c
     b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b8c:	ldr	r5, [r0, #432]	; 0x1b0
     b90:	mov	r4, r0
     b94:	mov	r1, #64	; 0x40
     b98:	mov	r0, #1
     b9c:	bl	63c <calloc@plt>
     ba0:	cmp	r0, #0
     ba4:	bne	bac <check_new_user+0x64>
     ba8:	bl	66c <rb_outofmemory@plt>
     bac:	add	r6, r4, #227	; 0xe3
     bb0:	add	r1, r4, #288	; 0x120
     bb4:	str	r0, [r5, #432]	; 0x1b0
     bb8:	add	r1, r1, #3
     bbc:	mov	r0, r6
     bc0:	bl	6e4 <irccmp@plt>
     bc4:	ldr	r2, [r4, #432]	; 0x1b0
     bc8:	add	r3, sp, #12
     bcc:	ldr	r5, [r2, #432]	; 0x1b0
     bd0:	subs	r8, r0, #0
     bd4:	bne	d7c <check_new_user+0x234>
     bd8:	ldr	r2, [pc, #684]	; e8c <check_new_user+0x344>
     bdc:	add	r2, pc, r2
     be0:	add	lr, r2, #16
     be4:	ldr	r0, [r2]
     be8:	ldr	r1, [r2, #4]
     bec:	mov	ip, r3
     bf0:	add	r2, r2, #8
     bf4:	cmp	r2, lr
     bf8:	stmia	ip!, {r0, r1}
     bfc:	mov	r3, ip
     c00:	bne	be4 <check_new_user+0x9c>
     c04:	ldr	r0, [r2]
     c08:	ldrb	r2, [r2, #4]
     c0c:	str	r0, [ip]
     c10:	mov	r1, #32
     c14:	strb	r2, [ip, #4]
     c18:	mov	r0, r6
     c1c:	bl	684 <fnv_hash@plt>
     c20:	mov	r2, #64	; 0x40
     c24:	mov	r1, r6
     c28:	mov	fp, r0
     c2c:	mov	r0, r5
     c30:	bl	6d8 <rb_strlcpy@plt>
     c34:	mov	r1, #58	; 0x3a
     c38:	mov	r0, r5
     c3c:	bl	6c0 <strchr@plt>
     c40:	cmp	r0, #0
     c44:	subne	r2, r5, #1
     c48:	movne	r9, r8
     c4c:	bne	c78 <check_new_user+0x130>
     c50:	mov	r1, #46	; 0x2e
     c54:	mov	r0, r5
     c58:	bl	6c0 <strchr@plt>
     c5c:	cmp	r0, #0
     c60:	beq	ca4 <check_new_user+0x15c>
     c64:	mov	sl, r8
     c68:	mov	r9, r8
     c6c:	b	c88 <check_new_user+0x140>
     c70:	cmp	r3, #58	; 0x3a
     c74:	addeq	r9, r9, #1
     c78:	ldrb	r3, [r2, #1]!
     c7c:	cmp	r3, #0
     c80:	bne	c70 <check_new_user+0x128>
     c84:	mov	sl, #1
     c88:	eor	r3, sl, #1
     c8c:	asr	r9, r9, #1
     c90:	and	r3, r3, #1
     c94:	mov	r2, #20
     c98:	ldrb	r0, [r5]
     c9c:	cmp	r0, #0
     ca0:	bne	d14 <check_new_user+0x1cc>
     ca4:	ldrd	r2, [r4, #64]	; 0x40
     ca8:	mov	r3, #0
     cac:	and	r2, r2, #131072	; 0x20000
     cb0:	orrs	r3, r2, r3
     cb4:	ldr	r3, [pc, #460]	; e88 <check_new_user+0x340>
     cb8:	ldr	r2, [r7, r3]
     cbc:	ldrne	r3, [r4, #56]	; 0x38
     cc0:	ldrne	r1, [r2, #480]	; 0x1e0
     cc4:	bicne	r3, r3, r1
     cc8:	strne	r3, [r4, #56]	; 0x38
     ccc:	ldr	r1, [r4, #56]	; 0x38
     cd0:	ldr	r3, [r2, #480]	; 0x1e0
     cd4:	tst	r1, r3
     cd8:	beq	b84 <check_new_user+0x3c>
     cdc:	ldr	r3, [r4, #432]	; 0x1b0
     ce0:	add	r5, r4, #163	; 0xa3
     ce4:	mov	r2, #64	; 0x40
     ce8:	ldr	r1, [r3, #432]	; 0x1b0
     cec:	mov	r0, r5
     cf0:	bl	6d8 <rb_strlcpy@plt>
     cf4:	mov	r1, r6
     cf8:	mov	r0, r5
     cfc:	bl	6e4 <irccmp@plt>
     d00:	cmp	r0, #0
     d04:	ldrdne	r2, [r4, #64]	; 0x40
     d08:	orrne	r2, r2, #131072	; 0x20000
     d0c:	strdne	r2, [r4, #64]	; 0x40
     d10:	b	b84 <check_new_user+0x3c>
     d14:	cmp	r0, #46	; 0x2e
     d18:	cmpne	r0, #58	; 0x3a
     d1c:	addeq	r8, r8, #1
     d20:	beq	d74 <check_new_user+0x22c>
     d24:	cmp	sl, #0
     d28:	beq	d34 <check_new_user+0x1ec>
     d2c:	cmp	r8, r9
     d30:	blt	d74 <check_new_user+0x22c>
     d34:	cmp	r8, #1
     d38:	movgt	r1, #0
     d3c:	andle	r1, r3, #1
     d40:	cmp	r1, #0
     d44:	bne	d74 <check_new_user+0x22c>
     d48:	mov	r1, r2
     d4c:	add	r0, r0, fp
     d50:	str	r3, [sp, #4]
     d54:	str	r2, [sp]
     d58:	bl	1080 <__aeabi_uidivmod>
     d5c:	add	r3, sp, #40	; 0x28
     d60:	ror	fp, fp, #31
     d64:	add	r1, r3, r1
     d68:	ldm	sp, {r2, r3}
     d6c:	ldrb	r1, [r1, #-28]	; 0xffffffe4
     d70:	strb	r1, [r5]
     d74:	add	r5, r5, #1
     d78:	b	c98 <check_new_user+0x150>
     d7c:	ldr	r2, [pc, #268]	; e90 <check_new_user+0x348>
     d80:	add	r2, pc, r2
     d84:	add	lr, r2, #24
     d88:	ldr	r0, [r2]
     d8c:	ldr	r1, [r2, #4]
     d90:	mov	ip, r3
     d94:	add	r2, r2, #8
     d98:	cmp	r2, lr
     d9c:	stmia	ip!, {r0, r1}
     da0:	mov	r3, ip
     da4:	bne	d88 <check_new_user+0x240>
     da8:	ldrh	r1, [r2]
     dac:	ldrb	r2, [r2, #2]
     db0:	mov	r0, r6
     db4:	strh	r1, [ip]
     db8:	strb	r2, [ip, #2]
     dbc:	mov	r1, #32
     dc0:	bl	684 <fnv_hash@plt>
     dc4:	mov	r2, #64	; 0x40
     dc8:	mov	r1, r6
     dcc:	mov	fp, r5
     dd0:	mov	sl, #26
     dd4:	mov	r8, r0
     dd8:	mov	r0, r5
     ddc:	bl	6d8 <rb_strlcpy@plt>
     de0:	ldrb	r9, [fp]
     de4:	cmp	r9, #0
     de8:	cmpne	r9, #46	; 0x2e
     dec:	bne	e38 <check_new_user+0x2f0>
     df0:	mov	sl, #10
     df4:	ldrb	r9, [r5]
     df8:	cmp	r9, #0
     dfc:	beq	ca4 <check_new_user+0x15c>
     e00:	bl	6a8 <__ctype_b_loc@plt>
     e04:	lsl	r3, r9, #1
     e08:	ldr	r2, [r0]
     e0c:	ldrh	r3, [r2, r3]
     e10:	tst	r3, #2048	; 0x800
     e14:	beq	e2c <check_new_user+0x2e4>
     e18:	mov	r1, sl
     e1c:	add	r0, r9, r8
     e20:	bl	1080 <__aeabi_uidivmod>
     e24:	add	r1, r1, #48	; 0x30
     e28:	strb	r1, [r5]
     e2c:	ror	r8, r8, #31
     e30:	add	r5, r5, #1
     e34:	b	df4 <check_new_user+0x2ac>
     e38:	bl	6a8 <__ctype_b_loc@plt>
     e3c:	lsl	r3, r9, #1
     e40:	ldr	r2, [r0]
     e44:	ldrh	r3, [r2, r3]
     e48:	lsr	r3, r3, #11
     e4c:	cmp	r9, #45	; 0x2d
     e50:	orreq	r3, r3, #1
     e54:	tst	r3, #1
     e58:	bne	e7c <check_new_user+0x334>
     e5c:	add	r0, r9, r8
     e60:	mov	r1, sl
     e64:	bl	1080 <__aeabi_uidivmod>
     e68:	add	r3, sp, #40	; 0x28
     e6c:	ror	r8, r8, #31
     e70:	add	r1, r3, r1
     e74:	ldrb	r3, [r1, #-28]	; 0xffffffe4
     e78:	strb	r3, [fp]
     e7c:	add	fp, fp, #1
     e80:	b	de0 <check_new_user+0x298>
     e84:	.word	0x00011498
     e88:	.word	0x00000058
     e8c:	.word	0x00000581
     e90:	.word	0x000003d7

00000e94 <__udivsi3>:
     e94:	subs	r2, r1, #1
     e98:	bxeq	lr
     e9c:	bcc	1074 <__udivsi3+0x1e0>
     ea0:	cmp	r0, r1
     ea4:	bls	1058 <__udivsi3+0x1c4>
     ea8:	tst	r1, r2
     eac:	beq	1064 <__udivsi3+0x1d0>
     eb0:	clz	r3, r0
     eb4:	clz	r2, r1
     eb8:	sub	r3, r2, r3
     ebc:	rsbs	r3, r3, #31
     ec0:	addne	r3, r3, r3, lsl #1
     ec4:	mov	r2, #0
     ec8:	addne	pc, pc, r3, lsl #2
     ecc:	nop			; (mov r0, r0)
     ed0:	cmp	r0, r1, lsl #31
     ed4:	adc	r2, r2, r2
     ed8:	subcs	r0, r0, r1, lsl #31
     edc:	cmp	r0, r1, lsl #30
     ee0:	adc	r2, r2, r2
     ee4:	subcs	r0, r0, r1, lsl #30
     ee8:	cmp	r0, r1, lsl #29
     eec:	adc	r2, r2, r2
     ef0:	subcs	r0, r0, r1, lsl #29
     ef4:	cmp	r0, r1, lsl #28
     ef8:	adc	r2, r2, r2
     efc:	subcs	r0, r0, r1, lsl #28
     f00:	cmp	r0, r1, lsl #27
     f04:	adc	r2, r2, r2
     f08:	subcs	r0, r0, r1, lsl #27
     f0c:	cmp	r0, r1, lsl #26
     f10:	adc	r2, r2, r2
     f14:	subcs	r0, r0, r1, lsl #26
     f18:	cmp	r0, r1, lsl #25
     f1c:	adc	r2, r2, r2
     f20:	subcs	r0, r0, r1, lsl #25
     f24:	cmp	r0, r1, lsl #24
     f28:	adc	r2, r2, r2
     f2c:	subcs	r0, r0, r1, lsl #24
     f30:	cmp	r0, r1, lsl #23
     f34:	adc	r2, r2, r2
     f38:	subcs	r0, r0, r1, lsl #23
     f3c:	cmp	r0, r1, lsl #22
     f40:	adc	r2, r2, r2
     f44:	subcs	r0, r0, r1, lsl #22
     f48:	cmp	r0, r1, lsl #21
     f4c:	adc	r2, r2, r2
     f50:	subcs	r0, r0, r1, lsl #21
     f54:	cmp	r0, r1, lsl #20
     f58:	adc	r2, r2, r2
     f5c:	subcs	r0, r0, r1, lsl #20
     f60:	cmp	r0, r1, lsl #19
     f64:	adc	r2, r2, r2
     f68:	subcs	r0, r0, r1, lsl #19
     f6c:	cmp	r0, r1, lsl #18
     f70:	adc	r2, r2, r2
     f74:	subcs	r0, r0, r1, lsl #18
     f78:	cmp	r0, r1, lsl #17
     f7c:	adc	r2, r2, r2
     f80:	subcs	r0, r0, r1, lsl #17
     f84:	cmp	r0, r1, lsl #16
     f88:	adc	r2, r2, r2
     f8c:	subcs	r0, r0, r1, lsl #16
     f90:	cmp	r0, r1, lsl #15
     f94:	adc	r2, r2, r2
     f98:	subcs	r0, r0, r1, lsl #15
     f9c:	cmp	r0, r1, lsl #14
     fa0:	adc	r2, r2, r2
     fa4:	subcs	r0, r0, r1, lsl #14
     fa8:	cmp	r0, r1, lsl #13
     fac:	adc	r2, r2, r2
     fb0:	subcs	r0, r0, r1, lsl #13
     fb4:	cmp	r0, r1, lsl #12
     fb8:	adc	r2, r2, r2
     fbc:	subcs	r0, r0, r1, lsl #12
     fc0:	cmp	r0, r1, lsl #11
     fc4:	adc	r2, r2, r2
     fc8:	subcs	r0, r0, r1, lsl #11
     fcc:	cmp	r0, r1, lsl #10
     fd0:	adc	r2, r2, r2
     fd4:	subcs	r0, r0, r1, lsl #10
     fd8:	cmp	r0, r1, lsl #9
     fdc:	adc	r2, r2, r2
     fe0:	subcs	r0, r0, r1, lsl #9
     fe4:	cmp	r0, r1, lsl #8
     fe8:	adc	r2, r2, r2
     fec:	subcs	r0, r0, r1, lsl #8
     ff0:	cmp	r0, r1, lsl #7
     ff4:	adc	r2, r2, r2
     ff8:	subcs	r0, r0, r1, lsl #7
     ffc:	cmp	r0, r1, lsl #6
    1000:	adc	r2, r2, r2
    1004:	subcs	r0, r0, r1, lsl #6
    1008:	cmp	r0, r1, lsl #5
    100c:	adc	r2, r2, r2
    1010:	subcs	r0, r0, r1, lsl #5
    1014:	cmp	r0, r1, lsl #4
    1018:	adc	r2, r2, r2
    101c:	subcs	r0, r0, r1, lsl #4
    1020:	cmp	r0, r1, lsl #3
    1024:	adc	r2, r2, r2
    1028:	subcs	r0, r0, r1, lsl #3
    102c:	cmp	r0, r1, lsl #2
    1030:	adc	r2, r2, r2
    1034:	subcs	r0, r0, r1, lsl #2
    1038:	cmp	r0, r1, lsl #1
    103c:	adc	r2, r2, r2
    1040:	subcs	r0, r0, r1, lsl #1
    1044:	cmp	r0, r1
    1048:	adc	r2, r2, r2
    104c:	subcs	r0, r0, r1
    1050:	mov	r0, r2
    1054:	bx	lr
    1058:	moveq	r0, #1
    105c:	movne	r0, #0
    1060:	bx	lr
    1064:	clz	r2, r1
    1068:	rsb	r2, r2, #31
    106c:	lsr	r0, r0, r2
    1070:	bx	lr
    1074:	cmp	r0, #0
    1078:	mvnne	r0, #0
    107c:	b	10a0 <__aeabi_idiv0>

00001080 <__aeabi_uidivmod>:
    1080:	cmp	r1, #0
    1084:	beq	1074 <__udivsi3+0x1e0>
    1088:	push	{r0, r1, lr}
    108c:	bl	e94 <__udivsi3>
    1090:	pop	{r1, r2, lr}
    1094:	mul	r3, r2, r0
    1098:	sub	r1, r1, r3
    109c:	bx	lr

000010a0 <__aeabi_idiv0>:
    10a0:	push	{r1, lr}
    10a4:	mov	r0, #8
    10a8:	bl	648 <raise@plt>
    10ac:	pop	{r1, pc}

Disassembly of section .fini:

000010b0 <_fini>:
    10b0:	push	{r3, lr}
    10b4:	pop	{r3, pc}
