
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011f60 <.init>:
   11f60:	push	{r3, lr}
   11f64:	bl	1207c <_start@@Base+0x3c>
   11f68:	pop	{r3, pc}

Disassembly of section .plt:

00011f6c <strcmp@plt-0x14>:
   11f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f70:	ldr	lr, [pc, #4]	; 11f7c <strcmp@plt-0x4>
   11f74:	add	lr, pc, lr
   11f78:	ldr	pc, [lr, #8]!
   11f7c:	andeq	r4, r1, r4, lsl #1

00011f80 <strcmp@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #20, 20	; 0x14000
   11f88:	ldr	pc, [ip, #132]!	; 0x84

00011f8c <printf@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #20, 20	; 0x14000
   11f94:	ldr	pc, [ip, #124]!	; 0x7c

00011f98 <free@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #20, 20	; 0x14000
   11fa0:	ldr	pc, [ip, #116]!	; 0x74

00011fa4 <time@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #20, 20	; 0x14000
   11fac:	ldr	pc, [ip, #108]!	; 0x6c

00011fb0 <realloc@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #20, 20	; 0x14000
   11fb8:	ldr	pc, [ip, #100]!	; 0x64

00011fbc <strcpy@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #92]!	; 0x5c

00011fc8 <malloc@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #84]!	; 0x54

00011fd4 <__libc_start_main@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #76]!	; 0x4c

00011fe0 <__gmon_start__@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #68]!	; 0x44

00011fec <strlen@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #60]!	; 0x3c

00011ff8 <srand@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #52]!	; 0x34

00012004 <snprintf@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #44]!	; 0x2c

00012010 <__isoc99_sscanf@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #36]!	; 0x24

0001201c <strncpy@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #28]!

00012028 <rand@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #20]!

00012034 <abort@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #20, 20	; 0x14000
   1203c:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00012040 <_start@@Base>:
   12040:	mov	fp, #0
   12044:	mov	lr, #0
   12048:	pop	{r1}		; (ldr r1, [sp], #4)
   1204c:	mov	r2, sp
   12050:	push	{r2}		; (str r2, [sp, #-4]!)
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	ip, [pc, #16]	; 12070 <_start@@Base+0x30>
   1205c:	push	{ip}		; (str ip, [sp, #-4]!)
   12060:	ldr	r0, [pc, #12]	; 12074 <_start@@Base+0x34>
   12064:	ldr	r3, [pc, #12]	; 12078 <_start@@Base+0x38>
   12068:	bl	11fd4 <__libc_start_main@plt>
   1206c:	bl	12034 <abort@plt>
   12070:	andeq	r5, r1, r8, asr r8
   12074:	andeq	r2, r1, r0, lsr r1
   12078:	strdeq	r5, [r1], -r8
   1207c:	ldr	r3, [pc, #20]	; 12098 <_start@@Base+0x58>
   12080:	ldr	r2, [pc, #20]	; 1209c <_start@@Base+0x5c>
   12084:	add	r3, pc, r3
   12088:	ldr	r2, [r3, r2]
   1208c:	cmp	r2, #0
   12090:	bxeq	lr
   12094:	b	11fe0 <__gmon_start__@plt>
   12098:	andeq	r3, r1, r4, ror pc
   1209c:	andeq	r0, r0, ip, asr #32
   120a0:	ldr	r0, [pc, #24]	; 120c0 <_start@@Base+0x80>
   120a4:	ldr	r3, [pc, #24]	; 120c4 <_start@@Base+0x84>
   120a8:	cmp	r3, r0
   120ac:	bxeq	lr
   120b0:	ldr	r3, [pc, #16]	; 120c8 <_start@@Base+0x88>
   120b4:	cmp	r3, #0
   120b8:	bxeq	lr
   120bc:	bx	r3
   120c0:	andeq	r6, r2, r8, asr r0
   120c4:	andeq	r6, r2, r8, asr r0
   120c8:	andeq	r0, r0, r0
   120cc:	ldr	r0, [pc, #36]	; 120f8 <_start@@Base+0xb8>
   120d0:	ldr	r1, [pc, #36]	; 120fc <_start@@Base+0xbc>
   120d4:	sub	r1, r1, r0
   120d8:	asr	r1, r1, #2
   120dc:	add	r1, r1, r1, lsr #31
   120e0:	asrs	r1, r1, #1
   120e4:	bxeq	lr
   120e8:	ldr	r3, [pc, #16]	; 12100 <_start@@Base+0xc0>
   120ec:	cmp	r3, #0
   120f0:	bxeq	lr
   120f4:	bx	r3
   120f8:	andeq	r6, r2, r8, asr r0
   120fc:	andeq	r6, r2, r8, asr r0
   12100:	andeq	r0, r0, r0
   12104:	push	{r4, lr}
   12108:	ldr	r4, [pc, #24]	; 12128 <_start@@Base+0xe8>
   1210c:	ldrb	r3, [r4]
   12110:	cmp	r3, #0
   12114:	popne	{r4, pc}
   12118:	bl	120a0 <_start@@Base+0x60>
   1211c:	mov	r3, #1
   12120:	strb	r3, [r4]
   12124:	pop	{r4, pc}
   12128:	andeq	r6, r2, r8, asr r0
   1212c:	b	120cc <_start@@Base+0x8c>

00012130 <main@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	vpush	{d8}
   12140:	sub	sp, sp, #744	; 0x2e8
   12144:	sub	sp, sp, #99328	; 0x18400
   12148:	sub	r0, fp, #104	; 0x68
   1214c:	bl	11fa4 <time@plt>
   12150:	bl	11ff8 <srand@plt>
   12154:	bl	12028 <rand@plt>
   12158:	mov	r5, r0
   1215c:	sub	r4, fp, #100	; 0x64
   12160:	mov	r0, r4
   12164:	bl	12814 <table_init@@Base>
   12168:	movw	r0, #34079	; 0x851f
   1216c:	movt	r0, #20971	; 0x51eb
   12170:	smmul	r0, r5, r0
   12174:	asr	r1, r0, #5
   12178:	add	r0, r1, r0, lsr #31
   1217c:	mov	r1, #100	; 0x64
   12180:	mls	r5, r0, r1, r5
   12184:	movw	r1, #22644	; 0x5874
   12188:	movt	r1, #1
   1218c:	mov	r0, r4
   12190:	mov	r2, #0
   12194:	bl	132d0 <table_add_column@@Base>
   12198:	mov	r8, r0
   1219c:	movw	r1, #22647	; 0x5877
   121a0:	movt	r1, #1
   121a4:	mov	r0, r4
   121a8:	mov	r2, #21
   121ac:	bl	132d0 <table_add_column@@Base>
   121b0:	mov	sl, r0
   121b4:	add	r6, r5, #99	; 0x63
   121b8:	mvn	r7, #0
   121bc:	add	r5, sp, #8
   121c0:	movw	r9, #22771	; 0x58f3
   121c4:	movt	r9, #1
   121c8:	add	r7, r7, #1
   121cc:	mov	r0, r5
   121d0:	mov	r1, #255	; 0xff
   121d4:	mov	r2, r9
   121d8:	mov	r3, r7
   121dc:	bl	12004 <snprintf@plt>
   121e0:	mov	r0, r4
   121e4:	bl	13f70 <table_add_row@@Base>
   121e8:	mov	r0, r4
   121ec:	mov	r1, r7
   121f0:	mov	r2, r8
   121f4:	mov	r3, r7
   121f8:	bl	143d0 <table_set_int@@Base>
   121fc:	mov	r0, r4
   12200:	mov	r1, r7
   12204:	mov	r2, sl
   12208:	mov	r3, r5
   1220c:	bl	146f8 <table_set_string@@Base>
   12210:	cmp	r7, r6
   12214:	blt	121c8 <main@@Base+0x98>
   12218:	sub	r5, fp, #100	; 0x64
   1221c:	add	r4, sp, #8
   12220:	movw	r6, #34464	; 0x86a0
   12224:	movt	r6, #1
   12228:	mov	r0, r5
   1222c:	mov	r1, r4
   12230:	mov	r2, r6
   12234:	bl	14788 <table_serialize@@Base>
   12238:	mov	r0, r4
   1223c:	mov	r1, r6
   12240:	bl	14a04 <table_deserialize@@Base>
   12244:	mov	r8, r0
   12248:	mov	r0, r5
   1224c:	bl	13f68 <table_get_row_length@@Base>
   12250:	mov	r5, r0
   12254:	mov	r0, r8
   12258:	bl	13f68 <table_get_row_length@@Base>
   1225c:	mov	r4, r0
   12260:	mov	r9, #0
   12264:	cmp	r0, r5
   12268:	beq	12284 <main@@Base+0x154>
   1226c:	movw	r0, #22653	; 0x587d
   12270:	movt	r0, #1
   12274:	mov	r1, r5
   12278:	mov	r2, r4
   1227c:	bl	11f8c <printf@plt>
   12280:	mvn	r9, #0
   12284:	sub	r0, fp, #100	; 0x64
   12288:	bl	13244 <table_get_column_length@@Base>
   1228c:	mov	r6, r0
   12290:	mov	r0, r8
   12294:	bl	13244 <table_get_column_length@@Base>
   12298:	mov	r7, r0
   1229c:	cmp	r0, r6
   122a0:	bne	127b4 <main@@Base+0x684>
   122a4:	str	r9, [sp]
   122a8:	cmp	r4, r5
   122ac:	cmpeq	r7, r6
   122b0:	bne	127d0 <main@@Base+0x6a0>
   122b4:	cmp	r4, #1
   122b8:	blt	127d0 <main@@Base+0x6a0>
   122bc:	mov	r5, #0
   122c0:	sub	r9, fp, #100	; 0x64
   122c4:	str	r4, [sp, #4]
   122c8:	cmp	r7, #1
   122cc:	blt	127a4 <main@@Base+0x674>
   122d0:	mov	sl, #0
   122d4:	mov	r0, r9
   122d8:	mov	r1, sl
   122dc:	bl	132bc <table_get_column_data_type@@Base>
   122e0:	cmp	r0, #23
   122e4:	bhi	12774 <main@@Base+0x644>
   122e8:	add	r1, pc, #0
   122ec:	ldr	pc, [r1, r0, lsl #2]
   122f0:	andeq	r2, r1, r0, asr r3
   122f4:	andeq	r2, r1, r8, lsl #7
   122f8:			; <UNDEFINED> instruction: 0x000123b0
   122fc:	ldrdeq	r2, [r1], -r8
   12300:	andeq	r2, r1, r0, lsl #8
   12304:	andeq	r2, r1, r8, lsr #8
   12308:	andeq	r2, r1, r0, asr r4
   1230c:	andeq	r2, r1, r8, ror r4
   12310:	andeq	r2, r1, r0, lsr #9
   12314:	andeq	r2, r1, ip, asr #9
   12318:	strdeq	r2, [r1], -r8
   1231c:	andeq	r2, r1, r0, lsr #10
   12320:	andeq	r2, r1, r8, asr #10
   12324:	andeq	r2, r1, r0, ror r5
   12328:	muleq	r1, r8, r5
   1232c:	andeq	r2, r1, r4, asr #11
   12330:	andeq	r2, r1, r0, lsl #12
   12334:	andeq	r2, r1, ip, lsr #12
   12338:	andeq	r2, r1, r4, asr r6
   1233c:	andeq	r2, r1, r8, lsl #13
   12340:			; <UNDEFINED> instruction: 0x000126b0
   12344:	ldrdeq	r2, [r1], -r8
   12348:	andeq	r2, r1, r4, lsl r7
   1234c:	andeq	r2, r1, r8, asr #14
   12350:	mov	r0, r9
   12354:	mov	r1, r5
   12358:	mov	r2, sl
   1235c:	bl	13d24 <table_get_int@@Base>
   12360:	mov	r4, r8
   12364:	mov	r8, r0
   12368:	mov	r0, r4
   1236c:	mov	r1, r5
   12370:	mov	r2, sl
   12374:	bl	13d24 <table_get_int@@Base>
   12378:	cmp	r8, r0
   1237c:	mov	r8, r4
   12380:	beq	12774 <main@@Base+0x644>
   12384:	b	12784 <main@@Base+0x654>
   12388:	mov	r0, r9
   1238c:	mov	r1, r5
   12390:	mov	r2, sl
   12394:	bl	13d38 <table_get_uint@@Base>
   12398:	mov	r4, r0
   1239c:	mov	r0, r8
   123a0:	mov	r1, r5
   123a4:	mov	r2, sl
   123a8:	bl	13d38 <table_get_uint@@Base>
   123ac:	b	1276c <main@@Base+0x63c>
   123b0:	mov	r0, r9
   123b4:	mov	r1, r5
   123b8:	mov	r2, sl
   123bc:	bl	13d4c <table_get_int8@@Base>
   123c0:	mov	r4, r0
   123c4:	mov	r0, r8
   123c8:	mov	r1, r5
   123cc:	mov	r2, sl
   123d0:	bl	13d4c <table_get_int8@@Base>
   123d4:	b	1276c <main@@Base+0x63c>
   123d8:	mov	r0, r9
   123dc:	mov	r1, r5
   123e0:	mov	r2, sl
   123e4:	bl	13d60 <table_get_uint8@@Base>
   123e8:	mov	r4, r0
   123ec:	mov	r0, r8
   123f0:	mov	r1, r5
   123f4:	mov	r2, sl
   123f8:	bl	13d60 <table_get_uint8@@Base>
   123fc:	b	1276c <main@@Base+0x63c>
   12400:	mov	r0, r9
   12404:	mov	r1, r5
   12408:	mov	r2, sl
   1240c:	bl	13d74 <table_get_int16@@Base>
   12410:	mov	r4, r0
   12414:	mov	r0, r8
   12418:	mov	r1, r5
   1241c:	mov	r2, sl
   12420:	bl	13d74 <table_get_int16@@Base>
   12424:	b	1276c <main@@Base+0x63c>
   12428:	mov	r0, r9
   1242c:	mov	r1, r5
   12430:	mov	r2, sl
   12434:	bl	13d88 <table_get_uint16@@Base>
   12438:	mov	r4, r0
   1243c:	mov	r0, r8
   12440:	mov	r1, r5
   12444:	mov	r2, sl
   12448:	bl	13d88 <table_get_uint16@@Base>
   1244c:	b	1276c <main@@Base+0x63c>
   12450:	mov	r0, r9
   12454:	mov	r1, r5
   12458:	mov	r2, sl
   1245c:	bl	13d9c <table_get_int32@@Base>
   12460:	mov	r4, r0
   12464:	mov	r0, r8
   12468:	mov	r1, r5
   1246c:	mov	r2, sl
   12470:	bl	13d9c <table_get_int32@@Base>
   12474:	b	1276c <main@@Base+0x63c>
   12478:	mov	r0, r9
   1247c:	mov	r1, r5
   12480:	mov	r2, sl
   12484:	bl	13db0 <table_get_uint32@@Base>
   12488:	mov	r4, r0
   1248c:	mov	r0, r8
   12490:	mov	r1, r5
   12494:	mov	r2, sl
   12498:	bl	13db0 <table_get_uint32@@Base>
   1249c:	b	1276c <main@@Base+0x63c>
   124a0:	mov	r0, r9
   124a4:	mov	r1, r5
   124a8:	mov	r2, sl
   124ac:	bl	13dc4 <table_get_int64@@Base>
   124b0:	mov	r4, r0
   124b4:	mov	r6, r1
   124b8:	mov	r0, r8
   124bc:	mov	r1, r5
   124c0:	mov	r2, sl
   124c4:	bl	13dc4 <table_get_int64@@Base>
   124c8:	b	125ec <main@@Base+0x4bc>
   124cc:	mov	r0, r9
   124d0:	mov	r1, r5
   124d4:	mov	r2, sl
   124d8:	bl	13dd8 <table_get_uint64@@Base>
   124dc:	mov	r4, r0
   124e0:	mov	r6, r1
   124e4:	mov	r0, r8
   124e8:	mov	r1, r5
   124ec:	mov	r2, sl
   124f0:	bl	13dd8 <table_get_uint64@@Base>
   124f4:	b	125ec <main@@Base+0x4bc>
   124f8:	mov	r0, r9
   124fc:	mov	r1, r5
   12500:	mov	r2, sl
   12504:	bl	13dec <table_get_short@@Base>
   12508:	mov	r4, r0
   1250c:	mov	r0, r8
   12510:	mov	r1, r5
   12514:	mov	r2, sl
   12518:	bl	13dec <table_get_short@@Base>
   1251c:	b	1276c <main@@Base+0x63c>
   12520:	mov	r0, r9
   12524:	mov	r1, r5
   12528:	mov	r2, sl
   1252c:	bl	13e00 <table_get_ushort@@Base>
   12530:	mov	r4, r0
   12534:	mov	r0, r8
   12538:	mov	r1, r5
   1253c:	mov	r2, sl
   12540:	bl	13e00 <table_get_ushort@@Base>
   12544:	b	1276c <main@@Base+0x63c>
   12548:	mov	r0, r9
   1254c:	mov	r1, r5
   12550:	mov	r2, sl
   12554:	bl	13e14 <table_get_long@@Base>
   12558:	mov	r4, r0
   1255c:	mov	r0, r8
   12560:	mov	r1, r5
   12564:	mov	r2, sl
   12568:	bl	13e14 <table_get_long@@Base>
   1256c:	b	1276c <main@@Base+0x63c>
   12570:	mov	r0, r9
   12574:	mov	r1, r5
   12578:	mov	r2, sl
   1257c:	bl	13e28 <table_get_ulong@@Base>
   12580:	mov	r4, r0
   12584:	mov	r0, r8
   12588:	mov	r1, r5
   1258c:	mov	r2, sl
   12590:	bl	13e28 <table_get_ulong@@Base>
   12594:	b	1276c <main@@Base+0x63c>
   12598:	mov	r0, r9
   1259c:	mov	r1, r5
   125a0:	mov	r2, sl
   125a4:	bl	13e3c <table_get_llong@@Base>
   125a8:	mov	r4, r0
   125ac:	mov	r6, r1
   125b0:	mov	r0, r8
   125b4:	mov	r1, r5
   125b8:	mov	r2, sl
   125bc:	bl	13e3c <table_get_llong@@Base>
   125c0:	b	125ec <main@@Base+0x4bc>
   125c4:	mov	r0, r9
   125c8:	mov	r1, r5
   125cc:	mov	r2, sl
   125d0:	bl	13e50 <table_get_ullong@@Base>
   125d4:	mov	r4, r0
   125d8:	mov	r6, r1
   125dc:	mov	r0, r8
   125e0:	mov	r1, r5
   125e4:	mov	r2, sl
   125e8:	bl	13e50 <table_get_ullong@@Base>
   125ec:	eor	r1, r6, r1
   125f0:	eor	r0, r4, r0
   125f4:	orrs	r0, r0, r1
   125f8:	beq	12774 <main@@Base+0x644>
   125fc:	b	12784 <main@@Base+0x654>
   12600:	mov	r0, r9
   12604:	mov	r1, r5
   12608:	mov	r2, sl
   1260c:	bl	13e64 <table_get_float@@Base>
   12610:	vmov.f32	s16, s0
   12614:	mov	r0, r8
   12618:	mov	r1, r5
   1261c:	mov	r2, sl
   12620:	bl	13e64 <table_get_float@@Base>
   12624:	vcmp.f32	s16, s0
   12628:	b	1267c <main@@Base+0x54c>
   1262c:	mov	r0, r9
   12630:	mov	r1, r5
   12634:	mov	r2, sl
   12638:	bl	13e78 <table_get_double@@Base>
   1263c:	vmov.f64	d8, d0
   12640:	mov	r0, r8
   12644:	mov	r1, r5
   12648:	mov	r2, sl
   1264c:	bl	13e78 <table_get_double@@Base>
   12650:	b	12678 <main@@Base+0x548>
   12654:	mov	r0, r9
   12658:	mov	r1, r5
   1265c:	mov	r2, sl
   12660:	bl	13e8c <table_get_ldouble@@Base>
   12664:	vmov.f64	d8, d0
   12668:	mov	r0, r8
   1266c:	mov	r1, r5
   12670:	mov	r2, sl
   12674:	bl	13e8c <table_get_ldouble@@Base>
   12678:	vcmp.f64	d8, d0
   1267c:	vmrs	APSR_nzcv, fpscr
   12680:	beq	12774 <main@@Base+0x644>
   12684:	b	12784 <main@@Base+0x654>
   12688:	mov	r0, r9
   1268c:	mov	r1, r5
   12690:	mov	r2, sl
   12694:	bl	13ea0 <table_get_char@@Base>
   12698:	mov	r4, r0
   1269c:	mov	r0, r8
   126a0:	mov	r1, r5
   126a4:	mov	r2, sl
   126a8:	bl	13ea0 <table_get_char@@Base>
   126ac:	b	1276c <main@@Base+0x63c>
   126b0:	mov	r0, r9
   126b4:	mov	r1, r5
   126b8:	mov	r2, sl
   126bc:	bl	13eb4 <table_get_uchar@@Base>
   126c0:	mov	r4, r0
   126c4:	mov	r0, r8
   126c8:	mov	r1, r5
   126cc:	mov	r2, sl
   126d0:	bl	13eb4 <table_get_uchar@@Base>
   126d4:	b	1276c <main@@Base+0x63c>
   126d8:	mov	r0, r9
   126dc:	mov	r1, r5
   126e0:	mov	r2, sl
   126e4:	bl	13ec8 <table_get_string@@Base>
   126e8:	mov	r4, r0
   126ec:	mov	r0, r8
   126f0:	mov	r1, r5
   126f4:	mov	r2, sl
   126f8:	bl	13ec8 <table_get_string@@Base>
   126fc:	mov	r1, r0
   12700:	mov	r0, r4
   12704:	bl	11f80 <strcmp@plt>
   12708:	cmp	r0, #0
   1270c:	beq	12774 <main@@Base+0x644>
   12710:	b	12784 <main@@Base+0x654>
   12714:	mov	r0, r9
   12718:	mov	r1, r5
   1271c:	mov	r2, sl
   12720:	bl	13d10 <table_get_bool@@Base>
   12724:	mov	r4, r0
   12728:	mov	r0, r8
   1272c:	mov	r1, r5
   12730:	mov	r2, sl
   12734:	bl	13d10 <table_get_bool@@Base>
   12738:	eor	r0, r4, r0
   1273c:	cmp	r0, #1
   12740:	bne	12774 <main@@Base+0x644>
   12744:	b	12784 <main@@Base+0x654>
   12748:	mov	r0, r9
   1274c:	mov	r1, r5
   12750:	mov	r2, sl
   12754:	bl	13ecc <table_get_ptr@@Base>
   12758:	mov	r4, r0
   1275c:	mov	r0, r8
   12760:	mov	r1, r5
   12764:	mov	r2, sl
   12768:	bl	13ecc <table_get_ptr@@Base>
   1276c:	cmp	r4, r0
   12770:	bne	12784 <main@@Base+0x654>
   12774:	add	sl, sl, #1
   12778:	cmp	sl, r7
   1277c:	blt	122d4 <main@@Base+0x1a4>
   12780:	b	127a0 <main@@Base+0x670>
   12784:	movw	r0, #22774	; 0x58f6
   12788:	movt	r0, #1
   1278c:	mov	r1, r5
   12790:	mov	r2, sl
   12794:	bl	11f8c <printf@plt>
   12798:	mvn	r0, #0
   1279c:	str	r0, [sp]
   127a0:	ldr	r4, [sp, #4]
   127a4:	add	r5, r5, #1
   127a8:	cmp	r5, r4
   127ac:	bne	122c8 <main@@Base+0x198>
   127b0:	b	127d0 <main@@Base+0x6a0>
   127b4:	movw	r0, #22712	; 0x58b8
   127b8:	movt	r0, #1
   127bc:	mov	r1, r6
   127c0:	mov	r2, r7
   127c4:	bl	11f8c <printf@plt>
   127c8:	mvn	r0, #0
   127cc:	str	r0, [sp]
   127d0:	sub	r0, fp, #100	; 0x64
   127d4:	bl	12854 <table_destroy@@Base>
   127d8:	mov	r0, r8
   127dc:	bl	12838 <table_delete@@Base>
   127e0:	ldr	r0, [sp]
   127e4:	sub	sp, fp, #40	; 0x28
   127e8:	vpop	{d8}
   127ec:	add	sp, sp, #4
   127f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127f4 <table_new@@Base>:
   127f4:	push	{r4, sl, fp, lr}
   127f8:	add	fp, sp, #8
   127fc:	mov	r0, #56	; 0x38
   12800:	bl	11fc8 <malloc@plt>
   12804:	mov	r4, r0
   12808:	bl	12814 <table_init@@Base>
   1280c:	mov	r0, r4
   12810:	pop	{r4, sl, fp, pc}

00012814 <table_init@@Base>:
   12814:	push	{r4, sl, fp, lr}
   12818:	add	fp, sp, #8
   1281c:	mov	r4, r0
   12820:	bl	12894 <table_destroy@@Base+0x40>
   12824:	mov	r0, r4
   12828:	bl	128ac <table_destroy@@Base+0x58>
   1282c:	mov	r0, r4
   12830:	pop	{r4, sl, fp, lr}
   12834:	b	128c8 <table_destroy@@Base+0x74>

00012838 <table_delete@@Base>:
   12838:	push	{r4, sl, fp, lr}
   1283c:	add	fp, sp, #8
   12840:	mov	r4, r0
   12844:	bl	12854 <table_destroy@@Base>
   12848:	mov	r0, r4
   1284c:	pop	{r4, sl, fp, lr}
   12850:	b	11f98 <free@plt>

00012854 <table_destroy@@Base>:
   12854:	cmp	r0, #0
   12858:	bxeq	lr
   1285c:	push	{r4, sl, fp, lr}
   12860:	add	fp, sp, #8
   12864:	mov	r4, r0
   12868:	mvn	r1, #0
   1286c:	mvn	r2, #0
   12870:	mov	r3, #64	; 0x40
   12874:	bl	13150 <table_notify@@Base>
   12878:	mov	r0, r4
   1287c:	bl	128e8 <table_destroy@@Base+0x94>
   12880:	mov	r0, r4
   12884:	bl	12934 <table_destroy@@Base+0xe0>
   12888:	mov	r0, r4
   1288c:	pop	{r4, sl, fp, lr}
   12890:	b	12980 <table_destroy@@Base+0x12c>
   12894:	mov	r1, #0
   12898:	mov	r2, #10
   1289c:	str	r1, [r0]
   128a0:	stmib	r0, {r1, r2}
   128a4:	str	r1, [r0, #12]
   128a8:	bx	lr
   128ac:	mov	r1, #0
   128b0:	mov	r2, #20
   128b4:	str	r1, [r0, #16]
   128b8:	str	r1, [r0, #20]
   128bc:	str	r2, [r0, #24]
   128c0:	str	r1, [r0, #28]
   128c4:	bx	lr
   128c8:	mov	r1, #0
   128cc:	vmov.i32	q8, #0	; 0x00000000
   128d0:	mov	r2, #10
   128d4:	str	r2, [r0, #48]	; 0x30
   128d8:	str	r1, [r0, #52]	; 0x34
   128dc:	add	r0, r0, #32
   128e0:	vst1.32	{d16-d17}, [r0]
   128e4:	bx	lr
   128e8:	push	{r4, r5, r6, sl, fp, lr}
   128ec:	add	fp, sp, #16
   128f0:	mov	r4, r0
   128f4:	bl	13f68 <table_get_row_length@@Base>
   128f8:	cmp	r0, #1
   128fc:	blt	12920 <table_destroy@@Base+0xcc>
   12900:	mov	r5, r0
   12904:	mov	r6, #0
   12908:	mov	r0, r4
   1290c:	mov	r1, r6
   12910:	bl	13f04 <table_row_destroy@@Base>
   12914:	add	r6, r6, #1
   12918:	cmp	r5, r6
   1291c:	bne	12908 <table_destroy@@Base+0xb4>
   12920:	ldr	r0, [r4, #16]
   12924:	cmp	r0, #0
   12928:	popeq	{r4, r5, r6, sl, fp, pc}
   1292c:	pop	{r4, r5, r6, sl, fp, lr}
   12930:	b	11f98 <free@plt>
   12934:	push	{r4, r5, r6, sl, fp, lr}
   12938:	add	fp, sp, #16
   1293c:	mov	r4, r0
   12940:	bl	13244 <table_get_column_length@@Base>
   12944:	cmp	r0, #1
   12948:	blt	1296c <table_destroy@@Base+0x118>
   1294c:	mov	r5, r0
   12950:	mov	r6, #0
   12954:	mov	r0, r4
   12958:	mov	r1, r6
   1295c:	bl	13224 <table_column_destroy@@Base>
   12960:	add	r6, r6, #1
   12964:	cmp	r5, r6
   12968:	bne	12954 <table_destroy@@Base+0x100>
   1296c:	ldr	r0, [r4]
   12970:	cmp	r0, #0
   12974:	popeq	{r4, r5, r6, sl, fp, pc}
   12978:	pop	{r4, r5, r6, sl, fp, lr}
   1297c:	b	11f98 <free@plt>
   12980:	push	{r4, sl, fp, lr}
   12984:	add	fp, sp, #8
   12988:	mov	r4, r0
   1298c:	ldr	r0, [r0, #36]	; 0x24
   12990:	cmp	r0, #0
   12994:	beq	1299c <table_destroy@@Base+0x148>
   12998:	bl	11f98 <free@plt>
   1299c:	ldr	r0, [r4, #40]	; 0x28
   129a0:	cmp	r0, #0
   129a4:	beq	129ac <table_destroy@@Base+0x158>
   129a8:	bl	11f98 <free@plt>
   129ac:	ldr	r0, [r4, #44]	; 0x2c
   129b0:	cmp	r0, #0
   129b4:	popeq	{r4, sl, fp, pc}
   129b8:	pop	{r4, sl, fp, lr}
   129bc:	b	11f98 <free@plt>

000129c0 <table_dupe@@Base>:
   129c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129c4:	add	fp, sp, #28
   129c8:	sub	sp, sp, #12
   129cc:	mov	r4, r0
   129d0:	bl	13f68 <table_get_row_length@@Base>
   129d4:	mov	r8, r0
   129d8:	mov	r0, r4
   129dc:	bl	13244 <table_get_column_length@@Base>
   129e0:	mov	r6, r0
   129e4:	bl	127f4 <table_new@@Base>
   129e8:	mov	sl, r0
   129ec:	cmp	r6, #1
   129f0:	blt	12a30 <table_dupe@@Base+0x70>
   129f4:	mov	r5, #0
   129f8:	mov	r0, r4
   129fc:	mov	r1, r5
   12a00:	bl	132a8 <table_get_column_name@@Base>
   12a04:	mov	r7, r0
   12a08:	mov	r0, r4
   12a0c:	mov	r1, r5
   12a10:	bl	132bc <table_get_column_data_type@@Base>
   12a14:	mov	r2, r0
   12a18:	mov	r0, sl
   12a1c:	mov	r1, r7
   12a20:	bl	132d0 <table_add_column@@Base>
   12a24:	add	r5, r5, #1
   12a28:	cmp	r6, r5
   12a2c:	bne	129f8 <table_dupe@@Base+0x38>
   12a30:	cmp	r8, #1
   12a34:	blt	12e9c <table_dupe@@Base+0x4dc>
   12a38:	mov	r5, #0
   12a3c:	add	r9, sp, #8
   12a40:	mov	r0, sl
   12a44:	bl	13f70 <table_add_row@@Base>
   12a48:	cmp	r6, #1
   12a4c:	blt	12e90 <table_dupe@@Base+0x4d0>
   12a50:	mov	r7, #0
   12a54:	mov	r0, r4
   12a58:	mov	r1, r7
   12a5c:	bl	132bc <table_get_column_data_type@@Base>
   12a60:	cmp	r0, #23
   12a64:	bhi	12e84 <table_dupe@@Base+0x4c4>
   12a68:	add	r1, pc, #0
   12a6c:	ldr	pc, [r1, r0, lsl #2]
   12a70:	ldrdeq	r2, [r1], -r0
   12a74:	strdeq	r2, [r1], -r8
   12a78:	andeq	r2, r1, r0, lsr #22
   12a7c:	andeq	r2, r1, r8, asr #22
   12a80:	andeq	r2, r1, r0, ror fp
   12a84:	muleq	r1, r8, fp
   12a88:	andeq	r2, r1, r0, asr #23
   12a8c:	andeq	r2, r1, r8, ror #23
   12a90:	andeq	r2, r1, r0, lsl ip
   12a94:	andeq	r2, r1, r8, lsr ip
   12a98:	andeq	r2, r1, r0, ror #24
   12a9c:	andeq	r2, r1, r8, lsl #25
   12aa0:			; <UNDEFINED> instruction: 0x00012cb0
   12aa4:	ldrdeq	r2, [r1], -r8
   12aa8:	andeq	r2, r1, r0, lsl #26
   12aac:	andeq	r2, r1, r8, lsr #26
   12ab0:	andeq	r2, r1, r0, asr sp
   12ab4:	andeq	r2, r1, r4, ror sp
   12ab8:	muleq	r1, r8, sp
   12abc:			; <UNDEFINED> instruction: 0x00012dbc
   12ac0:	andeq	r2, r1, r4, ror #27
   12ac4:	andeq	r2, r1, ip, lsl #28
   12ac8:	andeq	r2, r1, r4, lsr lr
   12acc:	andeq	r2, r1, ip, asr lr
   12ad0:	mov	r0, r4
   12ad4:	mov	r1, r5
   12ad8:	mov	r2, r7
   12adc:	bl	13d24 <table_get_int@@Base>
   12ae0:	mov	r3, r0
   12ae4:	mov	r0, sl
   12ae8:	mov	r1, r5
   12aec:	mov	r2, r7
   12af0:	bl	143d0 <table_set_int@@Base>
   12af4:	b	12e84 <table_dupe@@Base+0x4c4>
   12af8:	mov	r0, r4
   12afc:	mov	r1, r5
   12b00:	mov	r2, r7
   12b04:	bl	13d38 <table_get_uint@@Base>
   12b08:	mov	r3, r0
   12b0c:	mov	r0, sl
   12b10:	mov	r1, r5
   12b14:	mov	r2, r7
   12b18:	bl	143f8 <table_set_uint@@Base>
   12b1c:	b	12e84 <table_dupe@@Base+0x4c4>
   12b20:	mov	r0, r4
   12b24:	mov	r1, r5
   12b28:	mov	r2, r7
   12b2c:	bl	13d4c <table_get_int8@@Base>
   12b30:	mov	r3, r0
   12b34:	mov	r0, sl
   12b38:	mov	r1, r5
   12b3c:	mov	r2, r7
   12b40:	bl	14420 <table_set_int8@@Base>
   12b44:	b	12e84 <table_dupe@@Base+0x4c4>
   12b48:	mov	r0, r4
   12b4c:	mov	r1, r5
   12b50:	mov	r2, r7
   12b54:	bl	13d60 <table_get_uint8@@Base>
   12b58:	mov	r3, r0
   12b5c:	mov	r0, sl
   12b60:	mov	r1, r5
   12b64:	mov	r2, r7
   12b68:	bl	14448 <table_set_uint8@@Base>
   12b6c:	b	12e84 <table_dupe@@Base+0x4c4>
   12b70:	mov	r0, r4
   12b74:	mov	r1, r5
   12b78:	mov	r2, r7
   12b7c:	bl	13d74 <table_get_int16@@Base>
   12b80:	mov	r3, r0
   12b84:	mov	r0, sl
   12b88:	mov	r1, r5
   12b8c:	mov	r2, r7
   12b90:	bl	14470 <table_set_int16@@Base>
   12b94:	b	12e84 <table_dupe@@Base+0x4c4>
   12b98:	mov	r0, r4
   12b9c:	mov	r1, r5
   12ba0:	mov	r2, r7
   12ba4:	bl	13d88 <table_get_uint16@@Base>
   12ba8:	mov	r3, r0
   12bac:	mov	r0, sl
   12bb0:	mov	r1, r5
   12bb4:	mov	r2, r7
   12bb8:	bl	14498 <table_set_uint16@@Base>
   12bbc:	b	12e84 <table_dupe@@Base+0x4c4>
   12bc0:	mov	r0, r4
   12bc4:	mov	r1, r5
   12bc8:	mov	r2, r7
   12bcc:	bl	13d9c <table_get_int32@@Base>
   12bd0:	mov	r3, r0
   12bd4:	mov	r0, sl
   12bd8:	mov	r1, r5
   12bdc:	mov	r2, r7
   12be0:	bl	144c0 <table_set_int32@@Base>
   12be4:	b	12e84 <table_dupe@@Base+0x4c4>
   12be8:	mov	r0, r4
   12bec:	mov	r1, r5
   12bf0:	mov	r2, r7
   12bf4:	bl	13db0 <table_get_uint32@@Base>
   12bf8:	mov	r3, r0
   12bfc:	mov	r0, sl
   12c00:	mov	r1, r5
   12c04:	mov	r2, r7
   12c08:	bl	144e8 <table_set_uint32@@Base>
   12c0c:	b	12e84 <table_dupe@@Base+0x4c4>
   12c10:	mov	r0, r4
   12c14:	mov	r1, r5
   12c18:	mov	r2, r7
   12c1c:	bl	13dc4 <table_get_int64@@Base>
   12c20:	stm	sp, {r0, r1}
   12c24:	mov	r0, sl
   12c28:	mov	r1, r5
   12c2c:	mov	r2, r7
   12c30:	bl	14510 <table_set_int64@@Base>
   12c34:	b	12e84 <table_dupe@@Base+0x4c4>
   12c38:	mov	r0, r4
   12c3c:	mov	r1, r5
   12c40:	mov	r2, r7
   12c44:	bl	13dd8 <table_get_uint64@@Base>
   12c48:	stm	sp, {r0, r1}
   12c4c:	mov	r0, sl
   12c50:	mov	r1, r5
   12c54:	mov	r2, r7
   12c58:	bl	14544 <table_set_uint64@@Base>
   12c5c:	b	12e84 <table_dupe@@Base+0x4c4>
   12c60:	mov	r0, r4
   12c64:	mov	r1, r5
   12c68:	mov	r2, r7
   12c6c:	bl	13dec <table_get_short@@Base>
   12c70:	mov	r3, r0
   12c74:	mov	r0, sl
   12c78:	mov	r1, r5
   12c7c:	mov	r2, r7
   12c80:	bl	14578 <table_set_short@@Base>
   12c84:	b	12e84 <table_dupe@@Base+0x4c4>
   12c88:	mov	r0, r4
   12c8c:	mov	r1, r5
   12c90:	mov	r2, r7
   12c94:	bl	13e00 <table_get_ushort@@Base>
   12c98:	mov	r3, r0
   12c9c:	mov	r0, sl
   12ca0:	mov	r1, r5
   12ca4:	mov	r2, r7
   12ca8:	bl	145a0 <table_set_ushort@@Base>
   12cac:	b	12e84 <table_dupe@@Base+0x4c4>
   12cb0:	mov	r0, r4
   12cb4:	mov	r1, r5
   12cb8:	mov	r2, r7
   12cbc:	bl	13e14 <table_get_long@@Base>
   12cc0:	mov	r3, r0
   12cc4:	mov	r0, sl
   12cc8:	mov	r1, r5
   12ccc:	mov	r2, r7
   12cd0:	bl	145c8 <table_set_long@@Base>
   12cd4:	b	12e84 <table_dupe@@Base+0x4c4>
   12cd8:	mov	r0, r4
   12cdc:	mov	r1, r5
   12ce0:	mov	r2, r7
   12ce4:	bl	13e28 <table_get_ulong@@Base>
   12ce8:	mov	r3, r0
   12cec:	mov	r0, sl
   12cf0:	mov	r1, r5
   12cf4:	mov	r2, r7
   12cf8:	bl	145f0 <table_set_ulong@@Base>
   12cfc:	b	12e84 <table_dupe@@Base+0x4c4>
   12d00:	mov	r0, r4
   12d04:	mov	r1, r5
   12d08:	mov	r2, r7
   12d0c:	bl	13e3c <table_get_llong@@Base>
   12d10:	stm	sp, {r0, r1}
   12d14:	mov	r0, sl
   12d18:	mov	r1, r5
   12d1c:	mov	r2, r7
   12d20:	bl	14618 <table_set_llong@@Base>
   12d24:	b	12e84 <table_dupe@@Base+0x4c4>
   12d28:	mov	r0, r4
   12d2c:	mov	r1, r5
   12d30:	mov	r2, r7
   12d34:	bl	13e50 <table_get_ullong@@Base>
   12d38:	stm	sp, {r0, r1}
   12d3c:	mov	r0, sl
   12d40:	mov	r1, r5
   12d44:	mov	r2, r7
   12d48:	bl	1464c <table_set_ullong@@Base>
   12d4c:	b	12e84 <table_dupe@@Base+0x4c4>
   12d50:	mov	r0, r4
   12d54:	mov	r1, r5
   12d58:	mov	r2, r7
   12d5c:	bl	13e64 <table_get_float@@Base>
   12d60:	mov	r0, sl
   12d64:	mov	r1, r5
   12d68:	mov	r2, r7
   12d6c:	bl	14680 <table_set_float@@Base>
   12d70:	b	12e84 <table_dupe@@Base+0x4c4>
   12d74:	mov	r0, r4
   12d78:	mov	r1, r5
   12d7c:	mov	r2, r7
   12d80:	bl	13e78 <table_get_double@@Base>
   12d84:	mov	r0, sl
   12d88:	mov	r1, r5
   12d8c:	mov	r2, r7
   12d90:	bl	146a8 <table_set_double@@Base>
   12d94:	b	12e84 <table_dupe@@Base+0x4c4>
   12d98:	mov	r0, r4
   12d9c:	mov	r1, r5
   12da0:	mov	r2, r7
   12da4:	bl	13e8c <table_get_ldouble@@Base>
   12da8:	mov	r0, sl
   12dac:	mov	r1, r5
   12db0:	mov	r2, r7
   12db4:	bl	146d0 <table_set_ldouble@@Base>
   12db8:	b	12e84 <table_dupe@@Base+0x4c4>
   12dbc:	mov	r0, r4
   12dc0:	mov	r1, r5
   12dc4:	mov	r2, r7
   12dc8:	bl	13ea0 <table_get_char@@Base>
   12dcc:	mov	r3, r0
   12dd0:	mov	r0, sl
   12dd4:	mov	r1, r5
   12dd8:	mov	r2, r7
   12ddc:	bl	14718 <table_set_char@@Base>
   12de0:	b	12e84 <table_dupe@@Base+0x4c4>
   12de4:	mov	r0, r4
   12de8:	mov	r1, r5
   12dec:	mov	r2, r7
   12df0:	bl	13eb4 <table_get_uchar@@Base>
   12df4:	mov	r3, r0
   12df8:	mov	r0, sl
   12dfc:	mov	r1, r5
   12e00:	mov	r2, r7
   12e04:	bl	14740 <table_set_uchar@@Base>
   12e08:	b	12e84 <table_dupe@@Base+0x4c4>
   12e0c:	mov	r0, r4
   12e10:	mov	r1, r5
   12e14:	mov	r2, r7
   12e18:	bl	13ec8 <table_get_string@@Base>
   12e1c:	mov	r3, r0
   12e20:	mov	r0, sl
   12e24:	mov	r1, r5
   12e28:	mov	r2, r7
   12e2c:	bl	146f8 <table_set_string@@Base>
   12e30:	b	12e84 <table_dupe@@Base+0x4c4>
   12e34:	mov	r0, r4
   12e38:	mov	r1, r5
   12e3c:	mov	r2, r7
   12e40:	bl	13d10 <table_get_bool@@Base>
   12e44:	mov	r3, r0
   12e48:	mov	r0, sl
   12e4c:	mov	r1, r5
   12e50:	mov	r2, r7
   12e54:	bl	143a8 <table_set_bool@@Base>
   12e58:	b	12e84 <table_dupe@@Base+0x4c4>
   12e5c:	mov	r0, r4
   12e60:	mov	r1, r5
   12e64:	mov	r2, r7
   12e68:	bl	13ecc <table_get_ptr@@Base>
   12e6c:	str	r0, [sp, #8]
   12e70:	mov	r0, sl
   12e74:	mov	r1, r5
   12e78:	mov	r2, r7
   12e7c:	mov	r3, r9
   12e80:	bl	14768 <table_set_ptr@@Base>
   12e84:	add	r7, r7, #1
   12e88:	cmp	r6, r7
   12e8c:	bne	12a54 <table_dupe@@Base+0x94>
   12e90:	add	r5, r5, #1
   12e94:	cmp	r5, r8
   12e98:	bne	12a40 <table_dupe@@Base+0x80>
   12e9c:	mov	r0, sl
   12ea0:	sub	sp, fp, #28
   12ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ea8 <table_get_major_version@@Base>:
   12ea8:	mov	r0, #0
   12eac:	bx	lr

00012eb0 <table_get_minor_version@@Base>:
   12eb0:	mov	r0, #0
   12eb4:	bx	lr

00012eb8 <table_get_patch_version@@Base>:
   12eb8:	mov	r0, #0
   12ebc:	bx	lr

00012ec0 <table_get_version@@Base>:
   12ec0:	movw	r0, #22825	; 0x5929
   12ec4:	movt	r0, #1
   12ec8:	bx	lr

00012ecc <table_get_callback_length@@Base>:
   12ecc:	ldr	r0, [r0, #32]
   12ed0:	bx	lr

00012ed4 <table_register_callback@@Base>:
   12ed4:	push	{r4, r5, r6, r7, fp, lr}
   12ed8:	add	fp, sp, #16
   12edc:	sub	sp, sp, #8
   12ee0:	mov	r5, r3
   12ee4:	mov	r6, r2
   12ee8:	mov	r7, r1
   12eec:	mov	r4, r0
   12ef0:	bl	12f68 <table_register_callback@@Base+0x94>
   12ef4:	cmp	r0, #1
   12ef8:	blt	12f14 <table_register_callback@@Base+0x40>
   12efc:	ldr	r1, [r4, #44]	; 0x2c
   12f00:	ldr	r2, [r1, r0, lsl #2]
   12f04:	orr	r2, r2, r5
   12f08:	str	r2, [r1, r0, lsl #2]
   12f0c:	sub	sp, fp, #16
   12f10:	pop	{r4, r5, r6, r7, fp, pc}
   12f14:	ldr	r0, [r4, #32]
   12f18:	ldr	r1, [r4, #48]	; 0x30
   12f1c:	udiv	r2, r0, r1
   12f20:	mls	r0, r2, r1, r0
   12f24:	cmp	r0, #0
   12f28:	bne	12f34 <table_register_callback@@Base+0x60>
   12f2c:	mov	r0, r4
   12f30:	bl	12fc0 <table_register_callback@@Base+0xec>
   12f34:	mov	r0, r4
   12f38:	bl	12ecc <table_get_callback_length@@Base>
   12f3c:	mov	r1, r0
   12f40:	str	r5, [sp]
   12f44:	mov	r0, r4
   12f48:	mov	r2, r7
   12f4c:	mov	r3, r6
   12f50:	bl	13018 <table_register_callback@@Base+0x144>
   12f54:	ldr	r0, [r4, #32]
   12f58:	add	r0, r0, #1
   12f5c:	str	r0, [r4, #32]
   12f60:	sub	sp, fp, #16
   12f64:	pop	{r4, r5, r6, r7, fp, pc}
   12f68:	push	{r4, sl, fp, lr}
   12f6c:	add	fp, sp, #8
   12f70:	mov	ip, r0
   12f74:	ldr	r3, [r0, #32]
   12f78:	mvn	r0, #0
   12f7c:	cmp	r3, #1
   12f80:	poplt	{r4, sl, fp, pc}
   12f84:	ldr	lr, [ip, #36]	; 0x24
   12f88:	mov	r3, #0
   12f8c:	ldr	r4, [lr, r3, lsl #2]
   12f90:	cmp	r4, r1
   12f94:	bne	12fac <table_register_callback@@Base+0xd8>
   12f98:	ldr	r4, [ip, #40]	; 0x28
   12f9c:	ldr	r4, [r4, r3, lsl #2]
   12fa0:	cmp	r4, r2
   12fa4:	moveq	r0, r3
   12fa8:	popeq	{r4, sl, fp, pc}
   12fac:	add	r3, r3, #1
   12fb0:	ldr	r4, [ip, #32]
   12fb4:	cmp	r3, r4
   12fb8:	blt	12f8c <table_register_callback@@Base+0xb8>
   12fbc:	pop	{r4, sl, fp, pc}
   12fc0:	push	{r4, sl, fp, lr}
   12fc4:	add	fp, sp, #8
   12fc8:	mov	r4, r0
   12fcc:	ldr	r0, [r0, #36]	; 0x24
   12fd0:	ldr	r1, [r4, #48]	; 0x30
   12fd4:	ldr	r2, [r4, #52]	; 0x34
   12fd8:	add	r1, r2, r1
   12fdc:	str	r1, [r4, #52]	; 0x34
   12fe0:	lsl	r1, r1, #2
   12fe4:	bl	11fb0 <realloc@plt>
   12fe8:	str	r0, [r4, #36]	; 0x24
   12fec:	ldr	r0, [r4, #40]	; 0x28
   12ff0:	ldr	r1, [r4, #52]	; 0x34
   12ff4:	lsl	r1, r1, #2
   12ff8:	bl	11fb0 <realloc@plt>
   12ffc:	str	r0, [r4, #40]	; 0x28
   13000:	ldr	r0, [r4, #44]	; 0x2c
   13004:	ldr	r1, [r4, #52]	; 0x34
   13008:	lsl	r1, r1, #2
   1300c:	bl	11fb0 <realloc@plt>
   13010:	str	r0, [r4, #44]	; 0x2c
   13014:	pop	{r4, sl, fp, pc}
   13018:	ldr	ip, [r0, #36]	; 0x24
   1301c:	str	r2, [ip, r1, lsl #2]
   13020:	ldr	r2, [r0, #40]	; 0x28
   13024:	str	r3, [r2, r1, lsl #2]
   13028:	ldr	r0, [r0, #44]	; 0x2c
   1302c:	ldr	r2, [sp]
   13030:	str	r2, [r0, r1, lsl #2]
   13034:	bx	lr

00013038 <table_unregister_callback@@Base>:
   13038:	push	{r4, sl, fp, lr}
   1303c:	add	fp, sp, #8
   13040:	mov	r4, r0
   13044:	bl	12f68 <table_register_callback@@Base+0x94>
   13048:	cmn	r0, #1
   1304c:	popeq	{r4, sl, fp, pc}
   13050:	ldr	r1, [r4, #32]
   13054:	sub	r2, r1, #1
   13058:	cmp	r0, r2
   1305c:	bge	130a4 <table_unregister_callback@@Base+0x6c>
   13060:	mov	r1, #4
   13064:	add	r1, r1, r0, lsl #2
   13068:	ldr	r2, [r4, #36]	; 0x24
   1306c:	ldr	r3, [r2, r1]!
   13070:	str	r3, [r2, #-4]
   13074:	ldr	r2, [r4, #40]	; 0x28
   13078:	ldr	r3, [r2, r1]!
   1307c:	str	r3, [r2, #-4]
   13080:	ldr	r2, [r4, #44]	; 0x2c
   13084:	ldr	r3, [r2, r1]!
   13088:	str	r3, [r2, #-4]
   1308c:	add	r1, r1, #4
   13090:	add	r0, r0, #1
   13094:	ldr	r2, [r4, #32]
   13098:	sub	r2, r2, #1
   1309c:	cmp	r0, r2
   130a0:	blt	13068 <table_unregister_callback@@Base+0x30>
   130a4:	str	r2, [r4, #32]
   130a8:	ldr	r0, [r4, #48]	; 0x30
   130ac:	udiv	r1, r2, r0
   130b0:	mls	r0, r1, r0, r2
   130b4:	cmp	r0, #0
   130b8:	beq	130c0 <table_unregister_callback@@Base+0x88>
   130bc:	pop	{r4, sl, fp, pc}
   130c0:	mov	r0, r4
   130c4:	pop	{r4, sl, fp, lr}
   130c8:	b	130cc <table_unregister_callback@@Base+0x94>
   130cc:	push	{r4, sl, fp, lr}
   130d0:	add	fp, sp, #8
   130d4:	mov	r4, r0
   130d8:	ldr	r0, [r0, #36]	; 0x24
   130dc:	ldr	r1, [r4, #48]	; 0x30
   130e0:	ldr	r2, [r4, #52]	; 0x34
   130e4:	subs	r1, r2, r1
   130e8:	str	r1, [r4, #52]	; 0x34
   130ec:	beq	13128 <table_unregister_callback@@Base+0xf0>
   130f0:	lsl	r1, r1, #2
   130f4:	bl	11fb0 <realloc@plt>
   130f8:	str	r0, [r4, #36]	; 0x24
   130fc:	ldr	r0, [r4, #40]	; 0x28
   13100:	ldr	r1, [r4, #52]	; 0x34
   13104:	lsl	r1, r1, #2
   13108:	bl	11fb0 <realloc@plt>
   1310c:	str	r0, [r4, #40]	; 0x28
   13110:	ldr	r0, [r4, #44]	; 0x2c
   13114:	ldr	r1, [r4, #52]	; 0x34
   13118:	lsl	r1, r1, #2
   1311c:	bl	11fb0 <realloc@plt>
   13120:	str	r0, [r4, #44]	; 0x2c
   13124:	pop	{r4, sl, fp, pc}
   13128:	bl	11f98 <free@plt>
   1312c:	ldr	r0, [r4, #40]	; 0x28
   13130:	bl	11f98 <free@plt>
   13134:	ldr	r0, [r4, #44]	; 0x2c
   13138:	bl	11f98 <free@plt>
   1313c:	mov	r0, #0
   13140:	str	r0, [r4, #36]	; 0x24
   13144:	str	r0, [r4, #40]	; 0x28
   13148:	str	r0, [r4, #44]	; 0x2c
   1314c:	pop	{r4, sl, fp, pc}

00013150 <table_notify@@Base>:
   13150:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13154:	add	fp, sp, #24
   13158:	sub	sp, sp, #8
   1315c:	mov	r7, r0
   13160:	ldr	r0, [r0, #32]
   13164:	cmp	r0, #1
   13168:	blt	131c4 <table_notify@@Base+0x74>
   1316c:	mov	r4, r3
   13170:	mov	r8, r2
   13174:	mov	r9, r1
   13178:	mov	r5, #0
   1317c:	ldr	r0, [r7, #44]	; 0x2c
   13180:	ldr	r0, [r0, r5, lsl #2]
   13184:	tst	r0, r4
   13188:	beq	131b4 <table_notify@@Base+0x64>
   1318c:	ldr	r0, [r7, #36]	; 0x24
   13190:	ldr	r1, [r7, #40]	; 0x28
   13194:	ldr	r6, [r0, r5, lsl #2]
   13198:	ldr	r0, [r1, r5, lsl #2]
   1319c:	str	r0, [sp]
   131a0:	mov	r0, r7
   131a4:	mov	r1, r9
   131a8:	mov	r2, r8
   131ac:	mov	r3, r4
   131b0:	blx	r6
   131b4:	ldr	r0, [r7, #32]
   131b8:	add	r5, r5, #1
   131bc:	cmp	r5, r0
   131c0:	blt	1317c <table_notify@@Base+0x2c>
   131c4:	sub	sp, fp, #24
   131c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000131cc <table_column_init@@Base>:
   131cc:	push	{r4, r5, r6, r7, fp, lr}
   131d0:	add	fp, sp, #16
   131d4:	mov	r4, r3
   131d8:	mov	r5, r2
   131dc:	bl	13214 <table_get_col_ptr@@Base>
   131e0:	mov	r6, r0
   131e4:	mov	r0, r5
   131e8:	bl	11fec <strlen@plt>
   131ec:	add	r0, r0, #1
   131f0:	bl	11fc8 <malloc@plt>
   131f4:	str	r0, [r6]
   131f8:	ldr	r7, [fp, #8]
   131fc:	cmp	r0, #0
   13200:	beq	1320c <table_column_init@@Base+0x40>
   13204:	mov	r1, r5
   13208:	bl	11fbc <strcpy@plt>
   1320c:	stmib	r6, {r4, r7}
   13210:	pop	{r4, r5, r6, r7, fp, pc}

00013214 <table_get_col_ptr@@Base>:
   13214:	ldr	r0, [r0]
   13218:	add	r1, r1, r1, lsl #1
   1321c:	add	r0, r0, r1, lsl #2
   13220:	bx	lr

00013224 <table_column_destroy@@Base>:
   13224:	push	{fp, lr}
   13228:	mov	fp, sp
   1322c:	bl	13214 <table_get_col_ptr@@Base>
   13230:	ldr	r0, [r0]
   13234:	cmp	r0, #0
   13238:	popeq	{fp, pc}
   1323c:	pop	{fp, lr}
   13240:	b	11f98 <free@plt>

00013244 <table_get_column_length@@Base>:
   13244:	ldr	r0, [r0, #4]
   13248:	bx	lr

0001324c <table_get_column@@Base>:
   1324c:	push	{r4, r5, r6, r7, fp, lr}
   13250:	add	fp, sp, #16
   13254:	mov	r6, r1
   13258:	mov	r7, r0
   1325c:	bl	13244 <table_get_column_length@@Base>
   13260:	mov	r4, r0
   13264:	mov	r5, #0
   13268:	cmp	r0, #1
   1326c:	blt	13298 <table_get_column@@Base+0x4c>
   13270:	mov	r0, r7
   13274:	mov	r1, r5
   13278:	bl	132a8 <table_get_column_name@@Base>
   1327c:	mov	r1, r6
   13280:	bl	11f80 <strcmp@plt>
   13284:	cmp	r0, #0
   13288:	beq	13298 <table_get_column@@Base+0x4c>
   1328c:	add	r5, r5, #1
   13290:	cmp	r5, r4
   13294:	blt	13270 <table_get_column@@Base+0x24>
   13298:	cmp	r5, r4
   1329c:	mvneq	r5, #0
   132a0:	mov	r0, r5
   132a4:	pop	{r4, r5, r6, r7, fp, pc}

000132a8 <table_get_column_name@@Base>:
   132a8:	push	{fp, lr}
   132ac:	mov	fp, sp
   132b0:	bl	13214 <table_get_col_ptr@@Base>
   132b4:	ldr	r0, [r0]
   132b8:	pop	{fp, pc}

000132bc <table_get_column_data_type@@Base>:
   132bc:	push	{fp, lr}
   132c0:	mov	fp, sp
   132c4:	bl	13214 <table_get_col_ptr@@Base>
   132c8:	ldr	r0, [r0, #4]
   132cc:	pop	{fp, pc}

000132d0 <table_add_column@@Base>:
   132d0:	push	{r4, r5, r6, sl, fp, lr}
   132d4:	add	fp, sp, #16
   132d8:	mov	r5, r2
   132dc:	mov	r6, r1
   132e0:	mov	r4, r0
   132e4:	bl	13244 <table_get_column_length@@Base>
   132e8:	ldr	r1, [r4, #8]
   132ec:	udiv	r2, r0, r1
   132f0:	mls	r0, r2, r1, r0
   132f4:	cmp	r0, #0
   132f8:	bne	13304 <table_add_column@@Base+0x34>
   132fc:	mov	r0, r4
   13300:	bl	13340 <table_add_column@@Base+0x70>
   13304:	mov	r0, r4
   13308:	mov	r1, r6
   1330c:	mov	r2, r5
   13310:	bl	133bc <table_add_column@@Base+0xec>
   13314:	mov	r0, r4
   13318:	bl	13244 <table_get_column_length@@Base>
   1331c:	mov	r2, r0
   13320:	mov	r0, r4
   13324:	mvn	r1, #0
   13328:	mov	r3, #8
   1332c:	bl	13150 <table_notify@@Base>
   13330:	ldr	r0, [r4, #4]
   13334:	add	r1, r0, #1
   13338:	str	r1, [r4, #4]
   1333c:	pop	{r4, r5, r6, sl, fp, pc}
   13340:	push	{r4, r5, r6, r7, fp, lr}
   13344:	add	fp, sp, #16
   13348:	mov	r4, r0
   1334c:	ldr	r0, [r0]
   13350:	ldr	r1, [r4, #8]
   13354:	ldr	r2, [r4, #12]
   13358:	add	r1, r2, r1
   1335c:	str	r1, [r4, #12]
   13360:	add	r1, r1, r1, lsl #1
   13364:	lsl	r1, r1, #2
   13368:	bl	11fb0 <realloc@plt>
   1336c:	str	r0, [r4]
   13370:	mov	r0, r4
   13374:	bl	13f68 <table_get_row_length@@Base>
   13378:	cmp	r0, #1
   1337c:	poplt	{r4, r5, r6, r7, fp, pc}
   13380:	mov	r5, r0
   13384:	mov	r6, #0
   13388:	mov	r0, r4
   1338c:	mov	r1, r6
   13390:	bl	13ef8 <table_get_row_ptr@@Base>
   13394:	mov	r7, r0
   13398:	ldr	r0, [r0]
   1339c:	ldr	r1, [r4, #12]
   133a0:	lsl	r1, r1, #2
   133a4:	bl	11fb0 <realloc@plt>
   133a8:	str	r0, [r7]
   133ac:	add	r6, r6, #1
   133b0:	cmp	r5, r6
   133b4:	bne	13388 <table_add_column@@Base+0xb8>
   133b8:	pop	{r4, r5, r6, r7, fp, pc}
   133bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133c0:	add	fp, sp, #24
   133c4:	sub	sp, sp, #8
   133c8:	mov	r7, r2
   133cc:	mov	r8, r1
   133d0:	mov	r4, r0
   133d4:	bl	13f68 <table_get_row_length@@Base>
   133d8:	mov	r5, r0
   133dc:	mov	r0, r4
   133e0:	bl	13244 <table_get_column_length@@Base>
   133e4:	mov	r6, r0
   133e8:	mov	r0, r7
   133ec:	bl	13ce4 <table_get_default_compare_function_for_data_type@@Base>
   133f0:	str	r0, [sp]
   133f4:	mov	r0, r4
   133f8:	mov	r1, r6
   133fc:	mov	r2, r8
   13400:	mov	r3, r7
   13404:	bl	131cc <table_column_init@@Base>
   13408:	cmp	r5, #1
   1340c:	blt	13430 <table_add_column@@Base+0x160>
   13410:	mov	r7, #0
   13414:	mov	r0, r4
   13418:	mov	r1, r7
   1341c:	mov	r2, r6
   13420:	bl	14ddc <table_cell_init@@Base>
   13424:	add	r7, r7, #1
   13428:	cmp	r5, r7
   1342c:	bne	13414 <table_add_column@@Base+0x144>
   13430:	sub	sp, fp, #24
   13434:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013438 <table_remove_column@@Base>:
   13438:	push	{r4, r5, fp, lr}
   1343c:	add	fp, sp, #8
   13440:	mov	r4, r1
   13444:	mov	r5, r0
   13448:	bl	13498 <table_remove_column@@Base+0x60>
   1344c:	ldr	r0, [r5, #4]
   13450:	sub	r0, r0, #1
   13454:	str	r0, [r5, #4]
   13458:	mov	r0, r5
   1345c:	bl	13244 <table_get_column_length@@Base>
   13460:	ldr	r1, [r5, #8]
   13464:	udiv	r2, r0, r1
   13468:	mls	r0, r2, r1, r0
   1346c:	cmp	r0, #0
   13470:	bne	1347c <table_remove_column@@Base+0x44>
   13474:	mov	r0, r5
   13478:	bl	1355c <table_remove_column@@Base+0x124>
   1347c:	mov	r0, r5
   13480:	mvn	r1, #0
   13484:	mov	r2, r4
   13488:	mov	r3, #16
   1348c:	bl	13150 <table_notify@@Base>
   13490:	mov	r0, #0
   13494:	pop	{r4, r5, fp, pc}
   13498:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1349c:	add	fp, sp, #24
   134a0:	mov	r4, r1
   134a4:	mov	r5, r0
   134a8:	bl	13224 <table_column_destroy@@Base>
   134ac:	mov	r0, r5
   134b0:	bl	13244 <table_get_column_length@@Base>
   134b4:	sub	r6, r0, #1
   134b8:	cmp	r6, r4
   134bc:	ble	134f0 <table_remove_column@@Base+0xb8>
   134c0:	sub	r0, r6, r4
   134c4:	add	r1, r4, r4, lsl #1
   134c8:	lsl	r1, r1, #2
   134cc:	ldr	r2, [r5]
   134d0:	add	r2, r2, r1
   134d4:	vldr	d16, [r2, #12]
   134d8:	ldr	r3, [r2, #20]
   134dc:	str	r3, [r2, #8]
   134e0:	vstr	d16, [r2]
   134e4:	subs	r0, r0, #1
   134e8:	add	r1, r1, #12
   134ec:	bne	134cc <table_remove_column@@Base+0x94>
   134f0:	mov	r0, r5
   134f4:	bl	13f68 <table_get_row_length@@Base>
   134f8:	cmp	r0, #1
   134fc:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   13500:	mov	r8, r0
   13504:	mov	r7, #0
   13508:	mov	r0, r5
   1350c:	mov	r1, r7
   13510:	mov	r2, r4
   13514:	bl	14e10 <table_cell_destroy@@Base>
   13518:	mov	r0, r5
   1351c:	mov	r1, r7
   13520:	bl	13ef8 <table_get_row_ptr@@Base>
   13524:	cmp	r6, r4
   13528:	ble	1354c <table_remove_column@@Base+0x114>
   1352c:	mov	r1, r4
   13530:	ldr	r2, [r0]
   13534:	add	r3, r2, r1, lsl #2
   13538:	ldr	r3, [r3, #4]
   1353c:	str	r3, [r2, r1, lsl #2]
   13540:	add	r1, r1, #1
   13544:	cmp	r6, r1
   13548:	bne	13530 <table_remove_column@@Base+0xf8>
   1354c:	add	r7, r7, #1
   13550:	cmp	r7, r8
   13554:	bne	13508 <table_remove_column@@Base+0xd0>
   13558:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1355c:	push	{r4, r5, r6, r7, fp, lr}
   13560:	add	fp, sp, #16
   13564:	mov	r4, r0
   13568:	ldr	r0, [r0]
   1356c:	ldr	r1, [r4, #8]
   13570:	ldr	r2, [r4, #12]
   13574:	sub	r1, r2, r1
   13578:	str	r1, [r4, #12]
   1357c:	add	r1, r1, r1, lsl #1
   13580:	lsl	r1, r1, #2
   13584:	bl	11fb0 <realloc@plt>
   13588:	str	r0, [r4]
   1358c:	mov	r0, r4
   13590:	bl	13f68 <table_get_row_length@@Base>
   13594:	cmp	r0, #1
   13598:	poplt	{r4, r5, r6, r7, fp, pc}
   1359c:	mov	r5, r0
   135a0:	mov	r6, #0
   135a4:	mov	r0, r4
   135a8:	mov	r1, r6
   135ac:	bl	13ef8 <table_get_row_ptr@@Base>
   135b0:	mov	r7, r0
   135b4:	ldr	r0, [r0]
   135b8:	ldr	r1, [r4, #12]
   135bc:	lsl	r1, r1, #2
   135c0:	bl	11fb0 <realloc@plt>
   135c4:	str	r0, [r7]
   135c8:	add	r6, r6, #1
   135cc:	cmp	r5, r6
   135d0:	bne	135a4 <table_remove_column@@Base+0x16c>
   135d4:	pop	{r4, r5, r6, r7, fp, pc}

000135d8 <table_get_column_compare_function@@Base>:
   135d8:	push	{fp, lr}
   135dc:	mov	fp, sp
   135e0:	bl	13214 <table_get_col_ptr@@Base>
   135e4:	ldr	r0, [r0, #8]
   135e8:	pop	{fp, pc}

000135ec <table_set_column_compare_function@@Base>:
   135ec:	push	{r4, sl, fp, lr}
   135f0:	add	fp, sp, #8
   135f4:	mov	r4, r2
   135f8:	bl	13214 <table_get_col_ptr@@Base>
   135fc:	str	r4, [r0, #8]
   13600:	pop	{r4, sl, fp, pc}

00013604 <table_compare_bool@@Base>:
   13604:	cmp	r0, #0
   13608:	beq	1363c <table_compare_bool@@Base+0x38>
   1360c:	cmp	r1, #0
   13610:	moveq	r1, #1
   13614:	moveq	r0, r1
   13618:	bxeq	lr
   1361c:	ldrb	r2, [r1]
   13620:	ldrb	r0, [r0]
   13624:	mov	r1, #0
   13628:	cmp	r0, r2
   1362c:	mvncc	r1, #0
   13630:	movwhi	r1, #1
   13634:	mov	r0, r1
   13638:	bx	lr
   1363c:	cmp	r1, #0
   13640:	mvnne	r1, #0
   13644:	mov	r0, r1
   13648:	bx	lr

0001364c <table_compare_int@@Base>:
   1364c:	cmp	r0, #0
   13650:	beq	13684 <table_compare_int@@Base+0x38>
   13654:	cmp	r1, #0
   13658:	moveq	r1, #1
   1365c:	moveq	r0, r1
   13660:	bxeq	lr
   13664:	ldr	r2, [r1]
   13668:	ldr	r0, [r0]
   1366c:	mov	r1, #0
   13670:	cmp	r0, r2
   13674:	mvnlt	r1, #0
   13678:	movwgt	r1, #1
   1367c:	mov	r0, r1
   13680:	bx	lr
   13684:	cmp	r1, #0
   13688:	mvnne	r1, #0
   1368c:	mov	r0, r1
   13690:	bx	lr

00013694 <table_compare_uint@@Base>:
   13694:	cmp	r0, #0
   13698:	beq	136cc <table_compare_uint@@Base+0x38>
   1369c:	cmp	r1, #0
   136a0:	moveq	r1, #1
   136a4:	moveq	r0, r1
   136a8:	bxeq	lr
   136ac:	ldr	r2, [r1]
   136b0:	ldr	r0, [r0]
   136b4:	mov	r1, #0
   136b8:	cmp	r0, r2
   136bc:	mvncc	r1, #0
   136c0:	movwhi	r1, #1
   136c4:	mov	r0, r1
   136c8:	bx	lr
   136cc:	cmp	r1, #0
   136d0:	mvnne	r1, #0
   136d4:	mov	r0, r1
   136d8:	bx	lr

000136dc <table_compare_int8@@Base>:
   136dc:	cmp	r0, #0
   136e0:	beq	13714 <table_compare_int8@@Base+0x38>
   136e4:	cmp	r1, #0
   136e8:	moveq	r1, #1
   136ec:	moveq	r0, r1
   136f0:	bxeq	lr
   136f4:	ldrsb	r2, [r1]
   136f8:	ldrsb	r0, [r0]
   136fc:	mov	r1, #0
   13700:	cmp	r0, r2
   13704:	mvnlt	r1, #0
   13708:	movwgt	r1, #1
   1370c:	mov	r0, r1
   13710:	bx	lr
   13714:	cmp	r1, #0
   13718:	mvnne	r1, #0
   1371c:	mov	r0, r1
   13720:	bx	lr

00013724 <table_compare_uint8@@Base>:
   13724:	cmp	r0, #0
   13728:	beq	1375c <table_compare_uint8@@Base+0x38>
   1372c:	cmp	r1, #0
   13730:	moveq	r1, #1
   13734:	moveq	r0, r1
   13738:	bxeq	lr
   1373c:	ldrb	r2, [r1]
   13740:	ldrb	r0, [r0]
   13744:	mov	r1, #0
   13748:	cmp	r0, r2
   1374c:	mvncc	r1, #0
   13750:	movwhi	r1, #1
   13754:	mov	r0, r1
   13758:	bx	lr
   1375c:	cmp	r1, #0
   13760:	mvnne	r1, #0
   13764:	mov	r0, r1
   13768:	bx	lr

0001376c <table_compare_int16@@Base>:
   1376c:	cmp	r0, #0
   13770:	beq	137a4 <table_compare_int16@@Base+0x38>
   13774:	cmp	r1, #0
   13778:	moveq	r1, #1
   1377c:	moveq	r0, r1
   13780:	bxeq	lr
   13784:	ldrsh	r2, [r1]
   13788:	ldrsh	r0, [r0]
   1378c:	mov	r1, #0
   13790:	cmp	r0, r2
   13794:	mvnlt	r1, #0
   13798:	movwgt	r1, #1
   1379c:	mov	r0, r1
   137a0:	bx	lr
   137a4:	cmp	r1, #0
   137a8:	mvnne	r1, #0
   137ac:	mov	r0, r1
   137b0:	bx	lr

000137b4 <table_compare_uint16@@Base>:
   137b4:	cmp	r0, #0
   137b8:	beq	137ec <table_compare_uint16@@Base+0x38>
   137bc:	cmp	r1, #0
   137c0:	moveq	r1, #1
   137c4:	moveq	r0, r1
   137c8:	bxeq	lr
   137cc:	ldrh	r2, [r1]
   137d0:	ldrh	r0, [r0]
   137d4:	mov	r1, #0
   137d8:	cmp	r0, r2
   137dc:	mvncc	r1, #0
   137e0:	movwhi	r1, #1
   137e4:	mov	r0, r1
   137e8:	bx	lr
   137ec:	cmp	r1, #0
   137f0:	mvnne	r1, #0
   137f4:	mov	r0, r1
   137f8:	bx	lr

000137fc <table_compare_int32@@Base>:
   137fc:	cmp	r0, #0
   13800:	beq	13834 <table_compare_int32@@Base+0x38>
   13804:	cmp	r1, #0
   13808:	moveq	r1, #1
   1380c:	moveq	r0, r1
   13810:	bxeq	lr
   13814:	ldr	r2, [r1]
   13818:	ldr	r0, [r0]
   1381c:	mov	r1, #0
   13820:	cmp	r0, r2
   13824:	mvnlt	r1, #0
   13828:	movwgt	r1, #1
   1382c:	mov	r0, r1
   13830:	bx	lr
   13834:	cmp	r1, #0
   13838:	mvnne	r1, #0
   1383c:	mov	r0, r1
   13840:	bx	lr

00013844 <table_compare_uint32@@Base>:
   13844:	cmp	r0, #0
   13848:	beq	1387c <table_compare_uint32@@Base+0x38>
   1384c:	cmp	r1, #0
   13850:	moveq	r1, #1
   13854:	moveq	r0, r1
   13858:	bxeq	lr
   1385c:	ldr	r2, [r1]
   13860:	ldr	r0, [r0]
   13864:	mov	r1, #0
   13868:	cmp	r0, r2
   1386c:	mvncc	r1, #0
   13870:	movwhi	r1, #1
   13874:	mov	r0, r1
   13878:	bx	lr
   1387c:	cmp	r1, #0
   13880:	mvnne	r1, #0
   13884:	mov	r0, r1
   13888:	bx	lr

0001388c <table_compare_int64@@Base>:
   1388c:	cmp	r0, #0
   13890:	beq	138e4 <table_compare_int64@@Base+0x58>
   13894:	cmp	r1, #0
   13898:	moveq	r1, #1
   1389c:	moveq	r0, r1
   138a0:	bxeq	lr
   138a4:	push	{r5, r7, fp, lr}
   138a8:	add	fp, sp, #8
   138ac:	ldm	r1, {r2, r7}
   138b0:	ldm	r0, {r0, r5}
   138b4:	mov	r1, #0
   138b8:	subs	r3, r0, r2
   138bc:	sbcs	r3, r5, r7
   138c0:	movwlt	r1, #1
   138c4:	cmp	r1, #0
   138c8:	mvnne	r1, #0
   138cc:	subs	r0, r2, r0
   138d0:	sbcs	r0, r7, r5
   138d4:	movwlt	r1, #1
   138d8:	pop	{r5, r7, fp, lr}
   138dc:	mov	r0, r1
   138e0:	bx	lr
   138e4:	cmp	r1, #0
   138e8:	mvnne	r1, #0
   138ec:	mov	r0, r1
   138f0:	bx	lr

000138f4 <table_compare_uint64@@Base>:
   138f4:	cmp	r0, #0
   138f8:	beq	1394c <table_compare_uint64@@Base+0x58>
   138fc:	cmp	r1, #0
   13900:	moveq	r1, #1
   13904:	moveq	r0, r1
   13908:	bxeq	lr
   1390c:	push	{r5, r7, fp, lr}
   13910:	add	fp, sp, #8
   13914:	ldm	r1, {r2, r7}
   13918:	ldm	r0, {r0, r5}
   1391c:	mov	r1, #0
   13920:	subs	r3, r0, r2
   13924:	sbcs	r3, r5, r7
   13928:	movwcc	r1, #1
   1392c:	cmp	r1, #0
   13930:	mvnne	r1, #0
   13934:	subs	r0, r2, r0
   13938:	sbcs	r0, r7, r5
   1393c:	movwcc	r1, #1
   13940:	pop	{r5, r7, fp, lr}
   13944:	mov	r0, r1
   13948:	bx	lr
   1394c:	cmp	r1, #0
   13950:	mvnne	r1, #0
   13954:	mov	r0, r1
   13958:	bx	lr

0001395c <table_compare_short@@Base>:
   1395c:	cmp	r0, #0
   13960:	beq	13994 <table_compare_short@@Base+0x38>
   13964:	cmp	r1, #0
   13968:	moveq	r1, #1
   1396c:	moveq	r0, r1
   13970:	bxeq	lr
   13974:	ldrsh	r2, [r1]
   13978:	ldrsh	r0, [r0]
   1397c:	mov	r1, #0
   13980:	cmp	r0, r2
   13984:	mvnlt	r1, #0
   13988:	movwgt	r1, #1
   1398c:	mov	r0, r1
   13990:	bx	lr
   13994:	cmp	r1, #0
   13998:	mvnne	r1, #0
   1399c:	mov	r0, r1
   139a0:	bx	lr

000139a4 <table_compare_ushort@@Base>:
   139a4:	cmp	r0, #0
   139a8:	beq	139dc <table_compare_ushort@@Base+0x38>
   139ac:	cmp	r1, #0
   139b0:	moveq	r1, #1
   139b4:	moveq	r0, r1
   139b8:	bxeq	lr
   139bc:	ldrh	r2, [r1]
   139c0:	ldrh	r0, [r0]
   139c4:	mov	r1, #0
   139c8:	cmp	r0, r2
   139cc:	mvncc	r1, #0
   139d0:	movwhi	r1, #1
   139d4:	mov	r0, r1
   139d8:	bx	lr
   139dc:	cmp	r1, #0
   139e0:	mvnne	r1, #0
   139e4:	mov	r0, r1
   139e8:	bx	lr

000139ec <table_compare_long@@Base>:
   139ec:	cmp	r0, #0
   139f0:	beq	13a24 <table_compare_long@@Base+0x38>
   139f4:	cmp	r1, #0
   139f8:	moveq	r1, #1
   139fc:	moveq	r0, r1
   13a00:	bxeq	lr
   13a04:	ldr	r2, [r1]
   13a08:	ldr	r0, [r0]
   13a0c:	mov	r1, #0
   13a10:	cmp	r0, r2
   13a14:	mvnlt	r1, #0
   13a18:	movwgt	r1, #1
   13a1c:	mov	r0, r1
   13a20:	bx	lr
   13a24:	cmp	r1, #0
   13a28:	mvnne	r1, #0
   13a2c:	mov	r0, r1
   13a30:	bx	lr

00013a34 <table_compare_ulong@@Base>:
   13a34:	cmp	r0, #0
   13a38:	beq	13a6c <table_compare_ulong@@Base+0x38>
   13a3c:	cmp	r1, #0
   13a40:	moveq	r1, #1
   13a44:	moveq	r0, r1
   13a48:	bxeq	lr
   13a4c:	ldr	r2, [r1]
   13a50:	ldr	r0, [r0]
   13a54:	mov	r1, #0
   13a58:	cmp	r0, r2
   13a5c:	mvncc	r1, #0
   13a60:	movwhi	r1, #1
   13a64:	mov	r0, r1
   13a68:	bx	lr
   13a6c:	cmp	r1, #0
   13a70:	mvnne	r1, #0
   13a74:	mov	r0, r1
   13a78:	bx	lr

00013a7c <table_compare_llong@@Base>:
   13a7c:	cmp	r0, #0
   13a80:	beq	13ad4 <table_compare_llong@@Base+0x58>
   13a84:	cmp	r1, #0
   13a88:	moveq	r1, #1
   13a8c:	moveq	r0, r1
   13a90:	bxeq	lr
   13a94:	push	{r5, r7, fp, lr}
   13a98:	add	fp, sp, #8
   13a9c:	ldm	r1, {r2, r7}
   13aa0:	ldm	r0, {r0, r5}
   13aa4:	mov	r1, #0
   13aa8:	subs	r3, r0, r2
   13aac:	sbcs	r3, r5, r7
   13ab0:	movwlt	r1, #1
   13ab4:	cmp	r1, #0
   13ab8:	mvnne	r1, #0
   13abc:	subs	r0, r2, r0
   13ac0:	sbcs	r0, r7, r5
   13ac4:	movwlt	r1, #1
   13ac8:	pop	{r5, r7, fp, lr}
   13acc:	mov	r0, r1
   13ad0:	bx	lr
   13ad4:	cmp	r1, #0
   13ad8:	mvnne	r1, #0
   13adc:	mov	r0, r1
   13ae0:	bx	lr

00013ae4 <table_compare_ullong@@Base>:
   13ae4:	cmp	r0, #0
   13ae8:	beq	13b1c <table_compare_ullong@@Base+0x38>
   13aec:	cmp	r1, #0
   13af0:	moveq	r1, #1
   13af4:	moveq	r0, r1
   13af8:	bxeq	lr
   13afc:	ldr	r2, [r1]
   13b00:	ldr	r0, [r0]
   13b04:	mov	r1, #0
   13b08:	cmp	r0, r2
   13b0c:	mvncc	r1, #0
   13b10:	movwhi	r1, #1
   13b14:	mov	r0, r1
   13b18:	bx	lr
   13b1c:	cmp	r1, #0
   13b20:	mvnne	r1, #0
   13b24:	mov	r0, r1
   13b28:	bx	lr

00013b2c <table_compare_float@@Base>:
   13b2c:	cmp	r0, #0
   13b30:	beq	13b68 <table_compare_float@@Base+0x3c>
   13b34:	cmp	r1, #0
   13b38:	moveq	r1, #1
   13b3c:	moveq	r0, r1
   13b40:	bxeq	lr
   13b44:	vldr	s0, [r1]
   13b48:	vldr	s2, [r0]
   13b4c:	mov	r1, #0
   13b50:	vcmpe.f32	s2, s0
   13b54:	vmrs	APSR_nzcv, fpscr
   13b58:	mvnmi	r1, #0
   13b5c:	movwgt	r1, #1
   13b60:	mov	r0, r1
   13b64:	bx	lr
   13b68:	cmp	r1, #0
   13b6c:	mvnne	r1, #0
   13b70:	mov	r0, r1
   13b74:	bx	lr

00013b78 <table_compare_double@@Base>:
   13b78:	cmp	r0, #0
   13b7c:	beq	13bb4 <table_compare_double@@Base+0x3c>
   13b80:	cmp	r1, #0
   13b84:	moveq	r1, #1
   13b88:	moveq	r0, r1
   13b8c:	bxeq	lr
   13b90:	vldr	d16, [r1]
   13b94:	vldr	d17, [r0]
   13b98:	mov	r1, #0
   13b9c:	vcmpe.f64	d17, d16
   13ba0:	vmrs	APSR_nzcv, fpscr
   13ba4:	mvnmi	r1, #0
   13ba8:	movwgt	r1, #1
   13bac:	mov	r0, r1
   13bb0:	bx	lr
   13bb4:	cmp	r1, #0
   13bb8:	mvnne	r1, #0
   13bbc:	mov	r0, r1
   13bc0:	bx	lr

00013bc4 <table_compare_ldouble@@Base>:
   13bc4:	cmp	r0, #0
   13bc8:	beq	13c00 <table_compare_ldouble@@Base+0x3c>
   13bcc:	cmp	r1, #0
   13bd0:	moveq	r1, #1
   13bd4:	moveq	r0, r1
   13bd8:	bxeq	lr
   13bdc:	vldr	d16, [r1]
   13be0:	vldr	d17, [r0]
   13be4:	mov	r1, #0
   13be8:	vcmpe.f64	d17, d16
   13bec:	vmrs	APSR_nzcv, fpscr
   13bf0:	mvnmi	r1, #0
   13bf4:	movwgt	r1, #1
   13bf8:	mov	r0, r1
   13bfc:	bx	lr
   13c00:	cmp	r1, #0
   13c04:	mvnne	r1, #0
   13c08:	mov	r0, r1
   13c0c:	bx	lr

00013c10 <table_compare_char@@Base>:
   13c10:	cmp	r0, #0
   13c14:	beq	13c48 <table_compare_char@@Base+0x38>
   13c18:	cmp	r1, #0
   13c1c:	moveq	r1, #1
   13c20:	moveq	r0, r1
   13c24:	bxeq	lr
   13c28:	ldrb	r2, [r1]
   13c2c:	ldrb	r0, [r0]
   13c30:	mov	r1, #0
   13c34:	cmp	r0, r2
   13c38:	mvncc	r1, #0
   13c3c:	movwhi	r1, #1
   13c40:	mov	r0, r1
   13c44:	bx	lr
   13c48:	cmp	r1, #0
   13c4c:	mvnne	r1, #0
   13c50:	mov	r0, r1
   13c54:	bx	lr

00013c58 <table_compare_uchar@@Base>:
   13c58:	cmp	r0, #0
   13c5c:	beq	13c90 <table_compare_uchar@@Base+0x38>
   13c60:	cmp	r1, #0
   13c64:	moveq	r1, #1
   13c68:	moveq	r0, r1
   13c6c:	bxeq	lr
   13c70:	ldrb	r2, [r1]
   13c74:	ldrb	r0, [r0]
   13c78:	mov	r1, #0
   13c7c:	cmp	r0, r2
   13c80:	mvncc	r1, #0
   13c84:	movwhi	r1, #1
   13c88:	mov	r0, r1
   13c8c:	bx	lr
   13c90:	cmp	r1, #0
   13c94:	mvnne	r1, #0
   13c98:	mov	r0, r1
   13c9c:	bx	lr

00013ca0 <table_compare_string@@Base>:
   13ca0:	cmp	r0, #0
   13ca4:	beq	13cbc <table_compare_string@@Base+0x1c>
   13ca8:	cmp	r1, #0
   13cac:	moveq	r1, #1
   13cb0:	moveq	r0, r1
   13cb4:	bxeq	lr
   13cb8:	b	11f80 <strcmp@plt>
   13cbc:	cmp	r1, #0
   13cc0:	mvnne	r1, #0
   13cc4:	mov	r0, r1
   13cc8:	bx	lr

00013ccc <table_compare_ptr@@Base>:
   13ccc:	mov	r2, #0
   13cd0:	cmp	r0, r1
   13cd4:	mvncc	r2, #0
   13cd8:	movwhi	r2, #1
   13cdc:	mov	r0, r2
   13ce0:	bx	lr

00013ce4 <table_get_default_compare_function_for_data_type@@Base>:
   13ce4:	cmp	r0, #23
   13ce8:	movhi	r0, #0
   13cec:	movwls	r1, #22832	; 0x5930
   13cf0:	movtls	r1, #1
   13cf4:	ldrls	r0, [r1, r0, lsl #2]
   13cf8:	bx	lr

00013cfc <table_get@@Base>:
   13cfc:	push	{fp, lr}
   13d00:	mov	fp, sp
   13d04:	bl	14df4 <table_get_cell_ptr@@Base>
   13d08:	ldr	r0, [r0]
   13d0c:	pop	{fp, pc}

00013d10 <table_get_bool@@Base>:
   13d10:	push	{fp, lr}
   13d14:	mov	fp, sp
   13d18:	bl	13cfc <table_get@@Base>
   13d1c:	ldrb	r0, [r0]
   13d20:	pop	{fp, pc}

00013d24 <table_get_int@@Base>:
   13d24:	push	{fp, lr}
   13d28:	mov	fp, sp
   13d2c:	bl	13cfc <table_get@@Base>
   13d30:	ldr	r0, [r0]
   13d34:	pop	{fp, pc}

00013d38 <table_get_uint@@Base>:
   13d38:	push	{fp, lr}
   13d3c:	mov	fp, sp
   13d40:	bl	13cfc <table_get@@Base>
   13d44:	ldr	r0, [r0]
   13d48:	pop	{fp, pc}

00013d4c <table_get_int8@@Base>:
   13d4c:	push	{fp, lr}
   13d50:	mov	fp, sp
   13d54:	bl	13cfc <table_get@@Base>
   13d58:	ldrsb	r0, [r0]
   13d5c:	pop	{fp, pc}

00013d60 <table_get_uint8@@Base>:
   13d60:	push	{fp, lr}
   13d64:	mov	fp, sp
   13d68:	bl	13cfc <table_get@@Base>
   13d6c:	ldrb	r0, [r0]
   13d70:	pop	{fp, pc}

00013d74 <table_get_int16@@Base>:
   13d74:	push	{fp, lr}
   13d78:	mov	fp, sp
   13d7c:	bl	13cfc <table_get@@Base>
   13d80:	ldrsh	r0, [r0]
   13d84:	pop	{fp, pc}

00013d88 <table_get_uint16@@Base>:
   13d88:	push	{fp, lr}
   13d8c:	mov	fp, sp
   13d90:	bl	13cfc <table_get@@Base>
   13d94:	ldrh	r0, [r0]
   13d98:	pop	{fp, pc}

00013d9c <table_get_int32@@Base>:
   13d9c:	push	{fp, lr}
   13da0:	mov	fp, sp
   13da4:	bl	13cfc <table_get@@Base>
   13da8:	ldr	r0, [r0]
   13dac:	pop	{fp, pc}

00013db0 <table_get_uint32@@Base>:
   13db0:	push	{fp, lr}
   13db4:	mov	fp, sp
   13db8:	bl	13cfc <table_get@@Base>
   13dbc:	ldr	r0, [r0]
   13dc0:	pop	{fp, pc}

00013dc4 <table_get_int64@@Base>:
   13dc4:	push	{fp, lr}
   13dc8:	mov	fp, sp
   13dcc:	bl	13cfc <table_get@@Base>
   13dd0:	ldrd	r0, [r0]
   13dd4:	pop	{fp, pc}

00013dd8 <table_get_uint64@@Base>:
   13dd8:	push	{fp, lr}
   13ddc:	mov	fp, sp
   13de0:	bl	13cfc <table_get@@Base>
   13de4:	ldrd	r0, [r0]
   13de8:	pop	{fp, pc}

00013dec <table_get_short@@Base>:
   13dec:	push	{fp, lr}
   13df0:	mov	fp, sp
   13df4:	bl	13cfc <table_get@@Base>
   13df8:	ldrsh	r0, [r0]
   13dfc:	pop	{fp, pc}

00013e00 <table_get_ushort@@Base>:
   13e00:	push	{fp, lr}
   13e04:	mov	fp, sp
   13e08:	bl	13cfc <table_get@@Base>
   13e0c:	ldrh	r0, [r0]
   13e10:	pop	{fp, pc}

00013e14 <table_get_long@@Base>:
   13e14:	push	{fp, lr}
   13e18:	mov	fp, sp
   13e1c:	bl	13cfc <table_get@@Base>
   13e20:	ldr	r0, [r0]
   13e24:	pop	{fp, pc}

00013e28 <table_get_ulong@@Base>:
   13e28:	push	{fp, lr}
   13e2c:	mov	fp, sp
   13e30:	bl	13cfc <table_get@@Base>
   13e34:	ldr	r0, [r0]
   13e38:	pop	{fp, pc}

00013e3c <table_get_llong@@Base>:
   13e3c:	push	{fp, lr}
   13e40:	mov	fp, sp
   13e44:	bl	13cfc <table_get@@Base>
   13e48:	ldrd	r0, [r0]
   13e4c:	pop	{fp, pc}

00013e50 <table_get_ullong@@Base>:
   13e50:	push	{fp, lr}
   13e54:	mov	fp, sp
   13e58:	bl	13cfc <table_get@@Base>
   13e5c:	ldrd	r0, [r0]
   13e60:	pop	{fp, pc}

00013e64 <table_get_float@@Base>:
   13e64:	push	{fp, lr}
   13e68:	mov	fp, sp
   13e6c:	bl	13cfc <table_get@@Base>
   13e70:	vldr	s0, [r0]
   13e74:	pop	{fp, pc}

00013e78 <table_get_double@@Base>:
   13e78:	push	{fp, lr}
   13e7c:	mov	fp, sp
   13e80:	bl	13cfc <table_get@@Base>
   13e84:	vldr	d0, [r0]
   13e88:	pop	{fp, pc}

00013e8c <table_get_ldouble@@Base>:
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	bl	13cfc <table_get@@Base>
   13e98:	vldr	d0, [r0]
   13e9c:	pop	{fp, pc}

00013ea0 <table_get_char@@Base>:
   13ea0:	push	{fp, lr}
   13ea4:	mov	fp, sp
   13ea8:	bl	13cfc <table_get@@Base>
   13eac:	ldrb	r0, [r0]
   13eb0:	pop	{fp, pc}

00013eb4 <table_get_uchar@@Base>:
   13eb4:	push	{fp, lr}
   13eb8:	mov	fp, sp
   13ebc:	bl	13cfc <table_get@@Base>
   13ec0:	ldrb	r0, [r0]
   13ec4:	pop	{fp, pc}

00013ec8 <table_get_string@@Base>:
   13ec8:	b	13cfc <table_get@@Base>

00013ecc <table_get_ptr@@Base>:
   13ecc:	b	13cfc <table_get@@Base>

00013ed0 <table_row_init@@Base>:
   13ed0:	push	{r4, r5, fp, lr}
   13ed4:	add	fp, sp, #8
   13ed8:	mov	r4, r0
   13edc:	bl	13ef8 <table_get_row_ptr@@Base>
   13ee0:	mov	r5, r0
   13ee4:	ldr	r0, [r4, #12]
   13ee8:	lsl	r0, r0, #2
   13eec:	bl	11fc8 <malloc@plt>
   13ef0:	str	r0, [r5]
   13ef4:	pop	{r4, r5, fp, pc}

00013ef8 <table_get_row_ptr@@Base>:
   13ef8:	ldr	r0, [r0, #16]
   13efc:	add	r0, r0, r1, lsl #2
   13f00:	bx	lr

00013f04 <table_row_destroy@@Base>:
   13f04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f08:	add	fp, sp, #24
   13f0c:	mov	r4, r1
   13f10:	mov	r5, r0
   13f14:	bl	13244 <table_get_column_length@@Base>
   13f18:	mov	r6, r0
   13f1c:	mov	r0, r5
   13f20:	mov	r1, r4
   13f24:	bl	13ef8 <table_get_row_ptr@@Base>
   13f28:	mov	r8, r0
   13f2c:	cmp	r6, #1
   13f30:	blt	13f54 <table_row_destroy@@Base+0x50>
   13f34:	mov	r7, #0
   13f38:	mov	r0, r5
   13f3c:	mov	r1, r4
   13f40:	mov	r2, r7
   13f44:	bl	14e10 <table_cell_destroy@@Base>
   13f48:	add	r7, r7, #1
   13f4c:	cmp	r6, r7
   13f50:	bne	13f38 <table_row_destroy@@Base+0x34>
   13f54:	ldr	r0, [r8]
   13f58:	cmp	r0, #0
   13f5c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13f60:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f64:	b	11f98 <free@plt>

00013f68 <table_get_row_length@@Base>:
   13f68:	ldr	r0, [r0, #20]
   13f6c:	bx	lr

00013f70 <table_add_row@@Base>:
   13f70:	push	{r4, sl, fp, lr}
   13f74:	add	fp, sp, #8
   13f78:	mov	r4, r0
   13f7c:	bl	13f68 <table_get_row_length@@Base>
   13f80:	ldr	r1, [r4, #24]
   13f84:	udiv	r2, r0, r1
   13f88:	mls	r0, r2, r1, r0
   13f8c:	cmp	r0, #0
   13f90:	bne	13f9c <table_add_row@@Base+0x2c>
   13f94:	mov	r0, r4
   13f98:	bl	13fd0 <table_add_row@@Base+0x60>
   13f9c:	mov	r0, r4
   13fa0:	bl	14000 <table_add_row@@Base+0x90>
   13fa4:	mov	r0, r4
   13fa8:	bl	13f68 <table_get_row_length@@Base>
   13fac:	mov	r1, r0
   13fb0:	mov	r0, r4
   13fb4:	mvn	r2, #0
   13fb8:	mov	r3, #2
   13fbc:	bl	13150 <table_notify@@Base>
   13fc0:	ldr	r0, [r4, #20]
   13fc4:	add	r1, r0, #1
   13fc8:	str	r1, [r4, #20]
   13fcc:	pop	{r4, sl, fp, pc}
   13fd0:	push	{r4, sl, fp, lr}
   13fd4:	add	fp, sp, #8
   13fd8:	mov	r4, r0
   13fdc:	ldr	r0, [r0, #16]
   13fe0:	ldr	r1, [r4, #24]
   13fe4:	ldr	r2, [r4, #28]
   13fe8:	add	r1, r2, r1
   13fec:	str	r1, [r4, #28]
   13ff0:	lsl	r1, r1, #2
   13ff4:	bl	11fb0 <realloc@plt>
   13ff8:	str	r0, [r4, #16]
   13ffc:	pop	{r4, sl, fp, pc}
   14000:	push	{r4, r5, r6, r7, fp, lr}
   14004:	add	fp, sp, #16
   14008:	mov	r4, r0
   1400c:	bl	13f68 <table_get_row_length@@Base>
   14010:	mov	r5, r0
   14014:	mov	r0, r4
   14018:	bl	13244 <table_get_column_length@@Base>
   1401c:	mov	r6, r0
   14020:	mov	r0, r4
   14024:	mov	r1, r5
   14028:	bl	13ed0 <table_row_init@@Base>
   1402c:	cmp	r6, #1
   14030:	poplt	{r4, r5, r6, r7, fp, pc}
   14034:	mov	r7, #0
   14038:	mov	r0, r4
   1403c:	mov	r1, r5
   14040:	mov	r2, r7
   14044:	bl	14ddc <table_cell_init@@Base>
   14048:	add	r7, r7, #1
   1404c:	cmp	r6, r7
   14050:	bne	14038 <table_add_row@@Base+0xc8>
   14054:	pop	{r4, r5, r6, r7, fp, pc}

00014058 <table_remove_row@@Base>:
   14058:	push	{r4, r5, fp, lr}
   1405c:	add	fp, sp, #8
   14060:	mov	r4, r1
   14064:	mov	r5, r0
   14068:	bl	140b8 <table_remove_row@@Base+0x60>
   1406c:	ldr	r0, [r5, #20]
   14070:	sub	r0, r0, #1
   14074:	str	r0, [r5, #20]
   14078:	mov	r0, r5
   1407c:	bl	13f68 <table_get_row_length@@Base>
   14080:	ldr	r1, [r5, #24]
   14084:	udiv	r2, r0, r1
   14088:	mls	r0, r2, r1, r0
   1408c:	cmp	r0, #0
   14090:	bne	1409c <table_remove_row@@Base+0x44>
   14094:	mov	r0, r5
   14098:	bl	14170 <table_remove_row@@Base+0x118>
   1409c:	mov	r0, r5
   140a0:	mov	r1, r4
   140a4:	mvn	r2, #0
   140a8:	mov	r3, #4
   140ac:	bl	13150 <table_notify@@Base>
   140b0:	mov	r0, #0
   140b4:	pop	{r4, r5, fp, pc}
   140b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   140bc:	add	fp, sp, #24
   140c0:	mov	r4, r1
   140c4:	mov	r5, r0
   140c8:	bl	13f68 <table_get_row_length@@Base>
   140cc:	mov	r8, r0
   140d0:	mov	r0, r5
   140d4:	bl	13244 <table_get_column_length@@Base>
   140d8:	cmp	r0, #1
   140dc:	blt	14128 <table_remove_row@@Base+0xd0>
   140e0:	mov	r7, r0
   140e4:	mov	r6, #0
   140e8:	mov	r0, r5
   140ec:	mov	r1, r6
   140f0:	bl	132bc <table_get_column_data_type@@Base>
   140f4:	cmp	r0, #23
   140f8:	beq	1411c <table_remove_row@@Base+0xc4>
   140fc:	mov	r0, r5
   14100:	mov	r1, r4
   14104:	mov	r2, r6
   14108:	bl	14df4 <table_get_cell_ptr@@Base>
   1410c:	ldr	r0, [r0]
   14110:	cmp	r0, #0
   14114:	beq	1411c <table_remove_row@@Base+0xc4>
   14118:	bl	11f98 <free@plt>
   1411c:	add	r6, r6, #1
   14120:	cmp	r7, r6
   14124:	bne	140e8 <table_remove_row@@Base+0x90>
   14128:	mov	r0, r5
   1412c:	mov	r1, r4
   14130:	bl	13ef8 <table_get_row_ptr@@Base>
   14134:	ldr	r0, [r0]
   14138:	cmp	r0, #0
   1413c:	beq	14144 <table_remove_row@@Base+0xec>
   14140:	bl	11f98 <free@plt>
   14144:	sub	r0, r8, #1
   14148:	cmp	r0, r4
   1414c:	pople	{r4, r5, r6, r7, r8, sl, fp, pc}
   14150:	ldr	r1, [r5, #16]
   14154:	add	r2, r1, r4, lsl #2
   14158:	ldr	r2, [r2, #4]
   1415c:	str	r2, [r1, r4, lsl #2]
   14160:	add	r4, r4, #1
   14164:	cmp	r0, r4
   14168:	bne	14150 <table_remove_row@@Base+0xf8>
   1416c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14170:	push	{r4, sl, fp, lr}
   14174:	add	fp, sp, #8
   14178:	mov	r4, r0
   1417c:	ldr	r0, [r0, #16]
   14180:	ldr	r1, [r4, #24]
   14184:	ldr	r2, [r4, #28]
   14188:	sub	r1, r2, r1
   1418c:	str	r1, [r4, #28]
   14190:	lsl	r1, r1, #2
   14194:	bl	11fb0 <realloc@plt>
   14198:	str	r0, [r4, #16]
   1419c:	pop	{r4, sl, fp, pc}

000141a0 <table_set_row_ptr@@Base>:
   141a0:	ldr	r2, [r2]
   141a4:	ldr	r0, [r0, #16]
   141a8:	str	r2, [r0, r1, lsl #2]
   141ac:	bx	lr

000141b0 <table_set@@Base>:
   141b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141b4:	add	fp, sp, #24
   141b8:	mov	r8, r3
   141bc:	mov	r4, r2
   141c0:	mov	r9, r1
   141c4:	mov	r6, r0
   141c8:	bl	14df4 <table_get_cell_ptr@@Base>
   141cc:	mov	r5, r0
   141d0:	mov	r0, r6
   141d4:	mov	r1, r4
   141d8:	bl	13214 <table_get_col_ptr@@Base>
   141dc:	mvn	r7, #0
   141e0:	ldr	r1, [fp, #8]
   141e4:	cmp	r1, #23
   141e8:	bhi	143a0 <table_set@@Base+0x1f0>
   141ec:	add	r2, pc, #0
   141f0:	ldr	pc, [r2, r1, lsl #2]
   141f4:	andeq	r4, r1, r4, asr r2
   141f8:	andeq	r4, r1, r4, asr r2
   141fc:	andeq	r4, r1, ip, asr #5
   14200:	andeq	r4, r1, ip, asr #5
   14204:	andeq	r4, r1, r4, lsl #6
   14208:	andeq	r4, r1, r4, lsl #6
   1420c:	andeq	r4, r1, r4, asr r2
   14210:	andeq	r4, r1, r4, asr r2
   14214:	andeq	r4, r1, ip, lsl #5
   14218:	andeq	r4, r1, ip, lsl #5
   1421c:	andeq	r4, r1, r4, lsl #6
   14220:	andeq	r4, r1, r4, lsl #6
   14224:	andeq	r4, r1, r4, asr r2
   14228:	andeq	r4, r1, r4, asr r2
   1422c:	andeq	r4, r1, ip, lsl #5
   14230:	andeq	r4, r1, ip, lsl #5
   14234:	andeq	r4, r1, r4, asr r2
   14238:	andeq	r4, r1, ip, lsl #5
   1423c:	andeq	r4, r1, ip, lsl #5
   14240:	andeq	r4, r1, ip, asr #5
   14244:	andeq	r4, r1, ip, asr #5
   14248:	andeq	r4, r1, ip, lsr r3
   1424c:	andeq	r4, r1, ip, asr #5
   14250:	andeq	r4, r1, r8, ror r3
   14254:	ldr	r0, [r0, #4]
   14258:	cmp	r0, r1
   1425c:	bne	143a0 <table_set@@Base+0x1f0>
   14260:	ldr	r0, [r5]
   14264:	cmp	r0, #0
   14268:	bne	14280 <table_set@@Base+0xd0>
   1426c:	mov	r0, #4
   14270:	bl	11fc8 <malloc@plt>
   14274:	str	r0, [r5]
   14278:	cmp	r0, #0
   1427c:	beq	143a0 <table_set@@Base+0x1f0>
   14280:	ldr	r1, [r8]
   14284:	str	r1, [r0]
   14288:	b	14388 <table_set@@Base+0x1d8>
   1428c:	ldr	r0, [r0, #4]
   14290:	cmp	r0, r1
   14294:	bne	143a0 <table_set@@Base+0x1f0>
   14298:	ldr	r0, [r5]
   1429c:	cmp	r0, #0
   142a0:	bne	142b8 <table_set@@Base+0x108>
   142a4:	mov	r0, #8
   142a8:	bl	11fc8 <malloc@plt>
   142ac:	str	r0, [r5]
   142b0:	cmp	r0, #0
   142b4:	beq	143a0 <table_set@@Base+0x1f0>
   142b8:	ldr	r1, [r8]
   142bc:	ldr	r2, [r8, #4]
   142c0:	str	r2, [r0, #4]
   142c4:	str	r1, [r0]
   142c8:	b	14388 <table_set@@Base+0x1d8>
   142cc:	ldr	r0, [r0, #4]
   142d0:	cmp	r0, r1
   142d4:	bne	143a0 <table_set@@Base+0x1f0>
   142d8:	ldr	r0, [r5]
   142dc:	cmp	r0, #0
   142e0:	bne	142f8 <table_set@@Base+0x148>
   142e4:	mov	r0, #1
   142e8:	bl	11fc8 <malloc@plt>
   142ec:	str	r0, [r5]
   142f0:	cmp	r0, #0
   142f4:	beq	143a0 <table_set@@Base+0x1f0>
   142f8:	ldrb	r1, [r8]
   142fc:	strb	r1, [r0]
   14300:	b	14388 <table_set@@Base+0x1d8>
   14304:	ldr	r0, [r0, #4]
   14308:	cmp	r0, r1
   1430c:	bne	143a0 <table_set@@Base+0x1f0>
   14310:	ldr	r0, [r5]
   14314:	cmp	r0, #0
   14318:	bne	14330 <table_set@@Base+0x180>
   1431c:	mov	r0, #2
   14320:	bl	11fc8 <malloc@plt>
   14324:	str	r0, [r5]
   14328:	cmp	r0, #0
   1432c:	beq	143a0 <table_set@@Base+0x1f0>
   14330:	ldrh	r1, [r8]
   14334:	strh	r1, [r0]
   14338:	b	14388 <table_set@@Base+0x1d8>
   1433c:	ldr	r0, [r0, #4]
   14340:	cmp	r0, r1
   14344:	bne	143a0 <table_set@@Base+0x1f0>
   14348:	mov	r0, r8
   1434c:	bl	11fec <strlen@plt>
   14350:	ldr	r2, [r5]
   14354:	add	r1, r0, #1
   14358:	mov	r0, r2
   1435c:	bl	11fb0 <realloc@plt>
   14360:	str	r0, [r5]
   14364:	cmp	r0, #0
   14368:	beq	143a0 <table_set@@Base+0x1f0>
   1436c:	mov	r1, r8
   14370:	bl	11fbc <strcpy@plt>
   14374:	b	14388 <table_set@@Base+0x1d8>
   14378:	ldr	r0, [r0, #4]
   1437c:	cmp	r0, r1
   14380:	bne	143a0 <table_set@@Base+0x1f0>
   14384:	str	r8, [r5]
   14388:	mov	r0, r6
   1438c:	mov	r1, r9
   14390:	mov	r2, r4
   14394:	mov	r3, #1
   14398:	bl	13150 <table_notify@@Base>
   1439c:	mov	r7, #0
   143a0:	mov	r0, r7
   143a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143a8 <table_set_bool@@Base>:
   143a8:	push	{fp, lr}
   143ac:	mov	fp, sp
   143b0:	sub	sp, sp, #8
   143b4:	strb	r3, [fp, #-1]
   143b8:	mov	r3, #22
   143bc:	str	r3, [sp]
   143c0:	sub	r3, fp, #1
   143c4:	bl	141b0 <table_set@@Base>
   143c8:	mov	sp, fp
   143cc:	pop	{fp, pc}

000143d0 <table_set_int@@Base>:
   143d0:	push	{fp, lr}
   143d4:	mov	fp, sp
   143d8:	sub	sp, sp, #8
   143dc:	str	r3, [sp, #4]
   143e0:	mov	r3, #0
   143e4:	str	r3, [sp]
   143e8:	add	r3, sp, #4
   143ec:	bl	141b0 <table_set@@Base>
   143f0:	mov	sp, fp
   143f4:	pop	{fp, pc}

000143f8 <table_set_uint@@Base>:
   143f8:	push	{fp, lr}
   143fc:	mov	fp, sp
   14400:	sub	sp, sp, #8
   14404:	str	r3, [sp, #4]
   14408:	mov	r3, #1
   1440c:	str	r3, [sp]
   14410:	add	r3, sp, #4
   14414:	bl	141b0 <table_set@@Base>
   14418:	mov	sp, fp
   1441c:	pop	{fp, pc}

00014420 <table_set_int8@@Base>:
   14420:	push	{fp, lr}
   14424:	mov	fp, sp
   14428:	sub	sp, sp, #8
   1442c:	strb	r3, [fp, #-1]
   14430:	mov	r3, #2
   14434:	str	r3, [sp]
   14438:	sub	r3, fp, #1
   1443c:	bl	141b0 <table_set@@Base>
   14440:	mov	sp, fp
   14444:	pop	{fp, pc}

00014448 <table_set_uint8@@Base>:
   14448:	push	{fp, lr}
   1444c:	mov	fp, sp
   14450:	sub	sp, sp, #8
   14454:	strb	r3, [fp, #-1]
   14458:	mov	r3, #3
   1445c:	str	r3, [sp]
   14460:	sub	r3, fp, #1
   14464:	bl	141b0 <table_set@@Base>
   14468:	mov	sp, fp
   1446c:	pop	{fp, pc}

00014470 <table_set_int16@@Base>:
   14470:	push	{fp, lr}
   14474:	mov	fp, sp
   14478:	sub	sp, sp, #8
   1447c:	strh	r3, [fp, #-2]
   14480:	mov	r3, #4
   14484:	str	r3, [sp]
   14488:	sub	r3, fp, #2
   1448c:	bl	141b0 <table_set@@Base>
   14490:	mov	sp, fp
   14494:	pop	{fp, pc}

00014498 <table_set_uint16@@Base>:
   14498:	push	{fp, lr}
   1449c:	mov	fp, sp
   144a0:	sub	sp, sp, #8
   144a4:	strh	r3, [fp, #-2]
   144a8:	mov	r3, #5
   144ac:	str	r3, [sp]
   144b0:	sub	r3, fp, #2
   144b4:	bl	141b0 <table_set@@Base>
   144b8:	mov	sp, fp
   144bc:	pop	{fp, pc}

000144c0 <table_set_int32@@Base>:
   144c0:	push	{fp, lr}
   144c4:	mov	fp, sp
   144c8:	sub	sp, sp, #8
   144cc:	str	r3, [sp, #4]
   144d0:	mov	r3, #6
   144d4:	str	r3, [sp]
   144d8:	add	r3, sp, #4
   144dc:	bl	141b0 <table_set@@Base>
   144e0:	mov	sp, fp
   144e4:	pop	{fp, pc}

000144e8 <table_set_uint32@@Base>:
   144e8:	push	{fp, lr}
   144ec:	mov	fp, sp
   144f0:	sub	sp, sp, #8
   144f4:	str	r3, [sp, #4]
   144f8:	mov	r3, #7
   144fc:	str	r3, [sp]
   14500:	add	r3, sp, #4
   14504:	bl	141b0 <table_set@@Base>
   14508:	mov	sp, fp
   1450c:	pop	{fp, pc}

00014510 <table_set_int64@@Base>:
   14510:	push	{fp, lr}
   14514:	mov	fp, sp
   14518:	sub	sp, sp, #16
   1451c:	ldr	r3, [fp, #12]
   14520:	str	r3, [sp, #12]
   14524:	ldr	r3, [fp, #8]
   14528:	str	r3, [sp, #8]
   1452c:	mov	r3, #8
   14530:	str	r3, [sp]
   14534:	add	r3, sp, #8
   14538:	bl	141b0 <table_set@@Base>
   1453c:	mov	sp, fp
   14540:	pop	{fp, pc}

00014544 <table_set_uint64@@Base>:
   14544:	push	{fp, lr}
   14548:	mov	fp, sp
   1454c:	sub	sp, sp, #16
   14550:	ldr	r3, [fp, #12]
   14554:	str	r3, [sp, #12]
   14558:	ldr	r3, [fp, #8]
   1455c:	str	r3, [sp, #8]
   14560:	mov	r3, #9
   14564:	str	r3, [sp]
   14568:	add	r3, sp, #8
   1456c:	bl	141b0 <table_set@@Base>
   14570:	mov	sp, fp
   14574:	pop	{fp, pc}

00014578 <table_set_short@@Base>:
   14578:	push	{fp, lr}
   1457c:	mov	fp, sp
   14580:	sub	sp, sp, #8
   14584:	strh	r3, [fp, #-2]
   14588:	mov	r3, #10
   1458c:	str	r3, [sp]
   14590:	sub	r3, fp, #2
   14594:	bl	141b0 <table_set@@Base>
   14598:	mov	sp, fp
   1459c:	pop	{fp, pc}

000145a0 <table_set_ushort@@Base>:
   145a0:	push	{fp, lr}
   145a4:	mov	fp, sp
   145a8:	sub	sp, sp, #8
   145ac:	strh	r3, [fp, #-2]
   145b0:	mov	r3, #11
   145b4:	str	r3, [sp]
   145b8:	sub	r3, fp, #2
   145bc:	bl	141b0 <table_set@@Base>
   145c0:	mov	sp, fp
   145c4:	pop	{fp, pc}

000145c8 <table_set_long@@Base>:
   145c8:	push	{fp, lr}
   145cc:	mov	fp, sp
   145d0:	sub	sp, sp, #8
   145d4:	str	r3, [sp, #4]
   145d8:	mov	r3, #12
   145dc:	str	r3, [sp]
   145e0:	add	r3, sp, #4
   145e4:	bl	141b0 <table_set@@Base>
   145e8:	mov	sp, fp
   145ec:	pop	{fp, pc}

000145f0 <table_set_ulong@@Base>:
   145f0:	push	{fp, lr}
   145f4:	mov	fp, sp
   145f8:	sub	sp, sp, #8
   145fc:	str	r3, [sp, #4]
   14600:	mov	r3, #13
   14604:	str	r3, [sp]
   14608:	add	r3, sp, #4
   1460c:	bl	141b0 <table_set@@Base>
   14610:	mov	sp, fp
   14614:	pop	{fp, pc}

00014618 <table_set_llong@@Base>:
   14618:	push	{fp, lr}
   1461c:	mov	fp, sp
   14620:	sub	sp, sp, #16
   14624:	ldr	r3, [fp, #12]
   14628:	str	r3, [sp, #12]
   1462c:	ldr	r3, [fp, #8]
   14630:	str	r3, [sp, #8]
   14634:	mov	r3, #14
   14638:	str	r3, [sp]
   1463c:	add	r3, sp, #8
   14640:	bl	141b0 <table_set@@Base>
   14644:	mov	sp, fp
   14648:	pop	{fp, pc}

0001464c <table_set_ullong@@Base>:
   1464c:	push	{fp, lr}
   14650:	mov	fp, sp
   14654:	sub	sp, sp, #16
   14658:	ldr	r3, [fp, #12]
   1465c:	str	r3, [sp, #12]
   14660:	ldr	r3, [fp, #8]
   14664:	str	r3, [sp, #8]
   14668:	mov	r3, #15
   1466c:	str	r3, [sp]
   14670:	add	r3, sp, #8
   14674:	bl	141b0 <table_set@@Base>
   14678:	mov	sp, fp
   1467c:	pop	{fp, pc}

00014680 <table_set_float@@Base>:
   14680:	push	{fp, lr}
   14684:	mov	fp, sp
   14688:	sub	sp, sp, #8
   1468c:	vstr	s0, [sp, #4]
   14690:	mov	r3, #16
   14694:	str	r3, [sp]
   14698:	add	r3, sp, #4
   1469c:	bl	141b0 <table_set@@Base>
   146a0:	mov	sp, fp
   146a4:	pop	{fp, pc}

000146a8 <table_set_double@@Base>:
   146a8:	push	{fp, lr}
   146ac:	mov	fp, sp
   146b0:	sub	sp, sp, #16
   146b4:	vstr	d0, [sp, #8]
   146b8:	mov	r3, #17
   146bc:	str	r3, [sp]
   146c0:	add	r3, sp, #8
   146c4:	bl	141b0 <table_set@@Base>
   146c8:	mov	sp, fp
   146cc:	pop	{fp, pc}

000146d0 <table_set_ldouble@@Base>:
   146d0:	push	{fp, lr}
   146d4:	mov	fp, sp
   146d8:	sub	sp, sp, #16
   146dc:	vstr	d0, [sp, #8]
   146e0:	mov	r3, #18
   146e4:	str	r3, [sp]
   146e8:	add	r3, sp, #8
   146ec:	bl	141b0 <table_set@@Base>
   146f0:	mov	sp, fp
   146f4:	pop	{fp, pc}

000146f8 <table_set_string@@Base>:
   146f8:	push	{fp, lr}
   146fc:	mov	fp, sp
   14700:	sub	sp, sp, #8
   14704:	mov	ip, #21
   14708:	str	ip, [sp]
   1470c:	bl	141b0 <table_set@@Base>
   14710:	mov	sp, fp
   14714:	pop	{fp, pc}

00014718 <table_set_char@@Base>:
   14718:	push	{fp, lr}
   1471c:	mov	fp, sp
   14720:	sub	sp, sp, #8
   14724:	strb	r3, [fp, #-1]
   14728:	mov	r3, #19
   1472c:	str	r3, [sp]
   14730:	sub	r3, fp, #1
   14734:	bl	141b0 <table_set@@Base>
   14738:	mov	sp, fp
   1473c:	pop	{fp, pc}

00014740 <table_set_uchar@@Base>:
   14740:	push	{fp, lr}
   14744:	mov	fp, sp
   14748:	sub	sp, sp, #8
   1474c:	strb	r3, [fp, #-1]
   14750:	mov	r3, #20
   14754:	str	r3, [sp]
   14758:	sub	r3, fp, #1
   1475c:	bl	141b0 <table_set@@Base>
   14760:	mov	sp, fp
   14764:	pop	{fp, pc}

00014768 <table_set_ptr@@Base>:
   14768:	push	{fp, lr}
   1476c:	mov	fp, sp
   14770:	sub	sp, sp, #8
   14774:	mov	ip, #23
   14778:	str	ip, [sp]
   1477c:	bl	141b0 <table_set@@Base>
   14780:	mov	sp, fp
   14784:	pop	{fp, pc}

00014788 <table_serialize@@Base>:
   14788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1478c:	add	fp, sp, #28
   14790:	sub	sp, sp, #4
   14794:	mov	r5, r1
   14798:	mov	r4, r0
   1479c:	bl	13f68 <table_get_row_length@@Base>
   147a0:	str	r0, [sp]
   147a4:	mov	r0, r4
   147a8:	bl	13244 <table_get_column_length@@Base>
   147ac:	mov	r9, r0
   147b0:	str	r0, [r5]
   147b4:	ldr	r0, [r4, #8]
   147b8:	str	r0, [r5, #4]
   147bc:	add	r5, r5, #8
   147c0:	cmp	r9, #1
   147c4:	blt	14818 <table_serialize@@Base+0x90>
   147c8:	mov	r6, #0
   147cc:	mov	r0, r4
   147d0:	mov	r1, r6
   147d4:	bl	132a8 <table_get_column_name@@Base>
   147d8:	mov	r8, r0
   147dc:	bl	11fec <strlen@plt>
   147e0:	mov	sl, r0
   147e4:	mov	r0, r4
   147e8:	mov	r1, r6
   147ec:	bl	132bc <table_get_column_data_type@@Base>
   147f0:	str	r0, [r5], #4
   147f4:	add	r7, sl, #1
   147f8:	mov	r0, r5
   147fc:	mov	r1, r8
   14800:	mov	r2, r7
   14804:	bl	1201c <strncpy@plt>
   14808:	add	r5, r5, r7
   1480c:	add	r6, r6, #1
   14810:	cmp	r9, r6
   14814:	bne	147cc <table_serialize@@Base+0x44>
   14818:	ldr	r1, [sp]
   1481c:	str	r1, [r5]
   14820:	ldr	r0, [r4, #24]
   14824:	str	r0, [r5, #4]
   14828:	add	r7, r5, #8
   1482c:	cmp	r1, #1
   14830:	blt	149a0 <table_serialize@@Base+0x218>
   14834:	mov	r8, #0
   14838:	cmp	r9, #1
   1483c:	blt	14990 <table_serialize@@Base+0x208>
   14840:	mov	r6, #0
   14844:	mov	r0, r4
   14848:	mov	r1, r6
   1484c:	bl	132bc <table_get_column_data_type@@Base>
   14850:	cmp	r0, #23
   14854:	bhi	14984 <table_serialize@@Base+0x1fc>
   14858:	add	r1, pc, #0
   1485c:	ldr	pc, [r1, r0, lsl #2]
   14860:	andeq	r4, r1, r0, asr #17
   14864:	andeq	r4, r1, r0, asr #17
   14868:	ldrdeq	r4, [r1], -ip
   1486c:	ldrdeq	r4, [r1], -ip
   14870:	strdeq	r4, [r1], -r8
   14874:	strdeq	r4, [r1], -r8
   14878:	andeq	r4, r1, r0, asr #17
   1487c:	andeq	r4, r1, r0, asr #17
   14880:	andeq	r4, r1, r4, lsl r9
   14884:	andeq	r4, r1, r4, lsl r9
   14888:	strdeq	r4, [r1], -r8
   1488c:	strdeq	r4, [r1], -r8
   14890:	andeq	r4, r1, r0, asr #17
   14894:	andeq	r4, r1, r0, asr #17
   14898:	andeq	r4, r1, r4, lsl r9
   1489c:	andeq	r4, r1, r4, lsl r9
   148a0:	andeq	r4, r1, r0, asr #17
   148a4:	andeq	r4, r1, r4, lsr r9
   148a8:	andeq	r4, r1, r4, lsr r9
   148ac:	ldrdeq	r4, [r1], -ip
   148b0:	ldrdeq	r4, [r1], -ip
   148b4:	andeq	r4, r1, r4, asr r9
   148b8:	ldrdeq	r4, [r1], -ip
   148bc:	andeq	r4, r1, r0, asr #17
   148c0:	mov	r0, r4
   148c4:	mov	r1, r8
   148c8:	mov	r2, r6
   148cc:	bl	13cfc <table_get@@Base>
   148d0:	ldr	r0, [r0]
   148d4:	str	r0, [r7], #4
   148d8:	b	14984 <table_serialize@@Base+0x1fc>
   148dc:	mov	r0, r4
   148e0:	mov	r1, r8
   148e4:	mov	r2, r6
   148e8:	bl	13cfc <table_get@@Base>
   148ec:	ldrb	r0, [r0]
   148f0:	strb	r0, [r7], #1
   148f4:	b	14984 <table_serialize@@Base+0x1fc>
   148f8:	mov	r0, r4
   148fc:	mov	r1, r8
   14900:	mov	r2, r6
   14904:	bl	13cfc <table_get@@Base>
   14908:	ldrh	r0, [r0]
   1490c:	strh	r0, [r7], #2
   14910:	b	14984 <table_serialize@@Base+0x1fc>
   14914:	mov	r0, r4
   14918:	mov	r1, r8
   1491c:	mov	r2, r6
   14920:	bl	13cfc <table_get@@Base>
   14924:	ldrd	r0, [r0]
   14928:	strd	r0, [r7]
   1492c:	add	r7, r7, #8
   14930:	b	14984 <table_serialize@@Base+0x1fc>
   14934:	mov	r0, r4
   14938:	mov	r1, r8
   1493c:	mov	r2, r6
   14940:	bl	13cfc <table_get@@Base>
   14944:	vldr	d16, [r0]
   14948:	vstr	d16, [r7]
   1494c:	add	r7, r7, #8
   14950:	b	14984 <table_serialize@@Base+0x1fc>
   14954:	mov	r0, r4
   14958:	mov	r1, r8
   1495c:	mov	r2, r6
   14960:	bl	13ec8 <table_get_string@@Base>
   14964:	mov	sl, r0
   14968:	bl	11fec <strlen@plt>
   1496c:	add	r5, r0, #1
   14970:	mov	r0, r7
   14974:	mov	r1, sl
   14978:	mov	r2, r5
   1497c:	bl	1201c <strncpy@plt>
   14980:	add	r7, r7, r5
   14984:	add	r6, r6, #1
   14988:	cmp	r9, r6
   1498c:	bne	14844 <table_serialize@@Base+0xbc>
   14990:	add	r8, r8, #1
   14994:	ldr	r0, [sp]
   14998:	cmp	r8, r0
   1499c:	bne	14838 <table_serialize@@Base+0xb0>
   149a0:	ldr	r0, [r4, #32]
   149a4:	str	r0, [r7]
   149a8:	ldr	r0, [r4, #48]	; 0x30
   149ac:	str	r0, [r7, #4]
   149b0:	ldr	r0, [r4, #32]
   149b4:	cmp	r0, #1
   149b8:	blt	149fc <table_serialize@@Base+0x274>
   149bc:	add	r0, r7, #8
   149c0:	mov	r1, #0
   149c4:	ldr	r2, [r4, #36]	; 0x24
   149c8:	ldr	r2, [r2, r1, lsl #2]
   149cc:	str	r2, [r0]
   149d0:	ldr	r2, [r4, #40]	; 0x28
   149d4:	ldr	r2, [r2, r1, lsl #2]
   149d8:	str	r2, [r0, #4]
   149dc:	ldr	r2, [r4, #44]	; 0x2c
   149e0:	ldr	r2, [r2, r1, lsl #2]
   149e4:	str	r2, [r0, #8]
   149e8:	add	r0, r0, #12
   149ec:	add	r1, r1, #1
   149f0:	ldr	r2, [r4, #32]
   149f4:	cmp	r1, r2
   149f8:	blt	149c4 <table_serialize@@Base+0x23c>
   149fc:	sub	sp, fp, #28
   14a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014a04 <table_deserialize@@Base>:
   14a04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a08:	add	fp, sp, #24
   14a0c:	sub	sp, sp, #8
   14a10:	mov	r5, r0
   14a14:	bl	127f4 <table_new@@Base>
   14a18:	mov	r4, r0
   14a1c:	ldr	r9, [r5]
   14a20:	ldr	r0, [r5, #4]
   14a24:	str	r0, [r4, #8]
   14a28:	ldr	r8, [r5, #8]!
   14a2c:	add	r6, r5, #4
   14a30:	cmp	r9, #1
   14a34:	blt	14a68 <table_deserialize@@Base+0x64>
   14a38:	mov	r7, r9
   14a3c:	mov	r0, r4
   14a40:	mov	r1, r6
   14a44:	mov	r2, r8
   14a48:	bl	132d0 <table_add_column@@Base>
   14a4c:	mov	r0, r6
   14a50:	bl	11fec <strlen@plt>
   14a54:	add	r5, r5, r0
   14a58:	ldr	r8, [r5, #5]!
   14a5c:	add	r6, r5, #4
   14a60:	subs	r7, r7, #1
   14a64:	bne	14a3c <table_deserialize@@Base+0x38>
   14a68:	ldr	r0, [r6]
   14a6c:	str	r0, [r4, #24]
   14a70:	add	r6, r5, #8
   14a74:	cmp	r8, #1
   14a78:	blt	14da0 <table_deserialize@@Base+0x39c>
   14a7c:	mov	r7, #0
   14a80:	mov	r0, r4
   14a84:	bl	13f70 <table_add_row@@Base>
   14a88:	cmp	r9, #1
   14a8c:	blt	14d94 <table_deserialize@@Base+0x390>
   14a90:	mov	r5, #0
   14a94:	mov	r0, r4
   14a98:	mov	r1, r5
   14a9c:	bl	132bc <table_get_column_data_type@@Base>
   14aa0:	cmp	r0, #23
   14aa4:	bhi	14d88 <table_deserialize@@Base+0x384>
   14aa8:	add	r1, pc, #0
   14aac:	ldr	pc, [r1, r0, lsl #2]
   14ab0:	andeq	r4, r1, r0, lsl fp
   14ab4:	andeq	r4, r1, r8, lsr #22
   14ab8:	andeq	r4, r1, r0, asr #22
   14abc:	andeq	r4, r1, r8, asr fp
   14ac0:	andeq	r4, r1, r0, ror fp
   14ac4:	andeq	r4, r1, r8, lsl #23
   14ac8:	andeq	r4, r1, r0, lsr #23
   14acc:			; <UNDEFINED> instruction: 0x00014bb8
   14ad0:	ldrdeq	r4, [r1], -r0
   14ad4:	strdeq	r4, [r1], -r0
   14ad8:	andeq	r4, r1, r0, lsl ip
   14adc:	andeq	r4, r1, r8, lsr #24
   14ae0:	andeq	r4, r1, r0, asr #24
   14ae4:	andeq	r4, r1, r8, asr ip
   14ae8:	andeq	r4, r1, r0, ror ip
   14aec:	muleq	r1, r0, ip
   14af0:			; <UNDEFINED> instruction: 0x00014cb0
   14af4:	andeq	r4, r1, ip, asr #25
   14af8:	andeq	r4, r1, r8, ror #25
   14afc:	andeq	r4, r1, r4, lsl #26
   14b00:	andeq	r4, r1, ip, lsl sp
   14b04:	andeq	r4, r1, r4, lsr sp
   14b08:	andeq	r4, r1, ip, asr sp
   14b0c:	andeq	r4, r1, r4, ror sp
   14b10:	ldr	r3, [r6], #4
   14b14:	mov	r0, r4
   14b18:	mov	r1, r7
   14b1c:	mov	r2, r5
   14b20:	bl	143d0 <table_set_int@@Base>
   14b24:	b	14d88 <table_deserialize@@Base+0x384>
   14b28:	ldr	r3, [r6], #4
   14b2c:	mov	r0, r4
   14b30:	mov	r1, r7
   14b34:	mov	r2, r5
   14b38:	bl	143f8 <table_set_uint@@Base>
   14b3c:	b	14d88 <table_deserialize@@Base+0x384>
   14b40:	ldrsb	r3, [r6], #1
   14b44:	mov	r0, r4
   14b48:	mov	r1, r7
   14b4c:	mov	r2, r5
   14b50:	bl	14420 <table_set_int8@@Base>
   14b54:	b	14d88 <table_deserialize@@Base+0x384>
   14b58:	ldrb	r3, [r6], #1
   14b5c:	mov	r0, r4
   14b60:	mov	r1, r7
   14b64:	mov	r2, r5
   14b68:	bl	14448 <table_set_uint8@@Base>
   14b6c:	b	14d88 <table_deserialize@@Base+0x384>
   14b70:	ldrsh	r3, [r6], #2
   14b74:	mov	r0, r4
   14b78:	mov	r1, r7
   14b7c:	mov	r2, r5
   14b80:	bl	14470 <table_set_int16@@Base>
   14b84:	b	14d88 <table_deserialize@@Base+0x384>
   14b88:	ldrh	r3, [r6], #2
   14b8c:	mov	r0, r4
   14b90:	mov	r1, r7
   14b94:	mov	r2, r5
   14b98:	bl	14498 <table_set_uint16@@Base>
   14b9c:	b	14d88 <table_deserialize@@Base+0x384>
   14ba0:	ldr	r3, [r6], #4
   14ba4:	mov	r0, r4
   14ba8:	mov	r1, r7
   14bac:	mov	r2, r5
   14bb0:	bl	144c0 <table_set_int32@@Base>
   14bb4:	b	14d88 <table_deserialize@@Base+0x384>
   14bb8:	ldr	r3, [r6], #4
   14bbc:	mov	r0, r4
   14bc0:	mov	r1, r7
   14bc4:	mov	r2, r5
   14bc8:	bl	144e8 <table_set_uint32@@Base>
   14bcc:	b	14d88 <table_deserialize@@Base+0x384>
   14bd0:	ldrd	r0, [r6]
   14bd4:	stm	sp, {r0, r1}
   14bd8:	mov	r0, r4
   14bdc:	mov	r1, r7
   14be0:	mov	r2, r5
   14be4:	bl	14510 <table_set_int64@@Base>
   14be8:	add	r6, r6, #8
   14bec:	b	14d88 <table_deserialize@@Base+0x384>
   14bf0:	ldrd	r0, [r6]
   14bf4:	stm	sp, {r0, r1}
   14bf8:	mov	r0, r4
   14bfc:	mov	r1, r7
   14c00:	mov	r2, r5
   14c04:	bl	14544 <table_set_uint64@@Base>
   14c08:	add	r6, r6, #8
   14c0c:	b	14d88 <table_deserialize@@Base+0x384>
   14c10:	ldrsh	r3, [r6], #2
   14c14:	mov	r0, r4
   14c18:	mov	r1, r7
   14c1c:	mov	r2, r5
   14c20:	bl	14578 <table_set_short@@Base>
   14c24:	b	14d88 <table_deserialize@@Base+0x384>
   14c28:	ldrh	r3, [r6], #2
   14c2c:	mov	r0, r4
   14c30:	mov	r1, r7
   14c34:	mov	r2, r5
   14c38:	bl	145a0 <table_set_ushort@@Base>
   14c3c:	b	14d88 <table_deserialize@@Base+0x384>
   14c40:	ldr	r3, [r6], #4
   14c44:	mov	r0, r4
   14c48:	mov	r1, r7
   14c4c:	mov	r2, r5
   14c50:	bl	145c8 <table_set_long@@Base>
   14c54:	b	14d88 <table_deserialize@@Base+0x384>
   14c58:	ldr	r3, [r6], #4
   14c5c:	mov	r0, r4
   14c60:	mov	r1, r7
   14c64:	mov	r2, r5
   14c68:	bl	145f0 <table_set_ulong@@Base>
   14c6c:	b	14d88 <table_deserialize@@Base+0x384>
   14c70:	ldrd	r0, [r6]
   14c74:	stm	sp, {r0, r1}
   14c78:	mov	r0, r4
   14c7c:	mov	r1, r7
   14c80:	mov	r2, r5
   14c84:	bl	14618 <table_set_llong@@Base>
   14c88:	add	r6, r6, #8
   14c8c:	b	14d88 <table_deserialize@@Base+0x384>
   14c90:	ldrd	r0, [r6]
   14c94:	stm	sp, {r0, r1}
   14c98:	mov	r0, r4
   14c9c:	mov	r1, r7
   14ca0:	mov	r2, r5
   14ca4:	bl	1464c <table_set_ullong@@Base>
   14ca8:	add	r6, r6, #8
   14cac:	b	14d88 <table_deserialize@@Base+0x384>
   14cb0:	vldr	s0, [r6]
   14cb4:	mov	r0, r4
   14cb8:	mov	r1, r7
   14cbc:	mov	r2, r5
   14cc0:	bl	14680 <table_set_float@@Base>
   14cc4:	add	r6, r6, #4
   14cc8:	b	14d88 <table_deserialize@@Base+0x384>
   14ccc:	vldr	d0, [r6]
   14cd0:	mov	r0, r4
   14cd4:	mov	r1, r7
   14cd8:	mov	r2, r5
   14cdc:	bl	146a8 <table_set_double@@Base>
   14ce0:	add	r6, r6, #8
   14ce4:	b	14d88 <table_deserialize@@Base+0x384>
   14ce8:	vldr	d0, [r6]
   14cec:	mov	r0, r4
   14cf0:	mov	r1, r7
   14cf4:	mov	r2, r5
   14cf8:	bl	146d0 <table_set_ldouble@@Base>
   14cfc:	add	r6, r6, #8
   14d00:	b	14d88 <table_deserialize@@Base+0x384>
   14d04:	ldrb	r3, [r6], #1
   14d08:	mov	r0, r4
   14d0c:	mov	r1, r7
   14d10:	mov	r2, r5
   14d14:	bl	14718 <table_set_char@@Base>
   14d18:	b	14d88 <table_deserialize@@Base+0x384>
   14d1c:	ldrb	r3, [r6], #1
   14d20:	mov	r0, r4
   14d24:	mov	r1, r7
   14d28:	mov	r2, r5
   14d2c:	bl	14740 <table_set_uchar@@Base>
   14d30:	b	14d88 <table_deserialize@@Base+0x384>
   14d34:	mov	r0, r4
   14d38:	mov	r1, r7
   14d3c:	mov	r2, r5
   14d40:	mov	r3, r6
   14d44:	bl	146f8 <table_set_string@@Base>
   14d48:	mov	r0, r6
   14d4c:	bl	11fec <strlen@plt>
   14d50:	add	r0, r6, r0
   14d54:	add	r6, r0, #1
   14d58:	b	14d88 <table_deserialize@@Base+0x384>
   14d5c:	ldrb	r3, [r6], #1
   14d60:	mov	r0, r4
   14d64:	mov	r1, r7
   14d68:	mov	r2, r5
   14d6c:	bl	143a8 <table_set_bool@@Base>
   14d70:	b	14d88 <table_deserialize@@Base+0x384>
   14d74:	ldr	r3, [r6], #4
   14d78:	mov	r0, r4
   14d7c:	mov	r1, r7
   14d80:	mov	r2, r5
   14d84:	bl	14768 <table_set_ptr@@Base>
   14d88:	add	r5, r5, #1
   14d8c:	cmp	r9, r5
   14d90:	bne	14a94 <table_deserialize@@Base+0x90>
   14d94:	add	r7, r7, #1
   14d98:	cmp	r7, r8
   14d9c:	bne	14a80 <table_deserialize@@Base+0x7c>
   14da0:	ldr	r5, [r6]
   14da4:	ldr	r0, [r6, #4]
   14da8:	str	r0, [r4, #48]	; 0x30
   14dac:	cmp	r5, #1
   14db0:	blt	14dd0 <table_deserialize@@Base+0x3cc>
   14db4:	add	r6, r6, #8
   14db8:	ldm	r6, {r1, r2, r3}
   14dbc:	mov	r0, r4
   14dc0:	bl	12ed4 <table_register_callback@@Base>
   14dc4:	add	r6, r6, #12
   14dc8:	subs	r5, r5, #1
   14dcc:	bne	14db8 <table_deserialize@@Base+0x3b4>
   14dd0:	mov	r0, r4
   14dd4:	sub	sp, fp, #24
   14dd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ddc <table_cell_init@@Base>:
   14ddc:	push	{fp, lr}
   14de0:	mov	fp, sp
   14de4:	bl	14df4 <table_get_cell_ptr@@Base>
   14de8:	mov	r1, #0
   14dec:	str	r1, [r0]
   14df0:	pop	{fp, pc}

00014df4 <table_get_cell_ptr@@Base>:
   14df4:	push	{r4, sl, fp, lr}
   14df8:	add	fp, sp, #8
   14dfc:	mov	r4, r2
   14e00:	bl	13ef8 <table_get_row_ptr@@Base>
   14e04:	ldr	r0, [r0]
   14e08:	add	r0, r0, r4, lsl #2
   14e0c:	pop	{r4, sl, fp, pc}

00014e10 <table_cell_destroy@@Base>:
   14e10:	push	{r4, r5, r6, sl, fp, lr}
   14e14:	add	fp, sp, #16
   14e18:	mov	r4, r2
   14e1c:	mov	r5, r1
   14e20:	mov	r6, r0
   14e24:	mov	r1, r2
   14e28:	bl	132bc <table_get_column_data_type@@Base>
   14e2c:	cmp	r0, #23
   14e30:	popeq	{r4, r5, r6, sl, fp, pc}
   14e34:	mov	r0, r6
   14e38:	mov	r1, r5
   14e3c:	mov	r2, r4
   14e40:	bl	14df4 <table_get_cell_ptr@@Base>
   14e44:	ldr	r0, [r0]
   14e48:	cmp	r0, #0
   14e4c:	beq	14e58 <table_cell_destroy@@Base+0x48>
   14e50:	pop	{r4, r5, r6, sl, fp, lr}
   14e54:	b	11f98 <free@plt>
   14e58:	pop	{r4, r5, r6, sl, fp, pc}

00014e5c <table_cell_to_buffer@@Base>:
   14e5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e60:	add	fp, sp, #24
   14e64:	sub	sp, sp, #8
   14e68:	mov	r5, r3
   14e6c:	mov	r6, r2
   14e70:	mov	r7, r1
   14e74:	mov	r4, r0
   14e78:	mov	r1, r2
   14e7c:	bl	132bc <table_get_column_data_type@@Base>
   14e80:	cmp	r0, #23
   14e84:	bhi	15174 <table_cell_to_buffer@@Base+0x318>
   14e88:	ldr	r8, [fp, #8]
   14e8c:	add	r1, pc, #0
   14e90:	ldr	pc, [r1, r0, lsl #2]
   14e94:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14e98:	andeq	r4, r1, r8, lsl #30
   14e9c:	andeq	r4, r1, ip, lsl pc
   14ea0:	andeq	r4, r1, r0, lsr pc
   14ea4:	andeq	r4, r1, r4, asr #30
   14ea8:	andeq	r4, r1, r8, asr pc
   14eac:	andeq	r4, r1, ip, ror #30
   14eb0:	andeq	r4, r1, r0, lsl #31
   14eb4:	andeq	r4, r1, r0, lsr #31
   14eb8:			; <UNDEFINED> instruction: 0x00014fb4
   14ebc:	andeq	r4, r1, r8, asr #31
   14ec0:	andeq	r4, r1, r8, ror #31
   14ec4:	andeq	r5, r1, r8
   14ec8:	andeq	r5, r1, r8, lsr #32
   14ecc:	andeq	r5, r1, r8, asr #32
   14ed0:	andeq	r5, r1, r8, rrx
   14ed4:	andeq	r5, r1, r8, lsl #1
   14ed8:	andeq	r5, r1, ip, lsr #1
   14edc:	andeq	r5, r1, ip, asr #1
   14ee0:	strdeq	r5, [r1], -r8
   14ee4:	andeq	r5, r1, ip, lsl #2
   14ee8:	andeq	r5, r1, ip, lsr #2
   14eec:	andeq	r5, r1, ip, asr #2
   14ef0:	andeq	r5, r1, r0, lsl #3
   14ef4:	mov	r0, r4
   14ef8:	mov	r1, r7
   14efc:	mov	r2, r6
   14f00:	bl	13d24 <table_get_int@@Base>
   14f04:	b	1515c <table_cell_to_buffer@@Base+0x300>
   14f08:	mov	r0, r4
   14f0c:	mov	r1, r7
   14f10:	mov	r2, r6
   14f14:	bl	13d38 <table_get_uint@@Base>
   14f18:	b	14f90 <table_cell_to_buffer@@Base+0x134>
   14f1c:	mov	r0, r4
   14f20:	mov	r1, r7
   14f24:	mov	r2, r6
   14f28:	bl	13d4c <table_get_int8@@Base>
   14f2c:	b	1515c <table_cell_to_buffer@@Base+0x300>
   14f30:	mov	r0, r4
   14f34:	mov	r1, r7
   14f38:	mov	r2, r6
   14f3c:	bl	13d60 <table_get_uint8@@Base>
   14f40:	b	14f90 <table_cell_to_buffer@@Base+0x134>
   14f44:	mov	r0, r4
   14f48:	mov	r1, r7
   14f4c:	mov	r2, r6
   14f50:	bl	13d74 <table_get_int16@@Base>
   14f54:	b	1515c <table_cell_to_buffer@@Base+0x300>
   14f58:	mov	r0, r4
   14f5c:	mov	r1, r7
   14f60:	mov	r2, r6
   14f64:	bl	13d88 <table_get_uint16@@Base>
   14f68:	b	14f90 <table_cell_to_buffer@@Base+0x134>
   14f6c:	mov	r0, r4
   14f70:	mov	r1, r7
   14f74:	mov	r2, r6
   14f78:	bl	13d9c <table_get_int32@@Base>
   14f7c:	b	1515c <table_cell_to_buffer@@Base+0x300>
   14f80:	mov	r0, r4
   14f84:	mov	r1, r7
   14f88:	mov	r2, r6
   14f8c:	bl	13db0 <table_get_uint32@@Base>
   14f90:	mov	r3, r0
   14f94:	movw	r2, #22928	; 0x5990
   14f98:	movt	r2, #1
   14f9c:	b	15168 <table_cell_to_buffer@@Base+0x30c>
   14fa0:	mov	r0, r4
   14fa4:	mov	r1, r7
   14fa8:	mov	r2, r6
   14fac:	bl	13dc4 <table_get_int64@@Base>
   14fb0:	b	15058 <table_cell_to_buffer@@Base+0x1fc>
   14fb4:	mov	r0, r4
   14fb8:	mov	r1, r7
   14fbc:	mov	r2, r6
   14fc0:	bl	13dd8 <table_get_uint64@@Base>
   14fc4:	b	15078 <table_cell_to_buffer@@Base+0x21c>
   14fc8:	mov	r0, r4
   14fcc:	mov	r1, r7
   14fd0:	mov	r2, r6
   14fd4:	bl	13dec <table_get_short@@Base>
   14fd8:	mov	r3, r0
   14fdc:	movw	r2, #22941	; 0x599d
   14fe0:	movt	r2, #1
   14fe4:	b	15168 <table_cell_to_buffer@@Base+0x30c>
   14fe8:	mov	r0, r4
   14fec:	mov	r1, r7
   14ff0:	mov	r2, r6
   14ff4:	bl	13e00 <table_get_ushort@@Base>
   14ff8:	mov	r3, r0
   14ffc:	movw	r2, #22945	; 0x59a1
   15000:	movt	r2, #1
   15004:	b	15168 <table_cell_to_buffer@@Base+0x30c>
   15008:	mov	r0, r4
   1500c:	mov	r1, r7
   15010:	mov	r2, r6
   15014:	bl	13e14 <table_get_long@@Base>
   15018:	mov	r3, r0
   1501c:	movw	r2, #22949	; 0x59a5
   15020:	movt	r2, #1
   15024:	b	15168 <table_cell_to_buffer@@Base+0x30c>
   15028:	mov	r0, r4
   1502c:	mov	r1, r7
   15030:	mov	r2, r6
   15034:	bl	13e28 <table_get_ulong@@Base>
   15038:	mov	r3, r0
   1503c:	movw	r2, #22953	; 0x59a9
   15040:	movt	r2, #1
   15044:	b	15168 <table_cell_to_buffer@@Base+0x30c>
   15048:	mov	r0, r4
   1504c:	mov	r1, r7
   15050:	mov	r2, r6
   15054:	bl	13e3c <table_get_llong@@Base>
   15058:	stm	sp, {r0, r1}
   1505c:	movw	r2, #22931	; 0x5993
   15060:	movt	r2, #1
   15064:	b	150e8 <table_cell_to_buffer@@Base+0x28c>
   15068:	mov	r0, r4
   1506c:	mov	r1, r7
   15070:	mov	r2, r6
   15074:	bl	13e50 <table_get_ullong@@Base>
   15078:	stm	sp, {r0, r1}
   1507c:	movw	r2, #22936	; 0x5998
   15080:	movt	r2, #1
   15084:	b	150e8 <table_cell_to_buffer@@Base+0x28c>
   15088:	mov	r0, r4
   1508c:	mov	r1, r7
   15090:	mov	r2, r6
   15094:	bl	13e64 <table_get_float@@Base>
   15098:	vcvt.f64.f32	d16, s0
   1509c:	vstr	d16, [sp]
   150a0:	movw	r2, #22960	; 0x59b0
   150a4:	movt	r2, #1
   150a8:	b	150e8 <table_cell_to_buffer@@Base+0x28c>
   150ac:	mov	r0, r4
   150b0:	mov	r1, r7
   150b4:	mov	r2, r6
   150b8:	bl	13e78 <table_get_double@@Base>
   150bc:	vstr	d0, [sp]
   150c0:	movw	r2, #22963	; 0x59b3
   150c4:	movt	r2, #1
   150c8:	b	150e8 <table_cell_to_buffer@@Base+0x28c>
   150cc:	mov	r0, r4
   150d0:	mov	r1, r7
   150d4:	mov	r2, r6
   150d8:	bl	13e8c <table_get_ldouble@@Base>
   150dc:	vstr	d0, [sp]
   150e0:	movw	r2, #22967	; 0x59b7
   150e4:	movt	r2, #1
   150e8:	mov	r0, r5
   150ec:	mov	r1, r8
   150f0:	bl	12004 <snprintf@plt>
   150f4:	b	15174 <table_cell_to_buffer@@Base+0x318>
   150f8:	mov	r0, r4
   150fc:	mov	r1, r7
   15100:	mov	r2, r6
   15104:	bl	13ea0 <table_get_char@@Base>
   15108:	b	1511c <table_cell_to_buffer@@Base+0x2c0>
   1510c:	mov	r0, r4
   15110:	mov	r1, r7
   15114:	mov	r2, r6
   15118:	bl	13eb4 <table_get_uchar@@Base>
   1511c:	mov	r3, r0
   15120:	movw	r2, #22971	; 0x59bb
   15124:	movt	r2, #1
   15128:	b	15168 <table_cell_to_buffer@@Base+0x30c>
   1512c:	mov	r0, r4
   15130:	mov	r1, r7
   15134:	mov	r2, r6
   15138:	bl	13ec8 <table_get_string@@Base>
   1513c:	mov	r3, r0
   15140:	movw	r2, #22957	; 0x59ad
   15144:	movt	r2, #1
   15148:	b	15168 <table_cell_to_buffer@@Base+0x30c>
   1514c:	mov	r0, r4
   15150:	mov	r1, r7
   15154:	mov	r2, r6
   15158:	bl	13d10 <table_get_bool@@Base>
   1515c:	mov	r3, r0
   15160:	movw	r2, #22771	; 0x58f3
   15164:	movt	r2, #1
   15168:	mov	r0, r5
   1516c:	mov	r1, r8
   15170:	bl	12004 <snprintf@plt>
   15174:	mov	r0, #0
   15178:	sub	sp, fp, #24
   1517c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15180:	mov	r0, r4
   15184:	mov	r1, r7
   15188:	mov	r2, r6
   1518c:	bl	13ecc <table_get_ptr@@Base>
   15190:	mov	r3, r0
   15194:	movw	r2, #22974	; 0x59be
   15198:	movt	r2, #1
   1519c:	b	15168 <table_cell_to_buffer@@Base+0x30c>

000151a0 <table_cell_from_buffer@@Base>:
   151a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151a4:	add	fp, sp, #24
   151a8:	sub	sp, sp, #264	; 0x108
   151ac:	mov	r7, r3
   151b0:	mov	r4, r2
   151b4:	mov	r5, r1
   151b8:	mov	r6, r0
   151bc:	mov	r1, r2
   151c0:	bl	132bc <table_get_column_data_type@@Base>
   151c4:	cmp	r0, #23
   151c8:	bhi	1579c <table_cell_from_buffer@@Base+0x5fc>
   151cc:	add	r1, pc, #0
   151d0:	ldr	pc, [r1, r0, lsl #2]
   151d4:	andeq	r5, r1, r4, lsr r2
   151d8:	andeq	r5, r1, ip, ror #4
   151dc:	andeq	r5, r1, r4, lsr #5
   151e0:	ldrdeq	r5, [r1], -ip
   151e4:	andeq	r5, r1, r4, lsl r3
   151e8:	andeq	r5, r1, ip, asr #6
   151ec:	andeq	r5, r1, r4, lsl #7
   151f0:			; <UNDEFINED> instruction: 0x000153bc
   151f4:	strdeq	r5, [r1], -r4
   151f8:	andeq	r5, r1, r4, lsr r4
   151fc:	andeq	r5, r1, r4, ror r4
   15200:	andeq	r5, r1, ip, lsr #9
   15204:	andeq	r5, r1, r4, ror #9
   15208:	andeq	r5, r1, ip, lsl r5
   1520c:	andeq	r5, r1, r4, asr r5
   15210:	muleq	r1, r4, r5
   15214:	ldrdeq	r5, [r1], -r4
   15218:	andeq	r5, r1, ip, lsl #12
   1521c:	andeq	r5, r1, r4, asr #12
   15220:	andeq	r5, r1, ip, ror r6
   15224:			; <UNDEFINED> instruction: 0x000156b4
   15228:	andeq	r5, r1, ip, ror #13
   1522c:	andeq	r5, r1, r4, lsr #14
   15230:	andeq	r5, r1, r8, ror #14
   15234:	movw	r1, #22771	; 0x58f3
   15238:	movt	r1, #1
   1523c:	add	r2, sp, #8
   15240:	mov	r0, r7
   15244:	bl	12010 <__isoc99_sscanf@plt>
   15248:	mvn	r7, #0
   1524c:	cmp	r0, #1
   15250:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15254:	ldr	r3, [sp, #8]
   15258:	mov	r0, r6
   1525c:	mov	r1, r5
   15260:	mov	r2, r4
   15264:	bl	143d0 <table_set_int@@Base>
   15268:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   1526c:	movw	r1, #22928	; 0x5990
   15270:	movt	r1, #1
   15274:	add	r2, sp, #8
   15278:	mov	r0, r7
   1527c:	bl	12010 <__isoc99_sscanf@plt>
   15280:	mvn	r7, #0
   15284:	cmp	r0, #1
   15288:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   1528c:	ldr	r3, [sp, #8]
   15290:	mov	r0, r6
   15294:	mov	r1, r5
   15298:	mov	r2, r4
   1529c:	bl	143f8 <table_set_uint@@Base>
   152a0:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   152a4:	movw	r1, #22977	; 0x59c1
   152a8:	movt	r1, #1
   152ac:	add	r2, sp, #8
   152b0:	mov	r0, r7
   152b4:	bl	12010 <__isoc99_sscanf@plt>
   152b8:	mvn	r7, #0
   152bc:	cmp	r0, #1
   152c0:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   152c4:	ldrsb	r3, [sp, #8]
   152c8:	mov	r0, r6
   152cc:	mov	r1, r5
   152d0:	mov	r2, r4
   152d4:	bl	14420 <table_set_int8@@Base>
   152d8:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   152dc:	movw	r1, #22982	; 0x59c6
   152e0:	movt	r1, #1
   152e4:	add	r2, sp, #8
   152e8:	mov	r0, r7
   152ec:	bl	12010 <__isoc99_sscanf@plt>
   152f0:	mvn	r7, #0
   152f4:	cmp	r0, #1
   152f8:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   152fc:	ldrb	r3, [sp, #8]
   15300:	mov	r0, r6
   15304:	mov	r1, r5
   15308:	mov	r2, r4
   1530c:	bl	14448 <table_set_uint8@@Base>
   15310:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15314:	movw	r1, #22941	; 0x599d
   15318:	movt	r1, #1
   1531c:	add	r2, sp, #8
   15320:	mov	r0, r7
   15324:	bl	12010 <__isoc99_sscanf@plt>
   15328:	mvn	r7, #0
   1532c:	cmp	r0, #1
   15330:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15334:	ldrsh	r3, [sp, #8]
   15338:	mov	r0, r6
   1533c:	mov	r1, r5
   15340:	mov	r2, r4
   15344:	bl	14470 <table_set_int16@@Base>
   15348:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   1534c:	movw	r1, #22945	; 0x59a1
   15350:	movt	r1, #1
   15354:	add	r2, sp, #8
   15358:	mov	r0, r7
   1535c:	bl	12010 <__isoc99_sscanf@plt>
   15360:	mvn	r7, #0
   15364:	cmp	r0, #1
   15368:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   1536c:	ldrh	r3, [sp, #8]
   15370:	mov	r0, r6
   15374:	mov	r1, r5
   15378:	mov	r2, r4
   1537c:	bl	14498 <table_set_uint16@@Base>
   15380:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15384:	movw	r1, #22771	; 0x58f3
   15388:	movt	r1, #1
   1538c:	add	r2, sp, #8
   15390:	mov	r0, r7
   15394:	bl	12010 <__isoc99_sscanf@plt>
   15398:	mvn	r7, #0
   1539c:	cmp	r0, #1
   153a0:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   153a4:	ldr	r3, [sp, #8]
   153a8:	mov	r0, r6
   153ac:	mov	r1, r5
   153b0:	mov	r2, r4
   153b4:	bl	144c0 <table_set_int32@@Base>
   153b8:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   153bc:	movw	r1, #22928	; 0x5990
   153c0:	movt	r1, #1
   153c4:	add	r2, sp, #8
   153c8:	mov	r0, r7
   153cc:	bl	12010 <__isoc99_sscanf@plt>
   153d0:	mvn	r7, #0
   153d4:	cmp	r0, #1
   153d8:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   153dc:	ldr	r3, [sp, #8]
   153e0:	mov	r0, r6
   153e4:	mov	r1, r5
   153e8:	mov	r2, r4
   153ec:	bl	144e8 <table_set_uint32@@Base>
   153f0:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   153f4:	movw	r1, #22931	; 0x5993
   153f8:	movt	r1, #1
   153fc:	add	r2, sp, #8
   15400:	mov	r0, r7
   15404:	bl	12010 <__isoc99_sscanf@plt>
   15408:	mvn	r7, #0
   1540c:	cmp	r0, #1
   15410:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15414:	ldr	r0, [sp, #8]
   15418:	ldr	r1, [sp, #12]
   1541c:	stm	sp, {r0, r1}
   15420:	mov	r0, r6
   15424:	mov	r1, r5
   15428:	mov	r2, r4
   1542c:	bl	14510 <table_set_int64@@Base>
   15430:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15434:	movw	r1, #22936	; 0x5998
   15438:	movt	r1, #1
   1543c:	add	r2, sp, #8
   15440:	mov	r0, r7
   15444:	bl	12010 <__isoc99_sscanf@plt>
   15448:	mvn	r7, #0
   1544c:	cmp	r0, #1
   15450:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15454:	ldr	r0, [sp, #8]
   15458:	ldr	r1, [sp, #12]
   1545c:	stm	sp, {r0, r1}
   15460:	mov	r0, r6
   15464:	mov	r1, r5
   15468:	mov	r2, r4
   1546c:	bl	14544 <table_set_uint64@@Base>
   15470:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15474:	movw	r1, #22941	; 0x599d
   15478:	movt	r1, #1
   1547c:	add	r2, sp, #8
   15480:	mov	r0, r7
   15484:	bl	12010 <__isoc99_sscanf@plt>
   15488:	mvn	r7, #0
   1548c:	cmp	r0, #1
   15490:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15494:	ldrsh	r3, [sp, #8]
   15498:	mov	r0, r6
   1549c:	mov	r1, r5
   154a0:	mov	r2, r4
   154a4:	bl	14578 <table_set_short@@Base>
   154a8:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   154ac:	movw	r1, #22945	; 0x59a1
   154b0:	movt	r1, #1
   154b4:	add	r2, sp, #8
   154b8:	mov	r0, r7
   154bc:	bl	12010 <__isoc99_sscanf@plt>
   154c0:	mvn	r7, #0
   154c4:	cmp	r0, #1
   154c8:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   154cc:	ldrh	r3, [sp, #8]
   154d0:	mov	r0, r6
   154d4:	mov	r1, r5
   154d8:	mov	r2, r4
   154dc:	bl	145a0 <table_set_ushort@@Base>
   154e0:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   154e4:	movw	r1, #22949	; 0x59a5
   154e8:	movt	r1, #1
   154ec:	add	r2, sp, #8
   154f0:	mov	r0, r7
   154f4:	bl	12010 <__isoc99_sscanf@plt>
   154f8:	mvn	r7, #0
   154fc:	cmp	r0, #1
   15500:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15504:	ldr	r3, [sp, #8]
   15508:	mov	r0, r6
   1550c:	mov	r1, r5
   15510:	mov	r2, r4
   15514:	bl	145c8 <table_set_long@@Base>
   15518:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   1551c:	movw	r1, #22953	; 0x59a9
   15520:	movt	r1, #1
   15524:	add	r2, sp, #8
   15528:	mov	r0, r7
   1552c:	bl	12010 <__isoc99_sscanf@plt>
   15530:	mvn	r7, #0
   15534:	cmp	r0, #1
   15538:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   1553c:	ldr	r3, [sp, #8]
   15540:	mov	r0, r6
   15544:	mov	r1, r5
   15548:	mov	r2, r4
   1554c:	bl	145f0 <table_set_ulong@@Base>
   15550:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15554:	movw	r1, #22931	; 0x5993
   15558:	movt	r1, #1
   1555c:	add	r2, sp, #8
   15560:	mov	r0, r7
   15564:	bl	12010 <__isoc99_sscanf@plt>
   15568:	mvn	r7, #0
   1556c:	cmp	r0, #1
   15570:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15574:	ldr	r0, [sp, #8]
   15578:	ldr	r1, [sp, #12]
   1557c:	stm	sp, {r0, r1}
   15580:	mov	r0, r6
   15584:	mov	r1, r5
   15588:	mov	r2, r4
   1558c:	bl	14618 <table_set_llong@@Base>
   15590:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15594:	movw	r1, #22936	; 0x5998
   15598:	movt	r1, #1
   1559c:	add	r2, sp, #8
   155a0:	mov	r0, r7
   155a4:	bl	12010 <__isoc99_sscanf@plt>
   155a8:	mvn	r7, #0
   155ac:	cmp	r0, #1
   155b0:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   155b4:	ldr	r0, [sp, #8]
   155b8:	ldr	r1, [sp, #12]
   155bc:	stm	sp, {r0, r1}
   155c0:	mov	r0, r6
   155c4:	mov	r1, r5
   155c8:	mov	r2, r4
   155cc:	bl	1464c <table_set_ullong@@Base>
   155d0:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   155d4:	movw	r1, #22960	; 0x59b0
   155d8:	movt	r1, #1
   155dc:	add	r2, sp, #8
   155e0:	mov	r0, r7
   155e4:	bl	12010 <__isoc99_sscanf@plt>
   155e8:	mvn	r7, #0
   155ec:	cmp	r0, #1
   155f0:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   155f4:	vldr	s0, [sp, #8]
   155f8:	mov	r0, r6
   155fc:	mov	r1, r5
   15600:	mov	r2, r4
   15604:	bl	14680 <table_set_float@@Base>
   15608:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   1560c:	movw	r1, #22963	; 0x59b3
   15610:	movt	r1, #1
   15614:	add	r2, sp, #8
   15618:	mov	r0, r7
   1561c:	bl	12010 <__isoc99_sscanf@plt>
   15620:	mvn	r7, #0
   15624:	cmp	r0, #1
   15628:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   1562c:	vldr	d0, [sp, #8]
   15630:	mov	r0, r6
   15634:	mov	r1, r5
   15638:	mov	r2, r4
   1563c:	bl	146a8 <table_set_double@@Base>
   15640:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15644:	movw	r1, #22967	; 0x59b7
   15648:	movt	r1, #1
   1564c:	add	r2, sp, #8
   15650:	mov	r0, r7
   15654:	bl	12010 <__isoc99_sscanf@plt>
   15658:	mvn	r7, #0
   1565c:	cmp	r0, #1
   15660:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15664:	vldr	d0, [sp, #8]
   15668:	mov	r0, r6
   1566c:	mov	r1, r5
   15670:	mov	r2, r4
   15674:	bl	146d0 <table_set_ldouble@@Base>
   15678:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   1567c:	movw	r1, #22971	; 0x59bb
   15680:	movt	r1, #1
   15684:	add	r2, sp, #8
   15688:	mov	r0, r7
   1568c:	bl	12010 <__isoc99_sscanf@plt>
   15690:	mvn	r7, #0
   15694:	cmp	r0, #1
   15698:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   1569c:	ldrb	r3, [sp, #8]
   156a0:	mov	r0, r6
   156a4:	mov	r1, r5
   156a8:	mov	r2, r4
   156ac:	bl	14718 <table_set_char@@Base>
   156b0:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   156b4:	movw	r1, #22971	; 0x59bb
   156b8:	movt	r1, #1
   156bc:	add	r2, sp, #8
   156c0:	mov	r0, r7
   156c4:	bl	12010 <__isoc99_sscanf@plt>
   156c8:	mvn	r7, #0
   156cc:	cmp	r0, #1
   156d0:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   156d4:	ldrb	r3, [sp, #8]
   156d8:	mov	r0, r6
   156dc:	mov	r1, r5
   156e0:	mov	r2, r4
   156e4:	bl	14740 <table_set_uchar@@Base>
   156e8:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   156ec:	movw	r1, #22957	; 0x59ad
   156f0:	movt	r1, #1
   156f4:	add	r2, sp, #8
   156f8:	mov	r0, r7
   156fc:	bl	12010 <__isoc99_sscanf@plt>
   15700:	mvn	r7, #0
   15704:	cmp	r0, #1
   15708:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   1570c:	add	r3, sp, #8
   15710:	mov	r0, r6
   15714:	mov	r1, r5
   15718:	mov	r2, r4
   1571c:	bl	146f8 <table_set_string@@Base>
   15720:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15724:	movw	r1, #22771	; 0x58f3
   15728:	movt	r1, #1
   1572c:	add	r2, sp, #8
   15730:	mov	r0, r7
   15734:	bl	12010 <__isoc99_sscanf@plt>
   15738:	mvn	r7, #0
   1573c:	cmp	r0, #1
   15740:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15744:	ldr	r0, [sp, #8]
   15748:	cmp	r0, #0
   1574c:	beq	157ac <table_cell_from_buffer@@Base+0x60c>
   15750:	mov	r0, r6
   15754:	mov	r1, r5
   15758:	mov	r2, r4
   1575c:	mov	r3, #1
   15760:	bl	143a8 <table_set_bool@@Base>
   15764:	b	1579c <table_cell_from_buffer@@Base+0x5fc>
   15768:	movw	r1, #22974	; 0x59be
   1576c:	movt	r1, #1
   15770:	add	r2, sp, #8
   15774:	mov	r0, r7
   15778:	bl	12010 <__isoc99_sscanf@plt>
   1577c:	mvn	r7, #0
   15780:	cmp	r0, #1
   15784:	bne	157a0 <table_cell_from_buffer@@Base+0x600>
   15788:	ldr	r3, [sp, #8]
   1578c:	mov	r0, r6
   15790:	mov	r1, r5
   15794:	mov	r2, r4
   15798:	bl	14768 <table_set_ptr@@Base>
   1579c:	mov	r7, #0
   157a0:	mov	r0, r7
   157a4:	sub	sp, fp, #24
   157a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   157ac:	mov	r7, #0
   157b0:	mov	r0, r6
   157b4:	mov	r1, r5
   157b8:	mov	r2, r4
   157bc:	mov	r3, #0
   157c0:	bl	143a8 <table_set_bool@@Base>
   157c4:	b	157a0 <table_cell_from_buffer@@Base+0x600>

000157c8 <table_cell_nullify@@Base>:
   157c8:	push	{r4, sl, fp, lr}
   157cc:	add	fp, sp, #8
   157d0:	bl	14df4 <table_get_cell_ptr@@Base>
   157d4:	mov	r4, r0
   157d8:	ldr	r0, [r0]
   157dc:	cmp	r0, #0
   157e0:	beq	157f0 <table_cell_nullify@@Base+0x28>
   157e4:	bl	11f98 <free@plt>
   157e8:	mov	r0, #0
   157ec:	str	r0, [r4]
   157f0:	mov	r0, #0
   157f4:	pop	{r4, sl, fp, pc}

000157f8 <__libc_csu_init@@Base>:
   157f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   157fc:	mov	r7, r0
   15800:	ldr	r6, [pc, #72]	; 15850 <__libc_csu_init@@Base+0x58>
   15804:	ldr	r5, [pc, #72]	; 15854 <__libc_csu_init@@Base+0x5c>
   15808:	add	r6, pc, r6
   1580c:	add	r5, pc, r5
   15810:	sub	r6, r6, r5
   15814:	mov	r8, r1
   15818:	mov	r9, r2
   1581c:	bl	11f60 <strcmp@plt-0x20>
   15820:	asrs	r6, r6, #2
   15824:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15828:	mov	r4, #0
   1582c:	add	r4, r4, #1
   15830:	ldr	r3, [r5], #4
   15834:	mov	r2, r9
   15838:	mov	r1, r8
   1583c:	mov	r0, r7
   15840:	blx	r3
   15844:	cmp	r6, r4
   15848:	bne	1582c <__libc_csu_init@@Base+0x34>
   1584c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15850:	strdeq	r0, [r1], -ip
   15854:	strdeq	r0, [r1], -r4

00015858 <__libc_csu_fini@@Base>:
   15858:	bx	lr

Disassembly of section .fini:

0001585c <.fini>:
   1585c:	push	{r3, lr}
   15860:	pop	{r3, pc}
