
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00012600 <.init>:
   12600:	push	{r3, lr}
   12604:	bl	12854 <_start@@Base+0x3c>
   12608:	pop	{r3, pc}

Disassembly of section .plt:

0001260c <fdopen@plt-0x14>:
   1260c:	push	{lr}		; (str lr, [sp, #-4]!)
   12610:	ldr	lr, [pc, #4]	; 1261c <fdopen@plt-0x4>
   12614:	add	lr, pc, lr
   12618:	ldr	pc, [lr, #8]!
   1261c:	andeq	fp, r1, r4, ror #19

00012620 <fdopen@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #110592	; 0x1b000
   12628:	ldr	pc, [ip, #2532]!	; 0x9e4

0001262c <strtol@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #110592	; 0x1b000
   12634:	ldr	pc, [ip, #2524]!	; 0x9dc

00012638 <longjmp@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #110592	; 0x1b000
   12640:	ldr	pc, [ip, #2516]!	; 0x9d4

00012644 <fflush@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #110592	; 0x1b000
   1264c:	ldr	pc, [ip, #2508]!	; 0x9cc

00012650 <_setjmp@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #110592	; 0x1b000
   12658:	ldr	pc, [ip, #2500]!	; 0x9c4

0001265c <free@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #110592	; 0x1b000
   12664:	ldr	pc, [ip, #2492]!	; 0x9bc

00012668 <__isnanf@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #110592	; 0x1b000
   12670:	ldr	pc, [ip, #2484]!	; 0x9b4

00012674 <memcpy@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #110592	; 0x1b000
   1267c:	ldr	pc, [ip, #2476]!	; 0x9ac

00012680 <mmap64@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #110592	; 0x1b000
   12688:	ldr	pc, [ip, #2468]!	; 0x9a4

0001268c <ftell@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #110592	; 0x1b000
   12694:	ldr	pc, [ip, #2460]!	; 0x99c

00012698 <uname@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #110592	; 0x1b000
   126a0:	ldr	pc, [ip, #2452]!	; 0x994

000126a4 <strdup@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #110592	; 0x1b000
   126ac:	ldr	pc, [ip, #2444]!	; 0x98c

000126b0 <__isinff@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #110592	; 0x1b000
   126b8:	ldr	pc, [ip, #2436]!	; 0x984

000126bc <realloc@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #110592	; 0x1b000
   126c4:	ldr	pc, [ip, #2428]!	; 0x97c

000126c8 <fwrite@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #110592	; 0x1b000
   126d0:	ldr	pc, [ip, #2420]!	; 0x974

000126d4 <open64@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #110592	; 0x1b000
   126dc:	ldr	pc, [ip, #2412]!	; 0x96c

000126e0 <getenv@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #110592	; 0x1b000
   126e8:	ldr	pc, [ip, #2404]!	; 0x964

000126ec <malloc@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #110592	; 0x1b000
   126f4:	ldr	pc, [ip, #2396]!	; 0x95c

000126f8 <__libc_start_main@plt>:
   126f8:	add	ip, pc, #0, 12
   126fc:	add	ip, ip, #110592	; 0x1b000
   12700:	ldr	pc, [ip, #2388]!	; 0x954

00012704 <strerror@plt>:
   12704:	add	ip, pc, #0, 12
   12708:	add	ip, ip, #110592	; 0x1b000
   1270c:	ldr	pc, [ip, #2380]!	; 0x94c

00012710 <__gmon_start__@plt>:
   12710:	add	ip, pc, #0, 12
   12714:	add	ip, ip, #110592	; 0x1b000
   12718:	ldr	pc, [ip, #2372]!	; 0x944

0001271c <getpid@plt>:
   1271c:	add	ip, pc, #0, 12
   12720:	add	ip, ip, #110592	; 0x1b000
   12724:	ldr	pc, [ip, #2364]!	; 0x93c

00012728 <exit@plt>:
   12728:	add	ip, pc, #0, 12
   1272c:	add	ip, ip, #110592	; 0x1b000
   12730:	ldr	pc, [ip, #2356]!	; 0x934

00012734 <strlen@plt>:
   12734:	add	ip, pc, #0, 12
   12738:	add	ip, ip, #110592	; 0x1b000
   1273c:	ldr	pc, [ip, #2348]!	; 0x92c

00012740 <strchr@plt>:
   12740:	add	ip, pc, #0, 12
   12744:	add	ip, ip, #110592	; 0x1b000
   12748:	ldr	pc, [ip, #2340]!	; 0x924

0001274c <fprintf@plt>:
   1274c:	add	ip, pc, #0, 12
   12750:	add	ip, ip, #110592	; 0x1b000
   12754:	ldr	pc, [ip, #2332]!	; 0x91c

00012758 <__errno_location@plt>:
   12758:	add	ip, pc, #0, 12
   1275c:	add	ip, ip, #110592	; 0x1b000
   12760:	ldr	pc, [ip, #2324]!	; 0x914

00012764 <__cxa_atexit@plt>:
   12764:	add	ip, pc, #0, 12
   12768:	add	ip, ip, #110592	; 0x1b000
   1276c:	ldr	pc, [ip, #2316]!	; 0x90c

00012770 <mkdir@plt>:
   12770:	add	ip, pc, #0, 12
   12774:	add	ip, ip, #110592	; 0x1b000
   12778:	ldr	pc, [ip, #2308]!	; 0x904

0001277c <memset@plt>:
   1277c:	add	ip, pc, #0, 12
   12780:	add	ip, ip, #110592	; 0x1b000
   12784:	ldr	pc, [ip, #2300]!	; 0x8fc

00012788 <putchar@plt>:
   12788:	add	ip, pc, #0, 12
   1278c:	add	ip, ip, #110592	; 0x1b000
   12790:	ldr	pc, [ip, #2292]!	; 0x8f4

00012794 <strncpy@plt>:
   12794:	add	ip, pc, #0, 12
   12798:	add	ip, ip, #110592	; 0x1b000
   1279c:	ldr	pc, [ip, #2284]!	; 0x8ec

000127a0 <prctl@plt>:
   127a0:	add	ip, pc, #0, 12
   127a4:	add	ip, ip, #110592	; 0x1b000
   127a8:	ldr	pc, [ip, #2276]!	; 0x8e4

000127ac <fileno@plt>:
   127ac:	add	ip, pc, #0, 12
   127b0:	add	ip, ip, #110592	; 0x1b000
   127b4:	ldr	pc, [ip, #2268]!	; 0x8dc

000127b8 <fclose@plt>:
   127b8:	add	ip, pc, #0, 12
   127bc:	add	ip, ip, #110592	; 0x1b000
   127c0:	ldr	pc, [ip, #2260]!	; 0x8d4

000127c4 <munmap@plt>:
   127c4:	add	ip, pc, #0, 12
   127c8:	add	ip, ip, #110592	; 0x1b000
   127cc:	ldr	pc, [ip, #2252]!	; 0x8cc

000127d0 <fcntl64@plt>:
   127d0:	add	ip, pc, #0, 12
   127d4:	add	ip, ip, #110592	; 0x1b000
   127d8:	ldr	pc, [ip, #2244]!	; 0x8c4

000127dc <strrchr@plt>:
   127dc:	add	ip, pc, #0, 12
   127e0:	add	ip, ip, #110592	; 0x1b000
   127e4:	ldr	pc, [ip, #2236]!	; 0x8bc

000127e8 <msync@plt>:
   127e8:	add	ip, pc, #0, 12
   127ec:	add	ip, ip, #110592	; 0x1b000
   127f0:	ldr	pc, [ip, #2228]!	; 0x8b4

000127f4 <atoi@plt>:
   127f4:	add	ip, pc, #0, 12
   127f8:	add	ip, ip, #110592	; 0x1b000
   127fc:	ldr	pc, [ip, #2220]!	; 0x8ac

00012800 <fseek@plt>:
   12800:	add	ip, pc, #0, 12
   12804:	add	ip, ip, #110592	; 0x1b000
   12808:	ldr	pc, [ip, #2212]!	; 0x8a4

0001280c <abort@plt>:
   1280c:	add	ip, pc, #0, 12
   12810:	add	ip, ip, #110592	; 0x1b000
   12814:	ldr	pc, [ip, #2204]!	; 0x89c

Disassembly of section .text:

00012818 <_start@@Base>:
   12818:	mov	fp, #0
   1281c:	mov	lr, #0
   12820:	pop	{r1}		; (ldr r1, [sp], #4)
   12824:	mov	r2, sp
   12828:	push	{r2}		; (str r2, [sp, #-4]!)
   1282c:	push	{r0}		; (str r0, [sp, #-4]!)
   12830:	ldr	ip, [pc, #16]	; 12848 <_start@@Base+0x30>
   12834:	push	{ip}		; (str ip, [sp, #-4]!)
   12838:	ldr	r0, [pc, #12]	; 1284c <_start@@Base+0x34>
   1283c:	ldr	r3, [pc, #12]	; 12850 <_start@@Base+0x38>
   12840:	bl	126f8 <__libc_start_main@plt>
   12844:	bl	1280c <abort@plt>
   12848:	andeq	ip, r1, ip, lsl #10
   1284c:			; <UNDEFINED> instruction: 0x00013cb8
   12850:	andeq	ip, r1, ip, lsr #9
   12854:	ldr	r3, [pc, #20]	; 12870 <_start@@Base+0x58>
   12858:	ldr	r2, [pc, #20]	; 12874 <_start@@Base+0x5c>
   1285c:	add	r3, pc, r3
   12860:	ldr	r2, [r3, r2]
   12864:	cmp	r2, #0
   12868:	bxeq	lr
   1286c:	b	12710 <__gmon_start__@plt>
   12870:	muleq	r1, ip, r7
   12874:	andeq	r0, r0, r4, asr #1
   12878:	ldr	r0, [pc, #24]	; 12898 <_start@@Base+0x80>
   1287c:	ldr	r3, [pc, #24]	; 1289c <_start@@Base+0x84>
   12880:	cmp	r3, r0
   12884:	bxeq	lr
   12888:	ldr	r3, [pc, #16]	; 128a0 <_start@@Base+0x88>
   1288c:	cmp	r3, #0
   12890:	bxeq	lr
   12894:	bx	r3
   12898:	ldrdeq	lr, [r2], -r8
   1289c:	ldrdeq	lr, [r2], -r8
   128a0:	andeq	r0, r0, r0
   128a4:	ldr	r0, [pc, #36]	; 128d0 <_start@@Base+0xb8>
   128a8:	ldr	r1, [pc, #36]	; 128d4 <_start@@Base+0xbc>
   128ac:	sub	r1, r1, r0
   128b0:	asr	r1, r1, #2
   128b4:	add	r1, r1, r1, lsr #31
   128b8:	asrs	r1, r1, #1
   128bc:	bxeq	lr
   128c0:	ldr	r3, [pc, #16]	; 128d8 <_start@@Base+0xc0>
   128c4:	cmp	r3, #0
   128c8:	bxeq	lr
   128cc:	bx	r3
   128d0:	ldrdeq	lr, [r2], -r8
   128d4:	ldrdeq	lr, [r2], -r8
   128d8:	andeq	r0, r0, r0
   128dc:	push	{r4, lr}
   128e0:	ldr	r4, [pc, #24]	; 12900 <_start@@Base+0xe8>
   128e4:	ldrb	r3, [r4]
   128e8:	cmp	r3, #0
   128ec:	popne	{r4, pc}
   128f0:	bl	12878 <_start@@Base+0x60>
   128f4:	mov	r3, #1
   128f8:	strb	r3, [r4]
   128fc:	pop	{r4, pc}
   12900:	andeq	lr, r2, r4, ror #1
   12904:	b	128a4 <_start@@Base+0x8c>

00012908 <simple_file_only_main@@Base>:
   12908:	push	{r4, r5, fp, lr}
   1290c:	add	fp, sp, #8
   12910:	sub	sp, sp, #16
   12914:	movw	r0, #57576	; 0xe0e8
   12918:	movt	r0, #2
   1291c:	ldm	r0, {r1, r2, r3, r5}
   12920:	adds	r1, r1, #1
   12924:	adc	r2, r2, #0
   12928:	adds	r3, r3, #1
   1292c:	adc	r5, r5, #0
   12930:	stm	r0, {r1, r2, r3, r5}
   12934:	add	r4, sp, #4
   12938:	movw	r1, #50484	; 0xc534
   1293c:	movt	r1, #1
   12940:	mov	r0, r4
   12944:	bl	17fe8 <init_lexer@@Base>
   12948:	mov	r0, r4
   1294c:	bl	18218 <next@@Base>
   12950:	ldr	r1, [r0]
   12954:	mov	r5, #148	; 0x94
   12958:	str	r5, [sp]
   1295c:	mov	r0, #0
   12960:	mov	r2, #0
   12964:	mov	r3, #23
   12968:	bl	14f50 <UnityAssertEqualNumber@@Base>
   1296c:	mov	r0, r4
   12970:	bl	18218 <next@@Base>
   12974:	ldr	r1, [r0]
   12978:	str	r5, [sp]
   1297c:	mov	r0, #2
   12980:	mov	r2, #0
   12984:	mov	r3, #25
   12988:	bl	14f50 <UnityAssertEqualNumber@@Base>
   1298c:	mov	r0, r4
   12990:	bl	18218 <next@@Base>
   12994:	ldr	r1, [r0]
   12998:	str	r5, [sp]
   1299c:	mov	r0, #3
   129a0:	mov	r2, #0
   129a4:	mov	r3, #27
   129a8:	bl	14f50 <UnityAssertEqualNumber@@Base>
   129ac:	mov	r0, r4
   129b0:	bl	18218 <next@@Base>
   129b4:	ldr	r1, [r0]
   129b8:	str	r5, [sp]
   129bc:	mov	r0, #4
   129c0:	mov	r2, #0
   129c4:	mov	r3, #29
   129c8:	bl	14f50 <UnityAssertEqualNumber@@Base>
   129cc:	mov	r0, r4
   129d0:	bl	18218 <next@@Base>
   129d4:	ldr	r1, [r0]
   129d8:	str	r5, [sp]
   129dc:	mov	r0, #5
   129e0:	mov	r2, #0
   129e4:	mov	r3, #31
   129e8:	bl	14f50 <UnityAssertEqualNumber@@Base>
   129ec:	mov	r0, r4
   129f0:	bl	18218 <next@@Base>
   129f4:	ldr	r1, [r0]
   129f8:	str	r5, [sp]
   129fc:	mov	r0, #7
   12a00:	mov	r2, #0
   12a04:	mov	r3, #33	; 0x21
   12a08:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12a0c:	mov	r0, r4
   12a10:	bl	18218 <next@@Base>
   12a14:	ldr	r1, [r0]
   12a18:	str	r5, [sp]
   12a1c:	mov	r0, #1
   12a20:	mov	r2, #0
   12a24:	mov	r3, #35	; 0x23
   12a28:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12a2c:	mov	r0, r4
   12a30:	bl	18218 <next@@Base>
   12a34:	ldr	r1, [r0]
   12a38:	str	r5, [sp]
   12a3c:	mov	r0, #8
   12a40:	mov	r2, #0
   12a44:	mov	r3, #37	; 0x25
   12a48:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12a4c:	mov	r0, r4
   12a50:	bl	18218 <next@@Base>
   12a54:	ldr	r1, [r0]
   12a58:	str	r5, [sp]
   12a5c:	mov	r0, #6
   12a60:	mov	r2, #0
   12a64:	mov	r3, #39	; 0x27
   12a68:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12a6c:	mov	r0, r4
   12a70:	bl	18218 <next@@Base>
   12a74:	ldr	r1, [r0]
   12a78:	str	r5, [sp]
   12a7c:	mov	r0, #9
   12a80:	mov	r2, #0
   12a84:	mov	r3, #41	; 0x29
   12a88:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12a8c:	mov	r0, r4
   12a90:	bl	18028 <destroy_lexer@@Base>
   12a94:	sub	sp, fp, #8
   12a98:	pop	{r4, r5, fp, pc}

00012a9c <push_token_to_stack@@Base>:
   12a9c:	push	{r4, r5, fp, lr}
   12aa0:	add	fp, sp, #8
   12aa4:	sub	sp, sp, #16
   12aa8:	movw	r0, #57592	; 0xe0f8
   12aac:	movt	r0, #2
   12ab0:	ldm	r0, {r1, r2, r3, r5}
   12ab4:	adds	r1, r1, #1
   12ab8:	adc	r2, r2, #0
   12abc:	adds	r3, r3, #1
   12ac0:	adc	r5, r5, #0
   12ac4:	stm	r0, {r1, r2, r3, r5}
   12ac8:	add	r4, sp, #4
   12acc:	movw	r1, #50484	; 0xc534
   12ad0:	movt	r1, #1
   12ad4:	mov	r0, r4
   12ad8:	bl	17fe8 <init_lexer@@Base>
   12adc:	mov	r0, #8
   12ae0:	bl	126ec <malloc@plt>
   12ae4:	mov	r5, r0
   12ae8:	mov	r0, r4
   12aec:	mov	r1, r5
   12af0:	bl	180c8 <push_back@@Base>
   12af4:	ldr	r0, [sp, #8]
   12af8:	ldr	r0, [r0, #4]
   12afc:	mov	r1, #148	; 0x94
   12b00:	str	r1, [sp]
   12b04:	mov	r1, r5
   12b08:	mov	r2, #0
   12b0c:	mov	r3, #62	; 0x3e
   12b10:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12b14:	mov	r0, r4
   12b18:	bl	18028 <destroy_lexer@@Base>
   12b1c:	mov	r0, r5
   12b20:	bl	1265c <free@plt>
   12b24:	sub	sp, fp, #8
   12b28:	pop	{r4, r5, fp, pc}

00012b2c <push_two_tokens_to_stack@@Base>:
   12b2c:	push	{r4, r5, r6, r7, fp, lr}
   12b30:	add	fp, sp, #16
   12b34:	sub	sp, sp, #16
   12b38:	movw	r0, #57608	; 0xe108
   12b3c:	movt	r0, #2
   12b40:	ldm	r0, {r1, r2, r3, r6}
   12b44:	adds	r1, r1, #1
   12b48:	adc	r2, r2, #0
   12b4c:	adds	r3, r3, #1
   12b50:	adc	r6, r6, #0
   12b54:	stm	r0, {r1, r2, r3, r6}
   12b58:	add	r4, sp, #4
   12b5c:	movw	r1, #50484	; 0xc534
   12b60:	movt	r1, #1
   12b64:	mov	r0, r4
   12b68:	bl	17fe8 <init_lexer@@Base>
   12b6c:	mov	r0, #8
   12b70:	bl	126ec <malloc@plt>
   12b74:	mov	r5, r0
   12b78:	mov	r0, #8
   12b7c:	bl	126ec <malloc@plt>
   12b80:	mov	r6, r0
   12b84:	mov	r0, r4
   12b88:	mov	r1, r5
   12b8c:	bl	180c8 <push_back@@Base>
   12b90:	ldr	r0, [sp, #8]
   12b94:	ldr	r0, [r0, #4]
   12b98:	mov	r7, #148	; 0x94
   12b9c:	str	r7, [sp]
   12ba0:	mov	r1, r5
   12ba4:	mov	r2, #0
   12ba8:	mov	r3, #86	; 0x56
   12bac:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12bb0:	mov	r0, r4
   12bb4:	mov	r1, r6
   12bb8:	bl	180c8 <push_back@@Base>
   12bbc:	ldr	r0, [sp, #8]
   12bc0:	ldr	r0, [r0, #4]
   12bc4:	str	r7, [sp]
   12bc8:	mov	r1, r6
   12bcc:	mov	r2, #0
   12bd0:	mov	r3, #88	; 0x58
   12bd4:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12bd8:	mov	r0, r4
   12bdc:	bl	18028 <destroy_lexer@@Base>
   12be0:	mov	r0, r5
   12be4:	bl	1265c <free@plt>
   12be8:	mov	r0, r6
   12bec:	bl	1265c <free@plt>
   12bf0:	sub	sp, fp, #16
   12bf4:	pop	{r4, r5, r6, r7, fp, pc}

00012bf8 <push_token_and_call_next@@Base>:
   12bf8:	push	{r4, r5, fp, lr}
   12bfc:	add	fp, sp, #8
   12c00:	sub	sp, sp, #16
   12c04:	movw	r0, #57624	; 0xe118
   12c08:	movt	r0, #2
   12c0c:	ldm	r0, {r1, r2, r3, r5}
   12c10:	adds	r1, r1, #1
   12c14:	adc	r2, r2, #0
   12c18:	adds	r3, r3, #1
   12c1c:	adc	r5, r5, #0
   12c20:	stm	r0, {r1, r2, r3, r5}
   12c24:	add	r4, sp, #4
   12c28:	movw	r1, #50484	; 0xc534
   12c2c:	movt	r1, #1
   12c30:	mov	r0, r4
   12c34:	bl	17fe8 <init_lexer@@Base>
   12c38:	mov	r0, #8
   12c3c:	bl	126ec <malloc@plt>
   12c40:	mov	r5, r0
   12c44:	mov	r0, r4
   12c48:	mov	r1, r5
   12c4c:	bl	180c8 <push_back@@Base>
   12c50:	mov	r0, r4
   12c54:	bl	18218 <next@@Base>
   12c58:	mov	r1, r0
   12c5c:	mov	r0, #148	; 0x94
   12c60:	str	r0, [sp]
   12c64:	mov	r0, r5
   12c68:	mov	r2, #0
   12c6c:	mov	r3, #113	; 0x71
   12c70:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12c74:	mov	r0, r4
   12c78:	bl	18028 <destroy_lexer@@Base>
   12c7c:	mov	r0, r5
   12c80:	bl	1265c <free@plt>
   12c84:	sub	sp, fp, #8
   12c88:	pop	{r4, r5, fp, pc}

00012c8c <if_without_else@@Base>:
   12c8c:	push	{r4, r5, fp, lr}
   12c90:	add	fp, sp, #8
   12c94:	sub	sp, sp, #16
   12c98:	movw	r0, #57640	; 0xe128
   12c9c:	movt	r0, #2
   12ca0:	ldm	r0, {r1, r2, r3, r5}
   12ca4:	adds	r1, r1, #1
   12ca8:	adc	r2, r2, #0
   12cac:	adds	r3, r3, #1
   12cb0:	adc	r5, r5, #0
   12cb4:	stm	r0, {r1, r2, r3, r5}
   12cb8:	add	r4, sp, #4
   12cbc:	movw	r1, #50510	; 0xc54e
   12cc0:	movt	r1, #1
   12cc4:	mov	r0, r4
   12cc8:	bl	17fe8 <init_lexer@@Base>
   12ccc:	mov	r0, r4
   12cd0:	bl	18218 <next@@Base>
   12cd4:	ldr	r1, [r0]
   12cd8:	mov	r5, #148	; 0x94
   12cdc:	str	r5, [sp]
   12ce0:	mov	r0, #0
   12ce4:	mov	r2, #0
   12ce8:	mov	r3, #140	; 0x8c
   12cec:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12cf0:	mov	r0, r4
   12cf4:	bl	18218 <next@@Base>
   12cf8:	ldr	r1, [r0]
   12cfc:	str	r5, [sp]
   12d00:	mov	r0, #2
   12d04:	mov	r2, #0
   12d08:	mov	r3, #142	; 0x8e
   12d0c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12d10:	mov	r0, r4
   12d14:	bl	18218 <next@@Base>
   12d18:	ldr	r1, [r0]
   12d1c:	str	r5, [sp]
   12d20:	mov	r0, #3
   12d24:	mov	r2, #0
   12d28:	mov	r3, #144	; 0x90
   12d2c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12d30:	mov	r0, r4
   12d34:	bl	18218 <next@@Base>
   12d38:	ldr	r1, [r0]
   12d3c:	str	r5, [sp]
   12d40:	mov	r0, #4
   12d44:	mov	r2, #0
   12d48:	mov	r3, #146	; 0x92
   12d4c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12d50:	mov	r0, r4
   12d54:	bl	18218 <next@@Base>
   12d58:	ldr	r1, [r0]
   12d5c:	str	r5, [sp]
   12d60:	mov	r0, #5
   12d64:	mov	r2, #0
   12d68:	mov	r3, #148	; 0x94
   12d6c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12d70:	mov	r0, r4
   12d74:	bl	18218 <next@@Base>
   12d78:	ldr	r1, [r0]
   12d7c:	str	r5, [sp]
   12d80:	mov	r0, #10
   12d84:	mov	r2, #0
   12d88:	mov	r3, #150	; 0x96
   12d8c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12d90:	mov	r0, r4
   12d94:	bl	18218 <next@@Base>
   12d98:	ldr	r1, [r0]
   12d9c:	str	r5, [sp]
   12da0:	mov	r0, #3
   12da4:	mov	r2, #0
   12da8:	mov	r3, #152	; 0x98
   12dac:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12db0:	mov	r0, r4
   12db4:	bl	18218 <next@@Base>
   12db8:	ldr	r1, [r0]
   12dbc:	str	r5, [sp]
   12dc0:	mov	r0, #1
   12dc4:	mov	r2, #0
   12dc8:	mov	r3, #154	; 0x9a
   12dcc:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12dd0:	mov	r0, r4
   12dd4:	bl	18218 <next@@Base>
   12dd8:	ldr	r1, [r0]
   12ddc:	str	r5, [sp]
   12de0:	mov	r0, #12
   12de4:	mov	r2, #0
   12de8:	mov	r3, #156	; 0x9c
   12dec:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12df0:	mov	r0, r4
   12df4:	bl	18218 <next@@Base>
   12df8:	ldr	r1, [r0]
   12dfc:	str	r5, [sp]
   12e00:	mov	r0, #1
   12e04:	mov	r2, #0
   12e08:	mov	r3, #158	; 0x9e
   12e0c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12e10:	mov	r0, r4
   12e14:	bl	18218 <next@@Base>
   12e18:	ldr	r1, [r0]
   12e1c:	str	r5, [sp]
   12e20:	mov	r0, #4
   12e24:	mov	r2, #0
   12e28:	mov	r3, #160	; 0xa0
   12e2c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12e30:	mov	r0, r4
   12e34:	bl	18218 <next@@Base>
   12e38:	ldr	r1, [r0]
   12e3c:	str	r5, [sp]
   12e40:	mov	r0, #5
   12e44:	mov	r2, #0
   12e48:	mov	r3, #162	; 0xa2
   12e4c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12e50:	mov	r0, r4
   12e54:	bl	18218 <next@@Base>
   12e58:	ldr	r1, [r0]
   12e5c:	str	r5, [sp]
   12e60:	mov	r0, #7
   12e64:	mov	r2, #0
   12e68:	mov	r3, #164	; 0xa4
   12e6c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12e70:	mov	r0, r4
   12e74:	bl	18218 <next@@Base>
   12e78:	ldr	r1, [r0]
   12e7c:	str	r5, [sp]
   12e80:	mov	r0, #1
   12e84:	mov	r2, #0
   12e88:	mov	r3, #166	; 0xa6
   12e8c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12e90:	mov	r0, r4
   12e94:	bl	18218 <next@@Base>
   12e98:	ldr	r1, [r0]
   12e9c:	str	r5, [sp]
   12ea0:	mov	r0, #8
   12ea4:	mov	r2, #0
   12ea8:	mov	r3, #168	; 0xa8
   12eac:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12eb0:	mov	r0, r4
   12eb4:	bl	18218 <next@@Base>
   12eb8:	ldr	r1, [r0]
   12ebc:	str	r5, [sp]
   12ec0:	mov	r0, #6
   12ec4:	mov	r2, #0
   12ec8:	mov	r3, #170	; 0xaa
   12ecc:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12ed0:	mov	r0, r4
   12ed4:	bl	18218 <next@@Base>
   12ed8:	ldr	r1, [r0]
   12edc:	str	r5, [sp]
   12ee0:	mov	r0, #7
   12ee4:	mov	r2, #0
   12ee8:	mov	r3, #172	; 0xac
   12eec:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12ef0:	mov	r0, r4
   12ef4:	bl	18218 <next@@Base>
   12ef8:	ldr	r1, [r0]
   12efc:	str	r5, [sp]
   12f00:	mov	r0, #1
   12f04:	mov	r2, #0
   12f08:	mov	r3, #174	; 0xae
   12f0c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12f10:	mov	r0, r4
   12f14:	bl	18218 <next@@Base>
   12f18:	ldr	r1, [r0]
   12f1c:	str	r5, [sp]
   12f20:	mov	r0, #8
   12f24:	mov	r2, #0
   12f28:	mov	r3, #176	; 0xb0
   12f2c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12f30:	mov	r0, r4
   12f34:	bl	18218 <next@@Base>
   12f38:	ldr	r1, [r0]
   12f3c:	str	r5, [sp]
   12f40:	mov	r0, #6
   12f44:	mov	r2, #0
   12f48:	mov	r3, #178	; 0xb2
   12f4c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12f50:	mov	r0, r4
   12f54:	bl	18218 <next@@Base>
   12f58:	ldr	r1, [r0]
   12f5c:	str	r5, [sp]
   12f60:	mov	r0, #9
   12f64:	mov	r2, #0
   12f68:	mov	r3, #180	; 0xb4
   12f6c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12f70:	mov	r0, r4
   12f74:	bl	18028 <destroy_lexer@@Base>
   12f78:	sub	sp, fp, #8
   12f7c:	pop	{r4, r5, fp, pc}

00012f80 <if_with_else@@Base>:
   12f80:	push	{r4, r5, fp, lr}
   12f84:	add	fp, sp, #8
   12f88:	sub	sp, sp, #16
   12f8c:	movw	r0, #57656	; 0xe138
   12f90:	movt	r0, #2
   12f94:	ldm	r0, {r1, r2, r3, r5}
   12f98:	adds	r1, r1, #1
   12f9c:	adc	r2, r2, #0
   12fa0:	adds	r3, r3, #1
   12fa4:	adc	r5, r5, #0
   12fa8:	stm	r0, {r1, r2, r3, r5}
   12fac:	add	r4, sp, #4
   12fb0:	movw	r1, #50567	; 0xc587
   12fb4:	movt	r1, #1
   12fb8:	mov	r0, r4
   12fbc:	bl	17fe8 <init_lexer@@Base>
   12fc0:	mov	r0, r4
   12fc4:	bl	18218 <next@@Base>
   12fc8:	ldr	r1, [r0]
   12fcc:	mov	r5, #148	; 0x94
   12fd0:	str	r5, [sp]
   12fd4:	mov	r0, #0
   12fd8:	mov	r2, #0
   12fdc:	mov	r3, #210	; 0xd2
   12fe0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   12fe4:	mov	r0, r4
   12fe8:	bl	18218 <next@@Base>
   12fec:	ldr	r1, [r0]
   12ff0:	str	r5, [sp]
   12ff4:	mov	r0, #2
   12ff8:	mov	r2, #0
   12ffc:	mov	r3, #212	; 0xd4
   13000:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13004:	mov	r0, r4
   13008:	bl	18218 <next@@Base>
   1300c:	ldr	r1, [r0]
   13010:	str	r5, [sp]
   13014:	mov	r0, #3
   13018:	mov	r2, #0
   1301c:	mov	r3, #214	; 0xd6
   13020:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13024:	mov	r0, r4
   13028:	bl	18218 <next@@Base>
   1302c:	ldr	r1, [r0]
   13030:	str	r5, [sp]
   13034:	mov	r0, #4
   13038:	mov	r2, #0
   1303c:	mov	r3, #216	; 0xd8
   13040:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13044:	mov	r0, r4
   13048:	bl	18218 <next@@Base>
   1304c:	ldr	r1, [r0]
   13050:	str	r5, [sp]
   13054:	mov	r0, #5
   13058:	mov	r2, #0
   1305c:	mov	r3, #218	; 0xda
   13060:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13064:	mov	r0, r4
   13068:	bl	18218 <next@@Base>
   1306c:	ldr	r1, [r0]
   13070:	str	r5, [sp]
   13074:	mov	r0, #10
   13078:	mov	r2, #0
   1307c:	mov	r3, #220	; 0xdc
   13080:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13084:	mov	r0, r4
   13088:	bl	18218 <next@@Base>
   1308c:	ldr	r1, [r0]
   13090:	str	r5, [sp]
   13094:	mov	r0, #3
   13098:	mov	r2, #0
   1309c:	mov	r3, #222	; 0xde
   130a0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   130a4:	mov	r0, r4
   130a8:	bl	18218 <next@@Base>
   130ac:	ldr	r1, [r0]
   130b0:	str	r5, [sp]
   130b4:	mov	r0, #1
   130b8:	mov	r2, #0
   130bc:	mov	r3, #224	; 0xe0
   130c0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   130c4:	mov	r0, r4
   130c8:	bl	18218 <next@@Base>
   130cc:	ldr	r1, [r0]
   130d0:	str	r5, [sp]
   130d4:	mov	r0, #12
   130d8:	mov	r2, #0
   130dc:	mov	r3, #226	; 0xe2
   130e0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   130e4:	mov	r0, r4
   130e8:	bl	18218 <next@@Base>
   130ec:	ldr	r1, [r0]
   130f0:	str	r5, [sp]
   130f4:	mov	r0, #1
   130f8:	mov	r2, #0
   130fc:	mov	r3, #228	; 0xe4
   13100:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13104:	mov	r0, r4
   13108:	bl	18218 <next@@Base>
   1310c:	ldr	r1, [r0]
   13110:	str	r5, [sp]
   13114:	mov	r0, #4
   13118:	mov	r2, #0
   1311c:	mov	r3, #230	; 0xe6
   13120:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13124:	mov	r0, r4
   13128:	bl	18218 <next@@Base>
   1312c:	ldr	r1, [r0]
   13130:	str	r5, [sp]
   13134:	mov	r0, #5
   13138:	mov	r2, #0
   1313c:	mov	r3, #232	; 0xe8
   13140:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13144:	mov	r0, r4
   13148:	bl	18218 <next@@Base>
   1314c:	ldr	r1, [r0]
   13150:	str	r5, [sp]
   13154:	mov	r0, #7
   13158:	mov	r2, #0
   1315c:	mov	r3, #234	; 0xea
   13160:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13164:	mov	r0, r4
   13168:	bl	18218 <next@@Base>
   1316c:	ldr	r1, [r0]
   13170:	str	r5, [sp]
   13174:	mov	r0, #1
   13178:	mov	r2, #0
   1317c:	mov	r3, #236	; 0xec
   13180:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13184:	mov	r0, r4
   13188:	bl	18218 <next@@Base>
   1318c:	ldr	r1, [r0]
   13190:	str	r5, [sp]
   13194:	mov	r0, #8
   13198:	mov	r2, #0
   1319c:	mov	r3, #238	; 0xee
   131a0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   131a4:	mov	r0, r4
   131a8:	bl	18218 <next@@Base>
   131ac:	ldr	r1, [r0]
   131b0:	str	r5, [sp]
   131b4:	mov	r0, #6
   131b8:	mov	r2, #0
   131bc:	mov	r3, #240	; 0xf0
   131c0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   131c4:	mov	r0, r4
   131c8:	bl	18218 <next@@Base>
   131cc:	ldr	r1, [r0]
   131d0:	str	r5, [sp]
   131d4:	mov	r0, #11
   131d8:	mov	r2, #0
   131dc:	mov	r3, #242	; 0xf2
   131e0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   131e4:	mov	r0, r4
   131e8:	bl	18218 <next@@Base>
   131ec:	ldr	r1, [r0]
   131f0:	str	r5, [sp]
   131f4:	mov	r0, #5
   131f8:	mov	r2, #0
   131fc:	mov	r3, #244	; 0xf4
   13200:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13204:	mov	r0, r4
   13208:	bl	18218 <next@@Base>
   1320c:	ldr	r1, [r0]
   13210:	str	r5, [sp]
   13214:	mov	r0, #7
   13218:	mov	r2, #0
   1321c:	mov	r3, #246	; 0xf6
   13220:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13224:	mov	r0, r4
   13228:	bl	18218 <next@@Base>
   1322c:	ldr	r1, [r0]
   13230:	str	r5, [sp]
   13234:	mov	r0, #1
   13238:	mov	r2, #0
   1323c:	mov	r3, #248	; 0xf8
   13240:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13244:	mov	r0, r4
   13248:	bl	18218 <next@@Base>
   1324c:	ldr	r1, [r0]
   13250:	str	r5, [sp]
   13254:	mov	r0, #8
   13258:	mov	r2, #0
   1325c:	mov	r3, #250	; 0xfa
   13260:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13264:	mov	r0, r4
   13268:	bl	18218 <next@@Base>
   1326c:	ldr	r1, [r0]
   13270:	str	r5, [sp]
   13274:	mov	r0, #6
   13278:	mov	r2, #0
   1327c:	mov	r3, #252	; 0xfc
   13280:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13284:	mov	r0, r4
   13288:	bl	18218 <next@@Base>
   1328c:	ldr	r1, [r0]
   13290:	str	r5, [sp]
   13294:	mov	r0, #7
   13298:	mov	r2, #0
   1329c:	mov	r3, #254	; 0xfe
   132a0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   132a4:	mov	r0, r4
   132a8:	bl	18218 <next@@Base>
   132ac:	ldr	r1, [r0]
   132b0:	str	r5, [sp]
   132b4:	mov	r0, #1
   132b8:	mov	r2, #0
   132bc:	mov	r3, #256	; 0x100
   132c0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   132c4:	mov	r0, r4
   132c8:	bl	18218 <next@@Base>
   132cc:	ldr	r1, [r0]
   132d0:	str	r5, [sp]
   132d4:	mov	r0, #8
   132d8:	mov	r2, #0
   132dc:	movw	r3, #258	; 0x102
   132e0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   132e4:	mov	r0, r4
   132e8:	bl	18218 <next@@Base>
   132ec:	ldr	r1, [r0]
   132f0:	str	r5, [sp]
   132f4:	mov	r0, #6
   132f8:	mov	r2, #0
   132fc:	mov	r3, #260	; 0x104
   13300:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13304:	mov	r0, r4
   13308:	bl	18218 <next@@Base>
   1330c:	ldr	r1, [r0]
   13310:	str	r5, [sp]
   13314:	mov	r0, #9
   13318:	mov	r2, #0
   1331c:	movw	r3, #262	; 0x106
   13320:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13324:	mov	r0, r4
   13328:	bl	18028 <destroy_lexer@@Base>
   1332c:	sub	sp, fp, #8
   13330:	pop	{r4, r5, fp, pc}

00013334 <read_token_int_type@@Base>:
   13334:	push	{r4, sl, fp, lr}
   13338:	add	fp, sp, #8
   1333c:	sub	sp, sp, #16
   13340:	movw	r0, #57672	; 0xe148
   13344:	movt	r0, #2
   13348:	ldm	r0, {r1, r2, r3, r4}
   1334c:	adds	r1, r1, #1
   13350:	adc	r2, r2, #0
   13354:	adds	r3, r3, #1
   13358:	adc	r4, r4, #0
   1335c:	stm	r0, {r1, r2, r3, r4}
   13360:	add	r4, sp, #4
   13364:	movw	r1, #53757	; 0xd1fd
   13368:	movt	r1, #1
   1336c:	mov	r0, r4
   13370:	bl	17fe8 <init_lexer@@Base>
   13374:	mov	r0, r4
   13378:	bl	18218 <next@@Base>
   1337c:	ldr	r1, [r0]
   13380:	mov	r0, #148	; 0x94
   13384:	str	r0, [sp]
   13388:	mov	r0, #0
   1338c:	mov	r2, #0
   13390:	movw	r3, #279	; 0x117
   13394:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13398:	mov	r0, r4
   1339c:	bl	18028 <destroy_lexer@@Base>
   133a0:	sub	sp, fp, #8
   133a4:	pop	{r4, sl, fp, pc}

000133a8 <read_token_int_value@@Base>:
   133a8:	push	{r4, sl, fp, lr}
   133ac:	add	fp, sp, #8
   133b0:	sub	sp, sp, #16
   133b4:	movw	r0, #57688	; 0xe158
   133b8:	movt	r0, #2
   133bc:	ldm	r0, {r1, r2, r3, r4}
   133c0:	adds	r1, r1, #1
   133c4:	adc	r2, r2, #0
   133c8:	adds	r3, r3, #1
   133cc:	adc	r4, r4, #0
   133d0:	stm	r0, {r1, r2, r3, r4}
   133d4:	add	r4, sp, #4
   133d8:	movw	r1, #50648	; 0xc5d8
   133dc:	movt	r1, #1
   133e0:	mov	r0, r4
   133e4:	bl	17fe8 <init_lexer@@Base>
   133e8:	mov	r0, r4
   133ec:	bl	18218 <next@@Base>
   133f0:	ldr	r1, [r0]
   133f4:	mov	r0, #148	; 0x94
   133f8:	str	r0, [sp]
   133fc:	mov	r0, #1
   13400:	mov	r2, #0
   13404:	mov	r3, #296	; 0x128
   13408:	bl	14f50 <UnityAssertEqualNumber@@Base>
   1340c:	mov	r0, r4
   13410:	bl	18028 <destroy_lexer@@Base>
   13414:	sub	sp, fp, #8
   13418:	pop	{r4, sl, fp, pc}

0001341c <read_token_function@@Base>:
   1341c:	push	{r4, sl, fp, lr}
   13420:	add	fp, sp, #8
   13424:	sub	sp, sp, #16
   13428:	movw	r0, #57704	; 0xe168
   1342c:	movt	r0, #2
   13430:	ldm	r0, {r1, r2, r3, r4}
   13434:	adds	r1, r1, #1
   13438:	adc	r2, r2, #0
   1343c:	adds	r3, r3, #1
   13440:	adc	r4, r4, #0
   13444:	stm	r0, {r1, r2, r3, r4}
   13448:	add	r4, sp, #4
   1344c:	movw	r1, #50768	; 0xc650
   13450:	movt	r1, #1
   13454:	mov	r0, r4
   13458:	bl	17fe8 <init_lexer@@Base>
   1345c:	mov	r0, r4
   13460:	bl	18218 <next@@Base>
   13464:	ldr	r1, [r0]
   13468:	mov	r0, #148	; 0x94
   1346c:	str	r0, [sp]
   13470:	mov	r0, #2
   13474:	mov	r2, #0
   13478:	movw	r3, #313	; 0x139
   1347c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13480:	mov	r0, r4
   13484:	bl	18028 <destroy_lexer@@Base>
   13488:	sub	sp, fp, #8
   1348c:	pop	{r4, sl, fp, pc}

00013490 <read_token_opar@@Base>:
   13490:	push	{r4, sl, fp, lr}
   13494:	add	fp, sp, #8
   13498:	sub	sp, sp, #16
   1349c:	movw	r0, #57720	; 0xe178
   134a0:	movt	r0, #2
   134a4:	ldm	r0, {r1, r2, r3, r4}
   134a8:	adds	r1, r1, #1
   134ac:	adc	r2, r2, #0
   134b0:	adds	r3, r3, #1
   134b4:	adc	r4, r4, #0
   134b8:	stm	r0, {r1, r2, r3, r4}
   134bc:	add	r4, sp, #4
   134c0:	movw	r1, #50653	; 0xc5dd
   134c4:	movt	r1, #1
   134c8:	mov	r0, r4
   134cc:	bl	17fe8 <init_lexer@@Base>
   134d0:	mov	r0, r4
   134d4:	bl	18218 <next@@Base>
   134d8:	ldr	r1, [r0]
   134dc:	mov	r0, #148	; 0x94
   134e0:	str	r0, [sp]
   134e4:	mov	r0, #3
   134e8:	mov	r2, #0
   134ec:	movw	r3, #330	; 0x14a
   134f0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   134f4:	mov	r0, r4
   134f8:	bl	18028 <destroy_lexer@@Base>
   134fc:	sub	sp, fp, #8
   13500:	pop	{r4, sl, fp, pc}

00013504 <read_token_cpar@@Base>:
   13504:	push	{r4, sl, fp, lr}
   13508:	add	fp, sp, #8
   1350c:	sub	sp, sp, #16
   13510:	movw	r0, #57736	; 0xe188
   13514:	movt	r0, #2
   13518:	ldm	r0, {r1, r2, r3, r4}
   1351c:	adds	r1, r1, #1
   13520:	adc	r2, r2, #0
   13524:	adds	r3, r3, #1
   13528:	adc	r4, r4, #0
   1352c:	stm	r0, {r1, r2, r3, r4}
   13530:	add	r4, sp, #4
   13534:	movw	r1, #50655	; 0xc5df
   13538:	movt	r1, #1
   1353c:	mov	r0, r4
   13540:	bl	17fe8 <init_lexer@@Base>
   13544:	mov	r0, r4
   13548:	bl	18218 <next@@Base>
   1354c:	ldr	r1, [r0]
   13550:	mov	r0, #148	; 0x94
   13554:	str	r0, [sp]
   13558:	mov	r0, #4
   1355c:	mov	r2, #0
   13560:	movw	r3, #347	; 0x15b
   13564:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13568:	mov	r0, r4
   1356c:	bl	18028 <destroy_lexer@@Base>
   13570:	sub	sp, fp, #8
   13574:	pop	{r4, sl, fp, pc}

00013578 <read_token_obra@@Base>:
   13578:	push	{r4, sl, fp, lr}
   1357c:	add	fp, sp, #8
   13580:	sub	sp, sp, #16
   13584:	movw	r0, #57752	; 0xe198
   13588:	movt	r0, #2
   1358c:	ldm	r0, {r1, r2, r3, r4}
   13590:	adds	r1, r1, #1
   13594:	adc	r2, r2, #0
   13598:	adds	r3, r3, #1
   1359c:	adc	r4, r4, #0
   135a0:	stm	r0, {r1, r2, r3, r4}
   135a4:	add	r4, sp, #4
   135a8:	movw	r1, #50657	; 0xc5e1
   135ac:	movt	r1, #1
   135b0:	mov	r0, r4
   135b4:	bl	17fe8 <init_lexer@@Base>
   135b8:	mov	r0, r4
   135bc:	bl	18218 <next@@Base>
   135c0:	ldr	r1, [r0]
   135c4:	mov	r0, #148	; 0x94
   135c8:	str	r0, [sp]
   135cc:	mov	r0, #5
   135d0:	mov	r2, #0
   135d4:	mov	r3, #364	; 0x16c
   135d8:	bl	14f50 <UnityAssertEqualNumber@@Base>
   135dc:	mov	r0, r4
   135e0:	bl	18028 <destroy_lexer@@Base>
   135e4:	sub	sp, fp, #8
   135e8:	pop	{r4, sl, fp, pc}

000135ec <read_token_cbra@@Base>:
   135ec:	push	{r4, sl, fp, lr}
   135f0:	add	fp, sp, #8
   135f4:	sub	sp, sp, #16
   135f8:	movw	r0, #57768	; 0xe1a8
   135fc:	movt	r0, #2
   13600:	ldm	r0, {r1, r2, r3, r4}
   13604:	adds	r1, r1, #1
   13608:	adc	r2, r2, #0
   1360c:	adds	r3, r3, #1
   13610:	adc	r4, r4, #0
   13614:	stm	r0, {r1, r2, r3, r4}
   13618:	add	r4, sp, #4
   1361c:	movw	r1, #50508	; 0xc54c
   13620:	movt	r1, #1
   13624:	mov	r0, r4
   13628:	bl	17fe8 <init_lexer@@Base>
   1362c:	mov	r0, r4
   13630:	bl	18218 <next@@Base>
   13634:	ldr	r1, [r0]
   13638:	mov	r0, #148	; 0x94
   1363c:	str	r0, [sp]
   13640:	mov	r0, #6
   13644:	mov	r2, #0
   13648:	movw	r3, #382	; 0x17e
   1364c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13650:	mov	r0, r4
   13654:	bl	18028 <destroy_lexer@@Base>
   13658:	sub	sp, fp, #8
   1365c:	pop	{r4, sl, fp, pc}

00013660 <read_token_return@@Base>:
   13660:	push	{r4, sl, fp, lr}
   13664:	add	fp, sp, #8
   13668:	sub	sp, sp, #16
   1366c:	movw	r0, #57784	; 0xe1b8
   13670:	movt	r0, #2
   13674:	ldm	r0, {r1, r2, r3, r4}
   13678:	adds	r1, r1, #1
   1367c:	adc	r2, r2, #0
   13680:	adds	r3, r3, #1
   13684:	adc	r4, r4, #0
   13688:	stm	r0, {r1, r2, r3, r4}
   1368c:	add	r4, sp, #4
   13690:	movw	r1, #51008	; 0xc740
   13694:	movt	r1, #1
   13698:	mov	r0, r4
   1369c:	bl	17fe8 <init_lexer@@Base>
   136a0:	mov	r0, r4
   136a4:	bl	18218 <next@@Base>
   136a8:	ldr	r1, [r0]
   136ac:	mov	r0, #148	; 0x94
   136b0:	str	r0, [sp]
   136b4:	mov	r0, #7
   136b8:	mov	r2, #0
   136bc:	movw	r3, #399	; 0x18f
   136c0:	bl	14f50 <UnityAssertEqualNumber@@Base>
   136c4:	mov	r0, r4
   136c8:	bl	18028 <destroy_lexer@@Base>
   136cc:	sub	sp, fp, #8
   136d0:	pop	{r4, sl, fp, pc}

000136d4 <read_token_semicolon@@Base>:
   136d4:	push	{r4, sl, fp, lr}
   136d8:	add	fp, sp, #8
   136dc:	sub	sp, sp, #16
   136e0:	movw	r0, #57800	; 0xe1c8
   136e4:	movt	r0, #2
   136e8:	ldm	r0, {r1, r2, r3, r4}
   136ec:	adds	r1, r1, #1
   136f0:	adc	r2, r2, #0
   136f4:	adds	r3, r3, #1
   136f8:	adc	r4, r4, #0
   136fc:	stm	r0, {r1, r2, r3, r4}
   13700:	add	r4, sp, #4
   13704:	movw	r1, #50659	; 0xc5e3
   13708:	movt	r1, #1
   1370c:	mov	r0, r4
   13710:	bl	17fe8 <init_lexer@@Base>
   13714:	mov	r0, r4
   13718:	bl	18218 <next@@Base>
   1371c:	ldr	r1, [r0]
   13720:	mov	r0, #148	; 0x94
   13724:	str	r0, [sp]
   13728:	mov	r0, #8
   1372c:	mov	r2, #0
   13730:	mov	r3, #416	; 0x1a0
   13734:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13738:	mov	r0, r4
   1373c:	bl	18028 <destroy_lexer@@Base>
   13740:	sub	sp, fp, #8
   13744:	pop	{r4, sl, fp, pc}

00013748 <read_token_eof@@Base>:
   13748:	push	{r4, sl, fp, lr}
   1374c:	add	fp, sp, #8
   13750:	sub	sp, sp, #16
   13754:	movw	r0, #57816	; 0xe1d8
   13758:	movt	r0, #2
   1375c:	ldm	r0, {r1, r2, r3, r4}
   13760:	adds	r1, r1, #1
   13764:	adc	r2, r2, #0
   13768:	adds	r3, r3, #1
   1376c:	adc	r4, r4, #0
   13770:	stm	r0, {r1, r2, r3, r4}
   13774:	add	r4, sp, #4
   13778:	movw	r1, #56617	; 0xdd29
   1377c:	movt	r1, #1
   13780:	mov	r0, r4
   13784:	bl	17fe8 <init_lexer@@Base>
   13788:	mov	r0, r4
   1378c:	bl	18218 <next@@Base>
   13790:	ldr	r1, [r0]
   13794:	mov	r0, #148	; 0x94
   13798:	str	r0, [sp]
   1379c:	mov	r0, #9
   137a0:	mov	r2, #0
   137a4:	movw	r3, #433	; 0x1b1
   137a8:	bl	14f50 <UnityAssertEqualNumber@@Base>
   137ac:	mov	r0, r4
   137b0:	bl	18028 <destroy_lexer@@Base>
   137b4:	sub	sp, fp, #8
   137b8:	pop	{r4, sl, fp, pc}

000137bc <read_token_if@@Base>:
   137bc:	push	{r4, sl, fp, lr}
   137c0:	add	fp, sp, #8
   137c4:	sub	sp, sp, #16
   137c8:	movw	r0, #57832	; 0xe1e8
   137cc:	movt	r0, #2
   137d0:	ldm	r0, {r1, r2, r3, r4}
   137d4:	adds	r1, r1, #1
   137d8:	adc	r2, r2, #0
   137dc:	adds	r3, r3, #1
   137e0:	adc	r4, r4, #0
   137e4:	stm	r0, {r1, r2, r3, r4}
   137e8:	add	r4, sp, #4
   137ec:	movw	r1, #51062	; 0xc776
   137f0:	movt	r1, #1
   137f4:	mov	r0, r4
   137f8:	bl	17fe8 <init_lexer@@Base>
   137fc:	mov	r0, r4
   13800:	bl	18218 <next@@Base>
   13804:	ldr	r1, [r0]
   13808:	mov	r0, #148	; 0x94
   1380c:	str	r0, [sp]
   13810:	mov	r0, #10
   13814:	mov	r2, #0
   13818:	movw	r3, #450	; 0x1c2
   1381c:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13820:	mov	r0, r4
   13824:	bl	18028 <destroy_lexer@@Base>
   13828:	sub	sp, fp, #8
   1382c:	pop	{r4, sl, fp, pc}

00013830 <read_token_else@@Base>:
   13830:	push	{r4, sl, fp, lr}
   13834:	add	fp, sp, #8
   13838:	sub	sp, sp, #16
   1383c:	movw	r0, #57848	; 0xe1f8
   13840:	movt	r0, #2
   13844:	ldm	r0, {r1, r2, r3, r4}
   13848:	adds	r1, r1, #1
   1384c:	adc	r2, r2, #0
   13850:	adds	r3, r3, #1
   13854:	adc	r4, r4, #0
   13858:	stm	r0, {r1, r2, r3, r4}
   1385c:	add	r4, sp, #4
   13860:	movw	r1, #50867	; 0xc6b3
   13864:	movt	r1, #1
   13868:	mov	r0, r4
   1386c:	bl	17fe8 <init_lexer@@Base>
   13870:	mov	r0, r4
   13874:	bl	18218 <next@@Base>
   13878:	ldr	r1, [r0]
   1387c:	mov	r0, #148	; 0x94
   13880:	str	r0, [sp]
   13884:	mov	r0, #11
   13888:	mov	r2, #0
   1388c:	movw	r3, #467	; 0x1d3
   13890:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13894:	mov	r0, r4
   13898:	bl	18028 <destroy_lexer@@Base>
   1389c:	sub	sp, fp, #8
   138a0:	pop	{r4, sl, fp, pc}

000138a4 <read_token_equalequal@@Base>:
   138a4:	push	{r4, sl, fp, lr}
   138a8:	add	fp, sp, #8
   138ac:	sub	sp, sp, #16
   138b0:	movw	r0, #57864	; 0xe208
   138b4:	movt	r0, #2
   138b8:	ldm	r0, {r1, r2, r3, r4}
   138bc:	adds	r1, r1, #1
   138c0:	adc	r2, r2, #0
   138c4:	adds	r3, r3, #1
   138c8:	adc	r4, r4, #0
   138cc:	stm	r0, {r1, r2, r3, r4}
   138d0:	add	r4, sp, #4
   138d4:	movw	r1, #50661	; 0xc5e5
   138d8:	movt	r1, #1
   138dc:	mov	r0, r4
   138e0:	bl	17fe8 <init_lexer@@Base>
   138e4:	mov	r0, r4
   138e8:	bl	18218 <next@@Base>
   138ec:	ldr	r1, [r0]
   138f0:	mov	r0, #148	; 0x94
   138f4:	str	r0, [sp]
   138f8:	mov	r0, #12
   138fc:	mov	r2, #0
   13900:	mov	r3, #484	; 0x1e4
   13904:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13908:	mov	r0, r4
   1390c:	bl	18028 <destroy_lexer@@Base>
   13910:	sub	sp, fp, #8
   13914:	pop	{r4, sl, fp, pc}

00013918 <read_token_notequal@@Base>:
   13918:	push	{r4, sl, fp, lr}
   1391c:	add	fp, sp, #8
   13920:	sub	sp, sp, #16
   13924:	movw	r0, #57880	; 0xe218
   13928:	movt	r0, #2
   1392c:	ldm	r0, {r1, r2, r3, r4}
   13930:	adds	r1, r1, #1
   13934:	adc	r2, r2, #0
   13938:	adds	r3, r3, #1
   1393c:	adc	r4, r4, #0
   13940:	stm	r0, {r1, r2, r3, r4}
   13944:	add	r4, sp, #4
   13948:	movw	r1, #50664	; 0xc5e8
   1394c:	movt	r1, #1
   13950:	mov	r0, r4
   13954:	bl	17fe8 <init_lexer@@Base>
   13958:	mov	r0, r4
   1395c:	bl	18218 <next@@Base>
   13960:	ldr	r1, [r0]
   13964:	mov	r0, #148	; 0x94
   13968:	str	r0, [sp]
   1396c:	mov	r0, #12
   13970:	mov	r2, #0
   13974:	movw	r3, #501	; 0x1f5
   13978:	bl	14f50 <UnityAssertEqualNumber@@Base>
   1397c:	mov	r0, r4
   13980:	bl	18028 <destroy_lexer@@Base>
   13984:	sub	sp, fp, #8
   13988:	pop	{r4, sl, fp, pc}

0001398c <read_token_lessequalthan@@Base>:
   1398c:	push	{r4, sl, fp, lr}
   13990:	add	fp, sp, #8
   13994:	sub	sp, sp, #16
   13998:	movw	r0, #57896	; 0xe228
   1399c:	movt	r0, #2
   139a0:	ldm	r0, {r1, r2, r3, r4}
   139a4:	adds	r1, r1, #1
   139a8:	adc	r2, r2, #0
   139ac:	adds	r3, r3, #1
   139b0:	adc	r4, r4, #0
   139b4:	stm	r0, {r1, r2, r3, r4}
   139b8:	add	r4, sp, #4
   139bc:	movw	r1, #50667	; 0xc5eb
   139c0:	movt	r1, #1
   139c4:	mov	r0, r4
   139c8:	bl	17fe8 <init_lexer@@Base>
   139cc:	mov	r0, r4
   139d0:	bl	18218 <next@@Base>
   139d4:	ldr	r1, [r0]
   139d8:	mov	r0, #148	; 0x94
   139dc:	str	r0, [sp]
   139e0:	mov	r0, #12
   139e4:	mov	r2, #0
   139e8:	movw	r3, #518	; 0x206
   139ec:	bl	14f50 <UnityAssertEqualNumber@@Base>
   139f0:	mov	r0, r4
   139f4:	bl	18028 <destroy_lexer@@Base>
   139f8:	sub	sp, fp, #8
   139fc:	pop	{r4, sl, fp, pc}

00013a00 <read_token_oror@@Base>:
   13a00:	push	{r4, sl, fp, lr}
   13a04:	add	fp, sp, #8
   13a08:	sub	sp, sp, #16
   13a0c:	movw	r0, #57912	; 0xe238
   13a10:	movt	r0, #2
   13a14:	ldm	r0, {r1, r2, r3, r4}
   13a18:	adds	r1, r1, #1
   13a1c:	adc	r2, r2, #0
   13a20:	adds	r3, r3, #1
   13a24:	adc	r4, r4, #0
   13a28:	stm	r0, {r1, r2, r3, r4}
   13a2c:	add	r4, sp, #4
   13a30:	movw	r1, #50670	; 0xc5ee
   13a34:	movt	r1, #1
   13a38:	mov	r0, r4
   13a3c:	bl	17fe8 <init_lexer@@Base>
   13a40:	mov	r0, r4
   13a44:	bl	18218 <next@@Base>
   13a48:	ldr	r1, [r0]
   13a4c:	mov	r0, #148	; 0x94
   13a50:	str	r0, [sp]
   13a54:	mov	r0, #12
   13a58:	mov	r2, #0
   13a5c:	movw	r3, #535	; 0x217
   13a60:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13a64:	mov	r0, r4
   13a68:	bl	18028 <destroy_lexer@@Base>
   13a6c:	sub	sp, fp, #8
   13a70:	pop	{r4, sl, fp, pc}

00013a74 <read_token_andand@@Base>:
   13a74:	push	{r4, sl, fp, lr}
   13a78:	add	fp, sp, #8
   13a7c:	sub	sp, sp, #16
   13a80:	movw	r0, #57928	; 0xe248
   13a84:	movt	r0, #2
   13a88:	ldm	r0, {r1, r2, r3, r4}
   13a8c:	adds	r1, r1, #1
   13a90:	adc	r2, r2, #0
   13a94:	adds	r3, r3, #1
   13a98:	adc	r4, r4, #0
   13a9c:	stm	r0, {r1, r2, r3, r4}
   13aa0:	add	r4, sp, #4
   13aa4:	movw	r1, #50673	; 0xc5f1
   13aa8:	movt	r1, #1
   13aac:	mov	r0, r4
   13ab0:	bl	17fe8 <init_lexer@@Base>
   13ab4:	mov	r0, r4
   13ab8:	bl	18218 <next@@Base>
   13abc:	ldr	r1, [r0]
   13ac0:	mov	r0, #148	; 0x94
   13ac4:	str	r0, [sp]
   13ac8:	mov	r0, #12
   13acc:	mov	r2, #0
   13ad0:	mov	r3, #552	; 0x228
   13ad4:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13ad8:	mov	r0, r4
   13adc:	bl	18028 <destroy_lexer@@Base>
   13ae0:	sub	sp, fp, #8
   13ae4:	pop	{r4, sl, fp, pc}

00013ae8 <read_token_greaterequalthan@@Base>:
   13ae8:	push	{r4, sl, fp, lr}
   13aec:	add	fp, sp, #8
   13af0:	sub	sp, sp, #16
   13af4:	movw	r0, #57944	; 0xe258
   13af8:	movt	r0, #2
   13afc:	ldm	r0, {r1, r2, r3, r4}
   13b00:	adds	r1, r1, #1
   13b04:	adc	r2, r2, #0
   13b08:	adds	r3, r3, #1
   13b0c:	adc	r4, r4, #0
   13b10:	stm	r0, {r1, r2, r3, r4}
   13b14:	add	r4, sp, #4
   13b18:	movw	r1, #50676	; 0xc5f4
   13b1c:	movt	r1, #1
   13b20:	mov	r0, r4
   13b24:	bl	17fe8 <init_lexer@@Base>
   13b28:	mov	r0, r4
   13b2c:	bl	18218 <next@@Base>
   13b30:	ldr	r1, [r0]
   13b34:	mov	r0, #148	; 0x94
   13b38:	str	r0, [sp]
   13b3c:	mov	r0, #12
   13b40:	mov	r2, #0
   13b44:	movw	r3, #569	; 0x239
   13b48:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13b4c:	mov	r0, r4
   13b50:	bl	18028 <destroy_lexer@@Base>
   13b54:	sub	sp, fp, #8
   13b58:	pop	{r4, sl, fp, pc}

00013b5c <read_token_lessthan@@Base>:
   13b5c:	push	{r4, sl, fp, lr}
   13b60:	add	fp, sp, #8
   13b64:	sub	sp, sp, #16
   13b68:	movw	r0, #57960	; 0xe268
   13b6c:	movt	r0, #2
   13b70:	ldm	r0, {r1, r2, r3, r4}
   13b74:	adds	r1, r1, #1
   13b78:	adc	r2, r2, #0
   13b7c:	adds	r3, r3, #1
   13b80:	adc	r4, r4, #0
   13b84:	stm	r0, {r1, r2, r3, r4}
   13b88:	add	r4, sp, #4
   13b8c:	movw	r1, #50679	; 0xc5f7
   13b90:	movt	r1, #1
   13b94:	mov	r0, r4
   13b98:	bl	17fe8 <init_lexer@@Base>
   13b9c:	mov	r0, r4
   13ba0:	bl	18218 <next@@Base>
   13ba4:	ldr	r1, [r0]
   13ba8:	mov	r0, #148	; 0x94
   13bac:	str	r0, [sp]
   13bb0:	mov	r0, #12
   13bb4:	mov	r2, #0
   13bb8:	movw	r3, #586	; 0x24a
   13bbc:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13bc0:	mov	r0, r4
   13bc4:	bl	18028 <destroy_lexer@@Base>
   13bc8:	sub	sp, fp, #8
   13bcc:	pop	{r4, sl, fp, pc}

00013bd0 <read_token_greaterthan@@Base>:
   13bd0:	push	{r4, sl, fp, lr}
   13bd4:	add	fp, sp, #8
   13bd8:	sub	sp, sp, #16
   13bdc:	movw	r0, #57976	; 0xe278
   13be0:	movt	r0, #2
   13be4:	ldm	r0, {r1, r2, r3, r4}
   13be8:	adds	r1, r1, #1
   13bec:	adc	r2, r2, #0
   13bf0:	adds	r3, r3, #1
   13bf4:	adc	r4, r4, #0
   13bf8:	stm	r0, {r1, r2, r3, r4}
   13bfc:	add	r4, sp, #4
   13c00:	movw	r1, #50681	; 0xc5f9
   13c04:	movt	r1, #1
   13c08:	mov	r0, r4
   13c0c:	bl	17fe8 <init_lexer@@Base>
   13c10:	mov	r0, r4
   13c14:	bl	18218 <next@@Base>
   13c18:	ldr	r1, [r0]
   13c1c:	mov	r0, #148	; 0x94
   13c20:	str	r0, [sp]
   13c24:	mov	r0, #12
   13c28:	mov	r2, #0
   13c2c:	movw	r3, #603	; 0x25b
   13c30:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13c34:	mov	r0, r4
   13c38:	bl	18028 <destroy_lexer@@Base>
   13c3c:	sub	sp, fp, #8
   13c40:	pop	{r4, sl, fp, pc}

00013c44 <read_token_not@@Base>:
   13c44:	push	{r4, sl, fp, lr}
   13c48:	add	fp, sp, #8
   13c4c:	sub	sp, sp, #16
   13c50:	movw	r0, #57992	; 0xe288
   13c54:	movt	r0, #2
   13c58:	ldm	r0, {r1, r2, r3, r4}
   13c5c:	adds	r1, r1, #1
   13c60:	adc	r2, r2, #0
   13c64:	adds	r3, r3, #1
   13c68:	adc	r4, r4, #0
   13c6c:	stm	r0, {r1, r2, r3, r4}
   13c70:	add	r4, sp, #4
   13c74:	movw	r1, #50683	; 0xc5fb
   13c78:	movt	r1, #1
   13c7c:	mov	r0, r4
   13c80:	bl	17fe8 <init_lexer@@Base>
   13c84:	mov	r0, r4
   13c88:	bl	18218 <next@@Base>
   13c8c:	ldr	r1, [r0]
   13c90:	mov	r0, #148	; 0x94
   13c94:	str	r0, [sp]
   13c98:	mov	r0, #12
   13c9c:	mov	r2, #0
   13ca0:	mov	r3, #620	; 0x26c
   13ca4:	bl	14f50 <UnityAssertEqualNumber@@Base>
   13ca8:	mov	r0, r4
   13cac:	bl	18028 <destroy_lexer@@Base>
   13cb0:	sub	sp, fp, #8
   13cb4:	pop	{r4, sl, fp, pc}

00013cb8 <main@@Base>:
   13cb8:	push	{fp, lr}
   13cbc:	mov	fp, sp
   13cc0:	movw	r0, #58008	; 0xe298
   13cc4:	movt	r0, #2
   13cc8:	ldm	r0, {r1, r2, r3, ip}
   13ccc:	adds	r1, r1, #1
   13cd0:	adc	r2, r2, #0
   13cd4:	adds	r3, r3, #1
   13cd8:	adc	ip, ip, #0
   13cdc:	stm	r0, {r1, r2, r3, ip}
   13ce0:	movw	r0, #50685	; 0xc5fd
   13ce4:	movt	r0, #1
   13ce8:	bl	17214 <UnityBegin@@Base>
   13cec:	movw	r0, #10504	; 0x2908
   13cf0:	movt	r0, #1
   13cf4:	movw	r1, #50751	; 0xc63f
   13cf8:	movt	r1, #1
   13cfc:	movw	r2, #629	; 0x275
   13d00:	bl	17124 <UnityDefaultTestRun@@Base>
   13d04:	movw	r0, #10908	; 0x2a9c
   13d08:	movt	r0, #1
   13d0c:	movw	r1, #50773	; 0xc655
   13d10:	movt	r1, #1
   13d14:	movw	r2, #630	; 0x276
   13d18:	bl	17124 <UnityDefaultTestRun@@Base>
   13d1c:	movw	r0, #11052	; 0x2b2c
   13d20:	movt	r0, #1
   13d24:	movw	r1, #50793	; 0xc669
   13d28:	movt	r1, #1
   13d2c:	movw	r2, #631	; 0x277
   13d30:	bl	17124 <UnityDefaultTestRun@@Base>
   13d34:	movw	r0, #11256	; 0x2bf8
   13d38:	movt	r0, #1
   13d3c:	movw	r1, #50818	; 0xc682
   13d40:	movt	r1, #1
   13d44:	mov	r2, #632	; 0x278
   13d48:	bl	17124 <UnityDefaultTestRun@@Base>
   13d4c:	movw	r0, #11404	; 0x2c8c
   13d50:	movt	r0, #1
   13d54:	movw	r1, #50843	; 0xc69b
   13d58:	movt	r1, #1
   13d5c:	movw	r2, #633	; 0x279
   13d60:	bl	17124 <UnityDefaultTestRun@@Base>
   13d64:	movw	r0, #12160	; 0x2f80
   13d68:	movt	r0, #1
   13d6c:	movw	r1, #50859	; 0xc6ab
   13d70:	movt	r1, #1
   13d74:	movw	r2, #634	; 0x27a
   13d78:	bl	17124 <UnityDefaultTestRun@@Base>
   13d7c:	movw	r0, #13108	; 0x3334
   13d80:	movt	r0, #1
   13d84:	movw	r1, #50872	; 0xc6b8
   13d88:	movt	r1, #1
   13d8c:	movw	r2, #635	; 0x27b
   13d90:	bl	17124 <UnityDefaultTestRun@@Base>
   13d94:	movw	r0, #13224	; 0x33a8
   13d98:	movt	r0, #1
   13d9c:	movw	r1, #50892	; 0xc6cc
   13da0:	movt	r1, #1
   13da4:	mov	r2, #636	; 0x27c
   13da8:	bl	17124 <UnityDefaultTestRun@@Base>
   13dac:	movw	r0, #13340	; 0x341c
   13db0:	movt	r0, #1
   13db4:	movw	r1, #50913	; 0xc6e1
   13db8:	movt	r1, #1
   13dbc:	movw	r2, #637	; 0x27d
   13dc0:	bl	17124 <UnityDefaultTestRun@@Base>
   13dc4:	movw	r0, #13456	; 0x3490
   13dc8:	movt	r0, #1
   13dcc:	movw	r1, #50933	; 0xc6f5
   13dd0:	movt	r1, #1
   13dd4:	movw	r2, #638	; 0x27e
   13dd8:	bl	17124 <UnityDefaultTestRun@@Base>
   13ddc:	movw	r0, #13572	; 0x3504
   13de0:	movt	r0, #1
   13de4:	movw	r1, #50949	; 0xc705
   13de8:	movt	r1, #1
   13dec:	movw	r2, #639	; 0x27f
   13df0:	bl	17124 <UnityDefaultTestRun@@Base>
   13df4:	movw	r0, #13688	; 0x3578
   13df8:	movt	r0, #1
   13dfc:	movw	r1, #50965	; 0xc715
   13e00:	movt	r1, #1
   13e04:	mov	r2, #640	; 0x280
   13e08:	bl	17124 <UnityDefaultTestRun@@Base>
   13e0c:	movw	r0, #13804	; 0x35ec
   13e10:	movt	r0, #1
   13e14:	movw	r1, #50981	; 0xc725
   13e18:	movt	r1, #1
   13e1c:	movw	r2, #641	; 0x281
   13e20:	bl	17124 <UnityDefaultTestRun@@Base>
   13e24:	movw	r0, #13920	; 0x3660
   13e28:	movt	r0, #1
   13e2c:	movw	r1, #50997	; 0xc735
   13e30:	movt	r1, #1
   13e34:	movw	r2, #642	; 0x282
   13e38:	bl	17124 <UnityDefaultTestRun@@Base>
   13e3c:	movw	r0, #14036	; 0x36d4
   13e40:	movt	r0, #1
   13e44:	movw	r1, #51015	; 0xc747
   13e48:	movt	r1, #1
   13e4c:	movw	r2, #643	; 0x283
   13e50:	bl	17124 <UnityDefaultTestRun@@Base>
   13e54:	movw	r0, #14152	; 0x3748
   13e58:	movt	r0, #1
   13e5c:	movw	r1, #51036	; 0xc75c
   13e60:	movt	r1, #1
   13e64:	mov	r2, #644	; 0x284
   13e68:	bl	17124 <UnityDefaultTestRun@@Base>
   13e6c:	movw	r0, #14268	; 0x37bc
   13e70:	movt	r0, #1
   13e74:	movw	r1, #51051	; 0xc76b
   13e78:	movt	r1, #1
   13e7c:	movw	r2, #645	; 0x285
   13e80:	bl	17124 <UnityDefaultTestRun@@Base>
   13e84:	movw	r0, #14384	; 0x3830
   13e88:	movt	r0, #1
   13e8c:	movw	r1, #51065	; 0xc779
   13e90:	movt	r1, #1
   13e94:	movw	r2, #646	; 0x286
   13e98:	bl	17124 <UnityDefaultTestRun@@Base>
   13e9c:	movw	r0, #14500	; 0x38a4
   13ea0:	movt	r0, #1
   13ea4:	movw	r1, #51081	; 0xc789
   13ea8:	movt	r1, #1
   13eac:	movw	r2, #647	; 0x287
   13eb0:	bl	17124 <UnityDefaultTestRun@@Base>
   13eb4:	movw	r0, #14616	; 0x3918
   13eb8:	movt	r0, #1
   13ebc:	movw	r1, #51103	; 0xc79f
   13ec0:	movt	r1, #1
   13ec4:	mov	r2, #648	; 0x288
   13ec8:	bl	17124 <UnityDefaultTestRun@@Base>
   13ecc:	movw	r0, #14732	; 0x398c
   13ed0:	movt	r0, #1
   13ed4:	movw	r1, #51123	; 0xc7b3
   13ed8:	movt	r1, #1
   13edc:	movw	r2, #649	; 0x289
   13ee0:	bl	17124 <UnityDefaultTestRun@@Base>
   13ee4:	movw	r0, #15080	; 0x3ae8
   13ee8:	movt	r0, #1
   13eec:	movw	r1, #51148	; 0xc7cc
   13ef0:	movt	r1, #1
   13ef4:	movw	r2, #650	; 0x28a
   13ef8:	bl	17124 <UnityDefaultTestRun@@Base>
   13efc:	movw	r0, #14848	; 0x3a00
   13f00:	movt	r0, #1
   13f04:	movw	r1, #51176	; 0xc7e8
   13f08:	movt	r1, #1
   13f0c:	movw	r2, #651	; 0x28b
   13f10:	bl	17124 <UnityDefaultTestRun@@Base>
   13f14:	movw	r0, #14964	; 0x3a74
   13f18:	movt	r0, #1
   13f1c:	movw	r1, #51192	; 0xc7f8
   13f20:	movt	r1, #1
   13f24:	mov	r2, #652	; 0x28c
   13f28:	bl	17124 <UnityDefaultTestRun@@Base>
   13f2c:	movw	r0, #15196	; 0x3b5c
   13f30:	movt	r0, #1
   13f34:	movw	r1, #51210	; 0xc80a
   13f38:	movt	r1, #1
   13f3c:	movw	r2, #653	; 0x28d
   13f40:	bl	17124 <UnityDefaultTestRun@@Base>
   13f44:	movw	r0, #15312	; 0x3bd0
   13f48:	movt	r0, #1
   13f4c:	movw	r1, #51230	; 0xc81e
   13f50:	movt	r1, #1
   13f54:	movw	r2, #654	; 0x28e
   13f58:	bl	17124 <UnityDefaultTestRun@@Base>
   13f5c:	movw	r0, #15428	; 0x3c44
   13f60:	movt	r0, #1
   13f64:	movw	r1, #51253	; 0xc835
   13f68:	movt	r1, #1
   13f6c:	movw	r2, #655	; 0x28f
   13f70:	bl	17124 <UnityDefaultTestRun@@Base>
   13f74:	pop	{fp, lr}
   13f78:	b	17260 <UnityEnd@@Base>
   13f7c:	push	{r4, r5, r6, lr}
   13f80:	sub	sp, sp, #8
   13f84:	movw	r0, #51268	; 0xc844
   13f88:	movt	r0, #1
   13f8c:	movw	r1, #51366	; 0xc8a6
   13f90:	movt	r1, #1
   13f94:	movw	r2, #13578	; 0x350a
   13f98:	movt	r2, #46656	; 0xb640
   13f9c:	bl	194f4 <next@@Base+0x12dc>
   13fa0:	movw	r0, #51936	; 0xcae0
   13fa4:	movt	r0, #1
   13fa8:	add	r4, r0, #4
   13fac:	mov	r5, #0
   13fb0:	movw	r6, #51376	; 0xc8b0
   13fb4:	movt	r6, #1
   13fb8:	mov	r3, r6
   13fbc:	ldr	r0, [r3, r5]!
   13fc0:	ldr	r1, [r3, #16]
   13fc4:	str	r1, [sp]
   13fc8:	ldmib	r3, {r1, r2}
   13fcc:	ldrb	r3, [r3, #12]
   13fd0:	bl	19c14 <next@@Base+0x19fc>
   13fd4:	ldrd	r0, [r4, #-4]
   13fd8:	bl	1a4c8 <next@@Base+0x22b0>
   13fdc:	add	r5, r5, #20
   13fe0:	add	r4, r4, #8
   13fe4:	cmp	r5, #560	; 0x230
   13fe8:	bne	13fb8 <main@@Base+0x300>
   13fec:	bl	1ac50 <next@@Base+0x2a38>
   13ff0:	add	sp, sp, #8
   13ff4:	pop	{r4, r5, r6, lr}
   13ff8:	b	1b9bc <next@@Base+0x37a4>
   13ffc:	push	{fp, lr}
   14000:	bl	13f7c <main@@Base+0x2c4>
   14004:	vmov.i32	q8, #0	; 0x00000000
   14008:	movw	r0, #57592	; 0xe0f8
   1400c:	movt	r0, #2
   14010:	vst1.64	{d16-d17}, [r0]
   14014:	movw	r0, #57576	; 0xe0e8
   14018:	movt	r0, #2
   1401c:	vst1.64	{d16-d17}, [r0]
   14020:	movw	r0, #57608	; 0xe108
   14024:	movt	r0, #2
   14028:	vst1.64	{d16-d17}, [r0]
   1402c:	movw	r0, #57624	; 0xe118
   14030:	movt	r0, #2
   14034:	vst1.64	{d16-d17}, [r0]
   14038:	movw	r0, #57640	; 0xe128
   1403c:	movt	r0, #2
   14040:	vst1.64	{d16-d17}, [r0]
   14044:	movw	r0, #57656	; 0xe138
   14048:	movt	r0, #2
   1404c:	vst1.64	{d16-d17}, [r0]
   14050:	movw	r0, #57672	; 0xe148
   14054:	movt	r0, #2
   14058:	vst1.64	{d16-d17}, [r0]
   1405c:	movw	r0, #57688	; 0xe158
   14060:	movt	r0, #2
   14064:	vst1.64	{d16-d17}, [r0]
   14068:	movw	r0, #57704	; 0xe168
   1406c:	movt	r0, #2
   14070:	vst1.64	{d16-d17}, [r0]
   14074:	movw	r0, #57720	; 0xe178
   14078:	movt	r0, #2
   1407c:	vst1.64	{d16-d17}, [r0]
   14080:	movw	r0, #57736	; 0xe188
   14084:	movt	r0, #2
   14088:	vst1.64	{d16-d17}, [r0]
   1408c:	movw	r0, #57752	; 0xe198
   14090:	movt	r0, #2
   14094:	vst1.64	{d16-d17}, [r0]
   14098:	movw	r0, #57768	; 0xe1a8
   1409c:	movt	r0, #2
   140a0:	vst1.64	{d16-d17}, [r0]
   140a4:	movw	r0, #57784	; 0xe1b8
   140a8:	movt	r0, #2
   140ac:	vst1.64	{d16-d17}, [r0]
   140b0:	movw	r0, #57800	; 0xe1c8
   140b4:	movt	r0, #2
   140b8:	vst1.64	{d16-d17}, [r0]
   140bc:	movw	r0, #57816	; 0xe1d8
   140c0:	movt	r0, #2
   140c4:	vst1.64	{d16-d17}, [r0]
   140c8:	movw	r0, #57832	; 0xe1e8
   140cc:	movt	r0, #2
   140d0:	vst1.64	{d16-d17}, [r0]
   140d4:	movw	r0, #57848	; 0xe1f8
   140d8:	movt	r0, #2
   140dc:	vst1.64	{d16-d17}, [r0]
   140e0:	movw	r0, #57864	; 0xe208
   140e4:	movt	r0, #2
   140e8:	vst1.64	{d16-d17}, [r0]
   140ec:	movw	r0, #57880	; 0xe218
   140f0:	movt	r0, #2
   140f4:	vst1.64	{d16-d17}, [r0]
   140f8:	movw	r0, #57896	; 0xe228
   140fc:	movt	r0, #2
   14100:	vst1.64	{d16-d17}, [r0]
   14104:	movw	r0, #57912	; 0xe238
   14108:	movt	r0, #2
   1410c:	vst1.64	{d16-d17}, [r0]
   14110:	movw	r0, #57928	; 0xe248
   14114:	movt	r0, #2
   14118:	vst1.64	{d16-d17}, [r0]
   1411c:	movw	r0, #57944	; 0xe258
   14120:	movt	r0, #2
   14124:	vst1.64	{d16-d17}, [r0]
   14128:	movw	r0, #57960	; 0xe268
   1412c:	movt	r0, #2
   14130:	vst1.64	{d16-d17}, [r0]
   14134:	movw	r0, #57976	; 0xe278
   14138:	movt	r0, #2
   1413c:	vst1.64	{d16-d17}, [r0]
   14140:	movw	r0, #57992	; 0xe288
   14144:	movt	r0, #2
   14148:	vst1.64	{d16-d17}, [r0]
   1414c:	movw	r0, #58008	; 0xe298
   14150:	movt	r0, #2
   14154:	vst1.64	{d16-d17}, [r0]
   14158:	pop	{fp, pc}
   1415c:	movw	r0, #16252	; 0x3f7c
   14160:	movt	r0, #1
   14164:	movw	r1, #16380	; 0x3ffc
   14168:	movt	r1, #1
   1416c:	b	1be70 <__gcov_flush@@Base+0xb8>

00014170 <UnityPrint@@Base>:
   14170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14174:	add	fp, sp, #28
   14178:	sub	sp, sp, #4
   1417c:	movw	r4, #58032	; 0xe2b0
   14180:	movt	r4, #2
   14184:	ldrd	r2, [r4]
   14188:	adds	r2, r2, #1
   1418c:	adc	r3, r3, #0
   14190:	strd	r2, [r4]
   14194:	cmp	r0, #0
   14198:	beq	14300 <UnityPrint@@Base+0x190>
   1419c:	ldrd	r2, [r4, #8]
   141a0:	adds	r2, r2, #1
   141a4:	adc	r3, r3, #0
   141a8:	strd	r2, [r4, #8]
   141ac:	add	r8, r4, #32
   141b0:	ldrb	r1, [r0]
   141b4:	cmp	r1, #0
   141b8:	beq	14304 <UnityPrint@@Base+0x194>
   141bc:	add	r6, r0, #1
   141c0:	add	r7, r4, #48	; 0x30
   141c4:	add	sl, r4, #64	; 0x40
   141c8:	add	r9, r4, #72	; 0x48
   141cc:	b	14220 <UnityPrint@@Base+0xb0>
   141d0:	ldrd	r0, [r4, #80]	; 0x50
   141d4:	adds	r0, r0, #1
   141d8:	adc	r1, r1, #0
   141dc:	strd	r0, [r4, #80]	; 0x50
   141e0:	mov	r0, #92	; 0x5c
   141e4:	bl	12788 <putchar@plt>
   141e8:	mov	r0, #114	; 0x72
   141ec:	bl	12788 <putchar@plt>
   141f0:	add	r0, r4, #96	; 0x60
   141f4:	ldrd	r2, [r0]
   141f8:	adds	r2, r2, #1
   141fc:	adc	r3, r3, #0
   14200:	strd	r2, [r0]
   14204:	ldrd	r0, [r4, #136]	; 0x88
   14208:	adds	r0, r0, #1
   1420c:	adc	r1, r1, #0
   14210:	strd	r0, [r4, #136]	; 0x88
   14214:	ldrb	r1, [r6], #1
   14218:	cmp	r1, #0
   1421c:	beq	14304 <UnityPrint@@Base+0x194>
   14220:	ldr	r0, [r4, #24]
   14224:	ldr	r3, [r4, #28]
   14228:	adds	r0, r0, #1
   1422c:	adc	r3, r3, #0
   14230:	str	r0, [r4, #24]
   14234:	str	r3, [r4, #28]
   14238:	uxtb	r0, r1
   1423c:	cmp	r0, #126	; 0x7e
   14240:	mov	r1, r7
   14244:	bhi	14280 <UnityPrint@@Base+0x110>
   14248:	ldrd	r2, [r4, #40]	; 0x28
   1424c:	adds	r2, r2, #1
   14250:	adc	r3, r3, #0
   14254:	strd	r2, [r4, #40]	; 0x28
   14258:	cmp	r0, #32
   1425c:	mov	r1, sl
   14260:	bcc	14280 <UnityPrint@@Base+0x110>
   14264:	ldrd	r2, [r4, #56]	; 0x38
   14268:	adds	r2, r2, #1
   1426c:	adc	r3, r3, #0
   14270:	strd	r2, [r4, #56]	; 0x38
   14274:	bl	12788 <putchar@plt>
   14278:	mov	r0, r9
   1427c:	b	141f4 <UnityPrint@@Base+0x84>
   14280:	ldm	r1, {r0, r3}
   14284:	adds	r0, r0, #1
   14288:	adc	r3, r3, #0
   1428c:	stm	r1, {r0, r3}
   14290:	ldrb	r5, [r6, #-1]
   14294:	cmp	r5, #13
   14298:	beq	141d0 <UnityPrint@@Base+0x60>
   1429c:	ldrd	r0, [r4, #88]	; 0x58
   142a0:	adds	r0, r0, #1
   142a4:	adc	r1, r1, #0
   142a8:	strd	r0, [r4, #88]	; 0x58
   142ac:	mov	r0, #92	; 0x5c
   142b0:	bl	12788 <putchar@plt>
   142b4:	cmp	r5, #10
   142b8:	bne	142dc <UnityPrint@@Base+0x16c>
   142bc:	ldrd	r0, [r4, #104]	; 0x68
   142c0:	adds	r0, r0, #1
   142c4:	adc	r1, r1, #0
   142c8:	strd	r0, [r4, #104]	; 0x68
   142cc:	mov	r0, #110	; 0x6e
   142d0:	bl	12788 <putchar@plt>
   142d4:	add	r0, r4, #120	; 0x78
   142d8:	b	141f4 <UnityPrint@@Base+0x84>
   142dc:	ldrd	r0, [r4, #112]	; 0x70
   142e0:	adds	r0, r0, #1
   142e4:	adc	r1, r1, #0
   142e8:	strd	r0, [r4, #112]	; 0x70
   142ec:	ldrb	r0, [r6, #-1]
   142f0:	mov	r1, #2
   142f4:	bl	1432c <UnityPrintNumberHex@@Base>
   142f8:	add	r0, r4, #128	; 0x80
   142fc:	b	141f4 <UnityPrint@@Base+0x84>
   14300:	add	r8, r4, #16
   14304:	ldrd	r0, [r8]
   14308:	adds	r0, r0, #1
   1430c:	adc	r1, r1, #0
   14310:	strd	r0, [r8]
   14314:	ldrd	r0, [r4, #144]	; 0x90
   14318:	adds	r0, r0, #1
   1431c:	adc	r1, r1, #0
   14320:	strd	r0, [r4, #144]	; 0x90
   14324:	sub	sp, fp, #28
   14328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001432c <UnityPrintNumberHex@@Base>:
   1432c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14330:	add	fp, sp, #28
   14334:	sub	sp, sp, #4
   14338:	mov	r4, r1
   1433c:	mov	r5, r0
   14340:	movw	r6, #58208	; 0xe360
   14344:	movt	r6, #2
   14348:	ldrd	r0, [r6]
   1434c:	adds	r0, r0, #1
   14350:	adc	r1, r1, #0
   14354:	strd	r0, [r6]
   14358:	mov	r0, #48	; 0x30
   1435c:	bl	12788 <putchar@plt>
   14360:	mov	r0, #120	; 0x78
   14364:	bl	12788 <putchar@plt>
   14368:	ldrd	r0, [r6, #8]
   1436c:	adds	r0, r0, #1
   14370:	adc	r1, r1, #0
   14374:	strd	r0, [r6, #8]
   14378:	cmp	r4, #0
   1437c:	beq	14418 <UnityPrintNumberHex@@Base+0xec>
   14380:	mov	r8, #15
   14384:	add	r9, r6, #48	; 0x30
   14388:	add	sl, r6, #56	; 0x38
   1438c:	b	143d4 <UnityPrintNumberHex@@Base+0xa8>
   14390:	ldrd	r2, [r6, #40]	; 0x28
   14394:	adds	r2, r2, #1
   14398:	adc	r3, r3, #0
   1439c:	strd	r2, [r6, #40]	; 0x28
   143a0:	add	r0, r0, #55	; 0x37
   143a4:	mov	r7, sl
   143a8:	bl	12788 <putchar@plt>
   143ac:	ldrd	r0, [r7]
   143b0:	adds	r0, r0, #1
   143b4:	adc	r1, r1, #0
   143b8:	strd	r0, [r7]
   143bc:	ldrd	r0, [r6, #64]	; 0x40
   143c0:	adds	r0, r0, #1
   143c4:	adc	r1, r1, #0
   143c8:	strd	r0, [r6, #64]	; 0x40
   143cc:	tst	r4, #255	; 0xff
   143d0:	beq	14418 <UnityPrintNumberHex@@Base+0xec>
   143d4:	ldrd	r0, [r6, #16]
   143d8:	adds	r0, r0, #1
   143dc:	adc	r1, r1, #0
   143e0:	strd	r0, [r6, #16]
   143e4:	sub	r4, r4, #1
   143e8:	uxtb	r0, r4
   143ec:	lsl	r0, r0, #2
   143f0:	and	r0, r8, r5, lsr r0
   143f4:	cmp	r0, #9
   143f8:	bhi	14390 <UnityPrintNumberHex@@Base+0x64>
   143fc:	ldrd	r2, [r6, #32]
   14400:	adds	r2, r2, #1
   14404:	adc	r3, r3, #0
   14408:	strd	r2, [r6, #32]
   1440c:	orr	r0, r0, #48	; 0x30
   14410:	mov	r7, r9
   14414:	b	143a8 <UnityPrintNumberHex@@Base+0x7c>
   14418:	ldrd	r0, [r6, #24]
   1441c:	ldrd	r2, [r6, #72]	; 0x48
   14420:	adds	r0, r0, #1
   14424:	adc	r1, r1, #0
   14428:	adds	r2, r2, #1
   1442c:	str	r2, [r6, #72]	; 0x48
   14430:	strd	r0, [r6, #24]
   14434:	adc	r0, r3, #0
   14438:	str	r0, [r6, #76]	; 0x4c
   1443c:	sub	sp, fp, #28
   14440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014444 <UnityPrintLen@@Base>:
   14444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14448:	add	fp, sp, #28
   1444c:	sub	sp, sp, #20
   14450:	mov	r4, r1
   14454:	mov	r9, r0
   14458:	movw	r6, #58288	; 0xe3b0
   1445c:	movt	r6, #2
   14460:	ldrd	r0, [r6]
   14464:	adds	r0, r0, #1
   14468:	adc	r1, r1, #0
   1446c:	strd	r0, [r6]
   14470:	cmp	r9, #0
   14474:	beq	14608 <UnityPrintLen@@Base+0x1c4>
   14478:	ldrd	r0, [r6, #8]
   1447c:	adds	r0, r0, #1
   14480:	adc	r1, r1, #0
   14484:	strd	r0, [r6, #8]
   14488:	add	r2, r6, #32
   1448c:	ldrb	r0, [r9]
   14490:	cmp	r0, #0
   14494:	beq	1461c <UnityPrintLen@@Base+0x1d8>
   14498:	str	r2, [sp, #8]
   1449c:	add	r1, r6, #48	; 0x30
   144a0:	str	r1, [sp, #4]
   144a4:	add	r7, r6, #64	; 0x40
   144a8:	add	sl, r6, #80	; 0x50
   144ac:	add	r1, r6, #88	; 0x58
   144b0:	str	r1, [sp, #12]
   144b4:	add	r1, r6, #112	; 0x70
   144b8:	str	r1, [sp, #16]
   144bc:	mov	r5, r9
   144c0:	b	14514 <UnityPrintLen@@Base+0xd0>
   144c4:	ldrd	r0, [r6, #96]	; 0x60
   144c8:	adds	r0, r0, #1
   144cc:	adc	r1, r1, #0
   144d0:	strd	r0, [r6, #96]	; 0x60
   144d4:	mov	r0, #92	; 0x5c
   144d8:	bl	12788 <putchar@plt>
   144dc:	mov	r0, #114	; 0x72
   144e0:	bl	12788 <putchar@plt>
   144e4:	ldr	r0, [sp, #16]
   144e8:	ldrd	r2, [r0]
   144ec:	adds	r2, r2, #1
   144f0:	adc	r3, r3, #0
   144f4:	strd	r2, [r0]
   144f8:	ldrd	r0, [r6, #152]	; 0x98
   144fc:	adds	r0, r0, #1
   14500:	adc	r1, r1, #0
   14504:	strd	r0, [r6, #152]	; 0x98
   14508:	ldrb	r0, [r5, #1]!
   1450c:	cmp	r0, #0
   14510:	beq	14610 <UnityPrintLen@@Base+0x1cc>
   14514:	ldrd	r2, [r6, #24]
   14518:	adds	r2, r2, #1
   1451c:	adc	r3, r3, #0
   14520:	strd	r2, [r6, #24]
   14524:	sub	r1, r5, r9
   14528:	cmp	r1, r4
   1452c:	bcs	14618 <UnityPrintLen@@Base+0x1d4>
   14530:	uxtb	r0, r0
   14534:	ldrd	r2, [r6, #40]	; 0x28
   14538:	adds	r2, r2, #1
   1453c:	adc	r3, r3, #0
   14540:	strd	r2, [r6, #40]	; 0x28
   14544:	cmp	r0, #126	; 0x7e
   14548:	mov	r1, r7
   1454c:	bhi	14588 <UnityPrintLen@@Base+0x144>
   14550:	ldrd	r2, [r6, #56]	; 0x38
   14554:	adds	r2, r2, #1
   14558:	adc	r3, r3, #0
   1455c:	strd	r2, [r6, #56]	; 0x38
   14560:	cmp	r0, #32
   14564:	mov	r1, sl
   14568:	bcc	14588 <UnityPrintLen@@Base+0x144>
   1456c:	ldrd	r2, [r6, #72]	; 0x48
   14570:	adds	r2, r2, #1
   14574:	adc	r3, r3, #0
   14578:	strd	r2, [r6, #72]	; 0x48
   1457c:	bl	12788 <putchar@plt>
   14580:	ldr	r0, [sp, #12]
   14584:	b	144e8 <UnityPrintLen@@Base+0xa4>
   14588:	ldm	r1, {r0, r3}
   1458c:	adds	r0, r0, #1
   14590:	adc	r3, r3, #0
   14594:	stm	r1, {r0, r3}
   14598:	ldrb	r8, [r5]
   1459c:	cmp	r8, #13
   145a0:	beq	144c4 <UnityPrintLen@@Base+0x80>
   145a4:	ldrd	r0, [r6, #104]	; 0x68
   145a8:	adds	r0, r0, #1
   145ac:	adc	r1, r1, #0
   145b0:	strd	r0, [r6, #104]	; 0x68
   145b4:	mov	r0, #92	; 0x5c
   145b8:	bl	12788 <putchar@plt>
   145bc:	cmp	r8, #10
   145c0:	bne	145e4 <UnityPrintLen@@Base+0x1a0>
   145c4:	ldrd	r0, [r6, #120]	; 0x78
   145c8:	adds	r0, r0, #1
   145cc:	adc	r1, r1, #0
   145d0:	strd	r0, [r6, #120]	; 0x78
   145d4:	mov	r0, #110	; 0x6e
   145d8:	bl	12788 <putchar@plt>
   145dc:	add	r0, r6, #136	; 0x88
   145e0:	b	144e8 <UnityPrintLen@@Base+0xa4>
   145e4:	ldrd	r0, [r6, #128]	; 0x80
   145e8:	adds	r0, r0, #1
   145ec:	adc	r1, r1, #0
   145f0:	strd	r0, [r6, #128]	; 0x80
   145f4:	ldrb	r0, [r5]
   145f8:	mov	r1, #2
   145fc:	bl	1432c <UnityPrintNumberHex@@Base>
   14600:	add	r0, r6, #144	; 0x90
   14604:	b	144e8 <UnityPrintLen@@Base+0xa4>
   14608:	add	r2, r6, #16
   1460c:	b	1461c <UnityPrintLen@@Base+0x1d8>
   14610:	ldr	r2, [sp, #8]
   14614:	b	1461c <UnityPrintLen@@Base+0x1d8>
   14618:	ldr	r2, [sp, #4]
   1461c:	ldrd	r0, [r2]
   14620:	adds	r0, r0, #1
   14624:	adc	r1, r1, #0
   14628:	strd	r0, [r2]
   1462c:	ldrd	r0, [r6, #160]	; 0xa0
   14630:	adds	r0, r0, #1
   14634:	adc	r1, r1, #0
   14638:	strd	r0, [r6, #160]	; 0xa0
   1463c:	sub	sp, fp, #28
   14640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014644 <UnityPrintNumberByStyle@@Base>:
   14644:	push	{r4, r6, r7, sl, fp, lr}
   14648:	add	fp, sp, #16
   1464c:	movw	r4, #58464	; 0xe460
   14650:	movt	r4, #2
   14654:	ldrd	r2, [r4]
   14658:	adds	r2, r2, #1
   1465c:	adc	r3, r3, #0
   14660:	strd	r2, [r4]
   14664:	tst	r1, #16
   14668:	bne	146a8 <UnityPrintNumberByStyle@@Base+0x64>
   1466c:	ldrd	r2, [r4, #16]
   14670:	adds	r2, r2, #1
   14674:	adc	r3, r3, #0
   14678:	strd	r2, [r4, #16]
   1467c:	and	r2, r1, #15
   14680:	tst	r1, #32
   14684:	bne	146c4 <UnityPrintNumberByStyle@@Base+0x80>
   14688:	ldrd	r6, [r4, #40]	; 0x28
   1468c:	adds	r6, r6, #1
   14690:	adc	r7, r7, #0
   14694:	strd	r6, [r4, #40]	; 0x28
   14698:	lsl	r1, r2, #1
   1469c:	bl	1432c <UnityPrintNumberHex@@Base>
   146a0:	add	r0, r4, #56	; 0x38
   146a4:	b	146f0 <UnityPrintNumberByStyle@@Base+0xac>
   146a8:	ldrd	r2, [r4, #8]
   146ac:	adds	r2, r2, #1
   146b0:	adc	r3, r3, #0
   146b4:	strd	r2, [r4, #8]
   146b8:	bl	14714 <UnityPrintNumber@@Base>
   146bc:	add	r0, r4, #24
   146c0:	b	146f0 <UnityPrintNumberByStyle@@Base+0xac>
   146c4:	ldrd	r6, [r4, #32]
   146c8:	adds	r6, r6, #1
   146cc:	adc	r7, r7, #0
   146d0:	strd	r6, [r4, #32]
   146d4:	movw	r1, #52616	; 0xcd88
   146d8:	movt	r1, #1
   146dc:	add	r1, r1, r2, lsl #2
   146e0:	ldr	r1, [r1, #-4]
   146e4:	and	r0, r1, r0
   146e8:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   146ec:	add	r0, r4, #48	; 0x30
   146f0:	ldrd	r2, [r0]
   146f4:	adds	r2, r2, #1
   146f8:	adc	r3, r3, #0
   146fc:	strd	r2, [r0]
   14700:	ldrd	r0, [r4, #64]	; 0x40
   14704:	adds	r0, r0, #1
   14708:	adc	r1, r1, #0
   1470c:	strd	r0, [r4, #64]	; 0x40
   14710:	pop	{r4, r6, r7, sl, fp, pc}

00014714 <UnityPrintNumber@@Base>:
   14714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14718:	add	fp, sp, #24
   1471c:	mov	r9, r0
   14720:	movw	r8, #58544	; 0xe4b0
   14724:	movt	r8, #2
   14728:	ldrd	r0, [r8]
   1472c:	adds	r0, r0, #1
   14730:	adc	r1, r1, #0
   14734:	strd	r0, [r8]
   14738:	cmn	r9, #1
   1473c:	ble	14758 <UnityPrintNumber@@Base+0x44>
   14740:	ldrd	r0, [r8, #16]
   14744:	adds	r0, r0, #1
   14748:	adc	r1, r1, #0
   1474c:	strd	r0, [r8, #16]
   14750:	add	r0, r8, #32
   14754:	b	14778 <UnityPrintNumber@@Base+0x64>
   14758:	ldrd	r0, [r8, #8]
   1475c:	adds	r0, r0, #1
   14760:	adc	r1, r1, #0
   14764:	strd	r0, [r8, #8]
   14768:	mov	r0, #45	; 0x2d
   1476c:	bl	12788 <putchar@plt>
   14770:	add	r0, r8, #24
   14774:	rsb	r9, r9, #0
   14778:	ldrd	r2, [r0]
   1477c:	adds	r2, r2, #1
   14780:	adc	r3, r3, #0
   14784:	strd	r2, [r0]
   14788:	ldrd	r0, [r8, #40]	; 0x28
   1478c:	adds	r0, r0, #1
   14790:	adc	r1, r1, #0
   14794:	strd	r0, [r8, #40]	; 0x28
   14798:	cmp	r9, #10
   1479c:	bcc	1480c <UnityPrintNumber@@Base+0xf8>
   147a0:	ldrd	r2, [r8, #48]	; 0x30
   147a4:	mov	r6, #1
   147a8:	add	r1, r8, #72	; 0x48
   147ac:	add	ip, r8, #56	; 0x38
   147b0:	adds	r2, r2, #1
   147b4:	adc	r3, r3, #0
   147b8:	add	r7, r6, r6, lsl #2
   147bc:	cmp	r6, r7, lsl #1
   147c0:	bcs	14804 <UnityPrintNumber@@Base+0xf0>
   147c4:	lsl	r6, r7, #1
   147c8:	ldr	r0, [r8, #64]	; 0x40
   147cc:	ldr	r7, [r8, #68]	; 0x44
   147d0:	ldrd	r4, [r8, #80]	; 0x50
   147d4:	adds	r0, r0, #1
   147d8:	adc	r7, r7, #0
   147dc:	adds	r4, r4, #1
   147e0:	str	r4, [r8, #80]	; 0x50
   147e4:	str	r0, [r8, #64]	; 0x40
   147e8:	str	r7, [r8, #68]	; 0x44
   147ec:	adc	r0, r5, #0
   147f0:	str	r0, [r8, #84]	; 0x54
   147f4:	udiv	r0, r9, r6
   147f8:	cmp	r0, #9
   147fc:	bhi	147b0 <UnityPrintNumber@@Base+0x9c>
   14800:	mov	r1, ip
   14804:	strd	r2, [r8, #48]	; 0x30
   14808:	b	14814 <UnityPrintNumber@@Base+0x100>
   1480c:	add	r1, r8, #56	; 0x38
   14810:	mov	r6, #1
   14814:	ldm	r1, {r0, r3}
   14818:	adds	r0, r0, #1
   1481c:	adc	r3, r3, #0
   14820:	stm	r1, {r0, r3}
   14824:	add	r0, r8, #88	; 0x58
   14828:	movw	r7, #52429	; 0xcccd
   1482c:	movt	r7, #52428	; 0xcccc
   14830:	add	r5, r8, #96	; 0x60
   14834:	ldrd	r2, [r0]
   14838:	adds	r2, r2, #1
   1483c:	adc	r3, r3, #0
   14840:	strd	r2, [r0]
   14844:	udiv	r0, r9, r6
   14848:	umull	r1, r2, r0, r7
   1484c:	lsr	r1, r2, #3
   14850:	add	r1, r1, r1, lsl #2
   14854:	sub	r0, r0, r1, lsl #1
   14858:	orr	r0, r0, #48	; 0x30
   1485c:	bl	12788 <putchar@plt>
   14860:	umull	r0, r1, r6, r7
   14864:	lsr	r1, r1, #3
   14868:	cmp	r6, #9
   1486c:	mov	r0, r5
   14870:	mov	r6, r1
   14874:	bhi	14834 <UnityPrintNumber@@Base+0x120>
   14878:	add	r3, r8, #104	; 0x68
   1487c:	ldm	r3, {r0, r1, r2, r3}
   14880:	adds	r0, r0, #1
   14884:	adc	r1, r1, #0
   14888:	adds	r2, r2, #1
   1488c:	adc	r3, r3, #0
   14890:	add	ip, r8, #104	; 0x68
   14894:	stm	ip, {r0, r1, r2, r3}
   14898:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001489c <UnityPrintNumberUnsigned@@Base>:
   1489c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148a0:	add	fp, sp, #24
   148a4:	mov	r9, r0
   148a8:	movw	r8, #58672	; 0xe530
   148ac:	movt	r8, #2
   148b0:	ldm	r8, {r0, r1, r2, r3}
   148b4:	adds	r0, r0, #1
   148b8:	adc	r1, r1, #0
   148bc:	adds	r2, r2, #1
   148c0:	adc	r3, r3, #0
   148c4:	stm	r8, {r0, r1, r2, r3}
   148c8:	cmp	r9, #10
   148cc:	bcc	1493c <UnityPrintNumberUnsigned@@Base+0xa0>
   148d0:	ldrd	r2, [r8, #16]
   148d4:	mov	r6, #1
   148d8:	add	r1, r8, #40	; 0x28
   148dc:	add	ip, r8, #24
   148e0:	adds	r2, r2, #1
   148e4:	adc	r3, r3, #0
   148e8:	add	r7, r6, r6, lsl #2
   148ec:	cmp	r6, r7, lsl #1
   148f0:	bcs	14934 <UnityPrintNumberUnsigned@@Base+0x98>
   148f4:	lsl	r6, r7, #1
   148f8:	ldr	r0, [r8, #32]
   148fc:	ldr	r7, [r8, #36]	; 0x24
   14900:	ldrd	r4, [r8, #48]	; 0x30
   14904:	adds	r0, r0, #1
   14908:	adc	r7, r7, #0
   1490c:	adds	r4, r4, #1
   14910:	str	r4, [r8, #48]	; 0x30
   14914:	str	r0, [r8, #32]
   14918:	str	r7, [r8, #36]	; 0x24
   1491c:	adc	r0, r5, #0
   14920:	str	r0, [r8, #52]	; 0x34
   14924:	udiv	r0, r9, r6
   14928:	cmp	r0, #9
   1492c:	bhi	148e0 <UnityPrintNumberUnsigned@@Base+0x44>
   14930:	mov	r1, ip
   14934:	strd	r2, [r8, #16]
   14938:	b	14944 <UnityPrintNumberUnsigned@@Base+0xa8>
   1493c:	add	r1, r8, #24
   14940:	mov	r6, #1
   14944:	ldm	r1, {r0, r3}
   14948:	adds	r0, r0, #1
   1494c:	adc	r3, r3, #0
   14950:	stm	r1, {r0, r3}
   14954:	add	r0, r8, #56	; 0x38
   14958:	movw	r7, #52429	; 0xcccd
   1495c:	movt	r7, #52428	; 0xcccc
   14960:	add	r5, r8, #64	; 0x40
   14964:	ldrd	r2, [r0]
   14968:	adds	r2, r2, #1
   1496c:	adc	r3, r3, #0
   14970:	strd	r2, [r0]
   14974:	udiv	r0, r9, r6
   14978:	umull	r1, r2, r0, r7
   1497c:	lsr	r1, r2, #3
   14980:	add	r1, r1, r1, lsl #2
   14984:	sub	r0, r0, r1, lsl #1
   14988:	orr	r0, r0, #48	; 0x30
   1498c:	bl	12788 <putchar@plt>
   14990:	umull	r0, r1, r6, r7
   14994:	lsr	r1, r1, #3
   14998:	cmp	r6, #9
   1499c:	mov	r0, r5
   149a0:	mov	r6, r1
   149a4:	bhi	14964 <UnityPrintNumberUnsigned@@Base+0xc8>
   149a8:	add	r3, r8, #72	; 0x48
   149ac:	ldm	r3, {r0, r1, r2, r3}
   149b0:	adds	r0, r0, #1
   149b4:	adc	r1, r1, #0
   149b8:	adds	r2, r2, #1
   149bc:	adc	r3, r3, #0
   149c0:	add	ip, r8, #72	; 0x48
   149c4:	stm	ip, {r0, r1, r2, r3}
   149c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149cc <UnityPrintMask@@Base>:
   149cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149d0:	add	fp, sp, #28
   149d4:	sub	sp, sp, #12
   149d8:	mov	r8, r1
   149dc:	mov	r5, r0
   149e0:	movw	r6, #58768	; 0xe590
   149e4:	movt	r6, #2
   149e8:	ldm	r6, {r0, r1, r2, r3}
   149ec:	adds	r0, r0, #1
   149f0:	adc	r1, r1, #0
   149f4:	adds	r2, r2, #1
   149f8:	adc	r3, r3, #0
   149fc:	stm	r6, {r0, r1, r2, r3}
   14a00:	mov	r7, #-2147483648	; 0x80000000
   14a04:	mov	r4, #32
   14a08:	add	r0, r6, #80	; 0x50
   14a0c:	str	r0, [sp, #8]
   14a10:	add	r0, r6, #72	; 0x48
   14a14:	str	r0, [sp, #4]
   14a18:	add	r9, r6, #64	; 0x40
   14a1c:	b	14a68 <UnityPrintMask@@Base+0x9c>
   14a20:	ldrd	r0, [r6, #40]	; 0x28
   14a24:	adds	r0, r0, #1
   14a28:	adc	r1, r1, #0
   14a2c:	strd	r0, [r6, #40]	; 0x28
   14a30:	mov	r0, #88	; 0x58
   14a34:	ldr	sl, [sp, #8]
   14a38:	bl	12788 <putchar@plt>
   14a3c:	ldrd	r0, [sl]
   14a40:	adds	r0, r0, #1
   14a44:	adc	r1, r1, #0
   14a48:	strd	r0, [sl]
   14a4c:	ldrd	r0, [r6, #88]	; 0x58
   14a50:	adds	r0, r0, #1
   14a54:	adc	r1, r1, #0
   14a58:	strd	r0, [r6, #88]	; 0x58
   14a5c:	subs	r4, r4, #1
   14a60:	lsr	r7, r7, #1
   14a64:	beq	14ad0 <UnityPrintMask@@Base+0x104>
   14a68:	ldrd	r0, [r6, #16]
   14a6c:	adds	r0, r0, #1
   14a70:	adc	r1, r1, #0
   14a74:	strd	r0, [r6, #16]
   14a78:	tst	r7, r5
   14a7c:	beq	14a20 <UnityPrintMask@@Base+0x54>
   14a80:	ldrd	r0, [r6, #32]
   14a84:	adds	r0, r0, #1
   14a88:	adc	r1, r1, #0
   14a8c:	strd	r0, [r6, #32]
   14a90:	tst	r7, r8
   14a94:	beq	14ab4 <UnityPrintMask@@Base+0xe8>
   14a98:	ldrd	r0, [r6, #48]	; 0x30
   14a9c:	adds	r0, r0, #1
   14aa0:	adc	r1, r1, #0
   14aa4:	strd	r0, [r6, #48]	; 0x30
   14aa8:	mov	r0, #49	; 0x31
   14aac:	mov	sl, r9
   14ab0:	b	14a38 <UnityPrintMask@@Base+0x6c>
   14ab4:	ldrd	r0, [r6, #56]	; 0x38
   14ab8:	adds	r0, r0, #1
   14abc:	adc	r1, r1, #0
   14ac0:	strd	r0, [r6, #56]	; 0x38
   14ac4:	mov	r0, #48	; 0x30
   14ac8:	ldr	sl, [sp, #4]
   14acc:	b	14a38 <UnityPrintMask@@Base+0x6c>
   14ad0:	ldrd	r0, [r6, #24]
   14ad4:	ldrd	r2, [r6, #96]	; 0x60
   14ad8:	adds	r0, r0, #1
   14adc:	adc	r1, r1, #0
   14ae0:	adds	r2, r2, #1
   14ae4:	str	r2, [r6, #96]	; 0x60
   14ae8:	strd	r0, [r6, #24]
   14aec:	adc	r0, r3, #0
   14af0:	str	r0, [r6, #100]	; 0x64
   14af4:	sub	sp, fp, #28
   14af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014afc <UnityPrintFail@@Base>:
   14afc:	movw	r0, #58872	; 0xe5f8
   14b00:	movt	r0, #2
   14b04:	ldm	r0, {r1, r2, r3, ip}
   14b08:	adds	r1, r1, #1
   14b0c:	adc	r2, r2, #0
   14b10:	adds	r3, r3, #1
   14b14:	adc	ip, ip, #0
   14b18:	stm	r0, {r1, r2, r3, ip}
   14b1c:	movw	r0, #52168	; 0xcbc8
   14b20:	movt	r0, #1
   14b24:	b	14170 <UnityPrint@@Base>

00014b28 <UnityPrintOk@@Base>:
   14b28:	movw	r0, #58888	; 0xe608
   14b2c:	movt	r0, #2
   14b30:	ldm	r0, {r1, r2, r3, ip}
   14b34:	adds	r1, r1, #1
   14b38:	adc	r2, r2, #0
   14b3c:	adds	r3, r3, #1
   14b40:	adc	ip, ip, #0
   14b44:	stm	r0, {r1, r2, r3, ip}
   14b48:	movw	r0, #52160	; 0xcbc0
   14b4c:	movt	r0, #1
   14b50:	b	14170 <UnityPrint@@Base>

00014b54 <UnityConcludeTest@@Base>:
   14b54:	push	{r4, r5, fp, lr}
   14b58:	add	fp, sp, #8
   14b5c:	movw	r4, #58912	; 0xe620
   14b60:	movt	r4, #2
   14b64:	ldrd	r0, [r4]
   14b68:	adds	r0, r0, #1
   14b6c:	adc	r1, r1, #0
   14b70:	strd	r0, [r4]
   14b74:	movw	r5, #63304	; 0xf748
   14b78:	movt	r5, #2
   14b7c:	ldr	r0, [r5, #36]	; 0x24
   14b80:	cmp	r0, #0
   14b84:	beq	14bac <UnityConcludeTest@@Base+0x58>
   14b88:	ldrd	r0, [r4, #8]
   14b8c:	adds	r0, r0, #1
   14b90:	ldr	r2, [r5, #28]
   14b94:	add	r2, r2, #1
   14b98:	str	r2, [r5, #28]
   14b9c:	adc	r1, r1, #0
   14ba0:	strd	r0, [r4, #8]
   14ba4:	add	r0, r4, #24
   14ba8:	b	14c18 <UnityConcludeTest@@Base+0xc4>
   14bac:	ldrd	r0, [r4, #16]
   14bb0:	adds	r0, r0, #1
   14bb4:	adc	r1, r1, #0
   14bb8:	strd	r0, [r4, #16]
   14bbc:	ldr	r0, [r5, #32]
   14bc0:	cmp	r0, #0
   14bc4:	beq	14bec <UnityConcludeTest@@Base+0x98>
   14bc8:	ldrd	r0, [r4, #32]
   14bcc:	adds	r0, r0, #1
   14bd0:	ldr	r2, [r5, #24]
   14bd4:	add	r2, r2, #1
   14bd8:	str	r2, [r5, #24]
   14bdc:	adc	r1, r1, #0
   14be0:	strd	r0, [r4, #32]
   14be4:	add	r0, r4, #56	; 0x38
   14be8:	b	14c18 <UnityConcludeTest@@Base+0xc4>
   14bec:	ldrd	r0, [r4, #40]	; 0x28
   14bf0:	adds	r0, r0, #1
   14bf4:	adc	r1, r1, #0
   14bf8:	strd	r0, [r4, #40]	; 0x28
   14bfc:	ldr	r0, [r5]
   14c00:	ldr	r1, [r5, #16]
   14c04:	bl	14c50 <UnityConcludeTest@@Base+0xfc>
   14c08:	movw	r0, #52163	; 0xcbc3
   14c0c:	movt	r0, #1
   14c10:	bl	14170 <UnityPrint@@Base>
   14c14:	add	r0, r4, #48	; 0x30
   14c18:	ldrd	r2, [r0]
   14c1c:	adds	r2, r2, #1
   14c20:	adc	r3, r3, #0
   14c24:	strd	r2, [r0]
   14c28:	mov	r0, #0
   14c2c:	str	r0, [r5, #32]
   14c30:	str	r0, [r5, #36]	; 0x24
   14c34:	ldrd	r0, [r4, #64]	; 0x40
   14c38:	adds	r0, r0, #1
   14c3c:	adc	r1, r1, #0
   14c40:	strd	r0, [r4, #64]	; 0x40
   14c44:	mov	r0, #10
   14c48:	pop	{r4, r5, fp, lr}
   14c4c:	b	12788 <putchar@plt>
   14c50:	push	{r4, r5, r6, sl, fp, lr}
   14c54:	add	fp, sp, #16
   14c58:	mov	r6, r1
   14c5c:	movw	r1, #58984	; 0xe668
   14c60:	movt	r1, #2
   14c64:	ldm	r1, {r2, r3, r4, r5}
   14c68:	adds	r2, r2, #1
   14c6c:	adc	r3, r3, #0
   14c70:	adds	r4, r4, #1
   14c74:	adc	r5, r5, #0
   14c78:	stm	r1, {r2, r3, r4, r5}
   14c7c:	bl	14170 <UnityPrint@@Base>
   14c80:	mov	r0, #58	; 0x3a
   14c84:	bl	12788 <putchar@plt>
   14c88:	mov	r0, r6
   14c8c:	bl	14714 <UnityPrintNumber@@Base>
   14c90:	mov	r0, #58	; 0x3a
   14c94:	bl	12788 <putchar@plt>
   14c98:	movw	r0, #63304	; 0xf748
   14c9c:	movt	r0, #2
   14ca0:	ldr	r0, [r0, #4]
   14ca4:	bl	14170 <UnityPrint@@Base>
   14ca8:	mov	r0, #58	; 0x3a
   14cac:	pop	{r4, r5, r6, sl, fp, lr}
   14cb0:	b	12788 <putchar@plt>

00014cb4 <UnityAssertBits@@Base>:
   14cb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14cb8:	add	fp, sp, #24
   14cbc:	mov	r8, r3
   14cc0:	mov	r7, r1
   14cc4:	mov	r6, r0
   14cc8:	movw	r1, #59008	; 0xe680
   14ccc:	movt	r1, #2
   14cd0:	ldm	r1, {r0, r3}
   14cd4:	adds	r0, r0, #1
   14cd8:	adc	r3, r3, #0
   14cdc:	stm	r1, {r0, r3}
   14ce0:	movw	r4, #63304	; 0xf748
   14ce4:	movt	r4, #2
   14ce8:	ldr	r0, [r4, #32]
   14cec:	ldr	r3, [r4, #36]	; 0x24
   14cf0:	orrs	r0, r3, r0
   14cf4:	beq	14d00 <UnityAssertBits@@Base+0x4c>
   14cf8:	add	r0, r1, #8
   14cfc:	b	14d2c <UnityAssertBits@@Base+0x78>
   14d00:	mov	r5, r2
   14d04:	ldr	r0, [r1, #16]
   14d08:	ldr	r3, [r1, #20]
   14d0c:	adds	r0, r0, #1
   14d10:	adc	r3, r3, #0
   14d14:	str	r0, [r1, #16]
   14d18:	str	r3, [r1, #20]
   14d1c:	eor	r0, r2, r7
   14d20:	tst	r0, r6
   14d24:	bne	14d58 <UnityAssertBits@@Base+0xa4>
   14d28:	add	r0, r1, #32
   14d2c:	ldrd	r2, [r0]
   14d30:	adds	r2, r2, #1
   14d34:	adc	r3, r3, #0
   14d38:	strd	r2, [r0]
   14d3c:	ldr	r0, [r1, #40]	; 0x28
   14d40:	ldr	r3, [r1, #44]	; 0x2c
   14d44:	adds	r0, r0, #1
   14d48:	adc	r3, r3, #0
   14d4c:	str	r0, [r1, #40]	; 0x28
   14d50:	str	r3, [r1, #44]	; 0x2c
   14d54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d58:	ldr	r0, [fp, #8]
   14d5c:	ldrd	r2, [r1, #24]
   14d60:	adds	r2, r2, #1
   14d64:	adc	r3, r3, #0
   14d68:	strd	r2, [r1, #24]
   14d6c:	bl	14dbc <UnityAssertBits@@Base+0x108>
   14d70:	movw	r0, #52188	; 0xcbdc
   14d74:	movt	r0, #1
   14d78:	bl	14170 <UnityPrint@@Base>
   14d7c:	mov	r0, r6
   14d80:	mov	r1, r7
   14d84:	bl	149cc <UnityPrintMask@@Base>
   14d88:	movw	r0, #52199	; 0xcbe7
   14d8c:	movt	r0, #1
   14d90:	bl	14170 <UnityPrint@@Base>
   14d94:	mov	r0, r6
   14d98:	mov	r1, r5
   14d9c:	bl	149cc <UnityPrintMask@@Base>
   14da0:	mov	r0, r8
   14da4:	bl	14e24 <UnityAssertBits@@Base+0x170>
   14da8:	mov	r0, #1
   14dac:	str	r0, [r4, #32]
   14db0:	add	r0, r4, #40	; 0x28
   14db4:	mov	r1, #1
   14db8:	bl	12638 <longjmp@plt>
   14dbc:	push	{fp, lr}
   14dc0:	mov	fp, sp
   14dc4:	mov	ip, r0
   14dc8:	movw	r0, #59056	; 0xe6b0
   14dcc:	movt	r0, #2
   14dd0:	ldm	r0, {r2, r3}
   14dd4:	ldr	r1, [r0, #8]
   14dd8:	ldr	lr, [r0, #12]
   14ddc:	adds	r2, r2, #1
   14de0:	adc	r3, r3, #0
   14de4:	adds	r1, r1, #1
   14de8:	adc	lr, lr, #0
   14dec:	stm	r0, {r2, r3}
   14df0:	str	r1, [r0, #8]
   14df4:	str	lr, [r0, #12]
   14df8:	movw	r0, #63304	; 0xf748
   14dfc:	movt	r0, #2
   14e00:	ldr	r0, [r0]
   14e04:	mov	r1, ip
   14e08:	bl	14c50 <UnityConcludeTest@@Base+0xfc>
   14e0c:	movw	r0, #52168	; 0xcbc8
   14e10:	movt	r0, #1
   14e14:	bl	14170 <UnityPrint@@Base>
   14e18:	mov	r0, #58	; 0x3a
   14e1c:	pop	{fp, lr}
   14e20:	b	12788 <putchar@plt>
   14e24:	push	{r4, r5, r6, sl, fp, lr}
   14e28:	add	fp, sp, #16
   14e2c:	mov	r4, r0
   14e30:	movw	r5, #59072	; 0xe6c0
   14e34:	movt	r5, #2
   14e38:	ldrd	r0, [r5]
   14e3c:	adds	r0, r0, #1
   14e40:	adc	r1, r1, #0
   14e44:	strd	r0, [r5]
   14e48:	cmp	r4, #0
   14e4c:	beq	14edc <UnityAssertBits@@Base+0x228>
   14e50:	ldrd	r0, [r5, #8]
   14e54:	adds	r0, r0, #1
   14e58:	adc	r1, r1, #0
   14e5c:	strd	r0, [r5, #8]
   14e60:	movw	r0, #52185	; 0xcbd9
   14e64:	movt	r0, #1
   14e68:	bl	14170 <UnityPrint@@Base>
   14e6c:	movw	r6, #63304	; 0xf748
   14e70:	movt	r6, #2
   14e74:	ldr	r0, [r6, #8]
   14e78:	cmp	r0, #0
   14e7c:	beq	14ee4 <UnityAssertBits@@Base+0x230>
   14e80:	ldrd	r0, [r5, #24]
   14e84:	adds	r0, r0, #1
   14e88:	adc	r1, r1, #0
   14e8c:	strd	r0, [r5, #24]
   14e90:	movw	r0, #52593	; 0xcd71
   14e94:	movt	r0, #1
   14e98:	bl	14170 <UnityPrint@@Base>
   14e9c:	ldr	r0, [r6, #8]
   14ea0:	bl	14170 <UnityPrint@@Base>
   14ea4:	ldr	r0, [r6, #12]
   14ea8:	cmp	r0, #0
   14eac:	beq	14eec <UnityAssertBits@@Base+0x238>
   14eb0:	ldrd	r0, [r5, #40]	; 0x28
   14eb4:	adds	r0, r0, #1
   14eb8:	adc	r1, r1, #0
   14ebc:	strd	r0, [r5, #40]	; 0x28
   14ec0:	movw	r0, #52603	; 0xcd7b
   14ec4:	movt	r0, #1
   14ec8:	bl	14170 <UnityPrint@@Base>
   14ecc:	ldr	r0, [r6, #12]
   14ed0:	bl	14170 <UnityPrint@@Base>
   14ed4:	add	r0, r5, #56	; 0x38
   14ed8:	b	14ef0 <UnityAssertBits@@Base+0x23c>
   14edc:	add	r0, r5, #16
   14ee0:	b	14f2c <UnityAssertBits@@Base+0x278>
   14ee4:	add	r0, r5, #32
   14ee8:	b	14f10 <UnityAssertBits@@Base+0x25c>
   14eec:	add	r0, r5, #48	; 0x30
   14ef0:	ldrd	r2, [r0]
   14ef4:	adds	r2, r2, #1
   14ef8:	adc	r3, r3, #0
   14efc:	strd	r2, [r0]
   14f00:	movw	r0, #52185	; 0xcbd9
   14f04:	movt	r0, #1
   14f08:	bl	14170 <UnityPrint@@Base>
   14f0c:	add	r0, r5, #64	; 0x40
   14f10:	ldrd	r2, [r0]
   14f14:	adds	r2, r2, #1
   14f18:	adc	r3, r3, #0
   14f1c:	strd	r2, [r0]
   14f20:	mov	r0, r4
   14f24:	bl	14170 <UnityPrint@@Base>
   14f28:	add	r0, r5, #72	; 0x48
   14f2c:	ldrd	r2, [r0]
   14f30:	adds	r2, r2, #1
   14f34:	adc	r3, r3, #0
   14f38:	strd	r2, [r0]
   14f3c:	ldrd	r0, [r5, #80]	; 0x50
   14f40:	adds	r0, r0, #1
   14f44:	adc	r1, r1, #0
   14f48:	strd	r0, [r5, #80]	; 0x50
   14f4c:	pop	{r4, r5, r6, sl, fp, pc}

00014f50 <UnityAssertEqualNumber@@Base>:
   14f50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f54:	add	fp, sp, #24
   14f58:	mov	r4, r2
   14f5c:	mov	r5, r1
   14f60:	mov	r6, r0
   14f64:	movw	r0, #59168	; 0xe720
   14f68:	movt	r0, #2
   14f6c:	ldr	r2, [r0]
   14f70:	ldr	r1, [r0, #4]
   14f74:	adds	r2, r2, #1
   14f78:	adc	r1, r1, #0
   14f7c:	str	r2, [r0]
   14f80:	str	r1, [r0, #4]
   14f84:	movw	r7, #63304	; 0xf748
   14f88:	movt	r7, #2
   14f8c:	ldr	r2, [r7, #32]
   14f90:	ldr	r1, [r7, #36]	; 0x24
   14f94:	orrs	r1, r1, r2
   14f98:	beq	14fa4 <UnityAssertEqualNumber@@Base+0x54>
   14f9c:	add	r1, r0, #8
   14fa0:	b	14fc8 <UnityAssertEqualNumber@@Base+0x78>
   14fa4:	ldr	r2, [r0, #16]
   14fa8:	ldr	r1, [r0, #20]
   14fac:	adds	r2, r2, #1
   14fb0:	adc	r1, r1, #0
   14fb4:	str	r2, [r0, #16]
   14fb8:	str	r1, [r0, #20]
   14fbc:	cmp	r6, r5
   14fc0:	bne	14fec <UnityAssertEqualNumber@@Base+0x9c>
   14fc4:	add	r1, r0, #32
   14fc8:	ldrd	r2, [r1]
   14fcc:	adds	r2, r2, #1
   14fd0:	adc	r3, r3, #0
   14fd4:	strd	r2, [r1]
   14fd8:	ldrd	r2, [r0, #40]	; 0x28
   14fdc:	adds	r2, r2, #1
   14fe0:	adc	r3, r3, #0
   14fe4:	strd	r2, [r0, #40]	; 0x28
   14fe8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fec:	ldr	r8, [fp, #8]
   14ff0:	ldr	r2, [r0, #24]
   14ff4:	ldr	r1, [r0, #28]
   14ff8:	adds	r2, r2, #1
   14ffc:	adc	r1, r1, #0
   15000:	str	r2, [r0, #24]
   15004:	str	r1, [r0, #28]
   15008:	mov	r0, r3
   1500c:	bl	14dbc <UnityAssertBits@@Base+0x108>
   15010:	movw	r0, #52188	; 0xcbdc
   15014:	movt	r0, #1
   15018:	bl	14170 <UnityPrint@@Base>
   1501c:	mov	r0, r6
   15020:	mov	r1, r8
   15024:	bl	14644 <UnityPrintNumberByStyle@@Base>
   15028:	movw	r0, #52199	; 0xcbe7
   1502c:	movt	r0, #1
   15030:	bl	14170 <UnityPrint@@Base>
   15034:	mov	r0, r5
   15038:	mov	r1, r8
   1503c:	bl	14644 <UnityPrintNumberByStyle@@Base>
   15040:	mov	r0, r4
   15044:	bl	14e24 <UnityAssertBits@@Base+0x170>
   15048:	mov	r0, #1
   1504c:	str	r0, [r7, #32]
   15050:	add	r0, r7, #40	; 0x28
   15054:	mov	r1, #1
   15058:	bl	12638 <longjmp@plt>

0001505c <UnityAssertEqualIntArray@@Base>:
   1505c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15060:	add	fp, sp, #28
   15064:	sub	sp, sp, #4
   15068:	mov	r5, r1
   1506c:	mov	r7, r0
   15070:	movw	r9, #59216	; 0xe750
   15074:	movt	r9, #2
   15078:	ldrd	r0, [r9]
   1507c:	adds	r0, r0, #1
   15080:	adc	r1, r1, #0
   15084:	strd	r0, [r9]
   15088:	movw	r8, #63304	; 0xf748
   1508c:	movt	r8, #2
   15090:	ldrd	r0, [r8, #32]
   15094:	orrs	r0, r1, r0
   15098:	beq	150b4 <UnityAssertEqualIntArray@@Base+0x58>
   1509c:	ldrd	r0, [r9, #8]
   150a0:	adds	r0, r0, #1
   150a4:	adc	r1, r1, #0
   150a8:	strd	r0, [r9, #8]
   150ac:	add	r0, r9, #24
   150b0:	b	153b0 <UnityAssertEqualIntArray@@Base+0x354>
   150b4:	mov	sl, r3
   150b8:	mov	r6, r2
   150bc:	ldr	r2, [fp, #8]
   150c0:	ldrd	r0, [r9, #16]
   150c4:	adds	r0, r0, #1
   150c8:	adc	r1, r1, #0
   150cc:	strd	r0, [r9, #16]
   150d0:	cmp	r6, #0
   150d4:	beq	15514 <UnityAssertEqualIntArray@@Base+0x4b8>
   150d8:	ldrd	r0, [r9, #40]	; 0x28
   150dc:	adds	r0, r0, #1
   150e0:	adc	r1, r1, #0
   150e4:	strd	r0, [r9, #40]	; 0x28
   150e8:	mov	r0, r7
   150ec:	mov	r1, r5
   150f0:	mov	r3, sl
   150f4:	bl	1553c <UnityAssertEqualIntArray@@Base+0x4e0>
   150f8:	cmp	r0, #1
   150fc:	bne	15118 <UnityAssertEqualIntArray@@Base+0xbc>
   15100:	ldrd	r0, [r9, #48]	; 0x30
   15104:	adds	r0, r0, #1
   15108:	adc	r1, r1, #0
   1510c:	strd	r0, [r9, #48]	; 0x30
   15110:	add	r0, r9, #64	; 0x40
   15114:	b	153b0 <UnityAssertEqualIntArray@@Base+0x354>
   15118:	ldr	lr, [fp, #12]
   1511c:	ldrd	r0, [r9, #56]	; 0x38
   15120:	adds	r0, r0, #1
   15124:	adc	r1, r1, #0
   15128:	strd	r0, [r9, #56]	; 0x38
   1512c:	bic	r0, lr, #128	; 0x80
   15130:	sub	r0, r0, #17
   15134:	cmp	r0, #49	; 0x31
   15138:	bhi	15328 <UnityAssertEqualIntArray@@Base+0x2cc>
   1513c:	add	r1, pc, #0
   15140:	ldr	pc, [r1, r0, lsl #2]
   15144:	andeq	r5, r1, ip, lsl #4
   15148:	muleq	r1, ip, r2
   1514c:	andeq	r5, r1, r8, lsr #6
   15150:	andeq	r5, r1, r8, lsr #6
   15154:	andeq	r5, r1, r8, lsr #6
   15158:	andeq	r5, r1, r8, lsr #6
   1515c:	andeq	r5, r1, r8, lsr #6
   15160:	andeq	r5, r1, r8, lsr #6
   15164:	andeq	r5, r1, r8, lsr #6
   15168:	andeq	r5, r1, r8, lsr #6
   1516c:	andeq	r5, r1, r8, lsr #6
   15170:	andeq	r5, r1, r8, lsr #6
   15174:	andeq	r5, r1, r8, lsr #6
   15178:	andeq	r5, r1, r8, lsr #6
   1517c:	andeq	r5, r1, r8, lsr #6
   15180:	andeq	r5, r1, r8, lsr #6
   15184:	andeq	r5, r1, ip, lsl #4
   15188:	muleq	r1, ip, r2
   1518c:	andeq	r5, r1, r8, lsr #6
   15190:	andeq	r5, r1, r8, lsr #6
   15194:	andeq	r5, r1, r8, lsr #6
   15198:	andeq	r5, r1, r8, lsr #6
   1519c:	andeq	r5, r1, r8, lsr #6
   151a0:	andeq	r5, r1, r8, lsr #6
   151a4:	andeq	r5, r1, r8, lsr #6
   151a8:	andeq	r5, r1, r8, lsr #6
   151ac:	andeq	r5, r1, r8, lsr #6
   151b0:	andeq	r5, r1, r8, lsr #6
   151b4:	andeq	r5, r1, r8, lsr #6
   151b8:	andeq	r5, r1, r8, lsr #6
   151bc:	andeq	r5, r1, r8, lsr #6
   151c0:	andeq	r5, r1, r8, lsr #6
   151c4:	andeq	r5, r1, r8, lsr #6
   151c8:	andeq	r5, r1, r8, lsr #6
   151cc:	andeq	r5, r1, r8, lsr #6
   151d0:	andeq	r5, r1, r8, lsr #6
   151d4:	andeq	r5, r1, r8, lsr #6
   151d8:	andeq	r5, r1, r8, lsr #6
   151dc:	andeq	r5, r1, r8, lsr #6
   151e0:	andeq	r5, r1, r8, lsr #6
   151e4:	andeq	r5, r1, r8, lsr #6
   151e8:	andeq	r5, r1, r8, lsr #6
   151ec:	andeq	r5, r1, r8, lsr #6
   151f0:	andeq	r5, r1, r8, lsr #6
   151f4:	andeq	r5, r1, r8, lsr #6
   151f8:	andeq	r5, r1, r8, lsr #6
   151fc:	andeq	r5, r1, r8, lsr #6
   15200:	andeq	r5, r1, r8, lsr #6
   15204:	andeq	r5, r1, ip, lsl #4
   15208:	muleq	r1, ip, r2
   1520c:	ldrd	r0, [r9, #96]	; 0x60
   15210:	ldrd	r2, [r9, #128]	; 0x80
   15214:	adds	r0, r0, #1
   15218:	adc	r1, r1, #0
   1521c:	adds	r2, r2, #1
   15220:	str	r2, [r9, #128]	; 0x80
   15224:	strd	r0, [r9, #96]	; 0x60
   15228:	adc	r0, r3, #0
   1522c:	str	r0, [r9, #132]	; 0x84
   15230:	mov	r4, #0
   15234:	add	ip, r9, #144	; 0x90
   15238:	ldrd	r2, [r9, #136]	; 0x88
   1523c:	adds	r2, r2, #1
   15240:	adc	r3, r3, #0
   15244:	strd	r2, [r9, #136]	; 0x88
   15248:	ldrb	r1, [r5]
   1524c:	ldrb	r2, [r7]
   15250:	cmp	r2, r1
   15254:	bne	153e0 <UnityAssertEqualIntArray@@Base+0x384>
   15258:	add	r3, r9, #160	; 0xa0
   1525c:	ldm	r3, {r1, r2, r3}
   15260:	ldr	r0, [r9, #172]	; 0xac
   15264:	adds	r1, r1, #1
   15268:	adc	r2, r2, #0
   1526c:	adds	r3, r3, #1
   15270:	adc	r0, r0, #0
   15274:	str	r1, [r9, #160]	; 0xa0
   15278:	str	r2, [r9, #164]	; 0xa4
   1527c:	str	r3, [r9, #168]	; 0xa8
   15280:	str	r0, [r9, #172]	; 0xac
   15284:	add	r4, r4, #1
   15288:	add	r5, r5, #1
   1528c:	add	r7, r7, #1
   15290:	cmp	r6, r4
   15294:	bne	15238 <UnityAssertEqualIntArray@@Base+0x1dc>
   15298:	b	1539c <UnityAssertEqualIntArray@@Base+0x340>
   1529c:	ldrd	r0, [r9, #120]	; 0x78
   152a0:	ldrd	r2, [r9, #176]	; 0xb0
   152a4:	adds	r0, r0, #1
   152a8:	adc	r1, r1, #0
   152ac:	adds	r2, r2, #1
   152b0:	str	r2, [r9, #176]	; 0xb0
   152b4:	strd	r0, [r9, #120]	; 0x78
   152b8:	adc	r0, r3, #0
   152bc:	str	r0, [r9, #180]	; 0xb4
   152c0:	mov	r4, #0
   152c4:	add	ip, r9, #192	; 0xc0
   152c8:	ldrd	r0, [r9, #184]	; 0xb8
   152cc:	adds	r0, r0, #1
   152d0:	adc	r1, r1, #0
   152d4:	strd	r0, [r9, #184]	; 0xb8
   152d8:	ldrh	r0, [r5]
   152dc:	ldrh	r1, [r7]
   152e0:	cmp	r1, r0
   152e4:	bne	1543c <UnityAssertEqualIntArray@@Base+0x3e0>
   152e8:	add	r3, r9, #208	; 0xd0
   152ec:	ldm	r3, {r0, r1, r2, r3}
   152f0:	adds	r0, r0, #1
   152f4:	adc	r1, r1, #0
   152f8:	adds	r2, r2, #1
   152fc:	adc	r3, r3, #0
   15300:	str	r0, [r9, #208]	; 0xd0
   15304:	str	r1, [r9, #212]	; 0xd4
   15308:	str	r2, [r9, #216]	; 0xd8
   1530c:	str	r3, [r9, #220]	; 0xdc
   15310:	add	r4, r4, #1
   15314:	add	r5, r5, #2
   15318:	add	r7, r7, #2
   1531c:	cmp	r6, r4
   15320:	bne	152c8 <UnityAssertEqualIntArray@@Base+0x26c>
   15324:	b	1539c <UnityAssertEqualIntArray@@Base+0x340>
   15328:	ldrd	r0, [r9, #72]	; 0x48
   1532c:	adds	r0, r0, #1
   15330:	adc	r1, r1, #0
   15334:	strd	r0, [r9, #72]	; 0x48
   15338:	mov	r4, #0
   1533c:	add	ip, r9, #232	; 0xe8
   15340:	ldrd	r0, [r9, #224]	; 0xe0
   15344:	adds	r0, r0, #1
   15348:	adc	r1, r1, #0
   1534c:	strd	r0, [r9, #224]	; 0xe0
   15350:	ldr	r0, [r5]
   15354:	ldr	r1, [r7]
   15358:	cmp	r1, r0
   1535c:	bne	15498 <UnityAssertEqualIntArray@@Base+0x43c>
   15360:	add	r3, r9, #248	; 0xf8
   15364:	ldm	r3, {r0, r1, r2, r3}
   15368:	adds	r0, r0, #1
   1536c:	adc	r1, r1, #0
   15370:	adds	r2, r2, #1
   15374:	adc	r3, r3, #0
   15378:	str	r0, [r9, #248]	; 0xf8
   1537c:	str	r1, [r9, #252]	; 0xfc
   15380:	str	r2, [r9, #256]	; 0x100
   15384:	str	r3, [r9, #260]	; 0x104
   15388:	add	r4, r4, #1
   1538c:	add	r5, r5, #4
   15390:	add	r7, r7, #4
   15394:	cmp	r6, r4
   15398:	bne	15340 <UnityAssertEqualIntArray@@Base+0x2e4>
   1539c:	ldrd	r0, [ip]
   153a0:	adds	r0, r0, #1
   153a4:	adc	r1, r1, #0
   153a8:	strd	r0, [ip]
   153ac:	add	r0, r9, #264	; 0x108
   153b0:	ldrd	r2, [r0]
   153b4:	adds	r2, r2, #1
   153b8:	adc	r3, r3, #0
   153bc:	strd	r2, [r0]
   153c0:	ldr	r0, [r9, #272]	; 0x110
   153c4:	ldr	r1, [r9, #276]	; 0x114
   153c8:	adds	r0, r0, #1
   153cc:	adc	r1, r1, #0
   153d0:	str	r0, [r9, #272]	; 0x110
   153d4:	str	r1, [r9, #276]	; 0x114
   153d8:	sub	sp, fp, #28
   153dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153e0:	ldrd	r0, [r9, #152]	; 0x98
   153e4:	adds	r0, r0, #1
   153e8:	adc	r1, r1, #0
   153ec:	strd	r0, [r9, #152]	; 0x98
   153f0:	ldr	r0, [fp, #8]
   153f4:	mov	r6, lr
   153f8:	bl	14dbc <UnityAssertBits@@Base+0x108>
   153fc:	movw	r0, #52210	; 0xcbf2
   15400:	movt	r0, #1
   15404:	bl	14170 <UnityPrint@@Base>
   15408:	mov	r0, r4
   1540c:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   15410:	movw	r0, #52188	; 0xcbdc
   15414:	movt	r0, #1
   15418:	bl	14170 <UnityPrint@@Base>
   1541c:	ldrsb	r0, [r7]
   15420:	mov	r1, r6
   15424:	bl	14644 <UnityPrintNumberByStyle@@Base>
   15428:	movw	r0, #52199	; 0xcbe7
   1542c:	movt	r0, #1
   15430:	bl	14170 <UnityPrint@@Base>
   15434:	ldrsb	r0, [r5]
   15438:	b	154f0 <UnityAssertEqualIntArray@@Base+0x494>
   1543c:	ldrd	r0, [r9, #200]	; 0xc8
   15440:	adds	r0, r0, #1
   15444:	adc	r1, r1, #0
   15448:	strd	r0, [r9, #200]	; 0xc8
   1544c:	ldr	r0, [fp, #8]
   15450:	mov	r6, lr
   15454:	bl	14dbc <UnityAssertBits@@Base+0x108>
   15458:	movw	r0, #52210	; 0xcbf2
   1545c:	movt	r0, #1
   15460:	bl	14170 <UnityPrint@@Base>
   15464:	mov	r0, r4
   15468:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   1546c:	movw	r0, #52188	; 0xcbdc
   15470:	movt	r0, #1
   15474:	bl	14170 <UnityPrint@@Base>
   15478:	ldrsh	r0, [r7]
   1547c:	mov	r1, r6
   15480:	bl	14644 <UnityPrintNumberByStyle@@Base>
   15484:	movw	r0, #52199	; 0xcbe7
   15488:	movt	r0, #1
   1548c:	bl	14170 <UnityPrint@@Base>
   15490:	ldrsh	r0, [r5]
   15494:	b	154f0 <UnityAssertEqualIntArray@@Base+0x494>
   15498:	ldrd	r0, [r9, #240]	; 0xf0
   1549c:	adds	r0, r0, #1
   154a0:	adc	r1, r1, #0
   154a4:	strd	r0, [r9, #240]	; 0xf0
   154a8:	ldr	r0, [fp, #8]
   154ac:	mov	r6, lr
   154b0:	bl	14dbc <UnityAssertBits@@Base+0x108>
   154b4:	movw	r0, #52210	; 0xcbf2
   154b8:	movt	r0, #1
   154bc:	bl	14170 <UnityPrint@@Base>
   154c0:	mov	r0, r4
   154c4:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   154c8:	movw	r0, #52188	; 0xcbdc
   154cc:	movt	r0, #1
   154d0:	bl	14170 <UnityPrint@@Base>
   154d4:	ldr	r0, [r7]
   154d8:	mov	r1, r6
   154dc:	bl	14644 <UnityPrintNumberByStyle@@Base>
   154e0:	movw	r0, #52199	; 0xcbe7
   154e4:	movt	r0, #1
   154e8:	bl	14170 <UnityPrint@@Base>
   154ec:	ldr	r0, [r5]
   154f0:	mov	r1, r6
   154f4:	bl	14644 <UnityPrintNumberByStyle@@Base>
   154f8:	mov	r0, sl
   154fc:	bl	14e24 <UnityAssertBits@@Base+0x170>
   15500:	mov	r0, #1
   15504:	str	r0, [r8, #32]
   15508:	add	r0, r8, #40	; 0x28
   1550c:	mov	r1, #1
   15510:	bl	12638 <longjmp@plt>
   15514:	ldrd	r0, [r9, #32]
   15518:	adds	r0, r0, #1
   1551c:	adc	r1, r1, #0
   15520:	strd	r0, [r9, #32]
   15524:	mov	r0, r2
   15528:	bl	14dbc <UnityAssertBits@@Base+0x108>
   1552c:	movw	r0, #52271	; 0xcc2f
   15530:	movt	r0, #1
   15534:	bl	14170 <UnityPrint@@Base>
   15538:	b	154f8 <UnityAssertEqualIntArray@@Base+0x49c>
   1553c:	push	{r4, r5, r6, r7, fp, lr}
   15540:	add	fp, sp, #16
   15544:	mov	r4, r3
   15548:	movw	r3, #59504	; 0xe870
   1554c:	movt	r3, #2
   15550:	ldrd	r6, [r3]
   15554:	adds	r6, r6, #1
   15558:	adc	r7, r7, #0
   1555c:	strd	r6, [r3]
   15560:	orrs	r7, r0, r1
   15564:	bne	15578 <UnityAssertEqualIntArray@@Base+0x51c>
   15568:	add	r1, r3, #24
   1556c:	add	r2, r3, #8
   15570:	mov	r0, #1
   15574:	b	155bc <UnityAssertEqualIntArray@@Base+0x560>
   15578:	ldrd	r6, [r3, #16]
   1557c:	adds	r6, r6, #1
   15580:	adc	r7, r7, #0
   15584:	strd	r6, [r3, #16]
   15588:	cmp	r0, #0
   1558c:	beq	155f8 <UnityAssertEqualIntArray@@Base+0x59c>
   15590:	ldr	r0, [r3, #40]	; 0x28
   15594:	ldr	r5, [r3, #44]	; 0x2c
   15598:	adds	r0, r0, #1
   1559c:	adc	r5, r5, #0
   155a0:	str	r0, [r3, #40]	; 0x28
   155a4:	str	r5, [r3, #44]	; 0x2c
   155a8:	cmp	r1, #0
   155ac:	beq	1561c <UnityAssertEqualIntArray@@Base+0x5c0>
   155b0:	add	r1, r3, #64	; 0x40
   155b4:	add	r2, r3, #56	; 0x38
   155b8:	mov	r0, #0
   155bc:	ldrd	r4, [r2]
   155c0:	adds	r4, r4, #1
   155c4:	adc	r5, r5, #0
   155c8:	strd	r4, [r2]
   155cc:	ldm	r1, {r2, r5}
   155d0:	adds	r2, r2, #1
   155d4:	adc	r5, r5, #0
   155d8:	stm	r1, {r2, r5}
   155dc:	ldr	r2, [r3, #72]	; 0x48
   155e0:	ldr	r1, [r3, #76]	; 0x4c
   155e4:	adds	r2, r2, #1
   155e8:	adc	r1, r1, #0
   155ec:	str	r2, [r3, #72]	; 0x48
   155f0:	str	r1, [r3, #76]	; 0x4c
   155f4:	pop	{r4, r5, r6, r7, fp, pc}
   155f8:	ldrd	r0, [r3, #32]
   155fc:	adds	r0, r0, #1
   15600:	adc	r1, r1, #0
   15604:	strd	r0, [r3, #32]
   15608:	mov	r0, r2
   1560c:	bl	14dbc <UnityAssertBits@@Base+0x108>
   15610:	movw	r0, #52326	; 0xcc66
   15614:	movt	r0, #1
   15618:	b	1563c <UnityAssertEqualIntArray@@Base+0x5e0>
   1561c:	ldrd	r0, [r3, #48]	; 0x30
   15620:	adds	r0, r0, #1
   15624:	adc	r1, r1, #0
   15628:	strd	r0, [r3, #48]	; 0x30
   1562c:	mov	r0, r2
   15630:	bl	14dbc <UnityAssertBits@@Base+0x108>
   15634:	movw	r0, #52355	; 0xcc83
   15638:	movt	r0, #1
   1563c:	bl	14170 <UnityPrint@@Base>
   15640:	mov	r0, r4
   15644:	bl	14e24 <UnityAssertBits@@Base+0x170>
   15648:	movw	r0, #63304	; 0xf748
   1564c:	movt	r0, #2
   15650:	mov	r1, #1
   15654:	str	r1, [r0, #32]
   15658:	add	r0, r0, #40	; 0x28
   1565c:	mov	r1, #1
   15660:	bl	12638 <longjmp@plt>

00015664 <UnityAssertEqualFloatArray@@Base>:
   15664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15668:	add	fp, sp, #28
   1566c:	sub	sp, sp, #20
   15670:	mov	r7, r1
   15674:	mov	sl, r0
   15678:	movw	r8, #59584	; 0xe8c0
   1567c:	movt	r8, #2
   15680:	ldrd	r0, [r8]
   15684:	adds	r0, r0, #1
   15688:	adc	r1, r1, #0
   1568c:	strd	r0, [r8]
   15690:	movw	r4, #63304	; 0xf748
   15694:	movt	r4, #2
   15698:	ldrd	r0, [r4, #32]
   1569c:	orrs	r0, r1, r0
   156a0:	beq	156bc <UnityAssertEqualFloatArray@@Base+0x58>
   156a4:	ldrd	r0, [r8, #8]
   156a8:	adds	r0, r0, #1
   156ac:	adc	r1, r1, #0
   156b0:	strd	r0, [r8, #8]
   156b4:	add	r0, r8, #24
   156b8:	b	15890 <UnityAssertEqualFloatArray@@Base+0x22c>
   156bc:	mov	r6, r2
   156c0:	ldr	r2, [fp, #8]
   156c4:	ldrd	r0, [r8, #16]
   156c8:	adds	r0, r0, #1
   156cc:	adc	r1, r1, #0
   156d0:	strd	r0, [r8, #16]
   156d4:	cmp	r6, #0
   156d8:	beq	15920 <UnityAssertEqualFloatArray@@Base+0x2bc>
   156dc:	ldrd	r0, [r8, #40]	; 0x28
   156e0:	adds	r0, r0, #1
   156e4:	adc	r1, r1, #0
   156e8:	strd	r0, [r8, #40]	; 0x28
   156ec:	mov	r0, sl
   156f0:	mov	r1, r7
   156f4:	str	r3, [sp, #12]
   156f8:	bl	1553c <UnityAssertEqualIntArray@@Base+0x4e0>
   156fc:	cmp	r0, #1
   15700:	bne	1571c <UnityAssertEqualFloatArray@@Base+0xb8>
   15704:	ldrd	r0, [r8, #48]	; 0x30
   15708:	adds	r0, r0, #1
   1570c:	adc	r1, r1, #0
   15710:	strd	r0, [r8, #48]	; 0x30
   15714:	add	r0, r8, #64	; 0x40
   15718:	b	15890 <UnityAssertEqualFloatArray@@Base+0x22c>
   1571c:	ldrd	r0, [r8, #56]	; 0x38
   15720:	adds	r0, r0, #1
   15724:	adc	r1, r1, #0
   15728:	strd	r0, [r8, #56]	; 0x38
   1572c:	mov	r4, #0
   15730:	add	r0, r8, #96	; 0x60
   15734:	str	r0, [sp, #16]
   15738:	vldr	s0, [pc, #548]	; 15964 <UnityAssertEqualFloatArray@@Base+0x300>
   1573c:	add	ip, r8, #104	; 0x68
   15740:	vldr	s2, [pc, #544]	; 15968 <UnityAssertEqualFloatArray@@Base+0x304>
   15744:	add	lr, r8, #120	; 0x78
   15748:	add	r0, r8, #128	; 0x80
   1574c:	add	r1, r8, #136	; 0x88
   15750:	str	r1, [sp, #8]
   15754:	add	r1, r8, #152	; 0x98
   15758:	str	r1, [sp, #4]
   1575c:	ldr	r1, [r8, #72]	; 0x48
   15760:	ldr	r3, [r8, #76]	; 0x4c
   15764:	adds	r1, r1, #1
   15768:	adc	r3, r3, #0
   1576c:	str	r1, [r8, #72]	; 0x48
   15770:	str	r3, [r8, #76]	; 0x4c
   15774:	vldr	s4, [r7]
   15778:	vldr	s6, [sl]
   1577c:	vsub.f32	s4, s6, s4
   15780:	vcmpe.f32	s4, #0.0
   15784:	vmrs	APSR_nzcv, fpscr
   15788:	bpl	157b0 <UnityAssertEqualFloatArray@@Base+0x14c>
   1578c:	ldr	r1, [r8, #88]	; 0x58
   15790:	ldr	r3, [r8, #92]	; 0x5c
   15794:	adds	r1, r1, #1
   15798:	vsub.f32	s4, s0, s4
   1579c:	adc	r3, r3, #0
   157a0:	str	r1, [r8, #88]	; 0x58
   157a4:	str	r3, [r8, #92]	; 0x5c
   157a8:	mov	r1, ip
   157ac:	b	157b4 <UnityAssertEqualFloatArray@@Base+0x150>
   157b0:	ldr	r1, [sp, #16]
   157b4:	ldm	r1, {r3, r5}
   157b8:	adds	r3, r3, #1
   157bc:	adc	r5, r5, #0
   157c0:	stm	r1, {r3, r5}
   157c4:	vldr	s6, [sl]
   157c8:	vmul.f32	s6, s6, s2
   157cc:	vcmpe.f32	s6, #0.0
   157d0:	vmrs	APSR_nzcv, fpscr
   157d4:	bpl	157fc <UnityAssertEqualFloatArray@@Base+0x198>
   157d8:	ldr	r1, [r8, #112]	; 0x70
   157dc:	ldr	r3, [r8, #116]	; 0x74
   157e0:	adds	r1, r1, #1
   157e4:	vsub.f32	s6, s0, s6
   157e8:	adc	r3, r3, #0
   157ec:	str	r1, [r8, #112]	; 0x70
   157f0:	str	r3, [r8, #116]	; 0x74
   157f4:	mov	r1, r0
   157f8:	b	15800 <UnityAssertEqualFloatArray@@Base+0x19c>
   157fc:	mov	r1, lr
   15800:	ldm	r1, {r3, r5}
   15804:	adds	r3, r3, #1
   15808:	adc	r5, r5, #0
   1580c:	stm	r1, {r3, r5}
   15810:	vmul.f32	s8, s4, s0
   15814:	vcmp.f32	s8, #0.0
   15818:	vmrs	APSR_nzcv, fpscr
   1581c:	bne	158c0 <UnityAssertEqualFloatArray@@Base+0x25c>
   15820:	ldr	r1, [r8, #144]	; 0x90
   15824:	ldr	r3, [r8, #148]	; 0x94
   15828:	adds	r1, r1, #1
   1582c:	adc	r3, r3, #0
   15830:	str	r1, [r8, #144]	; 0x90
   15834:	str	r3, [r8, #148]	; 0x94
   15838:	vcmpe.f32	s4, s6
   1583c:	vmrs	APSR_nzcv, fpscr
   15840:	bgt	158b8 <UnityAssertEqualFloatArray@@Base+0x254>
   15844:	add	r9, r8, #160	; 0xa0
   15848:	ldm	r9, {r1, r3, r5, r9}
   1584c:	adds	r1, r1, #1
   15850:	adc	r3, r3, #0
   15854:	adds	r5, r5, #1
   15858:	adc	r2, r9, #0
   1585c:	add	r9, r8, #160	; 0xa0
   15860:	stm	r9, {r1, r3, r5}
   15864:	str	r2, [r8, #172]	; 0xac
   15868:	add	r4, r4, #1
   1586c:	add	r7, r7, #4
   15870:	add	sl, sl, #4
   15874:	cmp	r6, r4
   15878:	bne	1575c <UnityAssertEqualFloatArray@@Base+0xf8>
   1587c:	ldrd	r0, [r8, #80]	; 0x50
   15880:	adds	r0, r0, #1
   15884:	adc	r1, r1, #0
   15888:	strd	r0, [r8, #80]	; 0x50
   1588c:	add	r0, r8, #176	; 0xb0
   15890:	ldrd	r2, [r0]
   15894:	adds	r2, r2, #1
   15898:	adc	r3, r3, #0
   1589c:	strd	r2, [r0]
   158a0:	ldrd	r0, [r8, #184]	; 0xb8
   158a4:	adds	r0, r0, #1
   158a8:	adc	r1, r1, #0
   158ac:	strd	r0, [r8, #184]	; 0xb8
   158b0:	sub	sp, fp, #28
   158b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158b8:	ldr	r0, [sp, #4]
   158bc:	str	r0, [sp, #8]
   158c0:	ldr	r2, [sp, #8]
   158c4:	ldrd	r0, [r2]
   158c8:	adds	r0, r0, #1
   158cc:	adc	r1, r1, #0
   158d0:	strd	r0, [r2]
   158d4:	ldr	r0, [fp, #8]
   158d8:	bl	14dbc <UnityAssertBits@@Base+0x108>
   158dc:	movw	r0, #52210	; 0xcbf2
   158e0:	movt	r0, #1
   158e4:	bl	14170 <UnityPrint@@Base>
   158e8:	mov	r0, r4
   158ec:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   158f0:	movw	r0, #52245	; 0xcc15
   158f4:	movt	r0, #1
   158f8:	bl	14170 <UnityPrint@@Base>
   158fc:	ldr	r0, [sp, #12]
   15900:	bl	14e24 <UnityAssertBits@@Base+0x170>
   15904:	mov	r0, #1
   15908:	movw	r1, #63304	; 0xf748
   1590c:	movt	r1, #2
   15910:	str	r0, [r1, #32]
   15914:	add	r0, r1, #40	; 0x28
   15918:	mov	r1, #1
   1591c:	bl	12638 <longjmp@plt>
   15920:	ldrd	r0, [r8, #32]
   15924:	adds	r0, r0, #1
   15928:	adc	r1, r1, #0
   1592c:	strd	r0, [r8, #32]
   15930:	mov	r0, r2
   15934:	mov	r5, r3
   15938:	bl	14dbc <UnityAssertBits@@Base+0x108>
   1593c:	movw	r0, #52271	; 0xcc2f
   15940:	movt	r0, #1
   15944:	bl	14170 <UnityPrint@@Base>
   15948:	mov	r0, r5
   1594c:	bl	14e24 <UnityAssertBits@@Base+0x170>
   15950:	mov	r0, #1
   15954:	str	r0, [r4, #32]
   15958:	add	r0, r4, #40	; 0x28
   1595c:	mov	r1, #1
   15960:	bl	12638 <longjmp@plt>
   15964:	andeq	r0, r0, r0
   15968:	strcc	ip, [r7, -ip, lsr #11]!

0001596c <UnityAssertFloatsWithin@@Base>:
   1596c:	push	{r4, r5, r6, r7, fp, lr}
   15970:	add	fp, sp, #16
   15974:	mov	r4, r0
   15978:	movw	r0, #59776	; 0xe980
   1597c:	movt	r0, #2
   15980:	ldrd	r2, [r0]
   15984:	adds	r2, r2, #1
   15988:	adc	r3, r3, #0
   1598c:	strd	r2, [r0]
   15990:	movw	r5, #63304	; 0xf748
   15994:	movt	r5, #2
   15998:	ldrd	r2, [r5, #32]
   1599c:	orrs	r2, r3, r2
   159a0:	beq	159b0 <UnityAssertFloatsWithin@@Base+0x44>
   159a4:	add	r1, r0, #24
   159a8:	add	r2, r0, #8
   159ac:	b	15a7c <UnityAssertFloatsWithin@@Base+0x110>
   159b0:	vsub.f32	s2, s2, s1
   159b4:	ldrd	r2, [r0, #16]
   159b8:	adds	r2, r2, #1
   159bc:	adc	r3, r3, #0
   159c0:	strd	r2, [r0, #16]
   159c4:	vcmpe.f32	s2, #0.0
   159c8:	vmrs	APSR_nzcv, fpscr
   159cc:	bpl	159f0 <UnityAssertFloatsWithin@@Base+0x84>
   159d0:	ldrd	r2, [r0, #32]
   159d4:	vldr	s4, [pc, #288]	; 15afc <UnityAssertFloatsWithin@@Base+0x190>
   159d8:	adds	r2, r2, #1
   159dc:	vsub.f32	s2, s4, s2
   159e0:	adc	r3, r3, #0
   159e4:	strd	r2, [r0, #32]
   159e8:	add	r2, r0, #48	; 0x30
   159ec:	b	159f4 <UnityAssertFloatsWithin@@Base+0x88>
   159f0:	add	r2, r0, #40	; 0x28
   159f4:	ldrd	r6, [r2]
   159f8:	adds	r6, r6, #1
   159fc:	adc	r7, r7, #0
   15a00:	strd	r6, [r2]
   15a04:	vcmpe.f32	s0, #0.0
   15a08:	vmrs	APSR_nzcv, fpscr
   15a0c:	bpl	15a30 <UnityAssertFloatsWithin@@Base+0xc4>
   15a10:	ldrd	r2, [r0, #56]	; 0x38
   15a14:	vldr	s4, [pc, #224]	; 15afc <UnityAssertFloatsWithin@@Base+0x190>
   15a18:	adds	r2, r2, #1
   15a1c:	vsub.f32	s0, s4, s0
   15a20:	adc	r3, r3, #0
   15a24:	strd	r2, [r0, #56]	; 0x38
   15a28:	add	r2, r0, #72	; 0x48
   15a2c:	b	15a34 <UnityAssertFloatsWithin@@Base+0xc8>
   15a30:	add	r2, r0, #64	; 0x40
   15a34:	ldrd	r6, [r2]
   15a38:	adds	r6, r6, #1
   15a3c:	vldr	s4, [pc, #184]	; 15afc <UnityAssertFloatsWithin@@Base+0x190>
   15a40:	adc	r7, r7, #0
   15a44:	strd	r6, [r2]
   15a48:	vmul.f32	s4, s2, s4
   15a4c:	vcmp.f32	s4, #0.0
   15a50:	vmrs	APSR_nzcv, fpscr
   15a54:	bne	15ab0 <UnityAssertFloatsWithin@@Base+0x144>
   15a58:	ldrd	r2, [r0, #88]	; 0x58
   15a5c:	adds	r2, r2, #1
   15a60:	adc	r3, r3, #0
   15a64:	strd	r2, [r0, #88]	; 0x58
   15a68:	vcmpe.f32	s0, s2
   15a6c:	vmrs	APSR_nzcv, fpscr
   15a70:	bmi	15ab8 <UnityAssertFloatsWithin@@Base+0x14c>
   15a74:	add	r1, r0, #112	; 0x70
   15a78:	add	r2, r0, #104	; 0x68
   15a7c:	ldrd	r4, [r2]
   15a80:	adds	r4, r4, #1
   15a84:	adc	r5, r5, #0
   15a88:	strd	r4, [r2]
   15a8c:	ldrd	r2, [r1]
   15a90:	adds	r2, r2, #1
   15a94:	adc	r3, r3, #0
   15a98:	strd	r2, [r1]
   15a9c:	ldrd	r2, [r0, #120]	; 0x78
   15aa0:	adds	r2, r2, #1
   15aa4:	adc	r3, r3, #0
   15aa8:	strd	r2, [r0, #120]	; 0x78
   15aac:	pop	{r4, r5, r6, r7, fp, pc}
   15ab0:	add	r0, r0, #80	; 0x50
   15ab4:	b	15abc <UnityAssertFloatsWithin@@Base+0x150>
   15ab8:	add	r0, r0, #96	; 0x60
   15abc:	ldrd	r2, [r0]
   15ac0:	adds	r2, r2, #1
   15ac4:	adc	r3, r3, #0
   15ac8:	strd	r2, [r0]
   15acc:	mov	r0, r1
   15ad0:	bl	14dbc <UnityAssertBits@@Base+0x108>
   15ad4:	movw	r0, #52245	; 0xcc15
   15ad8:	movt	r0, #1
   15adc:	bl	14170 <UnityPrint@@Base>
   15ae0:	mov	r0, r4
   15ae4:	bl	14e24 <UnityAssertBits@@Base+0x170>
   15ae8:	mov	r0, #1
   15aec:	str	r0, [r5, #32]
   15af0:	add	r0, r5, #40	; 0x28
   15af4:	mov	r1, #1
   15af8:	bl	12638 <longjmp@plt>
   15afc:	andeq	r0, r0, r0

00015b00 <UnityAssertFloatSpecial@@Base>:
   15b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b04:	add	fp, sp, #28
   15b08:	sub	sp, sp, #4
   15b0c:	vpush	{d8}
   15b10:	sub	sp, sp, #16
   15b14:	mov	r5, r1
   15b18:	mov	r8, r0
   15b1c:	movw	r7, #59904	; 0xea00
   15b20:	movt	r7, #2
   15b24:	ldrd	r0, [r7]
   15b28:	adds	r0, r0, #1
   15b2c:	adc	r1, r1, #0
   15b30:	strd	r0, [r7]
   15b34:	movw	r0, #52648	; 0xcda8
   15b38:	movt	r0, #1
   15b3c:	vld1.64	{d16-d17}, [r0]
   15b40:	mov	r4, sp
   15b44:	vst1.64	{d16-d17}, [r4]
   15b48:	movw	sl, #63304	; 0xf748
   15b4c:	movt	sl, #2
   15b50:	ldrd	r0, [sl, #32]
   15b54:	orrs	r0, r1, r0
   15b58:	beq	15b74 <UnityAssertFloatSpecial@@Base+0x74>
   15b5c:	ldrd	r0, [r7, #8]
   15b60:	adds	r0, r0, #1
   15b64:	adc	r1, r1, #0
   15b68:	strd	r0, [r7, #8]
   15b6c:	add	r0, r7, #24
   15b70:	b	15d10 <UnityAssertFloatSpecial@@Base+0x210>
   15b74:	and	r9, r2, #1
   15b78:	ldrd	r0, [r7, #16]
   15b7c:	adds	r0, r0, #1
   15b80:	adc	r1, r1, #0
   15b84:	strd	r0, [r7, #16]
   15b88:	cmp	r2, #7
   15b8c:	bhi	15c9c <UnityAssertFloatSpecial@@Base+0x19c>
   15b90:	vmov.f32	s16, s0
   15b94:	add	r0, pc, #0
   15b98:	ldr	pc, [r0, r2, lsl #2]
   15b9c:			; <UNDEFINED> instruction: 0x00015bbc
   15ba0:			; <UNDEFINED> instruction: 0x00015bbc
   15ba4:	andeq	r5, r1, r4, ror #24
   15ba8:	andeq	r5, r1, r4, ror #24
   15bac:	strdeq	r5, [r1], -r4
   15bb0:	strdeq	r5, [r1], -r4
   15bb4:	andeq	r5, r1, r8, lsl ip
   15bb8:	andeq	r5, r1, r8, lsl ip
   15bbc:	ldrd	r0, [r7, #48]	; 0x30
   15bc0:	adds	r0, r0, #1
   15bc4:	adc	r1, r1, #0
   15bc8:	strd	r0, [r7, #48]	; 0x30
   15bcc:	vcmpe.f32	s16, #0.0
   15bd0:	vmrs	APSR_nzcv, fpscr
   15bd4:	mov	r6, #0
   15bd8:	movwgt	r6, #1
   15bdc:	vmov.f32	s0, s16
   15be0:	bl	126b0 <__isinff@plt>
   15be4:	mov	r1, #0
   15be8:	and	r0, r0, r6
   15bec:	add	r6, r7, #104	; 0x68
   15bf0:	b	15ce4 <UnityAssertFloatSpecial@@Base+0x1e4>
   15bf4:	ldrd	r0, [r7, #80]	; 0x50
   15bf8:	adds	r0, r0, #1
   15bfc:	adc	r1, r1, #0
   15c00:	strd	r0, [r7, #80]	; 0x50
   15c04:	add	r6, r7, #120	; 0x78
   15c08:	vmov.f32	s0, s16
   15c0c:	bl	12668 <__isnanf@plt>
   15c10:	mov	r1, #2
   15c14:	b	15ce4 <UnityAssertFloatSpecial@@Base+0x1e4>
   15c18:	ldrd	r0, [r7, #96]	; 0x60
   15c1c:	adds	r0, r0, #1
   15c20:	adc	r1, r1, #0
   15c24:	strd	r0, [r7, #96]	; 0x60
   15c28:	vmov.f32	s0, s16
   15c2c:	bl	126b0 <__isinff@plt>
   15c30:	mov	r6, r0
   15c34:	vmov.f32	s0, s16
   15c38:	bl	12668 <__isnanf@plt>
   15c3c:	orrs	r0, r0, r6
   15c40:	beq	15cc8 <UnityAssertFloatSpecial@@Base+0x1c8>
   15c44:	ldrd	r0, [r7, #128]	; 0x80
   15c48:	adds	r0, r0, #1
   15c4c:	adc	r1, r1, #0
   15c50:	strd	r0, [r7, #128]	; 0x80
   15c54:	add	r6, r7, #144	; 0x90
   15c58:	mov	r1, #3
   15c5c:	mov	r0, #0
   15c60:	b	15ce4 <UnityAssertFloatSpecial@@Base+0x1e4>
   15c64:	ldrd	r0, [r7, #64]	; 0x40
   15c68:	adds	r0, r0, #1
   15c6c:	adc	r1, r1, #0
   15c70:	strd	r0, [r7, #64]	; 0x40
   15c74:	mov	r6, #0
   15c78:	vcmpe.f32	s16, #0.0
   15c7c:	vmrs	APSR_nzcv, fpscr
   15c80:	movwmi	r6, #1
   15c84:	vmov.f32	s0, s16
   15c88:	bl	126b0 <__isinff@plt>
   15c8c:	and	r0, r0, r6
   15c90:	add	r6, r7, #112	; 0x70
   15c94:	mov	r1, #1
   15c98:	b	15ce4 <UnityAssertFloatSpecial@@Base+0x1e4>
   15c9c:	eor	r0, r9, #1
   15ca0:	ldrd	r2, [r7, #32]
   15ca4:	adds	r2, r2, #1
   15ca8:	adc	r3, r3, #0
   15cac:	strd	r2, [r7, #32]
   15cb0:	movw	r1, #52428	; 0xcccc
   15cb4:	movt	r1, #1
   15cb8:	str	r1, [sp]
   15cbc:	add	r6, r7, #160	; 0xa0
   15cc0:	mov	r1, #0
   15cc4:	b	15ce4 <UnityAssertFloatSpecial@@Base+0x1e4>
   15cc8:	ldrd	r0, [r7, #136]	; 0x88
   15ccc:	adds	r0, r0, #1
   15cd0:	adc	r1, r1, #0
   15cd4:	strd	r0, [r7, #136]	; 0x88
   15cd8:	add	r6, r7, #152	; 0x98
   15cdc:	mov	r1, #3
   15ce0:	mov	r0, #1
   15ce4:	ldrd	r2, [r6]
   15ce8:	adds	r2, r2, #1
   15cec:	adc	r3, r3, #0
   15cf0:	strd	r2, [r6]
   15cf4:	cmp	r0, r9
   15cf8:	bne	15d40 <UnityAssertFloatSpecial@@Base+0x240>
   15cfc:	ldrd	r0, [r7, #176]	; 0xb0
   15d00:	adds	r0, r0, #1
   15d04:	adc	r1, r1, #0
   15d08:	strd	r0, [r7, #176]	; 0xb0
   15d0c:	add	r0, r7, #232	; 0xe8
   15d10:	ldrd	r2, [r0]
   15d14:	adds	r2, r2, #1
   15d18:	adc	r3, r3, #0
   15d1c:	strd	r2, [r0]
   15d20:	ldrd	r0, [r7, #240]	; 0xf0
   15d24:	adds	r0, r0, #1
   15d28:	adc	r1, r1, #0
   15d2c:	strd	r0, [r7, #240]	; 0xf0
   15d30:	sub	sp, fp, #40	; 0x28
   15d34:	vpop	{d8}
   15d38:	add	sp, sp, #4
   15d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d40:	mov	r6, r1
   15d44:	ldrd	r0, [r7, #168]	; 0xa8
   15d48:	adds	r0, r0, #1
   15d4c:	adc	r1, r1, #0
   15d50:	strd	r0, [r7, #168]	; 0xa8
   15d54:	mov	r0, r5
   15d58:	bl	14dbc <UnityAssertBits@@Base+0x108>
   15d5c:	movw	r0, #52188	; 0xcbdc
   15d60:	movt	r0, #1
   15d64:	bl	14170 <UnityPrint@@Base>
   15d68:	cmp	r9, #0
   15d6c:	beq	15d78 <UnityAssertFloatSpecial@@Base+0x278>
   15d70:	add	r0, r7, #184	; 0xb8
   15d74:	b	15d98 <UnityAssertFloatSpecial@@Base+0x298>
   15d78:	ldrd	r0, [r7, #192]	; 0xc0
   15d7c:	adds	r0, r0, #1
   15d80:	adc	r1, r1, #0
   15d84:	strd	r0, [r7, #192]	; 0xc0
   15d88:	movw	r0, #52380	; 0xcc9c
   15d8c:	movt	r0, #1
   15d90:	bl	14170 <UnityPrint@@Base>
   15d94:	add	r0, r7, #200	; 0xc8
   15d98:	ldrd	r2, [r0]
   15d9c:	adds	r2, r2, #1
   15da0:	adc	r3, r3, #0
   15da4:	strd	r2, [r0]
   15da8:	ldr	r5, [r4, r6, lsl #2]
   15dac:	mov	r0, r5
   15db0:	bl	14170 <UnityPrint@@Base>
   15db4:	movw	r0, #52199	; 0xcbe7
   15db8:	movt	r0, #1
   15dbc:	bl	14170 <UnityPrint@@Base>
   15dc0:	cmp	r9, #0
   15dc4:	beq	15dec <UnityAssertFloatSpecial@@Base+0x2ec>
   15dc8:	ldrd	r0, [r7, #208]	; 0xd0
   15dcc:	adds	r0, r0, #1
   15dd0:	adc	r1, r1, #0
   15dd4:	strd	r0, [r7, #208]	; 0xd0
   15dd8:	movw	r0, #52380	; 0xcc9c
   15ddc:	movt	r0, #1
   15de0:	bl	14170 <UnityPrint@@Base>
   15de4:	add	r0, r7, #224	; 0xe0
   15de8:	b	15df0 <UnityAssertFloatSpecial@@Base+0x2f0>
   15dec:	add	r0, r7, #216	; 0xd8
   15df0:	ldrd	r2, [r0]
   15df4:	adds	r2, r2, #1
   15df8:	adc	r3, r3, #0
   15dfc:	strd	r2, [r0]
   15e00:	mov	r0, r5
   15e04:	bl	14170 <UnityPrint@@Base>
   15e08:	mov	r0, r8
   15e0c:	bl	14e24 <UnityAssertBits@@Base+0x170>
   15e10:	mov	r0, #1
   15e14:	str	r0, [sl, #32]
   15e18:	add	r0, sl, #40	; 0x28
   15e1c:	mov	r1, #1
   15e20:	bl	12638 <longjmp@plt>

00015e24 <UnityAssertNumbersWithin@@Base>:
   15e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e28:	add	fp, sp, #28
   15e2c:	sub	sp, sp, #4
   15e30:	mov	r9, r3
   15e34:	mov	r6, r1
   15e38:	mov	r7, r0
   15e3c:	movw	r1, #60160	; 0xeb00
   15e40:	movt	r1, #2
   15e44:	ldm	r1, {r0, r3}
   15e48:	adds	r0, r0, #1
   15e4c:	adc	r3, r3, #0
   15e50:	stm	r1, {r0, r3}
   15e54:	movw	sl, #63304	; 0xf748
   15e58:	movt	sl, #2
   15e5c:	ldr	r0, [sl, #32]
   15e60:	ldr	r3, [sl, #36]	; 0x24
   15e64:	orrs	r0, r3, r0
   15e68:	beq	15e74 <UnityAssertNumbersWithin@@Base+0x50>
   15e6c:	add	r0, r1, #8
   15e70:	b	15f94 <UnityAssertNumbersWithin@@Base+0x170>
   15e74:	mov	r4, r2
   15e78:	ldr	r8, [fp, #12]
   15e7c:	ldr	r0, [r1, #16]
   15e80:	ldr	r3, [r1, #20]
   15e84:	adds	r0, r0, #1
   15e88:	adc	r3, r3, #0
   15e8c:	str	r0, [r1, #16]
   15e90:	str	r3, [r1, #20]
   15e94:	tst	r8, #16
   15e98:	bne	15ee0 <UnityAssertNumbersWithin@@Base+0xbc>
   15e9c:	ldr	r0, [r1, #32]
   15ea0:	ldr	r3, [r1, #36]	; 0x24
   15ea4:	adds	r0, r0, #1
   15ea8:	adc	r3, r3, #0
   15eac:	str	r0, [r1, #32]
   15eb0:	str	r3, [r1, #36]	; 0x24
   15eb4:	cmp	r4, r6
   15eb8:	bls	15f24 <UnityAssertNumbersWithin@@Base+0x100>
   15ebc:	ldr	r0, [r1, #72]	; 0x48
   15ec0:	ldr	r3, [r1, #76]	; 0x4c
   15ec4:	adds	r0, r0, #1
   15ec8:	adc	r3, r3, #0
   15ecc:	str	r0, [r1, #72]	; 0x48
   15ed0:	str	r3, [r1, #76]	; 0x4c
   15ed4:	sub	r0, r4, r6
   15ed8:	add	r2, r1, #88	; 0x58
   15edc:	b	15f68 <UnityAssertNumbersWithin@@Base+0x144>
   15ee0:	ldr	r0, [r1, #24]
   15ee4:	ldr	r3, [r1, #28]
   15ee8:	adds	r0, r0, #1
   15eec:	adc	r3, r3, #0
   15ef0:	str	r0, [r1, #24]
   15ef4:	str	r3, [r1, #28]
   15ef8:	cmp	r4, r6
   15efc:	ble	15f48 <UnityAssertNumbersWithin@@Base+0x124>
   15f00:	ldr	r0, [r1, #40]	; 0x28
   15f04:	ldr	r3, [r1, #44]	; 0x2c
   15f08:	adds	r0, r0, #1
   15f0c:	adc	r3, r3, #0
   15f10:	str	r0, [r1, #40]	; 0x28
   15f14:	str	r3, [r1, #44]	; 0x2c
   15f18:	sub	r0, r4, r6
   15f1c:	add	r2, r1, #56	; 0x38
   15f20:	b	15f68 <UnityAssertNumbersWithin@@Base+0x144>
   15f24:	ldr	r0, [r1, #80]	; 0x50
   15f28:	ldr	r3, [r1, #84]	; 0x54
   15f2c:	adds	r0, r0, #1
   15f30:	adc	r3, r3, #0
   15f34:	str	r0, [r1, #80]	; 0x50
   15f38:	str	r3, [r1, #84]	; 0x54
   15f3c:	sub	r0, r6, r4
   15f40:	add	r2, r1, #96	; 0x60
   15f44:	b	15f68 <UnityAssertNumbersWithin@@Base+0x144>
   15f48:	ldr	r0, [r1, #48]	; 0x30
   15f4c:	ldr	r3, [r1, #52]	; 0x34
   15f50:	adds	r0, r0, #1
   15f54:	adc	r3, r3, #0
   15f58:	str	r0, [r1, #48]	; 0x30
   15f5c:	str	r3, [r1, #52]	; 0x34
   15f60:	sub	r0, r6, r4
   15f64:	add	r2, r1, #64	; 0x40
   15f68:	mov	r3, #0
   15f6c:	cmp	r0, r7
   15f70:	movwhi	r3, #1
   15f74:	str	r3, [sl, #32]
   15f78:	ldm	r2, {r3, r5}
   15f7c:	adds	r3, r3, #1
   15f80:	adc	r5, r5, #0
   15f84:	stm	r2, {r3, r5}
   15f88:	cmp	r0, r7
   15f8c:	bhi	15fc4 <UnityAssertNumbersWithin@@Base+0x1a0>
   15f90:	add	r0, r1, #112	; 0x70
   15f94:	ldrd	r2, [r0]
   15f98:	adds	r2, r2, #1
   15f9c:	adc	r3, r3, #0
   15fa0:	strd	r2, [r0]
   15fa4:	ldr	r0, [r1, #120]	; 0x78
   15fa8:	ldr	r3, [r1, #124]	; 0x7c
   15fac:	adds	r0, r0, #1
   15fb0:	adc	r3, r3, #0
   15fb4:	str	r0, [r1, #120]	; 0x78
   15fb8:	str	r3, [r1, #124]	; 0x7c
   15fbc:	sub	sp, fp, #28
   15fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fc4:	ldr	r0, [fp, #8]
   15fc8:	ldrd	r2, [r1, #104]	; 0x68
   15fcc:	adds	r2, r2, #1
   15fd0:	adc	r3, r3, #0
   15fd4:	strd	r2, [r1, #104]	; 0x68
   15fd8:	bl	14dbc <UnityAssertBits@@Base+0x108>
   15fdc:	movw	r0, #52245	; 0xcc15
   15fe0:	movt	r0, #1
   15fe4:	bl	14170 <UnityPrint@@Base>
   15fe8:	mov	r0, r7
   15fec:	mov	r1, r8
   15ff0:	bl	14644 <UnityPrintNumberByStyle@@Base>
   15ff4:	movw	r0, #52188	; 0xcbdc
   15ff8:	movt	r0, #1
   15ffc:	bl	14170 <UnityPrint@@Base>
   16000:	mov	r0, r6
   16004:	mov	r1, r8
   16008:	bl	14644 <UnityPrintNumberByStyle@@Base>
   1600c:	movw	r0, #52199	; 0xcbe7
   16010:	movt	r0, #1
   16014:	bl	14170 <UnityPrint@@Base>
   16018:	mov	r0, r4
   1601c:	mov	r1, r8
   16020:	bl	14644 <UnityPrintNumberByStyle@@Base>
   16024:	mov	r0, r9
   16028:	bl	14e24 <UnityAssertBits@@Base+0x170>
   1602c:	mov	r0, #1
   16030:	str	r0, [sl, #32]
   16034:	add	r0, sl, #40	; 0x28
   16038:	mov	r1, #1
   1603c:	bl	12638 <longjmp@plt>

00016040 <UnityAssertEqualString@@Base>:
   16040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16044:	add	fp, sp, #28
   16048:	sub	sp, sp, #12
   1604c:	mov	r4, r2
   16050:	mov	r8, r1
   16054:	movw	lr, #60288	; 0xeb80
   16058:	movt	lr, #2
   1605c:	ldr	r2, [lr]
   16060:	ldr	r1, [lr, #4]
   16064:	adds	r2, r2, #1
   16068:	adc	r1, r1, #0
   1606c:	str	r2, [lr]
   16070:	str	r1, [lr, #4]
   16074:	movw	r6, #63304	; 0xf748
   16078:	movt	r6, #2
   1607c:	ldr	r2, [r6, #32]
   16080:	ldr	r1, [r6, #36]	; 0x24
   16084:	orrs	r1, r1, r2
   16088:	beq	16098 <UnityAssertEqualString@@Base+0x58>
   1608c:	add	r1, lr, #24
   16090:	add	r2, lr, #8
   16094:	b	161e0 <UnityAssertEqualString@@Base+0x1a0>
   16098:	mov	r5, r0
   1609c:	ldr	r2, [lr, #16]
   160a0:	ldr	r1, [lr, #20]
   160a4:	adds	r2, r2, #1
   160a8:	adc	r1, r1, #0
   160ac:	str	r2, [lr, #16]
   160b0:	str	r1, [lr, #20]
   160b4:	cmp	r0, #0
   160b8:	cmpne	r8, #0
   160bc:	bne	160e0 <UnityAssertEqualString@@Base+0xa0>
   160c0:	ldrd	r0, [lr, #40]	; 0x28
   160c4:	adds	r0, r0, #1
   160c8:	adc	r1, r1, #0
   160cc:	strd	r0, [lr, #40]	; 0x28
   160d0:	cmp	r5, r8
   160d4:	bne	16218 <UnityAssertEqualString@@Base+0x1d8>
   160d8:	add	r9, lr, #128	; 0x80
   160dc:	b	161b4 <UnityAssertEqualString@@Base+0x174>
   160e0:	str	r4, [sp, #8]
   160e4:	ldr	r2, [lr, #32]
   160e8:	ldr	r1, [lr, #36]	; 0x24
   160ec:	adds	r2, r2, #1
   160f0:	adc	r1, r1, #0
   160f4:	str	r2, [lr, #32]
   160f8:	str	r1, [lr, #36]	; 0x24
   160fc:	add	r7, lr, #48	; 0x30
   16100:	add	r2, lr, #56	; 0x38
   16104:	add	r4, lr, #72	; 0x48
   16108:	add	r9, lr, #80	; 0x50
   1610c:	add	r0, lr, #104	; 0x68
   16110:	str	r0, [sp, #4]
   16114:	add	r0, lr, #88	; 0x58
   16118:	str	r0, [sp]
   1611c:	add	ip, lr, #112	; 0x70
   16120:	mov	r6, r5
   16124:	mov	sl, r8
   16128:	ldrd	r0, [r7]
   1612c:	adds	r0, r0, #1
   16130:	adc	r1, r1, #0
   16134:	strd	r0, [r7]
   16138:	ldrb	r0, [r6]
   1613c:	cmp	r0, #0
   16140:	mov	r7, r2
   16144:	bne	16168 <UnityAssertEqualString@@Base+0x128>
   16148:	ldrd	r0, [lr, #64]	; 0x40
   1614c:	adds	r0, r0, #1
   16150:	adc	r1, r1, #0
   16154:	strd	r0, [lr, #64]	; 0x40
   16158:	ldrb	r0, [sl]
   1615c:	cmp	r0, #0
   16160:	mov	r7, r4
   16164:	beq	161a8 <UnityAssertEqualString@@Base+0x168>
   16168:	ldrd	r0, [r7]
   1616c:	adds	r0, r0, #1
   16170:	adc	r1, r1, #0
   16174:	strd	r0, [r7]
   16178:	ldrb	r0, [sl]
   1617c:	ldrb	r1, [r6]
   16180:	cmp	r1, r0
   16184:	bne	1622c <UnityAssertEqualString@@Base+0x1ec>
   16188:	ldrd	r0, [lr, #96]	; 0x60
   1618c:	adds	r0, r0, #1
   16190:	adc	r1, r1, #0
   16194:	strd	r0, [lr, #96]	; 0x60
   16198:	add	r6, r6, #1
   1619c:	add	sl, sl, #1
   161a0:	mov	r7, ip
   161a4:	b	16128 <UnityAssertEqualString@@Base+0xe8>
   161a8:	ldr	r4, [sp, #8]
   161ac:	movw	r6, #63304	; 0xf748
   161b0:	movt	r6, #2
   161b4:	ldr	r0, [r6, #32]
   161b8:	ldr	r2, [r9]
   161bc:	ldr	r1, [r9, #4]
   161c0:	adds	r2, r2, #1
   161c4:	adc	r1, r1, #0
   161c8:	str	r2, [r9]
   161cc:	str	r1, [r9, #4]
   161d0:	cmp	r0, #0
   161d4:	bne	16268 <UnityAssertEqualString@@Base+0x228>
   161d8:	add	r1, lr, #160	; 0xa0
   161dc:	add	r2, lr, #152	; 0x98
   161e0:	ldm	r2, {r0, r3}
   161e4:	adds	r0, r0, #1
   161e8:	adc	r3, r3, #0
   161ec:	stm	r2, {r0, r3}
   161f0:	ldm	r1, {r0, r3}
   161f4:	adds	r0, r0, #1
   161f8:	adc	r3, r3, #0
   161fc:	stm	r1, {r0, r3}
   16200:	ldrd	r0, [lr, #168]	; 0xa8
   16204:	adds	r0, r0, #1
   16208:	adc	r1, r1, #0
   1620c:	strd	r0, [lr, #168]	; 0xa8
   16210:	sub	sp, fp, #28
   16214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16218:	str	r4, [sp, #8]
   1621c:	add	r0, lr, #136	; 0x88
   16220:	str	r0, [sp, #4]
   16224:	add	r0, lr, #120	; 0x78
   16228:	str	r0, [sp]
   1622c:	ldr	r2, [sp]
   16230:	ldrd	r0, [r2]
   16234:	adds	r0, r0, #1
   16238:	adc	r1, r1, #0
   1623c:	strd	r0, [r2]
   16240:	mov	r0, #1
   16244:	movw	r6, #63304	; 0xf748
   16248:	movt	r6, #2
   1624c:	str	r0, [r6, #32]
   16250:	ldr	r2, [sp, #4]
   16254:	ldrd	r0, [r2]
   16258:	adds	r0, r0, #1
   1625c:	adc	r1, r1, #0
   16260:	strd	r0, [r2]
   16264:	ldr	r4, [sp, #8]
   16268:	ldrd	r0, [lr, #144]	; 0x90
   1626c:	adds	r0, r0, #1
   16270:	adc	r1, r1, #0
   16274:	strd	r0, [lr, #144]	; 0x90
   16278:	mov	r0, r3
   1627c:	bl	14dbc <UnityAssertBits@@Base+0x108>
   16280:	mov	r0, r5
   16284:	mov	r1, r8
   16288:	bl	162a8 <UnityAssertEqualString@@Base+0x268>
   1628c:	mov	r0, r4
   16290:	bl	14e24 <UnityAssertBits@@Base+0x170>
   16294:	mov	r0, #1
   16298:	str	r0, [r6, #32]
   1629c:	add	r0, r6, #40	; 0x28
   162a0:	mov	r1, #1
   162a4:	bl	12638 <longjmp@plt>
   162a8:	push	{r4, r5, r6, sl, fp, lr}
   162ac:	add	fp, sp, #16
   162b0:	mov	r4, r1
   162b4:	mov	r5, r0
   162b8:	movw	r6, #60464	; 0xec30
   162bc:	movt	r6, #2
   162c0:	ldrd	r0, [r6]
   162c4:	adds	r0, r0, #1
   162c8:	adc	r1, r1, #0
   162cc:	strd	r0, [r6]
   162d0:	movw	r0, #52188	; 0xcbdc
   162d4:	movt	r0, #1
   162d8:	bl	14170 <UnityPrint@@Base>
   162dc:	cmp	r5, #0
   162e0:	beq	16314 <UnityAssertEqualString@@Base+0x2d4>
   162e4:	ldrd	r0, [r6, #8]
   162e8:	adds	r0, r0, #1
   162ec:	adc	r1, r1, #0
   162f0:	strd	r0, [r6, #8]
   162f4:	mov	r0, #39	; 0x27
   162f8:	bl	12788 <putchar@plt>
   162fc:	mov	r0, r5
   16300:	bl	14170 <UnityPrint@@Base>
   16304:	mov	r0, #39	; 0x27
   16308:	bl	12788 <putchar@plt>
   1630c:	add	r0, r6, #24
   16310:	b	16334 <UnityAssertEqualString@@Base+0x2f4>
   16314:	ldrd	r0, [r6, #16]
   16318:	adds	r0, r0, #1
   1631c:	adc	r1, r1, #0
   16320:	strd	r0, [r6, #16]
   16324:	movw	r0, #52180	; 0xcbd4
   16328:	movt	r0, #1
   1632c:	bl	14170 <UnityPrint@@Base>
   16330:	add	r0, r6, #32
   16334:	ldrd	r2, [r0]
   16338:	adds	r2, r2, #1
   1633c:	adc	r3, r3, #0
   16340:	strd	r2, [r0]
   16344:	movw	r0, #52199	; 0xcbe7
   16348:	movt	r0, #1
   1634c:	bl	14170 <UnityPrint@@Base>
   16350:	cmp	r4, #0
   16354:	beq	16388 <UnityAssertEqualString@@Base+0x348>
   16358:	ldrd	r0, [r6, #40]	; 0x28
   1635c:	adds	r0, r0, #1
   16360:	adc	r1, r1, #0
   16364:	strd	r0, [r6, #40]	; 0x28
   16368:	mov	r0, #39	; 0x27
   1636c:	bl	12788 <putchar@plt>
   16370:	mov	r0, r4
   16374:	bl	14170 <UnityPrint@@Base>
   16378:	mov	r0, #39	; 0x27
   1637c:	bl	12788 <putchar@plt>
   16380:	add	r0, r6, #56	; 0x38
   16384:	b	163a8 <UnityAssertEqualString@@Base+0x368>
   16388:	ldrd	r0, [r6, #48]	; 0x30
   1638c:	adds	r0, r0, #1
   16390:	adc	r1, r1, #0
   16394:	strd	r0, [r6, #48]	; 0x30
   16398:	movw	r0, #52180	; 0xcbd4
   1639c:	movt	r0, #1
   163a0:	bl	14170 <UnityPrint@@Base>
   163a4:	add	r0, r6, #64	; 0x40
   163a8:	ldrd	r2, [r0]
   163ac:	adds	r2, r2, #1
   163b0:	adc	r3, r3, #0
   163b4:	strd	r2, [r0]
   163b8:	ldrd	r0, [r6, #72]	; 0x48
   163bc:	adds	r0, r0, #1
   163c0:	adc	r1, r1, #0
   163c4:	strd	r0, [r6, #72]	; 0x48
   163c8:	pop	{r4, r5, r6, sl, fp, pc}

000163cc <UnityAssertEqualStringLen@@Base>:
   163cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163d0:	add	fp, sp, #28
   163d4:	sub	sp, sp, #28
   163d8:	mov	r6, r3
   163dc:	mov	r9, r0
   163e0:	movw	sl, #60544	; 0xec80
   163e4:	movt	sl, #2
   163e8:	ldm	sl, {r0, r3}
   163ec:	adds	r0, r0, #1
   163f0:	adc	r3, r3, #0
   163f4:	stm	sl, {r0, r3}
   163f8:	movw	r7, #63304	; 0xf748
   163fc:	movt	r7, #2
   16400:	ldr	r0, [r7, #32]
   16404:	ldr	r3, [r7, #36]	; 0x24
   16408:	orrs	r0, r3, r0
   1640c:	beq	1641c <UnityAssertEqualStringLen@@Base+0x50>
   16410:	add	r0, sl, #24
   16414:	add	r2, sl, #8
   16418:	b	16594 <UnityAssertEqualStringLen@@Base+0x1c8>
   1641c:	ldr	r0, [sl, #16]
   16420:	ldr	r3, [sl, #20]
   16424:	adds	r0, r0, #1
   16428:	adc	r3, r3, #0
   1642c:	str	r0, [sl, #16]
   16430:	str	r3, [sl, #20]
   16434:	cmp	r9, #0
   16438:	str	r2, [sp, #20]
   1643c:	str	r1, [sp, #16]
   16440:	cmpne	r1, #0
   16444:	bne	16470 <UnityAssertEqualStringLen@@Base+0xa4>
   16448:	ldr	r0, [sl, #40]	; 0x28
   1644c:	ldr	r3, [sl, #44]	; 0x2c
   16450:	adds	r0, r0, #1
   16454:	adc	r3, r3, #0
   16458:	str	r0, [sl, #40]	; 0x28
   1645c:	str	r3, [sl, #44]	; 0x2c
   16460:	cmp	r9, r1
   16464:	bne	165cc <UnityAssertEqualStringLen@@Base+0x200>
   16468:	add	r8, sl, #144	; 0x90
   1646c:	b	16570 <UnityAssertEqualStringLen@@Base+0x1a4>
   16470:	str	r6, [sp, #24]
   16474:	ldr	r0, [sl, #32]
   16478:	ldr	r3, [sl, #36]	; 0x24
   1647c:	adds	r0, r0, #1
   16480:	adc	r3, r3, #0
   16484:	str	r0, [sl, #32]
   16488:	str	r3, [sl, #36]	; 0x24
   1648c:	add	r4, sl, #48	; 0x30
   16490:	add	ip, sl, #56	; 0x38
   16494:	add	r3, sl, #72	; 0x48
   16498:	add	r8, sl, #80	; 0x50
   1649c:	add	r0, sl, #96	; 0x60
   164a0:	str	r0, [sp, #12]
   164a4:	add	r0, sl, #120	; 0x78
   164a8:	str	r0, [sp, #8]
   164ac:	add	r0, sl, #104	; 0x68
   164b0:	str	r0, [sp, #4]
   164b4:	add	lr, sl, #128	; 0x80
   164b8:	mov	r7, r9
   164bc:	mov	r6, r1
   164c0:	mov	r5, r2
   164c4:	ldrd	r0, [r4]
   164c8:	adds	r0, r0, #1
   164cc:	adc	r1, r1, #0
   164d0:	strd	r0, [r4]
   164d4:	ldrb	r0, [r7]
   164d8:	cmp	r0, #0
   164dc:	mov	r4, ip
   164e0:	bne	16504 <UnityAssertEqualStringLen@@Base+0x138>
   164e4:	ldrd	r0, [sl, #64]	; 0x40
   164e8:	adds	r0, r0, #1
   164ec:	adc	r1, r1, #0
   164f0:	strd	r0, [sl, #64]	; 0x40
   164f4:	ldrb	r0, [r6]
   164f8:	cmp	r0, #0
   164fc:	mov	r4, r3
   16500:	beq	16564 <UnityAssertEqualStringLen@@Base+0x198>
   16504:	ldrd	r0, [r4]
   16508:	adds	r0, r0, #1
   1650c:	adc	r1, r1, #0
   16510:	strd	r0, [r4]
   16514:	cmp	r5, #0
   16518:	beq	16560 <UnityAssertEqualStringLen@@Base+0x194>
   1651c:	ldrd	r0, [sl, #88]	; 0x58
   16520:	adds	r0, r0, #1
   16524:	adc	r1, r1, #0
   16528:	strd	r0, [sl, #88]	; 0x58
   1652c:	ldrb	r0, [r6]
   16530:	ldrb	r1, [r7]
   16534:	cmp	r1, r0
   16538:	bne	165e0 <UnityAssertEqualStringLen@@Base+0x214>
   1653c:	ldrd	r0, [sl, #112]	; 0x70
   16540:	adds	r0, r0, #1
   16544:	adc	r1, r1, #0
   16548:	strd	r0, [sl, #112]	; 0x70
   1654c:	add	r7, r7, #1
   16550:	add	r6, r6, #1
   16554:	sub	r5, r5, #1
   16558:	mov	r4, lr
   1655c:	b	164c4 <UnityAssertEqualStringLen@@Base+0xf8>
   16560:	ldr	r8, [sp, #12]
   16564:	ldr	r6, [sp, #24]
   16568:	movw	r7, #63304	; 0xf748
   1656c:	movt	r7, #2
   16570:	ldr	r0, [r7, #32]
   16574:	ldrd	r4, [r8]
   16578:	adds	r4, r4, #1
   1657c:	adc	r5, r5, #0
   16580:	strd	r4, [r8]
   16584:	cmp	r0, #0
   16588:	bne	1661c <UnityAssertEqualStringLen@@Base+0x250>
   1658c:	add	r0, sl, #176	; 0xb0
   16590:	add	r2, sl, #168	; 0xa8
   16594:	ldrd	r4, [r2]
   16598:	adds	r4, r4, #1
   1659c:	adc	r5, r5, #0
   165a0:	strd	r4, [r2]
   165a4:	ldrd	r2, [r0]
   165a8:	adds	r2, r2, #1
   165ac:	adc	r3, r3, #0
   165b0:	strd	r2, [r0]
   165b4:	ldrd	r0, [sl, #184]	; 0xb8
   165b8:	adds	r0, r0, #1
   165bc:	adc	r1, r1, #0
   165c0:	strd	r0, [sl, #184]	; 0xb8
   165c4:	sub	sp, fp, #28
   165c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165cc:	str	r6, [sp, #24]
   165d0:	add	r0, sl, #152	; 0x98
   165d4:	str	r0, [sp, #8]
   165d8:	add	r0, sl, #136	; 0x88
   165dc:	str	r0, [sp, #4]
   165e0:	ldr	r2, [sp, #4]
   165e4:	ldrd	r0, [r2]
   165e8:	adds	r0, r0, #1
   165ec:	adc	r1, r1, #0
   165f0:	strd	r0, [r2]
   165f4:	mov	r0, #1
   165f8:	movw	r7, #63304	; 0xf748
   165fc:	movt	r7, #2
   16600:	str	r0, [r7, #32]
   16604:	ldr	r2, [sp, #8]
   16608:	ldrd	r0, [r2]
   1660c:	adds	r0, r0, #1
   16610:	adc	r1, r1, #0
   16614:	strd	r0, [r2]
   16618:	ldr	r6, [sp, #24]
   1661c:	ldr	r0, [fp, #8]
   16620:	ldrd	r2, [sl, #160]	; 0xa0
   16624:	adds	r2, r2, #1
   16628:	adc	r3, r3, #0
   1662c:	strd	r2, [sl, #160]	; 0xa0
   16630:	bl	14dbc <UnityAssertBits@@Base+0x108>
   16634:	mov	r0, r9
   16638:	ldr	r1, [sp, #16]
   1663c:	ldr	r2, [sp, #20]
   16640:	bl	16660 <UnityAssertEqualStringLen@@Base+0x294>
   16644:	mov	r0, r6
   16648:	bl	14e24 <UnityAssertBits@@Base+0x170>
   1664c:	mov	r0, #1
   16650:	str	r0, [r7, #32]
   16654:	add	r0, r7, #40	; 0x28
   16658:	mov	r1, #1
   1665c:	bl	12638 <longjmp@plt>
   16660:	push	{r4, r5, r6, r7, fp, lr}
   16664:	add	fp, sp, #16
   16668:	mov	r4, r2
   1666c:	mov	r5, r1
   16670:	mov	r6, r0
   16674:	movw	r7, #60736	; 0xed40
   16678:	movt	r7, #2
   1667c:	ldrd	r0, [r7]
   16680:	adds	r0, r0, #1
   16684:	adc	r1, r1, #0
   16688:	strd	r0, [r7]
   1668c:	movw	r0, #52188	; 0xcbdc
   16690:	movt	r0, #1
   16694:	bl	14170 <UnityPrint@@Base>
   16698:	cmp	r6, #0
   1669c:	beq	166d4 <UnityAssertEqualStringLen@@Base+0x308>
   166a0:	ldrd	r0, [r7, #8]
   166a4:	adds	r0, r0, #1
   166a8:	adc	r1, r1, #0
   166ac:	strd	r0, [r7, #8]
   166b0:	mov	r0, #39	; 0x27
   166b4:	bl	12788 <putchar@plt>
   166b8:	mov	r0, r6
   166bc:	mov	r1, r4
   166c0:	bl	14444 <UnityPrintLen@@Base>
   166c4:	mov	r0, #39	; 0x27
   166c8:	bl	12788 <putchar@plt>
   166cc:	add	r0, r7, #24
   166d0:	b	166f4 <UnityAssertEqualStringLen@@Base+0x328>
   166d4:	ldrd	r0, [r7, #16]
   166d8:	adds	r0, r0, #1
   166dc:	adc	r1, r1, #0
   166e0:	strd	r0, [r7, #16]
   166e4:	movw	r0, #52180	; 0xcbd4
   166e8:	movt	r0, #1
   166ec:	bl	14170 <UnityPrint@@Base>
   166f0:	add	r0, r7, #32
   166f4:	ldrd	r2, [r0]
   166f8:	adds	r2, r2, #1
   166fc:	adc	r3, r3, #0
   16700:	strd	r2, [r0]
   16704:	movw	r0, #52199	; 0xcbe7
   16708:	movt	r0, #1
   1670c:	bl	14170 <UnityPrint@@Base>
   16710:	cmp	r5, #0
   16714:	beq	1674c <UnityAssertEqualStringLen@@Base+0x380>
   16718:	ldrd	r0, [r7, #40]	; 0x28
   1671c:	adds	r0, r0, #1
   16720:	adc	r1, r1, #0
   16724:	strd	r0, [r7, #40]	; 0x28
   16728:	mov	r0, #39	; 0x27
   1672c:	bl	12788 <putchar@plt>
   16730:	mov	r0, r5
   16734:	mov	r1, r4
   16738:	bl	14444 <UnityPrintLen@@Base>
   1673c:	mov	r0, #39	; 0x27
   16740:	bl	12788 <putchar@plt>
   16744:	add	r0, r7, #56	; 0x38
   16748:	b	1676c <UnityAssertEqualStringLen@@Base+0x3a0>
   1674c:	ldrd	r0, [r7, #48]	; 0x30
   16750:	adds	r0, r0, #1
   16754:	adc	r1, r1, #0
   16758:	strd	r0, [r7, #48]	; 0x30
   1675c:	movw	r0, #52180	; 0xcbd4
   16760:	movt	r0, #1
   16764:	bl	14170 <UnityPrint@@Base>
   16768:	add	r0, r7, #64	; 0x40
   1676c:	ldrd	r2, [r0]
   16770:	adds	r2, r2, #1
   16774:	adc	r3, r3, #0
   16778:	strd	r2, [r0]
   1677c:	ldrd	r0, [r7, #72]	; 0x48
   16780:	adds	r0, r0, #1
   16784:	adc	r1, r1, #0
   16788:	strd	r0, [r7, #72]	; 0x48
   1678c:	pop	{r4, r5, r6, r7, fp, pc}

00016790 <UnityAssertEqualStringArray@@Base>:
   16790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16794:	add	fp, sp, #28
   16798:	sub	sp, sp, #20
   1679c:	mov	r6, r1
   167a0:	mov	r5, r0
   167a4:	movw	r8, #60816	; 0xed90
   167a8:	movt	r8, #2
   167ac:	ldrd	r0, [r8]
   167b0:	adds	r0, r0, #1
   167b4:	adc	r1, r1, #0
   167b8:	strd	r0, [r8]
   167bc:	movw	r9, #63304	; 0xf748
   167c0:	movt	r9, #2
   167c4:	ldrd	r0, [r9, #32]
   167c8:	orrs	r0, r1, r0
   167cc:	beq	167e8 <UnityAssertEqualStringArray@@Base+0x58>
   167d0:	ldrd	r0, [r8, #8]
   167d4:	adds	r0, r0, #1
   167d8:	adc	r1, r1, #0
   167dc:	strd	r0, [r8, #8]
   167e0:	add	r0, r8, #24
   167e4:	b	16a08 <UnityAssertEqualStringArray@@Base+0x278>
   167e8:	mov	r4, r3
   167ec:	mov	r7, r2
   167f0:	ldr	r2, [fp, #8]
   167f4:	ldrd	r0, [r8, #16]
   167f8:	adds	r0, r0, #1
   167fc:	adc	r1, r1, #0
   16800:	strd	r0, [r8, #16]
   16804:	cmp	r7, #0
   16808:	beq	16b10 <UnityAssertEqualStringArray@@Base+0x380>
   1680c:	ldrd	r0, [r8, #40]	; 0x28
   16810:	adds	r0, r0, #1
   16814:	adc	r1, r1, #0
   16818:	strd	r0, [r8, #40]	; 0x28
   1681c:	mov	r0, r5
   16820:	mov	r1, r6
   16824:	mov	r3, r4
   16828:	bl	1553c <UnityAssertEqualIntArray@@Base+0x4e0>
   1682c:	cmp	r0, #1
   16830:	bne	1684c <UnityAssertEqualStringArray@@Base+0xbc>
   16834:	ldrd	r0, [r8, #48]	; 0x30
   16838:	adds	r0, r0, #1
   1683c:	adc	r1, r1, #0
   16840:	strd	r0, [r8, #48]	; 0x30
   16844:	add	r0, r8, #64	; 0x40
   16848:	b	16a08 <UnityAssertEqualStringArray@@Base+0x278>
   1684c:	str	r4, [sp]
   16850:	add	r3, r8, #56	; 0x38
   16854:	mov	r4, #0
   16858:	add	r2, r8, #80	; 0x50
   1685c:	add	r0, r8, #192	; 0xc0
   16860:	str	r0, [sp, #8]
   16864:	add	r0, r8, #176	; 0xb0
   16868:	str	r0, [sp, #4]
   1686c:	add	r0, r8, #184	; 0xb8
   16870:	str	r0, [sp, #16]
   16874:	add	sl, r8, #240	; 0xf0
   16878:	add	ip, r8, #96	; 0x60
   1687c:	add	r0, r8, #104	; 0x68
   16880:	str	r0, [sp, #12]
   16884:	add	lr, r8, #112	; 0x70
   16888:	ldm	r3, {r0, r9}
   1688c:	adds	r0, r0, #1
   16890:	adc	r9, r9, #0
   16894:	stm	r3, {r0, r9}
   16898:	ldr	r0, [r5, r4, lsl #2]
   1689c:	cmp	r0, #0
   168a0:	mov	r0, r2
   168a4:	beq	16984 <UnityAssertEqualStringArray@@Base+0x1f4>
   168a8:	ldr	r0, [r8, #72]	; 0x48
   168ac:	ldr	r3, [r8, #76]	; 0x4c
   168b0:	adds	r0, r0, #1
   168b4:	adc	r3, r3, #0
   168b8:	str	r0, [r8, #72]	; 0x48
   168bc:	str	r3, [r8, #76]	; 0x4c
   168c0:	ldr	r0, [r6, r4, lsl #2]
   168c4:	cmp	r0, #0
   168c8:	mov	r0, ip
   168cc:	beq	16984 <UnityAssertEqualStringArray@@Base+0x1f4>
   168d0:	ldr	r0, [r8, #88]	; 0x58
   168d4:	ldr	r3, [r8, #92]	; 0x5c
   168d8:	adds	r0, r0, #1
   168dc:	adc	r3, r3, #0
   168e0:	str	r0, [r8, #88]	; 0x58
   168e4:	str	r3, [r8, #92]	; 0x5c
   168e8:	mov	r9, #0
   168ec:	ldr	r0, [sp, #12]
   168f0:	ldr	r3, [r0]
   168f4:	ldr	r1, [r0, #4]
   168f8:	adds	r3, r3, #1
   168fc:	adc	r1, r1, #0
   16900:	str	r3, [r0]
   16904:	str	r1, [r0, #4]
   16908:	ldr	r0, [r5, r4, lsl #2]
   1690c:	ldrb	r0, [r0, r9]
   16910:	cmp	r0, #0
   16914:	mov	r0, lr
   16918:	bne	16940 <UnityAssertEqualStringArray@@Base+0x1b0>
   1691c:	ldrd	r0, [r8, #120]	; 0x78
   16920:	adds	r0, r0, #1
   16924:	adc	r1, r1, #0
   16928:	strd	r0, [r8, #120]	; 0x78
   1692c:	ldr	r0, [r6, r4, lsl #2]
   16930:	ldrb	r0, [r0, r9]
   16934:	cmp	r0, #0
   16938:	beq	169ac <UnityAssertEqualStringArray@@Base+0x21c>
   1693c:	add	r0, r8, #128	; 0x80
   16940:	ldm	r0, {r1, r3}
   16944:	adds	r1, r1, #1
   16948:	adc	r3, r3, #0
   1694c:	stm	r0, {r1, r3}
   16950:	ldr	r0, [r6, r4, lsl #2]
   16954:	ldrb	r0, [r0, r9]
   16958:	ldr	r1, [r5, r4, lsl #2]
   1695c:	ldrb	r1, [r1, r9]
   16960:	cmp	r1, r0
   16964:	bne	16a38 <UnityAssertEqualStringArray@@Base+0x2a8>
   16968:	ldrd	r0, [r8, #152]	; 0x98
   1696c:	adds	r0, r0, #1
   16970:	adc	r1, r1, #0
   16974:	strd	r0, [r8, #152]	; 0x98
   16978:	add	r0, r8, #168	; 0xa8
   1697c:	add	r9, r9, #1
   16980:	b	168f0 <UnityAssertEqualStringArray@@Base+0x160>
   16984:	ldm	r0, {r1, r3}
   16988:	adds	r1, r1, #1
   1698c:	adc	r3, r3, #0
   16990:	stm	r0, {r1, r3}
   16994:	ldr	r0, [r6, r4, lsl #2]
   16998:	ldr	r1, [r5, r4, lsl #2]
   1699c:	cmp	r1, r0
   169a0:	ldr	r0, [sp, #16]
   169a4:	beq	169b0 <UnityAssertEqualStringArray@@Base+0x220>
   169a8:	b	16a48 <UnityAssertEqualStringArray@@Base+0x2b8>
   169ac:	add	r0, r8, #136	; 0x88
   169b0:	movw	r1, #63304	; 0xf748
   169b4:	movt	r1, #2
   169b8:	ldr	r1, [r1, #32]
   169bc:	ldm	r0, {r3, r9}
   169c0:	adds	r3, r3, #1
   169c4:	adc	r9, r9, #0
   169c8:	stm	r0, {r3, r9}
   169cc:	cmp	r1, #0
   169d0:	bne	16a80 <UnityAssertEqualStringArray@@Base+0x2f0>
   169d4:	ldrd	r0, [r8, #208]	; 0xd0
   169d8:	adds	r0, r0, #1
   169dc:	adc	r1, r1, #0
   169e0:	strd	r0, [r8, #208]	; 0xd0
   169e4:	add	r4, r4, #1
   169e8:	cmp	r4, r7
   169ec:	mov	r3, sl
   169f0:	bne	16888 <UnityAssertEqualStringArray@@Base+0xf8>
   169f4:	ldrd	r0, [r8, #248]	; 0xf8
   169f8:	adds	r0, r0, #1
   169fc:	adc	r1, r1, #0
   16a00:	strd	r0, [r8, #248]	; 0xf8
   16a04:	add	r0, r8, #256	; 0x100
   16a08:	ldrd	r2, [r0]
   16a0c:	adds	r2, r2, #1
   16a10:	adc	r3, r3, #0
   16a14:	strd	r2, [r0]
   16a18:	ldr	r0, [r8, #264]	; 0x108
   16a1c:	ldr	r1, [r8, #268]	; 0x10c
   16a20:	adds	r0, r0, #1
   16a24:	adc	r1, r1, #0
   16a28:	str	r0, [r8, #264]	; 0x108
   16a2c:	str	r1, [r8, #268]	; 0x10c
   16a30:	sub	sp, fp, #28
   16a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a38:	add	r0, r8, #160	; 0xa0
   16a3c:	str	r0, [sp, #8]
   16a40:	add	r0, r8, #144	; 0x90
   16a44:	str	r0, [sp, #4]
   16a48:	ldr	r2, [sp, #4]
   16a4c:	ldrd	r0, [r2]
   16a50:	adds	r0, r0, #1
   16a54:	adc	r1, r1, #0
   16a58:	strd	r0, [r2]
   16a5c:	mov	r0, #1
   16a60:	movw	r1, #63304	; 0xf748
   16a64:	movt	r1, #2
   16a68:	str	r0, [r1, #32]
   16a6c:	ldr	r2, [sp, #8]
   16a70:	ldrd	r0, [r2]
   16a74:	adds	r0, r0, #1
   16a78:	adc	r1, r1, #0
   16a7c:	strd	r0, [r2]
   16a80:	ldrd	r0, [r8, #200]	; 0xc8
   16a84:	adds	r0, r0, #1
   16a88:	adc	r1, r1, #0
   16a8c:	strd	r0, [r8, #200]	; 0xc8
   16a90:	ldr	r0, [fp, #8]
   16a94:	bl	14dbc <UnityAssertBits@@Base+0x108>
   16a98:	cmp	r7, #2
   16a9c:	bcc	16acc <UnityAssertEqualStringArray@@Base+0x33c>
   16aa0:	ldrd	r0, [r8, #216]	; 0xd8
   16aa4:	adds	r0, r0, #1
   16aa8:	adc	r1, r1, #0
   16aac:	strd	r0, [r8, #216]	; 0xd8
   16ab0:	movw	r0, #52210	; 0xcbf2
   16ab4:	movt	r0, #1
   16ab8:	bl	14170 <UnityPrint@@Base>
   16abc:	mov	r0, r4
   16ac0:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   16ac4:	add	r0, r8, #232	; 0xe8
   16ac8:	b	16ad0 <UnityAssertEqualStringArray@@Base+0x340>
   16acc:	add	r0, r8, #224	; 0xe0
   16ad0:	ldrd	r2, [r0]
   16ad4:	adds	r2, r2, #1
   16ad8:	adc	r3, r3, #0
   16adc:	strd	r2, [r0]
   16ae0:	ldr	r1, [r6, r4, lsl #2]
   16ae4:	ldr	r0, [r5, r4, lsl #2]
   16ae8:	bl	162a8 <UnityAssertEqualString@@Base+0x268>
   16aec:	ldr	r0, [sp]
   16af0:	bl	14e24 <UnityAssertBits@@Base+0x170>
   16af4:	mov	r0, #1
   16af8:	movw	r1, #63304	; 0xf748
   16afc:	movt	r1, #2
   16b00:	str	r0, [r1, #32]
   16b04:	add	r0, r1, #40	; 0x28
   16b08:	mov	r1, #1
   16b0c:	bl	12638 <longjmp@plt>
   16b10:	ldrd	r0, [r8, #32]
   16b14:	adds	r0, r0, #1
   16b18:	adc	r1, r1, #0
   16b1c:	strd	r0, [r8, #32]
   16b20:	mov	r0, r2
   16b24:	bl	14dbc <UnityAssertBits@@Base+0x108>
   16b28:	movw	r0, #52271	; 0xcc2f
   16b2c:	movt	r0, #1
   16b30:	bl	14170 <UnityPrint@@Base>
   16b34:	mov	r0, r4
   16b38:	bl	14e24 <UnityAssertBits@@Base+0x170>
   16b3c:	mov	r0, #1
   16b40:	str	r0, [r9, #32]
   16b44:	add	r0, r9, #40	; 0x28
   16b48:	mov	r1, #1
   16b4c:	bl	12638 <longjmp@plt>

00016b50 <UnityAssertEqualMemory@@Base>:
   16b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b54:	add	fp, sp, #28
   16b58:	sub	sp, sp, #4
   16b5c:	mov	sl, r1
   16b60:	mov	r6, r0
   16b64:	movw	r9, #61088	; 0xeea0
   16b68:	movt	r9, #2
   16b6c:	ldrd	r0, [r9]
   16b70:	adds	r0, r0, #1
   16b74:	adc	r1, r1, #0
   16b78:	strd	r0, [r9]
   16b7c:	movw	r5, #63304	; 0xf748
   16b80:	movt	r5, #2
   16b84:	ldrd	r0, [r5, #32]
   16b88:	orrs	r0, r1, r0
   16b8c:	beq	16bcc <UnityAssertEqualMemory@@Base+0x7c>
   16b90:	ldrd	r0, [r9, #8]
   16b94:	adds	r0, r0, #1
   16b98:	adc	r1, r1, #0
   16b9c:	strd	r0, [r9, #8]
   16ba0:	add	r0, r9, #24
   16ba4:	ldrd	r2, [r0]
   16ba8:	adds	r2, r2, #1
   16bac:	adc	r3, r3, #0
   16bb0:	strd	r2, [r0]
   16bb4:	ldrd	r0, [r9, #168]	; 0xa8
   16bb8:	adds	r0, r0, #1
   16bbc:	adc	r1, r1, #0
   16bc0:	strd	r0, [r9, #168]	; 0xa8
   16bc4:	sub	sp, fp, #28
   16bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bcc:	mov	r4, r2
   16bd0:	ldr	r2, [fp, #12]
   16bd4:	ldr	r8, [fp, #8]
   16bd8:	ldrd	r0, [r9, #16]
   16bdc:	adds	r0, r0, #1
   16be0:	adc	r1, r1, #0
   16be4:	strd	r0, [r9, #16]
   16be8:	cmp	r4, #0
   16bec:	movne	r7, r3
   16bf0:	cmpne	r3, #0
   16bf4:	bne	16c38 <UnityAssertEqualMemory@@Base+0xe8>
   16bf8:	ldrd	r0, [r9, #32]
   16bfc:	adds	r0, r0, #1
   16c00:	adc	r1, r1, #0
   16c04:	strd	r0, [r9, #32]
   16c08:	mov	r0, r2
   16c0c:	bl	14dbc <UnityAssertBits@@Base+0x108>
   16c10:	movw	r0, #52271	; 0xcc2f
   16c14:	movt	r0, #1
   16c18:	bl	14170 <UnityPrint@@Base>
   16c1c:	mov	r0, r8
   16c20:	bl	14e24 <UnityAssertBits@@Base+0x170>
   16c24:	mov	r0, #1
   16c28:	str	r0, [r5, #32]
   16c2c:	add	r0, r5, #40	; 0x28
   16c30:	mov	r1, #1
   16c34:	bl	12638 <longjmp@plt>
   16c38:	ldrd	r0, [r9, #40]	; 0x28
   16c3c:	adds	r0, r0, #1
   16c40:	adc	r1, r1, #0
   16c44:	strd	r0, [r9, #40]	; 0x28
   16c48:	mov	r0, r6
   16c4c:	mov	r1, sl
   16c50:	mov	r3, r8
   16c54:	bl	1553c <UnityAssertEqualIntArray@@Base+0x4e0>
   16c58:	cmp	r0, #1
   16c5c:	bne	16c78 <UnityAssertEqualMemory@@Base+0x128>
   16c60:	ldrd	r0, [r9, #48]	; 0x30
   16c64:	adds	r0, r0, #1
   16c68:	adc	r1, r1, #0
   16c6c:	strd	r0, [r9, #48]	; 0x30
   16c70:	add	r0, r9, #64	; 0x40
   16c74:	b	16ba4 <UnityAssertEqualMemory@@Base+0x54>
   16c78:	ldrd	r0, [r9, #56]	; 0x38
   16c7c:	adds	r0, r0, #1
   16c80:	adc	r1, r1, #0
   16c84:	strd	r0, [r9, #56]	; 0x38
   16c88:	str	r7, [sp]
   16c8c:	mov	r0, r7
   16c90:	mov	r8, r0
   16c94:	ldrd	r0, [r9, #72]	; 0x48
   16c98:	ldrd	r2, [r9, #88]	; 0x58
   16c9c:	adds	r0, r0, #1
   16ca0:	adc	r1, r1, #0
   16ca4:	adds	r2, r2, #1
   16ca8:	str	r2, [r9, #88]	; 0x58
   16cac:	strd	r0, [r9, #72]	; 0x48
   16cb0:	adc	r0, r3, #0
   16cb4:	str	r0, [r9, #92]	; 0x5c
   16cb8:	sub	r0, r8, #1
   16cbc:	mov	r7, #0
   16cc0:	ldrd	r2, [r9, #96]	; 0x60
   16cc4:	adds	r2, r2, #1
   16cc8:	adc	r3, r3, #0
   16ccc:	strd	r2, [r9, #96]	; 0x60
   16cd0:	ldrb	r1, [sl]
   16cd4:	ldrb	r2, [r6]
   16cd8:	cmp	r2, r1
   16cdc:	bne	16d4c <UnityAssertEqualMemory@@Base+0x1fc>
   16ce0:	ldrd	r2, [r9, #120]	; 0x78
   16ce4:	ldr	r1, [r9, #152]	; 0x98
   16ce8:	ldr	r5, [r9, #156]	; 0x9c
   16cec:	adds	r2, r2, #1
   16cf0:	adc	r3, r3, #0
   16cf4:	adds	r1, r1, #1
   16cf8:	str	r1, [r9, #152]	; 0x98
   16cfc:	strd	r2, [r9, #120]	; 0x78
   16d00:	adc	r1, r5, #0
   16d04:	str	r1, [r9, #156]	; 0x9c
   16d08:	add	r7, r7, #1
   16d0c:	add	sl, sl, #1
   16d10:	add	r6, r6, #1
   16d14:	cmp	r4, r7
   16d18:	bne	16cc0 <UnityAssertEqualMemory@@Base+0x170>
   16d1c:	ldrd	r2, [r9, #104]	; 0x68
   16d20:	adds	r2, r2, #1
   16d24:	adc	r3, r3, #0
   16d28:	strd	r2, [r9, #104]	; 0x68
   16d2c:	cmp	r0, #0
   16d30:	bne	16c90 <UnityAssertEqualMemory@@Base+0x140>
   16d34:	ldrd	r0, [r9, #80]	; 0x50
   16d38:	adds	r0, r0, #1
   16d3c:	adc	r1, r1, #0
   16d40:	strd	r0, [r9, #80]	; 0x50
   16d44:	add	r0, r9, #160	; 0xa0
   16d48:	b	16ba4 <UnityAssertEqualMemory@@Base+0x54>
   16d4c:	ldrd	r0, [r9, #112]	; 0x70
   16d50:	adds	r0, r0, #1
   16d54:	adc	r1, r1, #0
   16d58:	strd	r0, [r9, #112]	; 0x70
   16d5c:	ldr	r0, [fp, #12]
   16d60:	bl	14dbc <UnityAssertBits@@Base+0x108>
   16d64:	movw	r0, #52227	; 0xcc03
   16d68:	movt	r0, #1
   16d6c:	bl	14170 <UnityPrint@@Base>
   16d70:	ldr	r0, [sp]
   16d74:	cmp	r0, #2
   16d78:	bcc	16dac <UnityAssertEqualMemory@@Base+0x25c>
   16d7c:	ldrd	r0, [r9, #128]	; 0x80
   16d80:	adds	r0, r0, #1
   16d84:	adc	r1, r1, #0
   16d88:	strd	r0, [r9, #128]	; 0x80
   16d8c:	movw	r0, #52210	; 0xcbf2
   16d90:	movt	r0, #1
   16d94:	bl	14170 <UnityPrint@@Base>
   16d98:	ldr	r0, [sp]
   16d9c:	sub	r0, r0, r8
   16da0:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   16da4:	add	r0, r9, #144	; 0x90
   16da8:	b	16db0 <UnityAssertEqualMemory@@Base+0x260>
   16dac:	add	r0, r9, #136	; 0x88
   16db0:	ldrd	r2, [r0]
   16db4:	adds	r2, r2, #1
   16db8:	adc	r3, r3, #0
   16dbc:	strd	r2, [r0]
   16dc0:	movw	r0, #52220	; 0xcbfc
   16dc4:	movt	r0, #1
   16dc8:	bl	14170 <UnityPrint@@Base>
   16dcc:	mov	r0, r7
   16dd0:	bl	1489c <UnityPrintNumberUnsigned@@Base>
   16dd4:	movw	r0, #52188	; 0xcbdc
   16dd8:	movt	r0, #1
   16ddc:	bl	14170 <UnityPrint@@Base>
   16de0:	ldrb	r0, [r6]
   16de4:	mov	r1, #65	; 0x41
   16de8:	bl	14644 <UnityPrintNumberByStyle@@Base>
   16dec:	movw	r0, #52199	; 0xcbe7
   16df0:	movt	r0, #1
   16df4:	bl	14170 <UnityPrint@@Base>
   16df8:	ldrb	r0, [sl]
   16dfc:	mov	r1, #65	; 0x41
   16e00:	bl	14644 <UnityPrintNumberByStyle@@Base>
   16e04:	ldr	r0, [fp, #8]
   16e08:	bl	14e24 <UnityAssertBits@@Base+0x170>
   16e0c:	mov	r0, #1
   16e10:	movw	r1, #63304	; 0xf748
   16e14:	movt	r1, #2
   16e18:	str	r0, [r1, #32]
   16e1c:	add	r0, r1, #40	; 0x28
   16e20:	mov	r1, #1
   16e24:	bl	12638 <longjmp@plt>

00016e28 <UnityFail@@Base>:
   16e28:	push	{r4, r5, r6, sl, fp, lr}
   16e2c:	add	fp, sp, #16
   16e30:	mov	r4, r0
   16e34:	movw	r5, #61264	; 0xef50
   16e38:	movt	r5, #2
   16e3c:	ldm	r5, {r0, r3}
   16e40:	adds	r0, r0, #1
   16e44:	adc	r3, r3, #0
   16e48:	stm	r5, {r0, r3}
   16e4c:	movw	r6, #63304	; 0xf748
   16e50:	movt	r6, #2
   16e54:	ldr	r0, [r6, #32]
   16e58:	ldr	r3, [r6, #36]	; 0x24
   16e5c:	orrs	r0, r3, r0
   16e60:	beq	16e8c <UnityFail@@Base+0x64>
   16e64:	ldrd	r0, [r5, #8]
   16e68:	ldrd	r2, [r5, #24]
   16e6c:	adds	r0, r0, #1
   16e70:	adc	r1, r1, #0
   16e74:	adds	r2, r2, #1
   16e78:	str	r2, [r5, #24]
   16e7c:	strd	r0, [r5, #8]
   16e80:	adc	r0, r3, #0
   16e84:	str	r0, [r5, #28]
   16e88:	pop	{r4, r5, r6, sl, fp, pc}
   16e8c:	ldr	r0, [r5, #16]
   16e90:	ldr	r3, [r5, #20]
   16e94:	adds	r0, r0, #1
   16e98:	adc	r3, r3, #0
   16e9c:	str	r0, [r5, #16]
   16ea0:	str	r3, [r5, #20]
   16ea4:	ldr	r0, [r6]
   16ea8:	bl	14c50 <UnityConcludeTest@@Base+0xfc>
   16eac:	bl	14afc <UnityPrintFail@@Base>
   16eb0:	cmp	r4, #0
   16eb4:	bne	16ec0 <UnityFail@@Base+0x98>
   16eb8:	add	r0, r5, #40	; 0x28
   16ebc:	b	16fc8 <UnityFail@@Base+0x1a0>
   16ec0:	ldrd	r0, [r5, #32]
   16ec4:	adds	r0, r0, #1
   16ec8:	adc	r1, r1, #0
   16ecc:	strd	r0, [r5, #32]
   16ed0:	mov	r0, #58	; 0x3a
   16ed4:	bl	12788 <putchar@plt>
   16ed8:	ldr	r0, [r6, #8]
   16edc:	cmp	r0, #0
   16ee0:	bne	16eec <UnityFail@@Base+0xc4>
   16ee4:	add	r0, r5, #56	; 0x38
   16ee8:	b	16f6c <UnityFail@@Base+0x144>
   16eec:	ldrd	r0, [r5, #48]	; 0x30
   16ef0:	adds	r0, r0, #1
   16ef4:	adc	r1, r1, #0
   16ef8:	strd	r0, [r5, #48]	; 0x30
   16efc:	movw	r0, #52593	; 0xcd71
   16f00:	movt	r0, #1
   16f04:	bl	14170 <UnityPrint@@Base>
   16f08:	ldr	r0, [r6, #8]
   16f0c:	bl	14170 <UnityPrint@@Base>
   16f10:	ldr	r0, [r6, #12]
   16f14:	cmp	r0, #0
   16f18:	bne	16f24 <UnityFail@@Base+0xfc>
   16f1c:	add	r0, r5, #72	; 0x48
   16f20:	b	16f4c <UnityFail@@Base+0x124>
   16f24:	ldrd	r0, [r5, #64]	; 0x40
   16f28:	adds	r0, r0, #1
   16f2c:	adc	r1, r1, #0
   16f30:	strd	r0, [r5, #64]	; 0x40
   16f34:	movw	r0, #52603	; 0xcd7b
   16f38:	movt	r0, #1
   16f3c:	bl	14170 <UnityPrint@@Base>
   16f40:	ldr	r0, [r6, #12]
   16f44:	bl	14170 <UnityPrint@@Base>
   16f48:	add	r0, r5, #80	; 0x50
   16f4c:	ldrd	r2, [r0]
   16f50:	adds	r2, r2, #1
   16f54:	adc	r3, r3, #0
   16f58:	strd	r2, [r0]
   16f5c:	movw	r0, #52185	; 0xcbd9
   16f60:	movt	r0, #1
   16f64:	bl	14170 <UnityPrint@@Base>
   16f68:	add	r0, r5, #88	; 0x58
   16f6c:	ldrd	r2, [r0]
   16f70:	adds	r2, r2, #1
   16f74:	adc	r3, r3, #0
   16f78:	strd	r2, [r0]
   16f7c:	ldrb	r0, [r4]
   16f80:	cmp	r0, #32
   16f84:	bne	16f90 <UnityFail@@Base+0x168>
   16f88:	add	r0, r5, #104	; 0x68
   16f8c:	b	16fac <UnityFail@@Base+0x184>
   16f90:	ldrd	r0, [r5, #96]	; 0x60
   16f94:	adds	r0, r0, #1
   16f98:	adc	r1, r1, #0
   16f9c:	strd	r0, [r5, #96]	; 0x60
   16fa0:	mov	r0, #32
   16fa4:	bl	12788 <putchar@plt>
   16fa8:	add	r0, r5, #112	; 0x70
   16fac:	ldrd	r2, [r0]
   16fb0:	adds	r2, r2, #1
   16fb4:	adc	r3, r3, #0
   16fb8:	strd	r2, [r0]
   16fbc:	mov	r0, r4
   16fc0:	bl	14170 <UnityPrint@@Base>
   16fc4:	add	r0, r5, #120	; 0x78
   16fc8:	ldrd	r2, [r0]
   16fcc:	adds	r2, r2, #1
   16fd0:	adc	r3, r3, #0
   16fd4:	strd	r2, [r0]
   16fd8:	mov	r0, #1
   16fdc:	str	r0, [r6, #32]
   16fe0:	add	r0, r6, #40	; 0x28
   16fe4:	mov	r1, #1
   16fe8:	bl	12638 <longjmp@plt>

00016fec <UnityIgnore@@Base>:
   16fec:	push	{r4, r5, r6, sl, fp, lr}
   16ff0:	add	fp, sp, #16
   16ff4:	mov	r4, r0
   16ff8:	movw	r5, #61392	; 0xefd0
   16ffc:	movt	r5, #2
   17000:	ldm	r5, {r0, r3}
   17004:	adds	r0, r0, #1
   17008:	adc	r3, r3, #0
   1700c:	stm	r5, {r0, r3}
   17010:	movw	r6, #63304	; 0xf748
   17014:	movt	r6, #2
   17018:	ldr	r0, [r6, #32]
   1701c:	ldr	r3, [r6, #36]	; 0x24
   17020:	orrs	r0, r3, r0
   17024:	beq	17050 <UnityIgnore@@Base+0x64>
   17028:	ldrd	r0, [r5, #8]
   1702c:	ldrd	r2, [r5, #24]
   17030:	adds	r0, r0, #1
   17034:	adc	r1, r1, #0
   17038:	adds	r2, r2, #1
   1703c:	str	r2, [r5, #24]
   17040:	strd	r0, [r5, #8]
   17044:	adc	r0, r3, #0
   17048:	str	r0, [r5, #28]
   1704c:	pop	{r4, r5, r6, sl, fp, pc}
   17050:	ldr	r0, [r5, #16]
   17054:	ldr	r3, [r5, #20]
   17058:	adds	r0, r0, #1
   1705c:	adc	r3, r3, #0
   17060:	str	r0, [r5, #16]
   17064:	str	r3, [r5, #20]
   17068:	ldr	r0, [r6]
   1706c:	bl	14c50 <UnityConcludeTest@@Base+0xfc>
   17070:	movw	r0, #52173	; 0xcbcd
   17074:	movt	r0, #1
   17078:	bl	14170 <UnityPrint@@Base>
   1707c:	cmp	r4, #0
   17080:	bne	1708c <UnityIgnore@@Base+0xa0>
   17084:	add	r0, r5, #40	; 0x28
   17088:	b	170b8 <UnityIgnore@@Base+0xcc>
   1708c:	ldrd	r0, [r5, #32]
   17090:	adds	r0, r0, #1
   17094:	adc	r1, r1, #0
   17098:	strd	r0, [r5, #32]
   1709c:	mov	r0, #58	; 0x3a
   170a0:	bl	12788 <putchar@plt>
   170a4:	mov	r0, #32
   170a8:	bl	12788 <putchar@plt>
   170ac:	mov	r0, r4
   170b0:	bl	14170 <UnityPrint@@Base>
   170b4:	add	r0, r5, #48	; 0x30
   170b8:	ldrd	r2, [r0]
   170bc:	adds	r2, r2, #1
   170c0:	adc	r3, r3, #0
   170c4:	strd	r2, [r0]
   170c8:	mov	r0, #1
   170cc:	str	r0, [r6, #36]	; 0x24
   170d0:	add	r0, r6, #40	; 0x28
   170d4:	mov	r1, #1
   170d8:	bl	12638 <longjmp@plt>

000170dc <setUp@@Base>:
   170dc:	movw	r0, #61448	; 0xf008
   170e0:	movt	r0, #2
   170e4:	ldm	r0, {r1, r2, r3, ip}
   170e8:	adds	r1, r1, #1
   170ec:	adc	r2, r2, #0
   170f0:	adds	r3, r3, #1
   170f4:	adc	ip, ip, #0
   170f8:	stm	r0, {r1, r2, r3, ip}
   170fc:	bx	lr

00017100 <tearDown@@Base>:
   17100:	movw	r0, #61464	; 0xf018
   17104:	movt	r0, #2
   17108:	ldm	r0, {r1, r2, r3, ip}
   1710c:	adds	r1, r1, #1
   17110:	adc	r2, r2, #0
   17114:	adds	r3, r3, #1
   17118:	adc	ip, ip, #0
   1711c:	stm	r0, {r1, r2, r3, ip}
   17120:	bx	lr

00017124 <UnityDefaultTestRun@@Base>:
   17124:	push	{r4, r5, r6, r7, fp, lr}
   17128:	add	fp, sp, #16
   1712c:	mov	r4, r0
   17130:	movw	r7, #63304	; 0xf748
   17134:	movt	r7, #2
   17138:	str	r2, [r7, #16]
   1713c:	str	r1, [r7, #4]
   17140:	mov	r0, #0
   17144:	str	r0, [r7, #12]
   17148:	str	r0, [r7, #8]
   1714c:	movw	r6, #61488	; 0xf030
   17150:	movt	r6, #2
   17154:	ldrd	r0, [r6]
   17158:	adds	r0, r0, #1
   1715c:	ldr	r2, [r7, #20]
   17160:	add	r2, r2, #1
   17164:	str	r2, [r7, #20]
   17168:	adc	r1, r1, #0
   1716c:	strd	r0, [r6]
   17170:	add	r5, r7, #40	; 0x28
   17174:	mov	r0, r5
   17178:	bl	12650 <_setjmp@plt>
   1717c:	cmp	r0, #0
   17180:	beq	1718c <UnityDefaultTestRun@@Base+0x68>
   17184:	add	r0, r6, #16
   17188:	b	171a8 <UnityDefaultTestRun@@Base+0x84>
   1718c:	ldrd	r0, [r6, #8]
   17190:	adds	r0, r0, #1
   17194:	adc	r1, r1, #0
   17198:	strd	r0, [r6, #8]
   1719c:	bl	170dc <setUp@@Base>
   171a0:	blx	r4
   171a4:	add	r0, r6, #24
   171a8:	ldrd	r2, [r0]
   171ac:	adds	r2, r2, #1
   171b0:	adc	r3, r3, #0
   171b4:	strd	r2, [r0]
   171b8:	mov	r0, r5
   171bc:	bl	12650 <_setjmp@plt>
   171c0:	ldr	r1, [r7, #36]	; 0x24
   171c4:	orrs	r0, r1, r0
   171c8:	beq	171d4 <UnityDefaultTestRun@@Base+0xb0>
   171cc:	add	r0, r6, #32
   171d0:	b	171ec <UnityDefaultTestRun@@Base+0xc8>
   171d4:	ldrd	r0, [r6, #40]	; 0x28
   171d8:	adds	r0, r0, #1
   171dc:	adc	r1, r1, #0
   171e0:	strd	r0, [r6, #40]	; 0x28
   171e4:	bl	17100 <tearDown@@Base>
   171e8:	add	r0, r6, #48	; 0x30
   171ec:	ldrd	r2, [r0]
   171f0:	adds	r2, r2, #1
   171f4:	adc	r3, r3, #0
   171f8:	strd	r2, [r0]
   171fc:	ldrd	r0, [r6, #56]	; 0x38
   17200:	adds	r0, r0, #1
   17204:	adc	r1, r1, #0
   17208:	strd	r0, [r6, #56]	; 0x38
   1720c:	bl	14b54 <UnityConcludeTest@@Base>
   17210:	pop	{r4, r5, r6, r7, fp, pc}

00017214 <UnityBegin@@Base>:
   17214:	movw	r1, #63304	; 0xf748
   17218:	movt	r1, #2
   1721c:	vmov.i32	q8, #0	; 0x00000000
   17220:	str	r0, [r1]
   17224:	mov	r0, #0
   17228:	str	r0, [r1, #36]	; 0x24
   1722c:	add	r0, r1, #4
   17230:	vst1.32	{d16-d17}, [r0]
   17234:	add	r0, r1, #20
   17238:	vst1.32	{d16-d17}, [r0]
   1723c:	movw	r0, #61552	; 0xf070
   17240:	movt	r0, #2
   17244:	ldm	r0, {r1, r2, r3, ip}
   17248:	adds	r1, r1, #1
   1724c:	adc	r2, r2, #0
   17250:	adds	r3, r3, #1
   17254:	adc	ip, ip, #0
   17258:	stm	r0, {r1, r2, r3, ip}
   1725c:	bx	lr

00017260 <UnityEnd@@Base>:
   17260:	push	{r4, r5, fp, lr}
   17264:	add	fp, sp, #8
   17268:	movw	r4, #61568	; 0xf080
   1726c:	movt	r4, #2
   17270:	ldrd	r0, [r4]
   17274:	adds	r0, r0, #1
   17278:	adc	r1, r1, #0
   1727c:	strd	r0, [r4]
   17280:	mov	r0, #10
   17284:	bl	12788 <putchar@plt>
   17288:	movw	r0, #52540	; 0xcd3c
   1728c:	movt	r0, #1
   17290:	bl	14170 <UnityPrint@@Base>
   17294:	mov	r0, #10
   17298:	bl	12788 <putchar@plt>
   1729c:	movw	r5, #63304	; 0xf748
   172a0:	movt	r5, #2
   172a4:	ldr	r0, [r5, #20]
   172a8:	bl	14714 <UnityPrintNumber@@Base>
   172ac:	movw	r0, #52564	; 0xcd54
   172b0:	movt	r0, #1
   172b4:	bl	14170 <UnityPrint@@Base>
   172b8:	ldr	r0, [r5, #24]
   172bc:	bl	14714 <UnityPrintNumber@@Base>
   172c0:	movw	r0, #52572	; 0xcd5c
   172c4:	movt	r0, #1
   172c8:	bl	14170 <UnityPrint@@Base>
   172cc:	ldr	r0, [r5, #28]
   172d0:	bl	14714 <UnityPrintNumber@@Base>
   172d4:	movw	r0, #52583	; 0xcd67
   172d8:	movt	r0, #1
   172dc:	bl	14170 <UnityPrint@@Base>
   172e0:	mov	r0, #10
   172e4:	bl	12788 <putchar@plt>
   172e8:	ldr	r0, [r5, #24]
   172ec:	cmp	r0, #0
   172f0:	beq	17310 <UnityEnd@@Base+0xb0>
   172f4:	ldrd	r0, [r4, #16]
   172f8:	adds	r0, r0, #1
   172fc:	adc	r1, r1, #0
   17300:	strd	r0, [r4, #16]
   17304:	bl	14afc <UnityPrintFail@@Base>
   17308:	add	r0, r4, #32
   1730c:	b	17328 <UnityEnd@@Base+0xc8>
   17310:	ldrd	r0, [r4, #8]
   17314:	adds	r0, r0, #1
   17318:	adc	r1, r1, #0
   1731c:	strd	r0, [r4, #8]
   17320:	bl	14b28 <UnityPrintOk@@Base>
   17324:	add	r0, r4, #24
   17328:	ldrd	r2, [r0]
   1732c:	adds	r2, r2, #1
   17330:	adc	r3, r3, #0
   17334:	strd	r2, [r0]
   17338:	ldrd	r0, [r4, #40]	; 0x28
   1733c:	adds	r0, r0, #1
   17340:	adc	r1, r1, #0
   17344:	strd	r0, [r4, #40]	; 0x28
   17348:	mov	r0, #10
   1734c:	bl	12788 <putchar@plt>
   17350:	ldr	r0, [r5, #24]
   17354:	pop	{r4, r5, fp, pc}
   17358:	push	{r4, r5, r6, lr}
   1735c:	sub	sp, sp, #8
   17360:	movw	r0, #53656	; 0xd198
   17364:	movt	r0, #1
   17368:	movw	r1, #51366	; 0xc8a6
   1736c:	movt	r1, #1
   17370:	movw	r2, #50507	; 0xc54b
   17374:	movt	r2, #17914	; 0x45fa
   17378:	bl	194f4 <next@@Base+0x12dc>
   1737c:	movw	r0, #53376	; 0xd080
   17380:	movt	r0, #1
   17384:	add	r4, r0, #4
   17388:	mov	r5, #0
   1738c:	movw	r6, #52672	; 0xcdc0
   17390:	movt	r6, #1
   17394:	mov	r3, r6
   17398:	ldr	r0, [r3, r5]!
   1739c:	ldr	r1, [r3, #16]
   173a0:	str	r1, [sp]
   173a4:	ldmib	r3, {r1, r2}
   173a8:	ldrb	r3, [r3, #12]
   173ac:	bl	19c14 <next@@Base+0x19fc>
   173b0:	ldrd	r0, [r4, #-4]
   173b4:	bl	1a4c8 <next@@Base+0x22b0>
   173b8:	add	r5, r5, #20
   173bc:	add	r4, r4, #8
   173c0:	cmp	r5, #700	; 0x2bc
   173c4:	bne	17394 <UnityEnd@@Base+0x134>
   173c8:	bl	1ac50 <next@@Base+0x2a38>
   173cc:	add	sp, sp, #8
   173d0:	pop	{r4, r5, r6, lr}
   173d4:	b	1b9bc <next@@Base+0x37a4>
   173d8:	push	{r4, r5, r6, r7, fp, lr}
   173dc:	vpush	{d8-d9}
   173e0:	bl	17358 <UnityEnd@@Base+0xf8>
   173e4:	movw	r0, #58032	; 0xe2b0
   173e8:	movt	r0, #2
   173ec:	mov	r4, #0
   173f0:	mov	r1, #0
   173f4:	mov	r2, #152	; 0x98
   173f8:	bl	1277c <memset@plt>
   173fc:	vmov.i32	q4, #0	; 0x00000000
   17400:	movw	r0, #58184	; 0xe348
   17404:	movt	r0, #2
   17408:	vst1.64	{d8-d9}, [r0]
   1740c:	movw	r0, #58208	; 0xe360
   17410:	movt	r0, #2
   17414:	add	r1, r0, #16
   17418:	vst1.64	{d8-d9}, [r1 :128]
   1741c:	add	r1, r0, #32
   17420:	vst1.64	{d8-d9}, [r1 :128]
   17424:	add	r1, r0, #48	; 0x30
   17428:	vst1.64	{d8-d9}, [r1 :128]
   1742c:	mov	r5, #64	; 0x40
   17430:	vst1.64	{d8-d9}, [r0 :128], r5
   17434:	vst1.64	{d8-d9}, [r0 :128]
   17438:	movw	r0, #58288	; 0xe3b0
   1743c:	movt	r0, #2
   17440:	mov	r1, #0
   17444:	mov	r2, #168	; 0xa8
   17448:	bl	1277c <memset@plt>
   1744c:	movw	r0, #58464	; 0xe460
   17450:	movt	r0, #2
   17454:	add	r1, r0, #16
   17458:	vst1.64	{d8-d9}, [r1 :128]
   1745c:	add	r1, r0, #32
   17460:	vst1.64	{d8-d9}, [r1 :128]
   17464:	add	r1, r0, #48	; 0x30
   17468:	vst1.64	{d8-d9}, [r1 :128]
   1746c:	str	r4, [r0, #64]	; 0x40
   17470:	movw	r2, #58544	; 0xe4b0
   17474:	movt	r2, #2
   17478:	add	r1, r2, #16
   1747c:	vst1.64	{d8-d9}, [r1 :128]
   17480:	add	r1, r2, #32
   17484:	vst1.64	{d8-d9}, [r1 :128]
   17488:	add	r1, r2, #48	; 0x30
   1748c:	vst1.64	{d8-d9}, [r1 :128]
   17490:	add	r1, r2, #64	; 0x40
   17494:	vst1.64	{d8-d9}, [r1 :128]
   17498:	add	r1, r2, #80	; 0x50
   1749c:	vst1.64	{d8-d9}, [r1 :128]
   174a0:	add	r1, r2, #96	; 0x60
   174a4:	vst1.64	{d8-d9}, [r1 :128]
   174a8:	str	r4, [r2, #112]	; 0x70
   174ac:	movw	r3, #58672	; 0xe530
   174b0:	movt	r3, #2
   174b4:	add	r1, r3, #16
   174b8:	vst1.64	{d8-d9}, [r1 :128]
   174bc:	add	r1, r3, #32
   174c0:	vst1.64	{d8-d9}, [r1 :128]
   174c4:	add	r1, r3, #48	; 0x30
   174c8:	vst1.64	{d8-d9}, [r1 :128]
   174cc:	add	r1, r3, #64	; 0x40
   174d0:	vst1.64	{d8-d9}, [r1 :128]
   174d4:	str	r4, [r3, #80]	; 0x50
   174d8:	mov	r1, #68	; 0x44
   174dc:	vst1.64	{d8-d9}, [r0 :128], r1
   174e0:	str	r4, [r0]
   174e4:	mov	r0, #116	; 0x74
   174e8:	vst1.64	{d8-d9}, [r2 :128], r0
   174ec:	str	r4, [r2]
   174f0:	mov	r0, #84	; 0x54
   174f4:	vst1.64	{d8-d9}, [r3 :128], r0
   174f8:	str	r4, [r3]
   174fc:	movw	r2, #58768	; 0xe590
   17500:	movt	r2, #2
   17504:	str	r4, [r2, #96]	; 0x60
   17508:	add	r3, r2, #80	; 0x50
   1750c:	vst1.64	{d8-d9}, [r3 :128]
   17510:	add	r3, r2, #64	; 0x40
   17514:	vst1.64	{d8-d9}, [r3 :128]
   17518:	add	r3, r2, #48	; 0x30
   1751c:	vst1.64	{d8-d9}, [r3 :128]
   17520:	add	r3, r2, #32
   17524:	vst1.64	{d8-d9}, [r3 :128]
   17528:	add	r3, r2, #16
   1752c:	vst1.64	{d8-d9}, [r3 :128]
   17530:	mov	r3, #100	; 0x64
   17534:	vst1.64	{d8-d9}, [r2 :128], r3
   17538:	str	r4, [r2]
   1753c:	movw	r2, #58872	; 0xe5f8
   17540:	movt	r2, #2
   17544:	vst1.64	{d8-d9}, [r2]
   17548:	movw	r2, #58888	; 0xe608
   1754c:	movt	r2, #2
   17550:	vst1.64	{d8-d9}, [r2]
   17554:	movw	r2, #58912	; 0xe620
   17558:	movt	r2, #2
   1755c:	str	r4, [r2, #64]	; 0x40
   17560:	add	r3, r2, #48	; 0x30
   17564:	vst1.64	{d8-d9}, [r3 :128]
   17568:	add	r3, r2, #32
   1756c:	vst1.64	{d8-d9}, [r3 :128]
   17570:	add	r3, r2, #16
   17574:	vst1.64	{d8-d9}, [r3 :128]
   17578:	vst1.64	{d8-d9}, [r2 :128], r1
   1757c:	str	r4, [r2]
   17580:	movw	r1, #58984	; 0xe668
   17584:	movt	r1, #2
   17588:	vst1.64	{d8-d9}, [r1]
   1758c:	movw	r1, #59008	; 0xe680
   17590:	movt	r1, #2
   17594:	add	r2, r1, #16
   17598:	vst1.64	{d8-d9}, [r2 :128]
   1759c:	mov	r6, #32
   175a0:	vst1.64	{d8-d9}, [r1 :128], r6
   175a4:	vst1.64	{d8-d9}, [r1 :128]
   175a8:	movw	r1, #59056	; 0xe6b0
   175ac:	movt	r1, #2
   175b0:	vst1.64	{d8-d9}, [r1]
   175b4:	movw	r1, #59072	; 0xe6c0
   175b8:	movt	r1, #2
   175bc:	str	r4, [r1, #80]	; 0x50
   175c0:	add	r2, r1, #64	; 0x40
   175c4:	vst1.64	{d8-d9}, [r2 :128]
   175c8:	add	r2, r1, #48	; 0x30
   175cc:	vst1.64	{d8-d9}, [r2 :128]
   175d0:	add	r2, r1, #32
   175d4:	vst1.64	{d8-d9}, [r2 :128]
   175d8:	add	r2, r1, #16
   175dc:	vst1.64	{d8-d9}, [r2 :128]
   175e0:	vst1.64	{d8-d9}, [r1 :128], r0
   175e4:	str	r4, [r1]
   175e8:	movw	r0, #59168	; 0xe720
   175ec:	movt	r0, #2
   175f0:	add	r1, r0, #16
   175f4:	vst1.64	{d8-d9}, [r1 :128]
   175f8:	vst1.64	{d8-d9}, [r0 :128], r6
   175fc:	vst1.64	{d8-d9}, [r0 :128]
   17600:	movw	r0, #59216	; 0xe750
   17604:	movt	r0, #2
   17608:	mov	r1, #0
   1760c:	mov	r2, #280	; 0x118
   17610:	bl	1277c <memset@plt>
   17614:	movw	r0, #59504	; 0xe870
   17618:	movt	r0, #2
   1761c:	add	r1, r0, #16
   17620:	vst1.64	{d8-d9}, [r1 :128]
   17624:	add	r1, r0, #32
   17628:	vst1.64	{d8-d9}, [r1 :128]
   1762c:	add	r1, r0, #48	; 0x30
   17630:	vst1.64	{d8-d9}, [r1 :128]
   17634:	vst1.64	{d8-d9}, [r0 :128], r5
   17638:	vst1.64	{d8-d9}, [r0 :128]
   1763c:	movw	r0, #59584	; 0xe8c0
   17640:	movt	r0, #2
   17644:	mov	r1, #0
   17648:	mov	r2, #192	; 0xc0
   1764c:	bl	1277c <memset@plt>
   17650:	movw	r0, #59776	; 0xe980
   17654:	movt	r0, #2
   17658:	add	r1, r0, #16
   1765c:	vst1.64	{d8-d9}, [r1 :128]
   17660:	add	r1, r0, #32
   17664:	vst1.64	{d8-d9}, [r1 :128]
   17668:	add	r1, r0, #48	; 0x30
   1766c:	vst1.64	{d8-d9}, [r1 :128]
   17670:	add	r1, r0, #64	; 0x40
   17674:	vst1.64	{d8-d9}, [r1 :128]
   17678:	add	r1, r0, #80	; 0x50
   1767c:	vst1.64	{d8-d9}, [r1 :128]
   17680:	add	r1, r0, #96	; 0x60
   17684:	vst1.64	{d8-d9}, [r1 :128]
   17688:	mov	r7, #112	; 0x70
   1768c:	vst1.64	{d8-d9}, [r0 :128], r7
   17690:	vst1.64	{d8-d9}, [r0 :128]
   17694:	movw	r0, #59904	; 0xea00
   17698:	movt	r0, #2
   1769c:	mov	r1, #0
   176a0:	mov	r2, #248	; 0xf8
   176a4:	bl	1277c <memset@plt>
   176a8:	movw	r0, #60160	; 0xeb00
   176ac:	movt	r0, #2
   176b0:	add	r1, r0, #16
   176b4:	vst1.64	{d8-d9}, [r1 :128]
   176b8:	add	r1, r0, #32
   176bc:	vst1.64	{d8-d9}, [r1 :128]
   176c0:	add	r1, r0, #48	; 0x30
   176c4:	vst1.64	{d8-d9}, [r1 :128]
   176c8:	add	r1, r0, #64	; 0x40
   176cc:	vst1.64	{d8-d9}, [r1 :128]
   176d0:	add	r1, r0, #80	; 0x50
   176d4:	vst1.64	{d8-d9}, [r1 :128]
   176d8:	add	r1, r0, #96	; 0x60
   176dc:	vst1.64	{d8-d9}, [r1 :128]
   176e0:	vst1.64	{d8-d9}, [r0 :128], r7
   176e4:	vst1.64	{d8-d9}, [r0 :128]
   176e8:	movw	r0, #60288	; 0xeb80
   176ec:	movt	r0, #2
   176f0:	mov	r1, #0
   176f4:	mov	r2, #176	; 0xb0
   176f8:	bl	1277c <memset@plt>
   176fc:	movw	r0, #60464	; 0xec30
   17700:	movt	r0, #2
   17704:	add	r1, r0, #16
   17708:	vst1.64	{d8-d9}, [r1 :128]
   1770c:	add	r1, r0, #32
   17710:	vst1.64	{d8-d9}, [r1 :128]
   17714:	add	r1, r0, #48	; 0x30
   17718:	vst1.64	{d8-d9}, [r1 :128]
   1771c:	vst1.64	{d8-d9}, [r0 :128], r5
   17720:	vst1.64	{d8-d9}, [r0 :128]
   17724:	movw	r0, #60544	; 0xec80
   17728:	movt	r0, #2
   1772c:	mov	r1, #0
   17730:	mov	r2, #192	; 0xc0
   17734:	bl	1277c <memset@plt>
   17738:	movw	r0, #60736	; 0xed40
   1773c:	movt	r0, #2
   17740:	add	r1, r0, #16
   17744:	vst1.64	{d8-d9}, [r1 :128]
   17748:	add	r1, r0, #32
   1774c:	vst1.64	{d8-d9}, [r1 :128]
   17750:	add	r1, r0, #48	; 0x30
   17754:	vst1.64	{d8-d9}, [r1 :128]
   17758:	vst1.64	{d8-d9}, [r0 :128], r5
   1775c:	vst1.64	{d8-d9}, [r0 :128]
   17760:	movw	r0, #60816	; 0xed90
   17764:	movt	r0, #2
   17768:	mov	r1, #0
   1776c:	mov	r2, #272	; 0x110
   17770:	bl	1277c <memset@plt>
   17774:	movw	r0, #61088	; 0xeea0
   17778:	movt	r0, #2
   1777c:	mov	r1, #0
   17780:	mov	r2, #176	; 0xb0
   17784:	bl	1277c <memset@plt>
   17788:	mov	r0, #48	; 0x30
   1778c:	movw	r1, #61488	; 0xf030
   17790:	movt	r1, #2
   17794:	mov	r2, r1
   17798:	vst1.64	{d8-d9}, [r2 :128], r0
   1779c:	vst1.64	{d8-d9}, [r2 :128]
   177a0:	movw	r0, #61264	; 0xef50
   177a4:	movt	r0, #2
   177a8:	add	r2, r0, #16
   177ac:	vst1.64	{d8-d9}, [r2 :128]
   177b0:	add	r2, r0, #32
   177b4:	vst1.64	{d8-d9}, [r2 :128]
   177b8:	add	r2, r0, #48	; 0x30
   177bc:	vst1.64	{d8-d9}, [r2 :128]
   177c0:	add	r2, r0, #64	; 0x40
   177c4:	vst1.64	{d8-d9}, [r2 :128]
   177c8:	add	r2, r0, #80	; 0x50
   177cc:	vst1.64	{d8-d9}, [r2 :128]
   177d0:	add	r2, r0, #96	; 0x60
   177d4:	vst1.64	{d8-d9}, [r2 :128]
   177d8:	movw	r2, #61392	; 0xefd0
   177dc:	movt	r2, #2
   177e0:	add	r3, r2, #16
   177e4:	vst1.64	{d8-d9}, [r3 :128]
   177e8:	add	r3, r2, #32
   177ec:	vst1.64	{d8-d9}, [r3 :128]
   177f0:	str	r4, [r2, #48]	; 0x30
   177f4:	movw	r3, #61448	; 0xf008
   177f8:	movt	r3, #2
   177fc:	vst1.64	{d8-d9}, [r3]
   17800:	movw	r3, #61464	; 0xf018
   17804:	movt	r3, #2
   17808:	vst1.64	{d8-d9}, [r3]
   1780c:	add	r3, r1, #16
   17810:	vst1.64	{d8-d9}, [r3 :128]
   17814:	add	r1, r1, #32
   17818:	vst1.64	{d8-d9}, [r1 :128]
   1781c:	vst1.64	{d8-d9}, [r0 :128], r7
   17820:	vst1.64	{d8-d9}, [r0 :128]
   17824:	mov	r0, #52	; 0x34
   17828:	vst1.64	{d8-d9}, [r2 :128], r0
   1782c:	str	r4, [r2]
   17830:	movw	r0, #61552	; 0xf070
   17834:	movt	r0, #2
   17838:	vst1.64	{d8-d9}, [r0]
   1783c:	movw	r0, #61568	; 0xf080
   17840:	movt	r0, #2
   17844:	add	r1, r0, #16
   17848:	vst1.64	{d8-d9}, [r1 :128]
   1784c:	vst1.64	{d8-d9}, [r0 :128], r6
   17850:	vst1.64	{d8-d9}, [r0 :128]
   17854:	vpop	{d8-d9}
   17858:	pop	{r4, r5, r6, r7, fp, pc}
   1785c:	movw	r0, #29528	; 0x7358
   17860:	movt	r0, #1
   17864:	movw	r1, #29656	; 0x73d8
   17868:	movt	r1, #1
   1786c:	b	1be70 <__gcov_flush@@Base+0xb8>

00017870 <init_token_int_type@@Base>:
   17870:	push	{fp, lr}
   17874:	mov	fp, sp
   17878:	movw	r1, #61616	; 0xf0b0
   1787c:	movt	r1, #2
   17880:	ldm	r1, {r2, r3, ip, lr}
   17884:	adds	r2, r2, #1
   17888:	adc	r3, r3, #0
   1788c:	adds	ip, ip, #1
   17890:	adc	lr, lr, #0
   17894:	stm	r1, {r2, r3, ip, lr}
   17898:	mov	r1, #0
   1789c:	str	r1, [r0]
   178a0:	pop	{fp, pc}

000178a4 <init_token_int_value@@Base>:
   178a4:	push	{r4, sl, fp, lr}
   178a8:	add	fp, sp, #8
   178ac:	movw	r2, #61632	; 0xf0c0
   178b0:	movt	r2, #2
   178b4:	ldm	r2, {r3, ip, lr}
   178b8:	ldr	r4, [r2, #12]
   178bc:	adds	r3, r3, #1
   178c0:	adc	ip, ip, #0
   178c4:	adds	lr, lr, #1
   178c8:	adc	r4, r4, #0
   178cc:	stm	r2, {r3, ip, lr}
   178d0:	str	r4, [r2, #12]
   178d4:	mov	r2, #1
   178d8:	str	r2, [r0]
   178dc:	str	r1, [r0, #4]
   178e0:	pop	{r4, sl, fp, pc}

000178e4 <init_token_function@@Base>:
   178e4:	push	{r4, sl, fp, lr}
   178e8:	add	fp, sp, #8
   178ec:	movw	r2, #61648	; 0xf0d0
   178f0:	movt	r2, #2
   178f4:	ldm	r2, {r3, ip, lr}
   178f8:	ldr	r4, [r2, #12]
   178fc:	adds	r3, r3, #1
   17900:	adc	ip, ip, #0
   17904:	adds	lr, lr, #1
   17908:	adc	r4, r4, #0
   1790c:	stm	r2, {r3, ip, lr}
   17910:	str	r4, [r2, #12]
   17914:	mov	r2, #2
   17918:	str	r2, [r0]
   1791c:	str	r1, [r0, #4]
   17920:	pop	{r4, sl, fp, pc}

00017924 <init_token_opar@@Base>:
   17924:	push	{fp, lr}
   17928:	mov	fp, sp
   1792c:	movw	r1, #61664	; 0xf0e0
   17930:	movt	r1, #2
   17934:	ldm	r1, {r2, r3, ip, lr}
   17938:	adds	r2, r2, #1
   1793c:	adc	r3, r3, #0
   17940:	adds	ip, ip, #1
   17944:	adc	lr, lr, #0
   17948:	stm	r1, {r2, r3, ip, lr}
   1794c:	mov	r1, #3
   17950:	str	r1, [r0]
   17954:	pop	{fp, pc}

00017958 <init_token_cpar@@Base>:
   17958:	push	{fp, lr}
   1795c:	mov	fp, sp
   17960:	movw	r1, #61680	; 0xf0f0
   17964:	movt	r1, #2
   17968:	ldm	r1, {r2, r3, ip, lr}
   1796c:	adds	r2, r2, #1
   17970:	adc	r3, r3, #0
   17974:	adds	ip, ip, #1
   17978:	adc	lr, lr, #0
   1797c:	stm	r1, {r2, r3, ip, lr}
   17980:	mov	r1, #4
   17984:	str	r1, [r0]
   17988:	pop	{fp, pc}

0001798c <init_token_obra@@Base>:
   1798c:	push	{fp, lr}
   17990:	mov	fp, sp
   17994:	movw	r1, #61696	; 0xf100
   17998:	movt	r1, #2
   1799c:	ldm	r1, {r2, r3, ip, lr}
   179a0:	adds	r2, r2, #1
   179a4:	adc	r3, r3, #0
   179a8:	adds	ip, ip, #1
   179ac:	adc	lr, lr, #0
   179b0:	stm	r1, {r2, r3, ip, lr}
   179b4:	mov	r1, #5
   179b8:	str	r1, [r0]
   179bc:	pop	{fp, pc}

000179c0 <init_token_cbra@@Base>:
   179c0:	push	{fp, lr}
   179c4:	mov	fp, sp
   179c8:	movw	r1, #61712	; 0xf110
   179cc:	movt	r1, #2
   179d0:	ldm	r1, {r2, r3, ip, lr}
   179d4:	adds	r2, r2, #1
   179d8:	adc	r3, r3, #0
   179dc:	adds	ip, ip, #1
   179e0:	adc	lr, lr, #0
   179e4:	stm	r1, {r2, r3, ip, lr}
   179e8:	mov	r1, #6
   179ec:	str	r1, [r0]
   179f0:	pop	{fp, pc}

000179f4 <init_token_return@@Base>:
   179f4:	push	{fp, lr}
   179f8:	mov	fp, sp
   179fc:	movw	r1, #61728	; 0xf120
   17a00:	movt	r1, #2
   17a04:	ldm	r1, {r2, r3, ip, lr}
   17a08:	adds	r2, r2, #1
   17a0c:	adc	r3, r3, #0
   17a10:	adds	ip, ip, #1
   17a14:	adc	lr, lr, #0
   17a18:	stm	r1, {r2, r3, ip, lr}
   17a1c:	mov	r1, #7
   17a20:	str	r1, [r0]
   17a24:	pop	{fp, pc}

00017a28 <init_token_semicolon@@Base>:
   17a28:	push	{fp, lr}
   17a2c:	mov	fp, sp
   17a30:	movw	r1, #61744	; 0xf130
   17a34:	movt	r1, #2
   17a38:	ldm	r1, {r2, r3, ip, lr}
   17a3c:	adds	r2, r2, #1
   17a40:	adc	r3, r3, #0
   17a44:	adds	ip, ip, #1
   17a48:	adc	lr, lr, #0
   17a4c:	stm	r1, {r2, r3, ip, lr}
   17a50:	mov	r1, #8
   17a54:	str	r1, [r0]
   17a58:	pop	{fp, pc}

00017a5c <init_token_eof@@Base>:
   17a5c:	push	{fp, lr}
   17a60:	mov	fp, sp
   17a64:	movw	r1, #61760	; 0xf140
   17a68:	movt	r1, #2
   17a6c:	ldm	r1, {r2, r3, ip, lr}
   17a70:	adds	r2, r2, #1
   17a74:	adc	r3, r3, #0
   17a78:	adds	ip, ip, #1
   17a7c:	adc	lr, lr, #0
   17a80:	stm	r1, {r2, r3, ip, lr}
   17a84:	mov	r1, #9
   17a88:	str	r1, [r0]
   17a8c:	pop	{fp, pc}

00017a90 <init_token_if@@Base>:
   17a90:	push	{fp, lr}
   17a94:	mov	fp, sp
   17a98:	movw	r1, #61776	; 0xf150
   17a9c:	movt	r1, #2
   17aa0:	ldm	r1, {r2, r3, ip, lr}
   17aa4:	adds	r2, r2, #1
   17aa8:	adc	r3, r3, #0
   17aac:	adds	ip, ip, #1
   17ab0:	adc	lr, lr, #0
   17ab4:	stm	r1, {r2, r3, ip, lr}
   17ab8:	mov	r1, #10
   17abc:	str	r1, [r0]
   17ac0:	pop	{fp, pc}

00017ac4 <init_token_else@@Base>:
   17ac4:	push	{fp, lr}
   17ac8:	mov	fp, sp
   17acc:	movw	r1, #61792	; 0xf160
   17ad0:	movt	r1, #2
   17ad4:	ldm	r1, {r2, r3, ip, lr}
   17ad8:	adds	r2, r2, #1
   17adc:	adc	r3, r3, #0
   17ae0:	adds	ip, ip, #1
   17ae4:	adc	lr, lr, #0
   17ae8:	stm	r1, {r2, r3, ip, lr}
   17aec:	mov	r1, #11
   17af0:	str	r1, [r0]
   17af4:	pop	{fp, pc}

00017af8 <init_token_boolean_op@@Base>:
   17af8:	push	{r4, sl, fp, lr}
   17afc:	add	fp, sp, #8
   17b00:	movw	r2, #61808	; 0xf170
   17b04:	movt	r2, #2
   17b08:	ldm	r2, {r3, ip, lr}
   17b0c:	ldr	r4, [r2, #12]
   17b10:	adds	r3, r3, #1
   17b14:	adc	ip, ip, #0
   17b18:	adds	lr, lr, #1
   17b1c:	adc	r4, r4, #0
   17b20:	stm	r2, {r3, ip, lr}
   17b24:	str	r4, [r2, #12]
   17b28:	mov	r2, #12
   17b2c:	str	r2, [r0]
   17b30:	str	r1, [r0, #4]
   17b34:	pop	{r4, sl, fp, pc}

00017b38 <free_token_int_type@@Base>:
   17b38:	push	{fp, lr}
   17b3c:	mov	fp, sp
   17b40:	movw	r1, #61824	; 0xf180
   17b44:	movt	r1, #2
   17b48:	ldm	r1, {r2, r3, ip, lr}
   17b4c:	adds	r2, r2, #1
   17b50:	adc	r3, r3, #0
   17b54:	adds	ip, ip, #1
   17b58:	adc	lr, lr, #0
   17b5c:	stm	r1, {r2, r3, ip, lr}
   17b60:	pop	{fp, lr}
   17b64:	b	1265c <free@plt>

00017b68 <free_token_int_value@@Base>:
   17b68:	push	{fp, lr}
   17b6c:	mov	fp, sp
   17b70:	movw	r1, #61840	; 0xf190
   17b74:	movt	r1, #2
   17b78:	ldm	r1, {r2, r3, ip, lr}
   17b7c:	adds	r2, r2, #1
   17b80:	adc	r3, r3, #0
   17b84:	adds	ip, ip, #1
   17b88:	adc	lr, lr, #0
   17b8c:	stm	r1, {r2, r3, ip, lr}
   17b90:	pop	{fp, lr}
   17b94:	b	1265c <free@plt>

00017b98 <free_token_function@@Base>:
   17b98:	push	{fp, lr}
   17b9c:	mov	fp, sp
   17ba0:	movw	r1, #61856	; 0xf1a0
   17ba4:	movt	r1, #2
   17ba8:	ldm	r1, {r2, r3, ip, lr}
   17bac:	adds	r2, r2, #1
   17bb0:	adc	r3, r3, #0
   17bb4:	adds	ip, ip, #1
   17bb8:	adc	lr, lr, #0
   17bbc:	stm	r1, {r2, r3, ip, lr}
   17bc0:	pop	{fp, lr}
   17bc4:	b	1265c <free@plt>

00017bc8 <free_token_opar@@Base>:
   17bc8:	push	{fp, lr}
   17bcc:	mov	fp, sp
   17bd0:	movw	r1, #61872	; 0xf1b0
   17bd4:	movt	r1, #2
   17bd8:	ldm	r1, {r2, r3, ip, lr}
   17bdc:	adds	r2, r2, #1
   17be0:	adc	r3, r3, #0
   17be4:	adds	ip, ip, #1
   17be8:	adc	lr, lr, #0
   17bec:	stm	r1, {r2, r3, ip, lr}
   17bf0:	pop	{fp, lr}
   17bf4:	b	1265c <free@plt>

00017bf8 <free_token_cpar@@Base>:
   17bf8:	push	{fp, lr}
   17bfc:	mov	fp, sp
   17c00:	movw	r1, #61888	; 0xf1c0
   17c04:	movt	r1, #2
   17c08:	ldm	r1, {r2, r3, ip, lr}
   17c0c:	adds	r2, r2, #1
   17c10:	adc	r3, r3, #0
   17c14:	adds	ip, ip, #1
   17c18:	adc	lr, lr, #0
   17c1c:	stm	r1, {r2, r3, ip, lr}
   17c20:	pop	{fp, lr}
   17c24:	b	1265c <free@plt>

00017c28 <free_token_obra@@Base>:
   17c28:	push	{fp, lr}
   17c2c:	mov	fp, sp
   17c30:	movw	r1, #61904	; 0xf1d0
   17c34:	movt	r1, #2
   17c38:	ldm	r1, {r2, r3, ip, lr}
   17c3c:	adds	r2, r2, #1
   17c40:	adc	r3, r3, #0
   17c44:	adds	ip, ip, #1
   17c48:	adc	lr, lr, #0
   17c4c:	stm	r1, {r2, r3, ip, lr}
   17c50:	pop	{fp, lr}
   17c54:	b	1265c <free@plt>

00017c58 <free_token_cbra@@Base>:
   17c58:	push	{fp, lr}
   17c5c:	mov	fp, sp
   17c60:	movw	r1, #61920	; 0xf1e0
   17c64:	movt	r1, #2
   17c68:	ldm	r1, {r2, r3, ip, lr}
   17c6c:	adds	r2, r2, #1
   17c70:	adc	r3, r3, #0
   17c74:	adds	ip, ip, #1
   17c78:	adc	lr, lr, #0
   17c7c:	stm	r1, {r2, r3, ip, lr}
   17c80:	pop	{fp, lr}
   17c84:	b	1265c <free@plt>

00017c88 <free_token_return@@Base>:
   17c88:	push	{fp, lr}
   17c8c:	mov	fp, sp
   17c90:	movw	r1, #61936	; 0xf1f0
   17c94:	movt	r1, #2
   17c98:	ldm	r1, {r2, r3, ip, lr}
   17c9c:	adds	r2, r2, #1
   17ca0:	adc	r3, r3, #0
   17ca4:	adds	ip, ip, #1
   17ca8:	adc	lr, lr, #0
   17cac:	stm	r1, {r2, r3, ip, lr}
   17cb0:	pop	{fp, lr}
   17cb4:	b	1265c <free@plt>

00017cb8 <free_token_semicolon@@Base>:
   17cb8:	push	{fp, lr}
   17cbc:	mov	fp, sp
   17cc0:	movw	r1, #61952	; 0xf200
   17cc4:	movt	r1, #2
   17cc8:	ldm	r1, {r2, r3, ip, lr}
   17ccc:	adds	r2, r2, #1
   17cd0:	adc	r3, r3, #0
   17cd4:	adds	ip, ip, #1
   17cd8:	adc	lr, lr, #0
   17cdc:	stm	r1, {r2, r3, ip, lr}
   17ce0:	pop	{fp, lr}
   17ce4:	b	1265c <free@plt>

00017ce8 <free_token_eof@@Base>:
   17ce8:	push	{fp, lr}
   17cec:	mov	fp, sp
   17cf0:	movw	r1, #61968	; 0xf210
   17cf4:	movt	r1, #2
   17cf8:	ldm	r1, {r2, r3, ip, lr}
   17cfc:	adds	r2, r2, #1
   17d00:	adc	r3, r3, #0
   17d04:	adds	ip, ip, #1
   17d08:	adc	lr, lr, #0
   17d0c:	stm	r1, {r2, r3, ip, lr}
   17d10:	pop	{fp, lr}
   17d14:	b	1265c <free@plt>

00017d18 <free_token_if@@Base>:
   17d18:	push	{fp, lr}
   17d1c:	mov	fp, sp
   17d20:	movw	r1, #61984	; 0xf220
   17d24:	movt	r1, #2
   17d28:	ldm	r1, {r2, r3, ip, lr}
   17d2c:	adds	r2, r2, #1
   17d30:	adc	r3, r3, #0
   17d34:	adds	ip, ip, #1
   17d38:	adc	lr, lr, #0
   17d3c:	stm	r1, {r2, r3, ip, lr}
   17d40:	pop	{fp, lr}
   17d44:	b	1265c <free@plt>

00017d48 <free_token_else@@Base>:
   17d48:	push	{fp, lr}
   17d4c:	mov	fp, sp
   17d50:	movw	r1, #62000	; 0xf230
   17d54:	movt	r1, #2
   17d58:	ldm	r1, {r2, r3, ip, lr}
   17d5c:	adds	r2, r2, #1
   17d60:	adc	r3, r3, #0
   17d64:	adds	ip, ip, #1
   17d68:	adc	lr, lr, #0
   17d6c:	stm	r1, {r2, r3, ip, lr}
   17d70:	pop	{fp, lr}
   17d74:	b	1265c <free@plt>

00017d78 <free_token_boolean_op@@Base>:
   17d78:	push	{r4, r5, fp, lr}
   17d7c:	add	fp, sp, #8
   17d80:	mov	r4, r0
   17d84:	movw	r5, #62016	; 0xf240
   17d88:	movt	r5, #2
   17d8c:	ldrd	r0, [r5]
   17d90:	adds	r0, r0, #1
   17d94:	adc	r1, r1, #0
   17d98:	strd	r0, [r5]
   17d9c:	ldr	r0, [r4, #4]
   17da0:	cmp	r0, #0
   17da4:	beq	17dc4 <free_token_boolean_op@@Base+0x4c>
   17da8:	ldrd	r2, [r5, #8]
   17dac:	adds	r2, r2, #1
   17db0:	adc	r3, r3, #0
   17db4:	strd	r2, [r5, #8]
   17db8:	bl	1265c <free@plt>
   17dbc:	add	r0, r5, #24
   17dc0:	b	17dc8 <free_token_boolean_op@@Base+0x50>
   17dc4:	add	r0, r5, #16
   17dc8:	ldrd	r2, [r0]
   17dcc:	adds	r2, r2, #1
   17dd0:	adc	r3, r3, #0
   17dd4:	strd	r2, [r0]
   17dd8:	ldrd	r0, [r5, #32]
   17ddc:	adds	r0, r0, #1
   17de0:	adc	r1, r1, #0
   17de4:	strd	r0, [r5, #32]
   17de8:	mov	r0, r4
   17dec:	pop	{r4, r5, fp, lr}
   17df0:	b	1265c <free@plt>
   17df4:	push	{r4, r5, r6, lr}
   17df8:	sub	sp, sp, #8
   17dfc:	movw	r0, #54439	; 0xd4a7
   17e00:	movt	r0, #1
   17e04:	movw	r1, #51366	; 0xc8a6
   17e08:	movt	r1, #1
   17e0c:	movw	r2, #23366	; 0x5b46
   17e10:	movt	r2, #47030	; 0xb7b6
   17e14:	bl	194f4 <next@@Base+0x12dc>
   17e18:	movw	r0, #55520	; 0xd8e0
   17e1c:	movt	r0, #1
   17e20:	add	r4, r0, #4
   17e24:	mov	r5, #0
   17e28:	movw	r6, #54992	; 0xd6d0
   17e2c:	movt	r6, #1
   17e30:	mov	r3, r6
   17e34:	ldr	r0, [r3, r5]!
   17e38:	ldr	r1, [r3, #16]
   17e3c:	str	r1, [sp]
   17e40:	ldmib	r3, {r1, r2}
   17e44:	ldrb	r3, [r3, #12]
   17e48:	bl	19c14 <next@@Base+0x19fc>
   17e4c:	ldrd	r0, [r4, #-4]
   17e50:	bl	1a4c8 <next@@Base+0x22b0>
   17e54:	add	r5, r5, #20
   17e58:	add	r4, r4, #8
   17e5c:	cmp	r5, #520	; 0x208
   17e60:	bne	17e30 <free_token_boolean_op@@Base+0xb8>
   17e64:	bl	1ac50 <next@@Base+0x2a38>
   17e68:	add	sp, sp, #8
   17e6c:	pop	{r4, r5, r6, lr}
   17e70:	b	1b9bc <next@@Base+0x37a4>
   17e74:	push	{fp, lr}
   17e78:	bl	17df4 <free_token_boolean_op@@Base+0x7c>
   17e7c:	vmov.i32	q8, #0	; 0x00000000
   17e80:	movw	r0, #61632	; 0xf0c0
   17e84:	movt	r0, #2
   17e88:	vst1.64	{d16-d17}, [r0]
   17e8c:	movw	r0, #61616	; 0xf0b0
   17e90:	movt	r0, #2
   17e94:	vst1.64	{d16-d17}, [r0]
   17e98:	movw	r0, #61648	; 0xf0d0
   17e9c:	movt	r0, #2
   17ea0:	vst1.64	{d16-d17}, [r0]
   17ea4:	movw	r0, #61664	; 0xf0e0
   17ea8:	movt	r0, #2
   17eac:	vst1.64	{d16-d17}, [r0]
   17eb0:	movw	r0, #61680	; 0xf0f0
   17eb4:	movt	r0, #2
   17eb8:	vst1.64	{d16-d17}, [r0]
   17ebc:	movw	r0, #61696	; 0xf100
   17ec0:	movt	r0, #2
   17ec4:	vst1.64	{d16-d17}, [r0]
   17ec8:	movw	r0, #61712	; 0xf110
   17ecc:	movt	r0, #2
   17ed0:	vst1.64	{d16-d17}, [r0]
   17ed4:	movw	r0, #61728	; 0xf120
   17ed8:	movt	r0, #2
   17edc:	vst1.64	{d16-d17}, [r0]
   17ee0:	movw	r0, #61744	; 0xf130
   17ee4:	movt	r0, #2
   17ee8:	vst1.64	{d16-d17}, [r0]
   17eec:	movw	r0, #61760	; 0xf140
   17ef0:	movt	r0, #2
   17ef4:	vst1.64	{d16-d17}, [r0]
   17ef8:	movw	r0, #61776	; 0xf150
   17efc:	movt	r0, #2
   17f00:	vst1.64	{d16-d17}, [r0]
   17f04:	movw	r0, #61792	; 0xf160
   17f08:	movt	r0, #2
   17f0c:	vst1.64	{d16-d17}, [r0]
   17f10:	movw	r0, #61808	; 0xf170
   17f14:	movt	r0, #2
   17f18:	vst1.64	{d16-d17}, [r0]
   17f1c:	movw	r0, #61824	; 0xf180
   17f20:	movt	r0, #2
   17f24:	vst1.64	{d16-d17}, [r0]
   17f28:	movw	r0, #61840	; 0xf190
   17f2c:	movt	r0, #2
   17f30:	vst1.64	{d16-d17}, [r0]
   17f34:	movw	r0, #61856	; 0xf1a0
   17f38:	movt	r0, #2
   17f3c:	vst1.64	{d16-d17}, [r0]
   17f40:	movw	r0, #61872	; 0xf1b0
   17f44:	movt	r0, #2
   17f48:	vst1.64	{d16-d17}, [r0]
   17f4c:	movw	r0, #61888	; 0xf1c0
   17f50:	movt	r0, #2
   17f54:	vst1.64	{d16-d17}, [r0]
   17f58:	movw	r0, #61904	; 0xf1d0
   17f5c:	movt	r0, #2
   17f60:	vst1.64	{d16-d17}, [r0]
   17f64:	movw	r0, #61920	; 0xf1e0
   17f68:	movt	r0, #2
   17f6c:	vst1.64	{d16-d17}, [r0]
   17f70:	movw	r0, #61936	; 0xf1f0
   17f74:	movt	r0, #2
   17f78:	vst1.64	{d16-d17}, [r0]
   17f7c:	movw	r0, #61952	; 0xf200
   17f80:	movt	r0, #2
   17f84:	vst1.64	{d16-d17}, [r0]
   17f88:	movw	r0, #61968	; 0xf210
   17f8c:	movt	r0, #2
   17f90:	vst1.64	{d16-d17}, [r0]
   17f94:	movw	r0, #61984	; 0xf220
   17f98:	movt	r0, #2
   17f9c:	vst1.64	{d16-d17}, [r0]
   17fa0:	movw	r0, #62000	; 0xf230
   17fa4:	movt	r0, #2
   17fa8:	vst1.64	{d16-d17}, [r0]
   17fac:	movw	r0, #62016	; 0xf240
   17fb0:	movt	r0, #2
   17fb4:	mov	r1, #0
   17fb8:	str	r1, [r0, #32]
   17fbc:	add	r2, r0, #16
   17fc0:	vst1.64	{d16-d17}, [r2 :128]
   17fc4:	mov	r2, #36	; 0x24
   17fc8:	vst1.64	{d16-d17}, [r0 :128], r2
   17fcc:	str	r1, [r0]
   17fd0:	pop	{fp, pc}
   17fd4:	movw	r0, #32244	; 0x7df4
   17fd8:	movt	r0, #1
   17fdc:	movw	r1, #32372	; 0x7e74
   17fe0:	movt	r1, #1
   17fe4:	b	1be70 <__gcov_flush@@Base+0xb8>

00017fe8 <init_lexer@@Base>:
   17fe8:	push	{r4, sl, fp, lr}
   17fec:	add	fp, sp, #8
   17ff0:	movw	r2, #62064	; 0xf270
   17ff4:	movt	r2, #2
   17ff8:	ldm	r2, {r3, ip, lr}
   17ffc:	ldr	r4, [r2, #12]
   18000:	adds	r3, r3, #1
   18004:	adc	ip, ip, #0
   18008:	adds	lr, lr, #1
   1800c:	adc	r4, r4, #0
   18010:	stm	r2, {r3, ip, lr}
   18014:	str	r4, [r2, #12]
   18018:	mov	r2, #0
   1801c:	stm	r0, {r1, r2}
   18020:	str	r2, [r0, #8]
   18024:	pop	{r4, sl, fp, pc}

00018028 <destroy_lexer@@Base>:
   18028:	push	{r4, sl, fp, lr}
   1802c:	add	fp, sp, #8
   18030:	movw	r4, #62080	; 0xf280
   18034:	movt	r4, #2
   18038:	ldrd	r2, [r4]
   1803c:	adds	r2, r2, #1
   18040:	adc	r3, r3, #0
   18044:	strd	r2, [r4]
   18048:	ldr	r0, [r0, #4]
   1804c:	cmp	r0, #0
   18050:	beq	18070 <destroy_lexer@@Base+0x48>
   18054:	ldrd	r2, [r4, #8]
   18058:	adds	r2, r2, #1
   1805c:	adc	r3, r3, #0
   18060:	strd	r2, [r4, #8]
   18064:	bl	18098 <free_stack_base@@Base>
   18068:	add	r0, r4, #24
   1806c:	b	18074 <destroy_lexer@@Base+0x4c>
   18070:	add	r0, r4, #16
   18074:	ldrd	r2, [r0]
   18078:	adds	r2, r2, #1
   1807c:	adc	r3, r3, #0
   18080:	strd	r2, [r0]
   18084:	ldrd	r0, [r4, #32]
   18088:	adds	r0, r0, #1
   1808c:	adc	r1, r1, #0
   18090:	strd	r0, [r4, #32]
   18094:	pop	{r4, sl, fp, pc}

00018098 <free_stack_base@@Base>:
   18098:	push	{fp, lr}
   1809c:	mov	fp, sp
   180a0:	movw	r1, #62120	; 0xf2a8
   180a4:	movt	r1, #2
   180a8:	ldm	r1, {r2, r3, ip, lr}
   180ac:	adds	r2, r2, #1
   180b0:	adc	r3, r3, #0
   180b4:	adds	ip, ip, #1
   180b8:	adc	lr, lr, #0
   180bc:	stm	r1, {r2, r3, ip, lr}
   180c0:	pop	{fp, lr}
   180c4:	b	1265c <free@plt>

000180c8 <push_back@@Base>:
   180c8:	push	{r4, r5, r6, sl, fp, lr}
   180cc:	add	fp, sp, #16
   180d0:	mov	r6, r1
   180d4:	mov	r5, r0
   180d8:	movw	r0, #62136	; 0xf2b8
   180dc:	movt	r0, #2
   180e0:	ldm	r0, {r1, r2, r3, r4}
   180e4:	adds	r1, r1, #1
   180e8:	adc	r2, r2, #0
   180ec:	adds	r3, r3, #1
   180f0:	adc	r4, r4, #0
   180f4:	stm	r0, {r1, r2, r3, r4}
   180f8:	mov	r0, #8
   180fc:	bl	126ec <malloc@plt>
   18100:	ldr	r1, [r5, #4]
   18104:	stm	r0, {r1, r6}
   18108:	str	r0, [r5, #4]
   1810c:	pop	{r4, r5, r6, sl, fp, pc}

00018110 <get_char@@Base>:
   18110:	push	{fp, lr}
   18114:	mov	fp, sp
   18118:	movw	r1, #62152	; 0xf2c8
   1811c:	movt	r1, #2
   18120:	ldm	r1, {r2, r3, ip, lr}
   18124:	adds	r2, r2, #1
   18128:	adc	r3, r3, #0
   1812c:	adds	ip, ip, #1
   18130:	adc	lr, lr, #0
   18134:	stm	r1, {r2, r3, ip, lr}
   18138:	ldr	r1, [r0]
   1813c:	ldr	r2, [r0, #8]
   18140:	add	r3, r2, #1
   18144:	str	r3, [r0, #8]
   18148:	ldrb	r0, [r1, r2]
   1814c:	pop	{fp, pc}

00018150 <push_back_chars@@Base>:
   18150:	push	{r4, r5, r6, r7, fp, lr}
   18154:	add	fp, sp, #16
   18158:	movw	r2, #62176	; 0xf2e0
   1815c:	movt	r2, #2
   18160:	ldrd	r4, [r2]
   18164:	adds	r4, r4, #1
   18168:	adc	r5, r5, #0
   1816c:	strd	r4, [r2]
   18170:	ldr	r3, [r0, #8]
   18174:	cmp	r3, r1
   18178:	bcc	181ac <push_back_chars@@Base+0x5c>
   1817c:	ldrd	r4, [r2, #8]
   18180:	ldrd	r6, [r2, #24]
   18184:	adds	r4, r4, #1
   18188:	adc	r5, r5, #0
   1818c:	adds	r6, r6, #1
   18190:	str	r6, [r2, #24]
   18194:	strd	r4, [r2, #8]
   18198:	adc	r7, r7, #0
   1819c:	str	r7, [r2, #28]
   181a0:	sub	r1, r3, r1
   181a4:	str	r1, [r0, #8]
   181a8:	pop	{r4, r5, r6, r7, fp, pc}
   181ac:	ldrd	r0, [r2, #16]
   181b0:	adds	r0, r0, #1
   181b4:	adc	r1, r1, #0
   181b8:	strd	r0, [r2, #16]
   181bc:	movw	r0, #57568	; 0xe0e0
   181c0:	movt	r0, #2
   181c4:	ldr	r3, [r0]
   181c8:	movw	r0, #55728	; 0xd9b0
   181cc:	movt	r0, #1
   181d0:	mov	r1, #32
   181d4:	mov	r2, #1
   181d8:	bl	126c8 <fwrite@plt>
   181dc:	mov	r0, #1
   181e0:	bl	12728 <exit@plt>

000181e4 <push_back_one_char@@Base>:
   181e4:	push	{fp, lr}
   181e8:	mov	fp, sp
   181ec:	movw	r1, #62208	; 0xf300
   181f0:	movt	r1, #2
   181f4:	ldm	r1, {r2, r3, ip, lr}
   181f8:	adds	r2, r2, #1
   181fc:	adc	r3, r3, #0
   18200:	adds	ip, ip, #1
   18204:	adc	lr, lr, #0
   18208:	stm	r1, {r2, r3, ip, lr}
   1820c:	mov	r1, #1
   18210:	pop	{fp, lr}
   18214:	b	18150 <push_back_chars@@Base>

00018218 <next@@Base>:
   18218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1821c:	add	fp, sp, #28
   18220:	sub	sp, sp, #524	; 0x20c
   18224:	mov	r4, r0
   18228:	movw	r5, #62224	; 0xf310
   1822c:	movt	r5, #2
   18230:	ldrd	r0, [r5]
   18234:	adds	r0, r0, #1
   18238:	adc	r1, r1, #0
   1823c:	strd	r0, [r5]
   18240:	ldr	r0, [r4, #4]
   18244:	cmp	r0, #0
   18248:	beq	1827c <next@@Base+0x64>
   1824c:	ldrd	r2, [r5, #8]
   18250:	adds	r2, r2, #1
   18254:	adc	r3, r3, #0
   18258:	strd	r2, [r5, #8]
   1825c:	ldr	r1, [r0]
   18260:	str	r1, [r4, #4]
   18264:	ldr	r6, [r0, #4]
   18268:	mov	r1, #0
   1826c:	str	r1, [r0, #4]
   18270:	bl	18098 <free_stack_base@@Base>
   18274:	add	r0, r5, #24
   18278:	b	18668 <next@@Base+0x450>
   1827c:	ldrd	r0, [r5, #16]
   18280:	adds	r0, r0, #1
   18284:	adc	r1, r1, #0
   18288:	strd	r0, [r5, #16]
   1828c:	mov	r0, r4
   18290:	bl	18110 <get_char@@Base>
   18294:	ldrd	r2, [r5, #32]
   18298:	adds	r2, r2, #1
   1829c:	adc	r3, r3, #0
   182a0:	strd	r2, [r5, #32]
   182a4:	cmp	r0, #0
   182a8:	beq	18644 <next@@Base+0x42c>
   182ac:	mov	r8, #0
   182b0:	add	r9, r5, #56	; 0x38
   182b4:	add	r6, r5, #112	; 0x70
   182b8:	add	sl, r5, #160	; 0xa0
   182bc:	mov	r1, #0
   182c0:	str	r1, [sp, #4]
   182c4:	b	182fc <next@@Base+0xe4>
   182c8:	mov	r7, r9
   182cc:	ldrd	r2, [r7]
   182d0:	adds	r2, r2, #1
   182d4:	adc	r3, r3, #0
   182d8:	strd	r2, [r7]
   182dc:	ldr	r1, [r5, #984]	; 0x3d8
   182e0:	ldr	r2, [r5, #988]	; 0x3dc
   182e4:	adds	r1, r1, #1
   182e8:	adc	r2, r2, #0
   182ec:	str	r1, [r5, #984]	; 0x3d8
   182f0:	str	r2, [r5, #988]	; 0x3dc
   182f4:	tst	r0, #255	; 0xff
   182f8:	beq	18644 <next@@Base+0x42c>
   182fc:	ldrd	r2, [r5, #40]	; 0x28
   18300:	adds	r2, r2, #1
   18304:	adc	r3, r3, #0
   18308:	strd	r2, [r5, #40]	; 0x28
   1830c:	cmp	r8, #5
   18310:	bhi	182c8 <next@@Base+0xb0>
   18314:	add	r1, pc, #0
   18318:	ldr	pc, [r1, r8, lsl #2]
   1831c:	andeq	r8, r1, r4, lsr r3
   18320:	muleq	r1, ip, r6
   18324:	andeq	r8, r1, r0, lsl #18
   18328:	andeq	r8, r1, r8, lsl r7
   1832c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18330:	andeq	r8, r1, r8, lsl #19
   18334:	ldrd	r2, [r5, #64]	; 0x40
   18338:	adds	r2, r2, #1
   1833c:	adc	r3, r3, #0
   18340:	strd	r2, [r5, #64]	; 0x40
   18344:	uxtb	r2, r0
   18348:	cmp	r2, #9
   1834c:	mov	r1, r6
   18350:	beq	183a0 <next@@Base+0x188>
   18354:	ldr	r8, [r5, #120]	; 0x78
   18358:	ldr	r1, [r5, #124]	; 0x7c
   1835c:	adds	r8, r8, #1
   18360:	adc	r1, r1, #0
   18364:	str	r8, [r5, #120]	; 0x78
   18368:	str	r1, [r5, #124]	; 0x7c
   1836c:	cmp	r2, #32
   18370:	bne	1837c <next@@Base+0x164>
   18374:	add	r1, r5, #128	; 0x80
   18378:	b	183a0 <next@@Base+0x188>
   1837c:	ldr	r8, [r5, #136]	; 0x88
   18380:	ldr	r1, [r5, #140]	; 0x8c
   18384:	adds	r8, r8, #1
   18388:	adc	r1, r1, #0
   1838c:	str	r8, [r5, #136]	; 0x88
   18390:	str	r1, [r5, #140]	; 0x8c
   18394:	cmp	r2, #10
   18398:	bne	183c4 <next@@Base+0x1ac>
   1839c:	add	r1, r5, #144	; 0x90
   183a0:	ldm	r1, {r0, r3}
   183a4:	adds	r0, r0, #1
   183a8:	adc	r3, r3, #0
   183ac:	stm	r1, {r0, r3}
   183b0:	mov	r8, #0
   183b4:	mov	r7, sl
   183b8:	mov	r0, r4
   183bc:	bl	18110 <get_char@@Base>
   183c0:	b	182cc <next@@Base+0xb4>
   183c4:	ldr	r8, [r5, #152]	; 0x98
   183c8:	ldr	r1, [r5, #156]	; 0x9c
   183cc:	adds	r8, r8, #1
   183d0:	adc	r1, r1, #0
   183d4:	str	r8, [r5, #152]	; 0x98
   183d8:	str	r1, [r5, #156]	; 0x9c
   183dc:	cmp	r2, #48	; 0x30
   183e0:	beq	18ad4 <next@@Base+0x8bc>
   183e4:	ldr	r8, [r5, #176]	; 0xb0
   183e8:	ldr	r1, [r5, #180]	; 0xb4
   183ec:	adds	r8, r8, #1
   183f0:	adc	r1, r1, #0
   183f4:	str	r8, [r5, #176]	; 0xb0
   183f8:	str	r1, [r5, #180]	; 0xb4
   183fc:	cmp	r2, #49	; 0x31
   18400:	bcc	18b00 <next@@Base+0x8e8>
   18404:	ldr	r8, [r5, #192]	; 0xc0
   18408:	ldr	r1, [r5, #196]	; 0xc4
   1840c:	adds	r8, r8, #1
   18410:	adc	r1, r1, #0
   18414:	str	r8, [r5, #192]	; 0xc0
   18418:	str	r1, [r5, #196]	; 0xc4
   1841c:	cmp	r2, #57	; 0x39
   18420:	bhi	18454 <next@@Base+0x23c>
   18424:	add	r1, sp, #8
   18428:	ldr	r2, [sp, #4]
   1842c:	strb	r0, [r1, r2]
   18430:	ldrd	r0, [r5, #208]	; 0xd0
   18434:	adds	r0, r0, #1
   18438:	adc	r1, r1, #0
   1843c:	strd	r0, [r5, #208]	; 0xd0
   18440:	add	r7, r5, #224	; 0xe0
   18444:	add	r2, r2, #1
   18448:	str	r2, [sp, #4]
   1844c:	mov	r8, #1
   18450:	b	183b8 <next@@Base+0x1a0>
   18454:	ldr	r8, [r5, #216]	; 0xd8
   18458:	ldr	r1, [r5, #220]	; 0xdc
   1845c:	ldr	r3, [r5, #240]	; 0xf0
   18460:	ldr	r7, [r5, #244]	; 0xf4
   18464:	adds	r3, r3, #1
   18468:	adc	r7, r7, #0
   1846c:	adds	r8, r8, #1
   18470:	str	r3, [r5, #240]	; 0xf0
   18474:	adc	r1, r1, #0
   18478:	ldr	r3, [r5, #264]	; 0x108
   1847c:	adds	r3, r3, #1
   18480:	str	r3, [r5, #264]	; 0x108
   18484:	str	r8, [r5, #216]	; 0xd8
   18488:	str	r1, [r5, #220]	; 0xdc
   1848c:	str	r7, [r5, #244]	; 0xf4
   18490:	ldr	r1, [r5, #268]	; 0x10c
   18494:	adc	r1, r1, #0
   18498:	str	r1, [r5, #268]	; 0x10c
   1849c:	cmp	r2, #123	; 0x7b
   184a0:	beq	18b88 <next@@Base+0x970>
   184a4:	ldr	r1, [r5, #288]	; 0x120
   184a8:	ldr	r3, [r5, #292]	; 0x124
   184ac:	adds	r1, r1, #1
   184b0:	adc	r3, r3, #0
   184b4:	str	r1, [r5, #288]	; 0x120
   184b8:	str	r3, [r5, #292]	; 0x124
   184bc:	cmp	r2, #125	; 0x7d
   184c0:	beq	18bb8 <next@@Base+0x9a0>
   184c4:	ldr	r1, [r5, #312]	; 0x138
   184c8:	ldr	r3, [r5, #316]	; 0x13c
   184cc:	adds	r1, r1, #1
   184d0:	adc	r3, r3, #0
   184d4:	str	r1, [r5, #312]	; 0x138
   184d8:	str	r3, [r5, #316]	; 0x13c
   184dc:	cmp	r2, #59	; 0x3b
   184e0:	beq	18be8 <next@@Base+0x9d0>
   184e4:	ldr	r1, [r5, #336]	; 0x150
   184e8:	ldr	r3, [r5, #340]	; 0x154
   184ec:	adds	r1, r1, #1
   184f0:	adc	r3, r3, #0
   184f4:	str	r1, [r5, #336]	; 0x150
   184f8:	str	r3, [r5, #340]	; 0x154
   184fc:	cmp	r2, #101	; 0x65
   18500:	bne	1853c <next@@Base+0x324>
   18504:	add	r1, sp, #8
   18508:	ldr	r2, [sp, #4]
   1850c:	strb	r0, [r1, r2]
   18510:	ldr	r0, [r5, #352]	; 0x160
   18514:	ldr	r1, [r5, #356]	; 0x164
   18518:	adds	r0, r0, #1
   1851c:	adc	r1, r1, #0
   18520:	str	r0, [r5, #352]	; 0x160
   18524:	str	r1, [r5, #356]	; 0x164
   18528:	add	r7, r5, #368	; 0x170
   1852c:	add	r2, r2, #1
   18530:	str	r2, [sp, #4]
   18534:	mov	r8, #5
   18538:	b	183b8 <next@@Base+0x1a0>
   1853c:	ldr	r1, [r5, #360]	; 0x168
   18540:	ldr	r3, [r5, #364]	; 0x16c
   18544:	adds	r1, r1, #1
   18548:	adc	r3, r3, #0
   1854c:	str	r1, [r5, #360]	; 0x168
   18550:	str	r3, [r5, #364]	; 0x16c
   18554:	cmp	r2, #105	; 0x69
   18558:	bne	18594 <next@@Base+0x37c>
   1855c:	add	r1, sp, #8
   18560:	ldr	r2, [sp, #4]
   18564:	strb	r0, [r1, r2]
   18568:	ldr	r0, [r5, #376]	; 0x178
   1856c:	ldr	r1, [r5, #380]	; 0x17c
   18570:	adds	r0, r0, #1
   18574:	adc	r1, r1, #0
   18578:	str	r0, [r5, #376]	; 0x178
   1857c:	str	r1, [r5, #380]	; 0x17c
   18580:	add	r7, r5, #392	; 0x188
   18584:	add	r2, r2, #1
   18588:	str	r2, [sp, #4]
   1858c:	mov	r8, #2
   18590:	b	183b8 <next@@Base+0x1a0>
   18594:	ldr	r1, [r5, #384]	; 0x180
   18598:	ldr	r3, [r5, #388]	; 0x184
   1859c:	adds	r1, r1, #1
   185a0:	adc	r3, r3, #0
   185a4:	str	r1, [r5, #384]	; 0x180
   185a8:	str	r3, [r5, #388]	; 0x184
   185ac:	cmp	r2, #109	; 0x6d
   185b0:	bne	185ec <next@@Base+0x3d4>
   185b4:	add	r1, sp, #8
   185b8:	ldr	r2, [sp, #4]
   185bc:	strb	r0, [r1, r2]
   185c0:	ldr	r0, [r5, #400]	; 0x190
   185c4:	ldr	r1, [r5, #404]	; 0x194
   185c8:	adds	r0, r0, #1
   185cc:	adc	r1, r1, #0
   185d0:	str	r0, [r5, #400]	; 0x190
   185d4:	str	r1, [r5, #404]	; 0x194
   185d8:	add	r7, r5, #416	; 0x1a0
   185dc:	add	r2, r2, #1
   185e0:	str	r2, [sp, #4]
   185e4:	mov	r8, #3
   185e8:	b	183b8 <next@@Base+0x1a0>
   185ec:	ldr	r1, [r5, #408]	; 0x198
   185f0:	ldr	r3, [r5, #412]	; 0x19c
   185f4:	adds	r1, r1, #1
   185f8:	adc	r3, r3, #0
   185fc:	str	r1, [r5, #408]	; 0x198
   18600:	str	r3, [r5, #412]	; 0x19c
   18604:	cmp	r2, #114	; 0x72
   18608:	bne	18ed0 <next@@Base+0xcb8>
   1860c:	add	r1, sp, #8
   18610:	ldr	r2, [sp, #4]
   18614:	strb	r0, [r1, r2]
   18618:	ldr	r0, [r5, #424]	; 0x1a8
   1861c:	ldr	r1, [r5, #428]	; 0x1ac
   18620:	adds	r0, r0, #1
   18624:	adc	r1, r1, #0
   18628:	str	r0, [r5, #424]	; 0x1a8
   1862c:	str	r1, [r5, #428]	; 0x1ac
   18630:	add	r7, r5, #440	; 0x1b8
   18634:	add	r2, r2, #1
   18638:	str	r2, [sp, #4]
   1863c:	mov	r8, #4
   18640:	b	183b8 <next@@Base+0x1a0>
   18644:	ldrd	r0, [r5, #48]	; 0x30
   18648:	adds	r0, r0, #1
   1864c:	adc	r1, r1, #0
   18650:	strd	r0, [r5, #48]	; 0x30
   18654:	mov	r0, #4
   18658:	bl	126ec <malloc@plt>
   1865c:	mov	r6, r0
   18660:	bl	17a5c <init_token_eof@@Base>
   18664:	add	r0, r5, #992	; 0x3e0
   18668:	ldrd	r2, [r0]
   1866c:	adds	r2, r2, #1
   18670:	adc	r3, r3, #0
   18674:	strd	r2, [r0]
   18678:	ldr	r0, [r5, #1000]	; 0x3e8
   1867c:	ldr	r1, [r5, #1004]	; 0x3ec
   18680:	adds	r0, r0, #1
   18684:	adc	r1, r1, #0
   18688:	str	r0, [r5, #1000]	; 0x3e8
   1868c:	str	r1, [r5, #1004]	; 0x3ec
   18690:	mov	r0, r6
   18694:	sub	sp, fp, #28
   18698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1869c:	ldrd	r2, [r5, #72]	; 0x48
   186a0:	adds	r2, r2, #1
   186a4:	adc	r3, r3, #0
   186a8:	strd	r2, [r5, #72]	; 0x48
   186ac:	sub	r1, r0, #48	; 0x30
   186b0:	uxtb	r1, r1
   186b4:	add	r7, sp, #8
   186b8:	cmp	r1, #9
   186bc:	bhi	18a38 <next@@Base+0x820>
   186c0:	ldr	r6, [sp, #4]
   186c4:	strb	r0, [r7, r6]
   186c8:	ldr	r0, [r5, #696]	; 0x2b8
   186cc:	ldr	r1, [r5, #700]	; 0x2bc
   186d0:	adds	r0, r0, #1
   186d4:	adc	r1, r1, #0
   186d8:	str	r0, [r5, #696]	; 0x2b8
   186dc:	str	r1, [r5, #700]	; 0x2bc
   186e0:	mov	r0, r4
   186e4:	bl	18110 <get_char@@Base>
   186e8:	ldr	r1, [r5, #712]	; 0x2c8
   186ec:	ldr	r2, [r5, #716]	; 0x2cc
   186f0:	adds	r1, r1, #1
   186f4:	adc	r2, r2, #0
   186f8:	str	r1, [r5, #712]	; 0x2c8
   186fc:	str	r2, [r5, #716]	; 0x2cc
   18700:	add	r6, r6, #1
   18704:	sub	r1, r0, #48	; 0x30
   18708:	uxtb	r1, r1
   1870c:	cmp	r1, #10
   18710:	bcc	186c4 <next@@Base+0x4ac>
   18714:	b	18a3c <next@@Base+0x824>
   18718:	ldrd	r2, [r5, #88]	; 0x58
   1871c:	adds	r2, r2, #1
   18720:	adc	r3, r3, #0
   18724:	strd	r2, [r5, #88]	; 0x58
   18728:	uxtb	r1, r0
   1872c:	cmp	r1, #97	; 0x61
   18730:	bne	19168 <next@@Base+0xf50>
   18734:	add	r9, sp, #8
   18738:	ldr	r7, [sp, #4]
   1873c:	strb	r0, [r9, r7]
   18740:	ldr	r0, [r5, #792]	; 0x318
   18744:	ldr	r1, [r5, #796]	; 0x31c
   18748:	adds	r0, r0, #1
   1874c:	adc	r1, r1, #0
   18750:	str	r0, [r5, #792]	; 0x318
   18754:	str	r1, [r5, #796]	; 0x31c
   18758:	mov	r0, r4
   1875c:	bl	18110 <get_char@@Base>
   18760:	cmp	r0, #105	; 0x69
   18764:	bne	19188 <next@@Base+0xf70>
   18768:	add	r6, r7, r9
   1876c:	strb	r0, [r6, #1]
   18770:	ldr	r0, [r5, #808]	; 0x328
   18774:	ldr	r1, [r5, #812]	; 0x32c
   18778:	adds	r0, r0, #1
   1877c:	adc	r1, r1, #0
   18780:	str	r0, [r5, #808]	; 0x328
   18784:	str	r1, [r5, #812]	; 0x32c
   18788:	mov	r0, r4
   1878c:	bl	18110 <get_char@@Base>
   18790:	cmp	r0, #110	; 0x6e
   18794:	bne	191a8 <next@@Base+0xf90>
   18798:	add	r4, r7, #3
   1879c:	mov	r8, #0
   187a0:	strb	r8, [r9, r4]
   187a4:	strb	r0, [r6, #2]
   187a8:	ldr	r0, [r5, #824]	; 0x338
   187ac:	ldr	r1, [r5, #828]	; 0x33c
   187b0:	adds	r0, r0, #1
   187b4:	adc	r1, r1, #0
   187b8:	str	r0, [r5, #824]	; 0x338
   187bc:	str	r1, [r5, #828]	; 0x33c
   187c0:	add	r0, r7, #4
   187c4:	bl	126ec <malloc@plt>
   187c8:	mov	r7, r0
   187cc:	mov	r1, r9
   187d0:	mov	r2, r4
   187d4:	bl	12794 <strncpy@plt>
   187d8:	strb	r8, [r0, r4]
   187dc:	mov	r0, #8
   187e0:	bl	126ec <malloc@plt>
   187e4:	mov	r6, r0
   187e8:	mov	r1, r7
   187ec:	bl	178e4 <init_token_function@@Base>
   187f0:	add	r0, r5, #832	; 0x340
   187f4:	b	18668 <next@@Base+0x450>
   187f8:	ldrd	r2, [r5, #96]	; 0x60
   187fc:	adds	r2, r2, #1
   18800:	adc	r3, r3, #0
   18804:	strd	r2, [r5, #96]	; 0x60
   18808:	uxtb	r1, r0
   1880c:	cmp	r1, #101	; 0x65
   18810:	bne	191c8 <next@@Base+0xfb0>
   18814:	add	r6, sp, #8
   18818:	ldr	r7, [sp, #4]
   1881c:	strb	r0, [r6, r7]
   18820:	ldr	r0, [r5, #848]	; 0x350
   18824:	ldr	r1, [r5, #852]	; 0x354
   18828:	adds	r0, r0, #1
   1882c:	adc	r1, r1, #0
   18830:	str	r0, [r5, #848]	; 0x350
   18834:	str	r1, [r5, #852]	; 0x354
   18838:	mov	r0, r4
   1883c:	bl	18110 <get_char@@Base>
   18840:	cmp	r0, #116	; 0x74
   18844:	bne	191e8 <next@@Base+0xfd0>
   18848:	add	r6, r7, r6
   1884c:	strb	r0, [r6, #1]
   18850:	ldr	r0, [r5, #864]	; 0x360
   18854:	ldr	r1, [r5, #868]	; 0x364
   18858:	adds	r0, r0, #1
   1885c:	adc	r1, r1, #0
   18860:	str	r0, [r5, #864]	; 0x360
   18864:	str	r1, [r5, #868]	; 0x364
   18868:	mov	r0, r4
   1886c:	bl	18110 <get_char@@Base>
   18870:	cmp	r0, #117	; 0x75
   18874:	bne	19208 <next@@Base+0xff0>
   18878:	strb	r0, [r6, #2]
   1887c:	ldr	r0, [r5, #880]	; 0x370
   18880:	ldr	r1, [r5, #884]	; 0x374
   18884:	adds	r0, r0, #1
   18888:	adc	r1, r1, #0
   1888c:	str	r0, [r5, #880]	; 0x370
   18890:	str	r1, [r5, #884]	; 0x374
   18894:	mov	r0, r4
   18898:	bl	18110 <get_char@@Base>
   1889c:	cmp	r0, #114	; 0x72
   188a0:	bne	19228 <next@@Base+0x1010>
   188a4:	strb	r0, [r6, #3]
   188a8:	ldr	r0, [r5, #896]	; 0x380
   188ac:	ldr	r1, [r5, #900]	; 0x384
   188b0:	adds	r0, r0, #1
   188b4:	adc	r1, r1, #0
   188b8:	str	r0, [r5, #896]	; 0x380
   188bc:	str	r1, [r5, #900]	; 0x384
   188c0:	mov	r0, r4
   188c4:	bl	18110 <get_char@@Base>
   188c8:	cmp	r0, #110	; 0x6e
   188cc:	bne	19248 <next@@Base+0x1030>
   188d0:	ldr	r0, [r5, #912]	; 0x390
   188d4:	ldr	r1, [r5, #916]	; 0x394
   188d8:	adds	r0, r0, #1
   188dc:	adc	r1, r1, #0
   188e0:	str	r0, [r5, #912]	; 0x390
   188e4:	str	r1, [r5, #916]	; 0x394
   188e8:	mov	r0, #4
   188ec:	bl	126ec <malloc@plt>
   188f0:	mov	r6, r0
   188f4:	bl	179f4 <init_token_return@@Base>
   188f8:	add	r0, r5, #920	; 0x398
   188fc:	b	18668 <next@@Base+0x450>
   18900:	ldrd	r2, [r5, #80]	; 0x50
   18904:	adds	r2, r2, #1
   18908:	adc	r3, r3, #0
   1890c:	strd	r2, [r5, #80]	; 0x50
   18910:	uxtb	r1, r0
   18914:	cmp	r1, #102	; 0x66
   18918:	beq	18a8c <next@@Base+0x874>
   1891c:	cmp	r1, #110	; 0x6e
   18920:	add	r1, sp, #8
   18924:	ldr	r2, [sp, #4]
   18928:	bne	19268 <next@@Base+0x1050>
   1892c:	strb	r0, [r1, r2]
   18930:	ldr	r0, [r5, #736]	; 0x2e0
   18934:	ldr	r1, [r5, #740]	; 0x2e4
   18938:	adds	r0, r0, #1
   1893c:	adc	r1, r1, #0
   18940:	str	r0, [r5, #736]	; 0x2e0
   18944:	str	r1, [r5, #740]	; 0x2e4
   18948:	mov	r0, r4
   1894c:	bl	18110 <get_char@@Base>
   18950:	cmp	r0, #116	; 0x74
   18954:	bne	192e8 <next@@Base+0x10d0>
   18958:	ldr	r0, [r5, #760]	; 0x2f8
   1895c:	ldr	r1, [r5, #764]	; 0x2fc
   18960:	adds	r0, r0, #1
   18964:	adc	r1, r1, #0
   18968:	str	r0, [r5, #760]	; 0x2f8
   1896c:	str	r1, [r5, #764]	; 0x2fc
   18970:	mov	r0, #4
   18974:	bl	126ec <malloc@plt>
   18978:	mov	r6, r0
   1897c:	bl	17870 <init_token_int_type@@Base>
   18980:	add	r0, r5, #768	; 0x300
   18984:	b	18668 <next@@Base+0x450>
   18988:	ldrd	r2, [r5, #104]	; 0x68
   1898c:	adds	r2, r2, #1
   18990:	adc	r3, r3, #0
   18994:	strd	r2, [r5, #104]	; 0x68
   18998:	uxtb	r1, r0
   1899c:	cmp	r1, #108	; 0x6c
   189a0:	bne	19288 <next@@Base+0x1070>
   189a4:	add	r6, sp, #8
   189a8:	ldr	r7, [sp, #4]
   189ac:	strb	r0, [r6, r7]
   189b0:	ldr	r0, [r5, #936]	; 0x3a8
   189b4:	ldr	r1, [r5, #940]	; 0x3ac
   189b8:	adds	r0, r0, #1
   189bc:	adc	r1, r1, #0
   189c0:	str	r0, [r5, #936]	; 0x3a8
   189c4:	str	r1, [r5, #940]	; 0x3ac
   189c8:	mov	r0, r4
   189cc:	bl	18110 <get_char@@Base>
   189d0:	cmp	r0, #115	; 0x73
   189d4:	bne	192a8 <next@@Base+0x1090>
   189d8:	add	r1, r7, r6
   189dc:	strb	r0, [r1, #1]
   189e0:	ldr	r0, [r5, #952]	; 0x3b8
   189e4:	ldr	r1, [r5, #956]	; 0x3bc
   189e8:	adds	r0, r0, #1
   189ec:	adc	r1, r1, #0
   189f0:	str	r0, [r5, #952]	; 0x3b8
   189f4:	str	r1, [r5, #956]	; 0x3bc
   189f8:	mov	r0, r4
   189fc:	bl	18110 <get_char@@Base>
   18a00:	cmp	r0, #101	; 0x65
   18a04:	bne	192c8 <next@@Base+0x10b0>
   18a08:	ldr	r0, [r5, #968]	; 0x3c8
   18a0c:	ldr	r1, [r5, #972]	; 0x3cc
   18a10:	adds	r0, r0, #1
   18a14:	adc	r1, r1, #0
   18a18:	str	r0, [r5, #968]	; 0x3c8
   18a1c:	str	r1, [r5, #972]	; 0x3cc
   18a20:	mov	r0, #4
   18a24:	bl	126ec <malloc@plt>
   18a28:	mov	r6, r0
   18a2c:	bl	17ac4 <init_token_else@@Base>
   18a30:	add	r0, r5, #976	; 0x3d0
   18a34:	b	18668 <next@@Base+0x450>
   18a38:	ldr	r6, [sp, #4]
   18a3c:	ldr	r0, [r5, #704]	; 0x2c0
   18a40:	ldr	r1, [r5, #708]	; 0x2c4
   18a44:	adds	r0, r0, #1
   18a48:	adc	r1, r1, #0
   18a4c:	str	r0, [r5, #704]	; 0x2c0
   18a50:	str	r1, [r5, #708]	; 0x2c4
   18a54:	mov	r0, r4
   18a58:	bl	181e4 <push_back_one_char@@Base>
   18a5c:	mov	r0, #0
   18a60:	strb	r0, [r7, r6]
   18a64:	mov	r0, #8
   18a68:	bl	126ec <malloc@plt>
   18a6c:	mov	r6, r0
   18a70:	mov	r0, r7
   18a74:	bl	127f4 <atoi@plt>
   18a78:	mov	r1, r0
   18a7c:	mov	r0, r6
   18a80:	bl	178a4 <init_token_int_value@@Base>
   18a84:	add	r0, r5, #720	; 0x2d0
   18a88:	b	18668 <next@@Base+0x450>
   18a8c:	add	r1, sp, #8
   18a90:	ldr	r2, [sp, #4]
   18a94:	strb	r0, [r1, r2]
   18a98:	add	r0, r1, r2
   18a9c:	mov	r1, #0
   18aa0:	strb	r1, [r0, #1]
   18aa4:	ldr	r0, [r5, #744]	; 0x2e8
   18aa8:	ldr	r1, [r5, #748]	; 0x2ec
   18aac:	adds	r0, r0, #1
   18ab0:	adc	r1, r1, #0
   18ab4:	str	r0, [r5, #744]	; 0x2e8
   18ab8:	str	r1, [r5, #748]	; 0x2ec
   18abc:	mov	r0, #4
   18ac0:	bl	126ec <malloc@plt>
   18ac4:	mov	r6, r0
   18ac8:	bl	17a90 <init_token_if@@Base>
   18acc:	add	r0, r5, #776	; 0x308
   18ad0:	b	18668 <next@@Base+0x450>
   18ad4:	ldrd	r0, [r5, #168]	; 0xa8
   18ad8:	adds	r0, r0, #1
   18adc:	adc	r1, r1, #0
   18ae0:	strd	r0, [r5, #168]	; 0xa8
   18ae4:	mov	r0, #8
   18ae8:	bl	126ec <malloc@plt>
   18aec:	mov	r6, r0
   18af0:	mov	r1, #0
   18af4:	bl	178a4 <init_token_int_value@@Base>
   18af8:	add	r0, r5, #184	; 0xb8
   18afc:	b	18668 <next@@Base+0x450>
   18b00:	ldrd	r6, [r5, #200]	; 0xc8
   18b04:	adds	r6, r6, #1
   18b08:	adc	r7, r7, #0
   18b0c:	strd	r6, [r5, #200]	; 0xc8
   18b10:	cmp	r2, #40	; 0x28
   18b14:	bne	18b40 <next@@Base+0x928>
   18b18:	ldrd	r0, [r5, #232]	; 0xe8
   18b1c:	adds	r0, r0, #1
   18b20:	adc	r1, r1, #0
   18b24:	strd	r0, [r5, #232]	; 0xe8
   18b28:	mov	r0, #4
   18b2c:	bl	126ec <malloc@plt>
   18b30:	mov	r6, r0
   18b34:	bl	17924 <init_token_opar@@Base>
   18b38:	add	r0, r5, #248	; 0xf8
   18b3c:	b	18668 <next@@Base+0x450>
   18b40:	ldrd	r6, [r5, #240]	; 0xf0
   18b44:	adds	r6, r6, #1
   18b48:	adc	r7, r7, #0
   18b4c:	strd	r6, [r5, #240]	; 0xf0
   18b50:	cmp	r2, #41	; 0x29
   18b54:	bne	18c18 <next@@Base+0xa00>
   18b58:	ldr	r0, [r5, #256]	; 0x100
   18b5c:	ldr	r1, [r5, #260]	; 0x104
   18b60:	adds	r0, r0, #1
   18b64:	adc	r1, r1, #0
   18b68:	str	r0, [r5, #256]	; 0x100
   18b6c:	str	r1, [r5, #260]	; 0x104
   18b70:	mov	r0, #4
   18b74:	bl	126ec <malloc@plt>
   18b78:	mov	r6, r0
   18b7c:	bl	17958 <init_token_cpar@@Base>
   18b80:	add	r0, r5, #272	; 0x110
   18b84:	b	18668 <next@@Base+0x450>
   18b88:	ldr	r0, [r5, #280]	; 0x118
   18b8c:	ldr	r1, [r5, #284]	; 0x11c
   18b90:	adds	r0, r0, #1
   18b94:	adc	r1, r1, #0
   18b98:	str	r0, [r5, #280]	; 0x118
   18b9c:	str	r1, [r5, #284]	; 0x11c
   18ba0:	mov	r0, #4
   18ba4:	bl	126ec <malloc@plt>
   18ba8:	mov	r6, r0
   18bac:	bl	1798c <init_token_obra@@Base>
   18bb0:	add	r0, r5, #296	; 0x128
   18bb4:	b	18668 <next@@Base+0x450>
   18bb8:	ldr	r0, [r5, #304]	; 0x130
   18bbc:	ldr	r1, [r5, #308]	; 0x134
   18bc0:	adds	r0, r0, #1
   18bc4:	adc	r1, r1, #0
   18bc8:	str	r0, [r5, #304]	; 0x130
   18bcc:	str	r1, [r5, #308]	; 0x134
   18bd0:	mov	r0, #4
   18bd4:	bl	126ec <malloc@plt>
   18bd8:	mov	r6, r0
   18bdc:	bl	179c0 <init_token_cbra@@Base>
   18be0:	add	r0, r5, #320	; 0x140
   18be4:	b	18668 <next@@Base+0x450>
   18be8:	ldr	r0, [r5, #328]	; 0x148
   18bec:	ldr	r1, [r5, #332]	; 0x14c
   18bf0:	adds	r0, r0, #1
   18bf4:	adc	r1, r1, #0
   18bf8:	str	r0, [r5, #328]	; 0x148
   18bfc:	str	r1, [r5, #332]	; 0x14c
   18c00:	mov	r0, #4
   18c04:	bl	126ec <malloc@plt>
   18c08:	mov	r6, r0
   18c0c:	bl	17a28 <init_token_semicolon@@Base>
   18c10:	add	r0, r5, #344	; 0x158
   18c14:	b	18668 <next@@Base+0x450>
   18c18:	ldr	r1, [r5, #408]	; 0x198
   18c1c:	ldr	r3, [r5, #412]	; 0x19c
   18c20:	adds	r7, r1, #1
   18c24:	adc	ip, r3, #0
   18c28:	ldr	r3, [r5, #384]	; 0x180
   18c2c:	ldr	r6, [r5, #388]	; 0x184
   18c30:	adds	r1, r3, #1
   18c34:	adc	lr, r6, #0
   18c38:	ldr	r6, [r5, #360]	; 0x168
   18c3c:	adds	r6, r6, #1
   18c40:	str	r6, [r5, #360]	; 0x168
   18c44:	str	r1, [r5, #384]	; 0x180
   18c48:	str	r7, [r5, #408]	; 0x198
   18c4c:	ldr	r1, [r5, #364]	; 0x16c
   18c50:	adc	r8, r1, #0
   18c54:	ldr	r7, [r5, #264]	; 0x108
   18c58:	ldr	r6, [r5, #268]	; 0x10c
   18c5c:	ldr	r3, [r5, #288]	; 0x120
   18c60:	ldr	r9, [r5, #292]	; 0x124
   18c64:	adds	r7, r7, #1
   18c68:	adc	r6, r6, #0
   18c6c:	ldr	r1, [r5, #336]	; 0x150
   18c70:	adds	r1, r1, #1
   18c74:	str	r1, [r5, #336]	; 0x150
   18c78:	str	r7, [r5, #264]	; 0x108
   18c7c:	str	r6, [r5, #268]	; 0x10c
   18c80:	ldr	r1, [r5, #340]	; 0x154
   18c84:	adc	sl, r1, #0
   18c88:	ldr	r6, [r5, #312]	; 0x138
   18c8c:	adds	r6, r6, #1
   18c90:	str	r6, [r5, #312]	; 0x138
   18c94:	ldr	r6, [r5, #316]	; 0x13c
   18c98:	adc	r6, r6, #0
   18c9c:	adds	r3, r3, #1
   18ca0:	adc	r7, r9, #0
   18ca4:	ldr	r1, [r5, #432]	; 0x1b0
   18ca8:	adds	r1, r1, #1
   18cac:	str	r1, [r5, #432]	; 0x1b0
   18cb0:	str	r3, [r5, #288]	; 0x120
   18cb4:	str	r7, [r5, #292]	; 0x124
   18cb8:	str	r6, [r5, #316]	; 0x13c
   18cbc:	str	sl, [r5, #340]	; 0x154
   18cc0:	str	r8, [r5, #364]	; 0x16c
   18cc4:	str	lr, [r5, #388]	; 0x184
   18cc8:	str	ip, [r5, #412]	; 0x19c
   18ccc:	ldr	r1, [r5, #436]	; 0x1b4
   18cd0:	adc	r1, r1, #0
   18cd4:	str	r1, [r5, #436]	; 0x1b4
   18cd8:	cmp	r2, #33	; 0x21
   18cdc:	bne	18d60 <next@@Base+0xb48>
   18ce0:	add	r1, sp, #8
   18ce4:	ldr	r2, [sp, #4]
   18ce8:	strb	r0, [r1, r2]
   18cec:	ldr	r0, [r5, #448]	; 0x1c0
   18cf0:	ldr	r1, [r5, #452]	; 0x1c4
   18cf4:	adds	r0, r0, #1
   18cf8:	adc	r1, r1, #0
   18cfc:	str	r0, [r5, #448]	; 0x1c0
   18d00:	str	r1, [r5, #452]	; 0x1c4
   18d04:	mov	r0, r4
   18d08:	bl	18110 <get_char@@Base>
   18d0c:	mov	r7, r0
   18d10:	mov	r0, #8
   18d14:	bl	126ec <malloc@plt>
   18d18:	mov	r6, r0
   18d1c:	cmp	r7, #61	; 0x3d
   18d20:	bne	18e6c <next@@Base+0xc54>
   18d24:	ldr	r0, [r5, #472]	; 0x1d8
   18d28:	ldr	r1, [r5, #476]	; 0x1dc
   18d2c:	adds	r0, r0, #1
   18d30:	adc	r1, r1, #0
   18d34:	str	r0, [r5, #472]	; 0x1d8
   18d38:	str	r1, [r5, #476]	; 0x1dc
   18d3c:	mov	r0, #3
   18d40:	bl	126ec <malloc@plt>
   18d44:	mov	r1, r0
   18d48:	ldrb	r0, [sp, #8]
   18d4c:	strb	r7, [r1, #1]
   18d50:	strb	r0, [r1]
   18d54:	add	r0, r5, #488	; 0x1e8
   18d58:	add	r2, r1, #2
   18d5c:	b	18ea8 <next@@Base+0xc90>
   18d60:	ldr	r1, [r5, #584]	; 0x248
   18d64:	ldr	r3, [r5, #588]	; 0x24c
   18d68:	adds	ip, r1, #1
   18d6c:	adc	lr, r3, #0
   18d70:	ldr	r7, [r5, #528]	; 0x210
   18d74:	ldr	r6, [r5, #532]	; 0x214
   18d78:	adds	r9, r7, #1
   18d7c:	adc	r8, r6, #0
   18d80:	ldr	r1, [r5, #456]	; 0x1c8
   18d84:	ldr	r3, [r5, #460]	; 0x1cc
   18d88:	ldr	r6, [r5, #512]	; 0x200
   18d8c:	ldr	r7, [r5, #516]	; 0x204
   18d90:	adds	r6, r6, #1
   18d94:	str	r6, [r5, #512]	; 0x200
   18d98:	adc	r6, r7, #0
   18d9c:	adds	r1, r1, #1
   18da0:	adc	r3, r3, #0
   18da4:	ldr	r7, [r5, #624]	; 0x270
   18da8:	adds	r7, r7, #1
   18dac:	str	r7, [r5, #624]	; 0x270
   18db0:	str	r1, [r5, #456]	; 0x1c8
   18db4:	str	r3, [r5, #460]	; 0x1cc
   18db8:	str	r6, [r5, #516]	; 0x204
   18dbc:	str	r9, [r5, #528]	; 0x210
   18dc0:	str	r8, [r5, #532]	; 0x214
   18dc4:	str	ip, [r5, #584]	; 0x248
   18dc8:	str	lr, [r5, #588]	; 0x24c
   18dcc:	ldr	r1, [r5, #628]	; 0x274
   18dd0:	adc	r1, r1, #0
   18dd4:	str	r1, [r5, #628]	; 0x274
   18dd8:	cmp	r2, #38	; 0x26
   18ddc:	ldr	r3, [sp, #4]
   18de0:	bne	19360 <next@@Base+0x1148>
   18de4:	add	r1, sp, #8
   18de8:	strb	r0, [r1, r3]
   18dec:	ldr	r0, [r5, #656]	; 0x290
   18df0:	ldr	r1, [r5, #660]	; 0x294
   18df4:	adds	r0, r0, #1
   18df8:	adc	r1, r1, #0
   18dfc:	str	r0, [r5, #656]	; 0x290
   18e00:	str	r1, [r5, #660]	; 0x294
   18e04:	mov	r0, r4
   18e08:	bl	18110 <get_char@@Base>
   18e0c:	mov	r4, r0
   18e10:	mov	r0, #8
   18e14:	bl	126ec <malloc@plt>
   18e18:	cmp	r4, #38	; 0x26
   18e1c:	bne	19308 <next@@Base+0x10f0>
   18e20:	mov	r6, r0
   18e24:	ldr	r0, [r5, #680]	; 0x2a8
   18e28:	ldr	r1, [r5, #684]	; 0x2ac
   18e2c:	adds	r0, r0, #1
   18e30:	adc	r1, r1, #0
   18e34:	str	r0, [r5, #680]	; 0x2a8
   18e38:	str	r1, [r5, #684]	; 0x2ac
   18e3c:	mov	r0, #3
   18e40:	bl	126ec <malloc@plt>
   18e44:	mov	r1, r0
   18e48:	ldrb	r0, [sp, #8]
   18e4c:	mov	r2, #0
   18e50:	strb	r2, [r1, #2]
   18e54:	strb	r4, [r1, #1]
   18e58:	strb	r0, [r1]
   18e5c:	mov	r0, r6
   18e60:	bl	17af8 <init_token_boolean_op@@Base>
   18e64:	add	r0, r5, #688	; 0x2b0
   18e68:	b	18668 <next@@Base+0x450>
   18e6c:	ldr	r0, [r5, #464]	; 0x1d0
   18e70:	ldr	r1, [r5, #468]	; 0x1d4
   18e74:	adds	r0, r0, #1
   18e78:	adc	r1, r1, #0
   18e7c:	str	r0, [r5, #464]	; 0x1d0
   18e80:	str	r1, [r5, #468]	; 0x1d4
   18e84:	mov	r0, r4
   18e88:	bl	181e4 <push_back_one_char@@Base>
   18e8c:	mov	r0, #2
   18e90:	bl	126ec <malloc@plt>
   18e94:	mov	r1, r0
   18e98:	ldrb	r0, [sp, #8]
   18e9c:	mov	r2, r1
   18ea0:	strb	r0, [r2], #1
   18ea4:	add	r0, r5, #480	; 0x1e0
   18ea8:	mov	r3, #0
   18eac:	strb	r3, [r2]
   18eb0:	ldrd	r2, [r0]
   18eb4:	adds	r2, r2, #1
   18eb8:	adc	r3, r3, #0
   18ebc:	strd	r2, [r0]
   18ec0:	mov	r0, r6
   18ec4:	bl	17af8 <init_token_boolean_op@@Base>
   18ec8:	add	r0, r5, #496	; 0x1f0
   18ecc:	b	18668 <next@@Base+0x450>
   18ed0:	ldr	r1, [r5, #432]	; 0x1b0
   18ed4:	ldr	r3, [r5, #436]	; 0x1b4
   18ed8:	ldr	r7, [r5, #456]	; 0x1c8
   18edc:	ldr	r6, [r5, #460]	; 0x1cc
   18ee0:	adds	r1, r1, #1
   18ee4:	adc	r3, r3, #0
   18ee8:	adds	r7, r7, #1
   18eec:	str	r1, [r5, #432]	; 0x1b0
   18ef0:	str	r3, [r5, #436]	; 0x1b4
   18ef4:	adc	r1, r6, #0
   18ef8:	str	r7, [r5, #456]	; 0x1c8
   18efc:	str	r1, [r5, #460]	; 0x1cc
   18f00:	cmp	r2, #60	; 0x3c
   18f04:	bne	18f10 <next@@Base+0xcf8>
   18f08:	add	r1, r5, #504	; 0x1f8
   18f0c:	b	18f34 <next@@Base+0xd1c>
   18f10:	ldr	r1, [r5, #512]	; 0x200
   18f14:	ldr	r3, [r5, #516]	; 0x204
   18f18:	adds	r1, r1, #1
   18f1c:	adc	r3, r3, #0
   18f20:	str	r1, [r5, #512]	; 0x200
   18f24:	str	r3, [r5, #516]	; 0x204
   18f28:	cmp	r2, #62	; 0x3e
   18f2c:	bne	19010 <next@@Base+0xdf8>
   18f30:	add	r1, r5, #520	; 0x208
   18f34:	add	r7, sp, #8
   18f38:	ldr	r6, [sp, #4]
   18f3c:	ldrd	r2, [r1]
   18f40:	adds	r2, r2, #1
   18f44:	adc	r3, r3, #0
   18f48:	strd	r2, [r1]
   18f4c:	strb	r0, [r7, r6]
   18f50:	mov	r0, r4
   18f54:	bl	18110 <get_char@@Base>
   18f58:	mov	r7, r0
   18f5c:	mov	r0, #8
   18f60:	bl	126ec <malloc@plt>
   18f64:	mov	r6, r0
   18f68:	cmp	r7, #61	; 0x3d
   18f6c:	bne	18fac <next@@Base+0xd94>
   18f70:	ldr	r0, [r5, #544]	; 0x220
   18f74:	ldr	r1, [r5, #548]	; 0x224
   18f78:	adds	r0, r0, #1
   18f7c:	adc	r1, r1, #0
   18f80:	str	r0, [r5, #544]	; 0x220
   18f84:	str	r1, [r5, #548]	; 0x224
   18f88:	mov	r0, #3
   18f8c:	bl	126ec <malloc@plt>
   18f90:	mov	r1, r0
   18f94:	ldrb	r0, [sp, #8]
   18f98:	strb	r7, [r1, #1]
   18f9c:	strb	r0, [r1]
   18fa0:	add	r0, r5, #560	; 0x230
   18fa4:	add	r2, r1, #2
   18fa8:	b	18fe8 <next@@Base+0xdd0>
   18fac:	ldr	r0, [r5, #536]	; 0x218
   18fb0:	ldr	r1, [r5, #540]	; 0x21c
   18fb4:	adds	r0, r0, #1
   18fb8:	adc	r1, r1, #0
   18fbc:	str	r0, [r5, #536]	; 0x218
   18fc0:	str	r1, [r5, #540]	; 0x21c
   18fc4:	mov	r0, r4
   18fc8:	bl	181e4 <push_back_one_char@@Base>
   18fcc:	mov	r0, #2
   18fd0:	bl	126ec <malloc@plt>
   18fd4:	mov	r1, r0
   18fd8:	ldrb	r0, [sp, #8]
   18fdc:	mov	r2, r1
   18fe0:	strb	r0, [r2], #1
   18fe4:	add	r0, r5, #552	; 0x228
   18fe8:	mov	r3, #0
   18fec:	strb	r3, [r2]
   18ff0:	ldrd	r2, [r0]
   18ff4:	adds	r2, r2, #1
   18ff8:	adc	r3, r3, #0
   18ffc:	strd	r2, [r0]
   19000:	mov	r0, r6
   19004:	bl	17af8 <init_token_boolean_op@@Base>
   19008:	add	r0, r5, #568	; 0x238
   1900c:	b	18668 <next@@Base+0x450>
   19010:	ldr	r1, [r5, #528]	; 0x210
   19014:	ldr	r3, [r5, #532]	; 0x214
   19018:	adds	r1, r1, #1
   1901c:	adc	r3, r3, #0
   19020:	str	r1, [r5, #528]	; 0x210
   19024:	str	r3, [r5, #532]	; 0x214
   19028:	cmp	r2, #61	; 0x3d
   1902c:	bne	190bc <next@@Base+0xea4>
   19030:	add	r1, sp, #8
   19034:	ldr	r2, [sp, #4]
   19038:	strb	r0, [r1, r2]
   1903c:	ldr	r0, [r5, #576]	; 0x240
   19040:	ldr	r1, [r5, #580]	; 0x244
   19044:	adds	r0, r0, #1
   19048:	adc	r1, r1, #0
   1904c:	str	r0, [r5, #576]	; 0x240
   19050:	str	r1, [r5, #580]	; 0x244
   19054:	mov	r0, r4
   19058:	bl	18110 <get_char@@Base>
   1905c:	mov	r4, r0
   19060:	mov	r0, #8
   19064:	bl	126ec <malloc@plt>
   19068:	cmp	r4, #61	; 0x3d
   1906c:	bne	19328 <next@@Base+0x1110>
   19070:	mov	r6, r0
   19074:	ldr	r0, [r5, #600]	; 0x258
   19078:	ldr	r1, [r5, #604]	; 0x25c
   1907c:	adds	r0, r0, #1
   19080:	adc	r1, r1, #0
   19084:	str	r0, [r5, #600]	; 0x258
   19088:	str	r1, [r5, #604]	; 0x25c
   1908c:	mov	r0, #3
   19090:	bl	126ec <malloc@plt>
   19094:	mov	r1, r0
   19098:	ldrb	r0, [sp, #8]
   1909c:	mov	r2, #0
   190a0:	strb	r2, [r1, #2]
   190a4:	strb	r4, [r1, #1]
   190a8:	strb	r0, [r1]
   190ac:	mov	r0, r6
   190b0:	bl	17af8 <init_token_boolean_op@@Base>
   190b4:	add	r0, r5, #608	; 0x260
   190b8:	b	18668 <next@@Base+0x450>
   190bc:	ldr	r1, [r5, #584]	; 0x248
   190c0:	ldr	r3, [r5, #588]	; 0x24c
   190c4:	adds	r1, r1, #1
   190c8:	adc	r3, r3, #0
   190cc:	str	r1, [r5, #584]	; 0x248
   190d0:	str	r3, [r5, #588]	; 0x24c
   190d4:	cmp	r2, #124	; 0x7c
   190d8:	bne	19348 <next@@Base+0x1130>
   190dc:	add	r1, sp, #8
   190e0:	ldr	r2, [sp, #4]
   190e4:	strb	r0, [r1, r2]
   190e8:	ldr	r0, [r5, #616]	; 0x268
   190ec:	ldr	r1, [r5, #620]	; 0x26c
   190f0:	adds	r0, r0, #1
   190f4:	adc	r1, r1, #0
   190f8:	str	r0, [r5, #616]	; 0x268
   190fc:	str	r1, [r5, #620]	; 0x26c
   19100:	mov	r0, r4
   19104:	bl	18110 <get_char@@Base>
   19108:	mov	r4, r0
   1910c:	mov	r0, #8
   19110:	bl	126ec <malloc@plt>
   19114:	cmp	r4, #124	; 0x7c
   19118:	bne	19398 <next@@Base+0x1180>
   1911c:	mov	r6, r0
   19120:	ldr	r0, [r5, #640]	; 0x280
   19124:	ldr	r1, [r5, #644]	; 0x284
   19128:	adds	r0, r0, #1
   1912c:	adc	r1, r1, #0
   19130:	str	r0, [r5, #640]	; 0x280
   19134:	str	r1, [r5, #644]	; 0x284
   19138:	mov	r0, #3
   1913c:	bl	126ec <malloc@plt>
   19140:	mov	r1, r0
   19144:	ldrb	r0, [sp, #8]
   19148:	mov	r2, #0
   1914c:	strb	r2, [r1, #2]
   19150:	strb	r4, [r1, #1]
   19154:	strb	r0, [r1]
   19158:	mov	r0, r6
   1915c:	bl	17af8 <init_token_boolean_op@@Base>
   19160:	add	r0, r5, #648	; 0x288
   19164:	b	18668 <next@@Base+0x450>
   19168:	ldr	r0, [r5, #784]	; 0x310
   1916c:	ldr	r1, [r5, #788]	; 0x314
   19170:	adds	r0, r0, #1
   19174:	adc	r1, r1, #0
   19178:	str	r0, [r5, #784]	; 0x310
   1917c:	str	r1, [r5, #788]	; 0x314
   19180:	mov	r0, #1
   19184:	bl	12728 <exit@plt>
   19188:	ldr	r0, [r5, #800]	; 0x320
   1918c:	ldr	r1, [r5, #804]	; 0x324
   19190:	adds	r0, r0, #1
   19194:	adc	r1, r1, #0
   19198:	str	r0, [r5, #800]	; 0x320
   1919c:	str	r1, [r5, #804]	; 0x324
   191a0:	mov	r0, #1
   191a4:	bl	12728 <exit@plt>
   191a8:	ldr	r0, [r5, #816]	; 0x330
   191ac:	ldr	r1, [r5, #820]	; 0x334
   191b0:	adds	r0, r0, #1
   191b4:	adc	r1, r1, #0
   191b8:	str	r0, [r5, #816]	; 0x330
   191bc:	str	r1, [r5, #820]	; 0x334
   191c0:	mov	r0, #1
   191c4:	bl	12728 <exit@plt>
   191c8:	ldr	r0, [r5, #840]	; 0x348
   191cc:	ldr	r1, [r5, #844]	; 0x34c
   191d0:	adds	r0, r0, #1
   191d4:	adc	r1, r1, #0
   191d8:	str	r0, [r5, #840]	; 0x348
   191dc:	str	r1, [r5, #844]	; 0x34c
   191e0:	mov	r0, #1
   191e4:	bl	12728 <exit@plt>
   191e8:	ldr	r0, [r5, #856]	; 0x358
   191ec:	ldr	r1, [r5, #860]	; 0x35c
   191f0:	adds	r0, r0, #1
   191f4:	adc	r1, r1, #0
   191f8:	str	r0, [r5, #856]	; 0x358
   191fc:	str	r1, [r5, #860]	; 0x35c
   19200:	mov	r0, #1
   19204:	bl	12728 <exit@plt>
   19208:	ldr	r0, [r5, #872]	; 0x368
   1920c:	ldr	r1, [r5, #876]	; 0x36c
   19210:	adds	r0, r0, #1
   19214:	adc	r1, r1, #0
   19218:	str	r0, [r5, #872]	; 0x368
   1921c:	str	r1, [r5, #876]	; 0x36c
   19220:	mov	r0, #1
   19224:	bl	12728 <exit@plt>
   19228:	ldr	r0, [r5, #888]	; 0x378
   1922c:	ldr	r1, [r5, #892]	; 0x37c
   19230:	adds	r0, r0, #1
   19234:	adc	r1, r1, #0
   19238:	str	r0, [r5, #888]	; 0x378
   1923c:	str	r1, [r5, #892]	; 0x37c
   19240:	mov	r0, #1
   19244:	bl	12728 <exit@plt>
   19248:	ldr	r0, [r5, #904]	; 0x388
   1924c:	ldr	r1, [r5, #908]	; 0x38c
   19250:	adds	r0, r0, #1
   19254:	adc	r1, r1, #0
   19258:	str	r0, [r5, #904]	; 0x388
   1925c:	str	r1, [r5, #908]	; 0x38c
   19260:	mov	r0, #1
   19264:	bl	12728 <exit@plt>
   19268:	ldr	r0, [r5, #728]	; 0x2d8
   1926c:	ldr	r1, [r5, #732]	; 0x2dc
   19270:	adds	r0, r0, #1
   19274:	adc	r1, r1, #0
   19278:	str	r0, [r5, #728]	; 0x2d8
   1927c:	str	r1, [r5, #732]	; 0x2dc
   19280:	mov	r0, #1
   19284:	bl	12728 <exit@plt>
   19288:	ldr	r0, [r5, #928]	; 0x3a0
   1928c:	ldr	r1, [r5, #932]	; 0x3a4
   19290:	adds	r0, r0, #1
   19294:	adc	r1, r1, #0
   19298:	str	r0, [r5, #928]	; 0x3a0
   1929c:	str	r1, [r5, #932]	; 0x3a4
   192a0:	mov	r0, #1
   192a4:	bl	12728 <exit@plt>
   192a8:	ldr	r0, [r5, #944]	; 0x3b0
   192ac:	ldr	r1, [r5, #948]	; 0x3b4
   192b0:	adds	r0, r0, #1
   192b4:	adc	r1, r1, #0
   192b8:	str	r0, [r5, #944]	; 0x3b0
   192bc:	str	r1, [r5, #948]	; 0x3b4
   192c0:	mov	r0, #1
   192c4:	bl	12728 <exit@plt>
   192c8:	ldr	r0, [r5, #960]	; 0x3c0
   192cc:	ldr	r1, [r5, #964]	; 0x3c4
   192d0:	adds	r0, r0, #1
   192d4:	adc	r1, r1, #0
   192d8:	str	r0, [r5, #960]	; 0x3c0
   192dc:	str	r1, [r5, #964]	; 0x3c4
   192e0:	mov	r0, #1
   192e4:	bl	12728 <exit@plt>
   192e8:	ldr	r0, [r5, #752]	; 0x2f0
   192ec:	ldr	r1, [r5, #756]	; 0x2f4
   192f0:	adds	r0, r0, #1
   192f4:	adc	r1, r1, #0
   192f8:	str	r0, [r5, #752]	; 0x2f0
   192fc:	str	r1, [r5, #756]	; 0x2f4
   19300:	mov	r0, #1
   19304:	bl	12728 <exit@plt>
   19308:	ldr	r0, [r5, #672]	; 0x2a0
   1930c:	ldr	r1, [r5, #676]	; 0x2a4
   19310:	adds	r0, r0, #1
   19314:	adc	r1, r1, #0
   19318:	str	r0, [r5, #672]	; 0x2a0
   1931c:	str	r1, [r5, #676]	; 0x2a4
   19320:	mov	r0, #1
   19324:	bl	12728 <exit@plt>
   19328:	ldr	r0, [r5, #592]	; 0x250
   1932c:	ldr	r1, [r5, #596]	; 0x254
   19330:	adds	r0, r0, #1
   19334:	adc	r1, r1, #0
   19338:	str	r0, [r5, #592]	; 0x250
   1933c:	str	r1, [r5, #596]	; 0x254
   19340:	mov	r0, #1
   19344:	bl	12728 <exit@plt>
   19348:	ldr	r0, [r5, #624]	; 0x270
   1934c:	ldr	r1, [r5, #628]	; 0x274
   19350:	adds	r0, r0, #1
   19354:	adc	r1, r1, #0
   19358:	str	r0, [r5, #624]	; 0x270
   1935c:	str	r1, [r5, #628]	; 0x274
   19360:	ldr	r0, [r5, #664]	; 0x298
   19364:	ldr	r1, [r5, #668]	; 0x29c
   19368:	adds	r0, r0, #1
   1936c:	adc	r1, r1, #0
   19370:	str	r0, [r5, #664]	; 0x298
   19374:	str	r1, [r5, #668]	; 0x29c
   19378:	movw	r0, #57568	; 0xe0e0
   1937c:	movt	r0, #2
   19380:	ldr	r0, [r0]
   19384:	movw	r1, #55761	; 0xd9d1
   19388:	movt	r1, #1
   1938c:	bl	1274c <fprintf@plt>
   19390:	mov	r0, #1
   19394:	bl	12728 <exit@plt>
   19398:	ldr	r0, [r5, #632]	; 0x278
   1939c:	ldr	r1, [r5, #636]	; 0x27c
   193a0:	adds	r0, r0, #1
   193a4:	adc	r1, r1, #0
   193a8:	str	r0, [r5, #632]	; 0x278
   193ac:	str	r1, [r5, #636]	; 0x27c
   193b0:	mov	r0, #1
   193b4:	bl	12728 <exit@plt>
   193b8:	push	{r4, r5, r6, lr}
   193bc:	sub	sp, sp, #8
   193c0:	movw	r0, #55801	; 0xd9f9
   193c4:	movt	r0, #1
   193c8:	movw	r1, #51366	; 0xc8a6
   193cc:	movt	r1, #1
   193d0:	movw	r2, #8093	; 0x1f9d
   193d4:	movt	r2, #48445	; 0xbd3d
   193d8:	bl	194f4 <next@@Base+0x12dc>
   193dc:	movw	r0, #56192	; 0xdb80
   193e0:	movt	r0, #1
   193e4:	add	r4, r0, #4
   193e8:	mov	r5, #0
   193ec:	movw	r6, #56000	; 0xdac0
   193f0:	movt	r6, #1
   193f4:	mov	r3, r6
   193f8:	ldr	r0, [r3, r5]!
   193fc:	ldr	r1, [r3, #16]
   19400:	str	r1, [sp]
   19404:	ldmib	r3, {r1, r2}
   19408:	ldrb	r3, [r3, #12]
   1940c:	bl	19c14 <next@@Base+0x19fc>
   19410:	ldrd	r0, [r4, #-4]
   19414:	bl	1a4c8 <next@@Base+0x22b0>
   19418:	add	r5, r5, #20
   1941c:	add	r4, r4, #8
   19420:	cmp	r5, #180	; 0xb4
   19424:	bne	193f4 <next@@Base+0x11dc>
   19428:	bl	1ac50 <next@@Base+0x2a38>
   1942c:	add	sp, sp, #8
   19430:	pop	{r4, r5, r6, lr}
   19434:	b	1b9bc <next@@Base+0x37a4>
   19438:	push	{fp, lr}
   1943c:	vpush	{d8-d9}
   19440:	bl	193b8 <next@@Base+0x11a0>
   19444:	vmov.i32	q4, #0	; 0x00000000
   19448:	movw	r0, #62064	; 0xf270
   1944c:	movt	r0, #2
   19450:	vst1.64	{d8-d9}, [r0]
   19454:	movw	r0, #62080	; 0xf280
   19458:	movt	r0, #2
   1945c:	add	r1, r0, #16
   19460:	vst1.64	{d8-d9}, [r1 :128]
   19464:	mov	r1, #0
   19468:	str	r1, [r0, #32]
   1946c:	movw	r2, #62120	; 0xf2a8
   19470:	movt	r2, #2
   19474:	vst1.64	{d8-d9}, [r2]
   19478:	movw	r2, #62136	; 0xf2b8
   1947c:	movt	r2, #2
   19480:	vst1.64	{d8-d9}, [r2]
   19484:	movw	r2, #62152	; 0xf2c8
   19488:	movt	r2, #2
   1948c:	vst1.64	{d8-d9}, [r2]
   19490:	movw	r2, #62208	; 0xf300
   19494:	movt	r2, #2
   19498:	vst1.64	{d8-d9}, [r2]
   1949c:	mov	r2, #36	; 0x24
   194a0:	vst1.64	{d8-d9}, [r0 :128], r2
   194a4:	str	r1, [r0]
   194a8:	movw	r0, #62176	; 0xf2e0
   194ac:	movt	r0, #2
   194b0:	vst1.64	{d8-d9}, [r0 :128]!
   194b4:	vst1.64	{d8-d9}, [r0 :128]
   194b8:	movw	r0, #62224	; 0xf310
   194bc:	movt	r0, #2
   194c0:	mov	r1, #0
   194c4:	mov	r2, #1008	; 0x3f0
   194c8:	bl	1277c <memset@plt>
   194cc:	movw	r0, #63232	; 0xf700
   194d0:	movt	r0, #2
   194d4:	vst1.64	{d8-d9}, [r0]
   194d8:	vpop	{d8-d9}
   194dc:	pop	{fp, pc}
   194e0:	movw	r0, #37816	; 0x93b8
   194e4:	movt	r0, #1
   194e8:	movw	r1, #37944	; 0x9438
   194ec:	movt	r1, #1
   194f0:	b	1be70 <__gcov_flush@@Base+0xb8>
   194f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194f8:	add	fp, sp, #28
   194fc:	sub	sp, sp, #36	; 0x24
   19500:	mov	r9, r1
   19504:	mov	r6, r0
   19508:	add	r0, sp, #28
   1950c:	add	r1, sp, #32
   19510:	mov	r8, r2
   19514:	bl	1c308 <__gcov_flush@@Base+0x550>
   19518:	cmp	r0, #0
   1951c:	beq	19560 <next@@Base+0x1348>
   19520:	mov	r4, r0
   19524:	mov	r0, r6
   19528:	ldr	r5, [sp, #32]
   1952c:	bl	12734 <strlen@plt>
   19530:	add	r0, r5, r0
   19534:	add	r0, r0, #2
   19538:	bl	126ec <malloc@plt>
   1953c:	mov	r7, r0
   19540:	ldr	r0, [sp, #28]
   19544:	mov	r1, r6
   19548:	mov	r2, r4
   1954c:	str	r0, [sp]
   19550:	mov	r0, r7
   19554:	mov	r3, r5
   19558:	bl	1c39c <__gcov_flush@@Base+0x5e4>
   1955c:	b	1956c <next@@Base+0x1354>
   19560:	mov	r0, r6
   19564:	bl	126a4 <strdup@plt>
   19568:	mov	r7, r0
   1956c:	ldr	r0, [pc, #1492]	; 19b48 <next@@Base+0x1930>
   19570:	ldr	r6, [pc, #1492]	; 19b4c <next@@Base+0x1934>
   19574:	mov	r1, #2
   19578:	add	r0, pc, r0
   1957c:	add	r6, pc, r6
   19580:	str	r7, [r0]
   19584:	mov	r0, r7
   19588:	mov	r5, #0
   1958c:	strb	r5, [r6]
   19590:	bl	126d4 <open64@plt>
   19594:	ldr	r4, [pc, #1460]	; 19b50 <next@@Base+0x1938>
   19598:	cmn	r0, #1
   1959c:	add	r4, pc, r4
   195a0:	str	r0, [r4]
   195a4:	beq	195b4 <next@@Base+0x139c>
   195a8:	ldr	r6, [pc, #1444]	; 19b54 <next@@Base+0x193c>
   195ac:	add	r6, pc, r6
   195b0:	b	19610 <next@@Base+0x13f8>
   195b4:	mov	r0, #1
   195b8:	strb	r0, [r6]
   195bc:	ldr	r0, [pc, #1488]	; 19b94 <next@@Base+0x197c>
   195c0:	mov	r1, #66	; 0x42
   195c4:	mov	r2, #420	; 0x1a4
   195c8:	ldr	r0, [pc, r0]
   195cc:	bl	126d4 <open64@plt>
   195d0:	ldr	r6, [pc, #1472]	; 19b98 <next@@Base+0x1980>
   195d4:	cmn	r0, #1
   195d8:	str	r0, [r4]
   195dc:	add	r6, pc, r6
   195e0:	bne	19610 <next@@Base+0x13f8>
   195e4:	ldr	r0, [pc, #1456]	; 19b9c <next@@Base+0x1984>
   195e8:	ldr	r0, [pc, r0]
   195ec:	bl	1bf80 <__gcov_flush@@Base+0x1c8>
   195f0:	ldr	r0, [pc, #1448]	; 19ba0 <next@@Base+0x1988>
   195f4:	mov	r1, #66	; 0x42
   195f8:	mov	r2, #420	; 0x1a4
   195fc:	ldr	r0, [pc, r0]
   19600:	bl	126d4 <open64@plt>
   19604:	cmn	r0, #1
   19608:	str	r0, [r4]
   1960c:	beq	19b00 <next@@Base+0x18e8>
   19610:	str	r9, [sp, #20]
   19614:	str	r8, [sp, #24]
   19618:	bl	1c044 <__gcov_flush@@Base+0x28c>
   1961c:	ldr	r0, [pc, #1332]	; 19b58 <next@@Base+0x1940>
   19620:	mov	r1, r6
   19624:	ldr	r0, [pc, r0]
   19628:	bl	12620 <fdopen@plt>
   1962c:	ldr	r7, [pc, #1320]	; 19b5c <next@@Base+0x1944>
   19630:	ldr	r9, [pc, #1320]	; 19b60 <next@@Base+0x1948>
   19634:	ldr	r1, [pc, #1320]	; 19b64 <next@@Base+0x194c>
   19638:	ldr	sl, [pc, #1320]	; 19b68 <next@@Base+0x1950>
   1963c:	add	r7, pc, r7
   19640:	add	r9, pc, r9
   19644:	add	r1, pc, r1
   19648:	add	sl, pc, sl
   1964c:	str	r5, [r7]
   19650:	str	r5, [r7, #4]
   19654:	str	r5, [r9]
   19658:	str	r5, [r9, #4]
   1965c:	str	r0, [r1]
   19660:	str	r5, [sl]
   19664:	ldr	r6, [pc, #1280]	; 19b6c <next@@Base+0x1954>
   19668:	mov	r4, #131072	; 0x20000
   1966c:	add	r6, pc, r6
   19670:	ldrb	r1, [r6]
   19674:	cmp	r1, #0
   19678:	beq	1976c <next@@Base+0x1554>
   1967c:	mov	r0, r4
   19680:	bl	126ec <malloc@plt>
   19684:	mov	r8, r0
   19688:	strd	r4, [r7]
   1968c:	str	r0, [sl]
   19690:	mov	r0, r8
   19694:	mov	r1, #0
   19698:	mov	r2, #131072	; 0x20000
   1969c:	bl	1277c <memset@plt>
   196a0:	ldr	r0, [r9, #4]
   196a4:	ldr	r1, [pc, #1284]	; 19bb0 <next@@Base+0x1998>
   196a8:	mov	r7, #7
   196ac:	orr	r7, r7, #131072	; 0x20000
   196b0:	ldr	r1, [pc, r1]
   196b4:	ldr	sl, [pc, #1272]	; 19bb4 <next@@Base+0x199c>
   196b8:	adds	r2, r1, #4
   196bc:	add	sl, pc, sl
   196c0:	adc	r3, r0, #0
   196c4:	ldr	r5, [sl, #4]
   196c8:	ldr	r4, [pc, #1256]	; 19bb8 <next@@Base+0x19a0>
   196cc:	ldr	r4, [pc, r4]
   196d0:	subs	r2, r4, r2
   196d4:	sbcs	r2, r5, r3
   196d8:	bcs	197ec <next@@Base+0x15d4>
   196dc:	adds	r1, r7, r1
   196e0:	adc	r0, r0, #0
   196e4:	subs	r1, r1, #4
   196e8:	sbc	r0, r0, #0
   196ec:	mvn	r2, #0
   196f0:	and	r5, r0, r2
   196f4:	mov	r0, #16646144	; 0xfe0000
   196f8:	orr	r0, r0, #-16777216	; 0xff000000
   196fc:	and	r4, r1, r0
   19700:	mov	r0, r8
   19704:	mov	r1, r4
   19708:	bl	126bc <realloc@plt>
   1970c:	ldr	r1, [pc, #1068]	; 19b40 <next@@Base+0x1928>
   19710:	strd	r4, [sl]
   19714:	mov	r3, r0
   19718:	mov	r7, r1
   1971c:	lsr	r2, r1, #24
   19720:	ldr	r1, [pc, #1176]	; 19bc0 <next@@Base+0x19a8>
   19724:	ldrb	r6, [r6]
   19728:	lsr	r4, r7, #16
   1972c:	add	r1, pc, r1
   19730:	str	r0, [r1]
   19734:	ldr	r1, [r9, #4]
   19738:	ldr	r5, [pc, #1156]	; 19bc4 <next@@Base+0x19ac>
   1973c:	ldr	r5, [pc, r5]
   19740:	strb	r7, [r3, r5]!
   19744:	strb	r2, [r3, #3]
   19748:	lsr	r2, r7, #8
   1974c:	strb	r2, [r3, #1]
   19750:	adds	r2, r5, #4
   19754:	adc	ip, r1, #0
   19758:	cmp	r6, #1
   1975c:	strb	r4, [r3, #2]
   19760:	stm	r9, {r2, ip}
   19764:	beq	19830 <next@@Base+0x1618>
   19768:	b	199e8 <next@@Base+0x17d0>
   1976c:	mov	r1, #0
   19770:	mov	r2, #2
   19774:	mov	r8, #0
   19778:	bl	12800 <fseek@plt>
   1977c:	ldr	r0, [pc, #1004]	; 19b70 <next@@Base+0x1958>
   19780:	ldr	r0, [pc, r0]
   19784:	bl	1268c <ftell@plt>
   19788:	mov	r2, r0
   1978c:	ldr	r0, [pc, #992]	; 19b74 <next@@Base+0x195c>
   19790:	asr	r3, r2, #31
   19794:	add	r0, pc, r0
   19798:	cmp	r2, #0
   1979c:	strd	r2, [r0]
   197a0:	beq	19a90 <next@@Base+0x1878>
   197a4:	ldr	r0, [pc, #972]	; 19b78 <next@@Base+0x1960>
   197a8:	mov	r1, r2
   197ac:	mov	r2, #3
   197b0:	mov	r3, #1
   197b4:	ldr	r0, [pc, r0]
   197b8:	str	r8, [sp, #8]
   197bc:	str	r8, [sp, #12]
   197c0:	str	r0, [sp]
   197c4:	mov	r0, #0
   197c8:	bl	12680 <mmap64@plt>
   197cc:	cmn	r0, #1
   197d0:	str	r0, [sl]
   197d4:	beq	19a58 <next@@Base+0x1840>
   197d8:	ldrb	r1, [r6]
   197dc:	cmp	r1, #0
   197e0:	beq	199a8 <next@@Base+0x1790>
   197e4:	mov	r8, r0
   197e8:	b	196a0 <next@@Base+0x1488>
   197ec:	ldr	r1, [r9, #4]
   197f0:	ldr	r5, [pc, #964]	; 19bbc <next@@Base+0x19a4>
   197f4:	ldr	r0, [pc, #836]	; 19b40 <next@@Base+0x1928>
   197f8:	mov	r6, r8
   197fc:	ldr	r5, [pc, r5]
   19800:	mov	r7, r0
   19804:	lsr	r2, r7, #16
   19808:	strb	r7, [r6, r5]!
   1980c:	lsr	r0, r0, #24
   19810:	lsr	r3, r7, #8
   19814:	strb	r2, [r6, #2]
   19818:	adds	r2, r5, #4
   1981c:	strb	r0, [r6, #3]
   19820:	strb	r3, [r6, #1]
   19824:	adc	ip, r1, #0
   19828:	stm	r9, {r2, ip}
   1982c:	mov	r0, r8
   19830:	ldr	r7, [sl, #4]
   19834:	ldr	r3, [pc, #908]	; 19bc8 <next@@Base+0x19b0>
   19838:	adds	r6, r5, #8
   1983c:	adc	r4, r1, #0
   19840:	ldr	r3, [pc, r3]
   19844:	subs	r3, r3, r6
   19848:	sbcs	r3, r7, r4
   1984c:	bcs	198f0 <next@@Base+0x16d8>
   19850:	mov	r2, #7
   19854:	orr	r2, r2, #131072	; 0x20000
   19858:	adds	r2, r5, r2
   1985c:	adc	r1, r1, #0
   19860:	mvn	r3, #0
   19864:	and	r5, r1, r3
   19868:	mov	r1, #16646144	; 0xfe0000
   1986c:	orr	r1, r1, #-16777216	; 0xff000000
   19870:	and	r4, r2, r1
   19874:	mov	r1, r4
   19878:	bl	126bc <realloc@plt>
   1987c:	strd	r4, [sl]
   19880:	ldr	r1, [pc, #840]	; 19bd0 <next@@Base+0x19b8>
   19884:	mov	r4, r0
   19888:	mov	lr, r9
   1988c:	add	r1, pc, r1
   19890:	str	r0, [r1]
   19894:	ldr	r1, [pc, #824]	; 19bd4 <next@@Base+0x19bc>
   19898:	ldr	r2, [sp, #20]
   1989c:	ldr	ip, [r9, #4]
   198a0:	add	r1, pc, r1
   198a4:	ldrb	r3, [r1]
   198a8:	ldrb	r1, [r2]
   198ac:	ldrb	r7, [r2, #1]
   198b0:	ldrb	r6, [r2, #2]
   198b4:	ldrb	r5, [r2, #3]
   198b8:	ldr	r2, [pc, #792]	; 19bd8 <next@@Base+0x19c0>
   198bc:	ldr	r2, [pc, r2]
   198c0:	strb	r1, [r4, r2]!
   198c4:	strb	r5, [r4, #3]
   198c8:	ldr	r5, [sp, #24]
   198cc:	strb	r6, [r4, #2]
   198d0:	adds	r6, r2, #4
   198d4:	adc	r1, ip, #0
   198d8:	cmp	r3, #1
   198dc:	str	r6, [lr]
   198e0:	strb	r7, [r4, #1]
   198e4:	str	r1, [lr, #4]
   198e8:	beq	19930 <next@@Base+0x1718>
   198ec:	b	19a28 <next@@Base+0x1810>
   198f0:	ldr	r6, [sp, #20]
   198f4:	mov	r5, r0
   198f8:	ldrb	r1, [r6]
   198fc:	ldrb	r3, [r6, #1]
   19900:	ldrb	r7, [r6, #2]
   19904:	ldrb	r6, [r6, #3]
   19908:	strb	r1, [r5, r2]!
   1990c:	strb	r6, [r5, #3]
   19910:	strb	r3, [r5, #1]
   19914:	adds	r6, r2, #4
   19918:	mov	r3, r9
   1991c:	adc	r1, ip, #0
   19920:	strb	r7, [r5, #2]
   19924:	str	r6, [r3]
   19928:	str	r1, [r3, #4]
   1992c:	ldr	r5, [sp, #24]
   19930:	ldr	r7, [sl, #4]
   19934:	ldr	r4, [pc, #672]	; 19bdc <next@@Base+0x19c4>
   19938:	adds	r3, r2, #8
   1993c:	adc	lr, ip, #0
   19940:	ldr	r4, [pc, r4]
   19944:	subs	r3, r4, r3
   19948:	sbcs	r3, r7, lr
   1994c:	bcs	199a0 <next@@Base+0x1788>
   19950:	mov	r1, #7
   19954:	orr	r1, r1, #131072	; 0x20000
   19958:	adds	r1, r2, r1
   1995c:	adc	r2, ip, #0
   19960:	mvn	r3, #0
   19964:	and	r7, r2, r3
   19968:	mov	r2, #16646144	; 0xfe0000
   1996c:	orr	r2, r2, #-16777216	; 0xff000000
   19970:	and	r4, r1, r2
   19974:	mov	r1, r4
   19978:	bl	126bc <realloc@plt>
   1997c:	stm	sl, {r4, r7}
   19980:	ldr	r1, [r9, #4]
   19984:	ldr	r2, [pc, #596]	; 19be0 <next@@Base+0x19c8>
   19988:	mov	lr, r9
   1998c:	add	r2, pc, r2
   19990:	str	r0, [r2]
   19994:	ldr	r6, [pc, #584]	; 19be4 <next@@Base+0x19cc>
   19998:	ldr	r6, [pc, r6]
   1999c:	b	19a28 <next@@Base+0x1810>
   199a0:	mov	lr, r9
   199a4:	b	19a28 <next@@Base+0x1810>
   199a8:	ldr	r6, [r9, #4]
   199ac:	ldr	r5, [pc, #536]	; 19bcc <next@@Base+0x19b4>
   199b0:	ldr	r1, [pc, #392]	; 19b40 <next@@Base+0x1928>
   199b4:	mov	r4, r0
   199b8:	ldr	r5, [pc, r5]
   199bc:	mov	r7, r1
   199c0:	lsr	r2, r7, #16
   199c4:	strb	r7, [r4, r5]!
   199c8:	lsr	r1, r1, #24
   199cc:	strb	r2, [r4, #2]
   199d0:	adds	r2, r5, #4
   199d4:	lsr	r3, r7, #8
   199d8:	adc	ip, r6, #0
   199dc:	strb	r1, [r4, #3]
   199e0:	strb	r3, [r4, #1]
   199e4:	stm	r9, {r2, ip}
   199e8:	ldr	r4, [sp, #20]
   199ec:	mov	r5, r0
   199f0:	mov	lr, r9
   199f4:	ldrb	r1, [r4]
   199f8:	ldrb	r6, [r4, #3]
   199fc:	ldrb	r3, [r4, #1]
   19a00:	ldrb	r7, [r4, #2]
   19a04:	strb	r1, [r5, r2]!
   19a08:	strb	r6, [r5, #3]
   19a0c:	adds	r6, r2, #4
   19a10:	adc	r1, ip, #0
   19a14:	strb	r7, [r5, #2]
   19a18:	strb	r3, [r5, #1]
   19a1c:	str	r6, [lr]
   19a20:	str	r1, [lr, #4]
   19a24:	ldr	r5, [sp, #24]
   19a28:	lsr	r2, r5, #24
   19a2c:	strb	r5, [r0, r6]!
   19a30:	lsr	r3, r5, #16
   19a34:	lsr	r7, r5, #8
   19a38:	strb	r2, [r0, #3]
   19a3c:	strb	r3, [r0, #2]
   19a40:	strb	r7, [r0, #1]
   19a44:	adds	r0, r6, #4
   19a48:	adc	r1, r1, #0
   19a4c:	strd	r0, [lr]
   19a50:	sub	sp, fp, #28
   19a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a58:	bl	12758 <__errno_location@plt>
   19a5c:	ldr	r1, [pc, #280]	; 19b7c <next@@Base+0x1964>
   19a60:	ldr	r1, [pc, r1]
   19a64:	ldr	r0, [r0]
   19a68:	ldr	r4, [r1]
   19a6c:	ldr	r5, [pc, #268]	; 19b80 <next@@Base+0x1968>
   19a70:	ldr	r5, [pc, r5]
   19a74:	bl	12704 <strerror@plt>
   19a78:	ldr	r1, [pc, #260]	; 19b84 <next@@Base+0x196c>
   19a7c:	mov	r3, r0
   19a80:	mov	r0, r4
   19a84:	add	r1, pc, r1
   19a88:	mov	r2, r5
   19a8c:	bl	1274c <fprintf@plt>
   19a90:	ldr	r0, [pc, #240]	; 19b88 <next@@Base+0x1970>
   19a94:	str	r8, [sl]
   19a98:	mov	r2, #16646144	; 0xfe0000
   19a9c:	add	r0, pc, r0
   19aa0:	orr	r2, r2, #-16777216	; 0xff000000
   19aa4:	str	r8, [r0]
   19aa8:	str	r8, [r0, #4]
   19aac:	mov	r0, #1
   19ab0:	strb	r0, [r6]
   19ab4:	ldr	r0, [r9, #4]
   19ab8:	ldr	r1, [pc, #204]	; 19b8c <next@@Base+0x1974>
   19abc:	mvn	r3, #0
   19ac0:	eor	r3, r0, r3
   19ac4:	ldr	r1, [pc, r1]
   19ac8:	eor	r2, r1, r2
   19acc:	orrs	r2, r2, r3
   19ad0:	beq	19690 <next@@Base+0x1478>
   19ad4:	ldr	r2, [pc, #104]	; 19b44 <next@@Base+0x192c>
   19ad8:	ldr	r7, [pc, #176]	; 19b90 <next@@Base+0x1978>
   19adc:	adds	r1, r1, r2
   19ae0:	mov	r2, #16646144	; 0xfe0000
   19ae4:	orr	r2, r2, #-16777216	; 0xff000000
   19ae8:	and	r4, r1, r2
   19aec:	adc	r0, r0, #0
   19af0:	mvn	r1, #0
   19af4:	and	r5, r0, r1
   19af8:	add	r7, pc, r7
   19afc:	b	1967c <next@@Base+0x1464>
   19b00:	bl	12758 <__errno_location@plt>
   19b04:	ldr	r1, [pc, #152]	; 19ba4 <next@@Base+0x198c>
   19b08:	ldr	r1, [pc, r1]
   19b0c:	ldr	r0, [r0]
   19b10:	ldr	r4, [r1]
   19b14:	ldr	r5, [pc, #140]	; 19ba8 <next@@Base+0x1990>
   19b18:	ldr	r5, [pc, r5]
   19b1c:	bl	12704 <strerror@plt>
   19b20:	ldr	r1, [pc, #132]	; 19bac <next@@Base+0x1994>
   19b24:	mov	r3, r0
   19b28:	mov	r0, r4
   19b2c:	add	r1, pc, r1
   19b30:	mov	r2, r5
   19b34:	bl	1274c <fprintf@plt>
   19b38:	sub	sp, fp, #28
   19b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b40:	strbvs	r6, [r3, -r1, ror #8]!
   19b44:	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
   19b48:	muleq	r1, r0, r1
   19b4c:	muleq	r1, r0, r1
   19b50:	andeq	r4, r1, ip, lsr #22
   19b54:	andeq	r4, r0, r4, lsl r6
   19b58:	andeq	r4, r1, r4, lsr #21
   19b5c:	ldrdeq	r6, [r1], -ip
   19b60:	andeq	r6, r1, r0, ror #1
   19b64:	andeq	r6, r1, ip, asr #1
   19b68:	andeq	r6, r1, ip, asr #1
   19b6c:	andeq	r6, r1, r0, lsr #1
   19b70:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19b74:	andeq	r5, r1, r4, lsr #31
   19b78:	andeq	r4, r1, r4, lsl r9
   19b7c:	andeq	r4, r1, r8, asr r6
   19b80:	muleq	r1, r8, ip
   19b84:	muleq	r0, lr, r2
   19b88:	andeq	r5, r1, ip, ror ip
   19b8c:	andeq	r5, r1, ip, asr ip
   19b90:	andeq	r5, r1, r0, lsr #24
   19b94:	andeq	r6, r1, r0, asr #2
   19b98:	andeq	r4, r0, r8, ror #11
   19b9c:	andeq	r6, r1, r0, lsr #2
   19ba0:	andeq	r6, r1, ip, lsl #2
   19ba4:			; <UNDEFINED> instruction: 0x000145b0
   19ba8:	strdeq	r5, [r1], -r0
   19bac:	muleq	r0, ip, r0
   19bb0:	andeq	r6, r1, r0, ror r0
   19bb4:	andeq	r6, r1, ip, asr r0
   19bb8:	andeq	r6, r1, ip, asr #32
   19bbc:	andeq	r5, r1, r4, lsr #30
   19bc0:	andeq	r5, r1, r8, ror #31
   19bc4:	andeq	r5, r1, r4, ror #31
   19bc8:	ldrdeq	r5, [r1], -r8
   19bcc:	andeq	r5, r1, r8, ror #26
   19bd0:	andeq	r5, r1, r8, lsl #29
   19bd4:	andeq	r5, r1, ip, ror #28
   19bd8:	andeq	r5, r1, r4, ror #28
   19bdc:	ldrdeq	r5, [r1], -r8
   19be0:	andeq	r5, r1, r8, lsl #27
   19be4:	andeq	r5, r1, r8, lsl #27
   19be8:	ldr	r0, [r0]
   19bec:	cmn	r0, #1
   19bf0:	beq	19c10 <next@@Base+0x19f8>
   19bf4:	ldr	r0, [r1, r0, lsl #2]
   19bf8:	cmp	r0, #0
   19bfc:	bxeq	lr
   19c00:	ldrd	r2, [r0]
   19c04:	adds	r2, r2, #1
   19c08:	adc	r3, r3, #0
   19c0c:	strd	r2, [r0]
   19c10:	bx	lr
   19c14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c18:	add	fp, sp, #28
   19c1c:	sub	sp, sp, #12
   19c20:	ldr	r7, [pc, #2008]	; 1a400 <next@@Base+0x21e8>
   19c24:	mov	sl, #2
   19c28:	cmp	r3, #0
   19c2c:	movne	sl, #3
   19c30:	ldr	r7, [pc, r7]
   19c34:	cmp	r7, #0
   19c38:	beq	1a3f8 <next@@Base+0x21e0>
   19c3c:	stm	sp, {r0, r2, r3}
   19c40:	ldr	r0, [pc, #1980]	; 1a404 <next@@Base+0x21ec>
   19c44:	mov	r5, r1
   19c48:	add	r0, pc, r0
   19c4c:	ldrb	r0, [r0]
   19c50:	ldr	r8, [pc, #1968]	; 1a408 <next@@Base+0x21f0>
   19c54:	cmp	r0, #1
   19c58:	add	r8, pc, r8
   19c5c:	bne	19ce0 <next@@Base+0x1ac8>
   19c60:	ldr	r4, [pc, #1956]	; 1a40c <next@@Base+0x21f4>
   19c64:	ldr	r0, [r8, #4]
   19c68:	ldr	r1, [pc, #1952]	; 1a410 <next@@Base+0x21f8>
   19c6c:	add	r4, pc, r4
   19c70:	ldr	r1, [pc, r1]
   19c74:	ldr	r7, [r4, #4]
   19c78:	ldr	r6, [pc, #1940]	; 1a414 <next@@Base+0x21fc>
   19c7c:	adds	r2, r1, #4
   19c80:	adc	r3, r0, #0
   19c84:	ldr	r6, [pc, r6]
   19c88:	subs	r2, r6, r2
   19c8c:	sbcs	r2, r7, r3
   19c90:	bcs	19ce0 <next@@Base+0x1ac8>
   19c94:	mov	r2, #7
   19c98:	orr	r2, r2, #131072	; 0x20000
   19c9c:	adds	r1, r2, r1
   19ca0:	adc	r0, r0, #0
   19ca4:	subs	r1, r1, #4
   19ca8:	sbc	r0, r0, #0
   19cac:	mvn	r2, #0
   19cb0:	and	r7, r0, r2
   19cb4:	mov	r0, #16646144	; 0xfe0000
   19cb8:	orr	r0, r0, #-16777216	; 0xff000000
   19cbc:	ldr	r9, [pc, #1876]	; 1a418 <next@@Base+0x2200>
   19cc0:	and	r6, r1, r0
   19cc4:	ldr	r0, [pc, #1872]	; 1a41c <next@@Base+0x2204>
   19cc8:	mov	r1, r6
   19ccc:	add	r9, pc, r9
   19cd0:	ldr	r0, [pc, r0]
   19cd4:	bl	126bc <realloc@plt>
   19cd8:	strd	r6, [r4]
   19cdc:	str	r0, [r9]
   19ce0:	ldr	r7, [pc, #1848]	; 1a420 <next@@Base+0x2208>
   19ce4:	mov	r0, #0
   19ce8:	mov	r2, #1
   19cec:	ldr	r7, [pc, r7]
   19cf0:	ldr	ip, [pc, #1836]	; 1a424 <next@@Base+0x220c>
   19cf4:	adds	r4, r7, #4
   19cf8:	ldr	ip, [pc, ip]
   19cfc:	ldr	r6, [r8, #4]
   19d00:	mov	r1, ip
   19d04:	adc	r9, r6, #0
   19d08:	strb	r0, [r1, r7]!
   19d0c:	cmp	r5, #0
   19d10:	strb	r2, [r1, #3]
   19d14:	strb	r0, [r1, #2]
   19d18:	strb	r0, [r1, #1]
   19d1c:	stm	r8, {r4, r9}
   19d20:	mov	r8, r5
   19d24:	beq	19d40 <next@@Base+0x1b28>
   19d28:	mov	r0, r8
   19d2c:	mov	r5, ip
   19d30:	bl	12734 <strlen@plt>
   19d34:	add	r0, sl, r0, lsr #2
   19d38:	mov	ip, r5
   19d3c:	add	sl, r0, #2
   19d40:	ldr	r0, [pc, #1760]	; 1a428 <next@@Base+0x2210>
   19d44:	add	r0, pc, r0
   19d48:	ldrb	r0, [r0]
   19d4c:	cmp	r0, #0
   19d50:	beq	19e2c <next@@Base+0x1c14>
   19d54:	ldr	lr, [pc, #1748]	; 1a430 <next@@Base+0x2218>
   19d58:	adds	r0, r7, #8
   19d5c:	adc	r1, r6, #0
   19d60:	add	lr, pc, lr
   19d64:	ldr	r2, [lr, #4]
   19d68:	ldr	r3, [pc, #1732]	; 1a434 <next@@Base+0x221c>
   19d6c:	ldr	r3, [pc, r3]
   19d70:	subs	r0, r3, r0
   19d74:	sbcs	r0, r2, r1
   19d78:	bcs	19e98 <next@@Base+0x1c80>
   19d7c:	mov	r0, #7
   19d80:	orr	r0, r0, #131072	; 0x20000
   19d84:	adds	r0, r7, r0
   19d88:	adc	r1, r6, #0
   19d8c:	mvn	r2, #0
   19d90:	and	r5, r1, r2
   19d94:	mov	r1, #16646144	; 0xfe0000
   19d98:	orr	r1, r1, #-16777216	; 0xff000000
   19d9c:	and	r6, r0, r1
   19da0:	ldr	r4, [pc, #1684]	; 1a43c <next@@Base+0x2224>
   19da4:	mov	r0, ip
   19da8:	mov	r1, r6
   19dac:	add	r4, pc, r4
   19db0:	mov	r7, lr
   19db4:	bl	126bc <realloc@plt>
   19db8:	mov	lr, r7
   19dbc:	mov	ip, r0
   19dc0:	str	r6, [lr]
   19dc4:	str	r5, [lr, #4]
   19dc8:	str	ip, [r4]
   19dcc:	ldr	r1, [pc, #1644]	; 1a440 <next@@Base+0x2228>
   19dd0:	lsr	r0, sl, #24
   19dd4:	add	r1, pc, r1
   19dd8:	lsr	r3, sl, #16
   19ddc:	ldrb	r2, [r1]
   19de0:	ldr	r1, [pc, #1628]	; 1a444 <next@@Base+0x222c>
   19de4:	add	r1, pc, r1
   19de8:	mov	r7, r1
   19dec:	ldr	r9, [r1, #4]
   19df0:	ldr	r4, [pc, #1616]	; 1a448 <next@@Base+0x2230>
   19df4:	mov	r1, ip
   19df8:	ldr	r4, [pc, r4]
   19dfc:	strb	sl, [r1, r4]!
   19e00:	strb	r0, [r1, #3]
   19e04:	lsr	r0, sl, #8
   19e08:	strb	r0, [r1, #1]
   19e0c:	adds	r0, r4, #4
   19e10:	strb	r3, [r1, #2]
   19e14:	adc	r1, r9, #0
   19e18:	mov	sl, r7
   19e1c:	cmp	r2, #1
   19e20:	strd	r0, [sl]
   19e24:	bne	19e60 <next@@Base+0x1c48>
   19e28:	b	19ecc <next@@Base+0x1cb4>
   19e2c:	mov	r3, ip
   19e30:	lsr	r0, sl, #24
   19e34:	strb	sl, [r3, r4]!
   19e38:	lsr	r1, sl, #16
   19e3c:	lsr	r2, sl, #8
   19e40:	strb	r0, [r3, #3]
   19e44:	strb	r1, [r3, #2]
   19e48:	strb	r2, [r3, #1]
   19e4c:	ldr	sl, [pc, #1496]	; 1a42c <next@@Base+0x2214>
   19e50:	adds	r0, r7, #8
   19e54:	adc	r1, r6, #0
   19e58:	add	sl, pc, sl
   19e5c:	strd	r0, [sl]
   19e60:	ldr	r5, [sp]
   19e64:	mov	r6, ip
   19e68:	lsr	r2, r5, #24
   19e6c:	strb	r5, [r6, r0]!
   19e70:	lsr	r3, r5, #16
   19e74:	lsr	r7, r5, #8
   19e78:	strb	r2, [r6, #3]
   19e7c:	strb	r3, [r6, #2]
   19e80:	strb	r7, [r6, #1]
   19e84:	adds	r2, r0, #4
   19e88:	adc	r3, r1, #0
   19e8c:	ldmib	sp, {r5, r9}
   19e90:	strd	r2, [sl]
   19e94:	b	1a040 <next@@Base+0x1e28>
   19e98:	mov	r3, ip
   19e9c:	lsr	r0, sl, #24
   19ea0:	strb	sl, [r3, r4]!
   19ea4:	lsr	r1, sl, #16
   19ea8:	lsr	r2, sl, #8
   19eac:	strb	r0, [r3, #3]
   19eb0:	strb	r1, [r3, #2]
   19eb4:	strb	r2, [r3, #1]
   19eb8:	ldr	sl, [pc, #1400]	; 1a438 <next@@Base+0x2220>
   19ebc:	adds	r0, r7, #8
   19ec0:	adc	r1, r6, #0
   19ec4:	add	sl, pc, sl
   19ec8:	strd	r0, [sl]
   19ecc:	ldr	r7, [lr, #4]
   19ed0:	ldr	r6, [pc, #1396]	; 1a44c <next@@Base+0x2234>
   19ed4:	adds	r2, r4, #8
   19ed8:	adc	r3, r9, #0
   19edc:	ldr	r6, [pc, r6]
   19ee0:	subs	r2, r6, r2
   19ee4:	sbcs	r2, r7, r3
   19ee8:	bcs	19f90 <next@@Base+0x1d78>
   19eec:	mov	r0, #7
   19ef0:	orr	r0, r0, #131072	; 0x20000
   19ef4:	adds	r0, r4, r0
   19ef8:	adc	r1, r9, #0
   19efc:	mvn	r2, #0
   19f00:	and	r5, r1, r2
   19f04:	mov	r1, #16646144	; 0xfe0000
   19f08:	orr	r1, r1, #-16777216	; 0xff000000
   19f0c:	and	r4, r0, r1
   19f10:	ldr	r7, [pc, #1336]	; 1a450 <next@@Base+0x2238>
   19f14:	mov	r0, ip
   19f18:	mov	r1, r4
   19f1c:	add	r7, pc, r7
   19f20:	mov	r6, lr
   19f24:	bl	126bc <realloc@plt>
   19f28:	mov	lr, r6
   19f2c:	str	r0, [r7]
   19f30:	strd	r4, [lr]
   19f34:	mov	ip, r0
   19f38:	ldr	r6, [sp]
   19f3c:	ldr	r0, [pc, #1296]	; 1a454 <next@@Base+0x223c>
   19f40:	ldr	r1, [sl, #4]
   19f44:	mov	r3, ip
   19f48:	add	r0, pc, r0
   19f4c:	lsr	r2, r6, #24
   19f50:	ldrb	r7, [r0]
   19f54:	ldr	r0, [pc, #1276]	; 1a458 <next@@Base+0x2240>
   19f58:	ldr	r0, [pc, r0]
   19f5c:	strb	r6, [r3, r0]!
   19f60:	ldmib	sp, {r5, r9}
   19f64:	strb	r2, [r3, #3]
   19f68:	lsr	r2, r6, #8
   19f6c:	lsr	r6, r6, #16
   19f70:	strb	r2, [r3, #1]
   19f74:	adds	r2, r0, #4
   19f78:	strb	r6, [r3, #2]
   19f7c:	adc	r3, r1, #0
   19f80:	cmp	r7, #1
   19f84:	strd	r2, [sl]
   19f88:	beq	19fc4 <next@@Base+0x1dac>
   19f8c:	b	1a040 <next@@Base+0x1e28>
   19f90:	ldr	r5, [sp]
   19f94:	mov	r6, ip
   19f98:	lsr	r2, r5, #24
   19f9c:	strb	r5, [r6, r0]!
   19fa0:	lsr	r3, r5, #16
   19fa4:	lsr	r7, r5, #8
   19fa8:	strb	r2, [r6, #3]
   19fac:	strb	r3, [r6, #2]
   19fb0:	strb	r7, [r6, #1]
   19fb4:	adds	r2, r0, #4
   19fb8:	adc	r3, r1, #0
   19fbc:	ldmib	sp, {r5, r9}
   19fc0:	strd	r2, [sl]
   19fc4:	str	r8, [sp, #8]
   19fc8:	mov	r8, lr
   19fcc:	adds	r7, r0, #8
   19fd0:	ldr	r6, [r8, #4]
   19fd4:	ldr	r4, [pc, #1152]	; 1a45c <next@@Base+0x2244>
   19fd8:	adc	lr, r1, #0
   19fdc:	ldr	r4, [pc, r4]
   19fe0:	subs	r7, r4, r7
   19fe4:	sbcs	r7, r6, lr
   19fe8:	bcs	1a03c <next@@Base+0x1e24>
   19fec:	mov	r2, #7
   19ff0:	orr	r2, r2, #131072	; 0x20000
   19ff4:	adds	r0, r0, r2
   19ff8:	adc	r1, r1, #0
   19ffc:	mvn	r2, #0
   1a000:	and	r7, r1, r2
   1a004:	mov	r1, #16646144	; 0xfe0000
   1a008:	orr	r1, r1, #-16777216	; 0xff000000
   1a00c:	and	r6, r0, r1
   1a010:	ldr	r4, [pc, #1096]	; 1a460 <next@@Base+0x2248>
   1a014:	mov	r0, ip
   1a018:	mov	r1, r6
   1a01c:	add	r4, pc, r4
   1a020:	bl	126bc <realloc@plt>
   1a024:	strd	r6, [r8]
   1a028:	str	r0, [r4]
   1a02c:	ldr	r3, [sl, #4]
   1a030:	ldr	r2, [pc, #1068]	; 1a464 <next@@Base+0x224c>
   1a034:	mov	ip, r0
   1a038:	ldr	r2, [pc, r2]
   1a03c:	ldr	r8, [sp, #8]
   1a040:	mov	r6, ip
   1a044:	lsr	r7, r5, #8
   1a048:	strb	r5, [r6, r2]!
   1a04c:	adds	r4, r2, #4
   1a050:	lsr	r0, r5, #24
   1a054:	lsr	r1, r5, #16
   1a058:	strb	r7, [r6, #1]
   1a05c:	adc	r7, r3, #0
   1a060:	cmp	r9, #0
   1a064:	strb	r0, [r6, #3]
   1a068:	strb	r1, [r6, #2]
   1a06c:	stm	sl, {r4, r7}
   1a070:	beq	1a144 <next@@Base+0x1f2c>
   1a074:	ldr	r0, [pc, #1004]	; 1a468 <next@@Base+0x2250>
   1a078:	ldr	sl, [fp, #8]
   1a07c:	add	r0, pc, r0
   1a080:	ldrb	r0, [r0]
   1a084:	cmp	r0, #1
   1a088:	bne	1a110 <next@@Base+0x1ef8>
   1a08c:	ldr	r9, [pc, #984]	; 1a46c <next@@Base+0x2254>
   1a090:	adds	r0, r2, #8
   1a094:	adc	r1, r3, #0
   1a098:	add	r9, pc, r9
   1a09c:	ldr	r6, [r9, #4]
   1a0a0:	ldr	r5, [pc, #968]	; 1a470 <next@@Base+0x2258>
   1a0a4:	ldr	r5, [pc, r5]
   1a0a8:	subs	r0, r5, r0
   1a0ac:	sbcs	r0, r6, r1
   1a0b0:	bcs	1a110 <next@@Base+0x1ef8>
   1a0b4:	mov	r0, #7
   1a0b8:	orr	r0, r0, #131072	; 0x20000
   1a0bc:	adds	r0, r2, r0
   1a0c0:	adc	r1, r3, #0
   1a0c4:	mvn	r2, #0
   1a0c8:	and	r5, r1, r2
   1a0cc:	mov	r1, #16646144	; 0xfe0000
   1a0d0:	orr	r1, r1, #-16777216	; 0xff000000
   1a0d4:	and	r6, r0, r1
   1a0d8:	ldr	r4, [pc, #916]	; 1a474 <next@@Base+0x225c>
   1a0dc:	mov	r0, ip
   1a0e0:	mov	r1, r6
   1a0e4:	add	r4, pc, r4
   1a0e8:	bl	126bc <realloc@plt>
   1a0ec:	str	r6, [r9]
   1a0f0:	str	r5, [r9, #4]
   1a0f4:	mov	ip, r0
   1a0f8:	ldr	r0, [pc, #888]	; 1a478 <next@@Base+0x2260>
   1a0fc:	str	ip, [r4]
   1a100:	add	r0, pc, r0
   1a104:	ldr	r7, [r0, #4]
   1a108:	ldr	r4, [pc, #876]	; 1a47c <next@@Base+0x2264>
   1a10c:	ldr	r4, [pc, r4]
   1a110:	mov	r3, ip
   1a114:	lsr	r0, sl, #24
   1a118:	strb	sl, [r3, r4]!
   1a11c:	lsr	r1, sl, #16
   1a120:	lsr	r2, sl, #8
   1a124:	strb	r0, [r3, #3]
   1a128:	strb	r1, [r3, #2]
   1a12c:	strb	r2, [r3, #1]
   1a130:	ldr	sl, [pc, #840]	; 1a480 <next@@Base+0x2268>
   1a134:	adds	r4, r4, #4
   1a138:	adc	r7, r7, #0
   1a13c:	add	sl, pc, sl
   1a140:	stm	sl, {r4, r7}
   1a144:	cmp	r8, #0
   1a148:	beq	1a3f8 <next@@Base+0x21e0>
   1a14c:	mov	r0, r8
   1a150:	mov	r9, ip
   1a154:	bl	12734 <strlen@plt>
   1a158:	mov	r6, #1
   1a15c:	add	r5, r6, r0, lsr #2
   1a160:	ldr	r0, [pc, #796]	; 1a484 <next@@Base+0x226c>
   1a164:	add	r0, pc, r0
   1a168:	ldrb	r0, [r0]
   1a16c:	cmp	r0, #1
   1a170:	bne	1a214 <next@@Base+0x1ffc>
   1a174:	ldr	sl, [pc, #780]	; 1a488 <next@@Base+0x2270>
   1a178:	adds	r0, r4, #4
   1a17c:	adc	r1, r7, #0
   1a180:	add	sl, pc, sl
   1a184:	ldr	r2, [sl, #4]
   1a188:	ldr	r3, [pc, #764]	; 1a48c <next@@Base+0x2274>
   1a18c:	ldr	r3, [pc, r3]
   1a190:	subs	r0, r3, r0
   1a194:	sbcs	r0, r2, r1
   1a198:	bcs	1a228 <next@@Base+0x2010>
   1a19c:	mov	r0, #0
   1a1a0:	str	r0, [sp, #8]
   1a1a4:	mov	r0, #7
   1a1a8:	orr	r0, r0, #131072	; 0x20000
   1a1ac:	adds	r0, r0, r4
   1a1b0:	adc	r1, r7, #0
   1a1b4:	subs	r0, r0, #4
   1a1b8:	sbc	r1, r1, #0
   1a1bc:	mvn	r2, #0
   1a1c0:	and	r7, r1, r2
   1a1c4:	mov	r1, #16646144	; 0xfe0000
   1a1c8:	orr	r1, r1, #-16777216	; 0xff000000
   1a1cc:	and	r4, r0, r1
   1a1d0:	ldr	r6, [pc, #700]	; 1a494 <next@@Base+0x227c>
   1a1d4:	mov	r0, r9
   1a1d8:	mov	r1, r4
   1a1dc:	add	r6, pc, r6
   1a1e0:	bl	126bc <realloc@plt>
   1a1e4:	stm	sl, {r4, r7}
   1a1e8:	str	r0, [r6]
   1a1ec:	ldr	sl, [pc, #676]	; 1a498 <next@@Base+0x2280>
   1a1f0:	mov	r3, r0
   1a1f4:	add	sl, pc, sl
   1a1f8:	ldr	r7, [sl, #4]
   1a1fc:	ldr	r0, [pc, #664]	; 1a49c <next@@Base+0x2284>
   1a200:	add	r0, pc, r0
   1a204:	ldrb	r6, [r0]
   1a208:	ldr	r4, [pc, #656]	; 1a4a0 <next@@Base+0x2288>
   1a20c:	ldr	r4, [pc, r4]
   1a210:	b	1a23c <next@@Base+0x2024>
   1a214:	mov	r0, #0
   1a218:	str	r0, [sp, #8]
   1a21c:	mov	r6, #0
   1a220:	mov	r3, r9
   1a224:	b	1a23c <next@@Base+0x2024>
   1a228:	mov	r0, #0
   1a22c:	str	r0, [sp, #8]
   1a230:	ldr	sl, [pc, #600]	; 1a490 <next@@Base+0x2278>
   1a234:	mov	r3, r9
   1a238:	add	sl, pc, sl
   1a23c:	mov	r9, r3
   1a240:	strb	r5, [r3, r4]!
   1a244:	lsr	r0, r5, #24
   1a248:	adds	r4, r4, #4
   1a24c:	lsr	r1, r5, #16
   1a250:	lsr	r2, r5, #8
   1a254:	strb	r0, [r3, #3]
   1a258:	mov	r0, r8
   1a25c:	adc	r5, r7, #0
   1a260:	strb	r1, [r3, #2]
   1a264:	strb	r2, [r3, #1]
   1a268:	strd	r4, [sl]
   1a26c:	bl	12734 <strlen@plt>
   1a270:	mov	r7, r0
   1a274:	cmp	r6, #0
   1a278:	beq	1a314 <next@@Base+0x20fc>
   1a27c:	ldr	r6, [pc, #544]	; 1a4a4 <next@@Base+0x228c>
   1a280:	adds	r0, r4, r7
   1a284:	adc	r1, r5, #0
   1a288:	add	r6, pc, r6
   1a28c:	ldr	r2, [r6, #4]
   1a290:	ldr	r3, [pc, #528]	; 1a4a8 <next@@Base+0x2290>
   1a294:	ldr	r3, [pc, r3]
   1a298:	subs	r3, r3, r0
   1a29c:	sbcs	r2, r2, r1
   1a2a0:	bcs	1a30c <next@@Base+0x20f4>
   1a2a4:	mov	r2, #7
   1a2a8:	orr	r2, r2, #131072	; 0x20000
   1a2ac:	adds	r0, r2, r0
   1a2b0:	adc	r1, r1, #0
   1a2b4:	subs	r0, r0, #8
   1a2b8:	sbc	r1, r1, #0
   1a2bc:	mvn	r2, #0
   1a2c0:	and	r5, r1, r2
   1a2c4:	mov	r1, #16646144	; 0xfe0000
   1a2c8:	orr	r1, r1, #-16777216	; 0xff000000
   1a2cc:	and	r4, r0, r1
   1a2d0:	mov	r0, r9
   1a2d4:	mov	r1, r4
   1a2d8:	bl	126bc <realloc@plt>
   1a2dc:	strd	r4, [r6]
   1a2e0:	ldr	r1, [pc, #452]	; 1a4ac <next@@Base+0x2294>
   1a2e4:	ldr	r5, [sl, #4]
   1a2e8:	add	r1, pc, r1
   1a2ec:	str	r0, [r1]
   1a2f0:	ldr	r1, [pc, #440]	; 1a4b0 <next@@Base+0x2298>
   1a2f4:	add	r1, pc, r1
   1a2f8:	ldrb	r1, [r1]
   1a2fc:	str	r1, [sp, #8]
   1a300:	ldr	r4, [pc, #428]	; 1a4b4 <next@@Base+0x229c>
   1a304:	ldr	r4, [pc, r4]
   1a308:	b	1a318 <next@@Base+0x2100>
   1a30c:	mov	r0, #1
   1a310:	str	r0, [sp, #8]
   1a314:	mov	r0, r9
   1a318:	mov	r9, r0
   1a31c:	add	r0, r0, r4
   1a320:	mov	r1, r8
   1a324:	mov	r2, r7
   1a328:	bl	12674 <memcpy@plt>
   1a32c:	adds	r6, r4, r7
   1a330:	mov	r0, r8
   1a334:	adc	r5, r5, #0
   1a338:	str	r6, [sl]
   1a33c:	str	r5, [sl, #4]
   1a340:	bl	12734 <strlen@plt>
   1a344:	and	r0, r0, #3
   1a348:	rsb	r4, r0, #4
   1a34c:	ldr	r0, [sp, #8]
   1a350:	cmp	r0, #0
   1a354:	beq	1a3dc <next@@Base+0x21c4>
   1a358:	ldr	r7, [pc, #344]	; 1a4b8 <next@@Base+0x22a0>
   1a35c:	adds	r0, r6, r4
   1a360:	adc	r1, r5, #0
   1a364:	add	r7, pc, r7
   1a368:	ldr	r2, [r7, #4]
   1a36c:	ldr	r3, [pc, #328]	; 1a4bc <next@@Base+0x22a4>
   1a370:	ldr	r3, [pc, r3]
   1a374:	subs	r3, r3, r0
   1a378:	sbcs	r2, r2, r1
   1a37c:	bcs	1a3dc <next@@Base+0x21c4>
   1a380:	mov	r2, #7
   1a384:	orr	r2, r2, #131072	; 0x20000
   1a388:	adds	r0, r2, r0
   1a38c:	adc	r1, r1, #0
   1a390:	subs	r0, r0, #8
   1a394:	sbc	r1, r1, #0
   1a398:	mvn	r2, #0
   1a39c:	and	r5, r1, r2
   1a3a0:	mov	r1, #16646144	; 0xfe0000
   1a3a4:	orr	r1, r1, #-16777216	; 0xff000000
   1a3a8:	and	r6, r0, r1
   1a3ac:	ldr	r8, [pc, #268]	; 1a4c0 <next@@Base+0x22a8>
   1a3b0:	mov	r0, r9
   1a3b4:	mov	r1, r6
   1a3b8:	add	r8, pc, r8
   1a3bc:	bl	126bc <realloc@plt>
   1a3c0:	str	r6, [r7]
   1a3c4:	str	r5, [r7, #4]
   1a3c8:	str	r0, [r8]
   1a3cc:	ldr	r5, [sl, #4]
   1a3d0:	ldr	r6, [pc, #236]	; 1a4c4 <next@@Base+0x22ac>
   1a3d4:	mov	r9, r0
   1a3d8:	ldr	r6, [pc, r6]
   1a3dc:	add	r0, r9, r6
   1a3e0:	mov	r1, #0
   1a3e4:	mov	r2, r4
   1a3e8:	bl	1277c <memset@plt>
   1a3ec:	adds	r0, r6, r4
   1a3f0:	adc	r1, r5, #0
   1a3f4:	strd	r0, [sl]
   1a3f8:	sub	sp, fp, #28
   1a3fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a400:	andeq	r5, r1, r0, ror #21
   1a404:	andeq	r5, r1, r4, asr #21
   1a408:	andeq	r5, r1, r8, asr #21
   1a40c:	andeq	r5, r1, ip, lsr #21
   1a410:			; <UNDEFINED> instruction: 0x00015ab0
   1a414:	muleq	r1, r4, sl
   1a418:	andeq	r5, r1, r8, asr #20
   1a41c:	andeq	r5, r1, r4, asr #20
   1a420:	andeq	r5, r1, r4, lsr sl
   1a424:	andeq	r5, r1, ip, lsl sl
   1a428:	andeq	r5, r1, r8, asr #19
   1a42c:	andeq	r5, r1, r8, asr #17
   1a430:			; <UNDEFINED> instruction: 0x000159b8
   1a434:	andeq	r5, r1, ip, lsr #19
   1a438:	andeq	r5, r1, ip, asr r8
   1a43c:	andeq	r5, r1, r8, ror #18
   1a440:	andeq	r5, r1, r8, lsr r9
   1a444:	andeq	r5, r1, ip, lsr r9
   1a448:	andeq	r5, r1, r8, lsr #18
   1a44c:	andeq	r5, r1, ip, lsr r8
   1a450:	strdeq	r5, [r1], -r8
   1a454:	andeq	r5, r1, r4, asr #15
   1a458:	andeq	r5, r1, r8, asr #15
   1a45c:	andeq	r5, r1, ip, lsr r7
   1a460:	strdeq	r5, [r1], -r8
   1a464:	andeq	r5, r1, r8, ror #13
   1a468:	muleq	r1, r0, r6
   1a46c:	andeq	r5, r1, r0, lsl #13
   1a470:	andeq	r5, r1, r4, ror r6
   1a474:	andeq	r5, r1, r0, lsr r6
   1a478:	andeq	r5, r1, r0, lsr #12
   1a47c:	andeq	r5, r1, r4, lsl r6
   1a480:	andeq	r5, r1, r4, ror #11
   1a484:	andeq	r5, r1, r8, lsr #11
   1a488:	muleq	r1, r8, r5
   1a48c:	andeq	r5, r1, ip, lsl #11
   1a490:	andeq	r5, r1, r8, ror #9
   1a494:	andeq	r5, r1, r8, lsr r5
   1a498:	andeq	r5, r1, ip, lsr #10
   1a49c:	andeq	r5, r1, ip, lsl #10
   1a4a0:	andeq	r5, r1, r4, lsl r5
   1a4a4:	muleq	r1, r0, r4
   1a4a8:	andeq	r5, r1, r4, lsl #9
   1a4ac:	andeq	r5, r1, ip, lsr #8
   1a4b0:	andeq	r5, r1, r8, lsl r4
   1a4b4:	andeq	r5, r1, ip, lsl r4
   1a4b8:			; <UNDEFINED> instruction: 0x000153b4
   1a4bc:	andeq	r5, r1, r8, lsr #7
   1a4c0:	andeq	r5, r1, ip, asr r3
   1a4c4:	andeq	r5, r1, r8, asr #6
   1a4c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4cc:	add	fp, sp, #28
   1a4d0:	sub	sp, sp, #28
   1a4d4:	mov	ip, r0
   1a4d8:	ldr	r0, [pc, #1740]	; 1abac <next@@Base+0x2994>
   1a4dc:	ldr	r0, [pc, r0]
   1a4e0:	cmp	r0, #0
   1a4e4:	beq	1a600 <next@@Base+0x23e8>
   1a4e8:	ldr	r5, [pc, #1728]	; 1abb0 <next@@Base+0x2998>
   1a4ec:	mov	sl, r1
   1a4f0:	add	r5, pc, r5
   1a4f4:	ldr	r3, [r5, #4]
   1a4f8:	ldr	r4, [pc, #1716]	; 1abb4 <next@@Base+0x299c>
   1a4fc:	ldr	r4, [pc, r4]
   1a500:	ldr	r6, [pc, #1712]	; 1abb8 <next@@Base+0x29a0>
   1a504:	add	r6, pc, r6
   1a508:	ldrb	r0, [r6]
   1a50c:	cmp	r0, #0
   1a510:	beq	1a608 <next@@Base+0x23f0>
   1a514:	ldr	r8, [pc, #1732]	; 1abe0 <next@@Base+0x29c8>
   1a518:	mov	r5, #10551296	; 0xa10000
   1a51c:	adds	r9, r4, #4
   1a520:	add	r8, pc, r8
   1a524:	adc	r2, r3, #0
   1a528:	ldr	r0, [r8, #4]
   1a52c:	ldr	r1, [pc, #1712]	; 1abe4 <next@@Base+0x29cc>
   1a530:	orr	r5, r5, #16777216	; 0x1000000
   1a534:	ldr	r1, [pc, r1]
   1a538:	subs	r1, r1, r9
   1a53c:	sbcs	r0, r0, r2
   1a540:	bcs	1a70c <next@@Base+0x24f4>
   1a544:	mov	r0, #3
   1a548:	orr	r0, r0, #131072	; 0x20000
   1a54c:	adds	r0, r4, r0
   1a550:	adc	r1, r3, #0
   1a554:	mvn	r2, #0
   1a558:	and	r9, r1, r2
   1a55c:	mov	r1, #16646144	; 0xfe0000
   1a560:	orr	r1, r1, #-16777216	; 0xff000000
   1a564:	and	r4, r0, r1
   1a568:	ldr	r0, [pc, #1664]	; 1abf0 <next@@Base+0x29d8>
   1a56c:	mov	r1, r4
   1a570:	mov	r7, ip
   1a574:	ldr	r0, [pc, r0]
   1a578:	bl	126bc <realloc@plt>
   1a57c:	ldr	ip, [pc, #1648]	; 1abf4 <next@@Base+0x29dc>
   1a580:	ldr	lr, [pc, #1648]	; 1abf8 <next@@Base+0x29e0>
   1a584:	stm	r8, {r4, r9}
   1a588:	ldr	r1, [pc, #1644]	; 1abfc <next@@Base+0x29e4>
   1a58c:	add	ip, pc, ip
   1a590:	add	lr, pc, lr
   1a594:	add	r1, pc, r1
   1a598:	mov	r2, r0
   1a59c:	str	r2, [r1]
   1a5a0:	mov	r6, ip
   1a5a4:	ldrb	ip, [ip]
   1a5a8:	ldr	r3, [lr, #4]
   1a5ac:	ldr	r4, [pc, #1612]	; 1ac00 <next@@Base+0x29e8>
   1a5b0:	lsr	r0, r5, #24
   1a5b4:	mov	r1, r8
   1a5b8:	ldr	r4, [pc, r4]
   1a5bc:	str	r2, [sp, #20]
   1a5c0:	lsl	r8, r7, #1
   1a5c4:	strb	r5, [r2, r4]!
   1a5c8:	adds	r9, r4, #4
   1a5cc:	strb	r0, [r2, #3]
   1a5d0:	lsr	r0, r5, #16
   1a5d4:	strb	r0, [r2, #2]
   1a5d8:	lsr	r0, r5, #8
   1a5dc:	strb	r0, [r2, #1]
   1a5e0:	adc	r5, r3, #0
   1a5e4:	mov	r0, #0
   1a5e8:	cmp	ip, #1
   1a5ec:	str	r3, [sp, #16]
   1a5f0:	str	r9, [lr]
   1a5f4:	str	r5, [lr, #4]
   1a5f8:	beq	1a760 <next@@Base+0x2548>
   1a5fc:	b	1a8c4 <next@@Base+0x26ac>
   1a600:	sub	sp, fp, #28
   1a604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a608:	ldr	r0, [pc, #1452]	; 1abbc <next@@Base+0x29a4>
   1a60c:	mov	r7, r3
   1a610:	mov	r9, #0
   1a614:	ldr	r0, [pc, r0]
   1a618:	str	r0, [sp, #20]
   1a61c:	ldrb	r1, [r0, r4]!
   1a620:	str	r7, [sp, #16]
   1a624:	ldrb	r2, [r0, #1]
   1a628:	ldrb	r3, [r0, #2]
   1a62c:	ldrb	r0, [r0, #3]
   1a630:	orr	r1, r1, r2, lsl #8
   1a634:	orr	r1, r1, r3, lsl #16
   1a638:	adds	r2, r4, #4
   1a63c:	orr	r3, r1, r0, lsl #24
   1a640:	adc	r7, r7, #0
   1a644:	mov	r1, r5
   1a648:	stm	r5, {r2, r7}
   1a64c:	mov	r5, #10551296	; 0xa10000
   1a650:	orr	r5, r5, #16777216	; 0x1000000
   1a654:	cmn	r3, #1
   1a658:	beq	1a80c <next@@Base+0x25f4>
   1a65c:	cmp	r3, r5
   1a660:	bne	1a81c <next@@Base+0x2604>
   1a664:	str	r7, [sp, #8]
   1a668:	ldr	r0, [sp, #20]
   1a66c:	str	r4, [sp, #4]
   1a670:	mov	r8, r5
   1a674:	ldr	r3, [r0, r2]
   1a678:	ldr	r0, [sp, #16]
   1a67c:	adds	r5, r4, #8
   1a680:	adc	r9, r0, #0
   1a684:	cmn	r3, #1
   1a688:	stm	r1, {r5, r9}
   1a68c:	beq	1a828 <next@@Base+0x2610>
   1a690:	lsr	r0, r3, #1
   1a694:	mov	r7, ip
   1a698:	cmp	r0, ip
   1a69c:	bne	1a828 <next@@Base+0x2610>
   1a6a0:	lsl	r0, r7, #3
   1a6a4:	mov	r4, r2
   1a6a8:	bl	126ec <malloc@plt>
   1a6ac:	cmp	r7, #0
   1a6b0:	beq	1a850 <next@@Base+0x2638>
   1a6b4:	str	r0, [sp, #12]
   1a6b8:	str	r7, [sp, #24]
   1a6bc:	ldr	r2, [sp, #20]
   1a6c0:	ldr	r3, [r2, r5]!
   1a6c4:	adds	r5, r5, #8
   1a6c8:	ldr	r2, [r2, #4]
   1a6cc:	str	r3, [r0]
   1a6d0:	adc	r9, r9, #0
   1a6d4:	str	r2, [r0, #4]
   1a6d8:	add	r0, r0, #8
   1a6dc:	subs	r7, r7, #1
   1a6e0:	bne	1a6bc <next@@Base+0x24a4>
   1a6e4:	ldr	lr, [pc, #1260]	; 1abd8 <next@@Base+0x29c0>
   1a6e8:	add	lr, pc, lr
   1a6ec:	stm	lr, {r5, r9}
   1a6f0:	ldr	ip, [pc, #1252]	; 1abdc <next@@Base+0x29c4>
   1a6f4:	mov	r1, lr
   1a6f8:	ldr	r0, [sp, #12]
   1a6fc:	add	ip, pc, ip
   1a700:	mov	r6, ip
   1a704:	ldr	ip, [sp, #24]
   1a708:	b	1a86c <next@@Base+0x2654>
   1a70c:	str	r3, [sp, #16]
   1a710:	ldr	r3, [pc, #1232]	; 1abe8 <next@@Base+0x29d0>
   1a714:	mov	lr, r5
   1a718:	mov	r7, ip
   1a71c:	lsr	ip, r5, #16
   1a720:	ldr	r3, [pc, r3]
   1a724:	lsr	r1, r5, #8
   1a728:	str	r3, [sp, #20]
   1a72c:	strb	lr, [r3, r4]!
   1a730:	lsr	r0, lr, #24
   1a734:	strb	r1, [r3, #1]
   1a738:	strb	r0, [r3, #3]
   1a73c:	strb	ip, [r3, #2]
   1a740:	ldr	lr, [pc, #1188]	; 1abec <next@@Base+0x29d4>
   1a744:	lsl	r5, r7, #1
   1a748:	add	lr, pc, lr
   1a74c:	mov	r1, r8
   1a750:	mov	r8, r5
   1a754:	str	r9, [lr]
   1a758:	str	r2, [lr, #4]
   1a75c:	mov	r5, r2
   1a760:	str	r8, [sp, #24]
   1a764:	mov	r8, r1
   1a768:	ldr	r0, [sp, #16]
   1a76c:	ldr	r2, [r8, #4]
   1a770:	ldr	r3, [pc, #1164]	; 1ac04 <next@@Base+0x29ec>
   1a774:	adds	ip, r4, #8
   1a778:	adc	r1, r0, #0
   1a77c:	mov	r0, #0
   1a780:	ldr	r3, [pc, r3]
   1a784:	subs	r3, r3, ip
   1a788:	sbcs	r1, r2, r1
   1a78c:	bcs	1a804 <next@@Base+0x25ec>
   1a790:	ldr	r5, [pc, #1136]	; 1ac08 <next@@Base+0x29f0>
   1a794:	mov	r0, #3
   1a798:	ldr	r1, [sp, #16]
   1a79c:	orr	r0, r0, #131072	; 0x20000
   1a7a0:	adds	r0, r0, r4
   1a7a4:	adc	r1, r1, #0
   1a7a8:	adds	r0, r0, #4
   1a7ac:	adc	r1, r1, #0
   1a7b0:	mvn	r2, #0
   1a7b4:	and	r9, r1, r2
   1a7b8:	mov	r1, #16646144	; 0xfe0000
   1a7bc:	orr	r1, r1, #-16777216	; 0xff000000
   1a7c0:	and	r4, r0, r1
   1a7c4:	ldr	r0, [sp, #20]
   1a7c8:	mov	r1, r4
   1a7cc:	add	r5, pc, r5
   1a7d0:	bl	126bc <realloc@plt>
   1a7d4:	ldr	ip, [pc, #1072]	; 1ac0c <next@@Base+0x29f4>
   1a7d8:	ldr	lr, [pc, #1072]	; 1ac10 <next@@Base+0x29f8>
   1a7dc:	stm	r8, {r4, r9}
   1a7e0:	add	lr, pc, lr
   1a7e4:	str	r0, [r5]
   1a7e8:	str	r0, [sp, #20]
   1a7ec:	ldr	r5, [lr, #4]
   1a7f0:	ldr	r9, [pc, #1052]	; 1ac14 <next@@Base+0x29fc>
   1a7f4:	add	ip, pc, ip
   1a7f8:	mov	r6, ip
   1a7fc:	mov	r0, #0
   1a800:	ldr	r9, [pc, r9]
   1a804:	ldr	r8, [sp, #24]
   1a808:	b	1a8c4 <next@@Base+0x26ac>
   1a80c:	mov	r3, r2
   1a810:	ldr	r2, [sp, #16]
   1a814:	mov	r0, #0
   1a818:	b	1a884 <next@@Base+0x266c>
   1a81c:	ldr	r1, [pc, #924]	; 1abc0 <next@@Base+0x29a8>
   1a820:	add	r1, pc, r1
   1a824:	b	1a830 <next@@Base+0x2618>
   1a828:	ldr	r1, [pc, #924]	; 1abcc <next@@Base+0x29b4>
   1a82c:	add	r1, pc, r1
   1a830:	ldr	r0, [pc, #908]	; 1abc4 <next@@Base+0x29ac>
   1a834:	ldr	r0, [pc, r0]
   1a838:	ldr	r0, [r0]
   1a83c:	ldr	r2, [pc, #900]	; 1abc8 <next@@Base+0x29b0>
   1a840:	ldr	r2, [pc, r2]
   1a844:	sub	sp, fp, #28
   1a848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a84c:	b	1274c <fprintf@plt>
   1a850:	ldr	lr, [pc, #888]	; 1abd0 <next@@Base+0x29b8>
   1a854:	ldr	ip, [pc, #888]	; 1abd4 <next@@Base+0x29bc>
   1a858:	add	lr, pc, lr
   1a85c:	add	ip, pc, ip
   1a860:	mov	r6, ip
   1a864:	mov	r1, lr
   1a868:	mov	ip, r7
   1a86c:	mov	r3, r4
   1a870:	ldr	r7, [sp, #8]
   1a874:	ldr	r4, [sp, #4]
   1a878:	ldr	r2, [sp, #16]
   1a87c:	mov	r9, #0
   1a880:	mov	r5, r8
   1a884:	mov	lr, r1
   1a888:	mov	r1, #1
   1a88c:	str	r4, [lr]
   1a890:	str	r2, [lr, #4]
   1a894:	ldr	r2, [sp, #20]
   1a898:	lsl	r8, ip, #1
   1a89c:	strb	r5, [r2, r4]!
   1a8a0:	mov	r5, r7
   1a8a4:	strb	r1, [r2, #3]
   1a8a8:	mov	r1, #161	; 0xa1
   1a8ac:	strb	r9, [r2, #1]
   1a8b0:	mov	r9, r3
   1a8b4:	strb	r1, [r2, #2]
   1a8b8:	str	r9, [lr]
   1a8bc:	str	r7, [lr, #4]
   1a8c0:	mov	r7, ip
   1a8c4:	ldr	r3, [sp, #20]
   1a8c8:	lsr	r1, r8, #16
   1a8cc:	mov	ip, r3
   1a8d0:	strb	r8, [r3, r9]!
   1a8d4:	lsr	r4, r8, #24
   1a8d8:	lsr	r2, r8, #8
   1a8dc:	adds	r8, r9, #4
   1a8e0:	strb	r1, [r3, #2]
   1a8e4:	adc	r1, r5, #0
   1a8e8:	cmp	r7, #0
   1a8ec:	strb	r4, [r3, #3]
   1a8f0:	strb	r2, [r3, #1]
   1a8f4:	str	r8, [lr]
   1a8f8:	str	r1, [lr, #4]
   1a8fc:	str	r7, [sp, #24]
   1a900:	beq	1aba0 <next@@Base+0x2988>
   1a904:	ldr	r7, [pc, #780]	; 1ac18 <next@@Base+0x2a00>
   1a908:	mov	r4, lr
   1a90c:	mov	r2, r0
   1a910:	add	r7, pc, r7
   1a914:	str	r0, [sp, #12]
   1a918:	b	1a9b4 <next@@Base+0x279c>
   1a91c:	mov	r7, ip
   1a920:	lsr	r2, r4, #24
   1a924:	strb	r4, [r7, r8]!
   1a928:	mov	lr, r6
   1a92c:	lsr	r9, r4, #16
   1a930:	lsr	r6, r4, #8
   1a934:	strb	r2, [r7, #3]
   1a938:	adds	r2, r8, #4
   1a93c:	mov	r4, r0
   1a940:	strb	r9, [r7, #2]
   1a944:	mov	r3, ip
   1a948:	strb	r6, [r7, #1]
   1a94c:	adc	r9, r1, #0
   1a950:	stm	r4, {r2, r9}
   1a954:	mov	ip, r3
   1a958:	lsr	r1, r5, #16
   1a95c:	strb	r5, [r3, r2]!
   1a960:	lsr	r0, r5, #24
   1a964:	lsr	r7, r5, #8
   1a968:	adds	r8, r2, #4
   1a96c:	strb	r1, [r3, #2]
   1a970:	adc	r1, r9, #0
   1a974:	strb	r0, [r3, #3]
   1a978:	strb	r7, [r3, #1]
   1a97c:	str	r8, [r4]
   1a980:	str	r1, [r4, #4]
   1a984:	ldr	r0, [sp, #24]
   1a988:	ldr	r2, [sp, #16]
   1a98c:	mov	r6, lr
   1a990:	subs	r0, r0, #1
   1a994:	str	r0, [sp, #24]
   1a998:	ldr	sl, [sp, #20]
   1a99c:	ldr	r0, [sp, #12]
   1a9a0:	ldr	r7, [pc, #676]	; 1ac4c <next@@Base+0x2a34>
   1a9a4:	add	r2, r2, #8
   1a9a8:	add	sl, sl, #8
   1a9ac:	add	r7, pc, r7
   1a9b0:	beq	1aba0 <next@@Base+0x2988>
   1a9b4:	cmp	r0, #0
   1a9b8:	mov	r0, r4
   1a9bc:	str	r2, [sp, #16]
   1a9c0:	beq	1a9cc <next@@Base+0x27b4>
   1a9c4:	ldrd	r2, [r2]
   1a9c8:	b	1a9d4 <next@@Base+0x27bc>
   1a9cc:	mov	r2, #0
   1a9d0:	mov	r3, #0
   1a9d4:	ldrd	r4, [sl]
   1a9d8:	adds	r4, r4, r2
   1a9dc:	adc	r5, r5, r3
   1a9e0:	strd	r4, [sl]
   1a9e4:	ldrb	r2, [r6]
   1a9e8:	str	sl, [sp, #20]
   1a9ec:	cmp	r2, #0
   1a9f0:	beq	1a91c <next@@Base+0x2704>
   1a9f4:	ldr	r3, [r7, #4]
   1a9f8:	ldr	r6, [pc, #540]	; 1ac1c <next@@Base+0x2a04>
   1a9fc:	adds	r2, r8, #4
   1aa00:	adc	r9, r1, #0
   1aa04:	ldr	r6, [pc, r6]
   1aa08:	subs	r2, r6, r2
   1aa0c:	sbcs	r2, r3, r9
   1aa10:	bcs	1aabc <next@@Base+0x28a4>
   1aa14:	mov	r2, #3
   1aa18:	orr	r2, r2, #131072	; 0x20000
   1aa1c:	adds	r0, r8, r2
   1aa20:	adc	r1, r1, #0
   1aa24:	mvn	r2, #0
   1aa28:	and	r8, r1, r2
   1aa2c:	mov	r1, #16646144	; 0xfe0000
   1aa30:	orr	r1, r1, #-16777216	; 0xff000000
   1aa34:	and	r6, r0, r1
   1aa38:	mov	r0, ip
   1aa3c:	mov	r1, r6
   1aa40:	bl	126bc <realloc@plt>
   1aa44:	ldr	ip, [pc, #468]	; 1ac20 <next@@Base+0x2a08>
   1aa48:	ldr	lr, [pc, #468]	; 1ac24 <next@@Base+0x2a0c>
   1aa4c:	stm	r7, {r6, r8}
   1aa50:	mov	r3, r0
   1aa54:	ldr	r0, [pc, #460]	; 1ac28 <next@@Base+0x2a10>
   1aa58:	add	lr, pc, lr
   1aa5c:	mov	r9, lr
   1aa60:	add	r0, pc, r0
   1aa64:	add	ip, pc, ip
   1aa68:	str	r3, [r0]
   1aa6c:	mov	lr, ip
   1aa70:	ldrb	ip, [ip]
   1aa74:	ldr	r1, [r9, #4]
   1aa78:	ldr	r8, [pc, #428]	; 1ac2c <next@@Base+0x2a14>
   1aa7c:	mov	r7, r3
   1aa80:	lsr	r2, r4, #24
   1aa84:	ldr	r8, [pc, r8]
   1aa88:	lsr	r6, r4, #16
   1aa8c:	strb	r4, [r7, r8]!
   1aa90:	strb	r2, [r7, #3]
   1aa94:	lsr	r2, r4, #8
   1aa98:	strb	r2, [r7, #1]
   1aa9c:	adds	r2, r8, #4
   1aaa0:	mov	r4, r9
   1aaa4:	adc	r9, r1, #0
   1aaa8:	cmp	ip, #1
   1aaac:	strb	r6, [r7, #2]
   1aab0:	stm	r4, {r2, r9}
   1aab4:	bne	1a954 <next@@Base+0x273c>
   1aab8:	b	1aaf0 <next@@Base+0x28d8>
   1aabc:	mov	r6, ip
   1aac0:	lsr	r2, r4, #24
   1aac4:	strb	r4, [r6, r8]!
   1aac8:	lsr	r9, r4, #16
   1aacc:	lsr	r7, r4, #8
   1aad0:	strb	r2, [r6, #3]
   1aad4:	adds	r2, r8, #4
   1aad8:	mov	r4, r0
   1aadc:	strb	r9, [r6, #2]
   1aae0:	mov	r3, ip
   1aae4:	strb	r7, [r6, #1]
   1aae8:	adc	r9, r1, #0
   1aaec:	stm	r4, {r2, r9}
   1aaf0:	ldr	lr, [pc, #312]	; 1ac30 <next@@Base+0x2a18>
   1aaf4:	mov	r0, r4
   1aaf8:	adds	r7, r8, #8
   1aafc:	add	lr, pc, lr
   1ab00:	adc	ip, r1, #0
   1ab04:	ldr	r4, [lr, #4]
   1ab08:	ldr	r6, [pc, #292]	; 1ac34 <next@@Base+0x2a1c>
   1ab0c:	ldr	r6, [pc, r6]
   1ab10:	subs	r7, r6, r7
   1ab14:	sbcs	r7, r4, ip
   1ab18:	bcs	1ab90 <next@@Base+0x2978>
   1ab1c:	mov	r2, #3
   1ab20:	orr	r2, r2, #131072	; 0x20000
   1ab24:	adds	r0, r2, r8
   1ab28:	adc	r1, r1, #0
   1ab2c:	adds	r0, r0, #4
   1ab30:	adc	r1, r1, #0
   1ab34:	mvn	r2, #0
   1ab38:	and	r7, r1, r2
   1ab3c:	mov	r1, #16646144	; 0xfe0000
   1ab40:	orr	r1, r1, #-16777216	; 0xff000000
   1ab44:	and	r6, r0, r1
   1ab48:	mov	r0, r3
   1ab4c:	mov	r1, r6
   1ab50:	mov	r8, lr
   1ab54:	bl	126bc <realloc@plt>
   1ab58:	ldr	lr, [pc, #220]	; 1ac3c <next@@Base+0x2a24>
   1ab5c:	strd	r6, [r8]
   1ab60:	mov	r3, r0
   1ab64:	add	lr, pc, lr
   1ab68:	mov	r4, lr
   1ab6c:	ldr	r9, [lr, #4]
   1ab70:	ldr	r0, [pc, #200]	; 1ac40 <next@@Base+0x2a28>
   1ab74:	add	r0, pc, r0
   1ab78:	str	r3, [r0]
   1ab7c:	ldr	r2, [pc, #192]	; 1ac44 <next@@Base+0x2a2c>
   1ab80:	ldr	r2, [pc, r2]
   1ab84:	ldr	lr, [pc, #188]	; 1ac48 <next@@Base+0x2a30>
   1ab88:	add	lr, pc, lr
   1ab8c:	b	1a954 <next@@Base+0x273c>
   1ab90:	ldr	lr, [pc, #160]	; 1ac38 <next@@Base+0x2a20>
   1ab94:	mov	r4, r0
   1ab98:	add	lr, pc, lr
   1ab9c:	b	1a954 <next@@Base+0x273c>
   1aba0:	sub	sp, fp, #28
   1aba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aba8:	b	1265c <free@plt>
   1abac:	andeq	r5, r1, r4, lsr r2
   1abb0:	andeq	r5, r1, r0, lsr r2
   1abb4:	andeq	r5, r1, r4, lsr #4
   1abb8:	andeq	r5, r1, r8, lsl #4
   1abbc:	andeq	r5, r1, r0, lsl #2
   1abc0:	andeq	r3, r0, r8, asr #7
   1abc4:	andeq	r3, r1, r4, lsl #17
   1abc8:	andeq	r4, r1, r8, asr #29
   1abcc:	andeq	r3, r0, r6, lsl #8
   1abd0:	andeq	r4, r1, r8, asr #29
   1abd4:			; <UNDEFINED> instruction: 0x00014eb0
   1abd8:	andeq	r5, r1, r8, lsr r0
   1abdc:	andeq	r5, r1, r0, lsl r0
   1abe0:	strdeq	r5, [r1], -r8
   1abe4:	andeq	r5, r1, r4, ror #3
   1abe8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1abec:	ldrdeq	r4, [r1], -r8
   1abf0:	andeq	r5, r1, r0, lsr #3
   1abf4:	andeq	r5, r1, r0, lsl #3
   1abf8:	muleq	r1, r0, r1
   1abfc:	andeq	r5, r1, r0, lsl #3
   1ac00:	andeq	r5, r1, r8, ror #2
   1ac04:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1ac08:	andeq	r4, r1, r8, asr #30
   1ac0c:	andeq	r4, r1, r8, lsl pc
   1ac10:	andeq	r4, r1, r0, asr #30
   1ac14:	andeq	r4, r1, r0, lsr #30
   1ac18:	andeq	r4, r1, r8, lsl #28
   1ac1c:	andeq	r4, r1, r4, lsl sp
   1ac20:	andeq	r4, r1, r8, lsr #25
   1ac24:	andeq	r4, r1, r8, asr #25
   1ac28:			; <UNDEFINED> instruction: 0x00014cb4
   1ac2c:	muleq	r1, ip, ip
   1ac30:	andeq	r4, r1, ip, lsl ip
   1ac34:	andeq	r4, r1, ip, lsl #24
   1ac38:	andeq	r4, r1, r4, ror fp
   1ac3c:			; <UNDEFINED> instruction: 0x00014bbc
   1ac40:	andeq	r4, r1, r0, lsr #23
   1ac44:	andeq	r4, r1, r0, lsr #23
   1ac48:	andeq	r4, r1, r4, lsl #23
   1ac4c:	andeq	r4, r1, ip, ror #26
   1ac50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac54:	add	fp, sp, #28
   1ac58:	sub	sp, sp, #4
   1ac5c:	ldr	r0, [pc, #3180]	; 1b8d0 <next@@Base+0x36b8>
   1ac60:	ldr	r0, [pc, r0]
   1ac64:	cmp	r0, #0
   1ac68:	beq	1b2c4 <next@@Base+0x30ac>
   1ac6c:	ldr	sl, [pc, #3168]	; 1b8d4 <next@@Base+0x36bc>
   1ac70:	add	sl, pc, sl
   1ac74:	ldr	r6, [sl, #4]
   1ac78:	ldr	r5, [pc, #3160]	; 1b8d8 <next@@Base+0x36c0>
   1ac7c:	ldr	r5, [pc, r5]
   1ac80:	ldr	r8, [pc, #3156]	; 1b8dc <next@@Base+0x36c4>
   1ac84:	add	r8, pc, r8
   1ac88:	ldrb	r0, [r8]
   1ac8c:	cmp	r0, #0
   1ac90:	beq	1ad54 <next@@Base+0x2b3c>
   1ac94:	ldr	r9, [pc, #3164]	; 1b8f8 <next@@Base+0x36e0>
   1ac98:	adds	r2, r5, #4
   1ac9c:	adc	ip, r6, #0
   1aca0:	add	r9, pc, r9
   1aca4:	ldr	r0, [r9, #4]
   1aca8:	ldr	r3, [pc, #3148]	; 1b8fc <next@@Base+0x36e4>
   1acac:	ldr	r3, [pc, r3]
   1acb0:	subs	r3, r3, r2
   1acb4:	sbcs	r0, r0, ip
   1acb8:	bcs	1ada8 <next@@Base+0x2b90>
   1acbc:	mov	r0, #7
   1acc0:	orr	r0, r0, #131072	; 0x20000
   1acc4:	adds	r0, r0, r5
   1acc8:	adc	r1, r6, #0
   1accc:	subs	r0, r0, #4
   1acd0:	sbc	r1, r1, #0
   1acd4:	mvn	r2, #0
   1acd8:	and	r5, r1, r2
   1acdc:	mov	r1, #16646144	; 0xfe0000
   1ace0:	orr	r1, r1, #-16777216	; 0xff000000
   1ace4:	ldr	r4, [pc, #3096]	; 1b904 <next@@Base+0x36ec>
   1ace8:	and	r6, r0, r1
   1acec:	ldr	r0, [pc, #3092]	; 1b908 <next@@Base+0x36f0>
   1acf0:	mov	r1, r6
   1acf4:	add	r4, pc, r4
   1acf8:	ldr	r0, [pc, r0]
   1acfc:	bl	126bc <realloc@plt>
   1ad00:	str	r6, [r9]
   1ad04:	str	r5, [r9, #4]
   1ad08:	str	r0, [r4]
   1ad0c:	ldrb	r3, [r8]
   1ad10:	ldr	r6, [sl, #4]
   1ad14:	ldr	r5, [pc, #3056]	; 1b90c <next@@Base+0x36f4>
   1ad18:	mov	r2, r0
   1ad1c:	mov	r1, #0
   1ad20:	mov	r7, #161	; 0xa1
   1ad24:	ldr	r5, [pc, r5]
   1ad28:	strb	r1, [r2, r5]!
   1ad2c:	strb	r7, [r2, #3]
   1ad30:	strb	r1, [r2, #2]
   1ad34:	strb	r1, [r2, #1]
   1ad38:	adds	r2, r5, #4
   1ad3c:	adc	ip, r6, #0
   1ad40:	mov	r7, #1
   1ad44:	cmp	r3, #1
   1ad48:	stm	sl, {r2, ip}
   1ad4c:	beq	1add0 <next@@Base+0x2bb8>
   1ad50:	b	1afa8 <next@@Base+0x2d90>
   1ad54:	ldr	r0, [pc, #2948]	; 1b8e0 <next@@Base+0x36c8>
   1ad58:	ldr	r0, [pc, r0]
   1ad5c:	mov	r1, r0
   1ad60:	ldrb	r2, [r1, r5]!
   1ad64:	ldrb	r3, [r1, #1]
   1ad68:	ldrb	r7, [r1, #2]
   1ad6c:	ldrb	r1, [r1, #3]
   1ad70:	orr	r2, r2, r3, lsl #8
   1ad74:	orr	r2, r2, r7, lsl #16
   1ad78:	orr	r3, r2, r1, lsl #24
   1ad7c:	adds	r2, r5, #4
   1ad80:	adc	ip, r6, #0
   1ad84:	cmp	r3, #-1593835520	; 0xa1000000
   1ad88:	stm	sl, {r2, ip}
   1ad8c:	beq	1af48 <next@@Base+0x2d30>
   1ad90:	mov	r7, #1
   1ad94:	cmn	r3, #1
   1ad98:	beq	1af88 <next@@Base+0x2d70>
   1ad9c:	ldr	r1, [pc, #2880]	; 1b8e4 <next@@Base+0x36cc>
   1ada0:	add	r1, pc, r1
   1ada4:	b	1b688 <next@@Base+0x3470>
   1ada8:	ldr	r0, [pc, #2896]	; 1b900 <next@@Base+0x36e8>
   1adac:	mov	r3, #0
   1adb0:	mov	r4, #161	; 0xa1
   1adb4:	ldr	r0, [pc, r0]
   1adb8:	mov	r7, r0
   1adbc:	strb	r3, [r7, r5]!
   1adc0:	strb	r4, [r7, #3]
   1adc4:	strb	r3, [r7, #2]
   1adc8:	strb	r3, [r7, #1]
   1adcc:	stm	sl, {r2, ip}
   1add0:	ldr	r4, [r9, #4]
   1add4:	ldr	r1, [pc, #2868]	; 1b910 <next@@Base+0x36f8>
   1add8:	adds	r3, r5, #8
   1addc:	adc	r7, r6, #0
   1ade0:	ldr	r1, [pc, r1]
   1ade4:	subs	r1, r1, r3
   1ade8:	sbcs	r1, r4, r7
   1adec:	bcs	1ae78 <next@@Base+0x2c60>
   1adf0:	mov	r1, #7
   1adf4:	orr	r1, r1, #131072	; 0x20000
   1adf8:	adds	r1, r5, r1
   1adfc:	adc	r2, r6, #0
   1ae00:	mvn	r3, #0
   1ae04:	and	r5, r2, r3
   1ae08:	mov	r2, #16646144	; 0xfe0000
   1ae0c:	orr	r2, r2, #-16777216	; 0xff000000
   1ae10:	ldr	r4, [pc, #2812]	; 1b914 <next@@Base+0x36fc>
   1ae14:	and	r6, r1, r2
   1ae18:	mov	r1, r6
   1ae1c:	add	r4, pc, r4
   1ae20:	bl	126bc <realloc@plt>
   1ae24:	str	r6, [r9]
   1ae28:	str	r5, [r9, #4]
   1ae2c:	str	r0, [r4]
   1ae30:	ldrb	r1, [r8]
   1ae34:	ldr	ip, [sl, #4]
   1ae38:	ldr	r2, [pc, #2776]	; 1b918 <next@@Base+0x3700>
   1ae3c:	mov	r7, r0
   1ae40:	mov	r3, #9
   1ae44:	ldr	r2, [pc, r2]
   1ae48:	strb	r3, [r7, r2]!
   1ae4c:	mov	r3, #0
   1ae50:	strb	r3, [r7, #3]
   1ae54:	strb	r3, [r7, #2]
   1ae58:	strb	r3, [r7, #1]
   1ae5c:	adds	r3, r2, #4
   1ae60:	adc	r5, ip, #0
   1ae64:	mov	r7, #1
   1ae68:	cmp	r1, #1
   1ae6c:	stm	sl, {r3, r5}
   1ae70:	beq	1aea0 <next@@Base+0x2c88>
   1ae74:	b	1afd0 <next@@Base+0x2db8>
   1ae78:	mov	r3, r0
   1ae7c:	mov	r1, #9
   1ae80:	strb	r1, [r3, r2]!
   1ae84:	mov	r1, #0
   1ae88:	strb	r1, [r3, #3]
   1ae8c:	strb	r1, [r3, #2]
   1ae90:	strb	r1, [r3, #1]
   1ae94:	adds	r3, r2, #4
   1ae98:	adc	r5, ip, #0
   1ae9c:	stm	sl, {r3, r5}
   1aea0:	ldr	r6, [r9, #4]
   1aea4:	ldr	r4, [pc, #2672]	; 1b91c <next@@Base+0x3704>
   1aea8:	adds	r1, r2, #8
   1aeac:	adc	r7, ip, #0
   1aeb0:	ldr	r4, [pc, r4]
   1aeb4:	subs	r1, r4, r1
   1aeb8:	sbcs	r1, r6, r7
   1aebc:	bcs	1b394 <next@@Base+0x317c>
   1aec0:	mov	r1, #7
   1aec4:	orr	r1, r1, #131072	; 0x20000
   1aec8:	adds	r1, r2, r1
   1aecc:	adc	r2, ip, #0
   1aed0:	mvn	r3, #0
   1aed4:	and	r5, r2, r3
   1aed8:	mov	r2, #16646144	; 0xfe0000
   1aedc:	orr	r2, r2, #-16777216	; 0xff000000
   1aee0:	ldr	r4, [pc, #2616]	; 1b920 <next@@Base+0x3708>
   1aee4:	and	r6, r1, r2
   1aee8:	mov	r1, r6
   1aeec:	add	r4, pc, r4
   1aef0:	bl	126bc <realloc@plt>
   1aef4:	str	r6, [r9]
   1aef8:	str	r5, [r9, #4]
   1aefc:	str	r0, [r4]
   1af00:	ldrb	r2, [r8]
   1af04:	ldr	r5, [sl, #4]
   1af08:	ldr	r3, [pc, #2580]	; 1b924 <next@@Base+0x370c>
   1af0c:	mov	r7, r0
   1af10:	mov	r1, #0
   1af14:	ldr	r3, [pc, r3]
   1af18:	adds	r6, r3, #4
   1af1c:	strb	r1, [r7, r3]!
   1af20:	str	r6, [sl]
   1af24:	strb	r1, [r7, #3]
   1af28:	strb	r1, [r7, #2]
   1af2c:	strb	r1, [r7, #1]
   1af30:	adc	r1, r5, #0
   1af34:	mov	r7, #1
   1af38:	cmp	r2, #1
   1af3c:	str	r1, [sl, #4]
   1af40:	bne	1aff8 <next@@Base+0x2de0>
   1af44:	b	1b3bc <next@@Base+0x31a4>
   1af48:	ldr	r3, [r0, r2]
   1af4c:	adds	r4, r5, #8
   1af50:	adc	r7, r6, #0
   1af54:	cmp	r3, #9
   1af58:	stm	sl, {r4, r7}
   1af5c:	bne	1b680 <next@@Base+0x3468>
   1af60:	ldr	r3, [pc, #2444]	; 1b8f4 <next@@Base+0x36dc>
   1af64:	adds	r4, r5, #20
   1af68:	adc	r7, r6, #0
   1af6c:	add	r3, pc, r3
   1af70:	add	r6, r5, r0
   1af74:	ldrb	r3, [r3]
   1af78:	ldr	r6, [r6, #16]
   1af7c:	stm	sl, {r4, r7}
   1af80:	eor	r3, r3, #1
   1af84:	add	r7, r6, r3
   1af88:	mov	r6, r0
   1af8c:	mov	r3, #0
   1af90:	strb	r3, [r6, r5]!
   1af94:	mov	r5, #161	; 0xa1
   1af98:	strb	r5, [r6, #3]
   1af9c:	strb	r3, [r6, #2]
   1afa0:	strb	r3, [r6, #1]
   1afa4:	stm	sl, {r2, ip}
   1afa8:	mov	r3, r0
   1afac:	mov	r1, #9
   1afb0:	strb	r1, [r3, r2]!
   1afb4:	mov	r1, #0
   1afb8:	strb	r1, [r3, #3]
   1afbc:	strb	r1, [r3, #2]
   1afc0:	strb	r1, [r3, #1]
   1afc4:	adds	r3, r2, #4
   1afc8:	adc	r5, ip, #0
   1afcc:	stm	sl, {r3, r5}
   1afd0:	mov	r2, r0
   1afd4:	mov	r1, #0
   1afd8:	strb	r1, [r2, r3]!
   1afdc:	adds	r6, r3, #4
   1afe0:	strb	r1, [r2, #3]
   1afe4:	strb	r1, [r2, #2]
   1afe8:	strb	r1, [r2, #1]
   1afec:	adc	r1, r5, #0
   1aff0:	str	r6, [sl]
   1aff4:	str	r1, [sl, #4]
   1aff8:	mov	r3, r0
   1affc:	mov	r2, #0
   1b000:	strb	r2, [r3, r6]!
   1b004:	strb	r2, [r3, #3]
   1b008:	strb	r2, [r3, #2]
   1b00c:	strb	r2, [r3, #1]
   1b010:	adds	r2, r6, #4
   1b014:	adc	r3, r1, #0
   1b018:	strd	r2, [sl]
   1b01c:	lsr	r1, r7, #24
   1b020:	strb	r7, [r0, r2]!
   1b024:	lsr	r6, r7, #16
   1b028:	lsr	r5, r7, #8
   1b02c:	strb	r1, [r0, #3]
   1b030:	strb	r6, [r0, #2]
   1b034:	strb	r5, [r0, #1]
   1b038:	ldrb	r0, [r8]
   1b03c:	adds	r4, r2, #4
   1b040:	adc	r5, r3, #0
   1b044:	cmp	r0, #0
   1b048:	strd	r4, [sl]
   1b04c:	beq	1b100 <next@@Base+0x2ee8>
   1b050:	ldr	r9, [pc, #2284]	; 1b944 <next@@Base+0x372c>
   1b054:	adds	r0, r2, #8
   1b058:	adc	r1, r3, #0
   1b05c:	add	r9, pc, r9
   1b060:	ldr	r7, [r9, #4]
   1b064:	ldr	r6, [pc, #2268]	; 1b948 <next@@Base+0x3730>
   1b068:	ldr	r6, [pc, r6]
   1b06c:	subs	r0, r6, r0
   1b070:	sbcs	r0, r7, r1
   1b074:	bcs	1b2cc <next@@Base+0x30b4>
   1b078:	mov	r0, #7
   1b07c:	orr	r0, r0, #131072	; 0x20000
   1b080:	adds	r0, r2, r0
   1b084:	adc	r1, r3, #0
   1b088:	mvn	r2, #0
   1b08c:	and	r5, r1, r2
   1b090:	mov	r1, #16646144	; 0xfe0000
   1b094:	orr	r1, r1, #-16777216	; 0xff000000
   1b098:	ldr	r4, [pc, #2268]	; 1b97c <next@@Base+0x3764>
   1b09c:	and	r6, r0, r1
   1b0a0:	ldr	r0, [pc, #2264]	; 1b980 <next@@Base+0x3768>
   1b0a4:	mov	r1, r6
   1b0a8:	add	r4, pc, r4
   1b0ac:	ldr	r0, [pc, r0]
   1b0b0:	bl	126bc <realloc@plt>
   1b0b4:	str	r6, [r9]
   1b0b8:	str	r5, [r9, #4]
   1b0bc:	str	r0, [r4]
   1b0c0:	ldrb	r1, [r8]
   1b0c4:	ldr	r5, [sl, #4]
   1b0c8:	ldr	r4, [pc, #2228]	; 1b984 <next@@Base+0x376c>
   1b0cc:	mov	r3, r0
   1b0d0:	mov	r2, #0
   1b0d4:	ldr	r4, [pc, r4]
   1b0d8:	strb	r2, [r3, r4]!
   1b0dc:	strb	r2, [r3, #3]
   1b0e0:	strb	r2, [r3, #2]
   1b0e4:	strb	r2, [r3, #1]
   1b0e8:	adds	r2, r4, #4
   1b0ec:	adc	r3, r5, #0
   1b0f0:	cmp	r1, #0
   1b0f4:	strd	r2, [sl]
   1b0f8:	beq	1b12c <next@@Base+0x2f14>
   1b0fc:	b	1b2f8 <next@@Base+0x30e0>
   1b100:	ldr	r0, [pc, #2104]	; 1b940 <next@@Base+0x3728>
   1b104:	adds	r2, r2, #8
   1b108:	mov	r1, #0
   1b10c:	adc	r3, r3, #0
   1b110:	ldr	r0, [pc, r0]
   1b114:	mov	r7, r0
   1b118:	strb	r1, [r7, r4]!
   1b11c:	strb	r1, [r7, #3]
   1b120:	strb	r1, [r7, #2]
   1b124:	strb	r1, [r7, #1]
   1b128:	strd	r2, [sl]
   1b12c:	mov	r7, r0
   1b130:	mov	r1, #0
   1b134:	strb	r1, [r7, r2]!
   1b138:	strb	r1, [r7, #3]
   1b13c:	strb	r1, [r7, #2]
   1b140:	strb	r1, [r7, #1]
   1b144:	adds	r1, r2, #4
   1b148:	adc	r5, r3, #0
   1b14c:	stm	sl, {r1, r5}
   1b150:	mov	r3, r0
   1b154:	mov	r2, #0
   1b158:	strb	r2, [r3, r1]!
   1b15c:	strb	r2, [r3, #3]
   1b160:	strb	r2, [r3, #2]
   1b164:	strb	r2, [r3, #1]
   1b168:	adds	r2, r1, #4
   1b16c:	adc	r3, r5, #0
   1b170:	strd	r2, [sl]
   1b174:	mov	r7, r0
   1b178:	mov	r1, #0
   1b17c:	strb	r1, [r7, r2]!
   1b180:	strb	r1, [r7, #3]
   1b184:	strb	r1, [r7, #2]
   1b188:	strb	r1, [r7, #1]
   1b18c:	adds	r1, r2, #4
   1b190:	adc	r5, r3, #0
   1b194:	stm	sl, {r1, r5}
   1b198:	mov	r3, r0
   1b19c:	mov	r2, #0
   1b1a0:	strb	r2, [r3, r1]!
   1b1a4:	adds	r4, r1, #4
   1b1a8:	strb	r2, [r3, #3]
   1b1ac:	strb	r2, [r3, #2]
   1b1b0:	strb	r2, [r3, #1]
   1b1b4:	adc	r3, r5, #0
   1b1b8:	str	r4, [sl]
   1b1bc:	str	r3, [sl, #4]
   1b1c0:	mov	r2, r0
   1b1c4:	mov	r1, #0
   1b1c8:	strb	r1, [r2, r4]!
   1b1cc:	strb	r1, [r2, #3]
   1b1d0:	strb	r1, [r2, #2]
   1b1d4:	strb	r1, [r2, #1]
   1b1d8:	adds	r2, r4, #4
   1b1dc:	adc	r1, r3, #0
   1b1e0:	str	r2, [sl]
   1b1e4:	str	r1, [sl, #4]
   1b1e8:	mov	r3, r0
   1b1ec:	mov	r4, #0
   1b1f0:	strb	r4, [r3, r2]!
   1b1f4:	mov	r7, #163	; 0xa3
   1b1f8:	strb	r7, [r3, #3]
   1b1fc:	strb	r4, [r3, #2]
   1b200:	strb	r4, [r3, #1]
   1b204:	ldrb	r7, [r8]
   1b208:	adds	r6, r2, #4
   1b20c:	adc	r3, r1, #0
   1b210:	cmp	r7, #1
   1b214:	str	r6, [sl]
   1b218:	str	r3, [sl, #4]
   1b21c:	bne	1b290 <next@@Base+0x3078>
   1b220:	ldr	r8, [pc, #1852]	; 1b964 <next@@Base+0x374c>
   1b224:	adds	lr, r2, #8
   1b228:	adc	ip, r1, #0
   1b22c:	add	r8, pc, r8
   1b230:	ldr	r5, [r8, #4]
   1b234:	ldr	r7, [pc, #1836]	; 1b968 <next@@Base+0x3750>
   1b238:	ldr	r7, [pc, r7]
   1b23c:	subs	r7, r7, lr
   1b240:	sbcs	r7, r5, ip
   1b244:	bcs	1b290 <next@@Base+0x3078>
   1b248:	mov	r3, #7
   1b24c:	orr	r3, r3, #131072	; 0x20000
   1b250:	adds	r2, r2, r3
   1b254:	adc	r1, r1, #0
   1b258:	mvn	r3, #0
   1b25c:	and	r7, r1, r3
   1b260:	mov	r1, #16646144	; 0xfe0000
   1b264:	orr	r1, r1, #-16777216	; 0xff000000
   1b268:	ldr	r5, [pc, #1788]	; 1b96c <next@@Base+0x3754>
   1b26c:	and	r6, r2, r1
   1b270:	mov	r1, r6
   1b274:	add	r5, pc, r5
   1b278:	bl	126bc <realloc@plt>
   1b27c:	strd	r6, [r8]
   1b280:	str	r0, [r5]
   1b284:	ldr	r3, [sl, #4]
   1b288:	ldr	r6, [pc, #1760]	; 1b970 <next@@Base+0x3758>
   1b28c:	ldr	r6, [pc, r6]
   1b290:	ldr	r0, [pc, #1756]	; 1b974 <next@@Base+0x375c>
   1b294:	ldr	r1, [pc, #1756]	; 1b978 <next@@Base+0x3760>
   1b298:	adds	r2, r6, #4
   1b29c:	add	r0, pc, r0
   1b2a0:	adc	r3, r3, #0
   1b2a4:	ldr	r1, [pc, r1]
   1b2a8:	strb	r4, [r1, r6]!
   1b2ac:	strb	r4, [r1, #3]
   1b2b0:	strb	r4, [r1, #2]
   1b2b4:	strb	r4, [r1, #1]
   1b2b8:	mov	r1, #1
   1b2bc:	strd	r2, [sl]
   1b2c0:	strb	r1, [r0]
   1b2c4:	sub	sp, fp, #28
   1b2c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2cc:	ldr	r0, [pc, #1656]	; 1b94c <next@@Base+0x3734>
   1b2d0:	adds	r2, r2, #8
   1b2d4:	mov	r1, #0
   1b2d8:	adc	r3, r3, #0
   1b2dc:	ldr	r0, [pc, r0]
   1b2e0:	mov	r7, r0
   1b2e4:	strb	r1, [r7, r4]!
   1b2e8:	strb	r1, [r7, #3]
   1b2ec:	strb	r1, [r7, #2]
   1b2f0:	strb	r1, [r7, #1]
   1b2f4:	strd	r2, [sl]
   1b2f8:	ldr	r6, [r9, #4]
   1b2fc:	ldr	r1, [pc, #1668]	; 1b988 <next@@Base+0x3770>
   1b300:	adds	ip, r4, #8
   1b304:	adc	r7, r5, #0
   1b308:	ldr	r1, [pc, r1]
   1b30c:	subs	r1, r1, ip
   1b310:	sbcs	r1, r6, r7
   1b314:	bcs	1b460 <next@@Base+0x3248>
   1b318:	mov	r1, #7
   1b31c:	orr	r1, r1, #131072	; 0x20000
   1b320:	adds	r1, r4, r1
   1b324:	adc	r2, r5, #0
   1b328:	mvn	r3, #0
   1b32c:	and	r5, r2, r3
   1b330:	mov	r2, #16646144	; 0xfe0000
   1b334:	orr	r2, r2, #-16777216	; 0xff000000
   1b338:	ldr	r6, [pc, #1612]	; 1b98c <next@@Base+0x3774>
   1b33c:	and	r4, r1, r2
   1b340:	mov	r1, r4
   1b344:	add	r6, pc, r6
   1b348:	bl	126bc <realloc@plt>
   1b34c:	str	r0, [r6]
   1b350:	strd	r4, [r9]
   1b354:	ldrb	r7, [r8]
   1b358:	ldr	r3, [sl, #4]
   1b35c:	ldr	r2, [pc, #1580]	; 1b990 <next@@Base+0x3778>
   1b360:	mov	r6, r0
   1b364:	mov	r1, #0
   1b368:	ldr	r2, [pc, r2]
   1b36c:	strb	r1, [r6, r2]!
   1b370:	strb	r1, [r6, #3]
   1b374:	strb	r1, [r6, #2]
   1b378:	strb	r1, [r6, #1]
   1b37c:	adds	r1, r2, #4
   1b380:	adc	r5, r3, #0
   1b384:	cmp	r7, #1
   1b388:	stm	sl, {r1, r5}
   1b38c:	bne	1b150 <next@@Base+0x2f38>
   1b390:	b	1b484 <next@@Base+0x326c>
   1b394:	mov	r2, r0
   1b398:	mov	r1, #0
   1b39c:	strb	r1, [r2, r3]!
   1b3a0:	adds	r6, r3, #4
   1b3a4:	strb	r1, [r2, #3]
   1b3a8:	strb	r1, [r2, #2]
   1b3ac:	strb	r1, [r2, #1]
   1b3b0:	adc	r1, r5, #0
   1b3b4:	str	r6, [sl]
   1b3b8:	str	r1, [sl, #4]
   1b3bc:	ldr	r4, [r9, #4]
   1b3c0:	ldr	r2, [pc, #1376]	; 1b928 <next@@Base+0x3710>
   1b3c4:	adds	ip, r3, #8
   1b3c8:	adc	r7, r5, #0
   1b3cc:	ldr	r2, [pc, r2]
   1b3d0:	subs	r2, r2, ip
   1b3d4:	sbcs	r2, r4, r7
   1b3d8:	bcs	1b524 <next@@Base+0x330c>
   1b3dc:	mov	r1, #7
   1b3e0:	orr	r1, r1, #131072	; 0x20000
   1b3e4:	adds	r1, r3, r1
   1b3e8:	adc	r2, r5, #0
   1b3ec:	mvn	r3, #0
   1b3f0:	and	r5, r2, r3
   1b3f4:	mov	r2, #16646144	; 0xfe0000
   1b3f8:	orr	r2, r2, #-16777216	; 0xff000000
   1b3fc:	ldr	r4, [pc, #1320]	; 1b92c <next@@Base+0x3714>
   1b400:	and	r6, r1, r2
   1b404:	mov	r1, r6
   1b408:	add	r4, pc, r4
   1b40c:	bl	126bc <realloc@plt>
   1b410:	str	r6, [r9]
   1b414:	str	r5, [r9, #4]
   1b418:	str	r0, [r4]
   1b41c:	ldrb	r5, [r8]
   1b420:	ldr	r1, [sl, #4]
   1b424:	ldr	r6, [pc, #1284]	; 1b930 <next@@Base+0x3718>
   1b428:	mov	r3, r0
   1b42c:	mov	r2, #0
   1b430:	mov	r7, #1
   1b434:	ldr	r6, [pc, r6]
   1b438:	strb	r2, [r3, r6]!
   1b43c:	strb	r2, [r3, #3]
   1b440:	strb	r2, [r3, #2]
   1b444:	strb	r2, [r3, #1]
   1b448:	adds	r2, r6, #4
   1b44c:	adc	r3, r1, #0
   1b450:	cmp	r5, #1
   1b454:	strd	r2, [sl]
   1b458:	bne	1b01c <next@@Base+0x2e04>
   1b45c:	b	1b548 <next@@Base+0x3330>
   1b460:	mov	r7, r0
   1b464:	mov	r1, #0
   1b468:	strb	r1, [r7, r2]!
   1b46c:	strb	r1, [r7, #3]
   1b470:	strb	r1, [r7, #2]
   1b474:	strb	r1, [r7, #1]
   1b478:	adds	r1, r2, #4
   1b47c:	adc	r5, r3, #0
   1b480:	stm	sl, {r1, r5}
   1b484:	ldr	r4, [r9, #4]
   1b488:	ldr	r6, [pc, #1284]	; 1b994 <next@@Base+0x377c>
   1b48c:	adds	r7, r2, #8
   1b490:	adc	ip, r3, #0
   1b494:	ldr	r6, [pc, r6]
   1b498:	subs	r7, r6, r7
   1b49c:	sbcs	r7, r4, ip
   1b4a0:	bcs	1b5bc <next@@Base+0x33a4>
   1b4a4:	mov	r1, #7
   1b4a8:	orr	r1, r1, #131072	; 0x20000
   1b4ac:	adds	r1, r2, r1
   1b4b0:	adc	r2, r3, #0
   1b4b4:	mvn	r3, #0
   1b4b8:	and	r5, r2, r3
   1b4bc:	mov	r2, #16646144	; 0xfe0000
   1b4c0:	orr	r2, r2, #-16777216	; 0xff000000
   1b4c4:	ldr	r4, [pc, #1228]	; 1b998 <next@@Base+0x3780>
   1b4c8:	and	r6, r1, r2
   1b4cc:	mov	r1, r6
   1b4d0:	add	r4, pc, r4
   1b4d4:	bl	126bc <realloc@plt>
   1b4d8:	str	r6, [r9]
   1b4dc:	str	r5, [r9, #4]
   1b4e0:	str	r0, [r4]
   1b4e4:	ldrb	r7, [r8]
   1b4e8:	ldr	r5, [sl, #4]
   1b4ec:	ldr	r1, [pc, #1192]	; 1b99c <next@@Base+0x3784>
   1b4f0:	mov	r3, r0
   1b4f4:	mov	r2, #0
   1b4f8:	ldr	r1, [pc, r1]
   1b4fc:	strb	r2, [r3, r1]!
   1b500:	strb	r2, [r3, #3]
   1b504:	strb	r2, [r3, #2]
   1b508:	strb	r2, [r3, #1]
   1b50c:	adds	r2, r1, #4
   1b510:	adc	r3, r5, #0
   1b514:	cmp	r7, #1
   1b518:	strd	r2, [sl]
   1b51c:	bne	1b174 <next@@Base+0x2f5c>
   1b520:	b	1b5e0 <next@@Base+0x33c8>
   1b524:	mov	r3, r0
   1b528:	mov	r2, #0
   1b52c:	strb	r2, [r3, r6]!
   1b530:	strb	r2, [r3, #3]
   1b534:	strb	r2, [r3, #2]
   1b538:	strb	r2, [r3, #1]
   1b53c:	adds	r2, r6, #4
   1b540:	adc	r3, r1, #0
   1b544:	strd	r2, [sl]
   1b548:	ldr	r4, [r9, #4]
   1b54c:	ldr	r5, [pc, #992]	; 1b934 <next@@Base+0x371c>
   1b550:	adds	lr, r6, #8
   1b554:	adc	ip, r1, #0
   1b558:	mov	r7, #1
   1b55c:	ldr	r5, [pc, r5]
   1b560:	subs	r5, r5, lr
   1b564:	sbcs	r5, r4, ip
   1b568:	bcs	1b01c <next@@Base+0x2e04>
   1b56c:	mov	r2, #7
   1b570:	orr	r2, r2, #131072	; 0x20000
   1b574:	adds	r2, r6, r2
   1b578:	adc	r1, r1, #0
   1b57c:	mvn	r3, #0
   1b580:	and	r5, r1, r3
   1b584:	mov	r1, #16646144	; 0xfe0000
   1b588:	orr	r1, r1, #-16777216	; 0xff000000
   1b58c:	ldr	r4, [pc, #932]	; 1b938 <next@@Base+0x3720>
   1b590:	and	r6, r2, r1
   1b594:	mov	r1, r6
   1b598:	add	r4, pc, r4
   1b59c:	bl	126bc <realloc@plt>
   1b5a0:	str	r6, [r9]
   1b5a4:	str	r5, [r9, #4]
   1b5a8:	str	r0, [r4]
   1b5ac:	ldr	r3, [sl, #4]
   1b5b0:	ldr	r2, [pc, #900]	; 1b93c <next@@Base+0x3724>
   1b5b4:	ldr	r2, [pc, r2]
   1b5b8:	b	1b01c <next@@Base+0x2e04>
   1b5bc:	mov	r3, r0
   1b5c0:	mov	r2, #0
   1b5c4:	strb	r2, [r3, r1]!
   1b5c8:	strb	r2, [r3, #3]
   1b5cc:	strb	r2, [r3, #2]
   1b5d0:	strb	r2, [r3, #1]
   1b5d4:	adds	r2, r1, #4
   1b5d8:	adc	r3, r5, #0
   1b5dc:	strd	r2, [sl]
   1b5e0:	ldr	r4, [r9, #4]
   1b5e4:	ldr	r6, [pc, #948]	; 1b9a0 <next@@Base+0x3788>
   1b5e8:	adds	r7, r1, #8
   1b5ec:	adc	ip, r5, #0
   1b5f0:	ldr	r6, [pc, r6]
   1b5f4:	subs	r7, r6, r7
   1b5f8:	sbcs	r7, r4, ip
   1b5fc:	bcs	1b6a8 <next@@Base+0x3490>
   1b600:	mov	r2, #7
   1b604:	orr	r2, r2, #131072	; 0x20000
   1b608:	adds	r1, r1, r2
   1b60c:	adc	r2, r5, #0
   1b610:	mvn	r3, #0
   1b614:	and	r5, r2, r3
   1b618:	mov	r2, #16646144	; 0xfe0000
   1b61c:	orr	r2, r2, #-16777216	; 0xff000000
   1b620:	ldr	r4, [pc, #892]	; 1b9a4 <next@@Base+0x378c>
   1b624:	and	r6, r1, r2
   1b628:	mov	r1, r6
   1b62c:	add	r4, pc, r4
   1b630:	bl	126bc <realloc@plt>
   1b634:	str	r6, [r9]
   1b638:	str	r5, [r9, #4]
   1b63c:	str	r0, [r4]
   1b640:	ldrb	r7, [r8]
   1b644:	ldr	r3, [sl, #4]
   1b648:	ldr	r2, [pc, #856]	; 1b9a8 <next@@Base+0x3790>
   1b64c:	mov	r6, r0
   1b650:	mov	r1, #0
   1b654:	ldr	r2, [pc, r2]
   1b658:	strb	r1, [r6, r2]!
   1b65c:	strb	r1, [r6, #3]
   1b660:	strb	r1, [r6, #2]
   1b664:	strb	r1, [r6, #1]
   1b668:	adds	r1, r2, #4
   1b66c:	adc	r5, r3, #0
   1b670:	cmp	r7, #1
   1b674:	stm	sl, {r1, r5}
   1b678:	bne	1b198 <next@@Base+0x2f80>
   1b67c:	b	1b6cc <next@@Base+0x34b4>
   1b680:	ldr	r1, [pc, #616]	; 1b8f0 <next@@Base+0x36d8>
   1b684:	add	r1, pc, r1
   1b688:	ldr	r0, [pc, #600]	; 1b8e8 <next@@Base+0x36d0>
   1b68c:	ldr	r0, [pc, r0]
   1b690:	ldr	r0, [r0]
   1b694:	ldr	r2, [pc, #592]	; 1b8ec <next@@Base+0x36d4>
   1b698:	ldr	r2, [pc, r2]
   1b69c:	sub	sp, fp, #28
   1b6a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6a4:	b	1274c <fprintf@plt>
   1b6a8:	mov	r7, r0
   1b6ac:	mov	r1, #0
   1b6b0:	strb	r1, [r7, r2]!
   1b6b4:	strb	r1, [r7, #3]
   1b6b8:	strb	r1, [r7, #2]
   1b6bc:	strb	r1, [r7, #1]
   1b6c0:	adds	r1, r2, #4
   1b6c4:	adc	r5, r3, #0
   1b6c8:	stm	sl, {r1, r5}
   1b6cc:	ldr	r4, [r9, #4]
   1b6d0:	ldr	r6, [pc, #724]	; 1b9ac <next@@Base+0x3794>
   1b6d4:	adds	r7, r2, #8
   1b6d8:	adc	ip, r3, #0
   1b6dc:	ldr	r6, [pc, r6]
   1b6e0:	subs	r7, r6, r7
   1b6e4:	sbcs	r7, r4, ip
   1b6e8:	bcs	1b770 <next@@Base+0x3558>
   1b6ec:	mov	r1, #7
   1b6f0:	orr	r1, r1, #131072	; 0x20000
   1b6f4:	adds	r1, r2, r1
   1b6f8:	adc	r2, r3, #0
   1b6fc:	mvn	r3, #0
   1b700:	and	r5, r2, r3
   1b704:	mov	r2, #16646144	; 0xfe0000
   1b708:	orr	r2, r2, #-16777216	; 0xff000000
   1b70c:	ldr	r4, [pc, #668]	; 1b9b0 <next@@Base+0x3798>
   1b710:	and	r6, r1, r2
   1b714:	mov	r1, r6
   1b718:	add	r4, pc, r4
   1b71c:	bl	126bc <realloc@plt>
   1b720:	str	r6, [r9]
   1b724:	str	r5, [r9, #4]
   1b728:	str	r0, [r4]
   1b72c:	ldrb	r2, [r8]
   1b730:	ldr	r5, [sl, #4]
   1b734:	ldr	r1, [pc, #632]	; 1b9b4 <next@@Base+0x379c>
   1b738:	mov	r7, r0
   1b73c:	mov	r3, #0
   1b740:	ldr	r1, [pc, r1]
   1b744:	adds	r4, r1, #4
   1b748:	strb	r3, [r7, r1]!
   1b74c:	str	r4, [sl]
   1b750:	strb	r3, [r7, #3]
   1b754:	strb	r3, [r7, #2]
   1b758:	strb	r3, [r7, #1]
   1b75c:	adc	r3, r5, #0
   1b760:	cmp	r2, #1
   1b764:	str	r3, [sl, #4]
   1b768:	bne	1b1c0 <next@@Base+0x2fa8>
   1b76c:	b	1b798 <next@@Base+0x3580>
   1b770:	mov	r3, r0
   1b774:	mov	r2, #0
   1b778:	strb	r2, [r3, r1]!
   1b77c:	adds	r4, r1, #4
   1b780:	strb	r2, [r3, #3]
   1b784:	strb	r2, [r3, #2]
   1b788:	strb	r2, [r3, #1]
   1b78c:	adc	r3, r5, #0
   1b790:	str	r4, [sl]
   1b794:	str	r3, [sl, #4]
   1b798:	ldr	r6, [r9, #4]
   1b79c:	ldr	r2, [pc, #532]	; 1b9b8 <next@@Base+0x37a0>
   1b7a0:	adds	ip, r1, #8
   1b7a4:	adc	r7, r5, #0
   1b7a8:	ldr	r2, [pc, r2]
   1b7ac:	subs	r2, r2, ip
   1b7b0:	sbcs	r2, r6, r7
   1b7b4:	bcs	1b83c <next@@Base+0x3624>
   1b7b8:	mov	r2, #7
   1b7bc:	orr	r2, r2, #131072	; 0x20000
   1b7c0:	adds	r1, r1, r2
   1b7c4:	adc	r2, r5, #0
   1b7c8:	mvn	r3, #0
   1b7cc:	and	r5, r2, r3
   1b7d0:	mov	r2, #16646144	; 0xfe0000
   1b7d4:	orr	r2, r2, #-16777216	; 0xff000000
   1b7d8:	ldr	r4, [pc, #368]	; 1b950 <next@@Base+0x3738>
   1b7dc:	and	r6, r1, r2
   1b7e0:	mov	r1, r6
   1b7e4:	add	r4, pc, r4
   1b7e8:	bl	126bc <realloc@plt>
   1b7ec:	str	r6, [r9]
   1b7f0:	str	r5, [r9, #4]
   1b7f4:	str	r0, [r4]
   1b7f8:	ldrb	r7, [r8]
   1b7fc:	ldr	r3, [sl, #4]
   1b800:	ldr	r4, [pc, #332]	; 1b954 <next@@Base+0x373c>
   1b804:	mov	r2, r0
   1b808:	mov	r1, #0
   1b80c:	ldr	r4, [pc, r4]
   1b810:	strb	r1, [r2, r4]!
   1b814:	strb	r1, [r2, #3]
   1b818:	strb	r1, [r2, #2]
   1b81c:	strb	r1, [r2, #1]
   1b820:	adds	r2, r4, #4
   1b824:	adc	r1, r3, #0
   1b828:	cmp	r7, #0
   1b82c:	str	r2, [sl]
   1b830:	str	r1, [sl, #4]
   1b834:	beq	1b1e8 <next@@Base+0x2fd0>
   1b838:	b	1b864 <next@@Base+0x364c>
   1b83c:	mov	r2, r0
   1b840:	mov	r1, #0
   1b844:	strb	r1, [r2, r4]!
   1b848:	strb	r1, [r2, #3]
   1b84c:	strb	r1, [r2, #2]
   1b850:	strb	r1, [r2, #1]
   1b854:	adds	r2, r4, #4
   1b858:	adc	r1, r3, #0
   1b85c:	str	r2, [sl]
   1b860:	str	r1, [sl, #4]
   1b864:	ldr	r5, [r9, #4]
   1b868:	ldr	r6, [pc, #232]	; 1b958 <next@@Base+0x3740>
   1b86c:	adds	r7, r4, #8
   1b870:	adc	ip, r3, #0
   1b874:	ldr	r6, [pc, r6]
   1b878:	subs	r7, r6, r7
   1b87c:	sbcs	r7, r5, ip
   1b880:	bcs	1b1e8 <next@@Base+0x2fd0>
   1b884:	mov	r1, #7
   1b888:	orr	r1, r1, #131072	; 0x20000
   1b88c:	adds	r1, r4, r1
   1b890:	adc	r2, r3, #0
   1b894:	mvn	r3, #0
   1b898:	and	r7, r2, r3
   1b89c:	mov	r2, #16646144	; 0xfe0000
   1b8a0:	orr	r2, r2, #-16777216	; 0xff000000
   1b8a4:	ldr	r5, [pc, #176]	; 1b95c <next@@Base+0x3744>
   1b8a8:	and	r6, r1, r2
   1b8ac:	mov	r1, r6
   1b8b0:	add	r5, pc, r5
   1b8b4:	bl	126bc <realloc@plt>
   1b8b8:	strd	r6, [r9]
   1b8bc:	str	r0, [r5]
   1b8c0:	ldr	r1, [sl, #4]
   1b8c4:	ldr	r2, [pc, #148]	; 1b960 <next@@Base+0x3748>
   1b8c8:	ldr	r2, [pc, r2]
   1b8cc:	b	1b1e8 <next@@Base+0x2fd0>
   1b8d0:			; <UNDEFINED> instruction: 0x00014ab0
   1b8d4:			; <UNDEFINED> instruction: 0x00014ab0
   1b8d8:	andeq	r4, r1, r4, lsr #21
   1b8dc:	andeq	r4, r1, r8, lsl #21
   1b8e0:			; <UNDEFINED> instruction: 0x000149bc
   1b8e4:	andeq	r2, r0, r6, ror #29
   1b8e8:	andeq	r2, r1, ip, lsr #20
   1b8ec:	andeq	r4, r1, r0, ror r0
   1b8f0:	andeq	r2, r0, pc, asr #12
   1b8f4:			; <UNDEFINED> instruction: 0x000147bc
   1b8f8:	andeq	r4, r1, r8, ror sl
   1b8fc:	andeq	r4, r1, ip, ror #20
   1b900:	andeq	r4, r1, r0, ror #18
   1b904:	andeq	r4, r1, r0, lsr #20
   1b908:	andeq	r4, r1, ip, lsl sl
   1b90c:	strdeq	r4, [r1], -ip
   1b910:	andeq	r4, r1, r8, lsr r9
   1b914:	strdeq	r4, [r1], -r8
   1b918:	ldrdeq	r4, [r1], -ip
   1b91c:	andeq	r4, r1, r8, ror #16
   1b920:	andeq	r4, r1, r8, lsr #16
   1b924:	andeq	r4, r1, ip, lsl #16
   1b928:	andeq	r4, r1, ip, asr #6
   1b92c:	andeq	r4, r1, ip, lsl #6
   1b930:	andeq	r4, r1, ip, ror #5
   1b934:			; <UNDEFINED> instruction: 0x000141bc
   1b938:	andeq	r4, r1, ip, ror r1
   1b93c:	andeq	r4, r1, ip, ror #2
   1b940:	andeq	r4, r1, r4, lsl #12
   1b944:			; <UNDEFINED> instruction: 0x000146bc
   1b948:			; <UNDEFINED> instruction: 0x000146b0
   1b94c:	andeq	r4, r1, r8, lsr r4
   1b950:	andeq	r3, r1, r0, lsr pc
   1b954:	andeq	r3, r1, r4, lsl pc
   1b958:	andeq	r3, r1, r4, lsr #29
   1b95c:	andeq	r3, r1, r4, ror #28
   1b960:	andeq	r3, r1, r8, asr lr
   1b964:	andeq	r4, r1, ip, ror #9
   1b968:	andeq	r4, r1, r0, ror #9
   1b96c:	andeq	r4, r1, r0, lsr #9
   1b970:	muleq	r1, r4, r4
   1b974:	andeq	r4, r1, ip, lsl #9
   1b978:	andeq	r4, r1, r0, ror r4
   1b97c:	andeq	r4, r1, ip, ror #12
   1b980:	andeq	r4, r1, r8, ror #12
   1b984:	andeq	r4, r1, ip, asr #12
   1b988:	andeq	r4, r1, r0, lsl r4
   1b98c:	ldrdeq	r4, [r1], -r0
   1b990:			; <UNDEFINED> instruction: 0x000143b8
   1b994:	andeq	r4, r1, r4, lsl #5
   1b998:	andeq	r4, r1, r4, asr #4
   1b99c:	andeq	r4, r1, r8, lsr #4
   1b9a0:	andeq	r4, r1, r8, lsr #2
   1b9a4:	andeq	r4, r1, r8, ror #1
   1b9a8:	andeq	r4, r1, ip, asr #1
   1b9ac:	andeq	r4, r1, ip, lsr r0
   1b9b0:	strdeq	r3, [r1], -ip
   1b9b4:	andeq	r3, r1, r0, ror #31
   1b9b8:	andeq	r3, r1, r0, ror pc
   1b9bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9c0:	add	fp, sp, #28
   1b9c4:	sub	sp, sp, #4
   1b9c8:	ldr	r0, [pc, #496]	; 1bbc0 <next@@Base+0x39a8>
   1b9cc:	ldr	r0, [pc, r0]
   1b9d0:	cmp	r0, #0
   1b9d4:	beq	1bb68 <next@@Base+0x3950>
   1b9d8:	ldr	sl, [pc, #484]	; 1bbc4 <next@@Base+0x39ac>
   1b9dc:	mov	r5, #0
   1b9e0:	mov	r1, #0
   1b9e4:	add	sl, pc, sl
   1b9e8:	ldrb	r0, [sl]
   1b9ec:	ldr	r8, [pc, #468]	; 1bbc8 <next@@Base+0x39b0>
   1b9f0:	ldr	r4, [pc, #468]	; 1bbcc <next@@Base+0x39b4>
   1b9f4:	cmp	r0, #1
   1b9f8:	add	r8, pc, r8
   1b9fc:	add	r4, pc, r4
   1ba00:	bne	1ba7c <next@@Base+0x3864>
   1ba04:	ldr	r9, [pc, #452]	; 1bbd0 <next@@Base+0x39b8>
   1ba08:	ldr	r0, [r8, #4]
   1ba0c:	ldr	r2, [pc, #448]	; 1bbd4 <next@@Base+0x39bc>
   1ba10:	add	r9, pc, r9
   1ba14:	mov	ip, r4
   1ba18:	mov	r1, #1
   1ba1c:	ldr	r2, [pc, r2]
   1ba20:	ldr	r7, [r9, #4]
   1ba24:	ldr	r4, [pc, #428]	; 1bbd8 <next@@Base+0x39c0>
   1ba28:	adds	r3, r2, #8
   1ba2c:	adc	r6, r0, #0
   1ba30:	ldr	r4, [pc, r4]
   1ba34:	subs	r3, r4, r3
   1ba38:	mov	r4, ip
   1ba3c:	sbcs	r3, r7, r6
   1ba40:	bcs	1ba7c <next@@Base+0x3864>
   1ba44:	mov	r1, #7
   1ba48:	orr	r1, r1, #131072	; 0x20000
   1ba4c:	adds	r1, r2, r1
   1ba50:	adc	r7, r0, #0
   1ba54:	mov	r0, #16646144	; 0xfe0000
   1ba58:	orr	r0, r0, #-16777216	; 0xff000000
   1ba5c:	and	r6, r1, r0
   1ba60:	ldr	r0, [pc, #372]	; 1bbdc <next@@Base+0x39c4>
   1ba64:	mov	r1, r6
   1ba68:	ldr	r0, [pc, r0]
   1ba6c:	bl	126bc <realloc@plt>
   1ba70:	ldrb	r1, [sl]
   1ba74:	strd	r6, [r9]
   1ba78:	str	r0, [r4]
   1ba7c:	ldr	r2, [pc, #348]	; 1bbe0 <next@@Base+0x39c8>
   1ba80:	ldr	r2, [pc, r2]
   1ba84:	ldr	r0, [pc, #344]	; 1bbe4 <next@@Base+0x39cc>
   1ba88:	ldr	r0, [pc, r0]
   1ba8c:	ldr	r3, [r8, #4]
   1ba90:	mov	r7, r0
   1ba94:	strb	r5, [r7, r2]!
   1ba98:	adds	r2, r2, #8
   1ba9c:	adc	r3, r3, #0
   1baa0:	strb	r5, [r7, #5]
   1baa4:	strb	r5, [r7, #3]
   1baa8:	strb	r5, [r7, #2]
   1baac:	strb	r5, [r7, #1]
   1bab0:	strb	r5, [r7, #4]!
   1bab4:	cmp	r1, #0
   1bab8:	strb	r5, [r7, #3]
   1babc:	strb	r5, [r7, #2]
   1bac0:	strd	r2, [r8]
   1bac4:	beq	1baec <next@@Base+0x38d4>
   1bac8:	ldr	r3, [pc, #280]	; 1bbe8 <next@@Base+0x39d0>
   1bacc:	mov	r1, r2
   1bad0:	mov	r2, #1
   1bad4:	ldr	r3, [pc, r3]
   1bad8:	bl	126c8 <fwrite@plt>
   1badc:	ldr	r0, [pc, #264]	; 1bbec <next@@Base+0x39d4>
   1bae0:	ldr	r0, [pc, r0]
   1bae4:	bl	1265c <free@plt>
   1bae8:	b	1bb30 <next@@Base+0x3918>
   1baec:	ldr	r1, [pc, #252]	; 1bbf0 <next@@Base+0x39d8>
   1baf0:	mov	r2, #4
   1baf4:	ldr	r1, [pc, r1]
   1baf8:	bl	127e8 <msync@plt>
   1bafc:	cmn	r0, #1
   1bb00:	beq	1bb7c <next@@Base+0x3964>
   1bb04:	ldr	r1, [pc, #244]	; 1bc00 <next@@Base+0x39e8>
   1bb08:	ldr	r1, [pc, r1]
   1bb0c:	ldr	r0, [pc, #240]	; 1bc04 <next@@Base+0x39ec>
   1bb10:	ldr	r0, [pc, r0]
   1bb14:	bl	127c4 <munmap@plt>
   1bb18:	ldr	r0, [pc, #232]	; 1bc08 <next@@Base+0x39f0>
   1bb1c:	mov	r1, #0
   1bb20:	str	r1, [r4]
   1bb24:	add	r0, pc, r0
   1bb28:	str	r1, [r0]
   1bb2c:	str	r1, [r0, #4]
   1bb30:	ldr	r0, [pc, #212]	; 1bc0c <next@@Base+0x39f4>
   1bb34:	ldr	r0, [pc, r0]
   1bb38:	bl	12644 <fflush@plt>
   1bb3c:	ldr	r0, [pc, #204]	; 1bc10 <next@@Base+0x39f8>
   1bb40:	ldr	r0, [pc, r0]
   1bb44:	bl	1c0bc <__gcov_flush@@Base+0x304>
   1bb48:	ldr	r0, [pc, #196]	; 1bc14 <next@@Base+0x39fc>
   1bb4c:	ldr	r0, [pc, r0]
   1bb50:	bl	127b8 <fclose@plt>
   1bb54:	ldr	r0, [pc, #188]	; 1bc18 <next@@Base+0x3a00>
   1bb58:	mov	r1, #0
   1bb5c:	str	r1, [r4]
   1bb60:	add	r0, pc, r0
   1bb64:	str	r1, [r0]
   1bb68:	ldr	r0, [pc, #172]	; 1bc1c <next@@Base+0x3a04>
   1bb6c:	ldr	r0, [pc, r0]
   1bb70:	sub	sp, fp, #28
   1bb74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb78:	b	1265c <free@plt>
   1bb7c:	bl	12758 <__errno_location@plt>
   1bb80:	ldr	r1, [pc, #108]	; 1bbf4 <next@@Base+0x39dc>
   1bb84:	mov	r6, r4
   1bb88:	ldr	r1, [pc, r1]
   1bb8c:	ldr	r0, [r0]
   1bb90:	ldr	r4, [r1]
   1bb94:	ldr	r5, [pc, #92]	; 1bbf8 <next@@Base+0x39e0>
   1bb98:	ldr	r5, [pc, r5]
   1bb9c:	bl	12704 <strerror@plt>
   1bba0:	ldr	r1, [pc, #84]	; 1bbfc <next@@Base+0x39e4>
   1bba4:	mov	r3, r0
   1bba8:	mov	r0, r4
   1bbac:	add	r1, pc, r1
   1bbb0:	mov	r2, r5
   1bbb4:	mov	r4, r6
   1bbb8:	bl	1274c <fprintf@plt>
   1bbbc:	b	1bb04 <next@@Base+0x38ec>
   1bbc0:	andeq	r3, r1, r4, asr #26
   1bbc4:	andeq	r3, r1, r8, lsr #26
   1bbc8:	andeq	r3, r1, r8, lsr #26
   1bbcc:	andeq	r3, r1, r8, lsl sp
   1bbd0:	andeq	r3, r1, r8, lsl #26
   1bbd4:	andeq	r3, r1, r4, lsl #26
   1bbd8:	andeq	r3, r1, r8, ror #25
   1bbdc:	andeq	r3, r1, ip, lsr #25
   1bbe0:	andeq	r3, r1, r0, lsr #25
   1bbe4:	andeq	r3, r1, ip, lsl #25
   1bbe8:	andeq	r3, r1, ip, lsr ip
   1bbec:	andeq	r3, r1, r4, lsr ip
   1bbf0:	andeq	r3, r1, r4, asr #24
   1bbf4:	andeq	r2, r1, r0, lsr r5
   1bbf8:	andeq	r3, r1, r0, ror fp
   1bbfc:	muleq	r0, r5, r1
   1bc00:	andeq	r3, r1, r0, lsr ip
   1bc04:	andeq	r3, r1, r4, lsl #24
   1bc08:	andeq	r3, r1, r4, lsl ip
   1bc0c:	ldrdeq	r3, [r1], -ip
   1bc10:	andeq	r2, r1, r8, lsl #11
   1bc14:	andeq	r3, r1, r4, asr #23
   1bc18:			; <UNDEFINED> instruction: 0x00013bb0
   1bc1c:	muleq	r1, ip, fp
   1bc20:	push	{r4, sl, fp, lr}
   1bc24:	add	fp, sp, #8
   1bc28:	mov	r4, r0
   1bc2c:	mov	r0, #12
   1bc30:	bl	126ec <malloc@plt>
   1bc34:	ldr	r1, [pc, #60]	; 1bc78 <next@@Base+0x3a60>
   1bc38:	mov	r2, #0
   1bc3c:	add	r1, pc, r1
   1bc40:	stm	r0, {r1, r4}
   1bc44:	str	r2, [r0, #8]
   1bc48:	ldr	r1, [pc, #44]	; 1bc7c <next@@Base+0x3a64>
   1bc4c:	ldr	r1, [pc, r1]
   1bc50:	mov	r2, r1
   1bc54:	ldr	r3, [r2], #4
   1bc58:	ldr	r4, [r2]
   1bc5c:	cmp	r3, #0
   1bc60:	mov	r3, r2
   1bc64:	addne	r3, r4, #8
   1bc68:	moveq	r2, r1
   1bc6c:	str	r0, [r3]
   1bc70:	str	r0, [r2]
   1bc74:	pop	{r4, sl, fp, pc}
   1bc78:	strdeq	r3, [r1], -r0
   1bc7c:	andeq	r2, r1, r8, ror #8
   1bc80:	push	{r4, r5, fp, lr}
   1bc84:	add	fp, sp, #8
   1bc88:	ldr	r0, [pc, #64]	; 1bcd0 <next@@Base+0x3ab8>
   1bc8c:	ldr	r0, [pc, r0]
   1bc90:	ldr	r4, [r0]
   1bc94:	cmp	r4, #0
   1bc98:	beq	1bccc <next@@Base+0x3ab4>
   1bc9c:	ldr	r5, [pc, #48]	; 1bcd4 <next@@Base+0x3abc>
   1bca0:	add	r5, pc, r5
   1bca4:	b	1bcb4 <next@@Base+0x3a9c>
   1bca8:	ldr	r4, [r4, #8]
   1bcac:	cmp	r4, #0
   1bcb0:	beq	1bccc <next@@Base+0x3ab4>
   1bcb4:	ldr	r0, [r4]
   1bcb8:	cmp	r0, r5
   1bcbc:	bne	1bca8 <next@@Base+0x3a90>
   1bcc0:	ldr	r0, [r4, #4]
   1bcc4:	blx	r0
   1bcc8:	b	1bca8 <next@@Base+0x3a90>
   1bccc:	pop	{r4, r5, fp, pc}
   1bcd0:	andeq	r2, r1, r8, lsr #8
   1bcd4:	andeq	r3, r1, ip, lsl #21
   1bcd8:	push	{r4, r5, r6, r7, fp, lr}
   1bcdc:	add	fp, sp, #16
   1bce0:	ldr	r4, [pc, #104]	; 1bd50 <next@@Base+0x3b38>
   1bce4:	ldr	r4, [pc, r4]
   1bce8:	ldr	r0, [r4]
   1bcec:	cmp	r0, #0
   1bcf0:	beq	1bd4c <next@@Base+0x3b34>
   1bcf4:	ldr	r5, [pc, #88]	; 1bd54 <next@@Base+0x3b3c>
   1bcf8:	mov	r6, #0
   1bcfc:	add	r5, pc, r5
   1bd00:	b	1bd34 <next@@Base+0x3b1c>
   1bd04:	ldr	r1, [r4]
   1bd08:	cmp	r0, r1
   1bd0c:	streq	r7, [r4]
   1bd10:	ldr	r1, [r4, #4]
   1bd14:	cmp	r0, r1
   1bd18:	streq	r6, [r4, #4]
   1bd1c:	cmp	r6, #0
   1bd20:	strne	r7, [r6, #8]
   1bd24:	bl	1265c <free@plt>
   1bd28:	mov	r0, r7
   1bd2c:	cmp	r7, #0
   1bd30:	beq	1bd4c <next@@Base+0x3b34>
   1bd34:	ldr	r1, [r0]
   1bd38:	ldr	r7, [r0, #8]
   1bd3c:	cmp	r1, r5
   1bd40:	beq	1bd04 <next@@Base+0x3aec>
   1bd44:	mov	r6, r0
   1bd48:	b	1bd28 <next@@Base+0x3b10>
   1bd4c:	pop	{r4, r5, r6, r7, fp, pc}
   1bd50:	ldrdeq	r2, [r1], -r0
   1bd54:	andeq	r3, r1, r0, lsr sl
   1bd58:	push	{r4, sl, fp, lr}
   1bd5c:	add	fp, sp, #8
   1bd60:	mov	r4, r0
   1bd64:	mov	r0, #12
   1bd68:	bl	126ec <malloc@plt>
   1bd6c:	ldr	r1, [pc, #60]	; 1bdb0 <next@@Base+0x3b98>
   1bd70:	mov	r2, #0
   1bd74:	add	r1, pc, r1
   1bd78:	stm	r0, {r1, r4}
   1bd7c:	str	r2, [r0, #8]
   1bd80:	ldr	r1, [pc, #44]	; 1bdb4 <next@@Base+0x3b9c>
   1bd84:	ldr	r1, [pc, r1]
   1bd88:	mov	r2, r1
   1bd8c:	ldr	r3, [r2], #4
   1bd90:	ldr	r4, [r2]
   1bd94:	cmp	r3, #0
   1bd98:	mov	r3, r2
   1bd9c:	addne	r3, r4, #8
   1bda0:	moveq	r2, r1
   1bda4:	str	r0, [r3]
   1bda8:	str	r0, [r2]
   1bdac:	pop	{r4, sl, fp, pc}
   1bdb0:			; <UNDEFINED> instruction: 0x000139b8
   1bdb4:	andeq	r2, r1, ip, lsr #6

0001bdb8 <__gcov_flush@@Base>:
   1bdb8:	push	{r4, sl, fp, lr}
   1bdbc:	add	fp, sp, #8
   1bdc0:	ldr	r0, [pc, #36]	; 1bdec <__gcov_flush@@Base+0x34>
   1bdc4:	ldr	r0, [pc, r0]
   1bdc8:	ldr	r4, [r0]
   1bdcc:	cmp	r4, #0
   1bdd0:	beq	1bde8 <__gcov_flush@@Base+0x30>
   1bdd4:	ldr	r0, [r4, #4]
   1bdd8:	blx	r0
   1bddc:	ldr	r4, [r4, #8]
   1bde0:	cmp	r4, #0
   1bde4:	bne	1bdd4 <__gcov_flush@@Base+0x1c>
   1bde8:	pop	{r4, sl, fp, pc}
   1bdec:	andeq	r2, r1, ip, ror #5
   1bdf0:	push	{r4, r5, r6, r7, fp, lr}
   1bdf4:	add	fp, sp, #16
   1bdf8:	ldr	r4, [pc, #104]	; 1be68 <__gcov_flush@@Base+0xb0>
   1bdfc:	ldr	r4, [pc, r4]
   1be00:	ldr	r0, [r4]
   1be04:	cmp	r0, #0
   1be08:	beq	1be64 <__gcov_flush@@Base+0xac>
   1be0c:	ldr	r5, [pc, #88]	; 1be6c <__gcov_flush@@Base+0xb4>
   1be10:	mov	r6, #0
   1be14:	add	r5, pc, r5
   1be18:	b	1be4c <__gcov_flush@@Base+0x94>
   1be1c:	ldr	r1, [r4]
   1be20:	cmp	r0, r1
   1be24:	streq	r7, [r4]
   1be28:	ldr	r1, [r4, #4]
   1be2c:	cmp	r0, r1
   1be30:	streq	r6, [r4, #4]
   1be34:	cmp	r6, #0
   1be38:	strne	r7, [r6, #8]
   1be3c:	bl	1265c <free@plt>
   1be40:	mov	r0, r7
   1be44:	cmp	r7, #0
   1be48:	beq	1be64 <__gcov_flush@@Base+0xac>
   1be4c:	ldr	r1, [r0]
   1be50:	ldr	r7, [r0, #8]
   1be54:	cmp	r1, r5
   1be58:	beq	1be1c <__gcov_flush@@Base+0x64>
   1be5c:	mov	r6, r0
   1be60:	b	1be40 <__gcov_flush@@Base+0x88>
   1be64:	pop	{r4, r5, r6, r7, fp, pc}
   1be68:			; <UNDEFINED> instruction: 0x000122b4
   1be6c:	andeq	r3, r1, r8, lsl r9
   1be70:	push	{r4, r5, r6, sl, fp, lr}
   1be74:	add	fp, sp, #16
   1be78:	ldr	r6, [pc, #228]	; 1bf64 <__gcov_flush@@Base+0x1ac>
   1be7c:	mov	r4, r1
   1be80:	cmp	r0, #0
   1be84:	add	r6, pc, r6
   1be88:	beq	1bed4 <__gcov_flush@@Base+0x11c>
   1be8c:	mov	r5, r0
   1be90:	mov	r0, #12
   1be94:	bl	126ec <malloc@plt>
   1be98:	mov	r1, #0
   1be9c:	str	r6, [r0]
   1bea0:	str	r5, [r0, #4]
   1bea4:	str	r1, [r0, #8]
   1bea8:	ldr	r1, [pc, #184]	; 1bf68 <__gcov_flush@@Base+0x1b0>
   1beac:	ldr	r1, [pc, r1]
   1beb0:	mov	r2, r1
   1beb4:	ldr	r3, [r2], #4
   1beb8:	ldr	r5, [r2]
   1bebc:	cmp	r3, #0
   1bec0:	mov	r3, r2
   1bec4:	addne	r3, r5, #8
   1bec8:	moveq	r2, r1
   1becc:	str	r0, [r3]
   1bed0:	str	r0, [r2]
   1bed4:	cmp	r4, #0
   1bed8:	beq	1bf20 <__gcov_flush@@Base+0x168>
   1bedc:	mov	r0, #12
   1bee0:	bl	126ec <malloc@plt>
   1bee4:	mov	r1, #0
   1bee8:	str	r6, [r0]
   1beec:	str	r4, [r0, #4]
   1bef0:	str	r1, [r0, #8]
   1bef4:	ldr	r1, [pc, #112]	; 1bf6c <__gcov_flush@@Base+0x1b4>
   1bef8:	ldr	r1, [pc, r1]
   1befc:	mov	r2, r1
   1bf00:	ldr	r3, [r2], #4
   1bf04:	ldr	r6, [r2]
   1bf08:	cmp	r3, #0
   1bf0c:	mov	r3, r2
   1bf10:	addne	r3, r6, #8
   1bf14:	moveq	r2, r1
   1bf18:	str	r0, [r3]
   1bf1c:	str	r0, [r2]
   1bf20:	ldr	r1, [pc, #72]	; 1bf70 <__gcov_flush@@Base+0x1b8>
   1bf24:	add	r1, pc, r1
   1bf28:	ldrb	r0, [r1]
   1bf2c:	cmp	r0, #0
   1bf30:	popne	{r4, r5, r6, sl, fp, pc}
   1bf34:	ldr	r0, [pc, #56]	; 1bf74 <__gcov_flush@@Base+0x1bc>
   1bf38:	mov	r2, #1
   1bf3c:	strb	r2, [r1]
   1bf40:	add	r0, pc, r0
   1bf44:	bl	1c510 <__libc_csu_fini@@Base+0x4>
   1bf48:	ldr	r0, [pc, #40]	; 1bf78 <__gcov_flush@@Base+0x1c0>
   1bf4c:	add	r0, pc, r0
   1bf50:	bl	1c510 <__libc_csu_fini@@Base+0x4>
   1bf54:	ldr	r0, [pc, #32]	; 1bf7c <__gcov_flush@@Base+0x1c4>
   1bf58:	add	r0, pc, r0
   1bf5c:	pop	{r4, r5, r6, sl, fp, lr}
   1bf60:	b	1c510 <__libc_csu_fini@@Base+0x4>
   1bf64:	andeq	r3, r1, r8, lsr #17
   1bf68:	andeq	r2, r1, r8, lsl #4
   1bf6c:			; <UNDEFINED> instruction: 0x000121b8
   1bf70:	andeq	r3, r1, ip, lsl #16
   1bf74:			; <UNDEFINED> instruction: 0xfffffea8
   1bf78:			; <UNDEFINED> instruction: 0xfffffd84
   1bf7c:			; <UNDEFINED> instruction: 0xfffffd20
   1bf80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bf84:	add	fp, sp, #24
   1bf88:	ldr	r7, [pc, #68]	; 1bfd4 <__gcov_flush@@Base+0x21c>
   1bf8c:	mov	r4, r0
   1bf90:	mov	r5, #1
   1bf94:	mov	r8, #0
   1bf98:	ldr	r7, [pc, r7]
   1bf9c:	mov	r6, #47	; 0x2f
   1bfa0:	b	1bfbc <__gcov_flush@@Base+0x204>
   1bfa4:	strb	r8, [r4, r5]
   1bfa8:	ldr	r1, [r7]
   1bfac:	mov	r0, r4
   1bfb0:	bl	12770 <mkdir@plt>
   1bfb4:	strb	r6, [r4, r5]
   1bfb8:	add	r5, r5, #1
   1bfbc:	ldrb	r0, [r4, r5]
   1bfc0:	cmp	r0, #47	; 0x2f
   1bfc4:	beq	1bfa4 <__gcov_flush@@Base+0x1ec>
   1bfc8:	cmp	r0, #0
   1bfcc:	bne	1bfb8 <__gcov_flush@@Base+0x200>
   1bfd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bfd4:	andeq	r2, r1, r4, lsl r1
   1bfd8:	ldr	r0, [pc, #8]	; 1bfe8 <__gcov_flush@@Base+0x230>
   1bfdc:	ldr	r0, [pc, r0]
   1bfe0:	ldr	r0, [r0]
   1bfe4:	bx	lr
   1bfe8:	ldrdeq	r2, [r1], -r0
   1bfec:	ldr	r1, [pc, #8]	; 1bffc <__gcov_flush@@Base+0x244>
   1bff0:	ldr	r1, [pc, r1]
   1bff4:	str	r0, [r1]
   1bff8:	bx	lr
   1bffc:	strheq	r2, [r1], -ip
   1c000:	push	{r4, r5, r6, sl, fp, lr}
   1c004:	add	fp, sp, #16
   1c008:	sub	sp, sp, #392	; 0x188
   1c00c:	mov	r6, sp
   1c010:	mov	r5, r0
   1c014:	mov	r0, r6
   1c018:	mov	r4, r1
   1c01c:	bl	12698 <uname@plt>
   1c020:	cmp	r0, #0
   1c024:	bmi	1c03c <__gcov_flush@@Base+0x284>
   1c028:	add	r1, r6, #65	; 0x41
   1c02c:	mov	r0, r5
   1c030:	mov	r2, r4
   1c034:	bl	12794 <strncpy@plt>
   1c038:	mov	r0, #0
   1c03c:	sub	sp, fp, #16
   1c040:	pop	{r4, r5, r6, sl, fp, pc}
   1c044:	push	{r4, r5, r6, sl, fp, lr}
   1c048:	add	fp, sp, #16
   1c04c:	sub	sp, sp, #32
   1c050:	mov	r4, #0
   1c054:	str	r4, [sp, #8]
   1c058:	strh	r4, [sp, #2]
   1c05c:	mov	r5, r0
   1c060:	str	r4, [sp, #12]
   1c064:	str	r4, [sp, #16]
   1c068:	str	r4, [sp, #20]
   1c06c:	bl	1271c <getpid@plt>
   1c070:	mov	r6, sp
   1c074:	str	r0, [sp, #24]
   1c078:	mov	r0, #1
   1c07c:	strh	r0, [sp]
   1c080:	mov	r0, r5
   1c084:	mov	r1, #14
   1c088:	mov	r2, r6
   1c08c:	bl	127d0 <fcntl64@plt>
   1c090:	cmn	r0, #1
   1c094:	bne	1c0b0 <__gcov_flush@@Base+0x2f8>
   1c098:	bl	12758 <__errno_location@plt>
   1c09c:	ldr	r0, [r0]
   1c0a0:	cmp	r0, #4
   1c0a4:	beq	1c080 <__gcov_flush@@Base+0x2c8>
   1c0a8:	cmp	r0, #37	; 0x25
   1c0ac:	mvneq	r4, #0
   1c0b0:	mov	r0, r4
   1c0b4:	sub	sp, fp, #16
   1c0b8:	pop	{r4, r5, r6, sl, fp, pc}
   1c0bc:	push	{r4, r5, r6, sl, fp, lr}
   1c0c0:	add	fp, sp, #16
   1c0c4:	sub	sp, sp, #32
   1c0c8:	mov	r4, #0
   1c0cc:	str	r4, [sp, #8]
   1c0d0:	strh	r4, [sp, #2]
   1c0d4:	mov	r5, r0
   1c0d8:	str	r4, [sp, #12]
   1c0dc:	str	r4, [sp, #16]
   1c0e0:	str	r4, [sp, #20]
   1c0e4:	bl	1271c <getpid@plt>
   1c0e8:	mov	r6, sp
   1c0ec:	str	r0, [sp, #24]
   1c0f0:	mov	r0, #2
   1c0f4:	strh	r0, [sp]
   1c0f8:	mov	r0, r5
   1c0fc:	mov	r1, #14
   1c100:	mov	r2, r6
   1c104:	bl	127d0 <fcntl64@plt>
   1c108:	cmn	r0, #1
   1c10c:	bne	1c128 <__gcov_flush@@Base+0x370>
   1c110:	bl	12758 <__errno_location@plt>
   1c114:	ldr	r0, [r0]
   1c118:	cmp	r0, #4
   1c11c:	beq	1c0f8 <__gcov_flush@@Base+0x340>
   1c120:	cmp	r0, #37	; 0x25
   1c124:	mvneq	r4, #0
   1c128:	mov	r0, r4
   1c12c:	sub	sp, fp, #16
   1c130:	pop	{r4, r5, r6, sl, fp, pc}
   1c134:	push	{r4, r5, r6, sl, fp, lr}
   1c138:	add	fp, sp, #16
   1c13c:	sub	sp, sp, #32
   1c140:	bl	127ac <fileno@plt>
   1c144:	mov	r4, #0
   1c148:	str	r4, [sp, #8]
   1c14c:	strh	r4, [sp, #2]
   1c150:	mov	r5, r0
   1c154:	str	r4, [sp, #12]
   1c158:	str	r4, [sp, #16]
   1c15c:	str	r4, [sp, #20]
   1c160:	bl	1271c <getpid@plt>
   1c164:	mov	r6, sp
   1c168:	str	r0, [sp, #24]
   1c16c:	mov	r0, #1
   1c170:	strh	r0, [sp]
   1c174:	mov	r0, r5
   1c178:	mov	r1, #14
   1c17c:	mov	r2, r6
   1c180:	bl	127d0 <fcntl64@plt>
   1c184:	cmn	r0, #1
   1c188:	bne	1c1a4 <__gcov_flush@@Base+0x3ec>
   1c18c:	bl	12758 <__errno_location@plt>
   1c190:	ldr	r0, [r0]
   1c194:	cmp	r0, #4
   1c198:	beq	1c174 <__gcov_flush@@Base+0x3bc>
   1c19c:	cmp	r0, #37	; 0x25
   1c1a0:	mvneq	r4, #0
   1c1a4:	mov	r0, r4
   1c1a8:	sub	sp, fp, #16
   1c1ac:	pop	{r4, r5, r6, sl, fp, pc}
   1c1b0:	push	{r4, r5, r6, sl, fp, lr}
   1c1b4:	add	fp, sp, #16
   1c1b8:	sub	sp, sp, #32
   1c1bc:	bl	127ac <fileno@plt>
   1c1c0:	mov	r4, #0
   1c1c4:	str	r4, [sp, #8]
   1c1c8:	strh	r4, [sp, #2]
   1c1cc:	mov	r5, r0
   1c1d0:	str	r4, [sp, #12]
   1c1d4:	str	r4, [sp, #16]
   1c1d8:	str	r4, [sp, #20]
   1c1dc:	bl	1271c <getpid@plt>
   1c1e0:	mov	r6, sp
   1c1e4:	str	r0, [sp, #24]
   1c1e8:	mov	r0, #2
   1c1ec:	strh	r0, [sp]
   1c1f0:	mov	r0, r5
   1c1f4:	mov	r1, #14
   1c1f8:	mov	r2, r6
   1c1fc:	bl	127d0 <fcntl64@plt>
   1c200:	cmn	r0, #1
   1c204:	bne	1c220 <__gcov_flush@@Base+0x468>
   1c208:	bl	12758 <__errno_location@plt>
   1c20c:	ldr	r0, [r0]
   1c210:	cmp	r0, #4
   1c214:	beq	1c1f0 <__gcov_flush@@Base+0x438>
   1c218:	cmp	r0, #37	; 0x25
   1c21c:	mvneq	r4, #0
   1c220:	mov	r0, r4
   1c224:	sub	sp, fp, #16
   1c228:	pop	{r4, r5, r6, sl, fp, pc}
   1c22c:	push	{r4, r5, fp, lr}
   1c230:	add	fp, sp, #8
   1c234:	sub	sp, sp, #32
   1c238:	mov	r2, #182	; 0xb6
   1c23c:	orr	r2, r2, #256	; 0x100
   1c240:	mov	r1, #66	; 0x42
   1c244:	bl	126d4 <open64@plt>
   1c248:	cmp	r0, #0
   1c24c:	bmi	1c2c8 <__gcov_flush@@Base+0x510>
   1c250:	mov	r4, r0
   1c254:	mov	r0, #0
   1c258:	str	r0, [sp, #8]
   1c25c:	strh	r0, [sp, #2]
   1c260:	str	r0, [sp, #12]
   1c264:	str	r0, [sp, #16]
   1c268:	str	r0, [sp, #20]
   1c26c:	bl	1271c <getpid@plt>
   1c270:	mov	r5, sp
   1c274:	str	r0, [sp, #24]
   1c278:	mov	r0, #1
   1c27c:	strh	r0, [sp]
   1c280:	mov	r0, r4
   1c284:	mov	r1, #14
   1c288:	mov	r2, r5
   1c28c:	bl	127d0 <fcntl64@plt>
   1c290:	cmn	r0, #1
   1c294:	bne	1c2b0 <__gcov_flush@@Base+0x4f8>
   1c298:	bl	12758 <__errno_location@plt>
   1c29c:	ldr	r0, [r0]
   1c2a0:	cmp	r0, #4
   1c2a4:	beq	1c280 <__gcov_flush@@Base+0x4c8>
   1c2a8:	cmp	r0, #37	; 0x25
   1c2ac:	beq	1c2d4 <__gcov_flush@@Base+0x51c>
   1c2b0:	ldr	r1, [pc, #76]	; 1c304 <__gcov_flush@@Base+0x54c>
   1c2b4:	mov	r0, r4
   1c2b8:	add	r1, pc, r1
   1c2bc:	bl	12620 <fdopen@plt>
   1c2c0:	sub	sp, fp, #8
   1c2c4:	pop	{r4, r5, fp, pc}
   1c2c8:	mov	r0, #0
   1c2cc:	sub	sp, fp, #8
   1c2d0:	pop	{r4, r5, fp, pc}
   1c2d4:	ldr	r1, [pc, #28]	; 1c2f8 <__gcov_flush@@Base+0x540>
   1c2d8:	ldr	r2, [pc, #28]	; 1c2fc <__gcov_flush@@Base+0x544>
   1c2dc:	ldr	r0, [pc, #28]	; 1c300 <__gcov_flush@@Base+0x548>
   1c2e0:	add	r1, pc, r1
   1c2e4:	add	r2, pc, r2
   1c2e8:	ldr	r0, [pc, r0]
   1c2ec:	ldr	r0, [r0]
   1c2f0:	bl	1274c <fprintf@plt>
   1c2f4:	b	1c2b0 <__gcov_flush@@Base+0x4f8>
   1c2f8:	andeq	r1, r0, r2, lsl #21
   1c2fc:	andeq	r1, r0, r7, asr #21
   1c300:	ldrdeq	r1, [r1], -r0
   1c304:	andeq	r1, r0, r8, lsl #18
   1c308:	push	{r4, r5, r6, sl, fp, lr}
   1c30c:	add	fp, sp, #16
   1c310:	mov	r6, r0
   1c314:	ldr	r0, [pc, #120]	; 1c394 <__gcov_flush@@Base+0x5dc>
   1c318:	mov	r4, r1
   1c31c:	add	r0, pc, r0
   1c320:	bl	126e0 <getenv@plt>
   1c324:	mov	r5, r0
   1c328:	ldr	r0, [pc, #104]	; 1c398 <__gcov_flush@@Base+0x5e0>
   1c32c:	add	r0, pc, r0
   1c330:	bl	126e0 <getenv@plt>
   1c334:	mov	r1, #0
   1c338:	str	r1, [r4]
   1c33c:	str	r1, [r6]
   1c340:	cmp	r5, #0
   1c344:	ldrbne	r2, [r5]
   1c348:	cmpne	r2, #0
   1c34c:	bne	1c358 <__gcov_flush@@Base+0x5a0>
   1c350:	mov	r0, r1
   1c354:	pop	{r4, r5, r6, sl, fp, pc}
   1c358:	cmp	r0, #0
   1c35c:	beq	1c374 <__gcov_flush@@Base+0x5bc>
   1c360:	mov	r1, #0
   1c364:	mov	r2, #10
   1c368:	bl	1262c <strtol@plt>
   1c36c:	bic	r0, r0, r0, asr #31
   1c370:	b	1c378 <__gcov_flush@@Base+0x5c0>
   1c374:	mov	r0, #0
   1c378:	str	r0, [r6]
   1c37c:	mov	r0, r5
   1c380:	bl	12734 <strlen@plt>
   1c384:	mov	r1, r5
   1c388:	str	r0, [r4]
   1c38c:	mov	r0, r1
   1c390:	pop	{r4, r5, r6, sl, fp, pc}
   1c394:			; <UNDEFINED> instruction: 0x00001abd
   1c398:			; <UNDEFINED> instruction: 0x00001ab9
   1c39c:	push	{r4, r5, r6, r7, fp, lr}
   1c3a0:	add	fp, sp, #16
   1c3a4:	mov	r6, r0
   1c3a8:	ldr	r0, [fp, #8]
   1c3ac:	mov	r5, r3
   1c3b0:	mov	r7, r2
   1c3b4:	mov	r4, r1
   1c3b8:	cmp	r0, #1
   1c3bc:	blt	1c3f4 <__gcov_flush@@Base+0x63c>
   1c3c0:	add	r1, r4, #1
   1c3c4:	mov	r2, #0
   1c3c8:	b	1c3e0 <__gcov_flush@@Base+0x628>
   1c3cc:	add	r2, r2, #1
   1c3d0:	mov	r4, r1
   1c3d4:	add	r1, r1, #1
   1c3d8:	cmp	r2, r0
   1c3dc:	bge	1c3f4 <__gcov_flush@@Base+0x63c>
   1c3e0:	ldrb	r3, [r1]
   1c3e4:	cmp	r3, #47	; 0x2f
   1c3e8:	beq	1c3cc <__gcov_flush@@Base+0x614>
   1c3ec:	cmp	r3, #0
   1c3f0:	bne	1c3d4 <__gcov_flush@@Base+0x61c>
   1c3f4:	mov	r0, r6
   1c3f8:	mov	r1, r7
   1c3fc:	mov	r2, r5
   1c400:	bl	12674 <memcpy@plt>
   1c404:	add	r0, r5, r7
   1c408:	ldrb	r0, [r0, #-1]
   1c40c:	cmp	r0, #47	; 0x2f
   1c410:	movne	r0, #47	; 0x2f
   1c414:	strbne	r0, [r6, r5]
   1c418:	mov	r0, r4
   1c41c:	addne	r5, r5, #1
   1c420:	add	r5, r6, r5
   1c424:	bl	12734 <strlen@plt>
   1c428:	add	r2, r0, #1
   1c42c:	mov	r0, r5
   1c430:	mov	r1, r4
   1c434:	pop	{r4, r5, r6, r7, fp, lr}
   1c438:	b	12674 <memcpy@plt>
   1c43c:	mov	r1, #47	; 0x2f
   1c440:	b	12740 <strchr@plt>
   1c444:	mov	r1, #47	; 0x2f
   1c448:	b	127dc <strrchr@plt>
   1c44c:	push	{fp, lr}
   1c450:	mov	fp, sp
   1c454:	sub	sp, sp, #8
   1c458:	mov	r0, #0
   1c45c:	str	r0, [sp, #4]
   1c460:	add	r1, sp, #4
   1c464:	mov	r0, #2
   1c468:	bl	127a0 <prctl@plt>
   1c46c:	ldr	r1, [sp, #4]
   1c470:	cmp	r0, #0
   1c474:	cmpeq	r1, #9
   1c478:	bne	1c48c <__gcov_flush@@Base+0x6d4>
   1c47c:	mov	r0, #1
   1c480:	mov	r1, #0
   1c484:	bl	127a0 <prctl@plt>
   1c488:	ldr	r1, [sp, #4]
   1c48c:	sub	r0, r1, #9
   1c490:	clz	r0, r0
   1c494:	lsr	r0, r0, #5
   1c498:	mov	sp, fp
   1c49c:	pop	{fp, pc}
   1c4a0:	mov	r0, #1
   1c4a4:	mov	r1, #9
   1c4a8:	b	127a0 <prctl@plt>

0001c4ac <__libc_csu_init@@Base>:
   1c4ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c4b0:	mov	r7, r0
   1c4b4:	ldr	r6, [pc, #72]	; 1c504 <__libc_csu_init@@Base+0x58>
   1c4b8:	ldr	r5, [pc, #72]	; 1c508 <__libc_csu_init@@Base+0x5c>
   1c4bc:	add	r6, pc, r6
   1c4c0:	add	r5, pc, r5
   1c4c4:	sub	r6, r6, r5
   1c4c8:	mov	r8, r1
   1c4cc:	mov	r9, r2
   1c4d0:	bl	12600 <fdopen@plt-0x20>
   1c4d4:	asrs	r6, r6, #2
   1c4d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c4dc:	mov	r4, #0
   1c4e0:	add	r4, r4, #1
   1c4e4:	ldr	r3, [r5], #4
   1c4e8:	mov	r2, r9
   1c4ec:	mov	r1, r8
   1c4f0:	mov	r0, r7
   1c4f4:	blx	r3
   1c4f8:	cmp	r6, r4
   1c4fc:	bne	1c4e0 <__libc_csu_init@@Base+0x34>
   1c500:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c504:	andeq	r1, r1, r0, asr #20
   1c508:	andeq	r1, r1, r8, lsr #20

0001c50c <__libc_csu_fini@@Base>:
   1c50c:	bx	lr
   1c510:	ldr	r3, [pc, #12]	; 1c524 <__libc_csu_fini@@Base+0x18>
   1c514:	mov	r1, #0
   1c518:	add	r3, pc, r3
   1c51c:	ldr	r2, [r3]
   1c520:	b	12764 <__cxa_atexit@plt>
   1c524:	andeq	r1, r1, ip, lsr #23

Disassembly of section .fini:

0001c528 <.fini>:
   1c528:	push	{r3, lr}
   1c52c:	pop	{r3, pc}
