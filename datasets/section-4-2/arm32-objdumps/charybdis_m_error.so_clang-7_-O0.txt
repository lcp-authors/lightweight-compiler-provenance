
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

000005f0 <_init>:
 5f0:	push	{r3, lr}
 5f4:	bl	6a0 <call_weak_fn>
 5f8:	pop	{r3, pc}

Disassembly of section .plt:

000005fc <.plt>:
 5fc:	push	{lr}		; (str lr, [sp, #-4]!)
 600:	ldr	lr, [pc, #4]	; 60c <.plt+0x10>
 604:	add	lr, pc, lr
 608:	ldr	pc, [lr, #8]!
 60c:	.word	0x000109f4

00000610 <__cxa_finalize@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #16, 20	; 0x10000
 618:	ldr	pc, [ip, #2548]!	; 0x9f4

0000061c <rb_strncasecmp@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #16, 20	; 0x10000
 624:	ldr	pc, [ip, #2540]!	; 0x9ec

00000628 <sendto_realops_snomask@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #16, 20	; 0x10000
 630:	ldr	pc, [ip, #2532]!	; 0x9e4

00000634 <__gmon_start__@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #16, 20	; 0x10000
 63c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000640 <strlen@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #16, 20	; 0x10000
 648:	ldr	pc, [ip, #2516]!	; 0x9d4

0000064c <strchr@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #16, 20	; 0x10000
 654:	ldr	pc, [ip, #2508]!	; 0x9cc

00000658 <snprintf@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #16, 20	; 0x10000
 660:	ldr	pc, [ip, #2500]!	; 0x9c4

00000664 <is_remote_connect@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #16, 20	; 0x10000
 66c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000670 <ilog@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #16, 20	; 0x10000
 678:	ldr	pc, [ip, #2484]!	; 0x9b4

0000067c <log_client_name@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #16, 20	; 0x10000
 684:	ldr	pc, [ip, #2476]!	; 0x9ac

00000688 <exit_client@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #16, 20	; 0x10000
 690:	ldr	pc, [ip, #2468]!	; 0x9a4

00000694 <strncmp@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #16, 20	; 0x10000
 69c:	ldr	pc, [ip, #2460]!	; 0x99c

Disassembly of section .text:

000006a0 <call_weak_fn>:
 6a0:	ldr	r3, [pc, #20]	; 6bc <call_weak_fn+0x1c>
 6a4:	ldr	r2, [pc, #20]	; 6c0 <call_weak_fn+0x20>
 6a8:	add	r3, pc, r3
 6ac:	ldr	r2, [r3, r2]
 6b0:	cmp	r2, #0
 6b4:	bxeq	lr
 6b8:	b	634 <__gmon_start__@plt>
 6bc:	.word	0x00010950
 6c0:	.word	0x00000044

000006c4 <deregister_tm_clones>:
 6c4:	ldr	r0, [pc, #44]	; 6f8 <deregister_tm_clones+0x34>
 6c8:	ldr	r3, [pc, #44]	; 6fc <deregister_tm_clones+0x38>
 6cc:	add	r0, pc, r0
 6d0:	add	r3, pc, r3
 6d4:	cmp	r3, r0
 6d8:	ldr	r3, [pc, #32]	; 700 <deregister_tm_clones+0x3c>
 6dc:	add	r3, pc, r3
 6e0:	bxeq	lr
 6e4:	ldr	r2, [pc, #24]	; 704 <deregister_tm_clones+0x40>
 6e8:	ldr	r3, [r3, r2]
 6ec:	cmp	r3, #0
 6f0:	bxeq	lr
 6f4:	bx	r3
 6f8:	.word	0x000109f8
 6fc:	.word	0x000109f4
 700:	.word	0x0001091c
 704:	.word	0x00000040

00000708 <register_tm_clones>:
 708:	ldr	r0, [pc, #56]	; 748 <register_tm_clones+0x40>
 70c:	ldr	r3, [pc, #56]	; 74c <register_tm_clones+0x44>
 710:	add	r0, pc, r0
 714:	add	r3, pc, r3
 718:	sub	r1, r3, r0
 71c:	ldr	r3, [pc, #44]	; 750 <register_tm_clones+0x48>
 720:	asr	r1, r1, #2
 724:	add	r3, pc, r3
 728:	add	r1, r1, r1, lsr #31
 72c:	asrs	r1, r1, #1
 730:	bxeq	lr
 734:	ldr	r2, [pc, #24]	; 754 <register_tm_clones+0x4c>
 738:	ldr	r3, [r3, r2]
 73c:	cmp	r3, #0
 740:	bxeq	lr
 744:	bx	r3
 748:	.word	0x000109b4
 74c:	.word	0x000109b0
 750:	.word	0x000108d4
 754:	.word	0x00000048

00000758 <__do_global_dtors_aux>:
 758:	ldr	r3, [pc, #76]	; 7ac <__do_global_dtors_aux+0x54>
 75c:	ldr	r2, [pc, #76]	; 7b0 <__do_global_dtors_aux+0x58>
 760:	add	r3, pc, r3
 764:	add	r2, pc, r2
 768:	ldrb	r3, [r3]
 76c:	cmp	r3, #0
 770:	bxne	lr
 774:	ldr	r3, [pc, #56]	; 7b4 <__do_global_dtors_aux+0x5c>
 778:	push	{r4, lr}
 77c:	ldr	r3, [r2, r3]
 780:	cmp	r3, #0
 784:	beq	794 <__do_global_dtors_aux+0x3c>
 788:	ldr	r3, [pc, #40]	; 7b8 <__do_global_dtors_aux+0x60>
 78c:	ldr	r0, [pc, r3]
 790:	bl	610 <__cxa_finalize@plt>
 794:	bl	6c4 <deregister_tm_clones>
 798:	ldr	r3, [pc, #28]	; 7bc <__do_global_dtors_aux+0x64>
 79c:	mov	r2, #1
 7a0:	add	r3, pc, r3
 7a4:	strb	r2, [r3]
 7a8:	pop	{r4, pc}
 7ac:	.word	0x00010964
 7b0:	.word	0x00010894
 7b4:	.word	0x0000003c
 7b8:	.word	0x000108c0
 7bc:	.word	0x00010924

000007c0 <frame_dummy>:
 7c0:	b	708 <register_tm_clones>

000007c4 <m_error>:
 7c4:	push	{fp, lr}
 7c8:	mov	fp, sp
 7cc:	sub	sp, sp, #64	; 0x40
 7d0:	ldr	ip, [fp, #8]
 7d4:	ldr	lr, [pc, #548]	; a00 <m_error+0x23c>
 7d8:	ldr	lr, [pc, lr]
 7dc:	str	r0, [fp, #-4]
 7e0:	str	r1, [fp, #-8]
 7e4:	str	r2, [fp, #-12]
 7e8:	str	r3, [fp, #-16]
 7ec:	ldr	r0, [lr, #208]	; 0xd0
 7f0:	str	r0, [fp, #-24]	; 0xffffffe8
 7f4:	ldr	r0, [fp, #-16]
 7f8:	cmp	r0, #1
 7fc:	str	ip, [fp, #-28]	; 0xffffffe4
 800:	ble	828 <m_error+0x64>
 804:	ldr	r0, [fp, #8]
 808:	ldr	r0, [r0, #4]
 80c:	ldrb	r0, [r0]
 810:	cmp	r0, #0
 814:	beq	828 <m_error+0x64>
 818:	ldr	r0, [fp, #8]
 81c:	ldr	r0, [r0, #4]
 820:	str	r0, [sp, #32]
 824:	b	838 <m_error+0x74>
 828:	ldr	r0, [pc, #468]	; a04 <m_error+0x240>
 82c:	add	r0, pc, r0
 830:	str	r0, [sp, #32]
 834:	b	838 <m_error+0x74>
 838:	ldr	r0, [sp, #32]
 83c:	str	r0, [fp, #-20]	; 0xffffffec
 840:	ldr	r0, [fp, #-8]
 844:	ldrh	r0, [r0, #80]	; 0x50
 848:	cmp	r0, #32
 84c:	beq	870 <m_error+0xac>
 850:	ldr	r0, [fp, #-8]
 854:	ldrh	r0, [r0, #80]	; 0x50
 858:	cmp	r0, #2
 85c:	beq	870 <m_error+0xac>
 860:	ldr	r0, [fp, #-8]
 864:	ldrh	r0, [r0, #80]	; 0x50
 868:	cmp	r0, #1
 86c:	bne	89c <m_error+0xd8>
 870:	ldr	r0, [fp, #-12]
 874:	movw	r1, #1
 878:	bl	67c <log_client_name@plt>
 87c:	ldr	r1, [pc, #388]	; a08 <m_error+0x244>
 880:	add	r1, pc, r1
 884:	ldr	r3, [fp, #-20]	; 0xffffffec
 888:	movw	lr, #5
 88c:	str	r0, [sp, #28]
 890:	mov	r0, lr
 894:	ldr	r2, [sp, #28]
 898:	bl	670 <ilog@plt>
 89c:	ldr	r0, [fp, #-20]	; 0xffffffec
 8a0:	bl	bcc <is_safe_error>
 8a4:	tst	r0, #1
 8a8:	beq	8b4 <m_error+0xf0>
 8ac:	movw	r0, #0
 8b0:	str	r0, [fp, #-24]	; 0xffffffe8
 8b4:	ldr	r0, [fp, #-8]
 8b8:	ldrh	r0, [r0, #80]	; 0x50
 8bc:	cmp	r0, #32
 8c0:	beq	8e4 <m_error+0x120>
 8c4:	ldr	r0, [fp, #-8]
 8c8:	ldrh	r0, [r0, #80]	; 0x50
 8cc:	cmp	r0, #2
 8d0:	beq	8e4 <m_error+0x120>
 8d4:	ldr	r0, [fp, #-8]
 8d8:	ldrh	r0, [r0, #80]	; 0x50
 8dc:	cmp	r0, #1
 8e0:	bne	9dc <m_error+0x218>
 8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8e8:	cmp	r0, #2
 8ec:	bge	968 <m_error+0x1a4>
 8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8f4:	cmp	r0, #0
 8f8:	beq	908 <m_error+0x144>
 8fc:	movw	r0, #2
 900:	str	r0, [sp, #24]
 904:	b	92c <m_error+0x168>
 908:	ldr	r0, [fp, #-8]
 90c:	bl	664 <is_remote_connect@plt>
 910:	cmp	r0, #0
 914:	movw	r0, #0
 918:	movne	r0, #1
 91c:	tst	r0, #1
 920:	movw	r0, #256	; 0x100
 924:	moveq	r0, #0
 928:	str	r0, [sp, #24]
 92c:	ldr	r0, [sp, #24]
 930:	ldr	r1, [pc, #212]	; a0c <m_error+0x248>
 934:	add	r2, pc, r1
 938:	ldr	r1, [fp, #-8]
 93c:	add	r3, r1, #88	; 0x58
 940:	ldr	r1, [fp, #-20]	; 0xffffffec
 944:	movw	ip, #256	; 0x100
 948:	str	r0, [sp, #20]
 94c:	mov	r0, ip
 950:	ldr	ip, [sp, #20]
 954:	str	r1, [sp, #16]
 958:	mov	r1, ip
 95c:	ldr	lr, [sp, #16]
 960:	str	lr, [sp]
 964:	bl	628 <sendto_realops_snomask@plt>
 968:	ldr	r0, [fp, #-24]	; 0xffffffe8
 96c:	cmp	r0, #0
 970:	ble	9d8 <m_error+0x214>
 974:	ldr	r0, [fp, #-24]	; 0xffffffe8
 978:	cmp	r0, #1
 97c:	movw	r0, #0
 980:	moveq	r0, #1
 984:	tst	r0, #1
 988:	movw	r0, #1
 98c:	moveq	r0, #0
 990:	ldr	r1, [fp, #-8]
 994:	str	r0, [sp, #12]
 998:	mov	r0, r1
 99c:	bl	664 <is_remote_connect@plt>
 9a0:	ldr	r1, [pc, #104]	; a10 <m_error+0x24c>
 9a4:	add	r2, pc, r1
 9a8:	cmp	r0, #0
 9ac:	movw	r0, #0
 9b0:	movne	r0, #1
 9b4:	tst	r0, #1
 9b8:	movw	r0, #256	; 0x100
 9bc:	mov	r1, r0
 9c0:	moveq	r1, #0
 9c4:	ldr	lr, [sp, #12]
 9c8:	orr	r1, lr, r1
 9cc:	ldr	lr, [fp, #-8]
 9d0:	add	r3, lr, #88	; 0x58
 9d4:	bl	628 <sendto_realops_snomask@plt>
 9d8:	b	9dc <m_error+0x218>
 9dc:	ldr	r0, [pc, #48]	; a14 <m_error+0x250>
 9e0:	add	r3, pc, r0
 9e4:	ldr	r0, [fp, #-8]
 9e8:	ldr	r1, [fp, #-12]
 9ec:	ldr	r2, [fp, #-12]
 9f0:	bl	688 <exit_client@plt>
 9f4:	str	r0, [sp, #8]
 9f8:	mov	sp, fp
 9fc:	pop	{fp, pc}
 a00:	.word	0x00010870
 a04:	.word	0x00000596
 a08:	.word	0x00000545
 a0c:	.word	0x000004b4
 a10:	.word	0x00000459
 a14:	.word	0x000003dc

00000a18 <ms_error>:
 a18:	push	{r4, sl, fp, lr}
 a1c:	add	fp, sp, #8
 a20:	sub	sp, sp, #64	; 0x40
 a24:	ldr	ip, [fp, #8]
 a28:	ldr	lr, [pc, #392]	; bb8 <ms_error+0x1a0>
 a2c:	ldr	lr, [pc, lr]
 a30:	str	r0, [fp, #-12]
 a34:	str	r1, [fp, #-16]
 a38:	str	r2, [fp, #-20]	; 0xffffffec
 a3c:	str	r3, [fp, #-24]	; 0xffffffe8
 a40:	ldr	r0, [lr, #208]	; 0xd0
 a44:	str	r0, [fp, #-32]	; 0xffffffe0
 a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
 a4c:	cmp	r0, #1
 a50:	str	ip, [sp, #36]	; 0x24
 a54:	ble	a7c <ms_error+0x64>
 a58:	ldr	r0, [fp, #8]
 a5c:	ldr	r0, [r0, #4]
 a60:	ldrb	r0, [r0]
 a64:	cmp	r0, #0
 a68:	beq	a7c <ms_error+0x64>
 a6c:	ldr	r0, [fp, #8]
 a70:	ldr	r0, [r0, #4]
 a74:	str	r0, [sp, #32]
 a78:	b	a8c <ms_error+0x74>
 a7c:	ldr	r0, [pc, #312]	; bbc <ms_error+0x1a4>
 a80:	add	r0, pc, r0
 a84:	str	r0, [sp, #32]
 a88:	b	a8c <ms_error+0x74>
 a8c:	ldr	r0, [sp, #32]
 a90:	str	r0, [fp, #-28]	; 0xffffffe4
 a94:	ldr	r0, [fp, #-20]	; 0xffffffec
 a98:	movw	r1, #1
 a9c:	bl	67c <log_client_name@plt>
 aa0:	ldr	r1, [pc, #280]	; bc0 <ms_error+0x1a8>
 aa4:	add	r1, pc, r1
 aa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 aac:	movw	lr, #5
 ab0:	str	r0, [sp, #28]
 ab4:	mov	r0, lr
 ab8:	ldr	r2, [sp, #28]
 abc:	bl	670 <ilog@plt>
 ac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
 ac4:	bl	bcc <is_safe_error>
 ac8:	tst	r0, #1
 acc:	beq	ad8 <ms_error+0xc0>
 ad0:	movw	r0, #0
 ad4:	str	r0, [fp, #-32]	; 0xffffffe0
 ad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 adc:	cmp	r0, #2
 ae0:	bne	ae8 <ms_error+0xd0>
 ae4:	b	bb0 <ms_error+0x198>
 ae8:	ldr	r0, [fp, #-16]
 aec:	ldr	r1, [fp, #-20]	; 0xffffffec
 af0:	cmp	r0, r1
 af4:	bne	b50 <ms_error+0x138>
 af8:	ldr	r0, [pc, #200]	; bc8 <ms_error+0x1b0>
 afc:	add	r2, pc, r0
 b00:	ldr	r0, [fp, #-32]	; 0xffffffe0
 b04:	cmp	r0, #0
 b08:	movw	r0, #0
 b0c:	movne	r0, #1
 b10:	tst	r0, #1
 b14:	movw	r0, #2
 b18:	moveq	r0, #0
 b1c:	ldr	r1, [fp, #-16]
 b20:	add	r3, r1, #88	; 0x58
 b24:	ldr	r1, [fp, #-28]	; 0xffffffe4
 b28:	movw	ip, #256	; 0x100
 b2c:	str	r0, [sp, #24]
 b30:	mov	r0, ip
 b34:	ldr	ip, [sp, #24]
 b38:	str	r1, [sp, #20]
 b3c:	mov	r1, ip
 b40:	ldr	lr, [sp, #20]
 b44:	str	lr, [sp]
 b48:	bl	628 <sendto_realops_snomask@plt>
 b4c:	b	bb0 <ms_error+0x198>
 b50:	ldr	r0, [pc, #108]	; bc4 <ms_error+0x1ac>
 b54:	add	r2, pc, r0
 b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
 b5c:	cmp	r0, #0
 b60:	movw	r0, #0
 b64:	movne	r0, #1
 b68:	tst	r0, #1
 b6c:	movw	r0, #2
 b70:	moveq	r0, #0
 b74:	ldr	r1, [fp, #-20]	; 0xffffffec
 b78:	add	r3, r1, #88	; 0x58
 b7c:	ldr	r1, [fp, #-16]
 b80:	add	r1, r1, #88	; 0x58
 b84:	ldr	ip, [fp, #-28]	; 0xffffffe4
 b88:	movw	lr, #256	; 0x100
 b8c:	str	r0, [sp, #16]
 b90:	mov	r0, lr
 b94:	ldr	lr, [sp, #16]
 b98:	str	r1, [sp, #12]
 b9c:	mov	r1, lr
 ba0:	ldr	r4, [sp, #12]
 ba4:	str	r4, [sp]
 ba8:	str	ip, [sp, #4]
 bac:	bl	628 <sendto_realops_snomask@plt>
 bb0:	sub	sp, fp, #8
 bb4:	pop	{r4, sl, fp, pc}
 bb8:	.word	0x0001061c
 bbc:	.word	0x00000342
 bc0:	.word	0x00000321
 bc4:	.word	0x00000323
 bc8:	.word	0x000002ec

00000bcc <is_safe_error>:
 bcc:	push	{fp, lr}
 bd0:	mov	fp, sp
 bd4:	sub	sp, sp, #128	; 0x80
 bd8:	ldr	r1, [pc, #452]	; da4 <is_safe_error+0x1d8>
 bdc:	add	r1, pc, r1
 be0:	str	r0, [fp, #-8]
 be4:	ldr	r0, [fp, #-8]
 be8:	movw	r2, #25
 bec:	bl	694 <strncmp@plt>
 bf0:	cmp	r0, #0
 bf4:	bne	c08 <is_safe_error+0x3c>
 bf8:	movw	r0, #1
 bfc:	and	r0, r0, #1
 c00:	strb	r0, [fp, #-1]
 c04:	b	d94 <is_safe_error+0x1c8>
 c08:	ldr	r0, [pc, #408]	; da8 <is_safe_error+0x1dc>
 c0c:	add	r2, pc, r0
 c10:	ldr	r0, [pc, #404]	; dac <is_safe_error+0x1e0>
 c14:	ldr	r0, [pc, r0]
 c18:	add	r3, r0, #88	; 0x58
 c1c:	add	r0, sp, #20
 c20:	movw	r1, #100	; 0x64
 c24:	bl	658 <snprintf@plt>
 c28:	add	r1, sp, #20
 c2c:	ldr	r2, [fp, #-8]
 c30:	str	r0, [sp, #12]
 c34:	mov	r0, r1
 c38:	str	r2, [sp, #8]
 c3c:	str	r1, [sp, #4]
 c40:	bl	640 <strlen@plt>
 c44:	ldr	r1, [sp, #8]
 c48:	str	r0, [sp]
 c4c:	mov	r0, r1
 c50:	ldr	r1, [sp, #4]
 c54:	ldr	r2, [sp]
 c58:	bl	694 <strncmp@plt>
 c5c:	cmp	r0, #0
 c60:	bne	c74 <is_safe_error+0xa8>
 c64:	movw	r0, #1
 c68:	and	r0, r0, #1
 c6c:	strb	r0, [fp, #-1]
 c70:	b	d94 <is_safe_error+0x1c8>
 c74:	ldr	r0, [pc, #308]	; db0 <is_safe_error+0x1e4>
 c78:	add	r1, pc, r0
 c7c:	ldr	r0, [fp, #-8]
 c80:	movw	r2, #11
 c84:	bl	694 <strncmp@plt>
 c88:	cmp	r0, #0
 c8c:	bne	ca0 <is_safe_error+0xd4>
 c90:	movw	r0, #1
 c94:	and	r0, r0, #1
 c98:	strb	r0, [fp, #-1]
 c9c:	b	d94 <is_safe_error+0x1c8>
 ca0:	ldr	r0, [pc, #268]	; db4 <is_safe_error+0x1e8>
 ca4:	add	r1, pc, r0
 ca8:	ldr	r0, [fp, #-8]
 cac:	movw	r2, #14
 cb0:	bl	694 <strncmp@plt>
 cb4:	cmp	r0, #0
 cb8:	bne	ccc <is_safe_error+0x100>
 cbc:	movw	r0, #1
 cc0:	and	r0, r0, #1
 cc4:	strb	r0, [fp, #-1]
 cc8:	b	d94 <is_safe_error+0x1c8>
 ccc:	ldr	r0, [pc, #228]	; db8 <is_safe_error+0x1ec>
 cd0:	add	r1, pc, r0
 cd4:	ldr	r0, [fp, #-8]
 cd8:	movw	r2, #12
 cdc:	bl	61c <rb_strncasecmp@plt>
 ce0:	cmp	r0, #0
 ce4:	bne	cf8 <is_safe_error+0x12c>
 ce8:	movw	r0, #0
 cec:	and	r0, r0, #1
 cf0:	strb	r0, [fp, #-1]
 cf4:	b	d94 <is_safe_error+0x1c8>
 cf8:	ldr	r0, [fp, #-8]
 cfc:	movw	r1, #91	; 0x5b
 d00:	bl	64c <strchr@plt>
 d04:	movw	r1, #0
 d08:	cmp	r0, r1
 d0c:	beq	d20 <is_safe_error+0x154>
 d10:	movw	r0, #0
 d14:	and	r0, r0, #1
 d18:	strb	r0, [fp, #-1]
 d1c:	b	d94 <is_safe_error+0x1c8>
 d20:	ldr	r0, [fp, #-8]
 d24:	movw	r1, #46	; 0x2e
 d28:	bl	64c <strchr@plt>
 d2c:	str	r0, [sp, #16]
 d30:	ldr	r0, [sp, #16]
 d34:	movw	r1, #0
 d38:	cmp	r0, r1
 d3c:	beq	d60 <is_safe_error+0x194>
 d40:	ldr	r0, [sp, #16]
 d44:	ldrb	r0, [r0, #1]
 d48:	cmp	r0, #0
 d4c:	beq	d60 <is_safe_error+0x194>
 d50:	movw	r0, #0
 d54:	and	r0, r0, #1
 d58:	strb	r0, [fp, #-1]
 d5c:	b	d94 <is_safe_error+0x1c8>
 d60:	ldr	r0, [fp, #-8]
 d64:	movw	r1, #58	; 0x3a
 d68:	bl	64c <strchr@plt>
 d6c:	movw	r1, #0
 d70:	cmp	r0, r1
 d74:	beq	d88 <is_safe_error+0x1bc>
 d78:	movw	r0, #0
 d7c:	and	r0, r0, #1
 d80:	strb	r0, [fp, #-1]
 d84:	b	d94 <is_safe_error+0x1c8>
 d88:	movw	r0, #1
 d8c:	and	r0, r0, #1
 d90:	strb	r0, [fp, #-1]
 d94:	ldrb	r0, [fp, #-1]
 d98:	and	r0, r0, #1
 d9c:	mov	sp, fp
 da0:	pop	{fp, pc}
 da4:	.word	0x0000023c
 da8:	.word	0x00000226
 dac:	.word	0x00010430
 db0:	.word	0x000001d7
 db4:	.word	0x000001b7
 db8:	.word	0x0000019a

Disassembly of section .fini:

00000dbc <_fini>:
 dbc:	push	{r3, lr}
 dc0:	pop	{r3, pc}
