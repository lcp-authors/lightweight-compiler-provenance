
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000044a4 <.init>:
    44a4:	push	{r3, lr}
    44a8:	bl	4800 <__assert_fail@plt+0x18>
    44ac:	pop	{r3, pc}

Disassembly of section .plt:

000044b0 <calloc@plt-0x14>:
    44b0:	push	{lr}		; (str lr, [sp, #-4]!)
    44b4:	ldr	lr, [pc, #4]	; 44c0 <calloc@plt-0x4>
    44b8:	add	lr, pc, lr
    44bc:	ldr	pc, [lr, #8]!
    44c0:	andeq	r5, r2, r0, asr #22

000044c4 <calloc@plt>:
    44c4:	add	ip, pc, #0, 12
    44c8:	add	ip, ip, #151552	; 0x25000
    44cc:	ldr	pc, [ip, #2880]!	; 0xb40

000044d0 <raise@plt>:
    44d0:	add	ip, pc, #0, 12
    44d4:	add	ip, ip, #151552	; 0x25000
    44d8:	ldr	pc, [ip, #2872]!	; 0xb38

000044dc <gen_hop_pattern@plt>:
    44dc:	add	ip, pc, #0, 12
    44e0:	add	ip, ip, #151552	; 0x25000
    44e4:	ldr	pc, [ip, #2864]!	; 0xb30

000044e8 <__cxa_finalize@plt>:
    44e8:	add	ip, pc, #0, 12
    44ec:	add	ip, ip, #151552	; 0x25000
    44f0:	ldr	pc, [ip, #2856]!	; 0xb28

000044f4 <btbb_get_payload_packed@plt>:
    44f4:	add	ip, pc, #0, 12
    44f8:	add	ip, ip, #151552	; 0x25000
    44fc:	ldr	pc, [ip, #2848]!	; 0xb20

00004500 <printf@plt>:
    4500:	add	ip, pc, #0, 12
    4504:	add	ip, ip, #151552	; 0x25000
    4508:	ldr	pc, [ip, #2840]!	; 0xb18

0000450c <fopen@plt>:
    450c:	add	ip, pc, #0, 12
    4510:	add	ip, ip, #151552	; 0x25000
    4514:	ldr	pc, [ip, #2832]!	; 0xb10

00004518 <lell_packet_is_data@plt>:
    4518:	add	ip, pc, #0, 12
    451c:	add	ip, ip, #151552	; 0x25000
    4520:	ldr	pc, [ip, #2824]!	; 0xb08

00004524 <fflush@plt>:
    4524:	add	ip, pc, #0, 12
    4528:	add	ip, ip, #151552	; 0x25000
    452c:	ldr	pc, [ip, #2816]!	; 0xb00

00004530 <btbb_packet_set_flag@plt>:
    4530:	add	ip, pc, #0, 12
    4534:	add	ip, ip, #151552	; 0x25000
    4538:	ldr	pc, [ip, #2808]!	; 0xaf8

0000453c <pcapng_append_interface_option@plt>:
    453c:	add	ip, pc, #0, 12
    4540:	add	ip, ip, #151552	; 0x25000
    4544:	ldr	pc, [ip, #2800]!	; 0xaf0

00004548 <free@plt>:
    4548:	add	ip, pc, #0, 12
    454c:	add	ip, ip, #151552	; 0x25000
    4550:	ldr	pc, [ip, #2792]!	; 0xae8

00004554 <btbb_packet_get_modulation@plt>:
    4554:	add	ip, pc, #0, 12
    4558:	add	ip, ip, #151552	; 0x25000
    455c:	ldr	pc, [ip, #2784]!	; 0xae0

00004560 <btbb_packet_get_ac_errors@plt>:
    4560:	add	ip, pc, #0, 12
    4564:	add	ip, ip, #151552	; 0x25000
    4568:	ldr	pc, [ip, #2776]!	; 0xad8

0000456c <memcpy@plt>:
    456c:	add	ip, pc, #0, 12
    4570:	add	ip, ip, #151552	; 0x25000
    4574:	ldr	pc, [ip, #2768]!	; 0xad0

00004578 <btbb_uap_from_header@plt>:
    4578:	add	ip, pc, #0, 12
    457c:	add	ip, ip, #151552	; 0x25000
    4580:	ldr	pc, [ip, #2760]!	; 0xac8

00004584 <fhs@plt>:
    4584:	add	ip, pc, #0, 12
    4588:	add	ip, ip, #151552	; 0x25000
    458c:	ldr	pc, [ip, #2752]!	; 0xac0

00004590 <EV4@plt>:
    4590:	add	ip, pc, #0, 12
    4594:	add	ip, ip, #151552	; 0x25000
    4598:	ldr	pc, [ip, #2744]!	; 0xab8

0000459c <btbb_header_present@plt>:
    459c:	add	ip, pc, #0, 12
    45a0:	add	ip, ip, #151552	; 0x25000
    45a4:	ldr	pc, [ip, #2736]!	; 0xab0

000045a8 <pcapng_create@plt>:
    45a8:	add	ip, pc, #0, 12
    45ac:	add	ip, ip, #151552	; 0x25000
    45b0:	ldr	pc, [ip, #2728]!	; 0xaa8

000045b4 <DM@plt>:
    45b4:	add	ip, pc, #0, 12
    45b8:	add	ip, ip, #151552	; 0x25000
    45bc:	ldr	pc, [ip, #2720]!	; 0xaa0

000045c0 <HV@plt>:
    45c0:	add	ip, pc, #0, 12
    45c4:	add	ip, ip, #151552	; 0x25000
    45c8:	ldr	pc, [ip, #2712]!	; 0xa98

000045cc <perror@plt>:
    45cc:	add	ip, pc, #0, 12
    45d0:	add	ip, ip, #151552	; 0x25000
    45d4:	ldr	pc, [ip, #2704]!	; 0xa90

000045d8 <btbb_packet_set_uap@plt>:
    45d8:	add	ip, pc, #0, 12
    45dc:	add	ip, ip, #151552	; 0x25000
    45e0:	ldr	pc, [ip, #2696]!	; 0xa88

000045e4 <fwrite@plt>:
    45e4:	add	ip, pc, #0, 12
    45e8:	add	ip, ip, #151552	; 0x25000
    45ec:	ldr	pc, [ip, #2688]!	; 0xa80

000045f0 <crc_check@plt>:
    45f0:	add	ip, pc, #0, 12
    45f4:	add	ip, ip, #151552	; 0x25000
    45f8:	ldr	pc, [ip, #2680]!	; 0xa78

000045fc <btbb_decode@plt>:
    45fc:	add	ip, pc, #0, 12
    4600:	add	ip, ip, #151552	; 0x25000
    4604:	ldr	pc, [ip, #2672]!	; 0xa70

00004608 <btbb_winnow@plt>:
    4608:	add	ip, pc, #0, 12
    460c:	add	ip, ip, #151552	; 0x25000
    4610:	ldr	pc, [ip, #2664]!	; 0xa68

00004614 <get_hop_pattern@plt>:
    4614:	add	ip, pc, #0, 12
    4618:	add	ip, ip, #151552	; 0x25000
    461c:	ldr	pc, [ip, #2656]!	; 0xa60

00004620 <puts@plt>:
    4620:	add	ip, pc, #0, 12
    4624:	add	ip, ip, #151552	; 0x25000
    4628:	ldr	pc, [ip, #2648]!	; 0xa58

0000462c <malloc@plt>:
    462c:	add	ip, pc, #0, 12
    4630:	add	ip, ip, #151552	; 0x25000
    4634:	ldr	pc, [ip, #2640]!	; 0xa50

00004638 <try_hop@plt>:
    4638:	add	ip, pc, #0, 12
    463c:	add	ip, ip, #151552	; 0x25000
    4640:	ldr	pc, [ip, #2632]!	; 0xa48

00004644 <__gmon_start__@plt>:
    4644:	add	ip, pc, #0, 12
    4648:	add	ip, ip, #151552	; 0x25000
    464c:	ldr	pc, [ip, #2624]!	; 0xa40

00004650 <open@plt>:
    4650:	add	ip, pc, #0, 12
    4654:	add	ip, ip, #151552	; 0x25000
    4658:	ldr	pc, [ip, #2616]!	; 0xa38

0000465c <__ctype_b_loc@plt>:
    465c:	add	ip, pc, #0, 12
    4660:	add	ip, ip, #151552	; 0x25000
    4664:	ldr	pc, [ip, #2608]!	; 0xa30

00004668 <exit@plt>:
    4668:	add	ip, pc, #0, 12
    466c:	add	ip, ip, #151552	; 0x25000
    4670:	ldr	pc, [ip, #2600]!	; 0xa28

00004674 <btbb_packet_get_payload_length@plt>:
    4674:	add	ip, pc, #0, 12
    4678:	add	ip, ip, #151552	; 0x25000
    467c:	ldr	pc, [ip, #2592]!	; 0xa20

00004680 <bcmp@plt>:
    4680:	add	ip, pc, #0, 12
    4684:	add	ip, ip, #151552	; 0x25000
    4688:	ldr	pc, [ip, #2584]!	; 0xa18

0000468c <strlen@plt>:
    468c:	add	ip, pc, #0, 12
    4690:	add	ip, ip, #151552	; 0x25000
    4694:	ldr	pc, [ip, #2576]!	; 0xa10

00004698 <btbb_decode_header@plt>:
    4698:	add	ip, pc, #0, 12
    469c:	add	ip, ip, #151552	; 0x25000
    46a0:	ldr	pc, [ip, #2568]!	; 0xa08

000046a4 <mmap@plt>:
    46a4:	add	ip, pc, #0, 12
    46a8:	add	ip, ip, #151552	; 0x25000
    46ac:	ldr	pc, [ip, #2560]!	; 0xa00

000046b0 <btbb_packet_get_header_packed@plt>:
    46b0:	add	ip, pc, #0, 12
    46b4:	add	ip, ip, #151552	; 0x25000
    46b8:	ldr	pc, [ip, #2552]!	; 0x9f8

000046bc <lell_get_channel_k@plt>:
    46bc:	add	ip, pc, #0, 12
    46c0:	add	ip, ip, #151552	; 0x25000
    46c4:	ldr	pc, [ip, #2544]!	; 0x9f0

000046c8 <fprintf@plt>:
    46c8:	add	ip, pc, #0, 12
    46cc:	add	ip, ip, #151552	; 0x25000
    46d0:	ldr	pc, [ip, #2536]!	; 0x9e8

000046d4 <getpagesize@plt>:
    46d4:	add	ip, pc, #0, 12
    46d8:	add	ip, ip, #151552	; 0x25000
    46dc:	ldr	pc, [ip, #2528]!	; 0x9e0

000046e0 <pcapng_append_packet@plt>:
    46e0:	add	ip, pc, #0, 12
    46e4:	add	ip, ip, #151552	; 0x25000
    46e8:	ldr	pc, [ip, #2520]!	; 0x9d8

000046ec <btbb_packet_get_transport@plt>:
    46ec:	add	ip, pc, #0, 12
    46f0:	add	ip, ip, #151552	; 0x25000
    46f4:	ldr	pc, [ip, #2512]!	; 0x9d0

000046f8 <memset@plt>:
    46f8:	add	ip, pc, #0, 12
    46fc:	add	ip, ip, #151552	; 0x25000
    4700:	ldr	pc, [ip, #2504]!	; 0x9c8

00004704 <putchar@plt>:
    4704:	add	ip, pc, #0, 12
    4708:	add	ip, ip, #151552	; 0x25000
    470c:	ldr	pc, [ip, #2496]!	; 0x9c0

00004710 <strncpy@plt>:
    4710:	add	ip, pc, #0, 12
    4714:	add	ip, ip, #151552	; 0x25000
    4718:	ldr	pc, [ip, #2488]!	; 0x9b8

0000471c <EV3@plt>:
    471c:	add	ip, pc, #0, 12
    4720:	add	ip, ip, #151552	; 0x25000
    4724:	ldr	pc, [ip, #2480]!	; 0x9b0

00004728 <btbb_packet_get_lap@plt>:
    4728:	add	ip, pc, #0, 12
    472c:	add	ip, ip, #151552	; 0x25000
    4730:	ldr	pc, [ip, #2472]!	; 0x9a8

00004734 <bt_compidtostr@plt>:
    4734:	add	ip, pc, #0, 12
    4738:	add	ip, ip, #151552	; 0x25000
    473c:	ldr	pc, [ip, #2464]!	; 0x9a0

00004740 <write@plt>:
    4740:	add	ip, pc, #0, 12
    4744:	add	ip, ip, #151552	; 0x25000
    4748:	ldr	pc, [ip, #2456]!	; 0x998

0000474c <get_piconet@plt>:
    474c:	add	ip, pc, #0, 12
    4750:	add	ip, ip, #151552	; 0x25000
    4754:	ldr	pc, [ip, #2448]!	; 0x990

00004758 <perm5@plt>:
    4758:	add	ip, pc, #0, 12
    475c:	add	ip, ip, #151552	; 0x25000
    4760:	ldr	pc, [ip, #2440]!	; 0x988

00004764 <fclose@plt>:
    4764:	add	ip, pc, #0, 12
    4768:	add	ip, ip, #151552	; 0x25000
    476c:	ldr	pc, [ip, #2432]!	; 0x980

00004770 <EV5@plt>:
    4770:	add	ip, pc, #0, 12
    4774:	add	ip, ip, #151552	; 0x25000
    4778:	ldr	pc, [ip, #2424]!	; 0x978

0000477c <munmap@plt>:
    477c:	add	ip, pc, #0, 12
    4780:	add	ip, ip, #151552	; 0x25000
    4784:	ldr	pc, [ip, #2416]!	; 0x970

00004788 <DH@plt>:
    4788:	add	ip, pc, #0, 12
    478c:	add	ip, ip, #151552	; 0x25000
    4790:	ldr	pc, [ip, #2408]!	; 0x968

00004794 <btbb_packet_get_channel@plt>:
    4794:	add	ip, pc, #0, 12
    4798:	add	ip, ip, #151552	; 0x25000
    479c:	ldr	pc, [ip, #2400]!	; 0x960

000047a0 <btbb_decode_payload@plt>:
    47a0:	add	ip, pc, #0, 12
    47a4:	add	ip, ip, #151552	; 0x25000
    47a8:	ldr	pc, [ip, #2392]!	; 0x958

000047ac <promiscuous_packet_search@plt>:
    47ac:	add	ip, pc, #0, 12
    47b0:	add	ip, ip, #151552	; 0x25000
    47b4:	ldr	pc, [ip, #2384]!	; 0x950

000047b8 <pcapng_close@plt>:
    47b8:	add	ip, pc, #0, 12
    47bc:	add	ip, ip, #151552	; 0x25000
    47c0:	ldr	pc, [ip, #2376]!	; 0x948

000047c4 <btbb_print_packet@plt>:
    47c4:	add	ip, pc, #0, 12
    47c8:	add	ip, ip, #151552	; 0x25000
    47cc:	ldr	pc, [ip, #2368]!	; 0x940

000047d0 <try_clock@plt>:
    47d0:	add	ip, pc, #0, 12
    47d4:	add	ip, ip, #151552	; 0x25000
    47d8:	ldr	pc, [ip, #2360]!	; 0x938

000047dc <close@plt>:
    47dc:	add	ip, pc, #0, 12
    47e0:	add	ip, ip, #151552	; 0x25000
    47e4:	ldr	pc, [ip, #2352]!	; 0x930

000047e8 <__assert_fail@plt>:
    47e8:	add	ip, pc, #0, 12
    47ec:	add	ip, ip, #151552	; 0x25000
    47f0:	ldr	pc, [ip, #2344]!	; 0x928

Disassembly of section .text:

00004800 <btbb_gen_syncword@@Base-0x128>:
    4800:	ldr	r3, [pc, #20]	; 481c <__assert_fail@plt+0x34>
    4804:	ldr	r2, [pc, #20]	; 4820 <__assert_fail@plt+0x38>
    4808:	add	r3, pc, r3
    480c:	ldr	r2, [r3, r2]
    4810:	cmp	r2, #0
    4814:	bxeq	lr
    4818:	b	4644 <__gmon_start__@plt>
    481c:	strdeq	r5, [r2], -r0
    4820:	andeq	r0, r0, r0, lsr r1
    4824:	ldr	r0, [pc, #44]	; 4858 <__assert_fail@plt+0x70>
    4828:	ldr	r3, [pc, #44]	; 485c <__assert_fail@plt+0x74>
    482c:	add	r0, pc, r0
    4830:	add	r3, pc, r3
    4834:	cmp	r3, r0
    4838:	ldr	r3, [pc, #32]	; 4860 <__assert_fail@plt+0x78>
    483c:	add	r3, pc, r3
    4840:	bxeq	lr
    4844:	ldr	r2, [pc, #24]	; 4864 <__assert_fail@plt+0x7c>
    4848:	ldr	r3, [r3, r2]
    484c:	cmp	r3, #0
    4850:	bxeq	lr
    4854:	bx	r3
    4858:	andeq	r5, r2, r0, lsl r9
    485c:	andeq	r5, r2, ip, lsl #18
    4860:			; <UNDEFINED> instruction: 0x000257bc
    4864:	andeq	r0, r0, r0, lsr #2
    4868:	ldr	r0, [pc, #56]	; 48a8 <__assert_fail@plt+0xc0>
    486c:	ldr	r3, [pc, #56]	; 48ac <__assert_fail@plt+0xc4>
    4870:	add	r0, pc, r0
    4874:	add	r3, pc, r3
    4878:	sub	r1, r3, r0
    487c:	ldr	r3, [pc, #44]	; 48b0 <__assert_fail@plt+0xc8>
    4880:	asr	r1, r1, #2
    4884:	add	r3, pc, r3
    4888:	add	r1, r1, r1, lsr #31
    488c:	asrs	r1, r1, #1
    4890:	bxeq	lr
    4894:	ldr	r2, [pc, #24]	; 48b4 <__assert_fail@plt+0xcc>
    4898:	ldr	r3, [r3, r2]
    489c:	cmp	r3, #0
    48a0:	bxeq	lr
    48a4:	bx	r3
    48a8:	andeq	r5, r2, ip, asr #17
    48ac:	andeq	r5, r2, r8, asr #17
    48b0:	andeq	r5, r2, r4, ror r7
    48b4:	andeq	r0, r0, r8, lsr r1
    48b8:	ldr	r3, [pc, #76]	; 490c <__assert_fail@plt+0x124>
    48bc:	ldr	r2, [pc, #76]	; 4910 <__assert_fail@plt+0x128>
    48c0:	add	r3, pc, r3
    48c4:	add	r2, pc, r2
    48c8:	ldrb	r3, [r3]
    48cc:	cmp	r3, #0
    48d0:	bxne	lr
    48d4:	ldr	r3, [pc, #56]	; 4914 <__assert_fail@plt+0x12c>
    48d8:	push	{r4, lr}
    48dc:	ldr	r3, [r2, r3]
    48e0:	cmp	r3, #0
    48e4:	beq	48f4 <__assert_fail@plt+0x10c>
    48e8:	ldr	r3, [pc, #40]	; 4918 <__assert_fail@plt+0x130>
    48ec:	ldr	r0, [pc, r3]
    48f0:	bl	44e8 <__cxa_finalize@plt>
    48f4:	bl	4824 <__assert_fail@plt+0x3c>
    48f8:	ldr	r3, [pc, #28]	; 491c <__assert_fail@plt+0x134>
    48fc:	mov	r2, #1
    4900:	add	r3, pc, r3
    4904:	strb	r2, [r3]
    4908:	pop	{r4, pc}
    490c:	andeq	r5, r2, ip, ror r8
    4910:	andeq	r5, r2, r4, lsr r7
    4914:	andeq	r0, r0, ip, lsl r1
    4918:	andeq	r5, r2, r8, asr #16
    491c:	andeq	r5, r2, ip, lsr r8
    4920:	b	4868 <__assert_fail@plt+0x80>
    4924:	andeq	r0, r0, r0

00004928 <btbb_gen_syncword@@Base>:
    4928:	push	{r4, r5, fp, lr}
    492c:	add	fp, sp, #8
    4930:	ldr	r2, [pc, #60]	; 4974 <btbb_gen_syncword@@Base+0x4c>
    4934:	movw	ip, #3710	; 0xe7e
    4938:	mov	r1, #-1342177278	; 0xb0000002
    493c:	mov	r3, #0
    4940:	mov	lr, #8388608	; 0x800000
    4944:	movt	ip, #51074	; 0xc782
    4948:	add	r2, pc, r2
    494c:	tst	r0, lr, lsr r3
    4950:	add	r3, r3, #1
    4954:	ldrdne	r4, [r2]
    4958:	add	r2, r2, #8
    495c:	eorne	r1, r5, r1
    4960:	eorne	ip, r4, ip
    4964:	cmp	r3, #24
    4968:	bne	494c <btbb_gen_syncword@@Base+0x24>
    496c:	mov	r0, ip
    4970:	pop	{r4, r5, fp, pc}
    4974:	andeq	fp, r0, r0, ror #20

00004978 <btbb_get_release@@Base>:
    4978:	ldr	r0, [pc, #4]	; 4984 <btbb_get_release@@Base+0xc>
    497c:	add	r0, pc, r0
    4980:	bx	lr
    4984:	andeq	lr, r0, r0, lsr #32

00004988 <btbb_get_version@@Base>:
    4988:	ldr	r0, [pc, #4]	; 4994 <btbb_get_version@@Base+0xc>
    498c:	add	r0, pc, r0
    4990:	bx	lr
    4994:	andeq	lr, r0, fp, lsl r0

00004998 <btbb_init@@Base>:
    4998:	push	{r4, r5, r6, sl, fp, lr}
    499c:	add	fp, sp, #16
    49a0:	cmp	r0, #6
    49a4:	bcs	49f8 <btbb_init@@Base+0x60>
    49a8:	mov	r5, r0
    49ac:	mov	r4, #0
    49b0:	cmp	r0, #0
    49b4:	beq	49f0 <btbb_init@@Base+0x58>
    49b8:	ldr	r0, [pc, #112]	; 4a30 <btbb_init@@Base+0x98>
    49bc:	ldr	r0, [pc, r0]
    49c0:	cmp	r0, #0
    49c4:	bne	49f0 <btbb_init@@Base+0x58>
    49c8:	mov	r4, #0
    49cc:	mov	r6, #0
    49d0:	add	r6, r6, #1
    49d4:	mov	r0, #0
    49d8:	mov	r1, #0
    49dc:	mov	r2, #0
    49e0:	mov	r3, r6
    49e4:	bl	7ff8 <clock_from_fhs@@Base+0xd0>
    49e8:	cmp	r5, r6
    49ec:	bne	49d0 <btbb_init@@Base+0x38>
    49f0:	mov	r0, r4
    49f4:	pop	{r4, r5, r6, sl, fp, pc}
    49f8:	ldr	r0, [pc, #36]	; 4a24 <btbb_init@@Base+0x8c>
    49fc:	ldr	r0, [pc, r0]
    4a00:	ldr	r0, [r0]
    4a04:	ldr	r1, [pc, #28]	; 4a28 <btbb_init@@Base+0x90>
    4a08:	ldr	r2, [pc, #28]	; 4a2c <btbb_init@@Base+0x94>
    4a0c:	add	r1, pc, r1
    4a10:	add	r2, pc, r2
    4a14:	bl	46c8 <fprintf@plt>
    4a18:	mvn	r4, #0
    4a1c:	mov	r0, r4
    4a20:	pop	{r4, r5, r6, sl, fp, pc}
    4a24:	andeq	r5, r2, r0, lsr #14
    4a28:	muleq	r0, pc, pc	; <UNPREDICTABLE>
    4a2c:			; <UNDEFINED> instruction: 0x0000dfbb
    4a30:	andeq	r5, r2, r4, lsl #15

00004a34 <btbb_packet_new@@Base>:
    4a34:	push	{r4, r5, fp, lr}
    4a38:	add	fp, sp, #8
    4a3c:	mov	r0, #1
    4a40:	mov	r1, #5952	; 0x1740
    4a44:	mov	r5, #1
    4a48:	bl	44c4 <calloc@plt>
    4a4c:	mov	r4, r0
    4a50:	cmp	r0, #0
    4a54:	movne	r0, r4
    4a58:	strne	r5, [r4]
    4a5c:	popne	{r4, r5, fp, pc}
    4a60:	ldr	r0, [pc, #32]	; 4a88 <btbb_packet_new@@Base+0x54>
    4a64:	mov	r1, #25
    4a68:	mov	r2, #1
    4a6c:	ldr	r0, [pc, r0]
    4a70:	ldr	r3, [r0]
    4a74:	ldr	r0, [pc, #16]	; 4a8c <btbb_packet_new@@Base+0x58>
    4a78:	add	r0, pc, r0
    4a7c:	bl	45e4 <fwrite@plt>
    4a80:	mov	r0, r4
    4a84:	pop	{r4, r5, fp, pc}
    4a88:			; <UNDEFINED> instruction: 0x000256b0
    4a8c:	andeq	sp, r0, sp, asr pc

00004a90 <btbb_packet_ref@@Base>:
    4a90:	ldr	r1, [r0]
    4a94:	add	r1, r1, #1
    4a98:	str	r1, [r0]
    4a9c:	bx	lr

00004aa0 <btbb_packet_unref@@Base>:
    4aa0:	ldr	r1, [r0]
    4aa4:	subs	r1, r1, #1
    4aa8:	str	r1, [r0]
    4aac:	bxne	lr
    4ab0:	b	4548 <free@plt>

00004ab4 <btbb_packet_get_lap@@Base>:
    4ab4:	ldr	r0, [r0, #12]
    4ab8:	bx	lr

00004abc <btbb_packet_set_uap@@Base>:
    4abc:	strb	r1, [r0, #9]
    4ac0:	ldr	r1, [r0, #4]
    4ac4:	orr	r1, r1, #4
    4ac8:	str	r1, [r0, #4]
    4acc:	bx	lr

00004ad0 <btbb_packet_set_flag@@Base>:
    4ad0:	push	{fp, lr}
    4ad4:	mov	fp, sp
    4ad8:	ldr	lr, [r0, #4]
    4adc:	mov	ip, #1
    4ae0:	cmp	r2, #0
    4ae4:	orr	r3, lr, ip, lsl r1
    4ae8:	biceq	r3, lr, ip, lsl r1
    4aec:	str	r3, [r0, #4]
    4af0:	pop	{fp, pc}

00004af4 <btbb_packet_get_uap@@Base>:
    4af4:	ldrb	r0, [r0, #9]
    4af8:	bx	lr

00004afc <btbb_packet_get_nap@@Base>:
    4afc:	ldrh	r0, [r0, #10]
    4b00:	bx	lr

00004b04 <btbb_packet_get_clkn@@Base>:
    4b04:	ldr	r0, [r0, #2816]	; 0xb00
    4b08:	bx	lr

00004b0c <btbb_packet_get_channel@@Base>:
    4b0c:	ldrb	r0, [r0, #8]
    4b10:	bx	lr

00004b14 <btbb_packet_set_modulation@@Base>:
    4b14:	strb	r1, [r0, #16]
    4b18:	bx	lr

00004b1c <btbb_packet_get_modulation@@Base>:
    4b1c:	ldrb	r0, [r0, #16]
    4b20:	bx	lr

00004b24 <btbb_packet_set_transport@@Base>:
    4b24:	strb	r1, [r0, #17]
    4b28:	bx	lr

00004b2c <btbb_packet_get_transport@@Base>:
    4b2c:	ldrb	r0, [r0, #17]
    4b30:	bx	lr

00004b34 <btbb_packet_get_ac_errors@@Base>:
    4b34:	ldrb	r0, [r0, #2820]	; 0xb04
    4b38:	bx	lr
    4b3c:	nop	{0}

00004b40 <promiscuous_packet_search@@Base>:
    4b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4b44:	add	fp, sp, #28
    4b48:	sub	sp, sp, #4
    4b4c:	vpush	{d8-d12}
    4b50:	sub	sp, sp, #40	; 0x28
    4b54:	cmp	r1, #1
    4b58:	str	r3, [sp, #16]
    4b5c:	blt	4f24 <promiscuous_packet_search@@Base+0x3e4>
    4b60:	mov	r5, r0
    4b64:	mov	r6, r1
    4b68:	ldrb	r0, [r0, #57]	; 0x39
    4b6c:	str	r2, [sp]
    4b70:	vldr	d8, [pc, #984]	; 4f50 <promiscuous_packet_search@@Base+0x410>
    4b74:	vmov.i64	q5, #0x00000000000000ff
    4b78:	vmov.i32	d9, #2	; 0x00000002
    4b7c:	vmov.i32	d12, #4	; 0x00000004
    4b80:	mov	r4, #0
    4b84:	add	sl, sp, #24
    4b88:	add	r9, sp, #28
    4b8c:	ldrb	r1, [r5, #58]	; 0x3a
    4b90:	ldrb	r2, [r5, #59]	; 0x3b
    4b94:	ldrb	r3, [r5, #60]	; 0x3c
    4b98:	mov	r7, r5
    4b9c:	orr	r0, r0, r1, lsl #1
    4ba0:	ldrb	r1, [r5, #61]	; 0x3d
    4ba4:	orr	r0, r0, r2, lsl #2
    4ba8:	orr	r0, r0, r3, lsl #3
    4bac:	orr	r0, r0, r1, lsl #4
    4bb0:	ldrb	r1, [r5, #62]	; 0x3e
    4bb4:	ldr	r2, [pc, #924]	; 4f58 <promiscuous_packet_search@@Base+0x418>
    4bb8:	str	r6, [sp, #12]
    4bbc:	str	r5, [sp, #8]
    4bc0:	orr	r0, r0, r1, lsl #5
    4bc4:	add	r2, pc, r2
    4bc8:	lsl	r1, r0, #1
    4bcc:	b	4c10 <promiscuous_packet_search@@Base+0xd0>
    4bd0:	ldr	r0, [fp, #8]
    4bd4:	mov	ip, #255	; 0xff
    4bd8:	strb	ip, [r0]
    4bdc:	ldr	r6, [sp, #12]
    4be0:	ldr	r5, [sp, #8]
    4be4:	ldr	r2, [pc, #904]	; 4f74 <promiscuous_packet_search@@Base+0x434>
    4be8:	ldr	r1, [sp, #16]
    4bec:	uxtb	r0, ip
    4bf0:	cmp	r0, r1
    4bf4:	ldr	r1, [sp, #20]
    4bf8:	add	r2, pc, r2
    4bfc:	ble	4f2c <promiscuous_packet_search@@Base+0x3ec>
    4c00:	add	r4, r4, #1
    4c04:	add	r7, r7, #1
    4c08:	cmp	r4, r6
    4c0c:	beq	4f24 <promiscuous_packet_search@@Base+0x3e4>
    4c10:	add	r0, r5, r4
    4c14:	uxtb	r1, r1
    4c18:	ldrb	r0, [r0, #63]	; 0x3f
    4c1c:	lsl	r0, r0, #6
    4c20:	orr	r1, r0, r1, lsr #1
    4c24:	uxtb	r0, r1
    4c28:	ldrb	r0, [r2, r0]
    4c2c:	cmp	r0, #1
    4c30:	bhi	4c00 <promiscuous_packet_search@@Base+0xc0>
    4c34:	vmov.i32	q8, #0	; 0x00000000
    4c38:	vorr	d18, d8, d8
    4c3c:	mov	r0, #0
    4c40:	str	r1, [sp, #20]
    4c44:	mov	r1, r7
    4c48:	vmovl.u32	q12, d18
    4c4c:	ldrh	r2, [r1, r0]!
    4c50:	add	r0, r0, #4
    4c54:	cmp	r0, #64	; 0x40
    4c58:	strh	r2, [sp, #24]
    4c5c:	ldrh	r1, [r1, #2]
    4c60:	vld1.16	{d19[0]}, [sl :16]
    4c64:	strh	r1, [sp, #28]
    4c68:	vld1.16	{d20[0]}, [r9 :16]
    4c6c:	vmovl.u8	q11, d19
    4c70:	vadd.i32	d19, d18, d9
    4c74:	vadd.i32	d18, d18, d12
    4c78:	vmovl.u16	q11, d22
    4c7c:	vmovl.u8	q10, d20
    4c80:	vmovl.u32	q11, d22
    4c84:	vmovl.u16	q10, d20
    4c88:	vand	q11, q11, q5
    4c8c:	vmovl.u32	q10, d20
    4c90:	vshl.u64	q11, q11, q12
    4c94:	vmovl.u32	q12, d19
    4c98:	vand	q10, q10, q5
    4c9c:	vorr	q8, q11, q8
    4ca0:	vshl.u64	q10, q10, q12
    4ca4:	vorr	q8, q10, q8
    4ca8:	bne	4c44 <promiscuous_packet_search@@Base+0x104>
    4cac:	vorr	d18, d17, d17
    4cb0:	ldr	r0, [fp, #8]
    4cb4:	mov	ip, #0
    4cb8:	mvn	lr, #7
    4cbc:	vorr	q8, q8, q9
    4cc0:	strb	ip, [r0]
    4cc4:	movw	r0, #36246	; 0x8d96
    4cc8:	ldr	r3, [pc, #652]	; 4f5c <promiscuous_packet_search@@Base+0x41c>
    4ccc:	movt	r0, #33668	; 0x8384
    4cd0:	ldr	r6, [pc, #648]	; 4f60 <promiscuous_packet_search@@Base+0x420>
    4cd4:	vmov.32	r1, d16[1]
    4cd8:	add	r3, pc, r3
    4cdc:	add	r6, pc, r6
    4ce0:	and	r2, lr, r1, lsr #22
    4ce4:	bic	r1, r1, #-33554432	; 0xfe000000
    4ce8:	ldr	r2, [r3, r2]!
    4cec:	ldr	r3, [r3, #4]
    4cf0:	orr	r8, r3, r1
    4cf4:	eor	r1, r8, r0
    4cf8:	ubfx	r5, r1, #8, #8
    4cfc:	ldr	r0, [pc, #608]	; 4f64 <promiscuous_packet_search@@Base+0x424>
    4d00:	uxtb	r3, r1
    4d04:	ldr	r3, [r6, r3, lsl #3]!
    4d08:	add	r0, pc, r0
    4d0c:	ldr	r5, [r0, r5, lsl #3]!
    4d10:	ldr	r0, [r0, #4]
    4d14:	eor	r3, r5, r3
    4d18:	vmov.32	r5, d16[0]
    4d1c:	orr	r2, r2, r5
    4d20:	eor	r2, r2, r3
    4d24:	ubfx	r3, r1, #16, #8
    4d28:	ldr	r5, [pc, #568]	; 4f68 <promiscuous_packet_search@@Base+0x428>
    4d2c:	and	r1, lr, r1, lsr #21
    4d30:	add	r5, pc, r5
    4d34:	ldr	r3, [r5, r3, lsl #3]!
    4d38:	eor	r2, r2, r3
    4d3c:	ldr	r3, [pc, #552]	; 4f6c <promiscuous_packet_search@@Base+0x42c>
    4d40:	str	r8, [sp, #4]
    4d44:	lsr	r8, r8, #2
    4d48:	add	r3, pc, r3
    4d4c:	ldr	r1, [r3, r1]!
    4d50:	eor	r1, r2, r1
    4d54:	movw	r2, #21756	; 0x54fc
    4d58:	movt	r2, #48076	; 0xbbcc
    4d5c:	eor	r1, r1, r2
    4d60:	ldr	r2, [r6, #4]
    4d64:	eor	r0, r0, r2
    4d68:	ldr	r2, [r5, #4]
    4d6c:	eor	r0, r0, r2
    4d70:	ldr	r2, [r3, #4]
    4d74:	eor	r2, r0, r2
    4d78:	orrs	r0, r1, r2
    4d7c:	beq	4bdc <promiscuous_packet_search@@Base+0x9c>
    4d80:	str	r1, [sp, #32]
    4d84:	str	r2, [sp, #36]	; 0x24
    4d88:	ldr	r0, [pc, #480]	; 4f70 <promiscuous_packet_search@@Base+0x430>
    4d8c:	ldr	r0, [pc, r0]
    4d90:	cmp	r0, #0
    4d94:	beq	4bd0 <promiscuous_packet_search@@Base+0x90>
    4d98:	movw	r3, #31161	; 0x79b9
    4d9c:	movw	r6, #48887	; 0xbef7
    4da0:	movt	r3, #40503	; 0x9e37
    4da4:	movt	r6, #65261	; 0xfeed
    4da8:	add	r2, r2, r3
    4dac:	movw	r3, #47810	; 0xbac2
    4db0:	movt	r3, #40777	; 0x9f49
    4db4:	sub	r1, r1, r2
    4db8:	add	r1, r1, r3
    4dbc:	movw	r3, #63341	; 0xf76d
    4dc0:	movt	r3, #7
    4dc4:	eor	r1, r1, r3
    4dc8:	movw	r3, #16649	; 0x4109
    4dcc:	movt	r3, #274	; 0x112
    4dd0:	sub	r2, r2, r1
    4dd4:	add	r2, r2, r3
    4dd8:	eor	r2, r2, r1, lsl #8
    4ddc:	add	r3, r1, r2
    4de0:	sub	r1, r1, r2
    4de4:	sub	r3, r6, r3
    4de8:	eor	r3, r3, r2, lsr #13
    4dec:	sub	r1, r1, r3
    4df0:	sub	r2, r2, r3
    4df4:	eor	r1, r1, r3, lsr #12
    4df8:	sub	r2, r2, r1
    4dfc:	sub	r3, r3, r1
    4e00:	eor	r2, r2, r1, lsl #16
    4e04:	sub	r3, r3, r2
    4e08:	sub	r1, r1, r2
    4e0c:	eor	r3, r3, r2, lsr #5
    4e10:	sub	r1, r1, r3
    4e14:	sub	r2, r2, r3
    4e18:	eor	r1, r1, r3, lsr #3
    4e1c:	sub	r2, r2, r1
    4e20:	eor	r2, r2, r1, lsl #10
    4e24:	sub	r1, r3, r1
    4e28:	sub	r1, r1, r2
    4e2c:	eor	r2, r1, r2, lsr #15
    4e30:	ldr	r1, [r0, #16]
    4e34:	ldm	r1, {r0, r3}
    4e38:	sub	r3, r3, #1
    4e3c:	and	r2, r3, r2
    4e40:	add	r2, r2, r2, lsl #1
    4e44:	ldr	r0, [r0, r2, lsl #2]
    4e48:	cmp	r0, #0
    4e4c:	beq	4bd0 <promiscuous_packet_search@@Base+0x90>
    4e50:	ldr	r1, [r1, #20]
    4e54:	rsb	r5, r1, #0
    4e58:	b	4e68 <promiscuous_packet_search@@Base+0x328>
    4e5c:	ldr	r0, [r6, #32]
    4e60:	cmp	r0, #0
    4e64:	beq	4bd0 <promiscuous_packet_search@@Base+0x90>
    4e68:	add	r6, r0, r5
    4e6c:	ldr	r0, [r6, #40]	; 0x28
    4e70:	cmp	r0, #8
    4e74:	bne	4e5c <promiscuous_packet_search@@Base+0x31c>
    4e78:	ldr	r0, [r6, #36]	; 0x24
    4e7c:	add	r1, sp, #32
    4e80:	mov	r2, #8
    4e84:	bl	4680 <bcmp@plt>
    4e88:	cmp	r0, #0
    4e8c:	bne	4e5c <promiscuous_packet_search@@Base+0x31c>
    4e90:	ldrd	r0, [r6, #8]
    4e94:	movw	r2, #21845	; 0x5555
    4e98:	movw	r3, #13107	; 0x3333
    4e9c:	movt	r2, #21845	; 0x5555
    4ea0:	movt	r3, #13107	; 0x3333
    4ea4:	mov	r6, r2
    4ea8:	mov	r5, r3
    4eac:	and	r2, r2, r1, lsr #1
    4eb0:	sub	r2, r1, r2
    4eb4:	and	r3, r3, r2, lsr #2
    4eb8:	and	r2, r2, r5
    4ebc:	add	r2, r2, r3
    4ec0:	movw	r3, #3855	; 0xf0f
    4ec4:	movt	r3, #3855	; 0xf0f
    4ec8:	add	r2, r2, r2, lsr #4
    4ecc:	mov	ip, r3
    4ed0:	and	r2, r2, r3
    4ed4:	movw	r3, #257	; 0x101
    4ed8:	movt	r3, #257	; 0x101
    4edc:	mov	lr, r3
    4ee0:	mul	r2, r2, r3
    4ee4:	and	r3, r6, r0, lsr #1
    4ee8:	sub	r0, r0, r3
    4eec:	and	r3, r5, r0, lsr #2
    4ef0:	and	r0, r0, r5
    4ef4:	add	r0, r0, r3
    4ef8:	add	r0, r0, r0, lsr #4
    4efc:	and	r0, r0, ip
    4f00:	mul	r0, r0, lr
    4f04:	lsr	r0, r0, #24
    4f08:	add	ip, r0, r2, lsr #24
    4f0c:	ldr	r0, [fp, #8]
    4f10:	strb	ip, [r0]
    4f14:	ldr	r0, [sp, #4]
    4f18:	eor	r0, r1, r0
    4f1c:	lsr	r8, r0, #2
    4f20:	b	4bdc <promiscuous_packet_search@@Base+0x9c>
    4f24:	mvn	r4, #0
    4f28:	b	4f38 <promiscuous_packet_search@@Base+0x3f8>
    4f2c:	ldr	r1, [sp]
    4f30:	bic	r0, r8, #-16777216	; 0xff000000
    4f34:	str	r0, [r1]
    4f38:	mov	r0, r4
    4f3c:	sub	sp, fp, #72	; 0x48
    4f40:	vpop	{d8-d12}
    4f44:	add	sp, sp, #4
    4f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4f4c:	nop	{0}
    4f50:	andeq	r0, r0, r0
    4f54:	andeq	r0, r0, r1
    4f58:	andeq	fp, r0, r4, lsr #17
    4f5c:	andeq	fp, r0, r0, lsl r8
    4f60:	andeq	fp, r0, ip, lsl #24
    4f64:	andeq	ip, r0, r0, ror #7
    4f68:			; <UNDEFINED> instruction: 0x0000cbb8
    4f6c:	andeq	sp, r0, r0, lsr #7
    4f70:			; <UNDEFINED> instruction: 0x000253b4
    4f74:	andeq	fp, r0, r0, ror r8

00004f78 <find_known_lap@@Base>:
    4f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4f7c:	add	fp, sp, #28
    4f80:	sub	sp, sp, #16
    4f84:	str	r3, [sp]
    4f88:	str	r1, [sp, #4]
    4f8c:	movw	lr, #3710	; 0xe7e
    4f90:	mov	sl, r0
    4f94:	mov	ip, #-1342177278	; 0xb0000002
    4f98:	mov	r4, #0
    4f9c:	mov	r6, #8388608	; 0x800000
    4fa0:	ldr	r5, [pc, #392]	; 5130 <find_known_lap@@Base+0x1b8>
    4fa4:	movt	lr, #51074	; 0xc782
    4fa8:	add	r5, pc, r5
    4fac:	tst	r2, r6, lsr r4
    4fb0:	add	r4, r4, #1
    4fb4:	ldrdne	r8, [r5]
    4fb8:	add	r5, r5, #8
    4fbc:	eorne	ip, r9, ip
    4fc0:	eorne	lr, r8, lr
    4fc4:	cmp	r4, #24
    4fc8:	bne	4fac <find_known_lap@@Base+0x34>
    4fcc:	ldr	r0, [sp, #4]
    4fd0:	mvn	r5, #0
    4fd4:	cmp	r0, #1
    4fd8:	blt	5118 <find_known_lap@@Base+0x1a0>
    4fdc:	vldr	d16, [pc, #324]	; 5128 <find_known_lap@@Base+0x1b0>
    4fe0:	movw	r4, #13107	; 0x3333
    4fe4:	movw	r2, #3855	; 0xf0f
    4fe8:	movw	r8, #257	; 0x101
    4fec:	vmov.i64	q9, #0x00000000000000ff
    4ff0:	vmov.i32	d17, #2	; 0x00000002
    4ff4:	vmov.i32	d20, #4	; 0x00000004
    4ff8:	mov	r5, #0
    4ffc:	add	r6, sp, #8
    5000:	add	r7, sp, #12
    5004:	movt	r4, #13107	; 0x3333
    5008:	movt	r2, #3855	; 0xf0f
    500c:	movt	r8, #257	; 0x101
    5010:	vmov.i32	q11, #0	; 0x00000000
    5014:	vorr	d21, d16, d16
    5018:	mov	r9, #0
    501c:	mov	r0, sl
    5020:	vmovl.u32	q14, d21
    5024:	vadd.i32	d30, d21, d17
    5028:	vadd.i32	d21, d21, d20
    502c:	ldrh	r3, [r0, r9]!
    5030:	add	r9, r9, #4
    5034:	cmp	r9, #64	; 0x40
    5038:	strh	r3, [sp, #8]
    503c:	ldrh	r0, [r0, #2]
    5040:	vld1.16	{d24[0]}, [r6 :16]
    5044:	strh	r0, [sp, #12]
    5048:	vld1.16	{d25[0]}, [r7 :16]
    504c:	vmovl.u8	q13, d24
    5050:	vmovl.u16	q13, d26
    5054:	vmovl.u8	q12, d25
    5058:	vmovl.u32	q13, d26
    505c:	vmovl.u16	q12, d24
    5060:	vand	q13, q13, q9
    5064:	vmovl.u32	q12, d24
    5068:	vshl.u64	q13, q13, q14
    506c:	vmovl.u32	q14, d30
    5070:	vand	q12, q12, q9
    5074:	vorr	q11, q13, q11
    5078:	vshl.u64	q12, q12, q14
    507c:	vorr	q11, q12, q11
    5080:	bne	501c <find_known_lap@@Base+0xa4>
    5084:	vorr	d24, d23, d23
    5088:	movw	r1, #21845	; 0x5555
    508c:	movt	r1, #21845	; 0x5555
    5090:	vorr	q11, q11, q12
    5094:	vmov.32	r0, d22[1]
    5098:	eor	r0, r0, ip
    509c:	and	r3, r1, r0, lsr #1
    50a0:	sub	r0, r0, r3
    50a4:	and	r3, r4, r0, lsr #2
    50a8:	and	r0, r0, r4
    50ac:	add	r0, r0, r3
    50b0:	vmov.32	r3, d22[0]
    50b4:	add	r0, r0, r0, lsr #4
    50b8:	and	r0, r0, r2
    50bc:	mul	r0, r0, r8
    50c0:	eor	r3, r3, lr
    50c4:	and	r1, r1, r3, lsr #1
    50c8:	sub	r1, r3, r1
    50cc:	and	r3, r4, r1, lsr #2
    50d0:	and	r1, r1, r4
    50d4:	add	r1, r1, r3
    50d8:	add	r1, r1, r1, lsr #4
    50dc:	and	r1, r1, r2
    50e0:	mul	r1, r1, r8
    50e4:	lsr	r1, r1, #24
    50e8:	add	r0, r1, r0, lsr #24
    50ec:	ldr	r1, [fp, #8]
    50f0:	strb	r0, [r1]
    50f4:	ldr	r1, [sp]
    50f8:	cmp	r0, r1
    50fc:	ble	5118 <find_known_lap@@Base+0x1a0>
    5100:	ldr	r0, [sp, #4]
    5104:	add	r5, r5, #1
    5108:	add	sl, sl, #1
    510c:	cmp	r5, r0
    5110:	bne	5010 <find_known_lap@@Base+0x98>
    5114:	mvn	r5, #0
    5118:	mov	r0, r5
    511c:	sub	sp, fp, #28
    5120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5124:	nop	{0}
    5128:	andeq	r0, r0, r0
    512c:	andeq	r0, r0, r1
    5130:	andeq	fp, r0, r0, lsl #8
    5134:	nop	{0}

00005138 <btbb_find_ac@@Base>:
    5138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    513c:	add	fp, sp, #28
    5140:	sub	sp, sp, #28
    5144:	mov	sl, r0
    5148:	cmn	r2, #1
    514c:	str	r2, [sp, #24]
    5150:	beq	52e4 <btbb_find_ac@@Base+0x1ac>
    5154:	ldr	r5, [pc, #572]	; 5398 <btbb_find_ac@@Base+0x260>
    5158:	movw	lr, #3710	; 0xe7e
    515c:	mov	ip, #-1342177278	; 0xb0000002
    5160:	mov	r4, #0
    5164:	mov	r6, #8388608	; 0x800000
    5168:	movt	lr, #51074	; 0xc782
    516c:	add	r5, pc, r5
    5170:	tst	r2, r6, lsr r4
    5174:	add	r4, r4, #1
    5178:	ldrdne	r8, [r5]
    517c:	add	r5, r5, #8
    5180:	eorne	ip, r9, ip
    5184:	eorne	lr, r8, lr
    5188:	cmp	r4, #24
    518c:	bne	5170 <btbb_find_ac@@Base+0x38>
    5190:	mvn	r4, #0
    5194:	cmp	r1, #1
    5198:	blt	5360 <btbb_find_ac@@Base+0x228>
    519c:	vldr	d16, [pc, #492]	; 5390 <btbb_find_ac@@Base+0x258>
    51a0:	movw	r9, #13107	; 0x3333
    51a4:	movw	r8, #3855	; 0xf0f
    51a8:	movw	r7, #257	; 0x101
    51ac:	vmov.i64	q9, #0x00000000000000ff
    51b0:	vmov.i32	d17, #2	; 0x00000002
    51b4:	vmov.i32	d20, #4	; 0x00000004
    51b8:	mov	r4, #0
    51bc:	add	r2, sp, #12
    51c0:	add	r5, sp, #16
    51c4:	str	r1, [sp, #8]
    51c8:	movt	r9, #13107	; 0x3333
    51cc:	movt	r8, #3855	; 0xf0f
    51d0:	movt	r7, #257	; 0x101
    51d4:	vmov.i32	q11, #0	; 0x00000000
    51d8:	vorr	d21, d16, d16
    51dc:	mov	r1, r3
    51e0:	mov	r6, #0
    51e4:	mov	r0, sl
    51e8:	vmovl.u32	q14, d21
    51ec:	vadd.i32	d30, d21, d17
    51f0:	vadd.i32	d21, d21, d20
    51f4:	ldrh	r3, [r0, r6]!
    51f8:	add	r6, r6, #4
    51fc:	cmp	r6, #64	; 0x40
    5200:	strh	r3, [sp, #12]
    5204:	ldrh	r0, [r0, #2]
    5208:	vld1.16	{d24[0]}, [r2 :16]
    520c:	strh	r0, [sp, #16]
    5210:	vld1.16	{d25[0]}, [r5 :16]
    5214:	vmovl.u8	q13, d24
    5218:	vmovl.u16	q13, d26
    521c:	vmovl.u8	q12, d25
    5220:	vmovl.u32	q13, d26
    5224:	vmovl.u16	q12, d24
    5228:	vand	q13, q13, q9
    522c:	vmovl.u32	q12, d24
    5230:	vshl.u64	q13, q13, q14
    5234:	vmovl.u32	q14, d30
    5238:	vand	q12, q12, q9
    523c:	vorr	q11, q13, q11
    5240:	vshl.u64	q12, q12, q14
    5244:	vorr	q11, q12, q11
    5248:	bne	51e4 <btbb_find_ac@@Base+0xac>
    524c:	vorr	d24, d23, d23
    5250:	movw	r3, #21845	; 0x5555
    5254:	movt	r3, #21845	; 0x5555
    5258:	vorr	q11, q11, q12
    525c:	mov	r6, r3
    5260:	vmov.32	r0, d22[1]
    5264:	eor	r0, r0, ip
    5268:	and	r3, r3, r0, lsr #1
    526c:	sub	r0, r0, r3
    5270:	and	r3, r9, r0, lsr #2
    5274:	and	r0, r0, r9
    5278:	add	r0, r0, r3
    527c:	vmov.32	r3, d22[0]
    5280:	add	r0, r0, r0, lsr #4
    5284:	and	r0, r0, r8
    5288:	mul	r0, r0, r7
    528c:	eor	r3, r3, lr
    5290:	and	r6, r6, r3, lsr #1
    5294:	sub	r3, r3, r6
    5298:	and	r6, r9, r3, lsr #2
    529c:	and	r3, r3, r9
    52a0:	add	r3, r3, r6
    52a4:	add	r3, r3, r3, lsr #4
    52a8:	and	r3, r3, r8
    52ac:	mul	r3, r3, r7
    52b0:	lsr	r3, r3, #24
    52b4:	add	r6, r3, r0, lsr #24
    52b8:	cmp	r6, r1
    52bc:	ble	5308 <btbb_find_ac@@Base+0x1d0>
    52c0:	mov	r3, r1
    52c4:	ldr	r1, [sp, #8]
    52c8:	add	r4, r4, #1
    52cc:	add	sl, sl, #1
    52d0:	cmp	r4, r1
    52d4:	bne	51d4 <btbb_find_ac@@Base+0x9c>
    52d8:	strb	r6, [sp, #23]
    52dc:	mvn	r4, #0
    52e0:	b	5360 <btbb_find_ac@@Base+0x228>
    52e4:	add	r2, sp, #23
    52e8:	mov	r0, sl
    52ec:	str	r2, [sp]
    52f0:	add	r2, sp, #24
    52f4:	bl	47ac <promiscuous_packet_search@plt>
    52f8:	mov	r4, r0
    52fc:	cmp	r4, #0
    5300:	bpl	5314 <btbb_find_ac@@Base+0x1dc>
    5304:	b	5360 <btbb_find_ac@@Base+0x228>
    5308:	strb	r6, [sp, #23]
    530c:	cmp	r4, #0
    5310:	bmi	5360 <btbb_find_ac@@Base+0x228>
    5314:	ldr	r6, [fp, #8]
    5318:	ldr	r5, [r6]
    531c:	cmp	r5, #0
    5320:	bne	5348 <btbb_find_ac@@Base+0x210>
    5324:	mov	r0, #1
    5328:	mov	r1, #5952	; 0x1740
    532c:	mov	r7, #1
    5330:	bl	44c4 <calloc@plt>
    5334:	mov	r5, r0
    5338:	cmp	r0, #0
    533c:	beq	536c <btbb_find_ac@@Base+0x234>
    5340:	str	r7, [r5]
    5344:	str	r5, [r6]
    5348:	ldr	r0, [sp, #24]
    534c:	ldrb	r1, [sp, #23]
    5350:	mov	r2, #1
    5354:	str	r2, [r5, #4]
    5358:	strb	r1, [r5, #2820]	; 0xb04
    535c:	str	r0, [r5, #12]
    5360:	mov	r0, r4
    5364:	sub	sp, fp, #28
    5368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    536c:	ldr	r0, [pc, #40]	; 539c <btbb_find_ac@@Base+0x264>
    5370:	mov	r1, #25
    5374:	mov	r2, #1
    5378:	ldr	r0, [pc, r0]
    537c:	ldr	r3, [r0]
    5380:	ldr	r0, [pc, #24]	; 53a0 <btbb_find_ac@@Base+0x268>
    5384:	add	r0, pc, r0
    5388:	bl	45e4 <fwrite@plt>
    538c:	b	5344 <btbb_find_ac@@Base+0x20c>
    5390:	andeq	r0, r0, r0
    5394:	andeq	r0, r0, r1
    5398:	andeq	fp, r0, ip, lsr r2
    539c:	andeq	r4, r2, r4, lsr #27
    53a0:	andeq	sp, r0, r1, asr r6

000053a4 <btbb_packet_set_data@@Base>:
    53a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    53a8:	add	fp, sp, #28
    53ac:	sub	sp, sp, #4
    53b0:	ldr	r6, [fp, #8]
    53b4:	movw	ip, #3125	; 0xc35
    53b8:	cmp	r2, ip
    53bc:	movlt	ip, r2
    53c0:	cmp	r2, #1
    53c4:	blt	54bc <btbb_packet_set_data@@Base+0x118>
    53c8:	cmp	ip, #1
    53cc:	mov	r9, #1
    53d0:	mov	r4, #1
    53d4:	mov	r2, #0
    53d8:	movgt	r9, ip
    53dc:	cmp	r9, #16
    53e0:	bcc	54a0 <btbb_packet_set_data@@Base+0xfc>
    53e4:	cmp	ip, #1
    53e8:	movw	lr, #2824	; 0xb08
    53ec:	movgt	r4, ip
    53f0:	add	r5, r0, lr
    53f4:	add	r7, r1, r4
    53f8:	cmp	r5, r7
    53fc:	bcs	5410 <btbb_packet_set_data@@Base+0x6c>
    5400:	add	r4, r4, r0
    5404:	add	r4, r4, lr
    5408:	cmp	r4, r1
    540c:	bhi	54a0 <btbb_packet_set_data@@Base+0xfc>
    5410:	bic	r2, r9, #-2147483633	; 0x8000000f
    5414:	mov	r5, #1
    5418:	subs	r4, r2, #16
    541c:	add	r4, r5, r4, lsr #4
    5420:	and	r7, r4, #1
    5424:	str	r7, [sp]
    5428:	beq	546c <btbb_packet_set_data@@Base+0xc8>
    542c:	sub	r7, r7, r4
    5430:	movw	r4, #2840	; 0xb18
    5434:	mov	r6, #0
    5438:	mov	sl, #32
    543c:	add	r5, r0, r4
    5440:	mov	r4, r1
    5444:	add	r8, r4, #16
    5448:	vld1.8	{d16-d17}, [r4], sl
    544c:	sub	lr, r5, #16
    5450:	adds	r7, r7, #2
    5454:	add	r6, r6, #32
    5458:	vst1.8	{d16-d17}, [lr]
    545c:	vld1.8	{d16-d17}, [r8]
    5460:	vst1.8	{d16-d17}, [r5], sl
    5464:	bne	5444 <btbb_packet_set_data@@Base+0xa0>
    5468:	b	5470 <btbb_packet_set_data@@Base+0xcc>
    546c:	mov	r6, #0
    5470:	ldr	r7, [sp]
    5474:	cmp	r7, #0
    5478:	beq	5494 <btbb_packet_set_data@@Base+0xf0>
    547c:	add	r7, r1, r6
    5480:	vld1.8	{d16-d17}, [r7]
    5484:	add	r7, r0, r6
    5488:	movw	r6, #2824	; 0xb08
    548c:	add	r7, r7, r6
    5490:	vst1.8	{d16-d17}, [r7]
    5494:	ldr	r6, [fp, #8]
    5498:	cmp	r9, r2
    549c:	beq	54bc <btbb_packet_set_data@@Base+0x118>
    54a0:	movw	r7, #2824	; 0xb08
    54a4:	add	r4, r0, r7
    54a8:	ldrb	r7, [r1, r2]
    54ac:	strb	r7, [r4, r2]
    54b0:	add	r2, r2, #1
    54b4:	cmp	r2, ip
    54b8:	blt	54a8 <btbb_packet_set_data@@Base+0x104>
    54bc:	movw	r1, #2822	; 0xb06
    54c0:	strh	ip, [r0, r1]
    54c4:	lsr	r1, r6, #1
    54c8:	strb	r3, [r0, #8]
    54cc:	str	r1, [r0, #2816]	; 0xb00
    54d0:	sub	sp, fp, #28
    54d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000054d8 <btbb_packet_get_flag@@Base>:
    54d8:	ldr	r0, [r0, #4]
    54dc:	mov	r2, #1
    54e0:	and	r0, r0, r2, lsl r1
    54e4:	cmp	r0, #0
    54e8:	movwne	r0, #1
    54ec:	bx	lr

000054f0 <btbb_get_symbols@@Base>:
    54f0:	movw	r1, #2824	; 0xb08
    54f4:	add	r0, r0, r1
    54f8:	bx	lr

000054fc <btbb_packet_get_payload_length@@Base>:
    54fc:	ldr	r0, [r0, #64]	; 0x40
    5500:	bx	lr

00005504 <btbb_get_payload@@Base>:
    5504:	add	r0, r0, #68	; 0x44
    5508:	bx	lr

0000550c <btbb_get_payload_packed@@Base>:
    550c:	push	{r4, r5, r6, sl, fp, lr}
    5510:	add	fp, sp, #16
    5514:	ldr	r2, [r0, #64]	; 0x40
    5518:	cmp	r2, #1
    551c:	blt	5578 <btbb_get_payload_packed@@Base+0x6c>
    5520:	mov	r3, #0
    5524:	add	r2, r0, r3, lsl #3
    5528:	ldrb	ip, [r2, #68]	; 0x44
    552c:	ldrb	lr, [r2, #69]	; 0x45
    5530:	ldrb	r6, [r2, #70]	; 0x46
    5534:	ldrb	r5, [r2, #71]	; 0x47
    5538:	orr	r4, ip, lr, lsl #1
    553c:	orr	r6, r4, r6, lsl #2
    5540:	orr	r6, r6, r5, lsl #3
    5544:	ldrb	r5, [r2, #72]	; 0x48
    5548:	orr	r6, r6, r5, lsl #4
    554c:	ldrb	r5, [r2, #73]	; 0x49
    5550:	orr	r6, r6, r5, lsl #5
    5554:	ldrb	r5, [r2, #74]	; 0x4a
    5558:	ldrb	r2, [r2, #75]	; 0x4b
    555c:	orr	r6, r6, r5, lsl #6
    5560:	orr	r2, r6, r2, lsl #7
    5564:	strb	r2, [r1, r3]
    5568:	add	r3, r3, #1
    556c:	ldr	r2, [r0, #64]	; 0x40
    5570:	cmp	r3, r2
    5574:	blt	5524 <btbb_get_payload_packed@@Base+0x18>
    5578:	mov	r0, r2
    557c:	pop	{r4, r5, r6, sl, fp, pc}

00005580 <btbb_packet_get_type@@Base>:
    5580:	ldrb	r0, [r0, #18]
    5584:	bx	lr

00005588 <btbb_packet_get_lt_addr@@Base>:
    5588:	ldrb	r0, [r0, #19]
    558c:	bx	lr

00005590 <btbb_packet_get_header_flags@@Base>:
    5590:	ldrb	r0, [r0, #20]
    5594:	bx	lr

00005598 <btbb_packet_get_hec@@Base>:
    5598:	ldrb	r0, [r0, #21]
    559c:	bx	lr

000055a0 <btbb_packet_get_header_packed@@Base>:
    55a0:	ldrb	ip, [r0, #22]
    55a4:	ldrb	r2, [r0, #23]
    55a8:	ldrb	r3, [r0, #24]
    55ac:	ldrb	r1, [r0, #25]
    55b0:	orr	r2, ip, r2, lsl #1
    55b4:	orr	r2, r2, r3, lsl #2
    55b8:	orr	r1, r2, r1, lsl #3
    55bc:	ldrb	r2, [r0, #26]
    55c0:	orr	r1, r1, r2, lsl #4
    55c4:	ldrb	r2, [r0, #27]
    55c8:	orr	r1, r1, r2, lsl #5
    55cc:	ldrb	r2, [r0, #28]
    55d0:	orr	r1, r1, r2, lsl #6
    55d4:	ldrb	r2, [r0, #29]
    55d8:	orr	r1, r1, r2, lsl #7
    55dc:	ldrb	r2, [r0, #30]
    55e0:	orr	r1, r1, r2, lsl #8
    55e4:	ldrb	r2, [r0, #31]
    55e8:	orr	r1, r1, r2, lsl #9
    55ec:	ldrb	r2, [r0, #32]
    55f0:	orr	r1, r1, r2, lsl #10
    55f4:	ldrb	r2, [r0, #33]	; 0x21
    55f8:	orr	r1, r1, r2, lsl #11
    55fc:	ldrb	r2, [r0, #34]	; 0x22
    5600:	orr	r1, r1, r2, lsl #12
    5604:	ldrb	r2, [r0, #35]	; 0x23
    5608:	orr	r1, r1, r2, lsl #13
    560c:	ldrb	r2, [r0, #36]	; 0x24
    5610:	orr	r1, r1, r2, lsl #14
    5614:	ldrb	r2, [r0, #37]	; 0x25
    5618:	orr	r1, r1, r2, lsl #15
    561c:	ldrb	r2, [r0, #38]	; 0x26
    5620:	ldrb	r0, [r0, #39]	; 0x27
    5624:	orr	r1, r1, r2, lsl #16
    5628:	orr	r0, r1, r0, lsl #17
    562c:	bx	lr

00005630 <crc_check@@Base>:
    5630:	push	{r4, sl, fp, lr}
    5634:	add	fp, sp, #8
    5638:	mov	r4, r1
    563c:	mov	r1, r0
    5640:	ldrb	r0, [r4, #18]
    5644:	sub	r2, r0, #2
    5648:	mov	r0, #1
    564c:	cmp	r2, #13
    5650:	bhi	56c8 <crc_check@@Base+0x98>
    5654:	add	r3, pc, #4
    5658:	ldr	r2, [r3, r2, lsl #2]
    565c:	add	pc, r3, r2
    5660:	strheq	r0, [r0], -r4
    5664:	andeq	r0, r0, r8, lsr r0
    5668:	andeq	r0, r0, r4, ror r0
    566c:	andeq	r0, r0, ip, asr #1
    5670:	andeq	r0, r0, r8, rrx
    5674:	andeq	r0, r0, r4, ror #1
    5678:	andeq	r0, r0, r8, lsr r0
    567c:	andeq	r0, r0, r8, rrx
    5680:	andeq	r0, r0, r8, lsr r0
    5684:	andeq	r0, r0, r4, ror r0
    5688:	strdeq	r0, [r0], -ip
    568c:	andeq	r0, r0, r4, lsl r1
    5690:	andeq	r0, r0, r8, lsr r0
    5694:	andeq	r0, r0, r4, ror r0
    5698:	mov	r0, r1
    569c:	mov	r1, r4
    56a0:	bl	45b4 <DM@plt>
    56a4:	cmp	r0, #0
    56a8:	beq	56e8 <crc_check@@Base+0xb8>
    56ac:	cmp	r0, #2
    56b0:	blt	56c8 <crc_check@@Base+0x98>
    56b4:	ldrb	r2, [r4, #18]
    56b8:	mov	r1, #1
    56bc:	cmp	r2, #7
    56c0:	cmpne	r2, #13
    56c4:	beq	570c <crc_check@@Base+0xdc>
    56c8:	mov	r1, r0
    56cc:	mov	r0, r1
    56d0:	pop	{r4, sl, fp, pc}
    56d4:	mov	r0, r1
    56d8:	mov	r1, r4
    56dc:	bl	4788 <DH@plt>
    56e0:	cmp	r0, #0
    56e4:	bne	56ac <crc_check@@Base+0x7c>
    56e8:	ldrb	r2, [r4, #18]
    56ec:	mov	r1, #1
    56f0:	cmp	r2, #5
    56f4:	bhi	570c <crc_check@@Base+0xdc>
    56f8:	mov	r3, #1
    56fc:	mov	r4, #44	; 0x2c
    5700:	mov	r0, #0
    5704:	tst	r4, r3, lsl r2
    5708:	movne	r1, r0
    570c:	mov	r0, r1
    5710:	pop	{r4, sl, fp, pc}
    5714:	mov	r0, r1
    5718:	mov	r1, r4
    571c:	bl	4584 <fhs@plt>
    5720:	cmp	r0, #0
    5724:	bne	56ac <crc_check@@Base+0x7c>
    5728:	b	56e8 <crc_check@@Base+0xb8>
    572c:	mov	r0, r1
    5730:	mov	r1, r4
    5734:	bl	45c0 <HV@plt>
    5738:	cmp	r0, #0
    573c:	bne	56ac <crc_check@@Base+0x7c>
    5740:	b	56e8 <crc_check@@Base+0xb8>
    5744:	mov	r0, r1
    5748:	mov	r1, r4
    574c:	bl	471c <EV3@plt>
    5750:	cmp	r0, #0
    5754:	bne	56ac <crc_check@@Base+0x7c>
    5758:	b	56e8 <crc_check@@Base+0xb8>
    575c:	mov	r0, r1
    5760:	mov	r1, r4
    5764:	bl	4590 <EV4@plt>
    5768:	cmp	r0, #0
    576c:	bne	56ac <crc_check@@Base+0x7c>
    5770:	b	56e8 <crc_check@@Base+0xb8>
    5774:	mov	r0, r1
    5778:	mov	r1, r4
    577c:	bl	4770 <EV5@plt>
    5780:	cmp	r0, #0
    5784:	bne	56ac <crc_check@@Base+0x7c>
    5788:	b	56e8 <crc_check@@Base+0xb8>

0000578c <fhs@@Base>:
    578c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5790:	add	fp, sp, #28
    5794:	sub	sp, sp, #20
    5798:	mov	r7, r0
    579c:	mov	r0, #20
    57a0:	mov	sl, r1
    57a4:	str	r0, [r1, #64]	; 0x40
    57a8:	movw	r0, #2822	; 0xb06
    57ac:	ldrh	r0, [r1, r0]
    57b0:	lsr	r1, r0, #1
    57b4:	mov	r0, #1
    57b8:	cmp	r1, #181	; 0xb5
    57bc:	bcc	5920 <fhs@@Base+0x194>
    57c0:	movw	r0, #2946	; 0xb82
    57c4:	mov	r1, #160	; 0xa0
    57c8:	add	r0, sl, r0
    57cc:	bl	6718 <HV@@Base+0x2e0>
    57d0:	mov	r1, r0
    57d4:	mov	r0, #0
    57d8:	cmp	r1, #0
    57dc:	str	r1, [sp, #12]
    57e0:	beq	5920 <fhs@@Base+0x194>
    57e4:	ldr	r0, [sl, #64]	; 0x40
    57e8:	movw	r8, #1033	; 0x409
    57ec:	movt	r8, #33026	; 0x8102
    57f0:	str	r0, [sp, #16]
    57f4:	cmp	r0, #1
    57f8:	ldr	r9, [pc, #316]	; 593c <fhs@@Base+0x1b0>
    57fc:	add	r9, pc, r9
    5800:	blt	5868 <fhs@@Base+0xdc>
    5804:	ldr	r1, [pc, #308]	; 5940 <fhs@@Base+0x1b4>
    5808:	and	r0, r7, #63	; 0x3f
    580c:	ldr	r2, [sl, #4]
    5810:	ldr	r3, [sp, #12]
    5814:	add	r1, pc, r1
    5818:	and	r2, r2, #1
    581c:	ldrb	r0, [r1, r0]
    5820:	add	r1, sl, #68	; 0x44
    5824:	add	r7, r0, #18
    5828:	ldr	r0, [sp, #16]
    582c:	lsl	r0, r0, #3
    5830:	smmla	r5, r7, r8, r7
    5834:	cmp	r2, #0
    5838:	asr	r4, r5, #6
    583c:	add	r5, r4, r5, lsr #31
    5840:	rsb	r5, r5, r5, lsl #7
    5844:	sub	r7, r7, r5
    5848:	ldrb	r5, [r3]
    584c:	add	r3, r3, #1
    5850:	ldrbne	r4, [r9, r7]
    5854:	add	r7, r7, #1
    5858:	eorne	r5, r4, r5
    585c:	subs	r0, r0, #1
    5860:	strb	r5, [r1], #1
    5864:	bne	5830 <fhs@@Base+0xa4>
    5868:	mov	r0, sl
    586c:	bl	6950 <HV@@Base+0x518>
    5870:	cmp	r0, #0
    5874:	bne	5928 <fhs@@Base+0x19c>
    5878:	ldr	r0, [sp, #16]
    587c:	mov	r7, #32
    5880:	lsl	r0, r0, #3
    5884:	str	r0, [sp, #8]
    5888:	add	r0, sl, #68	; 0x44
    588c:	str	r0, [sp, #4]
    5890:	ldr	r0, [sp, #16]
    5894:	cmp	r0, #1
    5898:	blt	58f8 <fhs@@Base+0x16c>
    589c:	ldr	r0, [pc, #160]	; 5944 <fhs@@Base+0x1b8>
    58a0:	ldr	r1, [sp, #12]
    58a4:	ldr	r2, [sp, #8]
    58a8:	ldr	r3, [sp, #4]
    58ac:	add	r0, pc, r0
    58b0:	ldrb	r0, [r0, r7]
    58b4:	add	r5, r0, #18
    58b8:	ldr	r0, [sl, #4]
    58bc:	and	r0, r0, #1
    58c0:	smmla	r4, r5, r8, r5
    58c4:	cmp	r0, #0
    58c8:	asr	r6, r4, #6
    58cc:	add	r6, r6, r4, lsr #31
    58d0:	ldrb	r4, [r1]
    58d4:	add	r1, r1, #1
    58d8:	rsb	r6, r6, r6, lsl #7
    58dc:	sub	r5, r5, r6
    58e0:	ldrbne	r6, [r9, r5]
    58e4:	add	r5, r5, #1
    58e8:	eorne	r4, r6, r4
    58ec:	subs	r2, r2, #1
    58f0:	strb	r4, [r3], #1
    58f4:	bne	58c0 <fhs@@Base+0x134>
    58f8:	mov	r0, sl
    58fc:	bl	6950 <HV@@Base+0x518>
    5900:	cmp	r0, #0
    5904:	bne	5928 <fhs@@Base+0x19c>
    5908:	add	r7, r7, #1
    590c:	cmp	r7, #64	; 0x40
    5910:	bne	5890 <fhs@@Base+0x104>
    5914:	ldr	r0, [sp, #12]
    5918:	bl	4548 <free@plt>
    591c:	mov	r0, #0
    5920:	sub	sp, fp, #28
    5924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5928:	ldr	r0, [sp, #12]
    592c:	bl	4548 <free@plt>
    5930:	mov	r0, #1000	; 0x3e8
    5934:	sub	sp, fp, #28
    5938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    593c:	andeq	sp, r0, ip, ror #1
    5940:	andeq	sp, r0, lr, asr #4
    5944:			; <UNDEFINED> instruction: 0x0000d1b6

00005948 <DM@@Base>:
    5948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    594c:	add	fp, sp, #28
    5950:	sub	sp, sp, #12
    5954:	mov	r8, r0
    5958:	ldrb	r0, [r1, #18]
    595c:	mov	r4, r1
    5960:	sub	r1, r0, #3
    5964:	cmp	r1, #11
    5968:	bhi	5ad0 <DM@@Base+0x188>
    596c:	movw	r0, #2946	; 0xb82
    5970:	mov	r7, #20
    5974:	mov	r2, #1
    5978:	mov	r5, #0
    597c:	add	r9, r4, r0
    5980:	movw	r0, #2822	; 0xb06
    5984:	ldrh	r0, [r4, r0]
    5988:	add	r3, pc, #8
    598c:	ldr	r1, [r3, r1, lsl #2]
    5990:	sub	sl, r0, #122	; 0x7a
    5994:	add	pc, r3, r1
    5998:	andeq	r0, r0, r4, asr r0
    599c:	andeq	r0, r0, ip, lsr r1
    59a0:	andeq	r0, r0, ip, lsr r1
    59a4:	andeq	r0, r0, ip, lsr r1
    59a8:	andeq	r0, r0, ip, lsr r1
    59ac:	andeq	r0, r0, r0, lsr r0
    59b0:	andeq	r0, r0, ip, lsr r1
    59b4:	andeq	r0, r0, r4, asr #32
    59b8:	andeq	r0, r0, ip, lsr r1
    59bc:	andeq	r0, r0, ip, lsr r1
    59c0:	andeq	r0, r0, ip, lsr r1
    59c4:	andeq	r0, r0, ip, asr #32
    59c8:	movw	r1, #3026	; 0xbd2
    59cc:	sub	sl, r0, #202	; 0xca
    59d0:	mov	r7, #12
    59d4:	add	r9, r4, r1
    59d8:	b	59ec <DM@@Base+0xa4>
    59dc:	mov	r7, #125	; 0x7d
    59e0:	b	59e8 <DM@@Base+0xa0>
    59e4:	mov	r7, #228	; 0xe4
    59e8:	mov	r2, #2
    59ec:	mov	r5, #1
    59f0:	mov	r0, r9
    59f4:	mov	r1, r8
    59f8:	mov	r3, sl
    59fc:	str	r4, [sp, #4]
    5a00:	str	r5, [sp]
    5a04:	bl	6a8c <HV@@Base+0x654>
    5a08:	cmp	r0, #0
    5a0c:	beq	5ad0 <DM@@Base+0x188>
    5a10:	ldr	r6, [r4, #64]	; 0x40
    5a14:	cmp	r6, r7
    5a18:	bgt	5ad4 <DM@@Base+0x18c>
    5a1c:	cmp	sl, r6, lsl #3
    5a20:	blt	5ad4 <DM@@Base+0x18c>
    5a24:	lsl	r7, r6, #3
    5a28:	mov	r0, r9
    5a2c:	mov	r1, r7
    5a30:	bl	6718 <HV@@Base+0x2e0>
    5a34:	cmp	r0, #0
    5a38:	mov	r5, #0
    5a3c:	beq	5ad4 <DM@@Base+0x18c>
    5a40:	cmp	r6, #1
    5a44:	blt	5ab4 <DM@@Base+0x16c>
    5a48:	ldr	r2, [pc, #144]	; 5ae0 <DM@@Base+0x198>
    5a4c:	and	r1, r8, #63	; 0x3f
    5a50:	movw	lr, #1033	; 0x409
    5a54:	mov	r5, r0
    5a58:	movt	lr, #33026	; 0x8102
    5a5c:	add	r2, pc, r2
    5a60:	ldrb	r1, [r2, r1]
    5a64:	ldr	r2, [r4, #4]
    5a68:	ldr	ip, [pc, #116]	; 5ae4 <DM@@Base+0x19c>
    5a6c:	add	r6, r1, #18
    5a70:	add	r1, r4, #68	; 0x44
    5a74:	and	r8, r2, #1
    5a78:	add	ip, pc, ip
    5a7c:	smmla	r3, r6, lr, r6
    5a80:	cmp	r8, #0
    5a84:	asr	r2, r3, #6
    5a88:	add	r2, r2, r3, lsr #31
    5a8c:	ldrb	r3, [r5]
    5a90:	add	r5, r5, #1
    5a94:	rsb	r2, r2, r2, lsl #7
    5a98:	sub	r6, r6, r2
    5a9c:	ldrbne	r2, [ip, r6]
    5aa0:	add	r6, r6, #1
    5aa4:	eorne	r3, r2, r3
    5aa8:	subs	r7, r7, #1
    5aac:	strb	r3, [r1], #1
    5ab0:	bne	5a7c <DM@@Base+0x134>
    5ab4:	bl	4548 <free@plt>
    5ab8:	mov	r0, r4
    5abc:	bl	6950 <HV@@Base+0x518>
    5ac0:	cmp	r0, #0
    5ac4:	mov	r5, #10
    5ac8:	movweq	r5, #2
    5acc:	b	5ad4 <DM@@Base+0x18c>
    5ad0:	mov	r5, #0
    5ad4:	mov	r0, r5
    5ad8:	sub	sp, fp, #28
    5adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5ae0:	andeq	sp, r0, r6
    5ae4:	andeq	ip, r0, r0, ror lr

00005ae8 <DH@@Base>:
    5ae8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    5aec:	add	fp, sp, #24
    5af0:	sub	sp, sp, #8
    5af4:	mov	r8, r0
    5af8:	ldrb	r0, [r1, #18]
    5afc:	mov	r6, #0
    5b00:	sub	r0, r0, #4
    5b04:	cmp	r0, #11
    5b08:	bhi	5c4c <DH@@Base+0x164>
    5b0c:	mov	r5, r1
    5b10:	movw	r1, #2822	; 0xb06
    5b14:	mov	r2, #1
    5b18:	mov	r4, #30
    5b1c:	ldrh	r1, [r5, r1]
    5b20:	add	r3, pc, #4
    5b24:	ldr	r0, [r3, r0, lsl #2]
    5b28:	add	pc, r3, r0
    5b2c:	andeq	r0, r0, r4, asr #32
    5b30:	andeq	r0, r0, r0, lsr #2
    5b34:	andeq	r0, r0, r0, lsr #2
    5b38:	andeq	r0, r0, r0, lsr #2
    5b3c:	andeq	r0, r0, r0, lsr #2
    5b40:	andeq	r0, r0, r4, asr #32
    5b44:	andeq	r0, r0, r0, lsr #2
    5b48:	andeq	r0, r0, r0, lsr r0
    5b4c:	andeq	r0, r0, r0, lsr #2
    5b50:	andeq	r0, r0, r0, lsr #2
    5b54:	andeq	r0, r0, r0, lsr #2
    5b58:	andeq	r0, r0, ip, lsr r0
    5b5c:	mov	r2, #2
    5b60:	mov	r4, #187	; 0xbb
    5b64:	b	5b70 <DH@@Base+0x88>
    5b68:	mov	r2, #2
    5b6c:	movw	r4, #343	; 0x157
    5b70:	movw	r0, #2946	; 0xb82
    5b74:	sub	r7, r1, #122	; 0x7a
    5b78:	mov	r6, #0
    5b7c:	mov	r1, r8
    5b80:	str	r5, [sp, #4]
    5b84:	add	r0, r5, r0
    5b88:	mov	r3, r7
    5b8c:	str	r6, [sp]
    5b90:	bl	6a8c <HV@@Base+0x654>
    5b94:	cmp	r0, #0
    5b98:	beq	5c4c <DH@@Base+0x164>
    5b9c:	ldr	r0, [r5, #64]	; 0x40
    5ba0:	mov	r6, #1
    5ba4:	cmp	r0, r4
    5ba8:	bgt	5c4c <DH@@Base+0x164>
    5bac:	cmp	r7, r0, lsl #3
    5bb0:	blt	5c4c <DH@@Base+0x164>
    5bb4:	cmp	r0, #1
    5bb8:	blt	5c28 <DH@@Base+0x140>
    5bbc:	ldr	r2, [pc, #148]	; 5c58 <DH@@Base+0x170>
    5bc0:	and	r1, r8, #63	; 0x3f
    5bc4:	lsl	r0, r0, #3
    5bc8:	mov	r4, r5
    5bcc:	add	r2, pc, r2
    5bd0:	ldrb	r1, [r2, r1]
    5bd4:	movw	r2, #1033	; 0x409
    5bd8:	movt	r2, #33026	; 0x8102
    5bdc:	add	r7, r1, #18
    5be0:	ldr	r1, [r5, #4]
    5be4:	ldr	ip, [pc, #112]	; 5c5c <DH@@Base+0x174>
    5be8:	and	r1, r1, #1
    5bec:	add	ip, pc, ip
    5bf0:	smmla	r6, r7, r2, r7
    5bf4:	cmp	r1, #0
    5bf8:	asr	r3, r6, #6
    5bfc:	add	r3, r3, r6, lsr #31
    5c00:	ldrb	r6, [r4, #2946]	; 0xb82
    5c04:	rsb	r3, r3, r3, lsl #7
    5c08:	sub	r7, r7, r3
    5c0c:	ldrbne	r3, [ip, r7]
    5c10:	add	r7, r7, #1
    5c14:	eorne	r6, r3, r6
    5c18:	subs	r0, r0, #1
    5c1c:	strb	r6, [r4, #68]	; 0x44
    5c20:	add	r4, r4, #1
    5c24:	bne	5bf0 <DH@@Base+0x108>
    5c28:	ldrb	r0, [r5, #18]
    5c2c:	mov	r6, #2
    5c30:	cmp	r0, #9
    5c34:	beq	5c4c <DH@@Base+0x164>
    5c38:	mov	r0, r5
    5c3c:	bl	6950 <HV@@Base+0x518>
    5c40:	cmp	r0, #0
    5c44:	mov	r6, #10
    5c48:	movweq	r6, #2
    5c4c:	mov	r0, r6
    5c50:	sub	sp, fp, #24
    5c54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    5c58:	muleq	r0, r6, lr
    5c5c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>

00005c60 <EV3@@Base>:
    5c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5c64:	add	fp, sp, #28
    5c68:	sub	sp, sp, #4
    5c6c:	mov	r4, r1
    5c70:	mov	r1, #0
    5c74:	movw	r2, #2822	; 0xb06
    5c78:	movw	r7, #1033	; 0x409
    5c7c:	and	r9, r0, #63	; 0x3f
    5c80:	str	r1, [r4, #64]	; 0x40
    5c84:	movt	r7, #33026	; 0x8102
    5c88:	ldrh	r2, [r4, r2]
    5c8c:	ldr	r8, [pc, #524]	; 5ea0 <EV3@@Base+0x240>
    5c90:	ldr	r6, [pc, #524]	; 5ea4 <EV3@@Base+0x244>
    5c94:	sub	sl, r2, #122	; 0x7a
    5c98:	add	r8, pc, r8
    5c9c:	add	r6, pc, r6
    5ca0:	b	5cb4 <EV3@@Base+0x54>
    5ca4:	add	r1, r5, #1
    5ca8:	cmp	r1, #32
    5cac:	str	r1, [r4, #64]	; 0x40
    5cb0:	bge	5e94 <EV3@@Base+0x234>
    5cb4:	add	r0, r1, #1
    5cb8:	lsl	r0, r0, #3
    5cbc:	cmp	r0, sl
    5cc0:	bgt	5e88 <EV3@@Base+0x228>
    5cc4:	lsl	r0, r1, #3
    5cc8:	ldrb	r1, [r8, r9]
    5ccc:	add	r1, r0, r1
    5cd0:	add	r0, r4, r0
    5cd4:	add	r1, r1, #18
    5cd8:	add	r0, r0, #68	; 0x44
    5cdc:	smmla	r2, r1, r7, r1
    5ce0:	asr	r3, r2, #6
    5ce4:	add	r2, r3, r2, lsr #31
    5ce8:	ldrb	r3, [r4, #4]
    5cec:	sub	r2, r2, r2, lsl #7
    5cf0:	add	r1, r1, r2
    5cf4:	tst	r3, #1
    5cf8:	ldrb	r2, [r4, #2946]	; 0xb82
    5cfc:	ldrbne	r3, [r6, r1]
    5d00:	add	r1, r1, #1
    5d04:	eorne	r2, r3, r2
    5d08:	strb	r2, [r0]
    5d0c:	smmla	r2, r1, r7, r1
    5d10:	asr	r3, r2, #6
    5d14:	add	r2, r3, r2, lsr #31
    5d18:	ldrb	r3, [r4, #4]
    5d1c:	sub	r2, r2, r2, lsl #7
    5d20:	add	r1, r1, r2
    5d24:	tst	r3, #1
    5d28:	ldrb	r2, [r4, #2947]	; 0xb83
    5d2c:	ldrbne	r3, [r6, r1]
    5d30:	add	r1, r1, #1
    5d34:	eorne	r2, r3, r2
    5d38:	strb	r2, [r0, #1]
    5d3c:	smmla	r2, r1, r7, r1
    5d40:	asr	r3, r2, #6
    5d44:	add	r2, r3, r2, lsr #31
    5d48:	ldrb	r3, [r4, #4]
    5d4c:	sub	r2, r2, r2, lsl #7
    5d50:	add	r1, r1, r2
    5d54:	tst	r3, #1
    5d58:	ldrb	r2, [r4, #2948]	; 0xb84
    5d5c:	ldrbne	r3, [r6, r1]
    5d60:	add	r1, r1, #1
    5d64:	eorne	r2, r3, r2
    5d68:	strb	r2, [r0, #2]
    5d6c:	smmla	r2, r1, r7, r1
    5d70:	asr	r3, r2, #6
    5d74:	add	r2, r3, r2, lsr #31
    5d78:	ldrb	r3, [r4, #4]
    5d7c:	sub	r2, r2, r2, lsl #7
    5d80:	add	r1, r1, r2
    5d84:	tst	r3, #1
    5d88:	ldrb	r2, [r4, #2949]	; 0xb85
    5d8c:	ldrbne	r3, [r6, r1]
    5d90:	eorne	r2, r3, r2
    5d94:	strb	r2, [r0, #3]
    5d98:	ldrb	r3, [r4, #4]
    5d9c:	ldrb	r2, [r4, #2950]	; 0xb86
    5da0:	tst	r3, #1
    5da4:	bne	5dc4 <EV3@@Base+0x164>
    5da8:	strb	r2, [r0, #4]
    5dac:	ldrb	r1, [r4, #2951]	; 0xb87
    5db0:	strb	r1, [r0, #5]
    5db4:	ldrb	r1, [r4, #2952]	; 0xb88
    5db8:	strb	r1, [r0, #6]
    5dbc:	ldrb	r1, [r4, #2953]	; 0xb89
    5dc0:	b	5e5c <EV3@@Base+0x1fc>
    5dc4:	add	r1, r1, #1
    5dc8:	smmla	r3, r1, r7, r1
    5dcc:	asr	r5, r3, #6
    5dd0:	add	r3, r5, r3, lsr #31
    5dd4:	sub	r3, r3, r3, lsl #7
    5dd8:	add	r1, r1, r3
    5ddc:	ldrb	r3, [r6, r1]
    5de0:	add	r1, r1, #1
    5de4:	eor	r2, r3, r2
    5de8:	strb	r2, [r0, #4]
    5dec:	smmla	r2, r1, r7, r1
    5df0:	asr	r3, r2, #6
    5df4:	add	r2, r3, r2, lsr #31
    5df8:	ldrb	r3, [r4, #2951]	; 0xb87
    5dfc:	sub	r2, r2, r2, lsl #7
    5e00:	add	r1, r1, r2
    5e04:	ldrb	r2, [r6, r1]
    5e08:	add	r1, r1, #1
    5e0c:	eor	r2, r2, r3
    5e10:	strb	r2, [r0, #5]
    5e14:	smmla	r2, r1, r7, r1
    5e18:	asr	r3, r2, #6
    5e1c:	add	r2, r3, r2, lsr #31
    5e20:	ldrb	r3, [r4, #2952]	; 0xb88
    5e24:	sub	r2, r2, r2, lsl #7
    5e28:	add	r1, r1, r2
    5e2c:	ldrb	r2, [r6, r1]
    5e30:	add	r1, r1, #1
    5e34:	eor	r2, r2, r3
    5e38:	strb	r2, [r0, #6]
    5e3c:	smmla	r2, r1, r7, r1
    5e40:	asr	r3, r2, #6
    5e44:	add	r2, r3, r2, lsr #31
    5e48:	sub	r2, r2, r2, lsl #7
    5e4c:	add	r1, r1, r2
    5e50:	ldrb	r2, [r4, #2953]	; 0xb89
    5e54:	ldrb	r1, [r6, r1]
    5e58:	eor	r1, r1, r2
    5e5c:	strb	r1, [r0, #7]
    5e60:	ldr	r5, [r4, #64]	; 0x40
    5e64:	cmp	r5, #2
    5e68:	ble	5ca4 <EV3@@Base+0x44>
    5e6c:	mov	r0, r4
    5e70:	bl	6950 <HV@@Base+0x518>
    5e74:	cmp	r0, #0
    5e78:	beq	5ca4 <EV3@@Base+0x44>
    5e7c:	mov	r0, #10
    5e80:	sub	sp, fp, #28
    5e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5e88:	mov	r0, #1
    5e8c:	sub	sp, fp, #28
    5e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5e94:	mov	r0, #2
    5e98:	sub	sp, fp, #28
    5e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5ea0:	andeq	ip, r0, sl, asr #27
    5ea4:	andeq	ip, r0, ip, asr #24

00005ea8 <EV4@@Base>:
    5ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5eac:	add	fp, sp, #28
    5eb0:	sub	sp, sp, #12
    5eb4:	mov	r5, r1
    5eb8:	mov	r1, #1
    5ebc:	and	r0, r0, #63	; 0x3f
    5ec0:	movw	sl, #2065	; 0x811
    5ec4:	mov	r4, #0
    5ec8:	mov	r6, #0
    5ecc:	str	r1, [r5, #64]	; 0x40
    5ed0:	movw	r1, #2946	; 0xb82
    5ed4:	str	r0, [sp]
    5ed8:	movt	sl, #516	; 0x204
    5edc:	add	r1, r5, r1
    5ee0:	str	r1, [sp, #4]
    5ee4:	movw	r1, #2822	; 0xb06
    5ee8:	ldrh	r1, [r5, r1]
    5eec:	sub	r1, r1, #122	; 0x7a
    5ef0:	str	r1, [sp, #8]
    5ef4:	ldr	r8, [pc, #744]	; 61e4 <EV4@@Base+0x33c>
    5ef8:	add	r8, pc, r8
    5efc:	b	5f14 <EV4@@Base+0x6c>
    5f00:	movw	r0, #1470	; 0x5be
    5f04:	add	r4, r4, #10
    5f08:	mov	r6, r9
    5f0c:	cmp	r9, r0
    5f10:	bcs	61d8 <EV4@@Base+0x330>
    5f14:	ldr	r0, [sp, #8]
    5f18:	add	r9, r6, #15
    5f1c:	cmp	r9, r0
    5f20:	bgt	61b8 <EV4@@Base+0x310>
    5f24:	ldr	r0, [sp, #4]
    5f28:	mov	r1, #10
    5f2c:	add	r0, r0, r6
    5f30:	bl	6718 <HV@@Base+0x2e0>
    5f34:	cmp	r0, #0
    5f38:	beq	61c4 <EV4@@Base+0x31c>
    5f3c:	ldr	r1, [sp]
    5f40:	ldr	r2, [pc, #672]	; 61e8 <EV4@@Base+0x340>
    5f44:	ldrb	r6, [r5, #4]
    5f48:	add	r2, pc, r2
    5f4c:	tst	r6, #1
    5f50:	ldrb	r1, [r2, r1]
    5f54:	ldrb	r2, [r0]
    5f58:	add	r1, r4, r1
    5f5c:	add	r3, r1, #18
    5f60:	umull	r1, r7, r3, sl
    5f64:	add	r1, r5, r4
    5f68:	add	r1, r1, #68	; 0x44
    5f6c:	bne	5fbc <EV4@@Base+0x114>
    5f70:	strb	r2, [r1]
    5f74:	ldrb	r2, [r0, #1]
    5f78:	strb	r2, [r1, #1]
    5f7c:	ldrb	r2, [r0, #2]
    5f80:	strb	r2, [r1, #2]
    5f84:	ldrb	r2, [r0, #3]
    5f88:	strb	r2, [r1, #3]
    5f8c:	ldrb	r2, [r0, #4]
    5f90:	strb	r2, [r1, #4]
    5f94:	ldrb	r2, [r0, #5]
    5f98:	strb	r2, [r1, #5]
    5f9c:	ldrb	r2, [r0, #6]
    5fa0:	strb	r2, [r1, #6]
    5fa4:	ldrb	r2, [r0, #7]
    5fa8:	strb	r2, [r1, #7]
    5fac:	ldrb	r2, [r0, #8]
    5fb0:	strb	r2, [r1, #8]
    5fb4:	ldrb	r2, [r0, #9]
    5fb8:	b	6168 <EV4@@Base+0x2c0>
    5fbc:	sub	r6, r3, r7
    5fc0:	add	r7, r7, r6, lsr #1
    5fc4:	lsr	r7, r7, #6
    5fc8:	sub	r7, r7, r7, lsl #7
    5fcc:	add	r3, r3, r7
    5fd0:	ldrb	r7, [r8, r3]
    5fd4:	eor	r2, r7, r2
    5fd8:	strb	r2, [r1]
    5fdc:	add	r2, r3, #1
    5fe0:	uxtb	r3, r2
    5fe4:	umull	r7, r6, r3, sl
    5fe8:	ldrb	r7, [r0, #1]
    5fec:	sub	r3, r3, r6
    5ff0:	add	r3, r6, r3, lsr #1
    5ff4:	lsr	r3, r3, #6
    5ff8:	sub	r3, r3, r3, lsl #7
    5ffc:	uxtab	r2, r3, r2
    6000:	ldrb	r3, [r8, r2]
    6004:	add	r2, r2, #1
    6008:	eor	r3, r3, r7
    600c:	strb	r3, [r1, #1]
    6010:	umull	r3, r7, r2, sl
    6014:	sub	r3, r2, r7
    6018:	add	r3, r7, r3, lsr #1
    601c:	ldrb	r7, [r0, #2]
    6020:	lsr	r3, r3, #6
    6024:	sub	r3, r3, r3, lsl #7
    6028:	add	r2, r2, r3
    602c:	ldrb	r3, [r8, r2]
    6030:	add	r2, r2, #1
    6034:	eor	r3, r3, r7
    6038:	strb	r3, [r1, #2]
    603c:	umull	r3, r7, r2, sl
    6040:	sub	r3, r2, r7
    6044:	add	r3, r7, r3, lsr #1
    6048:	ldrb	r7, [r0, #3]
    604c:	lsr	r3, r3, #6
    6050:	sub	r3, r3, r3, lsl #7
    6054:	add	r2, r2, r3
    6058:	ldrb	r3, [r8, r2]
    605c:	add	r2, r2, #1
    6060:	eor	r3, r3, r7
    6064:	strb	r3, [r1, #3]
    6068:	umull	r3, r7, r2, sl
    606c:	sub	r3, r2, r7
    6070:	add	r3, r7, r3, lsr #1
    6074:	ldrb	r7, [r0, #4]
    6078:	lsr	r3, r3, #6
    607c:	sub	r3, r3, r3, lsl #7
    6080:	add	r2, r2, r3
    6084:	ldrb	r3, [r8, r2]
    6088:	add	r2, r2, #1
    608c:	eor	r3, r3, r7
    6090:	strb	r3, [r1, #4]
    6094:	umull	r3, r7, r2, sl
    6098:	sub	r3, r2, r7
    609c:	add	r3, r7, r3, lsr #1
    60a0:	ldrb	r7, [r0, #5]
    60a4:	lsr	r3, r3, #6
    60a8:	sub	r3, r3, r3, lsl #7
    60ac:	add	r2, r2, r3
    60b0:	ldrb	r3, [r8, r2]
    60b4:	add	r2, r2, #1
    60b8:	eor	r3, r3, r7
    60bc:	strb	r3, [r1, #5]
    60c0:	umull	r3, r7, r2, sl
    60c4:	sub	r3, r2, r7
    60c8:	add	r3, r7, r3, lsr #1
    60cc:	ldrb	r7, [r0, #6]
    60d0:	lsr	r3, r3, #6
    60d4:	sub	r3, r3, r3, lsl #7
    60d8:	add	r2, r2, r3
    60dc:	ldrb	r3, [r8, r2]
    60e0:	add	r2, r2, #1
    60e4:	eor	r3, r3, r7
    60e8:	strb	r3, [r1, #6]
    60ec:	umull	r3, r7, r2, sl
    60f0:	sub	r3, r2, r7
    60f4:	add	r3, r7, r3, lsr #1
    60f8:	ldrb	r7, [r0, #7]
    60fc:	lsr	r3, r3, #6
    6100:	sub	r3, r3, r3, lsl #7
    6104:	add	r2, r2, r3
    6108:	ldrb	r3, [r8, r2]
    610c:	add	r2, r2, #1
    6110:	eor	r3, r3, r7
    6114:	strb	r3, [r1, #7]
    6118:	umull	r3, r7, r2, sl
    611c:	sub	r3, r2, r7
    6120:	add	r3, r7, r3, lsr #1
    6124:	ldrb	r7, [r0, #8]
    6128:	lsr	r3, r3, #6
    612c:	sub	r3, r3, r3, lsl #7
    6130:	add	r2, r2, r3
    6134:	ldrb	r3, [r8, r2]
    6138:	add	r2, r2, #1
    613c:	eor	r3, r3, r7
    6140:	strb	r3, [r1, #8]
    6144:	umull	r3, r7, r2, sl
    6148:	sub	r3, r2, r7
    614c:	add	r3, r7, r3, lsr #1
    6150:	lsr	r3, r3, #6
    6154:	sub	r3, r3, r3, lsl #7
    6158:	add	r2, r2, r3
    615c:	ldrb	r3, [r0, #9]
    6160:	ldrb	r2, [r8, r2]
    6164:	eor	r2, r2, r3
    6168:	strb	r2, [r1, #9]
    616c:	bl	4548 <free@plt>
    6170:	ldr	r0, [r5, #64]	; 0x40
    6174:	cmp	r4, r0, lsl #3
    6178:	blt	5f00 <EV4@@Base+0x58>
    617c:	add	r6, r0, #1
    6180:	lsl	r7, r0, #3
    6184:	mov	r0, r5
    6188:	bl	6950 <HV@@Base+0x518>
    618c:	cmp	r0, #0
    6190:	bne	61ac <EV4@@Base+0x304>
    6194:	add	r7, r7, #8
    6198:	str	r6, [r5, #64]	; 0x40
    619c:	add	r6, r6, #1
    61a0:	cmp	r7, r4
    61a4:	ble	6184 <EV4@@Base+0x2dc>
    61a8:	b	5f00 <EV4@@Base+0x58>
    61ac:	mov	r0, #10
    61b0:	sub	sp, fp, #28
    61b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    61b8:	mov	r0, #1
    61bc:	sub	sp, fp, #28
    61c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    61c4:	cmp	r6, #44	; 0x2c
    61c8:	mov	r0, #0
    61cc:	movwhi	r0, #1
    61d0:	sub	sp, fp, #28
    61d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    61d8:	mov	r0, #2
    61dc:	sub	sp, fp, #28
    61e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    61e4:	strdeq	ip, [r0], -r0
    61e8:	andeq	ip, r0, sl, lsl fp

000061ec <EV5@@Base>:
    61ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    61f0:	add	fp, sp, #28
    61f4:	sub	sp, sp, #4
    61f8:	mov	r4, r1
    61fc:	mov	r1, #0
    6200:	movw	r2, #2822	; 0xb06
    6204:	movw	r7, #1033	; 0x409
    6208:	and	r9, r0, #63	; 0x3f
    620c:	str	r1, [r4, #64]	; 0x40
    6210:	movt	r7, #33026	; 0x8102
    6214:	ldrh	r2, [r4, r2]
    6218:	ldr	r8, [pc, #524]	; 642c <EV5@@Base+0x240>
    621c:	ldr	r6, [pc, #524]	; 6430 <EV5@@Base+0x244>
    6220:	sub	sl, r2, #122	; 0x7a
    6224:	add	r8, pc, r8
    6228:	add	r6, pc, r6
    622c:	b	6240 <EV5@@Base+0x54>
    6230:	add	r1, r5, #1
    6234:	cmp	r1, #182	; 0xb6
    6238:	str	r1, [r4, #64]	; 0x40
    623c:	bge	6420 <EV5@@Base+0x234>
    6240:	add	r0, r1, #1
    6244:	lsl	r0, r0, #3
    6248:	cmp	r0, sl
    624c:	bgt	6414 <EV5@@Base+0x228>
    6250:	lsl	r0, r1, #3
    6254:	ldrb	r1, [r8, r9]
    6258:	add	r1, r0, r1
    625c:	add	r0, r4, r0
    6260:	add	r1, r1, #18
    6264:	add	r0, r0, #68	; 0x44
    6268:	smmla	r2, r1, r7, r1
    626c:	asr	r3, r2, #6
    6270:	add	r2, r3, r2, lsr #31
    6274:	ldrb	r3, [r4, #4]
    6278:	sub	r2, r2, r2, lsl #7
    627c:	add	r1, r1, r2
    6280:	tst	r3, #1
    6284:	ldrb	r2, [r4, #2946]	; 0xb82
    6288:	ldrbne	r3, [r6, r1]
    628c:	add	r1, r1, #1
    6290:	eorne	r2, r3, r2
    6294:	strb	r2, [r0]
    6298:	smmla	r2, r1, r7, r1
    629c:	asr	r3, r2, #6
    62a0:	add	r2, r3, r2, lsr #31
    62a4:	ldrb	r3, [r4, #4]
    62a8:	sub	r2, r2, r2, lsl #7
    62ac:	add	r1, r1, r2
    62b0:	tst	r3, #1
    62b4:	ldrb	r2, [r4, #2947]	; 0xb83
    62b8:	ldrbne	r3, [r6, r1]
    62bc:	add	r1, r1, #1
    62c0:	eorne	r2, r3, r2
    62c4:	strb	r2, [r0, #1]
    62c8:	smmla	r2, r1, r7, r1
    62cc:	asr	r3, r2, #6
    62d0:	add	r2, r3, r2, lsr #31
    62d4:	ldrb	r3, [r4, #4]
    62d8:	sub	r2, r2, r2, lsl #7
    62dc:	add	r1, r1, r2
    62e0:	tst	r3, #1
    62e4:	ldrb	r2, [r4, #2948]	; 0xb84
    62e8:	ldrbne	r3, [r6, r1]
    62ec:	add	r1, r1, #1
    62f0:	eorne	r2, r3, r2
    62f4:	strb	r2, [r0, #2]
    62f8:	smmla	r2, r1, r7, r1
    62fc:	asr	r3, r2, #6
    6300:	add	r2, r3, r2, lsr #31
    6304:	ldrb	r3, [r4, #4]
    6308:	sub	r2, r2, r2, lsl #7
    630c:	add	r1, r1, r2
    6310:	tst	r3, #1
    6314:	ldrb	r2, [r4, #2949]	; 0xb85
    6318:	ldrbne	r3, [r6, r1]
    631c:	eorne	r2, r3, r2
    6320:	strb	r2, [r0, #3]
    6324:	ldrb	r3, [r4, #4]
    6328:	ldrb	r2, [r4, #2950]	; 0xb86
    632c:	tst	r3, #1
    6330:	bne	6350 <EV5@@Base+0x164>
    6334:	strb	r2, [r0, #4]
    6338:	ldrb	r1, [r4, #2951]	; 0xb87
    633c:	strb	r1, [r0, #5]
    6340:	ldrb	r1, [r4, #2952]	; 0xb88
    6344:	strb	r1, [r0, #6]
    6348:	ldrb	r1, [r4, #2953]	; 0xb89
    634c:	b	63e8 <EV5@@Base+0x1fc>
    6350:	add	r1, r1, #1
    6354:	smmla	r3, r1, r7, r1
    6358:	asr	r5, r3, #6
    635c:	add	r3, r5, r3, lsr #31
    6360:	sub	r3, r3, r3, lsl #7
    6364:	add	r1, r1, r3
    6368:	ldrb	r3, [r6, r1]
    636c:	add	r1, r1, #1
    6370:	eor	r2, r3, r2
    6374:	strb	r2, [r0, #4]
    6378:	smmla	r2, r1, r7, r1
    637c:	asr	r3, r2, #6
    6380:	add	r2, r3, r2, lsr #31
    6384:	ldrb	r3, [r4, #2951]	; 0xb87
    6388:	sub	r2, r2, r2, lsl #7
    638c:	add	r1, r1, r2
    6390:	ldrb	r2, [r6, r1]
    6394:	add	r1, r1, #1
    6398:	eor	r2, r2, r3
    639c:	strb	r2, [r0, #5]
    63a0:	smmla	r2, r1, r7, r1
    63a4:	asr	r3, r2, #6
    63a8:	add	r2, r3, r2, lsr #31
    63ac:	ldrb	r3, [r4, #2952]	; 0xb88
    63b0:	sub	r2, r2, r2, lsl #7
    63b4:	add	r1, r1, r2
    63b8:	ldrb	r2, [r6, r1]
    63bc:	add	r1, r1, #1
    63c0:	eor	r2, r2, r3
    63c4:	strb	r2, [r0, #6]
    63c8:	smmla	r2, r1, r7, r1
    63cc:	asr	r3, r2, #6
    63d0:	add	r2, r3, r2, lsr #31
    63d4:	sub	r2, r2, r2, lsl #7
    63d8:	add	r1, r1, r2
    63dc:	ldrb	r2, [r4, #2953]	; 0xb89
    63e0:	ldrb	r1, [r6, r1]
    63e4:	eor	r1, r1, r2
    63e8:	strb	r1, [r0, #7]
    63ec:	ldr	r5, [r4, #64]	; 0x40
    63f0:	cmp	r5, #2
    63f4:	ble	6230 <EV5@@Base+0x44>
    63f8:	mov	r0, r4
    63fc:	bl	6950 <HV@@Base+0x518>
    6400:	cmp	r0, #0
    6404:	beq	6230 <EV5@@Base+0x44>
    6408:	mov	r0, #10
    640c:	sub	sp, fp, #28
    6410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6414:	mov	r0, #1
    6418:	sub	sp, fp, #28
    641c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6420:	mov	r0, #2
    6424:	sub	sp, fp, #28
    6428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    642c:	andeq	ip, r0, lr, lsr r8
    6430:	andeq	ip, r0, r0, asr #13
    6434:	nop	{0}

00006438 <HV@@Base>:
    6438:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    643c:	add	fp, sp, #24
    6440:	sub	sp, sp, #80	; 0x50
    6444:	mov	r6, r0
    6448:	mov	r0, #0
    644c:	mov	r5, r1
    6450:	str	r0, [r1, #40]	; 0x28
    6454:	movw	r1, #2822	; 0xb06
    6458:	ldrh	r1, [r5, r1]
    645c:	lsr	r1, r1, #1
    6460:	cmp	r1, #180	; 0xb4
    6464:	bhi	647c <HV@@Base+0x44>
    6468:	str	r0, [r5, #64]	; 0x40
    646c:	mov	r8, #1
    6470:	mov	r0, r8
    6474:	sub	sp, fp, #24
    6478:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    647c:	ldrb	r0, [r5, #18]
    6480:	mov	r8, #2
    6484:	cmp	r0, #7
    6488:	beq	65c4 <HV@@Base+0x18c>
    648c:	cmp	r0, #6
    6490:	beq	6644 <HV@@Base+0x20c>
    6494:	cmp	r0, #5
    6498:	bne	6470 <HV@@Base+0x38>
    649c:	vldr	d18, [pc, #580]	; 66e8 <HV@@Base+0x2b0>
    64a0:	vldr	d19, [pc, #584]	; 66f0 <HV@@Base+0x2b8>
    64a4:	vldr	d20, [pc, #588]	; 66f8 <HV@@Base+0x2c0>
    64a8:	vmov.i32	q8, #0	; 0x00000000
    64ac:	vmov.i32	q11, #255	; 0x000000ff
    64b0:	movw	r0, #2946	; 0xb82
    64b4:	mov	r2, #0
    64b8:	add	r1, r5, r0
    64bc:	mov	r0, sp
    64c0:	mov	r3, r1
    64c4:	add	r1, r1, #12
    64c8:	vld1.8	{d24}, [r3]!
    64cc:	ldr	r3, [r3]
    64d0:	vmov.32	d25[0], r3
    64d4:	add	r3, r0, r2
    64d8:	add	r2, r2, #4
    64dc:	cmp	r2, #80	; 0x50
    64e0:	vtbl.8	d21, {d24-d25}, d18
    64e4:	vtbl.8	d26, {d24-d25}, d19
    64e8:	vtbl.8	d24, {d24-d25}, d20
    64ec:	veor	d25, d26, d21
    64f0:	veor	d27, d24, d26
    64f4:	veor	d28, d24, d21
    64f8:	vorr	d25, d27, d25
    64fc:	vorr	d27, d24, d21
    6500:	vand	d21, d24, d21
    6504:	vorr	d25, d25, d28
    6508:	vand	d24, d27, d26
    650c:	vmovl.u16	q13, d25
    6510:	vorr	d21, d24, d21
    6514:	vand	q12, q13, q11
    6518:	vuzp.8	d21, d26
    651c:	vadd.i32	q8, q8, q12
    6520:	vst1.32	{d21[0]}, [r3]
    6524:	bne	64c0 <HV@@Base+0x88>
    6528:	vext.8	q9, q8, q8, #8
    652c:	vadd.i32	q8, q8, q9
    6530:	vdup.32	q9, d16[1]
    6534:	vadd.i32	q8, q8, q9
    6538:	vmov.32	r1, d16[0]
    653c:	cmp	r1, #19
    6540:	bhi	66e0 <HV@@Base+0x2a8>
    6544:	mov	r1, #10
    6548:	str	r1, [r5, #64]	; 0x40
    654c:	ldr	r2, [r5, #4]
    6550:	orr	r1, r2, #128	; 0x80
    6554:	and	r2, r2, #1
    6558:	str	r1, [r5, #4]
    655c:	and	r1, r6, #63	; 0x3f
    6560:	movw	r6, #1033	; 0x409
    6564:	ldr	r3, [pc, #404]	; 6700 <HV@@Base+0x2c8>
    6568:	ldr	ip, [pc, #404]	; 6704 <HV@@Base+0x2cc>
    656c:	movt	r6, #33026	; 0x8102
    6570:	add	r3, pc, r3
    6574:	add	ip, pc, ip
    6578:	ldrb	r1, [r3, r1]
    657c:	mov	r3, #0
    6580:	add	r4, r1, #18
    6584:	add	r1, r5, #68	; 0x44
    6588:	smmla	r7, r4, r6, r4
    658c:	cmp	r2, #0
    6590:	asr	r5, r7, #6
    6594:	add	r7, r5, r7, lsr #31
    6598:	rsb	r7, r7, r7, lsl #7
    659c:	sub	r4, r4, r7
    65a0:	ldrb	r7, [r0, r3]
    65a4:	ldrbne	r5, [ip, r4]
    65a8:	add	r4, r4, #1
    65ac:	eorne	r7, r5, r7
    65b0:	strb	r7, [r1, r3]
    65b4:	add	r3, r3, #1
    65b8:	cmp	r3, #80	; 0x50
    65bc:	bne	6588 <HV@@Base+0x150>
    65c0:	b	6470 <HV@@Base+0x38>
    65c4:	mov	r0, #30
    65c8:	str	r0, [r5, #64]	; 0x40
    65cc:	ldr	r0, [r5, #4]
    65d0:	orr	r1, r0, #128	; 0x80
    65d4:	and	r0, r0, #1
    65d8:	str	r1, [r5, #4]
    65dc:	and	r1, r6, #63	; 0x3f
    65e0:	ldr	r2, [pc, #296]	; 6710 <HV@@Base+0x2d8>
    65e4:	ldr	ip, [pc, #296]	; 6714 <HV@@Base+0x2dc>
    65e8:	add	r2, pc, r2
    65ec:	add	ip, pc, ip
    65f0:	ldrb	r1, [r2, r1]
    65f4:	movw	r2, #1033	; 0x409
    65f8:	movt	r2, #33026	; 0x8102
    65fc:	add	r6, r1, #18
    6600:	mov	r1, #0
    6604:	smmla	r7, r6, r2, r6
    6608:	cmp	r0, #0
    660c:	asr	r4, r7, #6
    6610:	add	r7, r4, r7, lsr #31
    6614:	add	r4, r5, r1
    6618:	add	r1, r1, #1
    661c:	rsb	r7, r7, r7, lsl #7
    6620:	sub	r6, r6, r7
    6624:	ldrb	r7, [r4, #2946]	; 0xb82
    6628:	ldrbne	r3, [ip, r6]
    662c:	add	r6, r6, #1
    6630:	eorne	r7, r3, r7
    6634:	cmp	r1, #240	; 0xf0
    6638:	strb	r7, [r4, #68]	; 0x44
    663c:	bne	6604 <HV@@Base+0x1cc>
    6640:	b	6470 <HV@@Base+0x38>
    6644:	movw	r0, #2946	; 0xb82
    6648:	mov	r1, #160	; 0xa0
    664c:	add	r0, r5, r0
    6650:	bl	6718 <HV@@Base+0x2e0>
    6654:	cmp	r0, #0
    6658:	beq	66e0 <HV@@Base+0x2a8>
    665c:	mov	r1, #20
    6660:	str	r1, [r5, #64]	; 0x40
    6664:	ldr	r2, [r5, #4]
    6668:	orr	r1, r2, #128	; 0x80
    666c:	and	r2, r2, #1
    6670:	str	r1, [r5, #4]
    6674:	and	r1, r6, #63	; 0x3f
    6678:	movw	r6, #1033	; 0x409
    667c:	ldr	r3, [pc, #132]	; 6708 <HV@@Base+0x2d0>
    6680:	ldr	ip, [pc, #132]	; 670c <HV@@Base+0x2d4>
    6684:	movt	r6, #33026	; 0x8102
    6688:	add	r3, pc, r3
    668c:	add	ip, pc, ip
    6690:	ldrb	r1, [r3, r1]
    6694:	mov	r3, #0
    6698:	add	r4, r1, #18
    669c:	add	r1, r5, #68	; 0x44
    66a0:	smmla	r7, r4, r6, r4
    66a4:	cmp	r2, #0
    66a8:	asr	r5, r7, #6
    66ac:	add	r7, r5, r7, lsr #31
    66b0:	rsb	r7, r7, r7, lsl #7
    66b4:	sub	r4, r4, r7
    66b8:	ldrb	r7, [r0, r3]
    66bc:	ldrbne	r5, [ip, r4]
    66c0:	add	r4, r4, #1
    66c4:	eorne	r7, r5, r7
    66c8:	strb	r7, [r1, r3]
    66cc:	add	r3, r3, #1
    66d0:	cmp	r3, #160	; 0xa0
    66d4:	bne	66a0 <HV@@Base+0x268>
    66d8:	bl	4548 <free@plt>
    66dc:	b	6470 <HV@@Base+0x38>
    66e0:	mov	r8, #0
    66e4:	b	6470 <HV@@Base+0x38>
    66e8:			; <UNDEFINED> instruction: 0xff03ff00
    66ec:			; <UNDEFINED> instruction: 0xff09ff06
    66f0:			; <UNDEFINED> instruction: 0xff04ff01
    66f4:			; <UNDEFINED> instruction: 0xff0aff07
    66f8:			; <UNDEFINED> instruction: 0xff05ff02
    66fc:			; <UNDEFINED> instruction: 0xff0bff08
    6700:	strdeq	ip, [r0], -r2
    6704:	andeq	ip, r0, r4, ror r3
    6708:	ldrdeq	ip, [r0], -sl
    670c:	andeq	ip, r0, ip, asr r2
    6710:	andeq	ip, r0, sl, ror r4
    6714:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    6718:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    671c:	add	fp, sp, #24
    6720:	mov	r5, r0
    6724:	movw	r0, #26215	; 0x6667
    6728:	mov	r8, r1
    672c:	movt	r0, #26214	; 0x6666
    6730:	smmul	r0, r1, r0
    6734:	lsr	r1, r0, #2
    6738:	add	r0, r1, r0, lsr #31
    673c:	add	r0, r0, r0, lsl #2
    6740:	sub	r0, r8, r0, lsl #1
    6744:	uxtb	r0, r0
    6748:	sub	r1, r8, r0
    674c:	cmp	r0, #0
    6750:	addne	r8, r1, #10
    6754:	mov	r0, r8
    6758:	bl	462c <malloc@plt>
    675c:	cmp	r8, #1
    6760:	blt	6940 <HV@@Base+0x508>
    6764:	mov	r1, #0
    6768:	mvn	ip, #6
    676c:	b	6790 <HV@@Base+0x358>
    6770:	mov	r3, r1
    6774:	ldrb	r2, [r0, r3]
    6778:	eor	r2, r2, #1
    677c:	strb	r2, [r0, r3]
    6780:	add	r1, r1, #10
    6784:	add	r5, r5, #15
    6788:	cmp	r1, r8
    678c:	bge	6940 <HV@@Base+0x508>
    6790:	vld1.8	{d16}, [r5]
    6794:	ldrh	r2, [r5, #8]
    6798:	add	r3, r0, r1
    679c:	strh	r2, [r3, #8]
    67a0:	vst1.8	{d16}, [r3]
    67a4:	ldrb	r2, [r5]
    67a8:	ldrb	r3, [r5, #1]
    67ac:	ldrb	r4, [r5, #2]
    67b0:	ldrb	r6, [r5, #3]
    67b4:	orr	r7, r2, r3, lsl #1
    67b8:	and	r2, r2, #1
    67bc:	rsb	r2, r2, #0
    67c0:	and	r3, r2, #11
    67c4:	tst	r7, #2
    67c8:	orr	r2, r7, r4, lsl #2
    67cc:	ldrb	r7, [r5, #4]
    67d0:	eorne	r3, r3, #22
    67d4:	tst	r2, #4
    67d8:	orr	r2, r2, r6, lsl #3
    67dc:	eorne	r3, r3, #7
    67e0:	tst	r2, #8
    67e4:	orr	r2, r2, r7, lsl #4
    67e8:	ldrb	r7, [r5, #5]
    67ec:	eorne	r3, r3, #14
    67f0:	tst	r2, #16
    67f4:	eorne	r3, r3, #28
    67f8:	orr	r2, r2, r7, lsl #5
    67fc:	ldrb	r7, [r5, #6]
    6800:	tst	r2, #32
    6804:	eorne	r3, r3, #19
    6808:	orr	r2, r2, r7, lsl #6
    680c:	ldrb	r7, [r5, #7]
    6810:	tst	r2, #64	; 0x40
    6814:	eorne	r3, r3, #13
    6818:	orr	r2, r2, r7, lsl #7
    681c:	ldrb	r7, [r5, #8]
    6820:	tst	r2, #128	; 0x80
    6824:	eorne	r3, r3, #26
    6828:	orr	r2, r2, r7, lsl #8
    682c:	ldrb	r7, [r5, #9]
    6830:	tst	r2, #256	; 0x100
    6834:	eorne	r3, r3, #31
    6838:	orr	r2, r2, r7, lsl #9
    683c:	ldrb	r7, [r5, #10]
    6840:	tst	r2, #512	; 0x200
    6844:	ldrb	r2, [r5, #11]
    6848:	eorne	r3, r3, #21
    684c:	orr	r2, r7, r2, lsl #1
    6850:	ldrb	r7, [r5, #12]
    6854:	orr	r2, r2, r7, lsl #2
    6858:	ldrb	r7, [r5, #13]
    685c:	orr	r2, r2, r7, lsl #3
    6860:	ldrb	r7, [r5, #14]
    6864:	orr	r2, r2, r7, lsl #4
    6868:	eor	r3, r2, r3
    686c:	sub	r2, r3, #1
    6870:	and	r2, r3, r2
    6874:	tst	r2, #255	; 0xff
    6878:	beq	6780 <HV@@Base+0x348>
    687c:	uxtab	r3, ip, r3
    6880:	cmp	r3, #24
    6884:	bhi	6944 <HV@@Base+0x50c>
    6888:	add	r2, pc, #4
    688c:	ldr	r3, [r2, r3, lsl #2]
    6890:	add	pc, r2, r3
    6894:	andeq	r0, r0, r4, rrx
    6898:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    689c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68a0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68a4:			; <UNDEFINED> instruction: 0xfffffedc
    68a8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68ac:	andeq	r0, r0, ip, rrx
    68b0:	andeq	r0, r0, r4, ror r0
    68b4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68b8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68bc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68c0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68c4:	andeq	r0, r0, ip, ror r0
    68c8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68cc:	andeq	r0, r0, r4, lsl #1
    68d0:	andeq	r0, r0, ip, lsl #1
    68d4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68d8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68dc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68e0:	muleq	r0, r4, r0
    68e4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68e8:	muleq	r0, ip, r0
    68ec:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68f0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    68f4:	andeq	r0, r0, r4, lsr #1
    68f8:	add	r3, r1, #2
    68fc:	b	6774 <HV@@Base+0x33c>
    6900:	add	r3, r1, #6
    6904:	b	6774 <HV@@Base+0x33c>
    6908:	add	r3, r1, #3
    690c:	b	6774 <HV@@Base+0x33c>
    6910:	add	r3, r1, #5
    6914:	b	6774 <HV@@Base+0x33c>
    6918:	add	r3, r1, #9
    691c:	b	6774 <HV@@Base+0x33c>
    6920:	orr	r3, r1, #1
    6924:	b	6774 <HV@@Base+0x33c>
    6928:	add	r3, r1, #7
    692c:	b	6774 <HV@@Base+0x33c>
    6930:	add	r3, r1, #4
    6934:	b	6774 <HV@@Base+0x33c>
    6938:	add	r3, r1, #8
    693c:	b	6774 <HV@@Base+0x33c>
    6940:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6944:	bl	4548 <free@plt>
    6948:	mov	r0, #0
    694c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6950:	push	{r4, sl, fp, lr}
    6954:	add	fp, sp, #8
    6958:	ldrb	r1, [r0, #9]
    695c:	mov	r2, #2
    6960:	lsl	r3, r1, #7
    6964:	and	r2, r2, r1, lsr #5
    6968:	orr	r3, r3, r1, lsr #7
    696c:	orr	r2, r3, r2
    6970:	mov	r3, #4
    6974:	and	r3, r3, r1, lsr #3
    6978:	orr	r2, r2, r3
    697c:	mov	r3, #8
    6980:	and	r3, r3, r1, lsr #1
    6984:	orr	r2, r2, r3
    6988:	and	r3, r1, #8
    698c:	orr	r2, r2, r3, lsl #1
    6990:	and	r3, r1, #4
    6994:	and	r1, r1, #2
    6998:	orr	r2, r2, r3, lsl #3
    699c:	mvn	r3, #15
    69a0:	orr	r1, r2, r1, lsl #5
    69a4:	ldr	r2, [r0, #64]	; 0x40
    69a8:	lsl	lr, r1, #8
    69ac:	add	ip, r3, r2, lsl #3
    69b0:	cmp	ip, #1
    69b4:	blt	69f4 <HV@@Base+0x5bc>
    69b8:	mov	r2, #0
    69bc:	mov	r3, #0
    69c0:	add	r2, r0, r2
    69c4:	uxth	r1, lr
    69c8:	add	r3, r3, #1
    69cc:	ldrb	r2, [r2, #68]	; 0x44
    69d0:	eor	r2, lr, r2
    69d4:	lsl	r4, r2, #15
    69d8:	and	r2, r2, #1
    69dc:	orr	r1, r4, r1, lsr #1
    69e0:	eor	r1, r1, r2, lsl #10
    69e4:	eor	lr, r1, r2, lsl #3
    69e8:	uxth	r2, r3
    69ec:	cmp	ip, r2
    69f0:	bgt	69c0 <HV@@Base+0x588>
    69f4:	add	r0, r0, ip
    69f8:	ldrb	r1, [r0, #68]	; 0x44
    69fc:	ldrb	r2, [r0, #69]	; 0x45
    6a00:	ldrb	r3, [r0, #70]	; 0x46
    6a04:	ldrb	r4, [r0, #71]	; 0x47
    6a08:	orr	r1, r1, r2, lsl #1
    6a0c:	ldrb	r2, [r0, #72]	; 0x48
    6a10:	orr	r1, r1, r3, lsl #2
    6a14:	orr	r1, r1, r4, lsl #3
    6a18:	orr	r1, r1, r2, lsl #4
    6a1c:	ldrb	r2, [r0, #73]	; 0x49
    6a20:	orr	r1, r1, r2, lsl #5
    6a24:	ldrb	r2, [r0, #74]	; 0x4a
    6a28:	orr	r1, r1, r2, lsl #6
    6a2c:	ldrb	r2, [r0, #75]	; 0x4b
    6a30:	orr	r1, r1, r2, lsl #7
    6a34:	ldrb	r2, [r0, #76]	; 0x4c
    6a38:	orr	r1, r1, r2, lsl #8
    6a3c:	ldrb	r2, [r0, #77]	; 0x4d
    6a40:	orr	r1, r1, r2, lsl #9
    6a44:	ldrb	r2, [r0, #78]	; 0x4e
    6a48:	orr	r1, r1, r2, lsl #10
    6a4c:	ldrb	r2, [r0, #79]	; 0x4f
    6a50:	orr	r1, r1, r2, lsl #11
    6a54:	ldrb	r2, [r0, #80]	; 0x50
    6a58:	orr	r1, r1, r2, lsl #12
    6a5c:	ldrb	r2, [r0, #81]	; 0x51
    6a60:	orr	r1, r1, r2, lsl #13
    6a64:	ldrb	r2, [r0, #82]	; 0x52
    6a68:	ldrb	r0, [r0, #83]	; 0x53
    6a6c:	orr	r1, r1, r2, lsl #14
    6a70:	orr	r0, r1, r0, lsl #15
    6a74:	uxth	r1, lr
    6a78:	uxth	r0, r0
    6a7c:	sub	r0, r1, r0
    6a80:	clz	r0, r0
    6a84:	lsr	r0, r0, #5
    6a88:	pop	{r4, sl, fp, pc}
    6a8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6a90:	add	fp, sp, #24
    6a94:	mov	r6, r1
    6a98:	ldr	r9, [fp, #12]
    6a9c:	ldr	r1, [fp, #8]
    6aa0:	mov	r8, r2
    6aa4:	mov	r5, #0
    6aa8:	cmp	r2, #2
    6aac:	bne	6b4c <HV@@Base+0x714>
    6ab0:	cmp	r3, #16
    6ab4:	blt	7064 <HV@@Base+0xc2c>
    6ab8:	cmp	r1, #0
    6abc:	beq	6be0 <HV@@Base+0x7a8>
    6ac0:	cmp	r3, #30
    6ac4:	blt	7064 <HV@@Base+0xc2c>
    6ac8:	mov	r1, #16
    6acc:	bl	6718 <HV@@Base+0x2e0>
    6ad0:	cmp	r0, #0
    6ad4:	beq	7064 <HV@@Base+0xc2c>
    6ad8:	ldr	r2, [pc, #1420]	; 706c <HV@@Base+0xc34>
    6adc:	and	r1, r6, #63	; 0x3f
    6ae0:	movw	r6, #1033	; 0x409
    6ae4:	mov	r3, #0
    6ae8:	movt	r6, #33026	; 0x8102
    6aec:	add	r2, pc, r2
    6af0:	ldrb	r1, [r2, r1]
    6af4:	ldr	r2, [r9, #4]
    6af8:	ldr	ip, [pc, #1392]	; 7070 <HV@@Base+0xc38>
    6afc:	add	r4, r1, #18
    6b00:	add	r1, r9, #44	; 0x2c
    6b04:	and	r2, r2, #1
    6b08:	add	ip, pc, ip
    6b0c:	smmla	r7, r4, r6, r4
    6b10:	cmp	r2, #0
    6b14:	asr	r5, r7, #6
    6b18:	add	r7, r5, r7, lsr #31
    6b1c:	rsb	r7, r7, r7, lsl #7
    6b20:	sub	r4, r4, r7
    6b24:	ldrb	r7, [r0, r3]
    6b28:	ldrbne	r5, [ip, r4]
    6b2c:	add	r4, r4, #1
    6b30:	eorne	r7, r5, r7
    6b34:	strb	r7, [r1, r3]
    6b38:	add	r3, r3, #1
    6b3c:	cmp	r3, #16
    6b40:	bne	6b0c <HV@@Base+0x6d4>
    6b44:	bl	4548 <free@plt>
    6b48:	b	6c4c <HV@@Base+0x814>
    6b4c:	cmp	r3, #8
    6b50:	blt	7064 <HV@@Base+0xc2c>
    6b54:	cmp	r1, #0
    6b58:	beq	6ca4 <HV@@Base+0x86c>
    6b5c:	cmp	r3, #15
    6b60:	blt	7064 <HV@@Base+0xc2c>
    6b64:	mov	r1, #8
    6b68:	bl	6718 <HV@@Base+0x2e0>
    6b6c:	cmp	r0, #0
    6b70:	beq	7064 <HV@@Base+0xc2c>
    6b74:	ldr	r2, [pc, #1280]	; 707c <HV@@Base+0xc44>
    6b78:	and	r1, r6, #63	; 0x3f
    6b7c:	ldrb	r6, [r9, #4]
    6b80:	add	r2, pc, r2
    6b84:	tst	r6, #1
    6b88:	ldrb	r1, [r2, r1]
    6b8c:	add	r2, r1, #18
    6b90:	movw	r1, #2065	; 0x811
    6b94:	movt	r1, #516	; 0x204
    6b98:	umull	r3, r7, r2, r1
    6b9c:	ldrb	r3, [r0]
    6ba0:	bne	6e78 <HV@@Base+0xa40>
    6ba4:	strb	r3, [r9, #44]	; 0x2c
    6ba8:	ldrb	r1, [r0, #1]
    6bac:	strb	r1, [r9, #45]	; 0x2d
    6bb0:	ldrb	r1, [r0, #2]
    6bb4:	strb	r1, [r9, #46]	; 0x2e
    6bb8:	ldrb	r1, [r0, #3]
    6bbc:	strb	r1, [r9, #47]	; 0x2f
    6bc0:	ldrb	r1, [r0, #4]
    6bc4:	strb	r1, [r9, #48]	; 0x30
    6bc8:	ldrb	r1, [r0, #5]
    6bcc:	strb	r1, [r9, #49]	; 0x31
    6bd0:	ldrb	r1, [r0, #6]
    6bd4:	strb	r1, [r9, #50]	; 0x32
    6bd8:	ldrb	r1, [r0, #7]
    6bdc:	b	6fd8 <HV@@Base+0xba0>
    6be0:	ldr	r2, [pc, #1164]	; 7074 <HV@@Base+0xc3c>
    6be4:	and	r1, r6, #63	; 0x3f
    6be8:	movw	r6, #1033	; 0x409
    6bec:	mov	r3, #0
    6bf0:	movt	r6, #33026	; 0x8102
    6bf4:	add	r2, pc, r2
    6bf8:	ldrb	r1, [r2, r1]
    6bfc:	ldr	r2, [r9, #4]
    6c00:	ldr	ip, [pc, #1136]	; 7078 <HV@@Base+0xc40>
    6c04:	add	r4, r1, #18
    6c08:	add	r1, r9, #44	; 0x2c
    6c0c:	and	r2, r2, #1
    6c10:	add	ip, pc, ip
    6c14:	smmla	r7, r4, r6, r4
    6c18:	cmp	r2, #0
    6c1c:	asr	r5, r7, #6
    6c20:	add	r7, r5, r7, lsr #31
    6c24:	rsb	r7, r7, r7, lsl #7
    6c28:	sub	r4, r4, r7
    6c2c:	ldrb	r7, [r0, r3]
    6c30:	ldrbne	r5, [ip, r4]
    6c34:	add	r4, r4, #1
    6c38:	eorne	r7, r5, r7
    6c3c:	strb	r7, [r1, r3]
    6c40:	add	r3, r3, #1
    6c44:	cmp	r3, #16
    6c48:	bne	6c14 <HV@@Base+0x7dc>
    6c4c:	ldrb	r0, [r9, #47]	; 0x2f
    6c50:	ldrb	r1, [r9, #48]	; 0x30
    6c54:	ldrb	r2, [r9, #49]	; 0x31
    6c58:	ldrb	r3, [r9, #50]	; 0x32
    6c5c:	orr	r0, r0, r1, lsl #1
    6c60:	ldrb	r1, [r9, #51]	; 0x33
    6c64:	orr	r0, r0, r2, lsl #2
    6c68:	orr	r0, r0, r3, lsl #3
    6c6c:	orr	r0, r0, r1, lsl #4
    6c70:	ldrb	r1, [r9, #52]	; 0x34
    6c74:	orr	r0, r0, r1, lsl #5
    6c78:	ldrb	r1, [r9, #53]	; 0x35
    6c7c:	orr	r0, r0, r1, lsl #6
    6c80:	ldrb	r1, [r9, #54]	; 0x36
    6c84:	orr	r0, r0, r1, lsl #7
    6c88:	ldrb	r1, [r9, #55]	; 0x37
    6c8c:	orr	r0, r0, r1, lsl #8
    6c90:	ldrb	r1, [r9, #56]	; 0x38
    6c94:	orr	r0, r0, r1, lsl #9
    6c98:	mov	r1, #4
    6c9c:	uxtah	r0, r1, r0
    6ca0:	b	700c <HV@@Base+0xbd4>
    6ca4:	ldr	r2, [pc, #980]	; 7080 <HV@@Base+0xc48>
    6ca8:	and	r1, r6, #63	; 0x3f
    6cac:	ldrb	r6, [r9, #4]
    6cb0:	add	r2, pc, r2
    6cb4:	tst	r6, #1
    6cb8:	ldrb	r1, [r2, r1]
    6cbc:	add	r3, r1, #18
    6cc0:	movw	r1, #2065	; 0x811
    6cc4:	movt	r1, #516	; 0x204
    6cc8:	umull	r2, r7, r3, r1
    6ccc:	ldrb	r2, [r0]
    6cd0:	bne	6d10 <HV@@Base+0x8d8>
    6cd4:	strb	r2, [r9, #44]	; 0x2c
    6cd8:	ldrb	r1, [r0, #1]
    6cdc:	strb	r1, [r9, #45]	; 0x2d
    6ce0:	ldrb	r1, [r0, #2]
    6ce4:	strb	r1, [r9, #46]	; 0x2e
    6ce8:	ldrb	r3, [r0, #3]
    6cec:	strb	r3, [r9, #47]	; 0x2f
    6cf0:	ldrb	r6, [r0, #4]
    6cf4:	strb	r6, [r9, #48]	; 0x30
    6cf8:	ldrb	r5, [r0, #5]
    6cfc:	strb	r5, [r9, #49]	; 0x31
    6d00:	ldrb	r2, [r0, #6]
    6d04:	strb	r2, [r9, #50]	; 0x32
    6d08:	ldrb	r0, [r0, #7]
    6d0c:	b	6e70 <HV@@Base+0xa38>
    6d10:	sub	r6, r3, r7
    6d14:	ldr	ip, [pc, #876]	; 7088 <HV@@Base+0xc50>
    6d18:	add	r7, r7, r6, lsr #1
    6d1c:	lsr	r7, r7, #6
    6d20:	sub	r7, r7, r7, lsl #7
    6d24:	add	ip, pc, ip
    6d28:	add	r3, r3, r7
    6d2c:	uxth	r7, r3
    6d30:	ldrb	r7, [ip, r7]
    6d34:	eor	r2, r7, r2
    6d38:	strb	r2, [r9, #44]	; 0x2c
    6d3c:	add	r2, r3, #1
    6d40:	uxtb	r3, r2
    6d44:	umull	r7, r6, r3, r1
    6d48:	ldrb	r7, [r0, #1]
    6d4c:	sub	r3, r3, r6
    6d50:	add	r3, r6, r3, lsr #1
    6d54:	lsr	r3, r3, #6
    6d58:	sub	r3, r3, r3, lsl #7
    6d5c:	uxtab	r2, r3, r2
    6d60:	ldrb	r3, [ip, r2]
    6d64:	add	r2, r2, #1
    6d68:	eor	r3, r3, r7
    6d6c:	strb	r3, [r9, #45]	; 0x2d
    6d70:	umull	r3, r7, r2, r1
    6d74:	sub	r3, r2, r7
    6d78:	add	r3, r7, r3, lsr #1
    6d7c:	ldrb	r7, [r0, #2]
    6d80:	lsr	r3, r3, #6
    6d84:	sub	r3, r3, r3, lsl #7
    6d88:	add	r2, r2, r3
    6d8c:	ldrb	r3, [ip, r2]
    6d90:	add	r2, r2, #1
    6d94:	eor	r3, r3, r7
    6d98:	strb	r3, [r9, #46]	; 0x2e
    6d9c:	umull	r3, r7, r2, r1
    6da0:	sub	r3, r2, r7
    6da4:	add	r3, r7, r3, lsr #1
    6da8:	lsr	r3, r3, #6
    6dac:	sub	r3, r3, r3, lsl #7
    6db0:	add	r2, r2, r3
    6db4:	add	r3, r2, #1
    6db8:	ldrb	r2, [ip, r2]
    6dbc:	umull	r7, r6, r3, r1
    6dc0:	sub	r7, r3, r6
    6dc4:	add	r7, r6, r7, lsr #1
    6dc8:	lsr	r7, r7, #6
    6dcc:	sub	r7, r7, r7, lsl #7
    6dd0:	add	r3, r3, r7
    6dd4:	add	r7, r3, #1
    6dd8:	umull	r6, r5, r7, r1
    6ddc:	sub	r6, r7, r5
    6de0:	add	r6, r5, r6, lsr #1
    6de4:	lsr	r6, r6, #6
    6de8:	sub	r6, r6, r6, lsl #7
    6dec:	add	r7, r7, r6
    6df0:	add	r6, r7, #1
    6df4:	ldrb	r7, [ip, r7]
    6df8:	umull	r5, r4, r6, r1
    6dfc:	sub	r5, r6, r4
    6e00:	add	r5, r4, r5, lsr #1
    6e04:	lsr	r5, r5, #6
    6e08:	sub	r5, r5, r5, lsl #7
    6e0c:	add	r4, r6, r5
    6e10:	ldrb	r6, [ip, r3]
    6e14:	ldrb	r3, [r0, #3]
    6e18:	eor	r3, r2, r3
    6e1c:	strb	r3, [r9, #47]	; 0x2f
    6e20:	ldrb	r2, [r0, #4]
    6e24:	eor	r6, r6, r2
    6e28:	strb	r6, [r9, #48]	; 0x30
    6e2c:	ldrb	r2, [r0, #5]
    6e30:	eor	r5, r7, r2
    6e34:	ldrb	r2, [ip, r4]
    6e38:	strb	r5, [r9, #49]	; 0x31
    6e3c:	ldrb	r7, [r0, #6]
    6e40:	eor	r2, r2, r7
    6e44:	add	r7, r4, #1
    6e48:	umull	r1, r4, r7, r1
    6e4c:	strb	r2, [r9, #50]	; 0x32
    6e50:	ldrb	r0, [r0, #7]
    6e54:	sub	r1, r7, r4
    6e58:	add	r1, r4, r1, lsr #1
    6e5c:	lsr	r1, r1, #6
    6e60:	sub	r1, r1, r1, lsl #7
    6e64:	add	r1, r7, r1
    6e68:	ldrb	r1, [ip, r1]
    6e6c:	eor	r0, r1, r0
    6e70:	strb	r0, [r9, #51]	; 0x33
    6e74:	b	6ff4 <HV@@Base+0xbbc>
    6e78:	sub	r6, r2, r7
    6e7c:	add	r7, r7, r6, lsr #1
    6e80:	lsr	r7, r7, #6
    6e84:	sub	r7, r7, r7, lsl #7
    6e88:	add	r7, r2, r7
    6e8c:	ldr	r2, [pc, #504]	; 708c <HV@@Base+0xc54>
    6e90:	uxth	r6, r7
    6e94:	add	r2, pc, r2
    6e98:	ldrb	r6, [r2, r6]
    6e9c:	eor	r3, r6, r3
    6ea0:	strb	r3, [r9, #44]	; 0x2c
    6ea4:	add	r3, r7, #1
    6ea8:	uxtb	r7, r3
    6eac:	umull	r6, r5, r7, r1
    6eb0:	ldrb	r6, [r0, #1]
    6eb4:	sub	r7, r7, r5
    6eb8:	add	r7, r5, r7, lsr #1
    6ebc:	lsr	r7, r7, #6
    6ec0:	sub	r7, r7, r7, lsl #7
    6ec4:	uxtab	r3, r7, r3
    6ec8:	ldrb	r7, [r2, r3]
    6ecc:	add	r3, r3, #1
    6ed0:	eor	r7, r7, r6
    6ed4:	strb	r7, [r9, #45]	; 0x2d
    6ed8:	umull	r7, r6, r3, r1
    6edc:	sub	r7, r3, r6
    6ee0:	add	r7, r6, r7, lsr #1
    6ee4:	ldrb	r6, [r0, #2]
    6ee8:	lsr	r7, r7, #6
    6eec:	sub	r7, r7, r7, lsl #7
    6ef0:	add	r3, r3, r7
    6ef4:	ldrb	r7, [r2, r3]
    6ef8:	add	r3, r3, #1
    6efc:	eor	r7, r7, r6
    6f00:	strb	r7, [r9, #46]	; 0x2e
    6f04:	umull	r7, r6, r3, r1
    6f08:	sub	r7, r3, r6
    6f0c:	add	r7, r6, r7, lsr #1
    6f10:	ldrb	r6, [r0, #3]
    6f14:	lsr	r7, r7, #6
    6f18:	sub	r7, r7, r7, lsl #7
    6f1c:	add	r3, r3, r7
    6f20:	ldrb	r7, [r2, r3]
    6f24:	add	r3, r3, #1
    6f28:	eor	r7, r7, r6
    6f2c:	strb	r7, [r9, #47]	; 0x2f
    6f30:	umull	r7, r6, r3, r1
    6f34:	sub	r7, r3, r6
    6f38:	add	r7, r6, r7, lsr #1
    6f3c:	ldrb	r6, [r0, #4]
    6f40:	lsr	r7, r7, #6
    6f44:	sub	r7, r7, r7, lsl #7
    6f48:	add	r3, r3, r7
    6f4c:	ldrb	r7, [r2, r3]
    6f50:	add	r3, r3, #1
    6f54:	eor	r7, r7, r6
    6f58:	strb	r7, [r9, #48]	; 0x30
    6f5c:	umull	r7, r6, r3, r1
    6f60:	sub	r7, r3, r6
    6f64:	add	r7, r6, r7, lsr #1
    6f68:	ldrb	r6, [r0, #5]
    6f6c:	lsr	r7, r7, #6
    6f70:	sub	r7, r7, r7, lsl #7
    6f74:	add	r3, r3, r7
    6f78:	ldrb	r7, [r2, r3]
    6f7c:	add	r3, r3, #1
    6f80:	eor	r7, r7, r6
    6f84:	strb	r7, [r9, #49]	; 0x31
    6f88:	umull	r7, r6, r3, r1
    6f8c:	sub	r7, r3, r6
    6f90:	add	r7, r6, r7, lsr #1
    6f94:	ldrb	r6, [r0, #6]
    6f98:	lsr	r7, r7, #6
    6f9c:	sub	r7, r7, r7, lsl #7
    6fa0:	add	r3, r3, r7
    6fa4:	ldrb	r7, [r2, r3]
    6fa8:	add	r3, r3, #1
    6fac:	eor	r7, r7, r6
    6fb0:	strb	r7, [r9, #50]	; 0x32
    6fb4:	umull	r1, r7, r3, r1
    6fb8:	sub	r1, r3, r7
    6fbc:	add	r1, r7, r1, lsr #1
    6fc0:	lsr	r1, r1, #6
    6fc4:	sub	r1, r1, r1, lsl #7
    6fc8:	add	r1, r3, r1
    6fcc:	ldrb	r1, [r2, r1]
    6fd0:	ldrb	r2, [r0, #7]
    6fd4:	eor	r1, r1, r2
    6fd8:	strb	r1, [r9, #51]	; 0x33
    6fdc:	bl	4548 <free@plt>
    6fe0:	ldrb	r0, [r9, #51]	; 0x33
    6fe4:	ldrb	r3, [r9, #47]	; 0x2f
    6fe8:	ldrb	r6, [r9, #48]	; 0x30
    6fec:	ldrb	r5, [r9, #49]	; 0x31
    6ff0:	ldrb	r2, [r9, #50]	; 0x32
    6ff4:	orr	r1, r3, r6, lsl #1
    6ff8:	orr	r1, r1, r5, lsl #2
    6ffc:	orr	r1, r1, r2, lsl #3
    7000:	orr	r0, r1, r0, lsl #4
    7004:	mov	r1, #3
    7008:	uxtab	r0, r1, r0
    700c:	str	r0, [r9, #64]	; 0x40
    7010:	ldrb	r1, [r9, #18]
    7014:	sub	r2, r1, #3
    7018:	mov	r1, #0
    701c:	uxtb	r3, r2
    7020:	cmp	r3, #12
    7024:	bhi	7038 <HV@@Base+0xc00>
    7028:	sxtb	r1, r2
    702c:	ldr	r2, [pc, #80]	; 7084 <HV@@Base+0xc4c>
    7030:	add	r2, pc, r2
    7034:	ldr	r1, [r2, r1, lsl #2]
    7038:	cmp	r0, r1
    703c:	str	r8, [r9, #40]	; 0x28
    7040:	mov	r5, #1
    7044:	movlt	r1, r0
    7048:	str	r1, [r9, #64]	; 0x40
    704c:	ldrb	r0, [r9, #44]	; 0x2c
    7050:	ldrb	r1, [r9, #45]	; 0x2d
    7054:	ldrb	r2, [r9, #46]	; 0x2e
    7058:	orr	r0, r0, r1, lsl #1
    705c:	strb	r2, [r9, #61]	; 0x3d
    7060:	strb	r0, [r9, #60]	; 0x3c
    7064:	mov	r0, r5
    7068:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    706c:	andeq	fp, r0, r6, ror pc
    7070:	andeq	fp, r0, r0, ror #27
    7074:	andeq	fp, r0, lr, ror #28
    7078:	ldrdeq	fp, [r0], -r8
    707c:	andeq	fp, r0, r2, ror #29
    7080:			; <UNDEFINED> instruction: 0x0000bdb2
    7084:	andeq	fp, r0, r8, lsr r9
    7088:	andeq	fp, r0, r4, asr #23
    708c:	andeq	fp, r0, r4, asr sl

00007090 <try_clock@@Base>:
    7090:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    7094:	add	fp, sp, #24
    7098:	sub	sp, sp, #40	; 0x28
    709c:	mov	r8, r1
    70a0:	movw	r1, #2892	; 0xb4c
    70a4:	vldr	d18, [pc, #796]	; 73c8 <try_clock@@Base+0x338>
    70a8:	vldr	d19, [pc, #800]	; 73d0 <try_clock@@Base+0x340>
    70ac:	vldr	d20, [pc, #804]	; 73d8 <try_clock@@Base+0x348>
    70b0:	add	ip, sp, #20
    70b4:	ldr	r2, [r8, #2900]	; 0xb54
    70b8:	add	r1, r8, r1
    70bc:	vld1.8	{d16}, [r1]
    70c0:	movw	r1, #2904	; 0xb58
    70c4:	add	r1, r8, r1
    70c8:	vmov.32	d17[0], r2
    70cc:	vtbl.8	d21, {d16-d17}, d18
    70d0:	vtbl.8	d22, {d16-d17}, d19
    70d4:	vtbl.8	d16, {d16-d17}, d20
    70d8:	vorr	d17, d22, d21
    70dc:	vand	d23, d22, d21
    70e0:	vand	d17, d17, d16
    70e4:	vorr	d17, d17, d23
    70e8:	vuzp.8	d17, d23
    70ec:	vst1.32	{d17[0]}, [ip :32]
    70f0:	vld1.8	{d24}, [r1]
    70f4:	ldr	r1, [r8, #2912]	; 0xb60
    70f8:	vmov.32	d25[0], r1
    70fc:	add	r1, ip, #4
    7100:	vtbl.8	d17, {d24-d25}, d18
    7104:	vtbl.8	d23, {d24-d25}, d19
    7108:	vtbl.8	d24, {d24-d25}, d20
    710c:	vorr	d25, d23, d17
    7110:	vand	d26, d23, d17
    7114:	vand	d25, d25, d24
    7118:	vorr	d25, d25, d26
    711c:	vuzp.8	d25, d26
    7120:	vst1.32	{d25[0]}, [r1 :32]
    7124:	movw	r1, #2916	; 0xb64
    7128:	add	r1, r8, r1
    712c:	vld1.8	{d26}, [r1]
    7130:	ldr	r1, [r8, #2924]	; 0xb6c
    7134:	vmov.32	d27[0], r1
    7138:	add	r1, ip, #8
    713c:	vtbl.8	d25, {d26-d27}, d18
    7140:	vtbl.8	d28, {d26-d27}, d19
    7144:	vtbl.8	d26, {d26-d27}, d20
    7148:	vorr	d27, d28, d25
    714c:	vand	d29, d28, d25
    7150:	vand	d27, d27, d26
    7154:	vorr	d27, d27, d29
    7158:	vuzp.8	d27, d29
    715c:	vst1.32	{d27[0]}, [r1 :32]
    7160:	add	r1, r8, #2928	; 0xb70
    7164:	vld1.8	{d30}, [r1]
    7168:	ldr	r1, [r8, #2936]	; 0xb78
    716c:	vmov.32	d31[0], r1
    7170:	add	r1, ip, #12
    7174:	vtbl.8	d18, {d30-d31}, d18
    7178:	vtbl.8	d19, {d30-d31}, d19
    717c:	vtbl.8	d20, {d30-d31}, d20
    7180:	veor	d30, d16, d21
    7184:	veor	d16, d22, d16
    7188:	veor	d31, d24, d17
    718c:	veor	d24, d23, d24
    7190:	veor	d21, d22, d21
    7194:	veor	d17, d23, d17
    7198:	veor	d23, d26, d25
    719c:	vorr	d27, d19, d18
    71a0:	vand	d29, d19, d18
    71a4:	vorr	d16, d16, d30
    71a8:	vorr	d22, d24, d31
    71ac:	veor	d24, d28, d26
    71b0:	vand	d27, d27, d20
    71b4:	vorr	d16, d16, d21
    71b8:	vorr	d17, d22, d17
    71bc:	vorr	d22, d24, d23
    71c0:	veor	d21, d28, d25
    71c4:	veor	d23, d20, d18
    71c8:	veor	d20, d19, d20
    71cc:	veor	d18, d19, d18
    71d0:	vmov.i32	q12, #255	; 0x000000ff
    71d4:	vorr	d27, d27, d29
    71d8:	vorr	d19, d20, d23
    71dc:	vorr	d21, d22, d21
    71e0:	vuzp.8	d27, d26
    71e4:	vorr	d18, d19, d18
    71e8:	vmovl.u16	q10, d21
    71ec:	vst1.32	{d27[0]}, [r1 :32]
    71f0:	vmovl.u16	q13, d16
    71f4:	vmovl.u16	q8, d17
    71f8:	vmovl.u16	q9, d18
    71fc:	vand	q10, q10, q12
    7200:	ldrb	r1, [r8, #2940]	; 0xb7c
    7204:	ldrb	r3, [r8, #2942]	; 0xb7e
    7208:	ldrb	lr, [r8, #2941]	; 0xb7d
    720c:	vand	q11, q13, q12
    7210:	vand	q8, q8, q12
    7214:	vand	q9, q9, q12
    7218:	orr	r6, r3, r1
    721c:	and	r5, r3, r1
    7220:	vadd.i32	q8, q11, q8
    7224:	and	r6, r6, lr
    7228:	orr	r6, r6, r5
    722c:	strb	r6, [sp, #36]	; 0x24
    7230:	vadd.i32	q8, q8, q10
    7234:	ldrb	r6, [r8, #2943]	; 0xb7f
    7238:	ldrb	r4, [r8, #2945]	; 0xb81
    723c:	ldrb	r5, [r8, #2944]	; 0xb80
    7240:	vadd.i32	q8, q8, q9
    7244:	orr	r7, r4, r6
    7248:	and	r2, r4, r6
    724c:	and	r7, r7, r5
    7250:	vext.8	q9, q8, q8, #8
    7254:	orr	r2, r7, r2
    7258:	eor	r7, lr, r1
    725c:	eor	r1, r3, r1
    7260:	strb	r2, [sp, #37]	; 0x25
    7264:	eor	r2, r3, lr
    7268:	eor	r3, r4, r5
    726c:	orr	r2, r2, r7
    7270:	vadd.i32	q8, q8, q9
    7274:	orr	r1, r2, r1
    7278:	eor	r2, r5, r6
    727c:	orr	r2, r3, r2
    7280:	eor	r3, r4, r6
    7284:	orr	r2, r2, r3
    7288:	vdup.32	q9, d16[1]
    728c:	vadd.i32	q8, q8, q9
    7290:	vmov.32	r9, d16[0]
    7294:	uxtab	r1, r9, r1
    7298:	uxtab	r2, r1, r2
    729c:	mov	r1, #0
    72a0:	cmp	r2, #3
    72a4:	bhi	73bc <try_clock@@Base+0x32c>
    72a8:	ldr	r1, [pc, #304]	; 73e0 <try_clock@@Base+0x350>
    72ac:	and	r0, r0, #63	; 0x3f
    72b0:	movw	r2, #1033	; 0x409
    72b4:	add	r3, sp, #2
    72b8:	movt	r2, #33026	; 0x8102
    72bc:	add	r1, pc, r1
    72c0:	ldrb	r5, [r1, r0]
    72c4:	ldr	r0, [r8, #4]
    72c8:	ldr	r4, [pc, #276]	; 73e4 <try_clock@@Base+0x354>
    72cc:	mov	r1, #0
    72d0:	and	r0, r0, #1
    72d4:	add	r4, pc, r4
    72d8:	smmla	r7, r5, r2, r5
    72dc:	cmp	r0, #0
    72e0:	asr	r6, r7, #6
    72e4:	add	r7, r6, r7, lsr #31
    72e8:	ldrb	r6, [ip, r1]
    72ec:	rsb	r7, r7, r7, lsl #7
    72f0:	sub	r5, r5, r7
    72f4:	ldrbne	r7, [r4, r5]
    72f8:	add	r5, r5, #1
    72fc:	eorne	r6, r7, r6
    7300:	strb	r6, [r3, r1]
    7304:	add	r1, r1, #1
    7308:	cmp	r1, #18
    730c:	bne	72d8 <try_clock@@Base+0x248>
    7310:	ldrb	r0, [sp, #13]
    7314:	ldrb	r1, [sp, #12]
    7318:	ldrb	r2, [sp, #3]
    731c:	ldrb	r3, [sp, #4]
    7320:	ldrb	r4, [sp, #5]
    7324:	ldrb	r5, [sp, #6]
    7328:	ldrb	r6, [sp, #7]
    732c:	ldrb	r7, [sp, #8]
    7330:	orr	r0, r1, r0, lsl #1
    7334:	ldrb	r1, [sp, #14]
    7338:	orr	r0, r0, r1, lsl #2
    733c:	ldrb	r1, [sp, #15]
    7340:	orr	r0, r0, r1, lsl #3
    7344:	ldrb	r1, [sp, #16]
    7348:	orr	r0, r0, r1, lsl #4
    734c:	ldrb	r1, [sp, #17]
    7350:	orr	r0, r0, r1, lsl #5
    7354:	ldrb	r1, [sp, #18]
    7358:	orr	r0, r0, r1, lsl #6
    735c:	ldrb	r1, [sp, #19]
    7360:	orr	r0, r0, r1, lsl #7
    7364:	uxtb	r1, r0
    7368:	ldrb	r0, [sp, #2]
    736c:	orr	r0, r0, r2, lsl #1
    7370:	ldrb	r2, [sp, #9]
    7374:	orr	r0, r0, r3, lsl #2
    7378:	orr	r0, r0, r4, lsl #3
    737c:	orr	r0, r0, r5, lsl #4
    7380:	orr	r0, r0, r6, lsl #5
    7384:	orr	r0, r0, r7, lsl #6
    7388:	orr	r0, r0, r2, lsl #7
    738c:	ldrb	r2, [sp, #10]
    7390:	orr	r0, r0, r2, lsl #8
    7394:	ldrb	r2, [sp, #11]
    7398:	orr	r0, r0, r2, lsl #9
    739c:	uxth	r0, r0
    73a0:	bl	73e8 <try_clock@@Base+0x358>
    73a4:	mov	r1, r0
    73a8:	orr	r0, r4, r5, lsl #1
    73ac:	orr	r0, r0, r6, lsl #2
    73b0:	orr	r0, r0, r7, lsl #3
    73b4:	strb	r0, [r8, #18]
    73b8:	strb	r1, [r8, #9]
    73bc:	mov	r0, r1
    73c0:	sub	sp, fp, #24
    73c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    73c8:			; <UNDEFINED> instruction: 0xff03ff00
    73cc:			; <UNDEFINED> instruction: 0xff09ff06
    73d0:			; <UNDEFINED> instruction: 0xff05ff02
    73d4:			; <UNDEFINED> instruction: 0xff0bff08
    73d8:			; <UNDEFINED> instruction: 0xff04ff01
    73dc:			; <UNDEFINED> instruction: 0xff0aff07
    73e0:	andeq	fp, r0, r6, lsr #15
    73e4:	andeq	fp, r0, r4, lsl r6
    73e8:	sxtb	r2, r1
    73ec:	mov	r3, #2
    73f0:	cmn	r2, #1
    73f4:	ubfx	r2, r0, #9, #1
    73f8:	eorle	r1, r1, #101	; 0x65
    73fc:	eor	r2, r2, r1, lsr #7
    7400:	orr	r2, r2, r1, lsl #1
    7404:	lsl	r1, r1, #1
    7408:	sxtb	r1, r1
    740c:	cmn	r1, #1
    7410:	eorle	r2, r2, #101	; 0x65
    7414:	uxtb	r1, r2
    7418:	ubfx	r2, r0, #8, #1
    741c:	eor	r2, r2, r1, lsr #7
    7420:	orr	r2, r2, r1, lsl #1
    7424:	lsl	r1, r1, #1
    7428:	sxtb	r1, r1
    742c:	cmn	r1, #1
    7430:	eorle	r2, r2, #101	; 0x65
    7434:	uxtb	r1, r2
    7438:	ubfx	r2, r0, #7, #1
    743c:	eor	r2, r2, r1, lsr #7
    7440:	orr	r2, r2, r1, lsl #1
    7444:	lsl	r1, r1, #1
    7448:	sxtb	r1, r1
    744c:	cmn	r1, #1
    7450:	eorle	r2, r2, #101	; 0x65
    7454:	uxtb	r1, r2
    7458:	ubfx	r2, r0, #6, #1
    745c:	eor	r2, r2, r1, lsr #7
    7460:	orr	r2, r2, r1, lsl #1
    7464:	lsl	r1, r1, #1
    7468:	sxtb	r1, r1
    746c:	cmn	r1, #1
    7470:	eorle	r2, r2, #101	; 0x65
    7474:	uxtb	r1, r2
    7478:	ubfx	r2, r0, #5, #1
    747c:	eor	r2, r2, r1, lsr #7
    7480:	orr	r2, r2, r1, lsl #1
    7484:	lsl	r1, r1, #1
    7488:	sxtb	r1, r1
    748c:	cmn	r1, #1
    7490:	eorle	r2, r2, #101	; 0x65
    7494:	uxtb	r1, r2
    7498:	ubfx	r2, r0, #4, #1
    749c:	eor	r2, r2, r1, lsr #7
    74a0:	orr	r2, r2, r1, lsl #1
    74a4:	lsl	r1, r1, #1
    74a8:	sxtb	r1, r1
    74ac:	cmn	r1, #1
    74b0:	eorle	r2, r2, #101	; 0x65
    74b4:	uxtb	r1, r2
    74b8:	ubfx	r2, r0, #3, #1
    74bc:	eor	r2, r2, r1, lsr #7
    74c0:	orr	r2, r2, r1, lsl #1
    74c4:	lsl	r1, r1, #1
    74c8:	sxtb	r1, r1
    74cc:	cmn	r1, #1
    74d0:	eorle	r2, r2, #101	; 0x65
    74d4:	uxtb	r1, r2
    74d8:	ubfx	r2, r0, #2, #1
    74dc:	eor	r2, r2, r1, lsr #7
    74e0:	orr	r2, r2, r1, lsl #1
    74e4:	lsl	r1, r1, #1
    74e8:	sxtb	r1, r1
    74ec:	cmn	r1, #1
    74f0:	eorle	r2, r2, #101	; 0x65
    74f4:	uxtb	r1, r2
    74f8:	ubfx	r2, r0, #1, #1
    74fc:	and	r0, r0, #1
    7500:	eor	r2, r2, r1, lsr #7
    7504:	orr	r2, r2, r1, lsl #1
    7508:	lsl	r1, r1, #1
    750c:	sxtb	r1, r1
    7510:	cmn	r1, #1
    7514:	eorle	r2, r2, #101	; 0x65
    7518:	uxtb	r1, r2
    751c:	eor	r0, r0, r1, lsr #7
    7520:	orr	r0, r0, r1, lsl #1
    7524:	uxtb	r1, r0
    7528:	lsl	r2, r0, #7
    752c:	orr	r2, r2, r1, lsr #7
    7530:	and	r3, r3, r1, lsr #5
    7534:	orr	r2, r2, r3
    7538:	mov	r3, #4
    753c:	and	r3, r3, r1, lsr #3
    7540:	orr	r2, r2, r3
    7544:	mov	r3, #8
    7548:	and	r1, r3, r1, lsr #1
    754c:	orr	r1, r2, r1
    7550:	and	r2, r0, #8
    7554:	orr	r1, r1, r2, lsl #1
    7558:	and	r2, r0, #4
    755c:	and	r0, r0, #2
    7560:	orr	r1, r1, r2, lsl #3
    7564:	orr	r0, r1, r0, lsl #5
    7568:	uxtb	r0, r0
    756c:	bx	lr

00007570 <btbb_decode_header@@Base>:
    7570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7574:	add	fp, sp, #28
    7578:	sub	sp, sp, #36	; 0x24
    757c:	ldr	ip, [r0, #4]
    7580:	mov	r4, r0
    7584:	mov	r0, #0
    7588:	tst	ip, #16
    758c:	beq	78f8 <btbb_decode_header@@Base+0x388>
    7590:	movw	r1, #2892	; 0xb4c
    7594:	mov	r5, #20
    7598:	vldr	d18, [pc, #864]	; 7900 <btbb_decode_header@@Base+0x390>
    759c:	vldr	d19, [pc, #868]	; 7908 <btbb_decode_header@@Base+0x398>
    75a0:	vldr	d20, [pc, #872]	; 7910 <btbb_decode_header@@Base+0x3a0>
    75a4:	add	lr, sp, #16
    75a8:	add	r2, r4, r1
    75ac:	add	r3, lr, #4
    75b0:	ldr	r1, [r2, #8]
    75b4:	mov	r6, r2
    75b8:	vld1.8	{d16}, [r6], r5
    75bc:	vmov.32	d17[0], r1
    75c0:	add	r1, r2, #12
    75c4:	vtbl.8	d21, {d16-d17}, d18
    75c8:	vtbl.8	d22, {d16-d17}, d19
    75cc:	vtbl.8	d16, {d16-d17}, d20
    75d0:	vorr	d17, d22, d21
    75d4:	vand	d23, d22, d21
    75d8:	vand	d17, d17, d16
    75dc:	vorr	d17, d17, d23
    75e0:	vuzp.8	d17, d23
    75e4:	vst1.32	{d17[0]}, [lr :32]
    75e8:	vld1.8	{d24}, [r1]
    75ec:	ldr	r1, [r6]
    75f0:	vmov.32	d25[0], r1
    75f4:	add	r1, r2, #24
    75f8:	vtbl.8	d17, {d24-d25}, d18
    75fc:	vtbl.8	d23, {d24-d25}, d19
    7600:	vtbl.8	d24, {d24-d25}, d20
    7604:	vorr	d25, d23, d17
    7608:	vand	d26, d23, d17
    760c:	vand	d25, d25, d24
    7610:	vorr	d25, d25, d26
    7614:	vuzp.8	d25, d26
    7618:	vst1.32	{d25[0]}, [r3 :32]
    761c:	vld1.8	{d26}, [r1]
    7620:	ldr	r1, [r2, #32]
    7624:	vmov.32	d27[0], r1
    7628:	add	r1, r3, #4
    762c:	vtbl.8	d25, {d26-d27}, d18
    7630:	vtbl.8	d28, {d26-d27}, d19
    7634:	vtbl.8	d26, {d26-d27}, d20
    7638:	vorr	d27, d28, d25
    763c:	vand	d29, d28, d25
    7640:	vand	d27, d27, d26
    7644:	vorr	d27, d27, d29
    7648:	vuzp.8	d27, d29
    764c:	vst1.32	{d27[0]}, [r1 :32]
    7650:	add	r1, r2, #36	; 0x24
    7654:	vld1.8	{d30}, [r1]
    7658:	ldr	r1, [r2, #44]	; 0x2c
    765c:	vmov.32	d31[0], r1
    7660:	add	r1, r3, #8
    7664:	vtbl.8	d18, {d30-d31}, d18
    7668:	vtbl.8	d19, {d30-d31}, d19
    766c:	vtbl.8	d20, {d30-d31}, d20
    7670:	veor	d30, d16, d21
    7674:	veor	d16, d22, d16
    7678:	veor	d31, d24, d17
    767c:	veor	d24, d23, d24
    7680:	veor	d21, d22, d21
    7684:	veor	d17, d23, d17
    7688:	veor	d23, d26, d25
    768c:	vorr	d27, d19, d18
    7690:	vand	d29, d19, d18
    7694:	vorr	d16, d16, d30
    7698:	vorr	d22, d24, d31
    769c:	veor	d24, d28, d26
    76a0:	vand	d27, d27, d20
    76a4:	vorr	d16, d16, d21
    76a8:	vorr	d17, d22, d17
    76ac:	vorr	d22, d24, d23
    76b0:	veor	d21, d28, d25
    76b4:	veor	d23, d20, d18
    76b8:	veor	d20, d19, d20
    76bc:	veor	d18, d19, d18
    76c0:	vmov.i32	q12, #255	; 0x000000ff
    76c4:	vorr	d27, d27, d29
    76c8:	vorr	d19, d20, d23
    76cc:	vorr	d21, d22, d21
    76d0:	vuzp.8	d27, d26
    76d4:	vorr	d18, d19, d18
    76d8:	vmovl.u16	q10, d21
    76dc:	vst1.32	{d27[0]}, [r1 :32]
    76e0:	vmovl.u16	q13, d16
    76e4:	vmovl.u16	q8, d17
    76e8:	vmovl.u16	q9, d18
    76ec:	vand	q10, q10, q12
    76f0:	ldrb	r2, [r4, #2940]	; 0xb7c
    76f4:	ldrb	r3, [r4, #2942]	; 0xb7e
    76f8:	ldrb	r8, [r4, #2941]	; 0xb7d
    76fc:	vand	q11, q13, q12
    7700:	vand	q8, q8, q12
    7704:	vand	q9, q9, q12
    7708:	orr	r1, r3, r2
    770c:	and	r5, r3, r2
    7710:	eor	sl, r8, r2
    7714:	eor	r2, r3, r2
    7718:	vadd.i32	q8, q11, q8
    771c:	and	r1, r1, r8
    7720:	orr	r1, r1, r5
    7724:	strb	r1, [sp, #32]
    7728:	vadd.i32	q8, q8, q10
    772c:	ldrb	r1, [r4, #2943]	; 0xb7f
    7730:	ldrb	r6, [r4, #2945]	; 0xb81
    7734:	ldrb	r5, [r4, #2944]	; 0xb80
    7738:	vadd.i32	q8, q8, q9
    773c:	orr	r7, r6, r1
    7740:	and	r9, r7, r5
    7744:	and	r7, r6, r1
    7748:	vext.8	q9, q8, q8, #8
    774c:	orr	r7, r9, r7
    7750:	strb	r7, [sp, #33]	; 0x21
    7754:	eor	r7, r3, r8
    7758:	eor	r3, r5, r1
    775c:	eor	r5, r6, r5
    7760:	eor	r1, r6, r1
    7764:	orr	r7, r7, sl
    7768:	orr	r3, r5, r3
    776c:	vadd.i32	q8, q8, q9
    7770:	orr	r2, r7, r2
    7774:	orr	r1, r3, r1
    7778:	vdup.32	q9, d16[1]
    777c:	vadd.i32	q8, q8, q9
    7780:	vmov.32	r9, d16[0]
    7784:	uxtab	r2, r9, r2
    7788:	uxtab	r1, r2, r1
    778c:	cmp	r1, #3
    7790:	bhi	78f8 <btbb_decode_header@@Base+0x388>
    7794:	ldr	r0, [r4, #2816]	; 0xb00
    7798:	ldr	r1, [pc, #376]	; 7918 <btbb_decode_header@@Base+0x3a8>
    779c:	and	r2, ip, #1
    77a0:	ldr	ip, [pc, #372]	; 791c <btbb_decode_header@@Base+0x3ac>
    77a4:	movw	r7, #1033	; 0x409
    77a8:	mov	r3, #0
    77ac:	movt	r7, #33026	; 0x8102
    77b0:	and	r0, r0, #63	; 0x3f
    77b4:	add	r1, pc, r1
    77b8:	add	ip, pc, ip
    77bc:	ldrb	r5, [r1, r0]
    77c0:	add	r0, r4, #22
    77c4:	smmla	r1, r5, r7, r5
    77c8:	cmp	r2, #0
    77cc:	asr	r6, r1, #6
    77d0:	add	r1, r6, r1, lsr #31
    77d4:	rsb	r1, r1, r1, lsl #7
    77d8:	sub	r5, r5, r1
    77dc:	ldrb	r1, [lr, r3]
    77e0:	ldrbne	r6, [ip, r5]
    77e4:	add	r5, r5, #1
    77e8:	eorne	r1, r6, r1
    77ec:	strb	r1, [r0, r3]
    77f0:	add	r3, r3, #1
    77f4:	cmp	r3, #18
    77f8:	bne	77c4 <btbb_decode_header@@Base+0x254>
    77fc:	ldrb	r0, [r4, #22]
    7800:	ldrb	r1, [r4, #23]
    7804:	ldrb	r3, [r4, #24]
    7808:	ldrb	r2, [r4, #25]
    780c:	ldrb	r5, [r4, #27]
    7810:	ldrb	r6, [r4, #28]
    7814:	ldrb	r7, [r4, #29]
    7818:	ldrb	r8, [r4, #30]
    781c:	ldrb	r9, [r4, #31]
    7820:	orr	r0, r0, r1, lsl #1
    7824:	ldrb	r1, [r4, #26]
    7828:	str	r2, [sp, #12]
    782c:	str	r3, [sp, #8]
    7830:	orr	r0, r0, r3, lsl #2
    7834:	orr	r0, r0, r2, lsl #3
    7838:	str	r1, [sp, #4]
    783c:	ldrb	r2, [r4, #32]
    7840:	orr	r0, r0, r1, lsl #4
    7844:	ldrb	r1, [r4, #33]	; 0x21
    7848:	orr	r0, r0, r5, lsl #5
    784c:	orr	r1, r2, r1, lsl #1
    7850:	ldrb	r2, [r4, #34]	; 0x22
    7854:	orr	r0, r0, r6, lsl #6
    7858:	orr	r0, r0, r7, lsl #7
    785c:	orr	r1, r1, r2, lsl #2
    7860:	ldrb	r2, [r4, #35]	; 0x23
    7864:	orr	r0, r0, r8, lsl #8
    7868:	orr	r0, r0, r9, lsl #9
    786c:	orr	r1, r1, r2, lsl #3
    7870:	ldrb	r2, [r4, #36]	; 0x24
    7874:	uxth	r0, r0
    7878:	orr	r1, r1, r2, lsl #4
    787c:	ldrb	r2, [r4, #37]	; 0x25
    7880:	orr	r1, r1, r2, lsl #5
    7884:	ldrb	r2, [r4, #38]	; 0x26
    7888:	orr	r1, r1, r2, lsl #6
    788c:	ldrb	r2, [r4, #39]	; 0x27
    7890:	orr	sl, r1, r2, lsl #7
    7894:	uxtb	r1, sl
    7898:	bl	73e8 <try_clock@@Base+0x358>
    789c:	ldrb	r2, [r4, #9]
    78a0:	mov	r1, r0
    78a4:	mov	r0, #0
    78a8:	cmp	r1, r2
    78ac:	bne	78f8 <btbb_decode_header@@Base+0x388>
    78b0:	orr	r1, r7, r8, lsl #1
    78b4:	strb	sl, [r4, #21]
    78b8:	ldr	r2, [sp, #4]
    78bc:	ldr	r0, [sp, #8]
    78c0:	orr	r1, r1, r9, lsl #2
    78c4:	strb	r1, [r4, #20]
    78c8:	ldr	r1, [sp, #12]
    78cc:	lsl	r0, r0, #2
    78d0:	orr	r1, r1, r2, lsl #1
    78d4:	orr	r1, r1, r5, lsl #2
    78d8:	orr	r1, r1, r6, lsl #3
    78dc:	strb	r1, [r4, #18]
    78e0:	ldrb	r1, [r4, #22]
    78e4:	ldrb	r2, [r4, #23]
    78e8:	orr	r1, r1, r2, lsl #1
    78ec:	orr	r0, r1, r0
    78f0:	strb	r0, [r4, #19]
    78f4:	mov	r0, #1
    78f8:	sub	sp, fp, #28
    78fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7900:			; <UNDEFINED> instruction: 0xff03ff00
    7904:			; <UNDEFINED> instruction: 0xff09ff06
    7908:			; <UNDEFINED> instruction: 0xff05ff02
    790c:			; <UNDEFINED> instruction: 0xff0bff08
    7910:			; <UNDEFINED> instruction: 0xff04ff01
    7914:			; <UNDEFINED> instruction: 0xff0aff07
    7918:	andeq	fp, r0, lr, lsr #5
    791c:	andeq	fp, r0, r0, lsr r1

00007920 <btbb_decode_payload@@Base>:
    7920:	push	{r4, sl, fp, lr}
    7924:	add	fp, sp, #8
    7928:	mov	r4, r0
    792c:	mov	r0, #0
    7930:	str	r0, [r4, #40]	; 0x28
    7934:	ldrb	r1, [r4, #18]
    7938:	cmp	r1, #15
    793c:	bhi	7a0c <btbb_decode_payload@@Base+0xec>
    7940:	add	r0, pc, #4
    7944:	ldr	r1, [r0, r1, lsl #2]
    7948:	add	pc, r0, r1
    794c:	andeq	r0, r0, r0, rrx
    7950:	andeq	r0, r0, r0, rrx
    7954:	andeq	r0, r0, r0, ror r0
    7958:	andeq	r0, r0, r0, asr #32
    795c:	andeq	r0, r0, r0, asr r0
    7960:	muleq	r0, r4, r0
    7964:	muleq	r0, r4, r0
    7968:	andeq	r0, r0, r0, lsl #1
    796c:	andeq	r0, r0, r0, asr #32
    7970:	andeq	r0, r0, r0, asr r0
    7974:	andeq	r0, r0, r0, asr #32
    7978:	andeq	r0, r0, r0, asr r0
    797c:	strheq	r0, [r0], -r4
    7980:	andeq	r0, r0, r4, lsr #1
    7984:	andeq	r0, r0, r0, asr #32
    7988:	andeq	r0, r0, r0, asr r0
    798c:	ldr	r0, [r4, #2816]	; 0xb00
    7990:	mov	r1, r4
    7994:	bl	45b4 <DM@plt>
    7998:	b	7a0c <btbb_decode_payload@@Base+0xec>
    799c:	ldr	r0, [r4, #2816]	; 0xb00
    79a0:	mov	r1, r4
    79a4:	bl	4788 <DH@plt>
    79a8:	b	7a0c <btbb_decode_payload@@Base+0xec>
    79ac:	mov	r0, #0
    79b0:	str	r0, [r4, #64]	; 0x40
    79b4:	mov	r0, #1
    79b8:	b	7a0c <btbb_decode_payload@@Base+0xec>
    79bc:	ldr	r0, [r4, #2816]	; 0xb00
    79c0:	mov	r1, r4
    79c4:	bl	4584 <fhs@plt>
    79c8:	b	7a0c <btbb_decode_payload@@Base+0xec>
    79cc:	ldr	r0, [r4, #2816]	; 0xb00
    79d0:	mov	r1, r4
    79d4:	bl	471c <EV3@plt>
    79d8:	cmp	r0, #1
    79dc:	bgt	7a0c <btbb_decode_payload@@Base+0xec>
    79e0:	ldr	r0, [r4, #2816]	; 0xb00
    79e4:	mov	r1, r4
    79e8:	bl	45c0 <HV@plt>
    79ec:	b	7a0c <btbb_decode_payload@@Base+0xec>
    79f0:	ldr	r0, [r4, #2816]	; 0xb00
    79f4:	mov	r1, r4
    79f8:	bl	4770 <EV5@plt>
    79fc:	b	7a0c <btbb_decode_payload@@Base+0xec>
    7a00:	ldr	r0, [r4, #2816]	; 0xb00
    7a04:	mov	r1, r4
    7a08:	bl	4590 <EV4@plt>
    7a0c:	ldr	r1, [r4, #4]
    7a10:	orr	r1, r1, #128	; 0x80
    7a14:	str	r1, [r4, #4]
    7a18:	pop	{r4, sl, fp, pc}

00007a1c <btbb_decode@@Base>:
    7a1c:	push	{r4, r5, fp, lr}
    7a20:	add	fp, sp, #8
    7a24:	mov	r4, r0
    7a28:	ldr	r0, [r0, #4]
    7a2c:	bic	r0, r0, #128	; 0x80
    7a30:	str	r0, [r4, #4]
    7a34:	mov	r0, r4
    7a38:	bl	4698 <btbb_decode_header@plt>
    7a3c:	cmp	r0, #0
    7a40:	beq	7a80 <btbb_decode@@Base+0x64>
    7a44:	mov	r0, r4
    7a48:	bl	47a0 <btbb_decode_payload@plt>
    7a4c:	mov	r5, r0
    7a50:	cmp	r0, #1
    7a54:	blt	7a78 <btbb_decode@@Base+0x5c>
    7a58:	ldr	r0, [r4, #2816]	; 0xb00
    7a5c:	mov	r2, r5
    7a60:	and	r1, r0, #63	; 0x3f
    7a64:	ldr	r0, [pc, #32]	; 7a8c <btbb_decode@@Base+0x70>
    7a68:	add	r0, pc, r0
    7a6c:	bl	4500 <printf@plt>
    7a70:	mov	r0, r4
    7a74:	bl	47c4 <btbb_print_packet@plt>
    7a78:	mov	r0, r5
    7a7c:	pop	{r4, r5, fp, pc}
    7a80:	mov	r5, #0
    7a84:	mov	r0, r5
    7a88:	pop	{r4, r5, fp, pc}
    7a8c:	andeq	sl, r0, r7, lsl #31

00007a90 <btbb_print_packet@@Base>:
    7a90:	push	{r4, r5, r6, r7, fp, lr}
    7a94:	add	fp, sp, #16
    7a98:	mov	r4, r0
    7a9c:	ldrb	r0, [r0, #4]
    7aa0:	tst	r0, #128	; 0x80
    7aa4:	popeq	{r4, r5, r6, r7, fp, pc}
    7aa8:	ldrb	r0, [r4, #18]
    7aac:	ldr	r1, [pc, #248]	; 7bac <btbb_print_packet@@Base+0x11c>
    7ab0:	add	r1, pc, r1
    7ab4:	ldr	r1, [r1, r0, lsl #2]
    7ab8:	ldr	r0, [pc, #240]	; 7bb0 <btbb_print_packet@@Base+0x120>
    7abc:	add	r0, pc, r0
    7ac0:	bl	4500 <printf@plt>
    7ac4:	ldr	r0, [r4, #40]	; 0x28
    7ac8:	cmp	r0, #1
    7acc:	blt	7b10 <btbb_print_packet@@Base+0x80>
    7ad0:	ldrb	r1, [r4, #19]
    7ad4:	ldr	r0, [pc, #216]	; 7bb4 <btbb_print_packet@@Base+0x124>
    7ad8:	add	r0, pc, r0
    7adc:	bl	4500 <printf@plt>
    7ae0:	ldrb	r1, [r4, #60]	; 0x3c
    7ae4:	ldr	r0, [pc, #204]	; 7bb8 <btbb_print_packet@@Base+0x128>
    7ae8:	add	r0, pc, r0
    7aec:	bl	4500 <printf@plt>
    7af0:	ldrb	r1, [r4, #61]	; 0x3d
    7af4:	ldr	r0, [pc, #192]	; 7bbc <btbb_print_packet@@Base+0x12c>
    7af8:	add	r0, pc, r0
    7afc:	bl	4500 <printf@plt>
    7b00:	ldr	r1, [r4, #64]	; 0x40
    7b04:	ldr	r0, [pc, #180]	; 7bc0 <btbb_print_packet@@Base+0x130>
    7b08:	add	r0, pc, r0
    7b0c:	bl	4500 <printf@plt>
    7b10:	ldr	r0, [r4, #64]	; 0x40
    7b14:	cmp	r0, #0
    7b18:	beq	7ba8 <btbb_print_packet@@Base+0x118>
    7b1c:	ldr	r0, [pc, #160]	; 7bc4 <btbb_print_packet@@Base+0x134>
    7b20:	add	r0, pc, r0
    7b24:	bl	4500 <printf@plt>
    7b28:	ldr	r0, [r4, #64]	; 0x40
    7b2c:	cmp	r0, #1
    7b30:	blt	7b9c <btbb_print_packet@@Base+0x10c>
    7b34:	ldr	r7, [pc, #140]	; 7bc8 <btbb_print_packet@@Base+0x138>
    7b38:	mov	r6, #0
    7b3c:	add	r7, pc, r7
    7b40:	add	r0, r4, r6, lsl #3
    7b44:	ldrb	r1, [r0, #68]	; 0x44
    7b48:	ldrb	r2, [r0, #69]	; 0x45
    7b4c:	ldrb	r3, [r0, #70]	; 0x46
    7b50:	ldrb	r5, [r0, #71]	; 0x47
    7b54:	orr	r1, r1, r2, lsl #1
    7b58:	ldrb	r2, [r0, #72]	; 0x48
    7b5c:	orr	r1, r1, r3, lsl #2
    7b60:	orr	r1, r1, r5, lsl #3
    7b64:	orr	r1, r1, r2, lsl #4
    7b68:	ldrb	r2, [r0, #73]	; 0x49
    7b6c:	orr	r1, r1, r2, lsl #5
    7b70:	ldrb	r2, [r0, #74]	; 0x4a
    7b74:	ldrb	r0, [r0, #75]	; 0x4b
    7b78:	orr	r1, r1, r2, lsl #6
    7b7c:	orr	r0, r1, r0, lsl #7
    7b80:	uxtb	r1, r0
    7b84:	mov	r0, r7
    7b88:	bl	4500 <printf@plt>
    7b8c:	ldr	r0, [r4, #64]	; 0x40
    7b90:	add	r6, r6, #1
    7b94:	cmp	r6, r0
    7b98:	blt	7b40 <btbb_print_packet@@Base+0xb0>
    7b9c:	mov	r0, #10
    7ba0:	pop	{r4, r5, r6, r7, fp, lr}
    7ba4:	b	4704 <putchar@plt>
    7ba8:	pop	{r4, r5, r6, r7, fp, pc}
    7bac:	andeq	r1, r2, ip, lsr r3
    7bb0:	andeq	sl, r0, sp, asr pc
    7bb4:	andeq	sl, r0, sp, asr #30
    7bb8:	andeq	sl, r0, ip, asr #30
    7bbc:	andeq	sl, r0, r8, asr #30
    7bc0:	andeq	sl, r0, r4, asr #30
    7bc4:	andeq	fp, r0, lr, ror r5
    7bc8:	andeq	fp, r0, fp, ror #15

00007bcc <tun_format@@Base>:
    7bcc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7bd0:	add	fp, sp, #24
    7bd4:	ldr	r6, [r0, #64]	; 0x40
    7bd8:	mov	r8, r0
    7bdc:	add	r0, r6, #9
    7be0:	bl	462c <malloc@plt>
    7be4:	ldr	r1, [r8, #2816]	; 0xb00
    7be8:	cmp	r6, #1
    7bec:	str	r1, [r0]
    7bf0:	ldrb	r1, [r8, #8]
    7bf4:	strb	r1, [r0, #4]
    7bf8:	ldr	r1, [r8, #4]
    7bfc:	and	r2, r1, #2
    7c00:	ubfx	r1, r1, #5, #1
    7c04:	orr	r1, r1, r2
    7c08:	strb	r1, [r0, #5]
    7c0c:	ldrb	r1, [r8, #22]
    7c10:	ldrb	r2, [r8, #23]
    7c14:	ldrb	r3, [r8, #24]
    7c18:	ldrb	r5, [r8, #25]
    7c1c:	orr	r1, r1, r2, lsl #1
    7c20:	ldrb	r2, [r8, #26]
    7c24:	orr	r1, r1, r3, lsl #2
    7c28:	orr	r1, r1, r5, lsl #3
    7c2c:	orr	r1, r1, r2, lsl #4
    7c30:	ldrb	r2, [r8, #27]
    7c34:	orr	r1, r1, r2, lsl #5
    7c38:	ldrb	r2, [r8, #28]
    7c3c:	orr	r1, r1, r2, lsl #6
    7c40:	strb	r1, [r0, #6]
    7c44:	ldrb	r1, [r8, #29]
    7c48:	ldrb	r2, [r8, #30]
    7c4c:	ldrb	r3, [r8, #31]
    7c50:	orr	r1, r1, r2, lsl #1
    7c54:	orr	r1, r1, r3, lsl #2
    7c58:	strb	r1, [r0, #7]
    7c5c:	ldrb	r1, [r8, #32]
    7c60:	ldrb	r2, [r8, #33]	; 0x21
    7c64:	ldrb	r3, [r8, #34]	; 0x22
    7c68:	ldrb	r5, [r8, #35]	; 0x23
    7c6c:	orr	r1, r1, r2, lsl #1
    7c70:	ldrb	r2, [r8, #36]	; 0x24
    7c74:	orr	r1, r1, r3, lsl #2
    7c78:	orr	r1, r1, r5, lsl #3
    7c7c:	orr	r1, r1, r2, lsl #4
    7c80:	ldrb	r2, [r8, #37]	; 0x25
    7c84:	orr	r1, r1, r2, lsl #5
    7c88:	ldrb	r2, [r8, #38]	; 0x26
    7c8c:	orr	r1, r1, r2, lsl #6
    7c90:	ldrb	r2, [r8, #39]	; 0x27
    7c94:	orr	r1, r1, r2, lsl #7
    7c98:	strb	r1, [r0, #8]
    7c9c:	blt	7cfc <tun_format@@Base+0x130>
    7ca0:	add	ip, r0, #9
    7ca4:	rsb	r2, r6, #0
    7ca8:	mov	r3, #0
    7cac:	sub	r6, r8, r3, lsl #3
    7cb0:	ldrb	r5, [r6, #68]	; 0x44
    7cb4:	ldrb	r4, [r6, #69]	; 0x45
    7cb8:	ldrb	r7, [r6, #70]	; 0x46
    7cbc:	ldrb	r1, [r6, #71]	; 0x47
    7cc0:	orr	r5, r5, r4, lsl #1
    7cc4:	orr	r7, r5, r7, lsl #2
    7cc8:	orr	r1, r7, r1, lsl #3
    7ccc:	ldrb	r7, [r6, #72]	; 0x48
    7cd0:	orr	r1, r1, r7, lsl #4
    7cd4:	ldrb	r7, [r6, #73]	; 0x49
    7cd8:	orr	r1, r1, r7, lsl #5
    7cdc:	ldrb	r7, [r6, #74]	; 0x4a
    7ce0:	orr	r1, r1, r7, lsl #6
    7ce4:	ldrb	r7, [r6, #75]	; 0x4b
    7ce8:	orr	r1, r1, r7, lsl #7
    7cec:	strb	r1, [ip, -r3]
    7cf0:	sub	r3, r3, #1
    7cf4:	cmp	r2, r3
    7cf8:	bne	7cac <tun_format@@Base+0xe0>
    7cfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00007d00 <btbb_header_present@@Base>:
    7d00:	push	{r4, sl, fp, lr}
    7d04:	add	fp, sp, #8
    7d08:	movw	r1, #2822	; 0xb06
    7d0c:	ldrh	r2, [r0, r1]
    7d10:	mov	r1, #0
    7d14:	cmp	r2, #122	; 0x7a
    7d18:	bcc	7d98 <btbb_header_present@@Base+0x98>
    7d1c:	ldrb	r1, [r0, #2887]	; 0xb47
    7d20:	ldrb	ip, [r0, #2888]	; 0xb48
    7d24:	ldrb	lr, [r0, #2889]	; 0xb49
    7d28:	ldrb	r2, [r0, #2890]	; 0xb4a
    7d2c:	clz	r3, r1
    7d30:	lsr	r3, r3, #5
    7d34:	eor	r4, r2, r3
    7d38:	eor	r3, ip, r3
    7d3c:	eor	r2, lr, r1
    7d40:	uxtab	r2, r3, r2
    7d44:	ldrb	r3, [r0, #2891]	; 0xb4b
    7d48:	add	r2, r2, r4
    7d4c:	eor	r1, r3, r1
    7d50:	uxtab	r2, r2, r1
    7d54:	mov	r1, #0
    7d58:	add	r3, r0, r1
    7d5c:	add	r1, r1, #3
    7d60:	ldrb	ip, [r3, #2892]	; 0xb4c
    7d64:	ldrb	r4, [r3, #2893]	; 0xb4d
    7d68:	ldrb	r3, [r3, #2894]	; 0xb4e
    7d6c:	cmp	r1, #54	; 0x36
    7d70:	eor	lr, r4, ip
    7d74:	eor	r4, r3, r4
    7d78:	eor	r3, r3, ip
    7d7c:	orr	r4, r4, lr
    7d80:	orr	r3, r4, r3
    7d84:	uxtab	r2, r2, r3
    7d88:	bcc	7d58 <btbb_header_present@@Base+0x58>
    7d8c:	cmp	r2, #5
    7d90:	mov	r1, #0
    7d94:	movwlt	r1, #1
    7d98:	mov	r0, r1
    7d9c:	pop	{r4, sl, fp, pc}

00007da0 <lap_from_fhs@@Base>:
    7da0:	ldrb	ip, [r0, #102]	; 0x66
    7da4:	ldrb	r2, [r0, #103]	; 0x67
    7da8:	ldrb	r3, [r0, #104]	; 0x68
    7dac:	ldrb	r1, [r0, #105]	; 0x69
    7db0:	orr	r2, ip, r2, lsl #1
    7db4:	orr	r2, r2, r3, lsl #2
    7db8:	orr	r1, r2, r1, lsl #3
    7dbc:	ldrb	r2, [r0, #106]	; 0x6a
    7dc0:	orr	r1, r1, r2, lsl #4
    7dc4:	ldrb	r2, [r0, #107]	; 0x6b
    7dc8:	orr	r1, r1, r2, lsl #5
    7dcc:	ldrb	r2, [r0, #108]	; 0x6c
    7dd0:	orr	r1, r1, r2, lsl #6
    7dd4:	ldrb	r2, [r0, #109]	; 0x6d
    7dd8:	orr	r1, r1, r2, lsl #7
    7ddc:	ldrb	r2, [r0, #110]	; 0x6e
    7de0:	orr	r1, r1, r2, lsl #8
    7de4:	ldrb	r2, [r0, #111]	; 0x6f
    7de8:	orr	r1, r1, r2, lsl #9
    7dec:	ldrb	r2, [r0, #112]	; 0x70
    7df0:	orr	r1, r1, r2, lsl #10
    7df4:	ldrb	r2, [r0, #113]	; 0x71
    7df8:	orr	r1, r1, r2, lsl #11
    7dfc:	ldrb	r2, [r0, #114]	; 0x72
    7e00:	orr	r1, r1, r2, lsl #12
    7e04:	ldrb	r2, [r0, #115]	; 0x73
    7e08:	orr	r1, r1, r2, lsl #13
    7e0c:	ldrb	r2, [r0, #116]	; 0x74
    7e10:	orr	r1, r1, r2, lsl #14
    7e14:	ldrb	r2, [r0, #117]	; 0x75
    7e18:	orr	r1, r1, r2, lsl #15
    7e1c:	ldrb	r2, [r0, #118]	; 0x76
    7e20:	orr	r1, r1, r2, lsl #16
    7e24:	ldrb	r2, [r0, #119]	; 0x77
    7e28:	orr	r1, r1, r2, lsl #17
    7e2c:	ldrb	r2, [r0, #120]	; 0x78
    7e30:	orr	r1, r1, r2, lsl #18
    7e34:	ldrb	r2, [r0, #121]	; 0x79
    7e38:	orr	r1, r1, r2, lsl #19
    7e3c:	ldrb	r2, [r0, #122]	; 0x7a
    7e40:	orr	r1, r1, r2, lsl #20
    7e44:	ldrb	r2, [r0, #123]	; 0x7b
    7e48:	orr	r1, r1, r2, lsl #21
    7e4c:	ldrb	r2, [r0, #124]	; 0x7c
    7e50:	ldrb	r0, [r0, #125]	; 0x7d
    7e54:	orr	r1, r1, r2, lsl #22
    7e58:	orr	r0, r1, r0, lsl #23
    7e5c:	bx	lr

00007e60 <uap_from_fhs@@Base>:
    7e60:	ldrb	ip, [r0, #132]	; 0x84
    7e64:	ldrb	r2, [r0, #133]	; 0x85
    7e68:	ldrb	r3, [r0, #134]	; 0x86
    7e6c:	ldrb	r1, [r0, #135]	; 0x87
    7e70:	orr	r2, ip, r2, lsl #1
    7e74:	orr	r2, r2, r3, lsl #2
    7e78:	orr	r1, r2, r1, lsl #3
    7e7c:	ldrb	r2, [r0, #136]	; 0x88
    7e80:	orr	r1, r1, r2, lsl #4
    7e84:	ldrb	r2, [r0, #137]	; 0x89
    7e88:	orr	r1, r1, r2, lsl #5
    7e8c:	ldrb	r2, [r0, #138]	; 0x8a
    7e90:	ldrb	r0, [r0, #139]	; 0x8b
    7e94:	orr	r1, r1, r2, lsl #6
    7e98:	orr	r0, r1, r0, lsl #7
    7e9c:	uxtb	r0, r0
    7ea0:	bx	lr

00007ea4 <nap_from_fhs@@Base>:
    7ea4:	ldrb	ip, [r0, #140]	; 0x8c
    7ea8:	ldrb	r2, [r0, #141]	; 0x8d
    7eac:	ldrb	r3, [r0, #142]	; 0x8e
    7eb0:	ldrb	r1, [r0, #143]	; 0x8f
    7eb4:	orr	r2, ip, r2, lsl #1
    7eb8:	orr	r2, r2, r3, lsl #2
    7ebc:	orr	r1, r2, r1, lsl #3
    7ec0:	ldrb	r2, [r0, #144]	; 0x90
    7ec4:	orr	r1, r1, r2, lsl #4
    7ec8:	ldrb	r2, [r0, #145]	; 0x91
    7ecc:	orr	r1, r1, r2, lsl #5
    7ed0:	ldrb	r2, [r0, #146]	; 0x92
    7ed4:	orr	r1, r1, r2, lsl #6
    7ed8:	ldrb	r2, [r0, #147]	; 0x93
    7edc:	orr	r1, r1, r2, lsl #7
    7ee0:	ldrb	r2, [r0, #148]	; 0x94
    7ee4:	orr	r1, r1, r2, lsl #8
    7ee8:	ldrb	r2, [r0, #149]	; 0x95
    7eec:	orr	r1, r1, r2, lsl #9
    7ef0:	ldrb	r2, [r0, #150]	; 0x96
    7ef4:	orr	r1, r1, r2, lsl #10
    7ef8:	ldrb	r2, [r0, #151]	; 0x97
    7efc:	orr	r1, r1, r2, lsl #11
    7f00:	ldrb	r2, [r0, #152]	; 0x98
    7f04:	orr	r1, r1, r2, lsl #12
    7f08:	ldrb	r2, [r0, #153]	; 0x99
    7f0c:	orr	r1, r1, r2, lsl #13
    7f10:	ldrb	r2, [r0, #154]	; 0x9a
    7f14:	ldrb	r0, [r0, #155]	; 0x9b
    7f18:	orr	r1, r1, r2, lsl #14
    7f1c:	orr	r0, r1, r0, lsl #15
    7f20:	uxth	r0, r0
    7f24:	bx	lr

00007f28 <clock_from_fhs@@Base>:
    7f28:	ldrb	ip, [r0, #183]	; 0xb7
    7f2c:	ldrb	r2, [r0, #184]	; 0xb8
    7f30:	ldrb	r3, [r0, #185]	; 0xb9
    7f34:	ldrb	r1, [r0, #186]	; 0xba
    7f38:	orr	r2, ip, r2, lsl #1
    7f3c:	orr	r2, r2, r3, lsl #2
    7f40:	orr	r1, r2, r1, lsl #3
    7f44:	ldrb	r2, [r0, #187]	; 0xbb
    7f48:	orr	r1, r1, r2, lsl #4
    7f4c:	ldrb	r2, [r0, #188]	; 0xbc
    7f50:	orr	r1, r1, r2, lsl #5
    7f54:	ldrb	r2, [r0, #189]	; 0xbd
    7f58:	orr	r1, r1, r2, lsl #6
    7f5c:	ldrb	r2, [r0, #190]	; 0xbe
    7f60:	orr	r1, r1, r2, lsl #7
    7f64:	ldrb	r2, [r0, #191]	; 0xbf
    7f68:	orr	r1, r1, r2, lsl #8
    7f6c:	ldrb	r2, [r0, #192]	; 0xc0
    7f70:	orr	r1, r1, r2, lsl #9
    7f74:	ldrb	r2, [r0, #193]	; 0xc1
    7f78:	orr	r1, r1, r2, lsl #10
    7f7c:	ldrb	r2, [r0, #194]	; 0xc2
    7f80:	orr	r1, r1, r2, lsl #11
    7f84:	ldrb	r2, [r0, #195]	; 0xc3
    7f88:	orr	r1, r1, r2, lsl #12
    7f8c:	ldrb	r2, [r0, #196]	; 0xc4
    7f90:	orr	r1, r1, r2, lsl #13
    7f94:	ldrb	r2, [r0, #197]	; 0xc5
    7f98:	orr	r1, r1, r2, lsl #14
    7f9c:	ldrb	r2, [r0, #198]	; 0xc6
    7fa0:	orr	r1, r1, r2, lsl #15
    7fa4:	ldrb	r2, [r0, #199]	; 0xc7
    7fa8:	orr	r1, r1, r2, lsl #16
    7fac:	ldrb	r2, [r0, #200]	; 0xc8
    7fb0:	orr	r1, r1, r2, lsl #17
    7fb4:	ldrb	r2, [r0, #201]	; 0xc9
    7fb8:	orr	r1, r1, r2, lsl #18
    7fbc:	ldrb	r2, [r0, #202]	; 0xca
    7fc0:	orr	r1, r1, r2, lsl #19
    7fc4:	ldrb	r2, [r0, #203]	; 0xcb
    7fc8:	orr	r1, r1, r2, lsl #20
    7fcc:	ldrb	r2, [r0, #204]	; 0xcc
    7fd0:	orr	r1, r1, r2, lsl #21
    7fd4:	ldrb	r2, [r0, #205]	; 0xcd
    7fd8:	orr	r1, r1, r2, lsl #22
    7fdc:	ldrb	r2, [r0, #206]	; 0xce
    7fe0:	orr	r1, r1, r2, lsl #23
    7fe4:	ldrb	r2, [r0, #207]	; 0xcf
    7fe8:	ldrb	r0, [r0, #208]	; 0xd0
    7fec:	orr	r1, r1, r2, lsl #24
    7ff0:	orr	r0, r1, r0, lsl #25
    7ff4:	bx	lr
    7ff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7ffc:	add	fp, sp, #28
    8000:	sub	sp, sp, #4
    8004:	vpush	{d8-d9}
    8008:	sub	sp, sp, #24
    800c:	cmp	r2, #57	; 0x39
    8010:	str	r1, [sp, #12]
    8014:	bgt	8498 <clock_from_fhs@@Base+0x570>
    8018:	vmov.i32	q4, #0	; 0x00000000
    801c:	sub	r3, r3, #1
    8020:	mov	sl, r2
    8024:	mov	r5, r0
    8028:	mov	r9, #0
    802c:	stmib	sp, {r0, r3}
    8030:	b	8054 <clock_from_fhs@@Base+0x12c>
    8034:	add	r2, sl, #1
    8038:	mov	r0, r6
    803c:	mov	r1, r7
    8040:	bl	7ff8 <clock_from_fhs@@Base+0xd0>
    8044:	ldr	r3, [sp, #8]
    8048:	add	sl, sl, #1
    804c:	cmp	sl, #58	; 0x3a
    8050:	beq	8498 <clock_from_fhs@@Base+0x570>
    8054:	mov	r2, #1
    8058:	subs	r1, sl, #32
    805c:	lsl	r0, r2, sl
    8060:	movwpl	r0, #0
    8064:	orr	r6, r0, r5
    8068:	rsb	r0, sl, #32
    806c:	lsr	r0, r2, r0
    8070:	lslpl	r0, r2, r1
    8074:	ldr	r1, [sp, #12]
    8078:	cmp	r3, #0
    807c:	orr	r7, r0, r1
    8080:	bne	8034 <clock_from_fhs@@Base+0x10c>
    8084:	mov	r0, #48	; 0x30
    8088:	bl	462c <malloc@plt>
    808c:	mov	r5, r0
    8090:	mov	r0, #8
    8094:	str	r0, [r5, #40]	; 0x28
    8098:	movw	r0, #29288	; 0x7268
    809c:	str	r9, [r5, #24]
    80a0:	str	r7, [r5, #12]
    80a4:	str	r6, [r5, #8]
    80a8:	add	r4, r5, #16
    80ac:	movt	r0, #52347	; 0xcc7b
    80b0:	eor	r0, r7, r0
    80b4:	ubfx	r1, r0, #8, #8
    80b8:	ldr	r2, [pc, #1008]	; 84b0 <clock_from_fhs@@Base+0x588>
    80bc:	ldr	r7, [pc, #1008]	; 84b4 <clock_from_fhs@@Base+0x58c>
    80c0:	uxtb	r3, r0
    80c4:	add	r7, pc, r7
    80c8:	add	r2, pc, r2
    80cc:	ldr	r3, [r7, r3, lsl #3]!
    80d0:	ldr	r1, [r2, r1, lsl #3]!
    80d4:	eor	r3, r6, r3
    80d8:	eor	r1, r3, r1
    80dc:	ubfx	r3, r0, #16, #8
    80e0:	ldr	r6, [pc, #976]	; 84b8 <clock_from_fhs@@Base+0x590>
    80e4:	add	r6, pc, r6
    80e8:	ldr	r3, [r6, r3, lsl #3]!
    80ec:	eor	r1, r1, r3
    80f0:	mvn	r3, #7
    80f4:	and	r0, r3, r0, lsr #21
    80f8:	ldr	r3, [pc, #956]	; 84bc <clock_from_fhs@@Base+0x594>
    80fc:	add	r3, pc, r3
    8100:	ldr	r0, [r3, r0]!
    8104:	eor	r0, r1, r0
    8108:	movw	r1, #19995	; 0x4e1b
    810c:	movt	r1, #65377	; 0xff61
    8110:	eor	r0, r0, r1
    8114:	ldr	r1, [r7, #4]
    8118:	str	r0, [r5]
    811c:	ldr	r0, [r2, #4]
    8120:	eor	r0, r1, r0
    8124:	ldr	r1, [r6, #4]
    8128:	eor	r0, r0, r1
    812c:	ldr	r1, [r3, #4]
    8130:	eor	r0, r0, r1
    8134:	str	r0, [r5, #4]
    8138:	str	r5, [r5, #36]	; 0x24
    813c:	ldr	r0, [pc, #892]	; 84c0 <clock_from_fhs@@Base+0x598>
    8140:	ldr	r0, [pc, r0]
    8144:	cmp	r0, #0
    8148:	beq	816c <clock_from_fhs@@Base+0x244>
    814c:	ldr	r6, [r0, #16]
    8150:	ldr	r1, [r6, #16]
    8154:	str	r5, [r1, #8]
    8158:	ldr	r2, [r6, #20]
    815c:	sub	r1, r1, r2
    8160:	str	r1, [r5, #20]
    8164:	str	r4, [r6, #16]
    8168:	b	81f0 <clock_from_fhs@@Base+0x2c8>
    816c:	ldr	r0, [pc, #848]	; 84c4 <clock_from_fhs@@Base+0x59c>
    8170:	str	r9, [r5, #20]
    8174:	add	r0, pc, r0
    8178:	str	r5, [r0]
    817c:	mov	r0, #44	; 0x2c
    8180:	bl	462c <malloc@plt>
    8184:	cmp	r0, #0
    8188:	str	r0, [r5, #16]
    818c:	beq	84a8 <clock_from_fhs@@Base+0x580>
    8190:	mov	r6, r0
    8194:	add	r0, r0, #12
    8198:	vst1.32	{d8-d9}, [r0]
    819c:	mov	r0, #32
    81a0:	str	r0, [r6, #4]
    81a4:	mov	r0, #5
    81a8:	str	r0, [r6, #8]
    81ac:	add	r0, r6, #28
    81b0:	vst1.32	{d8-d9}, [r0]
    81b4:	mov	r0, #16
    81b8:	str	r4, [r6, #16]
    81bc:	str	r0, [r6, #20]
    81c0:	mov	r0, #384	; 0x180
    81c4:	bl	462c <malloc@plt>
    81c8:	cmp	r0, #0
    81cc:	str	r0, [r6]
    81d0:	beq	84a8 <clock_from_fhs@@Base+0x580>
    81d4:	mov	r1, #0
    81d8:	mov	r2, #384	; 0x180
    81dc:	bl	46f8 <memset@plt>
    81e0:	movw	r0, #8161	; 0x1fe1
    81e4:	movt	r0, #40977	; 0xa011
    81e8:	str	r0, [r6, #40]	; 0x28
    81ec:	mov	r0, r5
    81f0:	ldr	r1, [r6, #12]
    81f4:	movw	r2, #31161	; 0x79b9
    81f8:	movt	r2, #40503	; 0x9e37
    81fc:	add	r1, r1, #1
    8200:	str	r1, [r6, #12]
    8204:	ldr	r1, [r5, #4]
    8208:	ldrb	r6, [r5, #3]
    820c:	ldrb	r7, [r5, #2]
    8210:	ldrb	r3, [r5, #1]
    8214:	ldr	r8, [r0, #16]
    8218:	add	r1, r1, r2
    821c:	ldrb	r2, [r5]
    8220:	str	r8, [r5, #16]
    8224:	rsb	r6, r1, r6, lsl #24
    8228:	add	r7, r6, r7, lsl #16
    822c:	add	r3, r7, r3, lsl #8
    8230:	movw	r7, #48887	; 0xbef7
    8234:	movt	r7, #65261	; 0xfeed
    8238:	add	r2, r3, r2
    823c:	movw	r3, #47810	; 0xbac2
    8240:	movt	r3, #40777	; 0x9f49
    8244:	add	r2, r2, r3
    8248:	movw	r3, #63341	; 0xf76d
    824c:	movt	r3, #7
    8250:	eor	r2, r2, r3
    8254:	movw	r3, #16649	; 0x4109
    8258:	movt	r3, #274	; 0x112
    825c:	sub	r1, r1, r2
    8260:	add	r1, r1, r3
    8264:	eor	r1, r1, r2, lsl #8
    8268:	add	r3, r2, r1
    826c:	sub	r2, r2, r1
    8270:	sub	r3, r7, r3
    8274:	eor	r3, r3, r1, lsr #13
    8278:	sub	r2, r2, r3
    827c:	sub	r1, r1, r3
    8280:	eor	r2, r2, r3, lsr #12
    8284:	sub	r1, r1, r2
    8288:	sub	r3, r3, r2
    828c:	eor	r1, r1, r2, lsl #16
    8290:	sub	r3, r3, r1
    8294:	sub	r2, r2, r1
    8298:	eor	r3, r3, r1, lsr #5
    829c:	sub	r2, r2, r3
    82a0:	sub	r1, r1, r3
    82a4:	eor	r2, r2, r3, lsr #3
    82a8:	sub	r1, r1, r2
    82ac:	eor	r1, r1, r2, lsl #10
    82b0:	sub	r2, r3, r2
    82b4:	sub	r2, r2, r1
    82b8:	eor	r1, r2, r1, lsr #15
    82bc:	str	r1, [r5, #44]	; 0x2c
    82c0:	ldr	r2, [r0, #16]
    82c4:	ldm	r2, {r0, r2}
    82c8:	sub	r2, r2, #1
    82cc:	and	r1, r1, r2
    82d0:	add	r2, r1, r1, lsl #1
    82d4:	mov	r3, r0
    82d8:	add	r0, r0, r2, lsl #2
    82dc:	ldr	r7, [r3, r2, lsl #2]!
    82e0:	mov	r2, #10
    82e4:	ldr	r1, [r3, #4]
    82e8:	cmp	r7, #0
    82ec:	add	r1, r1, #1
    82f0:	str	r1, [r3, #4]
    82f4:	str	r9, [r5, #28]
    82f8:	str	r7, [r5, #32]
    82fc:	strne	r4, [r7, #12]
    8300:	str	r4, [r3]
    8304:	ldr	r5, [sp, #4]
    8308:	ldr	r0, [r0, #8]
    830c:	add	r0, r0, r0, lsl #2
    8310:	add	r0, r2, r0, lsl #1
    8314:	cmp	r1, r0
    8318:	bcc	8044 <clock_from_fhs@@Base+0x11c>
    831c:	ldr	r0, [r8, #36]	; 0x24
    8320:	cmp	r0, #1
    8324:	beq	8044 <clock_from_fhs@@Base+0x11c>
    8328:	ldr	r0, [r8, #4]
    832c:	str	r4, [sp]
    8330:	add	r0, r0, r0, lsl #1
    8334:	lsl	r0, r0, #3
    8338:	bl	462c <malloc@plt>
    833c:	cmp	r0, #0
    8340:	beq	84a8 <clock_from_fhs@@Base+0x580>
    8344:	mov	r5, r0
    8348:	ldr	r0, [r8, #4]
    834c:	mov	r1, #0
    8350:	add	r0, r0, r0, lsl #1
    8354:	lsl	r2, r0, #3
    8358:	mov	r0, r5
    835c:	bl	46f8 <memset@plt>
    8360:	str	r9, [r8, #28]
    8364:	mvn	r2, #0
    8368:	mov	r7, #1
    836c:	ldr	r0, [r8]
    8370:	ldr	r6, [r8, #4]
    8374:	ldr	r1, [r8, #12]
    8378:	str	r0, [sp, #20]
    837c:	ldr	r0, [r8, #8]
    8380:	add	r2, r2, r6, lsl #1
    8384:	str	r6, [sp, #16]
    8388:	tst	r2, r1
    838c:	add	r0, r0, #1
    8390:	lsr	r3, r1, r0
    8394:	addne	r3, r7, r1, lsr r0
    8398:	cmp	r6, #0
    839c:	str	r3, [r8, #24]
    83a0:	beq	8438 <clock_from_fhs@@Base+0x510>
    83a4:	mov	r7, #0
    83a8:	mov	lr, #0
    83ac:	b	83c0 <clock_from_fhs@@Base+0x498>
    83b0:	ldr	r0, [sp, #16]
    83b4:	add	lr, lr, #1
    83b8:	cmp	lr, r0
    83bc:	beq	8438 <clock_from_fhs@@Base+0x510>
    83c0:	ldr	r1, [sp, #20]
    83c4:	add	r0, lr, lr, lsl #1
    83c8:	ldr	r4, [r1, r0, lsl #2]
    83cc:	cmp	r4, #0
    83d0:	bne	83fc <clock_from_fhs@@Base+0x4d4>
    83d4:	b	83b0 <clock_from_fhs@@Base+0x488>
    83d8:	str	r9, [r4, #12]
    83dc:	ldr	r0, [r1]
    83e0:	cmp	r0, #0
    83e4:	str	r0, [r4, #16]
    83e8:	strne	r4, [r0, #12]
    83ec:	str	r4, [r1]
    83f0:	cmp	r6, #0
    83f4:	mov	r4, r6
    83f8:	beq	83b0 <clock_from_fhs@@Base+0x488>
    83fc:	ldr	r0, [r4, #28]
    8400:	ldr	r6, [r4, #16]
    8404:	and	r0, r0, r2
    8408:	add	r0, r0, r0, lsl #1
    840c:	add	r1, r5, r0, lsl #2
    8410:	ldr	r0, [r1, #4]
    8414:	add	ip, r0, #1
    8418:	cmp	ip, r3
    841c:	str	ip, [r1, #4]
    8420:	bls	83d8 <clock_from_fhs@@Base+0x4b0>
    8424:	udiv	r0, ip, r3
    8428:	add	r7, r7, #1
    842c:	str	r7, [r8, #28]
    8430:	str	r0, [r1, #8]
    8434:	b	83d8 <clock_from_fhs@@Base+0x4b0>
    8438:	ldr	r0, [sp, #20]
    843c:	bl	4548 <free@plt>
    8440:	ldr	r0, [sp]
    8444:	ldr	r0, [r0]
    8448:	str	r5, [r0]
    844c:	ldr	r7, [r0, #28]
    8450:	ldmib	r0, {r1, r2, r3}
    8454:	lsl	r1, r1, #1
    8458:	cmp	r7, r3, lsr #1
    845c:	str	r1, [r0, #4]
    8460:	add	r1, r2, #1
    8464:	str	r1, [r0, #8]
    8468:	bls	848c <clock_from_fhs@@Base+0x564>
    846c:	ldr	r1, [r0, #32]
    8470:	ldr	r5, [sp, #4]
    8474:	add	r1, r1, #1
    8478:	cmp	r1, #2
    847c:	str	r1, [r0, #32]
    8480:	movcs	r1, #1
    8484:	strcs	r1, [r0, #36]	; 0x24
    8488:	b	8044 <clock_from_fhs@@Base+0x11c>
    848c:	ldr	r5, [sp, #4]
    8490:	str	r9, [r0, #32]
    8494:	b	8044 <clock_from_fhs@@Base+0x11c>
    8498:	sub	sp, fp, #48	; 0x30
    849c:	vpop	{d8-d9}
    84a0:	add	sp, sp, #4
    84a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    84a8:	mvn	r0, #0
    84ac:	bl	4668 <exit@plt>
    84b0:	andeq	r9, r0, r0, lsr #32
    84b4:	andeq	r8, r0, r4, lsr #16
    84b8:	andeq	r9, r0, r4, lsl #16
    84bc:	andeq	r9, r0, ip, ror #31
    84c0:	andeq	r2, r2, r0
    84c4:	andeq	r1, r2, ip, asr #31
	...

000084d0 <count_bits@@Base>:
    84d0:	mov	r1, #0
    84d4:	cmp	r0, #0
    84d8:	beq	84f0 <count_bits@@Base+0x20>
    84dc:	sub	r2, r0, #1
    84e0:	add	r1, r1, #1
    84e4:	and	r0, r2, r0
    84e8:	tst	r0, #255	; 0xff
    84ec:	bne	84dc <count_bits@@Base+0xc>
    84f0:	mov	r0, r1
    84f4:	bx	lr

000084f8 <btbb_piconet_new@@Base>:
    84f8:	push	{r4, sl, fp, lr}
    84fc:	add	fp, sp, #8
    8500:	mov	r0, #1
    8504:	movw	r1, #5660	; 0x161c
    8508:	mov	r4, #1
    850c:	bl	44c4 <calloc@plt>
    8510:	str	r4, [r0]
    8514:	pop	{r4, sl, fp, pc}

00008518 <btbb_piconet_ref@@Base>:
    8518:	ldr	r1, [r0]
    851c:	add	r1, r1, #1
    8520:	str	r1, [r0]
    8524:	bx	lr

00008528 <btbb_piconet_unref@@Base>:
    8528:	ldr	r1, [r0]
    852c:	subs	r1, r1, #1
    8530:	str	r1, [r0]
    8534:	bxne	lr
    8538:	b	4548 <free@plt>

0000853c <btbb_init_survey@@Base>:
    853c:	ldr	r0, [pc, #16]	; 8554 <btbb_init_survey@@Base+0x18>
    8540:	mov	r1, #1
    8544:	add	r0, pc, r0
    8548:	strb	r1, [r0]
    854c:	mov	r0, #0
    8550:	bx	lr
    8554:	andeq	r1, r2, r4, lsl #24

00008558 <btbb_init_piconet@@Base>:
    8558:	str	r1, [r0, #24]
    855c:	ldr	r1, [r0, #4]
    8560:	orr	r1, r1, #8
    8564:	str	r1, [r0, #4]
    8568:	bx	lr

0000856c <btbb_piconet_set_flag@@Base>:
    856c:	push	{fp, lr}
    8570:	mov	fp, sp
    8574:	ldr	lr, [r0, #4]
    8578:	mov	ip, #1
    857c:	cmp	r2, #0
    8580:	orr	r3, lr, ip, lsl r1
    8584:	biceq	r3, lr, ip, lsl r1
    8588:	str	r3, [r0, #4]
    858c:	pop	{fp, pc}

00008590 <btbb_piconet_get_flag@@Base>:
    8590:	ldr	r0, [r0, #4]
    8594:	mov	r2, #1
    8598:	and	r0, r0, r2, lsl r1
    859c:	cmp	r0, #0
    85a0:	movwne	r0, #1
    85a4:	bx	lr

000085a8 <btbb_piconet_set_uap@@Base>:
    85a8:	strb	r1, [r0, #28]
    85ac:	ldr	r1, [r0, #4]
    85b0:	orr	r1, r1, #4
    85b4:	str	r1, [r0, #4]
    85b8:	bx	lr

000085bc <btbb_piconet_get_uap@@Base>:
    85bc:	ldrb	r0, [r0, #28]
    85c0:	bx	lr

000085c4 <btbb_piconet_get_lap@@Base>:
    85c4:	ldr	r0, [r0, #24]
    85c8:	bx	lr

000085cc <btbb_piconet_get_nap@@Base>:
    85cc:	ldrh	r0, [r0, #30]
    85d0:	bx	lr

000085d4 <btbb_piconet_get_bdaddr@@Base>:
    85d4:	ldrb	r1, [r0, #28]
    85d8:	ldr	r2, [r0, #24]
    85dc:	orr	r2, r2, r1, lsl #24
    85e0:	ldrh	r1, [r0, #30]
    85e4:	mov	r0, r2
    85e8:	bx	lr

000085ec <btbb_piconet_get_clk_offset@@Base>:
    85ec:	movw	r1, #5648	; 0x1610
    85f0:	ldr	r0, [r0, r1]
    85f4:	bx	lr

000085f8 <btbb_piconet_set_clk_offset@@Base>:
    85f8:	movw	r2, #5648	; 0x1610
    85fc:	str	r1, [r0, r2]
    8600:	bx	lr

00008604 <btbb_piconet_set_afh_map@@Base>:
    8604:	push	{fp, lr}
    8608:	mov	fp, sp
    860c:	mov	ip, #0
    8610:	strb	ip, [r0, #22]
    8614:	b	8630 <btbb_piconet_set_afh_map@@Base+0x2c>
    8618:	ldrb	r2, [r0, #22]
    861c:	add	ip, ip, #1
    8620:	cmp	ip, #10
    8624:	add	r2, r2, lr
    8628:	strb	r2, [r0, #22]
    862c:	beq	8664 <btbb_piconet_set_afh_map@@Base+0x60>
    8630:	ldrb	r3, [r1, ip]
    8634:	add	r2, r0, ip
    8638:	mov	lr, #0
    863c:	cmp	r3, #0
    8640:	strb	r3, [r2, #12]
    8644:	beq	8618 <btbb_piconet_set_afh_map@@Base+0x14>
    8648:	mov	lr, #0
    864c:	sub	r2, r3, #1
    8650:	add	lr, lr, #1
    8654:	and	r3, r2, r3
    8658:	tst	r3, #255	; 0xff
    865c:	bne	864c <btbb_piconet_set_afh_map@@Base+0x48>
    8660:	b	8618 <btbb_piconet_set_afh_map@@Base+0x14>
    8664:	ldrb	r1, [r0, #4]
    8668:	tst	r1, #4
    866c:	popeq	{fp, pc}
    8670:	pop	{fp, lr}
    8674:	b	8678 <get_hop_pattern@@Base>

00008678 <get_hop_pattern@@Base>:
    8678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    867c:	add	fp, sp, #28
    8680:	sub	sp, sp, #20
    8684:	mov	r5, r0
    8688:	ldrb	r0, [r0, #28]
    868c:	movw	r7, #16653	; 0x410d
    8690:	ldr	r1, [r5, #24]
    8694:	ldr	r2, [r5, #4]
    8698:	movt	r7, #274	; 0x112
    869c:	orr	r6, r1, r0, lsl #24
    86a0:	ldrb	r0, [r5, #22]
    86a4:	str	r6, [sp, #8]
    86a8:	ubfx	r2, r2, #11, #1
    86ac:	orr	r8, r0, r2, lsl #7
    86b0:	str	r8, [sp, #12]
    86b4:	ldr	r0, [pc, #1184]	; 8b5c <get_hop_pattern@@Base+0x4e4>
    86b8:	ldr	r0, [pc, r0]
    86bc:	cmp	r0, #0
    86c0:	beq	87c0 <get_hop_pattern@@Base+0x148>
    86c4:	and	r2, r6, #-16777216	; 0xff000000
    86c8:	and	r3, r1, #16711680	; 0xff0000
    86cc:	ldr	r9, [r0, #12]
    86d0:	add	r2, r2, r7
    86d4:	add	r2, r2, r3
    86d8:	and	r3, r1, #65280	; 0xff00
    86dc:	add	r2, r2, r3
    86e0:	movw	r3, #48883	; 0xbef3
    86e4:	uxtab	r1, r2, r1
    86e8:	movw	r2, #63341	; 0xf76d
    86ec:	movt	r3, #65261	; 0xfeed
    86f0:	movt	r2, #7
    86f4:	eor	r1, r1, r2
    86f8:	movw	r2, #47814	; 0xbac6
    86fc:	movt	r2, #40777	; 0x9f49
    8700:	sub	r3, r3, r1
    8704:	sub	r2, r2, r1
    8708:	eor	r2, r2, r1, lsl #8
    870c:	sub	r3, r3, r2
    8710:	sub	r1, r1, r2
    8714:	eor	r3, r3, r2, lsr #13
    8718:	sub	r1, r1, r3
    871c:	sub	r2, r2, r3
    8720:	eor	r1, r1, r3, lsr #12
    8724:	sub	r2, r2, r1
    8728:	sub	r3, r3, r1
    872c:	eor	r2, r2, r1, lsl #16
    8730:	sub	r3, r3, r2
    8734:	sub	r1, r1, r2
    8738:	eor	r3, r3, r2, lsr #5
    873c:	sub	r1, r1, r3
    8740:	sub	r2, r2, r3
    8744:	eor	r1, r1, r3, lsr #3
    8748:	sub	r2, r2, r1
    874c:	eor	r2, r2, r1, lsl #10
    8750:	sub	r1, r3, r1
    8754:	sub	r1, r1, r2
    8758:	eor	r1, r1, r2, lsr #15
    875c:	ldm	r9, {r0, r2}
    8760:	sub	r2, r2, #1
    8764:	and	r1, r1, r2
    8768:	add	r1, r1, r1, lsl #1
    876c:	ldr	r0, [r0, r1, lsl #2]
    8770:	cmp	r0, #0
    8774:	beq	87c0 <get_hop_pattern@@Base+0x148>
    8778:	ldr	r1, [r9, #20]
    877c:	add	r4, sp, #8
    8780:	sub	sl, r0, r1
    8784:	ldr	r0, [sl, #36]	; 0x24
    8788:	cmp	r0, #4
    878c:	bne	87a8 <get_hop_pattern@@Base+0x130>
    8790:	ldr	r0, [sl, #32]
    8794:	mov	r1, r4
    8798:	mov	r2, #4
    879c:	bl	4680 <bcmp@plt>
    87a0:	cmp	r0, #0
    87a4:	beq	8b28 <get_hop_pattern@@Base+0x4b0>
    87a8:	ldr	r0, [sl, #28]
    87ac:	cmp	r0, #0
    87b0:	beq	87c0 <get_hop_pattern@@Base+0x148>
    87b4:	ldr	r1, [r9, #20]
    87b8:	sub	sl, r0, r1
    87bc:	b	8784 <get_hop_pattern@@Base+0x10c>
    87c0:	mov	r0, r5
    87c4:	bl	44dc <gen_hop_pattern@plt>
    87c8:	mov	r0, #48	; 0x30
    87cc:	bl	462c <malloc@plt>
    87d0:	mov	r4, r0
    87d4:	ldr	r0, [r5, #372]	; 0x174
    87d8:	mov	r1, #0
    87dc:	mov	r2, #4
    87e0:	str	r1, [r4, #20]
    87e4:	stm	r4, {r6, r8}
    87e8:	add	r8, r4, #12
    87ec:	str	r0, [r4, #8]
    87f0:	str	r4, [r4, #32]
    87f4:	str	r2, [r4, #36]	; 0x24
    87f8:	ldr	r0, [pc, #864]	; 8b60 <get_hop_pattern@@Base+0x4e8>
    87fc:	ldr	r0, [pc, r0]
    8800:	cmp	r0, #0
    8804:	beq	8828 <get_hop_pattern@@Base+0x1b0>
    8808:	ldr	r5, [r0, #12]
    880c:	ldr	r1, [r5, #16]
    8810:	str	r4, [r1, #8]
    8814:	ldr	r2, [r5, #20]
    8818:	sub	r1, r1, r2
    881c:	str	r1, [r4, #16]
    8820:	str	r8, [r5, #16]
    8824:	b	88b0 <get_hop_pattern@@Base+0x238>
    8828:	ldr	r0, [pc, #820]	; 8b64 <get_hop_pattern@@Base+0x4ec>
    882c:	str	r1, [r4, #16]
    8830:	add	r0, pc, r0
    8834:	str	r4, [r0]
    8838:	mov	r0, #44	; 0x2c
    883c:	bl	462c <malloc@plt>
    8840:	cmp	r0, #0
    8844:	str	r0, [r4, #12]
    8848:	beq	8b54 <get_hop_pattern@@Base+0x4dc>
    884c:	vmov.i32	q8, #0	; 0x00000000
    8850:	mov	r5, r0
    8854:	add	r0, r0, #12
    8858:	mov	r1, #32
    885c:	vst1.32	{d16-d17}, [r0]
    8860:	mov	r0, #5
    8864:	str	r1, [r5, #4]
    8868:	str	r0, [r5, #8]
    886c:	add	r0, r5, #28
    8870:	vst1.32	{d16-d17}, [r0]
    8874:	mov	r0, #12
    8878:	str	r8, [r5, #16]
    887c:	str	r0, [r5, #20]
    8880:	mov	r0, #384	; 0x180
    8884:	bl	462c <malloc@plt>
    8888:	cmp	r0, #0
    888c:	str	r0, [r5]
    8890:	beq	8b54 <get_hop_pattern@@Base+0x4dc>
    8894:	mov	r1, #0
    8898:	mov	r2, #384	; 0x180
    889c:	bl	46f8 <memset@plt>
    88a0:	movw	r0, #8161	; 0x1fe1
    88a4:	movt	r0, #40977	; 0xa011
    88a8:	str	r0, [r5, #40]	; 0x28
    88ac:	mov	r0, r4
    88b0:	ldr	r1, [r5, #12]
    88b4:	add	r1, r1, #1
    88b8:	str	r1, [r5, #12]
    88bc:	ldr	r5, [r0, #12]
    88c0:	str	r5, [r4, #12]
    88c4:	ldrb	r6, [r4, #3]
    88c8:	ldrb	r3, [r4, #2]
    88cc:	ldrb	r2, [r4, #1]
    88d0:	ldrb	r1, [r4]
    88d4:	add	r7, r7, r6, lsl #24
    88d8:	mov	r6, #0
    88dc:	add	r3, r7, r3, lsl #16
    88e0:	add	r2, r3, r2, lsl #8
    88e4:	movw	r3, #48883	; 0xbef3
    88e8:	movt	r3, #65261	; 0xfeed
    88ec:	add	r1, r2, r1
    88f0:	movw	r2, #63341	; 0xf76d
    88f4:	movt	r2, #7
    88f8:	eor	r1, r1, r2
    88fc:	movw	r2, #47814	; 0xbac6
    8900:	movt	r2, #40777	; 0x9f49
    8904:	sub	r3, r3, r1
    8908:	sub	r2, r2, r1
    890c:	eor	r2, r2, r1, lsl #8
    8910:	sub	r3, r3, r2
    8914:	sub	r1, r1, r2
    8918:	eor	r3, r3, r2, lsr #13
    891c:	sub	r1, r1, r3
    8920:	sub	r2, r2, r3
    8924:	eor	r1, r1, r3, lsr #12
    8928:	sub	r2, r2, r1
    892c:	sub	r3, r3, r1
    8930:	eor	r2, r2, r1, lsl #16
    8934:	sub	r3, r3, r2
    8938:	sub	r1, r1, r2
    893c:	eor	r3, r3, r2, lsr #5
    8940:	sub	r1, r1, r3
    8944:	sub	r2, r2, r3
    8948:	eor	r1, r1, r3, lsr #3
    894c:	sub	r2, r2, r1
    8950:	eor	r2, r2, r1, lsl #10
    8954:	sub	r1, r3, r1
    8958:	sub	r1, r1, r2
    895c:	eor	r1, r1, r2, lsr #15
    8960:	str	r1, [r4, #40]	; 0x28
    8964:	ldr	r2, [r0, #12]
    8968:	ldm	r2, {r0, r2}
    896c:	sub	r2, r2, #1
    8970:	and	r1, r1, r2
    8974:	add	r2, r1, r1, lsl #1
    8978:	mov	r3, r0
    897c:	add	r0, r0, r2, lsl #2
    8980:	ldr	r7, [r3, r2, lsl #2]!
    8984:	mov	r2, #10
    8988:	ldr	r1, [r3, #4]
    898c:	cmp	r7, #0
    8990:	add	r1, r1, #1
    8994:	str	r1, [r3, #4]
    8998:	str	r6, [r4, #24]
    899c:	str	r7, [r4, #28]
    89a0:	strne	r8, [r7, #12]
    89a4:	str	r8, [r3]
    89a8:	ldr	r0, [r0, #8]
    89ac:	add	r0, r0, r0, lsl #2
    89b0:	add	r0, r2, r0, lsl #1
    89b4:	cmp	r1, r0
    89b8:	bcc	8b3c <get_hop_pattern@@Base+0x4c4>
    89bc:	ldr	r0, [r5, #36]	; 0x24
    89c0:	cmp	r0, #1
    89c4:	beq	8b3c <get_hop_pattern@@Base+0x4c4>
    89c8:	ldr	r0, [r5, #4]
    89cc:	str	r8, [sp]
    89d0:	add	r0, r0, r0, lsl #1
    89d4:	lsl	r0, r0, #3
    89d8:	bl	462c <malloc@plt>
    89dc:	cmp	r0, #0
    89e0:	beq	8b54 <get_hop_pattern@@Base+0x4dc>
    89e4:	mov	r9, r0
    89e8:	ldr	r0, [r5, #4]
    89ec:	mov	r1, #0
    89f0:	mov	sl, #0
    89f4:	add	r0, r0, r0, lsl #1
    89f8:	lsl	r2, r0, #3
    89fc:	mov	r0, r9
    8a00:	bl	46f8 <memset@plt>
    8a04:	str	sl, [r5, #28]
    8a08:	mvn	r2, #0
    8a0c:	mov	r6, #1
    8a10:	ldr	r0, [r5]
    8a14:	str	r0, [sp, #4]
    8a18:	ldmib	r5, {r0, r1, r7}
    8a1c:	add	r1, r1, #1
    8a20:	lsr	r3, r7, r1
    8a24:	add	r2, r2, r0, lsl #1
    8a28:	tst	r2, r7
    8a2c:	addne	r3, r6, r7, lsr r1
    8a30:	cmp	r0, #0
    8a34:	str	r3, [r5, #24]
    8a38:	beq	8ad0 <get_hop_pattern@@Base+0x458>
    8a3c:	mov	ip, r5
    8a40:	mov	r6, #0
    8a44:	mov	lr, #0
    8a48:	b	8a58 <get_hop_pattern@@Base+0x3e0>
    8a4c:	add	lr, lr, #1
    8a50:	cmp	lr, r0
    8a54:	beq	8ad0 <get_hop_pattern@@Base+0x458>
    8a58:	ldr	r4, [sp, #4]
    8a5c:	add	r1, lr, lr, lsl #1
    8a60:	ldr	r5, [r4, r1, lsl #2]
    8a64:	cmp	r5, #0
    8a68:	bne	8a94 <get_hop_pattern@@Base+0x41c>
    8a6c:	b	8a4c <get_hop_pattern@@Base+0x3d4>
    8a70:	str	sl, [r5, #12]
    8a74:	ldr	r4, [r1]
    8a78:	cmp	r4, #0
    8a7c:	str	r4, [r5, #16]
    8a80:	strne	r5, [r4, #12]
    8a84:	str	r5, [r1]
    8a88:	cmp	r7, #0
    8a8c:	mov	r5, r7
    8a90:	beq	8a4c <get_hop_pattern@@Base+0x3d4>
    8a94:	ldr	r1, [r5, #28]
    8a98:	ldr	r7, [r5, #16]
    8a9c:	and	r1, r1, r2
    8aa0:	add	r1, r1, r1, lsl #1
    8aa4:	add	r1, r9, r1, lsl #2
    8aa8:	ldr	r4, [r1, #4]
    8aac:	add	r8, r4, #1
    8ab0:	cmp	r8, r3
    8ab4:	str	r8, [r1, #4]
    8ab8:	bls	8a70 <get_hop_pattern@@Base+0x3f8>
    8abc:	udiv	r4, r8, r3
    8ac0:	add	r6, r6, #1
    8ac4:	str	r6, [ip, #28]
    8ac8:	str	r4, [r1, #8]
    8acc:	b	8a70 <get_hop_pattern@@Base+0x3f8>
    8ad0:	ldr	r0, [sp, #4]
    8ad4:	bl	4548 <free@plt>
    8ad8:	ldr	r0, [sp]
    8adc:	ldr	r0, [r0]
    8ae0:	str	r9, [r0]
    8ae4:	ldr	r7, [r0, #28]
    8ae8:	ldmib	r0, {r1, r2, r3}
    8aec:	lsl	r1, r1, #1
    8af0:	cmp	r7, r3, lsr #1
    8af4:	str	r1, [r0, #4]
    8af8:	add	r1, r2, #1
    8afc:	str	r1, [r0, #8]
    8b00:	bls	8b44 <get_hop_pattern@@Base+0x4cc>
    8b04:	ldr	r1, [r0, #32]
    8b08:	add	r1, r1, #1
    8b0c:	cmp	r1, #2
    8b10:	str	r1, [r0, #32]
    8b14:	bcc	8b3c <get_hop_pattern@@Base+0x4c4>
    8b18:	mov	r1, #1
    8b1c:	str	r1, [r0, #36]	; 0x24
    8b20:	sub	sp, fp, #28
    8b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b28:	ldr	r0, [pc, #56]	; 8b68 <get_hop_pattern@@Base+0x4f0>
    8b2c:	add	r0, pc, r0
    8b30:	bl	4620 <puts@plt>
    8b34:	ldr	r0, [sl, #8]
    8b38:	str	r0, [r5, #372]	; 0x174
    8b3c:	sub	sp, fp, #28
    8b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b44:	mov	r1, #0
    8b48:	str	r1, [r0, #32]
    8b4c:	sub	sp, fp, #28
    8b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b54:	mvn	r0, #0
    8b58:	bl	4668 <exit@plt>
    8b5c:	muleq	r2, r4, sl
    8b60:	andeq	r1, r2, r0, asr r9
    8b64:	andeq	r1, r2, ip, lsl r9
    8b68:	andeq	sl, r0, fp, asr r1

00008b6c <btbb_piconet_get_afh_map@@Base>:
    8b6c:	add	r0, r0, #12
    8b70:	bx	lr

00008b74 <btbb_piconet_set_channel_seen@@Base>:
    8b74:	push	{fp, lr}
    8b78:	mov	fp, sp
    8b7c:	add	r2, r0, r1, lsr #3
    8b80:	and	lr, r1, #7
    8b84:	mov	ip, #1
    8b88:	mov	r1, #0
    8b8c:	ldrb	r3, [r2, #12]!
    8b90:	tst	r3, ip, lsl lr
    8b94:	beq	8ba0 <btbb_piconet_set_channel_seen@@Base+0x2c>
    8b98:	mov	r0, r1
    8b9c:	pop	{fp, pc}
    8ba0:	lsl	r1, ip, lr
    8ba4:	orr	r1, r3, r1
    8ba8:	strb	r1, [r2]
    8bac:	ldrb	r1, [r0, #22]
    8bb0:	add	r1, r1, #1
    8bb4:	strb	r1, [r0, #22]
    8bb8:	mov	r1, #1
    8bbc:	mov	r0, r1
    8bc0:	pop	{fp, pc}

00008bc4 <btbb_piconet_clear_channel_seen@@Base>:
    8bc4:	push	{fp, lr}
    8bc8:	mov	fp, sp
    8bcc:	mov	lr, r0
    8bd0:	and	ip, r1, #7
    8bd4:	mov	r0, #1
    8bd8:	add	r1, lr, r1, lsr #3
    8bdc:	ldrb	r3, [r1, #12]!
    8be0:	tst	r3, r0, lsl ip
    8be4:	beq	8c04 <btbb_piconet_clear_channel_seen@@Base+0x40>
    8be8:	lsl	r2, r0, ip
    8bec:	bic	r2, r3, r2
    8bf0:	strb	r2, [r1]
    8bf4:	ldrb	r1, [lr, #22]
    8bf8:	sub	r1, r1, #1
    8bfc:	strb	r1, [lr, #22]
    8c00:	pop	{fp, pc}
    8c04:	mov	r0, #0
    8c08:	pop	{fp, pc}

00008c0c <btbb_piconet_get_channel_seen@@Base>:
    8c0c:	mov	r2, r0
    8c10:	mov	r0, #1
    8c14:	cmp	r1, #78	; 0x4e
    8c18:	bxhi	lr
    8c1c:	add	r0, r2, r1, lsr #3
    8c20:	and	r1, r1, #7
    8c24:	mov	r2, #1
    8c28:	ldrb	r0, [r0, #12]
    8c2c:	and	r0, r0, r2, lsl r1
    8c30:	cmp	r0, #0
    8c34:	movwne	r0, #1
    8c38:	bx	lr

00008c3c <precalc@@Base>:
    8c3c:	push	{r4, r5, r6, sl, fp, lr}
    8c40:	add	fp, sp, #16
    8c44:	movw	lr, #29865	; 0x74a9
    8c48:	mov	r1, #0
    8c4c:	mov	r3, #79	; 0x4f
    8c50:	mov	ip, #1
    8c54:	mov	r2, #0
    8c58:	movt	lr, #53092	; 0xcf64
    8c5c:	b	8c78 <precalc@@Base+0x3c>
    8c60:	mov	r5, r1
    8c64:	add	r5, r0, r5, lsl #2
    8c68:	str	r4, [r5, #56]	; 0x38
    8c6c:	add	r1, r1, #1
    8c70:	cmp	r1, #79	; 0x4f
    8c74:	beq	8cbc <precalc@@Base+0x80>
    8c78:	lsl	r4, r1, #1
    8c7c:	uxtb	r4, r4
    8c80:	umull	r5, r6, r4, lr
    8c84:	lsr	r5, r6, #6
    8c88:	mls	r4, r5, r3, r4
    8c8c:	ldrb	r5, [r0, #5]
    8c90:	tst	r5, #8
    8c94:	beq	8c60 <precalc@@Base+0x24>
    8c98:	add	r5, r0, r4, lsr #3
    8c9c:	and	r6, r4, #7
    8ca0:	ldrb	r5, [r5, #12]
    8ca4:	tst	r5, ip, lsl r6
    8ca8:	beq	8c6c <precalc@@Base+0x30>
    8cac:	add	r6, r2, #1
    8cb0:	mov	r5, r2
    8cb4:	mov	r2, r6
    8cb8:	b	8c64 <precalc@@Base+0x28>
    8cbc:	pop	{r4, r5, r6, sl, fp, pc}

00008cc0 <address_precalc@@Base>:
    8cc0:	push	{r4, r5, fp, lr}
    8cc4:	add	fp, sp, #8
    8cc8:	ubfx	r2, r0, #10, #9
    8ccc:	mov	ip, #8
    8cd0:	mov	lr, #16
    8cd4:	and	r4, r0, #1
    8cd8:	str	r2, [r1, #52]	; 0x34
    8cdc:	ubfx	r2, r0, #19, #4
    8ce0:	and	r3, lr, r0, asr #4
    8ce4:	str	r2, [r1, #36]	; 0x24
    8ce8:	ubfx	r2, r0, #23, #5
    8cec:	str	r2, [r1, #44]	; 0x2c
    8cf0:	and	r2, ip, r0, asr #3
    8cf4:	orr	r2, r2, r4
    8cf8:	orr	r2, r2, r3
    8cfc:	mov	r3, #4
    8d00:	and	r4, r3, r0, asr #2
    8d04:	and	r3, r3, r0, asr #3
    8d08:	orr	r2, r2, r4
    8d0c:	mov	r4, #2
    8d10:	and	r5, r4, r0, asr #1
    8d14:	orr	r2, r2, r5
    8d18:	mov	r5, #64	; 0x40
    8d1c:	str	r2, [r1, #48]	; 0x30
    8d20:	mov	r2, #32
    8d24:	and	r5, r5, r0, lsr #7
    8d28:	and	r2, r2, r0, lsr #6
    8d2c:	orr	r2, r5, r2
    8d30:	and	r5, lr, r0, lsr #5
    8d34:	orr	r2, r2, r5
    8d38:	and	r5, ip, r0, asr #4
    8d3c:	orr	r2, r2, r5
    8d40:	orr	r2, r2, r3
    8d44:	and	r3, r4, r0, asr #2
    8d48:	orr	r2, r2, r3
    8d4c:	mov	r3, #1
    8d50:	and	r0, r3, r0, asr #1
    8d54:	orr	r0, r2, r0
    8d58:	str	r0, [r1, #40]	; 0x28
    8d5c:	pop	{r4, r5, fp, pc}

00008d60 <perm5@@Base>:
    8d60:	push	{r4, r5, r6, sl, fp, lr}
    8d64:	add	fp, sp, #16
    8d68:	sub	sp, sp, #76	; 0x4c
    8d6c:	add	r3, pc, #268	; 0x10c
    8d70:	vdup.32	q9, r1
    8d74:	vdup.32	q12, r2
    8d78:	vdup.32	q13, r0
    8d7c:	vmov.i32	q11, #1	; 0x00000001
    8d80:	mov	ip, sp
    8d84:	and	r1, r1, #1
    8d88:	and	r0, r0, #1
    8d8c:	vld1.64	{d16-d17}, [r3 :128]
    8d90:	add	r3, pc, #248	; 0xf8
    8d94:	vld1.64	{d20-d21}, [r3 :128]
    8d98:	add	r3, ip, #40	; 0x28
    8d9c:	vneg.s32	q8, q8
    8da0:	vneg.s32	q10, q10
    8da4:	vshl.u32	q9, q9, q8
    8da8:	vshl.u32	q10, q12, q10
    8dac:	vshl.u32	q12, q12, q8
    8db0:	vshl.u32	q8, q13, q8
    8db4:	vand	q9, q9, q11
    8db8:	vand	q10, q10, q11
    8dbc:	vand	q8, q8, q11
    8dc0:	vst1.32	{d18-d19}, [r3]
    8dc4:	add	r3, ip, #20
    8dc8:	vst1.32	{d20-d21}, [r3]
    8dcc:	vand	q10, q12, q11
    8dd0:	add	r3, ip, #4
    8dd4:	vst1.32	{d20-d21}, [r3]
    8dd8:	sub	r3, fp, #36	; 0x24
    8ddc:	str	r1, [sp, #36]	; 0x24
    8de0:	and	r1, r2, #1
    8de4:	vmov.32	r2, d19[1]
    8de8:	add	lr, r3, #4
    8dec:	str	r1, [sp]
    8df0:	mov	r1, #0
    8df4:	vst1.32	{d16-d17}, [lr]
    8df8:	str	r0, [fp, #-36]	; 0xffffffdc
    8dfc:	add	r0, ip, #48	; 0x30
    8e00:	ldr	ip, [pc, #152]	; 8ea0 <perm5@@Base+0x140>
    8e04:	ldr	lr, [pc, #152]	; 8ea4 <perm5@@Base+0x144>
    8e08:	add	ip, pc, ip
    8e0c:	add	lr, pc, lr
    8e10:	cmp	r2, #0
    8e14:	beq	8e38 <perm5@@Base+0xd8>
    8e18:	sub	r2, ip, r1, lsl #2
    8e1c:	sub	r5, lr, r1, lsl #2
    8e20:	ldr	r2, [r2, #52]	; 0x34
    8e24:	ldr	r5, [r5, #52]	; 0x34
    8e28:	ldr	r4, [r3, r2, lsl #2]
    8e2c:	ldr	r6, [r3, r5, lsl #2]
    8e30:	str	r6, [r3, r2, lsl #2]
    8e34:	str	r4, [r3, r5, lsl #2]
    8e38:	cmp	r1, #13
    8e3c:	beq	8e54 <perm5@@Base+0xf4>
    8e40:	ldr	r2, [r0, -r1, lsl #2]
    8e44:	add	r1, r1, #1
    8e48:	cmp	r2, #0
    8e4c:	bne	8e18 <perm5@@Base+0xb8>
    8e50:	b	8e38 <perm5@@Base+0xd8>
    8e54:	sub	r3, fp, #36	; 0x24
    8e58:	ldm	r3, {r0, r1, r2, r3}
    8e5c:	add	r0, r0, r1, lsl #1
    8e60:	ldr	r1, [fp, #-20]	; 0xffffffec
    8e64:	add	r0, r0, r2, lsl #2
    8e68:	add	r0, r0, r3, lsl #3
    8e6c:	add	r0, r0, r1, lsl #4
    8e70:	sub	sp, fp, #16
    8e74:	pop	{r4, r5, r6, sl, fp, pc}
    8e78:	nop	{0}
    8e7c:	nop	{0}
    8e80:	andeq	r0, r0, r1
    8e84:	andeq	r0, r0, r2
    8e88:	andeq	r0, r0, r3
    8e8c:	andeq	r0, r0, r4
    8e90:	andeq	r0, r0, r5
    8e94:	andeq	r0, r0, r6
    8e98:	andeq	r0, r0, r7
    8e9c:	andeq	r0, r0, r8
    8ea0:	andeq	r9, r0, ip, lsl sp
    8ea4:	andeq	r9, r0, r0, asr sp

00008ea8 <perm_table_init@@Base>:
    8ea8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    8eac:	add	fp, sp, #24
    8eb0:	ldr	r8, [pc, #84]	; 8f0c <perm_table_init@@Base+0x64>
    8eb4:	mov	r4, #0
    8eb8:	ldr	r8, [pc, r8]
    8ebc:	mov	r7, r8
    8ec0:	mov	r5, #0
    8ec4:	mov	r6, #0
    8ec8:	mov	r0, r4
    8ecc:	mov	r1, r5
    8ed0:	mov	r2, r6
    8ed4:	bl	4758 <perm5@plt>
    8ed8:	strb	r0, [r7, r6]
    8edc:	add	r6, r6, #1
    8ee0:	cmp	r6, #512	; 0x200
    8ee4:	bne	8ec8 <perm_table_init@@Base+0x20>
    8ee8:	add	r5, r5, #1
    8eec:	add	r7, r7, #512	; 0x200
    8ef0:	cmp	r5, #32
    8ef4:	bne	8ec4 <perm_table_init@@Base+0x1c>
    8ef8:	add	r4, r4, #1
    8efc:	add	r8, r8, #16384	; 0x4000
    8f00:	cmp	r4, #32
    8f04:	bne	8ebc <perm_table_init@@Base+0x14>
    8f08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    8f0c:	andeq	r1, r2, r8, ror #4

00008f10 <fast_perm@@Base>:
    8f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8f14:	add	fp, sp, #28
    8f18:	sub	sp, sp, #4
    8f1c:	mov	r6, r0
    8f20:	ldr	r0, [pc, #156]	; 8fc4 <fast_perm@@Base+0xb4>
    8f24:	mov	r9, r1
    8f28:	ldr	r0, [pc, r0]
    8f2c:	ldr	r0, [r0]
    8f30:	cmp	r0, #0
    8f34:	bne	8fa8 <fast_perm@@Base+0x98>
    8f38:	str	r2, [sp]
    8f3c:	mov	r7, #0
    8f40:	ldr	r8, [pc, #128]	; 8fc8 <fast_perm@@Base+0xb8>
    8f44:	ldr	r8, [pc, r8]
    8f48:	mov	sl, r8
    8f4c:	mov	r4, #0
    8f50:	mov	r5, #0
    8f54:	mov	r0, r7
    8f58:	mov	r1, r4
    8f5c:	mov	r2, r5
    8f60:	bl	4758 <perm5@plt>
    8f64:	strb	r0, [sl, r5]
    8f68:	add	r5, r5, #1
    8f6c:	cmp	r5, #512	; 0x200
    8f70:	bne	8f54 <fast_perm@@Base+0x44>
    8f74:	add	r4, r4, #1
    8f78:	add	sl, sl, #512	; 0x200
    8f7c:	cmp	r4, #32
    8f80:	bne	8f50 <fast_perm@@Base+0x40>
    8f84:	add	r7, r7, #1
    8f88:	add	r8, r8, #16384	; 0x4000
    8f8c:	cmp	r7, #32
    8f90:	bne	8f48 <fast_perm@@Base+0x38>
    8f94:	ldr	r1, [pc, #48]	; 8fcc <fast_perm@@Base+0xbc>
    8f98:	mov	r0, #1
    8f9c:	ldr	r1, [pc, r1]
    8fa0:	ldr	r2, [sp]
    8fa4:	str	r0, [r1]
    8fa8:	ldr	r0, [pc, #32]	; 8fd0 <fast_perm@@Base+0xc0>
    8fac:	ldr	r0, [pc, r0]
    8fb0:	add	r0, r0, r6, lsl #14
    8fb4:	add	r0, r0, r9, lsl #9
    8fb8:	ldrb	r0, [r0, r2]
    8fbc:	sub	sp, fp, #28
    8fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8fc4:	strdeq	r1, [r2], -ip
    8fc8:	ldrdeq	r1, [r2], -ip
    8fcc:	andeq	r1, r2, r8, lsl #3
    8fd0:	andeq	r1, r2, r4, ror r1

00008fd4 <gen_hop_pattern@@Base>:
    8fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8fd8:	add	fp, sp, #28
    8fdc:	sub	sp, sp, #52	; 0x34
    8fe0:	mov	r9, r0
    8fe4:	ldr	r0, [pc, #1124]	; 9450 <gen_hop_pattern@@Base+0x47c>
    8fe8:	add	r0, pc, r0
    8fec:	bl	4620 <puts@plt>
    8ff0:	mov	r0, #134217728	; 0x8000000
    8ff4:	bl	462c <malloc@plt>
    8ff8:	str	r0, [r9, #372]	; 0x174
    8ffc:	mov	r0, #0
    9000:	mov	r1, #79	; 0x4f
    9004:	mov	r2, #1
    9008:	mov	r4, #0
    900c:	b	9028 <gen_hop_pattern@@Base+0x54>
    9010:	mov	r3, r0
    9014:	add	r3, r9, r3, lsl #2
    9018:	str	r7, [r3, #56]	; 0x38
    901c:	add	r0, r0, #1
    9020:	cmp	r0, #79	; 0x4f
    9024:	beq	9074 <gen_hop_pattern@@Base+0xa0>
    9028:	lsl	r3, r0, #1
    902c:	movw	r7, #29865	; 0x74a9
    9030:	uxtb	r3, r3
    9034:	movt	r7, #53092	; 0xcf64
    9038:	umull	r7, r5, r3, r7
    903c:	lsr	r7, r5, #6
    9040:	mls	r7, r7, r1, r3
    9044:	ldrb	r3, [r9, #5]
    9048:	tst	r3, #8
    904c:	beq	9010 <gen_hop_pattern@@Base+0x3c>
    9050:	add	r3, r9, r7, lsr #3
    9054:	and	r5, r7, #7
    9058:	ldrb	r3, [r3, #12]
    905c:	tst	r3, r2, lsl r5
    9060:	beq	901c <gen_hop_pattern@@Base+0x48>
    9064:	add	r6, r4, #1
    9068:	mov	r3, r4
    906c:	mov	r4, r6
    9070:	b	9014 <gen_hop_pattern@@Base+0x40>
    9074:	ldr	r0, [r9, #24]
    9078:	mov	r7, #8
    907c:	ubfx	r1, r0, #10, #9
    9080:	and	r5, r0, #1
    9084:	str	r1, [r9, #52]	; 0x34
    9088:	ubfx	r1, r0, #19, #4
    908c:	str	r1, [r9, #36]	; 0x24
    9090:	ldrb	r1, [r9, #28]
    9094:	orr	r1, r0, r1, lsl #24
    9098:	ubfx	r2, r1, #23, #5
    909c:	bic	r1, r1, #-268435456	; 0xf0000000
    90a0:	and	r6, r7, r1, lsr #3
    90a4:	str	r2, [r9, #44]	; 0x2c
    90a8:	mov	r2, #16
    90ac:	and	r3, r2, r1, lsr #4
    90b0:	orr	r6, r6, r5
    90b4:	orr	r3, r6, r3
    90b8:	mov	r6, #4
    90bc:	and	r5, r6, r1, lsr #2
    90c0:	orr	r3, r3, r5
    90c4:	mov	r5, #2
    90c8:	and	r4, r5, r1, lsr #1
    90cc:	orr	r3, r3, r4
    90d0:	mov	r4, #64	; 0x40
    90d4:	str	r3, [r9, #48]	; 0x30
    90d8:	mov	r3, #32
    90dc:	and	r4, r4, r0, lsr #7
    90e0:	and	r3, r3, r0, lsr #6
    90e4:	and	r0, r2, r0, lsr #5
    90e8:	and	r2, r7, r1, lsr #4
    90ec:	orr	r3, r4, r3
    90f0:	orr	r0, r3, r0
    90f4:	mov	r3, #0
    90f8:	orr	r0, r0, r2
    90fc:	and	r2, r6, r1, lsr #3
    9100:	orr	r0, r0, r2
    9104:	and	r2, r5, r1, lsr #2
    9108:	ubfx	r1, r1, #1, #1
    910c:	mov	r5, #0
    9110:	orr	r0, r0, r2
    9114:	orr	r0, r0, r1
    9118:	mov	r1, #0
    911c:	str	r0, [r9, #40]	; 0x28
    9120:	mov	r0, #0
    9124:	ldr	r7, [pc, #808]	; 9454 <gen_hop_pattern@@Base+0x480>
    9128:	ldr	r7, [pc, r7]
    912c:	ldr	r6, [pc, #804]	; 9458 <gen_hop_pattern@@Base+0x484>
    9130:	ldr	r6, [pc, r6]
    9134:	str	r1, [sp, #40]	; 0x28
    9138:	mov	r1, #0
    913c:	str	r1, [fp, #-36]	; 0xffffffdc
    9140:	str	r9, [sp, #20]
    9144:	b	9158 <gen_hop_pattern@@Base+0x184>
    9148:	ldr	r0, [sp]
    914c:	add	r0, r0, #1
    9150:	cmp	r0, #4
    9154:	beq	943c <gen_hop_pattern@@Base+0x468>
    9158:	mov	r1, #0
    915c:	str	r0, [sp]
    9160:	b	9174 <gen_hop_pattern@@Base+0x1a0>
    9164:	ldr	r1, [sp, #4]
    9168:	add	r1, r1, #1
    916c:	cmp	r1, #32
    9170:	beq	9148 <gen_hop_pattern@@Base+0x174>
    9174:	ldr	r0, [r9, #44]	; 0x2c
    9178:	str	r1, [sp, #4]
    917c:	eor	r0, r0, r1
    9180:	mov	r1, #0
    9184:	str	r0, [sp, #28]
    9188:	b	919c <gen_hop_pattern@@Base+0x1c8>
    918c:	ldr	r1, [sp, #8]
    9190:	add	r1, r1, #1
    9194:	cmp	r1, #32
    9198:	beq	9164 <gen_hop_pattern@@Base+0x190>
    919c:	ldr	r0, [r9, #48]	; 0x30
    91a0:	str	r1, [sp, #8]
    91a4:	eor	r0, r0, r1
    91a8:	mov	r1, #0
    91ac:	str	r0, [sp, #36]	; 0x24
    91b0:	eor	r0, r0, #31
    91b4:	str	r0, [sp, #32]
    91b8:	b	9204 <gen_hop_pattern@@Base+0x230>
    91bc:	ldr	r5, [sp, #16]
    91c0:	movw	r0, #29865	; 0x74a9
    91c4:	movt	r0, #53092	; 0xcf64
    91c8:	add	r5, r5, #16
    91cc:	umull	r0, r1, r5, r0
    91d0:	lsr	r0, r1, #6
    91d4:	mov	r1, #79	; 0x4f
    91d8:	mls	r0, r0, r1, r5
    91dc:	ldrb	r1, [r9, #22]
    91e0:	str	r0, [fp, #-36]	; 0xffffffdc
    91e4:	uxtb	r0, r0
    91e8:	udiv	r2, r0, r1
    91ec:	mls	r0, r2, r1, r0
    91f0:	str	r0, [sp, #40]	; 0x28
    91f4:	ldr	r1, [sp, #12]
    91f8:	add	r1, r1, #1
    91fc:	cmp	r1, #512	; 0x200
    9200:	beq	918c <gen_hop_pattern@@Base+0x1b8>
    9204:	ldr	r0, [r9, #52]	; 0x34
    9208:	str	r5, [sp, #16]
    920c:	mov	sl, #0
    9210:	str	r1, [sp, #12]
    9214:	eor	r5, r0, r1
    9218:	str	r5, [sp, #24]
    921c:	b	9264 <gen_hop_pattern@@Base+0x290>
    9220:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9224:	add	r0, r0, r1
    9228:	movw	r1, #29865	; 0x74a9
    922c:	movt	r1, #53092	; 0xcf64
    9230:	umull	r1, r2, r0, r1
    9234:	lsr	r1, r2, #6
    9238:	mov	r2, #79	; 0x4f
    923c:	mls	r0, r1, r2, r0
    9240:	add	r0, r9, r0, lsl #2
    9244:	ldr	r1, [r9, #372]	; 0x174
    9248:	add	sl, sl, #1
    924c:	cmp	sl, #32
    9250:	ldr	r0, [r0, #56]	; 0x38
    9254:	add	r1, r3, r1
    9258:	add	r3, r3, #2
    925c:	strb	r0, [r1, #1]
    9260:	beq	91bc <gen_hop_pattern@@Base+0x1e8>
    9264:	ldr	r0, [sp, #28]
    9268:	add	r0, sl, r0
    926c:	asr	r1, r0, #31
    9270:	add	r1, r0, r1, lsr #27
    9274:	bic	r1, r1, #31
    9278:	sub	r0, r0, r1
    927c:	ldr	r1, [r9, #36]	; 0x24
    9280:	eor	r8, r0, r1
    9284:	ldr	r0, [r7]
    9288:	cmp	r0, #0
    928c:	bne	930c <gen_hop_pattern@@Base+0x338>
    9290:	mov	r5, #0
    9294:	mov	r9, r6
    9298:	str	r3, [fp, #-32]	; 0xffffffe0
    929c:	mov	r4, r9
    92a0:	mov	r6, #0
    92a4:	mov	r7, #0
    92a8:	mov	r0, r5
    92ac:	mov	r1, r6
    92b0:	mov	r2, r7
    92b4:	bl	4758 <perm5@plt>
    92b8:	strb	r0, [r4, r7]
    92bc:	add	r7, r7, #1
    92c0:	cmp	r7, #512	; 0x200
    92c4:	bne	92a8 <gen_hop_pattern@@Base+0x2d4>
    92c8:	add	r6, r6, #1
    92cc:	add	r4, r4, #512	; 0x200
    92d0:	cmp	r6, #32
    92d4:	bne	92a4 <gen_hop_pattern@@Base+0x2d0>
    92d8:	add	r5, r5, #1
    92dc:	add	r9, r9, #16384	; 0x4000
    92e0:	cmp	r5, #32
    92e4:	bne	929c <gen_hop_pattern@@Base+0x2c8>
    92e8:	ldr	r7, [pc, #364]	; 945c <gen_hop_pattern@@Base+0x488>
    92ec:	mov	r0, #1
    92f0:	ldr	r7, [pc, r7]
    92f4:	ldr	r9, [sp, #20]
    92f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    92fc:	str	r0, [r7]
    9300:	ldr	r6, [pc, #344]	; 9460 <gen_hop_pattern@@Base+0x48c>
    9304:	ldr	r6, [pc, r6]
    9308:	ldr	r5, [sp, #24]
    930c:	ldr	r0, [sp, #36]	; 0x24
    9310:	add	r8, r6, r8, lsl #14
    9314:	ldr	r1, [r9, #40]	; 0x28
    9318:	add	r0, r8, r0, lsl #9
    931c:	ldrb	r0, [r0, r5]
    9320:	add	r0, r1, r0
    9324:	ldrb	r1, [r9, #5]
    9328:	tst	r1, #8
    932c:	bne	9354 <gen_hop_pattern@@Base+0x380>
    9330:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9334:	add	r0, r0, r1
    9338:	movw	r1, #29865	; 0x74a9
    933c:	movt	r1, #53092	; 0xcf64
    9340:	umull	r1, r2, r0, r1
    9344:	lsr	r1, r2, #6
    9348:	mov	r2, #79	; 0x4f
    934c:	mls	r0, r1, r2, r0
    9350:	b	9368 <gen_hop_pattern@@Base+0x394>
    9354:	ldr	r1, [sp, #40]	; 0x28
    9358:	add	r0, r0, r1
    935c:	ldrb	r1, [r9, #22]
    9360:	udiv	r2, r0, r1
    9364:	mls	r0, r2, r1, r0
    9368:	add	r0, r9, r0, lsl #2
    936c:	ldr	r1, [r9, #372]	; 0x174
    9370:	ldr	r0, [r0, #56]	; 0x38
    9374:	strb	r0, [r1, r3]
    9378:	ldr	r0, [r7]
    937c:	cmp	r0, #0
    9380:	bne	9400 <gen_hop_pattern@@Base+0x42c>
    9384:	mov	r5, #0
    9388:	mov	r9, r6
    938c:	str	r3, [fp, #-32]	; 0xffffffe0
    9390:	mov	r4, r9
    9394:	mov	r6, #0
    9398:	mov	r7, #0
    939c:	mov	r0, r5
    93a0:	mov	r1, r6
    93a4:	mov	r2, r7
    93a8:	bl	4758 <perm5@plt>
    93ac:	strb	r0, [r4, r7]
    93b0:	add	r7, r7, #1
    93b4:	cmp	r7, #512	; 0x200
    93b8:	bne	939c <gen_hop_pattern@@Base+0x3c8>
    93bc:	add	r6, r6, #1
    93c0:	add	r4, r4, #512	; 0x200
    93c4:	cmp	r6, #32
    93c8:	bne	9398 <gen_hop_pattern@@Base+0x3c4>
    93cc:	add	r5, r5, #1
    93d0:	add	r9, r9, #16384	; 0x4000
    93d4:	cmp	r5, #32
    93d8:	bne	9390 <gen_hop_pattern@@Base+0x3bc>
    93dc:	ldr	r7, [pc, #128]	; 9464 <gen_hop_pattern@@Base+0x490>
    93e0:	mov	r0, #1
    93e4:	ldr	r7, [pc, r7]
    93e8:	ldr	r9, [sp, #20]
    93ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    93f0:	str	r0, [r7]
    93f4:	ldr	r6, [pc, #108]	; 9468 <gen_hop_pattern@@Base+0x494>
    93f8:	ldr	r6, [pc, r6]
    93fc:	ldr	r5, [sp, #24]
    9400:	ldr	r0, [sp, #32]
    9404:	ldr	r1, [r9, #40]	; 0x28
    9408:	add	r0, r8, r0, lsl #9
    940c:	ldrb	r0, [r0, r5]
    9410:	add	r0, r0, r1
    9414:	ldrb	r1, [r9, #5]
    9418:	add	r0, r0, #32
    941c:	tst	r1, #8
    9420:	beq	9220 <gen_hop_pattern@@Base+0x24c>
    9424:	ldr	r1, [sp, #40]	; 0x28
    9428:	add	r0, r0, r1
    942c:	ldrb	r1, [r9, #22]
    9430:	udiv	r2, r0, r1
    9434:	mls	r0, r2, r1, r0
    9438:	b	9240 <gen_hop_pattern@@Base+0x26c>
    943c:	ldr	r0, [pc, #40]	; 946c <gen_hop_pattern@@Base+0x498>
    9440:	add	r0, pc, r0
    9444:	sub	sp, fp, #28
    9448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    944c:	b	4620 <puts@plt>
    9450:	andeq	r9, r0, r1, asr #25
    9454:	strdeq	r0, [r2], -ip
    9458:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
    945c:	andeq	r0, r2, r4, lsr lr
    9460:	andeq	r0, r2, ip, lsl lr
    9464:	andeq	r0, r2, r0, asr #26
    9468:	andeq	r0, r2, r8, lsr #26
    946c:	muleq	r0, r1, r8

00009470 <single_hop@@Base>:
    9470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9474:	add	fp, sp, #28
    9478:	sub	sp, sp, #20
    947c:	mov	r8, r1
    9480:	mov	r5, r0
    9484:	ldr	r0, [r1, #36]	; 0x24
    9488:	ldr	r1, [r1, #44]	; 0x2c
    948c:	movw	ip, #65520	; 0xfff0
    9490:	ldr	r2, [r8, #48]	; 0x30
    9494:	ldr	r3, [r8, #52]	; 0x34
    9498:	ubfx	r4, r5, #1, #1
    949c:	movt	ip, #511	; 0x1ff
    94a0:	rsb	r7, r4, r4, lsl #5
    94a4:	eor	r1, r1, r5, lsr #21
    94a8:	eor	r2, r2, r5, lsr #16
    94ac:	eor	r3, r3, r5, lsr #7
    94b0:	add	r1, r1, r5, lsr #2
    94b4:	and	r2, r2, #31
    94b8:	bfc	r3, #9, #23
    94bc:	and	r1, r1, #31
    94c0:	eor	r7, r2, r7
    94c4:	eor	r6, r1, r0
    94c8:	ldr	r0, [pc, #244]	; 95c4 <single_hop@@Base+0x154>
    94cc:	ldr	r0, [pc, r0]
    94d0:	ldr	r0, [r0]
    94d4:	cmp	r0, #0
    94d8:	bne	9568 <single_hop@@Base+0xf8>
    94dc:	add	r0, sp, #8
    94e0:	str	r6, [sp, #4]
    94e4:	mov	r6, #0
    94e8:	stm	r0, {r3, r4, r7}
    94ec:	ldr	sl, [pc, #212]	; 95c8 <single_hop@@Base+0x158>
    94f0:	ldr	sl, [pc, sl]
    94f4:	mov	r9, sl
    94f8:	mov	r7, #0
    94fc:	mov	r4, #0
    9500:	mov	r0, r6
    9504:	mov	r1, r7
    9508:	mov	r2, r4
    950c:	bl	4758 <perm5@plt>
    9510:	strb	r0, [r9, r4]
    9514:	add	r4, r4, #1
    9518:	cmp	r4, #512	; 0x200
    951c:	bne	9500 <single_hop@@Base+0x90>
    9520:	add	r7, r7, #1
    9524:	add	r9, r9, #512	; 0x200
    9528:	cmp	r7, #32
    952c:	bne	94fc <single_hop@@Base+0x8c>
    9530:	add	r6, r6, #1
    9534:	add	sl, sl, #16384	; 0x4000
    9538:	cmp	r6, #32
    953c:	bne	94f4 <single_hop@@Base+0x84>
    9540:	ldr	r1, [pc, #132]	; 95cc <single_hop@@Base+0x15c>
    9544:	movw	r6, #65520	; 0xfff0
    9548:	add	r7, sp, #8
    954c:	mov	r0, #1
    9550:	movt	r6, #511	; 0x1ff
    9554:	mov	ip, r6
    9558:	ldr	r1, [pc, r1]
    955c:	ldm	r7, {r3, r4, r7}
    9560:	ldr	r6, [sp, #4]
    9564:	str	r0, [r1]
    9568:	ldr	r2, [pc, #96]	; 95d0 <single_hop@@Base+0x160>
    956c:	and	r1, ip, r5, lsr #3
    9570:	lsl	r0, r4, #5
    9574:	ldr	r2, [pc, r2]
    9578:	add	r2, r2, r6, lsl #14
    957c:	add	r2, r2, r7, lsl #9
    9580:	ldrb	r7, [r8, #5]
    9584:	ldrb	r3, [r2, r3]
    9588:	mov	r2, #79	; 0x4f
    958c:	tst	r7, #8
    9590:	ldrbne	r2, [r8, #22]
    9594:	add	r0, r0, r3
    9598:	udiv	r7, r1, r2
    959c:	mls	r1, r7, r2, r1
    95a0:	add	r0, r0, r1
    95a4:	ldr	r1, [r8, #40]	; 0x28
    95a8:	add	r0, r0, r1
    95ac:	udiv	r1, r0, r2
    95b0:	mls	r0, r1, r2, r0
    95b4:	add	r0, r8, r0, lsl #2
    95b8:	ldrb	r0, [r0, #56]	; 0x38
    95bc:	sub	sp, fp, #28
    95c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    95c4:	andeq	r0, r2, r8, asr ip
    95c8:	andeq	r0, r2, r0, lsr ip
    95cc:	andeq	r0, r2, ip, asr #23
    95d0:	andeq	r0, r2, ip, lsr #23

000095d4 <hop@@Base>:
    95d4:	ldr	r1, [r1, #372]	; 0x174
    95d8:	ldrb	r0, [r1, r0]
    95dc:	bx	lr

000095e0 <btbb_init_hop_reversal@@Base>:
    95e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    95e4:	add	fp, sp, #24
    95e8:	mov	r8, r0
    95ec:	mov	r0, r1
    95f0:	mov	r9, r1
    95f4:	bl	4614 <get_hop_pattern@plt>
    95f8:	movw	r0, #15728	; 0x3d70
    95fc:	cmp	r8, #0
    9600:	movt	r0, #10
    9604:	movweq	r0, #15760	; 0x3d90
    9608:	movteq	r0, #3
    960c:	bl	462c <malloc@plt>
    9610:	movw	r1, #4648	; 0x1228
    9614:	mov	r7, r9
    9618:	movw	ip, #34079	; 0x851f
    961c:	mov	lr, #25
    9620:	ldrb	r2, [r7, r1]!
    9624:	movw	r1, #60920	; 0xedf8
    9628:	movt	ip, #20971	; 0x51eb
    962c:	movt	r1, #65535	; 0xffff
    9630:	str	r0, [r7, r1]
    9634:	movw	r1, #61260	; 0xef4c
    9638:	movt	r1, #65535	; 0xffff
    963c:	ldr	r3, [r7, r1]
    9640:	ldr	r1, [r7, #1000]	; 0x3e8
    9644:	ldr	r7, [r7, #1004]	; 0x3ec
    9648:	add	r1, r7, r1
    964c:	and	r5, r1, #63	; 0x3f
    9650:	mov	r1, #0
    9654:	b	9674 <btbb_init_hop_reversal@@Base+0x94>
    9658:	uxtb	r4, r6
    965c:	cmp	r4, r2
    9660:	streq	r5, [r0, r1, lsl #2]
    9664:	add	r5, r5, #64	; 0x40
    9668:	addeq	r1, r1, #1
    966c:	cmp	r5, #134217728	; 0x8000000
    9670:	bcs	969c <btbb_init_hop_reversal@@Base+0xbc>
    9674:	ldr	r7, [r9, #8]
    9678:	ldrb	r6, [r3, r5]
    967c:	cmp	r7, #0
    9680:	beq	9658 <btbb_init_hop_reversal@@Base+0x78>
    9684:	add	r6, r6, #24
    9688:	umull	r7, r4, r6, ip
    968c:	lsr	r4, r4, #3
    9690:	mls	r4, r4, lr, r6
    9694:	add	r6, r4, #26
    9698:	b	9658 <btbb_init_hop_reversal@@Base+0x78>
    969c:	mov	r0, #0
    96a0:	movw	r3, #56799	; 0xdddf
    96a4:	cmp	r8, #0
    96a8:	str	r0, [r9, #388]	; 0x184
    96ac:	str	r1, [r9, #376]	; 0x178
    96b0:	movt	r3, #65535	; 0xffff
    96b4:	mov	r0, #8704	; 0x2200
    96b8:	movweq	r0, #512	; 0x200
    96bc:	ldr	r2, [r9, #4]
    96c0:	and	r2, r2, r3
    96c4:	orr	r0, r2, r0
    96c8:	str	r0, [r9, #4]
    96cc:	ldr	r0, [pc, #12]	; 96e0 <btbb_init_hop_reversal@@Base+0x100>
    96d0:	add	r0, pc, r0
    96d4:	bl	4500 <printf@plt>
    96d8:	ldr	r0, [r9, #376]	; 0x178
    96dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    96e0:	andeq	r9, r0, r4, asr #9

000096e4 <try_hop@@Base>:
    96e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    96e8:	add	fp, sp, #28
    96ec:	sub	sp, sp, #4
    96f0:	ldrb	r8, [r1, #28]
    96f4:	mov	r4, r1
    96f8:	mov	r5, r0
    96fc:	bl	45fc <btbb_decode@plt>
    9700:	ldr	r6, [r4, #4]
    9704:	movw	r0, #4648	; 0x1228
    9708:	add	r7, r4, r0
    970c:	tst	r6, #512	; 0x200
    9710:	bne	97c4 <try_hop@@Base+0xe0>
    9714:	mov	r0, r5
    9718:	mov	r1, r4
    971c:	bl	4578 <btbb_uap_from_header@plt>
    9720:	tst	r6, #16
    9724:	bne	980c <try_hop@@Base+0x128>
    9728:	cmp	r0, #0
    972c:	beq	9834 <try_hop@@Base+0x150>
    9730:	ldrb	r0, [r4, #28]
    9734:	cmp	r8, r0
    9738:	bne	9850 <try_hop@@Base+0x16c>
    973c:	mov	r0, r4
    9740:	bl	4614 <get_hop_pattern@plt>
    9744:	movw	r0, #15760	; 0x3d90
    9748:	movt	r0, #3
    974c:	bl	462c <malloc@plt>
    9750:	str	r0, [r4, #32]
    9754:	movw	ip, #34079	; 0x851f
    9758:	mov	lr, #25
    975c:	ldr	r1, [r7, #1000]	; 0x3e8
    9760:	ldr	r2, [r7, #1004]	; 0x3ec
    9764:	ldr	r9, [r4, #8]
    9768:	ldr	sl, [r4, #372]	; 0x174
    976c:	ldrb	r7, [r7]
    9770:	movt	ip, #20971	; 0x51eb
    9774:	add	r1, r2, r1
    9778:	and	r2, r1, #63	; 0x3f
    977c:	mov	r1, #0
    9780:	b	97a0 <try_hop@@Base+0xbc>
    9784:	uxtb	r3, r6
    9788:	cmp	r3, r7
    978c:	streq	r2, [r0, r1, lsl #2]
    9790:	add	r2, r2, #64	; 0x40
    9794:	addeq	r1, r1, #1
    9798:	cmp	r2, #134217728	; 0x8000000
    979c:	bcs	9860 <try_hop@@Base+0x17c>
    97a0:	ldrb	r6, [sl, r2]
    97a4:	cmp	r9, #0
    97a8:	beq	9784 <try_hop@@Base+0xa0>
    97ac:	add	r6, r6, #24
    97b0:	umull	r3, r5, r6, ip
    97b4:	lsr	r3, r5, #3
    97b8:	mls	r3, r3, lr, r6
    97bc:	add	r6, r3, #26
    97c0:	b	9784 <try_hop@@Base+0xa0>
    97c4:	ldr	r1, [r4, #380]	; 0x17c
    97c8:	ldr	r2, [r7, #1004]	; 0x3ec
    97cc:	ldr	r3, [r5, #2816]	; 0xb00
    97d0:	add	r1, r4, r1, lsl #2
    97d4:	sub	r2, r3, r2
    97d8:	str	r2, [r1, #648]	; 0x288
    97dc:	ldr	r1, [r4, #380]	; 0x17c
    97e0:	ldrb	r2, [r5, #8]
    97e4:	add	r1, r4, r1
    97e8:	strb	r2, [r1, r0]
    97ec:	ldr	r0, [r4, #380]	; 0x17c
    97f0:	ldr	r1, [r4, #384]	; 0x180
    97f4:	add	r0, r0, #1
    97f8:	add	r1, r1, #1
    97fc:	str	r0, [r4, #380]	; 0x17c
    9800:	mov	r0, r4
    9804:	str	r1, [r4, #384]	; 0x180
    9808:	bl	4608 <btbb_winnow@plt>
    980c:	ldrb	r0, [r4, #4]
    9810:	tst	r0, #32
    9814:	beq	9834 <try_hop@@Base+0x150>
    9818:	ldr	r0, [pc, #124]	; 989c <try_hop@@Base+0x1b8>
    981c:	add	r0, pc, r0
    9820:	bl	4620 <puts@plt>
    9824:	ldr	r1, [r7, #1000]	; 0x3e8
    9828:	ldr	r0, [pc, #112]	; 98a0 <try_hop@@Base+0x1bc>
    982c:	add	r0, pc, r0
    9830:	bl	4500 <printf@plt>
    9834:	ldr	r0, [r4, #4]
    9838:	tst	r0, #4
    983c:	orreq	r0, r0, #4
    9840:	strbeq	r8, [r4, #28]
    9844:	streq	r0, [r4, #4]
    9848:	sub	sp, fp, #28
    984c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9850:	ldr	r0, [pc, #80]	; 98a8 <try_hop@@Base+0x1c4>
    9854:	add	r0, pc, r0
    9858:	bl	4620 <puts@plt>
    985c:	b	9834 <try_hop@@Base+0x150>
    9860:	mov	r0, #0
    9864:	movw	r2, #56799	; 0xdddf
    9868:	str	r0, [r4, #388]	; 0x184
    986c:	str	r1, [r4, #376]	; 0x178
    9870:	movt	r2, #65535	; 0xffff
    9874:	ldr	r0, [r4, #4]
    9878:	and	r0, r0, r2
    987c:	orr	r0, r0, #512	; 0x200
    9880:	str	r0, [r4, #4]
    9884:	ldr	r0, [pc, #24]	; 98a4 <try_hop@@Base+0x1c0>
    9888:	add	r0, pc, r0
    988c:	bl	4500 <printf@plt>
    9890:	mov	r0, r4
    9894:	bl	4608 <btbb_winnow@plt>
    9898:	b	9834 <try_hop@@Base+0x150>
    989c:	andeq	r9, r0, r8, ror #9
    98a0:	andeq	r9, r0, r7, lsl #7
    98a4:	andeq	r9, r0, ip, lsl #6
    98a8:	muleq	r0, sl, r4

000098ac <btbb_winnow@@Base>:
    98ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    98b0:	add	fp, sp, #28
    98b4:	sub	sp, sp, #4
    98b8:	mov	sl, r0
    98bc:	ldr	r0, [r0, #376]	; 0x178
    98c0:	ldr	r2, [sl, #380]	; 0x17c
    98c4:	ldr	r1, [sl, #388]	; 0x184
    98c8:	cmp	r1, r2
    98cc:	bge	9a58 <btbb_winnow@@Base+0x1ac>
    98d0:	cmp	r0, #1
    98d4:	blt	9a08 <btbb_winnow@@Base+0x15c>
    98d8:	movw	r2, #5648	; 0x1610
    98dc:	mov	r9, #25
    98e0:	add	r2, sl, r2
    98e4:	str	r2, [sp]
    98e8:	add	r2, sl, r1
    98ec:	add	r1, sl, r1, lsl #2
    98f0:	movw	r3, #4648	; 0x1228
    98f4:	ldr	r5, [sl, #372]	; 0x174
    98f8:	mov	r6, #0
    98fc:	mov	r7, #0
    9900:	ldrb	lr, [r2, r3]
    9904:	ldr	r3, [sl, #32]
    9908:	ldr	ip, [r1, #648]	; 0x288
    990c:	b	991c <btbb_winnow@@Base+0x70>
    9910:	add	r7, r7, #1
    9914:	cmp	r7, r0
    9918:	bge	9970 <btbb_winnow@@Base+0xc4>
    991c:	ldr	r4, [r3, r7, lsl #2]
    9920:	ldr	r2, [sl, #8]
    9924:	add	r1, r4, ip
    9928:	cmp	r2, #0
    992c:	bic	r1, r1, #-134217728	; 0xf8000000
    9930:	ldrb	r1, [r5, r1]
    9934:	beq	9954 <btbb_winnow@@Base+0xa8>
    9938:	movw	r2, #34079	; 0x851f
    993c:	add	r1, r1, #24
    9940:	movt	r2, #20971	; 0x51eb
    9944:	umull	r2, r8, r1, r2
    9948:	lsr	r2, r8, #3
    994c:	mls	r1, r2, r9, r1
    9950:	add	r1, r1, #26
    9954:	uxtb	r1, r1
    9958:	cmp	r1, lr
    995c:	bne	9910 <btbb_winnow@@Base+0x64>
    9960:	str	r4, [r3, r6, lsl #2]
    9964:	add	r6, r6, #1
    9968:	ldr	r0, [sl, #376]	; 0x178
    996c:	b	9910 <btbb_winnow@@Base+0x64>
    9970:	cmp	r6, #0
    9974:	str	r6, [sl, #376]	; 0x178
    9978:	beq	9a10 <btbb_winnow@@Base+0x164>
    997c:	cmp	r6, #1
    9980:	beq	9a68 <btbb_winnow@@Base+0x1bc>
    9984:	cmp	r6, #2
    9988:	blt	9a5c <btbb_winnow@@Base+0x1b0>
    998c:	ldr	r0, [sl, #380]	; 0x17c
    9990:	cmp	r0, #1
    9994:	blt	99e8 <btbb_winnow@@Base+0x13c>
    9998:	ldr	r1, [sl, #388]	; 0x184
    999c:	movw	r3, #4648	; 0x1228
    99a0:	sub	r1, r1, #1
    99a4:	add	r2, sl, r1
    99a8:	ldrb	r2, [r2, r3]
    99ac:	cmp	lr, r2
    99b0:	bne	99e8 <btbb_winnow@@Base+0x13c>
    99b4:	add	r1, sl, r1, lsl #2
    99b8:	ldr	r1, [r1, #648]	; 0x288
    99bc:	add	r1, r1, #1
    99c0:	cmp	ip, r1
    99c4:	ldreq	r1, [sl, #4]
    99c8:	andseq	r2, r1, #4096	; 0x1000
    99cc:	bne	99e8 <btbb_winnow@@Base+0x13c>
    99d0:	orr	r0, r1, #4096	; 0x1000
    99d4:	str	r0, [sl, #4]
    99d8:	ldr	r0, [pc, #200]	; 9aa8 <btbb_winnow@@Base+0x1fc>
    99dc:	add	r0, pc, r0
    99e0:	bl	4620 <puts@plt>
    99e4:	ldr	r0, [sl, #380]	; 0x17c
    99e8:	ldr	r1, [sl, #388]	; 0x184
    99ec:	add	r1, r1, #1
    99f0:	cmp	r1, r0
    99f4:	str	r1, [sl, #388]	; 0x184
    99f8:	bge	9a5c <btbb_winnow@@Base+0x1b0>
    99fc:	ldr	r0, [sl, #376]	; 0x178
    9a00:	cmp	r0, #0
    9a04:	bgt	98e8 <btbb_winnow@@Base+0x3c>
    9a08:	mov	r0, #0
    9a0c:	str	r0, [sl, #376]	; 0x178
    9a10:	ldr	r0, [sl, #4]
    9a14:	tst	r0, #512	; 0x200
    9a18:	beq	9a30 <btbb_winnow@@Base+0x184>
    9a1c:	ldr	r0, [sl, #32]
    9a20:	bl	4548 <free@plt>
    9a24:	mov	r0, #0
    9a28:	str	r0, [sl, #372]	; 0x174
    9a2c:	ldr	r0, [sl, #4]
    9a30:	movw	r1, #61899	; 0xf1cb
    9a34:	mov	r2, #2048	; 0x800
    9a38:	mov	r6, #0
    9a3c:	movt	r1, #65535	; 0xffff
    9a40:	str	r6, [sl, #380]	; 0x17c
    9a44:	and	r1, r0, r1
    9a48:	and	r0, r2, r0, lsr #1
    9a4c:	orr	r0, r0, r1
    9a50:	str	r0, [sl, #4]
    9a54:	b	9a5c <btbb_winnow@@Base+0x1b0>
    9a58:	mov	r6, r0
    9a5c:	mov	r0, r6
    9a60:	sub	sp, fp, #28
    9a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9a68:	ldr	r2, [sp]
    9a6c:	ldr	r1, [r3]
    9a70:	ldr	r0, [r2, #4]
    9a74:	sub	r0, r1, r0
    9a78:	lsl	r0, r0, #1
    9a7c:	str	r0, [r2]
    9a80:	ldr	r1, [r3]
    9a84:	ldr	r0, [pc, #24]	; 9aa4 <btbb_winnow@@Base+0x1f8>
    9a88:	add	r0, pc, r0
    9a8c:	bl	4500 <printf@plt>
    9a90:	ldr	r0, [sl, #4]
    9a94:	mov	r6, #1
    9a98:	orr	r0, r0, #32
    9a9c:	str	r0, [sl, #4]
    9aa0:	b	9a5c <btbb_winnow@@Base+0x1b0>
    9aa4:	andeq	r9, r0, r3, ror #3
    9aa8:	andeq	r9, r0, r4, lsr r3

00009aac <btbb_uap_from_header@@Base>:
    9aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ab0:	add	fp, sp, #28
    9ab4:	sub	sp, sp, #12
    9ab8:	mov	r5, r0
    9abc:	movw	r0, #5648	; 0x1610
    9ac0:	mov	r4, r1
    9ac4:	mov	r2, #1
    9ac8:	add	r0, r1, r0
    9acc:	ldr	r9, [r5, #2816]	; 0xb00
    9ad0:	str	r0, [sp, #8]
    9ad4:	ldrb	r0, [r1, #5]
    9ad8:	tst	r0, #4
    9adc:	ldreq	r0, [sp, #8]
    9ae0:	streq	r9, [r0, #4]
    9ae4:	ldrb	r0, [r5, #8]
    9ae8:	and	r1, r0, #7
    9aec:	add	r0, r4, r0, lsr #3
    9af0:	ldrb	r3, [r0, #12]!
    9af4:	tst	r3, r2, lsl r1
    9af8:	bne	9b14 <btbb_uap_from_header@@Base+0x68>
    9afc:	lsl	r1, r2, r1
    9b00:	orr	r1, r3, r1
    9b04:	strb	r1, [r0]
    9b08:	ldrb	r0, [r4, #22]
    9b0c:	add	r0, r0, #1
    9b10:	strb	r0, [r4, #22]
    9b14:	ldr	r0, [r4, #380]	; 0x17c
    9b18:	cmp	r0, #1000	; 0x3e8
    9b1c:	bge	9c3c <btbb_uap_from_header@@Base+0x190>
    9b20:	ldr	r1, [sp, #8]
    9b24:	add	r0, r4, r0, lsl #2
    9b28:	movw	r2, #4648	; 0x1228
    9b2c:	add	r8, r4, #392	; 0x188
    9b30:	mov	sl, #0
    9b34:	ldr	r1, [r1, #4]
    9b38:	sub	r1, r9, r1
    9b3c:	str	r1, [r0, #648]	; 0x288
    9b40:	ldr	r0, [r4, #380]	; 0x17c
    9b44:	ldrb	r1, [r5, #8]
    9b48:	add	r0, r4, r0
    9b4c:	strb	r1, [r0, r2]
    9b50:	ldr	r0, [r4, #380]	; 0x17c
    9b54:	ldr	r1, [r4, #384]	; 0x180
    9b58:	add	r0, r0, #1
    9b5c:	add	r1, r1, #1
    9b60:	str	r0, [r4, #380]	; 0x17c
    9b64:	mov	r0, #0
    9b68:	str	r1, [r4, #384]	; 0x180
    9b6c:	str	r0, [sp, #4]
    9b70:	mov	r0, #0
    9b74:	str	r0, [sp]
    9b78:	b	9b9c <btbb_uap_from_header@@Base+0xf0>
    9b7c:	ldr	r0, [sp, #4]
    9b80:	str	r6, [r8, sl, lsl #2]
    9b84:	str	sl, [sp]
    9b88:	add	r0, r0, #1
    9b8c:	str	r0, [sp, #4]
    9b90:	add	sl, sl, #1
    9b94:	cmp	sl, #64	; 0x40
    9b98:	beq	9c94 <btbb_uap_from_header@@Base+0x1e8>
    9b9c:	ldr	r0, [r8, sl, lsl #2]
    9ba0:	cmn	r0, #1
    9ba4:	bgt	9bb4 <btbb_uap_from_header@@Base+0x108>
    9ba8:	ldr	r2, [r4, #4]
    9bac:	tst	r2, #1024	; 0x400
    9bb0:	bne	9b90 <btbb_uap_from_header@@Base+0xe4>
    9bb4:	ldr	r1, [sp, #8]
    9bb8:	add	r0, r9, sl
    9bbc:	ldr	r1, [r1, #4]
    9bc0:	sub	r0, r0, r1
    9bc4:	mov	r1, r5
    9bc8:	and	r7, r0, #63	; 0x3f
    9bcc:	mov	r0, r7
    9bd0:	bl	47d0 <try_clock@plt>
    9bd4:	ldr	r2, [r4, #4]
    9bd8:	mov	r6, r0
    9bdc:	tst	r2, #1024	; 0x400
    9be0:	beq	9bf4 <btbb_uap_from_header@@Base+0x148>
    9be4:	ldr	r1, [r8, sl, lsl #2]
    9be8:	mvn	r0, #0
    9bec:	cmp	r1, r6
    9bf0:	bne	9c04 <btbb_uap_from_header@@Base+0x158>
    9bf4:	mov	r0, r7
    9bf8:	mov	r1, r5
    9bfc:	bl	45f0 <crc_check@plt>
    9c00:	ldr	r2, [r4, #4]
    9c04:	ands	r3, r2, #4
    9c08:	beq	9c18 <btbb_uap_from_header@@Base+0x16c>
    9c0c:	ldrb	r1, [r4, #28]
    9c10:	cmp	r6, r1
    9c14:	bne	9c30 <btbb_uap_from_header@@Base+0x184>
    9c18:	sub	r1, r0, #1
    9c1c:	cmp	r1, #2
    9c20:	bcc	9b7c <btbb_uap_from_header@@Base+0xd0>
    9c24:	add	r0, r0, #1
    9c28:	cmp	r0, #1
    9c2c:	bhi	9cec <btbb_uap_from_header@@Base+0x240>
    9c30:	mvn	r0, #0
    9c34:	str	r0, [r8, sl, lsl #2]
    9c38:	b	9b90 <btbb_uap_from_header@@Base+0xe4>
    9c3c:	ldr	r0, [pc, #320]	; 9d84 <btbb_uap_from_header@@Base+0x2d8>
    9c40:	add	r0, pc, r0
    9c44:	bl	4620 <puts@plt>
    9c48:	ldr	r1, [r4, #4]
    9c4c:	tst	r1, #512	; 0x200
    9c50:	beq	9c68 <btbb_uap_from_header@@Base+0x1bc>
    9c54:	ldr	r0, [r4, #32]
    9c58:	bl	4548 <free@plt>
    9c5c:	mov	r0, #0
    9c60:	str	r0, [r4, #372]	; 0x174
    9c64:	ldr	r1, [r4, #4]
    9c68:	movw	r2, #61899	; 0xf1cb
    9c6c:	mov	r3, #2048	; 0x800
    9c70:	mov	r0, #0
    9c74:	movt	r2, #65535	; 0xffff
    9c78:	str	r0, [r4, #380]	; 0x17c
    9c7c:	and	r2, r1, r2
    9c80:	and	r1, r3, r1, lsr #1
    9c84:	orr	r1, r1, r2
    9c88:	str	r1, [r4, #4]
    9c8c:	sub	sp, fp, #28
    9c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9c94:	ldr	r3, [sp, #4]
    9c98:	orr	r1, r2, #1024	; 0x400
    9c9c:	str	r1, [r4, #4]
    9ca0:	cmp	r3, #0
    9ca4:	beq	9d1c <btbb_uap_from_header@@Base+0x270>
    9ca8:	mov	r0, #0
    9cac:	cmp	r3, #1
    9cb0:	bne	9c8c <btbb_uap_from_header@@Base+0x1e0>
    9cb4:	ldr	r3, [sp, #8]
    9cb8:	ldr	r5, [sp]
    9cbc:	tst	r2, #4
    9cc0:	ldr	r0, [r3, #4]
    9cc4:	sub	r0, r5, r0
    9cc8:	and	r1, r0, #63	; 0x3f
    9ccc:	str	r1, [r3]
    9cd0:	bne	9d48 <btbb_uap_from_header@@Base+0x29c>
    9cd4:	add	r0, r4, r5, lsl #2
    9cd8:	ldr	r2, [r4, #384]	; 0x180
    9cdc:	ldr	r1, [r0, #392]	; 0x188
    9ce0:	ldr	r0, [pc, #168]	; 9d90 <btbb_uap_from_header@@Base+0x2e4>
    9ce4:	add	r0, pc, r0
    9ce8:	b	9d54 <btbb_uap_from_header@@Base+0x2a8>
    9cec:	ldr	r2, [sp, #8]
    9cf0:	cmp	r3, #0
    9cf4:	ldr	r0, [r2, #4]
    9cf8:	sub	r0, sl, r0
    9cfc:	and	r1, r0, #63	; 0x3f
    9d00:	str	r1, [r2]
    9d04:	bne	9d28 <btbb_uap_from_header@@Base+0x27c>
    9d08:	ldr	r2, [r4, #384]	; 0x180
    9d0c:	ldr	r0, [pc, #116]	; 9d88 <btbb_uap_from_header@@Base+0x2dc>
    9d10:	mov	r1, r6
    9d14:	add	r0, pc, r0
    9d18:	b	9d34 <btbb_uap_from_header@@Base+0x288>
    9d1c:	tst	r2, #512	; 0x200
    9d20:	bne	9c54 <btbb_uap_from_header@@Base+0x1a8>
    9d24:	b	9c68 <btbb_uap_from_header@@Base+0x1bc>
    9d28:	ldr	r2, [r4, #384]	; 0x180
    9d2c:	ldr	r0, [pc, #88]	; 9d8c <btbb_uap_from_header@@Base+0x2e0>
    9d30:	add	r0, pc, r0
    9d34:	bl	4500 <printf@plt>
    9d38:	mov	r0, #0
    9d3c:	strb	r6, [r4, #28]
    9d40:	str	r0, [r4, #384]	; 0x180
    9d44:	b	9d6c <btbb_uap_from_header@@Base+0x2c0>
    9d48:	ldr	r2, [r4, #384]	; 0x180
    9d4c:	ldr	r0, [pc, #64]	; 9d94 <btbb_uap_from_header@@Base+0x2e8>
    9d50:	add	r0, pc, r0
    9d54:	bl	4500 <printf@plt>
    9d58:	add	r0, r4, r5, lsl #2
    9d5c:	mov	r1, #0
    9d60:	ldr	r0, [r0, #392]	; 0x188
    9d64:	str	r1, [r4, #384]	; 0x180
    9d68:	strb	r0, [r4, #28]
    9d6c:	ldr	r0, [r4, #4]
    9d70:	orr	r0, r0, #20
    9d74:	str	r0, [r4, #4]
    9d78:	mov	r0, #1
    9d7c:	sub	sp, fp, #28
    9d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d84:	strdeq	r9, [r0], -r2
    9d88:			; <UNDEFINED> instruction: 0x00008eb3
    9d8c:	andeq	r8, r0, lr, asr #29
    9d90:	strdeq	r8, [r0], -r0
    9d94:			; <UNDEFINED> instruction: 0x00008ebb

00009d98 <btbb_print_afh_map@@Base>:
    9d98:	push	{r4, r5, r6, r7, fp, lr}
    9d9c:	add	fp, sp, #16
    9da0:	sub	sp, sp, #32
    9da4:	ldrb	ip, [r0, #15]
    9da8:	ldrb	r1, [r0, #12]
    9dac:	ldrb	r2, [r0, #13]
    9db0:	ldrb	r3, [r0, #14]
    9db4:	ldrb	lr, [r0, #16]
    9db8:	ldrb	r4, [r0, #17]
    9dbc:	ldrb	r5, [r0, #18]
    9dc0:	ldrb	r6, [r0, #19]
    9dc4:	ldrb	r7, [r0, #20]
    9dc8:	ldrb	r0, [r0, #21]
    9dcc:	stm	sp, {ip, lr}
    9dd0:	add	ip, sp, #8
    9dd4:	stm	ip, {r4, r5, r6, r7}
    9dd8:	str	r0, [sp, #24]
    9ddc:	ldr	r0, [pc, #12]	; 9df0 <btbb_print_afh_map@@Base+0x58>
    9de0:	add	r0, pc, r0
    9de4:	bl	4500 <printf@plt>
    9de8:	sub	sp, fp, #16
    9dec:	pop	{r4, r5, r6, r7, fp, pc}
    9df0:	andeq	r8, r0, r6, asr lr

00009df4 <get_piconet@@Base>:
    9df4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9df8:	add	fp, sp, #28
    9dfc:	sub	sp, sp, #20
    9e00:	str	r0, [sp, #16]
    9e04:	movw	r8, #63341	; 0xf76d
    9e08:	movw	sl, #48883	; 0xbef3
    9e0c:	mov	r6, r0
    9e10:	ldr	r9, [pc, #1188]	; a2bc <get_piconet@@Base+0x4c8>
    9e14:	movt	r8, #7
    9e18:	movt	sl, #65261	; 0xfeed
    9e1c:	ldr	r9, [pc, r9]
    9e20:	cmp	r9, #0
    9e24:	beq	9f1c <get_piconet@@Base+0x128>
    9e28:	movw	r1, #16653	; 0x410d
    9e2c:	and	r0, r6, #-16777216	; 0xff000000
    9e30:	ldr	r5, [r9, #8]
    9e34:	movt	r1, #274	; 0x112
    9e38:	add	r0, r0, r1
    9e3c:	and	r1, r6, #16711680	; 0xff0000
    9e40:	add	r0, r0, r1
    9e44:	and	r1, r6, #65280	; 0xff00
    9e48:	add	r0, r0, r1
    9e4c:	movw	r1, #47814	; 0xbac6
    9e50:	uxtab	r0, r0, r6
    9e54:	movt	r1, #40777	; 0x9f49
    9e58:	eor	r0, r0, r8
    9e5c:	sub	r1, r1, r0
    9e60:	sub	r2, sl, r0
    9e64:	eor	r1, r1, r0, lsl #8
    9e68:	sub	r2, r2, r1
    9e6c:	sub	r0, r0, r1
    9e70:	eor	r2, r2, r1, lsr #13
    9e74:	sub	r0, r0, r2
    9e78:	sub	r1, r1, r2
    9e7c:	eor	r0, r0, r2, lsr #12
    9e80:	sub	r1, r1, r0
    9e84:	sub	r2, r2, r0
    9e88:	eor	r1, r1, r0, lsl #16
    9e8c:	sub	r2, r2, r1
    9e90:	sub	r0, r0, r1
    9e94:	eor	r2, r2, r1, lsr #5
    9e98:	sub	r0, r0, r2
    9e9c:	sub	r1, r1, r2
    9ea0:	eor	r0, r0, r2, lsr #3
    9ea4:	sub	r1, r1, r0
    9ea8:	eor	r1, r1, r0, lsl #10
    9eac:	sub	r0, r2, r0
    9eb0:	sub	r0, r0, r1
    9eb4:	eor	r0, r0, r1, lsr #15
    9eb8:	ldm	r5, {r1, r2}
    9ebc:	sub	r2, r2, #1
    9ec0:	and	r0, r0, r2
    9ec4:	add	r0, r0, r0, lsl #1
    9ec8:	ldr	r0, [r1, r0, lsl #2]
    9ecc:	cmp	r0, #0
    9ed0:	beq	9f1c <get_piconet@@Base+0x128>
    9ed4:	ldr	r1, [r5, #20]
    9ed8:	add	r4, sp, #16
    9edc:	sub	r7, r0, r1
    9ee0:	ldr	r0, [r7, #32]
    9ee4:	cmp	r0, #4
    9ee8:	bne	9f04 <get_piconet@@Base+0x110>
    9eec:	ldr	r0, [r7, #28]
    9ef0:	mov	r1, r4
    9ef4:	mov	r2, #4
    9ef8:	bl	4680 <bcmp@plt>
    9efc:	cmp	r0, #0
    9f00:	beq	a294 <get_piconet@@Base+0x4a0>
    9f04:	ldr	r0, [r7, #24]
    9f08:	cmp	r0, #0
    9f0c:	beq	9f1c <get_piconet@@Base+0x128>
    9f10:	ldr	r1, [r5, #20]
    9f14:	sub	r7, r0, r1
    9f18:	b	9ee0 <get_piconet@@Base+0xec>
    9f1c:	mov	r0, #1
    9f20:	movw	r1, #5660	; 0x161c
    9f24:	mov	r7, r8
    9f28:	mov	r5, #1
    9f2c:	bl	44c4 <calloc@plt>
    9f30:	mov	r4, r0
    9f34:	str	r6, [r0, #24]
    9f38:	mov	r0, #8
    9f3c:	str	r5, [r4]
    9f40:	str	r0, [r4, #4]
    9f44:	mov	r0, #40	; 0x28
    9f48:	bl	462c <malloc@plt>
    9f4c:	mov	r5, r0
    9f50:	mov	r0, #0
    9f54:	mov	r1, #4
    9f58:	cmp	r9, #0
    9f5c:	add	r8, r5, #8
    9f60:	str	r0, [r5, #16]
    9f64:	str	r6, [r5]
    9f68:	str	r4, [r5, #4]
    9f6c:	str	r5, [r5, #28]
    9f70:	str	r1, [r5, #32]
    9f74:	beq	9f98 <get_piconet@@Base+0x1a4>
    9f78:	ldr	r6, [r9, #8]
    9f7c:	ldr	r0, [r6, #16]
    9f80:	str	r5, [r0, #8]
    9f84:	ldr	r1, [r6, #20]
    9f88:	sub	r0, r0, r1
    9f8c:	str	r0, [r5, #12]
    9f90:	str	r8, [r6, #16]
    9f94:	b	a020 <get_piconet@@Base+0x22c>
    9f98:	ldr	r1, [pc, #800]	; a2c0 <get_piconet@@Base+0x4cc>
    9f9c:	str	r0, [r5, #12]
    9fa0:	mov	r0, #44	; 0x2c
    9fa4:	add	r1, pc, r1
    9fa8:	str	r5, [r1]
    9fac:	bl	462c <malloc@plt>
    9fb0:	cmp	r0, #0
    9fb4:	str	r0, [r5, #8]
    9fb8:	beq	a2b4 <get_piconet@@Base+0x4c0>
    9fbc:	vmov.i32	q8, #0	; 0x00000000
    9fc0:	mov	r6, r0
    9fc4:	add	r0, r0, #12
    9fc8:	mov	r1, #32
    9fcc:	vst1.32	{d16-d17}, [r0]
    9fd0:	mov	r0, #5
    9fd4:	str	r1, [r6, #4]
    9fd8:	str	r0, [r6, #8]
    9fdc:	add	r0, r6, #28
    9fe0:	vst1.32	{d16-d17}, [r0]
    9fe4:	mov	r0, #8
    9fe8:	str	r8, [r6, #16]
    9fec:	str	r0, [r6, #20]
    9ff0:	mov	r0, #384	; 0x180
    9ff4:	bl	462c <malloc@plt>
    9ff8:	cmp	r0, #0
    9ffc:	str	r0, [r6]
    a000:	beq	a2b4 <get_piconet@@Base+0x4c0>
    a004:	mov	r1, #0
    a008:	mov	r2, #384	; 0x180
    a00c:	bl	46f8 <memset@plt>
    a010:	movw	r0, #8161	; 0x1fe1
    a014:	mov	r9, r5
    a018:	movt	r0, #40977	; 0xa011
    a01c:	str	r0, [r6, #40]	; 0x28
    a020:	ldr	r0, [r6, #12]
    a024:	add	r0, r0, #1
    a028:	str	r0, [r6, #12]
    a02c:	movw	r6, #16653	; 0x410d
    a030:	ldr	ip, [r9, #8]
    a034:	movt	r6, #274	; 0x112
    a038:	str	ip, [r5, #8]
    a03c:	ldrb	r3, [r5, #3]
    a040:	ldrb	r2, [r5, #2]
    a044:	ldrb	r1, [r5, #1]
    a048:	ldrb	r0, [r5]
    a04c:	add	r3, r6, r3, lsl #24
    a050:	mov	r6, #0
    a054:	add	r2, r3, r2, lsl #16
    a058:	add	r1, r2, r1, lsl #8
    a05c:	add	r0, r1, r0
    a060:	movw	r1, #47814	; 0xbac6
    a064:	movt	r1, #40777	; 0x9f49
    a068:	eor	r0, r0, r7
    a06c:	sub	r2, sl, r0
    a070:	sub	r1, r1, r0
    a074:	eor	r1, r1, r0, lsl #8
    a078:	sub	r2, r2, r1
    a07c:	sub	r0, r0, r1
    a080:	eor	r2, r2, r1, lsr #13
    a084:	sub	r0, r0, r2
    a088:	sub	r1, r1, r2
    a08c:	eor	r0, r0, r2, lsr #12
    a090:	sub	r1, r1, r0
    a094:	sub	r2, r2, r0
    a098:	eor	r1, r1, r0, lsl #16
    a09c:	sub	r2, r2, r1
    a0a0:	sub	r0, r0, r1
    a0a4:	eor	r2, r2, r1, lsr #5
    a0a8:	sub	r0, r0, r2
    a0ac:	sub	r1, r1, r2
    a0b0:	eor	r0, r0, r2, lsr #3
    a0b4:	sub	r1, r1, r0
    a0b8:	eor	r1, r1, r0, lsl #10
    a0bc:	sub	r0, r2, r0
    a0c0:	sub	r0, r0, r1
    a0c4:	eor	r1, r0, r1, lsr #15
    a0c8:	str	r1, [r5, #36]	; 0x24
    a0cc:	ldr	r2, [r9, #8]
    a0d0:	ldm	r2, {r0, r2}
    a0d4:	sub	r2, r2, #1
    a0d8:	and	r1, r1, r2
    a0dc:	add	r2, r1, r1, lsl #1
    a0e0:	mov	r3, r0
    a0e4:	add	r0, r0, r2, lsl #2
    a0e8:	ldr	r7, [r3, r2, lsl #2]!
    a0ec:	mov	r2, #10
    a0f0:	ldr	r1, [r3, #4]
    a0f4:	cmp	r7, #0
    a0f8:	add	r1, r1, #1
    a0fc:	str	r1, [r3, #4]
    a100:	str	r6, [r5, #20]
    a104:	str	r7, [r5, #24]
    a108:	strne	r8, [r7, #12]
    a10c:	str	r8, [r3]
    a110:	ldr	r0, [r0, #8]
    a114:	add	r0, r0, r0, lsl #2
    a118:	add	r0, r2, r0, lsl #1
    a11c:	cmp	r1, r0
    a120:	bcc	a2a8 <get_piconet@@Base+0x4b4>
    a124:	ldr	r0, [ip, #36]	; 0x24
    a128:	cmp	r0, #1
    a12c:	beq	a2a8 <get_piconet@@Base+0x4b4>
    a130:	ldr	r0, [ip, #4]
    a134:	str	r4, [sp, #8]
    a138:	str	r8, [sp, #4]
    a13c:	mov	r4, ip
    a140:	add	r0, r0, r0, lsl #1
    a144:	lsl	r0, r0, #3
    a148:	bl	462c <malloc@plt>
    a14c:	cmp	r0, #0
    a150:	beq	a2b4 <get_piconet@@Base+0x4c0>
    a154:	mov	sl, r0
    a158:	ldr	r0, [r4, #4]
    a15c:	mov	r1, #0
    a160:	mov	r9, #0
    a164:	add	r0, r0, r0, lsl #1
    a168:	lsl	r2, r0, #3
    a16c:	mov	r0, sl
    a170:	bl	46f8 <memset@plt>
    a174:	str	r9, [r4, #28]
    a178:	mvn	r2, #0
    a17c:	mov	r6, #1
    a180:	ldr	r0, [r4]
    a184:	str	r0, [sp, #12]
    a188:	ldmib	r4, {r0, r1, r7}
    a18c:	add	r1, r1, #1
    a190:	lsr	r3, r7, r1
    a194:	add	r2, r2, r0, lsl #1
    a198:	tst	r2, r7
    a19c:	addne	r3, r6, r7, lsr r1
    a1a0:	cmp	r0, #0
    a1a4:	str	r3, [r4, #24]
    a1a8:	beq	a240 <get_piconet@@Base+0x44c>
    a1ac:	mov	ip, r4
    a1b0:	mov	r4, #0
    a1b4:	mov	lr, #0
    a1b8:	b	a1c8 <get_piconet@@Base+0x3d4>
    a1bc:	add	lr, lr, #1
    a1c0:	cmp	lr, r0
    a1c4:	beq	a240 <get_piconet@@Base+0x44c>
    a1c8:	ldr	r5, [sp, #12]
    a1cc:	add	r1, lr, lr, lsl #1
    a1d0:	ldr	r6, [r5, r1, lsl #2]
    a1d4:	cmp	r6, #0
    a1d8:	bne	a204 <get_piconet@@Base+0x410>
    a1dc:	b	a1bc <get_piconet@@Base+0x3c8>
    a1e0:	str	r9, [r6, #12]
    a1e4:	ldr	r5, [r1]
    a1e8:	cmp	r5, #0
    a1ec:	str	r5, [r6, #16]
    a1f0:	strne	r6, [r5, #12]
    a1f4:	str	r6, [r1]
    a1f8:	cmp	r7, #0
    a1fc:	mov	r6, r7
    a200:	beq	a1bc <get_piconet@@Base+0x3c8>
    a204:	ldr	r1, [r6, #28]
    a208:	ldr	r7, [r6, #16]
    a20c:	and	r1, r1, r2
    a210:	add	r1, r1, r1, lsl #1
    a214:	add	r1, sl, r1, lsl #2
    a218:	ldr	r5, [r1, #4]
    a21c:	add	r8, r5, #1
    a220:	cmp	r8, r3
    a224:	str	r8, [r1, #4]
    a228:	bls	a1e0 <get_piconet@@Base+0x3ec>
    a22c:	udiv	r5, r8, r3
    a230:	add	r4, r4, #1
    a234:	str	r4, [ip, #28]
    a238:	str	r5, [r1, #8]
    a23c:	b	a1e0 <get_piconet@@Base+0x3ec>
    a240:	ldr	r0, [sp, #12]
    a244:	bl	4548 <free@plt>
    a248:	ldr	r0, [sp, #4]
    a24c:	ldr	r0, [r0]
    a250:	str	sl, [r0]
    a254:	ldr	r7, [r0, #28]
    a258:	ldmib	r0, {r1, r2, r3}
    a25c:	lsl	r1, r1, #1
    a260:	cmp	r7, r3, lsr #1
    a264:	str	r1, [r0, #4]
    a268:	add	r1, r2, #1
    a26c:	str	r1, [r0, #8]
    a270:	bls	a29c <get_piconet@@Base+0x4a8>
    a274:	ldr	r1, [r0, #32]
    a278:	ldr	r4, [sp, #8]
    a27c:	add	r1, r1, #1
    a280:	cmp	r1, #2
    a284:	str	r1, [r0, #32]
    a288:	movcs	r1, #1
    a28c:	strcs	r1, [r0, #36]	; 0x24
    a290:	b	a2a8 <get_piconet@@Base+0x4b4>
    a294:	ldr	r4, [r7, #4]
    a298:	b	a2a8 <get_piconet@@Base+0x4b4>
    a29c:	ldr	r4, [sp, #8]
    a2a0:	mov	r1, #0
    a2a4:	str	r1, [r0, #32]
    a2a8:	mov	r0, r4
    a2ac:	sub	sp, fp, #28
    a2b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a2b4:	mvn	r0, #0
    a2b8:	bl	4668 <exit@plt>
    a2bc:	andeq	r0, r2, r4, lsr r3
    a2c0:	andeq	r0, r2, ip, lsr #3

0000a2c4 <btbb_next_survey_result@@Base>:
    a2c4:	push	{r4, sl, fp, lr}
    a2c8:	add	fp, sp, #8
    a2cc:	ldr	r0, [pc, #52]	; a308 <btbb_next_survey_result@@Base+0x44>
    a2d0:	ldr	r0, [pc, r0]
    a2d4:	cmp	r0, #0
    a2d8:	beq	a2fc <btbb_next_survey_result@@Base+0x38>
    a2dc:	ldr	r4, [r0, #4]
    a2e0:	ldr	r1, [r0, #16]
    a2e4:	ldr	r2, [pc, #32]	; a30c <btbb_next_survey_result@@Base+0x48>
    a2e8:	add	r2, pc, r2
    a2ec:	str	r1, [r2]
    a2f0:	bl	4548 <free@plt>
    a2f4:	mov	r0, r4
    a2f8:	pop	{r4, sl, fp, pc}
    a2fc:	mov	r4, #0
    a300:	mov	r0, r4
    a304:	pop	{r4, sl, fp, pc}
    a308:	andeq	pc, r1, r0, lsl #29
    a30c:	andeq	pc, r1, r8, ror #28

0000a310 <btbb_process_packet@@Base>:
    a310:	push	{r4, r5, r6, sl, fp, lr}
    a314:	add	fp, sp, #16
    a318:	mov	r5, r0
    a31c:	ldr	r0, [pc, #388]	; a4a8 <btbb_process_packet@@Base+0x198>
    a320:	add	r0, pc, r0
    a324:	ldrb	r0, [r0]
    a328:	cmp	r0, #1
    a32c:	bne	a3a8 <btbb_process_packet@@Base+0x98>
    a330:	mov	r0, r5
    a334:	bl	4728 <btbb_packet_get_lap@plt>
    a338:	bl	474c <get_piconet@plt>
    a33c:	mov	r6, r0
    a340:	ldrb	r0, [r5, #8]
    a344:	mov	r2, #1
    a348:	and	r1, r0, #7
    a34c:	add	r0, r6, r0, lsr #3
    a350:	ldrb	r3, [r0, #12]!
    a354:	tst	r3, r2, lsl r1
    a358:	bne	a374 <btbb_process_packet@@Base+0x64>
    a35c:	lsl	r1, r2, r1
    a360:	orr	r1, r3, r1
    a364:	strb	r1, [r0]
    a368:	ldrb	r0, [r6, #22]
    a36c:	add	r0, r0, #1
    a370:	strb	r0, [r6, #22]
    a374:	mov	r0, r5
    a378:	bl	459c <btbb_header_present@plt>
    a37c:	mov	r4, #0
    a380:	cmp	r0, #0
    a384:	beq	a444 <btbb_process_packet@@Base+0x134>
    a388:	ldrb	r0, [r6, #4]
    a38c:	tst	r0, #4
    a390:	bne	a444 <btbb_process_packet@@Base+0x134>
    a394:	mov	r0, r5
    a398:	mov	r1, r6
    a39c:	bl	4578 <btbb_uap_from_header@plt>
    a3a0:	mov	r0, r4
    a3a4:	pop	{r4, r5, r6, sl, fp, pc}
    a3a8:	mov	r6, r1
    a3ac:	mov	r4, #0
    a3b0:	cmp	r1, #0
    a3b4:	beq	a444 <btbb_process_packet@@Base+0x134>
    a3b8:	ldrb	r0, [r5, #8]
    a3bc:	mov	r2, #1
    a3c0:	and	r1, r0, #7
    a3c4:	add	r0, r6, r0, lsr #3
    a3c8:	ldrb	r3, [r0, #12]!
    a3cc:	tst	r3, r2, lsl r1
    a3d0:	bne	a3ec <btbb_process_packet@@Base+0xdc>
    a3d4:	lsl	r1, r2, r1
    a3d8:	orr	r1, r3, r1
    a3dc:	strb	r1, [r0]
    a3e0:	ldrb	r0, [r6, #22]
    a3e4:	add	r0, r0, #1
    a3e8:	strb	r0, [r6, #22]
    a3ec:	ldrb	r0, [r6, #4]
    a3f0:	tst	r0, #8
    a3f4:	beq	a444 <btbb_process_packet@@Base+0x134>
    a3f8:	mov	r0, r5
    a3fc:	bl	459c <btbb_header_present@plt>
    a400:	cmp	r0, #0
    a404:	beq	a444 <btbb_process_packet@@Base+0x134>
    a408:	ldrb	r0, [r6, #5]
    a40c:	ldrb	r1, [r6, #28]
    a410:	tst	r0, #64	; 0x40
    a414:	bne	a44c <btbb_process_packet@@Base+0x13c>
    a418:	cmp	r1, #0
    a41c:	beq	a394 <btbb_process_packet@@Base+0x84>
    a420:	mov	r0, r5
    a424:	mov	r1, r6
    a428:	bl	4638 <try_hop@plt>
    a42c:	ldr	r0, [r6, #4]
    a430:	and	r1, r0, #48	; 0x30
    a434:	cmp	r1, #48	; 0x30
    a438:	orreq	r0, r0, #16384	; 0x4000
    a43c:	mvneq	r4, #0
    a440:	streq	r0, [r6, #4]
    a444:	mov	r0, r4
    a448:	pop	{r4, r5, r6, sl, fp, pc}
    a44c:	mov	r0, r5
    a450:	bl	45d8 <btbb_packet_set_uap@plt>
    a454:	mov	r0, r5
    a458:	mov	r1, #4
    a45c:	mov	r2, #1
    a460:	bl	4530 <btbb_packet_set_flag@plt>
    a464:	mov	r0, r5
    a468:	mov	r1, #5
    a46c:	mov	r2, #1
    a470:	bl	4530 <btbb_packet_set_flag@plt>
    a474:	mov	r0, r5
    a478:	bl	45fc <btbb_decode@plt>
    a47c:	cmp	r0, #0
    a480:	beq	a494 <btbb_process_packet@@Base+0x184>
    a484:	mov	r0, r5
    a488:	bl	47c4 <btbb_print_packet@plt>
    a48c:	mov	r0, r4
    a490:	pop	{r4, r5, r6, sl, fp, pc}
    a494:	ldr	r0, [pc, #16]	; a4ac <btbb_process_packet@@Base+0x19c>
    a498:	add	r0, pc, r0
    a49c:	bl	4620 <puts@plt>
    a4a0:	mov	r0, r4
    a4a4:	pop	{r4, r5, r6, sl, fp, pc}
    a4a8:	andeq	pc, r1, r8, lsr #28
    a4ac:	andeq	r8, r0, r0, asr #17

0000a4b0 <lell_packet_new@@Base>:
    a4b0:	push	{r4, sl, fp, lr}
    a4b4:	add	fp, sp, #8
    a4b8:	mov	r0, #1
    a4bc:	mov	r1, #104	; 0x68
    a4c0:	mov	r4, #1
    a4c4:	bl	44c4 <calloc@plt>
    a4c8:	str	r4, [r0, #96]	; 0x60
    a4cc:	pop	{r4, sl, fp, pc}

0000a4d0 <lell_packet_ref@@Base>:
    a4d0:	ldr	r1, [r0, #96]	; 0x60
    a4d4:	add	r1, r1, #1
    a4d8:	str	r1, [r0, #96]	; 0x60
    a4dc:	bx	lr

0000a4e0 <lell_packet_unref@@Base>:
    a4e0:	ldr	r1, [r0, #96]	; 0x60
    a4e4:	subs	r1, r1, #1
    a4e8:	str	r1, [r0, #96]	; 0x60
    a4ec:	bxne	lr
    a4f0:	b	4548 <free@plt>

0000a4f4 <lell_allocate_and_decode@@Base>:
    a4f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    a4f8:	add	fp, sp, #24
    a4fc:	mov	r5, r1
    a500:	mov	r6, r0
    a504:	mov	r0, #1
    a508:	mov	r1, #104	; 0x68
    a50c:	mov	r7, r3
    a510:	mov	r8, r2
    a514:	mov	r9, #1
    a518:	bl	44c4 <calloc@plt>
    a51c:	str	r9, [r0, #96]	; 0x60
    a520:	mov	r4, r0
    a524:	str	r0, [r7]
    a528:	add	r0, r6, #32
    a52c:	add	r2, r6, #16
    a530:	mov	r1, #48	; 0x30
    a534:	vld1.8	{d18-d19}, [r0]
    a538:	vld1.8	{d20-d21}, [r2]
    a53c:	vld1.8	{d16-d17}, [r6], r1
    a540:	add	r0, r4, #32
    a544:	vld1.8	{d22-d23}, [r6]
    a548:	vst1.8	{d18-d19}, [r0]
    a54c:	add	r0, r4, #16
    a550:	vst1.8	{d20-d21}, [r0]
    a554:	mov	r0, r4
    a558:	vst1.8	{d16-d17}, [r0], r1
    a55c:	mov	r1, #37	; 0x25
    a560:	vst1.8	{d22-d23}, [r0]
    a564:	movw	r0, #2402	; 0x962
    a568:	cmp	r5, r0
    a56c:	beq	a5c4 <lell_allocate_and_decode@@Base+0xd0>
    a570:	movw	r1, #2425	; 0x979
    a574:	cmp	r5, r1
    a578:	bhi	a590 <lell_allocate_and_decode@@Base+0x9c>
    a57c:	movw	r1, #2404	; 0x964
    a580:	sub	r1, r5, r1
    a584:	add	r1, r1, r1, lsr #31
    a588:	asr	r1, r1, #1
    a58c:	b	a5c4 <lell_allocate_and_decode@@Base+0xd0>
    a590:	movw	r2, #2426	; 0x97a
    a594:	mov	r1, #38	; 0x26
    a598:	cmp	r5, r2
    a59c:	beq	a5c4 <lell_allocate_and_decode@@Base+0xd0>
    a5a0:	lsr	r2, r5, #4
    a5a4:	mov	r1, #39	; 0x27
    a5a8:	cmp	r2, #154	; 0x9a
    a5ac:	bhi	a5c4 <lell_allocate_and_decode@@Base+0xd0>
    a5b0:	movw	r1, #2428	; 0x97c
    a5b4:	mov	r2, #11
    a5b8:	sub	r1, r5, r1
    a5bc:	add	r1, r1, r1, lsr #31
    a5c0:	add	r1, r2, r1, lsr #1
    a5c4:	sub	r0, r5, r0
    a5c8:	str	r8, [r4, #76]	; 0x4c
    a5cc:	strb	r1, [r4, #68]	; 0x44
    a5d0:	uxtb	r1, r1
    a5d4:	add	r0, r0, r0, lsr #31
    a5d8:	cmp	r1, #36	; 0x24
    a5dc:	lsr	r0, r0, #1
    a5e0:	strb	r0, [r4, #69]	; 0x45
    a5e4:	ldr	r0, [r4]
    a5e8:	str	r0, [r4, #64]	; 0x40
    a5ec:	ldrb	r2, [r4, #5]
    a5f0:	bls	a66c <lell_allocate_and_decode@@Base+0x178>
    a5f4:	and	r1, r2, #63	; 0x3f
    a5f8:	str	r1, [r4, #72]	; 0x48
    a5fc:	movw	r1, #48854	; 0xbed6
    a600:	movt	r1, #36489	; 0x8e89
    a604:	subs	r2, r0, r1
    a608:	clz	r2, r2
    a60c:	lsr	r2, r2, #5
    a610:	strb	r2, [r4, #100]	; 0x64
    a614:	ldrb	r2, [r4, #4]
    a618:	lsr	r3, r2, #7
    a61c:	str	r3, [r4, #88]	; 0x58
    a620:	ubfx	r3, r2, #6, #1
    a624:	and	r2, r2, #15
    a628:	str	r3, [r4, #84]	; 0x54
    a62c:	strb	r2, [r4, #80]	; 0x50
    a630:	mov	r2, #0
    a634:	beq	a664 <lell_allocate_and_decode@@Base+0x170>
    a638:	eors	r0, r0, r1
    a63c:	beq	a660 <lell_allocate_and_decode@@Base+0x16c>
    a640:	mov	r1, #0
    a644:	mov	r2, r1
    a648:	sub	r1, r0, #1
    a64c:	ands	r0, r1, r0
    a650:	add	r1, r2, #1
    a654:	bne	a644 <lell_allocate_and_decode@@Base+0x150>
    a658:	tst	r2, #255	; 0xff
    a65c:	beq	a68c <lell_allocate_and_decode@@Base+0x198>
    a660:	mov	r2, #32
    a664:	str	r2, [r4, #92]	; 0x5c
    a668:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    a66c:	and	r1, r2, #31
    a670:	str	r1, [r4, #72]	; 0x48
    a674:	bl	a6ac <lell_packet_is_data@@Base+0x14>
    a678:	str	r0, [r4, #92]	; 0x5c
    a67c:	clz	r0, r0
    a680:	lsr	r0, r0, #5
    a684:	strb	r0, [r4, #100]	; 0x64
    a688:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    a68c:	mov	r2, #1
    a690:	str	r2, [r4, #92]	; 0x5c
    a694:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000a698 <lell_packet_is_data@@Base>:
    a698:	ldrb	r1, [r0, #68]	; 0x44
    a69c:	mov	r0, #0
    a6a0:	cmp	r1, #37	; 0x25
    a6a4:	movwcc	r0, #1
    a6a8:	bx	lr
    a6ac:	push	{r4, r5, r6, sl, fp, lr}
    a6b0:	add	fp, sp, #16
    a6b4:	ldr	r6, [pc, #4048]	; b68c <lell_packet_is_data@@Base+0xff4>
    a6b8:	ldr	r1, [pc, #4048]	; b690 <lell_packet_is_data@@Base+0xff8>
    a6bc:	tst	r0, #1
    a6c0:	uxtb	r3, r0
    a6c4:	ubfx	r4, r0, #8, #8
    a6c8:	mov	ip, r0
    a6cc:	movw	lr, #48854	; 0xbed6
    a6d0:	movt	lr, #36489	; 0x8e89
    a6d4:	add	r1, pc, r1
    a6d8:	add	r6, pc, r6
    a6dc:	mov	r2, r1
    a6e0:	moveq	r2, r6
    a6e4:	tst	r0, #128	; 0x80
    a6e8:	mov	r5, r1
    a6ec:	moveq	r5, r6
    a6f0:	ldrb	r2, [r2, r3]
    a6f4:	tst	r0, #32768	; 0x8000
    a6f8:	ubfx	r0, r0, #16, #8
    a6fc:	ldrb	r5, [r5, r4]
    a700:	add	r2, r5, r2
    a704:	mov	r5, r1
    a708:	moveq	r5, r6
    a70c:	tst	ip, #8388608	; 0x800000
    a710:	moveq	r1, r6
    a714:	ldrb	r5, [r5, r0]
    a718:	eor	r0, r3, r0
    a71c:	ldrb	r1, [r1, ip, lsr #24]
    a720:	add	r2, r2, r5
    a724:	add	r1, r2, r1
    a728:	eor	r2, r3, r4
    a72c:	orr	r0, r2, r0
    a730:	eor	r2, r3, ip, lsr #24
    a734:	subs	r6, r1, #24
    a738:	mov	r1, #0
    a73c:	movls	r6, r1
    a740:	eors	r4, ip, lr
    a744:	orr	r0, r2, r0
    a748:	clz	r0, r0
    a74c:	lsr	r2, r0, #5
    a750:	ldr	r0, [pc, #4092]	; b754 <lell_packet_is_data@@Base+0x10bc>
    a754:	add	r0, pc, r0
    a758:	ldrb	r3, [r0, ip, lsr #26]
    a75c:	beq	a784 <lell_packet_is_data@@Base+0xec>
    a760:	mov	r1, #0
    a764:	sub	r0, r4, #1
    a768:	mov	r5, r1
    a76c:	add	r1, r1, #1
    a770:	ands	r4, r0, r4
    a774:	bne	a764 <lell_packet_is_data@@Base+0xcc>
    a778:	uxtb	r0, r5
    a77c:	clz	r0, r0
    a780:	lsr	r1, r0, #5
    a784:	cmp	ip, lr
    a788:	mov	r0, #1
    a78c:	movweq	r0, #2
    a790:	add	r0, r0, r2
    a794:	mov	r2, ip
    a798:	sub	r0, r0, r3
    a79c:	bfc	r2, #12, #20
    a7a0:	add	r0, r0, r6
    a7a4:	add	r0, r0, r1
    a7a8:	movw	r1, #2035	; 0x7f3
    a7ac:	cmp	r2, r1
    a7b0:	ble	a7f0 <lell_packet_is_data@@Base+0x158>
    a7b4:	movw	r1, #3063	; 0xbf7
    a7b8:	cmp	r2, r1
    a7bc:	ble	ae14 <lell_packet_is_data@@Base+0x77c>
    a7c0:	cmp	r2, #3712	; 0xe80
    a7c4:	bge	ae80 <lell_packet_is_data@@Base+0x7e8>
    a7c8:	movw	r1, #3325	; 0xcfd
    a7cc:	cmp	r2, r1
    a7d0:	bgt	af08 <lell_packet_is_data@@Base+0x870>
    a7d4:	movw	r1, #3064	; 0xbf8
    a7d8:	sub	r1, r2, r1
    a7dc:	cmp	r1, #16
    a7e0:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    a7e4:	cmp	r2, #3200	; 0xc80
    a7e8:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    a7ec:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    a7f0:	movw	r1, #765	; 0x2fd
    a7f4:	cmp	r2, r1
    a7f8:	bgt	ae48 <lell_packet_is_data@@Base+0x7b0>
    a7fc:	cmp	r2, #384	; 0x180
    a800:	bhi	af58 <lell_packet_is_data@@Base+0x8c0>
    a804:	add	r1, pc, #4
    a808:	ldr	r2, [r1, r2, lsl #2]
    a80c:	add	pc, r1, r2
    a810:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a814:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a818:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a81c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a820:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a824:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a828:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a82c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a830:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a834:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a838:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a83c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a840:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a844:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a848:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a84c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a850:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a854:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a858:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a85c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a860:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a864:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a868:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a86c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a870:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a874:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a878:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a87c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a880:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a884:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a888:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a88c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a890:	ldrdeq	r0, [r0], -r4
    a894:	ldrdeq	r0, [r0], -r4
    a898:	ldrdeq	r0, [r0], -r4
    a89c:	ldrdeq	r0, [r0], -r4
    a8a0:	ldrdeq	r0, [r0], -r4
    a8a4:	ldrdeq	r0, [r0], -r4
    a8a8:	ldrdeq	r0, [r0], -r4
    a8ac:	ldrdeq	r0, [r0], -r4
    a8b0:	ldrdeq	r0, [r0], -r4
    a8b4:	ldrdeq	r0, [r0], -r4
    a8b8:	ldrdeq	r0, [r0], -r4
    a8bc:	ldrdeq	r0, [r0], -r4
    a8c0:	ldrdeq	r0, [r0], -r4
    a8c4:	ldrdeq	r0, [r0], -r4
    a8c8:	ldrdeq	r0, [r0], -r4
    a8cc:	ldrdeq	r0, [r0], -r4
    a8d0:	ldrdeq	r0, [r0], -r4
    a8d4:	ldrdeq	r0, [r0], -r4
    a8d8:	ldrdeq	r0, [r0], -r4
    a8dc:	ldrdeq	r0, [r0], -r4
    a8e0:	ldrdeq	r0, [r0], -r4
    a8e4:	ldrdeq	r0, [r0], -r4
    a8e8:	ldrdeq	r0, [r0], -r4
    a8ec:	ldrdeq	r0, [r0], -r4
    a8f0:	ldrdeq	r0, [r0], -r4
    a8f4:	ldrdeq	r0, [r0], -r4
    a8f8:	ldrdeq	r0, [r0], -r4
    a8fc:	ldrdeq	r0, [r0], -r4
    a900:	ldrdeq	r0, [r0], -r4
    a904:	ldrdeq	r0, [r0], -r4
    a908:	ldrdeq	r0, [r0], -r4
    a90c:	ldrdeq	r0, [r0], -r4
    a910:	ldrdeq	r0, [r0], -r4
    a914:	ldrdeq	r0, [r0], -r4
    a918:	ldrdeq	r0, [r0], -r4
    a91c:	ldrdeq	r0, [r0], -r4
    a920:	ldrdeq	r0, [r0], -r4
    a924:	ldrdeq	r0, [r0], -r4
    a928:	ldrdeq	r0, [r0], -r4
    a92c:	ldrdeq	r0, [r0], -r4
    a930:	ldrdeq	r0, [r0], -r4
    a934:	ldrdeq	r0, [r0], -r4
    a938:	ldrdeq	r0, [r0], -r4
    a93c:	ldrdeq	r0, [r0], -r4
    a940:	ldrdeq	r0, [r0], -r4
    a944:	ldrdeq	r0, [r0], -r4
    a948:	ldrdeq	r0, [r0], -r4
    a94c:	ldrdeq	r0, [r0], -r4
    a950:	ldrdeq	r0, [r0], -r4
    a954:	ldrdeq	r0, [r0], -r4
    a958:	ldrdeq	r0, [r0], -r4
    a95c:	ldrdeq	r0, [r0], -r4
    a960:	ldrdeq	r0, [r0], -r4
    a964:	ldrdeq	r0, [r0], -r4
    a968:	ldrdeq	r0, [r0], -r4
    a96c:	ldrdeq	r0, [r0], -r4
    a970:	ldrdeq	r0, [r0], -r4
    a974:	ldrdeq	r0, [r0], -r4
    a978:	ldrdeq	r0, [r0], -r4
    a97c:	ldrdeq	r0, [r0], -r4
    a980:	ldrdeq	r0, [r0], -r4
    a984:	ldrdeq	r0, [r0], -r4
    a988:	ldrdeq	r0, [r0], -r4
    a98c:	ldrdeq	r0, [r0], -r4
    a990:	ldrdeq	r0, [r0], -r4
    a994:	ldrdeq	r0, [r0], -r4
    a998:	ldrdeq	r0, [r0], -r4
    a99c:	ldrdeq	r0, [r0], -r4
    a9a0:	ldrdeq	r0, [r0], -r4
    a9a4:	ldrdeq	r0, [r0], -r4
    a9a8:	ldrdeq	r0, [r0], -r4
    a9ac:	ldrdeq	r0, [r0], -r4
    a9b0:	ldrdeq	r0, [r0], -r4
    a9b4:	ldrdeq	r0, [r0], -r4
    a9b8:	ldrdeq	r0, [r0], -r4
    a9bc:	ldrdeq	r0, [r0], -r4
    a9c0:	ldrdeq	r0, [r0], -r4
    a9c4:	ldrdeq	r0, [r0], -r4
    a9c8:	ldrdeq	r0, [r0], -r4
    a9cc:	ldrdeq	r0, [r0], -r4
    a9d0:	ldrdeq	r0, [r0], -r4
    a9d4:	ldrdeq	r0, [r0], -r4
    a9d8:	ldrdeq	r0, [r0], -r4
    a9dc:	ldrdeq	r0, [r0], -r4
    a9e0:	ldrdeq	r0, [r0], -r4
    a9e4:	ldrdeq	r0, [r0], -r4
    a9e8:	ldrdeq	r0, [r0], -r4
    a9ec:	ldrdeq	r0, [r0], -r4
    a9f0:	ldrdeq	r0, [r0], -r4
    a9f4:	ldrdeq	r0, [r0], -r4
    a9f8:	ldrdeq	r0, [r0], -r4
    a9fc:	ldrdeq	r0, [r0], -r4
    aa00:	ldrdeq	r0, [r0], -r4
    aa04:	ldrdeq	r0, [r0], -r4
    aa08:	ldrdeq	r0, [r0], -r4
    aa0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    aa10:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    aa14:	ldrdeq	r0, [r0], -r4
    aa18:	ldrdeq	r0, [r0], -r4
    aa1c:	ldrdeq	r0, [r0], -r4
    aa20:	ldrdeq	r0, [r0], -r4
    aa24:	ldrdeq	r0, [r0], -r4
    aa28:	ldrdeq	r0, [r0], -r4
    aa2c:	ldrdeq	r0, [r0], -r4
    aa30:	ldrdeq	r0, [r0], -r4
    aa34:	ldrdeq	r0, [r0], -r4
    aa38:	ldrdeq	r0, [r0], -r4
    aa3c:	ldrdeq	r0, [r0], -r4
    aa40:	ldrdeq	r0, [r0], -r4
    aa44:	ldrdeq	r0, [r0], -r4
    aa48:	ldrdeq	r0, [r0], -r4
    aa4c:	ldrdeq	r0, [r0], -r4
    aa50:	ldrdeq	r0, [r0], -r4
    aa54:	ldrdeq	r0, [r0], -r4
    aa58:	ldrdeq	r0, [r0], -r4
    aa5c:	ldrdeq	r0, [r0], -r4
    aa60:	ldrdeq	r0, [r0], -r4
    aa64:	ldrdeq	r0, [r0], -r4
    aa68:	ldrdeq	r0, [r0], -r4
    aa6c:	ldrdeq	r0, [r0], -r4
    aa70:	ldrdeq	r0, [r0], -r4
    aa74:	ldrdeq	r0, [r0], -r4
    aa78:	ldrdeq	r0, [r0], -r4
    aa7c:	ldrdeq	r0, [r0], -r4
    aa80:	ldrdeq	r0, [r0], -r4
    aa84:	ldrdeq	r0, [r0], -r4
    aa88:	ldrdeq	r0, [r0], -r4
    aa8c:	ldrdeq	r0, [r0], -r4
    aa90:	ldrdeq	r0, [r0], -r4
    aa94:	ldrdeq	r0, [r0], -r4
    aa98:	ldrdeq	r0, [r0], -r4
    aa9c:	ldrdeq	r0, [r0], -r4
    aaa0:	ldrdeq	r0, [r0], -r4
    aaa4:	ldrdeq	r0, [r0], -r4
    aaa8:	ldrdeq	r0, [r0], -r4
    aaac:	ldrdeq	r0, [r0], -r4
    aab0:	ldrdeq	r0, [r0], -r4
    aab4:	ldrdeq	r0, [r0], -r4
    aab8:	ldrdeq	r0, [r0], -r4
    aabc:	ldrdeq	r0, [r0], -r4
    aac0:	ldrdeq	r0, [r0], -r4
    aac4:	ldrdeq	r0, [r0], -r4
    aac8:	ldrdeq	r0, [r0], -r4
    aacc:	ldrdeq	r0, [r0], -r4
    aad0:	ldrdeq	r0, [r0], -r4
    aad4:	ldrdeq	r0, [r0], -r4
    aad8:	ldrdeq	r0, [r0], -r4
    aadc:	ldrdeq	r0, [r0], -r4
    aae0:	ldrdeq	r0, [r0], -r4
    aae4:	ldrdeq	r0, [r0], -r4
    aae8:	ldrdeq	r0, [r0], -r4
    aaec:	ldrdeq	r0, [r0], -r4
    aaf0:	ldrdeq	r0, [r0], -r4
    aaf4:	ldrdeq	r0, [r0], -r4
    aaf8:	ldrdeq	r0, [r0], -r4
    aafc:	ldrdeq	r0, [r0], -r4
    ab00:	ldrdeq	r0, [r0], -r4
    ab04:	ldrdeq	r0, [r0], -r4
    ab08:	ldrdeq	r0, [r0], -r4
    ab0c:	ldrdeq	r0, [r0], -r4
    ab10:	ldrdeq	r0, [r0], -r4
    ab14:	ldrdeq	r0, [r0], -r4
    ab18:	ldrdeq	r0, [r0], -r4
    ab1c:	ldrdeq	r0, [r0], -r4
    ab20:	ldrdeq	r0, [r0], -r4
    ab24:	ldrdeq	r0, [r0], -r4
    ab28:	ldrdeq	r0, [r0], -r4
    ab2c:	ldrdeq	r0, [r0], -r4
    ab30:	ldrdeq	r0, [r0], -r4
    ab34:	ldrdeq	r0, [r0], -r4
    ab38:	ldrdeq	r0, [r0], -r4
    ab3c:	ldrdeq	r0, [r0], -r4
    ab40:	ldrdeq	r0, [r0], -r4
    ab44:	ldrdeq	r0, [r0], -r4
    ab48:	ldrdeq	r0, [r0], -r4
    ab4c:	ldrdeq	r0, [r0], -r4
    ab50:	ldrdeq	r0, [r0], -r4
    ab54:	ldrdeq	r0, [r0], -r4
    ab58:	ldrdeq	r0, [r0], -r4
    ab5c:	ldrdeq	r0, [r0], -r4
    ab60:	ldrdeq	r0, [r0], -r4
    ab64:	ldrdeq	r0, [r0], -r4
    ab68:	ldrdeq	r0, [r0], -r4
    ab6c:	ldrdeq	r0, [r0], -r4
    ab70:	ldrdeq	r0, [r0], -r4
    ab74:	ldrdeq	r0, [r0], -r4
    ab78:	ldrdeq	r0, [r0], -r4
    ab7c:	ldrdeq	r0, [r0], -r4
    ab80:	ldrdeq	r0, [r0], -r4
    ab84:	ldrdeq	r0, [r0], -r4
    ab88:	ldrdeq	r0, [r0], -r4
    ab8c:	ldrdeq	r0, [r0], -r4
    ab90:	ldrdeq	r0, [r0], -r4
    ab94:	ldrdeq	r0, [r0], -r4
    ab98:	ldrdeq	r0, [r0], -r4
    ab9c:	ldrdeq	r0, [r0], -r4
    aba0:	ldrdeq	r0, [r0], -r4
    aba4:	ldrdeq	r0, [r0], -r4
    aba8:	ldrdeq	r0, [r0], -r4
    abac:	ldrdeq	r0, [r0], -r4
    abb0:	ldrdeq	r0, [r0], -r4
    abb4:	ldrdeq	r0, [r0], -r4
    abb8:	ldrdeq	r0, [r0], -r4
    abbc:	ldrdeq	r0, [r0], -r4
    abc0:	ldrdeq	r0, [r0], -r4
    abc4:	ldrdeq	r0, [r0], -r4
    abc8:	ldrdeq	r0, [r0], -r4
    abcc:	ldrdeq	r0, [r0], -r4
    abd0:	ldrdeq	r0, [r0], -r4
    abd4:	ldrdeq	r0, [r0], -r4
    abd8:	ldrdeq	r0, [r0], -r4
    abdc:	ldrdeq	r0, [r0], -r4
    abe0:	ldrdeq	r0, [r0], -r4
    abe4:	ldrdeq	r0, [r0], -r4
    abe8:	ldrdeq	r0, [r0], -r4
    abec:	ldrdeq	r0, [r0], -r4
    abf0:	ldrdeq	r0, [r0], -r4
    abf4:	ldrdeq	r0, [r0], -r4
    abf8:	ldrdeq	r0, [r0], -r4
    abfc:	ldrdeq	r0, [r0], -r4
    ac00:	ldrdeq	r0, [r0], -r4
    ac04:	ldrdeq	r0, [r0], -r4
    ac08:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ac0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ac10:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ac14:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ac18:	ldrdeq	r0, [r0], -r4
    ac1c:	ldrdeq	r0, [r0], -r4
    ac20:	ldrdeq	r0, [r0], -r4
    ac24:	ldrdeq	r0, [r0], -r4
    ac28:	ldrdeq	r0, [r0], -r4
    ac2c:	ldrdeq	r0, [r0], -r4
    ac30:	ldrdeq	r0, [r0], -r4
    ac34:	ldrdeq	r0, [r0], -r4
    ac38:	ldrdeq	r0, [r0], -r4
    ac3c:	ldrdeq	r0, [r0], -r4
    ac40:	ldrdeq	r0, [r0], -r4
    ac44:	ldrdeq	r0, [r0], -r4
    ac48:	ldrdeq	r0, [r0], -r4
    ac4c:	ldrdeq	r0, [r0], -r4
    ac50:	ldrdeq	r0, [r0], -r4
    ac54:	ldrdeq	r0, [r0], -r4
    ac58:	ldrdeq	r0, [r0], -r4
    ac5c:	ldrdeq	r0, [r0], -r4
    ac60:	ldrdeq	r0, [r0], -r4
    ac64:	ldrdeq	r0, [r0], -r4
    ac68:	ldrdeq	r0, [r0], -r4
    ac6c:	ldrdeq	r0, [r0], -r4
    ac70:	ldrdeq	r0, [r0], -r4
    ac74:	ldrdeq	r0, [r0], -r4
    ac78:	ldrdeq	r0, [r0], -r4
    ac7c:	ldrdeq	r0, [r0], -r4
    ac80:	ldrdeq	r0, [r0], -r4
    ac84:	ldrdeq	r0, [r0], -r4
    ac88:	ldrdeq	r0, [r0], -r4
    ac8c:	ldrdeq	r0, [r0], -r4
    ac90:	ldrdeq	r0, [r0], -r4
    ac94:	ldrdeq	r0, [r0], -r4
    ac98:	ldrdeq	r0, [r0], -r4
    ac9c:	ldrdeq	r0, [r0], -r4
    aca0:	ldrdeq	r0, [r0], -r4
    aca4:	ldrdeq	r0, [r0], -r4
    aca8:	ldrdeq	r0, [r0], -r4
    acac:	ldrdeq	r0, [r0], -r4
    acb0:	ldrdeq	r0, [r0], -r4
    acb4:	ldrdeq	r0, [r0], -r4
    acb8:	ldrdeq	r0, [r0], -r4
    acbc:	ldrdeq	r0, [r0], -r4
    acc0:	ldrdeq	r0, [r0], -r4
    acc4:	ldrdeq	r0, [r0], -r4
    acc8:	ldrdeq	r0, [r0], -r4
    accc:	ldrdeq	r0, [r0], -r4
    acd0:	ldrdeq	r0, [r0], -r4
    acd4:	ldrdeq	r0, [r0], -r4
    acd8:	ldrdeq	r0, [r0], -r4
    acdc:	ldrdeq	r0, [r0], -r4
    ace0:	ldrdeq	r0, [r0], -r4
    ace4:	ldrdeq	r0, [r0], -r4
    ace8:	ldrdeq	r0, [r0], -r4
    acec:	ldrdeq	r0, [r0], -r4
    acf0:	ldrdeq	r0, [r0], -r4
    acf4:	ldrdeq	r0, [r0], -r4
    acf8:	ldrdeq	r0, [r0], -r4
    acfc:	ldrdeq	r0, [r0], -r4
    ad00:	ldrdeq	r0, [r0], -r4
    ad04:	ldrdeq	r0, [r0], -r4
    ad08:	ldrdeq	r0, [r0], -r4
    ad0c:	ldrdeq	r0, [r0], -r4
    ad10:	ldrdeq	r0, [r0], -r4
    ad14:	ldrdeq	r0, [r0], -r4
    ad18:	ldrdeq	r0, [r0], -r4
    ad1c:	ldrdeq	r0, [r0], -r4
    ad20:	ldrdeq	r0, [r0], -r4
    ad24:	ldrdeq	r0, [r0], -r4
    ad28:	ldrdeq	r0, [r0], -r4
    ad2c:	ldrdeq	r0, [r0], -r4
    ad30:	ldrdeq	r0, [r0], -r4
    ad34:	ldrdeq	r0, [r0], -r4
    ad38:	ldrdeq	r0, [r0], -r4
    ad3c:	ldrdeq	r0, [r0], -r4
    ad40:	ldrdeq	r0, [r0], -r4
    ad44:	ldrdeq	r0, [r0], -r4
    ad48:	ldrdeq	r0, [r0], -r4
    ad4c:	ldrdeq	r0, [r0], -r4
    ad50:	ldrdeq	r0, [r0], -r4
    ad54:	ldrdeq	r0, [r0], -r4
    ad58:	ldrdeq	r0, [r0], -r4
    ad5c:	ldrdeq	r0, [r0], -r4
    ad60:	ldrdeq	r0, [r0], -r4
    ad64:	ldrdeq	r0, [r0], -r4
    ad68:	ldrdeq	r0, [r0], -r4
    ad6c:	ldrdeq	r0, [r0], -r4
    ad70:	ldrdeq	r0, [r0], -r4
    ad74:	ldrdeq	r0, [r0], -r4
    ad78:	ldrdeq	r0, [r0], -r4
    ad7c:	ldrdeq	r0, [r0], -r4
    ad80:	ldrdeq	r0, [r0], -r4
    ad84:	ldrdeq	r0, [r0], -r4
    ad88:	ldrdeq	r0, [r0], -r4
    ad8c:	ldrdeq	r0, [r0], -r4
    ad90:	ldrdeq	r0, [r0], -r4
    ad94:	ldrdeq	r0, [r0], -r4
    ad98:	ldrdeq	r0, [r0], -r4
    ad9c:	ldrdeq	r0, [r0], -r4
    ada0:	ldrdeq	r0, [r0], -r4
    ada4:	ldrdeq	r0, [r0], -r4
    ada8:	ldrdeq	r0, [r0], -r4
    adac:	ldrdeq	r0, [r0], -r4
    adb0:	ldrdeq	r0, [r0], -r4
    adb4:	ldrdeq	r0, [r0], -r4
    adb8:	ldrdeq	r0, [r0], -r4
    adbc:	ldrdeq	r0, [r0], -r4
    adc0:	ldrdeq	r0, [r0], -r4
    adc4:	ldrdeq	r0, [r0], -r4
    adc8:	ldrdeq	r0, [r0], -r4
    adcc:	ldrdeq	r0, [r0], -r4
    add0:	ldrdeq	r0, [r0], -r4
    add4:	ldrdeq	r0, [r0], -r4
    add8:	ldrdeq	r0, [r0], -r4
    addc:	ldrdeq	r0, [r0], -r4
    ade0:	ldrdeq	r0, [r0], -r4
    ade4:	ldrdeq	r0, [r0], -r4
    ade8:	ldrdeq	r0, [r0], -r4
    adec:	ldrdeq	r0, [r0], -r4
    adf0:	ldrdeq	r0, [r0], -r4
    adf4:	ldrdeq	r0, [r0], -r4
    adf8:	ldrdeq	r0, [r0], -r4
    adfc:	ldrdeq	r0, [r0], -r4
    ae00:	ldrdeq	r0, [r0], -r4
    ae04:	ldrdeq	r0, [r0], -r4
    ae08:	ldrdeq	r0, [r0], -r4
    ae0c:	ldrdeq	r0, [r0], -r4
    ae10:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ae14:	cmp	r2, #2432	; 0x980
    ae18:	bge	aedc <lell_packet_is_data@@Base+0x844>
    ae1c:	movw	r1, #2036	; 0x7f4
    ae20:	sub	r1, r2, r1
    ae24:	cmp	r1, #28
    ae28:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    ae2c:	movw	r1, #2302	; 0x8fe
    ae30:	sub	r1, r2, r1
    ae34:	cmp	r1, #4
    ae38:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    ae3c:	cmp	r2, #2176	; 0x880
    ae40:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    ae44:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    ae48:	cmp	r2, #1152	; 0x480
    ae4c:	bge	aeac <lell_packet_is_data@@Base+0x814>
    ae50:	sub	r1, r2, #1016	; 0x3f8
    ae54:	cmp	r1, #15
    ae58:	bhi	ae64 <lell_packet_is_data@@Base+0x7cc>
    ae5c:	cmp	r1, #9
    ae60:	bne	afe0 <lell_packet_is_data@@Base+0x948>
    ae64:	movw	r1, #766	; 0x2fe
    ae68:	sub	r1, r2, r1
    ae6c:	cmp	r1, #4
    ae70:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    ae74:	cmp	r2, #896	; 0x380
    ae78:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    ae7c:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    ae80:	cmp	r2, #4064	; 0xfe0
    ae84:	blt	afc0 <lell_packet_is_data@@Base+0x928>
    ae88:	sub	r1, r2, #4064	; 0xfe0
    ae8c:	cmp	r1, #31
    ae90:	bhi	afe4 <lell_packet_is_data@@Base+0x94c>
    ae94:	movw	r3, #1
    ae98:	mov	r2, #1
    ae9c:	movt	r3, #65535	; 0xffff
    aea0:	tst	r3, r2, lsl r1
    aea4:	addne	r0, r0, #1
    aea8:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    aeac:	movw	r1, #1531	; 0x5fb
    aeb0:	cmp	r2, r1
    aeb4:	ble	af78 <lell_packet_is_data@@Base+0x8e0>
    aeb8:	cmp	r2, #1664	; 0x680
    aebc:	bge	af9c <lell_packet_is_data@@Base+0x904>
    aec0:	movw	r1, #1532	; 0x5fc
    aec4:	sub	r1, r2, r1
    aec8:	cmp	r1, #7
    aecc:	bhi	afe4 <lell_packet_is_data@@Base+0x94c>
    aed0:	cmp	r1, #4
    aed4:	bne	afe0 <lell_packet_is_data@@Base+0x948>
    aed8:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    aedc:	cmp	r2, #2688	; 0xa80
    aee0:	bge	af34 <lell_packet_is_data@@Base+0x89c>
    aee4:	movw	r1, #2556	; 0x9fc
    aee8:	sub	r1, r2, r1
    aeec:	cmp	r1, #7
    aef0:	bhi	aefc <lell_packet_is_data@@Base+0x864>
    aef4:	cmp	r1, #4
    aef8:	bne	afe0 <lell_packet_is_data@@Base+0x948>
    aefc:	cmp	r2, #2432	; 0x980
    af00:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    af04:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    af08:	movw	r1, #3580	; 0xdfc
    af0c:	sub	r1, r2, r1
    af10:	cmp	r1, #8
    af14:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    af18:	movw	r1, #3326	; 0xcfe
    af1c:	sub	r1, r2, r1
    af20:	cmp	r1, #4
    af24:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    af28:	cmp	r2, #3456	; 0xd80
    af2c:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    af30:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    af34:	movw	r1, #2814	; 0xafe
    af38:	sub	r1, r2, r1
    af3c:	cmp	r1, #4
    af40:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    af44:	cmp	r2, #2688	; 0xa80
    af48:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    af4c:	cmp	r2, #2944	; 0xb80
    af50:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    af54:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    af58:	sub	r1, r2, #508	; 0x1fc
    af5c:	cmp	r1, #7
    af60:	bhi	af6c <lell_packet_is_data@@Base+0x8d4>
    af64:	cmp	r1, #4
    af68:	bne	afe0 <lell_packet_is_data@@Base+0x948>
    af6c:	cmp	r2, #640	; 0x280
    af70:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    af74:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    af78:	movw	r1, #1278	; 0x4fe
    af7c:	sub	r1, r2, r1
    af80:	cmp	r1, #4
    af84:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    af88:	cmp	r2, #1152	; 0x480
    af8c:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    af90:	cmp	r2, #1408	; 0x580
    af94:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    af98:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    af9c:	movw	r1, #1790	; 0x6fe
    afa0:	sub	r1, r2, r1
    afa4:	cmp	r1, #4
    afa8:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    afac:	cmp	r2, #1664	; 0x680
    afb0:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    afb4:	cmp	r2, #1920	; 0x780
    afb8:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    afbc:	b	afe4 <lell_packet_is_data@@Base+0x94c>
    afc0:	movw	r1, #3838	; 0xefe
    afc4:	sub	r1, r2, r1
    afc8:	cmp	r1, #4
    afcc:	bcc	afe0 <lell_packet_is_data@@Base+0x948>
    afd0:	cmp	r2, #3712	; 0xe80
    afd4:	beq	afe0 <lell_packet_is_data@@Base+0x948>
    afd8:	cmp	r2, #3968	; 0xf80
    afdc:	bne	afe4 <lell_packet_is_data@@Base+0x94c>
    afe0:	add	r0, r0, #1
    afe4:	ubfx	r3, ip, #4, #12
    afe8:	movw	r1, #2035	; 0x7f3
    afec:	lsr	r2, ip, #8
    aff0:	cmp	r3, r1
    aff4:	ble	b034 <lell_packet_is_data@@Base+0x99c>
    aff8:	movw	r1, #3063	; 0xbf7
    affc:	cmp	r3, r1
    b000:	ble	b658 <lell_packet_is_data@@Base+0xfc0>
    b004:	cmp	r3, #3712	; 0xe80
    b008:	bge	b6cc <lell_packet_is_data@@Base+0x1034>
    b00c:	movw	r1, #3325	; 0xcfd
    b010:	cmp	r3, r1
    b014:	bgt	b758 <lell_packet_is_data@@Base+0x10c0>
    b018:	movw	r1, #3064	; 0xbf8
    b01c:	sub	r1, r3, r1
    b020:	cmp	r1, #16
    b024:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b028:	cmp	r3, #3200	; 0xc80
    b02c:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b030:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b034:	movw	r1, #765	; 0x2fd
    b038:	cmp	r3, r1
    b03c:	bgt	b694 <lell_packet_is_data@@Base+0xffc>
    b040:	cmp	r3, #384	; 0x180
    b044:	bhi	b7a8 <lell_packet_is_data@@Base+0x1110>
    b048:	add	r1, pc, #4
    b04c:	ldr	r3, [r1, r3, lsl #2]
    b050:	add	pc, r1, r3
    b054:	ldrdeq	r0, [r0], -ip
    b058:	ldrdeq	r0, [r0], -ip
    b05c:	ldrdeq	r0, [r0], -ip
    b060:	ldrdeq	r0, [r0], -ip
    b064:	ldrdeq	r0, [r0], -ip
    b068:	ldrdeq	r0, [r0], -ip
    b06c:	ldrdeq	r0, [r0], -ip
    b070:	ldrdeq	r0, [r0], -ip
    b074:	ldrdeq	r0, [r0], -ip
    b078:	ldrdeq	r0, [r0], -ip
    b07c:	ldrdeq	r0, [r0], -ip
    b080:	ldrdeq	r0, [r0], -ip
    b084:	ldrdeq	r0, [r0], -ip
    b088:	ldrdeq	r0, [r0], -ip
    b08c:	ldrdeq	r0, [r0], -ip
    b090:	ldrdeq	r0, [r0], -ip
    b094:	ldrdeq	r0, [r0], -ip
    b098:	ldrdeq	r0, [r0], -ip
    b09c:	ldrdeq	r0, [r0], -ip
    b0a0:	ldrdeq	r0, [r0], -ip
    b0a4:	ldrdeq	r0, [r0], -ip
    b0a8:	ldrdeq	r0, [r0], -ip
    b0ac:	ldrdeq	r0, [r0], -ip
    b0b0:	ldrdeq	r0, [r0], -ip
    b0b4:	ldrdeq	r0, [r0], -ip
    b0b8:	ldrdeq	r0, [r0], -ip
    b0bc:	ldrdeq	r0, [r0], -ip
    b0c0:	ldrdeq	r0, [r0], -ip
    b0c4:	ldrdeq	r0, [r0], -ip
    b0c8:	ldrdeq	r0, [r0], -ip
    b0cc:	ldrdeq	r0, [r0], -ip
    b0d0:	ldrdeq	r0, [r0], -ip
    b0d4:	andeq	r0, r0, r0, ror #15
    b0d8:	andeq	r0, r0, r0, ror #15
    b0dc:	andeq	r0, r0, r0, ror #15
    b0e0:	andeq	r0, r0, r0, ror #15
    b0e4:	andeq	r0, r0, r0, ror #15
    b0e8:	andeq	r0, r0, r0, ror #15
    b0ec:	andeq	r0, r0, r0, ror #15
    b0f0:	andeq	r0, r0, r0, ror #15
    b0f4:	andeq	r0, r0, r0, ror #15
    b0f8:	andeq	r0, r0, r0, ror #15
    b0fc:	andeq	r0, r0, r0, ror #15
    b100:	andeq	r0, r0, r0, ror #15
    b104:	andeq	r0, r0, r0, ror #15
    b108:	andeq	r0, r0, r0, ror #15
    b10c:	andeq	r0, r0, r0, ror #15
    b110:	andeq	r0, r0, r0, ror #15
    b114:	andeq	r0, r0, r0, ror #15
    b118:	andeq	r0, r0, r0, ror #15
    b11c:	andeq	r0, r0, r0, ror #15
    b120:	andeq	r0, r0, r0, ror #15
    b124:	andeq	r0, r0, r0, ror #15
    b128:	andeq	r0, r0, r0, ror #15
    b12c:	andeq	r0, r0, r0, ror #15
    b130:	andeq	r0, r0, r0, ror #15
    b134:	andeq	r0, r0, r0, ror #15
    b138:	andeq	r0, r0, r0, ror #15
    b13c:	andeq	r0, r0, r0, ror #15
    b140:	andeq	r0, r0, r0, ror #15
    b144:	andeq	r0, r0, r0, ror #15
    b148:	andeq	r0, r0, r0, ror #15
    b14c:	andeq	r0, r0, r0, ror #15
    b150:	andeq	r0, r0, r0, ror #15
    b154:	andeq	r0, r0, r0, ror #15
    b158:	andeq	r0, r0, r0, ror #15
    b15c:	andeq	r0, r0, r0, ror #15
    b160:	andeq	r0, r0, r0, ror #15
    b164:	andeq	r0, r0, r0, ror #15
    b168:	andeq	r0, r0, r0, ror #15
    b16c:	andeq	r0, r0, r0, ror #15
    b170:	andeq	r0, r0, r0, ror #15
    b174:	andeq	r0, r0, r0, ror #15
    b178:	andeq	r0, r0, r0, ror #15
    b17c:	andeq	r0, r0, r0, ror #15
    b180:	andeq	r0, r0, r0, ror #15
    b184:	andeq	r0, r0, r0, ror #15
    b188:	andeq	r0, r0, r0, ror #15
    b18c:	andeq	r0, r0, r0, ror #15
    b190:	andeq	r0, r0, r0, ror #15
    b194:	andeq	r0, r0, r0, ror #15
    b198:	andeq	r0, r0, r0, ror #15
    b19c:	andeq	r0, r0, r0, ror #15
    b1a0:	andeq	r0, r0, r0, ror #15
    b1a4:	andeq	r0, r0, r0, ror #15
    b1a8:	andeq	r0, r0, r0, ror #15
    b1ac:	andeq	r0, r0, r0, ror #15
    b1b0:	andeq	r0, r0, r0, ror #15
    b1b4:	andeq	r0, r0, r0, ror #15
    b1b8:	andeq	r0, r0, r0, ror #15
    b1bc:	andeq	r0, r0, r0, ror #15
    b1c0:	andeq	r0, r0, r0, ror #15
    b1c4:	andeq	r0, r0, r0, ror #15
    b1c8:	andeq	r0, r0, r0, ror #15
    b1cc:	andeq	r0, r0, r0, ror #15
    b1d0:	andeq	r0, r0, r0, ror #15
    b1d4:	andeq	r0, r0, r0, ror #15
    b1d8:	andeq	r0, r0, r0, ror #15
    b1dc:	andeq	r0, r0, r0, ror #15
    b1e0:	andeq	r0, r0, r0, ror #15
    b1e4:	andeq	r0, r0, r0, ror #15
    b1e8:	andeq	r0, r0, r0, ror #15
    b1ec:	andeq	r0, r0, r0, ror #15
    b1f0:	andeq	r0, r0, r0, ror #15
    b1f4:	andeq	r0, r0, r0, ror #15
    b1f8:	andeq	r0, r0, r0, ror #15
    b1fc:	andeq	r0, r0, r0, ror #15
    b200:	andeq	r0, r0, r0, ror #15
    b204:	andeq	r0, r0, r0, ror #15
    b208:	andeq	r0, r0, r0, ror #15
    b20c:	andeq	r0, r0, r0, ror #15
    b210:	andeq	r0, r0, r0, ror #15
    b214:	andeq	r0, r0, r0, ror #15
    b218:	andeq	r0, r0, r0, ror #15
    b21c:	andeq	r0, r0, r0, ror #15
    b220:	andeq	r0, r0, r0, ror #15
    b224:	andeq	r0, r0, r0, ror #15
    b228:	andeq	r0, r0, r0, ror #15
    b22c:	andeq	r0, r0, r0, ror #15
    b230:	andeq	r0, r0, r0, ror #15
    b234:	andeq	r0, r0, r0, ror #15
    b238:	andeq	r0, r0, r0, ror #15
    b23c:	andeq	r0, r0, r0, ror #15
    b240:	andeq	r0, r0, r0, ror #15
    b244:	andeq	r0, r0, r0, ror #15
    b248:	andeq	r0, r0, r0, ror #15
    b24c:	andeq	r0, r0, r0, ror #15
    b250:	ldrdeq	r0, [r0], -ip
    b254:	ldrdeq	r0, [r0], -ip
    b258:	andeq	r0, r0, r0, ror #15
    b25c:	andeq	r0, r0, r0, ror #15
    b260:	andeq	r0, r0, r0, ror #15
    b264:	andeq	r0, r0, r0, ror #15
    b268:	andeq	r0, r0, r0, ror #15
    b26c:	andeq	r0, r0, r0, ror #15
    b270:	andeq	r0, r0, r0, ror #15
    b274:	andeq	r0, r0, r0, ror #15
    b278:	andeq	r0, r0, r0, ror #15
    b27c:	andeq	r0, r0, r0, ror #15
    b280:	andeq	r0, r0, r0, ror #15
    b284:	andeq	r0, r0, r0, ror #15
    b288:	andeq	r0, r0, r0, ror #15
    b28c:	andeq	r0, r0, r0, ror #15
    b290:	andeq	r0, r0, r0, ror #15
    b294:	andeq	r0, r0, r0, ror #15
    b298:	andeq	r0, r0, r0, ror #15
    b29c:	andeq	r0, r0, r0, ror #15
    b2a0:	andeq	r0, r0, r0, ror #15
    b2a4:	andeq	r0, r0, r0, ror #15
    b2a8:	andeq	r0, r0, r0, ror #15
    b2ac:	andeq	r0, r0, r0, ror #15
    b2b0:	andeq	r0, r0, r0, ror #15
    b2b4:	andeq	r0, r0, r0, ror #15
    b2b8:	andeq	r0, r0, r0, ror #15
    b2bc:	andeq	r0, r0, r0, ror #15
    b2c0:	andeq	r0, r0, r0, ror #15
    b2c4:	andeq	r0, r0, r0, ror #15
    b2c8:	andeq	r0, r0, r0, ror #15
    b2cc:	andeq	r0, r0, r0, ror #15
    b2d0:	andeq	r0, r0, r0, ror #15
    b2d4:	andeq	r0, r0, r0, ror #15
    b2d8:	andeq	r0, r0, r0, ror #15
    b2dc:	andeq	r0, r0, r0, ror #15
    b2e0:	andeq	r0, r0, r0, ror #15
    b2e4:	andeq	r0, r0, r0, ror #15
    b2e8:	andeq	r0, r0, r0, ror #15
    b2ec:	andeq	r0, r0, r0, ror #15
    b2f0:	andeq	r0, r0, r0, ror #15
    b2f4:	andeq	r0, r0, r0, ror #15
    b2f8:	andeq	r0, r0, r0, ror #15
    b2fc:	andeq	r0, r0, r0, ror #15
    b300:	andeq	r0, r0, r0, ror #15
    b304:	andeq	r0, r0, r0, ror #15
    b308:	andeq	r0, r0, r0, ror #15
    b30c:	andeq	r0, r0, r0, ror #15
    b310:	andeq	r0, r0, r0, ror #15
    b314:	andeq	r0, r0, r0, ror #15
    b318:	andeq	r0, r0, r0, ror #15
    b31c:	andeq	r0, r0, r0, ror #15
    b320:	andeq	r0, r0, r0, ror #15
    b324:	andeq	r0, r0, r0, ror #15
    b328:	andeq	r0, r0, r0, ror #15
    b32c:	andeq	r0, r0, r0, ror #15
    b330:	andeq	r0, r0, r0, ror #15
    b334:	andeq	r0, r0, r0, ror #15
    b338:	andeq	r0, r0, r0, ror #15
    b33c:	andeq	r0, r0, r0, ror #15
    b340:	andeq	r0, r0, r0, ror #15
    b344:	andeq	r0, r0, r0, ror #15
    b348:	andeq	r0, r0, r0, ror #15
    b34c:	andeq	r0, r0, r0, ror #15
    b350:	andeq	r0, r0, r0, ror #15
    b354:	andeq	r0, r0, r0, ror #15
    b358:	andeq	r0, r0, r0, ror #15
    b35c:	andeq	r0, r0, r0, ror #15
    b360:	andeq	r0, r0, r0, ror #15
    b364:	andeq	r0, r0, r0, ror #15
    b368:	andeq	r0, r0, r0, ror #15
    b36c:	andeq	r0, r0, r0, ror #15
    b370:	andeq	r0, r0, r0, ror #15
    b374:	andeq	r0, r0, r0, ror #15
    b378:	andeq	r0, r0, r0, ror #15
    b37c:	andeq	r0, r0, r0, ror #15
    b380:	andeq	r0, r0, r0, ror #15
    b384:	andeq	r0, r0, r0, ror #15
    b388:	andeq	r0, r0, r0, ror #15
    b38c:	andeq	r0, r0, r0, ror #15
    b390:	andeq	r0, r0, r0, ror #15
    b394:	andeq	r0, r0, r0, ror #15
    b398:	andeq	r0, r0, r0, ror #15
    b39c:	andeq	r0, r0, r0, ror #15
    b3a0:	andeq	r0, r0, r0, ror #15
    b3a4:	andeq	r0, r0, r0, ror #15
    b3a8:	andeq	r0, r0, r0, ror #15
    b3ac:	andeq	r0, r0, r0, ror #15
    b3b0:	andeq	r0, r0, r0, ror #15
    b3b4:	andeq	r0, r0, r0, ror #15
    b3b8:	andeq	r0, r0, r0, ror #15
    b3bc:	andeq	r0, r0, r0, ror #15
    b3c0:	andeq	r0, r0, r0, ror #15
    b3c4:	andeq	r0, r0, r0, ror #15
    b3c8:	andeq	r0, r0, r0, ror #15
    b3cc:	andeq	r0, r0, r0, ror #15
    b3d0:	andeq	r0, r0, r0, ror #15
    b3d4:	andeq	r0, r0, r0, ror #15
    b3d8:	andeq	r0, r0, r0, ror #15
    b3dc:	andeq	r0, r0, r0, ror #15
    b3e0:	andeq	r0, r0, r0, ror #15
    b3e4:	andeq	r0, r0, r0, ror #15
    b3e8:	andeq	r0, r0, r0, ror #15
    b3ec:	andeq	r0, r0, r0, ror #15
    b3f0:	andeq	r0, r0, r0, ror #15
    b3f4:	andeq	r0, r0, r0, ror #15
    b3f8:	andeq	r0, r0, r0, ror #15
    b3fc:	andeq	r0, r0, r0, ror #15
    b400:	andeq	r0, r0, r0, ror #15
    b404:	andeq	r0, r0, r0, ror #15
    b408:	andeq	r0, r0, r0, ror #15
    b40c:	andeq	r0, r0, r0, ror #15
    b410:	andeq	r0, r0, r0, ror #15
    b414:	andeq	r0, r0, r0, ror #15
    b418:	andeq	r0, r0, r0, ror #15
    b41c:	andeq	r0, r0, r0, ror #15
    b420:	andeq	r0, r0, r0, ror #15
    b424:	andeq	r0, r0, r0, ror #15
    b428:	andeq	r0, r0, r0, ror #15
    b42c:	andeq	r0, r0, r0, ror #15
    b430:	andeq	r0, r0, r0, ror #15
    b434:	andeq	r0, r0, r0, ror #15
    b438:	andeq	r0, r0, r0, ror #15
    b43c:	andeq	r0, r0, r0, ror #15
    b440:	andeq	r0, r0, r0, ror #15
    b444:	andeq	r0, r0, r0, ror #15
    b448:	andeq	r0, r0, r0, ror #15
    b44c:	ldrdeq	r0, [r0], -ip
    b450:	ldrdeq	r0, [r0], -ip
    b454:	ldrdeq	r0, [r0], -ip
    b458:	ldrdeq	r0, [r0], -ip
    b45c:	andeq	r0, r0, r0, ror #15
    b460:	andeq	r0, r0, r0, ror #15
    b464:	andeq	r0, r0, r0, ror #15
    b468:	andeq	r0, r0, r0, ror #15
    b46c:	andeq	r0, r0, r0, ror #15
    b470:	andeq	r0, r0, r0, ror #15
    b474:	andeq	r0, r0, r0, ror #15
    b478:	andeq	r0, r0, r0, ror #15
    b47c:	andeq	r0, r0, r0, ror #15
    b480:	andeq	r0, r0, r0, ror #15
    b484:	andeq	r0, r0, r0, ror #15
    b488:	andeq	r0, r0, r0, ror #15
    b48c:	andeq	r0, r0, r0, ror #15
    b490:	andeq	r0, r0, r0, ror #15
    b494:	andeq	r0, r0, r0, ror #15
    b498:	andeq	r0, r0, r0, ror #15
    b49c:	andeq	r0, r0, r0, ror #15
    b4a0:	andeq	r0, r0, r0, ror #15
    b4a4:	andeq	r0, r0, r0, ror #15
    b4a8:	andeq	r0, r0, r0, ror #15
    b4ac:	andeq	r0, r0, r0, ror #15
    b4b0:	andeq	r0, r0, r0, ror #15
    b4b4:	andeq	r0, r0, r0, ror #15
    b4b8:	andeq	r0, r0, r0, ror #15
    b4bc:	andeq	r0, r0, r0, ror #15
    b4c0:	andeq	r0, r0, r0, ror #15
    b4c4:	andeq	r0, r0, r0, ror #15
    b4c8:	andeq	r0, r0, r0, ror #15
    b4cc:	andeq	r0, r0, r0, ror #15
    b4d0:	andeq	r0, r0, r0, ror #15
    b4d4:	andeq	r0, r0, r0, ror #15
    b4d8:	andeq	r0, r0, r0, ror #15
    b4dc:	andeq	r0, r0, r0, ror #15
    b4e0:	andeq	r0, r0, r0, ror #15
    b4e4:	andeq	r0, r0, r0, ror #15
    b4e8:	andeq	r0, r0, r0, ror #15
    b4ec:	andeq	r0, r0, r0, ror #15
    b4f0:	andeq	r0, r0, r0, ror #15
    b4f4:	andeq	r0, r0, r0, ror #15
    b4f8:	andeq	r0, r0, r0, ror #15
    b4fc:	andeq	r0, r0, r0, ror #15
    b500:	andeq	r0, r0, r0, ror #15
    b504:	andeq	r0, r0, r0, ror #15
    b508:	andeq	r0, r0, r0, ror #15
    b50c:	andeq	r0, r0, r0, ror #15
    b510:	andeq	r0, r0, r0, ror #15
    b514:	andeq	r0, r0, r0, ror #15
    b518:	andeq	r0, r0, r0, ror #15
    b51c:	andeq	r0, r0, r0, ror #15
    b520:	andeq	r0, r0, r0, ror #15
    b524:	andeq	r0, r0, r0, ror #15
    b528:	andeq	r0, r0, r0, ror #15
    b52c:	andeq	r0, r0, r0, ror #15
    b530:	andeq	r0, r0, r0, ror #15
    b534:	andeq	r0, r0, r0, ror #15
    b538:	andeq	r0, r0, r0, ror #15
    b53c:	andeq	r0, r0, r0, ror #15
    b540:	andeq	r0, r0, r0, ror #15
    b544:	andeq	r0, r0, r0, ror #15
    b548:	andeq	r0, r0, r0, ror #15
    b54c:	andeq	r0, r0, r0, ror #15
    b550:	andeq	r0, r0, r0, ror #15
    b554:	andeq	r0, r0, r0, ror #15
    b558:	andeq	r0, r0, r0, ror #15
    b55c:	andeq	r0, r0, r0, ror #15
    b560:	andeq	r0, r0, r0, ror #15
    b564:	andeq	r0, r0, r0, ror #15
    b568:	andeq	r0, r0, r0, ror #15
    b56c:	andeq	r0, r0, r0, ror #15
    b570:	andeq	r0, r0, r0, ror #15
    b574:	andeq	r0, r0, r0, ror #15
    b578:	andeq	r0, r0, r0, ror #15
    b57c:	andeq	r0, r0, r0, ror #15
    b580:	andeq	r0, r0, r0, ror #15
    b584:	andeq	r0, r0, r0, ror #15
    b588:	andeq	r0, r0, r0, ror #15
    b58c:	andeq	r0, r0, r0, ror #15
    b590:	andeq	r0, r0, r0, ror #15
    b594:	andeq	r0, r0, r0, ror #15
    b598:	andeq	r0, r0, r0, ror #15
    b59c:	andeq	r0, r0, r0, ror #15
    b5a0:	andeq	r0, r0, r0, ror #15
    b5a4:	andeq	r0, r0, r0, ror #15
    b5a8:	andeq	r0, r0, r0, ror #15
    b5ac:	andeq	r0, r0, r0, ror #15
    b5b0:	andeq	r0, r0, r0, ror #15
    b5b4:	andeq	r0, r0, r0, ror #15
    b5b8:	andeq	r0, r0, r0, ror #15
    b5bc:	andeq	r0, r0, r0, ror #15
    b5c0:	andeq	r0, r0, r0, ror #15
    b5c4:	andeq	r0, r0, r0, ror #15
    b5c8:	andeq	r0, r0, r0, ror #15
    b5cc:	andeq	r0, r0, r0, ror #15
    b5d0:	andeq	r0, r0, r0, ror #15
    b5d4:	andeq	r0, r0, r0, ror #15
    b5d8:	andeq	r0, r0, r0, ror #15
    b5dc:	andeq	r0, r0, r0, ror #15
    b5e0:	andeq	r0, r0, r0, ror #15
    b5e4:	andeq	r0, r0, r0, ror #15
    b5e8:	andeq	r0, r0, r0, ror #15
    b5ec:	andeq	r0, r0, r0, ror #15
    b5f0:	andeq	r0, r0, r0, ror #15
    b5f4:	andeq	r0, r0, r0, ror #15
    b5f8:	andeq	r0, r0, r0, ror #15
    b5fc:	andeq	r0, r0, r0, ror #15
    b600:	andeq	r0, r0, r0, ror #15
    b604:	andeq	r0, r0, r0, ror #15
    b608:	andeq	r0, r0, r0, ror #15
    b60c:	andeq	r0, r0, r0, ror #15
    b610:	andeq	r0, r0, r0, ror #15
    b614:	andeq	r0, r0, r0, ror #15
    b618:	andeq	r0, r0, r0, ror #15
    b61c:	andeq	r0, r0, r0, ror #15
    b620:	andeq	r0, r0, r0, ror #15
    b624:	andeq	r0, r0, r0, ror #15
    b628:	andeq	r0, r0, r0, ror #15
    b62c:	andeq	r0, r0, r0, ror #15
    b630:	andeq	r0, r0, r0, ror #15
    b634:	andeq	r0, r0, r0, ror #15
    b638:	andeq	r0, r0, r0, ror #15
    b63c:	andeq	r0, r0, r0, ror #15
    b640:	andeq	r0, r0, r0, ror #15
    b644:	andeq	r0, r0, r0, ror #15
    b648:	andeq	r0, r0, r0, ror #15
    b64c:	andeq	r0, r0, r0, ror #15
    b650:	andeq	r0, r0, r0, ror #15
    b654:	ldrdeq	r0, [r0], -ip
    b658:	cmp	r3, #2432	; 0x980
    b65c:	bge	b728 <lell_packet_is_data@@Base+0x1090>
    b660:	movw	r1, #2036	; 0x7f4
    b664:	sub	r1, r3, r1
    b668:	cmp	r1, #28
    b66c:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b670:	movw	r1, #2302	; 0x8fe
    b674:	sub	r1, r3, r1
    b678:	cmp	r1, #4
    b67c:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b680:	cmp	r3, #2176	; 0x880
    b684:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b688:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b68c:	andeq	r8, r0, r5, asr #30
    b690:	ldrdeq	r8, [r0], -lr
    b694:	cmp	r3, #1152	; 0x480
    b698:	bge	b6f8 <lell_packet_is_data@@Base+0x1060>
    b69c:	sub	r1, r3, #1016	; 0x3f8
    b6a0:	cmp	r1, #15
    b6a4:	bhi	b6b0 <lell_packet_is_data@@Base+0x1018>
    b6a8:	cmp	r1, #9
    b6ac:	bne	b830 <lell_packet_is_data@@Base+0x1198>
    b6b0:	movw	r1, #766	; 0x2fe
    b6b4:	sub	r1, r3, r1
    b6b8:	cmp	r1, #4
    b6bc:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b6c0:	cmp	r3, #896	; 0x380
    b6c4:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b6c8:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b6cc:	cmp	r3, #4064	; 0xfe0
    b6d0:	blt	b810 <lell_packet_is_data@@Base+0x1178>
    b6d4:	sub	r1, r3, #4064	; 0xfe0
    b6d8:	cmp	r1, #31
    b6dc:	bhi	b834 <lell_packet_is_data@@Base+0x119c>
    b6e0:	movw	r6, #1
    b6e4:	mov	r3, #1
    b6e8:	movt	r6, #65535	; 0xffff
    b6ec:	tst	r6, r3, lsl r1
    b6f0:	addne	r0, r0, #1
    b6f4:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b6f8:	movw	r1, #1531	; 0x5fb
    b6fc:	cmp	r3, r1
    b700:	ble	b7c8 <lell_packet_is_data@@Base+0x1130>
    b704:	cmp	r3, #1664	; 0x680
    b708:	bge	b7ec <lell_packet_is_data@@Base+0x1154>
    b70c:	movw	r1, #1532	; 0x5fc
    b710:	sub	r1, r3, r1
    b714:	cmp	r1, #7
    b718:	bhi	b834 <lell_packet_is_data@@Base+0x119c>
    b71c:	cmp	r1, #4
    b720:	bne	b830 <lell_packet_is_data@@Base+0x1198>
    b724:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b728:	cmp	r3, #2688	; 0xa80
    b72c:	bge	b784 <lell_packet_is_data@@Base+0x10ec>
    b730:	movw	r1, #2556	; 0x9fc
    b734:	sub	r1, r3, r1
    b738:	cmp	r1, #7
    b73c:	bhi	b748 <lell_packet_is_data@@Base+0x10b0>
    b740:	cmp	r1, #4
    b744:	bne	b830 <lell_packet_is_data@@Base+0x1198>
    b748:	cmp	r3, #2432	; 0x980
    b74c:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b750:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b754:	andeq	r8, r0, r9, asr #31
    b758:	movw	r1, #3580	; 0xdfc
    b75c:	sub	r1, r3, r1
    b760:	cmp	r1, #8
    b764:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b768:	movw	r1, #3326	; 0xcfe
    b76c:	sub	r1, r3, r1
    b770:	cmp	r1, #4
    b774:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b778:	cmp	r3, #3456	; 0xd80
    b77c:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b780:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b784:	movw	r1, #2814	; 0xafe
    b788:	sub	r1, r3, r1
    b78c:	cmp	r1, #4
    b790:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b794:	cmp	r3, #2688	; 0xa80
    b798:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b79c:	cmp	r3, #2944	; 0xb80
    b7a0:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b7a4:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b7a8:	sub	r1, r3, #508	; 0x1fc
    b7ac:	cmp	r1, #7
    b7b0:	bhi	b7bc <lell_packet_is_data@@Base+0x1124>
    b7b4:	cmp	r1, #4
    b7b8:	bne	b830 <lell_packet_is_data@@Base+0x1198>
    b7bc:	cmp	r3, #640	; 0x280
    b7c0:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b7c4:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b7c8:	movw	r1, #1278	; 0x4fe
    b7cc:	sub	r1, r3, r1
    b7d0:	cmp	r1, #4
    b7d4:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b7d8:	cmp	r3, #1152	; 0x480
    b7dc:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b7e0:	cmp	r3, #1408	; 0x580
    b7e4:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b7e8:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b7ec:	movw	r1, #1790	; 0x6fe
    b7f0:	sub	r1, r3, r1
    b7f4:	cmp	r1, #4
    b7f8:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b7fc:	cmp	r3, #1664	; 0x680
    b800:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b804:	cmp	r3, #1920	; 0x780
    b808:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b80c:	b	b834 <lell_packet_is_data@@Base+0x119c>
    b810:	movw	r1, #3838	; 0xefe
    b814:	sub	r1, r3, r1
    b818:	cmp	r1, #4
    b81c:	bcc	b830 <lell_packet_is_data@@Base+0x1198>
    b820:	cmp	r3, #3712	; 0xe80
    b824:	beq	b830 <lell_packet_is_data@@Base+0x1198>
    b828:	cmp	r3, #3968	; 0xf80
    b82c:	bne	b834 <lell_packet_is_data@@Base+0x119c>
    b830:	add	r0, r0, #1
    b834:	bfc	r2, #12, #20
    b838:	movw	r1, #2035	; 0x7f3
    b83c:	cmp	r2, r1
    b840:	ble	b880 <lell_packet_is_data@@Base+0x11e8>
    b844:	movw	r1, #3063	; 0xbf7
    b848:	cmp	r2, r1
    b84c:	ble	bea4 <lell_packet_is_data@@Base+0x180c>
    b850:	cmp	r2, #3712	; 0xe80
    b854:	bge	bf10 <lell_packet_is_data@@Base+0x1878>
    b858:	movw	r1, #3325	; 0xcfd
    b85c:	cmp	r2, r1
    b860:	bgt	bf98 <lell_packet_is_data@@Base+0x1900>
    b864:	movw	r1, #3064	; 0xbf8
    b868:	sub	r1, r2, r1
    b86c:	cmp	r1, #16
    b870:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    b874:	cmp	r2, #3200	; 0xc80
    b878:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    b87c:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    b880:	movw	r1, #765	; 0x2fd
    b884:	cmp	r2, r1
    b888:	bgt	bed8 <lell_packet_is_data@@Base+0x1840>
    b88c:	cmp	r2, #384	; 0x180
    b890:	bhi	bfe8 <lell_packet_is_data@@Base+0x1950>
    b894:	add	r1, pc, #4
    b898:	ldr	r2, [r1, r2, lsl #2]
    b89c:	add	pc, r1, r2
    b8a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b8fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b900:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b904:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b908:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b90c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b910:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b914:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b918:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b91c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b920:	ldrdeq	r0, [r0], -r4
    b924:	ldrdeq	r0, [r0], -r4
    b928:	ldrdeq	r0, [r0], -r4
    b92c:	ldrdeq	r0, [r0], -r4
    b930:	ldrdeq	r0, [r0], -r4
    b934:	ldrdeq	r0, [r0], -r4
    b938:	ldrdeq	r0, [r0], -r4
    b93c:	ldrdeq	r0, [r0], -r4
    b940:	ldrdeq	r0, [r0], -r4
    b944:	ldrdeq	r0, [r0], -r4
    b948:	ldrdeq	r0, [r0], -r4
    b94c:	ldrdeq	r0, [r0], -r4
    b950:	ldrdeq	r0, [r0], -r4
    b954:	ldrdeq	r0, [r0], -r4
    b958:	ldrdeq	r0, [r0], -r4
    b95c:	ldrdeq	r0, [r0], -r4
    b960:	ldrdeq	r0, [r0], -r4
    b964:	ldrdeq	r0, [r0], -r4
    b968:	ldrdeq	r0, [r0], -r4
    b96c:	ldrdeq	r0, [r0], -r4
    b970:	ldrdeq	r0, [r0], -r4
    b974:	ldrdeq	r0, [r0], -r4
    b978:	ldrdeq	r0, [r0], -r4
    b97c:	ldrdeq	r0, [r0], -r4
    b980:	ldrdeq	r0, [r0], -r4
    b984:	ldrdeq	r0, [r0], -r4
    b988:	ldrdeq	r0, [r0], -r4
    b98c:	ldrdeq	r0, [r0], -r4
    b990:	ldrdeq	r0, [r0], -r4
    b994:	ldrdeq	r0, [r0], -r4
    b998:	ldrdeq	r0, [r0], -r4
    b99c:	ldrdeq	r0, [r0], -r4
    b9a0:	ldrdeq	r0, [r0], -r4
    b9a4:	ldrdeq	r0, [r0], -r4
    b9a8:	ldrdeq	r0, [r0], -r4
    b9ac:	ldrdeq	r0, [r0], -r4
    b9b0:	ldrdeq	r0, [r0], -r4
    b9b4:	ldrdeq	r0, [r0], -r4
    b9b8:	ldrdeq	r0, [r0], -r4
    b9bc:	ldrdeq	r0, [r0], -r4
    b9c0:	ldrdeq	r0, [r0], -r4
    b9c4:	ldrdeq	r0, [r0], -r4
    b9c8:	ldrdeq	r0, [r0], -r4
    b9cc:	ldrdeq	r0, [r0], -r4
    b9d0:	ldrdeq	r0, [r0], -r4
    b9d4:	ldrdeq	r0, [r0], -r4
    b9d8:	ldrdeq	r0, [r0], -r4
    b9dc:	ldrdeq	r0, [r0], -r4
    b9e0:	ldrdeq	r0, [r0], -r4
    b9e4:	ldrdeq	r0, [r0], -r4
    b9e8:	ldrdeq	r0, [r0], -r4
    b9ec:	ldrdeq	r0, [r0], -r4
    b9f0:	ldrdeq	r0, [r0], -r4
    b9f4:	ldrdeq	r0, [r0], -r4
    b9f8:	ldrdeq	r0, [r0], -r4
    b9fc:	ldrdeq	r0, [r0], -r4
    ba00:	ldrdeq	r0, [r0], -r4
    ba04:	ldrdeq	r0, [r0], -r4
    ba08:	ldrdeq	r0, [r0], -r4
    ba0c:	ldrdeq	r0, [r0], -r4
    ba10:	ldrdeq	r0, [r0], -r4
    ba14:	ldrdeq	r0, [r0], -r4
    ba18:	ldrdeq	r0, [r0], -r4
    ba1c:	ldrdeq	r0, [r0], -r4
    ba20:	ldrdeq	r0, [r0], -r4
    ba24:	ldrdeq	r0, [r0], -r4
    ba28:	ldrdeq	r0, [r0], -r4
    ba2c:	ldrdeq	r0, [r0], -r4
    ba30:	ldrdeq	r0, [r0], -r4
    ba34:	ldrdeq	r0, [r0], -r4
    ba38:	ldrdeq	r0, [r0], -r4
    ba3c:	ldrdeq	r0, [r0], -r4
    ba40:	ldrdeq	r0, [r0], -r4
    ba44:	ldrdeq	r0, [r0], -r4
    ba48:	ldrdeq	r0, [r0], -r4
    ba4c:	ldrdeq	r0, [r0], -r4
    ba50:	ldrdeq	r0, [r0], -r4
    ba54:	ldrdeq	r0, [r0], -r4
    ba58:	ldrdeq	r0, [r0], -r4
    ba5c:	ldrdeq	r0, [r0], -r4
    ba60:	ldrdeq	r0, [r0], -r4
    ba64:	ldrdeq	r0, [r0], -r4
    ba68:	ldrdeq	r0, [r0], -r4
    ba6c:	ldrdeq	r0, [r0], -r4
    ba70:	ldrdeq	r0, [r0], -r4
    ba74:	ldrdeq	r0, [r0], -r4
    ba78:	ldrdeq	r0, [r0], -r4
    ba7c:	ldrdeq	r0, [r0], -r4
    ba80:	ldrdeq	r0, [r0], -r4
    ba84:	ldrdeq	r0, [r0], -r4
    ba88:	ldrdeq	r0, [r0], -r4
    ba8c:	ldrdeq	r0, [r0], -r4
    ba90:	ldrdeq	r0, [r0], -r4
    ba94:	ldrdeq	r0, [r0], -r4
    ba98:	ldrdeq	r0, [r0], -r4
    ba9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    baa0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    baa4:	ldrdeq	r0, [r0], -r4
    baa8:	ldrdeq	r0, [r0], -r4
    baac:	ldrdeq	r0, [r0], -r4
    bab0:	ldrdeq	r0, [r0], -r4
    bab4:	ldrdeq	r0, [r0], -r4
    bab8:	ldrdeq	r0, [r0], -r4
    babc:	ldrdeq	r0, [r0], -r4
    bac0:	ldrdeq	r0, [r0], -r4
    bac4:	ldrdeq	r0, [r0], -r4
    bac8:	ldrdeq	r0, [r0], -r4
    bacc:	ldrdeq	r0, [r0], -r4
    bad0:	ldrdeq	r0, [r0], -r4
    bad4:	ldrdeq	r0, [r0], -r4
    bad8:	ldrdeq	r0, [r0], -r4
    badc:	ldrdeq	r0, [r0], -r4
    bae0:	ldrdeq	r0, [r0], -r4
    bae4:	ldrdeq	r0, [r0], -r4
    bae8:	ldrdeq	r0, [r0], -r4
    baec:	ldrdeq	r0, [r0], -r4
    baf0:	ldrdeq	r0, [r0], -r4
    baf4:	ldrdeq	r0, [r0], -r4
    baf8:	ldrdeq	r0, [r0], -r4
    bafc:	ldrdeq	r0, [r0], -r4
    bb00:	ldrdeq	r0, [r0], -r4
    bb04:	ldrdeq	r0, [r0], -r4
    bb08:	ldrdeq	r0, [r0], -r4
    bb0c:	ldrdeq	r0, [r0], -r4
    bb10:	ldrdeq	r0, [r0], -r4
    bb14:	ldrdeq	r0, [r0], -r4
    bb18:	ldrdeq	r0, [r0], -r4
    bb1c:	ldrdeq	r0, [r0], -r4
    bb20:	ldrdeq	r0, [r0], -r4
    bb24:	ldrdeq	r0, [r0], -r4
    bb28:	ldrdeq	r0, [r0], -r4
    bb2c:	ldrdeq	r0, [r0], -r4
    bb30:	ldrdeq	r0, [r0], -r4
    bb34:	ldrdeq	r0, [r0], -r4
    bb38:	ldrdeq	r0, [r0], -r4
    bb3c:	ldrdeq	r0, [r0], -r4
    bb40:	ldrdeq	r0, [r0], -r4
    bb44:	ldrdeq	r0, [r0], -r4
    bb48:	ldrdeq	r0, [r0], -r4
    bb4c:	ldrdeq	r0, [r0], -r4
    bb50:	ldrdeq	r0, [r0], -r4
    bb54:	ldrdeq	r0, [r0], -r4
    bb58:	ldrdeq	r0, [r0], -r4
    bb5c:	ldrdeq	r0, [r0], -r4
    bb60:	ldrdeq	r0, [r0], -r4
    bb64:	ldrdeq	r0, [r0], -r4
    bb68:	ldrdeq	r0, [r0], -r4
    bb6c:	ldrdeq	r0, [r0], -r4
    bb70:	ldrdeq	r0, [r0], -r4
    bb74:	ldrdeq	r0, [r0], -r4
    bb78:	ldrdeq	r0, [r0], -r4
    bb7c:	ldrdeq	r0, [r0], -r4
    bb80:	ldrdeq	r0, [r0], -r4
    bb84:	ldrdeq	r0, [r0], -r4
    bb88:	ldrdeq	r0, [r0], -r4
    bb8c:	ldrdeq	r0, [r0], -r4
    bb90:	ldrdeq	r0, [r0], -r4
    bb94:	ldrdeq	r0, [r0], -r4
    bb98:	ldrdeq	r0, [r0], -r4
    bb9c:	ldrdeq	r0, [r0], -r4
    bba0:	ldrdeq	r0, [r0], -r4
    bba4:	ldrdeq	r0, [r0], -r4
    bba8:	ldrdeq	r0, [r0], -r4
    bbac:	ldrdeq	r0, [r0], -r4
    bbb0:	ldrdeq	r0, [r0], -r4
    bbb4:	ldrdeq	r0, [r0], -r4
    bbb8:	ldrdeq	r0, [r0], -r4
    bbbc:	ldrdeq	r0, [r0], -r4
    bbc0:	ldrdeq	r0, [r0], -r4
    bbc4:	ldrdeq	r0, [r0], -r4
    bbc8:	ldrdeq	r0, [r0], -r4
    bbcc:	ldrdeq	r0, [r0], -r4
    bbd0:	ldrdeq	r0, [r0], -r4
    bbd4:	ldrdeq	r0, [r0], -r4
    bbd8:	ldrdeq	r0, [r0], -r4
    bbdc:	ldrdeq	r0, [r0], -r4
    bbe0:	ldrdeq	r0, [r0], -r4
    bbe4:	ldrdeq	r0, [r0], -r4
    bbe8:	ldrdeq	r0, [r0], -r4
    bbec:	ldrdeq	r0, [r0], -r4
    bbf0:	ldrdeq	r0, [r0], -r4
    bbf4:	ldrdeq	r0, [r0], -r4
    bbf8:	ldrdeq	r0, [r0], -r4
    bbfc:	ldrdeq	r0, [r0], -r4
    bc00:	ldrdeq	r0, [r0], -r4
    bc04:	ldrdeq	r0, [r0], -r4
    bc08:	ldrdeq	r0, [r0], -r4
    bc0c:	ldrdeq	r0, [r0], -r4
    bc10:	ldrdeq	r0, [r0], -r4
    bc14:	ldrdeq	r0, [r0], -r4
    bc18:	ldrdeq	r0, [r0], -r4
    bc1c:	ldrdeq	r0, [r0], -r4
    bc20:	ldrdeq	r0, [r0], -r4
    bc24:	ldrdeq	r0, [r0], -r4
    bc28:	ldrdeq	r0, [r0], -r4
    bc2c:	ldrdeq	r0, [r0], -r4
    bc30:	ldrdeq	r0, [r0], -r4
    bc34:	ldrdeq	r0, [r0], -r4
    bc38:	ldrdeq	r0, [r0], -r4
    bc3c:	ldrdeq	r0, [r0], -r4
    bc40:	ldrdeq	r0, [r0], -r4
    bc44:	ldrdeq	r0, [r0], -r4
    bc48:	ldrdeq	r0, [r0], -r4
    bc4c:	ldrdeq	r0, [r0], -r4
    bc50:	ldrdeq	r0, [r0], -r4
    bc54:	ldrdeq	r0, [r0], -r4
    bc58:	ldrdeq	r0, [r0], -r4
    bc5c:	ldrdeq	r0, [r0], -r4
    bc60:	ldrdeq	r0, [r0], -r4
    bc64:	ldrdeq	r0, [r0], -r4
    bc68:	ldrdeq	r0, [r0], -r4
    bc6c:	ldrdeq	r0, [r0], -r4
    bc70:	ldrdeq	r0, [r0], -r4
    bc74:	ldrdeq	r0, [r0], -r4
    bc78:	ldrdeq	r0, [r0], -r4
    bc7c:	ldrdeq	r0, [r0], -r4
    bc80:	ldrdeq	r0, [r0], -r4
    bc84:	ldrdeq	r0, [r0], -r4
    bc88:	ldrdeq	r0, [r0], -r4
    bc8c:	ldrdeq	r0, [r0], -r4
    bc90:	ldrdeq	r0, [r0], -r4
    bc94:	ldrdeq	r0, [r0], -r4
    bc98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bc9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bca0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bca4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bca8:	ldrdeq	r0, [r0], -r4
    bcac:	ldrdeq	r0, [r0], -r4
    bcb0:	ldrdeq	r0, [r0], -r4
    bcb4:	ldrdeq	r0, [r0], -r4
    bcb8:	ldrdeq	r0, [r0], -r4
    bcbc:	ldrdeq	r0, [r0], -r4
    bcc0:	ldrdeq	r0, [r0], -r4
    bcc4:	ldrdeq	r0, [r0], -r4
    bcc8:	ldrdeq	r0, [r0], -r4
    bccc:	ldrdeq	r0, [r0], -r4
    bcd0:	ldrdeq	r0, [r0], -r4
    bcd4:	ldrdeq	r0, [r0], -r4
    bcd8:	ldrdeq	r0, [r0], -r4
    bcdc:	ldrdeq	r0, [r0], -r4
    bce0:	ldrdeq	r0, [r0], -r4
    bce4:	ldrdeq	r0, [r0], -r4
    bce8:	ldrdeq	r0, [r0], -r4
    bcec:	ldrdeq	r0, [r0], -r4
    bcf0:	ldrdeq	r0, [r0], -r4
    bcf4:	ldrdeq	r0, [r0], -r4
    bcf8:	ldrdeq	r0, [r0], -r4
    bcfc:	ldrdeq	r0, [r0], -r4
    bd00:	ldrdeq	r0, [r0], -r4
    bd04:	ldrdeq	r0, [r0], -r4
    bd08:	ldrdeq	r0, [r0], -r4
    bd0c:	ldrdeq	r0, [r0], -r4
    bd10:	ldrdeq	r0, [r0], -r4
    bd14:	ldrdeq	r0, [r0], -r4
    bd18:	ldrdeq	r0, [r0], -r4
    bd1c:	ldrdeq	r0, [r0], -r4
    bd20:	ldrdeq	r0, [r0], -r4
    bd24:	ldrdeq	r0, [r0], -r4
    bd28:	ldrdeq	r0, [r0], -r4
    bd2c:	ldrdeq	r0, [r0], -r4
    bd30:	ldrdeq	r0, [r0], -r4
    bd34:	ldrdeq	r0, [r0], -r4
    bd38:	ldrdeq	r0, [r0], -r4
    bd3c:	ldrdeq	r0, [r0], -r4
    bd40:	ldrdeq	r0, [r0], -r4
    bd44:	ldrdeq	r0, [r0], -r4
    bd48:	ldrdeq	r0, [r0], -r4
    bd4c:	ldrdeq	r0, [r0], -r4
    bd50:	ldrdeq	r0, [r0], -r4
    bd54:	ldrdeq	r0, [r0], -r4
    bd58:	ldrdeq	r0, [r0], -r4
    bd5c:	ldrdeq	r0, [r0], -r4
    bd60:	ldrdeq	r0, [r0], -r4
    bd64:	ldrdeq	r0, [r0], -r4
    bd68:	ldrdeq	r0, [r0], -r4
    bd6c:	ldrdeq	r0, [r0], -r4
    bd70:	ldrdeq	r0, [r0], -r4
    bd74:	ldrdeq	r0, [r0], -r4
    bd78:	ldrdeq	r0, [r0], -r4
    bd7c:	ldrdeq	r0, [r0], -r4
    bd80:	ldrdeq	r0, [r0], -r4
    bd84:	ldrdeq	r0, [r0], -r4
    bd88:	ldrdeq	r0, [r0], -r4
    bd8c:	ldrdeq	r0, [r0], -r4
    bd90:	ldrdeq	r0, [r0], -r4
    bd94:	ldrdeq	r0, [r0], -r4
    bd98:	ldrdeq	r0, [r0], -r4
    bd9c:	ldrdeq	r0, [r0], -r4
    bda0:	ldrdeq	r0, [r0], -r4
    bda4:	ldrdeq	r0, [r0], -r4
    bda8:	ldrdeq	r0, [r0], -r4
    bdac:	ldrdeq	r0, [r0], -r4
    bdb0:	ldrdeq	r0, [r0], -r4
    bdb4:	ldrdeq	r0, [r0], -r4
    bdb8:	ldrdeq	r0, [r0], -r4
    bdbc:	ldrdeq	r0, [r0], -r4
    bdc0:	ldrdeq	r0, [r0], -r4
    bdc4:	ldrdeq	r0, [r0], -r4
    bdc8:	ldrdeq	r0, [r0], -r4
    bdcc:	ldrdeq	r0, [r0], -r4
    bdd0:	ldrdeq	r0, [r0], -r4
    bdd4:	ldrdeq	r0, [r0], -r4
    bdd8:	ldrdeq	r0, [r0], -r4
    bddc:	ldrdeq	r0, [r0], -r4
    bde0:	ldrdeq	r0, [r0], -r4
    bde4:	ldrdeq	r0, [r0], -r4
    bde8:	ldrdeq	r0, [r0], -r4
    bdec:	ldrdeq	r0, [r0], -r4
    bdf0:	ldrdeq	r0, [r0], -r4
    bdf4:	ldrdeq	r0, [r0], -r4
    bdf8:	ldrdeq	r0, [r0], -r4
    bdfc:	ldrdeq	r0, [r0], -r4
    be00:	ldrdeq	r0, [r0], -r4
    be04:	ldrdeq	r0, [r0], -r4
    be08:	ldrdeq	r0, [r0], -r4
    be0c:	ldrdeq	r0, [r0], -r4
    be10:	ldrdeq	r0, [r0], -r4
    be14:	ldrdeq	r0, [r0], -r4
    be18:	ldrdeq	r0, [r0], -r4
    be1c:	ldrdeq	r0, [r0], -r4
    be20:	ldrdeq	r0, [r0], -r4
    be24:	ldrdeq	r0, [r0], -r4
    be28:	ldrdeq	r0, [r0], -r4
    be2c:	ldrdeq	r0, [r0], -r4
    be30:	ldrdeq	r0, [r0], -r4
    be34:	ldrdeq	r0, [r0], -r4
    be38:	ldrdeq	r0, [r0], -r4
    be3c:	ldrdeq	r0, [r0], -r4
    be40:	ldrdeq	r0, [r0], -r4
    be44:	ldrdeq	r0, [r0], -r4
    be48:	ldrdeq	r0, [r0], -r4
    be4c:	ldrdeq	r0, [r0], -r4
    be50:	ldrdeq	r0, [r0], -r4
    be54:	ldrdeq	r0, [r0], -r4
    be58:	ldrdeq	r0, [r0], -r4
    be5c:	ldrdeq	r0, [r0], -r4
    be60:	ldrdeq	r0, [r0], -r4
    be64:	ldrdeq	r0, [r0], -r4
    be68:	ldrdeq	r0, [r0], -r4
    be6c:	ldrdeq	r0, [r0], -r4
    be70:	ldrdeq	r0, [r0], -r4
    be74:	ldrdeq	r0, [r0], -r4
    be78:	ldrdeq	r0, [r0], -r4
    be7c:	ldrdeq	r0, [r0], -r4
    be80:	ldrdeq	r0, [r0], -r4
    be84:	ldrdeq	r0, [r0], -r4
    be88:	ldrdeq	r0, [r0], -r4
    be8c:	ldrdeq	r0, [r0], -r4
    be90:	ldrdeq	r0, [r0], -r4
    be94:	ldrdeq	r0, [r0], -r4
    be98:	ldrdeq	r0, [r0], -r4
    be9c:	ldrdeq	r0, [r0], -r4
    bea0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bea4:	cmp	r2, #2432	; 0x980
    bea8:	bge	bf6c <lell_packet_is_data@@Base+0x18d4>
    beac:	movw	r1, #2036	; 0x7f4
    beb0:	sub	r1, r2, r1
    beb4:	cmp	r1, #28
    beb8:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    bebc:	movw	r1, #2302	; 0x8fe
    bec0:	sub	r1, r2, r1
    bec4:	cmp	r1, #4
    bec8:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    becc:	cmp	r2, #2176	; 0x880
    bed0:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    bed4:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    bed8:	cmp	r2, #1152	; 0x480
    bedc:	bge	bf3c <lell_packet_is_data@@Base+0x18a4>
    bee0:	sub	r1, r2, #1016	; 0x3f8
    bee4:	cmp	r1, #15
    bee8:	bhi	bef4 <lell_packet_is_data@@Base+0x185c>
    beec:	cmp	r1, #9
    bef0:	bne	c070 <lell_packet_is_data@@Base+0x19d8>
    bef4:	movw	r1, #766	; 0x2fe
    bef8:	sub	r1, r2, r1
    befc:	cmp	r1, #4
    bf00:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    bf04:	cmp	r2, #896	; 0x380
    bf08:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    bf0c:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    bf10:	cmp	r2, #4064	; 0xfe0
    bf14:	blt	c050 <lell_packet_is_data@@Base+0x19b8>
    bf18:	sub	r1, r2, #4064	; 0xfe0
    bf1c:	cmp	r1, #31
    bf20:	bhi	c074 <lell_packet_is_data@@Base+0x19dc>
    bf24:	movw	r3, #1
    bf28:	mov	r2, #1
    bf2c:	movt	r3, #65535	; 0xffff
    bf30:	tst	r3, r2, lsl r1
    bf34:	addne	r0, r0, #1
    bf38:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    bf3c:	movw	r1, #1531	; 0x5fb
    bf40:	cmp	r2, r1
    bf44:	ble	c008 <lell_packet_is_data@@Base+0x1970>
    bf48:	cmp	r2, #1664	; 0x680
    bf4c:	bge	c02c <lell_packet_is_data@@Base+0x1994>
    bf50:	movw	r1, #1532	; 0x5fc
    bf54:	sub	r1, r2, r1
    bf58:	cmp	r1, #7
    bf5c:	bhi	c074 <lell_packet_is_data@@Base+0x19dc>
    bf60:	cmp	r1, #4
    bf64:	bne	c070 <lell_packet_is_data@@Base+0x19d8>
    bf68:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    bf6c:	cmp	r2, #2688	; 0xa80
    bf70:	bge	bfc4 <lell_packet_is_data@@Base+0x192c>
    bf74:	movw	r1, #2556	; 0x9fc
    bf78:	sub	r1, r2, r1
    bf7c:	cmp	r1, #7
    bf80:	bhi	bf8c <lell_packet_is_data@@Base+0x18f4>
    bf84:	cmp	r1, #4
    bf88:	bne	c070 <lell_packet_is_data@@Base+0x19d8>
    bf8c:	cmp	r2, #2432	; 0x980
    bf90:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    bf94:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    bf98:	movw	r1, #3580	; 0xdfc
    bf9c:	sub	r1, r2, r1
    bfa0:	cmp	r1, #8
    bfa4:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    bfa8:	movw	r1, #3326	; 0xcfe
    bfac:	sub	r1, r2, r1
    bfb0:	cmp	r1, #4
    bfb4:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    bfb8:	cmp	r2, #3456	; 0xd80
    bfbc:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    bfc0:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    bfc4:	movw	r1, #2814	; 0xafe
    bfc8:	sub	r1, r2, r1
    bfcc:	cmp	r1, #4
    bfd0:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    bfd4:	cmp	r2, #2688	; 0xa80
    bfd8:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    bfdc:	cmp	r2, #2944	; 0xb80
    bfe0:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    bfe4:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    bfe8:	sub	r1, r2, #508	; 0x1fc
    bfec:	cmp	r1, #7
    bff0:	bhi	bffc <lell_packet_is_data@@Base+0x1964>
    bff4:	cmp	r1, #4
    bff8:	bne	c070 <lell_packet_is_data@@Base+0x19d8>
    bffc:	cmp	r2, #640	; 0x280
    c000:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    c004:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    c008:	movw	r1, #1278	; 0x4fe
    c00c:	sub	r1, r2, r1
    c010:	cmp	r1, #4
    c014:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    c018:	cmp	r2, #1152	; 0x480
    c01c:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    c020:	cmp	r2, #1408	; 0x580
    c024:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    c028:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    c02c:	movw	r1, #1790	; 0x6fe
    c030:	sub	r1, r2, r1
    c034:	cmp	r1, #4
    c038:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    c03c:	cmp	r2, #1664	; 0x680
    c040:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    c044:	cmp	r2, #1920	; 0x780
    c048:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    c04c:	b	c074 <lell_packet_is_data@@Base+0x19dc>
    c050:	movw	r1, #3838	; 0xefe
    c054:	sub	r1, r2, r1
    c058:	cmp	r1, #4
    c05c:	bcc	c070 <lell_packet_is_data@@Base+0x19d8>
    c060:	cmp	r2, #3712	; 0xe80
    c064:	beq	c070 <lell_packet_is_data@@Base+0x19d8>
    c068:	cmp	r2, #3968	; 0xf80
    c06c:	bne	c074 <lell_packet_is_data@@Base+0x19dc>
    c070:	add	r0, r0, #1
    c074:	ubfx	r3, ip, #12, #12
    c078:	movw	r1, #2035	; 0x7f3
    c07c:	lsr	r2, ip, #16
    c080:	cmp	r3, r1
    c084:	ble	c0c4 <lell_packet_is_data@@Base+0x1a2c>
    c088:	movw	r1, #3063	; 0xbf7
    c08c:	cmp	r3, r1
    c090:	ble	c6e8 <lell_packet_is_data@@Base+0x2050>
    c094:	cmp	r3, #3712	; 0xe80
    c098:	bge	c754 <lell_packet_is_data@@Base+0x20bc>
    c09c:	movw	r1, #3325	; 0xcfd
    c0a0:	cmp	r3, r1
    c0a4:	bgt	c7dc <lell_packet_is_data@@Base+0x2144>
    c0a8:	movw	r1, #3064	; 0xbf8
    c0ac:	sub	r1, r3, r1
    c0b0:	cmp	r1, #16
    c0b4:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c0b8:	cmp	r3, #3200	; 0xc80
    c0bc:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c0c0:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c0c4:	movw	r1, #765	; 0x2fd
    c0c8:	cmp	r3, r1
    c0cc:	bgt	c71c <lell_packet_is_data@@Base+0x2084>
    c0d0:	cmp	r3, #384	; 0x180
    c0d4:	bhi	c82c <lell_packet_is_data@@Base+0x2194>
    c0d8:	add	r1, pc, #4
    c0dc:	ldr	r3, [r1, r3, lsl #2]
    c0e0:	add	pc, r1, r3
    c0e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c0e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c0ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c0f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c0f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c0f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c0fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c100:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c104:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c108:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c10c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c110:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c114:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c118:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c11c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c120:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c124:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c128:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c12c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c130:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c134:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c138:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c13c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c140:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c144:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c148:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c14c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c150:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c154:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c158:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c15c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c160:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c164:	ldrdeq	r0, [r0], -r4
    c168:	ldrdeq	r0, [r0], -r4
    c16c:	ldrdeq	r0, [r0], -r4
    c170:	ldrdeq	r0, [r0], -r4
    c174:	ldrdeq	r0, [r0], -r4
    c178:	ldrdeq	r0, [r0], -r4
    c17c:	ldrdeq	r0, [r0], -r4
    c180:	ldrdeq	r0, [r0], -r4
    c184:	ldrdeq	r0, [r0], -r4
    c188:	ldrdeq	r0, [r0], -r4
    c18c:	ldrdeq	r0, [r0], -r4
    c190:	ldrdeq	r0, [r0], -r4
    c194:	ldrdeq	r0, [r0], -r4
    c198:	ldrdeq	r0, [r0], -r4
    c19c:	ldrdeq	r0, [r0], -r4
    c1a0:	ldrdeq	r0, [r0], -r4
    c1a4:	ldrdeq	r0, [r0], -r4
    c1a8:	ldrdeq	r0, [r0], -r4
    c1ac:	ldrdeq	r0, [r0], -r4
    c1b0:	ldrdeq	r0, [r0], -r4
    c1b4:	ldrdeq	r0, [r0], -r4
    c1b8:	ldrdeq	r0, [r0], -r4
    c1bc:	ldrdeq	r0, [r0], -r4
    c1c0:	ldrdeq	r0, [r0], -r4
    c1c4:	ldrdeq	r0, [r0], -r4
    c1c8:	ldrdeq	r0, [r0], -r4
    c1cc:	ldrdeq	r0, [r0], -r4
    c1d0:	ldrdeq	r0, [r0], -r4
    c1d4:	ldrdeq	r0, [r0], -r4
    c1d8:	ldrdeq	r0, [r0], -r4
    c1dc:	ldrdeq	r0, [r0], -r4
    c1e0:	ldrdeq	r0, [r0], -r4
    c1e4:	ldrdeq	r0, [r0], -r4
    c1e8:	ldrdeq	r0, [r0], -r4
    c1ec:	ldrdeq	r0, [r0], -r4
    c1f0:	ldrdeq	r0, [r0], -r4
    c1f4:	ldrdeq	r0, [r0], -r4
    c1f8:	ldrdeq	r0, [r0], -r4
    c1fc:	ldrdeq	r0, [r0], -r4
    c200:	ldrdeq	r0, [r0], -r4
    c204:	ldrdeq	r0, [r0], -r4
    c208:	ldrdeq	r0, [r0], -r4
    c20c:	ldrdeq	r0, [r0], -r4
    c210:	ldrdeq	r0, [r0], -r4
    c214:	ldrdeq	r0, [r0], -r4
    c218:	ldrdeq	r0, [r0], -r4
    c21c:	ldrdeq	r0, [r0], -r4
    c220:	ldrdeq	r0, [r0], -r4
    c224:	ldrdeq	r0, [r0], -r4
    c228:	ldrdeq	r0, [r0], -r4
    c22c:	ldrdeq	r0, [r0], -r4
    c230:	ldrdeq	r0, [r0], -r4
    c234:	ldrdeq	r0, [r0], -r4
    c238:	ldrdeq	r0, [r0], -r4
    c23c:	ldrdeq	r0, [r0], -r4
    c240:	ldrdeq	r0, [r0], -r4
    c244:	ldrdeq	r0, [r0], -r4
    c248:	ldrdeq	r0, [r0], -r4
    c24c:	ldrdeq	r0, [r0], -r4
    c250:	ldrdeq	r0, [r0], -r4
    c254:	ldrdeq	r0, [r0], -r4
    c258:	ldrdeq	r0, [r0], -r4
    c25c:	ldrdeq	r0, [r0], -r4
    c260:	ldrdeq	r0, [r0], -r4
    c264:	ldrdeq	r0, [r0], -r4
    c268:	ldrdeq	r0, [r0], -r4
    c26c:	ldrdeq	r0, [r0], -r4
    c270:	ldrdeq	r0, [r0], -r4
    c274:	ldrdeq	r0, [r0], -r4
    c278:	ldrdeq	r0, [r0], -r4
    c27c:	ldrdeq	r0, [r0], -r4
    c280:	ldrdeq	r0, [r0], -r4
    c284:	ldrdeq	r0, [r0], -r4
    c288:	ldrdeq	r0, [r0], -r4
    c28c:	ldrdeq	r0, [r0], -r4
    c290:	ldrdeq	r0, [r0], -r4
    c294:	ldrdeq	r0, [r0], -r4
    c298:	ldrdeq	r0, [r0], -r4
    c29c:	ldrdeq	r0, [r0], -r4
    c2a0:	ldrdeq	r0, [r0], -r4
    c2a4:	ldrdeq	r0, [r0], -r4
    c2a8:	ldrdeq	r0, [r0], -r4
    c2ac:	ldrdeq	r0, [r0], -r4
    c2b0:	ldrdeq	r0, [r0], -r4
    c2b4:	ldrdeq	r0, [r0], -r4
    c2b8:	ldrdeq	r0, [r0], -r4
    c2bc:	ldrdeq	r0, [r0], -r4
    c2c0:	ldrdeq	r0, [r0], -r4
    c2c4:	ldrdeq	r0, [r0], -r4
    c2c8:	ldrdeq	r0, [r0], -r4
    c2cc:	ldrdeq	r0, [r0], -r4
    c2d0:	ldrdeq	r0, [r0], -r4
    c2d4:	ldrdeq	r0, [r0], -r4
    c2d8:	ldrdeq	r0, [r0], -r4
    c2dc:	ldrdeq	r0, [r0], -r4
    c2e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c2e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c2e8:	ldrdeq	r0, [r0], -r4
    c2ec:	ldrdeq	r0, [r0], -r4
    c2f0:	ldrdeq	r0, [r0], -r4
    c2f4:	ldrdeq	r0, [r0], -r4
    c2f8:	ldrdeq	r0, [r0], -r4
    c2fc:	ldrdeq	r0, [r0], -r4
    c300:	ldrdeq	r0, [r0], -r4
    c304:	ldrdeq	r0, [r0], -r4
    c308:	ldrdeq	r0, [r0], -r4
    c30c:	ldrdeq	r0, [r0], -r4
    c310:	ldrdeq	r0, [r0], -r4
    c314:	ldrdeq	r0, [r0], -r4
    c318:	ldrdeq	r0, [r0], -r4
    c31c:	ldrdeq	r0, [r0], -r4
    c320:	ldrdeq	r0, [r0], -r4
    c324:	ldrdeq	r0, [r0], -r4
    c328:	ldrdeq	r0, [r0], -r4
    c32c:	ldrdeq	r0, [r0], -r4
    c330:	ldrdeq	r0, [r0], -r4
    c334:	ldrdeq	r0, [r0], -r4
    c338:	ldrdeq	r0, [r0], -r4
    c33c:	ldrdeq	r0, [r0], -r4
    c340:	ldrdeq	r0, [r0], -r4
    c344:	ldrdeq	r0, [r0], -r4
    c348:	ldrdeq	r0, [r0], -r4
    c34c:	ldrdeq	r0, [r0], -r4
    c350:	ldrdeq	r0, [r0], -r4
    c354:	ldrdeq	r0, [r0], -r4
    c358:	ldrdeq	r0, [r0], -r4
    c35c:	ldrdeq	r0, [r0], -r4
    c360:	ldrdeq	r0, [r0], -r4
    c364:	ldrdeq	r0, [r0], -r4
    c368:	ldrdeq	r0, [r0], -r4
    c36c:	ldrdeq	r0, [r0], -r4
    c370:	ldrdeq	r0, [r0], -r4
    c374:	ldrdeq	r0, [r0], -r4
    c378:	ldrdeq	r0, [r0], -r4
    c37c:	ldrdeq	r0, [r0], -r4
    c380:	ldrdeq	r0, [r0], -r4
    c384:	ldrdeq	r0, [r0], -r4
    c388:	ldrdeq	r0, [r0], -r4
    c38c:	ldrdeq	r0, [r0], -r4
    c390:	ldrdeq	r0, [r0], -r4
    c394:	ldrdeq	r0, [r0], -r4
    c398:	ldrdeq	r0, [r0], -r4
    c39c:	ldrdeq	r0, [r0], -r4
    c3a0:	ldrdeq	r0, [r0], -r4
    c3a4:	ldrdeq	r0, [r0], -r4
    c3a8:	ldrdeq	r0, [r0], -r4
    c3ac:	ldrdeq	r0, [r0], -r4
    c3b0:	ldrdeq	r0, [r0], -r4
    c3b4:	ldrdeq	r0, [r0], -r4
    c3b8:	ldrdeq	r0, [r0], -r4
    c3bc:	ldrdeq	r0, [r0], -r4
    c3c0:	ldrdeq	r0, [r0], -r4
    c3c4:	ldrdeq	r0, [r0], -r4
    c3c8:	ldrdeq	r0, [r0], -r4
    c3cc:	ldrdeq	r0, [r0], -r4
    c3d0:	ldrdeq	r0, [r0], -r4
    c3d4:	ldrdeq	r0, [r0], -r4
    c3d8:	ldrdeq	r0, [r0], -r4
    c3dc:	ldrdeq	r0, [r0], -r4
    c3e0:	ldrdeq	r0, [r0], -r4
    c3e4:	ldrdeq	r0, [r0], -r4
    c3e8:	ldrdeq	r0, [r0], -r4
    c3ec:	ldrdeq	r0, [r0], -r4
    c3f0:	ldrdeq	r0, [r0], -r4
    c3f4:	ldrdeq	r0, [r0], -r4
    c3f8:	ldrdeq	r0, [r0], -r4
    c3fc:	ldrdeq	r0, [r0], -r4
    c400:	ldrdeq	r0, [r0], -r4
    c404:	ldrdeq	r0, [r0], -r4
    c408:	ldrdeq	r0, [r0], -r4
    c40c:	ldrdeq	r0, [r0], -r4
    c410:	ldrdeq	r0, [r0], -r4
    c414:	ldrdeq	r0, [r0], -r4
    c418:	ldrdeq	r0, [r0], -r4
    c41c:	ldrdeq	r0, [r0], -r4
    c420:	ldrdeq	r0, [r0], -r4
    c424:	ldrdeq	r0, [r0], -r4
    c428:	ldrdeq	r0, [r0], -r4
    c42c:	ldrdeq	r0, [r0], -r4
    c430:	ldrdeq	r0, [r0], -r4
    c434:	ldrdeq	r0, [r0], -r4
    c438:	ldrdeq	r0, [r0], -r4
    c43c:	ldrdeq	r0, [r0], -r4
    c440:	ldrdeq	r0, [r0], -r4
    c444:	ldrdeq	r0, [r0], -r4
    c448:	ldrdeq	r0, [r0], -r4
    c44c:	ldrdeq	r0, [r0], -r4
    c450:	ldrdeq	r0, [r0], -r4
    c454:	ldrdeq	r0, [r0], -r4
    c458:	ldrdeq	r0, [r0], -r4
    c45c:	ldrdeq	r0, [r0], -r4
    c460:	ldrdeq	r0, [r0], -r4
    c464:	ldrdeq	r0, [r0], -r4
    c468:	ldrdeq	r0, [r0], -r4
    c46c:	ldrdeq	r0, [r0], -r4
    c470:	ldrdeq	r0, [r0], -r4
    c474:	ldrdeq	r0, [r0], -r4
    c478:	ldrdeq	r0, [r0], -r4
    c47c:	ldrdeq	r0, [r0], -r4
    c480:	ldrdeq	r0, [r0], -r4
    c484:	ldrdeq	r0, [r0], -r4
    c488:	ldrdeq	r0, [r0], -r4
    c48c:	ldrdeq	r0, [r0], -r4
    c490:	ldrdeq	r0, [r0], -r4
    c494:	ldrdeq	r0, [r0], -r4
    c498:	ldrdeq	r0, [r0], -r4
    c49c:	ldrdeq	r0, [r0], -r4
    c4a0:	ldrdeq	r0, [r0], -r4
    c4a4:	ldrdeq	r0, [r0], -r4
    c4a8:	ldrdeq	r0, [r0], -r4
    c4ac:	ldrdeq	r0, [r0], -r4
    c4b0:	ldrdeq	r0, [r0], -r4
    c4b4:	ldrdeq	r0, [r0], -r4
    c4b8:	ldrdeq	r0, [r0], -r4
    c4bc:	ldrdeq	r0, [r0], -r4
    c4c0:	ldrdeq	r0, [r0], -r4
    c4c4:	ldrdeq	r0, [r0], -r4
    c4c8:	ldrdeq	r0, [r0], -r4
    c4cc:	ldrdeq	r0, [r0], -r4
    c4d0:	ldrdeq	r0, [r0], -r4
    c4d4:	ldrdeq	r0, [r0], -r4
    c4d8:	ldrdeq	r0, [r0], -r4
    c4dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c4e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c4e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c4e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c4ec:	ldrdeq	r0, [r0], -r4
    c4f0:	ldrdeq	r0, [r0], -r4
    c4f4:	ldrdeq	r0, [r0], -r4
    c4f8:	ldrdeq	r0, [r0], -r4
    c4fc:	ldrdeq	r0, [r0], -r4
    c500:	ldrdeq	r0, [r0], -r4
    c504:	ldrdeq	r0, [r0], -r4
    c508:	ldrdeq	r0, [r0], -r4
    c50c:	ldrdeq	r0, [r0], -r4
    c510:	ldrdeq	r0, [r0], -r4
    c514:	ldrdeq	r0, [r0], -r4
    c518:	ldrdeq	r0, [r0], -r4
    c51c:	ldrdeq	r0, [r0], -r4
    c520:	ldrdeq	r0, [r0], -r4
    c524:	ldrdeq	r0, [r0], -r4
    c528:	ldrdeq	r0, [r0], -r4
    c52c:	ldrdeq	r0, [r0], -r4
    c530:	ldrdeq	r0, [r0], -r4
    c534:	ldrdeq	r0, [r0], -r4
    c538:	ldrdeq	r0, [r0], -r4
    c53c:	ldrdeq	r0, [r0], -r4
    c540:	ldrdeq	r0, [r0], -r4
    c544:	ldrdeq	r0, [r0], -r4
    c548:	ldrdeq	r0, [r0], -r4
    c54c:	ldrdeq	r0, [r0], -r4
    c550:	ldrdeq	r0, [r0], -r4
    c554:	ldrdeq	r0, [r0], -r4
    c558:	ldrdeq	r0, [r0], -r4
    c55c:	ldrdeq	r0, [r0], -r4
    c560:	ldrdeq	r0, [r0], -r4
    c564:	ldrdeq	r0, [r0], -r4
    c568:	ldrdeq	r0, [r0], -r4
    c56c:	ldrdeq	r0, [r0], -r4
    c570:	ldrdeq	r0, [r0], -r4
    c574:	ldrdeq	r0, [r0], -r4
    c578:	ldrdeq	r0, [r0], -r4
    c57c:	ldrdeq	r0, [r0], -r4
    c580:	ldrdeq	r0, [r0], -r4
    c584:	ldrdeq	r0, [r0], -r4
    c588:	ldrdeq	r0, [r0], -r4
    c58c:	ldrdeq	r0, [r0], -r4
    c590:	ldrdeq	r0, [r0], -r4
    c594:	ldrdeq	r0, [r0], -r4
    c598:	ldrdeq	r0, [r0], -r4
    c59c:	ldrdeq	r0, [r0], -r4
    c5a0:	ldrdeq	r0, [r0], -r4
    c5a4:	ldrdeq	r0, [r0], -r4
    c5a8:	ldrdeq	r0, [r0], -r4
    c5ac:	ldrdeq	r0, [r0], -r4
    c5b0:	ldrdeq	r0, [r0], -r4
    c5b4:	ldrdeq	r0, [r0], -r4
    c5b8:	ldrdeq	r0, [r0], -r4
    c5bc:	ldrdeq	r0, [r0], -r4
    c5c0:	ldrdeq	r0, [r0], -r4
    c5c4:	ldrdeq	r0, [r0], -r4
    c5c8:	ldrdeq	r0, [r0], -r4
    c5cc:	ldrdeq	r0, [r0], -r4
    c5d0:	ldrdeq	r0, [r0], -r4
    c5d4:	ldrdeq	r0, [r0], -r4
    c5d8:	ldrdeq	r0, [r0], -r4
    c5dc:	ldrdeq	r0, [r0], -r4
    c5e0:	ldrdeq	r0, [r0], -r4
    c5e4:	ldrdeq	r0, [r0], -r4
    c5e8:	ldrdeq	r0, [r0], -r4
    c5ec:	ldrdeq	r0, [r0], -r4
    c5f0:	ldrdeq	r0, [r0], -r4
    c5f4:	ldrdeq	r0, [r0], -r4
    c5f8:	ldrdeq	r0, [r0], -r4
    c5fc:	ldrdeq	r0, [r0], -r4
    c600:	ldrdeq	r0, [r0], -r4
    c604:	ldrdeq	r0, [r0], -r4
    c608:	ldrdeq	r0, [r0], -r4
    c60c:	ldrdeq	r0, [r0], -r4
    c610:	ldrdeq	r0, [r0], -r4
    c614:	ldrdeq	r0, [r0], -r4
    c618:	ldrdeq	r0, [r0], -r4
    c61c:	ldrdeq	r0, [r0], -r4
    c620:	ldrdeq	r0, [r0], -r4
    c624:	ldrdeq	r0, [r0], -r4
    c628:	ldrdeq	r0, [r0], -r4
    c62c:	ldrdeq	r0, [r0], -r4
    c630:	ldrdeq	r0, [r0], -r4
    c634:	ldrdeq	r0, [r0], -r4
    c638:	ldrdeq	r0, [r0], -r4
    c63c:	ldrdeq	r0, [r0], -r4
    c640:	ldrdeq	r0, [r0], -r4
    c644:	ldrdeq	r0, [r0], -r4
    c648:	ldrdeq	r0, [r0], -r4
    c64c:	ldrdeq	r0, [r0], -r4
    c650:	ldrdeq	r0, [r0], -r4
    c654:	ldrdeq	r0, [r0], -r4
    c658:	ldrdeq	r0, [r0], -r4
    c65c:	ldrdeq	r0, [r0], -r4
    c660:	ldrdeq	r0, [r0], -r4
    c664:	ldrdeq	r0, [r0], -r4
    c668:	ldrdeq	r0, [r0], -r4
    c66c:	ldrdeq	r0, [r0], -r4
    c670:	ldrdeq	r0, [r0], -r4
    c674:	ldrdeq	r0, [r0], -r4
    c678:	ldrdeq	r0, [r0], -r4
    c67c:	ldrdeq	r0, [r0], -r4
    c680:	ldrdeq	r0, [r0], -r4
    c684:	ldrdeq	r0, [r0], -r4
    c688:	ldrdeq	r0, [r0], -r4
    c68c:	ldrdeq	r0, [r0], -r4
    c690:	ldrdeq	r0, [r0], -r4
    c694:	ldrdeq	r0, [r0], -r4
    c698:	ldrdeq	r0, [r0], -r4
    c69c:	ldrdeq	r0, [r0], -r4
    c6a0:	ldrdeq	r0, [r0], -r4
    c6a4:	ldrdeq	r0, [r0], -r4
    c6a8:	ldrdeq	r0, [r0], -r4
    c6ac:	ldrdeq	r0, [r0], -r4
    c6b0:	ldrdeq	r0, [r0], -r4
    c6b4:	ldrdeq	r0, [r0], -r4
    c6b8:	ldrdeq	r0, [r0], -r4
    c6bc:	ldrdeq	r0, [r0], -r4
    c6c0:	ldrdeq	r0, [r0], -r4
    c6c4:	ldrdeq	r0, [r0], -r4
    c6c8:	ldrdeq	r0, [r0], -r4
    c6cc:	ldrdeq	r0, [r0], -r4
    c6d0:	ldrdeq	r0, [r0], -r4
    c6d4:	ldrdeq	r0, [r0], -r4
    c6d8:	ldrdeq	r0, [r0], -r4
    c6dc:	ldrdeq	r0, [r0], -r4
    c6e0:	ldrdeq	r0, [r0], -r4
    c6e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c6e8:	cmp	r3, #2432	; 0x980
    c6ec:	bge	c7b0 <lell_packet_is_data@@Base+0x2118>
    c6f0:	movw	r1, #2036	; 0x7f4
    c6f4:	sub	r1, r3, r1
    c6f8:	cmp	r1, #28
    c6fc:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c700:	movw	r1, #2302	; 0x8fe
    c704:	sub	r1, r3, r1
    c708:	cmp	r1, #4
    c70c:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c710:	cmp	r3, #2176	; 0x880
    c714:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c718:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c71c:	cmp	r3, #1152	; 0x480
    c720:	bge	c780 <lell_packet_is_data@@Base+0x20e8>
    c724:	sub	r1, r3, #1016	; 0x3f8
    c728:	cmp	r1, #15
    c72c:	bhi	c738 <lell_packet_is_data@@Base+0x20a0>
    c730:	cmp	r1, #9
    c734:	bne	c8b4 <lell_packet_is_data@@Base+0x221c>
    c738:	movw	r1, #766	; 0x2fe
    c73c:	sub	r1, r3, r1
    c740:	cmp	r1, #4
    c744:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c748:	cmp	r3, #896	; 0x380
    c74c:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c750:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c754:	cmp	r3, #4064	; 0xfe0
    c758:	blt	c894 <lell_packet_is_data@@Base+0x21fc>
    c75c:	sub	r1, r3, #4064	; 0xfe0
    c760:	cmp	r1, #31
    c764:	bhi	c8b8 <lell_packet_is_data@@Base+0x2220>
    c768:	movw	r6, #1
    c76c:	mov	r3, #1
    c770:	movt	r6, #65535	; 0xffff
    c774:	tst	r6, r3, lsl r1
    c778:	addne	r0, r0, #1
    c77c:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c780:	movw	r1, #1531	; 0x5fb
    c784:	cmp	r3, r1
    c788:	ble	c84c <lell_packet_is_data@@Base+0x21b4>
    c78c:	cmp	r3, #1664	; 0x680
    c790:	bge	c870 <lell_packet_is_data@@Base+0x21d8>
    c794:	movw	r1, #1532	; 0x5fc
    c798:	sub	r1, r3, r1
    c79c:	cmp	r1, #7
    c7a0:	bhi	c8b8 <lell_packet_is_data@@Base+0x2220>
    c7a4:	cmp	r1, #4
    c7a8:	bne	c8b4 <lell_packet_is_data@@Base+0x221c>
    c7ac:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c7b0:	cmp	r3, #2688	; 0xa80
    c7b4:	bge	c808 <lell_packet_is_data@@Base+0x2170>
    c7b8:	movw	r1, #2556	; 0x9fc
    c7bc:	sub	r1, r3, r1
    c7c0:	cmp	r1, #7
    c7c4:	bhi	c7d0 <lell_packet_is_data@@Base+0x2138>
    c7c8:	cmp	r1, #4
    c7cc:	bne	c8b4 <lell_packet_is_data@@Base+0x221c>
    c7d0:	cmp	r3, #2432	; 0x980
    c7d4:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c7d8:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c7dc:	movw	r1, #3580	; 0xdfc
    c7e0:	sub	r1, r3, r1
    c7e4:	cmp	r1, #8
    c7e8:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c7ec:	movw	r1, #3326	; 0xcfe
    c7f0:	sub	r1, r3, r1
    c7f4:	cmp	r1, #4
    c7f8:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c7fc:	cmp	r3, #3456	; 0xd80
    c800:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c804:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c808:	movw	r1, #2814	; 0xafe
    c80c:	sub	r1, r3, r1
    c810:	cmp	r1, #4
    c814:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c818:	cmp	r3, #2688	; 0xa80
    c81c:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c820:	cmp	r3, #2944	; 0xb80
    c824:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c828:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c82c:	sub	r1, r3, #508	; 0x1fc
    c830:	cmp	r1, #7
    c834:	bhi	c840 <lell_packet_is_data@@Base+0x21a8>
    c838:	cmp	r1, #4
    c83c:	bne	c8b4 <lell_packet_is_data@@Base+0x221c>
    c840:	cmp	r3, #640	; 0x280
    c844:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c848:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c84c:	movw	r1, #1278	; 0x4fe
    c850:	sub	r1, r3, r1
    c854:	cmp	r1, #4
    c858:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c85c:	cmp	r3, #1152	; 0x480
    c860:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c864:	cmp	r3, #1408	; 0x580
    c868:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c86c:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c870:	movw	r1, #1790	; 0x6fe
    c874:	sub	r1, r3, r1
    c878:	cmp	r1, #4
    c87c:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c880:	cmp	r3, #1664	; 0x680
    c884:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c888:	cmp	r3, #1920	; 0x780
    c88c:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c890:	b	c8b8 <lell_packet_is_data@@Base+0x2220>
    c894:	movw	r1, #3838	; 0xefe
    c898:	sub	r1, r3, r1
    c89c:	cmp	r1, #4
    c8a0:	bcc	c8b4 <lell_packet_is_data@@Base+0x221c>
    c8a4:	cmp	r3, #3712	; 0xe80
    c8a8:	beq	c8b4 <lell_packet_is_data@@Base+0x221c>
    c8ac:	cmp	r3, #3968	; 0xf80
    c8b0:	bne	c8b8 <lell_packet_is_data@@Base+0x2220>
    c8b4:	add	r0, r0, #1
    c8b8:	bfc	r2, #12, #20
    c8bc:	movw	r1, #2035	; 0x7f3
    c8c0:	cmp	r2, r1
    c8c4:	ble	c904 <lell_packet_is_data@@Base+0x226c>
    c8c8:	movw	r1, #3063	; 0xbf7
    c8cc:	cmp	r2, r1
    c8d0:	ble	cf28 <lell_packet_is_data@@Base+0x2890>
    c8d4:	cmp	r2, #3712	; 0xe80
    c8d8:	bge	cf94 <lell_packet_is_data@@Base+0x28fc>
    c8dc:	movw	r1, #3325	; 0xcfd
    c8e0:	cmp	r2, r1
    c8e4:	bgt	d01c <lell_packet_is_data@@Base+0x2984>
    c8e8:	movw	r1, #3064	; 0xbf8
    c8ec:	sub	r1, r2, r1
    c8f0:	cmp	r1, #16
    c8f4:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    c8f8:	cmp	r2, #3200	; 0xc80
    c8fc:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    c900:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    c904:	movw	r1, #765	; 0x2fd
    c908:	cmp	r2, r1
    c90c:	bgt	cf5c <lell_packet_is_data@@Base+0x28c4>
    c910:	cmp	r2, #384	; 0x180
    c914:	bhi	d06c <lell_packet_is_data@@Base+0x29d4>
    c918:	add	r1, pc, #4
    c91c:	ldr	r2, [r1, r2, lsl #2]
    c920:	add	pc, r1, r2
    c924:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c928:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c92c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c930:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c934:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c938:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c93c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c940:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c944:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c948:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c94c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c950:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c954:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c958:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c95c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c960:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c964:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c968:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c96c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c970:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c974:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c978:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c97c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c980:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c984:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c988:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c98c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c990:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c994:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c998:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c99c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c9a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c9a4:	ldrdeq	r0, [r0], -r4
    c9a8:	ldrdeq	r0, [r0], -r4
    c9ac:	ldrdeq	r0, [r0], -r4
    c9b0:	ldrdeq	r0, [r0], -r4
    c9b4:	ldrdeq	r0, [r0], -r4
    c9b8:	ldrdeq	r0, [r0], -r4
    c9bc:	ldrdeq	r0, [r0], -r4
    c9c0:	ldrdeq	r0, [r0], -r4
    c9c4:	ldrdeq	r0, [r0], -r4
    c9c8:	ldrdeq	r0, [r0], -r4
    c9cc:	ldrdeq	r0, [r0], -r4
    c9d0:	ldrdeq	r0, [r0], -r4
    c9d4:	ldrdeq	r0, [r0], -r4
    c9d8:	ldrdeq	r0, [r0], -r4
    c9dc:	ldrdeq	r0, [r0], -r4
    c9e0:	ldrdeq	r0, [r0], -r4
    c9e4:	ldrdeq	r0, [r0], -r4
    c9e8:	ldrdeq	r0, [r0], -r4
    c9ec:	ldrdeq	r0, [r0], -r4
    c9f0:	ldrdeq	r0, [r0], -r4
    c9f4:	ldrdeq	r0, [r0], -r4
    c9f8:	ldrdeq	r0, [r0], -r4
    c9fc:	ldrdeq	r0, [r0], -r4
    ca00:	ldrdeq	r0, [r0], -r4
    ca04:	ldrdeq	r0, [r0], -r4
    ca08:	ldrdeq	r0, [r0], -r4
    ca0c:	ldrdeq	r0, [r0], -r4
    ca10:	ldrdeq	r0, [r0], -r4
    ca14:	ldrdeq	r0, [r0], -r4
    ca18:	ldrdeq	r0, [r0], -r4
    ca1c:	ldrdeq	r0, [r0], -r4
    ca20:	ldrdeq	r0, [r0], -r4
    ca24:	ldrdeq	r0, [r0], -r4
    ca28:	ldrdeq	r0, [r0], -r4
    ca2c:	ldrdeq	r0, [r0], -r4
    ca30:	ldrdeq	r0, [r0], -r4
    ca34:	ldrdeq	r0, [r0], -r4
    ca38:	ldrdeq	r0, [r0], -r4
    ca3c:	ldrdeq	r0, [r0], -r4
    ca40:	ldrdeq	r0, [r0], -r4
    ca44:	ldrdeq	r0, [r0], -r4
    ca48:	ldrdeq	r0, [r0], -r4
    ca4c:	ldrdeq	r0, [r0], -r4
    ca50:	ldrdeq	r0, [r0], -r4
    ca54:	ldrdeq	r0, [r0], -r4
    ca58:	ldrdeq	r0, [r0], -r4
    ca5c:	ldrdeq	r0, [r0], -r4
    ca60:	ldrdeq	r0, [r0], -r4
    ca64:	ldrdeq	r0, [r0], -r4
    ca68:	ldrdeq	r0, [r0], -r4
    ca6c:	ldrdeq	r0, [r0], -r4
    ca70:	ldrdeq	r0, [r0], -r4
    ca74:	ldrdeq	r0, [r0], -r4
    ca78:	ldrdeq	r0, [r0], -r4
    ca7c:	ldrdeq	r0, [r0], -r4
    ca80:	ldrdeq	r0, [r0], -r4
    ca84:	ldrdeq	r0, [r0], -r4
    ca88:	ldrdeq	r0, [r0], -r4
    ca8c:	ldrdeq	r0, [r0], -r4
    ca90:	ldrdeq	r0, [r0], -r4
    ca94:	ldrdeq	r0, [r0], -r4
    ca98:	ldrdeq	r0, [r0], -r4
    ca9c:	ldrdeq	r0, [r0], -r4
    caa0:	ldrdeq	r0, [r0], -r4
    caa4:	ldrdeq	r0, [r0], -r4
    caa8:	ldrdeq	r0, [r0], -r4
    caac:	ldrdeq	r0, [r0], -r4
    cab0:	ldrdeq	r0, [r0], -r4
    cab4:	ldrdeq	r0, [r0], -r4
    cab8:	ldrdeq	r0, [r0], -r4
    cabc:	ldrdeq	r0, [r0], -r4
    cac0:	ldrdeq	r0, [r0], -r4
    cac4:	ldrdeq	r0, [r0], -r4
    cac8:	ldrdeq	r0, [r0], -r4
    cacc:	ldrdeq	r0, [r0], -r4
    cad0:	ldrdeq	r0, [r0], -r4
    cad4:	ldrdeq	r0, [r0], -r4
    cad8:	ldrdeq	r0, [r0], -r4
    cadc:	ldrdeq	r0, [r0], -r4
    cae0:	ldrdeq	r0, [r0], -r4
    cae4:	ldrdeq	r0, [r0], -r4
    cae8:	ldrdeq	r0, [r0], -r4
    caec:	ldrdeq	r0, [r0], -r4
    caf0:	ldrdeq	r0, [r0], -r4
    caf4:	ldrdeq	r0, [r0], -r4
    caf8:	ldrdeq	r0, [r0], -r4
    cafc:	ldrdeq	r0, [r0], -r4
    cb00:	ldrdeq	r0, [r0], -r4
    cb04:	ldrdeq	r0, [r0], -r4
    cb08:	ldrdeq	r0, [r0], -r4
    cb0c:	ldrdeq	r0, [r0], -r4
    cb10:	ldrdeq	r0, [r0], -r4
    cb14:	ldrdeq	r0, [r0], -r4
    cb18:	ldrdeq	r0, [r0], -r4
    cb1c:	ldrdeq	r0, [r0], -r4
    cb20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cb24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cb28:	ldrdeq	r0, [r0], -r4
    cb2c:	ldrdeq	r0, [r0], -r4
    cb30:	ldrdeq	r0, [r0], -r4
    cb34:	ldrdeq	r0, [r0], -r4
    cb38:	ldrdeq	r0, [r0], -r4
    cb3c:	ldrdeq	r0, [r0], -r4
    cb40:	ldrdeq	r0, [r0], -r4
    cb44:	ldrdeq	r0, [r0], -r4
    cb48:	ldrdeq	r0, [r0], -r4
    cb4c:	ldrdeq	r0, [r0], -r4
    cb50:	ldrdeq	r0, [r0], -r4
    cb54:	ldrdeq	r0, [r0], -r4
    cb58:	ldrdeq	r0, [r0], -r4
    cb5c:	ldrdeq	r0, [r0], -r4
    cb60:	ldrdeq	r0, [r0], -r4
    cb64:	ldrdeq	r0, [r0], -r4
    cb68:	ldrdeq	r0, [r0], -r4
    cb6c:	ldrdeq	r0, [r0], -r4
    cb70:	ldrdeq	r0, [r0], -r4
    cb74:	ldrdeq	r0, [r0], -r4
    cb78:	ldrdeq	r0, [r0], -r4
    cb7c:	ldrdeq	r0, [r0], -r4
    cb80:	ldrdeq	r0, [r0], -r4
    cb84:	ldrdeq	r0, [r0], -r4
    cb88:	ldrdeq	r0, [r0], -r4
    cb8c:	ldrdeq	r0, [r0], -r4
    cb90:	ldrdeq	r0, [r0], -r4
    cb94:	ldrdeq	r0, [r0], -r4
    cb98:	ldrdeq	r0, [r0], -r4
    cb9c:	ldrdeq	r0, [r0], -r4
    cba0:	ldrdeq	r0, [r0], -r4
    cba4:	ldrdeq	r0, [r0], -r4
    cba8:	ldrdeq	r0, [r0], -r4
    cbac:	ldrdeq	r0, [r0], -r4
    cbb0:	ldrdeq	r0, [r0], -r4
    cbb4:	ldrdeq	r0, [r0], -r4
    cbb8:	ldrdeq	r0, [r0], -r4
    cbbc:	ldrdeq	r0, [r0], -r4
    cbc0:	ldrdeq	r0, [r0], -r4
    cbc4:	ldrdeq	r0, [r0], -r4
    cbc8:	ldrdeq	r0, [r0], -r4
    cbcc:	ldrdeq	r0, [r0], -r4
    cbd0:	ldrdeq	r0, [r0], -r4
    cbd4:	ldrdeq	r0, [r0], -r4
    cbd8:	ldrdeq	r0, [r0], -r4
    cbdc:	ldrdeq	r0, [r0], -r4
    cbe0:	ldrdeq	r0, [r0], -r4
    cbe4:	ldrdeq	r0, [r0], -r4
    cbe8:	ldrdeq	r0, [r0], -r4
    cbec:	ldrdeq	r0, [r0], -r4
    cbf0:	ldrdeq	r0, [r0], -r4
    cbf4:	ldrdeq	r0, [r0], -r4
    cbf8:	ldrdeq	r0, [r0], -r4
    cbfc:	ldrdeq	r0, [r0], -r4
    cc00:	ldrdeq	r0, [r0], -r4
    cc04:	ldrdeq	r0, [r0], -r4
    cc08:	ldrdeq	r0, [r0], -r4
    cc0c:	ldrdeq	r0, [r0], -r4
    cc10:	ldrdeq	r0, [r0], -r4
    cc14:	ldrdeq	r0, [r0], -r4
    cc18:	ldrdeq	r0, [r0], -r4
    cc1c:	ldrdeq	r0, [r0], -r4
    cc20:	ldrdeq	r0, [r0], -r4
    cc24:	ldrdeq	r0, [r0], -r4
    cc28:	ldrdeq	r0, [r0], -r4
    cc2c:	ldrdeq	r0, [r0], -r4
    cc30:	ldrdeq	r0, [r0], -r4
    cc34:	ldrdeq	r0, [r0], -r4
    cc38:	ldrdeq	r0, [r0], -r4
    cc3c:	ldrdeq	r0, [r0], -r4
    cc40:	ldrdeq	r0, [r0], -r4
    cc44:	ldrdeq	r0, [r0], -r4
    cc48:	ldrdeq	r0, [r0], -r4
    cc4c:	ldrdeq	r0, [r0], -r4
    cc50:	ldrdeq	r0, [r0], -r4
    cc54:	ldrdeq	r0, [r0], -r4
    cc58:	ldrdeq	r0, [r0], -r4
    cc5c:	ldrdeq	r0, [r0], -r4
    cc60:	ldrdeq	r0, [r0], -r4
    cc64:	ldrdeq	r0, [r0], -r4
    cc68:	ldrdeq	r0, [r0], -r4
    cc6c:	ldrdeq	r0, [r0], -r4
    cc70:	ldrdeq	r0, [r0], -r4
    cc74:	ldrdeq	r0, [r0], -r4
    cc78:	ldrdeq	r0, [r0], -r4
    cc7c:	ldrdeq	r0, [r0], -r4
    cc80:	ldrdeq	r0, [r0], -r4
    cc84:	ldrdeq	r0, [r0], -r4
    cc88:	ldrdeq	r0, [r0], -r4
    cc8c:	ldrdeq	r0, [r0], -r4
    cc90:	ldrdeq	r0, [r0], -r4
    cc94:	ldrdeq	r0, [r0], -r4
    cc98:	ldrdeq	r0, [r0], -r4
    cc9c:	ldrdeq	r0, [r0], -r4
    cca0:	ldrdeq	r0, [r0], -r4
    cca4:	ldrdeq	r0, [r0], -r4
    cca8:	ldrdeq	r0, [r0], -r4
    ccac:	ldrdeq	r0, [r0], -r4
    ccb0:	ldrdeq	r0, [r0], -r4
    ccb4:	ldrdeq	r0, [r0], -r4
    ccb8:	ldrdeq	r0, [r0], -r4
    ccbc:	ldrdeq	r0, [r0], -r4
    ccc0:	ldrdeq	r0, [r0], -r4
    ccc4:	ldrdeq	r0, [r0], -r4
    ccc8:	ldrdeq	r0, [r0], -r4
    cccc:	ldrdeq	r0, [r0], -r4
    ccd0:	ldrdeq	r0, [r0], -r4
    ccd4:	ldrdeq	r0, [r0], -r4
    ccd8:	ldrdeq	r0, [r0], -r4
    ccdc:	ldrdeq	r0, [r0], -r4
    cce0:	ldrdeq	r0, [r0], -r4
    cce4:	ldrdeq	r0, [r0], -r4
    cce8:	ldrdeq	r0, [r0], -r4
    ccec:	ldrdeq	r0, [r0], -r4
    ccf0:	ldrdeq	r0, [r0], -r4
    ccf4:	ldrdeq	r0, [r0], -r4
    ccf8:	ldrdeq	r0, [r0], -r4
    ccfc:	ldrdeq	r0, [r0], -r4
    cd00:	ldrdeq	r0, [r0], -r4
    cd04:	ldrdeq	r0, [r0], -r4
    cd08:	ldrdeq	r0, [r0], -r4
    cd0c:	ldrdeq	r0, [r0], -r4
    cd10:	ldrdeq	r0, [r0], -r4
    cd14:	ldrdeq	r0, [r0], -r4
    cd18:	ldrdeq	r0, [r0], -r4
    cd1c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cd20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cd24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cd28:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cd2c:	ldrdeq	r0, [r0], -r4
    cd30:	ldrdeq	r0, [r0], -r4
    cd34:	ldrdeq	r0, [r0], -r4
    cd38:	ldrdeq	r0, [r0], -r4
    cd3c:	ldrdeq	r0, [r0], -r4
    cd40:	ldrdeq	r0, [r0], -r4
    cd44:	ldrdeq	r0, [r0], -r4
    cd48:	ldrdeq	r0, [r0], -r4
    cd4c:	ldrdeq	r0, [r0], -r4
    cd50:	ldrdeq	r0, [r0], -r4
    cd54:	ldrdeq	r0, [r0], -r4
    cd58:	ldrdeq	r0, [r0], -r4
    cd5c:	ldrdeq	r0, [r0], -r4
    cd60:	ldrdeq	r0, [r0], -r4
    cd64:	ldrdeq	r0, [r0], -r4
    cd68:	ldrdeq	r0, [r0], -r4
    cd6c:	ldrdeq	r0, [r0], -r4
    cd70:	ldrdeq	r0, [r0], -r4
    cd74:	ldrdeq	r0, [r0], -r4
    cd78:	ldrdeq	r0, [r0], -r4
    cd7c:	ldrdeq	r0, [r0], -r4
    cd80:	ldrdeq	r0, [r0], -r4
    cd84:	ldrdeq	r0, [r0], -r4
    cd88:	ldrdeq	r0, [r0], -r4
    cd8c:	ldrdeq	r0, [r0], -r4
    cd90:	ldrdeq	r0, [r0], -r4
    cd94:	ldrdeq	r0, [r0], -r4
    cd98:	ldrdeq	r0, [r0], -r4
    cd9c:	ldrdeq	r0, [r0], -r4
    cda0:	ldrdeq	r0, [r0], -r4
    cda4:	ldrdeq	r0, [r0], -r4
    cda8:	ldrdeq	r0, [r0], -r4
    cdac:	ldrdeq	r0, [r0], -r4
    cdb0:	ldrdeq	r0, [r0], -r4
    cdb4:	ldrdeq	r0, [r0], -r4
    cdb8:	ldrdeq	r0, [r0], -r4
    cdbc:	ldrdeq	r0, [r0], -r4
    cdc0:	ldrdeq	r0, [r0], -r4
    cdc4:	ldrdeq	r0, [r0], -r4
    cdc8:	ldrdeq	r0, [r0], -r4
    cdcc:	ldrdeq	r0, [r0], -r4
    cdd0:	ldrdeq	r0, [r0], -r4
    cdd4:	ldrdeq	r0, [r0], -r4
    cdd8:	ldrdeq	r0, [r0], -r4
    cddc:	ldrdeq	r0, [r0], -r4
    cde0:	ldrdeq	r0, [r0], -r4
    cde4:	ldrdeq	r0, [r0], -r4
    cde8:	ldrdeq	r0, [r0], -r4
    cdec:	ldrdeq	r0, [r0], -r4
    cdf0:	ldrdeq	r0, [r0], -r4
    cdf4:	ldrdeq	r0, [r0], -r4
    cdf8:	ldrdeq	r0, [r0], -r4
    cdfc:	ldrdeq	r0, [r0], -r4
    ce00:	ldrdeq	r0, [r0], -r4
    ce04:	ldrdeq	r0, [r0], -r4
    ce08:	ldrdeq	r0, [r0], -r4
    ce0c:	ldrdeq	r0, [r0], -r4
    ce10:	ldrdeq	r0, [r0], -r4
    ce14:	ldrdeq	r0, [r0], -r4
    ce18:	ldrdeq	r0, [r0], -r4
    ce1c:	ldrdeq	r0, [r0], -r4
    ce20:	ldrdeq	r0, [r0], -r4
    ce24:	ldrdeq	r0, [r0], -r4
    ce28:	ldrdeq	r0, [r0], -r4
    ce2c:	ldrdeq	r0, [r0], -r4
    ce30:	ldrdeq	r0, [r0], -r4
    ce34:	ldrdeq	r0, [r0], -r4
    ce38:	ldrdeq	r0, [r0], -r4
    ce3c:	ldrdeq	r0, [r0], -r4
    ce40:	ldrdeq	r0, [r0], -r4
    ce44:	ldrdeq	r0, [r0], -r4
    ce48:	ldrdeq	r0, [r0], -r4
    ce4c:	ldrdeq	r0, [r0], -r4
    ce50:	ldrdeq	r0, [r0], -r4
    ce54:	ldrdeq	r0, [r0], -r4
    ce58:	ldrdeq	r0, [r0], -r4
    ce5c:	ldrdeq	r0, [r0], -r4
    ce60:	ldrdeq	r0, [r0], -r4
    ce64:	ldrdeq	r0, [r0], -r4
    ce68:	ldrdeq	r0, [r0], -r4
    ce6c:	ldrdeq	r0, [r0], -r4
    ce70:	ldrdeq	r0, [r0], -r4
    ce74:	ldrdeq	r0, [r0], -r4
    ce78:	ldrdeq	r0, [r0], -r4
    ce7c:	ldrdeq	r0, [r0], -r4
    ce80:	ldrdeq	r0, [r0], -r4
    ce84:	ldrdeq	r0, [r0], -r4
    ce88:	ldrdeq	r0, [r0], -r4
    ce8c:	ldrdeq	r0, [r0], -r4
    ce90:	ldrdeq	r0, [r0], -r4
    ce94:	ldrdeq	r0, [r0], -r4
    ce98:	ldrdeq	r0, [r0], -r4
    ce9c:	ldrdeq	r0, [r0], -r4
    cea0:	ldrdeq	r0, [r0], -r4
    cea4:	ldrdeq	r0, [r0], -r4
    cea8:	ldrdeq	r0, [r0], -r4
    ceac:	ldrdeq	r0, [r0], -r4
    ceb0:	ldrdeq	r0, [r0], -r4
    ceb4:	ldrdeq	r0, [r0], -r4
    ceb8:	ldrdeq	r0, [r0], -r4
    cebc:	ldrdeq	r0, [r0], -r4
    cec0:	ldrdeq	r0, [r0], -r4
    cec4:	ldrdeq	r0, [r0], -r4
    cec8:	ldrdeq	r0, [r0], -r4
    cecc:	ldrdeq	r0, [r0], -r4
    ced0:	ldrdeq	r0, [r0], -r4
    ced4:	ldrdeq	r0, [r0], -r4
    ced8:	ldrdeq	r0, [r0], -r4
    cedc:	ldrdeq	r0, [r0], -r4
    cee0:	ldrdeq	r0, [r0], -r4
    cee4:	ldrdeq	r0, [r0], -r4
    cee8:	ldrdeq	r0, [r0], -r4
    ceec:	ldrdeq	r0, [r0], -r4
    cef0:	ldrdeq	r0, [r0], -r4
    cef4:	ldrdeq	r0, [r0], -r4
    cef8:	ldrdeq	r0, [r0], -r4
    cefc:	ldrdeq	r0, [r0], -r4
    cf00:	ldrdeq	r0, [r0], -r4
    cf04:	ldrdeq	r0, [r0], -r4
    cf08:	ldrdeq	r0, [r0], -r4
    cf0c:	ldrdeq	r0, [r0], -r4
    cf10:	ldrdeq	r0, [r0], -r4
    cf14:	ldrdeq	r0, [r0], -r4
    cf18:	ldrdeq	r0, [r0], -r4
    cf1c:	ldrdeq	r0, [r0], -r4
    cf20:	ldrdeq	r0, [r0], -r4
    cf24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cf28:	cmp	r2, #2432	; 0x980
    cf2c:	bge	cff0 <lell_packet_is_data@@Base+0x2958>
    cf30:	movw	r1, #2036	; 0x7f4
    cf34:	sub	r1, r2, r1
    cf38:	cmp	r1, #28
    cf3c:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    cf40:	movw	r1, #2302	; 0x8fe
    cf44:	sub	r1, r2, r1
    cf48:	cmp	r1, #4
    cf4c:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    cf50:	cmp	r2, #2176	; 0x880
    cf54:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    cf58:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    cf5c:	cmp	r2, #1152	; 0x480
    cf60:	bge	cfc0 <lell_packet_is_data@@Base+0x2928>
    cf64:	sub	r1, r2, #1016	; 0x3f8
    cf68:	cmp	r1, #15
    cf6c:	bhi	cf78 <lell_packet_is_data@@Base+0x28e0>
    cf70:	cmp	r1, #9
    cf74:	bne	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    cf78:	movw	r1, #766	; 0x2fe
    cf7c:	sub	r1, r2, r1
    cf80:	cmp	r1, #4
    cf84:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    cf88:	cmp	r2, #896	; 0x380
    cf8c:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    cf90:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    cf94:	cmp	r2, #4064	; 0xfe0
    cf98:	blt	d0d4 <lell_packet_is_data@@Base+0x2a3c>
    cf9c:	sub	r1, r2, #4064	; 0xfe0
    cfa0:	cmp	r1, #31
    cfa4:	bhi	d0f8 <lell_packet_is_data@@Base+0x2a60>
    cfa8:	movw	r3, #1
    cfac:	mov	r2, #1
    cfb0:	movt	r3, #65535	; 0xffff
    cfb4:	tst	r3, r2, lsl r1
    cfb8:	addne	r0, r0, #1
    cfbc:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    cfc0:	movw	r1, #1531	; 0x5fb
    cfc4:	cmp	r2, r1
    cfc8:	ble	d08c <lell_packet_is_data@@Base+0x29f4>
    cfcc:	cmp	r2, #1664	; 0x680
    cfd0:	bge	d0b0 <lell_packet_is_data@@Base+0x2a18>
    cfd4:	movw	r1, #1532	; 0x5fc
    cfd8:	sub	r1, r2, r1
    cfdc:	cmp	r1, #7
    cfe0:	bhi	d0f8 <lell_packet_is_data@@Base+0x2a60>
    cfe4:	cmp	r1, #4
    cfe8:	bne	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    cfec:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    cff0:	cmp	r2, #2688	; 0xa80
    cff4:	bge	d048 <lell_packet_is_data@@Base+0x29b0>
    cff8:	movw	r1, #2556	; 0x9fc
    cffc:	sub	r1, r2, r1
    d000:	cmp	r1, #7
    d004:	bhi	d010 <lell_packet_is_data@@Base+0x2978>
    d008:	cmp	r1, #4
    d00c:	bne	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d010:	cmp	r2, #2432	; 0x980
    d014:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d018:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    d01c:	movw	r1, #3580	; 0xdfc
    d020:	sub	r1, r2, r1
    d024:	cmp	r1, #8
    d028:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d02c:	movw	r1, #3326	; 0xcfe
    d030:	sub	r1, r2, r1
    d034:	cmp	r1, #4
    d038:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d03c:	cmp	r2, #3456	; 0xd80
    d040:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d044:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    d048:	movw	r1, #2814	; 0xafe
    d04c:	sub	r1, r2, r1
    d050:	cmp	r1, #4
    d054:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d058:	cmp	r2, #2688	; 0xa80
    d05c:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d060:	cmp	r2, #2944	; 0xb80
    d064:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d068:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    d06c:	sub	r1, r2, #508	; 0x1fc
    d070:	cmp	r1, #7
    d074:	bhi	d080 <lell_packet_is_data@@Base+0x29e8>
    d078:	cmp	r1, #4
    d07c:	bne	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d080:	cmp	r2, #640	; 0x280
    d084:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d088:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    d08c:	movw	r1, #1278	; 0x4fe
    d090:	sub	r1, r2, r1
    d094:	cmp	r1, #4
    d098:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d09c:	cmp	r2, #1152	; 0x480
    d0a0:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d0a4:	cmp	r2, #1408	; 0x580
    d0a8:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d0ac:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    d0b0:	movw	r1, #1790	; 0x6fe
    d0b4:	sub	r1, r2, r1
    d0b8:	cmp	r1, #4
    d0bc:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d0c0:	cmp	r2, #1664	; 0x680
    d0c4:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d0c8:	cmp	r2, #1920	; 0x780
    d0cc:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d0d0:	b	d0f8 <lell_packet_is_data@@Base+0x2a60>
    d0d4:	movw	r1, #3838	; 0xefe
    d0d8:	sub	r1, r2, r1
    d0dc:	cmp	r1, #4
    d0e0:	bcc	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d0e4:	cmp	r2, #3712	; 0xe80
    d0e8:	beq	d0f4 <lell_packet_is_data@@Base+0x2a5c>
    d0ec:	cmp	r2, #3968	; 0xf80
    d0f0:	bne	d0f8 <lell_packet_is_data@@Base+0x2a60>
    d0f4:	add	r0, r0, #1
    d0f8:	lsr	r1, ip, #20
    d0fc:	movw	r2, #2035	; 0x7f3
    d100:	cmp	r1, r2
    d104:	ble	d144 <lell_packet_is_data@@Base+0x2aac>
    d108:	movw	r2, #3063	; 0xbf7
    d10c:	cmp	r1, r2
    d110:	ble	d768 <lell_packet_is_data@@Base+0x30d0>
    d114:	cmp	r1, #3712	; 0xe80
    d118:	bge	d7d4 <lell_packet_is_data@@Base+0x313c>
    d11c:	movw	r2, #3325	; 0xcfd
    d120:	cmp	r1, r2
    d124:	bgt	d85c <lell_packet_is_data@@Base+0x31c4>
    d128:	movw	r2, #3064	; 0xbf8
    d12c:	sub	r2, r1, r2
    d130:	cmp	r2, #16
    d134:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d138:	cmp	r1, #3200	; 0xc80
    d13c:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d140:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d144:	movw	r2, #765	; 0x2fd
    d148:	cmp	r1, r2
    d14c:	bgt	d79c <lell_packet_is_data@@Base+0x3104>
    d150:	cmp	r1, #384	; 0x180
    d154:	bhi	d8ac <lell_packet_is_data@@Base+0x3214>
    d158:	add	r2, pc, #4
    d15c:	ldr	r1, [r2, r1, lsl #2]
    d160:	add	pc, r2, r1
    d164:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d168:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d16c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d170:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d174:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d178:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d17c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d180:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d184:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d188:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d18c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d190:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d194:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d198:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d19c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1e4:	ldrdeq	r0, [r0], -r4
    d1e8:	ldrdeq	r0, [r0], -r4
    d1ec:	ldrdeq	r0, [r0], -r4
    d1f0:	ldrdeq	r0, [r0], -r4
    d1f4:	ldrdeq	r0, [r0], -r4
    d1f8:	ldrdeq	r0, [r0], -r4
    d1fc:	ldrdeq	r0, [r0], -r4
    d200:	ldrdeq	r0, [r0], -r4
    d204:	ldrdeq	r0, [r0], -r4
    d208:	ldrdeq	r0, [r0], -r4
    d20c:	ldrdeq	r0, [r0], -r4
    d210:	ldrdeq	r0, [r0], -r4
    d214:	ldrdeq	r0, [r0], -r4
    d218:	ldrdeq	r0, [r0], -r4
    d21c:	ldrdeq	r0, [r0], -r4
    d220:	ldrdeq	r0, [r0], -r4
    d224:	ldrdeq	r0, [r0], -r4
    d228:	ldrdeq	r0, [r0], -r4
    d22c:	ldrdeq	r0, [r0], -r4
    d230:	ldrdeq	r0, [r0], -r4
    d234:	ldrdeq	r0, [r0], -r4
    d238:	ldrdeq	r0, [r0], -r4
    d23c:	ldrdeq	r0, [r0], -r4
    d240:	ldrdeq	r0, [r0], -r4
    d244:	ldrdeq	r0, [r0], -r4
    d248:	ldrdeq	r0, [r0], -r4
    d24c:	ldrdeq	r0, [r0], -r4
    d250:	ldrdeq	r0, [r0], -r4
    d254:	ldrdeq	r0, [r0], -r4
    d258:	ldrdeq	r0, [r0], -r4
    d25c:	ldrdeq	r0, [r0], -r4
    d260:	ldrdeq	r0, [r0], -r4
    d264:	ldrdeq	r0, [r0], -r4
    d268:	ldrdeq	r0, [r0], -r4
    d26c:	ldrdeq	r0, [r0], -r4
    d270:	ldrdeq	r0, [r0], -r4
    d274:	ldrdeq	r0, [r0], -r4
    d278:	ldrdeq	r0, [r0], -r4
    d27c:	ldrdeq	r0, [r0], -r4
    d280:	ldrdeq	r0, [r0], -r4
    d284:	ldrdeq	r0, [r0], -r4
    d288:	ldrdeq	r0, [r0], -r4
    d28c:	ldrdeq	r0, [r0], -r4
    d290:	ldrdeq	r0, [r0], -r4
    d294:	ldrdeq	r0, [r0], -r4
    d298:	ldrdeq	r0, [r0], -r4
    d29c:	ldrdeq	r0, [r0], -r4
    d2a0:	ldrdeq	r0, [r0], -r4
    d2a4:	ldrdeq	r0, [r0], -r4
    d2a8:	ldrdeq	r0, [r0], -r4
    d2ac:	ldrdeq	r0, [r0], -r4
    d2b0:	ldrdeq	r0, [r0], -r4
    d2b4:	ldrdeq	r0, [r0], -r4
    d2b8:	ldrdeq	r0, [r0], -r4
    d2bc:	ldrdeq	r0, [r0], -r4
    d2c0:	ldrdeq	r0, [r0], -r4
    d2c4:	ldrdeq	r0, [r0], -r4
    d2c8:	ldrdeq	r0, [r0], -r4
    d2cc:	ldrdeq	r0, [r0], -r4
    d2d0:	ldrdeq	r0, [r0], -r4
    d2d4:	ldrdeq	r0, [r0], -r4
    d2d8:	ldrdeq	r0, [r0], -r4
    d2dc:	ldrdeq	r0, [r0], -r4
    d2e0:	ldrdeq	r0, [r0], -r4
    d2e4:	ldrdeq	r0, [r0], -r4
    d2e8:	ldrdeq	r0, [r0], -r4
    d2ec:	ldrdeq	r0, [r0], -r4
    d2f0:	ldrdeq	r0, [r0], -r4
    d2f4:	ldrdeq	r0, [r0], -r4
    d2f8:	ldrdeq	r0, [r0], -r4
    d2fc:	ldrdeq	r0, [r0], -r4
    d300:	ldrdeq	r0, [r0], -r4
    d304:	ldrdeq	r0, [r0], -r4
    d308:	ldrdeq	r0, [r0], -r4
    d30c:	ldrdeq	r0, [r0], -r4
    d310:	ldrdeq	r0, [r0], -r4
    d314:	ldrdeq	r0, [r0], -r4
    d318:	ldrdeq	r0, [r0], -r4
    d31c:	ldrdeq	r0, [r0], -r4
    d320:	ldrdeq	r0, [r0], -r4
    d324:	ldrdeq	r0, [r0], -r4
    d328:	ldrdeq	r0, [r0], -r4
    d32c:	ldrdeq	r0, [r0], -r4
    d330:	ldrdeq	r0, [r0], -r4
    d334:	ldrdeq	r0, [r0], -r4
    d338:	ldrdeq	r0, [r0], -r4
    d33c:	ldrdeq	r0, [r0], -r4
    d340:	ldrdeq	r0, [r0], -r4
    d344:	ldrdeq	r0, [r0], -r4
    d348:	ldrdeq	r0, [r0], -r4
    d34c:	ldrdeq	r0, [r0], -r4
    d350:	ldrdeq	r0, [r0], -r4
    d354:	ldrdeq	r0, [r0], -r4
    d358:	ldrdeq	r0, [r0], -r4
    d35c:	ldrdeq	r0, [r0], -r4
    d360:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d364:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d368:	ldrdeq	r0, [r0], -r4
    d36c:	ldrdeq	r0, [r0], -r4
    d370:	ldrdeq	r0, [r0], -r4
    d374:	ldrdeq	r0, [r0], -r4
    d378:	ldrdeq	r0, [r0], -r4
    d37c:	ldrdeq	r0, [r0], -r4
    d380:	ldrdeq	r0, [r0], -r4
    d384:	ldrdeq	r0, [r0], -r4
    d388:	ldrdeq	r0, [r0], -r4
    d38c:	ldrdeq	r0, [r0], -r4
    d390:	ldrdeq	r0, [r0], -r4
    d394:	ldrdeq	r0, [r0], -r4
    d398:	ldrdeq	r0, [r0], -r4
    d39c:	ldrdeq	r0, [r0], -r4
    d3a0:	ldrdeq	r0, [r0], -r4
    d3a4:	ldrdeq	r0, [r0], -r4
    d3a8:	ldrdeq	r0, [r0], -r4
    d3ac:	ldrdeq	r0, [r0], -r4
    d3b0:	ldrdeq	r0, [r0], -r4
    d3b4:	ldrdeq	r0, [r0], -r4
    d3b8:	ldrdeq	r0, [r0], -r4
    d3bc:	ldrdeq	r0, [r0], -r4
    d3c0:	ldrdeq	r0, [r0], -r4
    d3c4:	ldrdeq	r0, [r0], -r4
    d3c8:	ldrdeq	r0, [r0], -r4
    d3cc:	ldrdeq	r0, [r0], -r4
    d3d0:	ldrdeq	r0, [r0], -r4
    d3d4:	ldrdeq	r0, [r0], -r4
    d3d8:	ldrdeq	r0, [r0], -r4
    d3dc:	ldrdeq	r0, [r0], -r4
    d3e0:	ldrdeq	r0, [r0], -r4
    d3e4:	ldrdeq	r0, [r0], -r4
    d3e8:	ldrdeq	r0, [r0], -r4
    d3ec:	ldrdeq	r0, [r0], -r4
    d3f0:	ldrdeq	r0, [r0], -r4
    d3f4:	ldrdeq	r0, [r0], -r4
    d3f8:	ldrdeq	r0, [r0], -r4
    d3fc:	ldrdeq	r0, [r0], -r4
    d400:	ldrdeq	r0, [r0], -r4
    d404:	ldrdeq	r0, [r0], -r4
    d408:	ldrdeq	r0, [r0], -r4
    d40c:	ldrdeq	r0, [r0], -r4
    d410:	ldrdeq	r0, [r0], -r4
    d414:	ldrdeq	r0, [r0], -r4
    d418:	ldrdeq	r0, [r0], -r4
    d41c:	ldrdeq	r0, [r0], -r4
    d420:	ldrdeq	r0, [r0], -r4
    d424:	ldrdeq	r0, [r0], -r4
    d428:	ldrdeq	r0, [r0], -r4
    d42c:	ldrdeq	r0, [r0], -r4
    d430:	ldrdeq	r0, [r0], -r4
    d434:	ldrdeq	r0, [r0], -r4
    d438:	ldrdeq	r0, [r0], -r4
    d43c:	ldrdeq	r0, [r0], -r4
    d440:	ldrdeq	r0, [r0], -r4
    d444:	ldrdeq	r0, [r0], -r4
    d448:	ldrdeq	r0, [r0], -r4
    d44c:	ldrdeq	r0, [r0], -r4
    d450:	ldrdeq	r0, [r0], -r4
    d454:	ldrdeq	r0, [r0], -r4
    d458:	ldrdeq	r0, [r0], -r4
    d45c:	ldrdeq	r0, [r0], -r4
    d460:	ldrdeq	r0, [r0], -r4
    d464:	ldrdeq	r0, [r0], -r4
    d468:	ldrdeq	r0, [r0], -r4
    d46c:	ldrdeq	r0, [r0], -r4
    d470:	ldrdeq	r0, [r0], -r4
    d474:	ldrdeq	r0, [r0], -r4
    d478:	ldrdeq	r0, [r0], -r4
    d47c:	ldrdeq	r0, [r0], -r4
    d480:	ldrdeq	r0, [r0], -r4
    d484:	ldrdeq	r0, [r0], -r4
    d488:	ldrdeq	r0, [r0], -r4
    d48c:	ldrdeq	r0, [r0], -r4
    d490:	ldrdeq	r0, [r0], -r4
    d494:	ldrdeq	r0, [r0], -r4
    d498:	ldrdeq	r0, [r0], -r4
    d49c:	ldrdeq	r0, [r0], -r4
    d4a0:	ldrdeq	r0, [r0], -r4
    d4a4:	ldrdeq	r0, [r0], -r4
    d4a8:	ldrdeq	r0, [r0], -r4
    d4ac:	ldrdeq	r0, [r0], -r4
    d4b0:	ldrdeq	r0, [r0], -r4
    d4b4:	ldrdeq	r0, [r0], -r4
    d4b8:	ldrdeq	r0, [r0], -r4
    d4bc:	ldrdeq	r0, [r0], -r4
    d4c0:	ldrdeq	r0, [r0], -r4
    d4c4:	ldrdeq	r0, [r0], -r4
    d4c8:	ldrdeq	r0, [r0], -r4
    d4cc:	ldrdeq	r0, [r0], -r4
    d4d0:	ldrdeq	r0, [r0], -r4
    d4d4:	ldrdeq	r0, [r0], -r4
    d4d8:	ldrdeq	r0, [r0], -r4
    d4dc:	ldrdeq	r0, [r0], -r4
    d4e0:	ldrdeq	r0, [r0], -r4
    d4e4:	ldrdeq	r0, [r0], -r4
    d4e8:	ldrdeq	r0, [r0], -r4
    d4ec:	ldrdeq	r0, [r0], -r4
    d4f0:	ldrdeq	r0, [r0], -r4
    d4f4:	ldrdeq	r0, [r0], -r4
    d4f8:	ldrdeq	r0, [r0], -r4
    d4fc:	ldrdeq	r0, [r0], -r4
    d500:	ldrdeq	r0, [r0], -r4
    d504:	ldrdeq	r0, [r0], -r4
    d508:	ldrdeq	r0, [r0], -r4
    d50c:	ldrdeq	r0, [r0], -r4
    d510:	ldrdeq	r0, [r0], -r4
    d514:	ldrdeq	r0, [r0], -r4
    d518:	ldrdeq	r0, [r0], -r4
    d51c:	ldrdeq	r0, [r0], -r4
    d520:	ldrdeq	r0, [r0], -r4
    d524:	ldrdeq	r0, [r0], -r4
    d528:	ldrdeq	r0, [r0], -r4
    d52c:	ldrdeq	r0, [r0], -r4
    d530:	ldrdeq	r0, [r0], -r4
    d534:	ldrdeq	r0, [r0], -r4
    d538:	ldrdeq	r0, [r0], -r4
    d53c:	ldrdeq	r0, [r0], -r4
    d540:	ldrdeq	r0, [r0], -r4
    d544:	ldrdeq	r0, [r0], -r4
    d548:	ldrdeq	r0, [r0], -r4
    d54c:	ldrdeq	r0, [r0], -r4
    d550:	ldrdeq	r0, [r0], -r4
    d554:	ldrdeq	r0, [r0], -r4
    d558:	ldrdeq	r0, [r0], -r4
    d55c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d560:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d564:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d568:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d56c:	ldrdeq	r0, [r0], -r4
    d570:	ldrdeq	r0, [r0], -r4
    d574:	ldrdeq	r0, [r0], -r4
    d578:	ldrdeq	r0, [r0], -r4
    d57c:	ldrdeq	r0, [r0], -r4
    d580:	ldrdeq	r0, [r0], -r4
    d584:	ldrdeq	r0, [r0], -r4
    d588:	ldrdeq	r0, [r0], -r4
    d58c:	ldrdeq	r0, [r0], -r4
    d590:	ldrdeq	r0, [r0], -r4
    d594:	ldrdeq	r0, [r0], -r4
    d598:	ldrdeq	r0, [r0], -r4
    d59c:	ldrdeq	r0, [r0], -r4
    d5a0:	ldrdeq	r0, [r0], -r4
    d5a4:	ldrdeq	r0, [r0], -r4
    d5a8:	ldrdeq	r0, [r0], -r4
    d5ac:	ldrdeq	r0, [r0], -r4
    d5b0:	ldrdeq	r0, [r0], -r4
    d5b4:	ldrdeq	r0, [r0], -r4
    d5b8:	ldrdeq	r0, [r0], -r4
    d5bc:	ldrdeq	r0, [r0], -r4
    d5c0:	ldrdeq	r0, [r0], -r4
    d5c4:	ldrdeq	r0, [r0], -r4
    d5c8:	ldrdeq	r0, [r0], -r4
    d5cc:	ldrdeq	r0, [r0], -r4
    d5d0:	ldrdeq	r0, [r0], -r4
    d5d4:	ldrdeq	r0, [r0], -r4
    d5d8:	ldrdeq	r0, [r0], -r4
    d5dc:	ldrdeq	r0, [r0], -r4
    d5e0:	ldrdeq	r0, [r0], -r4
    d5e4:	ldrdeq	r0, [r0], -r4
    d5e8:	ldrdeq	r0, [r0], -r4
    d5ec:	ldrdeq	r0, [r0], -r4
    d5f0:	ldrdeq	r0, [r0], -r4
    d5f4:	ldrdeq	r0, [r0], -r4
    d5f8:	ldrdeq	r0, [r0], -r4
    d5fc:	ldrdeq	r0, [r0], -r4
    d600:	ldrdeq	r0, [r0], -r4
    d604:	ldrdeq	r0, [r0], -r4
    d608:	ldrdeq	r0, [r0], -r4
    d60c:	ldrdeq	r0, [r0], -r4
    d610:	ldrdeq	r0, [r0], -r4
    d614:	ldrdeq	r0, [r0], -r4
    d618:	ldrdeq	r0, [r0], -r4
    d61c:	ldrdeq	r0, [r0], -r4
    d620:	ldrdeq	r0, [r0], -r4
    d624:	ldrdeq	r0, [r0], -r4
    d628:	ldrdeq	r0, [r0], -r4
    d62c:	ldrdeq	r0, [r0], -r4
    d630:	ldrdeq	r0, [r0], -r4
    d634:	ldrdeq	r0, [r0], -r4
    d638:	ldrdeq	r0, [r0], -r4
    d63c:	ldrdeq	r0, [r0], -r4
    d640:	ldrdeq	r0, [r0], -r4
    d644:	ldrdeq	r0, [r0], -r4
    d648:	ldrdeq	r0, [r0], -r4
    d64c:	ldrdeq	r0, [r0], -r4
    d650:	ldrdeq	r0, [r0], -r4
    d654:	ldrdeq	r0, [r0], -r4
    d658:	ldrdeq	r0, [r0], -r4
    d65c:	ldrdeq	r0, [r0], -r4
    d660:	ldrdeq	r0, [r0], -r4
    d664:	ldrdeq	r0, [r0], -r4
    d668:	ldrdeq	r0, [r0], -r4
    d66c:	ldrdeq	r0, [r0], -r4
    d670:	ldrdeq	r0, [r0], -r4
    d674:	ldrdeq	r0, [r0], -r4
    d678:	ldrdeq	r0, [r0], -r4
    d67c:	ldrdeq	r0, [r0], -r4
    d680:	ldrdeq	r0, [r0], -r4
    d684:	ldrdeq	r0, [r0], -r4
    d688:	ldrdeq	r0, [r0], -r4
    d68c:	ldrdeq	r0, [r0], -r4
    d690:	ldrdeq	r0, [r0], -r4
    d694:	ldrdeq	r0, [r0], -r4
    d698:	ldrdeq	r0, [r0], -r4
    d69c:	ldrdeq	r0, [r0], -r4
    d6a0:	ldrdeq	r0, [r0], -r4
    d6a4:	ldrdeq	r0, [r0], -r4
    d6a8:	ldrdeq	r0, [r0], -r4
    d6ac:	ldrdeq	r0, [r0], -r4
    d6b0:	ldrdeq	r0, [r0], -r4
    d6b4:	ldrdeq	r0, [r0], -r4
    d6b8:	ldrdeq	r0, [r0], -r4
    d6bc:	ldrdeq	r0, [r0], -r4
    d6c0:	ldrdeq	r0, [r0], -r4
    d6c4:	ldrdeq	r0, [r0], -r4
    d6c8:	ldrdeq	r0, [r0], -r4
    d6cc:	ldrdeq	r0, [r0], -r4
    d6d0:	ldrdeq	r0, [r0], -r4
    d6d4:	ldrdeq	r0, [r0], -r4
    d6d8:	ldrdeq	r0, [r0], -r4
    d6dc:	ldrdeq	r0, [r0], -r4
    d6e0:	ldrdeq	r0, [r0], -r4
    d6e4:	ldrdeq	r0, [r0], -r4
    d6e8:	ldrdeq	r0, [r0], -r4
    d6ec:	ldrdeq	r0, [r0], -r4
    d6f0:	ldrdeq	r0, [r0], -r4
    d6f4:	ldrdeq	r0, [r0], -r4
    d6f8:	ldrdeq	r0, [r0], -r4
    d6fc:	ldrdeq	r0, [r0], -r4
    d700:	ldrdeq	r0, [r0], -r4
    d704:	ldrdeq	r0, [r0], -r4
    d708:	ldrdeq	r0, [r0], -r4
    d70c:	ldrdeq	r0, [r0], -r4
    d710:	ldrdeq	r0, [r0], -r4
    d714:	ldrdeq	r0, [r0], -r4
    d718:	ldrdeq	r0, [r0], -r4
    d71c:	ldrdeq	r0, [r0], -r4
    d720:	ldrdeq	r0, [r0], -r4
    d724:	ldrdeq	r0, [r0], -r4
    d728:	ldrdeq	r0, [r0], -r4
    d72c:	ldrdeq	r0, [r0], -r4
    d730:	ldrdeq	r0, [r0], -r4
    d734:	ldrdeq	r0, [r0], -r4
    d738:	ldrdeq	r0, [r0], -r4
    d73c:	ldrdeq	r0, [r0], -r4
    d740:	ldrdeq	r0, [r0], -r4
    d744:	ldrdeq	r0, [r0], -r4
    d748:	ldrdeq	r0, [r0], -r4
    d74c:	ldrdeq	r0, [r0], -r4
    d750:	ldrdeq	r0, [r0], -r4
    d754:	ldrdeq	r0, [r0], -r4
    d758:	ldrdeq	r0, [r0], -r4
    d75c:	ldrdeq	r0, [r0], -r4
    d760:	ldrdeq	r0, [r0], -r4
    d764:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d768:	cmp	r1, #2432	; 0x980
    d76c:	bge	d830 <lell_packet_is_data@@Base+0x3198>
    d770:	movw	r2, #2036	; 0x7f4
    d774:	sub	r2, r1, r2
    d778:	cmp	r2, #28
    d77c:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d780:	movw	r2, #2302	; 0x8fe
    d784:	sub	r2, r1, r2
    d788:	cmp	r2, #4
    d78c:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d790:	cmp	r1, #2176	; 0x880
    d794:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d798:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d79c:	cmp	r1, #1152	; 0x480
    d7a0:	bge	d800 <lell_packet_is_data@@Base+0x3168>
    d7a4:	sub	r2, r1, #1016	; 0x3f8
    d7a8:	cmp	r2, #15
    d7ac:	bhi	d7b8 <lell_packet_is_data@@Base+0x3120>
    d7b0:	cmp	r2, #9
    d7b4:	bne	d934 <lell_packet_is_data@@Base+0x329c>
    d7b8:	movw	r2, #766	; 0x2fe
    d7bc:	sub	r2, r1, r2
    d7c0:	cmp	r2, #4
    d7c4:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d7c8:	cmp	r1, #896	; 0x380
    d7cc:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d7d0:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d7d4:	cmp	r1, #4064	; 0xfe0
    d7d8:	blt	d914 <lell_packet_is_data@@Base+0x327c>
    d7dc:	sub	r1, r1, #4064	; 0xfe0
    d7e0:	cmp	r1, #31
    d7e4:	bhi	d938 <lell_packet_is_data@@Base+0x32a0>
    d7e8:	movw	r3, #1
    d7ec:	mov	r2, #1
    d7f0:	movt	r3, #65535	; 0xffff
    d7f4:	tst	r3, r2, lsl r1
    d7f8:	addne	r0, r0, #1
    d7fc:	pop	{r4, r5, r6, sl, fp, pc}
    d800:	movw	r2, #1531	; 0x5fb
    d804:	cmp	r1, r2
    d808:	ble	d8cc <lell_packet_is_data@@Base+0x3234>
    d80c:	cmp	r1, #1664	; 0x680
    d810:	bge	d8f0 <lell_packet_is_data@@Base+0x3258>
    d814:	movw	r2, #1532	; 0x5fc
    d818:	sub	r1, r1, r2
    d81c:	cmp	r1, #7
    d820:	bhi	d938 <lell_packet_is_data@@Base+0x32a0>
    d824:	cmp	r1, #4
    d828:	bne	d934 <lell_packet_is_data@@Base+0x329c>
    d82c:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d830:	cmp	r1, #2688	; 0xa80
    d834:	bge	d888 <lell_packet_is_data@@Base+0x31f0>
    d838:	movw	r2, #2556	; 0x9fc
    d83c:	sub	r2, r1, r2
    d840:	cmp	r2, #7
    d844:	bhi	d850 <lell_packet_is_data@@Base+0x31b8>
    d848:	cmp	r2, #4
    d84c:	bne	d934 <lell_packet_is_data@@Base+0x329c>
    d850:	cmp	r1, #2432	; 0x980
    d854:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d858:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d85c:	movw	r2, #3580	; 0xdfc
    d860:	sub	r2, r1, r2
    d864:	cmp	r2, #8
    d868:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d86c:	movw	r2, #3326	; 0xcfe
    d870:	sub	r2, r1, r2
    d874:	cmp	r2, #4
    d878:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d87c:	cmp	r1, #3456	; 0xd80
    d880:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d884:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d888:	movw	r2, #2814	; 0xafe
    d88c:	sub	r2, r1, r2
    d890:	cmp	r2, #4
    d894:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d898:	cmp	r1, #2688	; 0xa80
    d89c:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d8a0:	cmp	r1, #2944	; 0xb80
    d8a4:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d8a8:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d8ac:	sub	r2, r1, #508	; 0x1fc
    d8b0:	cmp	r2, #7
    d8b4:	bhi	d8c0 <lell_packet_is_data@@Base+0x3228>
    d8b8:	cmp	r2, #4
    d8bc:	bne	d934 <lell_packet_is_data@@Base+0x329c>
    d8c0:	cmp	r1, #640	; 0x280
    d8c4:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d8c8:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d8cc:	movw	r2, #1278	; 0x4fe
    d8d0:	sub	r2, r1, r2
    d8d4:	cmp	r2, #4
    d8d8:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d8dc:	cmp	r1, #1152	; 0x480
    d8e0:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d8e4:	cmp	r1, #1408	; 0x580
    d8e8:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d8ec:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d8f0:	movw	r2, #1790	; 0x6fe
    d8f4:	sub	r2, r1, r2
    d8f8:	cmp	r2, #4
    d8fc:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d900:	cmp	r1, #1664	; 0x680
    d904:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d908:	cmp	r1, #1920	; 0x780
    d90c:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d910:	b	d938 <lell_packet_is_data@@Base+0x32a0>
    d914:	movw	r2, #3838	; 0xefe
    d918:	sub	r2, r1, r2
    d91c:	cmp	r2, #4
    d920:	bcc	d934 <lell_packet_is_data@@Base+0x329c>
    d924:	cmp	r1, #3712	; 0xe80
    d928:	beq	d934 <lell_packet_is_data@@Base+0x329c>
    d92c:	cmp	r1, #3968	; 0xf80
    d930:	bne	d938 <lell_packet_is_data@@Base+0x32a0>
    d934:	add	r0, r0, #1
    d938:	pop	{r4, r5, r6, sl, fp, pc}

0000d93c <lell_get_access_address@@Base>:
    d93c:	ldr	r0, [r0, #64]	; 0x40
    d940:	bx	lr

0000d944 <lell_get_access_address_offenses@@Base>:
    d944:	ldr	r0, [r0, #92]	; 0x5c
    d948:	bx	lr

0000d94c <lell_get_channel_index@@Base>:
    d94c:	ldrb	r0, [r0, #68]	; 0x44
    d950:	bx	lr

0000d954 <lell_get_channel_k@@Base>:
    d954:	ldrb	r0, [r0, #69]	; 0x45
    d958:	bx	lr

0000d95c <lell_get_adv_type_str@@Base>:
    d95c:	ldrb	r2, [r0, #68]	; 0x44
    d960:	mov	r1, r0
    d964:	mov	r0, #0
    d968:	cmp	r2, #37	; 0x25
    d96c:	bxcc	lr
    d970:	ldrb	r0, [r1, #80]	; 0x50
    d974:	cmp	r0, #6
    d978:	bhi	d98c <lell_get_adv_type_str@@Base+0x30>
    d97c:	ldr	r1, [pc, #24]	; d99c <lell_get_adv_type_str@@Base+0x40>
    d980:	add	r1, pc, r1
    d984:	ldr	r0, [r1, r0, lsl #2]
    d988:	bx	lr
    d98c:	ldr	r0, [pc, #4]	; d998 <lell_get_adv_type_str@@Base+0x3c>
    d990:	add	r0, pc, r0
    d994:	bx	lr
    d998:	andeq	r5, r0, r0, ror #7
    d99c:	andeq	fp, r1, ip, lsr #9

0000d9a0 <lell_print@@Base>:
    d9a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d9a4:	add	fp, sp, #28
    d9a8:	sub	sp, sp, #4
    d9ac:	mov	r4, r0
    d9b0:	ldrb	r0, [r0, #68]	; 0x44
    d9b4:	cmp	r0, #36	; 0x24
    d9b8:	bls	da28 <lell_print@@Base+0x88>
    d9bc:	ldrb	r0, [r4, #100]	; 0x64
    d9c0:	ldr	r1, [pc, #2052]	; e1cc <lell_print@@Base+0x82c>
    d9c4:	ldr	r2, [pc, #2052]	; e1d0 <lell_print@@Base+0x830>
    d9c8:	ldr	r3, [r4, #72]	; 0x48
    d9cc:	add	r1, pc, r1
    d9d0:	tst	r0, #1
    d9d4:	add	r2, pc, r2
    d9d8:	moveq	r2, r1
    d9dc:	ldr	r1, [r4, #64]	; 0x40
    d9e0:	ldr	r0, [pc, #2028]	; e1d4 <lell_print@@Base+0x834>
    d9e4:	add	r0, pc, r0
    d9e8:	bl	4500 <printf@plt>
    d9ec:	ldrb	r1, [r4, #68]	; 0x44
    d9f0:	ldr	r0, [pc, #2016]	; e1d8 <lell_print@@Base+0x838>
    d9f4:	add	r0, pc, r0
    d9f8:	bl	4500 <printf@plt>
    d9fc:	ldrb	r0, [r4, #68]	; 0x44
    da00:	mov	r1, #0
    da04:	cmp	r0, #37	; 0x25
    da08:	bcc	dae4 <lell_print@@Base+0x144>
    da0c:	ldrb	r0, [r4, #80]	; 0x50
    da10:	cmp	r0, #6
    da14:	bhi	dadc <lell_print@@Base+0x13c>
    da18:	ldr	r1, [pc, #1984]	; e1e0 <lell_print@@Base+0x840>
    da1c:	add	r1, pc, r1
    da20:	ldr	r1, [r1, r0, lsl #2]
    da24:	b	dae4 <lell_print@@Base+0x144>
    da28:	ldrb	r0, [r4, #100]	; 0x64
    da2c:	ldr	r1, [pc, #1908]	; e1a8 <lell_print@@Base+0x808>
    da30:	ldr	r2, [pc, #1908]	; e1ac <lell_print@@Base+0x80c>
    da34:	ldrb	r5, [r4, #4]
    da38:	ldr	r3, [r4, #72]	; 0x48
    da3c:	add	r1, pc, r1
    da40:	tst	r0, #1
    da44:	add	r2, pc, r2
    da48:	moveq	r2, r1
    da4c:	ldr	r1, [r4, #64]	; 0x40
    da50:	ldr	r0, [pc, #1880]	; e1b0 <lell_print@@Base+0x810>
    da54:	add	r0, pc, r0
    da58:	bl	4500 <printf@plt>
    da5c:	ldrb	r1, [r4, #68]	; 0x44
    da60:	ldr	r0, [pc, #1868]	; e1b4 <lell_print@@Base+0x814>
    da64:	add	r0, pc, r0
    da68:	bl	4500 <printf@plt>
    da6c:	ldr	r0, [pc, #1860]	; e1b8 <lell_print@@Base+0x818>
    da70:	and	r5, r5, #3
    da74:	mov	r1, r5
    da78:	add	r0, pc, r0
    da7c:	ldr	r2, [r0, r5, lsl #2]
    da80:	ldr	r0, [pc, #1844]	; e1bc <lell_print@@Base+0x81c>
    da84:	add	r0, pc, r0
    da88:	bl	4500 <printf@plt>
    da8c:	ldrb	r0, [r4, #4]
    da90:	ubfx	r1, r0, #2, #1
    da94:	ubfx	r2, r0, #3, #1
    da98:	ubfx	r3, r0, #4, #1
    da9c:	ldr	r0, [pc, #1820]	; e1c0 <lell_print@@Base+0x820>
    daa0:	add	r0, pc, r0
    daa4:	bl	4500 <printf@plt>
    daa8:	cmp	r5, #3
    daac:	bne	de84 <lell_print@@Base+0x4e4>
    dab0:	ldrb	r1, [r4, #6]
    dab4:	ldr	r2, [pc, #1800]	; e1c4 <lell_print@@Base+0x824>
    dab8:	cmp	r1, #20
    dabc:	mov	r0, r1
    dac0:	add	r2, pc, r2
    dac4:	movcs	r0, #20
    dac8:	ldr	r2, [r2, r0, lsl #2]
    dacc:	ldr	r0, [pc, #1780]	; e1c8 <lell_print@@Base+0x828>
    dad0:	add	r0, pc, r0
    dad4:	bl	4500 <printf@plt>
    dad8:	b	de84 <lell_print@@Base+0x4e4>
    dadc:	ldr	r1, [pc, #1784]	; e1dc <lell_print@@Base+0x83c>
    dae0:	add	r1, pc, r1
    dae4:	ldr	r0, [pc, #1784]	; e1e4 <lell_print@@Base+0x844>
    dae8:	add	r0, pc, r0
    daec:	bl	4500 <printf@plt>
    daf0:	ldrb	r0, [r4, #80]	; 0x50
    daf4:	cmp	r0, #6
    daf8:	bhi	de84 <lell_print@@Base+0x4e4>
    dafc:	add	r1, pc, #4
    db00:	ldr	r0, [r1, r0, lsl #2]
    db04:	add	pc, r1, r0
    db08:	andeq	r0, r0, ip, lsl r0
    db0c:	strdeq	r0, [r0], -r8
    db10:	andeq	r0, r0, ip, lsl r0
    db14:	muleq	r0, ip, r1
    db18:	muleq	r0, r8, r2
    db1c:	andeq	r0, r0, r4, lsr r4
    db20:	andeq	r0, r0, ip, lsl r0
    db24:	ldr	r6, [r4, #84]	; 0x54
    db28:	ldrb	r2, [r4, #11]
    db2c:	ldr	r0, [pc, #1716]	; e1e8 <lell_print@@Base+0x848>
    db30:	ldr	r1, [pc, #1716]	; e1ec <lell_print@@Base+0x84c>
    db34:	add	r0, pc, r0
    db38:	add	r1, pc, r1
    db3c:	bl	4500 <printf@plt>
    db40:	ldrb	r1, [r4, #10]
    db44:	ldr	r5, [pc, #1700]	; e1f0 <lell_print@@Base+0x850>
    db48:	add	r5, pc, r5
    db4c:	mov	r0, r5
    db50:	bl	4500 <printf@plt>
    db54:	ldrb	r1, [r4, #9]
    db58:	mov	r0, r5
    db5c:	bl	4500 <printf@plt>
    db60:	ldrb	r1, [r4, #8]
    db64:	mov	r0, r5
    db68:	bl	4500 <printf@plt>
    db6c:	ldrb	r1, [r4, #7]
    db70:	mov	r0, r5
    db74:	bl	4500 <printf@plt>
    db78:	ldrb	r1, [r4, #6]
    db7c:	mov	r0, r5
    db80:	bl	4500 <printf@plt>
    db84:	ldr	r0, [pc, #1640]	; e1f4 <lell_print@@Base+0x854>
    db88:	ldr	r1, [pc, #1640]	; e1f8 <lell_print@@Base+0x858>
    db8c:	cmp	r6, #0
    db90:	add	r0, pc, r0
    db94:	add	r1, pc, r1
    db98:	moveq	r1, r0
    db9c:	ldr	r0, [pc, #1624]	; e1fc <lell_print@@Base+0x85c>
    dba0:	add	r0, pc, r0
    dba4:	bl	4500 <printf@plt>
    dba8:	ldr	r0, [r4, #72]	; 0x48
    dbac:	cmp	r0, #7
    dbb0:	blt	de84 <lell_print@@Base+0x4e4>
    dbb4:	ldr	r0, [pc, #1604]	; e200 <lell_print@@Base+0x860>
    dbb8:	add	r0, pc, r0
    dbbc:	bl	4500 <printf@plt>
    dbc0:	ldr	r0, [r4, #72]	; 0x48
    dbc4:	cmp	r0, #7
    dbc8:	blt	de6c <lell_print@@Base+0x4cc>
    dbcc:	ldr	r5, [pc, #1584]	; e204 <lell_print@@Base+0x864>
    dbd0:	add	r6, r4, #12
    dbd4:	mov	r7, #0
    dbd8:	add	r5, pc, r5
    dbdc:	ldrb	r1, [r6, r7]
    dbe0:	mov	r0, r5
    dbe4:	bl	4500 <printf@plt>
    dbe8:	ldr	r0, [r4, #72]	; 0x48
    dbec:	add	r7, r7, #1
    dbf0:	sub	r0, r0, #6
    dbf4:	cmp	r7, r0
    dbf8:	blt	dbdc <lell_print@@Base+0x23c>
    dbfc:	b	de6c <lell_print@@Base+0x4cc>
    dc00:	ldr	r7, [r4, #84]	; 0x54
    dc04:	ldrb	r2, [r4, #11]
    dc08:	ldr	r8, [pc, #1528]	; e208 <lell_print@@Base+0x868>
    dc0c:	ldr	r1, [pc, #1528]	; e20c <lell_print@@Base+0x86c>
    dc10:	add	r8, pc, r8
    dc14:	add	r1, pc, r1
    dc18:	mov	r0, r8
    dc1c:	bl	4500 <printf@plt>
    dc20:	ldrb	r1, [r4, #10]
    dc24:	ldr	r5, [pc, #1508]	; e210 <lell_print@@Base+0x870>
    dc28:	add	r5, pc, r5
    dc2c:	mov	r0, r5
    dc30:	bl	4500 <printf@plt>
    dc34:	ldrb	r1, [r4, #9]
    dc38:	mov	r0, r5
    dc3c:	bl	4500 <printf@plt>
    dc40:	ldrb	r1, [r4, #8]
    dc44:	mov	r0, r5
    dc48:	bl	4500 <printf@plt>
    dc4c:	ldrb	r1, [r4, #7]
    dc50:	mov	r0, r5
    dc54:	bl	4500 <printf@plt>
    dc58:	ldrb	r1, [r4, #6]
    dc5c:	mov	r0, r5
    dc60:	bl	4500 <printf@plt>
    dc64:	ldr	r9, [pc, #1448]	; e214 <lell_print@@Base+0x874>
    dc68:	ldr	r6, [pc, #1448]	; e218 <lell_print@@Base+0x878>
    dc6c:	ldr	sl, [pc, #1448]	; e21c <lell_print@@Base+0x87c>
    dc70:	cmp	r7, #0
    dc74:	add	r6, pc, r6
    dc78:	add	sl, pc, sl
    dc7c:	add	r9, pc, r9
    dc80:	mov	r1, r6
    dc84:	moveq	r1, r9
    dc88:	mov	r0, sl
    dc8c:	bl	4500 <printf@plt>
    dc90:	ldr	r7, [r4, #88]	; 0x58
    dc94:	ldrb	r2, [r4, #17]
    dc98:	ldr	r1, [pc, #1408]	; e220 <lell_print@@Base+0x880>
    dc9c:	add	r1, pc, r1
    dca0:	b	dd44 <lell_print@@Base+0x3a4>
    dca4:	ldr	r7, [r4, #84]	; 0x54
    dca8:	ldrb	r2, [r4, #11]
    dcac:	ldr	r8, [pc, #1392]	; e224 <lell_print@@Base+0x884>
    dcb0:	ldr	r1, [pc, #1392]	; e228 <lell_print@@Base+0x888>
    dcb4:	add	r8, pc, r8
    dcb8:	add	r1, pc, r1
    dcbc:	mov	r0, r8
    dcc0:	bl	4500 <printf@plt>
    dcc4:	ldrb	r1, [r4, #10]
    dcc8:	ldr	r5, [pc, #1372]	; e22c <lell_print@@Base+0x88c>
    dccc:	add	r5, pc, r5
    dcd0:	mov	r0, r5
    dcd4:	bl	4500 <printf@plt>
    dcd8:	ldrb	r1, [r4, #9]
    dcdc:	mov	r0, r5
    dce0:	bl	4500 <printf@plt>
    dce4:	ldrb	r1, [r4, #8]
    dce8:	mov	r0, r5
    dcec:	bl	4500 <printf@plt>
    dcf0:	ldrb	r1, [r4, #7]
    dcf4:	mov	r0, r5
    dcf8:	bl	4500 <printf@plt>
    dcfc:	ldrb	r1, [r4, #6]
    dd00:	mov	r0, r5
    dd04:	bl	4500 <printf@plt>
    dd08:	ldr	r9, [pc, #1312]	; e230 <lell_print@@Base+0x890>
    dd0c:	ldr	r6, [pc, #1312]	; e234 <lell_print@@Base+0x894>
    dd10:	ldr	sl, [pc, #1312]	; e238 <lell_print@@Base+0x898>
    dd14:	cmp	r7, #0
    dd18:	add	r6, pc, r6
    dd1c:	add	sl, pc, sl
    dd20:	add	r9, pc, r9
    dd24:	mov	r1, r6
    dd28:	moveq	r1, r9
    dd2c:	mov	r0, sl
    dd30:	bl	4500 <printf@plt>
    dd34:	ldr	r7, [r4, #88]	; 0x58
    dd38:	ldrb	r2, [r4, #17]
    dd3c:	ldr	r1, [pc, #1272]	; e23c <lell_print@@Base+0x89c>
    dd40:	add	r1, pc, r1
    dd44:	mov	r0, r8
    dd48:	bl	4500 <printf@plt>
    dd4c:	ldrb	r1, [r4, #16]
    dd50:	mov	r0, r5
    dd54:	bl	4500 <printf@plt>
    dd58:	ldrb	r1, [r4, #15]
    dd5c:	mov	r0, r5
    dd60:	bl	4500 <printf@plt>
    dd64:	ldrb	r1, [r4, #14]
    dd68:	mov	r0, r5
    dd6c:	bl	4500 <printf@plt>
    dd70:	ldrb	r1, [r4, #13]
    dd74:	mov	r0, r5
    dd78:	bl	4500 <printf@plt>
    dd7c:	ldrb	r1, [r4, #12]
    dd80:	mov	r0, r5
    dd84:	bl	4500 <printf@plt>
    dd88:	cmp	r7, #0
    dd8c:	mov	r0, sl
    dd90:	moveq	r6, r9
    dd94:	mov	r1, r6
    dd98:	bl	4500 <printf@plt>
    dd9c:	b	de84 <lell_print@@Base+0x4e4>
    dda0:	ldr	r6, [r4, #84]	; 0x54
    dda4:	ldrb	r2, [r4, #11]
    dda8:	ldr	r0, [pc, #1168]	; e240 <lell_print@@Base+0x8a0>
    ddac:	ldr	r1, [pc, #1168]	; e244 <lell_print@@Base+0x8a4>
    ddb0:	add	r0, pc, r0
    ddb4:	add	r1, pc, r1
    ddb8:	bl	4500 <printf@plt>
    ddbc:	ldrb	r1, [r4, #10]
    ddc0:	ldr	r5, [pc, #1152]	; e248 <lell_print@@Base+0x8a8>
    ddc4:	add	r5, pc, r5
    ddc8:	mov	r0, r5
    ddcc:	bl	4500 <printf@plt>
    ddd0:	ldrb	r1, [r4, #9]
    ddd4:	mov	r0, r5
    ddd8:	bl	4500 <printf@plt>
    dddc:	ldrb	r1, [r4, #8]
    dde0:	mov	r0, r5
    dde4:	bl	4500 <printf@plt>
    dde8:	ldrb	r1, [r4, #7]
    ddec:	mov	r0, r5
    ddf0:	bl	4500 <printf@plt>
    ddf4:	ldrb	r1, [r4, #6]
    ddf8:	mov	r0, r5
    ddfc:	bl	4500 <printf@plt>
    de00:	ldr	r0, [pc, #1092]	; e24c <lell_print@@Base+0x8ac>
    de04:	ldr	r1, [pc, #1092]	; e250 <lell_print@@Base+0x8b0>
    de08:	cmp	r6, #0
    de0c:	add	r0, pc, r0
    de10:	add	r1, pc, r1
    de14:	moveq	r1, r0
    de18:	ldr	r0, [pc, #1076]	; e254 <lell_print@@Base+0x8b4>
    de1c:	add	r0, pc, r0
    de20:	bl	4500 <printf@plt>
    de24:	ldr	r0, [pc, #1068]	; e258 <lell_print@@Base+0x8b8>
    de28:	add	r0, pc, r0
    de2c:	bl	4500 <printf@plt>
    de30:	ldr	r0, [r4, #72]	; 0x48
    de34:	cmp	r0, #7
    de38:	blt	de6c <lell_print@@Base+0x4cc>
    de3c:	ldr	r5, [pc, #1048]	; e25c <lell_print@@Base+0x8bc>
    de40:	add	r6, r4, #12
    de44:	mov	r7, #0
    de48:	add	r5, pc, r5
    de4c:	ldrb	r1, [r6, r7]
    de50:	mov	r0, r5
    de54:	bl	4500 <printf@plt>
    de58:	ldr	r0, [r4, #72]	; 0x48
    de5c:	add	r7, r7, #1
    de60:	sub	r0, r0, #6
    de64:	cmp	r7, r0
    de68:	blt	de4c <lell_print@@Base+0x4ac>
    de6c:	mov	r0, #10
    de70:	bl	4704 <putchar@plt>
    de74:	ldr	r1, [r4, #72]	; 0x48
    de78:	add	r0, r4, #12
    de7c:	sub	r1, r1, #6
    de80:	bl	e2cc <lell_print@@Base+0x92c>
    de84:	mov	r0, #10
    de88:	bl	4704 <putchar@plt>
    de8c:	ldr	r0, [pc, #1064]	; e2bc <lell_print@@Base+0x91c>
    de90:	add	r0, pc, r0
    de94:	bl	4500 <printf@plt>
    de98:	ldr	r0, [r4, #72]	; 0x48
    de9c:	cmp	r0, #1
    dea0:	blt	ded4 <lell_print@@Base+0x534>
    dea4:	ldr	r5, [pc, #1044]	; e2c0 <lell_print@@Base+0x920>
    dea8:	mov	r6, #6
    deac:	add	r5, pc, r5
    deb0:	ldrb	r1, [r4, r6]
    deb4:	mov	r0, r5
    deb8:	bl	4500 <printf@plt>
    debc:	ldr	r1, [r4, #72]	; 0x48
    dec0:	add	r0, r6, #1
    dec4:	add	r1, r1, #5
    dec8:	cmp	r6, r1
    decc:	mov	r6, r0
    ded0:	blt	deb0 <lell_print@@Base+0x510>
    ded4:	mov	r0, #10
    ded8:	bl	4704 <putchar@plt>
    dedc:	ldr	r0, [pc, #992]	; e2c4 <lell_print@@Base+0x924>
    dee0:	add	r0, pc, r0
    dee4:	bl	4500 <printf@plt>
    dee8:	ldr	r0, [r4, #72]	; 0x48
    deec:	add	r0, r0, r4
    def0:	ldrb	r1, [r0, #6]
    def4:	ldr	r5, [pc, #972]	; e2c8 <lell_print@@Base+0x928>
    def8:	add	r5, pc, r5
    defc:	mov	r0, r5
    df00:	bl	4500 <printf@plt>
    df04:	ldr	r0, [r4, #72]	; 0x48
    df08:	add	r0, r0, r4
    df0c:	ldrb	r1, [r0, #7]
    df10:	mov	r0, r5
    df14:	bl	4500 <printf@plt>
    df18:	ldr	r0, [r4, #72]	; 0x48
    df1c:	add	r0, r0, r4
    df20:	ldrb	r1, [r0, #8]
    df24:	mov	r0, r5
    df28:	bl	4500 <printf@plt>
    df2c:	mov	r0, #10
    df30:	sub	sp, fp, #28
    df34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    df38:	b	4704 <putchar@plt>
    df3c:	ldr	r7, [r4, #84]	; 0x54
    df40:	ldrb	r2, [r4, #11]
    df44:	ldr	r8, [pc, #788]	; e260 <lell_print@@Base+0x8c0>
    df48:	ldr	r1, [pc, #788]	; e264 <lell_print@@Base+0x8c4>
    df4c:	add	r8, pc, r8
    df50:	add	r1, pc, r1
    df54:	mov	r0, r8
    df58:	bl	4500 <printf@plt>
    df5c:	ldrb	r1, [r4, #10]
    df60:	ldr	r5, [pc, #768]	; e268 <lell_print@@Base+0x8c8>
    df64:	add	r5, pc, r5
    df68:	mov	r0, r5
    df6c:	bl	4500 <printf@plt>
    df70:	ldrb	r1, [r4, #9]
    df74:	mov	r0, r5
    df78:	bl	4500 <printf@plt>
    df7c:	ldrb	r1, [r4, #8]
    df80:	mov	r0, r5
    df84:	bl	4500 <printf@plt>
    df88:	ldrb	r1, [r4, #7]
    df8c:	mov	r0, r5
    df90:	bl	4500 <printf@plt>
    df94:	ldrb	r1, [r4, #6]
    df98:	mov	r0, r5
    df9c:	bl	4500 <printf@plt>
    dfa0:	ldr	r9, [pc, #708]	; e26c <lell_print@@Base+0x8cc>
    dfa4:	ldr	r6, [pc, #708]	; e270 <lell_print@@Base+0x8d0>
    dfa8:	ldr	sl, [pc, #708]	; e274 <lell_print@@Base+0x8d4>
    dfac:	cmp	r7, #0
    dfb0:	add	r6, pc, r6
    dfb4:	add	sl, pc, sl
    dfb8:	add	r9, pc, r9
    dfbc:	mov	r1, r6
    dfc0:	moveq	r1, r9
    dfc4:	mov	r0, sl
    dfc8:	bl	4500 <printf@plt>
    dfcc:	ldr	r7, [r4, #88]	; 0x58
    dfd0:	ldrb	r2, [r4, #17]
    dfd4:	ldr	r1, [pc, #668]	; e278 <lell_print@@Base+0x8d8>
    dfd8:	mov	r0, r8
    dfdc:	add	r1, pc, r1
    dfe0:	bl	4500 <printf@plt>
    dfe4:	ldrb	r1, [r4, #16]
    dfe8:	mov	r0, r5
    dfec:	bl	4500 <printf@plt>
    dff0:	ldrb	r1, [r4, #15]
    dff4:	mov	r0, r5
    dff8:	bl	4500 <printf@plt>
    dffc:	ldrb	r1, [r4, #14]
    e000:	mov	r0, r5
    e004:	bl	4500 <printf@plt>
    e008:	ldrb	r1, [r4, #13]
    e00c:	mov	r0, r5
    e010:	bl	4500 <printf@plt>
    e014:	ldrb	r1, [r4, #12]
    e018:	mov	r0, r5
    e01c:	bl	4500 <printf@plt>
    e020:	cmp	r7, #0
    e024:	mov	r0, sl
    e028:	moveq	r6, r9
    e02c:	mov	r1, r6
    e030:	bl	4500 <printf@plt>
    e034:	ldr	r2, [r4, #18]
    e038:	ldr	r0, [pc, #572]	; e27c <lell_print@@Base+0x8dc>
    e03c:	ldr	r1, [pc, #572]	; e280 <lell_print@@Base+0x8e0>
    e040:	add	r0, pc, r0
    e044:	add	r1, pc, r1
    e048:	bl	4500 <printf@plt>
    e04c:	ldrb	r1, [r4, #23]
    e050:	ldrb	r2, [r4, #24]
    e054:	ldrb	r0, [r4, #22]
    e058:	lsl	r1, r1, #8
    e05c:	orr	r1, r1, r2, lsl #16
    e060:	orr	r2, r1, r0
    e064:	ldr	r0, [pc, #536]	; e284 <lell_print@@Base+0x8e4>
    e068:	ldr	r1, [pc, #536]	; e288 <lell_print@@Base+0x8e8>
    e06c:	add	r0, pc, r0
    e070:	add	r1, pc, r1
    e074:	bl	4500 <printf@plt>
    e078:	ldrb	r2, [r4, #25]
    e07c:	ldr	r0, [pc, #520]	; e28c <lell_print@@Base+0x8ec>
    e080:	ldr	r1, [pc, #520]	; e290 <lell_print@@Base+0x8f0>
    e084:	add	r0, pc, r0
    e088:	add	r1, pc, r1
    e08c:	mov	r3, r2
    e090:	bl	4500 <printf@plt>
    e094:	ldrb	r0, [r4, #26]
    e098:	ldrb	r1, [r4, #27]
    e09c:	ldr	r5, [pc, #496]	; e294 <lell_print@@Base+0x8f4>
    e0a0:	orr	r2, r0, r1, lsl #8
    e0a4:	ldr	r1, [pc, #492]	; e298 <lell_print@@Base+0x8f8>
    e0a8:	add	r5, pc, r5
    e0ac:	mov	r0, r5
    e0b0:	mov	r3, r2
    e0b4:	add	r1, pc, r1
    e0b8:	bl	4500 <printf@plt>
    e0bc:	ldrb	r0, [r4, #28]
    e0c0:	ldrb	r1, [r4, #29]
    e0c4:	orr	r2, r0, r1, lsl #8
    e0c8:	ldr	r1, [pc, #460]	; e29c <lell_print@@Base+0x8fc>
    e0cc:	mov	r0, r5
    e0d0:	mov	r3, r2
    e0d4:	add	r1, pc, r1
    e0d8:	bl	4500 <printf@plt>
    e0dc:	ldrb	r0, [r4, #30]
    e0e0:	ldrb	r1, [r4, #31]
    e0e4:	orr	r2, r0, r1, lsl #8
    e0e8:	ldr	r1, [pc, #432]	; e2a0 <lell_print@@Base+0x900>
    e0ec:	mov	r0, r5
    e0f0:	mov	r3, r2
    e0f4:	add	r1, pc, r1
    e0f8:	bl	4500 <printf@plt>
    e0fc:	ldrb	r0, [r4, #32]
    e100:	ldrb	r1, [r4, #33]	; 0x21
    e104:	orr	r2, r0, r1, lsl #8
    e108:	ldr	r1, [pc, #404]	; e2a4 <lell_print@@Base+0x904>
    e10c:	mov	r0, r5
    e110:	mov	r3, r2
    e114:	add	r1, pc, r1
    e118:	bl	4500 <printf@plt>
    e11c:	ldr	r0, [pc, #388]	; e2a8 <lell_print@@Base+0x908>
    e120:	add	r0, pc, r0
    e124:	bl	4500 <printf@plt>
    e128:	ldrb	r1, [r4, #34]	; 0x22
    e12c:	ldr	r5, [pc, #376]	; e2ac <lell_print@@Base+0x90c>
    e130:	add	r5, pc, r5
    e134:	mov	r0, r5
    e138:	bl	4500 <printf@plt>
    e13c:	ldrb	r1, [r4, #35]	; 0x23
    e140:	mov	r0, r5
    e144:	bl	4500 <printf@plt>
    e148:	ldrb	r1, [r4, #36]	; 0x24
    e14c:	mov	r0, r5
    e150:	bl	4500 <printf@plt>
    e154:	ldrb	r1, [r4, #37]	; 0x25
    e158:	mov	r0, r5
    e15c:	bl	4500 <printf@plt>
    e160:	ldrb	r1, [r4, #38]	; 0x26
    e164:	mov	r0, r5
    e168:	bl	4500 <printf@plt>
    e16c:	mov	r0, #10
    e170:	bl	4704 <putchar@plt>
    e174:	ldrb	r0, [r4, #39]	; 0x27
    e178:	and	r1, r0, #31
    e17c:	ldr	r0, [pc, #300]	; e2b0 <lell_print@@Base+0x910>
    e180:	add	r0, pc, r0
    e184:	bl	4500 <printf@plt>
    e188:	ldrb	r0, [r4, #39]	; 0x27
    e18c:	lsr	r1, r0, #5
    e190:	ldr	r0, [pc, #284]	; e2b4 <lell_print@@Base+0x914>
    e194:	add	r0, pc, r0
    e198:	ldr	r2, [r0, r1, lsl #2]
    e19c:	ldr	r0, [pc, #276]	; e2b8 <lell_print@@Base+0x918>
    e1a0:	add	r0, pc, r0
    e1a4:	b	dad4 <lell_print@@Base+0x134>
    e1a8:			; <UNDEFINED> instruction: 0x000053b9
    e1ac:			; <UNDEFINED> instruction: 0x000053b3
    e1b0:	andeq	r5, r0, r0, lsl #7
    e1b4:	muleq	r0, r9, r3
    e1b8:	ldrdeq	fp, [r1], -r0
    e1bc:	muleq	r0, r0, r3
    e1c0:	andeq	r5, r0, r7, lsl #7
    e1c4:	muleq	r1, r8, r3
    e1c8:	ldrdeq	r5, [r0], -sp
    e1cc:	andeq	r5, r0, r9, lsr #8
    e1d0:	andeq	r5, r0, r3, lsr #8
    e1d4:	ldrdeq	r5, [r0], -lr
    e1d8:	andeq	r5, r0, r9, lsl #8
    e1dc:	muleq	r0, r0, r2
    e1e0:	andeq	fp, r1, r0, lsl r4
    e1e4:	andeq	r5, r0, r1, lsl #10
    e1e8:	ldrdeq	r5, [r0], -r0
    e1ec:	andeq	r5, r0, r0, asr #9
    e1f0:	andeq	r5, r0, r7, asr #13
    e1f4:	muleq	r0, r3, r6
    e1f8:	andeq	r5, r0, r8, lsl #13
    e1fc:	andeq	r5, r0, r5, ror r6
    e200:	andeq	r5, r0, r8, asr #8
    e204:	andeq	r5, r0, pc, asr #14
    e208:	strdeq	r5, [r0], -r4
    e20c:	andeq	r5, r0, r4, ror #7
    e210:	andeq	r5, r0, r7, ror #11
    e214:	andeq	r5, r0, r7, lsr #11
    e218:	andeq	r5, r0, r8, lsr #11
    e21c:	muleq	r0, sp, r5
    e220:	andeq	r5, r0, r1, ror r3
    e224:	andeq	r5, r0, r0, asr r5
    e228:	andeq	r5, r0, sp, asr r3
    e22c:	andeq	r5, r0, r3, asr #10
    e230:	andeq	r5, r0, r3, lsl #10
    e234:	andeq	r5, r0, r4, lsl #10
    e238:	strdeq	r5, [r0], -r9
    e23c:			; <UNDEFINED> instruction: 0x000052b8
    e240:	andeq	r5, r0, r4, asr r4
    e244:	andeq	r5, r0, r4, asr #4
    e248:	andeq	r5, r0, fp, asr #8
    e24c:	andeq	r5, r0, r7, lsl r4
    e250:	andeq	r5, r0, ip, lsl #8
    e254:	strdeq	r5, [r0], -r9
    e258:	strdeq	r5, [r0], -r5	; <UNPREDICTABLE>
    e25c:	ldrdeq	r5, [r0], -pc	; <UNPREDICTABLE>
    e260:			; <UNDEFINED> instruction: 0x000052b8
    e264:	strheq	r5, [r0], -sp
    e268:	andeq	r5, r0, fp, lsr #5
    e26c:	andeq	r5, r0, fp, ror #4
    e270:	andeq	r5, r0, ip, ror #4
    e274:	andeq	r5, r0, r1, ror #4
    e278:	andeq	r5, r0, ip, lsl r0
    e27c:	strdeq	r5, [r0], -r2
    e280:	andeq	r4, r0, sl, ror #31
    e284:	ldrdeq	r5, [r0], -r2
    e288:	andeq	r4, r0, r6, asr #31
    e28c:	andeq	r5, r0, r6, asr #7
    e290:			; <UNDEFINED> instruction: 0x00004fb8
    e294:			; <UNDEFINED> instruction: 0x000053b3
    e298:	muleq	r0, r6, pc	; <UNPREDICTABLE>
    e29c:	andeq	r4, r0, r2, lsl #31
    e2a0:	andeq	r4, r0, sp, ror #30
    e2a4:	andeq	r4, r0, r7, asr pc
    e2a8:	andeq	r4, r0, r5, asr pc
    e2ac:	strdeq	r5, [r0], -r7
    e2b0:	strdeq	r4, [r0], -lr
    e2b4:	andeq	sl, r1, r8, lsl sp
    e2b8:	andeq	r4, r0, fp, ror #29
    e2bc:	andeq	r5, r0, ip, lsl #4
    e2c0:	andeq	r5, r0, fp, ror r4
    e2c4:	andeq	r5, r0, r7, asr #3
    e2c8:	andeq	r5, r0, pc, lsr #8
    e2cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e2d0:	add	fp, sp, #28
    e2d4:	sub	sp, sp, #4
    e2d8:	vpush	{d8}
    e2dc:	sub	sp, sp, #32
    e2e0:	cmp	r1, #1
    e2e4:	blt	ea54 <lell_print@@Base+0x10b4>
    e2e8:	mov	r7, r0
    e2ec:	add	r0, r0, #2
    e2f0:	vmov.f64	d8, #116	; 0x3fa00000  1.250
    e2f4:	mov	r3, r1
    e2f8:	mov	r8, #0
    e2fc:	str	r0, [sp, #4]
    e300:	add	r0, r7, #4
    e304:	str	r0, [sp]
    e308:	ldr	r4, [pc, #1936]	; eaa0 <lell_print@@Base+0x1100>
    e30c:	ldr	r2, [pc, #1936]	; eaa4 <lell_print@@Base+0x1104>
    e310:	ldr	sl, [pc, #1936]	; eaa8 <lell_print@@Base+0x1108>
    e314:	str	r1, [sp, #8]
    e318:	str	r7, [sp, #12]
    e31c:	add	r4, pc, r4
    e320:	add	r2, pc, r2
    e324:	add	sl, pc, sl
    e328:	b	e350 <lell_print@@Base+0x9b0>
    e32c:	mov	r0, #10
    e330:	bl	4704 <putchar@plt>
    e334:	mov	r2, r5
    e338:	ldr	r3, [sp, #8]
    e33c:	ldr	r4, [pc, #1964]	; eaf0 <lell_print@@Base+0x1150>
    e340:	ldr	r7, [sp, #12]
    e344:	cmp	r8, r3
    e348:	add	r4, pc, r4
    e34c:	bge	ea54 <lell_print@@Base+0x10b4>
    e350:	ldrb	r6, [r7, r8]
    e354:	add	r1, r8, #1
    e358:	mov	r9, r8
    e35c:	add	r8, r1, r6
    e360:	cmp	r8, r3
    e364:	bgt	ea64 <lell_print@@Base+0x10c4>
    e368:	cmp	r6, #0
    e36c:	beq	ea84 <lell_print@@Base+0x10e4>
    e370:	ldrb	r7, [r7, r1]
    e374:	ldr	r0, [pc, #1840]	; eaac <lell_print@@Base+0x110c>
    e378:	mov	r5, r2
    e37c:	add	r0, pc, r0
    e380:	mov	r1, r7
    e384:	bl	4500 <printf@plt>
    e388:	sub	r0, r7, #1
    e38c:	cmp	r0, #21
    e390:	bhi	e50c <lell_print@@Base+0xb6c>
    e394:	add	r2, pc, #28
    e398:	ldr	r3, [r2, r0, lsl #2]
    e39c:	ldr	r0, [pc, #1808]	; eab4 <lell_print@@Base+0x1114>
    e3a0:	ldr	r1, [pc, #1808]	; eab8 <lell_print@@Base+0x1118>
    e3a4:	ldr	r7, [pc, #1808]	; eabc <lell_print@@Base+0x111c>
    e3a8:	add	r0, pc, r0
    e3ac:	add	r1, pc, r1
    e3b0:	add	r7, pc, r7
    e3b4:	add	pc, r2, r3
    e3b8:	andeq	r0, r0, r8, asr r0
    e3bc:	andeq	r0, r0, r8, lsr #4
    e3c0:	andeq	r0, r0, r0, lsr #4
    e3c4:	andeq	r0, r0, r4, ror #3
    e3c8:	andeq	r0, r0, r4, ror #3
    e3cc:	andeq	r0, r0, ip, ror r2
    e3d0:	andeq	r0, r0, r4, ror r2
    e3d4:	andeq	r0, r0, r4, ror #3
    e3d8:	andeq	r0, r0, r0, lsr #5
    e3dc:	strdeq	r0, [r0], -r8
    e3e0:	andeq	r0, r0, r4, ror #3
    e3e4:	andeq	r0, r0, r4, ror #3
    e3e8:	andeq	r0, r0, r4, ror #3
    e3ec:	andeq	r0, r0, r4, ror #3
    e3f0:	andeq	r0, r0, r4, ror #3
    e3f4:	andeq	r0, r0, r4, ror #3
    e3f8:	andeq	r0, r0, r4, ror #3
    e3fc:	andeq	r0, r0, r0, lsr r3
    e400:	andeq	r0, r0, r4, ror #3
    e404:	andeq	r0, r0, r4, ror #3
    e408:	andeq	r0, r0, r4, ror #3
    e40c:	andeq	r0, r0, ip, lsr #7
    e410:	ldr	r0, [pc, #1704]	; eac0 <lell_print@@Base+0x1120>
    e414:	add	r0, pc, r0
    e418:	bl	4620 <puts@plt>
    e41c:	mov	r0, r4
    e420:	bl	4500 <printf@plt>
    e424:	ldr	r7, [sp, #12]
    e428:	add	r6, r9, #2
    e42c:	ldrb	r0, [r7, r6]
    e430:	ldr	r4, [pc, #1676]	; eac4 <lell_print@@Base+0x1124>
    e434:	add	r4, pc, r4
    e438:	lsr	r1, r0, #7
    e43c:	mov	r0, r4
    e440:	bl	4500 <printf@plt>
    e444:	ldrb	r0, [r7, r6]
    e448:	ubfx	r1, r0, #6, #1
    e44c:	mov	r0, r4
    e450:	bl	4500 <printf@plt>
    e454:	ldrb	r0, [r7, r6]
    e458:	ubfx	r1, r0, #5, #1
    e45c:	mov	r0, r4
    e460:	bl	4500 <printf@plt>
    e464:	ldrb	r0, [r7, r6]
    e468:	ubfx	r1, r0, #4, #1
    e46c:	mov	r0, r4
    e470:	bl	4500 <printf@plt>
    e474:	ldrb	r0, [r7, r6]
    e478:	ubfx	r1, r0, #3, #1
    e47c:	mov	r0, r4
    e480:	bl	4500 <printf@plt>
    e484:	ldrb	r0, [r7, r6]
    e488:	ubfx	r1, r0, #2, #1
    e48c:	mov	r0, r4
    e490:	bl	4500 <printf@plt>
    e494:	ldrb	r0, [r7, r6]
    e498:	ubfx	r1, r0, #1, #1
    e49c:	mov	r0, r4
    e4a0:	bl	4500 <printf@plt>
    e4a4:	ldrb	r0, [r7, r6]
    e4a8:	and	r1, r0, #1
    e4ac:	mov	r0, r4
    e4b0:	bl	4500 <printf@plt>
    e4b4:	mov	r0, #10
    e4b8:	bl	4704 <putchar@plt>
    e4bc:	ldrb	r0, [r7, r6]
    e4c0:	ldr	r4, [pc, #1536]	; eac8 <lell_print@@Base+0x1128>
    e4c4:	tst	r0, #1
    e4c8:	add	r4, pc, r4
    e4cc:	bne	e924 <lell_print@@Base+0xf84>
    e4d0:	tst	r0, #2
    e4d4:	bne	e944 <lell_print@@Base+0xfa4>
    e4d8:	tst	r0, #4
    e4dc:	bne	e964 <lell_print@@Base+0xfc4>
    e4e0:	tst	r0, #8
    e4e4:	bne	e984 <lell_print@@Base+0xfe4>
    e4e8:	tst	r0, #16
    e4ec:	bne	e9a4 <lell_print@@Base+0x1004>
    e4f0:	tst	r0, #32
    e4f4:	bne	e9c4 <lell_print@@Base+0x1024>
    e4f8:	tst	r0, #64	; 0x40
    e4fc:	bne	e9e4 <lell_print@@Base+0x1044>
    e500:	tst	r0, #128	; 0x80
    e504:	bne	ea04 <lell_print@@Base+0x1064>
    e508:	b	e32c <lell_print@@Base+0x98c>
    e50c:	cmp	r7, #255	; 0xff
    e510:	ldr	r7, [pc, #1432]	; eab0 <lell_print@@Base+0x1110>
    e514:	add	r7, pc, r7
    e518:	bne	e59c <lell_print@@Base+0xbfc>
    e51c:	ldr	r0, [pc, #1552]	; eb34 <lell_print@@Base+0x1194>
    e520:	add	r0, pc, r0
    e524:	bl	4620 <puts@plt>
    e528:	mov	r0, r4
    e52c:	bl	4500 <printf@plt>
    e530:	sub	r1, r6, #1
    e534:	cmp	r1, #2
    e538:	blt	ea44 <lell_print@@Base+0x10a4>
    e53c:	ldr	r0, [sp, #12]
    e540:	add	r0, r9, r0
    e544:	ldrh	r0, [r0, #2]
    e548:	bl	4734 <bt_compidtostr@plt>
    e54c:	mov	r1, r0
    e550:	ldr	r0, [pc, #1504]	; eb38 <lell_print@@Base+0x1198>
    e554:	add	r0, pc, r0
    e558:	bl	4500 <printf@plt>
    e55c:	mov	r0, r4
    e560:	bl	4500 <printf@plt>
    e564:	ldr	r0, [pc, #1488]	; eb3c <lell_print@@Base+0x119c>
    e568:	add	r0, pc, r0
    e56c:	bl	4500 <printf@plt>
    e570:	cmp	r6, #4
    e574:	bcc	e32c <lell_print@@Base+0x98c>
    e578:	ldr	r0, [sp]
    e57c:	sub	r6, r6, #3
    e580:	add	r4, r0, r9
    e584:	ldrb	r1, [r4], #1
    e588:	mov	r0, r7
    e58c:	bl	4500 <printf@plt>
    e590:	subs	r6, r6, #1
    e594:	bne	e584 <lell_print@@Base+0xbe4>
    e598:	b	e32c <lell_print@@Base+0x98c>
    e59c:	mov	r0, #10
    e5a0:	bl	4704 <putchar@plt>
    e5a4:	mov	r0, r4
    e5a8:	bl	4500 <printf@plt>
    e5ac:	cmp	r6, #2
    e5b0:	bcc	e32c <lell_print@@Base+0x98c>
    e5b4:	ldr	r0, [sp, #4]
    e5b8:	sub	r6, r6, #1
    e5bc:	add	r4, r0, r9
    e5c0:	ldrb	r1, [r4], #1
    e5c4:	mov	r0, r7
    e5c8:	bl	4500 <printf@plt>
    e5cc:	subs	r6, r6, #1
    e5d0:	bne	e5c0 <lell_print@@Base+0xc20>
    e5d4:	b	e32c <lell_print@@Base+0x98c>
    e5d8:	ldr	r0, [pc, #1292]	; eaec <lell_print@@Base+0x114c>
    e5dc:	add	r0, pc, r0
    e5e0:	bl	4620 <puts@plt>
    e5e4:	sub	r4, r6, #1
    e5e8:	mov	r2, r5
    e5ec:	tst	r4, #1
    e5f0:	bne	e338 <lell_print@@Base+0x998>
    e5f4:	cmp	r4, #1
    e5f8:	blt	e338 <lell_print@@Base+0x998>
    e5fc:	ldr	r0, [sp, #4]
    e600:	mov	r7, #0
    e604:	add	r6, r0, r9
    e608:	add	r0, r6, r7
    e60c:	ldrh	r1, [r0]
    e610:	mov	r0, r2
    e614:	bl	4500 <printf@plt>
    e618:	add	r7, r7, #2
    e61c:	mov	r2, r5
    e620:	cmp	r7, r4
    e624:	blt	e608 <lell_print@@Base+0xc68>
    e628:	b	e338 <lell_print@@Base+0x998>
    e62c:	ldr	r1, [pc, #1216]	; eaf4 <lell_print@@Base+0x1154>
    e630:	add	r1, pc, r1
    e634:	mov	r0, r1
    e638:	bl	4620 <puts@plt>
    e63c:	sub	r6, r6, #1
    e640:	tst	r6, #15
    e644:	beq	e7ec <lell_print@@Base+0xe4c>
    e648:	ldr	r0, [pc, #1196]	; eafc <lell_print@@Base+0x115c>
    e64c:	mov	r1, r6
    e650:	add	r0, pc, r0
    e654:	b	ea4c <lell_print@@Base+0x10ac>
    e658:	ldr	r0, [pc, #1184]	; eb00 <lell_print@@Base+0x1160>
    e65c:	add	r0, pc, r0
    e660:	bl	4620 <puts@plt>
    e664:	mov	r0, r4
    e668:	bl	4500 <printf@plt>
    e66c:	cmp	r6, #2
    e670:	bcc	e32c <lell_print@@Base+0x98c>
    e674:	ldr	r0, [sp, #4]
    e678:	sub	r7, r6, #1
    e67c:	add	r4, r0, r9
    e680:	bl	465c <__ctype_b_loc@plt>
    e684:	mov	r6, r0
    e688:	ldrb	r0, [r4], #1
    e68c:	ldr	r1, [r6]
    e690:	add	r1, r1, r0, lsl #1
    e694:	ldrh	r1, [r1]
    e698:	tst	r1, #16384	; 0x4000
    e69c:	movweq	r0, #46	; 0x2e
    e6a0:	bl	4704 <putchar@plt>
    e6a4:	subs	r7, r7, #1
    e6a8:	bne	e688 <lell_print@@Base+0xce8>
    e6ac:	b	e32c <lell_print@@Base+0x98c>
    e6b0:	ldr	r0, [pc, #1100]	; eb04 <lell_print@@Base+0x1164>
    e6b4:	add	r0, pc, r0
    e6b8:	bl	4620 <puts@plt>
    e6bc:	mov	r0, r4
    e6c0:	bl	4500 <printf@plt>
    e6c4:	sub	r1, r6, #1
    e6c8:	cmp	r1, #1
    e6cc:	bne	ea1c <lell_print@@Base+0x107c>
    e6d0:	ldr	r0, [sp, #12]
    e6d4:	add	r0, r9, r0
    e6d8:	ldrb	r1, [r0, #2]
    e6dc:	ldr	r0, [pc, #1060]	; eb08 <lell_print@@Base+0x1168>
    e6e0:	add	r0, pc, r0
    e6e4:	b	ea4c <lell_print@@Base+0x10ac>
    e6e8:	ldr	r0, [pc, #1056]	; eb10 <lell_print@@Base+0x1170>
    e6ec:	add	r0, pc, r0
    e6f0:	bl	4620 <puts@plt>
    e6f4:	mov	r0, r4
    e6f8:	bl	4500 <printf@plt>
    e6fc:	sub	r1, r6, #1
    e700:	cmp	r1, #4
    e704:	bne	ea28 <lell_print@@Base+0x1088>
    e708:	ldr	r0, [sp, #12]
    e70c:	add	r4, r9, r0
    e710:	ldrb	r0, [r4, #2]
    e714:	ldrb	r1, [r4, #3]
    e718:	orr	r0, r0, r1, lsl #8
    e71c:	vmov	s0, r0
    e720:	vcvt.f64.s32	d16, s0
    e724:	ldr	r0, [pc, #1000]	; eb14 <lell_print@@Base+0x1174>
    e728:	add	r0, pc, r0
    e72c:	vmul.f64	d16, d16, d8
    e730:	vmov	r2, r3, d16
    e734:	bl	4500 <printf@plt>
    e738:	ldrb	r0, [r4, #4]
    e73c:	ldrb	r1, [r4, #5]
    e740:	orr	r0, r0, r1, lsl #8
    e744:	vmov	s0, r0
    e748:	vcvt.f64.s32	d16, s0
    e74c:	ldr	r0, [pc, #964]	; eb18 <lell_print@@Base+0x1178>
    e750:	add	r0, pc, r0
    e754:	vmul.f64	d16, d16, d8
    e758:	vmov	r2, r3, d16
    e75c:	bl	4500 <printf@plt>
    e760:	b	e334 <lell_print@@Base+0x994>
    e764:	ldr	r0, [pc, #948]	; eb20 <lell_print@@Base+0x1180>
    e768:	add	r0, pc, r0
    e76c:	bl	4620 <puts@plt>
    e770:	mov	r0, r4
    e774:	bl	4500 <printf@plt>
    e778:	sub	r7, r6, #1
    e77c:	cmp	r7, #2
    e780:	blt	ea34 <lell_print@@Base+0x1094>
    e784:	ldr	r0, [sp, #12]
    e788:	add	r0, r9, r0
    e78c:	ldrb	r1, [r0, #2]
    e790:	ldrb	r0, [r0, #3]
    e794:	orr	r1, r1, r0, lsl #8
    e798:	ldr	r0, [pc, #900]	; eb24 <lell_print@@Base+0x1184>
    e79c:	add	r0, pc, r0
    e7a0:	bl	4500 <printf@plt>
    e7a4:	cmp	r7, #2
    e7a8:	ldr	r7, [pc, #888]	; eb28 <lell_print@@Base+0x1188>
    e7ac:	add	r7, pc, r7
    e7b0:	beq	e32c <lell_print@@Base+0x98c>
    e7b4:	ldr	r0, [pc, #880]	; eb2c <lell_print@@Base+0x118c>
    e7b8:	add	r0, pc, r0
    e7bc:	bl	4500 <printf@plt>
    e7c0:	cmp	r6, #4
    e7c4:	bcc	e32c <lell_print@@Base+0x98c>
    e7c8:	ldr	r0, [sp]
    e7cc:	sub	r6, r6, #3
    e7d0:	add	r4, r0, r9
    e7d4:	ldrb	r1, [r4], #1
    e7d8:	mov	r0, r7
    e7dc:	bl	4500 <printf@plt>
    e7e0:	subs	r6, r6, #1
    e7e4:	bne	e7d4 <lell_print@@Base+0xe34>
    e7e8:	b	e32c <lell_print@@Base+0x98c>
    e7ec:	cmp	r6, #1
    e7f0:	blt	e334 <lell_print@@Base+0x994>
    e7f4:	ldr	r0, [sp, #4]
    e7f8:	mov	r4, #0
    e7fc:	add	r7, r0, r9
    e800:	b	e810 <lell_print@@Base+0xe70>
    e804:	add	r4, r4, #1
    e808:	cmp	r6, r4
    e80c:	beq	e334 <lell_print@@Base+0x994>
    e810:	ldrb	r0, [r7, r4]
    e814:	and	r1, r4, #15
    e818:	add	r3, sp, #16
    e81c:	eor	r2, r1, #15
    e820:	cmp	r1, #15
    e824:	strb	r0, [r3, r2]
    e828:	bne	e804 <lell_print@@Base+0xe64>
    e82c:	ldr	r0, [pc, #708]	; eaf8 <lell_print@@Base+0x1158>
    e830:	add	r0, pc, r0
    e834:	bl	4500 <printf@plt>
    e838:	ldrb	r1, [sp, #16]
    e83c:	mov	r0, sl
    e840:	bl	4500 <printf@plt>
    e844:	ldrb	r1, [sp, #17]
    e848:	mov	r0, sl
    e84c:	bl	4500 <printf@plt>
    e850:	ldrb	r1, [sp, #18]
    e854:	mov	r0, sl
    e858:	bl	4500 <printf@plt>
    e85c:	ldrb	r1, [sp, #19]
    e860:	mov	r0, sl
    e864:	bl	4500 <printf@plt>
    e868:	mov	r0, #45	; 0x2d
    e86c:	bl	4704 <putchar@plt>
    e870:	ldrb	r1, [sp, #20]
    e874:	mov	r0, sl
    e878:	bl	4500 <printf@plt>
    e87c:	ldrb	r1, [sp, #21]
    e880:	mov	r0, sl
    e884:	bl	4500 <printf@plt>
    e888:	mov	r0, #45	; 0x2d
    e88c:	bl	4704 <putchar@plt>
    e890:	ldrb	r1, [sp, #22]
    e894:	mov	r0, sl
    e898:	bl	4500 <printf@plt>
    e89c:	ldrb	r1, [sp, #23]
    e8a0:	mov	r0, sl
    e8a4:	bl	4500 <printf@plt>
    e8a8:	mov	r0, #45	; 0x2d
    e8ac:	bl	4704 <putchar@plt>
    e8b0:	ldrb	r1, [sp, #24]
    e8b4:	mov	r0, sl
    e8b8:	bl	4500 <printf@plt>
    e8bc:	ldrb	r1, [sp, #25]
    e8c0:	mov	r0, sl
    e8c4:	bl	4500 <printf@plt>
    e8c8:	mov	r0, #45	; 0x2d
    e8cc:	bl	4704 <putchar@plt>
    e8d0:	ldrb	r1, [sp, #26]
    e8d4:	mov	r0, sl
    e8d8:	bl	4500 <printf@plt>
    e8dc:	ldrb	r1, [sp, #27]
    e8e0:	mov	r0, sl
    e8e4:	bl	4500 <printf@plt>
    e8e8:	ldrb	r1, [sp, #28]
    e8ec:	mov	r0, sl
    e8f0:	bl	4500 <printf@plt>
    e8f4:	ldrb	r1, [sp, #29]
    e8f8:	mov	r0, sl
    e8fc:	bl	4500 <printf@plt>
    e900:	ldrb	r1, [sp, #30]
    e904:	mov	r0, sl
    e908:	bl	4500 <printf@plt>
    e90c:	ldrb	r1, [sp, #31]
    e910:	mov	r0, sl
    e914:	bl	4500 <printf@plt>
    e918:	mov	r0, #10
    e91c:	bl	4704 <putchar@plt>
    e920:	b	e804 <lell_print@@Base+0xe64>
    e924:	mov	r0, r4
    e928:	bl	4500 <printf@plt>
    e92c:	ldr	r0, [pc, #408]	; eacc <lell_print@@Base+0x112c>
    e930:	add	r0, pc, r0
    e934:	bl	4620 <puts@plt>
    e938:	ldrb	r0, [r7, r6]
    e93c:	tst	r0, #2
    e940:	beq	e4d8 <lell_print@@Base+0xb38>
    e944:	mov	r0, r4
    e948:	bl	4500 <printf@plt>
    e94c:	ldr	r0, [pc, #380]	; ead0 <lell_print@@Base+0x1130>
    e950:	add	r0, pc, r0
    e954:	bl	4620 <puts@plt>
    e958:	ldrb	r0, [r7, r6]
    e95c:	tst	r0, #4
    e960:	beq	e4e0 <lell_print@@Base+0xb40>
    e964:	mov	r0, r4
    e968:	bl	4500 <printf@plt>
    e96c:	ldr	r0, [pc, #352]	; ead4 <lell_print@@Base+0x1134>
    e970:	add	r0, pc, r0
    e974:	bl	4620 <puts@plt>
    e978:	ldrb	r0, [r7, r6]
    e97c:	tst	r0, #8
    e980:	beq	e4e8 <lell_print@@Base+0xb48>
    e984:	mov	r0, r4
    e988:	bl	4500 <printf@plt>
    e98c:	ldr	r0, [pc, #324]	; ead8 <lell_print@@Base+0x1138>
    e990:	add	r0, pc, r0
    e994:	bl	4620 <puts@plt>
    e998:	ldrb	r0, [r7, r6]
    e99c:	tst	r0, #16
    e9a0:	beq	e4f0 <lell_print@@Base+0xb50>
    e9a4:	mov	r0, r4
    e9a8:	bl	4500 <printf@plt>
    e9ac:	ldr	r0, [pc, #296]	; eadc <lell_print@@Base+0x113c>
    e9b0:	add	r0, pc, r0
    e9b4:	bl	4620 <puts@plt>
    e9b8:	ldrb	r0, [r7, r6]
    e9bc:	tst	r0, #32
    e9c0:	beq	e4f8 <lell_print@@Base+0xb58>
    e9c4:	mov	r0, r4
    e9c8:	bl	4500 <printf@plt>
    e9cc:	ldr	r0, [pc, #268]	; eae0 <lell_print@@Base+0x1140>
    e9d0:	add	r0, pc, r0
    e9d4:	bl	4620 <puts@plt>
    e9d8:	ldrb	r0, [r7, r6]
    e9dc:	tst	r0, #64	; 0x40
    e9e0:	beq	e500 <lell_print@@Base+0xb60>
    e9e4:	mov	r0, r4
    e9e8:	bl	4500 <printf@plt>
    e9ec:	ldr	r0, [pc, #240]	; eae4 <lell_print@@Base+0x1144>
    e9f0:	add	r0, pc, r0
    e9f4:	bl	4620 <puts@plt>
    e9f8:	ldrb	r0, [r7, r6]
    e9fc:	tst	r0, #128	; 0x80
    ea00:	beq	e32c <lell_print@@Base+0x98c>
    ea04:	mov	r0, r4
    ea08:	bl	4500 <printf@plt>
    ea0c:	ldr	r0, [pc, #212]	; eae8 <lell_print@@Base+0x1148>
    ea10:	add	r0, pc, r0
    ea14:	bl	4620 <puts@plt>
    ea18:	b	e32c <lell_print@@Base+0x98c>
    ea1c:	ldr	r0, [pc, #232]	; eb0c <lell_print@@Base+0x116c>
    ea20:	add	r0, pc, r0
    ea24:	b	ea4c <lell_print@@Base+0x10ac>
    ea28:	ldr	r0, [pc, #236]	; eb1c <lell_print@@Base+0x117c>
    ea2c:	add	r0, pc, r0
    ea30:	b	ea4c <lell_print@@Base+0x10ac>
    ea34:	ldr	r0, [pc, #244]	; eb30 <lell_print@@Base+0x1190>
    ea38:	mov	r1, r7
    ea3c:	add	r0, pc, r0
    ea40:	b	ea4c <lell_print@@Base+0x10ac>
    ea44:	ldr	r0, [pc, #244]	; eb40 <lell_print@@Base+0x11a0>
    ea48:	add	r0, pc, r0
    ea4c:	bl	4500 <printf@plt>
    ea50:	b	e334 <lell_print@@Base+0x994>
    ea54:	sub	sp, fp, #40	; 0x28
    ea58:	vpop	{d8}
    ea5c:	add	sp, sp, #4
    ea60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea64:	ldr	r0, [pc, #216]	; eb44 <lell_print@@Base+0x11a4>
    ea68:	mov	r2, r6
    ea6c:	add	r0, pc, r0
    ea70:	sub	sp, fp, #40	; 0x28
    ea74:	vpop	{d8}
    ea78:	add	sp, sp, #4
    ea7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ea80:	b	4500 <printf@plt>
    ea84:	ldr	r0, [pc, #188]	; eb48 <lell_print@@Base+0x11a8>
    ea88:	add	r0, pc, r0
    ea8c:	sub	sp, fp, #40	; 0x28
    ea90:	vpop	{d8}
    ea94:	add	sp, sp, #4
    ea98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ea9c:	b	4620 <puts@plt>
    eaa0:	andeq	r4, r0, r1, ror #30
    eaa4:	andeq	r4, r0, r9, ror #30
    eaa8:	andeq	r5, r0, r4
    eaac:	andeq	r4, r0, r8, ror #29
    eab0:	andeq	r4, r0, r3, lsl lr
    eab4:	andeq	r5, r0, r7, lsr #4
    eab8:	andeq	r5, r0, r1, ror #3
    eabc:	andeq	r4, r0, r7, ror pc
    eac0:	andeq	r5, r0, r3, ror #3
    eac4:	andeq	r4, r0, r2, asr #28
    eac8:			; <UNDEFINED> instruction: 0x00004db1
    eacc:	andeq	r4, r0, fp, lsr sl
    ead0:	andeq	r4, r0, r8, lsr sl
    ead4:	andeq	r4, r0, r5, lsr sl
    ead8:	andeq	r4, r0, sl, lsr #20
    eadc:	andeq	r4, r0, r9, asr #20
    eae0:	andeq	r4, r0, r8, lsr #7
    eae4:	andeq	r4, r0, r8, lsl #7
    eae8:	andeq	r4, r0, r8, ror #6
    eaec:	ldrdeq	r4, [r0], -sl
    eaf0:	andeq	r4, r0, r5, lsr pc
    eaf4:	andeq	r4, r0, r4, asr #30
    eaf8:	andeq	r4, r0, sp, asr #20
    eafc:	andeq	r4, r0, sl, asr #24
    eb00:	andeq	r4, r0, r1, lsl #30
    eb04:	muleq	r0, r7, lr
    eb08:	andeq	r4, r0, r6, ror #23
    eb0c:	andeq	r4, r0, lr, lsr #17
    eb10:	andeq	r4, r0, ip, lsr lr
    eb14:	andeq	r4, r0, r6, asr #23
    eb18:	andeq	r4, r0, r7, lsr #23
    eb1c:	ldrdeq	r4, [r0], -r6
    eb20:			; <UNDEFINED> instruction: 0x00004db0
    eb24:	andeq	r4, r0, r6, lsl #23
    eb28:	andeq	r4, r0, fp, ror fp
    eb2c:	andeq	r4, r0, r5, ror fp
    eb30:	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    eb34:	ldrdeq	r4, [r0], -sl
    eb38:	andeq	r4, r0, sl, lsl #28
    eb3c:	andeq	r4, r0, r0, asr #21
    eb40:	strdeq	r4, [r0], -r3
    eb44:			; <UNDEFINED> instruction: 0x000047be
    eb48:	andeq	r4, r0, r8, ror fp

0000eb4c <bt_compidtostr@@Base>:
    eb4c:	add	r0, r0, #1
    eb50:	movw	r2, #1038	; 0x40e
    eb54:	uxth	r1, r0
    eb58:	cmp	r1, r2
    eb5c:	bhi	eb74 <bt_compidtostr@@Base+0x28>
    eb60:	ldr	r1, [pc, #24]	; eb80 <bt_compidtostr@@Base+0x34>
    eb64:	sxth	r0, r0
    eb68:	add	r1, pc, r1
    eb6c:	ldr	r0, [r1, r0, lsl #2]
    eb70:	bx	lr
    eb74:	ldr	r0, [pc, #8]	; eb84 <bt_compidtostr@@Base+0x38>
    eb78:	add	r0, pc, r0
    eb7c:	bx	lr
    eb80:	andeq	sl, r1, r4, ror #6
    eb84:	andeq	r9, r0, r0, lsl sl
	...

0000eb90 <btbb_pcap_open@@Base>:
    eb90:	push	{r4, sl, fp, lr}
    eb94:	add	fp, sp, #8
    eb98:	sub	sp, sp, #24
    eb9c:	str	r1, [sp, #20]
    eba0:	mov	r1, #0
    eba4:	str	r2, [sp, #16]
    eba8:	str	r1, [sp, #12]
    ebac:	str	r1, [sp, #8]
    ebb0:	movw	r1, #2
    ebb4:	movt	r1, #4
    ebb8:	str	r1, [sp, #4]
    ebbc:	movw	r1, #15437	; 0x3c4d
    ebc0:	movt	r1, #41394	; 0xa1b2
    ebc4:	str	r1, [sp]
    ebc8:	ldr	r1, [pc, #48]	; ec00 <btbb_pcap_open@@Base+0x70>
    ebcc:	add	r1, pc, r1
    ebd0:	bl	450c <fopen@plt>
    ebd4:	mov	r4, r0
    ebd8:	cmp	r0, #0
    ebdc:	beq	ebf4 <btbb_pcap_open@@Base+0x64>
    ebe0:	mov	r0, sp
    ebe4:	mov	r1, #24
    ebe8:	mov	r2, #1
    ebec:	mov	r3, r4
    ebf0:	bl	45e4 <fwrite@plt>
    ebf4:	mov	r0, r4
    ebf8:	sub	sp, fp, #8
    ebfc:	pop	{r4, sl, fp, pc}
    ec00:	andeq	r9, r0, r9, asr #19
    ec04:	nop	{0}
    ec08:	nop	{0}
    ec0c:	nop	{0}

0000ec10 <btbb_pcap_create_file@@Base>:
    ec10:	push	{r4, r5, r6, r7, fp, lr}
    ec14:	add	fp, sp, #16
    ec18:	sub	sp, sp, #24
    ec1c:	mov	r7, r0
    ec20:	mov	r0, #4
    ec24:	mov	r5, r1
    ec28:	bl	462c <malloc@plt>
    ec2c:	cmp	r0, #0
    ec30:	beq	eca8 <btbb_pcap_create_file@@Base+0x98>
    ec34:	mov	r6, #0
    ec38:	mov	r4, r0
    ec3c:	str	r6, [r0]
    ec40:	add	r0, pc, #168	; 0xa8
    ec44:	vld1.64	{d16-d17}, [r0 :128]
    ec48:	mov	r0, sp
    ec4c:	add	r0, r0, #8
    ec50:	vst1.32	{d16-d17}, [r0]
    ec54:	movw	r0, #2
    ec58:	movt	r0, #4
    ec5c:	str	r0, [sp, #4]
    ec60:	movw	r0, #15437	; 0x3c4d
    ec64:	movt	r0, #41394	; 0xa1b2
    ec68:	str	r0, [sp]
    ec6c:	mov	r0, r7
    ec70:	ldr	r1, [pc, #136]	; ed00 <btbb_pcap_create_file@@Base+0xf0>
    ec74:	add	r1, pc, r1
    ec78:	bl	450c <fopen@plt>
    ec7c:	cmp	r0, #0
    ec80:	beq	ecb8 <btbb_pcap_create_file@@Base+0xa8>
    ec84:	mov	r7, r0
    ec88:	mov	r0, sp
    ec8c:	mov	r1, #24
    ec90:	mov	r2, #1
    ec94:	mov	r3, r7
    ec98:	bl	45e4 <fwrite@plt>
    ec9c:	str	r7, [r4]
    eca0:	str	r4, [r5]
    eca4:	b	ecac <btbb_pcap_create_file@@Base+0x9c>
    eca8:	mvn	r6, #2
    ecac:	mov	r0, r6
    ecb0:	sub	sp, fp, #16
    ecb4:	pop	{r4, r5, r6, r7, fp, pc}
    ecb8:	mov	r0, #0
    ecbc:	str	r0, [r4]
    ecc0:	ldr	r0, [pc, #60]	; ed04 <btbb_pcap_create_file@@Base+0xf4>
    ecc4:	add	r0, pc, r0
    ecc8:	bl	45cc <perror@plt>
    eccc:	ldr	r0, [r4]
    ecd0:	cmp	r0, #0
    ecd4:	beq	ecdc <btbb_pcap_create_file@@Base+0xcc>
    ecd8:	bl	4764 <fclose@plt>
    ecdc:	mov	r0, r4
    ece0:	bl	4548 <free@plt>
    ece4:	mvn	r6, #1
    ece8:	b	ecac <btbb_pcap_create_file@@Base+0x9c>
    ecec:	nop	{0}
	...
    ecf8:	muleq	r0, r0, r1
    ecfc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    ed00:	andeq	r9, r0, r1, lsr #18
    ed04:	ldrdeq	r9, [r0], -r3

0000ed08 <btbb_pcap_close@@Base>:
    ed08:	cmp	r0, #0
    ed0c:	mvneq	r0, #0
    ed10:	bxeq	lr
    ed14:	push	{r4, sl, fp, lr}
    ed18:	add	fp, sp, #8
    ed1c:	mov	r4, r0
    ed20:	ldr	r0, [r0]
    ed24:	cmp	r0, #0
    ed28:	beq	ed30 <btbb_pcap_close@@Base+0x28>
    ed2c:	bl	4764 <fclose@plt>
    ed30:	mov	r0, r4
    ed34:	bl	4548 <free@plt>
    ed38:	mov	r0, #0
    ed3c:	pop	{r4, sl, fp, pc}

0000ed40 <btbb_pcap_dump@@Base>:
    ed40:	push	{r4, r5, r6, sl, fp, lr}
    ed44:	add	fp, sp, #16
    ed48:	mov	r6, r0
    ed4c:	mov	r4, r2
    ed50:	mov	r5, r1
    ed54:	mov	r0, r1
    ed58:	mov	r1, #16
    ed5c:	mov	r2, #1
    ed60:	mov	r3, r6
    ed64:	bl	45e4 <fwrite@plt>
    ed68:	ldr	r1, [r5, #8]
    ed6c:	mov	r0, r4
    ed70:	mov	r2, #1
    ed74:	mov	r3, r6
    ed78:	bl	45e4 <fwrite@plt>
    ed7c:	mov	r0, r6
    ed80:	pop	{r4, r5, r6, sl, fp, lr}
    ed84:	b	4524 <fflush@plt>

0000ed88 <btbb_pcap_append_packet@@Base>:
    ed88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ed8c:	add	fp, sp, #28
    ed90:	sub	sp, sp, #468	; 0x1d4
    ed94:	mvn	r6, #0
    ed98:	cmp	r0, #0
    ed9c:	beq	ef4c <btbb_pcap_append_packet@@Base+0x1c4>
    eda0:	mov	r8, r0
    eda4:	ldr	r0, [r0]
    eda8:	cmp	r0, #0
    edac:	beq	ef4c <btbb_pcap_append_packet@@Base+0x1c4>
    edb0:	ldr	r6, [fp, #24]
    edb4:	ldr	r5, [fp, #16]
    edb8:	str	r2, [fp, #-484]	; 0xfffffe1c
    edbc:	str	r3, [fp, #-480]	; 0xfffffe20
    edc0:	mov	r0, r6
    edc4:	bl	4674 <btbb_packet_get_payload_length@plt>
    edc8:	mov	r7, r0
    edcc:	add	r0, r0, #7
    edd0:	str	sp, [fp, #-476]	; 0xfffffe24
    edd4:	bic	r0, r0, #7
    edd8:	sub	r1, sp, r0
    eddc:	mov	sp, r1
    ede0:	mov	r0, r6
    ede4:	str	r1, [fp, #-496]	; 0xfffffe10
    ede8:	bl	44f4 <btbb_get_payload_packed@plt>
    edec:	mov	r0, r6
    edf0:	bl	4794 <btbb_packet_get_channel@plt>
    edf4:	str	r0, [fp, #-488]	; 0xfffffe18
    edf8:	mov	r0, r6
    edfc:	bl	4560 <btbb_packet_get_ac_errors@plt>
    ee00:	str	r0, [fp, #-492]	; 0xfffffe14
    ee04:	mov	r0, r6
    ee08:	bl	46ec <btbb_packet_get_transport@plt>
    ee0c:	mov	r4, r0
    ee10:	mov	r0, r6
    ee14:	bl	4554 <btbb_packet_get_modulation@plt>
    ee18:	mov	sl, r0
    ee1c:	mov	r0, r6
    ee20:	bl	4728 <btbb_packet_get_lap@plt>
    ee24:	mov	r9, r0
    ee28:	mov	r0, r6
    ee2c:	bl	46b0 <btbb_packet_get_header_packed@plt>
    ee30:	ldr	r6, [fp, #20]
    ee34:	str	r0, [fp, #-440]	; 0xfffffe48
    ee38:	bic	r0, r5, #-16777216	; 0xff000000
    ee3c:	ldr	r2, [fp, #8]
    ee40:	ldr	r3, [fp, #12]
    ee44:	mvn	r1, #0
    ee48:	orr	r0, r0, r6, lsl #24
    ee4c:	cmp	r3, r2
    ee50:	str	r0, [fp, #-444]	; 0xfffffe44
    ee54:	orr	r0, sl, r4, lsl #4
    ee58:	str	r9, [fp, #-448]	; 0xfffffe40
    ee5c:	sub	r9, fp, #436	; 0x1b4
    ee60:	ldr	r4, [fp, #-484]	; 0xfffffe1c
    ee64:	movw	sl, #51712	; 0xca00
    ee68:	movt	sl, #15258	; 0x3b9a
    ee6c:	strb	r0, [fp, #-452]	; 0xfffffe3c
    ee70:	mov	r0, #3
    ee74:	movwlt	r0, #7
    ee78:	subs	r1, r5, r1
    ee7c:	movwne	r1, #1
    ee80:	orr	r0, r0, r1, lsl #4
    ee84:	subs	r1, r6, #255	; 0xff
    ee88:	mov	r6, #0
    ee8c:	movwne	r1, #1
    ee90:	cmp	r7, #400	; 0x190
    ee94:	orr	r5, r0, r1, lsl #7
    ee98:	ldr	r0, [fp, #-492]	; 0xfffffe14
    ee9c:	ldr	r1, [fp, #-480]	; 0xfffffe20
    eea0:	movcs	r7, #400	; 0x190
    eea4:	strh	r5, [r9]
    eea8:	strb	r0, [fp, #-453]	; 0xfffffe3b
    eeac:	ldr	r0, [fp, #-488]	; 0xfffffe18
    eeb0:	strh	r6, [r9, #-14]
    eeb4:	strb	r6, [fp, #-451]	; 0xfffffe3d
    eeb8:	strb	r3, [fp, #-454]	; 0xfffffe3a
    eebc:	strb	r2, [fp, #-455]	; 0xfffffe39
    eec0:	mov	r2, sl
    eec4:	mov	r3, #0
    eec8:	strb	r0, [fp, #-456]	; 0xfffffe38
    eecc:	add	r0, r7, #22
    eed0:	str	r0, [fp, #-460]	; 0xfffffe34
    eed4:	str	r0, [fp, #-464]	; 0xfffffe30
    eed8:	mov	r0, r4
    eedc:	bl	10234 <lell_pcapng_close@@Base+0x28>
    eee0:	mls	r1, r0, sl, r4
    eee4:	cmp	r7, #0
    eee8:	str	r1, [fp, #-468]	; 0xfffffe2c
    eeec:	str	r0, [fp, #-472]	; 0xfffffe28
    eef0:	sub	r0, fp, #472	; 0x1d8
    eef4:	add	sl, r0, #16
    eef8:	beq	ef10 <btbb_pcap_append_packet@@Base+0x188>
    eefc:	ldr	r1, [fp, #-496]	; 0xfffffe10
    ef00:	add	r0, r0, #38	; 0x26
    ef04:	mov	r2, r7
    ef08:	bl	456c <memcpy@plt>
    ef0c:	orr	r5, r5, #32
    ef10:	strh	r5, [r9]
    ef14:	sub	r0, fp, #472	; 0x1d8
    ef18:	mov	r1, #16
    ef1c:	mov	r2, #1
    ef20:	ldr	r4, [r8]
    ef24:	mov	r3, r4
    ef28:	bl	45e4 <fwrite@plt>
    ef2c:	ldr	r1, [fp, #-464]	; 0xfffffe30
    ef30:	mov	r0, sl
    ef34:	mov	r2, #1
    ef38:	mov	r3, r4
    ef3c:	bl	45e4 <fwrite@plt>
    ef40:	mov	r0, r4
    ef44:	bl	4524 <fflush@plt>
    ef48:	ldr	sp, [fp, #-476]	; 0xfffffe24
    ef4c:	mov	r0, r6
    ef50:	sub	sp, fp, #28
    ef54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef58:	nop	{0}
    ef5c:	nop	{0}

0000ef60 <lell_pcap_create_file@@Base>:
    ef60:	push	{r4, r5, r6, r7, fp, lr}
    ef64:	add	fp, sp, #16
    ef68:	sub	sp, sp, #24
    ef6c:	mov	r7, r0
    ef70:	mov	r0, #12
    ef74:	mov	r4, r1
    ef78:	bl	462c <malloc@plt>
    ef7c:	cmp	r0, #0
    ef80:	beq	f008 <lell_pcap_create_file@@Base+0xa8>
    ef84:	mov	r5, #0
    ef88:	mov	r6, r0
    ef8c:	str	r5, [r0]
    ef90:	str	r5, [r0, #4]
    ef94:	str	r5, [r0, #8]
    ef98:	add	r0, pc, #144	; 0x90
    ef9c:	vld1.64	{d16-d17}, [r0 :128]
    efa0:	mov	r0, sp
    efa4:	add	r0, r0, #8
    efa8:	vst1.32	{d16-d17}, [r0]
    efac:	movw	r0, #2
    efb0:	movt	r0, #4
    efb4:	str	r0, [sp, #4]
    efb8:	movw	r0, #15437	; 0x3c4d
    efbc:	movt	r0, #41394	; 0xa1b2
    efc0:	str	r0, [sp]
    efc4:	mov	r0, r7
    efc8:	ldr	r1, [pc, #112]	; f040 <lell_pcap_create_file@@Base+0xe0>
    efcc:	add	r1, pc, r1
    efd0:	bl	450c <fopen@plt>
    efd4:	cmp	r0, #0
    efd8:	beq	f010 <lell_pcap_create_file@@Base+0xb0>
    efdc:	mov	r7, r0
    efe0:	mov	r0, sp
    efe4:	mov	r1, #24
    efe8:	mov	r2, #1
    efec:	mov	r3, r7
    eff0:	bl	45e4 <fwrite@plt>
    eff4:	mov	r0, #256	; 0x100
    eff8:	str	r7, [r6]
    effc:	str	r0, [r6, #4]
    f000:	str	r6, [r4]
    f004:	b	f01c <lell_pcap_create_file@@Base+0xbc>
    f008:	mvn	r5, #2
    f00c:	b	f01c <lell_pcap_create_file@@Base+0xbc>
    f010:	mov	r0, r6
    f014:	bl	4548 <free@plt>
    f018:	mvn	r5, #1
    f01c:	mov	r0, r5
    f020:	sub	sp, fp, #16
    f024:	pop	{r4, r5, r6, r7, fp, pc}
    f028:	nop	{0}
    f02c:	nop	{0}
	...
    f038:	muleq	r0, r0, r1
    f03c:	andeq	r0, r0, r0, lsl #2
    f040:	andeq	r9, r0, r9, asr #11
    f044:	nop	{0}
    f048:	nop	{0}
    f04c:	nop	{0}

0000f050 <lell_pcap_ppi_create_file@@Base>:
    f050:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    f054:	add	fp, sp, #24
    f058:	sub	sp, sp, #24
    f05c:	mov	r4, r0
    f060:	mov	r0, #12
    f064:	mov	r5, r2
    f068:	mov	r8, r1
    f06c:	bl	462c <malloc@plt>
    f070:	cmp	r0, #0
    f074:	beq	f100 <lell_pcap_ppi_create_file@@Base+0xb0>
    f078:	mov	r6, #0
    f07c:	mov	r7, r0
    f080:	str	r6, [r0]
    f084:	str	r6, [r0, #4]
    f088:	str	r6, [r0, #8]
    f08c:	add	r0, pc, #140	; 0x8c
    f090:	vld1.64	{d16-d17}, [r0 :128]
    f094:	mov	r0, sp
    f098:	add	r0, r0, #8
    f09c:	vst1.32	{d16-d17}, [r0]
    f0a0:	movw	r0, #2
    f0a4:	movt	r0, #4
    f0a8:	str	r0, [sp, #4]
    f0ac:	movw	r0, #15437	; 0x3c4d
    f0b0:	movt	r0, #41394	; 0xa1b2
    f0b4:	str	r0, [sp]
    f0b8:	mov	r0, r4
    f0bc:	ldr	r1, [pc, #108]	; f130 <lell_pcap_ppi_create_file@@Base+0xe0>
    f0c0:	add	r1, pc, r1
    f0c4:	bl	450c <fopen@plt>
    f0c8:	cmp	r0, #0
    f0cc:	beq	f108 <lell_pcap_ppi_create_file@@Base+0xb8>
    f0d0:	mov	r4, r0
    f0d4:	mov	r0, sp
    f0d8:	mov	r1, #24
    f0dc:	mov	r2, #1
    f0e0:	mov	r3, r4
    f0e4:	bl	45e4 <fwrite@plt>
    f0e8:	mov	r0, #192	; 0xc0
    f0ec:	str	r4, [r7]
    f0f0:	str	r0, [r7, #4]
    f0f4:	str	r7, [r5]
    f0f8:	strb	r8, [r7, #8]
    f0fc:	b	f114 <lell_pcap_ppi_create_file@@Base+0xc4>
    f100:	mvn	r6, #2
    f104:	b	f114 <lell_pcap_ppi_create_file@@Base+0xc4>
    f108:	mov	r0, r7
    f10c:	bl	4548 <free@plt>
    f110:	mvn	r6, #1
    f114:	mov	r0, r6
    f118:	sub	sp, fp, #24
    f11c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
    f128:	muleq	r0, r0, r1
    f12c:	andeq	r0, r0, r0, asr #1
    f130:	ldrdeq	r9, [r0], -r5

0000f134 <lell_pcap_append_packet@@Base>:
    f134:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f138:	add	fp, sp, #28
    f13c:	sub	sp, sp, #300	; 0x12c
    f140:	mvn	r4, #0
    f144:	cmp	r0, #0
    f148:	beq	f264 <lell_pcap_append_packet@@Base+0x130>
    f14c:	mov	r5, r0
    f150:	ldr	r0, [r0]
    f154:	cmp	r0, #0
    f158:	beq	f264 <lell_pcap_append_packet@@Base+0x130>
    f15c:	ldr	r0, [r5, #4]
    f160:	cmp	r0, #256	; 0x100
    f164:	bne	f264 <lell_pcap_append_packet@@Base+0x130>
    f168:	ldr	r4, [fp, #20]
    f16c:	ldr	sl, [fp, #16]
    f170:	mov	r6, r3
    f174:	mov	r7, r2
    f178:	mov	r0, r4
    f17c:	bl	4518 <lell_packet_is_data@plt>
    f180:	mov	r9, r0
    f184:	ldrb	r0, [r4, #69]	; 0x45
    f188:	ldr	r8, [r4, #72]	; 0x48
    f18c:	mov	r1, r6
    f190:	mov	r3, #0
    f194:	str	r0, [sp, #8]
    f198:	ldr	r0, [r4, #92]	; 0x5c
    f19c:	str	sl, [sp, #32]
    f1a0:	movw	sl, #51712	; 0xca00
    f1a4:	mov	r4, #0
    f1a8:	movt	sl, #15258	; 0x3b9a
    f1ac:	mov	r2, sl
    f1b0:	str	r0, [sp, #4]
    f1b4:	mov	r0, r7
    f1b8:	bl	10234 <lell_pcapng_close@@Base+0x28>
    f1bc:	mls	r1, r0, sl, r7
    f1c0:	ldr	r2, [fp, #8]
    f1c4:	add	r6, sp, #12
    f1c8:	str	r1, [sp, #16]
    f1cc:	ldr	r1, [fp, #12]
    f1d0:	strb	r1, [sp, #30]
    f1d4:	cmp	r1, r2
    f1d8:	clz	r1, r9
    f1dc:	str	r0, [sp, #12]
    f1e0:	mov	r0, #35	; 0x23
    f1e4:	strb	r2, [sp, #29]
    f1e8:	add	r2, r8, #9
    f1ec:	movwlt	r0, #39	; 0x27
    f1f0:	lsr	r1, r1, #5
    f1f4:	cmp	r2, #255	; 0xff
    f1f8:	orr	r0, r0, r1, lsl #4
    f1fc:	ldr	r1, [fp, #20]
    f200:	movcs	r2, #255	; 0xff
    f204:	strh	r0, [sp, #36]	; 0x24
    f208:	ldr	r0, [sp, #4]
    f20c:	strb	r0, [sp, #31]
    f210:	ldr	r0, [sp, #8]
    f214:	strb	r0, [sp, #28]
    f218:	add	r0, r8, #19
    f21c:	str	r0, [sp, #20]
    f220:	add	r0, r2, #10
    f224:	str	r0, [sp, #24]
    f228:	add	r0, r6, #26
    f22c:	bl	456c <memcpy@plt>
    f230:	ldr	r5, [r5]
    f234:	mov	r0, r6
    f238:	mov	r1, #16
    f23c:	mov	r2, #1
    f240:	mov	r3, r5
    f244:	bl	45e4 <fwrite@plt>
    f248:	ldr	r1, [sp, #20]
    f24c:	add	r0, r6, #16
    f250:	mov	r2, #1
    f254:	mov	r3, r5
    f258:	bl	45e4 <fwrite@plt>
    f25c:	mov	r0, r5
    f260:	bl	4524 <fflush@plt>
    f264:	mov	r0, r4
    f268:	sub	sp, fp, #28
    f26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f270 <lell_pcap_append_ppi_packet@@Base>:
    f270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f274:	add	fp, sp, #28
    f278:	sub	sp, sp, #300	; 0x12c
    f27c:	mvn	r4, #0
    f280:	cmp	r0, #0
    f284:	beq	f3a8 <lell_pcap_append_ppi_packet@@Base+0x138>
    f288:	mov	r5, r0
    f28c:	ldr	r0, [r0]
    f290:	cmp	r0, #0
    f294:	beq	f3a8 <lell_pcap_append_ppi_packet@@Base+0x138>
    f298:	ldr	r0, [r5, #4]
    f29c:	cmp	r0, #192	; 0xc0
    f2a0:	bne	f3a8 <lell_pcap_append_ppi_packet@@Base+0x138>
    f2a4:	movw	r9, #51712	; 0xca00
    f2a8:	ldr	r8, [fp, #28]
    f2ac:	ldr	sl, [fp, #8]
    f2b0:	mov	r1, r3
    f2b4:	mov	r7, r2
    f2b8:	mov	r0, r2
    f2bc:	mov	r3, #0
    f2c0:	mov	r4, #0
    f2c4:	movt	r9, #15258	; 0x3b9a
    f2c8:	mov	r2, r9
    f2cc:	bl	10234 <lell_pcapng_close@@Base+0x28>
    f2d0:	mov	r6, r0
    f2d4:	mov	r0, r8
    f2d8:	bl	46bc <lell_get_channel_k@plt>
    f2dc:	mls	r2, r6, r9, r7
    f2e0:	ldr	r1, [r8, #72]	; 0x48
    f2e4:	str	r6, [sp]
    f2e8:	movw	r3, #2402	; 0x962
    f2ec:	mov	r6, sp
    f2f0:	add	r0, r3, r0, lsl #1
    f2f4:	str	r2, [sp, #4]
    f2f8:	mov	r2, #147	; 0x93
    f2fc:	str	r2, [sp, #20]
    f300:	movw	r2, #30006	; 0x7536
    f304:	movt	r2, #12
    f308:	str	r2, [sp, #24]
    f30c:	mov	r2, #1572864	; 0x180000
    f310:	str	r2, [sp, #16]
    f314:	add	r2, r1, #33	; 0x21
    f318:	str	r2, [sp, #12]
    f31c:	add	r2, r1, #9
    f320:	cmp	r2, #255	; 0xff
    f324:	movcs	r2, #255	; 0xff
    f328:	add	r1, r2, #24
    f32c:	str	r1, [sp, #8]
    f330:	ldrb	r1, [r5, #8]
    f334:	strb	sl, [sp, #31]
    f338:	strh	r0, [sp, #29]
    f33c:	strb	r1, [sp, #28]
    f340:	ldr	r1, [fp, #24]
    f344:	ldr	r0, [r8, #76]	; 0x4c
    f348:	strb	r1, [sp, #39]	; 0x27
    f34c:	ldr	r1, [fp, #20]
    f350:	strb	r1, [sp, #38]	; 0x26
    f354:	ldr	r1, [fp, #12]
    f358:	strb	r1, [sp, #37]	; 0x25
    f35c:	ldr	r1, [fp, #16]
    f360:	strb	r1, [sp, #36]	; 0x24
    f364:	str	r0, [sp, #32]
    f368:	add	r0, r6, #40	; 0x28
    f36c:	mov	r1, r8
    f370:	bl	456c <memcpy@plt>
    f374:	ldr	r5, [r5]
    f378:	mov	r0, r6
    f37c:	mov	r1, #16
    f380:	mov	r2, #1
    f384:	mov	r3, r5
    f388:	bl	45e4 <fwrite@plt>
    f38c:	ldr	r1, [sp, #8]
    f390:	add	r0, r6, #16
    f394:	mov	r2, #1
    f398:	mov	r3, r5
    f39c:	bl	45e4 <fwrite@plt>
    f3a0:	mov	r0, r5
    f3a4:	bl	4524 <fflush@plt>
    f3a8:	mov	r0, r4
    f3ac:	sub	sp, fp, #28
    f3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f3b4 <lell_pcap_close@@Base>:
    f3b4:	cmp	r0, #0
    f3b8:	mvneq	r0, #0
    f3bc:	bxeq	lr
    f3c0:	push	{r4, sl, fp, lr}
    f3c4:	add	fp, sp, #8
    f3c8:	mov	r4, r0
    f3cc:	ldr	r0, [r0]
    f3d0:	cmp	r0, #0
    f3d4:	beq	f3dc <lell_pcap_close@@Base+0x28>
    f3d8:	bl	4764 <fclose@plt>
    f3dc:	mov	r0, r4
    f3e0:	bl	4548 <free@plt>
    f3e4:	mov	r0, #0
    f3e8:	pop	{r4, sl, fp, pc}

0000f3ec <pcapng_create@@Base>:
    f3ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f3f0:	add	fp, sp, #28
    f3f4:	sub	sp, sp, #4
    f3f8:	vpush	{d8-d9}
    f3fc:	sub	sp, sp, #48	; 0x30
    f400:	mov	r7, r3
    f404:	mov	r8, r2
    f408:	mov	r5, r1
    f40c:	mov	r4, r0
    f410:	vmov.i32	q4, #0	; 0x00000000
    f414:	add	sl, r0, #4
    f418:	bl	46d4 <getpagesize@plt>
    f41c:	mov	r6, r0
    f420:	mov	r0, #0
    f424:	mov	r1, #194	; 0xc2
    f428:	mov	r2, #432	; 0x1b0
    f42c:	vst1.32	{d8-d9}, [sl]
    f430:	str	r0, [r4, #20]
    f434:	str	r0, [r4, #24]
    f438:	mov	r0, r5
    f43c:	bl	4650 <open@plt>
    f440:	mov	r9, #6
    f444:	cmn	r0, #1
    f448:	str	r0, [r4]
    f44c:	beq	f838 <pcapng_create@@Base+0x44c>
    f450:	ldr	r1, [pc, #1076]	; f88c <pcapng_create@@Base+0x4a0>
    f454:	add	r1, pc, r1
    f458:	vld1.64	{d16-d17}, [r1]!
    f45c:	vldr	d18, [r1]
    f460:	add	r1, sp, #24
    f464:	mov	r2, r1
    f468:	vst1.64	{d16-d17}, [r2]!
    f46c:	vstr	d18, [r2]
    f470:	mov	r2, #24
    f474:	str	r2, [r4, #8]
    f478:	mov	r2, #24
    f47c:	bl	4740 <write@plt>
    f480:	cmn	r0, #1
    f484:	mov	r5, r0
    f488:	str	r6, [sp, #20]
    f48c:	cmpne	r8, #0
    f490:	bne	f4a8 <pcapng_create@@Base+0xbc>
    f494:	ldr	r0, [r4, #8]
    f498:	cmn	r5, #1
    f49c:	str	r0, [r4, #12]
    f4a0:	bne	f56c <pcapng_create@@Base+0x180>
    f4a4:	b	f838 <pcapng_create@@Base+0x44c>
    f4a8:	ldrh	r0, [r8]
    f4ac:	str	r7, [sp, #12]
    f4b0:	str	sl, [sp, #16]
    f4b4:	cmp	r0, #0
    f4b8:	beq	f554 <pcapng_create@@Base+0x168>
    f4bc:	ldr	r7, [pc, #972]	; f890 <pcapng_create@@Base+0x4a4>
    f4c0:	add	r7, pc, r7
    f4c4:	ldrh	sl, [r8, #2]
    f4c8:	cmp	sl, #0
    f4cc:	beq	f554 <pcapng_create@@Base+0x168>
    f4d0:	ldr	r0, [r4]
    f4d4:	add	r2, sl, #4
    f4d8:	mov	r1, r8
    f4dc:	bl	4740 <write@plt>
    f4e0:	movw	r1, #65532	; 0xfffc
    f4e4:	mov	r5, r0
    f4e8:	add	r0, sl, #3
    f4ec:	movt	r1, #1
    f4f0:	and	r9, r0, r1
    f4f4:	subs	r0, r9, sl
    f4f8:	cmnne	r5, #1
    f4fc:	beq	f52c <pcapng_create@@Base+0x140>
    f500:	sub	r0, sl, r9
    f504:	add	r6, r0, #1
    f508:	ldr	r0, [r4]
    f50c:	mov	r1, r7
    f510:	mov	r2, #1
    f514:	bl	4740 <write@plt>
    f518:	cmp	r6, #0
    f51c:	mov	r5, r0
    f520:	addne	r6, r6, #1
    f524:	cmnne	r5, #1
    f528:	bne	f508 <pcapng_create@@Base+0x11c>
    f52c:	ldr	r1, [r4, #8]
    f530:	add	r0, r9, #4
    f534:	cmn	r5, #1
    f538:	add	r1, r1, r0
    f53c:	str	r1, [r4, #8]
    f540:	beq	f820 <pcapng_create@@Base+0x434>
    f544:	add	r8, r8, r0
    f548:	ldrh	r0, [r8]
    f54c:	cmp	r0, #0
    f550:	bne	f4c4 <pcapng_create@@Base+0xd8>
    f554:	ldr	r0, [r4, #8]
    f558:	ldr	sl, [sp, #16]
    f55c:	ldr	r6, [sp, #20]
    f560:	ldr	r7, [sp, #12]
    f564:	mov	r9, #6
    f568:	str	r0, [r4, #12]
    f56c:	add	r1, r7, r6
    f570:	add	r1, r1, r0
    f574:	add	r1, r1, #3
    f578:	udiv	r1, r1, r6
    f57c:	mul	r1, r1, r6
    f580:	subs	r7, r1, r0
    f584:	str	r1, [r4, #8]
    f588:	cmnne	r5, #1
    f58c:	beq	f5bc <pcapng_create@@Base+0x1d0>
    f590:	ldr	r6, [pc, #764]	; f894 <pcapng_create@@Base+0x4a8>
    f594:	add	r6, pc, r6
    f598:	ldr	r0, [r4]
    f59c:	mov	r1, r6
    f5a0:	mov	r2, #1
    f5a4:	bl	4740 <write@plt>
    f5a8:	mov	r5, r0
    f5ac:	subs	r7, r7, #1
    f5b0:	cmnne	r5, #1
    f5b4:	bne	f598 <pcapng_create@@Base+0x1ac>
    f5b8:	ldr	r1, [r4, #8]
    f5bc:	ldr	r0, [r4]
    f5c0:	mov	r2, #0
    f5c4:	mov	r3, #1
    f5c8:	stm	sp, {r0, r2}
    f5cc:	mov	r0, #0
    f5d0:	mov	r2, #3
    f5d4:	bl	46a4 <mmap@plt>
    f5d8:	cmn	r5, #1
    f5dc:	str	r0, [r4, #4]
    f5e0:	beq	f838 <pcapng_create@@Base+0x44c>
    f5e4:	cmn	r0, #1
    f5e8:	beq	f650 <pcapng_create@@Base+0x264>
    f5ec:	ldr	r0, [fp, #12]
    f5f0:	ldr	r1, [fp, #8]
    f5f4:	mov	r2, #16
    f5f8:	str	r0, [sp, #36]	; 0x24
    f5fc:	mov	r0, #0
    f600:	strh	r0, [sp, #34]	; 0x22
    f604:	strh	r1, [sp, #32]
    f608:	str	r0, [sp, #28]
    f60c:	mov	r0, #1
    f610:	add	r1, sp, #24
    f614:	str	r0, [sp, #24]
    f618:	mov	r0, #16
    f61c:	str	r0, [r4, #20]
    f620:	ldr	r0, [r4]
    f624:	bl	4740 <write@plt>
    f628:	cmn	r0, #1
    f62c:	mov	r5, r0
    f630:	ldrne	r6, [fp, #16]
    f634:	cmpne	r6, #0
    f638:	bne	f658 <pcapng_create@@Base+0x26c>
    f63c:	ldr	r0, [r4, #20]
    f640:	cmn	r5, #1
    f644:	str	r0, [r4, #24]
    f648:	bne	f710 <pcapng_create@@Base+0x324>
    f64c:	b	f838 <pcapng_create@@Base+0x44c>
    f650:	mov	r9, #7
    f654:	b	f838 <pcapng_create@@Base+0x44c>
    f658:	ldrh	r0, [r6]
    f65c:	str	sl, [sp, #16]
    f660:	cmp	r0, #0
    f664:	beq	f700 <pcapng_create@@Base+0x314>
    f668:	ldr	sl, [pc, #552]	; f898 <pcapng_create@@Base+0x4ac>
    f66c:	movw	r8, #65532	; 0xfffc
    f670:	movt	r8, #1
    f674:	add	sl, pc, sl
    f678:	ldrh	r7, [r6, #2]
    f67c:	cmp	r7, #0
    f680:	beq	f700 <pcapng_create@@Base+0x314>
    f684:	ldr	r0, [r4]
    f688:	add	r2, r7, #4
    f68c:	mov	r1, r6
    f690:	bl	4740 <write@plt>
    f694:	mov	r5, r0
    f698:	add	r0, r7, #3
    f69c:	and	r9, r0, r8
    f6a0:	subs	r0, r9, r7
    f6a4:	cmnne	r5, #1
    f6a8:	beq	f6d8 <pcapng_create@@Base+0x2ec>
    f6ac:	sub	r0, r7, r9
    f6b0:	add	r7, r0, #1
    f6b4:	ldr	r0, [r4]
    f6b8:	mov	r1, sl
    f6bc:	mov	r2, #1
    f6c0:	bl	4740 <write@plt>
    f6c4:	cmp	r7, #0
    f6c8:	mov	r5, r0
    f6cc:	addne	r7, r7, #1
    f6d0:	cmnne	r5, #1
    f6d4:	bne	f6b4 <pcapng_create@@Base+0x2c8>
    f6d8:	ldr	r1, [r4, #20]
    f6dc:	add	r0, r9, #4
    f6e0:	cmn	r5, #1
    f6e4:	add	r1, r1, r0
    f6e8:	str	r1, [r4, #20]
    f6ec:	beq	f828 <pcapng_create@@Base+0x43c>
    f6f0:	add	r6, r6, r0
    f6f4:	ldrh	r0, [r6]
    f6f8:	cmp	r0, #0
    f6fc:	bne	f678 <pcapng_create@@Base+0x28c>
    f700:	ldr	r0, [r4, #20]
    f704:	ldr	sl, [sp, #16]
    f708:	mov	r9, #6
    f70c:	str	r0, [r4, #24]
    f710:	ldr	r1, [fp, #20]
    f714:	ldr	r2, [sp, #20]
    f718:	add	r1, r1, r2
    f71c:	add	r1, r1, r0
    f720:	add	r1, r1, #3
    f724:	udiv	r1, r1, r2
    f728:	mul	r1, r1, r2
    f72c:	subs	r7, r1, r0
    f730:	str	r1, [r4, #20]
    f734:	beq	f764 <pcapng_create@@Base+0x378>
    f738:	ldr	r6, [pc, #348]	; f89c <pcapng_create@@Base+0x4b0>
    f73c:	add	r6, pc, r6
    f740:	ldr	r0, [r4]
    f744:	mov	r1, r6
    f748:	mov	r2, #1
    f74c:	bl	4740 <write@plt>
    f750:	mov	r5, r0
    f754:	subs	r7, r7, #1
    f758:	cmnne	r5, #1
    f75c:	bne	f740 <pcapng_create@@Base+0x354>
    f760:	ldr	r1, [r4, #20]
    f764:	ldr	r0, [r4]
    f768:	ldr	r2, [r4, #8]
    f76c:	mov	r3, #1
    f770:	stm	sp, {r0, r2}
    f774:	mov	r0, #0
    f778:	mov	r2, #3
    f77c:	bl	46a4 <mmap@plt>
    f780:	cmn	r5, #1
    f784:	str	r0, [r4, #16]
    f788:	beq	f838 <pcapng_create@@Base+0x44c>
    f78c:	cmn	r0, #1
    f790:	mov	r9, #7
    f794:	beq	f838 <pcapng_create@@Base+0x44c>
    f798:	ldmib	r4, {r0, r1, r2}
    f79c:	ldr	r3, [pc, #252]	; f8a0 <pcapng_create@@Base+0x4b4>
    f7a0:	sub	r1, r1, r2
    f7a4:	mov	r9, #0
    f7a8:	sub	r1, r1, #12
    f7ac:	add	r3, pc, r3
    f7b0:	strh	r1, [r3, #2]
    f7b4:	ldr	r1, [pc, #232]	; f8a4 <pcapng_create@@Base+0x4b8>
    f7b8:	ldr	r1, [pc, r1]
    f7bc:	str	r1, [r0, r2]
    f7c0:	ldmib	r4, {r0, r1}
    f7c4:	bic	r2, r1, #3
    f7c8:	str	r1, [r0, #4]
    f7cc:	add	r0, r2, r0
    f7d0:	add	r2, r4, #16
    f7d4:	str	r1, [r0, #-4]
    f7d8:	ldm	r2, {r0, r1, r2}
    f7dc:	sub	r1, r1, r2
    f7e0:	sub	r1, r1, #12
    f7e4:	strh	r1, [r3, #2]
    f7e8:	ldr	r1, [pc, #184]	; f8a8 <pcapng_create@@Base+0x4bc>
    f7ec:	ldr	r1, [pc, r1]
    f7f0:	str	r1, [r0, r2]
    f7f4:	ldr	r1, [r4, #20]
    f7f8:	ldr	r0, [r4, #16]
    f7fc:	bic	r2, r1, #3
    f800:	str	r1, [r0, #4]
    f804:	add	r0, r2, r0
    f808:	str	r1, [r0, #-4]
    f80c:	ldr	r0, [r4, #4]
    f810:	ldr	r1, [r4, #20]
    f814:	str	r9, [r0, #20]
    f818:	str	r1, [r0, #16]
    f81c:	b	f878 <pcapng_create@@Base+0x48c>
    f820:	str	r1, [r4, #12]
    f824:	b	f830 <pcapng_create@@Base+0x444>
    f828:	ldr	r0, [r4, #20]
    f82c:	str	r0, [r4, #24]
    f830:	ldr	sl, [sp, #16]
    f834:	mov	r9, #6
    f838:	ldr	r0, [r4, #16]
    f83c:	add	r1, r0, #1
    f840:	cmp	r1, #2
    f844:	bcc	f850 <pcapng_create@@Base+0x464>
    f848:	ldr	r1, [r4, #20]
    f84c:	bl	477c <munmap@plt>
    f850:	ldr	r0, [sl]
    f854:	add	r1, r0, #1
    f858:	cmp	r1, #2
    f85c:	bcc	f868 <pcapng_create@@Base+0x47c>
    f860:	ldr	r1, [r4, #8]
    f864:	bl	477c <munmap@plt>
    f868:	ldr	r0, [r4]
    f86c:	cmn	r0, #1
    f870:	beq	f878 <pcapng_create@@Base+0x48c>
    f874:	bl	47dc <close@plt>
    f878:	mov	r0, r9
    f87c:	sub	sp, fp, #48	; 0x30
    f880:	vpop	{d8-d9}
    f884:	add	sp, sp, #4
    f888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f88c:	andeq	r9, r0, r4, asr r1
    f890:	andeq	r9, r0, r0, lsl #2
    f894:	andeq	r9, r0, ip, lsr #32
    f898:	andeq	r8, r0, ip, asr #30
    f89c:	andeq	r8, r0, r4, lsl #29
    f8a0:	andeq	sl, r1, ip, lsl #19
    f8a4:	andeq	sl, r1, r0, lsl #19
    f8a8:	andeq	sl, r1, ip, asr #18

0000f8ac <pcapng_close@@Base>:
    f8ac:	push	{r4, sl, fp, lr}
    f8b0:	add	fp, sp, #8
    f8b4:	mov	r4, r0
    f8b8:	ldr	r0, [r0, #16]
    f8bc:	add	r1, r0, #1
    f8c0:	cmp	r1, #2
    f8c4:	bcc	f8d0 <pcapng_close@@Base+0x24>
    f8c8:	ldr	r1, [r4, #20]
    f8cc:	bl	477c <munmap@plt>
    f8d0:	ldr	r0, [r4, #4]
    f8d4:	add	r1, r0, #1
    f8d8:	cmp	r1, #2
    f8dc:	bcc	f8e8 <pcapng_close@@Base+0x3c>
    f8e0:	ldr	r1, [r4, #8]
    f8e4:	bl	477c <munmap@plt>
    f8e8:	ldr	r0, [r4]
    f8ec:	cmn	r0, #1
    f8f0:	beq	f8f8 <pcapng_close@@Base+0x4c>
    f8f4:	bl	47dc <close@plt>
    f8f8:	mov	r0, #0
    f8fc:	pop	{r4, sl, fp, pc}

0000f900 <pcapng_append_section_option@@Base>:
    f900:	push	{r4, r5, fp, lr}
    f904:	add	fp, sp, #8
    f908:	mov	r4, r0
    f90c:	mov	r0, #1
    f910:	cmp	r4, #0
    f914:	beq	f948 <pcapng_append_section_option@@Base+0x48>
    f918:	ldr	r2, [r4]
    f91c:	cmn	r2, #1
    f920:	beq	f948 <pcapng_append_section_option@@Base+0x48>
    f924:	ldr	r2, [r4, #4]
    f928:	mov	r0, #5
    f92c:	add	r3, r2, #1
    f930:	cmp	r3, #2
    f934:	popcc	{r4, r5, fp, pc}
    f938:	cmp	r1, #0
    f93c:	ldrne	r3, [r4, #12]
    f940:	cmpne	r3, #0
    f944:	bne	f94c <pcapng_append_section_option@@Base+0x4c>
    f948:	pop	{r4, r5, fp, pc}
    f94c:	ldrh	r5, [r1, #2]
    f950:	add	r0, r2, r3
    f954:	add	r2, r5, #4
    f958:	bl	456c <memcpy@plt>
    f95c:	add	r3, r5, #7
    f960:	ldmib	r4, {r0, r1, r2}
    f964:	bic	r3, r3, #3
    f968:	add	r2, r3, r2
    f96c:	str	r2, [r4, #12]
    f970:	sub	r1, r1, r2
    f974:	ldr	r3, [pc, #28]	; f998 <pcapng_append_section_option@@Base+0x98>
    f978:	sub	r1, r1, #12
    f97c:	add	r3, pc, r3
    f980:	strh	r1, [r3, #2]
    f984:	ldr	r1, [pc, #16]	; f99c <pcapng_append_section_option@@Base+0x9c>
    f988:	ldr	r1, [pc, r1]
    f98c:	str	r1, [r0, r2]
    f990:	mov	r0, #0
    f994:	pop	{r4, r5, fp, pc}
    f998:			; <UNDEFINED> instruction: 0x0001a7bc
    f99c:			; <UNDEFINED> instruction: 0x0001a7b0

0000f9a0 <pcapng_append_interface_option@@Base>:
    f9a0:	push	{r4, r5, fp, lr}
    f9a4:	add	fp, sp, #8
    f9a8:	mov	r4, r0
    f9ac:	mov	r0, #1
    f9b0:	cmp	r4, #0
    f9b4:	beq	f9e8 <pcapng_append_interface_option@@Base+0x48>
    f9b8:	ldr	r2, [r4]
    f9bc:	cmn	r2, #1
    f9c0:	beq	f9e8 <pcapng_append_interface_option@@Base+0x48>
    f9c4:	ldr	r2, [r4, #16]
    f9c8:	mov	r0, #5
    f9cc:	add	r3, r2, #1
    f9d0:	cmp	r3, #2
    f9d4:	popcc	{r4, r5, fp, pc}
    f9d8:	cmp	r1, #0
    f9dc:	ldrne	r3, [r4, #24]
    f9e0:	cmpne	r3, #0
    f9e4:	bne	f9ec <pcapng_append_interface_option@@Base+0x4c>
    f9e8:	pop	{r4, r5, fp, pc}
    f9ec:	ldrh	r5, [r1, #2]
    f9f0:	add	r0, r2, r3
    f9f4:	add	r2, r5, #4
    f9f8:	bl	456c <memcpy@plt>
    f9fc:	add	r3, r5, #7
    fa00:	add	r2, r4, #16
    fa04:	bic	r3, r3, #3
    fa08:	ldm	r2, {r0, r1, r2}
    fa0c:	add	r2, r3, r2
    fa10:	str	r2, [r4, #24]
    fa14:	sub	r1, r1, r2
    fa18:	ldr	r3, [pc, #28]	; fa3c <pcapng_append_interface_option@@Base+0x9c>
    fa1c:	sub	r1, r1, #12
    fa20:	add	r3, pc, r3
    fa24:	strh	r1, [r3, #2]
    fa28:	ldr	r1, [pc, #16]	; fa40 <pcapng_append_interface_option@@Base+0xa0>
    fa2c:	ldr	r1, [pc, r1]
    fa30:	str	r1, [r0, r2]
    fa34:	mov	r0, #0
    fa38:	pop	{r4, r5, fp, pc}
    fa3c:	andeq	sl, r1, r8, lsl r7
    fa40:	andeq	sl, r1, ip, lsl #14

0000fa44 <pcapng_append_packet@@Base>:
    fa44:	push	{r4, r5, fp, lr}
    fa48:	add	fp, sp, #8
    fa4c:	mov	r4, r0
    fa50:	mov	r0, #1
    fa54:	cmp	r4, #0
    fa58:	beq	faa4 <pcapng_append_packet@@Base+0x60>
    fa5c:	ldr	r2, [r4]
    fa60:	cmn	r2, #1
    fa64:	beq	faa4 <pcapng_append_packet@@Base+0x60>
    fa68:	ldr	r5, [r1, #4]
    fa6c:	mov	r0, r2
    fa70:	mov	r2, r5
    fa74:	bl	4740 <write@plt>
    fa78:	mov	r1, r0
    fa7c:	mov	r0, #0
    fa80:	cmn	r1, #1
    fa84:	beq	faa4 <pcapng_append_packet@@Base+0x60>
    fa88:	ldr	r1, [r4, #4]
    fa8c:	ldr	r2, [r1, #16]
    fa90:	ldr	r3, [r1, #20]
    fa94:	adds	r2, r2, r5
    fa98:	str	r2, [r1, #16]
    fa9c:	adc	r2, r3, #0
    faa0:	str	r2, [r1, #20]
    faa4:	pop	{r4, r5, fp, pc}

0000faa8 <btbb_pcapng_create_file@@Base>:
    faa8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    faac:	add	fp, sp, #24
    fab0:	sub	sp, sp, #288	; 0x120
    fab4:	mov	r6, r0
    fab8:	mov	r0, #28
    fabc:	mov	r8, r2
    fac0:	mov	r7, r1
    fac4:	bl	462c <malloc@plt>
    fac8:	cmp	r0, #0
    facc:	beq	fb6c <btbb_pcapng_create_file@@Base+0xc4>
    fad0:	add	r9, sp, #16
    fad4:	mov	r4, r0
    fad8:	mov	r1, #0
    fadc:	movw	r2, #258	; 0x102
    fae0:	mov	r5, #0
    fae4:	orr	r0, r9, #2
    fae8:	bl	46f8 <memset@plt>
    faec:	mov	r0, #3
    faf0:	cmp	r7, #0
    faf4:	strh	r0, [sp, #16]
    faf8:	beq	fb20 <btbb_pcapng_create_file@@Base+0x78>
    fafc:	add	r0, r9, #4
    fb00:	mov	r1, r7
    fb04:	mov	r2, #256	; 0x100
    fb08:	bl	4710 <strncpy@plt>
    fb0c:	mov	r1, #0
    fb10:	strb	r1, [sp, #275]	; 0x113
    fb14:	bl	468c <strlen@plt>
    fb18:	mov	r5, r9
    fb1c:	strh	r0, [sp, #18]
    fb20:	bl	46d4 <getpagesize@plt>
    fb24:	mov	r3, r0
    fb28:	mov	r1, #255	; 0xff
    fb2c:	mov	r0, #400	; 0x190
    fb30:	str	r1, [sp]
    fb34:	stmib	sp, {r0, r5}
    fb38:	str	r3, [sp, #12]
    fb3c:	mov	r0, r4
    fb40:	mov	r1, r6
    fb44:	ldr	r2, [pc, #184]	; fc04 <btbb_pcapng_create_file@@Base+0x15c>
    fb48:	ldr	r2, [pc, r2]
    fb4c:	bl	45a8 <pcapng_create@plt>
    fb50:	mov	r6, r0
    fb54:	cmp	r0, #0
    fb58:	bne	fbe0 <btbb_pcapng_create_file@@Base+0x138>
    fb5c:	cmp	r5, #0
    fb60:	beq	fba4 <btbb_pcapng_create_file@@Base+0xfc>
    fb64:	ldrh	r0, [r5]
    fb68:	b	fb94 <btbb_pcapng_create_file@@Base+0xec>
    fb6c:	mvn	r0, #4
    fb70:	sub	sp, fp, #24
    fb74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fb78:	uxth	r0, r0
    fb7c:	cmp	r0, #9
    fb80:	beq	fbf4 <btbb_pcapng_create_file@@Base+0x14c>
    fb84:	add	r0, r1, #3
    fb88:	bic	r0, r0, #3
    fb8c:	add	r5, r0, r5
    fb90:	ldrh	r0, [r5, #4]!
    fb94:	cmp	r0, #0
    fb98:	ldrhne	r1, [r5, #2]
    fb9c:	cmpne	r1, #0
    fba0:	bne	fb78 <btbb_pcapng_create_file@@Base+0xd0>
    fba4:	ldr	r0, [pc, #92]	; fc08 <btbb_pcapng_create_file@@Base+0x160>
    fba8:	sub	r1, fp, #36	; 0x24
    fbac:	ldr	r0, [pc, r0]
    fbb0:	str	r0, [fp, #-36]	; 0xffffffdc
    fbb4:	ldr	r0, [pc, #80]	; fc0c <btbb_pcapng_create_file@@Base+0x164>
    fbb8:	add	r0, pc, r0
    fbbc:	ldrb	r0, [r0, #4]
    fbc0:	strb	r0, [fp, #-32]	; 0xffffffe0
    fbc4:	mov	r0, r4
    fbc8:	bl	453c <pcapng_append_interface_option@plt>
    fbcc:	cmp	r0, #0
    fbd0:	beq	fbf4 <btbb_pcapng_create_file@@Base+0x14c>
    fbd4:	mov	r6, r0
    fbd8:	mov	r0, r4
    fbdc:	bl	47b8 <pcapng_close@plt>
    fbe0:	mov	r0, r4
    fbe4:	bl	4548 <free@plt>
    fbe8:	rsb	r0, r6, #0
    fbec:	sub	sp, fp, #24
    fbf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fbf4:	str	r4, [r8]
    fbf8:	mov	r0, #0
    fbfc:	sub	sp, fp, #24
    fc00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fc04:	andeq	sl, r1, r4, ror #11
    fc08:	andeq	r8, r0, r8, lsr #20
    fc0c:	andeq	r8, r0, ip, lsl sl

0000fc10 <btbb_pcapng_append_packet@@Base>:
    fc10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fc14:	add	fp, sp, #28
    fc18:	sub	sp, sp, #484	; 0x1e4
    fc1c:	ldr	r8, [fp, #24]
    fc20:	str	r0, [fp, #-488]	; 0xfffffe18
    fc24:	sub	r4, fp, #436	; 0x1b4
    fc28:	str	r3, [fp, #-492]	; 0xfffffe14
    fc2c:	str	r2, [fp, #-496]	; 0xfffffe10
    fc30:	mov	r0, r8
    fc34:	bl	4674 <btbb_packet_get_payload_length@plt>
    fc38:	mov	r5, r0
    fc3c:	add	r0, r0, #7
    fc40:	bic	r0, r0, #7
    fc44:	sub	r1, sp, r0
    fc48:	mov	sp, r1
    fc4c:	mov	r0, r8
    fc50:	str	r1, [fp, #-508]	; 0xfffffe04
    fc54:	bl	44f4 <btbb_get_payload_packed@plt>
    fc58:	mov	r0, r8
    fc5c:	bl	4794 <btbb_packet_get_channel@plt>
    fc60:	str	r0, [fp, #-500]	; 0xfffffe0c
    fc64:	mov	r0, r8
    fc68:	bl	4560 <btbb_packet_get_ac_errors@plt>
    fc6c:	str	r0, [fp, #-504]	; 0xfffffe08
    fc70:	mov	r0, r8
    fc74:	bl	46ec <btbb_packet_get_transport@plt>
    fc78:	mov	r9, r0
    fc7c:	mov	r0, r8
    fc80:	bl	4554 <btbb_packet_get_modulation@plt>
    fc84:	mov	sl, r0
    fc88:	mov	r0, r8
    fc8c:	bl	4728 <btbb_packet_get_lap@plt>
    fc90:	mov	r7, r0
    fc94:	mov	r0, r8
    fc98:	bl	46b0 <btbb_packet_get_header_packed@plt>
    fc9c:	str	r0, [fp, #-440]	; 0xfffffe48
    fca0:	ldr	r0, [fp, #16]
    fca4:	ldr	r2, [fp, #20]
    fca8:	ldr	r3, [fp, #12]
    fcac:	mvn	r6, #0
    fcb0:	mov	r8, #0
    fcb4:	bic	r1, r0, #-16777216	; 0xff000000
    fcb8:	orr	r1, r1, r2, lsl #24
    fcbc:	str	r1, [fp, #-444]	; 0xfffffe44
    fcc0:	ldr	r1, [fp, #8]
    fcc4:	str	r7, [fp, #-448]	; 0xfffffe40
    fcc8:	mov	r7, #3
    fccc:	cmp	r3, r1
    fcd0:	movwlt	r7, #7
    fcd4:	subs	r0, r0, r6
    fcd8:	movwne	r0, #1
    fcdc:	subs	r2, r2, #255	; 0xff
    fce0:	orr	r0, r7, r0, lsl #4
    fce4:	movwne	r2, #1
    fce8:	cmp	r5, #400	; 0x190
    fcec:	movge	r5, #400	; 0x190
    fcf0:	orr	r7, r0, r2, lsl #7
    fcf4:	orr	r0, sl, r9, lsl #4
    fcf8:	mov	r9, r4
    fcfc:	cmp	r5, #0
    fd00:	strh	r7, [r4]
    fd04:	strb	r0, [fp, #-452]	; 0xfffffe3c
    fd08:	ldr	r0, [fp, #-504]	; 0xfffffe08
    fd0c:	strh	r8, [r4, #-14]
    fd10:	strb	r8, [fp, #-451]	; 0xfffffe3d
    fd14:	add	r4, r5, #61	; 0x3d
    fd18:	bic	r6, r4, #3
    fd1c:	strb	r0, [fp, #-453]	; 0xfffffe3b
    fd20:	ldr	r0, [fp, #-500]	; 0xfffffe0c
    fd24:	strb	r3, [fp, #-454]	; 0xfffffe3a
    fd28:	strb	r1, [fp, #-455]	; 0xfffffe39
    fd2c:	strb	r0, [fp, #-456]	; 0xfffffe38
    fd30:	add	r0, r5, #22
    fd34:	str	r0, [fp, #-460]	; 0xfffffe34
    fd38:	str	r0, [fp, #-464]	; 0xfffffe30
    fd3c:	ldr	r0, [fp, #-496]	; 0xfffffe10
    fd40:	str	r0, [fp, #-468]	; 0xfffffe2c
    fd44:	ldr	r0, [fp, #-492]	; 0xfffffe14
    fd48:	str	r0, [fp, #-472]	; 0xfffffe28
    fd4c:	mov	r0, #6
    fd50:	str	r8, [fp, #-476]	; 0xfffffe24
    fd54:	str	r6, [fp, #-480]	; 0xfffffe20
    fd58:	str	r0, [fp, #-484]	; 0xfffffe1c
    fd5c:	beq	fd80 <btbb_pcapng_append_packet@@Base+0x170>
    fd60:	cmp	r5, #400	; 0x190
    fd64:	bhi	fdac <btbb_pcapng_append_packet@@Base+0x19c>
    fd68:	ldr	r1, [fp, #-508]	; 0xfffffe04
    fd6c:	sub	r0, fp, #484	; 0x1e4
    fd70:	mov	r2, r5
    fd74:	add	r0, r0, #50	; 0x32
    fd78:	bl	456c <memcpy@plt>
    fd7c:	orr	r7, r7, #32
    fd80:	lsr	r0, r4, #2
    fd84:	sub	r1, fp, #484	; 0x1e4
    fd88:	strh	r7, [r9]
    fd8c:	add	r0, r1, r0, lsl #2
    fd90:	str	r8, [r0, #-8]
    fd94:	str	r6, [r0, #-4]
    fd98:	ldr	r0, [fp, #-488]	; 0xfffffe18
    fd9c:	bl	46e0 <pcapng_append_packet@plt>
    fda0:	rsb	r0, r0, #0
    fda4:	sub	sp, fp, #28
    fda8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fdac:	ldr	r0, [pc, #24]	; fdcc <btbb_pcapng_append_packet@@Base+0x1bc>
    fdb0:	ldr	r1, [pc, #24]	; fdd0 <btbb_pcapng_append_packet@@Base+0x1c0>
    fdb4:	ldr	r3, [pc, #24]	; fdd4 <btbb_pcapng_append_packet@@Base+0x1c4>
    fdb8:	mov	r2, #221	; 0xdd
    fdbc:	add	r0, pc, r0
    fdc0:	add	r1, pc, r1
    fdc4:	add	r3, pc, r3
    fdc8:	bl	47e8 <__assert_fail@plt>
    fdcc:	andeq	r8, r0, sp, lsl r8
    fdd0:	andeq	r8, r0, lr, asr #16
    fdd4:	muleq	r0, r7, r8

0000fdd8 <btbb_pcapng_record_bdaddr@@Base>:
    fdd8:	push	{fp, lr}
    fddc:	mov	fp, sp
    fde0:	sub	sp, sp, #16
    fde4:	movw	r1, #54080	; 0xd340
    fde8:	strb	r3, [sp, #12]
    fdec:	strb	r2, [sp, #8]
    fdf0:	movt	r1, #12
    fdf4:	str	r1, [sp, #4]
    fdf8:	lsr	r1, r3, #8
    fdfc:	strb	r1, [sp, #13]
    fe00:	lsr	r1, r2, #24
    fe04:	strb	r1, [sp, #11]
    fe08:	lsr	r1, r2, #16
    fe0c:	strb	r1, [sp, #10]
    fe10:	lsr	r1, r2, #8
    fe14:	strb	r1, [sp, #9]
    fe18:	ldr	r1, [fp, #12]
    fe1c:	strb	r1, [sp, #15]
    fe20:	ldr	r1, [fp, #8]
    fe24:	strb	r1, [sp, #14]
    fe28:	add	r1, sp, #4
    fe2c:	bl	453c <pcapng_append_interface_option@plt>
    fe30:	rsb	r0, r0, #0
    fe34:	mov	sp, fp
    fe38:	pop	{fp, pc}

0000fe3c <btbb_pcapng_record_btclock@@Base>:
    fe3c:	push	{fp, lr}
    fe40:	mov	fp, sp
    fe44:	sub	sp, sp, #24
    fe48:	movw	r1, #54081	; 0xd341
    fe4c:	str	r2, [sp, #12]
    fe50:	movt	r1, #24
    fe54:	str	r1, [sp]
    fe58:	ldr	r1, [fp, #12]
    fe5c:	str	r1, [sp, #8]
    fe60:	ldr	r1, [fp, #8]
    fe64:	str	r1, [sp, #4]
    fe68:	ldr	r1, [fp, #20]
    fe6c:	str	r1, [sp, #20]
    fe70:	ldr	r1, [fp, #16]
    fe74:	str	r1, [sp, #16]
    fe78:	mov	r1, sp
    fe7c:	bl	453c <pcapng_append_interface_option@plt>
    fe80:	rsb	r0, r0, #0
    fe84:	mov	sp, fp
    fe88:	pop	{fp, pc}

0000fe8c <btbb_pcapng_close@@Base>:
    fe8c:	push	{r4, sl, fp, lr}
    fe90:	add	fp, sp, #8
    fe94:	mov	r4, r0
    fe98:	bl	47b8 <pcapng_close@plt>
    fe9c:	cmp	r4, #0
    fea0:	beq	feac <btbb_pcapng_close@@Base+0x20>
    fea4:	mov	r0, r4
    fea8:	bl	4548 <free@plt>
    feac:	mvn	r0, #0
    feb0:	pop	{r4, sl, fp, pc}

0000feb4 <lell_pcapng_create_file@@Base>:
    feb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    feb8:	add	fp, sp, #24
    febc:	sub	sp, sp, #288	; 0x120
    fec0:	mov	r6, r0
    fec4:	mov	r0, #28
    fec8:	mov	r8, r2
    fecc:	mov	r7, r1
    fed0:	bl	462c <malloc@plt>
    fed4:	cmp	r0, #0
    fed8:	beq	ff78 <lell_pcapng_create_file@@Base+0xc4>
    fedc:	add	r9, sp, #16
    fee0:	mov	r4, r0
    fee4:	mov	r1, #0
    fee8:	movw	r2, #258	; 0x102
    feec:	mov	r5, #0
    fef0:	orr	r0, r9, #2
    fef4:	bl	46f8 <memset@plt>
    fef8:	mov	r0, #3
    fefc:	cmp	r7, #0
    ff00:	strh	r0, [sp, #16]
    ff04:	beq	ff2c <lell_pcapng_create_file@@Base+0x78>
    ff08:	add	r0, r9, #4
    ff0c:	mov	r1, r7
    ff10:	mov	r2, #256	; 0x100
    ff14:	bl	4710 <strncpy@plt>
    ff18:	mov	r1, #0
    ff1c:	strb	r1, [sp, #275]	; 0x113
    ff20:	bl	468c <strlen@plt>
    ff24:	mov	r5, r9
    ff28:	strh	r0, [sp, #18]
    ff2c:	bl	46d4 <getpagesize@plt>
    ff30:	mov	r3, r0
    ff34:	mov	r1, #256	; 0x100
    ff38:	mov	r0, #64	; 0x40
    ff3c:	str	r1, [sp]
    ff40:	stmib	sp, {r0, r5}
    ff44:	str	r3, [sp, #12]
    ff48:	mov	r0, r4
    ff4c:	mov	r1, r6
    ff50:	ldr	r2, [pc, #184]	; 10010 <lell_pcapng_create_file@@Base+0x15c>
    ff54:	ldr	r2, [pc, r2]
    ff58:	bl	45a8 <pcapng_create@plt>
    ff5c:	mov	r6, r0
    ff60:	cmp	r0, #0
    ff64:	bne	ffec <lell_pcapng_create_file@@Base+0x138>
    ff68:	cmp	r5, #0
    ff6c:	beq	ffb0 <lell_pcapng_create_file@@Base+0xfc>
    ff70:	ldrh	r0, [r5]
    ff74:	b	ffa0 <lell_pcapng_create_file@@Base+0xec>
    ff78:	mvn	r0, #4
    ff7c:	sub	sp, fp, #24
    ff80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ff84:	uxth	r0, r0
    ff88:	cmp	r0, #9
    ff8c:	beq	10000 <lell_pcapng_create_file@@Base+0x14c>
    ff90:	add	r0, r1, #3
    ff94:	bic	r0, r0, #3
    ff98:	add	r5, r0, r5
    ff9c:	ldrh	r0, [r5, #4]!
    ffa0:	cmp	r0, #0
    ffa4:	ldrhne	r1, [r5, #2]
    ffa8:	cmpne	r1, #0
    ffac:	bne	ff84 <lell_pcapng_create_file@@Base+0xd0>
    ffb0:	ldr	r0, [pc, #92]	; 10014 <lell_pcapng_create_file@@Base+0x160>
    ffb4:	sub	r1, fp, #36	; 0x24
    ffb8:	ldr	r0, [pc, r0]
    ffbc:	str	r0, [fp, #-36]	; 0xffffffdc
    ffc0:	ldr	r0, [pc, #80]	; 10018 <lell_pcapng_create_file@@Base+0x164>
    ffc4:	add	r0, pc, r0
    ffc8:	ldrb	r0, [r0, #4]
    ffcc:	strb	r0, [fp, #-32]	; 0xffffffe0
    ffd0:	mov	r0, r4
    ffd4:	bl	453c <pcapng_append_interface_option@plt>
    ffd8:	cmp	r0, #0
    ffdc:	beq	10000 <lell_pcapng_create_file@@Base+0x14c>
    ffe0:	mov	r6, r0
    ffe4:	mov	r0, r4
    ffe8:	bl	47b8 <pcapng_close@plt>
    ffec:	mov	r0, r4
    fff0:	bl	4548 <free@plt>
    fff4:	rsb	r0, r6, #0
    fff8:	sub	sp, fp, #24
    fffc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10000:	str	r4, [r8]
   10004:	mov	r0, #0
   10008:	sub	sp, fp, #24
   1000c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10010:	ldrdeq	sl, [r1], -r8
   10014:	andeq	r8, r0, ip, lsl r6
   10018:	andeq	r8, r0, r0, lsl r6

0001001c <lell_pcapng_append_packet@@Base>:
   1001c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10020:	add	fp, sp, #28
   10024:	sub	sp, sp, #372	; 0x174
   10028:	ldr	r5, [fp, #20]
   1002c:	mov	sl, r0
   10030:	mov	r7, r3
   10034:	mov	r8, r2
   10038:	mov	r0, r5
   1003c:	bl	4518 <lell_packet_is_data@plt>
   10040:	ldr	r1, [r5, #72]	; 0x48
   10044:	add	r2, r1, #9
   10048:	cmp	r2, #256	; 0x100
   1004c:	bcs	10184 <lell_pcapng_append_packet@@Base+0x168>
   10050:	ldr	ip, [fp, #16]
   10054:	ldr	lr, [fp, #12]
   10058:	ldr	r9, [fp, #8]
   1005c:	add	r3, r1, #19
   10060:	add	r1, r1, #58	; 0x3a
   10064:	clz	r0, r0
   10068:	ldr	r4, [r5, #92]	; 0x5c
   1006c:	str	r7, [sp, #8]
   10070:	str	r8, [sp, #4]
   10074:	bic	r6, r1, #3
   10078:	lsr	r1, r1, #2
   1007c:	lsr	r0, r0, #5
   10080:	str	r1, [sp, #12]
   10084:	ldrb	r1, [r5, #69]	; 0x45
   10088:	str	ip, [sp, #48]	; 0x30
   1008c:	strb	lr, [sp, #46]	; 0x2e
   10090:	strb	r9, [sp, #45]	; 0x2d
   10094:	str	r3, [sp, #40]	; 0x28
   10098:	str	r3, [sp, #36]	; 0x24
   1009c:	str	r8, [sp, #32]
   100a0:	str	r7, [sp, #28]
   100a4:	mov	r7, #0
   100a8:	mov	r3, #6
   100ac:	cmp	lr, r9
   100b0:	str	r7, [sp, #24]
   100b4:	str	r6, [sp, #20]
   100b8:	str	r3, [sp, #16]
   100bc:	mov	r3, #35	; 0x23
   100c0:	movwlt	r3, #39	; 0x27
   100c4:	orr	r0, r3, r0, lsl #4
   100c8:	strh	r0, [sp, #52]	; 0x34
   100cc:	strb	r4, [sp, #47]	; 0x2f
   100d0:	add	r4, sp, #16
   100d4:	strb	r1, [sp, #44]	; 0x2c
   100d8:	mov	r1, r5
   100dc:	add	r0, r4, #38	; 0x26
   100e0:	bl	456c <memcpy@plt>
   100e4:	ldr	r0, [sp, #12]
   100e8:	mov	r1, r4
   100ec:	add	r0, r4, r0, lsl #2
   100f0:	str	r7, [r0, #-8]
   100f4:	str	r6, [r0, #-4]
   100f8:	mov	r0, sl
   100fc:	bl	46e0 <pcapng_append_packet@plt>
   10100:	rsb	r4, r0, #0
   10104:	cmp	r0, #0
   10108:	bne	10178 <lell_pcapng_append_packet@@Base+0x15c>
   1010c:	mov	r0, r5
   10110:	bl	4518 <lell_packet_is_data@plt>
   10114:	cmp	r0, #0
   10118:	bne	10178 <lell_pcapng_append_packet@@Base+0x15c>
   1011c:	ldrb	r0, [r5, #80]	; 0x50
   10120:	cmp	r0, #5
   10124:	bne	10178 <lell_pcapng_append_packet@@Base+0x15c>
   10128:	ldr	r0, [sp, #4]
   1012c:	add	r2, r5, #16
   10130:	sub	r1, fp, #80	; 0x50
   10134:	str	r0, [fp, #-76]	; 0xffffffb4
   10138:	movw	r0, #54144	; 0xd380
   1013c:	movt	r0, #46	; 0x2e
   10140:	str	r0, [fp, #-80]	; 0xffffffb0
   10144:	ldr	r0, [sp, #8]
   10148:	str	r0, [fp, #-72]	; 0xffffffb8
   1014c:	mov	r0, #32
   10150:	vld1.8	{d16-d17}, [r5], r0
   10154:	vld1.8	{d18-d19}, [r2]
   10158:	add	r0, r1, #12
   1015c:	vst1.32	{d16-d17}, [r0]
   10160:	add	r0, r1, #28
   10164:	vst1.32	{d18-d19}, [r0]
   10168:	ldrh	r0, [r5]
   1016c:	strh	r0, [fp, #-36]	; 0xffffffdc
   10170:	mov	r0, sl
   10174:	bl	453c <pcapng_append_interface_option@plt>
   10178:	mov	r0, r4
   1017c:	sub	sp, fp, #28
   10180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10184:	ldr	r0, [pc, #24]	; 101a4 <lell_pcapng_append_packet@@Base+0x188>
   10188:	ldr	r1, [pc, #24]	; 101a8 <lell_pcapng_append_packet@@Base+0x18c>
   1018c:	ldr	r3, [pc, #24]	; 101ac <lell_pcapng_append_packet@@Base+0x190>
   10190:	movw	r2, #441	; 0x1b9
   10194:	add	r0, pc, r0
   10198:	add	r1, pc, r1
   1019c:	add	r3, pc, r3
   101a0:	bl	47e8 <__assert_fail@plt>
   101a4:	andeq	r8, r0, r3, lsl #12
   101a8:	andeq	r8, r0, r6, ror r4
   101ac:	andeq	r8, r0, r4, lsl r6

000101b0 <lell_pcapng_record_connect_req@@Base>:
   101b0:	push	{fp, lr}
   101b4:	mov	fp, sp
   101b8:	sub	sp, sp, #48	; 0x30
   101bc:	movw	r1, #54144	; 0xd380
   101c0:	stmib	sp, {r2, r3}
   101c4:	ldr	r2, [fp, #8]
   101c8:	mov	ip, #32
   101cc:	movt	r1, #46	; 0x2e
   101d0:	str	r1, [sp]
   101d4:	mov	r1, sp
   101d8:	add	lr, r2, #16
   101dc:	vld1.8	{d16-d17}, [r2], ip
   101e0:	add	r3, r1, #12
   101e4:	vld1.8	{d18-d19}, [lr]
   101e8:	vst1.32	{d16-d17}, [r3]
   101ec:	add	r3, r1, #28
   101f0:	vst1.32	{d18-d19}, [r3]
   101f4:	ldrh	r2, [r2]
   101f8:	strh	r2, [sp, #44]	; 0x2c
   101fc:	bl	453c <pcapng_append_interface_option@plt>
   10200:	rsb	r0, r0, #0
   10204:	mov	sp, fp
   10208:	pop	{fp, pc}

0001020c <lell_pcapng_close@@Base>:
   1020c:	push	{r4, sl, fp, lr}
   10210:	add	fp, sp, #8
   10214:	mov	r4, r0
   10218:	bl	47b8 <pcapng_close@plt>
   1021c:	cmp	r4, #0
   10220:	beq	1022c <lell_pcapng_close@@Base+0x20>
   10224:	mov	r0, r4
   10228:	bl	4548 <free@plt>
   1022c:	mvn	r0, #0
   10230:	pop	{r4, sl, fp, pc}
   10234:	cmp	r3, #0
   10238:	cmpeq	r2, #0
   1023c:	bne	10254 <lell_pcapng_close@@Base+0x48>
   10240:	cmp	r1, #0
   10244:	cmpeq	r0, #0
   10248:	mvnne	r1, #0
   1024c:	mvnne	r0, #0
   10250:	b	10270 <lell_pcapng_close@@Base+0x64>
   10254:	sub	sp, sp, #8
   10258:	push	{sp, lr}
   1025c:	bl	10280 <lell_pcapng_close@@Base+0x74>
   10260:	ldr	lr, [sp, #4]
   10264:	add	sp, sp, #8
   10268:	pop	{r2, r3}
   1026c:	bx	lr
   10270:	push	{r1, lr}
   10274:	mov	r0, #8
   10278:	bl	44d0 <raise@plt>
   1027c:	pop	{r1, pc}
   10280:	cmp	r1, r3
   10284:	cmpeq	r0, r2
   10288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1028c:	mov	r4, r0
   10290:	movcc	r0, #0
   10294:	mov	r5, r1
   10298:	ldr	lr, [sp, #36]	; 0x24
   1029c:	movcc	r1, r0
   102a0:	bcc	1039c <lell_pcapng_close@@Base+0x190>
   102a4:	cmp	r3, #0
   102a8:	clzeq	ip, r2
   102ac:	clzne	ip, r3
   102b0:	addeq	ip, ip, #32
   102b4:	cmp	r5, #0
   102b8:	clzeq	r1, r4
   102bc:	addeq	r1, r1, #32
   102c0:	clzne	r1, r5
   102c4:	sub	ip, ip, r1
   102c8:	sub	sl, ip, #32
   102cc:	lsl	r9, r3, ip
   102d0:	rsb	fp, ip, #32
   102d4:	orr	r9, r9, r2, lsl sl
   102d8:	orr	r9, r9, r2, lsr fp
   102dc:	lsl	r8, r2, ip
   102e0:	cmp	r5, r9
   102e4:	cmpeq	r4, r8
   102e8:	movcc	r0, #0
   102ec:	movcc	r1, r0
   102f0:	bcc	1030c <lell_pcapng_close@@Base+0x100>
   102f4:	mov	r0, #1
   102f8:	subs	r4, r4, r8
   102fc:	lsl	r1, r0, sl
   10300:	orr	r1, r1, r0, lsr fp
   10304:	lsl	r0, r0, ip
   10308:	sbc	r5, r5, r9
   1030c:	cmp	ip, #0
   10310:	beq	1039c <lell_pcapng_close@@Base+0x190>
   10314:	lsr	r6, r8, #1
   10318:	orr	r6, r6, r9, lsl #31
   1031c:	lsr	r7, r9, #1
   10320:	mov	r2, ip
   10324:	b	10348 <lell_pcapng_close@@Base+0x13c>
   10328:	subs	r3, r4, r6
   1032c:	sbc	r8, r5, r7
   10330:	adds	r3, r3, r3
   10334:	adc	r8, r8, r8
   10338:	adds	r4, r3, #1
   1033c:	adc	r5, r8, #0
   10340:	subs	r2, r2, #1
   10344:	beq	10364 <lell_pcapng_close@@Base+0x158>
   10348:	cmp	r5, r7
   1034c:	cmpeq	r4, r6
   10350:	bcs	10328 <lell_pcapng_close@@Base+0x11c>
   10354:	adds	r4, r4, r4
   10358:	adc	r5, r5, r5
   1035c:	subs	r2, r2, #1
   10360:	bne	10348 <lell_pcapng_close@@Base+0x13c>
   10364:	lsr	r3, r4, ip
   10368:	orr	r3, r3, r5, lsl fp
   1036c:	lsr	r2, r5, ip
   10370:	orr	r3, r3, r5, lsr sl
   10374:	adds	r0, r0, r4
   10378:	mov	r4, r3
   1037c:	lsl	r3, r2, ip
   10380:	orr	r3, r3, r4, lsl sl
   10384:	lsl	ip, r4, ip
   10388:	orr	r3, r3, r4, lsr fp
   1038c:	adc	r1, r1, r5
   10390:	subs	r0, r0, ip
   10394:	mov	r5, r2
   10398:	sbc	r1, r1, r3
   1039c:	cmp	lr, #0
   103a0:	strdne	r4, [lr]
   103a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

000103a8 <.fini>:
   103a8:	push	{r3, lr}
   103ac:	pop	{r3, pc}
