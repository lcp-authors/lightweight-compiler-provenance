
../repos/charybdis/modules/.libs/m_oper.so:     file format elf32-littlearm


Disassembly of section .init:

00000738 <_init>:
 738:	push	{r3, lr}
 73c:	bl	860 <call_weak_fn>
 740:	pop	{r3, pc}

Disassembly of section .plt:

00000744 <.plt>:
 744:	push	{lr}		; (str lr, [sp, #-4]!)
 748:	ldr	lr, [pc, #4]	; 754 <.plt+0x10>
 74c:	add	lr, pc, lr
 750:	ldr	pc, [lr, #8]!
 754:	.word	0x000118ac

00000758 <strcmp@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2220]!	; 0x8ac

00000764 <__cxa_finalize@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2212]!	; 0x8a4

00000770 <sendto_one@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2204]!	; 0x89c

0000077c <rb_strcasecmp@plt>:
 77c:	add	ip, pc, #0, 12
 780:	add	ip, ip, #69632	; 0x11000
 784:	ldr	pc, [ip, #2196]!	; 0x894

00000788 <privilegeset_get@plt>:
 788:	add	ip, pc, #0, 12
 78c:	add	ip, ip, #69632	; 0x11000
 790:	ldr	pc, [ip, #2188]!	; 0x88c

00000794 <rb_outofmemory@plt>:
 794:	add	ip, pc, #0, 12
 798:	add	ip, ip, #69632	; 0x11000
 79c:	ldr	pc, [ip, #2180]!	; 0x884

000007a0 <sendto_realops_snomask@plt>:
 7a0:	add	ip, pc, #0, 12
 7a4:	add	ip, ip, #69632	; 0x11000
 7a8:	ldr	pc, [ip, #2172]!	; 0x87c

000007ac <privilegeset_set_new@plt>:
 7ac:	add	ip, pc, #0, 12
 7b0:	add	ip, ip, #69632	; 0x11000
 7b4:	ldr	pc, [ip, #2164]!	; 0x874

000007b8 <strcpy@plt>:
 7b8:	add	ip, pc, #0, 12
 7bc:	add	ip, ip, #69632	; 0x11000
 7c0:	ldr	pc, [ip, #2156]!	; 0x86c

000007c4 <rb_crypt@plt>:
 7c4:	add	ip, pc, #0, 12
 7c8:	add	ip, ip, #69632	; 0x11000
 7cc:	ldr	pc, [ip, #2148]!	; 0x864

000007d0 <sendto_server@plt>:
 7d0:	add	ip, pc, #0, 12
 7d4:	add	ip, ip, #69632	; 0x11000
 7d8:	ldr	pc, [ip, #2140]!	; 0x85c

000007dc <malloc@plt>:
 7dc:	add	ip, pc, #0, 12
 7e0:	add	ip, ip, #69632	; 0x11000
 7e4:	ldr	pc, [ip, #2132]!	; 0x854

000007e8 <privilegeset_ref@plt>:
 7e8:	add	ip, pc, #0, 12
 7ec:	add	ip, ip, #69632	; 0x11000
 7f0:	ldr	pc, [ip, #2124]!	; 0x84c

000007f4 <__gmon_start__@plt>:
 7f4:	add	ip, pc, #0, 12
 7f8:	add	ip, ip, #69632	; 0x11000
 7fc:	ldr	pc, [ip, #2116]!	; 0x844

00000800 <send_oper_motd@plt>:
 800:	add	ip, pc, #0, 12
 804:	add	ip, ip, #69632	; 0x11000
 808:	ldr	pc, [ip, #2108]!	; 0x83c

0000080c <sendto_one_numeric@plt>:
 80c:	add	ip, pc, #0, 12
 810:	add	ip, ip, #69632	; 0x11000
 814:	ldr	pc, [ip, #2100]!	; 0x834

00000818 <strlen@plt>:
 818:	add	ip, pc, #0, 12
 81c:	add	ip, ip, #69632	; 0x11000
 820:	ldr	pc, [ip, #2092]!	; 0x82c

00000824 <ilog@plt>:
 824:	add	ip, pc, #0, 12
 828:	add	ip, ip, #69632	; 0x11000
 82c:	ldr	pc, [ip, #2084]!	; 0x824

00000830 <flood_endgrace@plt>:
 830:	add	ip, pc, #0, 12
 834:	add	ip, ip, #69632	; 0x11000
 838:	ldr	pc, [ip, #2076]!	; 0x81c

0000083c <find_oper_conf@plt>:
 83c:	add	ip, pc, #0, 12
 840:	add	ip, ip, #69632	; 0x11000
 844:	ldr	pc, [ip, #2068]!	; 0x814

00000848 <oper_up@plt>:
 848:	add	ip, pc, #0, 12
 84c:	add	ip, ip, #69632	; 0x11000
 850:	ldr	pc, [ip, #2060]!	; 0x80c

00000854 <privilegeset_unref@plt>:
 854:	add	ip, pc, #0, 12
 858:	add	ip, ip, #69632	; 0x11000
 85c:	ldr	pc, [ip, #2052]!	; 0x804

Disassembly of section .text:

00000860 <call_weak_fn>:
 860:	ldr	r3, [pc, #20]	; 87c <call_weak_fn+0x1c>
 864:	ldr	r2, [pc, #20]	; 880 <call_weak_fn+0x20>
 868:	add	r3, pc, r3
 86c:	ldr	r2, [r3, r2]
 870:	cmp	r2, #0
 874:	bxeq	lr
 878:	b	7f4 <__gmon_start__@plt>
 87c:	.word	0x00011790
 880:	.word	0x00000070

00000884 <deregister_tm_clones>:
 884:	ldr	r3, [pc, #52]	; 8c0 <deregister_tm_clones+0x3c>
 888:	ldr	r0, [pc, #52]	; 8c4 <deregister_tm_clones+0x40>
 88c:	add	r3, pc, r3
 890:	add	r0, pc, r0
 894:	add	r3, r3, #3
 898:	sub	r3, r3, r0
 89c:	cmp	r3, #6
 8a0:	ldr	r3, [pc, #32]	; 8c8 <deregister_tm_clones+0x44>
 8a4:	add	r3, pc, r3
 8a8:	bxls	lr
 8ac:	ldr	r2, [pc, #24]	; 8cc <deregister_tm_clones+0x48>
 8b0:	ldr	r3, [r3, r2]
 8b4:	cmp	r3, #0
 8b8:	bxeq	lr
 8bc:	bx	r3
 8c0:	.word	0x00011868
 8c4:	.word	0x00011864
 8c8:	.word	0x00011754
 8cc:	.word	0x00000068

000008d0 <register_tm_clones>:
 8d0:	ldr	r1, [pc, #56]	; 910 <register_tm_clones+0x40>
 8d4:	ldr	r0, [pc, #56]	; 914 <register_tm_clones+0x44>
 8d8:	add	r1, pc, r1
 8dc:	add	r0, pc, r0
 8e0:	sub	r1, r1, r0
 8e4:	ldr	r3, [pc, #44]	; 918 <register_tm_clones+0x48>
 8e8:	asr	r1, r1, #2
 8ec:	add	r3, pc, r3
 8f0:	add	r1, r1, r1, lsr #31
 8f4:	asrs	r1, r1, #1
 8f8:	bxeq	lr
 8fc:	ldr	r2, [pc, #24]	; 91c <register_tm_clones+0x4c>
 900:	ldr	r3, [r3, r2]
 904:	cmp	r3, #0
 908:	bxeq	lr
 90c:	bx	r3
 910:	.word	0x0001181c
 914:	.word	0x00011818
 918:	.word	0x0001170c
 91c:	.word	0x00000078

00000920 <__do_global_dtors_aux>:
 920:	ldr	r3, [pc, #76]	; 974 <__do_global_dtors_aux+0x54>
 924:	ldr	r2, [pc, #76]	; 978 <__do_global_dtors_aux+0x58>
 928:	add	r3, pc, r3
 92c:	add	r2, pc, r2
 930:	ldrb	r3, [r3]
 934:	cmp	r3, #0
 938:	bxne	lr
 93c:	ldr	r3, [pc, #56]	; 97c <__do_global_dtors_aux+0x5c>
 940:	push	{r4, lr}
 944:	ldr	r3, [r2, r3]
 948:	cmp	r3, #0
 94c:	beq	95c <__do_global_dtors_aux+0x3c>
 950:	ldr	r3, [pc, #40]	; 980 <__do_global_dtors_aux+0x60>
 954:	ldr	r0, [pc, r3]
 958:	bl	764 <__cxa_finalize@plt>
 95c:	bl	884 <deregister_tm_clones>
 960:	ldr	r3, [pc, #28]	; 984 <__do_global_dtors_aux+0x64>
 964:	mov	r2, #1
 968:	add	r3, pc, r3
 96c:	strb	r2, [r3]
 970:	pop	{r4, pc}
 974:	.word	0x000117cc
 978:	.word	0x000116cc
 97c:	.word	0x00000064
 980:	.word	0x00011728
 984:	.word	0x0001178c

00000988 <frame_dummy>:
 988:	ldr	r0, [pc, #56]	; 9c8 <frame_dummy+0x40>
 98c:	ldr	r3, [pc, #56]	; 9cc <frame_dummy+0x44>
 990:	add	r0, pc, r0
 994:	ldr	r2, [r0]
 998:	add	r3, pc, r3
 99c:	cmp	r2, #0
 9a0:	bne	9a8 <frame_dummy+0x20>
 9a4:	b	8d0 <register_tm_clones>
 9a8:	ldr	r2, [pc, #32]	; 9d0 <frame_dummy+0x48>
 9ac:	ldr	r3, [r3, r2]
 9b0:	cmp	r3, #0
 9b4:	beq	9a4 <frame_dummy+0x1c>
 9b8:	push	{r4, lr}
 9bc:	blx	r3
 9c0:	pop	{r4, lr}
 9c4:	b	8d0 <register_tm_clones>
 9c8:	.word	0x00011564
 9cc:	.word	0x00011660
 9d0:	.word	0x00000074

000009d4 <mc_oper>:
 9d4:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 9d8:	mov	r5, r2
 9dc:	ldr	r3, [pc, #256]	; ae4 <mc_oper+0x110>
 9e0:	ldr	r2, [pc, #256]	; ae8 <mc_oper+0x114>
 9e4:	add	r3, pc, r3
 9e8:	ldr	r4, [sp, #32]
 9ec:	ldr	r3, [r3, r2]
 9f0:	mov	r0, r1
 9f4:	ldr	r1, [r4, #8]
 9f8:	ldr	r2, [r3]
 9fc:	ldrb	r3, [r5, #396]	; 0x18c
 a00:	str	r1, [sp, #12]
 a04:	ldr	r1, [r4, #4]
 a08:	cmp	r3, #0
 a0c:	addne	r3, r5, #396	; 0x18c
 a10:	addeq	r3, r5, #88	; 0x58
 a14:	str	r3, [sp, #4]
 a18:	ldr	r3, [pc, #204]	; aec <mc_oper+0x118>
 a1c:	str	r1, [sp, #8]
 a20:	add	r3, pc, r3
 a24:	str	r3, [sp]
 a28:	mov	r3, #0
 a2c:	mov	r1, r3
 a30:	bl	7d0 <sendto_server@plt>
 a34:	ldr	r0, [r4, #8]
 a38:	bl	788 <privilegeset_get@plt>
 a3c:	subs	r6, r0, #0
 a40:	bne	a88 <mc_oper+0xb4>
 a44:	ldr	r3, [r4, #8]
 a48:	ldr	r2, [pc, #160]	; af0 <mc_oper+0x11c>
 a4c:	mov	r1, #256	; 0x100
 a50:	mov	r0, r1
 a54:	str	r3, [sp]
 a58:	add	r2, pc, r2
 a5c:	add	r3, r5, #88	; 0x58
 a60:	bl	7a0 <sendto_realops_snomask@plt>
 a64:	ldr	r1, [pc, #136]	; af4 <mc_oper+0x120>
 a68:	mov	r2, r6
 a6c:	add	r1, pc, r1
 a70:	ldr	r0, [r4, #8]
 a74:	bl	7ac <privilegeset_set_new@plt>
 a78:	ldr	r3, [r0]
 a7c:	mov	r6, r0
 a80:	orr	r3, r3, #-2147483648	; 0x80000000
 a84:	str	r3, [r0]
 a88:	mov	r0, r6
 a8c:	bl	7e8 <privilegeset_ref@plt>
 a90:	ldr	r3, [r5, #24]
 a94:	mov	r6, r0
 a98:	ldr	r0, [r3, #36]	; 0x24
 a9c:	cmp	r0, #0
 aa0:	beq	aa8 <mc_oper+0xd4>
 aa4:	bl	854 <privilegeset_unref@plt>
 aa8:	ldr	r5, [r5, #24]
 aac:	ldr	r4, [r4, #4]
 ab0:	str	r6, [r5, #36]	; 0x24
 ab4:	mov	r0, r4
 ab8:	bl	818 <strlen@plt>
 abc:	add	r0, r0, #1
 ac0:	bl	7dc <malloc@plt>
 ac4:	subs	r6, r0, #0
 ac8:	bne	ad0 <mc_oper+0xfc>
 acc:	bl	794 <rb_outofmemory@plt>
 ad0:	mov	r1, r4
 ad4:	bl	7b8 <strcpy@plt>
 ad8:	str	r6, [r5, #32]
 adc:	add	sp, sp, #16
 ae0:	pop	{r4, r5, r6, pc}
 ae4:	.word	0x00011614
 ae8:	.word	0x0000006c
 aec:	.word	0x0000047c
 af0:	.word	0x00000453
 af4:	.word	0x00000554

00000af8 <m_oper>:
 af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 afc:	mov	r4, r2
 b00:	ldr	r2, [r2, #56]	; 0x38
 b04:	sub	sp, sp, #28
 b08:	ldr	sl, [pc, #776]	; e18 <m_oper+0x320>
 b0c:	tst	r2, #4096	; 0x1000
 b10:	add	sl, pc, sl
 b14:	ldr	r3, [sp, #64]	; 0x40
 b18:	add	r5, r4, #88	; 0x58
 b1c:	beq	b50 <m_oper+0x58>
 b20:	ldr	r3, [pc, #756]	; e1c <m_oper+0x324>
 b24:	ldr	r1, [pc, #756]	; e20 <m_oper+0x328>
 b28:	mov	r0, r4
 b2c:	ldr	r2, [sl, r3]
 b30:	add	r1, pc, r1
 b34:	mov	r3, r5
 b38:	add	r2, r2, #88	; 0x58
 b3c:	bl	770 <sendto_one@plt>
 b40:	mov	r0, r4
 b44:	add	sp, sp, #28
 b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b4c:	b	800 <send_oper_motd@plt>
 b50:	ldr	fp, [r3, #4]
 b54:	ldr	r9, [r3, #8]
 b58:	ldrd	r2, [r4, #64]	; 0x40
 b5c:	mov	r3, #0
 b60:	and	r2, r2, #256	; 0x100
 b64:	orrs	r3, r2, r3
 b68:	bne	b74 <m_oper+0x7c>
 b6c:	mov	r0, r4
 b70:	bl	830 <flood_endgrace@plt>
 b74:	add	r8, r4, #288	; 0x120
 b78:	add	r6, r4, #152	; 0x98
 b7c:	add	r8, r8, #3
 b80:	mov	r3, fp
 b84:	mov	r2, r8
 b88:	add	r1, r4, #227	; 0xe3
 b8c:	mov	r0, r6
 b90:	bl	83c <find_oper_conf@plt>
 b94:	add	r7, r4, #163	; 0xa3
 b98:	subs	r3, r0, #0
 b9c:	bne	bfc <m_oper+0x104>
 ba0:	ldr	r2, [pc, #636]	; e24 <m_oper+0x32c>
 ba4:	ldr	r1, [pc, #636]	; e28 <m_oper+0x330>
 ba8:	add	r2, pc, r2
 bac:	mov	r0, r4
 bb0:	bl	80c <sendto_one_numeric@plt>
 bb4:	ldr	r1, [pc, #624]	; e2c <m_oper+0x334>
 bb8:	mov	r3, r5
 bbc:	stm	sp, {r6, r7, r8}
 bc0:	mov	r2, fp
 bc4:	add	r1, pc, r1
 bc8:	mov	r0, #4
 bcc:	bl	824 <ilog@plt>
 bd0:	ldr	r3, [pc, #600]	; e30 <m_oper+0x338>
 bd4:	ldr	r3, [sl, r3]
 bd8:	ldr	r3, [r3, #84]	; 0x54
 bdc:	cmp	r3, #0
 be0:	beq	c78 <m_oper+0x180>
 be4:	ldr	r2, [pc, #584]	; e34 <m_oper+0x33c>
 be8:	mov	r3, r5
 bec:	add	r2, pc, r2
 bf0:	stm	sp, {r6, r7}
 bf4:	mov	r1, #256	; 0x100
 bf8:	b	c70 <m_oper+0x178>
 bfc:	ldr	r2, [r3, #20]
 c00:	tst	r2, #524288	; 0x80000
 c04:	beq	c80 <m_oper+0x188>
 c08:	ldr	r2, [r4, #56]	; 0x38
 c0c:	ands	r2, r2, #16384	; 0x4000
 c10:	str	r2, [sp, #20]
 c14:	bne	c80 <m_oper+0x188>
 c18:	ldr	r2, [pc, #536]	; e38 <m_oper+0x340>
 c1c:	ldr	r1, [pc, #516]	; e28 <m_oper+0x330>
 c20:	add	r2, pc, r2
 c24:	mov	r0, r4
 c28:	bl	80c <sendto_one_numeric@plt>
 c2c:	ldr	r1, [pc, #520]	; e3c <m_oper+0x344>
 c30:	mov	r3, r5
 c34:	stm	sp, {r6, r7, r8}
 c38:	mov	r2, fp
 c3c:	add	r1, pc, r1
 c40:	mov	r0, #4
 c44:	bl	824 <ilog@plt>
 c48:	ldr	r3, [pc, #480]	; e30 <m_oper+0x338>
 c4c:	ldr	r3, [sl, r3]
 c50:	ldr	r3, [r3, #84]	; 0x54
 c54:	cmp	r3, #0
 c58:	beq	c78 <m_oper+0x180>
 c5c:	ldr	r2, [pc, #476]	; e40 <m_oper+0x348>
 c60:	mov	r3, r5
 c64:	add	r2, pc, r2
 c68:	stm	sp, {r6, r7}
 c6c:	mov	r1, #0
 c70:	mov	r0, #256	; 0x100
 c74:	bl	7a0 <sendto_realops_snomask@plt>
 c78:	add	sp, sp, #28
 c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c80:	ldr	r1, [r3, #16]
 c84:	cmp	r1, #0
 c88:	beq	d04 <m_oper+0x20c>
 c8c:	ldr	r0, [r4, #444]	; 0x1bc
 c90:	cmp	r0, #0
 c94:	bne	cf0 <m_oper+0x1f8>
 c98:	ldr	r2, [pc, #420]	; e44 <m_oper+0x34c>
 c9c:	ldr	r1, [pc, #388]	; e28 <m_oper+0x330>
 ca0:	add	r2, pc, r2
 ca4:	mov	r0, r4
 ca8:	bl	80c <sendto_one_numeric@plt>
 cac:	ldr	r1, [pc, #404]	; e48 <m_oper+0x350>
 cb0:	mov	r3, r5
 cb4:	stm	sp, {r6, r7, r8}
 cb8:	mov	r2, fp
 cbc:	add	r1, pc, r1
 cc0:	mov	r0, #4
 cc4:	bl	824 <ilog@plt>
 cc8:	ldr	r3, [pc, #352]	; e30 <m_oper+0x338>
 ccc:	ldr	r3, [sl, r3]
 cd0:	ldr	r3, [r3, #84]	; 0x54
 cd4:	cmp	r3, #0
 cd8:	beq	c78 <m_oper+0x180>
 cdc:	ldr	r2, [pc, #360]	; e4c <m_oper+0x354>
 ce0:	stm	sp, {r6, r7}
 ce4:	mov	r3, r5
 ce8:	add	r2, pc, r2
 cec:	b	c6c <m_oper+0x174>
 cf0:	str	r3, [sp, #20]
 cf4:	bl	77c <rb_strcasecmp@plt>
 cf8:	cmp	r0, #0
 cfc:	ldreq	r3, [sp, #20]
 d00:	bne	c98 <m_oper+0x1a0>
 d04:	ldr	r1, [r3, #12]
 d08:	cmp	r1, #0
 d0c:	beq	d58 <m_oper+0x260>
 d10:	ldrb	r2, [r1]
 d14:	cmp	r2, #0
 d18:	beq	d58 <m_oper+0x260>
 d1c:	ldr	r2, [r3, #20]
 d20:	tst	r2, #1
 d24:	beq	d50 <m_oper+0x258>
 d28:	cmp	r9, #0
 d2c:	beq	dbc <m_oper+0x2c4>
 d30:	ldrb	r2, [r9]
 d34:	cmp	r2, #0
 d38:	beq	e0c <m_oper+0x314>
 d3c:	mov	r0, r9
 d40:	str	r3, [sp, #20]
 d44:	bl	7c4 <rb_crypt@plt>
 d48:	ldr	r3, [sp, #20]
 d4c:	mov	r9, r0
 d50:	cmp	r9, #0
 d54:	bne	dc4 <m_oper+0x2cc>
 d58:	ldr	r3, [pc, #188]	; e1c <m_oper+0x324>
 d5c:	ldr	r1, [pc, #236]	; e50 <m_oper+0x358>
 d60:	mov	r0, r4
 d64:	ldr	r2, [sl, r3]
 d68:	add	r1, pc, r1
 d6c:	mov	r3, r5
 d70:	add	r2, r2, #88	; 0x58
 d74:	bl	770 <sendto_one@plt>
 d78:	ldr	r1, [pc, #212]	; e54 <m_oper+0x35c>
 d7c:	mov	r3, r5
 d80:	stm	sp, {r6, r7, r8}
 d84:	mov	r2, fp
 d88:	add	r1, pc, r1
 d8c:	mov	r0, #4
 d90:	bl	824 <ilog@plt>
 d94:	ldr	r3, [pc, #148]	; e30 <m_oper+0x338>
 d98:	ldr	r3, [sl, r3]
 d9c:	ldr	r3, [r3, #84]	; 0x54
 da0:	cmp	r3, #0
 da4:	beq	c78 <m_oper+0x180>
 da8:	ldr	r2, [pc, #168]	; e58 <m_oper+0x360>
 dac:	stm	sp, {r6, r7}
 db0:	mov	r3, r5
 db4:	add	r2, pc, r2
 db8:	b	bf4 <m_oper+0xfc>
 dbc:	ldr	r9, [pc, #152]	; e5c <m_oper+0x364>
 dc0:	add	r9, pc, r9
 dc4:	ldr	r1, [r3, #12]
 dc8:	mov	r0, r9
 dcc:	str	r3, [sp, #20]
 dd0:	bl	758 <strcmp@plt>
 dd4:	ldr	r3, [sp, #20]
 dd8:	cmp	r0, #0
 ddc:	bne	d58 <m_oper+0x260>
 de0:	mov	r1, r3
 de4:	mov	r0, r4
 de8:	bl	848 <oper_up@plt>
 dec:	ldr	r1, [pc, #108]	; e60 <m_oper+0x368>
 df0:	stm	sp, {r6, r7, r8}
 df4:	mov	r3, r5
 df8:	mov	r2, fp
 dfc:	add	r1, pc, r1
 e00:	mov	r0, #3
 e04:	bl	824 <ilog@plt>
 e08:	b	c78 <m_oper+0x180>
 e0c:	ldr	r9, [pc, #80]	; e64 <m_oper+0x36c>
 e10:	add	r9, pc, r9
 e14:	b	dc4 <m_oper+0x2cc>
 e18:	.word	0x000114e8
 e1c:	.word	0x0000007c
 e20:	.word	0x000003a8
 e24:	.word	0x000003bc
 e28:	.word	0x000001eb
 e2c:	.word	0x000003d9
 e30:	.word	0x00000080
 e34:	.word	0x000003d5
 e38:	.word	0x00000344
 e3c:	.word	0x000003b7
 e40:	.word	0x000003c7
 e44:	.word	0x000002c4
 e48:	.word	0x000003a3
 e4c:	.word	0x000003c6
 e50:	.word	0x000003cd
 e54:	.word	0x00000215
 e58:	.word	0x00000346
 e5c:	.word	0x00000200
 e60:	.word	0x00000320
 e64:	.word	0x000001b0

Disassembly of section .fini:

00000e68 <_fini>:
 e68:	push	{r3, lr}
 e6c:	pop	{r3, pc}
