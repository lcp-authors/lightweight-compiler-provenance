
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001098c <.init>:
   1098c:	push	{r3, lr}
   10990:	bl	10ac0 <_start@@Base+0x3c>
   10994:	pop	{r3, pc}

Disassembly of section .plt:

00010998 <printf@plt-0x14>:
   10998:	push	{lr}		; (str lr, [sp, #-4]!)
   1099c:	ldr	lr, [pc, #4]	; 109a8 <printf@plt-0x4>
   109a0:	add	lr, pc, lr
   109a4:	ldr	pc, [lr, #8]!
   109a8:	andeq	r2, r1, r8, asr r6

000109ac <printf@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #73728	; 0x12000
   109b4:	ldr	pc, [ip, #1624]!	; 0x658

000109b8 <fopen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #73728	; 0x12000
   109c0:	ldr	pc, [ip, #1616]!	; 0x650

000109c4 <free@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #73728	; 0x12000
   109cc:	ldr	pc, [ip, #1608]!	; 0x648

000109d0 <ftell@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #73728	; 0x12000
   109d8:	ldr	pc, [ip, #1600]!	; 0x640

000109dc <rewind@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #73728	; 0x12000
   109e4:	ldr	pc, [ip, #1592]!	; 0x638

000109e8 <fwrite@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #73728	; 0x12000
   109f0:	ldr	pc, [ip, #1584]!	; 0x630

000109f4 <puts@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #73728	; 0x12000
   109fc:	ldr	pc, [ip, #1576]!	; 0x628

00010a00 <malloc@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #73728	; 0x12000
   10a08:	ldr	pc, [ip, #1568]!	; 0x620

00010a0c <__libc_start_main@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #73728	; 0x12000
   10a14:	ldr	pc, [ip, #1560]!	; 0x618

00010a18 <__gmon_start__@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #73728	; 0x12000
   10a20:	ldr	pc, [ip, #1552]!	; 0x610

00010a24 <exit@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #73728	; 0x12000
   10a2c:	ldr	pc, [ip, #1544]!	; 0x608

00010a30 <fprintf@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #73728	; 0x12000
   10a38:	ldr	pc, [ip, #1536]!	; 0x600

00010a3c <putchar@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #73728	; 0x12000
   10a44:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a48 <fclose@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #73728	; 0x12000
   10a50:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a54 <fread_unlocked@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #73728	; 0x12000
   10a5c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a60 <fseek@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #73728	; 0x12000
   10a68:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a6c <abort@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #73728	; 0x12000
   10a74:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a78 <__assert_fail@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #73728	; 0x12000
   10a80:	ldr	pc, [ip, #1488]!	; 0x5d0

Disassembly of section .text:

00010a84 <_start@@Base>:
   10a84:	mov	fp, #0
   10a88:	mov	lr, #0
   10a8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a90:	mov	r2, sp
   10a94:	push	{r2}		; (str r2, [sp, #-4]!)
   10a98:	push	{r0}		; (str r0, [sp, #-4]!)
   10a9c:	ldr	ip, [pc, #16]	; 10ab4 <_start@@Base+0x30>
   10aa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa4:	ldr	r0, [pc, #12]	; 10ab8 <_start@@Base+0x34>
   10aa8:	ldr	r3, [pc, #12]	; 10abc <_start@@Base+0x38>
   10aac:	bl	10a0c <__libc_start_main@plt>
   10ab0:	bl	10a6c <abort@plt>
   10ab4:	andeq	r1, r1, ip, asr #19
   10ab8:	strdeq	r1, [r1], -ip
   10abc:	andeq	r1, r1, ip, ror #18
   10ac0:	ldr	r3, [pc, #20]	; 10adc <_start@@Base+0x58>
   10ac4:	ldr	r2, [pc, #20]	; 10ae0 <_start@@Base+0x5c>
   10ac8:	add	r3, pc, r3
   10acc:	ldr	r2, [r3, r2]
   10ad0:	cmp	r2, #0
   10ad4:	bxeq	lr
   10ad8:	b	10a18 <__gmon_start__@plt>
   10adc:	andeq	r2, r1, r0, lsr r5
   10ae0:	andeq	r0, r0, r4, asr r0
   10ae4:	ldr	r0, [pc, #24]	; 10b04 <_start@@Base+0x80>
   10ae8:	ldr	r3, [pc, #24]	; 10b08 <_start@@Base+0x84>
   10aec:	cmp	r3, r0
   10af0:	bxeq	lr
   10af4:	ldr	r3, [pc, #16]	; 10b0c <_start@@Base+0x88>
   10af8:	cmp	r3, #0
   10afc:	bxeq	lr
   10b00:	bx	r3
   10b04:	andeq	r3, r2, r0, rrx
   10b08:	andeq	r3, r2, r0, rrx
   10b0c:	andeq	r0, r0, r0
   10b10:	ldr	r0, [pc, #36]	; 10b3c <_start@@Base+0xb8>
   10b14:	ldr	r1, [pc, #36]	; 10b40 <_start@@Base+0xbc>
   10b18:	sub	r1, r1, r0
   10b1c:	asr	r1, r1, #2
   10b20:	add	r1, r1, r1, lsr #31
   10b24:	asrs	r1, r1, #1
   10b28:	bxeq	lr
   10b2c:	ldr	r3, [pc, #16]	; 10b44 <_start@@Base+0xc0>
   10b30:	cmp	r3, #0
   10b34:	bxeq	lr
   10b38:	bx	r3
   10b3c:	andeq	r3, r2, r0, rrx
   10b40:	andeq	r3, r2, r0, rrx
   10b44:	andeq	r0, r0, r0
   10b48:	push	{r4, lr}
   10b4c:	ldr	r4, [pc, #24]	; 10b6c <_start@@Base+0xe8>
   10b50:	ldrb	r3, [r4]
   10b54:	cmp	r3, #0
   10b58:	popne	{r4, pc}
   10b5c:	bl	10ae4 <_start@@Base+0x60>
   10b60:	mov	r3, #1
   10b64:	strb	r3, [r4]
   10b68:	pop	{r4, pc}
   10b6c:	andeq	r3, r2, r4, rrx
   10b70:	b	10b10 <_start@@Base+0x8c>

00010b74 <print_type@@Base>:
   10b74:	push	{r4, sl, fp, lr}
   10b78:	add	fp, sp, #8
   10b7c:	mov	r4, r0
   10b80:	mov	r0, #123	; 0x7b
   10b84:	bl	10a3c <putchar@plt>
   10b88:	cmp	r4, #0
   10b8c:	beq	10cec <print_type@@Base+0x178>
   10b90:	ldr	r1, [r4]
   10b94:	mov	r0, r4
   10b98:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10b9c:	cmp	r1, #6
   10ba0:	bcc	10ce0 <print_type@@Base+0x16c>
   10ba4:	ldrh	r1, [r0, #4]
   10ba8:	cmp	r1, #0
   10bac:	beq	10bd0 <print_type@@Base+0x5c>
   10bb0:	add	r0, r4, r1
   10bb4:	ldrsb	r0, [r0]
   10bb8:	cmp	r0, #16
   10bbc:	bhi	10bd8 <print_type@@Base+0x64>
   10bc0:	movw	r1, #8784	; 0x2250
   10bc4:	movt	r1, #1
   10bc8:	ldr	r1, [r1, r0, lsl #2]
   10bcc:	b	10be0 <print_type@@Base+0x6c>
   10bd0:	mov	r1, #1
   10bd4:	b	10bf8 <print_type@@Base+0x84>
   10bd8:	movw	r1, #7247	; 0x1c4f
   10bdc:	movt	r1, #1
   10be0:	movw	r0, #6628	; 0x19e4
   10be4:	movt	r0, #1
   10be8:	bl	109ac <printf@plt>
   10bec:	ldr	r0, [r4]
   10bf0:	mov	r1, #0
   10bf4:	sub	r0, r4, r0
   10bf8:	ldrh	r2, [r0]
   10bfc:	cmp	r2, #8
   10c00:	bcc	10ce0 <print_type@@Base+0x16c>
   10c04:	ldrh	r2, [r0, #6]
   10c08:	cmp	r2, #0
   10c0c:	beq	10c88 <print_type@@Base+0x114>
   10c10:	cmp	r1, #0
   10c14:	bne	10c28 <print_type@@Base+0xb4>
   10c18:	mov	r0, #44	; 0x2c
   10c1c:	bl	10a3c <putchar@plt>
   10c20:	ldr	r0, [r4]
   10c24:	sub	r0, r4, r0
   10c28:	ldrh	r2, [r0]
   10c2c:	movw	r1, #7627	; 0x1dcb
   10c30:	movt	r1, #1
   10c34:	cmp	r2, #6
   10c38:	bcc	10c70 <print_type@@Base+0xfc>
   10c3c:	ldrh	r0, [r0, #4]
   10c40:	cmp	r0, #0
   10c44:	beq	10c70 <print_type@@Base+0xfc>
   10c48:	add	r0, r4, r0
   10c4c:	ldrsb	r0, [r0]
   10c50:	cmp	r0, #16
   10c54:	bhi	10c68 <print_type@@Base+0xf4>
   10c58:	movw	r1, #8784	; 0x2250
   10c5c:	movt	r1, #1
   10c60:	ldr	r1, [r1, r0, lsl #2]
   10c64:	b	10c70 <print_type@@Base+0xfc>
   10c68:	movw	r1, #7247	; 0x1c4f
   10c6c:	movt	r1, #1
   10c70:	movw	r0, #6645	; 0x19f5
   10c74:	movt	r0, #1
   10c78:	bl	109ac <printf@plt>
   10c7c:	ldr	r0, [r4]
   10c80:	mov	r1, #0
   10c84:	sub	r0, r4, r0
   10c88:	ldrh	r2, [r0]
   10c8c:	cmp	r2, #10
   10c90:	bcc	10ce0 <print_type@@Base+0x16c>
   10c94:	ldrh	r2, [r0, #8]
   10c98:	cmp	r2, #0
   10c9c:	beq	10ce0 <print_type@@Base+0x16c>
   10ca0:	cmp	r1, #0
   10ca4:	bne	10cb8 <print_type@@Base+0x144>
   10ca8:	mov	r0, #44	; 0x2c
   10cac:	bl	10a3c <putchar@plt>
   10cb0:	ldr	r0, [r4]
   10cb4:	sub	r0, r4, r0
   10cb8:	ldrh	r2, [r0]
   10cbc:	mvn	r1, #0
   10cc0:	cmp	r2, #10
   10cc4:	bcc	10cd4 <print_type@@Base+0x160>
   10cc8:	ldrh	r0, [r0, #8]
   10ccc:	cmp	r0, #0
   10cd0:	ldrne	r1, [r4, r0]
   10cd4:	movw	r0, #6660	; 0x1a04
   10cd8:	movt	r0, #1
   10cdc:	bl	109ac <printf@plt>
   10ce0:	mov	r0, #125	; 0x7d
   10ce4:	pop	{r4, sl, fp, lr}
   10ce8:	b	10a3c <putchar@plt>
   10cec:	movw	r0, #7429	; 0x1d05
   10cf0:	movw	r1, #7467	; 0x1d2b
   10cf4:	movw	r3, #7561	; 0x1d89
   10cf8:	mov	r2, #147	; 0x93
   10cfc:	movt	r0, #1
   10d00:	movt	r1, #1
   10d04:	movt	r3, #1
   10d08:	bl	10a78 <__assert_fail@plt>

00010d0c <print_object@@Base>:
   10d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d10:	add	fp, sp, #28
   10d14:	sub	sp, sp, #4
   10d18:	cmp	r0, #0
   10d1c:	beq	11134 <print_object@@Base+0x428>
   10d20:	ldr	r1, [r0]
   10d24:	mov	r4, r0
   10d28:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10d2c:	cmp	r1, #8
   10d30:	bcc	11128 <print_object@@Base+0x41c>
   10d34:	ldrh	r5, [r0, #6]
   10d38:	cmp	r5, #0
   10d3c:	beq	11128 <print_object@@Base+0x41c>
   10d40:	ldrh	r0, [r0, #4]
   10d44:	cmp	r0, #0
   10d48:	beq	11154 <print_object@@Base+0x448>
   10d4c:	mov	r1, r4
   10d50:	ldr	r6, [r1, r5]!
   10d54:	add	r1, r1, r6
   10d58:	add	r8, r1, #4
   10d5c:	mov	r1, r4
   10d60:	ldr	r0, [r1, r0]!
   10d64:	add	r0, r1, r0
   10d68:	add	r1, r0, #4
   10d6c:	movw	r0, #6671	; 0x1a0f
   10d70:	movt	r0, #1
   10d74:	bl	109ac <printf@plt>
   10d78:	movw	r0, #6684	; 0x1a1c
   10d7c:	movt	r0, #1
   10d80:	bl	109ac <printf@plt>
   10d84:	ldr	r0, [r8, #-4]
   10d88:	cmp	r0, #0
   10d8c:	beq	10ffc <print_object@@Base+0x2f0>
   10d90:	add	r1, r6, r5
   10d94:	movw	r5, #6696	; 0x1a28
   10d98:	mov	sl, #0
   10d9c:	add	r1, r4, r1
   10da0:	movt	r5, #1
   10da4:	add	r9, r1, #8
   10da8:	cmp	sl, #0
   10dac:	beq	10dbc <print_object@@Base+0xb0>
   10db0:	mov	r0, #44	; 0x2c
   10db4:	bl	10a3c <putchar@plt>
   10db8:	ldr	r0, [r8, #-4]
   10dbc:	cmp	r0, sl
   10dc0:	bls	110e8 <print_object@@Base+0x3dc>
   10dc4:	ldr	r7, [r9, #-4]
   10dc8:	add	r6, r9, r7
   10dcc:	cmp	r6, #4
   10dd0:	beq	11108 <print_object@@Base+0x3fc>
   10dd4:	ldr	r0, [r6, #-4]
   10dd8:	sub	r0, r7, r0
   10ddc:	add	r0, r9, r0
   10de0:	ldrh	r1, [r0, #-4]
   10de4:	cmp	r1, #6
   10de8:	bcc	110bc <print_object@@Base+0x3b0>
   10dec:	ldrh	r0, [r0]
   10df0:	cmp	r0, #0
   10df4:	beq	110bc <print_object@@Base+0x3b0>
   10df8:	add	r1, r7, r0
   10dfc:	add	r1, r9, r1
   10e00:	ldr	r1, [r1, #-4]
   10e04:	add	r1, r1, r7
   10e08:	add	r0, r1, r0
   10e0c:	add	r1, r9, r0
   10e10:	mov	r0, r5
   10e14:	bl	109ac <printf@plt>
   10e18:	ldr	r0, [r6, #-4]
   10e1c:	sub	r0, r7, r0
   10e20:	add	r0, r9, r0
   10e24:	ldrh	r1, [r0, #-4]
   10e28:	cmp	r1, #8
   10e2c:	bcc	110c8 <print_object@@Base+0x3bc>
   10e30:	ldrh	r0, [r0, #2]
   10e34:	cmp	r0, #0
   10e38:	beq	110c8 <print_object@@Base+0x3bc>
   10e3c:	add	r1, r7, r0
   10e40:	add	r1, r9, r1
   10e44:	ldr	r1, [r1, #-4]
   10e48:	add	r1, r1, r7
   10e4c:	add	r0, r1, r0
   10e50:	add	r0, r9, r0
   10e54:	sub	r0, r0, #4
   10e58:	bl	10b74 <print_type@@Base>
   10e5c:	ldr	r0, [r6, #-4]
   10e60:	sub	r1, r7, r0
   10e64:	add	r1, r9, r1
   10e68:	ldrh	r2, [r1, #-4]
   10e6c:	cmp	r2, #10
   10e70:	bcc	10fe0 <print_object@@Base+0x2d4>
   10e74:	ldrh	r1, [r1, #4]
   10e78:	cmp	r1, #0
   10e7c:	beq	10eac <print_object@@Base+0x1a0>
   10e80:	add	r0, r7, r1
   10e84:	add	r0, r9, r0
   10e88:	ldrh	r1, [r0, #-4]
   10e8c:	movw	r0, #6717	; 0x1a3d
   10e90:	movt	r0, #1
   10e94:	bl	109ac <printf@plt>
   10e98:	ldr	r0, [r6, #-4]
   10e9c:	sub	r0, r7, r0
   10ea0:	add	r0, r9, r0
   10ea4:	sub	r0, r0, #4
   10ea8:	b	10eb8 <print_object@@Base+0x1ac>
   10eac:	add	r1, r8, sl, lsl #2
   10eb0:	add	r1, r1, r7
   10eb4:	sub	r0, r1, r0
   10eb8:	ldrh	r1, [r0]
   10ebc:	cmp	r1, #14
   10ec0:	bcc	10fe0 <print_object@@Base+0x2d4>
   10ec4:	ldrh	r1, [r0, #12]
   10ec8:	cmp	r1, #0
   10ecc:	beq	10efc <print_object@@Base+0x1f0>
   10ed0:	add	r0, r7, r1
   10ed4:	mov	r1, r9
   10ed8:	ldr	r3, [r1, r0]!
   10edc:	movw	r0, #6727	; 0x1a47
   10ee0:	movt	r0, #1
   10ee4:	ldr	r2, [r1, #-4]
   10ee8:	bl	109ac <printf@plt>
   10eec:	ldr	r0, [r6, #-4]
   10ef0:	sub	r0, r7, r0
   10ef4:	add	r0, r9, r0
   10ef8:	sub	r0, r0, #4
   10efc:	ldrh	r1, [r0]
   10f00:	cmp	r1, #16
   10f04:	bcc	10fe0 <print_object@@Base+0x2d4>
   10f08:	ldrh	r1, [r0, #14]
   10f0c:	cmp	r1, #0
   10f10:	beq	10f40 <print_object@@Base+0x234>
   10f14:	add	r0, r7, r1
   10f18:	add	r0, r9, r0
   10f1c:	vldr	d16, [r0, #-4]
   10f20:	movw	r0, #6751	; 0x1a5f
   10f24:	movt	r0, #1
   10f28:	vmov	r2, r3, d16
   10f2c:	bl	109ac <printf@plt>
   10f30:	ldr	r0, [r6, #-4]
   10f34:	sub	r0, r7, r0
   10f38:	add	r0, r9, r0
   10f3c:	sub	r0, r0, #4
   10f40:	ldrh	r1, [r0]
   10f44:	cmp	r1, #20
   10f48:	bcc	10fe0 <print_object@@Base+0x2d4>
   10f4c:	ldrh	r1, [r0, #18]
   10f50:	cmp	r1, #0
   10f54:	beq	10f98 <print_object@@Base+0x28c>
   10f58:	add	r0, r7, r1
   10f5c:	movw	r1, #6789	; 0x1a85
   10f60:	add	r0, r9, r0
   10f64:	movt	r1, #1
   10f68:	ldrb	r0, [r0, #-4]
   10f6c:	cmp	r0, #0
   10f70:	movw	r0, #6794	; 0x1a8a
   10f74:	movt	r0, #1
   10f78:	moveq	r1, r0
   10f7c:	movw	r0, #6774	; 0x1a76
   10f80:	movt	r0, #1
   10f84:	bl	109ac <printf@plt>
   10f88:	ldr	r0, [r6, #-4]
   10f8c:	sub	r0, r7, r0
   10f90:	add	r0, r9, r0
   10f94:	sub	r0, r0, #4
   10f98:	ldrh	r1, [r0]
   10f9c:	cmp	r1, #22
   10fa0:	bcc	10fe0 <print_object@@Base+0x2d4>
   10fa4:	ldrh	r0, [r0, #20]
   10fa8:	cmp	r0, #0
   10fac:	beq	10fe0 <print_object@@Base+0x2d4>
   10fb0:	add	r0, r7, r0
   10fb4:	movw	r1, #6789	; 0x1a85
   10fb8:	add	r0, r9, r0
   10fbc:	movt	r1, #1
   10fc0:	ldrb	r0, [r0, #-4]
   10fc4:	cmp	r0, #0
   10fc8:	movw	r0, #6794	; 0x1a8a
   10fcc:	movt	r0, #1
   10fd0:	moveq	r1, r0
   10fd4:	movw	r0, #6800	; 0x1a90
   10fd8:	movt	r0, #1
   10fdc:	bl	109ac <printf@plt>
   10fe0:	mov	r0, #125	; 0x7d
   10fe4:	bl	10a3c <putchar@plt>
   10fe8:	ldr	r0, [r8, #-4]
   10fec:	add	sl, sl, #1
   10ff0:	add	r9, r9, #4
   10ff4:	cmp	sl, r0
   10ff8:	bcc	10da8 <print_object@@Base+0x9c>
   10ffc:	mov	r0, #93	; 0x5d
   11000:	bl	10a3c <putchar@plt>
   11004:	ldr	r1, [r4]
   11008:	mov	r0, r4
   1100c:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11010:	cmp	r1, #10
   11014:	bcc	110ac <print_object@@Base+0x3a0>
   11018:	ldrh	r1, [r0, #8]
   1101c:	cmp	r1, #0
   11020:	beq	11054 <print_object@@Base+0x348>
   11024:	ldrb	r0, [r4, r1]
   11028:	movw	r2, #6794	; 0x1a8a
   1102c:	movw	r1, #6789	; 0x1a85
   11030:	movt	r2, #1
   11034:	movt	r1, #1
   11038:	cmp	r0, #0
   1103c:	movw	r0, #6810	; 0x1a9a
   11040:	moveq	r1, r2
   11044:	movt	r0, #1
   11048:	bl	109ac <printf@plt>
   1104c:	ldr	r0, [r4]
   11050:	sub	r0, r4, r0
   11054:	ldrh	r1, [r0]
   11058:	cmp	r1, #12
   1105c:	bcc	110ac <print_object@@Base+0x3a0>
   11060:	ldrh	r1, [r0, #10]
   11064:	cmp	r1, #0
   11068:	beq	11084 <print_object@@Base+0x378>
   1106c:	ldr	r1, [r4, r1]
   11070:	movw	r0, #6826	; 0x1aaa
   11074:	movt	r0, #1
   11078:	bl	109ac <printf@plt>
   1107c:	ldr	r0, [r4]
   11080:	sub	r0, r4, r0
   11084:	ldrh	r1, [r0]
   11088:	cmp	r1, #14
   1108c:	bcc	110ac <print_object@@Base+0x3a0>
   11090:	ldrh	r0, [r0, #12]
   11094:	cmp	r0, #0
   11098:	beq	110ac <print_object@@Base+0x3a0>
   1109c:	ldr	r1, [r4, r0]
   110a0:	movw	r0, #6841	; 0x1ab9
   110a4:	movt	r0, #1
   110a8:	bl	109ac <printf@plt>
   110ac:	mov	r0, #125	; 0x7d
   110b0:	sub	sp, fp, #28
   110b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110b8:	b	10a3c <putchar@plt>
   110bc:	movw	r0, #7779	; 0x1e63
   110c0:	movt	r0, #1
   110c4:	b	11110 <print_object@@Base+0x404>
   110c8:	movw	r0, #7779	; 0x1e63
   110cc:	movw	r1, #7467	; 0x1d2b
   110d0:	movw	r3, #8088	; 0x1f98
   110d4:	mov	r2, #201	; 0xc9
   110d8:	movt	r0, #1
   110dc:	movt	r1, #1
   110e0:	movt	r3, #1
   110e4:	bl	10a78 <__assert_fail@plt>
   110e8:	movw	r0, #7883	; 0x1ecb
   110ec:	movw	r1, #7467	; 0x1d2b
   110f0:	movw	r3, #7938	; 0x1f02
   110f4:	mov	r2, #192	; 0xc0
   110f8:	movt	r0, #1
   110fc:	movt	r1, #1
   11100:	movt	r3, #1
   11104:	bl	10a78 <__assert_fail@plt>
   11108:	movw	r0, #7429	; 0x1d05
   1110c:	movt	r0, #1
   11110:	movw	r1, #7467	; 0x1d2b
   11114:	movw	r3, #8019	; 0x1f53
   11118:	mov	r2, #195	; 0xc3
   1111c:	movt	r1, #1
   11120:	movt	r3, #1
   11124:	bl	10a78 <__assert_fail@plt>
   11128:	movw	r0, #7779	; 0x1e63
   1112c:	movt	r0, #1
   11130:	b	1113c <print_object@@Base+0x430>
   11134:	movw	r0, #7429	; 0x1d05
   11138:	movt	r0, #1
   1113c:	movw	r1, #7467	; 0x1d2b
   11140:	movw	r3, #7704	; 0x1e18
   11144:	mov	r2, #224	; 0xe0
   11148:	movt	r1, #1
   1114c:	movt	r3, #1
   11150:	bl	10a78 <__assert_fail@plt>
   11154:	movw	r0, #7779	; 0x1e63
   11158:	movw	r1, #7467	; 0x1d2b
   1115c:	movw	r3, #7812	; 0x1e84
   11160:	mov	r2, #218	; 0xda
   11164:	movt	r0, #1
   11168:	movt	r1, #1
   1116c:	movt	r3, #1
   11170:	bl	10a78 <__assert_fail@plt>

00011174 <print_enum@@Base>:
   11174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11178:	add	fp, sp, #28
   1117c:	sub	sp, sp, #4
   11180:	cmp	r0, #0
   11184:	beq	11488 <print_enum@@Base+0x314>
   11188:	ldr	r1, [r0]
   1118c:	mov	sl, r0
   11190:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11194:	cmp	r1, #6
   11198:	bcc	1143c <print_enum@@Base+0x2c8>
   1119c:	ldrh	r0, [r0, #4]
   111a0:	cmp	r0, #0
   111a4:	beq	1143c <print_enum@@Base+0x2c8>
   111a8:	mov	r1, sl
   111ac:	ldr	r0, [r1, r0]!
   111b0:	add	r0, r1, r0
   111b4:	add	r1, r0, #4
   111b8:	movw	r0, #6671	; 0x1a0f
   111bc:	movt	r0, #1
   111c0:	bl	109ac <printf@plt>
   111c4:	ldr	r1, [sl]
   111c8:	mov	r0, sl
   111cc:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   111d0:	cmp	r1, #8
   111d4:	bcc	11448 <print_enum@@Base+0x2d4>
   111d8:	ldrh	r4, [r0, #6]
   111dc:	cmp	r4, #0
   111e0:	beq	11448 <print_enum@@Base+0x2d4>
   111e4:	mov	r6, sl
   111e8:	movw	r0, #6856	; 0x1ac8
   111ec:	ldr	r5, [r6, r4]!
   111f0:	movt	r0, #1
   111f4:	bl	109ac <printf@plt>
   111f8:	ldr	r0, [r6, r5]!
   111fc:	cmp	r0, #0
   11200:	beq	11378 <print_enum@@Base+0x204>
   11204:	add	r0, r5, r4
   11208:	movw	r5, #6671	; 0x1a0f
   1120c:	add	r6, r6, #4
   11210:	mov	r4, #0
   11214:	add	r0, sl, r0
   11218:	movt	r5, #1
   1121c:	add	r7, r0, #8
   11220:	ldr	r8, [r7, #-4]
   11224:	cmp	r4, #0
   11228:	add	r9, r7, r8
   1122c:	beq	11238 <print_enum@@Base+0xc4>
   11230:	mov	r0, #44	; 0x2c
   11234:	bl	10a3c <putchar@plt>
   11238:	cmp	r9, #4
   1123c:	beq	1141c <print_enum@@Base+0x2a8>
   11240:	ldr	r0, [r9, #-4]
   11244:	sub	r0, r8, r0
   11248:	add	r0, r7, r0
   1124c:	ldrh	r1, [r0, #-4]
   11250:	cmp	r1, #6
   11254:	bcc	11410 <print_enum@@Base+0x29c>
   11258:	ldrh	r0, [r0]
   1125c:	cmp	r0, #0
   11260:	beq	11410 <print_enum@@Base+0x29c>
   11264:	add	r1, r8, r0
   11268:	add	r1, r7, r1
   1126c:	ldr	r1, [r1, #-4]
   11270:	add	r1, r1, r8
   11274:	add	r0, r1, r0
   11278:	add	r1, r7, r0
   1127c:	mov	r0, r5
   11280:	bl	109ac <printf@plt>
   11284:	ldr	r0, [r9, #-4]
   11288:	sub	r1, r8, r0
   1128c:	add	r1, r7, r1
   11290:	ldrh	r2, [r1, #-4]
   11294:	cmp	r2, #8
   11298:	bcc	1135c <print_enum@@Base+0x1e8>
   1129c:	ldrh	r1, [r1, #2]
   112a0:	cmp	r1, #0
   112a4:	beq	112d8 <print_enum@@Base+0x164>
   112a8:	add	r0, r8, r1
   112ac:	mov	r1, r7
   112b0:	ldr	r3, [r1, r0]!
   112b4:	movw	r0, #6868	; 0x1ad4
   112b8:	movt	r0, #1
   112bc:	ldr	r2, [r1, #-4]
   112c0:	bl	109ac <printf@plt>
   112c4:	ldr	r0, [r9, #-4]
   112c8:	sub	r1, r8, r0
   112cc:	add	r1, r7, r1
   112d0:	sub	r1, r1, #4
   112d4:	b	112e4 <print_enum@@Base+0x170>
   112d8:	add	r1, r6, r4, lsl #2
   112dc:	add	r1, r1, r8
   112e0:	sub	r1, r1, r0
   112e4:	ldrh	r1, [r1]
   112e8:	rsb	r0, r0, #0
   112ec:	cmp	r1, #10
   112f0:	bcc	1135c <print_enum@@Base+0x1e8>
   112f4:	add	r0, r0, r8
   112f8:	add	r0, r7, r0
   112fc:	ldrh	r0, [r0, #4]
   11300:	cmp	r0, #0
   11304:	beq	1135c <print_enum@@Base+0x1e8>
   11308:	movw	r0, #6882	; 0x1ae2
   1130c:	movt	r0, #1
   11310:	bl	109ac <printf@plt>
   11314:	ldr	r0, [r9, #-4]
   11318:	sub	r0, r8, r0
   1131c:	add	r1, r7, r0
   11320:	mov	r0, #0
   11324:	ldrh	r2, [r1, #-4]
   11328:	cmp	r2, #10
   1132c:	bcc	11358 <print_enum@@Base+0x1e4>
   11330:	ldrh	r1, [r1, #4]
   11334:	cmp	r1, #0
   11338:	beq	11358 <print_enum@@Base+0x1e4>
   1133c:	add	r0, r8, r1
   11340:	add	r0, r7, r0
   11344:	ldr	r0, [r0, #-4]
   11348:	add	r0, r0, r8
   1134c:	add	r0, r0, r1
   11350:	add	r0, r7, r0
   11354:	sub	r0, r0, #4
   11358:	bl	10d0c <print_object@@Base>
   1135c:	mov	r0, #125	; 0x7d
   11360:	bl	10a3c <putchar@plt>
   11364:	ldr	r0, [r6, #-4]
   11368:	add	r4, r4, #1
   1136c:	add	r7, r7, #4
   11370:	cmp	r4, r0
   11374:	bcc	11220 <print_enum@@Base+0xac>
   11378:	mov	r0, #93	; 0x5d
   1137c:	bl	10a3c <putchar@plt>
   11380:	ldr	r1, [sl]
   11384:	mov	r0, sl
   11388:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   1138c:	cmp	r1, #10
   11390:	bcc	113c8 <print_enum@@Base+0x254>
   11394:	ldrh	r0, [r0, #8]
   11398:	cmp	r0, #0
   1139c:	beq	113c8 <print_enum@@Base+0x254>
   113a0:	ldrb	r0, [sl, r0]
   113a4:	movw	r2, #6794	; 0x1a8a
   113a8:	movw	r1, #6789	; 0x1a85
   113ac:	movt	r2, #1
   113b0:	movt	r1, #1
   113b4:	cmp	r0, #0
   113b8:	movw	r0, #6893	; 0x1aed
   113bc:	moveq	r1, r2
   113c0:	movt	r0, #1
   113c4:	bl	109ac <printf@plt>
   113c8:	movw	r0, #6908	; 0x1afc
   113cc:	movt	r0, #1
   113d0:	bl	109ac <printf@plt>
   113d4:	ldr	r1, [sl]
   113d8:	mov	r0, sl
   113dc:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   113e0:	cmp	r1, #12
   113e4:	bcc	11468 <print_enum@@Base+0x2f4>
   113e8:	ldrh	r0, [r0, #10]
   113ec:	cmp	r0, #0
   113f0:	beq	11468 <print_enum@@Base+0x2f4>
   113f4:	ldr	r0, [sl, r0]!
   113f8:	add	r0, sl, r0
   113fc:	bl	10b74 <print_type@@Base>
   11400:	mov	r0, #125	; 0x7d
   11404:	sub	sp, fp, #28
   11408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1140c:	b	10a3c <putchar@plt>
   11410:	movw	r0, #7779	; 0x1e63
   11414:	movt	r0, #1
   11418:	b	11424 <print_enum@@Base+0x2b0>
   1141c:	movw	r0, #7429	; 0x1d05
   11420:	movt	r0, #1
   11424:	movw	r1, #7467	; 0x1d2b
   11428:	movw	r3, #8300	; 0x206c
   1142c:	mov	r2, #159	; 0x9f
   11430:	movt	r1, #1
   11434:	movt	r3, #1
   11438:	bl	10a78 <__assert_fail@plt>
   1143c:	movw	r0, #7779	; 0x1e63
   11440:	movt	r0, #1
   11444:	b	11490 <print_enum@@Base+0x31c>
   11448:	movw	r0, #7779	; 0x1e63
   1144c:	movw	r1, #7467	; 0x1d2b
   11450:	movw	r3, #8227	; 0x2023
   11454:	mov	r2, #183	; 0xb7
   11458:	movt	r0, #1
   1145c:	movt	r1, #1
   11460:	movt	r3, #1
   11464:	bl	10a78 <__assert_fail@plt>
   11468:	movw	r0, #7779	; 0x1e63
   1146c:	movw	r1, #7467	; 0x1d2b
   11470:	movw	r3, #8373	; 0x20b5
   11474:	mov	r2, #185	; 0xb9
   11478:	movt	r0, #1
   1147c:	movt	r1, #1
   11480:	movt	r3, #1
   11484:	bl	10a78 <__assert_fail@plt>
   11488:	movw	r0, #7429	; 0x1d05
   1148c:	movt	r0, #1
   11490:	movw	r1, #7467	; 0x1d2b
   11494:	movw	r3, #8160	; 0x1fe0
   11498:	mov	r2, #177	; 0xb1
   1149c:	movt	r1, #1
   114a0:	movt	r3, #1
   114a4:	bl	10a78 <__assert_fail@plt>

000114a8 <print_schema@@Base>:
   114a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   114ac:	add	fp, sp, #24
   114b0:	cmp	r0, #0
   114b4:	beq	11744 <print_schema@@Base+0x29c>
   114b8:	ldr	r1, [r0]
   114bc:	mov	r8, r0
   114c0:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   114c4:	cmp	r1, #6
   114c8:	bcc	11718 <print_schema@@Base+0x270>
   114cc:	ldrh	r4, [r0, #4]
   114d0:	cmp	r4, #0
   114d4:	beq	11718 <print_schema@@Base+0x270>
   114d8:	mov	r5, r8
   114dc:	mov	r0, #123	; 0x7b
   114e0:	ldr	r9, [r5, r4]!
   114e4:	bl	10a3c <putchar@plt>
   114e8:	movw	r0, #6928	; 0x1b10
   114ec:	movt	r0, #1
   114f0:	bl	109ac <printf@plt>
   114f4:	ldr	r0, [r5, r9]
   114f8:	cmp	r0, #0
   114fc:	beq	11554 <print_schema@@Base+0xac>
   11500:	add	r1, r9, r4
   11504:	mov	r4, #0
   11508:	mov	r6, #0
   1150c:	add	r1, r8, r1
   11510:	add	r7, r1, #4
   11514:	cmp	r6, #0
   11518:	beq	11528 <print_schema@@Base+0x80>
   1151c:	mov	r0, #44	; 0x2c
   11520:	bl	10a3c <putchar@plt>
   11524:	ldr	r0, [r5, r9]
   11528:	cmp	r0, r6
   1152c:	bls	116d8 <print_schema@@Base+0x230>
   11530:	ldr	r0, [r7, r6, lsl #2]
   11534:	add	r0, r4, r0
   11538:	add	r0, r7, r0
   1153c:	bl	10d0c <print_object@@Base>
   11540:	ldr	r0, [r5, r9]
   11544:	add	r6, r6, #1
   11548:	add	r4, r4, #4
   1154c:	cmp	r6, r0
   11550:	bcc	11514 <print_schema@@Base+0x6c>
   11554:	mov	r0, #93	; 0x5d
   11558:	bl	10a3c <putchar@plt>
   1155c:	ldr	r1, [r8]
   11560:	mov	r0, r8
   11564:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11568:	cmp	r1, #8
   1156c:	bcc	11724 <print_schema@@Base+0x27c>
   11570:	ldrh	r4, [r0, #6]
   11574:	cmp	r4, #0
   11578:	beq	11724 <print_schema@@Base+0x27c>
   1157c:	mov	r5, r8
   11580:	movw	r0, #6940	; 0x1b1c
   11584:	ldr	r9, [r5, r4]!
   11588:	movt	r0, #1
   1158c:	bl	109ac <printf@plt>
   11590:	ldr	r0, [r5, r9]
   11594:	cmp	r0, #0
   11598:	beq	115f0 <print_schema@@Base+0x148>
   1159c:	add	r1, r9, r4
   115a0:	mov	r4, #0
   115a4:	mov	r6, #0
   115a8:	add	r1, r8, r1
   115ac:	add	r7, r1, #4
   115b0:	cmp	r6, #0
   115b4:	beq	115c4 <print_schema@@Base+0x11c>
   115b8:	mov	r0, #44	; 0x2c
   115bc:	bl	10a3c <putchar@plt>
   115c0:	ldr	r0, [r5, r9]
   115c4:	cmp	r0, r6
   115c8:	bls	116f8 <print_schema@@Base+0x250>
   115cc:	ldr	r0, [r7, r6, lsl #2]
   115d0:	add	r0, r4, r0
   115d4:	add	r0, r7, r0
   115d8:	bl	11174 <print_enum@@Base>
   115dc:	ldr	r0, [r5, r9]
   115e0:	add	r6, r6, #1
   115e4:	add	r4, r4, #4
   115e8:	cmp	r6, r0
   115ec:	bcc	115b0 <print_schema@@Base+0x108>
   115f0:	mov	r0, #93	; 0x5d
   115f4:	bl	10a3c <putchar@plt>
   115f8:	ldr	r1, [r8]
   115fc:	mov	r0, r8
   11600:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   11604:	cmp	r1, #10
   11608:	bcc	116c8 <print_schema@@Base+0x220>
   1160c:	ldrh	r1, [r0, #8]
   11610:	cmp	r1, #0
   11614:	beq	1163c <print_schema@@Base+0x194>
   11618:	mov	r0, r8
   1161c:	ldr	r1, [r0, r1]!
   11620:	add	r0, r0, r1
   11624:	add	r1, r0, #4
   11628:	movw	r0, #6951	; 0x1b27
   1162c:	movt	r0, #1
   11630:	bl	109ac <printf@plt>
   11634:	ldr	r0, [r8]
   11638:	sub	r0, r8, r0
   1163c:	ldrh	r1, [r0]
   11640:	cmp	r1, #12
   11644:	bcc	116c8 <print_schema@@Base+0x220>
   11648:	ldrh	r1, [r0, #10]
   1164c:	cmp	r1, #0
   11650:	beq	11678 <print_schema@@Base+0x1d0>
   11654:	mov	r0, r8
   11658:	ldr	r1, [r0, r1]!
   1165c:	add	r0, r0, r1
   11660:	add	r1, r0, #4
   11664:	movw	r0, #6970	; 0x1b3a
   11668:	movt	r0, #1
   1166c:	bl	109ac <printf@plt>
   11670:	ldr	r0, [r8]
   11674:	sub	r0, r8, r0
   11678:	ldrh	r1, [r0]
   1167c:	cmp	r1, #14
   11680:	bcc	116c8 <print_schema@@Base+0x220>
   11684:	ldrh	r0, [r0, #12]
   11688:	cmp	r0, #0
   1168c:	beq	116c8 <print_schema@@Base+0x220>
   11690:	movw	r0, #6987	; 0x1b4b
   11694:	movt	r0, #1
   11698:	bl	109ac <printf@plt>
   1169c:	ldr	r0, [r8]
   116a0:	mov	r1, r8
   116a4:	ldrh	r2, [r1, -r0]!
   116a8:	mov	r0, #0
   116ac:	cmp	r2, #14
   116b0:	bcc	116c4 <print_schema@@Base+0x21c>
   116b4:	ldrh	r1, [r1, #12]
   116b8:	cmp	r1, #0
   116bc:	ldrne	r0, [r8, r1]!
   116c0:	addne	r0, r8, r0
   116c4:	bl	10d0c <print_object@@Base>
   116c8:	movw	r0, #8769	; 0x2241
   116cc:	movt	r0, #1
   116d0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   116d4:	b	109f4 <puts@plt>
   116d8:	movw	r0, #7883	; 0x1ecb
   116dc:	movw	r1, #7467	; 0x1d2b
   116e0:	movw	r3, #8531	; 0x2153
   116e4:	mov	r2, #215	; 0xd7
   116e8:	movt	r0, #1
   116ec:	movt	r1, #1
   116f0:	movt	r3, #1
   116f4:	bl	10a78 <__assert_fail@plt>
   116f8:	movw	r0, #7883	; 0x1ecb
   116fc:	movw	r1, #7467	; 0x1d2b
   11700:	movw	r3, #8688	; 0x21f0
   11704:	mov	r2, #174	; 0xae
   11708:	movt	r0, #1
   1170c:	movt	r1, #1
   11710:	movt	r3, #1
   11714:	bl	10a78 <__assert_fail@plt>
   11718:	movw	r0, #7779	; 0x1e63
   1171c:	movt	r0, #1
   11720:	b	1174c <print_schema@@Base+0x2a4>
   11724:	movw	r0, #7779	; 0x1e63
   11728:	movw	r1, #7467	; 0x1d2b
   1172c:	movw	r3, #8615	; 0x21a7
   11730:	mov	r2, #238	; 0xee
   11734:	movt	r0, #1
   11738:	movt	r1, #1
   1173c:	movt	r3, #1
   11740:	bl	10a78 <__assert_fail@plt>
   11744:	movw	r0, #7429	; 0x1d05
   11748:	movt	r0, #1
   1174c:	movw	r1, #7467	; 0x1d2b
   11750:	movw	r3, #8454	; 0x2106
   11754:	mov	r2, #237	; 0xed
   11758:	movt	r1, #1
   1175c:	movt	r3, #1
   11760:	bl	10a78 <__assert_fail@plt>

00011764 <load_and_dump_schema@@Base>:
   11764:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11768:	add	fp, sp, #24
   1176c:	movw	r1, #8766	; 0x223e
   11770:	mov	r8, r0
   11774:	movt	r1, #1
   11778:	bl	109b8 <fopen@plt>
   1177c:	cmp	r0, #0
   11780:	beq	11858 <load_and_dump_schema@@Base+0xf4>
   11784:	mov	r1, #0
   11788:	mov	r2, #2
   1178c:	mov	r6, r0
   11790:	bl	10a60 <fseek@plt>
   11794:	mov	r0, r6
   11798:	bl	109d0 <ftell@plt>
   1179c:	mov	r7, r0
   117a0:	movw	r0, #10000	; 0x2710
   117a4:	cmp	r7, r0
   117a8:	bhi	11844 <load_and_dump_schema@@Base+0xe0>
   117ac:	mov	r0, r6
   117b0:	bl	109dc <rewind@plt>
   117b4:	cmp	r7, #0
   117b8:	mov	r0, r7
   117bc:	movweq	r0, #1
   117c0:	bl	10a00 <malloc@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	11844 <load_and_dump_schema@@Base+0xe0>
   117cc:	mov	r4, r0
   117d0:	mov	r1, #0
   117d4:	mov	r5, r1
   117d8:	add	r0, r4, r1
   117dc:	sub	r2, r7, r1
   117e0:	mov	r1, #1
   117e4:	mov	r3, r6
   117e8:	bl	10a54 <fread_unlocked@plt>
   117ec:	add	r1, r0, r5
   117f0:	cmp	r0, #0
   117f4:	bne	117d4 <load_and_dump_schema@@Base+0x70>
   117f8:	mov	r0, r6
   117fc:	bl	10a48 <fclose@plt>
   11800:	cmp	r7, r5
   11804:	bne	11850 <load_and_dump_schema@@Base+0xec>
   11808:	cmp	r7, #11
   1180c:	bls	11880 <load_and_dump_schema@@Base+0x11c>
   11810:	mov	r5, r4
   11814:	movw	r0, #17986	; 0x4642
   11818:	ldr	r6, [r5, #4]!
   1181c:	movt	r0, #21314	; 0x5342
   11820:	cmp	r6, r0
   11824:	bne	118a0 <load_and_dump_schema@@Base+0x13c>
   11828:	ldr	r0, [r4]
   1182c:	add	r0, r4, r0
   11830:	bl	114a8 <print_schema@@Base>
   11834:	mov	r5, #0
   11838:	mov	r0, r4
   1183c:	bl	109c4 <free@plt>
   11840:	b	11878 <load_and_dump_schema@@Base+0x114>
   11844:	mov	r0, r6
   11848:	bl	10a48 <fclose@plt>
   1184c:	b	11858 <load_and_dump_schema@@Base+0xf4>
   11850:	mov	r0, r4
   11854:	bl	109c4 <free@plt>
   11858:	movw	r0, #12384	; 0x3060
   1185c:	movw	r1, #7002	; 0x1b5a
   11860:	mov	r2, r8
   11864:	movt	r0, #2
   11868:	movt	r1, #1
   1186c:	ldr	r0, [r0]
   11870:	bl	10a30 <fprintf@plt>
   11874:	mvn	r5, #0
   11878:	mov	r0, r5
   1187c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11880:	movw	r0, #12384	; 0x3060
   11884:	movw	r1, #7043	; 0x1b83
   11888:	mov	r2, r8
   1188c:	movt	r0, #2
   11890:	movt	r1, #1
   11894:	ldr	r0, [r0]
   11898:	bl	10a30 <fprintf@plt>
   1189c:	b	118f4 <load_and_dump_schema@@Base+0x190>
   118a0:	ldr	r1, [r4, #8]
   118a4:	cmp	r1, r0
   118a8:	bne	118d4 <load_and_dump_schema@@Base+0x170>
   118ac:	movw	r0, #12384	; 0x3060
   118b0:	mov	r1, #40	; 0x28
   118b4:	mov	r2, #1
   118b8:	movt	r0, #2
   118bc:	ldr	r3, [r0]
   118c0:	movw	r0, #7075	; 0x1ba3
   118c4:	movt	r0, #1
   118c8:	bl	109e8 <fwrite@plt>
   118cc:	add	r0, r5, r6
   118d0:	b	11830 <load_and_dump_schema@@Base+0xcc>
   118d4:	movw	r0, #12384	; 0x3060
   118d8:	mov	r1, #27
   118dc:	mov	r2, #1
   118e0:	movt	r0, #2
   118e4:	ldr	r3, [r0]
   118e8:	movw	r0, #7116	; 0x1bcc
   118ec:	movt	r0, #1
   118f0:	bl	109e8 <fwrite@plt>
   118f4:	mvn	r5, #0
   118f8:	b	11838 <load_and_dump_schema@@Base+0xd4>

000118fc <main@@Base>:
   118fc:	cmp	r0, #2
   11900:	bne	1190c <main@@Base+0x10>
   11904:	ldr	r0, [r1, #4]
   11908:	b	11764 <load_and_dump_schema@@Base>
   1190c:	push	{r4, sl, fp, lr}
   11910:	add	fp, sp, #8
   11914:	movw	r4, #12384	; 0x3060
   11918:	movw	r0, #7144	; 0x1be8
   1191c:	mov	r1, #28
   11920:	mov	r2, #1
   11924:	movt	r4, #2
   11928:	movt	r0, #1
   1192c:	ldr	r3, [r4]
   11930:	bl	109e8 <fwrite@plt>
   11934:	ldr	r3, [r4]
   11938:	movw	r0, #7173	; 0x1c05
   1193c:	mov	r1, #74	; 0x4a
   11940:	mov	r2, #1
   11944:	movt	r0, #1
   11948:	bl	109e8 <fwrite@plt>
   1194c:	ldr	r3, [r4]
   11950:	movw	r0, #7248	; 0x1c50
   11954:	mov	r1, #180	; 0xb4
   11958:	mov	r2, #1
   1195c:	movt	r0, #1
   11960:	bl	109e8 <fwrite@plt>
   11964:	mvn	r0, #0
   11968:	bl	10a24 <exit@plt>

0001196c <__libc_csu_init@@Base>:
   1196c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11970:	mov	r7, r0
   11974:	ldr	r6, [pc, #72]	; 119c4 <__libc_csu_init@@Base+0x58>
   11978:	ldr	r5, [pc, #72]	; 119c8 <__libc_csu_init@@Base+0x5c>
   1197c:	add	r6, pc, r6
   11980:	add	r5, pc, r5
   11984:	sub	r6, r6, r5
   11988:	mov	r8, r1
   1198c:	mov	r9, r2
   11990:	bl	1098c <printf@plt-0x20>
   11994:	asrs	r6, r6, #2
   11998:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1199c:	mov	r4, #0
   119a0:	add	r4, r4, #1
   119a4:	ldr	r3, [r5], #4
   119a8:	mov	r2, r9
   119ac:	mov	r1, r8
   119b0:	mov	r0, r7
   119b4:	blx	r3
   119b8:	cmp	r6, r4
   119bc:	bne	119a0 <__libc_csu_init@@Base+0x34>
   119c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119c4:	andeq	r1, r1, r8, lsl #11
   119c8:	andeq	r1, r1, r0, lsl #11

000119cc <__libc_csu_fini@@Base>:
   119cc:	bx	lr

Disassembly of section .fini:

000119d0 <.fini>:
   119d0:	push	{r3, lr}
   119d4:	pop	{r3, pc}
