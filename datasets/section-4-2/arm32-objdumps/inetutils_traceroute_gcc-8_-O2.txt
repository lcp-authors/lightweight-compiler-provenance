
../repos/inetutils/src/traceroute:     file format elf32-littlearm


Disassembly of section .init:

00010f9c <.init>:
   10f9c:	push	{r3, lr}
   10fa0:	bl	11554 <__assert_fail@plt+0x2bc>
   10fa4:	pop	{r3, pc}

Disassembly of section .plt:

00010fa8 <calloc@plt-0x14>:
   10fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   10fac:	ldr	lr, [pc, #4]	; 10fb8 <calloc@plt-0x4>
   10fb0:	add	lr, pc, lr
   10fb4:	ldr	pc, [lr, #8]!
   10fb8:	andeq	sl, r1, r8, asr #32

00010fbc <calloc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #106496	; 0x1a000
   10fc4:	ldr	pc, [ip, #72]!	; 0x48

00010fc8 <fputs_unlocked@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #106496	; 0x1a000
   10fd0:	ldr	pc, [ip, #64]!	; 0x40

00010fd4 <strcmp@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #106496	; 0x1a000
   10fdc:	ldr	pc, [ip, #56]!	; 0x38

00010fe0 <strtol@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #106496	; 0x1a000
   10fe8:	ldr	pc, [ip, #48]!	; 0x30

00010fec <setsockopt@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #106496	; 0x1a000
   10ff4:	ldr	pc, [ip, #40]!	; 0x28

00010ff8 <printf@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #106496	; 0x1a000
   11000:	ldr	pc, [ip, #32]!

00011004 <getprotobyname@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #106496	; 0x1a000
   1100c:	ldr	pc, [ip, #24]!

00011010 <fflush@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #106496	; 0x1a000
   11018:	ldr	pc, [ip, #16]!

0001101c <memmove@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #106496	; 0x1a000
   11024:	ldr	pc, [ip, #8]!

00011028 <strchrnul@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #106496	; 0x1a000
   11030:	ldr	pc, [ip, #0]!

00011034 <free@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #102400	; 0x19000
   1103c:	ldr	pc, [ip, #4088]!	; 0xff8

00011040 <gai_strerror@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #102400	; 0x19000
   11048:	ldr	pc, [ip, #4080]!	; 0xff0

0001104c <strndup@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #102400	; 0x19000
   11054:	ldr	pc, [ip, #4072]!	; 0xfe8

00011058 <memcpy@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #102400	; 0x19000
   11060:	ldr	pc, [ip, #4064]!	; 0xfe0

00011064 <fwrite_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #102400	; 0x19000
   1106c:	ldr	pc, [ip, #4056]!	; 0xfd8

00011070 <inet_ntoa@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #102400	; 0x19000
   11078:	ldr	pc, [ip, #4048]!	; 0xfd0

0001107c <select@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #102400	; 0x19000
   11084:	ldr	pc, [ip, #4040]!	; 0xfc8

00011088 <sleep@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #102400	; 0x19000
   11090:	ldr	pc, [ip, #4032]!	; 0xfc0

00011094 <gethostbyaddr@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #102400	; 0x19000
   1109c:	ldr	pc, [ip, #4024]!	; 0xfb8

000110a0 <recvfrom@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #102400	; 0x19000
   110a8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110ac <realloc@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #102400	; 0x19000
   110b4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110b8 <strcasecmp@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #102400	; 0x19000
   110c0:	ldr	pc, [ip, #4000]!	; 0xfa0

000110c4 <funlockfile@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #102400	; 0x19000
   110cc:	ldr	pc, [ip, #3992]!	; 0xf98

000110d0 <fwrite@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #102400	; 0x19000
   110d8:	ldr	pc, [ip, #3984]!	; 0xf90

000110dc <strcat@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #102400	; 0x19000
   110e4:	ldr	pc, [ip, #3976]!	; 0xf88

000110e8 <gettimeofday@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #102400	; 0x19000
   110f0:	ldr	pc, [ip, #3968]!	; 0xf80

000110f4 <error@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #102400	; 0x19000
   110fc:	ldr	pc, [ip, #3960]!	; 0xf78

00011100 <getenv@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #102400	; 0x19000
   11108:	ldr	pc, [ip, #3952]!	; 0xf70

0001110c <malloc@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #102400	; 0x19000
   11114:	ldr	pc, [ip, #3944]!	; 0xf68

00011118 <__libc_start_main@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #102400	; 0x19000
   11120:	ldr	pc, [ip, #3936]!	; 0xf60

00011124 <strerror@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #102400	; 0x19000
   1112c:	ldr	pc, [ip, #3928]!	; 0xf58

00011130 <__ctype_tolower_loc@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #102400	; 0x19000
   11138:	ldr	pc, [ip, #3920]!	; 0xf50

0001113c <__gmon_start__@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #102400	; 0x19000
   11144:	ldr	pc, [ip, #3912]!	; 0xf48

00011148 <mempcpy@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #102400	; 0x19000
   11150:	ldr	pc, [ip, #3904]!	; 0xf40

00011154 <__ctype_b_loc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #102400	; 0x19000
   1115c:	ldr	pc, [ip, #3896]!	; 0xf38

00011160 <getpid@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #102400	; 0x19000
   11168:	ldr	pc, [ip, #3888]!	; 0xf30

0001116c <exit@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #102400	; 0x19000
   11174:	ldr	pc, [ip, #3880]!	; 0xf28

00011178 <strlen@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #102400	; 0x19000
   11180:	ldr	pc, [ip, #3872]!	; 0xf20

00011184 <strchr@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #102400	; 0x19000
   1118c:	ldr	pc, [ip, #3864]!	; 0xf18

00011190 <fprintf@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #102400	; 0x19000
   11198:	ldr	pc, [ip, #3856]!	; 0xf10

0001119c <__errno_location@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #102400	; 0x19000
   111a4:	ldr	pc, [ip, #3848]!	; 0xf08

000111a8 <strerror_r@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #102400	; 0x19000
   111b0:	ldr	pc, [ip, #3840]!	; 0xf00

000111b4 <memset@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #102400	; 0x19000
   111bc:	ldr	pc, [ip, #3832]!	; 0xef8

000111c0 <putchar@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #102400	; 0x19000
   111c8:	ldr	pc, [ip, #3824]!	; 0xef0

000111cc <memchr@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #102400	; 0x19000
   111d4:	ldr	pc, [ip, #3816]!	; 0xee8

000111d8 <sendto@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #102400	; 0x19000
   111e0:	ldr	pc, [ip, #3808]!	; 0xee0

000111e4 <__overflow@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #102400	; 0x19000
   111ec:	ldr	pc, [ip, #3800]!	; 0xed8

000111f0 <setlocale@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #102400	; 0x19000
   111f8:	ldr	pc, [ip, #3792]!	; 0xed0

000111fc <getnameinfo@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #102400	; 0x19000
   11204:	ldr	pc, [ip, #3784]!	; 0xec8

00011208 <strrchr@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #102400	; 0x19000
   11210:	ldr	pc, [ip, #3776]!	; 0xec0

00011214 <vfprintf@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #102400	; 0x19000
   1121c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011220 <fputc@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #102400	; 0x19000
   11228:	ldr	pc, [ip, #3760]!	; 0xeb0

0001122c <flockfile@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #102400	; 0x19000
   11234:	ldr	pc, [ip, #3752]!	; 0xea8

00011238 <vsnprintf@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #102400	; 0x19000
   11240:	ldr	pc, [ip, #3744]!	; 0xea0

00011244 <qsort@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #102400	; 0x19000
   1124c:	ldr	pc, [ip, #3736]!	; 0xe98

00011250 <strpbrk@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #102400	; 0x19000
   11258:	ldr	pc, [ip, #3728]!	; 0xe90

0001125c <freeaddrinfo@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #102400	; 0x19000
   11264:	ldr	pc, [ip, #3720]!	; 0xe88

00011268 <getaddrinfo@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #102400	; 0x19000
   11270:	ldr	pc, [ip, #3712]!	; 0xe80

00011274 <socket@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #102400	; 0x19000
   1127c:	ldr	pc, [ip, #3704]!	; 0xe78

00011280 <strncmp@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #102400	; 0x19000
   11288:	ldr	pc, [ip, #3696]!	; 0xe70

0001128c <abort@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #102400	; 0x19000
   11294:	ldr	pc, [ip, #3688]!	; 0xe68

00011298 <__assert_fail@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #102400	; 0x19000
   112a0:	ldr	pc, [ip, #3680]!	; 0xe60

Disassembly of section .text:

000112a8 <argp_failure@@Base-0x36b4>:
   112a8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   112ac:	mov	r5, r0
   112b0:	mov	r4, r1
   112b4:	ldr	r0, [r1]
   112b8:	strd	r6, [sp, #8]
   112bc:	movw	r6, #45732	; 0xb2a4
   112c0:	movt	r6, #2
   112c4:	strd	r8, [sp, #16]
   112c8:	str	lr, [sp, #24]
   112cc:	sub	sp, sp, #116	; 0x74
   112d0:	bl	17684 <argp_parse@@Base+0x1110>
   112d4:	movw	r1, #42612	; 0xa674
   112d8:	movt	r1, #1
   112dc:	mov	r0, #6
   112e0:	bl	111f0 <setlocale@plt>
   112e4:	bl	11160 <getpid@plt>
   112e8:	uxth	r0, r0
   112ec:	movw	r1, #45872	; 0xb330
   112f0:	movt	r1, #2
   112f4:	movw	r3, #45928	; 0xb368
   112f8:	movt	r3, #2
   112fc:	movw	ip, #39204	; 0x9924
   11300:	movt	ip, #1
   11304:	str	r0, [r1]
   11308:	movw	r0, #39228	; 0x993c
   1130c:	movt	r0, #1
   11310:	ldr	r1, [pc, #504]	; 11510 <__assert_fail@plt+0x278>
   11314:	str	ip, [r3]
   11318:	bl	1747c <argp_parse@@Base+0xf08>
   1131c:	mov	ip, #0
   11320:	mov	r2, r4
   11324:	ldr	r0, [pc, #488]	; 11514 <__assert_fail@plt+0x27c>
   11328:	mov	r3, ip
   1132c:	mov	r1, r5
   11330:	str	ip, [sp]
   11334:	str	ip, [sp, #4]
   11338:	bl	16574 <argp_parse@@Base>
   1133c:	ldr	r3, [r6, #16]
   11340:	cmp	r3, #0
   11344:	beq	114d8 <__assert_fail@plt+0x240>
   11348:	ldrb	r3, [r3]
   1134c:	cmp	r3, #0
   11350:	beq	114d8 <__assert_fail@plt+0x240>
   11354:	ldr	r9, [r6, #16]
   11358:	mov	r2, #2
   1135c:	mov	r3, #194	; 0xc2
   11360:	mov	r4, #0
   11364:	mov	r5, #0
   11368:	mov	r1, #0
   1136c:	str	r3, [sp, #20]
   11370:	add	r3, sp, #16
   11374:	str	r2, [sp, #24]
   11378:	add	r2, sp, #20
   1137c:	strd	r4, [sp, #28]
   11380:	mov	r0, r9
   11384:	strd	r4, [sp, #36]	; 0x24
   11388:	strd	r4, [sp, #44]	; 0x2c
   1138c:	bl	11268 <getaddrinfo@plt>
   11390:	cmp	r0, #0
   11394:	bne	114f8 <__assert_fail@plt+0x260>
   11398:	ldr	r8, [sp, #16]
   1139c:	movw	r7, #45816	; 0xb2f8
   113a0:	movt	r7, #2
   113a4:	mov	r0, r7
   113a8:	movw	r5, #45328	; 0xb110
   113ac:	movt	r5, #2
   113b0:	mov	r4, #1
   113b4:	ldr	r2, [r8, #16]
   113b8:	ldr	r1, [r8, #20]
   113bc:	bl	11058 <memcpy@plt>
   113c0:	ldr	ip, [r5, #8]
   113c4:	mov	lr, #0
   113c8:	mov	r3, #46	; 0x2e
   113cc:	movw	r2, #45880	; 0xb338
   113d0:	movt	r2, #2
   113d4:	ldr	r1, [r8, #16]
   113d8:	ldr	r0, [r8, #20]
   113dc:	rev16	ip, ip
   113e0:	str	lr, [sp]
   113e4:	str	lr, [sp, #4]
   113e8:	str	r4, [sp, #8]
   113ec:	strh	ip, [r7, #2]
   113f0:	bl	111fc <getnameinfo@plt>
   113f4:	ldr	r1, [sp, #16]
   113f8:	movw	r2, #45880	; 0xb338
   113fc:	movt	r2, #2
   11400:	movw	r0, #39256	; 0x9958
   11404:	movt	r0, #1
   11408:	ldr	r3, [r5, #4]
   1140c:	ldr	r1, [r1, #24]
   11410:	cmp	r1, #0
   11414:	moveq	r1, r9
   11418:	bl	10ff8 <printf@plt>
   1141c:	mov	r0, r9
   11420:	bl	17558 <argp_parse@@Base+0xfe4>
   11424:	ldr	r0, [sp, #16]
   11428:	bl	1125c <freeaddrinfo@plt>
   1142c:	mov	r0, r7
   11430:	bl	126cc <__assert_fail@plt+0x1434>
   11434:	ldr	lr, [r6, #4]
   11438:	add	r0, sp, #52	; 0x34
   1143c:	ldm	r7, {r1, r2, r3}
   11440:	ldr	ip, [r7, #12]
   11444:	stm	sp, {ip, lr}
   11448:	bl	11a7c <__assert_fail@plt+0x7e4>
   1144c:	ldr	r2, [r6, #24]
   11450:	movw	r3, #45876	; 0xb334
   11454:	movt	r3, #2
   11458:	mvn	r1, #0
   1145c:	str	r1, [r3]
   11460:	cmp	r2, #0
   11464:	bne	114d0 <__assert_fail@plt+0x238>
   11468:	ldr	r2, [r5, #4]
   1146c:	cmp	r2, #0
   11470:	bgt	11484 <__assert_fail@plt+0x1ec>
   11474:	b	114f0 <__assert_fail@plt+0x258>
   11478:	ldr	r2, [r5, #4]
   1147c:	cmp	r2, r4
   11480:	blt	114f0 <__assert_fail@plt+0x258>
   11484:	mov	r1, r4
   11488:	add	r0, sp, #52	; 0x34
   1148c:	ldr	r3, [r5, #12]
   11490:	bl	12274 <__assert_fail@plt+0xfdc>
   11494:	add	r0, sp, #52	; 0x34
   11498:	bl	125c0 <__assert_fail@plt+0x1328>
   1149c:	ldr	r3, [sp, #60]	; 0x3c
   114a0:	cmp	r3, #0
   114a4:	bne	114c0 <__assert_fail@plt+0x228>
   114a8:	ldrh	r3, [sp, #70]	; 0x46
   114ac:	rev16	r3, r3
   114b0:	uxth	r3, r3
   114b4:	add	r3, r3, #1
   114b8:	rev16	r3, r3
   114bc:	strh	r3, [sp, #70]	; 0x46
   114c0:	ldr	r3, [r6, #24]
   114c4:	add	r4, r4, #1
   114c8:	cmp	r3, #0
   114cc:	beq	11478 <__assert_fail@plt+0x1e0>
   114d0:	mov	r0, #0
   114d4:	bl	1116c <exit@plt>
   114d8:	movw	r2, #39240	; 0x9948
   114dc:	movt	r2, #1
   114e0:	mov	r1, #0
   114e4:	mov	r0, #1
   114e8:	bl	110f4 <error@plt>
   114ec:	b	11354 <__assert_fail@plt+0xbc>
   114f0:	mov	r0, #1
   114f4:	bl	1116c <exit@plt>
   114f8:	movw	r2, #39240	; 0x9948
   114fc:	movt	r2, #1
   11500:	mov	r1, #0
   11504:	mov	r0, #1
   11508:	bl	110f4 <error@plt>
   1150c:	b	11398 <__assert_fail@plt+0x100>
   11510:	andeq	fp, r2, r8, lsr #2
   11514:	andeq	fp, r2, r0, lsr r1
   11518:	mov	fp, #0
   1151c:	mov	lr, #0
   11520:	pop	{r1}		; (ldr r1, [sp], #4)
   11524:	mov	r2, sp
   11528:	push	{r2}		; (str r2, [sp, #-4]!)
   1152c:	push	{r0}		; (str r0, [sp, #-4]!)
   11530:	ldr	ip, [pc, #16]	; 11548 <__assert_fail@plt+0x2b0>
   11534:	push	{ip}		; (str ip, [sp, #-4]!)
   11538:	ldr	r0, [pc, #12]	; 1154c <__assert_fail@plt+0x2b4>
   1153c:	ldr	r3, [pc, #12]	; 11550 <__assert_fail@plt+0x2b8>
   11540:	bl	11118 <__libc_start_main@plt>
   11544:	bl	1128c <abort@plt>
   11548:	andeq	r9, r1, r4, asr r6
   1154c:	andeq	r1, r1, r8, lsr #5
   11550:	strdeq	r9, [r1], -r4
   11554:	ldr	r3, [pc, #20]	; 11570 <__assert_fail@plt+0x2d8>
   11558:	ldr	r2, [pc, #20]	; 11574 <__assert_fail@plt+0x2dc>
   1155c:	add	r3, pc, r3
   11560:	ldr	r2, [r3, r2]
   11564:	cmp	r2, #0
   11568:	bxeq	lr
   1156c:	b	1113c <__gmon_start__@plt>
   11570:	muleq	r1, ip, sl
   11574:	andeq	r0, r0, r4, lsl #2
   11578:	ldr	r0, [pc, #24]	; 11598 <__assert_fail@plt+0x300>
   1157c:	ldr	r3, [pc, #24]	; 1159c <__assert_fail@plt+0x304>
   11580:	cmp	r3, r0
   11584:	bxeq	lr
   11588:	ldr	r3, [pc, #16]	; 115a0 <__assert_fail@plt+0x308>
   1158c:	cmp	r3, #0
   11590:	bxeq	lr
   11594:	bx	r3
   11598:	muleq	r2, r0, r2
   1159c:	muleq	r2, r0, r2
   115a0:	andeq	r0, r0, r0
   115a4:	ldr	r0, [pc, #36]	; 115d0 <__assert_fail@plt+0x338>
   115a8:	ldr	r1, [pc, #36]	; 115d4 <__assert_fail@plt+0x33c>
   115ac:	sub	r1, r1, r0
   115b0:	asr	r1, r1, #2
   115b4:	add	r1, r1, r1, lsr #31
   115b8:	asrs	r1, r1, #1
   115bc:	bxeq	lr
   115c0:	ldr	r3, [pc, #16]	; 115d8 <__assert_fail@plt+0x340>
   115c4:	cmp	r3, #0
   115c8:	bxeq	lr
   115cc:	bx	r3
   115d0:	muleq	r2, r0, r2
   115d4:	muleq	r2, r0, r2
   115d8:	andeq	r0, r0, r0
   115dc:	push	{r4, lr}
   115e0:	ldr	r4, [pc, #24]	; 11600 <__assert_fail@plt+0x368>
   115e4:	ldrb	r3, [r4]
   115e8:	cmp	r3, #0
   115ec:	popne	{r4, pc}
   115f0:	bl	11578 <__assert_fail@plt+0x2e0>
   115f4:	mov	r3, #1
   115f8:	strb	r3, [r4]
   115fc:	pop	{r4, pc}
   11600:	andeq	fp, r2, r0, lsr #5
   11604:	b	115a4 <__assert_fail@plt+0x30c>
   11608:	cmp	r0, #109	; 0x6d
   1160c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11610:	mov	r5, r1
   11614:	strd	r6, [sp, #8]
   11618:	str	r8, [sp, #16]
   1161c:	str	lr, [sp, #20]
   11620:	sub	sp, sp, #8
   11624:	beq	117fc <__assert_fail@plt+0x564>
   11628:	mov	r4, r0
   1162c:	mov	r6, r2
   11630:	ble	11680 <__assert_fail@plt+0x3e8>
   11634:	cmp	r0, #116	; 0x74
   11638:	beq	11850 <__assert_fail@plt+0x5b8>
   1163c:	ble	11700 <__assert_fail@plt+0x468>
   11640:	cmp	r0, #256	; 0x100
   11644:	beq	118a0 <__assert_fail@plt+0x608>
   11648:	mov	r3, #4
   1164c:	movt	r3, #256	; 0x100
   11650:	cmp	r0, r3
   11654:	beq	118b8 <__assert_fail@plt+0x620>
   11658:	cmp	r0, #119	; 0x77
   1165c:	beq	118e0 <__assert_fail@plt+0x648>
   11660:	mov	r4, #7
   11664:	mov	r0, r4
   11668:	add	sp, sp, #8
   1166c:	ldrd	r4, [sp]
   11670:	ldrd	r6, [sp, #8]
   11674:	ldr	r8, [sp, #16]
   11678:	add	sp, sp, #20
   1167c:	pop	{pc}		; (ldr pc, [sp], #4)
   11680:	cmp	r0, #77	; 0x4d
   11684:	beq	1192c <__assert_fail@plt+0x694>
   11688:	ble	11750 <__assert_fail@plt+0x4b8>
   1168c:	cmp	r0, #102	; 0x66
   11690:	beq	1196c <__assert_fail@plt+0x6d4>
   11694:	cmp	r0, #103	; 0x67
   11698:	bne	11660 <__assert_fail@plt+0x3c8>
   1169c:	movw	r6, #45732	; 0xb2a4
   116a0:	movt	r6, #2
   116a4:	ldr	r7, [r6]
   116a8:	cmp	r7, #0
   116ac:	beq	119f0 <__assert_fail@plt+0x758>
   116b0:	mov	r0, r7
   116b4:	mov	r4, #0
   116b8:	bl	11178 <strlen@plt>
   116bc:	mov	r8, r0
   116c0:	mov	r0, r5
   116c4:	bl	11178 <strlen@plt>
   116c8:	add	r1, r0, r8
   116cc:	mov	r0, r7
   116d0:	add	r1, r1, #3
   116d4:	bl	17c38 <argp_parse@@Base+0x16c4>
   116d8:	mov	r3, #44	; 0x2c
   116dc:	str	r0, [r6]
   116e0:	mov	r1, r5
   116e4:	strb	r3, [r0, r8]
   116e8:	ldr	r0, [r6]
   116ec:	add	r0, r0, r8
   116f0:	strb	r4, [r0, #1]
   116f4:	ldr	r0, [r6]
   116f8:	bl	110dc <strcat@plt>
   116fc:	b	11664 <__assert_fail@plt+0x3cc>
   11700:	cmp	r0, #112	; 0x70
   11704:	beq	11778 <__assert_fail@plt+0x4e0>
   11708:	cmp	r0, #113	; 0x71
   1170c:	bne	11660 <__assert_fail@plt+0x3c8>
   11710:	mov	r2, #10
   11714:	add	r1, sp, #4
   11718:	mov	r0, r5
   1171c:	movw	r4, #45328	; 0xb110
   11720:	movt	r4, #2
   11724:	bl	10fe0 <strtol@plt>
   11728:	ldr	r3, [sp, #4]
   1172c:	str	r0, [r4, #12]
   11730:	ldrb	r2, [r3]
   11734:	cmp	r2, #0
   11738:	bne	119d4 <__assert_fail@plt+0x73c>
   1173c:	sub	r0, r0, #1
   11740:	cmp	r0, #9
   11744:	bhi	11a04 <__assert_fail@plt+0x76c>
   11748:	mov	r4, #0
   1174c:	b	11664 <__assert_fail@plt+0x3cc>
   11750:	cmp	r0, #0
   11754:	beq	117dc <__assert_fail@plt+0x544>
   11758:	cmp	r0, #73	; 0x49
   1175c:	bne	11660 <__assert_fail@plt+0x3c8>
   11760:	movw	r3, #45732	; 0xb2a4
   11764:	movt	r3, #2
   11768:	mov	r2, #1
   1176c:	mov	r4, #0
   11770:	str	r2, [r3, #4]
   11774:	b	11664 <__assert_fail@plt+0x3cc>
   11778:	mov	r2, #0
   1177c:	add	r1, sp, #4
   11780:	mov	r0, r5
   11784:	bl	10fe0 <strtol@plt>
   11788:	ldr	r1, [sp, #4]
   1178c:	movw	r2, #45328	; 0xb110
   11790:	movt	r2, #2
   11794:	sub	r3, r0, #1
   11798:	str	r0, [r2, #8]
   1179c:	cmp	r3, #65536	; 0x10000
   117a0:	movcc	r3, #0
   117a4:	movcs	r3, #1
   117a8:	ldrb	r2, [r1]
   117ac:	cmp	r2, #0
   117b0:	movne	r3, #1
   117b4:	cmp	r3, #0
   117b8:	beq	11748 <__assert_fail@plt+0x4b0>
   117bc:	mov	r3, r5
   117c0:	movw	r2, #38708	; 0x9734
   117c4:	movt	r2, #1
   117c8:	mov	r1, #0
   117cc:	mov	r0, #1
   117d0:	mov	r4, #0
   117d4:	bl	110f4 <error@plt>
   117d8:	b	11664 <__assert_fail@plt+0x3cc>
   117dc:	mov	r3, #1
   117e0:	movw	r6, #45732	; 0xb2a4
   117e4:	movt	r6, #2
   117e8:	mov	r0, r1
   117ec:	strb	r3, [r6, #12]
   117f0:	bl	1801c <argp_parse@@Base+0x1aa8>
   117f4:	str	r0, [r6, #16]
   117f8:	b	11664 <__assert_fail@plt+0x3cc>
   117fc:	mov	r2, #0
   11800:	add	r1, sp, #4
   11804:	mov	r0, r5
   11808:	bl	10fe0 <strtol@plt>
   1180c:	ldr	r1, [sp, #4]
   11810:	movw	r3, #45328	; 0xb110
   11814:	movt	r3, #2
   11818:	sub	r2, r0, #1
   1181c:	str	r0, [r3, #4]
   11820:	ldrb	r3, [r1]
   11824:	cmp	r2, #254	; 0xfe
   11828:	cmpls	r3, #0
   1182c:	beq	11748 <__assert_fail@plt+0x4b0>
   11830:	mov	r3, r5
   11834:	movw	r2, #38684	; 0x971c
   11838:	movt	r2, #1
   1183c:	mov	r1, #0
   11840:	mov	r0, #1
   11844:	mov	r4, #0
   11848:	bl	110f4 <error@plt>
   1184c:	b	11664 <__assert_fail@plt+0x3cc>
   11850:	mov	r2, #0
   11854:	add	r1, sp, #4
   11858:	mov	r0, r5
   1185c:	bl	10fe0 <strtol@plt>
   11860:	ldr	r2, [sp, #4]
   11864:	movw	r3, #45328	; 0xb110
   11868:	movt	r3, #2
   1186c:	str	r0, [r3, #16]
   11870:	ldrb	r3, [r2]
   11874:	cmp	r0, #255	; 0xff
   11878:	cmpls	r3, #0
   1187c:	beq	11748 <__assert_fail@plt+0x4b0>
   11880:	mov	r3, r5
   11884:	movw	r2, #38812	; 0x979c
   11888:	movt	r2, #1
   1188c:	mov	r1, #0
   11890:	mov	r0, #1
   11894:	mov	r4, #0
   11898:	bl	110f4 <error@plt>
   1189c:	b	11664 <__assert_fail@plt+0x3cc>
   118a0:	movw	r3, #45732	; 0xb2a4
   118a4:	movt	r3, #2
   118a8:	mov	r2, #1
   118ac:	mov	r4, #0
   118b0:	str	r2, [r3, #8]
   118b4:	b	11664 <__assert_fail@plt+0x3cc>
   118b8:	movw	r3, #45732	; 0xb2a4
   118bc:	movt	r3, #2
   118c0:	ldrb	r4, [r3, #12]
   118c4:	cmp	r4, #0
   118c8:	bne	11748 <__assert_fail@plt+0x4b0>
   118cc:	mov	r0, r2
   118d0:	movw	r1, #38896	; 0x97f0
   118d4:	movt	r1, #1
   118d8:	bl	15e5c <argp_error@@Base>
   118dc:	b	11664 <__assert_fail@plt+0x3cc>
   118e0:	mov	r2, #0
   118e4:	add	r1, sp, #4
   118e8:	mov	r0, r5
   118ec:	bl	10fe0 <strtol@plt>
   118f0:	ldr	r2, [sp, #4]
   118f4:	movw	r3, #45328	; 0xb110
   118f8:	movt	r3, #2
   118fc:	str	r0, [r3, #20]
   11900:	ldrb	r3, [r2]
   11904:	cmp	r0, #60	; 0x3c
   11908:	cmpls	r3, #0
   1190c:	beq	11748 <__assert_fail@plt+0x4b0>
   11910:	mov	r3, r5
   11914:	movw	r2, #38864	; 0x97d0
   11918:	movt	r2, #1
   1191c:	mov	r1, #0
   11920:	mov	r0, #1
   11924:	bl	110f4 <error@plt>
   11928:	b	11748 <__assert_fail@plt+0x4b0>
   1192c:	movw	r1, #38836	; 0x97b4
   11930:	movt	r1, #1
   11934:	mov	r0, r5
   11938:	bl	10fd4 <strcmp@plt>
   1193c:	subs	r4, r0, #0
   11940:	beq	119c0 <__assert_fail@plt+0x728>
   11944:	mov	r0, r5
   11948:	movw	r1, #38844	; 0x97bc
   1194c:	movt	r1, #1
   11950:	bl	10fd4 <strcmp@plt>
   11954:	subs	r4, r0, #0
   11958:	bne	11a20 <__assert_fail@plt+0x788>
   1195c:	movw	r3, #45732	; 0xb2a4
   11960:	movt	r3, #2
   11964:	str	r4, [r3, #4]
   11968:	b	11664 <__assert_fail@plt+0x3cc>
   1196c:	mov	r2, #0
   11970:	add	r1, sp, #4
   11974:	mov	r0, r5
   11978:	bl	10fe0 <strtol@plt>
   1197c:	ldr	r1, [sp, #4]
   11980:	movw	r3, #45328	; 0xb110
   11984:	movt	r3, #2
   11988:	sub	r2, r0, #1
   1198c:	str	r0, [r3]
   11990:	ldrb	r3, [r1]
   11994:	cmp	r2, #254	; 0xfe
   11998:	cmpls	r3, #0
   1199c:	beq	11748 <__assert_fail@plt+0x4b0>
   119a0:	mov	r3, r5
   119a4:	movw	r2, #38656	; 0x9700
   119a8:	movt	r2, #1
   119ac:	mov	r1, #0
   119b0:	mov	r0, #1
   119b4:	mov	r4, #0
   119b8:	bl	110f4 <error@plt>
   119bc:	b	11664 <__assert_fail@plt+0x3cc>
   119c0:	movw	r3, #45732	; 0xb2a4
   119c4:	movt	r3, #2
   119c8:	mov	r2, #1
   119cc:	str	r2, [r3, #4]
   119d0:	b	11664 <__assert_fail@plt+0x3cc>
   119d4:	mov	r0, r6
   119d8:	mov	r2, r5
   119dc:	movw	r1, #38736	; 0x9750
   119e0:	movt	r1, #1
   119e4:	bl	15e5c <argp_error@@Base>
   119e8:	ldr	r0, [r4, #12]
   119ec:	b	1173c <__assert_fail@plt+0x4a4>
   119f0:	mov	r0, r1
   119f4:	mov	r4, r7
   119f8:	bl	1801c <argp_parse@@Base+0x1aa8>
   119fc:	str	r0, [r6]
   11a00:	b	11664 <__assert_fail@plt+0x3cc>
   11a04:	movw	r2, #38768	; 0x9770
   11a08:	movt	r2, #1
   11a0c:	mov	r1, #0
   11a10:	mov	r0, #1
   11a14:	bl	110f4 <error@plt>
   11a18:	mov	r4, #0
   11a1c:	b	11664 <__assert_fail@plt+0x3cc>
   11a20:	mov	r0, r6
   11a24:	movw	r1, #38848	; 0x97c0
   11a28:	movt	r1, #1
   11a2c:	mov	r4, #0
   11a30:	bl	15e5c <argp_error@@Base>
   11a34:	b	11664 <__assert_fail@plt+0x3cc>
   11a38:	mov	r2, #2
   11a3c:	mov	r1, #4
   11a40:	str	r4, [sp, #-8]!
   11a44:	mov	r4, r0
   11a48:	str	lr, [sp, #4]
   11a4c:	bl	11094 <gethostbyaddr@plt>
   11a50:	cmp	r0, #0
   11a54:	beq	11a68 <__assert_fail@plt+0x7d0>
   11a58:	ldr	r4, [sp]
   11a5c:	add	sp, sp, #4
   11a60:	ldr	r0, [r0]
   11a64:	pop	{pc}		; (ldr pc, [sp], #4)
   11a68:	ldr	r0, [r4]
   11a6c:	ldr	r4, [sp]
   11a70:	ldr	lr, [sp, #4]
   11a74:	add	sp, sp, #8
   11a78:	b	11070 <inet_ntoa@plt>
   11a7c:	sub	sp, sp, #16
   11a80:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a84:	subs	r4, r0, #0
   11a88:	strd	r6, [sp, #8]
   11a8c:	str	r8, [sp, #16]
   11a90:	str	lr, [sp, #20]
   11a94:	sub	sp, sp, #8
   11a98:	add	ip, sp, #36	; 0x24
   11a9c:	ldr	lr, [sp, #52]	; 0x34
   11aa0:	stm	ip, {r1, r2, r3}
   11aa4:	beq	11d6c <__assert_fail@plt+0xad4>
   11aa8:	movw	r5, #45328	; 0xb110
   11aac:	movt	r5, #2
   11ab0:	mov	r7, #0
   11ab4:	cmp	lr, #0
   11ab8:	ldr	r6, [r5]
   11abc:	str	lr, [r4, #8]
   11ac0:	ldrd	r0, [ip, #8]
   11ac4:	str	r7, [r4, #12]
   11ac8:	add	r7, r4, #48	; 0x30
   11acc:	ldrd	r2, [sp, #36]	; 0x24
   11ad0:	str	r6, [r4, #48]	; 0x30
   11ad4:	strd	r2, [r4, #16]
   11ad8:	strd	r0, [r4, #24]
   11adc:	beq	11b2c <__assert_fail@plt+0x894>
   11ae0:	cmp	lr, #1
   11ae4:	bls	11b74 <__assert_fail@plt+0x8dc>
   11ae8:	ldr	r3, [r5, #16]
   11aec:	ldr	r6, [r4]
   11af0:	cmp	r3, #0
   11af4:	bge	11be0 <__assert_fail@plt+0x948>
   11af8:	movw	r3, #45732	; 0xb2a4
   11afc:	movt	r3, #2
   11b00:	ldr	r1, [r3, #20]
   11b04:	cmp	r1, #0
   11b08:	bne	11c20 <__assert_fail@plt+0x988>
   11b0c:	add	sp, sp, #8
   11b10:	ldrd	r4, [sp]
   11b14:	ldrd	r6, [sp, #8]
   11b18:	ldr	r8, [sp, #16]
   11b1c:	ldr	lr, [sp, #20]
   11b20:	add	sp, sp, #24
   11b24:	add	sp, sp, #16
   11b28:	bx	lr
   11b2c:	mov	r1, #2
   11b30:	mov	r2, lr
   11b34:	mov	r0, r1
   11b38:	bl	11274 <socket@plt>
   11b3c:	cmp	r0, #0
   11b40:	str	r0, [r4, #4]
   11b44:	blt	11c90 <__assert_fail@plt+0x9f8>
   11b48:	mov	r1, #4
   11b4c:	mov	r3, r7
   11b50:	mov	r2, #2
   11b54:	str	r1, [sp]
   11b58:	mov	r1, #0
   11b5c:	bl	10fec <setsockopt@plt>
   11b60:	cmp	r0, #0
   11b64:	blt	11cb0 <__assert_fail@plt+0xa18>
   11b68:	ldr	r3, [r4, #8]
   11b6c:	cmp	r3, #1
   11b70:	bhi	11ae8 <__assert_fail@plt+0x850>
   11b74:	movw	r0, #38836	; 0x97b4
   11b78:	movt	r0, #1
   11b7c:	bl	11004 <getprotobyname@plt>
   11b80:	subs	r6, r0, #0
   11b84:	beq	11c78 <__assert_fail@plt+0x9e0>
   11b88:	mov	r1, #3
   11b8c:	mov	r0, #2
   11b90:	ldr	r2, [r6, #8]
   11b94:	bl	11274 <socket@plt>
   11b98:	cmp	r0, #0
   11b9c:	str	r0, [r4]
   11ba0:	blt	11ccc <__assert_fail@plt+0xa34>
   11ba4:	mov	r1, #4
   11ba8:	mov	r3, r7
   11bac:	mov	r2, #2
   11bb0:	str	r1, [sp]
   11bb4:	mov	r1, #0
   11bb8:	bl	10fec <setsockopt@plt>
   11bbc:	cmp	r0, #0
   11bc0:	blt	11d4c <__assert_fail@plt+0xab4>
   11bc4:	ldr	r3, [r4, #8]
   11bc8:	cmp	r3, #0
   11bcc:	ldr	r6, [r4, #4]
   11bd0:	bne	11ae8 <__assert_fail@plt+0x850>
   11bd4:	ldr	r3, [r5, #16]
   11bd8:	cmp	r3, #0
   11bdc:	blt	11af8 <__assert_fail@plt+0x860>
   11be0:	mov	ip, #4
   11be4:	ldr	r3, [pc, #416]	; 11d8c <__assert_fail@plt+0xaf4>
   11be8:	mov	r2, #1
   11bec:	mov	r1, #0
   11bf0:	mov	r0, r6
   11bf4:	str	ip, [sp]
   11bf8:	bl	10fec <setsockopt@plt>
   11bfc:	cmp	r0, #0
   11c00:	bge	11af8 <__assert_fail@plt+0x860>
   11c04:	bl	1119c <__errno_location@plt>
   11c08:	movw	r2, #38996	; 0x9854
   11c0c:	movt	r2, #1
   11c10:	ldr	r1, [r0]
   11c14:	mov	r0, #0
   11c18:	bl	110f4 <error@plt>
   11c1c:	b	11af8 <__assert_fail@plt+0x860>
   11c20:	mov	r0, r6
   11c24:	movw	r3, #45832	; 0xb308
   11c28:	movt	r3, #2
   11c2c:	mov	r2, #4
   11c30:	str	r1, [sp]
   11c34:	mov	r1, #0
   11c38:	bl	10fec <setsockopt@plt>
   11c3c:	cmp	r0, #0
   11c40:	bge	11b0c <__assert_fail@plt+0x874>
   11c44:	bl	1119c <__errno_location@plt>
   11c48:	ldr	r1, [r0]
   11c4c:	movw	r2, #39016	; 0x9868
   11c50:	movt	r2, #1
   11c54:	mov	r0, #0
   11c58:	add	sp, sp, #8
   11c5c:	ldrd	r4, [sp]
   11c60:	ldrd	r6, [sp, #8]
   11c64:	ldr	r8, [sp, #16]
   11c68:	ldr	lr, [sp, #20]
   11c6c:	add	sp, sp, #24
   11c70:	add	sp, sp, #16
   11c74:	b	110f4 <error@plt>
   11c78:	mov	r1, r6
   11c7c:	movw	r2, #38960	; 0x9830
   11c80:	movt	r2, #1
   11c84:	mov	r0, #1
   11c88:	bl	110f4 <error@plt>
   11c8c:	b	11bc4 <__assert_fail@plt+0x92c>
   11c90:	bl	1119c <__errno_location@plt>
   11c94:	movw	r2, #38940	; 0x981c
   11c98:	movt	r2, #1
   11c9c:	ldr	r1, [r0]
   11ca0:	mov	r0, #1
   11ca4:	bl	110f4 <error@plt>
   11ca8:	ldr	r0, [r4, #4]
   11cac:	b	11b48 <__assert_fail@plt+0x8b0>
   11cb0:	bl	1119c <__errno_location@plt>
   11cb4:	movw	r2, #38948	; 0x9824
   11cb8:	movt	r2, #1
   11cbc:	ldr	r1, [r0]
   11cc0:	mov	r0, #1
   11cc4:	bl	110f4 <error@plt>
   11cc8:	b	11b68 <__assert_fail@plt+0x8d0>
   11ccc:	bl	1119c <__errno_location@plt>
   11cd0:	ldr	r1, [r0]
   11cd4:	mov	r8, r0
   11cd8:	cmp	r1, #13
   11cdc:	cmpne	r1, #1
   11ce0:	beq	11cfc <__assert_fail@plt+0xa64>
   11ce4:	mov	r0, #1
   11ce8:	movw	r2, #38940	; 0x981c
   11cec:	movt	r2, #1
   11cf0:	bl	110f4 <error@plt>
   11cf4:	ldr	r0, [r4]
   11cf8:	b	11ba4 <__assert_fail@plt+0x90c>
   11cfc:	mov	r3, #0
   11d00:	mov	r1, #2
   11d04:	mov	r0, r1
   11d08:	str	r3, [r8]
   11d0c:	ldr	r2, [r6, #8]
   11d10:	bl	11274 <socket@plt>
   11d14:	ldr	r3, [r4, #12]
   11d18:	str	r0, [r4]
   11d1c:	add	r3, r3, #1
   11d20:	str	r3, [r4, #12]
   11d24:	ldr	r3, [r8]
   11d28:	cmp	r3, #93	; 0x5d
   11d2c:	bne	11d3c <__assert_fail@plt+0xaa4>
   11d30:	mov	r3, #1
   11d34:	str	r3, [r8]
   11d38:	ldr	r0, [r4]
   11d3c:	cmp	r0, #0
   11d40:	bge	11ba4 <__assert_fail@plt+0x90c>
   11d44:	ldr	r1, [r8]
   11d48:	b	11ce4 <__assert_fail@plt+0xa4c>
   11d4c:	bl	1119c <__errno_location@plt>
   11d50:	movw	r2, #38948	; 0x9824
   11d54:	movt	r2, #1
   11d58:	ldr	r1, [r0]
   11d5c:	mov	r0, #1
   11d60:	bl	110f4 <error@plt>
   11d64:	ldr	r3, [r4, #8]
   11d68:	b	11bc8 <__assert_fail@plt+0x930>
   11d6c:	movw	r3, #38500	; 0x9664
   11d70:	movt	r3, #1
   11d74:	movw	r1, #38920	; 0x9808
   11d78:	movt	r1, #1
   11d7c:	movw	r0, #38936	; 0x9818
   11d80:	movt	r0, #1
   11d84:	movw	r2, #475	; 0x1db
   11d88:	bl	11298 <__assert_fail@plt>
   11d8c:	andeq	fp, r2, r0, lsr #2
   11d90:	cmp	r0, #0
   11d94:	beq	11dac <__assert_fail@plt+0xb14>
   11d98:	movw	r3, #33434	; 0x829a
   11d9c:	cmp	r1, #1024	; 0x400
   11da0:	movcc	r1, r3
   11da4:	strh	r1, [r0, #18]
   11da8:	bx	lr
   11dac:	movw	r1, #38920	; 0x9808
   11db0:	movt	r1, #1
   11db4:	ldr	r3, [pc, #20]	; 11dd0 <__assert_fail@plt+0xb38>
   11db8:	movw	r0, #38936	; 0x9818
   11dbc:	movt	r0, #1
   11dc0:	str	r4, [sp, #-8]!
   11dc4:	movw	r2, #554	; 0x22a
   11dc8:	str	lr, [sp, #4]
   11dcc:	bl	11298 <__assert_fail@plt>
   11dd0:	andeq	r9, r1, r0, ror r6
   11dd4:	strd	r4, [sp, #-16]!
   11dd8:	subs	r4, r0, #0
   11ddc:	str	r6, [sp, #8]
   11de0:	str	lr, [sp, #12]
   11de4:	sub	sp, sp, #160	; 0xa0
   11de8:	beq	12068 <__assert_fail@plt+0xdd0>
   11dec:	mov	ip, r4
   11df0:	add	r3, sp, #20
   11df4:	ldr	r0, [ip], #32
   11df8:	mov	r5, r2
   11dfc:	mov	r2, #16
   11e00:	mov	r6, r1
   11e04:	add	r1, sp, #24
   11e08:	str	ip, [sp]
   11e0c:	str	r3, [sp, #4]
   11e10:	mov	r3, #0
   11e14:	str	r2, [sp, #20]
   11e18:	mov	r2, #136	; 0x88
   11e1c:	bl	110a0 <recvfrom@plt>
   11e20:	cmp	r0, #0
   11e24:	blt	11f50 <__assert_fail@plt+0xcb8>
   11e28:	add	r3, sp, #16
   11e2c:	add	r2, sp, #12
   11e30:	add	r0, sp, #24
   11e34:	mov	r1, #136	; 0x88
   11e38:	bl	128ec <__assert_fail@plt+0x1654>
   11e3c:	ldr	r3, [sp, #16]
   11e40:	ldr	r0, [r4, #8]
   11e44:	ldrb	r2, [r3]
   11e48:	cmp	r0, #0
   11e4c:	str	r2, [r6]
   11e50:	ldrb	r2, [r3, #1]
   11e54:	str	r2, [r5]
   11e58:	beq	11f1c <__assert_fail@plt+0xc84>
   11e5c:	cmp	r0, #1
   11e60:	beq	11e7c <__assert_fail@plt+0xbe4>
   11e64:	mov	r0, #0
   11e68:	add	sp, sp, #160	; 0xa0
   11e6c:	ldrd	r4, [sp]
   11e70:	ldr	r6, [sp, #8]
   11e74:	add	sp, sp, #12
   11e78:	pop	{pc}		; (ldr pc, [sp], #4)
   11e7c:	ldrb	r0, [r3]
   11e80:	cmp	r0, #11
   11e84:	cmpne	r0, #0
   11e88:	bne	11f6c <__assert_fail@plt+0xcd4>
   11e8c:	cmp	r0, #0
   11e90:	bne	11fcc <__assert_fail@plt+0xd34>
   11e94:	ldrh	r2, [r3, #6]
   11e98:	movw	r1, #45876	; 0xb334
   11e9c:	movt	r1, #2
   11ea0:	ldr	r1, [r1]
   11ea4:	rev16	r2, r2
   11ea8:	uxth	r2, r2
   11eac:	cmp	r2, r1
   11eb0:	bne	11f48 <__assert_fail@plt+0xcb0>
   11eb4:	ldrh	r3, [r3, #4]
   11eb8:	movw	r2, #45872	; 0xb330
   11ebc:	movt	r2, #2
   11ec0:	ldr	r2, [r2]
   11ec4:	rev16	r3, r3
   11ec8:	uxth	r3, r3
   11ecc:	cmp	r3, r2
   11ed0:	beq	11ee0 <__assert_fail@plt+0xc48>
   11ed4:	ldr	r3, [r4, #12]
   11ed8:	cmp	r3, #0
   11edc:	beq	11f48 <__assert_fail@plt+0xcb0>
   11ee0:	ldr	r2, [sp, #12]
   11ee4:	movw	r3, #45816	; 0xb2f8
   11ee8:	movt	r3, #2
   11eec:	ldr	r3, [r3, #4]
   11ef0:	ldr	r2, [r2, #12]
   11ef4:	cmp	r2, r3
   11ef8:	bne	11e64 <__assert_fail@plt+0xbcc>
   11efc:	movw	r3, #45732	; 0xb2a4
   11f00:	movt	r3, #2
   11f04:	mov	r2, #1
   11f08:	sub	r0, r0, #3
   11f0c:	clz	r0, r0
   11f10:	lsr	r0, r0, #5
   11f14:	str	r2, [r3, #24]
   11f18:	b	11e68 <__assert_fail@plt+0xbd0>
   11f1c:	ldrb	r1, [r3]
   11f20:	and	r2, r1, #247	; 0xf7
   11f24:	cmp	r2, #3
   11f28:	bne	11f48 <__assert_fail@plt+0xcb0>
   11f2c:	ldrb	r2, [r3, #8]
   11f30:	ldrh	ip, [r4, #18]
   11f34:	and	r2, r2, #15
   11f38:	add	r2, r3, r2, lsl #2
   11f3c:	ldrh	r2, [r2, #10]
   11f40:	cmp	r2, ip
   11f44:	beq	11fa4 <__assert_fail@plt+0xd0c>
   11f48:	mvn	r0, #0
   11f4c:	b	11e68 <__assert_fail@plt+0xbd0>
   11f50:	bl	1119c <__errno_location@plt>
   11f54:	movw	r2, #39040	; 0x9880
   11f58:	movt	r2, #1
   11f5c:	ldr	r1, [r0]
   11f60:	mov	r0, #1
   11f64:	bl	110f4 <error@plt>
   11f68:	b	11e28 <__assert_fail@plt+0xb90>
   11f6c:	cmp	r0, #3
   11f70:	bne	11f48 <__assert_fail@plt+0xcb0>
   11f74:	ldrb	r2, [r3, #8]
   11f78:	movw	r1, #45872	; 0xb330
   11f7c:	movt	r1, #2
   11f80:	ldr	r1, [r1]
   11f84:	and	r2, r2, #15
   11f88:	add	r3, r3, r2, lsl #2
   11f8c:	ldrh	r3, [r3, #12]
   11f90:	rev16	r3, r3
   11f94:	uxth	r3, r3
   11f98:	cmp	r1, r3
   11f9c:	bne	11f48 <__assert_fail@plt+0xcb0>
   11fa0:	b	11efc <__assert_fail@plt+0xc64>
   11fa4:	cmp	r1, #3
   11fa8:	bne	11e68 <__assert_fail@plt+0xbd0>
   11fac:	movw	r2, #45732	; 0xb2a4
   11fb0:	movt	r2, #2
   11fb4:	mov	r1, #1
   11fb8:	str	r1, [r2, #24]
   11fbc:	ldrb	r0, [r3, #1]
   11fc0:	subs	r0, r0, #3
   11fc4:	movne	r0, #1
   11fc8:	b	11e68 <__assert_fail@plt+0xbd0>
   11fcc:	and	r2, r0, #247	; 0xf7
   11fd0:	cmp	r2, #3
   11fd4:	bne	11ee0 <__assert_fail@plt+0xc48>
   11fd8:	ldrb	r2, [r3, #8]
   11fdc:	add	r3, r3, #8
   11fe0:	movw	ip, #45872	; 0xb330
   11fe4:	movt	ip, #2
   11fe8:	sub	r1, r0, #3
   11fec:	ldr	ip, [ip]
   11ff0:	clz	r1, r1
   11ff4:	lsr	r1, r1, #5
   11ff8:	and	r2, r2, #15
   11ffc:	add	r3, r3, r2, lsl #2
   12000:	ldrh	r2, [r3, #4]
   12004:	rev16	r2, r2
   12008:	uxth	r2, r2
   1200c:	cmp	r2, ip
   12010:	bne	11f48 <__assert_fail@plt+0xcb0>
   12014:	cmp	r0, #11
   12018:	bne	11efc <__assert_fail@plt+0xc64>
   1201c:	ldrh	r3, [r3, #6]
   12020:	movw	r2, #45876	; 0xb334
   12024:	movt	r2, #2
   12028:	ldr	r2, [r2]
   1202c:	rev16	r3, r3
   12030:	uxth	r3, r3
   12034:	cmp	r3, r2
   12038:	bne	11f48 <__assert_fail@plt+0xcb0>
   1203c:	ldr	r2, [sp, #12]
   12040:	movw	r3, #45816	; 0xb2f8
   12044:	movt	r3, #2
   12048:	ldr	r3, [r3, #4]
   1204c:	ldr	r2, [r2, #12]
   12050:	cmp	r2, r3
   12054:	movne	r3, r1
   12058:	orreq	r3, r1, #1
   1205c:	cmp	r3, #0
   12060:	bne	11efc <__assert_fail@plt+0xc64>
   12064:	b	11e64 <__assert_fail@plt+0xbcc>
   12068:	movw	r1, #38920	; 0x9808
   1206c:	movt	r1, #1
   12070:	ldr	r3, [pc, #12]	; 12084 <__assert_fail@plt+0xdec>
   12074:	movw	r0, #38936	; 0x9818
   12078:	movt	r0, #1
   1207c:	movw	r2, #579	; 0x243
   12080:	bl	11298 <__assert_fail@plt>
   12084:	andeq	r9, r1, ip, ror r6
   12088:	strd	r4, [sp, #-20]!	; 0xffffffec
   1208c:	subs	r4, r0, #0
   12090:	strd	r6, [sp, #8]
   12094:	str	lr, [sp, #16]
   12098:	sub	sp, sp, #44	; 0x2c
   1209c:	beq	12254 <__assert_fail@plt+0xfbc>
   120a0:	ldr	r3, [r4, #8]
   120a4:	cmp	r3, #0
   120a8:	beq	1218c <__assert_fail@plt+0xef4>
   120ac:	cmp	r3, #1
   120b0:	beq	120d0 <__assert_fail@plt+0xe38>
   120b4:	mov	r5, #0
   120b8:	mov	r0, r5
   120bc:	add	sp, sp, #44	; 0x2c
   120c0:	ldrd	r4, [sp]
   120c4:	ldrd	r6, [sp, #8]
   120c8:	add	sp, sp, #16
   120cc:	pop	{pc}		; (ldr pc, [sp], #4)
   120d0:	add	r2, sp, #11
   120d4:	mov	r3, #0
   120d8:	strb	r3, [r2, #1]!
   120dc:	add	r3, r3, #1
   120e0:	cmp	r3, #28
   120e4:	bne	120d8 <__assert_fail@plt+0xe40>
   120e8:	ldr	r3, [r4, #12]
   120ec:	cmp	r3, #0
   120f0:	bne	121f8 <__assert_fail@plt+0xf60>
   120f4:	movw	ip, #45876	; 0xb334
   120f8:	movt	ip, #2
   120fc:	ldr	lr, [ip]
   12100:	movw	r3, #45872	; 0xb330
   12104:	movt	r3, #2
   12108:	mov	r1, #28
   1210c:	add	r0, sp, #12
   12110:	ldr	r2, [r3]
   12114:	add	lr, lr, #1
   12118:	mov	r3, lr
   1211c:	str	lr, [ip]
   12120:	bl	12958 <__assert_fail@plt+0x16c0>
   12124:	subs	r5, r0, #0
   12128:	mvnne	r5, #0
   1212c:	bne	120b8 <__assert_fail@plt+0xe20>
   12130:	mov	ip, r4
   12134:	mov	r2, #16
   12138:	ldr	r0, [ip], #16
   1213c:	add	r1, sp, #12
   12140:	mov	r3, r5
   12144:	str	ip, [sp]
   12148:	str	r2, [sp, #4]
   1214c:	mov	r2, #28
   12150:	bl	111d8 <sendto@plt>
   12154:	cmp	r0, #0
   12158:	blt	12230 <__assert_fail@plt+0xf98>
   1215c:	add	r0, r4, #52	; 0x34
   12160:	mov	r1, #0
   12164:	bl	110e8 <gettimeofday@plt>
   12168:	cmp	r0, #0
   1216c:	bge	120b8 <__assert_fail@plt+0xe20>
   12170:	bl	1119c <__errno_location@plt>
   12174:	movw	r2, #39060	; 0x9894
   12178:	movt	r2, #1
   1217c:	ldr	r1, [r0]
   12180:	mov	r0, #1
   12184:	bl	110f4 <error@plt>
   12188:	b	120b8 <__assert_fail@plt+0xe20>
   1218c:	movw	r2, #39076	; 0x98a4
   12190:	movt	r2, #1
   12194:	ldrb	ip, [r2, #8]
   12198:	add	r1, r4, #16
   1219c:	ldrd	r6, [r2]
   121a0:	mov	r2, #16
   121a4:	stm	sp, {r1, r2}
   121a8:	add	r1, sp, #12
   121ac:	mov	r2, #9
   121b0:	ldr	r0, [r4, #4]
   121b4:	strd	r6, [sp, #12]
   121b8:	strb	ip, [sp, #20]
   121bc:	bl	111d8 <sendto@plt>
   121c0:	cmp	r0, #0
   121c4:	blt	1220c <__assert_fail@plt+0xf74>
   121c8:	add	r0, r4, #52	; 0x34
   121cc:	mov	r1, #0
   121d0:	bl	110e8 <gettimeofday@plt>
   121d4:	cmp	r0, #0
   121d8:	bge	120b4 <__assert_fail@plt+0xe1c>
   121dc:	bl	1119c <__errno_location@plt>
   121e0:	movw	r2, #39060	; 0x9894
   121e4:	movt	r2, #1
   121e8:	ldr	r1, [r0]
   121ec:	mov	r0, #1
   121f0:	bl	110f4 <error@plt>
   121f4:	b	120b4 <__assert_fail@plt+0xe1c>
   121f8:	movw	r3, #45816	; 0xb2f8
   121fc:	movt	r3, #2
   12200:	ldr	r3, [r3, #4]
   12204:	str	r3, [sp, #24]
   12208:	b	120f4 <__assert_fail@plt+0xe5c>
   1220c:	bl	1119c <__errno_location@plt>
   12210:	ldr	r1, [r0]
   12214:	cmp	r1, #104	; 0x68
   12218:	beq	121c8 <__assert_fail@plt+0xf30>
   1221c:	movw	r2, #39052	; 0x988c
   12220:	movt	r2, #1
   12224:	mov	r0, #1
   12228:	bl	110f4 <error@plt>
   1222c:	b	121c8 <__assert_fail@plt+0xf30>
   12230:	bl	1119c <__errno_location@plt>
   12234:	ldr	r1, [r0]
   12238:	cmp	r1, #104	; 0x68
   1223c:	beq	1215c <__assert_fail@plt+0xec4>
   12240:	movw	r2, #39052	; 0x988c
   12244:	movt	r2, #1
   12248:	mov	r0, #1
   1224c:	bl	110f4 <error@plt>
   12250:	b	1215c <__assert_fail@plt+0xec4>
   12254:	movw	r1, #38920	; 0x9808
   12258:	movt	r1, #1
   1225c:	ldr	r3, [pc, #12]	; 12270 <__assert_fail@plt+0xfd8>
   12260:	movw	r0, #38936	; 0x9818
   12264:	movt	r0, #1
   12268:	movw	r2, #677	; 0x2a5
   1226c:	bl	11298 <__assert_fail@plt>
   12270:	andeq	r9, r1, r8, lsl #13
   12274:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12278:	mov	r4, r3
   1227c:	strd	r6, [sp, #8]
   12280:	mov	r7, r0
   12284:	movw	r0, #39088	; 0x98b0
   12288:	movt	r0, #1
   1228c:	strd	r8, [sp, #16]
   12290:	strd	sl, [sp, #24]
   12294:	str	lr, [sp, #32]
   12298:	vpush	{d8}
   1229c:	sub	sp, sp, #180	; 0xb4
   122a0:	str	r3, [sp, #16]
   122a4:	bl	10ff8 <printf@plt>
   122a8:	cmp	r4, #0
   122ac:	ble	12410 <__assert_fail@plt+0x1178>
   122b0:	vldr	d8, [pc, #736]	; 12598 <__assert_fail@plt+0x1300>
   122b4:	mov	r3, #0
   122b8:	movw	fp, #45328	; 0xb110
   122bc:	movt	fp, #2
   122c0:	mov	r4, r3
   122c4:	mov	r9, r3
   122c8:	add	r5, sp, #172	; 0xac
   122cc:	str	r3, [sp, #20]
   122d0:	bl	1119c <__errno_location@plt>
   122d4:	mov	r2, r4
   122d8:	str	r0, [sp, #8]
   122dc:	cmp	r7, #0
   122e0:	beq	12588 <__assert_fail@plt+0x12f0>
   122e4:	ldr	r0, [r7]
   122e8:	mov	r8, #1
   122ec:	rsbs	r1, r0, #0
   122f0:	and	r3, r0, #31
   122f4:	and	r1, r1, #31
   122f8:	add	r6, r0, #31
   122fc:	rsbpl	r3, r1, #0
   12300:	cmp	r0, #0
   12304:	movge	r6, r0
   12308:	add	sl, r0, r8
   1230c:	lsl	r8, r8, r3
   12310:	asr	r6, r6, #5
   12314:	add	r3, sp, #44	; 0x2c
   12318:	str	r4, [r3, #4]!
   1231c:	cmp	r5, r3
   12320:	bne	12318 <__assert_fail@plt+0x1080>
   12324:	lsl	r6, r6, #2
   12328:	add	r3, sp, #176	; 0xb0
   1232c:	cmp	r2, #0
   12330:	ldr	r1, [fp, #20]
   12334:	add	r2, r3, r6
   12338:	ldr	r3, [r2, #-128]	; 0xffffff80
   1233c:	str	r1, [sp, #40]	; 0x28
   12340:	str	r4, [sp, #44]	; 0x2c
   12344:	orr	r3, r3, r8
   12348:	str	r3, [r2, #-128]	; 0xffffff80
   1234c:	beq	12468 <__assert_fail@plt+0x11d0>
   12350:	ldr	r2, [sp, #8]
   12354:	add	ip, sp, #40	; 0x28
   12358:	mov	r3, #0
   1235c:	mov	r0, sl
   12360:	add	r1, sp, #48	; 0x30
   12364:	str	r4, [r2]
   12368:	mov	r2, r3
   1236c:	str	ip, [sp]
   12370:	bl	1107c <select@plt>
   12374:	ldr	r2, [sp, #8]
   12378:	mov	r1, #0
   1237c:	mov	sl, r0
   12380:	add	r0, sp, #32
   12384:	ldr	r3, [r2]
   12388:	str	r3, [sp, #12]
   1238c:	bl	110e8 <gettimeofday@plt>
   12390:	ldr	r1, [sp, #32]
   12394:	ldr	r3, [sp, #36]	; 0x24
   12398:	ldr	ip, [r7, #56]	; 0x38
   1239c:	ldr	r0, [r7, #52]	; 0x34
   123a0:	sub	r3, r3, ip
   123a4:	cmp	r3, #0
   123a8:	sub	r1, r1, r0
   123ac:	str	r3, [sp, #36]	; 0x24
   123b0:	strge	r1, [sp, #32]
   123b4:	bge	123cc <__assert_fail@plt+0x1134>
   123b8:	add	r3, r3, #999424	; 0xf4000
   123bc:	sub	r1, r1, #1
   123c0:	add	r3, r3, #576	; 0x240
   123c4:	str	r1, [sp, #32]
   123c8:	str	r3, [sp, #36]	; 0x24
   123cc:	cmp	sl, #0
   123d0:	blt	12438 <__assert_fail@plt+0x11a0>
   123d4:	beq	12474 <__assert_fail@plt+0x11dc>
   123d8:	add	r3, sp, #176	; 0xb0
   123dc:	add	r6, r3, r6
   123e0:	ldr	r3, [r6, #-128]	; 0xffffff80
   123e4:	tst	r8, r3
   123e8:	bne	12494 <__assert_fail@plt+0x11fc>
   123ec:	movw	r6, #45724	; 0xb29c
   123f0:	movt	r6, #2
   123f4:	ldr	r0, [r6]
   123f8:	add	r9, r9, #1
   123fc:	bl	11010 <fflush@plt>
   12400:	mov	r2, #0
   12404:	ldr	r3, [sp, #16]
   12408:	cmp	r3, r9
   1240c:	bgt	122dc <__assert_fail@plt+0x1044>
   12410:	mov	r0, #10
   12414:	bl	111c0 <putchar@plt>
   12418:	add	sp, sp, #180	; 0xb4
   1241c:	vpop	{d8}
   12420:	ldrd	r4, [sp]
   12424:	ldrd	r6, [sp, #8]
   12428:	ldrd	r8, [sp, #16]
   1242c:	ldrd	sl, [sp, #24]
   12430:	add	sp, sp, #32
   12434:	pop	{pc}		; (ldr pc, [sp], #4)
   12438:	ldr	r3, [sp, #12]
   1243c:	cmp	r3, #4
   12440:	beq	123ec <__assert_fail@plt+0x1154>
   12444:	ldr	r3, [sp, #8]
   12448:	movw	r2, #39096	; 0x98b8
   1244c:	movt	r2, #1
   12450:	mov	r0, #1
   12454:	movw	r6, #45724	; 0xb29c
   12458:	movt	r6, #2
   1245c:	ldr	r1, [r3]
   12460:	bl	110f4 <error@plt>
   12464:	b	123f4 <__assert_fail@plt+0x115c>
   12468:	mov	r0, r7
   1246c:	bl	12088 <__assert_fail@plt+0xdf0>
   12470:	b	12350 <__assert_fail@plt+0x10b8>
   12474:	movw	r0, #39112	; 0x98c8
   12478:	movt	r0, #1
   1247c:	movw	r6, #45724	; 0xb29c
   12480:	movt	r6, #2
   12484:	bl	10ff8 <printf@plt>
   12488:	ldr	r0, [r6]
   1248c:	bl	11010 <fflush@plt>
   12490:	b	123f4 <__assert_fail@plt+0x115c>
   12494:	add	r2, sp, #28
   12498:	add	r1, sp, #24
   1249c:	ldr	r8, [sp, #32]
   124a0:	mov	r0, r7
   124a4:	ldr	sl, [sp, #36]	; 0x24
   124a8:	bl	11dd4 <__assert_fail@plt+0xb3c>
   124ac:	subs	r6, r0, #0
   124b0:	movlt	r2, #1
   124b4:	blt	12404 <__assert_fail@plt+0x116c>
   124b8:	cmp	r9, #0
   124bc:	beq	124d0 <__assert_fail@plt+0x1238>
   124c0:	ldr	r2, [sp, #20]
   124c4:	ldr	r3, [r7, #36]	; 0x24
   124c8:	cmp	r3, r2
   124cc:	beq	124fc <__assert_fail@plt+0x1264>
   124d0:	ldr	r0, [r7, #36]	; 0x24
   124d4:	bl	11070 <inet_ntoa@plt>
   124d8:	mov	r1, r0
   124dc:	movw	r0, #39116	; 0x98cc
   124e0:	movt	r0, #1
   124e4:	bl	10ff8 <printf@plt>
   124e8:	movw	r3, #45732	; 0xb2a4
   124ec:	movt	r3, #2
   124f0:	ldr	r3, [r3, #8]
   124f4:	cmp	r3, #0
   124f8:	bne	12544 <__assert_fail@plt+0x12ac>
   124fc:	vmov	s15, sl
   12500:	movw	r0, #39132	; 0x98dc
   12504:	movt	r0, #1
   12508:	vcvt.f64.s32	d6, s15
   1250c:	vmov	s15, r8
   12510:	vdiv.f64	d5, d6, d8
   12514:	vcvt.f64.s32	d7, s15
   12518:	vmla.f64	d5, d7, d8
   1251c:	vmov	r2, r3, d5
   12520:	bl	10ff8 <printf@plt>
   12524:	cmp	r6, #0
   12528:	beq	12538 <__assert_fail@plt+0x12a0>
   1252c:	ldr	r3, [sp, #24]
   12530:	cmp	r3, #3
   12534:	beq	12560 <__assert_fail@plt+0x12c8>
   12538:	ldr	r3, [r7, #36]	; 0x24
   1253c:	str	r3, [sp, #20]
   12540:	b	123ec <__assert_fail@plt+0x1154>
   12544:	add	r0, r7, #36	; 0x24
   12548:	bl	11a38 <__assert_fail@plt+0x7a0>
   1254c:	mov	r1, r0
   12550:	movw	r0, #39124	; 0x98d4
   12554:	movt	r0, #1
   12558:	bl	10ff8 <printf@plt>
   1255c:	b	124fc <__assert_fail@plt+0x1264>
   12560:	ldr	r2, [sp, #28]
   12564:	movw	r3, #38500	; 0x9664
   12568:	movt	r3, #1
   1256c:	movw	r0, #39144	; 0x98e8
   12570:	movt	r0, #1
   12574:	and	r2, r2, #15
   12578:	add	r3, r3, r2
   1257c:	ldrb	r1, [r3, #48]	; 0x30
   12580:	bl	10ff8 <printf@plt>
   12584:	b	12538 <__assert_fail@plt+0x12a0>
   12588:	mov	r6, r7
   1258c:	mov	sl, r7
   12590:	mov	r8, r7
   12594:	b	12314 <__assert_fail@plt+0x107c>
   12598:	andeq	r0, r0, r0
   1259c:	addmi	r4, pc, r0
   125a0:	cmp	r0, #0
   125a4:	ldrne	r0, [r0, #4]
   125a8:	mvneq	r0, #0
   125ac:	bx	lr
   125b0:	cmp	r0, #0
   125b4:	ldrne	r0, [r0]
   125b8:	mvneq	r0, #0
   125bc:	bx	lr
   125c0:	subs	ip, r0, #0
   125c4:	strd	r4, [sp, #-16]!
   125c8:	str	r6, [sp, #8]
   125cc:	str	lr, [sp, #12]
   125d0:	sub	sp, sp, #8
   125d4:	beq	12654 <__assert_fail@plt+0x13bc>
   125d8:	ldr	r4, [ip]
   125dc:	mov	r1, #0
   125e0:	mov	r6, #4
   125e4:	add	r3, ip, #48	; 0x30
   125e8:	mov	r2, #2
   125ec:	ldr	lr, [ip, #48]	; 0x30
   125f0:	ldmib	ip, {r0, r5}
   125f4:	add	lr, lr, #1
   125f8:	cmp	r5, r1
   125fc:	str	lr, [ip, #48]	; 0x30
   12600:	movne	r0, r4
   12604:	str	r6, [sp]
   12608:	bl	10fec <setsockopt@plt>
   1260c:	cmp	r0, #0
   12610:	blt	12628 <__assert_fail@plt+0x1390>
   12614:	add	sp, sp, #8
   12618:	ldrd	r4, [sp]
   1261c:	ldr	r6, [sp, #8]
   12620:	add	sp, sp, #12
   12624:	pop	{pc}		; (ldr pc, [sp], #4)
   12628:	bl	1119c <__errno_location@plt>
   1262c:	ldr	r1, [r0]
   12630:	movw	r2, #38948	; 0x9824
   12634:	movt	r2, #1
   12638:	mov	r0, #1
   1263c:	add	sp, sp, #8
   12640:	ldrd	r4, [sp]
   12644:	ldr	r6, [sp, #8]
   12648:	ldr	lr, [sp, #12]
   1264c:	add	sp, sp, #16
   12650:	b	110f4 <error@plt>
   12654:	movw	r1, #38920	; 0x9808
   12658:	movt	r1, #1
   1265c:	ldr	r3, [pc, #12]	; 12670 <__assert_fail@plt+0x13d8>
   12660:	movw	r0, #38936	; 0x9818
   12664:	movt	r0, #1
   12668:	mov	r2, #768	; 0x300
   1266c:	bl	11298 <__assert_fail@plt>
   12670:	andeq	r9, r1, r8, lsr #13
   12674:	cmp	r0, #0
   12678:	beq	126a4 <__assert_fail@plt+0x140c>
   1267c:	ldr	r3, [r0, #8]
   12680:	cmp	r3, #0
   12684:	bxne	lr
   12688:	ldrh	r3, [r0, #18]
   1268c:	rev16	r3, r3
   12690:	uxth	r3, r3
   12694:	add	r3, r3, #1
   12698:	rev16	r3, r3
   1269c:	strh	r3, [r0, #18]
   126a0:	bx	lr
   126a4:	movw	r1, #38920	; 0x9808
   126a8:	movt	r1, #1
   126ac:	ldr	r3, [pc, #20]	; 126c8 <__assert_fail@plt+0x1430>
   126b0:	movw	r0, #38936	; 0x9818
   126b4:	movt	r0, #1
   126b8:	str	r4, [sp, #-8]!
   126bc:	mov	r2, #780	; 0x30c
   126c0:	str	lr, [sp, #4]
   126c4:	bl	11298 <__assert_fail@plt>
   126c8:			; <UNDEFINED> instruction: 0x000196b8
   126cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   126d0:	strd	r6, [sp, #8]
   126d4:	movw	r6, #45732	; 0xb2a4
   126d8:	movt	r6, #2
   126dc:	ldr	r4, [r6]
   126e0:	strd	r8, [sp, #16]
   126e4:	strd	sl, [sp, #24]
   126e8:	str	lr, [sp, #32]
   126ec:	sub	sp, sp, #60	; 0x3c
   126f0:	cmp	r4, #0
   126f4:	beq	12704 <__assert_fail@plt+0x146c>
   126f8:	ldrb	r3, [r4]
   126fc:	cmp	r3, #0
   12700:	bne	12720 <__assert_fail@plt+0x1488>
   12704:	add	sp, sp, #60	; 0x3c
   12708:	ldrd	r4, [sp]
   1270c:	ldrd	r6, [sp, #8]
   12710:	ldrd	r8, [sp, #16]
   12714:	ldrd	sl, [sp, #24]
   12718:	add	sp, sp, #32
   1271c:	pop	{pc}		; (ldr pc, [sp], #4)
   12720:	ldr	r3, [pc, #352]	; 12888 <__assert_fail@plt+0x15f0>
   12724:	mov	sl, #0
   12728:	mov	fp, #0
   1272c:	str	r0, [sp, #12]
   12730:	mov	r0, #2
   12734:	mov	r2, #38	; 0x26
   12738:	mov	r1, #0
   1273c:	strd	sl, [sp, #24]
   12740:	movw	r7, #39152	; 0x98f0
   12744:	movt	r7, #1
   12748:	str	r0, [sp, #28]
   1274c:	mov	r9, #0
   12750:	strd	sl, [sp, #32]
   12754:	str	r0, [sp, #32]
   12758:	mov	r0, r3
   1275c:	sub	r5, r3, #2
   12760:	strd	sl, [sp, #40]	; 0x28
   12764:	strd	sl, [sp, #48]	; 0x30
   12768:	movw	sl, #39160	; 0x98f8
   1276c:	movt	sl, #1
   12770:	bl	111b4 <memset@plt>
   12774:	mov	r3, r0
   12778:	mov	r1, #3
   1277c:	mvn	r0, #124	; 0x7c
   12780:	mov	r2, #4
   12784:	strb	r1, [r5, #1]
   12788:	strb	r0, [r3, #-2]
   1278c:	strb	r2, [r5, #2]
   12790:	b	127c4 <__assert_fail@plt+0x152c>
   12794:	ldr	r0, [sp, #20]
   12798:	ldrb	r3, [r5, #1]
   1279c:	ldr	r2, [r0, #20]
   127a0:	ldr	r2, [r2, #4]
   127a4:	str	r2, [r5, r3]
   127a8:	bl	1125c <freeaddrinfo@plt>
   127ac:	ldrb	r3, [r5, #1]
   127b0:	subs	r4, fp, #0
   127b4:	add	r3, r3, #4
   127b8:	uxtb	r3, r3
   127bc:	strb	r3, [r5, #1]
   127c0:	beq	12860 <__assert_fail@plt+0x15c8>
   127c4:	ldrb	r3, [r4]
   127c8:	mov	r1, r7
   127cc:	mov	r0, r4
   127d0:	cmp	r3, #0
   127d4:	beq	1285c <__assert_fail@plt+0x15c4>
   127d8:	ldrb	r3, [r5, #2]
   127dc:	cmp	r3, #35	; 0x23
   127e0:	bhi	12848 <__assert_fail@plt+0x15b0>
   127e4:	bl	11250 <strpbrk@plt>
   127e8:	cmp	r0, #0
   127ec:	add	r3, sp, #20
   127f0:	mov	fp, r0
   127f4:	add	r2, sp, #24
   127f8:	moveq	fp, r0
   127fc:	mov	r1, #0
   12800:	strbne	r9, [fp], #1
   12804:	mov	r0, r4
   12808:	bl	11268 <getaddrinfo@plt>
   1280c:	subs	r3, r0, #0
   12810:	beq	12794 <__assert_fail@plt+0x14fc>
   12814:	str	r3, [sp, #8]
   12818:	bl	1119c <__errno_location@plt>
   1281c:	ldr	r3, [sp, #8]
   12820:	ldr	r8, [r0]
   12824:	mov	r0, r3
   12828:	bl	11040 <gai_strerror@plt>
   1282c:	mov	r3, r4
   12830:	mov	r2, sl
   12834:	str	r0, [sp]
   12838:	mov	r1, r8
   1283c:	mov	r0, #1
   12840:	bl	110f4 <error@plt>
   12844:	b	12794 <__assert_fail@plt+0x14fc>
   12848:	movw	r2, #39176	; 0x9908
   1284c:	movt	r2, #1
   12850:	mov	r1, #0
   12854:	mov	r0, #1
   12858:	bl	110f4 <error@plt>
   1285c:	ldrb	r3, [r5, #1]
   12860:	ldr	r2, [sp, #12]
   12864:	ldr	r2, [r2, #4]
   12868:	str	r2, [r5, r3]
   1286c:	ldrb	r3, [r5, #1]
   12870:	add	r3, r3, #4
   12874:	uxtb	r3, r3
   12878:	add	r2, r3, #1
   1287c:	strb	r3, [r5, #1]
   12880:	str	r2, [r6, #20]
   12884:	b	12704 <__assert_fail@plt+0x146c>
   12888:	andeq	fp, r2, sl, lsl #6
   1288c:	cmp	r1, #7
   12890:	strd	r4, [sp, #-16]!
   12894:	str	r6, [sp, #8]
   12898:	str	lr, [sp, #12]
   1289c:	bls	128e4 <__assert_fail@plt+0x164c>
   128a0:	strb	r2, [r0]
   128a4:	rev16	r3, r3
   128a8:	mov	r5, #0
   128ac:	ldr	r2, [sp, #16]
   128b0:	mov	r4, r0
   128b4:	strb	r5, [r0, #1]
   128b8:	strh	r5, [r0, #2]
   128bc:	strh	r3, [r0, #4]
   128c0:	rev16	r2, r2
   128c4:	strh	r2, [r0, #6]
   128c8:	bl	129b0 <__assert_fail@plt+0x1718>
   128cc:	strh	r0, [r4, #2]
   128d0:	mov	r0, r5
   128d4:	ldrd	r4, [sp]
   128d8:	ldr	r6, [sp, #8]
   128dc:	add	sp, sp, #12
   128e0:	pop	{pc}		; (ldr pc, [sp], #4)
   128e4:	mvn	r5, #0
   128e8:	b	128d0 <__assert_fail@plt+0x1638>
   128ec:	ldrb	ip, [r0]
   128f0:	strd	r4, [sp, #-16]!
   128f4:	str	r6, [sp, #8]
   128f8:	str	lr, [sp, #12]
   128fc:	and	ip, ip, #15
   12900:	lsl	ip, ip, #2
   12904:	add	lr, ip, #8
   12908:	cmp	lr, r1
   1290c:	mvnhi	r0, #0
   12910:	bhi	12948 <__assert_fail@plt+0x16b0>
   12914:	add	r5, r0, ip
   12918:	sub	r1, r1, ip
   1291c:	ldrh	r4, [r5, #2]
   12920:	str	r0, [r2]
   12924:	mov	r2, #0
   12928:	mov	r0, r5
   1292c:	str	r5, [r3]
   12930:	strh	r2, [r5, #2]
   12934:	bl	129b0 <__assert_fail@plt+0x1718>
   12938:	mov	r3, r0
   1293c:	subs	r0, r0, r4
   12940:	movne	r0, #1
   12944:	strh	r3, [r5, #2]
   12948:	ldrd	r4, [sp]
   1294c:	ldr	r6, [sp, #8]
   12950:	add	sp, sp, #12
   12954:	pop	{pc}		; (ldr pc, [sp], #4)
   12958:	cmp	r1, #7
   1295c:	bls	129a0 <__assert_fail@plt+0x1708>
   12960:	rev16	r3, r3
   12964:	rev16	r2, r2
   12968:	str	r4, [sp, #-8]!
   1296c:	mov	ip, #8
   12970:	mov	r4, r0
   12974:	str	lr, [sp, #4]
   12978:	str	ip, [r0]
   1297c:	strh	r2, [r0, #4]
   12980:	strh	r3, [r0, #6]
   12984:	bl	129b0 <__assert_fail@plt+0x1718>
   12988:	mov	r3, #0
   1298c:	strh	r0, [r4, #2]
   12990:	ldr	r4, [sp]
   12994:	add	sp, sp, #4
   12998:	mov	r0, r3
   1299c:	pop	{pc}		; (ldr pc, [sp], #4)
   129a0:	mvn	r3, #0
   129a4:	mov	r0, r3
   129a8:	bx	lr
   129ac:	b	128ec <__assert_fail@plt+0x1654>
   129b0:	mov	r3, #0
   129b4:	push	{lr}		; (str lr, [sp, #-4]!)
   129b8:	sub	sp, sp, #12
   129bc:	cmp	r1, #1
   129c0:	strh	r3, [sp, #6]
   129c4:	ble	12a20 <__assert_fail@plt+0x1788>
   129c8:	sub	r1, r1, #2
   129cc:	lsr	lr, r1, #1
   129d0:	add	ip, lr, #1
   129d4:	add	ip, r0, ip, lsl #1
   129d8:	ldrh	r2, [r0], #2
   129dc:	cmp	r0, ip
   129e0:	add	r3, r3, r2
   129e4:	bne	129d8 <__assert_fail@plt+0x1740>
   129e8:	sub	r1, r1, lr, lsl #1
   129ec:	cmp	r1, #1
   129f0:	bne	12a04 <__assert_fail@plt+0x176c>
   129f4:	ldrb	r2, [ip]
   129f8:	strb	r2, [sp, #6]
   129fc:	ldrh	r2, [sp, #6]
   12a00:	add	r3, r3, r2
   12a04:	uxth	r0, r3
   12a08:	add	r3, r0, r3, asr #16
   12a0c:	add	r3, r3, r3, asr #16
   12a10:	mvn	r0, r3
   12a14:	uxth	r0, r0
   12a18:	add	sp, sp, #12
   12a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a20:	mov	ip, r0
   12a24:	b	129ec <__assert_fail@plt+0x1754>
   12a28:	strd	r4, [sp, #-16]!
   12a2c:	mov	r5, r0
   12a30:	ldr	r0, [r0, #12]
   12a34:	str	r6, [sp, #8]
   12a38:	str	lr, [sp, #12]
   12a3c:	cmp	r0, #0
   12a40:	beq	12a54 <__assert_fail@plt+0x17bc>
   12a44:	ldr	r4, [r0, #24]
   12a48:	bl	17558 <argp_parse@@Base+0xfe4>
   12a4c:	subs	r0, r4, #0
   12a50:	bne	12a44 <__assert_fail@plt+0x17ac>
   12a54:	ldr	r3, [r5, #4]
   12a58:	cmp	r3, #0
   12a5c:	bne	12a78 <__assert_fail@plt+0x17e0>
   12a60:	mov	r0, r5
   12a64:	ldrd	r4, [sp]
   12a68:	ldr	r6, [sp, #8]
   12a6c:	ldr	lr, [sp, #12]
   12a70:	add	sp, sp, #16
   12a74:	b	17558 <argp_parse@@Base+0xfe4>
   12a78:	ldr	r0, [r5]
   12a7c:	bl	17558 <argp_parse@@Base+0xfe4>
   12a80:	ldr	r0, [r5, #8]
   12a84:	bl	17558 <argp_parse@@Base+0xfe4>
   12a88:	b	12a60 <__assert_fail@plt+0x17c8>
   12a8c:	ldr	r3, [r0, #12]
   12a90:	strd	r4, [sp, #-16]!
   12a94:	ldr	r2, [r1, #12]
   12a98:	str	r6, [sp, #8]
   12a9c:	str	lr, [sp, #12]
   12aa0:	cmp	r3, r2
   12aa4:	beq	12b04 <__assert_fail@plt+0x186c>
   12aa8:	mov	r5, r1
   12aac:	mov	r4, r0
   12ab0:	mov	r1, r2
   12ab4:	mov	r0, r3
   12ab8:	bl	12a8c <__assert_fail@plt+0x17f4>
   12abc:	cmp	r0, #0
   12ac0:	bne	12af4 <__assert_fail@plt+0x185c>
   12ac4:	ldr	r3, [r5, #8]
   12ac8:	ldr	r0, [r4, #8]
   12acc:	mvn	r2, r3
   12ad0:	lsr	r2, r2, #31
   12ad4:	cmp	r2, r0, lsr #31
   12ad8:	subne	r0, r0, r3
   12adc:	subeq	r0, r3, r0
   12ae0:	cmp	r0, #0
   12ae4:	bne	12af4 <__assert_fail@plt+0x185c>
   12ae8:	ldr	r0, [r4, #4]
   12aec:	ldr	r3, [r5, #4]
   12af0:	sub	r0, r3, r0
   12af4:	ldrd	r4, [sp]
   12af8:	ldr	r6, [sp, #8]
   12afc:	add	sp, sp, #12
   12b00:	pop	{pc}		; (ldr pc, [sp], #4)
   12b04:	ldr	lr, [r1, #4]
   12b08:	ldr	r3, [r1, #8]
   12b0c:	ldr	r2, [r0, #8]
   12b10:	ldr	ip, [r0, #4]
   12b14:	mvn	r1, r3
   12b18:	lsr	r1, r1, #31
   12b1c:	ldrd	r4, [sp]
   12b20:	cmp	r1, r2, lsr #31
   12b24:	ldr	r6, [sp, #8]
   12b28:	add	sp, sp, #12
   12b2c:	subne	r0, r2, r3
   12b30:	subeq	r0, r3, r2
   12b34:	cmp	r0, #0
   12b38:	subeq	r0, lr, ip
   12b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b40:	ldr	r2, [r0, #8]
   12b44:	cmp	r2, #0
   12b48:	beq	12b54 <__assert_fail@plt+0x18bc>
   12b4c:	mov	r0, #0
   12b50:	bx	lr
   12b54:	ldr	r2, [r1, #8]
   12b58:	cmp	r2, #0
   12b5c:	bne	12b4c <__assert_fail@plt+0x18b4>
   12b60:	ldr	r2, [r0, #12]
   12b64:	ldr	r1, [r1, #12]
   12b68:	orr	r2, r2, r1
   12b6c:	tst	r2, #16
   12b70:	bne	12b4c <__assert_fail@plt+0x18b4>
   12b74:	ldr	r2, [r3]
   12b78:	ldr	r1, [r0, #4]
   12b7c:	add	r0, r2, #1
   12b80:	str	r0, [r3]
   12b84:	strb	r1, [r2]
   12b88:	b	12b4c <__assert_fail@plt+0x18b4>
   12b8c:	strd	r4, [sp, #-16]!
   12b90:	ldr	r4, [r0, #12]
   12b94:	str	r6, [sp, #8]
   12b98:	str	lr, [sp, #12]
   12b9c:	ands	r4, r4, #8
   12ba0:	movne	r4, #0
   12ba4:	bne	12bd0 <__assert_fail@plt+0x1938>
   12ba8:	ldr	r5, [r0, #4]
   12bac:	sub	r3, r5, #1
   12bb0:	cmp	r3, #254	; 0xfe
   12bb4:	bhi	12bd0 <__assert_fail@plt+0x1938>
   12bb8:	bl	11154 <__ctype_b_loc@plt>
   12bbc:	ldr	r2, [r0]
   12bc0:	lsl	r3, r5, #1
   12bc4:	ldrh	r3, [r2, r3]
   12bc8:	tst	r3, #16384	; 0x4000
   12bcc:	movne	r4, r5
   12bd0:	mov	r0, r4
   12bd4:	ldrd	r4, [sp]
   12bd8:	ldr	r6, [sp, #8]
   12bdc:	add	sp, sp, #12
   12be0:	pop	{pc}		; (ldr pc, [sp], #4)
   12be4:	str	r4, [sp, #-8]!
   12be8:	mov	r4, r0
   12bec:	str	lr, [sp, #4]
   12bf0:	bl	11154 <__ctype_b_loc@plt>
   12bf4:	ldr	lr, [r0]
   12bf8:	ldr	r2, [r4]
   12bfc:	b	12c04 <__assert_fail@plt+0x196c>
   12c00:	str	r2, [r4]
   12c04:	ldrb	r1, [r2]
   12c08:	mov	r3, r2
   12c0c:	add	r2, r2, #1
   12c10:	lsl	r0, r1, #1
   12c14:	ldrh	ip, [lr, r0]
   12c18:	tst	ip, #8192	; 0x2000
   12c1c:	bne	12c00 <__assert_fail@plt+0x1968>
   12c20:	subs	r0, r1, #45	; 0x2d
   12c24:	movne	r0, #1
   12c28:	cmp	r1, #0
   12c2c:	beq	12c60 <__assert_fail@plt+0x19c8>
   12c30:	tst	ip, #8
   12c34:	beq	12c48 <__assert_fail@plt+0x19b0>
   12c38:	b	12c60 <__assert_fail@plt+0x19c8>
   12c3c:	ldrh	r2, [lr, r1]
   12c40:	tst	r2, #8
   12c44:	bne	12c60 <__assert_fail@plt+0x19c8>
   12c48:	add	r3, r3, #1
   12c4c:	str	r3, [r4]
   12c50:	ldrb	r2, [r3]
   12c54:	cmp	r2, #0
   12c58:	lsl	r1, r2, #1
   12c5c:	bne	12c3c <__assert_fail@plt+0x19a4>
   12c60:	ldr	r4, [sp]
   12c64:	add	sp, sp, #4
   12c68:	pop	{pc}		; (ldr pc, [sp], #4)
   12c6c:	cmp	r1, #0
   12c70:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12c74:	strd	r6, [sp, #8]
   12c78:	str	r8, [sp, #16]
   12c7c:	str	lr, [sp, #20]
   12c80:	beq	12d08 <__assert_fail@plt+0x1a70>
   12c84:	mov	r6, r0
   12c88:	mov	r8, r2
   12c8c:	sub	r7, r1, #1
   12c90:	ldrd	r4, [r6]
   12c94:	cmp	r5, #0
   12c98:	sub	r5, r5, #1
   12c9c:	beq	12cdc <__assert_fail@plt+0x1a44>
   12ca0:	add	r4, r4, #24
   12ca4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12ca8:	sub	r5, r5, #1
   12cac:	cmp	r0, #0
   12cb0:	beq	12cd0 <__assert_fail@plt+0x1a38>
   12cb4:	ldr	r3, [r4, #-12]
   12cb8:	mov	r1, r8
   12cbc:	tst	r3, #2
   12cc0:	bne	12cd0 <__assert_fail@plt+0x1a38>
   12cc4:	bl	10fd4 <strcmp@plt>
   12cc8:	cmp	r0, #0
   12ccc:	beq	12cf0 <__assert_fail@plt+0x1a58>
   12cd0:	cmn	r5, #1
   12cd4:	add	r4, r4, #24
   12cd8:	bne	12ca4 <__assert_fail@plt+0x1a0c>
   12cdc:	sub	r7, r7, #1
   12ce0:	add	r6, r6, #28
   12ce4:	cmn	r7, #1
   12ce8:	bne	12c90 <__assert_fail@plt+0x19f8>
   12cec:	mov	r6, #0
   12cf0:	mov	r0, r6
   12cf4:	ldrd	r4, [sp]
   12cf8:	ldrd	r6, [sp, #8]
   12cfc:	ldr	r8, [sp, #16]
   12d00:	add	sp, sp, #20
   12d04:	pop	{pc}		; (ldr pc, [sp], #4)
   12d08:	mov	r6, r1
   12d0c:	b	12cf0 <__assert_fail@plt+0x1a58>
   12d10:	strd	r4, [sp, #-16]!
   12d14:	subs	r5, r0, #0
   12d18:	mov	r4, r1
   12d1c:	str	r6, [sp, #8]
   12d20:	str	lr, [sp, #12]
   12d24:	beq	12d38 <__assert_fail@plt+0x1aa0>
   12d28:	mov	r1, #10
   12d2c:	bl	11184 <strchr@plt>
   12d30:	adds	r5, r0, #0
   12d34:	movne	r5, #1
   12d38:	cmp	r4, #0
   12d3c:	beq	12d68 <__assert_fail@plt+0x1ad0>
   12d40:	ldr	r3, [r4]
   12d44:	cmp	r3, #0
   12d48:	beq	12d68 <__assert_fail@plt+0x1ad0>
   12d4c:	ldr	r0, [r3, #8]
   12d50:	ldr	r1, [r3, #16]
   12d54:	bl	12d10 <__assert_fail@plt+0x1a78>
   12d58:	ldr	r3, [r4, #16]!
   12d5c:	add	r5, r5, r0
   12d60:	cmp	r3, #0
   12d64:	bne	12d4c <__assert_fail@plt+0x1ab4>
   12d68:	mov	r0, r5
   12d6c:	ldrd	r4, [sp]
   12d70:	ldr	r6, [sp, #8]
   12d74:	add	sp, sp, #12
   12d78:	pop	{pc}		; (ldr pc, [sp], #4)
   12d7c:	strd	r4, [sp, #-16]!
   12d80:	mov	r5, r1
   12d84:	mov	r1, r3
   12d88:	str	r6, [sp, #8]
   12d8c:	mov	r6, r0
   12d90:	mov	r0, r2
   12d94:	mov	r4, r2
   12d98:	str	lr, [sp, #12]
   12d9c:	bl	173f4 <argp_parse@@Base+0xe80>
   12da0:	mov	r2, r0
   12da4:	mov	r1, r6
   12da8:	ldr	r6, [sp, #8]
   12dac:	mov	r0, r5
   12db0:	ldr	lr, [sp, #12]
   12db4:	ldr	r3, [r4, #20]
   12db8:	ldrd	r4, [sp]
   12dbc:	add	sp, sp, #16
   12dc0:	bx	r3
   12dc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12dc8:	ldr	r4, [r0]
   12dcc:	strd	r6, [sp, #8]
   12dd0:	strd	r8, [sp, #16]
   12dd4:	strd	sl, [sp, #24]
   12dd8:	str	lr, [sp, #32]
   12ddc:	sub	sp, sp, #52	; 0x34
   12de0:	ldr	r7, [r0, #16]
   12de4:	str	r1, [sp]
   12de8:	str	r0, [sp, #4]
   12dec:	mov	r0, #16
   12df0:	bl	180e8 <argp_parse@@Base+0x1b74>
   12df4:	subs	fp, r0, #0
   12df8:	beq	1342c <__assert_fail@plt+0x2194>
   12dfc:	mov	r3, #0
   12e00:	cmp	r4, r3
   12e04:	str	r3, [fp, #4]
   12e08:	str	r3, [fp, #12]
   12e0c:	beq	13070 <__assert_fail@plt+0x1dd8>
   12e10:	ldr	r0, [r4, #12]
   12e14:	ands	r0, r0, #4
   12e18:	bne	13468 <__assert_fail@plt+0x21d0>
   12e1c:	mov	r9, r0
   12e20:	add	r5, r4, #24
   12e24:	mov	r8, r0
   12e28:	b	12e78 <__assert_fail@plt+0x1be0>
   12e2c:	ldr	r3, [r5, #-12]
   12e30:	tst	r3, #4
   12e34:	bne	12e44 <__assert_fail@plt+0x1bac>
   12e38:	add	r9, r9, #1
   12e3c:	str	r9, [fp, #4]
   12e40:	ldr	r3, [r5, #-12]
   12e44:	tst	r3, #8
   12e48:	bne	12e74 <__assert_fail@plt+0x1bdc>
   12e4c:	ldr	r6, [r5, #-20]	; 0xffffffec
   12e50:	sub	r3, r6, #1
   12e54:	cmp	r3, #254	; 0xfe
   12e58:	bhi	12e74 <__assert_fail@plt+0x1bdc>
   12e5c:	bl	11154 <__ctype_b_loc@plt>
   12e60:	ldr	r3, [r0]
   12e64:	lsl	r6, r6, #1
   12e68:	ldrh	r3, [r3, r6]
   12e6c:	tst	r3, #16384	; 0x4000
   12e70:	addne	r8, r8, #1
   12e74:	add	r5, r5, #24
   12e78:	ldr	r3, [r5, #-20]	; 0xffffffec
   12e7c:	cmp	r3, #0
   12e80:	bne	12e2c <__assert_fail@plt+0x1b94>
   12e84:	ldr	r3, [r5, #-24]	; 0xffffffe8
   12e88:	cmp	r3, #0
   12e8c:	bne	12e2c <__assert_fail@plt+0x1b94>
   12e90:	ldr	r3, [r5, #-8]
   12e94:	cmp	r3, #0
   12e98:	bne	12e2c <__assert_fail@plt+0x1b94>
   12e9c:	ldr	sl, [r5, #-4]
   12ea0:	cmp	sl, #0
   12ea4:	bne	12e2c <__assert_fail@plt+0x1b94>
   12ea8:	rsb	r9, r9, r9, lsl #3
   12eac:	lsl	r0, r9, #2
   12eb0:	bl	180e8 <argp_parse@@Base+0x1b74>
   12eb4:	str	r0, [fp]
   12eb8:	add	r0, r8, #1
   12ebc:	bl	180e8 <argp_parse@@Base+0x1b74>
   12ec0:	ldr	r5, [fp]
   12ec4:	mov	r8, r0
   12ec8:	str	r0, [fp, #8]
   12ecc:	cmp	r5, #0
   12ed0:	cmpne	r0, #0
   12ed4:	beq	133d0 <__assert_fail@plt+0x2138>
   12ed8:	ldr	r2, [fp, #4]
   12edc:	movw	r3, #37449	; 0x9249
   12ee0:	movt	r3, #2340	; 0x924
   12ee4:	cmp	r2, r3
   12ee8:	bhi	133f0 <__assert_fail@plt+0x2158>
   12eec:	mov	r6, r0
   12ef0:	mov	r0, sl
   12ef4:	str	r7, [sp, #8]
   12ef8:	mov	r7, r8
   12efc:	ldr	sl, [sp]
   12f00:	add	r5, r5, #28
   12f04:	str	fp, [sp, #12]
   12f08:	ldr	r3, [r4, #4]
   12f0c:	ldr	r8, [sp, #4]
   12f10:	cmp	r3, #0
   12f14:	ldr	fp, [r4, #20]
   12f18:	bne	12f28 <__assert_fail@plt+0x1c90>
   12f1c:	ldr	ip, [r4]
   12f20:	cmp	ip, #0
   12f24:	beq	13008 <__assert_fail@plt+0x1d70>
   12f28:	mov	r2, #0
   12f2c:	cmp	fp, #0
   12f30:	str	r4, [r5, #-28]	; 0xffffffe4
   12f34:	str	r2, [r5, #-24]	; 0xffffffe8
   12f38:	str	r6, [r5, #-20]	; 0xffffffec
   12f3c:	bne	12f50 <__assert_fail@plt+0x1cb8>
   12f40:	ldr	r2, [r4]
   12f44:	orrs	r3, r2, r3
   12f48:	movne	fp, r0
   12f4c:	beq	13028 <__assert_fail@plt+0x1d90>
   12f50:	mov	r3, #0
   12f54:	str	fp, [r5, #-16]
   12f58:	str	sl, [r5, #-12]
   12f5c:	str	r8, [r5, #-8]
   12f60:	add	r3, r3, #1
   12f64:	str	r3, [r5, #-24]	; 0xffffffe8
   12f68:	ldr	r3, [r4, #12]
   12f6c:	tst	r3, #8
   12f70:	bne	12fd8 <__assert_fail@plt+0x1d40>
   12f74:	ldr	r9, [r4, #4]
   12f78:	sub	r3, r9, #1
   12f7c:	cmp	r3, #254	; 0xfe
   12f80:	bhi	12fd8 <__assert_fail@plt+0x1d40>
   12f84:	bl	11154 <__ctype_b_loc@plt>
   12f88:	ldr	r0, [r0]
   12f8c:	lsl	r3, r9, #1
   12f90:	ldrh	r3, [r0, r3]
   12f94:	tst	r3, #16384	; 0x4000
   12f98:	beq	12fd8 <__assert_fail@plt+0x1d40>
   12f9c:	cmp	r7, r6
   12fa0:	uxtb	r9, r9
   12fa4:	bcs	12fd4 <__assert_fail@plt+0x1d3c>
   12fa8:	ldrb	r3, [r7]
   12fac:	cmp	r3, r9
   12fb0:	beq	12fd8 <__assert_fail@plt+0x1d40>
   12fb4:	mov	r3, r7
   12fb8:	sub	r0, r6, #1
   12fbc:	b	12fcc <__assert_fail@plt+0x1d34>
   12fc0:	ldrb	ip, [r3, #1]!
   12fc4:	cmp	ip, r9
   12fc8:	beq	12fd8 <__assert_fail@plt+0x1d40>
   12fcc:	cmp	r0, r3
   12fd0:	bne	12fc0 <__assert_fail@plt+0x1d28>
   12fd4:	strb	r9, [r6], #1
   12fd8:	add	r4, r4, #24
   12fdc:	ldr	r0, [r4, #4]
   12fe0:	cmp	r0, #0
   12fe4:	bne	12ff4 <__assert_fail@plt+0x1d5c>
   12fe8:	ldr	r3, [r4]
   12fec:	cmp	r3, #0
   12ff0:	beq	13030 <__assert_fail@plt+0x1d98>
   12ff4:	ldr	r3, [r4, #12]
   12ff8:	tst	r3, #4
   12ffc:	beq	13054 <__assert_fail@plt+0x1dbc>
   13000:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13004:	b	12f60 <__assert_fail@plt+0x1cc8>
   13008:	ldr	ip, [r4, #16]
   1300c:	cmp	ip, #0
   13010:	beq	1305c <__assert_fail@plt+0x1dc4>
   13014:	cmp	fp, #0
   13018:	str	r4, [r5, #-28]	; 0xffffffe4
   1301c:	str	r3, [r5, #-24]	; 0xffffffe8
   13020:	str	r6, [r5, #-20]	; 0xffffffec
   13024:	bne	12f50 <__assert_fail@plt+0x1cb8>
   13028:	add	fp, r0, #1
   1302c:	b	12f50 <__assert_fail@plt+0x1cb8>
   13030:	ldr	r3, [r4, #16]
   13034:	cmp	r3, #0
   13038:	bne	12ff4 <__assert_fail@plt+0x1d5c>
   1303c:	ldr	r3, [r4, #20]
   13040:	cmp	r3, #0
   13044:	bne	12ff4 <__assert_fail@plt+0x1d5c>
   13048:	add	r5, r5, #28
   1304c:	mov	r0, fp
   13050:	b	12f10 <__assert_fail@plt+0x1c78>
   13054:	mov	r3, r0
   13058:	b	13048 <__assert_fail@plt+0x1db0>
   1305c:	cmp	fp, #0
   13060:	bne	131ac <__assert_fail@plt+0x1f14>
   13064:	ldr	r7, [sp, #8]
   13068:	strb	r3, [r6]
   1306c:	ldr	fp, [sp, #12]
   13070:	cmp	r7, #0
   13074:	beq	1318c <__assert_fail@plt+0x1ef4>
   13078:	ldr	r3, [r7]
   1307c:	cmp	r3, #0
   13080:	beq	1318c <__assert_fail@plt+0x1ef4>
   13084:	movw	r3, #37449	; 0x9249
   13088:	movt	r3, #2340	; 0x924
   1308c:	mov	sl, r7
   13090:	str	r3, [sp, #28]
   13094:	add	r3, fp, #12
   13098:	str	r3, [sp, #44]	; 0x2c
   1309c:	ldr	r6, [sl, #8]
   130a0:	ldr	r5, [sl, #12]
   130a4:	cmp	r5, #0
   130a8:	bne	130b4 <__assert_fail@plt+0x1e1c>
   130ac:	cmp	r6, #0
   130b0:	beq	133b0 <__assert_fail@plt+0x2118>
   130b4:	ldr	r7, [sp, #4]
   130b8:	mov	r0, #28
   130bc:	ldr	r4, [r7, #16]
   130c0:	bl	180e8 <argp_parse@@Base+0x1b74>
   130c4:	subs	r1, r0, #0
   130c8:	beq	13108 <__assert_fail@plt+0x1e70>
   130cc:	ldr	r3, [sp]
   130d0:	sub	r4, sl, r4
   130d4:	asr	r4, r4, #4
   130d8:	str	r6, [r1]
   130dc:	ldr	r2, [fp, #12]
   130e0:	str	r1, [fp, #12]
   130e4:	strd	r4, [r1, #4]
   130e8:	cmp	r3, #0
   130ec:	str	r3, [r1, #12]
   130f0:	ldrne	r3, [r3, #20]
   130f4:	str	r7, [r1, #16]
   130f8:	ldreq	r3, [sp]
   130fc:	str	r2, [r1, #24]
   13100:	addne	r3, r3, #1
   13104:	str	r3, [r1, #20]
   13108:	ldr	r0, [sl]
   1310c:	bl	12dc4 <__assert_fail@plt+0x1b2c>
   13110:	ldr	r3, [fp, #12]
   13114:	mov	r6, r0
   13118:	cmp	r3, #0
   1311c:	bne	13128 <__assert_fail@plt+0x1e90>
   13120:	b	133b8 <__assert_fail@plt+0x2120>
   13124:	mov	r3, r2
   13128:	ldr	r2, [r3, #24]
   1312c:	cmp	r2, #0
   13130:	bne	13124 <__assert_fail@plt+0x1e8c>
   13134:	add	r3, r3, #24
   13138:	ldr	r2, [r6, #4]
   1313c:	ldr	r1, [r6, #12]
   13140:	cmp	r2, #0
   13144:	str	r1, [r3]
   13148:	mov	r3, #0
   1314c:	str	r3, [r6, #12]
   13150:	beq	13178 <__assert_fail@plt+0x1ee0>
   13154:	ldr	r3, [fp, #4]
   13158:	cmp	r3, #0
   1315c:	bne	131bc <__assert_fail@plt+0x1f24>
   13160:	ldr	r1, [r6]
   13164:	str	r2, [fp, #4]
   13168:	ldr	r2, [r6, #8]
   1316c:	str	r1, [fp]
   13170:	str	r2, [fp, #8]
   13174:	str	r3, [r6, #4]
   13178:	mov	r0, r6
   1317c:	bl	12a28 <__assert_fail@plt+0x1790>
   13180:	ldr	r3, [sl, #16]!
   13184:	cmp	r3, #0
   13188:	bne	1309c <__assert_fail@plt+0x1e04>
   1318c:	mov	r0, fp
   13190:	add	sp, sp, #52	; 0x34
   13194:	ldrd	r4, [sp]
   13198:	ldrd	r6, [sp, #8]
   1319c:	ldrd	r8, [sp, #16]
   131a0:	ldrd	sl, [sp, #24]
   131a4:	add	sp, sp, #32
   131a8:	pop	{pc}		; (ldr pc, [sp], #4)
   131ac:	str	r4, [r5, #-28]	; 0xffffffe4
   131b0:	str	r3, [r5, #-24]	; 0xffffffe8
   131b4:	str	r6, [r5, #-20]	; 0xffffffec
   131b8:	b	12f50 <__assert_fail@plt+0x1cb8>
   131bc:	add	r3, r2, r3
   131c0:	rsb	r0, r3, r3, lsl #3
   131c4:	str	r3, [sp, #12]
   131c8:	lsl	r0, r0, #2
   131cc:	bl	180e8 <argp_parse@@Base+0x1b74>
   131d0:	mov	r4, r0
   131d4:	ldr	r0, [fp, #8]
   131d8:	str	r4, [sp, #8]
   131dc:	bl	11178 <strlen@plt>
   131e0:	mov	r8, r0
   131e4:	ldr	r0, [r6, #8]
   131e8:	bl	11178 <strlen@plt>
   131ec:	add	r0, r8, r0
   131f0:	add	r0, r0, #1
   131f4:	bl	180e8 <argp_parse@@Base+0x1b74>
   131f8:	cmp	r4, #0
   131fc:	cmpne	r0, #0
   13200:	mov	r9, r0
   13204:	beq	13410 <__assert_fail@plt+0x2178>
   13208:	ldr	r3, [sp, #12]
   1320c:	ldr	r2, [sp, #28]
   13210:	cmp	r3, r2
   13214:	bhi	1344c <__assert_fail@plt+0x21b4>
   13218:	ldm	fp, {r1, r5}
   1321c:	ldr	r0, [sp, #8]
   13220:	rsb	r4, r5, r5, lsl #3
   13224:	str	r1, [sp, #24]
   13228:	lsl	r4, r4, #2
   1322c:	mov	r2, r4
   13230:	bl	11148 <mempcpy@plt>
   13234:	ldm	r6, {r1, r3}
   13238:	rsb	r2, r3, r3, lsl #3
   1323c:	str	r3, [sp, #16]
   13240:	lsl	r2, r2, #2
   13244:	bl	11058 <memcpy@plt>
   13248:	ldr	r7, [fp, #8]
   1324c:	mov	r2, r8
   13250:	mov	r0, r9
   13254:	mov	r1, r7
   13258:	bl	11058 <memcpy@plt>
   1325c:	cmp	r5, #0
   13260:	ldr	r3, [sp, #16]
   13264:	beq	133c0 <__assert_fail@plt+0x2128>
   13268:	ldr	r1, [sp, #8]
   1326c:	subs	r5, r5, #1
   13270:	add	r1, r1, #28
   13274:	ldr	r2, [r1, #-20]	; 0xffffffec
   13278:	sub	r2, r2, r7
   1327c:	add	r2, r9, r2
   13280:	str	r2, [r1, #-20]	; 0xffffffec
   13284:	bne	1326c <__assert_fail@plt+0x1fd4>
   13288:	ldr	r2, [sp, #8]
   1328c:	add	r4, r2, r4
   13290:	add	r2, r9, r8
   13294:	cmp	r3, #0
   13298:	ldr	r1, [r6, #8]
   1329c:	str	r2, [sp, #16]
   132a0:	beq	133c8 <__assert_fail@plt+0x2130>
   132a4:	mov	r8, r2
   132a8:	add	r4, r4, #28
   132ac:	str	r6, [sp, #32]
   132b0:	sub	r2, r2, #1
   132b4:	strd	sl, [sp, #36]	; 0x24
   132b8:	mov	sl, r1
   132bc:	mov	fp, r3
   132c0:	str	r2, [sp, #20]
   132c4:	str	r8, [r4, #-20]	; 0xffffffec
   132c8:	ldr	r6, [r4, #-24]	; 0xffffffe8
   132cc:	ldr	r7, [r4, #-28]	; 0xffffffe4
   132d0:	cmp	r6, #0
   132d4:	beq	13328 <__assert_fail@plt+0x2090>
   132d8:	ldr	r3, [r7, #12]
   132dc:	tst	r3, #8
   132e0:	bne	1331c <__assert_fail@plt+0x2084>
   132e4:	ldr	r5, [r7, #4]
   132e8:	sub	r3, r5, #1
   132ec:	cmp	r3, #254	; 0xfe
   132f0:	bhi	1331c <__assert_fail@plt+0x2084>
   132f4:	bl	11154 <__ctype_b_loc@plt>
   132f8:	ldr	r1, [r0]
   132fc:	lsl	r2, r5, #1
   13300:	ldrb	r3, [sl]
   13304:	ldrh	r2, [r1, r2]
   13308:	sub	r5, r3, r5
   1330c:	clz	r5, r5
   13310:	lsr	r5, r5, #5
   13314:	ands	r2, r5, r2, lsr #14
   13318:	bne	1336c <__assert_fail@plt+0x20d4>
   1331c:	subs	r6, r6, #1
   13320:	add	r7, r7, #24
   13324:	bne	132d8 <__assert_fail@plt+0x2040>
   13328:	subs	fp, fp, #1
   1332c:	add	r4, r4, #28
   13330:	bne	132c4 <__assert_fail@plt+0x202c>
   13334:	add	r6, sp, #32
   13338:	ldm	r6, {r6, sl, fp}
   1333c:	mov	r3, #0
   13340:	strb	r3, [r8]
   13344:	ldr	r0, [sp, #24]
   13348:	bl	17558 <argp_parse@@Base+0xfe4>
   1334c:	ldr	r0, [fp, #8]
   13350:	bl	17558 <argp_parse@@Base+0xfe4>
   13354:	ldr	r3, [sp, #8]
   13358:	str	r3, [fp]
   1335c:	ldr	r3, [sp, #12]
   13360:	str	r9, [fp, #8]
   13364:	str	r3, [fp, #4]
   13368:	b	13178 <__assert_fail@plt+0x1ee0>
   1336c:	ldr	r2, [sp, #16]
   13370:	cmp	r9, r2
   13374:	bcs	133a4 <__assert_fail@plt+0x210c>
   13378:	ldrb	r2, [r9]
   1337c:	cmp	r2, r3
   13380:	beq	133a8 <__assert_fail@plt+0x2110>
   13384:	mov	r2, r9
   13388:	ldr	r0, [sp, #20]
   1338c:	b	1339c <__assert_fail@plt+0x2104>
   13390:	ldrb	r1, [r2, #1]!
   13394:	cmp	r1, r3
   13398:	beq	133a8 <__assert_fail@plt+0x2110>
   1339c:	cmp	r2, r0
   133a0:	bne	13390 <__assert_fail@plt+0x20f8>
   133a4:	strb	r3, [r8], #1
   133a8:	add	sl, sl, #1
   133ac:	b	1331c <__assert_fail@plt+0x2084>
   133b0:	ldr	r1, [sp]
   133b4:	b	13108 <__assert_fail@plt+0x1e70>
   133b8:	ldr	r3, [sp, #44]	; 0x2c
   133bc:	b	13138 <__assert_fail@plt+0x1ea0>
   133c0:	ldr	r4, [sp, #8]
   133c4:	b	13290 <__assert_fail@plt+0x1ff8>
   133c8:	ldr	r8, [sp, #16]
   133cc:	b	1333c <__assert_fail@plt+0x20a4>
   133d0:	movw	r3, #39840	; 0x9ba0
   133d4:	movt	r3, #1
   133d8:	movw	r1, #40008	; 0x9c48
   133dc:	movt	r1, #1
   133e0:	movw	r0, #40040	; 0x9c68
   133e4:	movt	r0, #1
   133e8:	movw	r2, #474	; 0x1da
   133ec:	bl	11298 <__assert_fail@plt>
   133f0:	movw	r3, #39840	; 0x9ba0
   133f4:	movt	r3, #1
   133f8:	movw	r1, #40008	; 0x9c48
   133fc:	movt	r1, #1
   13400:	movw	r0, #40076	; 0x9c8c
   13404:	movt	r0, #1
   13408:	mov	r2, #476	; 0x1dc
   1340c:	bl	11298 <__assert_fail@plt>
   13410:	movw	r1, #40008	; 0x9c48
   13414:	movt	r1, #1
   13418:	ldr	r3, [pc, #104]	; 13488 <__assert_fail@plt+0x21f0>
   1341c:	movw	r0, #40136	; 0x9cc8
   13420:	movt	r0, #1
   13424:	movw	r2, #970	; 0x3ca
   13428:	bl	11298 <__assert_fail@plt>
   1342c:	movw	r3, #39840	; 0x9ba0
   13430:	movt	r3, #1
   13434:	movw	r1, #40008	; 0x9c48
   13438:	movt	r1, #1
   1343c:	movw	r0, #40020	; 0x9c54
   13440:	movt	r0, #1
   13444:	movw	r2, #450	; 0x1c2
   13448:	bl	11298 <__assert_fail@plt>
   1344c:	movw	r1, #40008	; 0x9c48
   13450:	movt	r1, #1
   13454:	ldr	r3, [pc, #44]	; 13488 <__assert_fail@plt+0x21f0>
   13458:	movw	r0, #40164	; 0x9ce4
   1345c:	movt	r0, #1
   13460:	mov	r2, #972	; 0x3cc
   13464:	bl	11298 <__assert_fail@plt>
   13468:	movw	r3, #39840	; 0x9ba0
   1346c:	movt	r3, #1
   13470:	movw	r1, #40008	; 0x9c48
   13474:	movt	r1, #1
   13478:	movw	r0, #40024	; 0x9c58
   1347c:	movt	r0, #1
   13480:	mov	r2, #460	; 0x1cc
   13484:	bl	11298 <__assert_fail@plt>
   13488:	andeq	r9, r1, ip, lsr #23
   1348c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13490:	ldr	r5, [r0, #4]
   13494:	strd	r6, [sp, #8]
   13498:	strd	r8, [sp, #16]
   1349c:	strd	sl, [sp, #24]
   134a0:	str	lr, [sp, #32]
   134a4:	sub	sp, sp, #12
   134a8:	cmp	r5, #0
   134ac:	ldr	r7, [r0]
   134b0:	ldr	r6, [r0, #8]
   134b4:	beq	13584 <__assert_fail@plt+0x22ec>
   134b8:	mov	sl, r3
   134bc:	mov	r4, r7
   134c0:	stm	sp, {r1, r2}
   134c4:	ldr	fp, [r4, #12]
   134c8:	ands	r8, fp, #8
   134cc:	movne	r0, #1
   134d0:	movne	r8, #0
   134d4:	bne	13510 <__assert_fail@plt+0x2278>
   134d8:	ldr	r9, [r4, #4]
   134dc:	sub	r1, r9, #1
   134e0:	cmp	r1, #254	; 0xfe
   134e4:	bhi	1350c <__assert_fail@plt+0x2274>
   134e8:	bl	11154 <__ctype_b_loc@plt>
   134ec:	ldr	r0, [r0]
   134f0:	lsl	r1, r9, #1
   134f4:	ldrh	r1, [r0, r1]
   134f8:	tst	r1, #16384	; 0x4000
   134fc:	beq	1350c <__assert_fail@plt+0x2274>
   13500:	ldrb	r1, [r6]
   13504:	cmp	r1, r9
   13508:	beq	13544 <__assert_fail@plt+0x22ac>
   1350c:	mov	r0, #1
   13510:	subs	r5, r5, #1
   13514:	add	r4, r4, #24
   13518:	moveq	r0, #0
   1351c:	cmp	r0, #0
   13520:	bne	134c4 <__assert_fail@plt+0x222c>
   13524:	mov	r0, r8
   13528:	add	sp, sp, #12
   1352c:	ldrd	r4, [sp]
   13530:	ldrd	r6, [sp, #8]
   13534:	ldrd	r8, [sp, #16]
   13538:	ldrd	sl, [sp, #24]
   1353c:	add	sp, sp, #32
   13540:	pop	{pc}		; (ldr pc, [sp], #4)
   13544:	tst	fp, #4
   13548:	moveq	r7, r4
   1354c:	tst	fp, #2
   13550:	movne	r0, #1
   13554:	bne	1357c <__assert_fail@plt+0x22e4>
   13558:	mov	r3, sl
   1355c:	mov	r1, r7
   13560:	ldr	ip, [sp]
   13564:	mov	r0, r4
   13568:	ldr	r2, [sp, #4]
   1356c:	blx	ip
   13570:	mov	r8, r0
   13574:	clz	r0, r0
   13578:	lsr	r0, r0, #5
   1357c:	add	r6, r6, #1
   13580:	b	13510 <__assert_fail@plt+0x2278>
   13584:	mov	r8, r5
   13588:	b	13524 <__assert_fail@plt+0x228c>
   1358c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13590:	strd	r6, [sp, #8]
   13594:	strd	r8, [sp, #16]
   13598:	strd	sl, [sp, #24]
   1359c:	add	fp, sp, #32
   135a0:	str	lr, [sp, #32]
   135a4:	sub	sp, sp, #20
   135a8:	ldr	r5, [r0, #4]
   135ac:	cmp	r5, #0
   135b0:	beq	13700 <__assert_fail@plt+0x2468>
   135b4:	mov	r6, r0
   135b8:	ldr	r0, [r0, #8]
   135bc:	mov	r9, r1
   135c0:	bl	11178 <strlen@plt>
   135c4:	add	r3, r0, #8
   135c8:	ldr	r4, [r6]
   135cc:	movw	r7, #11072	; 0x2b40
   135d0:	movt	r7, #1
   135d4:	bic	r3, r3, #7
   135d8:	sub	sp, sp, r3
   135dc:	mov	r8, sp
   135e0:	str	r8, [fp, #-40]	; 0xffffffd8
   135e4:	ldr	r2, [r4, #20]
   135e8:	mov	r0, r4
   135ec:	sub	r3, fp, #40	; 0x28
   135f0:	mov	r1, r7
   135f4:	add	r4, r4, #28
   135f8:	ldr	r2, [r2, #24]
   135fc:	bl	1348c <__assert_fail@plt+0x21f4>
   13600:	subs	r5, r5, #1
   13604:	bne	135e4 <__assert_fail@plt+0x234c>
   13608:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1360c:	cmp	r3, r8
   13610:	bhi	13740 <__assert_fail@plt+0x24a8>
   13614:	ldrd	r4, [r6]
   13618:	cmp	r5, #0
   1361c:	beq	13700 <__assert_fail@plt+0x2468>
   13620:	movw	r7, #15496	; 0x3c88
   13624:	movt	r7, #1
   13628:	ldr	r2, [r4, #20]
   1362c:	mov	r0, r4
   13630:	mov	r3, r9
   13634:	mov	r1, r7
   13638:	add	r4, r4, #28
   1363c:	ldr	r2, [r2, #24]
   13640:	bl	1348c <__assert_fail@plt+0x21f4>
   13644:	subs	r5, r5, #1
   13648:	bne	13628 <__assert_fail@plt+0x2390>
   1364c:	ldm	r6, {r7, r8}
   13650:	cmp	r8, #0
   13654:	beq	13700 <__assert_fail@plt+0x2468>
   13658:	movw	r3, #40224	; 0x9d20
   1365c:	movt	r3, #1
   13660:	movw	sl, #40240	; 0x9d30
   13664:	movt	sl, #1
   13668:	add	r7, r7, #28
   1366c:	str	r3, [fp, #-48]	; 0xffffffd0
   13670:	movw	r3, #40252	; 0x9d3c
   13674:	movt	r3, #1
   13678:	str	r3, [fp, #-52]	; 0xffffffcc
   1367c:	ldr	r6, [r7, #-28]	; 0xffffffe4
   13680:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13684:	cmp	r5, #0
   13688:	movne	r4, r6
   1368c:	beq	136f4 <__assert_fail@plt+0x245c>
   13690:	ldr	r2, [r4]
   13694:	cmp	r2, #0
   13698:	beq	136e8 <__assert_fail@plt+0x2450>
   1369c:	ldr	r1, [r4, #12]
   136a0:	tst	r1, #4
   136a4:	moveq	r6, r4
   136a8:	tst	r1, #2
   136ac:	bne	136e8 <__assert_fail@plt+0x2450>
   136b0:	ldr	r3, [r4, #8]
   136b4:	ldr	r0, [r6, #12]
   136b8:	cmp	r3, #0
   136bc:	orr	r1, r1, r0
   136c0:	and	r0, r1, #16
   136c4:	beq	1371c <__assert_fail@plt+0x2484>
   136c8:	cmp	r0, #0
   136cc:	bne	136e8 <__assert_fail@plt+0x2450>
   136d0:	tst	r1, #1
   136d4:	movne	r0, r9
   136d8:	ldrne	r1, [fp, #-48]	; 0xffffffd0
   136dc:	moveq	r1, sl
   136e0:	moveq	r0, r9
   136e4:	bl	188a0 <argp_parse@@Base+0x232c>
   136e8:	subs	r5, r5, #1
   136ec:	add	r4, r4, #24
   136f0:	bne	13690 <__assert_fail@plt+0x23f8>
   136f4:	subs	r8, r8, #1
   136f8:	add	r7, r7, #28
   136fc:	bne	1367c <__assert_fail@plt+0x23e4>
   13700:	sub	sp, fp, #32
   13704:	ldrd	r4, [sp]
   13708:	ldrd	r6, [sp, #8]
   1370c:	ldrd	r8, [sp, #16]
   13710:	ldrd	sl, [sp, #24]
   13714:	add	sp, sp, #32
   13718:	pop	{pc}		; (ldr pc, [sp], #4)
   1371c:	cmp	r0, #0
   13720:	bne	136e8 <__assert_fail@plt+0x2450>
   13724:	ldr	r3, [r6, #8]
   13728:	cmp	r3, #0
   1372c:	bne	136d0 <__assert_fail@plt+0x2438>
   13730:	mov	r0, r9
   13734:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13738:	bl	188a0 <argp_parse@@Base+0x232c>
   1373c:	b	136e8 <__assert_fail@plt+0x2450>
   13740:	add	r0, r3, #1
   13744:	mov	r2, r8
   13748:	movw	r1, #40216	; 0x9d18
   1374c:	movt	r1, #1
   13750:	str	r0, [fp, #-40]	; 0xffffffd8
   13754:	mov	r0, r9
   13758:	strb	r5, [r3]
   1375c:	bl	188a0 <argp_parse@@Base+0x232c>
   13760:	ldrd	r4, [r6]
   13764:	cmp	r5, #0
   13768:	bne	13620 <__assert_fail@plt+0x2388>
   1376c:	b	13700 <__assert_fail@plt+0x2468>
   13770:	ldr	r3, [r0, #16]
   13774:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13778:	strd	r6, [sp, #8]
   1377c:	strd	r8, [sp, #16]
   13780:	str	lr, [sp, #24]
   13784:	sub	sp, sp, #12
   13788:	cmp	r3, #0
   1378c:	movne	r2, r3
   13790:	bne	1379c <__assert_fail@plt+0x2504>
   13794:	b	13a9c <__assert_fail@plt+0x2804>
   13798:	mov	r2, ip
   1379c:	ldr	ip, [r2, #12]
   137a0:	cmp	ip, #0
   137a4:	bne	13798 <__assert_fail@plt+0x2500>
   137a8:	ldr	lr, [r2, #8]
   137ac:	ldr	r2, [r1, #16]
   137b0:	cmp	r2, #0
   137b4:	movne	ip, r2
   137b8:	bne	137c4 <__assert_fail@plt+0x252c>
   137bc:	b	13a94 <__assert_fail@plt+0x27fc>
   137c0:	mov	ip, r4
   137c4:	ldr	r4, [ip, #12]
   137c8:	cmp	r4, #0
   137cc:	bne	137c0 <__assert_fail@plt+0x2528>
   137d0:	ldr	r4, [ip, #8]
   137d4:	mvn	ip, r4
   137d8:	lsr	ip, ip, #31
   137dc:	cmp	ip, lr, lsr #31
   137e0:	subne	r4, lr, r4
   137e4:	subeq	r4, r4, lr
   137e8:	cmp	r4, #0
   137ec:	bne	13854 <__assert_fail@plt+0x25bc>
   137f0:	adds	r4, r2, #0
   137f4:	movne	r4, #1
   137f8:	cmp	r3, #0
   137fc:	rsbeq	r4, r4, #0
   13800:	rsbne	r4, r4, #1
   13804:	cmp	r4, #0
   13808:	bne	13854 <__assert_fail@plt+0x25bc>
   1380c:	cmp	r3, #0
   13810:	mov	r5, r1
   13814:	mov	r6, r0
   13818:	beq	138ac <__assert_fail@plt+0x2614>
   1381c:	ldr	r0, [r2, #20]
   13820:	ldr	ip, [r3, #20]
   13824:	cmp	ip, r0
   13828:	bgt	13870 <__assert_fail@plt+0x25d8>
   1382c:	bge	13898 <__assert_fail@plt+0x2600>
   13830:	ldr	r2, [r2, #12]
   13834:	ldr	r1, [r2, #20]
   13838:	cmp	ip, r1
   1383c:	blt	13830 <__assert_fail@plt+0x2598>
   13840:	mov	r1, r2
   13844:	mov	r0, r3
   13848:	bl	12a8c <__assert_fail@plt+0x17f4>
   1384c:	subs	r4, r0, #0
   13850:	mvneq	r4, #0
   13854:	mov	r0, r4
   13858:	add	sp, sp, #12
   1385c:	ldrd	r4, [sp]
   13860:	ldrd	r6, [sp, #8]
   13864:	ldrd	r8, [sp, #16]
   13868:	add	sp, sp, #24
   1386c:	pop	{pc}		; (ldr pc, [sp], #4)
   13870:	ldr	r3, [r3, #12]
   13874:	ldr	r1, [r3, #20]
   13878:	cmp	r0, r1
   1387c:	blt	13870 <__assert_fail@plt+0x25d8>
   13880:	mov	r1, r2
   13884:	mov	r0, r3
   13888:	bl	12a8c <__assert_fail@plt+0x17f4>
   1388c:	subs	r4, r0, #0
   13890:	moveq	r4, #1
   13894:	b	13854 <__assert_fail@plt+0x25bc>
   13898:	mov	r1, r2
   1389c:	mov	r0, r3
   138a0:	bl	12a8c <__assert_fail@plt+0x17f4>
   138a4:	subs	r4, r0, #0
   138a8:	bne	13854 <__assert_fail@plt+0x25bc>
   138ac:	ldr	r4, [r5, #12]
   138b0:	ldr	r3, [r6, #12]
   138b4:	mvn	r2, r4
   138b8:	lsr	r2, r2, #31
   138bc:	cmp	r2, r3, lsr #31
   138c0:	subne	r4, r3, r4
   138c4:	subeq	r4, r4, r3
   138c8:	cmp	r4, #0
   138cc:	bne	13854 <__assert_fail@plt+0x25bc>
   138d0:	ldr	r7, [r6]
   138d4:	ldr	r2, [r6, #4]
   138d8:	cmp	r2, #0
   138dc:	beq	13908 <__assert_fail@plt+0x2670>
   138e0:	add	r3, r7, #24
   138e4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   138e8:	cmp	r1, #0
   138ec:	beq	138fc <__assert_fail@plt+0x2664>
   138f0:	ldr	r0, [r3, #-12]
   138f4:	tst	r0, #2
   138f8:	beq	13aa4 <__assert_fail@plt+0x280c>
   138fc:	subs	r2, r2, #1
   13900:	add	r3, r3, #24
   13904:	bne	138e4 <__assert_fail@plt+0x264c>
   13908:	mov	lr, #0
   1390c:	ldr	ip, [r5]
   13910:	ldr	r2, [r5, #4]
   13914:	str	lr, [sp]
   13918:	cmp	r2, lr
   1391c:	beq	13b00 <__assert_fail@plt+0x2868>
   13920:	add	r3, ip, #24
   13924:	ldr	r1, [r3, #-24]	; 0xffffffe8
   13928:	cmp	r1, #0
   1392c:	beq	1393c <__assert_fail@plt+0x26a4>
   13930:	ldr	r0, [r3, #-12]
   13934:	tst	r0, #2
   13938:	beq	1394c <__assert_fail@plt+0x26b4>
   1393c:	subs	r2, r2, #1
   13940:	add	r3, r3, #24
   13944:	bne	13924 <__assert_fail@plt+0x268c>
   13948:	mov	r1, r2
   1394c:	ldr	r3, [r7, #12]
   13950:	str	r1, [sp, #4]
   13954:	ands	r3, lr, r3, lsr #3
   13958:	bne	13ac0 <__assert_fail@plt+0x2828>
   1395c:	ldr	r3, [ip, #12]
   13960:	tst	r3, #8
   13964:	beq	1398c <__assert_fail@plt+0x26f4>
   13968:	ldr	r3, [sp, #4]
   1396c:	cmp	r3, #0
   13970:	beq	1398c <__assert_fail@plt+0x26f4>
   13974:	add	r0, sp, #4
   13978:	bl	12be4 <__assert_fail@plt+0x194c>
   1397c:	cmp	r0, #0
   13980:	subne	r4, r4, #1
   13984:	cmp	r4, #0
   13988:	bne	13854 <__assert_fail@plt+0x25bc>
   1398c:	ldr	r2, [r6, #20]
   13990:	mov	r0, r6
   13994:	mov	r3, #0
   13998:	movw	r1, #11148	; 0x2b8c
   1399c:	movt	r1, #1
   139a0:	ldr	r2, [r2, #24]
   139a4:	bl	1348c <__assert_fail@plt+0x21f4>
   139a8:	ldr	r2, [r5, #20]
   139ac:	uxtb	r6, r0
   139b0:	movw	r1, #11148	; 0x2b8c
   139b4:	movt	r1, #1
   139b8:	mov	r0, r5
   139bc:	mov	r3, #0
   139c0:	ldr	r2, [r2, #24]
   139c4:	bl	1348c <__assert_fail@plt+0x21f4>
   139c8:	cmp	r6, #0
   139cc:	uxtb	r5, r0
   139d0:	movne	r7, r6
   139d4:	lslne	r4, r6, #2
   139d8:	bne	139f4 <__assert_fail@plt+0x275c>
   139dc:	ldr	r3, [sp]
   139e0:	cmp	r3, #0
   139e4:	ldrbne	r7, [r3]
   139e8:	moveq	r4, r6
   139ec:	moveq	r7, r6
   139f0:	lslne	r4, r7, #2
   139f4:	cmp	r5, #0
   139f8:	movne	r8, r5
   139fc:	lslne	r9, r5, #2
   13a00:	bne	13a1c <__assert_fail@plt+0x2784>
   13a04:	ldr	r3, [sp, #4]
   13a08:	cmp	r3, #0
   13a0c:	ldrbne	r8, [r3]
   13a10:	moveq	r9, r5
   13a14:	moveq	r8, r5
   13a18:	lslne	r9, r8, #2
   13a1c:	bl	11130 <__ctype_tolower_loc@plt>
   13a20:	ldr	r3, [r0]
   13a24:	ldr	r4, [r3, r4]
   13a28:	ldr	r3, [r3, r9]
   13a2c:	subs	r4, r4, r3
   13a30:	bne	13854 <__assert_fail@plt+0x25bc>
   13a34:	subs	r4, r8, r7
   13a38:	bne	13854 <__assert_fail@plt+0x25bc>
   13a3c:	adds	r4, r5, #0
   13a40:	movne	r4, #1
   13a44:	cmp	r6, #0
   13a48:	rsbeq	r4, r4, #0
   13a4c:	rsbne	r4, r4, #1
   13a50:	cmp	r4, #0
   13a54:	bne	13854 <__assert_fail@plt+0x25bc>
   13a58:	cmp	r6, #0
   13a5c:	bne	13854 <__assert_fail@plt+0x25bc>
   13a60:	ldrd	r0, [sp]
   13a64:	adds	r4, r1, #0
   13a68:	movne	r4, #1
   13a6c:	cmp	r0, #0
   13a70:	rsbeq	r4, r4, #0
   13a74:	rsbne	r4, r4, #1
   13a78:	cmp	r4, #0
   13a7c:	bne	13854 <__assert_fail@plt+0x25bc>
   13a80:	cmp	r0, #0
   13a84:	beq	13854 <__assert_fail@plt+0x25bc>
   13a88:	bl	110b8 <strcasecmp@plt>
   13a8c:	mov	r4, r0
   13a90:	b	13854 <__assert_fail@plt+0x25bc>
   13a94:	ldr	r4, [r1, #12]
   13a98:	b	137d4 <__assert_fail@plt+0x253c>
   13a9c:	ldr	lr, [r0, #12]
   13aa0:	b	137ac <__assert_fail@plt+0x2514>
   13aa4:	str	r1, [sp]
   13aa8:	ldr	r2, [r5, #4]
   13aac:	ldr	ip, [r5]
   13ab0:	cmp	r2, #0
   13ab4:	beq	13b08 <__assert_fail@plt+0x2870>
   13ab8:	mov	lr, #1
   13abc:	b	13920 <__assert_fail@plt+0x2688>
   13ac0:	mov	r0, sp
   13ac4:	bl	12be4 <__assert_fail@plt+0x194c>
   13ac8:	cmp	r0, #0
   13acc:	beq	13af8 <__assert_fail@plt+0x2860>
   13ad0:	ldr	r3, [r5]
   13ad4:	ldr	r3, [r3, #12]
   13ad8:	tst	r3, #8
   13adc:	moveq	r4, #1
   13ae0:	beq	13854 <__assert_fail@plt+0x25bc>
   13ae4:	ldr	r3, [sp, #4]
   13ae8:	mov	r4, #1
   13aec:	cmp	r3, #0
   13af0:	beq	13854 <__assert_fail@plt+0x25bc>
   13af4:	b	13974 <__assert_fail@plt+0x26dc>
   13af8:	ldr	ip, [r5]
   13afc:	b	1395c <__assert_fail@plt+0x26c4>
   13b00:	str	r2, [sp, #4]
   13b04:	b	1398c <__assert_fail@plt+0x26f4>
   13b08:	mov	r1, r2
   13b0c:	mov	lr, #1
   13b10:	b	1394c <__assert_fail@plt+0x26b4>
   13b14:	strd	r4, [sp, #-16]!
   13b18:	mov	r5, r1
   13b1c:	mov	r4, r0
   13b20:	ldr	r2, [r0, #16]
   13b24:	ldr	r1, [r0, #24]
   13b28:	ldr	r3, [r0, #28]
   13b2c:	str	r6, [sp, #8]
   13b30:	str	lr, [sp, #12]
   13b34:	sub	r3, r3, r1
   13b38:	cmp	r3, r2
   13b3c:	bhi	13ba4 <__assert_fail@plt+0x290c>
   13b40:	ldr	r1, [r4, #20]
   13b44:	mov	r6, #32
   13b48:	cmp	r1, #0
   13b4c:	subge	r5, r5, r1
   13b50:	b	13b80 <__assert_fail@plt+0x28e8>
   13b54:	ldr	r3, [r4, #28]
   13b58:	ldr	r2, [r4, #32]
   13b5c:	cmp	r3, r2
   13b60:	bcc	13b74 <__assert_fail@plt+0x28dc>
   13b64:	bl	18880 <argp_parse@@Base+0x230c>
   13b68:	cmp	r0, #0
   13b6c:	beq	13b80 <__assert_fail@plt+0x28e8>
   13b70:	ldr	r3, [r4, #28]
   13b74:	add	r2, r3, #1
   13b78:	str	r2, [r4, #28]
   13b7c:	strb	r6, [r3]
   13b80:	cmp	r5, #0
   13b84:	mov	r1, #1
   13b88:	mov	r0, r4
   13b8c:	sub	r5, r5, #1
   13b90:	bgt	13b54 <__assert_fail@plt+0x28bc>
   13b94:	ldrd	r4, [sp]
   13b98:	ldr	r6, [sp, #8]
   13b9c:	add	sp, sp, #12
   13ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ba4:	bl	18214 <argp_parse@@Base+0x1ca0>
   13ba8:	b	13b40 <__assert_fail@plt+0x28a8>
   13bac:	ldrd	r2, [r0, #24]
   13bb0:	strd	r4, [sp, #-16]!
   13bb4:	mov	r5, r1
   13bb8:	mov	r4, r0
   13bbc:	ldr	r1, [r0, #16]
   13bc0:	str	r6, [sp, #8]
   13bc4:	str	lr, [sp, #12]
   13bc8:	sub	r2, r3, r2
   13bcc:	cmp	r2, r1
   13bd0:	movls	ip, r3
   13bd4:	bhi	13c78 <__assert_fail@plt+0x29e0>
   13bd8:	ldr	r0, [r4, #8]
   13bdc:	ldr	r1, [r4, #20]
   13be0:	ldr	r2, [r4, #32]
   13be4:	cmp	r1, #0
   13be8:	addge	r5, r5, r1
   13bec:	cmp	r5, r0
   13bf0:	bcc	13c38 <__assert_fail@plt+0x29a0>
   13bf4:	cmp	r3, r2
   13bf8:	bcs	13c1c <__assert_fail@plt+0x2984>
   13bfc:	add	r1, r3, #1
   13c00:	mov	r2, #10
   13c04:	str	r1, [r4, #28]
   13c08:	strb	r2, [r3]
   13c0c:	ldrd	r4, [sp]
   13c10:	ldr	r6, [sp, #8]
   13c14:	add	sp, sp, #12
   13c18:	pop	{pc}		; (ldr pc, [sp], #4)
   13c1c:	mov	r1, #1
   13c20:	mov	r0, r4
   13c24:	bl	18880 <argp_parse@@Base+0x230c>
   13c28:	cmp	r0, #0
   13c2c:	beq	13c0c <__assert_fail@plt+0x2974>
   13c30:	ldr	r3, [r4, #28]
   13c34:	b	13bfc <__assert_fail@plt+0x2964>
   13c38:	cmp	r3, r2
   13c3c:	bcc	13c58 <__assert_fail@plt+0x29c0>
   13c40:	mov	r1, #1
   13c44:	mov	r0, r4
   13c48:	bl	18880 <argp_parse@@Base+0x230c>
   13c4c:	cmp	r0, #0
   13c50:	beq	13c0c <__assert_fail@plt+0x2974>
   13c54:	ldr	ip, [r4, #28]
   13c58:	add	r2, ip, #1
   13c5c:	mov	r3, #32
   13c60:	str	r2, [r4, #28]
   13c64:	strb	r3, [ip]
   13c68:	ldrd	r4, [sp]
   13c6c:	ldr	r6, [sp, #8]
   13c70:	add	sp, sp, #12
   13c74:	pop	{pc}		; (ldr pc, [sp], #4)
   13c78:	bl	18214 <argp_parse@@Base+0x1ca0>
   13c7c:	ldr	r3, [r4, #28]
   13c80:	mov	ip, r3
   13c84:	b	13bd8 <__assert_fail@plt+0x2940>
   13c88:	strd	r4, [sp, #-16]!
   13c8c:	ldr	r5, [r0, #8]
   13c90:	str	r6, [sp, #8]
   13c94:	str	lr, [sp, #12]
   13c98:	cmp	r5, #0
   13c9c:	beq	13cf0 <__assert_fail@plt+0x2a58>
   13ca0:	ldr	r2, [r0, #12]
   13ca4:	ldr	r1, [r1, #12]
   13ca8:	orr	r2, r2, r1
   13cac:	tst	r2, #16
   13cb0:	bne	13cdc <__assert_fail@plt+0x2a44>
   13cb4:	tst	r2, #1
   13cb8:	mov	r6, r3
   13cbc:	mov	r4, r0
   13cc0:	beq	13d00 <__assert_fail@plt+0x2a68>
   13cc4:	movw	r1, #40260	; 0x9d44
   13cc8:	movt	r1, #1
   13ccc:	ldr	r2, [r4, #4]
   13cd0:	mov	r3, r5
   13cd4:	mov	r0, r6
   13cd8:	bl	188a0 <argp_parse@@Base+0x232c>
   13cdc:	ldrd	r4, [sp]
   13ce0:	mov	r0, #0
   13ce4:	ldr	r6, [sp, #8]
   13ce8:	add	sp, sp, #12
   13cec:	pop	{pc}		; (ldr pc, [sp], #4)
   13cf0:	ldr	r5, [r1, #8]
   13cf4:	cmp	r5, #0
   13cf8:	beq	13cdc <__assert_fail@plt+0x2a44>
   13cfc:	b	13ca0 <__assert_fail@plt+0x2a08>
   13d00:	mov	r0, r5
   13d04:	bl	11178 <strlen@plt>
   13d08:	add	r1, r0, #6
   13d0c:	mov	r0, r6
   13d10:	bl	13bac <__assert_fail@plt+0x2914>
   13d14:	mov	r3, r5
   13d18:	mov	r0, r6
   13d1c:	ldr	r2, [r4, #4]
   13d20:	movw	r1, #40272	; 0x9d50
   13d24:	movt	r1, #1
   13d28:	bl	188a0 <argp_parse@@Base+0x232c>
   13d2c:	b	13cdc <__assert_fail@plt+0x2a44>
   13d30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13d34:	mov	r4, r3
   13d38:	ldr	ip, [r0, #8]
   13d3c:	ldr	r3, [r0, #20]
   13d40:	cmp	r3, #0
   13d44:	ldr	r3, [r0, #16]
   13d48:	strd	r6, [sp, #8]
   13d4c:	strd	r8, [sp, #16]
   13d50:	mov	r8, r2
   13d54:	ldr	r2, [r2]
   13d58:	strd	sl, [sp, #24]
   13d5c:	mov	sl, r1
   13d60:	str	lr, [sp, #32]
   13d64:	sub	sp, sp, #28
   13d68:	ldr	r7, [sp, #64]	; 0x40
   13d6c:	str	r3, [sp, #8]
   13d70:	str	ip, [sp, #12]
   13d74:	str	r2, [sp, #16]
   13d78:	beq	13f48 <__assert_fail@plt+0x2cb0>
   13d7c:	mov	r2, r0
   13d80:	mov	r1, #6
   13d84:	movt	r1, #512	; 0x200
   13d88:	mov	r3, sl
   13d8c:	mov	r0, ip
   13d90:	bl	12d7c <__assert_fail@plt+0x1ae4>
   13d94:	mov	r9, r0
   13d98:	cmp	r9, #0
   13d9c:	beq	13f18 <__assert_fail@plt+0x2c80>
   13da0:	mov	r1, #10
   13da4:	mov	r0, r9
   13da8:	bl	11028 <strchrnul@plt>
   13dac:	ldrb	r3, [r0]
   13db0:	mov	r5, r0
   13db4:	cmp	r3, #0
   13db8:	moveq	r6, r9
   13dbc:	streq	r3, [sp, #20]
   13dc0:	beq	13e10 <__assert_fail@plt+0x2b78>
   13dc4:	ldr	r3, [sp, #16]
   13dc8:	ldrb	r3, [r3]
   13dcc:	cmp	r3, #0
   13dd0:	beq	13f68 <__assert_fail@plt+0x2cd0>
   13dd4:	mov	fp, #0
   13dd8:	mov	r5, r3
   13ddc:	add	r6, r0, #1
   13de0:	add	fp, fp, #1
   13de4:	mov	r0, r6
   13de8:	mov	r1, #10
   13dec:	bl	11028 <strchrnul@plt>
   13df0:	cmp	fp, r5
   13df4:	bne	13ddc <__assert_fail@plt+0x2b44>
   13df8:	mov	r5, r0
   13dfc:	ldr	r3, [r8]
   13e00:	mov	r2, #1
   13e04:	str	r2, [sp, #20]
   13e08:	add	r3, r3, r2
   13e0c:	str	r3, [r8]
   13e10:	add	r1, r5, #1
   13e14:	mov	r0, r7
   13e18:	sub	r1, r1, r6
   13e1c:	sub	fp, r5, r6
   13e20:	bl	13bac <__assert_fail@plt+0x2914>
   13e24:	ldr	r0, [r7, #28]
   13e28:	ldr	r2, [r7, #32]
   13e2c:	add	r3, r0, fp
   13e30:	cmp	r2, r3
   13e34:	bcs	13e50 <__assert_fail@plt+0x2bb8>
   13e38:	mov	r1, fp
   13e3c:	mov	r0, r7
   13e40:	bl	18880 <argp_parse@@Base+0x230c>
   13e44:	cmp	r0, #0
   13e48:	beq	13e68 <__assert_fail@plt+0x2bd0>
   13e4c:	ldr	r0, [r7, #28]
   13e50:	mov	r2, fp
   13e54:	mov	r1, r6
   13e58:	bl	11058 <memcpy@plt>
   13e5c:	ldr	r3, [r7, #28]
   13e60:	add	fp, r3, fp
   13e64:	str	fp, [r7, #28]
   13e68:	ldr	r3, [sp, #12]
   13e6c:	cmp	r3, r9
   13e70:	beq	13e7c <__assert_fail@plt+0x2be4>
   13e74:	mov	r0, r9
   13e78:	bl	17558 <argp_parse@@Base+0xfe4>
   13e7c:	ldr	r3, [sp, #8]
   13e80:	cmp	r3, #0
   13e84:	beq	13ec8 <__assert_fail@plt+0x2c30>
   13e88:	ldr	r2, [r3]
   13e8c:	cmp	r2, #0
   13e90:	beq	13ec8 <__assert_fail@plt+0x2c30>
   13e94:	ldr	r6, [sp, #8]
   13e98:	mov	r3, r4
   13e9c:	mov	r0, r2
   13ea0:	mov	r1, sl
   13ea4:	str	r7, [sp]
   13ea8:	mov	r2, r8
   13eac:	bl	13d30 <__assert_fail@plt+0x2a98>
   13eb0:	ldr	r2, [r6, #16]!
   13eb4:	clz	r3, r0
   13eb8:	lsr	r3, r3, #5
   13ebc:	cmp	r2, #0
   13ec0:	bne	13e9c <__assert_fail@plt+0x2c04>
   13ec4:	mov	r4, r3
   13ec8:	ldr	r3, [sp, #20]
   13ecc:	cmp	r4, #0
   13ed0:	moveq	r3, #0
   13ed4:	cmp	r3, #0
   13ed8:	beq	13f3c <__assert_fail@plt+0x2ca4>
   13edc:	ldrb	r3, [r5]
   13ee0:	ldr	r2, [sp, #16]
   13ee4:	cmp	r3, #0
   13ee8:	ldrb	r0, [r2]
   13eec:	beq	13f50 <__assert_fail@plt+0x2cb8>
   13ef0:	add	r4, r0, #1
   13ef4:	mov	r0, #1
   13ef8:	strb	r4, [r2]
   13efc:	add	sp, sp, #28
   13f00:	ldrd	r4, [sp]
   13f04:	ldrd	r6, [sp, #8]
   13f08:	ldrd	r8, [sp, #16]
   13f0c:	ldrd	sl, [sp, #24]
   13f10:	add	sp, sp, #32
   13f14:	pop	{pc}		; (ldr pc, [sp], #4)
   13f18:	ldr	r3, [sp, #8]
   13f1c:	cmp	r3, #0
   13f20:	beq	13f3c <__assert_fail@plt+0x2ca4>
   13f24:	ldr	r3, [sp, #8]
   13f28:	ldr	r2, [r3]
   13f2c:	cmp	r2, #0
   13f30:	movne	r5, r9
   13f34:	strne	r5, [sp, #20]
   13f38:	bne	13e94 <__assert_fail@plt+0x2bfc>
   13f3c:	clz	r0, r4
   13f40:	lsr	r0, r0, #5
   13f44:	b	13efc <__assert_fail@plt+0x2c64>
   13f48:	ldr	r9, [sp, #12]
   13f4c:	b	13d98 <__assert_fail@plt+0x2b00>
   13f50:	cmp	r0, #0
   13f54:	beq	13efc <__assert_fail@plt+0x2c64>
   13f58:	ldr	r2, [sp, #16]
   13f5c:	mov	r0, r3
   13f60:	strb	r3, [r2]
   13f64:	b	13efc <__assert_fail@plt+0x2c64>
   13f68:	mov	r6, r9
   13f6c:	b	13dfc <__assert_fail@plt+0x2b64>
   13f70:	cmp	r1, #0
   13f74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13f78:	strd	r6, [sp, #8]
   13f7c:	mov	r6, r2
   13f80:	strd	r8, [sp, #16]
   13f84:	mov	r8, r0
   13f88:	strd	sl, [sp, #24]
   13f8c:	str	lr, [sp, #32]
   13f90:	sub	sp, sp, #12
   13f94:	beq	13fc0 <__assert_fail@plt+0x2d28>
   13f98:	ldr	r3, [r1, #20]
   13f9c:	cmp	r3, #0
   13fa0:	beq	13fc0 <__assert_fail@plt+0x2d28>
   13fa4:	mov	r2, r1
   13fa8:	mov	r1, #3
   13fac:	movt	r1, #512	; 0x200
   13fb0:	ldr	r3, [r6, #16]
   13fb4:	bl	12d7c <__assert_fail@plt+0x1ae4>
   13fb8:	mov	r4, r0
   13fbc:	b	13fc4 <__assert_fail@plt+0x2d2c>
   13fc0:	mov	r4, r8
   13fc4:	cmp	r4, #0
   13fc8:	beq	13fe4 <__assert_fail@plt+0x2d4c>
   13fcc:	ldrb	r2, [r4]
   13fd0:	ldr	r3, [r6, #8]
   13fd4:	cmp	r2, #0
   13fd8:	bne	14010 <__assert_fail@plt+0x2d78>
   13fdc:	mov	r2, #1
   13fe0:	str	r2, [r3, #4]
   13fe4:	cmp	r8, r4
   13fe8:	beq	140f0 <__assert_fail@plt+0x2e58>
   13fec:	mov	r0, r4
   13ff0:	add	sp, sp, #12
   13ff4:	ldrd	r4, [sp]
   13ff8:	ldrd	r6, [sp, #8]
   13ffc:	ldrd	r8, [sp, #16]
   14000:	ldrd	sl, [sp, #24]
   14004:	ldr	lr, [sp, #32]
   14008:	add	sp, sp, #36	; 0x24
   1400c:	b	17558 <argp_parse@@Base+0xfe4>
   14010:	ldr	r3, [r3]
   14014:	ldr	r5, [r6, #4]
   14018:	cmp	r3, #0
   1401c:	beq	1405c <__assert_fail@plt+0x2dc4>
   14020:	ldr	r3, [r5, #28]
   14024:	ldr	r2, [r5, #32]
   14028:	cmp	r3, r2
   1402c:	bcc	14048 <__assert_fail@plt+0x2db0>
   14030:	mov	r1, #1
   14034:	mov	r0, r5
   14038:	bl	18880 <argp_parse@@Base+0x230c>
   1403c:	cmp	r0, #0
   14040:	ldrne	r3, [r5, #28]
   14044:	beq	14058 <__assert_fail@plt+0x2dc0>
   14048:	add	r1, r3, #1
   1404c:	mov	r2, #10
   14050:	str	r1, [r5, #28]
   14054:	strb	r2, [r3]
   14058:	ldr	r5, [r6, #4]
   1405c:	movw	r9, #45652	; 0xb254
   14060:	movt	r9, #2
   14064:	mov	r0, r5
   14068:	ldr	r1, [r9, #24]
   1406c:	bl	13b14 <__assert_fail@plt+0x287c>
   14070:	ldr	r5, [r6, #4]
   14074:	ldr	sl, [r9, #24]
   14078:	ldr	r1, [r5, #16]
   1407c:	ldr	r3, [r5, #24]
   14080:	ldr	r7, [r5, #28]
   14084:	sub	r3, r7, r3
   14088:	cmp	r3, r1
   1408c:	movls	fp, r5
   14090:	strls	sl, [r5, #4]
   14094:	bhi	1418c <__assert_fail@plt+0x2ef4>
   14098:	mov	r0, r4
   1409c:	str	sl, [fp, #12]
   140a0:	bl	11178 <strlen@plt>
   140a4:	subs	r9, r0, #0
   140a8:	bne	1413c <__assert_fail@plt+0x2ea4>
   140ac:	ldr	r2, [r5, #16]
   140b0:	ldr	r3, [r5, #24]
   140b4:	sub	r3, r7, r3
   140b8:	cmp	r3, r2
   140bc:	movls	r9, r5
   140c0:	bhi	14128 <__assert_fail@plt+0x2e90>
   140c4:	ldr	r3, [r9, #32]
   140c8:	mov	r2, #0
   140cc:	str	r2, [r5, #4]
   140d0:	cmp	r3, r7
   140d4:	bls	1410c <__assert_fail@plt+0x2e74>
   140d8:	add	r2, r7, #1
   140dc:	mov	r3, #10
   140e0:	str	r2, [r9, #28]
   140e4:	strb	r3, [r7]
   140e8:	ldr	r3, [r6, #8]
   140ec:	b	13fdc <__assert_fail@plt+0x2d44>
   140f0:	add	sp, sp, #12
   140f4:	ldrd	r4, [sp]
   140f8:	ldrd	r6, [sp, #8]
   140fc:	ldrd	r8, [sp, #16]
   14100:	ldrd	sl, [sp, #24]
   14104:	add	sp, sp, #32
   14108:	pop	{pc}		; (ldr pc, [sp], #4)
   1410c:	mov	r1, #1
   14110:	mov	r0, r9
   14114:	bl	18880 <argp_parse@@Base+0x230c>
   14118:	cmp	r0, #0
   1411c:	ldrne	r7, [r9, #28]
   14120:	bne	140d8 <__assert_fail@plt+0x2e40>
   14124:	b	140e8 <__assert_fail@plt+0x2e50>
   14128:	mov	r0, r5
   1412c:	bl	18214 <argp_parse@@Base+0x1ca0>
   14130:	ldr	r9, [r6, #4]
   14134:	ldr	r7, [r9, #28]
   14138:	b	140c4 <__assert_fail@plt+0x2e2c>
   1413c:	ldr	r2, [r5, #32]
   14140:	add	r3, r7, r9
   14144:	cmp	r2, r3
   14148:	bcs	14164 <__assert_fail@plt+0x2ecc>
   1414c:	mov	r1, r9
   14150:	mov	r0, r5
   14154:	bl	18880 <argp_parse@@Base+0x230c>
   14158:	cmp	r0, #0
   1415c:	beq	14180 <__assert_fail@plt+0x2ee8>
   14160:	ldr	r7, [r5, #28]
   14164:	mov	r2, r9
   14168:	mov	r0, r7
   1416c:	mov	r1, r4
   14170:	bl	11058 <memcpy@plt>
   14174:	ldr	r3, [r5, #28]
   14178:	add	r9, r3, r9
   1417c:	str	r9, [r5, #28]
   14180:	ldr	r5, [r6, #4]
   14184:	ldr	r7, [r5, #28]
   14188:	b	140ac <__assert_fail@plt+0x2e14>
   1418c:	mov	r0, r5
   14190:	str	sl, [sp, #4]
   14194:	bl	18214 <argp_parse@@Base+0x1ca0>
   14198:	ldr	fp, [r6, #4]
   1419c:	ldr	r2, [sp, #4]
   141a0:	ldr	sl, [r9, #24]
   141a4:	ldr	r1, [fp, #16]
   141a8:	ldr	r3, [fp, #24]
   141ac:	ldr	r7, [fp, #28]
   141b0:	str	r2, [r5, #4]
   141b4:	sub	r3, r7, r3
   141b8:	cmp	r3, r1
   141bc:	bls	141d4 <__assert_fail@plt+0x2f3c>
   141c0:	mov	r0, fp
   141c4:	bl	18214 <argp_parse@@Base+0x1ca0>
   141c8:	ldr	r5, [r6, #4]
   141cc:	ldr	r7, [r5, #28]
   141d0:	b	14098 <__assert_fail@plt+0x2e00>
   141d4:	mov	r5, fp
   141d8:	b	14098 <__assert_fail@plt+0x2e00>
   141dc:	ldr	r3, [r1, #12]
   141e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   141e4:	mov	r4, r1
   141e8:	ldr	r5, [r1, #4]
   141ec:	strd	r6, [sp, #8]
   141f0:	mov	r7, r0
   141f4:	str	r8, [sp, #16]
   141f8:	cmp	r3, #0
   141fc:	str	lr, [sp, #20]
   14200:	beq	1432c <__assert_fail@plt+0x3094>
   14204:	ldr	r2, [r1]
   14208:	ldr	r3, [r1, #8]
   1420c:	ldr	r6, [r2, #16]
   14210:	ldr	r8, [r3]
   14214:	ldr	r3, [r3, #4]
   14218:	cmp	r3, #0
   1421c:	cmpne	r8, #0
   14220:	bne	142d4 <__assert_fail@plt+0x303c>
   14224:	cmp	r6, #0
   14228:	beq	142ac <__assert_fail@plt+0x3014>
   1422c:	ldr	r0, [r6]
   14230:	cmp	r0, #0
   14234:	beq	142ac <__assert_fail@plt+0x3014>
   14238:	ldrb	r3, [r0]
   1423c:	cmp	r3, #0
   14240:	beq	142ac <__assert_fail@plt+0x3014>
   14244:	cmp	r8, #0
   14248:	beq	14278 <__assert_fail@plt+0x2fe0>
   1424c:	ldr	r3, [r8, #16]
   14250:	cmp	r3, r6
   14254:	beq	142ac <__assert_fail@plt+0x3014>
   14258:	cmp	r3, #0
   1425c:	beq	14278 <__assert_fail@plt+0x2fe0>
   14260:	ldr	r3, [r3, #12]
   14264:	cmp	r3, #0
   14268:	cmpne	r6, r3
   1426c:	bne	14260 <__assert_fail@plt+0x2fc8>
   14270:	cmp	r6, r3
   14274:	beq	142ac <__assert_fail@plt+0x3014>
   14278:	mov	r2, r4
   1427c:	ldr	r1, [r6, #16]
   14280:	ldr	r8, [r5, #12]
   14284:	bl	13f70 <__assert_fail@plt+0x2cd8>
   14288:	ldr	r6, [r4, #4]
   1428c:	ldr	r2, [r6, #16]
   14290:	ldr	r1, [r6, #24]
   14294:	ldr	r3, [r6, #28]
   14298:	sub	r3, r3, r1
   1429c:	cmp	r3, r2
   142a0:	movls	r5, r6
   142a4:	bhi	1437c <__assert_fail@plt+0x30e4>
   142a8:	str	r8, [r6, #12]
   142ac:	mov	r3, #0
   142b0:	str	r3, [r4, #12]
   142b4:	mov	r1, r7
   142b8:	mov	r0, r5
   142bc:	ldrd	r4, [sp]
   142c0:	ldrd	r6, [sp, #8]
   142c4:	ldr	r8, [sp, #16]
   142c8:	ldr	lr, [sp, #20]
   142cc:	add	sp, sp, #24
   142d0:	b	13b14 <__assert_fail@plt+0x287c>
   142d4:	ldr	r2, [r2, #12]
   142d8:	ldr	r3, [r8, #12]
   142dc:	cmp	r2, r3
   142e0:	beq	14224 <__assert_fail@plt+0x2f8c>
   142e4:	ldr	r3, [r5, #28]
   142e8:	ldr	r2, [r5, #32]
   142ec:	cmp	r3, r2
   142f0:	bcc	1430c <__assert_fail@plt+0x3074>
   142f4:	mov	r1, #1
   142f8:	mov	r0, r5
   142fc:	bl	18880 <argp_parse@@Base+0x230c>
   14300:	cmp	r0, #0
   14304:	ldrne	r3, [r5, #28]
   14308:	beq	1431c <__assert_fail@plt+0x3084>
   1430c:	add	r1, r3, #1
   14310:	mov	r2, #10
   14314:	str	r1, [r5, #28]
   14318:	strb	r2, [r3]
   1431c:	cmp	r6, #0
   14320:	ldr	r5, [r4, #4]
   14324:	bne	1422c <__assert_fail@plt+0x2f94>
   14328:	b	142ac <__assert_fail@plt+0x3014>
   1432c:	ldr	r3, [r5, #28]
   14330:	ldr	r1, [r5, #32]
   14334:	add	r2, r3, #2
   14338:	cmp	r1, r2
   1433c:	bcs	14358 <__assert_fail@plt+0x30c0>
   14340:	mov	r1, #2
   14344:	mov	r0, r5
   14348:	bl	18880 <argp_parse@@Base+0x230c>
   1434c:	cmp	r0, #0
   14350:	beq	14374 <__assert_fail@plt+0x30dc>
   14354:	ldr	r3, [r5, #28]
   14358:	movw	r2, #40284	; 0x9d5c
   1435c:	movt	r2, #1
   14360:	ldrh	r2, [r2]
   14364:	strh	r2, [r3]
   14368:	ldr	r3, [r5, #28]
   1436c:	add	r3, r3, #2
   14370:	str	r3, [r5, #28]
   14374:	ldr	r5, [r4, #4]
   14378:	b	142b4 <__assert_fail@plt+0x301c>
   1437c:	mov	r0, r6
   14380:	bl	18214 <argp_parse@@Base+0x1ca0>
   14384:	ldr	r5, [r4, #4]
   14388:	b	142a8 <__assert_fail@plt+0x3010>
   1438c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14390:	strd	r6, [sp, #8]
   14394:	mov	r7, r0
   14398:	ldr	r6, [r0, #12]
   1439c:	strd	r8, [sp, #16]
   143a0:	mov	r8, r2
   143a4:	strd	sl, [sp, #24]
   143a8:	mov	sl, r3
   143ac:	mov	fp, r1
   143b0:	ldr	r3, [r0, #16]
   143b4:	str	lr, [sp, #32]
   143b8:	sub	sp, sp, #28
   143bc:	cmp	r6, #0
   143c0:	ldr	r5, [sp, #68]	; 0x44
   143c4:	str	r3, [sp, #8]
   143c8:	ldr	r3, [r0, #20]
   143cc:	beq	1473c <__assert_fail@plt+0x34a4>
   143d0:	mov	r1, #11
   143d4:	mov	r0, r6
   143d8:	str	r3, [sp, #12]
   143dc:	bl	11184 <strchr@plt>
   143e0:	cmp	r8, #0
   143e4:	mov	r9, r0
   143e8:	ldr	r3, [sp, #12]
   143ec:	bne	14638 <__assert_fail@plt+0x33a0>
   143f0:	cmp	r0, #0
   143f4:	beq	14934 <__assert_fail@plt+0x369c>
   143f8:	subs	r1, r0, r6
   143fc:	movne	r4, #1
   14400:	moveq	r4, #0
   14404:	cmp	r3, #0
   14408:	str	r1, [sp, #20]
   1440c:	beq	148d8 <__assert_fail@plt+0x3640>
   14410:	cmp	r1, #0
   14414:	beq	14928 <__assert_fail@plt+0x3690>
   14418:	mov	r0, r6
   1441c:	mov	r4, #1
   14420:	bl	1104c <strndup@plt>
   14424:	adds	r3, r0, #0
   14428:	mov	r6, r0
   1442c:	movne	r3, #1
   14430:	str	r3, [sp, #16]
   14434:	mov	r1, fp
   14438:	mov	r0, r7
   1443c:	bl	173f4 <argp_parse@@Base+0xe80>
   14440:	mov	r2, r0
   14444:	mov	r1, r6
   14448:	ldr	r3, [r7, #20]
   1444c:	mov	r0, #1
   14450:	movt	r0, #512	; 0x200
   14454:	str	r2, [sp, #12]
   14458:	blx	r3
   1445c:	subs	r9, r0, #0
   14460:	moveq	r4, r9
   14464:	beq	144f4 <__assert_fail@plt+0x325c>
   14468:	cmp	r6, r9
   1446c:	movne	r4, #0
   14470:	andeq	r4, r4, #1
   14474:	cmp	sl, #0
   14478:	ldr	r2, [r5, #28]
   1447c:	bne	14780 <__assert_fail@plt+0x34e8>
   14480:	cmp	r4, #0
   14484:	beq	146dc <__assert_fail@plt+0x3444>
   14488:	ldr	r3, [sp, #20]
   1448c:	ldr	r0, [r5, #32]
   14490:	add	r1, r2, r3
   14494:	cmp	r0, r1
   14498:	bcs	14694 <__assert_fail@plt+0x33fc>
   1449c:	mov	r1, r3
   144a0:	mov	r0, r5
   144a4:	bl	18880 <argp_parse@@Base+0x230c>
   144a8:	cmp	r0, #0
   144ac:	ldr	r2, [r5, #28]
   144b0:	bne	14694 <__assert_fail@plt+0x33fc>
   144b4:	ldr	r0, [r5, #16]
   144b8:	ldr	r1, [r5, #24]
   144bc:	sub	r2, r2, r1
   144c0:	cmp	r2, r0
   144c4:	bhi	147c8 <__assert_fail@plt+0x3530>
   144c8:	ldr	r1, [r5, #4]
   144cc:	ldr	r2, [r5, #20]
   144d0:	bic	r2, r2, r2, asr #31
   144d4:	cmp	r1, r2
   144d8:	bcc	147a4 <__assert_fail@plt+0x350c>
   144dc:	cmp	r9, r6
   144e0:	moveq	r4, #1
   144e4:	beq	144f4 <__assert_fail@plt+0x325c>
   144e8:	mov	r0, r9
   144ec:	mov	r4, #1
   144f0:	bl	17558 <argp_parse@@Base+0xfe4>
   144f4:	ldr	r3, [sp, #16]
   144f8:	cmp	r3, #0
   144fc:	beq	14514 <__assert_fail@plt+0x327c>
   14500:	ldr	r3, [r7, #20]
   14504:	cmp	r3, #0
   14508:	beq	14594 <__assert_fail@plt+0x32fc>
   1450c:	mov	r0, r6
   14510:	bl	17558 <argp_parse@@Base+0xfe4>
   14514:	cmp	r8, #0
   14518:	beq	14594 <__assert_fail@plt+0x32fc>
   1451c:	ldr	r3, [r7, #20]
   14520:	cmp	r3, #0
   14524:	beq	14594 <__assert_fail@plt+0x32fc>
   14528:	mov	r0, #4
   1452c:	movt	r0, #512	; 0x200
   14530:	ldr	r2, [sp, #12]
   14534:	mov	r1, #0
   14538:	blx	r3
   1453c:	subs	r6, r0, #0
   14540:	beq	14594 <__assert_fail@plt+0x32fc>
   14544:	orrs	r3, sl, r4
   14548:	bne	14864 <__assert_fail@plt+0x35cc>
   1454c:	mov	r0, r6
   14550:	bl	11178 <strlen@plt>
   14554:	subs	r4, r0, #0
   14558:	bne	1481c <__assert_fail@plt+0x3584>
   1455c:	mov	r0, r6
   14560:	bl	17558 <argp_parse@@Base+0xfe4>
   14564:	ldr	r2, [r5, #16]
   14568:	ldr	r1, [r5, #24]
   1456c:	ldr	r3, [r5, #28]
   14570:	sub	r3, r3, r1
   14574:	cmp	r3, r2
   14578:	bhi	148b0 <__assert_fail@plt+0x3618>
   1457c:	ldr	r2, [r5, #4]
   14580:	ldr	r3, [r5, #20]
   14584:	bic	r3, r3, r3, asr #31
   14588:	cmp	r2, r3
   1458c:	bcc	14888 <__assert_fail@plt+0x35f0>
   14590:	mov	r4, #1
   14594:	ldr	r7, [sp, #8]
   14598:	cmp	r7, #0
   1459c:	beq	14618 <__assert_fail@plt+0x3380>
   145a0:	ldr	r3, [r7]
   145a4:	cmp	r3, #0
   145a8:	beq	14618 <__assert_fail@plt+0x3380>
   145ac:	ldr	r2, [sp, #64]	; 0x40
   145b0:	eor	r6, r2, #1
   145b4:	eor	r2, r4, #1
   145b8:	orr	r2, r2, r6
   145bc:	and	r6, r6, #1
   145c0:	tst	r2, #1
   145c4:	beq	148e8 <__assert_fail@plt+0x3650>
   145c8:	ldr	r9, [sp, #64]	; 0x40
   145cc:	orrs	r2, r4, sl
   145d0:	mov	r0, r3
   145d4:	str	r9, [sp]
   145d8:	movne	r3, #1
   145dc:	moveq	r3, #0
   145e0:	str	r5, [sp, #4]
   145e4:	mov	r2, r8
   145e8:	mov	r1, fp
   145ec:	bl	1438c <__assert_fail@plt+0x30f4>
   145f0:	ldr	r3, [r7, #16]
   145f4:	orr	r4, r4, r0
   145f8:	add	r7, r7, #16
   145fc:	cmp	r3, #0
   14600:	beq	14618 <__assert_fail@plt+0x3380>
   14604:	cmp	r4, #0
   14608:	movne	r2, r6
   1460c:	moveq	r2, #1
   14610:	cmp	r2, #0
   14614:	bne	145cc <__assert_fail@plt+0x3334>
   14618:	mov	r0, r4
   1461c:	add	sp, sp, #28
   14620:	ldrd	r4, [sp]
   14624:	ldrd	r6, [sp, #8]
   14628:	ldrd	r8, [sp, #16]
   1462c:	ldrd	sl, [sp, #24]
   14630:	add	sp, sp, #32
   14634:	pop	{pc}		; (ldr pc, [sp], #4)
   14638:	cmp	r0, #0
   1463c:	beq	148bc <__assert_fail@plt+0x3624>
   14640:	cmp	r3, #0
   14644:	add	r6, r0, #1
   14648:	movne	r1, fp
   1464c:	movne	r0, r7
   14650:	beq	146b8 <__assert_fail@plt+0x3420>
   14654:	bl	173f4 <argp_parse@@Base+0xe80>
   14658:	ldr	r3, [r7, #20]
   1465c:	str	r0, [sp, #12]
   14660:	mov	r0, #2
   14664:	movt	r0, #512	; 0x200
   14668:	mov	r1, r6
   1466c:	ldr	r2, [sp, #12]
   14670:	blx	r3
   14674:	subs	r9, r0, #0
   14678:	moveq	r4, r9
   1467c:	beq	14514 <__assert_fail@plt+0x327c>
   14680:	mov	r3, #0
   14684:	mov	r4, r3
   14688:	str	r3, [sp, #16]
   1468c:	str	r3, [sp, #20]
   14690:	b	14468 <__assert_fail@plt+0x31d0>
   14694:	ldr	r4, [sp, #20]
   14698:	mov	r0, r2
   1469c:	mov	r1, r6
   146a0:	mov	r2, r4
   146a4:	bl	11058 <memcpy@plt>
   146a8:	ldr	r2, [r5, #28]
   146ac:	add	r2, r2, r4
   146b0:	str	r2, [r5, #28]
   146b4:	b	144b4 <__assert_fail@plt+0x321c>
   146b8:	cmp	r6, #0
   146bc:	moveq	r4, r6
   146c0:	beq	14594 <__assert_fail@plt+0x32fc>
   146c4:	cmp	sl, #0
   146c8:	ldr	r2, [r5, #28]
   146cc:	bne	1476c <__assert_fail@plt+0x34d4>
   146d0:	mov	r9, r6
   146d4:	str	sl, [sp, #12]
   146d8:	str	sl, [sp, #16]
   146dc:	mov	r0, r9
   146e0:	str	r2, [sp, #20]
   146e4:	bl	11178 <strlen@plt>
   146e8:	subs	r4, r0, #0
   146ec:	ldr	r2, [sp, #20]
   146f0:	beq	144b4 <__assert_fail@plt+0x321c>
   146f4:	ldr	r0, [r5, #32]
   146f8:	add	r1, r2, r4
   146fc:	cmp	r0, r1
   14700:	bcs	1471c <__assert_fail@plt+0x3484>
   14704:	mov	r1, r4
   14708:	mov	r0, r5
   1470c:	bl	18880 <argp_parse@@Base+0x230c>
   14710:	cmp	r0, #0
   14714:	ldr	r2, [r5, #28]
   14718:	beq	144b4 <__assert_fail@plt+0x321c>
   1471c:	mov	r0, r2
   14720:	mov	r1, r9
   14724:	mov	r2, r4
   14728:	bl	11058 <memcpy@plt>
   1472c:	ldr	r2, [r5, #28]
   14730:	add	r2, r2, r4
   14734:	str	r2, [r5, #28]
   14738:	b	144b4 <__assert_fail@plt+0x321c>
   1473c:	cmp	r3, #0
   14740:	beq	148d0 <__assert_fail@plt+0x3638>
   14744:	bl	173f4 <argp_parse@@Base+0xe80>
   14748:	mov	r2, #1
   1474c:	movt	r2, #512	; 0x200
   14750:	str	r0, [sp, #12]
   14754:	cmp	r8, #0
   14758:	mov	r0, #2
   1475c:	movt	r0, #512	; 0x200
   14760:	moveq	r0, r2
   14764:	ldr	r3, [r7, #20]
   14768:	b	14668 <__assert_fail@plt+0x33d0>
   1476c:	mov	r4, #0
   14770:	mov	r9, r6
   14774:	str	r4, [sp, #12]
   14778:	str	r4, [sp, #16]
   1477c:	str	r4, [sp, #20]
   14780:	ldr	r1, [r5, #32]
   14784:	cmp	r1, r2
   14788:	bls	147d4 <__assert_fail@plt+0x353c>
   1478c:	add	r0, r2, #1
   14790:	mov	r1, #10
   14794:	str	r0, [r5, #28]
   14798:	strb	r1, [r2]
   1479c:	ldr	r2, [r5, #28]
   147a0:	b	14480 <__assert_fail@plt+0x31e8>
   147a4:	ldr	r2, [r5, #28]
   147a8:	ldr	r1, [r5, #32]
   147ac:	cmp	r2, r1
   147b0:	bcs	147f0 <__assert_fail@plt+0x3558>
   147b4:	add	r0, r2, #1
   147b8:	mov	r1, #10
   147bc:	str	r0, [r5, #28]
   147c0:	strb	r1, [r2]
   147c4:	b	144dc <__assert_fail@plt+0x3244>
   147c8:	mov	r0, r5
   147cc:	bl	18214 <argp_parse@@Base+0x1ca0>
   147d0:	b	144c8 <__assert_fail@plt+0x3230>
   147d4:	mov	r1, #1
   147d8:	mov	r0, r5
   147dc:	bl	18880 <argp_parse@@Base+0x230c>
   147e0:	cmp	r0, #0
   147e4:	ldr	r2, [r5, #28]
   147e8:	bne	1478c <__assert_fail@plt+0x34f4>
   147ec:	b	14480 <__assert_fail@plt+0x31e8>
   147f0:	mov	r1, #1
   147f4:	mov	r0, r5
   147f8:	bl	18880 <argp_parse@@Base+0x230c>
   147fc:	cmp	r0, #0
   14800:	beq	144dc <__assert_fail@plt+0x3244>
   14804:	ldr	r2, [r5, #28]
   14808:	mov	r1, #10
   1480c:	add	r0, r2, #1
   14810:	str	r0, [r5, #28]
   14814:	strb	r1, [r2]
   14818:	b	144dc <__assert_fail@plt+0x3244>
   1481c:	ldr	r0, [r5, #28]
   14820:	ldr	r2, [r5, #32]
   14824:	add	r3, r0, r4
   14828:	cmp	r2, r3
   1482c:	bcs	14848 <__assert_fail@plt+0x35b0>
   14830:	mov	r1, r4
   14834:	mov	r0, r5
   14838:	bl	18880 <argp_parse@@Base+0x230c>
   1483c:	cmp	r0, #0
   14840:	beq	1455c <__assert_fail@plt+0x32c4>
   14844:	ldr	r0, [r5, #28]
   14848:	mov	r2, r4
   1484c:	mov	r1, r6
   14850:	bl	11058 <memcpy@plt>
   14854:	ldr	r3, [r5, #28]
   14858:	add	r4, r3, r4
   1485c:	str	r4, [r5, #28]
   14860:	b	1455c <__assert_fail@plt+0x32c4>
   14864:	ldr	r3, [r5, #28]
   14868:	ldr	r2, [r5, #32]
   1486c:	cmp	r3, r2
   14870:	bcs	1490c <__assert_fail@plt+0x3674>
   14874:	add	r1, r3, #1
   14878:	mov	r2, #10
   1487c:	str	r1, [r5, #28]
   14880:	strb	r2, [r3]
   14884:	b	1454c <__assert_fail@plt+0x32b4>
   14888:	ldr	r3, [r5, #28]
   1488c:	ldr	r2, [r5, #32]
   14890:	cmp	r3, r2
   14894:	bcs	148f0 <__assert_fail@plt+0x3658>
   14898:	add	r1, r3, #1
   1489c:	mov	r2, #10
   148a0:	mov	r4, #1
   148a4:	str	r1, [r5, #28]
   148a8:	strb	r2, [r3]
   148ac:	b	14594 <__assert_fail@plt+0x32fc>
   148b0:	mov	r0, r5
   148b4:	bl	18214 <argp_parse@@Base+0x1ca0>
   148b8:	b	1457c <__assert_fail@plt+0x32e4>
   148bc:	cmp	r3, #0
   148c0:	movne	r1, fp
   148c4:	movne	r0, r7
   148c8:	movne	r6, r9
   148cc:	bne	14654 <__assert_fail@plt+0x33bc>
   148d0:	mov	r4, r3
   148d4:	b	14594 <__assert_fail@plt+0x32fc>
   148d8:	mov	r9, r6
   148dc:	str	r8, [sp, #12]
   148e0:	str	r4, [sp, #16]
   148e4:	b	14468 <__assert_fail@plt+0x31d0>
   148e8:	mov	r4, #1
   148ec:	b	14618 <__assert_fail@plt+0x3380>
   148f0:	mov	r1, #1
   148f4:	mov	r0, r5
   148f8:	bl	18880 <argp_parse@@Base+0x230c>
   148fc:	cmp	r0, #0
   14900:	beq	14590 <__assert_fail@plt+0x32f8>
   14904:	ldr	r3, [r5, #28]
   14908:	b	14898 <__assert_fail@plt+0x3600>
   1490c:	mov	r1, #1
   14910:	mov	r0, r5
   14914:	bl	18880 <argp_parse@@Base+0x230c>
   14918:	cmp	r0, #0
   1491c:	beq	1454c <__assert_fail@plt+0x32b4>
   14920:	ldr	r3, [r5, #28]
   14924:	b	14874 <__assert_fail@plt+0x35dc>
   14928:	ldr	r4, [sp, #20]
   1492c:	str	r4, [sp, #16]
   14930:	b	14434 <__assert_fail@plt+0x319c>
   14934:	cmp	r3, #0
   14938:	beq	146c4 <__assert_fail@plt+0x342c>
   1493c:	mov	r1, fp
   14940:	mov	r0, r7
   14944:	bl	173f4 <argp_parse@@Base+0xe80>
   14948:	str	r0, [sp, #12]
   1494c:	mov	r0, #1
   14950:	movt	r0, #512	; 0x200
   14954:	ldr	r3, [r7, #20]
   14958:	b	14668 <__assert_fail@plt+0x33d0>

0001495c <argp_failure@@Base>:
   1495c:	push	{r3}		; (str r3, [sp, #-4]!)
   14960:	strd	r4, [sp, #-20]!	; 0xffffffec
   14964:	subs	r5, r0, #0
   14968:	strd	r6, [sp, #8]
   1496c:	mov	r7, r1
   14970:	mov	r6, r2
   14974:	str	lr, [sp, #16]
   14978:	sub	sp, sp, #200	; 0xc8
   1497c:	beq	14ad8 <argp_failure@@Base+0x17c>
   14980:	ldr	r3, [r5, #16]
   14984:	tst	r3, #2
   14988:	bne	14abc <argp_failure@@Base+0x160>
   1498c:	ldr	r4, [r5, #44]	; 0x2c
   14990:	cmp	r4, #0
   14994:	beq	14abc <argp_failure@@Base+0x160>
   14998:	mov	r0, r4
   1499c:	bl	1122c <flockfile@plt>
   149a0:	ldr	r0, [r5, #40]	; 0x28
   149a4:	mov	r1, r4
   149a8:	bl	10fc8 <fputs_unlocked@plt>
   149ac:	ldr	r3, [sp, #220]	; 0xdc
   149b0:	cmp	r3, #0
   149b4:	beq	14a10 <argp_failure@@Base+0xb4>
   149b8:	ldr	r3, [r4, #20]
   149bc:	add	r1, sp, #224	; 0xe0
   149c0:	ldr	r2, [r4, #24]
   149c4:	str	r1, [sp]
   149c8:	cmp	r3, r2
   149cc:	addcc	r1, r3, #1
   149d0:	movcc	r2, #58	; 0x3a
   149d4:	strcc	r1, [r4, #20]
   149d8:	strbcc	r2, [r3]
   149dc:	bcs	14b48 <argp_failure@@Base+0x1ec>
   149e0:	ldr	r3, [r4, #20]
   149e4:	ldr	r2, [r4, #24]
   149e8:	cmp	r3, r2
   149ec:	addcc	r1, r3, #1
   149f0:	movcc	r2, #32
   149f4:	strcc	r1, [r4, #20]
   149f8:	strbcc	r2, [r3]
   149fc:	bcs	14b38 <argp_failure@@Base+0x1dc>
   14a00:	mov	r0, r4
   14a04:	ldr	r2, [sp]
   14a08:	ldr	r1, [sp, #220]	; 0xdc
   14a0c:	bl	11214 <vfprintf@plt>
   14a10:	cmp	r6, #0
   14a14:	ldr	r3, [r4, #20]
   14a18:	ldr	r2, [r4, #24]
   14a1c:	beq	14a80 <argp_failure@@Base+0x124>
   14a20:	cmp	r2, r3
   14a24:	addhi	r1, r3, #1
   14a28:	movhi	r2, #58	; 0x3a
   14a2c:	strhi	r1, [r4, #20]
   14a30:	strbhi	r2, [r3]
   14a34:	bls	14b68 <argp_failure@@Base+0x20c>
   14a38:	ldr	r3, [r4, #20]
   14a3c:	ldr	r2, [r4, #24]
   14a40:	cmp	r3, r2
   14a44:	addcc	r1, r3, #1
   14a48:	movcc	r2, #32
   14a4c:	strcc	r1, [r4, #20]
   14a50:	strbcc	r2, [r3]
   14a54:	bcs	14b58 <argp_failure@@Base+0x1fc>
   14a58:	mov	r2, #200	; 0xc8
   14a5c:	mov	r1, sp
   14a60:	mov	r0, r6
   14a64:	bl	111a8 <strerror_r@plt>
   14a68:	cmp	r0, #0
   14a6c:	beq	14b1c <argp_failure@@Base+0x1c0>
   14a70:	mov	r1, r4
   14a74:	bl	10fc8 <fputs_unlocked@plt>
   14a78:	ldr	r3, [r4, #20]
   14a7c:	ldr	r2, [r4, #24]
   14a80:	cmp	r3, r2
   14a84:	addcc	r1, r3, #1
   14a88:	movcc	r2, #10
   14a8c:	strcc	r1, [r4, #20]
   14a90:	strbcc	r2, [r3]
   14a94:	bcs	14b0c <argp_failure@@Base+0x1b0>
   14a98:	mov	r0, r4
   14a9c:	bl	110c4 <funlockfile@plt>
   14aa0:	cmp	r7, #0
   14aa4:	beq	14abc <argp_failure@@Base+0x160>
   14aa8:	cmp	r5, #0
   14aac:	beq	14b04 <argp_failure@@Base+0x1a8>
   14ab0:	ldr	r3, [r5, #16]
   14ab4:	tst	r3, #32
   14ab8:	beq	14b04 <argp_failure@@Base+0x1a8>
   14abc:	add	sp, sp, #200	; 0xc8
   14ac0:	ldrd	r4, [sp]
   14ac4:	ldrd	r6, [sp, #8]
   14ac8:	ldr	lr, [sp, #16]
   14acc:	add	sp, sp, #20
   14ad0:	add	sp, sp, #4
   14ad4:	bx	lr
   14ad8:	movw	r3, #45720	; 0xb298
   14adc:	movt	r3, #2
   14ae0:	ldr	r4, [r3]
   14ae4:	cmp	r4, #0
   14ae8:	beq	14abc <argp_failure@@Base+0x160>
   14aec:	mov	r0, r4
   14af0:	bl	1122c <flockfile@plt>
   14af4:	movw	r3, #45712	; 0xb290
   14af8:	movt	r3, #2
   14afc:	ldr	r0, [r3]
   14b00:	b	149a4 <argp_failure@@Base+0x48>
   14b04:	mov	r0, r7
   14b08:	bl	1116c <exit@plt>
   14b0c:	mov	r1, #10
   14b10:	mov	r0, r4
   14b14:	bl	111e4 <__overflow@plt>
   14b18:	b	14a98 <argp_failure@@Base+0x13c>
   14b1c:	mov	r0, r6
   14b20:	bl	11124 <strerror@plt>
   14b24:	cmp	r0, #0
   14b28:	movw	r3, #40288	; 0x9d60
   14b2c:	movt	r3, #1
   14b30:	moveq	r0, r3
   14b34:	b	14a70 <argp_failure@@Base+0x114>
   14b38:	mov	r1, #32
   14b3c:	mov	r0, r4
   14b40:	bl	111e4 <__overflow@plt>
   14b44:	b	14a00 <argp_failure@@Base+0xa4>
   14b48:	mov	r1, #58	; 0x3a
   14b4c:	mov	r0, r4
   14b50:	bl	111e4 <__overflow@plt>
   14b54:	b	149e0 <argp_failure@@Base+0x84>
   14b58:	mov	r1, #32
   14b5c:	mov	r0, r4
   14b60:	bl	111e4 <__overflow@plt>
   14b64:	b	14a58 <argp_failure@@Base+0xfc>
   14b68:	mov	r1, #58	; 0x3a
   14b6c:	mov	r0, r4
   14b70:	bl	111e4 <__overflow@plt>
   14b74:	b	14a38 <argp_failure@@Base+0xdc>
   14b78:	cmp	r2, #0
   14b7c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14b80:	strd	r6, [sp, #8]
   14b84:	strd	r8, [sp, #16]
   14b88:	strd	sl, [sp, #24]
   14b8c:	add	fp, sp, #32
   14b90:	str	lr, [sp, #32]
   14b94:	sub	sp, sp, #124	; 0x7c
   14b98:	str	r2, [fp, #-128]	; 0xffffff80
   14b9c:	strd	r0, [fp, #-108]	; 0xffffff94
   14ba0:	str	r3, [fp, #-100]	; 0xffffff9c
   14ba4:	beq	15018 <argp_failure@@Base+0x6bc>
   14ba8:	mov	r0, r2
   14bac:	movw	r8, #45652	; 0xb254
   14bb0:	movt	r8, #2
   14bb4:	bl	1122c <flockfile@plt>
   14bb8:	ldr	r3, [r8, #36]	; 0x24
   14bbc:	cmp	r3, #0
   14bc0:	beq	15034 <argp_failure@@Base+0x6d8>
   14bc4:	mov	r3, #0
   14bc8:	ldr	r0, [fp, #-128]	; 0xffffff80
   14bcc:	mov	r1, r3
   14bd0:	ldr	r2, [r8, #32]
   14bd4:	bl	1817c <argp_parse@@Base+0x1c08>
   14bd8:	subs	r7, r0, #0
   14bdc:	beq	15b54 <argp_failure@@Base+0x11f8>
   14be0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14be4:	ands	r3, r3, #11
   14be8:	streq	r3, [fp, #-136]	; 0xffffff78
   14bec:	bne	15364 <argp_failure@@Base+0xa08>
   14bf0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14bf4:	ands	r4, r3, #3
   14bf8:	bne	151f4 <argp_failure@@Base+0x898>
   14bfc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c00:	tst	r3, #16
   14c04:	bne	151c0 <argp_failure@@Base+0x864>
   14c08:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c0c:	tst	r3, #4
   14c10:	and	r5, r3, #8
   14c14:	bne	1513c <argp_failure@@Base+0x7e0>
   14c18:	cmp	r5, #0
   14c1c:	beq	14fb0 <argp_failure@@Base+0x654>
   14c20:	ldr	r3, [fp, #-136]	; 0xffffff78
   14c24:	ldr	r3, [r3, #4]
   14c28:	cmp	r3, #0
   14c2c:	str	r3, [fp, #-112]	; 0xffffff90
   14c30:	beq	14fb0 <argp_failure@@Base+0x654>
   14c34:	cmp	r4, #0
   14c38:	bne	1516c <argp_failure@@Base+0x810>
   14c3c:	ldr	r3, [fp, #-136]	; 0xffffff78
   14c40:	ldr	r3, [r3]
   14c44:	str	r4, [fp, #-88]	; 0xffffffa8
   14c48:	str	r4, [fp, #-84]	; 0xffffffac
   14c4c:	str	r4, [fp, #-80]	; 0xffffffb0
   14c50:	mov	r2, r3
   14c54:	movw	r3, #39172	; 0x9904
   14c58:	movt	r3, #1
   14c5c:	mov	r5, r2
   14c60:	str	r3, [fp, #-140]	; 0xffffff74
   14c64:	movw	r3, #40736	; 0x9f20
   14c68:	movt	r3, #1
   14c6c:	str	r8, [fp, #-96]	; 0xffffffa0
   14c70:	str	r3, [fp, #-144]	; 0xffffff70
   14c74:	ldr	r0, [r7, #16]
   14c78:	ldr	r3, [r7, #24]
   14c7c:	ldr	r2, [r7, #28]
   14c80:	ldr	r4, [r5]
   14c84:	ldr	r9, [r5, #8]
   14c88:	sub	r2, r2, r3
   14c8c:	cmp	r2, r0
   14c90:	bhi	15844 <argp_failure@@Base+0xee8>
   14c94:	ldr	r1, [r7, #4]
   14c98:	mov	r3, #1
   14c9c:	ldr	r8, [r4, #12]
   14ca0:	str	r1, [fp, #-120]	; 0xffffff88
   14ca4:	mov	r1, #0
   14ca8:	str	r1, [r7, #4]
   14cac:	ldr	r1, [r7, #12]
   14cb0:	str	r3, [fp, #-64]	; 0xffffffc0
   14cb4:	ldr	r3, [fp, #-104]	; 0xffffff98
   14cb8:	str	r1, [fp, #-116]	; 0xffffff8c
   14cbc:	ands	r1, r8, #8
   14cc0:	str	r5, [fp, #-76]	; 0xffffffb4
   14cc4:	str	r1, [fp, #-124]	; 0xffffff84
   14cc8:	sub	r1, fp, #88	; 0x58
   14ccc:	str	r7, [fp, #-72]	; 0xffffffb8
   14cd0:	str	r3, [fp, #-60]	; 0xffffffc4
   14cd4:	movne	r3, #0
   14cd8:	str	r1, [fp, #-68]	; 0xffffffbc
   14cdc:	strne	r3, [fp, #-124]	; 0xffffff84
   14ce0:	bne	14d18 <argp_failure@@Base+0x3bc>
   14ce4:	ldr	r1, [r5, #4]
   14ce8:	cmp	r1, #0
   14cec:	beq	14d18 <argp_failure@@Base+0x3bc>
   14cf0:	add	r3, r4, #24
   14cf4:	ldr	ip, [r3, #-24]	; 0xffffffe8
   14cf8:	cmp	ip, #0
   14cfc:	beq	14d0c <argp_failure@@Base+0x3b0>
   14d00:	ldr	ip, [r3, #-12]
   14d04:	tst	ip, #2
   14d08:	beq	15964 <argp_failure@@Base+0x1008>
   14d0c:	subs	r1, r1, #1
   14d10:	add	r3, r3, #24
   14d14:	bne	14cf4 <argp_failure@@Base+0x398>
   14d18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14d1c:	cmp	r2, r0
   14d20:	ldr	r6, [r3, #8]
   14d24:	bhi	158a0 <argp_failure@@Base+0xf44>
   14d28:	str	r6, [r7, #12]
   14d2c:	ldr	sl, [r5, #4]
   14d30:	cmp	sl, #0
   14d34:	movne	r6, r4
   14d38:	strne	r5, [fp, #-132]	; 0xffffff7c
   14d3c:	movne	r5, r4
   14d40:	movne	r4, r9
   14d44:	beq	14d9c <argp_failure@@Base+0x440>
   14d48:	ldr	r9, [r6, #12]
   14d4c:	tst	r9, #8
   14d50:	bne	14d88 <argp_failure@@Base+0x42c>
   14d54:	ldr	r8, [r6, #4]
   14d58:	sub	r2, r8, #1
   14d5c:	cmp	r2, #254	; 0xfe
   14d60:	bhi	14d88 <argp_failure@@Base+0x42c>
   14d64:	bl	11154 <__ctype_b_loc@plt>
   14d68:	ldr	r1, [r0]
   14d6c:	lsl	r2, r8, #1
   14d70:	ldrh	r2, [r1, r2]
   14d74:	tst	r2, #16384	; 0x4000
   14d78:	beq	14d88 <argp_failure@@Base+0x42c>
   14d7c:	ldrb	r2, [r4]
   14d80:	cmp	r8, r2
   14d84:	beq	154cc <argp_failure@@Base+0xb70>
   14d88:	subs	sl, sl, #1
   14d8c:	add	r6, r6, #24
   14d90:	bne	14d48 <argp_failure@@Base+0x3ec>
   14d94:	mov	r4, r5
   14d98:	ldr	r5, [fp, #-132]	; 0xffffff7c
   14d9c:	ldr	r2, [r4, #12]
   14da0:	ldr	r1, [r7, #24]
   14da4:	ldr	r3, [r7, #28]
   14da8:	tst	r2, #8
   14dac:	ldr	r2, [r7, #16]
   14db0:	sub	r3, r3, r1
   14db4:	beq	155bc <argp_failure@@Base+0xc60>
   14db8:	cmp	r3, r2
   14dbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14dc0:	ldr	r6, [r3, #16]
   14dc4:	bhi	159a0 <argp_failure@@Base+0x1044>
   14dc8:	str	r6, [r7, #12]
   14dcc:	ldr	r8, [r5, #4]
   14dd0:	cmp	r8, #0
   14dd4:	addne	r6, r4, #24
   14dd8:	bne	14dec <argp_failure@@Base+0x490>
   14ddc:	b	14e7c <argp_failure@@Base+0x520>
   14de0:	subs	r8, r8, #1
   14de4:	add	r6, r6, #24
   14de8:	beq	14e7c <argp_failure@@Base+0x520>
   14dec:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14df0:	cmp	r3, #0
   14df4:	beq	14de0 <argp_failure@@Base+0x484>
   14df8:	ldr	r3, [r6, #-12]
   14dfc:	tst	r3, #2
   14e00:	bne	14de0 <argp_failure@@Base+0x484>
   14e04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14e08:	sub	r1, fp, #76	; 0x4c
   14e0c:	ldr	r0, [r3, #16]
   14e10:	bl	141dc <__assert_fail@plt+0x2f44>
   14e14:	ldr	sl, [r6, #-24]	; 0xffffffe8
   14e18:	mov	r0, sl
   14e1c:	bl	11178 <strlen@plt>
   14e20:	subs	r9, r0, #0
   14e24:	beq	14de0 <argp_failure@@Base+0x484>
   14e28:	ldr	ip, [r7, #28]
   14e2c:	mov	r1, r9
   14e30:	mov	r0, r7
   14e34:	ldr	lr, [r7, #32]
   14e38:	add	r2, ip, r9
   14e3c:	cmp	lr, r2
   14e40:	bcs	14e54 <argp_failure@@Base+0x4f8>
   14e44:	bl	18880 <argp_parse@@Base+0x230c>
   14e48:	cmp	r0, #0
   14e4c:	beq	14de0 <argp_failure@@Base+0x484>
   14e50:	ldr	ip, [r7, #28]
   14e54:	mov	r2, r9
   14e58:	mov	r1, sl
   14e5c:	mov	r0, ip
   14e60:	add	r6, r6, #24
   14e64:	bl	11058 <memcpy@plt>
   14e68:	ldr	r2, [r7, #28]
   14e6c:	subs	r8, r8, #1
   14e70:	add	r3, r2, r9
   14e74:	str	r3, [r7, #28]
   14e78:	bne	14dec <argp_failure@@Base+0x490>
   14e7c:	ldr	r2, [r7, #16]
   14e80:	ldr	r1, [r7, #24]
   14e84:	ldr	r3, [r7, #28]
   14e88:	sub	r3, r3, r1
   14e8c:	cmp	r3, r2
   14e90:	bhi	15894 <argp_failure@@Base+0xf38>
   14e94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14e98:	mov	r2, #0
   14e9c:	str	r2, [r7, #4]
   14ea0:	cmp	r3, r2
   14ea4:	beq	154dc <argp_failure@@Base+0xb80>
   14ea8:	ldr	r3, [r4, #12]
   14eac:	tst	r3, #8
   14eb0:	bne	14edc <argp_failure@@Base+0x580>
   14eb4:	ldr	r6, [r4, #4]
   14eb8:	sub	r3, r6, #1
   14ebc:	cmp	r3, #254	; 0xfe
   14ec0:	bhi	14edc <argp_failure@@Base+0x580>
   14ec4:	bl	11154 <__ctype_b_loc@plt>
   14ec8:	ldr	r3, [r0]
   14ecc:	lsl	r6, r6, #1
   14ed0:	ldrh	r3, [r3, r6]
   14ed4:	tst	r3, #16384	; 0x4000
   14ed8:	bne	14ee8 <argp_failure@@Base+0x58c>
   14edc:	ldr	r3, [r4]
   14ee0:	cmp	r3, #0
   14ee4:	beq	159d0 <argp_failure@@Base+0x1074>
   14ee8:	ldr	r2, [r7, #16]
   14eec:	ldr	r1, [r7, #24]
   14ef0:	ldr	r3, [r7, #28]
   14ef4:	sub	r3, r3, r1
   14ef8:	cmp	r3, r2
   14efc:	bhi	15860 <argp_failure@@Base+0xf04>
   14f00:	ldr	r3, [fp, #-120]	; 0xffffff88
   14f04:	str	r3, [r7, #4]
   14f08:	ldr	r3, [fp, #-112]	; 0xffffff90
   14f0c:	add	r5, r5, #28
   14f10:	subs	r3, r3, #1
   14f14:	str	r3, [fp, #-112]	; 0xffffff90
   14f18:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14f1c:	str	r3, [r7, #12]
   14f20:	bne	14c74 <argp_failure@@Base+0x318>
   14f24:	ldr	r8, [fp, #-96]	; 0xffffffa0
   14f28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14f2c:	cmp	r3, #0
   14f30:	beq	14fac <argp_failure@@Base+0x650>
   14f34:	ldr	r3, [r8, #4]
   14f38:	cmp	r3, #0
   14f3c:	beq	14fac <argp_failure@@Base+0x650>
   14f40:	ldr	ip, [fp, #-104]	; 0xffffff98
   14f44:	cmp	ip, #0
   14f48:	beq	15d10 <argp_failure@@Base+0x13b4>
   14f4c:	ldr	r2, [ip]
   14f50:	cmp	r2, #0
   14f54:	beq	15c80 <argp_failure@@Base+0x1324>
   14f58:	ldr	r3, [r2, #20]
   14f5c:	cmp	r3, #0
   14f60:	beq	15c80 <argp_failure@@Base+0x1324>
   14f64:	movw	r5, #40312	; 0x9d78
   14f68:	movt	r5, #1
   14f6c:	mov	r0, r5
   14f70:	mov	r1, #5
   14f74:	movt	r1, #512	; 0x200
   14f78:	mov	r3, ip
   14f7c:	bl	12d7c <__assert_fail@plt+0x1ae4>
   14f80:	subs	r4, r0, #0
   14f84:	beq	14fac <argp_failure@@Base+0x650>
   14f88:	ldrb	r3, [r4]
   14f8c:	subs	r5, r4, r5
   14f90:	movne	r5, #1
   14f94:	cmp	r3, #0
   14f98:	bne	15c8c <argp_failure@@Base+0x1330>
   14f9c:	cmp	r5, #0
   14fa0:	beq	14fac <argp_failure@@Base+0x650>
   14fa4:	mov	r0, r4
   14fa8:	bl	17558 <argp_parse@@Base+0xfe4>
   14fac:	mov	r4, #1
   14fb0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14fb4:	tst	r3, #32
   14fb8:	bne	1546c <argp_failure@@Base+0xb10>
   14fbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14fc0:	tst	r3, #64	; 0x40
   14fc4:	beq	14ff4 <argp_failure@@Base+0x698>
   14fc8:	movw	r5, #45928	; 0xb368
   14fcc:	movt	r5, #2
   14fd0:	ldr	r2, [r5]
   14fd4:	cmp	r2, #0
   14fd8:	beq	14ff4 <argp_failure@@Base+0x698>
   14fdc:	cmp	r4, #0
   14fe0:	bne	154a4 <argp_failure@@Base+0xb48>
   14fe4:	movw	r1, #40768	; 0x9f40
   14fe8:	movt	r1, #1
   14fec:	mov	r0, r7
   14ff0:	bl	188a0 <argp_parse@@Base+0x232c>
   14ff4:	ldr	r0, [fp, #-128]	; 0xffffff80
   14ff8:	bl	110c4 <funlockfile@plt>
   14ffc:	ldr	r3, [fp, #-136]	; 0xffffff78
   15000:	cmp	r3, #0
   15004:	beq	15010 <argp_failure@@Base+0x6b4>
   15008:	mov	r0, r3
   1500c:	bl	12a28 <__assert_fail@plt+0x1790>
   15010:	mov	r0, r7
   15014:	bl	18750 <argp_parse@@Base+0x21dc>
   15018:	sub	sp, fp, #32
   1501c:	ldrd	r4, [sp]
   15020:	ldrd	r6, [sp, #8]
   15024:	ldrd	r8, [sp, #16]
   15028:	ldrd	sl, [sp, #24]
   1502c:	add	sp, sp, #32
   15030:	pop	{pc}		; (ldr pc, [sp], #4)
   15034:	movw	r0, #40428	; 0x9dec
   15038:	movt	r0, #1
   1503c:	bl	11100 <getenv@plt>
   15040:	subs	r5, r0, #0
   15044:	ldrd	r2, [r8]
   15048:	sub	ip, fp, #76	; 0x4c
   1504c:	ldrd	r0, [r8, #8]
   15050:	str	ip, [fp, #-96]	; 0xffffffa0
   15054:	ldrd	r6, [r8, #16]
   15058:	strd	r2, [fp, #-76]	; 0xffffffb4
   1505c:	ldrd	r2, [r8, #24]
   15060:	strd	r0, [fp, #-68]	; 0xffffffbc
   15064:	ldrd	r0, [r8, #32]
   15068:	strd	r6, [fp, #-60]	; 0xffffffc4
   1506c:	strd	r2, [fp, #-52]	; 0xffffffcc
   15070:	strd	r0, [fp, #-44]	; 0xffffffd4
   15074:	beq	14bc4 <argp_failure@@Base+0x268>
   15078:	ldrb	sl, [r5]
   1507c:	movw	r3, #40492	; 0x9e2c
   15080:	movt	r3, #1
   15084:	ldr	r9, [pc, #3300]	; 15d70 <argp_failure@@Base+0x1414>
   15088:	str	r3, [fp, #-116]	; 0xffffff8c
   1508c:	movw	r3, #40444	; 0x9dfc
   15090:	movt	r3, #1
   15094:	str	r3, [fp, #-120]	; 0xffffff88
   15098:	cmp	sl, #0
   1509c:	beq	150d4 <argp_failure@@Base+0x778>
   150a0:	bl	11154 <__ctype_b_loc@plt>
   150a4:	mov	r7, r0
   150a8:	ldr	r1, [r0]
   150ac:	b	150b4 <argp_failure@@Base+0x758>
   150b0:	ldrb	sl, [r5, #1]!
   150b4:	lsl	r3, sl, #1
   150b8:	ldrh	r6, [r1, r3]
   150bc:	tst	r6, #8192	; 0x2000
   150c0:	bne	150b0 <argp_failure@@Base+0x754>
   150c4:	ands	r2, r6, #1024	; 0x400
   150c8:	bne	15738 <argp_failure@@Base+0xddc>
   150cc:	cmp	sl, #0
   150d0:	bne	15b60 <argp_failure@@Base+0x1204>
   150d4:	ldr	r1, [pc, #3224]	; 15d74 <argp_failure@@Base+0x1418>
   150d8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   150dc:	add	r3, r1, #16
   150e0:	cmp	r3, r9
   150e4:	mov	r1, r3
   150e8:	beq	15a3c <argp_failure@@Base+0x10e0>
   150ec:	ldrb	r2, [r3, #14]
   150f0:	cmp	r2, #0
   150f4:	bne	150dc <argp_failure@@Base+0x780>
   150f8:	ldrb	r0, [r3, #15]
   150fc:	sub	ip, fp, #36	; 0x24
   15100:	cmp	r0, #32
   15104:	add	ip, ip, r0
   15108:	beq	150dc <argp_failure@@Base+0x780>
   1510c:	ldr	r0, [ip, #-40]	; 0xffffffd8
   15110:	cmp	r0, lr
   15114:	blt	150dc <argp_failure@@Base+0x780>
   15118:	movw	r0, #40616	; 0x9ea8
   1511c:	movt	r0, #1
   15120:	mov	r1, r2
   15124:	stm	sp, {r0, r3}
   15128:	movw	r3, #40564	; 0x9e74
   1512c:	movt	r3, #1
   15130:	ldr	r0, [fp, #-104]	; 0xffffff98
   15134:	bl	1495c <argp_failure@@Base>
   15138:	b	14bc4 <argp_failure@@Base+0x268>
   1513c:	ldr	r3, [fp, #4]
   15140:	movw	r1, #40680	; 0x9ee8
   15144:	movt	r1, #1
   15148:	mov	r0, r7
   1514c:	mov	r2, r3
   15150:	bl	188a0 <argp_parse@@Base+0x232c>
   15154:	cmp	r5, #0
   15158:	beq	14fac <argp_failure@@Base+0x650>
   1515c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15160:	ldr	r3, [r3, #4]
   15164:	cmp	r3, #0
   15168:	beq	14fac <argp_failure@@Base+0x650>
   1516c:	ldr	r3, [r7, #28]
   15170:	ldr	r2, [r7, #32]
   15174:	cmp	r3, r2
   15178:	bcs	15bc8 <argp_failure@@Base+0x126c>
   1517c:	add	r1, r3, #1
   15180:	mov	r2, #10
   15184:	str	r1, [r7, #28]
   15188:	strb	r2, [r3]
   1518c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15190:	ldr	r3, [r3, #4]
   15194:	str	r3, [fp, #-112]	; 0xffffff90
   15198:	mov	r3, #0
   1519c:	ldr	r2, [fp, #-112]	; 0xffffff90
   151a0:	cmp	r2, r3
   151a4:	ldr	r2, [fp, #-136]	; 0xffffff78
   151a8:	ldr	r2, [r2]
   151ac:	str	r3, [fp, #-88]	; 0xffffffa8
   151b0:	str	r3, [fp, #-84]	; 0xffffffac
   151b4:	str	r3, [fp, #-80]	; 0xffffffb0
   151b8:	bne	14c54 <argp_failure@@Base+0x2f8>
   151bc:	b	14fac <argp_failure@@Base+0x650>
   151c0:	mov	r0, #1
   151c4:	mov	r3, #0
   151c8:	ldr	r1, [fp, #-104]	; 0xffffff98
   151cc:	mov	r2, r3
   151d0:	stm	sp, {r0, r7}
   151d4:	ldr	r0, [fp, #-108]	; 0xffffff94
   151d8:	bl	1438c <__assert_fail@plt+0x30f4>
   151dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   151e0:	orr	r4, r4, r0
   151e4:	tst	r3, #4
   151e8:	and	r5, r3, #8
   151ec:	beq	14c18 <argp_failure@@Base+0x2bc>
   151f0:	b	1513c <argp_failure@@Base+0x7e0>
   151f4:	ldr	r3, [fp, #-108]	; 0xffffff94
   151f8:	movw	r2, #40656	; 0x9ed0
   151fc:	movt	r2, #1
   15200:	movw	sl, #40648	; 0x9ec8
   15204:	movt	sl, #1
   15208:	str	r2, [fp, #-120]	; 0xffffff88
   1520c:	mov	r4, #1
   15210:	ldr	r0, [r3, #8]
   15214:	ldr	r1, [r3, #16]
   15218:	movw	r3, #40640	; 0x9ec0
   1521c:	movt	r3, #1
   15220:	str	r3, [fp, #-124]	; 0xffffff84
   15224:	bl	12d10 <__assert_fail@plt+0x1a78>
   15228:	add	r3, r0, #7
   1522c:	mov	r2, r0
   15230:	bic	r3, r3, #7
   15234:	mov	r1, #0
   15238:	sub	sp, sp, r3
   1523c:	add	r9, sp, #8
   15240:	mov	r0, r9
   15244:	bl	111b4 <memset@plt>
   15248:	sub	r3, fp, #76	; 0x4c
   1524c:	str	sl, [fp, #-116]	; 0xffffff8c
   15250:	str	r9, [fp, #-112]	; 0xffffff90
   15254:	str	r3, [fp, #-96]	; 0xffffffa0
   15258:	ldr	r9, [fp, #-136]	; 0xffffff78
   1525c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   15260:	b	1533c <argp_failure@@Base+0x9e0>
   15264:	cmp	r4, #0
   15268:	mov	r0, r7
   1526c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15270:	ldr	r3, [fp, #-112]	; 0xffffff90
   15274:	ldrne	r2, [fp, #-124]	; 0xffffff84
   15278:	ldreq	r2, [fp, #-120]	; 0xffffff88
   1527c:	ldr	r4, [r7, #12]
   15280:	str	r5, [r7, #12]
   15284:	str	r3, [fp, #-76]	; 0xffffffb4
   15288:	ldr	r3, [fp, #4]
   1528c:	bl	188a0 <argp_parse@@Base+0x232c>
   15290:	ldr	r2, [r7, #16]
   15294:	ldr	r1, [r7, #24]
   15298:	ldr	r3, [r7, #28]
   1529c:	ldr	r5, [r8, #28]
   152a0:	sub	r3, r3, r1
   152a4:	cmp	r3, r2
   152a8:	bhi	15460 <argp_failure@@Base+0xb04>
   152ac:	tst	sl, #2
   152b0:	ldr	r6, [r7, #4]
   152b4:	str	r5, [r7, #4]
   152b8:	beq	1544c <argp_failure@@Base+0xaf0>
   152bc:	ldr	r3, [r9, #4]
   152c0:	cmp	r3, #0
   152c4:	bne	159e4 <argp_failure@@Base+0x1088>
   152c8:	mov	r3, #1
   152cc:	str	r7, [sp]
   152d0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   152d4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   152d8:	bl	13d30 <__assert_fail@plt+0x2a98>
   152dc:	ldr	r1, [r7, #16]
   152e0:	mov	r5, r0
   152e4:	ldrd	r2, [r7, #24]
   152e8:	sub	r2, r3, r2
   152ec:	cmp	r2, r1
   152f0:	strls	r4, [r7, #12]
   152f4:	bhi	1541c <argp_failure@@Base+0xac0>
   152f8:	ldr	r2, [r7, #32]
   152fc:	str	r6, [r7, #4]
   15300:	cmp	r2, r3
   15304:	bhi	15320 <argp_failure@@Base+0x9c4>
   15308:	mov	r1, #1
   1530c:	mov	r0, r7
   15310:	bl	18880 <argp_parse@@Base+0x230c>
   15314:	cmp	r0, #0
   15318:	beq	15330 <argp_failure@@Base+0x9d4>
   1531c:	ldr	r3, [r7, #28]
   15320:	add	r1, r3, #1
   15324:	mov	r2, #10
   15328:	str	r1, [r7, #28]
   1532c:	strb	r2, [r3]
   15330:	cmp	r5, #0
   15334:	mov	r4, #0
   15338:	beq	1548c <argp_failure@@Base+0xb30>
   1533c:	ldr	r2, [r7, #16]
   15340:	ldr	r1, [r7, #24]
   15344:	ldr	r3, [r7, #28]
   15348:	ldr	r5, [r8, #28]
   1534c:	sub	r3, r3, r1
   15350:	cmp	r3, r2
   15354:	bls	15264 <argp_failure@@Base+0x908>
   15358:	mov	r0, r7
   1535c:	bl	18214 <argp_parse@@Base+0x1ca0>
   15360:	b	15264 <argp_failure@@Base+0x908>
   15364:	mov	r1, #0
   15368:	ldr	r0, [fp, #-108]	; 0xffffff94
   1536c:	bl	12dc4 <__assert_fail@plt+0x1b2c>
   15370:	ldr	r5, [r0]
   15374:	mov	r6, r0
   15378:	movw	r2, #40624	; 0x9eb0
   1537c:	movt	r2, #1
   15380:	ldr	r4, [r0, #4]
   15384:	str	r6, [fp, #-136]	; 0xffffff78
   15388:	mov	r0, r5
   1538c:	mov	r1, r4
   15390:	bl	12c6c <__assert_fail@plt+0x19d4>
   15394:	cmp	r0, #0
   15398:	beq	153a8 <argp_failure@@Base+0xa4c>
   1539c:	mvn	r3, #0
   153a0:	str	r3, [r0, #12]
   153a4:	ldr	r4, [r6, #4]
   153a8:	movw	r2, #40632	; 0x9eb8
   153ac:	movt	r2, #1
   153b0:	mov	r1, r4
   153b4:	mov	r0, r5
   153b8:	bl	12c6c <__assert_fail@plt+0x19d4>
   153bc:	cmp	r0, #0
   153c0:	beq	153d4 <argp_failure@@Base+0xa78>
   153c4:	mvn	r3, #0
   153c8:	str	r3, [r0, #12]
   153cc:	ldr	r3, [fp, #-136]	; 0xffffff78
   153d0:	ldr	r4, [r3, #4]
   153d4:	cmp	r4, #0
   153d8:	beq	14bf0 <argp_failure@@Base+0x294>
   153dc:	mov	r3, r5
   153e0:	mov	r1, #0
   153e4:	str	r1, [r3, #24]
   153e8:	add	r1, r1, #1
   153ec:	add	r3, r3, #28
   153f0:	cmp	r1, r4
   153f4:	bne	153e4 <argp_failure@@Base+0xa88>
   153f8:	mov	r0, r5
   153fc:	movw	r3, #14192	; 0x3770
   15400:	movt	r3, #1
   15404:	mov	r2, #28
   15408:	bl	11244 <qsort@plt>
   1540c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15410:	ands	r4, r3, #3
   15414:	beq	14bfc <argp_failure@@Base+0x2a0>
   15418:	b	151f4 <argp_failure@@Base+0x898>
   1541c:	mov	r0, r7
   15420:	bl	18214 <argp_parse@@Base+0x1ca0>
   15424:	ldr	r1, [r7, #16]
   15428:	str	r4, [r7, #12]
   1542c:	ldrd	r2, [r7, #24]
   15430:	sub	r2, r3, r2
   15434:	cmp	r2, r1
   15438:	bls	152f8 <argp_failure@@Base+0x99c>
   1543c:	mov	r0, r7
   15440:	bl	18214 <argp_parse@@Base+0x1ca0>
   15444:	ldr	r3, [r7, #28]
   15448:	b	152f8 <argp_failure@@Base+0x99c>
   1544c:	mov	r1, r7
   15450:	mov	r0, r9
   15454:	orr	sl, sl, #2
   15458:	bl	1358c <__assert_fail@plt+0x22f4>
   1545c:	b	152c8 <argp_failure@@Base+0x96c>
   15460:	mov	r0, r7
   15464:	bl	18214 <argp_parse@@Base+0x1ca0>
   15468:	b	152ac <argp_failure@@Base+0x950>
   1546c:	mov	r2, #0
   15470:	mov	r3, r4
   15474:	ldrd	r0, [fp, #-108]	; 0xffffff94
   15478:	stm	sp, {r2, r7}
   1547c:	mov	r2, #1
   15480:	bl	1438c <__assert_fail@plt+0x30f4>
   15484:	orr	r4, r4, r0
   15488:	b	14fbc <argp_failure@@Base+0x660>
   1548c:	str	sl, [fp, #-100]	; 0xffffff9c
   15490:	mov	r4, #1
   15494:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15498:	tst	r3, #16
   1549c:	beq	14c08 <argp_failure@@Base+0x2ac>
   154a0:	b	151c0 <argp_failure@@Base+0x864>
   154a4:	ldr	r3, [r7, #28]
   154a8:	ldr	r2, [r7, #32]
   154ac:	cmp	r3, r2
   154b0:	bcs	15b98 <argp_failure@@Base+0x123c>
   154b4:	add	r1, r3, #1
   154b8:	mov	r2, #10
   154bc:	str	r1, [r7, #28]
   154c0:	strb	r2, [r3]
   154c4:	ldr	r2, [r5]
   154c8:	b	14fe4 <argp_failure@@Base+0x688>
   154cc:	tst	r9, #2
   154d0:	beq	158b4 <argp_failure@@Base+0xf58>
   154d4:	add	r4, r4, #1
   154d8:	b	14d88 <argp_failure@@Base+0x42c>
   154dc:	ldr	r2, [r5, #20]
   154e0:	ldr	r6, [r4, #16]
   154e4:	cmp	r2, #0
   154e8:	beq	158ac <argp_failure@@Base+0xf50>
   154ec:	ldr	r3, [r2, #20]
   154f0:	cmp	r3, #0
   154f4:	beq	158ac <argp_failure@@Base+0xf50>
   154f8:	mov	r0, r6
   154fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   15500:	ldr	r1, [r4, #4]
   15504:	bl	12d7c <__assert_fail@plt+0x1ae4>
   15508:	mov	r4, r0
   1550c:	cmp	r4, #0
   15510:	beq	156e0 <argp_failure@@Base+0xd84>
   15514:	ldrb	r3, [r4]
   15518:	cmp	r3, #0
   1551c:	beq	156d0 <argp_failure@@Base+0xd74>
   15520:	ldr	r2, [r7, #16]
   15524:	ldr	r1, [r7, #24]
   15528:	ldr	r3, [r7, #28]
   1552c:	sub	r3, r3, r1
   15530:	cmp	r3, r2
   15534:	bhi	15ae8 <argp_failure@@Base+0x118c>
   15538:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1553c:	ldr	r9, [r7, #20]
   15540:	ldr	r8, [r3, #20]
   15544:	bic	r9, r9, r9, asr #31
   15548:	mov	sl, r8
   1554c:	str	r8, [r7, #4]
   15550:	add	r3, r8, #3
   15554:	str	sl, [r7, #12]
   15558:	cmp	r3, r9
   1555c:	bcc	15ac4 <argp_failure@@Base+0x1168>
   15560:	cmp	r8, r9
   15564:	bhi	15670 <argp_failure@@Base+0xd14>
   15568:	ldr	r3, [r7, #28]
   1556c:	ldr	r1, [r7, #32]
   15570:	add	r2, r3, #3
   15574:	cmp	r1, r2
   15578:	bcs	15594 <argp_failure@@Base+0xc38>
   1557c:	mov	r1, #3
   15580:	mov	r0, r7
   15584:	bl	18880 <argp_parse@@Base+0x230c>
   15588:	cmp	r0, #0
   1558c:	beq	1567c <argp_failure@@Base+0xd20>
   15590:	ldr	r3, [r7, #28]
   15594:	movw	r2, #40764	; 0x9f3c
   15598:	movt	r2, #1
   1559c:	ldrh	r1, [r2]
   155a0:	ldrb	r2, [r2, #2]
   155a4:	strh	r1, [r3]
   155a8:	strb	r2, [r3, #2]
   155ac:	ldr	r3, [r7, #28]
   155b0:	add	r3, r3, #3
   155b4:	str	r3, [r7, #28]
   155b8:	b	1567c <argp_failure@@Base+0xd20>
   155bc:	cmp	r3, r2
   155c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   155c4:	ldr	r6, [r3, #12]
   155c8:	bhi	15984 <argp_failure@@Base+0x1028>
   155cc:	str	r6, [r7, #12]
   155d0:	ldr	sl, [r5, #4]
   155d4:	cmp	sl, #0
   155d8:	beq	14e7c <argp_failure@@Base+0x520>
   155dc:	movw	r3, #40752	; 0x9f30
   155e0:	movt	r3, #1
   155e4:	movw	r8, #40744	; 0x9f28
   155e8:	movt	r8, #1
   155ec:	movw	r9, #40760	; 0x9f38
   155f0:	movt	r9, #1
   155f4:	str	r3, [fp, #-124]	; 0xffffff84
   155f8:	add	r6, r4, #24
   155fc:	b	1560c <argp_failure@@Base+0xcb0>
   15600:	subs	sl, sl, #1
   15604:	add	r6, r6, #24
   15608:	beq	14e7c <argp_failure@@Base+0x520>
   1560c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15610:	cmp	r3, #0
   15614:	beq	15600 <argp_failure@@Base+0xca4>
   15618:	ldr	r3, [r6, #-12]
   1561c:	tst	r3, #2
   15620:	bne	15600 <argp_failure@@Base+0xca4>
   15624:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15628:	sub	r1, fp, #76	; 0x4c
   1562c:	ldr	r0, [r3, #12]
   15630:	bl	141dc <__assert_fail@plt+0x2f44>
   15634:	mov	r1, r8
   15638:	mov	r0, r7
   1563c:	ldr	r2, [r6, #-24]	; 0xffffffe8
   15640:	bl	188a0 <argp_parse@@Base+0x232c>
   15644:	ldr	r3, [r4, #8]
   15648:	cmp	r3, #0
   1564c:	beq	15600 <argp_failure@@Base+0xca4>
   15650:	ldr	ip, [r4, #12]
   15654:	mov	r1, r9
   15658:	mov	r2, r3
   1565c:	mov	r0, r7
   15660:	tst	ip, #1
   15664:	ldrne	r1, [fp, #-124]	; 0xffffff84
   15668:	bl	188a0 <argp_parse@@Base+0x232c>
   1566c:	b	15600 <argp_failure@@Base+0xca4>
   15670:	mov	r1, r8
   15674:	mov	r0, r7
   15678:	bl	13b14 <__assert_fail@plt+0x287c>
   1567c:	mov	r0, r4
   15680:	bl	11178 <strlen@plt>
   15684:	subs	r8, r0, #0
   15688:	beq	156d0 <argp_failure@@Base+0xd74>
   1568c:	ldr	r0, [r7, #28]
   15690:	ldr	r2, [r7, #32]
   15694:	add	r3, r0, r8
   15698:	cmp	r2, r3
   1569c:	bcs	156b8 <argp_failure@@Base+0xd5c>
   156a0:	mov	r1, r8
   156a4:	mov	r0, r7
   156a8:	bl	18880 <argp_parse@@Base+0x230c>
   156ac:	cmp	r0, #0
   156b0:	beq	156d0 <argp_failure@@Base+0xd74>
   156b4:	ldr	r0, [r7, #28]
   156b8:	mov	r2, r8
   156bc:	mov	r1, r4
   156c0:	bl	11058 <memcpy@plt>
   156c4:	ldr	r3, [r7, #28]
   156c8:	add	r8, r3, r8
   156cc:	str	r8, [r7, #28]
   156d0:	cmp	r6, r4
   156d4:	beq	156e0 <argp_failure@@Base+0xd84>
   156d8:	mov	r0, r4
   156dc:	bl	17558 <argp_parse@@Base+0xfe4>
   156e0:	ldr	r1, [r7, #16]
   156e4:	ldrd	r2, [r7, #24]
   156e8:	sub	r2, r3, r2
   156ec:	cmp	r2, r1
   156f0:	bhi	15990 <argp_failure@@Base+0x1034>
   156f4:	mov	r2, #0
   156f8:	str	r2, [r7, #4]
   156fc:	ldr	r2, [r7, #32]
   15700:	cmp	r2, r3
   15704:	bhi	15720 <argp_failure@@Base+0xdc4>
   15708:	mov	r1, #1
   1570c:	mov	r0, r7
   15710:	bl	18880 <argp_parse@@Base+0x230c>
   15714:	cmp	r0, #0
   15718:	beq	15730 <argp_failure@@Base+0xdd4>
   1571c:	ldr	r3, [r7, #28]
   15720:	add	r1, r3, #1
   15724:	mov	r2, #10
   15728:	str	r1, [r7, #28]
   1572c:	strb	r2, [r3]
   15730:	str	r5, [fp, #-88]	; 0xffffffa8
   15734:	b	14ee8 <argp_failure@@Base+0x58c>
   15738:	cmp	sl, #95	; 0x5f
   1573c:	cmpne	sl, #45	; 0x2d
   15740:	ubfx	r6, r6, #3, #1
   15744:	moveq	r3, #1
   15748:	movne	r3, #0
   1574c:	orrs	r6, r3, r6
   15750:	beq	15c74 <argp_failure@@Base+0x1318>
   15754:	mov	r4, r5
   15758:	ldrb	r3, [r4, #1]!
   1575c:	lsl	r2, r3, #1
   15760:	cmp	r3, #45	; 0x2d
   15764:	cmpne	r3, #95	; 0x5f
   15768:	moveq	ip, #1
   1576c:	movne	ip, #0
   15770:	ldrh	r2, [r1, r2]
   15774:	ubfx	r0, r2, #3, #1
   15778:	orrs	r0, ip, r0
   1577c:	bne	15758 <argp_failure@@Base+0xdfc>
   15780:	tst	r2, #8192	; 0x2000
   15784:	sub	r6, r4, r5
   15788:	beq	157a0 <argp_failure@@Base+0xe44>
   1578c:	ldrb	r3, [r4, #1]!
   15790:	lsl	r2, r3, #1
   15794:	ldrh	r2, [r1, r2]
   15798:	tst	r2, #8192	; 0x2000
   1579c:	bne	1578c <argp_failure@@Base+0xe30>
   157a0:	cmp	r3, #44	; 0x2c
   157a4:	cmpne	r3, #0
   157a8:	beq	15970 <argp_failure@@Base+0x1014>
   157ac:	cmp	r3, #61	; 0x3d
   157b0:	beq	15be4 <argp_failure@@Base+0x1288>
   157b4:	ldrb	r3, [r4]
   157b8:	lsl	r3, r3, #1
   157bc:	ldrh	r3, [r1, r3]
   157c0:	ands	r3, r3, #2048	; 0x800
   157c4:	moveq	r7, r3
   157c8:	streq	r7, [fp, #-112]	; 0xffffff90
   157cc:	bne	15c14 <argp_failure@@Base+0x12b8>
   157d0:	ldr	sl, [pc, #1436]	; 15d74 <argp_failure@@Base+0x1418>
   157d4:	b	157e4 <argp_failure@@Base+0xe88>
   157d8:	add	sl, sl, #16
   157dc:	cmp	sl, r9
   157e0:	beq	15a74 <argp_failure@@Base+0x1118>
   157e4:	mov	r0, sl
   157e8:	bl	11178 <strlen@plt>
   157ec:	cmp	r0, r6
   157f0:	bne	157d8 <argp_failure@@Base+0xe7c>
   157f4:	mov	r2, r6
   157f8:	mov	r1, sl
   157fc:	mov	r0, r5
   15800:	bl	11280 <strncmp@plt>
   15804:	cmp	r0, #0
   15808:	bne	157d8 <argp_failure@@Base+0xe7c>
   1580c:	cmp	r7, #0
   15810:	bne	15bb4 <argp_failure@@Base+0x1258>
   15814:	ldrb	r3, [sl, #15]
   15818:	sub	r2, fp, #36	; 0x24
   1581c:	add	r3, r2, r3
   15820:	ldr	r2, [fp, #-112]	; 0xffffff90
   15824:	str	r2, [r3, #-40]	; 0xffffffd8
   15828:	ldrb	sl, [r4]
   1582c:	cmp	sl, #44	; 0x2c
   15830:	movne	r5, r4
   15834:	bne	15098 <argp_failure@@Base+0x73c>
   15838:	add	r5, r4, #1
   1583c:	ldrb	sl, [r4, #1]
   15840:	b	15098 <argp_failure@@Base+0x73c>
   15844:	mov	r0, r7
   15848:	bl	18214 <argp_parse@@Base+0x1ca0>
   1584c:	ldr	r0, [r7, #16]
   15850:	ldr	r3, [r7, #24]
   15854:	ldr	r2, [r7, #28]
   15858:	sub	r2, r2, r3
   1585c:	b	14c94 <argp_failure@@Base+0x338>
   15860:	mov	r0, r7
   15864:	bl	18214 <argp_parse@@Base+0x1ca0>
   15868:	ldr	r3, [fp, #-120]	; 0xffffff88
   1586c:	ldr	r2, [r7, #16]
   15870:	ldr	r1, [r7, #24]
   15874:	str	r3, [r7, #4]
   15878:	ldr	r3, [r7, #28]
   1587c:	sub	r3, r3, r1
   15880:	cmp	r3, r2
   15884:	bls	14f08 <argp_failure@@Base+0x5ac>
   15888:	mov	r0, r7
   1588c:	bl	18214 <argp_parse@@Base+0x1ca0>
   15890:	b	14f08 <argp_failure@@Base+0x5ac>
   15894:	mov	r0, r7
   15898:	bl	18214 <argp_parse@@Base+0x1ca0>
   1589c:	b	14e94 <argp_failure@@Base+0x538>
   158a0:	mov	r0, r7
   158a4:	bl	18214 <argp_parse@@Base+0x1ca0>
   158a8:	b	14d28 <argp_failure@@Base+0x3cc>
   158ac:	mov	r4, r6
   158b0:	b	1550c <argp_failure@@Base+0xbb0>
   158b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   158b8:	sub	r1, fp, #76	; 0x4c
   158bc:	ldr	r0, [r3, #8]
   158c0:	bl	141dc <__assert_fail@plt+0x2f44>
   158c4:	ldr	r2, [r7, #28]
   158c8:	ldr	r1, [r7, #32]
   158cc:	cmp	r2, r1
   158d0:	bcc	158ec <argp_failure@@Base+0xf90>
   158d4:	mov	r1, #1
   158d8:	mov	r0, r7
   158dc:	bl	18880 <argp_parse@@Base+0x230c>
   158e0:	cmp	r0, #0
   158e4:	beq	158fc <argp_failure@@Base+0xfa0>
   158e8:	ldr	r2, [r7, #28]
   158ec:	add	r0, r2, #1
   158f0:	mov	r1, #45	; 0x2d
   158f4:	str	r0, [r7, #28]
   158f8:	strb	r1, [r2]
   158fc:	ldr	r2, [r7, #28]
   15900:	ldr	r1, [r7, #32]
   15904:	ldrb	r8, [r4]
   15908:	cmp	r2, r1
   1590c:	bcc	15928 <argp_failure@@Base+0xfcc>
   15910:	mov	r1, #1
   15914:	mov	r0, r7
   15918:	bl	18880 <argp_parse@@Base+0x230c>
   1591c:	cmp	r0, #0
   15920:	beq	15934 <argp_failure@@Base+0xfd8>
   15924:	ldr	r2, [r7, #28]
   15928:	add	r1, r2, #1
   1592c:	str	r1, [r7, #28]
   15930:	strb	r8, [r2]
   15934:	ldr	r3, [fp, #-124]	; 0xffffff84
   15938:	ldr	r2, [r5, #8]
   1593c:	cmp	r3, #0
   15940:	beq	159ac <argp_failure@@Base+0x1050>
   15944:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15948:	ldr	r1, [r3]
   1594c:	cmp	r1, #0
   15950:	bne	159ac <argp_failure@@Base+0x1050>
   15954:	cmp	r2, #0
   15958:	movne	r2, #1
   1595c:	strne	r2, [fp, #-80]	; 0xffffffb0
   15960:	b	154d4 <argp_failure@@Base+0xb78>
   15964:	mov	r3, #1
   15968:	str	r3, [fp, #-124]	; 0xffffff84
   1596c:	b	14d18 <argp_failure@@Base+0x3bc>
   15970:	cmp	sl, #110	; 0x6e
   15974:	beq	15a94 <argp_failure@@Base+0x1138>
   15978:	mov	r7, #1
   1597c:	str	r7, [fp, #-112]	; 0xffffff90
   15980:	b	157d0 <argp_failure@@Base+0xe74>
   15984:	mov	r0, r7
   15988:	bl	18214 <argp_parse@@Base+0x1ca0>
   1598c:	b	155cc <argp_failure@@Base+0xc70>
   15990:	mov	r0, r7
   15994:	bl	18214 <argp_parse@@Base+0x1ca0>
   15998:	ldr	r3, [r7, #28]
   1599c:	b	156f4 <argp_failure@@Base+0xd98>
   159a0:	mov	r0, r7
   159a4:	bl	18214 <argp_parse@@Base+0x1ca0>
   159a8:	b	14dc8 <argp_failure@@Base+0x46c>
   159ac:	cmp	r2, #0
   159b0:	beq	154d4 <argp_failure@@Base+0xb78>
   159b4:	ldr	r1, [r5, #12]
   159b8:	mov	r0, r7
   159bc:	tst	r1, #1
   159c0:	ldrne	r1, [fp, #-144]	; 0xffffff70
   159c4:	ldreq	r1, [fp, #-140]	; 0xffffff74
   159c8:	bl	188a0 <argp_parse@@Base+0x232c>
   159cc:	b	154d4 <argp_failure@@Base+0xb78>
   159d0:	sub	r2, fp, #76	; 0x4c
   159d4:	ldr	r0, [r4, #16]
   159d8:	ldr	r1, [r5, #20]
   159dc:	bl	13f70 <__assert_fail@plt+0x2cd8>
   159e0:	b	15730 <argp_failure@@Base+0xdd4>
   159e4:	ldr	r3, [r7, #28]
   159e8:	ldr	r1, [r7, #32]
   159ec:	add	r2, r3, #12
   159f0:	cmp	r1, r2
   159f4:	bcs	15a10 <argp_failure@@Base+0x10b4>
   159f8:	mov	r1, #12
   159fc:	mov	r0, r7
   15a00:	bl	18880 <argp_parse@@Base+0x230c>
   15a04:	cmp	r0, #0
   15a08:	beq	152c8 <argp_failure@@Base+0x96c>
   15a0c:	ldr	r3, [r7, #28]
   15a10:	movw	r2, #40664	; 0x9ed8
   15a14:	movt	r2, #1
   15a18:	ldrd	r0, [r2]
   15a1c:	ldr	r2, [r2, #8]
   15a20:	str	r0, [r3]
   15a24:	str	r1, [r3, #4]
   15a28:	str	r2, [r3, #8]
   15a2c:	ldr	r3, [r7, #28]
   15a30:	add	r3, r3, #12
   15a34:	str	r3, [r7, #28]
   15a38:	b	152c8 <argp_failure@@Base+0x96c>
   15a3c:	ldr	lr, [fp, #-96]	; 0xffffffa0
   15a40:	mov	ip, #1
   15a44:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   15a48:	ldrd	r4, [lr, #8]
   15a4c:	ldrd	r2, [lr, #32]
   15a50:	strd	r0, [r8]
   15a54:	ldrd	r0, [lr, #24]
   15a58:	strd	r4, [r8, #8]
   15a5c:	strd	r2, [r8, #32]
   15a60:	ldrd	r2, [lr, #16]
   15a64:	strd	r2, [r8, #16]
   15a68:	strd	r0, [r8, #24]
   15a6c:	str	ip, [r8, #36]	; 0x24
   15a70:	b	14bc4 <argp_failure@@Base+0x268>
   15a74:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15a78:	mov	r2, #0
   15a7c:	mov	r1, r2
   15a80:	str	r6, [sp]
   15a84:	str	r5, [sp, #4]
   15a88:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a8c:	bl	1495c <argp_failure@@Base>
   15a90:	b	15828 <argp_failure@@Base+0xecc>
   15a94:	ldrb	r3, [r5, #1]
   15a98:	cmp	r3, #111	; 0x6f
   15a9c:	bne	15978 <argp_failure@@Base+0x101c>
   15aa0:	ldrb	r3, [r5, #2]
   15aa4:	cmp	r3, #45	; 0x2d
   15aa8:	bne	15978 <argp_failure@@Base+0x101c>
   15aac:	mov	r3, #0
   15ab0:	add	r5, r5, #3
   15ab4:	sub	r6, r6, #3
   15ab8:	mov	r7, #1
   15abc:	str	r3, [fp, #-112]	; 0xffffff90
   15ac0:	b	157d0 <argp_failure@@Base+0xe74>
   15ac4:	ldr	r3, [r7, #28]
   15ac8:	ldr	r2, [r7, #32]
   15acc:	cmp	r3, r2
   15ad0:	bcs	15b7c <argp_failure@@Base+0x1220>
   15ad4:	add	r1, r3, #1
   15ad8:	mov	r2, #10
   15adc:	str	r1, [r7, #28]
   15ae0:	strb	r2, [r3]
   15ae4:	b	1567c <argp_failure@@Base+0xd20>
   15ae8:	mov	r0, r7
   15aec:	bl	18214 <argp_parse@@Base+0x1ca0>
   15af0:	ldr	r2, [r7, #16]
   15af4:	ldr	r1, [r7, #24]
   15af8:	ldr	r3, [r7, #28]
   15afc:	ldr	sl, [fp, #-96]	; 0xffffffa0
   15b00:	ldr	r9, [r7, #20]
   15b04:	sub	r3, r3, r1
   15b08:	cmp	r3, r2
   15b0c:	ldr	r8, [sl, #20]
   15b10:	bic	r9, r9, r9, asr #31
   15b14:	bls	15548 <argp_failure@@Base+0xbec>
   15b18:	mov	r0, r7
   15b1c:	bl	18214 <argp_parse@@Base+0x1ca0>
   15b20:	ldr	r2, [r7, #16]
   15b24:	str	r8, [r7, #4]
   15b28:	mov	r8, sl
   15b2c:	ldr	r1, [r7, #24]
   15b30:	ldr	r3, [r7, #28]
   15b34:	ldr	sl, [sl, #20]
   15b38:	sub	r3, r3, r1
   15b3c:	cmp	r3, r2
   15b40:	bls	15d68 <argp_failure@@Base+0x140c>
   15b44:	mov	r0, r7
   15b48:	bl	18214 <argp_parse@@Base+0x1ca0>
   15b4c:	ldr	r8, [r8, #20]
   15b50:	b	15550 <argp_failure@@Base+0xbf4>
   15b54:	ldr	r0, [fp, #-128]	; 0xffffff80
   15b58:	bl	110c4 <funlockfile@plt>
   15b5c:	b	15018 <argp_failure@@Base+0x6bc>
   15b60:	movw	r3, #40532	; 0x9e54
   15b64:	movt	r3, #1
   15b68:	str	r5, [sp]
   15b6c:	mov	r1, r2
   15b70:	ldr	r0, [fp, #-104]	; 0xffffff98
   15b74:	bl	1495c <argp_failure@@Base>
   15b78:	b	150d4 <argp_failure@@Base+0x778>
   15b7c:	mov	r1, #1
   15b80:	mov	r0, r7
   15b84:	bl	18880 <argp_parse@@Base+0x230c>
   15b88:	cmp	r0, #0
   15b8c:	beq	1567c <argp_failure@@Base+0xd20>
   15b90:	ldr	r3, [r7, #28]
   15b94:	b	15ad4 <argp_failure@@Base+0x1178>
   15b98:	mov	r1, #1
   15b9c:	mov	r0, r7
   15ba0:	bl	18880 <argp_parse@@Base+0x230c>
   15ba4:	cmp	r0, #0
   15ba8:	ldrne	r3, [r7, #28]
   15bac:	bne	154b4 <argp_failure@@Base+0xb58>
   15bb0:	b	154c4 <argp_failure@@Base+0xb68>
   15bb4:	ldrb	r2, [sl, #14]
   15bb8:	cmp	r2, #0
   15bbc:	bne	15814 <argp_failure@@Base+0xeb8>
   15bc0:	ldr	r3, [fp, #-120]	; 0xffffff88
   15bc4:	b	15a7c <argp_failure@@Base+0x1120>
   15bc8:	mov	r1, #1
   15bcc:	mov	r0, r7
   15bd0:	bl	18880 <argp_parse@@Base+0x230c>
   15bd4:	cmp	r0, #0
   15bd8:	ldrne	r3, [r7, #28]
   15bdc:	bne	1517c <argp_failure@@Base+0x820>
   15be0:	b	1518c <argp_failure@@Base+0x830>
   15be4:	ldrb	r3, [r4, #1]
   15be8:	add	r4, r4, #1
   15bec:	lsl	r3, r3, #1
   15bf0:	ldrh	r3, [r1, r3]
   15bf4:	tst	r3, #8192	; 0x2000
   15bf8:	beq	157c0 <argp_failure@@Base+0xe64>
   15bfc:	ldrb	r3, [r4, #1]!
   15c00:	lsl	r3, r3, #1
   15c04:	ldrh	r3, [r1, r3]
   15c08:	tst	r3, #8192	; 0x2000
   15c0c:	bne	15bfc <argp_failure@@Base+0x12a0>
   15c10:	b	157c0 <argp_failure@@Base+0xe64>
   15c14:	mov	r2, #10
   15c18:	mov	r1, #0
   15c1c:	mov	r0, r4
   15c20:	bl	10fe0 <strtol@plt>
   15c24:	ldrb	r3, [r4]
   15c28:	ldr	r2, [r7]
   15c2c:	lsl	r3, r3, #1
   15c30:	ldrh	r7, [r2, r3]
   15c34:	str	r0, [fp, #-112]	; 0xffffff90
   15c38:	tst	r7, #2048	; 0x800
   15c3c:	beq	15c54 <argp_failure@@Base+0x12f8>
   15c40:	ldrb	r3, [r4, #1]!
   15c44:	lsl	r3, r3, #1
   15c48:	ldrh	r7, [r2, r3]
   15c4c:	tst	r7, #2048	; 0x800
   15c50:	bne	15c40 <argp_failure@@Base+0x12e4>
   15c54:	ands	r7, r7, #8192	; 0x2000
   15c58:	beq	157d0 <argp_failure@@Base+0xe74>
   15c5c:	ldrb	r3, [r4, #1]!
   15c60:	lsl	r3, r3, #1
   15c64:	ldrh	r7, [r2, r3]
   15c68:	ands	r7, r7, #8192	; 0x2000
   15c6c:	bne	15c5c <argp_failure@@Base+0x1300>
   15c70:	b	157d0 <argp_failure@@Base+0xe74>
   15c74:	mov	r3, sl
   15c78:	mov	r4, r5
   15c7c:	b	157a0 <argp_failure@@Base+0xe44>
   15c80:	ldr	r5, [fp, #-112]	; 0xffffff90
   15c84:	movw	r4, #40312	; 0x9d78
   15c88:	movt	r4, #1
   15c8c:	ldr	r3, [r7, #28]
   15c90:	ldr	r2, [r7, #32]
   15c94:	cmp	r3, r2
   15c98:	bcc	15cb4 <argp_failure@@Base+0x1358>
   15c9c:	mov	r1, #1
   15ca0:	mov	r0, r7
   15ca4:	bl	18880 <argp_parse@@Base+0x230c>
   15ca8:	cmp	r0, #0
   15cac:	beq	15cc4 <argp_failure@@Base+0x1368>
   15cb0:	ldr	r3, [r7, #28]
   15cb4:	add	r1, r3, #1
   15cb8:	mov	r2, #10
   15cbc:	str	r1, [r7, #28]
   15cc0:	strb	r2, [r3]
   15cc4:	mov	r0, r4
   15cc8:	bl	11178 <strlen@plt>
   15ccc:	subs	r6, r0, #0
   15cd0:	ldr	r0, [r7, #28]
   15cd4:	ldr	r3, [r7, #32]
   15cd8:	bne	15d20 <argp_failure@@Base+0x13c4>
   15cdc:	cmp	r0, r3
   15ce0:	bcc	15cfc <argp_failure@@Base+0x13a0>
   15ce4:	mov	r1, #1
   15ce8:	mov	r0, r7
   15cec:	bl	18880 <argp_parse@@Base+0x230c>
   15cf0:	cmp	r0, #0
   15cf4:	beq	14f9c <argp_failure@@Base+0x640>
   15cf8:	ldr	r0, [r7, #28]
   15cfc:	add	r2, r0, #1
   15d00:	mov	r3, #10
   15d04:	str	r2, [r7, #28]
   15d08:	strb	r3, [r0]
   15d0c:	b	14f9c <argp_failure@@Base+0x640>
   15d10:	movw	r4, #40312	; 0x9d78
   15d14:	movt	r4, #1
   15d18:	ldr	r5, [fp, #-104]	; 0xffffff98
   15d1c:	b	15c8c <argp_failure@@Base+0x1330>
   15d20:	add	r2, r0, r6
   15d24:	cmp	r3, r2
   15d28:	bcs	15d48 <argp_failure@@Base+0x13ec>
   15d2c:	mov	r1, r6
   15d30:	mov	r0, r7
   15d34:	bl	18880 <argp_parse@@Base+0x230c>
   15d38:	cmp	r0, #0
   15d3c:	ldr	r0, [r7, #28]
   15d40:	ldreq	r3, [r7, #32]
   15d44:	beq	15cdc <argp_failure@@Base+0x1380>
   15d48:	mov	r2, r6
   15d4c:	mov	r1, r4
   15d50:	bl	11058 <memcpy@plt>
   15d54:	ldr	r0, [r7, #28]
   15d58:	ldr	r3, [r7, #32]
   15d5c:	add	r0, r0, r6
   15d60:	str	r0, [r7, #28]
   15d64:	b	15cdc <argp_failure@@Base+0x1380>
   15d68:	mov	r8, sl
   15d6c:	b	15550 <argp_failure@@Base+0xbf4>
   15d70:	andeq	r9, r1, r8, asr #24
   15d74:			; <UNDEFINED> instruction: 0x00019bb8

00015d78 <argp_help@@Base>:
   15d78:	push	{lr}		; (str lr, [sp, #-4]!)
   15d7c:	sub	sp, sp, #12
   15d80:	str	r3, [sp]
   15d84:	mov	r3, r2
   15d88:	mov	r2, r1
   15d8c:	mov	r1, #0
   15d90:	bl	14b78 <argp_failure@@Base+0x21c>
   15d94:	add	sp, sp, #12
   15d98:	pop	{pc}		; (ldr pc, [sp], #4)

00015d9c <argp_state_help@@Base>:
   15d9c:	strd	r4, [sp, #-12]!
   15da0:	subs	r4, r0, #0
   15da4:	mov	r5, r2
   15da8:	str	lr, [sp, #8]
   15dac:	sub	sp, sp, #12
   15db0:	beq	15e20 <argp_state_help@@Base+0x84>
   15db4:	ldr	r3, [r4, #16]
   15db8:	adds	r2, r1, #0
   15dbc:	movne	r2, #1
   15dc0:	eor	r0, r3, #2
   15dc4:	ands	r2, r2, r0, lsr #1
   15dc8:	bne	15ddc <argp_state_help@@Base+0x40>
   15dcc:	add	sp, sp, #12
   15dd0:	ldrd	r4, [sp]
   15dd4:	add	sp, sp, #8
   15dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   15ddc:	ldr	r0, [r4, #40]	; 0x28
   15de0:	tst	r3, #64	; 0x40
   15de4:	mov	r2, r1
   15de8:	orrne	r5, r5, #128	; 0x80
   15dec:	mov	r1, r4
   15df0:	mov	r3, r5
   15df4:	str	r0, [sp]
   15df8:	ldr	r0, [r4]
   15dfc:	bl	14b78 <argp_failure@@Base+0x21c>
   15e00:	ldr	r3, [r4, #16]
   15e04:	tst	r3, #32
   15e08:	bne	15dcc <argp_state_help@@Base+0x30>
   15e0c:	ands	r0, r5, #256	; 0x100
   15e10:	bne	15e4c <argp_state_help@@Base+0xb0>
   15e14:	tst	r5, #512	; 0x200
   15e18:	beq	15dcc <argp_state_help@@Base+0x30>
   15e1c:	bl	1116c <exit@plt>
   15e20:	cmp	r1, #0
   15e24:	beq	15dcc <argp_state_help@@Base+0x30>
   15e28:	movw	r3, #45712	; 0xb290
   15e2c:	movt	r3, #2
   15e30:	ldr	ip, [r3]
   15e34:	mov	r2, r1
   15e38:	mov	r3, r5
   15e3c:	mov	r1, r4
   15e40:	str	ip, [sp]
   15e44:	bl	14b78 <argp_failure@@Base+0x21c>
   15e48:	b	15e0c <argp_state_help@@Base+0x70>
   15e4c:	movw	r3, #45692	; 0xb27c
   15e50:	movt	r3, #2
   15e54:	ldr	r0, [r3]
   15e58:	bl	1116c <exit@plt>

00015e5c <argp_error@@Base>:
   15e5c:	push	{r1, r2, r3}
   15e60:	strd	r4, [sp, #-12]!
   15e64:	subs	r5, r0, #0
   15e68:	str	lr, [sp, #8]
   15e6c:	sub	sp, sp, #8
   15e70:	beq	15f48 <argp_error@@Base+0xec>
   15e74:	ldr	r3, [r5, #16]
   15e78:	tst	r3, #2
   15e7c:	bne	15f30 <argp_error@@Base+0xd4>
   15e80:	ldr	r4, [r5, #44]	; 0x2c
   15e84:	cmp	r4, #0
   15e88:	beq	15f30 <argp_error@@Base+0xd4>
   15e8c:	mov	r0, r4
   15e90:	bl	1122c <flockfile@plt>
   15e94:	ldr	r0, [r5, #40]	; 0x28
   15e98:	add	r3, sp, #24
   15e9c:	str	r3, [sp, #4]
   15ea0:	mov	r1, r4
   15ea4:	bl	10fc8 <fputs_unlocked@plt>
   15ea8:	ldr	r3, [r4, #20]
   15eac:	ldr	r2, [r4, #24]
   15eb0:	cmp	r3, r2
   15eb4:	addcc	r1, r3, #1
   15eb8:	movcc	r2, #58	; 0x3a
   15ebc:	strcc	r1, [r4, #20]
   15ec0:	strbcc	r2, [r3]
   15ec4:	bcs	15f8c <argp_error@@Base+0x130>
   15ec8:	ldr	r3, [r4, #20]
   15ecc:	ldr	r2, [r4, #24]
   15ed0:	cmp	r3, r2
   15ed4:	addcc	r1, r3, #1
   15ed8:	movcc	r2, #32
   15edc:	strcc	r1, [r4, #20]
   15ee0:	strbcc	r2, [r3]
   15ee4:	bcs	15f9c <argp_error@@Base+0x140>
   15ee8:	mov	r0, r4
   15eec:	ldr	r2, [sp, #4]
   15ef0:	ldr	r1, [sp, #20]
   15ef4:	bl	11214 <vfprintf@plt>
   15ef8:	ldr	r3, [r4, #20]
   15efc:	ldr	r2, [r4, #24]
   15f00:	cmp	r3, r2
   15f04:	addcc	r1, r3, #1
   15f08:	movcc	r2, #10
   15f0c:	strcc	r1, [r4, #20]
   15f10:	strbcc	r2, [r3]
   15f14:	bcs	15f7c <argp_error@@Base+0x120>
   15f18:	mov	r0, r5
   15f1c:	mov	r2, #260	; 0x104
   15f20:	mov	r1, r4
   15f24:	bl	15d9c <argp_state_help@@Base>
   15f28:	mov	r0, r4
   15f2c:	bl	110c4 <funlockfile@plt>
   15f30:	add	sp, sp, #8
   15f34:	ldrd	r4, [sp]
   15f38:	ldr	lr, [sp, #8]
   15f3c:	add	sp, sp, #12
   15f40:	add	sp, sp, #12
   15f44:	bx	lr
   15f48:	movw	r3, #45720	; 0xb298
   15f4c:	movt	r3, #2
   15f50:	ldr	r4, [r3]
   15f54:	cmp	r4, #0
   15f58:	beq	15f30 <argp_error@@Base+0xd4>
   15f5c:	mov	r0, r4
   15f60:	bl	1122c <flockfile@plt>
   15f64:	add	r2, sp, #24
   15f68:	movw	r3, #45712	; 0xb290
   15f6c:	movt	r3, #2
   15f70:	str	r2, [sp, #4]
   15f74:	ldr	r0, [r3]
   15f78:	b	15ea0 <argp_error@@Base+0x44>
   15f7c:	mov	r1, #10
   15f80:	mov	r0, r4
   15f84:	bl	111e4 <__overflow@plt>
   15f88:	b	15f18 <argp_error@@Base+0xbc>
   15f8c:	mov	r1, #58	; 0x3a
   15f90:	mov	r0, r4
   15f94:	bl	111e4 <__overflow@plt>
   15f98:	b	15ec8 <argp_error@@Base+0x6c>
   15f9c:	mov	r1, #32
   15fa0:	mov	r0, r4
   15fa4:	bl	111e4 <__overflow@plt>
   15fa8:	b	15ee8 <argp_error@@Base+0x8c>
   15fac:	ldr	r3, [r0]
   15fb0:	strd	r4, [sp, #-16]!
   15fb4:	ldr	r5, [r0, #16]
   15fb8:	str	r6, [sp, #8]
   15fbc:	str	lr, [sp, #12]
   15fc0:	cmp	r3, #0
   15fc4:	beq	16070 <argp_error@@Base+0x214>
   15fc8:	ldr	r0, [r1, #8]
   15fcc:	mov	r2, #0
   15fd0:	add	r0, r0, #1
   15fd4:	str	r0, [r1, #8]
   15fd8:	b	15fe0 <argp_error@@Base+0x184>
   15fdc:	add	r2, r2, #1
   15fe0:	add	r3, r3, #24
   15fe4:	ldr	r0, [r3, #-20]	; 0xffffffec
   15fe8:	cmp	r0, #0
   15fec:	bne	15fdc <argp_error@@Base+0x180>
   15ff0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   15ff4:	cmp	r0, #0
   15ff8:	bne	15fdc <argp_error@@Base+0x180>
   15ffc:	ldr	r0, [r3, #-8]
   16000:	cmp	r0, #0
   16004:	bne	15fdc <argp_error@@Base+0x180>
   16008:	ldr	r0, [r3, #-4]
   1600c:	cmp	r0, #0
   16010:	bne	15fdc <argp_error@@Base+0x180>
   16014:	ldm	r1, {r0, r3}
   16018:	add	ip, r2, r2, lsl #1
   1601c:	add	r2, r3, r2
   16020:	add	r0, r0, ip
   16024:	stm	r1, {r0, r2}
   16028:	cmp	r5, #0
   1602c:	beq	16060 <argp_error@@Base+0x204>
   16030:	ldr	r0, [r5]
   16034:	cmp	r0, #0
   16038:	beq	16060 <argp_error@@Base+0x204>
   1603c:	mov	r4, r1
   16040:	mov	r1, r4
   16044:	bl	15fac <argp_error@@Base+0x150>
   16048:	ldr	r3, [r4, #12]
   1604c:	ldr	r0, [r5, #16]!
   16050:	add	r3, r3, #1
   16054:	cmp	r0, #0
   16058:	str	r3, [r4, #12]
   1605c:	bne	16040 <argp_error@@Base+0x1e4>
   16060:	ldrd	r4, [sp]
   16064:	ldr	r6, [sp, #8]
   16068:	add	sp, sp, #12
   1606c:	pop	{pc}		; (ldr pc, [sp], #4)
   16070:	ldr	r3, [r0, #4]
   16074:	cmp	r3, #0
   16078:	beq	16028 <argp_error@@Base+0x1cc>
   1607c:	ldr	r3, [r1, #8]
   16080:	add	r3, r3, #1
   16084:	str	r3, [r1, #8]
   16088:	b	16028 <argp_error@@Base+0x1cc>
   1608c:	cmp	r0, #86	; 0x56
   16090:	beq	1609c <argp_error@@Base+0x240>
   16094:	mov	r0, #7
   16098:	bx	lr
   1609c:	movw	r3, #45764	; 0xb2c4
   160a0:	movt	r3, #2
   160a4:	str	r4, [sp, #-8]!
   160a8:	ldr	r3, [r3]
   160ac:	mov	r4, r2
   160b0:	str	lr, [sp, #4]
   160b4:	cmp	r3, #0
   160b8:	beq	160e8 <argp_error@@Base+0x28c>
   160bc:	mov	r1, r2
   160c0:	ldr	r0, [r2, #48]	; 0x30
   160c4:	blx	r3
   160c8:	ldr	r0, [r4, #16]
   160cc:	ands	r0, r0, #32
   160d0:	beq	160e4 <argp_error@@Base+0x288>
   160d4:	ldr	r4, [sp]
   160d8:	add	sp, sp, #4
   160dc:	mov	r0, #0
   160e0:	pop	{pc}		; (ldr pc, [sp], #4)
   160e4:	bl	1116c <exit@plt>
   160e8:	movw	r3, #45932	; 0xb36c
   160ec:	movt	r3, #2
   160f0:	ldr	r2, [r3]
   160f4:	cmp	r2, #0
   160f8:	beq	16110 <argp_error@@Base+0x2b4>
   160fc:	movw	r1, #41468	; 0xa1fc
   16100:	movt	r1, #1
   16104:	ldr	r0, [r4, #48]	; 0x30
   16108:	bl	11190 <fprintf@plt>
   1610c:	b	160c8 <argp_error@@Base+0x26c>
   16110:	movw	r2, #41068	; 0xa06c
   16114:	movt	r2, #1
   16118:	movw	r1, #41104	; 0xa090
   1611c:	movt	r1, #1
   16120:	mov	r0, r4
   16124:	bl	15e5c <argp_error@@Base>
   16128:	b	160c8 <argp_error@@Base+0x26c>
   1612c:	cmn	r0, #3
   16130:	str	r4, [sp, #-8]!
   16134:	mov	r4, r2
   16138:	str	lr, [sp, #4]
   1613c:	sub	sp, sp, #8
   16140:	beq	16240 <argp_error@@Base+0x3e4>
   16144:	ble	1617c <argp_error@@Base+0x320>
   16148:	cmn	r0, #2
   1614c:	beq	161f4 <argp_error@@Base+0x398>
   16150:	cmp	r0, #63	; 0x3f
   16154:	bne	161e0 <argp_error@@Base+0x384>
   16158:	mov	r0, r4
   1615c:	movw	r2, #634	; 0x27a
   16160:	ldr	r1, [r4, #48]	; 0x30
   16164:	bl	15d9c <argp_state_help@@Base>
   16168:	mov	r0, #0
   1616c:	add	sp, sp, #8
   16170:	ldr	r4, [sp]
   16174:	add	sp, sp, #4
   16178:	pop	{pc}		; (ldr pc, [sp], #4)
   1617c:	cmn	r0, #4
   16180:	bne	161e0 <argp_error@@Base+0x384>
   16184:	cmp	r1, #0
   16188:	movw	r0, #41108	; 0xa094
   1618c:	movt	r0, #1
   16190:	mov	r2, #10
   16194:	movne	r0, r1
   16198:	movw	r4, #45760	; 0xb2c0
   1619c:	movt	r4, #2
   161a0:	mov	r1, #0
   161a4:	bl	10fe0 <strtol@plt>
   161a8:	str	r0, [r4]
   161ac:	b	161b8 <argp_error@@Base+0x35c>
   161b0:	mov	r0, #1
   161b4:	bl	11088 <sleep@plt>
   161b8:	ldr	r3, [r4]
   161bc:	sub	r2, r3, #1
   161c0:	cmp	r3, #0
   161c4:	str	r2, [r4]
   161c8:	bgt	161b0 <argp_error@@Base+0x354>
   161cc:	mov	r0, #0
   161d0:	add	sp, sp, #8
   161d4:	ldr	r4, [sp]
   161d8:	add	sp, sp, #4
   161dc:	pop	{pc}		; (ldr pc, [sp], #4)
   161e0:	mov	r0, #7
   161e4:	add	sp, sp, #8
   161e8:	ldr	r4, [sp]
   161ec:	add	sp, sp, #4
   161f0:	pop	{pc}		; (ldr pc, [sp], #4)
   161f4:	movw	r3, #45716	; 0xb294
   161f8:	movt	r3, #2
   161fc:	str	r1, [sp, #4]
   16200:	mov	r0, r1
   16204:	str	r1, [r3]
   16208:	bl	174a0 <argp_parse@@Base+0xf2c>
   1620c:	ldr	r3, [r4, #16]
   16210:	movw	r2, #45712	; 0xb290
   16214:	movt	r2, #2
   16218:	str	r0, [r4, #40]	; 0x28
   1621c:	str	r0, [r2]
   16220:	ldr	r1, [sp, #4]
   16224:	and	r3, r3, #3
   16228:	cmp	r3, #1
   1622c:	bne	161cc <argp_error@@Base+0x370>
   16230:	ldr	r3, [r4, #8]
   16234:	mov	r0, #0
   16238:	str	r1, [r3]
   1623c:	b	1616c <argp_error@@Base+0x310>
   16240:	ldr	r1, [r4, #48]	; 0x30
   16244:	mov	r0, r4
   16248:	movw	r2, #513	; 0x201
   1624c:	bl	15d9c <argp_state_help@@Base>
   16250:	mov	r0, #0
   16254:	add	sp, sp, #8
   16258:	ldr	r4, [sp]
   1625c:	add	sp, sp, #4
   16260:	pop	{pc}		; (ldr pc, [sp], #4)
   16264:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16268:	strd	r6, [sp, #8]
   1626c:	strd	r8, [sp, #16]
   16270:	strd	sl, [sp, #24]
   16274:	str	lr, [sp, #32]
   16278:	sub	sp, sp, #44	; 0x2c
   1627c:	ldr	fp, [r0]
   16280:	str	r3, [sp, #16]
   16284:	ldr	r3, [r0, #16]
   16288:	ldr	r7, [sp, #80]	; 0x50
   1628c:	cmp	fp, #0
   16290:	str	r3, [sp, #24]
   16294:	strd	r0, [sp, #28]
   16298:	str	r2, [sp, #36]	; 0x24
   1629c:	beq	16548 <argp_error@@Base+0x6ec>
   162a0:	ldr	r9, [r7, #4]
   162a4:	movw	r3, #36409	; 0x8e39
   162a8:	movt	r3, #14563	; 0x38e3
   162ac:	mov	r4, fp
   162b0:	str	r3, [sp, #20]
   162b4:	ldr	r6, [r4, #4]
   162b8:	cmp	r6, #0
   162bc:	bne	162cc <argp_error@@Base+0x470>
   162c0:	ldr	r3, [r4]
   162c4:	cmp	r3, #0
   162c8:	beq	16440 <argp_error@@Base+0x5e4>
   162cc:	ldr	r3, [r4, #12]
   162d0:	tst	r3, #4
   162d4:	moveq	r5, r3
   162d8:	moveq	fp, r4
   162dc:	ldrne	r5, [fp, #12]
   162e0:	ands	r5, r5, #8
   162e4:	bne	16428 <argp_error@@Base+0x5cc>
   162e8:	tst	r3, #8
   162ec:	bne	1636c <argp_error@@Base+0x510>
   162f0:	sub	r3, r6, #1
   162f4:	cmp	r3, #254	; 0xfe
   162f8:	bhi	1636c <argp_error@@Base+0x510>
   162fc:	bl	11154 <__ctype_b_loc@plt>
   16300:	ldr	r1, [r0]
   16304:	lsl	r3, r6, #1
   16308:	ldrh	r3, [r1, r3]
   1630c:	tst	r3, #16384	; 0x4000
   16310:	beq	1636c <argp_error@@Base+0x510>
   16314:	add	r3, r9, #1
   16318:	str	r3, [r7, #4]
   1631c:	strb	r6, [r9]
   16320:	ldr	r3, [fp, #8]
   16324:	cmp	r3, #0
   16328:	beq	1635c <argp_error@@Base+0x500>
   1632c:	ldr	r3, [r7, #4]
   16330:	mov	r2, #58	; 0x3a
   16334:	add	r1, r3, #1
   16338:	str	r1, [r7, #4]
   1633c:	strb	r2, [r3]
   16340:	ldr	r3, [fp, #12]
   16344:	tst	r3, #1
   16348:	beq	1635c <argp_error@@Base+0x500>
   1634c:	ldr	r3, [r7, #4]
   16350:	add	r1, r3, #1
   16354:	str	r1, [r7, #4]
   16358:	strb	r2, [r3]
   1635c:	ldr	r3, [r7, #4]
   16360:	mov	r2, #0
   16364:	strb	r2, [r3]
   16368:	ldr	r9, [r7, #4]
   1636c:	ldr	sl, [r4]
   16370:	cmp	sl, #0
   16374:	beq	16428 <argp_error@@Base+0x5cc>
   16378:	ldr	r3, [r7]
   1637c:	ldr	r8, [r3, #8]
   16380:	str	r3, [sp, #12]
   16384:	ldr	r0, [r8]
   16388:	cmp	r0, #0
   1638c:	beq	163b0 <argp_error@@Base+0x554>
   16390:	mov	r6, r8
   16394:	mov	r1, sl
   16398:	bl	10fd4 <strcmp@plt>
   1639c:	cmp	r0, #0
   163a0:	beq	16430 <argp_error@@Base+0x5d4>
   163a4:	ldr	r0, [r6, #16]!
   163a8:	cmp	r0, #0
   163ac:	bne	16394 <argp_error@@Base+0x538>
   163b0:	ldr	r0, [fp, #8]
   163b4:	ldr	r1, [r7, #8]
   163b8:	cmp	r0, #0
   163bc:	str	sl, [r1]
   163c0:	beq	163d4 <argp_error@@Base+0x578>
   163c4:	ldr	r3, [fp, #12]
   163c8:	tst	r3, #1
   163cc:	movne	r5, #2
   163d0:	moveq	r5, #1
   163d4:	str	r5, [r1, #4]
   163d8:	mov	r3, #0
   163dc:	add	ip, r1, #16
   163e0:	ldr	r0, [r4, #4]
   163e4:	str	r3, [r1, #8]
   163e8:	ldr	r2, [sp, #16]
   163ec:	cmp	r0, r3
   163f0:	ldr	r3, [sp, #12]
   163f4:	ldreq	r0, [fp, #4]
   163f8:	ldr	r3, [r3, #48]	; 0x30
   163fc:	bic	r0, r0, #-16777216	; 0xff000000
   16400:	sub	r3, r2, r3
   16404:	ldr	r2, [sp, #20]
   16408:	asr	r3, r3, #2
   1640c:	mul	r3, r2, r3
   16410:	add	r3, r3, #1
   16414:	add	r3, r0, r3, lsl #24
   16418:	str	r3, [r1, #12]
   1641c:	mov	r3, #0
   16420:	str	ip, [r7, #8]
   16424:	str	r3, [r1, #16]
   16428:	add	r4, r4, #24
   1642c:	b	162b4 <argp_error@@Base+0x458>
   16430:	sub	r6, r6, r8
   16434:	cmp	r6, #0
   16438:	bge	16428 <argp_error@@Base+0x5cc>
   1643c:	b	163b0 <argp_error@@Base+0x554>
   16440:	ldr	r3, [r4, #16]
   16444:	cmp	r3, #0
   16448:	bne	162cc <argp_error@@Base+0x470>
   1644c:	ldr	r3, [r4, #20]
   16450:	cmp	r3, #0
   16454:	bne	162cc <argp_error@@Base+0x470>
   16458:	ldr	r3, [sp, #28]
   1645c:	ldr	r2, [r3, #4]
   16460:	mov	r3, #0
   16464:	ldr	r1, [sp, #16]
   16468:	ldr	r0, [sp, #24]
   1646c:	str	r2, [r1]
   16470:	mov	r2, r1
   16474:	ldr	r1, [sp, #28]
   16478:	cmp	r0, r3
   1647c:	stmib	r2, {r1, r9}
   16480:	ldr	r1, [sp, #32]
   16484:	str	r3, [r2, #12]
   16488:	str	r1, [r2, #16]
   1648c:	ldr	r1, [sp, #36]	; 0x24
   16490:	str	r3, [r2, #24]
   16494:	str	r3, [r2, #28]
   16498:	str	r3, [r2, #32]
   1649c:	str	r1, [r2, #20]
   164a0:	beq	164dc <argp_error@@Base+0x680>
   164a4:	ldr	r2, [r0]
   164a8:	cmp	r2, r3
   164ac:	beq	1656c <argp_error@@Base+0x710>
   164b0:	mov	r1, r0
   164b4:	add	r3, r3, #1
   164b8:	ldr	r2, [r1, r3, lsl #4]
   164bc:	cmp	r2, #0
   164c0:	bne	164b4 <argp_error@@Base+0x658>
   164c4:	lsl	r3, r3, #2
   164c8:	ldr	r2, [r7, #12]
   164cc:	ldr	r1, [sp, #16]
   164d0:	add	r3, r2, r3
   164d4:	str	r2, [r1, #28]
   164d8:	str	r3, [r7, #12]
   164dc:	ldr	r3, [sp, #16]
   164e0:	add	r0, r3, #36	; 0x24
   164e4:	ldr	r5, [sp, #24]
   164e8:	cmp	r5, #0
   164ec:	beq	1652c <argp_error@@Base+0x6d0>
   164f0:	ldr	r1, [r5]
   164f4:	cmp	r1, #0
   164f8:	beq	1652c <argp_error@@Base+0x6d0>
   164fc:	ldr	r6, [sp, #16]
   16500:	mov	r2, #0
   16504:	add	r4, r2, #1
   16508:	mov	r3, r0
   1650c:	str	r7, [sp]
   16510:	mov	r0, r1
   16514:	mov	r1, r6
   16518:	bl	16264 <argp_error@@Base+0x408>
   1651c:	ldr	r1, [r5, r4, lsl #4]
   16520:	mov	r2, r4
   16524:	cmp	r1, #0
   16528:	bne	16504 <argp_error@@Base+0x6a8>
   1652c:	add	sp, sp, #44	; 0x2c
   16530:	ldrd	r4, [sp]
   16534:	ldrd	r6, [sp, #8]
   16538:	ldrd	r8, [sp, #16]
   1653c:	ldrd	sl, [sp, #24]
   16540:	add	sp, sp, #32
   16544:	pop	{pc}		; (ldr pc, [sp], #4)
   16548:	ldr	r3, [sp, #28]
   1654c:	ldr	r2, [r3, #4]
   16550:	cmp	r2, #0
   16554:	beq	16560 <argp_error@@Base+0x704>
   16558:	ldr	r9, [r7, #4]
   1655c:	b	16460 <argp_error@@Base+0x604>
   16560:	ldr	r0, [sp, #16]
   16564:	str	r2, [sp, #16]
   16568:	b	164e4 <argp_error@@Base+0x688>
   1656c:	mov	r3, r2
   16570:	b	164c8 <argp_error@@Base+0x66c>

00016574 <argp_parse@@Base>:
   16574:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16578:	tst	r3, #1
   1657c:	mov	r5, r3
   16580:	strd	r6, [sp, #8]
   16584:	mov	r7, r0
   16588:	strd	r8, [sp, #16]
   1658c:	strd	sl, [sp, #24]
   16590:	add	fp, sp, #32
   16594:	str	lr, [sp, #32]
   16598:	sub	sp, sp, #236	; 0xec
   1659c:	str	r1, [fp, #-244]	; 0xffffff0c
   165a0:	str	r2, [fp, #-232]	; 0xffffff18
   165a4:	bne	165d0 <argp_parse@@Base+0x5c>
   165a8:	movw	r3, #45716	; 0xb294
   165ac:	movt	r3, #2
   165b0:	ldr	r2, [r3]
   165b4:	cmp	r2, #0
   165b8:	beq	16ff4 <argp_parse@@Base+0xa80>
   165bc:	movw	r4, #45712	; 0xb290
   165c0:	movt	r4, #2
   165c4:	ldr	r3, [r4]
   165c8:	cmp	r3, #0
   165cc:	beq	17004 <argp_parse@@Base+0xa90>
   165d0:	ands	r3, r5, #4
   165d4:	moveq	r6, #1
   165d8:	movne	r6, #0
   165dc:	ands	ip, r5, #16
   165e0:	str	r3, [fp, #-236]	; 0xffffff14
   165e4:	beq	1663c <argp_parse@@Base+0xc8>
   165e8:	mov	r3, #0
   165ec:	sub	r4, fp, #196	; 0xc4
   165f0:	str	r6, [fp, #-228]	; 0xffffff1c
   165f4:	cmp	r7, r3
   165f8:	str	r3, [fp, #-224]	; 0xffffff20
   165fc:	str	r3, [fp, #-220]	; 0xffffff24
   16600:	str	r3, [fp, #-216]	; 0xffffff28
   16604:	str	r3, [r4, #8]
   16608:	str	r3, [r4, #12]
   1660c:	str	r3, [r4, #16]
   16610:	str	r3, [r4, #20]
   16614:	str	r3, [r4, #24]
   16618:	str	r3, [r4, #28]
   1661c:	str	r3, [r4, #32]
   16620:	bne	166ec <argp_parse@@Base+0x178>
   16624:	mov	r3, #52	; 0x34
   16628:	mov	sl, #36	; 0x24
   1662c:	mov	r9, r7
   16630:	str	r3, [fp, #-236]	; 0xffffff14
   16634:	mov	r3, sl
   16638:	b	16724 <argp_parse@@Base+0x1b0>
   1663c:	sub	sp, sp, #64	; 0x40
   16640:	mov	r1, ip
   16644:	add	r3, sp, #8
   16648:	sub	sp, sp, #32
   1664c:	add	r4, sp, #8
   16650:	mov	r0, r3
   16654:	mov	r2, #64	; 0x40
   16658:	str	ip, [r4]
   1665c:	str	ip, [r4, #4]
   16660:	str	ip, [r4, #8]
   16664:	str	ip, [r4, #12]
   16668:	str	r3, [r4, #16]
   1666c:	str	ip, [r4, #20]
   16670:	str	ip, [r4, #24]
   16674:	bl	111b4 <memset@plt>
   16678:	movw	r2, #45932	; 0xb36c
   1667c:	movt	r2, #2
   16680:	ldr	r1, [r2]
   16684:	mov	r3, r0
   16688:	cmp	r7, #0
   1668c:	movw	r2, #40788	; 0x9f54
   16690:	movt	r2, #1
   16694:	strne	r7, [r3], #16
   16698:	str	r2, [r3]
   1669c:	cmp	r1, #0
   166a0:	beq	1716c <argp_parse@@Base+0xbf8>
   166a4:	ldr	r1, [pc, #3392]	; 173ec <argp_parse@@Base+0xe78>
   166a8:	add	r2, r3, #32
   166ac:	str	r1, [r3, #16]
   166b0:	mov	r3, #0
   166b4:	mov	r7, r4
   166b8:	str	r6, [fp, #-228]	; 0xffffff1c
   166bc:	sub	r4, fp, #196	; 0xc4
   166c0:	str	r3, [fp, #-224]	; 0xffffff20
   166c4:	str	r3, [fp, #-220]	; 0xffffff24
   166c8:	str	r3, [fp, #-216]	; 0xffffff28
   166cc:	str	r3, [r2]
   166d0:	str	r3, [r4, #8]
   166d4:	str	r3, [r4, #12]
   166d8:	str	r3, [r4, #16]
   166dc:	str	r3, [r4, #20]
   166e0:	str	r3, [r4, #24]
   166e4:	str	r3, [r4, #28]
   166e8:	str	r3, [r4, #32]
   166ec:	sub	r1, fp, #228	; 0xe4
   166f0:	mov	r0, r7
   166f4:	bl	15fac <argp_error@@Base+0x150>
   166f8:	ldr	r6, [fp, #-228]	; 0xffffff1c
   166fc:	ldrd	r2, [fp, #-224]	; 0xffffff20
   16700:	ldr	r9, [fp, #-216]	; 0xffffff28
   16704:	add	r3, r3, #1
   16708:	add	r2, r2, #1
   1670c:	add	r3, r3, r3, lsl #3
   16710:	lsl	r9, r9, #2
   16714:	lsl	r3, r3, #2
   16718:	add	sl, r9, r3
   1671c:	add	r2, sl, r2, lsl #4
   16720:	str	r2, [fp, #-236]	; 0xffffff14
   16724:	str	r3, [fp, #-240]	; 0xffffff10
   16728:	ldr	r3, [fp, #-236]	; 0xffffff14
   1672c:	add	r0, r6, r3
   16730:	add	r0, r0, #1
   16734:	bl	180e8 <argp_parse@@Base+0x1b74>
   16738:	cmp	r0, #0
   1673c:	mov	r6, r0
   16740:	str	r0, [fp, #-40]	; 0xffffffd8
   16744:	moveq	r5, #12
   16748:	ldr	r3, [fp, #-240]	; 0xffffff10
   1674c:	beq	16c6c <argp_parse@@Base+0x6f8>
   16750:	mov	r2, r9
   16754:	mov	r1, #1
   16758:	ldrd	r8, [r4, #8]
   1675c:	add	ip, r0, sl
   16760:	add	r3, r0, r3
   16764:	str	r0, [fp, #-112]	; 0xffffff90
   16768:	ldr	lr, [fp, #-236]	; 0xffffff14
   1676c:	str	r1, [fp, #-196]	; 0xffffff3c
   16770:	str	r1, [fp, #-192]	; 0xffffff40
   16774:	str	ip, [fp, #-240]	; 0xffffff10
   16778:	strd	r8, [fp, #-140]	; 0xffffff74
   1677c:	ldrd	r8, [r4, #16]
   16780:	add	sl, r0, lr
   16784:	str	r3, [fp, #-104]	; 0xffffff98
   16788:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   1678c:	strd	r8, [fp, #-252]	; 0xffffff04
   16790:	ldrd	r8, [r4, #24]
   16794:	str	sl, [fp, #-156]	; 0xffffff64
   16798:	strd	r0, [fp, #-148]	; 0xffffff6c
   1679c:	mov	r0, r3
   167a0:	sub	r3, fp, #260	; 0x104
   167a4:	str	ip, [fp, #-152]	; 0xffffff68
   167a8:	mov	r1, #0
   167ac:	ldr	ip, [r4, #32]
   167b0:	strd	r8, [r3]
   167b4:	ldrd	r8, [fp, #-252]	; 0xffffff04
   167b8:	strd	r8, [fp, #-132]	; 0xffffff7c
   167bc:	ldrd	r8, [r3]
   167c0:	str	ip, [fp, #-116]	; 0xffffff8c
   167c4:	strd	r8, [fp, #-124]	; 0xffffff84
   167c8:	bl	111b4 <memset@plt>
   167cc:	ldr	ip, [fp, #-240]	; 0xffffff10
   167d0:	sub	r2, fp, #160	; 0xa0
   167d4:	tst	r5, #8
   167d8:	str	r2, [fp, #-212]	; 0xffffff2c
   167dc:	str	sl, [fp, #-208]	; 0xffffff30
   167e0:	str	r0, [fp, #-200]	; 0xffffff38
   167e4:	str	ip, [fp, #-204]	; 0xffffff34
   167e8:	bne	16c8c <argp_parse@@Base+0x718>
   167ec:	ands	r3, r5, #4
   167f0:	cmp	r3, #0
   167f4:	moveq	r3, sl
   167f8:	beq	1680c <argp_parse@@Base+0x298>
   167fc:	add	r3, sl, #1
   16800:	mov	r2, #43	; 0x2b
   16804:	str	r3, [fp, #-208]	; 0xffffff30
   16808:	strb	r2, [sl]
   1680c:	ldr	r2, [fp, #-204]	; 0xffffff34
   16810:	mov	r4, #0
   16814:	cmp	r7, r4
   16818:	strb	r4, [r3]
   1681c:	str	r4, [r2]
   16820:	str	r7, [fp, #-160]	; 0xffffff60
   16824:	beq	16e74 <argp_parse@@Base+0x900>
   16828:	sub	ip, fp, #212	; 0xd4
   1682c:	mov	r2, r4
   16830:	ldr	r3, [fp, #-112]	; 0xffffff90
   16834:	mov	r1, r4
   16838:	mov	r0, r7
   1683c:	str	ip, [sp]
   16840:	bl	16264 <argp_error@@Base+0x408>
   16844:	movw	r1, #45720	; 0xb298
   16848:	movt	r1, #2
   1684c:	ldr	r6, [fp, #-232]	; 0xffffff18
   16850:	movw	r2, #45724	; 0xb29c
   16854:	movt	r2, #2
   16858:	str	r0, [fp, #-108]	; 0xffffff94
   1685c:	mov	lr, #1
   16860:	ldr	r3, [fp, #-112]	; 0xffffff90
   16864:	ldr	ip, [r1]
   16868:	str	lr, [fp, #-100]	; 0xffffff9c
   1686c:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16870:	cmp	r0, r3
   16874:	mov	r0, #0
   16878:	ldr	r2, [r2]
   1687c:	movls	r3, r6
   16880:	ldr	lr, [fp, #-160]	; 0xffffff60
   16884:	str	ip, [fp, #-52]	; 0xffffffcc
   16888:	str	r1, [fp, #-92]	; 0xffffffa4
   1688c:	mov	r1, #0
   16890:	str	r2, [fp, #-48]	; 0xffffffd0
   16894:	sub	r2, fp, #160	; 0xa0
   16898:	str	lr, [fp, #-96]	; 0xffffffa0
   1689c:	str	r6, [fp, #-88]	; 0xffffffa8
   168a0:	strd	r4, [fp, #-84]	; 0xffffffac
   168a4:	strd	r0, [fp, #-76]	; 0xffffffb4
   168a8:	strd	r0, [fp, #-68]	; 0xffffffbc
   168ac:	strd	r0, [fp, #-60]	; 0xffffffc4
   168b0:	str	r2, [fp, #-44]	; 0xffffffd4
   168b4:	bls	1699c <argp_parse@@Base+0x428>
   168b8:	mov	r6, #3
   168bc:	movt	r6, #256	; 0x100
   168c0:	ldr	r8, [fp, #-232]	; 0xffffff18
   168c4:	add	r4, r3, #36	; 0x24
   168c8:	ldr	r2, [fp, #8]
   168cc:	str	r2, [r3, #24]
   168d0:	b	1691c <argp_parse@@Base+0x3a8>
   168d4:	ldr	lr, [r4, #-24]	; 0xffffffe8
   168d8:	ldr	ip, [r4, #-4]
   168dc:	str	ip, [fp, #-60]	; 0xffffffc4
   168e0:	ldr	ip, [r4, #-12]
   168e4:	str	ip, [fp, #-68]	; 0xffffffbc
   168e8:	ldr	ip, [r4, #-8]
   168ec:	str	lr, [fp, #-76]	; 0xffffffb4
   168f0:	str	ip, [fp, #-64]	; 0xffffffc0
   168f4:	blx	r3
   168f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   168fc:	str	r3, [r4, #-4]
   16900:	ldr	r3, [fp, #-108]	; 0xffffff94
   16904:	cmp	r4, r3
   16908:	bcs	16f28 <argp_parse@@Base+0x9b4>
   1690c:	cmp	r0, #7
   16910:	cmpne	r0, #0
   16914:	bne	16f18 <argp_parse@@Base+0x9a4>
   16918:	add	r4, r4, #36	; 0x24
   1691c:	ldr	r3, [r4, #-20]	; 0xffffffec
   16920:	mov	r1, #0
   16924:	sub	r2, fp, #96	; 0x60
   16928:	mov	r0, r6
   1692c:	cmp	r3, r1
   16930:	beq	16944 <argp_parse@@Base+0x3d0>
   16934:	ldr	ip, [r4, #-16]
   16938:	ldr	r3, [r3, #28]
   1693c:	ldr	r3, [r3, ip, lsl #2]
   16940:	str	r3, [r4, #-12]
   16944:	ldr	r3, [r4, #-36]	; 0xffffffdc
   16948:	cmp	r3, #0
   1694c:	bne	168d4 <argp_parse@@Base+0x360>
   16950:	ldr	r3, [r4, #-32]	; 0xffffffe0
   16954:	ldr	r3, [r3, #16]
   16958:	cmp	r3, #0
   1695c:	beq	16984 <argp_parse@@Base+0x410>
   16960:	ldr	r3, [r3]
   16964:	cmp	r3, #0
   16968:	beq	16984 <argp_parse@@Base+0x410>
   1696c:	ldr	ip, [r4, #-12]
   16970:	ldr	r3, [r4, #-8]
   16974:	str	ip, [r3]
   16978:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1697c:	cmp	r3, #0
   16980:	bne	168d4 <argp_parse@@Base+0x360>
   16984:	ldr	r3, [fp, #-108]	; 0xffffff94
   16988:	cmp	r4, r3
   1698c:	bcc	16918 <argp_parse@@Base+0x3a4>
   16990:	str	r8, [fp, #-232]	; 0xffffff18
   16994:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16998:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1699c:	tst	r5, #2
   169a0:	beq	16ee8 <argp_parse@@Base+0x974>
   169a4:	mov	r2, #0
   169a8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   169ac:	tst	r5, #1
   169b0:	subne	r3, r3, #4
   169b4:	str	r2, [fp, #-144]	; 0xffffff70
   169b8:	ldr	r2, [fp, #-232]	; 0xffffff18
   169bc:	strne	r3, [fp, #-88]	; 0xffffffa8
   169c0:	addne	r4, r4, #1
   169c4:	strne	r4, [fp, #-92]	; 0xffffffa4
   169c8:	cmp	r2, r3
   169cc:	beq	16f00 <argp_parse@@Base+0x98c>
   169d0:	movw	r3, #45712	; 0xb290
   169d4:	movt	r3, #2
   169d8:	ldr	r3, [r3]
   169dc:	str	r3, [fp, #-56]	; 0xffffffc8
   169e0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   169e4:	movw	r3, #41120	; 0xa0a0
   169e8:	movt	r3, #1
   169ec:	mov	r9, #6
   169f0:	movt	r9, #256	; 0x100
   169f4:	ldr	r7, [fp, #-84]	; 0xffffffac
   169f8:	mov	r0, r4
   169fc:	str	r3, [fp, #-232]	; 0xffffff18
   16a00:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16a04:	cmp	r3, #0
   16a08:	beq	16af0 <argp_parse@@Base+0x57c>
   16a0c:	cmp	r3, r7
   16a10:	movgt	r3, #0
   16a14:	strgt	r3, [fp, #-72]	; 0xffffffb8
   16a18:	bgt	16af0 <argp_parse@@Base+0x57c>
   16a1c:	cmp	r0, r7
   16a20:	ble	16d38 <argp_parse@@Base+0x7c4>
   16a24:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16a28:	tst	r3, #4
   16a2c:	bne	16f4c <argp_parse@@Base+0x9d8>
   16a30:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16a34:	ldr	sl, [r3, r7, lsl #2]
   16a38:	str	sl, [fp, #-136]	; 0xffffff78
   16a3c:	ldr	r8, [fp, #-112]	; 0xffffff90
   16a40:	str	r7, [fp, #-84]	; 0xffffffac
   16a44:	ldr	ip, [fp, #-108]	; 0xffffff94
   16a48:	cmp	r8, ip
   16a4c:	bcs	16d30 <argp_parse@@Base+0x7bc>
   16a50:	mov	lr, r7
   16a54:	add	r4, r8, #36	; 0x24
   16a58:	ldr	r3, [r4, #-36]	; 0xffffffdc
   16a5c:	mov	r0, #0
   16a60:	add	r6, lr, #1
   16a64:	sub	r2, fp, #96	; 0x60
   16a68:	mov	r1, sl
   16a6c:	sub	r5, r4, #36	; 0x24
   16a70:	mov	r8, r4
   16a74:	str	r6, [fp, #-84]	; 0xffffffac
   16a78:	cmp	r3, r0
   16a7c:	beq	16d1c <argp_parse@@Base+0x7a8>
   16a80:	ldr	lr, [r4, #-24]	; 0xffffffe8
   16a84:	ldr	ip, [r4, #-4]
   16a88:	str	ip, [fp, #-60]	; 0xffffffc4
   16a8c:	ldr	ip, [r4, #-12]
   16a90:	str	ip, [fp, #-68]	; 0xffffffbc
   16a94:	ldr	ip, [r4, #-8]
   16a98:	str	lr, [fp, #-76]	; 0xffffffb4
   16a9c:	str	ip, [fp, #-64]	; 0xffffffc0
   16aa0:	blx	r3
   16aa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16aa8:	cmp	r0, #7
   16aac:	str	r3, [r4, #-4]
   16ab0:	beq	16ca4 <argp_parse@@Base+0x730>
   16ab4:	cmp	r0, #0
   16ab8:	bne	16dec <argp_parse@@Base+0x878>
   16abc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16ac0:	ldr	r3, [fp, #-84]	; 0xffffffac
   16ac4:	cmp	r7, r3
   16ac8:	bge	16e04 <argp_parse@@Base+0x890>
   16acc:	ldr	r1, [r4, #-24]	; 0xffffffe8
   16ad0:	sub	ip, r3, r7
   16ad4:	mov	r7, r3
   16ad8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16adc:	add	r3, r1, ip
   16ae0:	str	r3, [r4, #-24]	; 0xffffffe8
   16ae4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16ae8:	cmp	r3, #0
   16aec:	bne	16a0c <argp_parse@@Base+0x498>
   16af0:	cmp	r2, #0
   16af4:	beq	16a1c <argp_parse@@Base+0x4a8>
   16af8:	mvn	r2, #0
   16afc:	str	r7, [fp, #-148]	; 0xffffff6c
   16b00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16b04:	str	r2, [fp, #-140]	; 0xffffff74
   16b08:	ldr	r2, [fp, #-156]	; 0xffffff64
   16b0c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16b10:	ands	ip, r3, #64	; 0x40
   16b14:	ldr	r3, [fp, #-152]	; 0xffffff68
   16b18:	beq	16e18 <argp_parse@@Base+0x8a4>
   16b1c:	mov	ip, #0
   16b20:	sub	lr, fp, #148	; 0x94
   16b24:	stm	sp, {ip, lr}
   16b28:	bl	17648 <argp_parse@@Base+0x10d4>
   16b2c:	ldr	r7, [fp, #-148]	; 0xffffff6c
   16b30:	mov	r4, r0
   16b34:	cmn	r4, #1
   16b38:	str	r7, [fp, #-84]	; 0xffffffac
   16b3c:	beq	16e3c <argp_parse@@Base+0x8c8>
   16b40:	cmp	r4, #63	; 0x3f
   16b44:	beq	16b5c <argp_parse@@Base+0x5e8>
   16b48:	cmp	r4, #1
   16b4c:	bne	170e0 <argp_parse@@Base+0xb6c>
   16b50:	sub	r7, r7, #1
   16b54:	ldr	sl, [fp, #-136]	; 0xffffff78
   16b58:	b	16a3c <argp_parse@@Base+0x4c8>
   16b5c:	ldr	r3, [fp, #-140]	; 0xffffff74
   16b60:	cmn	r3, #1
   16b64:	beq	17018 <argp_parse@@Base+0xaa4>
   16b68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16b6c:	sub	r7, fp, #96	; 0x60
   16b70:	mov	r0, r7
   16b74:	mov	r2, #260	; 0x104
   16b78:	mov	r5, #7
   16b7c:	bl	15d9c <argp_state_help@@Base>
   16b80:	ldr	r3, [fp, #-112]	; 0xffffff90
   16b84:	ldr	ip, [fp, #-108]	; 0xffffff94
   16b88:	cmp	r3, ip
   16b8c:	mov	r4, r3
   16b90:	bcs	1737c <argp_parse@@Base+0xe08>
   16b94:	mov	r6, #5
   16b98:	movt	r6, #256	; 0x100
   16b9c:	ldr	r3, [r4]
   16ba0:	mov	r1, #0
   16ba4:	sub	r2, fp, #96	; 0x60
   16ba8:	mov	r0, r6
   16bac:	cmp	r3, r1
   16bb0:	beq	16be4 <argp_parse@@Base+0x670>
   16bb4:	ldr	lr, [r4, #12]
   16bb8:	ldr	ip, [r4, #32]
   16bbc:	str	ip, [fp, #-60]	; 0xffffffc4
   16bc0:	ldr	ip, [r4, #24]
   16bc4:	str	ip, [fp, #-68]	; 0xffffffbc
   16bc8:	ldr	ip, [r4, #28]
   16bcc:	str	lr, [fp, #-76]	; 0xffffffb4
   16bd0:	str	ip, [fp, #-64]	; 0xffffffc0
   16bd4:	blx	r3
   16bd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16bdc:	str	r3, [r4, #32]
   16be0:	ldr	ip, [fp, #-108]	; 0xffffff94
   16be4:	add	r4, r4, #36	; 0x24
   16be8:	cmp	r4, ip
   16bec:	bcc	16b9c <argp_parse@@Base+0x628>
   16bf0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16bf4:	sub	r4, ip, #36	; 0x24
   16bf8:	cmp	r4, r3
   16bfc:	bcc	16c5c <argp_parse@@Base+0x6e8>
   16c00:	mov	r7, #7
   16c04:	movt	r7, #256	; 0x100
   16c08:	ldr	r6, [r4]
   16c0c:	mov	r1, #0
   16c10:	sub	r2, fp, #96	; 0x60
   16c14:	mov	r0, r7
   16c18:	cmp	r6, r1
   16c1c:	beq	16c50 <argp_parse@@Base+0x6dc>
   16c20:	ldr	ip, [r4, #12]
   16c24:	ldr	r3, [r4, #32]
   16c28:	str	r3, [fp, #-60]	; 0xffffffc4
   16c2c:	ldr	r3, [r4, #24]
   16c30:	str	r3, [fp, #-68]	; 0xffffffbc
   16c34:	ldr	r3, [r4, #28]
   16c38:	str	ip, [fp, #-76]	; 0xffffffb4
   16c3c:	str	r3, [fp, #-64]	; 0xffffffc0
   16c40:	blx	r6
   16c44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16c48:	str	r3, [r4, #32]
   16c4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c50:	sub	r4, r4, #36	; 0x24
   16c54:	cmp	r4, r3
   16c58:	bcs	16c08 <argp_parse@@Base+0x694>
   16c5c:	cmp	r5, #7
   16c60:	moveq	r5, #22
   16c64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c68:	bl	17558 <argp_parse@@Base+0xfe4>
   16c6c:	mov	r0, r5
   16c70:	sub	sp, fp, #32
   16c74:	ldrd	r4, [sp]
   16c78:	ldrd	r6, [sp, #8]
   16c7c:	ldrd	r8, [sp, #16]
   16c80:	ldrd	sl, [sp, #24]
   16c84:	add	sp, sp, #32
   16c88:	pop	{pc}		; (ldr pc, [sp], #4)
   16c8c:	ldr	lr, [fp, #-236]	; 0xffffff14
   16c90:	add	r3, sl, #1
   16c94:	mov	r2, #45	; 0x2d
   16c98:	str	r3, [fp, #-208]	; 0xffffff30
   16c9c:	strb	r2, [r6, lr]
   16ca0:	b	1680c <argp_parse@@Base+0x298>
   16ca4:	ldr	lr, [fp, #-84]	; 0xffffffac
   16ca8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   16cac:	sub	lr, lr, #1
   16cb0:	cmp	r3, #0
   16cb4:	str	lr, [fp, #-84]	; 0xffffffac
   16cb8:	beq	173b8 <argp_parse@@Base+0xe44>
   16cbc:	ldr	r6, [r5, #12]
   16cc0:	sub	r2, fp, #96	; 0x60
   16cc4:	mov	r1, #0
   16cc8:	mov	r0, r9
   16ccc:	ldr	ip, [r5, #24]
   16cd0:	ldr	lr, [r5, #32]
   16cd4:	str	ip, [fp, #-68]	; 0xffffffbc
   16cd8:	ldr	ip, [r5, #28]
   16cdc:	str	r6, [fp, #-76]	; 0xffffffb4
   16ce0:	str	ip, [fp, #-64]	; 0xffffffc0
   16ce4:	str	lr, [fp, #-60]	; 0xffffffc4
   16ce8:	blx	r3
   16cec:	ldr	ip, [fp, #-108]	; 0xffffff94
   16cf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16cf4:	cmp	ip, r4
   16cf8:	movls	r2, #0
   16cfc:	movhi	r2, #1
   16d00:	cmp	r0, #7
   16d04:	str	r3, [r5, #32]
   16d08:	movne	r2, #0
   16d0c:	cmp	r2, #0
   16d10:	beq	173c0 <argp_parse@@Base+0xe4c>
   16d14:	ldr	lr, [fp, #-84]	; 0xffffffac
   16d18:	b	16a54 <argp_parse@@Base+0x4e0>
   16d1c:	str	lr, [fp, #-84]	; 0xffffffac
   16d20:	add	r3, r4, #36	; 0x24
   16d24:	cmp	ip, r4
   16d28:	mov	r4, r3
   16d2c:	bhi	16a58 <argp_parse@@Base+0x4e4>
   16d30:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16d34:	ldr	r7, [fp, #-84]	; 0xffffffac
   16d38:	cmp	r7, r0
   16d3c:	bne	16f4c <argp_parse@@Base+0x9d8>
   16d40:	ldr	r4, [fp, #-112]	; 0xffffff90
   16d44:	ldr	ip, [fp, #-108]	; 0xffffff94
   16d48:	mov	r3, r4
   16d4c:	cmp	r4, ip
   16d50:	bcs	1738c <argp_parse@@Base+0xe18>
   16d54:	mov	r6, #2
   16d58:	movt	r6, #256	; 0x100
   16d5c:	mov	r5, #0
   16d60:	b	16da8 <argp_parse@@Base+0x834>
   16d64:	ldr	ip, [r4, #-4]
   16d68:	str	ip, [fp, #-60]	; 0xffffffc4
   16d6c:	ldr	ip, [r4, #-12]
   16d70:	str	ip, [fp, #-68]	; 0xffffffbc
   16d74:	ldr	ip, [r4, #-8]
   16d78:	str	r3, [fp, #-76]	; 0xffffffb4
   16d7c:	str	ip, [fp, #-64]	; 0xffffffc0
   16d80:	blx	r5
   16d84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16d88:	mov	r5, r0
   16d8c:	str	r3, [r4, #-4]
   16d90:	ldr	ip, [fp, #-108]	; 0xffffff94
   16d94:	cmp	ip, r4
   16d98:	bls	17260 <argp_parse@@Base+0xcec>
   16d9c:	cmp	r5, #7
   16da0:	cmpne	r5, #0
   16da4:	bne	17228 <argp_parse@@Base+0xcb4>
   16da8:	ldr	r3, [r4, #12]
   16dac:	sub	r2, fp, #96	; 0x60
   16db0:	mov	r0, r6
   16db4:	add	r4, r4, #36	; 0x24
   16db8:	subs	r1, r3, #0
   16dbc:	bne	16d94 <argp_parse@@Base+0x820>
   16dc0:	ldr	r5, [r4, #-36]	; 0xffffffdc
   16dc4:	cmp	r5, #0
   16dc8:	bne	16d64 <argp_parse@@Base+0x7f0>
   16dcc:	cmp	r4, ip
   16dd0:	mov	r5, #7
   16dd4:	bcc	16da8 <argp_parse@@Base+0x834>
   16dd8:	ldr	r3, [fp, #-112]	; 0xffffff90
   16ddc:	sub	r4, ip, #36	; 0x24
   16de0:	cmp	r4, r3
   16de4:	bcs	1727c <argp_parse@@Base+0xd08>
   16de8:	b	17300 <argp_parse@@Base+0xd8c>
   16dec:	mov	r5, r0
   16df0:	cmp	r5, #7
   16df4:	bne	16b80 <argp_parse@@Base+0x60c>
   16df8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16dfc:	sub	r7, fp, #96	; 0x60
   16e00:	b	16b70 <argp_parse@@Base+0x5fc>
   16e04:	mov	r1, #1
   16e08:	mov	r7, r3
   16e0c:	mov	r2, r1
   16e10:	str	r1, [fp, #-100]	; 0xffffff9c
   16e14:	b	16a00 <argp_parse@@Base+0x48c>
   16e18:	str	ip, [sp]
   16e1c:	sub	ip, fp, #148	; 0x94
   16e20:	str	ip, [sp, #4]
   16e24:	bl	175e0 <argp_parse@@Base+0x106c>
   16e28:	ldr	r7, [fp, #-148]	; 0xffffff6c
   16e2c:	mov	r4, r0
   16e30:	cmn	r4, #1
   16e34:	str	r7, [fp, #-84]	; 0xffffffac
   16e38:	bne	16b40 <argp_parse@@Base+0x5cc>
   16e3c:	mov	r3, #0
   16e40:	cmp	r7, #1
   16e44:	str	r3, [fp, #-100]	; 0xffffff9c
   16e48:	ble	16f20 <argp_parse@@Base+0x9ac>
   16e4c:	sub	r3, r7, #-1073741823	; 0xc0000001
   16e50:	ldr	r1, [fp, #-232]	; 0xffffff18
   16e54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16e58:	ldr	r0, [r2, r3, lsl #2]
   16e5c:	bl	10fd4 <strcmp@plt>
   16e60:	cmp	r0, #0
   16e64:	bne	16f20 <argp_parse@@Base+0x9ac>
   16e68:	str	r7, [fp, #-72]	; 0xffffffb8
   16e6c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16e70:	b	16a1c <argp_parse@@Base+0x4a8>
   16e74:	ldr	r2, [fp, #-244]	; 0xffffff0c
   16e78:	movw	r3, #45720	; 0xb298
   16e7c:	movt	r3, #2
   16e80:	mov	r0, #1
   16e84:	tst	r5, #2
   16e88:	ldr	r1, [r3]
   16e8c:	movw	r3, #45724	; 0xb29c
   16e90:	movt	r3, #2
   16e94:	str	r0, [fp, #-100]	; 0xffffff9c
   16e98:	mov	r0, #0
   16e9c:	ldr	ip, [fp, #-232]	; 0xffffff18
   16ea0:	str	r7, [fp, #-96]	; 0xffffffa0
   16ea4:	str	r2, [fp, #-92]	; 0xffffffa4
   16ea8:	ldr	r2, [r3]
   16eac:	ldr	r3, [fp, #-112]	; 0xffffff90
   16eb0:	str	r1, [fp, #-52]	; 0xffffffcc
   16eb4:	mov	r1, #0
   16eb8:	str	r2, [fp, #-48]	; 0xffffffd0
   16ebc:	str	r3, [fp, #-108]	; 0xffffff94
   16ec0:	sub	r3, fp, #160	; 0xa0
   16ec4:	str	ip, [fp, #-88]	; 0xffffffa8
   16ec8:	str	r7, [fp, #-84]	; 0xffffffac
   16ecc:	str	r5, [fp, #-80]	; 0xffffffb0
   16ed0:	strd	r0, [fp, #-76]	; 0xffffffb4
   16ed4:	strd	r0, [fp, #-68]	; 0xffffffbc
   16ed8:	strd	r0, [fp, #-60]	; 0xffffffc4
   16edc:	str	r3, [fp, #-44]	; 0xffffffd4
   16ee0:	mov	r3, ip
   16ee4:	bne	169a4 <argp_parse@@Base+0x430>
   16ee8:	mov	r2, #1
   16eec:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16ef0:	str	r2, [fp, #-144]	; 0xffffff70
   16ef4:	ldr	r2, [fp, #-232]	; 0xffffff18
   16ef8:	cmp	r2, r3
   16efc:	bne	169d0 <argp_parse@@Base+0x45c>
   16f00:	ldr	r0, [r2]
   16f04:	cmp	r0, #0
   16f08:	beq	169d0 <argp_parse@@Base+0x45c>
   16f0c:	bl	174a0 <argp_parse@@Base+0xf2c>
   16f10:	str	r0, [fp, #-56]	; 0xffffffc8
   16f14:	b	169e0 <argp_parse@@Base+0x46c>
   16f18:	mov	r5, r0
   16f1c:	b	16c6c <argp_parse@@Base+0x6f8>
   16f20:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16f24:	b	16a1c <argp_parse@@Base+0x4a8>
   16f28:	cmp	r0, #7
   16f2c:	mov	r5, r0
   16f30:	str	r8, [fp, #-232]	; 0xffffff18
   16f34:	beq	16994 <argp_parse@@Base+0x420>
   16f38:	cmp	r0, #0
   16f3c:	bne	16c6c <argp_parse@@Base+0x6f8>
   16f40:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16f44:	ldr	r5, [fp, #-80]	; 0xffffffb0
   16f48:	b	1699c <argp_parse@@Base+0x428>
   16f4c:	ldr	r3, [fp, #4]
   16f50:	cmp	r3, #0
   16f54:	beq	17094 <argp_parse@@Base+0xb20>
   16f58:	str	r7, [r3]
   16f5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f60:	ldr	ip, [fp, #-108]	; 0xffffff94
   16f64:	sub	r2, ip, #36	; 0x24
   16f68:	cmp	r3, r2
   16f6c:	movls	r6, #4
   16f70:	subls	r4, ip, #72	; 0x48
   16f74:	movtls	r6, #256	; 0x100
   16f78:	bhi	171a8 <argp_parse@@Base+0xc34>
   16f7c:	ldr	r5, [r4, #36]	; 0x24
   16f80:	mov	r1, #0
   16f84:	sub	r2, fp, #96	; 0x60
   16f88:	mov	r0, r6
   16f8c:	cmp	r5, r1
   16f90:	beq	170cc <argp_parse@@Base+0xb58>
   16f94:	ldr	ip, [r4, #48]	; 0x30
   16f98:	ldr	r3, [r4, #68]	; 0x44
   16f9c:	str	r3, [fp, #-60]	; 0xffffffc4
   16fa0:	ldr	r3, [r4, #60]	; 0x3c
   16fa4:	str	r3, [fp, #-68]	; 0xffffffbc
   16fa8:	ldr	r3, [r4, #64]	; 0x40
   16fac:	str	ip, [fp, #-76]	; 0xffffffb4
   16fb0:	str	r3, [fp, #-64]	; 0xffffffc0
   16fb4:	blx	r5
   16fb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16fbc:	str	r3, [r4, #68]	; 0x44
   16fc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16fc4:	cmp	r3, r4
   16fc8:	sub	r4, r4, #36	; 0x24
   16fcc:	bhi	17188 <argp_parse@@Base+0xc14>
   16fd0:	cmp	r0, #7
   16fd4:	cmpne	r0, #0
   16fd8:	beq	16f7c <argp_parse@@Base+0xa08>
   16fdc:	ldr	ip, [fp, #-108]	; 0xffffff94
   16fe0:	mov	r5, r0
   16fe4:	sub	r4, ip, #36	; 0x24
   16fe8:	cmp	r4, r3
   16fec:	bcs	16c00 <argp_parse@@Base+0x68c>
   16ff0:	b	16c64 <argp_parse@@Base+0x6f0>
   16ff4:	ldr	r2, [fp, #-232]	; 0xffffff18
   16ff8:	ldr	r2, [r2]
   16ffc:	str	r2, [r3]
   17000:	b	165bc <argp_parse@@Base+0x48>
   17004:	ldr	r3, [fp, #-232]	; 0xffffff18
   17008:	ldr	r0, [r3]
   1700c:	bl	174a0 <argp_parse@@Base+0xf2c>
   17010:	str	r0, [r4]
   17014:	b	165d0 <argp_parse@@Base+0x5c>
   17018:	mov	r1, r4
   1701c:	ldr	r0, [fp, #-156]	; 0xffffff64
   17020:	bl	11184 <strchr@plt>
   17024:	cmp	r0, #0
   17028:	beq	17064 <argp_parse@@Base+0xaf0>
   1702c:	ldr	r5, [fp, #-112]	; 0xffffff90
   17030:	ldr	r2, [fp, #-108]	; 0xffffff94
   17034:	cmp	r5, r2
   17038:	bcs	17064 <argp_parse@@Base+0xaf0>
   1703c:	ldr	r3, [r5, #8]
   17040:	cmp	r3, r0
   17044:	bls	17058 <argp_parse@@Base+0xae4>
   17048:	b	1731c <argp_parse@@Base+0xda8>
   1704c:	ldr	r3, [r5, #8]
   17050:	cmp	r0, r3
   17054:	bcc	1731c <argp_parse@@Base+0xda8>
   17058:	add	r5, r5, #36	; 0x24
   1705c:	cmp	r5, r2
   17060:	bcc	1704c <argp_parse@@Base+0xad8>
   17064:	sub	r7, fp, #96	; 0x60
   17068:	mov	r2, r4
   1706c:	add	r4, r4, #1
   17070:	ldr	r3, [pc, #888]	; 173f0 <argp_parse@@Base+0xe7c>
   17074:	movw	r1, #41124	; 0xa0a4
   17078:	movt	r1, #1
   1707c:	mov	r0, r7
   17080:	bic	r4, r4, #2
   17084:	bl	15e5c <argp_error@@Base>
   17088:	cmp	r4, #0
   1708c:	bne	170c4 <argp_parse@@Base+0xb50>
   17090:	b	16d30 <argp_parse@@Base+0x7bc>
   17094:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17098:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1709c:	tst	r3, #2
   170a0:	bne	16dfc <argp_parse@@Base+0x888>
   170a4:	cmp	r1, #0
   170a8:	beq	16dfc <argp_parse@@Base+0x888>
   170ac:	mov	r0, r1
   170b0:	movw	r1, #41144	; 0xa0b8
   170b4:	movt	r1, #1
   170b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   170bc:	sub	r7, fp, #96	; 0x60
   170c0:	bl	11190 <fprintf@plt>
   170c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   170c8:	b	16b70 <argp_parse@@Base+0x5fc>
   170cc:	cmp	r4, r3
   170d0:	sub	r4, r4, #36	; 0x24
   170d4:	bcs	16f7c <argp_parse@@Base+0xa08>
   170d8:	mov	r5, #7
   170dc:	b	1718c <argp_parse@@Base+0xc18>
   170e0:	asrs	r8, r4, #24
   170e4:	beq	17018 <argp_parse@@Base+0xaa4>
   170e8:	add	r3, r8, r8, lsl #3
   170ec:	ldr	r5, [fp, #-112]	; 0xffffff90
   170f0:	ands	r2, r4, #8388608	; 0x800000
   170f4:	movne	r2, #-16777216	; 0xff000000
   170f8:	bic	r0, r4, #-16777216	; 0xff000000
   170fc:	lsl	r3, r3, #2
   17100:	orr	r0, r0, r2
   17104:	sub	r3, r3, #36	; 0x24
   17108:	ldr	r6, [r5, r3]
   1710c:	add	r5, r5, r3
   17110:	cmp	r6, #0
   17114:	beq	17384 <argp_parse@@Base+0xe10>
   17118:	add	r1, r5, #24
   1711c:	ldr	lr, [r5, #12]
   17120:	sub	r7, fp, #96	; 0x60
   17124:	ldm	r1, {r1, r3, ip}
   17128:	mov	r2, r7
   1712c:	str	lr, [fp, #-76]	; 0xffffffb4
   17130:	str	r1, [fp, #-68]	; 0xffffffbc
   17134:	str	r3, [fp, #-64]	; 0xffffffc0
   17138:	str	ip, [fp, #-60]	; 0xffffffc4
   1713c:	ldr	r1, [fp, #-136]	; 0xffffff78
   17140:	blx	r6
   17144:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17148:	str	r3, [r5, #32]
   1714c:	cmp	r0, #7
   17150:	beq	171b0 <argp_parse@@Base+0xc3c>
   17154:	cmp	r0, #0
   17158:	bne	16dec <argp_parse@@Base+0x878>
   1715c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17160:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17164:	ldr	r7, [fp, #-84]	; 0xffffffac
   17168:	b	16a00 <argp_parse@@Base+0x48c>
   1716c:	movw	r2, #45764	; 0xb2c4
   17170:	movt	r2, #2
   17174:	ldr	r2, [r2]
   17178:	cmp	r2, #0
   1717c:	addeq	r2, r3, #16
   17180:	bne	166a4 <argp_parse@@Base+0x130>
   17184:	b	166b0 <argp_parse@@Base+0x13c>
   17188:	mov	r5, r0
   1718c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17190:	cmp	r5, #7
   17194:	sub	r4, ip, #36	; 0x24
   17198:	bne	16fe8 <argp_parse@@Base+0xa74>
   1719c:	cmp	r4, r3
   171a0:	movcs	r5, #0
   171a4:	bcs	16c00 <argp_parse@@Base+0x68c>
   171a8:	mov	r5, #0
   171ac:	b	16c64 <argp_parse@@Base+0x6f0>
   171b0:	cmp	r8, #0
   171b4:	beq	17068 <argp_parse@@Base+0xaf4>
   171b8:	ldr	r3, [fp, #-152]	; 0xffffff68
   171bc:	ldr	r2, [r3]
   171c0:	ldr	r1, [r3, #12]
   171c4:	cmp	r4, r1
   171c8:	bne	171e4 <argp_parse@@Base+0xc70>
   171cc:	b	17214 <argp_parse@@Base+0xca0>
   171d0:	add	r3, r3, #16
   171d4:	ldr	r2, [r3]
   171d8:	ldr	r1, [r3, #12]
   171dc:	cmp	r4, r1
   171e0:	beq	17214 <argp_parse@@Base+0xca0>
   171e4:	cmp	r2, #0
   171e8:	bne	171d0 <argp_parse@@Base+0xc5c>
   171ec:	movw	r2, #41116	; 0xa09c
   171f0:	movt	r2, #1
   171f4:	movw	r1, #41132	; 0xa0ac
   171f8:	movt	r1, #1
   171fc:	ldr	r3, [pc, #492]	; 173f0 <argp_parse@@Base+0xe7c>
   17200:	mov	r0, r7
   17204:	add	r4, r4, #1
   17208:	bl	15e5c <argp_error@@Base>
   1720c:	bic	r4, r4, #2
   17210:	b	17088 <argp_parse@@Base+0xb14>
   17214:	movw	r3, #41116	; 0xa09c
   17218:	movt	r3, #1
   1721c:	cmp	r2, #0
   17220:	moveq	r2, r3
   17224:	b	171f4 <argp_parse@@Base+0xc80>
   17228:	ldr	r3, [fp, #-112]	; 0xffffff90
   1722c:	sub	r2, ip, #36	; 0x24
   17230:	cmp	r3, r2
   17234:	bhi	173a8 <argp_parse@@Base+0xe34>
   17238:	ldr	r2, [fp, #4]
   1723c:	cmp	r2, #0
   17240:	beq	17250 <argp_parse@@Base+0xcdc>
   17244:	ldr	r2, [fp, #-84]	; 0xffffffac
   17248:	ldr	r1, [fp, #4]
   1724c:	str	r2, [r1]
   17250:	cmp	r5, #0
   17254:	bne	16df0 <argp_parse@@Base+0x87c>
   17258:	ldr	ip, [fp, #-108]	; 0xffffff94
   1725c:	b	16f64 <argp_parse@@Base+0x9f0>
   17260:	ldr	r3, [fp, #-112]	; 0xffffff90
   17264:	sub	r4, ip, #36	; 0x24
   17268:	cmp	r4, r3
   1726c:	bcc	17370 <argp_parse@@Base+0xdfc>
   17270:	cmp	r5, #7
   17274:	cmpne	r5, #0
   17278:	bne	17238 <argp_parse@@Base+0xcc4>
   1727c:	mov	r6, #1
   17280:	movt	r6, #256	; 0x100
   17284:	sub	r4, r4, #36	; 0x24
   17288:	ldr	r5, [r4, #36]	; 0x24
   1728c:	mov	r1, #0
   17290:	sub	r2, fp, #96	; 0x60
   17294:	mov	r0, r6
   17298:	cmp	r5, r1
   1729c:	beq	172f0 <argp_parse@@Base+0xd7c>
   172a0:	ldr	ip, [r4, #48]	; 0x30
   172a4:	ldr	r3, [r4, #68]	; 0x44
   172a8:	str	r3, [fp, #-60]	; 0xffffffc4
   172ac:	ldr	r3, [r4, #60]	; 0x3c
   172b0:	str	r3, [fp, #-68]	; 0xffffffbc
   172b4:	ldr	r3, [r4, #64]	; 0x40
   172b8:	str	ip, [fp, #-76]	; 0xffffffb4
   172bc:	str	r3, [fp, #-64]	; 0xffffffc0
   172c0:	blx	r5
   172c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   172c8:	str	r3, [r4, #68]	; 0x44
   172cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   172d0:	cmp	r3, r4
   172d4:	sub	r4, r4, #36	; 0x24
   172d8:	bhi	1736c <argp_parse@@Base+0xdf8>
   172dc:	cmp	r0, #7
   172e0:	cmpne	r0, #0
   172e4:	beq	17288 <argp_parse@@Base+0xd14>
   172e8:	mov	r5, r0
   172ec:	b	17238 <argp_parse@@Base+0xcc4>
   172f0:	cmp	r3, r4
   172f4:	sub	r4, r4, #36	; 0x24
   172f8:	bls	17288 <argp_parse@@Base+0xd14>
   172fc:	ldr	ip, [fp, #-108]	; 0xffffff94
   17300:	ldr	r2, [fp, #4]
   17304:	cmp	r2, #0
   17308:	beq	16f64 <argp_parse@@Base+0x9f0>
   1730c:	ldr	r2, [fp, #-84]	; 0xffffffac
   17310:	ldr	r1, [fp, #4]
   17314:	str	r2, [r1]
   17318:	b	16f64 <argp_parse@@Base+0x9f0>
   1731c:	ldr	r3, [r5]
   17320:	cmp	r3, #0
   17324:	beq	17064 <argp_parse@@Base+0xaf0>
   17328:	ldr	r6, [r5, #12]
   1732c:	sub	r7, fp, #96	; 0x60
   17330:	mov	r0, r4
   17334:	mov	r2, r7
   17338:	mov	r8, #0
   1733c:	ldr	ip, [r5, #24]
   17340:	ldr	r1, [r5, #28]
   17344:	ldr	lr, [r5, #32]
   17348:	str	r6, [fp, #-76]	; 0xffffffb4
   1734c:	str	ip, [fp, #-68]	; 0xffffffbc
   17350:	str	r1, [fp, #-64]	; 0xffffffc0
   17354:	ldr	r1, [fp, #-136]	; 0xffffff78
   17358:	str	lr, [fp, #-60]	; 0xffffffc4
   1735c:	blx	r3
   17360:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17364:	str	r3, [r5, #32]
   17368:	b	1714c <argp_parse@@Base+0xbd8>
   1736c:	mov	r5, r0
   17370:	cmp	r5, #7
   17374:	beq	172fc <argp_parse@@Base+0xd88>
   17378:	b	17238 <argp_parse@@Base+0xcc4>
   1737c:	sub	r4, ip, #36	; 0x24
   17380:	b	16bf8 <argp_parse@@Base+0x684>
   17384:	sub	r7, fp, #96	; 0x60
   17388:	b	171b8 <argp_parse@@Base+0xc44>
   1738c:	sub	r4, ip, #36	; 0x24
   17390:	cmp	r3, r4
   17394:	bls	1727c <argp_parse@@Base+0xd08>
   17398:	ldr	r2, [fp, #4]
   1739c:	cmp	r2, #0
   173a0:	bne	1730c <argp_parse@@Base+0xd98>
   173a4:	b	171a8 <argp_parse@@Base+0xc34>
   173a8:	ldr	r2, [fp, #4]
   173ac:	cmp	r2, #0
   173b0:	bne	17244 <argp_parse@@Base+0xcd0>
   173b4:	b	16b88 <argp_parse@@Base+0x614>
   173b8:	ldr	ip, [fp, #-108]	; 0xffffff94
   173bc:	b	16d20 <argp_parse@@Base+0x7ac>
   173c0:	cmp	r0, #0
   173c4:	beq	173dc <argp_parse@@Base+0xe68>
   173c8:	cmp	r0, #7
   173cc:	mov	r5, r0
   173d0:	ldrne	r3, [fp, #-112]	; 0xffffff90
   173d4:	beq	16d30 <argp_parse@@Base+0x7bc>
   173d8:	b	16b88 <argp_parse@@Base+0x614>
   173dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   173e0:	mov	r0, r3
   173e4:	str	r3, [fp, #-84]	; 0xffffffac
   173e8:	b	16ac4 <argp_parse@@Base+0x550>
   173ec:	andeq	r9, r1, r0, ror pc
   173f0:	andeq	r9, r1, ip, lsl #31
   173f4:	cmp	r1, #0
   173f8:	beq	17438 <argp_parse@@Base+0xec4>
   173fc:	ldr	r2, [r1, #52]	; 0x34
   17400:	ldr	r3, [r2, #48]	; 0x30
   17404:	ldr	r1, [r2, #52]	; 0x34
   17408:	cmp	r3, r1
   1740c:	bcs	17438 <argp_parse@@Base+0xec4>
   17410:	ldr	r2, [r3, #4]
   17414:	cmp	r0, r2
   17418:	bne	1742c <argp_parse@@Base+0xeb8>
   1741c:	b	17440 <argp_parse@@Base+0xecc>
   17420:	ldr	r2, [r3, #4]
   17424:	cmp	r2, r0
   17428:	beq	17440 <argp_parse@@Base+0xecc>
   1742c:	add	r3, r3, #36	; 0x24
   17430:	cmp	r3, r1
   17434:	bcc	17420 <argp_parse@@Base+0xeac>
   17438:	mov	r0, #0
   1743c:	bx	lr
   17440:	ldr	r0, [r3, #24]
   17444:	bx	lr
   17448:	movw	r1, #45768	; 0xb2c8
   1744c:	movt	r1, #2
   17450:	push	{lr}		; (str lr, [sp, #-4]!)
   17454:	ldm	r1, {r1, ip}
   17458:	sub	sp, sp, #12
   1745c:	movw	r3, #41360	; 0xa190
   17460:	movt	r3, #1
   17464:	movw	r2, #41376	; 0xa1a0
   17468:	movt	r2, #1
   1746c:	str	ip, [sp]
   17470:	bl	17a54 <argp_parse@@Base+0x14e0>
   17474:	add	sp, sp, #12
   17478:	pop	{pc}		; (ldr pc, [sp], #4)
   1747c:	movw	r2, #45764	; 0xb2c4
   17480:	movt	r2, #2
   17484:	movw	ip, #29768	; 0x7448
   17488:	movt	ip, #1
   1748c:	movw	r3, #45768	; 0xb2c8
   17490:	movt	r3, #2
   17494:	str	ip, [r2]
   17498:	strd	r0, [r3]
   1749c:	bx	lr
   174a0:	ldrb	r3, [r0]
   174a4:	cmp	r3, #47	; 0x2f
   174a8:	bne	174b8 <argp_parse@@Base+0xf44>
   174ac:	ldrb	r3, [r0, #1]!
   174b0:	cmp	r3, #47	; 0x2f
   174b4:	beq	174ac <argp_parse@@Base+0xf38>
   174b8:	cmp	r3, #0
   174bc:	beq	174ec <argp_parse@@Base+0xf78>
   174c0:	mov	r2, r0
   174c4:	mov	r1, #0
   174c8:	cmp	r3, #47	; 0x2f
   174cc:	moveq	r1, #1
   174d0:	beq	174e0 <argp_parse@@Base+0xf6c>
   174d4:	cmp	r1, #0
   174d8:	movne	r0, r2
   174dc:	movne	r1, #0
   174e0:	ldrb	r3, [r2, #1]!
   174e4:	cmp	r3, #0
   174e8:	bne	174c8 <argp_parse@@Base+0xf54>
   174ec:	bx	lr
   174f0:	str	r4, [sp, #-8]!
   174f4:	mov	r4, r0
   174f8:	str	lr, [sp, #4]
   174fc:	bl	11178 <strlen@plt>
   17500:	cmp	r0, #1
   17504:	bls	17528 <argp_parse@@Base+0xfb4>
   17508:	add	r2, r4, r0
   1750c:	mov	r3, r0
   17510:	ldrb	r2, [r2, #-1]
   17514:	cmp	r2, #47	; 0x2f
   17518:	subeq	r3, r0, #2
   1751c:	rsbeq	r1, r4, #1
   17520:	addeq	r3, r4, r3
   17524:	beq	17534 <argp_parse@@Base+0xfc0>
   17528:	ldr	r4, [sp]
   1752c:	add	sp, sp, #4
   17530:	pop	{pc}		; (ldr pc, [sp], #4)
   17534:	cmp	r3, r4
   17538:	add	r0, r1, r3
   1753c:	beq	17528 <argp_parse@@Base+0xfb4>
   17540:	ldrb	r2, [r3], #-1
   17544:	cmp	r2, #47	; 0x2f
   17548:	beq	17534 <argp_parse@@Base+0xfc0>
   1754c:	ldr	r4, [sp]
   17550:	add	sp, sp, #4
   17554:	pop	{pc}		; (ldr pc, [sp], #4)
   17558:	strd	r4, [sp, #-12]!
   1755c:	mov	r5, r0
   17560:	str	lr, [sp, #8]
   17564:	sub	sp, sp, #12
   17568:	bl	1119c <__errno_location@plt>
   1756c:	mov	r4, r0
   17570:	mov	r2, #0
   17574:	ldr	r3, [r4]
   17578:	mov	r0, r5
   1757c:	str	r2, [r4]
   17580:	str	r3, [sp]
   17584:	str	r3, [sp, #4]
   17588:	bl	11034 <free@plt>
   1758c:	ldr	r3, [r4]
   17590:	add	r2, sp, #8
   17594:	clz	r3, r3
   17598:	lsr	r3, r3, #5
   1759c:	add	r3, r2, r3, lsl #2
   175a0:	ldr	r3, [r3, #-8]
   175a4:	str	r3, [r4]
   175a8:	add	sp, sp, #12
   175ac:	ldrd	r4, [sp]
   175b0:	add	sp, sp, #8
   175b4:	pop	{pc}		; (ldr pc, [sp], #4)
   175b8:	push	{lr}		; (str lr, [sp, #-4]!)
   175bc:	sub	sp, sp, #20
   175c0:	mov	ip, #0
   175c4:	ldr	lr, [sp, #24]
   175c8:	str	lr, [sp]
   175cc:	str	ip, [sp, #4]
   175d0:	str	ip, [sp, #8]
   175d4:	bl	19510 <argp_parse@@Base+0x2f9c>
   175d8:	add	sp, sp, #20
   175dc:	pop	{pc}		; (ldr pc, [sp], #4)
   175e0:	str	r4, [sp, #-8]!
   175e4:	mov	ip, #0
   175e8:	str	lr, [sp, #4]
   175ec:	sub	sp, sp, #16
   175f0:	ldr	r4, [sp, #24]
   175f4:	str	ip, [sp, #12]
   175f8:	ldr	lr, [sp, #28]
   175fc:	stm	sp, {r4, ip, lr}
   17600:	bl	18f78 <argp_parse@@Base+0x2a04>
   17604:	add	sp, sp, #16
   17608:	ldr	r4, [sp]
   1760c:	add	sp, sp, #4
   17610:	pop	{pc}		; (ldr pc, [sp], #4)
   17614:	str	r4, [sp, #-8]!
   17618:	mov	r4, #1
   1761c:	str	lr, [sp, #4]
   17620:	sub	sp, sp, #16
   17624:	mov	lr, #0
   17628:	ldr	ip, [sp, #24]
   1762c:	str	ip, [sp]
   17630:	stmib	sp, {r4, lr}
   17634:	bl	19510 <argp_parse@@Base+0x2f9c>
   17638:	add	sp, sp, #16
   1763c:	ldr	r4, [sp]
   17640:	add	sp, sp, #4
   17644:	pop	{pc}		; (ldr pc, [sp], #4)
   17648:	strd	r4, [sp, #-12]!
   1764c:	mov	r4, #0
   17650:	mov	r5, #1
   17654:	str	lr, [sp, #8]
   17658:	sub	sp, sp, #20
   1765c:	ldr	lr, [sp, #32]
   17660:	ldr	ip, [sp, #36]	; 0x24
   17664:	str	lr, [sp]
   17668:	str	r4, [sp, #12]
   1766c:	stmib	sp, {r5, ip}
   17670:	bl	18f78 <argp_parse@@Base+0x2a04>
   17674:	add	sp, sp, #20
   17678:	ldrd	r4, [sp]
   1767c:	add	sp, sp, #8
   17680:	pop	{pc}		; (ldr pc, [sp], #4)
   17684:	strd	r4, [sp, #-16]!
   17688:	subs	r4, r0, #0
   1768c:	str	r6, [sp, #8]
   17690:	str	lr, [sp, #12]
   17694:	beq	1772c <argp_parse@@Base+0x11b8>
   17698:	mov	r1, #47	; 0x2f
   1769c:	bl	11208 <strrchr@plt>
   176a0:	subs	r5, r0, #0
   176a4:	beq	17704 <argp_parse@@Base+0x1190>
   176a8:	add	r6, r5, #1
   176ac:	sub	r3, r6, r4
   176b0:	cmp	r3, #6
   176b4:	ble	17704 <argp_parse@@Base+0x1190>
   176b8:	movw	r1, #41448	; 0xa1e8
   176bc:	movt	r1, #1
   176c0:	mov	r2, #7
   176c4:	sub	r0, r5, #6
   176c8:	bl	11280 <strncmp@plt>
   176cc:	cmp	r0, #0
   176d0:	bne	17704 <argp_parse@@Base+0x1190>
   176d4:	movw	r1, #41456	; 0xa1f0
   176d8:	movt	r1, #1
   176dc:	mov	r2, #3
   176e0:	mov	r0, r6
   176e4:	bl	11280 <strncmp@plt>
   176e8:	cmp	r0, #0
   176ec:	movne	r4, r6
   176f0:	bne	17704 <argp_parse@@Base+0x1190>
   176f4:	add	r4, r5, #4
   176f8:	movw	r3, #45712	; 0xb290
   176fc:	movt	r3, #2
   17700:	str	r4, [r3]
   17704:	movw	r2, #45776	; 0xb2d0
   17708:	movt	r2, #2
   1770c:	ldr	r6, [sp, #8]
   17710:	movw	r3, #45716	; 0xb294
   17714:	movt	r3, #2
   17718:	str	r4, [r2]
   1771c:	str	r4, [r3]
   17720:	ldrd	r4, [sp]
   17724:	add	sp, sp, #12
   17728:	pop	{pc}		; (ldr pc, [sp], #4)
   1772c:	movw	r3, #45720	; 0xb298
   17730:	movt	r3, #2
   17734:	movw	r0, #41392	; 0xa1b0
   17738:	movt	r0, #1
   1773c:	ldr	r3, [r3]
   17740:	mov	r2, #55	; 0x37
   17744:	mov	r1, #1
   17748:	bl	110d0 <fwrite@plt>
   1774c:	bl	1128c <abort@plt>
   17750:	cmp	r1, #0
   17754:	strd	r4, [sp, #-16]!
   17758:	mov	r4, r0
   1775c:	str	r6, [sp, #8]
   17760:	str	lr, [sp, #12]
   17764:	sub	sp, sp, #32
   17768:	ldr	r5, [sp, #48]	; 0x30
   1776c:	ldr	r6, [sp, #52]	; 0x34
   17770:	beq	17874 <argp_parse@@Base+0x1300>
   17774:	mov	ip, r3
   17778:	mov	r3, r2
   1777c:	mov	r2, r1
   17780:	movw	r1, #41460	; 0xa1f4
   17784:	movt	r1, #1
   17788:	str	ip, [sp]
   1778c:	bl	11190 <fprintf@plt>
   17790:	movw	r3, #2022	; 0x7e6
   17794:	movw	r2, #41480	; 0xa208
   17798:	movt	r2, #1
   1779c:	movw	r1, #42248	; 0xa508
   177a0:	movt	r1, #1
   177a4:	mov	r0, r4
   177a8:	bl	11190 <fprintf@plt>
   177ac:	mov	r1, r4
   177b0:	mov	r0, #10
   177b4:	bl	11220 <fputc@plt>
   177b8:	movw	r2, #41484	; 0xa20c
   177bc:	movt	r2, #1
   177c0:	movw	r1, #41520	; 0xa230
   177c4:	movt	r1, #1
   177c8:	mov	r0, r4
   177cc:	bl	11190 <fprintf@plt>
   177d0:	mov	r1, r4
   177d4:	mov	r0, #10
   177d8:	bl	11220 <fputc@plt>
   177dc:	cmp	r6, #9
   177e0:	ldrls	pc, [pc, r6, lsl #2]
   177e4:	b	17a40 <argp_parse@@Base+0x14cc>
   177e8:	andeq	r7, r1, r0, ror #16
   177ec:	andeq	r7, r1, r4, lsl #17
   177f0:	andeq	r7, r1, ip, lsr #17
   177f4:	ldrdeq	r7, [r1], -r4
   177f8:	andeq	r7, r1, r4, lsl #18
   177fc:	andeq	r7, r1, r0, asr #18
   17800:	andeq	r7, r1, r4, ror r9
   17804:			; <UNDEFINED> instruction: 0x000179b0
   17808:	strdeq	r7, [r1], -r4
   1780c:	andeq	r7, r1, r0, lsl r8
   17810:	ldr	ip, [r5, #8]
   17814:	movw	r1, #41960	; 0xa3e8
   17818:	movt	r1, #1
   1781c:	mov	r0, r4
   17820:	ldr	r3, [r5, #12]
   17824:	ldr	r2, [r5, #32]
   17828:	str	ip, [sp]
   1782c:	ldr	ip, [r5, #16]
   17830:	str	r2, [sp, #24]
   17834:	ldr	r2, [r5, #28]
   17838:	str	r3, [sp, #4]
   1783c:	ldr	r3, [r5, #20]
   17840:	str	ip, [sp, #8]
   17844:	ldr	ip, [r5, #24]
   17848:	str	r2, [sp, #20]
   1784c:	ldr	r2, [r5]
   17850:	str	r3, [sp, #12]
   17854:	ldr	r3, [r5, #4]
   17858:	str	ip, [sp, #16]
   1785c:	bl	11190 <fprintf@plt>
   17860:	add	sp, sp, #32
   17864:	ldrd	r4, [sp]
   17868:	ldr	r6, [sp, #8]
   1786c:	add	sp, sp, #12
   17870:	pop	{pc}		; (ldr pc, [sp], #4)
   17874:	movw	r1, #41472	; 0xa200
   17878:	movt	r1, #1
   1787c:	bl	11190 <fprintf@plt>
   17880:	b	17790 <argp_parse@@Base+0x121c>
   17884:	ldr	r2, [r5]
   17888:	mov	r0, r4
   1788c:	movw	r1, #41692	; 0xa2dc
   17890:	movt	r1, #1
   17894:	add	sp, sp, #32
   17898:	ldrd	r4, [sp]
   1789c:	ldr	r6, [sp, #8]
   178a0:	ldr	lr, [sp, #12]
   178a4:	add	sp, sp, #16
   178a8:	b	11190 <fprintf@plt>
   178ac:	ldrd	r2, [r5]
   178b0:	mov	r0, r4
   178b4:	movw	r1, #41708	; 0xa2ec
   178b8:	movt	r1, #1
   178bc:	add	sp, sp, #32
   178c0:	ldrd	r4, [sp]
   178c4:	ldr	r6, [sp, #8]
   178c8:	ldr	lr, [sp, #12]
   178cc:	add	sp, sp, #16
   178d0:	b	11190 <fprintf@plt>
   178d4:	ldrd	r2, [r5]
   178d8:	mov	r0, r4
   178dc:	movw	r1, #41732	; 0xa304
   178e0:	movt	r1, #1
   178e4:	ldr	ip, [r5, #8]
   178e8:	str	ip, [sp, #48]	; 0x30
   178ec:	add	sp, sp, #32
   178f0:	ldrd	r4, [sp]
   178f4:	ldr	r6, [sp, #8]
   178f8:	ldr	lr, [sp, #12]
   178fc:	add	sp, sp, #16
   17900:	b	11190 <fprintf@plt>
   17904:	ldr	r2, [r5]
   17908:	mov	r0, r4
   1790c:	movw	r1, #41760	; 0xa320
   17910:	movt	r1, #1
   17914:	ldr	r3, [r5, #8]
   17918:	ldr	ip, [r5, #12]
   1791c:	str	r3, [sp, #48]	; 0x30
   17920:	ldr	r3, [r5, #4]
   17924:	str	ip, [sp, #52]	; 0x34
   17928:	add	sp, sp, #32
   1792c:	ldrd	r4, [sp]
   17930:	ldr	r6, [sp, #8]
   17934:	ldr	lr, [sp, #12]
   17938:	add	sp, sp, #16
   1793c:	b	11190 <fprintf@plt>
   17940:	ldr	r2, [r5, #8]
   17944:	mov	r0, r4
   17948:	movw	r1, #41792	; 0xa340
   1794c:	movt	r1, #1
   17950:	ldr	ip, [r5, #12]
   17954:	ldr	r3, [r5, #16]
   17958:	str	r2, [sp]
   1795c:	ldr	r2, [r5]
   17960:	str	r3, [sp, #8]
   17964:	ldr	r3, [r5, #4]
   17968:	str	ip, [sp, #4]
   1796c:	bl	11190 <fprintf@plt>
   17970:	b	17860 <argp_parse@@Base+0x12ec>
   17974:	ldr	ip, [r5, #8]
   17978:	mov	r0, r4
   1797c:	movw	r1, #41828	; 0xa364
   17980:	movt	r1, #1
   17984:	ldr	r3, [r5, #12]
   17988:	ldr	r2, [r5, #20]
   1798c:	str	ip, [sp]
   17990:	ldr	ip, [r5, #16]
   17994:	str	r2, [sp, #12]
   17998:	ldr	r2, [r5]
   1799c:	str	r3, [sp, #4]
   179a0:	ldr	r3, [r5, #4]
   179a4:	str	ip, [sp, #8]
   179a8:	bl	11190 <fprintf@plt>
   179ac:	b	17860 <argp_parse@@Base+0x12ec>
   179b0:	ldr	r3, [r5, #8]
   179b4:	mov	r0, r4
   179b8:	movw	r1, #41868	; 0xa38c
   179bc:	movt	r1, #1
   179c0:	ldr	r2, [r5, #12]
   179c4:	ldr	ip, [r5, #24]
   179c8:	str	r3, [sp]
   179cc:	ldr	r3, [r5, #16]
   179d0:	str	ip, [sp, #16]
   179d4:	ldr	ip, [r5, #20]
   179d8:	str	r2, [sp, #4]
   179dc:	ldr	r2, [r5]
   179e0:	str	r3, [sp, #8]
   179e4:	ldr	r3, [r5, #4]
   179e8:	str	ip, [sp, #12]
   179ec:	bl	11190 <fprintf@plt>
   179f0:	b	17860 <argp_parse@@Base+0x12ec>
   179f4:	ldr	r2, [r5, #8]
   179f8:	mov	r0, r4
   179fc:	movw	r1, #41912	; 0xa3b8
   17a00:	movt	r1, #1
   17a04:	ldr	ip, [r5, #12]
   17a08:	ldr	r3, [r5, #28]
   17a0c:	str	r2, [sp]
   17a10:	ldr	r2, [r5, #16]
   17a14:	str	r3, [sp, #20]
   17a18:	ldr	r3, [r5, #24]
   17a1c:	str	ip, [sp, #4]
   17a20:	ldr	ip, [r5, #20]
   17a24:	str	r2, [sp, #8]
   17a28:	ldr	r2, [r5]
   17a2c:	str	r3, [sp, #16]
   17a30:	ldr	r3, [r5, #4]
   17a34:	str	ip, [sp, #12]
   17a38:	bl	11190 <fprintf@plt>
   17a3c:	b	17860 <argp_parse@@Base+0x12ec>
   17a40:	movw	r1, #42012	; 0xa41c
   17a44:	movt	r1, #1
   17a48:	ldr	ip, [r5, #8]
   17a4c:	mov	r0, r4
   17a50:	b	17820 <argp_parse@@Base+0x12ac>
   17a54:	strd	r4, [sp, #-12]!
   17a58:	str	lr, [sp, #8]
   17a5c:	sub	sp, sp, #12
   17a60:	ldr	r5, [sp, #24]
   17a64:	ldr	ip, [r5]
   17a68:	cmp	ip, #0
   17a6c:	beq	17a88 <argp_parse@@Base+0x1514>
   17a70:	mov	lr, r5
   17a74:	mov	ip, #0
   17a78:	ldr	r4, [lr, #4]!
   17a7c:	add	ip, ip, #1
   17a80:	cmp	r4, #0
   17a84:	bne	17a78 <argp_parse@@Base+0x1504>
   17a88:	stm	sp, {r5, ip}
   17a8c:	bl	17750 <argp_parse@@Base+0x11dc>
   17a90:	add	sp, sp, #12
   17a94:	ldrd	r4, [sp]
   17a98:	add	sp, sp, #8
   17a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   17aa0:	strd	r4, [sp, #-16]!
   17aa4:	mov	ip, #0
   17aa8:	str	r6, [sp, #8]
   17aac:	str	lr, [sp, #12]
   17ab0:	sub	sp, sp, #48	; 0x30
   17ab4:	ldr	r5, [sp, #64]	; 0x40
   17ab8:	add	r6, sp, #8
   17abc:	mov	r4, r6
   17ac0:	ldr	lr, [r5], #4
   17ac4:	cmp	lr, #0
   17ac8:	str	lr, [r4], #4
   17acc:	beq	17adc <argp_parse@@Base+0x1568>
   17ad0:	add	ip, ip, #1
   17ad4:	cmp	ip, #10
   17ad8:	bne	17ac0 <argp_parse@@Base+0x154c>
   17adc:	stm	sp, {r6, ip}
   17ae0:	bl	17750 <argp_parse@@Base+0x11dc>
   17ae4:	add	sp, sp, #48	; 0x30
   17ae8:	ldrd	r4, [sp]
   17aec:	ldr	r6, [sp, #8]
   17af0:	add	sp, sp, #12
   17af4:	pop	{pc}		; (ldr pc, [sp], #4)
   17af8:	push	{r3}		; (str r3, [sp, #-4]!)
   17afc:	mov	ip, #0
   17b00:	strd	r4, [sp, #-12]!
   17b04:	str	lr, [sp, #8]
   17b08:	sub	sp, sp, #56	; 0x38
   17b0c:	add	r3, sp, #72	; 0x48
   17b10:	add	r5, sp, #16
   17b14:	mov	r4, r3
   17b18:	mov	lr, r5
   17b1c:	str	r3, [sp, #12]
   17b20:	ldr	r3, [r4], #4
   17b24:	cmp	r3, #0
   17b28:	str	r3, [lr], #4
   17b2c:	beq	17b3c <argp_parse@@Base+0x15c8>
   17b30:	add	ip, ip, #1
   17b34:	cmp	ip, #10
   17b38:	bne	17b20 <argp_parse@@Base+0x15ac>
   17b3c:	ldr	r3, [sp, #68]	; 0x44
   17b40:	stm	sp, {r5, ip}
   17b44:	bl	17750 <argp_parse@@Base+0x11dc>
   17b48:	add	sp, sp, #56	; 0x38
   17b4c:	ldrd	r4, [sp]
   17b50:	ldr	lr, [sp, #8]
   17b54:	add	sp, sp, #12
   17b58:	add	sp, sp, #4
   17b5c:	bx	lr
   17b60:	movw	r3, #45724	; 0xb29c
   17b64:	movt	r3, #2
   17b68:	str	r4, [sp, #-8]!
   17b6c:	mov	r0, #10
   17b70:	ldr	r1, [r3]
   17b74:	str	lr, [sp, #4]
   17b78:	bl	11220 <fputc@plt>
   17b7c:	movw	r1, #42072	; 0xa458
   17b80:	movt	r1, #1
   17b84:	movw	r0, #42096	; 0xa470
   17b88:	movt	r0, #1
   17b8c:	bl	10ff8 <printf@plt>
   17b90:	movw	r2, #42116	; 0xa484
   17b94:	movt	r2, #1
   17b98:	movw	r1, #41376	; 0xa1a0
   17b9c:	movt	r1, #1
   17ba0:	movw	r0, #42156	; 0xa4ac
   17ba4:	movt	r0, #1
   17ba8:	bl	10ff8 <printf@plt>
   17bac:	movw	r1, #42176	; 0xa4c0
   17bb0:	movt	r1, #1
   17bb4:	ldr	r4, [sp]
   17bb8:	movw	r0, #42208	; 0xa4e0
   17bbc:	movt	r0, #1
   17bc0:	ldr	lr, [sp, #4]
   17bc4:	add	sp, sp, #8
   17bc8:	b	10ff8 <printf@plt>
   17bcc:	str	r4, [sp, #-8]!
   17bd0:	str	lr, [sp, #4]
   17bd4:	bl	180e8 <argp_parse@@Base+0x1b74>
   17bd8:	cmp	r0, #0
   17bdc:	beq	17bec <argp_parse@@Base+0x1678>
   17be0:	ldr	r4, [sp]
   17be4:	add	sp, sp, #4
   17be8:	pop	{pc}		; (ldr pc, [sp], #4)
   17bec:	bl	18044 <argp_parse@@Base+0x1ad0>
   17bf0:	str	r4, [sp, #-8]!
   17bf4:	str	lr, [sp, #4]
   17bf8:	bl	180e8 <argp_parse@@Base+0x1b74>
   17bfc:	cmp	r0, #0
   17c00:	beq	17c10 <argp_parse@@Base+0x169c>
   17c04:	ldr	r4, [sp]
   17c08:	add	sp, sp, #4
   17c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   17c10:	bl	18044 <argp_parse@@Base+0x1ad0>
   17c14:	str	r4, [sp, #-8]!
   17c18:	str	lr, [sp, #4]
   17c1c:	bl	180e8 <argp_parse@@Base+0x1b74>
   17c20:	cmp	r0, #0
   17c24:	beq	17c34 <argp_parse@@Base+0x16c0>
   17c28:	ldr	r4, [sp]
   17c2c:	add	sp, sp, #4
   17c30:	pop	{pc}		; (ldr pc, [sp], #4)
   17c34:	bl	18044 <argp_parse@@Base+0x1ad0>
   17c38:	strd	r4, [sp, #-16]!
   17c3c:	mov	r5, r0
   17c40:	mov	r4, r1
   17c44:	str	r6, [sp, #8]
   17c48:	str	lr, [sp, #12]
   17c4c:	bl	18124 <argp_parse@@Base+0x1bb0>
   17c50:	cmp	r0, #0
   17c54:	beq	17c68 <argp_parse@@Base+0x16f4>
   17c58:	ldrd	r4, [sp]
   17c5c:	ldr	r6, [sp, #8]
   17c60:	add	sp, sp, #12
   17c64:	pop	{pc}		; (ldr pc, [sp], #4)
   17c68:	adds	r4, r4, #0
   17c6c:	movne	r4, #1
   17c70:	cmp	r5, #0
   17c74:	moveq	r4, #1
   17c78:	cmp	r4, #0
   17c7c:	beq	17c58 <argp_parse@@Base+0x16e4>
   17c80:	bl	18044 <argp_parse@@Base+0x1ad0>
   17c84:	cmp	r1, #0
   17c88:	orreq	r1, r1, #1
   17c8c:	str	r4, [sp, #-8]!
   17c90:	str	lr, [sp, #4]
   17c94:	bl	18124 <argp_parse@@Base+0x1bb0>
   17c98:	cmp	r0, #0
   17c9c:	beq	17cac <argp_parse@@Base+0x1738>
   17ca0:	ldr	r4, [sp]
   17ca4:	add	sp, sp, #4
   17ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   17cac:	bl	18044 <argp_parse@@Base+0x1ad0>
   17cb0:	strd	r4, [sp, #-16]!
   17cb4:	mov	r4, r0
   17cb8:	mov	r5, r2
   17cbc:	str	r6, [sp, #8]
   17cc0:	mov	r6, r1
   17cc4:	str	lr, [sp, #12]
   17cc8:	bl	195bc <argp_parse@@Base+0x3048>
   17ccc:	cmp	r0, #0
   17cd0:	beq	17ce4 <argp_parse@@Base+0x1770>
   17cd4:	ldrd	r4, [sp]
   17cd8:	ldr	r6, [sp, #8]
   17cdc:	add	sp, sp, #12
   17ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ce4:	cmp	r4, #0
   17ce8:	beq	17cf8 <argp_parse@@Base+0x1784>
   17cec:	cmp	r6, #0
   17cf0:	cmpne	r5, #0
   17cf4:	beq	17cd4 <argp_parse@@Base+0x1760>
   17cf8:	bl	18044 <argp_parse@@Base+0x1ad0>
   17cfc:	b	17cb0 <argp_parse@@Base+0x173c>
   17d00:	cmp	r2, #0
   17d04:	cmpne	r1, #0
   17d08:	str	r4, [sp, #-8]!
   17d0c:	moveq	r2, #1
   17d10:	str	lr, [sp, #4]
   17d14:	moveq	r1, r2
   17d18:	bl	195bc <argp_parse@@Base+0x3048>
   17d1c:	cmp	r0, #0
   17d20:	beq	17d30 <argp_parse@@Base+0x17bc>
   17d24:	ldr	r4, [sp]
   17d28:	add	sp, sp, #4
   17d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   17d30:	bl	18044 <argp_parse@@Base+0x1ad0>
   17d34:	mov	r2, r1
   17d38:	mov	r1, r0
   17d3c:	mov	r0, #0
   17d40:	b	17cb0 <argp_parse@@Base+0x173c>
   17d44:	mov	r2, r1
   17d48:	mov	r1, r0
   17d4c:	mov	r0, #0
   17d50:	b	17d00 <argp_parse@@Base+0x178c>
   17d54:	cmp	r0, #0
   17d58:	strd	r4, [sp, #-16]!
   17d5c:	mov	r5, r1
   17d60:	ldr	r4, [r1]
   17d64:	str	r6, [sp, #8]
   17d68:	str	lr, [sp, #12]
   17d6c:	beq	17d9c <argp_parse@@Base+0x1828>
   17d70:	lsr	r3, r4, #1
   17d74:	add	r3, r3, #1
   17d78:	adds	r4, r4, r3
   17d7c:	bcs	17db8 <argp_parse@@Base+0x1844>
   17d80:	mov	r1, r4
   17d84:	bl	17cb0 <argp_parse@@Base+0x173c>
   17d88:	ldr	r6, [sp, #8]
   17d8c:	str	r4, [r5]
   17d90:	ldrd	r4, [sp]
   17d94:	add	sp, sp, #12
   17d98:	pop	{pc}		; (ldr pc, [sp], #4)
   17d9c:	cmp	r4, #0
   17da0:	bne	17d80 <argp_parse@@Base+0x180c>
   17da4:	mov	r4, #64	; 0x40
   17da8:	udiv	r4, r4, r2
   17dac:	cmp	r2, #64	; 0x40
   17db0:	addhi	r4, r4, #1
   17db4:	b	17d80 <argp_parse@@Base+0x180c>
   17db8:	bl	18044 <argp_parse@@Base+0x1ad0>
   17dbc:	mov	r2, #1
   17dc0:	b	17d54 <argp_parse@@Base+0x17e0>
   17dc4:	ldr	ip, [r1]
   17dc8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17dcc:	mov	r5, r1
   17dd0:	strd	r6, [sp, #8]
   17dd4:	str	lr, [sp, #28]
   17dd8:	strd	r8, [sp, #16]
   17ddc:	asr	lr, ip, #1
   17de0:	ldr	r8, [sp, #32]
   17de4:	str	sl, [sp, #24]
   17de8:	adds	r4, ip, lr
   17dec:	mvn	lr, r3
   17df0:	lsr	lr, lr, #31
   17df4:	mvnvs	r4, #-2147483648	; 0x80000000
   17df8:	cmp	r3, r4
   17dfc:	movge	r1, #0
   17e00:	andlt	r1, lr, #1
   17e04:	cmp	r1, #0
   17e08:	movne	r4, r3
   17e0c:	smull	r6, r7, r4, r8
   17e10:	cmp	r7, r6, asr #31
   17e14:	bne	17e9c <argp_parse@@Base+0x1928>
   17e18:	cmp	r6, #63	; 0x3f
   17e1c:	mov	r1, r6
   17e20:	ble	17e84 <argp_parse@@Base+0x1910>
   17e24:	cmp	r0, #0
   17e28:	sub	r6, r4, ip
   17e2c:	streq	r0, [r5]
   17e30:	cmp	r6, r2
   17e34:	bge	17e64 <argp_parse@@Base+0x18f0>
   17e38:	adds	r4, ip, r2
   17e3c:	bvs	17e98 <argp_parse@@Base+0x1924>
   17e40:	cmp	r4, r3
   17e44:	movle	r3, #0
   17e48:	andgt	r3, lr, #1
   17e4c:	cmp	r3, #0
   17e50:	bne	17e98 <argp_parse@@Base+0x1924>
   17e54:	smull	r8, r9, r4, r8
   17e58:	cmp	r9, r8, asr #31
   17e5c:	mov	r1, r8
   17e60:	bne	17e98 <argp_parse@@Base+0x1924>
   17e64:	bl	17c38 <argp_parse@@Base+0x16c4>
   17e68:	ldrd	r6, [sp, #8]
   17e6c:	ldrd	r8, [sp, #16]
   17e70:	ldr	sl, [sp, #24]
   17e74:	str	r4, [r5]
   17e78:	ldrd	r4, [sp]
   17e7c:	add	sp, sp, #28
   17e80:	pop	{pc}		; (ldr pc, [sp], #4)
   17e84:	mov	r6, #64	; 0x40
   17e88:	sdiv	r4, r6, r8
   17e8c:	mls	r1, r8, r4, r6
   17e90:	sub	r1, r6, r1
   17e94:	b	17e24 <argp_parse@@Base+0x18b0>
   17e98:	bl	18044 <argp_parse@@Base+0x1ad0>
   17e9c:	mvn	r6, #-2147483648	; 0x80000000
   17ea0:	b	17e88 <argp_parse@@Base+0x1914>
   17ea4:	mov	r1, #1
   17ea8:	str	r4, [sp, #-8]!
   17eac:	str	lr, [sp, #4]
   17eb0:	bl	18074 <argp_parse@@Base+0x1b00>
   17eb4:	cmp	r0, #0
   17eb8:	beq	17ec8 <argp_parse@@Base+0x1954>
   17ebc:	ldr	r4, [sp]
   17ec0:	add	sp, sp, #4
   17ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ec8:	bl	18044 <argp_parse@@Base+0x1ad0>
   17ecc:	mov	r1, #1
   17ed0:	str	r4, [sp, #-8]!
   17ed4:	str	lr, [sp, #4]
   17ed8:	bl	18074 <argp_parse@@Base+0x1b00>
   17edc:	cmp	r0, #0
   17ee0:	beq	17ef0 <argp_parse@@Base+0x197c>
   17ee4:	ldr	r4, [sp]
   17ee8:	add	sp, sp, #4
   17eec:	pop	{pc}		; (ldr pc, [sp], #4)
   17ef0:	bl	18044 <argp_parse@@Base+0x1ad0>
   17ef4:	str	r4, [sp, #-8]!
   17ef8:	str	lr, [sp, #4]
   17efc:	bl	18074 <argp_parse@@Base+0x1b00>
   17f00:	cmp	r0, #0
   17f04:	beq	17f14 <argp_parse@@Base+0x19a0>
   17f08:	ldr	r4, [sp]
   17f0c:	add	sp, sp, #4
   17f10:	pop	{pc}		; (ldr pc, [sp], #4)
   17f14:	bl	18044 <argp_parse@@Base+0x1ad0>
   17f18:	str	r4, [sp, #-8]!
   17f1c:	str	lr, [sp, #4]
   17f20:	bl	18074 <argp_parse@@Base+0x1b00>
   17f24:	cmp	r0, #0
   17f28:	beq	17f38 <argp_parse@@Base+0x19c4>
   17f2c:	ldr	r4, [sp]
   17f30:	add	sp, sp, #4
   17f34:	pop	{pc}		; (ldr pc, [sp], #4)
   17f38:	bl	18044 <argp_parse@@Base+0x1ad0>
   17f3c:	strd	r4, [sp, #-16]!
   17f40:	mov	r4, r1
   17f44:	str	r6, [sp, #8]
   17f48:	mov	r6, r0
   17f4c:	mov	r0, r1
   17f50:	str	lr, [sp, #12]
   17f54:	bl	180e8 <argp_parse@@Base+0x1b74>
   17f58:	subs	r5, r0, #0
   17f5c:	beq	17f80 <argp_parse@@Base+0x1a0c>
   17f60:	mov	r2, r4
   17f64:	mov	r1, r6
   17f68:	bl	11058 <memcpy@plt>
   17f6c:	mov	r0, r5
   17f70:	ldrd	r4, [sp]
   17f74:	ldr	r6, [sp, #8]
   17f78:	add	sp, sp, #12
   17f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f80:	bl	18044 <argp_parse@@Base+0x1ad0>
   17f84:	strd	r4, [sp, #-16]!
   17f88:	mov	r4, r1
   17f8c:	str	r6, [sp, #8]
   17f90:	mov	r6, r0
   17f94:	mov	r0, r1
   17f98:	str	lr, [sp, #12]
   17f9c:	bl	180e8 <argp_parse@@Base+0x1b74>
   17fa0:	subs	r5, r0, #0
   17fa4:	beq	17fc8 <argp_parse@@Base+0x1a54>
   17fa8:	mov	r2, r4
   17fac:	mov	r1, r6
   17fb0:	bl	11058 <memcpy@plt>
   17fb4:	mov	r0, r5
   17fb8:	ldrd	r4, [sp]
   17fbc:	ldr	r6, [sp, #8]
   17fc0:	add	sp, sp, #12
   17fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   17fc8:	bl	18044 <argp_parse@@Base+0x1ad0>
   17fcc:	strd	r4, [sp, #-16]!
   17fd0:	mov	r4, r1
   17fd4:	str	r6, [sp, #8]
   17fd8:	mov	r6, r0
   17fdc:	add	r0, r1, #1
   17fe0:	str	lr, [sp, #12]
   17fe4:	bl	180e8 <argp_parse@@Base+0x1b74>
   17fe8:	subs	r5, r0, #0
   17fec:	beq	18018 <argp_parse@@Base+0x1aa4>
   17ff0:	mov	r3, #0
   17ff4:	mov	r1, r6
   17ff8:	mov	r2, r4
   17ffc:	strb	r3, [r5, r4]
   18000:	bl	11058 <memcpy@plt>
   18004:	mov	r0, r5
   18008:	ldrd	r4, [sp]
   1800c:	ldr	r6, [sp, #8]
   18010:	add	sp, sp, #12
   18014:	pop	{pc}		; (ldr pc, [sp], #4)
   18018:	bl	18044 <argp_parse@@Base+0x1ad0>
   1801c:	str	r4, [sp, #-8]!
   18020:	mov	r4, r0
   18024:	str	lr, [sp, #4]
   18028:	bl	11178 <strlen@plt>
   1802c:	add	r1, r0, #1
   18030:	mov	r0, r4
   18034:	ldr	r4, [sp]
   18038:	ldr	lr, [sp, #4]
   1803c:	add	sp, sp, #8
   18040:	b	17f3c <argp_parse@@Base+0x19c8>
   18044:	movw	r3, #45696	; 0xb280
   18048:	movt	r3, #2
   1804c:	str	r4, [sp, #-8]!
   18050:	movw	r2, #41104	; 0xa090
   18054:	movt	r2, #1
   18058:	ldr	r0, [r3]
   1805c:	mov	r1, #0
   18060:	movw	r3, #42296	; 0xa538
   18064:	movt	r3, #1
   18068:	str	lr, [sp, #4]
   1806c:	bl	110f4 <error@plt>
   18070:	bl	1128c <abort@plt>
   18074:	cmp	r1, #0
   18078:	cmpne	r0, #0
   1807c:	beq	180c8 <argp_parse@@Base+0x1b54>
   18080:	strd	r4, [sp, #-16]!
   18084:	umull	r4, r5, r0, r1
   18088:	str	r6, [sp, #8]
   1808c:	str	lr, [sp, #12]
   18090:	adds	r3, r5, #0
   18094:	movne	r3, #1
   18098:	cmp	r4, #0
   1809c:	blt	180a8 <argp_parse@@Base+0x1b34>
   180a0:	cmp	r3, #0
   180a4:	beq	180d4 <argp_parse@@Base+0x1b60>
   180a8:	bl	1119c <__errno_location@plt>
   180ac:	mov	r3, #12
   180b0:	ldrd	r4, [sp]
   180b4:	ldr	r6, [sp, #8]
   180b8:	add	sp, sp, #12
   180bc:	str	r3, [r0]
   180c0:	mov	r0, #0
   180c4:	pop	{pc}		; (ldr pc, [sp], #4)
   180c8:	mov	r1, #1
   180cc:	mov	r0, r1
   180d0:	b	10fbc <calloc@plt>
   180d4:	ldrd	r4, [sp]
   180d8:	ldr	r6, [sp, #8]
   180dc:	ldr	lr, [sp, #12]
   180e0:	add	sp, sp, #16
   180e4:	b	10fbc <calloc@plt>
   180e8:	cmp	r0, #0
   180ec:	beq	180f8 <argp_parse@@Base+0x1b84>
   180f0:	blt	18100 <argp_parse@@Base+0x1b8c>
   180f4:	b	1110c <malloc@plt>
   180f8:	mov	r0, #1
   180fc:	b	1110c <malloc@plt>
   18100:	str	r4, [sp, #-8]!
   18104:	str	lr, [sp, #4]
   18108:	bl	1119c <__errno_location@plt>
   1810c:	mov	r3, #12
   18110:	ldr	r4, [sp]
   18114:	add	sp, sp, #4
   18118:	str	r3, [r0]
   1811c:	mov	r0, #0
   18120:	pop	{pc}		; (ldr pc, [sp], #4)
   18124:	cmp	r0, #0
   18128:	beq	18150 <argp_parse@@Base+0x1bdc>
   1812c:	cmp	r1, #0
   18130:	str	r4, [sp, #-8]!
   18134:	str	lr, [sp, #4]
   18138:	beq	18158 <argp_parse@@Base+0x1be4>
   1813c:	blt	1816c <argp_parse@@Base+0x1bf8>
   18140:	ldr	r4, [sp]
   18144:	ldr	lr, [sp, #4]
   18148:	add	sp, sp, #8
   1814c:	b	110ac <realloc@plt>
   18150:	mov	r0, r1
   18154:	b	180e8 <argp_parse@@Base+0x1b74>
   18158:	bl	17558 <argp_parse@@Base+0xfe4>
   1815c:	ldr	r4, [sp]
   18160:	add	sp, sp, #4
   18164:	mov	r0, #0
   18168:	pop	{pc}		; (ldr pc, [sp], #4)
   1816c:	bl	1119c <__errno_location@plt>
   18170:	mov	r3, #12
   18174:	str	r3, [r0]
   18178:	b	1815c <argp_parse@@Base+0x1be8>
   1817c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18180:	mov	r5, r3
   18184:	strd	r6, [sp, #8]
   18188:	mov	r7, r1
   1818c:	mov	r6, r2
   18190:	str	r8, [sp, #16]
   18194:	mov	r8, r0
   18198:	mov	r0, #36	; 0x24
   1819c:	str	lr, [sp, #20]
   181a0:	bl	180e8 <argp_parse@@Base+0x1b74>
   181a4:	subs	r4, r0, #0
   181a8:	beq	181ec <argp_parse@@Base+0x1c78>
   181ac:	mov	r3, #0
   181b0:	mov	r0, #200	; 0xc8
   181b4:	str	r8, [r4]
   181b8:	str	r7, [r4, #4]
   181bc:	str	r6, [r4, #8]
   181c0:	str	r5, [r4, #12]
   181c4:	str	r3, [r4, #16]
   181c8:	str	r3, [r4, #20]
   181cc:	bl	180e8 <argp_parse@@Base+0x1b74>
   181d0:	cmp	r0, #0
   181d4:	mov	r3, r0
   181d8:	str	r0, [r4, #24]
   181dc:	addne	r2, r0, #200	; 0xc8
   181e0:	strne	r0, [r4, #28]
   181e4:	strne	r2, [r4, #32]
   181e8:	beq	18204 <argp_parse@@Base+0x1c90>
   181ec:	mov	r0, r4
   181f0:	ldrd	r4, [sp]
   181f4:	ldrd	r6, [sp, #8]
   181f8:	ldr	r8, [sp, #16]
   181fc:	add	sp, sp, #20
   18200:	pop	{pc}		; (ldr pc, [sp], #4)
   18204:	mov	r0, r4
   18208:	mov	r4, r3
   1820c:	bl	17558 <argp_parse@@Base+0xfe4>
   18210:	b	181ec <argp_parse@@Base+0x1c78>
   18214:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18218:	mov	r5, r0
   1821c:	ldr	r3, [r0, #16]
   18220:	ldr	r4, [r0, #24]
   18224:	strd	r6, [sp, #8]
   18228:	strd	r8, [sp, #16]
   1822c:	ldr	r8, [r0, #28]
   18230:	strd	sl, [sp, #24]
   18234:	add	r4, r4, r3
   18238:	str	lr, [sp, #32]
   1823c:	sub	sp, sp, #12
   18240:	cmp	r4, r8
   18244:	bcs	18358 <argp_parse@@Base+0x1de4>
   18248:	ldr	r6, [r5, #20]
   1824c:	cmp	r6, #0
   18250:	bne	182b0 <argp_parse@@Base+0x1d3c>
   18254:	ldr	r7, [r5, #4]
   18258:	cmp	r7, #0
   1825c:	beq	18538 <argp_parse@@Base+0x1fc4>
   18260:	ldr	r2, [r5, #32]
   18264:	add	r3, r8, r7
   18268:	cmp	r2, r3
   1826c:	bls	18624 <argp_parse@@Base+0x20b0>
   18270:	add	r6, r4, r7
   18274:	sub	r2, r8, r4
   18278:	mov	r1, r4
   1827c:	mov	r0, r6
   18280:	bl	1101c <memmove@plt>
   18284:	ldr	r3, [r5, #28]
   18288:	mov	r0, r4
   1828c:	mov	r2, r7
   18290:	mov	r1, #32
   18294:	mov	r4, r6
   18298:	add	r3, r3, r7
   1829c:	str	r3, [r5, #28]
   182a0:	bl	111b4 <memset@plt>
   182a4:	ldr	r8, [r5, #28]
   182a8:	mov	r6, r7
   182ac:	str	r7, [r5, #20]
   182b0:	sub	r9, r8, r4
   182b4:	mov	r1, #10
   182b8:	mov	r2, r9
   182bc:	mov	r0, r4
   182c0:	bl	111cc <memchr@plt>
   182c4:	cmp	r6, #0
   182c8:	mov	fp, r0
   182cc:	bge	182d8 <argp_parse@@Base+0x1d64>
   182d0:	mov	r6, #0
   182d4:	str	r6, [r5, #20]
   182d8:	cmp	fp, #0
   182dc:	ldr	r3, [r5, #8]
   182e0:	beq	18380 <argp_parse@@Base+0x1e0c>
   182e4:	sub	r2, fp, r4
   182e8:	add	r2, r2, r6
   182ec:	cmp	r2, r3
   182f0:	blt	18554 <argp_parse@@Base+0x1fe0>
   182f4:	ldr	sl, [r5, #12]
   182f8:	sub	r7, r3, #1
   182fc:	str	r3, [sp, #4]
   18300:	cmp	sl, #0
   18304:	bge	183a0 <argp_parse@@Base+0x1e2c>
   18308:	cmp	r8, fp
   1830c:	bls	186d8 <argp_parse@@Base+0x2164>
   18310:	sub	r0, r7, r6
   18314:	sub	r2, r8, fp
   18318:	add	r0, r4, r0
   1831c:	mov	r1, fp
   18320:	bl	1101c <memmove@plt>
   18324:	ldr	r2, [r5, #20]
   18328:	mov	r3, #0
   1832c:	str	r3, [r5, #20]
   18330:	ldr	r3, [sp, #4]
   18334:	ldr	r8, [r5, #28]
   18338:	sub	r7, r7, r2
   1833c:	add	r7, r4, r7
   18340:	sub	fp, r7, fp
   18344:	add	r4, r4, r3
   18348:	sub	r8, r8, fp
   1834c:	cmp	r4, r8
   18350:	str	r8, [r5, #28]
   18354:	bcc	18248 <argp_parse@@Base+0x1cd4>
   18358:	ldr	r3, [r5, #24]
   1835c:	sub	r8, r8, r3
   18360:	str	r8, [r5, #16]
   18364:	add	sp, sp, #12
   18368:	ldrd	r4, [sp]
   1836c:	ldrd	r6, [sp, #8]
   18370:	ldrd	r8, [sp, #16]
   18374:	ldrd	sl, [sp, #24]
   18378:	add	sp, sp, #32
   1837c:	pop	{pc}		; (ldr pc, [sp], #4)
   18380:	add	r1, r6, r9
   18384:	cmp	r1, r3
   18388:	bcc	18744 <argp_parse@@Base+0x21d0>
   1838c:	ldr	sl, [r5, #12]
   18390:	sub	r7, r3, #1
   18394:	cmp	sl, #0
   18398:	blt	186dc <argp_parse@@Base+0x2168>
   1839c:	mov	fp, r8
   183a0:	add	r7, r7, #1
   183a4:	sub	r6, r7, r6
   183a8:	adds	r6, r4, r6
   183ac:	bcs	18598 <argp_parse@@Base+0x2024>
   183b0:	bl	11154 <__ctype_b_loc@plt>
   183b4:	mov	r3, r6
   183b8:	ldr	ip, [r0]
   183bc:	b	183cc <argp_parse@@Base+0x1e58>
   183c0:	cmp	r4, r0
   183c4:	mov	r3, r0
   183c8:	bhi	1859c <argp_parse@@Base+0x2028>
   183cc:	ldrb	r1, [r3]
   183d0:	mov	r7, r3
   183d4:	sub	r0, r3, #1
   183d8:	lsl	r1, r1, #1
   183dc:	ldrh	r1, [ip, r1]
   183e0:	tst	r1, #1
   183e4:	beq	183c0 <argp_parse@@Base+0x1e4c>
   183e8:	add	r0, r3, #1
   183ec:	cmp	r4, r0
   183f0:	bcs	185ac <argp_parse@@Base+0x2038>
   183f4:	cmp	r4, r3
   183f8:	movhi	r6, r0
   183fc:	movhi	r7, r6
   18400:	bls	1841c <argp_parse@@Base+0x1ea8>
   18404:	b	18430 <argp_parse@@Base+0x1ebc>
   18408:	ldrb	r1, [r6, #-1]
   1840c:	lsl	r1, r1, #1
   18410:	ldrh	r1, [ip, r1]
   18414:	tst	r1, #1
   18418:	beq	1842c <argp_parse@@Base+0x1eb8>
   1841c:	cmp	r4, r3
   18420:	mov	r6, r3
   18424:	sub	r3, r3, #1
   18428:	bne	18408 <argp_parse@@Base+0x1e94>
   1842c:	mov	r7, r0
   18430:	add	r3, r9, #1
   18434:	add	r3, r4, r3
   18438:	cmp	r7, r3
   1843c:	beq	18568 <argp_parse@@Base+0x1ff4>
   18440:	add	r1, r6, #1
   18444:	sub	r3, r7, r1
   18448:	cmp	r3, sl
   1844c:	bge	18580 <argp_parse@@Base+0x200c>
   18450:	cmp	r7, r8
   18454:	bcs	18578 <argp_parse@@Base+0x2004>
   18458:	ldr	r3, [r5, #32]
   1845c:	add	sl, sl, #1
   18460:	sub	r3, r3, r8
   18464:	cmp	r3, sl
   18468:	bgt	186f0 <argp_parse@@Base+0x217c>
   1846c:	ldr	r3, [r5]
   18470:	ldr	r0, [r5, #24]
   18474:	cmp	r0, r6
   18478:	bcs	1848c <argp_parse@@Base+0x1f18>
   1847c:	sub	r2, r6, r0
   18480:	mov	r1, #1
   18484:	bl	11064 <fwrite_unlocked@plt>
   18488:	ldr	r3, [r5]
   1848c:	ldr	r2, [r3, #20]
   18490:	ldr	r1, [r3, #24]
   18494:	cmp	r2, r1
   18498:	addcc	r1, r2, #1
   1849c:	strcc	r1, [r3, #20]
   184a0:	movcc	r3, #10
   184a4:	strbcc	r3, [r2]
   184a8:	bcs	18734 <argp_parse@@Base+0x21c0>
   184ac:	ldr	fp, [r5, #24]
   184b0:	sub	r4, r4, fp
   184b4:	sub	r3, r7, fp
   184b8:	add	r9, r9, r4
   184bc:	mov	r8, r3
   184c0:	mov	r4, fp
   184c4:	ldr	r2, [r5, #12]
   184c8:	cmp	r2, r3
   184cc:	ble	184f0 <argp_parse@@Base+0x1f7c>
   184d0:	add	r3, r9, #1
   184d4:	add	r3, fp, r3
   184d8:	cmp	r7, r3
   184dc:	bne	185e0 <argp_parse@@Base+0x206c>
   184e0:	ldr	r3, [r5, #32]
   184e4:	sub	r3, r3, r7
   184e8:	cmp	r2, r3
   184ec:	bgt	185e0 <argp_parse@@Base+0x206c>
   184f0:	cmp	r2, #0
   184f4:	ble	18514 <argp_parse@@Base+0x1fa0>
   184f8:	mov	r3, #0
   184fc:	mov	r1, #32
   18500:	strb	r1, [r4], #1
   18504:	add	r3, r3, #1
   18508:	ldr	r2, [r5, #12]
   1850c:	cmp	r2, r3
   18510:	bgt	18500 <argp_parse@@Base+0x1f8c>
   18514:	cmp	r4, r7
   18518:	bcc	18670 <argp_parse@@Base+0x20fc>
   1851c:	sub	r8, r9, r8
   18520:	cmp	r2, #0
   18524:	add	r8, r4, r8
   18528:	mvneq	r2, #0
   1852c:	str	r2, [r5, #20]
   18530:	str	r8, [r5, #28]
   18534:	b	18240 <argp_parse@@Base+0x1ccc>
   18538:	sub	r9, r8, r4
   1853c:	mov	r1, #10
   18540:	mov	r2, r9
   18544:	mov	r0, r4
   18548:	bl	111cc <memchr@plt>
   1854c:	mov	fp, r0
   18550:	b	182d8 <argp_parse@@Base+0x1d64>
   18554:	mov	r3, #0
   18558:	add	r4, fp, #1
   1855c:	ldr	r8, [r5, #28]
   18560:	str	r3, [r5, #20]
   18564:	b	18240 <argp_parse@@Base+0x1ccc>
   18568:	ldr	r3, [r5, #32]
   1856c:	sub	r3, r3, r6
   18570:	cmp	r3, sl
   18574:	ble	18450 <argp_parse@@Base+0x1edc>
   18578:	add	r1, r6, #1
   1857c:	sub	r3, r7, r1
   18580:	mov	r2, #10
   18584:	sub	r8, r7, r4
   18588:	mov	fp, r4
   1858c:	mov	r4, r1
   18590:	strb	r2, [r6]
   18594:	b	184c4 <argp_parse@@Base+0x1f50>
   18598:	add	r7, r6, #1
   1859c:	cmp	r4, r7
   185a0:	bcs	185ac <argp_parse@@Base+0x2038>
   185a4:	mov	r6, r7
   185a8:	b	18430 <argp_parse@@Base+0x1ebc>
   185ac:	cmp	r6, fp
   185b0:	bcc	186a0 <argp_parse@@Base+0x212c>
   185b4:	cmp	r6, fp
   185b8:	beq	1868c <argp_parse@@Base+0x2118>
   185bc:	bl	11154 <__ctype_b_loc@plt>
   185c0:	ldr	r1, [r0]
   185c4:	mov	r7, r6
   185c8:	ldrb	r3, [r7, #1]!
   185cc:	lsl	r3, r3, #1
   185d0:	ldrh	r3, [r1, r3]
   185d4:	tst	r3, #1
   185d8:	bne	185c8 <argp_parse@@Base+0x2054>
   185dc:	b	18430 <argp_parse@@Base+0x1ebc>
   185e0:	cmp	r2, #0
   185e4:	movgt	r6, #0
   185e8:	movgt	sl, #32
   185ec:	ble	18514 <argp_parse@@Base+0x1fa0>
   185f0:	ldr	r0, [r5]
   185f4:	ldr	r2, [r0, #20]
   185f8:	ldr	r1, [r0, #24]
   185fc:	add	ip, r2, #1
   18600:	cmp	r2, r1
   18604:	strcc	ip, [r0, #20]
   18608:	strbcc	sl, [r2]
   1860c:	bcs	18664 <argp_parse@@Base+0x20f0>
   18610:	ldr	r2, [r5, #12]
   18614:	add	r6, r6, #1
   18618:	cmp	r2, r6
   1861c:	bgt	185f0 <argp_parse@@Base+0x207c>
   18620:	b	18514 <argp_parse@@Base+0x1fa0>
   18624:	mov	r8, #32
   18628:	b	18638 <argp_parse@@Base+0x20c4>
   1862c:	add	r6, r6, #1
   18630:	cmp	r7, r6
   18634:	beq	182a4 <argp_parse@@Base+0x1d30>
   18638:	ldr	r0, [r5]
   1863c:	ldr	r3, [r0, #20]
   18640:	ldr	r2, [r0, #24]
   18644:	add	r1, r3, #1
   18648:	cmp	r3, r2
   1864c:	strcc	r1, [r0, #20]
   18650:	strbcc	r8, [r3]
   18654:	bcc	1862c <argp_parse@@Base+0x20b8>
   18658:	mov	r1, #32
   1865c:	bl	111e4 <__overflow@plt>
   18660:	b	1862c <argp_parse@@Base+0x20b8>
   18664:	mov	r1, #32
   18668:	bl	111e4 <__overflow@plt>
   1866c:	b	18610 <argp_parse@@Base+0x209c>
   18670:	add	r2, fp, r9
   18674:	mov	r1, r7
   18678:	sub	r2, r2, r7
   1867c:	mov	r0, r4
   18680:	bl	1101c <memmove@plt>
   18684:	ldr	r2, [r5, #12]
   18688:	b	1851c <argp_parse@@Base+0x1fa8>
   1868c:	mov	r3, #0
   18690:	add	r4, r6, #1
   18694:	ldr	r8, [r5, #28]
   18698:	str	r3, [r5, #20]
   1869c:	b	18240 <argp_parse@@Base+0x1ccc>
   186a0:	add	r7, r6, #1
   186a4:	b	186c8 <argp_parse@@Base+0x2154>
   186a8:	bl	11154 <__ctype_b_loc@plt>
   186ac:	ldrb	r3, [r7]
   186b0:	add	r7, r7, #1
   186b4:	ldr	r1, [r0]
   186b8:	lsl	r3, r3, #1
   186bc:	ldrh	r3, [r1, r3]
   186c0:	tst	r3, #1
   186c4:	bne	185c4 <argp_parse@@Base+0x2050>
   186c8:	cmp	fp, r7
   186cc:	mov	r6, r7
   186d0:	bne	186a8 <argp_parse@@Base+0x2134>
   186d4:	b	185b4 <argp_parse@@Base+0x2040>
   186d8:	add	r1, r9, r6
   186dc:	sub	r7, r7, r1
   186e0:	str	r1, [r5, #20]
   186e4:	add	r8, r8, r7
   186e8:	str	r8, [r5, #28]
   186ec:	b	18358 <argp_parse@@Base+0x1de4>
   186f0:	sub	r8, r8, r7
   186f4:	mov	r1, r7
   186f8:	mov	r2, r8
   186fc:	add	r0, r6, sl
   18700:	bl	1101c <memmove@plt>
   18704:	ldr	r3, [r5, #12]
   18708:	mov	r2, r6
   1870c:	mov	r1, #10
   18710:	mov	fp, r4
   18714:	strb	r1, [r2], #1
   18718:	add	r7, r3, #1
   1871c:	add	r7, r6, r7
   18720:	add	r9, r7, r8
   18724:	sub	r8, r7, r4
   18728:	sub	r9, r9, r4
   1872c:	mov	r4, r2
   18730:	b	184c4 <argp_parse@@Base+0x1f50>
   18734:	mov	r0, r3
   18738:	mov	r1, #10
   1873c:	bl	111e4 <__overflow@plt>
   18740:	b	184ac <argp_parse@@Base+0x1f38>
   18744:	str	r1, [r5, #20]
   18748:	ldr	r8, [r5, #28]
   1874c:	b	18358 <argp_parse@@Base+0x1de4>
   18750:	str	r4, [sp, #-8]!
   18754:	mov	r4, r0
   18758:	str	lr, [sp, #4]
   1875c:	bl	18214 <argp_parse@@Base+0x1ca0>
   18760:	ldr	r0, [r4, #24]
   18764:	ldr	r2, [r4, #28]
   18768:	cmp	r2, r0
   1876c:	bls	18784 <argp_parse@@Base+0x2210>
   18770:	sub	r2, r2, r0
   18774:	mov	r1, #1
   18778:	ldr	r3, [r4]
   1877c:	bl	11064 <fwrite_unlocked@plt>
   18780:	ldr	r0, [r4, #24]
   18784:	bl	17558 <argp_parse@@Base+0xfe4>
   18788:	mov	r0, r4
   1878c:	ldr	r4, [sp]
   18790:	ldr	lr, [sp, #4]
   18794:	add	sp, sp, #8
   18798:	b	17558 <argp_parse@@Base+0xfe4>
   1879c:	strd	r4, [sp, #-16]!
   187a0:	mov	r4, r0
   187a4:	mov	r5, r1
   187a8:	str	r6, [sp, #8]
   187ac:	str	lr, [sp, #12]
   187b0:	bl	18214 <argp_parse@@Base+0x1ca0>
   187b4:	mov	r1, #1
   187b8:	ldr	r3, [r4]
   187bc:	ldr	r2, [r4, #24]
   187c0:	ldr	ip, [r4, #28]
   187c4:	mov	r0, r2
   187c8:	sub	r2, ip, r2
   187cc:	bl	11064 <fwrite_unlocked@plt>
   187d0:	mov	ip, r0
   187d4:	ldr	r0, [r4, #24]
   187d8:	ldr	r3, [r4, #28]
   187dc:	sub	r2, r3, r0
   187e0:	cmp	ip, r2
   187e4:	bne	18844 <argp_parse@@Base+0x22d0>
   187e8:	ldr	r1, [r4, #32]
   187ec:	mov	r3, #0
   187f0:	str	r3, [r4, #16]
   187f4:	str	r0, [r4, #28]
   187f8:	sub	r1, r1, r0
   187fc:	cmp	r1, r5
   18800:	movcs	r3, #1
   18804:	bcs	18830 <argp_parse@@Base+0x22bc>
   18808:	adds	r5, r1, r5
   1880c:	bcs	1886c <argp_parse@@Base+0x22f8>
   18810:	mov	r1, r5
   18814:	bl	18124 <argp_parse@@Base+0x1bb0>
   18818:	cmp	r0, #0
   1881c:	beq	1886c <argp_parse@@Base+0x22f8>
   18820:	add	r1, r0, r5
   18824:	mov	r3, #1
   18828:	str	r0, [r4, #24]
   1882c:	strd	r0, [r4, #28]
   18830:	ldrd	r4, [sp]
   18834:	mov	r0, r3
   18838:	ldr	r6, [sp, #8]
   1883c:	add	sp, sp, #12
   18840:	pop	{pc}		; (ldr pc, [sp], #4)
   18844:	ldr	lr, [r4, #16]
   18848:	sub	r3, r3, ip
   1884c:	add	r1, r0, ip
   18850:	sub	r2, r3, r0
   18854:	str	r3, [r4, #28]
   18858:	sub	ip, lr, ip
   1885c:	str	ip, [r4, #16]
   18860:	bl	1101c <memmove@plt>
   18864:	mov	r3, #0
   18868:	b	18830 <argp_parse@@Base+0x22bc>
   1886c:	bl	1119c <__errno_location@plt>
   18870:	mov	r2, #12
   18874:	mov	r3, #0
   18878:	str	r2, [r0]
   1887c:	b	18830 <argp_parse@@Base+0x22bc>
   18880:	ldr	ip, [r0, #28]
   18884:	ldr	r3, [r0, #32]
   18888:	sub	r3, r3, ip
   1888c:	cmp	r3, r1
   18890:	bcc	1889c <argp_parse@@Base+0x2328>
   18894:	mov	r0, #1
   18898:	bx	lr
   1889c:	b	1879c <argp_parse@@Base+0x2228>
   188a0:	push	{r1, r2, r3}
   188a4:	mov	r1, #150	; 0x96
   188a8:	strd	r4, [sp, #-20]!	; 0xffffffec
   188ac:	mov	r5, r0
   188b0:	strd	r6, [sp, #8]
   188b4:	str	lr, [sp, #16]
   188b8:	sub	sp, sp, #8
   188bc:	ldr	r7, [sp, #28]
   188c0:	add	r6, sp, #32
   188c4:	ldr	r0, [r5, #28]
   188c8:	ldr	r3, [r5, #32]
   188cc:	sub	r2, r3, r0
   188d0:	cmp	r1, r2
   188d4:	bhi	18924 <argp_parse@@Base+0x23b0>
   188d8:	sub	r4, r3, r0
   188dc:	mov	r2, r7
   188e0:	str	r6, [sp, #4]
   188e4:	mov	r1, r4
   188e8:	mov	r3, r6
   188ec:	bl	11238 <vsnprintf@plt>
   188f0:	cmp	r0, r4
   188f4:	add	r1, r0, #1
   188f8:	bcs	188c4 <argp_parse@@Base+0x2350>
   188fc:	ldr	r3, [r5, #28]
   18900:	add	r3, r3, r0
   18904:	str	r3, [r5, #28]
   18908:	add	sp, sp, #8
   1890c:	ldrd	r4, [sp]
   18910:	ldrd	r6, [sp, #8]
   18914:	ldr	lr, [sp, #16]
   18918:	add	sp, sp, #20
   1891c:	add	sp, sp, #12
   18920:	bx	lr
   18924:	mov	r0, r5
   18928:	bl	1879c <argp_parse@@Base+0x2228>
   1892c:	cmp	r0, #0
   18930:	beq	18940 <argp_parse@@Base+0x23cc>
   18934:	ldr	r0, [r5, #28]
   18938:	ldr	r3, [r5, #32]
   1893c:	b	188d8 <argp_parse@@Base+0x2364>
   18940:	mvn	r0, #0
   18944:	b	18908 <argp_parse@@Base+0x2394>
   18948:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1894c:	ldr	r4, [r1, #32]
   18950:	strd	r6, [sp, #8]
   18954:	strd	r8, [sp, #16]
   18958:	ldr	r7, [r1]
   1895c:	str	sl, [sp, #24]
   18960:	ldr	r8, [r1, #28]
   18964:	add	r6, r0, r4, lsl #2
   18968:	str	lr, [sp, #28]
   1896c:	mov	r5, r7
   18970:	mov	r3, r8
   18974:	cmp	r5, r4
   18978:	movle	r2, #0
   1897c:	movgt	r2, #1
   18980:	cmp	r3, r4
   18984:	movge	r2, #0
   18988:	cmp	r2, #0
   1898c:	beq	18a00 <argp_parse@@Base+0x248c>
   18990:	sub	r2, r5, r4
   18994:	sub	lr, r4, r3
   18998:	cmp	r2, lr
   1899c:	ble	189d0 <argp_parse@@Base+0x245c>
   189a0:	sub	r5, r5, lr
   189a4:	add	lr, lr, r3
   189a8:	add	r2, r0, r3, lsl #2
   189ac:	add	lr, r0, lr, lsl #2
   189b0:	add	ip, r0, r5, lsl #2
   189b4:	ldr	sl, [ip]
   189b8:	ldr	r9, [r2]
   189bc:	str	sl, [r2], #4
   189c0:	cmp	lr, r2
   189c4:	str	r9, [ip], #4
   189c8:	bne	189b4 <argp_parse@@Base+0x2440>
   189cc:	b	18974 <argp_parse@@Base+0x2400>
   189d0:	add	sl, r2, r3
   189d4:	add	r3, r0, r3, lsl #2
   189d8:	mov	r2, r6
   189dc:	add	r9, r0, sl, lsl #2
   189e0:	ldr	lr, [r2]
   189e4:	ldr	ip, [r3]
   189e8:	str	lr, [r3], #4
   189ec:	cmp	r3, r9
   189f0:	str	ip, [r2], #4
   189f4:	bne	189e0 <argp_parse@@Base+0x246c>
   189f8:	mov	r3, sl
   189fc:	b	18974 <argp_parse@@Base+0x2400>
   18a00:	sub	r4, r7, r4
   18a04:	str	r7, [r1, #32]
   18a08:	add	r8, r4, r8
   18a0c:	ldrd	r4, [sp]
   18a10:	str	r8, [r1, #28]
   18a14:	ldrd	r6, [sp, #8]
   18a18:	ldrd	r8, [sp, #16]
   18a1c:	ldr	sl, [sp, #24]
   18a20:	add	sp, sp, #28
   18a24:	pop	{pc}		; (ldr pc, [sp], #4)
   18a28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18a2c:	strd	r6, [sp, #8]
   18a30:	strd	r8, [sp, #16]
   18a34:	strd	sl, [sp, #24]
   18a38:	str	lr, [sp, #32]
   18a3c:	sub	sp, sp, #52	; 0x34
   18a40:	str	r3, [sp, #12]
   18a44:	ldr	r3, [sp, #96]	; 0x60
   18a48:	str	r1, [sp, #28]
   18a4c:	str	r2, [sp, #32]
   18a50:	str	r0, [sp, #36]	; 0x24
   18a54:	ldr	r8, [r3, #20]
   18a58:	ldrb	r5, [r8]
   18a5c:	mov	r9, r8
   18a60:	cmp	r5, #61	; 0x3d
   18a64:	cmpne	r5, #0
   18a68:	movne	r5, #1
   18a6c:	moveq	r5, #0
   18a70:	beq	18a88 <argp_parse@@Base+0x2514>
   18a74:	ldrb	r3, [r9, #1]!
   18a78:	cmp	r3, #0
   18a7c:	cmpne	r3, #61	; 0x3d
   18a80:	bne	18a74 <argp_parse@@Base+0x2500>
   18a84:	sub	r5, r9, r8
   18a88:	ldr	r3, [sp, #12]
   18a8c:	ldr	r3, [r3]
   18a90:	cmp	r3, #0
   18a94:	str	r3, [sp, #16]
   18a98:	beq	18c60 <argp_parse@@Base+0x26ec>
   18a9c:	ldr	fp, [sp, #12]
   18aa0:	mov	r6, #0
   18aa4:	ldr	r4, [sp, #16]
   18aa8:	str	fp, [sp, #24]
   18aac:	b	18ab4 <argp_parse@@Base+0x2540>
   18ab0:	mov	r6, r7
   18ab4:	mov	r2, r5
   18ab8:	mov	r1, r8
   18abc:	mov	r0, r4
   18ac0:	add	r7, r6, #1
   18ac4:	bl	11280 <strncmp@plt>
   18ac8:	cmp	r0, #0
   18acc:	mov	sl, fp
   18ad0:	mov	r0, r4
   18ad4:	bne	18ae4 <argp_parse@@Base+0x2570>
   18ad8:	bl	11178 <strlen@plt>
   18adc:	cmp	r0, r5
   18ae0:	beq	18b98 <argp_parse@@Base+0x2624>
   18ae4:	ldr	r4, [fp, #16]!
   18ae8:	cmp	r4, #0
   18aec:	bne	18ab0 <argp_parse@@Base+0x253c>
   18af0:	ldr	r0, [sp, #16]
   18af4:	mvn	r3, #0
   18af8:	mov	r1, r8
   18afc:	str	r7, [sp, #16]
   18b00:	mov	sl, r4
   18b04:	mov	r8, r4
   18b08:	ldr	fp, [sp, #24]
   18b0c:	str	r4, [sp, #20]
   18b10:	ldr	r7, [sp, #96]	; 0x60
   18b14:	str	r3, [sp, #40]	; 0x28
   18b18:	str	r4, [sp, #44]	; 0x2c
   18b1c:	mov	r2, r5
   18b20:	bl	11280 <strncmp@plt>
   18b24:	cmp	r0, #0
   18b28:	bne	18b68 <argp_parse@@Base+0x25f4>
   18b2c:	cmp	sl, #0
   18b30:	beq	18c54 <argp_parse@@Base+0x26e0>
   18b34:	ldr	r3, [sp, #92]	; 0x5c
   18b38:	cmp	r3, #0
   18b3c:	beq	18c08 <argp_parse@@Base+0x2694>
   18b40:	ldr	r3, [sp, #20]
   18b44:	cmp	r3, #0
   18b48:	bne	18b68 <argp_parse@@Base+0x25f4>
   18b4c:	ldr	r3, [sp, #100]	; 0x64
   18b50:	cmp	r3, #0
   18b54:	beq	18cd8 <argp_parse@@Base+0x2764>
   18b58:	cmp	r4, #0
   18b5c:	beq	18e00 <argp_parse@@Base+0x288c>
   18b60:	mov	r3, #1
   18b64:	strb	r3, [r4, r8]
   18b68:	ldr	r0, [fp, #16]!
   18b6c:	add	r8, r8, #1
   18b70:	cmp	r0, #0
   18b74:	beq	18b80 <argp_parse@@Base+0x260c>
   18b78:	ldr	r1, [r7, #20]
   18b7c:	b	18b1c <argp_parse@@Base+0x25a8>
   18b80:	ldr	r3, [sp, #20]
   18b84:	orrs	r3, r4, r3
   18b88:	bne	18d28 <argp_parse@@Base+0x27b4>
   18b8c:	cmp	sl, #0
   18b90:	ldrne	r6, [sp, #40]	; 0x28
   18b94:	beq	18c60 <argp_parse@@Base+0x26ec>
   18b98:	ldr	r3, [sp, #96]	; 0x60
   18b9c:	mov	r2, #0
   18ba0:	ldr	r1, [sp, #96]	; 0x60
   18ba4:	ldr	r0, [sl, #4]
   18ba8:	ldr	r3, [r3]
   18bac:	str	r2, [r1, #20]
   18bb0:	add	r2, r3, #1
   18bb4:	str	r2, [r1]
   18bb8:	ldrb	r1, [r9]
   18bbc:	cmp	r1, #0
   18bc0:	bne	18c3c <argp_parse@@Base+0x26c8>
   18bc4:	cmp	r0, #1
   18bc8:	beq	18db8 <argp_parse@@Base+0x2844>
   18bcc:	ldr	r3, [sp, #88]	; 0x58
   18bd0:	cmp	r3, #0
   18bd4:	strne	r6, [r3]
   18bd8:	ldr	r3, [sl, #8]
   18bdc:	ldr	r0, [sl, #12]
   18be0:	cmp	r3, #0
   18be4:	strne	r0, [r3]
   18be8:	movne	r0, #0
   18bec:	add	sp, sp, #52	; 0x34
   18bf0:	ldrd	r4, [sp]
   18bf4:	ldrd	r6, [sp, #8]
   18bf8:	ldrd	r8, [sp, #16]
   18bfc:	ldrd	sl, [sp, #24]
   18c00:	add	sp, sp, #32
   18c04:	pop	{pc}		; (ldr pc, [sp], #4)
   18c08:	ldr	r1, [sl, #4]
   18c0c:	ldr	r2, [fp, #4]
   18c10:	cmp	r1, r2
   18c14:	bne	18b40 <argp_parse@@Base+0x25cc>
   18c18:	ldr	r1, [sl, #8]
   18c1c:	ldr	r2, [fp, #8]
   18c20:	cmp	r1, r2
   18c24:	bne	18b40 <argp_parse@@Base+0x25cc>
   18c28:	ldr	r1, [sl, #12]
   18c2c:	ldr	r2, [fp, #12]
   18c30:	cmp	r1, r2
   18c34:	bne	18b40 <argp_parse@@Base+0x25cc>
   18c38:	b	18b68 <argp_parse@@Base+0x25f4>
   18c3c:	cmp	r0, #0
   18c40:	beq	18de0 <argp_parse@@Base+0x286c>
   18c44:	ldr	r3, [sp, #96]	; 0x60
   18c48:	add	r9, r9, #1
   18c4c:	str	r9, [r3, #12]
   18c50:	b	18bcc <argp_parse@@Base+0x2658>
   18c54:	mov	sl, fp
   18c58:	str	r8, [sp, #40]	; 0x28
   18c5c:	b	18b68 <argp_parse@@Base+0x25f4>
   18c60:	ldr	r3, [sp, #92]	; 0x5c
   18c64:	cmp	r3, #0
   18c68:	beq	18ca4 <argp_parse@@Base+0x2730>
   18c6c:	ldr	r2, [sp, #28]
   18c70:	ldr	r3, [sp, #96]	; 0x60
   18c74:	ldr	r3, [r3]
   18c78:	ldr	r3, [r2, r3, lsl #2]
   18c7c:	ldrb	r3, [r3, #1]
   18c80:	cmp	r3, #45	; 0x2d
   18c84:	beq	18ca4 <argp_parse@@Base+0x2730>
   18c88:	ldr	r0, [sp, #32]
   18c8c:	ldr	r3, [sp, #96]	; 0x60
   18c90:	ldr	r3, [r3, #20]
   18c94:	ldrb	r1, [r3]
   18c98:	bl	11184 <strchr@plt>
   18c9c:	cmp	r0, #0
   18ca0:	bne	18e70 <argp_parse@@Base+0x28fc>
   18ca4:	ldr	r3, [sp, #100]	; 0x64
   18ca8:	cmp	r3, #0
   18cac:	bne	18cf4 <argp_parse@@Base+0x2780>
   18cb0:	ldr	r3, [sp, #96]	; 0x60
   18cb4:	mov	r2, #0
   18cb8:	mov	r0, #63	; 0x3f
   18cbc:	ldr	r1, [sp, #96]	; 0x60
   18cc0:	ldr	r3, [r3]
   18cc4:	str	r2, [r1, #8]
   18cc8:	str	r2, [r1, #20]
   18ccc:	add	r3, r3, #1
   18cd0:	str	r3, [r1]
   18cd4:	b	18bec <argp_parse@@Base+0x2678>
   18cd8:	mov	r3, #1
   18cdc:	cmp	r4, #0
   18ce0:	str	r3, [sp, #20]
   18ce4:	beq	18b68 <argp_parse@@Base+0x25f4>
   18ce8:	mov	r3, #1
   18cec:	strb	r3, [r4, r8]
   18cf0:	b	18b68 <argp_parse@@Base+0x25f4>
   18cf4:	ldr	r3, [sp, #96]	; 0x60
   18cf8:	movw	r0, #45720	; 0xb298
   18cfc:	movt	r0, #2
   18d00:	movw	r1, #42404	; 0xa5a4
   18d04:	movt	r1, #1
   18d08:	ldr	r0, [r0]
   18d0c:	ldr	ip, [r3, #20]
   18d10:	ldr	r3, [sp, #28]
   18d14:	ldr	r2, [r3]
   18d18:	str	ip, [sp]
   18d1c:	ldr	r3, [sp, #104]	; 0x68
   18d20:	bl	11190 <fprintf@plt>
   18d24:	b	18cb0 <argp_parse@@Base+0x273c>
   18d28:	ldr	r3, [sp, #100]	; 0x64
   18d2c:	cmp	r3, #0
   18d30:	beq	18d70 <argp_parse@@Base+0x27fc>
   18d34:	ldr	r3, [sp, #20]
   18d38:	movw	r5, #45720	; 0xb298
   18d3c:	movt	r5, #2
   18d40:	ldr	r0, [r5]
   18d44:	cmp	r3, #0
   18d48:	beq	18ea8 <argp_parse@@Base+0x2934>
   18d4c:	ldr	r2, [sp, #28]
   18d50:	movw	r1, #42316	; 0xa54c
   18d54:	movt	r1, #1
   18d58:	ldr	r3, [sp, #96]	; 0x60
   18d5c:	ldr	r2, [r2]
   18d60:	ldr	ip, [r3, #20]
   18d64:	ldr	r3, [sp, #104]	; 0x68
   18d68:	str	ip, [sp]
   18d6c:	bl	11190 <fprintf@plt>
   18d70:	ldr	r3, [sp, #44]	; 0x2c
   18d74:	cmp	r3, #0
   18d78:	bne	18e64 <argp_parse@@Base+0x28f0>
   18d7c:	ldr	r3, [sp, #96]	; 0x60
   18d80:	ldr	r4, [r3, #20]
   18d84:	mov	r0, r4
   18d88:	bl	11178 <strlen@plt>
   18d8c:	ldr	r3, [sp, #96]	; 0x60
   18d90:	add	r4, r4, r0
   18d94:	mov	r2, #0
   18d98:	mov	r0, #63	; 0x3f
   18d9c:	ldr	r1, [sp, #96]	; 0x60
   18da0:	ldr	r3, [r3]
   18da4:	str	r2, [r1, #8]
   18da8:	str	r4, [r1, #20]
   18dac:	add	r3, r3, #1
   18db0:	str	r3, [r1]
   18db4:	b	18bec <argp_parse@@Base+0x2678>
   18db8:	ldr	r1, [sp, #36]	; 0x24
   18dbc:	cmp	r2, r1
   18dc0:	bge	18e78 <argp_parse@@Base+0x2904>
   18dc4:	ldr	r1, [sp, #28]
   18dc8:	add	r3, r3, #2
   18dcc:	ldr	r2, [r1, r2, lsl #2]
   18dd0:	ldr	r1, [sp, #96]	; 0x60
   18dd4:	str	r3, [r1]
   18dd8:	str	r2, [r1, #12]
   18ddc:	b	18bcc <argp_parse@@Base+0x2658>
   18de0:	ldr	r3, [sp, #100]	; 0x64
   18de4:	cmp	r3, #0
   18de8:	bne	18e34 <argp_parse@@Base+0x28c0>
   18dec:	ldr	r3, [sl, #12]
   18df0:	mov	r0, #63	; 0x3f
   18df4:	ldr	r2, [sp, #96]	; 0x60
   18df8:	str	r3, [r2, #8]
   18dfc:	b	18bec <argp_parse@@Base+0x2678>
   18e00:	ldr	r0, [sp, #16]
   18e04:	bl	180e8 <argp_parse@@Base+0x1b74>
   18e08:	subs	r4, r0, #0
   18e0c:	beq	18f6c <argp_parse@@Base+0x29f8>
   18e10:	ldr	r2, [sp, #16]
   18e14:	ldr	r1, [sp, #20]
   18e18:	bl	111b4 <memset@plt>
   18e1c:	mov	r3, #1
   18e20:	mov	r2, #1
   18e24:	str	r3, [sp, #44]	; 0x2c
   18e28:	ldr	r3, [sp, #40]	; 0x28
   18e2c:	strb	r2, [r4, r3]
   18e30:	b	18b60 <argp_parse@@Base+0x25ec>
   18e34:	ldr	ip, [sl]
   18e38:	movw	r0, #45720	; 0xb298
   18e3c:	movt	r0, #2
   18e40:	movw	r1, #42436	; 0xa5c4
   18e44:	movt	r1, #1
   18e48:	ldr	r3, [sp, #28]
   18e4c:	ldr	r0, [r0]
   18e50:	ldr	r2, [r3]
   18e54:	str	ip, [sp]
   18e58:	ldr	r3, [sp, #104]	; 0x68
   18e5c:	bl	11190 <fprintf@plt>
   18e60:	b	18dec <argp_parse@@Base+0x2878>
   18e64:	mov	r0, r4
   18e68:	bl	17558 <argp_parse@@Base+0xfe4>
   18e6c:	b	18d7c <argp_parse@@Base+0x2808>
   18e70:	mvn	r0, #0
   18e74:	b	18bec <argp_parse@@Base+0x2678>
   18e78:	ldr	r3, [sp, #100]	; 0x64
   18e7c:	cmp	r3, #0
   18e80:	bne	18f3c <argp_parse@@Base+0x29c8>
   18e84:	ldr	r3, [sl, #12]
   18e88:	ldr	r2, [sp, #96]	; 0x60
   18e8c:	str	r3, [r2, #8]
   18e90:	ldr	r3, [sp, #32]
   18e94:	ldrb	r3, [r3]
   18e98:	cmp	r3, #58	; 0x3a
   18e9c:	moveq	r0, #58	; 0x3a
   18ea0:	movne	r0, #63	; 0x3f
   18ea4:	b	18bec <argp_parse@@Base+0x2678>
   18ea8:	bl	1122c <flockfile@plt>
   18eac:	ldr	r2, [sp, #28]
   18eb0:	movw	r1, #42348	; 0xa56c
   18eb4:	movt	r1, #1
   18eb8:	movw	r7, #42396	; 0xa59c
   18ebc:	movt	r7, #1
   18ec0:	ldr	r3, [sp, #96]	; 0x60
   18ec4:	add	r6, r4, r6
   18ec8:	sub	r8, r4, #1
   18ecc:	ldr	r2, [r2]
   18ed0:	ldr	r0, [r3, #20]
   18ed4:	ldr	r3, [sp, #104]	; 0x68
   18ed8:	str	r0, [sp]
   18edc:	ldr	r0, [r5]
   18ee0:	bl	11190 <fprintf@plt>
   18ee4:	ldr	r0, [r5]
   18ee8:	ldr	sl, [sp, #12]
   18eec:	ldr	r9, [sp, #20]
   18ef0:	b	18f00 <argp_parse@@Base+0x298c>
   18ef4:	cmp	r6, r8
   18ef8:	add	r9, r9, #1
   18efc:	beq	18f24 <argp_parse@@Base+0x29b0>
   18f00:	ldrb	r3, [r8, #1]!
   18f04:	cmp	r3, #0
   18f08:	beq	18ef4 <argp_parse@@Base+0x2980>
   18f0c:	mov	r1, r7
   18f10:	ldr	r3, [sl, r9, lsl #4]
   18f14:	ldr	r2, [sp, #104]	; 0x68
   18f18:	bl	11190 <fprintf@plt>
   18f1c:	ldr	r0, [r5]
   18f20:	b	18ef4 <argp_parse@@Base+0x2980>
   18f24:	mov	r1, r0
   18f28:	mov	r0, #10
   18f2c:	bl	11220 <fputc@plt>
   18f30:	ldr	r0, [r5]
   18f34:	bl	110c4 <funlockfile@plt>
   18f38:	b	18d70 <argp_parse@@Base+0x27fc>
   18f3c:	ldr	ip, [sl]
   18f40:	movw	r0, #45720	; 0xb298
   18f44:	movt	r0, #2
   18f48:	movw	r1, #42484	; 0xa5f4
   18f4c:	movt	r1, #1
   18f50:	ldr	r3, [sp, #28]
   18f54:	ldr	r0, [r0]
   18f58:	ldr	r2, [r3]
   18f5c:	str	ip, [sp]
   18f60:	ldr	r3, [sp, #104]	; 0x68
   18f64:	bl	11190 <fprintf@plt>
   18f68:	b	18e84 <argp_parse@@Base+0x2910>
   18f6c:	mov	r3, #1
   18f70:	str	r3, [sp, #20]
   18f74:	b	18b68 <argp_parse@@Base+0x25f4>
   18f78:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18f7c:	subs	r5, r0, #0
   18f80:	strd	r6, [sp, #8]
   18f84:	strd	r8, [sp, #16]
   18f88:	strd	sl, [sp, #24]
   18f8c:	str	lr, [sp, #32]
   18f90:	sub	sp, sp, #36	; 0x24
   18f94:	ldr	r4, [sp, #80]	; 0x50
   18f98:	ldr	r7, [r4, #4]
   18f9c:	ble	1918c <argp_parse@@Base+0x2c18>
   18fa0:	mov	r6, r2
   18fa4:	mov	sl, r3
   18fa8:	ldr	r2, [r4]
   18fac:	mov	r3, #0
   18fb0:	mov	r9, r1
   18fb4:	str	r3, [r4, #12]
   18fb8:	cmp	r2, r3
   18fbc:	beq	19234 <argp_parse@@Base+0x2cc0>
   18fc0:	ldr	r3, [r4, #16]
   18fc4:	cmp	r3, #0
   18fc8:	bne	19158 <argp_parse@@Base+0x2be4>
   18fcc:	mov	r3, #0
   18fd0:	str	r3, [r4, #20]
   18fd4:	str	r2, [r4, #28]
   18fd8:	str	r2, [r4, #32]
   18fdc:	ldrb	r2, [r6]
   18fe0:	cmp	r2, #45	; 0x2d
   18fe4:	moveq	r2, #2
   18fe8:	addeq	r6, r6, #1
   18fec:	streq	r2, [r4, #24]
   18ff0:	beq	19018 <argp_parse@@Base+0x2aa4>
   18ff4:	cmp	r2, #43	; 0x2b
   18ff8:	addeq	r6, r6, #1
   18ffc:	streq	r3, [r4, #24]
   19000:	beq	19018 <argp_parse@@Base+0x2aa4>
   19004:	ldr	r2, [sp, #84]	; 0x54
   19008:	cmp	r2, #0
   1900c:	beq	19364 <argp_parse@@Base+0x2df0>
   19010:	mov	r2, #0
   19014:	str	r2, [r4, #24]
   19018:	mov	r2, #1
   1901c:	str	r2, [r4, #16]
   19020:	ldrb	r2, [r6]
   19024:	cmp	r2, #58	; 0x3a
   19028:	moveq	r7, #0
   1902c:	cmp	r3, #0
   19030:	beq	190c4 <argp_parse@@Base+0x2b50>
   19034:	ldrb	r2, [r3]
   19038:	cmp	r2, #0
   1903c:	beq	190c4 <argp_parse@@Base+0x2b50>
   19040:	add	fp, r3, #1
   19044:	mov	r0, r6
   19048:	str	r3, [sp, #28]
   1904c:	str	fp, [r4, #20]
   19050:	ldrb	r8, [r3]
   19054:	mov	r1, r8
   19058:	str	r8, [sp, #24]
   1905c:	bl	11184 <strchr@plt>
   19060:	ldrd	r2, [sp, #24]
   19064:	ldrb	r1, [r3, #1]
   19068:	cmp	r1, #0
   1906c:	bne	1907c <argp_parse@@Base+0x2b08>
   19070:	ldr	r1, [r4]
   19074:	add	r1, r1, #1
   19078:	str	r1, [r4]
   1907c:	sub	r1, r8, #58	; 0x3a
   19080:	cmp	r0, #0
   19084:	cmpne	r1, #1
   19088:	bls	193e0 <argp_parse@@Base+0x2e6c>
   1908c:	ldrb	ip, [r0]
   19090:	ldrb	r1, [r0, #1]
   19094:	cmp	ip, #87	; 0x57
   19098:	beq	192e4 <argp_parse@@Base+0x2d70>
   1909c:	cmp	r1, #58	; 0x3a
   190a0:	beq	19388 <argp_parse@@Base+0x2e14>
   190a4:	mov	r0, r2
   190a8:	add	sp, sp, #36	; 0x24
   190ac:	ldrd	r4, [sp]
   190b0:	ldrd	r6, [sp, #8]
   190b4:	ldrd	r8, [sp, #16]
   190b8:	ldrd	sl, [sp, #24]
   190bc:	add	sp, sp, #32
   190c0:	pop	{pc}		; (ldr pc, [sp], #4)
   190c4:	ldr	r8, [r4]
   190c8:	ldr	r3, [r4, #32]
   190cc:	cmp	r3, r8
   190d0:	ldr	r3, [r4, #28]
   190d4:	strgt	r8, [r4, #32]
   190d8:	cmp	r8, r3
   190dc:	ldr	r3, [r4, #24]
   190e0:	strlt	r8, [r4, #28]
   190e4:	cmp	r3, #1
   190e8:	beq	19194 <argp_parse@@Base+0x2c20>
   190ec:	cmp	r5, r8
   190f0:	beq	19174 <argp_parse@@Base+0x2c00>
   190f4:	ldr	r3, [r9, r8, lsl #2]
   190f8:	movw	fp, #41120	; 0xa0a0
   190fc:	movt	fp, #1
   19100:	mov	r1, fp
   19104:	mov	r0, r3
   19108:	str	r3, [sp, #24]
   1910c:	bl	10fd4 <strcmp@plt>
   19110:	cmp	r0, #0
   19114:	ldr	r3, [sp, #24]
   19118:	bne	19208 <argp_parse@@Base+0x2c94>
   1911c:	ldr	r3, [r4, #28]
   19120:	add	r8, r8, #1
   19124:	ldr	r2, [r4, #32]
   19128:	str	r8, [r4]
   1912c:	cmp	r3, r2
   19130:	beq	193f4 <argp_parse@@Base+0x2e80>
   19134:	cmp	r8, r2
   19138:	beq	1914c <argp_parse@@Base+0x2bd8>
   1913c:	mov	r0, r9
   19140:	mov	r1, r4
   19144:	bl	18948 <argp_parse@@Base+0x23d4>
   19148:	ldr	r3, [r4, #28]
   1914c:	str	r5, [r4]
   19150:	str	r5, [r4, #32]
   19154:	b	1917c <argp_parse@@Base+0x2c08>
   19158:	ldrb	r2, [r6]
   1915c:	ldr	r3, [r4, #20]
   19160:	sub	r1, r2, #43	; 0x2b
   19164:	tst	r1, #253	; 0xfd
   19168:	ldrbeq	r2, [r6, #1]
   1916c:	addeq	r6, r6, #1
   19170:	b	19024 <argp_parse@@Base+0x2ab0>
   19174:	ldr	r3, [r4, #28]
   19178:	ldr	r5, [r4, #32]
   1917c:	cmp	r5, r3
   19180:	mvnne	r2, #0
   19184:	strne	r3, [r4]
   19188:	bne	190a4 <argp_parse@@Base+0x2b30>
   1918c:	mvn	r2, #0
   19190:	b	190a4 <argp_parse@@Base+0x2b30>
   19194:	ldrd	r2, [r4, #28]
   19198:	cmp	r2, r3
   1919c:	beq	193c8 <argp_parse@@Base+0x2e54>
   191a0:	cmp	r8, r3
   191a4:	beq	191b8 <argp_parse@@Base+0x2c44>
   191a8:	mov	r1, r4
   191ac:	mov	r0, r9
   191b0:	bl	18948 <argp_parse@@Base+0x23d4>
   191b4:	ldr	r3, [r4]
   191b8:	cmp	r5, r3
   191bc:	ble	193d8 <argp_parse@@Base+0x2e64>
   191c0:	add	r1, r9, r3, lsl #2
   191c4:	b	191d8 <argp_parse@@Base+0x2c64>
   191c8:	add	r3, r3, #1
   191cc:	cmp	r3, r5
   191d0:	str	r3, [r4]
   191d4:	beq	193d8 <argp_parse@@Base+0x2e64>
   191d8:	ldr	r2, [r1], #4
   191dc:	ldrb	r0, [r2]
   191e0:	cmp	r0, #45	; 0x2d
   191e4:	bne	191c8 <argp_parse@@Base+0x2c54>
   191e8:	ldrb	r2, [r2, #1]
   191ec:	cmp	r2, #0
   191f0:	beq	191c8 <argp_parse@@Base+0x2c54>
   191f4:	ldr	r8, [r4]
   191f8:	cmp	r5, r8
   191fc:	str	r3, [r4, #32]
   19200:	bne	190f4 <argp_parse@@Base+0x2b80>
   19204:	b	19174 <argp_parse@@Base+0x2c00>
   19208:	ldrb	r2, [r3]
   1920c:	cmp	r2, #45	; 0x2d
   19210:	beq	19244 <argp_parse@@Base+0x2cd0>
   19214:	ldr	r2, [r4, #24]
   19218:	cmp	r2, #0
   1921c:	beq	1918c <argp_parse@@Base+0x2c18>
   19220:	add	r8, r8, #1
   19224:	mov	r2, #1
   19228:	str	r8, [r4]
   1922c:	str	r3, [r4, #12]
   19230:	b	190a4 <argp_parse@@Base+0x2b30>
   19234:	mov	r3, #1
   19238:	mov	r2, r3
   1923c:	str	r3, [r4]
   19240:	b	18fcc <argp_parse@@Base+0x2a58>
   19244:	ldrb	r1, [r3, #1]
   19248:	cmp	r1, #0
   1924c:	beq	19214 <argp_parse@@Base+0x2ca0>
   19250:	cmp	sl, #0
   19254:	beq	192dc <argp_parse@@Base+0x2d68>
   19258:	cmp	r1, #45	; 0x2d
   1925c:	beq	19474 <argp_parse@@Base+0x2f00>
   19260:	ldr	r2, [sp, #76]	; 0x4c
   19264:	cmp	r2, #0
   19268:	beq	192dc <argp_parse@@Base+0x2d68>
   1926c:	ldrb	r2, [r3, #2]
   19270:	cmp	r2, #0
   19274:	bne	19290 <argp_parse@@Base+0x2d1c>
   19278:	mov	r0, r6
   1927c:	str	r3, [sp, #24]
   19280:	bl	11184 <strchr@plt>
   19284:	cmp	r0, #0
   19288:	ldr	r3, [sp, #24]
   1928c:	bne	192dc <argp_parse@@Base+0x2d68>
   19290:	ldr	r2, [sp, #72]	; 0x48
   19294:	add	ip, r3, #1
   19298:	movw	r0, #42540	; 0xa62c
   1929c:	movt	r0, #1
   192a0:	mov	r3, sl
   192a4:	ldr	r1, [sp, #76]	; 0x4c
   192a8:	str	r2, [sp]
   192ac:	mov	r2, r6
   192b0:	str	r0, [sp, #16]
   192b4:	mov	r0, r5
   192b8:	stmib	sp, {r1, r4, r7}
   192bc:	mov	r1, r9
   192c0:	str	ip, [r4, #20]
   192c4:	bl	18a28 <argp_parse@@Base+0x24b4>
   192c8:	cmn	r0, #1
   192cc:	mov	r2, r0
   192d0:	bne	190a4 <argp_parse@@Base+0x2b30>
   192d4:	ldr	r3, [r4]
   192d8:	ldr	r3, [r9, r3, lsl #2]
   192dc:	add	r3, r3, #1
   192e0:	b	19040 <argp_parse@@Base+0x2acc>
   192e4:	sub	ip, r1, #59	; 0x3b
   192e8:	cmp	sl, #0
   192ec:	clz	ip, ip
   192f0:	lsr	ip, ip, #5
   192f4:	moveq	ip, #0
   192f8:	cmp	ip, #0
   192fc:	beq	1909c <argp_parse@@Base+0x2b28>
   19300:	ldrb	r3, [r3, #1]
   19304:	cmp	r3, #0
   19308:	bne	1931c <argp_parse@@Base+0x2da8>
   1930c:	ldr	r3, [r4]
   19310:	cmp	r3, r5
   19314:	beq	194a8 <argp_parse@@Base+0x2f34>
   19318:	ldr	fp, [r9, r3, lsl #2]
   1931c:	mov	lr, #0
   19320:	movw	ip, #42616	; 0xa678
   19324:	movt	ip, #1
   19328:	ldr	r3, [sp, #72]	; 0x48
   1932c:	mov	r2, r6
   19330:	mov	r1, r9
   19334:	mov	r0, r5
   19338:	str	r3, [sp]
   1933c:	mov	r3, sl
   19340:	str	r4, [sp, #8]
   19344:	str	r7, [sp, #12]
   19348:	str	ip, [sp, #16]
   1934c:	str	fp, [r4, #20]
   19350:	str	lr, [sp, #4]
   19354:	str	lr, [r4, #12]
   19358:	bl	18a28 <argp_parse@@Base+0x24b4>
   1935c:	mov	r2, r0
   19360:	b	190a4 <argp_parse@@Base+0x2b30>
   19364:	movw	r0, #42524	; 0xa61c
   19368:	movt	r0, #1
   1936c:	bl	11100 <getenv@plt>
   19370:	cmp	r0, #0
   19374:	ldr	r3, [r4, #20]
   19378:	bne	19010 <argp_parse@@Base+0x2a9c>
   1937c:	mov	r2, #1
   19380:	str	r2, [r4, #24]
   19384:	b	19018 <argp_parse@@Base+0x2aa4>
   19388:	ldrb	r1, [r0, #2]
   1938c:	ldrb	r3, [r3, #1]
   19390:	cmp	r1, #58	; 0x3a
   19394:	beq	19434 <argp_parse@@Base+0x2ec0>
   19398:	cmp	r3, #0
   1939c:	ldr	r3, [r4]
   193a0:	bne	19400 <argp_parse@@Base+0x2e8c>
   193a4:	cmp	r5, r3
   193a8:	beq	19454 <argp_parse@@Base+0x2ee0>
   193ac:	ldr	r1, [r9, r3, lsl #2]
   193b0:	add	r3, r3, #1
   193b4:	str	r3, [r4]
   193b8:	str	r1, [r4, #12]
   193bc:	mov	r3, #0
   193c0:	str	r3, [r4, #20]
   193c4:	b	190a4 <argp_parse@@Base+0x2b30>
   193c8:	cmp	r8, r3
   193cc:	movne	r3, r8
   193d0:	strne	r8, [r4, #28]
   193d4:	b	191b8 <argp_parse@@Base+0x2c44>
   193d8:	mov	r8, r3
   193dc:	b	191f8 <argp_parse@@Base+0x2c84>
   193e0:	cmp	r7, #0
   193e4:	bne	19410 <argp_parse@@Base+0x2e9c>
   193e8:	mov	r2, #63	; 0x3f
   193ec:	str	r8, [r4, #8]
   193f0:	b	190a4 <argp_parse@@Base+0x2b30>
   193f4:	mov	r3, r8
   193f8:	str	r8, [r4, #28]
   193fc:	b	1914c <argp_parse@@Base+0x2bd8>
   19400:	add	r3, r3, #1
   19404:	str	r3, [r4]
   19408:	str	fp, [r4, #12]
   1940c:	b	193bc <argp_parse@@Base+0x2e48>
   19410:	movw	r0, #45720	; 0xb298
   19414:	movt	r0, #2
   19418:	ldr	r2, [r9]
   1941c:	movw	r1, #42544	; 0xa630
   19420:	movt	r1, #1
   19424:	mov	r3, r8
   19428:	ldr	r0, [r0]
   1942c:	bl	11190 <fprintf@plt>
   19430:	b	193e8 <argp_parse@@Base+0x2e74>
   19434:	cmp	r3, #0
   19438:	streq	r3, [r4, #12]
   1943c:	beq	193bc <argp_parse@@Base+0x2e48>
   19440:	ldr	r3, [r4]
   19444:	str	fp, [r4, #12]
   19448:	add	r3, r3, #1
   1944c:	str	r3, [r4]
   19450:	b	193bc <argp_parse@@Base+0x2e48>
   19454:	cmp	r7, #0
   19458:	bne	194c8 <argp_parse@@Base+0x2f54>
   1945c:	str	r8, [r4, #8]
   19460:	ldrb	r3, [r6]
   19464:	cmp	r3, #58	; 0x3a
   19468:	moveq	r2, #58	; 0x3a
   1946c:	movne	r2, #63	; 0x3f
   19470:	b	193bc <argp_parse@@Base+0x2e48>
   19474:	ldr	r2, [sp, #72]	; 0x48
   19478:	add	ip, r3, #2
   1947c:	mov	r1, r9
   19480:	mov	r3, sl
   19484:	ldr	r0, [sp, #76]	; 0x4c
   19488:	str	r2, [sp]
   1948c:	mov	r2, r6
   19490:	stmib	sp, {r0, r4, r7, fp}
   19494:	mov	r0, r5
   19498:	str	ip, [r4, #20]
   1949c:	bl	18a28 <argp_parse@@Base+0x24b4>
   194a0:	mov	r2, r0
   194a4:	b	190a4 <argp_parse@@Base+0x2b30>
   194a8:	cmp	r7, #0
   194ac:	bne	194ec <argp_parse@@Base+0x2f78>
   194b0:	str	r8, [r4, #8]
   194b4:	ldrb	r3, [r6]
   194b8:	cmp	r3, #58	; 0x3a
   194bc:	moveq	r2, #58	; 0x3a
   194c0:	movne	r2, #63	; 0x3f
   194c4:	b	190a4 <argp_parse@@Base+0x2b30>
   194c8:	movw	r0, #45720	; 0xb298
   194cc:	movt	r0, #2
   194d0:	ldr	r2, [r9]
   194d4:	movw	r1, #42572	; 0xa64c
   194d8:	movt	r1, #1
   194dc:	mov	r3, r8
   194e0:	ldr	r0, [r0]
   194e4:	bl	11190 <fprintf@plt>
   194e8:	b	1945c <argp_parse@@Base+0x2ee8>
   194ec:	movw	r0, #45720	; 0xb298
   194f0:	movt	r0, #2
   194f4:	ldr	r2, [r9]
   194f8:	movw	r1, #42572	; 0xa64c
   194fc:	movt	r1, #1
   19500:	mov	r3, r8
   19504:	ldr	r0, [r0]
   19508:	bl	11190 <fprintf@plt>
   1950c:	b	194b0 <argp_parse@@Base+0x2f3c>
   19510:	strd	r4, [sp, #-16]!
   19514:	movw	r5, #45700	; 0xb284
   19518:	movt	r5, #2
   1951c:	str	r6, [sp, #8]
   19520:	movw	r4, #45780	; 0xb2d4
   19524:	movt	r4, #2
   19528:	str	lr, [sp, #12]
   1952c:	sub	sp, sp, #16
   19530:	ldr	lr, [sp, #32]
   19534:	ldr	ip, [r5]
   19538:	ldr	r6, [sp, #36]	; 0x24
   1953c:	str	lr, [sp]
   19540:	ldr	lr, [sp, #40]	; 0x28
   19544:	str	ip, [r4]
   19548:	ldr	ip, [r5, #4]
   1954c:	str	r6, [sp, #4]
   19550:	str	r4, [sp, #8]
   19554:	str	lr, [sp, #12]
   19558:	str	ip, [r4, #4]
   1955c:	bl	18f78 <argp_parse@@Base+0x2a04>
   19560:	ldr	ip, [r4]
   19564:	movw	r3, #45936	; 0xb370
   19568:	movt	r3, #2
   1956c:	ldr	r1, [r4, #8]
   19570:	ldr	r2, [r4, #12]
   19574:	str	ip, [r5]
   19578:	str	r1, [r5, #8]
   1957c:	str	r2, [r3]
   19580:	add	sp, sp, #16
   19584:	ldrd	r4, [sp]
   19588:	ldr	r6, [sp, #8]
   1958c:	add	sp, sp, #12
   19590:	pop	{pc}		; (ldr pc, [sp], #4)
   19594:	mov	ip, #0
   19598:	push	{lr}		; (str lr, [sp, #-4]!)
   1959c:	mov	lr, #1
   195a0:	sub	sp, sp, #20
   195a4:	mov	r3, ip
   195a8:	str	ip, [sp]
   195ac:	stmib	sp, {ip, lr}
   195b0:	bl	19510 <argp_parse@@Base+0x2f9c>
   195b4:	add	sp, sp, #20
   195b8:	pop	{pc}		; (ldr pc, [sp], #4)
   195bc:	umull	r2, r3, r1, r2
   195c0:	cmp	r3, #0
   195c4:	bne	195d0 <argp_parse@@Base+0x305c>
   195c8:	mov	r1, r2
   195cc:	b	18124 <argp_parse@@Base+0x1bb0>
   195d0:	str	r4, [sp, #-8]!
   195d4:	str	lr, [sp, #4]
   195d8:	bl	1119c <__errno_location@plt>
   195dc:	mov	r3, #12
   195e0:	ldr	r4, [sp]
   195e4:	add	sp, sp, #4
   195e8:	str	r3, [r0]
   195ec:	mov	r0, #0
   195f0:	pop	{pc}		; (ldr pc, [sp], #4)
   195f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195f8:	mov	r7, r0
   195fc:	ldr	r6, [pc, #72]	; 1964c <argp_parse@@Base+0x30d8>
   19600:	ldr	r5, [pc, #72]	; 19650 <argp_parse@@Base+0x30dc>
   19604:	add	r6, pc, r6
   19608:	add	r5, pc, r5
   1960c:	sub	r6, r6, r5
   19610:	mov	r8, r1
   19614:	mov	r9, r2
   19618:	bl	10f9c <calloc@plt-0x20>
   1961c:	asrs	r6, r6, #2
   19620:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19624:	mov	r4, #0
   19628:	add	r4, r4, #1
   1962c:	ldr	r3, [r5], #4
   19630:	mov	r2, r9
   19634:	mov	r1, r8
   19638:	mov	r0, r7
   1963c:	blx	r3
   19640:	cmp	r6, r4
   19644:	bne	19628 <argp_parse@@Base+0x30b4>
   19648:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1964c:	andeq	r1, r1, r0, lsl #18
   19650:	strdeq	r1, [r1], -r8
   19654:	bx	lr

Disassembly of section .fini:

00019658 <.fini>:
   19658:	push	{r3, lr}
   1965c:	pop	{r3, pc}
