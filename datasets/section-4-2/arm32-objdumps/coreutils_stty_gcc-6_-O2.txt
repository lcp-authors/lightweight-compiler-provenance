
../repos/coreutils/src/stty:     file format elf32-littlearm


Disassembly of section .init:

00010e98 <.init>:
   10e98:	push	{r3, lr}
   10e9c:	bl	11cb0 <tcgetattr@plt+0xb1c>
   10ea0:	pop	{r3, pc}

Disassembly of section .plt:

00010ea4 <calloc@plt-0x14>:
   10ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea8:	ldr	lr, [pc, #4]	; 10eb4 <calloc@plt-0x4>
   10eac:	add	lr, pc, lr
   10eb0:	ldr	pc, [lr, #8]!
   10eb4:	andeq	fp, r1, ip, asr #2

00010eb8 <calloc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #110592	; 0x1b000
   10ec0:	ldr	pc, [ip, #332]!	; 0x14c

00010ec4 <fputs_unlocked@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #110592	; 0x1b000
   10ecc:	ldr	pc, [ip, #324]!	; 0x144

00010ed0 <raise@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #110592	; 0x1b000
   10ed8:	ldr	pc, [ip, #316]!	; 0x13c

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #110592	; 0x1b000
   10ee4:	ldr	pc, [ip, #308]!	; 0x134

00010ee8 <strtol@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #110592	; 0x1b000
   10ef0:	ldr	pc, [ip, #300]!	; 0x12c

00010ef4 <fflush@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #110592	; 0x1b000
   10efc:	ldr	pc, [ip, #292]!	; 0x124

00010f00 <free@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #110592	; 0x1b000
   10f08:	ldr	pc, [ip, #284]!	; 0x11c

00010f0c <_exit@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #110592	; 0x1b000
   10f14:	ldr	pc, [ip, #276]!	; 0x114

00010f18 <memcpy@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #110592	; 0x1b000
   10f20:	ldr	pc, [ip, #268]!	; 0x10c

00010f24 <__strtoull_internal@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #110592	; 0x1b000
   10f2c:	ldr	pc, [ip, #260]!	; 0x104

00010f30 <mbsinit@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #110592	; 0x1b000
   10f38:	ldr	pc, [ip, #252]!	; 0xfc

00010f3c <memcmp@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #110592	; 0x1b000
   10f44:	ldr	pc, [ip, #244]!	; 0xf4

00010f48 <fputc_unlocked@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #110592	; 0x1b000
   10f50:	ldr	pc, [ip, #236]!	; 0xec

00010f54 <dcgettext@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #110592	; 0x1b000
   10f5c:	ldr	pc, [ip, #228]!	; 0xe4

00010f60 <cfgetispeed@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #110592	; 0x1b000
   10f68:	ldr	pc, [ip, #220]!	; 0xdc

00010f6c <dup2@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #110592	; 0x1b000
   10f74:	ldr	pc, [ip, #212]!	; 0xd4

00010f78 <realloc@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #110592	; 0x1b000
   10f80:	ldr	pc, [ip, #204]!	; 0xcc

00010f84 <textdomain@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #110592	; 0x1b000
   10f8c:	ldr	pc, [ip, #196]!	; 0xc4

00010f90 <iswprint@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #110592	; 0x1b000
   10f98:	ldr	pc, [ip, #188]!	; 0xbc

00010f9c <cfsetospeed@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #110592	; 0x1b000
   10fa4:	ldr	pc, [ip, #180]!	; 0xb4

00010fa8 <fwrite@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #110592	; 0x1b000
   10fb0:	ldr	pc, [ip, #172]!	; 0xac

00010fb4 <ioctl@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #110592	; 0x1b000
   10fbc:	ldr	pc, [ip, #164]!	; 0xa4

00010fc0 <lseek64@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #110592	; 0x1b000
   10fc8:	ldr	pc, [ip, #156]!	; 0x9c

00010fcc <__ctype_get_mb_cur_max@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #110592	; 0x1b000
   10fd4:	ldr	pc, [ip, #148]!	; 0x94

00010fd8 <tcsetattr@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #110592	; 0x1b000
   10fe0:	ldr	pc, [ip, #140]!	; 0x8c

00010fe4 <__fpending@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #110592	; 0x1b000
   10fec:	ldr	pc, [ip, #132]!	; 0x84

00010ff0 <mbrtowc@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #110592	; 0x1b000
   10ff8:	ldr	pc, [ip, #124]!	; 0x7c

00010ffc <error@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #110592	; 0x1b000
   11004:	ldr	pc, [ip, #116]!	; 0x74

00011008 <open64@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #110592	; 0x1b000
   11010:	ldr	pc, [ip, #108]!	; 0x6c

00011014 <getenv@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #110592	; 0x1b000
   1101c:	ldr	pc, [ip, #100]!	; 0x64

00011020 <malloc@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #110592	; 0x1b000
   11028:	ldr	pc, [ip, #92]!	; 0x5c

0001102c <__libc_start_main@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #110592	; 0x1b000
   11034:	ldr	pc, [ip, #84]!	; 0x54

00011038 <__freading@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #110592	; 0x1b000
   11040:	ldr	pc, [ip, #76]!	; 0x4c

00011044 <__gmon_start__@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #110592	; 0x1b000
   1104c:	ldr	pc, [ip, #68]!	; 0x44

00011050 <getopt_long@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #110592	; 0x1b000
   11058:	ldr	pc, [ip, #60]!	; 0x3c

0001105c <__ctype_b_loc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #110592	; 0x1b000
   11064:	ldr	pc, [ip, #52]!	; 0x34

00011068 <exit@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #110592	; 0x1b000
   11070:	ldr	pc, [ip, #44]!	; 0x2c

00011074 <strtoul@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #110592	; 0x1b000
   1107c:	ldr	pc, [ip, #36]!	; 0x24

00011080 <strlen@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #110592	; 0x1b000
   11088:	ldr	pc, [ip, #28]!

0001108c <strchr@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #110592	; 0x1b000
   11094:	ldr	pc, [ip, #20]!

00011098 <cfsetispeed@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #110592	; 0x1b000
   110a0:	ldr	pc, [ip, #12]!

000110a4 <cfgetospeed@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #110592	; 0x1b000
   110ac:	ldr	pc, [ip, #4]!

000110b0 <__errno_location@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #106496	; 0x1a000
   110b8:	ldr	pc, [ip, #4092]!	; 0xffc

000110bc <__cxa_atexit@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #106496	; 0x1a000
   110c4:	ldr	pc, [ip, #4084]!	; 0xff4

000110c8 <__vasprintf_chk@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #106496	; 0x1a000
   110d0:	ldr	pc, [ip, #4076]!	; 0xfec

000110d4 <memset@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #106496	; 0x1a000
   110dc:	ldr	pc, [ip, #4068]!	; 0xfe4

000110e0 <__printf_chk@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #106496	; 0x1a000
   110e8:	ldr	pc, [ip, #4060]!	; 0xfdc

000110ec <fileno@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #106496	; 0x1a000
   110f4:	ldr	pc, [ip, #4052]!	; 0xfd4

000110f8 <__fprintf_chk@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #106496	; 0x1a000
   11100:	ldr	pc, [ip, #4044]!	; 0xfcc

00011104 <fclose@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #106496	; 0x1a000
   1110c:	ldr	pc, [ip, #4036]!	; 0xfc4

00011110 <fseeko64@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #106496	; 0x1a000
   11118:	ldr	pc, [ip, #4028]!	; 0xfbc

0001111c <fcntl64@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #106496	; 0x1a000
   11124:	ldr	pc, [ip, #4020]!	; 0xfb4

00011128 <__overflow@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #106496	; 0x1a000
   11130:	ldr	pc, [ip, #4012]!	; 0xfac

00011134 <setlocale@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #106496	; 0x1a000
   1113c:	ldr	pc, [ip, #4004]!	; 0xfa4

00011140 <strrchr@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #106496	; 0x1a000
   11148:	ldr	pc, [ip, #3996]!	; 0xf9c

0001114c <nl_langinfo@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #106496	; 0x1a000
   11154:	ldr	pc, [ip, #3988]!	; 0xf94

00011158 <bindtextdomain@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #106496	; 0x1a000
   11160:	ldr	pc, [ip, #3980]!	; 0xf8c

00011164 <strncmp@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #106496	; 0x1a000
   1116c:	ldr	pc, [ip, #3972]!	; 0xf84

00011170 <abort@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #106496	; 0x1a000
   11178:	ldr	pc, [ip, #3964]!	; 0xf7c

0001117c <close@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #106496	; 0x1a000
   11184:	ldr	pc, [ip, #3956]!	; 0xf74

00011188 <__assert_fail@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #106496	; 0x1a000
   11190:	ldr	pc, [ip, #3948]!	; 0xf6c

00011194 <tcgetattr@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #106496	; 0x1a000
   1119c:	ldr	pc, [ip, #3940]!	; 0xf64

Disassembly of section .text:

000111a0 <.text>:
   111a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a4:	sub	sp, sp, #44	; 0x2c
   111a8:	mov	sl, r0
   111ac:	str	r0, [sp, #28]
   111b0:	ldr	r0, [r1]
   111b4:	mov	r5, r1
   111b8:	bl	142d0 <tcgetattr@plt+0x313c>
   111bc:	ldr	r1, [pc, #2556]	; 11bc0 <tcgetattr@plt+0xa2c>
   111c0:	mov	r0, #6
   111c4:	bl	11134 <setlocale@plt>
   111c8:	ldr	r1, [pc, #2548]	; 11bc4 <tcgetattr@plt+0xa30>
   111cc:	ldr	r0, [pc, #2548]	; 11bc8 <tcgetattr@plt+0xa34>
   111d0:	bl	11158 <bindtextdomain@plt>
   111d4:	ldr	r0, [pc, #2540]	; 11bc8 <tcgetattr@plt+0xa34>
   111d8:	bl	10f84 <textdomain@plt>
   111dc:	ldr	r0, [pc, #2536]	; 11bcc <tcgetattr@plt+0xa38>
   111e0:	bl	18444 <tcgetattr@plt+0x72b0>
   111e4:	mov	r9, #1
   111e8:	mov	r3, #0
   111ec:	ldr	r2, [pc, #2524]	; 11bd0 <tcgetattr@plt+0xa3c>
   111f0:	mov	r6, r3
   111f4:	mov	r8, r3
   111f8:	mov	fp, r3
   111fc:	mov	r4, r9
   11200:	str	r3, [r2]
   11204:	str	r3, [sp, #24]
   11208:	str	r3, [sp, #20]
   1120c:	str	r3, [sp, #16]
   11210:	ldr	r3, [pc, #2492]	; 11bd4 <tcgetattr@plt+0xa40>
   11214:	mov	r7, #0
   11218:	str	r7, [sp]
   1121c:	add	r3, r3, #4
   11220:	ldr	r2, [pc, #2480]	; 11bd8 <tcgetattr@plt+0xa44>
   11224:	add	r1, r5, fp
   11228:	mov	r0, sl
   1122c:	bl	11050 <getopt_long@plt>
   11230:	cmn	r0, #1
   11234:	beq	11358 <tcgetattr@plt+0x1c4>
   11238:	cmp	r0, #70	; 0x46
   1123c:	beq	11344 <tcgetattr@plt+0x1b0>
   11240:	bgt	1125c <tcgetattr@plt+0xc8>
   11244:	cmn	r0, #3
   11248:	beq	11304 <tcgetattr@plt+0x170>
   1124c:	cmn	r0, #2
   11250:	bne	112b4 <tcgetattr@plt+0x120>
   11254:	mov	r0, r7
   11258:	bl	12464 <tcgetattr@plt+0x12d0>
   1125c:	cmp	r0, #97	; 0x61
   11260:	beq	11334 <tcgetattr@plt+0x1a0>
   11264:	cmp	r0, #103	; 0x67
   11268:	bne	112b4 <tcgetattr@plt+0x120>
   1126c:	mov	r3, #1
   11270:	str	r3, [sp, #24]
   11274:	mov	r3, #2
   11278:	str	r3, [sp, #16]
   1127c:	ldr	r3, [pc, #2392]	; 11bdc <tcgetattr@plt+0xa48>
   11280:	ldr	r0, [r3]
   11284:	cmp	r4, r0
   11288:	bge	11210 <tcgetattr@plt+0x7c>
   1128c:	add	r3, r8, r4
   11290:	add	r2, r0, r8
   11294:	add	r3, r5, r3, lsl #2
   11298:	add	r2, r5, r2, lsl #2
   1129c:	mov	r1, #0
   112a0:	str	r1, [r3], #4
   112a4:	cmp	r3, r2
   112a8:	bne	112a0 <tcgetattr@plt+0x10c>
   112ac:	mov	r4, r0
   112b0:	b	11210 <tcgetattr@plt+0x7c>
   112b4:	add	r8, r8, r4
   112b8:	ldr	r1, [pc, #2336]	; 11be0 <tcgetattr@plt+0xa4c>
   112bc:	ldr	r4, [r5, r8, lsl #2]
   112c0:	mov	r0, r4
   112c4:	bl	10edc <strcmp@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	112e4 <tcgetattr@plt+0x150>
   112d0:	mov	r0, r4
   112d4:	ldr	r1, [pc, #2312]	; 11be4 <tcgetattr@plt+0xa50>
   112d8:	bl	10edc <strcmp@plt>
   112dc:	cmp	r0, #0
   112e0:	movne	r9, #0
   112e4:	ldr	r2, [pc, #2288]	; 11bdc <tcgetattr@plt+0xa48>
   112e8:	mov	r3, #0
   112ec:	mov	r4, #1
   112f0:	str	r3, [r2]
   112f4:	ldr	r3, [sp, #28]
   112f8:	lsl	fp, r8, #2
   112fc:	sub	sl, r3, r8
   11300:	b	11210 <tcgetattr@plt+0x7c>
   11304:	ldr	r1, [pc, #2268]	; 11be8 <tcgetattr@plt+0xa54>
   11308:	ldr	r3, [pc, #2268]	; 11bec <tcgetattr@plt+0xa58>
   1130c:	ldr	r2, [pc, #2268]	; 11bf0 <tcgetattr@plt+0xa5c>
   11310:	str	r7, [sp, #4]
   11314:	ldr	r0, [r1]
   11318:	ldr	r3, [r3]
   1131c:	ldr	r1, [pc, #2256]	; 11bf4 <tcgetattr@plt+0xa60>
   11320:	str	r2, [sp]
   11324:	ldr	r2, [pc, #2252]	; 11bf8 <tcgetattr@plt+0xa64>
   11328:	bl	165cc <tcgetattr@plt+0x5438>
   1132c:	mov	r0, r7
   11330:	bl	11068 <exit@plt>
   11334:	mov	r3, #1
   11338:	str	r3, [sp, #20]
   1133c:	str	r3, [sp, #16]
   11340:	b	1127c <tcgetattr@plt+0xe8>
   11344:	cmp	r6, #0
   11348:	bne	11b9c <tcgetattr@plt+0xa08>
   1134c:	ldr	r3, [pc, #2216]	; 11bfc <tcgetattr@plt+0xa68>
   11350:	ldr	r6, [r3]
   11354:	b	1127c <tcgetattr@plt+0xe8>
   11358:	ldr	r3, [sp, #20]
   1135c:	ldr	r2, [sp, #24]
   11360:	ands	r4, r3, r2
   11364:	bne	11b7c <tcgetattr@plt+0x9e8>
   11368:	cmp	r9, #0
   1136c:	bne	113a0 <tcgetattr@plt+0x20c>
   11370:	ldr	r3, [sp, #20]
   11374:	ldr	r2, [sp, #24]
   11378:	orrs	r3, r3, r2
   1137c:	beq	113a0 <tcgetattr@plt+0x20c>
   11380:	mov	r2, #5
   11384:	ldr	r1, [pc, #2164]	; 11c00 <tcgetattr@plt+0xa6c>
   11388:	mov	r0, r9
   1138c:	bl	10f54 <dcgettext@plt>
   11390:	mov	r1, r9
   11394:	mov	r2, r0
   11398:	mov	r0, #1
   1139c:	bl	10ffc <error@plt>
   113a0:	cmp	r6, #0
   113a4:	beq	11478 <tcgetattr@plt+0x2e4>
   113a8:	ldr	r3, [sp, #24]
   113ac:	orr	r9, r3, r9
   113b0:	ldr	r3, [sp, #20]
   113b4:	orr	r3, r3, r9
   113b8:	tst	r3, #255	; 0xff
   113bc:	beq	11568 <tcgetattr@plt+0x3d4>
   113c0:	mov	r3, #0
   113c4:	mov	r0, r3
   113c8:	mov	r2, #2048	; 0x800
   113cc:	mov	r1, r6
   113d0:	bl	14214 <tcgetattr@plt+0x3080>
   113d4:	cmp	r0, #0
   113d8:	blt	11af4 <tcgetattr@plt+0x960>
   113dc:	mov	r1, #3
   113e0:	mov	r0, #0
   113e4:	bl	14040 <tcgetattr@plt+0x2eac>
   113e8:	cmn	r0, #1
   113ec:	beq	11ab4 <tcgetattr@plt+0x920>
   113f0:	bic	r2, r0, #2048	; 0x800
   113f4:	mov	r1, #4
   113f8:	mov	r0, #0
   113fc:	bl	14040 <tcgetattr@plt+0x2eac>
   11400:	cmp	r0, #0
   11404:	blt	11ab4 <tcgetattr@plt+0x920>
   11408:	ldr	r7, [pc, #2036]	; 11c04 <tcgetattr@plt+0xa70>
   1140c:	mov	r0, #0
   11410:	add	r8, r7, #20
   11414:	mov	r1, r8
   11418:	bl	11194 <tcgetattr@plt>
   1141c:	cmp	r0, #0
   11420:	bne	11af4 <tcgetattr@plt+0x960>
   11424:	ldr	r3, [sp, #20]
   11428:	orr	r9, r3, r9
   1142c:	ands	r9, r9, #255	; 0xff
   11430:	bne	114c0 <tcgetattr@plt+0x32c>
   11434:	add	r1, sp, #40	; 0x28
   11438:	add	ip, sp, #39	; 0x27
   1143c:	str	r8, [sp]
   11440:	ldr	r3, [sp, #28]
   11444:	strb	r9, [r1, #-2]!
   11448:	mov	r2, r5
   1144c:	str	r1, [sp, #8]
   11450:	str	ip, [sp, #4]
   11454:	mov	r1, r6
   11458:	strb	r9, [sp, #39]	; 0x27
   1145c:	bl	13090 <tcgetattr@plt+0x1efc>
   11460:	ldrb	r3, [sp, #38]	; 0x26
   11464:	cmp	r3, #0
   11468:	bne	11598 <tcgetattr@plt+0x404>
   1146c:	mov	r0, #0
   11470:	add	sp, sp, #44	; 0x2c
   11474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11478:	ldr	r3, [sp, #24]
   1147c:	mov	r0, r6
   11480:	mov	r2, #5
   11484:	ldr	r1, [pc, #1916]	; 11c08 <tcgetattr@plt+0xa74>
   11488:	orr	r9, r3, r9
   1148c:	bl	10f54 <dcgettext@plt>
   11490:	ldr	r3, [sp, #20]
   11494:	orr	r3, r3, r9
   11498:	tst	r3, #255	; 0xff
   1149c:	mov	r6, r0
   114a0:	beq	11b2c <tcgetattr@plt+0x998>
   114a4:	ldr	r1, [pc, #1888]	; 11c0c <tcgetattr@plt+0xa78>
   114a8:	mov	r0, #0
   114ac:	bl	11194 <tcgetattr@plt>
   114b0:	cmp	r0, #0
   114b4:	bne	11af4 <tcgetattr@plt+0x960>
   114b8:	ldr	r7, [pc, #1860]	; 11c04 <tcgetattr@plt+0xa70>
   114bc:	add	r8, r7, #20
   114c0:	bl	11df8 <tcgetattr@plt+0xc64>
   114c4:	ldr	r3, [sp, #16]
   114c8:	mov	r5, #0
   114cc:	cmp	r3, #1
   114d0:	str	r5, [r7]
   114d4:	str	r0, [r7, #4]
   114d8:	beq	11888 <tcgetattr@plt+0x6f4>
   114dc:	cmp	r3, #2
   114e0:	bne	11648 <tcgetattr@plt+0x4b4>
   114e4:	ldr	r2, [r7, #32]
   114e8:	ldr	r3, [r7, #28]
   114ec:	ldr	r1, [pc, #1820]	; 11c10 <tcgetattr@plt+0xa7c>
   114f0:	str	r2, [sp, #4]
   114f4:	str	r3, [sp]
   114f8:	mov	r0, #1
   114fc:	ldr	r3, [r7, #24]
   11500:	ldr	r2, [r7, #20]
   11504:	bl	110e0 <__printf_chk@plt>
   11508:	ldr	r6, [pc, #1796]	; 11c14 <tcgetattr@plt+0xa80>
   1150c:	mov	r4, r5
   11510:	mov	r5, #1
   11514:	add	r3, r8, r4
   11518:	mov	r1, r6
   1151c:	ldrb	r2, [r3, #17]
   11520:	add	r4, r4, #1
   11524:	mov	r0, r5
   11528:	bl	110e0 <__printf_chk@plt>
   1152c:	cmp	r4, #32
   11530:	bne	11514 <tcgetattr@plt+0x380>
   11534:	ldr	r3, [pc, #1708]	; 11be8 <tcgetattr@plt+0xa54>
   11538:	ldr	r0, [r3]
   1153c:	ldr	r3, [r0, #20]
   11540:	ldr	r2, [r0, #24]
   11544:	cmp	r3, r2
   11548:	addcc	r1, r3, #1
   1154c:	movcc	r2, #10
   11550:	strcc	r1, [r0, #20]
   11554:	strbcc	r2, [r3]
   11558:	bcc	1146c <tcgetattr@plt+0x2d8>
   1155c:	mov	r1, #10
   11560:	bl	11128 <__overflow@plt>
   11564:	b	1146c <tcgetattr@plt+0x2d8>
   11568:	ldr	r1, [pc, #1704]	; 11c18 <tcgetattr@plt+0xa84>
   1156c:	add	r2, sp, #38	; 0x26
   11570:	add	r3, sp, #39	; 0x27
   11574:	str	r1, [sp]
   11578:	str	r2, [sp, #8]
   1157c:	str	r3, [sp, #4]
   11580:	mov	r2, r5
   11584:	ldr	r3, [sp, #28]
   11588:	mov	r1, r6
   1158c:	mov	r0, #1
   11590:	bl	13090 <tcgetattr@plt+0x1efc>
   11594:	b	113c0 <tcgetattr@plt+0x22c>
   11598:	ldr	r3, [pc, #1660]	; 11c1c <tcgetattr@plt+0xa88>
   1159c:	mov	r2, r8
   115a0:	mov	r0, r9
   115a4:	ldr	r1, [r3]
   115a8:	bl	10fd8 <tcsetattr@plt>
   115ac:	subs	r5, r0, #0
   115b0:	bne	11af4 <tcgetattr@plt+0x960>
   115b4:	add	r1, r7, #80	; 0x50
   115b8:	bl	11194 <tcgetattr@plt>
   115bc:	cmp	r0, #0
   115c0:	bne	11af4 <tcgetattr@plt+0x960>
   115c4:	mov	r2, #60	; 0x3c
   115c8:	add	r1, r7, #80	; 0x50
   115cc:	mov	r0, r8
   115d0:	bl	10f3c <memcmp@plt>
   115d4:	cmp	r0, #0
   115d8:	beq	1146c <tcgetattr@plt+0x2d8>
   115dc:	ldr	r3, [r7, #88]	; 0x58
   115e0:	ldrb	r2, [sp, #39]	; 0x27
   115e4:	bic	r3, r3, #268435456	; 0x10000000
   115e8:	bic	r3, r3, #983040	; 0xf0000
   115ec:	cmp	r2, #0
   115f0:	str	r3, [r7, #88]	; 0x58
   115f4:	bne	11610 <tcgetattr@plt+0x47c>
   115f8:	add	r1, r7, #80	; 0x50
   115fc:	mov	r0, r8
   11600:	mov	r2, #60	; 0x3c
   11604:	bl	10f3c <memcmp@plt>
   11608:	cmp	r0, #0
   1160c:	beq	1146c <tcgetattr@plt+0x2d8>
   11610:	mov	r2, #5
   11614:	ldr	r1, [pc, #1540]	; 11c20 <tcgetattr@plt+0xa8c>
   11618:	mov	r0, #0
   1161c:	bl	10f54 <dcgettext@plt>
   11620:	mov	r2, r6
   11624:	mov	r1, #3
   11628:	mov	r4, r0
   1162c:	mov	r0, #0
   11630:	bl	1600c <tcgetattr@plt+0x4e78>
   11634:	mov	r2, r4
   11638:	mov	r1, #0
   1163c:	mov	r3, r0
   11640:	mov	r0, #1
   11644:	bl	10ffc <error@plt>
   11648:	mov	r1, #1
   1164c:	ldr	r0, [pc, #1464]	; 11c0c <tcgetattr@plt+0xa78>
   11650:	bl	11fd8 <tcgetattr@plt+0xe44>
   11654:	ldrb	r1, [r7, #36]	; 0x24
   11658:	ldr	r0, [pc, #1476]	; 11c24 <tcgetattr@plt+0xa90>
   1165c:	bl	11ed0 <tcgetattr@plt+0xd3c>
   11660:	ldr	r8, [pc, #1408]	; 11be8 <tcgetattr@plt+0xa54>
   11664:	ldr	r0, [r8]
   11668:	ldr	r3, [r0, #20]
   1166c:	ldr	r2, [r0, #24]
   11670:	cmp	r3, r2
   11674:	addcc	r1, r3, #1
   11678:	movcc	r2, #10
   1167c:	strcc	r1, [r0, #20]
   11680:	strbcc	r2, [r3]
   11684:	bcs	11ba8 <tcgetattr@plt+0xa14>
   11688:	mov	r3, #0
   1168c:	str	r3, [r7]
   11690:	mov	r3, #1
   11694:	ldr	fp, [pc, #1420]	; 11c28 <tcgetattr@plt+0xa94>
   11698:	str	r3, [sp, #16]
   1169c:	ldr	r6, [pc, #1416]	; 11c2c <tcgetattr@plt+0xa98>
   116a0:	ldr	sl, [pc, #1416]	; 11c30 <tcgetattr@plt+0xa9c>
   116a4:	b	116bc <tcgetattr@plt+0x528>
   116a8:	mov	r1, r5
   116ac:	ldr	r0, [pc, #1408]	; 11c34 <tcgetattr@plt+0xaa0>
   116b0:	bl	11ed0 <tcgetattr@plt+0xd3c>
   116b4:	str	r4, [sp, #16]
   116b8:	add	fp, fp, #12
   116bc:	ldr	r5, [fp]
   116c0:	mov	r1, r6
   116c4:	mov	r0, r5
   116c8:	bl	10edc <strcmp@plt>
   116cc:	cmp	r0, #0
   116d0:	beq	1171c <tcgetattr@plt+0x588>
   116d4:	ldr	r3, [fp, #8]
   116d8:	ldrb	r2, [fp, #4]
   116dc:	add	r3, r7, r3
   116e0:	ldrb	r9, [r3, #37]	; 0x25
   116e4:	cmp	r2, r9
   116e8:	beq	116b8 <tcgetattr@plt+0x524>
   116ec:	mov	r1, sl
   116f0:	mov	r0, r5
   116f4:	bl	10edc <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	beq	116b8 <tcgetattr@plt+0x524>
   11700:	cmp	r9, #0
   11704:	ldreq	r2, [pc, #1324]	; 11c38 <tcgetattr@plt+0xaa4>
   11708:	beq	116a8 <tcgetattr@plt+0x514>
   1170c:	mov	r0, r9
   11710:	bl	121d0 <tcgetattr@plt+0x103c>
   11714:	mov	r2, r0
   11718:	b	116a8 <tcgetattr@plt+0x514>
   1171c:	ldr	r3, [r7, #32]
   11720:	tst	r3, #2
   11724:	beq	11a74 <tcgetattr@plt+0x8e0>
   11728:	ldr	r3, [sp, #16]
   1172c:	cmp	r3, #0
   11730:	bne	11758 <tcgetattr@plt+0x5c4>
   11734:	ldr	r0, [r8]
   11738:	ldr	r3, [r0, #20]
   1173c:	ldr	r2, [r0, #24]
   11740:	cmp	r3, r2
   11744:	addcc	r1, r3, #1
   11748:	movcc	r2, #10
   1174c:	strcc	r1, [r0, #20]
   11750:	strbcc	r2, [r3]
   11754:	bcs	11bb4 <tcgetattr@plt+0xa20>
   11758:	mov	r6, #0
   1175c:	str	r6, [r7]
   11760:	ldr	r5, [pc, #1236]	; 11c3c <tcgetattr@plt+0xaa8>
   11764:	mov	sl, #1
   11768:	ldr	r9, [pc, #1180]	; 11c0c <tcgetattr@plt+0xa78>
   1176c:	ldr	fp, [pc, #1228]	; 11c40 <tcgetattr@plt+0xaac>
   11770:	b	11784 <tcgetattr@plt+0x5f0>
   11774:	and	r3, r3, #5
   11778:	cmp	r3, #5
   1177c:	beq	11874 <tcgetattr@plt+0x6e0>
   11780:	add	r5, r5, #20
   11784:	ldr	r3, [r5]
   11788:	cmp	r3, #0
   1178c:	beq	1183c <tcgetattr@plt+0x6a8>
   11790:	ldrb	r3, [r5, #8]
   11794:	tst	r3, #8
   11798:	bne	11780 <tcgetattr@plt+0x5ec>
   1179c:	ldr	r3, [r5, #4]
   117a0:	cmp	r3, r6
   117a4:	beq	117e8 <tcgetattr@plt+0x654>
   117a8:	cmp	sl, #0
   117ac:	bne	117e0 <tcgetattr@plt+0x64c>
   117b0:	ldr	r0, [r8]
   117b4:	ldr	r3, [r0, #20]
   117b8:	ldr	r2, [r0, #24]
   117bc:	cmp	r3, r2
   117c0:	addcc	r1, r3, #1
   117c4:	movcc	r2, #10
   117c8:	strcc	r1, [r0, #20]
   117cc:	strbcc	r2, [r3]
   117d0:	bcs	11a88 <tcgetattr@plt+0x8f4>
   117d4:	ldr	r3, [r5, #4]
   117d8:	mov	r2, #0
   117dc:	str	r2, [r7]
   117e0:	mov	r6, r3
   117e4:	mov	sl, #1
   117e8:	mov	r1, r9
   117ec:	ldr	r0, [r5, #4]
   117f0:	bl	11e80 <tcgetattr@plt+0xcec>
   117f4:	ldr	r3, [r5, #16]
   117f8:	cmp	r3, #0
   117fc:	ldreq	r3, [r5, #12]
   11800:	cmp	r0, #0
   11804:	beq	11b68 <tcgetattr@plt+0x9d4>
   11808:	ldr	r1, [r0]
   1180c:	ldr	r2, [r5, #12]
   11810:	and	r3, r3, r1
   11814:	cmp	r3, r2
   11818:	ldrb	r3, [r5, #8]
   1181c:	bne	11774 <tcgetattr@plt+0x5e0>
   11820:	tst	r3, #2
   11824:	beq	11780 <tcgetattr@plt+0x5ec>
   11828:	ldr	r1, [r5]
   1182c:	ldr	r0, [pc, #1040]	; 11c44 <tcgetattr@plt+0xab0>
   11830:	bl	11ed0 <tcgetattr@plt+0xd3c>
   11834:	mov	sl, r4
   11838:	b	11780 <tcgetattr@plt+0x5ec>
   1183c:	cmp	sl, #0
   11840:	bne	11868 <tcgetattr@plt+0x6d4>
   11844:	ldr	r0, [r8]
   11848:	ldr	r3, [r0, #20]
   1184c:	ldr	r2, [r0, #24]
   11850:	cmp	r3, r2
   11854:	addcc	r1, r3, #1
   11858:	movcc	r2, #10
   1185c:	strcc	r1, [r0, #20]
   11860:	strbcc	r2, [r3]
   11864:	bcs	11b5c <tcgetattr@plt+0x9c8>
   11868:	mov	r3, #0
   1186c:	str	r3, [r7]
   11870:	b	1146c <tcgetattr@plt+0x2d8>
   11874:	ldr	r1, [r5]
   11878:	mov	r0, fp
   1187c:	bl	11ed0 <tcgetattr@plt+0xd3c>
   11880:	mov	sl, r4
   11884:	b	11780 <tcgetattr@plt+0x5ec>
   11888:	ldr	r4, [sp, #16]
   1188c:	ldr	r0, [pc, #888]	; 11c0c <tcgetattr@plt+0xa78>
   11890:	mov	r1, r4
   11894:	bl	11fd8 <tcgetattr@plt+0xe44>
   11898:	mov	r1, r6
   1189c:	mov	r0, r4
   118a0:	bl	12370 <tcgetattr@plt+0x11dc>
   118a4:	ldrb	r1, [r7, #36]	; 0x24
   118a8:	ldr	r0, [pc, #884]	; 11c24 <tcgetattr@plt+0xa90>
   118ac:	bl	11ed0 <tcgetattr@plt+0xd3c>
   118b0:	ldr	r8, [pc, #816]	; 11be8 <tcgetattr@plt+0xa54>
   118b4:	ldr	r0, [r8]
   118b8:	ldr	r3, [r0, #20]
   118bc:	ldr	r2, [r0, #24]
   118c0:	cmp	r3, r2
   118c4:	addcc	r1, r3, #1
   118c8:	movcc	r2, #10
   118cc:	strcc	r1, [r0, #20]
   118d0:	strbcc	r2, [r3]
   118d4:	bcs	11b20 <tcgetattr@plt+0x98c>
   118d8:	mov	r4, #0
   118dc:	str	r4, [r7]
   118e0:	ldr	r6, [pc, #832]	; 11c28 <tcgetattr@plt+0xa94>
   118e4:	ldr	r9, [pc, #832]	; 11c2c <tcgetattr@plt+0xa98>
   118e8:	ldr	sl, [pc, #840]	; 11c38 <tcgetattr@plt+0xaa4>
   118ec:	b	11900 <tcgetattr@plt+0x76c>
   118f0:	mov	r1, r5
   118f4:	ldr	r0, [pc, #824]	; 11c34 <tcgetattr@plt+0xaa0>
   118f8:	bl	11ed0 <tcgetattr@plt+0xd3c>
   118fc:	add	r4, r4, #12
   11900:	ldr	r5, [r4, r6]
   11904:	mov	r1, r9
   11908:	mov	r0, r5
   1190c:	bl	10edc <strcmp@plt>
   11910:	cmp	r0, #0
   11914:	beq	11954 <tcgetattr@plt+0x7c0>
   11918:	ldr	r1, [pc, #784]	; 11c30 <tcgetattr@plt+0xa9c>
   1191c:	mov	r0, r5
   11920:	bl	10edc <strcmp@plt>
   11924:	cmp	r0, #0
   11928:	beq	118fc <tcgetattr@plt+0x768>
   1192c:	add	r3, r6, r4
   11930:	ldr	r3, [r3, #8]
   11934:	add	r3, r7, r3
   11938:	ldrb	r0, [r3, #37]	; 0x25
   1193c:	cmp	r0, #0
   11940:	moveq	r2, sl
   11944:	beq	118f0 <tcgetattr@plt+0x75c>
   11948:	bl	121d0 <tcgetattr@plt+0x103c>
   1194c:	mov	r2, r0
   11950:	b	118f0 <tcgetattr@plt+0x75c>
   11954:	ldrb	r2, [r7, #42]	; 0x2a
   11958:	ldrb	r1, [r7, #43]	; 0x2b
   1195c:	ldr	r0, [pc, #740]	; 11c48 <tcgetattr@plt+0xab4>
   11960:	bl	11ed0 <tcgetattr@plt+0xd3c>
   11964:	ldr	r3, [r7]
   11968:	cmp	r3, #0
   1196c:	beq	11994 <tcgetattr@plt+0x800>
   11970:	ldr	r0, [r8]
   11974:	ldr	r3, [r0, #20]
   11978:	ldr	r2, [r0, #24]
   1197c:	cmp	r3, r2
   11980:	addcc	r1, r3, #1
   11984:	movcc	r2, #10
   11988:	strcc	r1, [r0, #20]
   1198c:	strbcc	r2, [r3]
   11990:	bcs	11aa8 <tcgetattr@plt+0x914>
   11994:	mov	r5, #0
   11998:	str	r5, [r7]
   1199c:	ldr	r4, [pc, #664]	; 11c3c <tcgetattr@plt+0xaa8>
   119a0:	ldr	r6, [pc, #612]	; 11c0c <tcgetattr@plt+0xa78>
   119a4:	ldr	sl, [pc, #660]	; 11c40 <tcgetattr@plt+0xaac>
   119a8:	ldr	r9, [pc, #660]	; 11c44 <tcgetattr@plt+0xab0>
   119ac:	b	119b4 <tcgetattr@plt+0x820>
   119b0:	add	r4, r4, #20
   119b4:	ldr	r3, [r4]
   119b8:	cmp	r3, #0
   119bc:	beq	11844 <tcgetattr@plt+0x6b0>
   119c0:	ldrb	r3, [r4, #8]
   119c4:	tst	r3, #8
   119c8:	bne	119b0 <tcgetattr@plt+0x81c>
   119cc:	ldr	fp, [r4, #4]
   119d0:	cmp	fp, r5
   119d4:	beq	11a08 <tcgetattr@plt+0x874>
   119d8:	ldr	r0, [r8]
   119dc:	ldr	r3, [r0, #20]
   119e0:	ldr	r2, [r0, #24]
   119e4:	cmp	r3, r2
   119e8:	addcc	r1, r3, #1
   119ec:	movcc	r2, #10
   119f0:	strcc	r1, [r0, #20]
   119f4:	strbcc	r2, [r3]
   119f8:	bcs	11a68 <tcgetattr@plt+0x8d4>
   119fc:	mov	r5, fp
   11a00:	mov	r3, #0
   11a04:	str	r3, [r7]
   11a08:	mov	r1, r6
   11a0c:	ldr	r0, [r4, #4]
   11a10:	bl	11e80 <tcgetattr@plt+0xcec>
   11a14:	ldr	r3, [r4, #16]
   11a18:	cmp	r3, #0
   11a1c:	ldreq	r3, [r4, #12]
   11a20:	cmp	r0, #0
   11a24:	beq	11a94 <tcgetattr@plt+0x900>
   11a28:	ldr	r1, [r0]
   11a2c:	ldr	r2, [r4, #12]
   11a30:	and	r3, r3, r1
   11a34:	cmp	r3, r2
   11a38:	beq	11a58 <tcgetattr@plt+0x8c4>
   11a3c:	ldrb	r3, [r4, #8]
   11a40:	tst	r3, #4
   11a44:	beq	119b0 <tcgetattr@plt+0x81c>
   11a48:	ldr	r1, [r4]
   11a4c:	mov	r0, sl
   11a50:	bl	11ed0 <tcgetattr@plt+0xd3c>
   11a54:	b	119b0 <tcgetattr@plt+0x81c>
   11a58:	ldr	r1, [r4]
   11a5c:	mov	r0, r9
   11a60:	bl	11ed0 <tcgetattr@plt+0xd3c>
   11a64:	b	119b0 <tcgetattr@plt+0x81c>
   11a68:	mov	r1, #10
   11a6c:	bl	11128 <__overflow@plt>
   11a70:	b	119fc <tcgetattr@plt+0x868>
   11a74:	ldrb	r2, [r7, #42]	; 0x2a
   11a78:	ldrb	r1, [r7, #43]	; 0x2b
   11a7c:	ldr	r0, [pc, #456]	; 11c4c <tcgetattr@plt+0xab8>
   11a80:	bl	11ed0 <tcgetattr@plt+0xd3c>
   11a84:	b	11758 <tcgetattr@plt+0x5c4>
   11a88:	mov	r1, #10
   11a8c:	bl	11128 <__overflow@plt>
   11a90:	b	117d4 <tcgetattr@plt+0x640>
   11a94:	ldr	r3, [pc, #436]	; 11c50 <tcgetattr@plt+0xabc>
   11a98:	ldr	r2, [pc, #436]	; 11c54 <tcgetattr@plt+0xac0>
   11a9c:	ldr	r1, [pc, #436]	; 11c58 <tcgetattr@plt+0xac4>
   11aa0:	ldr	r0, [pc, #436]	; 11c5c <tcgetattr@plt+0xac8>
   11aa4:	bl	11188 <__assert_fail@plt>
   11aa8:	mov	r1, #10
   11aac:	bl	11128 <__overflow@plt>
   11ab0:	b	11994 <tcgetattr@plt+0x800>
   11ab4:	bl	110b0 <__errno_location@plt>
   11ab8:	mov	r2, #5
   11abc:	ldr	r1, [pc, #412]	; 11c60 <tcgetattr@plt+0xacc>
   11ac0:	ldr	r4, [r0]
   11ac4:	mov	r0, #0
   11ac8:	bl	10f54 <dcgettext@plt>
   11acc:	mov	r2, r6
   11ad0:	mov	r1, #3
   11ad4:	mov	r5, r0
   11ad8:	mov	r0, #0
   11adc:	bl	1600c <tcgetattr@plt+0x4e78>
   11ae0:	mov	r2, r5
   11ae4:	mov	r1, r4
   11ae8:	mov	r3, r0
   11aec:	mov	r0, #1
   11af0:	bl	10ffc <error@plt>
   11af4:	bl	110b0 <__errno_location@plt>
   11af8:	mov	r2, r6
   11afc:	mov	r1, #3
   11b00:	ldr	r4, [r0]
   11b04:	mov	r0, #0
   11b08:	bl	1600c <tcgetattr@plt+0x4e78>
   11b0c:	mov	r1, r4
   11b10:	ldr	r2, [pc, #300]	; 11c44 <tcgetattr@plt+0xab0>
   11b14:	mov	r3, r0
   11b18:	mov	r0, #1
   11b1c:	bl	10ffc <error@plt>
   11b20:	mov	r1, #10
   11b24:	bl	11128 <__overflow@plt>
   11b28:	b	118d8 <tcgetattr@plt+0x744>
   11b2c:	ldr	r1, [pc, #228]	; 11c18 <tcgetattr@plt+0xa84>
   11b30:	add	r2, sp, #38	; 0x26
   11b34:	add	r3, sp, #39	; 0x27
   11b38:	str	r1, [sp]
   11b3c:	str	r2, [sp, #8]
   11b40:	str	r3, [sp, #4]
   11b44:	mov	r1, r0
   11b48:	ldr	r3, [sp, #28]
   11b4c:	mov	r2, r5
   11b50:	mov	r0, #1
   11b54:	bl	13090 <tcgetattr@plt+0x1efc>
   11b58:	b	11408 <tcgetattr@plt+0x274>
   11b5c:	mov	r1, #10
   11b60:	bl	11128 <__overflow@plt>
   11b64:	b	11868 <tcgetattr@plt+0x6d4>
   11b68:	ldr	r3, [pc, #244]	; 11c64 <tcgetattr@plt+0xad0>
   11b6c:	ldr	r2, [pc, #244]	; 11c68 <tcgetattr@plt+0xad4>
   11b70:	ldr	r1, [pc, #224]	; 11c58 <tcgetattr@plt+0xac4>
   11b74:	ldr	r0, [pc, #224]	; 11c5c <tcgetattr@plt+0xac8>
   11b78:	bl	11188 <__assert_fail@plt>
   11b7c:	ldr	r1, [pc, #232]	; 11c6c <tcgetattr@plt+0xad8>
   11b80:	mov	r2, #5
   11b84:	mov	r0, r7
   11b88:	bl	10f54 <dcgettext@plt>
   11b8c:	mov	r1, r7
   11b90:	mov	r2, r0
   11b94:	mov	r0, #1
   11b98:	bl	10ffc <error@plt>
   11b9c:	mov	r2, #5
   11ba0:	ldr	r1, [pc, #200]	; 11c70 <tcgetattr@plt+0xadc>
   11ba4:	b	11b84 <tcgetattr@plt+0x9f0>
   11ba8:	mov	r1, #10
   11bac:	bl	11128 <__overflow@plt>
   11bb0:	b	11688 <tcgetattr@plt+0x4f4>
   11bb4:	mov	r1, #10
   11bb8:	bl	11128 <__overflow@plt>
   11bbc:	b	11758 <tcgetattr@plt+0x5c4>
   11bc0:	andeq	sl, r1, ip, asr #6
   11bc4:	andeq	fp, r1, r8, asr #2
   11bc8:	andeq	sl, r1, ip, asr pc
   11bcc:	andeq	r3, r1, ip, asr pc
   11bd0:	andeq	ip, r2, r8, ror r1
   11bd4:	andeq	r8, r1, r8, lsr lr
   11bd8:	muleq	r1, ip, r1
   11bdc:	andeq	ip, r2, r8, ror #2
   11be0:	muleq	r1, r4, r1
   11be4:	andeq	fp, r1, r4, lsl r0
   11be8:	andeq	ip, r2, r4, ror r1
   11bec:	andeq	ip, r2, r4, lsl r1
   11bf0:	andeq	fp, r1, r4, lsl #3
   11bf4:	andeq	r8, r1, ip, ror #30
   11bf8:	andeq	sl, r1, r8, asr pc
   11bfc:	andeq	ip, r2, r0, lsl #3
   11c00:	strdeq	fp, [r1], -r4
   11c04:	andeq	ip, r2, r8, lsl #3
   11c08:	andeq	fp, r1, ip, lsr #4
   11c0c:	muleq	r2, ip, r1
   11c10:			; <UNDEFINED> instruction: 0x0001b2b8
   11c14:	andeq	fp, r1, r8, asr #5
   11c18:	andeq	ip, r2, r4, lsl r2
   11c1c:	andeq	ip, r2, r0, lsl r1
   11c20:	ldrdeq	fp, [r1], -r0
   11c24:	andeq	fp, r1, r4, ror #4
   11c28:	andeq	r8, r1, ip, asr #26
   11c2c:	andeq	fp, r1, r4, asr #1
   11c30:	andeq	fp, r1, r0, ror r2
   11c34:	andeq	fp, r1, r8, ror r2
   11c38:	andeq	fp, r1, r0, asr #2
   11c3c:	andeq	r8, r1, r4, asr #12
   11c40:	muleq	r1, ip, r2
   11c44:	strdeq	fp, [r1], -r0
   11c48:	andeq	fp, r1, r0, lsr #5
   11c4c:	andeq	fp, r1, r4, lsl #5
   11c50:	andeq	r8, r1, ip, lsr #29
   11c54:	strdeq	r0, [r0], -r5
   11c58:	andeq	fp, r1, r8, lsr r0
   11c5c:	andeq	fp, r1, r4, asr #32
   11c60:	andeq	fp, r1, ip, lsr r2
   11c64:	muleq	r1, ip, lr
   11c68:	andeq	r0, r0, r1, lsr #15
   11c6c:	andeq	fp, r1, r4, lsr #3
   11c70:	andeq	fp, r1, r0, ror #2
   11c74:	mov	fp, #0
   11c78:	mov	lr, #0
   11c7c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c80:	mov	r2, sp
   11c84:	push	{r2}		; (str r2, [sp, #-4]!)
   11c88:	push	{r0}		; (str r0, [sp, #-4]!)
   11c8c:	ldr	ip, [pc, #16]	; 11ca4 <tcgetattr@plt+0xb10>
   11c90:	push	{ip}		; (str ip, [sp, #-4]!)
   11c94:	ldr	r0, [pc, #12]	; 11ca8 <tcgetattr@plt+0xb14>
   11c98:	ldr	r3, [pc, #12]	; 11cac <tcgetattr@plt+0xb18>
   11c9c:	bl	1102c <__libc_start_main@plt>
   11ca0:	bl	11170 <abort@plt>
   11ca4:	andeq	r8, r1, r0, asr #8
   11ca8:	andeq	r1, r1, r0, lsr #3
   11cac:	andeq	r8, r1, r0, ror #7
   11cb0:	ldr	r3, [pc, #20]	; 11ccc <tcgetattr@plt+0xb38>
   11cb4:	ldr	r2, [pc, #20]	; 11cd0 <tcgetattr@plt+0xb3c>
   11cb8:	add	r3, pc, r3
   11cbc:	ldr	r2, [r3, r2]
   11cc0:	cmp	r2, #0
   11cc4:	bxeq	lr
   11cc8:	b	11044 <__gmon_start__@plt>
   11ccc:	andeq	sl, r1, r0, asr #6
   11cd0:	andeq	r0, r0, r4, lsl #2
   11cd4:	ldr	r3, [pc, #28]	; 11cf8 <tcgetattr@plt+0xb64>
   11cd8:	ldr	r0, [pc, #28]	; 11cfc <tcgetattr@plt+0xb68>
   11cdc:	sub	r3, r3, r0
   11ce0:	cmp	r3, #6
   11ce4:	bxls	lr
   11ce8:	ldr	r3, [pc, #16]	; 11d00 <tcgetattr@plt+0xb6c>
   11cec:	cmp	r3, #0
   11cf0:	bxeq	lr
   11cf4:	bx	r3
   11cf8:	andeq	ip, r2, pc, asr r1
   11cfc:	andeq	ip, r2, ip, asr r1
   11d00:	andeq	r0, r0, r0
   11d04:	ldr	r1, [pc, #36]	; 11d30 <tcgetattr@plt+0xb9c>
   11d08:	ldr	r0, [pc, #36]	; 11d34 <tcgetattr@plt+0xba0>
   11d0c:	sub	r1, r1, r0
   11d10:	asr	r1, r1, #2
   11d14:	add	r1, r1, r1, lsr #31
   11d18:	asrs	r1, r1, #1
   11d1c:	bxeq	lr
   11d20:	ldr	r3, [pc, #16]	; 11d38 <tcgetattr@plt+0xba4>
   11d24:	cmp	r3, #0
   11d28:	bxeq	lr
   11d2c:	bx	r3
   11d30:	andeq	ip, r2, ip, asr r1
   11d34:	andeq	ip, r2, ip, asr r1
   11d38:	andeq	r0, r0, r0
   11d3c:	push	{r4, lr}
   11d40:	ldr	r4, [pc, #24]	; 11d60 <tcgetattr@plt+0xbcc>
   11d44:	ldrb	r3, [r4]
   11d48:	cmp	r3, #0
   11d4c:	popne	{r4, pc}
   11d50:	bl	11cd4 <tcgetattr@plt+0xb40>
   11d54:	mov	r3, #1
   11d58:	strb	r3, [r4]
   11d5c:	pop	{r4, pc}
   11d60:	andeq	ip, r2, r4, lsl #3
   11d64:	ldr	r0, [pc, #40]	; 11d94 <tcgetattr@plt+0xc00>
   11d68:	ldr	r3, [r0]
   11d6c:	cmp	r3, #0
   11d70:	bne	11d78 <tcgetattr@plt+0xbe4>
   11d74:	b	11d04 <tcgetattr@plt+0xb70>
   11d78:	ldr	r3, [pc, #24]	; 11d98 <tcgetattr@plt+0xc04>
   11d7c:	cmp	r3, #0
   11d80:	beq	11d74 <tcgetattr@plt+0xbe0>
   11d84:	push	{r4, lr}
   11d88:	blx	r3
   11d8c:	pop	{r4, lr}
   11d90:	b	11d04 <tcgetattr@plt+0xb70>
   11d94:	andeq	fp, r2, r4, lsl pc
   11d98:	andeq	r0, r0, r0
   11d9c:	push	{r4, r5, r6, r7, r8, lr}
   11da0:	mov	r6, r0
   11da4:	ldr	r7, [pc, #68]	; 11df0 <tcgetattr@plt+0xc5c>
   11da8:	ldr	r1, [pc, #68]	; 11df4 <tcgetattr@plt+0xc60>
   11dac:	mov	r5, r7
   11db0:	mov	r4, #0
   11db4:	b	11dc8 <tcgetattr@plt+0xc34>
   11db8:	ldr	r1, [r5, #12]!
   11dbc:	add	r4, r4, #1
   11dc0:	cmp	r1, #0
   11dc4:	beq	11de8 <tcgetattr@plt+0xc54>
   11dc8:	mov	r0, r6
   11dcc:	bl	10edc <strcmp@plt>
   11dd0:	cmp	r0, #0
   11dd4:	bne	11db8 <tcgetattr@plt+0xc24>
   11dd8:	add	r4, r4, r4, lsl #1
   11ddc:	add	r4, r7, r4, lsl #2
   11de0:	ldr	r0, [r4, #4]
   11de4:	pop	{r4, r5, r6, r7, r8, pc}
   11de8:	mvn	r0, #0
   11dec:	pop	{r4, r5, r6, r7, r8, pc}
   11df0:	andeq	r8, r1, r8, ror #8
   11df4:			; <UNDEFINED> instruction: 0x0001b3bc
   11df8:	push	{lr}		; (str lr, [sp, #-4]!)
   11dfc:	sub	sp, sp, #28
   11e00:	add	r2, sp, #16
   11e04:	ldr	r1, [pc, #104]	; 11e74 <tcgetattr@plt+0xce0>
   11e08:	mov	r0, #1
   11e0c:	bl	10fb4 <ioctl@plt>
   11e10:	cmp	r0, #0
   11e14:	bne	11e24 <tcgetattr@plt+0xc90>
   11e18:	ldrh	r0, [sp, #18]
   11e1c:	cmp	r0, #0
   11e20:	bne	11e58 <tcgetattr@plt+0xcc4>
   11e24:	ldr	r0, [pc, #76]	; 11e78 <tcgetattr@plt+0xce4>
   11e28:	bl	11014 <getenv@plt>
   11e2c:	cmp	r0, #0
   11e30:	beq	11e54 <tcgetattr@plt+0xcc0>
   11e34:	ldr	r3, [pc, #64]	; 11e7c <tcgetattr@plt+0xce8>
   11e38:	mov	r2, #0
   11e3c:	str	r3, [sp]
   11e40:	mov	r1, r2
   11e44:	add	r3, sp, #12
   11e48:	bl	16e54 <tcgetattr@plt+0x5cc0>
   11e4c:	cmp	r0, #0
   11e50:	beq	11e60 <tcgetattr@plt+0xccc>
   11e54:	mov	r0, #80	; 0x50
   11e58:	add	sp, sp, #28
   11e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e60:	ldr	r0, [sp, #12]
   11e64:	cmp	r0, #0
   11e68:	ble	11e54 <tcgetattr@plt+0xcc0>
   11e6c:	add	sp, sp, #28
   11e70:	pop	{pc}		; (ldr pc, [sp], #4)
   11e74:	andeq	r5, r0, r3, lsl r4
   11e78:			; <UNDEFINED> instruction: 0x00018eb8
   11e7c:	andeq	sl, r1, ip, asr #6
   11e80:	cmp	r0, #4
   11e84:	ldrls	pc, [pc, r0, lsl #2]
   11e88:	b	11ec8 <tcgetattr@plt+0xd34>
   11e8c:			; <UNDEFINED> instruction: 0x00011eb0
   11e90:			; <UNDEFINED> instruction: 0x00011eb8
   11e94:	andeq	r1, r1, r0, asr #29
   11e98:	andeq	r1, r1, r8, lsr #29
   11e9c:	andeq	r1, r1, r0, lsr #29
   11ea0:	mov	r0, #0
   11ea4:	bx	lr
   11ea8:	add	r0, r1, #12
   11eac:	bx	lr
   11eb0:	add	r0, r1, #8
   11eb4:	bx	lr
   11eb8:	mov	r0, r1
   11ebc:	bx	lr
   11ec0:	add	r0, r1, #4
   11ec4:	bx	lr
   11ec8:	push	{r4, lr}
   11ecc:	bl	11170 <abort@plt>
   11ed0:	push	{r0, r1, r2, r3}
   11ed4:	mov	r1, #1
   11ed8:	push	{r4, r5, r6, lr}
   11edc:	sub	sp, sp, #8
   11ee0:	add	ip, sp, #28
   11ee4:	mov	r3, ip
   11ee8:	ldr	r2, [sp, #24]
   11eec:	add	r0, sp, #4
   11ef0:	str	ip, [sp]
   11ef4:	bl	110c8 <__vasprintf_chk@plt>
   11ef8:	subs	r5, r0, #0
   11efc:	blt	11fcc <tcgetattr@plt+0xe38>
   11f00:	ldr	r4, [pc, #200]	; 11fd0 <tcgetattr@plt+0xe3c>
   11f04:	ldr	r3, [r4]
   11f08:	cmp	r3, #0
   11f0c:	ldrle	r6, [pc, #192]	; 11fd4 <tcgetattr@plt+0xe40>
   11f10:	ble	11f54 <tcgetattr@plt+0xdc0>
   11f14:	ldr	r2, [r4, #4]
   11f18:	ldr	r6, [pc, #180]	; 11fd4 <tcgetattr@plt+0xe40>
   11f1c:	sub	r2, r2, r3
   11f20:	cmp	r2, r5
   11f24:	ldr	r0, [r6]
   11f28:	bge	11f84 <tcgetattr@plt+0xdf0>
   11f2c:	ldr	r3, [r0, #20]
   11f30:	ldr	r2, [r0, #24]
   11f34:	cmp	r3, r2
   11f38:	addcc	r1, r3, #1
   11f3c:	movcc	r2, #10
   11f40:	strcc	r1, [r0, #20]
   11f44:	strbcc	r2, [r3]
   11f48:	bcs	11fc0 <tcgetattr@plt+0xe2c>
   11f4c:	mov	r3, #0
   11f50:	str	r3, [r4]
   11f54:	ldr	r1, [r6]
   11f58:	ldr	r0, [sp, #4]
   11f5c:	bl	10ec4 <fputs_unlocked@plt>
   11f60:	ldr	r0, [sp, #4]
   11f64:	bl	14278 <tcgetattr@plt+0x30e4>
   11f68:	ldr	r0, [r4]
   11f6c:	add	r0, r0, r5
   11f70:	str	r0, [r4]
   11f74:	add	sp, sp, #8
   11f78:	pop	{r4, r5, r6, lr}
   11f7c:	add	sp, sp, #16
   11f80:	bx	lr
   11f84:	ldr	r2, [r0, #20]
   11f88:	ldr	r1, [r0, #24]
   11f8c:	cmp	r2, r1
   11f90:	addcc	ip, r2, #1
   11f94:	movcc	r1, #32
   11f98:	strcc	ip, [r0, #20]
   11f9c:	strbcc	r1, [r2]
   11fa0:	bcs	11fb0 <tcgetattr@plt+0xe1c>
   11fa4:	add	r3, r3, #1
   11fa8:	str	r3, [r4]
   11fac:	b	11f54 <tcgetattr@plt+0xdc0>
   11fb0:	mov	r1, #32
   11fb4:	bl	11128 <__overflow@plt>
   11fb8:	ldr	r3, [r4]
   11fbc:	b	11fa4 <tcgetattr@plt+0xe10>
   11fc0:	mov	r1, #10
   11fc4:	bl	11128 <__overflow@plt>
   11fc8:	b	11f4c <tcgetattr@plt+0xdb8>
   11fcc:	bl	16c10 <tcgetattr@plt+0x5a7c>
   11fd0:	andeq	ip, r2, r8, lsl #3
   11fd4:	andeq	ip, r2, r4, ror r1
   11fd8:	push	{r4, r5, r6, r7, r8, lr}
   11fdc:	mov	r4, r1
   11fe0:	mov	r8, r0
   11fe4:	bl	10f60 <cfgetispeed@plt>
   11fe8:	cmp	r0, #0
   11fec:	bne	12074 <tcgetattr@plt+0xee0>
   11ff0:	ldr	r3, [pc, #352]	; 12158 <tcgetattr@plt+0xfc4>
   11ff4:	cmp	r4, #0
   11ff8:	mov	r0, r8
   11ffc:	ldr	r6, [pc, #344]	; 1215c <tcgetattr@plt+0xfc8>
   12000:	movne	r6, r3
   12004:	bl	110a4 <cfgetospeed@plt>
   12008:	cmp	r0, #0
   1200c:	beq	1205c <tcgetattr@plt+0xec8>
   12010:	ldr	r5, [pc, #328]	; 12160 <tcgetattr@plt+0xfcc>
   12014:	ldr	r1, [pc, #328]	; 12164 <tcgetattr@plt+0xfd0>
   12018:	mov	r3, r5
   1201c:	mov	r2, #0
   12020:	b	12034 <tcgetattr@plt+0xea0>
   12024:	ldr	r1, [r3, #4]
   12028:	cmp	r0, r1
   1202c:	beq	12064 <tcgetattr@plt+0xed0>
   12030:	ldr	r1, [r3, #12]
   12034:	cmp	r1, #0
   12038:	add	r3, r3, #12
   1203c:	add	r2, r2, #1
   12040:	bne	12024 <tcgetattr@plt+0xe90>
   12044:	mov	r0, r6
   12048:	bl	11ed0 <tcgetattr@plt+0xd3c>
   1204c:	cmp	r4, #0
   12050:	ldreq	r3, [pc, #272]	; 12168 <tcgetattr@plt+0xfd4>
   12054:	streq	r4, [r3]
   12058:	pop	{r4, r5, r6, r7, r8, pc}
   1205c:	ldr	r5, [pc, #252]	; 12160 <tcgetattr@plt+0xfcc>
   12060:	mov	r2, r0
   12064:	mov	r3, #12
   12068:	mla	r2, r3, r2, r5
   1206c:	ldr	r1, [r2, #8]
   12070:	b	12044 <tcgetattr@plt+0xeb0>
   12074:	mov	r0, r8
   12078:	bl	10f60 <cfgetispeed@plt>
   1207c:	mov	r5, r0
   12080:	mov	r0, r8
   12084:	bl	110a4 <cfgetospeed@plt>
   12088:	cmp	r5, r0
   1208c:	beq	11ff0 <tcgetattr@plt+0xe5c>
   12090:	ldr	r3, [pc, #212]	; 1216c <tcgetattr@plt+0xfd8>
   12094:	cmp	r4, #0
   12098:	mov	r0, r8
   1209c:	ldr	r6, [pc, #204]	; 12170 <tcgetattr@plt+0xfdc>
   120a0:	movne	r6, r3
   120a4:	bl	10f60 <cfgetispeed@plt>
   120a8:	cmp	r0, #0
   120ac:	movne	ip, #0
   120b0:	ldrne	r5, [pc, #168]	; 12160 <tcgetattr@plt+0xfcc>
   120b4:	movne	r3, r5
   120b8:	bne	120cc <tcgetattr@plt+0xf38>
   120bc:	b	1212c <tcgetattr@plt+0xf98>
   120c0:	ldr	r2, [r3, #4]
   120c4:	cmp	r0, r2
   120c8:	beq	12134 <tcgetattr@plt+0xfa0>
   120cc:	ldr	r7, [r3, #12]
   120d0:	add	ip, ip, #1
   120d4:	cmp	r7, #0
   120d8:	add	r3, r3, #12
   120dc:	bne	120c0 <tcgetattr@plt+0xf2c>
   120e0:	mov	r0, r8
   120e4:	bl	110a4 <cfgetospeed@plt>
   120e8:	cmp	r0, #0
   120ec:	movne	ip, #0
   120f0:	ldrne	r3, [pc, #104]	; 12160 <tcgetattr@plt+0xfcc>
   120f4:	bne	12108 <tcgetattr@plt+0xf74>
   120f8:	b	12144 <tcgetattr@plt+0xfb0>
   120fc:	ldr	r2, [r3, #4]
   12100:	cmp	r0, r2
   12104:	beq	12148 <tcgetattr@plt+0xfb4>
   12108:	ldr	r2, [r3, #12]
   1210c:	add	ip, ip, #1
   12110:	cmp	r2, #0
   12114:	add	r3, r3, #12
   12118:	bne	120fc <tcgetattr@plt+0xf68>
   1211c:	mov	r1, r7
   12120:	mov	r0, r6
   12124:	bl	11ed0 <tcgetattr@plt+0xd3c>
   12128:	b	1204c <tcgetattr@plt+0xeb8>
   1212c:	ldr	r5, [pc, #44]	; 12160 <tcgetattr@plt+0xfcc>
   12130:	mov	ip, r0
   12134:	mov	r3, #12
   12138:	mla	ip, r3, ip, r5
   1213c:	ldr	r7, [ip, #8]
   12140:	b	120e0 <tcgetattr@plt+0xf4c>
   12144:	mov	ip, r0
   12148:	mov	r3, #12
   1214c:	mla	ip, r3, ip, r5
   12150:	ldr	r2, [ip, #8]
   12154:	b	1211c <tcgetattr@plt+0xf88>
   12158:	andeq	r8, r1, r0, asr #29
   1215c:	strdeq	r8, [r1], -ip
   12160:	andeq	r8, r1, r8, ror #8
   12164:	ldrdeq	r8, [r1], -r0
   12168:	andeq	ip, r2, r8, lsl #3
   1216c:	ldrdeq	r8, [r1], -r4
   12170:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12174:	push	{r4, r5, lr}
   12178:	mov	r2, #5
   1217c:	sub	sp, sp, #28
   12180:	mov	r4, r0
   12184:	mov	r5, r1
   12188:	mov	r0, #0
   1218c:	ldr	r1, [pc, #52]	; 121c8 <tcgetattr@plt+0x1034>
   12190:	bl	10f54 <dcgettext@plt>
   12194:	ldr	r3, [pc, #48]	; 121cc <tcgetattr@plt+0x1038>
   12198:	mov	r1, #0
   1219c:	str	r3, [sp, #8]
   121a0:	str	r5, [sp]
   121a4:	str	r1, [sp, #16]
   121a8:	str	r1, [sp, #4]
   121ac:	mov	r2, #0
   121b0:	mov	r3, #0
   121b4:	str	r0, [sp, #12]
   121b8:	mov	r0, r4
   121bc:	bl	16c50 <tcgetattr@plt+0x5abc>
   121c0:	add	sp, sp, #28
   121c4:	pop	{r4, r5, pc}
   121c8:	andeq	r8, r1, r4, lsl #30
   121cc:	andeq	r8, r1, r0, lsr #30
   121d0:	cmp	r0, #31
   121d4:	bls	121f0 <tcgetattr@plt+0x105c>
   121d8:	cmp	r0, #126	; 0x7e
   121dc:	bhi	12218 <tcgetattr@plt+0x1084>
   121e0:	ldr	r2, [pc, #172]	; 12294 <tcgetattr@plt+0x1100>
   121e4:	add	r3, r2, #9
   121e8:	strb	r0, [r2, #8]
   121ec:	b	12208 <tcgetattr@plt+0x1074>
   121f0:	ldr	r2, [pc, #156]	; 12294 <tcgetattr@plt+0x1100>
   121f4:	add	r0, r0, #64	; 0x40
   121f8:	add	r3, r2, #10
   121fc:	mov	r1, #94	; 0x5e
   12200:	strb	r0, [r2, #9]
   12204:	strb	r1, [r2, #8]
   12208:	mov	r2, #0
   1220c:	strb	r2, [r3]
   12210:	ldr	r0, [pc, #128]	; 12298 <tcgetattr@plt+0x1104>
   12214:	bx	lr
   12218:	cmp	r0, #127	; 0x7f
   1221c:	ldr	r3, [pc, #112]	; 12294 <tcgetattr@plt+0x1100>
   12220:	beq	12264 <tcgetattr@plt+0x10d0>
   12224:	mov	r1, #77	; 0x4d
   12228:	mov	r2, #45	; 0x2d
   1222c:	cmp	r0, #159	; 0x9f
   12230:	strb	r1, [r3, #8]
   12234:	strb	r2, [r3, #9]
   12238:	bls	1227c <tcgetattr@plt+0x10e8>
   1223c:	cmp	r0, #255	; 0xff
   12240:	subne	r0, r0, #128	; 0x80
   12244:	moveq	r1, #94	; 0x5e
   12248:	moveq	r2, #63	; 0x3f
   1224c:	strbne	r0, [r3, #10]
   12250:	strbeq	r1, [r3, #10]
   12254:	strbeq	r2, [r3, #11]
   12258:	addne	r3, r3, #11
   1225c:	addeq	r3, r3, #12
   12260:	b	12208 <tcgetattr@plt+0x1074>
   12264:	mov	r1, #94	; 0x5e
   12268:	mov	r2, #63	; 0x3f
   1226c:	strb	r1, [r3, #8]
   12270:	strb	r2, [r3, #9]
   12274:	add	r3, r3, #10
   12278:	b	12208 <tcgetattr@plt+0x1074>
   1227c:	sub	r0, r0, #64	; 0x40
   12280:	mov	r2, #94	; 0x5e
   12284:	strb	r0, [r3, #11]
   12288:	strb	r2, [r3, #10]
   1228c:	add	r3, r3, #12
   12290:	b	12208 <tcgetattr@plt+0x1074>
   12294:	andeq	ip, r2, r8, lsl #3
   12298:	muleq	r2, r0, r1
   1229c:	push	{r4, r5, r6, r7, lr}
   122a0:	sub	sp, sp, #12
   122a4:	mov	r5, r0
   122a8:	mov	r4, r1
   122ac:	mov	r6, r2
   122b0:	ldr	r1, [pc, #172]	; 12364 <tcgetattr@plt+0x11d0>
   122b4:	mov	r2, sp
   122b8:	mov	r0, #0
   122bc:	bl	10fb4 <ioctl@plt>
   122c0:	cmp	r0, #0
   122c4:	beq	122e4 <tcgetattr@plt+0x1150>
   122c8:	bl	110b0 <__errno_location@plt>
   122cc:	ldr	r7, [r0]
   122d0:	cmp	r7, #22
   122d4:	moveq	r3, #0
   122d8:	streq	r3, [sp]
   122dc:	streq	r3, [sp, #4]
   122e0:	bne	12314 <tcgetattr@plt+0x1180>
   122e4:	cmp	r5, #0
   122e8:	strhge	r5, [sp]
   122ec:	mov	r2, sp
   122f0:	cmp	r4, #0
   122f4:	ldr	r1, [pc, #108]	; 12368 <tcgetattr@plt+0x11d4>
   122f8:	mov	r0, #0
   122fc:	strhge	r4, [sp, #2]
   12300:	bl	10fb4 <ioctl@plt>
   12304:	cmp	r0, #0
   12308:	bne	12338 <tcgetattr@plt+0x11a4>
   1230c:	add	sp, sp, #12
   12310:	pop	{r4, r5, r6, r7, pc}
   12314:	mov	r2, r6
   12318:	mov	r1, #3
   1231c:	mov	r0, #0
   12320:	bl	1600c <tcgetattr@plt+0x4e78>
   12324:	mov	r1, r7
   12328:	ldr	r2, [pc, #60]	; 1236c <tcgetattr@plt+0x11d8>
   1232c:	mov	r3, r0
   12330:	mov	r0, #1
   12334:	bl	10ffc <error@plt>
   12338:	bl	110b0 <__errno_location@plt>
   1233c:	mov	r2, r6
   12340:	mov	r1, #3
   12344:	ldr	r4, [r0]
   12348:	mov	r0, #0
   1234c:	bl	1600c <tcgetattr@plt+0x4e78>
   12350:	mov	r1, r4
   12354:	ldr	r2, [pc, #16]	; 1236c <tcgetattr@plt+0x11d8>
   12358:	mov	r3, r0
   1235c:	mov	r0, #1
   12360:	bl	10ffc <error@plt>
   12364:	andeq	r5, r0, r3, lsl r4
   12368:	andeq	r5, r0, r4, lsl r4
   1236c:	strdeq	fp, [r1], -r0
   12370:	push	{r4, r5, r6, lr}
   12374:	sub	sp, sp, #8
   12378:	mov	r4, r0
   1237c:	mov	r5, r1
   12380:	mov	r2, sp
   12384:	ldr	r1, [pc, #192]	; 1244c <tcgetattr@plt+0x12b8>
   12388:	mov	r0, #0
   1238c:	bl	10fb4 <ioctl@plt>
   12390:	cmp	r0, #0
   12394:	beq	123b8 <tcgetattr@plt+0x1224>
   12398:	bl	110b0 <__errno_location@plt>
   1239c:	ldr	r6, [r0]
   123a0:	cmp	r6, #22
   123a4:	bne	123f0 <tcgetattr@plt+0x125c>
   123a8:	cmp	r4, #0
   123ac:	beq	12414 <tcgetattr@plt+0x1280>
   123b0:	add	sp, sp, #8
   123b4:	pop	{r4, r5, r6, pc}
   123b8:	cmp	r4, #0
   123bc:	ldrh	r2, [sp, #2]
   123c0:	ldrh	r1, [sp]
   123c4:	beq	123d8 <tcgetattr@plt+0x1244>
   123c8:	ldr	r0, [pc, #128]	; 12450 <tcgetattr@plt+0x12bc>
   123cc:	bl	11ed0 <tcgetattr@plt+0xd3c>
   123d0:	add	sp, sp, #8
   123d4:	pop	{r4, r5, r6, pc}
   123d8:	ldr	r0, [pc, #116]	; 12454 <tcgetattr@plt+0x12c0>
   123dc:	bl	11ed0 <tcgetattr@plt+0xd3c>
   123e0:	ldr	r3, [pc, #112]	; 12458 <tcgetattr@plt+0x12c4>
   123e4:	str	r4, [r3]
   123e8:	add	sp, sp, #8
   123ec:	pop	{r4, r5, r6, pc}
   123f0:	mov	r2, r5
   123f4:	mov	r1, #3
   123f8:	mov	r0, #0
   123fc:	bl	1600c <tcgetattr@plt+0x4e78>
   12400:	mov	r1, r6
   12404:	ldr	r2, [pc, #80]	; 1245c <tcgetattr@plt+0x12c8>
   12408:	mov	r3, r0
   1240c:	mov	r0, #1
   12410:	bl	10ffc <error@plt>
   12414:	mov	r2, #5
   12418:	ldr	r1, [pc, #64]	; 12460 <tcgetattr@plt+0x12cc>
   1241c:	mov	r0, r4
   12420:	bl	10f54 <dcgettext@plt>
   12424:	mov	r2, r5
   12428:	mov	r1, #3
   1242c:	mov	r6, r0
   12430:	mov	r0, r4
   12434:	bl	1600c <tcgetattr@plt+0x4e78>
   12438:	mov	r2, r6
   1243c:	mov	r1, r4
   12440:	mov	r3, r0
   12444:	mov	r0, #1
   12448:	bl	10ffc <error@plt>
   1244c:	andeq	r5, r0, r3, lsl r4
   12450:	andeq	r8, r1, r4, asr pc
   12454:	andeq	r8, r1, ip, asr #30
   12458:	andeq	ip, r2, r8, lsl #3
   1245c:	strdeq	fp, [r1], -r0
   12460:	andeq	r8, r1, r4, lsr #30
   12464:	subs	r6, r0, #0
   12468:	push	{r7, lr}
   1246c:	sub	sp, sp, #64	; 0x40
   12470:	beq	124ac <tcgetattr@plt+0x1318>
   12474:	ldr	r3, [pc, #2648]	; 12ed4 <tcgetattr@plt+0x1d40>
   12478:	mov	r2, #5
   1247c:	ldr	r1, [pc, #2644]	; 12ed8 <tcgetattr@plt+0x1d44>
   12480:	mov	r0, #0
   12484:	ldr	r4, [r3]
   12488:	bl	10f54 <dcgettext@plt>
   1248c:	ldr	r3, [pc, #2632]	; 12edc <tcgetattr@plt+0x1d48>
   12490:	mov	r1, #1
   12494:	ldr	r3, [r3]
   12498:	mov	r2, r0
   1249c:	mov	r0, r4
   124a0:	bl	110f8 <__fprintf_chk@plt>
   124a4:	mov	r0, r6
   124a8:	bl	11068 <exit@plt>
   124ac:	mov	r2, #5
   124b0:	ldr	r1, [pc, #2600]	; 12ee0 <tcgetattr@plt+0x1d4c>
   124b4:	bl	10f54 <dcgettext@plt>
   124b8:	ldr	r3, [pc, #2588]	; 12edc <tcgetattr@plt+0x1d48>
   124bc:	ldr	r4, [pc, #2592]	; 12ee4 <tcgetattr@plt+0x1d50>
   124c0:	ldr	r3, [r3]
   124c4:	mov	r2, r3
   124c8:	str	r3, [sp]
   124cc:	mov	r1, r0
   124d0:	mov	r0, #1
   124d4:	bl	110e0 <__printf_chk@plt>
   124d8:	mov	r2, #5
   124dc:	ldr	r1, [pc, #2564]	; 12ee8 <tcgetattr@plt+0x1d54>
   124e0:	mov	r0, r6
   124e4:	bl	10f54 <dcgettext@plt>
   124e8:	ldr	r1, [r4]
   124ec:	bl	10ec4 <fputs_unlocked@plt>
   124f0:	mov	r2, #5
   124f4:	ldr	r1, [pc, #2544]	; 12eec <tcgetattr@plt+0x1d58>
   124f8:	mov	r0, r6
   124fc:	bl	10f54 <dcgettext@plt>
   12500:	ldr	r1, [r4]
   12504:	bl	10ec4 <fputs_unlocked@plt>
   12508:	mov	r2, #5
   1250c:	ldr	r1, [pc, #2524]	; 12ef0 <tcgetattr@plt+0x1d5c>
   12510:	mov	r0, r6
   12514:	bl	10f54 <dcgettext@plt>
   12518:	ldr	r1, [r4]
   1251c:	bl	10ec4 <fputs_unlocked@plt>
   12520:	mov	r2, #5
   12524:	ldr	r1, [pc, #2504]	; 12ef4 <tcgetattr@plt+0x1d60>
   12528:	mov	r0, r6
   1252c:	bl	10f54 <dcgettext@plt>
   12530:	ldr	r1, [r4]
   12534:	bl	10ec4 <fputs_unlocked@plt>
   12538:	mov	r2, #5
   1253c:	ldr	r1, [pc, #2484]	; 12ef8 <tcgetattr@plt+0x1d64>
   12540:	mov	r0, r6
   12544:	bl	10f54 <dcgettext@plt>
   12548:	ldr	r1, [r4]
   1254c:	bl	10ec4 <fputs_unlocked@plt>
   12550:	mov	r2, #5
   12554:	ldr	r1, [pc, #2464]	; 12efc <tcgetattr@plt+0x1d68>
   12558:	mov	r0, r6
   1255c:	bl	10f54 <dcgettext@plt>
   12560:	ldr	r1, [r4]
   12564:	bl	10ec4 <fputs_unlocked@plt>
   12568:	mov	r2, #5
   1256c:	ldr	r1, [pc, #2444]	; 12f00 <tcgetattr@plt+0x1d6c>
   12570:	mov	r0, r6
   12574:	bl	10f54 <dcgettext@plt>
   12578:	ldr	r1, [r4]
   1257c:	bl	10ec4 <fputs_unlocked@plt>
   12580:	mov	r2, #5
   12584:	ldr	r1, [pc, #2424]	; 12f04 <tcgetattr@plt+0x1d70>
   12588:	mov	r0, r6
   1258c:	bl	10f54 <dcgettext@plt>
   12590:	ldr	r1, [r4]
   12594:	bl	10ec4 <fputs_unlocked@plt>
   12598:	mov	r2, #5
   1259c:	ldr	r1, [pc, #2404]	; 12f08 <tcgetattr@plt+0x1d74>
   125a0:	mov	r0, r6
   125a4:	bl	10f54 <dcgettext@plt>
   125a8:	ldr	r1, [r4]
   125ac:	bl	10ec4 <fputs_unlocked@plt>
   125b0:	mov	r2, #5
   125b4:	ldr	r1, [pc, #2384]	; 12f0c <tcgetattr@plt+0x1d78>
   125b8:	mov	r0, r6
   125bc:	bl	10f54 <dcgettext@plt>
   125c0:	ldr	r1, [r4]
   125c4:	bl	10ec4 <fputs_unlocked@plt>
   125c8:	mov	r2, #5
   125cc:	ldr	r1, [pc, #2364]	; 12f10 <tcgetattr@plt+0x1d7c>
   125d0:	mov	r0, r6
   125d4:	bl	10f54 <dcgettext@plt>
   125d8:	ldr	r1, [r4]
   125dc:	bl	10ec4 <fputs_unlocked@plt>
   125e0:	mov	r2, #5
   125e4:	ldr	r1, [pc, #2344]	; 12f14 <tcgetattr@plt+0x1d80>
   125e8:	mov	r0, r6
   125ec:	bl	10f54 <dcgettext@plt>
   125f0:	ldr	r1, [r4]
   125f4:	bl	10ec4 <fputs_unlocked@plt>
   125f8:	mov	r2, #5
   125fc:	ldr	r1, [pc, #2324]	; 12f18 <tcgetattr@plt+0x1d84>
   12600:	mov	r0, r6
   12604:	bl	10f54 <dcgettext@plt>
   12608:	ldr	r1, [r4]
   1260c:	bl	10ec4 <fputs_unlocked@plt>
   12610:	mov	r2, #5
   12614:	ldr	r1, [pc, #2304]	; 12f1c <tcgetattr@plt+0x1d88>
   12618:	mov	r0, r6
   1261c:	bl	10f54 <dcgettext@plt>
   12620:	ldr	r1, [r4]
   12624:	bl	10ec4 <fputs_unlocked@plt>
   12628:	mov	r2, #5
   1262c:	ldr	r1, [pc, #2284]	; 12f20 <tcgetattr@plt+0x1d8c>
   12630:	mov	r0, r6
   12634:	bl	10f54 <dcgettext@plt>
   12638:	ldr	r1, [r4]
   1263c:	bl	10ec4 <fputs_unlocked@plt>
   12640:	mov	r2, #5
   12644:	ldr	r1, [pc, #2264]	; 12f24 <tcgetattr@plt+0x1d90>
   12648:	mov	r0, r6
   1264c:	bl	10f54 <dcgettext@plt>
   12650:	ldr	r1, [r4]
   12654:	bl	10ec4 <fputs_unlocked@plt>
   12658:	mov	r2, #5
   1265c:	ldr	r1, [pc, #2244]	; 12f28 <tcgetattr@plt+0x1d94>
   12660:	mov	r0, r6
   12664:	bl	10f54 <dcgettext@plt>
   12668:	ldr	r1, [r4]
   1266c:	bl	10ec4 <fputs_unlocked@plt>
   12670:	mov	r2, #5
   12674:	ldr	r1, [pc, #2224]	; 12f2c <tcgetattr@plt+0x1d98>
   12678:	mov	r0, r6
   1267c:	bl	10f54 <dcgettext@plt>
   12680:	ldr	r1, [r4]
   12684:	bl	10ec4 <fputs_unlocked@plt>
   12688:	mov	r2, #5
   1268c:	ldr	r1, [pc, #2204]	; 12f30 <tcgetattr@plt+0x1d9c>
   12690:	mov	r0, r6
   12694:	bl	10f54 <dcgettext@plt>
   12698:	ldr	r1, [r4]
   1269c:	bl	10ec4 <fputs_unlocked@plt>
   126a0:	ldr	r1, [pc, #2188]	; 12f34 <tcgetattr@plt+0x1da0>
   126a4:	mov	r2, #5
   126a8:	mov	r0, r6
   126ac:	bl	10f54 <dcgettext@plt>
   126b0:	ldr	r3, [pc, #2176]	; 12f38 <tcgetattr@plt+0x1da4>
   126b4:	mov	r2, #5
   126b8:	ldr	r3, [r3]
   126bc:	cmp	r3, #1
   126c0:	ldreq	r1, [pc, #2164]	; 12f3c <tcgetattr@plt+0x1da8>
   126c4:	ldrne	r1, [pc, #2164]	; 12f40 <tcgetattr@plt+0x1dac>
   126c8:	mov	r5, r0
   126cc:	mov	r0, r6
   126d0:	bl	10f54 <dcgettext@plt>
   126d4:	mov	r1, r5
   126d8:	ldr	r5, [pc, #2148]	; 12f44 <tcgetattr@plt+0x1db0>
   126dc:	mov	r2, r0
   126e0:	mov	r0, #1
   126e4:	bl	110e0 <__printf_chk@plt>
   126e8:	mov	r2, #5
   126ec:	ldr	r1, [pc, #2132]	; 12f48 <tcgetattr@plt+0x1db4>
   126f0:	mov	r0, #0
   126f4:	bl	10f54 <dcgettext@plt>
   126f8:	ldr	r1, [r4]
   126fc:	bl	10ec4 <fputs_unlocked@plt>
   12700:	mov	r2, #5
   12704:	ldr	r1, [pc, #2112]	; 12f4c <tcgetattr@plt+0x1db8>
   12708:	mov	r0, #0
   1270c:	bl	10f54 <dcgettext@plt>
   12710:	ldr	r1, [r4]
   12714:	bl	10ec4 <fputs_unlocked@plt>
   12718:	mov	r2, #5
   1271c:	ldr	r1, [pc, #2092]	; 12f50 <tcgetattr@plt+0x1dbc>
   12720:	mov	r0, #0
   12724:	bl	10f54 <dcgettext@plt>
   12728:	ldr	r1, [r4]
   1272c:	bl	10ec4 <fputs_unlocked@plt>
   12730:	mov	r2, #5
   12734:	ldr	r1, [pc, #2072]	; 12f54 <tcgetattr@plt+0x1dc0>
   12738:	mov	r0, #0
   1273c:	bl	10f54 <dcgettext@plt>
   12740:	ldr	r1, [r4]
   12744:	bl	10ec4 <fputs_unlocked@plt>
   12748:	mov	r2, #5
   1274c:	ldr	r1, [pc, #2052]	; 12f58 <tcgetattr@plt+0x1dc4>
   12750:	mov	r0, #0
   12754:	bl	10f54 <dcgettext@plt>
   12758:	ldr	r1, [r4]
   1275c:	bl	10ec4 <fputs_unlocked@plt>
   12760:	mov	r2, #5
   12764:	ldr	r1, [pc, #2032]	; 12f5c <tcgetattr@plt+0x1dc8>
   12768:	mov	r0, #0
   1276c:	bl	10f54 <dcgettext@plt>
   12770:	ldr	r1, [r4]
   12774:	bl	10ec4 <fputs_unlocked@plt>
   12778:	mov	r2, #5
   1277c:	ldr	r1, [pc, #2012]	; 12f60 <tcgetattr@plt+0x1dcc>
   12780:	mov	r0, #0
   12784:	bl	10f54 <dcgettext@plt>
   12788:	ldr	r1, [r4]
   1278c:	bl	10ec4 <fputs_unlocked@plt>
   12790:	mov	r2, #5
   12794:	ldr	r1, [pc, #1992]	; 12f64 <tcgetattr@plt+0x1dd0>
   12798:	mov	r0, #0
   1279c:	bl	10f54 <dcgettext@plt>
   127a0:	ldr	r1, [r4]
   127a4:	bl	10ec4 <fputs_unlocked@plt>
   127a8:	mov	r2, #5
   127ac:	ldr	r1, [pc, #1972]	; 12f68 <tcgetattr@plt+0x1dd4>
   127b0:	mov	r0, #0
   127b4:	bl	10f54 <dcgettext@plt>
   127b8:	ldr	r1, [r4]
   127bc:	bl	10ec4 <fputs_unlocked@plt>
   127c0:	mov	r2, #5
   127c4:	ldr	r1, [pc, #1952]	; 12f6c <tcgetattr@plt+0x1dd8>
   127c8:	mov	r0, #0
   127cc:	bl	10f54 <dcgettext@plt>
   127d0:	ldr	r1, [r4]
   127d4:	bl	10ec4 <fputs_unlocked@plt>
   127d8:	mov	r2, #5
   127dc:	ldr	r1, [pc, #1932]	; 12f70 <tcgetattr@plt+0x1ddc>
   127e0:	mov	r0, #0
   127e4:	bl	10f54 <dcgettext@plt>
   127e8:	ldr	r1, [r4]
   127ec:	bl	10ec4 <fputs_unlocked@plt>
   127f0:	mov	r2, #5
   127f4:	ldr	r1, [pc, #1912]	; 12f74 <tcgetattr@plt+0x1de0>
   127f8:	mov	r0, #0
   127fc:	bl	10f54 <dcgettext@plt>
   12800:	ldr	r1, [r4]
   12804:	bl	10ec4 <fputs_unlocked@plt>
   12808:	mov	r2, #5
   1280c:	ldr	r1, [pc, #1892]	; 12f78 <tcgetattr@plt+0x1de4>
   12810:	mov	r0, #0
   12814:	bl	10f54 <dcgettext@plt>
   12818:	ldr	r1, [r4]
   1281c:	bl	10ec4 <fputs_unlocked@plt>
   12820:	mov	r2, #5
   12824:	ldr	r1, [pc, #1872]	; 12f7c <tcgetattr@plt+0x1de8>
   12828:	mov	r0, #0
   1282c:	bl	10f54 <dcgettext@plt>
   12830:	ldr	r1, [r4]
   12834:	bl	10ec4 <fputs_unlocked@plt>
   12838:	mov	r2, #5
   1283c:	ldr	r1, [pc, #1852]	; 12f80 <tcgetattr@plt+0x1dec>
   12840:	mov	r0, #0
   12844:	bl	10f54 <dcgettext@plt>
   12848:	ldr	r1, [r4]
   1284c:	bl	10ec4 <fputs_unlocked@plt>
   12850:	mov	r2, #5
   12854:	ldr	r1, [pc, #1832]	; 12f84 <tcgetattr@plt+0x1df0>
   12858:	mov	r0, #0
   1285c:	bl	10f54 <dcgettext@plt>
   12860:	ldr	r1, [r4]
   12864:	bl	10ec4 <fputs_unlocked@plt>
   12868:	mov	r2, #5
   1286c:	ldr	r1, [pc, #1812]	; 12f88 <tcgetattr@plt+0x1df4>
   12870:	mov	r0, #0
   12874:	bl	10f54 <dcgettext@plt>
   12878:	ldr	r1, [r4]
   1287c:	bl	10ec4 <fputs_unlocked@plt>
   12880:	mov	r2, #5
   12884:	ldr	r1, [pc, #1792]	; 12f8c <tcgetattr@plt+0x1df8>
   12888:	mov	r0, #0
   1288c:	bl	10f54 <dcgettext@plt>
   12890:	ldr	r1, [r4]
   12894:	bl	10ec4 <fputs_unlocked@plt>
   12898:	mov	r2, #5
   1289c:	ldr	r1, [pc, #1772]	; 12f90 <tcgetattr@plt+0x1dfc>
   128a0:	mov	r0, #0
   128a4:	bl	10f54 <dcgettext@plt>
   128a8:	ldr	r1, [r4]
   128ac:	bl	10ec4 <fputs_unlocked@plt>
   128b0:	mov	r2, #5
   128b4:	ldr	r1, [pc, #1752]	; 12f94 <tcgetattr@plt+0x1e00>
   128b8:	mov	r0, #0
   128bc:	bl	10f54 <dcgettext@plt>
   128c0:	ldr	r1, [r4]
   128c4:	bl	10ec4 <fputs_unlocked@plt>
   128c8:	mov	r2, #5
   128cc:	ldr	r1, [pc, #1732]	; 12f98 <tcgetattr@plt+0x1e04>
   128d0:	mov	r0, #0
   128d4:	bl	10f54 <dcgettext@plt>
   128d8:	ldr	r1, [r4]
   128dc:	bl	10ec4 <fputs_unlocked@plt>
   128e0:	mov	r2, #5
   128e4:	ldr	r1, [pc, #1712]	; 12f9c <tcgetattr@plt+0x1e08>
   128e8:	mov	r0, #0
   128ec:	bl	10f54 <dcgettext@plt>
   128f0:	ldr	r1, [r4]
   128f4:	bl	10ec4 <fputs_unlocked@plt>
   128f8:	mov	r2, #5
   128fc:	ldr	r1, [pc, #1692]	; 12fa0 <tcgetattr@plt+0x1e0c>
   12900:	mov	r0, #0
   12904:	bl	10f54 <dcgettext@plt>
   12908:	ldr	r1, [r4]
   1290c:	bl	10ec4 <fputs_unlocked@plt>
   12910:	mov	r2, #5
   12914:	ldr	r1, [pc, #1672]	; 12fa4 <tcgetattr@plt+0x1e10>
   12918:	mov	r0, #0
   1291c:	bl	10f54 <dcgettext@plt>
   12920:	ldr	r1, [r4]
   12924:	bl	10ec4 <fputs_unlocked@plt>
   12928:	mov	r2, #5
   1292c:	ldr	r1, [pc, #1652]	; 12fa8 <tcgetattr@plt+0x1e14>
   12930:	mov	r0, #0
   12934:	bl	10f54 <dcgettext@plt>
   12938:	ldr	r1, [r4]
   1293c:	bl	10ec4 <fputs_unlocked@plt>
   12940:	mov	r2, #5
   12944:	ldr	r1, [pc, #1632]	; 12fac <tcgetattr@plt+0x1e18>
   12948:	mov	r0, #0
   1294c:	bl	10f54 <dcgettext@plt>
   12950:	ldr	r1, [r4]
   12954:	bl	10ec4 <fputs_unlocked@plt>
   12958:	mov	r2, #5
   1295c:	ldr	r1, [pc, #1612]	; 12fb0 <tcgetattr@plt+0x1e1c>
   12960:	mov	r0, #0
   12964:	bl	10f54 <dcgettext@plt>
   12968:	ldr	r1, [r4]
   1296c:	bl	10ec4 <fputs_unlocked@plt>
   12970:	mov	r2, #5
   12974:	ldr	r1, [pc, #1592]	; 12fb4 <tcgetattr@plt+0x1e20>
   12978:	mov	r0, #0
   1297c:	bl	10f54 <dcgettext@plt>
   12980:	ldr	r1, [r4]
   12984:	bl	10ec4 <fputs_unlocked@plt>
   12988:	mov	r2, #5
   1298c:	ldr	r1, [pc, #1572]	; 12fb8 <tcgetattr@plt+0x1e24>
   12990:	mov	r0, #0
   12994:	bl	10f54 <dcgettext@plt>
   12998:	ldr	r1, [r4]
   1299c:	bl	10ec4 <fputs_unlocked@plt>
   129a0:	mov	r2, #5
   129a4:	ldr	r1, [pc, #1552]	; 12fbc <tcgetattr@plt+0x1e28>
   129a8:	mov	r0, #0
   129ac:	bl	10f54 <dcgettext@plt>
   129b0:	ldr	r1, [r4]
   129b4:	bl	10ec4 <fputs_unlocked@plt>
   129b8:	mov	r2, #5
   129bc:	ldr	r1, [pc, #1532]	; 12fc0 <tcgetattr@plt+0x1e2c>
   129c0:	mov	r0, #0
   129c4:	bl	10f54 <dcgettext@plt>
   129c8:	ldr	r1, [r4]
   129cc:	bl	10ec4 <fputs_unlocked@plt>
   129d0:	mov	r2, #5
   129d4:	ldr	r1, [pc, #1512]	; 12fc4 <tcgetattr@plt+0x1e30>
   129d8:	mov	r0, #0
   129dc:	bl	10f54 <dcgettext@plt>
   129e0:	ldr	r1, [r4]
   129e4:	bl	10ec4 <fputs_unlocked@plt>
   129e8:	mov	r2, #5
   129ec:	ldr	r1, [pc, #1492]	; 12fc8 <tcgetattr@plt+0x1e34>
   129f0:	mov	r0, #0
   129f4:	bl	10f54 <dcgettext@plt>
   129f8:	ldr	r1, [r4]
   129fc:	bl	10ec4 <fputs_unlocked@plt>
   12a00:	mov	r2, #5
   12a04:	ldr	r1, [pc, #1472]	; 12fcc <tcgetattr@plt+0x1e38>
   12a08:	mov	r0, #0
   12a0c:	bl	10f54 <dcgettext@plt>
   12a10:	ldr	r1, [r4]
   12a14:	bl	10ec4 <fputs_unlocked@plt>
   12a18:	mov	r2, #5
   12a1c:	ldr	r1, [pc, #1452]	; 12fd0 <tcgetattr@plt+0x1e3c>
   12a20:	mov	r0, #0
   12a24:	bl	10f54 <dcgettext@plt>
   12a28:	ldr	r1, [r4]
   12a2c:	bl	10ec4 <fputs_unlocked@plt>
   12a30:	mov	r2, #5
   12a34:	ldr	r1, [pc, #1432]	; 12fd4 <tcgetattr@plt+0x1e40>
   12a38:	mov	r0, #0
   12a3c:	bl	10f54 <dcgettext@plt>
   12a40:	ldr	r1, [r4]
   12a44:	bl	10ec4 <fputs_unlocked@plt>
   12a48:	mov	r2, #5
   12a4c:	ldr	r1, [pc, #1412]	; 12fd8 <tcgetattr@plt+0x1e44>
   12a50:	mov	r0, #0
   12a54:	bl	10f54 <dcgettext@plt>
   12a58:	ldr	r1, [r4]
   12a5c:	bl	10ec4 <fputs_unlocked@plt>
   12a60:	mov	r2, #5
   12a64:	ldr	r1, [pc, #1392]	; 12fdc <tcgetattr@plt+0x1e48>
   12a68:	mov	r0, #0
   12a6c:	bl	10f54 <dcgettext@plt>
   12a70:	ldr	r1, [r4]
   12a74:	bl	10ec4 <fputs_unlocked@plt>
   12a78:	mov	r2, #5
   12a7c:	ldr	r1, [pc, #1372]	; 12fe0 <tcgetattr@plt+0x1e4c>
   12a80:	mov	r0, #0
   12a84:	bl	10f54 <dcgettext@plt>
   12a88:	ldr	r1, [r4]
   12a8c:	bl	10ec4 <fputs_unlocked@plt>
   12a90:	mov	r2, #5
   12a94:	ldr	r1, [pc, #1352]	; 12fe4 <tcgetattr@plt+0x1e50>
   12a98:	mov	r0, #0
   12a9c:	bl	10f54 <dcgettext@plt>
   12aa0:	ldr	r1, [r4]
   12aa4:	bl	10ec4 <fputs_unlocked@plt>
   12aa8:	mov	r2, #5
   12aac:	ldr	r1, [pc, #1332]	; 12fe8 <tcgetattr@plt+0x1e54>
   12ab0:	mov	r0, #0
   12ab4:	bl	10f54 <dcgettext@plt>
   12ab8:	ldr	r1, [r4]
   12abc:	bl	10ec4 <fputs_unlocked@plt>
   12ac0:	mov	r2, #5
   12ac4:	ldr	r1, [pc, #1312]	; 12fec <tcgetattr@plt+0x1e58>
   12ac8:	mov	r0, #0
   12acc:	bl	10f54 <dcgettext@plt>
   12ad0:	ldr	r1, [r4]
   12ad4:	bl	10ec4 <fputs_unlocked@plt>
   12ad8:	mov	r2, #5
   12adc:	ldr	r1, [pc, #1292]	; 12ff0 <tcgetattr@plt+0x1e5c>
   12ae0:	mov	r0, #0
   12ae4:	bl	10f54 <dcgettext@plt>
   12ae8:	ldr	r1, [r4]
   12aec:	bl	10ec4 <fputs_unlocked@plt>
   12af0:	mov	r2, #5
   12af4:	ldr	r1, [pc, #1272]	; 12ff4 <tcgetattr@plt+0x1e60>
   12af8:	mov	r0, #0
   12afc:	bl	10f54 <dcgettext@plt>
   12b00:	ldr	r2, [pc, #1264]	; 12ff8 <tcgetattr@plt+0x1e64>
   12b04:	mov	r1, r0
   12b08:	mov	r0, #1
   12b0c:	bl	110e0 <__printf_chk@plt>
   12b10:	mov	r2, #5
   12b14:	ldr	r1, [pc, #1248]	; 12ffc <tcgetattr@plt+0x1e68>
   12b18:	mov	r0, #0
   12b1c:	bl	10f54 <dcgettext@plt>
   12b20:	ldr	r1, [r4]
   12b24:	bl	10ec4 <fputs_unlocked@plt>
   12b28:	mov	r2, #5
   12b2c:	ldr	r1, [pc, #1228]	; 13000 <tcgetattr@plt+0x1e6c>
   12b30:	mov	r0, #0
   12b34:	bl	10f54 <dcgettext@plt>
   12b38:	ldr	r1, [r4]
   12b3c:	bl	10ec4 <fputs_unlocked@plt>
   12b40:	mov	r2, #5
   12b44:	ldr	r1, [pc, #1208]	; 13004 <tcgetattr@plt+0x1e70>
   12b48:	mov	r0, #0
   12b4c:	bl	10f54 <dcgettext@plt>
   12b50:	ldr	r1, [r4]
   12b54:	bl	10ec4 <fputs_unlocked@plt>
   12b58:	mov	r2, #5
   12b5c:	ldr	r1, [pc, #1188]	; 13008 <tcgetattr@plt+0x1e74>
   12b60:	mov	r0, #0
   12b64:	bl	10f54 <dcgettext@plt>
   12b68:	ldr	r1, [r4]
   12b6c:	bl	10ec4 <fputs_unlocked@plt>
   12b70:	mov	r2, #5
   12b74:	ldr	r1, [pc, #1168]	; 1300c <tcgetattr@plt+0x1e78>
   12b78:	mov	r0, #0
   12b7c:	bl	10f54 <dcgettext@plt>
   12b80:	ldr	r1, [r4]
   12b84:	bl	10ec4 <fputs_unlocked@plt>
   12b88:	mov	r2, #5
   12b8c:	ldr	r1, [pc, #1148]	; 13010 <tcgetattr@plt+0x1e7c>
   12b90:	mov	r0, #0
   12b94:	bl	10f54 <dcgettext@plt>
   12b98:	ldr	r1, [r4]
   12b9c:	bl	10ec4 <fputs_unlocked@plt>
   12ba0:	mov	r2, #5
   12ba4:	ldr	r1, [pc, #1128]	; 13014 <tcgetattr@plt+0x1e80>
   12ba8:	mov	r0, #0
   12bac:	bl	10f54 <dcgettext@plt>
   12bb0:	ldr	r1, [r4]
   12bb4:	bl	10ec4 <fputs_unlocked@plt>
   12bb8:	mov	r2, #5
   12bbc:	ldr	r1, [pc, #1108]	; 13018 <tcgetattr@plt+0x1e84>
   12bc0:	mov	r0, #0
   12bc4:	bl	10f54 <dcgettext@plt>
   12bc8:	ldr	r1, [r4]
   12bcc:	bl	10ec4 <fputs_unlocked@plt>
   12bd0:	mov	r2, #5
   12bd4:	ldr	r1, [pc, #1088]	; 1301c <tcgetattr@plt+0x1e88>
   12bd8:	mov	r0, #0
   12bdc:	bl	10f54 <dcgettext@plt>
   12be0:	ldr	r2, [pc, #1080]	; 13020 <tcgetattr@plt+0x1e8c>
   12be4:	mov	r1, r0
   12be8:	mov	r0, #1
   12bec:	bl	110e0 <__printf_chk@plt>
   12bf0:	mov	r2, #5
   12bf4:	ldr	r1, [pc, #1064]	; 13024 <tcgetattr@plt+0x1e90>
   12bf8:	mov	r0, #0
   12bfc:	bl	10f54 <dcgettext@plt>
   12c00:	ldr	r2, [pc, #1056]	; 13028 <tcgetattr@plt+0x1e94>
   12c04:	mov	r1, r0
   12c08:	mov	r0, #1
   12c0c:	bl	110e0 <__printf_chk@plt>
   12c10:	mov	r2, #5
   12c14:	ldr	r1, [pc, #1040]	; 1302c <tcgetattr@plt+0x1e98>
   12c18:	mov	r0, #0
   12c1c:	bl	10f54 <dcgettext@plt>
   12c20:	ldr	r1, [r4]
   12c24:	bl	10ec4 <fputs_unlocked@plt>
   12c28:	mov	r2, #5
   12c2c:	ldr	r1, [pc, #1020]	; 13030 <tcgetattr@plt+0x1e9c>
   12c30:	mov	r0, #0
   12c34:	bl	10f54 <dcgettext@plt>
   12c38:	ldr	r1, [r4]
   12c3c:	bl	10ec4 <fputs_unlocked@plt>
   12c40:	mov	r2, #5
   12c44:	ldr	r1, [pc, #1000]	; 13034 <tcgetattr@plt+0x1ea0>
   12c48:	mov	r0, #0
   12c4c:	bl	10f54 <dcgettext@plt>
   12c50:	ldr	r1, [r4]
   12c54:	bl	10ec4 <fputs_unlocked@plt>
   12c58:	mov	r2, #5
   12c5c:	ldr	r1, [pc, #980]	; 13038 <tcgetattr@plt+0x1ea4>
   12c60:	mov	r0, #0
   12c64:	bl	10f54 <dcgettext@plt>
   12c68:	ldr	r1, [r4]
   12c6c:	bl	10ec4 <fputs_unlocked@plt>
   12c70:	mov	r2, #5
   12c74:	ldr	r1, [pc, #960]	; 1303c <tcgetattr@plt+0x1ea8>
   12c78:	mov	r0, #0
   12c7c:	bl	10f54 <dcgettext@plt>
   12c80:	ldr	r3, [pc, #952]	; 13040 <tcgetattr@plt+0x1eac>
   12c84:	ldr	r2, [pc, #952]	; 13044 <tcgetattr@plt+0x1eb0>
   12c88:	mov	r1, r0
   12c8c:	mov	r0, #1
   12c90:	bl	110e0 <__printf_chk@plt>
   12c94:	mov	r2, #5
   12c98:	ldr	r1, [pc, #936]	; 13048 <tcgetattr@plt+0x1eb4>
   12c9c:	mov	r0, #0
   12ca0:	bl	10f54 <dcgettext@plt>
   12ca4:	ldr	r1, [r4]
   12ca8:	bl	10ec4 <fputs_unlocked@plt>
   12cac:	mov	r2, #5
   12cb0:	ldr	r1, [pc, #916]	; 1304c <tcgetattr@plt+0x1eb8>
   12cb4:	mov	r0, #0
   12cb8:	bl	10f54 <dcgettext@plt>
   12cbc:	ldr	r2, [pc, #908]	; 13050 <tcgetattr@plt+0x1ebc>
   12cc0:	mov	r1, r0
   12cc4:	mov	r0, #1
   12cc8:	bl	110e0 <__printf_chk@plt>
   12ccc:	mov	r2, #5
   12cd0:	ldr	r1, [pc, #892]	; 13054 <tcgetattr@plt+0x1ec0>
   12cd4:	mov	r0, #0
   12cd8:	bl	10f54 <dcgettext@plt>
   12cdc:	ldr	r2, [pc, #884]	; 13058 <tcgetattr@plt+0x1ec4>
   12ce0:	ldr	r3, [pc, #884]	; 1305c <tcgetattr@plt+0x1ec8>
   12ce4:	str	r2, [sp]
   12ce8:	ldr	r2, [pc, #880]	; 13060 <tcgetattr@plt+0x1ecc>
   12cec:	mov	r1, r0
   12cf0:	mov	r0, #1
   12cf4:	bl	110e0 <__printf_chk@plt>
   12cf8:	mov	r2, #5
   12cfc:	ldr	r1, [pc, #864]	; 13064 <tcgetattr@plt+0x1ed0>
   12d00:	mov	r0, #0
   12d04:	bl	10f54 <dcgettext@plt>
   12d08:	ldr	r1, [r4]
   12d0c:	bl	10ec4 <fputs_unlocked@plt>
   12d10:	ldm	r5!, {r0, r1, r2, r3}
   12d14:	add	lr, sp, #8
   12d18:	stmia	lr!, {r0, r1, r2, r3}
   12d1c:	ldm	r5!, {r0, r1, r2, r3}
   12d20:	ldr	ip, [sp, #8]
   12d24:	stmia	lr!, {r0, r1, r2, r3}
   12d28:	cmp	ip, #0
   12d2c:	ldm	r5!, {r0, r1, r2, r3}
   12d30:	stmia	lr!, {r0, r1, r2, r3}
   12d34:	ldm	r5, {r0, r1}
   12d38:	addeq	r5, sp, #8
   12d3c:	stm	lr, {r0, r1}
   12d40:	beq	12d70 <tcgetattr@plt+0x1bdc>
   12d44:	ldr	r7, [pc, #796]	; 13068 <tcgetattr@plt+0x1ed4>
   12d48:	add	r5, sp, #8
   12d4c:	b	12d5c <tcgetattr@plt+0x1bc8>
   12d50:	ldr	ip, [r5, #8]!
   12d54:	cmp	ip, #0
   12d58:	beq	12d70 <tcgetattr@plt+0x1bdc>
   12d5c:	mov	r1, ip
   12d60:	mov	r0, r7
   12d64:	bl	10edc <strcmp@plt>
   12d68:	cmp	r0, #0
   12d6c:	bne	12d50 <tcgetattr@plt+0x1bbc>
   12d70:	ldr	r5, [r5, #4]
   12d74:	mov	r2, #5
   12d78:	cmp	r5, #0
   12d7c:	ldr	r1, [pc, #744]	; 1306c <tcgetattr@plt+0x1ed8>
   12d80:	beq	12e28 <tcgetattr@plt+0x1c94>
   12d84:	mov	r0, #0
   12d88:	bl	10f54 <dcgettext@plt>
   12d8c:	ldr	r3, [pc, #732]	; 13070 <tcgetattr@plt+0x1edc>
   12d90:	ldr	r2, [pc, #732]	; 13074 <tcgetattr@plt+0x1ee0>
   12d94:	mov	r1, r0
   12d98:	mov	r0, #1
   12d9c:	bl	110e0 <__printf_chk@plt>
   12da0:	mov	r1, #0
   12da4:	mov	r0, #5
   12da8:	bl	11134 <setlocale@plt>
   12dac:	cmp	r0, #0
   12db0:	ldreq	r7, [pc, #688]	; 13068 <tcgetattr@plt+0x1ed4>
   12db4:	beq	12dd0 <tcgetattr@plt+0x1c3c>
   12db8:	mov	r2, #3
   12dbc:	ldr	r1, [pc, #692]	; 13078 <tcgetattr@plt+0x1ee4>
   12dc0:	bl	11164 <strncmp@plt>
   12dc4:	ldr	r7, [pc, #668]	; 13068 <tcgetattr@plt+0x1ed4>
   12dc8:	cmp	r0, #0
   12dcc:	bne	12eb8 <tcgetattr@plt+0x1d24>
   12dd0:	mov	r2, #5
   12dd4:	ldr	r1, [pc, #672]	; 1307c <tcgetattr@plt+0x1ee8>
   12dd8:	mov	r0, #0
   12ddc:	bl	10f54 <dcgettext@plt>
   12de0:	ldr	r3, [pc, #640]	; 13068 <tcgetattr@plt+0x1ed4>
   12de4:	ldr	r2, [pc, #644]	; 13070 <tcgetattr@plt+0x1edc>
   12de8:	mov	r1, r0
   12dec:	mov	r0, #1
   12df0:	bl	110e0 <__printf_chk@plt>
   12df4:	mov	r2, #5
   12df8:	ldr	r1, [pc, #640]	; 13080 <tcgetattr@plt+0x1eec>
   12dfc:	mov	r0, #0
   12e00:	bl	10f54 <dcgettext@plt>
   12e04:	ldr	r2, [pc, #632]	; 13084 <tcgetattr@plt+0x1ef0>
   12e08:	cmp	r5, r7
   12e0c:	ldr	r3, [pc, #628]	; 13088 <tcgetattr@plt+0x1ef4>
   12e10:	movne	r3, r2
   12e14:	mov	r1, r0
   12e18:	mov	r2, r5
   12e1c:	mov	r0, #1
   12e20:	bl	110e0 <__printf_chk@plt>
   12e24:	b	124a4 <tcgetattr@plt+0x1310>
   12e28:	mov	r0, r5
   12e2c:	bl	10f54 <dcgettext@plt>
   12e30:	ldr	r3, [pc, #568]	; 13070 <tcgetattr@plt+0x1edc>
   12e34:	ldr	r2, [pc, #568]	; 13074 <tcgetattr@plt+0x1ee0>
   12e38:	mov	r1, r0
   12e3c:	mov	r0, #1
   12e40:	bl	110e0 <__printf_chk@plt>
   12e44:	mov	r1, r5
   12e48:	mov	r0, #5
   12e4c:	bl	11134 <setlocale@plt>
   12e50:	cmp	r0, #0
   12e54:	beq	12e6c <tcgetattr@plt+0x1cd8>
   12e58:	mov	r2, #3
   12e5c:	ldr	r1, [pc, #532]	; 13078 <tcgetattr@plt+0x1ee4>
   12e60:	bl	11164 <strncmp@plt>
   12e64:	cmp	r0, #0
   12e68:	bne	12eb0 <tcgetattr@plt+0x1d1c>
   12e6c:	mov	r2, #5
   12e70:	ldr	r1, [pc, #516]	; 1307c <tcgetattr@plt+0x1ee8>
   12e74:	mov	r0, #0
   12e78:	bl	10f54 <dcgettext@plt>
   12e7c:	ldr	r3, [pc, #484]	; 13068 <tcgetattr@plt+0x1ed4>
   12e80:	ldr	r2, [pc, #488]	; 13070 <tcgetattr@plt+0x1edc>
   12e84:	mov	r5, r3
   12e88:	mov	r1, r0
   12e8c:	mov	r0, #1
   12e90:	bl	110e0 <__printf_chk@plt>
   12e94:	ldr	r1, [pc, #484]	; 13080 <tcgetattr@plt+0x1eec>
   12e98:	mov	r2, #5
   12e9c:	mov	r0, #0
   12ea0:	bl	10f54 <dcgettext@plt>
   12ea4:	ldr	r3, [pc, #476]	; 13088 <tcgetattr@plt+0x1ef4>
   12ea8:	mov	r1, r0
   12eac:	b	12e18 <tcgetattr@plt+0x1c84>
   12eb0:	ldr	r7, [pc, #432]	; 13068 <tcgetattr@plt+0x1ed4>
   12eb4:	mov	r5, r7
   12eb8:	mov	r2, #5
   12ebc:	ldr	r1, [pc, #456]	; 1308c <tcgetattr@plt+0x1ef8>
   12ec0:	mov	r0, #0
   12ec4:	bl	10f54 <dcgettext@plt>
   12ec8:	ldr	r1, [r4]
   12ecc:	bl	10ec4 <fputs_unlocked@plt>
   12ed0:	b	12dd0 <tcgetattr@plt+0x1c3c>
   12ed4:	andeq	ip, r2, r0, ror r1
   12ed8:	andeq	r8, r1, r4, ror pc
   12edc:	andeq	ip, r2, ip, asr r2
   12ee0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12ee4:	andeq	ip, r2, r4, ror r1
   12ee8:	andeq	r9, r1, r4, lsr r0
   12eec:	andeq	r9, r1, r0, rrx
   12ef0:	andeq	r9, r1, ip, lsr #1
   12ef4:	andeq	r9, r1, r4, lsl #3
   12ef8:			; <UNDEFINED> instruction: 0x000191b4
   12efc:	andeq	r9, r1, ip, ror #3
   12f00:	andeq	r9, r1, ip, ror r2
   12f04:	muleq	r1, r4, r2
   12f08:	andeq	r9, r1, ip, asr #5
   12f0c:	andeq	r9, r1, ip, lsr r3
   12f10:	andeq	r9, r1, r4, ror r3
   12f14:	andeq	r9, r1, r8, lsl r4
   12f18:	andeq	r9, r1, r4, asr r4
   12f1c:	andeq	r9, r1, r4, lsl #9
   12f20:			; <UNDEFINED> instruction: 0x000194b8
   12f24:	andeq	r9, r1, ip, asr r5
   12f28:	muleq	r1, ip, r5
   12f2c:	ldrdeq	r9, [r1], -r4
   12f30:	andeq	r9, r1, r4, lsr #12
   12f34:	andeq	r9, r1, r8, lsl #13
   12f38:	andeq	ip, r2, r0, lsl r1
   12f3c:	andeq	fp, r1, ip, lsr r6
   12f40:	ldrdeq	r9, [r1], -ip
   12f44:	andeq	r8, r1, ip, lsl #12
   12f48:	andeq	r9, r1, r0, ror #13
   12f4c:	andeq	r9, r1, ip, lsl #14
   12f50:	andeq	r9, r1, r4, lsr r7
   12f54:			; <UNDEFINED> instruction: 0x000197b0
   12f58:	andeq	r9, r1, r0, asr #16
   12f5c:			; <UNDEFINED> instruction: 0x000198b4
   12f60:	andeq	r9, r1, r4, lsr #18
   12f64:	andeq	r9, r1, r4, asr r9
   12f68:	muleq	r1, r0, r9
   12f6c:	andeq	r9, r1, r4, asr #21
   12f70:	strdeq	r9, [r1], -r8
   12f74:	strdeq	r9, [r1], -ip
   12f78:	andeq	r9, r1, r8, asr #24
   12f7c:	andeq	r9, r1, r8, ror #25
   12f80:	andeq	r9, r1, r4, lsr #26
   12f84:	andeq	r9, r1, r4, ror #26
   12f88:			; <UNDEFINED> instruction: 0x00019db4
   12f8c:	andeq	r9, r1, r4, lsl #29
   12f90:	muleq	r1, r8, lr
   12f94:	ldrdeq	r9, [r1], -r0
   12f98:	andeq	r9, r1, ip, lsl #30
   12f9c:	andeq	r9, r1, r4, asr #30
   12fa0:	andeq	r9, r1, r8, ror pc
   12fa4:			; <UNDEFINED> instruction: 0x00019fb0
   12fa8:	strdeq	r9, [r1], -ip
   12fac:	andeq	sl, r1, ip, asr #32
   12fb0:	andeq	sl, r1, ip, lsl #1
   12fb4:	andeq	sl, r1, ip, asr #1
   12fb8:	andeq	sl, r1, r4, lsl #2
   12fbc:	andeq	sl, r1, r8, asr #2
   12fc0:	andeq	sl, r1, r0, ror r1
   12fc4:	andeq	sl, r1, r8, ror #3
   12fc8:	andeq	sl, r1, r0, lsr #4
   12fcc:	andeq	sl, r1, r8, ror r2
   12fd0:	andeq	sl, r1, ip, lsl #6
   12fd4:	andeq	sl, r1, r0, asr r3
   12fd8:	andeq	sl, r1, r8, ror r3
   12fdc:	andeq	sl, r1, r0, lsr #7
   12fe0:	andeq	sl, r1, r0, lsl #8
   12fe4:	andeq	sl, r1, r8, lsr #8
   12fe8:	andeq	sl, r1, ip, ror #8
   12fec:			; <UNDEFINED> instruction: 0x0001a4b4
   12ff0:	strdeq	sl, [r1], -r8
   12ff4:	andeq	sl, r1, ip, lsl r5
   12ff8:	andeq	sl, r1, r4, lsl #11
   12ffc:	andeq	sl, r1, r0, lsr #11
   13000:	andeq	sl, r1, r8, lsr r6
   13004:	andeq	sl, r1, r0, ror #12
   13008:	andeq	sl, r1, ip, lsr #13
   1300c:	strdeq	sl, [r1], -r4
   13010:	andeq	sl, r1, ip, lsl #14
   13014:	andeq	sl, r1, r0, lsr r7
   13018:	andeq	sl, r1, r4, ror r7
   1301c:	andeq	sl, r1, r0, lsr #16
   13020:	andeq	sl, r1, r0, asr #16
   13024:	andeq	sl, r1, r8, asr r8
   13028:	andeq	sl, r1, r4, lsr #17
   1302c:	andeq	sl, r1, r0, asr #17
   13030:	andeq	sl, r1, r4, ror #17
   13034:	andeq	sl, r1, ip, ror r9
   13038:	andeq	sl, r1, r8, lsr #19
   1303c:	andeq	sl, r1, r0, lsl sl
   13040:	andeq	sl, r1, ip, asr #20
   13044:	andeq	sl, r1, r8, ror sl
   13048:	andeq	sl, r1, r8, lsl #21
   1304c:	andeq	sl, r1, r4, asr fp
   13050:	andeq	sl, r1, r8, lsr #24
   13054:	andeq	sl, r1, r8, asr #24
   13058:	andeq	sl, r1, r0, asr #27
   1305c:	andeq	sl, r1, r8, asr #26
   13060:	andeq	sl, r1, r4, lsl #27
   13064:	andeq	sl, r1, r0, lsl #28
   13068:	andeq	r8, r1, ip, ror #30
   1306c:	andeq	sl, r1, r8, lsl pc
   13070:	andeq	sl, r1, r0, lsr pc
   13074:	andeq	sl, r1, r8, asr pc
   13078:	andeq	sl, r1, r8, ror #30
   1307c:			; <UNDEFINED> instruction: 0x0001afb4
   13080:	ldrdeq	sl, [r1], -r0
   13084:	andeq	sl, r1, ip, asr #6
   13088:	andeq	fp, r1, r8, lsl #6
   1308c:	andeq	sl, r1, ip, ror #30
   13090:	cmp	r3, #1
   13094:	bxle	lr
   13098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1309c:	sub	sp, sp, #52	; 0x34
   130a0:	mov	r6, r2
   130a4:	str	r1, [sp, #20]
   130a8:	str	r0, [sp, #12]
   130ac:	str	r3, [sp, #4]
   130b0:	mov	r5, #1
   130b4:	b	130d4 <tcgetattr@plt+0x1f40>
   130b8:	ldr	r3, [pc, #3528]	; 13e88 <tcgetattr@plt+0x2cf4>
   130bc:	eor	r8, r8, #1
   130c0:	str	r8, [r3]
   130c4:	ldr	r3, [sp, #4]
   130c8:	add	r5, r5, #1
   130cc:	cmp	r3, r5
   130d0:	ble	131d8 <tcgetattr@plt+0x2044>
   130d4:	ldr	r4, [r6, r5, lsl #2]
   130d8:	lsl	r9, r5, #2
   130dc:	cmp	r4, #0
   130e0:	beq	130c4 <tcgetattr@plt+0x1f30>
   130e4:	ldrb	r3, [r4]
   130e8:	ldr	r1, [pc, #3484]	; 13e8c <tcgetattr@plt+0x2cf8>
   130ec:	cmp	r3, #45	; 0x2d
   130f0:	addeq	r4, r4, #1
   130f4:	mov	r0, r4
   130f8:	moveq	r8, #1
   130fc:	movne	r8, #0
   13100:	bl	10edc <strcmp@plt>
   13104:	cmp	r0, #0
   13108:	beq	130b8 <tcgetattr@plt+0x1f24>
   1310c:	ldr	r3, [pc, #3452]	; 13e90 <tcgetattr@plt+0x2cfc>
   13110:	ldr	r7, [pc, #3452]	; 13e94 <tcgetattr@plt+0x2d00>
   13114:	str	r3, [sp, #8]
   13118:	mov	sl, r3
   1311c:	mov	fp, #0
   13120:	b	13134 <tcgetattr@plt+0x1fa0>
   13124:	ldr	r7, [sl, #20]!
   13128:	add	fp, fp, #1
   1312c:	cmp	r7, #0
   13130:	beq	131e0 <tcgetattr@plt+0x204c>
   13134:	mov	r1, r7
   13138:	mov	r0, r4
   1313c:	bl	10edc <strcmp@plt>
   13140:	cmp	r0, #0
   13144:	bne	13124 <tcgetattr@plt+0x1f90>
   13148:	ldr	r2, [pc, #3400]	; 13e98 <tcgetattr@plt+0x2d04>
   1314c:	add	r3, fp, fp, lsl #2
   13150:	add	r3, r2, r3, lsl #2
   13154:	ldrb	r2, [r3, #484]	; 0x1e4
   13158:	tst	r2, #16
   1315c:	beq	13374 <tcgetattr@plt+0x21e0>
   13160:	ldr	r1, [pc, #3380]	; 13e9c <tcgetattr@plt+0x2d08>
   13164:	mov	r0, r4
   13168:	bl	10edc <strcmp@plt>
   1316c:	cmp	r0, #0
   13170:	bne	1331c <tcgetattr@plt+0x2188>
   13174:	ldr	r3, [sp, #4]
   13178:	sub	r3, r3, #1
   1317c:	cmp	r3, r5
   13180:	beq	13970 <tcgetattr@plt+0x27dc>
   13184:	add	r9, r6, r9
   13188:	ldr	r0, [r9, #4]
   1318c:	cmp	r0, #0
   13190:	beq	13970 <tcgetattr@plt+0x27dc>
   13194:	ldr	r3, [sp, #12]
   13198:	add	r5, r5, #1
   1319c:	cmp	r3, #0
   131a0:	bne	130c4 <tcgetattr@plt+0x1f30>
   131a4:	bl	11d9c <tcgetattr@plt+0xc08>
   131a8:	mov	r1, r0
   131ac:	ldr	r0, [sp, #88]	; 0x58
   131b0:	bl	11098 <cfsetispeed@plt>
   131b4:	ldr	r2, [sp, #92]	; 0x5c
   131b8:	mov	r3, #1
   131bc:	add	r5, r5, #1
   131c0:	strb	r3, [r2]
   131c4:	ldr	r2, [sp, #96]	; 0x60
   131c8:	strb	r3, [r2]
   131cc:	ldr	r3, [sp, #4]
   131d0:	cmp	r3, r5
   131d4:	bgt	130d4 <tcgetattr@plt+0x1f40>
   131d8:	add	sp, sp, #52	; 0x34
   131dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e0:	cmp	r8, #0
   131e4:	beq	13220 <tcgetattr@plt+0x208c>
   131e8:	mov	r2, #5
   131ec:	ldr	r1, [pc, #3244]	; 13ea0 <tcgetattr@plt+0x2d0c>
   131f0:	mov	r0, #0
   131f4:	bl	10f54 <dcgettext@plt>
   131f8:	mov	r5, r0
   131fc:	sub	r0, r4, #1
   13200:	bl	16190 <tcgetattr@plt+0x4ffc>
   13204:	mov	r1, #0
   13208:	mov	r2, r5
   1320c:	mov	r3, r0
   13210:	mov	r0, r1
   13214:	bl	10ffc <error@plt>
   13218:	mov	r0, #1
   1321c:	bl	12464 <tcgetattr@plt+0x12d0>
   13220:	ldr	r7, [pc, #3196]	; 13ea4 <tcgetattr@plt+0x2d10>
   13224:	ldr	fp, [pc, #3196]	; 13ea8 <tcgetattr@plt+0x2d14>
   13228:	b	1323c <tcgetattr@plt+0x20a8>
   1322c:	ldr	fp, [r7, #12]!
   13230:	add	r8, r8, #1
   13234:	cmp	fp, #0
   13238:	beq	13160 <tcgetattr@plt+0x1fcc>
   1323c:	mov	r1, fp
   13240:	mov	r0, r4
   13244:	bl	10edc <strcmp@plt>
   13248:	cmp	r0, #0
   1324c:	bne	1322c <tcgetattr@plt+0x2098>
   13250:	ldr	r3, [sp, #4]
   13254:	sub	r3, r3, #1
   13258:	cmp	r3, r5
   1325c:	beq	13ad0 <tcgetattr@plt+0x293c>
   13260:	add	r9, r6, r9
   13264:	ldr	r7, [r9, #4]
   13268:	cmp	r7, #0
   1326c:	beq	13ad0 <tcgetattr@plt+0x293c>
   13270:	ldr	r3, [pc, #3116]	; 13ea4 <tcgetattr@plt+0x2d10>
   13274:	add	r8, r8, r8, lsl #1
   13278:	ldr	r1, [pc, #3116]	; 13eac <tcgetattr@plt+0x2d18>
   1327c:	mov	r0, fp
   13280:	add	r4, r3, r8, lsl #2
   13284:	bl	10edc <strcmp@plt>
   13288:	add	r5, r5, #1
   1328c:	cmp	r0, #0
   13290:	beq	132f0 <tcgetattr@plt+0x215c>
   13294:	mov	r0, fp
   13298:	ldr	r1, [pc, #3088]	; 13eb0 <tcgetattr@plt+0x2d1c>
   1329c:	bl	10edc <strcmp@plt>
   132a0:	cmp	r0, #0
   132a4:	beq	132f0 <tcgetattr@plt+0x215c>
   132a8:	ldrb	r8, [r7]
   132ac:	cmp	r8, #0
   132b0:	beq	13434 <tcgetattr@plt+0x22a0>
   132b4:	ldrb	r9, [r7, #1]
   132b8:	cmp	r9, #0
   132bc:	beq	13434 <tcgetattr@plt+0x22a0>
   132c0:	ldr	r1, [pc, #3052]	; 13eb4 <tcgetattr@plt+0x2d20>
   132c4:	mov	r0, r7
   132c8:	bl	10edc <strcmp@plt>
   132cc:	cmp	r0, #0
   132d0:	beq	132fc <tcgetattr@plt+0x2168>
   132d4:	ldr	r1, [pc, #3036]	; 13eb8 <tcgetattr@plt+0x2d24>
   132d8:	mov	r0, r7
   132dc:	bl	10edc <strcmp@plt>
   132e0:	cmp	r0, #0
   132e4:	beq	132fc <tcgetattr@plt+0x2168>
   132e8:	cmp	r8, #94	; 0x5e
   132ec:	beq	1365c <tcgetattr@plt+0x24c8>
   132f0:	mov	r0, r7
   132f4:	mov	r1, #255	; 0xff
   132f8:	bl	12174 <tcgetattr@plt+0xfe0>
   132fc:	ldr	r3, [r4, #8]
   13300:	ldr	r1, [sp, #88]	; 0x58
   13304:	mov	r2, #1
   13308:	add	r3, r1, r3
   1330c:	strb	r0, [r3, #17]
   13310:	ldr	r3, [sp, #96]	; 0x60
   13314:	strb	r2, [r3]
   13318:	b	130c4 <tcgetattr@plt+0x1f30>
   1331c:	ldr	r1, [pc, #2968]	; 13ebc <tcgetattr@plt+0x2d28>
   13320:	mov	r0, r4
   13324:	bl	10edc <strcmp@plt>
   13328:	cmp	r0, #0
   1332c:	bne	133c8 <tcgetattr@plt+0x2234>
   13330:	ldr	r3, [sp, #4]
   13334:	sub	r3, r3, #1
   13338:	cmp	r3, r5
   1333c:	beq	13a98 <tcgetattr@plt+0x2904>
   13340:	add	r9, r6, r9
   13344:	ldr	r0, [r9, #4]
   13348:	cmp	r0, #0
   1334c:	beq	13a98 <tcgetattr@plt+0x2904>
   13350:	ldr	r3, [sp, #12]
   13354:	add	r5, r5, #1
   13358:	cmp	r3, #0
   1335c:	bne	130c4 <tcgetattr@plt+0x1f30>
   13360:	bl	11d9c <tcgetattr@plt+0xc08>
   13364:	mov	r1, r0
   13368:	ldr	r0, [sp, #88]	; 0x58
   1336c:	bl	10f9c <cfsetospeed@plt>
   13370:	b	131b4 <tcgetattr@plt+0x2020>
   13374:	cmp	r8, #0
   13378:	beq	1343c <tcgetattr@plt+0x22a8>
   1337c:	tst	r2, #4
   13380:	beq	13424 <tcgetattr@plt+0x2290>
   13384:	ldr	r0, [r3, #480]	; 0x1e0
   13388:	ldr	r1, [sp, #88]	; 0x58
   1338c:	str	r3, [sp, #16]
   13390:	bl	11e80 <tcgetattr@plt+0xcec>
   13394:	ldr	r3, [sp, #16]
   13398:	cmp	r0, #0
   1339c:	beq	135d4 <tcgetattr@plt+0x2440>
   133a0:	ldr	r2, [r3, #492]	; 0x1ec
   133a4:	ldr	r1, [r3, #488]	; 0x1e8
   133a8:	ldr	r3, [r0]
   133ac:	orr	r2, r2, r1
   133b0:	bic	r3, r3, r2
   133b4:	str	r3, [r0]
   133b8:	ldr	r3, [sp, #96]	; 0x60
   133bc:	mov	r2, #1
   133c0:	strb	r2, [r3]
   133c4:	b	130c4 <tcgetattr@plt+0x1f30>
   133c8:	ldr	r1, [pc, #2800]	; 13ec0 <tcgetattr@plt+0x2d2c>
   133cc:	mov	r0, r4
   133d0:	bl	10edc <strcmp@plt>
   133d4:	cmp	r0, #0
   133d8:	bne	13480 <tcgetattr@plt+0x22ec>
   133dc:	ldr	r3, [sp, #4]
   133e0:	sub	r3, r3, #1
   133e4:	cmp	r3, r5
   133e8:	beq	139a8 <tcgetattr@plt+0x2814>
   133ec:	add	r9, r6, r9
   133f0:	ldr	r0, [r9, #4]
   133f4:	cmp	r0, #0
   133f8:	beq	139a8 <tcgetattr@plt+0x2814>
   133fc:	ldr	r3, [sp, #12]
   13400:	add	r5, r5, #1
   13404:	cmp	r3, #0
   13408:	bne	130c4 <tcgetattr@plt+0x1f30>
   1340c:	mvn	r1, #-2147483648	; 0x80000000
   13410:	bl	12174 <tcgetattr@plt+0xfe0>
   13414:	ldr	r2, [sp, #20]
   13418:	mvn	r1, #0
   1341c:	bl	1229c <tcgetattr@plt+0x1108>
   13420:	b	130c4 <tcgetattr@plt+0x1f30>
   13424:	ldr	r2, [sp, #96]	; 0x60
   13428:	mov	r3, #1
   1342c:	strb	r3, [r2]
   13430:	b	131e8 <tcgetattr@plt+0x2054>
   13434:	mov	r0, r8
   13438:	b	132fc <tcgetattr@plt+0x2168>
   1343c:	ldr	r0, [r3, #480]	; 0x1e0
   13440:	ldr	r1, [sp, #88]	; 0x58
   13444:	str	r3, [sp, #16]
   13448:	bl	11e80 <tcgetattr@plt+0xcec>
   1344c:	ldr	r3, [sp, #16]
   13450:	cmp	r0, #0
   13454:	beq	13598 <tcgetattr@plt+0x2404>
   13458:	ldr	r2, [r0]
   1345c:	ldr	ip, [r3, #492]	; 0x1ec
   13460:	ldr	r1, [r3, #488]	; 0x1e8
   13464:	bic	r3, r2, ip
   13468:	orr	r3, r3, r1
   1346c:	str	r3, [r0]
   13470:	ldr	r3, [sp, #96]	; 0x60
   13474:	mov	r2, #1
   13478:	strb	r2, [r3]
   1347c:	b	130c4 <tcgetattr@plt+0x1f30>
   13480:	ldr	r1, [pc, #2620]	; 13ec4 <tcgetattr@plt+0x2d30>
   13484:	mov	r0, r4
   13488:	bl	10edc <strcmp@plt>
   1348c:	cmp	r0, #0
   13490:	beq	134a8 <tcgetattr@plt+0x2314>
   13494:	ldr	r1, [pc, #2604]	; 13ec8 <tcgetattr@plt+0x2d34>
   13498:	mov	r0, r4
   1349c:	bl	10edc <strcmp@plt>
   134a0:	cmp	r0, #0
   134a4:	bne	134f4 <tcgetattr@plt+0x2360>
   134a8:	ldr	r3, [sp, #4]
   134ac:	sub	r3, r3, #1
   134b0:	cmp	r3, r5
   134b4:	beq	13b08 <tcgetattr@plt+0x2974>
   134b8:	add	r9, r6, r9
   134bc:	ldr	r0, [r9, #4]
   134c0:	cmp	r0, #0
   134c4:	beq	13b08 <tcgetattr@plt+0x2974>
   134c8:	ldr	r3, [sp, #12]
   134cc:	add	r5, r5, #1
   134d0:	cmp	r3, #0
   134d4:	bne	130c4 <tcgetattr@plt+0x1f30>
   134d8:	mvn	r1, #-2147483648	; 0x80000000
   134dc:	bl	12174 <tcgetattr@plt+0xfe0>
   134e0:	ldr	r2, [sp, #20]
   134e4:	mov	r1, r0
   134e8:	mvn	r0, #0
   134ec:	bl	1229c <tcgetattr@plt+0x1108>
   134f0:	b	130c4 <tcgetattr@plt+0x1f30>
   134f4:	ldr	r1, [pc, #2512]	; 13ecc <tcgetattr@plt+0x2d38>
   134f8:	mov	r0, r4
   134fc:	bl	10edc <strcmp@plt>
   13500:	cmp	r0, #0
   13504:	beq	1362c <tcgetattr@plt+0x2498>
   13508:	ldr	r1, [pc, #2496]	; 13ed0 <tcgetattr@plt+0x2d3c>
   1350c:	mov	r0, r4
   13510:	bl	10edc <strcmp@plt>
   13514:	cmp	r0, #0
   13518:	bne	136b0 <tcgetattr@plt+0x251c>
   1351c:	ldr	r3, [sp, #4]
   13520:	sub	r3, r3, #1
   13524:	cmp	r3, r5
   13528:	beq	13938 <tcgetattr@plt+0x27a4>
   1352c:	add	r9, r9, #4
   13530:	ldr	r0, [r6, r9]
   13534:	cmp	r0, #0
   13538:	beq	13938 <tcgetattr@plt+0x27a4>
   1353c:	mvn	r1, #0
   13540:	bl	12174 <tcgetattr@plt+0xfe0>
   13544:	add	r5, r5, #1
   13548:	bics	r3, r0, #255	; 0xff
   1354c:	ldr	r3, [sp, #88]	; 0x58
   13550:	strb	r0, [r3, #16]
   13554:	beq	13588 <tcgetattr@plt+0x23f4>
   13558:	mov	r2, #5
   1355c:	ldr	r1, [pc, #2416]	; 13ed4 <tcgetattr@plt+0x2d40>
   13560:	mov	r0, #0
   13564:	bl	10f54 <dcgettext@plt>
   13568:	mov	r4, r0
   1356c:	ldr	r0, [r6, r9]
   13570:	bl	16190 <tcgetattr@plt+0x4ffc>
   13574:	mov	r1, #0
   13578:	mov	r2, r4
   1357c:	mov	r3, r0
   13580:	mov	r0, r1
   13584:	bl	10ffc <error@plt>
   13588:	ldr	r2, [sp, #96]	; 0x60
   1358c:	mov	r3, #1
   13590:	strb	r3, [r2]
   13594:	b	130c4 <tcgetattr@plt+0x1f30>
   13598:	ldr	r1, [pc, #2360]	; 13ed8 <tcgetattr@plt+0x2d44>
   1359c:	mov	r0, r7
   135a0:	bl	10edc <strcmp@plt>
   135a4:	cmp	r0, #0
   135a8:	bne	135e8 <tcgetattr@plt+0x2454>
   135ac:	ldr	r3, [sp, #88]	; 0x58
   135b0:	ldr	r1, [sp, #88]	; 0x58
   135b4:	mov	r2, #1
   135b8:	ldr	r3, [r3, #8]
   135bc:	bic	r3, r3, #816	; 0x330
   135c0:	orr	r3, r3, #288	; 0x120
   135c4:	str	r3, [r1, #8]
   135c8:	ldr	r3, [sp, #96]	; 0x60
   135cc:	strb	r2, [r3]
   135d0:	b	130c4 <tcgetattr@plt+0x1f30>
   135d4:	ldr	r1, [pc, #2300]	; 13ed8 <tcgetattr@plt+0x2d44>
   135d8:	mov	r0, r7
   135dc:	bl	10edc <strcmp@plt>
   135e0:	cmp	r0, #0
   135e4:	beq	13604 <tcgetattr@plt+0x2470>
   135e8:	ldr	r1, [pc, #2284]	; 13edc <tcgetattr@plt+0x2d48>
   135ec:	mov	r0, r7
   135f0:	bl	10edc <strcmp@plt>
   135f4:	cmp	r0, #0
   135f8:	bne	1366c <tcgetattr@plt+0x24d8>
   135fc:	cmp	r8, #0
   13600:	beq	135ac <tcgetattr@plt+0x2418>
   13604:	ldr	r3, [sp, #88]	; 0x58
   13608:	ldr	r1, [sp, #88]	; 0x58
   1360c:	mov	r2, #1
   13610:	ldr	r3, [r3, #8]
   13614:	bic	r3, r3, #304	; 0x130
   13618:	orr	r3, r3, #48	; 0x30
   1361c:	str	r3, [r1, #8]
   13620:	ldr	r3, [sp, #96]	; 0x60
   13624:	strb	r2, [r3]
   13628:	b	130c4 <tcgetattr@plt+0x1f30>
   1362c:	ldr	r3, [sp, #12]
   13630:	cmp	r3, #0
   13634:	bne	130c4 <tcgetattr@plt+0x1f30>
   13638:	bl	11df8 <tcgetattr@plt+0xc64>
   1363c:	ldr	r3, [pc, #2204]	; 13ee0 <tcgetattr@plt+0x2d4c>
   13640:	ldr	r2, [sp, #12]
   13644:	ldr	r1, [sp, #20]
   13648:	str	r2, [r3]
   1364c:	str	r0, [r3, #4]
   13650:	mov	r0, r2
   13654:	bl	12370 <tcgetattr@plt+0x11dc>
   13658:	b	130c4 <tcgetattr@plt+0x1f30>
   1365c:	cmp	r9, #63	; 0x3f
   13660:	bicne	r0, r9, #96	; 0x60
   13664:	moveq	r0, #127	; 0x7f
   13668:	b	132fc <tcgetattr@plt+0x2168>
   1366c:	ldr	r1, [pc, #2160]	; 13ee4 <tcgetattr@plt+0x2d50>
   13670:	mov	r0, r7
   13674:	bl	10edc <strcmp@plt>
   13678:	cmp	r0, #0
   1367c:	bne	136ec <tcgetattr@plt+0x2558>
   13680:	cmp	r8, #0
   13684:	bne	13604 <tcgetattr@plt+0x2470>
   13688:	ldr	r3, [sp, #88]	; 0x58
   1368c:	ldr	r1, [sp, #88]	; 0x58
   13690:	mov	r2, #1
   13694:	ldr	r3, [r3, #8]
   13698:	bic	r3, r3, #816	; 0x330
   1369c:	orr	r3, r3, #800	; 0x320
   136a0:	str	r3, [r1, #8]
   136a4:	ldr	r3, [sp, #96]	; 0x60
   136a8:	strb	r2, [r3]
   136ac:	b	130c4 <tcgetattr@plt+0x1f30>
   136b0:	ldr	r1, [pc, #2096]	; 13ee8 <tcgetattr@plt+0x2d54>
   136b4:	mov	r0, r4
   136b8:	bl	10edc <strcmp@plt>
   136bc:	cmp	r0, #0
   136c0:	bne	1376c <tcgetattr@plt+0x25d8>
   136c4:	ldr	r3, [sp, #12]
   136c8:	cmp	r3, #0
   136cc:	bne	130c4 <tcgetattr@plt+0x1f30>
   136d0:	bl	11df8 <tcgetattr@plt+0xc64>
   136d4:	ldr	r3, [pc, #2052]	; 13ee0 <tcgetattr@plt+0x2d4c>
   136d8:	ldr	r1, [sp, #12]
   136dc:	str	r0, [r3, #4]
   136e0:	ldr	r0, [sp, #88]	; 0x58
   136e4:	bl	11fd8 <tcgetattr@plt+0xe44>
   136e8:	b	130c4 <tcgetattr@plt+0x1f30>
   136ec:	ldr	r1, [pc, #2040]	; 13eec <tcgetattr@plt+0x2d58>
   136f0:	mov	r0, r7
   136f4:	bl	10edc <strcmp@plt>
   136f8:	cmp	r0, #0
   136fc:	beq	13854 <tcgetattr@plt+0x26c0>
   13700:	ldr	r1, [pc, #2024]	; 13ef0 <tcgetattr@plt+0x2d5c>
   13704:	mov	r0, r7
   13708:	bl	10edc <strcmp@plt>
   1370c:	cmp	r0, #0
   13710:	beq	138bc <tcgetattr@plt+0x2728>
   13714:	ldr	r1, [pc, #2008]	; 13ef4 <tcgetattr@plt+0x2d60>
   13718:	mov	r0, r7
   1371c:	bl	10edc <strcmp@plt>
   13720:	cmp	r0, #0
   13724:	ldreq	r3, [pc, #1912]	; 13ea4 <tcgetattr@plt+0x2d10>
   13728:	beq	137b4 <tcgetattr@plt+0x2620>
   1372c:	ldr	r1, [pc, #1988]	; 13ef8 <tcgetattr@plt+0x2d64>
   13730:	mov	r0, r7
   13734:	bl	10edc <strcmp@plt>
   13738:	cmp	r0, #0
   1373c:	bne	138e0 <tcgetattr@plt+0x274c>
   13740:	ldr	r3, [sp, #88]	; 0x58
   13744:	ldr	r1, [sp, #88]	; 0x58
   13748:	cmp	r8, #0
   1374c:	ldr	r3, [r3, #12]
   13750:	mov	r2, #1
   13754:	orrne	r3, r3, #2
   13758:	biceq	r3, r3, #2
   1375c:	str	r3, [r1, #12]
   13760:	ldr	r3, [sp, #96]	; 0x60
   13764:	strb	r2, [r3]
   13768:	b	130c4 <tcgetattr@plt+0x1f30>
   1376c:	mov	r0, r4
   13770:	bl	11d9c <tcgetattr@plt+0xc08>
   13774:	cmn	r0, #1
   13778:	mov	r7, r0
   1377c:	beq	139e0 <tcgetattr@plt+0x284c>
   13780:	ldr	r3, [sp, #12]
   13784:	cmp	r3, #0
   13788:	bne	130c4 <tcgetattr@plt+0x1f30>
   1378c:	mov	r1, r0
   13790:	ldr	r0, [sp, #88]	; 0x58
   13794:	bl	11098 <cfsetispeed@plt>
   13798:	mov	r1, r7
   1379c:	b	13368 <tcgetattr@plt+0x21d4>
   137a0:	ldr	r2, [r3, #-4]
   137a4:	ldr	r0, [sp, #88]	; 0x58
   137a8:	ldrb	r1, [r3, #-8]
   137ac:	add	r2, r0, r2
   137b0:	strb	r1, [r2, #17]
   137b4:	ldr	r2, [r3], #12
   137b8:	cmp	r2, #0
   137bc:	bne	137a0 <tcgetattr@plt+0x260c>
   137c0:	ldr	r4, [sp, #8]
   137c4:	ldr	r7, [sp, #88]	; 0x58
   137c8:	b	137fc <tcgetattr@plt+0x2668>
   137cc:	mov	r1, r7
   137d0:	ldr	r0, [r4, #4]
   137d4:	bl	11e80 <tcgetattr@plt+0xcec>
   137d8:	cmp	r0, #0
   137dc:	beq	13894 <tcgetattr@plt+0x2700>
   137e0:	ldr	r1, [r4, #16]
   137e4:	ldr	r3, [r0]
   137e8:	ldr	r2, [r4, #12]
   137ec:	bic	r3, r3, r1
   137f0:	orr	r3, r3, r2
   137f4:	str	r3, [r0]
   137f8:	add	r4, r4, #20
   137fc:	ldr	r3, [r4]
   13800:	cmp	r3, #0
   13804:	beq	13588 <tcgetattr@plt+0x23f4>
   13808:	ldrb	r3, [r4, #8]
   1380c:	tst	r3, #16
   13810:	bne	137f8 <tcgetattr@plt+0x2664>
   13814:	tst	r3, #1
   13818:	bne	137cc <tcgetattr@plt+0x2638>
   1381c:	tst	r3, #2
   13820:	beq	137f8 <tcgetattr@plt+0x2664>
   13824:	mov	r1, r7
   13828:	ldr	r0, [r4, #4]
   1382c:	bl	11e80 <tcgetattr@plt+0xcec>
   13830:	cmp	r0, #0
   13834:	beq	138a8 <tcgetattr@plt+0x2714>
   13838:	ldr	r2, [r4, #16]
   1383c:	ldr	r1, [r4, #12]
   13840:	ldr	r3, [r0]
   13844:	orr	r2, r2, r1
   13848:	bic	r3, r3, r2
   1384c:	str	r3, [r0]
   13850:	b	137f8 <tcgetattr@plt+0x2664>
   13854:	ldr	r3, [sp, #88]	; 0x58
   13858:	cmp	r8, #0
   1385c:	ldr	r1, [sp, #88]	; 0x58
   13860:	ldm	r3, {r2, r3}
   13864:	bicne	r2, r2, #448	; 0x1c0
   13868:	bicne	r3, r3, #44	; 0x2c
   1386c:	orrne	r2, r2, #256	; 0x100
   13870:	orrne	r3, r3, #4
   13874:	biceq	r2, r2, #256	; 0x100
   13878:	biceq	r3, r3, #4
   1387c:	str	r3, [r1, #4]
   13880:	ldr	r3, [sp, #96]	; 0x60
   13884:	str	r2, [r1]
   13888:	mov	r2, #1
   1388c:	strb	r2, [r3]
   13890:	b	130c4 <tcgetattr@plt+0x1f30>
   13894:	ldr	r3, [pc, #1632]	; 13efc <tcgetattr@plt+0x2d68>
   13898:	ldr	r2, [pc, #1632]	; 13f00 <tcgetattr@plt+0x2d6c>
   1389c:	ldr	r1, [pc, #1632]	; 13f04 <tcgetattr@plt+0x2d70>
   138a0:	ldr	r0, [pc, #1632]	; 13f08 <tcgetattr@plt+0x2d74>
   138a4:	bl	11188 <__assert_fail@plt>
   138a8:	ldr	r3, [pc, #1612]	; 13efc <tcgetattr@plt+0x2d68>
   138ac:	ldr	r2, [pc, #1624]	; 13f0c <tcgetattr@plt+0x2d78>
   138b0:	ldr	r1, [pc, #1612]	; 13f04 <tcgetattr@plt+0x2d70>
   138b4:	ldr	r0, [pc, #1612]	; 13f08 <tcgetattr@plt+0x2d74>
   138b8:	bl	11188 <__assert_fail@plt>
   138bc:	ldr	r1, [sp, #88]	; 0x58
   138c0:	mov	r3, #127	; 0x7f
   138c4:	mov	r2, #21
   138c8:	strb	r2, [r1, #20]
   138cc:	ldr	r2, [sp, #96]	; 0x60
   138d0:	strb	r3, [r1, #19]
   138d4:	mov	r3, #1
   138d8:	strb	r3, [r2]
   138dc:	b	130c4 <tcgetattr@plt+0x1f30>
   138e0:	ldr	r1, [pc, #1576]	; 13f10 <tcgetattr@plt+0x2d7c>
   138e4:	mov	r0, r7
   138e8:	bl	10edc <strcmp@plt>
   138ec:	cmp	r0, #0
   138f0:	bne	13b40 <tcgetattr@plt+0x29ac>
   138f4:	ldr	r2, [sp, #88]	; 0x58
   138f8:	ldr	r3, [sp, #88]	; 0x58
   138fc:	ldr	r1, [sp, #88]	; 0x58
   13900:	ldr	r2, [r2]
   13904:	ldr	r3, [r3, #8]
   13908:	cmp	r8, #0
   1390c:	orrne	r2, r2, #32
   13910:	biceq	r2, r2, #32
   13914:	bic	r3, r3, #304	; 0x130
   13918:	str	r2, [r1]
   1391c:	ldr	r2, [sp, #96]	; 0x60
   13920:	orrne	r3, r3, #288	; 0x120
   13924:	orreq	r3, r3, #48	; 0x30
   13928:	str	r3, [r1, #8]
   1392c:	mov	r3, #1
   13930:	strb	r3, [r2]
   13934:	b	130c4 <tcgetattr@plt+0x1f30>
   13938:	mov	r2, #5
   1393c:	ldr	r1, [pc, #1488]	; 13f14 <tcgetattr@plt+0x2d80>
   13940:	mov	r0, #0
   13944:	bl	10f54 <dcgettext@plt>
   13948:	mov	r5, r0
   1394c:	mov	r0, r4
   13950:	bl	16190 <tcgetattr@plt+0x4ffc>
   13954:	mov	r1, #0
   13958:	mov	r2, r5
   1395c:	mov	r3, r0
   13960:	mov	r0, r1
   13964:	bl	10ffc <error@plt>
   13968:	mov	r0, #1
   1396c:	bl	12464 <tcgetattr@plt+0x12d0>
   13970:	mov	r2, #5
   13974:	ldr	r1, [pc, #1432]	; 13f14 <tcgetattr@plt+0x2d80>
   13978:	mov	r0, #0
   1397c:	bl	10f54 <dcgettext@plt>
   13980:	mov	r5, r0
   13984:	mov	r0, r4
   13988:	bl	16190 <tcgetattr@plt+0x4ffc>
   1398c:	mov	r1, #0
   13990:	mov	r2, r5
   13994:	mov	r3, r0
   13998:	mov	r0, r1
   1399c:	bl	10ffc <error@plt>
   139a0:	mov	r0, #1
   139a4:	bl	12464 <tcgetattr@plt+0x12d0>
   139a8:	mov	r2, #5
   139ac:	ldr	r1, [pc, #1376]	; 13f14 <tcgetattr@plt+0x2d80>
   139b0:	mov	r0, #0
   139b4:	bl	10f54 <dcgettext@plt>
   139b8:	mov	r5, r0
   139bc:	mov	r0, r4
   139c0:	bl	16190 <tcgetattr@plt+0x4ffc>
   139c4:	mov	r1, #0
   139c8:	mov	r2, r5
   139cc:	mov	r3, r0
   139d0:	mov	r0, r1
   139d4:	bl	10ffc <error@plt>
   139d8:	mov	r0, #1
   139dc:	bl	12464 <tcgetattr@plt+0x12d0>
   139e0:	bl	110b0 <__errno_location@plt>
   139e4:	mov	r9, #0
   139e8:	mov	fp, r9
   139ec:	mov	r7, r4
   139f0:	mov	r3, #16
   139f4:	mov	r8, r0
   139f8:	b	13a3c <tcgetattr@plt+0x28a8>
   139fc:	ldr	r1, [sp, #28]
   13a00:	sub	r2, r1, r7
   13a04:	ldrb	ip, [r1]
   13a08:	clz	r2, r2
   13a0c:	lsr	r2, r2, #5
   13a10:	cmp	ip, #58	; 0x3a
   13a14:	orrne	r2, r2, #1
   13a18:	cmp	r2, #0
   13a1c:	bne	13a60 <tcgetattr@plt+0x28cc>
   13a20:	add	r3, sp, #32
   13a24:	add	r7, r1, #1
   13a28:	str	r0, [r3, r9, lsl #2]
   13a2c:	add	r9, r9, #1
   13a30:	cmp	r9, #4
   13a34:	ldr	r3, [sp, #8]
   13a38:	beq	13ba8 <tcgetattr@plt+0x2a14>
   13a3c:	mov	r2, r3
   13a40:	str	fp, [r8]
   13a44:	add	r1, sp, #28
   13a48:	mov	r0, r7
   13a4c:	str	r3, [sp, #8]
   13a50:	bl	11074 <strtoul@plt>
   13a54:	ldr	r2, [r8]
   13a58:	cmp	r2, #0
   13a5c:	beq	139fc <tcgetattr@plt+0x2868>
   13a60:	mov	r2, #5
   13a64:	ldr	r1, [pc, #1076]	; 13ea0 <tcgetattr@plt+0x2d0c>
   13a68:	mov	r0, #0
   13a6c:	bl	10f54 <dcgettext@plt>
   13a70:	mov	r5, r0
   13a74:	mov	r0, r4
   13a78:	bl	16190 <tcgetattr@plt+0x4ffc>
   13a7c:	mov	r1, #0
   13a80:	mov	r2, r5
   13a84:	mov	r3, r0
   13a88:	mov	r0, r1
   13a8c:	bl	10ffc <error@plt>
   13a90:	mov	r0, #1
   13a94:	bl	12464 <tcgetattr@plt+0x12d0>
   13a98:	mov	r2, #5
   13a9c:	ldr	r1, [pc, #1136]	; 13f14 <tcgetattr@plt+0x2d80>
   13aa0:	mov	r0, #0
   13aa4:	bl	10f54 <dcgettext@plt>
   13aa8:	mov	r5, r0
   13aac:	mov	r0, r4
   13ab0:	bl	16190 <tcgetattr@plt+0x4ffc>
   13ab4:	mov	r1, #0
   13ab8:	mov	r2, r5
   13abc:	mov	r3, r0
   13ac0:	mov	r0, r1
   13ac4:	bl	10ffc <error@plt>
   13ac8:	mov	r0, #1
   13acc:	bl	12464 <tcgetattr@plt+0x12d0>
   13ad0:	mov	r2, #5
   13ad4:	ldr	r1, [pc, #1080]	; 13f14 <tcgetattr@plt+0x2d80>
   13ad8:	mov	r0, #0
   13adc:	bl	10f54 <dcgettext@plt>
   13ae0:	mov	r5, r0
   13ae4:	mov	r0, r4
   13ae8:	bl	16190 <tcgetattr@plt+0x4ffc>
   13aec:	mov	r1, #0
   13af0:	mov	r2, r5
   13af4:	mov	r3, r0
   13af8:	mov	r0, r1
   13afc:	bl	10ffc <error@plt>
   13b00:	mov	r0, #1
   13b04:	bl	12464 <tcgetattr@plt+0x12d0>
   13b08:	mov	r2, #5
   13b0c:	ldr	r1, [pc, #1024]	; 13f14 <tcgetattr@plt+0x2d80>
   13b10:	mov	r0, #0
   13b14:	bl	10f54 <dcgettext@plt>
   13b18:	mov	r5, r0
   13b1c:	mov	r0, r4
   13b20:	bl	16190 <tcgetattr@plt+0x4ffc>
   13b24:	mov	r1, #0
   13b28:	mov	r2, r5
   13b2c:	mov	r3, r0
   13b30:	mov	r0, r1
   13b34:	bl	10ffc <error@plt>
   13b38:	mov	r0, #1
   13b3c:	bl	12464 <tcgetattr@plt+0x12d0>
   13b40:	ldr	r1, [pc, #976]	; 13f18 <tcgetattr@plt+0x2d84>
   13b44:	mov	r0, r7
   13b48:	bl	10edc <strcmp@plt>
   13b4c:	cmp	r0, #0
   13b50:	bne	13c54 <tcgetattr@plt+0x2ac0>
   13b54:	ldr	r2, [sp, #88]	; 0x58
   13b58:	ldr	r3, [sp, #88]	; 0x58
   13b5c:	ldr	r0, [sp, #88]	; 0x58
   13b60:	ldr	r1, [r2]
   13b64:	ldr	r2, [r2, #4]
   13b68:	cmp	r8, #0
   13b6c:	ldr	r3, [r3, #8]
   13b70:	orrne	r2, r2, #1
   13b74:	biceq	r2, r2, #1
   13b78:	bic	r3, r3, #304	; 0x130
   13b7c:	str	r2, [r0, #4]
   13b80:	ldr	r2, [sp, #96]	; 0x60
   13b84:	orrne	r3, r3, #288	; 0x120
   13b88:	orreq	r3, r3, #48	; 0x30
   13b8c:	str	r3, [r0, #8]
   13b90:	orrne	r1, r1, #32
   13b94:	biceq	r1, r1, #32
   13b98:	mov	r3, #1
   13b9c:	str	r1, [r0]
   13ba0:	strb	r3, [r2]
   13ba4:	b	130c4 <tcgetattr@plt+0x1f30>
   13ba8:	ldr	ip, [sp, #88]	; 0x58
   13bac:	mov	r9, r2
   13bb0:	mov	r3, r2
   13bb4:	ldr	r2, [sp, #32]
   13bb8:	ldr	r0, [sp, #36]	; 0x24
   13bbc:	ldr	r1, [sp, #40]	; 0x28
   13bc0:	str	r2, [ip]
   13bc4:	ldr	r2, [sp, #44]	; 0x2c
   13bc8:	str	r0, [ip, #4]
   13bcc:	add	fp, ip, #16
   13bd0:	str	r1, [ip, #8]
   13bd4:	str	r2, [ip, #12]
   13bd8:	b	13c20 <tcgetattr@plt+0x2a8c>
   13bdc:	ldr	r2, [sp, #28]
   13be0:	sub	r1, r2, r7
   13be4:	ldrb	lr, [r2]
   13be8:	clz	r1, r1
   13bec:	lsr	r1, r1, #5
   13bf0:	cmp	lr, ip
   13bf4:	orrne	r1, r1, #1
   13bf8:	cmp	r1, #0
   13bfc:	bne	13a60 <tcgetattr@plt+0x28cc>
   13c00:	bics	r3, r0, #255	; 0xff
   13c04:	bne	13a60 <tcgetattr@plt+0x28cc>
   13c08:	add	r9, r9, #1
   13c0c:	cmp	r9, #32
   13c10:	strb	r0, [fp, #1]!
   13c14:	add	r7, r2, #1
   13c18:	ldr	r3, [sp, #8]
   13c1c:	beq	13588 <tcgetattr@plt+0x23f4>
   13c20:	mov	r2, #16
   13c24:	str	r3, [r8]
   13c28:	add	r1, sp, #28
   13c2c:	mov	r0, r7
   13c30:	str	r3, [sp, #8]
   13c34:	bl	11074 <strtoul@plt>
   13c38:	ldr	r2, [r8]
   13c3c:	cmp	r9, #31
   13c40:	movne	ip, #58	; 0x3a
   13c44:	moveq	ip, #0
   13c48:	cmp	r2, #0
   13c4c:	beq	13bdc <tcgetattr@plt+0x2a48>
   13c50:	b	13a60 <tcgetattr@plt+0x28cc>
   13c54:	ldr	r1, [pc, #704]	; 13f1c <tcgetattr@plt+0x2d88>
   13c58:	mov	r0, r7
   13c5c:	bl	10edc <strcmp@plt>
   13c60:	cmp	r0, #0
   13c64:	beq	13c7c <tcgetattr@plt+0x2ae8>
   13c68:	ldr	r1, [pc, #688]	; 13f20 <tcgetattr@plt+0x2d8c>
   13c6c:	mov	r0, r7
   13c70:	bl	10edc <strcmp@plt>
   13c74:	cmp	r0, #0
   13c78:	bne	13ce0 <tcgetattr@plt+0x2b4c>
   13c7c:	ldrb	r3, [r7]
   13c80:	cmp	r3, #114	; 0x72
   13c84:	beq	13d20 <tcgetattr@plt+0x2b8c>
   13c88:	cmp	r3, #99	; 0x63
   13c8c:	moveq	r3, r8
   13c90:	orrne	r3, r8, #1
   13c94:	cmp	r3, #0
   13c98:	bne	13d28 <tcgetattr@plt+0x2b94>
   13c9c:	ldr	r2, [sp, #88]	; 0x58
   13ca0:	ldr	r3, [sp, #88]	; 0x58
   13ca4:	ldr	r0, [sp, #88]	; 0x58
   13ca8:	ldr	r1, [r2, #4]
   13cac:	ldr	r2, [r2, #12]
   13cb0:	ldr	r3, [r3]
   13cb4:	orr	r2, r2, #3
   13cb8:	str	r2, [r0, #12]
   13cbc:	orr	r3, r3, #1312	; 0x520
   13cc0:	ldr	r2, [sp, #96]	; 0x60
   13cc4:	orr	r3, r3, #6
   13cc8:	str	r3, [r0]
   13ccc:	orr	r1, r1, #1
   13cd0:	mov	r3, #1
   13cd4:	str	r1, [r0, #4]
   13cd8:	strb	r3, [r2]
   13cdc:	b	130c4 <tcgetattr@plt+0x1f30>
   13ce0:	ldr	r1, [pc, #572]	; 13f24 <tcgetattr@plt+0x2d90>
   13ce4:	mov	r0, r7
   13ce8:	bl	10edc <strcmp@plt>
   13cec:	cmp	r0, #0
   13cf0:	bne	13d68 <tcgetattr@plt+0x2bd4>
   13cf4:	ldr	r3, [sp, #88]	; 0x58
   13cf8:	ldr	r1, [sp, #88]	; 0x58
   13cfc:	cmp	r8, #0
   13d00:	ldr	r3, [r3]
   13d04:	mov	r2, #1
   13d08:	orrne	r3, r3, #2048	; 0x800
   13d0c:	biceq	r3, r3, #2048	; 0x800
   13d10:	str	r3, [r1]
   13d14:	ldr	r3, [sp, #96]	; 0x60
   13d18:	strb	r2, [r3]
   13d1c:	b	130c4 <tcgetattr@plt+0x1f30>
   13d20:	cmp	r8, #0
   13d24:	bne	13c9c <tcgetattr@plt+0x2b08>
   13d28:	ldr	r3, [sp, #88]	; 0x58
   13d2c:	ldr	r1, [sp, #88]	; 0x58
   13d30:	ldr	r2, [r3, #4]
   13d34:	ldr	r3, [r3, #12]
   13d38:	bic	r2, r2, #1
   13d3c:	str	r2, [r1, #4]
   13d40:	mov	r2, #0
   13d44:	str	r2, [r1]
   13d48:	strb	r2, [r1, #22]
   13d4c:	ldr	r2, [sp, #96]	; 0x60
   13d50:	bic	r3, r3, #7
   13d54:	str	r3, [r1, #12]
   13d58:	mov	r3, #1
   13d5c:	strb	r3, [r1, #23]
   13d60:	strb	r3, [r2]
   13d64:	b	130c4 <tcgetattr@plt+0x1f30>
   13d68:	ldr	r1, [pc, #440]	; 13f28 <tcgetattr@plt+0x2d94>
   13d6c:	mov	r0, r7
   13d70:	bl	10edc <strcmp@plt>
   13d74:	cmp	r0, #0
   13d78:	bne	13da8 <tcgetattr@plt+0x2c14>
   13d7c:	ldr	r3, [sp, #88]	; 0x58
   13d80:	ldr	r1, [sp, #88]	; 0x58
   13d84:	cmp	r8, #0
   13d88:	ldr	r3, [r3, #4]
   13d8c:	mov	r2, #1
   13d90:	orrne	r3, r3, #6144	; 0x1800
   13d94:	biceq	r3, r3, #6144	; 0x1800
   13d98:	str	r3, [r1, #4]
   13d9c:	ldr	r3, [sp, #96]	; 0x60
   13da0:	strb	r2, [r3]
   13da4:	b	130c4 <tcgetattr@plt+0x1f30>
   13da8:	ldr	r1, [pc, #380]	; 13f2c <tcgetattr@plt+0x2d98>
   13dac:	mov	r0, r7
   13db0:	bl	10edc <strcmp@plt>
   13db4:	cmp	r0, #0
   13db8:	beq	13dd0 <tcgetattr@plt+0x2c3c>
   13dbc:	ldr	r1, [pc, #364]	; 13f30 <tcgetattr@plt+0x2d9c>
   13dc0:	mov	r0, r7
   13dc4:	bl	10edc <strcmp@plt>
   13dc8:	cmp	r0, #0
   13dcc:	bne	13e08 <tcgetattr@plt+0x2c74>
   13dd0:	ldr	r3, [sp, #88]	; 0x58
   13dd4:	ldr	r0, [sp, #88]	; 0x58
   13dd8:	cmp	r8, #0
   13ddc:	ldr	r1, [r3, #12]
   13de0:	ldm	r3, {r2, r3}
   13de4:	bicne	r1, r1, #4
   13de8:	orreq	r1, r1, #4
   13dec:	str	r1, [r0, #12]
   13df0:	bicne	r2, r2, #512	; 0x200
   13df4:	bicne	r3, r3, #2
   13df8:	orreq	r2, r2, #512	; 0x200
   13dfc:	orreq	r3, r3, #2
   13e00:	mov	r1, r0
   13e04:	b	1387c <tcgetattr@plt+0x26e8>
   13e08:	ldr	r1, [pc, #292]	; 13f34 <tcgetattr@plt+0x2da0>
   13e0c:	mov	r0, r7
   13e10:	bl	10edc <strcmp@plt>
   13e14:	cmp	r0, #0
   13e18:	beq	13e64 <tcgetattr@plt+0x2cd0>
   13e1c:	mov	r0, r7
   13e20:	ldr	r1, [pc, #272]	; 13f38 <tcgetattr@plt+0x2da4>
   13e24:	bl	10edc <strcmp@plt>
   13e28:	cmp	r0, #0
   13e2c:	bne	13588 <tcgetattr@plt+0x23f4>
   13e30:	ldr	r3, [sp, #88]	; 0x58
   13e34:	ldr	r1, [sp, #88]	; 0x58
   13e38:	ldr	r2, [r3, #12]
   13e3c:	ldr	r3, [r3]
   13e40:	orr	r2, r2, #2576	; 0xa10
   13e44:	bic	r3, r3, #2048	; 0x800
   13e48:	str	r2, [r1, #12]
   13e4c:	mov	r2, #3
   13e50:	str	r3, [r1]
   13e54:	strb	r2, [r1, #17]
   13e58:	mov	r3, #127	; 0x7f
   13e5c:	mov	r2, #21
   13e60:	b	138c8 <tcgetattr@plt+0x2734>
   13e64:	ldr	r3, [sp, #88]	; 0x58
   13e68:	ldr	r1, [sp, #88]	; 0x58
   13e6c:	mov	r2, #1
   13e70:	ldr	r3, [r3, #12]
   13e74:	orr	r3, r3, #2576	; 0xa10
   13e78:	str	r3, [r1, #12]
   13e7c:	ldr	r3, [sp, #96]	; 0x60
   13e80:	strb	r2, [r3]
   13e84:	b	130c4 <tcgetattr@plt+0x1f30>
   13e88:	andeq	ip, r2, r0, lsl r1
   13e8c:	andeq	fp, r1, r4, lsl r0
   13e90:	andeq	r8, r1, r4, asr #12
   13e94:	andeq	fp, r1, r4
   13e98:	andeq	r8, r1, r8, ror #8
   13e9c:	ldrdeq	fp, [r1], -ip
   13ea0:	muleq	r1, r8, r0
   13ea4:	andeq	r8, r1, ip, asr #26
   13ea8:	andeq	fp, r1, ip
   13eac:	andeq	fp, r1, r4, asr #1
   13eb0:	andeq	fp, r1, r8, asr #1
   13eb4:	ldrdeq	fp, [r1], -r0
   13eb8:	ldrdeq	fp, [r1], -r4
   13ebc:	andeq	fp, r1, r4, ror #1
   13ec0:	andeq	fp, r1, ip, ror #1
   13ec4:	strdeq	fp, [r1], -r4
   13ec8:	strdeq	fp, [r1], -ip
   13ecc:	andeq	fp, r1, r4, lsl #2
   13ed0:	andeq	fp, r1, ip, lsl #2
   13ed4:	andeq	fp, r1, r4, lsl r1
   13ed8:	andeq	fp, r1, r8, lsr r1
   13edc:	andeq	fp, r1, ip, lsl r0
   13ee0:	andeq	ip, r2, r8, lsl #3
   13ee4:	andeq	fp, r1, r4, lsr #32
   13ee8:	andeq	fp, r1, r0, lsr r1
   13eec:	andeq	fp, r1, r0, ror r6
   13ef0:	andeq	fp, r1, ip, lsr #32
   13ef4:	andeq	fp, r1, r0, lsr r0
   13ef8:	andeq	fp, r1, ip, asr #32
   13efc:	andeq	r8, r1, r0, lsr lr
   13f00:	andeq	r0, r0, ip, asr #17
   13f04:	andeq	fp, r1, r8, lsr r0
   13f08:	andeq	fp, r1, r4, asr #32
   13f0c:	ldrdeq	r0, [r0], -r2
   13f10:	andeq	fp, r1, r4, asr r0
   13f14:	andeq	fp, r1, ip, lsr #1
   13f18:	andeq	fp, r1, ip, asr r0
   13f1c:	andeq	fp, r1, r4, rrx
   13f20:	andeq	fp, r1, r8, rrx
   13f24:	andeq	fp, r1, r0, ror r0
   13f28:	andeq	fp, r1, r8, ror r0
   13f2c:	andeq	fp, r1, r0, lsl #1
   13f30:	andeq	fp, r1, r8, lsl #1
   13f34:	muleq	r1, r0, r0
   13f38:	muleq	r1, r4, r0
   13f3c:	ldr	r3, [pc, #4]	; 13f48 <tcgetattr@plt+0x2db4>
   13f40:	str	r0, [r3]
   13f44:	bx	lr
   13f48:	andeq	ip, r2, r0, asr r2
   13f4c:	ldr	r3, [pc, #4]	; 13f58 <tcgetattr@plt+0x2dc4>
   13f50:	strb	r0, [r3, #4]
   13f54:	bx	lr
   13f58:	andeq	ip, r2, r0, asr r2
   13f5c:	ldr	r3, [pc, #192]	; 14024 <tcgetattr@plt+0x2e90>
   13f60:	push	{r4, r5, r6, lr}
   13f64:	sub	sp, sp, #8
   13f68:	ldr	r0, [r3]
   13f6c:	bl	17a3c <tcgetattr@plt+0x68a8>
   13f70:	cmp	r0, #0
   13f74:	beq	13f98 <tcgetattr@plt+0x2e04>
   13f78:	ldr	r4, [pc, #168]	; 14028 <tcgetattr@plt+0x2e94>
   13f7c:	ldrb	r3, [r4, #4]
   13f80:	cmp	r3, #0
   13f84:	beq	13fb4 <tcgetattr@plt+0x2e20>
   13f88:	bl	110b0 <__errno_location@plt>
   13f8c:	ldr	r3, [r0]
   13f90:	cmp	r3, #32
   13f94:	bne	13fb4 <tcgetattr@plt+0x2e20>
   13f98:	ldr	r3, [pc, #140]	; 1402c <tcgetattr@plt+0x2e98>
   13f9c:	ldr	r0, [r3]
   13fa0:	bl	17a3c <tcgetattr@plt+0x68a8>
   13fa4:	cmp	r0, #0
   13fa8:	bne	13ffc <tcgetattr@plt+0x2e68>
   13fac:	add	sp, sp, #8
   13fb0:	pop	{r4, r5, r6, pc}
   13fb4:	mov	r2, #5
   13fb8:	ldr	r1, [pc, #112]	; 14030 <tcgetattr@plt+0x2e9c>
   13fbc:	mov	r0, #0
   13fc0:	bl	10f54 <dcgettext@plt>
   13fc4:	ldr	r4, [r4]
   13fc8:	cmp	r4, #0
   13fcc:	mov	r5, r0
   13fd0:	beq	14008 <tcgetattr@plt+0x2e74>
   13fd4:	bl	110b0 <__errno_location@plt>
   13fd8:	ldr	r6, [r0]
   13fdc:	mov	r0, r4
   13fe0:	bl	15ff8 <tcgetattr@plt+0x4e64>
   13fe4:	mov	r1, r6
   13fe8:	str	r5, [sp]
   13fec:	ldr	r2, [pc, #64]	; 14034 <tcgetattr@plt+0x2ea0>
   13ff0:	mov	r3, r0
   13ff4:	mov	r0, #0
   13ff8:	bl	10ffc <error@plt>
   13ffc:	ldr	r3, [pc, #52]	; 14038 <tcgetattr@plt+0x2ea4>
   14000:	ldr	r0, [r3]
   14004:	bl	10f0c <_exit@plt>
   14008:	bl	110b0 <__errno_location@plt>
   1400c:	mov	r3, r5
   14010:	ldr	r2, [pc, #36]	; 1403c <tcgetattr@plt+0x2ea8>
   14014:	ldr	r1, [r0]
   14018:	mov	r0, r4
   1401c:	bl	10ffc <error@plt>
   14020:	b	13ffc <tcgetattr@plt+0x2e68>
   14024:	andeq	ip, r2, r4, ror r1
   14028:	andeq	ip, r2, r0, asr r2
   1402c:	andeq	ip, r2, r0, ror r1
   14030:	andeq	fp, r1, r0, ror #13
   14034:	andeq	fp, r1, ip, ror #13
   14038:	andeq	ip, r2, r8, lsl r1
   1403c:	strdeq	fp, [r1], -r0
   14040:	push	{r1, r2, r3}
   14044:	push	{r4, r5, r6, r7, lr}
   14048:	sub	sp, sp, #8
   1404c:	add	r3, sp, #32
   14050:	ldr	r1, [sp, #28]
   14054:	str	r3, [sp, #4]
   14058:	cmp	r1, #0
   1405c:	beq	140f4 <tcgetattr@plt+0x2f60>
   14060:	ldr	r2, [pc, #412]	; 14204 <tcgetattr@plt+0x3070>
   14064:	mov	r5, r0
   14068:	cmp	r1, r2
   1406c:	bne	140b8 <tcgetattr@plt+0x2f24>
   14070:	ldr	r6, [pc, #400]	; 14208 <tcgetattr@plt+0x3074>
   14074:	ldr	r7, [r3]
   14078:	add	r2, sp, #36	; 0x24
   1407c:	ldr	r3, [r6]
   14080:	str	r2, [sp, #4]
   14084:	cmp	r3, #0
   14088:	mov	r2, r7
   1408c:	blt	141b8 <tcgetattr@plt+0x3024>
   14090:	bl	1111c <fcntl64@plt>
   14094:	subs	r4, r0, #0
   14098:	blt	1413c <tcgetattr@plt+0x2fa8>
   1409c:	mov	r3, #1
   140a0:	str	r3, [r6]
   140a4:	mov	r0, r4
   140a8:	add	sp, sp, #8
   140ac:	pop	{r4, r5, r6, r7, lr}
   140b0:	add	sp, sp, #12
   140b4:	bx	lr
   140b8:	cmp	r1, #11
   140bc:	beq	140e4 <tcgetattr@plt+0x2f50>
   140c0:	bgt	14104 <tcgetattr@plt+0x2f70>
   140c4:	cmp	r1, #3
   140c8:	beq	140e4 <tcgetattr@plt+0x2f50>
   140cc:	ble	141f8 <tcgetattr@plt+0x3064>
   140d0:	cmp	r1, #8
   140d4:	beq	14124 <tcgetattr@plt+0x2f90>
   140d8:	ble	14124 <tcgetattr@plt+0x2f90>
   140dc:	cmp	r1, #9
   140e0:	bne	14124 <tcgetattr@plt+0x2f90>
   140e4:	mov	r0, r5
   140e8:	bl	1111c <fcntl64@plt>
   140ec:	mov	r4, r0
   140f0:	b	140a4 <tcgetattr@plt+0x2f10>
   140f4:	ldr	r2, [sp, #32]
   140f8:	bl	1111c <fcntl64@plt>
   140fc:	mov	r4, r0
   14100:	b	140a4 <tcgetattr@plt+0x2f10>
   14104:	ldr	r3, [pc, #256]	; 1420c <tcgetattr@plt+0x3078>
   14108:	cmp	r1, r3
   1410c:	bgt	141d8 <tcgetattr@plt+0x3044>
   14110:	cmp	r1, r2
   14114:	bge	14124 <tcgetattr@plt+0x2f90>
   14118:	sub	r3, r3, #6
   1411c:	cmp	r1, r3
   14120:	beq	140e4 <tcgetattr@plt+0x2f50>
   14124:	ldr	r3, [sp, #4]
   14128:	mov	r0, r5
   1412c:	ldr	r2, [r3]
   14130:	bl	1111c <fcntl64@plt>
   14134:	mov	r4, r0
   14138:	b	140a4 <tcgetattr@plt+0x2f10>
   1413c:	bl	110b0 <__errno_location@plt>
   14140:	ldr	r3, [r0]
   14144:	cmp	r3, #22
   14148:	bne	1409c <tcgetattr@plt+0x2f08>
   1414c:	mov	r2, r7
   14150:	mov	r0, r5
   14154:	mov	r1, #0
   14158:	bl	1111c <fcntl64@plt>
   1415c:	subs	r4, r0, #0
   14160:	blt	140a4 <tcgetattr@plt+0x2f10>
   14164:	mvn	r3, #0
   14168:	str	r3, [r6]
   1416c:	mov	r1, #1
   14170:	mov	r0, r4
   14174:	bl	1111c <fcntl64@plt>
   14178:	subs	r2, r0, #0
   1417c:	blt	14198 <tcgetattr@plt+0x3004>
   14180:	orr	r2, r2, #1
   14184:	mov	r1, #2
   14188:	mov	r0, r4
   1418c:	bl	1111c <fcntl64@plt>
   14190:	cmn	r0, #1
   14194:	bne	140a4 <tcgetattr@plt+0x2f10>
   14198:	bl	110b0 <__errno_location@plt>
   1419c:	mov	r5, r0
   141a0:	mov	r0, r4
   141a4:	ldr	r6, [r5]
   141a8:	mvn	r4, #0
   141ac:	bl	1117c <close@plt>
   141b0:	str	r6, [r5]
   141b4:	b	140a4 <tcgetattr@plt+0x2f10>
   141b8:	mov	r1, #0
   141bc:	bl	1111c <fcntl64@plt>
   141c0:	subs	r4, r0, #0
   141c4:	blt	140a4 <tcgetattr@plt+0x2f10>
   141c8:	ldr	r3, [r6]
   141cc:	cmn	r3, #1
   141d0:	beq	1416c <tcgetattr@plt+0x2fd8>
   141d4:	b	140a4 <tcgetattr@plt+0x2f10>
   141d8:	ldr	r3, [pc, #48]	; 14210 <tcgetattr@plt+0x307c>
   141dc:	cmp	r1, r3
   141e0:	beq	14124 <tcgetattr@plt+0x2f90>
   141e4:	blt	140e4 <tcgetattr@plt+0x2f50>
   141e8:	add	r3, r3, #1
   141ec:	cmp	r1, r3
   141f0:	bne	14124 <tcgetattr@plt+0x2f90>
   141f4:	b	140e4 <tcgetattr@plt+0x2f50>
   141f8:	cmp	r1, #1
   141fc:	bne	14124 <tcgetattr@plt+0x2f90>
   14200:	b	140e4 <tcgetattr@plt+0x2f50>
   14204:	andeq	r0, r0, r6, lsl #8
   14208:	andeq	ip, r2, r8, asr r2
   1420c:	andeq	r0, r0, r7, lsl #8
   14210:	andeq	r0, r0, r9, lsl #8
   14214:	mov	ip, r1
   14218:	push	{r4, r5, r6, r7, r8, lr}
   1421c:	mov	r1, r2
   14220:	mov	r5, r0
   14224:	mov	r2, r3
   14228:	mov	r0, ip
   1422c:	bl	11008 <open64@plt>
   14230:	sub	r3, r5, r0
   14234:	clz	r3, r3
   14238:	lsr	r3, r3, #5
   1423c:	orrs	r3, r3, r0, lsr #31
   14240:	mov	r4, r0
   14244:	bne	14270 <tcgetattr@plt+0x30dc>
   14248:	mov	r1, r5
   1424c:	bl	10f6c <dup2@plt>
   14250:	mov	r7, r0
   14254:	bl	110b0 <__errno_location@plt>
   14258:	mov	r5, r0
   1425c:	mov	r0, r4
   14260:	ldr	r6, [r5]
   14264:	mov	r4, r7
   14268:	bl	1117c <close@plt>
   1426c:	str	r6, [r5]
   14270:	mov	r0, r4
   14274:	pop	{r4, r5, r6, r7, r8, pc}
   14278:	push	{r4, r5, lr}
   1427c:	sub	sp, sp, #12
   14280:	mov	r5, r0
   14284:	bl	110b0 <__errno_location@plt>
   14288:	mov	r2, #0
   1428c:	mov	r4, r0
   14290:	ldr	r3, [r0]
   14294:	str	r2, [r4]
   14298:	mov	r0, r5
   1429c:	str	r3, [sp]
   142a0:	str	r3, [sp, #4]
   142a4:	bl	10f00 <free@plt>
   142a8:	ldr	r3, [r4]
   142ac:	add	r2, sp, #8
   142b0:	cmp	r3, #0
   142b4:	moveq	r3, #4
   142b8:	movne	r3, #0
   142bc:	add	r3, r2, r3
   142c0:	ldr	r3, [r3, #-8]
   142c4:	str	r3, [r4]
   142c8:	add	sp, sp, #12
   142cc:	pop	{r4, r5, pc}
   142d0:	push	{r4, r5, r6, lr}
   142d4:	subs	r4, r0, #0
   142d8:	beq	1434c <tcgetattr@plt+0x31b8>
   142dc:	mov	r1, #47	; 0x2f
   142e0:	bl	11140 <strrchr@plt>
   142e4:	subs	r5, r0, #0
   142e8:	beq	14338 <tcgetattr@plt+0x31a4>
   142ec:	add	r6, r5, #1
   142f0:	sub	r3, r6, r4
   142f4:	cmp	r3, #6
   142f8:	ble	14338 <tcgetattr@plt+0x31a4>
   142fc:	mov	r2, #7
   14300:	ldr	r1, [pc, #96]	; 14368 <tcgetattr@plt+0x31d4>
   14304:	sub	r0, r5, #6
   14308:	bl	11164 <strncmp@plt>
   1430c:	cmp	r0, #0
   14310:	bne	14338 <tcgetattr@plt+0x31a4>
   14314:	mov	r2, #3
   14318:	ldr	r1, [pc, #76]	; 1436c <tcgetattr@plt+0x31d8>
   1431c:	mov	r0, r6
   14320:	bl	11164 <strncmp@plt>
   14324:	cmp	r0, #0
   14328:	movne	r4, r6
   1432c:	ldreq	r3, [pc, #60]	; 14370 <tcgetattr@plt+0x31dc>
   14330:	addeq	r4, r5, #4
   14334:	streq	r4, [r3]
   14338:	ldr	r2, [pc, #52]	; 14374 <tcgetattr@plt+0x31e0>
   1433c:	ldr	r3, [pc, #52]	; 14378 <tcgetattr@plt+0x31e4>
   14340:	str	r4, [r2]
   14344:	str	r4, [r3]
   14348:	pop	{r4, r5, r6, pc}
   1434c:	ldr	r3, [pc, #40]	; 1437c <tcgetattr@plt+0x31e8>
   14350:	mov	r2, #55	; 0x37
   14354:	mov	r1, #1
   14358:	ldr	r3, [r3]
   1435c:	ldr	r0, [pc, #28]	; 14380 <tcgetattr@plt+0x31ec>
   14360:	bl	10fa8 <fwrite@plt>
   14364:	bl	11170 <abort@plt>
   14368:	andeq	fp, r1, ip, lsr #14
   1436c:	andeq	fp, r1, r4, lsr r7
   14370:	andeq	ip, r2, r0, ror #2
   14374:	andeq	ip, r2, ip, asr r2
   14378:	andeq	ip, r2, r4, ror #2
   1437c:	andeq	ip, r2, r0, ror r1
   14380:	strdeq	fp, [r1], -r4
   14384:	push	{r4, r5, r6, lr}
   14388:	mov	r2, #48	; 0x30
   1438c:	mov	r4, r1
   14390:	mov	r1, #0
   14394:	mov	r5, r0
   14398:	bl	110d4 <memset@plt>
   1439c:	cmp	r4, #10
   143a0:	beq	143b0 <tcgetattr@plt+0x321c>
   143a4:	str	r4, [r5]
   143a8:	mov	r0, r5
   143ac:	pop	{r4, r5, r6, pc}
   143b0:	bl	11170 <abort@plt>
   143b4:	push	{r4, r5, r6, lr}
   143b8:	mov	r4, r0
   143bc:	mov	r5, r1
   143c0:	bl	17c58 <tcgetattr@plt+0x6ac4>
   143c4:	ldrb	r3, [r0]
   143c8:	bic	r3, r3, #32
   143cc:	cmp	r3, #85	; 0x55
   143d0:	bne	14430 <tcgetattr@plt+0x329c>
   143d4:	ldrb	r3, [r0, #1]
   143d8:	bic	r3, r3, #32
   143dc:	cmp	r3, #84	; 0x54
   143e0:	bne	1446c <tcgetattr@plt+0x32d8>
   143e4:	ldrb	r3, [r0, #2]
   143e8:	bic	r3, r3, #32
   143ec:	cmp	r3, #70	; 0x46
   143f0:	bne	1446c <tcgetattr@plt+0x32d8>
   143f4:	ldrb	r3, [r0, #3]
   143f8:	cmp	r3, #45	; 0x2d
   143fc:	bne	1446c <tcgetattr@plt+0x32d8>
   14400:	ldrb	r3, [r0, #4]
   14404:	cmp	r3, #56	; 0x38
   14408:	bne	1446c <tcgetattr@plt+0x32d8>
   1440c:	ldrb	r3, [r0, #5]
   14410:	cmp	r3, #0
   14414:	bne	1446c <tcgetattr@plt+0x32d8>
   14418:	ldrb	r2, [r4]
   1441c:	ldr	r3, [pc, #152]	; 144bc <tcgetattr@plt+0x3328>
   14420:	ldr	r0, [pc, #152]	; 144c0 <tcgetattr@plt+0x332c>
   14424:	cmp	r2, #96	; 0x60
   14428:	movne	r0, r3
   1442c:	pop	{r4, r5, r6, pc}
   14430:	cmp	r3, #71	; 0x47
   14434:	bne	1446c <tcgetattr@plt+0x32d8>
   14438:	ldrb	r3, [r0, #1]
   1443c:	bic	r3, r3, #32
   14440:	cmp	r3, #66	; 0x42
   14444:	bne	1446c <tcgetattr@plt+0x32d8>
   14448:	ldrb	r3, [r0, #2]
   1444c:	cmp	r3, #49	; 0x31
   14450:	bne	1446c <tcgetattr@plt+0x32d8>
   14454:	ldrb	r3, [r0, #3]
   14458:	cmp	r3, #56	; 0x38
   1445c:	bne	1446c <tcgetattr@plt+0x32d8>
   14460:	ldrb	r3, [r0, #4]
   14464:	cmp	r3, #48	; 0x30
   14468:	beq	14480 <tcgetattr@plt+0x32ec>
   1446c:	ldr	r3, [pc, #80]	; 144c4 <tcgetattr@plt+0x3330>
   14470:	cmp	r5, #9
   14474:	ldr	r0, [pc, #76]	; 144c8 <tcgetattr@plt+0x3334>
   14478:	movne	r0, r3
   1447c:	pop	{r4, r5, r6, pc}
   14480:	ldrb	r3, [r0, #5]
   14484:	cmp	r3, #51	; 0x33
   14488:	bne	1446c <tcgetattr@plt+0x32d8>
   1448c:	ldrb	r3, [r0, #6]
   14490:	cmp	r3, #48	; 0x30
   14494:	bne	1446c <tcgetattr@plt+0x32d8>
   14498:	ldrb	r3, [r0, #7]
   1449c:	cmp	r3, #0
   144a0:	bne	1446c <tcgetattr@plt+0x32d8>
   144a4:	ldrb	r2, [r4]
   144a8:	ldr	r3, [pc, #28]	; 144cc <tcgetattr@plt+0x3338>
   144ac:	ldr	r0, [pc, #28]	; 144d0 <tcgetattr@plt+0x333c>
   144b0:	cmp	r2, #96	; 0x60
   144b4:	movne	r0, r3
   144b8:	pop	{r4, r5, r6, pc}
   144bc:	muleq	r1, r0, r7
   144c0:	andeq	fp, r1, ip, lsl #15
   144c4:	andeq	fp, r1, r0, lsr #15
   144c8:	muleq	r1, ip, r7
   144cc:	muleq	r1, r8, r7
   144d0:	muleq	r1, r4, r7
   144d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144d8:	sub	sp, sp, #116	; 0x74
   144dc:	mov	sl, r0
   144e0:	str	r3, [sp, #24]
   144e4:	mov	r3, #1
   144e8:	mov	r8, r1
   144ec:	str	r2, [sp, #56]	; 0x38
   144f0:	str	r3, [sp, #36]	; 0x24
   144f4:	bl	10fcc <__ctype_get_mb_cur_max@plt>
   144f8:	ldr	r3, [sp, #156]	; 0x9c
   144fc:	mov	fp, r8
   14500:	mov	r2, #0
   14504:	lsr	r3, r3, #1
   14508:	and	r3, r3, #1
   1450c:	str	r2, [sp, #68]	; 0x44
   14510:	str	r3, [sp, #28]
   14514:	str	r2, [sp, #40]	; 0x28
   14518:	str	r2, [sp, #44]	; 0x2c
   1451c:	str	r2, [sp, #52]	; 0x34
   14520:	str	r2, [sp, #64]	; 0x40
   14524:	str	r2, [sp, #72]	; 0x48
   14528:	str	sl, [sp, #32]
   1452c:	str	r0, [sp, #76]	; 0x4c
   14530:	ldr	r3, [sp, #152]	; 0x98
   14534:	cmp	r3, #10
   14538:	ldrls	pc, [pc, r3, lsl #2]
   1453c:	b	156fc <tcgetattr@plt+0x4568>
   14540:	andeq	r4, r1, ip, ror #10
   14544:	andeq	r4, r1, r4, asr r8
   14548:	andeq	r4, r1, r8, ror r8
   1454c:	muleq	r1, ip, r8
   14550:	andeq	r4, r1, r8, asr #19
   14554:	muleq	r1, ip, r9
   14558:	andeq	r4, r1, r4, ror r9
   1455c:			; <UNDEFINED> instruction: 0x000148b0
   14560:	andeq	r4, r1, r8, asr #17
   14564:	andeq	r4, r1, r8, asr #17
   14568:	andeq	r4, r1, r8, asr #17
   1456c:	mov	r3, #0
   14570:	mov	r7, r3
   14574:	str	r3, [sp, #28]
   14578:	ldr	r3, [sp, #44]	; 0x2c
   1457c:	mov	sl, #0
   14580:	eor	r3, r3, #1
   14584:	str	r3, [sp, #60]	; 0x3c
   14588:	ldr	r3, [sp, #24]
   1458c:	cmn	r3, #1
   14590:	beq	14af4 <tcgetattr@plt+0x3960>
   14594:	ldr	r3, [sp, #24]
   14598:	subs	r5, r3, sl
   1459c:	movne	r5, #1
   145a0:	cmp	r5, #0
   145a4:	beq	14b0c <tcgetattr@plt+0x3978>
   145a8:	ldr	r3, [sp, #152]	; 0x98
   145ac:	ldr	r8, [sp, #44]	; 0x2c
   145b0:	cmp	r3, #2
   145b4:	moveq	r8, #0
   145b8:	andne	r8, r8, #1
   145bc:	ldr	r3, [sp, #52]	; 0x34
   145c0:	adds	r9, r3, #0
   145c4:	movne	r9, #1
   145c8:	ands	r6, r9, r8
   145cc:	beq	14f74 <tcgetattr@plt+0x3de0>
   145d0:	ldr	r2, [sp, #52]	; 0x34
   145d4:	ldr	r1, [sp, #24]
   145d8:	cmp	r2, #1
   145dc:	mov	r3, r2
   145e0:	movls	r3, #0
   145e4:	movhi	r3, #1
   145e8:	cmn	r1, #1
   145ec:	movne	r3, #0
   145f0:	cmp	r3, #0
   145f4:	add	r4, sl, r2
   145f8:	beq	14608 <tcgetattr@plt+0x3474>
   145fc:	ldr	r0, [sp, #56]	; 0x38
   14600:	bl	11080 <strlen@plt>
   14604:	str	r0, [sp, #24]
   14608:	ldr	r3, [sp, #24]
   1460c:	cmp	r3, r4
   14610:	ldr	r3, [sp, #56]	; 0x38
   14614:	add	r3, r3, sl
   14618:	str	r3, [sp, #48]	; 0x30
   1461c:	bcc	14f80 <tcgetattr@plt+0x3dec>
   14620:	mov	r0, r3
   14624:	ldr	r2, [sp, #52]	; 0x34
   14628:	ldr	r1, [sp, #64]	; 0x40
   1462c:	bl	10f3c <memcmp@plt>
   14630:	cmp	r0, #0
   14634:	bne	14f80 <tcgetattr@plt+0x3dec>
   14638:	ldr	r3, [sp, #28]
   1463c:	cmp	r3, #0
   14640:	bne	157fc <tcgetattr@plt+0x4668>
   14644:	ldr	r3, [sp, #48]	; 0x30
   14648:	ldrb	r4, [r3]
   1464c:	cmp	r4, #126	; 0x7e
   14650:	ldrls	pc, [pc, r4, lsl #2]
   14654:	b	14f14 <tcgetattr@plt+0x3d80>
   14658:	andeq	r4, r1, r8, lsr sp
   1465c:	andeq	r4, r1, r4, lsl pc
   14660:	andeq	r4, r1, r4, lsl pc
   14664:	andeq	r4, r1, r4, lsl pc
   14668:	andeq	r4, r1, r4, lsl pc
   1466c:	andeq	r4, r1, r4, lsl pc
   14670:	andeq	r4, r1, r4, lsl pc
   14674:	andeq	r4, r1, ip, lsl sp
   14678:	andeq	r4, r1, r0, lsl #26
   1467c:	strdeq	r4, [r1], -ip
   14680:	andeq	r4, r1, r0, ror #24
   14684:	andeq	r4, r1, r4, asr #24
   14688:	ldrdeq	r4, [r1], -r8
   1468c:			; <UNDEFINED> instruction: 0x00014eb4
   14690:	andeq	r4, r1, r4, lsl pc
   14694:	andeq	r4, r1, r4, lsl pc
   14698:	andeq	r4, r1, r4, lsl pc
   1469c:	andeq	r4, r1, r4, lsl pc
   146a0:	andeq	r4, r1, r4, lsl pc
   146a4:	andeq	r4, r1, r4, lsl pc
   146a8:	andeq	r4, r1, r4, lsl pc
   146ac:	andeq	r4, r1, r4, lsl pc
   146b0:	andeq	r4, r1, r4, lsl pc
   146b4:	andeq	r4, r1, r4, lsl pc
   146b8:	andeq	r4, r1, r4, lsl pc
   146bc:	andeq	r4, r1, r4, lsl pc
   146c0:	andeq	r4, r1, r4, lsl pc
   146c4:	andeq	r4, r1, r4, lsl pc
   146c8:	andeq	r4, r1, r4, lsl pc
   146cc:	andeq	r4, r1, r4, lsl pc
   146d0:	andeq	r4, r1, r4, lsl pc
   146d4:	andeq	r4, r1, r4, lsl pc
   146d8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   146dc:	andeq	r4, r1, r8, lsr #28
   146e0:	andeq	r4, r1, r8, lsr #28
   146e4:	andeq	r4, r1, r8, lsr sl
   146e8:	andeq	r4, r1, r8, lsr #28
   146ec:	andeq	r4, r1, r0, asr #29
   146f0:	andeq	r4, r1, r8, lsr #28
   146f4:	muleq	r1, r4, lr
   146f8:	andeq	r4, r1, r8, lsr #28
   146fc:	andeq	r4, r1, r8, lsr #28
   14700:	andeq	r4, r1, r8, lsr #28
   14704:	andeq	r4, r1, r0, asr #29
   14708:	andeq	r4, r1, r0, asr #29
   1470c:	andeq	r4, r1, r0, asr #29
   14710:	andeq	r4, r1, r0, asr #29
   14714:	andeq	r4, r1, r0, asr #29
   14718:	andeq	r4, r1, r0, asr #29
   1471c:	andeq	r4, r1, r0, asr #29
   14720:	andeq	r4, r1, r0, asr #29
   14724:	andeq	r4, r1, r0, asr #29
   14728:	andeq	r4, r1, r0, asr #29
   1472c:	andeq	r4, r1, r0, asr #29
   14730:	andeq	r4, r1, r0, asr #29
   14734:	andeq	r4, r1, r0, asr #29
   14738:	andeq	r4, r1, r0, asr #29
   1473c:	andeq	r4, r1, r0, asr #29
   14740:	andeq	r4, r1, r0, asr #29
   14744:	andeq	r4, r1, r8, lsr #28
   14748:	andeq	r4, r1, r8, lsr #28
   1474c:	andeq	r4, r1, r8, lsr #28
   14750:	andeq	r4, r1, r8, lsr #28
   14754:	andeq	r4, r1, r4, ror #28
   14758:	andeq	r4, r1, r4, lsl pc
   1475c:	andeq	r4, r1, r0, asr #29
   14760:	andeq	r4, r1, r0, asr #29
   14764:	andeq	r4, r1, r0, asr #29
   14768:	andeq	r4, r1, r0, asr #29
   1476c:	andeq	r4, r1, r0, asr #29
   14770:	andeq	r4, r1, r0, asr #29
   14774:	andeq	r4, r1, r0, asr #29
   14778:	andeq	r4, r1, r0, asr #29
   1477c:	andeq	r4, r1, r0, asr #29
   14780:	andeq	r4, r1, r0, asr #29
   14784:	andeq	r4, r1, r0, asr #29
   14788:	andeq	r4, r1, r0, asr #29
   1478c:	andeq	r4, r1, r0, asr #29
   14790:	andeq	r4, r1, r0, asr #29
   14794:	andeq	r4, r1, r0, asr #29
   14798:	andeq	r4, r1, r0, asr #29
   1479c:	andeq	r4, r1, r0, asr #29
   147a0:	andeq	r4, r1, r0, asr #29
   147a4:	andeq	r4, r1, r0, asr #29
   147a8:	andeq	r4, r1, r0, asr #29
   147ac:	andeq	r4, r1, r0, asr #29
   147b0:	andeq	r4, r1, r0, asr #29
   147b4:	andeq	r4, r1, r0, asr #29
   147b8:	andeq	r4, r1, r0, asr #29
   147bc:	andeq	r4, r1, r0, asr #29
   147c0:	andeq	r4, r1, r0, asr #29
   147c4:	andeq	r4, r1, r8, lsr #28
   147c8:	andeq	r4, r1, r4, lsl #23
   147cc:	andeq	r4, r1, r0, asr #29
   147d0:	andeq	r4, r1, r8, lsr #28
   147d4:	andeq	r4, r1, r0, asr #29
   147d8:	andeq	r4, r1, r8, lsr #28
   147dc:	andeq	r4, r1, r0, asr #29
   147e0:	andeq	r4, r1, r0, asr #29
   147e4:	andeq	r4, r1, r0, asr #29
   147e8:	andeq	r4, r1, r0, asr #29
   147ec:	andeq	r4, r1, r0, asr #29
   147f0:	andeq	r4, r1, r0, asr #29
   147f4:	andeq	r4, r1, r0, asr #29
   147f8:	andeq	r4, r1, r0, asr #29
   147fc:	andeq	r4, r1, r0, asr #29
   14800:	andeq	r4, r1, r0, asr #29
   14804:	andeq	r4, r1, r0, asr #29
   14808:	andeq	r4, r1, r0, asr #29
   1480c:	andeq	r4, r1, r0, asr #29
   14810:	andeq	r4, r1, r0, asr #29
   14814:	andeq	r4, r1, r0, asr #29
   14818:	andeq	r4, r1, r0, asr #29
   1481c:	andeq	r4, r1, r0, asr #29
   14820:	andeq	r4, r1, r0, asr #29
   14824:	andeq	r4, r1, r0, asr #29
   14828:	andeq	r4, r1, r0, asr #29
   1482c:	andeq	r4, r1, r0, asr #29
   14830:	andeq	r4, r1, r0, asr #29
   14834:	andeq	r4, r1, r0, asr #29
   14838:	andeq	r4, r1, r0, asr #29
   1483c:	andeq	r4, r1, r0, asr #29
   14840:	andeq	r4, r1, r0, asr #29
   14844:	andeq	r4, r1, r8, lsl sl
   14848:	andeq	r4, r1, r8, lsr #28
   1484c:	andeq	r4, r1, r8, lsl sl
   14850:	andeq	r4, r1, r8, lsr sl
   14854:	mov	r3, #1
   14858:	str	r3, [sp, #28]
   1485c:	str	r3, [sp, #52]	; 0x34
   14860:	ldr	r3, [pc, #4000]	; 15808 <tcgetattr@plt+0x4674>
   14864:	mov	r7, #0
   14868:	str	r3, [sp, #64]	; 0x40
   1486c:	mov	r3, #2
   14870:	str	r3, [sp, #152]	; 0x98
   14874:	b	14578 <tcgetattr@plt+0x33e4>
   14878:	ldr	r3, [sp, #28]
   1487c:	cmp	r3, #0
   14880:	beq	149dc <tcgetattr@plt+0x3848>
   14884:	mov	r3, #1
   14888:	str	r3, [sp, #52]	; 0x34
   1488c:	ldr	r3, [pc, #3956]	; 15808 <tcgetattr@plt+0x4674>
   14890:	mov	r7, #0
   14894:	str	r3, [sp, #64]	; 0x40
   14898:	b	14578 <tcgetattr@plt+0x33e4>
   1489c:	mov	r3, #1
   148a0:	str	r3, [sp, #44]	; 0x2c
   148a4:	str	r3, [sp, #52]	; 0x34
   148a8:	str	r3, [sp, #28]
   148ac:	b	14860 <tcgetattr@plt+0x36cc>
   148b0:	mov	r3, #0
   148b4:	str	r3, [sp, #28]
   148b8:	mov	r3, #1
   148bc:	str	r3, [sp, #44]	; 0x2c
   148c0:	mov	r7, #0
   148c4:	b	14578 <tcgetattr@plt+0x33e4>
   148c8:	ldr	r3, [sp, #152]	; 0x98
   148cc:	cmp	r3, #10
   148d0:	beq	14914 <tcgetattr@plt+0x3780>
   148d4:	mov	r2, #5
   148d8:	ldr	r1, [pc, #3884]	; 1580c <tcgetattr@plt+0x4678>
   148dc:	mov	r0, #0
   148e0:	bl	10f54 <dcgettext@plt>
   148e4:	ldr	r2, [pc, #3872]	; 1580c <tcgetattr@plt+0x4678>
   148e8:	cmp	r0, r2
   148ec:	str	r0, [sp, #164]	; 0xa4
   148f0:	beq	158f8 <tcgetattr@plt+0x4764>
   148f4:	mov	r2, #5
   148f8:	ldr	r1, [pc, #3848]	; 15808 <tcgetattr@plt+0x4674>
   148fc:	mov	r0, #0
   14900:	bl	10f54 <dcgettext@plt>
   14904:	ldr	r2, [pc, #3836]	; 15808 <tcgetattr@plt+0x4674>
   14908:	cmp	r0, r2
   1490c:	str	r0, [sp, #168]	; 0xa8
   14910:	beq	158e8 <tcgetattr@plt+0x4754>
   14914:	ldr	r7, [sp, #28]
   14918:	cmp	r7, #0
   1491c:	movne	r7, #0
   14920:	bne	14954 <tcgetattr@plt+0x37c0>
   14924:	ldr	r3, [sp, #164]	; 0xa4
   14928:	ldrb	r3, [r3]
   1492c:	cmp	r3, #0
   14930:	beq	15908 <tcgetattr@plt+0x4774>
   14934:	ldr	r2, [sp, #164]	; 0xa4
   14938:	ldr	r1, [sp, #32]
   1493c:	cmp	fp, r7
   14940:	strbhi	r3, [r1, r7]
   14944:	ldrb	r3, [r2, #1]!
   14948:	add	r7, r7, #1
   1494c:	cmp	r3, #0
   14950:	bne	1493c <tcgetattr@plt+0x37a8>
   14954:	ldr	r0, [sp, #168]	; 0xa8
   14958:	bl	11080 <strlen@plt>
   1495c:	ldr	r3, [sp, #168]	; 0xa8
   14960:	str	r3, [sp, #64]	; 0x40
   14964:	mov	r3, #1
   14968:	str	r3, [sp, #44]	; 0x2c
   1496c:	str	r0, [sp, #52]	; 0x34
   14970:	b	14578 <tcgetattr@plt+0x33e4>
   14974:	mov	r3, #1
   14978:	str	r3, [sp, #44]	; 0x2c
   1497c:	str	r3, [sp, #52]	; 0x34
   14980:	str	r3, [sp, #28]
   14984:	ldr	r3, [pc, #3716]	; 15810 <tcgetattr@plt+0x467c>
   14988:	mov	r7, #0
   1498c:	str	r3, [sp, #64]	; 0x40
   14990:	mov	r3, #5
   14994:	str	r3, [sp, #152]	; 0x98
   14998:	b	14578 <tcgetattr@plt+0x33e4>
   1499c:	ldr	r3, [sp, #28]
   149a0:	cmp	r3, #0
   149a4:	beq	156a4 <tcgetattr@plt+0x4510>
   149a8:	ldr	r3, [sp, #28]
   149ac:	mov	r7, #0
   149b0:	str	r3, [sp, #44]	; 0x2c
   149b4:	mov	r3, #1
   149b8:	str	r3, [sp, #52]	; 0x34
   149bc:	ldr	r3, [pc, #3660]	; 15810 <tcgetattr@plt+0x467c>
   149c0:	str	r3, [sp, #64]	; 0x40
   149c4:	b	14578 <tcgetattr@plt+0x33e4>
   149c8:	ldr	r3, [sp, #28]
   149cc:	cmp	r3, #0
   149d0:	mov	r3, #1
   149d4:	streq	r3, [sp, #44]	; 0x2c
   149d8:	bne	1485c <tcgetattr@plt+0x36c8>
   149dc:	cmp	fp, #0
   149e0:	beq	156d4 <tcgetattr@plt+0x4540>
   149e4:	ldr	r3, [sp, #32]
   149e8:	mov	r2, #39	; 0x27
   149ec:	mov	r7, #1
   149f0:	strb	r2, [r3]
   149f4:	mov	r3, #0
   149f8:	str	r3, [sp, #28]
   149fc:	mov	r3, #1
   14a00:	str	r3, [sp, #52]	; 0x34
   14a04:	ldr	r3, [pc, #3580]	; 15808 <tcgetattr@plt+0x4674>
   14a08:	str	r3, [sp, #64]	; 0x40
   14a0c:	mov	r3, #2
   14a10:	str	r3, [sp, #152]	; 0x98
   14a14:	b	14578 <tcgetattr@plt+0x33e4>
   14a18:	ldr	r3, [sp, #24]
   14a1c:	cmn	r3, #1
   14a20:	beq	15638 <tcgetattr@plt+0x44a4>
   14a24:	ldr	r3, [sp, #24]
   14a28:	subs	r3, r3, #1
   14a2c:	movne	r3, #1
   14a30:	cmp	r3, #0
   14a34:	bne	14a40 <tcgetattr@plt+0x38ac>
   14a38:	cmp	sl, #0
   14a3c:	beq	14e2c <tcgetattr@plt+0x3c98>
   14a40:	ldr	r3, [sp, #152]	; 0x98
   14a44:	mov	r5, #0
   14a48:	sub	r2, r3, #2
   14a4c:	mov	r8, r5
   14a50:	clz	r2, r2
   14a54:	lsr	r2, r2, #5
   14a58:	ldr	r3, [sp, #60]	; 0x3c
   14a5c:	ldr	r1, [sp, #28]
   14a60:	orr	r3, r2, r3
   14a64:	eor	r3, r3, #1
   14a68:	orr	r3, r1, r3
   14a6c:	tst	r3, #255	; 0xff
   14a70:	bne	1519c <tcgetattr@plt+0x4008>
   14a74:	cmp	r6, #0
   14a78:	bne	14bc8 <tcgetattr@plt+0x3a34>
   14a7c:	ldr	r3, [sp, #40]	; 0x28
   14a80:	eor	r8, r8, #1
   14a84:	and	r8, r8, r3
   14a88:	add	sl, sl, #1
   14a8c:	uxtb	r6, r8
   14a90:	cmp	r6, #0
   14a94:	beq	14ac8 <tcgetattr@plt+0x3934>
   14a98:	cmp	fp, r7
   14a9c:	movhi	r2, #39	; 0x27
   14aa0:	ldrhi	r3, [sp, #32]
   14aa4:	strbhi	r2, [r3, r7]
   14aa8:	add	r3, r7, #1
   14aac:	cmp	fp, r3
   14ab0:	movhi	r1, #39	; 0x27
   14ab4:	ldrhi	r2, [sp, #32]
   14ab8:	add	r7, r7, #2
   14abc:	strbhi	r1, [r2, r3]
   14ac0:	mov	r3, #0
   14ac4:	str	r3, [sp, #40]	; 0x28
   14ac8:	cmp	r7, fp
   14acc:	ldrcc	r3, [sp, #32]
   14ad0:	strbcc	r4, [r3, r7]
   14ad4:	ldr	r3, [sp, #36]	; 0x24
   14ad8:	cmp	r5, #0
   14adc:	moveq	r3, #0
   14ae0:	str	r3, [sp, #36]	; 0x24
   14ae4:	ldr	r3, [sp, #24]
   14ae8:	add	r7, r7, #1
   14aec:	cmn	r3, #1
   14af0:	bne	14594 <tcgetattr@plt+0x3400>
   14af4:	ldr	r3, [sp, #56]	; 0x38
   14af8:	ldrb	r5, [r3, sl]
   14afc:	adds	r5, r5, #0
   14b00:	movne	r5, #1
   14b04:	cmp	r5, #0
   14b08:	bne	145a8 <tcgetattr@plt+0x3414>
   14b0c:	ldr	r3, [sp, #152]	; 0x98
   14b10:	ldr	r1, [sp, #28]
   14b14:	sub	r3, r3, #2
   14b18:	clz	r3, r3
   14b1c:	lsr	r3, r3, #5
   14b20:	and	r9, r1, r3
   14b24:	cmp	r7, #0
   14b28:	movne	r2, #0
   14b2c:	andeq	r2, r9, #1
   14b30:	cmp	r2, #0
   14b34:	bne	15510 <tcgetattr@plt+0x437c>
   14b38:	eor	r2, r1, #1
   14b3c:	ands	r3, r3, r2
   14b40:	beq	159cc <tcgetattr@plt+0x4838>
   14b44:	ldr	r2, [sp, #68]	; 0x44
   14b48:	cmp	r2, #0
   14b4c:	beq	159b8 <tcgetattr@plt+0x4824>
   14b50:	ldr	r3, [sp, #36]	; 0x24
   14b54:	cmp	r3, #0
   14b58:	bne	15970 <tcgetattr@plt+0x47dc>
   14b5c:	ldr	r2, [sp, #72]	; 0x48
   14b60:	clz	r3, fp
   14b64:	cmp	r2, #0
   14b68:	lsr	r3, r3, #5
   14b6c:	moveq	r3, #0
   14b70:	cmp	r3, #0
   14b74:	beq	15910 <tcgetattr@plt+0x477c>
   14b78:	str	r3, [sp, #68]	; 0x44
   14b7c:	ldr	fp, [sp, #72]	; 0x48
   14b80:	b	14530 <tcgetattr@plt+0x339c>
   14b84:	ldr	r3, [sp, #152]	; 0x98
   14b88:	cmp	r3, #2
   14b8c:	beq	151e0 <tcgetattr@plt+0x404c>
   14b90:	ldr	r3, [sp, #44]	; 0x2c
   14b94:	ldr	r2, [sp, #28]
   14b98:	and	r2, r3, r2
   14b9c:	ands	r2, r9, r2
   14ba0:	bne	151ec <tcgetattr@plt+0x4058>
   14ba4:	mov	r4, #92	; 0x5c
   14ba8:	mov	r3, r4
   14bac:	ldr	r1, [sp, #44]	; 0x2c
   14bb0:	cmp	r1, #0
   14bb4:	moveq	r5, #0
   14bb8:	moveq	r8, r1
   14bbc:	beq	14a58 <tcgetattr@plt+0x38c4>
   14bc0:	mov	r4, r3
   14bc4:	mov	r5, #0
   14bc8:	ldr	r3, [sp, #28]
   14bcc:	cmp	r3, #0
   14bd0:	bne	151d4 <tcgetattr@plt+0x4040>
   14bd4:	ldr	r3, [sp, #40]	; 0x28
   14bd8:	eor	r9, r3, #1
   14bdc:	and	r9, r9, r2
   14be0:	ands	r9, r9, #255	; 0xff
   14be4:	beq	14c28 <tcgetattr@plt+0x3a94>
   14be8:	cmp	fp, r7
   14bec:	movhi	r2, #39	; 0x27
   14bf0:	ldrhi	r3, [sp, #32]
   14bf4:	str	r9, [sp, #40]	; 0x28
   14bf8:	strbhi	r2, [r3, r7]
   14bfc:	add	r3, r7, #1
   14c00:	cmp	fp, r3
   14c04:	movhi	r1, #36	; 0x24
   14c08:	ldrhi	r2, [sp, #32]
   14c0c:	strbhi	r1, [r2, r3]
   14c10:	add	r3, r7, #2
   14c14:	cmp	fp, r3
   14c18:	add	r7, r7, #3
   14c1c:	ldrhi	r2, [sp, #32]
   14c20:	movhi	r1, #39	; 0x27
   14c24:	strbhi	r1, [r2, r3]
   14c28:	cmp	fp, r7
   14c2c:	movhi	r2, #92	; 0x5c
   14c30:	ldrhi	r3, [sp, #32]
   14c34:	add	sl, sl, #1
   14c38:	strbhi	r2, [r3, r7]
   14c3c:	add	r7, r7, #1
   14c40:	b	14ac8 <tcgetattr@plt+0x3934>
   14c44:	ldr	r3, [sp, #152]	; 0x98
   14c48:	mov	r4, #11
   14c4c:	sub	r2, r3, #2
   14c50:	mov	r3, #118	; 0x76
   14c54:	clz	r2, r2
   14c58:	lsr	r2, r2, #5
   14c5c:	b	14bac <tcgetattr@plt+0x3a18>
   14c60:	mov	r4, #10
   14c64:	mov	r3, #110	; 0x6e
   14c68:	ldr	r2, [sp, #152]	; 0x98
   14c6c:	ldr	r1, [sp, #28]
   14c70:	sub	r2, r2, #2
   14c74:	clz	r2, r2
   14c78:	lsr	r2, r2, #5
   14c7c:	ands	r1, r1, r2
   14c80:	beq	14bac <tcgetattr@plt+0x3a18>
   14c84:	ldr	sl, [sp, #32]
   14c88:	mov	r8, fp
   14c8c:	mov	r2, r1
   14c90:	mov	r3, #2
   14c94:	str	r3, [sp, #152]	; 0x98
   14c98:	ldr	r9, [sp, #44]	; 0x2c
   14c9c:	ldr	r3, [sp, #152]	; 0x98
   14ca0:	and	r9, r9, r2
   14ca4:	tst	r9, #255	; 0xff
   14ca8:	movne	r3, #4
   14cac:	str	r3, [sp, #152]	; 0x98
   14cb0:	ldr	r3, [sp, #156]	; 0x9c
   14cb4:	mov	ip, #0
   14cb8:	bic	r3, r3, #2
   14cbc:	str	r3, [sp, #4]
   14cc0:	ldr	r3, [sp, #168]	; 0xa8
   14cc4:	ldr	r2, [sp, #56]	; 0x38
   14cc8:	str	r3, [sp, #16]
   14ccc:	ldr	r3, [sp, #164]	; 0xa4
   14cd0:	mov	r1, r8
   14cd4:	str	r3, [sp, #12]
   14cd8:	ldr	r3, [sp, #152]	; 0x98
   14cdc:	mov	r0, sl
   14ce0:	str	r3, [sp]
   14ce4:	str	ip, [sp, #8]
   14ce8:	ldr	r3, [sp, #24]
   14cec:	bl	144d4 <tcgetattr@plt+0x3340>
   14cf0:	mov	fp, r0
   14cf4:	mov	r0, fp
   14cf8:	add	sp, sp, #116	; 0x74
   14cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d00:	ldr	r3, [sp, #152]	; 0x98
   14d04:	mov	r4, #8
   14d08:	sub	r2, r3, #2
   14d0c:	mov	r3, #98	; 0x62
   14d10:	clz	r2, r2
   14d14:	lsr	r2, r2, #5
   14d18:	b	14bac <tcgetattr@plt+0x3a18>
   14d1c:	ldr	r3, [sp, #152]	; 0x98
   14d20:	mov	r4, #7
   14d24:	sub	r2, r3, #2
   14d28:	mov	r3, #97	; 0x61
   14d2c:	clz	r2, r2
   14d30:	lsr	r2, r2, #5
   14d34:	b	14bac <tcgetattr@plt+0x3a18>
   14d38:	ldr	r3, [sp, #44]	; 0x2c
   14d3c:	cmp	r3, #0
   14d40:	beq	15524 <tcgetattr@plt+0x4390>
   14d44:	ldr	r3, [sp, #28]
   14d48:	cmp	r3, #0
   14d4c:	bne	157fc <tcgetattr@plt+0x4668>
   14d50:	ldr	r3, [sp, #152]	; 0x98
   14d54:	sub	r2, r3, #2
   14d58:	ldr	r3, [sp, #40]	; 0x28
   14d5c:	clz	r2, r2
   14d60:	eor	r3, r3, #1
   14d64:	lsr	r2, r2, #5
   14d68:	ands	r3, r2, r3
   14d6c:	moveq	r1, r7
   14d70:	beq	14db4 <tcgetattr@plt+0x3c20>
   14d74:	cmp	fp, r7
   14d78:	movhi	r0, #39	; 0x27
   14d7c:	ldrhi	r1, [sp, #32]
   14d80:	str	r3, [sp, #40]	; 0x28
   14d84:	strbhi	r0, [r1, r7]
   14d88:	add	r1, r7, #1
   14d8c:	cmp	fp, r1
   14d90:	movhi	ip, #36	; 0x24
   14d94:	ldrhi	r0, [sp, #32]
   14d98:	strbhi	ip, [r0, r1]
   14d9c:	add	r1, r7, #2
   14da0:	cmp	fp, r1
   14da4:	movhi	ip, #39	; 0x27
   14da8:	ldrhi	r0, [sp, #32]
   14dac:	strbhi	ip, [r0, r1]
   14db0:	add	r1, r7, #3
   14db4:	cmp	fp, r1
   14db8:	movhi	r0, #92	; 0x5c
   14dbc:	ldrhi	r3, [sp, #32]
   14dc0:	add	r7, r1, #1
   14dc4:	strbhi	r0, [r3, r1]
   14dc8:	cmp	r8, #0
   14dcc:	beq	15710 <tcgetattr@plt+0x457c>
   14dd0:	ldr	r0, [sp, #24]
   14dd4:	add	r3, sl, #1
   14dd8:	cmp	r3, r0
   14ddc:	bcs	1564c <tcgetattr@plt+0x44b8>
   14de0:	ldr	r0, [sp, #56]	; 0x38
   14de4:	ldrb	r3, [r0, r3]
   14de8:	sub	r3, r3, #48	; 0x30
   14dec:	cmp	r3, #9
   14df0:	bhi	1564c <tcgetattr@plt+0x44b8>
   14df4:	cmp	fp, r7
   14df8:	movhi	r3, #48	; 0x30
   14dfc:	ldrhi	r0, [sp, #32]
   14e00:	ldr	r5, [sp, #28]
   14e04:	mov	r4, #48	; 0x30
   14e08:	strbhi	r3, [r0, r7]
   14e0c:	add	r3, r1, #2
   14e10:	cmp	fp, r3
   14e14:	movhi	r0, #48	; 0x30
   14e18:	ldrhi	ip, [sp, #32]
   14e1c:	add	r7, r1, #3
   14e20:	strbhi	r0, [ip, r3]
   14e24:	b	14a58 <tcgetattr@plt+0x38c4>
   14e28:	mov	r5, #0
   14e2c:	ldr	r3, [sp, #152]	; 0x98
   14e30:	sub	r2, r3, #2
   14e34:	ldr	r3, [sp, #28]
   14e38:	clz	r2, r2
   14e3c:	lsr	r2, r2, #5
   14e40:	ands	r8, r3, r2
   14e44:	beq	14a58 <tcgetattr@plt+0x38c4>
   14e48:	mov	r3, r8
   14e4c:	mov	r2, r3
   14e50:	mov	r3, #2
   14e54:	ldr	sl, [sp, #32]
   14e58:	mov	r8, fp
   14e5c:	str	r3, [sp, #152]	; 0x98
   14e60:	b	14c98 <tcgetattr@plt+0x3b04>
   14e64:	ldr	r3, [sp, #152]	; 0x98
   14e68:	cmp	r3, #2
   14e6c:	beq	15590 <tcgetattr@plt+0x43fc>
   14e70:	cmp	r3, #5
   14e74:	beq	15550 <tcgetattr@plt+0x43bc>
   14e78:	mov	r5, #0
   14e7c:	sub	r2, r3, #2
   14e80:	mov	r8, r5
   14e84:	clz	r2, r2
   14e88:	mov	r4, #63	; 0x3f
   14e8c:	lsr	r2, r2, #5
   14e90:	b	14a58 <tcgetattr@plt+0x38c4>
   14e94:	ldr	r3, [sp, #152]	; 0x98
   14e98:	cmp	r3, #2
   14e9c:	beq	155b0 <tcgetattr@plt+0x441c>
   14ea0:	mov	r2, #0
   14ea4:	str	r5, [sp, #68]	; 0x44
   14ea8:	mov	r8, r2
   14eac:	mov	r4, #39	; 0x27
   14eb0:	b	14a58 <tcgetattr@plt+0x38c4>
   14eb4:	mov	r4, #13
   14eb8:	mov	r3, #114	; 0x72
   14ebc:	b	14c68 <tcgetattr@plt+0x3ad4>
   14ec0:	ldr	r3, [sp, #152]	; 0x98
   14ec4:	mov	r8, #0
   14ec8:	sub	r2, r3, #2
   14ecc:	clz	r2, r2
   14ed0:	lsr	r2, r2, #5
   14ed4:	b	14a58 <tcgetattr@plt+0x38c4>
   14ed8:	ldr	r3, [sp, #152]	; 0x98
   14edc:	mov	r4, #12
   14ee0:	sub	r2, r3, #2
   14ee4:	mov	r3, #102	; 0x66
   14ee8:	clz	r2, r2
   14eec:	lsr	r2, r2, #5
   14ef0:	b	14bac <tcgetattr@plt+0x3a18>
   14ef4:	mov	r5, r6
   14ef8:	b	14e2c <tcgetattr@plt+0x3c98>
   14efc:	ldr	r3, [sp, #152]	; 0x98
   14f00:	sub	r2, r3, #2
   14f04:	mov	r3, #116	; 0x74
   14f08:	clz	r2, r2
   14f0c:	lsr	r2, r2, #5
   14f10:	b	14bac <tcgetattr@plt+0x3a18>
   14f14:	ldr	r8, [sp, #76]	; 0x4c
   14f18:	cmp	r8, #1
   14f1c:	bne	153cc <tcgetattr@plt+0x4238>
   14f20:	bl	1105c <__ctype_b_loc@plt>
   14f24:	sxth	r3, r4
   14f28:	mov	ip, r8
   14f2c:	lsl	r3, r3, #1
   14f30:	ldr	r2, [r0]
   14f34:	ldrh	r3, [r2, r3]
   14f38:	and	r3, r3, #16384	; 0x4000
   14f3c:	cmp	r3, #0
   14f40:	movne	r5, #1
   14f44:	moveq	r5, #0
   14f48:	moveq	r3, #1
   14f4c:	movne	r3, #0
   14f50:	ldr	r2, [sp, #44]	; 0x2c
   14f54:	and	r3, r3, r2
   14f58:	ands	r8, r3, #255	; 0xff
   14f5c:	bne	15260 <tcgetattr@plt+0x40cc>
   14f60:	ldr	r3, [sp, #152]	; 0x98
   14f64:	sub	r2, r3, #2
   14f68:	clz	r2, r2
   14f6c:	lsr	r2, r2, #5
   14f70:	b	14a58 <tcgetattr@plt+0x38c4>
   14f74:	ldr	r3, [sp, #56]	; 0x38
   14f78:	add	r3, r3, sl
   14f7c:	str	r3, [sp, #48]	; 0x30
   14f80:	ldr	r3, [sp, #48]	; 0x30
   14f84:	mov	r6, #0
   14f88:	ldrb	r4, [r3]
   14f8c:	cmp	r4, #126	; 0x7e
   14f90:	ldrls	pc, [pc, r4, lsl #2]
   14f94:	b	14f14 <tcgetattr@plt+0x3d80>
   14f98:	andeq	r4, r1, r8, lsr sp
   14f9c:	andeq	r4, r1, r4, lsl pc
   14fa0:	andeq	r4, r1, r4, lsl pc
   14fa4:	andeq	r4, r1, r4, lsl pc
   14fa8:	andeq	r4, r1, r4, lsl pc
   14fac:	andeq	r4, r1, r4, lsl pc
   14fb0:	andeq	r4, r1, r4, lsl pc
   14fb4:	andeq	r4, r1, ip, lsl sp
   14fb8:	andeq	r4, r1, r0, lsl #26
   14fbc:	muleq	r1, r4, r1
   14fc0:	andeq	r4, r1, r0, ror #24
   14fc4:	andeq	r4, r1, r4, asr #24
   14fc8:	ldrdeq	r4, [r1], -r8
   14fcc:			; <UNDEFINED> instruction: 0x00014eb4
   14fd0:	andeq	r4, r1, r4, lsl pc
   14fd4:	andeq	r4, r1, r4, lsl pc
   14fd8:	andeq	r4, r1, r4, lsl pc
   14fdc:	andeq	r4, r1, r4, lsl pc
   14fe0:	andeq	r4, r1, r4, lsl pc
   14fe4:	andeq	r4, r1, r4, lsl pc
   14fe8:	andeq	r4, r1, r4, lsl pc
   14fec:	andeq	r4, r1, r4, lsl pc
   14ff0:	andeq	r4, r1, r4, lsl pc
   14ff4:	andeq	r4, r1, r4, lsl pc
   14ff8:	andeq	r4, r1, r4, lsl pc
   14ffc:	andeq	r4, r1, r4, lsl pc
   15000:	andeq	r4, r1, r4, lsl pc
   15004:	andeq	r4, r1, r4, lsl pc
   15008:	andeq	r4, r1, r4, lsl pc
   1500c:	andeq	r4, r1, r4, lsl pc
   15010:	andeq	r4, r1, r4, lsl pc
   15014:	andeq	r4, r1, r4, lsl pc
   15018:	andeq	r4, r1, ip, lsr #28
   1501c:	andeq	r4, r1, r8, lsr #28
   15020:	andeq	r4, r1, r8, lsr #28
   15024:	andeq	r4, r1, r8, lsr sl
   15028:	andeq	r4, r1, r8, lsr #28
   1502c:	andeq	r4, r1, r0, asr #29
   15030:	andeq	r4, r1, r8, lsr #28
   15034:	muleq	r1, r4, lr
   15038:	andeq	r4, r1, r8, lsr #28
   1503c:	andeq	r4, r1, r8, lsr #28
   15040:	andeq	r4, r1, r8, lsr #28
   15044:	andeq	r4, r1, r0, asr #29
   15048:	andeq	r4, r1, r0, asr #29
   1504c:	andeq	r4, r1, r0, asr #29
   15050:	andeq	r4, r1, r0, asr #29
   15054:	andeq	r4, r1, r0, asr #29
   15058:	andeq	r4, r1, r0, asr #29
   1505c:	andeq	r4, r1, r0, asr #29
   15060:	andeq	r4, r1, r0, asr #29
   15064:	andeq	r4, r1, r0, asr #29
   15068:	andeq	r4, r1, r0, asr #29
   1506c:	andeq	r4, r1, r0, asr #29
   15070:	andeq	r4, r1, r0, asr #29
   15074:	andeq	r4, r1, r0, asr #29
   15078:	andeq	r4, r1, r0, asr #29
   1507c:	andeq	r4, r1, r0, asr #29
   15080:	andeq	r4, r1, r0, asr #29
   15084:	andeq	r4, r1, r8, lsr #28
   15088:	andeq	r4, r1, r8, lsr #28
   1508c:	andeq	r4, r1, r8, lsr #28
   15090:	andeq	r4, r1, r8, lsr #28
   15094:	andeq	r4, r1, r4, ror #28
   15098:	andeq	r4, r1, r4, lsl pc
   1509c:	andeq	r4, r1, r0, asr #29
   150a0:	andeq	r4, r1, r0, asr #29
   150a4:	andeq	r4, r1, r0, asr #29
   150a8:	andeq	r4, r1, r0, asr #29
   150ac:	andeq	r4, r1, r0, asr #29
   150b0:	andeq	r4, r1, r0, asr #29
   150b4:	andeq	r4, r1, r0, asr #29
   150b8:	andeq	r4, r1, r0, asr #29
   150bc:	andeq	r4, r1, r0, asr #29
   150c0:	andeq	r4, r1, r0, asr #29
   150c4:	andeq	r4, r1, r0, asr #29
   150c8:	andeq	r4, r1, r0, asr #29
   150cc:	andeq	r4, r1, r0, asr #29
   150d0:	andeq	r4, r1, r0, asr #29
   150d4:	andeq	r4, r1, r0, asr #29
   150d8:	andeq	r4, r1, r0, asr #29
   150dc:	andeq	r4, r1, r0, asr #29
   150e0:	andeq	r4, r1, r0, asr #29
   150e4:	andeq	r4, r1, r0, asr #29
   150e8:	andeq	r4, r1, r0, asr #29
   150ec:	andeq	r4, r1, r0, asr #29
   150f0:	andeq	r4, r1, r0, asr #29
   150f4:	andeq	r4, r1, r0, asr #29
   150f8:	andeq	r4, r1, r0, asr #29
   150fc:	andeq	r4, r1, r0, asr #29
   15100:	andeq	r4, r1, r0, asr #29
   15104:	andeq	r4, r1, r8, lsr #28
   15108:	andeq	r4, r1, r4, lsl #23
   1510c:	andeq	r4, r1, r0, asr #29
   15110:	andeq	r4, r1, r8, lsr #28
   15114:	andeq	r4, r1, r0, asr #29
   15118:	andeq	r4, r1, r8, lsr #28
   1511c:	andeq	r4, r1, r0, asr #29
   15120:	andeq	r4, r1, r0, asr #29
   15124:	andeq	r4, r1, r0, asr #29
   15128:	andeq	r4, r1, r0, asr #29
   1512c:	andeq	r4, r1, r0, asr #29
   15130:	andeq	r4, r1, r0, asr #29
   15134:	andeq	r4, r1, r0, asr #29
   15138:	andeq	r4, r1, r0, asr #29
   1513c:	andeq	r4, r1, r0, asr #29
   15140:	andeq	r4, r1, r0, asr #29
   15144:	andeq	r4, r1, r0, asr #29
   15148:	andeq	r4, r1, r0, asr #29
   1514c:	andeq	r4, r1, r0, asr #29
   15150:	andeq	r4, r1, r0, asr #29
   15154:	andeq	r4, r1, r0, asr #29
   15158:	andeq	r4, r1, r0, asr #29
   1515c:	andeq	r4, r1, r0, asr #29
   15160:	andeq	r4, r1, r0, asr #29
   15164:	andeq	r4, r1, r0, asr #29
   15168:	andeq	r4, r1, r0, asr #29
   1516c:	andeq	r4, r1, r0, asr #29
   15170:	andeq	r4, r1, r0, asr #29
   15174:	andeq	r4, r1, r0, asr #29
   15178:	andeq	r4, r1, r0, asr #29
   1517c:	andeq	r4, r1, r0, asr #29
   15180:	andeq	r4, r1, r0, asr #29
   15184:	andeq	r4, r1, r8, lsl sl
   15188:	andeq	r4, r1, r8, lsr #28
   1518c:	andeq	r4, r1, r8, lsl sl
   15190:	andeq	r4, r1, r8, lsr sl
   15194:	mov	r3, #116	; 0x74
   15198:	b	14c68 <tcgetattr@plt+0x3ad4>
   1519c:	ldr	r3, [sp, #160]	; 0xa0
   151a0:	cmp	r3, #0
   151a4:	beq	14a74 <tcgetattr@plt+0x38e0>
   151a8:	lsr	r3, r4, #5
   151ac:	ldr	r0, [sp, #160]	; 0xa0
   151b0:	uxtb	r3, r3
   151b4:	and	r1, r4, #31
   151b8:	ldr	r0, [r0, r3, lsl #2]
   151bc:	lsr	r3, r0, r1
   151c0:	tst	r3, #1
   151c4:	beq	14a74 <tcgetattr@plt+0x38e0>
   151c8:	ldr	r3, [sp, #28]
   151cc:	cmp	r3, #0
   151d0:	beq	14bd4 <tcgetattr@plt+0x3a40>
   151d4:	ldr	sl, [sp, #32]
   151d8:	mov	r8, fp
   151dc:	b	14c98 <tcgetattr@plt+0x3b04>
   151e0:	ldr	r3, [sp, #28]
   151e4:	cmp	r3, #0
   151e8:	bne	1573c <tcgetattr@plt+0x45a8>
   151ec:	add	sl, sl, #1
   151f0:	ldr	r6, [sp, #40]	; 0x28
   151f4:	mov	r5, #0
   151f8:	mov	r4, #92	; 0x5c
   151fc:	b	14a90 <tcgetattr@plt+0x38fc>
   15200:	cmp	r9, r8
   15204:	bne	15474 <tcgetattr@plt+0x42e0>
   15208:	ldr	r0, [sp, #100]	; 0x64
   1520c:	bl	10f90 <iswprint@plt>
   15210:	add	r5, r5, r4
   15214:	cmp	r0, #0
   15218:	add	r0, sp, #104	; 0x68
   1521c:	moveq	r6, #0
   15220:	bl	10f30 <mbsinit@plt>
   15224:	cmp	r0, #0
   15228:	beq	15408 <tcgetattr@plt+0x4274>
   1522c:	mov	r2, r6
   15230:	mov	ip, r5
   15234:	eor	r5, r2, #1
   15238:	ldr	r4, [sp, #80]	; 0x50
   1523c:	ldr	r6, [sp, #84]	; 0x54
   15240:	ldr	r7, [sp, #88]	; 0x58
   15244:	uxtb	r5, r5
   15248:	cmp	ip, #1
   1524c:	bls	1574c <tcgetattr@plt+0x45b8>
   15250:	ldr	r3, [sp, #44]	; 0x2c
   15254:	and	r8, r3, r5
   15258:	mov	r5, r2
   1525c:	uxtb	r8, r8
   15260:	add	r2, sl, ip
   15264:	ldr	r0, [sp, #48]	; 0x30
   15268:	mov	r1, #0
   1526c:	str	r5, [sp, #48]	; 0x30
   15270:	ldr	r9, [sp, #28]
   15274:	ldr	ip, [sp, #40]	; 0x28
   15278:	ldr	r3, [sp, #32]
   1527c:	ldr	r5, [sp, #152]	; 0x98
   15280:	b	1533c <tcgetattr@plt+0x41a8>
   15284:	cmp	r9, #0
   15288:	bne	15660 <tcgetattr@plt+0x44cc>
   1528c:	eor	r1, ip, #1
   15290:	cmp	r5, #2
   15294:	movne	r1, #0
   15298:	andeq	r1, r1, #1
   1529c:	cmp	r1, #0
   152a0:	beq	152d8 <tcgetattr@plt+0x4144>
   152a4:	cmp	fp, r7
   152a8:	movhi	ip, #39	; 0x27
   152ac:	strbhi	ip, [r3, r7]
   152b0:	add	ip, r7, #1
   152b4:	cmp	fp, ip
   152b8:	movhi	lr, #36	; 0x24
   152bc:	strbhi	lr, [r3, ip]
   152c0:	add	ip, r7, #2
   152c4:	cmp	fp, ip
   152c8:	movhi	lr, #39	; 0x27
   152cc:	strbhi	lr, [r3, ip]
   152d0:	add	r7, r7, #3
   152d4:	mov	ip, r1
   152d8:	cmp	fp, r7
   152dc:	movhi	r1, #92	; 0x5c
   152e0:	strbhi	r1, [r3, r7]
   152e4:	add	r1, r7, #1
   152e8:	cmp	fp, r1
   152ec:	lsrhi	lr, r4, #6
   152f0:	addhi	lr, lr, #48	; 0x30
   152f4:	strbhi	lr, [r3, r1]
   152f8:	add	lr, r7, #2
   152fc:	cmp	fp, lr
   15300:	lsrhi	r1, r4, #3
   15304:	andhi	r1, r1, #7
   15308:	addhi	r1, r1, #48	; 0x30
   1530c:	add	sl, sl, #1
   15310:	strbhi	r1, [r3, lr]
   15314:	and	r4, r4, #7
   15318:	cmp	r2, sl
   1531c:	add	r4, r4, #48	; 0x30
   15320:	add	r7, r7, #3
   15324:	bls	15684 <tcgetattr@plt+0x44f0>
   15328:	mov	r1, r8
   1532c:	cmp	fp, r7
   15330:	strbhi	r4, [r3, r7]
   15334:	ldrb	r4, [r0, #1]!
   15338:	add	r7, r7, #1
   1533c:	cmp	r8, #0
   15340:	bne	15284 <tcgetattr@plt+0x40f0>
   15344:	cmp	r6, #0
   15348:	bne	15398 <tcgetattr@plt+0x4204>
   1534c:	eor	r6, r1, #1
   15350:	and	r6, r6, ip
   15354:	add	sl, sl, #1
   15358:	cmp	r2, sl
   1535c:	uxtb	r6, r6
   15360:	bls	153c0 <tcgetattr@plt+0x422c>
   15364:	cmp	r6, #0
   15368:	beq	1532c <tcgetattr@plt+0x4198>
   1536c:	cmp	fp, r7
   15370:	movhi	ip, #39	; 0x27
   15374:	strbhi	ip, [r3, r7]
   15378:	add	ip, r7, #1
   1537c:	cmp	fp, ip
   15380:	movhi	lr, #39	; 0x27
   15384:	strbhi	lr, [r3, ip]
   15388:	add	r7, r7, #2
   1538c:	mov	r6, r8
   15390:	mov	ip, r8
   15394:	b	1532c <tcgetattr@plt+0x4198>
   15398:	cmp	fp, r7
   1539c:	eor	r6, r1, #1
   153a0:	movhi	lr, #92	; 0x5c
   153a4:	and	r6, r6, ip
   153a8:	add	sl, sl, #1
   153ac:	strbhi	lr, [r3, r7]
   153b0:	cmp	r2, sl
   153b4:	add	r7, r7, #1
   153b8:	uxtb	r6, r6
   153bc:	bhi	15364 <tcgetattr@plt+0x41d0>
   153c0:	str	ip, [sp, #40]	; 0x28
   153c4:	ldr	r5, [sp, #48]	; 0x30
   153c8:	b	14a90 <tcgetattr@plt+0x38fc>
   153cc:	ldr	r3, [sp, #24]
   153d0:	cmn	r3, #1
   153d4:	mov	r3, #0
   153d8:	str	r3, [sp, #104]	; 0x68
   153dc:	str	r3, [sp, #108]	; 0x6c
   153e0:	beq	15700 <tcgetattr@plt+0x456c>
   153e4:	mov	r2, r5
   153e8:	mov	r3, #0
   153ec:	str	r7, [sp, #88]	; 0x58
   153f0:	ldr	r7, [sp, #152]	; 0x98
   153f4:	str	r5, [sp, #92]	; 0x5c
   153f8:	str	r6, [sp, #84]	; 0x54
   153fc:	mov	r5, r3
   15400:	mov	r6, r2
   15404:	str	r4, [sp, #80]	; 0x50
   15408:	ldr	r3, [sp, #56]	; 0x38
   1540c:	add	r9, sl, r5
   15410:	add	r8, r3, r9
   15414:	ldr	r3, [sp, #24]
   15418:	mov	r1, r8
   1541c:	sub	r2, r3, r9
   15420:	add	r0, sp, #100	; 0x64
   15424:	add	r3, sp, #104	; 0x68
   15428:	bl	17c8c <tcgetattr@plt+0x6af8>
   1542c:	subs	r4, r0, #0
   15430:	beq	157d8 <tcgetattr@plt+0x4644>
   15434:	cmn	r4, #1
   15438:	beq	157b8 <tcgetattr@plt+0x4624>
   1543c:	cmn	r4, #2
   15440:	beq	15758 <tcgetattr@plt+0x45c4>
   15444:	ldr	r2, [sp, #28]
   15448:	cmp	r7, #2
   1544c:	movne	r2, #0
   15450:	andeq	r2, r2, #1
   15454:	cmp	r2, #0
   15458:	beq	15208 <tcgetattr@plt+0x4074>
   1545c:	cmp	r4, #1
   15460:	beq	15208 <tcgetattr@plt+0x4074>
   15464:	sub	r3, r4, #1
   15468:	add	r9, r3, r9
   1546c:	ldr	r3, [sp, #56]	; 0x38
   15470:	add	r9, r3, r9
   15474:	ldrb	r3, [r8, #1]!
   15478:	sub	r3, r3, #91	; 0x5b
   1547c:	cmp	r3, #33	; 0x21
   15480:	ldrls	pc, [pc, r3, lsl #2]
   15484:	b	15200 <tcgetattr@plt+0x406c>
   15488:	andeq	r5, r1, r0, lsl r5
   1548c:	andeq	r5, r1, r0, lsl r5
   15490:	andeq	r5, r1, r0, lsl #4
   15494:	andeq	r5, r1, r0, lsl r5
   15498:	andeq	r5, r1, r0, lsl #4
   1549c:	andeq	r5, r1, r0, lsl r5
   154a0:	andeq	r5, r1, r0, lsl #4
   154a4:	andeq	r5, r1, r0, lsl #4
   154a8:	andeq	r5, r1, r0, lsl #4
   154ac:	andeq	r5, r1, r0, lsl #4
   154b0:	andeq	r5, r1, r0, lsl #4
   154b4:	andeq	r5, r1, r0, lsl #4
   154b8:	andeq	r5, r1, r0, lsl #4
   154bc:	andeq	r5, r1, r0, lsl #4
   154c0:	andeq	r5, r1, r0, lsl #4
   154c4:	andeq	r5, r1, r0, lsl #4
   154c8:	andeq	r5, r1, r0, lsl #4
   154cc:	andeq	r5, r1, r0, lsl #4
   154d0:	andeq	r5, r1, r0, lsl #4
   154d4:	andeq	r5, r1, r0, lsl #4
   154d8:	andeq	r5, r1, r0, lsl #4
   154dc:	andeq	r5, r1, r0, lsl #4
   154e0:	andeq	r5, r1, r0, lsl #4
   154e4:	andeq	r5, r1, r0, lsl #4
   154e8:	andeq	r5, r1, r0, lsl #4
   154ec:	andeq	r5, r1, r0, lsl #4
   154f0:	andeq	r5, r1, r0, lsl #4
   154f4:	andeq	r5, r1, r0, lsl #4
   154f8:	andeq	r5, r1, r0, lsl #4
   154fc:	andeq	r5, r1, r0, lsl #4
   15500:	andeq	r5, r1, r0, lsl #4
   15504:	andeq	r5, r1, r0, lsl #4
   15508:	andeq	r5, r1, r0, lsl #4
   1550c:	andeq	r5, r1, r0, lsl r5
   15510:	mov	r3, #2
   15514:	ldr	sl, [sp, #32]
   15518:	mov	r8, fp
   1551c:	str	r3, [sp, #152]	; 0x98
   15520:	b	14c98 <tcgetattr@plt+0x3b04>
   15524:	ldr	r3, [sp, #156]	; 0x9c
   15528:	tst	r3, #1
   1552c:	bne	15658 <tcgetattr@plt+0x44c4>
   15530:	ldr	r3, [sp, #152]	; 0x98
   15534:	ldr	r4, [sp, #44]	; 0x2c
   15538:	sub	r2, r3, #2
   1553c:	mov	r5, #0
   15540:	clz	r2, r2
   15544:	mov	r8, r4
   15548:	lsr	r2, r2, #5
   1554c:	b	14a58 <tcgetattr@plt+0x38c4>
   15550:	ldr	r3, [sp, #156]	; 0x9c
   15554:	ands	r9, r3, #4
   15558:	beq	15690 <tcgetattr@plt+0x44fc>
   1555c:	ldr	r2, [sp, #24]
   15560:	add	r3, sl, #2
   15564:	cmp	r3, r2
   15568:	bcs	1557c <tcgetattr@plt+0x43e8>
   1556c:	ldr	r2, [sp, #48]	; 0x30
   15570:	ldrb	r4, [r2, #1]
   15574:	cmp	r4, #63	; 0x3f
   15578:	beq	15818 <tcgetattr@plt+0x4684>
   1557c:	mov	r2, #0
   15580:	mov	r8, r2
   15584:	mov	r5, r2
   15588:	mov	r4, #63	; 0x3f
   1558c:	b	14a58 <tcgetattr@plt+0x38c4>
   15590:	ldr	r3, [sp, #28]
   15594:	cmp	r3, #0
   15598:	bne	158bc <tcgetattr@plt+0x4728>
   1559c:	mov	r2, r5
   155a0:	mov	r8, r3
   155a4:	mov	r5, #0
   155a8:	mov	r4, #63	; 0x3f
   155ac:	b	14a58 <tcgetattr@plt+0x38c4>
   155b0:	ldr	r3, [sp, #28]
   155b4:	cmp	r3, #0
   155b8:	bne	158bc <tcgetattr@plt+0x4728>
   155bc:	ldr	r2, [sp, #72]	; 0x48
   155c0:	adds	r3, fp, #0
   155c4:	movne	r3, #1
   155c8:	cmp	r2, #0
   155cc:	movne	r3, #0
   155d0:	cmp	r3, #0
   155d4:	strne	fp, [sp, #72]	; 0x48
   155d8:	movne	fp, #0
   155dc:	bne	15618 <tcgetattr@plt+0x4484>
   155e0:	cmp	fp, r7
   155e4:	movhi	r2, #39	; 0x27
   155e8:	ldrhi	r3, [sp, #32]
   155ec:	strbhi	r2, [r3, r7]
   155f0:	add	r3, r7, #1
   155f4:	cmp	fp, r3
   155f8:	movhi	r1, #92	; 0x5c
   155fc:	ldrhi	r2, [sp, #32]
   15600:	strbhi	r1, [r2, r3]
   15604:	add	r3, r7, #2
   15608:	cmp	fp, r3
   1560c:	movhi	r1, #39	; 0x27
   15610:	ldrhi	r2, [sp, #32]
   15614:	strbhi	r1, [r2, r3]
   15618:	ldr	r3, [sp, #28]
   1561c:	add	r7, r7, #3
   15620:	mov	r2, r5
   15624:	mov	r8, r3
   15628:	str	r5, [sp, #68]	; 0x44
   1562c:	str	r3, [sp, #40]	; 0x28
   15630:	mov	r4, #39	; 0x27
   15634:	b	14a58 <tcgetattr@plt+0x38c4>
   15638:	ldr	r3, [sp, #56]	; 0x38
   1563c:	ldrb	r3, [r3, #1]
   15640:	adds	r3, r3, #0
   15644:	movne	r3, #1
   15648:	b	14a30 <tcgetattr@plt+0x389c>
   1564c:	ldr	r5, [sp, #28]
   15650:	mov	r4, #48	; 0x30
   15654:	b	14a58 <tcgetattr@plt+0x38c4>
   15658:	add	sl, sl, #1
   1565c:	b	14588 <tcgetattr@plt+0x33f4>
   15660:	mov	sl, r3
   15664:	ldr	r3, [sp, #28]
   15668:	mov	r8, fp
   1566c:	str	r3, [sp, #44]	; 0x2c
   15670:	ldr	r3, [sp, #152]	; 0x98
   15674:	sub	r2, r3, #2
   15678:	clz	r2, r2
   1567c:	lsr	r2, r2, #5
   15680:	b	14c98 <tcgetattr@plt+0x3b04>
   15684:	str	ip, [sp, #40]	; 0x28
   15688:	ldr	r5, [sp, #48]	; 0x30
   1568c:	b	14ac8 <tcgetattr@plt+0x3934>
   15690:	mov	r2, r9
   15694:	mov	r8, r9
   15698:	mov	r5, #0
   1569c:	mov	r4, #63	; 0x3f
   156a0:	b	14a58 <tcgetattr@plt+0x38c4>
   156a4:	cmp	fp, #0
   156a8:	beq	15720 <tcgetattr@plt+0x458c>
   156ac:	ldr	r1, [sp, #32]
   156b0:	mov	r3, #34	; 0x22
   156b4:	mov	r2, #1
   156b8:	strb	r3, [r1]
   156bc:	ldr	r3, [pc, #332]	; 15810 <tcgetattr@plt+0x467c>
   156c0:	str	r2, [sp, #52]	; 0x34
   156c4:	mov	r7, r2
   156c8:	str	r2, [sp, #44]	; 0x2c
   156cc:	str	r3, [sp, #64]	; 0x40
   156d0:	b	14578 <tcgetattr@plt+0x33e4>
   156d4:	ldr	r3, [pc, #300]	; 15808 <tcgetattr@plt+0x4674>
   156d8:	str	r3, [sp, #64]	; 0x40
   156dc:	mov	r3, #0
   156e0:	str	r3, [sp, #28]
   156e4:	mov	r3, #1
   156e8:	str	r3, [sp, #52]	; 0x34
   156ec:	mov	r7, r3
   156f0:	mov	r3, #2
   156f4:	str	r3, [sp, #152]	; 0x98
   156f8:	b	14578 <tcgetattr@plt+0x33e4>
   156fc:	bl	11170 <abort@plt>
   15700:	ldr	r0, [sp, #56]	; 0x38
   15704:	bl	11080 <strlen@plt>
   15708:	str	r0, [sp, #24]
   1570c:	b	153e4 <tcgetattr@plt+0x4250>
   15710:	mov	r5, r8
   15714:	mov	r4, #48	; 0x30
   15718:	ldr	r8, [sp, #44]	; 0x2c
   1571c:	b	14a58 <tcgetattr@plt+0x38c4>
   15720:	mov	r3, #1
   15724:	str	r3, [sp, #52]	; 0x34
   15728:	mov	r7, r3
   1572c:	str	r3, [sp, #44]	; 0x2c
   15730:	ldr	r3, [pc, #216]	; 15810 <tcgetattr@plt+0x467c>
   15734:	str	r3, [sp, #64]	; 0x40
   15738:	b	14578 <tcgetattr@plt+0x33e4>
   1573c:	ldr	sl, [sp, #32]
   15740:	mov	r8, fp
   15744:	mov	r2, r3
   15748:	b	14c98 <tcgetattr@plt+0x3b04>
   1574c:	mov	r3, r5
   15750:	mov	r5, r2
   15754:	b	14f50 <tcgetattr@plt+0x3dbc>
   15758:	ldr	r1, [sp, #24]
   1575c:	mov	r2, r5
   15760:	cmp	r1, r9
   15764:	mov	ip, r5
   15768:	ldr	r4, [sp, #80]	; 0x50
   1576c:	ldr	r5, [sp, #92]	; 0x5c
   15770:	ldr	r6, [sp, #84]	; 0x54
   15774:	ldr	r7, [sp, #88]	; 0x58
   15778:	bls	157ac <tcgetattr@plt+0x4618>
   1577c:	ldrb	r3, [r8]
   15780:	cmp	r3, #0
   15784:	bne	15798 <tcgetattr@plt+0x4604>
   15788:	b	157b0 <tcgetattr@plt+0x461c>
   1578c:	ldrb	r3, [r8, #1]!
   15790:	cmp	r3, #0
   15794:	beq	158b0 <tcgetattr@plt+0x471c>
   15798:	add	r2, r2, #1
   1579c:	add	r3, sl, r2
   157a0:	cmp	r1, r3
   157a4:	bhi	1578c <tcgetattr@plt+0x45f8>
   157a8:	mov	ip, r2
   157ac:	mov	r3, #0
   157b0:	mov	r2, r3
   157b4:	b	15248 <tcgetattr@plt+0x40b4>
   157b8:	mov	r3, #0
   157bc:	mov	ip, r5
   157c0:	ldr	r4, [sp, #80]	; 0x50
   157c4:	ldr	r5, [sp, #92]	; 0x5c
   157c8:	ldr	r6, [sp, #84]	; 0x54
   157cc:	ldr	r7, [sp, #88]	; 0x58
   157d0:	mov	r2, r3
   157d4:	b	15248 <tcgetattr@plt+0x40b4>
   157d8:	mov	r3, r6
   157dc:	mov	ip, r5
   157e0:	eor	r5, r3, #1
   157e4:	mov	r2, r6
   157e8:	ldr	r4, [sp, #80]	; 0x50
   157ec:	ldr	r6, [sp, #84]	; 0x54
   157f0:	ldr	r7, [sp, #88]	; 0x58
   157f4:	uxtb	r5, r5
   157f8:	b	15248 <tcgetattr@plt+0x40b4>
   157fc:	ldr	sl, [sp, #32]
   15800:	mov	r8, fp
   15804:	b	1566c <tcgetattr@plt+0x44d8>
   15808:	andeq	fp, r1, r0, lsr #15
   1580c:	andeq	fp, r1, r4, lsr #15
   15810:	muleq	r1, ip, r7
   15814:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   15818:	ldr	r2, [sp, #56]	; 0x38
   1581c:	ldrb	r1, [r2, r3]
   15820:	sub	r2, r1, #33	; 0x21
   15824:	uxtb	r2, r2
   15828:	cmp	r2, #29
   1582c:	bhi	158cc <tcgetattr@plt+0x4738>
   15830:	ldr	r0, [pc, #-36]	; 15814 <tcgetattr@plt+0x4680>
   15834:	mov	ip, #1
   15838:	ands	r2, r0, ip, lsl r2
   1583c:	beq	158dc <tcgetattr@plt+0x4748>
   15840:	ldr	r2, [sp, #28]
   15844:	cmp	r2, #0
   15848:	bne	159dc <tcgetattr@plt+0x4848>
   1584c:	cmp	fp, r7
   15850:	ldr	r8, [sp, #28]
   15854:	ldrhi	r2, [sp, #32]
   15858:	mov	sl, r3
   1585c:	mov	r5, r8
   15860:	strbhi	r4, [r2, r7]
   15864:	add	r2, r7, #1
   15868:	cmp	fp, r2
   1586c:	movhi	r0, #34	; 0x22
   15870:	ldrhi	ip, [sp, #32]
   15874:	mov	r4, r1
   15878:	strbhi	r0, [ip, r2]
   1587c:	add	r2, r7, #2
   15880:	cmp	fp, r2
   15884:	movhi	r0, #34	; 0x22
   15888:	ldrhi	ip, [sp, #32]
   1588c:	strbhi	r0, [ip, r2]
   15890:	add	r2, r7, #3
   15894:	cmp	fp, r2
   15898:	movhi	r0, #63	; 0x3f
   1589c:	ldrhi	ip, [sp, #32]
   158a0:	add	r7, r7, #4
   158a4:	strbhi	r0, [ip, r2]
   158a8:	mov	r2, r8
   158ac:	b	14a58 <tcgetattr@plt+0x38c4>
   158b0:	mov	ip, r2
   158b4:	mov	r2, r3
   158b8:	b	15248 <tcgetattr@plt+0x40b4>
   158bc:	ldr	sl, [sp, #32]
   158c0:	mov	r8, fp
   158c4:	ldr	r2, [sp, #28]
   158c8:	b	14c98 <tcgetattr@plt+0x3b04>
   158cc:	mov	r2, #0
   158d0:	mov	r8, r2
   158d4:	mov	r5, r2
   158d8:	b	14a58 <tcgetattr@plt+0x38c4>
   158dc:	mov	r8, r2
   158e0:	mov	r5, #0
   158e4:	b	14a58 <tcgetattr@plt+0x38c4>
   158e8:	ldr	r1, [sp, #152]	; 0x98
   158ec:	bl	143b4 <tcgetattr@plt+0x3220>
   158f0:	str	r0, [sp, #168]	; 0xa8
   158f4:	b	14914 <tcgetattr@plt+0x3780>
   158f8:	ldr	r1, [sp, #152]	; 0x98
   158fc:	bl	143b4 <tcgetattr@plt+0x3220>
   15900:	str	r0, [sp, #164]	; 0xa4
   15904:	b	148f4 <tcgetattr@plt+0x3760>
   15908:	ldr	r7, [sp, #28]
   1590c:	b	14954 <tcgetattr@plt+0x37c0>
   15910:	ldr	sl, [sp, #32]
   15914:	ldr	r2, [sp, #68]	; 0x44
   15918:	mov	r8, fp
   1591c:	mov	fp, r7
   15920:	ldr	r3, [sp, #64]	; 0x40
   15924:	cmp	r3, #0
   15928:	moveq	r2, #0
   1592c:	andne	r2, r2, #1
   15930:	cmp	r2, #0
   15934:	beq	15960 <tcgetattr@plt+0x47cc>
   15938:	mov	r2, r3
   1593c:	ldrb	r3, [r3]
   15940:	cmp	r3, #0
   15944:	beq	15960 <tcgetattr@plt+0x47cc>
   15948:	cmp	r8, fp
   1594c:	strbhi	r3, [sl, fp]
   15950:	ldrb	r3, [r2, #1]!
   15954:	add	fp, fp, #1
   15958:	cmp	r3, #0
   1595c:	bne	15948 <tcgetattr@plt+0x47b4>
   15960:	cmp	r8, fp
   15964:	movhi	r3, #0
   15968:	strbhi	r3, [sl, fp]
   1596c:	b	14cf4 <tcgetattr@plt+0x3b60>
   15970:	ldr	r3, [sp, #168]	; 0xa8
   15974:	ldr	sl, [sp, #32]
   15978:	str	r3, [sp, #16]
   1597c:	ldr	r3, [sp, #164]	; 0xa4
   15980:	mov	ip, #5
   15984:	str	r3, [sp, #12]
   15988:	ldr	r3, [sp, #160]	; 0xa0
   1598c:	ldr	r2, [sp, #56]	; 0x38
   15990:	str	r3, [sp, #8]
   15994:	ldr	r3, [sp, #156]	; 0x9c
   15998:	ldr	r1, [sp, #72]	; 0x48
   1599c:	str	r3, [sp, #4]
   159a0:	mov	r0, sl
   159a4:	ldr	r3, [sp, #24]
   159a8:	str	ip, [sp]
   159ac:	bl	144d4 <tcgetattr@plt+0x3340>
   159b0:	mov	fp, r0
   159b4:	b	14cf4 <tcgetattr@plt+0x3b60>
   159b8:	mov	r8, fp
   159bc:	ldr	sl, [sp, #32]
   159c0:	mov	fp, r7
   159c4:	mov	r2, r3
   159c8:	b	15920 <tcgetattr@plt+0x478c>
   159cc:	mov	r8, fp
   159d0:	ldr	sl, [sp, #32]
   159d4:	mov	fp, r7
   159d8:	b	15920 <tcgetattr@plt+0x478c>
   159dc:	ldr	sl, [sp, #32]
   159e0:	mov	r8, fp
   159e4:	b	14cb0 <tcgetattr@plt+0x3b1c>
   159e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159ec:	sub	sp, sp, #52	; 0x34
   159f0:	mov	r4, r0
   159f4:	mov	r5, r3
   159f8:	mov	sl, r1
   159fc:	mov	fp, r2
   15a00:	bl	110b0 <__errno_location@plt>
   15a04:	ldr	r7, [pc, #412]	; 15ba8 <tcgetattr@plt+0x4a14>
   15a08:	cmn	r4, #-2147483647	; 0x80000001
   15a0c:	ldr	r6, [r7]
   15a10:	mov	r8, r0
   15a14:	movne	r0, #0
   15a18:	moveq	r0, #1
   15a1c:	ldr	r3, [r8]
   15a20:	orrs	r0, r0, r4, lsr #31
   15a24:	str	r3, [sp, #24]
   15a28:	bne	15ba4 <tcgetattr@plt+0x4a10>
   15a2c:	ldr	r2, [r7, #4]
   15a30:	cmp	r4, r2
   15a34:	blt	15a94 <tcgetattr@plt+0x4900>
   15a38:	add	r9, r7, #8
   15a3c:	cmp	r6, r9
   15a40:	str	r2, [sp, #44]	; 0x2c
   15a44:	beq	15b74 <tcgetattr@plt+0x49e0>
   15a48:	mov	r3, #8
   15a4c:	sub	r2, r4, r2
   15a50:	mov	r0, r6
   15a54:	str	r3, [sp]
   15a58:	add	r2, r2, #1
   15a5c:	mvn	r3, #-2147483648	; 0x80000000
   15a60:	add	r1, sp, #44	; 0x2c
   15a64:	bl	16854 <tcgetattr@plt+0x56c0>
   15a68:	mov	r6, r0
   15a6c:	str	r0, [r7]
   15a70:	ldr	r0, [r7, #4]
   15a74:	ldr	r2, [sp, #44]	; 0x2c
   15a78:	mov	r1, #0
   15a7c:	sub	r2, r2, r0
   15a80:	add	r0, r6, r0, lsl #3
   15a84:	lsl	r2, r2, #3
   15a88:	bl	110d4 <memset@plt>
   15a8c:	ldr	r3, [sp, #44]	; 0x2c
   15a90:	str	r3, [r7, #4]
   15a94:	add	r3, r6, r4, lsl #3
   15a98:	ldr	r1, [r5, #4]
   15a9c:	ldr	r7, [r3, #4]
   15aa0:	ldr	r9, [r6, r4, lsl #3]
   15aa4:	ldr	r2, [r5, #40]	; 0x28
   15aa8:	ldr	ip, [r5, #44]	; 0x2c
   15aac:	add	r0, r5, #8
   15ab0:	str	r3, [sp, #28]
   15ab4:	ldr	r3, [r5]
   15ab8:	orr	r1, r1, #1
   15abc:	mov	lr, r0
   15ac0:	str	r1, [sp, #32]
   15ac4:	str	r0, [sp, #36]	; 0x24
   15ac8:	str	r1, [sp, #4]
   15acc:	str	r2, [sp, #12]
   15ad0:	str	r3, [sp]
   15ad4:	mov	r0, r7
   15ad8:	mov	r1, r9
   15adc:	str	ip, [sp, #16]
   15ae0:	str	lr, [sp, #8]
   15ae4:	mov	r3, fp
   15ae8:	mov	r2, sl
   15aec:	bl	144d4 <tcgetattr@plt+0x3340>
   15af0:	cmp	r9, r0
   15af4:	bhi	15b60 <tcgetattr@plt+0x49cc>
   15af8:	ldr	r3, [pc, #172]	; 15bac <tcgetattr@plt+0x4a18>
   15afc:	add	r9, r0, #1
   15b00:	cmp	r7, r3
   15b04:	str	r9, [r6, r4, lsl #3]
   15b08:	beq	15b14 <tcgetattr@plt+0x4980>
   15b0c:	mov	r0, r7
   15b10:	bl	14278 <tcgetattr@plt+0x30e4>
   15b14:	mov	r0, r9
   15b18:	bl	166f0 <tcgetattr@plt+0x555c>
   15b1c:	ldr	lr, [sp, #28]
   15b20:	ldr	ip, [r5, #44]	; 0x2c
   15b24:	ldr	r4, [r5, #40]	; 0x28
   15b28:	mov	r3, fp
   15b2c:	mov	r2, sl
   15b30:	mov	r1, r9
   15b34:	str	r0, [lr, #4]
   15b38:	ldr	lr, [r5]
   15b3c:	ldr	r5, [sp, #36]	; 0x24
   15b40:	str	ip, [sp, #16]
   15b44:	str	r5, [sp, #8]
   15b48:	ldr	r5, [sp, #32]
   15b4c:	str	r4, [sp, #12]
   15b50:	str	r5, [sp, #4]
   15b54:	str	lr, [sp]
   15b58:	mov	r7, r0
   15b5c:	bl	144d4 <tcgetattr@plt+0x3340>
   15b60:	ldr	r3, [sp, #24]
   15b64:	mov	r0, r7
   15b68:	str	r3, [r8]
   15b6c:	add	sp, sp, #52	; 0x34
   15b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b74:	mov	r3, #8
   15b78:	sub	r2, r4, r2
   15b7c:	str	r3, [sp]
   15b80:	add	r1, sp, #44	; 0x2c
   15b84:	add	r2, r2, #1
   15b88:	mvn	r3, #-2147483648	; 0x80000000
   15b8c:	bl	16854 <tcgetattr@plt+0x56c0>
   15b90:	mov	r6, r0
   15b94:	ldm	r9, {r0, r1}
   15b98:	str	r6, [r7]
   15b9c:	stm	r6, {r0, r1}
   15ba0:	b	15a70 <tcgetattr@plt+0x48dc>
   15ba4:	bl	11170 <abort@plt>
   15ba8:	andeq	ip, r2, ip, lsl r1
   15bac:	andeq	ip, r2, r0, ror #4
   15bb0:	push	{r4, r5, r6, lr}
   15bb4:	mov	r5, r0
   15bb8:	bl	110b0 <__errno_location@plt>
   15bbc:	cmp	r5, #0
   15bc0:	mov	r1, #48	; 0x30
   15bc4:	mov	r4, r0
   15bc8:	ldr	r0, [pc, #16]	; 15be0 <tcgetattr@plt+0x4a4c>
   15bcc:	ldr	r6, [r4]
   15bd0:	movne	r0, r5
   15bd4:	bl	16b50 <tcgetattr@plt+0x59bc>
   15bd8:	str	r6, [r4]
   15bdc:	pop	{r4, r5, r6, pc}
   15be0:	andeq	ip, r2, r0, ror #6
   15be4:	ldr	r3, [pc, #12]	; 15bf8 <tcgetattr@plt+0x4a64>
   15be8:	cmp	r0, #0
   15bec:	moveq	r0, r3
   15bf0:	ldr	r0, [r0]
   15bf4:	bx	lr
   15bf8:	andeq	ip, r2, r0, ror #6
   15bfc:	ldr	r3, [pc, #12]	; 15c10 <tcgetattr@plt+0x4a7c>
   15c00:	cmp	r0, #0
   15c04:	moveq	r0, r3
   15c08:	str	r1, [r0]
   15c0c:	bx	lr
   15c10:	andeq	ip, r2, r0, ror #6
   15c14:	ldr	r3, [pc, #52]	; 15c50 <tcgetattr@plt+0x4abc>
   15c18:	cmp	r0, #0
   15c1c:	moveq	r0, r3
   15c20:	add	r3, r0, #8
   15c24:	push	{lr}		; (str lr, [sp, #-4]!)
   15c28:	lsr	lr, r1, #5
   15c2c:	and	r1, r1, #31
   15c30:	ldr	ip, [r3, lr, lsl #2]
   15c34:	lsr	r0, ip, r1
   15c38:	eor	r2, r2, r0
   15c3c:	and	r2, r2, #1
   15c40:	and	r0, r0, #1
   15c44:	eor	r1, ip, r2, lsl r1
   15c48:	str	r1, [r3, lr, lsl #2]
   15c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c50:	andeq	ip, r2, r0, ror #6
   15c54:	ldr	r3, [pc, #16]	; 15c6c <tcgetattr@plt+0x4ad8>
   15c58:	cmp	r0, #0
   15c5c:	movne	r3, r0
   15c60:	ldr	r0, [r3, #4]
   15c64:	str	r1, [r3, #4]
   15c68:	bx	lr
   15c6c:	andeq	ip, r2, r0, ror #6
   15c70:	ldr	r3, [pc, #44]	; 15ca4 <tcgetattr@plt+0x4b10>
   15c74:	cmp	r0, #0
   15c78:	moveq	r0, r3
   15c7c:	mov	ip, #10
   15c80:	cmp	r2, #0
   15c84:	cmpne	r1, #0
   15c88:	str	ip, [r0]
   15c8c:	beq	15c9c <tcgetattr@plt+0x4b08>
   15c90:	str	r1, [r0, #40]	; 0x28
   15c94:	str	r2, [r0, #44]	; 0x2c
   15c98:	bx	lr
   15c9c:	push	{r4, lr}
   15ca0:	bl	11170 <abort@plt>
   15ca4:	andeq	ip, r2, r0, ror #6
   15ca8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15cac:	sub	sp, sp, #24
   15cb0:	ldr	ip, [pc, #108]	; 15d24 <tcgetattr@plt+0x4b90>
   15cb4:	ldr	r4, [sp, #56]	; 0x38
   15cb8:	mov	r9, r2
   15cbc:	cmp	r4, #0
   15cc0:	moveq	r4, ip
   15cc4:	mov	sl, r3
   15cc8:	mov	r7, r0
   15ccc:	mov	r8, r1
   15cd0:	bl	110b0 <__errno_location@plt>
   15cd4:	ldr	r3, [r4, #44]	; 0x2c
   15cd8:	mov	r1, r8
   15cdc:	ldr	r6, [r0]
   15ce0:	str	r3, [sp, #16]
   15ce4:	ldr	r2, [r4, #40]	; 0x28
   15ce8:	add	r3, r4, #8
   15cec:	str	r3, [sp, #8]
   15cf0:	str	r2, [sp, #12]
   15cf4:	ldr	r2, [r4, #4]
   15cf8:	mov	r5, r0
   15cfc:	str	r2, [sp, #4]
   15d00:	ldr	ip, [r4]
   15d04:	mov	r3, sl
   15d08:	mov	r2, r9
   15d0c:	mov	r0, r7
   15d10:	str	ip, [sp]
   15d14:	bl	144d4 <tcgetattr@plt+0x3340>
   15d18:	str	r6, [r5]
   15d1c:	add	sp, sp, #24
   15d20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d24:	andeq	ip, r2, r0, ror #6
   15d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d2c:	cmp	r3, #0
   15d30:	sub	sp, sp, #44	; 0x2c
   15d34:	ldr	r4, [pc, #192]	; 15dfc <tcgetattr@plt+0x4c68>
   15d38:	mov	r6, r2
   15d3c:	movne	r4, r3
   15d40:	mov	r9, r1
   15d44:	mov	r8, r0
   15d48:	bl	110b0 <__errno_location@plt>
   15d4c:	ldr	r3, [r4, #44]	; 0x2c
   15d50:	ldr	r5, [r4, #4]
   15d54:	add	sl, r4, #8
   15d58:	cmp	r6, #0
   15d5c:	orreq	r5, r5, #1
   15d60:	mov	r1, #0
   15d64:	ldr	r2, [r0]
   15d68:	str	r3, [sp, #16]
   15d6c:	ldr	r3, [r4, #40]	; 0x28
   15d70:	stmib	sp, {r5, sl}
   15d74:	str	r3, [sp, #12]
   15d78:	ldr	r3, [r4]
   15d7c:	mov	r7, r0
   15d80:	str	r2, [sp, #28]
   15d84:	str	r3, [sp]
   15d88:	mov	r2, r8
   15d8c:	mov	r3, r9
   15d90:	mov	r0, r1
   15d94:	bl	144d4 <tcgetattr@plt+0x3340>
   15d98:	add	r1, r0, #1
   15d9c:	mov	fp, r0
   15da0:	mov	r0, r1
   15da4:	str	r1, [sp, #36]	; 0x24
   15da8:	bl	166f0 <tcgetattr@plt+0x555c>
   15dac:	ldr	r3, [r4, #44]	; 0x2c
   15db0:	mov	r2, r8
   15db4:	str	r3, [sp, #16]
   15db8:	ldr	r3, [r4, #40]	; 0x28
   15dbc:	str	r5, [sp, #4]
   15dc0:	str	r3, [sp, #12]
   15dc4:	str	sl, [sp, #8]
   15dc8:	ldr	ip, [r4]
   15dcc:	ldr	r1, [sp, #36]	; 0x24
   15dd0:	mov	r3, r9
   15dd4:	str	ip, [sp]
   15dd8:	str	r0, [sp, #32]
   15ddc:	bl	144d4 <tcgetattr@plt+0x3340>
   15de0:	ldr	r2, [sp, #28]
   15de4:	cmp	r6, #0
   15de8:	str	r2, [r7]
   15dec:	ldr	r0, [sp, #32]
   15df0:	strne	fp, [r6]
   15df4:	add	sp, sp, #44	; 0x2c
   15df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dfc:	andeq	ip, r2, r0, ror #6
   15e00:	mov	r3, r2
   15e04:	mov	r2, #0
   15e08:	b	15d28 <tcgetattr@plt+0x4b94>
   15e0c:	push	{r4, r5, r6, r7, r8, lr}
   15e10:	ldr	r6, [pc, #116]	; 15e8c <tcgetattr@plt+0x4cf8>
   15e14:	ldr	r3, [r6, #4]
   15e18:	ldr	r7, [r6]
   15e1c:	cmp	r3, #1
   15e20:	movgt	r5, r7
   15e24:	movgt	r4, #1
   15e28:	ble	15e48 <tcgetattr@plt+0x4cb4>
   15e2c:	ldr	r0, [r5, #12]
   15e30:	bl	14278 <tcgetattr@plt+0x30e4>
   15e34:	ldr	r3, [r6, #4]
   15e38:	add	r4, r4, #1
   15e3c:	cmp	r3, r4
   15e40:	add	r5, r5, #8
   15e44:	bgt	15e2c <tcgetattr@plt+0x4c98>
   15e48:	ldr	r0, [r7, #4]
   15e4c:	ldr	r4, [pc, #60]	; 15e90 <tcgetattr@plt+0x4cfc>
   15e50:	cmp	r0, r4
   15e54:	beq	15e68 <tcgetattr@plt+0x4cd4>
   15e58:	bl	14278 <tcgetattr@plt+0x30e4>
   15e5c:	mov	r3, #256	; 0x100
   15e60:	str	r4, [r6, #12]
   15e64:	str	r3, [r6, #8]
   15e68:	ldr	r4, [pc, #36]	; 15e94 <tcgetattr@plt+0x4d00>
   15e6c:	cmp	r7, r4
   15e70:	beq	15e80 <tcgetattr@plt+0x4cec>
   15e74:	mov	r0, r7
   15e78:	bl	14278 <tcgetattr@plt+0x30e4>
   15e7c:	str	r4, [r6]
   15e80:	mov	r3, #1
   15e84:	str	r3, [r6, #4]
   15e88:	pop	{r4, r5, r6, r7, r8, pc}
   15e8c:	andeq	ip, r2, ip, lsl r1
   15e90:	andeq	ip, r2, r0, ror #4
   15e94:	andeq	ip, r2, r4, lsr #2
   15e98:	ldr	r3, [pc, #4]	; 15ea4 <tcgetattr@plt+0x4d10>
   15e9c:	mvn	r2, #0
   15ea0:	b	159e8 <tcgetattr@plt+0x4854>
   15ea4:	andeq	ip, r2, r0, ror #6
   15ea8:	ldr	r3, [pc]	; 15eb0 <tcgetattr@plt+0x4d1c>
   15eac:	b	159e8 <tcgetattr@plt+0x4854>
   15eb0:	andeq	ip, r2, r0, ror #6
   15eb4:	mov	r1, r0
   15eb8:	ldr	r3, [pc, #8]	; 15ec8 <tcgetattr@plt+0x4d34>
   15ebc:	mvn	r2, #0
   15ec0:	mov	r0, #0
   15ec4:	b	159e8 <tcgetattr@plt+0x4854>
   15ec8:	andeq	ip, r2, r0, ror #6
   15ecc:	mov	r2, r1
   15ed0:	ldr	r3, [pc, #8]	; 15ee0 <tcgetattr@plt+0x4d4c>
   15ed4:	mov	r1, r0
   15ed8:	mov	r0, #0
   15edc:	b	159e8 <tcgetattr@plt+0x4854>
   15ee0:	andeq	ip, r2, r0, ror #6
   15ee4:	push	{r4, r5, lr}
   15ee8:	sub	sp, sp, #52	; 0x34
   15eec:	mov	r5, r2
   15ef0:	mov	r4, r0
   15ef4:	mov	r0, sp
   15ef8:	bl	14384 <tcgetattr@plt+0x31f0>
   15efc:	mov	r3, sp
   15f00:	mov	r1, r5
   15f04:	mov	r0, r4
   15f08:	mvn	r2, #0
   15f0c:	bl	159e8 <tcgetattr@plt+0x4854>
   15f10:	add	sp, sp, #52	; 0x34
   15f14:	pop	{r4, r5, pc}
   15f18:	push	{r4, r5, r6, lr}
   15f1c:	sub	sp, sp, #48	; 0x30
   15f20:	mov	r5, r2
   15f24:	mov	r6, r3
   15f28:	mov	r4, r0
   15f2c:	mov	r0, sp
   15f30:	bl	14384 <tcgetattr@plt+0x31f0>
   15f34:	mov	r3, sp
   15f38:	mov	r2, r6
   15f3c:	mov	r1, r5
   15f40:	mov	r0, r4
   15f44:	bl	159e8 <tcgetattr@plt+0x4854>
   15f48:	add	sp, sp, #48	; 0x30
   15f4c:	pop	{r4, r5, r6, pc}
   15f50:	mov	r2, r1
   15f54:	mov	r1, r0
   15f58:	mov	r0, #0
   15f5c:	b	15ee4 <tcgetattr@plt+0x4d50>
   15f60:	mov	r3, r2
   15f64:	mov	r2, r1
   15f68:	mov	r1, r0
   15f6c:	mov	r0, #0
   15f70:	b	15f18 <tcgetattr@plt+0x4d84>
   15f74:	push	{r4, r5, r6, r7, r8, lr}
   15f78:	mov	r7, r0
   15f7c:	ldr	lr, [pc, #100]	; 15fe8 <tcgetattr@plt+0x4e54>
   15f80:	mov	r8, r1
   15f84:	mov	r4, r2
   15f88:	ldm	lr!, {r0, r1, r2, r3}
   15f8c:	sub	sp, sp, #48	; 0x30
   15f90:	mov	ip, sp
   15f94:	lsr	r5, r4, #5
   15f98:	stmia	ip!, {r0, r1, r2, r3}
   15f9c:	add	r6, sp, #8
   15fa0:	ldm	lr!, {r0, r1, r2, r3}
   15fa4:	and	r4, r4, #31
   15fa8:	stmia	ip!, {r0, r1, r2, r3}
   15fac:	ldm	lr, {r0, r1, r2, r3}
   15fb0:	stm	ip, {r0, r1, r2, r3}
   15fb4:	mov	r2, r8
   15fb8:	ldr	lr, [r6, r5, lsl #2]
   15fbc:	mov	r1, r7
   15fc0:	mov	r3, sp
   15fc4:	lsr	ip, lr, r4
   15fc8:	eor	ip, ip, #1
   15fcc:	and	ip, ip, #1
   15fd0:	mov	r0, #0
   15fd4:	eor	r4, lr, ip, lsl r4
   15fd8:	str	r4, [r6, r5, lsl #2]
   15fdc:	bl	159e8 <tcgetattr@plt+0x4854>
   15fe0:	add	sp, sp, #48	; 0x30
   15fe4:	pop	{r4, r5, r6, r7, r8, pc}
   15fe8:	andeq	ip, r2, r0, ror #6
   15fec:	mov	r2, r1
   15ff0:	mvn	r1, #0
   15ff4:	b	15f74 <tcgetattr@plt+0x4de0>
   15ff8:	mov	r2, #58	; 0x3a
   15ffc:	mvn	r1, #0
   16000:	b	15f74 <tcgetattr@plt+0x4de0>
   16004:	mov	r2, #58	; 0x3a
   16008:	b	15f74 <tcgetattr@plt+0x4de0>
   1600c:	push	{r4, r5, r6, r7, lr}
   16010:	sub	sp, sp, #100	; 0x64
   16014:	mov	r6, r0
   16018:	mov	r0, sp
   1601c:	mov	r7, r2
   16020:	bl	14384 <tcgetattr@plt+0x31f0>
   16024:	mov	ip, sp
   16028:	add	lr, sp, #48	; 0x30
   1602c:	ldm	ip!, {r0, r1, r2, r3}
   16030:	stmia	lr!, {r0, r1, r2, r3}
   16034:	ldm	ip!, {r0, r1, r2, r3}
   16038:	ldr	r5, [sp, #60]	; 0x3c
   1603c:	stmia	lr!, {r0, r1, r2, r3}
   16040:	mvn	r4, r5
   16044:	ldm	ip, {r0, r1, r2, r3}
   16048:	and	ip, r4, #67108864	; 0x4000000
   1604c:	eor	ip, ip, r5
   16050:	str	ip, [sp, #60]	; 0x3c
   16054:	stm	lr, {r0, r1, r2, r3}
   16058:	mov	r1, r7
   1605c:	mov	r0, r6
   16060:	add	r3, sp, #48	; 0x30
   16064:	mvn	r2, #0
   16068:	bl	159e8 <tcgetattr@plt+0x4854>
   1606c:	add	sp, sp, #100	; 0x64
   16070:	pop	{r4, r5, r6, r7, pc}
   16074:	push	{r4, r5, r6, r7, r8, lr}
   16078:	mov	r5, r1
   1607c:	ldr	lr, [pc, #100]	; 160e8 <tcgetattr@plt+0x4f54>
   16080:	mov	r4, r2
   16084:	mov	r7, r0
   16088:	mov	r8, r3
   1608c:	ldm	lr!, {r0, r1, r2, r3}
   16090:	sub	sp, sp, #48	; 0x30
   16094:	mov	ip, sp
   16098:	mov	r6, #10
   1609c:	stmia	ip!, {r0, r1, r2, r3}
   160a0:	cmp	r4, #0
   160a4:	cmpne	r5, #0
   160a8:	ldm	lr!, {r0, r1, r2, r3}
   160ac:	str	r6, [sp]
   160b0:	stmia	ip!, {r0, r1, r2, r3}
   160b4:	ldm	lr, {r0, r1, r2, r3}
   160b8:	stm	ip, {r0, r1, r2, r3}
   160bc:	beq	160e4 <tcgetattr@plt+0x4f50>
   160c0:	mov	r3, sp
   160c4:	mov	r1, r8
   160c8:	mov	r0, r7
   160cc:	ldr	r2, [sp, #72]	; 0x48
   160d0:	str	r5, [sp, #40]	; 0x28
   160d4:	str	r4, [sp, #44]	; 0x2c
   160d8:	bl	159e8 <tcgetattr@plt+0x4854>
   160dc:	add	sp, sp, #48	; 0x30
   160e0:	pop	{r4, r5, r6, r7, r8, pc}
   160e4:	bl	11170 <abort@plt>
   160e8:	andeq	ip, r2, r0, ror #6
   160ec:	push	{lr}		; (str lr, [sp, #-4]!)
   160f0:	sub	sp, sp, #12
   160f4:	mvn	ip, #0
   160f8:	str	ip, [sp]
   160fc:	bl	16074 <tcgetattr@plt+0x4ee0>
   16100:	add	sp, sp, #12
   16104:	pop	{pc}		; (ldr pc, [sp], #4)
   16108:	push	{lr}		; (str lr, [sp, #-4]!)
   1610c:	sub	sp, sp, #12
   16110:	mvn	ip, #0
   16114:	mov	r3, r2
   16118:	str	ip, [sp]
   1611c:	mov	r2, r1
   16120:	mov	r1, r0
   16124:	mov	r0, #0
   16128:	bl	16074 <tcgetattr@plt+0x4ee0>
   1612c:	add	sp, sp, #12
   16130:	pop	{pc}		; (ldr pc, [sp], #4)
   16134:	push	{lr}		; (str lr, [sp, #-4]!)
   16138:	sub	sp, sp, #12
   1613c:	str	r3, [sp]
   16140:	mov	r3, r2
   16144:	mov	r2, r1
   16148:	mov	r1, r0
   1614c:	mov	r0, #0
   16150:	bl	16074 <tcgetattr@plt+0x4ee0>
   16154:	add	sp, sp, #12
   16158:	pop	{pc}		; (ldr pc, [sp], #4)
   1615c:	ldr	r3, [pc]	; 16164 <tcgetattr@plt+0x4fd0>
   16160:	b	159e8 <tcgetattr@plt+0x4854>
   16164:	andeq	ip, r2, ip, lsr #2
   16168:	mov	r2, r1
   1616c:	ldr	r3, [pc, #8]	; 1617c <tcgetattr@plt+0x4fe8>
   16170:	mov	r1, r0
   16174:	mov	r0, #0
   16178:	b	159e8 <tcgetattr@plt+0x4854>
   1617c:	andeq	ip, r2, ip, lsr #2
   16180:	ldr	r3, [pc, #4]	; 1618c <tcgetattr@plt+0x4ff8>
   16184:	mvn	r2, #0
   16188:	b	159e8 <tcgetattr@plt+0x4854>
   1618c:	andeq	ip, r2, ip, lsr #2
   16190:	mov	r1, r0
   16194:	ldr	r3, [pc, #8]	; 161a4 <tcgetattr@plt+0x5010>
   16198:	mvn	r2, #0
   1619c:	mov	r0, #0
   161a0:	b	159e8 <tcgetattr@plt+0x4854>
   161a4:	andeq	ip, r2, ip, lsr #2
   161a8:	push	{r4, r5, r6, lr}
   161ac:	sub	sp, sp, #32
   161b0:	cmp	r1, #0
   161b4:	mov	r4, r0
   161b8:	ldr	r5, [sp, #48]	; 0x30
   161bc:	ldr	r6, [sp, #52]	; 0x34
   161c0:	beq	164d8 <tcgetattr@plt+0x5344>
   161c4:	stm	sp, {r2, r3}
   161c8:	mov	r3, r1
   161cc:	ldr	r2, [pc, #808]	; 164fc <tcgetattr@plt+0x5368>
   161d0:	mov	r1, #1
   161d4:	bl	110f8 <__fprintf_chk@plt>
   161d8:	mov	r2, #5
   161dc:	ldr	r1, [pc, #796]	; 16500 <tcgetattr@plt+0x536c>
   161e0:	mov	r0, #0
   161e4:	bl	10f54 <dcgettext@plt>
   161e8:	ldr	r3, [pc, #788]	; 16504 <tcgetattr@plt+0x5370>
   161ec:	ldr	r2, [pc, #788]	; 16508 <tcgetattr@plt+0x5374>
   161f0:	str	r3, [sp]
   161f4:	mov	r1, #1
   161f8:	mov	r3, r0
   161fc:	mov	r0, r4
   16200:	bl	110f8 <__fprintf_chk@plt>
   16204:	mov	r1, r4
   16208:	mov	r0, #10
   1620c:	bl	10f48 <fputc_unlocked@plt>
   16210:	mov	r2, #5
   16214:	ldr	r1, [pc, #752]	; 1650c <tcgetattr@plt+0x5378>
   16218:	mov	r0, #0
   1621c:	bl	10f54 <dcgettext@plt>
   16220:	mov	r1, #1
   16224:	ldr	r3, [pc, #740]	; 16510 <tcgetattr@plt+0x537c>
   16228:	mov	r2, r0
   1622c:	mov	r0, r4
   16230:	bl	110f8 <__fprintf_chk@plt>
   16234:	mov	r1, r4
   16238:	mov	r0, #10
   1623c:	bl	10f48 <fputc_unlocked@plt>
   16240:	cmp	r6, #9
   16244:	ldrls	pc, [pc, r6, lsl #2]
   16248:	b	164f0 <tcgetattr@plt+0x535c>
   1624c:	ldrdeq	r6, [r1], -r0
   16250:	ldrdeq	r6, [r1], -r8
   16254:	andeq	r6, r1, r4, lsl #6
   16258:	andeq	r6, r1, r8, lsr r3
   1625c:	andeq	r6, r1, r4, ror r3
   16260:			; <UNDEFINED> instruction: 0x000163b0
   16264:	andeq	r6, r1, ip, ror #7
   16268:	andeq	r6, r1, r0, lsr r4
   1626c:	andeq	r6, r1, r0, lsl #9
   16270:	andeq	r6, r1, r4, ror r2
   16274:	ldr	r1, [pc, #664]	; 16514 <tcgetattr@plt+0x5380>
   16278:	mov	r2, #5
   1627c:	mov	r0, #0
   16280:	bl	10f54 <dcgettext@plt>
   16284:	ldr	ip, [r5, #32]
   16288:	ldr	r1, [r5, #28]
   1628c:	ldr	r2, [r5, #24]
   16290:	ldr	r3, [r5]
   16294:	ldr	r6, [r5, #20]
   16298:	str	ip, [sp, #28]
   1629c:	ldr	lr, [r5, #16]
   162a0:	str	r1, [sp, #24]
   162a4:	ldr	ip, [r5, #12]
   162a8:	str	r2, [sp, #20]
   162ac:	ldr	r1, [r5, #8]
   162b0:	ldr	r2, [r5, #4]
   162b4:	str	r6, [sp, #16]
   162b8:	stmib	sp, {r1, ip, lr}
   162bc:	mov	r1, #1
   162c0:	str	r2, [sp]
   162c4:	mov	r2, r0
   162c8:	mov	r0, r4
   162cc:	bl	110f8 <__fprintf_chk@plt>
   162d0:	add	sp, sp, #32
   162d4:	pop	{r4, r5, r6, pc}
   162d8:	mov	r2, #5
   162dc:	ldr	r1, [pc, #564]	; 16518 <tcgetattr@plt+0x5384>
   162e0:	mov	r0, #0
   162e4:	bl	10f54 <dcgettext@plt>
   162e8:	ldr	r3, [r5]
   162ec:	mov	r1, #1
   162f0:	mov	r2, r0
   162f4:	mov	r0, r4
   162f8:	add	sp, sp, #32
   162fc:	pop	{r4, r5, r6, lr}
   16300:	b	110f8 <__fprintf_chk@plt>
   16304:	mov	r2, #5
   16308:	ldr	r1, [pc, #524]	; 1651c <tcgetattr@plt+0x5388>
   1630c:	mov	r0, #0
   16310:	bl	10f54 <dcgettext@plt>
   16314:	ldr	r2, [r5, #4]
   16318:	ldr	r3, [r5]
   1631c:	mov	r1, #1
   16320:	str	r2, [sp, #48]	; 0x30
   16324:	mov	r2, r0
   16328:	mov	r0, r4
   1632c:	add	sp, sp, #32
   16330:	pop	{r4, r5, r6, lr}
   16334:	b	110f8 <__fprintf_chk@plt>
   16338:	mov	r2, #5
   1633c:	ldr	r1, [pc, #476]	; 16520 <tcgetattr@plt+0x538c>
   16340:	mov	r0, #0
   16344:	bl	10f54 <dcgettext@plt>
   16348:	ldr	r1, [r5, #8]
   1634c:	ldr	r2, [r5, #4]
   16350:	ldr	r3, [r5]
   16354:	str	r1, [sp, #52]	; 0x34
   16358:	str	r2, [sp, #48]	; 0x30
   1635c:	mov	r1, #1
   16360:	mov	r2, r0
   16364:	mov	r0, r4
   16368:	add	sp, sp, #32
   1636c:	pop	{r4, r5, r6, lr}
   16370:	b	110f8 <__fprintf_chk@plt>
   16374:	mov	r2, #5
   16378:	ldr	r1, [pc, #420]	; 16524 <tcgetattr@plt+0x5390>
   1637c:	mov	r0, #0
   16380:	bl	10f54 <dcgettext@plt>
   16384:	ldr	r1, [r5, #8]
   16388:	ldr	ip, [r5, #12]
   1638c:	ldr	r2, [r5, #4]
   16390:	ldr	r3, [r5]
   16394:	stmib	sp, {r1, ip}
   16398:	str	r2, [sp]
   1639c:	mov	r1, #1
   163a0:	mov	r2, r0
   163a4:	mov	r0, r4
   163a8:	bl	110f8 <__fprintf_chk@plt>
   163ac:	b	162d0 <tcgetattr@plt+0x513c>
   163b0:	mov	r2, #5
   163b4:	ldr	r1, [pc, #364]	; 16528 <tcgetattr@plt+0x5394>
   163b8:	mov	r0, #0
   163bc:	bl	10f54 <dcgettext@plt>
   163c0:	add	r1, r5, #8
   163c4:	ldr	r2, [r5, #4]
   163c8:	ldm	r1, {r1, ip, lr}
   163cc:	ldr	r3, [r5]
   163d0:	str	r2, [sp]
   163d4:	stmib	sp, {r1, ip, lr}
   163d8:	mov	r1, #1
   163dc:	mov	r2, r0
   163e0:	mov	r0, r4
   163e4:	bl	110f8 <__fprintf_chk@plt>
   163e8:	b	162d0 <tcgetattr@plt+0x513c>
   163ec:	mov	r2, #5
   163f0:	ldr	r1, [pc, #308]	; 1652c <tcgetattr@plt+0x5398>
   163f4:	mov	r0, #0
   163f8:	bl	10f54 <dcgettext@plt>
   163fc:	add	r1, r5, #8
   16400:	ldr	r2, [r5, #4]
   16404:	ldm	r1, {r1, ip, lr}
   16408:	ldr	r6, [r5, #20]
   1640c:	ldr	r3, [r5]
   16410:	stmib	sp, {r1, ip, lr}
   16414:	mov	r1, #1
   16418:	str	r2, [sp]
   1641c:	str	r6, [sp, #16]
   16420:	mov	r2, r0
   16424:	mov	r0, r4
   16428:	bl	110f8 <__fprintf_chk@plt>
   1642c:	b	162d0 <tcgetattr@plt+0x513c>
   16430:	mov	r2, #5
   16434:	ldr	r1, [pc, #244]	; 16530 <tcgetattr@plt+0x539c>
   16438:	mov	r0, #0
   1643c:	bl	10f54 <dcgettext@plt>
   16440:	ldr	r2, [r5, #24]
   16444:	ldr	r3, [r5]
   16448:	ldr	r6, [r5, #20]
   1644c:	ldr	lr, [r5, #16]
   16450:	ldr	ip, [r5, #12]
   16454:	str	r2, [sp, #20]
   16458:	ldr	r1, [r5, #8]
   1645c:	ldr	r2, [r5, #4]
   16460:	str	r6, [sp, #16]
   16464:	stmib	sp, {r1, ip, lr}
   16468:	mov	r1, #1
   1646c:	str	r2, [sp]
   16470:	mov	r2, r0
   16474:	mov	r0, r4
   16478:	bl	110f8 <__fprintf_chk@plt>
   1647c:	b	162d0 <tcgetattr@plt+0x513c>
   16480:	mov	r2, #5
   16484:	ldr	r1, [pc, #168]	; 16534 <tcgetattr@plt+0x53a0>
   16488:	mov	r0, #0
   1648c:	bl	10f54 <dcgettext@plt>
   16490:	ldr	r1, [r5, #28]
   16494:	ldr	r2, [r5, #24]
   16498:	ldr	r3, [r5]
   1649c:	ldr	r6, [r5, #20]
   164a0:	ldr	lr, [r5, #16]
   164a4:	str	r1, [sp, #24]
   164a8:	ldr	ip, [r5, #12]
   164ac:	str	r2, [sp, #20]
   164b0:	ldr	r1, [r5, #8]
   164b4:	ldr	r2, [r5, #4]
   164b8:	str	r6, [sp, #16]
   164bc:	stmib	sp, {r1, ip, lr}
   164c0:	mov	r1, #1
   164c4:	str	r2, [sp]
   164c8:	mov	r2, r0
   164cc:	mov	r0, r4
   164d0:	bl	110f8 <__fprintf_chk@plt>
   164d4:	b	162d0 <tcgetattr@plt+0x513c>
   164d8:	str	r3, [sp]
   164dc:	mov	r1, #1
   164e0:	mov	r3, r2
   164e4:	ldr	r2, [pc, #76]	; 16538 <tcgetattr@plt+0x53a4>
   164e8:	bl	110f8 <__fprintf_chk@plt>
   164ec:	b	161d8 <tcgetattr@plt+0x5044>
   164f0:	mov	r2, #5
   164f4:	ldr	r1, [pc, #64]	; 1653c <tcgetattr@plt+0x53a8>
   164f8:	b	1627c <tcgetattr@plt+0x50e8>
   164fc:	andeq	fp, r1, ip, lsl #16
   16500:	andeq	fp, r1, r0, lsr #16
   16504:	andeq	r0, r0, r6, ror #15
   16508:	strdeq	fp, [r1], -r8
   1650c:	andeq	fp, r1, r4, lsr #16
   16510:	ldrdeq	fp, [r1], -r0
   16514:	andeq	fp, r1, r0, lsl #20
   16518:	strdeq	fp, [r1], -r4
   1651c:	andeq	fp, r1, r4, lsl #18
   16520:	andeq	fp, r1, ip, lsl r9
   16524:	andeq	fp, r1, r8, lsr r9
   16528:	andeq	fp, r1, r8, asr r9
   1652c:	andeq	fp, r1, ip, ror r9
   16530:	andeq	fp, r1, r4, lsr #19
   16534:	ldrdeq	fp, [r1], -r0
   16538:	andeq	fp, r1, r8, lsl r8
   1653c:	andeq	fp, r1, r4, lsr sl
   16540:	push	{r4, r5, lr}
   16544:	sub	sp, sp, #12
   16548:	ldr	r5, [sp, #24]
   1654c:	ldr	ip, [r5]
   16550:	cmp	ip, #0
   16554:	beq	16570 <tcgetattr@plt+0x53dc>
   16558:	mov	lr, r5
   1655c:	mov	ip, #0
   16560:	ldr	r4, [lr, #4]!
   16564:	add	ip, ip, #1
   16568:	cmp	r4, #0
   1656c:	bne	16560 <tcgetattr@plt+0x53cc>
   16570:	stm	sp, {r5, ip}
   16574:	bl	161a8 <tcgetattr@plt+0x5014>
   16578:	add	sp, sp, #12
   1657c:	pop	{r4, r5, pc}
   16580:	push	{r4, r5, lr}
   16584:	sub	sp, sp, #52	; 0x34
   16588:	add	r5, sp, #4
   1658c:	ldr	r4, [sp, #64]	; 0x40
   16590:	mov	ip, #0
   16594:	sub	r4, r4, #4
   16598:	ldr	lr, [r4, #4]!
   1659c:	cmp	lr, #0
   165a0:	str	lr, [r5, #4]!
   165a4:	beq	165b4 <tcgetattr@plt+0x5420>
   165a8:	add	ip, ip, #1
   165ac:	cmp	ip, #10
   165b0:	bne	16598 <tcgetattr@plt+0x5404>
   165b4:	add	lr, sp, #8
   165b8:	str	ip, [sp, #4]
   165bc:	str	lr, [sp]
   165c0:	bl	161a8 <tcgetattr@plt+0x5014>
   165c4:	add	sp, sp, #52	; 0x34
   165c8:	pop	{r4, r5, pc}
   165cc:	push	{r3}		; (str r3, [sp, #-4]!)
   165d0:	push	{r4, lr}
   165d4:	sub	sp, sp, #60	; 0x3c
   165d8:	add	lr, sp, #56	; 0x38
   165dc:	add	r3, sp, #72	; 0x48
   165e0:	str	r3, [lr, #-44]!	; 0xffffffd4
   165e4:	add	r4, sp, #68	; 0x44
   165e8:	mov	r3, #0
   165ec:	ldr	ip, [r4, #4]!
   165f0:	cmp	ip, #0
   165f4:	str	ip, [lr, #4]!
   165f8:	beq	16608 <tcgetattr@plt+0x5474>
   165fc:	add	r3, r3, #1
   16600:	cmp	r3, #10
   16604:	bne	165ec <tcgetattr@plt+0x5458>
   16608:	add	ip, sp, #16
   1660c:	str	r3, [sp, #4]
   16610:	str	ip, [sp]
   16614:	ldr	r3, [sp, #68]	; 0x44
   16618:	bl	161a8 <tcgetattr@plt+0x5014>
   1661c:	add	sp, sp, #60	; 0x3c
   16620:	pop	{r4, lr}
   16624:	add	sp, sp, #4
   16628:	bx	lr
   1662c:	ldr	r3, [pc, #116]	; 166a8 <tcgetattr@plt+0x5514>
   16630:	push	{r4, lr}
   16634:	mov	r0, #10
   16638:	ldr	r1, [r3]
   1663c:	bl	10f48 <fputc_unlocked@plt>
   16640:	mov	r2, #5
   16644:	ldr	r1, [pc, #96]	; 166ac <tcgetattr@plt+0x5518>
   16648:	mov	r0, #0
   1664c:	bl	10f54 <dcgettext@plt>
   16650:	ldr	r2, [pc, #88]	; 166b0 <tcgetattr@plt+0x551c>
   16654:	mov	r1, r0
   16658:	mov	r0, #1
   1665c:	bl	110e0 <__printf_chk@plt>
   16660:	mov	r2, #5
   16664:	ldr	r1, [pc, #72]	; 166b4 <tcgetattr@plt+0x5520>
   16668:	mov	r0, #0
   1666c:	bl	10f54 <dcgettext@plt>
   16670:	ldr	r3, [pc, #64]	; 166b8 <tcgetattr@plt+0x5524>
   16674:	ldr	r2, [pc, #64]	; 166bc <tcgetattr@plt+0x5528>
   16678:	mov	r1, r0
   1667c:	mov	r0, #1
   16680:	bl	110e0 <__printf_chk@plt>
   16684:	mov	r2, #5
   16688:	ldr	r1, [pc, #48]	; 166c0 <tcgetattr@plt+0x552c>
   1668c:	mov	r0, #0
   16690:	bl	10f54 <dcgettext@plt>
   16694:	ldr	r2, [pc, #40]	; 166c4 <tcgetattr@plt+0x5530>
   16698:	pop	{r4, lr}
   1669c:	mov	r1, r0
   166a0:	mov	r0, #1
   166a4:	b	110e0 <__printf_chk@plt>
   166a8:	andeq	ip, r2, r4, ror r1
   166ac:	andeq	fp, r1, r0, ror sl
   166b0:	andeq	fp, r1, r4, lsl #21
   166b4:	muleq	r1, ip, sl
   166b8:	andeq	sl, r1, r0, lsr pc
   166bc:	andeq	sl, r1, r8, asr pc
   166c0:			; <UNDEFINED> instruction: 0x0001bab0
   166c4:	ldrdeq	fp, [r1], -r8
   166c8:	push	{r4, lr}
   166cc:	bl	179b4 <tcgetattr@plt+0x6820>
   166d0:	cmp	r0, #0
   166d4:	popne	{r4, pc}
   166d8:	bl	16c10 <tcgetattr@plt+0x5a7c>
   166dc:	push	{r4, lr}
   166e0:	bl	179b4 <tcgetattr@plt+0x6820>
   166e4:	cmp	r0, #0
   166e8:	popne	{r4, pc}
   166ec:	bl	16c10 <tcgetattr@plt+0x5a7c>
   166f0:	push	{r4, lr}
   166f4:	bl	179b4 <tcgetattr@plt+0x6820>
   166f8:	cmp	r0, #0
   166fc:	popne	{r4, pc}
   16700:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16704:	push	{r4, r5, r6, lr}
   16708:	mov	r5, r0
   1670c:	mov	r4, r1
   16710:	bl	179e0 <tcgetattr@plt+0x684c>
   16714:	cmp	r0, #0
   16718:	popne	{r4, r5, r6, pc}
   1671c:	adds	r4, r4, #0
   16720:	movne	r4, #1
   16724:	cmp	r5, #0
   16728:	orreq	r4, r4, #1
   1672c:	cmp	r4, #0
   16730:	popeq	{r4, r5, r6, pc}
   16734:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16738:	push	{r4, lr}
   1673c:	cmp	r1, #0
   16740:	orreq	r1, r1, #1
   16744:	bl	179e0 <tcgetattr@plt+0x684c>
   16748:	cmp	r0, #0
   1674c:	popne	{r4, pc}
   16750:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16754:	push	{r4, r5, r6, lr}
   16758:	mov	r6, r0
   1675c:	mov	r5, r1
   16760:	mov	r4, r2
   16764:	bl	17ce0 <tcgetattr@plt+0x6b4c>
   16768:	cmp	r0, #0
   1676c:	popne	{r4, r5, r6, pc}
   16770:	cmp	r6, #0
   16774:	beq	16784 <tcgetattr@plt+0x55f0>
   16778:	cmp	r5, #0
   1677c:	cmpne	r4, #0
   16780:	popeq	{r4, r5, r6, pc}
   16784:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16788:	b	16754 <tcgetattr@plt+0x55c0>
   1678c:	cmp	r2, #0
   16790:	cmpne	r1, #0
   16794:	moveq	r2, #1
   16798:	moveq	r1, r2
   1679c:	push	{r4, lr}
   167a0:	bl	17ce0 <tcgetattr@plt+0x6b4c>
   167a4:	cmp	r0, #0
   167a8:	popne	{r4, pc}
   167ac:	bl	16c10 <tcgetattr@plt+0x5a7c>
   167b0:	mov	r2, r1
   167b4:	mov	r1, r0
   167b8:	mov	r0, #0
   167bc:	b	16754 <tcgetattr@plt+0x55c0>
   167c0:	mov	r2, r1
   167c4:	mov	r1, r0
   167c8:	mov	r0, #0
   167cc:	b	1678c <tcgetattr@plt+0x55f8>
   167d0:	push	{r4, r5, r6, lr}
   167d4:	subs	r6, r0, #0
   167d8:	sub	sp, sp, #8
   167dc:	mov	r5, r1
   167e0:	ldr	r4, [r1]
   167e4:	beq	16820 <tcgetattr@plt+0x568c>
   167e8:	lsr	r1, r4, #1
   167ec:	add	r3, r1, #1
   167f0:	mvn	r3, r3
   167f4:	cmp	r4, r3
   167f8:	bhi	1681c <tcgetattr@plt+0x5688>
   167fc:	add	r4, r4, #1
   16800:	add	r4, r4, r1
   16804:	mov	r0, r6
   16808:	mov	r1, r4
   1680c:	bl	16754 <tcgetattr@plt+0x55c0>
   16810:	str	r4, [r5]
   16814:	add	sp, sp, #8
   16818:	pop	{r4, r5, r6, pc}
   1681c:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16820:	cmp	r4, #0
   16824:	bne	16804 <tcgetattr@plt+0x5670>
   16828:	mov	r1, r2
   1682c:	mov	r0, #64	; 0x40
   16830:	str	r2, [sp, #4]
   16834:	bl	17e20 <tcgetattr@plt+0x6c8c>
   16838:	ldr	r2, [sp, #4]
   1683c:	cmp	r0, #0
   16840:	movne	r4, r0
   16844:	addeq	r4, r0, #1
   16848:	b	16804 <tcgetattr@plt+0x5670>
   1684c:	mov	r2, #1
   16850:	b	167d0 <tcgetattr@plt+0x563c>
   16854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16858:	sub	sp, sp, #12
   1685c:	ldr	r6, [r1]
   16860:	mov	sl, r1
   16864:	mov	r9, r0
   16868:	asrs	r4, r6, #1
   1686c:	mov	r5, r2
   16870:	mov	fp, r3
   16874:	ldr	r7, [sp, #48]	; 0x30
   16878:	bmi	169e4 <tcgetattr@plt+0x5850>
   1687c:	mvn	r3, #-2147483648	; 0x80000000
   16880:	sub	r3, r3, r4
   16884:	cmp	r6, r3
   16888:	movle	r3, #0
   1688c:	movgt	r3, #1
   16890:	mvn	r8, fp
   16894:	cmp	r3, #0
   16898:	addeq	r4, r4, r6
   1689c:	mvnne	r4, #-2147483648	; 0x80000000
   168a0:	lsr	r8, r8, #31
   168a4:	cmp	fp, r4
   168a8:	movge	r3, #0
   168ac:	andlt	r3, r8, #1
   168b0:	cmp	r3, #0
   168b4:	beq	1699c <tcgetattr@plt+0x5808>
   168b8:	cmp	r7, #0
   168bc:	blt	16a6c <tcgetattr@plt+0x58d8>
   168c0:	bne	16a64 <tcgetattr@plt+0x58d0>
   168c4:	mov	r2, #64	; 0x40
   168c8:	mov	r1, r7
   168cc:	mov	r0, r2
   168d0:	str	r2, [sp, #4]
   168d4:	bl	1802c <tcgetattr@plt+0x6e98>
   168d8:	ldr	r2, [sp, #4]
   168dc:	mov	r1, r7
   168e0:	mov	r4, r0
   168e4:	mov	r0, r2
   168e8:	bl	1824c <tcgetattr@plt+0x70b8>
   168ec:	ldr	r2, [sp, #4]
   168f0:	sub	r1, r2, r1
   168f4:	cmp	r9, #0
   168f8:	sub	r3, r4, r6
   168fc:	streq	r9, [sl]
   16900:	cmp	r3, r5
   16904:	bge	16988 <tcgetattr@plt+0x57f4>
   16908:	cmp	r5, #0
   1690c:	blt	169f8 <tcgetattr@plt+0x5864>
   16910:	cmp	r6, #0
   16914:	blt	16934 <tcgetattr@plt+0x57a0>
   16918:	mvn	r3, #-2147483648	; 0x80000000
   1691c:	sub	r3, r3, r5
   16920:	cmp	r6, r3
   16924:	movle	r3, #0
   16928:	movgt	r3, #1
   1692c:	cmp	r3, #0
   16930:	bne	16af4 <tcgetattr@plt+0x5960>
   16934:	add	r5, r6, r5
   16938:	cmp	fp, r5
   1693c:	movge	r8, #0
   16940:	andlt	r8, r8, #1
   16944:	cmp	r8, #0
   16948:	mov	r4, r5
   1694c:	bne	16af4 <tcgetattr@plt+0x5960>
   16950:	cmp	r7, #0
   16954:	blt	16a0c <tcgetattr@plt+0x5878>
   16958:	beq	16984 <tcgetattr@plt+0x57f0>
   1695c:	cmp	r5, #0
   16960:	blt	16ab4 <tcgetattr@plt+0x5920>
   16964:	mov	r1, r7
   16968:	mvn	r0, #-2147483648	; 0x80000000
   1696c:	bl	1802c <tcgetattr@plt+0x6e98>
   16970:	cmp	r5, r0
   16974:	movle	r0, #0
   16978:	movgt	r0, #1
   1697c:	cmp	r0, #0
   16980:	bne	16af4 <tcgetattr@plt+0x5960>
   16984:	mul	r1, r5, r7
   16988:	mov	r0, r9
   1698c:	bl	16704 <tcgetattr@plt+0x5570>
   16990:	str	r4, [sl]
   16994:	add	sp, sp, #12
   16998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1699c:	cmp	r7, #0
   169a0:	blt	16a38 <tcgetattr@plt+0x58a4>
   169a4:	beq	168c4 <tcgetattr@plt+0x5730>
   169a8:	cmp	r4, #0
   169ac:	blt	16a74 <tcgetattr@plt+0x58e0>
   169b0:	mov	r1, r7
   169b4:	mvn	r0, #-2147483648	; 0x80000000
   169b8:	bl	1802c <tcgetattr@plt+0x6e98>
   169bc:	cmp	r0, r4
   169c0:	movge	r0, #0
   169c4:	movlt	r0, #1
   169c8:	cmp	r0, #0
   169cc:	mvnne	r2, #-2147483648	; 0x80000000
   169d0:	bne	168c8 <tcgetattr@plt+0x5734>
   169d4:	mul	r1, r7, r4
   169d8:	cmp	r1, #63	; 0x3f
   169dc:	bgt	168f4 <tcgetattr@plt+0x5760>
   169e0:	b	168c4 <tcgetattr@plt+0x5730>
   169e4:	rsb	r3, r4, #-2147483648	; 0x80000000
   169e8:	cmp	r6, r3
   169ec:	movge	r3, #0
   169f0:	movlt	r3, #1
   169f4:	b	16890 <tcgetattr@plt+0x56fc>
   169f8:	rsb	r3, r5, #-2147483648	; 0x80000000
   169fc:	cmp	r6, r3
   16a00:	movge	r3, #0
   16a04:	movlt	r3, #1
   16a08:	b	1692c <tcgetattr@plt+0x5798>
   16a0c:	cmp	r5, #0
   16a10:	blt	16a98 <tcgetattr@plt+0x5904>
   16a14:	cmn	r7, #1
   16a18:	beq	16984 <tcgetattr@plt+0x57f0>
   16a1c:	mov	r1, r7
   16a20:	mov	r0, #-2147483648	; 0x80000000
   16a24:	bl	1802c <tcgetattr@plt+0x6e98>
   16a28:	cmp	r5, r0
   16a2c:	movle	r0, #0
   16a30:	movgt	r0, #1
   16a34:	b	1697c <tcgetattr@plt+0x57e8>
   16a38:	cmp	r4, #0
   16a3c:	blt	16ad8 <tcgetattr@plt+0x5944>
   16a40:	cmn	r7, #1
   16a44:	beq	169d4 <tcgetattr@plt+0x5840>
   16a48:	mov	r1, r7
   16a4c:	mov	r0, #-2147483648	; 0x80000000
   16a50:	bl	1802c <tcgetattr@plt+0x6e98>
   16a54:	cmp	r0, r4
   16a58:	movge	r0, #0
   16a5c:	movlt	r0, #1
   16a60:	b	169c8 <tcgetattr@plt+0x5834>
   16a64:	mov	r4, fp
   16a68:	b	169b0 <tcgetattr@plt+0x581c>
   16a6c:	mov	r4, fp
   16a70:	b	16a40 <tcgetattr@plt+0x58ac>
   16a74:	cmn	r4, #1
   16a78:	beq	169d4 <tcgetattr@plt+0x5840>
   16a7c:	mov	r1, r4
   16a80:	mov	r0, #-2147483648	; 0x80000000
   16a84:	bl	1802c <tcgetattr@plt+0x6e98>
   16a88:	cmp	r7, r0
   16a8c:	movle	r0, #0
   16a90:	movgt	r0, #1
   16a94:	b	169c8 <tcgetattr@plt+0x5834>
   16a98:	mov	r1, r7
   16a9c:	mvn	r0, #-2147483648	; 0x80000000
   16aa0:	bl	1802c <tcgetattr@plt+0x6e98>
   16aa4:	cmp	r5, r0
   16aa8:	movge	r0, #0
   16aac:	movlt	r0, #1
   16ab0:	b	1697c <tcgetattr@plt+0x57e8>
   16ab4:	cmn	r5, #1
   16ab8:	beq	16984 <tcgetattr@plt+0x57f0>
   16abc:	mov	r1, r5
   16ac0:	mov	r0, #-2147483648	; 0x80000000
   16ac4:	bl	1802c <tcgetattr@plt+0x6e98>
   16ac8:	cmp	r7, r0
   16acc:	movle	r0, #0
   16ad0:	movgt	r0, #1
   16ad4:	b	1697c <tcgetattr@plt+0x57e8>
   16ad8:	mov	r1, r7
   16adc:	mvn	r0, #-2147483648	; 0x80000000
   16ae0:	bl	1802c <tcgetattr@plt+0x6e98>
   16ae4:	cmp	r0, r4
   16ae8:	movle	r0, #0
   16aec:	movgt	r0, #1
   16af0:	b	169c8 <tcgetattr@plt+0x5834>
   16af4:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16af8:	push	{r4, lr}
   16afc:	mov	r1, #1
   16b00:	bl	1796c <tcgetattr@plt+0x67d8>
   16b04:	cmp	r0, #0
   16b08:	popne	{r4, pc}
   16b0c:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16b10:	push	{r4, lr}
   16b14:	mov	r1, #1
   16b18:	bl	1796c <tcgetattr@plt+0x67d8>
   16b1c:	cmp	r0, #0
   16b20:	popne	{r4, pc}
   16b24:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16b28:	push	{r4, lr}
   16b2c:	bl	1796c <tcgetattr@plt+0x67d8>
   16b30:	cmp	r0, #0
   16b34:	popne	{r4, pc}
   16b38:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16b3c:	push	{r4, lr}
   16b40:	bl	1796c <tcgetattr@plt+0x67d8>
   16b44:	cmp	r0, #0
   16b48:	popne	{r4, pc}
   16b4c:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16b50:	push	{r4, r5, r6, lr}
   16b54:	mov	r6, r0
   16b58:	mov	r0, r1
   16b5c:	mov	r4, r1
   16b60:	bl	179b4 <tcgetattr@plt+0x6820>
   16b64:	subs	r5, r0, #0
   16b68:	beq	16b80 <tcgetattr@plt+0x59ec>
   16b6c:	mov	r2, r4
   16b70:	mov	r1, r6
   16b74:	bl	10f18 <memcpy@plt>
   16b78:	mov	r0, r5
   16b7c:	pop	{r4, r5, r6, pc}
   16b80:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16b84:	push	{r4, r5, r6, lr}
   16b88:	mov	r6, r0
   16b8c:	mov	r0, r1
   16b90:	mov	r4, r1
   16b94:	bl	179b4 <tcgetattr@plt+0x6820>
   16b98:	subs	r5, r0, #0
   16b9c:	beq	16bb4 <tcgetattr@plt+0x5a20>
   16ba0:	mov	r2, r4
   16ba4:	mov	r1, r6
   16ba8:	bl	10f18 <memcpy@plt>
   16bac:	mov	r0, r5
   16bb0:	pop	{r4, r5, r6, pc}
   16bb4:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16bb8:	push	{r4, r5, r6, lr}
   16bbc:	mov	r6, r0
   16bc0:	add	r0, r1, #1
   16bc4:	mov	r4, r1
   16bc8:	bl	179b4 <tcgetattr@plt+0x6820>
   16bcc:	subs	r5, r0, #0
   16bd0:	beq	16bf0 <tcgetattr@plt+0x5a5c>
   16bd4:	mov	r3, #0
   16bd8:	mov	r1, r6
   16bdc:	strb	r3, [r5, r4]
   16be0:	mov	r2, r4
   16be4:	bl	10f18 <memcpy@plt>
   16be8:	mov	r0, r5
   16bec:	pop	{r4, r5, r6, pc}
   16bf0:	bl	16c10 <tcgetattr@plt+0x5a7c>
   16bf4:	push	{r4, lr}
   16bf8:	mov	r4, r0
   16bfc:	bl	11080 <strlen@plt>
   16c00:	add	r1, r0, #1
   16c04:	mov	r0, r4
   16c08:	pop	{r4, lr}
   16c0c:	b	16b50 <tcgetattr@plt+0x59bc>
   16c10:	ldr	r3, [pc, #44]	; 16c44 <tcgetattr@plt+0x5ab0>
   16c14:	push	{r4, lr}
   16c18:	mov	r2, #5
   16c1c:	ldr	r1, [pc, #36]	; 16c48 <tcgetattr@plt+0x5ab4>
   16c20:	mov	r0, #0
   16c24:	ldr	r4, [r3]
   16c28:	bl	10f54 <dcgettext@plt>
   16c2c:	ldr	r2, [pc, #24]	; 16c4c <tcgetattr@plt+0x5ab8>
   16c30:	mov	r1, #0
   16c34:	mov	r3, r0
   16c38:	mov	r0, r4
   16c3c:	bl	10ffc <error@plt>
   16c40:	bl	11170 <abort@plt>
   16c44:	andeq	ip, r2, r8, lsl r1
   16c48:	andeq	fp, r1, r8, lsr #22
   16c4c:	strdeq	fp, [r1], -r0
   16c50:	push	{r4, r5, r6, r7, lr}
   16c54:	sub	sp, sp, #20
   16c58:	mov	r6, r2
   16c5c:	ldr	ip, [sp, #48]	; 0x30
   16c60:	mov	r2, r1
   16c64:	mov	r7, r3
   16c68:	str	ip, [sp]
   16c6c:	add	r3, sp, #8
   16c70:	mov	r1, #0
   16c74:	mov	r5, r0
   16c78:	ldr	r4, [sp, #56]	; 0x38
   16c7c:	bl	173c4 <tcgetattr@plt+0x6230>
   16c80:	cmp	r0, #0
   16c84:	bne	16d08 <tcgetattr@plt+0x5b74>
   16c88:	ldrd	r0, [sp, #8]
   16c8c:	cmp	r1, r7
   16c90:	cmpeq	r0, r6
   16c94:	ldrd	r6, [sp, #40]	; 0x28
   16c98:	movcc	r3, #1
   16c9c:	movcs	r3, #0
   16ca0:	cmp	r1, r7
   16ca4:	cmpeq	r0, r6
   16ca8:	orrhi	r3, r3, #1
   16cac:	cmp	r3, #0
   16cb0:	beq	16d00 <tcgetattr@plt+0x5b6c>
   16cb4:	mov	r3, #0
   16cb8:	mvn	r2, #-1073741824	; 0xc0000000
   16cbc:	cmp	r1, r3
   16cc0:	cmpeq	r0, r2
   16cc4:	bhi	16d34 <tcgetattr@plt+0x5ba0>
   16cc8:	bl	110b0 <__errno_location@plt>
   16ccc:	mov	r3, #34	; 0x22
   16cd0:	mov	r6, r3
   16cd4:	str	r3, [r0]
   16cd8:	cmp	r4, #0
   16cdc:	moveq	r4, #1
   16ce0:	mov	r0, r5
   16ce4:	bl	16190 <tcgetattr@plt+0x4ffc>
   16ce8:	mov	r1, r6
   16cec:	ldr	r3, [sp, #52]	; 0x34
   16cf0:	ldr	r2, [pc, #144]	; 16d88 <tcgetattr@plt+0x5bf4>
   16cf4:	str	r0, [sp]
   16cf8:	mov	r0, r4
   16cfc:	bl	10ffc <error@plt>
   16d00:	add	sp, sp, #20
   16d04:	pop	{r4, r5, r6, r7, pc}
   16d08:	cmp	r0, #1
   16d0c:	beq	16d48 <tcgetattr@plt+0x5bb4>
   16d10:	cmp	r0, #3
   16d14:	beq	16d78 <tcgetattr@plt+0x5be4>
   16d18:	cmp	r4, #0
   16d1c:	beq	16d68 <tcgetattr@plt+0x5bd4>
   16d20:	bl	110b0 <__errno_location@plt>
   16d24:	ldr	r6, [r0]
   16d28:	cmp	r6, #22
   16d2c:	moveq	r6, #0
   16d30:	b	16ce0 <tcgetattr@plt+0x5b4c>
   16d34:	bl	110b0 <__errno_location@plt>
   16d38:	mov	r3, #75	; 0x4b
   16d3c:	mov	r6, r3
   16d40:	str	r3, [r0]
   16d44:	b	16cd8 <tcgetattr@plt+0x5b44>
   16d48:	bl	110b0 <__errno_location@plt>
   16d4c:	mov	r3, #75	; 0x4b
   16d50:	mov	r6, r3
   16d54:	str	r3, [r0]
   16d58:	cmp	r4, #0
   16d5c:	moveq	r4, #1
   16d60:	bne	16d28 <tcgetattr@plt+0x5b94>
   16d64:	b	16ce0 <tcgetattr@plt+0x5b4c>
   16d68:	bl	110b0 <__errno_location@plt>
   16d6c:	mov	r4, #1
   16d70:	ldr	r6, [r0]
   16d74:	b	16d28 <tcgetattr@plt+0x5b94>
   16d78:	bl	110b0 <__errno_location@plt>
   16d7c:	mov	r6, #0
   16d80:	str	r6, [r0]
   16d84:	b	16d58 <tcgetattr@plt+0x5bc4>
   16d88:	andeq	fp, r1, ip, ror #13
   16d8c:	push	{r4, r5}
   16d90:	mov	r1, #10
   16d94:	pop	{r4, r5}
   16d98:	b	16c50 <tcgetattr@plt+0x5abc>
   16d9c:	push	{r4, r5, r6, lr}
   16da0:	subs	r6, r1, #0
   16da4:	mov	r4, r0
   16da8:	ldr	r5, [r0]
   16dac:	blt	16ddc <tcgetattr@plt+0x5c48>
   16db0:	beq	16dfc <tcgetattr@plt+0x5c68>
   16db4:	cmp	r5, #0
   16db8:	blt	16e30 <tcgetattr@plt+0x5c9c>
   16dbc:	mvn	r0, #-2147483648	; 0x80000000
   16dc0:	bl	1802c <tcgetattr@plt+0x6e98>
   16dc4:	cmp	r5, r0
   16dc8:	ble	16dfc <tcgetattr@plt+0x5c68>
   16dcc:	mvn	r3, #-2147483648	; 0x80000000
   16dd0:	str	r3, [r4]
   16dd4:	mov	r0, #1
   16dd8:	pop	{r4, r5, r6, pc}
   16ddc:	cmp	r5, #0
   16de0:	blt	16e0c <tcgetattr@plt+0x5c78>
   16de4:	cmn	r6, #1
   16de8:	beq	16dfc <tcgetattr@plt+0x5c68>
   16dec:	mov	r0, #-2147483648	; 0x80000000
   16df0:	bl	1802c <tcgetattr@plt+0x6e98>
   16df4:	cmp	r5, r0
   16df8:	bgt	16dcc <tcgetattr@plt+0x5c38>
   16dfc:	mul	r5, r6, r5
   16e00:	mov	r0, #0
   16e04:	str	r5, [r4]
   16e08:	pop	{r4, r5, r6, pc}
   16e0c:	mvn	r0, #-2147483648	; 0x80000000
   16e10:	bl	1802c <tcgetattr@plt+0x6e98>
   16e14:	cmp	r5, r0
   16e18:	movge	r0, #0
   16e1c:	movlt	r0, #1
   16e20:	cmp	r0, #0
   16e24:	movne	r3, #-2147483648	; 0x80000000
   16e28:	bne	16dd0 <tcgetattr@plt+0x5c3c>
   16e2c:	b	16dfc <tcgetattr@plt+0x5c68>
   16e30:	cmn	r5, #1
   16e34:	beq	16dfc <tcgetattr@plt+0x5c68>
   16e38:	mov	r1, r5
   16e3c:	mov	r0, #-2147483648	; 0x80000000
   16e40:	bl	1802c <tcgetattr@plt+0x6e98>
   16e44:	cmp	r6, r0
   16e48:	movle	r0, #0
   16e4c:	movgt	r0, #1
   16e50:	b	16e20 <tcgetattr@plt+0x5c8c>
   16e54:	cmp	r2, #36	; 0x24
   16e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e5c:	sub	sp, sp, #12
   16e60:	bhi	1730c <tcgetattr@plt+0x6178>
   16e64:	cmp	r1, #0
   16e68:	mov	r8, r1
   16e6c:	mov	r5, r2
   16e70:	moveq	r8, sp
   16e74:	mov	r6, r0
   16e78:	mov	r9, r3
   16e7c:	bl	110b0 <__errno_location@plt>
   16e80:	mov	r4, #0
   16e84:	mov	r2, r5
   16e88:	mov	r1, r8
   16e8c:	str	r4, [r0]
   16e90:	mov	r7, r0
   16e94:	mov	r0, r6
   16e98:	bl	10ee8 <strtol@plt>
   16e9c:	ldr	r5, [r8]
   16ea0:	cmp	r6, r5
   16ea4:	str	r0, [sp, #4]
   16ea8:	beq	16ef8 <tcgetattr@plt+0x5d64>
   16eac:	ldr	r4, [r7]
   16eb0:	cmp	r4, #0
   16eb4:	bne	16ee0 <tcgetattr@plt+0x5d4c>
   16eb8:	ldr	r3, [sp, #48]	; 0x30
   16ebc:	cmp	r3, #0
   16ec0:	beq	16ed0 <tcgetattr@plt+0x5d3c>
   16ec4:	ldrb	r6, [r5]
   16ec8:	cmp	r6, #0
   16ecc:	bne	16f2c <tcgetattr@plt+0x5d98>
   16ed0:	str	r0, [r9]
   16ed4:	mov	r0, r4
   16ed8:	add	sp, sp, #12
   16edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ee0:	cmp	r4, #34	; 0x22
   16ee4:	beq	1713c <tcgetattr@plt+0x5fa8>
   16ee8:	mov	r4, #4
   16eec:	mov	r0, r4
   16ef0:	add	sp, sp, #12
   16ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ef8:	ldr	r3, [sp, #48]	; 0x30
   16efc:	cmp	r3, r4
   16f00:	beq	16ee8 <tcgetattr@plt+0x5d54>
   16f04:	ldrb	r1, [r5]
   16f08:	cmp	r1, r4
   16f0c:	beq	16ee8 <tcgetattr@plt+0x5d54>
   16f10:	mov	r0, r3
   16f14:	bl	1108c <strchr@plt>
   16f18:	cmp	r0, r4
   16f1c:	beq	16ee8 <tcgetattr@plt+0x5d54>
   16f20:	ldrb	r6, [r5]
   16f24:	mov	r3, #1
   16f28:	str	r3, [sp, #4]
   16f2c:	mov	r1, r6
   16f30:	ldr	r0, [sp, #48]	; 0x30
   16f34:	bl	1108c <strchr@plt>
   16f38:	cmp	r0, #0
   16f3c:	beq	172fc <tcgetattr@plt+0x6168>
   16f40:	sub	r3, r6, #69	; 0x45
   16f44:	cmp	r3, #47	; 0x2f
   16f48:	ldrls	pc, [pc, r3, lsl #2]
   16f4c:	b	17010 <tcgetattr@plt+0x5e7c>
   16f50:	andeq	r7, r1, r0, lsl #2
   16f54:	andeq	r7, r1, r0, lsl r0
   16f58:	andeq	r7, r1, r0, lsl #2
   16f5c:	andeq	r7, r1, r0, lsl r0
   16f60:	andeq	r7, r1, r0, lsl r0
   16f64:	andeq	r7, r1, r0, lsl r0
   16f68:	andeq	r7, r1, r0, lsl #2
   16f6c:	andeq	r7, r1, r0, lsl r0
   16f70:	andeq	r7, r1, r0, lsl #2
   16f74:	andeq	r7, r1, r0, lsl r0
   16f78:	andeq	r7, r1, r0, lsl r0
   16f7c:	andeq	r7, r1, r0, lsl #2
   16f80:	andeq	r7, r1, r0, lsl r0
   16f84:	andeq	r7, r1, r0, lsl r0
   16f88:	andeq	r7, r1, r0, lsl r0
   16f8c:	andeq	r7, r1, r0, lsl #2
   16f90:	andeq	r7, r1, r0, lsl r0
   16f94:	andeq	r7, r1, r0, lsl r0
   16f98:	andeq	r7, r1, r0, lsl r0
   16f9c:	andeq	r7, r1, r0, lsl r0
   16fa0:	andeq	r7, r1, r0, lsl #2
   16fa4:	andeq	r7, r1, r0, lsl #2
   16fa8:	andeq	r7, r1, r0, lsl r0
   16fac:	andeq	r7, r1, r0, lsl r0
   16fb0:	andeq	r7, r1, r0, lsl r0
   16fb4:	andeq	r7, r1, r0, lsl r0
   16fb8:	andeq	r7, r1, r0, lsl r0
   16fbc:	andeq	r7, r1, r0, lsl r0
   16fc0:	andeq	r7, r1, r0, lsl r0
   16fc4:	andeq	r7, r1, r0, lsl r0
   16fc8:	andeq	r7, r1, r0, lsl r0
   16fcc:	andeq	r7, r1, r0, lsl r0
   16fd0:	andeq	r7, r1, r0, lsl r0
   16fd4:	andeq	r7, r1, r0, lsl r0
   16fd8:	andeq	r7, r1, r0, lsl #2
   16fdc:	andeq	r7, r1, r0, lsl r0
   16fe0:	andeq	r7, r1, r0, lsl r0
   16fe4:	andeq	r7, r1, r0, lsl r0
   16fe8:	andeq	r7, r1, r0, lsl #2
   16fec:	andeq	r7, r1, r0, lsl r0
   16ff0:	andeq	r7, r1, r0, lsl #2
   16ff4:	andeq	r7, r1, r0, lsl r0
   16ff8:	andeq	r7, r1, r0, lsl r0
   16ffc:	andeq	r7, r1, r0, lsl r0
   17000:	andeq	r7, r1, r0, lsl r0
   17004:	andeq	r7, r1, r0, lsl r0
   17008:	andeq	r7, r1, r0, lsl r0
   1700c:	andeq	r7, r1, r0, lsl #2
   17010:	mov	sl, #1
   17014:	mov	r7, #1024	; 0x400
   17018:	sub	r6, r6, #66	; 0x42
   1701c:	cmp	r6, #53	; 0x35
   17020:	ldrls	pc, [pc, r6, lsl #2]
   17024:	b	172fc <tcgetattr@plt+0x6168>
   17028:	andeq	r7, r1, r4, lsl r2
   1702c:	strdeq	r7, [r1], -ip
   17030:	strdeq	r7, [r1], -ip
   17034:	andeq	r7, r1, ip, ror #3
   17038:	strdeq	r7, [r1], -ip
   1703c:	andeq	r7, r1, r0, asr #3
   17040:	strdeq	r7, [r1], -ip
   17044:	strdeq	r7, [r1], -ip
   17048:	strdeq	r7, [r1], -ip
   1704c:	andeq	r7, r1, r8, lsr #3
   17050:	strdeq	r7, [r1], -ip
   17054:	andeq	r7, r1, r0, lsl #3
   17058:	strdeq	r7, [r1], -ip
   1705c:	strdeq	r7, [r1], -ip
   17060:	ldrdeq	r7, [r1], -r4
   17064:	strdeq	r7, [r1], -ip
   17068:	strdeq	r7, [r1], -ip
   1706c:	strdeq	r7, [r1], -ip
   17070:	andeq	r7, r1, ip, lsr #5
   17074:	strdeq	r7, [r1], -ip
   17078:	strdeq	r7, [r1], -ip
   1707c:	strdeq	r7, [r1], -ip
   17080:	strdeq	r7, [r1], -ip
   17084:	andeq	r7, r1, r4, lsl #5
   17088:	andeq	r7, r1, ip, asr r2
   1708c:	strdeq	r7, [r1], -ip
   17090:	strdeq	r7, [r1], -ip
   17094:	strdeq	r7, [r1], -ip
   17098:	strdeq	r7, [r1], -ip
   1709c:	strdeq	r7, [r1], -ip
   170a0:	strdeq	r7, [r1], -ip
   170a4:	strdeq	r7, [r1], -ip
   170a8:	andeq	r7, r1, r4, asr #4
   170ac:	andeq	r7, r1, ip, asr r1
   170b0:	strdeq	r7, [r1], -ip
   170b4:	strdeq	r7, [r1], -ip
   170b8:	strdeq	r7, [r1], -ip
   170bc:	andeq	r7, r1, r0, asr #3
   170c0:	strdeq	r7, [r1], -ip
   170c4:	strdeq	r7, [r1], -ip
   170c8:	strdeq	r7, [r1], -ip
   170cc:	andeq	r7, r1, r8, lsr #3
   170d0:	strdeq	r7, [r1], -ip
   170d4:	andeq	r7, r1, r0, lsl #3
   170d8:	strdeq	r7, [r1], -ip
   170dc:	strdeq	r7, [r1], -ip
   170e0:	strdeq	r7, [r1], -ip
   170e4:	strdeq	r7, [r1], -ip
   170e8:	strdeq	r7, [r1], -ip
   170ec:	strdeq	r7, [r1], -ip
   170f0:	andeq	r7, r1, ip, lsr #5
   170f4:	strdeq	r7, [r1], -ip
   170f8:	strdeq	r7, [r1], -ip
   170fc:	andeq	r7, r1, ip, lsr #4
   17100:	mov	r1, #48	; 0x30
   17104:	ldr	r0, [sp, #48]	; 0x30
   17108:	bl	1108c <strchr@plt>
   1710c:	cmp	r0, #0
   17110:	beq	17010 <tcgetattr@plt+0x5e7c>
   17114:	ldrb	r3, [r5, #1]
   17118:	cmp	r3, #68	; 0x44
   1711c:	beq	17130 <tcgetattr@plt+0x5f9c>
   17120:	cmp	r3, #105	; 0x69
   17124:	beq	17144 <tcgetattr@plt+0x5fb0>
   17128:	cmp	r3, #66	; 0x42
   1712c:	bne	17010 <tcgetattr@plt+0x5e7c>
   17130:	mov	sl, #2
   17134:	mov	r7, #1000	; 0x3e8
   17138:	b	17018 <tcgetattr@plt+0x5e84>
   1713c:	mov	r4, #1
   17140:	b	16eb8 <tcgetattr@plt+0x5d24>
   17144:	ldrb	sl, [r5, #2]
   17148:	mov	r7, #1024	; 0x400
   1714c:	cmp	sl, #66	; 0x42
   17150:	movne	sl, #1
   17154:	moveq	sl, #3
   17158:	b	17018 <tcgetattr@plt+0x5e84>
   1715c:	mov	r6, #0
   17160:	add	r3, r5, sl
   17164:	str	r3, [r8]
   17168:	ldrb	r3, [r5, sl]
   1716c:	orr	r4, r4, r6
   17170:	ldr	r0, [sp, #4]
   17174:	cmp	r3, #0
   17178:	orrne	r4, r4, #2
   1717c:	b	16ed0 <tcgetattr@plt+0x5d3c>
   17180:	mov	r1, r7
   17184:	add	r0, sp, #4
   17188:	bl	16d9c <tcgetattr@plt+0x5c08>
   1718c:	mov	r1, r7
   17190:	mov	r6, r0
   17194:	add	r0, sp, #4
   17198:	bl	16d9c <tcgetattr@plt+0x5c08>
   1719c:	ldr	r5, [r8]
   171a0:	orr	r6, r6, r0
   171a4:	b	17160 <tcgetattr@plt+0x5fcc>
   171a8:	mov	r1, r7
   171ac:	add	r0, sp, #4
   171b0:	bl	16d9c <tcgetattr@plt+0x5c08>
   171b4:	ldr	r5, [r8]
   171b8:	mov	r6, r0
   171bc:	b	17160 <tcgetattr@plt+0x5fcc>
   171c0:	mov	fp, #3
   171c4:	mov	r6, #0
   171c8:	add	r5, sp, #4
   171cc:	mov	r1, r7
   171d0:	mov	r0, r5
   171d4:	bl	16d9c <tcgetattr@plt+0x5c08>
   171d8:	subs	fp, fp, #1
   171dc:	orr	r6, r6, r0
   171e0:	bne	171cc <tcgetattr@plt+0x6038>
   171e4:	ldr	r5, [r8]
   171e8:	b	17160 <tcgetattr@plt+0x5fcc>
   171ec:	mov	fp, #6
   171f0:	mov	r6, #0
   171f4:	add	r5, sp, #4
   171f8:	mov	r1, r7
   171fc:	mov	r0, r5
   17200:	bl	16d9c <tcgetattr@plt+0x5c08>
   17204:	subs	fp, fp, #1
   17208:	orr	r6, r6, r0
   1720c:	bne	171f8 <tcgetattr@plt+0x6064>
   17210:	b	171e4 <tcgetattr@plt+0x6050>
   17214:	mov	r1, #1024	; 0x400
   17218:	add	r0, sp, #4
   1721c:	bl	16d9c <tcgetattr@plt+0x5c08>
   17220:	ldr	r5, [r8]
   17224:	mov	r6, r0
   17228:	b	17160 <tcgetattr@plt+0x5fcc>
   1722c:	mov	r1, #2
   17230:	add	r0, sp, #4
   17234:	bl	16d9c <tcgetattr@plt+0x5c08>
   17238:	ldr	r5, [r8]
   1723c:	mov	r6, r0
   17240:	b	17160 <tcgetattr@plt+0x5fcc>
   17244:	mov	r1, #512	; 0x200
   17248:	add	r0, sp, #4
   1724c:	bl	16d9c <tcgetattr@plt+0x5c08>
   17250:	ldr	r5, [r8]
   17254:	mov	r6, r0
   17258:	b	17160 <tcgetattr@plt+0x5fcc>
   1725c:	mov	fp, #7
   17260:	mov	r6, #0
   17264:	add	r5, sp, #4
   17268:	mov	r1, r7
   1726c:	mov	r0, r5
   17270:	bl	16d9c <tcgetattr@plt+0x5c08>
   17274:	subs	fp, fp, #1
   17278:	orr	r6, r6, r0
   1727c:	bne	17268 <tcgetattr@plt+0x60d4>
   17280:	b	171e4 <tcgetattr@plt+0x6050>
   17284:	mov	fp, #8
   17288:	mov	r6, #0
   1728c:	add	r5, sp, #4
   17290:	mov	r1, r7
   17294:	mov	r0, r5
   17298:	bl	16d9c <tcgetattr@plt+0x5c08>
   1729c:	subs	fp, fp, #1
   172a0:	orr	r6, r6, r0
   172a4:	bne	17290 <tcgetattr@plt+0x60fc>
   172a8:	b	171e4 <tcgetattr@plt+0x6050>
   172ac:	mov	fp, #4
   172b0:	mov	r6, #0
   172b4:	add	r5, sp, fp
   172b8:	mov	r1, r7
   172bc:	mov	r0, r5
   172c0:	bl	16d9c <tcgetattr@plt+0x5c08>
   172c4:	subs	fp, fp, #1
   172c8:	orr	r6, r6, r0
   172cc:	bne	172b8 <tcgetattr@plt+0x6124>
   172d0:	b	171e4 <tcgetattr@plt+0x6050>
   172d4:	mov	fp, #5
   172d8:	mov	r6, #0
   172dc:	add	r5, sp, #4
   172e0:	mov	r1, r7
   172e4:	mov	r0, r5
   172e8:	bl	16d9c <tcgetattr@plt+0x5c08>
   172ec:	subs	fp, fp, #1
   172f0:	orr	r6, r6, r0
   172f4:	bne	172e0 <tcgetattr@plt+0x614c>
   172f8:	b	171e4 <tcgetattr@plt+0x6050>
   172fc:	ldr	r3, [sp, #4]
   17300:	orr	r4, r4, #2
   17304:	str	r3, [r9]
   17308:	b	16ed4 <tcgetattr@plt+0x5d40>
   1730c:	ldr	r3, [pc, #12]	; 17320 <tcgetattr@plt+0x618c>
   17310:	mov	r2, #85	; 0x55
   17314:	ldr	r1, [pc, #8]	; 17324 <tcgetattr@plt+0x6190>
   17318:	ldr	r0, [pc, #8]	; 17328 <tcgetattr@plt+0x6194>
   1731c:	bl	11188 <__assert_fail@plt>
   17320:	andeq	fp, r1, ip, lsr fp
   17324:	andeq	fp, r1, r4, asr #22
   17328:	andeq	fp, r1, r4, asr fp
   1732c:	push	{r4, r5, r6, r7, r8, lr}
   17330:	subs	r5, r1, #0
   17334:	mov	r4, r0
   17338:	blt	173ac <tcgetattr@plt+0x6218>
   1733c:	moveq	r6, #0
   17340:	moveq	r7, #0
   17344:	bne	1736c <tcgetattr@plt+0x61d8>
   17348:	ldr	r2, [r4]
   1734c:	ldr	r1, [r4, #4]
   17350:	mov	r0, #0
   17354:	mul	ip, r2, r7
   17358:	umull	r2, r3, r2, r5
   1735c:	mla	r5, r5, r1, ip
   17360:	add	r3, r5, r3
   17364:	strd	r2, [r4]
   17368:	pop	{r4, r5, r6, r7, r8, pc}
   1736c:	asr	r7, r5, #31
   17370:	mov	r2, r5
   17374:	mov	r3, r7
   17378:	mvn	r0, #0
   1737c:	mvn	r1, #0
   17380:	bl	1826c <tcgetattr@plt+0x70d8>
   17384:	ldrd	r2, [r4]
   17388:	mov	r6, r5
   1738c:	cmp	r1, r3
   17390:	cmpeq	r0, r2
   17394:	bcs	17348 <tcgetattr@plt+0x61b4>
   17398:	mvn	r2, #0
   1739c:	mvn	r3, #0
   173a0:	mov	r0, #1
   173a4:	strd	r2, [r4]
   173a8:	pop	{r4, r5, r6, r7, r8, pc}
   173ac:	ldrd	r2, [r0]
   173b0:	orrs	r3, r2, r3
   173b4:	moveq	r6, r5
   173b8:	asreq	r7, r6, #31
   173bc:	bne	17398 <tcgetattr@plt+0x6204>
   173c0:	b	17348 <tcgetattr@plt+0x61b4>
   173c4:	cmp	r2, #36	; 0x24
   173c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173cc:	sub	sp, sp, #20
   173d0:	bhi	17944 <tcgetattr@plt+0x67b0>
   173d4:	cmp	r1, #0
   173d8:	mov	r8, r2
   173dc:	mov	r7, r0
   173e0:	mov	r5, r1
   173e4:	mov	r6, r3
   173e8:	addeq	r5, sp, #4
   173ec:	bl	110b0 <__errno_location@plt>
   173f0:	mov	r3, #0
   173f4:	str	r3, [r0]
   173f8:	mov	r9, r0
   173fc:	bl	1105c <__ctype_b_loc@plt>
   17400:	ldrb	r3, [r7]
   17404:	mov	r2, r7
   17408:	ldr	r0, [r0]
   1740c:	b	17414 <tcgetattr@plt+0x6280>
   17410:	ldrb	r3, [r2, #1]!
   17414:	lsl	r1, r3, #1
   17418:	ldrh	r4, [r0, r1]
   1741c:	ands	r4, r4, #8192	; 0x2000
   17420:	bne	17410 <tcgetattr@plt+0x627c>
   17424:	cmp	r3, #45	; 0x2d
   17428:	bne	1743c <tcgetattr@plt+0x62a8>
   1742c:	mov	r4, #4
   17430:	mov	r0, r4
   17434:	add	sp, sp, #20
   17438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1743c:	mov	r2, r8
   17440:	mov	r3, r4
   17444:	mov	r1, r5
   17448:	mov	r0, r7
   1744c:	bl	10f24 <__strtoull_internal@plt>
   17450:	ldr	r8, [r5]
   17454:	cmp	r7, r8
   17458:	mov	r2, r0
   1745c:	str	r0, [sp, #8]
   17460:	str	r1, [sp, #12]
   17464:	beq	174b0 <tcgetattr@plt+0x631c>
   17468:	ldr	r4, [r9]
   1746c:	cmp	r4, #0
   17470:	bne	174a0 <tcgetattr@plt+0x630c>
   17474:	ldr	r3, [sp, #56]	; 0x38
   17478:	cmp	r3, #0
   1747c:	beq	1748c <tcgetattr@plt+0x62f8>
   17480:	ldrb	r9, [r8]
   17484:	cmp	r9, #0
   17488:	bne	174e8 <tcgetattr@plt+0x6354>
   1748c:	mov	r0, r4
   17490:	str	r2, [r6]
   17494:	str	r1, [r6, #4]
   17498:	add	sp, sp, #20
   1749c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174a0:	cmp	r4, #34	; 0x22
   174a4:	bne	1742c <tcgetattr@plt+0x6298>
   174a8:	mov	r4, #1
   174ac:	b	17474 <tcgetattr@plt+0x62e0>
   174b0:	ldr	r3, [sp, #56]	; 0x38
   174b4:	cmp	r3, #0
   174b8:	beq	1742c <tcgetattr@plt+0x6298>
   174bc:	ldrb	r1, [r8]
   174c0:	cmp	r1, #0
   174c4:	beq	1742c <tcgetattr@plt+0x6298>
   174c8:	mov	r0, r3
   174cc:	bl	1108c <strchr@plt>
   174d0:	cmp	r0, #0
   174d4:	beq	1742c <tcgetattr@plt+0x6298>
   174d8:	ldrb	r9, [r8]
   174dc:	mov	r2, #1
   174e0:	mov	r3, #0
   174e4:	strd	r2, [sp, #8]
   174e8:	mov	r1, r9
   174ec:	ldr	r0, [sp, #56]	; 0x38
   174f0:	bl	1108c <strchr@plt>
   174f4:	cmp	r0, #0
   174f8:	beq	17900 <tcgetattr@plt+0x676c>
   174fc:	sub	r3, r9, #69	; 0x45
   17500:	cmp	r3, #47	; 0x2f
   17504:	ldrls	pc, [pc, r3, lsl #2]
   17508:	b	175cc <tcgetattr@plt+0x6438>
   1750c:			; <UNDEFINED> instruction: 0x000176bc
   17510:	andeq	r7, r1, ip, asr #11
   17514:			; <UNDEFINED> instruction: 0x000176bc
   17518:	andeq	r7, r1, ip, asr #11
   1751c:	andeq	r7, r1, ip, asr #11
   17520:	andeq	r7, r1, ip, asr #11
   17524:			; <UNDEFINED> instruction: 0x000176bc
   17528:	andeq	r7, r1, ip, asr #11
   1752c:			; <UNDEFINED> instruction: 0x000176bc
   17530:	andeq	r7, r1, ip, asr #11
   17534:	andeq	r7, r1, ip, asr #11
   17538:			; <UNDEFINED> instruction: 0x000176bc
   1753c:	andeq	r7, r1, ip, asr #11
   17540:	andeq	r7, r1, ip, asr #11
   17544:	andeq	r7, r1, ip, asr #11
   17548:			; <UNDEFINED> instruction: 0x000176bc
   1754c:	andeq	r7, r1, ip, asr #11
   17550:	andeq	r7, r1, ip, asr #11
   17554:	andeq	r7, r1, ip, asr #11
   17558:	andeq	r7, r1, ip, asr #11
   1755c:			; <UNDEFINED> instruction: 0x000176bc
   17560:			; <UNDEFINED> instruction: 0x000176bc
   17564:	andeq	r7, r1, ip, asr #11
   17568:	andeq	r7, r1, ip, asr #11
   1756c:	andeq	r7, r1, ip, asr #11
   17570:	andeq	r7, r1, ip, asr #11
   17574:	andeq	r7, r1, ip, asr #11
   17578:	andeq	r7, r1, ip, asr #11
   1757c:	andeq	r7, r1, ip, asr #11
   17580:	andeq	r7, r1, ip, asr #11
   17584:	andeq	r7, r1, ip, asr #11
   17588:	andeq	r7, r1, ip, asr #11
   1758c:	andeq	r7, r1, ip, asr #11
   17590:	andeq	r7, r1, ip, asr #11
   17594:			; <UNDEFINED> instruction: 0x000176bc
   17598:	andeq	r7, r1, ip, asr #11
   1759c:	andeq	r7, r1, ip, asr #11
   175a0:	andeq	r7, r1, ip, asr #11
   175a4:			; <UNDEFINED> instruction: 0x000176bc
   175a8:	andeq	r7, r1, ip, asr #11
   175ac:			; <UNDEFINED> instruction: 0x000176bc
   175b0:	andeq	r7, r1, ip, asr #11
   175b4:	andeq	r7, r1, ip, asr #11
   175b8:	andeq	r7, r1, ip, asr #11
   175bc:	andeq	r7, r1, ip, asr #11
   175c0:	andeq	r7, r1, ip, asr #11
   175c4:	andeq	r7, r1, ip, asr #11
   175c8:			; <UNDEFINED> instruction: 0x000176bc
   175cc:	mov	r7, #1
   175d0:	mov	sl, #1024	; 0x400
   175d4:	sub	r9, r9, #66	; 0x42
   175d8:	cmp	r9, #53	; 0x35
   175dc:	ldrls	pc, [pc, r9, lsl #2]
   175e0:	b	17900 <tcgetattr@plt+0x676c>
   175e4:	andeq	r7, r1, ip, asr #16
   175e8:	andeq	r7, r1, r0, lsl #18
   175ec:	andeq	r7, r1, r0, lsl #18
   175f0:	andeq	r7, r1, r4, lsr #16
   175f4:	andeq	r7, r1, r0, lsl #18
   175f8:	strdeq	r7, [r1], -ip
   175fc:	andeq	r7, r1, r0, lsl #18
   17600:	andeq	r7, r1, r0, lsl #18
   17604:	andeq	r7, r1, r0, lsl #18
   17608:	ldrdeq	r7, [r1], -ip
   1760c:	andeq	r7, r1, r0, lsl #18
   17610:	andeq	r7, r1, r8, lsr #17
   17614:	andeq	r7, r1, r0, lsl #18
   17618:	andeq	r7, r1, r0, lsl #18
   1761c:	andeq	r7, r1, r0, lsl #17
   17620:	andeq	r7, r1, r0, lsl #18
   17624:	andeq	r7, r1, r0, lsl #18
   17628:	andeq	r7, r1, r0, lsl #18
   1762c:	ldrdeq	r7, [r1], -r8
   17630:	andeq	r7, r1, r0, lsl #18
   17634:	andeq	r7, r1, r0, lsl #18
   17638:	andeq	r7, r1, r0, lsl #18
   1763c:	andeq	r7, r1, r0, lsl #18
   17640:			; <UNDEFINED> instruction: 0x000177b4
   17644:	andeq	r7, r1, r0, lsl #15
   17648:	andeq	r7, r1, r0, lsl #18
   1764c:	andeq	r7, r1, r0, lsl #18
   17650:	andeq	r7, r1, r0, lsl #18
   17654:	andeq	r7, r1, r0, lsl #18
   17658:	andeq	r7, r1, r0, lsl #18
   1765c:	andeq	r7, r1, r0, lsl #18
   17660:	andeq	r7, r1, r0, lsl #18
   17664:	andeq	r7, r1, ip, asr #14
   17668:	andeq	r7, r1, ip, lsr r7
   1766c:	andeq	r7, r1, r0, lsl #18
   17670:	andeq	r7, r1, r0, lsl #18
   17674:	andeq	r7, r1, r0, lsl #18
   17678:	strdeq	r7, [r1], -ip
   1767c:	andeq	r7, r1, r0, lsl #18
   17680:	andeq	r7, r1, r0, lsl #18
   17684:	andeq	r7, r1, r0, lsl #18
   17688:	ldrdeq	r7, [r1], -ip
   1768c:	andeq	r7, r1, r0, lsl #18
   17690:	andeq	r7, r1, r8, lsr #17
   17694:	andeq	r7, r1, r0, lsl #18
   17698:	andeq	r7, r1, r0, lsl #18
   1769c:	andeq	r7, r1, r0, lsl #18
   176a0:	andeq	r7, r1, r0, lsl #18
   176a4:	andeq	r7, r1, r0, lsl #18
   176a8:	andeq	r7, r1, r0, lsl #18
   176ac:	ldrdeq	r7, [r1], -r8
   176b0:	andeq	r7, r1, r0, lsl #18
   176b4:	andeq	r7, r1, r0, lsl #18
   176b8:	strdeq	r7, [r1], -r8
   176bc:	mov	r1, #48	; 0x30
   176c0:	ldr	r0, [sp, #56]	; 0x38
   176c4:	bl	1108c <strchr@plt>
   176c8:	cmp	r0, #0
   176cc:	beq	175cc <tcgetattr@plt+0x6438>
   176d0:	ldrb	r3, [r8, #1]
   176d4:	cmp	r3, #68	; 0x44
   176d8:	beq	176ec <tcgetattr@plt+0x6558>
   176dc:	cmp	r3, #105	; 0x69
   176e0:	beq	17910 <tcgetattr@plt+0x677c>
   176e4:	cmp	r3, #66	; 0x42
   176e8:	bne	175cc <tcgetattr@plt+0x6438>
   176ec:	mov	r7, #2
   176f0:	mov	sl, #1000	; 0x3e8
   176f4:	b	175d4 <tcgetattr@plt+0x6440>
   176f8:	ldrd	r2, [sp, #8]
   176fc:	cmp	r2, #0
   17700:	sbcs	r1, r3, #0
   17704:	blt	17928 <tcgetattr@plt+0x6794>
   17708:	adds	r2, r2, r2
   1770c:	adc	r3, r3, r3
   17710:	mov	r1, r3
   17714:	mov	r9, #0
   17718:	str	r2, [sp, #8]
   1771c:	str	r3, [sp, #12]
   17720:	add	r3, r8, r7
   17724:	str	r3, [r5]
   17728:	ldrb	r3, [r8, r7]
   1772c:	orr	r4, r4, r9
   17730:	cmp	r3, #0
   17734:	orrne	r4, r4, #2
   17738:	b	1748c <tcgetattr@plt+0x62f8>
   1773c:	ldr	r2, [sp, #8]
   17740:	ldr	r1, [sp, #12]
   17744:	mov	r9, #0
   17748:	b	17720 <tcgetattr@plt+0x658c>
   1774c:	ldrd	r2, [sp, #8]
   17750:	ldr	r1, [pc, #512]	; 17958 <tcgetattr@plt+0x67c4>
   17754:	mvn	r0, #0
   17758:	cmp	r3, r1
   1775c:	cmpeq	r2, r0
   17760:	bhi	17928 <tcgetattr@plt+0x6794>
   17764:	lsl	r1, r3, #9
   17768:	orr	r1, r1, r2, lsr #23
   1776c:	lsl	r2, r2, #9
   17770:	str	r1, [sp, #12]
   17774:	str	r2, [sp, #8]
   17778:	mov	r9, #0
   1777c:	b	17720 <tcgetattr@plt+0x658c>
   17780:	mov	fp, #7
   17784:	mov	r9, #0
   17788:	add	r8, sp, #8
   1778c:	mov	r1, sl
   17790:	mov	r0, r8
   17794:	bl	1732c <tcgetattr@plt+0x6198>
   17798:	subs	fp, fp, #1
   1779c:	orr	r9, r9, r0
   177a0:	bne	1778c <tcgetattr@plt+0x65f8>
   177a4:	ldr	r8, [r5]
   177a8:	ldr	r2, [sp, #8]
   177ac:	ldr	r1, [sp, #12]
   177b0:	b	17720 <tcgetattr@plt+0x658c>
   177b4:	mov	fp, #8
   177b8:	mov	r9, #0
   177bc:	add	r8, sp, fp
   177c0:	mov	r1, sl
   177c4:	mov	r0, r8
   177c8:	bl	1732c <tcgetattr@plt+0x6198>
   177cc:	subs	fp, fp, #1
   177d0:	orr	r9, r9, r0
   177d4:	bne	177c0 <tcgetattr@plt+0x662c>
   177d8:	b	177a4 <tcgetattr@plt+0x6610>
   177dc:	mov	r1, sl
   177e0:	add	r0, sp, #8
   177e4:	bl	1732c <tcgetattr@plt+0x6198>
   177e8:	ldr	r8, [r5]
   177ec:	ldr	r2, [sp, #8]
   177f0:	ldr	r1, [sp, #12]
   177f4:	mov	r9, r0
   177f8:	b	17720 <tcgetattr@plt+0x658c>
   177fc:	mov	fp, #3
   17800:	mov	r9, #0
   17804:	add	r8, sp, #8
   17808:	mov	r1, sl
   1780c:	mov	r0, r8
   17810:	bl	1732c <tcgetattr@plt+0x6198>
   17814:	subs	fp, fp, #1
   17818:	orr	r9, r9, r0
   1781c:	bne	17808 <tcgetattr@plt+0x6674>
   17820:	b	177a4 <tcgetattr@plt+0x6610>
   17824:	mov	fp, #6
   17828:	mov	r9, #0
   1782c:	add	r8, sp, #8
   17830:	mov	r1, sl
   17834:	mov	r0, r8
   17838:	bl	1732c <tcgetattr@plt+0x6198>
   1783c:	subs	fp, fp, #1
   17840:	orr	r9, r9, r0
   17844:	bne	17830 <tcgetattr@plt+0x669c>
   17848:	b	177a4 <tcgetattr@plt+0x6610>
   1784c:	ldrd	r0, [sp, #8]
   17850:	ldr	r3, [pc, #260]	; 1795c <tcgetattr@plt+0x67c8>
   17854:	mvn	r2, #0
   17858:	cmp	r1, r3
   1785c:	cmpeq	r0, r2
   17860:	bhi	17928 <tcgetattr@plt+0x6794>
   17864:	lsl	r1, r1, #10
   17868:	orr	r1, r1, r0, lsr #22
   1786c:	lsl	r2, r0, #10
   17870:	str	r1, [sp, #12]
   17874:	str	r2, [sp, #8]
   17878:	mov	r9, #0
   1787c:	b	17720 <tcgetattr@plt+0x658c>
   17880:	mov	fp, #5
   17884:	mov	r9, #0
   17888:	add	r8, sp, #8
   1788c:	mov	r1, sl
   17890:	mov	r0, r8
   17894:	bl	1732c <tcgetattr@plt+0x6198>
   17898:	subs	fp, fp, #1
   1789c:	orr	r9, r9, r0
   178a0:	bne	1788c <tcgetattr@plt+0x66f8>
   178a4:	b	177a4 <tcgetattr@plt+0x6610>
   178a8:	mov	r1, sl
   178ac:	add	r0, sp, #8
   178b0:	bl	1732c <tcgetattr@plt+0x6198>
   178b4:	mov	r1, sl
   178b8:	mov	r9, r0
   178bc:	add	r0, sp, #8
   178c0:	bl	1732c <tcgetattr@plt+0x6198>
   178c4:	ldr	r8, [r5]
   178c8:	ldr	r2, [sp, #8]
   178cc:	ldr	r1, [sp, #12]
   178d0:	orr	r9, r9, r0
   178d4:	b	17720 <tcgetattr@plt+0x658c>
   178d8:	mov	fp, #4
   178dc:	mov	r9, #0
   178e0:	add	r8, sp, #8
   178e4:	mov	r1, sl
   178e8:	mov	r0, r8
   178ec:	bl	1732c <tcgetattr@plt+0x6198>
   178f0:	subs	fp, fp, #1
   178f4:	orr	r9, r9, r0
   178f8:	bne	178e4 <tcgetattr@plt+0x6750>
   178fc:	b	177a4 <tcgetattr@plt+0x6610>
   17900:	ldrd	r2, [sp, #8]
   17904:	orr	r4, r4, #2
   17908:	strd	r2, [r6]
   1790c:	b	17430 <tcgetattr@plt+0x629c>
   17910:	ldrb	r7, [r8, #2]
   17914:	mov	sl, #1024	; 0x400
   17918:	cmp	r7, #66	; 0x42
   1791c:	movne	r7, #1
   17920:	moveq	r7, #3
   17924:	b	175d4 <tcgetattr@plt+0x6440>
   17928:	mvn	r1, #0
   1792c:	mvn	r0, #0
   17930:	mvn	r2, #0
   17934:	strd	r0, [sp, #8]
   17938:	mov	r9, #1
   1793c:	mov	r1, r2
   17940:	b	17720 <tcgetattr@plt+0x658c>
   17944:	ldr	r3, [pc, #20]	; 17960 <tcgetattr@plt+0x67cc>
   17948:	mov	r2, #85	; 0x55
   1794c:	ldr	r1, [pc, #16]	; 17964 <tcgetattr@plt+0x67d0>
   17950:	ldr	r0, [pc, #16]	; 17968 <tcgetattr@plt+0x67d4>
   17954:	bl	11188 <__assert_fail@plt>
   17958:	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
   1795c:	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
   17960:	andeq	fp, r1, ip, ror fp
   17964:	andeq	fp, r1, r4, asr #22
   17968:	andeq	fp, r1, r4, asr fp
   1796c:	cmp	r1, #0
   17970:	cmpne	r0, #0
   17974:	moveq	r1, #1
   17978:	moveq	r0, r1
   1797c:	umull	r2, r3, r0, r1
   17980:	adds	r3, r3, #0
   17984:	movne	r3, #1
   17988:	cmp	r2, #0
   1798c:	blt	1799c <tcgetattr@plt+0x6808>
   17990:	cmp	r3, #0
   17994:	bne	1799c <tcgetattr@plt+0x6808>
   17998:	b	10eb8 <calloc@plt>
   1799c:	push	{r4, lr}
   179a0:	bl	110b0 <__errno_location@plt>
   179a4:	mov	r3, #12
   179a8:	str	r3, [r0]
   179ac:	mov	r0, #0
   179b0:	pop	{r4, pc}
   179b4:	cmp	r0, #0
   179b8:	moveq	r0, #1
   179bc:	cmp	r0, #0
   179c0:	blt	179c8 <tcgetattr@plt+0x6834>
   179c4:	b	11020 <malloc@plt>
   179c8:	push	{r4, lr}
   179cc:	bl	110b0 <__errno_location@plt>
   179d0:	mov	r3, #12
   179d4:	str	r3, [r0]
   179d8:	mov	r0, #0
   179dc:	pop	{r4, pc}
   179e0:	cmp	r0, #0
   179e4:	beq	17a08 <tcgetattr@plt+0x6874>
   179e8:	cmp	r1, #0
   179ec:	push	{lr}		; (str lr, [sp, #-4]!)
   179f0:	sub	sp, sp, #12
   179f4:	beq	17a10 <tcgetattr@plt+0x687c>
   179f8:	blt	17a28 <tcgetattr@plt+0x6894>
   179fc:	add	sp, sp, #12
   17a00:	pop	{lr}		; (ldr lr, [sp], #4)
   17a04:	b	10f78 <realloc@plt>
   17a08:	mov	r0, r1
   17a0c:	b	179b4 <tcgetattr@plt+0x6820>
   17a10:	str	r1, [sp, #4]
   17a14:	bl	14278 <tcgetattr@plt+0x30e4>
   17a18:	ldr	r3, [sp, #4]
   17a1c:	mov	r0, r3
   17a20:	add	sp, sp, #12
   17a24:	pop	{pc}		; (ldr pc, [sp], #4)
   17a28:	bl	110b0 <__errno_location@plt>
   17a2c:	mov	r2, #12
   17a30:	mov	r3, #0
   17a34:	str	r2, [r0]
   17a38:	b	17a1c <tcgetattr@plt+0x6888>
   17a3c:	push	{r4, r5, r6, lr}
   17a40:	mov	r4, r0
   17a44:	bl	10fe4 <__fpending@plt>
   17a48:	ldr	r5, [r4]
   17a4c:	and	r5, r5, #32
   17a50:	mov	r6, r0
   17a54:	mov	r0, r4
   17a58:	bl	17ab8 <tcgetattr@plt+0x6924>
   17a5c:	cmp	r5, #0
   17a60:	mov	r4, r0
   17a64:	bne	17a84 <tcgetattr@plt+0x68f0>
   17a68:	cmp	r0, #0
   17a6c:	beq	17a7c <tcgetattr@plt+0x68e8>
   17a70:	cmp	r6, #0
   17a74:	beq	17aa0 <tcgetattr@plt+0x690c>
   17a78:	mvn	r4, #0
   17a7c:	mov	r0, r4
   17a80:	pop	{r4, r5, r6, pc}
   17a84:	cmp	r0, #0
   17a88:	bne	17a78 <tcgetattr@plt+0x68e4>
   17a8c:	bl	110b0 <__errno_location@plt>
   17a90:	str	r4, [r0]
   17a94:	mvn	r4, #0
   17a98:	mov	r0, r4
   17a9c:	pop	{r4, r5, r6, pc}
   17aa0:	bl	110b0 <__errno_location@plt>
   17aa4:	ldr	r4, [r0]
   17aa8:	subs	r4, r4, #9
   17aac:	mvnne	r4, #0
   17ab0:	mov	r0, r4
   17ab4:	pop	{r4, r5, r6, pc}
   17ab8:	push	{r4, r5, lr}
   17abc:	sub	sp, sp, #12
   17ac0:	mov	r4, r0
   17ac4:	bl	110ec <fileno@plt>
   17ac8:	cmp	r0, #0
   17acc:	mov	r0, r4
   17ad0:	blt	17b4c <tcgetattr@plt+0x69b8>
   17ad4:	bl	11038 <__freading@plt>
   17ad8:	cmp	r0, #0
   17adc:	bne	17b18 <tcgetattr@plt+0x6984>
   17ae0:	mov	r0, r4
   17ae4:	bl	17b58 <tcgetattr@plt+0x69c4>
   17ae8:	cmp	r0, #0
   17aec:	beq	17b48 <tcgetattr@plt+0x69b4>
   17af0:	bl	110b0 <__errno_location@plt>
   17af4:	mov	r5, r0
   17af8:	mov	r0, r4
   17afc:	ldr	r4, [r5]
   17b00:	bl	11104 <fclose@plt>
   17b04:	cmp	r4, #0
   17b08:	mvnne	r0, #0
   17b0c:	strne	r4, [r5]
   17b10:	add	sp, sp, #12
   17b14:	pop	{r4, r5, pc}
   17b18:	mov	r0, r4
   17b1c:	bl	110ec <fileno@plt>
   17b20:	mov	r3, #1
   17b24:	str	r3, [sp]
   17b28:	mov	r2, #0
   17b2c:	mov	r3, #0
   17b30:	bl	10fc0 <lseek64@plt>
   17b34:	mvn	r3, #0
   17b38:	mvn	r2, #0
   17b3c:	cmp	r1, r3
   17b40:	cmpeq	r0, r2
   17b44:	bne	17ae0 <tcgetattr@plt+0x694c>
   17b48:	mov	r0, r4
   17b4c:	add	sp, sp, #12
   17b50:	pop	{r4, r5, lr}
   17b54:	b	11104 <fclose@plt>
   17b58:	push	{r4, lr}
   17b5c:	subs	r4, r0, #0
   17b60:	sub	sp, sp, #8
   17b64:	beq	17b80 <tcgetattr@plt+0x69ec>
   17b68:	bl	11038 <__freading@plt>
   17b6c:	cmp	r0, #0
   17b70:	beq	17b80 <tcgetattr@plt+0x69ec>
   17b74:	ldr	r3, [r4]
   17b78:	tst	r3, #256	; 0x100
   17b7c:	bne	17b90 <tcgetattr@plt+0x69fc>
   17b80:	mov	r0, r4
   17b84:	add	sp, sp, #8
   17b88:	pop	{r4, lr}
   17b8c:	b	10ef4 <fflush@plt>
   17b90:	mov	r3, #1
   17b94:	str	r3, [sp]
   17b98:	mov	r2, #0
   17b9c:	mov	r3, #0
   17ba0:	mov	r0, r4
   17ba4:	bl	17bb8 <tcgetattr@plt+0x6a24>
   17ba8:	mov	r0, r4
   17bac:	add	sp, sp, #8
   17bb0:	pop	{r4, lr}
   17bb4:	b	10ef4 <fflush@plt>
   17bb8:	push	{r4, r5, r6, r7, r8, lr}
   17bbc:	sub	sp, sp, #8
   17bc0:	ldmib	r0, {ip, lr}
   17bc4:	mov	r4, r0
   17bc8:	ldr	r5, [sp, #32]
   17bcc:	cmp	lr, ip
   17bd0:	beq	17be8 <tcgetattr@plt+0x6a54>
   17bd4:	str	r5, [sp, #32]
   17bd8:	mov	r0, r4
   17bdc:	add	sp, sp, #8
   17be0:	pop	{r4, r5, r6, r7, r8, lr}
   17be4:	b	11110 <fseeko64@plt>
   17be8:	ldr	lr, [r0, #20]
   17bec:	ldr	ip, [r0, #16]
   17bf0:	cmp	lr, ip
   17bf4:	bne	17bd4 <tcgetattr@plt+0x6a40>
   17bf8:	ldr	r8, [r0, #36]	; 0x24
   17bfc:	cmp	r8, #0
   17c00:	bne	17bd4 <tcgetattr@plt+0x6a40>
   17c04:	mov	r6, r2
   17c08:	mov	r7, r3
   17c0c:	bl	110ec <fileno@plt>
   17c10:	mov	r2, r6
   17c14:	mov	r3, r7
   17c18:	str	r5, [sp]
   17c1c:	bl	10fc0 <lseek64@plt>
   17c20:	mvn	r3, #0
   17c24:	mvn	r2, #0
   17c28:	cmp	r1, r3
   17c2c:	cmpeq	r0, r2
   17c30:	beq	17c50 <tcgetattr@plt+0x6abc>
   17c34:	ldr	r3, [r4]
   17c38:	strd	r0, [r4, #80]	; 0x50
   17c3c:	mov	r0, r8
   17c40:	bic	r3, r3, #16
   17c44:	str	r3, [r4]
   17c48:	add	sp, sp, #8
   17c4c:	pop	{r4, r5, r6, r7, r8, pc}
   17c50:	mvn	r0, #0
   17c54:	b	17c48 <tcgetattr@plt+0x6ab4>
   17c58:	push	{r4, lr}
   17c5c:	mov	r0, #14
   17c60:	bl	1114c <nl_langinfo@plt>
   17c64:	cmp	r0, #0
   17c68:	beq	17c80 <tcgetattr@plt+0x6aec>
   17c6c:	ldrb	r2, [r0]
   17c70:	ldr	r3, [pc, #16]	; 17c88 <tcgetattr@plt+0x6af4>
   17c74:	cmp	r2, #0
   17c78:	moveq	r0, r3
   17c7c:	pop	{r4, pc}
   17c80:	ldr	r0, [pc]	; 17c88 <tcgetattr@plt+0x6af4>
   17c84:	pop	{r4, pc}
   17c88:	andeq	fp, r1, r8, lsl #23
   17c8c:	push	{r4, r5, r6, r7, lr}
   17c90:	subs	r6, r0, #0
   17c94:	sub	sp, sp, #12
   17c98:	addeq	r6, sp, #4
   17c9c:	mov	r0, r6
   17ca0:	mov	r5, r2
   17ca4:	mov	r7, r1
   17ca8:	bl	10ff0 <mbrtowc@plt>
   17cac:	cmp	r5, #0
   17cb0:	cmnne	r0, #3
   17cb4:	mov	r4, r0
   17cb8:	bls	17cd4 <tcgetattr@plt+0x6b40>
   17cbc:	mov	r0, #0
   17cc0:	bl	17d2c <tcgetattr@plt+0x6b98>
   17cc4:	cmp	r0, #0
   17cc8:	moveq	r4, #1
   17ccc:	ldrbeq	r3, [r7]
   17cd0:	streq	r3, [r6]
   17cd4:	mov	r0, r4
   17cd8:	add	sp, sp, #12
   17cdc:	pop	{r4, r5, r6, r7, pc}
   17ce0:	push	{r4, r5, r6, lr}
   17ce4:	subs	r4, r2, #0
   17ce8:	mov	r6, r0
   17cec:	mov	r5, r1
   17cf0:	beq	17d1c <tcgetattr@plt+0x6b88>
   17cf4:	mov	r1, r4
   17cf8:	mvn	r0, #0
   17cfc:	bl	17e20 <tcgetattr@plt+0x6c8c>
   17d00:	cmp	r0, r5
   17d04:	bcs	17d1c <tcgetattr@plt+0x6b88>
   17d08:	bl	110b0 <__errno_location@plt>
   17d0c:	mov	r3, #12
   17d10:	str	r3, [r0]
   17d14:	mov	r0, #0
   17d18:	pop	{r4, r5, r6, pc}
   17d1c:	mul	r1, r5, r4
   17d20:	mov	r0, r6
   17d24:	pop	{r4, r5, r6, lr}
   17d28:	b	179e0 <tcgetattr@plt+0x684c>
   17d2c:	push	{lr}		; (str lr, [sp, #-4]!)
   17d30:	sub	sp, sp, #268	; 0x10c
   17d34:	add	r1, sp, #4
   17d38:	ldr	r2, [pc, #60]	; 17d7c <tcgetattr@plt+0x6be8>
   17d3c:	bl	17d88 <tcgetattr@plt+0x6bf4>
   17d40:	cmp	r0, #0
   17d44:	movne	r0, #0
   17d48:	bne	17d74 <tcgetattr@plt+0x6be0>
   17d4c:	ldr	r1, [pc, #44]	; 17d80 <tcgetattr@plt+0x6bec>
   17d50:	add	r0, sp, #4
   17d54:	bl	10edc <strcmp@plt>
   17d58:	cmp	r0, #0
   17d5c:	beq	17d74 <tcgetattr@plt+0x6be0>
   17d60:	add	r0, sp, #4
   17d64:	ldr	r1, [pc, #24]	; 17d84 <tcgetattr@plt+0x6bf0>
   17d68:	bl	10edc <strcmp@plt>
   17d6c:	adds	r0, r0, #0
   17d70:	movne	r0, #1
   17d74:	add	sp, sp, #268	; 0x10c
   17d78:	pop	{pc}		; (ldr pc, [sp], #4)
   17d7c:	andeq	r0, r0, r1, lsl #2
   17d80:	muleq	r1, r0, fp
   17d84:	muleq	r1, r4, fp
   17d88:	push	{r4, r5, r6, lr}
   17d8c:	mov	r5, r1
   17d90:	mov	r1, #0
   17d94:	mov	r4, r2
   17d98:	bl	11134 <setlocale@plt>
   17d9c:	subs	r6, r0, #0
   17da0:	beq	17dfc <tcgetattr@plt+0x6c68>
   17da4:	bl	11080 <strlen@plt>
   17da8:	cmp	r4, r0
   17dac:	bhi	17de4 <tcgetattr@plt+0x6c50>
   17db0:	cmp	r4, #0
   17db4:	bne	17dc0 <tcgetattr@plt+0x6c2c>
   17db8:	mov	r0, #34	; 0x22
   17dbc:	pop	{r4, r5, r6, pc}
   17dc0:	sub	r4, r4, #1
   17dc4:	mov	r1, r6
   17dc8:	mov	r2, r4
   17dcc:	mov	r0, r5
   17dd0:	bl	10f18 <memcpy@plt>
   17dd4:	mov	r3, #0
   17dd8:	strb	r3, [r5, r4]
   17ddc:	mov	r0, #34	; 0x22
   17de0:	pop	{r4, r5, r6, pc}
   17de4:	add	r2, r0, #1
   17de8:	mov	r1, r6
   17dec:	mov	r0, r5
   17df0:	bl	10f18 <memcpy@plt>
   17df4:	mov	r0, #0
   17df8:	pop	{r4, r5, r6, pc}
   17dfc:	cmp	r4, #0
   17e00:	beq	17e10 <tcgetattr@plt+0x6c7c>
   17e04:	strb	r6, [r5]
   17e08:	mov	r0, #22
   17e0c:	pop	{r4, r5, r6, pc}
   17e10:	mov	r0, #22
   17e14:	pop	{r4, r5, r6, pc}
   17e18:	mov	r1, #0
   17e1c:	b	11134 <setlocale@plt>
   17e20:	subs	r2, r1, #1
   17e24:	bxeq	lr
   17e28:	bcc	18000 <tcgetattr@plt+0x6e6c>
   17e2c:	cmp	r0, r1
   17e30:	bls	17fe4 <tcgetattr@plt+0x6e50>
   17e34:	tst	r1, r2
   17e38:	beq	17ff0 <tcgetattr@plt+0x6e5c>
   17e3c:	clz	r3, r0
   17e40:	clz	r2, r1
   17e44:	sub	r3, r2, r3
   17e48:	rsbs	r3, r3, #31
   17e4c:	addne	r3, r3, r3, lsl #1
   17e50:	mov	r2, #0
   17e54:	addne	pc, pc, r3, lsl #2
   17e58:	nop			; (mov r0, r0)
   17e5c:	cmp	r0, r1, lsl #31
   17e60:	adc	r2, r2, r2
   17e64:	subcs	r0, r0, r1, lsl #31
   17e68:	cmp	r0, r1, lsl #30
   17e6c:	adc	r2, r2, r2
   17e70:	subcs	r0, r0, r1, lsl #30
   17e74:	cmp	r0, r1, lsl #29
   17e78:	adc	r2, r2, r2
   17e7c:	subcs	r0, r0, r1, lsl #29
   17e80:	cmp	r0, r1, lsl #28
   17e84:	adc	r2, r2, r2
   17e88:	subcs	r0, r0, r1, lsl #28
   17e8c:	cmp	r0, r1, lsl #27
   17e90:	adc	r2, r2, r2
   17e94:	subcs	r0, r0, r1, lsl #27
   17e98:	cmp	r0, r1, lsl #26
   17e9c:	adc	r2, r2, r2
   17ea0:	subcs	r0, r0, r1, lsl #26
   17ea4:	cmp	r0, r1, lsl #25
   17ea8:	adc	r2, r2, r2
   17eac:	subcs	r0, r0, r1, lsl #25
   17eb0:	cmp	r0, r1, lsl #24
   17eb4:	adc	r2, r2, r2
   17eb8:	subcs	r0, r0, r1, lsl #24
   17ebc:	cmp	r0, r1, lsl #23
   17ec0:	adc	r2, r2, r2
   17ec4:	subcs	r0, r0, r1, lsl #23
   17ec8:	cmp	r0, r1, lsl #22
   17ecc:	adc	r2, r2, r2
   17ed0:	subcs	r0, r0, r1, lsl #22
   17ed4:	cmp	r0, r1, lsl #21
   17ed8:	adc	r2, r2, r2
   17edc:	subcs	r0, r0, r1, lsl #21
   17ee0:	cmp	r0, r1, lsl #20
   17ee4:	adc	r2, r2, r2
   17ee8:	subcs	r0, r0, r1, lsl #20
   17eec:	cmp	r0, r1, lsl #19
   17ef0:	adc	r2, r2, r2
   17ef4:	subcs	r0, r0, r1, lsl #19
   17ef8:	cmp	r0, r1, lsl #18
   17efc:	adc	r2, r2, r2
   17f00:	subcs	r0, r0, r1, lsl #18
   17f04:	cmp	r0, r1, lsl #17
   17f08:	adc	r2, r2, r2
   17f0c:	subcs	r0, r0, r1, lsl #17
   17f10:	cmp	r0, r1, lsl #16
   17f14:	adc	r2, r2, r2
   17f18:	subcs	r0, r0, r1, lsl #16
   17f1c:	cmp	r0, r1, lsl #15
   17f20:	adc	r2, r2, r2
   17f24:	subcs	r0, r0, r1, lsl #15
   17f28:	cmp	r0, r1, lsl #14
   17f2c:	adc	r2, r2, r2
   17f30:	subcs	r0, r0, r1, lsl #14
   17f34:	cmp	r0, r1, lsl #13
   17f38:	adc	r2, r2, r2
   17f3c:	subcs	r0, r0, r1, lsl #13
   17f40:	cmp	r0, r1, lsl #12
   17f44:	adc	r2, r2, r2
   17f48:	subcs	r0, r0, r1, lsl #12
   17f4c:	cmp	r0, r1, lsl #11
   17f50:	adc	r2, r2, r2
   17f54:	subcs	r0, r0, r1, lsl #11
   17f58:	cmp	r0, r1, lsl #10
   17f5c:	adc	r2, r2, r2
   17f60:	subcs	r0, r0, r1, lsl #10
   17f64:	cmp	r0, r1, lsl #9
   17f68:	adc	r2, r2, r2
   17f6c:	subcs	r0, r0, r1, lsl #9
   17f70:	cmp	r0, r1, lsl #8
   17f74:	adc	r2, r2, r2
   17f78:	subcs	r0, r0, r1, lsl #8
   17f7c:	cmp	r0, r1, lsl #7
   17f80:	adc	r2, r2, r2
   17f84:	subcs	r0, r0, r1, lsl #7
   17f88:	cmp	r0, r1, lsl #6
   17f8c:	adc	r2, r2, r2
   17f90:	subcs	r0, r0, r1, lsl #6
   17f94:	cmp	r0, r1, lsl #5
   17f98:	adc	r2, r2, r2
   17f9c:	subcs	r0, r0, r1, lsl #5
   17fa0:	cmp	r0, r1, lsl #4
   17fa4:	adc	r2, r2, r2
   17fa8:	subcs	r0, r0, r1, lsl #4
   17fac:	cmp	r0, r1, lsl #3
   17fb0:	adc	r2, r2, r2
   17fb4:	subcs	r0, r0, r1, lsl #3
   17fb8:	cmp	r0, r1, lsl #2
   17fbc:	adc	r2, r2, r2
   17fc0:	subcs	r0, r0, r1, lsl #2
   17fc4:	cmp	r0, r1, lsl #1
   17fc8:	adc	r2, r2, r2
   17fcc:	subcs	r0, r0, r1, lsl #1
   17fd0:	cmp	r0, r1
   17fd4:	adc	r2, r2, r2
   17fd8:	subcs	r0, r0, r1
   17fdc:	mov	r0, r2
   17fe0:	bx	lr
   17fe4:	moveq	r0, #1
   17fe8:	movne	r0, #0
   17fec:	bx	lr
   17ff0:	clz	r2, r1
   17ff4:	rsb	r2, r2, #31
   17ff8:	lsr	r0, r0, r2
   17ffc:	bx	lr
   18000:	cmp	r0, #0
   18004:	mvnne	r0, #0
   18008:	b	182a8 <tcgetattr@plt+0x7114>
   1800c:	cmp	r1, #0
   18010:	beq	18000 <tcgetattr@plt+0x6e6c>
   18014:	push	{r0, r1, lr}
   18018:	bl	17e20 <tcgetattr@plt+0x6c8c>
   1801c:	pop	{r1, r2, lr}
   18020:	mul	r3, r2, r0
   18024:	sub	r1, r1, r3
   18028:	bx	lr
   1802c:	cmp	r1, #0
   18030:	beq	1823c <tcgetattr@plt+0x70a8>
   18034:	eor	ip, r0, r1
   18038:	rsbmi	r1, r1, #0
   1803c:	subs	r2, r1, #1
   18040:	beq	18208 <tcgetattr@plt+0x7074>
   18044:	movs	r3, r0
   18048:	rsbmi	r3, r0, #0
   1804c:	cmp	r3, r1
   18050:	bls	18214 <tcgetattr@plt+0x7080>
   18054:	tst	r1, r2
   18058:	beq	18224 <tcgetattr@plt+0x7090>
   1805c:	clz	r2, r3
   18060:	clz	r0, r1
   18064:	sub	r2, r0, r2
   18068:	rsbs	r2, r2, #31
   1806c:	addne	r2, r2, r2, lsl #1
   18070:	mov	r0, #0
   18074:	addne	pc, pc, r2, lsl #2
   18078:	nop			; (mov r0, r0)
   1807c:	cmp	r3, r1, lsl #31
   18080:	adc	r0, r0, r0
   18084:	subcs	r3, r3, r1, lsl #31
   18088:	cmp	r3, r1, lsl #30
   1808c:	adc	r0, r0, r0
   18090:	subcs	r3, r3, r1, lsl #30
   18094:	cmp	r3, r1, lsl #29
   18098:	adc	r0, r0, r0
   1809c:	subcs	r3, r3, r1, lsl #29
   180a0:	cmp	r3, r1, lsl #28
   180a4:	adc	r0, r0, r0
   180a8:	subcs	r3, r3, r1, lsl #28
   180ac:	cmp	r3, r1, lsl #27
   180b0:	adc	r0, r0, r0
   180b4:	subcs	r3, r3, r1, lsl #27
   180b8:	cmp	r3, r1, lsl #26
   180bc:	adc	r0, r0, r0
   180c0:	subcs	r3, r3, r1, lsl #26
   180c4:	cmp	r3, r1, lsl #25
   180c8:	adc	r0, r0, r0
   180cc:	subcs	r3, r3, r1, lsl #25
   180d0:	cmp	r3, r1, lsl #24
   180d4:	adc	r0, r0, r0
   180d8:	subcs	r3, r3, r1, lsl #24
   180dc:	cmp	r3, r1, lsl #23
   180e0:	adc	r0, r0, r0
   180e4:	subcs	r3, r3, r1, lsl #23
   180e8:	cmp	r3, r1, lsl #22
   180ec:	adc	r0, r0, r0
   180f0:	subcs	r3, r3, r1, lsl #22
   180f4:	cmp	r3, r1, lsl #21
   180f8:	adc	r0, r0, r0
   180fc:	subcs	r3, r3, r1, lsl #21
   18100:	cmp	r3, r1, lsl #20
   18104:	adc	r0, r0, r0
   18108:	subcs	r3, r3, r1, lsl #20
   1810c:	cmp	r3, r1, lsl #19
   18110:	adc	r0, r0, r0
   18114:	subcs	r3, r3, r1, lsl #19
   18118:	cmp	r3, r1, lsl #18
   1811c:	adc	r0, r0, r0
   18120:	subcs	r3, r3, r1, lsl #18
   18124:	cmp	r3, r1, lsl #17
   18128:	adc	r0, r0, r0
   1812c:	subcs	r3, r3, r1, lsl #17
   18130:	cmp	r3, r1, lsl #16
   18134:	adc	r0, r0, r0
   18138:	subcs	r3, r3, r1, lsl #16
   1813c:	cmp	r3, r1, lsl #15
   18140:	adc	r0, r0, r0
   18144:	subcs	r3, r3, r1, lsl #15
   18148:	cmp	r3, r1, lsl #14
   1814c:	adc	r0, r0, r0
   18150:	subcs	r3, r3, r1, lsl #14
   18154:	cmp	r3, r1, lsl #13
   18158:	adc	r0, r0, r0
   1815c:	subcs	r3, r3, r1, lsl #13
   18160:	cmp	r3, r1, lsl #12
   18164:	adc	r0, r0, r0
   18168:	subcs	r3, r3, r1, lsl #12
   1816c:	cmp	r3, r1, lsl #11
   18170:	adc	r0, r0, r0
   18174:	subcs	r3, r3, r1, lsl #11
   18178:	cmp	r3, r1, lsl #10
   1817c:	adc	r0, r0, r0
   18180:	subcs	r3, r3, r1, lsl #10
   18184:	cmp	r3, r1, lsl #9
   18188:	adc	r0, r0, r0
   1818c:	subcs	r3, r3, r1, lsl #9
   18190:	cmp	r3, r1, lsl #8
   18194:	adc	r0, r0, r0
   18198:	subcs	r3, r3, r1, lsl #8
   1819c:	cmp	r3, r1, lsl #7
   181a0:	adc	r0, r0, r0
   181a4:	subcs	r3, r3, r1, lsl #7
   181a8:	cmp	r3, r1, lsl #6
   181ac:	adc	r0, r0, r0
   181b0:	subcs	r3, r3, r1, lsl #6
   181b4:	cmp	r3, r1, lsl #5
   181b8:	adc	r0, r0, r0
   181bc:	subcs	r3, r3, r1, lsl #5
   181c0:	cmp	r3, r1, lsl #4
   181c4:	adc	r0, r0, r0
   181c8:	subcs	r3, r3, r1, lsl #4
   181cc:	cmp	r3, r1, lsl #3
   181d0:	adc	r0, r0, r0
   181d4:	subcs	r3, r3, r1, lsl #3
   181d8:	cmp	r3, r1, lsl #2
   181dc:	adc	r0, r0, r0
   181e0:	subcs	r3, r3, r1, lsl #2
   181e4:	cmp	r3, r1, lsl #1
   181e8:	adc	r0, r0, r0
   181ec:	subcs	r3, r3, r1, lsl #1
   181f0:	cmp	r3, r1
   181f4:	adc	r0, r0, r0
   181f8:	subcs	r3, r3, r1
   181fc:	cmp	ip, #0
   18200:	rsbmi	r0, r0, #0
   18204:	bx	lr
   18208:	teq	ip, r0
   1820c:	rsbmi	r0, r0, #0
   18210:	bx	lr
   18214:	movcc	r0, #0
   18218:	asreq	r0, ip, #31
   1821c:	orreq	r0, r0, #1
   18220:	bx	lr
   18224:	clz	r2, r1
   18228:	rsb	r2, r2, #31
   1822c:	cmp	ip, #0
   18230:	lsr	r0, r3, r2
   18234:	rsbmi	r0, r0, #0
   18238:	bx	lr
   1823c:	cmp	r0, #0
   18240:	mvngt	r0, #-2147483648	; 0x80000000
   18244:	movlt	r0, #-2147483648	; 0x80000000
   18248:	b	182a8 <tcgetattr@plt+0x7114>
   1824c:	cmp	r1, #0
   18250:	beq	1823c <tcgetattr@plt+0x70a8>
   18254:	push	{r0, r1, lr}
   18258:	bl	18034 <tcgetattr@plt+0x6ea0>
   1825c:	pop	{r1, r2, lr}
   18260:	mul	r3, r2, r0
   18264:	sub	r1, r1, r3
   18268:	bx	lr
   1826c:	cmp	r3, #0
   18270:	cmpeq	r2, #0
   18274:	bne	1828c <tcgetattr@plt+0x70f8>
   18278:	cmp	r1, #0
   1827c:	cmpeq	r0, #0
   18280:	mvnne	r1, #0
   18284:	mvnne	r0, #0
   18288:	b	182a8 <tcgetattr@plt+0x7114>
   1828c:	sub	sp, sp, #8
   18290:	push	{sp, lr}
   18294:	bl	182b8 <tcgetattr@plt+0x7124>
   18298:	ldr	lr, [sp, #4]
   1829c:	add	sp, sp, #8
   182a0:	pop	{r2, r3}
   182a4:	bx	lr
   182a8:	push	{r1, lr}
   182ac:	mov	r0, #8
   182b0:	bl	10ed0 <raise@plt>
   182b4:	pop	{r1, pc}
   182b8:	cmp	r1, r3
   182bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   182c0:	cmpeq	r0, r2
   182c4:	mov	r4, r0
   182c8:	mov	r5, r1
   182cc:	ldr	r9, [sp, #28]
   182d0:	movcc	r0, #0
   182d4:	movcc	r1, #0
   182d8:	bcc	183d0 <tcgetattr@plt+0x723c>
   182dc:	cmp	r3, #0
   182e0:	clzeq	ip, r2
   182e4:	clzne	ip, r3
   182e8:	addeq	ip, ip, #32
   182ec:	cmp	r5, #0
   182f0:	clzeq	r1, r4
   182f4:	addeq	r1, r1, #32
   182f8:	clzne	r1, r5
   182fc:	sub	ip, ip, r1
   18300:	sub	lr, ip, #32
   18304:	lsl	r7, r3, ip
   18308:	rsb	r8, ip, #32
   1830c:	orr	r7, r7, r2, lsl lr
   18310:	orr	r7, r7, r2, lsr r8
   18314:	lsl	r6, r2, ip
   18318:	cmp	r5, r7
   1831c:	cmpeq	r4, r6
   18320:	movcc	r0, #0
   18324:	movcc	r1, #0
   18328:	bcc	18344 <tcgetattr@plt+0x71b0>
   1832c:	mov	r3, #1
   18330:	subs	r4, r4, r6
   18334:	lsl	r1, r3, lr
   18338:	lsl	r0, r3, ip
   1833c:	orr	r1, r1, r3, lsr r8
   18340:	sbc	r5, r5, r7
   18344:	cmp	ip, #0
   18348:	beq	183d0 <tcgetattr@plt+0x723c>
   1834c:	lsrs	r3, r7, #1
   18350:	rrx	r2, r6
   18354:	mov	r6, ip
   18358:	b	1837c <tcgetattr@plt+0x71e8>
   1835c:	subs	r4, r4, r2
   18360:	sbc	r5, r5, r3
   18364:	adds	r4, r4, r4
   18368:	adc	r5, r5, r5
   1836c:	adds	r4, r4, #1
   18370:	adc	r5, r5, #0
   18374:	subs	r6, r6, #1
   18378:	beq	18398 <tcgetattr@plt+0x7204>
   1837c:	cmp	r5, r3
   18380:	cmpeq	r4, r2
   18384:	bcs	1835c <tcgetattr@plt+0x71c8>
   18388:	adds	r4, r4, r4
   1838c:	adc	r5, r5, r5
   18390:	subs	r6, r6, #1
   18394:	bne	1837c <tcgetattr@plt+0x71e8>
   18398:	lsr	r6, r4, ip
   1839c:	lsr	r7, r5, ip
   183a0:	orr	r6, r6, r5, lsl r8
   183a4:	adds	r2, r0, r4
   183a8:	orr	r6, r6, r5, lsr lr
   183ac:	adc	r3, r1, r5
   183b0:	lsl	r1, r7, ip
   183b4:	orr	r1, r1, r6, lsl lr
   183b8:	lsl	r0, r6, ip
   183bc:	orr	r1, r1, r6, lsr r8
   183c0:	subs	r0, r2, r0
   183c4:	mov	r4, r6
   183c8:	mov	r5, r7
   183cc:	sbc	r1, r3, r1
   183d0:	cmp	r9, #0
   183d4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   183d8:	strd	r4, [r9]
   183dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   183e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   183e4:	mov	r7, r0
   183e8:	ldr	r6, [pc, #72]	; 18438 <tcgetattr@plt+0x72a4>
   183ec:	ldr	r5, [pc, #72]	; 1843c <tcgetattr@plt+0x72a8>
   183f0:	add	r6, pc, r6
   183f4:	add	r5, pc, r5
   183f8:	sub	r6, r6, r5
   183fc:	mov	r8, r1
   18400:	mov	r9, r2
   18404:	bl	10e98 <calloc@plt-0x20>
   18408:	asrs	r6, r6, #2
   1840c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18410:	mov	r4, #0
   18414:	add	r4, r4, #1
   18418:	ldr	r3, [r5], #4
   1841c:	mov	r2, r9
   18420:	mov	r1, r8
   18424:	mov	r0, r7
   18428:	blx	r3
   1842c:	cmp	r6, r4
   18430:	bne	18414 <tcgetattr@plt+0x7280>
   18434:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18438:	andeq	r3, r1, r8, lsl fp
   1843c:	andeq	r3, r1, r0, lsl fp
   18440:	bx	lr
   18444:	ldr	r3, [pc, #12]	; 18458 <tcgetattr@plt+0x72c4>
   18448:	mov	r1, #0
   1844c:	add	r3, pc, r3
   18450:	ldr	r2, [r3]
   18454:	b	110bc <__cxa_atexit@plt>
   18458:			; <UNDEFINED> instruction: 0x00013cb8

Disassembly of section .fini:

0001845c <.fini>:
   1845c:	push	{r3, lr}
   18460:	pop	{r3, pc}
