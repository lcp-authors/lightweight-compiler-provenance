
../repos/daq-2.0.7/os-daq-modules/.libs/daq_afpacket.so:     file format elf32-littlearm


Disassembly of section .init:

00000944 <_init>:
 944:	push	{r3, lr}
 948:	bl	afc <call_weak_fn>
 94c:	pop	{r3, pc}

Disassembly of section .plt:

00000950 <.plt>:
 950:	push	{lr}		; (str lr, [sp, #-4]!)
 954:	ldr	lr, [pc, #4]	; 960 <.plt+0x10>
 958:	add	lr, pc, lr
 95c:	ldr	pc, [lr, #8]!
 960:	.word	0x000126a0

00000964 <calloc@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #73728	; 0x12000
 96c:	ldr	pc, [ip, #1696]!	; 0x6a0

00000970 <strstr@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #73728	; 0x12000
 978:	ldr	pc, [ip, #1688]!	; 0x698

0000097c <strcmp@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #73728	; 0x12000
 984:	ldr	pc, [ip, #1680]!	; 0x690

00000988 <__cxa_finalize@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #73728	; 0x12000
 990:	ldr	pc, [ip, #1672]!	; 0x688

00000994 <setsockopt@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #73728	; 0x12000
 99c:	ldr	pc, [ip, #1664]!	; 0x680

000009a0 <strcspn@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #73728	; 0x12000
 9a8:	ldr	pc, [ip, #1656]!	; 0x678

000009ac <printf@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #73728	; 0x12000
 9b4:	ldr	pc, [ip, #1648]!	; 0x670

000009b8 <free@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #73728	; 0x12000
 9c0:	ldr	pc, [ip, #1640]!	; 0x668

000009c4 <memcpy@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #73728	; 0x12000
 9cc:	ldr	pc, [ip, #1632]!	; 0x660

000009d0 <strdup@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #73728	; 0x12000
 9d8:	ldr	pc, [ip, #1624]!	; 0x658

000009dc <poll@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #73728	; 0x12000
 9e4:	ldr	pc, [ip, #1616]!	; 0x650

000009e8 <getsockopt@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #73728	; 0x12000
 9f0:	ldr	pc, [ip, #1608]!	; 0x648

000009f4 <ioctl@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #73728	; 0x12000
 9fc:	ldr	pc, [ip, #1600]!	; 0x640

00000a00 <sfbpf_freecode@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #73728	; 0x12000
 a08:	ldr	pc, [ip, #1592]!	; 0x638

00000a0c <getenv@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #73728	; 0x12000
 a14:	ldr	pc, [ip, #1584]!	; 0x630

00000a18 <puts@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #73728	; 0x12000
 a20:	ldr	pc, [ip, #1576]!	; 0x628

00000a24 <sfbpf_compile@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #73728	; 0x12000
 a2c:	ldr	pc, [ip, #1568]!	; 0x620

00000a30 <strerror@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #73728	; 0x12000
 a38:	ldr	pc, [ip, #1560]!	; 0x618

00000a3c <__gmon_start__@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #73728	; 0x12000
 a44:	ldr	pc, [ip, #1552]!	; 0x610

00000a48 <strtoul@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #73728	; 0x12000
 a50:	ldr	pc, [ip, #1544]!	; 0x608

00000a54 <strlen@plt>:
 a54:	add	ip, pc, #0, 12
 a58:	add	ip, ip, #73728	; 0x12000
 a5c:	ldr	pc, [ip, #1536]!	; 0x600

00000a60 <mmap@plt>:
 a60:	add	ip, pc, #0, 12
 a64:	add	ip, ip, #73728	; 0x12000
 a68:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a6c <fprintf@plt>:
 a6c:	add	ip, pc, #0, 12
 a70:	add	ip, ip, #73728	; 0x12000
 a74:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a78 <getpagesize@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a84 <__errno_location@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a90 <snprintf@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a9c <bind@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1488]!	; 0x5d0

00000aa8 <memset@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1480]!	; 0x5c8

00000ab4 <strncpy@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1472]!	; 0x5c0

00000ac0 <munmap@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1464]!	; 0x5b8

00000acc <sfbpf_filter@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1456]!	; 0x5b0

00000ad8 <socket@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ae4 <close@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1440]!	; 0x5a0

00000af0 <send@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00000afc <call_weak_fn>:
     afc:	ldr	r3, [pc, #20]	; b18 <call_weak_fn+0x1c>
     b00:	ldr	r2, [pc, #20]	; b1c <call_weak_fn+0x20>
     b04:	add	r3, pc, r3
     b08:	ldr	r2, [r3, r2]
     b0c:	cmp	r2, #0
     b10:	bxeq	lr
     b14:	b	a3c <__gmon_start__@plt>
     b18:	.word	0x000124f4
     b1c:	.word	0x000000a0

00000b20 <deregister_tm_clones>:
     b20:	ldr	r0, [pc, #44]	; b54 <deregister_tm_clones+0x34>
     b24:	ldr	r3, [pc, #44]	; b58 <deregister_tm_clones+0x38>
     b28:	add	r0, pc, r0
     b2c:	add	r3, pc, r3
     b30:	cmp	r3, r0
     b34:	ldr	r3, [pc, #32]	; b5c <deregister_tm_clones+0x3c>
     b38:	add	r3, pc, r3
     b3c:	bxeq	lr
     b40:	ldr	r2, [pc, #24]	; b60 <deregister_tm_clones+0x40>
     b44:	ldr	r3, [r3, r2]
     b48:	cmp	r3, #0
     b4c:	bxeq	lr
     b50:	bx	r3
     b54:	.word	0x0001257c
     b58:	.word	0x00012578
     b5c:	.word	0x000124c0
     b60:	.word	0x00000098

00000b64 <register_tm_clones>:
     b64:	ldr	r0, [pc, #56]	; ba4 <register_tm_clones+0x40>
     b68:	ldr	r3, [pc, #56]	; ba8 <register_tm_clones+0x44>
     b6c:	add	r0, pc, r0
     b70:	add	r3, pc, r3
     b74:	sub	r1, r3, r0
     b78:	ldr	r3, [pc, #44]	; bac <register_tm_clones+0x48>
     b7c:	asr	r1, r1, #2
     b80:	add	r3, pc, r3
     b84:	add	r1, r1, r1, lsr #31
     b88:	asrs	r1, r1, #1
     b8c:	bxeq	lr
     b90:	ldr	r2, [pc, #24]	; bb0 <register_tm_clones+0x4c>
     b94:	ldr	r3, [r3, r2]
     b98:	cmp	r3, #0
     b9c:	bxeq	lr
     ba0:	bx	r3
     ba4:	.word	0x00012538
     ba8:	.word	0x00012534
     bac:	.word	0x00012478
     bb0:	.word	0x000000a4

00000bb4 <__do_global_dtors_aux>:
     bb4:	ldr	r3, [pc, #76]	; c08 <__do_global_dtors_aux+0x54>
     bb8:	ldr	r2, [pc, #76]	; c0c <__do_global_dtors_aux+0x58>
     bbc:	add	r3, pc, r3
     bc0:	add	r2, pc, r2
     bc4:	ldrb	r3, [r3]
     bc8:	cmp	r3, #0
     bcc:	bxne	lr
     bd0:	ldr	r3, [pc, #56]	; c10 <__do_global_dtors_aux+0x5c>
     bd4:	push	{r4, lr}
     bd8:	ldr	r3, [r2, r3]
     bdc:	cmp	r3, #0
     be0:	beq	bf0 <__do_global_dtors_aux+0x3c>
     be4:	ldr	r3, [pc, #40]	; c14 <__do_global_dtors_aux+0x60>
     be8:	ldr	r0, [pc, r3]
     bec:	bl	988 <__cxa_finalize@plt>
     bf0:	bl	b20 <deregister_tm_clones>
     bf4:	ldr	r3, [pc, #28]	; c18 <__do_global_dtors_aux+0x64>
     bf8:	mov	r2, #1
     bfc:	add	r3, pc, r3
     c00:	strb	r2, [r3]
     c04:	pop	{r4, pc}
     c08:	.word	0x000124e8
     c0c:	.word	0x00012438
     c10:	.word	0x00000094
     c14:	.word	0x000124b8
     c18:	.word	0x000124a8

00000c1c <frame_dummy>:
     c1c:	b	b64 <register_tm_clones>

00000c20 <afpacket_daq_initialize>:
     c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c24:	add	fp, sp, #28
     c28:	sub	sp, sp, #36	; 0x24
     c2c:	mov	r7, r3
     c30:	mov	r9, r2
     c34:	mov	r8, r1
     c38:	mov	r5, r0
     c3c:	mov	r0, #1
     c40:	mov	r1, #408	; 0x198
     c44:	bl	964 <calloc@plt>
     c48:	cmp	r0, #0
     c4c:	beq	cd0 <afpacket_daq_initialize+0xb0>
     c50:	mov	r4, r0
     c54:	ldr	r0, [r5]
     c58:	bl	9d0 <strdup@plt>
     c5c:	str	r0, [r4]
     c60:	cmp	r0, #0
     c64:	beq	cf4 <afpacket_daq_initialize+0xd4>
     c68:	mov	r6, r0
     c6c:	ldmib	r5, {r0, r1}
     c70:	cmp	r1, #0
     c74:	mvneq	r1, #0
     c78:	strd	r0, [r4, #8]
     c7c:	ldrb	r0, [r6]
     c80:	cmp	r0, #58	; 0x3a
     c84:	beq	ef8 <afpacket_daq_initialize+0x2d8>
     c88:	mov	r0, r6
     c8c:	bl	a54 <strlen@plt>
     c90:	cmp	r0, #0
     c94:	beq	ca8 <afpacket_daq_initialize+0x88>
     c98:	add	r0, r6, r0
     c9c:	ldrb	r0, [r0, #-1]
     ca0:	cmp	r0, #58	; 0x3a
     ca4:	beq	ef8 <afpacket_daq_initialize+0x2d8>
     ca8:	ldr	r0, [r5, #12]
     cac:	cmp	r0, #0
     cb0:	beq	ee0 <afpacket_daq_initialize+0x2c0>
     cb4:	str	r7, [sp, #16]
     cb8:	str	r8, [sp, #12]
     cbc:	ldrb	r0, [r6]
     cc0:	mov	sl, #0
     cc4:	cmp	r0, #0
     cc8:	bne	d28 <afpacket_daq_initialize+0x108>
     ccc:	b	e10 <afpacket_daq_initialize+0x1f0>
     cd0:	ldr	r2, [pc, #824]	; 1010 <afpacket_daq_initialize+0x3f0>
     cd4:	add	r2, pc, r2
     cd8:	ldr	r3, [pc, #820]	; 1014 <afpacket_daq_initialize+0x3f4>
     cdc:	add	r3, pc, r3
     ce0:	mov	r0, r9
     ce4:	mov	r1, r7
     ce8:	bl	a90 <snprintf@plt>
     cec:	mvn	r5, #1
     cf0:	b	f3c <afpacket_daq_initialize+0x31c>
     cf4:	ldr	r2, [pc, #796]	; 1018 <afpacket_daq_initialize+0x3f8>
     cf8:	add	r2, pc, r2
     cfc:	ldr	r3, [pc, #792]	; 101c <afpacket_daq_initialize+0x3fc>
     d00:	add	r3, pc, r3
     d04:	mov	r0, r9
     d08:	mov	r1, r7
     d0c:	bl	a90 <snprintf@plt>
     d10:	mvn	r5, #1
     d14:	b	f1c <afpacket_daq_initialize+0x2fc>
     d18:	mov	r8, #1
     d1c:	ldrb	r0, [r6, r8]!
     d20:	cmp	r0, #0
     d24:	beq	e10 <afpacket_daq_initialize+0x1f0>
     d28:	mov	r0, r6
     d2c:	ldr	r1, [pc, #760]	; 102c <afpacket_daq_initialize+0x40c>
     d30:	add	r1, pc, r1
     d34:	bl	9a0 <strcspn@plt>
     d38:	mov	r8, r0
     d3c:	cmp	r0, #16
     d40:	bcs	f5c <afpacket_daq_initialize+0x33c>
     d44:	cmp	r8, #0
     d48:	beq	d18 <afpacket_daq_initialize+0xf8>
     d4c:	ldr	r0, [r4, #28]
     d50:	add	r0, r0, #1
     d54:	str	r0, [r4, #28]
     d58:	cmp	r0, #32
     d5c:	bcs	fc8 <afpacket_daq_initialize+0x3a8>
     d60:	add	r1, r8, #1
     d64:	add	r7, sp, #20
     d68:	mov	r0, r7
     d6c:	ldr	r2, [pc, #712]	; 103c <afpacket_daq_initialize+0x41c>
     d70:	add	r2, pc, r2
     d74:	mov	r3, r6
     d78:	bl	a90 <snprintf@plt>
     d7c:	mov	r0, r7
     d80:	mov	r1, r9
     d84:	ldr	r2, [sp, #16]
     d88:	bl	188c <create_instance>
     d8c:	cmp	r0, #0
     d90:	beq	fec <afpacket_daq_initialize+0x3cc>
     d94:	ldr	r1, [r4, #24]
     d98:	str	r1, [r0]
     d9c:	str	r0, [r4, #24]
     da0:	add	r1, sl, #1
     da4:	ldr	r2, [r5, #12]
     da8:	cmp	r2, #0
     dac:	beq	dc8 <afpacket_daq_initialize+0x1a8>
     db0:	cmp	r1, #2
     db4:	beq	ddc <afpacket_daq_initialize+0x1bc>
     db8:	cmp	sl, #1
     dbc:	mov	sl, r1
     dc0:	ble	e04 <afpacket_daq_initialize+0x1e4>
     dc4:	b	e10 <afpacket_daq_initialize+0x1f0>
     dc8:	mov	sl, r1
     dcc:	ldrb	r0, [r6, r8]!
     dd0:	cmp	r0, #0
     dd4:	bne	d28 <afpacket_daq_initialize+0x108>
     dd8:	b	e10 <afpacket_daq_initialize+0x1f0>
     ddc:	ldr	r1, [r0]
     de0:	ldr	r7, [r0, #84]	; 0x54
     de4:	ldr	r1, [r1, #84]	; 0x54
     de8:	mov	r0, r4
     dec:	str	r1, [sp, #8]
     df0:	mov	r2, r7
     df4:	bl	19dc <create_bridge>
     df8:	mov	sl, #0
     dfc:	cmp	r0, #0
     e00:	bne	ffc <afpacket_daq_initialize+0x3dc>
     e04:	ldrb	r0, [r6, r8]!
     e08:	cmp	r0, #0
     e0c:	bne	d28 <afpacket_daq_initialize+0x108>
     e10:	ldr	r0, [r4, #24]
     e14:	cmp	r0, #0
     e18:	beq	f48 <afpacket_daq_initialize+0x328>
     e1c:	cmp	sl, #0
     e20:	ldrne	r0, [r5, #12]
     e24:	cmpne	r0, #0
     e28:	bne	f48 <afpacket_daq_initialize+0x328>
     e2c:	ldr	r5, [r5, #20]
     e30:	cmp	r5, #0
     e34:	beq	e98 <afpacket_daq_initialize+0x278>
     e38:	mov	r9, #0
     e3c:	ldr	r6, [pc, #516]	; 1048 <afpacket_daq_initialize+0x428>
     e40:	add	r6, pc, r6
     e44:	ldr	r8, [pc, #512]	; 104c <afpacket_daq_initialize+0x42c>
     e48:	add	r8, pc, r8
     e4c:	mov	sl, #1
     e50:	ldr	r7, [r5]
     e54:	mov	r0, r7
     e58:	mov	r1, r6
     e5c:	bl	97c <strcmp@plt>
     e60:	cmp	r0, #0
     e64:	beq	e80 <afpacket_daq_initialize+0x260>
     e68:	mov	r0, r7
     e6c:	mov	r1, r8
     e70:	bl	97c <strcmp@plt>
     e74:	cmp	r0, #0
     e78:	streq	sl, [r4, #20]
     e7c:	b	e84 <afpacket_daq_initialize+0x264>
     e80:	ldr	r9, [r5, #4]
     e84:	ldr	r5, [r5, #8]
     e88:	cmp	r5, #0
     e8c:	bne	e50 <afpacket_daq_initialize+0x230>
     e90:	cmp	r9, #0
     e94:	bne	eb0 <afpacket_daq_initialize+0x290>
     e98:	ldr	r0, [pc, #432]	; 1050 <afpacket_daq_initialize+0x430>
     e9c:	add	r0, pc, r0
     ea0:	bl	a0c <getenv@plt>
     ea4:	mov	r9, r0
     ea8:	cmp	r0, #0
     eac:	beq	f6c <afpacket_daq_initialize+0x34c>
     eb0:	ldr	r0, [pc, #412]	; 1054 <afpacket_daq_initialize+0x434>
     eb4:	add	r0, pc, r0
     eb8:	mov	r1, r9
     ebc:	bl	97c <strcmp@plt>
     ec0:	cmp	r0, #0
     ec4:	beq	f6c <afpacket_daq_initialize+0x34c>
     ec8:	mov	r0, r9
     ecc:	mov	r1, #0
     ed0:	mov	r2, #10
     ed4:	bl	a48 <strtoul@plt>
     ed8:	lsl	r0, r0, #20
     edc:	b	f70 <afpacket_daq_initialize+0x350>
     ee0:	ldr	r1, [pc, #312]	; 1020 <afpacket_daq_initialize+0x400>
     ee4:	add	r1, pc, r1
     ee8:	mov	r0, r6
     eec:	bl	970 <strstr@plt>
     ef0:	cmp	r0, #0
     ef4:	beq	cb4 <afpacket_daq_initialize+0x94>
     ef8:	str	r6, [sp]
     efc:	ldr	r2, [pc, #288]	; 1024 <afpacket_daq_initialize+0x404>
     f00:	add	r2, pc, r2
     f04:	ldr	r3, [pc, #284]	; 1028 <afpacket_daq_initialize+0x408>
     f08:	add	r3, pc, r3
     f0c:	mov	r0, r9
     f10:	mov	r1, r7
     f14:	bl	a90 <snprintf@plt>
     f18:	mvn	r5, #0
     f1c:	mov	r0, r4
     f20:	bl	1a68 <af_packet_close>
     f24:	ldr	r0, [r4]
     f28:	cmp	r0, #0
     f2c:	beq	f34 <afpacket_daq_initialize+0x314>
     f30:	bl	9b8 <free@plt>
     f34:	mov	r0, r4
     f38:	bl	9b8 <free@plt>
     f3c:	mov	r0, r5
     f40:	sub	sp, fp, #28
     f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f48:	ldr	r0, [r4]
     f4c:	str	r0, [sp]
     f50:	ldr	r2, [pc, #236]	; 1044 <afpacket_daq_initialize+0x424>
     f54:	add	r2, pc, r2
     f58:	b	fd8 <afpacket_daq_initialize+0x3b8>
     f5c:	str	r8, [sp]
     f60:	ldr	r2, [pc, #200]	; 1030 <afpacket_daq_initialize+0x410>
     f64:	add	r2, pc, r2
     f68:	b	fd8 <afpacket_daq_initialize+0x3b8>
     f6c:	mov	r0, #134217728	; 0x8000000
     f70:	ldr	r7, [sp, #12]
     f74:	ldr	r2, [r4, #24]
     f78:	mov	r5, #0
     f7c:	cmp	r2, #0
     f80:	mov	r1, #0
     f84:	beq	fb0 <afpacket_daq_initialize+0x390>
     f88:	mov	r1, #0
     f8c:	ldr	r3, [r2]
     f90:	ldr	r2, [r2, #92]	; 0x5c
     f94:	cmp	r2, #0
     f98:	mov	r2, #2
     f9c:	movweq	r2, #1
     fa0:	add	r1, r2, r1
     fa4:	cmp	r3, #0
     fa8:	mov	r2, r3
     fac:	bne	f8c <afpacket_daq_initialize+0x36c>
     fb0:	mov	r2, #1
     fb4:	str	r2, [r4, #144]	; 0x90
     fb8:	udiv	r0, r0, r1
     fbc:	str	r0, [r4, #16]
     fc0:	str	r4, [r7]
     fc4:	b	f3c <afpacket_daq_initialize+0x31c>
     fc8:	mov	r0, #32
     fcc:	str	r0, [sp]
     fd0:	ldr	r2, [pc, #96]	; 1038 <afpacket_daq_initialize+0x418>
     fd4:	add	r2, pc, r2
     fd8:	ldr	r3, [pc, #84]	; 1034 <afpacket_daq_initialize+0x414>
     fdc:	add	r3, pc, r3
     fe0:	mov	r0, r9
     fe4:	ldr	r1, [sp, #16]
     fe8:	bl	a90 <snprintf@plt>
     fec:	mvn	r5, #0
     ff0:	cmp	r4, #0
     ff4:	bne	f1c <afpacket_daq_initialize+0x2fc>
     ff8:	b	f3c <afpacket_daq_initialize+0x31c>
     ffc:	ldr	r0, [sp, #8]
    1000:	stm	sp, {r0, r7}
    1004:	ldr	r2, [pc, #52]	; 1040 <afpacket_daq_initialize+0x420>
    1008:	add	r2, pc, r2
    100c:	b	fd8 <afpacket_daq_initialize+0x3b8>
    1010:	.word	0x000018dd
    1014:	.word	0x00001910
    1018:	.word	0x0000190c
    101c:	.word	0x000018ec
    1020:	.word	0x00001754
    1024:	.word	0x0000173b
    1028:	.word	0x000016e4
    102c:	.word	0x00001909
    1030:	.word	0x00001702
    1034:	.word	0x00001610
    1038:	.word	0x000016b5
    103c:	.word	0x00001b64
    1040:	.word	0x000016b5
    1044:	.word	0x000016e7
    1048:	.word	0x000018af
    104c:	.word	0x000018b6
    1050:	.word	0x00001868
    1054:	.word	0x00001866

00001058 <afpacket_daq_set_filter>:
    1058:	push	{r4, r5, fp, lr}
    105c:	add	fp, sp, #8
    1060:	sub	sp, sp, #16
    1064:	mov	r5, r1
    1068:	mov	r4, r0
    106c:	ldr	r0, [r0, #4]
    1070:	cmp	r0, #0
    1074:	beq	107c <afpacket_daq_set_filter+0x24>
    1078:	bl	9b8 <free@plt>
    107c:	mov	r0, r5
    1080:	bl	9d0 <strdup@plt>
    1084:	str	r0, [r4, #4]
    1088:	cmp	r0, #0
    108c:	beq	10d0 <afpacket_daq_set_filter+0x78>
    1090:	mov	r3, r0
    1094:	ldr	r0, [r4, #8]
    1098:	mov	r5, #0
    109c:	mov	r1, #1
    10a0:	stm	sp, {r1, r5}
    10a4:	add	r2, sp, #8
    10a8:	mov	r1, #1
    10ac:	bl	a24 <sfbpf_compile@plt>
    10b0:	cmn	r0, #1
    10b4:	ble	10e0 <afpacket_daq_set_filter+0x88>
    10b8:	add	r0, r4, #32
    10bc:	bl	a00 <sfbpf_freecode@plt>
    10c0:	ldr	r0, [sp, #8]
    10c4:	ldr	r1, [sp, #12]
    10c8:	strd	r0, [r4, #32]
    10cc:	b	1100 <afpacket_daq_set_filter+0xa8>
    10d0:	add	r0, r4, #148	; 0x94
    10d4:	ldr	r2, [pc, #48]	; 110c <afpacket_daq_set_filter+0xb4>
    10d8:	add	r2, pc, r2
    10dc:	b	10ec <afpacket_daq_set_filter+0x94>
    10e0:	add	r0, r4, #148	; 0x94
    10e4:	ldr	r2, [pc, #40]	; 1114 <afpacket_daq_set_filter+0xbc>
    10e8:	add	r2, pc, r2
    10ec:	ldr	r3, [pc, #28]	; 1110 <afpacket_daq_set_filter+0xb8>
    10f0:	add	r3, pc, r3
    10f4:	mov	r1, #256	; 0x100
    10f8:	bl	a90 <snprintf@plt>
    10fc:	mvn	r5, #0
    1100:	mov	r0, r5
    1104:	sub	sp, fp, #8
    1108:	pop	{r4, r5, fp, pc}
    110c:	.word	0x0000172f
    1110:	.word	0x0000174b
    1114:	.word	0x0000176b

00001118 <afpacket_daq_start>:
    1118:	push	{r4, r5, fp, lr}
    111c:	add	fp, sp, #8
    1120:	mov	r4, r0
    1124:	ldr	r5, [r0, #24]
    1128:	b	1144 <afpacket_daq_start+0x2c>
    112c:	mov	r1, r5
    1130:	bl	1c9c <start_instance>
    1134:	cmp	r0, #0
    1138:	mvnne	r0, #0
    113c:	popne	{r4, r5, fp, pc}
    1140:	ldr	r5, [r5]
    1144:	mov	r0, r4
    1148:	cmp	r5, #0
    114c:	bne	112c <afpacket_daq_start+0x14>
    1150:	bl	1e64 <reset_stats>
    1154:	mov	r0, #2
    1158:	str	r0, [r4, #144]	; 0x90
    115c:	mov	r0, #0
    1160:	pop	{r4, r5, fp, pc}

00001164 <afpacket_daq_acquire>:
    1164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1168:	add	fp, sp, #28
    116c:	sub	sp, sp, #372	; 0x174
    1170:	mov	r9, r2
    1174:	str	r1, [sp, #24]
    1178:	mov	r4, r0
    117c:	add	r0, sp, #60	; 0x3c
    1180:	add	r1, r0, #6
    1184:	str	r1, [sp, #12]
    1188:	add	r0, r0, #4
    118c:	str	r0, [sp, #16]
    1190:	add	r0, r4, #64	; 0x40
    1194:	str	r0, [sp, #32]
    1198:	add	r0, r4, #88	; 0x58
    119c:	str	r0, [sp, #28]
    11a0:	add	r0, r4, #72	; 0x48
    11a4:	str	r0, [sp, #20]
    11a8:	mov	r0, #0
    11ac:	str	r0, [sp, #52]	; 0x34
    11b0:	str	r2, [sp, #36]	; 0x24
    11b4:	str	r4, [sp, #44]	; 0x2c
    11b8:	ldr	sl, [r4, #24]
    11bc:	cmp	sl, #0
    11c0:	beq	1474 <afpacket_daq_acquire+0x310>
    11c4:	mov	r8, #0
    11c8:	mov	r0, #0
    11cc:	str	r0, [sp, #40]	; 0x28
    11d0:	ldr	r0, [r4, #40]	; 0x28
    11d4:	cmp	r0, #0
    11d8:	bne	1564 <afpacket_daq_acquire+0x400>
    11dc:	ldr	r0, [sl, #8]
    11e0:	cmp	r0, #1
    11e4:	bne	1464 <afpacket_daq_acquire+0x300>
    11e8:	ldr	r1, [sl, #48]	; 0x30
    11ec:	ldr	r6, [r1, #4]
    11f0:	ldr	r0, [r6]
    11f4:	tst	r0, #1
    11f8:	beq	1464 <afpacket_daq_acquire+0x300>
    11fc:	ldrh	r2, [r6, #12]
    1200:	ldr	r7, [r6, #8]
    1204:	ldr	r3, [r6, #20]
    1208:	add	r4, r7, r2
    120c:	movw	r5, #19923	; 0x4dd3
    1210:	movt	r5, #4194	; 0x1062
    1214:	umull	r3, r5, r3, r5
    1218:	ldr	r3, [sl, #28]
    121c:	cmp	r4, r3
    1220:	bhi	1570 <afpacket_daq_acquire+0x40c>
    1224:	ldr	r9, [r6, #4]
    1228:	ldr	r3, [r6, #16]
    122c:	str	r3, [sp, #48]	; 0x30
    1230:	ldr	r1, [r1, #4]
    1234:	add	r4, r1, r2
    1238:	ldrh	r1, [r6, #24]
    123c:	cmp	r1, #0
    1240:	beq	1288 <afpacket_daq_acquire+0x124>
    1244:	cmp	r7, #12
    1248:	bcc	1294 <afpacket_daq_acquire+0x130>
    124c:	ldr	r0, [r4, #8]
    1250:	vld1.8	{d16}, [r4]
    1254:	str	r0, [r4, #4]
    1258:	sub	r0, r4, #4
    125c:	str	r0, [sp, #56]	; 0x38
    1260:	vst1.8	{d16}, [r0]
    1264:	mov	r0, #33024	; 0x8100
    1268:	bl	1ab4 <__bswap_16>
    126c:	strh	r0, [r4, #8]
    1270:	ldrh	r0, [r6, #24]
    1274:	bl	1ab4 <__bswap_16>
    1278:	strh	r0, [r4, #10]
    127c:	add	r9, r9, #4
    1280:	add	r7, r7, #4
    1284:	b	1298 <afpacket_daq_acquire+0x134>
    1288:	tst	r0, #16
    128c:	cmpne	r7, #11
    1290:	bhi	124c <afpacket_daq_acquire+0xe8>
    1294:	str	r4, [sp, #56]	; 0x38
    1298:	ldr	r4, [sp, #44]	; 0x2c
    129c:	ldr	r0, [r4, #36]	; 0x24
    12a0:	cmp	r0, #0
    12a4:	beq	12c0 <afpacket_daq_acquire+0x15c>
    12a8:	ldr	r1, [sp, #56]	; 0x38
    12ac:	mov	r2, r9
    12b0:	mov	r3, r7
    12b4:	bl	acc <sfbpf_filter@plt>
    12b8:	cmp	r0, #0
    12bc:	beq	13b0 <afpacket_daq_acquire+0x24c>
    12c0:	lsr	r0, r5, #6
    12c4:	str	r0, [fp, #-80]	; 0xffffffb0
    12c8:	ldr	r0, [sp, #48]	; 0x30
    12cc:	str	r0, [fp, #-84]	; 0xffffffac
    12d0:	str	r7, [fp, #-76]	; 0xffffffb4
    12d4:	str	r9, [fp, #-72]	; 0xffffffb8
    12d8:	ldr	r1, [sl, #88]	; 0x58
    12dc:	ldr	r0, [sl, #92]	; 0x5c
    12e0:	str	r1, [fp, #-68]	; 0xffffffbc
    12e4:	cmp	r0, #0
    12e8:	ldrne	r0, [r0, #88]	; 0x58
    12ec:	mvneq	r0, #0
    12f0:	ldr	r9, [sp, #36]	; 0x24
    12f4:	mvn	r1, #0
    12f8:	str	r1, [fp, #-60]	; 0xffffffc4
    12fc:	str	r0, [fp, #-64]	; 0xffffffc0
    1300:	str	r1, [fp, #-56]	; 0xffffffc8
    1304:	mov	r0, #0
    1308:	str	r0, [fp, #-52]	; 0xffffffcc
    130c:	str	r0, [fp, #-48]	; 0xffffffd0
    1310:	str	r0, [fp, #-44]	; 0xffffffd4
    1314:	strh	r0, [fp, #-36]	; 0xffffffdc
    1318:	cmp	r9, #0
    131c:	beq	1388 <afpacket_daq_acquire+0x224>
    1320:	ldr	r0, [fp, #8]
    1324:	sub	r1, fp, #84	; 0x54
    1328:	ldr	r2, [sp, #56]	; 0x38
    132c:	blx	r9
    1330:	cmp	r0, #6
    1334:	movwhi	r0, #0
    1338:	ldr	r1, [sp, #28]
    133c:	ldr	r2, [r1, r0, lsl #3]!
    1340:	adds	r2, r2, #1
    1344:	str	r2, [r1]
    1348:	ldr	r2, [r1, #4]
    134c:	adc	r2, r2, #0
    1350:	str	r2, [r1, #4]
    1354:	ldr	r1, [sp, #32]
    1358:	ldrd	r2, [r1]
    135c:	adds	r2, r2, #1
    1360:	adc	r3, r3, #0
    1364:	strd	r2, [r1]
    1368:	ldr	r1, [sp, #52]	; 0x34
    136c:	add	r1, r1, #1
    1370:	str	r1, [sp, #52]	; 0x34
    1374:	mov	r8, #1
    1378:	mov	r1, #45	; 0x2d
    137c:	tst	r8, r1, lsr r0
    1380:	bne	13cc <afpacket_daq_acquire+0x268>
    1384:	b	1448 <afpacket_daq_acquire+0x2e4>
    1388:	ldr	r2, [sp, #32]
    138c:	ldrd	r0, [r2]
    1390:	adds	r0, r0, #1
    1394:	adc	r1, r1, #0
    1398:	strd	r0, [r2]
    139c:	ldr	r0, [sp, #52]	; 0x34
    13a0:	add	r0, r0, #1
    13a4:	str	r0, [sp, #52]	; 0x34
    13a8:	mov	r8, #1
    13ac:	b	13cc <afpacket_daq_acquire+0x268>
    13b0:	ldr	r2, [sp, #20]
    13b4:	ldrd	r0, [r2]
    13b8:	adds	r0, r0, #1
    13bc:	adc	r1, r1, #0
    13c0:	strd	r0, [r2]
    13c4:	mov	r0, #1
    13c8:	str	r0, [sp, #40]	; 0x28
    13cc:	ldr	r0, [sl, #92]	; 0x5c
    13d0:	cmp	r0, #0
    13d4:	beq	1448 <afpacket_daq_acquire+0x2e4>
    13d8:	ldr	r4, [r0, #80]	; 0x50
    13dc:	ldr	r1, [r4, #4]
    13e0:	ldr	r1, [r1]
    13e4:	cmp	r1, #0
    13e8:	bne	1444 <afpacket_daq_acquire+0x2e0>
    13ec:	ldr	r1, [r4, #4]
    13f0:	ldr	r0, [r0, #12]
    13f4:	add	r0, r0, #15
    13f8:	bic	r0, r0, #15
    13fc:	add	r0, r1, r0
    1400:	ldr	r1, [sp, #56]	; 0x38
    1404:	mov	r2, r7
    1408:	bl	9c4 <memcpy@plt>
    140c:	ldr	r0, [r4, #4]
    1410:	str	r7, [r0, #4]
    1414:	ldr	r0, [r4, #4]
    1418:	mov	r1, #1
    141c:	str	r1, [r0]
    1420:	ldr	r0, [sl, #92]	; 0x5c
    1424:	ldr	r0, [r0, #4]
    1428:	mov	r1, #0
    142c:	mov	r2, #0
    1430:	mov	r3, #0
    1434:	bl	af0 <send@plt>
    1438:	ldr	r0, [r4]
    143c:	ldr	r1, [sl, #92]	; 0x5c
    1440:	str	r0, [r1, #80]	; 0x50
    1444:	ldr	r4, [sp, #44]	; 0x2c
    1448:	ldr	r0, [sl, #8]
    144c:	cmp	r0, #1
    1450:	moveq	r0, #0
    1454:	streq	r0, [r6]
    1458:	ldr	r0, [sl, #48]	; 0x30
    145c:	ldr	r0, [r0]
    1460:	str	r0, [sl, #48]	; 0x30
    1464:	ldr	sl, [sl]
    1468:	cmp	sl, #0
    146c:	bne	11d0 <afpacket_daq_acquire+0x6c>
    1470:	b	1480 <afpacket_daq_acquire+0x31c>
    1474:	mov	r0, #0
    1478:	str	r0, [sp, #40]	; 0x28
    147c:	mov	r8, #0
    1480:	ldr	r0, [sp, #40]	; 0x28
    1484:	orrs	r0, r8, r0
    1488:	movw	r5, #8248	; 0x2038
    148c:	mov	r3, #1
    1490:	beq	14b4 <afpacket_daq_acquire+0x350>
    1494:	ldr	r0, [sp, #24]
    1498:	cmp	r0, #1
    149c:	blt	11b8 <afpacket_daq_acquire+0x54>
    14a0:	ldr	r0, [sp, #24]
    14a4:	ldr	r1, [sp, #52]	; 0x34
    14a8:	cmp	r1, r0
    14ac:	blt	11b8 <afpacket_daq_acquire+0x54>
    14b0:	b	15ac <afpacket_daq_acquire+0x448>
    14b4:	ldr	r0, [r4, #24]
    14b8:	cmp	r0, #0
    14bc:	beq	14dc <afpacket_daq_acquire+0x378>
    14c0:	ldr	r1, [sp, #16]
    14c4:	ldr	r2, [r0, #4]
    14c8:	stmda	r1, {r2, r3}
    14cc:	add	r1, r1, #8
    14d0:	ldr	r0, [r0]
    14d4:	cmp	r0, #0
    14d8:	bne	14c4 <afpacket_daq_acquire+0x360>
    14dc:	ldr	r2, [r4, #12]
    14e0:	ldr	r1, [r4, #28]
    14e4:	add	r0, sp, #60	; 0x3c
    14e8:	bl	9dc <poll@plt>
    14ec:	cmn	r0, #1
    14f0:	ble	1534 <afpacket_daq_acquire+0x3d0>
    14f4:	cmp	r0, #0
    14f8:	beq	15ac <afpacket_daq_acquire+0x448>
    14fc:	ldr	r0, [r4, #28]
    1500:	cmp	r0, #0
    1504:	beq	1494 <afpacket_daq_acquire+0x330>
    1508:	mov	r0, #0
    150c:	ldr	r1, [sp, #12]
    1510:	ldrh	r2, [r1]
    1514:	tst	r2, r5
    1518:	bne	158c <afpacket_daq_acquire+0x428>
    151c:	add	r0, r0, #1
    1520:	add	r1, r1, #8
    1524:	ldr	r2, [r4, #28]
    1528:	cmp	r0, r2
    152c:	bcc	1510 <afpacket_daq_acquire+0x3ac>
    1530:	b	1494 <afpacket_daq_acquire+0x330>
    1534:	bl	a84 <__errno_location@plt>
    1538:	mov	r7, r0
    153c:	ldr	r0, [r0]
    1540:	cmp	r0, #4
    1544:	beq	1494 <afpacket_daq_acquire+0x330>
    1548:	bl	a30 <strerror@plt>
    154c:	ldr	r1, [r7]
    1550:	stm	sp, {r0, r1}
    1554:	add	r0, r4, #148	; 0x94
    1558:	ldr	r2, [pc, #184]	; 1618 <afpacket_daq_acquire+0x4b4>
    155c:	add	r2, pc, r2
    1560:	b	15f4 <afpacket_daq_acquire+0x490>
    1564:	mov	r5, #0
    1568:	str	r5, [r4, #40]	; 0x28
    156c:	b	1608 <afpacket_daq_acquire+0x4a4>
    1570:	stm	sp, {r2, r7}
    1574:	str	r3, [sp, #8]
    1578:	ldr	r0, [sp, #44]	; 0x2c
    157c:	add	r0, r0, #148	; 0x94
    1580:	ldr	r2, [pc, #140]	; 1614 <afpacket_daq_acquire+0x4b0>
    1584:	add	r2, pc, r2
    1588:	b	15f4 <afpacket_daq_acquire+0x490>
    158c:	sxth	r0, r2
    1590:	movw	r1, #8208	; 0x2010
    1594:	tst	r0, r1
    1598:	beq	15b4 <afpacket_daq_acquire+0x450>
    159c:	add	r0, r4, #148	; 0x94
    15a0:	ldr	r2, [pc, #116]	; 161c <afpacket_daq_acquire+0x4b8>
    15a4:	add	r2, pc, r2
    15a8:	b	15f4 <afpacket_daq_acquire+0x490>
    15ac:	mov	r5, #0
    15b0:	b	1608 <afpacket_daq_acquire+0x4a4>
    15b4:	tst	r0, #8
    15b8:	bne	15e8 <afpacket_daq_acquire+0x484>
    15bc:	mvn	r5, #0
    15c0:	tst	r0, #32
    15c4:	beq	1608 <afpacket_daq_acquire+0x4a4>
    15c8:	add	r0, r4, #148	; 0x94
    15cc:	ldr	r2, [pc, #84]	; 1628 <afpacket_daq_acquire+0x4c4>
    15d0:	add	r2, pc, r2
    15d4:	ldr	r3, [pc, #80]	; 162c <afpacket_daq_acquire+0x4c8>
    15d8:	add	r3, pc, r3
    15dc:	mov	r1, #256	; 0x100
    15e0:	bl	a90 <snprintf@plt>
    15e4:	b	1608 <afpacket_daq_acquire+0x4a4>
    15e8:	add	r0, r4, #148	; 0x94
    15ec:	ldr	r2, [pc, #48]	; 1624 <afpacket_daq_acquire+0x4c0>
    15f0:	add	r2, pc, r2
    15f4:	ldr	r3, [pc, #36]	; 1620 <afpacket_daq_acquire+0x4bc>
    15f8:	add	r3, pc, r3
    15fc:	mov	r1, #256	; 0x100
    1600:	bl	a90 <snprintf@plt>
    1604:	mvn	r5, #0
    1608:	mov	r0, r5
    160c:	sub	sp, fp, #28
    1610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1614:	.word	0x0000164f
    1618:	.word	0x000016c5
    161c:	.word	0x00001696
    1620:	.word	0x000015c6
    1624:	.word	0x00001669
    1628:	.word	0x000016bc
    162c:	.word	0x000015e6

00001630 <afpacket_daq_inject>:
    1630:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1634:	add	fp, sp, #24
    1638:	sub	sp, sp, #8
    163c:	ldr	r7, [r0, #24]
    1640:	mvn	r5, #0
    1644:	cmp	r7, #0
    1648:	beq	174c <afpacket_daq_inject+0x11c>
    164c:	mov	r8, r3
    1650:	mov	r4, r0
    1654:	ldr	r0, [fp, #8]
    1658:	ldr	r1, [r1, #16]
    165c:	ldr	r3, [r7, #88]	; 0x58
    1660:	cmp	r3, r1
    1664:	beq	1678 <afpacket_daq_inject+0x48>
    1668:	ldr	r7, [r7]
    166c:	cmp	r7, #0
    1670:	bne	165c <afpacket_daq_inject+0x2c>
    1674:	b	174c <afpacket_daq_inject+0x11c>
    1678:	cmp	r0, #0
    167c:	bne	168c <afpacket_daq_inject+0x5c>
    1680:	ldr	r7, [r7, #92]	; 0x5c
    1684:	cmp	r7, #0
    1688:	beq	174c <afpacket_daq_inject+0x11c>
    168c:	ldr	r6, [r7, #80]	; 0x50
    1690:	ldr	r0, [r6, #4]
    1694:	ldr	r0, [r0]
    1698:	mov	r5, #0
    169c:	cmp	r0, #0
    16a0:	bne	174c <afpacket_daq_inject+0x11c>
    16a4:	ldr	r0, [r6, #4]
    16a8:	ldr	r1, [r7, #12]
    16ac:	add	r1, r1, #15
    16b0:	bic	r1, r1, #15
    16b4:	add	r0, r0, r1
    16b8:	mov	r1, r2
    16bc:	mov	r2, r8
    16c0:	bl	9c4 <memcpy@plt>
    16c4:	ldr	r0, [r6, #4]
    16c8:	str	r8, [r0, #4]
    16cc:	ldr	r0, [r6, #4]
    16d0:	mov	r1, #1
    16d4:	str	r1, [r0]
    16d8:	ldr	r0, [r6]
    16dc:	str	r0, [r7, #80]	; 0x50
    16e0:	ldr	r0, [r7, #4]
    16e4:	mov	r5, #0
    16e8:	mov	r1, #0
    16ec:	mov	r2, #0
    16f0:	mov	r3, #0
    16f4:	bl	af0 <send@plt>
    16f8:	cmn	r0, #1
    16fc:	ble	1714 <afpacket_daq_inject+0xe4>
    1700:	ldrd	r0, [r4, #80]	; 0x50
    1704:	adds	r0, r0, #1
    1708:	adc	r1, r1, #0
    170c:	strd	r0, [r4, #80]	; 0x50
    1710:	b	174c <afpacket_daq_inject+0x11c>
    1714:	bl	a84 <__errno_location@plt>
    1718:	mov	r5, r0
    171c:	ldr	r0, [r0]
    1720:	bl	a30 <strerror@plt>
    1724:	ldr	r1, [r5]
    1728:	stm	sp, {r0, r1}
    172c:	add	r0, r4, #148	; 0x94
    1730:	ldr	r2, [pc, #32]	; 1758 <afpacket_daq_inject+0x128>
    1734:	add	r2, pc, r2
    1738:	ldr	r3, [pc, #28]	; 175c <afpacket_daq_inject+0x12c>
    173c:	add	r3, pc, r3
    1740:	mov	r1, #256	; 0x100
    1744:	bl	a90 <snprintf@plt>
    1748:	mvn	r5, #0
    174c:	mov	r0, r5
    1750:	sub	sp, fp, #24
    1754:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1758:	.word	0x00001587
    175c:	.word	0x000015a1

00001760 <afpacket_daq_breakloop>:
    1760:	mov	r1, #1
    1764:	str	r1, [r0, #40]	; 0x28
    1768:	mov	r0, #0
    176c:	bx	lr

00001770 <afpacket_daq_stop>:
    1770:	push	{fp, lr}
    1774:	mov	fp, sp
    1778:	bl	1a68 <af_packet_close>
    177c:	mov	r0, #0
    1780:	pop	{fp, pc}

00001784 <afpacket_daq_shutdown>:
    1784:	push	{r4, sl, fp, lr}
    1788:	add	fp, sp, #8
    178c:	mov	r4, r0
    1790:	bl	1a68 <af_packet_close>
    1794:	ldr	r0, [r4]
    1798:	cmp	r0, #0
    179c:	beq	17a4 <afpacket_daq_shutdown+0x20>
    17a0:	bl	9b8 <free@plt>
    17a4:	ldr	r0, [r4, #4]
    17a8:	cmp	r0, #0
    17ac:	beq	17b4 <afpacket_daq_shutdown+0x30>
    17b0:	bl	9b8 <free@plt>
    17b4:	mov	r0, r4
    17b8:	pop	{r4, sl, fp, lr}
    17bc:	b	9b8 <free@plt>

000017c0 <afpacket_daq_check_status>:
    17c0:	ldr	r0, [r0, #144]	; 0x90
    17c4:	bx	lr

000017c8 <afpacket_daq_get_stats>:
    17c8:	push	{r4, r5, fp, lr}
    17cc:	add	fp, sp, #8
    17d0:	mov	r4, r1
    17d4:	mov	r5, r0
    17d8:	bl	1ba0 <update_hw_stats>
    17dc:	add	r1, r5, #48	; 0x30
    17e0:	mov	r0, r4
    17e4:	mov	r2, #96	; 0x60
    17e8:	bl	9c4 <memcpy@plt>
    17ec:	mov	r0, #0
    17f0:	pop	{r4, r5, fp, pc}

000017f4 <afpacket_daq_reset_stats>:
    17f4:	b	1e64 <reset_stats>

000017f8 <afpacket_daq_get_snaplen>:
    17f8:	ldr	r0, [r0, #8]
    17fc:	bx	lr

00001800 <afpacket_daq_get_capabilities>:
    1800:	movw	r0, #487	; 0x1e7
    1804:	bx	lr

00001808 <afpacket_daq_get_datalink_type>:
    1808:	mov	r0, #1
    180c:	bx	lr

00001810 <afpacket_daq_get_errbuf>:
    1810:	add	r0, r0, #148	; 0x94
    1814:	bx	lr

00001818 <afpacket_daq_set_errbuf>:
    1818:	cmp	r1, #0
    181c:	bxeq	lr
    1820:	mov	r3, r1
    1824:	add	r0, r0, #148	; 0x94
    1828:	ldr	r2, [pc, #8]	; 1838 <afpacket_daq_set_errbuf+0x20>
    182c:	add	r2, pc, r2
    1830:	mov	r1, #256	; 0x100
    1834:	b	a90 <snprintf@plt>
    1838:	.word	0x000010a8

0000183c <afpacket_daq_get_device_index>:
    183c:	push	{r4, r5, r6, sl, fp, lr}
    1840:	add	fp, sp, #16
    1844:	ldr	r6, [r0, #24]
    1848:	mvn	r4, #2
    184c:	cmp	r6, #0
    1850:	beq	1878 <afpacket_daq_get_device_index+0x3c>
    1854:	mov	r5, r1
    1858:	ldr	r1, [r6, #84]	; 0x54
    185c:	mov	r0, r5
    1860:	bl	97c <strcmp@plt>
    1864:	cmp	r0, #0
    1868:	beq	1880 <afpacket_daq_get_device_index+0x44>
    186c:	ldr	r6, [r6]
    1870:	cmp	r6, #0
    1874:	bne	1858 <afpacket_daq_get_device_index+0x1c>
    1878:	mov	r0, r4
    187c:	pop	{r4, r5, r6, sl, fp, pc}
    1880:	ldr	r4, [r6, #88]	; 0x58
    1884:	mov	r0, r4
    1888:	pop	{r4, r5, r6, sl, fp, pc}

0000188c <create_instance>:
    188c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1890:	add	fp, sp, #24
    1894:	sub	sp, sp, #40	; 0x28
    1898:	mov	r5, r2
    189c:	mov	r6, r1
    18a0:	mov	r7, r0
    18a4:	mov	r0, #1
    18a8:	mov	r1, #116	; 0x74
    18ac:	bl	964 <calloc@plt>
    18b0:	mov	r4, r0
    18b4:	cmp	r0, #0
    18b8:	beq	1958 <create_instance+0xcc>
    18bc:	mvn	r0, #0
    18c0:	str	r0, [r4, #16]
    18c4:	mov	r0, r7
    18c8:	bl	9d0 <strdup@plt>
    18cc:	str	r0, [r4, #84]	; 0x54
    18d0:	cmp	r0, #0
    18d4:	beq	1964 <create_instance+0xd8>
    18d8:	mov	r0, #3
    18dc:	bl	1ab4 <__bswap_16>
    18e0:	mov	r8, r0
    18e4:	mov	r0, #17
    18e8:	mov	r1, #3
    18ec:	mov	r2, r8
    18f0:	bl	ad8 <socket@plt>
    18f4:	str	r0, [r4, #4]
    18f8:	cmn	r0, #1
    18fc:	beq	1970 <create_instance+0xe4>
    1900:	vmov.i32	q8, #0	; 0x00000000
    1904:	add	r9, sp, #8
    1908:	mov	r0, r9
    190c:	vst1.64	{d16-d17}, [r0]!
    1910:	vst1.64	{d16-d17}, [r0]
    1914:	mov	r0, r9
    1918:	mov	r1, r7
    191c:	mov	r2, #16
    1920:	bl	ab4 <strncpy@plt>
    1924:	ldr	r0, [r4, #4]
    1928:	movw	r1, #35123	; 0x8933
    192c:	mov	r2, r9
    1930:	bl	9f4 <ioctl@plt>
    1934:	cmn	r0, #1
    1938:	beq	198c <create_instance+0x100>
    193c:	ldr	r0, [sp, #24]
    1940:	mov	r1, #17
    1944:	strh	r1, [r4, #96]	; 0x60
    1948:	strh	r8, [r4, #98]	; 0x62
    194c:	str	r0, [r4, #88]	; 0x58
    1950:	str	r0, [r4, #100]	; 0x64
    1954:	b	19bc <create_instance+0x130>
    1958:	ldr	r2, [pc, #104]	; 19c8 <create_instance+0x13c>
    195c:	add	r2, pc, r2
    1960:	b	199c <create_instance+0x110>
    1964:	ldr	r2, [pc, #100]	; 19d0 <create_instance+0x144>
    1968:	add	r2, pc, r2
    196c:	b	199c <create_instance+0x110>
    1970:	bl	a84 <__errno_location@plt>
    1974:	ldr	r0, [r0]
    1978:	bl	a30 <strerror@plt>
    197c:	str	r0, [sp]
    1980:	ldr	r2, [pc, #76]	; 19d4 <create_instance+0x148>
    1984:	add	r2, pc, r2
    1988:	b	199c <create_instance+0x110>
    198c:	ldr	r0, [r4, #84]	; 0x54
    1990:	str	r0, [sp]
    1994:	ldr	r2, [pc, #60]	; 19d8 <create_instance+0x14c>
    1998:	add	r2, pc, r2
    199c:	ldr	r3, [pc, #40]	; 19cc <create_instance+0x140>
    19a0:	add	r3, pc, r3
    19a4:	mov	r0, r6
    19a8:	mov	r1, r5
    19ac:	bl	a90 <snprintf@plt>
    19b0:	mov	r0, r4
    19b4:	bl	1abc <destroy_instance>
    19b8:	mov	r4, #0
    19bc:	mov	r0, r4
    19c0:	sub	sp, fp, #24
    19c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    19c8:	.word	0x00000dc2
    19cc:	.word	0x00000daf
    19d0:	.word	0x00000df7
    19d4:	.word	0x00000e0d
    19d8:	.word	0x00000e25

000019dc <create_bridge>:
    19dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    19e0:	add	fp, sp, #28
    19e4:	sub	sp, sp, #4
    19e8:	ldr	r5, [r0, #24]
    19ec:	mvn	r8, #2
    19f0:	cmp	r5, #0
    19f4:	beq	1a5c <create_bridge+0x80>
    19f8:	mov	sl, r2
    19fc:	mov	r6, r1
    1a00:	mov	r4, #0
    1a04:	mov	r9, #0
    1a08:	ldr	r7, [r5, #84]	; 0x54
    1a0c:	mov	r0, r7
    1a10:	mov	r1, r6
    1a14:	bl	97c <strcmp@plt>
    1a18:	cmp	r0, #0
    1a1c:	beq	1a38 <create_bridge+0x5c>
    1a20:	mov	r0, r7
    1a24:	mov	r1, sl
    1a28:	bl	97c <strcmp@plt>
    1a2c:	cmp	r0, #0
    1a30:	moveq	r4, r5
    1a34:	b	1a3c <create_bridge+0x60>
    1a38:	mov	r9, r5
    1a3c:	ldr	r5, [r5]
    1a40:	cmp	r5, #0
    1a44:	bne	1a08 <create_bridge+0x2c>
    1a48:	cmp	r9, #0
    1a4c:	cmpne	r4, #0
    1a50:	strne	r4, [r9, #92]	; 0x5c
    1a54:	strne	r9, [r4, #92]	; 0x5c
    1a58:	movne	r8, #0
    1a5c:	mov	r0, r8
    1a60:	sub	sp, fp, #28
    1a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00001a68 <af_packet_close>:
    1a68:	cmp	r0, #0
    1a6c:	bxeq	lr
    1a70:	push	{r4, sl, fp, lr}
    1a74:	add	fp, sp, #8
    1a78:	mov	r4, r0
    1a7c:	bl	1ba0 <update_hw_stats>
    1a80:	b	1a90 <af_packet_close+0x28>
    1a84:	ldr	r1, [r0]
    1a88:	str	r1, [r4, #24]
    1a8c:	bl	1abc <destroy_instance>
    1a90:	ldr	r0, [r4, #24]
    1a94:	cmp	r0, #0
    1a98:	bne	1a84 <af_packet_close+0x1c>
    1a9c:	add	r0, r4, #32
    1aa0:	bl	a00 <sfbpf_freecode@plt>
    1aa4:	mov	r0, #3
    1aa8:	str	r0, [r4, #144]	; 0x90
    1aac:	pop	{r4, sl, fp, lr}
    1ab0:	bx	lr

00001ab4 <__bswap_16>:
    1ab4:	rev16	r0, r0
    1ab8:	bx	lr

00001abc <destroy_instance>:
    1abc:	cmp	r0, #0
    1ac0:	bxeq	lr
    1ac4:	push	{r4, r5, r6, sl, fp, lr}
    1ac8:	add	fp, sp, #16
    1acc:	sub	sp, sp, #24
    1ad0:	mov	r4, r0
    1ad4:	ldr	r0, [r0, #4]
    1ad8:	cmn	r0, #1
    1adc:	beq	1b7c <destroy_instance+0xc0>
    1ae0:	ldr	r0, [r4, #44]	; 0x2c
    1ae4:	cmp	r0, #0
    1ae8:	beq	1af8 <destroy_instance+0x3c>
    1aec:	bl	9b8 <free@plt>
    1af0:	mov	r0, #0
    1af4:	str	r0, [r4, #44]	; 0x2c
    1af8:	ldr	r0, [r4, #76]	; 0x4c
    1afc:	cmp	r0, #0
    1b00:	beq	1b10 <destroy_instance+0x54>
    1b04:	bl	9b8 <free@plt>
    1b08:	mov	r0, #0
    1b0c:	str	r0, [r4, #76]	; 0x4c
    1b10:	ldr	r0, [r4, #16]
    1b14:	cmn	r0, #1
    1b18:	beq	1b34 <destroy_instance+0x78>
    1b1c:	ldr	r1, [r4, #36]	; 0x24
    1b20:	ldr	r2, [r4, #68]	; 0x44
    1b24:	add	r1, r2, r1
    1b28:	bl	ac0 <munmap@plt>
    1b2c:	mvn	r0, #0
    1b30:	str	r0, [r4, #16]
    1b34:	vmov.i32	q8, #0	; 0x00000000
    1b38:	add	r5, sp, #8
    1b3c:	vst1.64	{d16-d17}, [r5]
    1b40:	ldr	r0, [r4, #4]
    1b44:	mov	r6, #16
    1b48:	str	r6, [sp]
    1b4c:	movw	r1, #263	; 0x107
    1b50:	mov	r2, #5
    1b54:	mov	r3, r5
    1b58:	bl	994 <setsockopt@plt>
    1b5c:	ldr	r0, [r4, #4]
    1b60:	str	r6, [sp]
    1b64:	movw	r1, #263	; 0x107
    1b68:	mov	r2, #13
    1b6c:	mov	r3, r5
    1b70:	bl	994 <setsockopt@plt>
    1b74:	ldr	r0, [r4, #4]
    1b78:	bl	ae4 <close@plt>
    1b7c:	ldr	r0, [r4, #84]	; 0x54
    1b80:	cmp	r0, #0
    1b84:	beq	1b8c <destroy_instance+0xd0>
    1b88:	bl	9b8 <free@plt>
    1b8c:	mov	r0, r4
    1b90:	bl	9b8 <free@plt>
    1b94:	sub	sp, fp, #16
    1b98:	pop	{r4, r5, r6, sl, fp, lr}
    1b9c:	bx	lr

00001ba0 <update_hw_stats>:
    1ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ba4:	add	fp, sp, #28
    1ba8:	sub	sp, sp, #28
    1bac:	mov	r1, #8
    1bb0:	str	r1, [sp, #12]
    1bb4:	ldr	r1, [r0, #144]	; 0x90
    1bb8:	cmp	r1, #2
    1bbc:	bne	1c8c <update_hw_stats+0xec>
    1bc0:	ldr	r6, [r0, #24]
    1bc4:	cmp	r6, #0
    1bc8:	beq	1c8c <update_hw_stats+0xec>
    1bcc:	add	r7, r0, #56	; 0x38
    1bd0:	add	r8, r0, #48	; 0x30
    1bd4:	add	r4, sp, #16
    1bd8:	add	r9, sp, #12
    1bdc:	b	1c24 <update_hw_stats+0x84>
    1be0:	ldr	r0, [r6, #84]	; 0x54
    1be4:	str	r0, [sp, #8]
    1be8:	ldr	r0, [pc, #164]	; 1c94 <update_hw_stats+0xf4>
    1bec:	ldr	r0, [pc, r0]
    1bf0:	ldr	sl, [r0]
    1bf4:	bl	a84 <__errno_location@plt>
    1bf8:	ldr	r5, [r0]
    1bfc:	mov	r0, r5
    1c00:	bl	a30 <strerror@plt>
    1c04:	str	r0, [sp]
    1c08:	mov	r0, sl
    1c0c:	ldr	r1, [pc, #132]	; 1c98 <update_hw_stats+0xf8>
    1c10:	add	r1, pc, r1
    1c14:	ldr	r2, [sp, #8]
    1c18:	mov	r3, r5
    1c1c:	bl	a6c <fprintf@plt>
    1c20:	b	1c80 <update_hw_stats+0xe0>
    1c24:	ldr	r2, [sp, #12]
    1c28:	mov	r0, r4
    1c2c:	mov	r1, #0
    1c30:	bl	aa8 <memset@plt>
    1c34:	ldr	r0, [r6, #4]
    1c38:	str	r9, [sp]
    1c3c:	movw	r1, #263	; 0x107
    1c40:	mov	r2, #6
    1c44:	mov	r3, r4
    1c48:	bl	9e8 <getsockopt@plt>
    1c4c:	cmp	r0, #0
    1c50:	blt	1be0 <update_hw_stats+0x40>
    1c54:	ldrd	r0, [r8]
    1c58:	ldr	r2, [sp, #16]
    1c5c:	ldr	r3, [sp, #20]
    1c60:	sub	r2, r2, r3
    1c64:	adds	r0, r0, r2
    1c68:	adc	r1, r1, #0
    1c6c:	strd	r0, [r8]
    1c70:	ldrd	r0, [r7]
    1c74:	adds	r0, r0, r3
    1c78:	adc	r1, r1, #0
    1c7c:	strd	r0, [r7]
    1c80:	ldr	r6, [r6]
    1c84:	cmp	r6, #0
    1c88:	bne	1c24 <update_hw_stats+0x84>
    1c8c:	sub	sp, fp, #28
    1c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c94:	.word	0x000114a8
    1c98:	.word	0x00000bd4

00001c9c <start_instance>:
    1c9c:	push	{r4, r5, r6, r7, fp, lr}
    1ca0:	add	fp, sp, #16
    1ca4:	sub	sp, sp, #32
    1ca8:	mov	r6, r1
    1cac:	mov	r5, r0
    1cb0:	bl	1eec <bind_instance_interface>
    1cb4:	mvn	r4, #0
    1cb8:	cmp	r0, #0
    1cbc:	bne	1e40 <start_instance+0x1a4>
    1cc0:	vmov.i32	q8, #0	; 0x00000000
    1cc4:	add	r3, sp, #16
    1cc8:	vst1.64	{d16-d17}, [r3]
    1ccc:	ldr	r0, [r6, #88]	; 0x58
    1cd0:	mov	r1, #1
    1cd4:	strh	r1, [sp, #20]
    1cd8:	str	r0, [sp, #16]
    1cdc:	ldr	r0, [r6, #4]
    1ce0:	mov	r1, #16
    1ce4:	str	r1, [sp]
    1ce8:	movw	r1, #263	; 0x107
    1cec:	mov	r2, #1
    1cf0:	bl	994 <setsockopt@plt>
    1cf4:	cmn	r0, #1
    1cf8:	beq	1dc4 <start_instance+0x128>
    1cfc:	mov	r0, r6
    1d00:	bl	1fe4 <iface_get_arptype>
    1d04:	cmn	r0, #1
    1d08:	ble	1de4 <start_instance+0x148>
    1d0c:	cmp	r0, #1
    1d10:	bne	1e14 <start_instance+0x178>
    1d14:	mov	r0, r5
    1d18:	mov	r1, r6
    1d1c:	bl	2054 <determine_version>
    1d20:	cmp	r0, #0
    1d24:	bne	1e40 <start_instance+0x1a4>
    1d28:	add	r7, r6, #20
    1d2c:	mov	r0, r5
    1d30:	mov	r1, r6
    1d34:	mov	r2, r7
    1d38:	mov	r3, #5
    1d3c:	bl	21c0 <create_ring>
    1d40:	cmp	r0, #0
    1d44:	bne	1e40 <start_instance+0x1a4>
    1d48:	ldr	r0, [r6, #92]	; 0x5c
    1d4c:	cmp	r0, #0
    1d50:	beq	1d70 <start_instance+0xd4>
    1d54:	add	r2, r6, #52	; 0x34
    1d58:	mov	r0, r5
    1d5c:	mov	r1, r6
    1d60:	mov	r3, #13
    1d64:	bl	21c0 <create_ring>
    1d68:	cmp	r0, #0
    1d6c:	bne	1e40 <start_instance+0x1a4>
    1d70:	mov	r0, r5
    1d74:	mov	r1, r6
    1d78:	bl	22e8 <mmap_rings>
    1d7c:	cmp	r0, #0
    1d80:	bne	1e40 <start_instance+0x1a4>
    1d84:	mov	r0, r5
    1d88:	mov	r1, r6
    1d8c:	mov	r2, r7
    1d90:	bl	2388 <set_up_ring>
    1d94:	cmp	r0, #0
    1d98:	bne	1e40 <start_instance+0x1a4>
    1d9c:	ldr	r0, [r6, #92]	; 0x5c
    1da0:	cmp	r0, #0
    1da4:	beq	1e4c <start_instance+0x1b0>
    1da8:	add	r2, r6, #52	; 0x34
    1dac:	mov	r0, r5
    1db0:	mov	r1, r6
    1db4:	bl	2388 <set_up_ring>
    1db8:	cmp	r0, #0
    1dbc:	moveq	r4, #0
    1dc0:	b	1e40 <start_instance+0x1a4>
    1dc4:	bl	a84 <__errno_location@plt>
    1dc8:	ldr	r0, [r0]
    1dcc:	bl	a30 <strerror@plt>
    1dd0:	str	r0, [sp]
    1dd4:	add	r0, r5, #148	; 0x94
    1dd8:	ldr	r2, [pc, #116]	; 1e54 <start_instance+0x1b8>
    1ddc:	add	r2, pc, r2
    1de0:	b	1e30 <start_instance+0x194>
    1de4:	ldr	r7, [r6, #84]	; 0x54
    1de8:	bl	a84 <__errno_location@plt>
    1dec:	ldr	r6, [r0]
    1df0:	mov	r0, r6
    1df4:	bl	a30 <strerror@plt>
    1df8:	str	r7, [sp]
    1dfc:	str	r6, [sp, #4]
    1e00:	str	r0, [sp, #8]
    1e04:	add	r0, r5, #148	; 0x94
    1e08:	ldr	r2, [pc, #72]	; 1e58 <start_instance+0x1bc>
    1e0c:	add	r2, pc, r2
    1e10:	b	1e30 <start_instance+0x194>
    1e14:	ldr	r1, [r6, #84]	; 0x54
    1e18:	mov	r2, #1
    1e1c:	str	r1, [sp]
    1e20:	stmib	sp, {r0, r2}
    1e24:	add	r0, r5, #148	; 0x94
    1e28:	ldr	r2, [pc, #44]	; 1e5c <start_instance+0x1c0>
    1e2c:	add	r2, pc, r2
    1e30:	ldr	r3, [pc, #40]	; 1e60 <start_instance+0x1c4>
    1e34:	add	r3, pc, r3
    1e38:	mov	r1, #256	; 0x100
    1e3c:	bl	a90 <snprintf@plt>
    1e40:	mov	r0, r4
    1e44:	sub	sp, fp, #16
    1e48:	pop	{r4, r5, r6, r7, fp, pc}
    1e4c:	mov	r4, #0
    1e50:	b	1e40 <start_instance+0x1a4>
    1e54:	.word	0x00000aa1
    1e58:	.word	0x00000a93
    1e5c:	.word	0x00000aab
    1e60:	.word	0x00000a5c

00001e64 <reset_stats>:
    1e64:	push	{r4, r5, r6, sl, fp, lr}
    1e68:	add	fp, sp, #16
    1e6c:	sub	sp, sp, #16
    1e70:	mov	r1, #8
    1e74:	vmov.i32	q8, #0	; 0x00000000
    1e78:	str	r1, [sp, #4]
    1e7c:	add	r1, r0, #128	; 0x80
    1e80:	vst1.64	{d16-d17}, [r1]
    1e84:	add	r1, r0, #112	; 0x70
    1e88:	vst1.64	{d16-d17}, [r1]
    1e8c:	add	r1, r0, #96	; 0x60
    1e90:	vst1.64	{d16-d17}, [r1]
    1e94:	add	r1, r0, #80	; 0x50
    1e98:	vst1.64	{d16-d17}, [r1]
    1e9c:	add	r1, r0, #64	; 0x40
    1ea0:	vst1.64	{d16-d17}, [r1]
    1ea4:	add	r1, r0, #48	; 0x30
    1ea8:	vst1.64	{d16-d17}, [r1]
    1eac:	ldr	r5, [r0, #24]
    1eb0:	cmp	r5, #0
    1eb4:	beq	1ee4 <reset_stats+0x80>
    1eb8:	add	r6, sp, #4
    1ebc:	add	r4, sp, #8
    1ec0:	ldr	r0, [r5, #4]
    1ec4:	str	r6, [sp]
    1ec8:	movw	r1, #263	; 0x107
    1ecc:	mov	r2, #6
    1ed0:	mov	r3, r4
    1ed4:	bl	9e8 <getsockopt@plt>
    1ed8:	ldr	r5, [r5]
    1edc:	cmp	r5, #0
    1ee0:	bne	1ec0 <reset_stats+0x5c>
    1ee4:	sub	sp, fp, #16
    1ee8:	pop	{r4, r5, r6, sl, fp, pc}

00001eec <bind_instance_interface>:
    1eec:	push	{r4, r5, r6, sl, fp, lr}
    1ef0:	add	fp, sp, #16
    1ef4:	sub	sp, sp, #40	; 0x28
    1ef8:	mov	r6, r1
    1efc:	mov	r4, r0
    1f00:	mov	r5, #0
    1f04:	str	r5, [sp, #32]
    1f08:	str	r5, [sp, #28]
    1f0c:	str	r5, [sp, #24]
    1f10:	mov	r0, #4
    1f14:	str	r0, [sp, #8]
    1f18:	mov	r0, #17
    1f1c:	strh	r0, [sp, #16]
    1f20:	ldr	r0, [r1, #88]	; 0x58
    1f24:	str	r0, [sp, #20]
    1f28:	mov	r0, #3
    1f2c:	bl	1ab4 <__bswap_16>
    1f30:	strh	r0, [sp, #18]
    1f34:	ldr	r0, [r6, #4]
    1f38:	add	r1, sp, #16
    1f3c:	mov	r2, #20
    1f40:	bl	a9c <bind@plt>
    1f44:	cmn	r0, #1
    1f48:	beq	1f94 <bind_instance_interface+0xa8>
    1f4c:	ldr	r0, [r6, #4]
    1f50:	add	r1, sp, #8
    1f54:	str	r1, [sp]
    1f58:	add	r3, sp, #12
    1f5c:	mov	r1, #1
    1f60:	mov	r2, #4
    1f64:	bl	9e8 <getsockopt@plt>
    1f68:	ldr	r1, [sp, #12]
    1f6c:	orrs	r0, r1, r0
    1f70:	beq	1fcc <bind_instance_interface+0xe0>
    1f74:	bl	a84 <__errno_location@plt>
    1f78:	ldr	r0, [r0]
    1f7c:	bl	a30 <strerror@plt>
    1f80:	str	r0, [sp]
    1f84:	add	r0, r4, #148	; 0x94
    1f88:	ldr	r2, [pc, #76]	; 1fdc <bind_instance_interface+0xf0>
    1f8c:	add	r2, pc, r2
    1f90:	b	1fb8 <bind_instance_interface+0xcc>
    1f94:	ldr	r5, [r6, #84]	; 0x54
    1f98:	bl	a84 <__errno_location@plt>
    1f9c:	ldr	r0, [r0]
    1fa0:	bl	a30 <strerror@plt>
    1fa4:	str	r5, [sp]
    1fa8:	str	r0, [sp, #4]
    1fac:	add	r0, r4, #148	; 0x94
    1fb0:	ldr	r2, [pc, #32]	; 1fd8 <bind_instance_interface+0xec>
    1fb4:	add	r2, pc, r2
    1fb8:	ldr	r3, [pc, #32]	; 1fe0 <bind_instance_interface+0xf4>
    1fbc:	add	r3, pc, r3
    1fc0:	mov	r1, #256	; 0x100
    1fc4:	bl	a90 <snprintf@plt>
    1fc8:	mvn	r5, #0
    1fcc:	mov	r0, r5
    1fd0:	sub	sp, fp, #16
    1fd4:	pop	{r4, r5, r6, sl, fp, pc}
    1fd8:	.word	0x00000956
    1fdc:	.word	0x000009a8
    1fe0:	.word	0x00000960

00001fe4 <iface_get_arptype>:
    1fe4:	push	{r4, r5, fp, lr}
    1fe8:	add	fp, sp, #8
    1fec:	sub	sp, sp, #32
    1ff0:	mov	r4, r0
    1ff4:	vmov.i32	q8, #0	; 0x00000000
    1ff8:	mov	r5, sp
    1ffc:	mov	r0, r5
    2000:	vst1.64	{d16-d17}, [r0]!
    2004:	vst1.64	{d16-d17}, [r0]
    2008:	ldr	r1, [r4, #84]	; 0x54
    200c:	mov	r0, r5
    2010:	mov	r2, #16
    2014:	bl	ab4 <strncpy@plt>
    2018:	ldr	r0, [r4, #4]
    201c:	movw	r1, #35111	; 0x8927
    2020:	mov	r2, r5
    2024:	bl	9f4 <ioctl@plt>
    2028:	cmn	r0, #1
    202c:	ldrhne	r0, [sp, #16]
    2030:	subne	sp, fp, #8
    2034:	popne	{r4, r5, fp, pc}
    2038:	bl	a84 <__errno_location@plt>
    203c:	ldr	r1, [r0]
    2040:	mvn	r0, #0
    2044:	cmp	r1, #19
    2048:	mvneq	r0, #2
    204c:	sub	sp, fp, #8
    2050:	pop	{r4, r5, fp, pc}

00002054 <determine_version>:
    2054:	push	{r4, r5, r6, r7, fp, lr}
    2058:	add	fp, sp, #16
    205c:	sub	sp, sp, #16
    2060:	mov	r5, r1
    2064:	mov	r4, r0
    2068:	mov	r6, #4
    206c:	str	r6, [sp, #12]
    2070:	mov	r7, #1
    2074:	str	r7, [sp, #8]
    2078:	ldr	r0, [r1, #4]
    207c:	add	r1, sp, #12
    2080:	str	r1, [sp]
    2084:	add	r3, sp, #8
    2088:	movw	r1, #263	; 0x107
    208c:	mov	r2, #11
    2090:	bl	9e8 <getsockopt@plt>
    2094:	cmn	r0, #1
    2098:	ble	212c <determine_version+0xd8>
    209c:	ldr	r0, [sp, #8]
    20a0:	str	r0, [r5, #12]
    20a4:	str	r7, [sp, #8]
    20a8:	ldr	r0, [r5, #4]
    20ac:	str	r6, [sp]
    20b0:	add	r3, sp, #8
    20b4:	movw	r1, #263	; 0x107
    20b8:	mov	r2, #10
    20bc:	bl	994 <setsockopt@plt>
    20c0:	cmn	r0, #1
    20c4:	ble	214c <determine_version+0xf8>
    20c8:	mov	r0, #1
    20cc:	str	r0, [r5, #8]
    20d0:	mov	r1, #4
    20d4:	str	r1, [sp, #8]
    20d8:	ldr	r0, [r5, #4]
    20dc:	str	r1, [sp]
    20e0:	add	r3, sp, #8
    20e4:	movw	r1, #263	; 0x107
    20e8:	mov	r2, #12
    20ec:	bl	994 <setsockopt@plt>
    20f0:	cmn	r0, #1
    20f4:	ble	2170 <determine_version+0x11c>
    20f8:	ldr	r0, [r4, #20]
    20fc:	mov	r4, #0
    2100:	cmp	r0, #0
    2104:	beq	21a0 <determine_version+0x14c>
    2108:	ldr	r1, [r5, #8]
    210c:	ldr	r0, [pc, #164]	; 21b8 <determine_version+0x164>
    2110:	add	r0, pc, r0
    2114:	bl	9ac <printf@plt>
    2118:	ldr	r1, [r5, #12]
    211c:	ldr	r0, [pc, #152]	; 21bc <determine_version+0x168>
    2120:	add	r0, pc, r0
    2124:	bl	9ac <printf@plt>
    2128:	b	21a0 <determine_version+0x14c>
    212c:	bl	a84 <__errno_location@plt>
    2130:	ldr	r0, [r0]
    2134:	bl	a30 <strerror@plt>
    2138:	mov	r3, r0
    213c:	add	r0, r4, #148	; 0x94
    2140:	ldr	r2, [pc, #100]	; 21ac <determine_version+0x158>
    2144:	add	r2, pc, r2
    2148:	b	2168 <determine_version+0x114>
    214c:	bl	a84 <__errno_location@plt>
    2150:	ldr	r0, [r0]
    2154:	bl	a30 <strerror@plt>
    2158:	mov	r3, r0
    215c:	add	r0, r4, #148	; 0x94
    2160:	ldr	r2, [pc, #72]	; 21b0 <determine_version+0x15c>
    2164:	add	r2, pc, r2
    2168:	mov	r1, #256	; 0x100
    216c:	b	2198 <determine_version+0x144>
    2170:	ldr	r5, [sp, #8]
    2174:	bl	a84 <__errno_location@plt>
    2178:	ldr	r0, [r0]
    217c:	bl	a30 <strerror@plt>
    2180:	str	r0, [sp]
    2184:	add	r0, r4, #148	; 0x94
    2188:	ldr	r2, [pc, #36]	; 21b4 <determine_version+0x160>
    218c:	add	r2, pc, r2
    2190:	mov	r1, #256	; 0x100
    2194:	mov	r3, r5
    2198:	bl	a90 <snprintf@plt>
    219c:	mvn	r4, #0
    21a0:	mov	r0, r4
    21a4:	sub	sp, fp, #16
    21a8:	pop	{r4, r5, r6, r7, fp, pc}
    21ac:	.word	0x00000803
    21b0:	.word	0x00000812
    21b4:	.word	0x0000081c
    21b8:	.word	0x000008d0
    21bc:	.word	0x000008cd

000021c0 <create_ring>:
    21c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    21c4:	add	fp, sp, #28
    21c8:	sub	sp, sp, #4
    21cc:	mov	r8, r3
    21d0:	mov	r7, r2
    21d4:	mov	r6, r1
    21d8:	mov	r9, r0
    21dc:	mov	r5, #3
    21e0:	mov	sl, #16
    21e4:	mvn	r4, #0
    21e8:	ldr	r2, [r6, #12]
    21ec:	mov	r0, r9
    21f0:	mov	r1, r7
    21f4:	mov	r3, r5
    21f8:	bl	24bc <calculate_layout>
    21fc:	cmp	r0, #0
    2200:	bne	22c8 <create_ring+0x108>
    2204:	ldr	r0, [r6, #4]
    2208:	str	sl, [sp]
    220c:	movw	r1, #263	; 0x107
    2210:	mov	r2, r8
    2214:	mov	r3, r7
    2218:	bl	994 <setsockopt@plt>
    221c:	cmp	r0, #0
    2220:	beq	2274 <create_ring+0xb4>
    2224:	bl	a84 <__errno_location@plt>
    2228:	ldr	r0, [r0]
    222c:	cmp	r0, #12
    2230:	bne	22a4 <create_ring+0xe4>
    2234:	ldr	r0, [r9, #20]
    2238:	cmp	r0, #0
    223c:	beq	2254 <create_ring+0x94>
    2240:	ldr	r1, [r6, #84]	; 0x54
    2244:	ldr	r0, [pc, #136]	; 22d4 <create_ring+0x114>
    2248:	add	r0, pc, r0
    224c:	mov	r2, r5
    2250:	bl	9ac <printf@plt>
    2254:	sub	r5, r5, #1
    2258:	cmn	r5, #1
    225c:	bne	21e8 <create_ring+0x28>
    2260:	ldr	r3, [r6, #84]	; 0x54
    2264:	add	r0, r9, #148	; 0x94
    2268:	ldr	r2, [pc, #104]	; 22d8 <create_ring+0x118>
    226c:	add	r2, pc, r2
    2270:	b	22c0 <create_ring+0x100>
    2274:	ldm	r7, {r0, r1}
    2278:	mul	r2, r1, r0
    227c:	str	r2, [r7, #16]
    2280:	ldr	r0, [r9, #20]
    2284:	mov	r4, #0
    2288:	cmp	r0, #0
    228c:	beq	22c8 <create_ring+0x108>
    2290:	ldr	r0, [pc, #76]	; 22e4 <create_ring+0x124>
    2294:	add	r0, pc, r0
    2298:	mov	r1, r8
    229c:	bl	9ac <printf@plt>
    22a0:	b	22c8 <create_ring+0x108>
    22a4:	bl	a30 <strerror@plt>
    22a8:	str	r0, [sp]
    22ac:	add	r0, r9, #148	; 0x94
    22b0:	ldr	r2, [pc, #36]	; 22dc <create_ring+0x11c>
    22b4:	add	r2, pc, r2
    22b8:	ldr	r3, [pc, #32]	; 22e0 <create_ring+0x120>
    22bc:	add	r3, pc, r3
    22c0:	mov	r1, #256	; 0x100
    22c4:	bl	a90 <snprintf@plt>
    22c8:	mov	r0, r4
    22cc:	sub	sp, fp, #28
    22d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    22d4:	.word	0x000007b8
    22d8:	.word	0x0000084e
    22dc:	.word	0x00000794
    22e0:	.word	0x000007c1
    22e4:	.word	0x000007f5

000022e8 <mmap_rings>:
    22e8:	push	{r4, r5, r6, sl, fp, lr}
    22ec:	add	fp, sp, #16
    22f0:	sub	sp, sp, #8
    22f4:	mov	r6, r1
    22f8:	mov	r4, r0
    22fc:	ldr	r0, [r1, #4]
    2300:	ldr	r1, [r1, #36]	; 0x24
    2304:	ldr	r2, [r6, #68]	; 0x44
    2308:	mov	r5, #0
    230c:	stm	sp, {r0, r5}
    2310:	add	r1, r2, r1
    2314:	mov	r0, #0
    2318:	mov	r2, #3
    231c:	mov	r3, #1
    2320:	bl	a60 <mmap@plt>
    2324:	str	r0, [r6, #16]
    2328:	cmn	r0, #1
    232c:	beq	2344 <mmap_rings+0x5c>
    2330:	str	r0, [r6, #40]	; 0x28
    2334:	ldr	r1, [r6, #68]	; 0x44
    2338:	add	r0, r0, r1
    233c:	str	r0, [r6, #72]	; 0x48
    2340:	b	2374 <mmap_rings+0x8c>
    2344:	bl	a84 <__errno_location@plt>
    2348:	ldr	r0, [r0]
    234c:	bl	a30 <strerror@plt>
    2350:	str	r0, [sp]
    2354:	add	r0, r4, #148	; 0x94
    2358:	ldr	r2, [pc, #32]	; 2380 <mmap_rings+0x98>
    235c:	add	r2, pc, r2
    2360:	ldr	r3, [pc, #28]	; 2384 <mmap_rings+0x9c>
    2364:	add	r3, pc, r3
    2368:	mov	r1, #256	; 0x100
    236c:	bl	a90 <snprintf@plt>
    2370:	mvn	r5, #0
    2374:	mov	r0, r5
    2378:	sub	sp, fp, #16
    237c:	pop	{r4, r5, r6, sl, fp, pc}
    2380:	.word	0x000007f1
    2384:	.word	0x00000809

00002388 <set_up_ring>:
    2388:	push	{r4, r5, r6, r7, fp, lr}
    238c:	add	fp, sp, #16
    2390:	sub	sp, sp, #8
    2394:	mov	r4, r2
    2398:	mov	r6, r1
    239c:	mov	r5, r0
    23a0:	ldr	r0, [r2, #12]
    23a4:	mov	r1, #8
    23a8:	bl	964 <calloc@plt>
    23ac:	str	r0, [r4, #24]
    23b0:	cmp	r0, #0
    23b4:	beq	2484 <set_up_ring+0xfc>
    23b8:	ldr	r0, [r4, #4]
    23bc:	cmp	r0, #0
    23c0:	beq	2460 <set_up_ring+0xd8>
    23c4:	mov	lr, #0
    23c8:	mov	ip, #0
    23cc:	ldr	r0, [r4]
    23d0:	ldr	r1, [r4, #8]
    23d4:	cmp	r1, r0
    23d8:	bhi	2450 <set_up_ring+0xc8>
    23dc:	mul	r2, r0, ip
    23e0:	lsl	r6, lr, #3
    23e4:	mov	r3, #0
    23e8:	mov	r5, #8
    23ec:	add	r0, lr, r3
    23f0:	ldr	r7, [r4, #12]
    23f4:	cmp	r0, r7
    23f8:	bcs	244c <set_up_ring+0xc4>
    23fc:	ldr	r0, [r4, #20]
    2400:	ldr	r7, [r4, #24]
    2404:	add	r0, r0, r2
    2408:	mla	r0, r1, r3, r0
    240c:	add	r1, r7, r6
    2410:	add	r1, r1, r3, lsl #3
    2414:	str	r0, [r1, #4]
    2418:	ldr	r0, [r4, #24]
    241c:	add	r0, r0, r6
    2420:	add	r1, r0, r5
    2424:	str	r1, [r0, r3, lsl #3]
    2428:	add	r5, r5, #8
    242c:	add	r3, r3, #1
    2430:	ldr	r0, [r4]
    2434:	ldr	r1, [r4, #8]
    2438:	udiv	r0, r0, r1
    243c:	cmp	r3, r0
    2440:	bcc	23ec <set_up_ring+0x64>
    2444:	add	lr, lr, r3
    2448:	b	2450 <set_up_ring+0xc8>
    244c:	mov	lr, r0
    2450:	ldr	r0, [r4, #4]
    2454:	add	ip, ip, #1
    2458:	cmp	ip, r0
    245c:	bcc	23cc <set_up_ring+0x44>
    2460:	ldr	r0, [r4, #12]
    2464:	ldr	r1, [r4, #24]
    2468:	add	r0, r1, r0, lsl #3
    246c:	str	r1, [r0, #-8]
    2470:	ldr	r0, [r4, #24]
    2474:	str	r0, [r4, #28]
    2478:	mov	r0, #0
    247c:	sub	sp, fp, #16
    2480:	pop	{r4, r5, r6, r7, fp, pc}
    2484:	ldr	r0, [r6, #84]	; 0x54
    2488:	str	r0, [sp]
    248c:	add	r0, r5, #148	; 0x94
    2490:	ldr	r2, [pc, #28]	; 24b4 <set_up_ring+0x12c>
    2494:	add	r2, pc, r2
    2498:	ldr	r3, [pc, #24]	; 24b8 <set_up_ring+0x130>
    249c:	add	r3, pc, r3
    24a0:	mov	r1, #256	; 0x100
    24a4:	bl	a90 <snprintf@plt>
    24a8:	mvn	r0, #1
    24ac:	sub	sp, fp, #16
    24b0:	pop	{r4, r5, r6, r7, fp, pc}
    24b4:	.word	0x000006e4
    24b8:	.word	0x00000716

000024bc <calculate_layout>:
    24bc:	push	{r4, r5, r6, r7, fp, lr}
    24c0:	add	fp, sp, #16
    24c4:	mov	r5, r3
    24c8:	mov	r4, r1
    24cc:	mov	r6, r0
    24d0:	ldr	r0, [r0, #8]
    24d4:	add	r1, r2, #15
    24d8:	bic	r1, r1, #15
    24dc:	add	r1, r1, #49	; 0x31
    24e0:	orr	r1, r1, #5
    24e4:	add	r0, r1, r0
    24e8:	bic	r7, r0, #15
    24ec:	str	r7, [r4, #8]
    24f0:	bl	a78 <getpagesize@plt>
    24f4:	lsl	r0, r0, r5
    24f8:	mov	r1, r0
    24fc:	lsl	r0, r0, #1
    2500:	cmp	r1, r7
    2504:	bcc	24f8 <calculate_layout+0x3c>
    2508:	str	r1, [r4]
    250c:	udiv	r0, r1, r7
    2510:	ldr	r1, [r6, #16]
    2514:	udiv	r1, r1, r7
    2518:	udiv	r1, r1, r0
    251c:	str	r1, [r4, #4]
    2520:	mul	r0, r1, r0
    2524:	str	r0, [r4, #12]
    2528:	ldr	r0, [r6, #20]
    252c:	cmp	r0, #0
    2530:	beq	2584 <calculate_layout+0xc8>
    2534:	ldr	r0, [pc, #80]	; 258c <calculate_layout+0xd0>
    2538:	add	r0, pc, r0
    253c:	bl	a18 <puts@plt>
    2540:	ldr	r1, [r4, #8]
    2544:	ldr	r0, [pc, #68]	; 2590 <calculate_layout+0xd4>
    2548:	add	r0, pc, r0
    254c:	bl	9ac <printf@plt>
    2550:	ldr	r1, [r4, #12]
    2554:	ldr	r0, [pc, #56]	; 2594 <calculate_layout+0xd8>
    2558:	add	r0, pc, r0
    255c:	bl	9ac <printf@plt>
    2560:	ldr	r1, [r4]
    2564:	ldr	r0, [pc, #44]	; 2598 <calculate_layout+0xdc>
    2568:	add	r0, pc, r0
    256c:	mov	r2, r5
    2570:	bl	9ac <printf@plt>
    2574:	ldr	r1, [r4, #4]
    2578:	ldr	r0, [pc, #28]	; 259c <calculate_layout+0xe0>
    257c:	add	r0, pc, r0
    2580:	bl	9ac <printf@plt>
    2584:	mov	r0, #0
    2588:	pop	{r4, r5, r6, r7, fp, pc}
    258c:	.word	0x000007c0
    2590:	.word	0x000005b2
    2594:	.word	0x000005b4
    2598:	.word	0x000005b6
    259c:	.word	0x000005bf

Disassembly of section .fini:

000025a0 <_fini>:
    25a0:	push	{r3, lr}
    25a4:	pop	{r3, pc}
