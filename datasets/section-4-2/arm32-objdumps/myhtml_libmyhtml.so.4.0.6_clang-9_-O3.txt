
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

00010d70 <.init>:
   10d70:	push	{r3, lr}
   10d74:	bl	11cc0 <mythread_init@plt+0x18>
   10d78:	pop	{r3, pc}

Disassembly of section .plt:

00010d7c <pthread_mutex_unlock@plt-0x14>:
   10d7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d80:	ldr	lr, [pc, #4]	; 10d8c <pthread_mutex_unlock@plt-0x4>
   10d84:	add	lr, pc, lr
   10d88:	ldr	pc, [lr, #8]!
   10d8c:	andseq	ip, r0, r4, ror r2

00010d90 <pthread_mutex_unlock@plt>:
   10d90:	add	ip, pc, #1048576	; 0x100000
   10d94:	add	ip, ip, #12, 20	; 0xc000
   10d98:	ldr	pc, [ip, #628]!	; 0x274

00010d9c <mycore_realloc@plt>:
   10d9c:	add	ip, pc, #1048576	; 0x100000
   10da0:	add	ip, ip, #12, 20	; 0xc000
   10da4:	ldr	pc, [ip, #620]!	; 0x26c

00010da8 <calloc@plt>:
   10da8:	add	ip, pc, #1048576	; 0x100000
   10dac:	add	ip, ip, #12, 20	; 0xc000
   10db0:	ldr	pc, [ip, #612]!	; 0x264

00010db4 <mycore_strcmp@plt>:
   10db4:	add	ip, pc, #1048576	; 0x100000
   10db8:	add	ip, ip, #12, 20	; 0xc000
   10dbc:	ldr	pc, [ip, #604]!	; 0x25c

00010dc0 <myhtml_tree_node_insert_root@plt>:
   10dc0:	add	ip, pc, #1048576	; 0x100000
   10dc4:	add	ip, ip, #12, 20	; 0xc000
   10dc8:	ldr	pc, [ip, #596]!	; 0x254

00010dcc <mythread_queue_list_entry_delete@plt>:
   10dcc:	add	ip, pc, #1048576	; 0x100000
   10dd0:	add	ip, ip, #12, 20	; 0xc000
   10dd4:	ldr	pc, [ip, #588]!	; 0x24c

00010dd8 <myencoding_string_append_chunk@plt>:
   10dd8:	add	ip, pc, #1048576	; 0x100000
   10ddc:	add	ip, ip, #12, 20	; 0xc000
   10de0:	ldr	pc, [ip, #580]!	; 0x244

00010de4 <myhtml_token_release_and_check_doctype_attributes@plt>:
   10de4:	add	ip, pc, #1048576	; 0x100000
   10de8:	add	ip, ip, #12, 20	; 0xc000
   10dec:	ldr	pc, [ip, #572]!	; 0x23c

00010df0 <myencoding_detect_unicode@plt>:
   10df0:	add	ip, pc, #1048576	; 0x100000
   10df4:	add	ip, ip, #12, 20	; 0xc000
   10df8:	ldr	pc, [ip, #564]!	; 0x234

00010dfc <myhtml_tree_element_in_scope_by_node@plt>:
   10dfc:	add	ip, pc, #1048576	; 0x100000
   10e00:	add	ip, ip, #12, 20	; 0xc000
   10e04:	ldr	pc, [ip, #556]!	; 0x22c

00010e08 <mythread_nanosleep_clean@plt>:
   10e08:	add	ip, pc, #1048576	; 0x100000
   10e0c:	add	ip, ip, #12, 20	; 0xc000
   10e10:	ldr	pc, [ip, #548]!	; 0x224

00010e14 <myhtml_tree_node_insert_html_element@plt>:
   10e14:	add	ip, pc, #1048576	; 0x100000
   10e18:	add	ip, ip, #12, 20	; 0xc000
   10e1c:	ldr	pc, [ip, #540]!	; 0x21c

00010e20 <mcobject_async_init@plt>:
   10e20:	add	ip, pc, #1048576	; 0x100000
   10e24:	add	ip, ip, #12, 20	; 0xc000
   10e28:	ldr	pc, [ip, #532]!	; 0x214

00010e2c <myhtml_tokenizer_fragment_init@plt>:
   10e2c:	add	ip, pc, #1048576	; 0x100000
   10e30:	add	ip, ip, #12, 20	; 0xc000
   10e34:	ldr	pc, [ip, #524]!	; 0x20c

00010e38 <mythread_nanosleep_create@plt>:
   10e38:	add	ip, pc, #1048576	; 0x100000
   10e3c:	add	ip, ip, #12, 20	; 0xc000
   10e40:	ldr	pc, [ip, #516]!	; 0x204

00010e44 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
   10e44:	add	ip, pc, #1048576	; 0x100000
   10e48:	add	ip, ip, #12, 20	; 0xc000
   10e4c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e50 <myhtml_tokenizer_state_init@plt>:
   10e50:	add	ip, pc, #1048576	; 0x100000
   10e54:	add	ip, ip, #12, 20	; 0xc000
   10e58:	ldr	pc, [ip, #500]!	; 0x1f4

00010e5c <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
   10e5c:	add	ip, pc, #1048576	; 0x100000
   10e60:	add	ip, ip, #12, 20	; 0xc000
   10e64:	ldr	pc, [ip, #492]!	; 0x1ec

00010e68 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
   10e68:	add	ip, pc, #1048576	; 0x100000
   10e6c:	add	ip, ip, #12, 20	; 0xc000
   10e70:	ldr	pc, [ip, #484]!	; 0x1e4

00010e74 <myhtml_tree_wait_for_last_done_token@plt>:
   10e74:	add	ip, pc, #1048576	; 0x100000
   10e78:	add	ip, ip, #12, 20	; 0xc000
   10e7c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e80 <mythread_queue_get_prev_node@plt>:
   10e80:	add	ip, pc, #1048576	; 0x100000
   10e84:	add	ip, ip, #12, 20	; 0xc000
   10e88:	ldr	pc, [ip, #468]!	; 0x1d4

00010e8c <setbuf@plt>:
   10e8c:	add	ip, pc, #1048576	; 0x100000
   10e90:	add	ip, ip, #12, 20	; 0xc000
   10e94:	ldr	pc, [ip, #460]!	; 0x1cc

00010e98 <myhtml_stream_buffer_destroy@plt>:
   10e98:	add	ip, pc, #1048576	; 0x100000
   10e9c:	add	ip, ip, #12, 20	; 0xc000
   10ea0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ea4 <myhtml_token_attr_match_case@plt>:
   10ea4:	add	ip, pc, #1048576	; 0x100000
   10ea8:	add	ip, ip, #12, 20	; 0xc000
   10eac:	ldr	pc, [ip, #444]!	; 0x1bc

00010eb0 <__cxa_finalize@plt>:
   10eb0:	add	ip, pc, #1048576	; 0x100000
   10eb4:	add	ip, ip, #12, 20	; 0xc000
   10eb8:	ldr	pc, [ip, #436]!	; 0x1b4

00010ebc <mcobject_async_create@plt>:
   10ebc:	add	ip, pc, #1048576	; 0x100000
   10ec0:	add	ip, ip, #12, 20	; 0xc000
   10ec4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ec8 <mythread_queue_clean@plt>:
   10ec8:	add	ip, pc, #1048576	; 0x100000
   10ecc:	add	ip, ip, #12, 20	; 0xc000
   10ed0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ed4 <mcsync_mutex_destroy@plt>:
   10ed4:	add	ip, pc, #1048576	; 0x100000
   10ed8:	add	ip, ip, #12, 20	; 0xc000
   10edc:	ldr	pc, [ip, #412]!	; 0x19c

00010ee0 <myhtml_parser_worker@plt>:
   10ee0:	add	ip, pc, #1048576	; 0x100000
   10ee4:	add	ip, ip, #12, 20	; 0xc000
   10ee8:	ldr	pc, [ip, #404]!	; 0x194

00010eec <mythread_thread_create@plt>:
   10eec:	add	ip, pc, #1048576	; 0x100000
   10ef0:	add	ip, ip, #12, 20	; 0xc000
   10ef4:	ldr	pc, [ip, #396]!	; 0x18c

00010ef8 <mcsync_create@plt>:
   10ef8:	add	ip, pc, #1048576	; 0x100000
   10efc:	add	ip, ip, #12, 20	; 0xc000
   10f00:	ldr	pc, [ip, #388]!	; 0x184

00010f04 <fopen@plt>:
   10f04:	add	ip, pc, #1048576	; 0x100000
   10f08:	add	ip, ip, #12, 20	; 0xc000
   10f0c:	ldr	pc, [ip, #380]!	; 0x17c

00010f10 <mcobject_destroy@plt>:
   10f10:	add	ip, pc, #1048576	; 0x100000
   10f14:	add	ip, ip, #12, 20	; 0xc000
   10f18:	ldr	pc, [ip, #372]!	; 0x174

00010f1c <pthread_attr_destroy@plt>:
   10f1c:	add	ip, pc, #1048576	; 0x100000
   10f20:	add	ip, ip, #12, 20	; 0xc000
   10f24:	ldr	pc, [ip, #364]!	; 0x16c

00010f28 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
   10f28:	add	ip, pc, #1048576	; 0x100000
   10f2c:	add	ip, ip, #12, 20	; 0xc000
   10f30:	ldr	pc, [ip, #356]!	; 0x164

00010f34 <pthread_mutex_destroy@plt>:
   10f34:	add	ip, pc, #1048576	; 0x100000
   10f38:	add	ip, ip, #12, 20	; 0xc000
   10f3c:	ldr	pc, [ip, #348]!	; 0x15c

00010f40 <fflush@plt>:
   10f40:	add	ip, pc, #1048576	; 0x100000
   10f44:	add	ip, ip, #12, 20	; 0xc000
   10f48:	ldr	pc, [ip, #340]!	; 0x154

00010f4c <mythread_create@plt>:
   10f4c:	add	ip, pc, #1048576	; 0x100000
   10f50:	add	ip, ip, #12, 20	; 0xc000
   10f54:	ldr	pc, [ip, #332]!	; 0x14c

00010f58 <myhtml_insertion_mode_in_foreign_content@plt>:
   10f58:	add	ip, pc, #1048576	; 0x100000
   10f5c:	add	ip, ip, #12, 20	; 0xc000
   10f60:	ldr	pc, [ip, #324]!	; 0x144

00010f64 <myhtml_tree_generate_all_implied_end_tags@plt>:
   10f64:	add	ip, pc, #1048576	; 0x100000
   10f68:	add	ip, ip, #12, 20	; 0xc000
   10f6c:	ldr	pc, [ip, #316]!	; 0x13c

00010f70 <myencoding_string_append_lowercase_ascii@plt>:
   10f70:	add	ip, pc, #1048576	; 0x100000
   10f74:	add	ip, ip, #12, 20	; 0xc000
   10f78:	ldr	pc, [ip, #308]!	; 0x134

00010f7c <myhread_increase_id_by_entry_id@plt>:
   10f7c:	add	ip, pc, #1048576	; 0x100000
   10f80:	add	ip, ip, #12, 20	; 0xc000
   10f84:	ldr	pc, [ip, #300]!	; 0x12c

00010f88 <myhtml_tree_incomming_buffer_make_data@plt>:
   10f88:	add	ip, pc, #1048576	; 0x100000
   10f8c:	add	ip, ip, #12, 20	; 0xc000
   10f90:	ldr	pc, [ip, #292]!	; 0x124

00010f94 <memmove@plt>:
   10f94:	add	ip, pc, #1048576	; 0x100000
   10f98:	add	ip, ip, #12, 20	; 0xc000
   10f9c:	ldr	pc, [ip, #284]!	; 0x11c

00010fa0 <mythread_thread_attr_init@plt>:
   10fa0:	add	ip, pc, #1048576	; 0x100000
   10fa4:	add	ip, ip, #12, 20	; 0xc000
   10fa8:	ldr	pc, [ip, #276]!	; 0x114

00010fac <myhtml_rules_tree_dispatcher@plt>:
   10fac:	add	ip, pc, #1048576	; 0x100000
   10fb0:	add	ip, ip, #12, 20	; 0xc000
   10fb4:	ldr	pc, [ip, #268]!	; 0x10c

00010fb8 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
   10fb8:	add	ip, pc, #1048576	; 0x100000
   10fbc:	add	ip, ip, #12, 20	; 0xc000
   10fc0:	ldr	pc, [ip, #260]!	; 0x104

00010fc4 <free@plt>:
   10fc4:	add	ip, pc, #1048576	; 0x100000
   10fc8:	add	ip, ip, #12, 20	; 0xc000
   10fcc:	ldr	pc, [ip, #252]!	; 0xfc

00010fd0 <mythread_function_see_opt@plt>:
   10fd0:	add	ip, pc, #1048576	; 0x100000
   10fd4:	add	ip, ip, #12, 20	; 0xc000
   10fd8:	ldr	pc, [ip, #244]!	; 0xf4

00010fdc <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
   10fdc:	add	ip, pc, #1048576	; 0x100000
   10fe0:	add	ip, ip, #12, 20	; 0xc000
   10fe4:	ldr	pc, [ip, #236]!	; 0xec

00010fe8 <mcsync_mutex_unlock@plt>:
   10fe8:	add	ip, pc, #1048576	; 0x100000
   10fec:	add	ip, ip, #12, 20	; 0xc000
   10ff0:	ldr	pc, [ip, #228]!	; 0xe4

00010ff4 <pthread_mutex_lock@plt>:
   10ff4:	add	ip, pc, #1048576	; 0x100000
   10ff8:	add	ip, ip, #12, 20	; 0xc000
   10ffc:	ldr	pc, [ip, #220]!	; 0xdc

00011000 <mycore_calloc@plt>:
   11000:	add	ip, pc, #1048576	; 0x100000
   11004:	add	ip, ip, #12, 20	; 0xc000
   11008:	ldr	pc, [ip, #212]!	; 0xd4

0001100c <nanosleep@plt>:
   1100c:	add	ip, pc, #1048576	; 0x100000
   11010:	add	ip, ip, #12, 20	; 0xc000
   11014:	ldr	pc, [ip, #204]!	; 0xcc

00011018 <myhtml_token_node_clone@plt>:
   11018:	add	ip, pc, #1048576	; 0x100000
   1101c:	add	ip, ip, #12, 20	; 0xc000
   11020:	ldr	pc, [ip, #196]!	; 0xc4

00011024 <ferror@plt>:
   11024:	add	ip, pc, #1048576	; 0x100000
   11028:	add	ip, ip, #12, 20	; 0xc000
   1102c:	ldr	pc, [ip, #188]!	; 0xbc

00011030 <memcpy@plt>:
   11030:	add	ip, pc, #1048576	; 0x100000
   11034:	add	ip, ip, #12, 20	; 0xc000
   11038:	ldr	pc, [ip, #180]!	; 0xb4

0001103c <myhtml_token_adjust_mathml_attributes@plt>:
   1103c:	add	ip, pc, #1048576	; 0x100000
   11040:	add	ip, ip, #12, 20	; 0xc000
   11044:	ldr	pc, [ip, #172]!	; 0xac

00011048 <mcobject_free@plt>:
   11048:	add	ip, pc, #1048576	; 0x100000
   1104c:	add	ip, ip, #12, 20	; 0xc000
   11050:	ldr	pc, [ip, #164]!	; 0xa4

00011054 <myhtml_tree_node_insert_text@plt>:
   11054:	add	ip, pc, #1048576	; 0x100000
   11058:	add	ip, ip, #12, 20	; 0xc000
   1105c:	ldr	pc, [ip, #156]!	; 0x9c

00011060 <myhtml_tag_set_category@plt>:
   11060:	add	ip, pc, #1048576	; 0x100000
   11064:	add	ip, ip, #12, 20	; 0xc000
   11068:	ldr	pc, [ip, #148]!	; 0x94

0001106c <mcsync_spin_destroy@plt>:
   1106c:	add	ip, pc, #1048576	; 0x100000
   11070:	add	ip, ip, #12, 20	; 0xc000
   11074:	ldr	pc, [ip, #140]!	; 0x8c

00011078 <myhtml_tree_template_insertion_append@plt>:
   11078:	add	ip, pc, #1048576	; 0x100000
   1107c:	add	ip, ip, #12, 20	; 0xc000
   11080:	ldr	pc, [ip, #132]!	; 0x84

00011084 <mchar_async_realloc@plt>:
   11084:	add	ip, pc, #1048576	; 0x100000
   11088:	add	ip, ip, #12, 20	; 0xc000
   1108c:	ldr	pc, [ip, #124]!	; 0x7c

00011090 <pthread_mutex_init@plt>:
   11090:	add	ip, pc, #1048576	; 0x100000
   11094:	add	ip, ip, #12, 20	; 0xc000
   11098:	ldr	pc, [ip, #116]!	; 0x74

0001109c <myhtml_tokenizer_state_bogus_comment@plt>:
   1109c:	add	ip, pc, #1048576	; 0x100000
   110a0:	add	ip, ip, #12, 20	; 0xc000
   110a4:	ldr	pc, [ip, #108]!	; 0x6c

000110a8 <myhtml_tree_node_create@plt>:
   110a8:	add	ip, pc, #1048576	; 0x100000
   110ac:	add	ip, ip, #12, 20	; 0xc000
   110b0:	ldr	pc, [ip, #100]!	; 0x64

000110b4 <myhtml_tree_node_delete_recursive@plt>:
   110b4:	add	ip, pc, #1048576	; 0x100000
   110b8:	add	ip, ip, #12, 20	; 0xc000
   110bc:	ldr	pc, [ip, #92]!	; 0x5c

000110c0 <myhtml_tag_static_get_by_id@plt>:
   110c0:	add	ip, pc, #1048576	; 0x100000
   110c4:	add	ip, ip, #12, 20	; 0xc000
   110c8:	ldr	pc, [ip, #84]!	; 0x54

000110cc <myhtml_tag_add@plt>:
   110cc:	add	ip, pc, #1048576	; 0x100000
   110d0:	add	ip, ip, #12, 20	; 0xc000
   110d4:	ldr	pc, [ip, #76]!	; 0x4c

000110d8 <mcobject_create@plt>:
   110d8:	add	ip, pc, #1048576	; 0x100000
   110dc:	add	ip, ip, #12, 20	; 0xc000
   110e0:	ldr	pc, [ip, #68]!	; 0x44

000110e4 <myhtml_queue_add@plt>:
   110e4:	add	ip, pc, #1048576	; 0x100000
   110e8:	add	ip, ip, #12, 20	; 0xc000
   110ec:	ldr	pc, [ip, #60]!	; 0x3c

000110f0 <pthread_mutex_trylock@plt>:
   110f0:	add	ip, pc, #1048576	; 0x100000
   110f4:	add	ip, ip, #12, 20	; 0xc000
   110f8:	ldr	pc, [ip, #52]!	; 0x34

000110fc <myhtml_tree_is_mathml_integration_point@plt>:
   110fc:	add	ip, pc, #1048576	; 0x100000
   11100:	add	ip, ip, #12, 20	; 0xc000
   11104:	ldr	pc, [ip, #44]!	; 0x2c

00011108 <mcobject_async_free@plt>:
   11108:	add	ip, pc, #1048576	; 0x100000
   1110c:	add	ip, ip, #12, 20	; 0xc000
   11110:	ldr	pc, [ip, #36]!	; 0x24

00011114 <myhtml_insertion_mode_in_head@plt>:
   11114:	add	ip, pc, #1048576	; 0x100000
   11118:	add	ip, ip, #12, 20	; 0xc000
   1111c:	ldr	pc, [ip, #28]!

00011120 <ftell@plt>:
   11120:	add	ip, pc, #1048576	; 0x100000
   11124:	add	ip, ip, #12, 20	; 0xc000
   11128:	ldr	pc, [ip, #20]!

0001112c <mycore_incoming_buffer_add@plt>:
   1112c:	add	ip, pc, #1048576	; 0x100000
   11130:	add	ip, ip, #12, 20	; 0xc000
   11134:	ldr	pc, [ip, #12]!

00011138 <mythread_nanosleep_sleep@plt>:
   11138:	add	ip, pc, #1048576	; 0x100000
   1113c:	add	ip, ip, #12, 20	; 0xc000
   11140:	ldr	pc, [ip, #4]!

00011144 <mctree_destroy@plt>:
   11144:	add	ip, pc, #1048576	; 0x100000
   11148:	add	ip, ip, #45056	; 0xb000
   1114c:	ldr	pc, [ip, #4092]!	; 0xffc

00011150 <myhtml_tokenizer_chunk@plt>:
   11150:	add	ip, pc, #1048576	; 0x100000
   11154:	add	ip, ip, #45056	; 0xb000
   11158:	ldr	pc, [ip, #4084]!	; 0xff4

0001115c <myhtml_tree_active_formatting_append@plt>:
   1115c:	add	ip, pc, #1048576	; 0x100000
   11160:	add	ip, ip, #45056	; 0xb000
   11164:	ldr	pc, [ip, #4076]!	; 0xfec

00011168 <mythread_suspend@plt>:
   11168:	add	ip, pc, #1048576	; 0x100000
   1116c:	add	ip, ip, #45056	; 0xb000
   11170:	ldr	pc, [ip, #4068]!	; 0xfe4

00011174 <myhtml_tokenizer_state_destroy@plt>:
   11174:	add	ip, pc, #1048576	; 0x100000
   11178:	add	ip, ip, #45056	; 0xb000
   1117c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011180 <mycore_incoming_buffer_find_by_position@plt>:
   11180:	add	ip, pc, #1048576	; 0x100000
   11184:	add	ip, ip, #45056	; 0xb000
   11188:	ldr	pc, [ip, #4052]!	; 0xfd4

0001118c <mythread_queue_list_destroy@plt>:
   1118c:	add	ip, pc, #1048576	; 0x100000
   11190:	add	ip, ip, #45056	; 0xb000
   11194:	ldr	pc, [ip, #4044]!	; 0xfcc

00011198 <myhtml_tree_open_elements_pop_until_by_node@plt>:
   11198:	add	ip, pc, #1048576	; 0x100000
   1119c:	add	ip, ip, #45056	; 0xb000
   111a0:	ldr	pc, [ip, #4036]!	; 0xfc4

000111a4 <myhtml_tokenizer_begin@plt>:
   111a4:	add	ip, pc, #1048576	; 0x100000
   111a8:	add	ip, ip, #45056	; 0xb000
   111ac:	ldr	pc, [ip, #4028]!	; 0xfbc

000111b0 <mchar_async_create@plt>:
   111b0:	add	ip, pc, #1048576	; 0x100000
   111b4:	add	ip, ip, #45056	; 0xb000
   111b8:	ldr	pc, [ip, #4020]!	; 0xfb4

000111bc <mycore_string_copy@plt>:
   111bc:	add	ip, pc, #1048576	; 0x100000
   111c0:	add	ip, ip, #45056	; 0xb000
   111c4:	ldr	pc, [ip, #4012]!	; 0xfac

000111c8 <mythread_queue_list_entry_push@plt>:
   111c8:	add	ip, pc, #1048576	; 0x100000
   111cc:	add	ip, ip, #45056	; 0xb000
   111d0:	ldr	pc, [ip, #4004]!	; 0xfa4

000111d4 <mythread_queue_get_current_node@plt>:
   111d4:	add	ip, pc, #1048576	; 0x100000
   111d8:	add	ip, ip, #45056	; 0xb000
   111dc:	ldr	pc, [ip, #3996]!	; 0xf9c

000111e0 <myhtml_tree_open_elements_pop@plt>:
   111e0:	add	ip, pc, #1048576	; 0x100000
   111e4:	add	ip, ip, #45056	; 0xb000
   111e8:	ldr	pc, [ip, #3988]!	; 0xf94

000111ec <mcsync_destroy@plt>:
   111ec:	add	ip, pc, #1048576	; 0x100000
   111f0:	add	ip, ip, #45056	; 0xb000
   111f4:	ldr	pc, [ip, #3980]!	; 0xf8c

000111f8 <myencoding_result_clean@plt>:
   111f8:	add	ip, pc, #1048576	; 0x100000
   111fc:	add	ip, ip, #45056	; 0xb000
   11200:	ldr	pc, [ip, #3972]!	; 0xf84

00011204 <myhtml_string_append_with_preprocessing@plt>:
   11204:	add	ip, pc, #1048576	; 0x100000
   11208:	add	ip, ip, #45056	; 0xb000
   1120c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011210 <myhtml_token_adjust_svg_attributes@plt>:
   11210:	add	ip, pc, #1048576	; 0x100000
   11214:	add	ip, ip, #45056	; 0xb000
   11218:	ldr	pc, [ip, #3956]!	; 0xf74

0001121c <realloc@plt>:
   1121c:	add	ip, pc, #1048576	; 0x100000
   11220:	add	ip, ip, #45056	; 0xb000
   11224:	ldr	pc, [ip, #3948]!	; 0xf6c

00011228 <myhtml_tree_is_html_integration_point@plt>:
   11228:	add	ip, pc, #1048576	; 0x100000
   1122c:	add	ip, ip, #45056	; 0xb000
   11230:	ldr	pc, [ip, #3940]!	; 0xf64

00011234 <myhtml_tokenizer_calc_current_namespace@plt>:
   11234:	add	ip, pc, #1048576	; 0x100000
   11238:	add	ip, ip, #45056	; 0xb000
   1123c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011240 <myhtml_tree_open_elements_remove@plt>:
   11240:	add	ip, pc, #1048576	; 0x100000
   11244:	add	ip, ip, #45056	; 0xb000
   11248:	ldr	pc, [ip, #3924]!	; 0xf54

0001124c <mcsimple_clean@plt>:
   1124c:	add	ip, pc, #1048576	; 0x100000
   11250:	add	ip, ip, #45056	; 0xb000
   11254:	ldr	pc, [ip, #3916]!	; 0xf4c

00011258 <myhtml_tree_node_insert_comment@plt>:
   11258:	add	ip, pc, #1048576	; 0x100000
   1125c:	add	ip, ip, #45056	; 0xb000
   11260:	ldr	pc, [ip, #3908]!	; 0xf44

00011264 <myhtml_tokenizer_end@plt>:
   11264:	add	ip, pc, #1048576	; 0x100000
   11268:	add	ip, ip, #45056	; 0xb000
   1126c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011270 <mycore_utils_avl_tree_list_all_nodes@plt>:
   11270:	add	ip, pc, #1048576	; 0x100000
   11274:	add	ip, ip, #45056	; 0xb000
   11278:	ldr	pc, [ip, #3892]!	; 0xf34

0001127c <mchar_async_node_add@plt>:
   1127c:	add	ip, pc, #1048576	; 0x100000
   11280:	add	ip, ip, #45056	; 0xb000
   11284:	ldr	pc, [ip, #3884]!	; 0xf2c

00011288 <mycore_strncasecmp@plt>:
   11288:	add	ip, pc, #1048576	; 0x100000
   1128c:	add	ip, ip, #45056	; 0xb000
   11290:	ldr	pc, [ip, #3876]!	; 0xf24

00011294 <mcsimple_create@plt>:
   11294:	add	ip, pc, #1048576	; 0x100000
   11298:	add	ip, ip, #45056	; 0xb000
   1129c:	ldr	pc, [ip, #3868]!	; 0xf1c

000112a0 <mythread_queue_destroy@plt>:
   112a0:	add	ip, pc, #1048576	; 0x100000
   112a4:	add	ip, ip, #45056	; 0xb000
   112a8:	ldr	pc, [ip, #3860]!	; 0xf14

000112ac <mycore_string_raw_copy@plt>:
   112ac:	add	ip, pc, #1048576	; 0x100000
   112b0:	add	ip, ip, #45056	; 0xb000
   112b4:	ldr	pc, [ip, #3852]!	; 0xf0c

000112b8 <mycore_string_stay_only_whitespace@plt>:
   112b8:	add	ip, pc, #1048576	; 0x100000
   112bc:	add	ip, ip, #45056	; 0xb000
   112c0:	ldr	pc, [ip, #3844]!	; 0xf04

000112c4 <mctree_clean@plt>:
   112c4:	add	ip, pc, #1048576	; 0x100000
   112c8:	add	ip, ip, #45056	; 0xb000
   112cc:	ldr	pc, [ip, #3836]!	; 0xefc

000112d0 <myhtml_token_set_replacement_character_for_null_token@plt>:
   112d0:	add	ip, pc, #1048576	; 0x100000
   112d4:	add	ip, ip, #45056	; 0xb000
   112d8:	ldr	pc, [ip, #3828]!	; 0xef4

000112dc <fwrite@plt>:
   112dc:	add	ip, pc, #1048576	; 0x100000
   112e0:	add	ip, ip, #45056	; 0xb000
   112e4:	ldr	pc, [ip, #3820]!	; 0xeec

000112e8 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   112e8:	add	ip, pc, #1048576	; 0x100000
   112ec:	add	ip, ip, #45056	; 0xb000
   112f0:	ldr	pc, [ip, #3812]!	; 0xee4

000112f4 <myhtml_tree_node_insert_by_mode@plt>:
   112f4:	add	ip, pc, #1048576	; 0x100000
   112f8:	add	ip, ip, #45056	; 0xb000
   112fc:	ldr	pc, [ip, #3804]!	; 0xedc

00011300 <myhtml_tree_node_insert_after@plt>:
   11300:	add	ip, pc, #1048576	; 0x100000
   11304:	add	ip, ip, #45056	; 0xb000
   11308:	ldr	pc, [ip, #3796]!	; 0xed4

0001130c <mycore_string_append_with_replacement_null_characters@plt>:
   1130c:	add	ip, pc, #1048576	; 0x100000
   11310:	add	ip, ip, #45056	; 0xb000
   11314:	ldr	pc, [ip, #3788]!	; 0xecc

00011318 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   11318:	add	ip, pc, #1048576	; 0x100000
   1131c:	add	ip, ip, #45056	; 0xb000
   11320:	ldr	pc, [ip, #3780]!	; 0xec4

00011324 <mcsimple_destroy@plt>:
   11324:	add	ip, pc, #1048576	; 0x100000
   11328:	add	ip, ip, #45056	; 0xb000
   1132c:	ldr	pc, [ip, #3772]!	; 0xebc

00011330 <__mtree_insert_to_start@plt>:
   11330:	add	ip, pc, #1048576	; 0x100000
   11334:	add	ip, ip, #45056	; 0xb000
   11338:	ldr	pc, [ip, #3764]!	; 0xeb4

0001133c <fread@plt>:
   1133c:	add	ip, pc, #1048576	; 0x100000
   11340:	add	ip, ip, #45056	; 0xb000
   11344:	ldr	pc, [ip, #3756]!	; 0xeac

00011348 <pthread_create@plt>:
   11348:	add	ip, pc, #1048576	; 0x100000
   1134c:	add	ip, ip, #45056	; 0xb000
   11350:	ldr	pc, [ip, #3748]!	; 0xea4

00011354 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   11354:	add	ip, pc, #1048576	; 0x100000
   11358:	add	ip, ip, #45056	; 0xb000
   1135c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011360 <myhtml_tree_node_insert_before@plt>:
   11360:	add	ip, pc, #1048576	; 0x100000
   11364:	add	ip, ip, #45056	; 0xb000
   11368:	ldr	pc, [ip, #3732]!	; 0xe94

0001136c <myhtml_parser_token_data_to_string_charef@plt>:
   1136c:	add	ip, pc, #1048576	; 0x100000
   11370:	add	ip, ip, #45056	; 0xb000
   11374:	ldr	pc, [ip, #3724]!	; 0xe8c

00011378 <mythread_thread_attr_clean@plt>:
   11378:	add	ip, pc, #1048576	; 0x100000
   1137c:	add	ip, ip, #45056	; 0xb000
   11380:	ldr	pc, [ip, #3716]!	; 0xe84

00011384 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   11384:	add	ip, pc, #1048576	; 0x100000
   11388:	add	ip, ip, #45056	; 0xb000
   1138c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011390 <myhtml_tokenizer_chunk_process@plt>:
   11390:	add	ip, pc, #1048576	; 0x100000
   11394:	add	ip, ip, #45056	; 0xb000
   11398:	ldr	pc, [ip, #3700]!	; 0xe74

0001139c <myhtml_tree_tags_close_p@plt>:
   1139c:	add	ip, pc, #1048576	; 0x100000
   113a0:	add	ip, ip, #45056	; 0xb000
   113a4:	ldr	pc, [ip, #3692]!	; 0xe6c

000113a8 <mcsimple_init@plt>:
   113a8:	add	ip, pc, #1048576	; 0x100000
   113ac:	add	ip, ip, #45056	; 0xb000
   113b0:	ldr	pc, [ip, #3684]!	; 0xe64

000113b4 <myencoding_string_append@plt>:
   113b4:	add	ip, pc, #1048576	; 0x100000
   113b8:	add	ip, ip, #45056	; 0xb000
   113bc:	ldr	pc, [ip, #3676]!	; 0xe5c

000113c0 <myhtml_stream_buffer_clean@plt>:
   113c0:	add	ip, pc, #1048576	; 0x100000
   113c4:	add	ip, ip, #45056	; 0xb000
   113c8:	ldr	pc, [ip, #3668]!	; 0xe54

000113cc <mycore_utils_avl_tree_rotate_for_delete@plt>:
   113cc:	add	ip, pc, #1048576	; 0x100000
   113d0:	add	ip, ip, #45056	; 0xb000
   113d4:	ldr	pc, [ip, #3660]!	; 0xe4c

000113d8 <myhtml_token_merged_two_token_string@plt>:
   113d8:	add	ip, pc, #1048576	; 0x100000
   113dc:	add	ip, ip, #45056	; 0xb000
   113e0:	ldr	pc, [ip, #3652]!	; 0xe44

000113e4 <myhtml_attribute_value@plt>:
   113e4:	add	ip, pc, #1048576	; 0x100000
   113e8:	add	ip, ip, #45056	; 0xb000
   113ec:	ldr	pc, [ip, #3644]!	; 0xe3c

000113f0 <myhtml_token_strict_doctype_by_token@plt>:
   113f0:	add	ip, pc, #1048576	; 0x100000
   113f4:	add	ip, ip, #45056	; 0xb000
   113f8:	ldr	pc, [ip, #3636]!	; 0xe34

000113fc <mchar_async_init@plt>:
   113fc:	add	ip, pc, #1048576	; 0x100000
   11400:	add	ip, ip, #45056	; 0xb000
   11404:	ldr	pc, [ip, #3628]!	; 0xe2c

00011408 <mycore_string_crop_whitespace_from_begin@plt>:
   11408:	add	ip, pc, #1048576	; 0x100000
   1140c:	add	ip, ip, #45056	; 0xb000
   11410:	ldr	pc, [ip, #3620]!	; 0xe24

00011414 <mythread_resume@plt>:
   11414:	add	ip, pc, #1048576	; 0x100000
   11418:	add	ip, ip, #45056	; 0xb000
   1141c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011420 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   11420:	add	ip, pc, #1048576	; 0x100000
   11424:	add	ip, ip, #45056	; 0xb000
   11428:	ldr	pc, [ip, #3604]!	; 0xe14

0001142c <myhtml_create_stream_and_batch@plt>:
   1142c:	add	ip, pc, #1048576	; 0x100000
   11430:	add	ip, ip, #45056	; 0xb000
   11434:	ldr	pc, [ip, #3596]!	; 0xe0c

00011438 <myhtml_data_process_entry_clean@plt>:
   11438:	add	ip, pc, #1048576	; 0x100000
   1143c:	add	ip, ip, #45056	; 0xb000
   11440:	ldr	pc, [ip, #3588]!	; 0xe04

00011444 <mcsync_spin_init@plt>:
   11444:	add	ip, pc, #1048576	; 0x100000
   11448:	add	ip, ip, #45056	; 0xb000
   1144c:	ldr	pc, [ip, #3580]!	; 0xdfc

00011450 <malloc@plt>:
   11450:	add	ip, pc, #1048576	; 0x100000
   11454:	add	ip, ip, #45056	; 0xb000
   11458:	ldr	pc, [ip, #3572]!	; 0xdf4

0001145c <mythread_check_status@plt>:
   1145c:	add	ip, pc, #1048576	; 0x100000
   11460:	add	ip, ip, #45056	; 0xb000
   11464:	ldr	pc, [ip, #3564]!	; 0xdec

00011468 <mycore_strcasecmp@plt>:
   11468:	add	ip, pc, #1048576	; 0x100000
   1146c:	add	ip, ip, #45056	; 0xb000
   11470:	ldr	pc, [ip, #3556]!	; 0xde4

00011474 <mythread_queue_node_malloc_round@plt>:
   11474:	add	ip, pc, #1048576	; 0x100000
   11478:	add	ip, ip, #45056	; 0xb000
   1147c:	ldr	pc, [ip, #3548]!	; 0xddc

00011480 <myhtml_tree_active_formatting_reconstruction@plt>:
   11480:	add	ip, pc, #1048576	; 0x100000
   11484:	add	ip, ip, #45056	; 0xb000
   11488:	ldr	pc, [ip, #3540]!	; 0xdd4

0001148c <myhtml_token_set_done@plt>:
   1148c:	add	ip, pc, #1048576	; 0x100000
   11490:	add	ip, ip, #45056	; 0xb000
   11494:	ldr	pc, [ip, #3532]!	; 0xdcc

00011498 <mcsync_spin_create@plt>:
   11498:	add	ip, pc, #1048576	; 0x100000
   1149c:	add	ip, ip, #45056	; 0xb000
   114a0:	ldr	pc, [ip, #3524]!	; 0xdc4

000114a4 <mythread_thread_join@plt>:
   114a4:	add	ip, pc, #1048576	; 0x100000
   114a8:	add	ip, ip, #45056	; 0xb000
   114ac:	ldr	pc, [ip, #3516]!	; 0xdbc

000114b0 <myhtml_token_attr_remove@plt>:
   114b0:	add	ip, pc, #1048576	; 0x100000
   114b4:	add	ip, ip, #45056	; 0xb000
   114b8:	ldr	pc, [ip, #3508]!	; 0xdb4

000114bc <mythread_quit@plt>:
   114bc:	add	ip, pc, #1048576	; 0x100000
   114c0:	add	ip, ip, #45056	; 0xb000
   114c4:	ldr	pc, [ip, #3500]!	; 0xdac

000114c8 <mcsync_spin_lock@plt>:
   114c8:	add	ip, pc, #1048576	; 0x100000
   114cc:	add	ip, ip, #45056	; 0xb000
   114d0:	ldr	pc, [ip, #3492]!	; 0xda4

000114d4 <myhtml_token_clean@plt>:
   114d4:	add	ip, pc, #1048576	; 0x100000
   114d8:	add	ip, ip, #45056	; 0xb000
   114dc:	ldr	pc, [ip, #3484]!	; 0xd9c

000114e0 <mythread_queue_list_get_count@plt>:
   114e0:	add	ip, pc, #1048576	; 0x100000
   114e4:	add	ip, ip, #45056	; 0xb000
   114e8:	ldr	pc, [ip, #3476]!	; 0xd94

000114ec <__gmon_start__@plt>:
   114ec:	add	ip, pc, #1048576	; 0x100000
   114f0:	add	ip, ip, #45056	; 0xb000
   114f4:	ldr	pc, [ip, #3468]!	; 0xd8c

000114f8 <mycore_string_init@plt>:
   114f8:	add	ip, pc, #1048576	; 0x100000
   114fc:	add	ip, ip, #45056	; 0xb000
   11500:	ldr	pc, [ip, #3460]!	; 0xd84

00011504 <myhtml_tree_current_node@plt>:
   11504:	add	ip, pc, #1048576	; 0x100000
   11508:	add	ip, ip, #45056	; 0xb000
   1150c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011510 <mythread_mutex_close@plt>:
   11510:	add	ip, pc, #1048576	; 0x100000
   11514:	add	ip, ip, #45056	; 0xb000
   11518:	ldr	pc, [ip, #3444]!	; 0xd74

0001151c <myhtml_insertion_mode_in_body@plt>:
   1151c:	add	ip, pc, #1048576	; 0x100000
   11520:	add	ip, ip, #45056	; 0xb000
   11524:	ldr	pc, [ip, #3436]!	; 0xd6c

00011528 <myhtml_tree_active_formatting_between_last_marker@plt>:
   11528:	add	ip, pc, #1048576	; 0x100000
   1152c:	add	ip, ip, #45056	; 0xb000
   11530:	ldr	pc, [ip, #3428]!	; 0xd64

00011534 <mctree_create@plt>:
   11534:	add	ip, pc, #1048576	; 0x100000
   11538:	add	ip, ip, #45056	; 0xb000
   1153c:	ldr	pc, [ip, #3420]!	; 0xd5c

00011540 <bcmp@plt>:
   11540:	add	ip, pc, #1048576	; 0x100000
   11544:	add	ip, ip, #45056	; 0xb000
   11548:	ldr	pc, [ip, #3412]!	; 0xd54

0001154c <strlen@plt>:
   1154c:	add	ip, pc, #1048576	; 0x100000
   11550:	add	ip, ip, #45056	; 0xb000
   11554:	ldr	pc, [ip, #3404]!	; 0xd4c

00011558 <myhtml_token_node_wait_for_done@plt>:
   11558:	add	ip, pc, #1048576	; 0x100000
   1155c:	add	ip, ip, #45056	; 0xb000
   11560:	ldr	pc, [ip, #3396]!	; 0xd44

00011564 <mycore_string_append_lowercase@plt>:
   11564:	add	ip, pc, #1048576	; 0x100000
   11568:	add	ip, ip, #45056	; 0xb000
   1156c:	ldr	pc, [ip, #3388]!	; 0xd3c

00011570 <myhtml_token_node_attr_copy_with_check@plt>:
   11570:	add	ip, pc, #1048576	; 0x100000
   11574:	add	ip, ip, #45056	; 0xb000
   11578:	ldr	pc, [ip, #3380]!	; 0xd34

0001157c <mythread_queue_init@plt>:
   1157c:	add	ip, pc, #1048576	; 0x100000
   11580:	add	ip, ip, #45056	; 0xb000
   11584:	ldr	pc, [ip, #3372]!	; 0xd2c

00011588 <myhtml_tree_node_add_child@plt>:
   11588:	add	ip, pc, #1048576	; 0x100000
   1158c:	add	ip, ip, #45056	; 0xb000
   11590:	ldr	pc, [ip, #3364]!	; 0xd24

00011594 <myhtml_tree_clean@plt>:
   11594:	add	ip, pc, #1048576	; 0x100000
   11598:	add	ip, ip, #45056	; 0xb000
   1159c:	ldr	pc, [ip, #3356]!	; 0xd1c

000115a0 <myhtml_tree_generate_implied_end_tags@plt>:
   115a0:	add	ip, pc, #1048576	; 0x100000
   115a4:	add	ip, ip, #45056	; 0xb000
   115a8:	ldr	pc, [ip, #3348]!	; 0xd14

000115ac <mchar_async_node_clean@plt>:
   115ac:	add	ip, pc, #1048576	; 0x100000
   115b0:	add	ip, ip, #45056	; 0xb000
   115b4:	ldr	pc, [ip, #3340]!	; 0xd0c

000115b8 <myhtml_serialization_node_callback@plt>:
   115b8:	add	ip, pc, #1048576	; 0x100000
   115bc:	add	ip, ip, #45056	; 0xb000
   115c0:	ldr	pc, [ip, #3332]!	; 0xd04

000115c4 <mchar_async_free@plt>:
   115c4:	add	ip, pc, #1048576	; 0x100000
   115c8:	add	ip, ip, #45056	; 0xb000
   115cc:	ldr	pc, [ip, #3324]!	; 0xcfc

000115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   115d0:	add	ip, pc, #1048576	; 0x100000
   115d4:	add	ip, ip, #45056	; 0xb000
   115d8:	ldr	pc, [ip, #3316]!	; 0xcf4

000115dc <mcsimple_malloc@plt>:
   115dc:	add	ip, pc, #1048576	; 0x100000
   115e0:	add	ip, ip, #45056	; 0xb000
   115e4:	ldr	pc, [ip, #3308]!	; 0xcec

000115e8 <mctree_search_lowercase@plt>:
   115e8:	add	ip, pc, #1048576	; 0x100000
   115ec:	add	ip, ip, #45056	; 0xb000
   115f0:	ldr	pc, [ip, #3300]!	; 0xce4

000115f4 <myhtml_data_process@plt>:
   115f4:	add	ip, pc, #1048576	; 0x100000
   115f8:	add	ip, ip, #45056	; 0xb000
   115fc:	ldr	pc, [ip, #3292]!	; 0xcdc

00011600 <myhtml_token_attr_copy@plt>:
   11600:	add	ip, pc, #1048576	; 0x100000
   11604:	add	ip, ip, #45056	; 0xb000
   11608:	ldr	pc, [ip, #3284]!	; 0xcd4

0001160c <mcobject_init@plt>:
   1160c:	add	ip, pc, #1048576	; 0x100000
   11610:	add	ip, ip, #45056	; 0xb000
   11614:	ldr	pc, [ip, #3276]!	; 0xccc

00011618 <myhtml_token_destroy@plt>:
   11618:	add	ip, pc, #1048576	; 0x100000
   1161c:	add	ip, ip, #45056	; 0xb000
   11620:	ldr	pc, [ip, #3268]!	; 0xcc4

00011624 <pthread_attr_init@plt>:
   11624:	add	ip, pc, #1048576	; 0x100000
   11628:	add	ip, ip, #45056	; 0xb000
   1162c:	ldr	pc, [ip, #3260]!	; 0xcbc

00011630 <myhtml_charef_find_by_pos@plt>:
   11630:	add	ip, pc, #1048576	; 0x100000
   11634:	add	ip, ip, #45056	; 0xb000
   11638:	ldr	pc, [ip, #3252]!	; 0xcb4

0001163c <mythread_queue_list_create@plt>:
   1163c:	add	ip, pc, #1048576	; 0x100000
   11640:	add	ip, ip, #45056	; 0xb000
   11644:	ldr	pc, [ip, #3244]!	; 0xcac

00011648 <myhtml_token_attr_delete_all@plt>:
   11648:	add	ip, pc, #1048576	; 0x100000
   1164c:	add	ip, ip, #45056	; 0xb000
   11650:	ldr	pc, [ip, #3236]!	; 0xca4

00011654 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   11654:	add	ip, pc, #1048576	; 0x100000
   11658:	add	ip, ip, #45056	; 0xb000
   1165c:	ldr	pc, [ip, #3228]!	; 0xc9c

00011660 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   11660:	add	ip, pc, #1048576	; 0x100000
   11664:	add	ip, ip, #45056	; 0xb000
   11668:	ldr	pc, [ip, #3220]!	; 0xc94

0001166c <myhtml_tree_active_formatting_append_with_check@plt>:
   1166c:	add	ip, pc, #1048576	; 0x100000
   11670:	add	ip, ip, #45056	; 0xb000
   11674:	ldr	pc, [ip, #3212]!	; 0xc8c

00011678 <myencoding_get_function_by_id@plt>:
   11678:	add	ip, pc, #1048576	; 0x100000
   1167c:	add	ip, ip, #45056	; 0xb000
   11680:	ldr	pc, [ip, #3204]!	; 0xc84

00011684 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   11684:	add	ip, pc, #1048576	; 0x100000
   11688:	add	ip, ip, #45056	; 0xb000
   1168c:	ldr	pc, [ip, #3196]!	; 0xc7c

00011690 <mcsync_lock@plt>:
   11690:	add	ip, pc, #1048576	; 0x100000
   11694:	add	ip, ip, #45056	; 0xb000
   11698:	ldr	pc, [ip, #3188]!	; 0xc74

0001169c <mcsync_init@plt>:
   1169c:	add	ip, pc, #1048576	; 0x100000
   116a0:	add	ip, ip, #45056	; 0xb000
   116a4:	ldr	pc, [ip, #3180]!	; 0xc6c

000116a8 <mcobject_async_node_clean@plt>:
   116a8:	add	ip, pc, #1048576	; 0x100000
   116ac:	add	ip, ip, #45056	; 0xb000
   116b0:	ldr	pc, [ip, #3172]!	; 0xc64

000116b4 <myhtml_tree_adoption_agency_algorithm@plt>:
   116b4:	add	ip, pc, #1048576	; 0x100000
   116b8:	add	ip, ip, #45056	; 0xb000
   116bc:	ldr	pc, [ip, #3164]!	; 0xc5c

000116c0 <myhtml_tree_active_formatting_remove@plt>:
   116c0:	add	ip, pc, #1048576	; 0x100000
   116c4:	add	ip, ip, #45056	; 0xb000
   116c8:	ldr	pc, [ip, #3156]!	; 0xc54

000116cc <memset@plt>:
   116cc:	add	ip, pc, #1048576	; 0x100000
   116d0:	add	ip, ip, #45056	; 0xb000
   116d4:	ldr	pc, [ip, #3148]!	; 0xc4c

000116d8 <myhread_entry_create@plt>:
   116d8:	add	ip, pc, #1048576	; 0x100000
   116dc:	add	ip, ip, #45056	; 0xb000
   116e0:	ldr	pc, [ip, #3140]!	; 0xc44

000116e4 <mcsync_mutex_create@plt>:
   116e4:	add	ip, pc, #1048576	; 0x100000
   116e8:	add	ip, ip, #45056	; 0xb000
   116ec:	ldr	pc, [ip, #3132]!	; 0xc3c

000116f0 <mycore_string_append@plt>:
   116f0:	add	ip, pc, #1048576	; 0x100000
   116f4:	add	ip, ip, #45056	; 0xb000
   116f8:	ldr	pc, [ip, #3124]!	; 0xc34

000116fc <mcobject_async_chunk_malloc_without_lock@plt>:
   116fc:	add	ip, pc, #1048576	; 0x100000
   11700:	add	ip, ip, #45056	; 0xb000
   11704:	ldr	pc, [ip, #3116]!	; 0xc2c

00011708 <strncpy@plt>:
   11708:	add	ip, pc, #1048576	; 0x100000
   1170c:	add	ip, ip, #45056	; 0xb000
   11710:	ldr	pc, [ip, #3108]!	; 0xc24

00011714 <pthread_cancel@plt>:
   11714:	add	ip, pc, #1048576	; 0x100000
   11718:	add	ip, ip, #45056	; 0xb000
   1171c:	ldr	pc, [ip, #3100]!	; 0xc1c

00011720 <myhtml_token_attr_create@plt>:
   11720:	add	ip, pc, #1048576	; 0x100000
   11724:	add	ip, ip, #45056	; 0xb000
   11728:	ldr	pc, [ip, #3092]!	; 0xc14

0001172c <mchar_async_malloc@plt>:
   1172c:	add	ip, pc, #1048576	; 0x100000
   11730:	add	ip, ip, #45056	; 0xb000
   11734:	ldr	pc, [ip, #3084]!	; 0xc0c

00011738 <myhtml_tag_static_search@plt>:
   11738:	add	ip, pc, #1048576	; 0x100000
   1173c:	add	ip, ip, #45056	; 0xb000
   11740:	ldr	pc, [ip, #3076]!	; 0xc04

00011744 <myhtml_data_process_end@plt>:
   11744:	add	ip, pc, #1048576	; 0x100000
   11748:	add	ip, ip, #45056	; 0xb000
   1174c:	ldr	pc, [ip, #3068]!	; 0xbfc

00011750 <myhtml_stream_buffer_add_entry@plt>:
   11750:	add	ip, pc, #1048576	; 0x100000
   11754:	add	ip, ip, #45056	; 0xb000
   11758:	ldr	pc, [ip, #3060]!	; 0xbf4

0001175c <myhtml_tree_open_elements_pop_until@plt>:
   1175c:	add	ip, pc, #1048576	; 0x100000
   11760:	add	ip, ip, #45056	; 0xb000
   11764:	ldr	pc, [ip, #3052]!	; 0xbec

00011768 <mctree_insert@plt>:
   11768:	add	ip, pc, #1048576	; 0x100000
   1176c:	add	ip, ip, #45056	; 0xb000
   11770:	ldr	pc, [ip, #3044]!	; 0xbe4

00011774 <mycore_string_realloc@plt>:
   11774:	add	ip, pc, #1048576	; 0x100000
   11778:	add	ip, ip, #45056	; 0xb000
   1177c:	ldr	pc, [ip, #3036]!	; 0xbdc

00011780 <myhtml_tree_node_insert@plt>:
   11780:	add	ip, pc, #1048576	; 0x100000
   11784:	add	ip, ip, #45056	; 0xb000
   11788:	ldr	pc, [ip, #3028]!	; 0xbd4

0001178c <mythread_queue_list_entry_wait_for_done@plt>:
   1178c:	add	ip, pc, #1048576	; 0x100000
   11790:	add	ip, ip, #45056	; 0xb000
   11794:	ldr	pc, [ip, #3020]!	; 0xbcc

00011798 <myhtml_tree_open_elements_append@plt>:
   11798:	add	ip, pc, #1048576	; 0x100000
   1179c:	add	ip, ip, #45056	; 0xb000
   117a0:	ldr	pc, [ip, #3012]!	; 0xbc4

000117a4 <mythread_queue_list_entry_clean@plt>:
   117a4:	add	ip, pc, #1048576	; 0x100000
   117a8:	add	ip, ip, #45056	; 0xb000
   117ac:	ldr	pc, [ip, #3004]!	; 0xbbc

000117b0 <mythread_destroy@plt>:
   117b0:	add	ip, pc, #1048576	; 0x100000
   117b4:	add	ip, ip, #45056	; 0xb000
   117b8:	ldr	pc, [ip, #2996]!	; 0xbb4

000117bc <myhtml_tree_template_insertion_pop@plt>:
   117bc:	add	ip, pc, #1048576	; 0x100000
   117c0:	add	ip, ip, #45056	; 0xb000
   117c4:	ldr	pc, [ip, #2988]!	; 0xbac

000117c8 <mythread_thread_destroy@plt>:
   117c8:	add	ip, pc, #1048576	; 0x100000
   117cc:	add	ip, ip, #45056	; 0xb000
   117d0:	ldr	pc, [ip, #2980]!	; 0xba4

000117d4 <fclose@plt>:
   117d4:	add	ip, pc, #1048576	; 0x100000
   117d8:	add	ip, ip, #45056	; 0xb000
   117dc:	ldr	pc, [ip, #2972]!	; 0xb9c

000117e0 <myhtml_token_node_create@plt>:
   117e0:	add	ip, pc, #1048576	; 0x100000
   117e4:	add	ip, ip, #45056	; 0xb000
   117e8:	ldr	pc, [ip, #2964]!	; 0xb94

000117ec <mycore_utils_avl_tree_node_balance@plt>:
   117ec:	add	ip, pc, #1048576	; 0x100000
   117f0:	add	ip, ip, #45056	; 0xb000
   117f4:	ldr	pc, [ip, #2956]!	; 0xb8c

000117f8 <myhtml_tag_get_by_id@plt>:
   117f8:	add	ip, pc, #1048576	; 0x100000
   117fc:	add	ip, ip, #45056	; 0xb000
   11800:	ldr	pc, [ip, #2948]!	; 0xb84

00011804 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   11804:	add	ip, pc, #1048576	; 0x100000
   11808:	add	ip, ip, #45056	; 0xb000
   1180c:	ldr	pc, [ip, #2940]!	; 0xb7c

00011810 <mycore_utils_mhash_rebuld@plt>:
   11810:	add	ip, pc, #1048576	; 0x100000
   11814:	add	ip, ip, #45056	; 0xb000
   11818:	ldr	pc, [ip, #2932]!	; 0xb74

0001181c <myhtml_charef_get_first_position@plt>:
   1181c:	add	ip, pc, #1048576	; 0x100000
   11820:	add	ip, ip, #45056	; 0xb000
   11824:	ldr	pc, [ip, #2924]!	; 0xb6c

00011828 <mcobject_malloc@plt>:
   11828:	add	ip, pc, #1048576	; 0x100000
   1182c:	add	ip, ip, #45056	; 0xb000
   11830:	ldr	pc, [ip, #2916]!	; 0xb64

00011834 <mcsync_spin_clean@plt>:
   11834:	add	ip, pc, #1048576	; 0x100000
   11838:	add	ip, ip, #45056	; 0xb000
   1183c:	ldr	pc, [ip, #2908]!	; 0xb5c

00011840 <mythread_queue_create@plt>:
   11840:	add	ip, pc, #1048576	; 0x100000
   11844:	add	ip, ip, #45056	; 0xb000
   11848:	ldr	pc, [ip, #2900]!	; 0xb54

0001184c <mcobject_async_node_add@plt>:
   1184c:	add	ip, pc, #1048576	; 0x100000
   11850:	add	ip, ip, #45056	; 0xb000
   11854:	ldr	pc, [ip, #2892]!	; 0xb4c

00011858 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   11858:	add	ip, pc, #1048576	; 0x100000
   1185c:	add	ip, ip, #45056	; 0xb000
   11860:	ldr	pc, [ip, #2884]!	; 0xb44

00011864 <myhtml_is_html_node@plt>:
   11864:	add	ip, pc, #1048576	; 0x100000
   11868:	add	ip, ip, #45056	; 0xb000
   1186c:	ldr	pc, [ip, #2876]!	; 0xb3c

00011870 <myhtml_parser_token_data_to_string@plt>:
   11870:	add	ip, pc, #1048576	; 0x100000
   11874:	add	ip, ip, #45056	; 0xb000
   11878:	ldr	pc, [ip, #2868]!	; 0xb34

0001187c <mythread_stop@plt>:
   1187c:	add	ip, pc, #1048576	; 0x100000
   11880:	add	ip, ip, #45056	; 0xb000
   11884:	ldr	pc, [ip, #2860]!	; 0xb2c

00011888 <myhtml_tag_name_by_id@plt>:
   11888:	add	ip, pc, #1048576	; 0x100000
   1188c:	add	ip, ip, #45056	; 0xb000
   11890:	ldr	pc, [ip, #2852]!	; 0xb24

00011894 <mythread_mutex_create@plt>:
   11894:	add	ip, pc, #1048576	; 0x100000
   11898:	add	ip, ip, #45056	; 0xb000
   1189c:	ldr	pc, [ip, #2844]!	; 0xb1c

000118a0 <myhtml_attribute_key@plt>:
   118a0:	add	ip, pc, #1048576	; 0x100000
   118a4:	add	ip, ip, #45056	; 0xb000
   118a8:	ldr	pc, [ip, #2836]!	; 0xb14

000118ac <mcobject_async_destroy@plt>:
   118ac:	add	ip, pc, #1048576	; 0x100000
   118b0:	add	ip, ip, #45056	; 0xb000
   118b4:	ldr	pc, [ip, #2828]!	; 0xb0c

000118b8 <myhtml_token_attr_compare@plt>:
   118b8:	add	ip, pc, #1048576	; 0x100000
   118bc:	add	ip, ip, #45056	; 0xb000
   118c0:	ldr	pc, [ip, #2820]!	; 0xb04

000118c4 <mcsync_mutex_init@plt>:
   118c4:	add	ip, pc, #1048576	; 0x100000
   118c8:	add	ip, ip, #45056	; 0xb000
   118cc:	ldr	pc, [ip, #2812]!	; 0xafc

000118d0 <myhtml_tag_init@plt>:
   118d0:	add	ip, pc, #1048576	; 0x100000
   118d4:	add	ip, ip, #45056	; 0xb000
   118d8:	ldr	pc, [ip, #2804]!	; 0xaf4

000118dc <pthread_join@plt>:
   118dc:	add	ip, pc, #1048576	; 0x100000
   118e0:	add	ip, ip, #45056	; 0xb000
   118e4:	ldr	pc, [ip, #2796]!	; 0xaec

000118e8 <myhtml_tag_get_by_name@plt>:
   118e8:	add	ip, pc, #1048576	; 0x100000
   118ec:	add	ip, ip, #45056	; 0xb000
   118f0:	ldr	pc, [ip, #2788]!	; 0xae4

000118f4 <myhtml_stream_buffer_current_entry@plt>:
   118f4:	add	ip, pc, #1048576	; 0x100000
   118f8:	add	ip, ip, #45056	; 0xb000
   118fc:	ldr	pc, [ip, #2780]!	; 0xadc

00011900 <mchar_async_chunk_malloc_without_lock@plt>:
   11900:	add	ip, pc, #1048576	; 0x100000
   11904:	add	ip, ip, #45056	; 0xb000
   11908:	ldr	pc, [ip, #2772]!	; 0xad4

0001190c <mcobject_async_malloc@plt>:
   1190c:	add	ip, pc, #1048576	; 0x100000
   11910:	add	ip, ip, #45056	; 0xb000
   11914:	ldr	pc, [ip, #2764]!	; 0xacc

00011918 <mchar_async_clean@plt>:
   11918:	add	ip, pc, #1048576	; 0x100000
   1191c:	add	ip, ip, #45056	; 0xb000
   11920:	ldr	pc, [ip, #2756]!	; 0xac4

00011924 <myhtml_token_adjust_foreign_attributes@plt>:
   11924:	add	ip, pc, #1048576	; 0x100000
   11928:	add	ip, ip, #45056	; 0xb000
   1192c:	ldr	pc, [ip, #2748]!	; 0xabc

00011930 <myhtml_rules_init@plt>:
   11930:	add	ip, pc, #1048576	; 0x100000
   11934:	add	ip, ip, #45056	; 0xb000
   11938:	ldr	pc, [ip, #2740]!	; 0xab4

0001193c <mythread_nanosleep_destroy@plt>:
   1193c:	add	ip, pc, #1048576	; 0x100000
   11940:	add	ip, ip, #45056	; 0xb000
   11944:	ldr	pc, [ip, #2732]!	; 0xaac

00011948 <myhtml_string_before_append_any_preprocessing@plt>:
   11948:	add	ip, pc, #1048576	; 0x100000
   1194c:	add	ip, ip, #45056	; 0xb000
   11950:	ldr	pc, [ip, #2724]!	; 0xaa4

00011954 <myhtml_check_tag_parser@plt>:
   11954:	add	ip, pc, #1048576	; 0x100000
   11958:	add	ip, ip, #45056	; 0xb000
   1195c:	ldr	pc, [ip, #2716]!	; 0xa9c

00011960 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   11960:	add	ip, pc, #1048576	; 0x100000
   11964:	add	ip, ip, #45056	; 0xb000
   11968:	ldr	pc, [ip, #2708]!	; 0xa94

0001196c <mchar_async_node_delete@plt>:
   1196c:	add	ip, pc, #1048576	; 0x100000
   11970:	add	ip, ip, #45056	; 0xb000
   11974:	ldr	pc, [ip, #2700]!	; 0xa8c

00011978 <mchar_async_crop_first_chars_without_cache@plt>:
   11978:	add	ip, pc, #1048576	; 0x100000
   1197c:	add	ip, ip, #45056	; 0xb000
   11980:	ldr	pc, [ip, #2692]!	; 0xa84

00011984 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   11984:	add	ip, pc, #1048576	; 0x100000
   11988:	add	ip, ip, #45056	; 0xb000
   1198c:	ldr	pc, [ip, #2684]!	; 0xa7c

00011990 <mchar_async_cache_add@plt>:
   11990:	add	ip, pc, #1048576	; 0x100000
   11994:	add	ip, ip, #45056	; 0xb000
   11998:	ldr	pc, [ip, #2676]!	; 0xa74

0001199c <myencoding_string_append_chunk_lowercase_ascii@plt>:
   1199c:	add	ip, pc, #1048576	; 0x100000
   119a0:	add	ip, ip, #45056	; 0xb000
   119a4:	ldr	pc, [ip, #2668]!	; 0xa6c

000119a8 <mycore_malloc@plt>:
   119a8:	add	ip, pc, #1048576	; 0x100000
   119ac:	add	ip, ip, #45056	; 0xb000
   119b0:	ldr	pc, [ip, #2660]!	; 0xa64

000119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   119b4:	add	ip, pc, #1048576	; 0x100000
   119b8:	add	ip, ip, #45056	; 0xb000
   119bc:	ldr	pc, [ip, #2652]!	; 0xa5c

000119c0 <mythread_queue_node_malloc_limit@plt>:
   119c0:	add	ip, pc, #1048576	; 0x100000
   119c4:	add	ip, ip, #45056	; 0xb000
   119c8:	ldr	pc, [ip, #2644]!	; 0xa54

000119cc <myhtml_tree_node_insert_by_token@plt>:
   119cc:	add	ip, pc, #1048576	; 0x100000
   119d0:	add	ip, ip, #45056	; 0xb000
   119d4:	ldr	pc, [ip, #2636]!	; 0xa4c

000119d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   119d8:	add	ip, pc, #1048576	; 0x100000
   119dc:	add	ip, ip, #45056	; 0xb000
   119e0:	ldr	pc, [ip, #2628]!	; 0xa44

000119e4 <myhtml_tree_node_free@plt>:
   119e4:	add	ip, pc, #1048576	; 0x100000
   119e8:	add	ip, ip, #45056	; 0xb000
   119ec:	ldr	pc, [ip, #2620]!	; 0xa3c

000119f0 <mythread_mutex_post@plt>:
   119f0:	add	ip, pc, #1048576	; 0x100000
   119f4:	add	ip, ip, #45056	; 0xb000
   119f8:	ldr	pc, [ip, #2612]!	; 0xa34

000119fc <mycore_string_clean@plt>:
   119fc:	add	ip, pc, #1048576	; 0x100000
   11a00:	add	ip, ip, #45056	; 0xb000
   11a04:	ldr	pc, [ip, #2604]!	; 0xa2c

00011a08 <mythread_queue_list_entry_make_batch@plt>:
   11a08:	add	ip, pc, #1048576	; 0x100000
   11a0c:	add	ip, ip, #45056	; 0xb000
   11a10:	ldr	pc, [ip, #2596]!	; 0xa24

00011a14 <myhtml_tag_create@plt>:
   11a14:	add	ip, pc, #1048576	; 0x100000
   11a18:	add	ip, ip, #45056	; 0xb000
   11a1c:	ldr	pc, [ip, #2588]!	; 0xa1c

00011a20 <myhtml_tree_close_cell@plt>:
   11a20:	add	ip, pc, #1048576	; 0x100000
   11a24:	add	ip, ip, #45056	; 0xb000
   11a28:	ldr	pc, [ip, #2580]!	; 0xa14

00011a2c <myhtml_tree_adjusted_current_node@plt>:
   11a2c:	add	ip, pc, #1048576	; 0x100000
   11a30:	add	ip, ip, #45056	; 0xb000
   11a34:	ldr	pc, [ip, #2572]!	; 0xa0c

00011a38 <myhtml_stream_buffer_init@plt>:
   11a38:	add	ip, pc, #1048576	; 0x100000
   11a3c:	add	ip, ip, #45056	; 0xb000
   11a40:	ldr	pc, [ip, #2564]!	; 0xa04

00011a44 <mythread_queue_node_clean@plt>:
   11a44:	add	ip, pc, #1048576	; 0x100000
   11a48:	add	ip, ip, #45056	; 0xb000
   11a4c:	ldr	pc, [ip, #2556]!	; 0x9fc

00011a50 <myhtml_tree_node_insert_foreign_element@plt>:
   11a50:	add	ip, pc, #1048576	; 0x100000
   11a54:	add	ip, ip, #45056	; 0xb000
   11a58:	ldr	pc, [ip, #2548]!	; 0x9f4

00011a5c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   11a5c:	add	ip, pc, #1048576	; 0x100000
   11a60:	add	ip, ip, #45056	; 0xb000
   11a64:	ldr	pc, [ip, #2540]!	; 0x9ec

00011a68 <mythread_mutex_wait@plt>:
   11a68:	add	ip, pc, #1048576	; 0x100000
   11a6c:	add	ip, ip, #45056	; 0xb000
   11a70:	ldr	pc, [ip, #2532]!	; 0x9e4

00011a74 <mchar_async_destroy@plt>:
   11a74:	add	ip, pc, #1048576	; 0x100000
   11a78:	add	ip, ip, #45056	; 0xb000
   11a7c:	ldr	pc, [ip, #2524]!	; 0x9dc

00011a80 <mycore_utils_mhash_add_with_choice@plt>:
   11a80:	add	ip, pc, #1048576	; 0x100000
   11a84:	add	ip, ip, #45056	; 0xb000
   11a88:	ldr	pc, [ip, #2516]!	; 0x9d4

00011a8c <myhtml_tree_node_delete@plt>:
   11a8c:	add	ip, pc, #1048576	; 0x100000
   11a90:	add	ip, ip, #45056	; 0xb000
   11a94:	ldr	pc, [ip, #2508]!	; 0x9cc

00011a98 <mycore_free@plt>:
   11a98:	add	ip, pc, #1048576	; 0x100000
   11a9c:	add	ip, ip, #45056	; 0xb000
   11aa0:	ldr	pc, [ip, #2500]!	; 0x9c4

00011aa4 <mythread_queue_list_wait_for_done@plt>:
   11aa4:	add	ip, pc, #1048576	; 0x100000
   11aa8:	add	ip, ip, #45056	; 0xb000
   11aac:	ldr	pc, [ip, #2492]!	; 0x9bc

00011ab0 <mycore_string_whitespace_from_begin@plt>:
   11ab0:	add	ip, pc, #1048576	; 0x100000
   11ab4:	add	ip, ip, #45056	; 0xb000
   11ab8:	ldr	pc, [ip, #2484]!	; 0x9b4

00011abc <myhtml_tree_node_remove@plt>:
   11abc:	add	ip, pc, #1048576	; 0x100000
   11ac0:	add	ip, ip, #45056	; 0xb000
   11ac4:	ldr	pc, [ip, #2476]!	; 0x9ac

00011ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   11ac8:	add	ip, pc, #1048576	; 0x100000
   11acc:	add	ip, ip, #45056	; 0xb000
   11ad0:	ldr	pc, [ip, #2468]!	; 0x9a4

00011ad4 <myhtml_tree_node_insert_doctype@plt>:
   11ad4:	add	ip, pc, #1048576	; 0x100000
   11ad8:	add	ip, ip, #45056	; 0xb000
   11adc:	ldr	pc, [ip, #2460]!	; 0x99c

00011ae0 <myhtml_tag_destroy@plt>:
   11ae0:	add	ip, pc, #1048576	; 0x100000
   11ae4:	add	ip, ip, #45056	; 0xb000
   11ae8:	ldr	pc, [ip, #2452]!	; 0x994

00011aec <mcsync_mutex_clean@plt>:
   11aec:	add	ip, pc, #1048576	; 0x100000
   11af0:	add	ip, ip, #45056	; 0xb000
   11af4:	ldr	pc, [ip, #2444]!	; 0x98c

00011af8 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   11af8:	add	ip, pc, #1048576	; 0x100000
   11afc:	add	ip, ip, #45056	; 0xb000
   11b00:	ldr	pc, [ip, #2436]!	; 0x984

00011b04 <myhtml_stream_buffer_create@plt>:
   11b04:	add	ip, pc, #1048576	; 0x100000
   11b08:	add	ip, ip, #45056	; 0xb000
   11b0c:	ldr	pc, [ip, #2428]!	; 0x97c

00011b10 <myhtml_tree_appropriate_place_inserting@plt>:
   11b10:	add	ip, pc, #1048576	; 0x100000
   11b14:	add	ip, ip, #45056	; 0xb000
   11b18:	ldr	pc, [ip, #2420]!	; 0x974

00011b1c <myencoding_codepoint_to_ascii_utf_8@plt>:
   11b1c:	add	ip, pc, #1048576	; 0x100000
   11b20:	add	ip, ip, #45056	; 0xb000
   11b24:	ldr	pc, [ip, #2412]!	; 0x96c

00011b28 <myhtml_token_attr_remove_by_name@plt>:
   11b28:	add	ip, pc, #1048576	; 0x100000
   11b2c:	add	ip, ip, #45056	; 0xb000
   11b30:	ldr	pc, [ip, #2404]!	; 0x964

00011b34 <myhtml_token_attr_by_name@plt>:
   11b34:	add	ip, pc, #1048576	; 0x100000
   11b38:	add	ip, ip, #45056	; 0xb000
   11b3c:	ldr	pc, [ip, #2396]!	; 0x95c

00011b40 <mcsync_unlock@plt>:
   11b40:	add	ip, pc, #1048576	; 0x100000
   11b44:	add	ip, ip, #45056	; 0xb000
   11b48:	ldr	pc, [ip, #2388]!	; 0x954

00011b4c <myhtml_tree_token_list_append@plt>:
   11b4c:	add	ip, pc, #1048576	; 0x100000
   11b50:	add	ip, ip, #45056	; 0xb000
   11b54:	ldr	pc, [ip, #2380]!	; 0x94c

00011b58 <mythread_queue_list_entry_make_stream@plt>:
   11b58:	add	ip, pc, #1048576	; 0x100000
   11b5c:	add	ip, ip, #45056	; 0xb000
   11b60:	ldr	pc, [ip, #2372]!	; 0x944

00011b64 <mycore_strncmp@plt>:
   11b64:	add	ip, pc, #1048576	; 0x100000
   11b68:	add	ip, ip, #45056	; 0xb000
   11b6c:	ldr	pc, [ip, #2364]!	; 0x93c

00011b70 <myhtml_tree_element_in_scope@plt>:
   11b70:	add	ip, pc, #1048576	; 0x100000
   11b74:	add	ip, ip, #45056	; 0xb000
   11b78:	ldr	pc, [ip, #2356]!	; 0x934

00011b7c <fseek@plt>:
   11b7c:	add	ip, pc, #1048576	; 0x100000
   11b80:	add	ip, ip, #45056	; 0xb000
   11b84:	ldr	pc, [ip, #2348]!	; 0x92c

00011b88 <myhtml_node_clone@plt>:
   11b88:	add	ip, pc, #1048576	; 0x100000
   11b8c:	add	ip, ip, #45056	; 0xb000
   11b90:	ldr	pc, [ip, #2340]!	; 0x924

00011b94 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   11b94:	add	ip, pc, #1048576	; 0x100000
   11b98:	add	ip, ip, #45056	; 0xb000
   11b9c:	ldr	pc, [ip, #2332]!	; 0x91c

00011ba0 <pthread_attr_setdetachstate@plt>:
   11ba0:	add	ip, pc, #1048576	; 0x100000
   11ba4:	add	ip, ip, #45056	; 0xb000
   11ba8:	ldr	pc, [ip, #2324]!	; 0x914

00011bac <mchar_async_cache_delete@plt>:
   11bac:	add	ip, pc, #1048576	; 0x100000
   11bb0:	add	ip, ip, #45056	; 0xb000
   11bb4:	ldr	pc, [ip, #2316]!	; 0x90c

00011bb8 <mcobject_clean@plt>:
   11bb8:	add	ip, pc, #1048576	; 0x100000
   11bbc:	add	ip, ip, #45056	; 0xb000
   11bc0:	ldr	pc, [ip, #2308]!	; 0x904

00011bc4 <myhtml_token_node_clean@plt>:
   11bc4:	add	ip, pc, #1048576	; 0x100000
   11bc8:	add	ip, ip, #45056	; 0xb000
   11bcc:	ldr	pc, [ip, #2300]!	; 0x8fc

00011bd0 <myhtml_token_delete@plt>:
   11bd0:	add	ip, pc, #1048576	; 0x100000
   11bd4:	add	ip, ip, #45056	; 0xb000
   11bd8:	ldr	pc, [ip, #2292]!	; 0x8f4

00011bdc <strncmp@plt>:
   11bdc:	add	ip, pc, #1048576	; 0x100000
   11be0:	add	ip, ip, #45056	; 0xb000
   11be4:	ldr	pc, [ip, #2284]!	; 0x8ec

00011be8 <mcsimple_get_by_absolute_position@plt>:
   11be8:	add	ip, pc, #1048576	; 0x100000
   11bec:	add	ip, ip, #45056	; 0xb000
   11bf0:	ldr	pc, [ip, #2276]!	; 0x8e4

00011bf4 <mcsync_mutex_try_lock@plt>:
   11bf4:	add	ip, pc, #1048576	; 0x100000
   11bf8:	add	ip, ip, #45056	; 0xb000
   11bfc:	ldr	pc, [ip, #2268]!	; 0x8dc

00011c00 <myhtml_tree_clear_stack_back_table_context@plt>:
   11c00:	add	ip, pc, #1048576	; 0x100000
   11c04:	add	ip, ip, #45056	; 0xb000
   11c08:	ldr	pc, [ip, #2260]!	; 0x8d4

00011c0c <myhtml_tree_token_list_clean@plt>:
   11c0c:	add	ip, pc, #1048576	; 0x100000
   11c10:	add	ip, ip, #45056	; 0xb000
   11c14:	ldr	pc, [ip, #2252]!	; 0x8cc

00011c18 <myhtml_parser_stream@plt>:
   11c18:	add	ip, pc, #1048576	; 0x100000
   11c1c:	add	ip, ip, #45056	; 0xb000
   11c20:	ldr	pc, [ip, #2244]!	; 0x8c4

00011c24 <myhtml_token_create@plt>:
   11c24:	add	ip, pc, #1048576	; 0x100000
   11c28:	add	ip, ip, #45056	; 0xb000
   11c2c:	ldr	pc, [ip, #2236]!	; 0x8bc

00011c30 <myhtml_parser_token_data_to_string_lowercase@plt>:
   11c30:	add	ip, pc, #1048576	; 0x100000
   11c34:	add	ip, ip, #45056	; 0xb000
   11c38:	ldr	pc, [ip, #2228]!	; 0x8b4

00011c3c <myencoding_detect_utf_8@plt>:
   11c3c:	add	ip, pc, #1048576	; 0x100000
   11c40:	add	ip, ip, #45056	; 0xb000
   11c44:	ldr	pc, [ip, #2220]!	; 0x8ac

00011c48 <mcsync_spin_unlock@plt>:
   11c48:	add	ip, pc, #1048576	; 0x100000
   11c4c:	add	ip, ip, #45056	; 0xb000
   11c50:	ldr	pc, [ip, #2212]!	; 0x8a4

00011c54 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   11c54:	add	ip, pc, #1048576	; 0x100000
   11c58:	add	ip, ip, #45056	; 0xb000
   11c5c:	ldr	pc, [ip, #2204]!	; 0x89c

00011c60 <mcsync_mutex_lock@plt>:
   11c60:	add	ip, pc, #1048576	; 0x100000
   11c64:	add	ip, ip, #45056	; 0xb000
   11c68:	ldr	pc, [ip, #2196]!	; 0x894

00011c6c <mcobject_async_clean@plt>:
   11c6c:	add	ip, pc, #1048576	; 0x100000
   11c70:	add	ip, ip, #45056	; 0xb000
   11c74:	ldr	pc, [ip, #2188]!	; 0x88c

00011c78 <myhtml_tag_clean@plt>:
   11c78:	add	ip, pc, #1048576	; 0x100000
   11c7c:	add	ip, ip, #45056	; 0xb000
   11c80:	ldr	pc, [ip, #2180]!	; 0x884

00011c84 <mythread_thread_attr_destroy@plt>:
   11c84:	add	ip, pc, #1048576	; 0x100000
   11c88:	add	ip, ip, #45056	; 0xb000
   11c8c:	ldr	pc, [ip, #2172]!	; 0x87c

00011c90 <mycore_string_clean_all@plt>:
   11c90:	add	ip, pc, #1048576	; 0x100000
   11c94:	add	ip, ip, #45056	; 0xb000
   11c98:	ldr	pc, [ip, #2164]!	; 0x874

00011c9c <myhtml_tree_node_clean@plt>:
   11c9c:	add	ip, pc, #1048576	; 0x100000
   11ca0:	add	ip, ip, #45056	; 0xb000
   11ca4:	ldr	pc, [ip, #2156]!	; 0x86c

00011ca8 <mythread_init@plt>:
   11ca8:	add	ip, pc, #1048576	; 0x100000
   11cac:	add	ip, ip, #45056	; 0xb000
   11cb0:	ldr	pc, [ip, #2148]!	; 0x864

Disassembly of section .text:

00011cc0 <mycore_incoming_buffer_add@@Base-0x124>:
   11cc0:	ldr	r3, [pc, #20]	; 11cdc <mythread_init@plt+0x34>
   11cc4:	ldr	r2, [pc, #20]	; 11ce0 <mythread_init@plt+0x38>
   11cc8:	add	r3, pc, r3
   11ccc:	ldr	r2, [r3, r2]
   11cd0:	cmp	r2, #0
   11cd4:	bxeq	lr
   11cd8:	b	114ec <__gmon_start__@plt>
   11cdc:	andseq	fp, r0, r0, lsr r3
   11ce0:	andeq	r0, r0, r8, lsl #13
   11ce4:	ldr	r0, [pc, #44]	; 11d18 <mythread_init@plt+0x70>
   11ce8:	ldr	r3, [pc, #44]	; 11d1c <mythread_init@plt+0x74>
   11cec:	add	r0, pc, r0
   11cf0:	add	r3, pc, r3
   11cf4:	cmp	r3, r0
   11cf8:	ldr	r3, [pc, #32]	; 11d20 <mythread_init@plt+0x78>
   11cfc:	add	r3, pc, r3
   11d00:	bxeq	lr
   11d04:	ldr	r2, [pc, #24]	; 11d24 <mythread_init@plt+0x7c>
   11d08:	ldr	r3, [r3, r2]
   11d0c:	cmp	r3, #0
   11d10:	bxeq	lr
   11d14:	bx	r3
   11d18:			; <UNDEFINED> instruction: 0x0010baf0
   11d1c:	andseq	fp, r0, ip, ror #21
   11d20:			; <UNDEFINED> instruction: 0x0010b2fc
   11d24:	andeq	r0, r0, r4, asr r5
   11d28:	ldr	r0, [pc, #56]	; 11d68 <mythread_init@plt+0xc0>
   11d2c:	ldr	r3, [pc, #56]	; 11d6c <mythread_init@plt+0xc4>
   11d30:	add	r0, pc, r0
   11d34:	add	r3, pc, r3
   11d38:	sub	r1, r3, r0
   11d3c:	ldr	r3, [pc, #44]	; 11d70 <mythread_init@plt+0xc8>
   11d40:	asr	r1, r1, #2
   11d44:	add	r3, pc, r3
   11d48:	add	r1, r1, r1, lsr #31
   11d4c:	asrs	r1, r1, #1
   11d50:	bxeq	lr
   11d54:	ldr	r2, [pc, #24]	; 11d74 <mythread_init@plt+0xcc>
   11d58:	ldr	r3, [r3, r2]
   11d5c:	cmp	r3, #0
   11d60:	bxeq	lr
   11d64:	bx	r3
   11d68:	andseq	fp, r0, ip, lsr #21
   11d6c:	andseq	fp, r0, r8, lsr #21
   11d70:			; <UNDEFINED> instruction: 0x0010b2b4
   11d74:	muleq	r0, r8, r7
   11d78:	ldr	r3, [pc, #76]	; 11dcc <mythread_init@plt+0x124>
   11d7c:	ldr	r2, [pc, #76]	; 11dd0 <mythread_init@plt+0x128>
   11d80:	add	r3, pc, r3
   11d84:	add	r2, pc, r2
   11d88:	ldrb	r3, [r3]
   11d8c:	cmp	r3, #0
   11d90:	bxne	lr
   11d94:	ldr	r3, [pc, #56]	; 11dd4 <mythread_init@plt+0x12c>
   11d98:	push	{r4, lr}
   11d9c:	ldr	r3, [r2, r3]
   11da0:	cmp	r3, #0
   11da4:	beq	11db4 <mythread_init@plt+0x10c>
   11da8:	ldr	r3, [pc, #40]	; 11dd8 <mythread_init@plt+0x130>
   11dac:	ldr	r0, [pc, r3]
   11db0:	bl	10eb0 <__cxa_finalize@plt>
   11db4:	bl	11ce4 <mythread_init@plt+0x3c>
   11db8:	ldr	r3, [pc, #28]	; 11ddc <mythread_init@plt+0x134>
   11dbc:	mov	r2, #1
   11dc0:	add	r3, pc, r3
   11dc4:	strb	r2, [r3]
   11dc8:	pop	{r4, pc}
   11dcc:	andseq	fp, r0, ip, asr sl
   11dd0:	andseq	fp, r0, r4, ror r2
   11dd4:	andeq	r0, r0, r0, asr #10
   11dd8:	andseq	fp, r0, ip, lsr #20
   11ddc:	andseq	fp, r0, ip, lsl sl
   11de0:	b	11d28 <mythread_init@plt+0x80>

00011de4 <mycore_incoming_buffer_add@@Base>:
   11de4:	push	{r4, r5, r6, r7, fp, lr}
   11de8:	add	fp, sp, #16
   11dec:	mov	r4, r0
   11df0:	mov	r0, r1
   11df4:	mov	r1, #0
   11df8:	mov	r5, r3
   11dfc:	mov	r6, r2
   11e00:	mov	r7, #0
   11e04:	bl	11828 <mcobject_malloc@plt>
   11e08:	cmp	r4, #0
   11e0c:	stm	r0, {r6, r7}
   11e10:	str	r5, [r0, #8]
   11e14:	beq	11e3c <mycore_incoming_buffer_add@@Base+0x58>
   11e18:	ldr	r1, [r4, #8]
   11e1c:	ldr	r2, [r4, #12]
   11e20:	add	r1, r1, r2
   11e24:	str	r1, [r0, #12]
   11e28:	str	r0, [r4, #20]
   11e2c:	mov	r1, #0
   11e30:	str	r4, [r0, #16]
   11e34:	str	r1, [r0, #20]
   11e38:	pop	{r4, r5, r6, r7, fp, pc}
   11e3c:	str	r7, [r0, #12]
   11e40:	mov	r1, #0
   11e44:	str	r4, [r0, #16]
   11e48:	str	r1, [r0, #20]
   11e4c:	pop	{r4, r5, r6, r7, fp, pc}

00011e50 <mycore_incoming_buffer_clean@@Base>:
   11e50:	vmov.i32	q8, #0	; 0x00000000
   11e54:	mov	r1, #0
   11e58:	mov	r2, #20
   11e5c:	str	r1, [r0, #16]
   11e60:	vst1.32	{d16-d17}, [r0], r2
   11e64:	str	r1, [r0]
   11e68:	bx	lr

00011e6c <mycore_incoming_buffer_split@@Base>:
   11e6c:	push	{r4, r5, r6, sl, fp, lr}
   11e70:	add	fp, sp, #16
   11e74:	mov	r4, r0
   11e78:	ldr	r0, [r0, #12]
   11e7c:	mov	r6, #0
   11e80:	sub	r5, r2, r0
   11e84:	mov	r0, r1
   11e88:	mov	r1, #0
   11e8c:	bl	11828 <mcobject_malloc@plt>
   11e90:	ldr	r1, [r4, #8]
   11e94:	sub	r1, r1, r5
   11e98:	str	r1, [r0, #8]
   11e9c:	str	r1, [r0, #4]
   11ea0:	ldr	r1, [r4]
   11ea4:	add	r1, r1, r5
   11ea8:	str	r1, [r0]
   11eac:	ldr	r1, [r4, #12]
   11eb0:	str	r4, [r0, #16]
   11eb4:	str	r6, [r0, #20]
   11eb8:	add	r1, r1, r5
   11ebc:	str	r1, [r0, #12]
   11ec0:	str	r0, [r4, #20]
   11ec4:	str	r5, [r4, #4]
   11ec8:	str	r5, [r4, #8]
   11ecc:	pop	{r4, r5, r6, sl, fp, pc}

00011ed0 <mycore_incoming_buffer_find_by_position@@Base>:
   11ed0:	ldr	r2, [r0, #12]
   11ed4:	cmp	r2, r1
   11ed8:	bcs	11f0c <mycore_incoming_buffer_find_by_position@@Base+0x3c>
   11edc:	ldr	r3, [r0, #8]
   11ee0:	add	r2, r3, r2
   11ee4:	cmp	r2, r1
   11ee8:	bxcs	lr
   11eec:	ldr	r0, [r0, #20]
   11ef0:	cmp	r0, #0
   11ef4:	moveq	r0, #0
   11ef8:	bxeq	lr
   11efc:	ldr	r2, [r0, #8]
   11f00:	ldr	r3, [r0, #12]
   11f04:	add	r2, r2, r3
   11f08:	b	11ee4 <mycore_incoming_buffer_find_by_position@@Base+0x14>
   11f0c:	bls	11f2c <mycore_incoming_buffer_find_by_position@@Base+0x5c>
   11f10:	ldr	r0, [r0, #16]
   11f14:	cmp	r0, #0
   11f18:	moveq	r0, #0
   11f1c:	bxeq	lr
   11f20:	ldr	r2, [r0, #12]
   11f24:	cmp	r2, r1
   11f28:	bhi	11f10 <mycore_incoming_buffer_find_by_position@@Base+0x40>
   11f2c:	bx	lr

00011f30 <mycore_incoming_buffer_data@@Base>:
   11f30:	ldr	r0, [r0]
   11f34:	bx	lr

00011f38 <mycore_incoming_buffer_length@@Base>:
   11f38:	ldr	r0, [r0, #4]
   11f3c:	bx	lr

00011f40 <mycore_incoming_buffer_size@@Base>:
   11f40:	ldr	r0, [r0, #8]
   11f44:	bx	lr

00011f48 <mycore_incoming_buffer_offset@@Base>:
   11f48:	ldr	r0, [r0, #12]
   11f4c:	bx	lr

00011f50 <mycore_incoming_buffer_relative_begin@@Base>:
   11f50:	ldr	r0, [r0, #12]
   11f54:	sub	r0, r1, r0
   11f58:	bx	lr

00011f5c <mycore_incoming_buffer_available_length@@Base>:
   11f5c:	ldr	r0, [r0, #8]
   11f60:	add	r3, r2, r1
   11f64:	cmp	r3, r0
   11f68:	subhi	r2, r0, r1
   11f6c:	mov	r0, r2
   11f70:	bx	lr

00011f74 <mycore_incoming_buffer_next@@Base>:
   11f74:	ldr	r0, [r0, #20]
   11f78:	bx	lr

00011f7c <mycore_incoming_buffer_prev@@Base>:
   11f7c:	ldr	r0, [r0, #16]
   11f80:	bx	lr

00011f84 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   11f84:	push	{r4, r5, r6, sl, fp, lr}
   11f88:	add	fp, sp, #16
   11f8c:	ldr	r3, [r0]
   11f90:	ldr	r5, [r1]
   11f94:	ldr	r2, [r3, #8]
   11f98:	cmp	r5, r2
   11f9c:	bcc	11fac <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x28>
   11fa0:	mov	r5, #0
   11fa4:	str	r5, [r1]
   11fa8:	ldr	r3, [r3, #20]
   11fac:	mov	lr, #0
   11fb0:	cmp	r3, #0
   11fb4:	beq	12004 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x80>
   11fb8:	ldr	r6, [r3]
   11fbc:	ldrb	r4, [r6, r5]
   11fc0:	sub	r2, r4, #48	; 0x30
   11fc4:	cmp	r2, #9
   11fc8:	bhi	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   11fcc:	add	r5, r5, #1
   11fd0:	str	r5, [r1]
   11fd4:	ldr	ip, [pc, #540]	; 121f8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x274>
   11fd8:	ldr	r2, [r3, #8]
   11fdc:	add	ip, pc, ip
   11fe0:	cmp	r5, r2
   11fe4:	ldrb	lr, [ip, r4]
   11fe8:	bcs	12014 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x90>
   11fec:	mov	r4, r3
   11ff0:	ldrb	r3, [r6, r5]
   11ff4:	sub	r2, r3, #48	; 0x30
   11ff8:	cmp	r2, #10
   11ffc:	bcc	1203c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb8>
   12000:	b	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   12004:	mov	r3, #0
   12008:	str	r3, [r0]
   1200c:	mov	r0, lr
   12010:	pop	{r4, r5, r6, sl, fp, pc}
   12014:	ldr	r4, [r3, #20]
   12018:	cmp	r4, #0
   1201c:	beq	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   12020:	mov	r5, #0
   12024:	str	r5, [r1]
   12028:	ldr	r6, [r3]
   1202c:	ldrb	r3, [r6, r5]
   12030:	sub	r2, r3, #48	; 0x30
   12034:	cmp	r2, #10
   12038:	bcs	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   1203c:	ldrb	r2, [ip, r3]
   12040:	add	r5, r5, #1
   12044:	str	r5, [r1]
   12048:	orr	lr, r2, lr, lsl #4
   1204c:	ldr	r2, [r4, #8]
   12050:	cmp	r5, r2
   12054:	bcs	12070 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xec>
   12058:	mov	r3, r4
   1205c:	ldrb	r4, [r6, r5]
   12060:	sub	r2, r4, #48	; 0x30
   12064:	cmp	r2, #9
   12068:	bls	12098 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x114>
   1206c:	b	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   12070:	ldr	r3, [r4, #20]
   12074:	cmp	r3, #0
   12078:	beq	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   1207c:	mov	r5, #0
   12080:	str	r5, [r1]
   12084:	ldr	r6, [r4]
   12088:	ldrb	r4, [r6, r5]
   1208c:	sub	r2, r4, #48	; 0x30
   12090:	cmp	r2, #9
   12094:	bhi	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   12098:	ldrb	r2, [ip, r4]
   1209c:	add	r5, r5, #1
   120a0:	str	r5, [r1]
   120a4:	orr	lr, r2, lr, lsl #4
   120a8:	ldr	r2, [r3, #8]
   120ac:	cmp	r5, r2
   120b0:	bcs	120cc <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x148>
   120b4:	mov	r4, r3
   120b8:	ldrb	r3, [r6, r5]
   120bc:	sub	r2, r3, #48	; 0x30
   120c0:	cmp	r2, #9
   120c4:	bls	120f4 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x170>
   120c8:	b	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   120cc:	ldr	r4, [r3, #20]
   120d0:	cmp	r4, #0
   120d4:	beq	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   120d8:	mov	r5, #0
   120dc:	str	r5, [r1]
   120e0:	ldr	r6, [r3]
   120e4:	ldrb	r3, [r6, r5]
   120e8:	sub	r2, r3, #48	; 0x30
   120ec:	cmp	r2, #9
   120f0:	bhi	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   120f4:	ldrb	r2, [ip, r3]
   120f8:	add	r5, r5, #1
   120fc:	str	r5, [r1]
   12100:	orr	lr, r2, lr, lsl #4
   12104:	ldr	r2, [r4, #8]
   12108:	cmp	r5, r2
   1210c:	bcs	12128 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x1a4>
   12110:	mov	r3, r4
   12114:	ldrb	r4, [r6, r5]
   12118:	sub	r2, r4, #48	; 0x30
   1211c:	cmp	r2, #9
   12120:	bls	12150 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x1cc>
   12124:	b	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   12128:	ldr	r3, [r4, #20]
   1212c:	cmp	r3, #0
   12130:	beq	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   12134:	mov	r5, #0
   12138:	str	r5, [r1]
   1213c:	ldr	r6, [r4]
   12140:	ldrb	r4, [r6, r5]
   12144:	sub	r2, r4, #48	; 0x30
   12148:	cmp	r2, #9
   1214c:	bhi	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   12150:	ldrb	r2, [ip, r4]
   12154:	add	r5, r5, #1
   12158:	str	r5, [r1]
   1215c:	orr	lr, r2, lr, lsl #4
   12160:	ldr	r2, [r3, #8]
   12164:	cmp	r5, r2
   12168:	bcs	12184 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x200>
   1216c:	mov	r4, r3
   12170:	ldrb	r2, [r6, r5]
   12174:	sub	r3, r2, #48	; 0x30
   12178:	cmp	r3, #9
   1217c:	bls	121ac <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x228>
   12180:	b	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   12184:	ldr	r4, [r3, #20]
   12188:	cmp	r4, #0
   1218c:	beq	121ec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x268>
   12190:	mov	r5, #0
   12194:	str	r5, [r1]
   12198:	ldr	r6, [r3]
   1219c:	ldrb	r2, [r6, r5]
   121a0:	sub	r3, r2, #48	; 0x30
   121a4:	cmp	r3, #9
   121a8:	bhi	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   121ac:	ldrb	r2, [ip, r2]
   121b0:	add	r3, r5, #1
   121b4:	str	r3, [r1]
   121b8:	orr	lr, r2, lr, lsl #4
   121bc:	ldr	r2, [r4, #8]
   121c0:	cmp	r3, r2
   121c4:	bcc	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   121c8:	ldr	r3, [r4, #20]
   121cc:	cmp	r3, #0
   121d0:	beq	121e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x264>
   121d4:	mov	r2, #0
   121d8:	str	r2, [r1]
   121dc:	str	r3, [r0]
   121e0:	mov	r0, lr
   121e4:	pop	{r4, r5, r6, sl, fp, pc}
   121e8:	mov	r3, r4
   121ec:	str	r3, [r0]
   121f0:	mov	r0, lr
   121f4:	pop	{r4, r5, r6, sl, fp, pc}
   121f8:	andeq	r3, r2, ip, asr #25

000121fc <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   121fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12200:	add	fp, sp, #28
   12204:	ldr	r6, [r0]
   12208:	mov	ip, r2
   1220c:	ldr	r2, [r3]
   12210:	ldr	r7, [r6, #8]
   12214:	cmp	r2, r7
   12218:	bcc	12230 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x34>
   1221c:	ldr	r6, [r6, #20]
   12220:	cmp	r6, #0
   12224:	beq	1255c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x360>
   12228:	mov	r2, #0
   1222c:	str	r2, [r3]
   12230:	cmp	ip, #0
   12234:	beq	12540 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x344>
   12238:	ldr	r5, [r6]
   1223c:	ldr	r9, [pc, #800]	; 12564 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x368>
   12240:	ldr	r8, [pc, #800]	; 12568 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x36c>
   12244:	mov	lr, #0
   12248:	add	r9, pc, r9
   1224c:	add	r8, pc, r8
   12250:	ldrb	r4, [r5, r2]
   12254:	cmp	r4, #92	; 0x5c
   12258:	beq	12278 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x7c>
   1225c:	b	122e4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xe8>
   12260:	add	lr, lr, #1
   12264:	cmp	ip, lr
   12268:	beq	12548 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x34c>
   1226c:	ldrb	r4, [r5, r2]
   12270:	cmp	r4, #92	; 0x5c
   12274:	bne	122e4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xe8>
   12278:	add	r2, r2, #1
   1227c:	str	r2, [r3]
   12280:	ldr	r4, [r6, #8]
   12284:	cmp	r2, r4
   12288:	bcc	12298 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x9c>
   1228c:	mov	r2, #0
   12290:	str	r2, [r3]
   12294:	ldr	r6, [r6, #20]
   12298:	cmp	r6, #0
   1229c:	beq	1232c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x130>
   122a0:	ldr	r5, [r6]
   122a4:	ldrb	r4, [r5, r2]
   122a8:	sub	r7, r4, #48	; 0x30
   122ac:	cmp	r7, #10
   122b0:	bcs	12330 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x134>
   122b4:	add	r2, r2, #1
   122b8:	ldrb	sl, [r8, r4]
   122bc:	str	r2, [r3]
   122c0:	ldr	r4, [r6, #8]
   122c4:	cmp	r2, r4
   122c8:	bcs	12338 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   122cc:	mov	r4, r6
   122d0:	ldrb	r6, [r5, r2]
   122d4:	sub	r7, r6, #48	; 0x30
   122d8:	cmp	r7, #10
   122dc:	bcc	12360 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x164>
   122e0:	b	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   122e4:	ldrb	r7, [r1, lr]
   122e8:	ldrb	r4, [r9, r4]
   122ec:	ldrb	r7, [r9, r7]
   122f0:	cmp	r4, r7
   122f4:	bne	12554 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x358>
   122f8:	add	r2, r2, #1
   122fc:	str	r2, [r3]
   12300:	ldr	r4, [r6, #8]
   12304:	cmp	r2, r4
   12308:	bcc	12260 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   1230c:	ldr	r4, [r6, #20]
   12310:	cmp	r4, #0
   12314:	beq	12550 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x354>
   12318:	ldr	r5, [r4]
   1231c:	mov	r2, #0
   12320:	mov	r6, r4
   12324:	str	r2, [r3]
   12328:	b	12260 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   1232c:	mov	r6, #0
   12330:	mov	sl, #0
   12334:	b	12518 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x31c>
   12338:	ldr	r4, [r6, #20]
   1233c:	cmp	r4, #0
   12340:	beq	12510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x314>
   12344:	mov	r2, #0
   12348:	str	r2, [r3]
   1234c:	ldr	r5, [r6]
   12350:	ldrb	r6, [r5, r2]
   12354:	sub	r7, r6, #48	; 0x30
   12358:	cmp	r7, #10
   1235c:	bcs	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   12360:	ldrb	r6, [r8, r6]
   12364:	add	r2, r2, #1
   12368:	str	r2, [r3]
   1236c:	orr	sl, r6, sl, lsl #4
   12370:	ldr	r6, [r4, #8]
   12374:	cmp	r2, r6
   12378:	bcs	12394 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   1237c:	mov	r6, r4
   12380:	ldrb	r4, [r5, r2]
   12384:	sub	r7, r4, #48	; 0x30
   12388:	cmp	r7, #9
   1238c:	bhi	12510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x314>
   12390:	b	123bc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x1c0>
   12394:	ldr	r6, [r4, #20]
   12398:	cmp	r6, #0
   1239c:	beq	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   123a0:	mov	r2, #0
   123a4:	str	r2, [r3]
   123a8:	ldr	r5, [r4]
   123ac:	ldrb	r4, [r5, r2]
   123b0:	sub	r7, r4, #48	; 0x30
   123b4:	cmp	r7, #9
   123b8:	bhi	12510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x314>
   123bc:	ldrb	r4, [r8, r4]
   123c0:	add	r2, r2, #1
   123c4:	str	r2, [r3]
   123c8:	orr	sl, r4, sl, lsl #4
   123cc:	ldr	r4, [r6, #8]
   123d0:	cmp	r2, r4
   123d4:	bcs	123f0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x1f4>
   123d8:	mov	r4, r6
   123dc:	ldrb	r6, [r5, r2]
   123e0:	sub	r7, r6, #48	; 0x30
   123e4:	cmp	r7, #9
   123e8:	bhi	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   123ec:	b	12418 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x21c>
   123f0:	ldr	r4, [r6, #20]
   123f4:	cmp	r4, #0
   123f8:	beq	12510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x314>
   123fc:	mov	r2, #0
   12400:	str	r2, [r3]
   12404:	ldr	r5, [r6]
   12408:	ldrb	r6, [r5, r2]
   1240c:	sub	r7, r6, #48	; 0x30
   12410:	cmp	r7, #9
   12414:	bhi	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   12418:	ldrb	r6, [r8, r6]
   1241c:	add	r2, r2, #1
   12420:	str	r2, [r3]
   12424:	orr	sl, r6, sl, lsl #4
   12428:	ldr	r6, [r4, #8]
   1242c:	cmp	r2, r6
   12430:	bcs	1244c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x250>
   12434:	mov	r6, r4
   12438:	ldrb	r4, [r5, r2]
   1243c:	sub	r7, r4, #48	; 0x30
   12440:	cmp	r7, #9
   12444:	bhi	12510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x314>
   12448:	b	12474 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x278>
   1244c:	ldr	r6, [r4, #20]
   12450:	cmp	r6, #0
   12454:	beq	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   12458:	mov	r2, #0
   1245c:	str	r2, [r3]
   12460:	ldr	r5, [r4]
   12464:	ldrb	r4, [r5, r2]
   12468:	sub	r7, r4, #48	; 0x30
   1246c:	cmp	r7, #9
   12470:	bhi	12510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x314>
   12474:	ldrb	r4, [r8, r4]
   12478:	add	r2, r2, #1
   1247c:	str	r2, [r3]
   12480:	orr	sl, r4, sl, lsl #4
   12484:	ldr	r4, [r6, #8]
   12488:	cmp	r2, r4
   1248c:	bcs	124a8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x2ac>
   12490:	mov	r4, r6
   12494:	ldrb	r5, [r5, r2]
   12498:	sub	r6, r5, #48	; 0x30
   1249c:	cmp	r6, #9
   124a0:	bhi	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   124a4:	b	124d0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x2d4>
   124a8:	ldr	r4, [r6, #20]
   124ac:	cmp	r4, #0
   124b0:	beq	12510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x314>
   124b4:	mov	r2, #0
   124b8:	str	r2, [r3]
   124bc:	ldr	r5, [r6]
   124c0:	ldrb	r5, [r5, r2]
   124c4:	sub	r6, r5, #48	; 0x30
   124c8:	cmp	r6, #9
   124cc:	bhi	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   124d0:	ldrb	r5, [r8, r5]
   124d4:	add	r2, r2, #1
   124d8:	str	r2, [r3]
   124dc:	orr	sl, r5, sl, lsl #4
   124e0:	ldr	r5, [r4, #8]
   124e4:	cmp	r2, r5
   124e8:	bcc	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   124ec:	ldr	r6, [r4, #20]
   124f0:	cmp	r6, #0
   124f4:	beq	1250c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x310>
   124f8:	mov	r2, #0
   124fc:	str	r2, [r3]
   12500:	cmp	sl, #255	; 0xff
   12504:	bls	12518 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x31c>
   12508:	b	12554 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x358>
   1250c:	mov	r6, r4
   12510:	cmp	sl, #255	; 0xff
   12514:	bhi	12554 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x358>
   12518:	ldrb	r5, [r1, lr]
   1251c:	ldrb	r4, [r9, sl]
   12520:	ldrb	r5, [r9, r5]
   12524:	cmp	r4, r5
   12528:	bne	12554 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x358>
   1252c:	ldr	r5, [r6]
   12530:	ldr	r4, [r6, #8]
   12534:	cmp	r2, r4
   12538:	bcc	12260 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   1253c:	b	1230c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x110>
   12540:	mov	lr, #0
   12544:	b	12554 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x358>
   12548:	mov	lr, ip
   1254c:	b	12554 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x358>
   12550:	add	lr, lr, #1
   12554:	sub	ip, ip, lr
   12558:	str	r6, [r0]
   1255c:	mov	r0, ip
   12560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12564:	andeq	r3, r2, r0, ror #22
   12568:	andeq	r3, r2, ip, asr sl

0001256c <mycore_string_init@@Base>:
   1256c:	push	{r4, r5, r6, r7, fp, lr}
   12570:	add	fp, sp, #16
   12574:	mov	r5, r2
   12578:	mov	r2, r3
   1257c:	mov	r4, r3
   12580:	mov	r6, r1
   12584:	mov	r7, r0
   12588:	bl	1172c <mchar_async_malloc@plt>
   1258c:	mov	r1, #0
   12590:	stm	r5, {r0, r4}
   12594:	str	r1, [r5, #8]
   12598:	str	r7, [r5, #12]
   1259c:	str	r6, [r5, #16]
   125a0:	pop	{r4, r5, r6, r7, fp, pc}

000125a4 <mycore_string_clean@@Base>:
   125a4:	mov	r1, #0
   125a8:	str	r1, [r0, #8]
   125ac:	bx	lr

000125b0 <mycore_string_clean_all@@Base>:
   125b0:	vmov.i32	q8, #0	; 0x00000000
   125b4:	mov	r1, #0
   125b8:	vst1.32	{d16-d17}, [r0]!
   125bc:	str	r1, [r0]
   125c0:	bx	lr

000125c4 <mycore_string_destroy@@Base>:
   125c4:	push	{r4, r5, r6, sl, fp, lr}
   125c8:	add	fp, sp, #16
   125cc:	mov	r4, #0
   125d0:	cmp	r0, #0
   125d4:	beq	12610 <mycore_string_destroy@@Base+0x4c>
   125d8:	ldr	r2, [r0]
   125dc:	mov	r6, r1
   125e0:	mov	r5, r0
   125e4:	cmp	r2, #0
   125e8:	beq	12600 <mycore_string_destroy@@Base+0x3c>
   125ec:	ldr	r0, [r5, #12]
   125f0:	cmp	r0, #0
   125f4:	beq	12600 <mycore_string_destroy@@Base+0x3c>
   125f8:	ldr	r1, [r5, #16]
   125fc:	bl	115c4 <mchar_async_free@plt>
   12600:	cmp	r6, #0
   12604:	beq	12618 <mycore_string_destroy@@Base+0x54>
   12608:	mov	r0, r5
   1260c:	bl	11a98 <mycore_free@plt>
   12610:	mov	r0, r4
   12614:	pop	{r4, r5, r6, sl, fp, pc}
   12618:	mov	r0, r5
   1261c:	pop	{r4, r5, r6, sl, fp, pc}

00012620 <mycore_string_raw_clean@@Base>:
   12620:	mov	r1, #0
   12624:	str	r1, [r0, #8]
   12628:	bx	lr

0001262c <mycore_string_raw_clean_all@@Base>:
   1262c:	mov	r1, #0
   12630:	str	r1, [r0]
   12634:	str	r1, [r0, #4]
   12638:	str	r1, [r0, #8]
   1263c:	bx	lr

00012640 <mycore_string_raw_destroy@@Base>:
   12640:	push	{r4, r5, r6, sl, fp, lr}
   12644:	add	fp, sp, #16
   12648:	mov	r4, #0
   1264c:	cmp	r0, #0
   12650:	beq	12684 <mycore_string_raw_destroy@@Base+0x44>
   12654:	mov	r5, r0
   12658:	ldr	r0, [r0]
   1265c:	mov	r6, r1
   12660:	cmp	r0, #0
   12664:	beq	12674 <mycore_string_raw_destroy@@Base+0x34>
   12668:	bl	11a98 <mycore_free@plt>
   1266c:	mov	r0, #0
   12670:	str	r0, [r5]
   12674:	cmp	r6, #0
   12678:	beq	1268c <mycore_string_raw_destroy@@Base+0x4c>
   1267c:	mov	r0, r5
   12680:	bl	11a98 <mycore_free@plt>
   12684:	mov	r0, r4
   12688:	pop	{r4, r5, r6, sl, fp, pc}
   1268c:	mov	r0, r5
   12690:	pop	{r4, r5, r6, sl, fp, pc}

00012694 <mycore_string_realloc@@Base>:
   12694:	push	{r4, r5, r6, sl, fp, lr}
   12698:	add	fp, sp, #16
   1269c:	sub	sp, sp, #8
   126a0:	mov	r4, #0
   126a4:	cmp	r0, #0
   126a8:	beq	126d8 <mycore_string_realloc@@Base+0x44>
   126ac:	mov	r6, r0
   126b0:	mov	r5, r1
   126b4:	ldr	r2, [r0]
   126b8:	ldr	r3, [r0, #8]
   126bc:	ldr	r0, [r0, #12]
   126c0:	ldr	r1, [r6, #16]
   126c4:	str	r5, [sp]
   126c8:	bl	11084 <mchar_async_realloc@plt>
   126cc:	cmp	r0, #0
   126d0:	movne	r4, r0
   126d4:	stmne	r6, {r0, r5}
   126d8:	mov	r0, r4
   126dc:	sub	sp, fp, #16
   126e0:	pop	{r4, r5, r6, sl, fp, pc}

000126e4 <mycore_string_data_alloc@@Base>:
   126e4:	b	1172c <mchar_async_malloc@plt>

000126e8 <mycore_string_data_realloc@@Base>:
   126e8:	b	11084 <mchar_async_realloc@plt>

000126ec <mycore_string_data_free@@Base>:
   126ec:	b	115c4 <mchar_async_free@plt>

000126f0 <mycore_string_data@@Base>:
   126f0:	cmp	r0, #0
   126f4:	ldrne	r0, [r0]
   126f8:	moveq	r0, #0
   126fc:	bx	lr

00012700 <mycore_string_length@@Base>:
   12700:	cmp	r0, #0
   12704:	ldrne	r0, [r0, #8]
   12708:	moveq	r0, #0
   1270c:	bx	lr

00012710 <mycore_string_size@@Base>:
   12710:	cmp	r0, #0
   12714:	ldrne	r0, [r0, #4]
   12718:	moveq	r0, #0
   1271c:	bx	lr

00012720 <mycore_string_data_set@@Base>:
   12720:	cmp	r0, #0
   12724:	strne	r1, [r0]
   12728:	moveq	r1, #0
   1272c:	mov	r0, r1
   12730:	bx	lr

00012734 <mycore_string_size_set@@Base>:
   12734:	cmp	r0, #0
   12738:	strne	r1, [r0, #4]
   1273c:	moveq	r1, #0
   12740:	mov	r0, r1
   12744:	bx	lr

00012748 <mycore_string_length_set@@Base>:
   12748:	cmp	r0, #0
   1274c:	strne	r1, [r0, #8]
   12750:	moveq	r1, #0
   12754:	mov	r0, r1
   12758:	bx	lr

0001275c <mycore_string_append@@Base>:
   1275c:	push	{r4, r5, r6, r7, fp, lr}
   12760:	add	fp, sp, #16
   12764:	sub	sp, sp, #8
   12768:	mov	r5, r0
   1276c:	ldr	r0, [r0, #4]
   12770:	mov	r6, r1
   12774:	mov	r4, r2
   12778:	ldr	r3, [r5, #8]
   1277c:	add	r1, r2, r3
   12780:	add	r7, r1, #1
   12784:	cmp	r7, r0
   12788:	bcc	127a8 <mycore_string_append@@Base+0x4c>
   1278c:	ldr	r2, [r5]
   12790:	ldr	r0, [r5, #12]
   12794:	ldr	r1, [r5, #16]
   12798:	str	r7, [sp]
   1279c:	bl	11084 <mchar_async_realloc@plt>
   127a0:	cmp	r0, #0
   127a4:	stmne	r5, {r0, r7}
   127a8:	ldr	r0, [r5]
   127ac:	ldr	r1, [r5, #8]
   127b0:	mov	r2, r4
   127b4:	add	r0, r0, r1
   127b8:	mov	r1, r6
   127bc:	bl	11030 <memcpy@plt>
   127c0:	ldr	r1, [r5, #8]
   127c4:	ldr	r0, [r5]
   127c8:	mov	r2, #0
   127cc:	add	r1, r1, r4
   127d0:	str	r1, [r5, #8]
   127d4:	strb	r2, [r0, r1]
   127d8:	sub	sp, fp, #16
   127dc:	pop	{r4, r5, r6, r7, fp, pc}

000127e0 <mycore_string_append_one@@Base>:
   127e0:	push	{r4, r5, r6, sl, fp, lr}
   127e4:	add	fp, sp, #16
   127e8:	sub	sp, sp, #8
   127ec:	mov	r4, r0
   127f0:	ldr	r0, [r0, #4]
   127f4:	mov	r5, r1
   127f8:	ldr	r3, [r4, #8]
   127fc:	add	r1, r3, #2
   12800:	cmp	r1, r0
   12804:	bcc	12828 <mycore_string_append_one@@Base+0x48>
   12808:	ldr	r2, [r4]
   1280c:	ldr	r0, [r4, #12]
   12810:	ldr	r1, [r4, #16]
   12814:	add	r6, r3, #3
   12818:	str	r6, [sp]
   1281c:	bl	11084 <mchar_async_realloc@plt>
   12820:	cmp	r0, #0
   12824:	stmne	r4, {r0, r6}
   12828:	ldr	r0, [r4]
   1282c:	ldr	r1, [r4, #8]
   12830:	mov	r2, #0
   12834:	strb	r5, [r0, r1]
   12838:	ldr	r1, [r4, #8]
   1283c:	ldr	r0, [r4]
   12840:	add	r1, r1, #1
   12844:	str	r1, [r4, #8]
   12848:	strb	r2, [r0, r1]
   1284c:	sub	sp, fp, #16
   12850:	pop	{r4, r5, r6, sl, fp, pc}

00012854 <mycore_string_append_lowercase@@Base>:
   12854:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12858:	add	fp, sp, #24
   1285c:	sub	sp, sp, #8
   12860:	mov	r5, r0
   12864:	ldr	r0, [r0, #4]
   12868:	mov	r8, r1
   1286c:	mov	r9, r2
   12870:	ldr	r3, [r5, #8]
   12874:	add	r1, r2, r3
   12878:	add	r7, r1, #1
   1287c:	cmp	r7, r0
   12880:	bcc	128a0 <mycore_string_append_lowercase@@Base+0x4c>
   12884:	ldr	r2, [r5]
   12888:	ldr	r0, [r5, #12]
   1288c:	ldr	r1, [r5, #16]
   12890:	str	r7, [sp]
   12894:	bl	11084 <mchar_async_realloc@plt>
   12898:	cmp	r0, #0
   1289c:	stmne	r5, {r0, r7}
   128a0:	ldr	r0, [r5]
   128a4:	ldr	r1, [r5, #8]
   128a8:	cmp	r9, #0
   128ac:	add	lr, r0, r1
   128b0:	beq	1291c <mycore_string_append_lowercase@@Base+0xc8>
   128b4:	ldr	r1, [pc, #124]	; 12938 <mycore_string_append_lowercase@@Base+0xe4>
   128b8:	and	ip, r9, #1
   128bc:	mov	r2, #0
   128c0:	cmp	r9, #1
   128c4:	add	r1, pc, r1
   128c8:	beq	12908 <mycore_string_append_lowercase@@Base+0xb4>
   128cc:	sub	r7, r9, ip
   128d0:	add	r6, lr, #1
   128d4:	add	r3, r8, #1
   128d8:	mov	r2, #0
   128dc:	add	r0, r3, r2
   128e0:	add	r4, r6, r2
   128e4:	ldrb	r0, [r0, #-1]
   128e8:	ldrb	r0, [r1, r0]
   128ec:	strb	r0, [r4, #-1]
   128f0:	ldrb	r0, [r3, r2]
   128f4:	ldrb	r0, [r1, r0]
   128f8:	strb	r0, [r6, r2]
   128fc:	add	r2, r2, #2
   12900:	cmp	r7, r2
   12904:	bne	128dc <mycore_string_append_lowercase@@Base+0x88>
   12908:	cmp	ip, #0
   1290c:	beq	1291c <mycore_string_append_lowercase@@Base+0xc8>
   12910:	ldrb	r0, [r8, r2]
   12914:	ldrb	r0, [r1, r0]
   12918:	strb	r0, [lr, r2]
   1291c:	mov	r0, #0
   12920:	strb	r0, [lr, r9]
   12924:	ldr	r0, [r5, #8]
   12928:	add	r0, r0, r9
   1292c:	str	r0, [r5, #8]
   12930:	sub	sp, fp, #24
   12934:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12938:	andeq	r3, r2, r4, ror #11

0001293c <mycore_string_copy@@Base>:
   1293c:	push	{r4, r5, r6, r7, fp, lr}
   12940:	add	fp, sp, #16
   12944:	sub	sp, sp, #8
   12948:	mov	r4, r0
   1294c:	ldr	r5, [r1, #8]
   12950:	ldr	r0, [r0, #4]
   12954:	ldr	r6, [r1]
   12958:	ldr	r3, [r4, #8]
   1295c:	add	r1, r5, r3
   12960:	add	r7, r1, #1
   12964:	cmp	r7, r0
   12968:	bcc	12988 <mycore_string_copy@@Base+0x4c>
   1296c:	ldr	r2, [r4]
   12970:	ldr	r0, [r4, #12]
   12974:	ldr	r1, [r4, #16]
   12978:	str	r7, [sp]
   1297c:	bl	11084 <mchar_async_realloc@plt>
   12980:	cmp	r0, #0
   12984:	stmne	r4, {r0, r7}
   12988:	ldr	r0, [r4]
   1298c:	ldr	r1, [r4, #8]
   12990:	mov	r2, r5
   12994:	add	r0, r0, r1
   12998:	mov	r1, r6
   1299c:	bl	11030 <memcpy@plt>
   129a0:	ldr	r1, [r4, #8]
   129a4:	ldr	r0, [r4]
   129a8:	mov	r2, #0
   129ac:	add	r1, r1, r5
   129b0:	str	r1, [r4, #8]
   129b4:	strb	r2, [r0, r1]
   129b8:	sub	sp, fp, #16
   129bc:	pop	{r4, r5, r6, r7, fp, pc}

000129c0 <mycore_string_raw_copy@@Base>:
   129c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   129c4:	add	fp, sp, #24
   129c8:	mov	r3, #0
   129cc:	cmp	r2, #0
   129d0:	strb	r3, [r0, r2]
   129d4:	beq	12ae4 <mycore_string_raw_copy@@Base+0x124>
   129d8:	cmp	r2, #16
   129dc:	bcc	12a7c <mycore_string_raw_copy@@Base+0xbc>
   129e0:	add	r3, r1, r2
   129e4:	add	lr, r0, r2
   129e8:	cmp	r3, r0
   129ec:	cmphi	lr, r1
   129f0:	bhi	12a7c <mycore_string_raw_copy@@Base+0xbc>
   129f4:	bic	ip, r2, #15
   129f8:	mov	r5, #1
   129fc:	subs	r4, ip, #16
   12a00:	add	r6, r5, r4, lsr #4
   12a04:	and	r8, r6, #1
   12a08:	beq	12aec <mycore_string_raw_copy@@Base+0x12c>
   12a0c:	sub	r6, r6, #1
   12a10:	rsb	r5, r8, #0
   12a14:	mvn	r7, r6
   12a18:	mov	r6, #0
   12a1c:	sub	r4, r3, #16
   12a20:	sub	r3, r3, #32
   12a24:	sub	r5, r5, #2
   12a28:	add	r6, r6, #32
   12a2c:	vld1.8	{d16-d17}, [r4]
   12a30:	sub	r4, lr, #16
   12a34:	sub	lr, lr, #32
   12a38:	cmp	r7, r5
   12a3c:	vst1.8	{d16-d17}, [r4]
   12a40:	vld1.8	{d16-d17}, [r3]
   12a44:	vst1.8	{d16-d17}, [lr]
   12a48:	bne	12a1c <mycore_string_raw_copy@@Base+0x5c>
   12a4c:	mvn	r3, r6
   12a50:	cmp	r8, #0
   12a54:	beq	12a74 <mycore_string_raw_copy@@Base+0xb4>
   12a58:	add	r3, r3, r2
   12a5c:	add	r7, r1, r3
   12a60:	add	r3, r0, r3
   12a64:	sub	r7, r7, #15
   12a68:	sub	r3, r3, #15
   12a6c:	vld1.8	{d16-d17}, [r7]
   12a70:	vst1.8	{d16-d17}, [r3]
   12a74:	subs	r2, r2, ip
   12a78:	beq	12ae4 <mycore_string_raw_copy@@Base+0x124>
   12a7c:	ands	r7, r2, #3
   12a80:	sub	r3, r2, #1
   12a84:	beq	12aa4 <mycore_string_raw_copy@@Base+0xe4>
   12a88:	sub	r6, r1, #1
   12a8c:	sub	r5, r0, #1
   12a90:	ldrb	r4, [r6, r2]
   12a94:	subs	r7, r7, #1
   12a98:	strb	r4, [r5, r2]
   12a9c:	sub	r2, r2, #1
   12aa0:	bne	12a90 <mycore_string_raw_copy@@Base+0xd0>
   12aa4:	cmp	r3, #3
   12aa8:	bcc	12ae4 <mycore_string_raw_copy@@Base+0x124>
   12aac:	sub	r1, r1, #4
   12ab0:	sub	r0, r0, #4
   12ab4:	add	r7, r1, r2
   12ab8:	add	r3, r0, r2
   12abc:	ldrb	r6, [r7, #3]
   12ac0:	strb	r6, [r3, #3]
   12ac4:	ldrb	r6, [r7, #2]
   12ac8:	strb	r6, [r3, #2]
   12acc:	ldrb	r7, [r7, #1]
   12ad0:	strb	r7, [r3, #1]
   12ad4:	ldrb	r3, [r1, r2]
   12ad8:	strb	r3, [r0, r2]
   12adc:	subs	r2, r2, #4
   12ae0:	bne	12ab4 <mycore_string_raw_copy@@Base+0xf4>
   12ae4:	mov	r0, #0
   12ae8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12aec:	mvn	r3, #0
   12af0:	cmp	r8, #0
   12af4:	bne	12a58 <mycore_string_raw_copy@@Base+0x98>
   12af8:	b	12a74 <mycore_string_raw_copy@@Base+0xb4>

00012afc <mycore_string_raw_set_replacement_character@@Base>:
   12afc:	ldr	r2, [r0]
   12b00:	mov	r3, #239	; 0xef
   12b04:	strb	r3, [r2, r1]
   12b08:	mov	r3, #191	; 0xbf
   12b0c:	ldr	r2, [r0]
   12b10:	add	r2, r1, r2
   12b14:	strb	r3, [r2, #1]
   12b18:	ldr	r0, [r0]
   12b1c:	add	r0, r1, r0
   12b20:	mov	r1, #189	; 0xbd
   12b24:	strb	r1, [r0, #2]
   12b28:	mov	r0, #3
   12b2c:	bx	lr

00012b30 <mycore_string_append_with_replacement_null_characters@@Base>:
   12b30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b34:	add	fp, sp, #24
   12b38:	sub	sp, sp, #8
   12b3c:	mov	r4, r0
   12b40:	ldr	r0, [r0, #4]
   12b44:	mov	r6, r1
   12b48:	mov	r5, r2
   12b4c:	ldr	r3, [r4, #8]
   12b50:	add	r1, r2, r3
   12b54:	add	r7, r1, #1
   12b58:	cmp	r7, r0
   12b5c:	bcc	12b7c <mycore_string_append_with_replacement_null_characters@@Base+0x4c>
   12b60:	ldr	r2, [r4]
   12b64:	ldr	r0, [r4, #12]
   12b68:	ldr	r1, [r4, #16]
   12b6c:	str	r7, [sp]
   12b70:	bl	11084 <mchar_async_realloc@plt>
   12b74:	cmp	r0, #0
   12b78:	stmne	r4, {r0, r7}
   12b7c:	cmp	r5, #0
   12b80:	beq	12c2c <mycore_string_append_with_replacement_null_characters@@Base+0xfc>
   12b84:	ldr	r0, [r4]
   12b88:	mov	r8, #239	; 0xef
   12b8c:	mov	r9, #191	; 0xbf
   12b90:	ldrb	r1, [r6]
   12b94:	cmp	r1, #0
   12b98:	beq	12bcc <mycore_string_append_with_replacement_null_characters@@Base+0x9c>
   12b9c:	ldr	r2, [r4, #8]
   12ba0:	add	r2, r0, r2
   12ba4:	strb	r1, [r2]
   12ba8:	add	r6, r6, #1
   12bac:	subs	r5, r5, #1
   12bb0:	ldr	r1, [r4, #8]
   12bb4:	add	r1, r1, #1
   12bb8:	str	r1, [r4, #8]
   12bbc:	beq	12c30 <mycore_string_append_with_replacement_null_characters@@Base+0x100>
   12bc0:	ldrb	r1, [r6]
   12bc4:	cmp	r1, #0
   12bc8:	bne	12b9c <mycore_string_append_with_replacement_null_characters@@Base+0x6c>
   12bcc:	ldr	r3, [r4, #8]
   12bd0:	ldr	r0, [r4, #12]
   12bd4:	ldr	r1, [r4, #16]
   12bd8:	ldm	r4, {r2, r7}
   12bdc:	add	r7, r7, #5
   12be0:	str	r7, [sp]
   12be4:	bl	11084 <mchar_async_realloc@plt>
   12be8:	cmp	r0, #0
   12bec:	beq	12bf8 <mycore_string_append_with_replacement_null_characters@@Base+0xc8>
   12bf0:	stm	r4, {r0, r7}
   12bf4:	b	12bfc <mycore_string_append_with_replacement_null_characters@@Base+0xcc>
   12bf8:	ldr	r0, [r4]
   12bfc:	ldr	r1, [r4, #8]
   12c00:	strb	r8, [r0, r1]
   12c04:	ldr	r1, [r4, #8]
   12c08:	add	r1, r1, #1
   12c0c:	str	r1, [r4, #8]
   12c10:	strb	r9, [r0, r1]
   12c14:	ldr	r1, [r4, #8]
   12c18:	add	r1, r1, #1
   12c1c:	str	r1, [r4, #8]
   12c20:	add	r2, r0, r1
   12c24:	mov	r1, #189	; 0xbd
   12c28:	b	12ba4 <mycore_string_append_with_replacement_null_characters@@Base+0x74>
   12c2c:	ldr	r1, [r4, #8]
   12c30:	ldr	r0, [r4]
   12c34:	mov	r2, #0
   12c38:	strb	r2, [r0, r1]
   12c3c:	sub	sp, fp, #24
   12c40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c44 <mycore_string_stay_only_whitespace@@Base>:
   12c44:	push	{r4, r5, r6, sl, fp, lr}
   12c48:	add	fp, sp, #16
   12c4c:	ldr	r2, [r0, #8]
   12c50:	cmp	r2, #0
   12c54:	beq	12ca4 <mycore_string_stay_only_whitespace@@Base+0x60>
   12c58:	ldr	ip, [r0]
   12c5c:	movw	r4, #27
   12c60:	mov	r3, #0
   12c64:	mov	lr, #1
   12c68:	mov	r1, #0
   12c6c:	movt	r4, #128	; 0x80
   12c70:	ldrb	r5, [ip, r3]
   12c74:	sub	r6, r5, #9
   12c78:	cmp	r6, #23
   12c7c:	bhi	12c90 <mycore_string_stay_only_whitespace@@Base+0x4c>
   12c80:	tst	r4, lr, lsl r6
   12c84:	strbne	r5, [ip, r1]
   12c88:	addne	r1, r1, #1
   12c8c:	ldrne	r2, [r0, #8]
   12c90:	add	r3, r3, #1
   12c94:	cmp	r3, r2
   12c98:	bcc	12c70 <mycore_string_stay_only_whitespace@@Base+0x2c>
   12c9c:	str	r1, [r0, #8]
   12ca0:	pop	{r4, r5, r6, sl, fp, pc}
   12ca4:	mov	r1, #0
   12ca8:	str	r1, [r0, #8]
   12cac:	pop	{r4, r5, r6, sl, fp, pc}

00012cb0 <mycore_string_crop_whitespace_from_begin@@Base>:
   12cb0:	push	{r4, r5, r6, sl, fp, lr}
   12cb4:	add	fp, sp, #16
   12cb8:	ldr	r1, [r0, #8]
   12cbc:	mov	r6, r0
   12cc0:	cmp	r1, #0
   12cc4:	beq	12d04 <mycore_string_crop_whitespace_from_begin@@Base+0x54>
   12cc8:	ldr	r0, [r6]
   12ccc:	movw	r3, #27
   12cd0:	mov	r5, #0
   12cd4:	mov	r2, #1
   12cd8:	movt	r3, #128	; 0x80
   12cdc:	ldrb	r4, [r0, r5]
   12ce0:	sub	r4, r4, #9
   12ce4:	cmp	r4, #23
   12ce8:	bhi	12d1c <mycore_string_crop_whitespace_from_begin@@Base+0x6c>
   12cec:	tst	r3, r2, lsl r4
   12cf0:	beq	12d1c <mycore_string_crop_whitespace_from_begin@@Base+0x6c>
   12cf4:	add	r5, r5, #1
   12cf8:	cmp	r5, r1
   12cfc:	bcc	12cdc <mycore_string_crop_whitespace_from_begin@@Base+0x2c>
   12d00:	b	12d24 <mycore_string_crop_whitespace_from_begin@@Base+0x74>
   12d04:	mov	r5, #0
   12d08:	mov	r1, #0
   12d0c:	sub	r0, r1, r5
   12d10:	str	r0, [r6, #8]
   12d14:	mov	r0, r5
   12d18:	pop	{r4, r5, r6, sl, fp, pc}
   12d1c:	cmp	r5, #0
   12d20:	beq	12d44 <mycore_string_crop_whitespace_from_begin@@Base+0x94>
   12d24:	mov	r1, r5
   12d28:	bl	11978 <mchar_async_crop_first_chars_without_cache@plt>
   12d2c:	str	r0, [r6]
   12d30:	ldr	r1, [r6, #8]
   12d34:	sub	r0, r1, r5
   12d38:	str	r0, [r6, #8]
   12d3c:	mov	r0, r5
   12d40:	pop	{r4, r5, r6, sl, fp, pc}
   12d44:	mov	r5, #0
   12d48:	sub	r0, r1, r5
   12d4c:	str	r0, [r6, #8]
   12d50:	mov	r0, r5
   12d54:	pop	{r4, r5, r6, sl, fp, pc}

00012d58 <mycore_string_whitespace_from_begin@@Base>:
   12d58:	push	{fp, lr}
   12d5c:	mov	fp, sp
   12d60:	ldr	r1, [r0, #8]
   12d64:	cmp	r1, #0
   12d68:	beq	12da8 <mycore_string_whitespace_from_begin@@Base+0x50>
   12d6c:	ldr	r2, [r0]
   12d70:	movw	lr, #27
   12d74:	mov	r0, #0
   12d78:	mov	ip, #1
   12d7c:	movt	lr, #128	; 0x80
   12d80:	ldrb	r3, [r2, r0]
   12d84:	sub	r3, r3, #9
   12d88:	cmp	r3, #23
   12d8c:	bhi	12da4 <mycore_string_whitespace_from_begin@@Base+0x4c>
   12d90:	tst	lr, ip, lsl r3
   12d94:	beq	12da4 <mycore_string_whitespace_from_begin@@Base+0x4c>
   12d98:	add	r0, r0, #1
   12d9c:	cmp	r0, r1
   12da0:	bcc	12d80 <mycore_string_whitespace_from_begin@@Base+0x28>
   12da4:	pop	{fp, pc}
   12da8:	mov	r0, #0
   12dac:	pop	{fp, pc}

00012db0 <mythread_create@@Base>:
   12db0:	mov	r0, #1
   12db4:	mov	r1, #40	; 0x28
   12db8:	b	11000 <mycore_calloc@plt>

00012dbc <mythread_init@@Base>:
   12dbc:	push	{r4, sl, fp, lr}
   12dc0:	add	fp, sp, #8
   12dc4:	cmp	r2, #0
   12dc8:	beq	12e1c <mythread_init@@Base+0x60>
   12dcc:	str	r1, [r0, #32]
   12dd0:	mov	r4, r0
   12dd4:	mov	r0, #0
   12dd8:	mov	r1, #40	; 0x28
   12ddc:	stmib	r4, {r0, r2, r3}
   12de0:	mov	r0, r2
   12de4:	bl	11000 <mycore_calloc@plt>
   12de8:	cmp	r0, #0
   12dec:	str	r0, [r4]
   12df0:	beq	12e24 <mythread_init@@Base+0x68>
   12df4:	mov	r0, r4
   12df8:	bl	10fa0 <mythread_thread_attr_init@plt>
   12dfc:	cmp	r0, #0
   12e00:	str	r0, [r4, #20]
   12e04:	beq	12e2c <mythread_init@@Base+0x70>
   12e08:	mov	r0, r4
   12e0c:	bl	10e38 <mythread_nanosleep_create@plt>
   12e10:	str	r0, [r4, #24]
   12e14:	mov	r0, #0
   12e18:	pop	{r4, sl, fp, pc}
   12e1c:	mov	r0, #1
   12e20:	pop	{r4, sl, fp, pc}
   12e24:	mov	r0, #2
   12e28:	pop	{r4, sl, fp, pc}
   12e2c:	mov	r0, #12
   12e30:	pop	{r4, sl, fp, pc}

00012e34 <mythread_clean@@Base>:
   12e34:	push	{r4, sl, fp, lr}
   12e38:	add	fp, sp, #8
   12e3c:	ldr	r1, [r0, #20]
   12e40:	mov	r4, r0
   12e44:	bl	11378 <mythread_thread_attr_clean@plt>
   12e48:	ldr	r0, [r4, #24]
   12e4c:	bl	10e08 <mythread_nanosleep_clean@plt>
   12e50:	mov	r0, #0
   12e54:	str	r0, [r4, #28]
   12e58:	pop	{r4, sl, fp, pc}

00012e5c <mythread_destroy@@Base>:
   12e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e60:	add	fp, sp, #28
   12e64:	sub	sp, sp, #4
   12e68:	mov	r4, #0
   12e6c:	cmp	r0, #0
   12e70:	beq	12f4c <mythread_destroy@@Base+0xf0>
   12e74:	mov	sl, r1
   12e78:	ldr	r1, [r0]
   12e7c:	mov	r8, r3
   12e80:	mov	r5, r0
   12e84:	cmp	r1, #0
   12e88:	beq	12f28 <mythread_destroy@@Base+0xcc>
   12e8c:	ldr	r0, [r5, #36]	; 0x24
   12e90:	mov	r9, r2
   12e94:	mov	r2, #2
   12e98:	str	r2, [r5, #36]	; 0x24
   12e9c:	tst	r0, #1
   12ea0:	bne	12f10 <mythread_destroy@@Base+0xb4>
   12ea4:	ldr	r0, [r5, #4]
   12ea8:	cmp	r0, #0
   12eac:	beq	12f10 <mythread_destroy@@Base+0xb4>
   12eb0:	mov	r7, #1
   12eb4:	mov	r6, #0
   12eb8:	add	r1, r1, r6
   12ebc:	ldr	r2, [r1, #16]
   12ec0:	tst	r2, #4
   12ec4:	beq	12ee8 <mythread_destroy@@Base+0x8c>
   12ec8:	mov	r0, #2
   12ecc:	str	r0, [r1, #16]
   12ed0:	mov	r0, r5
   12ed4:	ldr	r1, [r1, #24]
   12ed8:	bl	119f0 <mythread_mutex_post@plt>
   12edc:	cmp	r0, #0
   12ee0:	bne	12f10 <mythread_destroy@@Base+0xb4>
   12ee4:	ldr	r0, [r5, #4]
   12ee8:	cmp	r7, r0
   12eec:	bcs	12f10 <mythread_destroy@@Base+0xb4>
   12ef0:	ldr	r1, [r5]
   12ef4:	add	r6, r6, #40	; 0x28
   12ef8:	add	r7, r7, #1
   12efc:	add	r1, r1, r6
   12f00:	ldr	r2, [r1, #16]
   12f04:	tst	r2, #4
   12f08:	bne	12ec8 <mythread_destroy@@Base+0x6c>
   12f0c:	b	12ee8 <mythread_destroy@@Base+0x8c>
   12f10:	mov	r0, r5
   12f14:	mov	r1, sl
   12f18:	mov	r2, r9
   12f1c:	bl	114bc <mythread_quit@plt>
   12f20:	ldr	r0, [r5]
   12f24:	bl	11a98 <mycore_free@plt>
   12f28:	ldr	r1, [r5, #20]
   12f2c:	mov	r0, r5
   12f30:	bl	11c84 <mythread_thread_attr_destroy@plt>
   12f34:	ldr	r0, [r5, #24]
   12f38:	bl	1193c <mythread_nanosleep_destroy@plt>
   12f3c:	cmp	r8, #0
   12f40:	beq	12f58 <mythread_destroy@@Base+0xfc>
   12f44:	mov	r0, r5
   12f48:	bl	11a98 <mycore_free@plt>
   12f4c:	mov	r0, r4
   12f50:	sub	sp, fp, #28
   12f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f58:	mov	r4, r5
   12f5c:	mov	r0, r4
   12f60:	sub	sp, fp, #28
   12f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012f68 <mythread_resume@@Base>:
   12f68:	push	{r4, r5, r6, r7, fp, lr}
   12f6c:	add	fp, sp, #16
   12f70:	mov	r4, r1
   12f74:	ldr	r1, [r0, #36]	; 0x24
   12f78:	mov	r5, r0
   12f7c:	str	r4, [r0, #36]	; 0x24
   12f80:	mov	r0, #0
   12f84:	tst	r1, #1
   12f88:	bne	12fec <mythread_resume@@Base+0x84>
   12f8c:	ldr	r1, [r5, #4]
   12f90:	cmp	r1, #0
   12f94:	beq	12fec <mythread_resume@@Base+0x84>
   12f98:	mov	r6, #0
   12f9c:	mov	r7, #0
   12fa0:	b	12fb4 <mythread_resume@@Base+0x4c>
   12fa4:	add	r7, r7, #1
   12fa8:	add	r6, r6, #40	; 0x28
   12fac:	cmp	r7, r1
   12fb0:	bcs	12fe8 <mythread_resume@@Base+0x80>
   12fb4:	ldr	r0, [r5]
   12fb8:	add	r0, r0, r6
   12fbc:	ldr	r2, [r0, #16]
   12fc0:	tst	r2, #4
   12fc4:	beq	12fa4 <mythread_resume@@Base+0x3c>
   12fc8:	str	r4, [r0, #16]
   12fcc:	ldr	r1, [r0, #24]
   12fd0:	mov	r0, r5
   12fd4:	bl	119f0 <mythread_mutex_post@plt>
   12fd8:	cmp	r0, #0
   12fdc:	bne	12ff0 <mythread_resume@@Base+0x88>
   12fe0:	ldr	r1, [r5, #4]
   12fe4:	b	12fa4 <mythread_resume@@Base+0x3c>
   12fe8:	mov	r0, #0
   12fec:	pop	{r4, r5, r6, r7, fp, pc}
   12ff0:	mov	r0, #1
   12ff4:	pop	{r4, r5, r6, r7, fp, pc}

00012ff8 <mythread_quit@@Base>:
   12ff8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ffc:	add	fp, sp, #24
   13000:	mov	r4, r0
   13004:	mov	r0, #2
   13008:	str	r0, [r4, #36]	; 0x24
   1300c:	ldr	r0, [r4, #4]
   13010:	cmp	r0, #0
   13014:	beq	130e0 <mythread_quit@@Base+0xe8>
   13018:	mov	r9, r1
   1301c:	cmp	r1, #0
   13020:	beq	13090 <mythread_quit@@Base+0x98>
   13024:	mov	r8, r2
   13028:	mov	r5, #0
   1302c:	mov	r6, #0
   13030:	mov	r7, #1
   13034:	ldr	r0, [r4]
   13038:	mov	r2, r8
   1303c:	add	r1, r0, r5
   13040:	mov	r0, r4
   13044:	blx	r9
   13048:	ldr	r0, [r4]
   1304c:	ldr	r1, [r0, r5]
   13050:	mov	r0, r4
   13054:	bl	114a4 <mythread_thread_join@plt>
   13058:	cmp	r0, #0
   1305c:	bne	130e4 <mythread_quit@@Base+0xec>
   13060:	ldr	r0, [r4]
   13064:	ldr	r1, [r0, r5]
   13068:	mov	r0, r4
   1306c:	bl	117c8 <mythread_thread_destroy@plt>
   13070:	cmp	r0, #0
   13074:	bne	130e4 <mythread_quit@@Base+0xec>
   13078:	ldr	r0, [r4, #4]
   1307c:	add	r6, r6, #1
   13080:	add	r5, r5, #40	; 0x28
   13084:	cmp	r6, r0
   13088:	bcc	13034 <mythread_quit@@Base+0x3c>
   1308c:	b	130e0 <mythread_quit@@Base+0xe8>
   13090:	mov	r5, #0
   13094:	mov	r6, #0
   13098:	mov	r7, #1
   1309c:	ldr	r0, [r4]
   130a0:	ldr	r1, [r0, r5]
   130a4:	mov	r0, r4
   130a8:	bl	114a4 <mythread_thread_join@plt>
   130ac:	cmp	r0, #0
   130b0:	bne	130e4 <mythread_quit@@Base+0xec>
   130b4:	ldr	r0, [r4]
   130b8:	ldr	r1, [r0, r5]
   130bc:	mov	r0, r4
   130c0:	bl	117c8 <mythread_thread_destroy@plt>
   130c4:	cmp	r0, #0
   130c8:	bne	130e4 <mythread_quit@@Base+0xec>
   130cc:	ldr	r0, [r4, #4]
   130d0:	add	r6, r6, #1
   130d4:	add	r5, r5, #40	; 0x28
   130d8:	cmp	r6, r0
   130dc:	bcc	1309c <mythread_quit@@Base+0xa4>
   130e0:	mov	r7, #0
   130e4:	mov	r0, r7
   130e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000130ec <myhread_entry_create@@Base>:
   130ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130f0:	add	fp, sp, #28
   130f4:	sub	sp, sp, #4
   130f8:	mov	r6, #0
   130fc:	mov	r8, r1
   13100:	mov	r4, r0
   13104:	str	r6, [r0, #28]
   13108:	ldmib	r0, {r1, r5}
   1310c:	mov	r0, #15
   13110:	cmp	r1, r5
   13114:	bcs	131c4 <myhread_entry_create@@Base+0xd8>
   13118:	ldr	r9, [r4]
   1311c:	add	sl, r1, r1, lsl #2
   13120:	mov	r0, r4
   13124:	add	r7, r9, sl, lsl #3
   13128:	str	r5, [r7, #12]
   1312c:	str	r2, [r7, #8]
   13130:	str	r4, [r7, #32]
   13134:	str	r6, [r7, #20]
   13138:	mov	r6, r7
   1313c:	str	r3, [r7, #16]
   13140:	str	r1, [r6, #4]!
   13144:	bl	10e38 <mythread_nanosleep_create@plt>
   13148:	str	r0, [r7, #28]
   1314c:	mov	r0, r4
   13150:	bl	11894 <mythread_mutex_create@plt>
   13154:	str	r0, [r7, #24]!
   13158:	cmp	r0, #0
   1315c:	beq	1318c <myhread_entry_create@@Base+0xa0>
   13160:	mov	r1, r0
   13164:	mov	r0, r4
   13168:	bl	11a68 <mythread_mutex_wait@plt>
   1316c:	cmp	r0, #0
   13170:	beq	13198 <myhread_entry_create@@Base+0xac>
   13174:	ldr	r1, [r7]
   13178:	mov	r0, r4
   1317c:	bl	11510 <mythread_mutex_close@plt>
   13180:	mov	r0, #72	; 0x48
   13184:	sub	sp, fp, #28
   13188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1318c:	mov	r0, #71	; 0x47
   13190:	sub	sp, fp, #28
   13194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13198:	mov	r0, r4
   1319c:	mov	r1, r8
   131a0:	mov	r2, r6
   131a4:	bl	10eec <mythread_thread_create@plt>
   131a8:	cmp	r0, #0
   131ac:	str	r0, [r9, sl, lsl #3]
   131b0:	beq	131cc <myhread_entry_create@@Base+0xe0>
   131b4:	ldr	r0, [r4, #4]
   131b8:	add	r0, r0, #1
   131bc:	str	r0, [r4, #4]
   131c0:	mov	r0, #0
   131c4:	sub	sp, fp, #28
   131c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131cc:	ldr	r1, [r7]
   131d0:	mov	r0, r4
   131d4:	bl	11510 <mythread_mutex_close@plt>
   131d8:	mov	r0, #1
   131dc:	sub	sp, fp, #28
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000131e4 <myhread_increase_id_by_entry_id@@Base>:
   131e4:	ldr	r0, [r0, #12]
   131e8:	add	r0, r0, r1
   131ec:	bx	lr

000131f0 <mythread_join@@Base>:
   131f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131f4:	add	fp, sp, #24
   131f8:	mov	r4, r0
   131fc:	ldr	r0, [r0, #4]
   13200:	cmp	r0, #0
   13204:	beq	13298 <mythread_join@@Base+0xa8>
   13208:	mov	r6, r1
   1320c:	cmp	r1, #0
   13210:	beq	13264 <mythread_join@@Base+0x74>
   13214:	mov	r8, r2
   13218:	mov	r7, #0
   1321c:	mov	r5, #0
   13220:	ldr	r0, [r4]
   13224:	mov	r2, r8
   13228:	add	r1, r0, r7
   1322c:	mov	r0, r4
   13230:	blx	r6
   13234:	ldr	r0, [r4]
   13238:	ldr	r1, [r0, r7]
   1323c:	mov	r0, r4
   13240:	bl	114a4 <mythread_thread_join@plt>
   13244:	cmp	r0, #0
   13248:	bne	132a0 <mythread_join@@Base+0xb0>
   1324c:	ldr	r0, [r4, #4]
   13250:	add	r5, r5, #1
   13254:	add	r7, r7, #40	; 0x28
   13258:	cmp	r5, r0
   1325c:	bcc	13220 <mythread_join@@Base+0x30>
   13260:	b	13298 <mythread_join@@Base+0xa8>
   13264:	mov	r5, #0
   13268:	mov	r6, #0
   1326c:	ldr	r0, [r4]
   13270:	ldr	r1, [r0, r5]
   13274:	mov	r0, r4
   13278:	bl	114a4 <mythread_thread_join@plt>
   1327c:	cmp	r0, #0
   13280:	bne	132a0 <mythread_join@@Base+0xb0>
   13284:	ldr	r0, [r4, #4]
   13288:	add	r6, r6, #1
   1328c:	add	r5, r5, #40	; 0x28
   13290:	cmp	r6, r0
   13294:	bcc	1326c <mythread_join@@Base+0x7c>
   13298:	mov	r0, #0
   1329c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132a0:	mov	r0, #1
   132a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000132a8 <mythread_option_set@@Base>:
   132a8:	str	r1, [r0, #36]	; 0x24
   132ac:	bx	lr

000132b0 <mythread_stop@@Base>:
   132b0:	push	{r4, r5, r6, sl, fp, lr}
   132b4:	add	fp, sp, #16
   132b8:	mov	r4, r0
   132bc:	ldr	r0, [r0, #36]	; 0x24
   132c0:	tst	r0, #4
   132c4:	bne	1332c <mythread_stop@@Base+0x7c>
   132c8:	mov	r0, #4
   132cc:	str	r0, [r4, #36]	; 0x24
   132d0:	ldr	r1, [r4, #4]
   132d4:	cmp	r1, #0
   132d8:	beq	1332c <mythread_stop@@Base+0x7c>
   132dc:	ldr	r0, [r4]
   132e0:	mov	r5, #0
   132e4:	b	132f4 <mythread_stop@@Base+0x44>
   132e8:	add	r5, r5, #1
   132ec:	cmp	r5, r1
   132f0:	bcs	1332c <mythread_stop@@Base+0x7c>
   132f4:	add	r6, r5, r5, lsl #2
   132f8:	add	r2, r0, r6, lsl #3
   132fc:	ldr	r2, [r2, #16]
   13300:	tst	r2, #4
   13304:	bne	132e8 <mythread_stop@@Base+0x38>
   13308:	ldr	r0, [r4, #24]
   1330c:	bl	11138 <mythread_nanosleep_sleep@plt>
   13310:	ldr	r0, [r4]
   13314:	add	r1, r0, r6, lsl #3
   13318:	ldr	r1, [r1, #16]
   1331c:	tst	r1, #4
   13320:	beq	13308 <mythread_stop@@Base+0x58>
   13324:	ldr	r1, [r4, #4]
   13328:	b	132e8 <mythread_stop@@Base+0x38>
   1332c:	mov	r0, #0
   13330:	pop	{r4, r5, r6, sl, fp, pc}

00013334 <mythread_suspend@@Base>:
   13334:	push	{r4, r5, r6, sl, fp, lr}
   13338:	add	fp, sp, #16
   1333c:	mov	r4, r0
   13340:	ldr	r0, [r0, #36]	; 0x24
   13344:	tst	r0, #1
   13348:	bne	133c8 <mythread_suspend@@Base+0x94>
   1334c:	mov	r0, #1
   13350:	str	r0, [r4, #36]	; 0x24
   13354:	ldr	r1, [r4, #4]
   13358:	cmp	r1, #0
   1335c:	beq	133c8 <mythread_suspend@@Base+0x94>
   13360:	ldr	r0, [r4]
   13364:	mov	r5, #0
   13368:	b	1337c <mythread_suspend@@Base+0x48>
   1336c:	ldr	r1, [r4, #4]
   13370:	add	r5, r5, #1
   13374:	cmp	r5, r1
   13378:	bcs	133c8 <mythread_suspend@@Base+0x94>
   1337c:	add	r6, r5, r5, lsl #2
   13380:	add	r2, r0, r6, lsl #3
   13384:	ldr	r3, [r2, #16]!
   13388:	tst	r3, #4
   1338c:	bne	13370 <mythread_suspend@@Base+0x3c>
   13390:	ldr	r1, [r2]
   13394:	tst	r1, #1
   13398:	bne	1336c <mythread_suspend@@Base+0x38>
   1339c:	ldr	r0, [r4, #24]
   133a0:	bl	11138 <mythread_nanosleep_sleep@plt>
   133a4:	ldr	r0, [r4]
   133a8:	add	r1, r0, r6, lsl #3
   133ac:	ldr	r2, [r1, #16]!
   133b0:	tst	r2, #4
   133b4:	bne	1336c <mythread_suspend@@Base+0x38>
   133b8:	ldr	r1, [r1]
   133bc:	tst	r1, #1
   133c0:	beq	1339c <mythread_suspend@@Base+0x68>
   133c4:	b	1336c <mythread_suspend@@Base+0x38>
   133c8:	mov	r0, #0
   133cc:	pop	{r4, r5, r6, sl, fp, pc}

000133d0 <mythread_check_status@@Base>:
   133d0:	ldr	r1, [r0, #4]
   133d4:	cmp	r1, #0
   133d8:	moveq	r0, #0
   133dc:	bxeq	lr
   133e0:	ldr	r0, [r0]
   133e4:	mov	r3, #0
   133e8:	add	r2, r0, #20
   133ec:	ldr	r0, [r2]
   133f0:	cmp	r0, #0
   133f4:	bxne	lr
   133f8:	add	r3, r3, #1
   133fc:	add	r2, r2, #40	; 0x28
   13400:	cmp	r3, r1
   13404:	movcs	r0, #0
   13408:	bxcs	lr
   1340c:	b	133ec <mythread_check_status@@Base+0x1c>

00013410 <mythread_option@@Base>:
   13410:	ldr	r0, [r0, #36]	; 0x24
   13414:	bx	lr

00013418 <mythread_entry_join@@Base>:
   13418:	push	{r4, sl, fp, lr}
   1341c:	add	fp, sp, #8
   13420:	mov	r4, r0
   13424:	cmp	r1, #0
   13428:	beq	1343c <mythread_entry_join@@Base+0x24>
   1342c:	ldr	r0, [r4, #32]
   13430:	mov	r3, r1
   13434:	mov	r1, r4
   13438:	blx	r3
   1343c:	ldr	r1, [r4]
   13440:	ldr	r0, [r4, #32]
   13444:	bl	114a4 <mythread_thread_join@plt>
   13448:	cmp	r0, #0
   1344c:	movwne	r0, #1
   13450:	pop	{r4, sl, fp, pc}

00013454 <mythread_entry_quit@@Base>:
   13454:	push	{r4, sl, fp, lr}
   13458:	add	fp, sp, #8
   1345c:	mov	r4, r0
   13460:	cmp	r1, #0
   13464:	beq	13478 <mythread_entry_quit@@Base+0x24>
   13468:	ldr	r0, [r4, #32]
   1346c:	mov	r3, r1
   13470:	mov	r1, r4
   13474:	blx	r3
   13478:	ldr	r1, [r4]
   1347c:	ldr	r0, [r4, #32]
   13480:	bl	114a4 <mythread_thread_join@plt>
   13484:	cmp	r0, #0
   13488:	movne	r0, #1
   1348c:	popne	{r4, sl, fp, pc}
   13490:	ldr	r1, [r4]
   13494:	ldr	r0, [r4, #32]
   13498:	bl	117c8 <mythread_thread_destroy@plt>
   1349c:	cmp	r0, #0
   134a0:	movwne	r0, #1
   134a4:	pop	{r4, sl, fp, pc}

000134a8 <mythread_entry_stop@@Base>:
   134a8:	push	{r4, sl, fp, lr}
   134ac:	add	fp, sp, #8
   134b0:	mov	r4, r0
   134b4:	ldr	r0, [r0, #16]
   134b8:	tst	r0, #4
   134bc:	bne	134ec <mythread_entry_stop@@Base+0x44>
   134c0:	mov	r0, #4
   134c4:	str	r0, [r4, #16]
   134c8:	ldr	r0, [r4, #16]
   134cc:	tst	r0, #4
   134d0:	bne	134ec <mythread_entry_stop@@Base+0x44>
   134d4:	ldr	r0, [r4, #32]
   134d8:	ldr	r0, [r0, #24]
   134dc:	bl	11138 <mythread_nanosleep_sleep@plt>
   134e0:	ldr	r0, [r4, #16]
   134e4:	tst	r0, #4
   134e8:	beq	134d4 <mythread_entry_stop@@Base+0x2c>
   134ec:	mov	r0, #0
   134f0:	pop	{r4, sl, fp, pc}

000134f4 <mythread_entry_suspend@@Base>:
   134f4:	push	{r4, sl, fp, lr}
   134f8:	add	fp, sp, #8
   134fc:	mov	r4, r0
   13500:	ldr	r0, [r0, #16]
   13504:	tst	r0, #1
   13508:	bne	13538 <mythread_entry_suspend@@Base+0x44>
   1350c:	mov	r0, #1
   13510:	str	r0, [r4, #16]
   13514:	b	13524 <mythread_entry_suspend@@Base+0x30>
   13518:	ldr	r0, [r4, #32]
   1351c:	ldr	r0, [r0, #24]
   13520:	bl	11138 <mythread_nanosleep_sleep@plt>
   13524:	ldr	r0, [r4, #16]
   13528:	tst	r0, #4
   1352c:	ldreq	r0, [r4, #16]
   13530:	tsteq	r0, #1
   13534:	beq	13518 <mythread_entry_suspend@@Base+0x24>
   13538:	mov	r0, #0
   1353c:	pop	{r4, sl, fp, pc}

00013540 <mythread_entry_resume@@Base>:
   13540:	push	{fp, lr}
   13544:	mov	fp, sp
   13548:	ldr	r2, [r0, #16]
   1354c:	tst	r2, #1
   13550:	bne	13584 <mythread_entry_resume@@Base+0x44>
   13554:	ldr	r2, [r0, #16]
   13558:	str	r1, [r0, #16]
   1355c:	tst	r2, #4
   13560:	beq	13588 <mythread_entry_resume@@Base+0x48>
   13564:	ldr	r1, [r0, #24]
   13568:	ldr	r0, [r0, #32]
   1356c:	bl	119f0 <mythread_mutex_post@plt>
   13570:	mov	r1, r0
   13574:	mov	r0, #1
   13578:	cmp	r1, #0
   1357c:	moveq	r0, #0
   13580:	pop	{fp, pc}
   13584:	str	r1, [r0, #16]
   13588:	mov	r0, #0
   1358c:	pop	{fp, pc}

00013590 <mythread_entry_status@@Base>:
   13590:	ldr	r0, [r0, #20]
   13594:	bx	lr

00013598 <mythread_entry_mythread@@Base>:
   13598:	ldr	r0, [r0, #32]
   1359c:	bx	lr

000135a0 <mythread_callback_quit@@Base>:
   135a0:	push	{r4, r5, fp, lr}
   135a4:	add	fp, sp, #8
   135a8:	mov	r5, r0
   135ac:	ldr	r0, [r1, #16]
   135b0:	tst	r0, #2
   135b4:	popne	{r4, r5, fp, pc}
   135b8:	mov	r4, r1
   135bc:	ldr	r0, [r5, #24]
   135c0:	bl	11138 <mythread_nanosleep_sleep@plt>
   135c4:	ldr	r0, [r4, #16]
   135c8:	tst	r0, #2
   135cc:	beq	135bc <mythread_callback_quit@@Base+0x1c>
   135d0:	pop	{r4, r5, fp, pc}

000135d4 <mythread_queue_create@@Base>:
   135d4:	mov	r0, #1
   135d8:	mov	r1, #28
   135dc:	b	11000 <mycore_calloc@plt>

000135e0 <mythread_queue_init@@Base>:
   135e0:	push	{r4, sl, fp, lr}
   135e4:	add	fp, sp, #8
   135e8:	cmp	r1, #32
   135ec:	mov	r4, r0
   135f0:	mov	r0, #512	; 0x200
   135f4:	movls	r1, #32
   135f8:	str	r0, [r4, #8]
   135fc:	mov	r0, #512	; 0x200
   13600:	str	r1, [r4, #20]
   13604:	mov	r1, #4
   13608:	bl	11000 <mycore_calloc@plt>
   1360c:	cmp	r0, #0
   13610:	str	r0, [r4]
   13614:	beq	13658 <mythread_queue_init@@Base+0x78>
   13618:	ldr	r0, [r4, #20]
   1361c:	add	r0, r0, r0, lsl #1
   13620:	lsl	r0, r0, #2
   13624:	bl	119a8 <mycore_malloc@plt>
   13628:	ldm	r4, {r1, r2}
   1362c:	str	r0, [r1, r2, lsl #2]
   13630:	mov	r0, #0
   13634:	ldr	r1, [r4]
   13638:	ldr	r2, [r1, r2, lsl #2]
   1363c:	cmp	r2, #0
   13640:	popne	{r4, sl, fp, pc}
   13644:	mov	r0, r1
   13648:	bl	11a98 <mycore_free@plt>
   1364c:	str	r0, [r4]
   13650:	mov	r0, #62	; 0x3e
   13654:	pop	{r4, sl, fp, pc}
   13658:	mov	r0, #61	; 0x3d
   1365c:	pop	{r4, sl, fp, pc}

00013660 <mythread_queue_clean@@Base>:
   13660:	mov	r1, #0
   13664:	str	r1, [r0, #24]
   13668:	str	r1, [r0, #4]
   1366c:	str	r1, [r0, #12]
   13670:	str	r1, [r0, #16]
   13674:	bx	lr

00013678 <mythread_queue_destroy@@Base>:
   13678:	cmp	r0, #0
   1367c:	beq	136e0 <mythread_queue_destroy@@Base+0x68>
   13680:	push	{r4, r5, fp, lr}
   13684:	add	fp, sp, #8
   13688:	mov	r4, r0
   1368c:	ldr	r0, [r0]
   13690:	cmp	r0, #0
   13694:	beq	136d4 <mythread_queue_destroy@@Base+0x5c>
   13698:	ldr	r0, [r0]
   1369c:	bl	11a98 <mycore_free@plt>
   136a0:	ldr	r0, [r4, #4]
   136a4:	cmp	r0, #0
   136a8:	beq	136cc <mythread_queue_destroy@@Base+0x54>
   136ac:	mov	r5, #1
   136b0:	ldr	r0, [r4]
   136b4:	ldr	r0, [r0, r5, lsl #2]
   136b8:	bl	11a98 <mycore_free@plt>
   136bc:	ldr	r0, [r4, #4]
   136c0:	add	r5, r5, #1
   136c4:	cmp	r5, r0
   136c8:	bls	136b0 <mythread_queue_destroy@@Base+0x38>
   136cc:	ldr	r0, [r4]
   136d0:	bl	11a98 <mycore_free@plt>
   136d4:	mov	r0, r4
   136d8:	bl	11a98 <mycore_free@plt>
   136dc:	pop	{r4, r5, fp, lr}
   136e0:	mov	r0, #0
   136e4:	bx	lr

000136e8 <mythread_queue_node_clean@@Base>:
   136e8:	mov	r1, #0
   136ec:	str	r1, [r0]
   136f0:	str	r1, [r0, #4]
   136f4:	str	r1, [r0, #8]
   136f8:	bx	lr

000136fc <mythread_queue_get_prev_node@@Base>:
   136fc:	ldr	r0, [r0, #8]
   13700:	bx	lr

00013704 <mythread_queue_get_current_node@@Base>:
   13704:	ldm	r0, {r1, r2}
   13708:	ldr	r0, [r0, #12]
   1370c:	ldr	r1, [r1, r2, lsl #2]
   13710:	add	r0, r0, r0, lsl #1
   13714:	add	r0, r1, r0, lsl #2
   13718:	bx	lr

0001371c <mythread_queue_get_first_node@@Base>:
   1371c:	ldr	r0, [r0]
   13720:	ldr	r0, [r0]
   13724:	bx	lr

00013728 <mythread_queue_count_used_node@@Base>:
   13728:	ldr	r0, [r0, #16]
   1372c:	bx	lr

00013730 <mythread_queue_node_malloc@@Base>:
   13730:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13734:	add	fp, sp, #24
   13738:	mov	r6, r0
   1373c:	ldr	r0, [r1, #12]
   13740:	mov	r9, r1
   13744:	ldr	r1, [r1, #20]
   13748:	add	r0, r0, #1
   1374c:	cmp	r0, r1
   13750:	str	r0, [r9, #12]
   13754:	bcs	13764 <mythread_queue_node_malloc@@Base+0x34>
   13758:	ldr	r6, [r9]
   1375c:	ldr	r1, [r9, #4]
   13760:	b	138c8 <mythread_queue_node_malloc@@Base+0x198>
   13764:	mov	r8, r2
   13768:	ldmib	r9, {r0, r2}
   1376c:	add	r1, r0, #1
   13770:	cmp	r1, r2
   13774:	str	r1, [r9, #4]
   13778:	bcs	13790 <mythread_queue_node_malloc@@Base+0x60>
   1377c:	ldr	r6, [r9]
   13780:	ldr	r0, [r6, r1, lsl #2]
   13784:	cmp	r0, #0
   13788:	bne	138c0 <mythread_queue_node_malloc@@Base+0x190>
   1378c:	b	13894 <mythread_queue_node_malloc@@Base+0x164>
   13790:	cmp	r6, #0
   13794:	beq	13848 <mythread_queue_node_malloc@@Base+0x118>
   13798:	ldr	r0, [r6, #16]
   1379c:	cmp	r0, #0
   137a0:	beq	13848 <mythread_queue_node_malloc@@Base+0x118>
   137a4:	ldr	r7, [r0]
   137a8:	cmp	r7, #0
   137ac:	beq	13848 <mythread_queue_node_malloc@@Base+0x118>
   137b0:	ldr	r0, [r6, #4]
   137b4:	mov	r3, r0
   137b8:	cmp	r3, #0
   137bc:	bne	137d8 <mythread_queue_node_malloc@@Base+0xa8>
   137c0:	mov	r3, #0
   137c4:	ldr	r7, [r7, #12]
   137c8:	cmp	r7, #0
   137cc:	beq	13844 <mythread_queue_node_malloc@@Base+0x114>
   137d0:	cmp	r3, #0
   137d4:	beq	137c0 <mythread_queue_node_malloc@@Base+0x90>
   137d8:	ldm	r7, {r1, r2}
   137dc:	mov	r5, #0
   137e0:	ldr	r3, [r2, r5, lsl #2]
   137e4:	ldr	r4, [r1, #16]
   137e8:	cmp	r3, r4
   137ec:	bcc	13810 <mythread_queue_node_malloc@@Base+0xe0>
   137f0:	add	r5, r5, #1
   137f4:	mov	r3, r0
   137f8:	cmp	r5, r0
   137fc:	bcs	137c4 <mythread_queue_node_malloc@@Base+0x94>
   13800:	ldr	r3, [r2, r5, lsl #2]
   13804:	ldr	r4, [r1, #16]
   13808:	cmp	r3, r4
   1380c:	bcs	137f0 <mythread_queue_node_malloc@@Base+0xc0>
   13810:	ldr	r0, [r6, #24]
   13814:	bl	11138 <mythread_nanosleep_sleep@plt>
   13818:	ldm	r7, {r1, r2}
   1381c:	ldr	r0, [r2, r5, lsl #2]
   13820:	ldr	r3, [r1, #16]
   13824:	cmp	r0, r3
   13828:	bcc	13810 <mythread_queue_node_malloc@@Base+0xe0>
   1382c:	ldr	r0, [r6, #4]
   13830:	add	r5, r5, #1
   13834:	mov	r3, r0
   13838:	cmp	r5, r0
   1383c:	bcc	13800 <mythread_queue_node_malloc@@Base+0xd0>
   13840:	b	137c4 <mythread_queue_node_malloc@@Base+0x94>
   13844:	ldr	r2, [r9, #8]
   13848:	ldr	r0, [r9]
   1384c:	add	r5, r2, #512	; 0x200
   13850:	lsl	r1, r5, #2
   13854:	bl	10d9c <mycore_realloc@plt>
   13858:	cmp	r0, #0
   1385c:	beq	138e4 <mythread_queue_node_malloc@@Base+0x1b4>
   13860:	ldr	r1, [r9, #4]
   13864:	mov	r6, r0
   13868:	add	r0, r0, r1, lsl #2
   1386c:	sub	r1, r5, r1
   13870:	lsl	r2, r1, #2
   13874:	mov	r1, #0
   13878:	bl	116cc <memset@plt>
   1387c:	str	r5, [r9, #8]
   13880:	str	r6, [r9]
   13884:	ldr	r1, [r9, #4]
   13888:	ldr	r0, [r6, r1, lsl #2]
   1388c:	cmp	r0, #0
   13890:	bne	138c0 <mythread_queue_node_malloc@@Base+0x190>
   13894:	ldr	r0, [r9, #20]
   13898:	add	r0, r0, r0, lsl #1
   1389c:	lsl	r0, r0, #2
   138a0:	bl	119a8 <mycore_malloc@plt>
   138a4:	ldr	r2, [r9]
   138a8:	ldr	r1, [r9, #4]
   138ac:	str	r0, [r2, r1, lsl #2]
   138b0:	ldr	r6, [r9]
   138b4:	ldr	r0, [r6, r1, lsl #2]
   138b8:	cmp	r0, #0
   138bc:	beq	138fc <mythread_queue_node_malloc@@Base+0x1cc>
   138c0:	mov	r0, #0
   138c4:	str	r0, [r9, #12]
   138c8:	ldr	r2, [r9, #16]
   138cc:	add	r0, r0, r0, lsl #1
   138d0:	add	r2, r2, #1
   138d4:	str	r2, [r9, #16]
   138d8:	ldr	r1, [r6, r1, lsl #2]
   138dc:	add	r0, r1, r0, lsl #2
   138e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138e4:	mov	r0, #0
   138e8:	cmp	r8, #0
   138ec:	beq	138e0 <mythread_queue_node_malloc@@Base+0x1b0>
   138f0:	mov	r1, #61	; 0x3d
   138f4:	str	r1, [r8]
   138f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138fc:	mov	r0, #0
   13900:	cmp	r8, #0
   13904:	beq	138e0 <mythread_queue_node_malloc@@Base+0x1b0>
   13908:	mov	r1, #62	; 0x3e
   1390c:	str	r1, [r8]
   13910:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013914 <mythread_queue_list_wait_for_done@@Base>:
   13914:	push	{r4, r5, r6, sl, fp, lr}
   13918:	add	fp, sp, #16
   1391c:	cmp	r1, #0
   13920:	beq	139c8 <mythread_queue_list_wait_for_done@@Base+0xb4>
   13924:	ldr	r5, [r1]
   13928:	cmp	r5, #0
   1392c:	beq	139c8 <mythread_queue_list_wait_for_done@@Base+0xb4>
   13930:	ldr	ip, [r0, #4]
   13934:	mov	r4, r0
   13938:	mov	r3, ip
   1393c:	cmp	r3, #0
   13940:	bne	1395c <mythread_queue_list_wait_for_done@@Base+0x48>
   13944:	mov	r3, #0
   13948:	ldr	r5, [r5, #12]
   1394c:	cmp	r5, #0
   13950:	beq	139c8 <mythread_queue_list_wait_for_done@@Base+0xb4>
   13954:	cmp	r3, #0
   13958:	beq	13944 <mythread_queue_list_wait_for_done@@Base+0x30>
   1395c:	ldm	r5, {r1, r2}
   13960:	mov	r6, #0
   13964:	ldr	r3, [r2, r6, lsl #2]
   13968:	ldr	r0, [r1, #16]
   1396c:	cmp	r3, r0
   13970:	bcc	13994 <mythread_queue_list_wait_for_done@@Base+0x80>
   13974:	add	r6, r6, #1
   13978:	mov	r3, ip
   1397c:	cmp	r6, ip
   13980:	bcs	13948 <mythread_queue_list_wait_for_done@@Base+0x34>
   13984:	ldr	r3, [r2, r6, lsl #2]
   13988:	ldr	r0, [r1, #16]
   1398c:	cmp	r3, r0
   13990:	bcs	13974 <mythread_queue_list_wait_for_done@@Base+0x60>
   13994:	ldr	r0, [r4, #24]
   13998:	bl	11138 <mythread_nanosleep_sleep@plt>
   1399c:	ldm	r5, {r1, r2}
   139a0:	ldr	r0, [r2, r6, lsl #2]
   139a4:	ldr	r3, [r1, #16]
   139a8:	cmp	r0, r3
   139ac:	bcc	13994 <mythread_queue_list_wait_for_done@@Base+0x80>
   139b0:	ldr	ip, [r4, #4]
   139b4:	add	r6, r6, #1
   139b8:	mov	r3, ip
   139bc:	cmp	r6, ip
   139c0:	bcc	13984 <mythread_queue_list_wait_for_done@@Base+0x70>
   139c4:	b	13948 <mythread_queue_list_wait_for_done@@Base+0x34>
   139c8:	pop	{r4, r5, r6, sl, fp, pc}

000139cc <mythread_queue_node_malloc_limit@@Base>:
   139cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   139d0:	add	fp, sp, #24
   139d4:	mov	r5, r0
   139d8:	ldr	r0, [r1, #12]
   139dc:	mov	r9, r1
   139e0:	ldr	r1, [r1, #16]
   139e4:	add	r0, r0, #1
   139e8:	cmp	r1, r2
   139ec:	str	r0, [r9, #12]
   139f0:	bcs	13a30 <mythread_queue_node_malloc_limit@@Base+0x64>
   139f4:	ldr	r1, [r9, #4]
   139f8:	ldr	r2, [r9, #20]
   139fc:	cmp	r0, r2
   13a00:	bcc	13c44 <mythread_queue_node_malloc_limit@@Base+0x278>
   13a04:	add	r1, r1, #1
   13a08:	mov	r8, r3
   13a0c:	str	r1, [r9, #4]
   13a10:	ldr	r2, [r9, #8]
   13a14:	cmp	r1, r2
   13a18:	bcs	13b0c <mythread_queue_node_malloc_limit@@Base+0x140>
   13a1c:	ldr	r5, [r9]
   13a20:	ldr	r0, [r5, r1, lsl #2]
   13a24:	cmp	r0, #0
   13a28:	bne	13c3c <mythread_queue_node_malloc_limit@@Base+0x270>
   13a2c:	b	13c10 <mythread_queue_node_malloc_limit@@Base+0x244>
   13a30:	ldr	r0, [r9, #16]
   13a34:	cmp	r5, #0
   13a38:	add	r0, r0, #1
   13a3c:	str	r0, [r9, #16]
   13a40:	beq	13af0 <mythread_queue_node_malloc_limit@@Base+0x124>
   13a44:	ldr	r0, [r5, #16]
   13a48:	cmp	r0, #0
   13a4c:	beq	13af0 <mythread_queue_node_malloc_limit@@Base+0x124>
   13a50:	ldr	r6, [r0]
   13a54:	cmp	r6, #0
   13a58:	beq	13af0 <mythread_queue_node_malloc_limit@@Base+0x124>
   13a5c:	ldr	r0, [r5, #4]
   13a60:	mov	r3, r0
   13a64:	cmp	r3, #0
   13a68:	bne	13a84 <mythread_queue_node_malloc_limit@@Base+0xb8>
   13a6c:	mov	r3, #0
   13a70:	ldr	r6, [r6, #12]
   13a74:	cmp	r6, #0
   13a78:	beq	13af0 <mythread_queue_node_malloc_limit@@Base+0x124>
   13a7c:	cmp	r3, #0
   13a80:	beq	13a6c <mythread_queue_node_malloc_limit@@Base+0xa0>
   13a84:	ldm	r6, {r1, r2}
   13a88:	mov	r7, #0
   13a8c:	ldr	r3, [r2, r7, lsl #2]
   13a90:	ldr	r4, [r1, #16]
   13a94:	cmp	r3, r4
   13a98:	bcc	13abc <mythread_queue_node_malloc_limit@@Base+0xf0>
   13a9c:	add	r7, r7, #1
   13aa0:	mov	r3, r0
   13aa4:	cmp	r7, r0
   13aa8:	bcs	13a70 <mythread_queue_node_malloc_limit@@Base+0xa4>
   13aac:	ldr	r3, [r2, r7, lsl #2]
   13ab0:	ldr	r4, [r1, #16]
   13ab4:	cmp	r3, r4
   13ab8:	bcs	13a9c <mythread_queue_node_malloc_limit@@Base+0xd0>
   13abc:	ldr	r0, [r5, #24]
   13ac0:	bl	11138 <mythread_nanosleep_sleep@plt>
   13ac4:	ldm	r6, {r1, r2}
   13ac8:	ldr	r0, [r2, r7, lsl #2]
   13acc:	ldr	r3, [r1, #16]
   13ad0:	cmp	r0, r3
   13ad4:	bcc	13abc <mythread_queue_node_malloc_limit@@Base+0xf0>
   13ad8:	ldr	r0, [r5, #4]
   13adc:	add	r7, r7, #1
   13ae0:	mov	r3, r0
   13ae4:	cmp	r7, r0
   13ae8:	bcc	13aac <mythread_queue_node_malloc_limit@@Base+0xe0>
   13aec:	b	13a70 <mythread_queue_node_malloc_limit@@Base+0xa4>
   13af0:	mov	r0, #0
   13af4:	mov	r1, #0
   13af8:	str	r0, [r9, #24]
   13afc:	str	r0, [r9, #4]
   13b00:	str	r0, [r9, #12]
   13b04:	str	r0, [r9, #16]
   13b08:	b	13c44 <mythread_queue_node_malloc_limit@@Base+0x278>
   13b0c:	cmp	r5, #0
   13b10:	beq	13bc4 <mythread_queue_node_malloc_limit@@Base+0x1f8>
   13b14:	ldr	r0, [r5, #16]
   13b18:	cmp	r0, #0
   13b1c:	beq	13bc4 <mythread_queue_node_malloc_limit@@Base+0x1f8>
   13b20:	ldr	r7, [r0]
   13b24:	cmp	r7, #0
   13b28:	beq	13bc4 <mythread_queue_node_malloc_limit@@Base+0x1f8>
   13b2c:	ldr	r0, [r5, #4]
   13b30:	mov	r3, r0
   13b34:	cmp	r3, #0
   13b38:	bne	13b54 <mythread_queue_node_malloc_limit@@Base+0x188>
   13b3c:	mov	r3, #0
   13b40:	ldr	r7, [r7, #12]
   13b44:	cmp	r7, #0
   13b48:	beq	13bc0 <mythread_queue_node_malloc_limit@@Base+0x1f4>
   13b4c:	cmp	r3, #0
   13b50:	beq	13b3c <mythread_queue_node_malloc_limit@@Base+0x170>
   13b54:	ldm	r7, {r1, r2}
   13b58:	mov	r6, #0
   13b5c:	ldr	r3, [r2, r6, lsl #2]
   13b60:	ldr	r4, [r1, #16]
   13b64:	cmp	r3, r4
   13b68:	bcc	13b8c <mythread_queue_node_malloc_limit@@Base+0x1c0>
   13b6c:	add	r6, r6, #1
   13b70:	mov	r3, r0
   13b74:	cmp	r6, r0
   13b78:	bcs	13b40 <mythread_queue_node_malloc_limit@@Base+0x174>
   13b7c:	ldr	r3, [r2, r6, lsl #2]
   13b80:	ldr	r4, [r1, #16]
   13b84:	cmp	r3, r4
   13b88:	bcs	13b6c <mythread_queue_node_malloc_limit@@Base+0x1a0>
   13b8c:	ldr	r0, [r5, #24]
   13b90:	bl	11138 <mythread_nanosleep_sleep@plt>
   13b94:	ldm	r7, {r1, r2}
   13b98:	ldr	r0, [r2, r6, lsl #2]
   13b9c:	ldr	r3, [r1, #16]
   13ba0:	cmp	r0, r3
   13ba4:	bcc	13b8c <mythread_queue_node_malloc_limit@@Base+0x1c0>
   13ba8:	ldr	r0, [r5, #4]
   13bac:	add	r6, r6, #1
   13bb0:	mov	r3, r0
   13bb4:	cmp	r6, r0
   13bb8:	bcc	13b7c <mythread_queue_node_malloc_limit@@Base+0x1b0>
   13bbc:	b	13b40 <mythread_queue_node_malloc_limit@@Base+0x174>
   13bc0:	ldr	r2, [r9, #8]
   13bc4:	ldr	r0, [r9]
   13bc8:	add	r6, r2, #512	; 0x200
   13bcc:	lsl	r1, r6, #2
   13bd0:	bl	10d9c <mycore_realloc@plt>
   13bd4:	cmp	r0, #0
   13bd8:	beq	13c64 <mythread_queue_node_malloc_limit@@Base+0x298>
   13bdc:	ldr	r1, [r9, #4]
   13be0:	mov	r5, r0
   13be4:	add	r0, r0, r1, lsl #2
   13be8:	sub	r1, r6, r1
   13bec:	lsl	r2, r1, #2
   13bf0:	mov	r1, #0
   13bf4:	bl	116cc <memset@plt>
   13bf8:	str	r6, [r9, #8]
   13bfc:	str	r5, [r9]
   13c00:	ldr	r1, [r9, #4]
   13c04:	ldr	r0, [r5, r1, lsl #2]
   13c08:	cmp	r0, #0
   13c0c:	bne	13c3c <mythread_queue_node_malloc_limit@@Base+0x270>
   13c10:	ldr	r0, [r9, #20]
   13c14:	add	r0, r0, r0, lsl #1
   13c18:	lsl	r0, r0, #2
   13c1c:	bl	119a8 <mycore_malloc@plt>
   13c20:	ldr	r2, [r9]
   13c24:	ldr	r1, [r9, #4]
   13c28:	str	r0, [r2, r1, lsl #2]
   13c2c:	ldr	r0, [r9]
   13c30:	ldr	r0, [r0, r1, lsl #2]
   13c34:	cmp	r0, #0
   13c38:	beq	13c7c <mythread_queue_node_malloc_limit@@Base+0x2b0>
   13c3c:	mov	r0, #0
   13c40:	str	r0, [r9, #12]
   13c44:	ldr	r2, [r9]
   13c48:	ldr	r3, [r9, #16]
   13c4c:	add	r0, r0, r0, lsl #1
   13c50:	add	r3, r3, #1
   13c54:	str	r3, [r9, #16]
   13c58:	ldr	r1, [r2, r1, lsl #2]
   13c5c:	add	r0, r1, r0, lsl #2
   13c60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c64:	mov	r0, #0
   13c68:	cmp	r8, #0
   13c6c:	beq	13c60 <mythread_queue_node_malloc_limit@@Base+0x294>
   13c70:	mov	r1, #61	; 0x3d
   13c74:	str	r1, [r8]
   13c78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c7c:	mov	r0, #0
   13c80:	cmp	r8, #0
   13c84:	beq	13c60 <mythread_queue_node_malloc_limit@@Base+0x294>
   13c88:	mov	r1, #62	; 0x3e
   13c8c:	str	r1, [r8]
   13c90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013c94 <mythread_queue_node_malloc_round@@Base>:
   13c94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c98:	add	fp, sp, #24
   13c9c:	ldr	r8, [r1]
   13ca0:	mov	r5, r0
   13ca4:	mov	r4, r1
   13ca8:	ldr	r0, [r8, #12]
   13cac:	add	r0, r0, #1
   13cb0:	str	r0, [r8, #12]
   13cb4:	ldr	r1, [r8, #20]
   13cb8:	ldr	r2, [r8, #16]
   13cbc:	add	r2, r2, #1
   13cc0:	cmp	r0, r1
   13cc4:	str	r2, [r8, #16]
   13cc8:	bcc	13d68 <mythread_queue_node_malloc_round@@Base+0xd4>
   13ccc:	cmp	r5, #0
   13cd0:	mov	r0, r8
   13cd4:	beq	13d54 <mythread_queue_node_malloc_round@@Base+0xc0>
   13cd8:	ldr	r2, [r4, #8]
   13cdc:	mov	r0, r8
   13ce0:	cmp	r2, #0
   13ce4:	beq	13d54 <mythread_queue_node_malloc_round@@Base+0xc0>
   13ce8:	ldr	r1, [r4, #4]
   13cec:	mov	r7, #0
   13cf0:	mov	r0, r8
   13cf4:	ldr	r3, [r1, r7, lsl #2]
   13cf8:	ldr	r6, [r0, #16]
   13cfc:	cmp	r3, r6
   13d00:	bcc	13d20 <mythread_queue_node_malloc_round@@Base+0x8c>
   13d04:	add	r7, r7, #1
   13d08:	cmp	r7, r2
   13d0c:	bcs	13d4c <mythread_queue_node_malloc_round@@Base+0xb8>
   13d10:	ldr	r3, [r1, r7, lsl #2]
   13d14:	ldr	r6, [r0, #16]
   13d18:	cmp	r3, r6
   13d1c:	bcs	13d04 <mythread_queue_node_malloc_round@@Base+0x70>
   13d20:	ldr	r0, [r5, #24]
   13d24:	bl	11138 <mythread_nanosleep_sleep@plt>
   13d28:	ldm	r4, {r0, r1}
   13d2c:	ldr	r2, [r1, r7, lsl #2]
   13d30:	ldr	r3, [r0, #16]
   13d34:	cmp	r2, r3
   13d38:	bcc	13d20 <mythread_queue_node_malloc_round@@Base+0x8c>
   13d3c:	ldr	r2, [r4, #8]
   13d40:	add	r7, r7, #1
   13d44:	cmp	r7, r2
   13d48:	bcc	13d10 <mythread_queue_node_malloc_round@@Base+0x7c>
   13d4c:	cmp	r4, #0
   13d50:	beq	13d68 <mythread_queue_node_malloc_round@@Base+0xd4>
   13d54:	mov	r1, #0
   13d58:	str	r1, [r0, #24]
   13d5c:	str	r1, [r0, #4]
   13d60:	str	r1, [r0, #12]
   13d64:	str	r1, [r0, #16]
   13d68:	ldm	r8, {r0, r1}
   13d6c:	ldr	r2, [r8, #12]
   13d70:	ldr	r0, [r0, r1, lsl #2]
   13d74:	add	r1, r2, r2, lsl #1
   13d78:	add	r0, r0, r1, lsl #2
   13d7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013d80 <mythread_queue_list_entry_wait_for_done@@Base>:
   13d80:	push	{r4, r5, r6, sl, fp, lr}
   13d84:	add	fp, sp, #16
   13d88:	cmp	r1, #0
   13d8c:	beq	13e04 <mythread_queue_list_entry_wait_for_done@@Base+0x84>
   13d90:	ldr	ip, [r1, #8]
   13d94:	mov	r4, r1
   13d98:	cmp	ip, #0
   13d9c:	beq	13e04 <mythread_queue_list_entry_wait_for_done@@Base+0x84>
   13da0:	mov	r5, r0
   13da4:	ldm	r4, {r0, r1}
   13da8:	mov	r6, #0
   13dac:	ldr	r3, [r1, r6, lsl #2]
   13db0:	ldr	r2, [r0, #16]
   13db4:	cmp	r3, r2
   13db8:	bcc	13dd8 <mythread_queue_list_entry_wait_for_done@@Base+0x58>
   13dbc:	add	r6, r6, #1
   13dc0:	cmp	r6, ip
   13dc4:	bcs	13e04 <mythread_queue_list_entry_wait_for_done@@Base+0x84>
   13dc8:	ldr	r3, [r1, r6, lsl #2]
   13dcc:	ldr	r2, [r0, #16]
   13dd0:	cmp	r3, r2
   13dd4:	bcs	13dbc <mythread_queue_list_entry_wait_for_done@@Base+0x3c>
   13dd8:	ldr	r0, [r5, #24]
   13ddc:	bl	11138 <mythread_nanosleep_sleep@plt>
   13de0:	ldm	r4, {r0, r1}
   13de4:	ldr	r2, [r1, r6, lsl #2]
   13de8:	ldr	r3, [r0, #16]
   13dec:	cmp	r2, r3
   13df0:	bcc	13dd8 <mythread_queue_list_entry_wait_for_done@@Base+0x58>
   13df4:	ldr	ip, [r4, #8]
   13df8:	add	r6, r6, #1
   13dfc:	cmp	r6, ip
   13e00:	bcc	13dc8 <mythread_queue_list_entry_wait_for_done@@Base+0x48>
   13e04:	pop	{r4, r5, r6, sl, fp, pc}

00013e08 <mythread_queue_list_entry_clean@@Base>:
   13e08:	cmp	r0, #0
   13e0c:	bxeq	lr
   13e10:	ldr	r0, [r0]
   13e14:	mov	r1, #0
   13e18:	str	r1, [r0, #24]
   13e1c:	str	r1, [r0, #4]
   13e20:	str	r1, [r0, #12]
   13e24:	str	r1, [r0, #16]
   13e28:	bx	lr

00013e2c <mythread_queue_list_create@@Base>:
   13e2c:	mov	r0, #1
   13e30:	mov	r1, #12
   13e34:	b	11000 <mycore_calloc@plt>

00013e38 <mythread_queue_list_destroy@@Base>:
   13e38:	cmp	r0, #0
   13e3c:	bxeq	lr
   13e40:	b	11a98 <mycore_free@plt>

00013e44 <mythread_queue_list_get_count@@Base>:
   13e44:	ldr	r0, [r0, #8]
   13e48:	bx	lr

00013e4c <mythread_queue_list_see_for_done@@Base>:
   13e4c:	push	{r4, r5, fp, lr}
   13e50:	add	fp, sp, #8
   13e54:	mov	r2, r0
   13e58:	mov	r0, #1
   13e5c:	cmp	r1, #0
   13e60:	beq	13ec0 <mythread_queue_list_see_for_done@@Base+0x74>
   13e64:	ldr	r1, [r1]
   13e68:	cmp	r1, #0
   13e6c:	beq	13ec0 <mythread_queue_list_see_for_done@@Base+0x74>
   13e70:	ldr	ip, [r2, #4]
   13e74:	cmp	ip, #0
   13e78:	beq	13eb4 <mythread_queue_list_see_for_done@@Base+0x68>
   13e7c:	ldr	lr, [r1]
   13e80:	ldr	r2, [r1, #4]
   13e84:	mov	r3, #0
   13e88:	ldr	r4, [r2, r3, lsl #2]
   13e8c:	ldr	r5, [lr, #16]
   13e90:	cmp	r4, r5
   13e94:	bcc	13ec4 <mythread_queue_list_see_for_done@@Base+0x78>
   13e98:	add	r3, r3, #1
   13e9c:	cmp	r3, ip
   13ea0:	bcc	13e88 <mythread_queue_list_see_for_done@@Base+0x3c>
   13ea4:	ldr	r1, [r1, #12]
   13ea8:	cmp	r1, #0
   13eac:	bne	13e7c <mythread_queue_list_see_for_done@@Base+0x30>
   13eb0:	b	13ec0 <mythread_queue_list_see_for_done@@Base+0x74>
   13eb4:	ldr	r1, [r1, #12]
   13eb8:	cmp	r1, #0
   13ebc:	bne	13eb4 <mythread_queue_list_see_for_done@@Base+0x68>
   13ec0:	pop	{r4, r5, fp, pc}
   13ec4:	mov	r0, #0
   13ec8:	pop	{r4, r5, fp, pc}

00013ecc <mythread_queue_list_see_for_done_by_thread@@Base>:
   13ecc:	push	{fp, lr}
   13ed0:	mov	fp, sp
   13ed4:	mov	r0, #1
   13ed8:	cmp	r1, #0
   13edc:	popeq	{fp, pc}
   13ee0:	ldr	r1, [r1]
   13ee4:	cmp	r1, #0
   13ee8:	beq	13f10 <mythread_queue_list_see_for_done_by_thread@@Base+0x44>
   13eec:	ldr	ip, [r1]
   13ef0:	ldr	r3, [r1, #4]
   13ef4:	ldr	lr, [r3, r2, lsl #2]
   13ef8:	ldr	r3, [ip, #16]
   13efc:	cmp	lr, r3
   13f00:	bcc	13f14 <mythread_queue_list_see_for_done_by_thread@@Base+0x48>
   13f04:	ldr	r1, [r1, #12]
   13f08:	cmp	r1, #0
   13f0c:	bne	13eec <mythread_queue_list_see_for_done_by_thread@@Base+0x20>
   13f10:	pop	{fp, pc}
   13f14:	mov	r0, #0
   13f18:	pop	{fp, pc}

00013f1c <mythread_queue_list_entry_push@@Base>:
   13f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f20:	add	fp, sp, #28
   13f24:	sub	sp, sp, #4
   13f28:	ldr	r4, [fp, #12]
   13f2c:	mov	r8, r0
   13f30:	mov	sl, r1
   13f34:	mov	r1, #20
   13f38:	mov	r7, r3
   13f3c:	str	r2, [sp]
   13f40:	cmp	r4, #0
   13f44:	movne	r0, #0
   13f48:	strne	r0, [r4]
   13f4c:	mov	r0, #1
   13f50:	bl	11000 <mycore_calloc@plt>
   13f54:	cmp	r0, #0
   13f58:	beq	13f8c <mythread_queue_list_entry_push@@Base+0x70>
   13f5c:	mov	r9, r0
   13f60:	ldr	r0, [fp, #8]
   13f64:	cmp	r0, #0
   13f68:	str	r0, [r9, #8]
   13f6c:	beq	13fa8 <mythread_queue_list_entry_push@@Base+0x8c>
   13f70:	mov	r1, #4
   13f74:	bl	11000 <mycore_calloc@plt>
   13f78:	cmp	r0, #0
   13f7c:	str	r0, [r9, #4]
   13f80:	bne	13fb0 <mythread_queue_list_entry_push@@Base+0x94>
   13f84:	mov	r0, r9
   13f88:	bl	11a98 <mycore_free@plt>
   13f8c:	cmp	r4, #0
   13f90:	mov	r9, #0
   13f94:	movne	r0, #60	; 0x3c
   13f98:	strne	r0, [r4]
   13f9c:	mov	r0, r9
   13fa0:	sub	sp, fp, #28
   13fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fa8:	mov	r0, #0
   13fac:	str	r0, [r9, #4]
   13fb0:	cmp	sl, #0
   13fb4:	str	r7, [r9]
   13fb8:	beq	14044 <mythread_queue_list_entry_push@@Base+0x128>
   13fbc:	mov	r7, #0
   13fc0:	mov	r4, #0
   13fc4:	b	13fd8 <mythread_queue_list_entry_push@@Base+0xbc>
   13fc8:	bl	11168 <mythread_suspend@plt>
   13fcc:	add	r4, r4, #1
   13fd0:	cmp	r4, sl
   13fd4:	beq	14044 <mythread_queue_list_entry_push@@Base+0x128>
   13fd8:	ldr	r0, [r8, r4, lsl #2]
   13fdc:	ldr	r3, [r0, #32]
   13fe0:	ldr	r1, [r0, #4]
   13fe4:	ldr	r2, [r0, #12]
   13fe8:	cmp	r3, #1
   13fec:	bne	1401c <mythread_queue_list_entry_push@@Base+0x100>
   13ff0:	cmp	r2, r1
   13ff4:	bhi	13fc8 <mythread_queue_list_entry_push@@Base+0xac>
   13ff8:	ldr	r3, [r9, #4]
   13ffc:	mov	r5, #0
   14000:	add	r3, r3, r2, lsl #2
   14004:	str	r5, [r3, r5, lsl #2]
   14008:	add	r5, r5, #1
   1400c:	add	r6, r2, r5
   14010:	cmp	r6, r1
   14014:	bls	14004 <mythread_queue_list_entry_push@@Base+0xe8>
   14018:	b	14038 <mythread_queue_list_entry_push@@Base+0x11c>
   1401c:	cmp	r2, r1
   14020:	bhi	13fc8 <mythread_queue_list_entry_push@@Base+0xac>
   14024:	ldr	r3, [r9, #4]
   14028:	str	r7, [r3, r2, lsl #2]
   1402c:	add	r2, r2, #1
   14030:	cmp	r2, r1
   14034:	bls	14028 <mythread_queue_list_entry_push@@Base+0x10c>
   14038:	cmp	r0, #0
   1403c:	bne	13fc8 <mythread_queue_list_entry_push@@Base+0xac>
   14040:	b	13fcc <mythread_queue_list_entry_push@@Base+0xb0>
   14044:	ldr	r2, [sp]
   14048:	ldr	r0, [r2]
   1404c:	cmp	r0, #0
   14050:	beq	14068 <mythread_queue_list_entry_push@@Base+0x14c>
   14054:	mov	r0, r2
   14058:	ldr	r1, [r0, #4]!
   1405c:	str	r9, [r1, #12]
   14060:	str	r1, [r9, #16]
   14064:	b	14070 <mythread_queue_list_entry_push@@Base+0x154>
   14068:	mov	r0, r2
   1406c:	str	r9, [r0], #4
   14070:	str	r9, [r0]
   14074:	cmp	sl, #0
   14078:	ldr	r0, [r2, #8]
   1407c:	add	r0, r0, #1
   14080:	str	r0, [r2, #8]
   14084:	bne	140a0 <mythread_queue_list_entry_push@@Base+0x184>
   14088:	mov	r0, r9
   1408c:	sub	sp, fp, #28
   14090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14094:	add	r8, r8, #4
   14098:	subs	sl, sl, #1
   1409c:	beq	14088 <mythread_queue_list_entry_push@@Base+0x16c>
   140a0:	ldr	r0, [r8]
   140a4:	cmp	r0, #0
   140a8:	beq	14094 <mythread_queue_list_entry_push@@Base+0x178>
   140ac:	mov	r1, #0
   140b0:	bl	11414 <mythread_resume@plt>
   140b4:	b	14094 <mythread_queue_list_entry_push@@Base+0x178>

000140b8 <mythread_queue_list_entry_make_batch@@Base>:
   140b8:	cmp	r1, #0
   140bc:	beq	140f0 <mythread_queue_list_entry_make_batch@@Base+0x38>
   140c0:	ldr	ip, [r0, #4]
   140c4:	ldr	r0, [r0, #12]
   140c8:	cmp	r0, ip
   140cc:	bxhi	lr
   140d0:	ldr	r1, [r1, #4]
   140d4:	mov	r3, #0
   140d8:	add	r1, r1, r0, lsl #2
   140dc:	str	r3, [r1, r3, lsl #2]
   140e0:	add	r3, r3, #1
   140e4:	add	r2, r0, r3
   140e8:	cmp	r2, ip
   140ec:	bls	140dc <mythread_queue_list_entry_make_batch@@Base+0x24>
   140f0:	bx	lr

000140f4 <mythread_queue_list_entry_make_stream@@Base>:
   140f4:	cmp	r1, #0
   140f8:	beq	14124 <mythread_queue_list_entry_make_stream@@Base+0x30>
   140fc:	ldr	r2, [r0, #4]
   14100:	ldr	r0, [r0, #12]
   14104:	cmp	r0, r2
   14108:	bxhi	lr
   1410c:	ldr	r1, [r1, #4]
   14110:	mov	r3, #0
   14114:	str	r3, [r1, r0, lsl #2]
   14118:	add	r0, r0, #1
   1411c:	cmp	r0, r2
   14120:	bls	14114 <mythread_queue_list_entry_make_stream@@Base+0x20>
   14124:	bx	lr

00014128 <mythread_queue_list_entry_delete@@Base>:
   14128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1412c:	add	fp, sp, #28
   14130:	sub	sp, sp, #4
   14134:	mov	r9, r3
   14138:	mov	sl, r2
   1413c:	mov	r7, r1
   14140:	mov	r4, r0
   14144:	cmp	r1, #0
   14148:	beq	14188 <mythread_queue_list_entry_delete@@Base+0x60>
   1414c:	mov	r6, r4
   14150:	mov	r5, r7
   14154:	ldr	r0, [r6]
   14158:	cmp	r0, #0
   1415c:	bne	14178 <mythread_queue_list_entry_delete@@Base+0x50>
   14160:	add	r6, r6, #4
   14164:	subs	r5, r5, #1
   14168:	beq	14188 <mythread_queue_list_entry_delete@@Base+0x60>
   1416c:	ldr	r0, [r6]
   14170:	cmp	r0, #0
   14174:	beq	14160 <mythread_queue_list_entry_delete@@Base+0x38>
   14178:	bl	11168 <mythread_suspend@plt>
   1417c:	add	r6, r6, #4
   14180:	subs	r5, r5, #1
   14184:	bne	1416c <mythread_queue_list_entry_delete@@Base+0x44>
   14188:	ldr	r0, [r9, #16]
   1418c:	ldr	r1, [r9, #12]
   14190:	ldr	r8, [fp, #8]
   14194:	cmp	r0, #0
   14198:	strne	r1, [r0, #12]
   1419c:	cmp	r1, #0
   141a0:	strne	r0, [r1, #16]
   141a4:	ldr	r2, [sl]
   141a8:	cmp	r2, r9
   141ac:	streq	r1, [sl]
   141b0:	ldr	r1, [sl, #4]
   141b4:	cmp	r1, r9
   141b8:	streq	r0, [sl, #4]
   141bc:	cmp	r7, #0
   141c0:	ldr	r0, [sl, #8]
   141c4:	sub	r0, r0, #1
   141c8:	str	r0, [sl, #8]
   141cc:	bne	14264 <mythread_queue_list_entry_delete@@Base+0x13c>
   141d0:	cmp	r8, #0
   141d4:	beq	14234 <mythread_queue_list_entry_delete@@Base+0x10c>
   141d8:	ldr	r5, [r9]
   141dc:	cmp	r5, #0
   141e0:	beq	14234 <mythread_queue_list_entry_delete@@Base+0x10c>
   141e4:	ldr	r0, [r5]
   141e8:	cmp	r0, #0
   141ec:	beq	1422c <mythread_queue_list_entry_delete@@Base+0x104>
   141f0:	ldr	r0, [r0]
   141f4:	bl	11a98 <mycore_free@plt>
   141f8:	ldr	r0, [r5, #4]
   141fc:	cmp	r0, #0
   14200:	beq	14224 <mythread_queue_list_entry_delete@@Base+0xfc>
   14204:	mov	r4, #1
   14208:	ldr	r0, [r5]
   1420c:	ldr	r0, [r0, r4, lsl #2]
   14210:	bl	11a98 <mycore_free@plt>
   14214:	ldr	r0, [r5, #4]
   14218:	add	r4, r4, #1
   1421c:	cmp	r4, r0
   14220:	bls	14208 <mythread_queue_list_entry_delete@@Base+0xe0>
   14224:	ldr	r0, [r5]
   14228:	bl	11a98 <mycore_free@plt>
   1422c:	mov	r0, r5
   14230:	bl	11a98 <mycore_free@plt>
   14234:	ldr	r0, [r9, #4]
   14238:	cmp	r0, #0
   1423c:	beq	14244 <mythread_queue_list_entry_delete@@Base+0x11c>
   14240:	bl	11a98 <mycore_free@plt>
   14244:	mov	r0, r9
   14248:	bl	11a98 <mycore_free@plt>
   1424c:	mov	r0, #0
   14250:	sub	sp, fp, #28
   14254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14258:	add	r4, r4, #4
   1425c:	subs	r7, r7, #1
   14260:	beq	141d0 <mythread_queue_list_entry_delete@@Base+0xa8>
   14264:	ldr	r0, [r4]
   14268:	cmp	r0, #0
   1426c:	beq	14258 <mythread_queue_list_entry_delete@@Base+0x130>
   14270:	mov	r1, #0
   14274:	bl	11414 <mythread_resume@plt>
   14278:	b	14258 <mythread_queue_list_entry_delete@@Base+0x130>

0001427c <mythread_queue_list_entry_see_for_done@@Base>:
   1427c:	push	{r4, sl, fp, lr}
   14280:	add	fp, sp, #8
   14284:	mov	r1, r0
   14288:	mov	r0, #1
   1428c:	cmp	r1, #0
   14290:	beq	142c8 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   14294:	ldr	ip, [r1, #8]
   14298:	cmp	ip, #0
   1429c:	beq	142c8 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   142a0:	ldr	lr, [r1]
   142a4:	ldr	r1, [r1, #4]
   142a8:	mov	r2, #0
   142ac:	ldr	r3, [r1, r2, lsl #2]
   142b0:	ldr	r4, [lr, #16]
   142b4:	cmp	r3, r4
   142b8:	bcc	142cc <mythread_queue_list_entry_see_for_done@@Base+0x50>
   142bc:	add	r2, r2, #1
   142c0:	cmp	r2, ip
   142c4:	bcc	142ac <mythread_queue_list_entry_see_for_done@@Base+0x30>
   142c8:	pop	{r4, sl, fp, pc}
   142cc:	mov	r0, #0
   142d0:	pop	{r4, sl, fp, pc}

000142d4 <mythread_function_see_opt@@Base>:
   142d4:	push	{r4, r5, r6, sl, fp, lr}
   142d8:	add	fp, sp, #16
   142dc:	sub	sp, sp, #8
   142e0:	str	r1, [sp, #4]
   142e4:	mov	r4, r0
   142e8:	mov	r6, #0
   142ec:	ldr	r0, [r0, #28]
   142f0:	ldr	r1, [r0, #16]
   142f4:	ldr	r5, [r1, #8]
   142f8:	cmp	r5, r3
   142fc:	bne	14368 <mythread_function_see_opt@@Base+0x94>
   14300:	ldr	r3, [sp, #4]
   14304:	tst	r3, #4
   14308:	bne	14374 <mythread_function_see_opt@@Base+0xa0>
   1430c:	ldr	r3, [sp, #4]
   14310:	tst	r3, #2
   14314:	beq	143cc <mythread_function_see_opt@@Base+0xf8>
   14318:	cmp	r1, #0
   1431c:	beq	1434c <mythread_function_see_opt@@Base+0x78>
   14320:	ldr	r1, [r1]
   14324:	cmp	r1, #0
   14328:	beq	1434c <mythread_function_see_opt@@Base+0x78>
   1432c:	ldm	r1, {r3, r5}
   14330:	ldr	r5, [r5, r2, lsl #2]
   14334:	ldr	r3, [r3, #16]
   14338:	cmp	r5, r3
   1433c:	bcc	143cc <mythread_function_see_opt@@Base+0xf8>
   14340:	ldr	r1, [r1, #12]
   14344:	cmp	r1, #0
   14348:	bne	1432c <mythread_function_see_opt@@Base+0x58>
   1434c:	ldr	r1, [r4, #20]
   14350:	bl	11510 <mythread_mutex_close@plt>
   14354:	ldr	r0, [r4, #24]
   14358:	bl	1193c <mythread_nanosleep_destroy@plt>
   1435c:	mov	r0, #2
   14360:	mov	r6, #1
   14364:	str	r0, [r4, #12]
   14368:	mov	r0, r6
   1436c:	sub	sp, fp, #16
   14370:	pop	{r4, r5, r6, sl, fp, pc}
   14374:	cmp	r1, #0
   14378:	beq	143a8 <mythread_function_see_opt@@Base+0xd4>
   1437c:	ldr	r1, [r1]
   14380:	cmp	r1, #0
   14384:	beq	143a8 <mythread_function_see_opt@@Base+0xd4>
   14388:	ldm	r1, {r3, r5}
   1438c:	ldr	r5, [r5, r2, lsl #2]
   14390:	ldr	r3, [r3, #16]
   14394:	cmp	r5, r3
   14398:	bcc	143cc <mythread_function_see_opt@@Base+0xf8>
   1439c:	ldr	r1, [r1, #12]
   143a0:	cmp	r1, #0
   143a4:	bne	14388 <mythread_function_see_opt@@Base+0xb4>
   143a8:	mov	r1, #4
   143ac:	str	r1, [r4, #12]
   143b0:	ldr	r1, [r4, #20]
   143b4:	bl	11a68 <mythread_mutex_wait@plt>
   143b8:	mov	r6, #0
   143bc:	str	r6, [r4, #12]
   143c0:	mov	r0, r6
   143c4:	sub	sp, fp, #16
   143c8:	pop	{r4, r5, r6, sl, fp, pc}
   143cc:	ldr	r0, [fp, #8]
   143d0:	bl	11138 <mythread_nanosleep_sleep@plt>
   143d4:	mov	r0, r6
   143d8:	sub	sp, fp, #16
   143dc:	pop	{r4, r5, r6, sl, fp, pc}

000143e0 <mythread_function_queue_batch@@Base>:
   143e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143e4:	add	fp, sp, #28
   143e8:	sub	sp, sp, #12
   143ec:	ldr	r4, [r0, #28]
   143f0:	ldr	r1, [r0]
   143f4:	mov	r5, r0
   143f8:	ldr	r6, [r4, #16]
   143fc:	mov	r0, r4
   14400:	bl	10f7c <myhread_increase_id_by_entry_id@plt>
   14404:	ldr	r1, [r5, #20]
   14408:	mov	r7, r0
   1440c:	mov	r0, r4
   14410:	bl	11a68 <mythread_mutex_wait@plt>
   14414:	str	r6, [sp, #8]
   14418:	ldr	r0, [r4, #36]	; 0x24
   1441c:	tst	r0, #1
   14420:	beq	14454 <mythread_function_queue_batch@@Base+0x74>
   14424:	mov	r0, #1
   14428:	str	r0, [r5, #12]
   1442c:	ldr	r0, [r4, #36]	; 0x24
   14430:	tst	r0, #1
   14434:	beq	1444c <mythread_function_queue_batch@@Base+0x6c>
   14438:	ldr	r0, [r5, #24]
   1443c:	bl	11138 <mythread_nanosleep_sleep@plt>
   14440:	ldr	r0, [r4, #36]	; 0x24
   14444:	tst	r0, #1
   14448:	bne	14438 <mythread_function_queue_batch@@Base+0x58>
   1444c:	mov	r0, #0
   14450:	str	r0, [r5, #12]
   14454:	ldr	r9, [r6]
   14458:	mov	r8, #0
   1445c:	cmp	r9, #0
   14460:	bne	144d0 <mythread_function_queue_batch@@Base+0xf0>
   14464:	b	144f4 <mythread_function_queue_batch@@Base+0x114>
   14468:	ldr	ip, [sl, r7, lsl #2]
   1446c:	ldr	r2, [r0, #20]
   14470:	ldr	r3, [sl, r7, lsl #2]
   14474:	mov	r6, r5
   14478:	ldr	r5, [r0]
   1447c:	ldr	r0, [r0, #20]
   14480:	mov	r1, r7
   14484:	mov	r7, r4
   14488:	udiv	r4, r3, r0
   1448c:	mls	r0, r4, r0, r3
   14490:	mov	r4, r7
   14494:	mov	r7, r1
   14498:	udiv	r1, ip, r2
   1449c:	add	r0, r0, r0, lsl #1
   144a0:	ldr	r1, [r5, r1, lsl #2]
   144a4:	mov	r5, r6
   144a8:	add	r1, r1, r0, lsl #2
   144ac:	ldm	r6, {r0, r2}
   144b0:	blx	r2
   144b4:	ldr	r0, [r4, #4]
   144b8:	ldr	r1, [sl, r7, lsl #2]
   144bc:	add	r0, r1, r0
   144c0:	str	r0, [sl, r7, lsl #2]
   144c4:	ldr	r9, [r9, #12]
   144c8:	cmp	r9, #0
   144cc:	beq	144f4 <mythread_function_queue_batch@@Base+0x114>
   144d0:	ldm	r9, {r0, sl}
   144d4:	ldr	r1, [sl, r7, lsl #2]
   144d8:	ldr	r2, [r0, #16]
   144dc:	cmp	r1, r2
   144e0:	bcc	14468 <mythread_function_queue_batch@@Base+0x88>
   144e4:	ldr	r9, [r9, #12]
   144e8:	add	r8, r8, #1
   144ec:	cmp	r9, #0
   144f0:	bne	144d0 <mythread_function_queue_batch@@Base+0xf0>
   144f4:	ldr	r6, [sp, #8]
   144f8:	ldr	r0, [r6, #8]
   144fc:	cmp	r8, r0
   14500:	bne	14418 <mythread_function_queue_batch@@Base+0x38>
   14504:	ldr	r1, [r4, #36]	; 0x24
   14508:	ldr	r0, [r5, #24]
   1450c:	mov	r2, r7
   14510:	mov	r3, r8
   14514:	str	r0, [sp]
   14518:	mov	r0, r5
   1451c:	bl	10fd0 <mythread_function_see_opt@plt>
   14520:	cmp	r0, #0
   14524:	beq	14418 <mythread_function_queue_batch@@Base+0x38>
   14528:	mov	r0, #0
   1452c:	sub	sp, fp, #28
   14530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014534 <mythread_function_queue_stream@@Base>:
   14534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14538:	add	fp, sp, #28
   1453c:	sub	sp, sp, #12
   14540:	ldr	r4, [r0, #28]
   14544:	ldr	r1, [r0]
   14548:	mov	r8, r0
   1454c:	ldr	r5, [r4, #16]
   14550:	mov	r0, r4
   14554:	bl	10f7c <myhread_increase_id_by_entry_id@plt>
   14558:	ldr	r1, [r8, #20]
   1455c:	mov	r6, r0
   14560:	mov	r0, r4
   14564:	bl	11a68 <mythread_mutex_wait@plt>
   14568:	str	r4, [sp, #8]
   1456c:	str	r5, [sp, #4]
   14570:	ldr	r0, [r4, #36]	; 0x24
   14574:	tst	r0, #1
   14578:	beq	145ac <mythread_function_queue_stream@@Base+0x78>
   1457c:	mov	r0, #1
   14580:	str	r0, [r8, #12]
   14584:	ldr	r0, [r4, #36]	; 0x24
   14588:	tst	r0, #1
   1458c:	beq	145a4 <mythread_function_queue_stream@@Base+0x70>
   14590:	ldr	r0, [r8, #24]
   14594:	bl	11138 <mythread_nanosleep_sleep@plt>
   14598:	ldr	r0, [r4, #36]	; 0x24
   1459c:	tst	r0, #1
   145a0:	bne	14590 <mythread_function_queue_stream@@Base+0x5c>
   145a4:	mov	r0, #0
   145a8:	str	r0, [r8, #12]
   145ac:	ldr	r9, [r5]
   145b0:	mov	r7, #0
   145b4:	cmp	r9, #0
   145b8:	bne	1460c <mythread_function_queue_stream@@Base+0xd8>
   145bc:	b	14630 <mythread_function_queue_stream@@Base+0xfc>
   145c0:	ldr	r1, [sl, r6, lsl #2]
   145c4:	ldr	r2, [r0, #20]
   145c8:	ldr	r3, [sl, r6, lsl #2]
   145cc:	ldr	r5, [r0]
   145d0:	ldr	r0, [r0, #20]
   145d4:	udiv	r4, r3, r0
   145d8:	udiv	r1, r1, r2
   145dc:	mls	r0, r4, r0, r3
   145e0:	ldr	r1, [r5, r1, lsl #2]
   145e4:	add	r0, r0, r0, lsl #1
   145e8:	add	r1, r1, r0, lsl #2
   145ec:	ldm	r8, {r0, r2}
   145f0:	blx	r2
   145f4:	ldr	r0, [sl, r6, lsl #2]
   145f8:	add	r0, r0, #1
   145fc:	str	r0, [sl, r6, lsl #2]
   14600:	ldr	r9, [r9, #12]
   14604:	cmp	r9, #0
   14608:	beq	14630 <mythread_function_queue_stream@@Base+0xfc>
   1460c:	ldm	r9, {r0, sl}
   14610:	ldr	r1, [sl, r6, lsl #2]
   14614:	ldr	r2, [r0, #16]
   14618:	cmp	r1, r2
   1461c:	bcc	145c0 <mythread_function_queue_stream@@Base+0x8c>
   14620:	ldr	r9, [r9, #12]
   14624:	add	r7, r7, #1
   14628:	cmp	r9, #0
   1462c:	bne	1460c <mythread_function_queue_stream@@Base+0xd8>
   14630:	ldr	r5, [sp, #4]
   14634:	ldr	r0, [r5, #8]
   14638:	ldr	r4, [sp, #8]
   1463c:	cmp	r7, r0
   14640:	bne	14570 <mythread_function_queue_stream@@Base+0x3c>
   14644:	ldr	r1, [r4, #36]	; 0x24
   14648:	ldr	r0, [r8, #24]
   1464c:	mov	r2, r6
   14650:	mov	r3, r7
   14654:	str	r0, [sp]
   14658:	mov	r0, r8
   1465c:	bl	10fd0 <mythread_function_see_opt@plt>
   14660:	cmp	r0, #0
   14664:	beq	14570 <mythread_function_queue_stream@@Base+0x3c>
   14668:	mov	r0, #0
   1466c:	sub	sp, fp, #28
   14670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014674 <mythread_function@@Base>:
   14674:	push	{r4, r5, r6, sl, fp, lr}
   14678:	add	fp, sp, #16
   1467c:	ldr	r5, [r0, #28]
   14680:	ldr	r1, [r0, #20]
   14684:	mov	r4, r0
   14688:	mov	r0, r5
   1468c:	bl	11a68 <mythread_mutex_wait@plt>
   14690:	mov	r6, #0
   14694:	ldm	r4, {r0, r2}
   14698:	mov	r1, r4
   1469c:	blx	r2
   146a0:	ldr	r0, [r4, #12]
   146a4:	orr	r0, r0, #8
   146a8:	str	r0, [r4, #12]
   146ac:	ldr	r1, [r4, #12]
   146b0:	ldr	r0, [r4, #12]
   146b4:	tst	r1, #1
   146b8:	bne	146d4 <mythread_function@@Base+0x60>
   146bc:	orr	r0, r0, #4
   146c0:	str	r0, [r4, #12]
   146c4:	mov	r0, r5
   146c8:	ldr	r1, [r4, #20]
   146cc:	bl	11a68 <mythread_mutex_wait@plt>
   146d0:	b	146ec <mythread_function@@Base+0x78>
   146d4:	tst	r0, #1
   146d8:	beq	146ec <mythread_function@@Base+0x78>
   146dc:	ldr	r0, [r4, #24]
   146e0:	bl	11138 <mythread_nanosleep_sleep@plt>
   146e4:	ldr	r0, [r4, #12]
   146e8:	b	146d4 <mythread_function@@Base+0x60>
   146ec:	ldr	r0, [r5, #36]	; 0x24
   146f0:	tst	r0, #2
   146f4:	ldreq	r0, [r4, #12]
   146f8:	tsteq	r0, #2
   146fc:	bne	14708 <mythread_function@@Base+0x94>
   14700:	str	r6, [r4, #12]
   14704:	b	14694 <mythread_function@@Base+0x20>
   14708:	ldr	r1, [r4, #20]
   1470c:	mov	r0, r5
   14710:	bl	11510 <mythread_mutex_close@plt>
   14714:	ldr	r0, [r4, #24]
   14718:	bl	1193c <mythread_nanosleep_destroy@plt>
   1471c:	mov	r0, #2
   14720:	str	r0, [r4, #12]
   14724:	mov	r0, #0
   14728:	pop	{r4, r5, r6, sl, fp, pc}

0001472c <mycore_power@@Base>:
   1472c:	cmp	r1, #0
   14730:	moveq	r0, #1
   14734:	bxeq	lr
   14738:	mov	r3, r0
   1473c:	mov	r0, #1
   14740:	mov	ip, #0
   14744:	tst	r1, #1
   14748:	mov	r2, r3
   1474c:	mul	r3, r3, r3
   14750:	movweq	r2, #1
   14754:	cmp	ip, r1, lsr #1
   14758:	mul	r0, r2, r0
   1475c:	lsr	r2, r1, #1
   14760:	mov	r1, r2
   14764:	bne	14744 <mycore_power@@Base+0x18>
   14768:	bx	lr

0001476c <mycore_strncasecmp@@Base>:
   1476c:	push	{r4, sl, fp, lr}
   14770:	add	fp, sp, #8
   14774:	cmp	r0, #0
   14778:	mov	lr, r0
   1477c:	cmpne	r1, #0
   14780:	bne	14790 <mycore_strncasecmp@@Base+0x24>
   14784:	subs	r0, lr, r1
   14788:	movwne	r0, #1
   1478c:	pop	{r4, sl, fp, pc}
   14790:	mov	r0, #0
   14794:	cmp	r2, #0
   14798:	beq	147cc <mycore_strncasecmp@@Base+0x60>
   1479c:	ldr	ip, [pc, #52]	; 147d8 <mycore_strncasecmp@@Base+0x6c>
   147a0:	add	ip, pc, ip
   147a4:	ldrb	r3, [r1]
   147a8:	ldrb	r4, [lr]
   147ac:	ldrb	r3, [ip, r3]
   147b0:	ldrb	r4, [ip, r4]
   147b4:	cmp	r4, r3
   147b8:	bne	147d0 <mycore_strncasecmp@@Base+0x64>
   147bc:	subs	r2, r2, #1
   147c0:	add	r1, r1, #1
   147c4:	add	lr, lr, #1
   147c8:	bne	147a4 <mycore_strncasecmp@@Base+0x38>
   147cc:	pop	{r4, sl, fp, pc}
   147d0:	mov	r0, r2
   147d4:	pop	{r4, sl, fp, pc}
   147d8:	andeq	r1, r2, r8, lsl #16

000147dc <mycore_strcasecmp@@Base>:
   147dc:	push	{r4, sl, fp, lr}
   147e0:	add	fp, sp, #8
   147e4:	cmp	r0, #0
   147e8:	cmpne	r1, #0
   147ec:	bne	14800 <mycore_strcasecmp@@Base+0x24>
   147f0:	subs	r2, r0, r1
   147f4:	movwne	r2, #1
   147f8:	mov	r0, r2
   147fc:	pop	{r4, sl, fp, pc}
   14800:	ldrb	r2, [r1]
   14804:	ldr	ip, [pc, #84]	; 14860 <mycore_strcasecmp@@Base+0x84>
   14808:	ldrb	r3, [r0]
   1480c:	add	ip, pc, ip
   14810:	ldrb	lr, [ip, r2]
   14814:	ldrb	r4, [ip, r3]
   14818:	mov	r2, #1
   1481c:	cmp	r4, lr
   14820:	bne	1484c <mycore_strcasecmp@@Base+0x70>
   14824:	mov	r2, #1
   14828:	tst	r3, #255	; 0xff
   1482c:	beq	14854 <mycore_strcasecmp@@Base+0x78>
   14830:	ldrb	r3, [r1, r2]
   14834:	ldrb	lr, [ip, r3]
   14838:	ldrb	r3, [r0, r2]
   1483c:	add	r2, r2, #1
   14840:	ldrb	r4, [ip, r3]
   14844:	cmp	r4, lr
   14848:	beq	14828 <mycore_strcasecmp@@Base+0x4c>
   1484c:	mov	r0, r2
   14850:	pop	{r4, sl, fp, pc}
   14854:	mov	r2, #0
   14858:	mov	r0, r2
   1485c:	pop	{r4, sl, fp, pc}
   14860:	muleq	r2, ip, r7

00014864 <mycore_strncmp@@Base>:
   14864:	push	{fp, lr}
   14868:	mov	fp, sp
   1486c:	cmp	r0, #0
   14870:	mov	lr, r0
   14874:	cmpne	r1, #0
   14878:	bne	14888 <mycore_strncmp@@Base+0x24>
   1487c:	subs	r0, lr, r1
   14880:	movwne	r0, #1
   14884:	pop	{fp, pc}
   14888:	mov	r0, #0
   1488c:	cmp	r2, #0
   14890:	popeq	{fp, pc}
   14894:	ldrb	ip, [r1]
   14898:	ldrb	r3, [lr]
   1489c:	cmp	r3, ip
   148a0:	bne	148b8 <mycore_strncmp@@Base+0x54>
   148a4:	subs	r2, r2, #1
   148a8:	add	r1, r1, #1
   148ac:	add	lr, lr, #1
   148b0:	bne	14894 <mycore_strncmp@@Base+0x30>
   148b4:	pop	{fp, pc}
   148b8:	mov	r0, r2
   148bc:	pop	{fp, pc}

000148c0 <mycore_strcmp@@Base>:
   148c0:	cmp	r0, #0
   148c4:	cmpne	r1, #0
   148c8:	bne	148dc <mycore_strcmp@@Base+0x1c>
   148cc:	subs	r2, r0, r1
   148d0:	movwne	r2, #1
   148d4:	mov	r0, r2
   148d8:	bx	lr
   148dc:	ldrb	r3, [r0]
   148e0:	ldrb	ip, [r1]
   148e4:	mov	r2, #1
   148e8:	cmp	r3, ip
   148ec:	bne	14910 <mycore_strcmp@@Base+0x50>
   148f0:	mov	r2, #1
   148f4:	tst	r3, #255	; 0xff
   148f8:	beq	14918 <mycore_strcmp@@Base+0x58>
   148fc:	ldrb	r3, [r0, r2]
   14900:	ldrb	ip, [r1, r2]
   14904:	add	r2, r2, #1
   14908:	cmp	r3, ip
   1490c:	beq	148f4 <mycore_strcmp@@Base+0x34>
   14910:	mov	r0, r2
   14914:	bx	lr
   14918:	mov	r2, #0
   1491c:	mov	r0, r2
   14920:	bx	lr

00014924 <mycore_strcmp_ws@@Base>:
   14924:	cmp	r0, #0
   14928:	cmpne	r1, #0
   1492c:	bne	14940 <mycore_strcmp_ws@@Base+0x1c>
   14930:	subs	r2, r0, r1
   14934:	movwne	r2, #1
   14938:	mov	r0, r2
   1493c:	bx	lr
   14940:	ldrb	r3, [r0]
   14944:	ldrb	ip, [r1]
   14948:	mov	r2, #1
   1494c:	cmp	r3, ip
   14950:	bne	14a18 <mycore_strcmp_ws@@Base+0xf4>
   14954:	mov	r2, #1
   14958:	uxtb	r3, r3
   1495c:	cmp	r3, #32
   14960:	bls	14984 <mycore_strcmp_ws@@Base+0x60>
   14964:	ldrb	r3, [r0, r2]
   14968:	ldrb	ip, [r1, r2]
   1496c:	add	r2, r2, #1
   14970:	cmp	r3, ip
   14974:	bne	14a18 <mycore_strcmp_ws@@Base+0xf4>
   14978:	uxtb	r3, r3
   1497c:	cmp	r3, #32
   14980:	bhi	14964 <mycore_strcmp_ws@@Base+0x40>
   14984:	add	ip, pc, #4
   14988:	ldr	r3, [ip, r3, lsl #2]
   1498c:	add	pc, ip, r3
   14990:	andeq	r0, r0, r4, lsl #1
   14994:			; <UNDEFINED> instruction: 0xffffffd4
   14998:			; <UNDEFINED> instruction: 0xffffffd4
   1499c:			; <UNDEFINED> instruction: 0xffffffd4
   149a0:			; <UNDEFINED> instruction: 0xffffffd4
   149a4:			; <UNDEFINED> instruction: 0xffffffd4
   149a8:			; <UNDEFINED> instruction: 0xffffffd4
   149ac:			; <UNDEFINED> instruction: 0xffffffd4
   149b0:			; <UNDEFINED> instruction: 0xffffffd4
   149b4:	andeq	r0, r0, r4, lsl #1
   149b8:	andeq	r0, r0, r4, lsl #1
   149bc:			; <UNDEFINED> instruction: 0xffffffd4
   149c0:	andeq	r0, r0, r4, lsl #1
   149c4:	andeq	r0, r0, r4, lsl #1
   149c8:			; <UNDEFINED> instruction: 0xffffffd4
   149cc:			; <UNDEFINED> instruction: 0xffffffd4
   149d0:			; <UNDEFINED> instruction: 0xffffffd4
   149d4:			; <UNDEFINED> instruction: 0xffffffd4
   149d8:			; <UNDEFINED> instruction: 0xffffffd4
   149dc:			; <UNDEFINED> instruction: 0xffffffd4
   149e0:			; <UNDEFINED> instruction: 0xffffffd4
   149e4:			; <UNDEFINED> instruction: 0xffffffd4
   149e8:			; <UNDEFINED> instruction: 0xffffffd4
   149ec:			; <UNDEFINED> instruction: 0xffffffd4
   149f0:			; <UNDEFINED> instruction: 0xffffffd4
   149f4:			; <UNDEFINED> instruction: 0xffffffd4
   149f8:			; <UNDEFINED> instruction: 0xffffffd4
   149fc:			; <UNDEFINED> instruction: 0xffffffd4
   14a00:			; <UNDEFINED> instruction: 0xffffffd4
   14a04:			; <UNDEFINED> instruction: 0xffffffd4
   14a08:			; <UNDEFINED> instruction: 0xffffffd4
   14a0c:			; <UNDEFINED> instruction: 0xffffffd4
   14a10:	andeq	r0, r0, r4, lsl #1
   14a14:	mov	r2, #0
   14a18:	mov	r0, r2
   14a1c:	bx	lr

00014a20 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   14a20:	push	{fp, lr}
   14a24:	mov	fp, sp
   14a28:	ldrb	r3, [r0]
   14a2c:	mov	r2, r0
   14a30:	mov	r0, #1
   14a34:	cmp	r3, #0
   14a38:	popeq	{fp, pc}
   14a3c:	ldr	ip, [pc, #56]	; 14a7c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x5c>
   14a40:	add	r2, r2, #1
   14a44:	add	ip, pc, ip
   14a48:	uxtb	r3, r3
   14a4c:	ldrb	lr, [ip, r3]
   14a50:	ldrb	r3, [r1]
   14a54:	ldrb	r3, [ip, r3]
   14a58:	cmp	lr, r3
   14a5c:	bne	14a74 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x54>
   14a60:	ldrb	r3, [r2], #1
   14a64:	add	r1, r1, #1
   14a68:	cmp	r3, #0
   14a6c:	bne	14a48 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x28>
   14a70:	pop	{fp, pc}
   14a74:	mov	r0, #0
   14a78:	pop	{fp, pc}
   14a7c:	andeq	r1, r2, r4, ror #10

00014a80 <mycore_utils_avl_tree_create@@Base>:
   14a80:	mov	r0, #1
   14a84:	mov	r1, #4
   14a88:	b	11000 <mycore_calloc@plt>

00014a8c <mycore_utils_avl_tree_init@@Base>:
   14a8c:	push	{r4, sl, fp, lr}
   14a90:	add	fp, sp, #8
   14a94:	mov	r4, r0
   14a98:	bl	110d8 <mcobject_create@plt>
   14a9c:	cmp	r0, #0
   14aa0:	str	r0, [r4]
   14aa4:	beq	14ac0 <mycore_utils_avl_tree_init@@Base+0x34>
   14aa8:	mov	r1, #256	; 0x100
   14aac:	mov	r2, #24
   14ab0:	bl	1160c <mcobject_init@plt>
   14ab4:	cmp	r0, #0
   14ab8:	movwne	r0, #1
   14abc:	pop	{r4, sl, fp, pc}
   14ac0:	mov	r0, #2
   14ac4:	pop	{r4, sl, fp, pc}

00014ac8 <mycore_utils_avl_tree_clean@@Base>:
   14ac8:	ldr	r0, [r0]
   14acc:	b	11bb8 <mcobject_clean@plt>

00014ad0 <mycore_utils_avl_tree_destroy@@Base>:
   14ad0:	push	{r4, r5, r6, sl, fp, lr}
   14ad4:	add	fp, sp, #16
   14ad8:	mov	r4, #0
   14adc:	cmp	r0, #0
   14ae0:	beq	14b08 <mycore_utils_avl_tree_destroy@@Base+0x38>
   14ae4:	mov	r5, r0
   14ae8:	ldr	r0, [r0]
   14aec:	mov	r6, r1
   14af0:	mov	r1, #1
   14af4:	bl	10f10 <mcobject_destroy@plt>
   14af8:	cmp	r6, #0
   14afc:	beq	14b10 <mycore_utils_avl_tree_destroy@@Base+0x40>
   14b00:	mov	r0, r5
   14b04:	bl	11a98 <mycore_free@plt>
   14b08:	mov	r0, r4
   14b0c:	pop	{r4, r5, r6, sl, fp, pc}
   14b10:	mov	r0, r5
   14b14:	pop	{r4, r5, r6, sl, fp, pc}

00014b18 <mycore_utils_avl_tree_node_create_root@@Base>:
   14b18:	push	{r4, r5, fp, lr}
   14b1c:	add	fp, sp, #8
   14b20:	ldr	r0, [r0]
   14b24:	mov	r5, r1
   14b28:	mov	r1, #0
   14b2c:	mov	r4, r2
   14b30:	bl	11828 <mcobject_malloc@plt>
   14b34:	vmov.i32	q8, #0	; 0x00000000
   14b38:	add	r1, r0, #8
   14b3c:	stm	r0, {r4, r5}
   14b40:	vst1.32	{d16-d17}, [r1]
   14b44:	pop	{r4, r5, fp, pc}

00014b48 <mycore_utils_avl_tree_node_clean@@Base>:
   14b48:	vmov.i32	q8, #0	; 0x00000000
   14b4c:	mov	r1, #0
   14b50:	mov	r2, #20
   14b54:	str	r1, [r0, #16]
   14b58:	vst1.32	{d16-d17}, [r0], r2
   14b5c:	str	r1, [r0]
   14b60:	bx	lr

00014b64 <mycore_utils_avl_tree_node_height@@Base>:
   14b64:	cmp	r0, #0
   14b68:	ldrhne	r0, [r0, #20]
   14b6c:	moveq	r0, #0
   14b70:	sxth	r0, r0
   14b74:	bx	lr

00014b78 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   14b78:	ldr	r3, [r0, #12]
   14b7c:	ldr	r0, [r0, #8]
   14b80:	mov	r2, #0
   14b84:	mov	r1, #0
   14b88:	cmp	r3, #0
   14b8c:	ldrhne	r2, [r3, #20]
   14b90:	cmp	r0, #0
   14b94:	ldrhne	r1, [r0, #20]
   14b98:	sub	r0, r2, r1
   14b9c:	sxth	r0, r0
   14ba0:	bx	lr

00014ba4 <mycore_utils_avl_tree_node_set_height@@Base>:
   14ba4:	ldr	r3, [r0, #8]
   14ba8:	mov	r2, #0
   14bac:	mov	r1, #0
   14bb0:	cmp	r3, #0
   14bb4:	ldrhne	r2, [r3, #20]
   14bb8:	ldr	r3, [r0, #12]
   14bbc:	cmp	r3, #0
   14bc0:	ldrhne	r1, [r3, #20]
   14bc4:	sxth	r3, r2
   14bc8:	sxth	ip, r1
   14bcc:	cmp	r3, ip
   14bd0:	movgt	r1, r2
   14bd4:	add	r1, r1, #1
   14bd8:	strh	r1, [r0, #20]
   14bdc:	bx	lr

00014be0 <mycore_utils_avl_tree_node_rotate_right@@Base>:
   14be0:	push	{r4, sl, fp, lr}
   14be4:	add	fp, sp, #8
   14be8:	mov	r1, r0
   14bec:	ldr	r0, [r0, #8]
   14bf0:	ldr	r2, [r1, #16]
   14bf4:	str	r2, [r0, #16]
   14bf8:	ldr	r2, [r0, #12]
   14bfc:	cmp	r2, #0
   14c00:	beq	14c1c <mycore_utils_avl_tree_node_rotate_right@@Base+0x3c>
   14c04:	str	r1, [r2, #16]
   14c08:	str	r0, [r1, #16]
   14c0c:	str	r2, [r1, #8]
   14c10:	str	r1, [r0, #12]
   14c14:	ldrh	ip, [r2, #20]
   14c18:	b	14c2c <mycore_utils_avl_tree_node_rotate_right@@Base+0x4c>
   14c1c:	str	r0, [r1, #16]
   14c20:	str	r2, [r1, #8]
   14c24:	str	r1, [r0, #12]
   14c28:	mov	ip, #0
   14c2c:	ldr	r2, [r1, #12]
   14c30:	mov	r3, #0
   14c34:	sxth	r4, ip
   14c38:	mov	lr, #0
   14c3c:	cmp	r2, #0
   14c40:	ldrhne	r3, [r2, #20]
   14c44:	sxth	r2, r3
   14c48:	cmp	r4, r2
   14c4c:	movgt	r3, ip
   14c50:	add	r2, r3, #1
   14c54:	strh	r2, [r1, #20]
   14c58:	sxth	r1, r2
   14c5c:	ldr	r2, [r0, #8]
   14c60:	cmp	r2, #0
   14c64:	ldrhne	lr, [r2, #20]
   14c68:	sxth	r2, lr
   14c6c:	cmp	r2, r1
   14c70:	movgt	r1, lr
   14c74:	add	r1, r1, #1
   14c78:	strh	r1, [r0, #20]
   14c7c:	pop	{r4, sl, fp, pc}

00014c80 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   14c80:	push	{fp, lr}
   14c84:	mov	fp, sp
   14c88:	mov	r1, r0
   14c8c:	ldr	r0, [r0, #12]
   14c90:	mov	ip, #0
   14c94:	mov	r3, #0
   14c98:	ldr	r2, [r1, #16]
   14c9c:	str	r2, [r0, #16]
   14ca0:	ldr	r2, [r0, #8]
   14ca4:	cmp	r2, #0
   14ca8:	strne	r1, [r2, #16]
   14cac:	str	r2, [r1, #12]
   14cb0:	str	r0, [r1, #16]
   14cb4:	str	r1, [r0, #8]
   14cb8:	ldr	lr, [r1, #8]
   14cbc:	cmp	lr, #0
   14cc0:	ldrhne	ip, [lr, #20]
   14cc4:	cmp	r2, #0
   14cc8:	ldrhne	r3, [r2, #20]
   14ccc:	sxth	r2, ip
   14cd0:	sxth	lr, r3
   14cd4:	cmp	r2, lr
   14cd8:	movgt	r3, ip
   14cdc:	add	r2, r3, #1
   14ce0:	strh	r2, [r1, #20]
   14ce4:	sxth	r1, r2
   14ce8:	ldr	r2, [r0, #12]
   14cec:	cmp	r2, #0
   14cf0:	beq	14cfc <mycore_utils_avl_tree_node_rotate_left@@Base+0x7c>
   14cf4:	ldrh	r2, [r2, #20]
   14cf8:	b	14d00 <mycore_utils_avl_tree_node_rotate_left@@Base+0x80>
   14cfc:	mov	r2, #0
   14d00:	sxth	r3, r2
   14d04:	cmp	r1, r3
   14d08:	movgt	r2, r1
   14d0c:	add	r1, r2, #1
   14d10:	strh	r1, [r0, #20]
   14d14:	pop	{fp, pc}

00014d18 <mycore_utils_avl_tree_node_balance@@Base>:
   14d18:	push	{r4, r5, r6, sl, fp, lr}
   14d1c:	add	fp, sp, #16
   14d20:	mov	ip, r0
   14d24:	ldr	r3, [r0, #8]
   14d28:	mov	r2, #0
   14d2c:	mov	r0, #0
   14d30:	ldr	lr, [ip, #12]
   14d34:	cmp	r3, #0
   14d38:	ldrhne	r2, [r3, #20]
   14d3c:	cmp	lr, #0
   14d40:	ldrhne	r0, [lr, #20]
   14d44:	sxth	r4, r2
   14d48:	sxth	r5, r0
   14d4c:	cmp	r5, r4
   14d50:	movlt	r0, r2
   14d54:	add	r0, r0, #1
   14d58:	strh	r0, [ip, #20]
   14d5c:	sub	r0, r5, r4
   14d60:	cmn	r0, #2
   14d64:	beq	14e1c <mycore_utils_avl_tree_node_balance@@Base+0x104>
   14d68:	cmp	r0, #2
   14d6c:	bne	14eb8 <mycore_utils_avl_tree_node_balance@@Base+0x1a0>
   14d70:	ldr	r0, [lr, #12]
   14d74:	mov	r2, #0
   14d78:	mov	r1, #0
   14d7c:	cmp	r0, #0
   14d80:	ldrhne	r2, [r0, #20]
   14d84:	ldr	r0, [lr, #8]
   14d88:	cmp	r0, #0
   14d8c:	ldrhne	r1, [r0, #20]
   14d90:	sub	r1, r2, r1
   14d94:	sxth	r1, r1
   14d98:	cmn	r1, #1
   14d9c:	ble	14ed0 <mycore_utils_avl_tree_node_balance@@Base+0x1b8>
   14da0:	mov	r1, r0
   14da4:	mov	r0, lr
   14da8:	ldr	r2, [ip, #16]
   14dac:	cmp	r2, #0
   14db0:	beq	1508c <mycore_utils_avl_tree_node_balance@@Base+0x374>
   14db4:	cmp	r1, #0
   14db8:	ldr	lr, [r2, #12]
   14dbc:	str	r2, [r0, #16]
   14dc0:	mov	r4, #0
   14dc4:	mov	r3, #0
   14dc8:	strne	ip, [r1, #16]
   14dcc:	str	r1, [ip, #12]
   14dd0:	str	r0, [ip, #16]
   14dd4:	str	ip, [r0, #8]
   14dd8:	ldr	r5, [ip, #8]
   14ddc:	cmp	r5, #0
   14de0:	ldrhne	r4, [r5, #20]
   14de4:	cmp	r1, #0
   14de8:	ldrhne	r3, [r1, #20]
   14dec:	sxth	r5, r4
   14df0:	sxth	r1, r3
   14df4:	cmp	r5, r1
   14df8:	movgt	r3, r4
   14dfc:	add	r1, r3, #1
   14e00:	strh	r1, [ip, #20]
   14e04:	sxth	r1, r1
   14e08:	ldr	r3, [r0, #12]
   14e0c:	cmp	r3, #0
   14e10:	beq	14f34 <mycore_utils_avl_tree_node_balance@@Base+0x21c>
   14e14:	ldrh	r3, [r3, #20]
   14e18:	b	14f38 <mycore_utils_avl_tree_node_balance@@Base+0x220>
   14e1c:	ldr	r0, [r3, #12]
   14e20:	ldr	r5, [r3, #8]
   14e24:	mov	r2, #0
   14e28:	mov	r1, #0
   14e2c:	cmp	r0, #0
   14e30:	ldrhne	r2, [r0, #20]
   14e34:	cmp	r5, #0
   14e38:	ldrhne	r1, [r5, #20]
   14e3c:	sub	r1, r2, r1
   14e40:	sxth	r1, r1
   14e44:	cmp	r1, #1
   14e48:	blt	14efc <mycore_utils_avl_tree_node_balance@@Base+0x1e4>
   14e4c:	ldr	r1, [r3, #16]
   14e50:	mov	r4, #0
   14e54:	mov	r2, #0
   14e58:	str	r1, [r0, #16]
   14e5c:	ldr	r1, [r0, #8]
   14e60:	cmp	r1, #0
   14e64:	strne	r3, [r1, #16]
   14e68:	str	r1, [r3, #12]
   14e6c:	str	r0, [r3, #16]
   14e70:	str	r3, [r0, #8]
   14e74:	ldr	r5, [r3, #8]
   14e78:	cmp	r5, #0
   14e7c:	ldrhne	r4, [r5, #20]
   14e80:	cmp	r1, #0
   14e84:	ldrhne	r2, [r1, #20]
   14e88:	sxth	r5, r4
   14e8c:	sxth	r1, r2
   14e90:	cmp	r5, r1
   14e94:	movgt	r2, r4
   14e98:	add	r1, r2, #1
   14e9c:	strh	r1, [r3, #20]
   14ea0:	sxth	r1, r1
   14ea4:	ldr	r2, [r0, #12]
   14ea8:	cmp	r2, #0
   14eac:	beq	14f5c <mycore_utils_avl_tree_node_balance@@Base+0x244>
   14eb0:	ldrh	r3, [r2, #20]
   14eb4:	b	14f60 <mycore_utils_avl_tree_node_balance@@Base+0x248>
   14eb8:	ldr	r0, [ip, #16]
   14ebc:	cmp	r0, #0
   14ec0:	popne	{r4, r5, r6, sl, fp, pc}
   14ec4:	str	ip, [r1]
   14ec8:	ldr	r0, [ip, #16]
   14ecc:	pop	{r4, r5, r6, sl, fp, pc}
   14ed0:	ldr	r1, [lr, #16]
   14ed4:	str	r1, [r0, #16]
   14ed8:	ldr	r1, [r0, #12]
   14edc:	cmp	r1, #0
   14ee0:	beq	1501c <mycore_utils_avl_tree_node_balance@@Base+0x304>
   14ee4:	str	lr, [r1, #16]
   14ee8:	str	r0, [lr, #16]
   14eec:	str	r1, [lr, #8]
   14ef0:	str	lr, [r0, #12]
   14ef4:	ldrh	r1, [r1, #20]
   14ef8:	b	1502c <mycore_utils_avl_tree_node_balance@@Base+0x314>
   14efc:	mov	r2, r0
   14f00:	mov	r0, r3
   14f04:	ldr	r1, [ip, #16]
   14f08:	cmp	r1, #0
   14f0c:	bne	14f84 <mycore_utils_avl_tree_node_balance@@Base+0x26c>
   14f10:	cmp	r2, #0
   14f14:	str	r1, [r0, #16]
   14f18:	beq	150f0 <mycore_utils_avl_tree_node_balance@@Base+0x3d8>
   14f1c:	str	ip, [r2, #16]
   14f20:	str	r0, [ip, #16]
   14f24:	str	r2, [ip, #8]
   14f28:	str	ip, [r0, #12]
   14f2c:	ldrh	r2, [r2, #20]
   14f30:	b	15100 <mycore_utils_avl_tree_node_balance@@Base+0x3e8>
   14f34:	mov	r3, #0
   14f38:	sxth	r4, r3
   14f3c:	cmp	r1, r4
   14f40:	movgt	r3, r1
   14f44:	cmp	lr, ip
   14f48:	add	r1, r3, #1
   14f4c:	strh	r1, [r0, #20]
   14f50:	streq	r0, [r2, #12]
   14f54:	strne	r0, [r2, #8]
   14f58:	pop	{r4, r5, r6, sl, fp, pc}
   14f5c:	mov	r3, #0
   14f60:	sxth	r5, r3
   14f64:	cmp	r1, r5
   14f68:	movgt	r3, r1
   14f6c:	add	r1, r3, #1
   14f70:	strh	r1, [r0, #20]
   14f74:	str	r0, [ip, #8]
   14f78:	ldr	r1, [ip, #16]
   14f7c:	cmp	r1, #0
   14f80:	beq	14f10 <mycore_utils_avl_tree_node_balance@@Base+0x1f8>
   14f84:	ldr	lr, [r1, #12]
   14f88:	cmp	r2, #0
   14f8c:	str	r1, [r0, #16]
   14f90:	beq	14fac <mycore_utils_avl_tree_node_balance@@Base+0x294>
   14f94:	str	ip, [r2, #16]
   14f98:	str	r0, [ip, #16]
   14f9c:	str	r2, [ip, #8]
   14fa0:	str	ip, [r0, #12]
   14fa4:	ldrh	r3, [r2, #20]
   14fa8:	b	14fbc <mycore_utils_avl_tree_node_balance@@Base+0x2a4>
   14fac:	str	r0, [ip, #16]
   14fb0:	str	r2, [ip, #8]
   14fb4:	str	ip, [r0, #12]
   14fb8:	mov	r3, #0
   14fbc:	ldr	r5, [ip, #12]
   14fc0:	mov	r4, #0
   14fc4:	sxth	r6, r3
   14fc8:	mov	r2, #0
   14fcc:	cmp	r5, #0
   14fd0:	ldrhne	r4, [r5, #20]
   14fd4:	sxth	r5, r4
   14fd8:	cmp	r6, r5
   14fdc:	movgt	r4, r3
   14fe0:	add	r3, r4, #1
   14fe4:	strh	r3, [ip, #20]
   14fe8:	sxth	r3, r3
   14fec:	ldr	r4, [r0, #8]
   14ff0:	cmp	r4, #0
   14ff4:	ldrhne	r2, [r4, #20]
   14ff8:	sxth	r4, r2
   14ffc:	cmp	r4, r3
   15000:	movgt	r3, r2
   15004:	cmp	lr, ip
   15008:	add	r2, r3, #1
   1500c:	strh	r2, [r0, #20]
   15010:	streq	r0, [r1, #12]
   15014:	strne	r0, [r1, #8]
   15018:	pop	{r4, r5, r6, sl, fp, pc}
   1501c:	str	r0, [lr, #16]
   15020:	str	r1, [lr, #8]
   15024:	str	lr, [r0, #12]
   15028:	mov	r1, #0
   1502c:	ldr	r4, [lr, #12]
   15030:	mov	r2, #0
   15034:	sxth	r5, r1
   15038:	mov	r3, #0
   1503c:	cmp	r4, #0
   15040:	ldrhne	r2, [r4, #20]
   15044:	sxth	r4, r2
   15048:	cmp	r5, r4
   1504c:	movgt	r2, r1
   15050:	add	r1, r2, #1
   15054:	strh	r1, [lr, #20]
   15058:	sxth	r2, r1
   1505c:	ldr	r1, [r0, #8]
   15060:	cmp	r1, #0
   15064:	ldrhne	r3, [r1, #20]
   15068:	sxth	r5, r3
   1506c:	cmp	r5, r2
   15070:	movgt	r2, r3
   15074:	add	r2, r2, #1
   15078:	strh	r2, [r0, #20]
   1507c:	str	r0, [ip, #12]
   15080:	ldr	r2, [ip, #16]
   15084:	cmp	r2, #0
   15088:	bne	14db4 <mycore_utils_avl_tree_node_balance@@Base+0x9c>
   1508c:	cmp	r1, #0
   15090:	str	r2, [r0, #16]
   15094:	mov	r3, #0
   15098:	mov	r2, #0
   1509c:	strne	ip, [r1, #16]
   150a0:	str	r1, [ip, #12]
   150a4:	str	r0, [ip, #16]
   150a8:	str	ip, [r0, #8]
   150ac:	ldr	r5, [ip, #8]
   150b0:	cmp	r5, #0
   150b4:	ldrhne	r3, [r5, #20]
   150b8:	cmp	r1, #0
   150bc:	ldrhne	r2, [r1, #20]
   150c0:	sxth	r5, r3
   150c4:	sxth	r1, r2
   150c8:	cmp	r5, r1
   150cc:	movgt	r2, r3
   150d0:	add	r1, r2, #1
   150d4:	strh	r1, [ip, #20]
   150d8:	sxth	r1, r1
   150dc:	ldr	r2, [r0, #12]
   150e0:	cmp	r2, #0
   150e4:	beq	15154 <mycore_utils_avl_tree_node_balance@@Base+0x43c>
   150e8:	ldrh	r2, [r2, #20]
   150ec:	b	15158 <mycore_utils_avl_tree_node_balance@@Base+0x440>
   150f0:	str	r0, [ip, #16]
   150f4:	str	r2, [ip, #8]
   150f8:	str	ip, [r0, #12]
   150fc:	mov	r2, #0
   15100:	ldr	r5, [ip, #12]
   15104:	mov	r3, #0
   15108:	mov	r1, #0
   1510c:	cmp	r5, #0
   15110:	ldrhne	r3, [r5, #20]
   15114:	sxth	r5, r2
   15118:	sxth	r6, r3
   1511c:	cmp	r5, r6
   15120:	movgt	r3, r2
   15124:	add	r2, r3, #1
   15128:	strh	r2, [ip, #20]
   1512c:	sxth	r2, r2
   15130:	ldr	r3, [r0, #8]
   15134:	cmp	r3, #0
   15138:	ldrhne	r1, [r3, #20]
   1513c:	sxth	r3, r1
   15140:	cmp	r3, r2
   15144:	movgt	r2, r1
   15148:	add	r1, r2, #1
   1514c:	strh	r1, [r0, #20]
   15150:	pop	{r4, r5, r6, sl, fp, pc}
   15154:	mov	r2, #0
   15158:	sxth	r3, r2
   1515c:	cmp	r1, r3
   15160:	movgt	r2, r1
   15164:	add	r1, r2, #1
   15168:	strh	r1, [r0, #20]
   1516c:	pop	{r4, r5, r6, sl, fp, pc}

00015170 <mycore_utils_avl_tree_add@@Base>:
   15170:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15174:	add	fp, sp, #24
   15178:	ldr	r0, [r0]
   1517c:	ldr	r7, [r1]
   15180:	mov	r4, r1
   15184:	mov	r1, #0
   15188:	mov	r8, r3
   1518c:	mov	r6, r2
   15190:	mov	r5, #0
   15194:	bl	11828 <mcobject_malloc@plt>
   15198:	vmov.i32	q8, #0	; 0x00000000
   1519c:	cmp	r7, #0
   151a0:	beq	1520c <mycore_utils_avl_tree_add@@Base+0x9c>
   151a4:	mov	r1, #20
   151a8:	mov	r2, r0
   151ac:	str	r5, [r0, #16]
   151b0:	vst1.32	{d16-d17}, [r2], r1
   151b4:	str	r5, [r2]
   151b8:	ldr	r2, [r7, #4]
   151bc:	cmp	r2, r6
   151c0:	bne	151e8 <mycore_utils_avl_tree_add@@Base+0x78>
   151c4:	mov	r1, r7
   151c8:	b	15204 <mycore_utils_avl_tree_add@@Base+0x94>
   151cc:	ldr	r1, [r7, #12]
   151d0:	cmp	r1, #0
   151d4:	beq	15224 <mycore_utils_avl_tree_add@@Base+0xb4>
   151d8:	ldr	r2, [r1, #4]
   151dc:	mov	r7, r1
   151e0:	cmp	r2, r6
   151e4:	beq	15204 <mycore_utils_avl_tree_add@@Base+0x94>
   151e8:	cmp	r2, r6
   151ec:	bls	151cc <mycore_utils_avl_tree_add@@Base+0x5c>
   151f0:	ldr	r1, [r7, #8]
   151f4:	cmp	r1, #0
   151f8:	bne	151d8 <mycore_utils_avl_tree_add@@Base+0x68>
   151fc:	add	r1, r7, #8
   15200:	b	15228 <mycore_utils_avl_tree_add@@Base+0xb8>
   15204:	str	r8, [r1]
   15208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1520c:	add	r1, r0, #8
   15210:	str	r8, [r0]
   15214:	str	r6, [r0, #4]
   15218:	vst1.32	{d16-d17}, [r1]
   1521c:	str	r0, [r4]
   15220:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15224:	add	r1, r7, #12
   15228:	str	r0, [r1]
   1522c:	str	r7, [r0, #16]
   15230:	str	r8, [r0]
   15234:	str	r6, [r0, #4]
   15238:	mov	r1, r4
   1523c:	bl	117ec <mycore_utils_avl_tree_node_balance@plt>
   15240:	cmp	r0, #0
   15244:	bne	15238 <mycore_utils_avl_tree_add@@Base+0xc8>
   15248:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001524c <mycore_utils_avl_tree_find_min@@Base>:
   1524c:	cmp	r0, #0
   15250:	moveq	r1, #0
   15254:	moveq	r0, r1
   15258:	bxeq	lr
   1525c:	mov	r1, r0
   15260:	ldr	r0, [r0, #12]
   15264:	cmp	r0, #0
   15268:	bne	1525c <mycore_utils_avl_tree_find_min@@Base+0x10>
   1526c:	mov	r0, r1
   15270:	bx	lr

00015274 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   15274:	push	{r4, sl, fp, lr}
   15278:	add	fp, sp, #8
   1527c:	mov	r4, r2
   15280:	cmp	r1, #0
   15284:	beq	152d4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x60>
   15288:	ldr	r2, [r0, #8]
   1528c:	cmp	r2, r1
   15290:	beq	152f8 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x84>
   15294:	ldr	ip, [r1, #16]
   15298:	mov	r3, #0
   1529c:	str	r3, [ip, #12]
   152a0:	ldr	r3, [r0, #16]
   152a4:	str	r3, [r1, #16]
   152a8:	ldr	r3, [r0, #12]
   152ac:	str	r2, [r1, #8]
   152b0:	str	r3, [r1, #12]
   152b4:	ldr	r2, [r0, #8]
   152b8:	cmp	r2, #0
   152bc:	strne	r1, [r2, #16]
   152c0:	mov	r2, r1
   152c4:	ldr	r3, [r0, #12]
   152c8:	cmp	r3, #0
   152cc:	movne	r2, r1
   152d0:	b	1531c <mycore_utils_avl_tree_rotate_for_delete@@Base+0xa8>
   152d4:	ldr	r2, [r0, #16]
   152d8:	cmp	r2, #0
   152dc:	beq	15360 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xec>
   152e0:	ldr	r3, [r2, #8]
   152e4:	ldr	r1, [r0, #12]
   152e8:	cmp	r3, r0
   152ec:	streq	r1, [r2, #8]
   152f0:	strne	r1, [r2, #12]
   152f4:	b	15344 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd0>
   152f8:	ldr	r2, [r0, #16]
   152fc:	str	r2, [r1, #16]
   15300:	ldr	r2, [r0, #12]
   15304:	str	r2, [r1, #12]
   15308:	ldr	r2, [r1, #8]
   1530c:	ldr	r3, [r0, #12]
   15310:	cmp	r2, #0
   15314:	moveq	r2, r1
   15318:	cmp	r3, #0
   1531c:	strne	r1, [r3, #16]
   15320:	ldr	lr, [r0, #16]
   15324:	mov	ip, r4
   15328:	cmp	lr, #0
   1532c:	beq	15340 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xcc>
   15330:	ldr	r3, [lr, #8]!
   15334:	cmp	r3, r0
   15338:	addne	lr, lr, #4
   1533c:	mov	ip, lr
   15340:	str	r1, [ip]
   15344:	mov	r0, r2
   15348:	mov	r1, r4
   1534c:	bl	117ec <mycore_utils_avl_tree_node_balance@plt>
   15350:	mov	r2, r0
   15354:	cmp	r0, #0
   15358:	bne	15344 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd0>
   1535c:	pop	{r4, sl, fp, pc}
   15360:	ldr	r0, [r0, #12]
   15364:	str	r0, [r4]
   15368:	pop	{r4, sl, fp, pc}

0001536c <mycore_utils_avl_tree_delete@@Base>:
   1536c:	push	{r4, r5, r6, sl, fp, lr}
   15370:	add	fp, sp, #16
   15374:	ldr	r4, [r1]
   15378:	mov	r6, #0
   1537c:	cmp	r4, #0
   15380:	beq	153ac <mycore_utils_avl_tree_delete@@Base+0x40>
   15384:	mov	r3, r1
   15388:	mov	r5, r0
   1538c:	ldr	r0, [r4, #4]
   15390:	cmp	r0, r2
   15394:	beq	153b4 <mycore_utils_avl_tree_delete@@Base+0x48>
   15398:	mov	r0, #12
   1539c:	movwhi	r0, #8
   153a0:	ldr	r4, [r4, r0]
   153a4:	cmp	r4, #0
   153a8:	bne	1538c <mycore_utils_avl_tree_delete@@Base+0x20>
   153ac:	mov	r0, r6
   153b0:	pop	{r4, r5, r6, sl, fp, pc}
   153b4:	ldr	r0, [r4, #8]
   153b8:	cmp	r0, #0
   153bc:	beq	153d4 <mycore_utils_avl_tree_delete@@Base+0x68>
   153c0:	mov	r1, r0
   153c4:	ldr	r0, [r0, #12]
   153c8:	cmp	r0, #0
   153cc:	bne	153c0 <mycore_utils_avl_tree_delete@@Base+0x54>
   153d0:	b	153d8 <mycore_utils_avl_tree_delete@@Base+0x6c>
   153d4:	mov	r1, #0
   153d8:	mov	r0, r4
   153dc:	mov	r2, r3
   153e0:	bl	113cc <mycore_utils_avl_tree_rotate_for_delete@plt>
   153e4:	ldr	r0, [r5]
   153e8:	ldr	r6, [r4]
   153ec:	mov	r1, r4
   153f0:	bl	11048 <mcobject_free@plt>
   153f4:	mov	r0, r6
   153f8:	pop	{r4, r5, r6, sl, fp, pc}

000153fc <mycore_utils_avl_tree_search_by_type@@Base>:
   153fc:	mov	r0, #0
   15400:	cmp	r1, #0
   15404:	bxeq	lr
   15408:	ldr	r3, [r1, #4]
   1540c:	cmp	r3, r2
   15410:	beq	15424 <mycore_utils_avl_tree_search_by_type@@Base+0x28>
   15414:	mov	r3, #12
   15418:	movwhi	r3, #8
   1541c:	ldr	r1, [r1, r3]
   15420:	b	15400 <mycore_utils_avl_tree_search_by_type@@Base+0x4>
   15424:	mov	r0, r1
   15428:	bx	lr

0001542c <mycore_utils_avl_tree_list_all_nodes@@Base>:
   1542c:	push	{r4, r5, r6, r7, fp, lr}
   15430:	add	fp, sp, #16
   15434:	cmp	r1, #0
   15438:	beq	15478 <mycore_utils_avl_tree_list_all_nodes@@Base+0x4c>
   1543c:	mov	r4, r3
   15440:	mov	r5, r2
   15444:	mov	r6, r1
   15448:	mov	r7, r0
   1544c:	mov	r0, r6
   15450:	mov	r1, r4
   15454:	blx	r5
   15458:	ldr	r1, [r6, #8]
   1545c:	mov	r0, r7
   15460:	mov	r2, r5
   15464:	mov	r3, r4
   15468:	bl	11270 <mycore_utils_avl_tree_list_all_nodes@plt>
   1546c:	ldr	r6, [r6, #12]
   15470:	cmp	r6, #0
   15474:	bne	1544c <mycore_utils_avl_tree_list_all_nodes@@Base+0x20>
   15478:	pop	{r4, r5, r6, r7, fp, pc}
   1547c:	andeq	r0, r0, r0

00015480 <mchar_async_create@@Base>:
   15480:	mov	r0, #1
   15484:	mov	r1, #84	; 0x54
   15488:	b	11000 <mycore_calloc@plt>
   1548c:	nop	{0}

00015490 <mchar_async_init@@Base>:
   15490:	push	{r4, r5, fp, lr}
   15494:	add	fp, sp, #8
   15498:	cmp	r2, #4096	; 0x1000
   1549c:	str	r1, [r0, #16]
   154a0:	mov	r4, r0
   154a4:	mov	r0, #1024	; 0x400
   154a8:	mov	r1, #4
   154ac:	str	r0, [r4, #8]
   154b0:	movls	r2, #4096	; 0x1000
   154b4:	mov	r0, #1024	; 0x400
   154b8:	str	r2, [r4]
   154bc:	bl	11000 <mycore_calloc@plt>
   154c0:	mov	r5, #2
   154c4:	cmp	r0, #0
   154c8:	str	r0, [r4, #4]
   154cc:	beq	155b8 <mchar_async_init@@Base+0x128>
   154d0:	ldr	r0, [r4, #16]
   154d4:	mov	r1, #20
   154d8:	bl	11000 <mycore_calloc@plt>
   154dc:	ldr	r1, [r4, #4]
   154e0:	str	r0, [r1]
   154e4:	ldr	r0, [r4, #4]
   154e8:	ldr	r1, [r0]
   154ec:	cmp	r1, #0
   154f0:	beq	155b0 <mchar_async_init@@Base+0x120>
   154f4:	add	r0, pc, #244	; 0xf4
   154f8:	vld1.64	{d16-d17}, [r0 :128]
   154fc:	add	r0, r4, #28
   15500:	vst1.32	{d16-d17}, [r0]
   15504:	mov	r0, #20480	; 0x5000
   15508:	bl	119a8 <mycore_malloc@plt>
   1550c:	cmp	r0, #0
   15510:	str	r0, [r4, #24]
   15514:	beq	155cc <mchar_async_init@@Base+0x13c>
   15518:	vmov.i32	q8, #0	; 0x00000000
   1551c:	mov	r5, #0
   15520:	vst1.32	{d16-d17}, [r0]
   15524:	ldr	r0, [r4, #28]
   15528:	str	r5, [r4, #48]	; 0x30
   1552c:	str	r0, [r4, #52]	; 0x34
   15530:	lsl	r0, r0, #2
   15534:	bl	119a8 <mycore_malloc@plt>
   15538:	cmp	r0, #0
   1553c:	str	r0, [r4, #44]	; 0x2c
   15540:	beq	155c0 <mchar_async_init@@Base+0x130>
   15544:	mov	r0, #64	; 0x40
   15548:	str	r5, [r4, #60]	; 0x3c
   1554c:	mov	r1, #36	; 0x24
   15550:	str	r0, [r4, #64]	; 0x40
   15554:	mov	r0, #64	; 0x40
   15558:	bl	11000 <mycore_calloc@plt>
   1555c:	cmp	r0, #0
   15560:	str	r0, [r4, #56]	; 0x38
   15564:	beq	155b8 <mchar_async_init@@Base+0x128>
   15568:	ldr	r0, [r4, #64]	; 0x40
   1556c:	mov	r5, #0
   15570:	str	r5, [r4, #72]	; 0x48
   15574:	str	r0, [r4, #76]	; 0x4c
   15578:	lsl	r0, r0, #2
   1557c:	bl	119a8 <mycore_malloc@plt>
   15580:	cmp	r0, #0
   15584:	str	r0, [r4, #68]	; 0x44
   15588:	beq	155b8 <mchar_async_init@@Base+0x128>
   1558c:	mov	r0, r4
   15590:	bl	11918 <mchar_async_clean@plt>
   15594:	bl	10ef8 <mcsync_create@plt>
   15598:	cmp	r0, #0
   1559c:	mov	r5, #2
   155a0:	str	r0, [r4, #80]	; 0x50
   155a4:	beq	155b8 <mchar_async_init@@Base+0x128>
   155a8:	pop	{r4, r5, fp, lr}
   155ac:	b	1169c <mcsync_init@plt>
   155b0:	bl	11a98 <mycore_free@plt>
   155b4:	str	r0, [r4, #4]
   155b8:	mov	r0, r5
   155bc:	pop	{r4, r5, fp, pc}
   155c0:	ldr	r0, [r4, #24]
   155c4:	bl	11a98 <mycore_free@plt>
   155c8:	str	r0, [r4, #24]
   155cc:	ldr	r0, [r4, #4]
   155d0:	ldr	r0, [r0]
   155d4:	bl	11a98 <mycore_free@plt>
   155d8:	ldr	r0, [r4, #4]
   155dc:	bl	11a98 <mycore_free@plt>
   155e0:	mov	r5, #2
   155e4:	str	r0, [r4, #4]
   155e8:	mov	r0, r5
   155ec:	pop	{r4, r5, fp, pc}
   155f0:	andeq	r0, r0, r0, lsl #8
   155f4:	andeq	r0, r0, r1
	...

00015600 <mchar_async_cache_init@@Base>:
   15600:	push	{r4, r5, fp, lr}
   15604:	add	fp, sp, #8
   15608:	mov	r4, r0
   1560c:	add	r0, pc, #124	; 0x7c
   15610:	vld1.64	{d16-d17}, [r0 :128]
   15614:	add	r0, r4, #4
   15618:	vst1.32	{d16-d17}, [r0]
   1561c:	mov	r0, #20480	; 0x5000
   15620:	bl	119a8 <mycore_malloc@plt>
   15624:	mov	r5, #2
   15628:	cmp	r0, #0
   1562c:	str	r0, [r4]
   15630:	beq	15668 <mchar_async_cache_init@@Base+0x68>
   15634:	mov	r5, #0
   15638:	str	r5, [r0]
   1563c:	str	r5, [r0, #4]
   15640:	str	r5, [r0, #8]
   15644:	str	r5, [r0, #12]
   15648:	ldr	r0, [r4, #4]
   1564c:	str	r5, [r4, #24]
   15650:	str	r0, [r4, #28]
   15654:	lsl	r0, r0, #2
   15658:	bl	119a8 <mycore_malloc@plt>
   1565c:	cmp	r0, #0
   15660:	str	r0, [r4, #20]
   15664:	beq	15670 <mchar_async_cache_init@@Base+0x70>
   15668:	mov	r0, r5
   1566c:	pop	{r4, r5, fp, pc}
   15670:	ldr	r0, [r4]
   15674:	bl	11a98 <mycore_free@plt>
   15678:	mov	r5, #2
   1567c:	str	r0, [r4]
   15680:	mov	r0, r5
   15684:	pop	{r4, r5, fp, pc}
   15688:	nop	{0}
   1568c:	nop	{0}
   15690:	andeq	r0, r0, r0, lsl #8
   15694:	andeq	r0, r0, r1
	...

000156a0 <mchar_async_clean@@Base>:
   156a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156a4:	add	fp, sp, #28
   156a8:	sub	sp, sp, #4
   156ac:	vpush	{d8-d9}
   156b0:	mov	r4, r0
   156b4:	mov	r1, #1
   156b8:	mov	r0, #0
   156bc:	str	r1, [r4, #12]
   156c0:	str	r0, [r4, #20]
   156c4:	str	r0, [r4, #48]	; 0x30
   156c8:	str	r1, [r4, #32]
   156cc:	str	r0, [r4, #36]	; 0x24
   156d0:	str	r0, [r4, #40]	; 0x28
   156d4:	ldr	r1, [r4, #24]
   156d8:	cmp	r1, #0
   156dc:	beq	156e8 <mchar_async_clean@@Base+0x48>
   156e0:	vmov.i32	q8, #0	; 0x00000000
   156e4:	vst1.32	{d16-d17}, [r1]
   156e8:	ldr	r1, [r4, #60]	; 0x3c
   156ec:	cmp	r1, #0
   156f0:	beq	1577c <mchar_async_clean@@Base+0xdc>
   156f4:	vmov.i32	q4, #0	; 0x00000000
   156f8:	mov	r9, #0
   156fc:	mov	r8, #1
   15700:	mov	r7, #0
   15704:	mov	r6, #0
   15708:	ldr	sl, [r4, #56]	; 0x38
   1570c:	add	r0, sl, r7
   15710:	str	r9, [r0, #28]
   15714:	str	r8, [r0, #12]
   15718:	str	r9, [r0, #16]
   1571c:	str	r9, [r0, #20]
   15720:	ldr	r0, [r0, #4]
   15724:	cmp	r0, #0
   15728:	beq	15730 <mchar_async_clean@@Base+0x90>
   1572c:	vst1.32	{d8-d9}, [r0]
   15730:	ldr	r0, [r4, #80]	; 0x50
   15734:	ldr	r5, [r4]
   15738:	bl	11690 <mcsync_lock@plt>
   1573c:	mov	r0, r4
   15740:	mov	r2, r5
   15744:	bl	11900 <mchar_async_chunk_malloc_without_lock@plt>
   15748:	mov	r5, r0
   1574c:	ldr	r0, [r4, #80]	; 0x50
   15750:	bl	11b40 <mcsync_unlock@plt>
   15754:	cmp	r5, #0
   15758:	str	r5, [sl, r7]
   1575c:	beq	15788 <mchar_async_clean@@Base+0xe8>
   15760:	mov	r0, #0
   15764:	add	r6, r6, #1
   15768:	add	r7, r7, #36	; 0x24
   1576c:	str	r0, [r5, #16]
   15770:	ldr	r1, [r4, #60]	; 0x3c
   15774:	cmp	r6, r1
   15778:	bcc	15708 <mchar_async_clean@@Base+0x68>
   1577c:	vpop	{d8-d9}
   15780:	add	sp, sp, #4
   15784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15788:	mov	r0, #2
   1578c:	vpop	{d8-d9}
   15790:	add	sp, sp, #4
   15794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015798 <mchar_async_cache_clean@@Base>:
   15798:	mov	r1, #0
   1579c:	mov	r2, #1
   157a0:	str	r1, [r0, #24]
   157a4:	str	r2, [r0, #8]
   157a8:	str	r1, [r0, #12]
   157ac:	str	r1, [r0, #16]
   157b0:	ldr	r0, [r0]
   157b4:	cmp	r0, #0
   157b8:	bxeq	lr
   157bc:	vmov.i32	q8, #0	; 0x00000000
   157c0:	vst1.32	{d16-d17}, [r0]
   157c4:	bx	lr

000157c8 <mchar_async_chunk_malloc@@Base>:
   157c8:	push	{r4, r5, fp, lr}
   157cc:	add	fp, sp, #8
   157d0:	mov	r5, r0
   157d4:	ldr	r0, [r0, #80]	; 0x50
   157d8:	mov	r4, r2
   157dc:	bl	11690 <mcsync_lock@plt>
   157e0:	mov	r0, r5
   157e4:	mov	r2, r4
   157e8:	bl	11900 <mchar_async_chunk_malloc_without_lock@plt>
   157ec:	mov	r4, r0
   157f0:	ldr	r0, [r5, #80]	; 0x50
   157f4:	bl	11b40 <mcsync_unlock@plt>
   157f8:	mov	r0, r4
   157fc:	pop	{r4, r5, fp, pc}

00015800 <mchar_async_destroy@@Base>:
   15800:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15804:	add	fp, sp, #24
   15808:	cmp	r0, #0
   1580c:	beq	15888 <mchar_async_destroy@@Base+0x88>
   15810:	mov	r4, r0
   15814:	ldr	r0, [r0, #56]	; 0x38
   15818:	mov	r8, r1
   1581c:	cmp	r0, #0
   15820:	beq	158a4 <mchar_async_destroy@@Base+0xa4>
   15824:	ldr	r1, [r4, #60]	; 0x3c
   15828:	cmp	r1, #0
   1582c:	beq	15898 <mchar_async_destroy@@Base+0x98>
   15830:	mov	r5, #1
   15834:	mov	r6, #0
   15838:	add	r7, r0, r6
   1583c:	ldr	r0, [r7, #4]
   15840:	cmp	r0, #0
   15844:	beq	1584c <mchar_async_destroy@@Base+0x4c>
   15848:	bl	11a98 <mycore_free@plt>
   1584c:	ldr	r0, [r7, #24]
   15850:	cmp	r0, #0
   15854:	beq	1585c <mchar_async_destroy@@Base+0x5c>
   15858:	bl	11a98 <mycore_free@plt>
   1585c:	ldr	r0, [r4, #60]	; 0x3c
   15860:	cmp	r5, r0
   15864:	bcs	15894 <mchar_async_destroy@@Base+0x94>
   15868:	ldr	r0, [r4, #56]	; 0x38
   1586c:	add	r6, r6, #36	; 0x24
   15870:	add	r5, r5, #1
   15874:	add	r7, r0, r6
   15878:	ldr	r0, [r7, #4]
   1587c:	cmp	r0, #0
   15880:	bne	15848 <mchar_async_destroy@@Base+0x48>
   15884:	b	1584c <mchar_async_destroy@@Base+0x4c>
   15888:	mov	r6, #0
   1588c:	mov	r0, r6
   15890:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15894:	ldr	r0, [r4, #56]	; 0x38
   15898:	bl	11a98 <mycore_free@plt>
   1589c:	mov	r0, #0
   158a0:	str	r0, [r4, #56]	; 0x38
   158a4:	ldr	r0, [r4, #68]	; 0x44
   158a8:	cmp	r0, #0
   158ac:	beq	158b4 <mchar_async_destroy@@Base+0xb4>
   158b0:	bl	11a98 <mycore_free@plt>
   158b4:	ldr	r0, [r4, #4]
   158b8:	cmp	r0, #0
   158bc:	beq	15978 <mchar_async_destroy@@Base+0x178>
   158c0:	ldr	r2, [r4, #12]
   158c4:	cmp	r2, #0
   158c8:	beq	1596c <mchar_async_destroy@@Base+0x16c>
   158cc:	mov	r6, #0
   158d0:	mov	r1, r0
   158d4:	ldr	r3, [r1, r6, lsl #2]!
   158d8:	cmp	r3, #0
   158dc:	beq	15944 <mchar_async_destroy@@Base+0x144>
   158e0:	ldr	r2, [r4, #16]
   158e4:	cmp	r2, #0
   158e8:	beq	15938 <mchar_async_destroy@@Base+0x138>
   158ec:	mov	r7, #1
   158f0:	mov	r5, #0
   158f4:	ldr	r1, [r3, r5]
   158f8:	cmp	r1, #0
   158fc:	beq	15910 <mchar_async_destroy@@Base+0x110>
   15900:	mov	r0, r1
   15904:	bl	11a98 <mycore_free@plt>
   15908:	ldr	r0, [r4, #4]
   1590c:	ldr	r2, [r4, #16]
   15910:	add	r1, r0, r6, lsl #2
   15914:	cmp	r7, r2
   15918:	bcs	15938 <mchar_async_destroy@@Base+0x138>
   1591c:	ldr	r3, [r1]
   15920:	add	r5, r5, #20
   15924:	add	r7, r7, #1
   15928:	ldr	r1, [r3, r5]
   1592c:	cmp	r1, #0
   15930:	bne	15900 <mchar_async_destroy@@Base+0x100>
   15934:	b	15910 <mchar_async_destroy@@Base+0x110>
   15938:	ldr	r0, [r1]
   1593c:	bl	11a98 <mycore_free@plt>
   15940:	ldr	r2, [r4, #12]
   15944:	add	r6, r6, #1
   15948:	cmp	r6, r2
   1594c:	bcs	15968 <mchar_async_destroy@@Base+0x168>
   15950:	ldr	r0, [r4, #4]
   15954:	mov	r1, r0
   15958:	ldr	r3, [r1, r6, lsl #2]!
   1595c:	cmp	r3, #0
   15960:	bne	158e0 <mchar_async_destroy@@Base+0xe0>
   15964:	b	15944 <mchar_async_destroy@@Base+0x144>
   15968:	ldr	r0, [r4, #4]
   1596c:	bl	11a98 <mycore_free@plt>
   15970:	mov	r0, #0
   15974:	str	r0, [r4, #4]
   15978:	ldr	r0, [r4, #24]
   1597c:	cmp	r0, #0
   15980:	beq	15988 <mchar_async_destroy@@Base+0x188>
   15984:	bl	11a98 <mycore_free@plt>
   15988:	ldr	r0, [r4, #44]	; 0x2c
   1598c:	cmp	r0, #0
   15990:	beq	15998 <mchar_async_destroy@@Base+0x198>
   15994:	bl	11a98 <mycore_free@plt>
   15998:	ldr	r0, [r4, #80]	; 0x50
   1599c:	mov	r1, #1
   159a0:	bl	111ec <mcsync_destroy@plt>
   159a4:	vmov.i32	q8, #0	; 0x00000000
   159a8:	add	r0, r4, #16
   159ac:	mov	r1, r4
   159b0:	mov	r6, #0
   159b4:	cmp	r8, #0
   159b8:	str	r6, [r4, #80]	; 0x50
   159bc:	vst1.32	{d16-d17}, [r0]
   159c0:	add	r0, r4, #32
   159c4:	vst1.32	{d16-d17}, [r0]
   159c8:	add	r0, r4, #48	; 0x30
   159cc:	vst1.32	{d16-d17}, [r0]
   159d0:	mov	r0, #64	; 0x40
   159d4:	vst1.32	{d16-d17}, [r1], r0
   159d8:	vst1.32	{d16-d17}, [r1]
   159dc:	beq	159f0 <mchar_async_destroy@@Base+0x1f0>
   159e0:	mov	r0, r4
   159e4:	bl	11a98 <mycore_free@plt>
   159e8:	mov	r0, r6
   159ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159f0:	mov	r0, r4
   159f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000159f8 <mchar_async_cache_destroy@@Base>:
   159f8:	push	{r4, r5, r6, sl, fp, lr}
   159fc:	add	fp, sp, #16
   15a00:	mov	r4, #0
   15a04:	cmp	r0, #0
   15a08:	beq	15a44 <mchar_async_cache_destroy@@Base+0x4c>
   15a0c:	mov	r5, r0
   15a10:	ldr	r0, [r0]
   15a14:	mov	r6, r1
   15a18:	cmp	r0, #0
   15a1c:	beq	15a24 <mchar_async_cache_destroy@@Base+0x2c>
   15a20:	bl	11a98 <mycore_free@plt>
   15a24:	ldr	r0, [r5, #20]
   15a28:	cmp	r0, #0
   15a2c:	beq	15a34 <mchar_async_cache_destroy@@Base+0x3c>
   15a30:	bl	11a98 <mycore_free@plt>
   15a34:	cmp	r6, #0
   15a38:	beq	15a4c <mchar_async_cache_destroy@@Base+0x54>
   15a3c:	mov	r0, r5
   15a40:	bl	11a98 <mycore_free@plt>
   15a44:	mov	r0, r4
   15a48:	pop	{r4, r5, r6, sl, fp, pc}
   15a4c:	mov	r0, r5
   15a50:	pop	{r4, r5, r6, sl, fp, pc}

00015a54 <mchar_async_mem_malloc@@Base>:
   15a54:	cmp	r2, #0
   15a58:	bxeq	lr
   15a5c:	push	{r4, r5, r6, sl, fp, lr}
   15a60:	add	fp, sp, #16
   15a64:	mov	r6, r0
   15a68:	ldr	r0, [r2]
   15a6c:	mov	r5, r3
   15a70:	mov	r4, r2
   15a74:	cmp	r0, #0
   15a78:	beq	15a98 <mchar_async_mem_malloc@@Base+0x44>
   15a7c:	ldr	r1, [r4, #8]
   15a80:	cmp	r1, r5
   15a84:	bcs	15ab0 <mchar_async_mem_malloc@@Base+0x5c>
   15a88:	bl	11a98 <mycore_free@plt>
   15a8c:	ldr	r0, [r6]
   15a90:	add	r0, r0, r5
   15a94:	b	15aa4 <mchar_async_mem_malloc@@Base+0x50>
   15a98:	ldr	r0, [r6]
   15a9c:	cmp	r0, r5
   15aa0:	movcc	r0, r5
   15aa4:	str	r0, [r4, #8]
   15aa8:	bl	119a8 <mycore_malloc@plt>
   15aac:	str	r0, [r4]
   15ab0:	mov	r0, #0
   15ab4:	str	r0, [r4, #4]
   15ab8:	pop	{r4, r5, r6, sl, fp, lr}
   15abc:	bx	lr

00015ac0 <mchar_async_chunk_malloc_without_lock@@Base>:
   15ac0:	push	{r4, r5, r6, r7, fp, lr}
   15ac4:	add	fp, sp, #16
   15ac8:	mov	r5, r0
   15acc:	ldr	r0, [r0, #40]	; 0x28
   15ad0:	mov	r4, r2
   15ad4:	cmp	r0, #0
   15ad8:	beq	15b08 <mchar_async_chunk_malloc_without_lock@@Base+0x48>
   15adc:	add	r5, r5, #24
   15ae0:	mov	r1, r4
   15ae4:	mov	r0, r5
   15ae8:	bl	11bac <mchar_async_cache_delete@plt>
   15aec:	cmp	r0, #0
   15af0:	beq	15c0c <mchar_async_chunk_malloc_without_lock@@Base+0x14c>
   15af4:	ldr	r1, [r5]
   15af8:	add	r0, r0, r0, lsl #2
   15afc:	ldr	r6, [r1, r0, lsl #2]
   15b00:	mov	r0, r6
   15b04:	pop	{r4, r5, r6, r7, fp, pc}
   15b08:	ldr	r1, [r5, #16]
   15b0c:	ldr	r0, [r5, #20]
   15b10:	cmp	r0, r1
   15b14:	bcc	15bb4 <mchar_async_chunk_malloc_without_lock@@Base+0xf4>
   15b18:	ldr	r7, [r5, #12]
   15b1c:	ldr	r1, [r5, #8]
   15b20:	add	r0, r7, #1
   15b24:	cmp	r0, r1
   15b28:	str	r0, [r5, #12]
   15b2c:	bcs	15b44 <mchar_async_chunk_malloc_without_lock@@Base+0x84>
   15b30:	ldr	r6, [r5, #4]
   15b34:	ldr	r0, [r6, r7, lsl #2]
   15b38:	cmp	r0, #0
   15b3c:	bne	15bac <mchar_async_chunk_malloc_without_lock@@Base+0xec>
   15b40:	b	15b90 <mchar_async_chunk_malloc_without_lock@@Base+0xd0>
   15b44:	lsl	r0, r1, #1
   15b48:	lsl	r1, r1, #3
   15b4c:	str	r0, [r5, #8]
   15b50:	ldr	r0, [r5, #4]
   15b54:	bl	10d9c <mycore_realloc@plt>
   15b58:	cmp	r0, #0
   15b5c:	beq	15c0c <mchar_async_chunk_malloc_without_lock@@Base+0x14c>
   15b60:	ldr	r1, [r5, #8]
   15b64:	ldr	r2, [r5, #12]
   15b68:	mov	r6, r0
   15b6c:	add	r0, r0, r2, lsl #2
   15b70:	sub	r1, r1, r2
   15b74:	lsl	r2, r1, #2
   15b78:	mov	r1, #0
   15b7c:	bl	116cc <memset@plt>
   15b80:	str	r6, [r5, #4]
   15b84:	ldr	r0, [r6, r7, lsl #2]
   15b88:	cmp	r0, #0
   15b8c:	bne	15bac <mchar_async_chunk_malloc_without_lock@@Base+0xec>
   15b90:	ldr	r0, [r5, #16]
   15b94:	mov	r1, #20
   15b98:	bl	11000 <mycore_calloc@plt>
   15b9c:	cmp	r0, #0
   15ba0:	beq	15c0c <mchar_async_chunk_malloc_without_lock@@Base+0x14c>
   15ba4:	ldr	r1, [r5, #4]
   15ba8:	str	r0, [r1, r7, lsl #2]
   15bac:	mov	r0, #0
   15bb0:	str	r0, [r5, #20]
   15bb4:	ldr	r1, [r5, #4]
   15bb8:	ldr	r2, [r5, #12]
   15bbc:	add	r1, r1, r2, lsl #2
   15bc0:	add	r2, r0, #1
   15bc4:	add	r0, r0, r0, lsl #2
   15bc8:	ldr	r1, [r1, #-4]
   15bcc:	str	r2, [r5, #20]
   15bd0:	add	r6, r1, r0, lsl #2
   15bd4:	cmp	r6, #0
   15bd8:	beq	15c18 <mchar_async_chunk_malloc_without_lock@@Base+0x158>
   15bdc:	ldr	r0, [r6]
   15be0:	cmp	r0, #0
   15be4:	beq	15c28 <mchar_async_chunk_malloc_without_lock@@Base+0x168>
   15be8:	mov	r7, r6
   15bec:	ldr	r1, [r7, #8]!
   15bf0:	cmp	r1, r4
   15bf4:	bcs	15c40 <mchar_async_chunk_malloc_without_lock@@Base+0x180>
   15bf8:	bl	11a98 <mycore_free@plt>
   15bfc:	ldr	r0, [r5]
   15c00:	add	r0, r0, r4
   15c04:	str	r0, [r7]
   15c08:	b	15c38 <mchar_async_chunk_malloc_without_lock@@Base+0x178>
   15c0c:	mov	r6, #0
   15c10:	mov	r0, r6
   15c14:	pop	{r4, r5, r6, r7, fp, pc}
   15c18:	cmp	r0, #0
   15c1c:	moveq	r6, r0
   15c20:	mov	r0, r6
   15c24:	pop	{r4, r5, r6, r7, fp, pc}
   15c28:	ldr	r0, [r5]
   15c2c:	cmp	r0, r4
   15c30:	movcc	r0, r4
   15c34:	str	r0, [r6, #8]
   15c38:	bl	119a8 <mycore_malloc@plt>
   15c3c:	str	r0, [r6]
   15c40:	mov	r1, #0
   15c44:	str	r1, [r6, #4]
   15c48:	cmp	r0, #0
   15c4c:	moveq	r6, r0
   15c50:	mov	r0, r6
   15c54:	pop	{r4, r5, r6, r7, fp, pc}

00015c58 <mchar_async_cache_delete@@Base>:
   15c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c5c:	add	fp, sp, #28
   15c60:	sub	sp, sp, #4
   15c64:	ldr	r2, [r0, #12]
   15c68:	mov	r8, #0
   15c6c:	cmp	r2, #0
   15c70:	beq	15e98 <mchar_async_cache_delete@@Base+0x240>
   15c74:	mov	sl, r0
   15c78:	ldr	r0, [r0]
   15c7c:	add	r3, r2, r2, lsl #2
   15c80:	add	r3, r0, r3, lsl #2
   15c84:	ldr	r7, [r3, #4]
   15c88:	cmp	r7, r1
   15c8c:	bcs	15ca0 <mchar_async_cache_delete@@Base+0x48>
   15c90:	ldr	r2, [r3, #12]
   15c94:	cmp	r2, #0
   15c98:	bne	15c7c <mchar_async_cache_delete@@Base+0x24>
   15c9c:	b	15e98 <mchar_async_cache_delete@@Base+0x240>
   15ca0:	mov	r6, r2
   15ca4:	add	r2, r2, r2, lsl #2
   15ca8:	add	r5, r0, r2, lsl #2
   15cac:	mov	r3, r5
   15cb0:	ldr	r2, [r3, #12]!
   15cb4:	add	r7, r2, r2, lsl #2
   15cb8:	add	r7, r0, r7, lsl #2
   15cbc:	ldr	r4, [r7, #4]
   15cc0:	cmp	r4, r1
   15cc4:	beq	15ca0 <mchar_async_cache_delete@@Base+0x48>
   15cc8:	ldr	lr, [r5, #16]
   15ccc:	cmp	lr, #0
   15cd0:	beq	15d40 <mchar_async_cache_delete@@Base+0xe8>
   15cd4:	add	r1, lr, lr, lsl #2
   15cd8:	add	ip, r0, r1, lsl #2
   15cdc:	mov	r9, ip
   15ce0:	ldr	r1, [r9, #8]!
   15ce4:	cmp	r1, r6
   15ce8:	bne	15d98 <mchar_async_cache_delete@@Base+0x140>
   15cec:	ldr	ip, [r5, #8]!
   15cf0:	cmp	r2, #0
   15cf4:	beq	15dfc <mchar_async_cache_delete@@Base+0x1a4>
   15cf8:	cmp	ip, #0
   15cfc:	beq	15e28 <mchar_async_cache_delete@@Base+0x1d0>
   15d00:	ldr	r3, [r7, #8]!
   15d04:	add	r1, r3, r3, lsl #2
   15d08:	mov	r4, r3
   15d0c:	add	r1, r0, r1, lsl #2
   15d10:	ldr	r3, [r1, #8]!
   15d14:	cmp	r3, #0
   15d18:	bne	15d04 <mchar_async_cache_delete@@Base+0xac>
   15d1c:	cmp	r4, #0
   15d20:	beq	15e24 <mchar_async_cache_delete@@Base+0x1cc>
   15d24:	str	ip, [r1]
   15d28:	ldr	r1, [r5]
   15d2c:	add	r1, r1, r1, lsl #2
   15d30:	add	r1, r0, r1, lsl #2
   15d34:	str	r4, [r1, #16]
   15d38:	str	r2, [r9]
   15d3c:	b	15e3c <mchar_async_cache_delete@@Base+0x1e4>
   15d40:	ldr	r1, [r5, #8]
   15d44:	cmp	r1, #0
   15d48:	beq	15df0 <mchar_async_cache_delete@@Base+0x198>
   15d4c:	cmp	r2, #0
   15d50:	beq	15e18 <mchar_async_cache_delete@@Base+0x1c0>
   15d54:	add	r7, r1, r1, lsl #2
   15d58:	add	ip, r0, r7, lsl #2
   15d5c:	ldr	r5, [ip, #12]!
   15d60:	add	r7, r5, r5, lsl #2
   15d64:	mov	r4, r5
   15d68:	add	r7, r0, r7, lsl #2
   15d6c:	ldr	r5, [r7, #12]!
   15d70:	cmp	r5, #0
   15d74:	bne	15d60 <mchar_async_cache_delete@@Base+0x108>
   15d78:	cmp	r4, #0
   15d7c:	beq	15e14 <mchar_async_cache_delete@@Base+0x1bc>
   15d80:	str	r2, [r7]
   15d84:	ldr	r2, [r3]
   15d88:	add	r2, r2, r2, lsl #2
   15d8c:	add	r2, r0, r2, lsl #2
   15d90:	str	r4, [r2, #16]
   15d94:	b	15e18 <mchar_async_cache_delete@@Base+0x1c0>
   15d98:	ldr	r1, [r5, #8]
   15d9c:	cmp	r1, #0
   15da0:	beq	15e08 <mchar_async_cache_delete@@Base+0x1b0>
   15da4:	cmp	r2, #0
   15da8:	beq	15e34 <mchar_async_cache_delete@@Base+0x1dc>
   15dac:	add	r4, r1, r1, lsl #2
   15db0:	add	r9, r0, r4, lsl #2
   15db4:	ldr	r4, [r9, #12]!
   15db8:	mov	r7, r4
   15dbc:	add	r4, r4, r4, lsl #2
   15dc0:	add	r5, r0, r4, lsl #2
   15dc4:	ldr	r4, [r5, #12]!
   15dc8:	cmp	r4, #0
   15dcc:	bne	15db8 <mchar_async_cache_delete@@Base+0x160>
   15dd0:	cmp	r7, #0
   15dd4:	beq	15e30 <mchar_async_cache_delete@@Base+0x1d8>
   15dd8:	str	r2, [r5]
   15ddc:	ldr	r2, [r3]
   15de0:	add	r2, r2, r2, lsl #2
   15de4:	add	r2, r0, r2, lsl #2
   15de8:	str	r7, [r2, #16]
   15dec:	b	15e34 <mchar_async_cache_delete@@Base+0x1dc>
   15df0:	mov	lr, #0
   15df4:	str	r2, [sl, #12]
   15df8:	b	15e3c <mchar_async_cache_delete@@Base+0x1e4>
   15dfc:	str	ip, [r9]
   15e00:	ldr	r2, [r5]
   15e04:	b	15e3c <mchar_async_cache_delete@@Base+0x1e4>
   15e08:	str	r2, [ip, #12]
   15e0c:	ldr	r2, [r3]
   15e10:	b	15e3c <mchar_async_cache_delete@@Base+0x1e4>
   15e14:	str	r2, [ip]
   15e18:	str	r1, [sl, #12]
   15e1c:	mov	lr, #0
   15e20:	b	15e38 <mchar_async_cache_delete@@Base+0x1e0>
   15e24:	str	ip, [r7]
   15e28:	str	r2, [r9]
   15e2c:	b	15e3c <mchar_async_cache_delete@@Base+0x1e4>
   15e30:	str	r2, [r9]
   15e34:	str	r1, [ip, #12]
   15e38:	mov	r2, r1
   15e3c:	add	r1, r2, r2, lsl #2
   15e40:	add	r0, r0, r1, lsl #2
   15e44:	str	lr, [r0, #16]
   15e48:	ldr	r0, [sl, #20]
   15e4c:	ldr	r1, [sl, #24]
   15e50:	str	r6, [r0, r1, lsl #2]
   15e54:	ldr	r1, [sl, #24]
   15e58:	ldr	r5, [sl, #28]
   15e5c:	add	r1, r1, #1
   15e60:	cmp	r1, r5
   15e64:	str	r1, [sl, #24]
   15e68:	bcc	15e88 <mchar_async_cache_delete@@Base+0x230>
   15e6c:	lsl	r1, r5, #3
   15e70:	bl	10d9c <mycore_realloc@plt>
   15e74:	cmp	r0, #0
   15e78:	beq	15e98 <mchar_async_cache_delete@@Base+0x240>
   15e7c:	str	r0, [sl, #20]
   15e80:	lsl	r0, r5, #1
   15e84:	str	r0, [sl, #28]
   15e88:	ldr	r0, [sl, #16]
   15e8c:	mov	r8, r6
   15e90:	sub	r0, r0, #1
   15e94:	str	r0, [sl, #16]
   15e98:	mov	r0, r8
   15e9c:	sub	sp, fp, #28
   15ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ea4:	nop	{0}
   15ea8:	nop	{0}
   15eac:	nop	{0}

00015eb0 <mchar_async_node_add@@Base>:
   15eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15eb4:	add	fp, sp, #28
   15eb8:	sub	sp, sp, #4
   15ebc:	mov	r5, r0
   15ec0:	ldr	r0, [r0, #80]	; 0x50
   15ec4:	mov	sl, r1
   15ec8:	bl	11690 <mcsync_lock@plt>
   15ecc:	cmp	r0, #0
   15ed0:	beq	15ef0 <mchar_async_node_add@@Base+0x40>
   15ed4:	cmp	sl, #0
   15ed8:	mov	r6, #0
   15edc:	movne	r0, #96	; 0x60
   15ee0:	strne	r0, [sl]
   15ee4:	mov	r0, r6
   15ee8:	sub	sp, fp, #28
   15eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ef0:	ldr	r0, [r5, #72]	; 0x48
   15ef4:	cmp	r0, #0
   15ef8:	beq	15f10 <mchar_async_node_add@@Base+0x60>
   15efc:	sub	r0, r0, #1
   15f00:	str	r0, [r5, #72]	; 0x48
   15f04:	ldr	r1, [r5, #68]	; 0x44
   15f08:	ldr	r6, [r1, r0, lsl #2]
   15f0c:	b	15f28 <mchar_async_node_add@@Base+0x78>
   15f10:	ldr	r6, [r5, #60]	; 0x3c
   15f14:	ldr	r0, [r5, #64]	; 0x40
   15f18:	cmp	r6, r0
   15f1c:	bcs	15fd0 <mchar_async_node_add@@Base+0x120>
   15f20:	add	r0, r6, #1
   15f24:	str	r0, [r5, #60]	; 0x3c
   15f28:	ldr	r1, [r5, #56]	; 0x38
   15f2c:	add	r0, pc, #236	; 0xec
   15f30:	add	r9, r6, r6, lsl #3
   15f34:	vld1.64	{d16-d17}, [r0 :128]
   15f38:	mov	r0, #20480	; 0x5000
   15f3c:	add	r7, r1, r9, lsl #2
   15f40:	str	r1, [sp]
   15f44:	add	r8, r7, #8
   15f48:	vst1.32	{d16-d17}, [r8]
   15f4c:	bl	119a8 <mycore_malloc@plt>
   15f50:	mov	r4, r7
   15f54:	cmp	r0, #0
   15f58:	str	r0, [r4, #4]!
   15f5c:	beq	15fec <mchar_async_node_add@@Base+0x13c>
   15f60:	vmov.i32	q8, #0	; 0x00000000
   15f64:	vst1.32	{d16-d17}, [r0]
   15f68:	mov	r0, #0
   15f6c:	ldr	r1, [r8]
   15f70:	str	r0, [r7, #28]
   15f74:	lsl	r0, r1, #2
   15f78:	str	r1, [r7, #32]
   15f7c:	bl	119a8 <mycore_malloc@plt>
   15f80:	cmp	r0, #0
   15f84:	str	r0, [r7, #24]
   15f88:	beq	15fe0 <mchar_async_node_add@@Base+0x130>
   15f8c:	ldr	r2, [r5]
   15f90:	mov	r0, r5
   15f94:	bl	11900 <mchar_async_chunk_malloc_without_lock@plt>
   15f98:	ldr	r1, [sp]
   15f9c:	cmp	r0, #0
   15fa0:	str	r0, [r1, r9, lsl #2]
   15fa4:	beq	15fec <mchar_async_node_add@@Base+0x13c>
   15fa8:	mov	r4, #0
   15fac:	str	r4, [r0, #12]
   15fb0:	str	r4, [r0, #16]
   15fb4:	ldr	r0, [r5, #80]	; 0x50
   15fb8:	bl	11b40 <mcsync_unlock@plt>
   15fbc:	cmp	sl, #0
   15fc0:	strne	r4, [sl]
   15fc4:	mov	r0, r6
   15fc8:	sub	sp, fp, #28
   15fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fd0:	cmp	sl, #0
   15fd4:	beq	15ffc <mchar_async_node_add@@Base+0x14c>
   15fd8:	mov	r0, #98	; 0x62
   15fdc:	b	15ff8 <mchar_async_node_add@@Base+0x148>
   15fe0:	ldr	r0, [r4]
   15fe4:	bl	11a98 <mycore_free@plt>
   15fe8:	str	r0, [r4]
   15fec:	cmp	sl, #0
   15ff0:	beq	15ffc <mchar_async_node_add@@Base+0x14c>
   15ff4:	mov	r0, #2
   15ff8:	str	r0, [sl]
   15ffc:	ldr	r0, [r5, #80]	; 0x50
   16000:	bl	11b40 <mcsync_unlock@plt>
   16004:	mov	r6, #0
   16008:	mov	r0, r6
   1600c:	sub	sp, fp, #28
   16010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16014:	nop	{0}
   16018:	nop	{0}
   1601c:	nop	{0}
   16020:	andeq	r0, r0, r0, lsl #8
   16024:	andeq	r0, r0, r1
	...

00016030 <mchar_async_node_clean@@Base>:
   16030:	ldr	r2, [r0, #60]	; 0x3c
   16034:	cmp	r2, r1
   16038:	bls	160a0 <mchar_async_node_clean@@Base+0x70>
   1603c:	ldr	ip, [r0, #56]	; 0x38
   16040:	add	r1, r1, r1, lsl #3
   16044:	mov	r3, ip
   16048:	ldr	r0, [r3, r1, lsl #2]!
   1604c:	ldr	r2, [r0, #16]
   16050:	cmp	r2, #0
   16054:	beq	1606c <mchar_async_node_clean@@Base+0x3c>
   16058:	mov	r0, r2
   1605c:	ldr	r2, [r2, #16]
   16060:	cmp	r2, #0
   16064:	bne	16058 <mchar_async_node_clean@@Base+0x28>
   16068:	str	r0, [r3]
   1606c:	mov	r2, #0
   16070:	str	r2, [r0, #4]
   16074:	add	r0, ip, r1, lsl #2
   16078:	mov	r1, #1
   1607c:	str	r2, [r0, #28]
   16080:	str	r1, [r0, #12]
   16084:	str	r2, [r0, #16]
   16088:	str	r2, [r0, #20]
   1608c:	ldr	r0, [r0, #4]
   16090:	cmp	r0, #0
   16094:	bxeq	lr
   16098:	vmov.i32	q8, #0	; 0x00000000
   1609c:	vst1.32	{d16-d17}, [r0]
   160a0:	bx	lr

000160a4 <mchar_async_node_delete@@Base>:
   160a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160a8:	add	fp, sp, #28
   160ac:	sub	sp, sp, #4
   160b0:	mov	r4, r0
   160b4:	ldr	r0, [r0, #80]	; 0x50
   160b8:	mov	r8, r1
   160bc:	bl	11690 <mcsync_lock@plt>
   160c0:	ldr	r0, [r4, #60]	; 0x3c
   160c4:	cmp	r0, r8
   160c8:	bls	16198 <mchar_async_node_delete@@Base+0xf4>
   160cc:	ldr	r9, [r4, #56]	; 0x38
   160d0:	add	sl, r8, r8, lsl #3
   160d4:	mov	r5, r9
   160d8:	ldr	r0, [r5, sl, lsl #2]!
   160dc:	mov	r6, r0
   160e0:	ldr	r0, [r0, #12]
   160e4:	cmp	r0, #0
   160e8:	bne	160dc <mchar_async_node_delete@@Base+0x38>
   160ec:	cmp	r6, #0
   160f0:	beq	16114 <mchar_async_node_delete@@Base+0x70>
   160f4:	add	r7, r4, #24
   160f8:	ldr	r2, [r6, #8]
   160fc:	mov	r0, r7
   16100:	mov	r1, r6
   16104:	bl	11990 <mchar_async_cache_add@plt>
   16108:	ldr	r6, [r6, #16]
   1610c:	cmp	r6, #0
   16110:	bne	160f8 <mchar_async_node_delete@@Base+0x54>
   16114:	add	r6, r9, sl, lsl #2
   16118:	ldr	r0, [r6, #4]
   1611c:	cmp	r0, #0
   16120:	beq	16138 <mchar_async_node_delete@@Base+0x94>
   16124:	bl	11a98 <mycore_free@plt>
   16128:	ldr	r0, [r6, #24]
   1612c:	cmp	r0, #0
   16130:	beq	16138 <mchar_async_node_delete@@Base+0x94>
   16134:	bl	11a98 <mycore_free@plt>
   16138:	vmov.i32	q8, #0	; 0x00000000
   1613c:	mov	r0, #32
   16140:	add	r1, r5, #16
   16144:	vst1.32	{d16-d17}, [r5], r0
   16148:	mov	r0, #0
   1614c:	vst1.32	{d16-d17}, [r1]
   16150:	str	r0, [r5]
   16154:	ldr	r0, [r4, #72]	; 0x48
   16158:	ldr	r5, [r4, #76]	; 0x4c
   1615c:	cmp	r0, r5
   16160:	bcc	16180 <mchar_async_node_delete@@Base+0xdc>
   16164:	ldr	r0, [r4, #68]	; 0x44
   16168:	lsl	r1, r5, #2
   1616c:	bl	10d9c <mycore_realloc@plt>
   16170:	cmp	r0, #0
   16174:	strne	r0, [r4, #68]	; 0x44
   16178:	lslne	r0, r5, #1
   1617c:	strne	r0, [r4, #76]	; 0x4c
   16180:	ldr	r0, [r4, #68]	; 0x44
   16184:	ldr	r1, [r4, #72]	; 0x48
   16188:	str	r8, [r0, r1, lsl #2]
   1618c:	ldr	r0, [r4, #72]	; 0x48
   16190:	add	r0, r0, #1
   16194:	str	r0, [r4, #72]	; 0x48
   16198:	ldr	r0, [r4, #80]	; 0x50
   1619c:	sub	sp, fp, #28
   161a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161a4:	b	11b40 <mcsync_unlock@plt>

000161a8 <mchar_async_cache_add@@Base>:
   161a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   161ac:	add	fp, sp, #24
   161b0:	mov	r4, r0
   161b4:	mov	r6, r0
   161b8:	mov	r5, r2
   161bc:	mov	r8, r1
   161c0:	ldr	r7, [r4, #12]!
   161c4:	ldr	r0, [r4, #4]
   161c8:	cmp	r7, #0
   161cc:	add	r0, r0, #1
   161d0:	str	r0, [r4, #4]
   161d4:	beq	161f8 <mchar_async_cache_add@@Base+0x50>
   161d8:	ldr	r0, [r6, #24]
   161dc:	cmp	r0, #0
   161e0:	beq	1621c <mchar_async_cache_add@@Base+0x74>
   161e4:	sub	r0, r0, #1
   161e8:	str	r0, [r6, #24]
   161ec:	ldr	r1, [r6, #20]
   161f0:	ldr	r1, [r1, r0, lsl #2]
   161f4:	b	1625c <mchar_async_cache_add@@Base+0xb4>
   161f8:	ldr	r0, [r6, #24]
   161fc:	ldr	r7, [r6]
   16200:	cmp	r0, #0
   16204:	beq	16330 <mchar_async_cache_add@@Base+0x188>
   16208:	sub	r0, r0, #1
   1620c:	str	r0, [r6, #24]
   16210:	ldr	r1, [r6, #20]
   16214:	ldr	r0, [r1, r0, lsl #2]
   16218:	b	1636c <mchar_async_cache_add@@Base+0x1c4>
   1621c:	ldr	r0, [r6, #8]
   16220:	ldr	r1, [r6, #4]
   16224:	add	r0, r0, #1
   16228:	cmp	r0, r1
   1622c:	str	r0, [r6, #8]
   16230:	bcc	16254 <mchar_async_cache_add@@Base+0xac>
   16234:	lsl	r0, r1, #1
   16238:	add	r1, r1, r1, lsl #2
   1623c:	str	r0, [r6, #4]
   16240:	ldr	r0, [r6]
   16244:	lsl	r1, r1, #3
   16248:	bl	10d9c <mycore_realloc@plt>
   1624c:	cmp	r0, #0
   16250:	strne	r0, [r6]
   16254:	ldr	r0, [r6, #8]
   16258:	sub	r1, r0, #1
   1625c:	ldr	r3, [r6]
   16260:	add	r2, r7, r7, lsl #2
   16264:	mov	r0, r7
   16268:	add	r2, r3, r2, lsl #2
   1626c:	ldr	r7, [r2, #4]
   16270:	cmp	r7, r5
   16274:	beq	162b0 <mchar_async_cache_add@@Base+0x108>
   16278:	bhi	162e0 <mchar_async_cache_add@@Base+0x138>
   1627c:	ldr	r7, [r2, #12]!
   16280:	cmp	r7, #0
   16284:	bne	16260 <mchar_async_cache_add@@Base+0xb8>
   16288:	str	r1, [r2]
   1628c:	add	r1, r1, r1, lsl #2
   16290:	add	r7, r3, r1, lsl #2
   16294:	mov	r1, #0
   16298:	str	r5, [r7, #4]
   1629c:	str	r1, [r7, #8]
   162a0:	str	r1, [r7, #12]
   162a4:	str	r0, [r7, #16]
   162a8:	str	r8, [r7]
   162ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   162b0:	add	r7, r1, r1, lsl #2
   162b4:	ldr	r4, [r2, #12]!
   162b8:	add	r7, r3, r7, lsl #2
   162bc:	add	r6, r7, #12
   162c0:	cmp	r4, #0
   162c4:	beq	16394 <mchar_async_cache_add@@Base+0x1ec>
   162c8:	str	r4, [r6]
   162cc:	ldr	r6, [r2]
   162d0:	add	r6, r6, r6, lsl #2
   162d4:	add	r3, r3, r6, lsl #2
   162d8:	str	r1, [r3, #16]
   162dc:	b	1639c <mchar_async_cache_add@@Base+0x1f4>
   162e0:	ldr	r7, [r2, #16]!
   162e4:	mov	ip, #0
   162e8:	mov	r6, #0
   162ec:	cmp	r7, #0
   162f0:	beq	1630c <mchar_async_cache_add@@Base+0x164>
   162f4:	add	r6, r7, r7, lsl #2
   162f8:	add	r4, r3, r6, lsl #2
   162fc:	ldr	r6, [r4, #8]!
   16300:	cmp	r6, r0
   16304:	mov	r6, r7
   16308:	addne	r4, r4, #4
   1630c:	add	r7, r1, r1, lsl #2
   16310:	str	r1, [r4]
   16314:	add	r7, r3, r7, lsl #2
   16318:	str	r6, [r7, #16]
   1631c:	str	r1, [r2]
   16320:	str	r0, [r7, #12]
   16324:	stmib	r7, {r5, ip}
   16328:	str	r8, [r7]
   1632c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16330:	ldmib	r6, {r0, r1}
   16334:	add	r1, r1, #1
   16338:	str	r1, [r6, #8]
   1633c:	cmp	r1, r0
   16340:	bcc	16364 <mchar_async_cache_add@@Base+0x1bc>
   16344:	lsl	r1, r0, #1
   16348:	add	r0, r0, r0, lsl #2
   1634c:	str	r1, [r6, #4]
   16350:	lsl	r1, r0, #3
   16354:	mov	r0, r7
   16358:	bl	10d9c <mycore_realloc@plt>
   1635c:	cmp	r0, #0
   16360:	strne	r0, [r6]
   16364:	ldr	r0, [r6, #8]
   16368:	sub	r0, r0, #1
   1636c:	str	r0, [r4]
   16370:	add	r0, r0, r0, lsl #2
   16374:	add	r7, r7, r0, lsl #2
   16378:	mov	r0, #0
   1637c:	str	r5, [r7, #4]
   16380:	str	r0, [r7, #8]
   16384:	str	r0, [r7, #12]
   16388:	str	r0, [r7, #16]
   1638c:	str	r8, [r7]
   16390:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16394:	mov	r3, #0
   16398:	str	r3, [r6]
   1639c:	str	r1, [r2]
   163a0:	mov	r1, #0
   163a4:	str	r0, [r7, #16]
   163a8:	str	r5, [r7, #4]
   163ac:	str	r1, [r7, #8]
   163b0:	str	r8, [r7]
   163b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000163b8 <mchar_sync_chunk_find_by_size@@Base>:
   163b8:	ldr	r0, [r0]
   163bc:	ldr	r0, [r0, #12]
   163c0:	cmp	r0, #0
   163c4:	bxeq	lr
   163c8:	ldr	r2, [r0, #8]
   163cc:	cmp	r2, r1
   163d0:	bcc	163bc <mchar_sync_chunk_find_by_size@@Base+0x4>
   163d4:	bx	lr

000163d8 <mchar_sync_chunk_insert_after@@Base>:
   163d8:	ldr	r2, [r0, #12]
   163dc:	cmp	r2, r1
   163e0:	bxeq	lr
   163e4:	ldr	r2, [r1, #16]
   163e8:	cmp	r2, #0
   163ec:	ldrne	r3, [r1, #12]
   163f0:	strne	r3, [r2, #12]
   163f4:	ldr	r3, [r1, #12]
   163f8:	cmp	r3, #0
   163fc:	strne	r2, [r3, #16]
   16400:	ldr	r2, [r0, #12]
   16404:	cmp	r2, #0
   16408:	strne	r1, [r2, #16]
   1640c:	str	r2, [r1, #12]
   16410:	str	r0, [r1, #16]
   16414:	str	r1, [r0, #12]
   16418:	bx	lr

0001641c <mchar_async_malloc@@Base>:
   1641c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16420:	add	fp, sp, #24
   16424:	cmp	r2, #0
   16428:	beq	164f4 <mchar_async_malloc@@Base+0xd8>
   1642c:	ldr	r6, [r0, #56]	; 0x38
   16430:	mov	r8, r0
   16434:	add	r0, r1, r1, lsl #3
   16438:	mov	r9, r2
   1643c:	ldr	r5, [r6, r0, lsl #2]!
   16440:	ldr	r0, [r6, #20]
   16444:	add	r7, r6, #4
   16448:	cmp	r0, #0
   1644c:	beq	16474 <mchar_async_malloc@@Base+0x58>
   16450:	mov	r0, r7
   16454:	mov	r1, r9
   16458:	bl	11bac <mchar_async_cache_delete@plt>
   1645c:	cmp	r0, #0
   16460:	beq	16474 <mchar_async_malloc@@Base+0x58>
   16464:	ldr	r1, [r7]
   16468:	add	r0, r0, r0, lsl #2
   1646c:	ldr	r0, [r1, r0, lsl #2]
   16470:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16474:	ldmib	r5, {r0, r2}
   16478:	add	r4, r9, #4
   1647c:	add	r1, r4, r0
   16480:	cmp	r1, r2
   16484:	bls	16588 <mchar_async_malloc@@Base+0x16c>
   16488:	add	r1, r0, #4
   1648c:	cmp	r1, r2
   16490:	bcs	164bc <mchar_async_malloc@@Base+0xa0>
   16494:	sub	r2, r2, r0
   16498:	subs	r2, r2, #4
   1649c:	beq	164bc <mchar_async_malloc@@Base+0xa0>
   164a0:	ldr	r3, [r5]
   164a4:	str	r2, [r3, r0]
   164a8:	add	r1, r3, r1
   164ac:	ldr	r0, [r5, #8]
   164b0:	str	r0, [r5, #4]
   164b4:	mov	r0, r7
   164b8:	bl	11990 <mchar_async_cache_add@plt>
   164bc:	ldr	r5, [r6]
   164c0:	ldr	r5, [r5, #12]
   164c4:	cmp	r5, #0
   164c8:	beq	164fc <mchar_async_malloc@@Base+0xe0>
   164cc:	ldr	r0, [r5, #8]
   164d0:	cmp	r0, r4
   164d4:	bcc	164c0 <mchar_async_malloc@@Base+0xa4>
   164d8:	mov	r0, #0
   164dc:	str	r0, [r5, #4]
   164e0:	ldr	r0, [r6]
   164e4:	ldr	r1, [r0, #12]
   164e8:	cmp	r1, r5
   164ec:	bne	1654c <mchar_async_malloc@@Base+0x130>
   164f0:	b	16580 <mchar_async_malloc@@Base+0x164>
   164f4:	mov	r0, #0
   164f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   164fc:	ldr	r5, [r8]
   16500:	cmp	r4, r5
   16504:	bls	1651c <mchar_async_malloc@@Base+0x100>
   16508:	ldr	r0, [r8, #80]	; 0x50
   1650c:	bl	11690 <mcsync_lock@plt>
   16510:	add	r2, r5, r4
   16514:	mov	r0, r8
   16518:	b	1652c <mchar_async_malloc@@Base+0x110>
   1651c:	ldr	r0, [r8, #80]	; 0x50
   16520:	bl	11690 <mcsync_lock@plt>
   16524:	mov	r0, r8
   16528:	mov	r2, r5
   1652c:	bl	11900 <mchar_async_chunk_malloc_without_lock@plt>
   16530:	mov	r5, r0
   16534:	ldr	r0, [r8, #80]	; 0x50
   16538:	bl	11b40 <mcsync_unlock@plt>
   1653c:	ldr	r0, [r6]
   16540:	ldr	r1, [r0, #12]
   16544:	cmp	r1, r5
   16548:	beq	16580 <mchar_async_malloc@@Base+0x164>
   1654c:	ldr	r1, [r5, #16]
   16550:	cmp	r1, #0
   16554:	ldrne	r2, [r5, #12]
   16558:	strne	r2, [r1, #12]
   1655c:	ldr	r2, [r5, #12]
   16560:	cmp	r2, #0
   16564:	strne	r1, [r2, #16]
   16568:	ldr	r1, [r0, #12]
   1656c:	cmp	r1, #0
   16570:	strne	r5, [r1, #16]
   16574:	str	r1, [r5, #12]
   16578:	str	r0, [r5, #16]
   1657c:	str	r5, [r0, #12]
   16580:	str	r5, [r6]
   16584:	ldr	r0, [r5, #4]
   16588:	ldr	r1, [r5]
   1658c:	str	r9, [r1, r0]!
   16590:	ldr	r0, [r5, #4]
   16594:	add	r0, r4, r0
   16598:	str	r0, [r5, #4]
   1659c:	add	r0, r1, #4
   165a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000165a4 <mchar_async_realloc@@Base>:
   165a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165a8:	add	fp, sp, #28
   165ac:	sub	sp, sp, #4
   165b0:	mov	r5, #0
   165b4:	cmp	r2, #0
   165b8:	beq	1664c <mchar_async_realloc@@Base+0xa8>
   165bc:	mov	r4, r2
   165c0:	ldr	r2, [fp, #8]
   165c4:	ldr	r7, [r4, #-4]
   165c8:	cmp	r7, r2
   165cc:	bcs	16658 <mchar_async_realloc@@Base+0xb4>
   165d0:	ldr	r9, [r0, #56]	; 0x38
   165d4:	add	sl, r1, r1, lsl #3
   165d8:	mov	r8, r3
   165dc:	str	r9, [sp]
   165e0:	ldr	r6, [r9, sl, lsl #2]!
   165e4:	ldr	r3, [r6, #4]
   165e8:	cmp	r3, r7
   165ec:	bcc	16614 <mchar_async_realloc@@Base+0x70>
   165f0:	sub	lr, r3, r7
   165f4:	ldr	r3, [r6]
   165f8:	add	ip, r3, lr
   165fc:	cmp	ip, r4
   16600:	bne	16614 <mchar_async_realloc@@Base+0x70>
   16604:	ldr	r3, [r6, #8]
   16608:	add	lr, lr, r2
   1660c:	cmp	lr, r3
   16610:	bls	16668 <mchar_async_realloc@@Base+0xc4>
   16614:	bl	1172c <mchar_async_malloc@plt>
   16618:	cmp	r0, #0
   1661c:	beq	1664c <mchar_async_realloc@@Base+0xa8>
   16620:	mov	r1, r4
   16624:	mov	r2, r8
   16628:	mov	r6, r0
   1662c:	bl	11030 <memcpy@plt>
   16630:	ldr	r0, [sp]
   16634:	mov	r1, r4
   16638:	mov	r2, r7
   1663c:	add	r0, r0, sl, lsl #2
   16640:	add	r0, r0, #4
   16644:	bl	11990 <mchar_async_cache_add@plt>
   16648:	mov	r5, r6
   1664c:	mov	r0, r5
   16650:	sub	sp, fp, #28
   16654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16658:	mov	r5, r4
   1665c:	mov	r0, r5
   16660:	sub	sp, fp, #28
   16664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16668:	str	r2, [ip, #-4]
   1666c:	mov	r5, r4
   16670:	ldr	r0, [r9]
   16674:	str	lr, [r0, #4]
   16678:	mov	r0, r5
   1667c:	sub	sp, fp, #28
   16680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016684 <mchar_async_crop_first_chars@@Base>:
   16684:	push	{r4, r5, fp, lr}
   16688:	add	fp, sp, #8
   1668c:	cmp	r2, #0
   16690:	beq	166dc <mchar_async_crop_first_chars@@Base+0x58>
   16694:	ldr	r4, [r2, #-4]
   16698:	add	r5, r2, r3
   1669c:	sub	r4, r4, r3
   166a0:	str	r4, [r5, #-4]
   166a4:	add	r4, r3, #4
   166a8:	cmp	r4, #5
   166ac:	bcc	166d4 <mchar_async_crop_first_chars@@Base+0x50>
   166b0:	sub	r3, r3, #4
   166b4:	add	r1, r1, r1, lsl #3
   166b8:	str	r3, [r2, #-4]
   166bc:	ldr	r0, [r0, #56]	; 0x38
   166c0:	add	r0, r0, r1, lsl #2
   166c4:	mov	r1, r2
   166c8:	mov	r2, r3
   166cc:	add	r0, r0, #4
   166d0:	bl	11990 <mchar_async_cache_add@plt>
   166d4:	mov	r0, r5
   166d8:	pop	{r4, r5, fp, pc}
   166dc:	mov	r5, #0
   166e0:	mov	r0, r5
   166e4:	pop	{r4, r5, fp, pc}

000166e8 <mchar_async_crop_first_chars_without_cache@@Base>:
   166e8:	cmp	r0, #0
   166ec:	moveq	r0, #0
   166f0:	bxeq	lr
   166f4:	mov	r2, r0
   166f8:	add	r0, r0, r1
   166fc:	ldr	r2, [r2, #-4]
   16700:	sub	r1, r2, r1
   16704:	str	r1, [r0, #-4]
   16708:	bx	lr

0001670c <mchar_async_get_size_by_data@@Base>:
   1670c:	cmp	r0, #0
   16710:	ldrne	r0, [r0, #-4]
   16714:	moveq	r0, #0
   16718:	bx	lr

0001671c <mchar_async_free@@Base>:
   1671c:	cmp	r2, #0
   16720:	bxeq	lr
   16724:	ldr	r0, [r0, #56]	; 0x38
   16728:	add	r1, r1, r1, lsl #3
   1672c:	ldr	r3, [r2, #-4]
   16730:	add	r0, r0, r1, lsl #2
   16734:	mov	r1, r2
   16738:	mov	r2, r3
   1673c:	add	r0, r0, #4
   16740:	b	161a8 <mchar_async_cache_add@@Base>

00016744 <mchar_async_cache_malloc@@Base>:
   16744:	push	{r4, sl, fp, lr}
   16748:	add	fp, sp, #8
   1674c:	mov	r4, r0
   16750:	ldr	r0, [r0, #24]
   16754:	cmp	r0, #0
   16758:	beq	16770 <mchar_async_cache_malloc@@Base+0x2c>
   1675c:	sub	r0, r0, #1
   16760:	str	r0, [r4, #24]
   16764:	ldr	r1, [r4, #20]
   16768:	ldr	r0, [r1, r0, lsl #2]
   1676c:	pop	{r4, sl, fp, pc}
   16770:	ldr	r0, [r4, #8]
   16774:	ldr	r1, [r4, #4]
   16778:	add	r0, r0, #1
   1677c:	cmp	r0, r1
   16780:	str	r0, [r4, #8]
   16784:	bcc	167a8 <mchar_async_cache_malloc@@Base+0x64>
   16788:	lsl	r0, r1, #1
   1678c:	add	r1, r1, r1, lsl #2
   16790:	str	r0, [r4, #4]
   16794:	ldr	r0, [r4]
   16798:	lsl	r1, r1, #3
   1679c:	bl	10d9c <mycore_realloc@plt>
   167a0:	cmp	r0, #0
   167a4:	strne	r0, [r4]
   167a8:	ldr	r0, [r4, #8]
   167ac:	sub	r0, r0, #1
   167b0:	pop	{r4, sl, fp, pc}

000167b4 <mcobject_create@@Base>:
   167b4:	mov	r0, #1
   167b8:	mov	r1, #24
   167bc:	b	11000 <mycore_calloc@plt>

000167c0 <mcobject_init@@Base>:
   167c0:	push	{r4, r5, fp, lr}
   167c4:	add	fp, sp, #8
   167c8:	mov	r5, #0
   167cc:	mov	r4, r0
   167d0:	str	r5, [r0]
   167d4:	str	r1, [r0, #8]
   167d8:	str	r5, [r0, #12]
   167dc:	str	r2, [r0, #16]
   167e0:	str	r1, [r0, #20]
   167e4:	lsl	r0, r1, #2
   167e8:	bl	119a8 <mycore_malloc@plt>
   167ec:	cmp	r0, #0
   167f0:	str	r0, [r4, #4]
   167f4:	movweq	r5, #85	; 0x55
   167f8:	mov	r0, r5
   167fc:	pop	{r4, r5, fp, pc}

00016800 <mcobject_clean@@Base>:
   16800:	push	{r4, r5, r6, sl, fp, lr}
   16804:	add	fp, sp, #16
   16808:	mov	r4, r0
   1680c:	ldr	r0, [r0]
   16810:	cmp	r0, #0
   16814:	beq	16864 <mcobject_clean@@Base+0x64>
   16818:	mov	r5, r0
   1681c:	ldr	r0, [r0, #12]
   16820:	cmp	r0, #0
   16824:	bne	16818 <mcobject_clean@@Base+0x18>
   16828:	b	16840 <mcobject_clean@@Base+0x40>
   1682c:	mov	r0, r5
   16830:	bl	11a98 <mycore_free@plt>
   16834:	cmp	r6, #0
   16838:	mov	r5, r6
   1683c:	beq	16858 <mcobject_clean@@Base+0x58>
   16840:	ldr	r0, [r5]
   16844:	ldr	r6, [r5, #16]
   16848:	cmp	r0, #0
   1684c:	beq	1682c <mcobject_clean@@Base+0x2c>
   16850:	bl	11a98 <mycore_free@plt>
   16854:	b	1682c <mcobject_clean@@Base+0x2c>
   16858:	mov	r0, #0
   1685c:	str	r0, [r4, #12]
   16860:	str	r0, [r4]
   16864:	pop	{r4, r5, r6, sl, fp, pc}

00016868 <mcobject_destroy@@Base>:
   16868:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1686c:	add	fp, sp, #24
   16870:	mov	r4, #0
   16874:	cmp	r0, #0
   16878:	beq	16904 <mcobject_destroy@@Base+0x9c>
   1687c:	mov	r5, r0
   16880:	ldr	r0, [r0]
   16884:	mov	r8, r1
   16888:	cmp	r0, #0
   1688c:	beq	168dc <mcobject_destroy@@Base+0x74>
   16890:	mov	r7, r0
   16894:	ldr	r0, [r0, #12]
   16898:	cmp	r0, #0
   1689c:	bne	16890 <mcobject_destroy@@Base+0x28>
   168a0:	b	168b8 <mcobject_destroy@@Base+0x50>
   168a4:	mov	r0, r7
   168a8:	bl	11a98 <mycore_free@plt>
   168ac:	cmp	r6, #0
   168b0:	mov	r7, r6
   168b4:	beq	168d0 <mcobject_destroy@@Base+0x68>
   168b8:	ldr	r0, [r7]
   168bc:	ldr	r6, [r7, #16]
   168c0:	cmp	r0, #0
   168c4:	beq	168a4 <mcobject_destroy@@Base+0x3c>
   168c8:	bl	11a98 <mycore_free@plt>
   168cc:	b	168a4 <mcobject_destroy@@Base+0x3c>
   168d0:	mov	r0, #0
   168d4:	str	r0, [r5, #12]
   168d8:	str	r0, [r5]
   168dc:	ldr	r0, [r5, #4]
   168e0:	cmp	r0, #0
   168e4:	beq	168f4 <mcobject_destroy@@Base+0x8c>
   168e8:	bl	11a98 <mycore_free@plt>
   168ec:	mov	r0, #0
   168f0:	str	r0, [r5, #4]
   168f4:	cmp	r8, #0
   168f8:	beq	1690c <mcobject_destroy@@Base+0xa4>
   168fc:	mov	r0, r5
   16900:	bl	11a98 <mycore_free@plt>
   16904:	mov	r0, r4
   16908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1690c:	mov	r0, r5
   16910:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016914 <mcobject_chunk_malloc@@Base>:
   16914:	push	{r4, r5, r6, sl, fp, lr}
   16918:	add	fp, sp, #16
   1691c:	cmp	r1, #0
   16920:	mov	r5, r0
   16924:	mov	r4, r1
   16928:	movne	r0, #0
   1692c:	strne	r0, [r4]
   16930:	ldr	r0, [r5]
   16934:	cmp	r0, #0
   16938:	beq	16958 <mcobject_chunk_malloc@@Base+0x44>
   1693c:	ldr	r0, [r0, #12]
   16940:	cmp	r0, #0
   16944:	beq	16958 <mcobject_chunk_malloc@@Base+0x44>
   16948:	mov	r1, #0
   1694c:	str	r0, [r5]
   16950:	str	r1, [r0, #4]
   16954:	pop	{r4, r5, r6, sl, fp, pc}
   16958:	mov	r0, #1
   1695c:	mov	r1, #20
   16960:	bl	11000 <mycore_calloc@plt>
   16964:	cmp	r0, #0
   16968:	beq	169ac <mcobject_chunk_malloc@@Base+0x98>
   1696c:	mov	r6, r0
   16970:	ldr	r0, [r5, #16]
   16974:	ldr	r1, [r5, #20]
   16978:	mul	r0, r1, r0
   1697c:	bl	119a8 <mycore_malloc@plt>
   16980:	cmp	r0, #0
   16984:	str	r0, [r6]
   16988:	beq	169c0 <mcobject_chunk_malloc@@Base+0xac>
   1698c:	ldr	r0, [r5, #20]
   16990:	str	r0, [r6, #8]
   16994:	ldr	r0, [r5]
   16998:	cmp	r0, #0
   1699c:	strne	r0, [r6, #16]
   169a0:	strne	r6, [r0, #12]
   169a4:	str	r6, [r5]
   169a8:	pop	{r4, r5, r6, sl, fp, pc}
   169ac:	cmp	r4, #0
   169b0:	beq	169bc <mcobject_chunk_malloc@@Base+0xa8>
   169b4:	mov	r0, #86	; 0x56
   169b8:	str	r0, [r4]
   169bc:	pop	{r4, r5, r6, sl, fp, pc}
   169c0:	cmp	r4, #0
   169c4:	movne	r0, #87	; 0x57
   169c8:	strne	r0, [r4]
   169cc:	mov	r0, r6
   169d0:	pop	{r4, r5, r6, sl, fp, lr}
   169d4:	b	11a98 <mycore_free@plt>

000169d8 <mcobject_malloc@@Base>:
   169d8:	push	{r4, r5, r6, sl, fp, lr}
   169dc:	add	fp, sp, #16
   169e0:	mov	r5, r0
   169e4:	ldr	r0, [r0, #12]
   169e8:	mov	r4, r1
   169ec:	cmp	r0, #0
   169f0:	beq	16a18 <mcobject_malloc@@Base+0x40>
   169f4:	cmp	r4, #0
   169f8:	movne	r0, #0
   169fc:	strne	r0, [r4]
   16a00:	ldrne	r0, [r5, #12]
   16a04:	sub	r0, r0, #1
   16a08:	str	r0, [r5, #12]
   16a0c:	ldr	r1, [r5, #4]
   16a10:	ldr	r0, [r1, r0, lsl #2]
   16a14:	pop	{r4, r5, r6, sl, fp, pc}
   16a18:	ldr	r6, [r5]
   16a1c:	cmp	r6, #0
   16a20:	beq	16a4c <mcobject_malloc@@Base+0x74>
   16a24:	ldmib	r6, {r0, r1}
   16a28:	cmp	r0, r1
   16a2c:	bcc	16a9c <mcobject_malloc@@Base+0xc4>
   16a30:	ldr	r6, [r6, #12]
   16a34:	cmp	r6, #0
   16a38:	beq	16a4c <mcobject_malloc@@Base+0x74>
   16a3c:	mov	r0, #0
   16a40:	str	r6, [r5]
   16a44:	str	r0, [r6, #4]
   16a48:	b	16a9c <mcobject_malloc@@Base+0xc4>
   16a4c:	mov	r0, #1
   16a50:	mov	r1, #20
   16a54:	bl	11000 <mycore_calloc@plt>
   16a58:	cmp	r0, #0
   16a5c:	beq	16ac0 <mcobject_malloc@@Base+0xe8>
   16a60:	mov	r6, r0
   16a64:	ldr	r0, [r5, #16]
   16a68:	ldr	r1, [r5, #20]
   16a6c:	mul	r0, r1, r0
   16a70:	bl	119a8 <mycore_malloc@plt>
   16a74:	cmp	r0, #0
   16a78:	str	r0, [r6]
   16a7c:	beq	16ad8 <mcobject_malloc@@Base+0x100>
   16a80:	ldr	r0, [r5, #20]
   16a84:	str	r0, [r6, #8]
   16a88:	ldr	r0, [r5]
   16a8c:	cmp	r0, #0
   16a90:	strne	r0, [r6, #16]
   16a94:	strne	r6, [r0, #12]
   16a98:	str	r6, [r5]
   16a9c:	cmp	r4, #0
   16aa0:	movne	r0, #0
   16aa4:	strne	r0, [r4]
   16aa8:	ldm	r6, {r0, r1}
   16aac:	add	r2, r1, #1
   16ab0:	str	r2, [r6, #4]
   16ab4:	ldr	r2, [r5, #16]
   16ab8:	mla	r0, r2, r1, r0
   16abc:	pop	{r4, r5, r6, sl, fp, pc}
   16ac0:	mov	r1, #86	; 0x56
   16ac4:	mov	r0, #0
   16ac8:	cmp	r4, #0
   16acc:	beq	16abc <mcobject_malloc@@Base+0xe4>
   16ad0:	str	r1, [r4]
   16ad4:	pop	{r4, r5, r6, sl, fp, pc}
   16ad8:	mov	r0, r6
   16adc:	bl	11a98 <mycore_free@plt>
   16ae0:	mov	r1, #87	; 0x57
   16ae4:	mov	r0, #0
   16ae8:	cmp	r4, #0
   16aec:	bne	16ad0 <mcobject_malloc@@Base+0xf8>
   16af0:	b	16abc <mcobject_malloc@@Base+0xe4>

00016af4 <mcobject_free@@Base>:
   16af4:	push	{r4, r5, r6, sl, fp, lr}
   16af8:	add	fp, sp, #16
   16afc:	mov	r5, r1
   16b00:	ldr	r6, [r0, #8]
   16b04:	ldr	r1, [r0, #12]
   16b08:	mov	r4, r0
   16b0c:	cmp	r1, r6
   16b10:	bcs	16b1c <mcobject_free@@Base+0x28>
   16b14:	ldr	r0, [r4, #4]
   16b18:	b	16b3c <mcobject_free@@Base+0x48>
   16b1c:	ldr	r0, [r4, #4]
   16b20:	lsl	r1, r6, #3
   16b24:	bl	10d9c <mycore_realloc@plt>
   16b28:	cmp	r0, #0
   16b2c:	beq	16b50 <mcobject_free@@Base+0x5c>
   16b30:	lsl	r1, r6, #1
   16b34:	stmib	r4, {r0, r1}
   16b38:	ldr	r1, [r4, #12]
   16b3c:	str	r5, [r0, r1, lsl #2]
   16b40:	add	r0, r1, #1
   16b44:	str	r0, [r4, #12]
   16b48:	mov	r0, #0
   16b4c:	pop	{r4, r5, r6, sl, fp, pc}
   16b50:	mov	r0, #88	; 0x58
   16b54:	pop	{r4, r5, r6, sl, fp, pc}

00016b58 <mcobject_async_create@@Base>:
   16b58:	mov	r0, #1
   16b5c:	mov	r1, #72	; 0x48
   16b60:	b	11000 <mycore_calloc@plt>

00016b64 <mcobject_async_chunk_up@@Base>:
   16b64:	push	{r4, r5, fp, lr}
   16b68:	add	fp, sp, #8
   16b6c:	mov	r4, #0
   16b70:	mov	r5, r0
   16b74:	str	r4, [r0, #40]	; 0x28
   16b78:	ldr	r0, [r0, #24]
   16b7c:	ldr	r1, [r5, #32]
   16b80:	ldr	r0, [r0, r1, lsl #2]
   16b84:	cmp	r0, #0
   16b88:	beq	16b94 <mcobject_async_chunk_up@@Base+0x30>
   16b8c:	mov	r0, r4
   16b90:	pop	{r4, r5, fp, pc}
   16b94:	ldr	r0, [r5, #36]	; 0x24
   16b98:	mov	r1, #20
   16b9c:	bl	11000 <mycore_calloc@plt>
   16ba0:	ldr	r1, [r5, #24]
   16ba4:	ldr	r2, [r5, #32]
   16ba8:	str	r0, [r1, r2, lsl #2]
   16bac:	ldr	r0, [r5, #24]
   16bb0:	ldr	r0, [r0, r2, lsl #2]
   16bb4:	cmp	r0, #0
   16bb8:	moveq	r4, #2
   16bbc:	mov	r0, r4
   16bc0:	pop	{r4, r5, fp, pc}

00016bc4 <mcobject_async_init@@Base>:
   16bc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16bc8:	add	fp, sp, #24
   16bcc:	mov	r4, r0
   16bd0:	mov	r0, #128	; 0x80
   16bd4:	mov	r5, #0
   16bd8:	str	r0, [r4, #28]
   16bdc:	add	r0, r3, #4
   16be0:	str	r5, [r4, #32]
   16be4:	str	r1, [r4, #36]	; 0x24
   16be8:	stm	r4, {r2, r3}
   16bec:	mov	r1, #4
   16bf0:	str	r0, [r4, #8]
   16bf4:	mov	r0, #128	; 0x80
   16bf8:	bl	11000 <mycore_calloc@plt>
   16bfc:	cmp	r0, #0
   16c00:	str	r0, [r4, #24]
   16c04:	beq	16d34 <mcobject_async_init@@Base+0x170>
   16c08:	str	r5, [r4, #40]	; 0x28
   16c0c:	ldr	r1, [r4, #32]
   16c10:	ldr	r0, [r0, r1, lsl #2]
   16c14:	cmp	r0, #0
   16c18:	bne	16c34 <mcobject_async_init@@Base+0x70>
   16c1c:	ldr	r0, [r4, #36]	; 0x24
   16c20:	mov	r1, #20
   16c24:	bl	11000 <mycore_calloc@plt>
   16c28:	ldr	r1, [r4, #24]
   16c2c:	ldr	r2, [r4, #32]
   16c30:	str	r0, [r1, r2, lsl #2]
   16c34:	ldr	r0, [r4, #36]	; 0x24
   16c38:	mov	r1, #4
   16c3c:	mov	r5, #4
   16c40:	str	r0, [r4, #16]
   16c44:	bl	11000 <mycore_calloc@plt>
   16c48:	cmp	r0, #0
   16c4c:	str	r0, [r4, #12]
   16c50:	beq	16d40 <mcobject_async_init@@Base+0x17c>
   16c54:	mov	r6, #0
   16c58:	mov	r0, #64	; 0x40
   16c5c:	mov	r1, #16
   16c60:	str	r6, [r4, #48]	; 0x30
   16c64:	str	r0, [r4, #52]	; 0x34
   16c68:	mov	r0, #64	; 0x40
   16c6c:	bl	11000 <mycore_calloc@plt>
   16c70:	cmp	r0, #0
   16c74:	str	r0, [r4, #44]	; 0x2c
   16c78:	beq	16d6c <mcobject_async_init@@Base+0x1a8>
   16c7c:	ldr	r0, [r4, #52]	; 0x34
   16c80:	str	r6, [r4, #60]	; 0x3c
   16c84:	str	r0, [r4, #64]	; 0x40
   16c88:	lsl	r0, r0, #2
   16c8c:	bl	119a8 <mycore_malloc@plt>
   16c90:	cmp	r0, #0
   16c94:	str	r0, [r4, #56]	; 0x38
   16c98:	beq	16d6c <mcobject_async_init@@Base+0x1a8>
   16c9c:	ldr	r1, [r4, #24]
   16ca0:	ldr	r0, [r4, #48]	; 0x30
   16ca4:	mov	r8, #0
   16ca8:	ldr	r1, [r1]
   16cac:	str	r8, [r4, #40]	; 0x28
   16cb0:	str	r8, [r4, #20]
   16cb4:	cmp	r1, #0
   16cb8:	movwne	r1, #1
   16cbc:	cmp	r0, #0
   16cc0:	str	r1, [r4, #32]
   16cc4:	beq	16d4c <mcobject_async_init@@Base+0x188>
   16cc8:	mov	r7, #0
   16ccc:	b	16ce4 <mcobject_async_init@@Base+0x120>
   16cd0:	str	r6, [r5, r7, lsl #4]
   16cd4:	ldr	r0, [r4, #48]	; 0x30
   16cd8:	add	r7, r7, #1
   16cdc:	cmp	r7, r0
   16ce0:	bcs	16d4c <mcobject_async_init@@Base+0x188>
   16ce4:	ldr	r5, [r4, #44]	; 0x2c
   16ce8:	mov	r1, r5
   16cec:	ldr	r2, [r1, r7, lsl #4]!
   16cf0:	str	r8, [r1, #12]
   16cf4:	cmp	r2, #0
   16cf8:	beq	16cd8 <mcobject_async_init@@Base+0x114>
   16cfc:	ldr	r0, [r4, #68]	; 0x44
   16d00:	ldr	r9, [r4]
   16d04:	bl	11690 <mcsync_lock@plt>
   16d08:	mov	r6, #0
   16d0c:	cmp	r0, #0
   16d10:	bne	16cd0 <mcobject_async_init@@Base+0x10c>
   16d14:	mov	r0, r4
   16d18:	mov	r1, r9
   16d1c:	mov	r2, #0
   16d20:	bl	116fc <mcobject_async_chunk_malloc_without_lock@plt>
   16d24:	mov	r6, r0
   16d28:	ldr	r0, [r4, #68]	; 0x44
   16d2c:	bl	11b40 <mcsync_unlock@plt>
   16d30:	b	16cd0 <mcobject_async_init@@Base+0x10c>
   16d34:	mov	r5, #2
   16d38:	mov	r0, r5
   16d3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16d40:	mov	r5, #3
   16d44:	mov	r0, r5
   16d48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16d4c:	bl	10ef8 <mcsync_create@plt>
   16d50:	cmp	r0, #0
   16d54:	str	r0, [r4, #68]	; 0x44
   16d58:	beq	16d74 <mcobject_async_init@@Base+0x1b0>
   16d5c:	bl	1169c <mcsync_init@plt>
   16d60:	cmp	r0, #0
   16d64:	mov	r5, r0
   16d68:	movwne	r5, #1
   16d6c:	mov	r0, r5
   16d70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16d74:	mov	r5, #1
   16d78:	mov	r0, r5
   16d7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016d80 <mcobject_async_clean@@Base>:
   16d80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16d84:	add	fp, sp, #24
   16d88:	ldr	r1, [r0, #24]
   16d8c:	mov	r4, r0
   16d90:	ldr	r0, [r0, #48]	; 0x30
   16d94:	mov	r8, #0
   16d98:	ldr	r1, [r1]
   16d9c:	str	r8, [r4, #40]	; 0x28
   16da0:	str	r8, [r4, #20]
   16da4:	cmp	r1, #0
   16da8:	movwne	r1, #1
   16dac:	cmp	r0, #0
   16db0:	str	r1, [r4, #32]
   16db4:	beq	16e24 <mcobject_async_clean@@Base+0xa4>
   16db8:	mov	r7, #0
   16dbc:	b	16dd4 <mcobject_async_clean@@Base+0x54>
   16dc0:	str	r6, [r5, r7, lsl #4]
   16dc4:	ldr	r0, [r4, #48]	; 0x30
   16dc8:	add	r7, r7, #1
   16dcc:	cmp	r7, r0
   16dd0:	bcs	16e24 <mcobject_async_clean@@Base+0xa4>
   16dd4:	ldr	r5, [r4, #44]	; 0x2c
   16dd8:	mov	r1, r5
   16ddc:	ldr	r2, [r1, r7, lsl #4]!
   16de0:	str	r8, [r1, #12]
   16de4:	cmp	r2, #0
   16de8:	beq	16dc8 <mcobject_async_clean@@Base+0x48>
   16dec:	ldr	r0, [r4, #68]	; 0x44
   16df0:	ldr	r9, [r4]
   16df4:	bl	11690 <mcsync_lock@plt>
   16df8:	mov	r6, #0
   16dfc:	cmp	r0, #0
   16e00:	bne	16dc0 <mcobject_async_clean@@Base+0x40>
   16e04:	mov	r0, r4
   16e08:	mov	r1, r9
   16e0c:	mov	r2, #0
   16e10:	bl	116fc <mcobject_async_chunk_malloc_without_lock@plt>
   16e14:	mov	r6, r0
   16e18:	ldr	r0, [r4, #68]	; 0x44
   16e1c:	bl	11b40 <mcsync_unlock@plt>
   16e20:	b	16dc0 <mcobject_async_clean@@Base+0x40>
   16e24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016e28 <mcobject_async_chunk_malloc@@Base>:
   16e28:	push	{r4, r5, r6, sl, fp, lr}
   16e2c:	add	fp, sp, #16
   16e30:	mov	r5, r0
   16e34:	ldr	r0, [r0, #68]	; 0x44
   16e38:	mov	r4, r2
   16e3c:	mov	r6, r1
   16e40:	bl	11690 <mcsync_lock@plt>
   16e44:	cmp	r0, #0
   16e48:	beq	16e60 <mcobject_async_chunk_malloc@@Base+0x38>
   16e4c:	cmp	r4, #0
   16e50:	movne	r0, #1
   16e54:	strne	r0, [r4]
   16e58:	mov	r0, #0
   16e5c:	pop	{r4, r5, r6, sl, fp, pc}
   16e60:	mov	r0, r5
   16e64:	mov	r1, r6
   16e68:	mov	r2, r4
   16e6c:	bl	116fc <mcobject_async_chunk_malloc_without_lock@plt>
   16e70:	mov	r4, r0
   16e74:	ldr	r0, [r5, #68]	; 0x44
   16e78:	bl	11b40 <mcsync_unlock@plt>
   16e7c:	mov	r0, r4
   16e80:	pop	{r4, r5, r6, sl, fp, pc}

00016e84 <mcobject_async_destroy@@Base>:
   16e84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e88:	add	fp, sp, #24
   16e8c:	cmp	r0, #0
   16e90:	beq	16ef4 <mcobject_async_destroy@@Base+0x70>
   16e94:	mov	r4, r0
   16e98:	ldr	r0, [r0, #44]	; 0x2c
   16e9c:	mov	r8, r1
   16ea0:	cmp	r0, #0
   16ea4:	beq	16f08 <mcobject_async_destroy@@Base+0x84>
   16ea8:	ldr	r1, [r4, #48]	; 0x30
   16eac:	cmp	r1, #0
   16eb0:	beq	16f04 <mcobject_async_destroy@@Base+0x80>
   16eb4:	mov	r5, #0
   16eb8:	add	r0, r0, r5, lsl #4
   16ebc:	ldr	r0, [r0, #4]
   16ec0:	cmp	r0, #0
   16ec4:	beq	16ed0 <mcobject_async_destroy@@Base+0x4c>
   16ec8:	bl	11a98 <mycore_free@plt>
   16ecc:	ldr	r1, [r4, #48]	; 0x30
   16ed0:	add	r5, r5, #1
   16ed4:	cmp	r5, r1
   16ed8:	bcs	16f00 <mcobject_async_destroy@@Base+0x7c>
   16edc:	ldr	r0, [r4, #44]	; 0x2c
   16ee0:	add	r0, r0, r5, lsl #4
   16ee4:	ldr	r0, [r0, #4]
   16ee8:	cmp	r0, #0
   16eec:	bne	16ec8 <mcobject_async_destroy@@Base+0x44>
   16ef0:	b	16ed0 <mcobject_async_destroy@@Base+0x4c>
   16ef4:	mov	r6, #0
   16ef8:	mov	r0, r6
   16efc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f00:	ldr	r0, [r4, #44]	; 0x2c
   16f04:	bl	11a98 <mycore_free@plt>
   16f08:	ldr	r0, [r4, #56]	; 0x38
   16f0c:	cmp	r0, #0
   16f10:	beq	16f18 <mcobject_async_destroy@@Base+0x94>
   16f14:	bl	11a98 <mycore_free@plt>
   16f18:	ldr	r0, [r4, #24]
   16f1c:	cmp	r0, #0
   16f20:	beq	16fd4 <mcobject_async_destroy@@Base+0x150>
   16f24:	ldr	r2, [r4, #32]
   16f28:	cmp	r2, #0
   16f2c:	beq	16fd0 <mcobject_async_destroy@@Base+0x14c>
   16f30:	mov	r6, #0
   16f34:	mov	r1, r0
   16f38:	ldr	r3, [r1, r6, lsl #2]!
   16f3c:	cmp	r3, #0
   16f40:	beq	16fa8 <mcobject_async_destroy@@Base+0x124>
   16f44:	ldr	r2, [r4, #36]	; 0x24
   16f48:	cmp	r2, #0
   16f4c:	beq	16f9c <mcobject_async_destroy@@Base+0x118>
   16f50:	mov	r7, #1
   16f54:	mov	r5, #0
   16f58:	ldr	r1, [r3, r5]
   16f5c:	cmp	r1, #0
   16f60:	beq	16f74 <mcobject_async_destroy@@Base+0xf0>
   16f64:	mov	r0, r1
   16f68:	bl	11a98 <mycore_free@plt>
   16f6c:	ldr	r0, [r4, #24]
   16f70:	ldr	r2, [r4, #36]	; 0x24
   16f74:	add	r1, r0, r6, lsl #2
   16f78:	cmp	r7, r2
   16f7c:	bcs	16f9c <mcobject_async_destroy@@Base+0x118>
   16f80:	ldr	r3, [r1]
   16f84:	add	r5, r5, #20
   16f88:	add	r7, r7, #1
   16f8c:	ldr	r1, [r3, r5]
   16f90:	cmp	r1, #0
   16f94:	bne	16f64 <mcobject_async_destroy@@Base+0xe0>
   16f98:	b	16f74 <mcobject_async_destroy@@Base+0xf0>
   16f9c:	ldr	r0, [r1]
   16fa0:	bl	11a98 <mycore_free@plt>
   16fa4:	ldr	r2, [r4, #32]
   16fa8:	add	r6, r6, #1
   16fac:	cmp	r6, r2
   16fb0:	bcs	16fcc <mcobject_async_destroy@@Base+0x148>
   16fb4:	ldr	r0, [r4, #24]
   16fb8:	mov	r1, r0
   16fbc:	ldr	r3, [r1, r6, lsl #2]!
   16fc0:	cmp	r3, #0
   16fc4:	bne	16f44 <mcobject_async_destroy@@Base+0xc0>
   16fc8:	b	16fa8 <mcobject_async_destroy@@Base+0x124>
   16fcc:	ldr	r0, [r4, #24]
   16fd0:	bl	11a98 <mycore_free@plt>
   16fd4:	ldr	r0, [r4, #12]
   16fd8:	cmp	r0, #0
   16fdc:	beq	16fe4 <mcobject_async_destroy@@Base+0x160>
   16fe0:	bl	11a98 <mycore_free@plt>
   16fe4:	ldr	r0, [r4, #68]	; 0x44
   16fe8:	mov	r1, #1
   16fec:	bl	111ec <mcsync_destroy@plt>
   16ff0:	vmov.i32	q8, #0	; 0x00000000
   16ff4:	add	r0, r4, #16
   16ff8:	mov	r1, r4
   16ffc:	mov	r6, #0
   17000:	cmp	r8, #0
   17004:	str	r6, [r4, #68]	; 0x44
   17008:	vst1.32	{d16-d17}, [r0]
   1700c:	add	r0, r4, #32
   17010:	vst1.32	{d16-d17}, [r0]
   17014:	add	r0, r4, #48	; 0x30
   17018:	vst1.32	{d16-d17}, [r0]
   1701c:	mov	r0, #64	; 0x40
   17020:	vst1.32	{d16-d17}, [r1], r0
   17024:	str	r6, [r1]
   17028:	beq	1703c <mcobject_async_destroy@@Base+0x1b8>
   1702c:	mov	r0, r4
   17030:	bl	11a98 <mycore_free@plt>
   17034:	mov	r0, r6
   17038:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1703c:	mov	r0, r4
   17040:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017044 <mcobject_async_mem_malloc@@Base>:
   17044:	push	{r4, r5, r6, sl, fp, lr}
   17048:	add	fp, sp, #16
   1704c:	mov	r5, r0
   17050:	ldr	r0, [r1]
   17054:	mov	r6, r2
   17058:	mov	r4, r1
   1705c:	cmp	r0, #0
   17060:	beq	17088 <mcobject_async_mem_malloc@@Base+0x44>
   17064:	ldr	r1, [r4, #8]
   17068:	cmp	r1, r6
   1706c:	bcs	170a8 <mcobject_async_mem_malloc@@Base+0x64>
   17070:	bl	11a98 <mycore_free@plt>
   17074:	ldr	r0, [r5]
   17078:	add	r1, r0, r6
   1707c:	str	r1, [r4, #8]
   17080:	ldr	r0, [r5, #8]
   17084:	b	1709c <mcobject_async_mem_malloc@@Base+0x58>
   17088:	ldr	r0, [r5]
   1708c:	cmp	r0, r6
   17090:	addcc	r0, r0, r6
   17094:	str	r0, [r4, #8]
   17098:	ldr	r1, [r5, #8]
   1709c:	mul	r0, r0, r1
   170a0:	bl	119a8 <mycore_malloc@plt>
   170a4:	str	r0, [r4]
   170a8:	clz	r0, r0
   170ac:	mov	r1, #0
   170b0:	lsr	r0, r0, #5
   170b4:	str	r1, [r4, #4]
   170b8:	lsl	r0, r0, #1
   170bc:	pop	{r4, r5, r6, sl, fp, pc}

000170c0 <mcobject_async_chunk_malloc_without_lock@@Base>:
   170c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170c4:	add	fp, sp, #28
   170c8:	sub	sp, sp, #4
   170cc:	cmp	r2, #0
   170d0:	mov	r5, r0
   170d4:	mov	r9, r2
   170d8:	mov	r8, r1
   170dc:	movne	r0, #0
   170e0:	strne	r0, [r9]
   170e4:	ldr	r0, [r5, #20]
   170e8:	cmp	r0, #0
   170ec:	beq	17124 <mcobject_async_chunk_malloc_without_lock@@Base+0x64>
   170f0:	sub	r0, r0, #1
   170f4:	mov	r3, #0
   170f8:	str	r0, [r5, #20]
   170fc:	ldr	r1, [r5, #12]
   17100:	ldr	r2, [r1, r0, lsl #2]
   17104:	str	r3, [r2, #12]
   17108:	str	r3, [r2, #4]
   1710c:	ldr	r2, [r1, r0, lsl #2]
   17110:	str	r3, [r2, #16]
   17114:	ldr	r7, [r1, r0, lsl #2]
   17118:	mov	r0, r7
   1711c:	sub	sp, fp, #28
   17120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17124:	ldr	r1, [r5, #36]	; 0x24
   17128:	ldr	r0, [r5, #40]	; 0x28
   1712c:	cmp	r0, r1
   17130:	bcs	17140 <mcobject_async_chunk_malloc_without_lock@@Base+0x80>
   17134:	ldr	r7, [r5, #24]
   17138:	ldr	r1, [r5, #32]
   1713c:	b	171e0 <mcobject_async_chunk_malloc_without_lock@@Base+0x120>
   17140:	ldr	r4, [r5, #28]
   17144:	ldr	r1, [r5, #32]
   17148:	cmp	r1, r4
   1714c:	bcs	17158 <mcobject_async_chunk_malloc_without_lock@@Base+0x98>
   17150:	ldr	r7, [r5, #24]
   17154:	b	17198 <mcobject_async_chunk_malloc_without_lock@@Base+0xd8>
   17158:	ldr	r0, [r5, #24]
   1715c:	lsl	r1, r4, #3
   17160:	bl	10d9c <mycore_realloc@plt>
   17164:	cmp	r0, #0
   17168:	beq	1728c <mcobject_async_chunk_malloc_without_lock@@Base+0x1cc>
   1716c:	ldr	r1, [r5, #32]
   17170:	lsl	r4, r4, #1
   17174:	mov	r7, r0
   17178:	add	r0, r0, r1, lsl #2
   1717c:	sub	r1, r4, r1
   17180:	lsl	r2, r1, #2
   17184:	mov	r1, #0
   17188:	bl	116cc <memset@plt>
   1718c:	str	r7, [r5, #24]
   17190:	str	r4, [r5, #28]
   17194:	ldr	r1, [r5, #32]
   17198:	mov	r0, #0
   1719c:	str	r0, [r5, #40]	; 0x28
   171a0:	ldr	r2, [r7, r1, lsl #2]
   171a4:	cmp	r2, #0
   171a8:	bne	171d8 <mcobject_async_chunk_malloc_without_lock@@Base+0x118>
   171ac:	ldr	r0, [r5, #36]	; 0x24
   171b0:	mov	r1, #20
   171b4:	bl	11000 <mycore_calloc@plt>
   171b8:	ldr	r2, [r5, #24]
   171bc:	ldr	r1, [r5, #32]
   171c0:	str	r0, [r2, r1, lsl #2]
   171c4:	ldr	r7, [r5, #24]
   171c8:	ldr	r0, [r7, r1, lsl #2]
   171cc:	cmp	r0, #0
   171d0:	beq	1728c <mcobject_async_chunk_malloc_without_lock@@Base+0x1cc>
   171d4:	ldr	r0, [r5, #40]	; 0x28
   171d8:	add	r1, r1, #1
   171dc:	str	r1, [r5, #32]
   171e0:	add	r1, r7, r1, lsl #2
   171e4:	add	r4, r0, r0, lsl #2
   171e8:	ldr	sl, [r1, #-4]
   171ec:	add	r1, r0, #1
   171f0:	str	r1, [r5, #40]	; 0x28
   171f4:	mov	r1, #0
   171f8:	mov	r7, sl
   171fc:	ldr	r0, [r7, r4, lsl #2]!
   17200:	str	r1, [r7, #12]
   17204:	str	r1, [r7, #16]
   17208:	cmp	r0, #0
   1720c:	beq	17238 <mcobject_async_chunk_malloc_without_lock@@Base+0x178>
   17210:	add	r6, sl, r4, lsl #2
   17214:	ldr	r1, [r6, #8]!
   17218:	cmp	r1, r8
   1721c:	bcs	1725c <mcobject_async_chunk_malloc_without_lock@@Base+0x19c>
   17220:	bl	11a98 <mycore_free@plt>
   17224:	ldr	r0, [r5]
   17228:	add	r1, r0, r8
   1722c:	str	r1, [r6]
   17230:	ldr	r0, [r5, #8]
   17234:	b	17250 <mcobject_async_chunk_malloc_without_lock@@Base+0x190>
   17238:	ldr	r0, [r5]
   1723c:	add	r1, sl, r4, lsl #2
   17240:	cmp	r0, r8
   17244:	addcc	r0, r0, r8
   17248:	str	r0, [r1, #8]
   1724c:	ldr	r1, [r5, #8]
   17250:	mul	r0, r0, r1
   17254:	bl	119a8 <mycore_malloc@plt>
   17258:	str	r0, [r7]
   1725c:	add	r1, sl, r4, lsl #2
   17260:	mov	r2, #0
   17264:	cmp	r9, #0
   17268:	str	r2, [r1, #4]
   1726c:	beq	17280 <mcobject_async_chunk_malloc_without_lock@@Base+0x1c0>
   17270:	clz	r0, r0
   17274:	lsr	r0, r0, #5
   17278:	lsl	r0, r0, #1
   1727c:	str	r0, [r9]
   17280:	mov	r0, r7
   17284:	sub	sp, fp, #28
   17288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1728c:	mov	r7, #0
   17290:	cmp	r9, #0
   17294:	beq	17280 <mcobject_async_chunk_malloc_without_lock@@Base+0x1c0>
   17298:	mov	r0, #2
   1729c:	b	1727c <mcobject_async_chunk_malloc_without_lock@@Base+0x1bc>

000172a0 <mcobject_async_node_add@@Base>:
   172a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   172a4:	add	fp, sp, #24
   172a8:	mov	r4, r0
   172ac:	ldr	r0, [r0, #68]	; 0x44
   172b0:	mov	r5, r1
   172b4:	bl	11690 <mcsync_lock@plt>
   172b8:	cmp	r5, #0
   172bc:	movne	r0, #0
   172c0:	strne	r0, [r5]
   172c4:	ldr	r0, [r4, #60]	; 0x3c
   172c8:	cmp	r0, #0
   172cc:	beq	172e4 <mcobject_async_node_add@@Base+0x44>
   172d0:	sub	r0, r0, #1
   172d4:	str	r0, [r4, #60]	; 0x3c
   172d8:	ldr	r1, [r4, #56]	; 0x38
   172dc:	ldr	r8, [r1, r0, lsl #2]
   172e0:	b	17300 <mcobject_async_node_add@@Base+0x60>
   172e4:	ldr	r8, [r4, #48]	; 0x30
   172e8:	ldr	r0, [r4, #52]	; 0x34
   172ec:	mov	r6, #0
   172f0:	cmp	r8, r0
   172f4:	bcs	17378 <mcobject_async_node_add@@Base+0xd8>
   172f8:	add	r0, r8, #1
   172fc:	str	r0, [r4, #48]	; 0x30
   17300:	ldr	r1, [r4]
   17304:	ldr	r7, [r4, #44]	; 0x2c
   17308:	mov	r0, r4
   1730c:	mov	r2, r5
   17310:	bl	116fc <mcobject_async_chunk_malloc_without_lock@plt>
   17314:	cmp	r5, #0
   17318:	str	r0, [r7, r8, lsl #4]
   1731c:	beq	17330 <mcobject_async_node_add@@Base+0x90>
   17320:	ldr	r1, [r5]
   17324:	mov	r6, #0
   17328:	cmp	r1, #0
   1732c:	bne	17378 <mcobject_async_node_add@@Base+0xd8>
   17330:	add	r7, r7, r8, lsl #4
   17334:	mov	r1, #0
   17338:	str	r1, [r0, #12]
   1733c:	str	r1, [r0, #16]
   17340:	str	r1, [r7, #12]
   17344:	ldr	r0, [r4]
   17348:	str	r0, [r7, #8]
   1734c:	lsl	r0, r0, #2
   17350:	bl	119a8 <mycore_malloc@plt>
   17354:	cmp	r0, #0
   17358:	mov	r6, r0
   1735c:	str	r0, [r7, #4]
   17360:	movne	r6, r8
   17364:	bne	17378 <mcobject_async_node_add@@Base+0xd8>
   17368:	cmp	r5, #0
   1736c:	movne	r0, #3
   17370:	movne	r6, #0
   17374:	strne	r0, [r5]
   17378:	ldr	r0, [r4, #68]	; 0x44
   1737c:	bl	11b40 <mcsync_unlock@plt>
   17380:	mov	r0, r6
   17384:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017388 <mcobject_async_node_clean@@Base>:
   17388:	ldr	r2, [r0, #48]	; 0x30
   1738c:	cmp	r2, r1
   17390:	bls	173dc <mcobject_async_node_clean@@Base+0x54>
   17394:	ldr	ip, [r0, #44]	; 0x2c
   17398:	mov	r3, #0
   1739c:	mov	r0, ip
   173a0:	ldr	r2, [r0, r1, lsl #4]!
   173a4:	str	r3, [r0, #12]!
   173a8:	cmp	r2, #0
   173ac:	bxeq	lr
   173b0:	ldr	r3, [r2, #16]
   173b4:	cmp	r3, #0
   173b8:	beq	173d0 <mcobject_async_node_clean@@Base+0x48>
   173bc:	mov	r2, r3
   173c0:	ldr	r3, [r3, #16]
   173c4:	cmp	r3, #0
   173c8:	bne	173bc <mcobject_async_node_clean@@Base+0x34>
   173cc:	str	r2, [ip, r1, lsl #4]
   173d0:	mov	r1, #0
   173d4:	str	r1, [r2, #4]
   173d8:	str	r1, [r0]
   173dc:	bx	lr

000173e0 <mcobject_async_node_all_clean@@Base>:
   173e0:	push	{r4, sl, fp, lr}
   173e4:	add	fp, sp, #8
   173e8:	ldr	ip, [r0, #48]	; 0x30
   173ec:	cmp	ip, #0
   173f0:	popeq	{r4, sl, fp, pc}
   173f4:	ldr	r1, [r0, #44]	; 0x2c
   173f8:	mov	lr, #0
   173fc:	mov	r3, #0
   17400:	b	17418 <mcobject_async_node_all_clean@@Base+0x38>
   17404:	str	lr, [r2, #4]
   17408:	str	lr, [r0]
   1740c:	add	r3, r3, #1
   17410:	cmp	r3, ip
   17414:	bcs	17450 <mcobject_async_node_all_clean@@Base+0x70>
   17418:	mov	r0, r1
   1741c:	ldr	r2, [r0, r3, lsl #4]!
   17420:	str	lr, [r0, #12]!
   17424:	cmp	r2, #0
   17428:	beq	1740c <mcobject_async_node_all_clean@@Base+0x2c>
   1742c:	ldr	r4, [r2, #16]
   17430:	cmp	r4, #0
   17434:	beq	17404 <mcobject_async_node_all_clean@@Base+0x24>
   17438:	mov	r2, r4
   1743c:	ldr	r4, [r4, #16]
   17440:	cmp	r4, #0
   17444:	bne	17438 <mcobject_async_node_all_clean@@Base+0x58>
   17448:	str	r2, [r1, r3, lsl #4]
   1744c:	b	17404 <mcobject_async_node_all_clean@@Base+0x24>
   17450:	pop	{r4, sl, fp, pc}

00017454 <mcobject_async_node_delete@@Base>:
   17454:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17458:	add	fp, sp, #24
   1745c:	mov	r4, r0
   17460:	ldr	r0, [r0, #68]	; 0x44
   17464:	mov	r5, r1
   17468:	bl	11690 <mcsync_lock@plt>
   1746c:	ldr	r0, [r4, #48]	; 0x30
   17470:	cmp	r0, r5
   17474:	bls	1755c <mcobject_async_node_delete@@Base+0x108>
   17478:	ldr	r8, [r4, #44]	; 0x2c
   1747c:	mov	r9, r8
   17480:	ldr	r0, [r9, r5, lsl #4]!
   17484:	mov	r7, r0
   17488:	ldr	r0, [r0, #12]
   1748c:	cmp	r0, #0
   17490:	bne	17484 <mcobject_async_node_delete@@Base+0x30>
   17494:	cmp	r7, #0
   17498:	beq	174fc <mcobject_async_node_delete@@Base+0xa8>
   1749c:	ldr	r1, [r4, #20]
   174a0:	ldr	r6, [r4, #16]
   174a4:	cmp	r1, r6
   174a8:	bcs	174d4 <mcobject_async_node_delete@@Base+0x80>
   174ac:	ldr	r0, [r4, #12]
   174b0:	str	r7, [r0, r1, lsl #2]
   174b4:	add	r1, r1, #1
   174b8:	str	r1, [r4, #20]
   174bc:	ldr	r7, [r7, #16]
   174c0:	cmp	r7, #0
   174c4:	beq	174fc <mcobject_async_node_delete@@Base+0xa8>
   174c8:	ldr	r6, [r4, #16]
   174cc:	cmp	r1, r6
   174d0:	bcc	174ac <mcobject_async_node_delete@@Base+0x58>
   174d4:	ldr	r0, [r4, #12]
   174d8:	lsl	r1, r6, #3
   174dc:	bl	10d9c <mycore_realloc@plt>
   174e0:	cmp	r0, #0
   174e4:	beq	1755c <mcobject_async_node_delete@@Base+0x108>
   174e8:	lsl	r1, r6, #1
   174ec:	str	r0, [r4, #12]
   174f0:	str	r1, [r4, #16]
   174f4:	ldr	r1, [r4, #20]
   174f8:	b	174b0 <mcobject_async_node_delete@@Base+0x5c>
   174fc:	add	r0, r8, r5, lsl #4
   17500:	ldr	r0, [r0, #4]
   17504:	cmp	r0, #0
   17508:	beq	17510 <mcobject_async_node_delete@@Base+0xbc>
   1750c:	bl	11a98 <mycore_free@plt>
   17510:	vmov.i32	q8, #0	; 0x00000000
   17514:	vst1.32	{d16-d17}, [r9]
   17518:	ldr	r0, [r4, #60]	; 0x3c
   1751c:	ldr	r6, [r4, #64]	; 0x40
   17520:	cmp	r0, r6
   17524:	bcc	17544 <mcobject_async_node_delete@@Base+0xf0>
   17528:	ldr	r0, [r4, #56]	; 0x38
   1752c:	lsl	r1, r6, #2
   17530:	bl	10d9c <mycore_realloc@plt>
   17534:	cmp	r0, #0
   17538:	strne	r0, [r4, #56]	; 0x38
   1753c:	lslne	r0, r6, #1
   17540:	strne	r0, [r4, #64]	; 0x40
   17544:	ldr	r0, [r4, #56]	; 0x38
   17548:	ldr	r1, [r4, #60]	; 0x3c
   1754c:	str	r5, [r0, r1, lsl #2]
   17550:	ldr	r0, [r4, #60]	; 0x3c
   17554:	add	r0, r0, #1
   17558:	str	r0, [r4, #60]	; 0x3c
   1755c:	ldr	r0, [r4, #68]	; 0x44
   17560:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17564:	b	11b40 <mcsync_unlock@plt>

00017568 <mcobject_async_malloc@@Base>:
   17568:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1756c:	add	fp, sp, #24
   17570:	sub	sp, sp, #8
   17574:	ldr	r7, [r0, #44]	; 0x2c
   17578:	mov	r6, r0
   1757c:	mov	r5, r1
   17580:	mov	r4, r2
   17584:	add	r0, r7, r1, lsl #4
   17588:	mov	r1, r0
   1758c:	ldr	r2, [r1, #12]!
   17590:	cmp	r2, #0
   17594:	beq	175c0 <mcobject_async_malloc@@Base+0x58>
   17598:	cmp	r4, #0
   1759c:	movne	r2, #0
   175a0:	strne	r2, [r4]
   175a4:	ldrne	r2, [r1]
   175a8:	sub	r2, r2, #1
   175ac:	str	r2, [r1]
   175b0:	ldr	r0, [r0, #4]
   175b4:	ldr	r0, [r0, r2, lsl #2]
   175b8:	sub	sp, fp, #24
   175bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   175c0:	ldr	r0, [r7, r5, lsl #4]
   175c4:	ldmib	r0, {r1, r2}
   175c8:	cmp	r1, r2
   175cc:	bcc	175e8 <mcobject_async_malloc@@Base+0x80>
   175d0:	ldr	r0, [r0, #12]
   175d4:	cmp	r0, #0
   175d8:	beq	17620 <mcobject_async_malloc@@Base+0xb8>
   175dc:	mov	r1, #0
   175e0:	str	r0, [r7, r5, lsl #4]
   175e4:	str	r1, [r0, #4]
   175e8:	cmp	r4, #0
   175ec:	movne	r0, #0
   175f0:	strne	r0, [r4]
   175f4:	ldr	r0, [r7, r5, lsl #4]
   175f8:	ldr	r3, [r6, #8]
   175fc:	ldm	r0, {r1, r2}
   17600:	mul	r2, r3, r2
   17604:	str	r5, [r1, r2]!
   17608:	ldr	r2, [r0, #4]
   1760c:	add	r2, r2, #1
   17610:	str	r2, [r0, #4]
   17614:	add	r0, r1, #4
   17618:	sub	sp, fp, #24
   1761c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17620:	ldr	r0, [r6, #68]	; 0x44
   17624:	ldr	r8, [r6]
   17628:	bl	11690 <mcsync_lock@plt>
   1762c:	cmp	r0, #0
   17630:	beq	17640 <mcobject_async_malloc@@Base+0xd8>
   17634:	mov	r0, #1
   17638:	str	r0, [sp, #4]
   1763c:	b	17668 <mcobject_async_malloc@@Base+0x100>
   17640:	add	r2, sp, #4
   17644:	mov	r0, r6
   17648:	mov	r1, r8
   1764c:	bl	116fc <mcobject_async_chunk_malloc_without_lock@plt>
   17650:	mov	r8, r0
   17654:	ldr	r0, [r6, #68]	; 0x44
   17658:	bl	11b40 <mcsync_unlock@plt>
   1765c:	ldr	r0, [sp, #4]
   17660:	cmp	r0, #0
   17664:	beq	1767c <mcobject_async_malloc@@Base+0x114>
   17668:	cmp	r4, #0
   1766c:	strne	r0, [r4]
   17670:	mov	r0, #0
   17674:	sub	sp, fp, #24
   17678:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1767c:	ldr	r0, [r7, r5, lsl #4]
   17680:	str	r0, [r8, #16]
   17684:	str	r8, [r0, #12]
   17688:	str	r8, [r7, r5, lsl #4]
   1768c:	b	175e8 <mcobject_async_malloc@@Base+0x80>

00017690 <mcobject_async_free@@Base>:
   17690:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17694:	add	fp, sp, #24
   17698:	mov	r4, r1
   1769c:	ldr	r3, [r0, #48]	; 0x30
   176a0:	mov	r1, r0
   176a4:	mov	r0, #5
   176a8:	ldr	r2, [r4, #-4]
   176ac:	cmp	r2, r3
   176b0:	bcs	17710 <mcobject_async_free@@Base+0x80>
   176b4:	ldr	r0, [r1, #44]	; 0x2c
   176b8:	add	r5, r0, r2, lsl #4
   176bc:	ldr	r1, [r5, #12]!
   176c0:	mov	r7, r5
   176c4:	sub	r8, r5, #8
   176c8:	ldr	r6, [r7, #-4]!
   176cc:	cmp	r1, r6
   176d0:	bcs	176dc <mcobject_async_free@@Base+0x4c>
   176d4:	ldr	r0, [r8]
   176d8:	b	17700 <mcobject_async_free@@Base+0x70>
   176dc:	ldr	r0, [r8]
   176e0:	lsl	r1, r6, #3
   176e4:	bl	10d9c <mycore_realloc@plt>
   176e8:	cmp	r0, #0
   176ec:	beq	17714 <mcobject_async_free@@Base+0x84>
   176f0:	lsl	r1, r6, #1
   176f4:	str	r0, [r8]
   176f8:	str	r1, [r7]
   176fc:	ldr	r1, [r5]
   17700:	str	r4, [r0, r1, lsl #2]
   17704:	add	r0, r1, #1
   17708:	str	r0, [r5]
   1770c:	mov	r0, #0
   17710:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17714:	mov	r0, #6
   17718:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001771c <mcsimple_create@@Base>:
   1771c:	mov	r0, #1
   17720:	mov	r1, #28
   17724:	b	11000 <mycore_calloc@plt>

00017728 <mcsimple_init@@Base>:
   17728:	push	{r4, r5, r6, sl, fp, lr}
   1772c:	add	fp, sp, #16
   17730:	mov	r4, r0
   17734:	mov	r0, #0
   17738:	mov	r5, r3
   1773c:	mov	r6, r2
   17740:	str	r3, [r4]
   17744:	str	r1, [r4, #8]
   17748:	str	r0, [r4, #12]
   1774c:	str	r0, [r4, #16]
   17750:	mov	r0, r1
   17754:	mov	r1, #4
   17758:	bl	11000 <mycore_calloc@plt>
   1775c:	cmp	r0, #0
   17760:	str	r0, [r4, #4]
   17764:	beq	177e8 <mcsimple_init@@Base+0xc0>
   17768:	mul	r1, r5, r6
   1776c:	str	r1, [r4, #20]
   17770:	ldr	r6, [r4, #8]
   17774:	ldr	r5, [r4, #12]
   17778:	cmp	r5, r6
   1777c:	bcc	177b8 <mcsimple_init@@Base+0x90>
   17780:	lsl	r1, r6, #2
   17784:	bl	10d9c <mycore_realloc@plt>
   17788:	cmp	r0, #0
   1778c:	beq	177e8 <mcsimple_init@@Base+0xc0>
   17790:	str	r0, [r4, #4]
   17794:	add	r6, r6, #128	; 0x80
   17798:	add	r0, r0, r5, lsl #2
   1779c:	ldr	r1, [r4, #8]
   177a0:	sub	r1, r6, r1
   177a4:	lsl	r2, r1, #2
   177a8:	mov	r1, #0
   177ac:	bl	116cc <memset@plt>
   177b0:	str	r6, [r4, #8]
   177b4:	ldr	r0, [r4, #4]
   177b8:	mov	r1, #0
   177bc:	str	r1, [r4, #24]
   177c0:	ldr	r0, [r0, r5, lsl #2]
   177c4:	cmp	r0, #0
   177c8:	popne	{r4, r5, r6, sl, fp, pc}
   177cc:	ldr	r1, [r4, #16]
   177d0:	ldr	r0, [r4, #20]
   177d4:	add	r1, r1, #1
   177d8:	str	r1, [r4, #16]
   177dc:	bl	119a8 <mycore_malloc@plt>
   177e0:	ldr	r1, [r4, #4]
   177e4:	str	r0, [r1, r5, lsl #2]
   177e8:	pop	{r4, r5, r6, sl, fp, pc}

000177ec <mcsimple_init_list_entries@@Base>:
   177ec:	push	{r4, r5, r6, sl, fp, lr}
   177f0:	add	fp, sp, #16
   177f4:	mov	r5, r0
   177f8:	ldr	r6, [r0, #8]
   177fc:	ldr	r0, [r0, #12]
   17800:	mov	r4, r1
   17804:	cmp	r0, r6
   17808:	bcc	17844 <mcsimple_init_list_entries@@Base+0x58>
   1780c:	ldr	r0, [r5, #4]
   17810:	lsl	r1, r6, #2
   17814:	bl	10d9c <mycore_realloc@plt>
   17818:	cmp	r0, #0
   1781c:	beq	17884 <mcsimple_init_list_entries@@Base+0x98>
   17820:	str	r0, [r5, #4]
   17824:	add	r6, r6, #128	; 0x80
   17828:	add	r0, r0, r4, lsl #2
   1782c:	ldr	r1, [r5, #8]
   17830:	sub	r1, r6, r1
   17834:	lsl	r2, r1, #2
   17838:	mov	r1, #0
   1783c:	bl	116cc <memset@plt>
   17840:	str	r6, [r5, #8]
   17844:	mov	r0, #0
   17848:	str	r0, [r5, #24]
   1784c:	ldr	r0, [r5, #4]
   17850:	ldr	r0, [r0, r4, lsl #2]
   17854:	cmp	r0, #0
   17858:	popne	{r4, r5, r6, sl, fp, pc}
   1785c:	ldr	r1, [r5, #16]
   17860:	ldr	r0, [r5, #20]
   17864:	add	r1, r1, #1
   17868:	str	r1, [r5, #16]
   1786c:	bl	119a8 <mycore_malloc@plt>
   17870:	ldr	r1, [r5, #4]
   17874:	str	r0, [r1, r4, lsl #2]
   17878:	ldr	r0, [r5, #4]
   1787c:	ldr	r0, [r0, r4, lsl #2]
   17880:	pop	{r4, r5, r6, sl, fp, pc}
   17884:	mov	r0, #0
   17888:	pop	{r4, r5, r6, sl, fp, pc}

0001788c <mcsimple_clean@@Base>:
   1788c:	mov	r1, #0
   17890:	str	r1, [r0, #12]
   17894:	str	r1, [r0, #24]
   17898:	bx	lr

0001789c <mcsimple_destroy@@Base>:
   1789c:	push	{r4, r5, r6, r7, fp, lr}
   178a0:	add	fp, sp, #16
   178a4:	mov	r4, #0
   178a8:	cmp	r0, #0
   178ac:	beq	17920 <mcsimple_destroy@@Base+0x84>
   178b0:	mov	r5, r0
   178b4:	ldr	r0, [r0, #4]
   178b8:	mov	r6, r1
   178bc:	cmp	r0, #0
   178c0:	beq	17910 <mcsimple_destroy@@Base+0x74>
   178c4:	ldr	r1, [r5, #16]
   178c8:	cmp	r1, #0
   178cc:	beq	1790c <mcsimple_destroy@@Base+0x70>
   178d0:	mov	r7, #0
   178d4:	ldr	r0, [r0, r7, lsl #2]
   178d8:	cmp	r0, #0
   178dc:	beq	178e8 <mcsimple_destroy@@Base+0x4c>
   178e0:	bl	11a98 <mycore_free@plt>
   178e4:	ldr	r1, [r5, #16]
   178e8:	add	r7, r7, #1
   178ec:	cmp	r7, r1
   178f0:	bcs	17908 <mcsimple_destroy@@Base+0x6c>
   178f4:	ldr	r0, [r5, #4]
   178f8:	ldr	r0, [r0, r7, lsl #2]
   178fc:	cmp	r0, #0
   17900:	bne	178e0 <mcsimple_destroy@@Base+0x44>
   17904:	b	178e8 <mcsimple_destroy@@Base+0x4c>
   17908:	ldr	r0, [r5, #4]
   1790c:	bl	11a98 <mycore_free@plt>
   17910:	cmp	r6, #0
   17914:	beq	17928 <mcsimple_destroy@@Base+0x8c>
   17918:	mov	r0, r5
   1791c:	bl	11a98 <mycore_free@plt>
   17920:	mov	r0, r4
   17924:	pop	{r4, r5, r6, r7, fp, pc}
   17928:	mov	r0, r5
   1792c:	pop	{r4, r5, r6, r7, fp, pc}

00017930 <mcsimple_malloc@@Base>:
   17930:	push	{r4, r5, r6, sl, fp, lr}
   17934:	add	fp, sp, #16
   17938:	mov	r4, r0
   1793c:	ldr	r1, [r0, #20]
   17940:	ldr	r0, [r0, #24]
   17944:	cmp	r0, r1
   17948:	bcs	17954 <mcsimple_malloc@@Base+0x24>
   1794c:	ldr	r1, [r4, #4]
   17950:	b	179ec <mcsimple_malloc@@Base+0xbc>
   17954:	ldr	r0, [r4, #12]
   17958:	ldr	r6, [r4, #8]
   1795c:	add	r5, r0, #1
   17960:	cmp	r5, r6
   17964:	str	r5, [r4, #12]
   17968:	bcc	179a4 <mcsimple_malloc@@Base+0x74>
   1796c:	ldr	r0, [r4, #4]
   17970:	lsl	r1, r6, #2
   17974:	bl	10d9c <mycore_realloc@plt>
   17978:	cmp	r0, #0
   1797c:	beq	17a08 <mcsimple_malloc@@Base+0xd8>
   17980:	str	r0, [r4, #4]
   17984:	add	r6, r6, #128	; 0x80
   17988:	add	r0, r0, r5, lsl #2
   1798c:	ldr	r1, [r4, #8]
   17990:	sub	r1, r6, r1
   17994:	lsl	r2, r1, #2
   17998:	mov	r1, #0
   1799c:	bl	116cc <memset@plt>
   179a0:	str	r6, [r4, #8]
   179a4:	mov	r0, #0
   179a8:	str	r0, [r4, #24]
   179ac:	ldr	r1, [r4, #4]
   179b0:	ldr	r2, [r1, r5, lsl #2]
   179b4:	cmp	r2, #0
   179b8:	bne	179ec <mcsimple_malloc@@Base+0xbc>
   179bc:	ldr	r1, [r4, #16]
   179c0:	ldr	r0, [r4, #20]
   179c4:	add	r1, r1, #1
   179c8:	str	r1, [r4, #16]
   179cc:	bl	119a8 <mycore_malloc@plt>
   179d0:	ldr	r1, [r4, #4]
   179d4:	str	r0, [r1, r5, lsl #2]
   179d8:	ldr	r1, [r4, #4]
   179dc:	ldr	r0, [r1, r5, lsl #2]
   179e0:	cmp	r0, #0
   179e4:	beq	17a08 <mcsimple_malloc@@Base+0xd8>
   179e8:	ldr	r0, [r4, #24]
   179ec:	ldr	r2, [r4]
   179f0:	ldr	r3, [r4, #12]
   179f4:	add	r2, r2, r0
   179f8:	str	r2, [r4, #24]
   179fc:	ldr	r1, [r1, r3, lsl #2]
   17a00:	add	r0, r1, r0
   17a04:	pop	{r4, r5, r6, sl, fp, pc}
   17a08:	mov	r0, #0
   17a0c:	pop	{r4, r5, r6, sl, fp, pc}

00017a10 <mcsimple_get_by_absolute_position@@Base>:
   17a10:	push	{fp, lr}
   17a14:	mov	fp, sp
   17a18:	ldr	r2, [r0]
   17a1c:	ldr	ip, [r0, #20]
   17a20:	ldr	lr, [r0, #16]
   17a24:	mul	r2, r2, r1
   17a28:	mov	r1, #0
   17a2c:	udiv	r3, r2, ip
   17a30:	cmp	r3, lr
   17a34:	bcs	17a48 <mcsimple_get_by_absolute_position@@Base+0x38>
   17a38:	ldr	r0, [r0, #4]
   17a3c:	mls	r1, r3, ip, r2
   17a40:	ldr	r0, [r0, r3, lsl #2]
   17a44:	add	r1, r0, r1
   17a48:	mov	r0, r1
   17a4c:	pop	{fp, pc}

00017a50 <mcsync_create@@Base>:
   17a50:	mov	r0, #1
   17a54:	mov	r1, #8
   17a58:	b	11000 <mycore_calloc@plt>

00017a5c <mcsync_init@@Base>:
   17a5c:	push	{r4, r5, r6, sl, fp, lr}
   17a60:	add	fp, sp, #16
   17a64:	mov	r5, r0
   17a68:	bl	11498 <mcsync_spin_create@plt>
   17a6c:	mov	r4, #1
   17a70:	cmp	r0, #0
   17a74:	str	r0, [r5]
   17a78:	beq	17acc <mcsync_init@@Base+0x70>
   17a7c:	bl	11444 <mcsync_spin_init@plt>
   17a80:	cmp	r0, #0
   17a84:	beq	17a9c <mcsync_init@@Base+0x40>
   17a88:	mov	r6, r0
   17a8c:	ldr	r0, [r5]
   17a90:	bl	1106c <mcsync_spin_destroy@plt>
   17a94:	mov	r0, r6
   17a98:	pop	{r4, r5, r6, sl, fp, pc}
   17a9c:	bl	116e4 <mcsync_mutex_create@plt>
   17aa0:	cmp	r0, #0
   17aa4:	str	r0, [r5, #4]
   17aa8:	beq	17acc <mcsync_init@@Base+0x70>
   17aac:	bl	118c4 <mcsync_mutex_init@plt>
   17ab0:	cmp	r0, #0
   17ab4:	beq	17ad4 <mcsync_init@@Base+0x78>
   17ab8:	mov	r4, r0
   17abc:	ldr	r0, [r5]
   17ac0:	bl	1106c <mcsync_spin_destroy@plt>
   17ac4:	ldr	r0, [r5, #4]
   17ac8:	bl	10ed4 <mcsync_mutex_destroy@plt>
   17acc:	mov	r0, r4
   17ad0:	pop	{r4, r5, r6, sl, fp, pc}
   17ad4:	mov	r4, #0
   17ad8:	mov	r0, r4
   17adc:	pop	{r4, r5, r6, sl, fp, pc}

00017ae0 <mcsync_clean@@Base>:
   17ae0:	push	{r4, sl, fp, lr}
   17ae4:	add	fp, sp, #8
   17ae8:	mov	r4, r0
   17aec:	ldr	r0, [r0]
   17af0:	bl	11834 <mcsync_spin_clean@plt>
   17af4:	ldr	r0, [r4, #4]
   17af8:	pop	{r4, sl, fp, lr}
   17afc:	b	11aec <mcsync_mutex_clean@plt>

00017b00 <mcsync_destroy@@Base>:
   17b00:	push	{r4, r5, r6, sl, fp, lr}
   17b04:	add	fp, sp, #16
   17b08:	mov	r4, #0
   17b0c:	cmp	r0, #0
   17b10:	beq	17b3c <mcsync_destroy@@Base+0x3c>
   17b14:	mov	r5, r0
   17b18:	ldr	r0, [r0]
   17b1c:	mov	r6, r1
   17b20:	bl	1106c <mcsync_spin_destroy@plt>
   17b24:	ldr	r0, [r5, #4]
   17b28:	bl	10ed4 <mcsync_mutex_destroy@plt>
   17b2c:	cmp	r6, #0
   17b30:	beq	17b44 <mcsync_destroy@@Base+0x44>
   17b34:	mov	r0, r5
   17b38:	bl	11a98 <mycore_free@plt>
   17b3c:	mov	r0, r4
   17b40:	pop	{r4, r5, r6, sl, fp, pc}
   17b44:	mov	r0, r5
   17b48:	pop	{r4, r5, r6, sl, fp, pc}

00017b4c <mcsync_lock@@Base>:
   17b4c:	ldr	r0, [r0]
   17b50:	b	114c8 <mcsync_spin_lock@plt>

00017b54 <mcsync_unlock@@Base>:
   17b54:	ldr	r0, [r0]
   17b58:	b	11c48 <mcsync_spin_unlock@plt>

00017b5c <mctree_create@@Base>:
   17b5c:	push	{r4, r5, r6, sl, fp, lr}
   17b60:	add	fp, sp, #16
   17b64:	mov	r5, r0
   17b68:	mov	r0, #16
   17b6c:	bl	119a8 <mycore_malloc@plt>
   17b70:	mov	r4, #0
   17b74:	cmp	r0, #0
   17b78:	beq	17bac <mctree_create@@Base+0x50>
   17b7c:	mov	r6, r0
   17b80:	add	r1, r5, #1
   17b84:	add	r0, r5, #512	; 0x200
   17b88:	str	r1, [r6, #4]
   17b8c:	mov	r1, #28
   17b90:	str	r0, [r6, #8]
   17b94:	bl	11000 <mycore_calloc@plt>
   17b98:	cmp	r0, #0
   17b9c:	str	r0, [r6]
   17ba0:	beq	17bb4 <mctree_create@@Base+0x58>
   17ba4:	mov	r4, r6
   17ba8:	str	r5, [r6, #12]
   17bac:	mov	r0, r4
   17bb0:	pop	{r4, r5, r6, sl, fp, pc}
   17bb4:	mov	r0, r6
   17bb8:	bl	11a98 <mycore_free@plt>
   17bbc:	mov	r0, r4
   17bc0:	pop	{r4, r5, r6, sl, fp, pc}

00017bc4 <mctree_clean@@Base>:
   17bc4:	ldr	r3, [r0, #12]
   17bc8:	ldr	r2, [r0, #8]
   17bcc:	ldr	r1, [r0]
   17bd0:	add	r3, r3, #1
   17bd4:	str	r3, [r0, #4]
   17bd8:	rsb	r0, r2, r2, lsl #3
   17bdc:	lsl	r2, r0, #2
   17be0:	mov	r0, r1
   17be4:	mov	r1, #0
   17be8:	b	116cc <memset@plt>

00017bec <mctree_destroy@@Base>:
   17bec:	cmp	r0, #0
   17bf0:	beq	17c1c <mctree_destroy@@Base+0x30>
   17bf4:	push	{r4, sl, fp, lr}
   17bf8:	add	fp, sp, #8
   17bfc:	mov	r4, r0
   17c00:	ldr	r0, [r0]
   17c04:	cmp	r0, #0
   17c08:	beq	17c10 <mctree_destroy@@Base+0x24>
   17c0c:	bl	11a98 <mycore_free@plt>
   17c10:	mov	r0, r4
   17c14:	bl	11a98 <mycore_free@plt>
   17c18:	pop	{r4, sl, fp, lr}
   17c1c:	mov	r0, #0
   17c20:	bx	lr

00017c24 <__mtree_search_lowercase_to_start@@Base>:
   17c24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17c28:	add	fp, sp, #24
   17c2c:	cmp	r1, #0
   17c30:	beq	17cc0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17c34:	ldr	r7, [r0]
   17c38:	mov	r5, r3
   17c3c:	mov	r8, r2
   17c40:	mov	r4, r1
   17c44:	b	17c68 <__mtree_search_lowercase_to_start@@Base+0x44>
   17c48:	ldr	r4, [r6, #16]
   17c4c:	rsb	r0, r4, r4, lsl #3
   17c50:	add	r0, r7, r0, lsl #2
   17c54:	ldr	r0, [r0, #4]
   17c58:	cmp	r0, r5
   17c5c:	bcc	17cc0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17c60:	cmp	r4, #0
   17c64:	beq	17cc0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17c68:	rsb	r0, r4, r4, lsl #3
   17c6c:	add	r6, r7, r0, lsl #2
   17c70:	ldr	r1, [r6, #4]
   17c74:	cmp	r1, r5
   17c78:	bne	17ca4 <__mtree_search_lowercase_to_start@@Base+0x80>
   17c7c:	ldr	r1, [r7, r0, lsl #2]
   17c80:	mov	r0, r8
   17c84:	mov	r2, r5
   17c88:	bl	11288 <mycore_strncasecmp@plt>
   17c8c:	cmp	r0, #0
   17c90:	beq	17cc4 <__mtree_search_lowercase_to_start@@Base+0xa0>
   17c94:	ldr	r4, [r6, #24]
   17c98:	cmp	r4, #0
   17c9c:	bne	17c68 <__mtree_search_lowercase_to_start@@Base+0x44>
   17ca0:	b	17cc0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17ca4:	bcs	17c48 <__mtree_search_lowercase_to_start@@Base+0x24>
   17ca8:	ldr	r4, [r6, #20]
   17cac:	rsb	r0, r4, r4, lsl #3
   17cb0:	add	r0, r7, r0, lsl #2
   17cb4:	ldr	r0, [r0, #4]
   17cb8:	cmp	r0, r5
   17cbc:	bls	17c60 <__mtree_search_lowercase_to_start@@Base+0x3c>
   17cc0:	mov	r4, #0
   17cc4:	mov	r0, r4
   17cc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017ccc <__mtree_search_to_start@@Base>:
   17ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17cd0:	add	fp, sp, #24
   17cd4:	cmp	r1, #0
   17cd8:	beq	17d68 <__mtree_search_to_start@@Base+0x9c>
   17cdc:	ldr	r7, [r0]
   17ce0:	mov	r5, r3
   17ce4:	mov	r8, r2
   17ce8:	mov	r4, r1
   17cec:	b	17d10 <__mtree_search_to_start@@Base+0x44>
   17cf0:	ldr	r4, [r6, #16]
   17cf4:	rsb	r0, r4, r4, lsl #3
   17cf8:	add	r0, r7, r0, lsl #2
   17cfc:	ldr	r0, [r0, #4]
   17d00:	cmp	r0, r5
   17d04:	bcc	17d68 <__mtree_search_to_start@@Base+0x9c>
   17d08:	cmp	r4, #0
   17d0c:	beq	17d68 <__mtree_search_to_start@@Base+0x9c>
   17d10:	rsb	r0, r4, r4, lsl #3
   17d14:	add	r6, r7, r0, lsl #2
   17d18:	ldr	r1, [r6, #4]
   17d1c:	cmp	r1, r5
   17d20:	bne	17d4c <__mtree_search_to_start@@Base+0x80>
   17d24:	ldr	r1, [r7, r0, lsl #2]
   17d28:	mov	r0, r8
   17d2c:	mov	r2, r5
   17d30:	bl	11540 <bcmp@plt>
   17d34:	cmp	r0, #0
   17d38:	beq	17d6c <__mtree_search_to_start@@Base+0xa0>
   17d3c:	ldr	r4, [r6, #24]
   17d40:	cmp	r4, #0
   17d44:	bne	17d10 <__mtree_search_to_start@@Base+0x44>
   17d48:	b	17d68 <__mtree_search_to_start@@Base+0x9c>
   17d4c:	bcs	17cf0 <__mtree_search_to_start@@Base+0x24>
   17d50:	ldr	r4, [r6, #20]
   17d54:	rsb	r0, r4, r4, lsl #3
   17d58:	add	r0, r7, r0, lsl #2
   17d5c:	ldr	r0, [r0, #4]
   17d60:	cmp	r0, r5
   17d64:	bls	17d08 <__mtree_search_to_start@@Base+0x3c>
   17d68:	mov	r4, #0
   17d6c:	mov	r0, r4
   17d70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017d74 <mctree_insert_child@@Base>:
   17d74:	push	{r4, r5, fp, lr}
   17d78:	add	fp, sp, #8
   17d7c:	mov	r5, r0
   17d80:	ldr	r0, [r0]
   17d84:	rsb	r1, r1, r1, lsl #3
   17d88:	ldr	r4, [r5, #4]
   17d8c:	add	r1, r0, r1, lsl #2
   17d90:	rsb	ip, r4, r4, lsl #3
   17d94:	str	r4, [r1, #24]
   17d98:	mov	r1, r0
   17d9c:	str	r2, [r1, ip, lsl #2]!
   17da0:	ldr	r2, [fp, #8]
   17da4:	str	r3, [r1, #4]
   17da8:	str	r2, [r1, #8]
   17dac:	add	r1, r4, #1
   17db0:	str	r1, [r5, #4]
   17db4:	ldr	r2, [r5, #8]
   17db8:	cmp	r1, r2
   17dbc:	bcc	17de0 <mctree_insert_child@@Base+0x6c>
   17dc0:	movw	r1, #4097	; 0x1001
   17dc4:	add	r1, r4, r1
   17dc8:	str	r1, [r5, #8]
   17dcc:	rsb	r1, r1, r1, lsl #3
   17dd0:	lsl	r1, r1, #2
   17dd4:	bl	10d9c <mycore_realloc@plt>
   17dd8:	str	r0, [r5]
   17ddc:	ldr	r1, [r5, #4]
   17de0:	rsb	r1, r1, r1, lsl #3
   17de4:	mov	r2, #0
   17de8:	vmov.i32	q8, #0	; 0x00000000
   17dec:	str	r2, [r0, r1, lsl #2]!
   17df0:	str	r2, [r0, #24]
   17df4:	add	r0, r0, #8
   17df8:	vst1.32	{d16-d17}, [r0]
   17dfc:	mov	r0, r4
   17e00:	pop	{r4, r5, fp, pc}

00017e04 <mctree_insert_after@@Base>:
   17e04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e08:	add	fp, sp, #24
   17e0c:	mov	r5, r0
   17e10:	ldr	r0, [r0]
   17e14:	rsb	r6, r1, r1, lsl #3
   17e18:	ldr	ip, [fp, #8]
   17e1c:	ldr	r8, [r5, #4]
   17e20:	add	r4, r0, r6, lsl #2
   17e24:	ldr	r6, [r4, #20]!
   17e28:	cmp	r6, #0
   17e2c:	beq	17e48 <mctree_insert_after@@Base+0x44>
   17e30:	rsb	r7, r6, r6, lsl #3
   17e34:	add	r7, r0, r7, lsl #2
   17e38:	str	r8, [r7, #16]
   17e3c:	rsb	r7, r8, r8, lsl #3
   17e40:	add	r7, r0, r7, lsl #2
   17e44:	str	r6, [r7, #20]
   17e48:	rsb	r7, r8, r8, lsl #3
   17e4c:	mov	r6, r0
   17e50:	str	r8, [r4]
   17e54:	str	r2, [r6, r7, lsl #2]!
   17e58:	stmib	r6, {r3, ip}
   17e5c:	str	r1, [r6, #16]
   17e60:	add	r1, r8, #1
   17e64:	str	r1, [r5, #4]
   17e68:	ldr	r2, [r5, #8]
   17e6c:	cmp	r1, r2
   17e70:	bcc	17e94 <mctree_insert_after@@Base+0x90>
   17e74:	movw	r1, #4097	; 0x1001
   17e78:	add	r1, r8, r1
   17e7c:	str	r1, [r5, #8]
   17e80:	rsb	r1, r1, r1, lsl #3
   17e84:	lsl	r1, r1, #2
   17e88:	bl	10d9c <mycore_realloc@plt>
   17e8c:	str	r0, [r5]
   17e90:	ldr	r1, [r5, #4]
   17e94:	rsb	r1, r1, r1, lsl #3
   17e98:	mov	r2, #0
   17e9c:	vmov.i32	q8, #0	; 0x00000000
   17ea0:	str	r2, [r0, r1, lsl #2]!
   17ea4:	str	r2, [r0, #24]
   17ea8:	add	r0, r0, #8
   17eac:	vst1.32	{d16-d17}, [r0]
   17eb0:	mov	r0, r8
   17eb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017eb8 <mctree_insert_before@@Base>:
   17eb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ebc:	add	fp, sp, #24
   17ec0:	mov	r5, r0
   17ec4:	ldr	r0, [r0]
   17ec8:	rsb	r6, r1, r1, lsl #3
   17ecc:	ldr	ip, [fp, #8]
   17ed0:	ldr	r8, [r5, #4]
   17ed4:	add	r4, r0, r6, lsl #2
   17ed8:	ldr	r6, [r4, #16]!
   17edc:	cmp	r6, #0
   17ee0:	beq	17efc <mctree_insert_before@@Base+0x44>
   17ee4:	rsb	r7, r6, r6, lsl #3
   17ee8:	add	r7, r0, r7, lsl #2
   17eec:	str	r8, [r7, #20]
   17ef0:	rsb	r7, r8, r8, lsl #3
   17ef4:	add	r7, r0, r7, lsl #2
   17ef8:	str	r6, [r7, #16]
   17efc:	rsb	r7, r8, r8, lsl #3
   17f00:	mov	r6, r0
   17f04:	str	r8, [r4]
   17f08:	str	r2, [r6, r7, lsl #2]!
   17f0c:	stmib	r6, {r3, ip}
   17f10:	str	r1, [r6, #20]
   17f14:	add	r1, r8, #1
   17f18:	str	r1, [r5, #4]
   17f1c:	ldr	r2, [r5, #8]
   17f20:	cmp	r1, r2
   17f24:	bcc	17f48 <mctree_insert_before@@Base+0x90>
   17f28:	movw	r1, #4097	; 0x1001
   17f2c:	add	r1, r8, r1
   17f30:	str	r1, [r5, #8]
   17f34:	rsb	r1, r1, r1, lsl #3
   17f38:	lsl	r1, r1, #2
   17f3c:	bl	10d9c <mycore_realloc@plt>
   17f40:	str	r0, [r5]
   17f44:	ldr	r1, [r5, #4]
   17f48:	rsb	r1, r1, r1, lsl #3
   17f4c:	mov	r2, #0
   17f50:	vmov.i32	q8, #0	; 0x00000000
   17f54:	str	r2, [r0, r1, lsl #2]!
   17f58:	str	r2, [r0, #24]
   17f5c:	add	r0, r0, #8
   17f60:	vst1.32	{d16-d17}, [r0]
   17f64:	mov	r0, r8
   17f68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017f6c <__mtree_insert_to_start@@Base>:
   17f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f70:	add	fp, sp, #28
   17f74:	sub	sp, sp, #4
   17f78:	cmp	r1, #0
   17f7c:	beq	180a0 <__mtree_insert_to_start@@Base+0x134>
   17f80:	mov	r8, r0
   17f84:	ldr	r4, [r0]
   17f88:	ldr	r0, [fp, #8]
   17f8c:	mov	r6, r3
   17f90:	mov	r9, r2
   17f94:	str	r0, [sp]
   17f98:	rsb	r7, r1, r1, lsl #3
   17f9c:	mov	r5, r1
   17fa0:	add	sl, r4, r7, lsl #2
   17fa4:	ldr	r0, [sl, #4]
   17fa8:	cmp	r0, r6
   17fac:	bne	17fd8 <__mtree_insert_to_start@@Base+0x6c>
   17fb0:	ldr	r1, [r4, r7, lsl #2]
   17fb4:	mov	r0, r9
   17fb8:	mov	r2, r6
   17fbc:	bl	11540 <bcmp@plt>
   17fc0:	cmp	r0, #0
   17fc4:	beq	180b0 <__mtree_insert_to_start@@Base+0x144>
   17fc8:	ldr	r1, [sl, #24]
   17fcc:	cmp	r1, #0
   17fd0:	bne	17f98 <__mtree_insert_to_start@@Base+0x2c>
   17fd4:	b	180cc <__mtree_insert_to_start@@Base+0x160>
   17fd8:	bcs	18000 <__mtree_insert_to_start@@Base+0x94>
   17fdc:	ldr	r1, [sl, #20]
   17fe0:	cmp	r1, #0
   17fe4:	beq	180f4 <__mtree_insert_to_start@@Base+0x188>
   17fe8:	rsb	r0, r1, r1, lsl #3
   17fec:	add	r0, r4, r0, lsl #2
   17ff0:	ldr	r0, [r0, #4]
   17ff4:	cmp	r0, r6
   17ff8:	bls	17f98 <__mtree_insert_to_start@@Base+0x2c>
   17ffc:	b	180f4 <__mtree_insert_to_start@@Base+0x188>
   18000:	ldr	r1, [sl, #16]
   18004:	cmp	r1, #0
   18008:	beq	18020 <__mtree_insert_to_start@@Base+0xb4>
   1800c:	rsb	r0, r1, r1, lsl #3
   18010:	add	r0, r4, r0, lsl #2
   18014:	ldr	r0, [r0, #4]
   18018:	cmp	r0, r6
   1801c:	bcs	17f98 <__mtree_insert_to_start@@Base+0x2c>
   18020:	ldr	r3, [fp, #12]
   18024:	cmp	r3, #0
   18028:	beq	18050 <__mtree_insert_to_start@@Base+0xe4>
   1802c:	add	r2, fp, #8
   18030:	mov	r0, r9
   18034:	mov	r1, r6
   18038:	blx	r3
   1803c:	ldr	r4, [r8]
   18040:	add	r0, r4, r7, lsl #2
   18044:	ldr	r1, [r0, #16]
   18048:	ldr	r0, [fp, #8]
   1804c:	str	r0, [sp]
   18050:	ldr	sl, [r8, #4]
   18054:	add	r0, r4, r7, lsl #2
   18058:	cmp	r1, #0
   1805c:	add	r0, r0, #16
   18060:	beq	1807c <__mtree_insert_to_start@@Base+0x110>
   18064:	rsb	r2, r1, r1, lsl #3
   18068:	add	r2, r4, r2, lsl #2
   1806c:	str	sl, [r2, #20]
   18070:	rsb	r2, sl, sl, lsl #3
   18074:	add	r2, r4, r2, lsl #2
   18078:	str	r1, [r2, #16]
   1807c:	str	sl, [r0]
   18080:	rsb	r0, sl, sl, lsl #3
   18084:	mov	r1, r4
   18088:	str	r9, [r1, r0, lsl #2]!
   1808c:	ldr	r0, [sp]
   18090:	str	r6, [r1, #4]
   18094:	str	r0, [r1, #8]
   18098:	str	r5, [r1, #20]
   1809c:	b	18198 <__mtree_insert_to_start@@Base+0x22c>
   180a0:	mov	sl, #0
   180a4:	mov	r0, sl
   180a8:	sub	sp, fp, #28
   180ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180b0:	ldr	r0, [sp]
   180b4:	cmp	r0, #0
   180b8:	strne	r0, [sl, #8]
   180bc:	mov	sl, r5
   180c0:	mov	r0, sl
   180c4:	sub	sp, fp, #28
   180c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180cc:	ldr	r3, [fp, #12]
   180d0:	cmp	r3, #0
   180d4:	beq	18174 <__mtree_insert_to_start@@Base+0x208>
   180d8:	add	r2, fp, #8
   180dc:	mov	r0, r9
   180e0:	mov	r1, r6
   180e4:	blx	r3
   180e8:	ldr	r4, [r8]
   180ec:	ldr	r2, [fp, #8]
   180f0:	b	18178 <__mtree_insert_to_start@@Base+0x20c>
   180f4:	ldr	r3, [fp, #12]
   180f8:	cmp	r3, #0
   180fc:	beq	18124 <__mtree_insert_to_start@@Base+0x1b8>
   18100:	add	r2, fp, #8
   18104:	mov	r0, r9
   18108:	mov	r1, r6
   1810c:	blx	r3
   18110:	ldr	r4, [r8]
   18114:	add	r0, r4, r7, lsl #2
   18118:	ldr	r1, [r0, #20]
   1811c:	ldr	r0, [fp, #8]
   18120:	str	r0, [sp]
   18124:	ldr	sl, [r8, #4]
   18128:	add	r0, r4, r7, lsl #2
   1812c:	cmp	r1, #0
   18130:	add	r0, r0, #20
   18134:	beq	18150 <__mtree_insert_to_start@@Base+0x1e4>
   18138:	rsb	r2, r1, r1, lsl #3
   1813c:	add	r2, r4, r2, lsl #2
   18140:	str	sl, [r2, #16]
   18144:	rsb	r2, sl, sl, lsl #3
   18148:	add	r2, r4, r2, lsl #2
   1814c:	str	r1, [r2, #20]
   18150:	str	sl, [r0]
   18154:	rsb	r0, sl, sl, lsl #3
   18158:	mov	r1, r4
   1815c:	str	r9, [r1, r0, lsl #2]!
   18160:	ldr	r0, [sp]
   18164:	str	r6, [r1, #4]
   18168:	str	r0, [r1, #8]
   1816c:	str	r5, [r1, #16]
   18170:	b	18198 <__mtree_insert_to_start@@Base+0x22c>
   18174:	ldr	r2, [sp]
   18178:	ldr	sl, [r8, #4]
   1817c:	add	r0, r4, r7, lsl #2
   18180:	mov	r1, r4
   18184:	str	sl, [r0, #24]
   18188:	rsb	r0, sl, sl, lsl #3
   1818c:	str	r9, [r1, r0, lsl #2]!
   18190:	str	r6, [r1, #4]
   18194:	str	r2, [r1, #8]
   18198:	add	r0, sl, #1
   1819c:	str	r0, [r8, #4]
   181a0:	ldr	r1, [r8, #8]
   181a4:	cmp	r0, r1
   181a8:	bcc	181d4 <__mtree_insert_to_start@@Base+0x268>
   181ac:	movw	r0, #4097	; 0x1001
   181b0:	add	r0, sl, r0
   181b4:	str	r0, [r8, #8]
   181b8:	rsb	r0, r0, r0, lsl #3
   181bc:	lsl	r1, r0, #2
   181c0:	mov	r0, r4
   181c4:	bl	10d9c <mycore_realloc@plt>
   181c8:	str	r0, [r8]
   181cc:	mov	r4, r0
   181d0:	ldr	r0, [r8, #4]
   181d4:	rsb	r0, r0, r0, lsl #3
   181d8:	mov	r1, #0
   181dc:	vmov.i32	q8, #0	; 0x00000000
   181e0:	str	r1, [r4, r0, lsl #2]!
   181e4:	add	r0, r4, #8
   181e8:	str	r1, [r4, #24]
   181ec:	vst1.32	{d16-d17}, [r0]
   181f0:	mov	r0, sl
   181f4:	sub	sp, fp, #28
   181f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000181fc <mctree_insert@@Base>:
   181fc:	push	{r4, r5, r6, r7, fp, lr}
   18200:	add	fp, sp, #16
   18204:	sub	sp, sp, #16
   18208:	cmp	r2, #0
   1820c:	str	r3, [sp, #12]
   18210:	beq	18288 <mctree_insert@@Base+0x8c>
   18214:	mov	r4, r0
   18218:	mov	r0, r1
   1821c:	mov	r6, r1
   18220:	mov	r5, r2
   18224:	ldr	ip, [fp, #8]
   18228:	ldrb	r1, [r0], r2
   1822c:	ldr	r2, [pc, #256]	; 18334 <mctree_insert@@Base+0x138>
   18230:	ldrb	r0, [r0, #-1]
   18234:	add	r2, pc, r2
   18238:	ldrb	r1, [r2, r1]
   1823c:	ldrb	r0, [r2, r0]
   18240:	ldr	r2, [r4, #12]
   18244:	add	r1, r0, r1
   18248:	ldr	r0, [r4]
   1824c:	udiv	r7, r1, r2
   18250:	mls	r1, r7, r2, r1
   18254:	add	r1, r1, #1
   18258:	rsb	r7, r1, r1, lsl #3
   1825c:	add	r1, r0, r7, lsl #2
   18260:	ldr	r1, [r1, #24]
   18264:	cmp	r1, #0
   18268:	beq	18298 <mctree_insert@@Base+0x9c>
   1826c:	stm	sp, {r3, ip}
   18270:	mov	r0, r4
   18274:	mov	r2, r6
   18278:	mov	r3, r5
   1827c:	bl	11330 <__mtree_insert_to_start@plt>
   18280:	sub	sp, fp, #16
   18284:	pop	{r4, r5, r6, r7, fp, pc}
   18288:	mov	r7, #0
   1828c:	mov	r0, r7
   18290:	sub	sp, fp, #16
   18294:	pop	{r4, r5, r6, r7, fp, pc}
   18298:	cmp	ip, #0
   1829c:	beq	182b8 <mctree_insert@@Base+0xbc>
   182a0:	add	r2, sp, #12
   182a4:	mov	r0, r6
   182a8:	mov	r1, r5
   182ac:	blx	ip
   182b0:	ldr	r0, [r4]
   182b4:	ldr	r3, [sp, #12]
   182b8:	add	r1, r0, r7, lsl #2
   182bc:	ldr	r7, [r4, #4]
   182c0:	mov	r2, r0
   182c4:	str	r7, [r1, #24]
   182c8:	rsb	r1, r7, r7, lsl #3
   182cc:	str	r6, [r2, r1, lsl #2]!
   182d0:	add	r1, r7, #1
   182d4:	str	r5, [r2, #4]
   182d8:	str	r3, [r2, #8]
   182dc:	str	r1, [r4, #4]
   182e0:	ldr	r2, [r4, #8]
   182e4:	cmp	r1, r2
   182e8:	bcc	1830c <mctree_insert@@Base+0x110>
   182ec:	movw	r1, #4097	; 0x1001
   182f0:	add	r1, r7, r1
   182f4:	str	r1, [r4, #8]
   182f8:	rsb	r1, r1, r1, lsl #3
   182fc:	lsl	r1, r1, #2
   18300:	bl	10d9c <mycore_realloc@plt>
   18304:	str	r0, [r4]
   18308:	ldr	r1, [r4, #4]
   1830c:	rsb	r1, r1, r1, lsl #3
   18310:	mov	r2, #0
   18314:	vmov.i32	q8, #0	; 0x00000000
   18318:	str	r2, [r0, r1, lsl #2]!
   1831c:	str	r2, [r0, #24]
   18320:	add	r0, r0, #8
   18324:	vst1.32	{d16-d17}, [r0]
   18328:	mov	r0, r7
   1832c:	sub	sp, fp, #16
   18330:	pop	{r4, r5, r6, r7, fp, pc}
   18334:	andeq	sp, r1, r4, ror lr

00018338 <mctree_search@@Base>:
   18338:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1833c:	add	fp, sp, #24
   18340:	cmp	r2, #0
   18344:	beq	1840c <mctree_search@@Base+0xd4>
   18348:	mov	r4, r2
   1834c:	mov	r8, r1
   18350:	ldrb	r2, [r1], r2
   18354:	ldr	r3, [pc, #188]	; 18418 <mctree_search@@Base+0xe0>
   18358:	ldr	r7, [r0]
   1835c:	ldr	r0, [r0, #12]
   18360:	ldrb	r1, [r1, #-1]
   18364:	add	r3, pc, r3
   18368:	ldrb	r2, [r3, r2]
   1836c:	ldrb	r1, [r3, r1]
   18370:	add	r1, r1, r2
   18374:	udiv	r2, r1, r0
   18378:	mls	r0, r2, r0, r1
   1837c:	rsb	r0, r0, r0, lsl #3
   18380:	add	r0, r7, r0, lsl #2
   18384:	ldr	r6, [r0, #52]	; 0x34
   18388:	cmp	r6, #0
   1838c:	bne	183b4 <mctree_search@@Base+0x7c>
   18390:	b	1840c <mctree_search@@Base+0xd4>
   18394:	ldr	r6, [r5, #16]
   18398:	rsb	r0, r6, r6, lsl #3
   1839c:	add	r0, r7, r0, lsl #2
   183a0:	ldr	r0, [r0, #4]
   183a4:	cmp	r0, r4
   183a8:	bcc	1840c <mctree_search@@Base+0xd4>
   183ac:	cmp	r6, #0
   183b0:	beq	1840c <mctree_search@@Base+0xd4>
   183b4:	rsb	r0, r6, r6, lsl #3
   183b8:	add	r5, r7, r0, lsl #2
   183bc:	ldr	r1, [r5, #4]
   183c0:	cmp	r1, r4
   183c4:	bne	183f0 <mctree_search@@Base+0xb8>
   183c8:	ldr	r1, [r7, r0, lsl #2]
   183cc:	mov	r0, r8
   183d0:	mov	r2, r4
   183d4:	bl	11540 <bcmp@plt>
   183d8:	cmp	r0, #0
   183dc:	beq	18410 <mctree_search@@Base+0xd8>
   183e0:	ldr	r6, [r5, #24]
   183e4:	cmp	r6, #0
   183e8:	bne	183b4 <mctree_search@@Base+0x7c>
   183ec:	b	1840c <mctree_search@@Base+0xd4>
   183f0:	bcs	18394 <mctree_search@@Base+0x5c>
   183f4:	ldr	r6, [r5, #20]
   183f8:	rsb	r0, r6, r6, lsl #3
   183fc:	add	r0, r7, r0, lsl #2
   18400:	ldr	r0, [r0, #4]
   18404:	cmp	r0, r4
   18408:	bls	183ac <mctree_search@@Base+0x74>
   1840c:	mov	r6, #0
   18410:	mov	r0, r6
   18414:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18418:	andeq	sp, r1, r4, asr #26

0001841c <mctree_search_lowercase@@Base>:
   1841c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18420:	add	fp, sp, #24
   18424:	cmp	r2, #0
   18428:	beq	184f0 <mctree_search_lowercase@@Base+0xd4>
   1842c:	mov	r4, r2
   18430:	mov	r8, r1
   18434:	ldrb	r2, [r1], r2
   18438:	ldr	r3, [pc, #188]	; 184fc <mctree_search_lowercase@@Base+0xe0>
   1843c:	ldr	r7, [r0]
   18440:	ldr	r0, [r0, #12]
   18444:	ldrb	r1, [r1, #-1]
   18448:	add	r3, pc, r3
   1844c:	ldrb	r2, [r3, r2]
   18450:	ldrb	r1, [r3, r1]
   18454:	add	r1, r1, r2
   18458:	udiv	r2, r1, r0
   1845c:	mls	r0, r2, r0, r1
   18460:	rsb	r0, r0, r0, lsl #3
   18464:	add	r0, r7, r0, lsl #2
   18468:	ldr	r6, [r0, #52]	; 0x34
   1846c:	cmp	r6, #0
   18470:	bne	18498 <mctree_search_lowercase@@Base+0x7c>
   18474:	b	184f0 <mctree_search_lowercase@@Base+0xd4>
   18478:	ldr	r6, [r5, #16]
   1847c:	rsb	r0, r6, r6, lsl #3
   18480:	add	r0, r7, r0, lsl #2
   18484:	ldr	r0, [r0, #4]
   18488:	cmp	r0, r4
   1848c:	bcc	184f0 <mctree_search_lowercase@@Base+0xd4>
   18490:	cmp	r6, #0
   18494:	beq	184f0 <mctree_search_lowercase@@Base+0xd4>
   18498:	rsb	r0, r6, r6, lsl #3
   1849c:	add	r5, r7, r0, lsl #2
   184a0:	ldr	r1, [r5, #4]
   184a4:	cmp	r1, r4
   184a8:	bne	184d4 <mctree_search_lowercase@@Base+0xb8>
   184ac:	ldr	r1, [r7, r0, lsl #2]
   184b0:	mov	r0, r8
   184b4:	mov	r2, r4
   184b8:	bl	11288 <mycore_strncasecmp@plt>
   184bc:	cmp	r0, #0
   184c0:	beq	184f4 <mctree_search_lowercase@@Base+0xd8>
   184c4:	ldr	r6, [r5, #24]
   184c8:	cmp	r6, #0
   184cc:	bne	18498 <mctree_search_lowercase@@Base+0x7c>
   184d0:	b	184f0 <mctree_search_lowercase@@Base+0xd4>
   184d4:	bcs	18478 <mctree_search_lowercase@@Base+0x5c>
   184d8:	ldr	r6, [r5, #20]
   184dc:	rsb	r0, r6, r6, lsl #3
   184e0:	add	r0, r7, r0, lsl #2
   184e4:	ldr	r0, [r0, #4]
   184e8:	cmp	r0, r4
   184ec:	bls	18490 <mctree_search_lowercase@@Base+0x74>
   184f0:	mov	r6, #0
   184f4:	mov	r0, r6
   184f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   184fc:	andeq	sp, r1, r0, ror #24

00018500 <mycore_utils_mhash_hash@@Base>:
   18500:	cmp	r1, #0
   18504:	beq	18530 <mycore_utils_mhash_hash@@Base+0x30>
   18508:	push	{r4, r5, fp, lr}
   1850c:	add	fp, sp, #8
   18510:	and	ip, r1, #1
   18514:	cmp	r1, #1
   18518:	bne	18538 <mycore_utils_mhash_hash@@Base+0x38>
   1851c:	mov	r1, #0
   18520:	mov	r3, #0
   18524:	cmp	ip, #0
   18528:	bne	1857c <mycore_utils_mhash_hash@@Base+0x7c>
   1852c:	b	1858c <mycore_utils_mhash_hash@@Base+0x8c>
   18530:	mov	r0, #0
   18534:	b	18594 <mycore_utils_mhash_hash@@Base+0x94>
   18538:	sub	lr, r1, ip
   1853c:	mov	r1, #0
   18540:	mov	r3, #0
   18544:	mov	r4, r0
   18548:	ldrb	r5, [r4, r1]!
   1854c:	add	r1, r1, #2
   18550:	cmp	lr, r1
   18554:	ldrb	r4, [r4, #1]
   18558:	add	r3, r3, r5
   1855c:	add	r3, r3, r3, lsl #10
   18560:	eor	r3, r3, r3, lsr #6
   18564:	add	r3, r3, r4
   18568:	add	r3, r3, r3, lsl #10
   1856c:	eor	r3, r3, r3, lsr #6
   18570:	bne	18544 <mycore_utils_mhash_hash@@Base+0x44>
   18574:	cmp	ip, #0
   18578:	beq	1858c <mycore_utils_mhash_hash@@Base+0x8c>
   1857c:	ldrb	r0, [r0, r1]
   18580:	add	r0, r3, r0
   18584:	add	r0, r0, r0, lsl #10
   18588:	eor	r3, r0, r0, lsr #6
   1858c:	add	r0, r3, r3, lsl #3
   18590:	pop	{r4, r5, fp, lr}
   18594:	eor	r0, r0, r0, lsr #11
   18598:	add	r0, r0, r0, lsl #15
   1859c:	udiv	r1, r0, r2
   185a0:	mls	r0, r1, r2, r0
   185a4:	bx	lr

000185a8 <mycore_utils_mhash_create@@Base>:
   185a8:	mov	r0, #1
   185ac:	mov	r1, #24
   185b0:	b	11000 <mycore_calloc@plt>

000185b4 <mycore_utils_mhash_init@@Base>:
   185b4:	push	{r4, r5, r6, sl, fp, lr}
   185b8:	add	fp, sp, #16
   185bc:	sub	sp, sp, #8
   185c0:	mov	r4, r2
   185c4:	mov	r6, r1
   185c8:	mov	r5, r0
   185cc:	bl	111b0 <mchar_async_create@plt>
   185d0:	mov	r1, r0
   185d4:	str	r0, [r5]
   185d8:	mov	r0, #2
   185dc:	cmp	r1, #0
   185e0:	beq	18654 <mycore_utils_mhash_init@@Base+0xa0>
   185e4:	mov	r0, r1
   185e8:	mov	r1, #128	; 0x80
   185ec:	mov	r2, #4096	; 0x1000
   185f0:	bl	113fc <mchar_async_init@plt>
   185f4:	cmp	r0, #0
   185f8:	str	r0, [sp, #4]
   185fc:	bne	18654 <mycore_utils_mhash_init@@Base+0xa0>
   18600:	ldr	r0, [r5]
   18604:	add	r1, sp, #4
   18608:	bl	1127c <mchar_async_node_add@plt>
   1860c:	str	r0, [r5, #4]
   18610:	ldr	r0, [sp, #4]
   18614:	cmp	r0, #0
   18618:	bne	18654 <mycore_utils_mhash_init@@Base+0xa0>
   1861c:	cmp	r6, #128	; 0x80
   18620:	mov	r1, #4
   18624:	movls	r6, #128	; 0x80
   18628:	mov	r0, r6
   1862c:	bl	11000 <mycore_calloc@plt>
   18630:	str	r0, [r5, #8]
   18634:	cmp	r0, #0
   18638:	mov	r0, #2
   1863c:	beq	18654 <mycore_utils_mhash_init@@Base+0xa0>
   18640:	cmp	r4, #0
   18644:	mov	r0, #0
   18648:	str	r6, [r5, #12]
   1864c:	movweq	r4, #1
   18650:	str	r4, [r5, #20]
   18654:	sub	sp, fp, #16
   18658:	pop	{r4, r5, r6, sl, fp, pc}

0001865c <mycore_utils_mhash_clean@@Base>:
   1865c:	push	{r4, sl, fp, lr}
   18660:	add	fp, sp, #8
   18664:	mov	r4, r0
   18668:	ldr	r0, [r0]
   1866c:	bl	11918 <mchar_async_clean@plt>
   18670:	ldr	r1, [r4, #12]
   18674:	ldr	r0, [r4, #8]
   18678:	lsl	r2, r1, #2
   1867c:	mov	r1, #0
   18680:	pop	{r4, sl, fp, lr}
   18684:	b	116cc <memset@plt>

00018688 <mycore_utils_mhash_destroy@@Base>:
   18688:	push	{r4, r5, fp, lr}
   1868c:	add	fp, sp, #8
   18690:	cmp	r0, #0
   18694:	beq	186c4 <mycore_utils_mhash_destroy@@Base+0x3c>
   18698:	mov	r4, r0
   1869c:	ldr	r0, [r0, #8]
   186a0:	mov	r5, r1
   186a4:	cmp	r0, #0
   186a8:	beq	186b8 <mycore_utils_mhash_destroy@@Base+0x30>
   186ac:	bl	11a98 <mycore_free@plt>
   186b0:	mov	r0, #0
   186b4:	str	r0, [r4, #8]
   186b8:	cmp	r5, #0
   186bc:	beq	186c8 <mycore_utils_mhash_destroy@@Base+0x40>
   186c0:	bl	11a98 <mycore_free@plt>
   186c4:	mov	r4, #0
   186c8:	mov	r0, r4
   186cc:	pop	{r4, r5, fp, pc}

000186d0 <mycore_utils_mhash_create_entry@@Base>:
   186d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   186d4:	add	fp, sp, #24
   186d8:	mov	r5, r0
   186dc:	mov	r7, r1
   186e0:	ldr	r0, [r0]
   186e4:	mov	r6, r2
   186e8:	mov	r2, #16
   186ec:	mov	r8, r3
   186f0:	ldr	r1, [r5, #4]
   186f4:	bl	1172c <mchar_async_malloc@plt>
   186f8:	mov	r4, r0
   186fc:	ldm	r5, {r0, r1}
   18700:	add	r2, r6, #1
   18704:	bl	1172c <mchar_async_malloc@plt>
   18708:	cmp	r0, #0
   1870c:	str	r0, [r4]
   18710:	beq	1873c <mycore_utils_mhash_create_entry@@Base+0x6c>
   18714:	mov	r1, r7
   18718:	mov	r2, r6
   1871c:	bl	11030 <memcpy@plt>
   18720:	ldr	r0, [r4]
   18724:	mov	r1, #0
   18728:	strb	r1, [r0, r6]
   1872c:	mov	r0, r4
   18730:	stmib	r4, {r6, r8}
   18734:	str	r1, [r4, #12]
   18738:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1873c:	ldm	r5, {r0, r1}
   18740:	mov	r2, r4
   18744:	bl	115c4 <mchar_async_free@plt>
   18748:	mov	r4, #0
   1874c:	mov	r0, r4
   18750:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018754 <mycore_utils_mhash_add_with_choice@@Base>:
   18754:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18758:	add	fp, sp, #28
   1875c:	sub	sp, sp, #4
   18760:	cmp	r1, #0
   18764:	mov	r9, #0
   18768:	movne	sl, r2
   1876c:	cmpne	r2, #0
   18770:	bne	18780 <mycore_utils_mhash_add_with_choice@@Base+0x2c>
   18774:	mov	r0, r9
   18778:	sub	sp, fp, #28
   1877c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18780:	mov	r8, r0
   18784:	ldr	r0, [r0, #12]
   18788:	mov	r5, r1
   1878c:	and	r1, sl, #1
   18790:	cmp	sl, #1
   18794:	bne	187ac <mycore_utils_mhash_add_with_choice@@Base+0x58>
   18798:	mov	r2, #0
   1879c:	mov	r3, #0
   187a0:	cmp	r1, #0
   187a4:	bne	187f0 <mycore_utils_mhash_add_with_choice@@Base+0x9c>
   187a8:	b	18800 <mycore_utils_mhash_add_with_choice@@Base+0xac>
   187ac:	sub	r7, sl, r1
   187b0:	mov	r2, #0
   187b4:	mov	r3, #0
   187b8:	mov	r6, r5
   187bc:	ldrb	r4, [r6, r2]!
   187c0:	add	r2, r2, #2
   187c4:	cmp	r7, r2
   187c8:	ldrb	r6, [r6, #1]
   187cc:	add	r3, r3, r4
   187d0:	add	r3, r3, r3, lsl #10
   187d4:	eor	r3, r3, r3, lsr #6
   187d8:	add	r3, r3, r6
   187dc:	add	r3, r3, r3, lsl #10
   187e0:	eor	r3, r3, r3, lsr #6
   187e4:	bne	187b8 <mycore_utils_mhash_add_with_choice@@Base+0x64>
   187e8:	cmp	r1, #0
   187ec:	beq	18800 <mycore_utils_mhash_add_with_choice@@Base+0xac>
   187f0:	ldrb	r1, [r5, r2]
   187f4:	add	r1, r3, r1
   187f8:	add	r1, r1, r1, lsl #10
   187fc:	eor	r3, r1, r1, lsr #6
   18800:	add	r1, r3, r3, lsl #3
   18804:	eor	r1, r1, r1, lsr #11
   18808:	add	r1, r1, r1, lsl #15
   1880c:	udiv	r2, r1, r0
   18810:	mls	r4, r2, r0, r1
   18814:	ldr	r1, [r8, #8]
   18818:	ldr	r7, [r1, r4, lsl #2]
   1881c:	cmp	r7, #0
   18820:	beq	188c0 <mycore_utils_mhash_add_with_choice@@Base+0x16c>
   18824:	mov	r4, #0
   18828:	ldr	r0, [r7, #4]
   1882c:	cmp	r0, sl
   18830:	bne	1884c <mycore_utils_mhash_add_with_choice@@Base+0xf8>
   18834:	ldr	r0, [r7]
   18838:	mov	r1, r5
   1883c:	mov	r2, sl
   18840:	bl	11bdc <strncmp@plt>
   18844:	cmp	r0, #0
   18848:	beq	18924 <mycore_utils_mhash_add_with_choice@@Base+0x1d0>
   1884c:	ldr	r0, [r7, #12]
   18850:	cmp	r0, #0
   18854:	beq	18870 <mycore_utils_mhash_add_with_choice@@Base+0x11c>
   18858:	add	r4, r4, #1
   1885c:	mov	r7, r0
   18860:	ldr	r0, [r7, #4]
   18864:	cmp	r0, sl
   18868:	beq	18834 <mycore_utils_mhash_add_with_choice@@Base+0xe0>
   1886c:	b	1884c <mycore_utils_mhash_add_with_choice@@Base+0xf8>
   18870:	ldm	r8, {r0, r1}
   18874:	mov	r2, #16
   18878:	bl	1172c <mchar_async_malloc@plt>
   1887c:	mov	r9, r0
   18880:	ldm	r8, {r0, r1}
   18884:	add	r2, sl, #1
   18888:	bl	1172c <mchar_async_malloc@plt>
   1888c:	cmp	r0, #0
   18890:	str	r0, [r9]
   18894:	beq	18934 <mycore_utils_mhash_add_with_choice@@Base+0x1e0>
   18898:	mov	r1, r5
   1889c:	mov	r2, sl
   188a0:	bl	11030 <memcpy@plt>
   188a4:	ldr	r0, [r9]
   188a8:	mov	r1, #0
   188ac:	strb	r1, [r0, sl]
   188b0:	str	sl, [r9, #4]
   188b4:	str	r1, [r9, #8]
   188b8:	str	r1, [r9, #12]
   188bc:	b	18944 <mycore_utils_mhash_add_with_choice@@Base+0x1f0>
   188c0:	ldr	r1, [r8, #16]
   188c4:	sub	r0, r0, r0, lsr #2
   188c8:	cmp	r1, r0
   188cc:	movcs	r0, r8
   188d0:	blcs	11810 <mycore_utils_mhash_rebuld@plt>
   188d4:	ldm	r8, {r0, r1}
   188d8:	mov	r2, #16
   188dc:	bl	1172c <mchar_async_malloc@plt>
   188e0:	mov	r7, r0
   188e4:	ldm	r8, {r0, r1}
   188e8:	add	r2, sl, #1
   188ec:	bl	1172c <mchar_async_malloc@plt>
   188f0:	cmp	r0, #0
   188f4:	str	r0, [r7]
   188f8:	beq	18964 <mycore_utils_mhash_add_with_choice@@Base+0x210>
   188fc:	mov	r1, r5
   18900:	mov	r2, sl
   18904:	bl	11030 <memcpy@plt>
   18908:	ldr	r0, [r7]
   1890c:	mov	r1, #0
   18910:	strb	r1, [r0, sl]
   18914:	str	sl, [r7, #4]
   18918:	str	r1, [r7, #8]
   1891c:	str	r1, [r7, #12]
   18920:	b	18974 <mycore_utils_mhash_add_with_choice@@Base+0x220>
   18924:	mov	r9, r7
   18928:	mov	r0, r9
   1892c:	sub	sp, fp, #28
   18930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18934:	ldm	r8, {r0, r1}
   18938:	mov	r2, r9
   1893c:	bl	115c4 <mchar_async_free@plt>
   18940:	mov	r9, #0
   18944:	str	r9, [r7, #12]
   18948:	ldr	r0, [r8, #20]
   1894c:	cmp	r4, r0
   18950:	movhi	r0, r8
   18954:	blhi	11810 <mycore_utils_mhash_rebuld@plt>
   18958:	mov	r0, r9
   1895c:	sub	sp, fp, #28
   18960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18964:	ldm	r8, {r0, r1}
   18968:	mov	r2, r7
   1896c:	bl	115c4 <mchar_async_free@plt>
   18970:	mov	r7, #0
   18974:	ldr	r0, [r8, #8]
   18978:	str	r7, [r0, r4, lsl #2]
   1897c:	ldr	r0, [r8, #8]
   18980:	ldr	r9, [r0, r4, lsl #2]
   18984:	mov	r0, r9
   18988:	sub	sp, fp, #28
   1898c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018990 <mycore_utils_mhash_rebuld@@Base>:
   18990:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18994:	add	fp, sp, #24
   18998:	ldr	r5, [r0, #12]
   1899c:	ldr	r8, [r0, #8]
   189a0:	mov	r9, r0
   189a4:	mov	r1, #4
   189a8:	lsl	r0, r5, #1
   189ac:	str	r0, [r9, #12]
   189b0:	bl	11000 <mycore_calloc@plt>
   189b4:	cmp	r0, #0
   189b8:	str	r0, [r9, #8]
   189bc:	beq	18ad4 <mycore_utils_mhash_rebuld@@Base+0x144>
   189c0:	ldr	lr, [r9, #12]
   189c4:	cmp	lr, #0
   189c8:	beq	18ac4 <mycore_utils_mhash_rebuld@@Base+0x134>
   189cc:	mov	ip, #0
   189d0:	ldr	r2, [r8, ip, lsl #2]
   189d4:	cmp	r2, #0
   189d8:	bne	18a08 <mycore_utils_mhash_rebuld@@Base+0x78>
   189dc:	add	ip, ip, #1
   189e0:	cmp	ip, lr
   189e4:	bcs	18ac4 <mycore_utils_mhash_rebuld@@Base+0x134>
   189e8:	ldr	r2, [r8, ip, lsl #2]
   189ec:	cmp	r2, #0
   189f0:	bne	18a08 <mycore_utils_mhash_rebuld@@Base+0x78>
   189f4:	b	189dc <mycore_utils_mhash_rebuld@@Base+0x4c>
   189f8:	str	r2, [r3]
   189fc:	ldr	r2, [r2, #12]
   18a00:	cmp	r2, #0
   18a04:	beq	189dc <mycore_utils_mhash_rebuld@@Base+0x4c>
   18a08:	ldr	r4, [r2]
   18a0c:	cmp	r4, #0
   18a10:	ldrne	r1, [r2, #4]
   18a14:	cmpne	r1, #0
   18a18:	beq	189fc <mycore_utils_mhash_rebuld@@Base+0x6c>
   18a1c:	mov	r5, #0
   18a20:	and	r6, r1, #1
   18a24:	cmp	r1, #1
   18a28:	mov	r7, #0
   18a2c:	str	r5, [r2, #12]
   18a30:	beq	18a70 <mycore_utils_mhash_rebuld@@Base+0xe0>
   18a34:	sub	r1, r1, r6
   18a38:	mov	r5, #0
   18a3c:	mov	r7, #0
   18a40:	mov	r3, r4
   18a44:	ldrb	r0, [r3, r5]!
   18a48:	add	r5, r5, #2
   18a4c:	cmp	r1, r5
   18a50:	ldrb	r3, [r3, #1]
   18a54:	add	r0, r7, r0
   18a58:	add	r0, r0, r0, lsl #10
   18a5c:	eor	r0, r0, r0, lsr #6
   18a60:	add	r0, r0, r3
   18a64:	add	r0, r0, r0, lsl #10
   18a68:	eor	r7, r0, r0, lsr #6
   18a6c:	bne	18a40 <mycore_utils_mhash_rebuld@@Base+0xb0>
   18a70:	cmp	r6, #0
   18a74:	beq	18a88 <mycore_utils_mhash_rebuld@@Base+0xf8>
   18a78:	ldrb	r0, [r4, r5]
   18a7c:	add	r0, r7, r0
   18a80:	add	r0, r0, r0, lsl #10
   18a84:	eor	r7, r0, r0, lsr #6
   18a88:	add	r0, r7, r7, lsl #3
   18a8c:	ldr	r3, [r9, #8]
   18a90:	eor	r0, r0, r0, lsr #11
   18a94:	add	r0, r0, r0, lsl #15
   18a98:	udiv	r1, r0, lr
   18a9c:	mls	r0, r1, lr, r0
   18aa0:	ldr	r1, [r3, r0, lsl #2]!
   18aa4:	cmp	r1, #0
   18aa8:	beq	189f8 <mycore_utils_mhash_rebuld@@Base+0x68>
   18aac:	mov	r3, r1
   18ab0:	ldr	r1, [r1, #12]
   18ab4:	cmp	r1, #0
   18ab8:	bne	18aac <mycore_utils_mhash_rebuld@@Base+0x11c>
   18abc:	add	r3, r3, #12
   18ac0:	b	189f8 <mycore_utils_mhash_rebuld@@Base+0x68>
   18ac4:	mov	r0, r8
   18ac8:	bl	11a98 <mycore_free@plt>
   18acc:	ldr	r0, [r9, #8]
   18ad0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18ad4:	mov	r0, #0
   18ad8:	str	r8, [r9, #8]
   18adc:	str	r5, [r9, #12]
   18ae0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018ae4 <mycore_utils_mhash_add@@Base>:
   18ae4:	push	{r4, sl, fp, lr}
   18ae8:	add	fp, sp, #8
   18aec:	mov	r4, r3
   18af0:	bl	11a80 <mycore_utils_mhash_add_with_choice@plt>
   18af4:	cmp	r0, #0
   18af8:	strne	r4, [r0, #8]
   18afc:	pop	{r4, sl, fp, pc}

00018b00 <mycore_utils_mhash_search@@Base>:
   18b00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18b04:	add	fp, sp, #24
   18b08:	cmp	r1, #0
   18b0c:	mov	r6, #0
   18b10:	movne	r8, r2
   18b14:	cmpne	r2, #0
   18b18:	bne	18b24 <mycore_utils_mhash_search@@Base+0x24>
   18b1c:	mov	r0, r6
   18b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18b24:	ldr	ip, [r0, #12]
   18b28:	mov	r4, r1
   18b2c:	and	r2, r8, #1
   18b30:	cmp	r8, #1
   18b34:	bne	18b4c <mycore_utils_mhash_search@@Base+0x4c>
   18b38:	mov	r3, #0
   18b3c:	mov	r6, #0
   18b40:	cmp	r2, #0
   18b44:	bne	18b90 <mycore_utils_mhash_search@@Base+0x90>
   18b48:	b	18ba0 <mycore_utils_mhash_search@@Base+0xa0>
   18b4c:	sub	r7, r8, r2
   18b50:	mov	r3, #0
   18b54:	mov	r6, #0
   18b58:	mov	r5, r4
   18b5c:	ldrb	r1, [r5, r3]!
   18b60:	add	r3, r3, #2
   18b64:	cmp	r7, r3
   18b68:	ldrb	r5, [r5, #1]
   18b6c:	add	r1, r6, r1
   18b70:	add	r1, r1, r1, lsl #10
   18b74:	eor	r1, r1, r1, lsr #6
   18b78:	add	r1, r1, r5
   18b7c:	add	r1, r1, r1, lsl #10
   18b80:	eor	r6, r1, r1, lsr #6
   18b84:	bne	18b58 <mycore_utils_mhash_search@@Base+0x58>
   18b88:	cmp	r2, #0
   18b8c:	beq	18ba0 <mycore_utils_mhash_search@@Base+0xa0>
   18b90:	ldrb	r1, [r4, r3]
   18b94:	add	r1, r6, r1
   18b98:	add	r1, r1, r1, lsl #10
   18b9c:	eor	r6, r1, r1, lsr #6
   18ba0:	add	r1, r6, r6, lsl #3
   18ba4:	ldr	r0, [r0, #8]
   18ba8:	mov	r6, #0
   18bac:	eor	r1, r1, r1, lsr #11
   18bb0:	add	r1, r1, r1, lsl #15
   18bb4:	udiv	r2, r1, ip
   18bb8:	mls	r1, r2, ip, r1
   18bbc:	ldr	r7, [r0, r1, lsl #2]
   18bc0:	cmp	r7, #0
   18bc4:	bne	18bd8 <mycore_utils_mhash_search@@Base+0xd8>
   18bc8:	b	18b1c <mycore_utils_mhash_search@@Base+0x1c>
   18bcc:	ldr	r7, [r7, #12]
   18bd0:	cmp	r7, #0
   18bd4:	beq	18b1c <mycore_utils_mhash_search@@Base+0x1c>
   18bd8:	ldr	r0, [r7, #4]
   18bdc:	cmp	r0, r8
   18be0:	bne	18bcc <mycore_utils_mhash_search@@Base+0xcc>
   18be4:	ldr	r0, [r7]
   18be8:	mov	r1, r4
   18bec:	mov	r2, r8
   18bf0:	bl	11bdc <strncmp@plt>
   18bf4:	cmp	r0, #0
   18bf8:	bne	18bcc <mycore_utils_mhash_search@@Base+0xcc>
   18bfc:	mov	r6, r7
   18c00:	mov	r0, r6
   18c04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018c08 <mycore_utils_mhash_entry_by_id@@Base>:
   18c08:	ldr	r3, [r0, #12]
   18c0c:	mov	r2, r0
   18c10:	mov	r0, #0
   18c14:	cmp	r3, r1
   18c18:	bxls	lr
   18c1c:	ldr	r0, [r2, #8]
   18c20:	ldr	r0, [r0, r1, lsl #2]
   18c24:	bx	lr

00018c28 <mycore_utils_mhash_get_table_size@@Base>:
   18c28:	ldr	r0, [r0, #12]
   18c2c:	bx	lr

00018c30 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   18c30:	cmp	r1, #0
   18c34:	mov	ip, #0
   18c38:	cmpne	r2, #0
   18c3c:	bne	18c48 <mycore_utils_mhash_rebuild_add_entry@@Base+0x18>
   18c40:	mov	r0, ip
   18c44:	bx	lr
   18c48:	push	{r4, r5, r6, r7, fp, lr}
   18c4c:	add	fp, sp, #16
   18c50:	mov	lr, #0
   18c54:	and	r4, r2, #1
   18c58:	cmp	r2, #1
   18c5c:	mov	r5, #0
   18c60:	str	lr, [r3, #12]
   18c64:	ldr	ip, [r0, #12]
   18c68:	beq	18ca8 <mycore_utils_mhash_rebuild_add_entry@@Base+0x78>
   18c6c:	sub	r2, r2, r4
   18c70:	mov	lr, #0
   18c74:	mov	r5, #0
   18c78:	mov	r6, r1
   18c7c:	ldrb	r7, [r6, lr]!
   18c80:	add	lr, lr, #2
   18c84:	cmp	r2, lr
   18c88:	ldrb	r6, [r6, #1]
   18c8c:	add	r5, r5, r7
   18c90:	add	r5, r5, r5, lsl #10
   18c94:	eor	r5, r5, r5, lsr #6
   18c98:	add	r5, r5, r6
   18c9c:	add	r5, r5, r5, lsl #10
   18ca0:	eor	r5, r5, r5, lsr #6
   18ca4:	bne	18c78 <mycore_utils_mhash_rebuild_add_entry@@Base+0x48>
   18ca8:	cmp	r4, #0
   18cac:	beq	18cc0 <mycore_utils_mhash_rebuild_add_entry@@Base+0x90>
   18cb0:	ldrb	r1, [r1, lr]
   18cb4:	add	r1, r5, r1
   18cb8:	add	r1, r1, r1, lsl #10
   18cbc:	eor	r5, r1, r1, lsr #6
   18cc0:	add	r1, r5, r5, lsl #3
   18cc4:	eor	r1, r1, r1, lsr #11
   18cc8:	add	r1, r1, r1, lsl #15
   18ccc:	udiv	r2, r1, ip
   18cd0:	mls	r2, r2, ip, r1
   18cd4:	ldr	r1, [r0, #8]
   18cd8:	ldr	r0, [r1, r2, lsl #2]!
   18cdc:	cmp	r0, #0
   18ce0:	beq	18cf8 <mycore_utils_mhash_rebuild_add_entry@@Base+0xc8>
   18ce4:	mov	r1, r0
   18ce8:	ldr	r0, [r0, #12]
   18cec:	cmp	r0, #0
   18cf0:	bne	18ce4 <mycore_utils_mhash_rebuild_add_entry@@Base+0xb4>
   18cf4:	add	r1, r1, #12
   18cf8:	mov	ip, r3
   18cfc:	str	r3, [r1]
   18d00:	pop	{r4, r5, r6, r7, fp, lr}
   18d04:	mov	r0, ip
   18d08:	bx	lr

00018d0c <myencoding_detect_by_trigram@@Base>:
   18d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d10:	add	fp, sp, #28
   18d14:	sub	sp, sp, #20
   18d18:	mov	r5, r1
   18d1c:	mov	r1, #0
   18d20:	subs	r7, r2, #3
   18d24:	str	r3, [sp, #16]
   18d28:	str	r0, [sp, #4]
   18d2c:	str	r2, [sp, #8]
   18d30:	str	r1, [r0]
   18d34:	str	r1, [r0, #4]
   18d38:	beq	18de4 <myencoding_detect_by_trigram@@Base+0xd8>
   18d3c:	ldr	r0, [fp, #8]
   18d40:	cmp	r0, #0
   18d44:	beq	18de4 <myencoding_detect_by_trigram@@Base+0xd8>
   18d48:	mov	r0, #0
   18d4c:	mov	r9, #0
   18d50:	mov	sl, #0
   18d54:	str	r0, [sp, #12]
   18d58:	mov	r6, r5
   18d5c:	ldrsb	r0, [r6, sl]!
   18d60:	cmn	r0, #1
   18d64:	bgt	18d98 <myencoding_detect_by_trigram@@Base+0x8c>
   18d68:	b	18db4 <myencoding_detect_by_trigram@@Base+0xa8>
   18d6c:	ldr	r0, [r4, #4]
   18d70:	ldr	r1, [sp, #12]
   18d74:	add	r9, r9, r0
   18d78:	ldr	r0, [sp, #4]
   18d7c:	add	r1, r1, #1
   18d80:	str	r1, [sp, #12]
   18d84:	stm	r0, {r1, r9}
   18d88:	ldr	r0, [fp, #12]
   18d8c:	cmp	r9, r0
   18d90:	ldr	r0, [sp, #8]
   18d94:	movcs	sl, r0
   18d98:	add	sl, sl, #1
   18d9c:	cmp	sl, r7
   18da0:	bcs	18de4 <myencoding_detect_by_trigram@@Base+0xd8>
   18da4:	mov	r6, r5
   18da8:	ldrsb	r0, [r6, sl]!
   18dac:	cmn	r0, #1
   18db0:	bgt	18d98 <myencoding_detect_by_trigram@@Base+0x8c>
   18db4:	ldr	r8, [fp, #8]
   18db8:	ldr	r4, [sp, #16]
   18dbc:	mov	r0, r4
   18dc0:	mov	r1, r6
   18dc4:	mov	r2, #3
   18dc8:	bl	11540 <bcmp@plt>
   18dcc:	cmp	r0, #0
   18dd0:	beq	18d6c <myencoding_detect_by_trigram@@Base+0x60>
   18dd4:	subs	r8, r8, #1
   18dd8:	add	r4, r4, #8
   18ddc:	bne	18dbc <myencoding_detect_by_trigram@@Base+0xb0>
   18de0:	b	18d98 <myencoding_detect_by_trigram@@Base+0x8c>
   18de4:	sub	sp, fp, #28
   18de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018dec <myencoding_detect_russian_has_end@@Base>:
   18dec:	ldr	r3, [r0, #4]
   18df0:	cmp	r3, r2
   18df4:	movcs	r0, #1
   18df8:	bxcs	lr
   18dfc:	ldr	r2, [r0]
   18e00:	mov	r0, #0
   18e04:	cmp	r2, r1
   18e08:	movwcs	r0, #1
   18e0c:	bx	lr

00018e10 <myencoding_detect_unicode_has_end@@Base>:
   18e10:	ldmib	r0, {r2, ip}
   18e14:	clz	r3, ip
   18e18:	lsr	r3, r3, #5
   18e1c:	cmp	r2, #0
   18e20:	mov	r0, r2
   18e24:	movwne	r0, #1
   18e28:	cmpne	ip, #0
   18e2c:	orr	r0, r3, r0
   18e30:	bne	18e38 <myencoding_detect_unicode_has_end@@Base+0x28>
   18e34:	bx	lr
   18e38:	mov	r0, #100	; 0x64
   18e3c:	mul	r0, ip, r0
   18e40:	udiv	r2, r0, r2
   18e44:	mov	r0, #0
   18e48:	cmp	r2, r1
   18e4c:	movwcc	r0, #1
   18e50:	bx	lr

00018e54 <myencoding_detect_utf_8@@Base>:
   18e54:	push	{r4, r5, r6, sl, fp, lr}
   18e58:	add	fp, sp, #16
   18e5c:	mov	r3, #0
   18e60:	cmp	r2, #0
   18e64:	str	r3, [r0]
   18e68:	str	r3, [r0, #4]
   18e6c:	str	r3, [r0, #8]
   18e70:	beq	18f90 <myencoding_detect_utf_8@@Base+0x13c>
   18e74:	mov	ip, #0
   18e78:	mov	lr, #0
   18e7c:	mov	r4, #0
   18e80:	ldrb	r5, [r1, r4]
   18e84:	tst	r5, #128	; 0x80
   18e88:	bne	18ec8 <myencoding_detect_utf_8@@Base+0x74>
   18e8c:	b	18eb0 <myencoding_detect_utf_8@@Base+0x5c>
   18e90:	add	lr, lr, #1
   18e94:	mov	r4, r5
   18e98:	str	lr, [r0, #8]
   18e9c:	cmp	r4, r2
   18ea0:	bcs	18f90 <myencoding_detect_utf_8@@Base+0x13c>
   18ea4:	ldrb	r5, [r1, r4]
   18ea8:	tst	r5, #128	; 0x80
   18eac:	bne	18ec8 <myencoding_detect_utf_8@@Base+0x74>
   18eb0:	add	r3, r3, #1
   18eb4:	str	r3, [r0]
   18eb8:	add	r4, r4, #1
   18ebc:	cmp	r4, r2
   18ec0:	bcc	18ea4 <myencoding_detect_utf_8@@Base+0x50>
   18ec4:	b	18f90 <myencoding_detect_utf_8@@Base+0x13c>
   18ec8:	and	r6, r5, #224	; 0xe0
   18ecc:	cmp	r6, #192	; 0xc0
   18ed0:	bne	18ef8 <myencoding_detect_utf_8@@Base+0xa4>
   18ed4:	add	r5, r4, #2
   18ed8:	cmp	r5, r2
   18edc:	bcs	18f90 <myencoding_detect_utf_8@@Base+0x13c>
   18ee0:	add	r4, r4, r1
   18ee4:	ldrb	r4, [r4, #1]
   18ee8:	and	r4, r4, #192	; 0xc0
   18eec:	cmp	r4, #128	; 0x80
   18ef0:	bne	18e90 <myencoding_detect_utf_8@@Base+0x3c>
   18ef4:	b	18f34 <myencoding_detect_utf_8@@Base+0xe0>
   18ef8:	and	r6, r5, #240	; 0xf0
   18efc:	cmp	r6, #224	; 0xe0
   18f00:	bne	18f4c <myencoding_detect_utf_8@@Base+0xf8>
   18f04:	add	r5, r4, #3
   18f08:	cmp	r5, r2
   18f0c:	bcs	18f90 <myencoding_detect_utf_8@@Base+0x13c>
   18f10:	add	r4, r4, r1
   18f14:	ldrb	r6, [r4, #2]
   18f18:	and	r6, r6, #192	; 0xc0
   18f1c:	cmp	r6, #128	; 0x80
   18f20:	bne	18e90 <myencoding_detect_utf_8@@Base+0x3c>
   18f24:	ldrb	r4, [r4, #1]
   18f28:	and	r4, r4, #192	; 0xc0
   18f2c:	cmp	r4, #128	; 0x80
   18f30:	bne	18e90 <myencoding_detect_utf_8@@Base+0x3c>
   18f34:	add	ip, ip, #1
   18f38:	mov	r4, r5
   18f3c:	str	ip, [r0, #4]
   18f40:	cmp	r4, r2
   18f44:	bcc	18ea4 <myencoding_detect_utf_8@@Base+0x50>
   18f48:	b	18f90 <myencoding_detect_utf_8@@Base+0x13c>
   18f4c:	and	r5, r5, #248	; 0xf8
   18f50:	cmp	r5, #240	; 0xf0
   18f54:	bne	18f7c <myencoding_detect_utf_8@@Base+0x128>
   18f58:	add	r5, r4, #4
   18f5c:	cmp	r5, r2
   18f60:	bcs	18f90 <myencoding_detect_utf_8@@Base+0x13c>
   18f64:	add	r4, r4, r1
   18f68:	ldrb	r6, [r4, #3]
   18f6c:	and	r6, r6, #192	; 0xc0
   18f70:	cmp	r6, #128	; 0x80
   18f74:	bne	18e90 <myencoding_detect_utf_8@@Base+0x3c>
   18f78:	b	18f14 <myencoding_detect_utf_8@@Base+0xc0>
   18f7c:	add	lr, lr, #1
   18f80:	str	lr, [r0, #8]
   18f84:	add	r4, r4, #1
   18f88:	cmp	r4, r2
   18f8c:	bcc	18ea4 <myencoding_detect_utf_8@@Base+0x50>
   18f90:	pop	{r4, r5, r6, sl, fp, pc}

00018f94 <myencoding_detect_utf_16@@Base>:
   18f94:	push	{r4, sl, fp, lr}
   18f98:	add	fp, sp, #8
   18f9c:	mov	lr, #0
   18fa0:	cmp	r2, #0
   18fa4:	str	lr, [r0]
   18fa8:	str	lr, [r0, #4]
   18fac:	str	lr, [r0, #8]
   18fb0:	popeq	{r4, sl, fp, pc}
   18fb4:	mov	ip, #0
   18fb8:	mov	r3, #0
   18fbc:	ldrb	r4, [r1, r3]
   18fc0:	cmp	r4, #0
   18fc4:	bne	18fe8 <myencoding_detect_utf_16@@Base+0x54>
   18fc8:	b	19000 <myencoding_detect_utf_16@@Base+0x6c>
   18fcc:	add	r4, r3, r1
   18fd0:	ldrb	r4, [r4, #-1]
   18fd4:	sub	r4, r4, #32
   18fd8:	uxtb	r4, r4
   18fdc:	cmp	r4, #94	; 0x5e
   18fe0:	addls	ip, ip, #1
   18fe4:	strls	ip, [r0, #4]
   18fe8:	add	r3, r3, #1
   18fec:	cmp	r3, r2
   18ff0:	bcs	1902c <myencoding_detect_utf_16@@Base+0x98>
   18ff4:	ldrb	r4, [r1, r3]
   18ff8:	cmp	r4, #0
   18ffc:	bne	18fe8 <myencoding_detect_utf_16@@Base+0x54>
   19000:	tst	r3, #1
   19004:	bne	18fcc <myencoding_detect_utf_16@@Base+0x38>
   19008:	add	r3, r3, #1
   1900c:	ldrb	r4, [r1, r3]
   19010:	sub	r4, r4, #32
   19014:	uxtb	r4, r4
   19018:	cmp	r4, #94	; 0x5e
   1901c:	addls	lr, lr, #1
   19020:	strls	lr, [r0, #8]
   19024:	cmp	r3, r2
   19028:	bcc	18ff4 <myencoding_detect_utf_16@@Base+0x60>
   1902c:	pop	{r4, sl, fp, pc}

00019030 <myencoding_detect_bom@@Base>:
   19030:	mov	r3, r0
   19034:	cmp	r1, #3
   19038:	bcc	19074 <myencoding_detect_bom@@Base+0x44>
   1903c:	ldrb	r1, [r3]
   19040:	cmp	r1, #239	; 0xef
   19044:	bne	19084 <myencoding_detect_bom@@Base+0x54>
   19048:	ldrb	r1, [r3, #1]
   1904c:	mov	r0, #0
   19050:	cmp	r1, #187	; 0xbb
   19054:	bne	190a4 <myencoding_detect_bom@@Base+0x74>
   19058:	ldrb	r1, [r3, #2]
   1905c:	cmp	r1, #191	; 0xbf
   19060:	bne	190a4 <myencoding_detect_bom@@Base+0x74>
   19064:	mov	r0, #0
   19068:	str	r0, [r2]
   1906c:	mov	r0, #1
   19070:	bx	lr
   19074:	mov	r0, #0
   19078:	cmp	r1, #2
   1907c:	bne	190a4 <myencoding_detect_bom@@Base+0x74>
   19080:	ldrb	r1, [r3]
   19084:	mov	r0, #0
   19088:	cmp	r1, #255	; 0xff
   1908c:	beq	190a8 <myencoding_detect_bom@@Base+0x78>
   19090:	cmp	r1, #254	; 0xfe
   19094:	bne	190a4 <myencoding_detect_bom@@Base+0x74>
   19098:	ldrb	r1, [r3, #1]
   1909c:	cmp	r1, #255	; 0xff
   190a0:	beq	190c4 <myencoding_detect_bom@@Base+0x94>
   190a4:	bx	lr
   190a8:	ldrb	r1, [r3, #1]
   190ac:	cmp	r1, #254	; 0xfe
   190b0:	bxne	lr
   190b4:	mov	r0, #4
   190b8:	str	r0, [r2]
   190bc:	mov	r0, #1
   190c0:	bx	lr
   190c4:	mov	r0, #5
   190c8:	str	r0, [r2]
   190cc:	mov	r0, #1
   190d0:	bx	lr

000190d4 <myencoding_detect_and_cut_bom@@Base>:
   190d4:	push	{r4, r5, fp, lr}
   190d8:	add	fp, sp, #8
   190dc:	cmp	r1, #3
   190e0:	bcc	1911c <myencoding_detect_and_cut_bom@@Base+0x48>
   190e4:	ldrb	r4, [r0]
   190e8:	cmp	r4, #239	; 0xef
   190ec:	bne	1912c <myencoding_detect_and_cut_bom@@Base+0x58>
   190f0:	ldrb	r4, [r0, #1]
   190f4:	mov	ip, #0
   190f8:	cmp	r4, #187	; 0xbb
   190fc:	bne	19190 <myencoding_detect_and_cut_bom@@Base+0xbc>
   19100:	ldrb	r4, [r0, #2]
   19104:	mov	ip, #0
   19108:	cmp	r4, #191	; 0xbf
   1910c:	bne	19190 <myencoding_detect_and_cut_bom@@Base+0xbc>
   19110:	mvn	lr, #2
   19114:	mov	r4, #3
   19118:	b	19174 <myencoding_detect_and_cut_bom@@Base+0xa0>
   1911c:	mov	ip, #0
   19120:	cmp	r1, #2
   19124:	bne	19190 <myencoding_detect_and_cut_bom@@Base+0xbc>
   19128:	ldrb	r4, [r0]
   1912c:	mov	ip, #0
   19130:	cmp	r4, #255	; 0xff
   19134:	beq	1915c <myencoding_detect_and_cut_bom@@Base+0x88>
   19138:	cmp	r4, #254	; 0xfe
   1913c:	bne	19190 <myencoding_detect_and_cut_bom@@Base+0xbc>
   19140:	ldrb	r4, [r0, #1]
   19144:	cmp	r4, #255	; 0xff
   19148:	bne	19190 <myencoding_detect_and_cut_bom@@Base+0xbc>
   1914c:	mvn	lr, #1
   19150:	mov	r4, #2
   19154:	mov	ip, #5
   19158:	b	19174 <myencoding_detect_and_cut_bom@@Base+0xa0>
   1915c:	ldrb	r4, [r0, #1]
   19160:	cmp	r4, #254	; 0xfe
   19164:	bne	19190 <myencoding_detect_and_cut_bom@@Base+0xbc>
   19168:	mvn	lr, #1
   1916c:	mov	r4, #2
   19170:	mov	ip, #4
   19174:	ldr	r5, [fp, #8]
   19178:	add	r0, r0, r4
   1917c:	str	ip, [r2]
   19180:	mov	ip, #1
   19184:	str	r0, [r3]
   19188:	add	r0, lr, r1
   1918c:	str	r0, [r5]
   19190:	mov	r0, ip
   19194:	pop	{r4, r5, fp, pc}

00019198 <myencoding_detect_unicode@@Base>:
   19198:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1919c:	add	fp, sp, #24
   191a0:	sub	sp, sp, #16
   191a4:	mov	r8, r2
   191a8:	mov	r2, r1
   191ac:	mov	r1, r0
   191b0:	mov	r0, #0
   191b4:	cmp	r2, #0
   191b8:	str	r0, [r8]
   191bc:	beq	19290 <myencoding_detect_unicode@@Base+0xf8>
   191c0:	mov	ip, #0
   191c4:	mov	r4, #0
   191c8:	mov	r5, #0
   191cc:	mov	r6, #0
   191d0:	ldrb	r7, [r1, r6]
   191d4:	cmp	r7, #0
   191d8:	bne	19200 <myencoding_detect_unicode@@Base+0x68>
   191dc:	b	19218 <myencoding_detect_unicode@@Base+0x80>
   191e0:	add	r3, r6, r1
   191e4:	add	r7, r5, #1
   191e8:	ldrb	r3, [r3, #-1]
   191ec:	sub	r3, r3, #32
   191f0:	uxtb	r3, r3
   191f4:	cmp	r3, #95	; 0x5f
   191f8:	movcc	r5, r7
   191fc:	movcc	r0, r7
   19200:	add	r6, r6, #1
   19204:	cmp	r6, r2
   19208:	bcs	19248 <myencoding_detect_unicode@@Base+0xb0>
   1920c:	ldrb	r7, [r1, r6]
   19210:	cmp	r7, #0
   19214:	bne	19200 <myencoding_detect_unicode@@Base+0x68>
   19218:	tst	r6, #1
   1921c:	bne	191e0 <myencoding_detect_unicode@@Base+0x48>
   19220:	add	r6, r6, #1
   19224:	add	r3, r4, #1
   19228:	ldrb	r7, [r1, r6]
   1922c:	sub	r7, r7, #32
   19230:	uxtb	r7, r7
   19234:	cmp	r7, #95	; 0x5f
   19238:	movcc	r4, r3
   1923c:	movcc	ip, r3
   19240:	cmp	r6, r2
   19244:	bcc	1920c <myencoding_detect_unicode@@Base+0x74>
   19248:	cmp	ip, #0
   1924c:	beq	19274 <myencoding_detect_unicode@@Base+0xdc>
   19250:	cmp	r0, #0
   19254:	bne	19290 <myencoding_detect_unicode@@Base+0xf8>
   19258:	cmp	ip, #3
   1925c:	bcc	19290 <myencoding_detect_unicode@@Base+0xf8>
   19260:	mov	r0, #5
   19264:	str	r0, [r8]
   19268:	mov	r0, #1
   1926c:	sub	sp, fp, #24
   19270:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19274:	cmp	r0, #3
   19278:	bcc	19290 <myencoding_detect_unicode@@Base+0xf8>
   1927c:	mov	r0, #4
   19280:	str	r0, [r8]
   19284:	mov	r0, #1
   19288:	sub	sp, fp, #24
   1928c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19290:	add	r0, sp, #4
   19294:	bl	11c3c <myencoding_detect_utf_8@plt>
   19298:	ldr	r1, [sp, #8]
   1929c:	ldr	r0, [sp, #12]
   192a0:	cmp	r1, #0
   192a4:	cmpne	r0, #0
   192a8:	bne	192c8 <myencoding_detect_unicode@@Base+0x130>
   192ac:	cmp	r0, #0
   192b0:	beq	192e0 <myencoding_detect_unicode@@Base+0x148>
   192b4:	mov	r0, #0
   192b8:	cmp	r1, #0
   192bc:	bne	192e0 <myencoding_detect_unicode@@Base+0x148>
   192c0:	sub	sp, fp, #24
   192c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   192c8:	mov	r2, #100	; 0x64
   192cc:	mul	r0, r0, r2
   192d0:	udiv	r1, r0, r1
   192d4:	mov	r0, #0
   192d8:	cmp	r1, #10
   192dc:	bcs	192c0 <myencoding_detect_unicode@@Base+0x128>
   192e0:	mov	r0, #0
   192e4:	str	r0, [r8]
   192e8:	mov	r0, #1
   192ec:	sub	sp, fp, #24
   192f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000192f4 <myencoding_detect_russian@@Base>:
   192f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192f8:	add	fp, sp, #28
   192fc:	sub	sp, sp, #28
   19300:	mov	r7, #0
   19304:	mov	r3, r0
   19308:	mov	r0, #0
   1930c:	str	r2, [sp, #8]
   19310:	subs	r8, r1, #3
   19314:	mov	r9, #0
   19318:	str	r1, [sp, #16]
   1931c:	str	r7, [r2]
   19320:	mov	r2, #0
   19324:	str	r0, [sp, #20]
   19328:	str	r3, [sp, #24]
   1932c:	beq	194c0 <myencoding_detect_russian@@Base+0x1cc>
   19330:	mov	r0, #0
   19334:	mov	r9, #0
   19338:	mov	r5, #0
   1933c:	str	r0, [sp, #20]
   19340:	ldr	r4, [pc, #1200]	; 197f8 <myencoding_detect_russian@@Base+0x504>
   19344:	add	r4, pc, r4
   19348:	mov	r7, r3
   1934c:	ldrsb	r0, [r7, r5]!
   19350:	cmn	r0, #1
   19354:	bgt	1938c <myencoding_detect_russian@@Base+0x98>
   19358:	b	193a8 <myencoding_detect_russian@@Base+0xb4>
   1935c:	ldr	r0, [r6, #4]
   19360:	ldr	r1, [sp, #20]
   19364:	add	r9, r9, #1
   19368:	add	r1, r0, r1
   1936c:	movw	r0, #34463	; 0x869f
   19370:	movt	r0, #1
   19374:	str	r1, [sp, #20]
   19378:	add	r0, r0, #1
   1937c:	cmp	r1, r0
   19380:	ldr	r0, [sp, #16]
   19384:	movcs	r5, r0
   19388:	ldr	r3, [sp, #24]
   1938c:	add	r5, r5, #1
   19390:	cmp	r5, r8
   19394:	bcs	193d8 <myencoding_detect_russian@@Base+0xe4>
   19398:	mov	r7, r3
   1939c:	ldrsb	r0, [r7, r5]!
   193a0:	cmn	r0, #1
   193a4:	bgt	1938c <myencoding_detect_russian@@Base+0x98>
   193a8:	mov	sl, #0
   193ac:	add	r6, r4, sl
   193b0:	mov	r1, r7
   193b4:	mov	r2, #3
   193b8:	mov	r0, r6
   193bc:	bl	11540 <bcmp@plt>
   193c0:	cmp	r0, #0
   193c4:	beq	1935c <myencoding_detect_russian@@Base+0x68>
   193c8:	add	sl, sl, #8
   193cc:	cmp	sl, #8000	; 0x1f40
   193d0:	bne	193ac <myencoding_detect_russian@@Base+0xb8>
   193d4:	b	19388 <myencoding_detect_russian@@Base+0x94>
   193d8:	ldr	r2, [sp, #20]
   193dc:	movw	r1, #34463	; 0x869f
   193e0:	mov	r0, #1
   193e4:	mov	r7, #32
   193e8:	movt	r1, #1
   193ec:	cmp	r2, r1
   193f0:	cmpls	r9, #49	; 0x31
   193f4:	bhi	197e8 <myencoding_detect_russian@@Base+0x4f4>
   193f8:	ldr	r0, [sp, #20]
   193fc:	mov	r9, #0
   19400:	mov	r5, #0
   19404:	cmp	r0, #0
   19408:	ldrne	r1, [sp, #8]
   1940c:	movne	r0, #32
   19410:	strne	r0, [r1]
   19414:	movw	r0, #34463	; 0x869f
   19418:	ldr	sl, [pc, #988]	; 197fc <myencoding_detect_russian@@Base+0x508>
   1941c:	movt	r0, #1
   19420:	add	r0, r0, #1
   19424:	str	r0, [sp, #4]
   19428:	mov	r0, #0
   1942c:	add	sl, pc, sl
   19430:	str	r0, [sp, #12]
   19434:	mov	r7, r3
   19438:	ldrsb	r0, [r7, r5]!
   1943c:	cmn	r0, #1
   19440:	bgt	19470 <myencoding_detect_russian@@Base+0x17c>
   19444:	b	1948c <myencoding_detect_russian@@Base+0x198>
   19448:	ldr	r0, [r6, #4]
   1944c:	add	r9, r0, r9
   19450:	ldr	r0, [sp, #4]
   19454:	cmp	r9, r0
   19458:	ldr	r0, [sp, #16]
   1945c:	movcs	r5, r0
   19460:	ldr	r0, [sp, #12]
   19464:	add	r0, r0, #1
   19468:	str	r0, [sp, #12]
   1946c:	ldr	r3, [sp, #24]
   19470:	add	r5, r5, #1
   19474:	cmp	r5, r8
   19478:	bcs	194bc <myencoding_detect_russian@@Base+0x1c8>
   1947c:	mov	r7, r3
   19480:	ldrsb	r0, [r7, r5]!
   19484:	cmn	r0, #1
   19488:	bgt	19470 <myencoding_detect_russian@@Base+0x17c>
   1948c:	mov	r4, #0
   19490:	add	r6, sl, r4
   19494:	mov	r1, r7
   19498:	mov	r2, #3
   1949c:	mov	r0, r6
   194a0:	bl	11540 <bcmp@plt>
   194a4:	cmp	r0, #0
   194a8:	beq	19448 <myencoding_detect_russian@@Base+0x154>
   194ac:	add	r4, r4, #8
   194b0:	cmp	r4, #8000	; 0x1f40
   194b4:	bne	19490 <myencoding_detect_russian@@Base+0x19c>
   194b8:	b	1946c <myencoding_detect_russian@@Base+0x178>
   194bc:	ldr	r2, [sp, #12]
   194c0:	movw	r1, #34463	; 0x869f
   194c4:	mov	r0, #1
   194c8:	mov	r7, #27
   194cc:	movt	r1, #1
   194d0:	cmp	r9, r1
   194d4:	cmpls	r2, #49	; 0x31
   194d8:	bhi	197e8 <myencoding_detect_russian@@Base+0x4f4>
   194dc:	ldr	r0, [sp, #20]
   194e0:	cmp	r0, r9
   194e4:	bcs	194f8 <myencoding_detect_russian@@Base+0x204>
   194e8:	ldr	r1, [sp, #8]
   194ec:	mov	r0, #27
   194f0:	str	r9, [sp, #20]
   194f4:	str	r0, [r1]
   194f8:	mov	sl, #0
   194fc:	cmp	r8, #0
   19500:	beq	195b0 <myencoding_detect_russian@@Base+0x2bc>
   19504:	ldr	r9, [pc, #756]	; 19800 <myencoding_detect_russian@@Base+0x50c>
   19508:	movw	r0, #34463	; 0x869f
   1950c:	mov	r4, #0
   19510:	movt	r0, #1
   19514:	add	r0, r0, #1
   19518:	add	r9, pc, r9
   1951c:	str	r0, [sp, #4]
   19520:	mov	r0, #0
   19524:	str	r0, [sp, #12]
   19528:	mov	r6, r3
   1952c:	ldrsb	r0, [r6, r4]!
   19530:	cmn	r0, #1
   19534:	bgt	19564 <myencoding_detect_russian@@Base+0x270>
   19538:	b	19580 <myencoding_detect_russian@@Base+0x28c>
   1953c:	ldr	r0, [r7, #4]
   19540:	add	sl, r0, sl
   19544:	ldr	r0, [sp, #4]
   19548:	cmp	sl, r0
   1954c:	ldr	r0, [sp, #16]
   19550:	movcs	r4, r0
   19554:	ldr	r0, [sp, #12]
   19558:	add	r0, r0, #1
   1955c:	str	r0, [sp, #12]
   19560:	ldr	r3, [sp, #24]
   19564:	add	r4, r4, #1
   19568:	cmp	r4, r8
   1956c:	bcs	195b8 <myencoding_detect_russian@@Base+0x2c4>
   19570:	mov	r6, r3
   19574:	ldrsb	r0, [r6, r4]!
   19578:	cmn	r0, #1
   1957c:	bgt	19564 <myencoding_detect_russian@@Base+0x270>
   19580:	mov	r5, #0
   19584:	add	r7, r9, r5
   19588:	mov	r1, r6
   1958c:	mov	r2, #3
   19590:	mov	r0, r7
   19594:	bl	11540 <bcmp@plt>
   19598:	cmp	r0, #0
   1959c:	beq	1953c <myencoding_detect_russian@@Base+0x248>
   195a0:	add	r5, r5, #8
   195a4:	cmp	r5, #8000	; 0x1f40
   195a8:	bne	19584 <myencoding_detect_russian@@Base+0x290>
   195ac:	b	19560 <myencoding_detect_russian@@Base+0x26c>
   195b0:	mov	r0, #0
   195b4:	str	r0, [sp, #12]
   195b8:	movw	r1, #34463	; 0x869f
   195bc:	mov	r7, #22
   195c0:	movt	r1, #1
   195c4:	cmp	sl, r1
   195c8:	bhi	197e4 <myencoding_detect_russian@@Base+0x4f0>
   195cc:	ldr	r0, [sp, #12]
   195d0:	cmp	r0, #49	; 0x31
   195d4:	bhi	197e4 <myencoding_detect_russian@@Base+0x4f0>
   195d8:	ldr	r0, [sp, #20]
   195dc:	cmp	r0, sl
   195e0:	bcs	195f4 <myencoding_detect_russian@@Base+0x300>
   195e4:	ldr	r1, [sp, #8]
   195e8:	mov	r0, #22
   195ec:	str	sl, [sp, #20]
   195f0:	str	r0, [r1]
   195f4:	mov	sl, #0
   195f8:	cmp	r8, #0
   195fc:	beq	196ac <myencoding_detect_russian@@Base+0x3b8>
   19600:	ldr	r9, [pc, #508]	; 19804 <myencoding_detect_russian@@Base+0x510>
   19604:	movw	r0, #34463	; 0x869f
   19608:	mov	r4, #0
   1960c:	movt	r0, #1
   19610:	add	r0, r0, #1
   19614:	add	r9, pc, r9
   19618:	str	r0, [sp, #4]
   1961c:	mov	r0, #0
   19620:	str	r0, [sp, #12]
   19624:	mov	r6, r3
   19628:	ldrsb	r0, [r6, r4]!
   1962c:	cmn	r0, #1
   19630:	bgt	19660 <myencoding_detect_russian@@Base+0x36c>
   19634:	b	1967c <myencoding_detect_russian@@Base+0x388>
   19638:	ldr	r0, [r7, #4]
   1963c:	add	sl, r0, sl
   19640:	ldr	r0, [sp, #4]
   19644:	cmp	sl, r0
   19648:	ldr	r0, [sp, #16]
   1964c:	movcs	r4, r0
   19650:	ldr	r0, [sp, #12]
   19654:	add	r0, r0, #1
   19658:	str	r0, [sp, #12]
   1965c:	ldr	r3, [sp, #24]
   19660:	add	r4, r4, #1
   19664:	cmp	r4, r8
   19668:	bcs	196b4 <myencoding_detect_russian@@Base+0x3c0>
   1966c:	mov	r6, r3
   19670:	ldrsb	r0, [r6, r4]!
   19674:	cmn	r0, #1
   19678:	bgt	19660 <myencoding_detect_russian@@Base+0x36c>
   1967c:	mov	r5, #0
   19680:	add	r7, r9, r5
   19684:	mov	r1, r6
   19688:	mov	r2, #3
   1968c:	mov	r0, r7
   19690:	bl	11540 <bcmp@plt>
   19694:	cmp	r0, #0
   19698:	beq	19638 <myencoding_detect_russian@@Base+0x344>
   1969c:	add	r5, r5, #8
   196a0:	cmp	r5, #8000	; 0x1f40
   196a4:	bne	19680 <myencoding_detect_russian@@Base+0x38c>
   196a8:	b	1965c <myencoding_detect_russian@@Base+0x368>
   196ac:	mov	r0, #0
   196b0:	str	r0, [sp, #12]
   196b4:	movw	r1, #34463	; 0x869f
   196b8:	mov	r7, #41	; 0x29
   196bc:	movt	r1, #1
   196c0:	cmp	sl, r1
   196c4:	bhi	197e4 <myencoding_detect_russian@@Base+0x4f0>
   196c8:	ldr	r0, [sp, #12]
   196cc:	cmp	r0, #49	; 0x31
   196d0:	bhi	197e4 <myencoding_detect_russian@@Base+0x4f0>
   196d4:	ldr	r0, [sp, #20]
   196d8:	cmp	r0, sl
   196dc:	bcs	196f0 <myencoding_detect_russian@@Base+0x3fc>
   196e0:	ldr	r1, [sp, #8]
   196e4:	mov	r0, #41	; 0x29
   196e8:	str	sl, [sp, #20]
   196ec:	str	r0, [r1]
   196f0:	mov	sl, #0
   196f4:	cmp	r8, #0
   196f8:	beq	197a8 <myencoding_detect_russian@@Base+0x4b4>
   196fc:	ldr	r9, [pc, #260]	; 19808 <myencoding_detect_russian@@Base+0x514>
   19700:	movw	r0, #34463	; 0x869f
   19704:	mov	r4, #0
   19708:	movt	r0, #1
   1970c:	add	r0, r0, #1
   19710:	add	r9, pc, r9
   19714:	str	r0, [sp, #4]
   19718:	mov	r0, #0
   1971c:	str	r0, [sp, #12]
   19720:	mov	r6, r3
   19724:	ldrsb	r0, [r6, r4]!
   19728:	cmn	r0, #1
   1972c:	bgt	1975c <myencoding_detect_russian@@Base+0x468>
   19730:	b	19778 <myencoding_detect_russian@@Base+0x484>
   19734:	ldr	r0, [r7, #4]
   19738:	add	sl, r0, sl
   1973c:	ldr	r0, [sp, #4]
   19740:	cmp	sl, r0
   19744:	ldr	r0, [sp, #16]
   19748:	movcs	r4, r0
   1974c:	ldr	r0, [sp, #12]
   19750:	add	r0, r0, #1
   19754:	str	r0, [sp, #12]
   19758:	ldr	r3, [sp, #24]
   1975c:	add	r4, r4, #1
   19760:	cmp	r4, r8
   19764:	bcs	197b0 <myencoding_detect_russian@@Base+0x4bc>
   19768:	mov	r6, r3
   1976c:	ldrsb	r0, [r6, r4]!
   19770:	cmn	r0, #1
   19774:	bgt	1975c <myencoding_detect_russian@@Base+0x468>
   19778:	mov	r5, #0
   1977c:	add	r7, r9, r5
   19780:	mov	r1, r6
   19784:	mov	r2, #3
   19788:	mov	r0, r7
   1978c:	bl	11540 <bcmp@plt>
   19790:	cmp	r0, #0
   19794:	beq	19734 <myencoding_detect_russian@@Base+0x440>
   19798:	add	r5, r5, #8
   1979c:	cmp	r5, #8000	; 0x1f40
   197a0:	bne	1977c <myencoding_detect_russian@@Base+0x488>
   197a4:	b	19758 <myencoding_detect_russian@@Base+0x464>
   197a8:	mov	r0, #0
   197ac:	str	r0, [sp, #12]
   197b0:	movw	r1, #34463	; 0x869f
   197b4:	mov	r7, #12
   197b8:	movt	r1, #1
   197bc:	cmp	sl, r1
   197c0:	bhi	197e4 <myencoding_detect_russian@@Base+0x4f0>
   197c4:	ldr	r0, [sp, #12]
   197c8:	cmp	r0, #49	; 0x31
   197cc:	bhi	197e4 <myencoding_detect_russian@@Base+0x4f0>
   197d0:	ldr	r1, [sp, #20]
   197d4:	mov	r0, #0
   197d8:	cmp	r1, sl
   197dc:	bcc	197e8 <myencoding_detect_russian@@Base+0x4f4>
   197e0:	b	197f0 <myencoding_detect_russian@@Base+0x4fc>
   197e4:	mov	r0, #1
   197e8:	ldr	r1, [sp, #8]
   197ec:	str	r7, [r1]
   197f0:	sub	sp, fp, #28
   197f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197f8:	andeq	ip, r1, r4, ror #28
   197fc:	andeq	lr, r1, ip, ror #25
   19800:	andeq	r0, r2, r0, ror fp
   19804:	andeq	r2, r2, r4, ror #19
   19808:	andeq	r4, r2, r8, asr r8

0001980c <myencoding_detect@@Base>:
   1980c:	push	{r4, r5, r6, sl, fp, lr}
   19810:	add	fp, sp, #16
   19814:	mov	r6, r0
   19818:	mov	r0, #0
   1981c:	mov	r4, r2
   19820:	mov	r5, r1
   19824:	str	r0, [r2]
   19828:	mov	r0, r6
   1982c:	bl	10df0 <myencoding_detect_unicode@plt>
   19830:	cmp	r0, #0
   19834:	beq	19840 <myencoding_detect@@Base+0x34>
   19838:	mov	r0, #1
   1983c:	pop	{r4, r5, r6, sl, fp, pc}
   19840:	mov	r0, r6
   19844:	mov	r1, r5
   19848:	mov	r2, r4
   1984c:	pop	{r4, r5, r6, sl, fp, lr}
   19850:	b	192f4 <myencoding_detect_russian@@Base>

00019854 <myencoding_name_entry_by_name@@Base>:
   19854:	push	{r4, r5, r6, r7, fp, lr}
   19858:	add	fp, sp, #16
   1985c:	mov	r4, r1
   19860:	mov	r5, r0
   19864:	ldrb	r1, [r0], r1
   19868:	ldrb	r0, [r0, #-1]
   1986c:	ldr	r2, [pc, #176]	; 19924 <myencoding_name_entry_by_name@@Base+0xd0>
   19870:	ldr	r7, [pc, #176]	; 19928 <myencoding_name_entry_by_name@@Base+0xd4>
   19874:	add	r2, pc, r2
   19878:	add	r7, pc, r7
   1987c:	ldrb	r1, [r2, r1]
   19880:	ldrb	r0, [r2, r0]
   19884:	mul	r1, r1, r4
   19888:	mul	r0, r1, r0
   1988c:	movw	r1, #11575	; 0x2d37
   19890:	movt	r1, #14546	; 0x38d2
   19894:	umull	r1, r2, r0, r1
   19898:	sub	r1, r0, r2
   1989c:	add	r1, r2, r1, lsr #1
   198a0:	movw	r2, #419	; 0x1a3
   198a4:	lsr	r1, r1, #8
   198a8:	mls	r0, r1, r2, r0
   198ac:	add	r1, r0, #1
   198b0:	rsb	r0, r1, r1, lsl #3
   198b4:	add	r0, r7, r0, lsl #2
   198b8:	ldr	r0, [r0, #8]
   198bc:	cmp	r0, #0
   198c0:	bne	198e4 <myencoding_name_entry_by_name@@Base+0x90>
   198c4:	b	19918 <myencoding_name_entry_by_name@@Base+0xc4>
   198c8:	bhi	19918 <myencoding_name_entry_by_name@@Base+0xc4>
   198cc:	ldr	r1, [r6, #20]
   198d0:	rsb	r0, r1, r1, lsl #3
   198d4:	add	r0, r7, r0, lsl #2
   198d8:	ldr	r0, [r0, #8]
   198dc:	cmp	r0, #0
   198e0:	beq	19918 <myencoding_name_entry_by_name@@Base+0xc4>
   198e4:	rsb	r1, r1, r1, lsl #3
   198e8:	add	r6, r7, r1, lsl #2
   198ec:	ldr	r1, [r6, #12]
   198f0:	cmp	r1, r4
   198f4:	bne	198c8 <myencoding_name_entry_by_name@@Base+0x74>
   198f8:	mov	r1, r5
   198fc:	mov	r2, r4
   19900:	bl	11288 <mycore_strncasecmp@plt>
   19904:	cmp	r0, #0
   19908:	beq	1991c <myencoding_name_entry_by_name@@Base+0xc8>
   1990c:	ldr	r1, [r6, #20]
   19910:	cmp	r1, #0
   19914:	bne	198d0 <myencoding_name_entry_by_name@@Base+0x7c>
   19918:	mov	r6, #0
   1991c:	mov	r0, r6
   19920:	pop	{r4, r5, r6, r7, fp, pc}
   19924:	andeq	r6, r2, r4, ror #12
   19928:	andeq	fp, pc, r4, ror #6

0001992c <myencoding_by_name@@Base>:
   1992c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19930:	add	fp, sp, #24
   19934:	mov	r6, r1
   19938:	mov	r7, r0
   1993c:	ldrb	r1, [r0], r1
   19940:	mov	r8, r2
   19944:	mov	r9, #0
   19948:	ldrb	r0, [r0, #-1]
   1994c:	ldr	r2, [pc, #196]	; 19a18 <myencoding_by_name@@Base+0xec>
   19950:	ldr	r4, [pc, #196]	; 19a1c <myencoding_by_name@@Base+0xf0>
   19954:	add	r2, pc, r2
   19958:	add	r4, pc, r4
   1995c:	ldrb	r1, [r2, r1]
   19960:	ldrb	r0, [r2, r0]
   19964:	mul	r1, r1, r6
   19968:	mul	r0, r1, r0
   1996c:	movw	r1, #11575	; 0x2d37
   19970:	movt	r1, #14546	; 0x38d2
   19974:	umull	r1, r2, r0, r1
   19978:	sub	r1, r0, r2
   1997c:	add	r1, r2, r1, lsr #1
   19980:	movw	r2, #419	; 0x1a3
   19984:	lsr	r1, r1, #8
   19988:	mls	r0, r1, r2, r0
   1998c:	add	r1, r0, #1
   19990:	rsb	r0, r1, r1, lsl #3
   19994:	add	r0, r4, r0, lsl #2
   19998:	ldr	r0, [r0, #8]
   1999c:	cmp	r0, #0
   199a0:	bne	199bc <myencoding_by_name@@Base+0x90>
   199a4:	b	19a10 <myencoding_by_name@@Base+0xe4>
   199a8:	rsb	r0, r1, r1, lsl #3
   199ac:	add	r0, r4, r0, lsl #2
   199b0:	ldr	r0, [r0, #8]
   199b4:	cmp	r0, #0
   199b8:	beq	19a10 <myencoding_by_name@@Base+0xe4>
   199bc:	rsb	r1, r1, r1, lsl #3
   199c0:	add	r5, r4, r1, lsl #2
   199c4:	ldr	r1, [r5, #12]
   199c8:	cmp	r1, r6
   199cc:	bne	199f4 <myencoding_by_name@@Base+0xc8>
   199d0:	mov	r1, r7
   199d4:	mov	r2, r6
   199d8:	bl	11288 <mycore_strncasecmp@plt>
   199dc:	cmp	r0, #0
   199e0:	beq	19a00 <myencoding_by_name@@Base+0xd4>
   199e4:	ldr	r1, [r5, #20]
   199e8:	cmp	r1, #0
   199ec:	bne	199a8 <myencoding_by_name@@Base+0x7c>
   199f0:	b	19a10 <myencoding_by_name@@Base+0xe4>
   199f4:	bhi	19a10 <myencoding_by_name@@Base+0xe4>
   199f8:	ldr	r1, [r5, #20]
   199fc:	b	199a8 <myencoding_by_name@@Base+0x7c>
   19a00:	cmp	r8, #0
   19a04:	mov	r9, #1
   19a08:	ldrne	r0, [r5, #16]
   19a0c:	strne	r0, [r8]
   19a10:	mov	r0, r9
   19a14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19a18:	andeq	r6, r2, r4, lsl #11
   19a1c:	andeq	fp, pc, r4, lsl #5

00019a20 <myencoding_name_by_id@@Base>:
   19a20:	cmp	r0, #42	; 0x2a
   19a24:	bcc	19a3c <myencoding_name_by_id@@Base+0x1c>
   19a28:	mov	r0, #0
   19a2c:	cmp	r1, #0
   19a30:	strne	r0, [r1]
   19a34:	bxne	lr
   19a38:	bx	lr
   19a3c:	ldr	r2, [pc, #28]	; 19a60 <myencoding_name_by_id@@Base+0x40>
   19a40:	cmp	r1, #0
   19a44:	add	r2, pc, r2
   19a48:	beq	19a58 <myencoding_name_by_id@@Base+0x38>
   19a4c:	add	r3, r2, r0, lsl #3
   19a50:	ldr	r3, [r3, #4]
   19a54:	str	r3, [r1]
   19a58:	ldr	r0, [r2, r0, lsl #3]
   19a5c:	bx	lr
   19a60:	andeq	lr, pc, r0, lsr #15

00019a64 <myencoding_extracting_character_encoding_from_charset@@Base>:
   19a64:	push	{fp, lr}
   19a68:	mov	fp, sp
   19a6c:	sub	sp, sp, #8
   19a70:	mov	r3, #0
   19a74:	str	r3, [sp]
   19a78:	mov	r3, #0
   19a7c:	bl	11684 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   19a80:	mov	sp, fp
   19a84:	pop	{fp, pc}

00019a88 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   19a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a8c:	add	fp, sp, #28
   19a90:	sub	sp, sp, #12
   19a94:	mov	r7, r1
   19a98:	ldr	r1, [fp, #8]
   19a9c:	mov	r4, r0
   19aa0:	mov	r0, #2
   19aa4:	cmp	r3, #0
   19aa8:	mov	r9, #0
   19aac:	str	r0, [r2]
   19ab0:	movne	r0, #0
   19ab4:	strne	r0, [r3]
   19ab8:	cmp	r1, #0
   19abc:	movne	r0, #0
   19ac0:	strne	r0, [r1]
   19ac4:	cmp	r7, #8
   19ac8:	bcc	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19acc:	stmib	sp, {r2, r3}
   19ad0:	movw	r8, #27
   19ad4:	mov	r5, #0
   19ad8:	mov	r6, #7
   19adc:	mov	sl, #1
   19ae0:	ldr	r9, [pc, #1480]	; 1a0b0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x628>
   19ae4:	movt	r8, #128	; 0x80
   19ae8:	add	r9, pc, r9
   19aec:	b	19b00 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x78>
   19af0:	add	r6, r5, #8
   19af4:	add	r5, r5, #1
   19af8:	cmp	r6, r7
   19afc:	bcs	19b58 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd0>
   19b00:	add	r1, r4, r5
   19b04:	mov	r0, r9
   19b08:	bl	10e68 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   19b0c:	cmp	r0, #0
   19b10:	beq	19af0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x68>
   19b14:	cmp	r6, r7
   19b18:	bcs	19b44 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xbc>
   19b1c:	ldrb	r0, [r4, r6]
   19b20:	sub	r0, r0, #9
   19b24:	cmp	r0, #23
   19b28:	bhi	19b44 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xbc>
   19b2c:	tst	r8, sl, lsl r0
   19b30:	beq	19b44 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xbc>
   19b34:	add	r6, r6, #1
   19b38:	cmp	r7, r6
   19b3c:	bne	19b1c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x94>
   19b40:	mov	r6, r7
   19b44:	ldrb	r0, [r4, r6]
   19b48:	cmp	r0, #61	; 0x3d
   19b4c:	beq	19b68 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xe0>
   19b50:	mov	r5, r6
   19b54:	b	19af0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x68>
   19b58:	mov	r9, #0
   19b5c:	mov	r0, r9
   19b60:	sub	sp, fp, #28
   19b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b68:	add	r0, r6, #1
   19b6c:	mov	r9, #0
   19b70:	cmp	r0, r7
   19b74:	bcs	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19b78:	rsb	r2, r7, #0
   19b7c:	sub	ip, r7, #2
   19b80:	mov	r3, #1
   19b84:	add	r5, r4, r6
   19b88:	ldrb	r1, [r5, #1]
   19b8c:	sub	r0, r1, #9
   19b90:	cmp	r0, #30
   19b94:	bhi	19c6c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1e4>
   19b98:	tst	r8, r3, lsl r0
   19b9c:	beq	19bbc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   19ba0:	add	r6, r6, #1
   19ba4:	add	r0, r2, r6
   19ba8:	cmn	r0, #1
   19bac:	bne	19b84 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xfc>
   19bb0:	mov	r0, r9
   19bb4:	sub	sp, fp, #28
   19bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bbc:	cmp	r0, #25
   19bc0:	beq	19c1c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x194>
   19bc4:	cmp	r0, #30
   19bc8:	bne	19c6c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1e4>
   19bcc:	ldr	r3, [fp, #8]
   19bd0:	ldr	r8, [sp, #4]
   19bd4:	add	r0, r6, #2
   19bd8:	cmp	r0, r7
   19bdc:	mov	ip, r3
   19be0:	ldr	r3, [sp, #8]
   19be4:	bcs	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19be8:	sub	r0, r6, r7
   19bec:	mov	r7, #0
   19bf0:	mov	r9, #0
   19bf4:	add	r1, r4, r7
   19bf8:	add	r1, r1, r6
   19bfc:	ldrb	r2, [r1, #2]
   19c00:	cmp	r2, #39	; 0x27
   19c04:	beq	19df4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x36c>
   19c08:	add	r1, r0, r7
   19c0c:	add	r7, r7, #1
   19c10:	cmn	r1, #3
   19c14:	bne	19bf4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x16c>
   19c18:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19c1c:	ldr	r3, [fp, #8]
   19c20:	ldr	r8, [sp, #4]
   19c24:	add	r0, r6, #2
   19c28:	cmp	r0, r7
   19c2c:	mov	ip, r3
   19c30:	ldr	r3, [sp, #8]
   19c34:	bcs	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19c38:	sub	r0, r6, r7
   19c3c:	mov	r7, #0
   19c40:	mov	r9, #0
   19c44:	add	r1, r4, r7
   19c48:	add	r1, r1, r6
   19c4c:	ldrb	r2, [r1, #2]
   19c50:	cmp	r2, #34	; 0x22
   19c54:	beq	19ec4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x43c>
   19c58:	add	r1, r0, r7
   19c5c:	add	r7, r7, #1
   19c60:	cmn	r1, #3
   19c64:	bne	19c44 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1bc>
   19c68:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19c6c:	add	r0, r6, #1
   19c70:	cmp	r0, r7
   19c74:	bcs	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19c78:	mvn	r2, #8
   19c7c:	mov	r3, #1
   19c80:	uxtab	r0, r2, r1
   19c84:	cmp	r0, #23
   19c88:	bhi	19cb4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x22c>
   19c8c:	tst	r8, r3, lsl r0
   19c90:	beq	19cb4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x22c>
   19c94:	cmp	ip, r6
   19c98:	beq	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19c9c:	add	r0, r4, r6
   19ca0:	add	r6, r6, #1
   19ca4:	ldrb	r1, [r0, #2]
   19ca8:	uxtab	r0, r2, r1
   19cac:	cmp	r0, #23
   19cb0:	bls	19c8c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x204>
   19cb4:	add	r2, r4, r6
   19cb8:	add	r8, r6, #1
   19cbc:	add	sl, r2, #1
   19cc0:	cmp	r8, r7
   19cc4:	bcs	19fb4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x52c>
   19cc8:	uxtb	r0, r1
   19ccc:	cmp	r0, #59	; 0x3b
   19cd0:	beq	19d04 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x27c>
   19cd4:	sub	r0, ip, r6
   19cd8:	add	r2, r2, #2
   19cdc:	mov	r1, #0
   19ce0:	cmp	r0, #0
   19ce4:	beq	19fb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x528>
   19ce8:	ldrb	r3, [r2], #1
   19cec:	sub	r0, r0, #1
   19cf0:	sub	r1, r1, #1
   19cf4:	cmp	r3, #59	; 0x3b
   19cf8:	bne	19ce0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x258>
   19cfc:	sub	r0, r6, r1
   19d00:	add	r8, r0, #1
   19d04:	ldr	r0, [sp, #8]
   19d08:	mov	r1, sl
   19d0c:	cmp	r0, #0
   19d10:	strne	sl, [r0]
   19d14:	mvn	r0, r6
   19d18:	add	r4, r0, r8
   19d1c:	ldr	r0, [fp, #8]
   19d20:	cmp	r0, #0
   19d24:	strne	r4, [r0]
   19d28:	sub	r0, r8, r6
   19d2c:	ldrb	r0, [r1], r0
   19d30:	ldrb	r1, [r1, #-2]
   19d34:	ldr	r2, [pc, #912]	; 1a0cc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x644>
   19d38:	ldr	r7, [pc, #912]	; 1a0d0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x648>
   19d3c:	add	r2, pc, r2
   19d40:	add	r7, pc, r7
   19d44:	ldrb	r0, [r2, r0]
   19d48:	ldrb	r1, [r2, r1]
   19d4c:	mul	r0, r4, r0
   19d50:	mul	r0, r0, r1
   19d54:	movw	r1, #11575	; 0x2d37
   19d58:	movt	r1, #14546	; 0x38d2
   19d5c:	umull	r1, r2, r0, r1
   19d60:	sub	r1, r0, r2
   19d64:	add	r1, r2, r1, lsr #1
   19d68:	movw	r2, #419	; 0x1a3
   19d6c:	lsr	r1, r1, #8
   19d70:	mls	r0, r1, r2, r0
   19d74:	add	r1, r0, #1
   19d78:	rsb	r0, r1, r1, lsl #3
   19d7c:	add	r0, r7, r0, lsl #2
   19d80:	ldr	r0, [r0, #8]
   19d84:	cmp	r0, #0
   19d88:	bne	19da4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x31c>
   19d8c:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19d90:	rsb	r0, r1, r1, lsl #3
   19d94:	add	r0, r7, r0, lsl #2
   19d98:	ldr	r0, [r0, #8]
   19d9c:	cmp	r0, #0
   19da0:	beq	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19da4:	rsb	r1, r1, r1, lsl #3
   19da8:	add	r5, r7, r1, lsl #2
   19dac:	ldr	r1, [r5, #12]
   19db0:	mvn	r2, r1
   19db4:	add	r2, r2, r8
   19db8:	cmp	r2, r6
   19dbc:	bne	19de4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x35c>
   19dc0:	mov	r1, sl
   19dc4:	mov	r2, r4
   19dc8:	bl	11288 <mycore_strncasecmp@plt>
   19dcc:	cmp	r0, #0
   19dd0:	beq	1a090 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x608>
   19dd4:	ldr	r1, [r5, #20]
   19dd8:	cmp	r1, #0
   19ddc:	bne	19d90 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x308>
   19de0:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19de4:	cmp	r1, r4
   19de8:	bhi	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19dec:	ldr	r1, [r5, #20]
   19df0:	b	19d90 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x308>
   19df4:	cmp	r3, #0
   19df8:	mov	r9, #0
   19dfc:	addne	r0, r5, #2
   19e00:	strne	r0, [r3]
   19e04:	cmp	ip, #0
   19e08:	strne	r7, [ip]
   19e0c:	ldrb	r0, [r1, #1]
   19e10:	ldr	r1, [pc, #684]	; 1a0c4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x63c>
   19e14:	ldrb	r2, [r5, #2]!
   19e18:	ldr	r4, [pc, #680]	; 1a0c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x640>
   19e1c:	add	r1, pc, r1
   19e20:	add	r4, pc, r4
   19e24:	ldrb	r0, [r1, r0]
   19e28:	ldrb	r1, [r1, r2]
   19e2c:	mul	r1, r7, r1
   19e30:	mul	r0, r1, r0
   19e34:	movw	r1, #11575	; 0x2d37
   19e38:	movt	r1, #14546	; 0x38d2
   19e3c:	umull	r1, r2, r0, r1
   19e40:	sub	r1, r0, r2
   19e44:	add	r1, r2, r1, lsr #1
   19e48:	movw	r2, #419	; 0x1a3
   19e4c:	lsr	r1, r1, #8
   19e50:	mls	r0, r1, r2, r0
   19e54:	add	r1, r0, #1
   19e58:	rsb	r0, r1, r1, lsl #3
   19e5c:	add	r0, r4, r0, lsl #2
   19e60:	ldr	r0, [r0, #8]
   19e64:	cmp	r0, #0
   19e68:	bne	19e8c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   19e6c:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19e70:	bhi	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19e74:	ldr	r1, [r6, #20]
   19e78:	rsb	r0, r1, r1, lsl #3
   19e7c:	add	r0, r4, r0, lsl #2
   19e80:	ldr	r0, [r0, #8]
   19e84:	cmp	r0, #0
   19e88:	beq	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19e8c:	rsb	r1, r1, r1, lsl #3
   19e90:	add	r6, r4, r1, lsl #2
   19e94:	ldr	r1, [r6, #12]
   19e98:	cmp	r1, r7
   19e9c:	bne	19e70 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3e8>
   19ea0:	mov	r1, r5
   19ea4:	mov	r2, r7
   19ea8:	bl	11288 <mycore_strncasecmp@plt>
   19eac:	cmp	r0, #0
   19eb0:	beq	19f94 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x50c>
   19eb4:	ldr	r1, [r6, #20]
   19eb8:	cmp	r1, #0
   19ebc:	bne	19e78 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3f0>
   19ec0:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19ec4:	cmp	r3, #0
   19ec8:	mov	r9, #0
   19ecc:	addne	r0, r5, #2
   19ed0:	strne	r0, [r3]
   19ed4:	cmp	ip, #0
   19ed8:	strne	r7, [ip]
   19edc:	ldrb	r0, [r1, #1]
   19ee0:	ldr	r1, [pc, #468]	; 1a0bc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x634>
   19ee4:	ldrb	r2, [r5, #2]!
   19ee8:	ldr	r4, [pc, #464]	; 1a0c0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x638>
   19eec:	add	r1, pc, r1
   19ef0:	add	r4, pc, r4
   19ef4:	ldrb	r0, [r1, r0]
   19ef8:	ldrb	r1, [r1, r2]
   19efc:	mul	r1, r7, r1
   19f00:	mul	r0, r1, r0
   19f04:	movw	r1, #11575	; 0x2d37
   19f08:	movt	r1, #14546	; 0x38d2
   19f0c:	umull	r1, r2, r0, r1
   19f10:	sub	r1, r0, r2
   19f14:	add	r1, r2, r1, lsr #1
   19f18:	movw	r2, #419	; 0x1a3
   19f1c:	lsr	r1, r1, #8
   19f20:	mls	r0, r1, r2, r0
   19f24:	add	r1, r0, #1
   19f28:	rsb	r0, r1, r1, lsl #3
   19f2c:	add	r0, r4, r0, lsl #2
   19f30:	ldr	r0, [r0, #8]
   19f34:	cmp	r0, #0
   19f38:	bne	19f5c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x4d4>
   19f3c:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19f40:	bhi	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19f44:	ldr	r1, [r6, #20]
   19f48:	rsb	r0, r1, r1, lsl #3
   19f4c:	add	r0, r4, r0, lsl #2
   19f50:	ldr	r0, [r0, #8]
   19f54:	cmp	r0, #0
   19f58:	beq	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19f5c:	rsb	r1, r1, r1, lsl #3
   19f60:	add	r6, r4, r1, lsl #2
   19f64:	ldr	r1, [r6, #12]
   19f68:	cmp	r1, r7
   19f6c:	bne	19f40 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x4b8>
   19f70:	mov	r1, r5
   19f74:	mov	r2, r7
   19f78:	bl	11288 <mycore_strncasecmp@plt>
   19f7c:	cmp	r0, #0
   19f80:	beq	19f94 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x50c>
   19f84:	ldr	r1, [r6, #20]
   19f88:	cmp	r1, #0
   19f8c:	bne	19f48 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x4c0>
   19f90:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   19f94:	cmp	r8, #0
   19f98:	mov	r9, #1
   19f9c:	ldrne	r0, [r6, #16]
   19fa0:	strne	r0, [r8]
   19fa4:	mov	r0, r9
   19fa8:	sub	sp, fp, #28
   19fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fb0:	mov	r8, r7
   19fb4:	ldr	r0, [sp, #8]
   19fb8:	ldr	r1, [fp, #8]
   19fbc:	cmp	r0, #0
   19fc0:	strne	sl, [r0]
   19fc4:	mvn	r0, r6
   19fc8:	cmp	r1, #0
   19fcc:	add	r4, r0, r8
   19fd0:	sub	r0, r8, r6
   19fd4:	strne	r4, [r1]
   19fd8:	mov	r1, sl
   19fdc:	ldrb	r0, [r1], r0
   19fe0:	ldrb	r1, [r1, #-2]
   19fe4:	ldr	r2, [pc, #200]	; 1a0b4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x62c>
   19fe8:	ldr	r7, [pc, #200]	; 1a0b8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x630>
   19fec:	add	r2, pc, r2
   19ff0:	add	r7, pc, r7
   19ff4:	ldrb	r0, [r2, r0]
   19ff8:	ldrb	r1, [r2, r1]
   19ffc:	mul	r0, r4, r0
   1a000:	mul	r0, r0, r1
   1a004:	movw	r1, #11575	; 0x2d37
   1a008:	movt	r1, #14546	; 0x38d2
   1a00c:	umull	r1, r2, r0, r1
   1a010:	sub	r1, r0, r2
   1a014:	add	r1, r2, r1, lsr #1
   1a018:	movw	r2, #419	; 0x1a3
   1a01c:	lsr	r1, r1, #8
   1a020:	mls	r0, r1, r2, r0
   1a024:	add	r1, r0, #1
   1a028:	rsb	r0, r1, r1, lsl #3
   1a02c:	b	1a040 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x5b8>
   1a030:	cmp	r1, r4
   1a034:	bhi	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   1a038:	ldr	r1, [r5, #20]
   1a03c:	rsb	r0, r1, r1, lsl #3
   1a040:	add	r0, r7, r0, lsl #2
   1a044:	ldr	r0, [r0, #8]
   1a048:	cmp	r0, #0
   1a04c:	beq	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   1a050:	rsb	r1, r1, r1, lsl #3
   1a054:	add	r5, r7, r1, lsl #2
   1a058:	ldr	r1, [r5, #12]
   1a05c:	mvn	r2, r1
   1a060:	add	r2, r2, r8
   1a064:	cmp	r2, r6
   1a068:	bne	1a030 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x5a8>
   1a06c:	mov	r1, sl
   1a070:	mov	r2, r4
   1a074:	bl	11288 <mycore_strncasecmp@plt>
   1a078:	cmp	r0, #0
   1a07c:	beq	1a090 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x608>
   1a080:	ldr	r1, [r5, #20]
   1a084:	cmp	r1, #0
   1a088:	bne	1a03c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x5b4>
   1a08c:	b	19bb0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   1a090:	ldr	r1, [sp, #4]
   1a094:	mov	r9, #1
   1a098:	cmp	r1, #0
   1a09c:	ldrne	r0, [r5, #16]
   1a0a0:	strne	r0, [r1]
   1a0a4:	mov	r0, r9
   1a0a8:	sub	sp, fp, #28
   1a0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0b0:	strdeq	r6, [r2], -r0
   1a0b4:	andeq	r5, r2, ip, ror #29
   1a0b8:	andeq	sl, pc, ip, ror #23
   1a0bc:	andeq	r5, r2, ip, ror #31
   1a0c0:	andeq	sl, pc, ip, ror #25
   1a0c4:	strheq	r6, [r2], -ip
   1a0c8:			; <UNDEFINED> instruction: 0x000fadbc
   1a0cc:	muleq	r2, ip, r1
   1a0d0:	muleq	pc, ip, lr	; <UNPREDICTABLE>

0001a0d4 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   1a0d4:	push	{r4, sl, fp, lr}
   1a0d8:	add	fp, sp, #8
   1a0dc:	mov	ip, r0
   1a0e0:	ldr	lr, [r1]
   1a0e4:	ldr	r0, [r3]
   1a0e8:	sub	r0, lr, r0
   1a0ec:	cmp	lr, r2
   1a0f0:	str	r0, [r3, #4]
   1a0f4:	mov	r0, #0
   1a0f8:	bcs	1a208 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x134>
   1a0fc:	ldrb	r3, [ip, lr]
   1a100:	sub	r3, r3, #9
   1a104:	cmp	r3, #52	; 0x34
   1a108:	bhi	1a208 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x134>
   1a10c:	add	r4, pc, #4
   1a110:	ldr	r3, [r4, r3, lsl #2]
   1a114:	add	pc, r4, r3
   1a118:	ldrdeq	r0, [r0], -r4
   1a11c:	ldrdeq	r0, [r0], -r4
   1a120:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a124:	ldrdeq	r0, [r0], -r4
   1a128:	ldrdeq	r0, [r0], -r4
   1a12c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a130:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a134:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a138:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a13c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a140:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a144:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a148:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a14c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a150:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a154:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a158:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a15c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a160:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a164:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a168:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a16c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a170:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a174:	ldrdeq	r0, [r0], -r4
   1a178:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a17c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a180:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a184:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a188:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a18c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a190:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a194:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a198:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a19c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1b0:	ldrdeq	r0, [r0], -r4
   1a1b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a1e8:	andeq	r0, r0, r8, ror #1
   1a1ec:	add	lr, lr, #1
   1a1f0:	cmp	r2, lr
   1a1f4:	bne	1a0fc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x28>
   1a1f8:	str	r2, [r1]
   1a1fc:	pop	{r4, sl, fp, pc}
   1a200:	add	lr, lr, #1
   1a204:	mov	r0, #1
   1a208:	str	lr, [r1]
   1a20c:	pop	{r4, sl, fp, pc}

0001a210 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   1a210:	push	{r4, r5, r6, sl, fp, lr}
   1a214:	add	fp, sp, #16
   1a218:	ldr	ip, [fp, #8]
   1a21c:	mov	lr, r1
   1a220:	cmp	r1, r2
   1a224:	bcs	1a338 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x128>
   1a228:	add	r1, r0, lr
   1a22c:	rsb	r4, r2, #0
   1a230:	ldrb	r5, [r0, lr]
   1a234:	sub	r5, r5, #9
   1a238:	cmp	r5, #53	; 0x35
   1a23c:	bhi	1a348 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x138>
   1a240:	add	r6, pc, #4
   1a244:	ldr	r5, [r6, r5, lsl #2]
   1a248:	add	pc, r6, r5
   1a24c:	ldrdeq	r0, [r0], -r8
   1a250:	ldrdeq	r0, [r0], -r8
   1a254:	strdeq	r0, [r0], -ip
   1a258:	ldrdeq	r0, [r0], -r8
   1a25c:	ldrdeq	r0, [r0], -r8
   1a260:	strdeq	r0, [r0], -ip
   1a264:	strdeq	r0, [r0], -ip
   1a268:	strdeq	r0, [r0], -ip
   1a26c:	strdeq	r0, [r0], -ip
   1a270:	strdeq	r0, [r0], -ip
   1a274:	strdeq	r0, [r0], -ip
   1a278:	strdeq	r0, [r0], -ip
   1a27c:	strdeq	r0, [r0], -ip
   1a280:	strdeq	r0, [r0], -ip
   1a284:	strdeq	r0, [r0], -ip
   1a288:	strdeq	r0, [r0], -ip
   1a28c:	strdeq	r0, [r0], -ip
   1a290:	strdeq	r0, [r0], -ip
   1a294:	strdeq	r0, [r0], -ip
   1a298:	strdeq	r0, [r0], -ip
   1a29c:	strdeq	r0, [r0], -ip
   1a2a0:	strdeq	r0, [r0], -ip
   1a2a4:	strdeq	r0, [r0], -ip
   1a2a8:	ldrdeq	r0, [r0], -r8
   1a2ac:	strdeq	r0, [r0], -ip
   1a2b0:	andeq	r0, r0, r8, lsr r2
   1a2b4:	strdeq	r0, [r0], -ip
   1a2b8:	strdeq	r0, [r0], -ip
   1a2bc:	strdeq	r0, [r0], -ip
   1a2c0:	strdeq	r0, [r0], -ip
   1a2c4:	andeq	r0, r0, r8, ror r2
   1a2c8:	strdeq	r0, [r0], -ip
   1a2cc:	strdeq	r0, [r0], -ip
   1a2d0:	strdeq	r0, [r0], -ip
   1a2d4:	strdeq	r0, [r0], -ip
   1a2d8:	strdeq	r0, [r0], -ip
   1a2dc:	strdeq	r0, [r0], -ip
   1a2e0:	strdeq	r0, [r0], -ip
   1a2e4:	strdeq	r0, [r0], -ip
   1a2e8:	strdeq	r0, [r0], -ip
   1a2ec:	strdeq	r0, [r0], -ip
   1a2f0:	strdeq	r0, [r0], -ip
   1a2f4:	strdeq	r0, [r0], -ip
   1a2f8:	strdeq	r0, [r0], -ip
   1a2fc:	strdeq	r0, [r0], -ip
   1a300:	strdeq	r0, [r0], -ip
   1a304:	strdeq	r0, [r0], -ip
   1a308:	strdeq	r0, [r0], -ip
   1a30c:	strdeq	r0, [r0], -ip
   1a310:	strdeq	r0, [r0], -ip
   1a314:	strdeq	r0, [r0], -ip
   1a318:	strdeq	r0, [r0], -ip
   1a31c:	strdeq	r0, [r0], -ip
   1a320:			; <UNDEFINED> instruction: 0x000002b8
   1a324:	add	lr, lr, #1
   1a328:	add	r1, r1, #1
   1a32c:	adds	r5, r4, lr
   1a330:	bne	1a230 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x20>
   1a334:	mov	lr, r2
   1a338:	mov	r0, #1
   1a33c:	strb	r0, [ip]
   1a340:	mov	r0, lr
   1a344:	pop	{r4, r5, r6, sl, fp, pc}
   1a348:	cmp	lr, r2
   1a34c:	str	lr, [r3, #8]
   1a350:	bcs	1a52c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x31c>
   1a354:	sub	r4, lr, r2
   1a358:	mov	r0, #0
   1a35c:	ldrb	r6, [r1, -r0]
   1a360:	sub	r5, r6, #9
   1a364:	cmp	r5, #53	; 0x35
   1a368:	bls	1a388 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x178>
   1a36c:	sub	r0, r0, #1
   1a370:	cmp	r4, r0
   1a374:	beq	1a554 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x344>
   1a378:	ldrb	r6, [r1, -r0]
   1a37c:	sub	r5, r6, #9
   1a380:	cmp	r5, #53	; 0x35
   1a384:	bhi	1a36c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   1a388:	add	r6, pc, #4
   1a38c:	ldr	r5, [r6, r5, lsl #2]
   1a390:	add	pc, r6, r5
   1a394:	ldrdeq	r0, [r0], -r8
   1a398:	ldrdeq	r0, [r0], -r8
   1a39c:			; <UNDEFINED> instruction: 0xffffffd8
   1a3a0:	ldrdeq	r0, [r0], -r8
   1a3a4:	ldrdeq	r0, [r0], -r8
   1a3a8:			; <UNDEFINED> instruction: 0xffffffd8
   1a3ac:			; <UNDEFINED> instruction: 0xffffffd8
   1a3b0:			; <UNDEFINED> instruction: 0xffffffd8
   1a3b4:			; <UNDEFINED> instruction: 0xffffffd8
   1a3b8:			; <UNDEFINED> instruction: 0xffffffd8
   1a3bc:			; <UNDEFINED> instruction: 0xffffffd8
   1a3c0:			; <UNDEFINED> instruction: 0xffffffd8
   1a3c4:			; <UNDEFINED> instruction: 0xffffffd8
   1a3c8:			; <UNDEFINED> instruction: 0xffffffd8
   1a3cc:			; <UNDEFINED> instruction: 0xffffffd8
   1a3d0:			; <UNDEFINED> instruction: 0xffffffd8
   1a3d4:			; <UNDEFINED> instruction: 0xffffffd8
   1a3d8:			; <UNDEFINED> instruction: 0xffffffd8
   1a3dc:			; <UNDEFINED> instruction: 0xffffffd8
   1a3e0:			; <UNDEFINED> instruction: 0xffffffd8
   1a3e4:			; <UNDEFINED> instruction: 0xffffffd8
   1a3e8:			; <UNDEFINED> instruction: 0xffffffd8
   1a3ec:			; <UNDEFINED> instruction: 0xffffffd8
   1a3f0:	ldrdeq	r0, [r0], -r8
   1a3f4:			; <UNDEFINED> instruction: 0xffffffd8
   1a3f8:			; <UNDEFINED> instruction: 0xffffffd8
   1a3fc:			; <UNDEFINED> instruction: 0xffffffd8
   1a400:			; <UNDEFINED> instruction: 0xffffffd8
   1a404:			; <UNDEFINED> instruction: 0xffffffd8
   1a408:			; <UNDEFINED> instruction: 0xffffffd8
   1a40c:			; <UNDEFINED> instruction: 0xffffffd8
   1a410:			; <UNDEFINED> instruction: 0xffffffd8
   1a414:			; <UNDEFINED> instruction: 0xffffffd8
   1a418:			; <UNDEFINED> instruction: 0xffffffd8
   1a41c:			; <UNDEFINED> instruction: 0xffffffd8
   1a420:			; <UNDEFINED> instruction: 0xffffffd8
   1a424:			; <UNDEFINED> instruction: 0xffffffd8
   1a428:			; <UNDEFINED> instruction: 0xffffffd8
   1a42c:			; <UNDEFINED> instruction: 0xffffffd8
   1a430:			; <UNDEFINED> instruction: 0xffffffd8
   1a434:			; <UNDEFINED> instruction: 0xffffffd8
   1a438:			; <UNDEFINED> instruction: 0xffffffd8
   1a43c:			; <UNDEFINED> instruction: 0xffffffd8
   1a440:			; <UNDEFINED> instruction: 0xffffffd8
   1a444:			; <UNDEFINED> instruction: 0xffffffd8
   1a448:			; <UNDEFINED> instruction: 0xffffffd8
   1a44c:			; <UNDEFINED> instruction: 0xffffffd8
   1a450:			; <UNDEFINED> instruction: 0xffffffd8
   1a454:			; <UNDEFINED> instruction: 0xffffffd8
   1a458:			; <UNDEFINED> instruction: 0xffffffd8
   1a45c:			; <UNDEFINED> instruction: 0xffffffd8
   1a460:			; <UNDEFINED> instruction: 0xffffffd8
   1a464:			; <UNDEFINED> instruction: 0xffffffd8
   1a468:	ldrdeq	r0, [r0], -r8
   1a46c:	rsb	r1, r0, #0
   1a470:	sub	r0, lr, r0
   1a474:	add	lr, r0, #1
   1a478:	str	r1, [r3, #12]
   1a47c:	mov	r0, lr
   1a480:	pop	{r4, r5, r6, sl, fp, pc}
   1a484:	add	ip, lr, #1
   1a488:	cmp	ip, r2
   1a48c:	str	ip, [r3, #8]
   1a490:	bcs	1a518 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x308>
   1a494:	sub	r4, lr, r2
   1a498:	mov	r1, #0
   1a49c:	add	r5, r0, r1
   1a4a0:	add	r5, r5, lr
   1a4a4:	ldrb	r5, [r5, #1]
   1a4a8:	cmp	r5, #34	; 0x22
   1a4ac:	beq	1a540 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x330>
   1a4b0:	add	r5, r4, r1
   1a4b4:	add	r1, r1, #1
   1a4b8:	cmn	r5, #2
   1a4bc:	bne	1a49c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x28c>
   1a4c0:	b	1a558 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x348>
   1a4c4:	add	ip, lr, #1
   1a4c8:	cmp	ip, r2
   1a4cc:	str	ip, [r3, #8]
   1a4d0:	bcs	1a518 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x308>
   1a4d4:	sub	r4, lr, r2
   1a4d8:	mov	r1, #0
   1a4dc:	add	r5, r0, r1
   1a4e0:	add	r5, r5, lr
   1a4e4:	ldrb	r5, [r5, #1]
   1a4e8:	cmp	r5, #39	; 0x27
   1a4ec:	beq	1a540 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x330>
   1a4f0:	add	r5, r4, r1
   1a4f4:	add	r1, r1, #1
   1a4f8:	cmn	r5, #2
   1a4fc:	bne	1a4dc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2cc>
   1a500:	b	1a558 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x348>
   1a504:	mov	r0, #1
   1a508:	add	lr, lr, #1
   1a50c:	strb	r0, [ip]
   1a510:	mov	r0, lr
   1a514:	pop	{r4, r5, r6, sl, fp, pc}
   1a518:	mov	lr, ip
   1a51c:	sub	r0, lr, ip
   1a520:	str	r0, [r3, #12]
   1a524:	mov	r0, lr
   1a528:	pop	{r4, r5, r6, sl, fp, pc}
   1a52c:	mov	ip, lr
   1a530:	sub	r0, lr, ip
   1a534:	str	r0, [r3, #12]
   1a538:	mov	r0, lr
   1a53c:	pop	{r4, r5, r6, sl, fp, pc}
   1a540:	add	r0, lr, r1
   1a544:	str	r1, [r3, #12]
   1a548:	add	lr, r0, #2
   1a54c:	mov	r0, lr
   1a550:	pop	{r4, r5, r6, sl, fp, pc}
   1a554:	mov	ip, lr
   1a558:	mov	lr, r2
   1a55c:	sub	r0, lr, ip
   1a560:	str	r0, [r3, #12]
   1a564:	mov	r0, lr
   1a568:	pop	{r4, r5, r6, sl, fp, pc}

0001a56c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   1a56c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a570:	add	fp, sp, #24
   1a574:	vmov.i32	q8, #0	; 0x00000000
   1a578:	mov	r7, r3
   1a57c:	mov	r6, #0
   1a580:	cmp	r1, r2
   1a584:	vst1.32	{d16-d17}, [r7]!
   1a588:	str	r6, [r7]
   1a58c:	ldr	lr, [fp, #8]
   1a590:	bcs	1a6a8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x13c>
   1a594:	ldrb	r7, [r0, r1]
   1a598:	sub	r7, r7, #9
   1a59c:	cmp	r7, #53	; 0x35
   1a5a0:	bhi	1a6bc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x150>
   1a5a4:	add	r6, pc, #4
   1a5a8:	ldr	r7, [r6, r7, lsl #2]
   1a5ac:	add	pc, r6, r7
   1a5b0:	ldrdeq	r0, [r0], -r8
   1a5b4:	ldrdeq	r0, [r0], -r8
   1a5b8:	andeq	r0, r0, ip, lsl #2
   1a5bc:	ldrdeq	r0, [r0], -r8
   1a5c0:	ldrdeq	r0, [r0], -r8
   1a5c4:	andeq	r0, r0, ip, lsl #2
   1a5c8:	andeq	r0, r0, ip, lsl #2
   1a5cc:	andeq	r0, r0, ip, lsl #2
   1a5d0:	andeq	r0, r0, ip, lsl #2
   1a5d4:	andeq	r0, r0, ip, lsl #2
   1a5d8:	andeq	r0, r0, ip, lsl #2
   1a5dc:	andeq	r0, r0, ip, lsl #2
   1a5e0:	andeq	r0, r0, ip, lsl #2
   1a5e4:	andeq	r0, r0, ip, lsl #2
   1a5e8:	andeq	r0, r0, ip, lsl #2
   1a5ec:	andeq	r0, r0, ip, lsl #2
   1a5f0:	andeq	r0, r0, ip, lsl #2
   1a5f4:	andeq	r0, r0, ip, lsl #2
   1a5f8:	andeq	r0, r0, ip, lsl #2
   1a5fc:	andeq	r0, r0, ip, lsl #2
   1a600:	andeq	r0, r0, ip, lsl #2
   1a604:	andeq	r0, r0, ip, lsl #2
   1a608:	andeq	r0, r0, ip, lsl #2
   1a60c:	ldrdeq	r0, [r0], -r8
   1a610:	andeq	r0, r0, ip, lsl #2
   1a614:	andeq	r0, r0, ip, lsl #2
   1a618:	andeq	r0, r0, ip, lsl #2
   1a61c:	andeq	r0, r0, ip, lsl #2
   1a620:	andeq	r0, r0, ip, lsl #2
   1a624:	andeq	r0, r0, ip, lsl #2
   1a628:	andeq	r0, r0, ip, lsl #2
   1a62c:	andeq	r0, r0, ip, lsl #2
   1a630:	andeq	r0, r0, ip, lsl #2
   1a634:	andeq	r0, r0, ip, lsl #2
   1a638:	andeq	r0, r0, ip, lsl #2
   1a63c:	andeq	r0, r0, ip, lsl #2
   1a640:	andeq	r0, r0, ip, lsl #2
   1a644:	andeq	r0, r0, ip, lsl #2
   1a648:	ldrdeq	r0, [r0], -r8
   1a64c:	andeq	r0, r0, ip, lsl #2
   1a650:	andeq	r0, r0, ip, lsl #2
   1a654:	andeq	r0, r0, ip, lsl #2
   1a658:	andeq	r0, r0, ip, lsl #2
   1a65c:	andeq	r0, r0, ip, lsl #2
   1a660:	andeq	r0, r0, ip, lsl #2
   1a664:	andeq	r0, r0, ip, lsl #2
   1a668:	andeq	r0, r0, ip, lsl #2
   1a66c:	andeq	r0, r0, ip, lsl #2
   1a670:	andeq	r0, r0, ip, lsl #2
   1a674:	andeq	r0, r0, ip, lsl #2
   1a678:	andeq	r0, r0, ip, lsl #2
   1a67c:	andeq	r0, r0, ip, lsl #2
   1a680:	andeq	r0, r0, ip, lsl #2
   1a684:	andeq	r0, r0, r4, ror #6
   1a688:	add	r1, r1, #1
   1a68c:	cmp	r1, r2
   1a690:	bne	1a594 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28>
   1a694:	mov	ip, r2
   1a698:	mov	r0, #1
   1a69c:	strb	r0, [lr]
   1a6a0:	mov	r0, ip
   1a6a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a6a8:	mov	ip, r1
   1a6ac:	mov	r0, #1
   1a6b0:	strb	r0, [lr]
   1a6b4:	mov	r0, ip
   1a6b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a6bc:	cmp	r1, r2
   1a6c0:	mov	ip, r1
   1a6c4:	str	r1, [r3]
   1a6c8:	bcs	1a92c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3c0>
   1a6cc:	add	r9, r0, r1
   1a6d0:	sub	r6, r1, r2
   1a6d4:	mov	r4, #0
   1a6d8:	ldrb	r7, [r9, r4]
   1a6dc:	sub	r7, r7, #9
   1a6e0:	cmp	r7, #53	; 0x35
   1a6e4:	bls	1a704 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x198>
   1a6e8:	add	r4, r4, #1
   1a6ec:	adds	r7, r6, r4
   1a6f0:	beq	1a928 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3bc>
   1a6f4:	ldrb	r7, [r9, r4]
   1a6f8:	sub	r7, r7, #9
   1a6fc:	cmp	r7, #53	; 0x35
   1a700:	bhi	1a6e8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x17c>
   1a704:	add	r5, pc, #4
   1a708:	ldr	r7, [r5, r7, lsl #2]
   1a70c:	add	pc, r5, r7
   1a710:	ldrdeq	r0, [r0], -r8
   1a714:	ldrdeq	r0, [r0], -r8
   1a718:			; <UNDEFINED> instruction: 0xffffffd8
   1a71c:	ldrdeq	r0, [r0], -r8
   1a720:	ldrdeq	r0, [r0], -r8
   1a724:			; <UNDEFINED> instruction: 0xffffffd8
   1a728:			; <UNDEFINED> instruction: 0xffffffd8
   1a72c:			; <UNDEFINED> instruction: 0xffffffd8
   1a730:			; <UNDEFINED> instruction: 0xffffffd8
   1a734:			; <UNDEFINED> instruction: 0xffffffd8
   1a738:			; <UNDEFINED> instruction: 0xffffffd8
   1a73c:			; <UNDEFINED> instruction: 0xffffffd8
   1a740:			; <UNDEFINED> instruction: 0xffffffd8
   1a744:			; <UNDEFINED> instruction: 0xffffffd8
   1a748:			; <UNDEFINED> instruction: 0xffffffd8
   1a74c:			; <UNDEFINED> instruction: 0xffffffd8
   1a750:			; <UNDEFINED> instruction: 0xffffffd8
   1a754:			; <UNDEFINED> instruction: 0xffffffd8
   1a758:			; <UNDEFINED> instruction: 0xffffffd8
   1a75c:			; <UNDEFINED> instruction: 0xffffffd8
   1a760:			; <UNDEFINED> instruction: 0xffffffd8
   1a764:			; <UNDEFINED> instruction: 0xffffffd8
   1a768:			; <UNDEFINED> instruction: 0xffffffd8
   1a76c:	ldrdeq	r0, [r0], -r8
   1a770:			; <UNDEFINED> instruction: 0xffffffd8
   1a774:			; <UNDEFINED> instruction: 0xffffffd8
   1a778:			; <UNDEFINED> instruction: 0xffffffd8
   1a77c:			; <UNDEFINED> instruction: 0xffffffd8
   1a780:			; <UNDEFINED> instruction: 0xffffffd8
   1a784:			; <UNDEFINED> instruction: 0xffffffd8
   1a788:			; <UNDEFINED> instruction: 0xffffffd8
   1a78c:			; <UNDEFINED> instruction: 0xffffffd8
   1a790:			; <UNDEFINED> instruction: 0xffffffd8
   1a794:			; <UNDEFINED> instruction: 0xffffffd8
   1a798:			; <UNDEFINED> instruction: 0xffffffd8
   1a79c:			; <UNDEFINED> instruction: 0xffffffd8
   1a7a0:			; <UNDEFINED> instruction: 0xffffffd8
   1a7a4:			; <UNDEFINED> instruction: 0xffffffd8
   1a7a8:	andeq	r0, r0, r4, lsr r2
   1a7ac:			; <UNDEFINED> instruction: 0xffffffd8
   1a7b0:			; <UNDEFINED> instruction: 0xffffffd8
   1a7b4:			; <UNDEFINED> instruction: 0xffffffd8
   1a7b8:			; <UNDEFINED> instruction: 0xffffffd8
   1a7bc:			; <UNDEFINED> instruction: 0xffffffd8
   1a7c0:			; <UNDEFINED> instruction: 0xffffffd8
   1a7c4:			; <UNDEFINED> instruction: 0xffffffd8
   1a7c8:			; <UNDEFINED> instruction: 0xffffffd8
   1a7cc:			; <UNDEFINED> instruction: 0xffffffd8
   1a7d0:			; <UNDEFINED> instruction: 0xffffffd8
   1a7d4:			; <UNDEFINED> instruction: 0xffffffd8
   1a7d8:			; <UNDEFINED> instruction: 0xffffffd8
   1a7dc:			; <UNDEFINED> instruction: 0xffffffd8
   1a7e0:	andeq	r0, r0, r0, asr r2
   1a7e4:	andeq	r0, r0, r4, lsr r2
   1a7e8:	add	r8, r1, r4
   1a7ec:	add	r7, r4, #1
   1a7f0:	add	ip, r8, #1
   1a7f4:	str	r7, [r3, #4]
   1a7f8:	cmp	ip, r2
   1a7fc:	bcs	1a6ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x140>
   1a800:	add	r1, r6, r4
   1a804:	mov	r6, #0
   1a808:	add	r7, r9, r6
   1a80c:	add	r7, r7, r4
   1a810:	ldrb	r7, [r7, #1]
   1a814:	sub	r7, r7, #9
   1a818:	cmp	r7, #52	; 0x34
   1a81c:	bhi	1a97c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x410>
   1a820:	add	r5, pc, #4
   1a824:	ldr	r7, [r5, r7, lsl #2]
   1a828:	add	pc, r5, r7
   1a82c:	ldrdeq	r0, [r0], -r4
   1a830:	ldrdeq	r0, [r0], -r4
   1a834:	andeq	r0, r0, r0, asr r1
   1a838:	ldrdeq	r0, [r0], -r4
   1a83c:	ldrdeq	r0, [r0], -r4
   1a840:	andeq	r0, r0, r0, asr r1
   1a844:	andeq	r0, r0, r0, asr r1
   1a848:	andeq	r0, r0, r0, asr r1
   1a84c:	andeq	r0, r0, r0, asr r1
   1a850:	andeq	r0, r0, r0, asr r1
   1a854:	andeq	r0, r0, r0, asr r1
   1a858:	andeq	r0, r0, r0, asr r1
   1a85c:	andeq	r0, r0, r0, asr r1
   1a860:	andeq	r0, r0, r0, asr r1
   1a864:	andeq	r0, r0, r0, asr r1
   1a868:	andeq	r0, r0, r0, asr r1
   1a86c:	andeq	r0, r0, r0, asr r1
   1a870:	andeq	r0, r0, r0, asr r1
   1a874:	andeq	r0, r0, r0, asr r1
   1a878:	andeq	r0, r0, r0, asr r1
   1a87c:	andeq	r0, r0, r0, asr r1
   1a880:	andeq	r0, r0, r0, asr r1
   1a884:	andeq	r0, r0, r0, asr r1
   1a888:	ldrdeq	r0, [r0], -r4
   1a88c:	andeq	r0, r0, r0, asr r1
   1a890:	andeq	r0, r0, r0, asr r1
   1a894:	andeq	r0, r0, r0, asr r1
   1a898:	andeq	r0, r0, r0, asr r1
   1a89c:	andeq	r0, r0, r0, asr r1
   1a8a0:	andeq	r0, r0, r0, asr r1
   1a8a4:	andeq	r0, r0, r0, asr r1
   1a8a8:	andeq	r0, r0, r0, asr r1
   1a8ac:	andeq	r0, r0, r0, asr r1
   1a8b0:	andeq	r0, r0, r0, asr r1
   1a8b4:	andeq	r0, r0, r0, asr r1
   1a8b8:	andeq	r0, r0, r0, asr r1
   1a8bc:	andeq	r0, r0, r0, asr r1
   1a8c0:	andeq	r0, r0, r0, asr r1
   1a8c4:	ldrdeq	r0, [r0], -r4
   1a8c8:	andeq	r0, r0, r0, asr r1
   1a8cc:	andeq	r0, r0, r0, asr r1
   1a8d0:	andeq	r0, r0, r0, asr r1
   1a8d4:	andeq	r0, r0, r0, asr r1
   1a8d8:	andeq	r0, r0, r0, asr r1
   1a8dc:	andeq	r0, r0, r0, asr r1
   1a8e0:	andeq	r0, r0, r0, asr r1
   1a8e4:	andeq	r0, r0, r0, asr r1
   1a8e8:	andeq	r0, r0, r0, asr r1
   1a8ec:	andeq	r0, r0, r0, asr r1
   1a8f0:	andeq	r0, r0, r0, asr r1
   1a8f4:	andeq	r0, r0, r0, asr r1
   1a8f8:	andeq	r0, r0, r0, asr r1
   1a8fc:	andeq	r0, r0, r8, ror #2
   1a900:	add	r7, r1, r6
   1a904:	add	r6, r6, #1
   1a908:	cmn	r7, #2
   1a90c:	bne	1a808 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x29c>
   1a910:	b	1a694 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x128>
   1a914:	mov	r0, #1
   1a918:	add	ip, r1, #1
   1a91c:	strb	r0, [lr]
   1a920:	mov	r0, ip
   1a924:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a928:	mov	ip, r2
   1a92c:	sub	r0, ip, r1
   1a930:	str	r0, [r3, #4]
   1a934:	mov	r0, #1
   1a938:	strb	r0, [lr]
   1a93c:	mov	r0, ip
   1a940:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a944:	mov	r0, #1
   1a948:	strb	r0, [lr]
   1a94c:	add	r0, r1, r4
   1a950:	str	r4, [r3, #4]
   1a954:	add	ip, r0, #1
   1a958:	mov	r0, ip
   1a95c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a960:	cmp	r4, #1
   1a964:	beq	1a7e8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x27c>
   1a968:	add	r1, r1, r4
   1a96c:	str	r4, [r3, #4]
   1a970:	add	r1, r1, #1
   1a974:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a978:	b	1a210 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>
   1a97c:	add	r0, r8, r6
   1a980:	add	ip, r0, #1
   1a984:	mov	r0, #1
   1a988:	strb	r0, [lr]
   1a98c:	mov	r0, ip
   1a990:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a994:	add	r1, r8, r6
   1a998:	add	r1, r1, #2
   1a99c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a9a0:	b	1a210 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>

0001a9a4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   1a9a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9a8:	add	fp, sp, #28
   1a9ac:	sub	sp, sp, #44	; 0x2c
   1a9b0:	mov	r8, r0
   1a9b4:	mov	sl, #0
   1a9b8:	mov	r0, #0
   1a9bc:	mov	r9, r3
   1a9c0:	mov	r5, r2
   1a9c4:	mov	r6, r1
   1a9c8:	add	r7, sp, #23
   1a9cc:	mov	r4, #0
   1a9d0:	strb	sl, [sp, #23]
   1a9d4:	str	r0, [sp, #16]
   1a9d8:	ldr	r1, [r6]
   1a9dc:	cmp	r1, r5
   1a9e0:	bcc	1aa38 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x94>
   1a9e4:	b	1ac88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   1a9e8:	ldr	r0, [sp, #32]
   1a9ec:	ldr	r2, [fp, #12]
   1a9f0:	ldr	r1, [sp, #36]	; 0x24
   1a9f4:	ldr	r3, [fp, #8]
   1a9f8:	str	r2, [sp]
   1a9fc:	add	r0, r8, r0
   1aa00:	mov	r2, r9
   1aa04:	bl	11684 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   1aa08:	cmp	r0, #0
   1aa0c:	ldr	r0, [sp, #16]
   1aa10:	orr	r4, r4, #2
   1aa14:	add	r7, sp, #23
   1aa18:	movwne	r0, #2
   1aa1c:	str	r0, [sp, #16]
   1aa20:	ldrb	r0, [sp, #23]
   1aa24:	cmp	r0, #0
   1aa28:	bne	1ac88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   1aa2c:	ldr	r1, [r6]
   1aa30:	cmp	r1, r5
   1aa34:	bcs	1ac88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   1aa38:	mov	r0, r8
   1aa3c:	mov	r2, r5
   1aa40:	add	r3, sp, #24
   1aa44:	str	r7, [sp]
   1aa48:	bl	119d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1aa4c:	str	r0, [r6]
   1aa50:	ldr	r0, [sp, #28]
   1aa54:	cmp	r0, #7
   1aa58:	beq	1aac0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x11c>
   1aa5c:	cmp	r0, #10
   1aa60:	bne	1aa20 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   1aa64:	ldr	r0, [sp, #24]
   1aa68:	add	r1, r8, r0
   1aa6c:	ldr	r0, [pc, #624]	; 1ace4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x340>
   1aa70:	add	r0, pc, r0
   1aa74:	bl	10e68 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1aa78:	tst	r4, #1
   1aa7c:	bne	1aa20 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   1aa80:	cmp	r0, #0
   1aa84:	beq	1aa20 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   1aa88:	ldr	r0, [sp, #36]	; 0x24
   1aa8c:	orr	r4, r4, #1
   1aa90:	cmp	r0, #12
   1aa94:	bne	1aa20 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   1aa98:	ldr	r0, [sp, #32]
   1aa9c:	add	r1, r8, r0
   1aaa0:	ldr	r0, [pc, #576]	; 1ace8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x344>
   1aaa4:	add	r0, pc, r0
   1aaa8:	bl	10e68 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1aaac:	orr	sl, sl, r0
   1aab0:	ldrb	r0, [sp, #23]
   1aab4:	cmp	r0, #0
   1aab8:	beq	1aa2c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x88>
   1aabc:	b	1ac88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   1aac0:	ldr	r0, [sp, #24]
   1aac4:	add	r7, r8, r0
   1aac8:	ldr	r0, [pc, #540]	; 1acec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x348>
   1aacc:	mov	r1, r7
   1aad0:	add	r0, pc, r0
   1aad4:	bl	10e68 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1aad8:	cmp	r0, #0
   1aadc:	beq	1aafc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x158>
   1aae0:	tst	r4, #2
   1aae4:	beq	1a9e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x44>
   1aae8:	add	r7, sp, #23
   1aaec:	ldrb	r0, [sp, #23]
   1aaf0:	cmp	r0, #0
   1aaf4:	beq	1aa2c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x88>
   1aaf8:	b	1ac88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   1aafc:	ldr	r0, [pc, #492]	; 1acf0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34c>
   1ab00:	mov	r1, r7
   1ab04:	add	r0, pc, r0
   1ab08:	bl	10e68 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1ab0c:	tst	r4, #4
   1ab10:	bne	1ac30 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x28c>
   1ab14:	ldr	r1, [fp, #12]
   1ab18:	cmp	r0, #0
   1ab1c:	add	r7, sp, #23
   1ab20:	beq	1aa20 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   1ab24:	ldr	r2, [fp, #8]
   1ab28:	str	sl, [sp, #12]
   1ab2c:	mov	r7, r8
   1ab30:	orr	r4, r4, #4
   1ab34:	cmp	r2, #0
   1ab38:	ldrne	r0, [sp, #32]
   1ab3c:	addne	r0, r8, r0
   1ab40:	strne	r0, [r2]
   1ab44:	cmp	r1, #0
   1ab48:	ldr	sl, [sp, #36]	; 0x24
   1ab4c:	strne	sl, [r1]
   1ab50:	ldr	r0, [sp, #32]
   1ab54:	ldrb	r0, [r7, r0]!
   1ab58:	add	r1, sl, r7
   1ab5c:	ldrb	r1, [r1, #-1]
   1ab60:	ldr	r2, [pc, #396]	; 1acf4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x350>
   1ab64:	add	r2, pc, r2
   1ab68:	ldrb	r0, [r2, r0]
   1ab6c:	ldrb	r1, [r2, r1]
   1ab70:	mul	r0, sl, r0
   1ab74:	mul	r0, r0, r1
   1ab78:	movw	r1, #11575	; 0x2d37
   1ab7c:	movt	r1, #14546	; 0x38d2
   1ab80:	umull	r1, r2, r0, r1
   1ab84:	sub	r1, r0, r2
   1ab88:	add	r1, r2, r1, lsr #1
   1ab8c:	movw	r2, #419	; 0x1a3
   1ab90:	lsr	r1, r1, #8
   1ab94:	mls	r0, r1, r2, r0
   1ab98:	ldr	r2, [pc, #344]	; 1acf8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x354>
   1ab9c:	add	r1, r0, #1
   1aba0:	rsb	r0, r1, r1, lsl #3
   1aba4:	add	r2, pc, r2
   1aba8:	add	r0, r2, r0, lsl #2
   1abac:	mov	r2, #1
   1abb0:	str	r2, [sp, #16]
   1abb4:	ldr	r0, [r0, #8]
   1abb8:	cmp	r0, #0
   1abbc:	beq	1ac48 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2a4>
   1abc0:	str	r9, [sp, #8]
   1abc4:	ldr	r2, [pc, #304]	; 1acfc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x358>
   1abc8:	add	r2, pc, r2
   1abcc:	b	1abec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x248>
   1abd0:	ldr	r2, [pc, #296]	; 1ad00 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x35c>
   1abd4:	rsb	r0, r1, r1, lsl #3
   1abd8:	add	r2, pc, r2
   1abdc:	add	r0, r2, r0, lsl #2
   1abe0:	ldr	r0, [r0, #8]
   1abe4:	cmp	r0, #0
   1abe8:	beq	1ac44 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2a0>
   1abec:	rsb	r1, r1, r1, lsl #3
   1abf0:	add	r9, r2, r1, lsl #2
   1abf4:	ldr	r1, [r9, #12]
   1abf8:	cmp	r1, sl
   1abfc:	bne	1ac24 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x280>
   1ac00:	mov	r1, r7
   1ac04:	mov	r2, sl
   1ac08:	bl	11288 <mycore_strncasecmp@plt>
   1ac0c:	cmp	r0, #0
   1ac10:	beq	1ac60 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2bc>
   1ac14:	ldr	r1, [r9, #20]
   1ac18:	cmp	r1, #0
   1ac1c:	bne	1abd0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x22c>
   1ac20:	b	1ac44 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2a0>
   1ac24:	bhi	1ac44 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2a0>
   1ac28:	ldr	r1, [r9, #20]
   1ac2c:	b	1abd0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x22c>
   1ac30:	add	r7, sp, #23
   1ac34:	ldrb	r0, [sp, #23]
   1ac38:	cmp	r0, #0
   1ac3c:	beq	1aa2c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x88>
   1ac40:	b	1ac88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   1ac44:	ldr	r9, [sp, #8]
   1ac48:	ldr	sl, [sp, #12]
   1ac4c:	add	r7, sp, #23
   1ac50:	ldrb	r0, [sp, #23]
   1ac54:	cmp	r0, #0
   1ac58:	beq	1aa2c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x88>
   1ac5c:	b	1ac88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   1ac60:	ldr	r1, [sp, #8]
   1ac64:	ldr	sl, [sp, #12]
   1ac68:	add	r7, sp, #23
   1ac6c:	cmp	r1, #0
   1ac70:	ldrne	r0, [r9, #16]
   1ac74:	mov	r9, r1
   1ac78:	strne	r0, [r1]
   1ac7c:	ldrb	r0, [sp, #23]
   1ac80:	cmp	r0, #0
   1ac84:	beq	1aa2c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x88>
   1ac88:	ldr	r2, [sp, #16]
   1ac8c:	mov	r0, #0
   1ac90:	mov	r1, #2
   1ac94:	cmp	r2, #0
   1ac98:	beq	1acc0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x31c>
   1ac9c:	cmp	r2, #2
   1aca0:	tsteq	sl, #1
   1aca4:	beq	1acc0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x31c>
   1aca8:	ldr	r2, [r9]
   1acac:	bic	r0, r2, #1
   1acb0:	cmp	r0, #4
   1acb4:	bne	1accc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x328>
   1acb8:	mov	r0, #1
   1acbc:	mov	r1, #0
   1acc0:	str	r1, [r9]
   1acc4:	sub	sp, fp, #28
   1acc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1accc:	mov	r1, #33	; 0x21
   1acd0:	cmp	r2, #6
   1acd4:	mov	r0, #1
   1acd8:	streq	r1, [r9]
   1acdc:	sub	sp, fp, #28
   1ace0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ace4:	andeq	r5, r2, r0, ror r6
   1ace8:	andeq	r5, r2, r7, asr #12
   1acec:	andeq	r5, r2, r8, lsr #12
   1acf0:	ldrdeq	r5, [r2], -r4
   1acf4:	andeq	r5, r2, r4, ror r3
   1acf8:	andeq	sl, pc, r8, lsr r0	; <UNPREDICTABLE>
   1acfc:	andeq	sl, pc, r4, lsl r0	; <UNPREDICTABLE>
   1ad00:	andeq	sl, pc, r4

0001ad04 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   1ad04:	push	{r4, r5, r6, r7, fp, lr}
   1ad08:	add	fp, sp, #16
   1ad0c:	sub	sp, sp, #32
   1ad10:	cmp	r1, r2
   1ad14:	bcs	1ae6c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x168>
   1ad18:	mov	r4, r2
   1ad1c:	mov	r5, r0
   1ad20:	ldrb	r0, [r5, r1]
   1ad24:	sub	r0, r0, #9
   1ad28:	cmp	r0, #53	; 0x35
   1ad2c:	bhi	1ae30 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x12c>
   1ad30:	add	r2, pc, #4
   1ad34:	ldr	r0, [r2, r0, lsl #2]
   1ad38:	add	pc, r2, r0
   1ad3c:	ldrdeq	r0, [r0], -r8
   1ad40:	ldrdeq	r0, [r0], -r8
   1ad44:	strdeq	r0, [r0], -r4
   1ad48:	ldrdeq	r0, [r0], -r8
   1ad4c:	ldrdeq	r0, [r0], -r8
   1ad50:	strdeq	r0, [r0], -r4
   1ad54:	strdeq	r0, [r0], -r4
   1ad58:	strdeq	r0, [r0], -r4
   1ad5c:	strdeq	r0, [r0], -r4
   1ad60:	strdeq	r0, [r0], -r4
   1ad64:	strdeq	r0, [r0], -r4
   1ad68:	strdeq	r0, [r0], -r4
   1ad6c:	strdeq	r0, [r0], -r4
   1ad70:	strdeq	r0, [r0], -r4
   1ad74:	strdeq	r0, [r0], -r4
   1ad78:	strdeq	r0, [r0], -r4
   1ad7c:	strdeq	r0, [r0], -r4
   1ad80:	strdeq	r0, [r0], -r4
   1ad84:	strdeq	r0, [r0], -r4
   1ad88:	strdeq	r0, [r0], -r4
   1ad8c:	strdeq	r0, [r0], -r4
   1ad90:	strdeq	r0, [r0], -r4
   1ad94:	strdeq	r0, [r0], -r4
   1ad98:	ldrdeq	r0, [r0], -r8
   1ad9c:	strdeq	r0, [r0], -r4
   1ada0:	strdeq	r0, [r0], -r4
   1ada4:	strdeq	r0, [r0], -r4
   1ada8:	strdeq	r0, [r0], -r4
   1adac:	strdeq	r0, [r0], -r4
   1adb0:	strdeq	r0, [r0], -r4
   1adb4:	strdeq	r0, [r0], -r4
   1adb8:	strdeq	r0, [r0], -r4
   1adbc:	strdeq	r0, [r0], -r4
   1adc0:	strdeq	r0, [r0], -r4
   1adc4:	strdeq	r0, [r0], -r4
   1adc8:	strdeq	r0, [r0], -r4
   1adcc:	strdeq	r0, [r0], -r4
   1add0:	strdeq	r0, [r0], -r4
   1add4:	strdeq	r0, [r0], -r4
   1add8:	strdeq	r0, [r0], -r4
   1addc:	strdeq	r0, [r0], -r4
   1ade0:	strdeq	r0, [r0], -r4
   1ade4:	strdeq	r0, [r0], -r4
   1ade8:	strdeq	r0, [r0], -r4
   1adec:	strdeq	r0, [r0], -r4
   1adf0:	strdeq	r0, [r0], -r4
   1adf4:	strdeq	r0, [r0], -r4
   1adf8:	strdeq	r0, [r0], -r4
   1adfc:	strdeq	r0, [r0], -r4
   1ae00:	strdeq	r0, [r0], -r4
   1ae04:	strdeq	r0, [r0], -r4
   1ae08:	strdeq	r0, [r0], -r4
   1ae0c:	strdeq	r0, [r0], -r4
   1ae10:	andeq	r0, r0, ip, lsr r1
   1ae14:	add	r1, r1, #1
   1ae18:	cmp	r4, r1
   1ae1c:	bne	1ad20 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   1ae20:	mov	r1, r4
   1ae24:	mov	r0, r1
   1ae28:	sub	sp, fp, #16
   1ae2c:	pop	{r4, r5, r6, r7, fp, pc}
   1ae30:	mov	r0, #0
   1ae34:	add	r7, sp, #11
   1ae38:	add	r6, sp, #12
   1ae3c:	strb	r0, [sp, #11]
   1ae40:	cmp	r1, r4
   1ae44:	bcs	1ae6c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x168>
   1ae48:	mov	r0, r5
   1ae4c:	mov	r2, r4
   1ae50:	mov	r3, r6
   1ae54:	str	r7, [sp]
   1ae58:	bl	119d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1ae5c:	mov	r1, r0
   1ae60:	ldrb	r0, [sp, #11]
   1ae64:	cmp	r0, #0
   1ae68:	beq	1ae40 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x13c>
   1ae6c:	mov	r0, r1
   1ae70:	sub	sp, fp, #16
   1ae74:	pop	{r4, r5, r6, r7, fp, pc}
   1ae78:	add	r1, r1, #1
   1ae7c:	mov	r0, r1
   1ae80:	sub	sp, fp, #16
   1ae84:	pop	{r4, r5, r6, r7, fp, pc}

0001ae88 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   1ae88:	push	{r4, r5, r6, r7, fp, lr}
   1ae8c:	add	fp, sp, #16
   1ae90:	sub	sp, sp, #32
   1ae94:	mov	r5, r0
   1ae98:	ldrb	r0, [r0, r1]
   1ae9c:	mov	r4, r2
   1aea0:	cmp	r0, #33	; 0x21
   1aea4:	beq	1b054 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1cc>
   1aea8:	cmp	r0, #63	; 0x3f
   1aeac:	beq	1b0f8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x270>
   1aeb0:	cmp	r0, #47	; 0x2f
   1aeb4:	bne	1b118 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x290>
   1aeb8:	add	r2, r1, #1
   1aebc:	cmp	r2, r4
   1aec0:	bcs	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1aec4:	ldrb	r3, [r5, r2]
   1aec8:	ldr	r0, [pc, #972]	; 1b29c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x414>
   1aecc:	add	r0, pc, r0
   1aed0:	ldrb	r0, [r0, r3]
   1aed4:	cmp	r0, #1
   1aed8:	bne	1b038 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   1aedc:	add	r2, r1, #2
   1aee0:	mvn	r0, #8
   1aee4:	uxtab	r1, r0, r3
   1aee8:	cmp	r1, #53	; 0x35
   1aeec:	bhi	1aff0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x168>
   1aef0:	add	r3, pc, #4
   1aef4:	ldr	r1, [r3, r1, lsl #2]
   1aef8:	add	pc, r3, r1
   1aefc:	ldrdeq	r0, [r0], -r8
   1af00:	ldrdeq	r0, [r0], -r8
   1af04:	strdeq	r0, [r0], -r4
   1af08:	ldrdeq	r0, [r0], -r8
   1af0c:	ldrdeq	r0, [r0], -r8
   1af10:	strdeq	r0, [r0], -r4
   1af14:	strdeq	r0, [r0], -r4
   1af18:	strdeq	r0, [r0], -r4
   1af1c:	strdeq	r0, [r0], -r4
   1af20:	strdeq	r0, [r0], -r4
   1af24:	strdeq	r0, [r0], -r4
   1af28:	strdeq	r0, [r0], -r4
   1af2c:	strdeq	r0, [r0], -r4
   1af30:	strdeq	r0, [r0], -r4
   1af34:	strdeq	r0, [r0], -r4
   1af38:	strdeq	r0, [r0], -r4
   1af3c:	strdeq	r0, [r0], -r4
   1af40:	strdeq	r0, [r0], -r4
   1af44:	strdeq	r0, [r0], -r4
   1af48:	strdeq	r0, [r0], -r4
   1af4c:	strdeq	r0, [r0], -r4
   1af50:	strdeq	r0, [r0], -r4
   1af54:	strdeq	r0, [r0], -r4
   1af58:	ldrdeq	r0, [r0], -r8
   1af5c:	strdeq	r0, [r0], -r4
   1af60:	strdeq	r0, [r0], -r4
   1af64:	strdeq	r0, [r0], -r4
   1af68:	strdeq	r0, [r0], -r4
   1af6c:	strdeq	r0, [r0], -r4
   1af70:	strdeq	r0, [r0], -r4
   1af74:	strdeq	r0, [r0], -r4
   1af78:	strdeq	r0, [r0], -r4
   1af7c:	strdeq	r0, [r0], -r4
   1af80:	strdeq	r0, [r0], -r4
   1af84:	strdeq	r0, [r0], -r4
   1af88:	strdeq	r0, [r0], -r4
   1af8c:	strdeq	r0, [r0], -r4
   1af90:	strdeq	r0, [r0], -r4
   1af94:	strdeq	r0, [r0], -r4
   1af98:	strdeq	r0, [r0], -r4
   1af9c:	strdeq	r0, [r0], -r4
   1afa0:	strdeq	r0, [r0], -r4
   1afa4:	strdeq	r0, [r0], -r4
   1afa8:	strdeq	r0, [r0], -r4
   1afac:	strdeq	r0, [r0], -r4
   1afb0:	strdeq	r0, [r0], -r4
   1afb4:	strdeq	r0, [r0], -r4
   1afb8:	strdeq	r0, [r0], -r4
   1afbc:	strdeq	r0, [r0], -r4
   1afc0:	strdeq	r0, [r0], -r4
   1afc4:	strdeq	r0, [r0], -r4
   1afc8:	strdeq	r0, [r0], -r4
   1afcc:	strdeq	r0, [r0], -r4
   1afd0:	andeq	r0, r0, r4, lsl #7
   1afd4:	cmp	r4, r2
   1afd8:	beq	1b28c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x404>
   1afdc:	ldrb	r3, [r5, r2]
   1afe0:	add	r2, r2, #1
   1afe4:	uxtab	r1, r0, r3
   1afe8:	cmp	r1, #53	; 0x35
   1afec:	bls	1aef0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   1aff0:	mov	r0, #0
   1aff4:	sub	r2, r2, #1
   1aff8:	add	r7, sp, #11
   1affc:	add	r6, sp, #12
   1b000:	strb	r0, [sp, #11]
   1b004:	cmp	r2, r4
   1b008:	bcs	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b00c:	mov	r1, r2
   1b010:	mov	r0, r5
   1b014:	mov	r2, r4
   1b018:	mov	r3, r6
   1b01c:	str	r7, [sp]
   1b020:	bl	119d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1b024:	mov	r2, r0
   1b028:	ldrb	r0, [sp, #11]
   1b02c:	cmp	r0, #0
   1b030:	beq	1b004 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x17c>
   1b034:	b	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b038:	cmp	r2, r4
   1b03c:	bcs	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b040:	ldrb	r0, [r5, r2]
   1b044:	add	r2, r2, #1
   1b048:	cmp	r0, #62	; 0x3e
   1b04c:	beq	1b038 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   1b050:	b	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b054:	add	r0, r1, #3
   1b058:	add	r2, r1, #1
   1b05c:	cmp	r0, r4
   1b060:	bcs	1b0a0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x218>
   1b064:	ldrb	r0, [r5, r2]
   1b068:	cmp	r0, #45	; 0x2d
   1b06c:	bne	1b0a0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x218>
   1b070:	add	r0, r1, r5
   1b074:	ldrb	r0, [r0, #2]
   1b078:	cmp	r0, #45	; 0x2d
   1b07c:	bne	1b0a0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x218>
   1b080:	cmp	r2, r4
   1b084:	bcs	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b088:	add	r2, r1, #2
   1b08c:	mov	r0, #45	; 0x2d
   1b090:	uxtb	r0, r0
   1b094:	cmp	r0, #62	; 0x3e
   1b098:	beq	1b0ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x264>
   1b09c:	b	1b0d0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x248>
   1b0a0:	cmp	r2, r4
   1b0a4:	bcs	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b0a8:	ldrb	r0, [r5, r2]
   1b0ac:	add	r2, r2, #1
   1b0b0:	cmp	r0, #62	; 0x3e
   1b0b4:	beq	1b0a0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x218>
   1b0b8:	b	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b0bc:	ldrb	r0, [r5, r2]
   1b0c0:	add	r2, r2, #1
   1b0c4:	uxtb	r0, r0
   1b0c8:	cmp	r0, #62	; 0x3e
   1b0cc:	beq	1b0ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x264>
   1b0d0:	add	r0, r5, r2
   1b0d4:	ldrb	r1, [r0, #-2]
   1b0d8:	cmp	r1, #45	; 0x2d
   1b0dc:	bne	1b0ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x264>
   1b0e0:	ldrb	r0, [r0, #-3]
   1b0e4:	cmp	r0, #45	; 0x2d
   1b0e8:	beq	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b0ec:	cmp	r4, r2
   1b0f0:	bne	1b0bc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x234>
   1b0f4:	b	1b28c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x404>
   1b0f8:	add	r2, r1, #1
   1b0fc:	cmp	r2, r4
   1b100:	bcs	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b104:	ldrb	r0, [r5, r2]
   1b108:	add	r2, r2, #1
   1b10c:	cmp	r0, #62	; 0x3e
   1b110:	beq	1b0fc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x274>
   1b114:	b	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b118:	cmp	r1, r4
   1b11c:	bcs	1b27c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f4>
   1b120:	add	r2, r1, #1
   1b124:	mvn	r1, #8
   1b128:	uxtab	r0, r1, r0
   1b12c:	cmp	r0, #53	; 0x35
   1b130:	bhi	1b234 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3ac>
   1b134:	add	r3, pc, #4
   1b138:	ldr	r0, [r3, r0, lsl #2]
   1b13c:	add	pc, r3, r0
   1b140:	ldrdeq	r0, [r0], -r8
   1b144:	ldrdeq	r0, [r0], -r8
   1b148:	strdeq	r0, [r0], -r4
   1b14c:	ldrdeq	r0, [r0], -r8
   1b150:	ldrdeq	r0, [r0], -r8
   1b154:	strdeq	r0, [r0], -r4
   1b158:	strdeq	r0, [r0], -r4
   1b15c:	strdeq	r0, [r0], -r4
   1b160:	strdeq	r0, [r0], -r4
   1b164:	strdeq	r0, [r0], -r4
   1b168:	strdeq	r0, [r0], -r4
   1b16c:	strdeq	r0, [r0], -r4
   1b170:	strdeq	r0, [r0], -r4
   1b174:	strdeq	r0, [r0], -r4
   1b178:	strdeq	r0, [r0], -r4
   1b17c:	strdeq	r0, [r0], -r4
   1b180:	strdeq	r0, [r0], -r4
   1b184:	strdeq	r0, [r0], -r4
   1b188:	strdeq	r0, [r0], -r4
   1b18c:	strdeq	r0, [r0], -r4
   1b190:	strdeq	r0, [r0], -r4
   1b194:	strdeq	r0, [r0], -r4
   1b198:	strdeq	r0, [r0], -r4
   1b19c:	ldrdeq	r0, [r0], -r8
   1b1a0:	strdeq	r0, [r0], -r4
   1b1a4:	strdeq	r0, [r0], -r4
   1b1a8:	strdeq	r0, [r0], -r4
   1b1ac:	strdeq	r0, [r0], -r4
   1b1b0:	strdeq	r0, [r0], -r4
   1b1b4:	strdeq	r0, [r0], -r4
   1b1b8:	strdeq	r0, [r0], -r4
   1b1bc:	strdeq	r0, [r0], -r4
   1b1c0:	strdeq	r0, [r0], -r4
   1b1c4:	strdeq	r0, [r0], -r4
   1b1c8:	strdeq	r0, [r0], -r4
   1b1cc:	strdeq	r0, [r0], -r4
   1b1d0:	strdeq	r0, [r0], -r4
   1b1d4:	strdeq	r0, [r0], -r4
   1b1d8:	strdeq	r0, [r0], -r4
   1b1dc:	strdeq	r0, [r0], -r4
   1b1e0:	strdeq	r0, [r0], -r4
   1b1e4:	strdeq	r0, [r0], -r4
   1b1e8:	strdeq	r0, [r0], -r4
   1b1ec:	strdeq	r0, [r0], -r4
   1b1f0:	strdeq	r0, [r0], -r4
   1b1f4:	strdeq	r0, [r0], -r4
   1b1f8:	strdeq	r0, [r0], -r4
   1b1fc:	strdeq	r0, [r0], -r4
   1b200:	strdeq	r0, [r0], -r4
   1b204:	strdeq	r0, [r0], -r4
   1b208:	strdeq	r0, [r0], -r4
   1b20c:	strdeq	r0, [r0], -r4
   1b210:	strdeq	r0, [r0], -r4
   1b214:	andeq	r0, r0, r0, asr #2
   1b218:	cmp	r4, r2
   1b21c:	beq	1b28c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x404>
   1b220:	ldrb	r0, [r5, r2]
   1b224:	add	r2, r2, #1
   1b228:	uxtab	r0, r1, r0
   1b22c:	cmp	r0, #53	; 0x35
   1b230:	bls	1b134 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2ac>
   1b234:	mov	r0, #0
   1b238:	sub	r2, r2, #1
   1b23c:	add	r7, sp, #11
   1b240:	add	r6, sp, #12
   1b244:	strb	r0, [sp, #11]
   1b248:	cmp	r2, r4
   1b24c:	bcs	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b250:	mov	r1, r2
   1b254:	mov	r0, r5
   1b258:	mov	r2, r4
   1b25c:	mov	r3, r6
   1b260:	str	r7, [sp]
   1b264:	bl	119d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1b268:	mov	r2, r0
   1b26c:	ldrb	r0, [sp, #11]
   1b270:	cmp	r0, #0
   1b274:	beq	1b248 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3c0>
   1b278:	b	1b280 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f8>
   1b27c:	mov	r2, r1
   1b280:	mov	r0, r2
   1b284:	sub	sp, fp, #16
   1b288:	pop	{r4, r5, r6, r7, fp, pc}
   1b28c:	mov	r2, r4
   1b290:	mov	r0, r2
   1b294:	sub	sp, fp, #16
   1b298:	pop	{r4, r5, r6, r7, fp, pc}
   1b29c:	andeq	r5, r2, ip, lsl #2

0001b2a0 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   1b2a0:	mov	r2, #0
   1b2a4:	mov	r3, #0
   1b2a8:	b	1b2ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>

0001b2ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   1b2ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2b0:	add	fp, sp, #28
   1b2b4:	sub	sp, sp, #20
   1b2b8:	mov	r7, r0
   1b2bc:	mov	r0, #2
   1b2c0:	cmp	r2, #0
   1b2c4:	mov	r4, r3
   1b2c8:	mov	r5, r2
   1b2cc:	mov	r6, r1
   1b2d0:	mov	r9, #0
   1b2d4:	str	r0, [sp, #16]
   1b2d8:	movne	r0, #0
   1b2dc:	strne	r0, [r5]
   1b2e0:	cmp	r4, #0
   1b2e4:	movne	r0, #0
   1b2e8:	strne	r0, [r4]
   1b2ec:	cmp	r6, #0
   1b2f0:	str	r9, [sp, #12]
   1b2f4:	bne	1b314 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   1b2f8:	mov	r0, #2
   1b2fc:	sub	sp, fp, #28
   1b300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b304:	add	r9, sl, #1
   1b308:	str	r9, [sp, #12]
   1b30c:	cmp	r9, r6
   1b310:	bcs	1b48c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1b314:	ldrb	r0, [r7, r9]
   1b318:	mov	sl, r9
   1b31c:	cmp	r0, #60	; 0x3c
   1b320:	bne	1b304 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x58>
   1b324:	add	r8, sl, #5
   1b328:	cmp	r8, r6
   1b32c:	bcs	1b48c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1b330:	add	r9, sl, #1
   1b334:	mov	r1, r7
   1b338:	str	r9, [sp, #12]
   1b33c:	ldrb	r0, [r1, r9]!
   1b340:	orr	r0, r0, #32
   1b344:	cmp	r0, #109	; 0x6d
   1b348:	bne	1b45c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b0>
   1b34c:	ldr	r0, [pc, #324]	; 1b498 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1ec>
   1b350:	add	r0, pc, r0
   1b354:	bl	10e68 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1b358:	cmp	r0, #0
   1b35c:	beq	1b30c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x60>
   1b360:	str	r8, [sp, #12]
   1b364:	ldrb	r0, [r7, r8]
   1b368:	sub	r0, r0, #9
   1b36c:	cmp	r0, #38	; 0x26
   1b370:	bhi	1b480 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1d4>
   1b374:	add	r1, pc, #8
   1b378:	mov	r9, r8
   1b37c:	ldr	r0, [r1, r0, lsl #2]
   1b380:	add	pc, r1, r0
   1b384:	muleq	r0, ip, r0
   1b388:	muleq	r0, ip, r0
   1b38c:			; <UNDEFINED> instruction: 0xffffff88
   1b390:	muleq	r0, ip, r0
   1b394:	muleq	r0, ip, r0
   1b398:			; <UNDEFINED> instruction: 0xffffff88
   1b39c:			; <UNDEFINED> instruction: 0xffffff88
   1b3a0:			; <UNDEFINED> instruction: 0xffffff88
   1b3a4:			; <UNDEFINED> instruction: 0xffffff88
   1b3a8:			; <UNDEFINED> instruction: 0xffffff88
   1b3ac:			; <UNDEFINED> instruction: 0xffffff88
   1b3b0:			; <UNDEFINED> instruction: 0xffffff88
   1b3b4:			; <UNDEFINED> instruction: 0xffffff88
   1b3b8:			; <UNDEFINED> instruction: 0xffffff88
   1b3bc:			; <UNDEFINED> instruction: 0xffffff88
   1b3c0:			; <UNDEFINED> instruction: 0xffffff88
   1b3c4:			; <UNDEFINED> instruction: 0xffffff88
   1b3c8:			; <UNDEFINED> instruction: 0xffffff88
   1b3cc:			; <UNDEFINED> instruction: 0xffffff88
   1b3d0:			; <UNDEFINED> instruction: 0xffffff88
   1b3d4:			; <UNDEFINED> instruction: 0xffffff88
   1b3d8:			; <UNDEFINED> instruction: 0xffffff88
   1b3dc:			; <UNDEFINED> instruction: 0xffffff88
   1b3e0:	muleq	r0, ip, r0
   1b3e4:			; <UNDEFINED> instruction: 0xffffff88
   1b3e8:			; <UNDEFINED> instruction: 0xffffff88
   1b3ec:			; <UNDEFINED> instruction: 0xffffff88
   1b3f0:			; <UNDEFINED> instruction: 0xffffff88
   1b3f4:			; <UNDEFINED> instruction: 0xffffff88
   1b3f8:			; <UNDEFINED> instruction: 0xffffff88
   1b3fc:			; <UNDEFINED> instruction: 0xffffff88
   1b400:			; <UNDEFINED> instruction: 0xffffff88
   1b404:			; <UNDEFINED> instruction: 0xffffff88
   1b408:			; <UNDEFINED> instruction: 0xffffff88
   1b40c:			; <UNDEFINED> instruction: 0xffffff88
   1b410:			; <UNDEFINED> instruction: 0xffffff88
   1b414:			; <UNDEFINED> instruction: 0xffffff88
   1b418:			; <UNDEFINED> instruction: 0xffffff88
   1b41c:	muleq	r0, ip, r0
   1b420:	add	r0, sl, #6
   1b424:	add	r1, sp, #12
   1b428:	mov	r2, r6
   1b42c:	add	r3, sp, #16
   1b430:	str	r5, [sp]
   1b434:	str	r4, [sp, #4]
   1b438:	str	r0, [sp, #12]
   1b43c:	mov	r0, r7
   1b440:	bl	11354 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   1b444:	cmp	r0, #0
   1b448:	bne	1b48c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1b44c:	ldr	r9, [sp, #12]
   1b450:	cmp	r9, r6
   1b454:	bcc	1b314 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   1b458:	b	1b48c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1b45c:	mov	r0, r7
   1b460:	mov	r1, r9
   1b464:	mov	r2, r6
   1b468:	bl	112e8 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   1b46c:	mov	r9, r0
   1b470:	str	r0, [sp, #12]
   1b474:	cmp	r9, r6
   1b478:	bcc	1b314 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   1b47c:	b	1b48c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1b480:	mov	r9, r8
   1b484:	cmp	r9, r6
   1b488:	bcc	1b314 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   1b48c:	ldr	r0, [sp, #16]
   1b490:	sub	sp, fp, #28
   1b494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b498:			; <UNDEFINED> instruction: 0x00024db0
   1b49c:	andeq	r0, r0, r0

0001b4a0 <myencoding_get_function_by_id@@Base>:
   1b4a0:	ldr	r1, [pc, #8]	; 1b4b0 <myencoding_get_function_by_id@@Base+0x10>
   1b4a4:	add	r1, pc, r1
   1b4a8:	ldr	r0, [r1, r0, lsl #2]
   1b4ac:	bx	lr
   1b4b0:	muleq	pc, r8, lr	; <UNPREDICTABLE>
   1b4b4:	nop	{0}
   1b4b8:	nop	{0}
   1b4bc:	nop	{0}

0001b4c0 <myencoding_decode_utf_8@@Base>:
   1b4c0:	push	{fp, lr}
   1b4c4:	mov	fp, sp
   1b4c8:	ldr	r2, [r1, #20]
   1b4cc:	cmp	r2, #0
   1b4d0:	beq	1b560 <myencoding_decode_utf_8@@Base+0xa0>
   1b4d4:	ldr	r3, [r1]
   1b4d8:	cmp	r3, r0
   1b4dc:	bls	1b510 <myencoding_decode_utf_8@@Base+0x50>
   1b4e0:	ldr	r3, [r1, #4]
   1b4e4:	cmp	r3, r0
   1b4e8:	bcs	1b510 <myencoding_decode_utf_8@@Base+0x50>
   1b4ec:	add	r0, pc, #316	; 0x13c
   1b4f0:	mov	r2, #5
   1b4f4:	vld1.64	{d16-d17}, [r0 :128]
   1b4f8:	mov	r0, #20
   1b4fc:	vst1.32	{d16-d17}, [r1], r0
   1b500:	mov	r0, #0
   1b504:	str	r0, [r1]
   1b508:	mov	r0, r2
   1b50c:	pop	{fp, pc}
   1b510:	mov	r3, #191	; 0xbf
   1b514:	sub	r0, r0, #128	; 0x80
   1b518:	str	r3, [r1, #4]
   1b51c:	mov	r3, #128	; 0x80
   1b520:	str	r3, [r1]
   1b524:	ldr	r3, [r1, #8]
   1b528:	ldr	ip, [r1, #12]
   1b52c:	add	r3, r3, #1
   1b530:	subs	r2, r2, r3
   1b534:	str	r3, [r1, #8]
   1b538:	add	r2, r2, r2, lsl #1
   1b53c:	lsl	r2, r2, #1
   1b540:	add	r0, ip, r0, lsl r2
   1b544:	mov	r2, #2
   1b548:	moveq	r2, #0
   1b54c:	str	r0, [r1, #12]
   1b550:	streq	r2, [r1, #8]
   1b554:	streq	r2, [r1, #20]
   1b558:	mov	r0, r2
   1b55c:	pop	{fp, pc}
   1b560:	sxtb	r2, r0
   1b564:	cmp	r2, #0
   1b568:	bmi	1b57c <myencoding_decode_utf_8@@Base+0xbc>
   1b56c:	mov	r2, #0
   1b570:	str	r0, [r1, #12]
   1b574:	mov	r0, r2
   1b578:	pop	{fp, pc}
   1b57c:	add	r2, r0, #62	; 0x3e
   1b580:	uxtb	r2, r2
   1b584:	cmp	r2, #30
   1b588:	bcs	1b59c <myencoding_decode_utf_8@@Base+0xdc>
   1b58c:	mov	ip, #6
   1b590:	mvn	lr, #191	; 0xbf
   1b594:	mov	r2, #1
   1b598:	b	1b614 <myencoding_decode_utf_8@@Base+0x154>
   1b59c:	and	r2, r0, #240	; 0xf0
   1b5a0:	cmp	r2, #224	; 0xe0
   1b5a4:	bne	1b5cc <myencoding_decode_utf_8@@Base+0x10c>
   1b5a8:	mov	ip, #12
   1b5ac:	mvn	lr, #223	; 0xdf
   1b5b0:	mov	r2, #2
   1b5b4:	cmp	r0, #237	; 0xed
   1b5b8:	beq	1b604 <myencoding_decode_utf_8@@Base+0x144>
   1b5bc:	cmp	r0, #224	; 0xe0
   1b5c0:	moveq	r3, #160	; 0xa0
   1b5c4:	streq	r3, [r1]
   1b5c8:	b	1b614 <myencoding_decode_utf_8@@Base+0x154>
   1b5cc:	add	r2, r0, #16
   1b5d0:	uxtb	r3, r2
   1b5d4:	mov	r2, #1
   1b5d8:	cmp	r3, #4
   1b5dc:	bhi	1b558 <myencoding_decode_utf_8@@Base+0x98>
   1b5e0:	mov	ip, #12
   1b5e4:	mvn	lr, #239	; 0xef
   1b5e8:	mov	r2, #2
   1b5ec:	cmp	r0, #244	; 0xf4
   1b5f0:	beq	1b60c <myencoding_decode_utf_8@@Base+0x14c>
   1b5f4:	cmp	r0, #240	; 0xf0
   1b5f8:	moveq	r3, #144	; 0x90
   1b5fc:	streq	r3, [r1]
   1b600:	b	1b614 <myencoding_decode_utf_8@@Base+0x154>
   1b604:	mov	r3, #159	; 0x9f
   1b608:	b	1b610 <myencoding_decode_utf_8@@Base+0x150>
   1b60c:	mov	r3, #143	; 0x8f
   1b610:	str	r3, [r1, #4]
   1b614:	add	r0, lr, r0
   1b618:	str	r2, [r1, #20]
   1b61c:	mov	r2, #2
   1b620:	lsl	r0, r0, ip
   1b624:	str	r0, [r1, #12]
   1b628:	mov	r0, r2
   1b62c:	pop	{fp, pc}
   1b630:	andeq	r0, r0, r0, lsl #1
   1b634:	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...

0001b640 <myencoding_decode_ibm866@@Base>:
   1b640:	sxtb	r2, r0
   1b644:	cmn	r2, #1
   1b648:	ble	1b658 <myencoding_decode_ibm866@@Base+0x18>
   1b64c:	str	r0, [r1, #12]
   1b650:	mov	r0, #0
   1b654:	bx	lr
   1b658:	ldr	r2, [pc, #20]	; 1b674 <myencoding_decode_ibm866@@Base+0x34>
   1b65c:	add	r2, pc, r2
   1b660:	add	r0, r2, r0, lsl #2
   1b664:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b668:	str	r0, [r1, #12]
   1b66c:	mov	r0, #0
   1b670:	bx	lr
   1b674:	strdeq	r5, [r2], -r0

0001b678 <myencoding_decode_iso_8859_2@@Base>:
   1b678:	sxtb	r2, r0
   1b67c:	cmn	r2, #1
   1b680:	ble	1b690 <myencoding_decode_iso_8859_2@@Base+0x18>
   1b684:	str	r0, [r1, #12]
   1b688:	mov	r0, #0
   1b68c:	bx	lr
   1b690:	ldr	r2, [pc, #20]	; 1b6ac <myencoding_decode_iso_8859_2@@Base+0x34>
   1b694:	add	r2, pc, r2
   1b698:	add	r0, r2, r0, lsl #2
   1b69c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b6a0:	str	r0, [r1, #12]
   1b6a4:	mov	r0, #0
   1b6a8:	bx	lr
   1b6ac:			; <UNDEFINED> instruction: 0x000255b8

0001b6b0 <myencoding_decode_iso_8859_3@@Base>:
   1b6b0:	sxtb	r2, r0
   1b6b4:	cmn	r2, #1
   1b6b8:	ble	1b6c8 <myencoding_decode_iso_8859_3@@Base+0x18>
   1b6bc:	str	r0, [r1, #12]
   1b6c0:	mov	r0, #0
   1b6c4:	bx	lr
   1b6c8:	ldr	r2, [pc, #20]	; 1b6e4 <myencoding_decode_iso_8859_3@@Base+0x34>
   1b6cc:	add	r2, pc, r2
   1b6d0:	add	r0, r2, r0, lsl #2
   1b6d4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b6d8:	str	r0, [r1, #12]
   1b6dc:	mov	r0, #0
   1b6e0:	bx	lr
   1b6e4:	andeq	r5, r2, r0, lsl #15

0001b6e8 <myencoding_decode_iso_8859_4@@Base>:
   1b6e8:	sxtb	r2, r0
   1b6ec:	cmn	r2, #1
   1b6f0:	ble	1b700 <myencoding_decode_iso_8859_4@@Base+0x18>
   1b6f4:	str	r0, [r1, #12]
   1b6f8:	mov	r0, #0
   1b6fc:	bx	lr
   1b700:	ldr	r2, [pc, #20]	; 1b71c <myencoding_decode_iso_8859_4@@Base+0x34>
   1b704:	add	r2, pc, r2
   1b708:	add	r0, r2, r0, lsl #2
   1b70c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b710:	str	r0, [r1, #12]
   1b714:	mov	r0, #0
   1b718:	bx	lr
   1b71c:	andeq	r5, r2, r8, asr #18

0001b720 <myencoding_decode_iso_8859_5@@Base>:
   1b720:	sxtb	r2, r0
   1b724:	cmn	r2, #1
   1b728:	ble	1b738 <myencoding_decode_iso_8859_5@@Base+0x18>
   1b72c:	str	r0, [r1, #12]
   1b730:	mov	r0, #0
   1b734:	bx	lr
   1b738:	ldr	r2, [pc, #20]	; 1b754 <myencoding_decode_iso_8859_5@@Base+0x34>
   1b73c:	add	r2, pc, r2
   1b740:	add	r0, r2, r0, lsl #2
   1b744:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b748:	str	r0, [r1, #12]
   1b74c:	mov	r0, #0
   1b750:	bx	lr
   1b754:	andeq	r5, r2, r0, lsl fp

0001b758 <myencoding_decode_iso_8859_6@@Base>:
   1b758:	sxtb	r2, r0
   1b75c:	cmn	r2, #1
   1b760:	ble	1b770 <myencoding_decode_iso_8859_6@@Base+0x18>
   1b764:	str	r0, [r1, #12]
   1b768:	mov	r0, #0
   1b76c:	bx	lr
   1b770:	ldr	r2, [pc, #20]	; 1b78c <myencoding_decode_iso_8859_6@@Base+0x34>
   1b774:	add	r2, pc, r2
   1b778:	add	r0, r2, r0, lsl #2
   1b77c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b780:	str	r0, [r1, #12]
   1b784:	mov	r0, #0
   1b788:	bx	lr
   1b78c:	andeq	r3, r5, r8, ror r9

0001b790 <myencoding_decode_iso_8859_7@@Base>:
   1b790:	sxtb	r2, r0
   1b794:	cmn	r2, #1
   1b798:	ble	1b7a8 <myencoding_decode_iso_8859_7@@Base+0x18>
   1b79c:	str	r0, [r1, #12]
   1b7a0:	mov	r0, #0
   1b7a4:	bx	lr
   1b7a8:	ldr	r2, [pc, #20]	; 1b7c4 <myencoding_decode_iso_8859_7@@Base+0x34>
   1b7ac:	add	r2, pc, r2
   1b7b0:	add	r0, r2, r0, lsl #2
   1b7b4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b7b8:	str	r0, [r1, #12]
   1b7bc:	mov	r0, #0
   1b7c0:	bx	lr
   1b7c4:	andeq	r5, r2, r0, lsr #25

0001b7c8 <myencoding_decode_iso_8859_8@@Base>:
   1b7c8:	sxtb	r2, r0
   1b7cc:	cmn	r2, #1
   1b7d0:	ble	1b7e0 <myencoding_decode_iso_8859_8@@Base+0x18>
   1b7d4:	str	r0, [r1, #12]
   1b7d8:	mov	r0, #0
   1b7dc:	bx	lr
   1b7e0:	ldr	r2, [pc, #20]	; 1b7fc <myencoding_decode_iso_8859_8@@Base+0x34>
   1b7e4:	add	r2, pc, r2
   1b7e8:	add	r0, r2, r0, lsl #2
   1b7ec:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b7f0:	str	r0, [r1, #12]
   1b7f4:	mov	r0, #0
   1b7f8:	bx	lr
   1b7fc:	andeq	r5, r2, r8, ror #28

0001b800 <myencoding_decode_iso_8859_8_i@@Base>:
   1b800:	sxtb	r2, r0
   1b804:	cmn	r2, #1
   1b808:	ble	1b818 <myencoding_decode_iso_8859_8_i@@Base+0x18>
   1b80c:	str	r0, [r1, #12]
   1b810:	mov	r0, #0
   1b814:	bx	lr
   1b818:	ldr	r2, [pc, #20]	; 1b834 <myencoding_decode_iso_8859_8_i@@Base+0x34>
   1b81c:	add	r2, pc, r2
   1b820:	add	r0, r2, r0, lsl #2
   1b824:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b828:	str	r0, [r1, #12]
   1b82c:	mov	r0, #0
   1b830:	bx	lr
   1b834:	andeq	r5, r2, r0, lsr lr

0001b838 <myencoding_decode_iso_8859_10@@Base>:
   1b838:	sxtb	r2, r0
   1b83c:	cmn	r2, #1
   1b840:	ble	1b850 <myencoding_decode_iso_8859_10@@Base+0x18>
   1b844:	str	r0, [r1, #12]
   1b848:	mov	r0, #0
   1b84c:	bx	lr
   1b850:	ldr	r2, [pc, #20]	; 1b86c <myencoding_decode_iso_8859_10@@Base+0x34>
   1b854:	add	r2, pc, r2
   1b858:	add	r0, r2, r0, lsl #2
   1b85c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b860:	str	r0, [r1, #12]
   1b864:	mov	r0, #0
   1b868:	bx	lr
   1b86c:	strdeq	r5, [r2], -r8

0001b870 <myencoding_decode_iso_8859_13@@Base>:
   1b870:	sxtb	r2, r0
   1b874:	cmn	r2, #1
   1b878:	ble	1b888 <myencoding_decode_iso_8859_13@@Base+0x18>
   1b87c:	str	r0, [r1, #12]
   1b880:	mov	r0, #0
   1b884:	bx	lr
   1b888:	ldr	r2, [pc, #20]	; 1b8a4 <myencoding_decode_iso_8859_13@@Base+0x34>
   1b88c:	add	r2, pc, r2
   1b890:	add	r0, r2, r0, lsl #2
   1b894:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b898:	str	r0, [r1, #12]
   1b89c:	mov	r0, #0
   1b8a0:	bx	lr
   1b8a4:	andeq	r6, r2, r0, asr #3

0001b8a8 <myencoding_decode_iso_8859_14@@Base>:
   1b8a8:	sxtb	r2, r0
   1b8ac:	cmn	r2, #1
   1b8b0:	ble	1b8c0 <myencoding_decode_iso_8859_14@@Base+0x18>
   1b8b4:	str	r0, [r1, #12]
   1b8b8:	mov	r0, #0
   1b8bc:	bx	lr
   1b8c0:	ldr	r2, [pc, #20]	; 1b8dc <myencoding_decode_iso_8859_14@@Base+0x34>
   1b8c4:	add	r2, pc, r2
   1b8c8:	add	r0, r2, r0, lsl #2
   1b8cc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b8d0:	str	r0, [r1, #12]
   1b8d4:	mov	r0, #0
   1b8d8:	bx	lr
   1b8dc:	andeq	r6, r2, r8, lsl #7

0001b8e0 <myencoding_decode_iso_8859_15@@Base>:
   1b8e0:	sxtb	r2, r0
   1b8e4:	cmn	r2, #1
   1b8e8:	ble	1b8f8 <myencoding_decode_iso_8859_15@@Base+0x18>
   1b8ec:	str	r0, [r1, #12]
   1b8f0:	mov	r0, #0
   1b8f4:	bx	lr
   1b8f8:	ldr	r2, [pc, #20]	; 1b914 <myencoding_decode_iso_8859_15@@Base+0x34>
   1b8fc:	add	r2, pc, r2
   1b900:	add	r0, r2, r0, lsl #2
   1b904:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b908:	str	r0, [r1, #12]
   1b90c:	mov	r0, #0
   1b910:	bx	lr
   1b914:	andeq	r6, r2, r0, asr r5

0001b918 <myencoding_decode_iso_8859_16@@Base>:
   1b918:	sxtb	r2, r0
   1b91c:	cmn	r2, #1
   1b920:	ble	1b930 <myencoding_decode_iso_8859_16@@Base+0x18>
   1b924:	str	r0, [r1, #12]
   1b928:	mov	r0, #0
   1b92c:	bx	lr
   1b930:	ldr	r2, [pc, #20]	; 1b94c <myencoding_decode_iso_8859_16@@Base+0x34>
   1b934:	add	r2, pc, r2
   1b938:	add	r0, r2, r0, lsl #2
   1b93c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b940:	str	r0, [r1, #12]
   1b944:	mov	r0, #0
   1b948:	bx	lr
   1b94c:	andeq	r6, r2, r8, lsl r7

0001b950 <myencoding_decode_koi8_r@@Base>:
   1b950:	sxtb	r2, r0
   1b954:	cmn	r2, #1
   1b958:	ble	1b968 <myencoding_decode_koi8_r@@Base+0x18>
   1b95c:	str	r0, [r1, #12]
   1b960:	mov	r0, #0
   1b964:	bx	lr
   1b968:	ldr	r2, [pc, #20]	; 1b984 <myencoding_decode_koi8_r@@Base+0x34>
   1b96c:	add	r2, pc, r2
   1b970:	add	r0, r2, r0, lsl #2
   1b974:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b978:	str	r0, [r1, #12]
   1b97c:	mov	r0, #0
   1b980:	bx	lr
   1b984:	andeq	r6, r2, r0, ror #17

0001b988 <myencoding_decode_koi8_u@@Base>:
   1b988:	sxtb	r2, r0
   1b98c:	cmn	r2, #1
   1b990:	ble	1b9a0 <myencoding_decode_koi8_u@@Base+0x18>
   1b994:	str	r0, [r1, #12]
   1b998:	mov	r0, #0
   1b99c:	bx	lr
   1b9a0:	ldr	r2, [pc, #20]	; 1b9bc <myencoding_decode_koi8_u@@Base+0x34>
   1b9a4:	add	r2, pc, r2
   1b9a8:	add	r0, r2, r0, lsl #2
   1b9ac:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b9b0:	str	r0, [r1, #12]
   1b9b4:	mov	r0, #0
   1b9b8:	bx	lr
   1b9bc:	andeq	r6, r2, r8, lsr #21

0001b9c0 <myencoding_decode_macintosh@@Base>:
   1b9c0:	sxtb	r2, r0
   1b9c4:	cmn	r2, #1
   1b9c8:	ble	1b9d8 <myencoding_decode_macintosh@@Base+0x18>
   1b9cc:	str	r0, [r1, #12]
   1b9d0:	mov	r0, #0
   1b9d4:	bx	lr
   1b9d8:	ldr	r2, [pc, #20]	; 1b9f4 <myencoding_decode_macintosh@@Base+0x34>
   1b9dc:	add	r2, pc, r2
   1b9e0:	add	r0, r2, r0, lsl #2
   1b9e4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1b9e8:	str	r0, [r1, #12]
   1b9ec:	mov	r0, #0
   1b9f0:	bx	lr
   1b9f4:	andeq	r6, r2, r0, ror ip

0001b9f8 <myencoding_decode_windows_874@@Base>:
   1b9f8:	sxtb	r2, r0
   1b9fc:	cmn	r2, #1
   1ba00:	ble	1ba10 <myencoding_decode_windows_874@@Base+0x18>
   1ba04:	str	r0, [r1, #12]
   1ba08:	mov	r0, #0
   1ba0c:	bx	lr
   1ba10:	ldr	r2, [pc, #20]	; 1ba2c <myencoding_decode_windows_874@@Base+0x34>
   1ba14:	add	r2, pc, r2
   1ba18:	add	r0, r2, r0, lsl #2
   1ba1c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ba20:	str	r0, [r1, #12]
   1ba24:	mov	r0, #0
   1ba28:	bx	lr
   1ba2c:	andeq	r6, r2, r8, lsr lr

0001ba30 <myencoding_decode_windows_1250@@Base>:
   1ba30:	sxtb	r2, r0
   1ba34:	cmn	r2, #1
   1ba38:	ble	1ba48 <myencoding_decode_windows_1250@@Base+0x18>
   1ba3c:	str	r0, [r1, #12]
   1ba40:	mov	r0, #0
   1ba44:	bx	lr
   1ba48:	ldr	r2, [pc, #20]	; 1ba64 <myencoding_decode_windows_1250@@Base+0x34>
   1ba4c:	add	r2, pc, r2
   1ba50:	add	r0, r2, r0, lsl #2
   1ba54:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ba58:	str	r0, [r1, #12]
   1ba5c:	mov	r0, #0
   1ba60:	bx	lr
   1ba64:	andeq	r7, r2, r0

0001ba68 <myencoding_decode_windows_1251@@Base>:
   1ba68:	sxtb	r2, r0
   1ba6c:	cmn	r2, #1
   1ba70:	ble	1ba80 <myencoding_decode_windows_1251@@Base+0x18>
   1ba74:	str	r0, [r1, #12]
   1ba78:	mov	r0, #0
   1ba7c:	bx	lr
   1ba80:	ldr	r2, [pc, #20]	; 1ba9c <myencoding_decode_windows_1251@@Base+0x34>
   1ba84:	add	r2, pc, r2
   1ba88:	add	r0, r2, r0, lsl #2
   1ba8c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ba90:	str	r0, [r1, #12]
   1ba94:	mov	r0, #0
   1ba98:	bx	lr
   1ba9c:	andeq	r7, r2, r8, asr #3

0001baa0 <myencoding_decode_windows_1252@@Base>:
   1baa0:	sxtb	r2, r0
   1baa4:	cmn	r2, #1
   1baa8:	ble	1bab8 <myencoding_decode_windows_1252@@Base+0x18>
   1baac:	str	r0, [r1, #12]
   1bab0:	mov	r0, #0
   1bab4:	bx	lr
   1bab8:	ldr	r2, [pc, #20]	; 1bad4 <myencoding_decode_windows_1252@@Base+0x34>
   1babc:	add	r2, pc, r2
   1bac0:	add	r0, r2, r0, lsl #2
   1bac4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bac8:	str	r0, [r1, #12]
   1bacc:	mov	r0, #0
   1bad0:	bx	lr
   1bad4:	muleq	r2, r0, r3

0001bad8 <myencoding_decode_windows_1253@@Base>:
   1bad8:	sxtb	r2, r0
   1badc:	cmn	r2, #1
   1bae0:	ble	1baf0 <myencoding_decode_windows_1253@@Base+0x18>
   1bae4:	str	r0, [r1, #12]
   1bae8:	mov	r0, #0
   1baec:	bx	lr
   1baf0:	ldr	r2, [pc, #20]	; 1bb0c <myencoding_decode_windows_1253@@Base+0x34>
   1baf4:	add	r2, pc, r2
   1baf8:	add	r0, r2, r0, lsl #2
   1bafc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bb00:	str	r0, [r1, #12]
   1bb04:	mov	r0, #0
   1bb08:	bx	lr
   1bb0c:	andeq	r7, r2, r8, asr r5

0001bb10 <myencoding_decode_windows_1254@@Base>:
   1bb10:	sxtb	r2, r0
   1bb14:	cmn	r2, #1
   1bb18:	ble	1bb28 <myencoding_decode_windows_1254@@Base+0x18>
   1bb1c:	str	r0, [r1, #12]
   1bb20:	mov	r0, #0
   1bb24:	bx	lr
   1bb28:	ldr	r2, [pc, #20]	; 1bb44 <myencoding_decode_windows_1254@@Base+0x34>
   1bb2c:	add	r2, pc, r2
   1bb30:	add	r0, r2, r0, lsl #2
   1bb34:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bb38:	str	r0, [r1, #12]
   1bb3c:	mov	r0, #0
   1bb40:	bx	lr
   1bb44:	andeq	r7, r2, r0, lsr #14

0001bb48 <myencoding_decode_windows_1255@@Base>:
   1bb48:	sxtb	r2, r0
   1bb4c:	cmn	r2, #1
   1bb50:	ble	1bb60 <myencoding_decode_windows_1255@@Base+0x18>
   1bb54:	str	r0, [r1, #12]
   1bb58:	mov	r0, #0
   1bb5c:	bx	lr
   1bb60:	ldr	r2, [pc, #20]	; 1bb7c <myencoding_decode_windows_1255@@Base+0x34>
   1bb64:	add	r2, pc, r2
   1bb68:	add	r0, r2, r0, lsl #2
   1bb6c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bb70:	str	r0, [r1, #12]
   1bb74:	mov	r0, #0
   1bb78:	bx	lr
   1bb7c:	andeq	r7, r2, r8, ror #17

0001bb80 <myencoding_decode_windows_1256@@Base>:
   1bb80:	sxtb	r2, r0
   1bb84:	cmn	r2, #1
   1bb88:	ble	1bb98 <myencoding_decode_windows_1256@@Base+0x18>
   1bb8c:	str	r0, [r1, #12]
   1bb90:	mov	r0, #0
   1bb94:	bx	lr
   1bb98:	ldr	r2, [pc, #20]	; 1bbb4 <myencoding_decode_windows_1256@@Base+0x34>
   1bb9c:	add	r2, pc, r2
   1bba0:	add	r0, r2, r0, lsl #2
   1bba4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bba8:	str	r0, [r1, #12]
   1bbac:	mov	r0, #0
   1bbb0:	bx	lr
   1bbb4:			; <UNDEFINED> instruction: 0x00027ab0

0001bbb8 <myencoding_decode_windows_1257@@Base>:
   1bbb8:	sxtb	r2, r0
   1bbbc:	cmn	r2, #1
   1bbc0:	ble	1bbd0 <myencoding_decode_windows_1257@@Base+0x18>
   1bbc4:	str	r0, [r1, #12]
   1bbc8:	mov	r0, #0
   1bbcc:	bx	lr
   1bbd0:	ldr	r2, [pc, #20]	; 1bbec <myencoding_decode_windows_1257@@Base+0x34>
   1bbd4:	add	r2, pc, r2
   1bbd8:	add	r0, r2, r0, lsl #2
   1bbdc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bbe0:	str	r0, [r1, #12]
   1bbe4:	mov	r0, #0
   1bbe8:	bx	lr
   1bbec:	andeq	r7, r2, r8, ror ip

0001bbf0 <myencoding_decode_windows_1258@@Base>:
   1bbf0:	sxtb	r2, r0
   1bbf4:	cmn	r2, #1
   1bbf8:	ble	1bc08 <myencoding_decode_windows_1258@@Base+0x18>
   1bbfc:	str	r0, [r1, #12]
   1bc00:	mov	r0, #0
   1bc04:	bx	lr
   1bc08:	ldr	r2, [pc, #20]	; 1bc24 <myencoding_decode_windows_1258@@Base+0x34>
   1bc0c:	add	r2, pc, r2
   1bc10:	add	r0, r2, r0, lsl #2
   1bc14:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bc18:	str	r0, [r1, #12]
   1bc1c:	mov	r0, #0
   1bc20:	bx	lr
   1bc24:	andeq	r7, r2, r0, asr #28

0001bc28 <myencoding_decode_x_mac_cyrillic@@Base>:
   1bc28:	sxtb	r2, r0
   1bc2c:	cmn	r2, #1
   1bc30:	ble	1bc40 <myencoding_decode_x_mac_cyrillic@@Base+0x18>
   1bc34:	str	r0, [r1, #12]
   1bc38:	mov	r0, #0
   1bc3c:	bx	lr
   1bc40:	ldr	r2, [pc, #20]	; 1bc5c <myencoding_decode_x_mac_cyrillic@@Base+0x34>
   1bc44:	add	r2, pc, r2
   1bc48:	add	r0, r2, r0, lsl #2
   1bc4c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1bc50:	str	r0, [r1, #12]
   1bc54:	mov	r0, #0
   1bc58:	bx	lr
   1bc5c:	andeq	r8, r2, r8

0001bc60 <myencoding_decode_gbk@@Base>:
   1bc60:	b	1bc64 <myencoding_decode_gb18030@@Base>

0001bc64 <myencoding_decode_gb18030@@Base>:
   1bc64:	push	{fp, lr}
   1bc68:	mov	fp, sp
   1bc6c:	ldr	r2, [r1, #8]
   1bc70:	cmp	r2, #0
   1bc74:	beq	1bd20 <myencoding_decode_gb18030@@Base+0xbc>
   1bc78:	sub	r3, r0, #48	; 0x30
   1bc7c:	uxtb	r3, r3
   1bc80:	cmp	r3, #10
   1bc84:	bcs	1bd44 <myencoding_decode_gb18030@@Base+0xe0>
   1bc88:	ldm	r1, {r3, ip}
   1bc8c:	add	r3, r3, r3, lsl #2
   1bc90:	add	r3, ip, r3, lsl #1
   1bc94:	rsb	r3, r3, r3, lsl #6
   1bc98:	add	r2, r2, r3, lsl #1
   1bc9c:	movw	r3, #57927	; 0xe247
   1bca0:	movt	r3, #18
   1bca4:	add	r2, r2, r2, lsl #2
   1bca8:	add	ip, r0, r2, lsl #1
   1bcac:	movw	r0, #16718	; 0x414e
   1bcb0:	mov	r2, #0
   1bcb4:	movt	r0, #65510	; 0xffe6
   1bcb8:	add	lr, ip, r0
   1bcbc:	cmp	lr, r3
   1bcc0:	bhi	1be38 <myencoding_decode_gb18030@@Base+0x1d4>
   1bcc4:	movw	r3, #42834	; 0xa752
   1bcc8:	movt	r3, #65509	; 0xffe5
   1bccc:	add	ip, ip, r3
   1bcd0:	movw	r3, #18508	; 0x484c
   1bcd4:	movt	r3, #2
   1bcd8:	cmp	ip, r3
   1bcdc:	bcc	1be38 <myencoding_decode_gb18030@@Base+0x1d4>
   1bce0:	movw	r3, #7457	; 0x1d21
   1bce4:	movw	r2, #59335	; 0xe7c7
   1bce8:	cmp	lr, r3
   1bcec:	beq	1be38 <myencoding_decode_gb18030@@Base+0x1d4>
   1bcf0:	ldr	r2, [pc, #364]	; 1be64 <myencoding_decode_gb18030@@Base+0x200>
   1bcf4:	add	r2, pc, r2
   1bcf8:	add	r3, r2, #1648	; 0x670
   1bcfc:	mvn	r2, #206	; 0xce
   1bd00:	cmp	r2, #0
   1bd04:	beq	1be28 <myencoding_decode_gb18030@@Base+0x1c4>
   1bd08:	ldr	r0, [r3], #-8
   1bd0c:	add	r2, r2, #1
   1bd10:	cmp	r0, lr
   1bd14:	bhi	1bd00 <myencoding_decode_gb18030@@Base+0x9c>
   1bd18:	ldr	r3, [r3, #12]
   1bd1c:	b	1be30 <myencoding_decode_gb18030@@Base+0x1cc>
   1bd20:	ldr	r2, [r1, #4]
   1bd24:	cmp	r2, #0
   1bd28:	beq	1bd4c <myencoding_decode_gb18030@@Base+0xe8>
   1bd2c:	cmp	r0, #129	; 0x81
   1bd30:	bcc	1bd78 <myencoding_decode_gb18030@@Base+0x114>
   1bd34:	cmp	r0, #255	; 0xff
   1bd38:	beq	1bd78 <myencoding_decode_gb18030@@Base+0x114>
   1bd3c:	str	r0, [r1, #8]
   1bd40:	b	1bd6c <myencoding_decode_gb18030@@Base+0x108>
   1bd44:	ldr	r2, [r1, #12]
   1bd48:	b	1be3c <myencoding_decode_gb18030@@Base+0x1d8>
   1bd4c:	ldr	lr, [r1]
   1bd50:	cmp	lr, #0
   1bd54:	beq	1bd90 <myencoding_decode_gb18030@@Base+0x12c>
   1bd58:	sub	r2, r0, #48	; 0x30
   1bd5c:	uxtb	r2, r2
   1bd60:	cmp	r2, #9
   1bd64:	bhi	1bdc0 <myencoding_decode_gb18030@@Base+0x15c>
   1bd68:	str	r0, [r1, #4]
   1bd6c:	mov	r2, #2
   1bd70:	mov	r0, r2
   1bd74:	pop	{fp, pc}
   1bd78:	mov	r0, #0
   1bd7c:	str	r0, [r1]
   1bd80:	str	r0, [r1, #4]
   1bd84:	mov	r2, #1
   1bd88:	mov	r0, r2
   1bd8c:	pop	{fp, pc}
   1bd90:	sxtb	r2, r0
   1bd94:	cmp	r2, #0
   1bd98:	bpl	1be18 <myencoding_decode_gb18030@@Base+0x1b4>
   1bd9c:	cmp	r0, #255	; 0xff
   1bda0:	beq	1bd84 <myencoding_decode_gb18030@@Base+0x120>
   1bda4:	cmp	r0, #128	; 0x80
   1bda8:	bne	1be5c <myencoding_decode_gb18030@@Base+0x1f8>
   1bdac:	movw	r0, #8364	; 0x20ac
   1bdb0:	mov	r2, #0
   1bdb4:	str	r0, [r1, #12]
   1bdb8:	mov	r0, r2
   1bdbc:	pop	{fp, pc}
   1bdc0:	mov	r2, #0
   1bdc4:	str	r2, [r1]
   1bdc8:	sxtb	r2, r0
   1bdcc:	cmn	r2, #1
   1bdd0:	blt	1bde8 <myencoding_decode_gb18030@@Base+0x184>
   1bdd4:	sub	ip, r0, #64	; 0x40
   1bdd8:	mov	r2, #1
   1bddc:	uxtb	r3, ip
   1bde0:	cmp	r3, #62	; 0x3e
   1bde4:	bhi	1bd70 <myencoding_decode_gb18030@@Base+0x10c>
   1bde8:	cmp	r0, #127	; 0x7f
   1bdec:	mvn	r2, #64	; 0x40
   1bdf0:	mvncc	r2, #63	; 0x3f
   1bdf4:	add	r0, r0, r2
   1bdf8:	mov	r2, #190	; 0xbe
   1bdfc:	mla	r0, lr, r2, r0
   1be00:	ldr	r2, [pc, #96]	; 1be68 <myencoding_decode_gb18030@@Base+0x204>
   1be04:	add	r2, pc, r2
   1be08:	add	r0, r2, r0, lsl #2
   1be0c:	movw	r2, #33032	; 0x8108
   1be10:	movt	r2, #65534	; 0xfffe
   1be14:	ldr	r0, [r0, r2]
   1be18:	mov	r2, #0
   1be1c:	str	r0, [r1, #12]
   1be20:	mov	r0, r2
   1be24:	pop	{fp, pc}
   1be28:	mov	r2, #0
   1be2c:	mov	r3, #0
   1be30:	add	r0, r2, lr
   1be34:	add	r2, r0, r3
   1be38:	str	r2, [r1, #12]
   1be3c:	mov	r0, #0
   1be40:	str	r0, [r1]
   1be44:	str	r0, [r1, #4]
   1be48:	str	r0, [r1, #8]
   1be4c:	clz	r0, r2
   1be50:	lsr	r2, r0, #5
   1be54:	mov	r0, r2
   1be58:	pop	{fp, pc}
   1be5c:	str	r0, [r1]
   1be60:	b	1bd6c <myencoding_decode_gb18030@@Base+0x108>
   1be64:	andeq	r8, r2, r8, asr r1
   1be68:	andeq	r8, r2, r0, asr #13

0001be6c <myencoding_index_gb18030_ranges_code_point@@Base>:
   1be6c:	movw	r2, #57927	; 0xe247
   1be70:	mov	r1, #0
   1be74:	movt	r2, #18
   1be78:	cmp	r0, r2
   1be7c:	bhi	1bee8 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1be80:	movw	r3, #18508	; 0x484c
   1be84:	movw	r2, #39420	; 0x99fc
   1be88:	movt	r3, #2
   1be8c:	sub	r2, r0, r2
   1be90:	cmp	r2, r3
   1be94:	bcc	1bee8 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1be98:	movw	r2, #7457	; 0x1d21
   1be9c:	movw	r1, #59335	; 0xe7c7
   1bea0:	cmp	r0, r2
   1bea4:	beq	1bee8 <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1bea8:	ldr	r1, [pc, #64]	; 1bef0 <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   1beac:	add	r1, pc, r1
   1beb0:	add	r2, r1, #1648	; 0x670
   1beb4:	mvn	r1, #206	; 0xce
   1beb8:	cmp	r1, #0
   1bebc:	beq	1bed8 <myencoding_index_gb18030_ranges_code_point@@Base+0x6c>
   1bec0:	ldr	r3, [r2], #-8
   1bec4:	add	r1, r1, #1
   1bec8:	cmp	r3, r0
   1becc:	bhi	1beb8 <myencoding_index_gb18030_ranges_code_point@@Base+0x4c>
   1bed0:	ldr	r2, [r2, #12]
   1bed4:	b	1bee0 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   1bed8:	mov	r1, #0
   1bedc:	mov	r2, #0
   1bee0:	add	r0, r1, r0
   1bee4:	add	r1, r0, r2
   1bee8:	mov	r0, r1
   1beec:	bx	lr
   1bef0:	andeq	r7, r2, r0, lsr #31

0001bef4 <myencoding_decode_big5@@Base>:
   1bef4:	ldr	ip, [r1]
   1bef8:	mov	r2, r0
   1befc:	cmp	ip, #0
   1bf00:	beq	1bffc <myencoding_decode_big5@@Base+0x108>
   1bf04:	mov	r0, #0
   1bf08:	cmp	r2, #127	; 0x7f
   1bf0c:	mov	r3, #98	; 0x62
   1bf10:	str	r0, [r1]
   1bf14:	sub	r0, r2, #64	; 0x40
   1bf18:	movwcc	r3, #64	; 0x40
   1bf1c:	uxtb	r0, r0
   1bf20:	cmp	r0, #63	; 0x3f
   1bf24:	bcc	1bf3c <myencoding_decode_big5@@Base+0x48>
   1bf28:	mov	r0, #1
   1bf2c:	cmp	r2, #161	; 0xa1
   1bf30:	bcc	1c024 <myencoding_decode_big5@@Base+0x130>
   1bf34:	cmp	r2, #255	; 0xff
   1bf38:	beq	1c024 <myencoding_decode_big5@@Base+0x130>
   1bf3c:	sub	r0, r2, r3
   1bf40:	mov	r2, #157	; 0x9d
   1bf44:	movw	r3, #21386	; 0x538a
   1bf48:	mla	r0, ip, r2, r0
   1bf4c:	movw	r2, #20253	; 0x4f1d
   1bf50:	sub	r2, r0, r2
   1bf54:	sub	r0, r0, r3
   1bf58:	cmp	r0, #33	; 0x21
   1bf5c:	bhi	1c028 <myencoding_decode_big5@@Base+0x134>
   1bf60:	add	r3, pc, #4
   1bf64:	ldr	r0, [r3, r0, lsl #2]
   1bf68:	add	pc, r3, r0
   1bf6c:	andeq	r0, r0, r8, lsl #1
   1bf70:	andeq	r0, r0, r8, asr #1
   1bf74:	andeq	r0, r0, r4, ror #1
   1bf78:	andeq	r0, r0, r8, asr #1
   1bf7c:	andeq	r0, r0, r8, asr #1
   1bf80:	andeq	r0, r0, r8, asr #1
   1bf84:	andeq	r0, r0, r8, asr #1
   1bf88:	andeq	r0, r0, r8, asr #1
   1bf8c:	andeq	r0, r0, r8, asr #1
   1bf90:	andeq	r0, r0, r8, asr #1
   1bf94:	andeq	r0, r0, r8, asr #1
   1bf98:	andeq	r0, r0, r8, asr #1
   1bf9c:	andeq	r0, r0, r8, asr #1
   1bfa0:	andeq	r0, r0, r8, asr #1
   1bfa4:	andeq	r0, r0, r8, asr #1
   1bfa8:	andeq	r0, r0, r8, asr #1
   1bfac:	andeq	r0, r0, r8, asr #1
   1bfb0:	andeq	r0, r0, r8, asr #1
   1bfb4:	andeq	r0, r0, r8, asr #1
   1bfb8:	andeq	r0, r0, r8, asr #1
   1bfbc:	andeq	r0, r0, r8, asr #1
   1bfc0:	andeq	r0, r0, r8, asr #1
   1bfc4:	andeq	r0, r0, r8, asr #1
   1bfc8:	andeq	r0, r0, r8, asr #1
   1bfcc:	andeq	r0, r0, r8, asr #1
   1bfd0:	andeq	r0, r0, r8, asr #1
   1bfd4:	andeq	r0, r0, r8, asr #1
   1bfd8:	andeq	r0, r0, r8, asr #1
   1bfdc:	andeq	r0, r0, r8, asr #1
   1bfe0:	andeq	r0, r0, r8, asr #1
   1bfe4:	andeq	r0, r0, r8, asr #1
   1bfe8:	strdeq	r0, [r0], -ip
   1bfec:	andeq	r0, r0, r8, asr #1
   1bff0:	andeq	r0, r0, r4, lsl #2
   1bff4:	mov	r0, #772	; 0x304
   1bff8:	b	1c054 <myencoding_decode_big5@@Base+0x160>
   1bffc:	sxtb	r0, r2
   1c000:	cmp	r0, #0
   1c004:	movpl	r0, #0
   1c008:	strpl	r2, [r1, #12]
   1c00c:	bxpl	lr
   1c010:	cmp	r2, #128	; 0x80
   1c014:	mov	r0, #1
   1c018:	cmpne	r2, #255	; 0xff
   1c01c:	movne	r0, #2
   1c020:	strne	r2, [r1]
   1c024:	bx	lr
   1c028:	mov	r0, #1
   1c02c:	cmp	r2, #0
   1c030:	bxeq	lr
   1c034:	mov	r0, #0
   1c038:	str	r0, [r1, #16]
   1c03c:	ldr	r3, [pc, #68]	; 1c088 <myencoding_decode_big5@@Base+0x194>
   1c040:	add	r3, pc, r3
   1c044:	ldr	r2, [r3, r2, lsl #2]
   1c048:	str	r2, [r1, #12]
   1c04c:	bx	lr
   1c050:	mov	r0, #780	; 0x30c
   1c054:	mov	r2, #202	; 0xca
   1c058:	str	r2, [r1, #12]
   1c05c:	str	r0, [r1, #16]
   1c060:	mov	r0, #0
   1c064:	bx	lr
   1c068:	mov	r0, #772	; 0x304
   1c06c:	b	1c074 <myencoding_decode_big5@@Base+0x180>
   1c070:	mov	r0, #780	; 0x30c
   1c074:	mov	r2, #234	; 0xea
   1c078:	str	r2, [r1, #12]
   1c07c:	str	r0, [r1, #16]
   1c080:	mov	r0, #0
   1c084:	bx	lr
   1c088:	muleq	r3, r4, sl

0001c08c <myencoding_decode_euc_jp@@Base>:
   1c08c:	ldr	r2, [r1]
   1c090:	cmp	r2, #0
   1c094:	beq	1c174 <myencoding_decode_euc_jp@@Base+0xe8>
   1c098:	cmp	r2, #143	; 0x8f
   1c09c:	beq	1c0d4 <myencoding_decode_euc_jp@@Base+0x48>
   1c0a0:	cmp	r2, #142	; 0x8e
   1c0a4:	bne	1c0f4 <myencoding_decode_euc_jp@@Base+0x68>
   1c0a8:	add	r2, r0, #95	; 0x5f
   1c0ac:	uxtb	r2, r2
   1c0b0:	cmp	r2, #62	; 0x3e
   1c0b4:	bhi	1c16c <myencoding_decode_euc_jp@@Base+0xe0>
   1c0b8:	movw	r3, #65216	; 0xfec0
   1c0bc:	mov	r2, #0
   1c0c0:	add	r0, r0, r3
   1c0c4:	str	r2, [r1]
   1c0c8:	str	r0, [r1, #12]
   1c0cc:	mov	r0, r2
   1c0d0:	bx	lr
   1c0d4:	cmp	r0, #161	; 0xa1
   1c0d8:	bcc	1c16c <myencoding_decode_euc_jp@@Base+0xe0>
   1c0dc:	cmp	r0, #255	; 0xff
   1c0e0:	beq	1c16c <myencoding_decode_euc_jp@@Base+0xe0>
   1c0e4:	str	r0, [r1]
   1c0e8:	mov	r0, #1
   1c0ec:	str	r0, [r1, #20]
   1c0f0:	b	1c1b0 <myencoding_decode_euc_jp@@Base+0x124>
   1c0f4:	mov	r3, #0
   1c0f8:	str	r3, [r1]
   1c0fc:	sub	r3, r2, #161	; 0xa1
   1c100:	cmp	r3, #93	; 0x5d
   1c104:	bhi	1c174 <myencoding_decode_euc_jp@@Base+0xe8>
   1c108:	cmp	r0, #161	; 0xa1
   1c10c:	bcc	1c174 <myencoding_decode_euc_jp@@Base+0xe8>
   1c110:	cmp	r0, #255	; 0xff
   1c114:	beq	1c174 <myencoding_decode_euc_jp@@Base+0xe8>
   1c118:	mov	r3, #0
   1c11c:	ldr	ip, [r1, #20]
   1c120:	str	r3, [r1, #20]
   1c124:	mov	r3, #94	; 0x5e
   1c128:	mla	r0, r2, r3, r0
   1c12c:	movw	r2, #4356	; 0x1104
   1c130:	movt	r2, #65535	; 0xffff
   1c134:	cmp	ip, #0
   1c138:	add	r0, r2, r0, lsl #2
   1c13c:	ldr	r2, [pc, #120]	; 1c1bc <myencoding_decode_euc_jp@@Base+0x130>
   1c140:	ldr	r3, [pc, #120]	; 1c1c0 <myencoding_decode_euc_jp@@Base+0x134>
   1c144:	add	r3, pc, r3
   1c148:	add	r2, pc, r2
   1c14c:	add	r3, r3, r0
   1c150:	addeq	r3, r2, r0
   1c154:	ldr	r0, [r3]
   1c158:	str	r0, [r1, #12]
   1c15c:	clz	r0, r0
   1c160:	lsr	r2, r0, #5
   1c164:	mov	r0, r2
   1c168:	bx	lr
   1c16c:	mov	r2, #0
   1c170:	str	r2, [r1]
   1c174:	sxtb	r2, r0
   1c178:	cmp	r2, #0
   1c17c:	movpl	r2, #0
   1c180:	strpl	r0, [r1, #12]
   1c184:	movpl	r0, r2
   1c188:	bxpl	lr
   1c18c:	and	r2, r0, #254	; 0xfe
   1c190:	cmp	r2, #142	; 0x8e
   1c194:	beq	1c1ac <myencoding_decode_euc_jp@@Base+0x120>
   1c198:	mov	r2, #1
   1c19c:	cmp	r0, #161	; 0xa1
   1c1a0:	bcc	1c1b4 <myencoding_decode_euc_jp@@Base+0x128>
   1c1a4:	cmp	r0, #255	; 0xff
   1c1a8:	beq	1c1b4 <myencoding_decode_euc_jp@@Base+0x128>
   1c1ac:	str	r0, [r1]
   1c1b0:	mov	r2, #2
   1c1b4:	mov	r0, r2
   1c1b8:	bx	lr
   1c1bc:			; <UNDEFINED> instruction: 0x0005bbb4
   1c1c0:	andeq	r3, r5, r8, lsr #3

0001c1c4 <myencoding_decode_iso_2022_jp@@Base>:
   1c1c4:	ldr	r3, [r1, #4]
   1c1c8:	mov	ip, #0
   1c1cc:	cmp	r3, #7
   1c1d0:	bhi	1c410 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   1c1d4:	add	r2, pc, #4
   1c1d8:	ldr	r3, [r2, r3, lsl #2]
   1c1dc:	add	pc, r2, r3
   1c1e0:	andeq	r0, r0, r0, lsr #32
   1c1e4:	andeq	r0, r0, r4, asr r0
   1c1e8:	andeq	r0, r0, r0, lsr r2
   1c1ec:	strheq	r0, [r0], -r8
   1c1f0:	strdeq	r0, [r0], -r4
   1c1f4:	andeq	r0, r0, r0, lsl r1
   1c1f8:	andeq	r0, r0, ip, ror r1
   1c1fc:	muleq	r0, r0, r1
   1c200:	cmp	r0, #27
   1c204:	beq	1c2dc <myencoding_decode_iso_2022_jp@@Base+0x118>
   1c208:	sxtb	r2, r0
   1c20c:	cmp	r2, #0
   1c210:	bmi	1c284 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1c214:	cmp	r0, #27
   1c218:	bhi	1c448 <myencoding_decode_iso_2022_jp@@Base+0x284>
   1c21c:	movw	r3, #49152	; 0xc000
   1c220:	mov	r2, #1
   1c224:	movt	r3, #2048	; 0x800
   1c228:	tst	r3, r2, lsl r0
   1c22c:	bne	1c284 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1c230:	b	1c448 <myencoding_decode_iso_2022_jp@@Base+0x284>
   1c234:	cmp	r0, #126	; 0x7e
   1c238:	beq	1c43c <myencoding_decode_iso_2022_jp@@Base+0x278>
   1c23c:	cmp	r0, #92	; 0x5c
   1c240:	beq	1c444 <myencoding_decode_iso_2022_jp@@Base+0x280>
   1c244:	cmp	r0, #27
   1c248:	beq	1c2dc <myencoding_decode_iso_2022_jp@@Base+0x118>
   1c24c:	sxtb	r2, r0
   1c250:	cmp	r2, #0
   1c254:	bmi	1c284 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1c258:	cmp	r0, #27
   1c25c:	bhi	1c274 <myencoding_decode_iso_2022_jp@@Base+0xb0>
   1c260:	movw	r3, #49152	; 0xc000
   1c264:	mov	r2, #1
   1c268:	movt	r3, #2048	; 0x800
   1c26c:	tst	r3, r2, lsl r0
   1c270:	bne	1c284 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1c274:	cmp	r0, #92	; 0x5c
   1c278:	beq	1c284 <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1c27c:	cmp	r0, #126	; 0x7e
   1c280:	bne	1c448 <myencoding_decode_iso_2022_jp@@Base+0x284>
   1c284:	mov	r0, #0
   1c288:	str	r0, [r1, #20]
   1c28c:	mov	ip, #1
   1c290:	mov	r0, ip
   1c294:	bx	lr
   1c298:	cmp	r0, #27
   1c29c:	beq	1c2dc <myencoding_decode_iso_2022_jp@@Base+0x118>
   1c2a0:	mov	r2, #0
   1c2a4:	mov	ip, #1
   1c2a8:	str	r2, [r1, #20]
   1c2ac:	sub	r2, r0, #33	; 0x21
   1c2b0:	uxtb	r2, r2
   1c2b4:	cmp	r2, #62	; 0x3e
   1c2b8:	bhi	1c410 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   1c2bc:	movw	r2, #65344	; 0xff40
   1c2c0:	mov	ip, #0
   1c2c4:	add	r0, r0, r2
   1c2c8:	str	r0, [r1, #12]
   1c2cc:	mov	r0, ip
   1c2d0:	bx	lr
   1c2d4:	cmp	r0, #27
   1c2d8:	bne	1c3e4 <myencoding_decode_iso_2022_jp@@Base+0x220>
   1c2dc:	mov	r0, #6
   1c2e0:	str	r0, [r1, #4]
   1c2e4:	mov	ip, #2
   1c2e8:	mov	r0, ip
   1c2ec:	bx	lr
   1c2f0:	cmp	r0, #27
   1c2f4:	moveq	r0, #6
   1c2f8:	moveq	ip, #3
   1c2fc:	streq	r0, [r1, #4]
   1c300:	moveq	r0, ip
   1c304:	bxeq	lr
   1c308:	mov	r2, #4
   1c30c:	mov	ip, #1
   1c310:	str	r2, [r1, #4]
   1c314:	sub	r2, r0, #33	; 0x21
   1c318:	uxtb	r2, r2
   1c31c:	cmp	r2, #93	; 0x5d
   1c320:	bhi	1c410 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   1c324:	ldr	r2, [r1]
   1c328:	mov	r3, #94	; 0x5e
   1c32c:	mla	r0, r2, r3, r0
   1c330:	ldr	r2, [pc, #292]	; 1c45c <myencoding_decode_iso_2022_jp@@Base+0x298>
   1c334:	add	r2, pc, r2
   1c338:	add	r0, r2, r0, lsl #2
   1c33c:	movw	r2, #52996	; 0xcf04
   1c340:	movt	r2, #65535	; 0xffff
   1c344:	ldr	r0, [r0, r2]
   1c348:	str	r0, [r1, #12]
   1c34c:	clz	r0, r0
   1c350:	lsr	ip, r0, #5
   1c354:	mov	r0, ip
   1c358:	bx	lr
   1c35c:	cmp	r0, #40	; 0x28
   1c360:	cmpne	r0, #36	; 0x24
   1c364:	bne	1c420 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   1c368:	mov	r2, #7
   1c36c:	b	1c404 <myencoding_decode_iso_2022_jp@@Base+0x240>
   1c370:	mov	r3, #0
   1c374:	cmp	r0, #66	; 0x42
   1c378:	str	r3, [r1, #4]
   1c37c:	ldr	r2, [r1]
   1c380:	str	r3, [r1]
   1c384:	cmpeq	r2, #40	; 0x28
   1c388:	beq	1c418 <myencoding_decode_iso_2022_jp@@Base+0x254>
   1c38c:	cmp	r0, #74	; 0x4a
   1c390:	moveq	r3, #1
   1c394:	cmpeq	r2, #40	; 0x28
   1c398:	beq	1c3c0 <myencoding_decode_iso_2022_jp@@Base+0x1fc>
   1c39c:	cmp	r0, #73	; 0x49
   1c3a0:	moveq	r3, #2
   1c3a4:	cmpeq	r2, #40	; 0x28
   1c3a8:	beq	1c3c0 <myencoding_decode_iso_2022_jp@@Base+0x1fc>
   1c3ac:	cmp	r2, #36	; 0x24
   1c3b0:	orreq	r0, r0, #2
   1c3b4:	moveq	r3, #4
   1c3b8:	cmpeq	r0, #66	; 0x42
   1c3bc:	bne	1c420 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   1c3c0:	str	r3, [r1, #4]
   1c3c4:	str	r3, [r1, #8]
   1c3c8:	mov	ip, #1
   1c3cc:	ldr	r0, [r1, #20]
   1c3d0:	str	ip, [r1, #20]
   1c3d4:	cmp	r0, #0
   1c3d8:	movweq	ip, #2
   1c3dc:	mov	r0, ip
   1c3e0:	bx	lr
   1c3e4:	mov	r2, #0
   1c3e8:	mov	ip, #1
   1c3ec:	str	r2, [r1, #20]
   1c3f0:	sub	r2, r0, #33	; 0x21
   1c3f4:	uxtb	r2, r2
   1c3f8:	cmp	r2, #93	; 0x5d
   1c3fc:	bhi	1c410 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   1c400:	mov	r2, #5
   1c404:	str	r0, [r1]
   1c408:	str	r2, [r1, #4]
   1c40c:	mov	ip, #2
   1c410:	mov	r0, ip
   1c414:	bx	lr
   1c418:	mov	r0, #0
   1c41c:	str	r0, [r1, #4]
   1c420:	mov	r0, #0
   1c424:	str	r0, [r1, #20]
   1c428:	ldr	r0, [r1, #8]
   1c42c:	str	r0, [r1, #4]
   1c430:	mov	ip, #1
   1c434:	mov	r0, ip
   1c438:	bx	lr
   1c43c:	movw	r0, #8254	; 0x203e
   1c440:	b	1c448 <myencoding_decode_iso_2022_jp@@Base+0x284>
   1c444:	mov	r0, #165	; 0xa5
   1c448:	mov	ip, #0
   1c44c:	str	r0, [r1, #12]
   1c450:	mov	r0, ip
   1c454:	str	ip, [r1, #20]
   1c458:	bx	lr
   1c45c:	andeq	fp, r5, r8, asr #19

0001c460 <myencoding_decode_shift_jis@@Base>:
   1c460:	ldr	r2, [r1]
   1c464:	cmp	r2, #0
   1c468:	beq	1c4f8 <myencoding_decode_shift_jis@@Base+0x98>
   1c46c:	sub	r3, r0, #64	; 0x40
   1c470:	cmp	r2, #160	; 0xa0
   1c474:	mov	ip, #193	; 0xc1
   1c478:	uxtb	r3, r3
   1c47c:	movwcc	ip, #129	; 0x81
   1c480:	cmp	r3, #63	; 0x3f
   1c484:	bcc	1c49c <myencoding_decode_shift_jis@@Base+0x3c>
   1c488:	sxtb	r3, r0
   1c48c:	cmn	r3, #1
   1c490:	bgt	1c534 <myencoding_decode_shift_jis@@Base+0xd4>
   1c494:	cmp	r0, #252	; 0xfc
   1c498:	bhi	1c534 <myencoding_decode_shift_jis@@Base+0xd4>
   1c49c:	cmp	r0, #127	; 0x7f
   1c4a0:	mvn	r3, #64	; 0x40
   1c4a4:	sub	r2, r2, ip
   1c4a8:	mvncc	r3, #63	; 0x3f
   1c4ac:	add	r0, r3, r0
   1c4b0:	mov	r3, #188	; 0xbc
   1c4b4:	mla	r2, r2, r3, r0
   1c4b8:	cmp	r2, #0
   1c4bc:	beq	1c534 <myencoding_decode_shift_jis@@Base+0xd4>
   1c4c0:	ldr	r0, [pc, #172]	; 1c574 <myencoding_decode_shift_jis@@Base+0x114>
   1c4c4:	movw	r3, #8836	; 0x2284
   1c4c8:	sub	ip, r2, r3
   1c4cc:	movw	r3, #1692	; 0x69c
   1c4d0:	cmp	ip, r3
   1c4d4:	add	r0, pc, r0
   1c4d8:	ldr	r0, [r0, r2, lsl #2]
   1c4dc:	str	r0, [r1, #12]
   1c4e0:	bhi	1c53c <myencoding_decode_shift_jis@@Base+0xdc>
   1c4e4:	cmp	r0, #0
   1c4e8:	bne	1c53c <myencoding_decode_shift_jis@@Base+0xdc>
   1c4ec:	movw	r0, #48508	; 0xbd7c
   1c4f0:	add	r0, r2, r0
   1c4f4:	b	1c538 <myencoding_decode_shift_jis@@Base+0xd8>
   1c4f8:	sxtb	r2, r0
   1c4fc:	cmn	r2, #1
   1c500:	bgt	1c524 <myencoding_decode_shift_jis@@Base+0xc4>
   1c504:	cmp	r0, #128	; 0x80
   1c508:	beq	1c524 <myencoding_decode_shift_jis@@Base+0xc4>
   1c50c:	add	r2, r0, #95	; 0x5f
   1c510:	uxtb	r2, r2
   1c514:	cmp	r2, #62	; 0x3e
   1c518:	bhi	1c54c <myencoding_decode_shift_jis@@Base+0xec>
   1c51c:	movw	r2, #65216	; 0xfec0
   1c520:	add	r0, r0, r2
   1c524:	mov	r2, #0
   1c528:	str	r0, [r1, #12]
   1c52c:	mov	r0, r2
   1c530:	bx	lr
   1c534:	mov	r0, #0
   1c538:	str	r0, [r1, #12]
   1c53c:	clz	r0, r0
   1c540:	lsr	r2, r0, #5
   1c544:	mov	r0, r2
   1c548:	bx	lr
   1c54c:	cmp	r0, #160	; 0xa0
   1c550:	addcs	r3, r0, #32
   1c554:	movcs	r2, #1
   1c558:	uxtbcs	r3, r3
   1c55c:	cmpcs	r3, #28
   1c560:	bhi	1c56c <myencoding_decode_shift_jis@@Base+0x10c>
   1c564:	mov	r2, #2
   1c568:	str	r0, [r1]
   1c56c:	mov	r0, r2
   1c570:	bx	lr
   1c574:	andeq	fp, r5, r8, lsr #16

0001c578 <myencoding_decode_euc_kr@@Base>:
   1c578:	ldr	r2, [r1]
   1c57c:	cmp	r2, #0
   1c580:	beq	1c5d0 <myencoding_decode_euc_kr@@Base+0x58>
   1c584:	mov	r3, #0
   1c588:	cmp	r0, #65	; 0x41
   1c58c:	str	r3, [r1]
   1c590:	bcc	1c5bc <myencoding_decode_euc_kr@@Base+0x44>
   1c594:	cmp	r0, #255	; 0xff
   1c598:	movne	r3, #190	; 0xbe
   1c59c:	mlane	r0, r2, r3, r0
   1c5a0:	movwne	r2, #24575	; 0x5fff
   1c5a4:	subsne	r0, r0, r2
   1c5a8:	beq	1c5bc <myencoding_decode_euc_kr@@Base+0x44>
   1c5ac:	ldr	r2, [pc, #80]	; 1c604 <myencoding_decode_euc_kr@@Base+0x8c>
   1c5b0:	add	r2, pc, r2
   1c5b4:	ldr	r0, [r2, r0, lsl #2]
   1c5b8:	str	r0, [r1, #12]
   1c5bc:	ldr	r0, [r1, #12]
   1c5c0:	clz	r0, r0
   1c5c4:	lsr	r2, r0, #5
   1c5c8:	mov	r0, r2
   1c5cc:	bx	lr
   1c5d0:	sxtb	r2, r0
   1c5d4:	cmp	r2, #0
   1c5d8:	movpl	r2, #0
   1c5dc:	strpl	r0, [r1, #12]
   1c5e0:	movpl	r0, r2
   1c5e4:	bxpl	lr
   1c5e8:	cmp	r0, #128	; 0x80
   1c5ec:	mov	r2, #1
   1c5f0:	cmpne	r0, #255	; 0xff
   1c5f4:	movne	r2, #2
   1c5f8:	strne	r0, [r1]
   1c5fc:	mov	r0, r2
   1c600:	bx	lr
   1c604:	andeq	r6, r6, ip, lsl #15

0001c608 <myencoding_decode_shared_utf_16@@Base>:
   1c608:	push	{fp, lr}
   1c60c:	mov	fp, sp
   1c610:	ldr	r3, [r1]
   1c614:	cmp	r3, #0
   1c618:	beq	1c66c <myencoding_decode_shared_utf_16@@Base+0x64>
   1c61c:	ldr	r2, [r1, #20]
   1c620:	mov	ip, #0
   1c624:	str	ip, [r1]
   1c628:	cmp	r2, #0
   1c62c:	addeq	lr, r3, r0, lsl #8
   1c630:	orrne	lr, r0, r3, lsl #8
   1c634:	ldr	r3, [r1, #4]
   1c638:	cmp	r3, #0
   1c63c:	beq	1c678 <myencoding_decode_shared_utf_16@@Base+0x70>
   1c640:	mov	r0, lr
   1c644:	str	ip, [r1, #4]
   1c648:	bfc	r0, #0, #10
   1c64c:	cmp	r0, #56320	; 0xdc00
   1c650:	bne	1c6a0 <myencoding_decode_shared_utf_16@@Base+0x98>
   1c654:	add	r0, lr, r3, lsl #10
   1c658:	sub	r0, r0, #252928	; 0x3dc00
   1c65c:	sub	r0, r0, #56360960	; 0x35c0000
   1c660:	str	r0, [r1, #12]
   1c664:	mov	r0, #0
   1c668:	pop	{fp, pc}
   1c66c:	str	r0, [r1]
   1c670:	mov	r0, #2
   1c674:	pop	{fp, pc}
   1c678:	mov	r2, lr
   1c67c:	bfc	r2, #0, #10
   1c680:	cmp	r2, #56320	; 0xdc00
   1c684:	beq	1c6c4 <myencoding_decode_shared_utf_16@@Base+0xbc>
   1c688:	cmp	r2, #55296	; 0xd800
   1c68c:	moveq	r0, #2
   1c690:	movne	r0, #0
   1c694:	streq	lr, [r1, #4]
   1c698:	strne	lr, [r1, #12]
   1c69c:	pop	{fp, pc}
   1c6a0:	lsr	r3, lr, #8
   1c6a4:	cmp	r2, #0
   1c6a8:	beq	1c6cc <myencoding_decode_shared_utf_16@@Base+0xc4>
   1c6ac:	uxtb	r0, lr
   1c6b0:	uxtb	r2, r3
   1c6b4:	str	r2, [r1, #12]
   1c6b8:	str	r0, [r1, #16]
   1c6bc:	mov	r0, #5
   1c6c0:	pop	{fp, pc}
   1c6c4:	mov	r0, #1
   1c6c8:	pop	{fp, pc}
   1c6cc:	uxtb	r0, r3
   1c6d0:	uxtb	r2, lr
   1c6d4:	str	r2, [r1, #12]
   1c6d8:	str	r0, [r1, #16]
   1c6dc:	mov	r0, #5
   1c6e0:	pop	{fp, pc}

0001c6e4 <myencoding_decode_utf_16be@@Base>:
   1c6e4:	push	{r4, sl, fp, lr}
   1c6e8:	add	fp, sp, #8
   1c6ec:	ldr	r2, [r1, #20]
   1c6f0:	cmp	r2, #0
   1c6f4:	moveq	r2, #1
   1c6f8:	streq	r2, [r1, #20]
   1c6fc:	ldr	r3, [r1]
   1c700:	cmp	r3, #0
   1c704:	beq	1c750 <myencoding_decode_utf_16be@@Base+0x6c>
   1c708:	mov	lr, #0
   1c70c:	orr	ip, r0, r3, lsl #8
   1c710:	str	lr, [r1]
   1c714:	ldr	r4, [r1, #4]
   1c718:	cmp	r4, #0
   1c71c:	beq	1c75c <myencoding_decode_utf_16be@@Base+0x78>
   1c720:	movw	r2, #65532	; 0xfffc
   1c724:	str	lr, [r1, #4]
   1c728:	movt	r2, #255	; 0xff
   1c72c:	and	r2, r3, r2
   1c730:	cmp	r2, #220	; 0xdc
   1c734:	bne	1c784 <myencoding_decode_utf_16be@@Base+0xa0>
   1c738:	add	r0, ip, r4, lsl #10
   1c73c:	sub	r0, r0, #252928	; 0x3dc00
   1c740:	sub	r0, r0, #56360960	; 0x35c0000
   1c744:	str	r0, [r1, #12]
   1c748:	mov	r0, #0
   1c74c:	pop	{r4, sl, fp, pc}
   1c750:	str	r0, [r1]
   1c754:	mov	r0, #2
   1c758:	pop	{r4, sl, fp, pc}
   1c75c:	lsl	r0, r3, #8
   1c760:	bfc	r0, #0, #10
   1c764:	cmp	r0, #56320	; 0xdc00
   1c768:	beq	1c798 <myencoding_decode_utf_16be@@Base+0xb4>
   1c76c:	cmp	r0, #55296	; 0xd800
   1c770:	moveq	r0, #2
   1c774:	movne	r0, #0
   1c778:	streq	ip, [r1, #4]
   1c77c:	strne	ip, [r1, #12]
   1c780:	pop	{r4, sl, fp, pc}
   1c784:	uxtb	r2, r3
   1c788:	str	r2, [r1, #12]
   1c78c:	str	r0, [r1, #16]
   1c790:	mov	r0, #5
   1c794:	pop	{r4, sl, fp, pc}
   1c798:	mov	r0, #1
   1c79c:	pop	{r4, sl, fp, pc}

0001c7a0 <myencoding_decode_utf_16le@@Base>:
   1c7a0:	ldr	r2, [r1, #20]
   1c7a4:	cmp	r2, #0
   1c7a8:	movne	r2, #0
   1c7ac:	strne	r2, [r1, #20]
   1c7b0:	ldr	r2, [r1]
   1c7b4:	cmp	r2, #0
   1c7b8:	streq	r0, [r1]
   1c7bc:	moveq	r0, #2
   1c7c0:	bxeq	lr
   1c7c4:	mov	r3, #0
   1c7c8:	add	r0, r2, r0, lsl #8
   1c7cc:	str	r3, [r1]
   1c7d0:	ldr	r2, [r1, #4]
   1c7d4:	cmp	r2, #0
   1c7d8:	beq	1c808 <myencoding_decode_utf_16le@@Base+0x68>
   1c7dc:	str	r3, [r1, #4]
   1c7e0:	mov	r3, r0
   1c7e4:	bfc	r3, #0, #10
   1c7e8:	cmp	r3, #56320	; 0xdc00
   1c7ec:	bne	1c838 <myencoding_decode_utf_16le@@Base+0x98>
   1c7f0:	add	r0, r0, r2, lsl #10
   1c7f4:	sub	r0, r0, #252928	; 0x3dc00
   1c7f8:	sub	r0, r0, #56360960	; 0x35c0000
   1c7fc:	str	r0, [r1, #12]
   1c800:	mov	r0, #0
   1c804:	bx	lr
   1c808:	mov	r2, r0
   1c80c:	bfc	r2, #0, #10
   1c810:	cmp	r2, #56320	; 0xdc00
   1c814:	moveq	r0, #1
   1c818:	bxeq	lr
   1c81c:	cmp	r2, #55296	; 0xd800
   1c820:	streq	r0, [r1, #4]
   1c824:	moveq	r0, #2
   1c828:	bxeq	lr
   1c82c:	str	r0, [r1, #12]
   1c830:	mov	r0, #0
   1c834:	bx	lr
   1c838:	ubfx	r2, r0, #8, #8
   1c83c:	uxtb	r0, r0
   1c840:	str	r0, [r1, #12]
   1c844:	mov	r0, #5
   1c848:	str	r2, [r1, #16]
   1c84c:	bx	lr

0001c850 <myencoding_decode_x_user_defined@@Base>:
   1c850:	sxtb	r2, r0
   1c854:	cmn	r2, #1
   1c858:	orrle	r0, r0, #63232	; 0xf700
   1c85c:	str	r0, [r1, #12]
   1c860:	mov	r0, #0
   1c864:	bx	lr

0001c868 <myencoding_result_clean@@Base>:
   1c868:	vmov.i32	q8, #0	; 0x00000000
   1c86c:	mov	r1, #0
   1c870:	mov	r2, #20
   1c874:	str	r1, [r0, #16]
   1c878:	vst1.32	{d16-d17}, [r0], r2
   1c87c:	str	r1, [r0]
   1c880:	bx	lr

0001c884 <myencoding_codepoint_ascii_length@@Base>:
   1c884:	mov	r1, #1
   1c888:	cmp	r0, #128	; 0x80
   1c88c:	bcc	1c8a4 <myencoding_codepoint_ascii_length@@Base+0x20>
   1c890:	cmp	r0, #2048	; 0x800
   1c894:	mov	r1, #2
   1c898:	movcs	r1, #3
   1c89c:	cmpcs	r0, #65536	; 0x10000
   1c8a0:	bcs	1c8ac <myencoding_codepoint_ascii_length@@Base+0x28>
   1c8a4:	mov	r0, r1
   1c8a8:	bx	lr
   1c8ac:	cmp	r0, #2097152	; 0x200000
   1c8b0:	mov	r1, #4
   1c8b4:	movcs	r1, #5
   1c8b8:	cmpcs	r0, #67108864	; 0x4000000
   1c8bc:	bcc	1c8a4 <myencoding_codepoint_ascii_length@@Base+0x20>
   1c8c0:	cmn	r0, #1
   1c8c4:	mov	r1, #0
   1c8c8:	movwgt	r1, #6
   1c8cc:	mov	r0, r1
   1c8d0:	bx	lr

0001c8d4 <myencoding_ascii_utf_8_length@@Base>:
   1c8d4:	sxtb	r2, r0
   1c8d8:	mov	r1, #1
   1c8dc:	cmn	r2, #1
   1c8e0:	bgt	1c900 <myencoding_ascii_utf_8_length@@Base+0x2c>
   1c8e4:	and	r2, r0, #224	; 0xe0
   1c8e8:	mov	r1, #2
   1c8ec:	cmp	r2, #192	; 0xc0
   1c8f0:	andne	r2, r0, #240	; 0xf0
   1c8f4:	movne	r1, #3
   1c8f8:	cmpne	r2, #224	; 0xe0
   1c8fc:	bne	1c908 <myencoding_ascii_utf_8_length@@Base+0x34>
   1c900:	mov	r0, r1
   1c904:	bx	lr
   1c908:	and	r2, r0, #248	; 0xf8
   1c90c:	mov	r1, #4
   1c910:	cmp	r2, #240	; 0xf0
   1c914:	andne	r2, r0, #252	; 0xfc
   1c918:	movne	r1, #5
   1c91c:	cmpne	r2, #248	; 0xf8
   1c920:	beq	1c900 <myencoding_ascii_utf_8_length@@Base+0x2c>
   1c924:	cmp	r0, #252	; 0xfc
   1c928:	mov	r1, #0
   1c92c:	movweq	r1, #6
   1c930:	mov	r0, r1
   1c934:	bx	lr

0001c938 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   1c938:	cmp	r0, #127	; 0x7f
   1c93c:	movls	r2, #1
   1c940:	strbls	r0, [r1]
   1c944:	movls	r0, r2
   1c948:	bxls	lr
   1c94c:	mov	r2, #0
   1c950:	cmp	r2, r0, lsr #11
   1c954:	bne	1c97c <myencoding_codepoint_to_ascii_utf_8@@Base+0x44>
   1c958:	mov	r2, #2
   1c95c:	mov	r3, r0
   1c960:	bfi	r3, r2, #6, #26
   1c964:	strb	r3, [r1, #1]
   1c968:	mov	r3, #192	; 0xc0
   1c96c:	orr	r0, r3, r0, lsr #6
   1c970:	strb	r0, [r1]
   1c974:	mov	r0, r2
   1c978:	bx	lr
   1c97c:	cmp	r2, r0, lsr #16
   1c980:	bne	1c9b8 <myencoding_codepoint_to_ascii_utf_8@@Base+0x80>
   1c984:	mov	r2, #2
   1c988:	mov	r3, r0
   1c98c:	bfi	r3, r2, #6, #26
   1c990:	strb	r3, [r1, #2]
   1c994:	mov	r3, #224	; 0xe0
   1c998:	orr	r3, r3, r0, lsr #12
   1c99c:	lsr	r0, r0, #6
   1c9a0:	bfi	r0, r2, #6, #26
   1c9a4:	mov	r2, #3
   1c9a8:	strb	r3, [r1]
   1c9ac:	strb	r0, [r1, #1]
   1c9b0:	mov	r0, r2
   1c9b4:	bx	lr
   1c9b8:	mov	r2, #0
   1c9bc:	cmp	r2, r0, lsr #21
   1c9c0:	bne	1c9fc <myencoding_codepoint_to_ascii_utf_8@@Base+0xc4>
   1c9c4:	mov	r2, #2
   1c9c8:	mov	r3, r0
   1c9cc:	bfi	r3, r2, #6, #26
   1c9d0:	strb	r3, [r1, #3]
   1c9d4:	mov	r3, #240	; 0xf0
   1c9d8:	orr	r3, r3, r0, lsr #18
   1c9dc:	strb	r3, [r1]
   1c9e0:	lsr	r3, r0, #6
   1c9e4:	lsr	r0, r0, #12
   1c9e8:	bfi	r3, r2, #6, #26
   1c9ec:	bfi	r0, r2, #6, #26
   1c9f0:	mov	r2, #4
   1c9f4:	strb	r3, [r1, #2]
   1c9f8:	strb	r0, [r1, #1]
   1c9fc:	mov	r0, r2
   1ca00:	bx	lr

0001ca04 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   1ca04:	cmp	r0, #127	; 0x7f
   1ca08:	bhi	1ca28 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x24>
   1ca0c:	ldr	r2, [pc, #204]	; 1cae0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xdc>
   1ca10:	add	r2, pc, r2
   1ca14:	ldrb	r0, [r2, r0]
   1ca18:	mov	r2, #1
   1ca1c:	strb	r0, [r1]
   1ca20:	mov	r0, r2
   1ca24:	bx	lr
   1ca28:	mov	r2, #0
   1ca2c:	cmp	r2, r0, lsr #11
   1ca30:	bne	1ca58 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x54>
   1ca34:	mov	r2, #2
   1ca38:	mov	r3, r0
   1ca3c:	bfi	r3, r2, #6, #26
   1ca40:	strb	r3, [r1, #1]
   1ca44:	mov	r3, #192	; 0xc0
   1ca48:	orr	r0, r3, r0, lsr #6
   1ca4c:	strb	r0, [r1]
   1ca50:	mov	r0, r2
   1ca54:	bx	lr
   1ca58:	cmp	r2, r0, lsr #16
   1ca5c:	bne	1ca94 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x90>
   1ca60:	mov	r2, #2
   1ca64:	mov	r3, r0
   1ca68:	bfi	r3, r2, #6, #26
   1ca6c:	strb	r3, [r1, #2]
   1ca70:	mov	r3, #224	; 0xe0
   1ca74:	orr	r3, r3, r0, lsr #12
   1ca78:	lsr	r0, r0, #6
   1ca7c:	bfi	r0, r2, #6, #26
   1ca80:	mov	r2, #3
   1ca84:	strb	r3, [r1]
   1ca88:	strb	r0, [r1, #1]
   1ca8c:	mov	r0, r2
   1ca90:	bx	lr
   1ca94:	mov	r2, #0
   1ca98:	cmp	r2, r0, lsr #21
   1ca9c:	bne	1cad8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   1caa0:	mov	r2, #2
   1caa4:	mov	r3, r0
   1caa8:	bfi	r3, r2, #6, #26
   1caac:	strb	r3, [r1, #3]
   1cab0:	mov	r3, #240	; 0xf0
   1cab4:	orr	r3, r3, r0, lsr #18
   1cab8:	strb	r3, [r1]
   1cabc:	lsr	r3, r0, #6
   1cac0:	lsr	r0, r0, #12
   1cac4:	bfi	r3, r2, #6, #26
   1cac8:	bfi	r0, r2, #6, #26
   1cacc:	mov	r2, #4
   1cad0:	strb	r3, [r1, #2]
   1cad4:	strb	r0, [r1, #1]
   1cad8:	mov	r0, r2
   1cadc:	bx	lr
   1cae0:	ldrdeq	r2, [r5], -ip

0001cae4 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   1cae4:	ldrsb	r2, [r0]
   1cae8:	uxtb	r3, r2
   1caec:	cmn	r2, #1
   1caf0:	ble	1cafc <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   1caf4:	mov	r2, #1
   1caf8:	b	1cb9c <myencoding_ascii_utf_8_to_codepoint@@Base+0xb8>
   1cafc:	and	r2, r3, #224	; 0xe0
   1cb00:	cmp	r2, #192	; 0xc0
   1cb04:	bne	1cb1c <myencoding_ascii_utf_8_to_codepoint@@Base+0x38>
   1cb08:	mov	r2, #4032	; 0xfc0
   1cb0c:	mov	ip, #1
   1cb10:	and	r3, r2, r3, lsl #6
   1cb14:	mov	r2, #2
   1cb18:	b	1cb8c <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1cb1c:	and	r2, r3, #240	; 0xf0
   1cb20:	cmp	r2, #224	; 0xe0
   1cb24:	bne	1cb4c <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   1cb28:	mov	r2, #126976	; 0x1f000
   1cb2c:	mov	ip, #2
   1cb30:	and	r2, r2, r3, lsl #12
   1cb34:	str	r2, [r1]
   1cb38:	ldrb	r3, [r0, #1]
   1cb3c:	and	r3, r3, #127	; 0x7f
   1cb40:	orr	r3, r2, r3, lsl #6
   1cb44:	mov	r2, #3
   1cb48:	b	1cb8c <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1cb4c:	and	ip, r3, #248	; 0xf8
   1cb50:	mov	r2, #0
   1cb54:	cmp	ip, #240	; 0xf0
   1cb58:	bne	1cba0 <myencoding_ascii_utf_8_to_codepoint@@Base+0xbc>
   1cb5c:	mov	r2, #3932160	; 0x3c0000
   1cb60:	mov	ip, #3
   1cb64:	and	r2, r2, r3, lsl #18
   1cb68:	str	r2, [r1]
   1cb6c:	ldrb	r3, [r0, #1]
   1cb70:	and	r3, r3, #127	; 0x7f
   1cb74:	orr	r2, r2, r3, lsl #12
   1cb78:	str	r2, [r1]
   1cb7c:	ldrb	r3, [r0, #2]
   1cb80:	and	r3, r3, #127	; 0x7f
   1cb84:	orr	r3, r2, r3, lsl #6
   1cb88:	mov	r2, #4
   1cb8c:	str	r3, [r1]
   1cb90:	ldrb	r0, [r0, ip]
   1cb94:	and	r0, r0, #127	; 0x7f
   1cb98:	orr	r3, r3, r0
   1cb9c:	str	r3, [r1]
   1cba0:	mov	r0, r2
   1cba4:	bx	lr

0001cba8 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   1cba8:	cmp	r0, #65536	; 0x10000
   1cbac:	bcc	1cbe8 <myencoding_codepoint_to_ascii_utf_16@@Base+0x40>
   1cbb0:	sub	r0, r0, #65536	; 0x10000
   1cbb4:	mov	r2, #216	; 0xd8
   1cbb8:	mov	r3, #55	; 0x37
   1cbbc:	orr	r2, r2, r0, lsr #18
   1cbc0:	strb	r0, [r1, #3]
   1cbc4:	strb	r2, [r1]
   1cbc8:	lsr	r2, r0, #8
   1cbcc:	lsr	r0, r0, #10
   1cbd0:	bfi	r2, r3, #2, #30
   1cbd4:	strb	r2, [r1, #2]
   1cbd8:	mov	r2, #4
   1cbdc:	strb	r0, [r1, #1]
   1cbe0:	mov	r0, r2
   1cbe4:	bx	lr
   1cbe8:	lsr	r2, r0, #8
   1cbec:	strb	r2, [r1]
   1cbf0:	mov	r2, #2
   1cbf4:	strb	r0, [r1, #1]
   1cbf8:	mov	r0, r2
   1cbfc:	bx	lr

0001cc00 <myencoding_convert_to_ascii_utf_8@@Base>:
   1cc00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc04:	add	fp, sp, #28
   1cc08:	sub	sp, sp, #36	; 0x24
   1cc0c:	mov	r6, r0
   1cc10:	ldr	r0, [r0]
   1cc14:	mov	r8, r3
   1cc18:	mov	r4, r2
   1cc1c:	mov	r9, r1
   1cc20:	cmp	r0, #0
   1cc24:	bne	1cc44 <myencoding_convert_to_ascii_utf_8@@Base+0x44>
   1cc28:	add	r0, r4, #1
   1cc2c:	mov	r7, #0
   1cc30:	stmib	r6, {r0, r7}
   1cc34:	bl	119a8 <mycore_malloc@plt>
   1cc38:	cmp	r0, #0
   1cc3c:	str	r0, [r6]
   1cc40:	beq	1cdcc <myencoding_convert_to_ascii_utf_8@@Base+0x1cc>
   1cc44:	vmov.i32	q8, #0	; 0x00000000
   1cc48:	mov	r0, #20
   1cc4c:	add	r1, sp, #8
   1cc50:	mov	r7, #0
   1cc54:	cmp	r4, #0
   1cc58:	str	r7, [sp, #24]
   1cc5c:	vst1.64	{d16-d17}, [r1], r0
   1cc60:	str	r7, [r1]
   1cc64:	beq	1cdcc <myencoding_convert_to_ascii_utf_8@@Base+0x1cc>
   1cc68:	ldr	r0, [pc, #376]	; 1cde8 <myencoding_convert_to_ascii_utf_8@@Base+0x1e8>
   1cc6c:	mov	r7, #0
   1cc70:	mov	sl, #0
   1cc74:	add	r0, pc, r0
   1cc78:	ldr	r5, [r0, r8, lsl #2]
   1cc7c:	lsr	r0, r4, #1
   1cc80:	add	r8, sp, #8
   1cc84:	str	r0, [sp, #4]
   1cc88:	b	1ccac <myencoding_convert_to_ascii_utf_8@@Base+0xac>
   1cc8c:	strb	r1, [r0]
   1cc90:	mov	r2, #1
   1cc94:	ldr	r0, [r6, #8]
   1cc98:	add	r0, r0, r2
   1cc9c:	str	r0, [r6, #8]
   1cca0:	add	sl, sl, #1
   1cca4:	cmp	r4, sl
   1cca8:	beq	1cdc8 <myencoding_convert_to_ascii_utf_8@@Base+0x1c8>
   1ccac:	ldrb	r0, [r9, sl]
   1ccb0:	mov	r1, r8
   1ccb4:	blx	r5
   1ccb8:	cmp	r0, #0
   1ccbc:	bne	1cca0 <myencoding_convert_to_ascii_utf_8@@Base+0xa0>
   1ccc0:	ldr	r1, [r6, #8]
   1ccc4:	ldr	r2, [r6, #4]
   1ccc8:	add	r0, r1, #6
   1cccc:	cmp	r0, r2
   1ccd0:	bcs	1cd0c <myencoding_convert_to_ascii_utf_8@@Base+0x10c>
   1ccd4:	ldr	r0, [r6]
   1ccd8:	add	r0, r0, r1
   1ccdc:	ldr	r1, [sp, #20]
   1cce0:	cmp	r1, #127	; 0x7f
   1cce4:	bls	1cc8c <myencoding_convert_to_ascii_utf_8@@Base+0x8c>
   1cce8:	cmp	r7, r1, lsr #11
   1ccec:	bne	1cd48 <myencoding_convert_to_ascii_utf_8@@Base+0x148>
   1ccf0:	mov	r3, #192	; 0xc0
   1ccf4:	mov	r2, #2
   1ccf8:	orr	r3, r3, r1, lsr #6
   1ccfc:	bfi	r1, r2, #6, #26
   1cd00:	strb	r1, [r0, #1]
   1cd04:	strb	r3, [r0]
   1cd08:	b	1cc94 <myencoding_convert_to_ascii_utf_8@@Base+0x94>
   1cd0c:	ldr	r1, [sp, #4]
   1cd10:	add	r7, r0, r1
   1cd14:	ldr	r0, [r6]
   1cd18:	mov	r1, r7
   1cd1c:	bl	10d9c <mycore_realloc@plt>
   1cd20:	cmp	r0, #0
   1cd24:	beq	1cdd8 <myencoding_convert_to_ascii_utf_8@@Base+0x1d8>
   1cd28:	stm	r6, {r0, r7}
   1cd2c:	mov	r7, #0
   1cd30:	ldr	r1, [r6, #8]
   1cd34:	add	r0, r0, r1
   1cd38:	ldr	r1, [sp, #20]
   1cd3c:	cmp	r1, #127	; 0x7f
   1cd40:	bls	1cc8c <myencoding_convert_to_ascii_utf_8@@Base+0x8c>
   1cd44:	b	1cce8 <myencoding_convert_to_ascii_utf_8@@Base+0xe8>
   1cd48:	cmp	r7, r1, lsr #16
   1cd4c:	bne	1cd80 <myencoding_convert_to_ascii_utf_8@@Base+0x180>
   1cd50:	mov	r2, r1
   1cd54:	mov	r3, #2
   1cd58:	bfi	r2, r3, #6, #26
   1cd5c:	strb	r2, [r0, #2]
   1cd60:	mov	r2, #224	; 0xe0
   1cd64:	orr	r2, r2, r1, lsr #12
   1cd68:	lsr	r1, r1, #6
   1cd6c:	bfi	r1, r3, #6, #26
   1cd70:	strb	r2, [r0]
   1cd74:	mov	r2, #3
   1cd78:	strb	r1, [r0, #1]
   1cd7c:	b	1cc94 <myencoding_convert_to_ascii_utf_8@@Base+0x94>
   1cd80:	mov	r2, #0
   1cd84:	cmp	r2, r1, lsr #21
   1cd88:	bne	1cc94 <myencoding_convert_to_ascii_utf_8@@Base+0x94>
   1cd8c:	mov	r2, r1
   1cd90:	mov	r3, #2
   1cd94:	bfi	r2, r3, #6, #26
   1cd98:	strb	r2, [r0, #3]
   1cd9c:	mov	r2, #240	; 0xf0
   1cda0:	orr	r2, r2, r1, lsr #18
   1cda4:	strb	r2, [r0]
   1cda8:	lsr	r2, r1, #6
   1cdac:	lsr	r1, r1, #12
   1cdb0:	bfi	r2, r3, #6, #26
   1cdb4:	bfi	r1, r3, #6, #26
   1cdb8:	strb	r2, [r0, #2]
   1cdbc:	mov	r2, #4
   1cdc0:	strb	r1, [r0, #1]
   1cdc4:	b	1cc94 <myencoding_convert_to_ascii_utf_8@@Base+0x94>
   1cdc8:	mov	r7, r4
   1cdcc:	mov	r0, r7
   1cdd0:	sub	sp, fp, #28
   1cdd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cdd8:	mov	r7, #0
   1cddc:	mov	r0, r7
   1cde0:	sub	sp, fp, #28
   1cde4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cde8:	andeq	fp, pc, r8, asr #13

0001cdec <myencoding_string_append@@Base>:
   1cdec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cdf0:	add	fp, sp, #24
   1cdf4:	sub	sp, sp, #32
   1cdf8:	add	r8, sp, #8
   1cdfc:	mov	r7, r0
   1ce00:	mov	r4, r3
   1ce04:	mov	r5, r2
   1ce08:	mov	r6, r1
   1ce0c:	mov	r0, r8
   1ce10:	bl	111f8 <myencoding_result_clean@plt>
   1ce14:	mov	r0, r7
   1ce18:	mov	r1, r8
   1ce1c:	mov	r2, r6
   1ce20:	mov	r3, r5
   1ce24:	str	r4, [sp]
   1ce28:	bl	10dd8 <myencoding_string_append_chunk@plt>
   1ce2c:	sub	sp, fp, #24
   1ce30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ce34 <myencoding_string_append_chunk@@Base>:
   1ce34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ce38:	add	fp, sp, #24
   1ce3c:	mov	r4, r0
   1ce40:	ldr	r0, [fp, #8]
   1ce44:	mov	r5, r3
   1ce48:	mov	r6, r2
   1ce4c:	mov	r7, r1
   1ce50:	bl	11678 <myencoding_get_function_by_id@plt>
   1ce54:	cmp	r5, #0
   1ce58:	beq	1cec4 <myencoding_string_append_chunk@@Base+0x90>
   1ce5c:	mov	r8, r0
   1ce60:	b	1ce8c <myencoding_string_append_chunk@@Base+0x58>
   1ce64:	ldr	r1, [r4]
   1ce68:	add	r1, r1, r0
   1ce6c:	ldr	r0, [r7, #12]
   1ce70:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1ce74:	ldr	r1, [r4, #8]
   1ce78:	add	r0, r1, r0
   1ce7c:	str	r0, [r4, #8]
   1ce80:	add	r6, r6, #1
   1ce84:	subs	r5, r5, #1
   1ce88:	beq	1cec4 <myencoding_string_append_chunk@@Base+0x90>
   1ce8c:	ldrb	r0, [r6]
   1ce90:	mov	r1, r7
   1ce94:	blx	r8
   1ce98:	cmp	r0, #0
   1ce9c:	bne	1ce80 <myencoding_string_append_chunk@@Base+0x4c>
   1cea0:	ldr	r0, [r4, #8]
   1cea4:	ldr	r2, [r4, #4]
   1cea8:	add	r1, r0, #5
   1ceac:	cmp	r1, r2
   1ceb0:	bcc	1ce64 <myencoding_string_append_chunk@@Base+0x30>
   1ceb4:	mov	r0, r4
   1ceb8:	bl	11774 <mycore_string_realloc@plt>
   1cebc:	ldr	r0, [r4, #8]
   1cec0:	b	1ce64 <myencoding_string_append_chunk@@Base+0x30>
   1cec4:	ldr	r1, [r4, #4]
   1cec8:	ldr	r0, [r4, #8]
   1cecc:	cmp	r0, r1
   1ced0:	bcc	1cee4 <myencoding_string_append_chunk@@Base+0xb0>
   1ced4:	add	r1, r0, #1
   1ced8:	mov	r0, r4
   1cedc:	bl	11774 <mycore_string_realloc@plt>
   1cee0:	ldr	r0, [r4, #8]
   1cee4:	ldr	r1, [r4]
   1cee8:	mov	r2, #0
   1ceec:	strb	r2, [r1, r0]
   1cef0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001cef4 <myencoding_string_append_one@@Base>:
   1cef4:	push	{r4, r5, r6, sl, fp, lr}
   1cef8:	add	fp, sp, #16
   1cefc:	mov	r4, r0
   1cf00:	mov	r0, r3
   1cf04:	mov	r6, r2
   1cf08:	mov	r5, r1
   1cf0c:	bl	11678 <myencoding_get_function_by_id@plt>
   1cf10:	mov	r2, r0
   1cf14:	mov	r0, r6
   1cf18:	mov	r1, r5
   1cf1c:	blx	r2
   1cf20:	cmp	r0, #0
   1cf24:	popne	{r4, r5, r6, sl, fp, pc}
   1cf28:	ldr	r0, [r4, #8]
   1cf2c:	ldr	r2, [r4, #4]
   1cf30:	add	r1, r0, #5
   1cf34:	cmp	r1, r2
   1cf38:	bcc	1cf48 <myencoding_string_append_one@@Base+0x54>
   1cf3c:	mov	r0, r4
   1cf40:	bl	11774 <mycore_string_realloc@plt>
   1cf44:	ldr	r0, [r4, #8]
   1cf48:	ldr	r1, [r4]
   1cf4c:	add	r1, r1, r0
   1cf50:	ldr	r0, [r5, #12]
   1cf54:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1cf58:	ldr	r2, [r4, #8]
   1cf5c:	ldr	r1, [r4]
   1cf60:	add	r0, r2, r0
   1cf64:	mov	r2, #0
   1cf68:	str	r0, [r4, #8]
   1cf6c:	strb	r2, [r1, r0]
   1cf70:	pop	{r4, r5, r6, sl, fp, pc}

0001cf74 <myencoding_string_append_lowercase_ascii@@Base>:
   1cf74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cf78:	add	fp, sp, #24
   1cf7c:	sub	sp, sp, #32
   1cf80:	add	r8, sp, #8
   1cf84:	mov	r7, r0
   1cf88:	mov	r4, r3
   1cf8c:	mov	r5, r2
   1cf90:	mov	r6, r1
   1cf94:	mov	r0, r8
   1cf98:	bl	111f8 <myencoding_result_clean@plt>
   1cf9c:	mov	r0, r7
   1cfa0:	mov	r1, r8
   1cfa4:	mov	r2, r6
   1cfa8:	mov	r3, r5
   1cfac:	str	r4, [sp]
   1cfb0:	bl	1199c <myencoding_string_append_chunk_lowercase_ascii@plt>
   1cfb4:	sub	sp, fp, #24
   1cfb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001cfbc <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1cfbc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cfc0:	add	fp, sp, #24
   1cfc4:	mov	r4, r0
   1cfc8:	ldr	r0, [fp, #8]
   1cfcc:	mov	r5, r3
   1cfd0:	mov	r6, r2
   1cfd4:	mov	r7, r1
   1cfd8:	bl	11678 <myencoding_get_function_by_id@plt>
   1cfdc:	cmp	r5, #0
   1cfe0:	beq	1d074 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb8>
   1cfe4:	ldr	r9, [pc, #184]	; 1d0a4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe8>
   1cfe8:	mov	r8, r0
   1cfec:	add	r9, pc, r9
   1cff0:	b	1d00c <myencoding_string_append_chunk_lowercase_ascii@@Base+0x50>
   1cff4:	ldr	r1, [r4, #8]
   1cff8:	add	r0, r1, r0
   1cffc:	str	r0, [r4, #8]
   1d000:	add	r6, r6, #1
   1d004:	subs	r5, r5, #1
   1d008:	beq	1d074 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb8>
   1d00c:	ldrb	r0, [r6]
   1d010:	mov	r1, r7
   1d014:	blx	r8
   1d018:	cmp	r0, #0
   1d01c:	bne	1d000 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x44>
   1d020:	ldr	r0, [r4, #8]
   1d024:	ldr	r1, [r4, #4]
   1d028:	add	r2, r0, #5
   1d02c:	cmp	r2, r1
   1d030:	bcc	1d044 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x88>
   1d034:	add	r1, r0, #6
   1d038:	mov	r0, r4
   1d03c:	bl	11774 <mycore_string_realloc@plt>
   1d040:	ldr	r0, [r4, #8]
   1d044:	ldr	r1, [r4]
   1d048:	add	r1, r1, r0
   1d04c:	ldr	r0, [r7, #12]
   1d050:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1d054:	cmp	r0, #1
   1d058:	bne	1cff4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   1d05c:	ldrb	r1, [r6]
   1d060:	ldr	r2, [r4]
   1d064:	ldr	r3, [r4, #8]
   1d068:	ldrb	r1, [r9, r1]
   1d06c:	strb	r1, [r2, r3]
   1d070:	b	1cff4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   1d074:	ldr	r1, [r4, #4]
   1d078:	ldr	r0, [r4, #8]
   1d07c:	cmp	r0, r1
   1d080:	bcc	1d094 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd8>
   1d084:	add	r1, r0, #1
   1d088:	mov	r0, r4
   1d08c:	bl	11774 <mycore_string_realloc@plt>
   1d090:	ldr	r0, [r4, #8]
   1d094:	ldr	r1, [r4]
   1d098:	mov	r2, #0
   1d09c:	strb	r2, [r1, r0]
   1d0a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d0a4:	andeq	sp, r7, r0, ror #6

0001d0a8 <myhtml_callback_before_token_done@@Base>:
   1d0a8:	ldr	r0, [r0, #220]	; 0xdc
   1d0ac:	bx	lr

0001d0b0 <myhtml_callback_after_token_done@@Base>:
   1d0b0:	ldr	r0, [r0, #224]	; 0xe0
   1d0b4:	bx	lr

0001d0b8 <myhtml_callback_before_token_done_set@@Base>:
   1d0b8:	str	r2, [r0, #228]	; 0xe4
   1d0bc:	str	r1, [r0, #220]	; 0xdc
   1d0c0:	bx	lr

0001d0c4 <myhtml_callback_after_token_done_set@@Base>:
   1d0c4:	str	r2, [r0, #232]	; 0xe8
   1d0c8:	str	r1, [r0, #224]	; 0xe0
   1d0cc:	bx	lr

0001d0d0 <myhtml_callback_tree_node_insert@@Base>:
   1d0d0:	ldr	r0, [r0, #236]	; 0xec
   1d0d4:	bx	lr

0001d0d8 <myhtml_callback_tree_node_remove@@Base>:
   1d0d8:	ldr	r0, [r0, #240]	; 0xf0
   1d0dc:	bx	lr

0001d0e0 <myhtml_callback_tree_node_insert_set@@Base>:
   1d0e0:	str	r2, [r0, #244]	; 0xf4
   1d0e4:	str	r1, [r0, #236]	; 0xec
   1d0e8:	bx	lr

0001d0ec <myhtml_callback_tree_node_remove_set@@Base>:
   1d0ec:	str	r2, [r0, #248]	; 0xf8
   1d0f0:	str	r1, [r0, #240]	; 0xf0
   1d0f4:	bx	lr

0001d0f8 <myhtml_charef_find@@Base>:
   1d0f8:	push	{r4, r5, r6, r7, fp, lr}
   1d0fc:	add	fp, sp, #16
   1d100:	ldrb	r4, [r0]
   1d104:	ldr	lr, [pc, #184]	; 1d1c4 <myhtml_charef_find@@Base+0xcc>
   1d108:	mov	ip, r0
   1d10c:	add	lr, pc, lr
   1d110:	add	r5, r4, r4, lsl #1
   1d114:	mov	r0, lr
   1d118:	ldrb	r6, [r0, r5, lsl #3]!
   1d11c:	cmp	r6, #0
   1d120:	beq	1d198 <myhtml_charef_find@@Base+0xa0>
   1d124:	ldr	r5, [r1]
   1d128:	ldrb	r7, [ip, r5]
   1d12c:	uxtb	r6, r6
   1d130:	cmp	r6, r7
   1d134:	bne	1d188 <myhtml_charef_find@@Base+0x90>
   1d138:	b	1d160 <myhtml_charef_find@@Base+0x68>
   1d13c:	add	r6, r4, r4, lsl #1
   1d140:	mov	r0, lr
   1d144:	ldrb	r6, [r0, r6, lsl #3]!
   1d148:	cmp	r6, #0
   1d14c:	beq	1d198 <myhtml_charef_find@@Base+0xa0>
   1d150:	ldrb	r7, [ip, r5]
   1d154:	uxtb	r6, r6
   1d158:	cmp	r6, r7
   1d15c:	bne	1d188 <myhtml_charef_find@@Base+0x90>
   1d160:	add	r4, r4, r4, lsl #1
   1d164:	add	r5, r5, #1
   1d168:	cmp	r5, r2
   1d16c:	str	r5, [r1]
   1d170:	add	r6, lr, r4, lsl #3
   1d174:	bcs	1d1b4 <myhtml_charef_find@@Base+0xbc>
   1d178:	ldr	r4, [r6, #4]
   1d17c:	cmp	r4, #0
   1d180:	bne	1d13c <myhtml_charef_find@@Base+0x44>
   1d184:	b	1d1b4 <myhtml_charef_find@@Base+0xbc>
   1d188:	cmp	r7, r6
   1d18c:	bls	1d198 <myhtml_charef_find@@Base+0xa0>
   1d190:	add	r4, r4, #1
   1d194:	b	1d13c <myhtml_charef_find@@Base+0x44>
   1d198:	cmp	r3, #0
   1d19c:	beq	1d1b0 <myhtml_charef_find@@Base+0xb8>
   1d1a0:	add	r1, r4, r4, lsl #1
   1d1a4:	add	r1, lr, r1, lsl #3
   1d1a8:	ldr	r1, [r1, #20]
   1d1ac:	str	r1, [r3]
   1d1b0:	pop	{r4, r5, r6, r7, fp, pc}
   1d1b4:	cmp	r3, #0
   1d1b8:	beq	1d1b0 <myhtml_charef_find@@Base+0xb8>
   1d1bc:	ldr	r1, [r6, #20]
   1d1c0:	b	1d1ac <myhtml_charef_find@@Base+0xb4>
   1d1c4:	andeq	sp, r7, r0, asr #6

0001d1c8 <myhtml_charef_get_first_position@@Base>:
   1d1c8:	ldr	r1, [pc, #12]	; 1d1dc <myhtml_charef_get_first_position@@Base+0x14>
   1d1cc:	add	r0, r0, r0, lsl #1
   1d1d0:	add	r1, pc, r1
   1d1d4:	add	r0, r1, r0, lsl #3
   1d1d8:	bx	lr
   1d1dc:	andeq	sp, r7, ip, ror r2

0001d1e0 <myhtml_charef_find_by_pos@@Base>:
   1d1e0:	push	{r4, r5, r6, r7, fp, lr}
   1d1e4:	add	fp, sp, #16
   1d1e8:	mov	ip, r0
   1d1ec:	ldr	r0, [r2]
   1d1f0:	ldr	lr, [fp, #8]
   1d1f4:	ldrb	r0, [r1, r0]
   1d1f8:	cmp	r0, #38	; 0x26
   1d1fc:	bne	1d230 <myhtml_charef_find_by_pos@@Base+0x50>
   1d200:	mov	r0, #1
   1d204:	str	r0, [lr, #12]
   1d208:	ldr	r0, [lr]
   1d20c:	ldr	r1, [r0, #20]
   1d210:	cmp	r1, #0
   1d214:	popne	{r4, r5, r6, r7, fp, pc}
   1d218:	ldr	r0, [lr, #4]
   1d21c:	cmp	r0, #0
   1d220:	beq	1d30c <myhtml_charef_find_by_pos@@Base+0x12c>
   1d224:	ldr	r1, [lr, #8]
   1d228:	str	r1, [r2]
   1d22c:	pop	{r4, r5, r6, r7, fp, pc}
   1d230:	mov	r0, #0
   1d234:	add	r5, ip, ip, lsl #1
   1d238:	str	r0, [lr, #12]
   1d23c:	ldr	r4, [pc, #284]	; 1d360 <myhtml_charef_find_by_pos@@Base+0x180>
   1d240:	add	r4, pc, r4
   1d244:	mov	r0, r4
   1d248:	ldrb	r5, [r0, r5, lsl #3]!
   1d24c:	cmp	r5, #0
   1d250:	beq	1d2e8 <myhtml_charef_find_by_pos@@Base+0x108>
   1d254:	ldr	r6, [r2]
   1d258:	uxtb	r5, r5
   1d25c:	ldrb	r7, [r1, r6]
   1d260:	cmp	r5, r7
   1d264:	bne	1d2c8 <myhtml_charef_find_by_pos@@Base+0xe8>
   1d268:	cmp	r5, #59	; 0x3b
   1d26c:	beq	1d318 <myhtml_charef_find_by_pos@@Base+0x138>
   1d270:	add	r7, ip, ip, lsl #1
   1d274:	add	r5, r6, #1
   1d278:	str	r5, [r2]
   1d27c:	add	r6, r4, r7, lsl #3
   1d280:	ldr	ip, [r6, #4]
   1d284:	cmp	ip, #0
   1d288:	beq	1d31c <myhtml_charef_find_by_pos@@Base+0x13c>
   1d28c:	cmp	r5, r3
   1d290:	bcs	1d328 <myhtml_charef_find_by_pos@@Base+0x148>
   1d294:	ldrb	r7, [r1, r5]
   1d298:	cmp	r7, #38	; 0x26
   1d29c:	beq	1d340 <myhtml_charef_find_by_pos@@Base+0x160>
   1d2a0:	ldr	r6, [r6, #20]
   1d2a4:	cmp	r6, #0
   1d2a8:	beq	1d2d4 <myhtml_charef_find_by_pos@@Base+0xf4>
   1d2ac:	stmib	lr, {r0, r5}
   1d2b0:	add	r5, ip, ip, lsl #1
   1d2b4:	mov	r0, r4
   1d2b8:	ldrb	r5, [r0, r5, lsl #3]!
   1d2bc:	cmp	r5, #0
   1d2c0:	bne	1d254 <myhtml_charef_find_by_pos@@Base+0x74>
   1d2c4:	b	1d2e8 <myhtml_charef_find_by_pos@@Base+0x108>
   1d2c8:	cmp	r7, r5
   1d2cc:	bls	1d2e8 <myhtml_charef_find_by_pos@@Base+0x108>
   1d2d0:	add	ip, ip, #1
   1d2d4:	add	r5, ip, ip, lsl #1
   1d2d8:	mov	r0, r4
   1d2dc:	ldrb	r5, [r0, r5, lsl #3]!
   1d2e0:	cmp	r5, #0
   1d2e4:	bne	1d254 <myhtml_charef_find_by_pos@@Base+0x74>
   1d2e8:	mov	r0, #1
   1d2ec:	str	r0, [lr, #12]
   1d2f0:	ldr	r1, [lr, #4]
   1d2f4:	mov	r0, r4
   1d2f8:	cmp	r1, #0
   1d2fc:	ldrne	r0, [lr, #8]
   1d300:	strne	r0, [r2]
   1d304:	movne	r0, r1
   1d308:	pop	{r4, r5, r6, r7, fp, pc}
   1d30c:	ldr	r0, [pc, #72]	; 1d35c <myhtml_charef_find_by_pos@@Base+0x17c>
   1d310:	add	r0, pc, r0
   1d314:	pop	{r4, r5, r6, r7, fp, pc}
   1d318:	str	r0, [lr]
   1d31c:	mov	r1, #1
   1d320:	str	r1, [lr, #12]
   1d324:	pop	{r4, r5, r6, r7, fp, pc}
   1d328:	ldr	r1, [r6, #20]
   1d32c:	str	r0, [lr]
   1d330:	cmp	r1, #0
   1d334:	beq	1d308 <myhtml_charef_find_by_pos@@Base+0x128>
   1d338:	stmib	lr, {r0, r5}
   1d33c:	pop	{r4, r5, r6, r7, fp, pc}
   1d340:	mov	r1, #1
   1d344:	str	r0, [lr]
   1d348:	str	r1, [lr, #12]
   1d34c:	ldr	r1, [r6, #20]
   1d350:	cmp	r1, #0
   1d354:	bne	1d308 <myhtml_charef_find_by_pos@@Base+0x128>
   1d358:	b	1d2f0 <myhtml_charef_find_by_pos@@Base+0x110>
   1d35c:	andeq	sp, r7, ip, lsr r1
   1d360:	andeq	sp, r7, ip, lsl #4

0001d364 <myhtml_data_process_entry_clean@@Base>:
   1d364:	vmov.i32	q8, #0	; 0x00000000
   1d368:	add	r1, r0, #48	; 0x30
   1d36c:	vst1.32	{d16-d17}, [r1]
   1d370:	add	r1, r0, #36	; 0x24
   1d374:	vst1.32	{d16-d17}, [r1]
   1d378:	add	r1, r0, #4
   1d37c:	vst1.32	{d16-d17}, [r1]
   1d380:	ldr	r1, [pc, #12]	; 1d394 <myhtml_data_process_entry_clean@@Base+0x30>
   1d384:	ldr	r1, [pc, r1]
   1d388:	str	r1, [r0], #20
   1d38c:	vst1.32	{d16-d17}, [r0]
   1d390:	bx	lr
   1d394:	andseq	r0, r0, r8, lsr r4

0001d398 <myhtml_data_process_state_data@@Base>:
   1d398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d39c:	add	fp, sp, #28
   1d3a0:	sub	sp, sp, #12
   1d3a4:	mov	r5, r0
   1d3a8:	ldr	r0, [fp, #8]
   1d3ac:	mov	r6, r3
   1d3b0:	mov	sl, r2
   1d3b4:	mov	r8, r1
   1d3b8:	mov	r4, r3
   1d3bc:	cmp	r3, r0
   1d3c0:	bcs	1d3ec <myhtml_data_process_state_data@@Base+0x54>
   1d3c4:	sub	r1, r6, r0
   1d3c8:	add	r4, sl, r6
   1d3cc:	mov	r7, #0
   1d3d0:	ldrb	r2, [r4, -r7]
   1d3d4:	cmp	r2, #38	; 0x26
   1d3d8:	beq	1d438 <myhtml_data_process_state_data@@Base+0xa0>
   1d3dc:	sub	r7, r7, #1
   1d3e0:	cmp	r1, r7
   1d3e4:	bne	1d3d0 <myhtml_data_process_state_data@@Base+0x38>
   1d3e8:	mov	r4, r0
   1d3ec:	ldr	r3, [r5, #32]
   1d3f0:	add	r1, sl, r6
   1d3f4:	sub	r2, r4, r6
   1d3f8:	mov	r0, r8
   1d3fc:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1d400:	add	r0, r0, r6
   1d404:	cmp	r4, r0
   1d408:	beq	1d4b4 <myhtml_data_process_state_data@@Base+0x11c>
   1d40c:	ldr	r1, [r5, #4]
   1d410:	cmp	r1, #0
   1d414:	beq	1d49c <myhtml_data_process_state_data@@Base+0x104>
   1d418:	ldrb	r2, [r5, #61]	; 0x3d
   1d41c:	stm	sp, {r1, r2}
   1d420:	add	r2, sl, r0
   1d424:	sub	r3, r4, r0
   1d428:	add	r1, r5, #8
   1d42c:	mov	r0, r8
   1d430:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d434:	b	1d4b0 <myhtml_data_process_state_data@@Base+0x118>
   1d438:	ldr	r3, [r5, #32]
   1d43c:	rsb	r9, r7, #0
   1d440:	mov	r0, r8
   1d444:	mov	r1, r4
   1d448:	mov	r2, r9
   1d44c:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1d450:	cmn	r7, r0
   1d454:	beq	1d4dc <myhtml_data_process_state_data@@Base+0x144>
   1d458:	ldr	r2, [r5, #4]
   1d45c:	add	r1, r0, r6
   1d460:	cmp	r2, #0
   1d464:	beq	1d4c0 <myhtml_data_process_state_data@@Base+0x128>
   1d468:	ldrb	r3, [r5, #61]	; 0x3d
   1d46c:	stm	sp, {r2, r3}
   1d470:	add	r2, sl, r1
   1d474:	add	r0, r0, r7
   1d478:	add	sl, r5, #8
   1d47c:	rsb	r3, r0, #0
   1d480:	mov	r0, r8
   1d484:	mov	r1, sl
   1d488:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d48c:	str	r0, [r5, #32]
   1d490:	mov	r0, sl
   1d494:	bl	111f8 <myencoding_result_clean@plt>
   1d498:	b	1d4dc <myhtml_data_process_state_data@@Base+0x144>
   1d49c:	ldrb	r3, [r5, #61]	; 0x3d
   1d4a0:	add	r1, sl, r0
   1d4a4:	sub	r2, r4, r0
   1d4a8:	mov	r0, r8
   1d4ac:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1d4b0:	str	r0, [r5, #32]
   1d4b4:	mov	r0, r4
   1d4b8:	sub	sp, fp, #28
   1d4bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4c0:	ldrb	r3, [r5, #61]	; 0x3d
   1d4c4:	add	r0, r0, r7
   1d4c8:	add	r1, sl, r1
   1d4cc:	rsb	r2, r0, #0
   1d4d0:	mov	r0, r8
   1d4d4:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1d4d8:	str	r0, [r5, #32]
   1d4dc:	ldr	r0, [r8, #8]
   1d4e0:	ldr	r1, [pc, #92]	; 1d544 <myhtml_data_process_state_data@@Base+0x1ac>
   1d4e4:	ldr	r1, [pc, r1]
   1d4e8:	str	r1, [r5]
   1d4ec:	str	r0, [r5, #36]	; 0x24
   1d4f0:	add	r1, r0, #2
   1d4f4:	ldr	r2, [r8, #4]
   1d4f8:	ldrb	r4, [r4, r9]
   1d4fc:	cmp	r1, r2
   1d500:	bcc	1d510 <myhtml_data_process_state_data@@Base+0x178>
   1d504:	mov	r0, r8
   1d508:	bl	11774 <mycore_string_realloc@plt>
   1d50c:	ldr	r0, [r8, #8]
   1d510:	ldr	r1, [r8]
   1d514:	mov	r2, #0
   1d518:	strb	r4, [r1, r0]
   1d51c:	ldr	r1, [r8, #8]
   1d520:	ldr	r0, [r8]
   1d524:	add	r1, r1, #1
   1d528:	str	r1, [r8, #8]
   1d52c:	strb	r2, [r0, r1]
   1d530:	sub	r0, r6, r7
   1d534:	add	r4, r0, #1
   1d538:	mov	r0, r4
   1d53c:	sub	sp, fp, #28
   1d540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d544:	mulseq	r0, ip, r2

0001d548 <myhtml_data_process_string_append_char@@Base>:
   1d548:	push	{r4, r5, fp, lr}
   1d54c:	add	fp, sp, #8
   1d550:	mov	r4, r0
   1d554:	ldr	r2, [r0, #4]
   1d558:	ldr	r0, [r0, #8]
   1d55c:	mov	r5, r1
   1d560:	add	r1, r0, #2
   1d564:	cmp	r1, r2
   1d568:	bcc	1d578 <myhtml_data_process_string_append_char@@Base+0x30>
   1d56c:	mov	r0, r4
   1d570:	bl	11774 <mycore_string_realloc@plt>
   1d574:	ldr	r0, [r4, #8]
   1d578:	ldr	r1, [r4]
   1d57c:	mov	r2, #0
   1d580:	strb	r5, [r1, r0]
   1d584:	ldr	r1, [r4, #8]
   1d588:	ldr	r0, [r4]
   1d58c:	add	r1, r1, #1
   1d590:	str	r1, [r4, #8]
   1d594:	strb	r2, [r0, r1]
   1d598:	pop	{r4, r5, fp, pc}

0001d59c <myhtml_data_process_state_ampersand@@Base>:
   1d59c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d5a0:	add	fp, sp, #24
   1d5a4:	mov	r6, r0
   1d5a8:	ldrb	r0, [r2, r3]
   1d5ac:	mov	r4, r3
   1d5b0:	mov	r7, r2
   1d5b4:	mov	r5, r1
   1d5b8:	cmp	r0, #35	; 0x23
   1d5bc:	bne	1d67c <myhtml_data_process_state_ampersand@@Base+0xe0>
   1d5c0:	ldr	r0, [r5, #8]
   1d5c4:	ldr	r2, [r5, #4]
   1d5c8:	ldr	r8, [fp, #8]
   1d5cc:	add	r1, r0, #2
   1d5d0:	cmp	r1, r2
   1d5d4:	bcc	1d5e4 <myhtml_data_process_state_ampersand@@Base+0x48>
   1d5d8:	mov	r0, r5
   1d5dc:	bl	11774 <mycore_string_realloc@plt>
   1d5e0:	ldr	r0, [r5, #8]
   1d5e4:	ldr	r1, [r5]
   1d5e8:	mov	r2, #35	; 0x23
   1d5ec:	strb	r2, [r1, r0]
   1d5f0:	mov	r2, #0
   1d5f4:	ldr	r1, [r5, #8]
   1d5f8:	ldr	r0, [r5]
   1d5fc:	add	r1, r1, #1
   1d600:	str	r1, [r5, #8]
   1d604:	strb	r2, [r0, r1]
   1d608:	add	r0, r4, #1
   1d60c:	str	r2, [r6, #40]	; 0x28
   1d610:	cmp	r0, r8
   1d614:	bcs	1d6f4 <myhtml_data_process_state_ampersand@@Base+0x158>
   1d618:	ldrb	r7, [r7, r0]
   1d61c:	orr	r1, r7, #32
   1d620:	cmp	r1, #120	; 0x78
   1d624:	bne	1d718 <myhtml_data_process_state_ampersand@@Base+0x17c>
   1d628:	ldr	r0, [r5, #8]
   1d62c:	ldr	r2, [r5, #4]
   1d630:	add	r1, r0, #2
   1d634:	cmp	r1, r2
   1d638:	bcc	1d648 <myhtml_data_process_state_ampersand@@Base+0xac>
   1d63c:	mov	r0, r5
   1d640:	bl	11774 <mycore_string_realloc@plt>
   1d644:	ldr	r0, [r5, #8]
   1d648:	ldr	r1, [r5]
   1d64c:	mov	r2, #0
   1d650:	strb	r7, [r1, r0]
   1d654:	ldr	r1, [r5, #8]
   1d658:	ldr	r0, [r5]
   1d65c:	add	r1, r1, #1
   1d660:	str	r1, [r5, #8]
   1d664:	strb	r2, [r0, r1]
   1d668:	ldr	r0, [pc, #188]	; 1d72c <myhtml_data_process_state_ampersand@@Base+0x190>
   1d66c:	ldr	r0, [pc, r0]
   1d670:	str	r0, [r6]
   1d674:	add	r0, r4, #2
   1d678:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d67c:	mov	r0, #0
   1d680:	str	r0, [r6, #48]	; 0x30
   1d684:	ldrb	r0, [r7, r4]
   1d688:	bl	1181c <myhtml_charef_get_first_position@plt>
   1d68c:	str	r0, [r6, #44]	; 0x2c
   1d690:	ldrb	r0, [r0]
   1d694:	cmp	r0, #0
   1d698:	beq	1d704 <myhtml_data_process_state_ampersand@@Base+0x168>
   1d69c:	ldr	r0, [pc, #148]	; 1d738 <myhtml_data_process_state_ampersand@@Base+0x19c>
   1d6a0:	ldr	r0, [pc, r0]
   1d6a4:	str	r0, [r6]
   1d6a8:	ldr	r0, [r5, #8]
   1d6ac:	ldr	r2, [r5, #4]
   1d6b0:	ldrb	r6, [r7, r4]
   1d6b4:	add	r1, r0, #2
   1d6b8:	cmp	r1, r2
   1d6bc:	bcc	1d6cc <myhtml_data_process_state_ampersand@@Base+0x130>
   1d6c0:	mov	r0, r5
   1d6c4:	bl	11774 <mycore_string_realloc@plt>
   1d6c8:	ldr	r0, [r5, #8]
   1d6cc:	ldr	r1, [r5]
   1d6d0:	mov	r2, #0
   1d6d4:	strb	r6, [r1, r0]
   1d6d8:	ldr	r1, [r5, #8]
   1d6dc:	ldr	r0, [r5]
   1d6e0:	add	r1, r1, #1
   1d6e4:	str	r1, [r5, #8]
   1d6e8:	strb	r2, [r0, r1]
   1d6ec:	add	r0, r4, #1
   1d6f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d6f4:	ldr	r1, [pc, #44]	; 1d728 <myhtml_data_process_state_ampersand@@Base+0x18c>
   1d6f8:	ldr	r1, [pc, r1]
   1d6fc:	str	r1, [r6]
   1d700:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d704:	ldr	r0, [pc, #40]	; 1d734 <myhtml_data_process_state_ampersand@@Base+0x198>
   1d708:	ldr	r0, [pc, r0]
   1d70c:	str	r0, [r6]
   1d710:	mov	r0, r4
   1d714:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d718:	ldr	r1, [pc, #16]	; 1d730 <myhtml_data_process_state_ampersand@@Base+0x194>
   1d71c:	ldr	r1, [pc, r1]
   1d720:	str	r1, [r6]
   1d724:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d728:	andeq	pc, pc, r0, lsl #29
   1d72c:	andeq	pc, pc, r4, lsl pc	; <UNPREDICTABLE>
   1d730:	andseq	r0, r0, r8, lsl #1
   1d734:	ldrheq	r0, [r0], -r4
   1d738:			; <UNDEFINED> instruction: 0x000fffb4

0001d73c <myhtml_data_process_state_ampersand_hash@@Base>:
   1d73c:	push	{r4, r5, r6, r7, fp, lr}
   1d740:	add	fp, sp, #16
   1d744:	ldrb	r7, [r2, r3]
   1d748:	mov	r5, r0
   1d74c:	mov	r4, r3
   1d750:	orr	r0, r7, #32
   1d754:	cmp	r0, #120	; 0x78
   1d758:	bne	1d7b8 <myhtml_data_process_state_ampersand_hash@@Base+0x7c>
   1d75c:	ldr	r0, [r1, #8]
   1d760:	ldr	r2, [r1, #4]
   1d764:	mov	r6, r1
   1d768:	add	r1, r0, #2
   1d76c:	cmp	r1, r2
   1d770:	bcc	1d780 <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1d774:	mov	r0, r6
   1d778:	bl	11774 <mycore_string_realloc@plt>
   1d77c:	ldr	r0, [r6, #8]
   1d780:	ldr	r1, [r6]
   1d784:	mov	r2, #0
   1d788:	add	r4, r4, #1
   1d78c:	strb	r7, [r1, r0]
   1d790:	ldr	r1, [r6, #8]
   1d794:	ldr	r0, [r6]
   1d798:	add	r1, r1, #1
   1d79c:	str	r1, [r6, #8]
   1d7a0:	strb	r2, [r0, r1]
   1d7a4:	ldr	r0, [pc, #36]	; 1d7d0 <myhtml_data_process_state_ampersand_hash@@Base+0x94>
   1d7a8:	ldr	r0, [pc, r0]
   1d7ac:	str	r0, [r5]
   1d7b0:	mov	r0, r4
   1d7b4:	pop	{r4, r5, r6, r7, fp, pc}
   1d7b8:	ldr	r0, [pc, #12]	; 1d7cc <myhtml_data_process_state_ampersand_hash@@Base+0x90>
   1d7bc:	ldr	r0, [pc, r0]
   1d7c0:	str	r0, [r5]
   1d7c4:	mov	r0, r4
   1d7c8:	pop	{r4, r5, r6, r7, fp, pc}
   1d7cc:	andeq	pc, pc, r8, ror #31
   1d7d0:	ldrdeq	pc, [pc], -r8

0001d7d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1d7d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d7d8:	add	fp, sp, #24
   1d7dc:	sub	sp, sp, #8
   1d7e0:	ldr	ip, [fp, #8]
   1d7e4:	mov	r5, r3
   1d7e8:	mov	r9, r2
   1d7ec:	mov	r8, r1
   1d7f0:	mov	r4, r0
   1d7f4:	mov	r6, r3
   1d7f8:	cmp	r3, ip
   1d7fc:	bcs	1d8c8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xf4>
   1d800:	ldr	r3, [pc, #516]	; 1da0c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x238>
   1d804:	add	r1, r9, r5
   1d808:	sub	r2, r5, ip
   1d80c:	mov	r6, #0
   1d810:	add	r3, pc, r3
   1d814:	ldrb	r7, [r1, -r6]
   1d818:	ldrb	r7, [r3, r7]
   1d81c:	cmp	r7, #255	; 0xff
   1d820:	bne	1d844 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x70>
   1d824:	b	1d870 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x9c>
   1d828:	sub	r6, r6, #1
   1d82c:	cmp	r2, r6
   1d830:	beq	1d8c4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xf0>
   1d834:	ldrb	r7, [r1, -r6]
   1d838:	ldrb	r7, [r3, r7]
   1d83c:	cmp	r7, #255	; 0xff
   1d840:	beq	1d870 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x9c>
   1d844:	ldr	r7, [r4, #40]	; 0x28
   1d848:	lsr	r0, r7, #16
   1d84c:	cmp	r0, #16
   1d850:	bhi	1d828 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x54>
   1d854:	lsl	r0, r7, #4
   1d858:	str	r0, [r4, #40]	; 0x28
   1d85c:	ldrb	r0, [r1, -r6]
   1d860:	ldrb	r0, [r3, r0]
   1d864:	orr	r0, r0, r7, lsl #4
   1d868:	str	r0, [r4, #40]	; 0x28
   1d86c:	b	1d828 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x54>
   1d870:	ldr	r0, [pc, #408]	; 1da10 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x23c>
   1d874:	cmp	r6, #0
   1d878:	ldr	r0, [pc, r0]
   1d87c:	str	r0, [r4]
   1d880:	beq	1d93c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x168>
   1d884:	ldrb	r0, [r1, -r6]
   1d888:	cmp	r0, #59	; 0x3b
   1d88c:	ldmib	r8, {r0, r1}
   1d890:	add	r1, r1, #5
   1d894:	addeq	r5, r5, #1
   1d898:	cmp	r1, r0
   1d89c:	bcc	1d8a8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd4>
   1d8a0:	mov	r0, r8
   1d8a4:	bl	11774 <mycore_string_realloc@plt>
   1d8a8:	ldr	r0, [r4, #40]	; 0x28
   1d8ac:	cmp	r0, #159	; 0x9f
   1d8b0:	bhi	1d990 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1bc>
   1d8b4:	ldr	r1, [pc, #344]	; 1da14 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x240>
   1d8b8:	add	r1, pc, r1
   1d8bc:	ldr	r1, [r1, r0, lsl #2]
   1d8c0:	b	1d9ac <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d8>
   1d8c4:	mov	r6, ip
   1d8c8:	ldr	r3, [r4, #32]
   1d8cc:	add	r1, r9, r5
   1d8d0:	sub	r2, r6, r5
   1d8d4:	mov	r0, r8
   1d8d8:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1d8dc:	add	r0, r0, r5
   1d8e0:	cmp	r6, r0
   1d8e4:	beq	1d92c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x158>
   1d8e8:	ldr	r1, [r4, #4]
   1d8ec:	cmp	r1, #0
   1d8f0:	beq	1d914 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   1d8f4:	ldrb	r2, [r4, #61]	; 0x3d
   1d8f8:	stm	sp, {r1, r2}
   1d8fc:	add	r2, r9, r0
   1d900:	sub	r3, r6, r0
   1d904:	add	r1, r4, #8
   1d908:	mov	r0, r8
   1d90c:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d910:	b	1d928 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x154>
   1d914:	ldrb	r3, [r4, #61]	; 0x3d
   1d918:	add	r1, r9, r0
   1d91c:	sub	r2, r6, r0
   1d920:	mov	r0, r8
   1d924:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1d928:	str	r0, [r4, #32]
   1d92c:	mov	r5, r6
   1d930:	mov	r0, r5
   1d934:	sub	sp, fp, #24
   1d938:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d93c:	ldr	r3, [r4, #32]
   1d940:	mov	r0, r8
   1d944:	mov	r2, #0
   1d948:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1d94c:	cmp	r0, #0
   1d950:	beq	1d930 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x15c>
   1d954:	ldr	r2, [r4, #4]
   1d958:	add	r1, r0, r5
   1d95c:	cmp	r2, #0
   1d960:	beq	1d9e8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x214>
   1d964:	ldrb	r3, [r4, #61]	; 0x3d
   1d968:	stm	sp, {r2, r3}
   1d96c:	add	r2, r9, r1
   1d970:	rsb	r3, r0, #0
   1d974:	add	r1, r4, #8
   1d978:	mov	r0, r8
   1d97c:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d980:	str	r0, [r4, #32]
   1d984:	mov	r0, r5
   1d988:	sub	sp, fp, #24
   1d98c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d990:	mov	r2, r0
   1d994:	movw	r1, #65533	; 0xfffd
   1d998:	bfc	r2, #0, #11
   1d99c:	cmp	r2, #55296	; 0xd800
   1d9a0:	beq	1d9ac <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d8>
   1d9a4:	cmp	r0, #1114112	; 0x110000
   1d9a8:	bcc	1d9b4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1e0>
   1d9ac:	mov	r0, r1
   1d9b0:	str	r1, [r4, #40]	; 0x28
   1d9b4:	ldr	r4, [r4, #36]	; 0x24
   1d9b8:	ldr	r1, [r8]
   1d9bc:	sub	r5, r5, r6
   1d9c0:	add	r1, r1, r4
   1d9c4:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1d9c8:	add	r0, r0, r4
   1d9cc:	mov	r2, #0
   1d9d0:	str	r0, [r8, #8]
   1d9d4:	ldr	r1, [r8]
   1d9d8:	strb	r2, [r1, r0]
   1d9dc:	mov	r0, r5
   1d9e0:	sub	sp, fp, #24
   1d9e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d9e8:	ldrb	r3, [r4, #61]	; 0x3d
   1d9ec:	rsb	r2, r0, #0
   1d9f0:	add	r1, r9, r1
   1d9f4:	mov	r0, r8
   1d9f8:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1d9fc:	str	r0, [r4, #32]
   1da00:	mov	r0, r5
   1da04:	sub	sp, fp, #24
   1da08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1da0c:	andeq	r5, lr, ip, lsr #9
   1da10:	andeq	pc, pc, r4, asr #30
   1da14:	andeq	r5, lr, r4, lsl #10

0001da18 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1da18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da1c:	add	fp, sp, #28
   1da20:	sub	sp, sp, #12
   1da24:	ldr	ip, [fp, #8]
   1da28:	mov	sl, r3
   1da2c:	mov	r9, r2
   1da30:	mov	r8, r1
   1da34:	mov	r4, r0
   1da38:	mov	r6, r3
   1da3c:	cmp	r3, ip
   1da40:	bcs	1db04 <myhtml_data_process_state_ampersand_hash_data@@Base+0xec>
   1da44:	ldr	r3, [pc, #508]	; 1dc48 <myhtml_data_process_state_ampersand_hash_data@@Base+0x230>
   1da48:	sub	r2, sl, ip
   1da4c:	add	r1, r9, sl
   1da50:	mov	r6, #0
   1da54:	add	r3, pc, r3
   1da58:	ldrb	r7, [r1, -r6]
   1da5c:	sub	r0, r7, #48	; 0x30
   1da60:	cmp	r0, #10
   1da64:	bcc	1da88 <myhtml_data_process_state_ampersand_hash_data@@Base+0x70>
   1da68:	b	1daac <myhtml_data_process_state_ampersand_hash_data@@Base+0x94>
   1da6c:	sub	r6, r6, #1
   1da70:	cmp	r2, r6
   1da74:	beq	1db00 <myhtml_data_process_state_ampersand_hash_data@@Base+0xe8>
   1da78:	ldrb	r7, [r1, -r6]
   1da7c:	sub	r0, r7, #48	; 0x30
   1da80:	cmp	r0, #10
   1da84:	bcs	1daac <myhtml_data_process_state_ampersand_hash_data@@Base+0x94>
   1da88:	ldr	r0, [r4, #40]	; 0x28
   1da8c:	lsr	r5, r0, #16
   1da90:	cmp	r5, #16
   1da94:	bhi	1da6c <myhtml_data_process_state_ampersand_hash_data@@Base+0x54>
   1da98:	ldrb	r7, [r3, r7]
   1da9c:	add	r0, r0, r0, lsl #2
   1daa0:	add	r0, r7, r0, lsl #1
   1daa4:	str	r0, [r4, #40]	; 0x28
   1daa8:	b	1da6c <myhtml_data_process_state_ampersand_hash_data@@Base+0x54>
   1daac:	ldr	r0, [pc, #408]	; 1dc4c <myhtml_data_process_state_ampersand_hash_data@@Base+0x234>
   1dab0:	cmp	r6, #0
   1dab4:	ldr	r0, [pc, r0]
   1dab8:	str	r0, [r4]
   1dabc:	beq	1db78 <myhtml_data_process_state_ampersand_hash_data@@Base+0x160>
   1dac0:	ldrb	r0, [r1, -r6]
   1dac4:	cmp	r0, #59	; 0x3b
   1dac8:	ldmib	r8, {r0, r1}
   1dacc:	add	r1, r1, #5
   1dad0:	addeq	sl, sl, #1
   1dad4:	cmp	r1, r0
   1dad8:	bcc	1dae4 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1dadc:	mov	r0, r8
   1dae0:	bl	11774 <mycore_string_realloc@plt>
   1dae4:	ldr	r0, [r4, #40]	; 0x28
   1dae8:	cmp	r0, #159	; 0x9f
   1daec:	bhi	1dbcc <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b4>
   1daf0:	ldr	r1, [pc, #344]	; 1dc50 <myhtml_data_process_state_ampersand_hash_data@@Base+0x238>
   1daf4:	add	r1, pc, r1
   1daf8:	ldr	r1, [r1, r0, lsl #2]
   1dafc:	b	1dbe8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d0>
   1db00:	mov	r6, ip
   1db04:	ldr	r3, [r4, #32]
   1db08:	add	r1, r9, sl
   1db0c:	sub	r2, r6, sl
   1db10:	mov	r0, r8
   1db14:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1db18:	add	r0, r0, sl
   1db1c:	cmp	r6, r0
   1db20:	beq	1db68 <myhtml_data_process_state_ampersand_hash_data@@Base+0x150>
   1db24:	ldr	r1, [r4, #4]
   1db28:	cmp	r1, #0
   1db2c:	beq	1db50 <myhtml_data_process_state_ampersand_hash_data@@Base+0x138>
   1db30:	ldrb	r2, [r4, #61]	; 0x3d
   1db34:	stm	sp, {r1, r2}
   1db38:	add	r2, r9, r0
   1db3c:	sub	r3, r6, r0
   1db40:	add	r1, r4, #8
   1db44:	mov	r0, r8
   1db48:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1db4c:	b	1db64 <myhtml_data_process_state_ampersand_hash_data@@Base+0x14c>
   1db50:	ldrb	r3, [r4, #61]	; 0x3d
   1db54:	add	r1, r9, r0
   1db58:	sub	r2, r6, r0
   1db5c:	mov	r0, r8
   1db60:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1db64:	str	r0, [r4, #32]
   1db68:	mov	sl, r6
   1db6c:	mov	r0, sl
   1db70:	sub	sp, fp, #28
   1db74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db78:	ldr	r3, [r4, #32]
   1db7c:	mov	r0, r8
   1db80:	mov	r2, #0
   1db84:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1db88:	cmp	r0, #0
   1db8c:	beq	1db6c <myhtml_data_process_state_ampersand_hash_data@@Base+0x154>
   1db90:	ldr	r2, [r4, #4]
   1db94:	add	r1, r0, sl
   1db98:	cmp	r2, #0
   1db9c:	beq	1dc24 <myhtml_data_process_state_ampersand_hash_data@@Base+0x20c>
   1dba0:	ldrb	r3, [r4, #61]	; 0x3d
   1dba4:	stm	sp, {r2, r3}
   1dba8:	add	r2, r9, r1
   1dbac:	rsb	r3, r0, #0
   1dbb0:	add	r1, r4, #8
   1dbb4:	mov	r0, r8
   1dbb8:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1dbbc:	str	r0, [r4, #32]
   1dbc0:	mov	r0, sl
   1dbc4:	sub	sp, fp, #28
   1dbc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbcc:	mov	r2, r0
   1dbd0:	movw	r1, #65533	; 0xfffd
   1dbd4:	bfc	r2, #0, #11
   1dbd8:	cmp	r2, #55296	; 0xd800
   1dbdc:	beq	1dbe8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d0>
   1dbe0:	cmp	r0, #1114112	; 0x110000
   1dbe4:	bcc	1dbf0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d8>
   1dbe8:	mov	r0, r1
   1dbec:	str	r1, [r4, #40]	; 0x28
   1dbf0:	ldr	r4, [r4, #36]	; 0x24
   1dbf4:	ldr	r1, [r8]
   1dbf8:	sub	sl, sl, r6
   1dbfc:	add	r1, r1, r4
   1dc00:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1dc04:	add	r0, r0, r4
   1dc08:	mov	r2, #0
   1dc0c:	str	r0, [r8, #8]
   1dc10:	ldr	r1, [r8]
   1dc14:	strb	r2, [r1, r0]
   1dc18:	mov	r0, sl
   1dc1c:	sub	sp, fp, #28
   1dc20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc24:	ldrb	r3, [r4, #61]	; 0x3d
   1dc28:	rsb	r2, r0, #0
   1dc2c:	add	r1, r9, r1
   1dc30:	mov	r0, r8
   1dc34:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1dc38:	str	r0, [r4, #32]
   1dc3c:	mov	r0, sl
   1dc40:	sub	sp, fp, #28
   1dc44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc48:	andeq	r5, lr, r8, ror #2
   1dc4c:	andeq	pc, pc, r8, lsl #26
   1dc50:	andeq	r5, lr, r8, asr #5

0001dc54 <myhtml_data_process_state_ampersand_data@@Base>:
   1dc54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1dc58:	add	fp, sp, #24
   1dc5c:	sub	sp, sp, #16
   1dc60:	str	r3, [sp, #12]
   1dc64:	mov	r6, r0
   1dc68:	mov	r4, r0
   1dc6c:	mov	r7, r3
   1dc70:	ldr	r3, [fp, #8]
   1dc74:	mov	r8, r2
   1dc78:	mov	r5, r1
   1dc7c:	add	r2, sp, #12
   1dc80:	ldr	r0, [r6, #44]!	; 0x2c
   1dc84:	mov	r1, r8
   1dc88:	ldr	r0, [r0, #4]
   1dc8c:	str	r6, [sp]
   1dc90:	bl	11630 <myhtml_charef_find_by_pos@plt>
   1dc94:	mov	r9, r0
   1dc98:	ldr	r0, [r6, #12]
   1dc9c:	cmp	r0, #0
   1dca0:	beq	1dd24 <myhtml_data_process_state_ampersand_data@@Base+0xd0>
   1dca4:	ldr	r0, [pc, #460]	; 1de78 <myhtml_data_process_state_ampersand_data@@Base+0x224>
   1dca8:	ldr	r0, [pc, r0]
   1dcac:	str	r0, [r4]
   1dcb0:	ldr	r0, [sp, #12]
   1dcb4:	ldrb	r1, [r8, r0]
   1dcb8:	cmp	r1, #59	; 0x3b
   1dcbc:	bne	1dd2c <myhtml_data_process_state_ampersand_data@@Base+0xd8>
   1dcc0:	add	r0, r0, #1
   1dcc4:	str	r0, [sp, #12]
   1dcc8:	ldr	r1, [r9, #20]
   1dccc:	cmp	r1, #0
   1dcd0:	bne	1dd60 <myhtml_data_process_state_ampersand_data@@Base+0x10c>
   1dcd4:	ldr	r3, [r4, #32]
   1dcd8:	sub	r2, r0, r7
   1dcdc:	add	r1, r8, r7
   1dce0:	mov	r0, r5
   1dce4:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1dce8:	ldr	r3, [sp, #12]
   1dcec:	add	r0, r0, r7
   1dcf0:	cmp	r3, r0
   1dcf4:	beq	1de64 <myhtml_data_process_state_ampersand_data@@Base+0x210>
   1dcf8:	ldr	r1, [r4, #4]
   1dcfc:	cmp	r1, #0
   1dd00:	beq	1de4c <myhtml_data_process_state_ampersand_data@@Base+0x1f8>
   1dd04:	ldrb	r2, [r4, #61]	; 0x3d
   1dd08:	stm	sp, {r1, r2}
   1dd0c:	add	r2, r8, r0
   1dd10:	sub	r3, r3, r0
   1dd14:	add	r1, r4, #8
   1dd18:	mov	r0, r5
   1dd1c:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1dd20:	b	1de60 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   1dd24:	ldr	r0, [sp, #12]
   1dd28:	b	1ddc4 <myhtml_data_process_state_ampersand_data@@Base+0x170>
   1dd2c:	ldrb	r2, [r4, #60]	; 0x3c
   1dd30:	cmp	r2, #0
   1dd34:	beq	1dd54 <myhtml_data_process_state_ampersand_data@@Base+0x100>
   1dd38:	cmp	r1, #61	; 0x3d
   1dd3c:	beq	1ddc4 <myhtml_data_process_state_ampersand_data@@Base+0x170>
   1dd40:	ldr	r2, [pc, #308]	; 1de7c <myhtml_data_process_state_ampersand_data@@Base+0x228>
   1dd44:	add	r2, pc, r2
   1dd48:	ldr	r1, [r2, r1, lsl #2]
   1dd4c:	cmp	r1, #255	; 0xff
   1dd50:	bne	1ddc4 <myhtml_data_process_state_ampersand_data@@Base+0x170>
   1dd54:	ldr	r1, [r9, #20]
   1dd58:	cmp	r1, #0
   1dd5c:	beq	1dcd4 <myhtml_data_process_state_ampersand_data@@Base+0x80>
   1dd60:	add	r7, r9, #12
   1dd64:	mov	r6, #0
   1dd68:	ldmib	r5, {r0, r1}
   1dd6c:	add	r1, r1, #5
   1dd70:	cmp	r1, r0
   1dd74:	bcs	1ddb8 <myhtml_data_process_state_ampersand_data@@Base+0x164>
   1dd78:	ldr	r1, [r4, #36]	; 0x24
   1dd7c:	ldr	r2, [r5]
   1dd80:	ldr	r0, [r7, r6, lsl #2]
   1dd84:	add	r1, r2, r1
   1dd88:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1dd8c:	ldr	r1, [r4, #36]	; 0x24
   1dd90:	add	r6, r6, #1
   1dd94:	add	r0, r1, r0
   1dd98:	str	r0, [r4, #36]	; 0x24
   1dd9c:	ldr	r1, [r9, #20]
   1dda0:	cmp	r6, r1
   1dda4:	bcs	1de14 <myhtml_data_process_state_ampersand_data@@Base+0x1c0>
   1dda8:	ldmib	r5, {r0, r1}
   1ddac:	add	r1, r1, #5
   1ddb0:	cmp	r1, r0
   1ddb4:	bcc	1dd78 <myhtml_data_process_state_ampersand_data@@Base+0x124>
   1ddb8:	mov	r0, r5
   1ddbc:	bl	11774 <mycore_string_realloc@plt>
   1ddc0:	b	1dd78 <myhtml_data_process_state_ampersand_data@@Base+0x124>
   1ddc4:	add	r1, r8, r7
   1ddc8:	ldr	r3, [r4, #32]
   1ddcc:	sub	r2, r0, r7
   1ddd0:	mov	r0, r5
   1ddd4:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   1ddd8:	ldr	r3, [sp, #12]
   1dddc:	add	r0, r0, r7
   1dde0:	cmp	r3, r0
   1dde4:	beq	1de40 <myhtml_data_process_state_ampersand_data@@Base+0x1ec>
   1dde8:	ldr	r1, [r4, #4]
   1ddec:	cmp	r1, #0
   1ddf0:	beq	1de28 <myhtml_data_process_state_ampersand_data@@Base+0x1d4>
   1ddf4:	ldrb	r2, [r4, #61]	; 0x3d
   1ddf8:	stm	sp, {r1, r2}
   1ddfc:	add	r2, r8, r0
   1de00:	sub	r3, r3, r0
   1de04:	add	r1, r4, #8
   1de08:	mov	r0, r5
   1de0c:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1de10:	b	1de3c <myhtml_data_process_state_ampersand_data@@Base+0x1e8>
   1de14:	str	r0, [r5, #8]
   1de18:	mov	r2, #0
   1de1c:	ldr	r1, [r5]
   1de20:	strb	r2, [r1, r0]
   1de24:	b	1de64 <myhtml_data_process_state_ampersand_data@@Base+0x210>
   1de28:	sub	r2, r3, r0
   1de2c:	ldrb	r3, [r4, #61]	; 0x3d
   1de30:	add	r1, r8, r0
   1de34:	mov	r0, r5
   1de38:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1de3c:	str	r0, [r4, #32]
   1de40:	ldr	r0, [sp, #12]
   1de44:	sub	sp, fp, #24
   1de48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1de4c:	sub	r2, r3, r0
   1de50:	ldrb	r3, [r4, #61]	; 0x3d
   1de54:	add	r1, r8, r0
   1de58:	mov	r0, r5
   1de5c:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   1de60:	str	r0, [r4, #32]
   1de64:	mov	r0, #0
   1de68:	str	r0, [r4, #48]	; 0x30
   1de6c:	ldr	r0, [sp, #12]
   1de70:	sub	sp, fp, #24
   1de74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1de78:	andeq	pc, pc, r4, lsl fp	; <UNPREDICTABLE>
   1de7c:	andeq	r4, lr, r8, ror sl

0001de80 <myhtml_data_process_state_end@@Base>:
   1de80:	push	{r4, r5, fp, lr}
   1de84:	add	fp, sp, #8
   1de88:	mov	r4, r1
   1de8c:	mov	r5, r0
   1de90:	ldmib	r1, {r0, r1}
   1de94:	add	r1, r1, #5
   1de98:	cmp	r1, r0
   1de9c:	bcc	1dea8 <myhtml_data_process_state_end@@Base+0x28>
   1dea0:	mov	r0, r4
   1dea4:	bl	11774 <mycore_string_realloc@plt>
   1dea8:	ldr	r0, [r5, #40]	; 0x28
   1deac:	cmp	r0, #159	; 0x9f
   1deb0:	bhi	1decc <myhtml_data_process_state_end@@Base+0x4c>
   1deb4:	ldr	r1, [pc, #84]	; 1df10 <myhtml_data_process_state_end@@Base+0x90>
   1deb8:	add	r1, pc, r1
   1debc:	ldr	r1, [r1, r0, lsl #2]
   1dec0:	mov	r0, r1
   1dec4:	str	r1, [r5, #40]	; 0x28
   1dec8:	b	1dee8 <myhtml_data_process_state_end@@Base+0x68>
   1decc:	mov	r2, r0
   1ded0:	movw	r1, #65533	; 0xfffd
   1ded4:	bfc	r2, #0, #11
   1ded8:	cmp	r2, #55296	; 0xd800
   1dedc:	beq	1dec0 <myhtml_data_process_state_end@@Base+0x40>
   1dee0:	cmp	r0, #1114112	; 0x110000
   1dee4:	bcs	1dec0 <myhtml_data_process_state_end@@Base+0x40>
   1dee8:	ldr	r5, [r5, #36]	; 0x24
   1deec:	ldr	r1, [r4]
   1def0:	add	r1, r1, r5
   1def4:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1def8:	add	r0, r0, r5
   1defc:	mov	r2, #0
   1df00:	str	r0, [r4, #8]
   1df04:	ldr	r1, [r4]
   1df08:	strb	r2, [r1, r0]
   1df0c:	pop	{r4, r5, fp, pc}
   1df10:	andeq	r4, lr, r4, lsl #30

0001df14 <myhtml_data_process@@Base>:
   1df14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1df18:	add	fp, sp, #24
   1df1c:	sub	sp, sp, #8
   1df20:	cmp	r3, #0
   1df24:	beq	1df60 <myhtml_data_process@@Base+0x4c>
   1df28:	mov	r4, r3
   1df2c:	mov	r8, r2
   1df30:	mov	r6, r1
   1df34:	mov	r7, r0
   1df38:	mov	r3, #0
   1df3c:	ldr	r5, [r7]
   1df40:	mov	r0, r7
   1df44:	mov	r1, r6
   1df48:	mov	r2, r8
   1df4c:	str	r4, [sp]
   1df50:	blx	r5
   1df54:	mov	r3, r0
   1df58:	cmp	r0, r4
   1df5c:	bcc	1df3c <myhtml_data_process@@Base+0x28>
   1df60:	sub	sp, fp, #24
   1df64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001df68 <myhtml_data_process_end@@Base>:
   1df68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1df6c:	add	fp, sp, #24
   1df70:	mov	r5, r0
   1df74:	mov	r4, r1
   1df78:	ldr	r0, [r0]
   1df7c:	ldr	r1, [pc, #352]	; 1e0e4 <myhtml_data_process_end@@Base+0x17c>
   1df80:	ldr	r1, [pc, r1]
   1df84:	cmp	r0, r1
   1df88:	beq	1dff4 <myhtml_data_process_end@@Base+0x8c>
   1df8c:	ldr	r1, [pc, #340]	; 1e0e8 <myhtml_data_process_end@@Base+0x180>
   1df90:	ldr	r1, [pc, r1]
   1df94:	cmp	r0, r1
   1df98:	beq	1e070 <myhtml_data_process_end@@Base+0x108>
   1df9c:	ldr	r1, [pc, #332]	; 1e0f0 <myhtml_data_process_end@@Base+0x188>
   1dfa0:	ldr	r1, [pc, r1]
   1dfa4:	cmp	r0, r1
   1dfa8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dfac:	ldr	r1, [r5, #36]	; 0x24
   1dfb0:	ldr	r0, [r4, #8]
   1dfb4:	add	r1, r1, #3
   1dfb8:	cmp	r0, r1
   1dfbc:	beq	1e084 <myhtml_data_process_end@@Base+0x11c>
   1dfc0:	ldr	r2, [r4, #4]
   1dfc4:	add	r1, r0, #5
   1dfc8:	cmp	r1, r2
   1dfcc:	bcc	1dfd8 <myhtml_data_process_end@@Base+0x70>
   1dfd0:	mov	r0, r4
   1dfd4:	bl	11774 <mycore_string_realloc@plt>
   1dfd8:	ldr	r0, [r5, #40]	; 0x28
   1dfdc:	cmp	r0, #159	; 0x9f
   1dfe0:	bhi	1e088 <myhtml_data_process_end@@Base+0x120>
   1dfe4:	ldr	r1, [pc, #256]	; 1e0ec <myhtml_data_process_end@@Base+0x184>
   1dfe8:	add	r1, pc, r1
   1dfec:	ldr	r1, [r1, r0, lsl #2]
   1dff0:	b	1e0ac <myhtml_data_process_end@@Base+0x144>
   1dff4:	ldr	r6, [r5, #48]	; 0x30
   1dff8:	cmp	r6, #0
   1dffc:	beq	1e084 <myhtml_data_process_end@@Base+0x11c>
   1e000:	ldr	r0, [r6, #20]
   1e004:	cmp	r0, #0
   1e008:	beq	1e0cc <myhtml_data_process_end@@Base+0x164>
   1e00c:	add	r8, r6, #12
   1e010:	mov	r7, #0
   1e014:	ldmib	r4, {r0, r1}
   1e018:	add	r1, r1, #5
   1e01c:	cmp	r1, r0
   1e020:	bcs	1e064 <myhtml_data_process_end@@Base+0xfc>
   1e024:	ldr	r1, [r5, #36]	; 0x24
   1e028:	ldr	r2, [r4]
   1e02c:	ldr	r0, [r8, r7, lsl #2]
   1e030:	add	r1, r2, r1
   1e034:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1e038:	ldr	r1, [r5, #36]	; 0x24
   1e03c:	add	r7, r7, #1
   1e040:	add	r0, r1, r0
   1e044:	str	r0, [r5, #36]	; 0x24
   1e048:	ldr	r1, [r6, #20]
   1e04c:	cmp	r7, r1
   1e050:	bcs	1e0d0 <myhtml_data_process_end@@Base+0x168>
   1e054:	ldmib	r4, {r0, r1}
   1e058:	add	r1, r1, #5
   1e05c:	cmp	r1, r0
   1e060:	bcc	1e024 <myhtml_data_process_end@@Base+0xbc>
   1e064:	mov	r0, r4
   1e068:	bl	11774 <mycore_string_realloc@plt>
   1e06c:	b	1e024 <myhtml_data_process_end@@Base+0xbc>
   1e070:	ldr	r1, [r5, #36]	; 0x24
   1e074:	ldr	r0, [r4, #8]
   1e078:	add	r1, r1, #2
   1e07c:	cmp	r0, r1
   1e080:	bne	1dfc0 <myhtml_data_process_end@@Base+0x58>
   1e084:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e088:	mov	r2, r0
   1e08c:	movw	r1, #65533	; 0xfffd
   1e090:	bfc	r2, #0, #11
   1e094:	cmp	r2, #55296	; 0xd800
   1e098:	beq	1e0ac <myhtml_data_process_end@@Base+0x144>
   1e09c:	movw	r2, #65535	; 0xffff
   1e0a0:	movt	r2, #16
   1e0a4:	cmp	r0, r2
   1e0a8:	bls	1e0b4 <myhtml_data_process_end@@Base+0x14c>
   1e0ac:	mov	r0, r1
   1e0b0:	str	r1, [r5, #40]	; 0x28
   1e0b4:	ldr	r5, [r5, #36]	; 0x24
   1e0b8:	ldr	r1, [r4]
   1e0bc:	add	r1, r1, r5
   1e0c0:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   1e0c4:	add	r0, r0, r5
   1e0c8:	b	1e0d0 <myhtml_data_process_end@@Base+0x168>
   1e0cc:	ldr	r0, [r5, #36]	; 0x24
   1e0d0:	str	r0, [r4, #8]
   1e0d4:	mov	r2, #0
   1e0d8:	ldr	r1, [r4]
   1e0dc:	strb	r2, [r1, r0]
   1e0e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e0e4:	ldrdeq	pc, [pc], -r4
   1e0e8:	andeq	pc, pc, r4, lsl r8	; <UNPREDICTABLE>
   1e0ec:	ldrdeq	r4, [lr], -r4	; <UNPREDICTABLE>
   1e0f0:	andeq	pc, pc, r0, ror #11

0001e0f4 <myhtml_init_marker@@Base>:
   1e0f4:	push	{r4, sl, fp, lr}
   1e0f8:	add	fp, sp, #8
   1e0fc:	mov	r4, r0
   1e100:	mov	r0, #44	; 0x2c
   1e104:	bl	119a8 <mycore_malloc@plt>
   1e108:	cmp	r0, #0
   1e10c:	str	r0, [r4, #36]	; 0x24
   1e110:	popeq	{r4, sl, fp, pc}
   1e114:	pop	{r4, sl, fp, lr}
   1e118:	b	11c9c <myhtml_tree_node_clean@plt>

0001e11c <myhtml_destroy_marker@@Base>:
   1e11c:	ldr	r0, [r0, #36]	; 0x24
   1e120:	cmp	r0, #0
   1e124:	bxeq	lr
   1e128:	b	11a98 <mycore_free@plt>

0001e12c <myhtml_stream_create@@Base>:
   1e12c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e130:	add	fp, sp, #24
   1e134:	mov	r4, r1
   1e138:	mov	r5, r0
   1e13c:	cmp	r2, #0
   1e140:	beq	1e1a4 <myhtml_stream_create@@Base+0x78>
   1e144:	mov	r8, r3
   1e148:	mov	r7, r2
   1e14c:	bl	10f4c <mythread_create@plt>
   1e150:	cmp	r0, #0
   1e154:	str	r0, [r5]
   1e158:	mov	r2, r7
   1e15c:	mov	r3, r8
   1e160:	mov	r6, #0
   1e164:	moveq	r1, #9
   1e168:	streq	r1, [r4]
   1e16c:	mov	r1, #0
   1e170:	bl	11ca8 <mythread_init@plt>
   1e174:	cmp	r0, #0
   1e178:	str	r0, [r4]
   1e17c:	beq	1e19c <myhtml_stream_create@@Base+0x70>
   1e180:	ldr	r0, [r5]
   1e184:	mov	r1, #0
   1e188:	mov	r2, #0
   1e18c:	mov	r3, #1
   1e190:	bl	117b0 <mythread_destroy@plt>
   1e194:	str	r0, [r5]
   1e198:	ldr	r6, [r4]
   1e19c:	mov	r0, r6
   1e1a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e1a4:	mov	r6, #0
   1e1a8:	mov	r0, r6
   1e1ac:	str	r6, [r5]
   1e1b0:	str	r6, [r4]
   1e1b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e1b8 <myhtml_batch_create@@Base>:
   1e1b8:	push	{r4, r5, r6, r7, fp, lr}
   1e1bc:	add	fp, sp, #16
   1e1c0:	mov	r4, r1
   1e1c4:	mov	r5, r0
   1e1c8:	cmp	r2, #0
   1e1cc:	beq	1e24c <myhtml_batch_create@@Base+0x94>
   1e1d0:	mov	r6, r3
   1e1d4:	mov	r7, r2
   1e1d8:	bl	10f4c <mythread_create@plt>
   1e1dc:	str	r0, [r5, #4]
   1e1e0:	ldr	r1, [r5]
   1e1e4:	cmp	r1, #0
   1e1e8:	bne	1e210 <myhtml_batch_create@@Base+0x58>
   1e1ec:	mov	r0, #0
   1e1f0:	mov	r1, #0
   1e1f4:	mov	r2, #0
   1e1f8:	mov	r3, #1
   1e1fc:	bl	117b0 <mythread_destroy@plt>
   1e200:	str	r0, [r5]
   1e204:	mov	r0, #9
   1e208:	str	r0, [r4]
   1e20c:	ldr	r0, [r5, #4]
   1e210:	mov	r1, #1
   1e214:	mov	r2, r7
   1e218:	mov	r3, r6
   1e21c:	bl	11ca8 <mythread_init@plt>
   1e220:	cmp	r0, #0
   1e224:	str	r0, [r4]
   1e228:	beq	1e25c <myhtml_batch_create@@Base+0xa4>
   1e22c:	ldr	r0, [r5, #4]
   1e230:	mov	r1, #0
   1e234:	mov	r2, #0
   1e238:	mov	r3, #1
   1e23c:	bl	117b0 <mythread_destroy@plt>
   1e240:	str	r0, [r5, #4]
   1e244:	ldr	r0, [r4]
   1e248:	pop	{r4, r5, r6, r7, fp, pc}
   1e24c:	mov	r0, #0
   1e250:	str	r0, [r5, #4]
   1e254:	str	r0, [r4]
   1e258:	pop	{r4, r5, r6, r7, fp, pc}
   1e25c:	mov	r0, #0
   1e260:	pop	{r4, r5, r6, r7, fp, pc}

0001e264 <myhtml_create_stream_and_batch@@Base>:
   1e264:	push	{r4, r5, r6, r7, fp, lr}
   1e268:	add	fp, sp, #16
   1e26c:	mov	r6, r2
   1e270:	mov	r5, r1
   1e274:	mov	r4, r0
   1e278:	cmp	r1, #0
   1e27c:	beq	1e2a8 <myhtml_create_stream_and_batch@@Base+0x44>
   1e280:	bl	10f4c <mythread_create@plt>
   1e284:	mov	r1, #0
   1e288:	mov	r2, r5
   1e28c:	mov	r3, #0
   1e290:	str	r0, [r4]
   1e294:	bl	11ca8 <mythread_init@plt>
   1e298:	cmp	r0, #0
   1e29c:	beq	1e2b0 <myhtml_create_stream_and_batch@@Base+0x4c>
   1e2a0:	mov	r7, r0
   1e2a4:	b	1e31c <myhtml_create_stream_and_batch@@Base+0xb8>
   1e2a8:	mov	r0, #0
   1e2ac:	str	r0, [r4]
   1e2b0:	cmp	r6, #0
   1e2b4:	beq	1e33c <myhtml_create_stream_and_batch@@Base+0xd8>
   1e2b8:	bl	10f4c <mythread_create@plt>
   1e2bc:	str	r0, [r4, #4]
   1e2c0:	ldr	r1, [r4]
   1e2c4:	cmp	r1, #0
   1e2c8:	bne	1e2e8 <myhtml_create_stream_and_batch@@Base+0x84>
   1e2cc:	mov	r0, #0
   1e2d0:	mov	r1, #0
   1e2d4:	mov	r2, #0
   1e2d8:	mov	r3, #1
   1e2dc:	bl	117b0 <mythread_destroy@plt>
   1e2e0:	str	r0, [r4]
   1e2e4:	ldr	r0, [r4, #4]
   1e2e8:	mov	r1, #1
   1e2ec:	mov	r2, r6
   1e2f0:	mov	r3, r5
   1e2f4:	bl	11ca8 <mythread_init@plt>
   1e2f8:	cmp	r0, #0
   1e2fc:	beq	1e34c <myhtml_create_stream_and_batch@@Base+0xe8>
   1e300:	mov	r7, r0
   1e304:	ldr	r0, [r4, #4]
   1e308:	mov	r1, #0
   1e30c:	mov	r2, #0
   1e310:	mov	r3, #1
   1e314:	bl	117b0 <mythread_destroy@plt>
   1e318:	str	r0, [r4, #4]
   1e31c:	ldr	r0, [r4]
   1e320:	mov	r1, #0
   1e324:	mov	r2, #0
   1e328:	mov	r3, #1
   1e32c:	bl	117b0 <mythread_destroy@plt>
   1e330:	str	r0, [r4]
   1e334:	mov	r0, r7
   1e338:	pop	{r4, r5, r6, r7, fp, pc}
   1e33c:	mov	r7, #0
   1e340:	mov	r0, r7
   1e344:	str	r7, [r4, #4]
   1e348:	pop	{r4, r5, r6, r7, fp, pc}
   1e34c:	mov	r7, #0
   1e350:	mov	r0, r7
   1e354:	pop	{r4, r5, r6, r7, fp, pc}

0001e358 <myhtml_create@@Base>:
   1e358:	mov	r0, #1
   1e35c:	mov	r1, #40	; 0x28
   1e360:	b	11000 <mycore_calloc@plt>

0001e364 <myhtml_init@@Base>:
   1e364:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e368:	add	fp, sp, #24
   1e36c:	sub	sp, sp, #8
   1e370:	mov	r4, r0
   1e374:	str	r1, [r0, #32]
   1e378:	mov	r0, #44	; 0x2c
   1e37c:	mov	r5, r2
   1e380:	mov	r7, r1
   1e384:	bl	119a8 <mycore_malloc@plt>
   1e388:	cmp	r0, #0
   1e38c:	str	r0, [r4, #36]	; 0x24
   1e390:	beq	1e398 <myhtml_init@@Base+0x34>
   1e394:	bl	11c9c <myhtml_tree_node_clean@plt>
   1e398:	mov	r0, r4
   1e39c:	bl	10e50 <myhtml_tokenizer_state_init@plt>
   1e3a0:	mov	r6, r0
   1e3a4:	cmp	r0, #0
   1e3a8:	str	r0, [sp, #4]
   1e3ac:	bne	1e564 <myhtml_init@@Base+0x200>
   1e3b0:	mov	r0, r4
   1e3b4:	bl	11930 <myhtml_rules_init@plt>
   1e3b8:	mov	r6, r0
   1e3bc:	cmp	r0, #0
   1e3c0:	str	r0, [sp, #4]
   1e3c4:	bne	1e564 <myhtml_init@@Base+0x200>
   1e3c8:	cmp	r5, #0
   1e3cc:	movweq	r5, #1
   1e3d0:	cmp	r7, #2
   1e3d4:	beq	1e3f8 <myhtml_init@@Base+0x94>
   1e3d8:	cmp	r7, #1
   1e3dc:	bne	1e448 <myhtml_init@@Base+0xe4>
   1e3e0:	mov	r6, #0
   1e3e4:	mov	r0, #0
   1e3e8:	str	r6, [r4]
   1e3ec:	str	r6, [r4, #4]
   1e3f0:	str	r6, [sp, #4]
   1e3f4:	b	1e550 <myhtml_init@@Base+0x1ec>
   1e3f8:	bl	10f4c <mythread_create@plt>
   1e3fc:	mov	r1, #0
   1e400:	mov	r2, #1
   1e404:	mov	r3, #0
   1e408:	str	r0, [r4]
   1e40c:	mov	r7, #0
   1e410:	bl	11ca8 <mythread_init@plt>
   1e414:	cmp	r0, #0
   1e418:	beq	1e510 <myhtml_init@@Base+0x1ac>
   1e41c:	mov	r6, r0
   1e420:	ldr	r0, [r4]
   1e424:	mov	r1, #0
   1e428:	mov	r2, #0
   1e42c:	mov	r3, #1
   1e430:	bl	117b0 <mythread_destroy@plt>
   1e434:	str	r0, [r4]
   1e438:	str	r6, [sp, #4]
   1e43c:	mov	r0, r6
   1e440:	sub	sp, fp, #24
   1e444:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e448:	cmp	r5, #2
   1e44c:	mov	r0, r4
   1e450:	mov	r1, #1
   1e454:	movls	r5, #2
   1e458:	sub	r2, r5, #1
   1e45c:	bl	1142c <myhtml_create_stream_and_batch@plt>
   1e460:	mov	r6, r0
   1e464:	cmp	r0, #0
   1e468:	str	r0, [sp, #4]
   1e46c:	bne	1e564 <myhtml_init@@Base+0x200>
   1e470:	add	r0, sp, #4
   1e474:	bl	1163c <mythread_queue_list_create@plt>
   1e478:	ldr	r3, [r4]
   1e47c:	str	r0, [r3, #16]
   1e480:	ldr	r1, [r4, #4]
   1e484:	str	r0, [r1, #16]
   1e488:	mov	r0, r3
   1e48c:	mov	r3, #4
   1e490:	ldr	r1, [pc, #240]	; 1e588 <myhtml_init@@Base+0x224>
   1e494:	ldr	r1, [pc, r1]
   1e498:	ldr	r2, [pc, #236]	; 1e58c <myhtml_init@@Base+0x228>
   1e49c:	ldr	r2, [pc, r2]
   1e4a0:	bl	116d8 <myhread_entry_create@plt>
   1e4a4:	mov	r6, r0
   1e4a8:	cmp	r0, #0
   1e4ac:	str	r0, [sp, #4]
   1e4b0:	bne	1e564 <myhtml_init@@Base+0x200>
   1e4b4:	ldr	r0, [r4, #4]
   1e4b8:	ldr	r1, [r0, #8]
   1e4bc:	cmp	r1, #0
   1e4c0:	beq	1e508 <myhtml_init@@Base+0x1a4>
   1e4c4:	ldr	r8, [pc, #196]	; 1e590 <myhtml_init@@Base+0x22c>
   1e4c8:	mov	r7, #0
   1e4cc:	ldr	r8, [pc, r8]
   1e4d0:	ldr	r9, [pc, #188]	; 1e594 <myhtml_init@@Base+0x230>
   1e4d4:	ldr	r9, [pc, r9]
   1e4d8:	mov	r1, r8
   1e4dc:	mov	r2, r9
   1e4e0:	mov	r3, #4
   1e4e4:	bl	116d8 <myhread_entry_create@plt>
   1e4e8:	cmp	r0, #0
   1e4ec:	str	r0, [sp, #4]
   1e4f0:	bne	1e570 <myhtml_init@@Base+0x20c>
   1e4f4:	ldr	r0, [r4, #4]
   1e4f8:	add	r7, r7, #1
   1e4fc:	ldr	r1, [r0, #8]
   1e500:	cmp	r7, r1
   1e504:	bcc	1e4d8 <myhtml_init@@Base+0x174>
   1e508:	mov	r6, #0
   1e50c:	b	1e550 <myhtml_init@@Base+0x1ec>
   1e510:	add	r0, sp, #4
   1e514:	str	r7, [r4, #4]
   1e518:	str	r7, [sp, #4]
   1e51c:	bl	1163c <mythread_queue_list_create@plt>
   1e520:	ldr	r3, [r4]
   1e524:	str	r0, [r3, #16]
   1e528:	mov	r0, r3
   1e52c:	mov	r3, #4
   1e530:	ldr	r1, [pc, #72]	; 1e580 <myhtml_init@@Base+0x21c>
   1e534:	ldr	r1, [pc, r1]
   1e538:	ldr	r2, [pc, #68]	; 1e584 <myhtml_init@@Base+0x220>
   1e53c:	ldr	r2, [pc, r2]
   1e540:	bl	116d8 <myhread_entry_create@plt>
   1e544:	str	r0, [sp, #4]
   1e548:	mov	r6, r0
   1e54c:	ldr	r0, [r4, #4]
   1e550:	ldr	r2, [r4]
   1e554:	mov	r1, #0
   1e558:	str	r2, [r4, #8]
   1e55c:	add	r2, r4, #12
   1e560:	stm	r2, {r0, r1, r5}
   1e564:	mov	r0, r6
   1e568:	sub	sp, fp, #24
   1e56c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e570:	mov	r6, r0
   1e574:	mov	r0, r6
   1e578:	sub	sp, fp, #24
   1e57c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e580:	andeq	pc, pc, r4, lsl r0	; <UNPREDICTABLE>
   1e584:	andeq	pc, pc, r8, lsl r0	; <UNPREDICTABLE>
   1e588:	strheq	pc, [pc], -r4	; <UNPREDICTABLE>
   1e58c:	andeq	pc, pc, r4, lsr r3	; <UNPREDICTABLE>
   1e590:	andeq	pc, pc, r0, ror r0	; <UNPREDICTABLE>
   1e594:	andeq	pc, pc, r8, lsl #1

0001e598 <myhtml_clean@@Base>:
   1e598:	bx	lr

0001e59c <myhtml_destroy@@Base>:
   1e59c:	cmp	r0, #0
   1e5a0:	beq	1e654 <myhtml_destroy@@Base+0xb8>
   1e5a4:	push	{r4, r5, fp, lr}
   1e5a8:	add	fp, sp, #8
   1e5ac:	mov	r4, r0
   1e5b0:	ldr	r0, [r0, #36]	; 0x24
   1e5b4:	cmp	r0, #0
   1e5b8:	beq	1e5c0 <myhtml_destroy@@Base+0x24>
   1e5bc:	bl	11a98 <mycore_free@plt>
   1e5c0:	ldr	r0, [r4]
   1e5c4:	cmp	r0, #0
   1e5c8:	beq	1e630 <myhtml_destroy@@Base+0x94>
   1e5cc:	ldr	r5, [r0, #16]
   1e5d0:	cmp	r5, #0
   1e5d4:	beq	1e5e4 <myhtml_destroy@@Base+0x48>
   1e5d8:	mov	r1, r5
   1e5dc:	bl	11aa4 <mythread_queue_list_wait_for_done@plt>
   1e5e0:	ldr	r0, [r4]
   1e5e4:	ldr	r1, [pc, #112]	; 1e65c <myhtml_destroy@@Base+0xc0>
   1e5e8:	mov	r2, #0
   1e5ec:	mov	r3, #1
   1e5f0:	ldr	r1, [pc, r1]
   1e5f4:	bl	117b0 <mythread_destroy@plt>
   1e5f8:	str	r0, [r4]
   1e5fc:	ldr	r0, [r4, #4]
   1e600:	cmp	r0, #0
   1e604:	beq	1e620 <myhtml_destroy@@Base+0x84>
   1e608:	ldr	r1, [pc, #80]	; 1e660 <myhtml_destroy@@Base+0xc4>
   1e60c:	mov	r2, #0
   1e610:	mov	r3, #1
   1e614:	ldr	r1, [pc, r1]
   1e618:	bl	117b0 <mythread_destroy@plt>
   1e61c:	str	r0, [r4, #4]
   1e620:	cmp	r5, #0
   1e624:	beq	1e630 <myhtml_destroy@@Base+0x94>
   1e628:	mov	r0, r5
   1e62c:	bl	1118c <mythread_queue_list_destroy@plt>
   1e630:	mov	r0, r4
   1e634:	bl	11174 <myhtml_tokenizer_state_destroy@plt>
   1e638:	ldr	r0, [r4, #28]
   1e63c:	cmp	r0, #0
   1e640:	beq	1e648 <myhtml_destroy@@Base+0xac>
   1e644:	bl	11a98 <mycore_free@plt>
   1e648:	mov	r0, r4
   1e64c:	bl	11a98 <mycore_free@plt>
   1e650:	pop	{r4, r5, fp, lr}
   1e654:	mov	r0, #0
   1e658:	bx	lr
   1e65c:	andeq	pc, pc, r0, lsl #1
   1e660:	andeq	pc, pc, ip, asr r0	; <UNPREDICTABLE>

0001e664 <myhtml_parse@@Base>:
   1e664:	push	{r4, r5, r6, r7, fp, lr}
   1e668:	add	fp, sp, #16
   1e66c:	mov	r4, r0
   1e670:	ldr	r0, [r0, #180]	; 0xb4
   1e674:	mov	r5, r3
   1e678:	mov	r6, r2
   1e67c:	mov	r7, r1
   1e680:	tst	r0, #32
   1e684:	beq	1e690 <myhtml_parse@@Base+0x2c>
   1e688:	mov	r0, r4
   1e68c:	bl	11594 <myhtml_tree_clean@plt>
   1e690:	cmp	r7, #41	; 0x29
   1e694:	mov	r0, r4
   1e698:	mov	r1, r6
   1e69c:	mov	r2, r5
   1e6a0:	strls	r7, [r4, #200]	; 0xc8
   1e6a4:	strls	r7, [r4, #204]	; 0xcc
   1e6a8:	bl	111a4 <myhtml_tokenizer_begin@plt>
   1e6ac:	cmp	r0, #0
   1e6b0:	popne	{r4, r5, r6, r7, fp, pc}
   1e6b4:	mov	r0, r4
   1e6b8:	pop	{r4, r5, r6, r7, fp, lr}
   1e6bc:	b	11264 <myhtml_tokenizer_end@plt>

0001e6c0 <myhtml_encoding_set@@Base>:
   1e6c0:	cmp	r1, #41	; 0x29
   1e6c4:	strls	r1, [r0, #200]	; 0xc8
   1e6c8:	strls	r1, [r0, #204]	; 0xcc
   1e6cc:	bx	lr

0001e6d0 <myhtml_parse_fragment@@Base>:
   1e6d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e6d4:	add	fp, sp, #24
   1e6d8:	mov	r4, r0
   1e6dc:	ldr	r0, [r0, #180]	; 0xb4
   1e6e0:	ldr	r5, [fp, #12]
   1e6e4:	ldr	r6, [fp, #8]
   1e6e8:	mov	r8, r3
   1e6ec:	mov	r9, r2
   1e6f0:	mov	r7, r1
   1e6f4:	tst	r0, #32
   1e6f8:	beq	1e704 <myhtml_parse_fragment@@Base+0x34>
   1e6fc:	mov	r0, r4
   1e700:	bl	11594 <myhtml_tree_clean@plt>
   1e704:	cmp	r6, #0
   1e708:	mov	r0, r4
   1e70c:	movweq	r6, #42	; 0x2a
   1e710:	cmp	r5, #0
   1e714:	movweq	r5, #1
   1e718:	mov	r1, r6
   1e71c:	mov	r2, r5
   1e720:	bl	10e2c <myhtml_tokenizer_fragment_init@plt>
   1e724:	cmp	r0, #0
   1e728:	beq	1e754 <myhtml_parse_fragment@@Base+0x84>
   1e72c:	cmp	r7, #41	; 0x29
   1e730:	mov	r0, r4
   1e734:	mov	r1, r9
   1e738:	mov	r2, r8
   1e73c:	strls	r7, [r4, #200]	; 0xc8
   1e740:	strls	r7, [r4, #204]	; 0xcc
   1e744:	bl	111a4 <myhtml_tokenizer_begin@plt>
   1e748:	cmp	r0, #0
   1e74c:	beq	1e75c <myhtml_parse_fragment@@Base+0x8c>
   1e750:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e754:	movw	r0, #37165	; 0x912d
   1e758:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e75c:	mov	r0, r4
   1e760:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e764:	b	11264 <myhtml_tokenizer_end@plt>

0001e768 <myhtml_parse_single@@Base>:
   1e768:	push	{r4, r5, r6, r7, fp, lr}
   1e76c:	add	fp, sp, #16
   1e770:	mov	r4, r0
   1e774:	ldr	r0, [r0, #180]	; 0xb4
   1e778:	mov	r5, r3
   1e77c:	mov	r6, r2
   1e780:	mov	r7, r1
   1e784:	tst	r0, #32
   1e788:	beq	1e794 <myhtml_parse_single@@Base+0x2c>
   1e78c:	mov	r0, r4
   1e790:	bl	11594 <myhtml_tree_clean@plt>
   1e794:	ldr	r0, [r4, #180]	; 0xb4
   1e798:	cmp	r7, #41	; 0x29
   1e79c:	mov	r1, r6
   1e7a0:	mov	r2, r5
   1e7a4:	orr	r0, r0, #16
   1e7a8:	str	r0, [r4, #180]	; 0xb4
   1e7ac:	mov	r0, r4
   1e7b0:	strls	r7, [r4, #200]	; 0xc8
   1e7b4:	strls	r7, [r4, #204]	; 0xcc
   1e7b8:	bl	111a4 <myhtml_tokenizer_begin@plt>
   1e7bc:	cmp	r0, #0
   1e7c0:	popne	{r4, r5, r6, r7, fp, pc}
   1e7c4:	mov	r0, r4
   1e7c8:	pop	{r4, r5, r6, r7, fp, lr}
   1e7cc:	b	11264 <myhtml_tokenizer_end@plt>

0001e7d0 <myhtml_parse_fragment_single@@Base>:
   1e7d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e7d4:	add	fp, sp, #24
   1e7d8:	mov	r4, r0
   1e7dc:	ldr	r0, [r0, #180]	; 0xb4
   1e7e0:	ldr	r5, [fp, #12]
   1e7e4:	ldr	r6, [fp, #8]
   1e7e8:	mov	r8, r3
   1e7ec:	mov	r9, r2
   1e7f0:	mov	r7, r1
   1e7f4:	tst	r0, #32
   1e7f8:	beq	1e804 <myhtml_parse_fragment_single@@Base+0x34>
   1e7fc:	mov	r0, r4
   1e800:	bl	11594 <myhtml_tree_clean@plt>
   1e804:	ldr	r0, [r4, #180]	; 0xb4
   1e808:	cmp	r6, #0
   1e80c:	movweq	r6, #42	; 0x2a
   1e810:	cmp	r5, #0
   1e814:	movweq	r5, #1
   1e818:	mov	r1, r6
   1e81c:	mov	r2, r5
   1e820:	orr	r0, r0, #16
   1e824:	str	r0, [r4, #180]	; 0xb4
   1e828:	mov	r0, r4
   1e82c:	bl	10e2c <myhtml_tokenizer_fragment_init@plt>
   1e830:	cmp	r0, #0
   1e834:	beq	1e860 <myhtml_parse_fragment_single@@Base+0x90>
   1e838:	cmp	r7, #41	; 0x29
   1e83c:	mov	r0, r4
   1e840:	mov	r1, r9
   1e844:	mov	r2, r8
   1e848:	strls	r7, [r4, #200]	; 0xc8
   1e84c:	strls	r7, [r4, #204]	; 0xcc
   1e850:	bl	111a4 <myhtml_tokenizer_begin@plt>
   1e854:	cmp	r0, #0
   1e858:	beq	1e868 <myhtml_parse_fragment_single@@Base+0x98>
   1e85c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e860:	movw	r0, #37165	; 0x912d
   1e864:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e868:	mov	r0, r4
   1e86c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e870:	b	11264 <myhtml_tokenizer_end@plt>

0001e874 <myhtml_parse_chunk@@Base>:
   1e874:	push	{r4, r5, r6, sl, fp, lr}
   1e878:	add	fp, sp, #16
   1e87c:	mov	r6, r0
   1e880:	ldr	r0, [r0, #180]	; 0xb4
   1e884:	mov	r4, r2
   1e888:	mov	r5, r1
   1e88c:	tst	r0, #32
   1e890:	beq	1e89c <myhtml_parse_chunk@@Base+0x28>
   1e894:	mov	r0, r6
   1e898:	bl	11594 <myhtml_tree_clean@plt>
   1e89c:	mov	r0, r6
   1e8a0:	mov	r1, r5
   1e8a4:	mov	r2, r4
   1e8a8:	pop	{r4, r5, r6, sl, fp, lr}
   1e8ac:	b	11150 <myhtml_tokenizer_chunk@plt>

0001e8b0 <myhtml_parse_chunk_fragment@@Base>:
   1e8b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e8b4:	add	fp, sp, #24
   1e8b8:	mov	r6, r0
   1e8bc:	ldr	r0, [r0, #180]	; 0xb4
   1e8c0:	ldr	r4, [fp, #8]
   1e8c4:	mov	r7, r3
   1e8c8:	mov	r8, r2
   1e8cc:	mov	r5, r1
   1e8d0:	tst	r0, #32
   1e8d4:	beq	1e8e0 <myhtml_parse_chunk_fragment@@Base+0x30>
   1e8d8:	mov	r0, r6
   1e8dc:	bl	11594 <myhtml_tree_clean@plt>
   1e8e0:	cmp	r7, #0
   1e8e4:	mov	r0, r6
   1e8e8:	movweq	r7, #42	; 0x2a
   1e8ec:	cmp	r4, #0
   1e8f0:	movweq	r4, #1
   1e8f4:	mov	r1, r7
   1e8f8:	mov	r2, r4
   1e8fc:	bl	10e2c <myhtml_tokenizer_fragment_init@plt>
   1e900:	cmp	r0, #0
   1e904:	beq	1e91c <myhtml_parse_chunk_fragment@@Base+0x6c>
   1e908:	mov	r0, r6
   1e90c:	mov	r1, r5
   1e910:	mov	r2, r8
   1e914:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e918:	b	11150 <myhtml_tokenizer_chunk@plt>
   1e91c:	movw	r0, #37165	; 0x912d
   1e920:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e924 <myhtml_parse_chunk_single@@Base>:
   1e924:	push	{r4, r5, r6, sl, fp, lr}
   1e928:	add	fp, sp, #16
   1e92c:	mov	r6, r0
   1e930:	ldr	r0, [r0, #180]	; 0xb4
   1e934:	mov	r4, r2
   1e938:	mov	r5, r1
   1e93c:	tst	r0, #16
   1e940:	bne	1e950 <myhtml_parse_chunk_single@@Base+0x2c>
   1e944:	ldr	r0, [r6, #180]	; 0xb4
   1e948:	orr	r0, r0, #16
   1e94c:	str	r0, [r6, #180]	; 0xb4
   1e950:	ldr	r0, [r6, #180]	; 0xb4
   1e954:	tst	r0, #32
   1e958:	beq	1e964 <myhtml_parse_chunk_single@@Base+0x40>
   1e95c:	mov	r0, r6
   1e960:	bl	11594 <myhtml_tree_clean@plt>
   1e964:	mov	r0, r6
   1e968:	mov	r1, r5
   1e96c:	mov	r2, r4
   1e970:	pop	{r4, r5, r6, sl, fp, lr}
   1e974:	b	11150 <myhtml_tokenizer_chunk@plt>

0001e978 <myhtml_parse_chunk_fragment_single@@Base>:
   1e978:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e97c:	add	fp, sp, #24
   1e980:	mov	r6, r0
   1e984:	ldr	r0, [r0, #180]	; 0xb4
   1e988:	ldr	r4, [fp, #8]
   1e98c:	mov	r7, r3
   1e990:	mov	r8, r2
   1e994:	mov	r5, r1
   1e998:	tst	r0, #16
   1e99c:	bne	1e9ac <myhtml_parse_chunk_fragment_single@@Base+0x34>
   1e9a0:	ldr	r0, [r6, #180]	; 0xb4
   1e9a4:	orr	r0, r0, #16
   1e9a8:	str	r0, [r6, #180]	; 0xb4
   1e9ac:	ldr	r0, [r6, #180]	; 0xb4
   1e9b0:	tst	r0, #32
   1e9b4:	beq	1e9c0 <myhtml_parse_chunk_fragment_single@@Base+0x48>
   1e9b8:	mov	r0, r6
   1e9bc:	bl	11594 <myhtml_tree_clean@plt>
   1e9c0:	cmp	r7, #0
   1e9c4:	mov	r0, r6
   1e9c8:	movweq	r7, #42	; 0x2a
   1e9cc:	cmp	r4, #0
   1e9d0:	movweq	r4, #1
   1e9d4:	mov	r1, r7
   1e9d8:	mov	r2, r4
   1e9dc:	bl	10e2c <myhtml_tokenizer_fragment_init@plt>
   1e9e0:	cmp	r0, #0
   1e9e4:	beq	1e9fc <myhtml_parse_chunk_fragment_single@@Base+0x84>
   1e9e8:	mov	r0, r6
   1e9ec:	mov	r1, r5
   1e9f0:	mov	r2, r8
   1e9f4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e9f8:	b	11150 <myhtml_tokenizer_chunk@plt>
   1e9fc:	movw	r0, #37165	; 0x912d
   1ea00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ea04 <myhtml_parse_chunk_end@@Base>:
   1ea04:	b	11264 <myhtml_tokenizer_end@plt>

0001ea08 <myhtml_encoding_get@@Base>:
   1ea08:	ldr	r0, [r0, #200]	; 0xc8
   1ea0c:	bx	lr

0001ea10 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1ea10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea14:	add	fp, sp, #28
   1ea18:	sub	sp, sp, #4
   1ea1c:	mov	r8, #0
   1ea20:	cmp	r0, #0
   1ea24:	beq	1eac0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xb0>
   1ea28:	mov	r5, r2
   1ea2c:	mov	r6, r1
   1ea30:	mov	r7, r0
   1ea34:	movw	sl, #1025	; 0x401
   1ea38:	movw	r9, #1026	; 0x402
   1ea3c:	ldr	r0, [r7, #4]
   1ea40:	cmp	r0, r5
   1ea44:	beq	1ea74 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x64>
   1ea48:	ldr	r0, [r7, #20]
   1ea4c:	cmp	r0, #0
   1ea50:	movne	r1, r6
   1ea54:	movne	r2, r5
   1ea58:	blne	11960 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1ea5c:	ldr	r7, [r7, #16]
   1ea60:	cmp	r7, #0
   1ea64:	beq	1eac0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xb0>
   1ea68:	ldr	r0, [r7, #4]
   1ea6c:	cmp	r0, r5
   1ea70:	bne	1ea48 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x38>
   1ea74:	ldr	r0, [r6, #8]
   1ea78:	ldr	r1, [r6]
   1ea7c:	add	r2, r0, #1
   1ea80:	str	r7, [r1, r0, lsl #2]
   1ea84:	str	r2, [r6, #8]
   1ea88:	ldr	r1, [r6, #4]
   1ea8c:	cmp	r2, r1
   1ea90:	addcs	r2, r0, sl
   1ea94:	cmpcs	r2, r1
   1ea98:	bcc	1ea48 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x38>
   1ea9c:	add	r4, r0, r9
   1eaa0:	ldr	r0, [r6]
   1eaa4:	lsl	r1, r4, #2
   1eaa8:	bl	10d9c <mycore_realloc@plt>
   1eaac:	cmp	r0, #0
   1eab0:	beq	1eabc <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xac>
   1eab4:	stm	r6, {r0, r4}
   1eab8:	b	1ea48 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x38>
   1eabc:	mov	r8, #2
   1eac0:	mov	r0, r8
   1eac4:	sub	sp, fp, #28
   1eac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001eacc <myhtml_collection_check_size@@Base>:
   1eacc:	push	{r4, r5, r6, sl, fp, lr}
   1ead0:	add	fp, sp, #16
   1ead4:	mov	r5, r0
   1ead8:	ldr	r3, [r0, #4]
   1eadc:	ldr	r0, [r0, #8]
   1eae0:	mov	r4, #0
   1eae4:	add	r0, r0, r1
   1eae8:	cmp	r0, r3
   1eaec:	bcc	1eb10 <myhtml_collection_check_size@@Base+0x44>
   1eaf0:	add	r0, r2, r0
   1eaf4:	add	r6, r0, #1
   1eaf8:	ldr	r0, [r5]
   1eafc:	lsl	r1, r6, #2
   1eb00:	bl	10d9c <mycore_realloc@plt>
   1eb04:	cmp	r0, #0
   1eb08:	beq	1eb18 <myhtml_collection_check_size@@Base+0x4c>
   1eb0c:	stm	r5, {r0, r6}
   1eb10:	mov	r0, r4
   1eb14:	pop	{r4, r5, r6, sl, fp, pc}
   1eb18:	mov	r4, #2
   1eb1c:	mov	r0, r4
   1eb20:	pop	{r4, r5, r6, sl, fp, pc}

0001eb24 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1eb24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1eb28:	add	fp, sp, #24
   1eb2c:	mov	r5, #0
   1eb30:	cmp	r2, #0
   1eb34:	beq	1eb88 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x64>
   1eb38:	ldr	r8, [fp, #8]
   1eb3c:	mov	r6, r3
   1eb40:	mov	r7, r2
   1eb44:	mov	r4, r1
   1eb48:	cmp	r1, #0
   1eb4c:	beq	1eb90 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x6c>
   1eb50:	ldr	r1, [r7, #20]
   1eb54:	mov	r0, #0
   1eb58:	mov	r5, #0
   1eb5c:	cmp	r1, #0
   1eb60:	movne	r0, r1
   1eb64:	movne	r1, r4
   1eb68:	movne	r2, r6
   1eb6c:	blne	11960 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1eb70:	ldr	r1, [r4]
   1eb74:	ldr	r2, [r4, #8]
   1eb78:	cmp	r8, #0
   1eb7c:	str	r5, [r1, r2, lsl #2]
   1eb80:	mov	r5, r4
   1eb84:	strne	r0, [r8]
   1eb88:	mov	r0, r5
   1eb8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eb90:	mov	r0, #12
   1eb94:	bl	119a8 <mycore_malloc@plt>
   1eb98:	cmp	r0, #0
   1eb9c:	beq	1ebd0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xac>
   1eba0:	mov	r4, r0
   1eba4:	mov	r1, #1024	; 0x400
   1eba8:	mov	r0, #0
   1ebac:	str	r1, [r4, #4]
   1ebb0:	str	r0, [r4, #8]
   1ebb4:	mov	r0, #4096	; 0x1000
   1ebb8:	bl	119a8 <mycore_malloc@plt>
   1ebbc:	cmp	r0, #0
   1ebc0:	str	r0, [r4]
   1ebc4:	bne	1eb50 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x2c>
   1ebc8:	mov	r0, r4
   1ebcc:	bl	11a98 <mycore_free@plt>
   1ebd0:	cmp	r8, #0
   1ebd4:	beq	1eb88 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x64>
   1ebd8:	mov	r0, #2
   1ebdc:	str	r0, [r8]
   1ebe0:	mov	r0, r5
   1ebe4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ebe8 <myhtml_collection_create@@Base>:
   1ebe8:	push	{r4, r5, r6, r7, fp, lr}
   1ebec:	add	fp, sp, #16
   1ebf0:	mov	r7, r0
   1ebf4:	mov	r0, #12
   1ebf8:	mov	r4, r1
   1ebfc:	bl	119a8 <mycore_malloc@plt>
   1ec00:	cmp	r0, #0
   1ec04:	beq	1ec44 <myhtml_collection_create@@Base+0x5c>
   1ec08:	mov	r5, #0
   1ec0c:	str	r7, [r0, #4]
   1ec10:	mov	r6, r0
   1ec14:	str	r5, [r0, #8]
   1ec18:	lsl	r0, r7, #2
   1ec1c:	bl	119a8 <mycore_malloc@plt>
   1ec20:	cmp	r0, #0
   1ec24:	str	r0, [r6]
   1ec28:	beq	1ec58 <myhtml_collection_create@@Base+0x70>
   1ec2c:	cmp	r4, #0
   1ec30:	mov	r5, r6
   1ec34:	movne	r0, #0
   1ec38:	strne	r0, [r4]
   1ec3c:	mov	r0, r5
   1ec40:	pop	{r4, r5, r6, r7, fp, pc}
   1ec44:	mov	r5, #0
   1ec48:	cmp	r4, #0
   1ec4c:	bne	1ec68 <myhtml_collection_create@@Base+0x80>
   1ec50:	mov	r0, r5
   1ec54:	pop	{r4, r5, r6, r7, fp, pc}
   1ec58:	mov	r0, r6
   1ec5c:	bl	11a98 <mycore_free@plt>
   1ec60:	cmp	r4, #0
   1ec64:	beq	1ec50 <myhtml_collection_create@@Base+0x68>
   1ec68:	mov	r0, #2
   1ec6c:	str	r0, [r4]
   1ec70:	mov	r0, r5
   1ec74:	pop	{r4, r5, r6, r7, fp, pc}

0001ec78 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1ec78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ec7c:	add	fp, sp, #24
   1ec80:	mov	r6, r2
   1ec84:	ldr	r0, [r0, #28]
   1ec88:	ldr	r2, [fp, #8]
   1ec8c:	mov	r4, r1
   1ec90:	mov	r1, r3
   1ec94:	bl	118e8 <myhtml_tag_get_by_name@plt>
   1ec98:	cmp	r0, #0
   1ec9c:	mov	r5, #0
   1eca0:	cmpne	r6, #0
   1eca4:	bne	1ecb0 <myhtml_get_nodes_by_name_in_scope@@Base+0x38>
   1eca8:	mov	r0, r5
   1ecac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ecb0:	ldr	r8, [fp, #12]
   1ecb4:	ldr	r7, [r0]
   1ecb8:	cmp	r4, #0
   1ecbc:	beq	1ed00 <myhtml_get_nodes_by_name_in_scope@@Base+0x88>
   1ecc0:	ldr	r1, [r6, #20]
   1ecc4:	mov	r0, #0
   1ecc8:	mov	r5, #0
   1eccc:	cmp	r1, #0
   1ecd0:	movne	r0, r1
   1ecd4:	movne	r1, r4
   1ecd8:	movne	r2, r7
   1ecdc:	blne	11960 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1ece0:	ldr	r1, [r4]
   1ece4:	ldr	r2, [r4, #8]
   1ece8:	cmp	r8, #0
   1ecec:	str	r5, [r1, r2, lsl #2]
   1ecf0:	mov	r5, r4
   1ecf4:	strne	r0, [r8]
   1ecf8:	mov	r0, r5
   1ecfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ed00:	mov	r0, #12
   1ed04:	bl	119a8 <mycore_malloc@plt>
   1ed08:	cmp	r0, #0
   1ed0c:	beq	1ed40 <myhtml_get_nodes_by_name_in_scope@@Base+0xc8>
   1ed10:	mov	r4, r0
   1ed14:	mov	r1, #1024	; 0x400
   1ed18:	mov	r0, #0
   1ed1c:	str	r1, [r4, #4]
   1ed20:	str	r0, [r4, #8]
   1ed24:	mov	r0, #4096	; 0x1000
   1ed28:	bl	119a8 <mycore_malloc@plt>
   1ed2c:	cmp	r0, #0
   1ed30:	str	r0, [r4]
   1ed34:	bne	1ecc0 <myhtml_get_nodes_by_name_in_scope@@Base+0x48>
   1ed38:	mov	r0, r4
   1ed3c:	bl	11a98 <mycore_free@plt>
   1ed40:	cmp	r8, #0
   1ed44:	beq	1eca8 <myhtml_get_nodes_by_name_in_scope@@Base+0x30>
   1ed48:	mov	r0, #2
   1ed4c:	str	r0, [r8]
   1ed50:	mov	r0, r5
   1ed54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ed58 <myhtml_get_nodes_by_tag_id@@Base>:
   1ed58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed5c:	add	fp, sp, #28
   1ed60:	sub	sp, sp, #4
   1ed64:	mov	r9, r3
   1ed68:	mov	r6, r2
   1ed6c:	mov	r4, r1
   1ed70:	mov	sl, r0
   1ed74:	cmp	r1, #0
   1ed78:	beq	1ee28 <myhtml_get_nodes_by_tag_id@@Base+0xd0>
   1ed7c:	ldr	r1, [sl, #96]	; 0x60
   1ed80:	cmp	r1, #0
   1ed84:	beq	1ee10 <myhtml_get_nodes_by_tag_id@@Base+0xb8>
   1ed88:	movw	r8, #1026	; 0x402
   1ed8c:	ldr	r0, [r1, #4]
   1ed90:	mov	r5, r1
   1ed94:	cmp	r0, r6
   1ed98:	bne	1ede0 <myhtml_get_nodes_by_tag_id@@Base+0x88>
   1ed9c:	ldmib	r4, {r0, r1}
   1eda0:	add	r2, r1, #1
   1eda4:	cmp	r2, r0
   1eda8:	bcs	1edb4 <myhtml_get_nodes_by_tag_id@@Base+0x5c>
   1edac:	ldr	r0, [r4]
   1edb0:	b	1edd8 <myhtml_get_nodes_by_tag_id@@Base+0x80>
   1edb4:	ldr	r0, [r4]
   1edb8:	add	r7, r1, r8
   1edbc:	lsl	r1, r7, #2
   1edc0:	bl	10d9c <mycore_realloc@plt>
   1edc4:	cmp	r0, #0
   1edc8:	beq	1eeb0 <myhtml_get_nodes_by_tag_id@@Base+0x158>
   1edcc:	stm	r4, {r0, r7}
   1edd0:	ldr	r1, [r4, #8]
   1edd4:	add	r2, r1, #1
   1edd8:	str	r5, [r0, r1, lsl #2]
   1eddc:	str	r2, [r4, #8]
   1ede0:	ldr	r1, [r5, #20]
   1ede4:	cmp	r1, #0
   1ede8:	bne	1ed8c <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1edec:	ldr	r0, [sl, #96]	; 0x60
   1edf0:	cmp	r5, r0
   1edf4:	beq	1ee10 <myhtml_get_nodes_by_tag_id@@Base+0xb8>
   1edf8:	ldr	r1, [r5, #16]
   1edfc:	cmp	r1, #0
   1ee00:	bne	1ed8c <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1ee04:	ldr	r5, [r5, #24]
   1ee08:	cmp	r5, r0
   1ee0c:	bne	1edf8 <myhtml_get_nodes_by_tag_id@@Base+0xa0>
   1ee10:	ldmib	r4, {r0, r1}
   1ee14:	add	r2, r1, #1
   1ee18:	cmp	r2, r0
   1ee1c:	bcs	1ee78 <myhtml_get_nodes_by_tag_id@@Base+0x120>
   1ee20:	ldr	r0, [r4]
   1ee24:	b	1ee9c <myhtml_get_nodes_by_tag_id@@Base+0x144>
   1ee28:	mov	r0, #12
   1ee2c:	bl	119a8 <mycore_malloc@plt>
   1ee30:	cmp	r0, #0
   1ee34:	beq	1eec8 <myhtml_get_nodes_by_tag_id@@Base+0x170>
   1ee38:	mov	r4, r0
   1ee3c:	mov	r1, #1024	; 0x400
   1ee40:	mov	r0, #0
   1ee44:	str	r1, [r4, #4]
   1ee48:	str	r0, [r4, #8]
   1ee4c:	mov	r0, #4096	; 0x1000
   1ee50:	bl	119a8 <mycore_malloc@plt>
   1ee54:	cmp	r0, #0
   1ee58:	str	r0, [r4]
   1ee5c:	bne	1ed7c <myhtml_get_nodes_by_tag_id@@Base+0x24>
   1ee60:	mov	r0, r4
   1ee64:	bl	11a98 <mycore_free@plt>
   1ee68:	mov	r4, #0
   1ee6c:	mov	r0, r4
   1ee70:	sub	sp, fp, #28
   1ee74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee78:	movw	r0, #1026	; 0x402
   1ee7c:	add	r5, r1, r0
   1ee80:	ldr	r0, [r4]
   1ee84:	lsl	r1, r5, #2
   1ee88:	bl	10d9c <mycore_realloc@plt>
   1ee8c:	cmp	r0, #0
   1ee90:	beq	1eeb0 <myhtml_get_nodes_by_tag_id@@Base+0x158>
   1ee94:	stm	r4, {r0, r5}
   1ee98:	ldr	r1, [r4, #8]
   1ee9c:	mov	r2, #0
   1eea0:	str	r2, [r0, r1, lsl #2]
   1eea4:	mov	r0, r4
   1eea8:	sub	sp, fp, #28
   1eeac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eeb0:	cmp	r9, #0
   1eeb4:	movne	r0, #2
   1eeb8:	strne	r0, [r9]
   1eebc:	mov	r0, r4
   1eec0:	sub	sp, fp, #28
   1eec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eec8:	mov	r4, #0
   1eecc:	mov	r0, r4
   1eed0:	sub	sp, fp, #28
   1eed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001eed8 <myhtml_get_nodes_by_name@@Base>:
   1eed8:	push	{r4, r5, fp, lr}
   1eedc:	add	fp, sp, #8
   1eee0:	mov	r5, r0
   1eee4:	ldr	r0, [r0, #28]
   1eee8:	mov	r4, r1
   1eeec:	mov	r1, r2
   1eef0:	mov	r2, r3
   1eef4:	bl	118e8 <myhtml_tag_get_by_name@plt>
   1eef8:	cmp	r0, #0
   1eefc:	beq	1ef18 <myhtml_get_nodes_by_name@@Base+0x40>
   1ef00:	ldr	r2, [r0]
   1ef04:	ldr	r3, [fp, #8]
   1ef08:	mov	r0, r5
   1ef0c:	mov	r1, r4
   1ef10:	pop	{r4, r5, fp, lr}
   1ef14:	b	1ed58 <myhtml_get_nodes_by_tag_id@@Base>
   1ef18:	mov	r0, #0
   1ef1c:	pop	{r4, r5, fp, pc}

0001ef20 <myhtml_node_first@@Base>:
   1ef20:	ldr	r1, [r0, #84]	; 0x54
   1ef24:	ldr	r0, [r0, #88]	; 0x58
   1ef28:	cmp	r0, #0
   1ef2c:	beq	1ef50 <myhtml_node_first@@Base+0x30>
   1ef30:	mov	r0, #0
   1ef34:	cmp	r1, #0
   1ef38:	beq	1ef64 <myhtml_node_first@@Base+0x44>
   1ef3c:	ldr	r1, [r1, #20]
   1ef40:	cmp	r1, #0
   1ef44:	bxeq	lr
   1ef48:	ldr	r0, [r1, #20]
   1ef4c:	bx	lr
   1ef50:	cmp	r1, #0
   1ef54:	beq	1ef60 <myhtml_node_first@@Base+0x40>
   1ef58:	ldr	r0, [r1, #20]
   1ef5c:	bx	lr
   1ef60:	mov	r0, #0
   1ef64:	bx	lr

0001ef68 <myhtml_node_next@@Base>:
   1ef68:	ldr	r0, [r0, #16]
   1ef6c:	bx	lr

0001ef70 <myhtml_node_prev@@Base>:
   1ef70:	ldr	r0, [r0, #12]
   1ef74:	bx	lr

0001ef78 <myhtml_node_parent@@Base>:
   1ef78:	ldr	r0, [r0, #24]
   1ef7c:	bx	lr

0001ef80 <myhtml_node_child@@Base>:
   1ef80:	ldr	r0, [r0, #20]
   1ef84:	bx	lr

0001ef88 <myhtml_node_last_child@@Base>:
   1ef88:	ldr	r0, [r0, #28]
   1ef8c:	bx	lr

0001ef90 <myhtml_node_create@@Base>:
   1ef90:	push	{r4, r5, fp, lr}
   1ef94:	add	fp, sp, #8
   1ef98:	mov	r4, r2
   1ef9c:	mov	r5, r1
   1efa0:	bl	110a8 <myhtml_tree_node_create@plt>
   1efa4:	str	r5, [r0, #4]
   1efa8:	str	r4, [r0, #8]
   1efac:	pop	{r4, r5, fp, pc}

0001efb0 <myhtml_node_remove@@Base>:
   1efb0:	b	11abc <myhtml_tree_node_remove@plt>

0001efb4 <myhtml_node_delete@@Base>:
   1efb4:	b	11a8c <myhtml_tree_node_delete@plt>

0001efb8 <myhtml_node_delete_recursive@@Base>:
   1efb8:	b	110b4 <myhtml_tree_node_delete_recursive@plt>

0001efbc <myhtml_node_free@@Base>:
   1efbc:	b	119e4 <myhtml_tree_node_free@plt>

0001efc0 <myhtml_node_insert_before@@Base>:
   1efc0:	push	{r4, sl, fp, lr}
   1efc4:	add	fp, sp, #8
   1efc8:	mov	r4, r1
   1efcc:	mov	r1, r0
   1efd0:	mov	r0, #0
   1efd4:	cmp	r1, #0
   1efd8:	cmpne	r4, #0
   1efdc:	bne	1efe4 <myhtml_node_insert_before@@Base+0x24>
   1efe0:	pop	{r4, sl, fp, pc}
   1efe4:	mov	r0, r1
   1efe8:	mov	r1, r4
   1efec:	bl	11360 <myhtml_tree_node_insert_before@plt>
   1eff0:	mov	r0, r4
   1eff4:	pop	{r4, sl, fp, pc}

0001eff8 <myhtml_node_insert_after@@Base>:
   1eff8:	push	{r4, sl, fp, lr}
   1effc:	add	fp, sp, #8
   1f000:	mov	r4, r1
   1f004:	mov	r1, r0
   1f008:	mov	r0, #0
   1f00c:	cmp	r1, #0
   1f010:	cmpne	r4, #0
   1f014:	bne	1f01c <myhtml_node_insert_after@@Base+0x24>
   1f018:	pop	{r4, sl, fp, pc}
   1f01c:	mov	r0, r1
   1f020:	mov	r1, r4
   1f024:	bl	11300 <myhtml_tree_node_insert_after@plt>
   1f028:	mov	r0, r4
   1f02c:	pop	{r4, sl, fp, pc}

0001f030 <myhtml_node_append_child@@Base>:
   1f030:	push	{r4, sl, fp, lr}
   1f034:	add	fp, sp, #8
   1f038:	mov	r4, r1
   1f03c:	mov	r1, r0
   1f040:	mov	r0, #0
   1f044:	cmp	r1, #0
   1f048:	cmpne	r4, #0
   1f04c:	bne	1f054 <myhtml_node_append_child@@Base+0x24>
   1f050:	pop	{r4, sl, fp, pc}
   1f054:	mov	r0, r1
   1f058:	mov	r1, r4
   1f05c:	bl	11588 <myhtml_tree_node_add_child@plt>
   1f060:	mov	r0, r4
   1f064:	pop	{r4, sl, fp, pc}

0001f068 <myhtml_node_insert_to_appropriate_place@@Base>:
   1f068:	push	{r4, sl, fp, lr}
   1f06c:	add	fp, sp, #8
   1f070:	sub	sp, sp, #8
   1f074:	mov	r4, r1
   1f078:	cmp	r0, #0
   1f07c:	mov	r1, #0
   1f080:	cmpne	r4, #0
   1f084:	bne	1f094 <myhtml_node_insert_to_appropriate_place@@Base+0x2c>
   1f088:	mov	r0, r1
   1f08c:	sub	sp, fp, #8
   1f090:	pop	{r4, sl, fp, pc}
   1f094:	ldr	r1, [r0, #40]	; 0x28
   1f098:	mov	r2, #1
   1f09c:	strb	r2, [r1, #188]	; 0xbc
   1f0a0:	add	r1, sp, #4
   1f0a4:	bl	11804 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1f0a8:	ldr	r1, [r0, #40]	; 0x28
   1f0ac:	mov	r2, #0
   1f0b0:	strb	r2, [r1, #188]	; 0xbc
   1f0b4:	mov	r1, r4
   1f0b8:	ldr	r2, [sp, #4]
   1f0bc:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   1f0c0:	mov	r1, r4
   1f0c4:	mov	r0, r1
   1f0c8:	sub	sp, fp, #8
   1f0cc:	pop	{r4, sl, fp, pc}

0001f0d0 <myhtml_node_text_set@@Base>:
   1f0d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f0d4:	add	fp, sp, #24
   1f0d8:	mov	r7, #0
   1f0dc:	cmp	r0, #0
   1f0e0:	beq	1f1e0 <myhtml_node_text_set@@Base+0x110>
   1f0e4:	mov	r6, r3
   1f0e8:	cmp	r3, #41	; 0x29
   1f0ec:	bhi	1f1e0 <myhtml_node_text_set@@Base+0x110>
   1f0f0:	mov	r4, r0
   1f0f4:	ldr	r0, [r0, #32]
   1f0f8:	mov	r9, r2
   1f0fc:	mov	r8, r1
   1f100:	ldr	r5, [r4, #40]	; 0x28
   1f104:	cmp	r0, #0
   1f108:	beq	1f150 <myhtml_node_text_set@@Base+0x80>
   1f10c:	mov	r7, r0
   1f110:	ldr	r2, [r7, #4]!
   1f114:	cmp	r2, #0
   1f118:	beq	1f184 <myhtml_node_text_set@@Base+0xb4>
   1f11c:	ldr	r1, [r0, #8]
   1f120:	cmp	r1, r9
   1f124:	bcs	1f19c <myhtml_node_text_set@@Base+0xcc>
   1f128:	ldr	r1, [r0, #20]
   1f12c:	ldr	r0, [r5, #4]
   1f130:	bl	115c4 <mchar_async_free@plt>
   1f134:	ldr	r2, [r4, #32]
   1f138:	ldr	r0, [r5, #4]
   1f13c:	ldr	r1, [r5, #52]	; 0x34
   1f140:	mov	r3, r9
   1f144:	add	r2, r2, #4
   1f148:	bl	114f8 <mycore_string_init@plt>
   1f14c:	b	1f1a4 <myhtml_node_text_set@@Base+0xd4>
   1f150:	ldr	r0, [r5, #8]
   1f154:	ldr	r1, [r5, #40]	; 0x28
   1f158:	bl	117e0 <myhtml_token_node_create@plt>
   1f15c:	cmp	r0, #0
   1f160:	str	r0, [r4, #32]
   1f164:	beq	1f1e0 <myhtml_node_text_set@@Base+0x110>
   1f168:	ldr	r1, [r0, #48]	; 0x30
   1f16c:	orr	r1, r1, #4
   1f170:	str	r1, [r0, #48]	; 0x30
   1f174:	mov	r7, r0
   1f178:	ldr	r2, [r7, #4]!
   1f17c:	cmp	r2, #0
   1f180:	bne	1f11c <myhtml_node_text_set@@Base+0x4c>
   1f184:	ldr	r0, [r5, #4]
   1f188:	ldr	r1, [r5, #52]	; 0x34
   1f18c:	add	r3, r9, #2
   1f190:	mov	r2, r7
   1f194:	bl	114f8 <mycore_string_init@plt>
   1f198:	b	1f1a4 <myhtml_node_text_set@@Base+0xd4>
   1f19c:	mov	r1, #0
   1f1a0:	str	r1, [r0, #12]
   1f1a4:	ldr	r0, [r4, #32]
   1f1a8:	mov	r1, r8
   1f1ac:	mov	r2, r9
   1f1b0:	cmp	r6, #0
   1f1b4:	add	r0, r0, #4
   1f1b8:	beq	1f1c8 <myhtml_node_text_set@@Base+0xf8>
   1f1bc:	mov	r3, r6
   1f1c0:	bl	113b4 <myencoding_string_append@plt>
   1f1c4:	b	1f1cc <myhtml_node_text_set@@Base+0xfc>
   1f1c8:	bl	116f0 <mycore_string_append@plt>
   1f1cc:	ldr	r0, [r4, #32]
   1f1d0:	mov	r1, #0
   1f1d4:	add	r7, r0, #4
   1f1d8:	str	r1, [r0, #24]
   1f1dc:	str	r1, [r0, #28]
   1f1e0:	mov	r0, r7
   1f1e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001f1e8 <myhtml_node_text_set_with_charef@@Base>:
   1f1e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f1ec:	add	fp, sp, #24
   1f1f0:	sub	sp, sp, #64	; 0x40
   1f1f4:	mov	r6, #0
   1f1f8:	cmp	r0, #0
   1f1fc:	beq	1f314 <myhtml_node_text_set_with_charef@@Base+0x12c>
   1f200:	mov	r7, r3
   1f204:	cmp	r3, #41	; 0x29
   1f208:	bhi	1f314 <myhtml_node_text_set_with_charef@@Base+0x12c>
   1f20c:	mov	r4, r0
   1f210:	ldr	r0, [r0, #32]
   1f214:	mov	r9, r2
   1f218:	mov	r8, r1
   1f21c:	ldr	r5, [r4, #40]	; 0x28
   1f220:	cmp	r0, #0
   1f224:	beq	1f26c <myhtml_node_text_set_with_charef@@Base+0x84>
   1f228:	mov	r6, r0
   1f22c:	ldr	r2, [r6, #4]!
   1f230:	cmp	r2, #0
   1f234:	beq	1f2a0 <myhtml_node_text_set_with_charef@@Base+0xb8>
   1f238:	ldr	r1, [r0, #8]
   1f23c:	cmp	r1, r9
   1f240:	bcs	1f2b8 <myhtml_node_text_set_with_charef@@Base+0xd0>
   1f244:	ldr	r1, [r0, #20]
   1f248:	ldr	r0, [r5, #4]
   1f24c:	bl	115c4 <mchar_async_free@plt>
   1f250:	ldr	r2, [r4, #32]
   1f254:	ldr	r0, [r5, #4]
   1f258:	ldr	r1, [r5, #52]	; 0x34
   1f25c:	mov	r3, r9
   1f260:	add	r2, r2, #4
   1f264:	bl	114f8 <mycore_string_init@plt>
   1f268:	b	1f2c0 <myhtml_node_text_set_with_charef@@Base+0xd8>
   1f26c:	ldr	r0, [r5, #8]
   1f270:	ldr	r1, [r5, #40]	; 0x28
   1f274:	bl	117e0 <myhtml_token_node_create@plt>
   1f278:	cmp	r0, #0
   1f27c:	str	r0, [r4, #32]
   1f280:	beq	1f314 <myhtml_node_text_set_with_charef@@Base+0x12c>
   1f284:	ldr	r1, [r0, #48]	; 0x30
   1f288:	orr	r1, r1, #4
   1f28c:	str	r1, [r0, #48]	; 0x30
   1f290:	mov	r6, r0
   1f294:	ldr	r2, [r6, #4]!
   1f298:	cmp	r2, #0
   1f29c:	bne	1f238 <myhtml_node_text_set_with_charef@@Base+0x50>
   1f2a0:	ldr	r0, [r5, #4]
   1f2a4:	ldr	r1, [r5, #52]	; 0x34
   1f2a8:	add	r3, r9, #2
   1f2ac:	mov	r2, r6
   1f2b0:	bl	114f8 <mycore_string_init@plt>
   1f2b4:	b	1f2c0 <myhtml_node_text_set_with_charef@@Base+0xd8>
   1f2b8:	mov	r1, #0
   1f2bc:	str	r1, [r0, #12]
   1f2c0:	mov	r6, sp
   1f2c4:	mov	r0, r6
   1f2c8:	bl	11438 <myhtml_data_process_entry_clean@plt>
   1f2cc:	add	r0, r6, #8
   1f2d0:	str	r7, [sp, #4]
   1f2d4:	bl	111f8 <myencoding_result_clean@plt>
   1f2d8:	ldr	r0, [r4, #32]
   1f2dc:	mov	r2, r8
   1f2e0:	mov	r3, r9
   1f2e4:	add	r1, r0, #4
   1f2e8:	mov	r0, r6
   1f2ec:	bl	115f4 <myhtml_data_process@plt>
   1f2f0:	ldr	r0, [r4, #32]
   1f2f4:	add	r1, r0, #4
   1f2f8:	mov	r0, r6
   1f2fc:	bl	11744 <myhtml_data_process_end@plt>
   1f300:	ldr	r0, [r4, #32]
   1f304:	mov	r1, #0
   1f308:	add	r6, r0, #4
   1f30c:	str	r1, [r0, #24]
   1f310:	str	r1, [r0, #28]
   1f314:	mov	r0, r6
   1f318:	sub	sp, fp, #24
   1f31c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001f320 <myhtml_node_token@@Base>:
   1f320:	ldr	r0, [r0, #32]
   1f324:	bx	lr

0001f328 <myhtml_node_namespace@@Base>:
   1f328:	ldr	r0, [r0, #8]
   1f32c:	bx	lr

0001f330 <myhtml_node_namespace_set@@Base>:
   1f330:	str	r1, [r0, #8]
   1f334:	bx	lr

0001f338 <myhtml_node_tag_id@@Base>:
   1f338:	ldr	r0, [r0, #4]
   1f33c:	bx	lr

0001f340 <myhtml_tag_name_by_id@@Base>:
   1f340:	push	{r4, r5, fp, lr}
   1f344:	add	fp, sp, #8
   1f348:	cmp	r2, #0
   1f34c:	mov	r4, r2
   1f350:	mov	r5, #0
   1f354:	movne	r2, #0
   1f358:	strne	r2, [r4]
   1f35c:	cmp	r0, #0
   1f360:	beq	1f38c <myhtml_tag_name_by_id@@Base+0x4c>
   1f364:	ldr	r0, [r0, #28]
   1f368:	cmp	r0, #0
   1f36c:	beq	1f38c <myhtml_tag_name_by_id@@Base+0x4c>
   1f370:	bl	117f8 <myhtml_tag_get_by_id@plt>
   1f374:	cmp	r0, #0
   1f378:	beq	1f38c <myhtml_tag_name_by_id@@Base+0x4c>
   1f37c:	cmp	r4, #0
   1f380:	ldrne	r1, [r0, #8]
   1f384:	strne	r1, [r4]
   1f388:	ldr	r5, [r0, #4]
   1f38c:	mov	r0, r5
   1f390:	pop	{r4, r5, fp, pc}

0001f394 <myhtml_tag_id_by_name@@Base>:
   1f394:	push	{r4, sl, fp, lr}
   1f398:	add	fp, sp, #8
   1f39c:	mov	r4, #0
   1f3a0:	cmp	r0, #0
   1f3a4:	beq	1f3c0 <myhtml_tag_id_by_name@@Base+0x2c>
   1f3a8:	ldr	r0, [r0, #28]
   1f3ac:	cmp	r0, #0
   1f3b0:	beq	1f3c0 <myhtml_tag_id_by_name@@Base+0x2c>
   1f3b4:	bl	118e8 <myhtml_tag_get_by_name@plt>
   1f3b8:	cmp	r0, #0
   1f3bc:	ldrne	r4, [r0]
   1f3c0:	mov	r0, r4
   1f3c4:	pop	{r4, sl, fp, pc}

0001f3c8 <myhtml_node_is_close_self@@Base>:
   1f3c8:	ldr	r0, [r0, #32]
   1f3cc:	cmp	r0, #0
   1f3d0:	moveq	r0, #0
   1f3d4:	ldrne	r0, [r0, #48]	; 0x30
   1f3d8:	ubfxne	r0, r0, #1, #1
   1f3dc:	bx	lr

0001f3e0 <myhtml_node_is_void_element@@Base>:
   1f3e0:	ldr	r0, [r0, #4]
   1f3e4:	sub	r1, r0, #10
   1f3e8:	cmp	r1, #132	; 0x84
   1f3ec:	bhi	1f618 <myhtml_node_is_void_element@@Base+0x238>
   1f3f0:	add	r2, pc, #8
   1f3f4:	mov	r0, #1
   1f3f8:	ldr	r1, [r2, r1, lsl #2]
   1f3fc:	add	pc, r2, r1
   1f400:	andeq	r0, r0, r4, lsl r2
   1f404:	andeq	r0, r0, r8, lsl r2
   1f408:	andeq	r0, r0, r8, lsl r2
   1f40c:	andeq	r0, r0, r8, lsl r2
   1f410:	andeq	r0, r0, r8, lsl r2
   1f414:	andeq	r0, r0, r4, lsl r2
   1f418:	andeq	r0, r0, r8, lsl r2
   1f41c:	andeq	r0, r0, r8, lsl r2
   1f420:	andeq	r0, r0, r8, lsl r2
   1f424:	andeq	r0, r0, r8, lsl r2
   1f428:	andeq	r0, r0, r8, lsl r2
   1f42c:	andeq	r0, r0, r8, lsl r2
   1f430:	andeq	r0, r0, r8, lsl r2
   1f434:	andeq	r0, r0, r8, lsl r2
   1f438:	andeq	r0, r0, r4, lsl r2
   1f43c:	andeq	r0, r0, r8, lsl r2
   1f440:	andeq	r0, r0, r8, lsl r2
   1f444:	andeq	r0, r0, r8, lsl r2
   1f448:	andeq	r0, r0, r8, lsl r2
   1f44c:	andeq	r0, r0, r8, lsl r2
   1f450:	andeq	r0, r0, r8, lsl r2
   1f454:	andeq	r0, r0, r4, lsl r2
   1f458:	andeq	r0, r0, r8, lsl r2
   1f45c:	andeq	r0, r0, r4, lsl r2
   1f460:	andeq	r0, r0, r8, lsl r2
   1f464:	andeq	r0, r0, r8, lsl r2
   1f468:	andeq	r0, r0, r8, lsl r2
   1f46c:	andeq	r0, r0, r8, lsl r2
   1f470:	andeq	r0, r0, r8, lsl r2
   1f474:	andeq	r0, r0, r8, lsl r2
   1f478:	andeq	r0, r0, r8, lsl r2
   1f47c:	andeq	r0, r0, r8, lsl r2
   1f480:	andeq	r0, r0, r8, lsl r2
   1f484:	andeq	r0, r0, r8, lsl r2
   1f488:	andeq	r0, r0, r8, lsl r2
   1f48c:	andeq	r0, r0, r8, lsl r2
   1f490:	andeq	r0, r0, r4, lsl r2
   1f494:	andeq	r0, r0, r8, lsl r2
   1f498:	andeq	r0, r0, r8, lsl r2
   1f49c:	andeq	r0, r0, r8, lsl r2
   1f4a0:	andeq	r0, r0, r8, lsl r2
   1f4a4:	andeq	r0, r0, r8, lsl r2
   1f4a8:	andeq	r0, r0, r8, lsl r2
   1f4ac:	andeq	r0, r0, r8, lsl r2
   1f4b0:	andeq	r0, r0, r8, lsl r2
   1f4b4:	andeq	r0, r0, r8, lsl r2
   1f4b8:	andeq	r0, r0, r8, lsl r2
   1f4bc:	andeq	r0, r0, r8, lsl r2
   1f4c0:	andeq	r0, r0, r8, lsl r2
   1f4c4:	andeq	r0, r0, r8, lsl r2
   1f4c8:	andeq	r0, r0, r8, lsl r2
   1f4cc:	andeq	r0, r0, r8, lsl r2
   1f4d0:	andeq	r0, r0, r8, lsl r2
   1f4d4:	andeq	r0, r0, r8, lsl r2
   1f4d8:	andeq	r0, r0, r4, lsl r2
   1f4dc:	andeq	r0, r0, r8, lsl r2
   1f4e0:	andeq	r0, r0, r8, lsl r2
   1f4e4:	andeq	r0, r0, r8, lsl r2
   1f4e8:	andeq	r0, r0, r8, lsl r2
   1f4ec:	andeq	r0, r0, r4, lsl r2
   1f4f0:	andeq	r0, r0, r4, lsl r2
   1f4f4:	andeq	r0, r0, r8, lsl r2
   1f4f8:	andeq	r0, r0, r8, lsl r2
   1f4fc:	andeq	r0, r0, r8, lsl r2
   1f500:	andeq	r0, r0, r4, lsl r2
   1f504:	andeq	r0, r0, r8, lsl r2
   1f508:	andeq	r0, r0, r8, lsl r2
   1f50c:	andeq	r0, r0, r8, lsl r2
   1f510:	andeq	r0, r0, r4, lsl r2
   1f514:	andeq	r0, r0, r8, lsl r2
   1f518:	andeq	r0, r0, r8, lsl r2
   1f51c:	andeq	r0, r0, r8, lsl r2
   1f520:	andeq	r0, r0, r8, lsl r2
   1f524:	andeq	r0, r0, r8, lsl r2
   1f528:	andeq	r0, r0, r8, lsl r2
   1f52c:	andeq	r0, r0, r8, lsl r2
   1f530:	andeq	r0, r0, r4, lsl r2
   1f534:	andeq	r0, r0, r8, lsl r2
   1f538:	andeq	r0, r0, r8, lsl r2
   1f53c:	andeq	r0, r0, r8, lsl r2
   1f540:	andeq	r0, r0, r8, lsl r2
   1f544:	andeq	r0, r0, r8, lsl r2
   1f548:	andeq	r0, r0, r8, lsl r2
   1f54c:	andeq	r0, r0, r8, lsl r2
   1f550:	andeq	r0, r0, r8, lsl r2
   1f554:	andeq	r0, r0, r8, lsl r2
   1f558:	andeq	r0, r0, r8, lsl r2
   1f55c:	andeq	r0, r0, r8, lsl r2
   1f560:	andeq	r0, r0, r8, lsl r2
   1f564:	andeq	r0, r0, r8, lsl r2
   1f568:	andeq	r0, r0, r4, lsl r2
   1f56c:	andeq	r0, r0, r8, lsl r2
   1f570:	andeq	r0, r0, r8, lsl r2
   1f574:	andeq	r0, r0, r8, lsl r2
   1f578:	andeq	r0, r0, r8, lsl r2
   1f57c:	andeq	r0, r0, r8, lsl r2
   1f580:	andeq	r0, r0, r8, lsl r2
   1f584:	andeq	r0, r0, r8, lsl r2
   1f588:	andeq	r0, r0, r8, lsl r2
   1f58c:	andeq	r0, r0, r8, lsl r2
   1f590:	andeq	r0, r0, r8, lsl r2
   1f594:	andeq	r0, r0, r8, lsl r2
   1f598:	andeq	r0, r0, r8, lsl r2
   1f59c:	andeq	r0, r0, r8, lsl r2
   1f5a0:	andeq	r0, r0, r8, lsl r2
   1f5a4:	andeq	r0, r0, r8, lsl r2
   1f5a8:	andeq	r0, r0, r4, lsl r2
   1f5ac:	andeq	r0, r0, r8, lsl r2
   1f5b0:	andeq	r0, r0, r8, lsl r2
   1f5b4:	andeq	r0, r0, r8, lsl r2
   1f5b8:	andeq	r0, r0, r8, lsl r2
   1f5bc:	andeq	r0, r0, r8, lsl r2
   1f5c0:	andeq	r0, r0, r8, lsl r2
   1f5c4:	andeq	r0, r0, r8, lsl r2
   1f5c8:	andeq	r0, r0, r8, lsl r2
   1f5cc:	andeq	r0, r0, r8, lsl r2
   1f5d0:	andeq	r0, r0, r8, lsl r2
   1f5d4:	andeq	r0, r0, r8, lsl r2
   1f5d8:	andeq	r0, r0, r8, lsl r2
   1f5dc:	andeq	r0, r0, r8, lsl r2
   1f5e0:	andeq	r0, r0, r8, lsl r2
   1f5e4:	andeq	r0, r0, r8, lsl r2
   1f5e8:	andeq	r0, r0, r8, lsl r2
   1f5ec:	andeq	r0, r0, r8, lsl r2
   1f5f0:	andeq	r0, r0, r8, lsl r2
   1f5f4:	andeq	r0, r0, r8, lsl r2
   1f5f8:	andeq	r0, r0, r4, lsl r2
   1f5fc:	andeq	r0, r0, r8, lsl r2
   1f600:	andeq	r0, r0, r8, lsl r2
   1f604:	andeq	r0, r0, r8, lsl r2
   1f608:	andeq	r0, r0, r8, lsl r2
   1f60c:	andeq	r0, r0, r8, lsl r2
   1f610:	andeq	r0, r0, r4, lsl r2
   1f614:	bx	lr
   1f618:	mov	r0, #0
   1f61c:	bx	lr

0001f620 <myhtml_node_attribute_first@@Base>:
   1f620:	ldr	r0, [r0, #32]
   1f624:	cmp	r0, #0
   1f628:	ldrne	r0, [r0, #40]	; 0x28
   1f62c:	moveq	r0, #0
   1f630:	bx	lr

0001f634 <myhtml_node_attribute_last@@Base>:
   1f634:	ldr	r0, [r0, #32]
   1f638:	cmp	r0, #0
   1f63c:	ldrne	r0, [r0, #44]	; 0x2c
   1f640:	moveq	r0, #0
   1f644:	bx	lr

0001f648 <myhtml_node_text@@Base>:
   1f648:	ldr	r0, [r0, #32]
   1f64c:	cmp	r0, #0
   1f650:	beq	1f67c <myhtml_node_text@@Base+0x34>
   1f654:	ldr	r2, [r0, #12]
   1f658:	cmp	r2, #0
   1f65c:	beq	1f67c <myhtml_node_text@@Base+0x34>
   1f660:	ldr	r0, [r0, #4]
   1f664:	cmp	r0, #0
   1f668:	beq	1f67c <myhtml_node_text@@Base+0x34>
   1f66c:	cmp	r1, #0
   1f670:	strne	r2, [r1]
   1f674:	bxne	lr
   1f678:	bx	lr
   1f67c:	mov	r0, #0
   1f680:	cmp	r1, #0
   1f684:	strne	r0, [r1]
   1f688:	bx	lr

0001f68c <myhtml_node_string@@Base>:
   1f68c:	cmp	r0, #0
   1f690:	moveq	r0, #0
   1f694:	bxeq	lr
   1f698:	ldr	r0, [r0, #32]
   1f69c:	cmp	r0, #0
   1f6a0:	addne	r0, r0, #4
   1f6a4:	bx	lr

0001f6a8 <myhtml_node_raw_position@@Base>:
   1f6a8:	cmp	r1, #0
   1f6ac:	beq	1f6d0 <myhtml_node_raw_position@@Base+0x28>
   1f6b0:	ldr	r1, [r1, #32]
   1f6b4:	cmp	r1, #0
   1f6b8:	beq	1f6d0 <myhtml_node_raw_position@@Base+0x28>
   1f6bc:	ldr	r2, [r1, #24]
   1f6c0:	ldr	r1, [r1, #28]
   1f6c4:	str	r2, [r0]
   1f6c8:	str	r1, [r0, #4]
   1f6cc:	bx	lr
   1f6d0:	mov	r1, #0
   1f6d4:	str	r1, [r0]
   1f6d8:	str	r1, [r0, #4]
   1f6dc:	bx	lr

0001f6e0 <myhtml_node_element_position@@Base>:
   1f6e0:	cmp	r1, #0
   1f6e4:	beq	1f708 <myhtml_node_element_position@@Base+0x28>
   1f6e8:	ldr	r1, [r1, #32]
   1f6ec:	cmp	r1, #0
   1f6f0:	beq	1f708 <myhtml_node_element_position@@Base+0x28>
   1f6f4:	ldr	r2, [r1, #32]
   1f6f8:	ldr	r1, [r1, #36]	; 0x24
   1f6fc:	str	r2, [r0]
   1f700:	str	r1, [r0, #4]
   1f704:	bx	lr
   1f708:	mov	r1, #0
   1f70c:	str	r1, [r0]
   1f710:	str	r1, [r0, #4]
   1f714:	bx	lr

0001f718 <myhtml_node_set_data@@Base>:
   1f718:	str	r1, [r0, #36]	; 0x24
   1f71c:	bx	lr

0001f720 <myhtml_node_get_data@@Base>:
   1f720:	ldr	r0, [r0, #36]	; 0x24
   1f724:	bx	lr

0001f728 <myhtml_node_tree@@Base>:
   1f728:	ldr	r0, [r0, #40]	; 0x28
   1f72c:	bx	lr

0001f730 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1f730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f734:	add	fp, sp, #28
   1f738:	sub	sp, sp, #4
   1f73c:	mov	r4, r0
   1f740:	mov	r0, #0
   1f744:	cmp	r4, #0
   1f748:	beq	1f824 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xf4>
   1f74c:	mov	r5, r3
   1f750:	mov	r6, r2
   1f754:	mov	r7, r1
   1f758:	mov	r0, r4
   1f75c:	mov	sl, r0
   1f760:	ldr	r0, [r0, #32]
   1f764:	cmp	r0, #0
   1f768:	beq	1f7fc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1f76c:	ldr	r8, [r0, #40]	; 0x28
   1f770:	cmp	r8, #0
   1f774:	bne	1f788 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x58>
   1f778:	b	1f7fc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1f77c:	ldr	r8, [r8]
   1f780:	cmp	r8, #0
   1f784:	beq	1f7fc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1f788:	ldr	r0, [r8, #16]
   1f78c:	cmp	r0, r5
   1f790:	bne	1f77c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1f794:	ldr	r0, [r8, #8]
   1f798:	mov	r1, r6
   1f79c:	mov	r2, r5
   1f7a0:	bl	11288 <mycore_strncasecmp@plt>
   1f7a4:	cmp	r0, #0
   1f7a8:	bne	1f77c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1f7ac:	ldr	r0, [r7, #8]
   1f7b0:	ldr	r1, [r7]
   1f7b4:	add	r2, r0, #1
   1f7b8:	str	sl, [r1, r0, lsl #2]
   1f7bc:	str	r2, [r7, #8]
   1f7c0:	ldr	r1, [r7, #4]
   1f7c4:	cmp	r2, r1
   1f7c8:	movwcs	r2, #1025	; 0x401
   1f7cc:	addcs	r2, r0, r2
   1f7d0:	cmpcs	r2, r1
   1f7d4:	bcc	1f77c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1f7d8:	movw	r1, #1026	; 0x402
   1f7dc:	add	r9, r0, r1
   1f7e0:	ldr	r0, [r7]
   1f7e4:	lsl	r1, r9, #2
   1f7e8:	bl	10d9c <mycore_realloc@plt>
   1f7ec:	cmp	r0, #0
   1f7f0:	beq	1f82c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xfc>
   1f7f4:	stm	r7, {r0, r9}
   1f7f8:	b	1f77c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1f7fc:	ldr	r0, [sl, #20]
   1f800:	cmp	r0, #0
   1f804:	bne	1f75c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x2c>
   1f808:	ldr	r0, [sl, #16]
   1f80c:	cmp	r0, #0
   1f810:	bne	1f75c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x2c>
   1f814:	ldr	sl, [sl, #24]
   1f818:	cmp	sl, r4
   1f81c:	bne	1f808 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd8>
   1f820:	mov	r0, #0
   1f824:	sub	sp, fp, #28
   1f828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f82c:	mov	r0, #2
   1f830:	sub	sp, fp, #28
   1f834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f838 <myhtml_get_nodes_by_attribute_key@@Base>:
   1f838:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f83c:	add	fp, sp, #24
   1f840:	ldr	r9, [fp, #12]
   1f844:	mov	r5, r3
   1f848:	mov	r6, r2
   1f84c:	mov	r4, r1
   1f850:	mov	r8, r0
   1f854:	cmp	r1, #0
   1f858:	beq	1f890 <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1f85c:	cmp	r6, #0
   1f860:	ldr	r3, [fp, #8]
   1f864:	mov	r1, r4
   1f868:	mov	r2, r5
   1f86c:	ldreq	r6, [r8, #96]	; 0x60
   1f870:	mov	r0, r6
   1f874:	bl	10fb8 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1f878:	cmp	r9, #0
   1f87c:	mov	r7, r4
   1f880:	cmpne	r0, #0
   1f884:	strne	r0, [r9]
   1f888:	mov	r0, r7
   1f88c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f890:	mov	r0, #12
   1f894:	bl	119a8 <mycore_malloc@plt>
   1f898:	cmp	r0, #0
   1f89c:	beq	1f8d4 <myhtml_get_nodes_by_attribute_key@@Base+0x9c>
   1f8a0:	mov	r4, r0
   1f8a4:	mov	r0, #1024	; 0x400
   1f8a8:	mov	r7, #0
   1f8ac:	stmib	r4, {r0, r7}
   1f8b0:	mov	r0, #4096	; 0x1000
   1f8b4:	bl	119a8 <mycore_malloc@plt>
   1f8b8:	cmp	r0, #0
   1f8bc:	str	r0, [r4]
   1f8c0:	beq	1f8f0 <myhtml_get_nodes_by_attribute_key@@Base+0xb8>
   1f8c4:	cmp	r9, #0
   1f8c8:	movne	r0, #0
   1f8cc:	strne	r0, [r9]
   1f8d0:	b	1f85c <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1f8d4:	mov	r7, #0
   1f8d8:	cmp	r9, #0
   1f8dc:	beq	1f888 <myhtml_get_nodes_by_attribute_key@@Base+0x50>
   1f8e0:	mov	r0, #2
   1f8e4:	str	r0, [r9]
   1f8e8:	mov	r0, r7
   1f8ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f8f0:	mov	r0, r4
   1f8f4:	bl	11a98 <mycore_free@plt>
   1f8f8:	cmp	r9, #0
   1f8fc:	bne	1f8e0 <myhtml_get_nodes_by_attribute_key@@Base+0xa8>
   1f900:	b	1f888 <myhtml_get_nodes_by_attribute_key@@Base+0x50>

0001f904 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1f904:	push	{fp, lr}
   1f908:	mov	fp, sp
   1f90c:	ldr	ip, [r0, #8]
   1f910:	mov	r3, r0
   1f914:	mov	r0, #0
   1f918:	cmp	ip, r2
   1f91c:	popne	{fp, pc}
   1f920:	ldr	r0, [r3]
   1f924:	bl	11b64 <mycore_strncmp@plt>
   1f928:	clz	r0, r0
   1f92c:	lsr	r0, r0, #5
   1f930:	pop	{fp, pc}

0001f934 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1f934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f938:	add	fp, sp, #28
   1f93c:	sub	sp, sp, #4
   1f940:	mov	r6, r0
   1f944:	ldr	r0, [r0, #8]
   1f948:	cmp	r0, r2
   1f94c:	bcc	1fa54 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x120>
   1f950:	ldr	r7, [r6]
   1f954:	mov	r4, r2
   1f958:	mov	sl, r1
   1f95c:	mov	r0, r7
   1f960:	bl	11b64 <mycore_strncmp@plt>
   1f964:	ldr	r1, [r6, #8]
   1f968:	cmp	r0, #0
   1f96c:	bne	1f9a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x74>
   1f970:	cmp	r1, r4
   1f974:	bls	1fa60 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x12c>
   1f978:	ldrb	r0, [r7, r4]
   1f97c:	sub	r0, r0, #9
   1f980:	uxtb	r2, r0
   1f984:	cmp	r2, #24
   1f988:	bcs	1fa60 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x12c>
   1f98c:	movw	r3, #27
   1f990:	mov	r0, #1
   1f994:	movt	r3, #128	; 0x80
   1f998:	tst	r0, r3, lsr r2
   1f99c:	bne	1fa6c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x138>
   1f9a0:	cmp	r1, r4
   1f9a4:	beq	1fa6c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x138>
   1f9a8:	sub	r0, r1, #1
   1f9ac:	cmp	r0, r4
   1f9b0:	bcc	1fa54 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x120>
   1f9b4:	movw	r9, #27
   1f9b8:	mov	r8, #1
   1f9bc:	mov	r5, #1
   1f9c0:	movt	r9, #128	; 0x80
   1f9c4:	b	1f9dc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa8>
   1f9c8:	ldr	r1, [r6, #8]
   1f9cc:	add	r5, r5, #1
   1f9d0:	sub	r0, r1, r5
   1f9d4:	cmp	r0, r4
   1f9d8:	bcc	1fa54 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x120>
   1f9dc:	add	r0, r5, r7
   1f9e0:	ldrb	r2, [r0, #-1]
   1f9e4:	sub	r2, r2, #9
   1f9e8:	cmp	r2, #23
   1f9ec:	bhi	1f9cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x98>
   1f9f0:	tst	r9, r8, lsl r2
   1f9f4:	beq	1f9cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x98>
   1f9f8:	mov	r1, sl
   1f9fc:	mov	r2, r4
   1fa00:	bl	11b64 <mycore_strncmp@plt>
   1fa04:	cmp	r0, #0
   1fa08:	bne	1f9c8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x94>
   1fa0c:	cmp	r5, r4
   1fa10:	bls	1fa38 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x104>
   1fa14:	add	r0, r5, r4
   1fa18:	ldrb	r0, [r7, r0]
   1fa1c:	sub	r0, r0, #9
   1fa20:	uxtb	r1, r0
   1fa24:	cmp	r1, #24
   1fa28:	bcs	1fa38 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x104>
   1fa2c:	mov	r0, #1
   1fa30:	tst	r0, r9, lsr r1
   1fa34:	bne	1fa6c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x138>
   1fa38:	ldr	r1, [r6, #8]
   1fa3c:	sub	r0, r1, r5
   1fa40:	cmp	r0, r4
   1fa44:	bne	1f9cc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x98>
   1fa48:	mov	r0, #1
   1fa4c:	sub	sp, fp, #28
   1fa50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa54:	mov	r0, #0
   1fa58:	sub	sp, fp, #28
   1fa5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa60:	mov	r0, #1
   1fa64:	cmp	r1, r4
   1fa68:	bne	1f9a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x74>
   1fa6c:	sub	sp, fp, #28
   1fa70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fa74 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1fa74:	push	{fp, lr}
   1fa78:	mov	fp, sp
   1fa7c:	ldr	ip, [r0, #8]
   1fa80:	mov	r3, r0
   1fa84:	mov	r0, #0
   1fa88:	cmp	ip, r2
   1fa8c:	popcc	{fp, pc}
   1fa90:	ldr	r0, [r3]
   1fa94:	bl	11b64 <mycore_strncmp@plt>
   1fa98:	clz	r0, r0
   1fa9c:	lsr	r0, r0, #5
   1faa0:	pop	{fp, pc}

0001faa4 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1faa4:	push	{fp, lr}
   1faa8:	mov	fp, sp
   1faac:	ldr	r3, [r0, #8]
   1fab0:	mov	ip, #0
   1fab4:	cmp	r3, r2
   1fab8:	bcc	1fad4 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x30>
   1fabc:	ldr	r0, [r0]
   1fac0:	sub	r3, r3, r2
   1fac4:	add	r0, r0, r3
   1fac8:	bl	11b64 <mycore_strncmp@plt>
   1facc:	clz	r0, r0
   1fad0:	lsr	ip, r0, #5
   1fad4:	mov	r0, ip
   1fad8:	pop	{fp, pc}

0001fadc <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1fadc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fae0:	add	fp, sp, #24
   1fae4:	mov	r8, r1
   1fae8:	ldr	r1, [r0, #8]
   1faec:	mov	r6, r0
   1faf0:	mov	r0, #0
   1faf4:	cmp	r1, r2
   1faf8:	bcc	1fb44 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x68>
   1fafc:	ldr	r7, [r6]
   1fb00:	mov	r4, r2
   1fb04:	mov	r5, #0
   1fb08:	mov	r0, r7
   1fb0c:	mov	r1, r8
   1fb10:	mov	r2, r4
   1fb14:	bl	11b64 <mycore_strncmp@plt>
   1fb18:	cmp	r0, #0
   1fb1c:	beq	1fb40 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x64>
   1fb20:	ldr	r0, [r6, #8]
   1fb24:	sub	r5, r5, #1
   1fb28:	add	r7, r7, #1
   1fb2c:	add	r0, r0, r5
   1fb30:	cmp	r0, r4
   1fb34:	bcs	1fb08 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x2c>
   1fb38:	mov	r0, #0
   1fb3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fb40:	mov	r0, #1
   1fb44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001fb48 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1fb48:	push	{r4, r5, r6, sl, fp, lr}
   1fb4c:	add	fp, sp, #16
   1fb50:	mov	r4, r2
   1fb54:	ldr	r2, [r0, #8]
   1fb58:	mov	r6, r1
   1fb5c:	mov	r1, r0
   1fb60:	mov	r0, #0
   1fb64:	cmp	r2, r4
   1fb68:	bcc	1fba8 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x60>
   1fb6c:	ldr	r5, [r1]
   1fb70:	bne	1fb8c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>
   1fb74:	mov	r0, r5
   1fb78:	mov	r1, r6
   1fb7c:	mov	r2, r4
   1fb80:	bl	11b64 <mycore_strncmp@plt>
   1fb84:	cmp	r0, #0
   1fb88:	beq	1fbc0 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x78>
   1fb8c:	mov	r0, r5
   1fb90:	mov	r1, r6
   1fb94:	mov	r2, r4
   1fb98:	bl	11b64 <mycore_strncmp@plt>
   1fb9c:	cmp	r0, #0
   1fba0:	beq	1fbac <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x64>
   1fba4:	mov	r0, #0
   1fba8:	pop	{r4, r5, r6, sl, fp, pc}
   1fbac:	ldrb	r1, [r5, r4]
   1fbb0:	mov	r0, #1
   1fbb4:	cmp	r1, #45	; 0x2d
   1fbb8:	movne	r0, #0
   1fbbc:	pop	{r4, r5, r6, sl, fp, pc}
   1fbc0:	mov	r0, #1
   1fbc4:	pop	{r4, r5, r6, sl, fp, pc}

0001fbc8 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1fbc8:	push	{fp, lr}
   1fbcc:	mov	fp, sp
   1fbd0:	ldr	ip, [r0, #8]
   1fbd4:	mov	r3, r0
   1fbd8:	mov	r0, #0
   1fbdc:	cmp	ip, r2
   1fbe0:	popne	{fp, pc}
   1fbe4:	ldr	r0, [r3]
   1fbe8:	bl	11288 <mycore_strncasecmp@plt>
   1fbec:	clz	r0, r0
   1fbf0:	lsr	r0, r0, #5
   1fbf4:	pop	{fp, pc}

0001fbf8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1fbf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fbfc:	add	fp, sp, #28
   1fc00:	sub	sp, sp, #4
   1fc04:	mov	r6, r0
   1fc08:	ldr	r0, [r0, #8]
   1fc0c:	cmp	r0, r2
   1fc10:	bcc	1fd18 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x120>
   1fc14:	ldr	r7, [r6]
   1fc18:	mov	r4, r2
   1fc1c:	mov	sl, r1
   1fc20:	mov	r0, r7
   1fc24:	bl	11288 <mycore_strncasecmp@plt>
   1fc28:	ldr	r1, [r6, #8]
   1fc2c:	cmp	r0, #0
   1fc30:	bne	1fc6c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x74>
   1fc34:	cmp	r1, r4
   1fc38:	bls	1fd24 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x12c>
   1fc3c:	ldrb	r0, [r7, r4]
   1fc40:	sub	r0, r0, #9
   1fc44:	uxtb	r2, r0
   1fc48:	cmp	r2, #24
   1fc4c:	bcs	1fd24 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x12c>
   1fc50:	movw	r3, #27
   1fc54:	mov	r0, #1
   1fc58:	movt	r3, #128	; 0x80
   1fc5c:	tst	r0, r3, lsr r2
   1fc60:	bne	1fd30 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x138>
   1fc64:	cmp	r1, r4
   1fc68:	beq	1fd30 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x138>
   1fc6c:	sub	r0, r1, #1
   1fc70:	cmp	r0, r4
   1fc74:	bcc	1fd18 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x120>
   1fc78:	movw	r9, #27
   1fc7c:	mov	r8, #1
   1fc80:	mov	r5, #1
   1fc84:	movt	r9, #128	; 0x80
   1fc88:	b	1fca0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa8>
   1fc8c:	ldr	r1, [r6, #8]
   1fc90:	add	r5, r5, #1
   1fc94:	sub	r0, r1, r5
   1fc98:	cmp	r0, r4
   1fc9c:	bcc	1fd18 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x120>
   1fca0:	add	r0, r5, r7
   1fca4:	ldrb	r2, [r0, #-1]
   1fca8:	sub	r2, r2, #9
   1fcac:	cmp	r2, #23
   1fcb0:	bhi	1fc90 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x98>
   1fcb4:	tst	r9, r8, lsl r2
   1fcb8:	beq	1fc90 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x98>
   1fcbc:	mov	r1, sl
   1fcc0:	mov	r2, r4
   1fcc4:	bl	11288 <mycore_strncasecmp@plt>
   1fcc8:	cmp	r0, #0
   1fccc:	bne	1fc8c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x94>
   1fcd0:	cmp	r5, r4
   1fcd4:	bls	1fcfc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x104>
   1fcd8:	add	r0, r5, r4
   1fcdc:	ldrb	r0, [r7, r0]
   1fce0:	sub	r0, r0, #9
   1fce4:	uxtb	r1, r0
   1fce8:	cmp	r1, #24
   1fcec:	bcs	1fcfc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x104>
   1fcf0:	mov	r0, #1
   1fcf4:	tst	r0, r9, lsr r1
   1fcf8:	bne	1fd30 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x138>
   1fcfc:	ldr	r1, [r6, #8]
   1fd00:	sub	r0, r1, r5
   1fd04:	cmp	r0, r4
   1fd08:	bne	1fc90 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x98>
   1fd0c:	mov	r0, #1
   1fd10:	sub	sp, fp, #28
   1fd14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd18:	mov	r0, #0
   1fd1c:	sub	sp, fp, #28
   1fd20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd24:	mov	r0, #1
   1fd28:	cmp	r1, r4
   1fd2c:	bne	1fc6c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x74>
   1fd30:	sub	sp, fp, #28
   1fd34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fd38 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1fd38:	push	{fp, lr}
   1fd3c:	mov	fp, sp
   1fd40:	ldr	ip, [r0, #8]
   1fd44:	mov	r3, r0
   1fd48:	mov	r0, #0
   1fd4c:	cmp	ip, r2
   1fd50:	popcc	{fp, pc}
   1fd54:	ldr	r0, [r3]
   1fd58:	bl	11288 <mycore_strncasecmp@plt>
   1fd5c:	clz	r0, r0
   1fd60:	lsr	r0, r0, #5
   1fd64:	pop	{fp, pc}

0001fd68 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1fd68:	push	{fp, lr}
   1fd6c:	mov	fp, sp
   1fd70:	ldr	r3, [r0, #8]
   1fd74:	mov	ip, #0
   1fd78:	cmp	r3, r2
   1fd7c:	bcc	1fd98 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x30>
   1fd80:	ldr	r0, [r0]
   1fd84:	sub	r3, r3, r2
   1fd88:	add	r0, r0, r3
   1fd8c:	bl	11288 <mycore_strncasecmp@plt>
   1fd90:	clz	r0, r0
   1fd94:	lsr	ip, r0, #5
   1fd98:	mov	r0, ip
   1fd9c:	pop	{fp, pc}

0001fda0 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1fda0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fda4:	add	fp, sp, #24
   1fda8:	mov	r8, r1
   1fdac:	ldr	r1, [r0, #8]
   1fdb0:	mov	r6, r0
   1fdb4:	mov	r0, #0
   1fdb8:	cmp	r1, r2
   1fdbc:	bcc	1fe08 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x68>
   1fdc0:	ldr	r7, [r6]
   1fdc4:	mov	r4, r2
   1fdc8:	mov	r5, #0
   1fdcc:	mov	r0, r7
   1fdd0:	mov	r1, r8
   1fdd4:	mov	r2, r4
   1fdd8:	bl	11288 <mycore_strncasecmp@plt>
   1fddc:	cmp	r0, #0
   1fde0:	beq	1fe04 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x64>
   1fde4:	ldr	r0, [r6, #8]
   1fde8:	sub	r5, r5, #1
   1fdec:	add	r7, r7, #1
   1fdf0:	add	r0, r0, r5
   1fdf4:	cmp	r0, r4
   1fdf8:	bcs	1fdcc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x2c>
   1fdfc:	mov	r0, #0
   1fe00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fe04:	mov	r0, #1
   1fe08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001fe0c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1fe0c:	push	{r4, r5, r6, sl, fp, lr}
   1fe10:	add	fp, sp, #16
   1fe14:	mov	r4, r2
   1fe18:	ldr	r2, [r0, #8]
   1fe1c:	mov	r6, r1
   1fe20:	mov	r1, r0
   1fe24:	mov	r0, #0
   1fe28:	cmp	r2, r4
   1fe2c:	bcc	1fe6c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x60>
   1fe30:	ldr	r5, [r1]
   1fe34:	bne	1fe50 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>
   1fe38:	mov	r0, r5
   1fe3c:	mov	r1, r6
   1fe40:	mov	r2, r4
   1fe44:	bl	11288 <mycore_strncasecmp@plt>
   1fe48:	cmp	r0, #0
   1fe4c:	beq	1fe84 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x78>
   1fe50:	mov	r0, r5
   1fe54:	mov	r1, r6
   1fe58:	mov	r2, r4
   1fe5c:	bl	11288 <mycore_strncasecmp@plt>
   1fe60:	cmp	r0, #0
   1fe64:	beq	1fe70 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x64>
   1fe68:	mov	r0, #0
   1fe6c:	pop	{r4, r5, r6, sl, fp, pc}
   1fe70:	ldrb	r1, [r5, r4]
   1fe74:	mov	r0, #1
   1fe78:	cmp	r1, #45	; 0x2d
   1fe7c:	movne	r0, #0
   1fe80:	pop	{r4, r5, r6, sl, fp, pc}
   1fe84:	mov	r0, #1
   1fe88:	pop	{r4, r5, r6, sl, fp, pc}

0001fe8c <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1fe8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe90:	add	fp, sp, #28
   1fe94:	sub	sp, sp, #4
   1fe98:	mov	r7, r1
   1fe9c:	mov	r1, r0
   1fea0:	mov	r0, #0
   1fea4:	cmp	r1, #0
   1fea8:	beq	1ff80 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xf4>
   1feac:	ldr	r4, [fp, #8]
   1feb0:	mov	r5, r3
   1feb4:	mov	r6, r2
   1feb8:	mov	r0, r1
   1febc:	str	r1, [sp]
   1fec0:	mov	r8, r0
   1fec4:	ldr	r0, [r0, #32]
   1fec8:	cmp	r0, #0
   1fecc:	beq	1ff54 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1fed0:	ldr	sl, [r0, #40]	; 0x28
   1fed4:	cmp	sl, #0
   1fed8:	bne	1feec <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x60>
   1fedc:	b	1ff54 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1fee0:	ldr	sl, [sl]
   1fee4:	cmp	sl, #0
   1fee8:	beq	1ff54 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1feec:	add	r0, sl, #28
   1fef0:	mov	r1, r5
   1fef4:	mov	r2, r4
   1fef8:	blx	r6
   1fefc:	cmp	r0, #0
   1ff00:	beq	1fee0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1ff04:	ldr	r0, [r7, #8]
   1ff08:	ldr	r1, [r7]
   1ff0c:	add	r2, r0, #1
   1ff10:	str	r8, [r1, r0, lsl #2]
   1ff14:	str	r2, [r7, #8]
   1ff18:	ldr	r1, [r7, #4]
   1ff1c:	cmp	r2, r1
   1ff20:	movwcs	r2, #1025	; 0x401
   1ff24:	addcs	r2, r0, r2
   1ff28:	cmpcs	r2, r1
   1ff2c:	bcc	1fee0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1ff30:	movw	r1, #1026	; 0x402
   1ff34:	add	r9, r0, r1
   1ff38:	ldr	r0, [r7]
   1ff3c:	lsl	r1, r9, #2
   1ff40:	bl	10d9c <mycore_realloc@plt>
   1ff44:	cmp	r0, #0
   1ff48:	beq	1ff88 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xfc>
   1ff4c:	stm	r7, {r0, r9}
   1ff50:	b	1fee0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1ff54:	ldr	r0, [r8, #20]
   1ff58:	ldr	r1, [sp]
   1ff5c:	cmp	r0, #0
   1ff60:	bne	1fec0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1ff64:	ldr	r0, [r8, #16]
   1ff68:	cmp	r0, #0
   1ff6c:	bne	1fec0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1ff70:	ldr	r8, [r8, #24]
   1ff74:	cmp	r8, r1
   1ff78:	bne	1ff64 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xd8>
   1ff7c:	mov	r0, #0
   1ff80:	sub	sp, fp, #28
   1ff84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff88:	mov	r0, #2
   1ff8c:	sub	sp, fp, #28
   1ff90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ff94 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1ff94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff98:	add	fp, sp, #28
   1ff9c:	sub	sp, sp, #4
   1ffa0:	mov	r4, r0
   1ffa4:	mov	r0, #0
   1ffa8:	cmp	r4, #0
   1ffac:	beq	200b4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x120>
   1ffb0:	ldr	r8, [fp, #8]
   1ffb4:	mov	r5, r3
   1ffb8:	mov	r6, r2
   1ffbc:	mov	r7, r1
   1ffc0:	mov	r0, r4
   1ffc4:	str	r3, [sp]
   1ffc8:	mov	r9, r0
   1ffcc:	ldr	r0, [r0, #32]
   1ffd0:	cmp	r0, #0
   1ffd4:	beq	2008c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1ffd8:	ldr	sl, [r0, #40]	; 0x28
   1ffdc:	cmp	sl, #0
   1ffe0:	bne	1fff4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x60>
   1ffe4:	b	2008c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1ffe8:	ldr	sl, [sl]
   1ffec:	cmp	sl, #0
   1fff0:	beq	2008c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1fff4:	ldr	r0, [sl, #16]
   1fff8:	cmp	r0, r8
   1fffc:	bne	1ffe8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   20000:	ldr	r0, [sl, #8]
   20004:	mov	r1, r5
   20008:	mov	r2, r8
   2000c:	bl	11288 <mycore_strncasecmp@plt>
   20010:	cmp	r0, #0
   20014:	bne	1ffe8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   20018:	ldr	r1, [fp, #12]
   2001c:	ldr	r2, [fp, #16]
   20020:	add	r0, sl, #28
   20024:	blx	r6
   20028:	cmp	r0, #0
   2002c:	beq	1ffe8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   20030:	ldr	r0, [r7, #8]
   20034:	ldr	r1, [r7]
   20038:	add	r2, r0, #1
   2003c:	str	r9, [r1, r0, lsl #2]
   20040:	str	r2, [r7, #8]
   20044:	ldr	r1, [r7, #4]
   20048:	cmp	r2, r1
   2004c:	movwcs	r2, #1025	; 0x401
   20050:	addcs	r2, r0, r2
   20054:	cmpcs	r2, r1
   20058:	bcc	1ffe8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   2005c:	movw	r1, #1026	; 0x402
   20060:	mov	r5, r6
   20064:	add	r6, r0, r1
   20068:	ldr	r0, [r7]
   2006c:	lsl	r1, r6, #2
   20070:	bl	10d9c <mycore_realloc@plt>
   20074:	cmp	r0, #0
   20078:	beq	200bc <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x128>
   2007c:	stm	r7, {r0, r6}
   20080:	mov	r6, r5
   20084:	ldr	r5, [sp]
   20088:	b	1ffe8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   2008c:	ldr	r0, [r9, #20]
   20090:	cmp	r0, #0
   20094:	bne	1ffc8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   20098:	ldr	r0, [r9, #16]
   2009c:	cmp	r0, #0
   200a0:	bne	1ffc8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   200a4:	ldr	r9, [r9, #24]
   200a8:	cmp	r9, r4
   200ac:	bne	20098 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x104>
   200b0:	mov	r0, #0
   200b4:	sub	sp, fp, #28
   200b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200bc:	mov	r0, #2
   200c0:	sub	sp, fp, #28
   200c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000200c8 <_myhtml_get_nodes_by_attribute_value@@Base>:
   200c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200cc:	add	fp, sp, #28
   200d0:	sub	sp, sp, #20
   200d4:	ldr	r9, [fp, #24]
   200d8:	mov	r5, r2
   200dc:	mov	r4, r1
   200e0:	mov	r8, r0
   200e4:	cmp	r1, #0
   200e8:	str	r3, [sp, #16]
   200ec:	beq	201e4 <_myhtml_get_nodes_by_attribute_value@@Base+0x11c>
   200f0:	ldr	r3, [fp, #8]
   200f4:	cmp	r5, #0
   200f8:	ldr	r7, [fp, #20]
   200fc:	ldr	r6, [fp, #16]
   20100:	ldreq	r5, [r8, #96]	; 0x60
   20104:	cmp	r3, #0
   20108:	ldrne	r0, [fp, #12]
   2010c:	cmpne	r0, #0
   20110:	bne	20228 <_myhtml_get_nodes_by_attribute_value@@Base+0x160>
   20114:	cmp	r5, #0
   20118:	beq	2024c <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   2011c:	ldr	r8, [sp, #16]
   20120:	mov	r0, r5
   20124:	mov	r9, r0
   20128:	ldr	r0, [r0, #32]
   2012c:	cmp	r0, #0
   20130:	beq	201bc <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   20134:	ldr	sl, [r0, #40]	; 0x28
   20138:	cmp	sl, #0
   2013c:	bne	20150 <_myhtml_get_nodes_by_attribute_value@@Base+0x88>
   20140:	b	201bc <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   20144:	ldr	sl, [sl]
   20148:	cmp	sl, #0
   2014c:	beq	201bc <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   20150:	add	r0, sl, #28
   20154:	mov	r1, r6
   20158:	mov	r2, r7
   2015c:	blx	r8
   20160:	cmp	r0, #0
   20164:	beq	20144 <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   20168:	ldr	r0, [r4, #8]
   2016c:	ldr	r1, [r4]
   20170:	add	r2, r0, #1
   20174:	str	r9, [r1, r0, lsl #2]
   20178:	str	r2, [r4, #8]
   2017c:	ldr	r1, [r4, #4]
   20180:	cmp	r2, r1
   20184:	movwcs	r2, #1025	; 0x401
   20188:	addcs	r2, r0, r2
   2018c:	cmpcs	r2, r1
   20190:	bcc	20144 <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   20194:	movw	r1, #1026	; 0x402
   20198:	add	r8, r0, r1
   2019c:	ldr	r0, [r4]
   201a0:	lsl	r1, r8, #2
   201a4:	bl	10d9c <mycore_realloc@plt>
   201a8:	cmp	r0, #0
   201ac:	beq	20284 <_myhtml_get_nodes_by_attribute_value@@Base+0x1bc>
   201b0:	stm	r4, {r0, r8}
   201b4:	ldr	r8, [sp, #16]
   201b8:	b	20144 <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   201bc:	ldr	r0, [r9, #20]
   201c0:	cmp	r0, #0
   201c4:	bne	20124 <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   201c8:	ldr	r0, [r9, #16]
   201cc:	cmp	r0, #0
   201d0:	bne	20124 <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   201d4:	ldr	r9, [r9, #24]
   201d8:	cmp	r9, r5
   201dc:	bne	201c8 <_myhtml_get_nodes_by_attribute_value@@Base+0x100>
   201e0:	b	2024c <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   201e4:	mov	r0, #12
   201e8:	bl	119a8 <mycore_malloc@plt>
   201ec:	cmp	r0, #0
   201f0:	beq	2025c <_myhtml_get_nodes_by_attribute_value@@Base+0x194>
   201f4:	mov	r4, r0
   201f8:	mov	r0, #1024	; 0x400
   201fc:	mov	r7, #0
   20200:	stmib	r4, {r0, r7}
   20204:	mov	r0, #4096	; 0x1000
   20208:	bl	119a8 <mycore_malloc@plt>
   2020c:	cmp	r0, #0
   20210:	str	r0, [r4]
   20214:	beq	20264 <_myhtml_get_nodes_by_attribute_value@@Base+0x19c>
   20218:	cmp	r9, #0
   2021c:	movne	r0, #0
   20220:	strne	r0, [r9]
   20224:	b	200f0 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   20228:	ldr	r2, [sp, #16]
   2022c:	stm	sp, {r0, r6, r7}
   20230:	mov	r0, r5
   20234:	mov	r1, r4
   20238:	bl	10f28 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   2023c:	cmp	r9, #0
   20240:	beq	2024c <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   20244:	cmp	r0, #0
   20248:	strne	r0, [r9]
   2024c:	mov	r7, r4
   20250:	mov	r0, r7
   20254:	sub	sp, fp, #28
   20258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2025c:	mov	r7, #0
   20260:	b	2026c <_myhtml_get_nodes_by_attribute_value@@Base+0x1a4>
   20264:	mov	r0, r4
   20268:	bl	11a98 <mycore_free@plt>
   2026c:	cmp	r9, #0
   20270:	movne	r0, #2
   20274:	strne	r0, [r9]
   20278:	mov	r0, r7
   2027c:	sub	sp, fp, #28
   20280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20284:	ldr	r9, [fp, #24]
   20288:	mov	r0, #2
   2028c:	cmp	r9, #0
   20290:	bne	20244 <_myhtml_get_nodes_by_attribute_value@@Base+0x17c>
   20294:	b	2024c <_myhtml_get_nodes_by_attribute_value@@Base+0x184>

00020298 <myhtml_get_nodes_by_attribute_value@@Base>:
   20298:	push	{fp, lr}
   2029c:	mov	fp, sp
   202a0:	ldr	lr, [pc, #28]	; 202c4 <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   202a4:	cmp	r3, #0
   202a8:	ldr	lr, [pc, lr]
   202ac:	ldr	ip, [pc, #20]	; 202c8 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   202b0:	ldr	ip, [pc, ip]
   202b4:	movne	ip, lr
   202b8:	mov	r3, ip
   202bc:	pop	{fp, lr}
   202c0:	b	200c8 <_myhtml_get_nodes_by_attribute_value@@Base>
   202c4:	andeq	sp, pc, r4, ror #7
   202c8:	andeq	sp, pc, r4, lsl #8

000202cc <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   202cc:	push	{fp, lr}
   202d0:	mov	fp, sp
   202d4:	ldr	lr, [pc, #28]	; 202f8 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   202d8:	cmp	r3, #0
   202dc:	ldr	lr, [pc, lr]
   202e0:	ldr	ip, [pc, #20]	; 202fc <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   202e4:	ldr	ip, [pc, ip]
   202e8:	movne	ip, lr
   202ec:	mov	r3, ip
   202f0:	pop	{fp, lr}
   202f4:	b	200c8 <_myhtml_get_nodes_by_attribute_value@@Base>
   202f8:	andeq	sp, pc, r4, asr #4
   202fc:	andeq	sp, pc, ip, asr #8

00020300 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   20300:	push	{fp, lr}
   20304:	mov	fp, sp
   20308:	ldr	lr, [pc, #28]	; 2032c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   2030c:	cmp	r3, #0
   20310:	ldr	lr, [pc, lr]
   20314:	ldr	ip, [pc, #20]	; 20330 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   20318:	ldr	ip, [pc, ip]
   2031c:	movne	ip, lr
   20320:	mov	r3, ip
   20324:	pop	{fp, lr}
   20328:	b	200c8 <_myhtml_get_nodes_by_attribute_value@@Base>
   2032c:	andeq	sp, pc, ip, ror #4
   20330:	andeq	sp, pc, r4, asr r2	; <UNPREDICTABLE>

00020334 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   20334:	push	{fp, lr}
   20338:	mov	fp, sp
   2033c:	ldr	lr, [pc, #28]	; 20360 <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   20340:	cmp	r3, #0
   20344:	ldr	lr, [pc, lr]
   20348:	ldr	ip, [pc, #20]	; 20364 <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   2034c:	ldr	ip, [pc, ip]
   20350:	movne	ip, lr
   20354:	mov	r3, ip
   20358:	pop	{fp, lr}
   2035c:	b	200c8 <_myhtml_get_nodes_by_attribute_value@@Base>
   20360:	andeq	sp, pc, r4, asr #8
   20364:			; <UNDEFINED> instruction: 0x000fd2b0

00020368 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   20368:	push	{fp, lr}
   2036c:	mov	fp, sp
   20370:	ldr	lr, [pc, #28]	; 20394 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   20374:	cmp	r3, #0
   20378:	ldr	lr, [pc, lr]
   2037c:	ldr	ip, [pc, #20]	; 20398 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   20380:	ldr	ip, [pc, ip]
   20384:	movne	ip, lr
   20388:	mov	r3, ip
   2038c:	pop	{fp, lr}
   20390:	b	200c8 <_myhtml_get_nodes_by_attribute_value@@Base>
   20394:	strdeq	sp, [pc], -r8
   20398:	andeq	sp, pc, r0, lsl r3	; <UNPREDICTABLE>

0002039c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   2039c:	push	{fp, lr}
   203a0:	mov	fp, sp
   203a4:	ldr	lr, [pc, #28]	; 203c8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   203a8:	cmp	r3, #0
   203ac:	ldr	lr, [pc, lr]
   203b0:	ldr	ip, [pc, #20]	; 203cc <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   203b4:	ldr	ip, [pc, ip]
   203b8:	movne	ip, lr
   203bc:	mov	r3, ip
   203c0:	pop	{fp, lr}
   203c4:	b	200c8 <_myhtml_get_nodes_by_attribute_value@@Base>
   203c8:	andeq	sp, pc, r0, ror #4
   203cc:	andeq	sp, pc, r4, asr #5

000203d0 <myhtml_attribute_next@@Base>:
   203d0:	ldr	r0, [r0]
   203d4:	bx	lr

000203d8 <myhtml_attribute_prev@@Base>:
   203d8:	ldr	r0, [r0, #4]
   203dc:	bx	lr

000203e0 <myhtml_attribute_namespace@@Base>:
   203e0:	ldr	r0, [r0, #64]	; 0x40
   203e4:	bx	lr

000203e8 <myhtml_attribute_namespace_set@@Base>:
   203e8:	str	r1, [r0, #64]	; 0x40
   203ec:	bx	lr

000203f0 <myhtml_attribute_key@@Base>:
   203f0:	mov	r2, r0
   203f4:	ldr	r0, [r0, #8]
   203f8:	cmp	r0, #0
   203fc:	beq	2041c <myhtml_attribute_key@@Base+0x2c>
   20400:	ldr	r2, [r2, #16]
   20404:	cmp	r2, #0
   20408:	beq	2041c <myhtml_attribute_key@@Base+0x2c>
   2040c:	cmp	r1, #0
   20410:	strne	r2, [r1]
   20414:	bxne	lr
   20418:	bx	lr
   2041c:	mov	r0, #0
   20420:	cmp	r1, #0
   20424:	strne	r0, [r1]
   20428:	bx	lr

0002042c <myhtml_attribute_value@@Base>:
   2042c:	mov	r2, r0
   20430:	ldr	r0, [r0, #28]
   20434:	cmp	r0, #0
   20438:	beq	20458 <myhtml_attribute_value@@Base+0x2c>
   2043c:	ldr	r2, [r2, #36]	; 0x24
   20440:	cmp	r2, #0
   20444:	beq	20458 <myhtml_attribute_value@@Base+0x2c>
   20448:	cmp	r1, #0
   2044c:	strne	r2, [r1]
   20450:	bxne	lr
   20454:	bx	lr
   20458:	mov	r0, #0
   2045c:	cmp	r1, #0
   20460:	strne	r0, [r1]
   20464:	bx	lr

00020468 <myhtml_attribute_key_string@@Base>:
   20468:	cmp	r0, #0
   2046c:	addne	r0, r0, #8
   20470:	bx	lr

00020474 <myhtml_attribute_value_string@@Base>:
   20474:	cmp	r0, #0
   20478:	addne	r0, r0, #28
   2047c:	bx	lr

00020480 <myhtml_attribute_by_key@@Base>:
   20480:	cmp	r0, #0
   20484:	beq	20498 <myhtml_attribute_by_key@@Base+0x18>
   20488:	ldr	r0, [r0, #32]
   2048c:	cmp	r0, #0
   20490:	beq	20498 <myhtml_attribute_by_key@@Base+0x18>
   20494:	b	11b34 <myhtml_token_attr_by_name@plt>
   20498:	mov	r0, #0
   2049c:	bx	lr

000204a0 <myhtml_attribute_add@@Base>:
   204a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   204a4:	add	fp, sp, #24
   204a8:	sub	sp, sp, #16
   204ac:	cmp	r0, #0
   204b0:	beq	2052c <myhtml_attribute_add@@Base+0x8c>
   204b4:	mov	r5, r1
   204b8:	ldr	r1, [r0, #32]
   204bc:	ldr	r4, [r0, #40]	; 0x28
   204c0:	mov	r6, r3
   204c4:	mov	r8, r2
   204c8:	mov	r7, r0
   204cc:	cmp	r1, #0
   204d0:	bne	204fc <myhtml_attribute_add@@Base+0x5c>
   204d4:	ldr	r0, [r4, #8]
   204d8:	ldr	r1, [r4, #40]	; 0x28
   204dc:	bl	117e0 <myhtml_token_node_create@plt>
   204e0:	cmp	r0, #0
   204e4:	str	r0, [r7, #32]
   204e8:	beq	2052c <myhtml_attribute_add@@Base+0x8c>
   204ec:	mov	r1, r0
   204f0:	ldr	r0, [r0, #48]	; 0x30
   204f4:	orr	r0, r0, #4
   204f8:	str	r0, [r1, #48]	; 0x30
   204fc:	ldr	r2, [fp, #12]
   20500:	ldr	r3, [fp, #8]
   20504:	ldr	r0, [r4, #8]
   20508:	ldr	r7, [r4, #40]	; 0x28
   2050c:	str	r6, [sp]
   20510:	stmib	sp, {r3, r7}
   20514:	str	r2, [sp, #12]
   20518:	mov	r2, r5
   2051c:	mov	r3, r8
   20520:	bl	11654 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   20524:	sub	sp, fp, #24
   20528:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2052c:	mov	r0, #0
   20530:	sub	sp, fp, #24
   20534:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020538 <myhtml_attribute_remove@@Base>:
   20538:	cmp	r0, #0
   2053c:	beq	20550 <myhtml_attribute_remove@@Base+0x18>
   20540:	ldr	r0, [r0, #32]
   20544:	cmp	r0, #0
   20548:	beq	20550 <myhtml_attribute_remove@@Base+0x18>
   2054c:	b	114b0 <myhtml_token_attr_remove@plt>
   20550:	mov	r0, #0
   20554:	bx	lr

00020558 <myhtml_attribute_remove_by_key@@Base>:
   20558:	cmp	r0, #0
   2055c:	beq	20570 <myhtml_attribute_remove_by_key@@Base+0x18>
   20560:	ldr	r0, [r0, #32]
   20564:	cmp	r0, #0
   20568:	beq	20570 <myhtml_attribute_remove_by_key@@Base+0x18>
   2056c:	b	11b28 <myhtml_token_attr_remove_by_name@plt>
   20570:	mov	r0, #0
   20574:	bx	lr

00020578 <myhtml_attribute_delete@@Base>:
   20578:	push	{r4, r5, fp, lr}
   2057c:	add	fp, sp, #8
   20580:	cmp	r1, #0
   20584:	beq	205e8 <myhtml_attribute_delete@@Base+0x70>
   20588:	mov	r5, r0
   2058c:	ldr	r0, [r1, #32]
   20590:	cmp	r0, #0
   20594:	popeq	{r4, r5, fp, pc}
   20598:	mov	r1, r2
   2059c:	mov	r4, r2
   205a0:	bl	114b0 <myhtml_token_attr_remove@plt>
   205a4:	ldr	r2, [r4, #8]
   205a8:	cmp	r2, #0
   205ac:	beq	205bc <myhtml_attribute_delete@@Base+0x44>
   205b0:	ldr	r0, [r4, #20]
   205b4:	ldr	r1, [r4, #24]
   205b8:	bl	115c4 <mchar_async_free@plt>
   205bc:	ldr	r2, [r4, #28]
   205c0:	cmp	r2, #0
   205c4:	beq	205d4 <myhtml_attribute_delete@@Base+0x5c>
   205c8:	ldr	r0, [r4, #40]	; 0x28
   205cc:	ldr	r1, [r4, #44]	; 0x2c
   205d0:	bl	115c4 <mchar_async_free@plt>
   205d4:	ldr	r0, [r5, #8]
   205d8:	mov	r1, r4
   205dc:	ldr	r0, [r0, #8]
   205e0:	pop	{r4, r5, fp, lr}
   205e4:	b	11108 <mcobject_async_free@plt>
   205e8:	pop	{r4, r5, fp, pc}

000205ec <myhtml_attribute_free@@Base>:
   205ec:	push	{r4, r5, fp, lr}
   205f0:	add	fp, sp, #8
   205f4:	ldr	r2, [r1, #8]
   205f8:	mov	r4, r1
   205fc:	mov	r5, r0
   20600:	cmp	r2, #0
   20604:	beq	20614 <myhtml_attribute_free@@Base+0x28>
   20608:	ldr	r0, [r4, #20]
   2060c:	ldr	r1, [r4, #24]
   20610:	bl	115c4 <mchar_async_free@plt>
   20614:	ldr	r2, [r4, #28]
   20618:	cmp	r2, #0
   2061c:	beq	2062c <myhtml_attribute_free@@Base+0x40>
   20620:	ldr	r0, [r4, #40]	; 0x28
   20624:	ldr	r1, [r4, #44]	; 0x2c
   20628:	bl	115c4 <mchar_async_free@plt>
   2062c:	ldr	r0, [r5, #8]
   20630:	mov	r1, r4
   20634:	ldr	r0, [r0, #8]
   20638:	pop	{r4, r5, fp, lr}
   2063c:	b	11108 <mcobject_async_free@plt>

00020640 <myhtml_attribute_key_raw_position@@Base>:
   20640:	cmp	r1, #0
   20644:	moveq	r1, #0
   20648:	streq	r1, [r0]
   2064c:	streq	r1, [r0, #4]
   20650:	bxeq	lr
   20654:	ldr	r2, [r1, #48]	; 0x30
   20658:	ldr	r1, [r1, #52]	; 0x34
   2065c:	str	r2, [r0]
   20660:	str	r1, [r0, #4]
   20664:	bx	lr

00020668 <myhtml_attribute_value_raw_position@@Base>:
   20668:	cmp	r1, #0
   2066c:	moveq	r1, #0
   20670:	streq	r1, [r0]
   20674:	streq	r1, [r0, #4]
   20678:	bxeq	lr
   2067c:	ldr	r2, [r1, #56]	; 0x38
   20680:	ldr	r1, [r1, #60]	; 0x3c
   20684:	str	r2, [r0]
   20688:	str	r1, [r0, #4]
   2068c:	bx	lr

00020690 <myhtml_collection_clean@@Base>:
   20690:	cmp	r0, #0
   20694:	movne	r1, #0
   20698:	strne	r1, [r0, #8]
   2069c:	bx	lr

000206a0 <myhtml_collection_destroy@@Base>:
   206a0:	cmp	r0, #0
   206a4:	beq	206d0 <myhtml_collection_destroy@@Base+0x30>
   206a8:	push	{r4, sl, fp, lr}
   206ac:	add	fp, sp, #8
   206b0:	mov	r4, r0
   206b4:	ldr	r0, [r0]
   206b8:	cmp	r0, #0
   206bc:	beq	206c4 <myhtml_collection_destroy@@Base+0x24>
   206c0:	bl	11a98 <mycore_free@plt>
   206c4:	mov	r0, r4
   206c8:	bl	11a98 <mycore_free@plt>
   206cc:	pop	{r4, sl, fp, lr}
   206d0:	mov	r0, #0
   206d4:	bx	lr

000206d8 <myhtml_queue_add@@Base>:
   206d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   206dc:	add	fp, sp, #24
   206e0:	mov	r5, r0
   206e4:	ldr	r7, [r0, #68]	; 0x44
   206e8:	ldr	r0, [r0, #184]	; 0xb8
   206ec:	cmp	r2, #0
   206f0:	mov	r6, r2
   206f4:	mov	r8, r1
   206f8:	andsne	r0, r0, #4
   206fc:	bne	20808 <myhtml_queue_add@@Base+0x130>
   20700:	ldr	r0, [r5, #180]	; 0xb4
   20704:	tst	r0, #16
   20708:	bne	2076c <myhtml_queue_add@@Base+0x94>
   2070c:	cmp	r7, #0
   20710:	strne	r6, [r7, #4]
   20714:	ldr	r0, [r5]
   20718:	ldr	r1, [r5, #20]
   2071c:	ldr	r0, [r0]
   20720:	bl	11474 <mythread_queue_node_malloc_round@plt>
   20724:	str	r0, [r5, #68]	; 0x44
   20728:	ldr	r1, [r5, #20]
   2072c:	ldr	r2, [r1]
   20730:	ldr	r2, [r2, #12]
   20734:	cmp	r2, #0
   20738:	bne	207b0 <myhtml_queue_add@@Base+0xd8>
   2073c:	ldr	r0, [r5]
   20740:	ldr	r0, [r0, #4]
   20744:	bl	11a08 <mythread_queue_list_entry_make_batch@plt>
   20748:	ldr	r0, [r5]
   2074c:	ldr	r1, [r5, #20]
   20750:	ldr	r0, [r0]
   20754:	bl	11b58 <mythread_queue_list_entry_make_stream@plt>
   20758:	ldr	r0, [r5, #68]	; 0x44
   2075c:	mov	r4, #2
   20760:	cmp	r0, #0
   20764:	bne	207bc <myhtml_queue_add@@Base+0xe4>
   20768:	b	2083c <myhtml_queue_add@@Base+0x164>
   2076c:	cmp	r6, #0
   20770:	cmpne	r7, #0
   20774:	beq	20794 <myhtml_queue_add@@Base+0xbc>
   20778:	mov	r0, #0
   2077c:	mov	r1, r7
   20780:	str	r6, [r7, #4]
   20784:	bl	10ee0 <myhtml_parser_worker@plt>
   20788:	mov	r0, #0
   2078c:	mov	r1, r7
   20790:	bl	11c18 <myhtml_parser_stream@plt>
   20794:	ldr	r0, [r5]
   20798:	ldr	r1, [r5, #24]
   2079c:	mov	r2, #4
   207a0:	mov	r3, #0
   207a4:	ldr	r0, [r0]
   207a8:	bl	119c0 <mythread_queue_node_malloc_limit@plt>
   207ac:	str	r0, [r5, #68]	; 0x44
   207b0:	mov	r4, #2
   207b4:	cmp	r0, #0
   207b8:	beq	2083c <myhtml_queue_add@@Base+0x164>
   207bc:	cmp	r6, #0
   207c0:	str	r7, [r0, #8]
   207c4:	str	r5, [r0]
   207c8:	cmpne	r7, #0
   207cc:	beq	207dc <myhtml_queue_add@@Base+0x104>
   207d0:	mov	r0, r5
   207d4:	mov	r1, r6
   207d8:	bl	11234 <myhtml_tokenizer_calc_current_namespace@plt>
   207dc:	ldr	r0, [r5, #8]
   207e0:	ldr	r1, [r0, #12]
   207e4:	bl	117e0 <myhtml_token_node_create@plt>
   207e8:	cmp	r0, #0
   207ec:	str	r0, [r5, #64]	; 0x40
   207f0:	beq	2083c <myhtml_queue_add@@Base+0x164>
   207f4:	ldr	r1, [r5, #192]	; 0xc0
   207f8:	add	r1, r1, r8
   207fc:	str	r1, [r0, #24]
   20800:	str	r1, [r0, #32]
   20804:	b	20838 <myhtml_queue_add@@Base+0x160>
   20808:	ldr	r0, [r6]
   2080c:	cmp	r0, #1
   20810:	bne	20700 <myhtml_queue_add@@Base+0x28>
   20814:	ldr	r0, [r6, #48]	; 0x30
   20818:	tst	r0, #8
   2081c:	beq	20700 <myhtml_queue_add@@Base+0x28>
   20820:	mov	r0, r6
   20824:	bl	11bc4 <myhtml_token_node_clean@plt>
   20828:	ldr	r0, [r5, #192]	; 0xc0
   2082c:	add	r0, r0, r8
   20830:	str	r0, [r6, #24]
   20834:	str	r0, [r6, #32]
   20838:	mov	r4, #0
   2083c:	mov	r0, r4
   20840:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020844 <myhtml_utils_strcmp@@Base>:
   20844:	push	{fp, lr}
   20848:	mov	fp, sp
   2084c:	mov	ip, r0
   20850:	mov	r0, #1
   20854:	cmp	r2, #0
   20858:	popeq	{fp, pc}
   2085c:	ldrb	lr, [r1]
   20860:	sub	r3, lr, #65	; 0x41
   20864:	uxtb	r3, r3
   20868:	cmp	r3, #26
   2086c:	ldrb	r3, [ip]
   20870:	orrcc	lr, lr, #96	; 0x60
   20874:	uxtb	lr, lr
   20878:	cmp	lr, r3
   2087c:	bne	20894 <myhtml_utils_strcmp@@Base+0x50>
   20880:	add	r1, r1, #1
   20884:	add	ip, ip, #1
   20888:	subs	r2, r2, #1
   2088c:	bne	2085c <myhtml_utils_strcmp@@Base+0x18>
   20890:	pop	{fp, pc}
   20894:	mov	r0, #0
   20898:	pop	{fp, pc}

0002089c <myhtml_is_html_node@@Base>:
   2089c:	mov	r2, r0
   208a0:	mov	r0, #0
   208a4:	cmp	r2, #0
   208a8:	beq	208c8 <myhtml_is_html_node@@Base+0x2c>
   208ac:	ldr	r3, [r2, #4]
   208b0:	cmp	r3, r1
   208b4:	bxne	lr
   208b8:	ldr	r0, [r2, #8]
   208bc:	sub	r0, r0, #1
   208c0:	clz	r0, r0
   208c4:	lsr	r0, r0, #5
   208c8:	bx	lr

000208cc <myhtml_version@@Base>:
   208cc:	mov	r3, #4
   208d0:	mov	r1, #5
   208d4:	mov	r2, #0
   208d8:	str	r3, [r0]
   208dc:	str	r2, [r0, #4]
   208e0:	str	r1, [r0, #8]
   208e4:	bx	lr

000208e8 <myhtml_node_clone@@Base>:
   208e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   208ec:	add	fp, sp, #24
   208f0:	sub	sp, sp, #8
   208f4:	mov	r5, r1
   208f8:	mov	r6, r0
   208fc:	bl	110a8 <myhtml_tree_node_create@plt>
   20900:	ldr	r7, [r5, #4]
   20904:	mov	r4, r0
   20908:	cmp	r7, #252	; 0xfc
   2090c:	bcc	2097c <myhtml_node_clone@@Base+0x94>
   20910:	ldr	r0, [r6, #28]
   20914:	mov	r1, r7
   20918:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2091c:	mov	r9, r0
   20920:	ldr	r0, [r5, #40]	; 0x28
   20924:	ldr	r1, [r5, #4]
   20928:	ldr	r0, [r0, #28]
   2092c:	bl	117f8 <myhtml_tag_get_by_id@plt>
   20930:	mov	r8, r0
   20934:	cmp	r9, #0
   20938:	beq	20960 <myhtml_node_clone@@Base+0x78>
   2093c:	ldr	r2, [r9, #8]
   20940:	ldr	r0, [r8, #8]
   20944:	cmp	r2, r0
   20948:	bne	20960 <myhtml_node_clone@@Base+0x78>
   2094c:	ldr	r1, [r8, #4]
   20950:	ldr	r0, [r9, #4]
   20954:	bl	11b64 <mycore_strncmp@plt>
   20958:	cmp	r0, #0
   2095c:	beq	2097c <myhtml_node_clone@@Base+0x94>
   20960:	ldr	r0, [r6, #28]
   20964:	ldmib	r8, {r1, r2}
   20968:	mov	r3, #1
   2096c:	str	r3, [sp]
   20970:	mov	r3, #0
   20974:	bl	110cc <myhtml_tag_add@plt>
   20978:	mov	r7, r0
   2097c:	ldr	r1, [r5, #32]
   20980:	ldr	r0, [r6, #8]
   20984:	ldr	r2, [r6, #40]	; 0x28
   20988:	ldr	r3, [r6, #44]	; 0x2c
   2098c:	bl	11018 <myhtml_token_node_clone@plt>
   20990:	str	r0, [r4, #32]
   20994:	str	r7, [r4, #4]
   20998:	cmp	r0, #0
   2099c:	ldr	r1, [r5, #8]
   209a0:	str	r1, [r4, #8]
   209a4:	beq	209b8 <myhtml_node_clone@@Base+0xd0>
   209a8:	str	r7, [r0]
   209ac:	ldr	r1, [r0, #48]	; 0x30
   209b0:	orr	r1, r1, #4
   209b4:	str	r1, [r0, #48]	; 0x30
   209b8:	mov	r0, r4
   209bc:	sub	sp, fp, #24
   209c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000209c4 <myhtml_node_clone_deep@@Base>:
   209c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209c8:	add	fp, sp, #28
   209cc:	sub	sp, sp, #4
   209d0:	mov	r5, r1
   209d4:	mov	r9, r0
   209d8:	mov	r7, #0
   209dc:	cmp	r1, #0
   209e0:	mov	r4, #0
   209e4:	beq	20a08 <myhtml_node_clone_deep@@Base+0x44>
   209e8:	ldr	r0, [r5, #40]	; 0x28
   209ec:	mov	r4, r5
   209f0:	cmp	r0, #0
   209f4:	beq	20a08 <myhtml_node_clone_deep@@Base+0x44>
   209f8:	ldr	r0, [r0, #84]	; 0x54
   209fc:	mov	r4, r5
   20a00:	cmp	r0, r5
   20a04:	ldreq	r4, [r5, #20]
   20a08:	mov	r0, r9
   20a0c:	mov	r1, r4
   20a10:	bl	11b88 <myhtml_node_clone@plt>
   20a14:	cmp	r0, #0
   20a18:	beq	20aa8 <myhtml_node_clone_deep@@Base+0xe4>
   20a1c:	ldr	r4, [r4, #20]
   20a20:	mov	sl, r0
   20a24:	cmp	r4, #0
   20a28:	beq	20ab4 <myhtml_node_clone_deep@@Base+0xf0>
   20a2c:	mov	r0, r9
   20a30:	mov	r1, r4
   20a34:	bl	11b88 <myhtml_node_clone@plt>
   20a38:	cmp	r0, #0
   20a3c:	beq	20aa8 <myhtml_node_clone_deep@@Base+0xe4>
   20a40:	mov	r6, r0
   20a44:	mov	r7, sl
   20a48:	mov	r0, r7
   20a4c:	mov	r1, r6
   20a50:	bl	11588 <myhtml_tree_node_add_child@plt>
   20a54:	ldr	r8, [r4, #20]
   20a58:	cmp	r8, #0
   20a5c:	bne	20a84 <myhtml_node_clone_deep@@Base+0xc0>
   20a60:	b	20a6c <myhtml_node_clone_deep@@Base+0xa8>
   20a64:	ldr	r4, [r4, #24]
   20a68:	ldr	r7, [r7, #24]
   20a6c:	cmp	r4, r5
   20a70:	beq	20ab4 <myhtml_node_clone_deep@@Base+0xf0>
   20a74:	ldr	r8, [r4, #16]
   20a78:	cmp	r8, #0
   20a7c:	beq	20a64 <myhtml_node_clone_deep@@Base+0xa0>
   20a80:	mov	r6, r7
   20a84:	mov	r0, r9
   20a88:	mov	r1, r8
   20a8c:	mov	r7, r6
   20a90:	bl	11b88 <myhtml_node_clone@plt>
   20a94:	mov	r6, r0
   20a98:	cmp	r0, #0
   20a9c:	mov	r4, r8
   20aa0:	bne	20a48 <myhtml_node_clone_deep@@Base+0x84>
   20aa4:	mov	r7, #0
   20aa8:	mov	r0, r7
   20aac:	sub	sp, fp, #28
   20ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ab4:	mov	r7, sl
   20ab8:	mov	r0, r7
   20abc:	sub	sp, fp, #28
   20ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020ac4 <myhtml_namespace_name_entry_by_name@@Base>:
   20ac4:	push	{r4, sl, fp, lr}
   20ac8:	add	fp, sp, #8
   20acc:	mov	r2, r1
   20ad0:	mov	ip, r0
   20ad4:	ldrb	r1, [r0], r1
   20ad8:	ldrb	r0, [r0, #-1]
   20adc:	ldr	r3, [pc, #168]	; 20b8c <myhtml_namespace_name_entry_by_name@@Base+0xc8>
   20ae0:	ldr	lr, [pc, #168]	; 20b90 <myhtml_namespace_name_entry_by_name@@Base+0xcc>
   20ae4:	add	r3, pc, r3
   20ae8:	add	lr, pc, lr
   20aec:	ldrb	r1, [r3, r1]
   20af0:	ldrb	r0, [r3, r0]
   20af4:	mul	r1, r1, r2
   20af8:	mul	r0, r1, r0
   20afc:	movw	r1, #27595	; 0x6bcb
   20b00:	movt	r1, #44840	; 0xaf28
   20b04:	umull	r1, r3, r0, r1
   20b08:	sub	r1, r0, r3
   20b0c:	add	r1, r3, r1, lsr #1
   20b10:	mov	r3, #19
   20b14:	lsr	r1, r1, #4
   20b18:	mls	r0, r1, r3, r0
   20b1c:	add	r1, r0, #1
   20b20:	add	r3, r1, r1, lsl #2
   20b24:	mov	r4, lr
   20b28:	ldr	r0, [r4, r3, lsl #2]!
   20b2c:	cmp	r0, #0
   20b30:	beq	20b6c <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   20b34:	add	r3, lr, r3, lsl #2
   20b38:	ldr	r3, [r3, #4]
   20b3c:	cmp	r3, r2
   20b40:	beq	20b74 <myhtml_namespace_name_entry_by_name@@Base+0xb0>
   20b44:	cmp	r3, r2
   20b48:	bhi	20b6c <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   20b4c:	add	r0, r1, r1, lsl #2
   20b50:	add	r0, lr, r0, lsl #2
   20b54:	ldr	r1, [r0, #12]
   20b58:	add	r3, r1, r1, lsl #2
   20b5c:	mov	r4, lr
   20b60:	ldr	r0, [r4, r3, lsl #2]!
   20b64:	cmp	r0, #0
   20b68:	bne	20b34 <myhtml_namespace_name_entry_by_name@@Base+0x70>
   20b6c:	mov	r0, #0
   20b70:	pop	{r4, sl, fp, pc}
   20b74:	mov	r1, ip
   20b78:	bl	11288 <mycore_strncasecmp@plt>
   20b7c:	cmp	r0, #0
   20b80:	movne	r4, #0
   20b84:	mov	r0, r4
   20b88:	pop	{r4, sl, fp, pc}
   20b8c:	andeq	r2, lr, r8, asr r5
   20b90:	andeq	r7, pc, r0, lsl #18

00020b94 <myhtml_namespace_id_by_name@@Base>:
   20b94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20b98:	add	fp, sp, #24
   20b9c:	mov	r8, r2
   20ba0:	mov	r2, r1
   20ba4:	mov	r1, r0
   20ba8:	mov	r9, #0
   20bac:	ldrb	r3, [r0], r2
   20bb0:	ldrb	r0, [r0, #-1]
   20bb4:	ldr	r7, [pc, #180]	; 20c70 <myhtml_namespace_id_by_name@@Base+0xdc>
   20bb8:	add	r7, pc, r7
   20bbc:	ldrb	r3, [r7, r3]
   20bc0:	ldrb	r0, [r7, r0]
   20bc4:	mul	r3, r3, r2
   20bc8:	mul	r0, r3, r0
   20bcc:	movw	r3, #27595	; 0x6bcb
   20bd0:	movt	r3, #44840	; 0xaf28
   20bd4:	umull	r3, r7, r0, r3
   20bd8:	sub	r3, r0, r7
   20bdc:	add	r3, r7, r3, lsr #1
   20be0:	mov	r7, #19
   20be4:	lsr	r3, r3, #4
   20be8:	mls	r3, r3, r7, r0
   20bec:	movw	r7, #58783	; 0xe59f
   20bf0:	mov	r0, #1
   20bf4:	movt	r7, #3
   20bf8:	tst	r0, r7, lsr r3
   20bfc:	bne	20c4c <myhtml_namespace_id_by_name@@Base+0xb8>
   20c00:	add	r6, r3, #1
   20c04:	ldr	r3, [pc, #104]	; 20c74 <myhtml_namespace_id_by_name@@Base+0xe0>
   20c08:	movw	r4, #52031	; 0xcb3f
   20c0c:	movt	r4, #7
   20c10:	add	r3, pc, r3
   20c14:	add	r7, r6, r6, lsl #2
   20c18:	add	r6, r3, r7, lsl #2
   20c1c:	ldr	r5, [r6, #4]
   20c20:	cmp	r5, r2
   20c24:	beq	20c3c <myhtml_namespace_id_by_name@@Base+0xa8>
   20c28:	bhi	20c4c <myhtml_namespace_id_by_name@@Base+0xb8>
   20c2c:	ldr	r6, [r6, #12]
   20c30:	tst	r0, r4, lsr r6
   20c34:	beq	20c14 <myhtml_namespace_id_by_name@@Base+0x80>
   20c38:	b	20c4c <myhtml_namespace_id_by_name@@Base+0xb8>
   20c3c:	ldr	r0, [r3, r7, lsl #2]
   20c40:	bl	11288 <mycore_strncasecmp@plt>
   20c44:	cmp	r0, #0
   20c48:	beq	20c54 <myhtml_namespace_id_by_name@@Base+0xc0>
   20c4c:	mov	r0, r9
   20c50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20c54:	mov	r9, #1
   20c58:	cmp	r8, #0
   20c5c:	beq	20c4c <myhtml_namespace_id_by_name@@Base+0xb8>
   20c60:	ldr	r0, [r6, #8]
   20c64:	str	r0, [r8]
   20c68:	mov	r0, r9
   20c6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20c70:	andeq	r2, lr, r4, lsl #9
   20c74:	ldrdeq	r7, [pc], -r8

00020c78 <myhtml_namespace_name_by_id@@Base>:
   20c78:	push	{r4, r5, fp, lr}
   20c7c:	add	fp, sp, #8
   20c80:	mov	r5, r1
   20c84:	cmp	r0, #8
   20c88:	bcc	20ca4 <myhtml_namespace_name_by_id@@Base+0x2c>
   20c8c:	mov	r4, #0
   20c90:	cmp	r5, #0
   20c94:	beq	20cc4 <myhtml_namespace_name_by_id@@Base+0x4c>
   20c98:	mov	r0, r4
   20c9c:	str	r4, [r5]
   20ca0:	pop	{r4, r5, fp, pc}
   20ca4:	ldr	r1, [pc, #32]	; 20ccc <myhtml_namespace_name_by_id@@Base+0x54>
   20ca8:	cmp	r5, #0
   20cac:	add	r1, pc, r1
   20cb0:	add	r4, r1, r0, lsl #3
   20cb4:	beq	20cc4 <myhtml_namespace_name_by_id@@Base+0x4c>
   20cb8:	mov	r0, r4
   20cbc:	bl	1154c <strlen@plt>
   20cc0:	str	r0, [r5]
   20cc4:	mov	r0, r4
   20cc8:	pop	{r4, r5, fp, pc}
   20ccc:	muleq	lr, r0, r4

00020cd0 <myhtml_namespace_url_by_id@@Base>:
   20cd0:	cmp	r0, #8
   20cd4:	bcc	20cec <myhtml_namespace_url_by_id@@Base+0x1c>
   20cd8:	mov	r0, #0
   20cdc:	cmp	r1, #0
   20ce0:	strne	r0, [r1]
   20ce4:	bxne	lr
   20ce8:	bx	lr
   20cec:	ldr	r2, [pc, #36]	; 20d18 <myhtml_namespace_url_by_id@@Base+0x48>
   20cf0:	cmp	r1, #0
   20cf4:	add	r2, pc, r2
   20cf8:	beq	20d0c <myhtml_namespace_url_by_id@@Base+0x3c>
   20cfc:	add	r3, r0, r0, lsl #1
   20d00:	add	r3, r2, r3, lsl #2
   20d04:	ldr	r3, [r3, #4]
   20d08:	str	r3, [r1]
   20d0c:	add	r0, r0, r0, lsl #1
   20d10:	ldr	r0, [r2, r0, lsl #2]
   20d14:	bx	lr
   20d18:	andeq	r7, pc, r4, lsl #17

00020d1c <myhtml_namespace_id_by_url@@Base>:
   20d1c:	mov	r0, #0
   20d20:	bx	lr

00020d24 <myhtml_string_append_with_preprocessing@@Base>:
   20d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d28:	add	fp, sp, #28
   20d2c:	sub	sp, sp, #4
   20d30:	mov	r4, r0
   20d34:	mov	r6, r1
   20d38:	ldr	r0, [r0, #4]
   20d3c:	mov	r7, r3
   20d40:	mov	r5, r2
   20d44:	ldr	r1, [r4, #8]
   20d48:	add	r1, r2, r1
   20d4c:	add	r1, r1, #1
   20d50:	cmp	r1, r0
   20d54:	bcc	20d60 <myhtml_string_append_with_preprocessing@@Base+0x3c>
   20d58:	mov	r0, r4
   20d5c:	bl	11774 <mycore_string_realloc@plt>
   20d60:	cmp	r5, #0
   20d64:	beq	20dd4 <myhtml_string_append_with_preprocessing@@Base+0xb0>
   20d68:	ldr	r0, [r4]
   20d6c:	cmp	r7, #0
   20d70:	beq	20ddc <myhtml_string_append_with_preprocessing@@Base+0xb8>
   20d74:	ldr	r2, [r4, #8]
   20d78:	mov	r1, #0
   20d7c:	mov	r3, #10
   20d80:	ldrb	r7, [r6, r1]
   20d84:	cmp	r7, #13
   20d88:	beq	20db4 <myhtml_string_append_with_preprocessing@@Base+0x90>
   20d8c:	strb	r7, [r0, r2]
   20d90:	ldr	r2, [r4, #8]
   20d94:	add	r1, r1, #1
   20d98:	cmp	r1, r5
   20d9c:	add	r2, r2, #1
   20da0:	str	r2, [r4, #8]
   20da4:	bcs	20e98 <myhtml_string_append_with_preprocessing@@Base+0x174>
   20da8:	ldrb	r7, [r6, r1]
   20dac:	cmp	r7, #13
   20db0:	bne	20d8c <myhtml_string_append_with_preprocessing@@Base+0x68>
   20db4:	strb	r3, [r0, r2]
   20db8:	add	r2, r1, #1
   20dbc:	cmp	r2, r5
   20dc0:	bcs	20eac <myhtml_string_append_with_preprocessing@@Base+0x188>
   20dc4:	ldrb	r7, [r6, r2]
   20dc8:	cmp	r7, #10
   20dcc:	moveq	r1, r2
   20dd0:	b	20d90 <myhtml_string_append_with_preprocessing@@Base+0x6c>
   20dd4:	ldr	r2, [r4, #8]
   20dd8:	b	20e98 <myhtml_string_append_with_preprocessing@@Base+0x174>
   20ddc:	mov	r7, #0
   20de0:	mov	r9, #191	; 0xbf
   20de4:	mov	sl, #189	; 0xbd
   20de8:	mov	r8, #10
   20dec:	ldrb	r1, [r6, r7]
   20df0:	cmp	r1, #0
   20df4:	bne	20e28 <myhtml_string_append_with_preprocessing@@Base+0x104>
   20df8:	b	20e54 <myhtml_string_append_with_preprocessing@@Base+0x130>
   20dfc:	ldr	r2, [r4, #8]
   20e00:	strb	r1, [r0, r2]
   20e04:	ldr	r1, [r4, #8]
   20e08:	add	r7, r7, #1
   20e0c:	cmp	r7, r5
   20e10:	add	r2, r1, #1
   20e14:	str	r2, [r4, #8]
   20e18:	bcs	20e98 <myhtml_string_append_with_preprocessing@@Base+0x174>
   20e1c:	ldrb	r1, [r6, r7]
   20e20:	cmp	r1, #0
   20e24:	beq	20e54 <myhtml_string_append_with_preprocessing@@Base+0x130>
   20e28:	cmp	r1, #13
   20e2c:	bne	20dfc <myhtml_string_append_with_preprocessing@@Base+0xd8>
   20e30:	ldr	r1, [r4, #8]
   20e34:	strb	r8, [r0, r1]
   20e38:	add	r1, r7, #1
   20e3c:	cmp	r1, r5
   20e40:	bcs	20eac <myhtml_string_append_with_preprocessing@@Base+0x188>
   20e44:	ldrb	r2, [r6, r1]
   20e48:	cmp	r2, #10
   20e4c:	moveq	r7, r1
   20e50:	b	20e04 <myhtml_string_append_with_preprocessing@@Base+0xe0>
   20e54:	ldr	r0, [r4, #4]
   20e58:	add	r1, r0, #5
   20e5c:	mov	r0, r4
   20e60:	bl	11774 <mycore_string_realloc@plt>
   20e64:	ldr	r0, [r4]
   20e68:	ldr	r1, [r4, #8]
   20e6c:	mov	r2, #239	; 0xef
   20e70:	strb	r2, [r0, r1]
   20e74:	ldr	r1, [r4, #8]
   20e78:	add	r1, r1, #1
   20e7c:	str	r1, [r4, #8]
   20e80:	strb	r9, [r0, r1]
   20e84:	ldr	r1, [r4, #8]
   20e88:	add	r1, r1, #1
   20e8c:	str	r1, [r4, #8]
   20e90:	strb	sl, [r0, r1]
   20e94:	b	20e04 <myhtml_string_append_with_preprocessing@@Base+0xe0>
   20e98:	ldr	r1, [r4]
   20e9c:	mov	r0, #0
   20ea0:	strb	r0, [r1, r2]
   20ea4:	sub	sp, fp, #28
   20ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20eac:	ldr	r1, [r4, #8]
   20eb0:	ldr	r2, [r4, #4]
   20eb4:	add	r0, r1, #1
   20eb8:	cmp	r0, r2
   20ebc:	str	r0, [r4, #8]
   20ec0:	bcc	20ed4 <myhtml_string_append_with_preprocessing@@Base+0x1b0>
   20ec4:	add	r1, r1, #3
   20ec8:	mov	r0, r4
   20ecc:	bl	11774 <mycore_string_realloc@plt>
   20ed0:	ldr	r0, [r4, #8]
   20ed4:	ldr	r1, [r4]
   20ed8:	mov	r2, #0
   20edc:	strb	r2, [r1, r0]
   20ee0:	ldr	r0, [r4, #8]
   20ee4:	sub	sp, fp, #28
   20ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020eec <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   20eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ef0:	add	fp, sp, #28
   20ef4:	sub	sp, sp, #4
   20ef8:	mov	r4, r0
   20efc:	mov	r6, r1
   20f00:	ldr	r0, [r0, #4]
   20f04:	mov	r7, r3
   20f08:	mov	r5, r2
   20f0c:	ldr	r1, [r4, #8]
   20f10:	add	r1, r2, r1
   20f14:	add	r1, r1, #1
   20f18:	cmp	r1, r0
   20f1c:	bcc	20f28 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x3c>
   20f20:	mov	r0, r4
   20f24:	bl	11774 <mycore_string_realloc@plt>
   20f28:	cmp	r5, #0
   20f2c:	beq	20fac <myhtml_string_append_lowercase_with_preprocessing@@Base+0xc0>
   20f30:	ldr	r0, [r4]
   20f34:	cmp	r7, #0
   20f38:	beq	20fb4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xc8>
   20f3c:	ldr	r3, [pc, #400]	; 210d4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1e8>
   20f40:	mov	r1, #0
   20f44:	mov	ip, #10
   20f48:	add	r3, pc, r3
   20f4c:	ldrb	r2, [r6, r1]
   20f50:	cmp	r2, #13
   20f54:	beq	20f88 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x9c>
   20f58:	ldrb	r2, [r3, r2]
   20f5c:	ldr	r7, [r4, #8]
   20f60:	strb	r2, [r0, r7]
   20f64:	ldr	r2, [r4, #8]
   20f68:	add	r1, r1, #1
   20f6c:	cmp	r1, r5
   20f70:	add	r2, r2, #1
   20f74:	str	r2, [r4, #8]
   20f78:	bcs	2107c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x190>
   20f7c:	ldrb	r2, [r6, r1]
   20f80:	cmp	r2, #13
   20f84:	bne	20f58 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x6c>
   20f88:	ldr	r2, [r4, #8]
   20f8c:	strb	ip, [r0, r2]
   20f90:	add	r2, r1, #1
   20f94:	cmp	r2, r5
   20f98:	bcs	21090 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1a4>
   20f9c:	ldrb	r7, [r6, r2]
   20fa0:	cmp	r7, #10
   20fa4:	moveq	r1, r2
   20fa8:	b	20f64 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x78>
   20fac:	ldr	r2, [r4, #8]
   20fb0:	b	2107c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x190>
   20fb4:	ldr	r9, [pc, #276]	; 210d0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1e4>
   20fb8:	mov	r7, #0
   20fbc:	mov	sl, #189	; 0xbd
   20fc0:	mov	r8, #10
   20fc4:	add	r9, pc, r9
   20fc8:	ldrb	r1, [r6, r7]
   20fcc:	cmp	r1, #0
   20fd0:	bne	21008 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x11c>
   20fd4:	b	21034 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x148>
   20fd8:	ldrb	r1, [r9, r1]
   20fdc:	ldr	r2, [r4, #8]
   20fe0:	strb	r1, [r0, r2]
   20fe4:	ldr	r1, [r4, #8]
   20fe8:	add	r7, r7, #1
   20fec:	cmp	r7, r5
   20ff0:	add	r2, r1, #1
   20ff4:	str	r2, [r4, #8]
   20ff8:	bcs	2107c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x190>
   20ffc:	ldrb	r1, [r6, r7]
   21000:	cmp	r1, #0
   21004:	beq	21034 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x148>
   21008:	cmp	r1, #13
   2100c:	bne	20fd8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xec>
   21010:	ldr	r1, [r4, #8]
   21014:	strb	r8, [r0, r1]
   21018:	add	r1, r7, #1
   2101c:	cmp	r1, r5
   21020:	bcs	21090 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1a4>
   21024:	ldrb	r2, [r6, r1]
   21028:	cmp	r2, #10
   2102c:	moveq	r7, r1
   21030:	b	20fe4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf8>
   21034:	ldr	r0, [r4, #4]
   21038:	add	r1, r0, #5
   2103c:	mov	r0, r4
   21040:	bl	11774 <mycore_string_realloc@plt>
   21044:	ldr	r0, [r4]
   21048:	ldr	r1, [r4, #8]
   2104c:	mov	r2, #239	; 0xef
   21050:	strb	r2, [r0, r1]
   21054:	mov	r2, #191	; 0xbf
   21058:	ldr	r1, [r4, #8]
   2105c:	add	r1, r1, #1
   21060:	str	r1, [r4, #8]
   21064:	strb	r2, [r0, r1]
   21068:	ldr	r1, [r4, #8]
   2106c:	add	r1, r1, #1
   21070:	str	r1, [r4, #8]
   21074:	strb	sl, [r0, r1]
   21078:	b	20fe4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf8>
   2107c:	ldr	r1, [r4]
   21080:	mov	r0, #0
   21084:	strb	r0, [r1, r2]
   21088:	sub	sp, fp, #28
   2108c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21090:	ldr	r1, [r4, #8]
   21094:	ldr	r2, [r4, #4]
   21098:	add	r0, r1, #1
   2109c:	cmp	r0, r2
   210a0:	str	r0, [r4, #8]
   210a4:	bcc	210b8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x1cc>
   210a8:	add	r1, r1, #3
   210ac:	mov	r0, r4
   210b0:	bl	11774 <mycore_string_realloc@plt>
   210b4:	ldr	r0, [r4, #8]
   210b8:	ldr	r1, [r4]
   210bc:	mov	r2, #0
   210c0:	strb	r2, [r1, r0]
   210c4:	ldr	r0, [r4, #8]
   210c8:	sub	sp, fp, #28
   210cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   210d0:	muleq	lr, r3, r2
   210d4:	andeq	r2, lr, pc, lsl #6

000210d8 <myhtml_string_before_append_any_preprocessing@@Base>:
   210d8:	cmp	r2, #0
   210dc:	mov	r0, #0
   210e0:	cmpne	r3, #0
   210e4:	ldrbne	r0, [r1]
   210e8:	subne	r0, r0, #10
   210ec:	clzne	r0, r0
   210f0:	lsrne	r0, r0, #5
   210f4:	bx	lr

000210f8 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   210f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   210fc:	add	fp, sp, #24
   21100:	sub	sp, sp, #32
   21104:	add	r8, sp, #8
   21108:	mov	r7, r0
   2110c:	mov	r4, r3
   21110:	mov	r5, r2
   21114:	mov	r6, r1
   21118:	mov	r0, r8
   2111c:	bl	111f8 <myencoding_result_clean@plt>
   21120:	ldr	r0, [fp, #8]
   21124:	mov	r1, r8
   21128:	mov	r2, r6
   2112c:	mov	r3, r5
   21130:	str	r4, [sp]
   21134:	str	r0, [sp, #4]
   21138:	mov	r0, r7
   2113c:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   21140:	sub	sp, fp, #24
   21144:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00021148 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   21148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2114c:	add	fp, sp, #28
   21150:	sub	sp, sp, #4
   21154:	mov	r4, r0
   21158:	mov	r7, r1
   2115c:	ldr	r0, [r0, #4]
   21160:	ldr	r6, [fp, #8]
   21164:	mov	sl, r3
   21168:	mov	r8, r2
   2116c:	ldr	r1, [r4, #8]
   21170:	add	r1, r3, r1
   21174:	add	r1, r1, #1
   21178:	cmp	r1, r0
   2117c:	bcc	21188 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   21180:	mov	r0, r4
   21184:	bl	11774 <mycore_string_realloc@plt>
   21188:	mov	r0, r6
   2118c:	bl	11678 <myencoding_get_function_by_id@plt>
   21190:	cmp	sl, #0
   21194:	beq	2134c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   21198:	mov	r9, r0
   2119c:	ldr	r0, [fp, #12]
   211a0:	mov	r5, #0
   211a4:	cmp	r0, #0
   211a8:	beq	212b8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x170>
   211ac:	mov	r6, #10
   211b0:	b	211d8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   211b4:	ldrb	r2, [r8, r1]
   211b8:	cmp	r2, #10
   211bc:	moveq	r5, r1
   211c0:	ldr	r1, [r4, #8]
   211c4:	add	r0, r1, r0
   211c8:	str	r0, [r4, #8]
   211cc:	add	r5, r5, #1
   211d0:	cmp	r5, sl
   211d4:	bcs	2134c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   211d8:	ldrb	r0, [r8, r5]
   211dc:	mov	r1, r7
   211e0:	blx	r9
   211e4:	cmp	r0, #0
   211e8:	bne	211cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x84>
   211ec:	ldr	r0, [r4, #8]
   211f0:	ldr	r1, [r4, #4]
   211f4:	add	r2, r0, #5
   211f8:	cmp	r2, r1
   211fc:	bcc	21210 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   21200:	add	r1, r0, #6
   21204:	mov	r0, r4
   21208:	bl	11774 <mycore_string_realloc@plt>
   2120c:	ldr	r0, [r4, #8]
   21210:	ldr	r1, [r4]
   21214:	add	r1, r1, r0
   21218:	ldr	r0, [r7, #12]
   2121c:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   21220:	cmp	r0, #1
   21224:	bne	211c0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   21228:	ldr	r1, [r4]
   2122c:	ldr	r2, [r4, #8]
   21230:	ldrb	r3, [r1, r2]
   21234:	cmp	r3, #13
   21238:	bne	211c0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   2123c:	strb	r6, [r1, r2]
   21240:	add	r1, r5, #1
   21244:	cmp	r1, sl
   21248:	bcc	211b4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x6c>
   2124c:	b	2137c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x234>
   21250:	ldr	r0, [r4, #4]
   21254:	add	r1, r0, #5
   21258:	mov	r0, r4
   2125c:	bl	11774 <mycore_string_realloc@plt>
   21260:	ldr	r0, [r4]
   21264:	ldr	r1, [r4, #8]
   21268:	mov	r2, #239	; 0xef
   2126c:	strb	r2, [r0, r1]
   21270:	mov	r2, #191	; 0xbf
   21274:	ldr	r1, [r4, #8]
   21278:	ldr	r0, [r4]
   2127c:	add	r1, r1, #1
   21280:	str	r1, [r4, #8]
   21284:	strb	r2, [r0, r1]
   21288:	mov	r2, #189	; 0xbd
   2128c:	ldr	r1, [r4, #8]
   21290:	ldr	r0, [r4]
   21294:	add	r1, r1, #1
   21298:	str	r1, [r4, #8]
   2129c:	strb	r2, [r0, r1]
   212a0:	ldr	r0, [r4, #8]
   212a4:	add	r0, r0, r6
   212a8:	str	r0, [r4, #8]
   212ac:	add	r5, r5, #1
   212b0:	cmp	r5, sl
   212b4:	bcs	2134c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   212b8:	ldrb	r0, [r8, r5]
   212bc:	mov	r1, r7
   212c0:	blx	r9
   212c4:	cmp	r0, #0
   212c8:	bne	212ac <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x164>
   212cc:	ldr	r0, [r4, #8]
   212d0:	ldr	r1, [r4, #4]
   212d4:	add	r2, r0, #5
   212d8:	cmp	r2, r1
   212dc:	bcc	212f0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a8>
   212e0:	add	r1, r0, #6
   212e4:	mov	r0, r4
   212e8:	bl	11774 <mycore_string_realloc@plt>
   212ec:	ldr	r0, [r4, #8]
   212f0:	ldr	r1, [r4]
   212f4:	add	r1, r1, r0
   212f8:	ldr	r0, [r7, #12]
   212fc:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   21300:	mov	r6, r0
   21304:	cmp	r0, #1
   21308:	bne	212a0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   2130c:	ldr	r0, [r4]
   21310:	ldr	r1, [r4, #8]
   21314:	ldrb	r2, [r0, r1]
   21318:	cmp	r2, #0
   2131c:	beq	21250 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x108>
   21320:	cmp	r2, #13
   21324:	bne	212a0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   21328:	mov	r2, #10
   2132c:	strb	r2, [r0, r1]
   21330:	add	r0, r5, #1
   21334:	cmp	r0, sl
   21338:	bcs	2137c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x234>
   2133c:	ldrb	r1, [r8, r0]
   21340:	cmp	r1, #10
   21344:	moveq	r5, r0
   21348:	b	212a0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   2134c:	ldmib	r4, {r0, r1}
   21350:	cmp	r1, r0
   21354:	bcc	21368 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   21358:	add	r1, r1, #1
   2135c:	mov	r0, r4
   21360:	bl	11774 <mycore_string_realloc@plt>
   21364:	ldr	r1, [r4, #8]
   21368:	ldr	r2, [r4]
   2136c:	mov	r0, #0
   21370:	strb	r0, [r2, r1]
   21374:	sub	sp, fp, #28
   21378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2137c:	ldr	r1, [r4, #8]
   21380:	ldr	r2, [r4, #4]
   21384:	add	r0, r1, #1
   21388:	cmp	r0, r2
   2138c:	str	r0, [r4, #8]
   21390:	bcc	213a4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x25c>
   21394:	add	r1, r1, #3
   21398:	mov	r0, r4
   2139c:	bl	11774 <mycore_string_realloc@plt>
   213a0:	ldr	r0, [r4, #8]
   213a4:	ldr	r1, [r4]
   213a8:	mov	r2, #0
   213ac:	strb	r2, [r1, r0]
   213b0:	ldr	r0, [r4, #8]
   213b4:	sub	sp, fp, #28
   213b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000213bc <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   213bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   213c0:	add	fp, sp, #24
   213c4:	sub	sp, sp, #32
   213c8:	add	r8, sp, #8
   213cc:	mov	r7, r0
   213d0:	mov	r4, r3
   213d4:	mov	r5, r2
   213d8:	mov	r6, r1
   213dc:	mov	r0, r8
   213e0:	bl	111f8 <myencoding_result_clean@plt>
   213e4:	ldr	r0, [fp, #8]
   213e8:	mov	r1, r8
   213ec:	mov	r2, r6
   213f0:	mov	r3, r5
   213f4:	str	r4, [sp]
   213f8:	str	r0, [sp, #4]
   213fc:	mov	r0, r7
   21400:	bl	11a5c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   21404:	sub	sp, fp, #24
   21408:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002140c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   2140c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21410:	add	fp, sp, #28
   21414:	sub	sp, sp, #4
   21418:	mov	r4, r0
   2141c:	mov	r7, r1
   21420:	ldr	r0, [r0, #4]
   21424:	ldr	r6, [fp, #8]
   21428:	mov	sl, r3
   2142c:	mov	r8, r2
   21430:	ldr	r1, [r4, #8]
   21434:	add	r1, r3, r1
   21438:	add	r1, r1, #1
   2143c:	cmp	r1, r0
   21440:	bcc	2144c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   21444:	mov	r0, r4
   21448:	bl	11774 <mycore_string_realloc@plt>
   2144c:	mov	r0, r6
   21450:	bl	11678 <myencoding_get_function_by_id@plt>
   21454:	cmp	sl, #0
   21458:	beq	21610 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   2145c:	mov	r9, r0
   21460:	ldr	r0, [fp, #12]
   21464:	mov	r5, #0
   21468:	cmp	r0, #0
   2146c:	beq	2157c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x170>
   21470:	mov	r6, #10
   21474:	b	2149c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   21478:	ldrb	r2, [r8, r1]
   2147c:	cmp	r2, #10
   21480:	moveq	r5, r1
   21484:	ldr	r1, [r4, #8]
   21488:	add	r0, r1, r0
   2148c:	str	r0, [r4, #8]
   21490:	add	r5, r5, #1
   21494:	cmp	r5, sl
   21498:	bcs	21610 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   2149c:	ldrb	r0, [r8, r5]
   214a0:	mov	r1, r7
   214a4:	blx	r9
   214a8:	cmp	r0, #0
   214ac:	bne	21490 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x84>
   214b0:	ldr	r0, [r4, #8]
   214b4:	ldr	r1, [r4, #4]
   214b8:	add	r2, r0, #5
   214bc:	cmp	r2, r1
   214c0:	bcc	214d4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   214c4:	add	r1, r0, #6
   214c8:	mov	r0, r4
   214cc:	bl	11774 <mycore_string_realloc@plt>
   214d0:	ldr	r0, [r4, #8]
   214d4:	ldr	r1, [r4]
   214d8:	add	r1, r1, r0
   214dc:	ldr	r0, [r7, #12]
   214e0:	bl	10e5c <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   214e4:	cmp	r0, #1
   214e8:	bne	21484 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   214ec:	ldr	r1, [r4]
   214f0:	ldr	r2, [r4, #8]
   214f4:	ldrb	r3, [r1, r2]
   214f8:	cmp	r3, #13
   214fc:	bne	21484 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   21500:	strb	r6, [r1, r2]
   21504:	add	r1, r5, #1
   21508:	cmp	r1, sl
   2150c:	bcc	21478 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x6c>
   21510:	b	21640 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x234>
   21514:	ldr	r0, [r4, #4]
   21518:	add	r1, r0, #5
   2151c:	mov	r0, r4
   21520:	bl	11774 <mycore_string_realloc@plt>
   21524:	ldr	r0, [r4]
   21528:	ldr	r1, [r4, #8]
   2152c:	mov	r2, #239	; 0xef
   21530:	strb	r2, [r0, r1]
   21534:	mov	r2, #191	; 0xbf
   21538:	ldr	r1, [r4, #8]
   2153c:	ldr	r0, [r4]
   21540:	add	r1, r1, #1
   21544:	str	r1, [r4, #8]
   21548:	strb	r2, [r0, r1]
   2154c:	mov	r2, #189	; 0xbd
   21550:	ldr	r1, [r4, #8]
   21554:	ldr	r0, [r4]
   21558:	add	r1, r1, #1
   2155c:	str	r1, [r4, #8]
   21560:	strb	r2, [r0, r1]
   21564:	ldr	r0, [r4, #8]
   21568:	add	r0, r0, r6
   2156c:	str	r0, [r4, #8]
   21570:	add	r5, r5, #1
   21574:	cmp	r5, sl
   21578:	bcs	21610 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x204>
   2157c:	ldrb	r0, [r8, r5]
   21580:	mov	r1, r7
   21584:	blx	r9
   21588:	cmp	r0, #0
   2158c:	bne	21570 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x164>
   21590:	ldr	r0, [r4, #8]
   21594:	ldr	r1, [r4, #4]
   21598:	add	r2, r0, #5
   2159c:	cmp	r2, r1
   215a0:	bcc	215b4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a8>
   215a4:	add	r1, r0, #6
   215a8:	mov	r0, r4
   215ac:	bl	11774 <mycore_string_realloc@plt>
   215b0:	ldr	r0, [r4, #8]
   215b4:	ldr	r1, [r4]
   215b8:	add	r1, r1, r0
   215bc:	ldr	r0, [r7, #12]
   215c0:	bl	10e5c <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   215c4:	mov	r6, r0
   215c8:	cmp	r0, #1
   215cc:	bne	21564 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   215d0:	ldr	r0, [r4]
   215d4:	ldr	r1, [r4, #8]
   215d8:	ldrb	r2, [r0, r1]
   215dc:	cmp	r2, #0
   215e0:	beq	21514 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x108>
   215e4:	cmp	r2, #13
   215e8:	bne	21564 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   215ec:	mov	r2, #10
   215f0:	strb	r2, [r0, r1]
   215f4:	add	r0, r5, #1
   215f8:	cmp	r0, sl
   215fc:	bcs	21640 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x234>
   21600:	ldrb	r1, [r8, r0]
   21604:	cmp	r1, #10
   21608:	moveq	r5, r0
   2160c:	b	21564 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   21610:	ldmib	r4, {r0, r1}
   21614:	cmp	r1, r0
   21618:	bcc	2162c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x220>
   2161c:	add	r1, r1, #1
   21620:	mov	r0, r4
   21624:	bl	11774 <mycore_string_realloc@plt>
   21628:	ldr	r1, [r4, #8]
   2162c:	ldr	r2, [r4]
   21630:	mov	r0, #0
   21634:	strb	r0, [r2, r1]
   21638:	sub	sp, fp, #28
   2163c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21640:	ldr	r1, [r4, #8]
   21644:	ldr	r2, [r4, #4]
   21648:	add	r0, r1, #1
   2164c:	cmp	r0, r2
   21650:	str	r0, [r4, #8]
   21654:	bcc	21668 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x25c>
   21658:	add	r1, r1, #3
   2165c:	mov	r0, r4
   21660:	bl	11774 <mycore_string_realloc@plt>
   21664:	ldr	r0, [r4, #8]
   21668:	ldr	r1, [r4]
   2166c:	mov	r2, #0
   21670:	strb	r2, [r1, r0]
   21674:	ldr	r0, [r4, #8]
   21678:	sub	sp, fp, #28
   2167c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021680 <myhtml_parser_stream@@Base>:
   21680:	push	{r4, sl, fp, lr}
   21684:	add	fp, sp, #8
   21688:	ldr	r0, [r1]
   2168c:	mov	r4, r1
   21690:	ldr	r1, [r0, #184]	; 0xb8
   21694:	tst	r1, #1
   21698:	popne	{r4, sl, fp, pc}
   2169c:	ldr	r1, [r4, #4]
   216a0:	bl	10fac <myhtml_rules_tree_dispatcher@plt>
   216a4:	cmp	r0, #0
   216a8:	beq	216c0 <myhtml_parser_stream@@Base+0x40>
   216ac:	ldr	r0, [r4]
   216b0:	ldr	r1, [r4, #4]
   216b4:	bl	10fac <myhtml_rules_tree_dispatcher@plt>
   216b8:	cmp	r0, #0
   216bc:	bne	216ac <myhtml_parser_stream@@Base+0x2c>
   216c0:	pop	{r4, sl, fp, pc}

000216c4 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   216c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216c8:	add	fp, sp, #28
   216cc:	sub	sp, sp, #20
   216d0:	mov	r4, r0
   216d4:	ldr	r0, [r0, #80]	; 0x50
   216d8:	mov	sl, r1
   216dc:	mov	r1, r3
   216e0:	mov	r5, r3
   216e4:	str	r2, [sp, #16]
   216e8:	bl	11180 <mycore_incoming_buffer_find_by_position@plt>
   216ec:	mov	r7, r0
   216f0:	ldr	r6, [fp, #8]
   216f4:	ldr	r0, [r0, #8]
   216f8:	ldr	r1, [r7, #12]
   216fc:	sub	r8, r5, r1
   21700:	add	r1, r8, r6
   21704:	cmp	r1, r0
   21708:	bls	21828 <myhtml_parser_token_data_to_string_lowercase@@Base+0x164>
   2170c:	cmp	r7, #0
   21710:	beq	2185c <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   21714:	ldr	r2, [sp, #16]
   21718:	mov	r5, #0
   2171c:	cmp	r1, r0
   21720:	add	r2, r2, #8
   21724:	str	r2, [sp, #12]
   21728:	bls	217d0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x10c>
   2172c:	mov	r5, #0
   21730:	sub	r9, r0, r8
   21734:	ldr	r0, [r7]
   21738:	mov	r3, r5
   2173c:	mov	r2, r9
   21740:	add	r1, r0, r8
   21744:	mov	r0, sl
   21748:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   2174c:	cmp	r9, #0
   21750:	beq	217b0 <myhtml_parser_token_data_to_string_lowercase@@Base+0xec>
   21754:	ldr	r1, [r7]
   21758:	sub	r3, r9, r0
   2175c:	add	r0, r0, r8
   21760:	add	r2, r1, r0
   21764:	ldr	r0, [r4, #200]	; 0xc8
   21768:	cmp	r0, #0
   2176c:	beq	21790 <myhtml_parser_token_data_to_string_lowercase@@Base+0xcc>
   21770:	ldr	r1, [sp, #16]
   21774:	ldr	r0, [r1, #4]
   21778:	ldrb	r1, [r1, #61]	; 0x3d
   2177c:	stm	sp, {r0, r1}
   21780:	ldr	r1, [sp, #12]
   21784:	mov	r0, sl
   21788:	bl	11a5c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   2178c:	b	217ac <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   21790:	ldr	r0, [sp, #16]
   21794:	mov	r1, r2
   21798:	mov	r2, r3
   2179c:	ldrb	r5, [r0, #61]	; 0x3d
   217a0:	mov	r0, sl
   217a4:	mov	r3, r5
   217a8:	bl	11c54 <myhtml_string_append_lowercase_with_preprocessing@plt>
   217ac:	mov	r5, r0
   217b0:	ldr	r7, [r7, #20]
   217b4:	cmp	r7, #0
   217b8:	beq	2185c <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   217bc:	ldr	r0, [r7, #8]
   217c0:	sub	r6, r6, r9
   217c4:	mov	r8, #0
   217c8:	cmp	r6, r0
   217cc:	bhi	21730 <myhtml_parser_token_data_to_string_lowercase@@Base+0x6c>
   217d0:	ldr	r0, [r7]
   217d4:	mov	r2, r6
   217d8:	mov	r3, r5
   217dc:	add	r1, r0, r8
   217e0:	mov	r0, sl
   217e4:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   217e8:	cmp	r6, #0
   217ec:	beq	2185c <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   217f0:	ldr	r1, [r7]
   217f4:	sub	r3, r6, r0
   217f8:	add	r0, r0, r8
   217fc:	add	r2, r1, r0
   21800:	ldr	r0, [r4, #200]	; 0xc8
   21804:	cmp	r0, #0
   21808:	beq	21890 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1cc>
   2180c:	ldr	r1, [sp, #16]
   21810:	ldr	r0, [r1, #4]
   21814:	ldrb	r1, [r1, #61]	; 0x3d
   21818:	stm	sp, {r0, r1}
   2181c:	ldr	r1, [sp, #12]
   21820:	mov	r0, sl
   21824:	b	21858 <myhtml_parser_token_data_to_string_lowercase@@Base+0x194>
   21828:	ldr	r0, [r4, #200]	; 0xc8
   2182c:	cmp	r0, #0
   21830:	beq	21868 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a4>
   21834:	ldr	r3, [sp, #16]
   21838:	ldr	r0, [r7]
   2183c:	ldr	r1, [r3, #4]
   21840:	ldrb	r2, [r3, #61]	; 0x3d
   21844:	stm	sp, {r1, r2}
   21848:	add	r2, r0, r8
   2184c:	add	r1, r3, #8
   21850:	mov	r0, sl
   21854:	mov	r3, r6
   21858:	bl	11a5c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   2185c:	ldr	r0, [sl, #8]
   21860:	sub	sp, fp, #28
   21864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21868:	ldr	r0, [r7]
   2186c:	mov	r2, r6
   21870:	add	r1, r0, r8
   21874:	ldr	r0, [sp, #16]
   21878:	ldrb	r3, [r0, #61]	; 0x3d
   2187c:	mov	r0, sl
   21880:	bl	11c54 <myhtml_string_append_lowercase_with_preprocessing@plt>
   21884:	ldr	r0, [sl, #8]
   21888:	sub	sp, fp, #28
   2188c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21890:	ldr	r0, [sp, #16]
   21894:	mov	r1, r2
   21898:	mov	r2, r3
   2189c:	ldrb	r7, [r0, #61]	; 0x3d
   218a0:	mov	r0, sl
   218a4:	mov	r3, r7
   218a8:	bl	11c54 <myhtml_string_append_lowercase_with_preprocessing@plt>
   218ac:	ldr	r0, [sl, #8]
   218b0:	sub	sp, fp, #28
   218b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000218b8 <myhtml_parser_token_data_to_string@@Base>:
   218b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   218bc:	add	fp, sp, #28
   218c0:	sub	sp, sp, #20
   218c4:	mov	r4, r0
   218c8:	ldr	r0, [r0, #80]	; 0x50
   218cc:	mov	sl, r1
   218d0:	mov	r1, r3
   218d4:	mov	r5, r3
   218d8:	str	r2, [sp, #16]
   218dc:	bl	11180 <mycore_incoming_buffer_find_by_position@plt>
   218e0:	mov	r7, r0
   218e4:	ldr	r6, [fp, #8]
   218e8:	ldr	r0, [r0, #8]
   218ec:	ldr	r1, [r7, #12]
   218f0:	sub	r8, r5, r1
   218f4:	add	r1, r8, r6
   218f8:	cmp	r1, r0
   218fc:	bls	21a1c <myhtml_parser_token_data_to_string@@Base+0x164>
   21900:	cmp	r7, #0
   21904:	beq	21a50 <myhtml_parser_token_data_to_string@@Base+0x198>
   21908:	ldr	r2, [sp, #16]
   2190c:	mov	r5, #0
   21910:	cmp	r1, r0
   21914:	add	r2, r2, #8
   21918:	str	r2, [sp, #12]
   2191c:	bls	219c4 <myhtml_parser_token_data_to_string@@Base+0x10c>
   21920:	mov	r5, #0
   21924:	sub	r9, r0, r8
   21928:	ldr	r0, [r7]
   2192c:	mov	r3, r5
   21930:	mov	r2, r9
   21934:	add	r1, r0, r8
   21938:	mov	r0, sl
   2193c:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   21940:	cmp	r9, #0
   21944:	beq	219a4 <myhtml_parser_token_data_to_string@@Base+0xec>
   21948:	ldr	r1, [r7]
   2194c:	sub	r3, r9, r0
   21950:	add	r0, r0, r8
   21954:	add	r2, r1, r0
   21958:	ldr	r0, [r4, #200]	; 0xc8
   2195c:	cmp	r0, #0
   21960:	beq	21984 <myhtml_parser_token_data_to_string@@Base+0xcc>
   21964:	ldr	r1, [sp, #16]
   21968:	ldr	r0, [r1, #4]
   2196c:	ldrb	r1, [r1, #61]	; 0x3d
   21970:	stm	sp, {r0, r1}
   21974:	ldr	r1, [sp, #12]
   21978:	mov	r0, sl
   2197c:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   21980:	b	219a0 <myhtml_parser_token_data_to_string@@Base+0xe8>
   21984:	ldr	r0, [sp, #16]
   21988:	mov	r1, r2
   2198c:	mov	r2, r3
   21990:	ldrb	r5, [r0, #61]	; 0x3d
   21994:	mov	r0, sl
   21998:	mov	r3, r5
   2199c:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   219a0:	mov	r5, r0
   219a4:	ldr	r7, [r7, #20]
   219a8:	cmp	r7, #0
   219ac:	beq	21a50 <myhtml_parser_token_data_to_string@@Base+0x198>
   219b0:	ldr	r0, [r7, #8]
   219b4:	sub	r6, r6, r9
   219b8:	mov	r8, #0
   219bc:	cmp	r6, r0
   219c0:	bhi	21924 <myhtml_parser_token_data_to_string@@Base+0x6c>
   219c4:	ldr	r0, [r7]
   219c8:	mov	r2, r6
   219cc:	mov	r3, r5
   219d0:	add	r1, r0, r8
   219d4:	mov	r0, sl
   219d8:	bl	11948 <myhtml_string_before_append_any_preprocessing@plt>
   219dc:	cmp	r6, #0
   219e0:	beq	21a50 <myhtml_parser_token_data_to_string@@Base+0x198>
   219e4:	ldr	r1, [r7]
   219e8:	sub	r3, r6, r0
   219ec:	add	r0, r0, r8
   219f0:	add	r2, r1, r0
   219f4:	ldr	r0, [r4, #200]	; 0xc8
   219f8:	cmp	r0, #0
   219fc:	beq	21a84 <myhtml_parser_token_data_to_string@@Base+0x1cc>
   21a00:	ldr	r1, [sp, #16]
   21a04:	ldr	r0, [r1, #4]
   21a08:	ldrb	r1, [r1, #61]	; 0x3d
   21a0c:	stm	sp, {r0, r1}
   21a10:	ldr	r1, [sp, #12]
   21a14:	mov	r0, sl
   21a18:	b	21a4c <myhtml_parser_token_data_to_string@@Base+0x194>
   21a1c:	ldr	r0, [r4, #200]	; 0xc8
   21a20:	cmp	r0, #0
   21a24:	beq	21a5c <myhtml_parser_token_data_to_string@@Base+0x1a4>
   21a28:	ldr	r3, [sp, #16]
   21a2c:	ldr	r0, [r7]
   21a30:	ldr	r1, [r3, #4]
   21a34:	ldrb	r2, [r3, #61]	; 0x3d
   21a38:	stm	sp, {r1, r2}
   21a3c:	add	r2, r0, r8
   21a40:	add	r1, r3, #8
   21a44:	mov	r0, sl
   21a48:	mov	r3, r6
   21a4c:	bl	11ac8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   21a50:	ldr	r0, [sl, #8]
   21a54:	sub	sp, fp, #28
   21a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a5c:	ldr	r0, [r7]
   21a60:	mov	r2, r6
   21a64:	add	r1, r0, r8
   21a68:	ldr	r0, [sp, #16]
   21a6c:	ldrb	r3, [r0, #61]	; 0x3d
   21a70:	mov	r0, sl
   21a74:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   21a78:	ldr	r0, [sl, #8]
   21a7c:	sub	sp, fp, #28
   21a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a84:	ldr	r0, [sp, #16]
   21a88:	mov	r1, r2
   21a8c:	mov	r2, r3
   21a90:	ldrb	r7, [r0, #61]	; 0x3d
   21a94:	mov	r0, sl
   21a98:	mov	r3, r7
   21a9c:	bl	11204 <myhtml_string_append_with_preprocessing@plt>
   21aa0:	ldr	r0, [sl, #8]
   21aa4:	sub	sp, fp, #28
   21aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021aac <myhtml_parser_token_data_to_string_charef@@Base>:
   21aac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21ab0:	add	fp, sp, #24
   21ab4:	ldr	r0, [r0, #80]	; 0x50
   21ab8:	mov	r4, r1
   21abc:	mov	r1, r3
   21ac0:	mov	r5, r3
   21ac4:	mov	r8, r2
   21ac8:	bl	11180 <mycore_incoming_buffer_find_by_position@plt>
   21acc:	mov	r7, r0
   21ad0:	ldr	r1, [r0, #8]
   21ad4:	ldr	r0, [r0, #12]
   21ad8:	ldr	r6, [fp, #8]
   21adc:	sub	r0, r5, r0
   21ae0:	add	r2, r0, r6
   21ae4:	cmp	r2, r1
   21ae8:	bls	21b38 <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   21aec:	cmp	r7, #0
   21af0:	beq	21b50 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   21af4:	cmp	r2, r1
   21af8:	bls	21b38 <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   21afc:	sub	r5, r1, r0
   21b00:	ldr	r1, [r7]
   21b04:	mov	r3, r5
   21b08:	add	r2, r1, r0
   21b0c:	mov	r0, r8
   21b10:	mov	r1, r4
   21b14:	bl	115f4 <myhtml_data_process@plt>
   21b18:	ldr	r7, [r7, #20]
   21b1c:	cmp	r7, #0
   21b20:	beq	21b50 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   21b24:	ldr	r1, [r7, #8]
   21b28:	sub	r6, r6, r5
   21b2c:	mov	r0, #0
   21b30:	cmp	r6, r1
   21b34:	bhi	21afc <myhtml_parser_token_data_to_string_charef@@Base+0x50>
   21b38:	ldr	r1, [r7]
   21b3c:	mov	r3, r6
   21b40:	add	r2, r1, r0
   21b44:	mov	r0, r8
   21b48:	mov	r1, r4
   21b4c:	bl	115f4 <myhtml_data_process@plt>
   21b50:	mov	r0, r8
   21b54:	mov	r1, r4
   21b58:	bl	11744 <myhtml_data_process_end@plt>
   21b5c:	ldr	r0, [r4, #8]
   21b60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00021b64 <myhtml_parser_worker@@Base>:
   21b64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b68:	add	fp, sp, #28
   21b6c:	sub	sp, sp, #68	; 0x44
   21b70:	ldm	r1, {r4, r8}
   21b74:	ldr	r1, [r4, #184]	; 0xb8
   21b78:	tst	r1, #3
   21b7c:	beq	21b8c <myhtml_parser_worker@@Base+0x28>
   21b80:	ldr	r1, [r4, #184]	; 0xb8
   21b84:	tst	r1, #2
   21b88:	bne	21d74 <myhtml_parser_worker@@Base+0x210>
   21b8c:	ldr	r2, [r4]
   21b90:	ldr	r1, [r4, #144]	; 0x90
   21b94:	ldr	r3, [r4, #220]	; 0xdc
   21b98:	ldr	r2, [r2, #4]
   21b9c:	cmp	r2, #0
   21ba0:	ldrne	r2, [r2, #12]
   21ba4:	addne	r0, r2, r0
   21ba8:	cmp	r3, #0
   21bac:	ldr	r9, [r1, r0, lsl #2]
   21bb0:	beq	21bc8 <myhtml_parser_worker@@Base+0x64>
   21bb4:	ldr	r2, [r4, #228]	; 0xe4
   21bb8:	mov	r0, r4
   21bbc:	mov	r1, r8
   21bc0:	blx	r3
   21bc4:	str	r0, [r4, #228]	; 0xe4
   21bc8:	ldr	r0, [r8]
   21bcc:	sub	r0, r0, #1
   21bd0:	cmp	r0, #1
   21bd4:	bhi	21c54 <myhtml_parser_worker@@Base+0xf0>
   21bd8:	ldr	r1, [r8, #28]
   21bdc:	ldr	r0, [r4, #4]
   21be0:	add	r7, r8, #4
   21be4:	mov	r2, r7
   21be8:	add	r3, r1, #1
   21bec:	mov	r1, r9
   21bf0:	bl	114f8 <mycore_string_init@plt>
   21bf4:	mov	r0, #0
   21bf8:	str	r0, [r8, #40]	; 0x28
   21bfc:	str	r0, [r8, #44]	; 0x2c
   21c00:	add	r0, sp, #4
   21c04:	bl	11438 <myhtml_data_process_entry_clean@plt>
   21c08:	ldr	r0, [r4, #200]	; 0xc8
   21c0c:	str	r0, [sp, #8]
   21c10:	ldr	r0, [r8, #48]	; 0x30
   21c14:	tst	r0, #512	; 0x200
   21c18:	bne	21d98 <myhtml_parser_worker@@Base+0x234>
   21c1c:	ldr	r0, [r8, #48]	; 0x30
   21c20:	tst	r0, #16
   21c24:	bne	21da0 <myhtml_parser_worker@@Base+0x23c>
   21c28:	ldr	r0, [r8, #48]	; 0x30
   21c2c:	tst	r0, #256	; 0x100
   21c30:	bne	21da0 <myhtml_parser_worker@@Base+0x23c>
   21c34:	ldr	r0, [r8, #28]
   21c38:	ldr	r3, [r8, #24]
   21c3c:	add	r2, sp, #4
   21c40:	mov	r1, r7
   21c44:	str	r0, [sp]
   21c48:	mov	r0, r4
   21c4c:	bl	11870 <myhtml_parser_token_data_to_string@plt>
   21c50:	b	21dd4 <myhtml_parser_worker@@Base+0x270>
   21c54:	ldr	r0, [r8, #40]	; 0x28
   21c58:	cmp	r0, #0
   21c5c:	beq	21dc0 <myhtml_parser_worker@@Base+0x25c>
   21c60:	add	r0, r8, #4
   21c64:	bl	11c90 <mycore_string_clean_all@plt>
   21c68:	ldr	r6, [r8, #40]	; 0x28
   21c6c:	cmp	r6, #0
   21c70:	beq	21dd4 <myhtml_parser_worker@@Base+0x270>
   21c74:	add	r7, sp, #4
   21c78:	mov	sl, #1
   21c7c:	ldr	r0, [r6, #52]	; 0x34
   21c80:	cmp	r0, #0
   21c84:	bne	21cac <myhtml_parser_worker@@Base+0x148>
   21c88:	b	21d04 <myhtml_parser_worker@@Base+0x1a0>
   21c8c:	add	r0, r6, #28
   21c90:	bl	11c90 <mycore_string_clean_all@plt>
   21c94:	ldr	r6, [r6]
   21c98:	cmp	r6, #0
   21c9c:	beq	21dd4 <myhtml_parser_worker@@Base+0x270>
   21ca0:	ldr	r0, [r6, #52]	; 0x34
   21ca4:	cmp	r0, #0
   21ca8:	beq	21d04 <myhtml_parser_worker@@Base+0x1a0>
   21cac:	mov	r0, r7
   21cb0:	bl	11438 <myhtml_data_process_entry_clean@plt>
   21cb4:	ldr	r0, [r4, #200]	; 0xc8
   21cb8:	add	r5, r6, #8
   21cbc:	mov	r2, r5
   21cc0:	str	r0, [sp, #8]
   21cc4:	ldr	r1, [r6, #52]	; 0x34
   21cc8:	ldr	r0, [r4, #4]
   21ccc:	add	r3, r1, #1
   21cd0:	mov	r1, r9
   21cd4:	bl	114f8 <mycore_string_init@plt>
   21cd8:	ldr	r0, [r6, #52]	; 0x34
   21cdc:	ldr	r3, [r6, #48]	; 0x30
   21ce0:	mov	r1, r5
   21ce4:	mov	r2, r7
   21ce8:	str	r0, [sp]
   21cec:	mov	r0, r4
   21cf0:	bl	11c30 <myhtml_parser_token_data_to_string_lowercase@plt>
   21cf4:	ldr	r0, [r6, #60]	; 0x3c
   21cf8:	cmp	r0, #0
   21cfc:	bne	21d18 <myhtml_parser_worker@@Base+0x1b4>
   21d00:	b	21c8c <myhtml_parser_worker@@Base+0x128>
   21d04:	add	r0, r6, #8
   21d08:	bl	11c90 <mycore_string_clean_all@plt>
   21d0c:	ldr	r0, [r6, #60]	; 0x3c
   21d10:	cmp	r0, #0
   21d14:	beq	21c8c <myhtml_parser_worker@@Base+0x128>
   21d18:	mov	r0, r7
   21d1c:	bl	11438 <myhtml_data_process_entry_clean@plt>
   21d20:	ldr	r0, [r4, #200]	; 0xc8
   21d24:	strb	sl, [sp, #64]	; 0x40
   21d28:	add	r5, r6, #28
   21d2c:	mov	r2, r5
   21d30:	str	r0, [sp, #8]
   21d34:	ldr	r1, [r6, #60]	; 0x3c
   21d38:	ldr	r0, [r4, #4]
   21d3c:	add	r3, r1, #1
   21d40:	mov	r1, r9
   21d44:	bl	114f8 <mycore_string_init@plt>
   21d48:	ldr	r0, [r6, #60]	; 0x3c
   21d4c:	ldr	r3, [r6, #56]	; 0x38
   21d50:	mov	r1, r5
   21d54:	mov	r2, r7
   21d58:	str	r0, [sp]
   21d5c:	mov	r0, r4
   21d60:	bl	1136c <myhtml_parser_token_data_to_string_charef@plt>
   21d64:	ldr	r6, [r6]
   21d68:	cmp	r6, #0
   21d6c:	bne	21ca0 <myhtml_parser_worker@@Base+0x13c>
   21d70:	b	21dd4 <myhtml_parser_worker@@Base+0x270>
   21d74:	ldr	r3, [r4, #220]	; 0xdc
   21d78:	cmp	r3, #0
   21d7c:	beq	21dd4 <myhtml_parser_worker@@Base+0x270>
   21d80:	ldr	r2, [r4, #228]	; 0xe4
   21d84:	mov	r0, r4
   21d88:	mov	r1, r8
   21d8c:	blx	r3
   21d90:	str	r0, [r4, #228]	; 0xe4
   21d94:	b	21dd4 <myhtml_parser_worker@@Base+0x270>
   21d98:	mov	r0, #1
   21d9c:	strb	r0, [sp, #65]	; 0x41
   21da0:	ldr	r0, [r8, #28]
   21da4:	ldr	r3, [r8, #24]
   21da8:	add	r2, sp, #4
   21dac:	mov	r1, r7
   21db0:	str	r0, [sp]
   21db4:	mov	r0, r4
   21db8:	bl	1136c <myhtml_parser_token_data_to_string_charef@plt>
   21dbc:	b	21dd4 <myhtml_parser_worker@@Base+0x270>
   21dc0:	mov	r0, #0
   21dc4:	str	r0, [r8, #40]	; 0x28
   21dc8:	str	r0, [r8, #44]	; 0x2c
   21dcc:	add	r0, r8, #4
   21dd0:	bl	11c90 <mycore_string_clean_all@plt>
   21dd4:	ldr	r0, [r8, #48]	; 0x30
   21dd8:	orr	r0, r0, #4
   21ddc:	str	r0, [r8, #48]	; 0x30
   21de0:	ldr	r3, [r4, #224]	; 0xe0
   21de4:	cmp	r3, #0
   21de8:	beq	21e00 <myhtml_parser_worker@@Base+0x29c>
   21dec:	ldr	r2, [r4, #232]	; 0xe8
   21df0:	mov	r0, r4
   21df4:	mov	r1, r8
   21df8:	blx	r3
   21dfc:	str	r0, [r4, #232]	; 0xe8
   21e00:	sub	sp, fp, #28
   21e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021e08 <myhtml_parser_worker_stream@@Base>:
   21e08:	push	{r4, sl, fp, lr}
   21e0c:	add	fp, sp, #8
   21e10:	mov	r4, r1
   21e14:	bl	10ee0 <myhtml_parser_worker@plt>
   21e18:	ldr	r0, [r4]
   21e1c:	ldr	r1, [r0, #184]	; 0xb8
   21e20:	tst	r1, #1
   21e24:	popne	{r4, sl, fp, pc}
   21e28:	ldr	r1, [r4, #4]
   21e2c:	bl	10fac <myhtml_rules_tree_dispatcher@plt>
   21e30:	cmp	r0, #0
   21e34:	beq	21e4c <myhtml_parser_worker_stream@@Base+0x44>
   21e38:	ldr	r0, [r4]
   21e3c:	ldr	r1, [r4, #4]
   21e40:	bl	10fac <myhtml_rules_tree_dispatcher@plt>
   21e44:	cmp	r0, #0
   21e48:	bne	21e38 <myhtml_parser_worker_stream@@Base+0x30>
   21e4c:	pop	{r4, sl, fp, pc}

00021e50 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   21e50:	push	{r4, sl, fp, lr}
   21e54:	add	fp, sp, #8
   21e58:	mov	r4, r1
   21e5c:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   21e60:	add	r0, r4, #4
   21e64:	pop	{r4, sl, fp, lr}
   21e68:	b	11408 <mycore_string_crop_whitespace_from_begin@plt>

00021e6c <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   21e6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21e70:	add	fp, sp, #24
   21e74:	mov	r7, r0
   21e78:	ldr	r0, [r0, #8]
   21e7c:	mov	r4, r1
   21e80:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   21e84:	add	r0, r4, #4
   21e88:	bl	11ab0 <mycore_string_whitespace_from_begin@plt>
   21e8c:	mov	r6, #0
   21e90:	cmp	r0, #0
   21e94:	beq	21f08 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   21e98:	mov	r5, r0
   21e9c:	ldr	r0, [r7, #8]
   21ea0:	ldr	r1, [r7, #40]	; 0x28
   21ea4:	bl	117e0 <myhtml_token_node_create@plt>
   21ea8:	cmp	r0, #0
   21eac:	beq	21f08 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   21eb0:	mov	r8, r0
   21eb4:	ldr	r0, [r7, #4]
   21eb8:	ldr	r1, [r7, #52]	; 0x34
   21ebc:	add	r3, r5, #2
   21ec0:	add	r6, r8, #4
   21ec4:	mov	r2, r6
   21ec8:	bl	114f8 <mycore_string_init@plt>
   21ecc:	ldr	r1, [r4, #4]
   21ed0:	mov	r0, r6
   21ed4:	mov	r2, r5
   21ed8:	bl	116f0 <mycore_string_append@plt>
   21edc:	ldr	r0, [r8, #48]	; 0x30
   21ee0:	mov	r1, r5
   21ee4:	orr	r0, r0, #4
   21ee8:	str	r0, [r8, #48]	; 0x30
   21eec:	ldr	r0, [r4, #4]
   21ef0:	bl	11978 <mchar_async_crop_first_chars_without_cache@plt>
   21ef4:	str	r0, [r4, #4]
   21ef8:	mov	r6, r8
   21efc:	ldr	r0, [r4, #12]
   21f00:	sub	r0, r0, r5
   21f04:	str	r0, [r4, #12]
   21f08:	mov	r0, r6
   21f0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00021f10 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   21f10:	push	{r4, r5, r6, r7, fp, lr}
   21f14:	add	fp, sp, #16
   21f18:	ldr	r0, [r0, #8]
   21f1c:	mov	r4, r1
   21f20:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   21f24:	ldr	r5, [r4, #12]
   21f28:	cmp	r5, #0
   21f2c:	beq	22000 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xf0>
   21f30:	mov	r0, #0
   21f34:	mov	r6, #0
   21f38:	ldr	r3, [r4, #4]
   21f3c:	ldrb	r1, [r3, r0]
   21f40:	cmp	r1, #0
   21f44:	bne	21f80 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x70>
   21f48:	b	21f9c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x8c>
   21f4c:	ldr	r2, [r4, #12]
   21f50:	sub	r1, r0, r5
   21f54:	add	r1, r1, r2
   21f58:	mov	r2, r5
   21f5c:	str	r1, [r4, #12]
   21f60:	mov	r7, r5
   21f64:	sub	r0, r0, r6
   21f68:	add	r1, r3, r2
   21f6c:	sub	r2, r7, r2
   21f70:	add	r0, r3, r0
   21f74:	bl	10f94 <memmove@plt>
   21f78:	add	r6, r6, #1
   21f7c:	sub	r0, r7, #1
   21f80:	add	r0, r0, #1
   21f84:	cmp	r0, r5
   21f88:	bcs	22000 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xf0>
   21f8c:	ldr	r3, [r4, #4]
   21f90:	ldrb	r1, [r3, r0]
   21f94:	cmp	r1, #0
   21f98:	bne	21f80 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x70>
   21f9c:	cmp	r0, r5
   21fa0:	mov	r2, r0
   21fa4:	bcs	21fc8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb8>
   21fa8:	add	r1, r0, #1
   21fac:	cmp	r5, r1
   21fb0:	beq	21f4c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x3c>
   21fb4:	ldrb	r2, [r3, r1]
   21fb8:	add	r1, r1, #1
   21fbc:	cmp	r2, #0
   21fc0:	beq	21fac <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x9c>
   21fc4:	sub	r2, r1, #1
   21fc8:	ldr	r7, [r4, #12]
   21fcc:	sub	r1, r0, r2
   21fd0:	cmp	r2, r5
   21fd4:	add	r1, r1, r7
   21fd8:	mov	r7, r2
   21fdc:	str	r1, [r4, #12]
   21fe0:	bcs	21f64 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x54>
   21fe4:	ldrb	r1, [r3, r7]
   21fe8:	cmp	r1, #0
   21fec:	beq	21f64 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x54>
   21ff0:	add	r7, r7, #1
   21ff4:	cmp	r5, r7
   21ff8:	bne	21fe4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xd4>
   21ffc:	b	21f60 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x50>
   22000:	pop	{r4, r5, r6, r7, fp, pc}

00022004 <myhtml_insertion_mode_initial@@Base>:
   22004:	push	{r4, r5, r6, sl, fp, lr}
   22008:	add	fp, sp, #16
   2200c:	mov	r4, r0
   22010:	ldr	r0, [r1]
   22014:	mov	r5, r1
   22018:	cmp	r0, #3
   2201c:	beq	22064 <myhtml_insertion_mode_initial@@Base+0x60>
   22020:	cmp	r0, #2
   22024:	beq	220d8 <myhtml_insertion_mode_initial@@Base+0xd4>
   22028:	cmp	r0, #1
   2202c:	bne	220f0 <myhtml_insertion_mode_initial@@Base+0xec>
   22030:	ldr	r1, [r5, #48]	; 0x30
   22034:	mov	r0, #0
   22038:	tst	r1, #8
   2203c:	bne	220fc <myhtml_insertion_mode_initial@@Base+0xf8>
   22040:	ldr	r0, [r4, #8]
   22044:	mov	r1, r5
   22048:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   2204c:	add	r0, r5, #4
   22050:	bl	11408 <mycore_string_crop_whitespace_from_begin@plt>
   22054:	mov	r0, #1
   22058:	str	r0, [r4, #176]	; 0xb0
   2205c:	str	r0, [r4, #168]	; 0xa8
   22060:	pop	{r4, r5, r6, sl, fp, pc}
   22064:	ldr	r0, [r4, #8]
   22068:	mov	r1, r5
   2206c:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   22070:	ldr	r0, [r4, #8]
   22074:	add	r6, r4, #108	; 0x6c
   22078:	mov	r1, r5
   2207c:	mov	r2, r6
   22080:	bl	10de4 <myhtml_token_release_and_check_doctype_attributes@plt>
   22084:	ldr	r0, [r4, #184]	; 0xb8
   22088:	tst	r0, #8
   2208c:	bne	2209c <myhtml_insertion_mode_initial@@Base+0x98>
   22090:	mov	r0, r4
   22094:	mov	r1, r5
   22098:	bl	11ad4 <myhtml_tree_node_insert_doctype@plt>
   2209c:	ldrb	r0, [r6]
   220a0:	cmp	r0, #0
   220a4:	bne	220c8 <myhtml_insertion_mode_initial@@Base+0xc4>
   220a8:	ldr	r0, [r4, #116]	; 0x74
   220ac:	cmp	r0, #0
   220b0:	beq	220c0 <myhtml_insertion_mode_initial@@Base+0xbc>
   220b4:	ldr	r0, [r4, #120]	; 0x78
   220b8:	cmp	r0, #0
   220bc:	bne	220c8 <myhtml_insertion_mode_initial@@Base+0xc4>
   220c0:	mov	r0, #1
   220c4:	str	r0, [r4, #176]	; 0xb0
   220c8:	mov	r0, #1
   220cc:	str	r0, [r4, #168]	; 0xa8
   220d0:	mov	r0, #0
   220d4:	pop	{r4, r5, r6, sl, fp, pc}
   220d8:	ldr	r2, [r4, #84]	; 0x54
   220dc:	mov	r0, r4
   220e0:	mov	r1, r5
   220e4:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   220e8:	mov	r0, #0
   220ec:	pop	{r4, r5, r6, sl, fp, pc}
   220f0:	mov	r0, #1
   220f4:	str	r0, [r4, #168]	; 0xa8
   220f8:	str	r0, [r4, #176]	; 0xb0
   220fc:	pop	{r4, r5, r6, sl, fp, pc}

00022100 <myhtml_insertion_mode_before_html@@Base>:
   22100:	push	{r4, r5, r6, sl, fp, lr}
   22104:	add	fp, sp, #16
   22108:	mov	r4, r0
   2210c:	mov	r6, r1
   22110:	ldr	r0, [r1]
   22114:	ldr	r1, [r1, #48]	; 0x30
   22118:	tst	r1, #1
   2211c:	bne	22154 <myhtml_insertion_mode_before_html@@Base+0x54>
   22120:	mov	r5, #0
   22124:	cmp	r0, #2
   22128:	bgt	22178 <myhtml_insertion_mode_before_html@@Base+0x78>
   2212c:	cmp	r0, #1
   22130:	beq	22194 <myhtml_insertion_mode_before_html@@Base+0x94>
   22134:	cmp	r0, #2
   22138:	bne	221b4 <myhtml_insertion_mode_before_html@@Base+0xb4>
   2213c:	ldr	r2, [r4, #84]	; 0x54
   22140:	mov	r0, r4
   22144:	mov	r1, r6
   22148:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   2214c:	mov	r0, r5
   22150:	pop	{r4, r5, r6, sl, fp, pc}
   22154:	sub	r1, r0, #23
   22158:	cmp	r1, #2
   2215c:	bcc	221b4 <myhtml_insertion_mode_before_html@@Base+0xb4>
   22160:	cmp	r0, #65	; 0x41
   22164:	beq	221b4 <myhtml_insertion_mode_before_html@@Base+0xb4>
   22168:	mov	r5, #0
   2216c:	cmp	r0, #61	; 0x3d
   22170:	beq	221b4 <myhtml_insertion_mode_before_html@@Base+0xb4>
   22174:	b	221d0 <myhtml_insertion_mode_before_html@@Base+0xd0>
   22178:	cmp	r0, #3
   2217c:	beq	221d0 <myhtml_insertion_mode_before_html@@Base+0xd0>
   22180:	cmp	r0, #65	; 0x41
   22184:	bne	221b4 <myhtml_insertion_mode_before_html@@Base+0xb4>
   22188:	mov	r0, r4
   2218c:	mov	r1, r6
   22190:	b	221c0 <myhtml_insertion_mode_before_html@@Base+0xc0>
   22194:	ldr	r0, [r6, #48]	; 0x30
   22198:	tst	r0, #8
   2219c:	bne	221d0 <myhtml_insertion_mode_before_html@@Base+0xd0>
   221a0:	ldr	r0, [r4, #8]
   221a4:	mov	r1, r6
   221a8:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   221ac:	add	r0, r6, #4
   221b0:	bl	11408 <mycore_string_crop_whitespace_from_begin@plt>
   221b4:	mov	r5, #1
   221b8:	mov	r0, r4
   221bc:	mov	r1, #0
   221c0:	mov	r2, #1
   221c4:	bl	10dc0 <myhtml_tree_node_insert_root@plt>
   221c8:	mov	r0, #2
   221cc:	str	r0, [r4, #168]	; 0xa8
   221d0:	mov	r0, r5
   221d4:	pop	{r4, r5, r6, sl, fp, pc}

000221d8 <myhtml_insertion_mode_before_head@@Base>:
   221d8:	push	{r4, r5, r6, sl, fp, lr}
   221dc:	add	fp, sp, #16
   221e0:	mov	r4, r0
   221e4:	mov	r6, r1
   221e8:	ldr	r0, [r1]
   221ec:	ldr	r1, [r1, #48]	; 0x30
   221f0:	tst	r1, #1
   221f4:	bne	2222c <myhtml_insertion_mode_before_head@@Base+0x54>
   221f8:	mov	r5, #0
   221fc:	cmp	r0, #2
   22200:	ble	22250 <myhtml_insertion_mode_before_head@@Base+0x78>
   22204:	cmp	r0, #3
   22208:	beq	222cc <myhtml_insertion_mode_before_head@@Base+0xf4>
   2220c:	cmp	r0, #61	; 0x3d
   22210:	beq	2227c <myhtml_insertion_mode_before_head@@Base+0xa4>
   22214:	cmp	r0, #65	; 0x41
   22218:	bne	222ac <myhtml_insertion_mode_before_head@@Base+0xd4>
   2221c:	mov	r0, r4
   22220:	mov	r1, r6
   22224:	pop	{r4, r5, r6, sl, fp, lr}
   22228:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   2222c:	sub	r1, r0, #23
   22230:	cmp	r1, #2
   22234:	bcc	222ac <myhtml_insertion_mode_before_head@@Base+0xd4>
   22238:	cmp	r0, #65	; 0x41
   2223c:	beq	222ac <myhtml_insertion_mode_before_head@@Base+0xd4>
   22240:	mov	r5, #0
   22244:	cmp	r0, #61	; 0x3d
   22248:	beq	222ac <myhtml_insertion_mode_before_head@@Base+0xd4>
   2224c:	b	222cc <myhtml_insertion_mode_before_head@@Base+0xf4>
   22250:	cmp	r0, #1
   22254:	beq	2228c <myhtml_insertion_mode_before_head@@Base+0xb4>
   22258:	cmp	r0, #2
   2225c:	bne	222ac <myhtml_insertion_mode_before_head@@Base+0xd4>
   22260:	mov	r0, r4
   22264:	mov	r1, r6
   22268:	mov	r2, #0
   2226c:	mov	r5, #0
   22270:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   22274:	mov	r0, r5
   22278:	pop	{r4, r5, r6, sl, fp, pc}
   2227c:	mov	r0, r4
   22280:	mov	r1, r6
   22284:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   22288:	b	222c0 <myhtml_insertion_mode_before_head@@Base+0xe8>
   2228c:	ldr	r0, [r6, #48]	; 0x30
   22290:	tst	r0, #8
   22294:	bne	222cc <myhtml_insertion_mode_before_head@@Base+0xf4>
   22298:	ldr	r0, [r4, #8]
   2229c:	mov	r1, r6
   222a0:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   222a4:	add	r0, r6, #4
   222a8:	bl	11408 <mycore_string_crop_whitespace_from_begin@plt>
   222ac:	mov	r0, r4
   222b0:	mov	r1, #61	; 0x3d
   222b4:	mov	r2, #1
   222b8:	mov	r5, #1
   222bc:	bl	11780 <myhtml_tree_node_insert@plt>
   222c0:	mov	r1, #3
   222c4:	str	r1, [r4, #168]	; 0xa8
   222c8:	str	r0, [r4, #92]	; 0x5c
   222cc:	mov	r0, r5
   222d0:	pop	{r4, r5, r6, sl, fp, pc}

000222d4 <myhtml_insertion_mode_in_body@@Base>:
   222d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222d8:	add	fp, sp, #28
   222dc:	sub	sp, sp, #12
   222e0:	mov	r8, r0
   222e4:	ldr	r2, [r1]
   222e8:	ldr	r0, [r1, #48]	; 0x30
   222ec:	mov	r6, r1
   222f0:	tst	r0, #1
   222f4:	bne	2272c <myhtml_insertion_mode_in_body@@Base+0x458>
   222f8:	sub	r0, r2, #1
   222fc:	mov	sl, #0
   22300:	cmp	r0, #250	; 0xfa
   22304:	bhi	23664 <myhtml_insertion_mode_in_body@@Base+0x1390>
   22308:	add	r1, pc, #4
   2230c:	ldr	r0, [r1, r0, lsl #2]
   22310:	add	pc, r1, r0
   22314:	andeq	r0, r0, ip, lsl #27
   22318:	andeq	r0, r0, ip, asr #27
   2231c:	andeq	r1, r0, r4, ror #6
   22320:	andeq	r0, r0, ip, ror #27
   22324:	andeq	r1, r0, r0, asr r3
   22328:	andeq	r1, r0, r0, asr r3
   2232c:	andeq	r0, r0, ip, ror #7
   22330:	andeq	r1, r0, r0, asr r3
   22334:	andeq	r0, r0, r8, lsr r9
   22338:	andeq	r0, r0, ip, lsr #16
   2233c:	andeq	r0, r0, ip, ror #7
   22340:	andeq	r0, r0, ip, ror #7
   22344:	andeq	r1, r0, r0, asr r3
   22348:	andeq	r1, r0, r8, lsl r3
   2234c:	andeq	r0, r0, ip, asr #13
   22350:	andeq	r0, r0, ip, asr #13
   22354:	andeq	r1, r0, r0, asr r3
   22358:	andeq	r1, r0, r0, asr r3
   2235c:	andeq	r0, r0, ip, asr #13
   22360:	andeq	r1, r0, r8, lsl r3
   22364:	andeq	r1, r0, r0, asr r3
   22368:	andeq	r0, r0, ip, ror #7
   2236c:	andeq	r0, r0, r0, asr lr
   22370:	andeq	r0, r0, ip, lsr #16
   22374:	andeq	r0, r0, r8, ror #29
   22378:	andeq	r1, r0, r0, asr r3
   2237c:	andeq	r1, r0, r4, ror #6
   22380:	andeq	r0, r0, ip, ror #7
   22384:	andeq	r1, r0, r0, asr r3
   22388:	andeq	r1, r0, r8, lsl r3
   2238c:	andeq	r1, r0, r4, ror #6
   22390:	andeq	r1, r0, r4, ror #6
   22394:	andeq	r1, r0, r0, asr r3
   22398:	andeq	r1, r0, r0, asr r3
   2239c:	andeq	r1, r0, r0, asr r3
   223a0:	andeq	r0, r0, r0, ror r9
   223a4:	andeq	r1, r0, r0, asr r3
   223a8:	andeq	r0, r0, ip, ror #7
   223ac:	andeq	r1, r0, r0, asr r3
   223b0:	andeq	r0, r0, ip, ror #7
   223b4:	andeq	r0, r0, ip, ror #7
   223b8:	andeq	r0, r0, ip, ror #7
   223bc:	andeq	r0, r0, ip, ror #7
   223c0:	andeq	r0, r0, r0, ror r9
   223c4:	andeq	r1, r0, r8, lsl r3
   223c8:	andeq	r0, r0, ip, lsr #16
   223cc:	andeq	r0, r0, ip, ror #7
   223d0:	andeq	r0, r0, ip, ror #7
   223d4:	andeq	r0, r0, ip, ror #7
   223d8:	andeq	r1, r0, r8, lsl r3
   223dc:	andeq	r0, r0, ip, ror #7
   223e0:	andeq	r0, r0, r0, asr #30
   223e4:	andeq	r1, r0, r4, ror #6
   223e8:			; <UNDEFINED> instruction: 0x00000fb8
   223ec:	andeq	r0, r0, r8, lsr r8
   223f0:	andeq	r0, r0, r8, lsr r8
   223f4:	andeq	r0, r0, r8, lsr r8
   223f8:	andeq	r0, r0, r8, lsr r8
   223fc:	andeq	r0, r0, r8, lsr r8
   22400:	andeq	r0, r0, r8, lsr r8
   22404:	andeq	r1, r0, r4, ror #6
   22408:	andeq	r0, r0, ip, ror #7
   2240c:	andeq	r0, r0, ip, ror #7
   22410:	andeq	r1, r0, ip, lsr #32
   22414:	andeq	r1, r0, r8, lsr #1
   22418:	andeq	r1, r0, r8, lsl r3
   2241c:	andeq	r1, r0, r4, lsl r5
   22420:	andeq	r1, r0, r4, lsr #2
   22424:	andeq	r0, r0, ip, lsr #16
   22428:	andeq	r1, r0, ip, lsr r1
   2242c:	andeq	r1, r0, r0, asr r3
   22430:	andeq	r1, r0, r0, asr r3
   22434:	andeq	r1, r0, r0, asr r3
   22438:	andeq	r0, r0, ip, lsr #16
   2243c:	andeq	r1, r0, r0, asr r3
   22440:	andeq	r1, r0, r0, asr r3
   22444:	muleq	r0, ip, r1
   22448:	andeq	r0, r0, ip, asr #13
   2244c:	andeq	r0, r0, ip, asr sl
   22450:	andeq	r0, r0, ip, ror #7
   22454:	andeq	r1, r0, r0, asr r3
   22458:	andeq	r1, r0, r0, asr r3
   2245c:	andeq	r0, r0, r8, lsr r9
   22460:	andeq	r1, r0, r4, ror r2
   22464:	andeq	r1, r0, r0, asr #5
   22468:	andeq	r0, r0, ip, asr #13
   2246c:	andeq	r1, r0, r0, asr r3
   22470:	andeq	r1, r0, r0, asr r3
   22474:	andeq	r0, r0, ip, ror #7
   22478:	andeq	r1, r0, r4, ror #5
   2247c:	andeq	r1, r0, r0, ror r3
   22480:	andeq	r0, r0, ip, asr #13
   22484:	andeq	r1, r0, r4, asr #6
   22488:	andeq	r0, r0, r8, lsr r9
   2248c:	andeq	r0, r0, ip, ror #7
   22490:	andeq	r0, r0, r0, lsr #21
   22494:	andeq	r0, r0, r0, lsr #21
   22498:	andeq	r1, r0, r0, asr r3
   2249c:	andeq	r0, r0, ip, ror #7
   224a0:	andeq	r0, r0, r0, ror #18
   224a4:	andeq	r1, r0, ip, ror r3
   224a8:	andeq	r0, r0, ip, asr sl
   224ac:	andeq	r1, r0, r0, asr r3
   224b0:	andeq	r1, r0, r0, asr r3
   224b4:			; <UNDEFINED> instruction: 0x00000abc
   224b8:	andeq	r0, r0, r8, ror #21
   224bc:	andeq	r0, r0, r8, ror #21
   224c0:			; <UNDEFINED> instruction: 0x00000abc
   224c4:	andeq	r1, r0, r0, asr r3
   224c8:	andeq	r1, r0, r8, lsl r3
   224cc:	andeq	r1, r0, r0, asr r3
   224d0:	andeq	r0, r0, ip, asr #13
   224d4:	andeq	r0, r0, ip, ror #7
   224d8:	andeq	r1, r0, r4, asr #7
   224dc:	andeq	r1, r0, r8, lsl r3
   224e0:	andeq	r0, r0, r0, ror #18
   224e4:	andeq	r1, r0, r0, asr r3
   224e8:	andeq	r1, r0, r8, lsl r3
   224ec:	andeq	r1, r0, r8, lsl r3
   224f0:	andeq	r0, r0, ip, asr #13
   224f4:	andeq	r1, r0, r0, asr r3
   224f8:	andeq	r0, r0, ip, ror #7
   224fc:	andeq	r1, r0, r0, asr r3
   22500:	andeq	r1, r0, ip, lsl r4
   22504:	andeq	r1, r0, r4, ror #8
   22508:	andeq	r1, r0, r4, ror #6
   2250c:	andeq	r1, r0, r4, ror #6
   22510:	andeq	r0, r0, ip, asr #13
   22514:			; <UNDEFINED> instruction: 0x000014b0
   22518:	andeq	r1, r0, r4, ror #6
   2251c:	andeq	r1, r0, r4, ror #6
   22520:	andeq	r1, r0, r4, ror #6
   22524:	andeq	r1, r0, r0, asr r3
   22528:	andeq	r0, r0, ip, asr #13
   2252c:	andeq	r1, r0, r4, ror #6
   22530:	andeq	r0, r0, r0, ror #18
   22534:	andeq	r1, r0, r8, lsl r3
   22538:	andeq	r1, r0, r8, lsl r3
   2253c:	andeq	r0, r0, ip, ror #7
   22540:	andeq	r1, r0, r0, asr r3
   22544:	andeq	r1, r0, r0, asr r3
   22548:	andeq	r0, r0, ip, lsr #16
   2254c:	andeq	r1, r0, r4, ror #9
   22550:	andeq	r1, r0, r0, asr r3
   22554:	andeq	r1, r0, r0, asr r3
   22558:	andeq	r1, r0, r0, asr r3
   2255c:	andeq	r1, r0, r0, asr r3
   22560:	andeq	r1, r0, r0, asr r3
   22564:	andeq	r1, r0, r0, asr r3
   22568:	andeq	r1, r0, r0, asr r3
   2256c:	andeq	r1, r0, r0, asr r3
   22570:	andeq	r1, r0, r0, asr r3
   22574:	andeq	r1, r0, r0, asr r3
   22578:	andeq	r1, r0, r0, asr r3
   2257c:	andeq	r1, r0, r0, asr r3
   22580:	andeq	r1, r0, r0, asr r3
   22584:	andeq	r1, r0, r0, asr r3
   22588:	andeq	r1, r0, r0, asr r3
   2258c:	andeq	r1, r0, r0, asr r3
   22590:	andeq	r1, r0, r0, asr r3
   22594:	andeq	r1, r0, r0, asr r3
   22598:	andeq	r1, r0, r0, asr r3
   2259c:	andeq	r1, r0, r0, asr r3
   225a0:	andeq	r1, r0, r0, asr r3
   225a4:	andeq	r1, r0, r0, asr r3
   225a8:	andeq	r1, r0, r0, asr r3
   225ac:	andeq	r1, r0, r0, asr r3
   225b0:	andeq	r1, r0, r0, asr r3
   225b4:	andeq	r1, r0, r0, asr r3
   225b8:	andeq	r1, r0, r0, asr r3
   225bc:	andeq	r1, r0, r0, asr r3
   225c0:	andeq	r1, r0, r0, asr r3
   225c4:	andeq	r1, r0, r0, asr r3
   225c8:	andeq	r1, r0, r0, asr r3
   225cc:	andeq	r1, r0, r0, asr r3
   225d0:	andeq	r1, r0, r0, asr r3
   225d4:	andeq	r1, r0, r0, asr r3
   225d8:	andeq	r1, r0, r0, asr r3
   225dc:	andeq	r1, r0, r0, asr r3
   225e0:	andeq	r1, r0, r0, asr r3
   225e4:	andeq	r1, r0, r0, asr r3
   225e8:	andeq	r1, r0, r0, asr r3
   225ec:	andeq	r1, r0, r0, asr r3
   225f0:	andeq	r1, r0, r0, asr r3
   225f4:	andeq	r1, r0, r0, asr r3
   225f8:	andeq	r1, r0, r0, asr r3
   225fc:	andeq	r1, r0, r0, asr r3
   22600:	andeq	r1, r0, r0, asr r3
   22604:	andeq	r1, r0, r0, asr r3
   22608:	andeq	r1, r0, r0, asr r3
   2260c:	andeq	r1, r0, r0, asr r3
   22610:	andeq	r1, r0, r0, asr r3
   22614:	andeq	r1, r0, r0, asr r3
   22618:	andeq	r1, r0, r0, asr r3
   2261c:	andeq	r1, r0, r0, asr r3
   22620:	andeq	r1, r0, r0, asr r3
   22624:	andeq	r1, r0, r0, asr r3
   22628:	andeq	r1, r0, r0, asr r3
   2262c:	andeq	r1, r0, r0, asr r3
   22630:	andeq	r1, r0, r0, asr r3
   22634:	andeq	r1, r0, r0, asr r3
   22638:	andeq	r1, r0, r0, asr r3
   2263c:	andeq	r1, r0, r0, asr r3
   22640:	andeq	r1, r0, r0, asr r3
   22644:	andeq	r1, r0, r0, asr r3
   22648:	andeq	r1, r0, r0, asr r3
   2264c:	andeq	r1, r0, r0, asr r3
   22650:	andeq	r1, r0, r0, asr r3
   22654:	andeq	r1, r0, r0, asr r3
   22658:	andeq	r1, r0, r0, asr r3
   2265c:	andeq	r1, r0, r0, asr r3
   22660:	andeq	r1, r0, r0, asr r3
   22664:	andeq	r1, r0, r0, asr r3
   22668:	andeq	r1, r0, r0, asr r3
   2266c:	andeq	r1, r0, r0, asr r3
   22670:	andeq	r1, r0, r0, asr r3
   22674:	andeq	r1, r0, r0, asr r3
   22678:	andeq	r1, r0, r8, asr #10
   2267c:	andeq	r1, r0, r0, asr r3
   22680:	andeq	r1, r0, r0, asr r3
   22684:	andeq	r1, r0, r0, asr r3
   22688:	andeq	r1, r0, r0, asr r3
   2268c:	andeq	r1, r0, r0, asr r3
   22690:	andeq	r1, r0, r0, asr r3
   22694:	andeq	r1, r0, r0, asr r3
   22698:	andeq	r1, r0, r0, asr r3
   2269c:	andeq	r1, r0, r0, asr r3
   226a0:	andeq	r1, r0, r0, asr r3
   226a4:	andeq	r1, r0, r0, asr r3
   226a8:	andeq	r1, r0, r0, asr r3
   226ac:	andeq	r1, r0, r0, asr r3
   226b0:	andeq	r1, r0, r0, asr r3
   226b4:	andeq	r1, r0, r0, asr r3
   226b8:	andeq	r1, r0, r0, asr r3
   226bc:	andeq	r1, r0, r0, asr r3
   226c0:	andeq	r1, r0, r0, asr r3
   226c4:	andeq	r1, r0, r0, asr r3
   226c8:	andeq	r1, r0, r0, asr r3
   226cc:	andeq	r1, r0, r0, asr r3
   226d0:	andeq	r1, r0, r0, asr r3
   226d4:	andeq	r1, r0, r0, asr r3
   226d8:	andeq	r1, r0, r0, asr r3
   226dc:	andeq	r1, r0, r0, asr r3
   226e0:	andeq	r1, r0, r0, asr r3
   226e4:	andeq	r1, r0, r0, asr r3
   226e8:	andeq	r1, r0, r0, asr r3
   226ec:	andeq	r1, r0, r0, asr r3
   226f0:	andeq	r1, r0, r0, asr r3
   226f4:	andeq	r1, r0, r0, asr r3
   226f8:	andeq	r1, r0, r0, asr r3
   226fc:	andeq	r1, r0, r0, lsr #11
   22700:	mov	r0, r8
   22704:	mov	r1, #99	; 0x63
   22708:	mov	r2, #1
   2270c:	mov	r3, #32
   22710:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22714:	cmp	r0, #0
   22718:	beq	2366c <myhtml_insertion_mode_in_body@@Base+0x1398>
   2271c:	mov	r0, r8
   22720:	mov	r1, r6
   22724:	bl	1139c <myhtml_tree_tags_close_p@plt>
   22728:	b	2366c <myhtml_insertion_mode_in_body@@Base+0x1398>
   2272c:	sub	r0, r2, #4
   22730:	cmp	r0, #135	; 0x87
   22734:	bhi	22e34 <myhtml_insertion_mode_in_body@@Base+0xb60>
   22738:	add	r1, pc, #4
   2273c:	ldr	r0, [r1, r0, lsl #2]
   22740:	add	pc, r1, r0
   22744:	andeq	r0, r0, r0, lsl #5
   22748:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2274c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22750:	andeq	r0, r0, r0, lsr #4
   22754:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22758:	andeq	r0, r0, r8, asr r4
   2275c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22760:	andeq	r0, r0, r0, lsr #4
   22764:	andeq	r0, r0, r0, lsr #4
   22768:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2276c:	andeq	r0, r0, r0, lsl #5
   22770:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22774:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22778:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2277c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22780:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22784:	andeq	r0, r0, r0, lsl #5
   22788:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2278c:	andeq	r0, r0, r0, lsr #4
   22790:	muleq	r0, r0, r7
   22794:	ldrdeq	r0, [r0], -ip
   22798:	andeq	r0, r0, r0, lsr #4
   2279c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227a4:	andeq	r0, r0, r0, lsr #4
   227a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227ac:	andeq	r0, r0, r0, lsl #5
   227b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227c4:	andeq	r0, r0, r0, asr #9
   227c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227cc:	andeq	r0, r0, r0, lsr #4
   227d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227d4:	andeq	r0, r0, r0, lsr #4
   227d8:	andeq	r0, r0, r0, lsr #4
   227dc:	andeq	r0, r0, r0, lsr #4
   227e0:	andeq	r0, r0, r0, lsr #4
   227e4:	andeq	r0, r0, r0, asr #9
   227e8:	andeq	r0, r0, r0, lsl #5
   227ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   227f0:	andeq	r0, r0, r0, lsr #4
   227f4:	andeq	r0, r0, r0, lsr #4
   227f8:	andeq	r0, r0, r0, lsr #4
   227fc:	andeq	r0, r0, r0, lsl #5
   22800:	andeq	r0, r0, r0, lsr #4
   22804:	andeq	r0, r0, r0, lsl r8
   22808:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2280c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22810:			; <UNDEFINED> instruction: 0x000002b0
   22814:			; <UNDEFINED> instruction: 0x000002b0
   22818:			; <UNDEFINED> instruction: 0x000002b0
   2281c:			; <UNDEFINED> instruction: 0x000002b0
   22820:			; <UNDEFINED> instruction: 0x000002b0
   22824:			; <UNDEFINED> instruction: 0x000002b0
   22828:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2282c:	andeq	r0, r0, r0, lsr #4
   22830:	andeq	r0, r0, r0, lsr #4
   22834:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22838:	andeq	r0, r0, ip, ror r8
   2283c:	andeq	r0, r0, r0, lsl #5
   22840:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22844:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22848:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2284c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22850:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22854:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22858:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2285c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22860:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22864:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22868:	andeq	r0, r0, r8, asr #17
   2286c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22870:	andeq	r0, r0, r0, lsr #4
   22874:	andeq	r0, r0, r0, lsr #4
   22878:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2287c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22880:	andeq	r0, r0, r8, asr r4
   22884:	andeq	r0, r0, r0, lsr #4
   22888:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2288c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22890:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22894:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22898:	andeq	r0, r0, r0, lsr #4
   2289c:	andeq	r0, r0, r0, lsl #5
   228a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228ac:	andeq	r0, r0, r8, asr r4
   228b0:	andeq	r0, r0, r0, lsr #4
   228b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228c0:	andeq	r0, r0, r4, lsl r9
   228c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228cc:	andeq	r0, r0, r0, lsr #4
   228d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228ec:	andeq	r0, r0, r0, lsl #5
   228f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   228f8:	andeq	r0, r0, r0, lsr #4
   228fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22900:	andeq	r0, r0, r0, lsl #5
   22904:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22908:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2290c:	andeq	r0, r0, r0, lsl #5
   22910:	andeq	r0, r0, r0, lsl #5
   22914:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22918:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2291c:	andeq	r0, r0, r0, lsr #4
   22920:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22924:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22928:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2292c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22930:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22934:	muleq	r0, ip, r2
   22938:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2293c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22940:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22944:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22948:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2294c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22950:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22954:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22958:	andeq	r0, r0, r0, lsl #5
   2295c:	andeq	r0, r0, r0, lsl #5
   22960:	andeq	r0, r0, r0, lsr #4
   22964:	mov	r1, r2
   22968:	mov	r0, r8
   2296c:	mov	r2, #1
   22970:	mov	r3, #8
   22974:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22978:	mov	sl, #0
   2297c:	cmp	r0, #0
   22980:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22984:	mov	r0, r8
   22988:	mov	r1, #0
   2298c:	mov	r2, #0
   22990:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   22994:	mov	r0, r8
   22998:	bl	11504 <myhtml_tree_current_node@plt>
   2299c:	ldr	r1, [r6]
   229a0:	bl	11864 <myhtml_is_html_node@plt>
   229a4:	ldr	r1, [r6]
   229a8:	mov	r0, r8
   229ac:	mov	r2, #1
   229b0:	mov	r3, #0
   229b4:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   229b8:	mov	r0, sl
   229bc:	sub	sp, fp, #28
   229c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229c4:	mov	r0, r8
   229c8:	mov	r1, r6
   229cc:	bl	116b4 <myhtml_tree_adoption_agency_algorithm@plt>
   229d0:	mov	sl, #0
   229d4:	mov	r0, sl
   229d8:	sub	sp, fp, #28
   229dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229e0:	mov	r0, r8
   229e4:	mov	r1, r6
   229e8:	sub	sp, fp, #28
   229ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   229f0:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   229f4:	ldr	r0, [r8, #128]	; 0x80
   229f8:	mov	sl, #0
   229fc:	ldr	r4, [r0, #4]
   22a00:	ldr	r7, [r0]
   22a04:	sub	r5, r7, #4
   22a08:	cmp	r4, #0
   22a0c:	bne	22a30 <myhtml_insertion_mode_in_body@@Base+0x75c>
   22a10:	b	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22a14:	add	r0, r0, r1, lsl #2
   22a18:	sub	r4, r4, #1
   22a1c:	ldrb	r0, [r0, #16]
   22a20:	tst	r0, #8
   22a24:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22a28:	cmp	r4, #0
   22a2c:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22a30:	ldr	r0, [r5, r4, lsl #2]
   22a34:	ldr	r1, [r0, #4]
   22a38:	ldr	r0, [r8, #28]
   22a3c:	bl	117f8 <myhtml_tag_get_by_id@plt>
   22a40:	ldr	r1, [r5, r4, lsl #2]
   22a44:	ldr	r2, [r1, #4]
   22a48:	ldr	r1, [r1, #8]
   22a4c:	sub	r2, r2, #55	; 0x37
   22a50:	cmp	r2, #5
   22a54:	bhi	22a14 <myhtml_insertion_mode_in_body@@Base+0x740>
   22a58:	cmp	r1, #1
   22a5c:	bne	22a14 <myhtml_insertion_mode_in_body@@Base+0x740>
   22a60:	mov	r0, r8
   22a64:	mov	r1, #0
   22a68:	mov	r2, #0
   22a6c:	mov	sl, #0
   22a70:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   22a74:	mov	r0, r8
   22a78:	bl	11504 <myhtml_tree_current_node@plt>
   22a7c:	ldr	r1, [r6]
   22a80:	bl	11864 <myhtml_is_html_node@plt>
   22a84:	ldr	r0, [r8, #128]	; 0x80
   22a88:	ldr	r1, [r0, #4]
   22a8c:	cmp	r1, #0
   22a90:	bne	22ab8 <myhtml_insertion_mode_in_body@@Base+0x7e4>
   22a94:	b	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22a98:	ldr	r1, [r0, #4]
   22a9c:	ldr	r1, [r7, r1, lsl #2]
   22aa0:	ldr	r1, [r1, #8]
   22aa4:	cmp	r1, #1
   22aa8:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22aac:	ldr	r1, [r0, #4]
   22ab0:	cmp	r1, #0
   22ab4:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22ab8:	ldr	r1, [r0, #4]
   22abc:	sub	r1, r1, #1
   22ac0:	str	r1, [r0, #4]
   22ac4:	ldr	r1, [r0, #4]
   22ac8:	ldr	r1, [r7, r1, lsl #2]
   22acc:	ldr	r1, [r1, #4]
   22ad0:	cmp	r1, #55	; 0x37
   22ad4:	beq	22a98 <myhtml_insertion_mode_in_body@@Base+0x7c4>
   22ad8:	ldr	r1, [r0, #4]
   22adc:	ldr	r1, [r7, r1, lsl #2]
   22ae0:	ldr	r1, [r1, #4]
   22ae4:	cmp	r1, #56	; 0x38
   22ae8:	beq	22a98 <myhtml_insertion_mode_in_body@@Base+0x7c4>
   22aec:	ldr	r1, [r0, #4]
   22af0:	ldr	r1, [r7, r1, lsl #2]
   22af4:	ldr	r1, [r1, #4]
   22af8:	cmp	r1, #57	; 0x39
   22afc:	beq	22a98 <myhtml_insertion_mode_in_body@@Base+0x7c4>
   22b00:	ldr	r1, [r0, #4]
   22b04:	ldr	r1, [r7, r1, lsl #2]
   22b08:	ldr	r1, [r1, #4]
   22b0c:	cmp	r1, #58	; 0x3a
   22b10:	beq	22a98 <myhtml_insertion_mode_in_body@@Base+0x7c4>
   22b14:	ldr	r1, [r0, #4]
   22b18:	ldr	r1, [r7, r1, lsl #2]
   22b1c:	ldr	r1, [r1, #4]
   22b20:	cmp	r1, #59	; 0x3b
   22b24:	beq	22a98 <myhtml_insertion_mode_in_body@@Base+0x7c4>
   22b28:	ldr	r1, [r0, #4]
   22b2c:	ldr	r1, [r7, r1, lsl #2]
   22b30:	ldr	r1, [r1, #4]
   22b34:	cmp	r1, #60	; 0x3c
   22b38:	bne	22aac <myhtml_insertion_mode_in_body@@Base+0x7d8>
   22b3c:	b	22a98 <myhtml_insertion_mode_in_body@@Base+0x7c4>
   22b40:	mov	r0, r8
   22b44:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   22b48:	b	23388 <myhtml_insertion_mode_in_body@@Base+0x10b4>
   22b4c:	mov	r0, r8
   22b50:	mov	r1, #99	; 0x63
   22b54:	mov	r2, #1
   22b58:	mov	r3, #32
   22b5c:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22b60:	cmp	r0, #0
   22b64:	beq	22b74 <myhtml_insertion_mode_in_body@@Base+0x8a0>
   22b68:	mov	r0, r8
   22b6c:	mov	r1, r6
   22b70:	bl	1139c <myhtml_tree_tags_close_p@plt>
   22b74:	mov	r0, r8
   22b78:	bl	11504 <myhtml_tree_current_node@plt>
   22b7c:	ldr	r1, [r0, #4]
   22b80:	sub	r1, r1, #55	; 0x37
   22b84:	cmp	r1, #5
   22b88:	bhi	2366c <myhtml_insertion_mode_in_body@@Base+0x1398>
   22b8c:	ldr	r0, [r0, #8]
   22b90:	cmp	r0, #1
   22b94:	beq	235c8 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   22b98:	b	2366c <myhtml_insertion_mode_in_body@@Base+0x1398>
   22b9c:	mov	r1, r2
   22ba0:	mov	r0, r8
   22ba4:	mov	r2, #1
   22ba8:	mov	r3, #8
   22bac:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22bb0:	mov	sl, #0
   22bb4:	cmp	r0, #0
   22bb8:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22bbc:	mov	r0, r8
   22bc0:	mov	r1, #0
   22bc4:	mov	r2, #0
   22bc8:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   22bcc:	mov	r0, r8
   22bd0:	bl	11504 <myhtml_tree_current_node@plt>
   22bd4:	ldr	r1, [r6]
   22bd8:	bl	11864 <myhtml_is_html_node@plt>
   22bdc:	ldr	r1, [r6]
   22be0:	mov	r0, r8
   22be4:	mov	r2, #1
   22be8:	mov	r3, #0
   22bec:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   22bf0:	mov	r0, r8
   22bf4:	bl	11af8 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22bf8:	mov	r0, sl
   22bfc:	sub	sp, fp, #28
   22c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c04:	mov	r1, r2
   22c08:	mov	r0, r8
   22c0c:	mov	r2, #1
   22c10:	mov	r3, #8
   22c14:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22c18:	cmp	r0, #0
   22c1c:	beq	229d0 <myhtml_insertion_mode_in_body@@Base+0x6fc>
   22c20:	ldr	r1, [r6]
   22c24:	mov	r0, r8
   22c28:	mov	r2, #1
   22c2c:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   22c30:	mov	r0, r8
   22c34:	bl	11504 <myhtml_tree_current_node@plt>
   22c38:	ldr	r1, [r6]
   22c3c:	bl	11864 <myhtml_is_html_node@plt>
   22c40:	ldr	r1, [r6]
   22c44:	mov	sl, #0
   22c48:	b	229a8 <myhtml_insertion_mode_in_body@@Base+0x6d4>
   22c4c:	mov	r0, r8
   22c50:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   22c54:	mov	r0, r8
   22c58:	mov	r1, r6
   22c5c:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   22c60:	ldr	r0, [r8]
   22c64:	ldr	r1, [r0, #36]	; 0x24
   22c68:	mov	r0, r8
   22c6c:	bl	1115c <myhtml_tree_active_formatting_append@plt>
   22c70:	b	2339c <myhtml_insertion_mode_in_body@@Base+0x10c8>
   22c74:	mov	r0, r8
   22c78:	mov	r1, r6
   22c7c:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   22c80:	b	238a0 <myhtml_insertion_mode_in_body@@Base+0x15cc>
   22c84:	ldr	r0, [r8, #128]	; 0x80
   22c88:	ldr	r1, [r8, #180]	; 0xb4
   22c8c:	ldr	r2, [r8, #180]	; 0xb4
   22c90:	and	r1, r1, #2
   22c94:	eor	r1, r2, r1
   22c98:	str	r1, [r8, #180]	; 0xb4
   22c9c:	ldr	r9, [r0, #4]
   22ca0:	cmp	r9, #0
   22ca4:	beq	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   22ca8:	ldr	r0, [r0]
   22cac:	add	r0, r0, r9, lsl #2
   22cb0:	ldr	r4, [r0, #-4]
   22cb4:	ldr	r0, [r8, #28]
   22cb8:	mov	r7, r4
   22cbc:	ldr	r1, [r7, #4]!
   22cc0:	bl	117f8 <myhtml_tag_get_by_id@plt>
   22cc4:	mov	r5, r0
   22cc8:	mov	r0, r4
   22ccc:	mov	r1, #36	; 0x24
   22cd0:	bl	11864 <myhtml_is_html_node@plt>
   22cd4:	cmp	r0, #0
   22cd8:	bne	2398c <myhtml_insertion_mode_in_body@@Base+0x16b8>
   22cdc:	rsb	r9, r9, #2
   22ce0:	mov	r0, r4
   22ce4:	mov	r1, #44	; 0x2c
   22ce8:	bl	11864 <myhtml_is_html_node@plt>
   22cec:	cmp	r0, #0
   22cf0:	bne	23a90 <myhtml_insertion_mode_in_body@@Base+0x17bc>
   22cf4:	ldr	r0, [r4, #8]
   22cf8:	add	r1, r5, r0, lsl #2
   22cfc:	ldrb	r1, [r1, #16]
   22d00:	tst	r1, #2
   22d04:	beq	22d20 <myhtml_insertion_mode_in_body@@Base+0xa4c>
   22d08:	ldr	r1, [r7]
   22d0c:	cmp	r1, #7
   22d10:	cmpne	r1, #99	; 0x63
   22d14:	bne	22d64 <myhtml_insertion_mode_in_body@@Base+0xa90>
   22d18:	cmp	r0, #1
   22d1c:	bne	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   22d20:	cmp	r9, #1
   22d24:	beq	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   22d28:	ldr	r1, [r8, #128]	; 0x80
   22d2c:	ldr	r0, [r8, #28]
   22d30:	ldr	r1, [r1]
   22d34:	ldr	r4, [r1, -r9, lsl #2]
   22d38:	mov	r7, r4
   22d3c:	ldr	r1, [r7, #4]!
   22d40:	bl	117f8 <myhtml_tag_get_by_id@plt>
   22d44:	mov	r5, r0
   22d48:	mov	r0, r4
   22d4c:	mov	r1, #36	; 0x24
   22d50:	bl	11864 <myhtml_is_html_node@plt>
   22d54:	add	r9, r9, #1
   22d58:	cmp	r0, #0
   22d5c:	beq	22ce0 <myhtml_insertion_mode_in_body@@Base+0xa0c>
   22d60:	b	2398c <myhtml_insertion_mode_in_body@@Base+0x16b8>
   22d64:	cmp	r1, #42	; 0x2a
   22d68:	beq	22d18 <myhtml_insertion_mode_in_body@@Base+0xa44>
   22d6c:	b	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   22d70:	mov	r0, r8
   22d74:	mov	r1, #99	; 0x63
   22d78:	mov	r2, #1
   22d7c:	mov	r3, #32
   22d80:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22d84:	cmp	r0, #0
   22d88:	beq	22d98 <myhtml_insertion_mode_in_body@@Base+0xac4>
   22d8c:	mov	r0, r8
   22d90:	mov	r1, r6
   22d94:	bl	1139c <myhtml_tree_tags_close_p@plt>
   22d98:	mov	r0, r8
   22d9c:	mov	r1, r6
   22da0:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   22da4:	ldr	r0, [r8, #180]	; 0xb4
   22da8:	orr	r0, r0, #192	; 0xc0
   22dac:	str	r0, [r8, #180]	; 0xb4
   22db0:	b	2339c <myhtml_insertion_mode_in_body@@Base+0x10c8>
   22db4:	mov	r0, r8
   22db8:	bl	11504 <myhtml_tree_current_node@plt>
   22dbc:	mov	r1, #97	; 0x61
   22dc0:	bl	11864 <myhtml_is_html_node@plt>
   22dc4:	cmp	r0, #0
   22dc8:	bne	235ec <myhtml_insertion_mode_in_body@@Base+0x1318>
   22dcc:	b	23664 <myhtml_insertion_mode_in_body@@Base+0x1390>
   22dd0:	mov	r0, r8
   22dd4:	mov	r1, #109	; 0x6d
   22dd8:	mov	r2, #1
   22ddc:	mov	r3, #8
   22de0:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22de4:	cmp	r0, #0
   22de8:	beq	22e28 <myhtml_insertion_mode_in_body@@Base+0xb54>
   22dec:	mov	r0, r8
   22df0:	mov	r1, #0
   22df4:	mov	r2, #0
   22df8:	b	22e24 <myhtml_insertion_mode_in_body@@Base+0xb50>
   22dfc:	mov	r0, r8
   22e00:	mov	r1, #109	; 0x6d
   22e04:	mov	r2, #1
   22e08:	mov	r3, #8
   22e0c:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22e10:	cmp	r0, #0
   22e14:	beq	22e28 <myhtml_insertion_mode_in_body@@Base+0xb54>
   22e18:	mov	r0, r8
   22e1c:	mov	r1, #108	; 0x6c
   22e20:	mov	r2, #1
   22e24:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   22e28:	mov	r0, r8
   22e2c:	bl	11504 <myhtml_tree_current_node@plt>
   22e30:	b	2366c <myhtml_insertion_mode_in_body@@Base+0x1398>
   22e34:	ldr	r0, [r8, #128]	; 0x80
   22e38:	mov	sl, #0
   22e3c:	ldr	r0, [r0, #4]
   22e40:	rsb	r4, r0, #1
   22e44:	cmp	r4, #1
   22e48:	bne	22e78 <myhtml_insertion_mode_in_body@@Base+0xba4>
   22e4c:	b	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22e50:	ldr	r0, [r8, #28]
   22e54:	bl	117f8 <myhtml_tag_get_by_id@plt>
   22e58:	ldr	r1, [r7, #8]
   22e5c:	add	r4, r4, #1
   22e60:	add	r0, r0, r1, lsl #2
   22e64:	ldrb	r0, [r0, #16]
   22e68:	tst	r0, #2
   22e6c:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22e70:	cmp	r4, #1
   22e74:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22e78:	ldr	r0, [r8, #128]	; 0x80
   22e7c:	ldr	r0, [r0]
   22e80:	ldr	r7, [r0, -r4, lsl #2]
   22e84:	ldr	r0, [r6]
   22e88:	ldr	r1, [r7, #4]
   22e8c:	cmp	r1, r0
   22e90:	bne	22e50 <myhtml_insertion_mode_in_body@@Base+0xb7c>
   22e94:	ldr	r0, [r7, #8]
   22e98:	cmp	r0, #1
   22e9c:	bne	22e50 <myhtml_insertion_mode_in_body@@Base+0xb7c>
   22ea0:	mov	r0, r8
   22ea4:	mov	r2, #1
   22ea8:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   22eac:	mov	r0, r8
   22eb0:	bl	11504 <myhtml_tree_current_node@plt>
   22eb4:	mov	r0, r8
   22eb8:	mov	r1, r7
   22ebc:	mov	r2, #0
   22ec0:	mov	sl, #0
   22ec4:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   22ec8:	mov	r0, sl
   22ecc:	sub	sp, fp, #28
   22ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ed4:	mov	r0, r8
   22ed8:	mov	r1, #23
   22edc:	mov	r2, #1
   22ee0:	mov	r3, #8
   22ee4:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22ee8:	mov	sl, #0
   22eec:	cmp	r0, #0
   22ef0:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22ef4:	ldr	r0, [r8, #128]	; 0x80
   22ef8:	mvn	r1, #0
   22efc:	ldr	r2, [r0, #4]
   22f00:	add	r1, r1, #1
   22f04:	cmp	r1, r2
   22f08:	bcc	22efc <myhtml_insertion_mode_in_body@@Base+0xc28>
   22f0c:	mov	r0, #18
   22f10:	str	r0, [r8, #168]	; 0xa8
   22f14:	mov	r0, sl
   22f18:	sub	sp, fp, #28
   22f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f20:	ldr	r0, [r6, #40]	; 0x28
   22f24:	cmp	r0, #0
   22f28:	movne	r0, #0
   22f2c:	strne	r0, [r6, #40]	; 0x28
   22f30:	ldr	r0, [r6, #44]	; 0x2c
   22f34:	cmp	r0, #0
   22f38:	movne	r0, #0
   22f3c:	strne	r0, [r6, #44]	; 0x2c
   22f40:	mov	r0, r8
   22f44:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   22f48:	mov	sl, #0
   22f4c:	str	sl, [r6, #48]	; 0x30
   22f50:	b	23388 <myhtml_insertion_mode_in_body@@Base+0x10b4>
   22f54:	mov	r0, r8
   22f58:	mov	r1, #128	; 0x80
   22f5c:	mov	r2, #1
   22f60:	mov	r3, #0
   22f64:	mov	sl, #0
   22f68:	bl	11660 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   22f6c:	cmp	r0, #0
   22f70:	beq	239b8 <myhtml_insertion_mode_in_body@@Base+0x16e4>
   22f74:	mov	r0, r8
   22f78:	mov	r1, #52	; 0x34
   22f7c:	mov	r2, #1
   22f80:	mov	r3, #8
   22f84:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22f88:	cmp	r0, #0
   22f8c:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   22f90:	mov	r0, r8
   22f94:	mov	r1, #0
   22f98:	mov	r2, #0
   22f9c:	mov	sl, #0
   22fa0:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   22fa4:	mov	r0, r8
   22fa8:	bl	11504 <myhtml_tree_current_node@plt>
   22fac:	mov	r1, #52	; 0x34
   22fb0:	bl	11864 <myhtml_is_html_node@plt>
   22fb4:	mov	r0, r8
   22fb8:	mov	r1, #52	; 0x34
   22fbc:	b	229ac <myhtml_insertion_mode_in_body@@Base+0x6d8>
   22fc0:	mov	r0, r8
   22fc4:	mov	r1, #23
   22fc8:	mov	r2, #1
   22fcc:	mov	r3, #8
   22fd0:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   22fd4:	cmp	r0, #0
   22fd8:	beq	229d0 <myhtml_insertion_mode_in_body@@Base+0x6fc>
   22fdc:	ldr	r0, [r8, #128]	; 0x80
   22fe0:	mvn	r1, #0
   22fe4:	ldr	r2, [r0, #4]
   22fe8:	add	r1, r1, #1
   22fec:	cmp	r1, r2
   22ff0:	bcc	22fe4 <myhtml_insertion_mode_in_body@@Base+0xd10>
   22ff4:	mov	r0, #18
   22ff8:	mov	sl, #1
   22ffc:	str	r0, [r8, #168]	; 0xa8
   23000:	mov	r0, sl
   23004:	sub	sp, fp, #28
   23008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2300c:	mov	r0, r8
   23010:	mov	r1, #77	; 0x4d
   23014:	mov	r2, #1
   23018:	mov	r3, #16
   2301c:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   23020:	cmp	r0, #0
   23024:	beq	229d0 <myhtml_insertion_mode_in_body@@Base+0x6fc>
   23028:	mov	r0, r8
   2302c:	mov	r1, #77	; 0x4d
   23030:	mov	r2, #1
   23034:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   23038:	mov	r0, r8
   2303c:	bl	11504 <myhtml_tree_current_node@plt>
   23040:	mov	r1, #77	; 0x4d
   23044:	bl	11864 <myhtml_is_html_node@plt>
   23048:	mov	sl, #0
   2304c:	mov	r0, r8
   23050:	mov	r1, #77	; 0x4d
   23054:	b	229ac <myhtml_insertion_mode_in_body@@Base+0x6d8>
   23058:	mov	r0, r8
   2305c:	mov	r1, #99	; 0x63
   23060:	mov	r2, #1
   23064:	mov	r3, #32
   23068:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   2306c:	cmp	r0, #0
   23070:	bne	23084 <myhtml_insertion_mode_in_body@@Base+0xdb0>
   23074:	mov	r0, r8
   23078:	mov	r1, #99	; 0x63
   2307c:	mov	r2, #1
   23080:	bl	11780 <myhtml_tree_node_insert@plt>
   23084:	mov	r0, r8
   23088:	mov	r1, r6
   2308c:	bl	1139c <myhtml_tree_tags_close_p@plt>
   23090:	mov	sl, #0
   23094:	mov	r0, sl
   23098:	sub	sp, fp, #28
   2309c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   230a0:	ldr	r0, [r6, #48]	; 0x30
   230a4:	tst	r0, #2048	; 0x800
   230a8:	beq	23a6c <myhtml_insertion_mode_in_body@@Base+0x1798>
   230ac:	ldr	r0, [r8, #8]
   230b0:	mov	r1, r6
   230b4:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   230b8:	ldr	r7, [r6, #12]
   230bc:	cmp	r7, #0
   230c0:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   230c4:	mov	r0, #0
   230c8:	mov	r4, #0
   230cc:	ldr	r3, [r6, #4]
   230d0:	ldrb	r1, [r3, r0]
   230d4:	cmp	r1, #0
   230d8:	bne	2390c <myhtml_insertion_mode_in_body@@Base+0x1638>
   230dc:	b	23928 <myhtml_insertion_mode_in_body@@Base+0x1654>
   230e0:	mov	r0, r8
   230e4:	mov	r1, r6
   230e8:	mov	r2, #0
   230ec:	mov	sl, #0
   230f0:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   230f4:	mov	r0, sl
   230f8:	sub	sp, fp, #28
   230fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23100:	mov	r0, r8
   23104:	mov	r1, #4
   23108:	mov	r2, #0
   2310c:	mov	sl, #0
   23110:	bl	11528 <myhtml_tree_active_formatting_between_last_marker@plt>
   23114:	cmp	r0, #0
   23118:	beq	2362c <myhtml_insertion_mode_in_body@@Base+0x1358>
   2311c:	mov	r0, r8
   23120:	mov	r1, r6
   23124:	mov	r2, #4
   23128:	bl	116b4 <myhtml_tree_adoption_agency_algorithm@plt>
   2312c:	mov	r0, r8
   23130:	mov	r1, #4
   23134:	mov	r2, #0
   23138:	bl	11528 <myhtml_tree_active_formatting_between_last_marker@plt>
   2313c:	cmp	r0, #0
   23140:	beq	2362c <myhtml_insertion_mode_in_body@@Base+0x1358>
   23144:	mov	r7, r0
   23148:	mov	r0, r8
   2314c:	mov	r1, r7
   23150:	bl	11240 <myhtml_tree_open_elements_remove@plt>
   23154:	mov	r0, r8
   23158:	mov	r1, r7
   2315c:	bl	116c0 <myhtml_tree_active_formatting_remove@plt>
   23160:	b	2362c <myhtml_insertion_mode_in_body@@Base+0x1358>
   23164:	ldr	r0, [r8, #128]	; 0x80
   23168:	ldr	r1, [r0, #4]
   2316c:	cmp	r1, #2
   23170:	bcc	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23174:	ldr	r0, [r0]
   23178:	ldr	r0, [r0, #4]
   2317c:	ldr	r1, [r0, #4]
   23180:	cmp	r1, #23
   23184:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23188:	ldr	r0, [r0, #8]
   2318c:	cmp	r0, #1
   23190:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23194:	mov	r0, r8
   23198:	mov	r1, #128	; 0x80
   2319c:	mov	r2, #1
   231a0:	mov	r3, #0
   231a4:	mov	sl, #0
   231a8:	bl	11660 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   231ac:	cmp	r0, #0
   231b0:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   231b4:	ldr	r0, [r8, #128]	; 0x80
   231b8:	ldr	r1, [r8, #180]	; 0xb4
   231bc:	ldr	r2, [r8, #180]	; 0xb4
   231c0:	and	r1, r1, #2
   231c4:	eor	r1, r2, r1
   231c8:	str	r1, [r8, #180]	; 0xb4
   231cc:	ldr	r1, [r0, #4]
   231d0:	cmp	r1, #2
   231d4:	bcc	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   231d8:	ldr	r0, [r0]
   231dc:	ldr	r4, [r0, #4]
   231e0:	ldr	r0, [r4, #32]
   231e4:	cmp	r0, #0
   231e8:	bne	23400 <myhtml_insertion_mode_in_body@@Base+0x112c>
   231ec:	str	r6, [r4, #32]
   231f0:	mov	r0, sl
   231f4:	sub	sp, fp, #28
   231f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231fc:	mov	r0, r8
   23200:	mov	r1, #25
   23204:	mov	r2, #1
   23208:	mov	r3, #8
   2320c:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   23210:	cmp	r0, #0
   23214:	beq	2323c <myhtml_insertion_mode_in_body@@Base+0xf68>
   23218:	mov	r0, r8
   2321c:	mov	r1, #0
   23220:	mov	r2, #0
   23224:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   23228:	mov	r0, r8
   2322c:	mov	r1, #25
   23230:	mov	r2, #1
   23234:	mov	r3, #0
   23238:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   2323c:	mov	r0, r8
   23240:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23244:	mov	r0, r8
   23248:	mov	r1, r6
   2324c:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23250:	b	2339c <myhtml_insertion_mode_in_body@@Base+0x10c8>
   23254:	mov	r0, r8
   23258:	mov	r1, #128	; 0x80
   2325c:	mov	r2, #1
   23260:	mov	r3, #0
   23264:	mov	sl, #0
   23268:	bl	11660 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   2326c:	mov	r7, r0
   23270:	cmp	r0, #0
   23274:	bne	23284 <myhtml_insertion_mode_in_body@@Base+0xfb0>
   23278:	ldr	r0, [r8, #104]	; 0x68
   2327c:	cmp	r0, #0
   23280:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23284:	mov	r0, r8
   23288:	mov	r1, #99	; 0x63
   2328c:	mov	r2, #1
   23290:	mov	r3, #32
   23294:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   23298:	cmp	r0, #0
   2329c:	beq	232ac <myhtml_insertion_mode_in_body@@Base+0xfd8>
   232a0:	mov	r0, r8
   232a4:	mov	r1, r6
   232a8:	bl	1139c <myhtml_tree_tags_close_p@plt>
   232ac:	mov	r0, r8
   232b0:	mov	r1, r6
   232b4:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   232b8:	cmp	r7, #0
   232bc:	streq	r0, [r8, #104]	; 0x68
   232c0:	mov	r0, sl
   232c4:	sub	sp, fp, #28
   232c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232cc:	ldr	r0, [r8, #128]	; 0x80
   232d0:	ldr	r1, [r0, #4]
   232d4:	cmp	r1, #2
   232d8:	bcc	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   232dc:	ldr	r0, [r0]
   232e0:	ldr	r0, [r0, #4]
   232e4:	ldr	r1, [r0, #4]
   232e8:	cmp	r1, #23
   232ec:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   232f0:	ldr	r1, [r0, #8]
   232f4:	cmp	r1, #1
   232f8:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   232fc:	ldr	r1, [r8, #180]	; 0xb4
   23300:	tst	r1, #2
   23304:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23308:	bl	11abc <myhtml_tree_node_remove@plt>
   2330c:	mov	r0, r8
   23310:	mov	r1, #65	; 0x41
   23314:	mov	r2, #1
   23318:	mov	r3, #1
   2331c:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   23320:	mov	r0, r8
   23324:	mov	r1, r6
   23328:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   2332c:	mov	r0, #19
   23330:	str	r0, [r8, #168]	; 0xa8
   23334:	mov	r0, sl
   23338:	sub	sp, fp, #28
   2333c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23340:	mov	r0, r8
   23344:	mov	r1, #99	; 0x63
   23348:	mov	r2, #1
   2334c:	mov	r3, #32
   23350:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   23354:	cmp	r0, #0
   23358:	beq	23368 <myhtml_insertion_mode_in_body@@Base+0x1094>
   2335c:	mov	r0, r8
   23360:	mov	r1, r6
   23364:	bl	1139c <myhtml_tree_tags_close_p@plt>
   23368:	mov	r0, r8
   2336c:	bl	11504 <myhtml_tree_current_node@plt>
   23370:	mov	r1, #85	; 0x55
   23374:	bl	11864 <myhtml_is_html_node@plt>
   23378:	cmp	r0, #0
   2337c:	beq	23388 <myhtml_insertion_mode_in_body@@Base+0x10b4>
   23380:	mov	r0, r8
   23384:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   23388:	mov	r0, r8
   2338c:	mov	r1, r6
   23390:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23394:	mov	r0, r8
   23398:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   2339c:	ldr	r0, [r8, #180]	; 0xb4
   233a0:	ldr	r1, [r8, #180]	; 0xb4
   233a4:	and	r0, r0, #2
   233a8:	eor	r0, r1, r0
   233ac:	str	r0, [r8, #180]	; 0xb4
   233b0:	mov	r0, sl
   233b4:	sub	sp, fp, #28
   233b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233bc:	mov	r0, r8
   233c0:	mov	r1, #128	; 0x80
   233c4:	mov	r2, #1
   233c8:	mov	r3, #0
   233cc:	mov	sl, #0
   233d0:	bl	11660 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   233d4:	cmp	r0, #0
   233d8:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   233dc:	ldr	r0, [r8, #128]	; 0x80
   233e0:	ldr	r1, [r0, #4]
   233e4:	cmp	r1, #0
   233e8:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   233ec:	ldr	r0, [r0]
   233f0:	ldr	r4, [r0]
   233f4:	ldr	r0, [r4, #32]
   233f8:	cmp	r0, #0
   233fc:	beq	231ec <myhtml_insertion_mode_in_body@@Base+0xf18>
   23400:	ldr	r0, [r8, #8]
   23404:	mov	r1, r6
   23408:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   2340c:	ldr	r1, [r4, #32]
   23410:	ldr	r0, [r8, #8]
   23414:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   23418:	ldr	r2, [r4, #32]
   2341c:	ldr	r0, [r8, #8]
   23420:	ldr	r3, [r8, #44]	; 0x2c
   23424:	mov	r1, r6
   23428:	bl	11570 <myhtml_token_node_attr_copy_with_check@plt>
   2342c:	mov	r0, sl
   23430:	sub	sp, fp, #28
   23434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23438:	mov	r0, #69	; 0x45
   2343c:	mov	sl, #1
   23440:	str	r0, [r6]
   23444:	mov	r0, sl
   23448:	sub	sp, fp, #28
   2344c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23450:	mov	r0, r8
   23454:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23458:	mov	r0, r8
   2345c:	mov	r1, r6
   23460:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23464:	mov	r0, r8
   23468:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   2346c:	ldr	r0, [r8, #8]
   23470:	mov	r1, r6
   23474:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   23478:	ldr	r0, [r8, #8]
   2347c:	ldr	r2, [pc, #1624]	; 23adc <myhtml_insertion_mode_in_body@@Base+0x1808>
   23480:	mov	r1, #6
   23484:	mov	r3, #4
   23488:	str	r1, [sp, #4]
   2348c:	mov	r1, r6
   23490:	add	r2, pc, r2
   23494:	str	r2, [sp]
   23498:	ldr	r2, [pc, #1600]	; 23ae0 <myhtml_insertion_mode_in_body@@Base+0x180c>
   2349c:	add	r2, pc, r2
   234a0:	bl	10ea4 <myhtml_token_attr_match_case@plt>
   234a4:	cmp	r0, #0
   234a8:	bne	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   234ac:	b	2339c <myhtml_insertion_mode_in_body@@Base+0x10c8>
   234b0:	ldr	r0, [r8, #128]	; 0x80
   234b4:	ldr	r1, [r8, #180]	; 0xb4
   234b8:	ldr	r2, [r8, #180]	; 0xb4
   234bc:	and	r1, r1, #2
   234c0:	eor	r1, r2, r1
   234c4:	str	r1, [r8, #180]	; 0xb4
   234c8:	ldr	r4, [r0, #4]
   234cc:	cmp	r4, #0
   234d0:	beq	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   234d4:	ldr	r0, [r0]
   234d8:	add	r0, r0, r4, lsl #2
   234dc:	ldr	r9, [r0, #-4]
   234e0:	ldr	r0, [r8, #28]
   234e4:	mov	r7, r9
   234e8:	ldr	r1, [r7, #4]!
   234ec:	bl	117f8 <myhtml_tag_get_by_id@plt>
   234f0:	mov	r5, r0
   234f4:	mov	r0, r9
   234f8:	mov	r1, #77	; 0x4d
   234fc:	bl	11864 <myhtml_is_html_node@plt>
   23500:	cmp	r0, #0
   23504:	bne	23a14 <myhtml_insertion_mode_in_body@@Base+0x1740>
   23508:	rsb	r4, r4, #2
   2350c:	ldr	r0, [r9, #8]
   23510:	add	r1, r5, r0, lsl #2
   23514:	ldrb	r1, [r1, #16]
   23518:	tst	r1, #2
   2351c:	beq	23538 <myhtml_insertion_mode_in_body@@Base+0x1264>
   23520:	ldr	r1, [r7]
   23524:	cmp	r1, #7
   23528:	cmpne	r1, #99	; 0x63
   2352c:	bne	2357c <myhtml_insertion_mode_in_body@@Base+0x12a8>
   23530:	cmp	r0, #1
   23534:	bne	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   23538:	cmp	r4, #1
   2353c:	beq	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   23540:	ldr	r1, [r8, #128]	; 0x80
   23544:	ldr	r0, [r8, #28]
   23548:	ldr	r1, [r1]
   2354c:	ldr	r9, [r1, -r4, lsl #2]
   23550:	mov	r7, r9
   23554:	ldr	r1, [r7, #4]!
   23558:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2355c:	mov	r5, r0
   23560:	mov	r0, r9
   23564:	mov	r1, #77	; 0x4d
   23568:	bl	11864 <myhtml_is_html_node@plt>
   2356c:	add	r4, r4, #1
   23570:	cmp	r0, #0
   23574:	beq	2350c <myhtml_insertion_mode_in_body@@Base+0x1238>
   23578:	b	23a14 <myhtml_insertion_mode_in_body@@Base+0x1740>
   2357c:	cmp	r1, #42	; 0x2a
   23580:	beq	23530 <myhtml_insertion_mode_in_body@@Base+0x125c>
   23584:	b	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   23588:	mov	r0, r8
   2358c:	mov	r1, #99	; 0x63
   23590:	mov	r2, #1
   23594:	mov	r3, #32
   23598:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   2359c:	cmp	r0, #0
   235a0:	beq	235b0 <myhtml_insertion_mode_in_body@@Base+0x12dc>
   235a4:	mov	r0, r8
   235a8:	mov	r1, r6
   235ac:	bl	1139c <myhtml_tree_tags_close_p@plt>
   235b0:	mov	r0, r8
   235b4:	bl	11504 <myhtml_tree_current_node@plt>
   235b8:	mov	r1, #85	; 0x55
   235bc:	bl	11864 <myhtml_is_html_node@plt>
   235c0:	cmp	r0, #0
   235c4:	beq	2366c <myhtml_insertion_mode_in_body@@Base+0x1398>
   235c8:	mov	r0, r8
   235cc:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   235d0:	b	2366c <myhtml_insertion_mode_in_body@@Base+0x1398>
   235d4:	mov	r0, r8
   235d8:	bl	11504 <myhtml_tree_current_node@plt>
   235dc:	mov	r1, #85	; 0x55
   235e0:	bl	11864 <myhtml_is_html_node@plt>
   235e4:	cmp	r0, #0
   235e8:	beq	23664 <myhtml_insertion_mode_in_body@@Base+0x1390>
   235ec:	mov	r0, r8
   235f0:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   235f4:	b	23664 <myhtml_insertion_mode_in_body@@Base+0x1390>
   235f8:	mov	r0, r8
   235fc:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23600:	mov	r0, r8
   23604:	mov	r1, #90	; 0x5a
   23608:	mov	r2, #1
   2360c:	mov	r3, #8
   23610:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   23614:	cmp	r0, #0
   23618:	beq	23634 <myhtml_insertion_mode_in_body@@Base+0x1360>
   2361c:	mov	r0, r8
   23620:	mov	r1, r6
   23624:	mov	r2, #90	; 0x5a
   23628:	bl	116b4 <myhtml_tree_adoption_agency_algorithm@plt>
   2362c:	mov	r0, r8
   23630:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23634:	mov	r0, r8
   23638:	mov	r1, r6
   2363c:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23640:	mov	r1, r0
   23644:	mov	r0, r8
   23648:	bl	1166c <myhtml_tree_active_formatting_append_with_check@plt>
   2364c:	mov	r0, sl
   23650:	sub	sp, fp, #28
   23654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23658:	ldr	r0, [r8, #180]	; 0xb4
   2365c:	tst	r0, #1
   23660:	bne	23684 <myhtml_insertion_mode_in_body@@Base+0x13b0>
   23664:	mov	r0, r8
   23668:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   2366c:	mov	r0, r8
   23670:	mov	r1, r6
   23674:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23678:	mov	r0, sl
   2367c:	sub	sp, fp, #28
   23680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23684:	mov	r0, #4
   23688:	str	r0, [r8, #164]	; 0xa4
   2368c:	b	23844 <myhtml_insertion_mode_in_body@@Base+0x1570>
   23690:	mov	r0, r8
   23694:	mov	r1, #99	; 0x63
   23698:	mov	r2, #1
   2369c:	mov	r3, #32
   236a0:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   236a4:	cmp	r0, #0
   236a8:	beq	236b8 <myhtml_insertion_mode_in_body@@Base+0x13e4>
   236ac:	mov	r0, r8
   236b0:	mov	r1, r6
   236b4:	bl	1139c <myhtml_tree_tags_close_p@plt>
   236b8:	mov	r0, r8
   236bc:	mov	r1, r6
   236c0:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   236c4:	mov	r0, #6
   236c8:	str	r0, [r8, #164]	; 0xa4
   236cc:	mov	r0, sl
   236d0:	sub	sp, fp, #28
   236d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236d8:	mov	r0, r8
   236dc:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   236e0:	mov	r0, r8
   236e4:	mov	r1, r6
   236e8:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   236ec:	ldr	r0, [r8, #168]	; 0xa8
   236f0:	ldr	r1, [r8, #180]	; 0xb4
   236f4:	ldr	r2, [r8, #180]	; 0xb4
   236f8:	and	r1, r1, #2
   236fc:	cmp	r0, #14
   23700:	eor	r1, r2, r1
   23704:	str	r1, [r8, #180]	; 0xb4
   23708:	bhi	23ac8 <myhtml_insertion_mode_in_body@@Base+0x17f4>
   2370c:	mov	r1, #1
   23710:	mov	r2, #29952	; 0x7500
   23714:	tst	r2, r1, lsl r0
   23718:	beq	23ac8 <myhtml_insertion_mode_in_body@@Base+0x17f4>
   2371c:	mov	r0, #16
   23720:	str	r0, [r8, #168]	; 0xa8
   23724:	mov	r0, sl
   23728:	sub	sp, fp, #28
   2372c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23730:	mov	r0, r8
   23734:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23738:	ldr	r0, [r8, #8]
   2373c:	mov	r1, r6
   23740:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   23744:	mov	r0, r6
   23748:	bl	11210 <myhtml_token_adjust_svg_attributes@plt>
   2374c:	mov	r0, r6
   23750:	bl	11924 <myhtml_token_adjust_foreign_attributes@plt>
   23754:	mov	r0, r8
   23758:	mov	r1, r6
   2375c:	bl	11a50 <myhtml_tree_node_insert_foreign_element@plt>
   23760:	mov	r1, #3
   23764:	str	r1, [r0, #8]
   23768:	ldr	r0, [r6, #48]	; 0x30
   2376c:	tst	r0, #2
   23770:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23774:	b	238a0 <myhtml_insertion_mode_in_body@@Base+0x15cc>
   23778:	ldrb	r0, [r8, #176]	; 0xb0
   2377c:	tst	r0, #1
   23780:	bne	237ac <myhtml_insertion_mode_in_body@@Base+0x14d8>
   23784:	mov	r0, r8
   23788:	mov	r1, #99	; 0x63
   2378c:	mov	r2, #1
   23790:	mov	r3, #32
   23794:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   23798:	cmp	r0, #0
   2379c:	beq	237ac <myhtml_insertion_mode_in_body@@Base+0x14d8>
   237a0:	mov	r0, r8
   237a4:	mov	r1, r6
   237a8:	bl	1139c <myhtml_tree_tags_close_p@plt>
   237ac:	mov	r0, r8
   237b0:	mov	r1, r6
   237b4:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   237b8:	mov	r0, #8
   237bc:	str	r0, [r8, #168]	; 0xa8
   237c0:	b	2339c <myhtml_insertion_mode_in_body@@Base+0x10c8>
   237c4:	mov	r0, r8
   237c8:	mov	r1, r6
   237cc:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   237d0:	ldr	r0, [r8, #168]	; 0xa8
   237d4:	ldr	r1, [r8, #180]	; 0xb4
   237d8:	mov	r2, #7
   237dc:	orr	r1, r1, #192	; 0xc0
   237e0:	str	r1, [r8, #180]	; 0xb4
   237e4:	mov	r1, #2
   237e8:	str	r1, [r8, #164]	; 0xa4
   237ec:	str	r2, [r8, #168]	; 0xa8
   237f0:	str	r0, [r8, #172]	; 0xac
   237f4:	b	2339c <myhtml_insertion_mode_in_body@@Base+0x10c8>
   237f8:	mov	r0, r8
   237fc:	mov	r1, #99	; 0x63
   23800:	mov	r2, #1
   23804:	mov	r3, #32
   23808:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   2380c:	cmp	r0, #0
   23810:	beq	23820 <myhtml_insertion_mode_in_body@@Base+0x154c>
   23814:	mov	r0, r8
   23818:	mov	r1, r6
   2381c:	bl	1139c <myhtml_tree_tags_close_p@plt>
   23820:	mov	r0, r8
   23824:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23828:	mov	r0, #4
   2382c:	str	r0, [r8, #164]	; 0xa4
   23830:	ldr	r0, [r8, #180]	; 0xb4
   23834:	ldr	r1, [r8, #180]	; 0xb4
   23838:	and	r0, r0, #2
   2383c:	eor	r0, r1, r0
   23840:	str	r0, [r8, #180]	; 0xb4
   23844:	mov	r0, r8
   23848:	mov	r1, r6
   2384c:	bl	11b94 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   23850:	mov	r0, sl
   23854:	sub	sp, fp, #28
   23858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2385c:	mov	r0, r8
   23860:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23864:	ldr	r0, [r8, #8]
   23868:	mov	r1, r6
   2386c:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   23870:	mov	r0, r6
   23874:	bl	1103c <myhtml_token_adjust_mathml_attributes@plt>
   23878:	mov	r0, r6
   2387c:	bl	11924 <myhtml_token_adjust_foreign_attributes@plt>
   23880:	mov	r0, r8
   23884:	mov	r1, r6
   23888:	bl	11a50 <myhtml_tree_node_insert_foreign_element@plt>
   2388c:	mov	r1, #2
   23890:	str	r1, [r0, #8]
   23894:	ldr	r0, [r6, #48]	; 0x30
   23898:	tst	r0, #2
   2389c:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   238a0:	mov	r0, r8
   238a4:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   238a8:	mov	r0, sl
   238ac:	sub	sp, fp, #28
   238b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238b4:	ldr	r0, [r8, #140]	; 0x8c
   238b8:	ldr	r0, [r0, #4]
   238bc:	cmp	r0, #0
   238c0:	beq	23a40 <myhtml_insertion_mode_in_body@@Base+0x176c>
   238c4:	mov	r0, r8
   238c8:	mov	r1, r6
   238cc:	sub	sp, fp, #28
   238d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238d4:	b	24694 <myhtml_insertion_mode_in_template@@Base>
   238d8:	ldr	r2, [r6, #12]
   238dc:	sub	r1, r0, r7
   238e0:	add	r1, r1, r2
   238e4:	mov	r2, r7
   238e8:	str	r1, [r6, #12]
   238ec:	mov	r5, r7
   238f0:	sub	r0, r0, r4
   238f4:	add	r1, r3, r2
   238f8:	sub	r2, r5, r2
   238fc:	add	r0, r3, r0
   23900:	bl	10f94 <memmove@plt>
   23904:	add	r4, r4, #1
   23908:	sub	r0, r5, #1
   2390c:	add	r0, r0, #1
   23910:	cmp	r0, r7
   23914:	bcs	23a5c <myhtml_insertion_mode_in_body@@Base+0x1788>
   23918:	ldr	r3, [r6, #4]
   2391c:	ldrb	r1, [r3, r0]
   23920:	cmp	r1, #0
   23924:	bne	2390c <myhtml_insertion_mode_in_body@@Base+0x1638>
   23928:	cmp	r0, r7
   2392c:	mov	r2, r0
   23930:	bcs	23954 <myhtml_insertion_mode_in_body@@Base+0x1680>
   23934:	add	r1, r0, #1
   23938:	cmp	r7, r1
   2393c:	beq	238d8 <myhtml_insertion_mode_in_body@@Base+0x1604>
   23940:	ldrb	r2, [r3, r1]
   23944:	add	r1, r1, #1
   23948:	cmp	r2, #0
   2394c:	beq	23938 <myhtml_insertion_mode_in_body@@Base+0x1664>
   23950:	sub	r2, r1, #1
   23954:	ldr	r5, [r6, #12]
   23958:	sub	r1, r0, r2
   2395c:	cmp	r2, r7
   23960:	add	r1, r1, r5
   23964:	mov	r5, r2
   23968:	str	r1, [r6, #12]
   2396c:	bcs	238f0 <myhtml_insertion_mode_in_body@@Base+0x161c>
   23970:	ldrb	r1, [r3, r5]
   23974:	cmp	r1, #0
   23978:	beq	238f0 <myhtml_insertion_mode_in_body@@Base+0x161c>
   2397c:	add	r5, r5, #1
   23980:	cmp	r7, r5
   23984:	bne	23970 <myhtml_insertion_mode_in_body@@Base+0x169c>
   23988:	b	238ec <myhtml_insertion_mode_in_body@@Base+0x1618>
   2398c:	mov	r0, r8
   23990:	mov	r1, #36	; 0x24
   23994:	mov	r2, #1
   23998:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   2399c:	mov	r0, r8
   239a0:	bl	11504 <myhtml_tree_current_node@plt>
   239a4:	mov	r1, #36	; 0x24
   239a8:	bl	11864 <myhtml_is_html_node@plt>
   239ac:	mov	r0, r8
   239b0:	mov	r1, #36	; 0x24
   239b4:	b	23ab8 <myhtml_insertion_mode_in_body@@Base+0x17e4>
   239b8:	ldr	r6, [r8, #104]	; 0x68
   239bc:	mov	sl, #0
   239c0:	str	sl, [r8, #104]	; 0x68
   239c4:	cmp	r6, #0
   239c8:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   239cc:	mov	r0, r6
   239d0:	mov	r1, #8
   239d4:	bl	10dfc <myhtml_tree_element_in_scope_by_node@plt>
   239d8:	cmp	r0, #0
   239dc:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   239e0:	mov	r0, r8
   239e4:	mov	r1, #0
   239e8:	mov	r2, #0
   239ec:	mov	sl, #0
   239f0:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   239f4:	mov	r0, r8
   239f8:	bl	11504 <myhtml_tree_current_node@plt>
   239fc:	mov	r0, r8
   23a00:	mov	r1, r6
   23a04:	bl	11240 <myhtml_tree_open_elements_remove@plt>
   23a08:	mov	r0, sl
   23a0c:	sub	sp, fp, #28
   23a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a14:	mov	r0, r8
   23a18:	mov	r1, #77	; 0x4d
   23a1c:	mov	r2, #1
   23a20:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   23a24:	mov	r0, r8
   23a28:	bl	11504 <myhtml_tree_current_node@plt>
   23a2c:	mov	r1, #77	; 0x4d
   23a30:	bl	11864 <myhtml_is_html_node@plt>
   23a34:	mov	r0, r8
   23a38:	mov	r1, #77	; 0x4d
   23a3c:	b	23ab8 <myhtml_insertion_mode_in_body@@Base+0x17e4>
   23a40:	ldr	r0, [r8, #128]	; 0x80
   23a44:	mvn	r1, #0
   23a48:	ldr	r2, [r0, #4]
   23a4c:	add	r1, r1, #1
   23a50:	cmp	r1, r2
   23a54:	bcc	23a48 <myhtml_insertion_mode_in_body@@Base+0x1774>
   23a58:	b	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23a5c:	ldr	r0, [r6, #12]
   23a60:	mov	sl, #0
   23a64:	cmp	r0, #0
   23a68:	beq	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23a6c:	mov	r0, r8
   23a70:	bl	11480 <myhtml_tree_active_formatting_reconstruction@plt>
   23a74:	mov	r0, r8
   23a78:	mov	r1, r6
   23a7c:	bl	11054 <myhtml_tree_node_insert_text@plt>
   23a80:	ldr	r0, [r6, #48]	; 0x30
   23a84:	tst	r0, #8
   23a88:	beq	2339c <myhtml_insertion_mode_in_body@@Base+0x10c8>
   23a8c:	b	23678 <myhtml_insertion_mode_in_body@@Base+0x13a4>
   23a90:	mov	r0, r8
   23a94:	mov	r1, #44	; 0x2c
   23a98:	mov	r2, #1
   23a9c:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   23aa0:	mov	r0, r8
   23aa4:	bl	11504 <myhtml_tree_current_node@plt>
   23aa8:	mov	r1, #44	; 0x2c
   23aac:	bl	11864 <myhtml_is_html_node@plt>
   23ab0:	mov	r0, r8
   23ab4:	mov	r1, #44	; 0x2c
   23ab8:	mov	r2, #1
   23abc:	mov	r3, #0
   23ac0:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   23ac4:	b	22700 <myhtml_insertion_mode_in_body@@Base+0x42c>
   23ac8:	mov	r0, #15
   23acc:	str	r0, [r8, #168]	; 0xa8
   23ad0:	mov	r0, sl
   23ad4:	sub	sp, fp, #28
   23ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23adc:	andeq	pc, sp, r7, asr #29
   23ae0:	andeq	ip, r1, r7, asr ip

00023ae4 <myhtml_insertion_mode_in_head@@Base>:
   23ae4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23ae8:	add	fp, sp, #24
   23aec:	sub	sp, sp, #8
   23af0:	mov	r5, r0
   23af4:	mov	r6, r1
   23af8:	ldr	r0, [r1]
   23afc:	ldr	r1, [r1, #48]	; 0x30
   23b00:	tst	r1, #1
   23b04:	bne	23d5c <myhtml_insertion_mode_in_head@@Base+0x278>
   23b08:	sub	r0, r0, #1
   23b0c:	cmp	r0, #133	; 0x85
   23b10:	bhi	23e5c <myhtml_insertion_mode_in_head@@Base+0x378>
   23b14:	add	r1, pc, #8
   23b18:	mov	r4, #0
   23b1c:	ldr	r0, [r1, r0, lsl #2]
   23b20:	add	pc, r1, r0
   23b24:	andeq	r0, r0, ip, lsl #6
   23b28:	andeq	r0, r0, r8, asr r3
   23b2c:	andeq	r0, r0, ip, ror #5
   23b30:	andeq	r0, r0, r8, lsr r3
   23b34:	andeq	r0, r0, r8, lsr r3
   23b38:	andeq	r0, r0, r8, lsr r3
   23b3c:	andeq	r0, r0, r8, lsr r3
   23b40:	andeq	r0, r0, r8, lsr r3
   23b44:	andeq	r0, r0, r8, lsr r3
   23b48:	andeq	r0, r0, r8, lsr r3
   23b4c:	andeq	r0, r0, r8, lsr r3
   23b50:	andeq	r0, r0, r8, lsr r3
   23b54:	andeq	r0, r0, r8, lsr r3
   23b58:	andeq	r0, r0, r8, lsr r3
   23b5c:	andeq	r0, r0, r8, lsl r2
   23b60:	andeq	r0, r0, r8, lsl r2
   23b64:	andeq	r0, r0, r8, lsr r3
   23b68:	andeq	r0, r0, r8, lsr r3
   23b6c:	andeq	r0, r0, r8, lsl r2
   23b70:	andeq	r0, r0, r8, lsr r3
   23b74:	andeq	r0, r0, r8, lsr r3
   23b78:	andeq	r0, r0, r8, lsr r3
   23b7c:	andeq	r0, r0, r8, lsr r3
   23b80:	andeq	r0, r0, r8, lsr r3
   23b84:	andeq	r0, r0, r8, lsr r3
   23b88:	andeq	r0, r0, r8, lsr r3
   23b8c:	andeq	r0, r0, r8, lsr r3
   23b90:	andeq	r0, r0, r8, lsr r3
   23b94:	andeq	r0, r0, r8, lsr r3
   23b98:	andeq	r0, r0, r8, lsr r3
   23b9c:	andeq	r0, r0, r8, lsr r3
   23ba0:	andeq	r0, r0, r8, lsr r3
   23ba4:	andeq	r0, r0, r8, lsr r3
   23ba8:	andeq	r0, r0, r8, lsr r3
   23bac:	andeq	r0, r0, r8, lsr r3
   23bb0:	andeq	r0, r0, r8, lsr r3
   23bb4:	andeq	r0, r0, r8, lsr r3
   23bb8:	andeq	r0, r0, r8, lsr r3
   23bbc:	andeq	r0, r0, r8, lsr r3
   23bc0:	andeq	r0, r0, r8, lsr r3
   23bc4:	andeq	r0, r0, r8, lsr r3
   23bc8:	andeq	r0, r0, r8, lsr r3
   23bcc:	andeq	r0, r0, r8, lsr r3
   23bd0:	andeq	r0, r0, r8, lsr r3
   23bd4:	andeq	r0, r0, r8, lsr r3
   23bd8:	andeq	r0, r0, r8, lsr r3
   23bdc:	andeq	r0, r0, r8, lsr r3
   23be0:	andeq	r0, r0, r8, lsr r3
   23be4:	andeq	r0, r0, r8, lsr r3
   23be8:	andeq	r0, r0, r8, lsr r3
   23bec:	andeq	r0, r0, r8, lsr r3
   23bf0:	andeq	r0, r0, r8, lsr r3
   23bf4:	andeq	r0, r0, r8, lsr r3
   23bf8:	andeq	r0, r0, r8, lsr r3
   23bfc:	andeq	r0, r0, r8, lsr r3
   23c00:	andeq	r0, r0, r8, lsr r3
   23c04:	andeq	r0, r0, r8, lsr r3
   23c08:	andeq	r0, r0, r8, lsr r3
   23c0c:	andeq	r0, r0, r8, lsr r3
   23c10:	andeq	r0, r0, r8, lsr r3
   23c14:	andeq	r0, r0, ip, ror #5
   23c18:	andeq	r0, r0, r8, lsr r3
   23c1c:	andeq	r0, r0, r8, lsr r3
   23c20:	andeq	r0, r0, r8, lsr r3
   23c24:	andeq	r0, r0, r8, ror r3
   23c28:	andeq	r0, r0, r8, lsr r3
   23c2c:	andeq	r0, r0, r8, lsr r3
   23c30:	andeq	r0, r0, r8, lsr r3
   23c34:	andeq	r0, r0, r8, lsr r3
   23c38:	andeq	r0, r0, r8, lsr r3
   23c3c:	andeq	r0, r0, r8, lsr r3
   23c40:	andeq	r0, r0, r8, lsr r3
   23c44:	andeq	r0, r0, r8, lsr r3
   23c48:	andeq	r0, r0, r8, lsr r3
   23c4c:	andeq	r0, r0, r8, lsr r3
   23c50:	andeq	r0, r0, r8, lsr r3
   23c54:	andeq	r0, r0, r8, lsr r3
   23c58:	andeq	r0, r0, r8, lsl r2
   23c5c:	andeq	r0, r0, r8, lsr r3
   23c60:	andeq	r0, r0, r8, lsr r3
   23c64:	andeq	r0, r0, r8, lsr r3
   23c68:	andeq	r0, r0, r8, lsr r3
   23c6c:	andeq	r0, r0, r8, lsr r3
   23c70:	andeq	r0, r0, r8, lsr r3
   23c74:	andeq	r0, r0, r8, lsr r3
   23c78:	andeq	r0, r0, r8, lsl r2
   23c7c:	andeq	r0, r0, r8, lsr r3
   23c80:	andeq	r0, r0, r8, lsr r3
   23c84:	andeq	r0, r0, r8, lsr r3
   23c88:	andeq	r0, r0, r8, lsr r3
   23c8c:	andeq	r0, r0, r8, lsr r3
   23c90:	strdeq	r0, [r0], -r8
   23c94:	andeq	r0, r0, ip, lsl #7
   23c98:	andeq	r0, r0, r8, lsr r3
   23c9c:	andeq	r0, r0, r8, lsr r3
   23ca0:	andeq	r0, r0, r8, lsr r3
   23ca4:	andeq	r0, r0, r8, lsr r3
   23ca8:	andeq	r0, r0, r8, lsr r3
   23cac:	andeq	r0, r0, r8, lsr r3
   23cb0:	andeq	r0, r0, r8, lsr r3
   23cb4:	andeq	r0, r0, r8, lsr r3
   23cb8:	andeq	r0, r0, r8, lsr r3
   23cbc:	andeq	r0, r0, r8, lsr r3
   23cc0:	andeq	r0, r0, r8, lsr r3
   23cc4:	andeq	r0, r0, r8, lsr r3
   23cc8:	andeq	r0, r0, r8, lsr r3
   23ccc:	andeq	r0, r0, r8, lsr r3
   23cd0:	andeq	r0, r0, r8, lsr r3
   23cd4:	andeq	r0, r0, r8, lsr r3
   23cd8:	andeq	r0, r0, r8, lsr r3
   23cdc:	andeq	r0, r0, r8, lsr r3
   23ce0:			; <UNDEFINED> instruction: 0x000003b8
   23ce4:	andeq	r0, r0, r8, lsr r3
   23ce8:	andeq	r0, r0, r8, lsr r3
   23cec:	andeq	r0, r0, r8, lsr r3
   23cf0:	andeq	r0, r0, r8, lsr r3
   23cf4:	andeq	r0, r0, r8, lsr r3
   23cf8:	andeq	r0, r0, r8, lsr r3
   23cfc:	andeq	r0, r0, r8, lsr r3
   23d00:	strdeq	r0, [r0], -r8
   23d04:	andeq	r0, r0, r8, lsr r3
   23d08:	andeq	r0, r0, r8, lsr r3
   23d0c:	andeq	r0, r0, r8, lsr r3
   23d10:	andeq	r0, r0, r8, lsr r3
   23d14:	andeq	r0, r0, r8, lsr r3
   23d18:	andeq	r0, r0, r8, lsr r3
   23d1c:	andeq	r0, r0, r8, lsr r3
   23d20:	andeq	r0, r0, r8, lsl r4
   23d24:	andeq	r0, r0, r8, lsr r3
   23d28:	andeq	r0, r0, r8, lsr r3
   23d2c:	andeq	r0, r0, r8, lsr r3
   23d30:	andeq	r0, r0, r8, lsr r3
   23d34:	andeq	r0, r0, r8, lsr r3
   23d38:	andeq	r0, r0, r8, ror #8
   23d3c:	mov	r0, r5
   23d40:	mov	r1, r6
   23d44:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23d48:	mov	r0, r5
   23d4c:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   23d50:	mov	r0, r4
   23d54:	sub	sp, fp, #24
   23d58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23d5c:	mov	r4, #0
   23d60:	cmp	r0, #64	; 0x40
   23d64:	bgt	23d98 <myhtml_insertion_mode_in_head@@Base+0x2b4>
   23d68:	sub	r1, r0, #23
   23d6c:	cmp	r1, #2
   23d70:	bcc	23e5c <myhtml_insertion_mode_in_head@@Base+0x378>
   23d74:	cmp	r0, #61	; 0x3d
   23d78:	bne	23e10 <myhtml_insertion_mode_in_head@@Base+0x32c>
   23d7c:	mov	r0, r5
   23d80:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   23d84:	mov	r0, #5
   23d88:	str	r0, [r5, #168]	; 0xa8
   23d8c:	mov	r0, r4
   23d90:	sub	sp, fp, #24
   23d94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23d98:	cmp	r0, #65	; 0x41
   23d9c:	beq	23e5c <myhtml_insertion_mode_in_head@@Base+0x378>
   23da0:	cmp	r0, #128	; 0x80
   23da4:	bne	23e10 <myhtml_insertion_mode_in_head@@Base+0x32c>
   23da8:	mov	r0, r5
   23dac:	mov	r1, #128	; 0x80
   23db0:	mov	r2, #1
   23db4:	mov	r3, #0
   23db8:	mov	r4, #0
   23dbc:	bl	10e44 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   23dc0:	cmp	r0, #0
   23dc4:	beq	23e10 <myhtml_insertion_mode_in_head@@Base+0x32c>
   23dc8:	mov	r0, r5
   23dcc:	mov	r1, #0
   23dd0:	mov	r2, #0
   23dd4:	mov	r4, #0
   23dd8:	bl	10f64 <myhtml_tree_generate_all_implied_end_tags@plt>
   23ddc:	mov	r0, r5
   23de0:	bl	11504 <myhtml_tree_current_node@plt>
   23de4:	mov	r0, r5
   23de8:	mov	r1, #128	; 0x80
   23dec:	mov	r2, #1
   23df0:	mov	r3, #0
   23df4:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   23df8:	mov	r0, r5
   23dfc:	bl	11af8 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   23e00:	mov	r0, r5
   23e04:	bl	117bc <myhtml_tree_template_insertion_pop@plt>
   23e08:	mov	r0, r5
   23e0c:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23e10:	mov	r0, r4
   23e14:	sub	sp, fp, #24
   23e18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23e1c:	mov	r0, r5
   23e20:	mov	r1, r6
   23e24:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23e28:	mov	r0, #4
   23e2c:	b	23f9c <myhtml_insertion_mode_in_head@@Base+0x4b8>
   23e30:	ldr	r0, [r6, #48]	; 0x30
   23e34:	tst	r0, #8
   23e38:	bne	23fbc <myhtml_insertion_mode_in_head@@Base+0x4d8>
   23e3c:	mov	r0, r5
   23e40:	mov	r1, r6
   23e44:	bl	10fdc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   23e48:	cmp	r0, #0
   23e4c:	beq	23e5c <myhtml_insertion_mode_in_head@@Base+0x378>
   23e50:	mov	r1, r0
   23e54:	mov	r0, r5
   23e58:	bl	11054 <myhtml_tree_node_insert_text@plt>
   23e5c:	mov	r0, r5
   23e60:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   23e64:	mov	r0, #5
   23e68:	mov	r4, #1
   23e6c:	str	r0, [r5, #168]	; 0xa8
   23e70:	mov	r0, r4
   23e74:	sub	sp, fp, #24
   23e78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23e7c:	mov	r0, r5
   23e80:	mov	r1, r6
   23e84:	mov	r2, #0
   23e88:	mov	r4, #0
   23e8c:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   23e90:	mov	r0, r4
   23e94:	sub	sp, fp, #24
   23e98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23e9c:	mov	r0, r5
   23ea0:	mov	r1, r6
   23ea4:	sub	sp, fp, #24
   23ea8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   23eac:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   23eb0:	ldr	r7, [r5, #180]	; 0xb4
   23eb4:	mov	r0, r5
   23eb8:	mov	r1, r6
   23ebc:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23ec0:	tst	r7, #1
   23ec4:	bne	23e28 <myhtml_insertion_mode_in_head@@Base+0x344>
   23ec8:	mov	r0, #4
   23ecc:	str	r0, [r5, #168]	; 0xa8
   23ed0:	mov	r0, r4
   23ed4:	sub	sp, fp, #24
   23ed8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23edc:	add	r2, sp, #4
   23ee0:	mov	r0, r5
   23ee4:	mov	r1, #0
   23ee8:	mov	r4, #0
   23eec:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   23ef0:	mov	r8, r0
   23ef4:	mov	r0, r5
   23ef8:	bl	110a8 <myhtml_tree_node_create@plt>
   23efc:	mov	r7, r0
   23f00:	str	r6, [r0, #32]
   23f04:	mov	r2, #3
   23f08:	mov	r0, #112	; 0x70
   23f0c:	mov	r1, #1
   23f10:	str	r2, [r7]
   23f14:	stmib	r7, {r0, r1}
   23f18:	mov	r0, r8
   23f1c:	mov	r1, r7
   23f20:	ldr	r2, [sp, #4]
   23f24:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   23f28:	mov	r0, r5
   23f2c:	mov	r1, r7
   23f30:	bl	11798 <myhtml_tree_open_elements_append@plt>
   23f34:	mov	r0, #5
   23f38:	b	23f9c <myhtml_insertion_mode_in_head@@Base+0x4b8>
   23f3c:	mov	r0, r5
   23f40:	mov	r1, r6
   23f44:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23f48:	ldr	r0, [r5]
   23f4c:	ldr	r1, [r0, #36]	; 0x24
   23f50:	mov	r0, r5
   23f54:	bl	1115c <myhtml_tree_active_formatting_append@plt>
   23f58:	mov	r0, #17
   23f5c:	str	r0, [r5, #168]	; 0xa8
   23f60:	ldr	r0, [r5, #180]	; 0xb4
   23f64:	ldr	r1, [r5, #180]	; 0xb4
   23f68:	and	r0, r0, #2
   23f6c:	eor	r0, r1, r0
   23f70:	mov	r1, #17
   23f74:	str	r0, [r5, #180]	; 0xb4
   23f78:	mov	r0, r5
   23f7c:	bl	11078 <myhtml_tree_template_insertion_append@plt>
   23f80:	mov	r0, r4
   23f84:	sub	sp, fp, #24
   23f88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23f8c:	mov	r0, r5
   23f90:	mov	r1, r6
   23f94:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   23f98:	mov	r0, #2
   23f9c:	str	r0, [r5, #164]	; 0xa4
   23fa0:	mov	r1, #7
   23fa4:	ldr	r0, [r5, #168]	; 0xa8
   23fa8:	str	r1, [r5, #168]	; 0xa8
   23fac:	str	r0, [r5, #172]	; 0xac
   23fb0:	mov	r0, r4
   23fb4:	sub	sp, fp, #24
   23fb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23fbc:	mov	r0, r5
   23fc0:	mov	r1, r6
   23fc4:	bl	11054 <myhtml_tree_node_insert_text@plt>
   23fc8:	mov	r0, r4
   23fcc:	sub	sp, fp, #24
   23fd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00023fd4 <myhtml_insertion_mode_in_head_noscript@@Base>:
   23fd4:	push	{r4, r5, fp, lr}
   23fd8:	add	fp, sp, #8
   23fdc:	mov	r4, r0
   23fe0:	ldr	r0, [r1]
   23fe4:	ldr	r2, [r1, #48]	; 0x30
   23fe8:	tst	r2, #1
   23fec:	bne	241f8 <myhtml_insertion_mode_in_head_noscript@@Base+0x224>
   23ff0:	sub	r0, r0, #1
   23ff4:	cmp	r0, #119	; 0x77
   23ff8:	bhi	24230 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   23ffc:	add	r2, pc, #8
   24000:	mov	r5, #0
   24004:	ldr	r0, [r2, r0, lsl #2]
   24008:	add	pc, r2, r0
   2400c:	andeq	r0, r0, r8, lsl r2
   24010:	andeq	r0, r0, r0, ror #3
   24014:	andeq	r0, r0, r8, lsr r2
   24018:	andeq	r0, r0, r4, lsr #4
   2401c:	andeq	r0, r0, r4, lsr #4
   24020:	andeq	r0, r0, r4, lsr #4
   24024:	andeq	r0, r0, r4, lsr #4
   24028:	andeq	r0, r0, r4, lsr #4
   2402c:	andeq	r0, r0, r4, lsr #4
   24030:	andeq	r0, r0, r4, lsr #4
   24034:	andeq	r0, r0, r4, lsr #4
   24038:	andeq	r0, r0, r4, lsr #4
   2403c:	andeq	r0, r0, r4, lsr #4
   24040:	andeq	r0, r0, r4, lsr #4
   24044:	andeq	r0, r0, r4, lsr #4
   24048:	andeq	r0, r0, r0, ror #3
   2404c:	andeq	r0, r0, r4, lsr #4
   24050:	andeq	r0, r0, r4, lsr #4
   24054:	andeq	r0, r0, r0, ror #3
   24058:	andeq	r0, r0, r4, lsr #4
   2405c:	andeq	r0, r0, r4, lsr #4
   24060:	andeq	r0, r0, r4, lsr #4
   24064:	andeq	r0, r0, r4, lsr #4
   24068:	andeq	r0, r0, r4, lsr #4
   2406c:	andeq	r0, r0, r4, lsr #4
   24070:	andeq	r0, r0, r4, lsr #4
   24074:	andeq	r0, r0, r4, lsr #4
   24078:	andeq	r0, r0, r4, lsr #4
   2407c:	andeq	r0, r0, r4, lsr #4
   24080:	andeq	r0, r0, r4, lsr #4
   24084:	andeq	r0, r0, r4, lsr #4
   24088:	andeq	r0, r0, r4, lsr #4
   2408c:	andeq	r0, r0, r4, lsr #4
   24090:	andeq	r0, r0, r4, lsr #4
   24094:	andeq	r0, r0, r4, lsr #4
   24098:	andeq	r0, r0, r4, lsr #4
   2409c:	andeq	r0, r0, r4, lsr #4
   240a0:	andeq	r0, r0, r4, lsr #4
   240a4:	andeq	r0, r0, r4, lsr #4
   240a8:	andeq	r0, r0, r4, lsr #4
   240ac:	andeq	r0, r0, r4, lsr #4
   240b0:	andeq	r0, r0, r4, lsr #4
   240b4:	andeq	r0, r0, r4, lsr #4
   240b8:	andeq	r0, r0, r4, lsr #4
   240bc:	andeq	r0, r0, r4, lsr #4
   240c0:	andeq	r0, r0, r4, lsr #4
   240c4:	andeq	r0, r0, r4, lsr #4
   240c8:	andeq	r0, r0, r4, lsr #4
   240cc:	andeq	r0, r0, r4, lsr #4
   240d0:	andeq	r0, r0, r4, lsr #4
   240d4:	andeq	r0, r0, r4, lsr #4
   240d8:	andeq	r0, r0, r4, lsr #4
   240dc:	andeq	r0, r0, r4, lsr #4
   240e0:	andeq	r0, r0, r4, lsr #4
   240e4:	andeq	r0, r0, r4, lsr #4
   240e8:	andeq	r0, r0, r4, lsr #4
   240ec:	andeq	r0, r0, r4, lsr #4
   240f0:	andeq	r0, r0, r4, lsr #4
   240f4:	andeq	r0, r0, r4, lsr #4
   240f8:	andeq	r0, r0, r4, lsr #4
   240fc:	andeq	r0, r0, r8, lsr r2
   24100:	andeq	r0, r0, r4, lsr #4
   24104:	andeq	r0, r0, r4, lsr #4
   24108:	andeq	r0, r0, r4, lsr #4
   2410c:	andeq	r0, r0, r0, asr #4
   24110:	andeq	r0, r0, r4, lsr #4
   24114:	andeq	r0, r0, r4, lsr #4
   24118:	andeq	r0, r0, r4, lsr #4
   2411c:	andeq	r0, r0, r4, lsr #4
   24120:	andeq	r0, r0, r4, lsr #4
   24124:	andeq	r0, r0, r4, lsr #4
   24128:	andeq	r0, r0, r4, lsr #4
   2412c:	andeq	r0, r0, r4, lsr #4
   24130:	andeq	r0, r0, r4, lsr #4
   24134:	andeq	r0, r0, r4, lsr #4
   24138:	andeq	r0, r0, r4, lsr #4
   2413c:	andeq	r0, r0, r4, lsr #4
   24140:	andeq	r0, r0, r0, ror #3
   24144:	andeq	r0, r0, r4, lsr #4
   24148:	andeq	r0, r0, r4, lsr #4
   2414c:	andeq	r0, r0, r4, lsr #4
   24150:	andeq	r0, r0, r4, lsr #4
   24154:	andeq	r0, r0, r4, lsr #4
   24158:	andeq	r0, r0, r4, lsr #4
   2415c:	andeq	r0, r0, r4, lsr #4
   24160:	andeq	r0, r0, r0, ror #3
   24164:	andeq	r0, r0, r4, lsr #4
   24168:	andeq	r0, r0, r4, lsr #4
   2416c:	andeq	r0, r0, r4, lsr #4
   24170:	andeq	r0, r0, r4, lsr #4
   24174:	andeq	r0, r0, r4, lsr #4
   24178:	andeq	r0, r0, r0, ror #3
   2417c:	andeq	r0, r0, r8, lsr r2
   24180:	andeq	r0, r0, r4, lsr #4
   24184:	andeq	r0, r0, r4, lsr #4
   24188:	andeq	r0, r0, r4, lsr #4
   2418c:	andeq	r0, r0, r4, lsr #4
   24190:	andeq	r0, r0, r4, lsr #4
   24194:	andeq	r0, r0, r4, lsr #4
   24198:	andeq	r0, r0, r4, lsr #4
   2419c:	andeq	r0, r0, r4, lsr #4
   241a0:	andeq	r0, r0, r4, lsr #4
   241a4:	andeq	r0, r0, r4, lsr #4
   241a8:	andeq	r0, r0, r4, lsr #4
   241ac:	andeq	r0, r0, r4, lsr #4
   241b0:	andeq	r0, r0, r4, lsr #4
   241b4:	andeq	r0, r0, r4, lsr #4
   241b8:	andeq	r0, r0, r4, lsr #4
   241bc:	andeq	r0, r0, r4, lsr #4
   241c0:	andeq	r0, r0, r4, lsr #4
   241c4:	andeq	r0, r0, r4, lsr #4
   241c8:	andeq	r0, r0, r4, lsr #4
   241cc:	andeq	r0, r0, r4, lsr #4
   241d0:	andeq	r0, r0, r4, lsr #4
   241d4:	andeq	r0, r0, r4, lsr #4
   241d8:	andeq	r0, r0, r4, lsr #4
   241dc:	andeq	r0, r0, r4, lsr #4
   241e0:	andeq	r0, r0, r4, lsr #4
   241e4:	andeq	r0, r0, r4, lsr #4
   241e8:	andeq	r0, r0, r0, ror #3
   241ec:	mov	r0, r4
   241f0:	pop	{r4, r5, fp, lr}
   241f4:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   241f8:	cmp	r0, #24
   241fc:	beq	24230 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   24200:	mov	r5, #0
   24204:	cmp	r0, #93	; 0x5d
   24208:	bne	24244 <myhtml_insertion_mode_in_head_noscript@@Base+0x270>
   2420c:	mov	r0, r4
   24210:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   24214:	mov	r0, #3
   24218:	str	r0, [r4, #168]	; 0xa8
   2421c:	mov	r0, r5
   24220:	pop	{r4, r5, fp, pc}
   24224:	ldr	r0, [r1, #48]	; 0x30
   24228:	tst	r0, #8
   2422c:	bne	241ec <myhtml_insertion_mode_in_head_noscript@@Base+0x218>
   24230:	mov	r0, r4
   24234:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   24238:	mov	r0, #3
   2423c:	mov	r5, #1
   24240:	str	r0, [r4, #168]	; 0xa8
   24244:	mov	r0, r5
   24248:	pop	{r4, r5, fp, pc}
   2424c:	mov	r0, r4
   24250:	pop	{r4, r5, fp, lr}
   24254:	b	222d4 <myhtml_insertion_mode_in_body@@Base>

00024258 <myhtml_insertion_mode_after_head@@Base>:
   24258:	push	{r4, r5, r6, sl, fp, lr}
   2425c:	add	fp, sp, #16
   24260:	mov	r4, r0
   24264:	mov	r6, r1
   24268:	ldr	r0, [r1]
   2426c:	ldr	r1, [r1, #48]	; 0x30
   24270:	tst	r1, #1
   24274:	bne	244d8 <myhtml_insertion_mode_after_head@@Base+0x280>
   24278:	sub	r0, r0, #1
   2427c:	cmp	r0, #133	; 0x85
   24280:	bhi	244f8 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   24284:	add	r1, pc, #8
   24288:	mov	r5, #0
   2428c:	ldr	r0, [r1, r0, lsl #2]
   24290:	add	pc, r1, r0
   24294:	muleq	r0, ip, r2
   24298:	andeq	r0, r0, ip, asr #5
   2429c:	andeq	r0, r0, r4, lsl #5
   242a0:	andeq	r0, r0, r4, ror #4
   242a4:	andeq	r0, r0, r4, ror #4
   242a8:	andeq	r0, r0, r4, ror #4
   242ac:	andeq	r0, r0, r4, ror #4
   242b0:	andeq	r0, r0, r4, ror #4
   242b4:	andeq	r0, r0, r4, ror #4
   242b8:	andeq	r0, r0, r4, ror #4
   242bc:	andeq	r0, r0, r4, ror #4
   242c0:	andeq	r0, r0, r4, ror #4
   242c4:	andeq	r0, r0, r4, ror #4
   242c8:	andeq	r0, r0, r4, ror #4
   242cc:	andeq	r0, r0, r8, lsl r2
   242d0:	andeq	r0, r0, r8, lsl r2
   242d4:	andeq	r0, r0, r4, ror #4
   242d8:	andeq	r0, r0, r4, ror #4
   242dc:	andeq	r0, r0, r8, lsl r2
   242e0:	andeq	r0, r0, r4, ror #4
   242e4:	andeq	r0, r0, r4, ror #4
   242e8:	andeq	r0, r0, r4, ror #4
   242ec:	andeq	r0, r0, r8, ror #5
   242f0:	andeq	r0, r0, r4, ror #4
   242f4:	andeq	r0, r0, r4, ror #4
   242f8:	andeq	r0, r0, r4, ror #4
   242fc:	andeq	r0, r0, r4, ror #4
   24300:	andeq	r0, r0, r4, ror #4
   24304:	andeq	r0, r0, r4, ror #4
   24308:	andeq	r0, r0, r4, ror #4
   2430c:	andeq	r0, r0, r4, ror #4
   24310:	andeq	r0, r0, r4, ror #4
   24314:	andeq	r0, r0, r4, ror #4
   24318:	andeq	r0, r0, r4, ror #4
   2431c:	andeq	r0, r0, r4, ror #4
   24320:	andeq	r0, r0, r4, ror #4
   24324:	andeq	r0, r0, r4, ror #4
   24328:	andeq	r0, r0, r4, ror #4
   2432c:	andeq	r0, r0, r4, ror #4
   24330:	andeq	r0, r0, r4, ror #4
   24334:	andeq	r0, r0, r4, ror #4
   24338:	andeq	r0, r0, r4, ror #4
   2433c:	andeq	r0, r0, r4, ror #4
   24340:	andeq	r0, r0, r4, ror #4
   24344:	andeq	r0, r0, r4, ror #4
   24348:	andeq	r0, r0, r4, ror #4
   2434c:	andeq	r0, r0, r4, ror #4
   24350:	andeq	r0, r0, r4, ror #4
   24354:	andeq	r0, r0, r4, ror #4
   24358:	andeq	r0, r0, r4, ror #4
   2435c:	andeq	r0, r0, r4, ror #4
   24360:	andeq	r0, r0, r4, ror #4
   24364:	andeq	r0, r0, r4, ror #4
   24368:	andeq	r0, r0, ip, lsl r3
   2436c:	andeq	r0, r0, r4, ror #4
   24370:	andeq	r0, r0, r4, ror #4
   24374:	andeq	r0, r0, r4, ror #4
   24378:	andeq	r0, r0, r4, ror #4
   2437c:	andeq	r0, r0, r4, ror #4
   24380:	andeq	r0, r0, r4, ror #4
   24384:	andeq	r0, r0, r4, lsl #5
   24388:	andeq	r0, r0, r4, ror #4
   2438c:	andeq	r0, r0, r4, ror #4
   24390:	andeq	r0, r0, r4, ror #4
   24394:	andeq	r0, r0, r8, lsr r3
   24398:	andeq	r0, r0, r4, ror #4
   2439c:	andeq	r0, r0, r4, ror #4
   243a0:	andeq	r0, r0, r4, ror #4
   243a4:	andeq	r0, r0, r4, ror #4
   243a8:	andeq	r0, r0, r4, ror #4
   243ac:	andeq	r0, r0, r4, ror #4
   243b0:	andeq	r0, r0, r4, ror #4
   243b4:	andeq	r0, r0, r4, ror #4
   243b8:	andeq	r0, r0, r4, ror #4
   243bc:	andeq	r0, r0, r4, ror #4
   243c0:	andeq	r0, r0, r4, ror #4
   243c4:	andeq	r0, r0, r4, ror #4
   243c8:	andeq	r0, r0, r8, lsl r2
   243cc:	andeq	r0, r0, r4, ror #4
   243d0:	andeq	r0, r0, r4, ror #4
   243d4:	andeq	r0, r0, r4, ror #4
   243d8:	andeq	r0, r0, r4, ror #4
   243dc:	andeq	r0, r0, r4, ror #4
   243e0:	andeq	r0, r0, r4, ror #4
   243e4:	andeq	r0, r0, r4, ror #4
   243e8:	andeq	r0, r0, r8, lsl r2
   243ec:	andeq	r0, r0, r4, ror #4
   243f0:	andeq	r0, r0, r4, ror #4
   243f4:	andeq	r0, r0, r4, ror #4
   243f8:	andeq	r0, r0, r4, ror #4
   243fc:	andeq	r0, r0, r4, ror #4
   24400:	andeq	r0, r0, r8, lsl r2
   24404:	andeq	r0, r0, r4, ror #4
   24408:	andeq	r0, r0, r4, ror #4
   2440c:	andeq	r0, r0, r4, ror #4
   24410:	andeq	r0, r0, r4, ror #4
   24414:	andeq	r0, r0, r4, ror #4
   24418:	andeq	r0, r0, r4, ror #4
   2441c:	andeq	r0, r0, r4, ror #4
   24420:	andeq	r0, r0, r4, ror #4
   24424:	andeq	r0, r0, r4, ror #4
   24428:	andeq	r0, r0, r4, ror #4
   2442c:	andeq	r0, r0, r4, ror #4
   24430:	andeq	r0, r0, r4, ror #4
   24434:	andeq	r0, r0, r4, ror #4
   24438:	andeq	r0, r0, r4, ror #4
   2443c:	andeq	r0, r0, r4, ror #4
   24440:	andeq	r0, r0, r4, ror #4
   24444:	andeq	r0, r0, r4, ror #4
   24448:	andeq	r0, r0, r4, ror #4
   2444c:	andeq	r0, r0, r4, ror #4
   24450:	andeq	r0, r0, r8, lsl r2
   24454:	andeq	r0, r0, r4, ror #4
   24458:	andeq	r0, r0, r4, ror #4
   2445c:	andeq	r0, r0, r4, ror #4
   24460:	andeq	r0, r0, r4, ror #4
   24464:	andeq	r0, r0, r4, ror #4
   24468:	andeq	r0, r0, r4, ror #4
   2446c:	andeq	r0, r0, r4, ror #4
   24470:	andeq	r0, r0, r8, lsl r2
   24474:	andeq	r0, r0, r4, ror #4
   24478:	andeq	r0, r0, r4, ror #4
   2447c:	andeq	r0, r0, r4, ror #4
   24480:	andeq	r0, r0, r4, ror #4
   24484:	andeq	r0, r0, r4, ror #4
   24488:	andeq	r0, r0, r4, ror #4
   2448c:	andeq	r0, r0, r4, ror #4
   24490:	andeq	r0, r0, r8, lsl r2
   24494:	andeq	r0, r0, r4, ror #4
   24498:	andeq	r0, r0, r4, ror #4
   2449c:	andeq	r0, r0, r4, ror #4
   244a0:	andeq	r0, r0, r4, ror #4
   244a4:	andeq	r0, r0, r4, ror #4
   244a8:	andeq	r0, r0, r8, lsl r2
   244ac:	ldr	r1, [r4, #92]	; 0x5c
   244b0:	mov	r0, r4
   244b4:	bl	11798 <myhtml_tree_open_elements_append@plt>
   244b8:	mov	r0, r4
   244bc:	mov	r1, r6
   244c0:	bl	11114 <myhtml_insertion_mode_in_head@plt>
   244c4:	ldr	r1, [r4, #92]	; 0x5c
   244c8:	mov	r0, r4
   244cc:	bl	11240 <myhtml_tree_open_elements_remove@plt>
   244d0:	mov	r0, r5
   244d4:	pop	{r4, r5, r6, sl, fp, pc}
   244d8:	sub	r1, r0, #23
   244dc:	cmp	r1, #2
   244e0:	bcc	244f8 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   244e4:	cmp	r0, #128	; 0x80
   244e8:	beq	24520 <myhtml_insertion_mode_after_head@@Base+0x2c8>
   244ec:	mov	r5, #0
   244f0:	cmp	r0, #65	; 0x41
   244f4:	bne	24518 <myhtml_insertion_mode_after_head@@Base+0x2c0>
   244f8:	mov	r0, r4
   244fc:	mov	r1, #23
   24500:	mov	r2, #1
   24504:	mov	r5, #1
   24508:	bl	11780 <myhtml_tree_node_insert@plt>
   2450c:	mov	r1, #6
   24510:	str	r1, [r4, #168]	; 0xa8
   24514:	str	r0, [r4, #100]	; 0x64
   24518:	mov	r0, r5
   2451c:	pop	{r4, r5, r6, sl, fp, pc}
   24520:	mov	r0, r4
   24524:	mov	r1, r6
   24528:	pop	{r4, r5, r6, sl, fp, lr}
   2452c:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   24530:	ldr	r0, [r6, #48]	; 0x30
   24534:	tst	r0, #8
   24538:	bne	245dc <myhtml_insertion_mode_after_head@@Base+0x384>
   2453c:	mov	r0, r4
   24540:	mov	r1, r6
   24544:	bl	10fdc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   24548:	cmp	r0, #0
   2454c:	beq	244f8 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   24550:	mov	r1, r0
   24554:	mov	r0, r4
   24558:	bl	11054 <myhtml_tree_node_insert_text@plt>
   2455c:	b	244f8 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   24560:	mov	r0, r4
   24564:	mov	r1, r6
   24568:	mov	r2, #0
   2456c:	mov	r5, #0
   24570:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   24574:	mov	r0, r5
   24578:	pop	{r4, r5, r6, sl, fp, pc}
   2457c:	mov	r0, r4
   24580:	mov	r1, r6
   24584:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   24588:	str	r0, [r4, #100]	; 0x64
   2458c:	mov	r0, #6
   24590:	str	r0, [r4, #168]	; 0xa8
   24594:	ldr	r0, [r4, #180]	; 0xb4
   24598:	ldr	r1, [r4, #180]	; 0xb4
   2459c:	and	r0, r0, #2
   245a0:	eor	r0, r1, r0
   245a4:	str	r0, [r4, #180]	; 0xb4
   245a8:	mov	r0, r5
   245ac:	pop	{r4, r5, r6, sl, fp, pc}
   245b0:	mov	r0, r4
   245b4:	mov	r1, r6
   245b8:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   245bc:	mov	r0, #19
   245c0:	str	r0, [r4, #168]	; 0xa8
   245c4:	mov	r0, r5
   245c8:	pop	{r4, r5, r6, sl, fp, pc}
   245cc:	mov	r0, r4
   245d0:	mov	r1, r6
   245d4:	pop	{r4, r5, r6, sl, fp, lr}
   245d8:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   245dc:	mov	r0, r4
   245e0:	mov	r1, r6
   245e4:	bl	11054 <myhtml_tree_node_insert_text@plt>
   245e8:	mov	r0, r5
   245ec:	pop	{r4, r5, r6, sl, fp, pc}

000245f0 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   245f0:	push	{r4, r5, r6, r7, fp, lr}
   245f4:	add	fp, sp, #16
   245f8:	mov	r4, r0
   245fc:	ldr	r0, [r0, #128]	; 0x80
   24600:	mov	r5, r1
   24604:	ldr	r0, [r0, #4]
   24608:	rsb	r7, r0, #1
   2460c:	cmp	r7, #1
   24610:	bne	24640 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x50>
   24614:	b	2468c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x9c>
   24618:	ldr	r0, [r4, #28]
   2461c:	bl	117f8 <myhtml_tag_get_by_id@plt>
   24620:	ldr	r1, [r6, #8]
   24624:	add	r7, r7, #1
   24628:	add	r0, r0, r1, lsl #2
   2462c:	ldrb	r0, [r0, #16]
   24630:	tst	r0, #2
   24634:	bne	2468c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x9c>
   24638:	cmp	r7, #1
   2463c:	beq	2468c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x9c>
   24640:	ldr	r0, [r4, #128]	; 0x80
   24644:	ldr	r0, [r0]
   24648:	ldr	r6, [r0, -r7, lsl #2]
   2464c:	ldr	r0, [r5]
   24650:	ldr	r1, [r6, #4]
   24654:	cmp	r1, r0
   24658:	bne	24618 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   2465c:	ldr	r0, [r6, #8]
   24660:	cmp	r0, #1
   24664:	bne	24618 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   24668:	mov	r0, r4
   2466c:	mov	r2, #1
   24670:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   24674:	mov	r0, r4
   24678:	bl	11504 <myhtml_tree_current_node@plt>
   2467c:	mov	r0, r4
   24680:	mov	r1, r6
   24684:	mov	r2, #0
   24688:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   2468c:	mov	r0, #0
   24690:	pop	{r4, r5, r6, r7, fp, pc}

00024694 <myhtml_insertion_mode_in_template@@Base>:
   24694:	push	{r4, r5, fp, lr}
   24698:	add	fp, sp, #8
   2469c:	mov	r4, r0
   246a0:	ldr	r0, [r1]
   246a4:	ldr	r2, [r1, #48]	; 0x30
   246a8:	tst	r2, #1
   246ac:	bne	248f0 <myhtml_insertion_mode_in_template@@Base+0x25c>
   246b0:	sub	r2, r0, #1
   246b4:	cmp	r2, #134	; 0x86
   246b8:	bhi	24938 <myhtml_insertion_mode_in_template@@Base+0x2a4>
   246bc:	add	r0, pc, #4
   246c0:	ldr	r2, [r0, r2, lsl #2]
   246c4:	add	pc, r0, r2
   246c8:	andeq	r0, r0, r4, lsr r2
   246cc:	andeq	r0, r0, r4, lsr r2
   246d0:	andeq	r0, r0, r4, lsr r2
   246d4:	andeq	r0, r0, r4, asr #5
   246d8:	andeq	r0, r0, r4, asr #5
   246dc:	andeq	r0, r0, r4, asr #5
   246e0:	andeq	r0, r0, r4, asr #5
   246e4:	andeq	r0, r0, r4, asr #5
   246e8:	andeq	r0, r0, r4, asr #5
   246ec:	andeq	r0, r0, r4, asr #5
   246f0:	andeq	r0, r0, r4, asr #5
   246f4:	andeq	r0, r0, r4, asr #5
   246f8:	andeq	r0, r0, r4, asr #5
   246fc:	andeq	r0, r0, r4, asr #5
   24700:	andeq	r0, r0, ip, lsl r2
   24704:	andeq	r0, r0, ip, lsl r2
   24708:	andeq	r0, r0, r4, asr #5
   2470c:	andeq	r0, r0, r4, asr #5
   24710:	andeq	r0, r0, ip, lsl r2
   24714:	andeq	r0, r0, r4, asr #5
   24718:	andeq	r0, r0, r4, asr #5
   2471c:	andeq	r0, r0, r4, asr #5
   24720:	andeq	r0, r0, r4, asr #5
   24724:	andeq	r0, r0, r4, asr #5
   24728:	andeq	r0, r0, r4, asr #5
   2472c:	andeq	r0, r0, r4, asr #5
   24730:	andeq	r0, r0, r0, asr #4
   24734:	andeq	r0, r0, r4, asr #5
   24738:	andeq	r0, r0, r4, asr #5
   2473c:	andeq	r0, r0, r4, asr #5
   24740:	ldrdeq	r0, [r0], -ip
   24744:	andeq	r0, r0, r0, asr #4
   24748:	andeq	r0, r0, r4, asr #5
   2474c:	andeq	r0, r0, r4, asr #5
   24750:	andeq	r0, r0, r4, asr #5
   24754:	andeq	r0, r0, r4, asr #5
   24758:	andeq	r0, r0, r4, asr #5
   2475c:	andeq	r0, r0, r4, asr #5
   24760:	andeq	r0, r0, r4, asr #5
   24764:	andeq	r0, r0, r4, asr #5
   24768:	andeq	r0, r0, r4, asr #5
   2476c:	andeq	r0, r0, r4, asr #5
   24770:	andeq	r0, r0, r4, asr #5
   24774:	andeq	r0, r0, r4, asr #5
   24778:	andeq	r0, r0, r4, asr #5
   2477c:	andeq	r0, r0, r4, asr #5
   24780:	andeq	r0, r0, r4, asr #5
   24784:	andeq	r0, r0, r4, asr #5
   24788:	andeq	r0, r0, r4, asr #5
   2478c:	andeq	r0, r0, r4, asr #5
   24790:	andeq	r0, r0, r4, asr #5
   24794:	andeq	r0, r0, r4, asr #5
   24798:	andeq	r0, r0, r4, asr #5
   2479c:	andeq	r0, r0, r4, asr #5
   247a0:	andeq	r0, r0, r4, asr #5
   247a4:	andeq	r0, r0, r4, asr #5
   247a8:	andeq	r0, r0, r4, asr #5
   247ac:	andeq	r0, r0, r4, asr #5
   247b0:	andeq	r0, r0, r4, asr #5
   247b4:	andeq	r0, r0, r4, asr #5
   247b8:	andeq	r0, r0, r4, asr #5
   247bc:	andeq	r0, r0, r4, asr #5
   247c0:	andeq	r0, r0, r4, asr #5
   247c4:	andeq	r0, r0, r4, asr #5
   247c8:	andeq	r0, r0, r4, asr #5
   247cc:	andeq	r0, r0, r4, asr #5
   247d0:	andeq	r0, r0, r4, asr #5
   247d4:	andeq	r0, r0, r4, asr #5
   247d8:	andeq	r0, r0, r4, asr #5
   247dc:	andeq	r0, r0, r4, asr #5
   247e0:	andeq	r0, r0, r4, asr #5
   247e4:	andeq	r0, r0, r4, asr #5
   247e8:	andeq	r0, r0, r4, asr #5
   247ec:	andeq	r0, r0, r4, asr #5
   247f0:	andeq	r0, r0, r4, asr #5
   247f4:	andeq	r0, r0, r4, asr #5
   247f8:	andeq	r0, r0, r4, asr #5
   247fc:	andeq	r0, r0, ip, lsl r2
   24800:	andeq	r0, r0, r4, asr #5
   24804:	andeq	r0, r0, r4, asr #5
   24808:	andeq	r0, r0, r4, asr #5
   2480c:	andeq	r0, r0, r4, asr #5
   24810:	andeq	r0, r0, r4, asr #5
   24814:	andeq	r0, r0, r4, asr #5
   24818:	andeq	r0, r0, r4, asr #5
   2481c:	andeq	r0, r0, ip, lsl r2
   24820:	andeq	r0, r0, r4, asr #5
   24824:	andeq	r0, r0, r4, asr #5
   24828:	andeq	r0, r0, r4, asr #5
   2482c:	andeq	r0, r0, r4, asr #5
   24830:	andeq	r0, r0, r4, asr #5
   24834:	andeq	r0, r0, ip, lsl r2
   24838:	andeq	r0, r0, r4, asr #5
   2483c:	andeq	r0, r0, r4, asr #5
   24840:	andeq	r0, r0, r4, asr #5
   24844:	andeq	r0, r0, r4, asr #5
   24848:	andeq	r0, r0, r4, asr #5
   2484c:	andeq	r0, r0, r4, asr #5
   24850:	andeq	r0, r0, r4, asr #5
   24854:	andeq	r0, r0, r4, asr #5
   24858:	andeq	r0, r0, r4, asr #5
   2485c:	andeq	r0, r0, r4, asr #5
   24860:	andeq	r0, r0, r4, asr #5
   24864:	andeq	r0, r0, r4, asr #5
   24868:	andeq	r0, r0, r4, asr #5
   2486c:	andeq	r0, r0, r4, asr #5
   24870:	andeq	r0, r0, r4, asr #5
   24874:	andeq	r0, r0, r4, asr #5
   24878:	andeq	r0, r0, r4, asr #5
   2487c:	andeq	r0, r0, r4, asr #5
   24880:	andeq	r0, r0, r4, asr #5
   24884:	andeq	r0, r0, ip, lsl r2
   24888:	andeq	r0, r0, r4, asr #5
   2488c:	andeq	r0, r0, r4, asr #5
   24890:	andeq	r0, r0, r4, asr #5
   24894:	andeq	r0, r0, r4, asr #5
   24898:	andeq	r0, r0, r4, asr #5
   2489c:	andeq	r0, r0, r4, asr #5
   248a0:	andeq	r0, r0, r4, asr #5
   248a4:	andeq	r0, r0, ip, lsl r2
   248a8:	andeq	r0, r0, r4, asr #5
   248ac:	andeq	r0, r0, r4, asr #5
   248b0:	andeq	r0, r0, r4, asr #5
   248b4:	andeq	r0, r0, r4, asr #5
   248b8:	andeq	r0, r0, r4, asr #5
   248bc:	andeq	r0, r0, r0, asr #4
   248c0:	andeq	r0, r0, r8, asr r2
   248c4:	andeq	r0, r0, ip, lsl r2
   248c8:	andeq	r0, r0, r4, asr #5
   248cc:	andeq	r0, r0, r0, asr #4
   248d0:	andeq	r0, r0, r8, asr r2
   248d4:	andeq	r0, r0, r0, asr #4
   248d8:	andeq	r0, r0, r4, asr #5
   248dc:	andeq	r0, r0, ip, lsl r2
   248e0:	strdeq	r0, [r0], -r4
   248e4:	mov	r0, r4
   248e8:	pop	{r4, r5, fp, lr}
   248ec:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   248f0:	mov	r5, #0
   248f4:	cmp	r0, #128	; 0x80
   248f8:	bne	249dc <myhtml_insertion_mode_in_template@@Base+0x348>
   248fc:	mov	r0, r4
   24900:	pop	{r4, r5, fp, lr}
   24904:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   24908:	mov	r0, r4
   2490c:	bl	117bc <myhtml_tree_template_insertion_pop@plt>
   24910:	mov	r5, #8
   24914:	mov	r0, r4
   24918:	mov	r1, #8
   2491c:	b	249d0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   24920:	mov	r0, r4
   24924:	bl	117bc <myhtml_tree_template_insertion_pop@plt>
   24928:	mov	r5, #13
   2492c:	mov	r0, r4
   24930:	mov	r1, #13
   24934:	b	249d0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   24938:	cmp	r0, #251	; 0xfb
   2493c:	bne	2498c <myhtml_insertion_mode_in_template@@Base+0x2f8>
   24940:	mov	r0, r4
   24944:	mov	r1, #128	; 0x80
   24948:	mov	r2, #1
   2494c:	mov	r3, #0
   24950:	mov	r5, #0
   24954:	bl	11660 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   24958:	cmp	r0, #0
   2495c:	beq	249dc <myhtml_insertion_mode_in_template@@Base+0x348>
   24960:	mov	r1, r0
   24964:	mov	r0, r4
   24968:	mov	r2, #0
   2496c:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   24970:	mov	r0, r4
   24974:	bl	11af8 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   24978:	mov	r0, r4
   2497c:	bl	117bc <myhtml_tree_template_insertion_pop@plt>
   24980:	mov	r0, r4
   24984:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24988:	b	249d8 <myhtml_insertion_mode_in_template@@Base+0x344>
   2498c:	mov	r0, r4
   24990:	bl	117bc <myhtml_tree_template_insertion_pop@plt>
   24994:	mov	r5, #6
   24998:	mov	r0, r4
   2499c:	mov	r1, #6
   249a0:	b	249d0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   249a4:	mov	r0, r4
   249a8:	bl	117bc <myhtml_tree_template_insertion_pop@plt>
   249ac:	mov	r5, #11
   249b0:	mov	r0, r4
   249b4:	mov	r1, #11
   249b8:	b	249d0 <myhtml_insertion_mode_in_template@@Base+0x33c>
   249bc:	mov	r0, r4
   249c0:	bl	117bc <myhtml_tree_template_insertion_pop@plt>
   249c4:	mov	r5, #12
   249c8:	mov	r0, r4
   249cc:	mov	r1, #12
   249d0:	bl	11078 <myhtml_tree_template_insertion_append@plt>
   249d4:	str	r5, [r4, #168]	; 0xa8
   249d8:	mov	r5, #1
   249dc:	mov	r0, r5
   249e0:	pop	{r4, r5, fp, pc}

000249e4 <myhtml_rules_stop_parsing@@Base>:
   249e4:	bx	lr

000249e8 <myhtml_insertion_mode_text@@Base>:
   249e8:	push	{r4, sl, fp, lr}
   249ec:	add	fp, sp, #8
   249f0:	mov	r4, r0
   249f4:	ldr	r0, [r1, #48]	; 0x30
   249f8:	tst	r0, #1
   249fc:	bne	24a44 <myhtml_insertion_mode_text@@Base+0x5c>
   24a00:	ldr	r0, [r1]
   24a04:	cmp	r0, #251	; 0xfb
   24a08:	bne	24a5c <myhtml_insertion_mode_text@@Base+0x74>
   24a0c:	mov	r0, r4
   24a10:	bl	11504 <myhtml_tree_current_node@plt>
   24a14:	ldr	r1, [r0, #4]
   24a18:	cmp	r1, #112	; 0x70
   24a1c:	bne	24a2c <myhtml_insertion_mode_text@@Base+0x44>
   24a20:	ldr	r1, [r0]
   24a24:	orr	r1, r1, #8
   24a28:	str	r1, [r0]
   24a2c:	mov	r0, r4
   24a30:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   24a34:	ldr	r0, [r4, #172]	; 0xac
   24a38:	str	r0, [r4, #168]	; 0xa8
   24a3c:	mov	r0, #1
   24a40:	pop	{r4, sl, fp, pc}
   24a44:	mov	r0, r4
   24a48:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   24a4c:	ldr	r0, [r4, #172]	; 0xac
   24a50:	str	r0, [r4, #168]	; 0xa8
   24a54:	mov	r0, #0
   24a58:	pop	{r4, sl, fp, pc}
   24a5c:	mov	r0, r4
   24a60:	bl	11054 <myhtml_tree_node_insert_text@plt>
   24a64:	mov	r0, #0
   24a68:	pop	{r4, sl, fp, pc}

00024a6c <myhtml_insertion_mode_in_table@@Base>:
   24a6c:	push	{r4, r5, r6, sl, fp, lr}
   24a70:	add	fp, sp, #16
   24a74:	sub	sp, sp, #8
   24a78:	mov	r4, r0
   24a7c:	mov	r6, r1
   24a80:	ldr	r0, [r1]
   24a84:	ldr	r1, [r1, #48]	; 0x30
   24a88:	tst	r1, #1
   24a8c:	bne	24ce0 <myhtml_insertion_mode_in_table@@Base+0x274>
   24a90:	sub	r1, r0, #1
   24a94:	cmp	r1, #134	; 0x86
   24a98:	bhi	24f48 <myhtml_insertion_mode_in_table@@Base+0x4dc>
   24a9c:	add	r0, pc, #8
   24aa0:	mov	r5, #0
   24aa4:	ldr	r1, [r0, r1, lsl #2]
   24aa8:	add	pc, r0, r1
   24aac:	andeq	r0, r0, r8, lsr #9
   24ab0:	andeq	r0, r0, r4, lsl #10
   24ab4:	andeq	r0, r0, ip, ror r6
   24ab8:	andeq	r0, r0, r0, ror #12
   24abc:	andeq	r0, r0, r0, ror #12
   24ac0:	andeq	r0, r0, r0, ror #12
   24ac4:	andeq	r0, r0, r0, ror #12
   24ac8:	andeq	r0, r0, r0, ror #12
   24acc:	andeq	r0, r0, r0, ror #12
   24ad0:	andeq	r0, r0, r0, ror #12
   24ad4:	andeq	r0, r0, r0, ror #12
   24ad8:	andeq	r0, r0, r0, ror #12
   24adc:	andeq	r0, r0, r0, ror #12
   24ae0:	andeq	r0, r0, r0, ror #12
   24ae4:	andeq	r0, r0, r0, ror #12
   24ae8:	andeq	r0, r0, r0, ror #12
   24aec:	andeq	r0, r0, r0, ror #12
   24af0:	andeq	r0, r0, r0, ror #12
   24af4:	andeq	r0, r0, r0, ror #12
   24af8:	andeq	r0, r0, r0, ror #12
   24afc:	andeq	r0, r0, r0, ror #12
   24b00:	andeq	r0, r0, r0, ror #12
   24b04:	andeq	r0, r0, r0, ror #12
   24b08:	andeq	r0, r0, r0, ror #12
   24b0c:	andeq	r0, r0, r0, ror #12
   24b10:	andeq	r0, r0, r0, ror #12
   24b14:	andeq	r0, r0, r4, lsr #10
   24b18:	andeq	r0, r0, r0, ror #12
   24b1c:	andeq	r0, r0, r0, ror #12
   24b20:	andeq	r0, r0, r0, ror #12
   24b24:	andeq	r0, r0, ip, asr r5
   24b28:	andeq	r0, r0, ip, ror r5
   24b2c:	andeq	r0, r0, r0, ror #12
   24b30:	andeq	r0, r0, r0, ror #12
   24b34:	andeq	r0, r0, r0, ror #12
   24b38:	andeq	r0, r0, r0, ror #12
   24b3c:	andeq	r0, r0, r0, ror #12
   24b40:	andeq	r0, r0, r0, ror #12
   24b44:	andeq	r0, r0, r0, ror #12
   24b48:	andeq	r0, r0, r0, ror #12
   24b4c:	andeq	r0, r0, r0, ror #12
   24b50:	andeq	r0, r0, r0, ror #12
   24b54:	andeq	r0, r0, r0, ror #12
   24b58:	andeq	r0, r0, r0, ror #12
   24b5c:	andeq	r0, r0, r0, ror #12
   24b60:	andeq	r0, r0, r0, ror #12
   24b64:	andeq	r0, r0, r0, ror #12
   24b68:	andeq	r0, r0, r0, ror #12
   24b6c:	andeq	r0, r0, r0, ror #12
   24b70:	andeq	r0, r0, r0, ror #12
   24b74:	andeq	r0, r0, r0, ror #12
   24b78:	andeq	r0, r0, r4, lsr #11
   24b7c:	andeq	r0, r0, r0, ror #12
   24b80:	andeq	r0, r0, r0, ror #12
   24b84:	andeq	r0, r0, r0, ror #12
   24b88:	andeq	r0, r0, r0, ror #12
   24b8c:	andeq	r0, r0, r0, ror #12
   24b90:	andeq	r0, r0, r0, ror #12
   24b94:	andeq	r0, r0, r0, ror #12
   24b98:	andeq	r0, r0, r0, ror #12
   24b9c:	andeq	r0, r0, r0, ror #12
   24ba0:	andeq	r0, r0, r0, ror #12
   24ba4:	andeq	r0, r0, r0, ror #12
   24ba8:	andeq	r0, r0, r0, ror #12
   24bac:	andeq	r0, r0, r0, ror #12
   24bb0:	andeq	r0, r0, r0, ror #12
   24bb4:	andeq	r0, r0, r0, ror #12
   24bb8:	andeq	r0, r0, r0, ror #12
   24bbc:	andeq	r0, r0, r0, ror #12
   24bc0:	strdeq	r0, [r0], -r4
   24bc4:	andeq	r0, r0, r0, ror #12
   24bc8:	andeq	r0, r0, r0, ror #12
   24bcc:	andeq	r0, r0, r0, ror #12
   24bd0:	andeq	r0, r0, r0, ror #12
   24bd4:	andeq	r0, r0, r0, ror #12
   24bd8:	andeq	r0, r0, r0, ror #12
   24bdc:	andeq	r0, r0, r0, ror #12
   24be0:	andeq	r0, r0, r0, ror #12
   24be4:	andeq	r0, r0, r0, ror #12
   24be8:	andeq	r0, r0, r0, ror #12
   24bec:	andeq	r0, r0, r0, ror #12
   24bf0:	andeq	r0, r0, r0, ror #12
   24bf4:	andeq	r0, r0, r0, ror #12
   24bf8:	andeq	r0, r0, r0, ror #12
   24bfc:	andeq	r0, r0, r0, ror #12
   24c00:	andeq	r0, r0, r0, ror #12
   24c04:	andeq	r0, r0, r0, ror #12
   24c08:	andeq	r0, r0, r0, ror #12
   24c0c:	andeq	r0, r0, r0, ror #12
   24c10:	andeq	r0, r0, r0, ror #12
   24c14:	andeq	r0, r0, r0, ror #12
   24c18:	andeq	r0, r0, r0, ror #12
   24c1c:	andeq	r0, r0, r0, ror #12
   24c20:	andeq	r0, r0, r0, ror #12
   24c24:	andeq	r0, r0, r0, ror #12
   24c28:	andeq	r0, r0, r0, ror #12
   24c2c:	andeq	r0, r0, r0, ror #12
   24c30:	andeq	r0, r0, r0, ror #12
   24c34:	andeq	r0, r0, r0, ror #12
   24c38:	andeq	r0, r0, r0, ror #12
   24c3c:	andeq	r0, r0, r0, ror #12
   24c40:	andeq	r0, r0, r0, ror #12
   24c44:	andeq	r0, r0, r0, ror #12
   24c48:	andeq	r0, r0, r0, ror #12
   24c4c:	andeq	r0, r0, r0, ror #12
   24c50:	andeq	r0, r0, r0, ror #12
   24c54:	andeq	r0, r0, r0, ror #12
   24c58:	andeq	r0, r0, r0, ror #12
   24c5c:	andeq	r0, r0, r0, ror #12
   24c60:	andeq	r0, r0, r0, ror #12
   24c64:	andeq	r0, r0, r0, ror #12
   24c68:	andeq	r0, r0, r8, asr r4
   24c6c:	andeq	r0, r0, r0, ror #12
   24c70:	andeq	r0, r0, r0, ror #12
   24c74:	andeq	r0, r0, r0, ror #12
   24c78:	andeq	r0, r0, r0, ror #12
   24c7c:	andeq	r0, r0, r0, ror #12
   24c80:	andeq	r0, r0, r0, ror #12
   24c84:	andeq	r0, r0, r0, ror #12
   24c88:	andeq	r0, r0, r8, asr r4
   24c8c:	andeq	r0, r0, r0, ror #12
   24c90:	andeq	r0, r0, r0, ror #12
   24c94:	andeq	r0, r0, r0, ror #12
   24c98:	andeq	r0, r0, r0, ror #12
   24c9c:	andeq	r0, r0, r8, lsl #13
   24ca0:	andeq	r0, r0, ip, lsl r2
   24ca4:	andeq	r0, r0, ip, ror #8
   24ca8:	andeq	r0, r0, r8, asr r4
   24cac:	andeq	r0, r0, r0, ror #12
   24cb0:	andeq	r0, r0, ip, lsl r2
   24cb4:	andeq	r0, r0, ip, ror #8
   24cb8:	andeq	r0, r0, ip, lsl r2
   24cbc:	andeq	r0, r0, r0, ror #12
   24cc0:	andeq	r0, r0, r0, ror #12
   24cc4:	andeq	r0, r0, ip, ror #8
   24cc8:	mov	r0, r4
   24ccc:	bl	11c00 <myhtml_tree_clear_stack_back_table_context@plt>
   24cd0:	mov	r0, r4
   24cd4:	mov	r1, r6
   24cd8:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   24cdc:	b	24f34 <myhtml_insertion_mode_in_table@@Base+0x4c8>
   24ce0:	sub	r0, r0, #23
   24ce4:	cmp	r0, #112	; 0x70
   24ce8:	bhi	2510c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   24cec:	add	r1, pc, #8
   24cf0:	mov	r5, #0
   24cf4:	ldr	r0, [r1, r0, lsl #2]
   24cf8:	add	pc, r1, r0
   24cfc:	andeq	r0, r0, ip, lsr #8
   24d00:	andeq	r0, r0, r0, lsl r4
   24d04:	andeq	r0, r0, r0, lsl r4
   24d08:	andeq	r0, r0, r0, lsl r4
   24d0c:	andeq	r0, r0, ip, lsr #8
   24d10:	andeq	r0, r0, r0, lsl r4
   24d14:	andeq	r0, r0, r0, lsl r4
   24d18:	andeq	r0, r0, r0, lsl r4
   24d1c:	andeq	r0, r0, ip, lsr #8
   24d20:	andeq	r0, r0, ip, lsr #8
   24d24:	andeq	r0, r0, r0, lsl r4
   24d28:	andeq	r0, r0, r0, lsl r4
   24d2c:	andeq	r0, r0, r0, lsl r4
   24d30:	andeq	r0, r0, r0, lsl r4
   24d34:	andeq	r0, r0, r0, lsl r4
   24d38:	andeq	r0, r0, r0, lsl r4
   24d3c:	andeq	r0, r0, r0, lsl r4
   24d40:	andeq	r0, r0, r0, lsl r4
   24d44:	andeq	r0, r0, r0, lsl r4
   24d48:	andeq	r0, r0, r0, lsl r4
   24d4c:	andeq	r0, r0, r0, lsl r4
   24d50:	andeq	r0, r0, r0, lsl r4
   24d54:	andeq	r0, r0, r0, lsl r4
   24d58:	andeq	r0, r0, r0, lsl r4
   24d5c:	andeq	r0, r0, r0, lsl r4
   24d60:	andeq	r0, r0, r0, lsl r4
   24d64:	andeq	r0, r0, r0, lsl r4
   24d68:	andeq	r0, r0, r0, lsl r4
   24d6c:	andeq	r0, r0, r0, lsl r4
   24d70:	andeq	r0, r0, r0, lsl r4
   24d74:	andeq	r0, r0, r0, lsl r4
   24d78:	andeq	r0, r0, r0, lsl r4
   24d7c:	andeq	r0, r0, r0, lsl r4
   24d80:	andeq	r0, r0, r0, lsl r4
   24d84:	andeq	r0, r0, r0, lsl r4
   24d88:	andeq	r0, r0, r0, lsl r4
   24d8c:	andeq	r0, r0, r0, lsl r4
   24d90:	andeq	r0, r0, r0, lsl r4
   24d94:	andeq	r0, r0, r0, lsl r4
   24d98:	andeq	r0, r0, r0, lsl r4
   24d9c:	andeq	r0, r0, r0, lsl r4
   24da0:	andeq	r0, r0, r0, lsl r4
   24da4:	andeq	r0, r0, ip, lsr #8
   24da8:	andeq	r0, r0, r0, lsl r4
   24dac:	andeq	r0, r0, r0, lsl r4
   24db0:	andeq	r0, r0, r0, lsl r4
   24db4:	andeq	r0, r0, r0, lsl r4
   24db8:	andeq	r0, r0, r0, lsl r4
   24dbc:	andeq	r0, r0, r0, lsl r4
   24dc0:	andeq	r0, r0, r0, lsl r4
   24dc4:	andeq	r0, r0, r0, lsl r4
   24dc8:	andeq	r0, r0, r0, lsl r4
   24dcc:	andeq	r0, r0, r0, lsl r4
   24dd0:	andeq	r0, r0, r0, lsl r4
   24dd4:	andeq	r0, r0, r0, lsl r4
   24dd8:	andeq	r0, r0, r0, lsl r4
   24ddc:	andeq	r0, r0, r0, lsl r4
   24de0:	andeq	r0, r0, r0, lsl r4
   24de4:	andeq	r0, r0, r0, lsl r4
   24de8:	andeq	r0, r0, r0, lsl r4
   24dec:	andeq	r0, r0, r0, lsl r4
   24df0:	andeq	r0, r0, r0, lsl r4
   24df4:	andeq	r0, r0, r0, lsl r4
   24df8:	andeq	r0, r0, r0, lsl r4
   24dfc:	andeq	r0, r0, r0, lsl r4
   24e00:	andeq	r0, r0, r0, lsl r4
   24e04:	andeq	r0, r0, r0, lsl r4
   24e08:	andeq	r0, r0, r0, lsl r4
   24e0c:	andeq	r0, r0, r0, lsl r4
   24e10:	andeq	r0, r0, r0, lsl r4
   24e14:	andeq	r0, r0, r0, lsl r4
   24e18:	andeq	r0, r0, r0, lsl r4
   24e1c:	andeq	r0, r0, r0, lsl r4
   24e20:	andeq	r0, r0, r0, lsl r4
   24e24:	andeq	r0, r0, r0, lsl r4
   24e28:	andeq	r0, r0, r0, lsl r4
   24e2c:	andeq	r0, r0, r0, lsl r4
   24e30:	andeq	r0, r0, r0, lsl r4
   24e34:	andeq	r0, r0, r0, lsl r4
   24e38:	andeq	r0, r0, r0, lsl r4
   24e3c:	andeq	r0, r0, r0, lsl r4
   24e40:	andeq	r0, r0, r0, lsl r4
   24e44:	andeq	r0, r0, r0, lsl r4
   24e48:	andeq	r0, r0, r0, lsl r4
   24e4c:	andeq	r0, r0, r0, lsl r4
   24e50:	andeq	r0, r0, r0, lsl r4
   24e54:	andeq	r0, r0, r0, lsl r4
   24e58:	andeq	r0, r0, r0, lsl r4
   24e5c:	andeq	r0, r0, r0, lsl r4
   24e60:	andeq	r0, r0, r0, lsl r4
   24e64:	andeq	r0, r0, r0, lsl r4
   24e68:	andeq	r0, r0, r0, lsl r4
   24e6c:	andeq	r0, r0, r0, lsl r4
   24e70:	andeq	r0, r0, r0, lsl r4
   24e74:	andeq	r0, r0, r0, lsl r4
   24e78:	andeq	r0, r0, r0, lsl r4
   24e7c:	andeq	r0, r0, r0, lsl r4
   24e80:	andeq	r0, r0, r0, lsl r4
   24e84:	andeq	r0, r0, r0, lsl r4
   24e88:	andeq	r0, r0, r0, lsl r4
   24e8c:	andeq	r0, r0, r0, lsl r4
   24e90:	andeq	r0, r0, r0, lsl r4
   24e94:	andeq	r0, r0, r4, asr #3
   24e98:	andeq	r0, r0, ip, lsr #8
   24e9c:	andeq	r0, r0, ip, lsr #8
   24ea0:	andeq	r0, r0, r8, lsl #4
   24ea4:	andeq	r0, r0, r0, lsl r4
   24ea8:	andeq	r0, r0, ip, lsr #8
   24eac:	andeq	r0, r0, ip, lsr #8
   24eb0:	andeq	r0, r0, ip, lsr #8
   24eb4:	andeq	r0, r0, r0, lsl r4
   24eb8:	andeq	r0, r0, r0, lsl r4
   24ebc:	andeq	r0, r0, ip, lsr #8
   24ec0:	mov	r0, r4
   24ec4:	mov	r1, #125	; 0x7d
   24ec8:	mov	r2, #1
   24ecc:	mov	r3, #64	; 0x40
   24ed0:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   24ed4:	cmp	r0, #0
   24ed8:	beq	25128 <myhtml_insertion_mode_in_table@@Base+0x6bc>
   24edc:	mov	r1, r0
   24ee0:	mov	r0, r4
   24ee4:	mov	r2, #0
   24ee8:	mov	r5, #0
   24eec:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   24ef0:	mov	r0, r4
   24ef4:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24ef8:	mov	r0, r5
   24efc:	sub	sp, fp, #16
   24f00:	pop	{r4, r5, r6, sl, fp, pc}
   24f04:	mov	r0, r4
   24f08:	mov	r1, r6
   24f0c:	sub	sp, fp, #16
   24f10:	pop	{r4, r5, r6, sl, fp, lr}
   24f14:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   24f18:	mov	r0, r4
   24f1c:	bl	11c00 <myhtml_tree_clear_stack_back_table_context@plt>
   24f20:	mov	r0, r4
   24f24:	mov	r1, #126	; 0x7e
   24f28:	mov	r2, #1
   24f2c:	mov	r5, #1
   24f30:	bl	11780 <myhtml_tree_node_insert@plt>
   24f34:	mov	r0, #12
   24f38:	str	r0, [r4, #168]	; 0xa8
   24f3c:	mov	r0, r5
   24f40:	sub	sp, fp, #16
   24f44:	pop	{r4, r5, r6, sl, fp, pc}
   24f48:	cmp	r0, #251	; 0xfb
   24f4c:	beq	2508c <myhtml_insertion_mode_in_table@@Base+0x620>
   24f50:	b	2510c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   24f54:	mov	r0, r4
   24f58:	bl	11504 <myhtml_tree_current_node@plt>
   24f5c:	ldr	r1, [r0, #4]
   24f60:	sub	r1, r1, #125	; 0x7d
   24f64:	cmp	r1, #10
   24f68:	bhi	2510c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   24f6c:	mov	r2, #1
   24f70:	movw	r3, #1187	; 0x4a3
   24f74:	tst	r3, r2, lsl r1
   24f78:	beq	2510c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   24f7c:	ldr	r0, [r0, #8]
   24f80:	cmp	r0, #1
   24f84:	bne	2510c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   24f88:	ldr	r0, [r4, #136]	; 0x88
   24f8c:	bl	11c0c <myhtml_tree_token_list_clean@plt>
   24f90:	ldr	r0, [r4, #168]	; 0xa8
   24f94:	mov	r1, #9
   24f98:	mov	r5, #1
   24f9c:	str	r1, [r4, #168]	; 0xa8
   24fa0:	str	r0, [r4, #172]	; 0xac
   24fa4:	mov	r0, r5
   24fa8:	sub	sp, fp, #16
   24fac:	pop	{r4, r5, r6, sl, fp, pc}
   24fb0:	mov	r0, r4
   24fb4:	mov	r1, r6
   24fb8:	mov	r2, #0
   24fbc:	mov	r5, #0
   24fc0:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   24fc4:	mov	r0, r5
   24fc8:	sub	sp, fp, #16
   24fcc:	pop	{r4, r5, r6, sl, fp, pc}
   24fd0:	mov	r0, r4
   24fd4:	bl	11c00 <myhtml_tree_clear_stack_back_table_context@plt>
   24fd8:	mov	r0, r4
   24fdc:	mov	r1, r6
   24fe0:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   24fe4:	ldr	r0, [r4]
   24fe8:	ldr	r1, [r0, #36]	; 0x24
   24fec:	mov	r0, r4
   24ff0:	bl	1115c <myhtml_tree_active_formatting_append@plt>
   24ff4:	mov	r0, #10
   24ff8:	str	r0, [r4, #168]	; 0xa8
   24ffc:	mov	r0, r5
   25000:	sub	sp, fp, #16
   25004:	pop	{r4, r5, r6, sl, fp, pc}
   25008:	mov	r0, r4
   2500c:	bl	11c00 <myhtml_tree_clear_stack_back_table_context@plt>
   25010:	mov	r0, r4
   25014:	mov	r1, #32
   25018:	mov	r2, #1
   2501c:	mov	r5, #1
   25020:	bl	11780 <myhtml_tree_node_insert@plt>
   25024:	b	2503c <myhtml_insertion_mode_in_table@@Base+0x5d0>
   25028:	mov	r0, r4
   2502c:	bl	11c00 <myhtml_tree_clear_stack_back_table_context@plt>
   25030:	mov	r0, r4
   25034:	mov	r1, r6
   25038:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   2503c:	mov	r0, #11
   25040:	str	r0, [r4, #168]	; 0xa8
   25044:	mov	r0, r5
   25048:	sub	sp, fp, #16
   2504c:	pop	{r4, r5, r6, sl, fp, pc}
   25050:	mov	r0, r4
   25054:	mov	r1, #128	; 0x80
   25058:	mov	r2, #1
   2505c:	mov	r3, #0
   25060:	mov	r5, #0
   25064:	bl	11660 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   25068:	ldr	r1, [r4, #104]	; 0x68
   2506c:	orrs	r0, r0, r1
   25070:	bne	25128 <myhtml_insertion_mode_in_table@@Base+0x6bc>
   25074:	mov	r0, r4
   25078:	mov	r1, r6
   2507c:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   25080:	str	r0, [r4, #104]	; 0x68
   25084:	mov	r0, r4
   25088:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   2508c:	mov	r0, r4
   25090:	mov	r1, r6
   25094:	sub	sp, fp, #16
   25098:	pop	{r4, r5, r6, sl, fp, lr}
   2509c:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   250a0:	ldr	r0, [r4, #8]
   250a4:	mov	r1, r6
   250a8:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   250ac:	ldr	r0, [r4, #8]
   250b0:	ldr	r2, [pc, #196]	; 2517c <myhtml_insertion_mode_in_table@@Base+0x710>
   250b4:	mov	r1, #6
   250b8:	mov	r3, #4
   250bc:	str	r1, [sp, #4]
   250c0:	mov	r1, r6
   250c4:	add	r2, pc, r2
   250c8:	str	r2, [sp]
   250cc:	ldr	r2, [pc, #172]	; 25180 <myhtml_insertion_mode_in_table@@Base+0x714>
   250d0:	add	r2, pc, r2
   250d4:	bl	10ea4 <myhtml_token_attr_match_case@plt>
   250d8:	cmp	r0, #0
   250dc:	beq	2510c <myhtml_insertion_mode_in_table@@Base+0x6a0>
   250e0:	mov	r0, r4
   250e4:	mov	r1, r6
   250e8:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   250ec:	mov	r0, r4
   250f0:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   250f4:	ldr	r0, [r6, #48]	; 0x30
   250f8:	orr	r0, r0, #2
   250fc:	str	r0, [r6, #48]	; 0x30
   25100:	mov	r0, r5
   25104:	sub	sp, fp, #16
   25108:	pop	{r4, r5, r6, sl, fp, pc}
   2510c:	mov	r0, #1
   25110:	mov	r1, r6
   25114:	strb	r0, [r4, #188]	; 0xbc
   25118:	mov	r0, r4
   2511c:	bl	1151c <myhtml_insertion_mode_in_body@plt>
   25120:	mov	r5, #0
   25124:	strb	r5, [r4, #188]	; 0xbc
   25128:	mov	r0, r5
   2512c:	sub	sp, fp, #16
   25130:	pop	{r4, r5, r6, sl, fp, pc}
   25134:	mov	r0, r4
   25138:	mov	r1, #125	; 0x7d
   2513c:	mov	r2, #1
   25140:	mov	r3, #64	; 0x40
   25144:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25148:	cmp	r0, #0
   2514c:	beq	25128 <myhtml_insertion_mode_in_table@@Base+0x6bc>
   25150:	mov	r0, r4
   25154:	mov	r1, #125	; 0x7d
   25158:	mov	r2, #1
   2515c:	mov	r3, #0
   25160:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   25164:	mov	r0, r4
   25168:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   2516c:	mov	r5, #1
   25170:	mov	r0, r5
   25174:	sub	sp, fp, #16
   25178:	pop	{r4, r5, r6, sl, fp, pc}
   2517c:	muleq	sp, r3, r2
   25180:	andeq	fp, r1, r3, lsr #32

00025184 <myhtml_insertion_mode_in_table_text@@Base>:
   25184:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25188:	add	fp, sp, #24
   2518c:	mov	r4, r0
   25190:	ldr	r0, [r1]
   25194:	cmp	r0, #1
   25198:	bne	251bc <myhtml_insertion_mode_in_table_text@@Base+0x38>
   2519c:	ldr	r0, [r1, #48]	; 0x30
   251a0:	mov	r5, r1
   251a4:	tst	r0, #2048	; 0x800
   251a8:	bne	25218 <myhtml_insertion_mode_in_table_text@@Base+0x94>
   251ac:	ldr	r0, [r4, #136]	; 0x88
   251b0:	mov	r1, r5
   251b4:	bl	11b4c <myhtml_tree_token_list_append@plt>
   251b8:	b	25300 <myhtml_insertion_mode_in_table_text@@Base+0x17c>
   251bc:	ldr	r5, [r4, #136]	; 0x88
   251c0:	ldr	r0, [r5, #4]
   251c4:	cmp	r0, #0
   251c8:	beq	25360 <myhtml_insertion_mode_in_table_text@@Base+0x1dc>
   251cc:	ldr	r1, [r5]
   251d0:	mov	r2, #0
   251d4:	ldr	r3, [r1, r2, lsl #2]
   251d8:	ldr	r3, [r3, #48]	; 0x30
   251dc:	tst	r3, #8
   251e0:	beq	2530c <myhtml_insertion_mode_in_table_text@@Base+0x188>
   251e4:	add	r2, r2, #1
   251e8:	cmp	r2, r0
   251ec:	bcc	251d4 <myhtml_insertion_mode_in_table_text@@Base+0x50>
   251f0:	mov	r6, #0
   251f4:	ldr	r0, [r5]
   251f8:	ldr	r1, [r0, r6, lsl #2]
   251fc:	mov	r0, r4
   25200:	bl	11054 <myhtml_tree_node_insert_text@plt>
   25204:	ldr	r0, [r5, #4]
   25208:	add	r6, r6, #1
   2520c:	cmp	r6, r0
   25210:	bcc	251f4 <myhtml_insertion_mode_in_table_text@@Base+0x70>
   25214:	b	25360 <myhtml_insertion_mode_in_table_text@@Base+0x1dc>
   25218:	ldr	r0, [r4, #8]
   2521c:	mov	r1, r5
   25220:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   25224:	ldr	r7, [r5, #12]
   25228:	cmp	r7, #0
   2522c:	beq	25300 <myhtml_insertion_mode_in_table_text@@Base+0x17c>
   25230:	mov	r0, #0
   25234:	mov	r8, #0
   25238:	ldr	r3, [r5, #4]
   2523c:	ldrb	r1, [r3, r0]
   25240:	cmp	r1, #0
   25244:	bne	25280 <myhtml_insertion_mode_in_table_text@@Base+0xfc>
   25248:	b	2529c <myhtml_insertion_mode_in_table_text@@Base+0x118>
   2524c:	ldr	r2, [r5, #12]
   25250:	sub	r1, r0, r7
   25254:	add	r1, r1, r2
   25258:	mov	r2, r7
   2525c:	str	r1, [r5, #12]
   25260:	mov	r6, r7
   25264:	sub	r0, r0, r8
   25268:	add	r1, r3, r2
   2526c:	sub	r2, r6, r2
   25270:	add	r0, r3, r0
   25274:	bl	10f94 <memmove@plt>
   25278:	add	r8, r8, #1
   2527c:	sub	r0, r6, #1
   25280:	add	r0, r0, #1
   25284:	cmp	r0, r7
   25288:	bcs	25374 <myhtml_insertion_mode_in_table_text@@Base+0x1f0>
   2528c:	ldr	r3, [r5, #4]
   25290:	ldrb	r1, [r3, r0]
   25294:	cmp	r1, #0
   25298:	bne	25280 <myhtml_insertion_mode_in_table_text@@Base+0xfc>
   2529c:	cmp	r0, r7
   252a0:	mov	r2, r0
   252a4:	bcs	252c8 <myhtml_insertion_mode_in_table_text@@Base+0x144>
   252a8:	add	r1, r0, #1
   252ac:	cmp	r7, r1
   252b0:	beq	2524c <myhtml_insertion_mode_in_table_text@@Base+0xc8>
   252b4:	ldrb	r2, [r3, r1]
   252b8:	add	r1, r1, #1
   252bc:	cmp	r2, #0
   252c0:	beq	252ac <myhtml_insertion_mode_in_table_text@@Base+0x128>
   252c4:	sub	r2, r1, #1
   252c8:	ldr	r6, [r5, #12]
   252cc:	sub	r1, r0, r2
   252d0:	cmp	r2, r7
   252d4:	add	r1, r1, r6
   252d8:	mov	r6, r2
   252dc:	str	r1, [r5, #12]
   252e0:	bcs	25264 <myhtml_insertion_mode_in_table_text@@Base+0xe0>
   252e4:	ldrb	r1, [r3, r6]
   252e8:	cmp	r1, #0
   252ec:	beq	25264 <myhtml_insertion_mode_in_table_text@@Base+0xe0>
   252f0:	add	r6, r6, #1
   252f4:	cmp	r7, r6
   252f8:	bne	252e4 <myhtml_insertion_mode_in_table_text@@Base+0x160>
   252fc:	b	25260 <myhtml_insertion_mode_in_table_text@@Base+0xdc>
   25300:	mov	r6, #0
   25304:	mov	r0, r6
   25308:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2530c:	mov	r8, #1
   25310:	mov	r0, r4
   25314:	strb	r8, [r4, #188]	; 0xbc
   25318:	ldr	r1, [r1]
   2531c:	bl	1151c <myhtml_insertion_mode_in_body@plt>
   25320:	mov	r7, #0
   25324:	strb	r7, [r4, #188]	; 0xbc
   25328:	ldr	r0, [r5, #4]
   2532c:	cmp	r0, #2
   25330:	bcc	25360 <myhtml_insertion_mode_in_table_text@@Base+0x1dc>
   25334:	mov	r6, #1
   25338:	ldr	r0, [r5]
   2533c:	strb	r8, [r4, #188]	; 0xbc
   25340:	ldr	r1, [r0, r6, lsl #2]
   25344:	mov	r0, r4
   25348:	bl	1151c <myhtml_insertion_mode_in_body@plt>
   2534c:	strb	r7, [r4, #188]	; 0xbc
   25350:	add	r6, r6, #1
   25354:	ldr	r0, [r5, #4]
   25358:	cmp	r6, r0
   2535c:	bcc	25338 <myhtml_insertion_mode_in_table_text@@Base+0x1b4>
   25360:	ldr	r0, [r4, #172]	; 0xac
   25364:	mov	r6, #1
   25368:	str	r0, [r4, #168]	; 0xa8
   2536c:	mov	r0, r6
   25370:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25374:	ldr	r0, [r5, #12]
   25378:	mov	r6, #0
   2537c:	cmp	r0, #0
   25380:	beq	2536c <myhtml_insertion_mode_in_table_text@@Base+0x1e8>
   25384:	ldr	r0, [r4, #136]	; 0x88
   25388:	mov	r1, r5
   2538c:	bl	11b4c <myhtml_tree_token_list_append@plt>
   25390:	mov	r0, r6
   25394:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025398 <myhtml_insertion_mode_in_caption@@Base>:
   25398:	push	{r4, r5, fp, lr}
   2539c:	add	fp, sp, #8
   253a0:	mov	r4, r0
   253a4:	ldr	r0, [r1]
   253a8:	ldr	r2, [r1, #48]	; 0x30
   253ac:	tst	r2, #1
   253b0:	bne	25458 <myhtml_insertion_mode_in_caption@@Base+0xc0>
   253b4:	sub	r2, r0, #126	; 0x7e
   253b8:	cmp	r2, #9
   253bc:	bhi	253d0 <myhtml_insertion_mode_in_caption@@Base+0x38>
   253c0:	mov	r3, #1
   253c4:	movw	r5, #627	; 0x273
   253c8:	tst	r5, r3, lsl r2
   253cc:	bne	253ec <myhtml_insertion_mode_in_caption@@Base+0x54>
   253d0:	sub	r0, r0, #27
   253d4:	cmp	r0, #5
   253d8:	bhi	25668 <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   253dc:	mov	r2, #1
   253e0:	mov	r3, #49	; 0x31
   253e4:	tst	r3, r2, lsl r0
   253e8:	beq	25668 <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   253ec:	mov	r0, r4
   253f0:	mov	r1, #27
   253f4:	mov	r2, #1
   253f8:	mov	r3, #64	; 0x40
   253fc:	mov	r5, #1
   25400:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25404:	cmp	r0, #0
   25408:	beq	2565c <myhtml_insertion_mode_in_caption@@Base+0x2c4>
   2540c:	mov	r0, r4
   25410:	mov	r1, #0
   25414:	mov	r2, #0
   25418:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   2541c:	mov	r0, r4
   25420:	bl	11504 <myhtml_tree_current_node@plt>
   25424:	mov	r1, #27
   25428:	bl	11864 <myhtml_is_html_node@plt>
   2542c:	mov	r0, r4
   25430:	mov	r1, #27
   25434:	mov	r2, #1
   25438:	mov	r3, #0
   2543c:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   25440:	mov	r0, r4
   25444:	bl	11af8 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   25448:	mov	r0, #8
   2544c:	str	r0, [r4, #168]	; 0xa8
   25450:	mov	r0, r5
   25454:	pop	{r4, r5, fp, pc}
   25458:	sub	r0, r0, #23
   2545c:	cmp	r0, #112	; 0x70
   25460:	bhi	25668 <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   25464:	add	r2, pc, #8
   25468:	mov	r5, #0
   2546c:	ldr	r0, [r2, r0, lsl #2]
   25470:	add	pc, r2, r0
   25474:	andeq	r0, r0, ip, ror #3
   25478:	strdeq	r0, [r0], -r4
   2547c:	strdeq	r0, [r0], -r4
   25480:	strdeq	r0, [r0], -r4
   25484:	andeq	r0, r0, r4, asr #3
   25488:	strdeq	r0, [r0], -r4
   2548c:	strdeq	r0, [r0], -r4
   25490:	strdeq	r0, [r0], -r4
   25494:	andeq	r0, r0, ip, ror #3
   25498:	andeq	r0, r0, ip, ror #3
   2549c:	strdeq	r0, [r0], -r4
   254a0:	strdeq	r0, [r0], -r4
   254a4:	strdeq	r0, [r0], -r4
   254a8:	strdeq	r0, [r0], -r4
   254ac:	strdeq	r0, [r0], -r4
   254b0:	strdeq	r0, [r0], -r4
   254b4:	strdeq	r0, [r0], -r4
   254b8:	strdeq	r0, [r0], -r4
   254bc:	strdeq	r0, [r0], -r4
   254c0:	strdeq	r0, [r0], -r4
   254c4:	strdeq	r0, [r0], -r4
   254c8:	strdeq	r0, [r0], -r4
   254cc:	strdeq	r0, [r0], -r4
   254d0:	strdeq	r0, [r0], -r4
   254d4:	strdeq	r0, [r0], -r4
   254d8:	strdeq	r0, [r0], -r4
   254dc:	strdeq	r0, [r0], -r4
   254e0:	strdeq	r0, [r0], -r4
   254e4:	strdeq	r0, [r0], -r4
   254e8:	strdeq	r0, [r0], -r4
   254ec:	strdeq	r0, [r0], -r4
   254f0:	strdeq	r0, [r0], -r4
   254f4:	strdeq	r0, [r0], -r4
   254f8:	strdeq	r0, [r0], -r4
   254fc:	strdeq	r0, [r0], -r4
   25500:	strdeq	r0, [r0], -r4
   25504:	strdeq	r0, [r0], -r4
   25508:	strdeq	r0, [r0], -r4
   2550c:	strdeq	r0, [r0], -r4
   25510:	strdeq	r0, [r0], -r4
   25514:	strdeq	r0, [r0], -r4
   25518:	strdeq	r0, [r0], -r4
   2551c:	andeq	r0, r0, ip, ror #3
   25520:	strdeq	r0, [r0], -r4
   25524:	strdeq	r0, [r0], -r4
   25528:	strdeq	r0, [r0], -r4
   2552c:	strdeq	r0, [r0], -r4
   25530:	strdeq	r0, [r0], -r4
   25534:	strdeq	r0, [r0], -r4
   25538:	strdeq	r0, [r0], -r4
   2553c:	strdeq	r0, [r0], -r4
   25540:	strdeq	r0, [r0], -r4
   25544:	strdeq	r0, [r0], -r4
   25548:	strdeq	r0, [r0], -r4
   2554c:	strdeq	r0, [r0], -r4
   25550:	strdeq	r0, [r0], -r4
   25554:	strdeq	r0, [r0], -r4
   25558:	strdeq	r0, [r0], -r4
   2555c:	strdeq	r0, [r0], -r4
   25560:	strdeq	r0, [r0], -r4
   25564:	strdeq	r0, [r0], -r4
   25568:	strdeq	r0, [r0], -r4
   2556c:	strdeq	r0, [r0], -r4
   25570:	strdeq	r0, [r0], -r4
   25574:	strdeq	r0, [r0], -r4
   25578:	strdeq	r0, [r0], -r4
   2557c:	strdeq	r0, [r0], -r4
   25580:	strdeq	r0, [r0], -r4
   25584:	strdeq	r0, [r0], -r4
   25588:	strdeq	r0, [r0], -r4
   2558c:	strdeq	r0, [r0], -r4
   25590:	strdeq	r0, [r0], -r4
   25594:	strdeq	r0, [r0], -r4
   25598:	strdeq	r0, [r0], -r4
   2559c:	strdeq	r0, [r0], -r4
   255a0:	strdeq	r0, [r0], -r4
   255a4:	strdeq	r0, [r0], -r4
   255a8:	strdeq	r0, [r0], -r4
   255ac:	strdeq	r0, [r0], -r4
   255b0:	strdeq	r0, [r0], -r4
   255b4:	strdeq	r0, [r0], -r4
   255b8:	strdeq	r0, [r0], -r4
   255bc:	strdeq	r0, [r0], -r4
   255c0:	strdeq	r0, [r0], -r4
   255c4:	strdeq	r0, [r0], -r4
   255c8:	strdeq	r0, [r0], -r4
   255cc:	strdeq	r0, [r0], -r4
   255d0:	strdeq	r0, [r0], -r4
   255d4:	strdeq	r0, [r0], -r4
   255d8:	strdeq	r0, [r0], -r4
   255dc:	strdeq	r0, [r0], -r4
   255e0:	strdeq	r0, [r0], -r4
   255e4:	strdeq	r0, [r0], -r4
   255e8:	strdeq	r0, [r0], -r4
   255ec:	strdeq	r0, [r0], -r4
   255f0:	strdeq	r0, [r0], -r4
   255f4:	strdeq	r0, [r0], -r4
   255f8:	strdeq	r0, [r0], -r4
   255fc:	strdeq	r0, [r0], -r4
   25600:	strdeq	r0, [r0], -r4
   25604:	strdeq	r0, [r0], -r4
   25608:	strdeq	r0, [r0], -r4
   2560c:	andeq	r0, r0, r0, lsl #4
   25610:	andeq	r0, r0, ip, ror #3
   25614:	andeq	r0, r0, ip, ror #3
   25618:	strdeq	r0, [r0], -r4
   2561c:	strdeq	r0, [r0], -r4
   25620:	andeq	r0, r0, ip, ror #3
   25624:	andeq	r0, r0, ip, ror #3
   25628:	andeq	r0, r0, ip, ror #3
   2562c:	strdeq	r0, [r0], -r4
   25630:	strdeq	r0, [r0], -r4
   25634:	andeq	r0, r0, ip, ror #3
   25638:	mov	r0, r4
   2563c:	mov	r1, #27
   25640:	mov	r2, #1
   25644:	mov	r3, #64	; 0x40
   25648:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   2564c:	cmp	r0, #0
   25650:	beq	25660 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   25654:	mov	r5, #0
   25658:	b	2540c <myhtml_insertion_mode_in_caption@@Base+0x74>
   2565c:	mov	r5, #0
   25660:	mov	r0, r5
   25664:	pop	{r4, r5, fp, pc}
   25668:	mov	r0, r4
   2566c:	pop	{r4, r5, fp, lr}
   25670:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   25674:	mov	r0, r4
   25678:	mov	r1, #27
   2567c:	mov	r2, #1
   25680:	mov	r3, #64	; 0x40
   25684:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25688:	cmp	r0, #0
   2568c:	beq	25660 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   25690:	mov	r0, r4
   25694:	mov	r1, #0
   25698:	mov	r2, #0
   2569c:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   256a0:	mov	r0, r4
   256a4:	bl	11504 <myhtml_tree_current_node@plt>
   256a8:	mov	r1, #27
   256ac:	bl	11864 <myhtml_is_html_node@plt>
   256b0:	mov	r0, r4
   256b4:	mov	r1, #27
   256b8:	mov	r2, #1
   256bc:	mov	r3, #0
   256c0:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   256c4:	mov	r0, r4
   256c8:	bl	11af8 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   256cc:	mov	r0, #8
   256d0:	mov	r5, #1
   256d4:	str	r0, [r4, #168]	; 0xa8
   256d8:	mov	r0, r5
   256dc:	pop	{r4, r5, fp, pc}

000256e0 <myhtml_insertion_mode_in_column_group@@Base>:
   256e0:	push	{r4, r5, fp, lr}
   256e4:	add	fp, sp, #8
   256e8:	mov	r5, r0
   256ec:	ldr	r0, [r1]
   256f0:	ldr	r2, [r1, #48]	; 0x30
   256f4:	mov	r4, #0
   256f8:	tst	r2, #1
   256fc:	bne	257c8 <myhtml_insertion_mode_in_column_group@@Base+0xe8>
   25700:	cmp	r0, #64	; 0x40
   25704:	bgt	25810 <myhtml_insertion_mode_in_column_group@@Base+0x130>
   25708:	sub	r0, r0, #1
   2570c:	cmp	r0, #30
   25710:	bhi	25834 <myhtml_insertion_mode_in_column_group@@Base+0x154>
   25714:	add	r2, pc, #4
   25718:	ldr	r0, [r2, r0, lsl #2]
   2571c:	add	pc, r2, r0
   25720:	andeq	r0, r0, ip, ror r0
   25724:	andeq	r0, r0, ip, asr r1
   25728:	andeq	r0, r0, r8, asr #2
   2572c:	andeq	r0, r0, r4, lsl r1
   25730:	andeq	r0, r0, r4, lsl r1
   25734:	andeq	r0, r0, r4, lsl r1
   25738:	andeq	r0, r0, r4, lsl r1
   2573c:	andeq	r0, r0, r4, lsl r1
   25740:	andeq	r0, r0, r4, lsl r1
   25744:	andeq	r0, r0, r4, lsl r1
   25748:	andeq	r0, r0, r4, lsl r1
   2574c:	andeq	r0, r0, r4, lsl r1
   25750:	andeq	r0, r0, r4, lsl r1
   25754:	andeq	r0, r0, r4, lsl r1
   25758:	andeq	r0, r0, r4, lsl r1
   2575c:	andeq	r0, r0, r4, lsl r1
   25760:	andeq	r0, r0, r4, lsl r1
   25764:	andeq	r0, r0, r4, lsl r1
   25768:	andeq	r0, r0, r4, lsl r1
   2576c:	andeq	r0, r0, r4, lsl r1
   25770:	andeq	r0, r0, r4, lsl r1
   25774:	andeq	r0, r0, r4, lsl r1
   25778:	andeq	r0, r0, r4, lsl r1
   2577c:	andeq	r0, r0, r4, lsl r1
   25780:	andeq	r0, r0, r4, lsl r1
   25784:	andeq	r0, r0, r4, lsl r1
   25788:	andeq	r0, r0, r4, lsl r1
   2578c:	andeq	r0, r0, r4, lsl r1
   25790:	andeq	r0, r0, r4, lsl r1
   25794:	andeq	r0, r0, r4, lsl r1
   25798:	andeq	r0, r0, r4, ror r1
   2579c:	ldr	r0, [r1, #48]	; 0x30
   257a0:	tst	r0, #8
   257a4:	bne	258ac <myhtml_insertion_mode_in_column_group@@Base+0x1cc>
   257a8:	mov	r0, r5
   257ac:	bl	10fdc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   257b0:	cmp	r0, #0
   257b4:	beq	25834 <myhtml_insertion_mode_in_column_group@@Base+0x154>
   257b8:	mov	r1, r0
   257bc:	mov	r0, r5
   257c0:	bl	11054 <myhtml_tree_node_insert_text@plt>
   257c4:	b	25834 <myhtml_insertion_mode_in_column_group@@Base+0x154>
   257c8:	cmp	r0, #31
   257cc:	beq	25868 <myhtml_insertion_mode_in_column_group@@Base+0x188>
   257d0:	cmp	r0, #128	; 0x80
   257d4:	beq	25870 <myhtml_insertion_mode_in_column_group@@Base+0x190>
   257d8:	cmp	r0, #32
   257dc:	bne	25834 <myhtml_insertion_mode_in_column_group@@Base+0x154>
   257e0:	mov	r0, r5
   257e4:	bl	11504 <myhtml_tree_current_node@plt>
   257e8:	cmp	r0, #0
   257ec:	beq	25868 <myhtml_insertion_mode_in_column_group@@Base+0x188>
   257f0:	mov	r1, #32
   257f4:	bl	11864 <myhtml_is_html_node@plt>
   257f8:	cmp	r0, #0
   257fc:	beq	25868 <myhtml_insertion_mode_in_column_group@@Base+0x188>
   25800:	mov	r0, r5
   25804:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   25808:	mov	r0, #8
   2580c:	b	25864 <myhtml_insertion_mode_in_column_group@@Base+0x184>
   25810:	cmp	r0, #65	; 0x41
   25814:	beq	25828 <myhtml_insertion_mode_in_column_group@@Base+0x148>
   25818:	cmp	r0, #128	; 0x80
   2581c:	beq	25870 <myhtml_insertion_mode_in_column_group@@Base+0x190>
   25820:	cmp	r0, #251	; 0xfb
   25824:	bne	25834 <myhtml_insertion_mode_in_column_group@@Base+0x154>
   25828:	mov	r0, r5
   2582c:	pop	{r4, r5, fp, lr}
   25830:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   25834:	mov	r0, r5
   25838:	bl	11504 <myhtml_tree_current_node@plt>
   2583c:	cmp	r0, #0
   25840:	beq	25868 <myhtml_insertion_mode_in_column_group@@Base+0x188>
   25844:	mov	r1, #32
   25848:	bl	11864 <myhtml_is_html_node@plt>
   2584c:	cmp	r0, #0
   25850:	beq	25868 <myhtml_insertion_mode_in_column_group@@Base+0x188>
   25854:	mov	r0, r5
   25858:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   2585c:	mov	r0, #8
   25860:	mov	r4, #1
   25864:	str	r0, [r5, #168]	; 0xa8
   25868:	mov	r0, r4
   2586c:	pop	{r4, r5, fp, pc}
   25870:	mov	r0, r5
   25874:	pop	{r4, r5, fp, lr}
   25878:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   2587c:	mov	r0, r5
   25880:	mov	r2, #0
   25884:	mov	r4, #0
   25888:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   2588c:	mov	r0, r4
   25890:	pop	{r4, r5, fp, pc}
   25894:	mov	r0, r5
   25898:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   2589c:	mov	r0, r5
   258a0:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   258a4:	mov	r0, r4
   258a8:	pop	{r4, r5, fp, pc}
   258ac:	mov	r0, r5
   258b0:	bl	11054 <myhtml_tree_node_insert_text@plt>
   258b4:	mov	r0, r4
   258b8:	pop	{r4, r5, fp, pc}

000258bc <myhtml_insertion_mode_in_table_body@@Base>:
   258bc:	push	{r4, r5, r6, r7, fp, lr}
   258c0:	add	fp, sp, #16
   258c4:	mov	r6, r1
   258c8:	mov	r4, r0
   258cc:	ldr	r1, [r1]
   258d0:	ldr	r0, [r6, #48]	; 0x30
   258d4:	tst	r0, #1
   258d8:	bne	25928 <myhtml_insertion_mode_in_table_body@@Base+0x6c>
   258dc:	sub	r0, r1, #126	; 0x7e
   258e0:	cmp	r0, #9
   258e4:	bhi	25b70 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   258e8:	mov	r2, #1
   258ec:	mov	r3, #81	; 0x51
   258f0:	tst	r3, r2, lsl r0
   258f4:	bne	25b8c <myhtml_insertion_mode_in_table_body@@Base+0x2d0>
   258f8:	mov	r3, #34	; 0x22
   258fc:	tst	r3, r2, lsl r0
   25900:	beq	25b40 <myhtml_insertion_mode_in_table_body@@Base+0x284>
   25904:	mov	r0, r4
   25908:	bl	11318 <myhtml_tree_clear_stack_back_table_body_context@plt>
   2590c:	mov	r0, r4
   25910:	mov	r1, #135	; 0x87
   25914:	mov	r2, #1
   25918:	mov	r5, #1
   2591c:	bl	11780 <myhtml_tree_node_insert@plt>
   25920:	mov	r0, #13
   25924:	b	25b34 <myhtml_insertion_mode_in_table_body@@Base+0x278>
   25928:	sub	r0, r1, #23
   2592c:	cmp	r0, #112	; 0x70
   25930:	bhi	25c14 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   25934:	add	r2, pc, #8
   25938:	mov	r5, #0
   2593c:	ldr	r0, [r2, r0, lsl #2]
   25940:	add	pc, r2, r0
   25944:	andeq	r0, r0, r8, asr #5
   25948:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2594c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25950:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25954:	andeq	r0, r0, r8, asr #5
   25958:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2595c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25960:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25964:	andeq	r0, r0, r8, asr #5
   25968:	andeq	r0, r0, r8, asr #5
   2596c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25970:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25974:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25978:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2597c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25980:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25984:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25988:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2598c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25990:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25994:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25998:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2599c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259ec:	andeq	r0, r0, r8, asr #5
   259f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   259fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a04:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a08:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a10:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a14:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a18:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a1c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a28:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a2c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a30:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a34:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a38:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a3c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a40:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a44:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a48:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a4c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a50:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a54:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a58:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a5c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a68:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a6c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a70:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a74:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a78:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a7c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a80:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a88:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a90:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a94:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25a9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25aa0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25aa4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25aa8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25aac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ab0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ab4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ab8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25abc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ac0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ac4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ac8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25acc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ad0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ad4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25ad8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25adc:	andeq	r0, r0, r0, ror #5
   25ae0:	andeq	r0, r0, r4, asr #3
   25ae4:	andeq	r0, r0, r8, asr #5
   25ae8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25aec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25af0:	andeq	r0, r0, r4, asr #3
   25af4:	andeq	r0, r0, r8, asr #5
   25af8:	andeq	r0, r0, r4, asr #3
   25afc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25b00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   25b04:	andeq	r0, r0, r8, asr #5
   25b08:	mov	r0, r4
   25b0c:	mov	r2, #1
   25b10:	mov	r3, #64	; 0x40
   25b14:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25b18:	cmp	r0, #0
   25b1c:	beq	25c0c <myhtml_insertion_mode_in_table_body@@Base+0x350>
   25b20:	mov	r0, r4
   25b24:	bl	11318 <myhtml_tree_clear_stack_back_table_body_context@plt>
   25b28:	mov	r0, r4
   25b2c:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   25b30:	mov	r0, #8
   25b34:	str	r0, [r4, #168]	; 0xa8
   25b38:	mov	r0, r5
   25b3c:	pop	{r4, r5, r6, r7, fp, pc}
   25b40:	cmp	r0, #9
   25b44:	bne	25b70 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   25b48:	mov	r0, r4
   25b4c:	bl	11318 <myhtml_tree_clear_stack_back_table_body_context@plt>
   25b50:	mov	r0, r4
   25b54:	mov	r1, r6
   25b58:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   25b5c:	mov	r0, #13
   25b60:	mov	r5, #0
   25b64:	str	r0, [r4, #168]	; 0xa8
   25b68:	mov	r0, r5
   25b6c:	pop	{r4, r5, r6, r7, fp, pc}
   25b70:	sub	r0, r1, #27
   25b74:	cmp	r0, #5
   25b78:	bhi	25c14 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   25b7c:	mov	r1, #1
   25b80:	mov	r2, #49	; 0x31
   25b84:	tst	r2, r1, lsl r0
   25b88:	beq	25c14 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   25b8c:	mov	r0, r4
   25b90:	mov	r1, #126	; 0x7e
   25b94:	mov	r2, #1
   25b98:	mov	r3, #64	; 0x40
   25b9c:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25ba0:	mov	r6, r0
   25ba4:	mov	r0, r4
   25ba8:	mov	r1, #130	; 0x82
   25bac:	mov	r2, #1
   25bb0:	mov	r3, #64	; 0x40
   25bb4:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25bb8:	mov	r5, r0
   25bbc:	mov	r0, r4
   25bc0:	mov	r1, #132	; 0x84
   25bc4:	mov	r2, #1
   25bc8:	mov	r3, #64	; 0x40
   25bcc:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25bd0:	cmp	r6, #0
   25bd4:	cmpeq	r5, #0
   25bd8:	beq	25c00 <myhtml_insertion_mode_in_table_body@@Base+0x344>
   25bdc:	mov	r0, r4
   25be0:	bl	11318 <myhtml_tree_clear_stack_back_table_body_context@plt>
   25be4:	mov	r0, r4
   25be8:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   25bec:	mov	r0, #8
   25bf0:	mov	r5, #1
   25bf4:	str	r0, [r4, #168]	; 0xa8
   25bf8:	mov	r0, r5
   25bfc:	pop	{r4, r5, r6, r7, fp, pc}
   25c00:	mov	r5, #0
   25c04:	cmp	r0, #0
   25c08:	bne	25bdc <myhtml_insertion_mode_in_table_body@@Base+0x320>
   25c0c:	mov	r0, r5
   25c10:	pop	{r4, r5, r6, r7, fp, pc}
   25c14:	mov	r0, r4
   25c18:	mov	r1, r6
   25c1c:	pop	{r4, r5, r6, r7, fp, lr}
   25c20:	b	24a6c <myhtml_insertion_mode_in_table@@Base>
   25c24:	mov	r0, r4
   25c28:	mov	r1, #126	; 0x7e
   25c2c:	mov	r2, #1
   25c30:	mov	r3, #64	; 0x40
   25c34:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25c38:	mov	r7, r0
   25c3c:	mov	r0, r4
   25c40:	mov	r1, #130	; 0x82
   25c44:	mov	r2, #1
   25c48:	mov	r3, #64	; 0x40
   25c4c:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25c50:	mov	r6, r0
   25c54:	mov	r0, r4
   25c58:	mov	r1, #132	; 0x84
   25c5c:	mov	r2, #1
   25c60:	mov	r3, #64	; 0x40
   25c64:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25c68:	cmp	r7, #0
   25c6c:	cmpeq	r6, #0
   25c70:	bne	25bdc <myhtml_insertion_mode_in_table_body@@Base+0x320>
   25c74:	b	25c04 <myhtml_insertion_mode_in_table_body@@Base+0x348>

00025c78 <myhtml_insertion_mode_in_row@@Base>:
   25c78:	push	{r4, r5, r6, sl, fp, lr}
   25c7c:	add	fp, sp, #16
   25c80:	mov	r6, r1
   25c84:	mov	r4, r0
   25c88:	ldr	r1, [r1]
   25c8c:	ldr	r0, [r6, #48]	; 0x30
   25c90:	tst	r0, #1
   25c94:	bne	25cf0 <myhtml_insertion_mode_in_row@@Base+0x78>
   25c98:	sub	r0, r1, #126	; 0x7e
   25c9c:	cmp	r0, #9
   25ca0:	bhi	25f28 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   25ca4:	mov	r2, #1
   25ca8:	movw	r3, #593	; 0x251
   25cac:	tst	r3, r2, lsl r0
   25cb0:	bne	25f44 <myhtml_insertion_mode_in_row@@Base+0x2cc>
   25cb4:	mov	r3, #34	; 0x22
   25cb8:	tst	r3, r2, lsl r0
   25cbc:	beq	25f28 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   25cc0:	mov	r0, r4
   25cc4:	bl	11384 <myhtml_tree_clear_stack_back_table_row_context@plt>
   25cc8:	mov	r0, r4
   25ccc:	mov	r1, r6
   25cd0:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   25cd4:	ldr	r0, [r4]
   25cd8:	ldr	r1, [r0, #36]	; 0x24
   25cdc:	mov	r0, r4
   25ce0:	bl	1115c <myhtml_tree_active_formatting_append@plt>
   25ce4:	mov	r0, #14
   25ce8:	str	r0, [r4, #168]	; 0xa8
   25cec:	b	25f84 <myhtml_insertion_mode_in_row@@Base+0x30c>
   25cf0:	sub	r0, r1, #23
   25cf4:	cmp	r0, #112	; 0x70
   25cf8:	bhi	25f90 <myhtml_insertion_mode_in_row@@Base+0x318>
   25cfc:	add	r2, pc, #8
   25d00:	mov	r5, #0
   25d04:	ldr	r0, [r2, r0, lsl #2]
   25d08:	add	pc, r2, r0
   25d0c:	andeq	r0, r0, ip, ror r2
   25d10:	andeq	r0, r0, r4, lsl #5
   25d14:	andeq	r0, r0, r4, lsl #5
   25d18:	andeq	r0, r0, r4, lsl #5
   25d1c:	andeq	r0, r0, ip, ror r2
   25d20:	andeq	r0, r0, r4, lsl #5
   25d24:	andeq	r0, r0, r4, lsl #5
   25d28:	andeq	r0, r0, r4, lsl #5
   25d2c:	andeq	r0, r0, ip, ror r2
   25d30:	andeq	r0, r0, ip, ror r2
   25d34:	andeq	r0, r0, r4, lsl #5
   25d38:	andeq	r0, r0, r4, lsl #5
   25d3c:	andeq	r0, r0, r4, lsl #5
   25d40:	andeq	r0, r0, r4, lsl #5
   25d44:	andeq	r0, r0, r4, lsl #5
   25d48:	andeq	r0, r0, r4, lsl #5
   25d4c:	andeq	r0, r0, r4, lsl #5
   25d50:	andeq	r0, r0, r4, lsl #5
   25d54:	andeq	r0, r0, r4, lsl #5
   25d58:	andeq	r0, r0, r4, lsl #5
   25d5c:	andeq	r0, r0, r4, lsl #5
   25d60:	andeq	r0, r0, r4, lsl #5
   25d64:	andeq	r0, r0, r4, lsl #5
   25d68:	andeq	r0, r0, r4, lsl #5
   25d6c:	andeq	r0, r0, r4, lsl #5
   25d70:	andeq	r0, r0, r4, lsl #5
   25d74:	andeq	r0, r0, r4, lsl #5
   25d78:	andeq	r0, r0, r4, lsl #5
   25d7c:	andeq	r0, r0, r4, lsl #5
   25d80:	andeq	r0, r0, r4, lsl #5
   25d84:	andeq	r0, r0, r4, lsl #5
   25d88:	andeq	r0, r0, r4, lsl #5
   25d8c:	andeq	r0, r0, r4, lsl #5
   25d90:	andeq	r0, r0, r4, lsl #5
   25d94:	andeq	r0, r0, r4, lsl #5
   25d98:	andeq	r0, r0, r4, lsl #5
   25d9c:	andeq	r0, r0, r4, lsl #5
   25da0:	andeq	r0, r0, r4, lsl #5
   25da4:	andeq	r0, r0, r4, lsl #5
   25da8:	andeq	r0, r0, r4, lsl #5
   25dac:	andeq	r0, r0, r4, lsl #5
   25db0:	andeq	r0, r0, r4, lsl #5
   25db4:	andeq	r0, r0, ip, ror r2
   25db8:	andeq	r0, r0, r4, lsl #5
   25dbc:	andeq	r0, r0, r4, lsl #5
   25dc0:	andeq	r0, r0, r4, lsl #5
   25dc4:	andeq	r0, r0, r4, lsl #5
   25dc8:	andeq	r0, r0, r4, lsl #5
   25dcc:	andeq	r0, r0, r4, lsl #5
   25dd0:	andeq	r0, r0, r4, lsl #5
   25dd4:	andeq	r0, r0, r4, lsl #5
   25dd8:	andeq	r0, r0, r4, lsl #5
   25ddc:	andeq	r0, r0, r4, lsl #5
   25de0:	andeq	r0, r0, r4, lsl #5
   25de4:	andeq	r0, r0, r4, lsl #5
   25de8:	andeq	r0, r0, r4, lsl #5
   25dec:	andeq	r0, r0, r4, lsl #5
   25df0:	andeq	r0, r0, r4, lsl #5
   25df4:	andeq	r0, r0, r4, lsl #5
   25df8:	andeq	r0, r0, r4, lsl #5
   25dfc:	andeq	r0, r0, r4, lsl #5
   25e00:	andeq	r0, r0, r4, lsl #5
   25e04:	andeq	r0, r0, r4, lsl #5
   25e08:	andeq	r0, r0, r4, lsl #5
   25e0c:	andeq	r0, r0, r4, lsl #5
   25e10:	andeq	r0, r0, r4, lsl #5
   25e14:	andeq	r0, r0, r4, lsl #5
   25e18:	andeq	r0, r0, r4, lsl #5
   25e1c:	andeq	r0, r0, r4, lsl #5
   25e20:	andeq	r0, r0, r4, lsl #5
   25e24:	andeq	r0, r0, r4, lsl #5
   25e28:	andeq	r0, r0, r4, lsl #5
   25e2c:	andeq	r0, r0, r4, lsl #5
   25e30:	andeq	r0, r0, r4, lsl #5
   25e34:	andeq	r0, r0, r4, lsl #5
   25e38:	andeq	r0, r0, r4, lsl #5
   25e3c:	andeq	r0, r0, r4, lsl #5
   25e40:	andeq	r0, r0, r4, lsl #5
   25e44:	andeq	r0, r0, r4, lsl #5
   25e48:	andeq	r0, r0, r4, lsl #5
   25e4c:	andeq	r0, r0, r4, lsl #5
   25e50:	andeq	r0, r0, r4, lsl #5
   25e54:	andeq	r0, r0, r4, lsl #5
   25e58:	andeq	r0, r0, r4, lsl #5
   25e5c:	andeq	r0, r0, r4, lsl #5
   25e60:	andeq	r0, r0, r4, lsl #5
   25e64:	andeq	r0, r0, r4, lsl #5
   25e68:	andeq	r0, r0, r4, lsl #5
   25e6c:	andeq	r0, r0, r4, lsl #5
   25e70:	andeq	r0, r0, r4, lsl #5
   25e74:	andeq	r0, r0, r4, lsl #5
   25e78:	andeq	r0, r0, r4, lsl #5
   25e7c:	andeq	r0, r0, r4, lsl #5
   25e80:	andeq	r0, r0, r4, lsl #5
   25e84:	andeq	r0, r0, r4, lsl #5
   25e88:	andeq	r0, r0, r4, lsl #5
   25e8c:	andeq	r0, r0, r4, lsl #5
   25e90:	andeq	r0, r0, r4, lsl #5
   25e94:	andeq	r0, r0, r4, lsl #5
   25e98:	andeq	r0, r0, r4, lsl #5
   25e9c:	andeq	r0, r0, r4, lsl #5
   25ea0:	andeq	r0, r0, r4, lsl #5
   25ea4:	ldrdeq	r0, [r0], -ip
   25ea8:	andeq	r0, r0, r4, asr #3
   25eac:	andeq	r0, r0, ip, ror r2
   25eb0:	andeq	r0, r0, r4, lsl #5
   25eb4:	andeq	r0, r0, r4, lsl #5
   25eb8:	andeq	r0, r0, r4, asr #3
   25ebc:	andeq	r0, r0, ip, ror r2
   25ec0:	andeq	r0, r0, r4, asr #3
   25ec4:	andeq	r0, r0, r4, lsl #5
   25ec8:	andeq	r0, r0, r4, lsl #5
   25ecc:	muleq	r0, r4, r2
   25ed0:	mov	r0, r4
   25ed4:	mov	r2, #1
   25ed8:	mov	r3, #64	; 0x40
   25edc:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25ee0:	cmp	r0, #0
   25ee4:	beq	25f88 <myhtml_insertion_mode_in_row@@Base+0x310>
   25ee8:	mov	r0, r4
   25eec:	mov	r1, #135	; 0x87
   25ef0:	mov	r2, #1
   25ef4:	mov	r3, #64	; 0x40
   25ef8:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25efc:	cmp	r0, #0
   25f00:	beq	25f88 <myhtml_insertion_mode_in_row@@Base+0x310>
   25f04:	mov	r0, r4
   25f08:	bl	11384 <myhtml_tree_clear_stack_back_table_row_context@plt>
   25f0c:	mov	r0, r4
   25f10:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   25f14:	mov	r0, #12
   25f18:	mov	r5, #1
   25f1c:	str	r0, [r4, #168]	; 0xa8
   25f20:	mov	r0, r5
   25f24:	pop	{r4, r5, r6, sl, fp, pc}
   25f28:	sub	r0, r1, #27
   25f2c:	cmp	r0, #5
   25f30:	bhi	25f90 <myhtml_insertion_mode_in_row@@Base+0x318>
   25f34:	mov	r1, #1
   25f38:	mov	r2, #49	; 0x31
   25f3c:	tst	r2, r1, lsl r0
   25f40:	beq	25f90 <myhtml_insertion_mode_in_row@@Base+0x318>
   25f44:	mov	r0, r4
   25f48:	mov	r1, #135	; 0x87
   25f4c:	mov	r2, #1
   25f50:	mov	r3, #64	; 0x40
   25f54:	mov	r5, #1
   25f58:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25f5c:	cmp	r0, #0
   25f60:	beq	25f84 <myhtml_insertion_mode_in_row@@Base+0x30c>
   25f64:	mov	r0, r4
   25f68:	bl	11384 <myhtml_tree_clear_stack_back_table_row_context@plt>
   25f6c:	mov	r0, r4
   25f70:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   25f74:	mov	r0, #12
   25f78:	str	r0, [r4, #168]	; 0xa8
   25f7c:	mov	r0, r5
   25f80:	pop	{r4, r5, r6, sl, fp, pc}
   25f84:	mov	r5, #0
   25f88:	mov	r0, r5
   25f8c:	pop	{r4, r5, r6, sl, fp, pc}
   25f90:	mov	r0, r4
   25f94:	mov	r1, r6
   25f98:	pop	{r4, r5, r6, sl, fp, lr}
   25f9c:	b	24a6c <myhtml_insertion_mode_in_table@@Base>
   25fa0:	mov	r0, r4
   25fa4:	mov	r1, #135	; 0x87
   25fa8:	mov	r2, #1
   25fac:	mov	r3, #64	; 0x40
   25fb0:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   25fb4:	cmp	r0, #0
   25fb8:	bne	25f64 <myhtml_insertion_mode_in_row@@Base+0x2ec>
   25fbc:	b	25f88 <myhtml_insertion_mode_in_row@@Base+0x310>

00025fc0 <myhtml_insertion_mode_in_cell@@Base>:
   25fc0:	push	{r4, r5, r6, r7, fp, lr}
   25fc4:	add	fp, sp, #16
   25fc8:	mov	r5, r1
   25fcc:	mov	r4, r0
   25fd0:	ldr	r1, [r1]
   25fd4:	ldr	r0, [r5, #48]	; 0x30
   25fd8:	tst	r0, #1
   25fdc:	bne	26074 <myhtml_insertion_mode_in_cell@@Base+0xb4>
   25fe0:	sub	r0, r1, #126	; 0x7e
   25fe4:	cmp	r0, #9
   25fe8:	bhi	25ffc <myhtml_insertion_mode_in_cell@@Base+0x3c>
   25fec:	mov	r2, #1
   25ff0:	movw	r3, #627	; 0x273
   25ff4:	tst	r3, r2, lsl r0
   25ff8:	bne	26018 <myhtml_insertion_mode_in_cell@@Base+0x58>
   25ffc:	sub	r0, r1, #27
   26000:	cmp	r0, #5
   26004:	bhi	2632c <myhtml_insertion_mode_in_cell@@Base+0x36c>
   26008:	mov	r1, #1
   2600c:	mov	r2, #49	; 0x31
   26010:	tst	r2, r1, lsl r0
   26014:	beq	2632c <myhtml_insertion_mode_in_cell@@Base+0x36c>
   26018:	mov	r0, r4
   2601c:	mov	r1, #127	; 0x7f
   26020:	mov	r2, #1
   26024:	mov	r3, #64	; 0x40
   26028:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   2602c:	mov	r7, r0
   26030:	mov	r0, r4
   26034:	mov	r1, #131	; 0x83
   26038:	mov	r2, #1
   2603c:	mov	r3, #64	; 0x40
   26040:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   26044:	mov	r1, r0
   26048:	orrs	r0, r7, r0
   2604c:	mov	r6, #0
   26050:	beq	26324 <myhtml_insertion_mode_in_cell@@Base+0x364>
   26054:	cmp	r7, #0
   26058:	mov	r0, r4
   2605c:	mov	r2, r5
   26060:	movne	r1, r7
   26064:	bl	11a20 <myhtml_tree_close_cell@plt>
   26068:	mov	r6, #1
   2606c:	mov	r0, r6
   26070:	pop	{r4, r5, r6, r7, fp, pc}
   26074:	sub	r0, r1, #23
   26078:	cmp	r0, #112	; 0x70
   2607c:	bhi	2633c <myhtml_insertion_mode_in_cell@@Base+0x37c>
   26080:	add	r2, pc, #8
   26084:	mov	r6, #0
   26088:	ldr	r0, [r2, r0, lsl #2]
   2608c:	add	pc, r2, r0
   26090:	muleq	r0, r4, r2
   26094:	andeq	r0, r0, ip, lsr #5
   26098:	andeq	r0, r0, ip, lsr #5
   2609c:	andeq	r0, r0, ip, lsr #5
   260a0:	muleq	r0, r4, r2
   260a4:	andeq	r0, r0, ip, lsr #5
   260a8:	andeq	r0, r0, ip, lsr #5
   260ac:	andeq	r0, r0, ip, lsr #5
   260b0:	muleq	r0, r4, r2
   260b4:	muleq	r0, r4, r2
   260b8:	andeq	r0, r0, ip, lsr #5
   260bc:	andeq	r0, r0, ip, lsr #5
   260c0:	andeq	r0, r0, ip, lsr #5
   260c4:	andeq	r0, r0, ip, lsr #5
   260c8:	andeq	r0, r0, ip, lsr #5
   260cc:	andeq	r0, r0, ip, lsr #5
   260d0:	andeq	r0, r0, ip, lsr #5
   260d4:	andeq	r0, r0, ip, lsr #5
   260d8:	andeq	r0, r0, ip, lsr #5
   260dc:	andeq	r0, r0, ip, lsr #5
   260e0:	andeq	r0, r0, ip, lsr #5
   260e4:	andeq	r0, r0, ip, lsr #5
   260e8:	andeq	r0, r0, ip, lsr #5
   260ec:	andeq	r0, r0, ip, lsr #5
   260f0:	andeq	r0, r0, ip, lsr #5
   260f4:	andeq	r0, r0, ip, lsr #5
   260f8:	andeq	r0, r0, ip, lsr #5
   260fc:	andeq	r0, r0, ip, lsr #5
   26100:	andeq	r0, r0, ip, lsr #5
   26104:	andeq	r0, r0, ip, lsr #5
   26108:	andeq	r0, r0, ip, lsr #5
   2610c:	andeq	r0, r0, ip, lsr #5
   26110:	andeq	r0, r0, ip, lsr #5
   26114:	andeq	r0, r0, ip, lsr #5
   26118:	andeq	r0, r0, ip, lsr #5
   2611c:	andeq	r0, r0, ip, lsr #5
   26120:	andeq	r0, r0, ip, lsr #5
   26124:	andeq	r0, r0, ip, lsr #5
   26128:	andeq	r0, r0, ip, lsr #5
   2612c:	andeq	r0, r0, ip, lsr #5
   26130:	andeq	r0, r0, ip, lsr #5
   26134:	andeq	r0, r0, ip, lsr #5
   26138:	muleq	r0, r4, r2
   2613c:	andeq	r0, r0, ip, lsr #5
   26140:	andeq	r0, r0, ip, lsr #5
   26144:	andeq	r0, r0, ip, lsr #5
   26148:	andeq	r0, r0, ip, lsr #5
   2614c:	andeq	r0, r0, ip, lsr #5
   26150:	andeq	r0, r0, ip, lsr #5
   26154:	andeq	r0, r0, ip, lsr #5
   26158:	andeq	r0, r0, ip, lsr #5
   2615c:	andeq	r0, r0, ip, lsr #5
   26160:	andeq	r0, r0, ip, lsr #5
   26164:	andeq	r0, r0, ip, lsr #5
   26168:	andeq	r0, r0, ip, lsr #5
   2616c:	andeq	r0, r0, ip, lsr #5
   26170:	andeq	r0, r0, ip, lsr #5
   26174:	andeq	r0, r0, ip, lsr #5
   26178:	andeq	r0, r0, ip, lsr #5
   2617c:	andeq	r0, r0, ip, lsr #5
   26180:	andeq	r0, r0, ip, lsr #5
   26184:	andeq	r0, r0, ip, lsr #5
   26188:	andeq	r0, r0, ip, lsr #5
   2618c:	andeq	r0, r0, ip, lsr #5
   26190:	andeq	r0, r0, ip, lsr #5
   26194:	andeq	r0, r0, ip, lsr #5
   26198:	andeq	r0, r0, ip, lsr #5
   2619c:	andeq	r0, r0, ip, lsr #5
   261a0:	andeq	r0, r0, ip, lsr #5
   261a4:	andeq	r0, r0, ip, lsr #5
   261a8:	andeq	r0, r0, ip, lsr #5
   261ac:	andeq	r0, r0, ip, lsr #5
   261b0:	andeq	r0, r0, ip, lsr #5
   261b4:	andeq	r0, r0, ip, lsr #5
   261b8:	andeq	r0, r0, ip, lsr #5
   261bc:	andeq	r0, r0, ip, lsr #5
   261c0:	andeq	r0, r0, ip, lsr #5
   261c4:	andeq	r0, r0, ip, lsr #5
   261c8:	andeq	r0, r0, ip, lsr #5
   261cc:	andeq	r0, r0, ip, lsr #5
   261d0:	andeq	r0, r0, ip, lsr #5
   261d4:	andeq	r0, r0, ip, lsr #5
   261d8:	andeq	r0, r0, ip, lsr #5
   261dc:	andeq	r0, r0, ip, lsr #5
   261e0:	andeq	r0, r0, ip, lsr #5
   261e4:	andeq	r0, r0, ip, lsr #5
   261e8:	andeq	r0, r0, ip, lsr #5
   261ec:	andeq	r0, r0, ip, lsr #5
   261f0:	andeq	r0, r0, ip, lsr #5
   261f4:	andeq	r0, r0, ip, lsr #5
   261f8:	andeq	r0, r0, ip, lsr #5
   261fc:	andeq	r0, r0, ip, lsr #5
   26200:	andeq	r0, r0, ip, lsr #5
   26204:	andeq	r0, r0, ip, lsr #5
   26208:	andeq	r0, r0, ip, lsr #5
   2620c:	andeq	r0, r0, ip, lsr #5
   26210:	andeq	r0, r0, ip, lsr #5
   26214:	andeq	r0, r0, ip, lsr #5
   26218:	andeq	r0, r0, ip, lsr #5
   2621c:	andeq	r0, r0, ip, lsr #5
   26220:	andeq	r0, r0, ip, lsr #5
   26224:	andeq	r0, r0, ip, lsr #5
   26228:	andeq	r0, r0, r4, asr #3
   2622c:	andeq	r0, r0, r4, asr #3
   26230:	andeq	r0, r0, r4, lsr r2
   26234:	andeq	r0, r0, ip, lsr #5
   26238:	andeq	r0, r0, ip, lsr #5
   2623c:	andeq	r0, r0, r4, asr #3
   26240:	andeq	r0, r0, r4, lsr r2
   26244:	andeq	r0, r0, r4, asr #3
   26248:	andeq	r0, r0, ip, lsr #5
   2624c:	andeq	r0, r0, ip, lsr #5
   26250:	andeq	r0, r0, r4, asr #3
   26254:	mov	r0, r4
   26258:	mov	r2, #1
   2625c:	mov	r3, #64	; 0x40
   26260:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   26264:	cmp	r0, #0
   26268:	beq	26324 <myhtml_insertion_mode_in_cell@@Base+0x364>
   2626c:	mov	r0, r4
   26270:	mov	r1, #127	; 0x7f
   26274:	mov	r2, #1
   26278:	mov	r3, #64	; 0x40
   2627c:	mov	r6, #1
   26280:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   26284:	cmp	r0, #0
   26288:	bne	262ac <myhtml_insertion_mode_in_cell@@Base+0x2ec>
   2628c:	mov	r0, r4
   26290:	mov	r1, #131	; 0x83
   26294:	mov	r2, #1
   26298:	mov	r3, #64	; 0x40
   2629c:	mov	r6, #1
   262a0:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   262a4:	cmp	r0, #0
   262a8:	beq	26324 <myhtml_insertion_mode_in_cell@@Base+0x364>
   262ac:	mov	r1, r0
   262b0:	mov	r0, r4
   262b4:	mov	r2, r5
   262b8:	bl	11a20 <myhtml_tree_close_cell@plt>
   262bc:	mov	r0, r6
   262c0:	pop	{r4, r5, r6, r7, fp, pc}
   262c4:	mov	r0, r4
   262c8:	mov	r2, #1
   262cc:	mov	r3, #64	; 0x40
   262d0:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   262d4:	cmp	r0, #0
   262d8:	beq	26324 <myhtml_insertion_mode_in_cell@@Base+0x364>
   262dc:	mov	r0, r4
   262e0:	mov	r1, #0
   262e4:	mov	r2, #0
   262e8:	mov	r6, #0
   262ec:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   262f0:	mov	r0, r4
   262f4:	bl	11504 <myhtml_tree_current_node@plt>
   262f8:	ldr	r1, [r5]
   262fc:	bl	11864 <myhtml_is_html_node@plt>
   26300:	ldr	r1, [r5]
   26304:	mov	r0, r4
   26308:	mov	r2, #1
   2630c:	mov	r3, #0
   26310:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   26314:	mov	r0, r4
   26318:	bl	11af8 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2631c:	mov	r0, #13
   26320:	str	r0, [r4, #168]	; 0xa8
   26324:	mov	r0, r6
   26328:	pop	{r4, r5, r6, r7, fp, pc}
   2632c:	mov	r0, r4
   26330:	mov	r1, r5
   26334:	pop	{r4, r5, r6, r7, fp, lr}
   26338:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   2633c:	mov	r0, r4
   26340:	mov	r1, r5
   26344:	pop	{r4, r5, r6, r7, fp, lr}
   26348:	b	24a6c <myhtml_insertion_mode_in_table@@Base>

0002634c <myhtml_insertion_mode_in_select@@Base>:
   2634c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26350:	add	fp, sp, #24
   26354:	mov	r4, r0
   26358:	mov	r6, r1
   2635c:	ldr	r0, [r1]
   26360:	ldr	r1, [r1, #48]	; 0x30
   26364:	tst	r1, #1
   26368:	bne	264d4 <myhtml_insertion_mode_in_select@@Base+0x188>
   2636c:	mov	r7, #0
   26370:	cmp	r0, #64	; 0x40
   26374:	ble	26658 <myhtml_insertion_mode_in_select@@Base+0x30c>
   26378:	sub	r1, r0, #65	; 0x41
   2637c:	cmp	r1, #64	; 0x40
   26380:	bhi	26684 <myhtml_insertion_mode_in_select@@Base+0x338>
   26384:	add	r0, pc, #4
   26388:	ldr	r1, [r0, r1, lsl #2]
   2638c:	add	pc, r0, r1
   26390:	strdeq	r0, [r0], -ip
   26394:	andeq	r0, r0, r0, lsr #9
   26398:	andeq	r0, r0, r0, lsr #9
   2639c:	andeq	r0, r0, r0, lsr #9
   263a0:	andeq	r0, r0, r0, lsr #9
   263a4:	andeq	r0, r0, r4, lsl #2
   263a8:	andeq	r0, r0, r0, lsr #9
   263ac:	andeq	r0, r0, r0, lsr #9
   263b0:	andeq	r0, r0, r0, lsr #9
   263b4:	andeq	r0, r0, r4, lsl #2
   263b8:	andeq	r0, r0, r0, lsr #9
   263bc:	andeq	r0, r0, r0, lsr #9
   263c0:	andeq	r0, r0, r0, lsr #9
   263c4:	andeq	r0, r0, r0, lsr #9
   263c8:	andeq	r0, r0, r0, lsr #9
   263cc:	andeq	r0, r0, r0, lsr #9
   263d0:	andeq	r0, r0, r0, lsr #9
   263d4:	andeq	r0, r0, r0, lsr #9
   263d8:	andeq	r0, r0, r0, lsr #9
   263dc:	andeq	r0, r0, r0, lsr #9
   263e0:	andeq	r0, r0, r0, lsr #9
   263e4:	andeq	r0, r0, r0, lsr #9
   263e8:	andeq	r0, r0, r0, lsr #9
   263ec:	andeq	r0, r0, r0, lsr #9
   263f0:	andeq	r0, r0, r0, lsr #9
   263f4:	andeq	r0, r0, r0, lsr #9
   263f8:	andeq	r0, r0, r0, lsr #9
   263fc:	andeq	r0, r0, r0, lsr #9
   26400:	andeq	r0, r0, r0, lsr #9
   26404:	andeq	r0, r0, r0, lsr #9
   26408:	andeq	r0, r0, r0, lsr #9
   2640c:	andeq	r0, r0, ip, lsl #6
   26410:	andeq	r0, r0, ip, asr r3
   26414:	andeq	r0, r0, r0, lsr #9
   26418:	andeq	r0, r0, r0, lsr #9
   2641c:	andeq	r0, r0, r0, lsr #9
   26420:	andeq	r0, r0, r0, lsr #9
   26424:	andeq	r0, r0, r0, lsr #9
   26428:	andeq	r0, r0, r0, lsr #9
   2642c:	andeq	r0, r0, r0, lsr #9
   26430:	andeq	r0, r0, r0, lsr #9
   26434:	andeq	r0, r0, r0, lsr #9
   26438:	andeq	r0, r0, r0, lsr #9
   2643c:	andeq	r0, r0, r0, lsr #9
   26440:	andeq	r0, r0, r0, lsr #9
   26444:	andeq	r0, r0, r0, lsr #9
   26448:	andeq	r0, r0, r0, lsr #9
   2644c:	andeq	r0, r0, ip, asr r2
   26450:	andeq	r0, r0, r0, lsr #9
   26454:	andeq	r0, r0, ip, ror #4
   26458:	andeq	r0, r0, r0, lsr #9
   2645c:	andeq	r0, r0, r0, lsr #9
   26460:	andeq	r0, r0, r0, lsr #9
   26464:	andeq	r0, r0, r0, lsr #9
   26468:	andeq	r0, r0, r0, lsr #9
   2646c:	andeq	r0, r0, r0, lsr #9
   26470:	andeq	r0, r0, r0, lsr #9
   26474:	andeq	r0, r0, r0, lsr #9
   26478:	andeq	r0, r0, r0, lsr #9
   2647c:	andeq	r0, r0, r0, lsr #9
   26480:	andeq	r0, r0, r0, lsr #9
   26484:	andeq	r0, r0, r0, lsr #9
   26488:	andeq	r0, r0, r0, lsr #9
   2648c:	andeq	r0, r0, ip, asr r2
   26490:	andeq	r0, r0, r4, lsl #2
   26494:	mov	r0, r4
   26498:	mov	r1, #114	; 0x72
   2649c:	mov	r2, #1
   264a0:	mov	r3, #128	; 0x80
   264a4:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   264a8:	cmp	r0, #0
   264ac:	beq	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   264b0:	mov	r1, r0
   264b4:	mov	r0, r4
   264b8:	mov	r2, #0
   264bc:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   264c0:	mov	r0, r4
   264c4:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   264c8:	mov	r7, #1
   264cc:	mov	r0, r7
   264d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   264d4:	sub	r0, r0, #96	; 0x60
   264d8:	mov	r7, #0
   264dc:	cmp	r0, #32
   264e0:	bhi	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   264e4:	add	r1, pc, #4
   264e8:	ldr	r0, [r1, r0, lsl #2]
   264ec:	add	pc, r1, r0
   264f0:	andeq	r0, r0, r4, lsl #1
   264f4:	andeq	r0, r0, ip, asr #2
   264f8:	andeq	r0, r0, r0, asr #6
   264fc:	andeq	r0, r0, r0, asr #6
   26500:	andeq	r0, r0, r0, asr #6
   26504:	andeq	r0, r0, r0, asr #6
   26508:	andeq	r0, r0, r0, asr #6
   2650c:	andeq	r0, r0, r0, asr #6
   26510:	andeq	r0, r0, r0, asr #6
   26514:	andeq	r0, r0, r0, asr #6
   26518:	andeq	r0, r0, r0, asr #6
   2651c:	andeq	r0, r0, r0, asr #6
   26520:	andeq	r0, r0, r0, asr #6
   26524:	andeq	r0, r0, r0, asr #6
   26528:	andeq	r0, r0, r0, asr #6
   2652c:	andeq	r0, r0, r0, asr #6
   26530:	andeq	r0, r0, r0, asr #6
   26534:	andeq	r0, r0, r0, asr #6
   26538:	andeq	r0, r0, ip, lsl #2
   2653c:	andeq	r0, r0, r0, asr #6
   26540:	andeq	r0, r0, r0, asr #6
   26544:	andeq	r0, r0, r0, asr #6
   26548:	andeq	r0, r0, r0, asr #6
   2654c:	andeq	r0, r0, r0, asr #6
   26550:	andeq	r0, r0, r0, asr #6
   26554:	andeq	r0, r0, r0, asr #6
   26558:	andeq	r0, r0, r0, asr #6
   2655c:	andeq	r0, r0, r0, asr #6
   26560:	andeq	r0, r0, r0, asr #6
   26564:	andeq	r0, r0, r0, asr #6
   26568:	andeq	r0, r0, r0, asr #6
   2656c:	andeq	r0, r0, r0, asr #6
   26570:	strdeq	r0, [r0], -ip
   26574:	mov	r0, r4
   26578:	bl	11504 <myhtml_tree_current_node@plt>
   2657c:	mov	r1, #97	; 0x61
   26580:	bl	11864 <myhtml_is_html_node@plt>
   26584:	cmp	r0, #0
   26588:	beq	265c4 <myhtml_insertion_mode_in_select@@Base+0x278>
   2658c:	ldr	r0, [r4, #128]	; 0x80
   26590:	ldr	r1, [r0, #4]
   26594:	cmp	r1, #2
   26598:	bcc	265c4 <myhtml_insertion_mode_in_select@@Base+0x278>
   2659c:	ldr	r1, [r0]
   265a0:	ldr	r0, [r0, #4]
   265a4:	add	r0, r1, r0, lsl #2
   265a8:	mov	r1, #96	; 0x60
   265ac:	ldr	r0, [r0, #-8]
   265b0:	bl	11864 <myhtml_is_html_node@plt>
   265b4:	cmp	r0, #0
   265b8:	beq	265c4 <myhtml_insertion_mode_in_select@@Base+0x278>
   265bc:	mov	r0, r4
   265c0:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   265c4:	mov	r0, r4
   265c8:	bl	11504 <myhtml_tree_current_node@plt>
   265cc:	mov	r1, #96	; 0x60
   265d0:	bl	11864 <myhtml_is_html_node@plt>
   265d4:	cmp	r0, #0
   265d8:	beq	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   265dc:	mov	r0, r4
   265e0:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   265e4:	mov	r0, r7
   265e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   265ec:	mov	r0, r4
   265f0:	mov	r1, r6
   265f4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   265f8:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   265fc:	mov	r0, r4
   26600:	mov	r1, #114	; 0x72
   26604:	mov	r2, #1
   26608:	mov	r3, #128	; 0x80
   2660c:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   26610:	cmp	r0, #0
   26614:	beq	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   26618:	mov	r1, r0
   2661c:	mov	r0, r4
   26620:	mov	r2, #0
   26624:	mov	r7, #0
   26628:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   2662c:	mov	r0, r4
   26630:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   26634:	mov	r0, r7
   26638:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2663c:	mov	r0, r4
   26640:	bl	11504 <myhtml_tree_current_node@plt>
   26644:	mov	r1, #97	; 0x61
   26648:	bl	11864 <myhtml_is_html_node@plt>
   2664c:	cmp	r0, #0
   26650:	bne	265dc <myhtml_insertion_mode_in_select@@Base+0x290>
   26654:	b	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   26658:	cmp	r0, #1
   2665c:	beq	26720 <myhtml_insertion_mode_in_select@@Base+0x3d4>
   26660:	cmp	r0, #2
   26664:	bne	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   26668:	mov	r0, r4
   2666c:	mov	r1, r6
   26670:	mov	r2, #0
   26674:	mov	r7, #0
   26678:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   2667c:	mov	r0, r7
   26680:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26684:	cmp	r0, #251	; 0xfb
   26688:	bne	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   2668c:	mov	r0, r4
   26690:	mov	r1, r6
   26694:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   26698:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   2669c:	mov	r0, r4
   266a0:	bl	11504 <myhtml_tree_current_node@plt>
   266a4:	ldr	r1, [r0, #4]
   266a8:	cmp	r1, #97	; 0x61
   266ac:	bne	266c4 <myhtml_insertion_mode_in_select@@Base+0x378>
   266b0:	ldr	r0, [r0, #8]
   266b4:	cmp	r0, #1
   266b8:	bne	266c4 <myhtml_insertion_mode_in_select@@Base+0x378>
   266bc:	mov	r0, r4
   266c0:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   266c4:	mov	r0, r4
   266c8:	bl	11504 <myhtml_tree_current_node@plt>
   266cc:	ldr	r1, [r6]
   266d0:	ldr	r2, [r0, #4]
   266d4:	cmp	r2, r1
   266d8:	bne	2670c <myhtml_insertion_mode_in_select@@Base+0x3c0>
   266dc:	ldr	r0, [r0, #8]
   266e0:	cmp	r0, #1
   266e4:	beq	26704 <myhtml_insertion_mode_in_select@@Base+0x3b8>
   266e8:	b	2670c <myhtml_insertion_mode_in_select@@Base+0x3c0>
   266ec:	mov	r0, r4
   266f0:	bl	11504 <myhtml_tree_current_node@plt>
   266f4:	ldr	r1, [r6]
   266f8:	bl	11864 <myhtml_is_html_node@plt>
   266fc:	cmp	r0, #0
   26700:	beq	2670c <myhtml_insertion_mode_in_select@@Base+0x3c0>
   26704:	mov	r0, r4
   26708:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   2670c:	mov	r0, r4
   26710:	mov	r1, r6
   26714:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   26718:	mov	r0, r7
   2671c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26720:	ldr	r0, [r6, #48]	; 0x30
   26724:	tst	r0, #2048	; 0x800
   26728:	beq	26824 <myhtml_insertion_mode_in_select@@Base+0x4d8>
   2672c:	ldr	r0, [r4, #8]
   26730:	mov	r1, r6
   26734:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   26738:	ldr	r5, [r6, #12]
   2673c:	cmp	r5, #0
   26740:	beq	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   26744:	mov	r0, #0
   26748:	mov	r8, #0
   2674c:	ldr	r3, [r6, #4]
   26750:	ldrb	r1, [r3, r0]
   26754:	cmp	r1, #0
   26758:	bne	26794 <myhtml_insertion_mode_in_select@@Base+0x448>
   2675c:	b	267b0 <myhtml_insertion_mode_in_select@@Base+0x464>
   26760:	ldr	r2, [r6, #12]
   26764:	sub	r1, r0, r5
   26768:	add	r1, r1, r2
   2676c:	mov	r2, r5
   26770:	str	r1, [r6, #12]
   26774:	mov	r7, r5
   26778:	sub	r0, r0, r8
   2677c:	add	r1, r3, r2
   26780:	sub	r2, r7, r2
   26784:	add	r0, r3, r0
   26788:	bl	10f94 <memmove@plt>
   2678c:	add	r8, r8, #1
   26790:	sub	r0, r7, #1
   26794:	add	r0, r0, #1
   26798:	cmp	r0, r5
   2679c:	bcs	26814 <myhtml_insertion_mode_in_select@@Base+0x4c8>
   267a0:	ldr	r3, [r6, #4]
   267a4:	ldrb	r1, [r3, r0]
   267a8:	cmp	r1, #0
   267ac:	bne	26794 <myhtml_insertion_mode_in_select@@Base+0x448>
   267b0:	cmp	r0, r5
   267b4:	mov	r2, r0
   267b8:	bcs	267dc <myhtml_insertion_mode_in_select@@Base+0x490>
   267bc:	add	r1, r0, #1
   267c0:	cmp	r5, r1
   267c4:	beq	26760 <myhtml_insertion_mode_in_select@@Base+0x414>
   267c8:	ldrb	r2, [r3, r1]
   267cc:	add	r1, r1, #1
   267d0:	cmp	r2, #0
   267d4:	beq	267c0 <myhtml_insertion_mode_in_select@@Base+0x474>
   267d8:	sub	r2, r1, #1
   267dc:	ldr	r7, [r6, #12]
   267e0:	sub	r1, r0, r2
   267e4:	cmp	r2, r5
   267e8:	add	r1, r1, r7
   267ec:	mov	r7, r2
   267f0:	str	r1, [r6, #12]
   267f4:	bcs	26778 <myhtml_insertion_mode_in_select@@Base+0x42c>
   267f8:	ldrb	r1, [r3, r7]
   267fc:	cmp	r1, #0
   26800:	beq	26778 <myhtml_insertion_mode_in_select@@Base+0x42c>
   26804:	add	r7, r7, #1
   26808:	cmp	r5, r7
   2680c:	bne	267f8 <myhtml_insertion_mode_in_select@@Base+0x4ac>
   26810:	b	26774 <myhtml_insertion_mode_in_select@@Base+0x428>
   26814:	ldr	r0, [r6, #12]
   26818:	mov	r7, #0
   2681c:	cmp	r0, #0
   26820:	beq	26830 <myhtml_insertion_mode_in_select@@Base+0x4e4>
   26824:	mov	r0, r4
   26828:	mov	r1, r6
   2682c:	bl	11054 <myhtml_tree_node_insert_text@plt>
   26830:	mov	r0, r7
   26834:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026838 <myhtml_insertion_mode_in_select_in_table@@Base>:
   26838:	push	{r4, r5, fp, lr}
   2683c:	add	fp, sp, #8
   26840:	mov	r4, r0
   26844:	ldr	r2, [r1]
   26848:	ldr	r0, [r1, #48]	; 0x30
   2684c:	tst	r0, #1
   26850:	bne	26878 <myhtml_insertion_mode_in_select_in_table@@Base+0x40>
   26854:	sub	r0, r2, #125	; 0x7d
   26858:	cmp	r0, #10
   2685c:	bhi	268e4 <myhtml_insertion_mode_in_select_in_table@@Base+0xac>
   26860:	mov	r3, #1
   26864:	movw	r5, #1255	; 0x4e7
   26868:	tst	r5, r3, lsl r0
   2686c:	beq	268e4 <myhtml_insertion_mode_in_select_in_table@@Base+0xac>
   26870:	mov	r5, #1
   26874:	b	268b4 <myhtml_insertion_mode_in_select_in_table@@Base+0x7c>
   26878:	sub	r0, r2, #125	; 0x7d
   2687c:	cmp	r0, #10
   26880:	bhi	268f0 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   26884:	mov	r3, #1
   26888:	movw	r5, #1255	; 0x4e7
   2688c:	tst	r5, r3, lsl r0
   26890:	beq	268f0 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   26894:	mov	r1, r2
   26898:	mov	r0, r4
   2689c:	mov	r2, #1
   268a0:	mov	r3, #64	; 0x40
   268a4:	mov	r5, #1
   268a8:	bl	11b70 <myhtml_tree_element_in_scope@plt>
   268ac:	cmp	r0, #0
   268b0:	beq	268d8 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   268b4:	mov	r0, r4
   268b8:	mov	r1, #114	; 0x72
   268bc:	mov	r2, #1
   268c0:	mov	r3, #0
   268c4:	bl	1175c <myhtml_tree_open_elements_pop_until@plt>
   268c8:	mov	r0, r4
   268cc:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   268d0:	mov	r0, r5
   268d4:	pop	{r4, r5, fp, pc}
   268d8:	mov	r5, #0
   268dc:	mov	r0, r5
   268e0:	pop	{r4, r5, fp, pc}
   268e4:	cmp	r2, #27
   268e8:	beq	26870 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   268ec:	b	268f8 <myhtml_insertion_mode_in_select_in_table@@Base+0xc0>
   268f0:	cmp	r2, #27
   268f4:	beq	26894 <myhtml_insertion_mode_in_select_in_table@@Base+0x5c>
   268f8:	mov	r0, r4
   268fc:	pop	{r4, r5, fp, lr}
   26900:	b	2634c <myhtml_insertion_mode_in_select@@Base>

00026904 <myhtml_insertion_mode_after_body@@Base>:
   26904:	push	{r4, r5, r6, sl, fp, lr}
   26908:	add	fp, sp, #16
   2690c:	mov	r5, r1
   26910:	ldr	r1, [r1]
   26914:	ldr	r2, [r5, #48]	; 0x30
   26918:	tst	r2, #1
   2691c:	bne	26948 <myhtml_insertion_mode_after_body@@Base+0x44>
   26920:	mov	r4, #0
   26924:	cmp	r1, #2
   26928:	ble	26970 <myhtml_insertion_mode_after_body@@Base+0x6c>
   2692c:	cmp	r1, #3
   26930:	beq	269dc <myhtml_insertion_mode_after_body@@Base+0xd8>
   26934:	cmp	r1, #65	; 0x41
   26938:	beq	269e4 <myhtml_insertion_mode_after_body@@Base+0xe0>
   2693c:	cmp	r1, #251	; 0xfb
   26940:	beq	269dc <myhtml_insertion_mode_after_body@@Base+0xd8>
   26944:	b	269d0 <myhtml_insertion_mode_after_body@@Base+0xcc>
   26948:	cmp	r1, #65	; 0x41
   2694c:	bne	269d0 <myhtml_insertion_mode_after_body@@Base+0xcc>
   26950:	ldr	r1, [r0, #88]	; 0x58
   26954:	mov	r4, #0
   26958:	cmp	r1, #0
   2695c:	bne	269dc <myhtml_insertion_mode_after_body@@Base+0xd8>
   26960:	mov	r1, #21
   26964:	str	r1, [r0, #168]	; 0xa8
   26968:	mov	r0, r4
   2696c:	pop	{r4, r5, r6, sl, fp, pc}
   26970:	cmp	r1, #1
   26974:	beq	269c4 <myhtml_insertion_mode_after_body@@Base+0xc0>
   26978:	cmp	r1, #2
   2697c:	bne	269d0 <myhtml_insertion_mode_after_body@@Base+0xcc>
   26980:	ldr	r1, [r0, #128]	; 0x80
   26984:	ldr	r2, [r1, #4]
   26988:	cmp	r2, #0
   2698c:	beq	269dc <myhtml_insertion_mode_after_body@@Base+0xd8>
   26990:	ldr	r1, [r1]
   26994:	ldr	r6, [r1]
   26998:	bl	110a8 <myhtml_tree_node_create@plt>
   2699c:	mov	r1, r0
   269a0:	str	r5, [r0, #32]
   269a4:	mov	r0, #2
   269a8:	str	r0, [r1, #4]
   269ac:	ldr	r0, [r6, #8]
   269b0:	str	r0, [r1, #8]
   269b4:	mov	r0, r6
   269b8:	bl	11588 <myhtml_tree_node_add_child@plt>
   269bc:	mov	r0, r4
   269c0:	pop	{r4, r5, r6, sl, fp, pc}
   269c4:	ldr	r1, [r5, #48]	; 0x30
   269c8:	tst	r1, #8
   269cc:	bne	269e4 <myhtml_insertion_mode_after_body@@Base+0xe0>
   269d0:	mov	r1, #6
   269d4:	mov	r4, #1
   269d8:	str	r1, [r0, #168]	; 0xa8
   269dc:	mov	r0, r4
   269e0:	pop	{r4, r5, r6, sl, fp, pc}
   269e4:	mov	r1, r5
   269e8:	pop	{r4, r5, r6, sl, fp, lr}
   269ec:	b	222d4 <myhtml_insertion_mode_in_body@@Base>

000269f0 <myhtml_insertion_mode_in_frameset@@Base>:
   269f0:	push	{r4, r5, fp, lr}
   269f4:	add	fp, sp, #8
   269f8:	mov	r4, r0
   269fc:	mov	r5, r1
   26a00:	ldr	r0, [r1]
   26a04:	ldr	r1, [r1, #48]	; 0x30
   26a08:	tst	r1, #1
   26a0c:	bne	26aec <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   26a10:	cmp	r0, #52	; 0x34
   26a14:	ble	26b50 <myhtml_insertion_mode_in_frameset@@Base+0x160>
   26a18:	sub	r1, r0, #53	; 0x35
   26a1c:	cmp	r1, #39	; 0x27
   26a20:	bhi	26b78 <myhtml_insertion_mode_in_frameset@@Base+0x188>
   26a24:	add	r0, pc, #4
   26a28:	ldr	r1, [r0, r1, lsl #2]
   26a2c:	add	pc, r0, r1
   26a30:	andeq	r0, r0, r0, lsr #1
   26a34:	andeq	r0, r0, r0, ror #2
   26a38:	andeq	r0, r0, ip, asr #3
   26a3c:	andeq	r0, r0, ip, asr #3
   26a40:	andeq	r0, r0, ip, asr #3
   26a44:	andeq	r0, r0, ip, asr #3
   26a48:	andeq	r0, r0, ip, asr #3
   26a4c:	andeq	r0, r0, ip, asr #3
   26a50:	andeq	r0, r0, ip, asr #3
   26a54:	andeq	r0, r0, ip, asr #3
   26a58:	andeq	r0, r0, ip, asr #3
   26a5c:	andeq	r0, r0, ip, asr #3
   26a60:	andeq	r0, r0, r4, ror r1
   26a64:	andeq	r0, r0, ip, asr #3
   26a68:	andeq	r0, r0, ip, asr #3
   26a6c:	andeq	r0, r0, ip, asr #3
   26a70:	andeq	r0, r0, ip, asr #3
   26a74:	andeq	r0, r0, ip, asr #3
   26a78:	andeq	r0, r0, ip, asr #3
   26a7c:	andeq	r0, r0, ip, asr #3
   26a80:	andeq	r0, r0, ip, asr #3
   26a84:	andeq	r0, r0, ip, asr #3
   26a88:	andeq	r0, r0, ip, asr #3
   26a8c:	andeq	r0, r0, ip, asr #3
   26a90:	andeq	r0, r0, ip, asr #3
   26a94:	andeq	r0, r0, ip, asr #3
   26a98:	andeq	r0, r0, ip, asr #3
   26a9c:	andeq	r0, r0, ip, asr #3
   26aa0:	andeq	r0, r0, ip, asr #3
   26aa4:	andeq	r0, r0, ip, asr #3
   26aa8:	andeq	r0, r0, ip, asr #3
   26aac:	andeq	r0, r0, ip, asr #3
   26ab0:	andeq	r0, r0, ip, asr #3
   26ab4:	andeq	r0, r0, ip, asr #3
   26ab8:	andeq	r0, r0, ip, asr #3
   26abc:	andeq	r0, r0, ip, asr #3
   26ac0:	andeq	r0, r0, ip, asr #3
   26ac4:	andeq	r0, r0, ip, asr #3
   26ac8:	andeq	r0, r0, ip, asr #3
   26acc:	andeq	r0, r0, r4, lsl #3
   26ad0:	mov	r0, r4
   26ad4:	mov	r1, r5
   26ad8:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   26adc:	mov	r0, r4
   26ae0:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   26ae4:	mov	r0, #0
   26ae8:	pop	{r4, r5, fp, pc}
   26aec:	cmp	r0, #54	; 0x36
   26af0:	bne	26bfc <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26af4:	mov	r0, r4
   26af8:	bl	11504 <myhtml_tree_current_node@plt>
   26afc:	ldr	r1, [r4, #84]	; 0x54
   26b00:	ldr	r1, [r1, #20]
   26b04:	cmp	r0, r1
   26b08:	beq	26bfc <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26b0c:	mov	r0, r4
   26b10:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   26b14:	mov	r0, r4
   26b18:	bl	11504 <myhtml_tree_current_node@plt>
   26b1c:	ldr	r1, [r4, #88]	; 0x58
   26b20:	cmp	r1, #0
   26b24:	bne	26bfc <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26b28:	ldr	r1, [r0, #4]
   26b2c:	cmp	r1, #54	; 0x36
   26b30:	bne	26b40 <myhtml_insertion_mode_in_frameset@@Base+0x150>
   26b34:	ldr	r0, [r0, #8]
   26b38:	cmp	r0, #1
   26b3c:	beq	26bfc <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26b40:	mov	r0, #20
   26b44:	str	r0, [r4, #168]	; 0xa8
   26b48:	mov	r0, #0
   26b4c:	pop	{r4, r5, fp, pc}
   26b50:	cmp	r0, #1
   26b54:	beq	26bc4 <myhtml_insertion_mode_in_frameset@@Base+0x1d4>
   26b58:	cmp	r0, #2
   26b5c:	bne	26bfc <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26b60:	mov	r0, r4
   26b64:	mov	r1, r5
   26b68:	mov	r2, #0
   26b6c:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   26b70:	mov	r0, #0
   26b74:	pop	{r4, r5, fp, pc}
   26b78:	cmp	r0, #251	; 0xfb
   26b7c:	bne	26bfc <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26b80:	mov	r0, r4
   26b84:	bl	11504 <myhtml_tree_current_node@plt>
   26b88:	mov	r0, #0
   26b8c:	pop	{r4, r5, fp, pc}
   26b90:	mov	r0, r4
   26b94:	mov	r1, r5
   26b98:	bl	10e14 <myhtml_tree_node_insert_html_element@plt>
   26b9c:	mov	r0, #0
   26ba0:	pop	{r4, r5, fp, pc}
   26ba4:	mov	r0, r4
   26ba8:	mov	r1, r5
   26bac:	pop	{r4, r5, fp, lr}
   26bb0:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   26bb4:	mov	r0, r4
   26bb8:	mov	r1, r5
   26bbc:	pop	{r4, r5, fp, lr}
   26bc0:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   26bc4:	ldr	r0, [r5, #48]	; 0x30
   26bc8:	tst	r0, #8
   26bcc:	bne	26bf0 <myhtml_insertion_mode_in_frameset@@Base+0x200>
   26bd0:	ldr	r0, [r4, #8]
   26bd4:	mov	r1, r5
   26bd8:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   26bdc:	add	r0, r5, #4
   26be0:	bl	112b8 <mycore_string_stay_only_whitespace@plt>
   26be4:	ldr	r0, [r5, #12]
   26be8:	cmp	r0, #0
   26bec:	beq	26bfc <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   26bf0:	mov	r0, r4
   26bf4:	mov	r1, r5
   26bf8:	bl	11054 <myhtml_tree_node_insert_text@plt>
   26bfc:	mov	r0, #0
   26c00:	pop	{r4, r5, fp, pc}

00026c04 <myhtml_insertion_mode_after_frameset@@Base>:
   26c04:	push	{r4, r5, fp, lr}
   26c08:	add	fp, sp, #8
   26c0c:	mov	r4, r0
   26c10:	mov	r5, r1
   26c14:	ldr	r0, [r1]
   26c18:	ldr	r1, [r1, #48]	; 0x30
   26c1c:	tst	r1, #1
   26c20:	bne	26c54 <myhtml_insertion_mode_after_frameset@@Base+0x50>
   26c24:	cmp	r0, #64	; 0x40
   26c28:	bgt	26c68 <myhtml_insertion_mode_after_frameset@@Base+0x64>
   26c2c:	cmp	r0, #1
   26c30:	beq	26c88 <myhtml_insertion_mode_after_frameset@@Base+0x84>
   26c34:	cmp	r0, #2
   26c38:	bne	26c60 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   26c3c:	mov	r0, r4
   26c40:	mov	r1, r5
   26c44:	mov	r2, #0
   26c48:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   26c4c:	mov	r0, #0
   26c50:	pop	{r4, r5, fp, pc}
   26c54:	cmp	r0, #65	; 0x41
   26c58:	moveq	r0, #22
   26c5c:	streq	r0, [r4, #168]	; 0xa8
   26c60:	mov	r0, #0
   26c64:	pop	{r4, r5, fp, pc}
   26c68:	cmp	r0, #65	; 0x41
   26c6c:	beq	26cc8 <myhtml_insertion_mode_after_frameset@@Base+0xc4>
   26c70:	cmp	r0, #92	; 0x5c
   26c74:	bne	26c60 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   26c78:	mov	r0, r4
   26c7c:	mov	r1, r5
   26c80:	pop	{r4, r5, fp, lr}
   26c84:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   26c88:	ldr	r0, [r5, #48]	; 0x30
   26c8c:	tst	r0, #8
   26c90:	bne	26cb4 <myhtml_insertion_mode_after_frameset@@Base+0xb0>
   26c94:	ldr	r0, [r4, #8]
   26c98:	mov	r1, r5
   26c9c:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   26ca0:	add	r0, r5, #4
   26ca4:	bl	112b8 <mycore_string_stay_only_whitespace@plt>
   26ca8:	ldr	r0, [r5, #12]
   26cac:	cmp	r0, #0
   26cb0:	beq	26c60 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   26cb4:	mov	r0, r4
   26cb8:	mov	r1, r5
   26cbc:	bl	11054 <myhtml_tree_node_insert_text@plt>
   26cc0:	mov	r0, #0
   26cc4:	pop	{r4, r5, fp, pc}
   26cc8:	mov	r0, r4
   26ccc:	mov	r1, r5
   26cd0:	pop	{r4, r5, fp, lr}
   26cd4:	b	222d4 <myhtml_insertion_mode_in_body@@Base>

00026cd8 <myhtml_insertion_mode_after_after_body@@Base>:
   26cd8:	push	{r4, r5, r6, sl, fp, lr}
   26cdc:	add	fp, sp, #16
   26ce0:	mov	r5, r1
   26ce4:	ldr	r1, [r1, #48]	; 0x30
   26ce8:	tst	r1, #1
   26cec:	bne	26d74 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   26cf0:	ldr	r1, [r5]
   26cf4:	mov	r4, #0
   26cf8:	cmp	r1, #2
   26cfc:	ble	26d18 <myhtml_insertion_mode_after_after_body@@Base+0x40>
   26d00:	cmp	r1, #3
   26d04:	cmpne	r1, #65	; 0x41
   26d08:	bne	26d58 <myhtml_insertion_mode_after_after_body@@Base+0x80>
   26d0c:	mov	r1, r5
   26d10:	pop	{r4, r5, r6, sl, fp, lr}
   26d14:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   26d18:	cmp	r1, #1
   26d1c:	beq	26d68 <myhtml_insertion_mode_after_after_body@@Base+0x90>
   26d20:	cmp	r1, #2
   26d24:	bne	26d74 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   26d28:	ldr	r6, [r0, #84]	; 0x54
   26d2c:	bl	110a8 <myhtml_tree_node_create@plt>
   26d30:	mov	r1, r0
   26d34:	str	r5, [r0, #32]
   26d38:	mov	r0, #2
   26d3c:	str	r0, [r1, #4]
   26d40:	ldr	r0, [r6, #8]
   26d44:	str	r0, [r1, #8]
   26d48:	mov	r0, r6
   26d4c:	bl	11588 <myhtml_tree_node_add_child@plt>
   26d50:	mov	r0, r4
   26d54:	pop	{r4, r5, r6, sl, fp, pc}
   26d58:	cmp	r1, #251	; 0xfb
   26d5c:	bne	26d74 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   26d60:	mov	r0, r4
   26d64:	pop	{r4, r5, r6, sl, fp, pc}
   26d68:	ldr	r1, [r5, #48]	; 0x30
   26d6c:	tst	r1, #8
   26d70:	bne	26d0c <myhtml_insertion_mode_after_after_body@@Base+0x34>
   26d74:	mov	r1, #6
   26d78:	mov	r4, #1
   26d7c:	str	r1, [r0, #168]	; 0xa8
   26d80:	mov	r0, r4
   26d84:	pop	{r4, r5, r6, sl, fp, pc}

00026d88 <myhtml_insertion_mode_after_after_frameset@@Base>:
   26d88:	push	{r4, r5, r6, sl, fp, lr}
   26d8c:	add	fp, sp, #16
   26d90:	mov	r4, r0
   26d94:	ldr	r0, [r1, #48]	; 0x30
   26d98:	tst	r0, #1
   26d9c:	bne	26e54 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   26da0:	ldr	r0, [r1]
   26da4:	mov	r5, r1
   26da8:	cmp	r0, #2
   26dac:	ble	26dcc <myhtml_insertion_mode_after_after_frameset@@Base+0x44>
   26db0:	cmp	r0, #3
   26db4:	cmpne	r0, #65	; 0x41
   26db8:	bne	26e0c <myhtml_insertion_mode_after_after_frameset@@Base+0x84>
   26dbc:	mov	r0, r4
   26dc0:	mov	r1, r5
   26dc4:	pop	{r4, r5, r6, sl, fp, lr}
   26dc8:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   26dcc:	cmp	r0, #1
   26dd0:	beq	26e24 <myhtml_insertion_mode_after_after_frameset@@Base+0x9c>
   26dd4:	cmp	r0, #2
   26dd8:	bne	26e54 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   26ddc:	ldr	r6, [r4, #84]	; 0x54
   26de0:	mov	r0, r4
   26de4:	bl	110a8 <myhtml_tree_node_create@plt>
   26de8:	mov	r1, r0
   26dec:	str	r5, [r0, #32]
   26df0:	mov	r0, #2
   26df4:	str	r0, [r1, #4]
   26df8:	ldr	r0, [r6, #8]
   26dfc:	str	r0, [r1, #8]
   26e00:	mov	r0, r6
   26e04:	bl	11588 <myhtml_tree_node_add_child@plt>
   26e08:	b	26e54 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   26e0c:	cmp	r0, #92	; 0x5c
   26e10:	bne	26e54 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   26e14:	mov	r0, r4
   26e18:	mov	r1, r5
   26e1c:	pop	{r4, r5, r6, sl, fp, lr}
   26e20:	b	23ae4 <myhtml_insertion_mode_in_head@@Base>
   26e24:	ldr	r0, [r5, #48]	; 0x30
   26e28:	tst	r0, #8
   26e2c:	bne	26dbc <myhtml_insertion_mode_after_after_frameset@@Base+0x34>
   26e30:	mov	r0, r4
   26e34:	mov	r1, r5
   26e38:	bl	10fdc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   26e3c:	cmp	r0, #0
   26e40:	beq	26e54 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   26e44:	mov	r1, r0
   26e48:	mov	r0, r4
   26e4c:	pop	{r4, r5, r6, sl, fp, lr}
   26e50:	b	222d4 <myhtml_insertion_mode_in_body@@Base>
   26e54:	mov	r0, #0
   26e58:	pop	{r4, r5, r6, sl, fp, pc}

00026e5c <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   26e5c:	push	{r4, sl, fp, lr}
   26e60:	add	fp, sp, #8
   26e64:	ldr	r1, [r0, #128]	; 0x80
   26e68:	ldr	r3, [r1, #4]
   26e6c:	cmp	r3, #0
   26e70:	beq	26eb4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x58>
   26e74:	ldr	r3, [r1]
   26e78:	ldr	r1, [r1, #4]
   26e7c:	sub	ip, r1, #1
   26e80:	add	r3, r3, ip, lsl #2
   26e84:	cmp	ip, #0
   26e88:	beq	26eb4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x58>
   26e8c:	ldr	r1, [r3]
   26e90:	ldr	lr, [r2]
   26e94:	ldr	r4, [r1, #4]
   26e98:	cmp	r4, lr
   26e9c:	beq	26ed0 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x74>
   26ea0:	ldr	r1, [r3, #-4]!
   26ea4:	sub	ip, ip, #1
   26ea8:	ldr	r1, [r1, #8]
   26eac:	cmp	r1, #1
   26eb0:	bne	26e84 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x28>
   26eb4:	ldr	r1, [r0]
   26eb8:	ldr	r3, [r0, #168]	; 0xa8
   26ebc:	ldr	r1, [r1, #28]
   26ec0:	ldr	r3, [r1, r3, lsl #2]
   26ec4:	mov	r1, r2
   26ec8:	pop	{r4, sl, fp, lr}
   26ecc:	bx	r3
   26ed0:	mov	r2, #0
   26ed4:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   26ed8:	mov	r0, #0
   26edc:	pop	{r4, sl, fp, pc}

00026ee0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   26ee0:	push	{r4, r5, r6, sl, fp, lr}
   26ee4:	add	fp, sp, #16
   26ee8:	mov	r5, r1
   26eec:	mov	r4, r0
   26ef0:	bl	11a2c <myhtml_tree_adjusted_current_node@plt>
   26ef4:	mov	r6, r0
   26ef8:	ldr	r0, [r4, #8]
   26efc:	mov	r1, r5
   26f00:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   26f04:	ldr	r0, [r6, #8]
   26f08:	cmp	r0, #3
   26f0c:	beq	26f24 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x44>
   26f10:	cmp	r0, #2
   26f14:	bne	26f2c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   26f18:	mov	r0, r5
   26f1c:	bl	1103c <myhtml_token_adjust_mathml_attributes@plt>
   26f20:	b	26f2c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   26f24:	mov	r0, r5
   26f28:	bl	11210 <myhtml_token_adjust_svg_attributes@plt>
   26f2c:	mov	r0, r5
   26f30:	bl	11924 <myhtml_token_adjust_foreign_attributes@plt>
   26f34:	mov	r0, r4
   26f38:	mov	r1, r5
   26f3c:	bl	11a50 <myhtml_tree_node_insert_foreign_element@plt>
   26f40:	ldr	r1, [r6, #8]
   26f44:	str	r1, [r0, #8]
   26f48:	ldr	r0, [r5, #48]	; 0x30
   26f4c:	tst	r0, #2
   26f50:	beq	26f6c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x8c>
   26f54:	cmp	r1, #3
   26f58:	ldreq	r0, [r5]
   26f5c:	cmpeq	r0, #112	; 0x70
   26f60:	beq	26f74 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x94>
   26f64:	mov	r0, r4
   26f68:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   26f6c:	mov	r0, #0
   26f70:	pop	{r4, r5, r6, sl, fp, pc}
   26f74:	mov	r0, r4
   26f78:	bl	11504 <myhtml_tree_current_node@plt>
   26f7c:	ldr	r0, [r4, #128]	; 0x80
   26f80:	ldr	r1, [r0, #4]
   26f84:	cmp	r1, #0
   26f88:	beq	26fcc <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xec>
   26f8c:	ldr	r1, [r0]
   26f90:	ldr	r0, [r0, #4]
   26f94:	sub	r0, r0, #1
   26f98:	add	r2, r1, r0, lsl #2
   26f9c:	cmp	r0, #0
   26fa0:	beq	26fcc <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xec>
   26fa4:	ldr	r1, [r2]
   26fa8:	ldr	r3, [r5]
   26fac:	ldr	r6, [r1, #4]
   26fb0:	cmp	r6, r3
   26fb4:	beq	26fec <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x10c>
   26fb8:	ldr	r1, [r2, #-4]!
   26fbc:	sub	r0, r0, #1
   26fc0:	ldr	r1, [r1, #8]
   26fc4:	cmp	r1, #1
   26fc8:	bne	26f9c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xbc>
   26fcc:	ldr	r0, [r4]
   26fd0:	ldr	r1, [r4, #168]	; 0xa8
   26fd4:	ldr	r0, [r0, #28]
   26fd8:	ldr	r2, [r0, r1, lsl #2]
   26fdc:	mov	r0, r4
   26fe0:	mov	r1, r5
   26fe4:	pop	{r4, r5, r6, sl, fp, lr}
   26fe8:	bx	r2
   26fec:	mov	r0, r4
   26ff0:	mov	r2, #0
   26ff4:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   26ff8:	mov	r0, #0
   26ffc:	pop	{r4, r5, r6, sl, fp, pc}

00027000 <myhtml_insertion_mode_in_foreign_content@@Base>:
   27000:	push	{r4, r5, r6, sl, fp, lr}
   27004:	add	fp, sp, #16
   27008:	mov	r4, r0
   2700c:	ldr	r0, [r1, #48]	; 0x30
   27010:	mov	r5, r1
   27014:	tst	r0, #1
   27018:	bne	27288 <myhtml_insertion_mode_in_foreign_content@@Base+0x288>
   2701c:	ldr	r0, [r5]
   27020:	sub	r0, r0, #1
   27024:	cmp	r0, #139	; 0x8b
   27028:	bhi	27278 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   2702c:	add	r1, pc, #8
   27030:	mov	r6, #0
   27034:	ldr	r0, [r1, r0, lsl #2]
   27038:	add	pc, r1, r0
   2703c:	andeq	r0, r0, ip, ror #6
   27040:	andeq	r0, r0, r4, asr #7
   27044:	andeq	r0, r0, ip, asr #6
   27048:	andeq	r0, r0, ip, lsr r2
   2704c:	andeq	r0, r0, ip, lsr r2
   27050:	andeq	r0, r0, ip, lsr r2
   27054:	andeq	r0, r0, ip, lsr r2
   27058:	andeq	r0, r0, ip, lsr r2
   2705c:	andeq	r0, r0, ip, lsr r2
   27060:	andeq	r0, r0, ip, lsr r2
   27064:	andeq	r0, r0, ip, lsr r2
   27068:	andeq	r0, r0, ip, lsr r2
   2706c:	andeq	r0, r0, ip, lsr r2
   27070:	andeq	r0, r0, r0, lsr r2
   27074:	andeq	r0, r0, ip, lsr r2
   27078:	andeq	r0, r0, ip, lsr r2
   2707c:	andeq	r0, r0, ip, lsr r2
   27080:	andeq	r0, r0, ip, lsr r2
   27084:	andeq	r0, r0, ip, lsr r2
   27088:	andeq	r0, r0, r0, lsr r2
   2708c:	andeq	r0, r0, ip, lsr r2
   27090:	andeq	r0, r0, r0, lsr r2
   27094:	andeq	r0, r0, r0, lsr r2
   27098:	andeq	r0, r0, r0, lsr r2
   2709c:	andeq	r0, r0, ip, lsr r2
   270a0:	andeq	r0, r0, ip, lsr r2
   270a4:	andeq	r0, r0, ip, lsr r2
   270a8:	andeq	r0, r0, r0, lsr r2
   270ac:	andeq	r0, r0, ip, lsr r2
   270b0:	andeq	r0, r0, r0, lsr r2
   270b4:	andeq	r0, r0, ip, lsr r2
   270b8:	andeq	r0, r0, ip, lsr r2
   270bc:	andeq	r0, r0, ip, lsr r2
   270c0:	andeq	r0, r0, ip, lsr r2
   270c4:	andeq	r0, r0, ip, lsr r2
   270c8:	andeq	r0, r0, r0, lsr r2
   270cc:	andeq	r0, r0, ip, lsr r2
   270d0:	andeq	r0, r0, ip, lsr r2
   270d4:	andeq	r0, r0, ip, lsr r2
   270d8:	andeq	r0, r0, ip, lsr r2
   270dc:	andeq	r0, r0, ip, lsr r2
   270e0:	andeq	r0, r0, r0, lsr r2
   270e4:	andeq	r0, r0, r0, lsr r2
   270e8:	andeq	r0, r0, r0, lsr r2
   270ec:	andeq	r0, r0, r0, lsr r2
   270f0:	andeq	r0, r0, r0, lsr r2
   270f4:	andeq	r0, r0, ip, lsr r2
   270f8:	andeq	r0, r0, ip, lsr r2
   270fc:	andeq	r0, r0, ip, lsr r2
   27100:	andeq	r0, r0, r0, ror #7
   27104:	andeq	r0, r0, ip, lsr r2
   27108:	andeq	r0, r0, ip, lsr r2
   2710c:	andeq	r0, r0, ip, lsr r2
   27110:	andeq	r0, r0, ip, lsr r2
   27114:	andeq	r0, r0, r0, lsr r2
   27118:	andeq	r0, r0, r0, lsr r2
   2711c:	andeq	r0, r0, r0, lsr r2
   27120:	andeq	r0, r0, r0, lsr r2
   27124:	andeq	r0, r0, r0, lsr r2
   27128:	andeq	r0, r0, r0, lsr r2
   2712c:	andeq	r0, r0, r0, lsr r2
   27130:	andeq	r0, r0, ip, lsr r2
   27134:	andeq	r0, r0, ip, lsr r2
   27138:	andeq	r0, r0, r0, lsr r2
   2713c:	andeq	r0, r0, ip, lsr r2
   27140:	andeq	r0, r0, r0, lsr r2
   27144:	andeq	r0, r0, ip, lsr r2
   27148:	andeq	r0, r0, ip, lsr r2
   2714c:	andeq	r0, r0, r0, lsr r2
   27150:	andeq	r0, r0, ip, lsr r2
   27154:	andeq	r0, r0, ip, lsr r2
   27158:	andeq	r0, r0, ip, lsr r2
   2715c:	andeq	r0, r0, ip, lsr r2
   27160:	andeq	r0, r0, ip, lsr r2
   27164:	andeq	r0, r0, ip, lsr r2
   27168:	andeq	r0, r0, ip, lsr r2
   2716c:	andeq	r0, r0, r0, lsr r2
   27170:	andeq	r0, r0, ip, lsr r2
   27174:	andeq	r0, r0, r0, lsr r2
   27178:	andeq	r0, r0, ip, lsr r2
   2717c:	andeq	r0, r0, ip, lsr r2
   27180:	andeq	r0, r0, ip, lsr r2
   27184:	andeq	r0, r0, ip, lsr r2
   27188:	andeq	r0, r0, r0, lsr r2
   2718c:	andeq	r0, r0, ip, lsr r2
   27190:	andeq	r0, r0, r0, lsr r2
   27194:	andeq	r0, r0, ip, lsr r2
   27198:	andeq	r0, r0, ip, lsr r2
   2719c:	andeq	r0, r0, ip, lsr r2
   271a0:	andeq	r0, r0, r0, lsr r2
   271a4:	andeq	r0, r0, ip, lsr r2
   271a8:	andeq	r0, r0, ip, lsr r2
   271ac:	andeq	r0, r0, ip, lsr r2
   271b0:	andeq	r0, r0, ip, lsr r2
   271b4:	andeq	r0, r0, r0, lsr r2
   271b8:	andeq	r0, r0, ip, lsr r2
   271bc:	andeq	r0, r0, ip, lsr r2
   271c0:	andeq	r0, r0, ip, lsr r2
   271c4:	andeq	r0, r0, r0, lsr r2
   271c8:	andeq	r0, r0, ip, lsr r2
   271cc:	andeq	r0, r0, ip, lsr r2
   271d0:	andeq	r0, r0, r0, lsr r2
   271d4:	andeq	r0, r0, ip, lsr r2
   271d8:	andeq	r0, r0, ip, lsr r2
   271dc:	andeq	r0, r0, ip, lsr r2
   271e0:	andeq	r0, r0, ip, lsr r2
   271e4:	andeq	r0, r0, ip, lsr r2
   271e8:	andeq	r0, r0, ip, lsr r2
   271ec:	andeq	r0, r0, r0, lsr r2
   271f0:	andeq	r0, r0, r0, lsr r2
   271f4:	andeq	r0, r0, ip, lsr r2
   271f8:	andeq	r0, r0, ip, lsr r2
   271fc:	andeq	r0, r0, ip, lsr r2
   27200:	andeq	r0, r0, ip, lsr r2
   27204:	andeq	r0, r0, r0, lsr r2
   27208:	andeq	r0, r0, ip, lsr r2
   2720c:	andeq	r0, r0, r0, lsr r2
   27210:	andeq	r0, r0, r0, lsr r2
   27214:	andeq	r0, r0, r0, lsr r2
   27218:	andeq	r0, r0, ip, lsr r2
   2721c:	andeq	r0, r0, r0, lsr r2
   27220:	andeq	r0, r0, ip, lsr r2
   27224:	andeq	r0, r0, r0, lsr r2
   27228:	andeq	r0, r0, ip, lsr r2
   2722c:	andeq	r0, r0, r0, lsr r2
   27230:	andeq	r0, r0, ip, lsr r2
   27234:	andeq	r0, r0, ip, lsr r2
   27238:	andeq	r0, r0, ip, lsr r2
   2723c:	andeq	r0, r0, ip, lsr r2
   27240:	andeq	r0, r0, ip, lsr r2
   27244:	andeq	r0, r0, ip, lsr r2
   27248:	andeq	r0, r0, ip, lsr r2
   2724c:	andeq	r0, r0, ip, lsr r2
   27250:	andeq	r0, r0, ip, lsr r2
   27254:	andeq	r0, r0, ip, lsr r2
   27258:	andeq	r0, r0, ip, lsr r2
   2725c:	andeq	r0, r0, r0, lsr r2
   27260:	andeq	r0, r0, r0, lsr r2
   27264:	andeq	r0, r0, r0, lsr r2
   27268:	andeq	r0, r0, r0, lsr r2
   2726c:	ldr	r0, [r4, #88]	; 0x58
   27270:	cmp	r0, #0
   27274:	beq	27334 <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   27278:	mov	r0, r4
   2727c:	mov	r1, r5
   27280:	pop	{r4, r5, r6, sl, fp, lr}
   27284:	b	26ee0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>
   27288:	mov	r0, r4
   2728c:	bl	11504 <myhtml_tree_current_node@plt>
   27290:	ldr	r2, [r5]
   27294:	cmp	r2, #112	; 0x70
   27298:	bne	272c8 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c8>
   2729c:	ldr	r1, [r0, #4]
   272a0:	cmp	r1, #112	; 0x70
   272a4:	bne	272c8 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c8>
   272a8:	ldr	r0, [r0, #8]
   272ac:	cmp	r0, #3
   272b0:	bne	272c8 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c8>
   272b4:	mov	r0, r4
   272b8:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   272bc:	mov	r6, #0
   272c0:	mov	r0, r6
   272c4:	pop	{r4, r5, r6, sl, fp, pc}
   272c8:	ldr	r0, [r4, #128]	; 0x80
   272cc:	ldr	r1, [r0, #4]
   272d0:	cmp	r1, #0
   272d4:	beq	27314 <myhtml_insertion_mode_in_foreign_content@@Base+0x314>
   272d8:	ldr	r1, [r0]
   272dc:	ldr	r0, [r0, #4]
   272e0:	sub	r0, r0, #1
   272e4:	add	r3, r1, r0, lsl #2
   272e8:	cmp	r0, #0
   272ec:	beq	27314 <myhtml_insertion_mode_in_foreign_content@@Base+0x314>
   272f0:	ldr	r1, [r3]
   272f4:	ldr	r6, [r1, #4]
   272f8:	cmp	r6, r2
   272fc:	beq	27390 <myhtml_insertion_mode_in_foreign_content@@Base+0x390>
   27300:	ldr	r1, [r3, #-4]!
   27304:	sub	r0, r0, #1
   27308:	ldr	r1, [r1, #8]
   2730c:	cmp	r1, #1
   27310:	bne	272e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e8>
   27314:	ldr	r0, [r4]
   27318:	ldr	r1, [r4, #168]	; 0xa8
   2731c:	ldr	r0, [r0, #28]
   27320:	ldr	r2, [r0, r1, lsl #2]
   27324:	mov	r0, r4
   27328:	mov	r1, r5
   2732c:	pop	{r4, r5, r6, sl, fp, lr}
   27330:	bx	r2
   27334:	mov	r6, #1
   27338:	mov	r0, r4
   2733c:	bl	111e0 <myhtml_tree_open_elements_pop@plt>
   27340:	mov	r0, r4
   27344:	bl	11504 <myhtml_tree_current_node@plt>
   27348:	cmp	r0, #0
   2734c:	beq	27388 <myhtml_insertion_mode_in_foreign_content@@Base+0x388>
   27350:	mov	r5, r0
   27354:	mov	r0, r4
   27358:	mov	r1, r5
   2735c:	bl	110fc <myhtml_tree_is_mathml_integration_point@plt>
   27360:	cmp	r0, #0
   27364:	bne	27388 <myhtml_insertion_mode_in_foreign_content@@Base+0x388>
   27368:	mov	r0, r4
   2736c:	mov	r1, r5
   27370:	bl	11228 <myhtml_tree_is_html_integration_point@plt>
   27374:	cmp	r0, #0
   27378:	bne	27388 <myhtml_insertion_mode_in_foreign_content@@Base+0x388>
   2737c:	ldr	r0, [r5, #8]
   27380:	cmp	r0, #1
   27384:	bne	27338 <myhtml_insertion_mode_in_foreign_content@@Base+0x338>
   27388:	mov	r0, r6
   2738c:	pop	{r4, r5, r6, sl, fp, pc}
   27390:	mov	r0, r4
   27394:	mov	r2, #0
   27398:	mov	r6, #0
   2739c:	bl	11198 <myhtml_tree_open_elements_pop_until_by_node@plt>
   273a0:	mov	r0, r6
   273a4:	pop	{r4, r5, r6, sl, fp, pc}
   273a8:	ldr	r0, [r5, #48]	; 0x30
   273ac:	tst	r0, #2048	; 0x800
   273b0:	beq	273cc <myhtml_insertion_mode_in_foreign_content@@Base+0x3cc>
   273b4:	ldr	r0, [r4, #8]
   273b8:	mov	r1, r5
   273bc:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   273c0:	mov	r0, r4
   273c4:	mov	r1, r5
   273c8:	bl	112d0 <myhtml_token_set_replacement_character_for_null_token@plt>
   273cc:	mov	r0, r4
   273d0:	mov	r1, r5
   273d4:	bl	11054 <myhtml_tree_node_insert_text@plt>
   273d8:	ldr	r0, [r5, #48]	; 0x30
   273dc:	tst	r0, #8
   273e0:	bne	27388 <myhtml_insertion_mode_in_foreign_content@@Base+0x388>
   273e4:	ldr	r0, [r4, #180]	; 0xb4
   273e8:	ldr	r1, [r4, #180]	; 0xb4
   273ec:	and	r0, r0, #2
   273f0:	eor	r0, r1, r0
   273f4:	str	r0, [r4, #180]	; 0xb4
   273f8:	mov	r0, r6
   273fc:	pop	{r4, r5, r6, sl, fp, pc}
   27400:	mov	r0, r4
   27404:	mov	r1, r5
   27408:	mov	r2, #0
   2740c:	mov	r6, #0
   27410:	bl	11258 <myhtml_tree_node_insert_comment@plt>
   27414:	mov	r0, r6
   27418:	pop	{r4, r5, r6, sl, fp, pc}
   2741c:	ldr	r0, [r4, #8]
   27420:	mov	r1, r5
   27424:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   27428:	ldr	r1, [pc, #80]	; 27480 <myhtml_insertion_mode_in_foreign_content@@Base+0x480>
   2742c:	mov	r0, r5
   27430:	mov	r2, #5
   27434:	add	r1, pc, r1
   27438:	bl	11b34 <myhtml_token_attr_by_name@plt>
   2743c:	cmp	r0, #0
   27440:	bne	2726c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   27444:	ldr	r1, [pc, #56]	; 27484 <myhtml_insertion_mode_in_foreign_content@@Base+0x484>
   27448:	mov	r0, r5
   2744c:	mov	r2, #4
   27450:	add	r1, pc, r1
   27454:	bl	11b34 <myhtml_token_attr_by_name@plt>
   27458:	cmp	r0, #0
   2745c:	bne	2726c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   27460:	ldr	r1, [pc, #32]	; 27488 <myhtml_insertion_mode_in_foreign_content@@Base+0x488>
   27464:	mov	r0, r5
   27468:	mov	r2, #4
   2746c:	add	r1, pc, r1
   27470:	bl	11b34 <myhtml_token_attr_by_name@plt>
   27474:	cmp	r0, #0
   27478:	bne	2726c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   2747c:	b	27278 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   27480:	andeq	fp, sp, sl, lsr #30
   27484:	strdeq	ip, [sp], -r3
   27488:	strdeq	fp, [sp], -r8

0002748c <myhtml_rules_check_for_first_newline@@Base>:
   2748c:	push	{r4, r5, r6, sl, fp, lr}
   27490:	add	fp, sp, #16
   27494:	mov	r5, r0
   27498:	ldr	r0, [r0, #180]	; 0xb4
   2749c:	mov	r4, #0
   274a0:	tst	r0, #64	; 0x40
   274a4:	beq	2751c <myhtml_rules_check_for_first_newline@@Base+0x90>
   274a8:	ldr	r0, [r5, #180]	; 0xb4
   274ac:	tst	r0, #128	; 0x80
   274b0:	beq	27508 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   274b4:	ldr	r0, [r1]
   274b8:	mov	r6, r1
   274bc:	cmp	r0, #1
   274c0:	bne	27508 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   274c4:	ldr	r0, [r5, #8]
   274c8:	mov	r1, r6
   274cc:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   274d0:	ldr	r0, [r6, #12]
   274d4:	cmp	r0, #0
   274d8:	beq	27538 <myhtml_rules_check_for_first_newline@@Base+0xac>
   274dc:	ldr	r0, [r6, #4]
   274e0:	ldrb	r1, [r0]
   274e4:	cmp	r1, #10
   274e8:	bne	27508 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   274ec:	mov	r1, #1
   274f0:	bl	11978 <mchar_async_crop_first_chars_without_cache@plt>
   274f4:	str	r0, [r6, #4]
   274f8:	ldr	r0, [r6, #12]
   274fc:	subs	r0, r0, #1
   27500:	str	r0, [r6, #12]
   27504:	beq	27524 <myhtml_rules_check_for_first_newline@@Base+0x98>
   27508:	ldr	r0, [r5, #180]	; 0xb4
   2750c:	ldr	r1, [r5, #180]	; 0xb4
   27510:	and	r0, r0, #64	; 0x40
   27514:	eor	r0, r1, r0
   27518:	str	r0, [r5, #180]	; 0xb4
   2751c:	mov	r0, r4
   27520:	pop	{r4, r5, r6, sl, fp, pc}
   27524:	ldr	r0, [r5, #180]	; 0xb4
   27528:	ldr	r1, [r5, #180]	; 0xb4
   2752c:	and	r0, r0, #64	; 0x40
   27530:	eor	r0, r1, r0
   27534:	str	r0, [r5, #180]	; 0xb4
   27538:	mov	r4, #1
   2753c:	mov	r0, r4
   27540:	pop	{r4, r5, r6, sl, fp, pc}

00027544 <myhtml_rules_tree_dispatcher@@Base>:
   27544:	push	{r4, r5, r6, sl, fp, lr}
   27548:	add	fp, sp, #16
   2754c:	mov	r5, r0
   27550:	ldr	r0, [r0, #180]	; 0xb4
   27554:	mov	r4, r1
   27558:	tst	r0, #64	; 0x40
   2755c:	beq	275d0 <myhtml_rules_tree_dispatcher@@Base+0x8c>
   27560:	ldr	r0, [r5, #180]	; 0xb4
   27564:	tst	r0, #128	; 0x80
   27568:	beq	275bc <myhtml_rules_tree_dispatcher@@Base+0x78>
   2756c:	ldr	r0, [r4]
   27570:	cmp	r0, #1
   27574:	bne	275bc <myhtml_rules_tree_dispatcher@@Base+0x78>
   27578:	ldr	r0, [r5, #8]
   2757c:	mov	r1, r4
   27580:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   27584:	ldr	r0, [r4, #12]
   27588:	cmp	r0, #0
   2758c:	beq	276f8 <myhtml_rules_tree_dispatcher@@Base+0x1b4>
   27590:	ldr	r0, [r4, #4]
   27594:	ldrb	r1, [r0]
   27598:	cmp	r1, #10
   2759c:	bne	275bc <myhtml_rules_tree_dispatcher@@Base+0x78>
   275a0:	mov	r1, #1
   275a4:	bl	11978 <mchar_async_crop_first_chars_without_cache@plt>
   275a8:	str	r0, [r4, #4]
   275ac:	ldr	r0, [r4, #12]
   275b0:	subs	r0, r0, #1
   275b4:	str	r0, [r4, #12]
   275b8:	beq	27704 <myhtml_rules_tree_dispatcher@@Base+0x1c0>
   275bc:	ldr	r0, [r5, #180]	; 0xb4
   275c0:	ldr	r1, [r5, #180]	; 0xb4
   275c4:	and	r0, r0, #64	; 0x40
   275c8:	eor	r0, r1, r0
   275cc:	str	r0, [r5, #180]	; 0xb4
   275d0:	ldr	r0, [r5, #164]	; 0xa4
   275d4:	cmp	r0, #0
   275d8:	movne	r0, #0
   275dc:	strne	r0, [r5, #164]	; 0xa4
   275e0:	mov	r0, r5
   275e4:	bl	11a2c <myhtml_tree_adjusted_current_node@plt>
   275e8:	mov	r6, r0
   275ec:	ldr	r0, [r5, #128]	; 0x80
   275f0:	ldr	r0, [r0, #4]
   275f4:	cmp	r0, #0
   275f8:	beq	276cc <myhtml_rules_tree_dispatcher@@Base+0x188>
   275fc:	ldr	r0, [r6, #8]
   27600:	cmp	r0, #1
   27604:	beq	276cc <myhtml_rules_tree_dispatcher@@Base+0x188>
   27608:	mov	r0, r5
   2760c:	mov	r1, r6
   27610:	bl	110fc <myhtml_tree_is_mathml_integration_point@plt>
   27614:	cmp	r0, #0
   27618:	beq	2762c <myhtml_rules_tree_dispatcher@@Base+0xe8>
   2761c:	ldr	r0, [r4]
   27620:	cmp	r0, #221	; 0xdd
   27624:	cmpne	r0, #226	; 0xe2
   27628:	bne	276c0 <myhtml_rules_tree_dispatcher@@Base+0x17c>
   2762c:	ldr	r0, [r6, #4]
   27630:	cmp	r0, #8
   27634:	bne	2765c <myhtml_rules_tree_dispatcher@@Base+0x118>
   27638:	ldr	r0, [r6, #8]
   2763c:	cmp	r0, #2
   27640:	bne	2765c <myhtml_rules_tree_dispatcher@@Base+0x118>
   27644:	ldr	r0, [r4]
   27648:	cmp	r0, #124	; 0x7c
   2764c:	bne	2765c <myhtml_rules_tree_dispatcher@@Base+0x118>
   27650:	ldr	r0, [r4, #48]	; 0x30
   27654:	tst	r0, #1
   27658:	beq	276cc <myhtml_rules_tree_dispatcher@@Base+0x188>
   2765c:	mov	r0, r5
   27660:	mov	r1, r6
   27664:	bl	11228 <myhtml_tree_is_html_integration_point@plt>
   27668:	cmp	r0, #0
   2766c:	beq	27694 <myhtml_rules_tree_dispatcher@@Base+0x150>
   27670:	ldr	r0, [r4, #48]	; 0x30
   27674:	tst	r0, #1
   27678:	beq	276cc <myhtml_rules_tree_dispatcher@@Base+0x188>
   2767c:	ldr	r0, [r4]
   27680:	cmp	r0, #1
   27684:	beq	276cc <myhtml_rules_tree_dispatcher@@Base+0x188>
   27688:	cmp	r0, #251	; 0xfb
   2768c:	bne	276a0 <myhtml_rules_tree_dispatcher@@Base+0x15c>
   27690:	b	276cc <myhtml_rules_tree_dispatcher@@Base+0x188>
   27694:	ldr	r0, [r4]
   27698:	cmp	r0, #251	; 0xfb
   2769c:	beq	276cc <myhtml_rules_tree_dispatcher@@Base+0x188>
   276a0:	mov	r0, r5
   276a4:	mov	r1, r4
   276a8:	bl	10f58 <myhtml_insertion_mode_in_foreign_content@plt>
   276ac:	mov	r1, r0
   276b0:	mov	r0, #1
   276b4:	cmp	r1, #0
   276b8:	beq	276f8 <myhtml_rules_tree_dispatcher@@Base+0x1b4>
   276bc:	pop	{r4, r5, r6, sl, fp, pc}
   276c0:	ldr	r0, [r4, #48]	; 0x30
   276c4:	tst	r0, #1
   276c8:	bne	2762c <myhtml_rules_tree_dispatcher@@Base+0xe8>
   276cc:	ldr	r0, [r5]
   276d0:	ldr	r1, [r5, #168]	; 0xa8
   276d4:	ldr	r0, [r0, #28]
   276d8:	ldr	r2, [r0, r1, lsl #2]
   276dc:	mov	r0, r5
   276e0:	mov	r1, r4
   276e4:	blx	r2
   276e8:	mov	r1, r0
   276ec:	mov	r0, #1
   276f0:	cmp	r1, #0
   276f4:	bne	276bc <myhtml_rules_tree_dispatcher@@Base+0x178>
   276f8:	mov	r0, #0
   276fc:	str	r4, [r5, #152]	; 0x98
   27700:	pop	{r4, r5, r6, sl, fp, pc}
   27704:	ldr	r0, [r5, #180]	; 0xb4
   27708:	ldr	r1, [r5, #180]	; 0xb4
   2770c:	and	r0, r0, #64	; 0x40
   27710:	eor	r0, r1, r0
   27714:	str	r0, [r5, #180]	; 0xb4
   27718:	mov	r0, #0
   2771c:	str	r4, [r5, #152]	; 0x98
   27720:	pop	{r4, r5, r6, sl, fp, pc}

00027724 <myhtml_rules_init@@Base>:
   27724:	push	{r4, sl, fp, lr}
   27728:	add	fp, sp, #8
   2772c:	mov	r4, r0
   27730:	mov	r0, #92	; 0x5c
   27734:	bl	119a8 <mycore_malloc@plt>
   27738:	str	r0, [r4, #28]!
   2773c:	cmp	r0, #0
   27740:	beq	278b8 <myhtml_rules_init@@Base+0x194>
   27744:	ldr	r1, [pc, #372]	; 278c0 <myhtml_rules_init@@Base+0x19c>
   27748:	ldr	r1, [pc, r1]
   2774c:	str	r1, [r0]
   27750:	ldr	r0, [r4]
   27754:	ldr	r1, [pc, #360]	; 278c4 <myhtml_rules_init@@Base+0x1a0>
   27758:	ldr	r1, [pc, r1]
   2775c:	str	r1, [r0, #4]
   27760:	ldr	r0, [r4]
   27764:	ldr	r1, [pc, #348]	; 278c8 <myhtml_rules_init@@Base+0x1a4>
   27768:	ldr	r1, [pc, r1]
   2776c:	str	r1, [r0, #8]
   27770:	ldr	r0, [r4]
   27774:	ldr	r1, [pc, #336]	; 278cc <myhtml_rules_init@@Base+0x1a8>
   27778:	ldr	r1, [pc, r1]
   2777c:	str	r1, [r0, #12]
   27780:	ldr	r0, [r4]
   27784:	ldr	r1, [pc, #324]	; 278d0 <myhtml_rules_init@@Base+0x1ac>
   27788:	ldr	r1, [pc, r1]
   2778c:	str	r1, [r0, #16]
   27790:	ldr	r0, [r4]
   27794:	ldr	r1, [pc, #312]	; 278d4 <myhtml_rules_init@@Base+0x1b0>
   27798:	ldr	r1, [pc, r1]
   2779c:	str	r1, [r0, #20]
   277a0:	ldr	r0, [r4]
   277a4:	ldr	r1, [pc, #300]	; 278d8 <myhtml_rules_init@@Base+0x1b4>
   277a8:	ldr	r1, [pc, r1]
   277ac:	str	r1, [r0, #24]
   277b0:	ldr	r0, [r4]
   277b4:	ldr	r1, [pc, #288]	; 278dc <myhtml_rules_init@@Base+0x1b8>
   277b8:	ldr	r1, [pc, r1]
   277bc:	str	r1, [r0, #28]
   277c0:	ldr	r0, [r4]
   277c4:	ldr	r1, [pc, #276]	; 278e0 <myhtml_rules_init@@Base+0x1bc>
   277c8:	ldr	r1, [pc, r1]
   277cc:	str	r1, [r0, #32]
   277d0:	ldr	r0, [r4]
   277d4:	ldr	r1, [pc, #264]	; 278e4 <myhtml_rules_init@@Base+0x1c0>
   277d8:	ldr	r1, [pc, r1]
   277dc:	str	r1, [r0, #36]	; 0x24
   277e0:	ldr	r0, [r4]
   277e4:	ldr	r1, [pc, #252]	; 278e8 <myhtml_rules_init@@Base+0x1c4>
   277e8:	ldr	r1, [pc, r1]
   277ec:	str	r1, [r0, #40]	; 0x28
   277f0:	ldr	r0, [r4]
   277f4:	ldr	r1, [pc, #240]	; 278ec <myhtml_rules_init@@Base+0x1c8>
   277f8:	ldr	r1, [pc, r1]
   277fc:	str	r1, [r0, #44]	; 0x2c
   27800:	ldr	r0, [r4]
   27804:	ldr	r1, [pc, #228]	; 278f0 <myhtml_rules_init@@Base+0x1cc>
   27808:	ldr	r1, [pc, r1]
   2780c:	str	r1, [r0, #48]	; 0x30
   27810:	ldr	r0, [r4]
   27814:	ldr	r1, [pc, #216]	; 278f4 <myhtml_rules_init@@Base+0x1d0>
   27818:	ldr	r1, [pc, r1]
   2781c:	str	r1, [r0, #52]	; 0x34
   27820:	ldr	r0, [r4]
   27824:	ldr	r1, [pc, #204]	; 278f8 <myhtml_rules_init@@Base+0x1d4>
   27828:	ldr	r1, [pc, r1]
   2782c:	str	r1, [r0, #56]	; 0x38
   27830:	ldr	r0, [r4]
   27834:	ldr	r1, [pc, #192]	; 278fc <myhtml_rules_init@@Base+0x1d8>
   27838:	ldr	r1, [pc, r1]
   2783c:	str	r1, [r0, #60]	; 0x3c
   27840:	ldr	r0, [r4]
   27844:	ldr	r1, [pc, #180]	; 27900 <myhtml_rules_init@@Base+0x1dc>
   27848:	ldr	r1, [pc, r1]
   2784c:	str	r1, [r0, #64]	; 0x40
   27850:	ldr	r0, [r4]
   27854:	ldr	r1, [pc, #168]	; 27904 <myhtml_rules_init@@Base+0x1e0>
   27858:	ldr	r1, [pc, r1]
   2785c:	str	r1, [r0, #68]	; 0x44
   27860:	ldr	r0, [r4]
   27864:	ldr	r1, [pc, #156]	; 27908 <myhtml_rules_init@@Base+0x1e4>
   27868:	ldr	r1, [pc, r1]
   2786c:	str	r1, [r0, #72]	; 0x48
   27870:	ldr	r0, [r4]
   27874:	ldr	r1, [pc, #144]	; 2790c <myhtml_rules_init@@Base+0x1e8>
   27878:	ldr	r1, [pc, r1]
   2787c:	str	r1, [r0, #76]	; 0x4c
   27880:	ldr	r0, [r4]
   27884:	ldr	r1, [pc, #132]	; 27910 <myhtml_rules_init@@Base+0x1ec>
   27888:	ldr	r1, [pc, r1]
   2788c:	str	r1, [r0, #80]	; 0x50
   27890:	ldr	r0, [r4]
   27894:	ldr	r1, [pc, #120]	; 27914 <myhtml_rules_init@@Base+0x1f0>
   27898:	ldr	r1, [pc, r1]
   2789c:	str	r1, [r0, #84]	; 0x54
   278a0:	ldr	r0, [r4]
   278a4:	ldr	r1, [pc, #108]	; 27918 <myhtml_rules_init@@Base+0x1f4>
   278a8:	ldr	r1, [pc, r1]
   278ac:	str	r1, [r0, #88]	; 0x58
   278b0:	mov	r0, #0
   278b4:	pop	{r4, sl, fp, pc}
   278b8:	movw	r0, #36964	; 0x9064
   278bc:	pop	{r4, sl, fp, pc}
   278c0:	andeq	r5, pc, r8, ror #29
   278c4:	andeq	r6, pc, r4
   278c8:	andeq	r6, pc, r0
   278cc:	andeq	r5, pc, ip, lsr lr	; <UNPREDICTABLE>
   278d0:	andeq	r5, pc, r0, lsl #31
   278d4:	muleq	pc, ip, pc	; <UNPREDICTABLE>
   278d8:	strdeq	r5, [pc], -r8
   278dc:	andeq	r5, pc, r0, asr lr	; <UNPREDICTABLE>
   278e0:	andeq	r5, pc, ip, lsl lr	; <UNPREDICTABLE>
   278e4:	andeq	r5, pc, r4, lsl pc	; <UNPREDICTABLE>
   278e8:	andeq	r5, pc, r4, asr #30
   278ec:	andeq	r5, pc, r4, lsr #30
   278f0:	andeq	r5, pc, ip, lsl pc	; <UNPREDICTABLE>
   278f4:	muleq	pc, r8, sp	; <UNPREDICTABLE>
   278f8:	andeq	r5, pc, r4, lsl #31
   278fc:	andeq	r5, pc, r8, lsl #28
   27900:	andeq	r5, pc, ip, asr lr	; <UNPREDICTABLE>
   27904:	andeq	r5, pc, r0, lsl sp	; <UNPREDICTABLE>
   27908:	andeq	r5, pc, ip, ror #30
   2790c:	andeq	r5, pc, r0, lsl #30
   27910:	andeq	r5, pc, r4, lsr #25
   27914:	muleq	pc, r0, ip	; <UNPREDICTABLE>
   27918:	andeq	r5, pc, r0, lsl #27

0002791c <myhtml_serialization@@Base>:
   2791c:	push	{r4, r5, r6, sl, fp, lr}
   27920:	add	fp, sp, #16
   27924:	cmp	r1, #0
   27928:	beq	27978 <myhtml_serialization@@Base+0x5c>
   2792c:	mov	r5, r0
   27930:	ldr	r0, [r1]
   27934:	mov	r4, r1
   27938:	cmp	r0, #0
   2793c:	bne	27960 <myhtml_serialization@@Base+0x44>
   27940:	movw	r0, #20490	; 0x500a
   27944:	mov	r6, #0
   27948:	stmib	r4, {r0, r6}
   2794c:	movw	r0, #20490	; 0x500a
   27950:	bl	119a8 <mycore_malloc@plt>
   27954:	cmp	r0, #0
   27958:	str	r0, [r4]
   2795c:	beq	27980 <myhtml_serialization@@Base+0x64>
   27960:	ldr	r1, [pc, #36]	; 2798c <myhtml_serialization@@Base+0x70>
   27964:	mov	r0, r5
   27968:	mov	r2, r4
   2796c:	ldr	r1, [pc, r1]
   27970:	pop	{r4, r5, r6, sl, fp, lr}
   27974:	b	27adc <myhtml_serialization_tree_callback@@Base>
   27978:	mov	r0, #0
   2797c:	pop	{r4, r5, r6, sl, fp, pc}
   27980:	mov	r0, #2
   27984:	str	r6, [r4, #4]
   27988:	pop	{r4, r5, r6, sl, fp, pc}
   2798c:	andeq	r5, pc, r4, asr #26

00027990 <myhtml_serialization_tree_buffer@@Base>:
   27990:	push	{r4, r5, r6, sl, fp, lr}
   27994:	add	fp, sp, #16
   27998:	cmp	r1, #0
   2799c:	beq	279ec <myhtml_serialization_tree_buffer@@Base+0x5c>
   279a0:	mov	r5, r0
   279a4:	ldr	r0, [r1]
   279a8:	mov	r4, r1
   279ac:	cmp	r0, #0
   279b0:	bne	279d4 <myhtml_serialization_tree_buffer@@Base+0x44>
   279b4:	movw	r0, #20490	; 0x500a
   279b8:	mov	r6, #0
   279bc:	stmib	r4, {r0, r6}
   279c0:	movw	r0, #20490	; 0x500a
   279c4:	bl	119a8 <mycore_malloc@plt>
   279c8:	cmp	r0, #0
   279cc:	str	r0, [r4]
   279d0:	beq	279f4 <myhtml_serialization_tree_buffer@@Base+0x64>
   279d4:	ldr	r1, [pc, #36]	; 27a00 <myhtml_serialization_tree_buffer@@Base+0x70>
   279d8:	mov	r0, r5
   279dc:	mov	r2, r4
   279e0:	ldr	r1, [pc, r1]
   279e4:	pop	{r4, r5, r6, sl, fp, lr}
   279e8:	b	27adc <myhtml_serialization_tree_callback@@Base>
   279ec:	mov	r0, #0
   279f0:	pop	{r4, r5, r6, sl, fp, pc}
   279f4:	mov	r0, #2
   279f8:	str	r6, [r4, #4]
   279fc:	pop	{r4, r5, r6, sl, fp, pc}
   27a00:	ldrdeq	r5, [pc], -r0

00027a04 <myhtml_serialization_node@@Base>:
   27a04:	push	{r4, r5, r6, sl, fp, lr}
   27a08:	add	fp, sp, #16
   27a0c:	cmp	r1, #0
   27a10:	beq	27a64 <myhtml_serialization_node@@Base+0x60>
   27a14:	mov	r5, r0
   27a18:	ldr	r0, [r1]
   27a1c:	mov	r4, r1
   27a20:	cmp	r0, #0
   27a24:	bne	27a48 <myhtml_serialization_node@@Base+0x44>
   27a28:	mov	r0, #2048	; 0x800
   27a2c:	mov	r6, #0
   27a30:	stmib	r4, {r0, r6}
   27a34:	mov	r0, #2048	; 0x800
   27a38:	bl	119a8 <mycore_malloc@plt>
   27a3c:	cmp	r0, #0
   27a40:	str	r0, [r4]
   27a44:	beq	27a60 <myhtml_serialization_node@@Base+0x5c>
   27a48:	ldr	r1, [pc, #28]	; 27a6c <myhtml_serialization_node@@Base+0x68>
   27a4c:	mov	r0, r5
   27a50:	mov	r2, r4
   27a54:	ldr	r1, [pc, r1]
   27a58:	pop	{r4, r5, r6, sl, fp, lr}
   27a5c:	b	27be8 <myhtml_serialization_node_callback@@Base>
   27a60:	str	r6, [r4, #4]
   27a64:	mov	r0, #0
   27a68:	pop	{r4, r5, r6, sl, fp, pc}
   27a6c:	andeq	r5, pc, ip, asr ip	; <UNPREDICTABLE>

00027a70 <myhtml_serialization_node_buffer@@Base>:
   27a70:	push	{r4, r5, r6, sl, fp, lr}
   27a74:	add	fp, sp, #16
   27a78:	cmp	r1, #0
   27a7c:	beq	27ad0 <myhtml_serialization_node_buffer@@Base+0x60>
   27a80:	mov	r5, r0
   27a84:	ldr	r0, [r1]
   27a88:	mov	r4, r1
   27a8c:	cmp	r0, #0
   27a90:	bne	27ab4 <myhtml_serialization_node_buffer@@Base+0x44>
   27a94:	mov	r0, #2048	; 0x800
   27a98:	mov	r6, #0
   27a9c:	stmib	r4, {r0, r6}
   27aa0:	mov	r0, #2048	; 0x800
   27aa4:	bl	119a8 <mycore_malloc@plt>
   27aa8:	cmp	r0, #0
   27aac:	str	r0, [r4]
   27ab0:	beq	27acc <myhtml_serialization_node_buffer@@Base+0x5c>
   27ab4:	ldr	r1, [pc, #28]	; 27ad8 <myhtml_serialization_node_buffer@@Base+0x68>
   27ab8:	mov	r0, r5
   27abc:	mov	r2, r4
   27ac0:	ldr	r1, [pc, r1]
   27ac4:	pop	{r4, r5, r6, sl, fp, lr}
   27ac8:	b	27be8 <myhtml_serialization_node_callback@@Base>
   27acc:	str	r6, [r4, #4]
   27ad0:	mov	r0, #0
   27ad4:	pop	{r4, r5, r6, sl, fp, pc}
   27ad8:	strdeq	r5, [pc], -r0

00027adc <myhtml_serialization_tree_callback@@Base>:
   27adc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27ae0:	add	fp, sp, #24
   27ae4:	cmp	r0, #0
   27ae8:	beq	27bdc <myhtml_serialization_tree_callback@@Base+0x100>
   27aec:	mov	r7, r0
   27af0:	ldr	r0, [r0, #40]	; 0x28
   27af4:	mov	r9, r2
   27af8:	mov	r5, r1
   27afc:	mov	r6, r7
   27b00:	cmp	r0, #0
   27b04:	beq	27b24 <myhtml_serialization_tree_callback@@Base+0x48>
   27b08:	ldr	r0, [r0, #84]	; 0x54
   27b0c:	mov	r6, r7
   27b10:	cmp	r0, r7
   27b14:	bne	27b24 <myhtml_serialization_tree_callback@@Base+0x48>
   27b18:	ldr	r6, [r7, #20]
   27b1c:	cmp	r6, #0
   27b20:	beq	27bdc <myhtml_serialization_tree_callback@@Base+0x100>
   27b24:	mov	r8, #2
   27b28:	mov	r0, r6
   27b2c:	mov	r1, r5
   27b30:	mov	r2, r9
   27b34:	bl	115b8 <myhtml_serialization_node_callback@plt>
   27b38:	cmp	r0, #0
   27b3c:	bne	27bd4 <myhtml_serialization_tree_callback@@Base+0xf8>
   27b40:	ldr	r0, [r6, #20]
   27b44:	cmp	r0, #0
   27b48:	beq	27b60 <myhtml_serialization_tree_callback@@Base+0x84>
   27b4c:	cmp	r0, #0
   27b50:	mov	r6, r0
   27b54:	bne	27b28 <myhtml_serialization_tree_callback@@Base+0x4c>
   27b58:	b	27bdc <myhtml_serialization_tree_callback@@Base+0x100>
   27b5c:	ldr	r6, [r6, #24]
   27b60:	cmp	r6, r7
   27b64:	beq	27bac <myhtml_serialization_tree_callback@@Base+0xd0>
   27b68:	ldr	r4, [r6, #16]
   27b6c:	mov	r0, r6
   27b70:	mov	r1, r5
   27b74:	mov	r2, r9
   27b78:	bl	28354 <myhtml_serialization_node_callback@@Base+0x76c>
   27b7c:	cmp	r4, #0
   27b80:	bne	27b90 <myhtml_serialization_tree_callback@@Base+0xb4>
   27b84:	cmp	r0, #0
   27b88:	beq	27b5c <myhtml_serialization_tree_callback@@Base+0x80>
   27b8c:	b	27bd4 <myhtml_serialization_tree_callback@@Base+0xf8>
   27b90:	cmp	r0, #0
   27b94:	bne	27bd4 <myhtml_serialization_tree_callback@@Base+0xf8>
   27b98:	ldr	r0, [r6, #16]
   27b9c:	cmp	r0, #0
   27ba0:	mov	r6, r0
   27ba4:	bne	27b28 <myhtml_serialization_tree_callback@@Base+0x4c>
   27ba8:	b	27bdc <myhtml_serialization_tree_callback@@Base+0x100>
   27bac:	ldr	r0, [r7, #40]	; 0x28
   27bb0:	ldr	r0, [r0, #84]	; 0x54
   27bb4:	cmp	r0, r7
   27bb8:	beq	27bdc <myhtml_serialization_tree_callback@@Base+0x100>
   27bbc:	mov	r0, r7
   27bc0:	mov	r1, r5
   27bc4:	mov	r2, r9
   27bc8:	bl	28354 <myhtml_serialization_node_callback@@Base+0x76c>
   27bcc:	cmp	r0, #0
   27bd0:	moveq	r8, #0
   27bd4:	mov	r0, r8
   27bd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27bdc:	mov	r8, #0
   27be0:	mov	r0, r8
   27be4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027be8 <myhtml_serialization_node_callback@@Base>:
   27be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27bec:	add	fp, sp, #28
   27bf0:	sub	sp, sp, #12
   27bf4:	mov	r4, r1
   27bf8:	ldr	r1, [r0, #4]
   27bfc:	mov	r5, r2
   27c00:	mov	r7, r0
   27c04:	cmp	r1, #3
   27c08:	beq	27d38 <myhtml_serialization_node_callback@@Base+0x150>
   27c0c:	cmp	r1, #2
   27c10:	beq	27e70 <myhtml_serialization_node_callback@@Base+0x288>
   27c14:	cmp	r1, #1
   27c18:	bne	27edc <myhtml_serialization_node_callback@@Base+0x2f4>
   27c1c:	ldr	r1, [r7, #32]
   27c20:	cmp	r1, #0
   27c24:	beq	281f4 <myhtml_serialization_node_callback@@Base+0x60c>
   27c28:	ldr	r0, [r1, #4]
   27c2c:	cmp	r0, #0
   27c30:	beq	281f4 <myhtml_serialization_node_callback@@Base+0x60c>
   27c34:	ldr	r2, [r7, #24]
   27c38:	cmp	r2, #0
   27c3c:	beq	281d8 <myhtml_serialization_node_callback@@Base+0x5f0>
   27c40:	ldr	r2, [r2, #4]
   27c44:	sub	r3, r2, #91	; 0x5b
   27c48:	cmp	r3, #52	; 0x34
   27c4c:	bhi	281d0 <myhtml_serialization_node_callback@@Base+0x5e8>
   27c50:	add	r2, pc, #4
   27c54:	ldr	r3, [r2, r3, lsl #2]
   27c58:	add	pc, r2, r3
   27c5c:	ldrdeq	r0, [r0], -r4
   27c60:	ldrdeq	r0, [r0], -r4
   27c64:	andeq	r0, r0, ip, ror r5
   27c68:	andeq	r0, r0, ip, ror r5
   27c6c:	andeq	r0, r0, ip, ror r5
   27c70:	andeq	r0, r0, ip, ror r5
   27c74:	andeq	r0, r0, ip, ror r5
   27c78:	andeq	r0, r0, ip, ror r5
   27c7c:	andeq	r0, r0, ip, ror r5
   27c80:	andeq	r0, r0, ip, ror r5
   27c84:	ldrdeq	r0, [r0], -r4
   27c88:	andeq	r0, r0, ip, ror r5
   27c8c:	andeq	r0, r0, ip, ror r5
   27c90:	andeq	r0, r0, ip, ror r5
   27c94:	andeq	r0, r0, ip, ror r5
   27c98:	andeq	r0, r0, ip, ror r5
   27c9c:	andeq	r0, r0, ip, ror r5
   27ca0:	andeq	r0, r0, ip, ror r5
   27ca4:	andeq	r0, r0, ip, ror r5
   27ca8:	andeq	r0, r0, ip, ror r5
   27cac:	andeq	r0, r0, ip, ror r5
   27cb0:	ldrdeq	r0, [r0], -r4
   27cb4:	andeq	r0, r0, ip, ror r5
   27cb8:	andeq	r0, r0, ip, ror r5
   27cbc:	andeq	r0, r0, ip, ror r5
   27cc0:	andeq	r0, r0, ip, ror r5
   27cc4:	andeq	r0, r0, ip, ror r5
   27cc8:	andeq	r0, r0, ip, ror r5
   27ccc:	andeq	r0, r0, ip, ror r5
   27cd0:	ldrdeq	r0, [r0], -r4
   27cd4:	andeq	r0, r0, ip, ror r5
   27cd8:	andeq	r0, r0, ip, ror r5
   27cdc:	andeq	r0, r0, ip, ror r5
   27ce0:	andeq	r0, r0, ip, ror r5
   27ce4:	andeq	r0, r0, ip, ror r5
   27ce8:	andeq	r0, r0, ip, ror r5
   27cec:	andeq	r0, r0, ip, ror r5
   27cf0:	andeq	r0, r0, ip, ror r5
   27cf4:	andeq	r0, r0, ip, ror r5
   27cf8:	andeq	r0, r0, ip, ror r5
   27cfc:	andeq	r0, r0, ip, ror r5
   27d00:	andeq	r0, r0, ip, ror r5
   27d04:	andeq	r0, r0, ip, ror r5
   27d08:	andeq	r0, r0, ip, ror r5
   27d0c:	andeq	r0, r0, ip, ror r5
   27d10:	andeq	r0, r0, ip, ror r5
   27d14:	andeq	r0, r0, ip, ror r5
   27d18:	andeq	r0, r0, ip, ror r5
   27d1c:	andeq	r0, r0, ip, ror r5
   27d20:	andeq	r0, r0, ip, ror r5
   27d24:	andeq	r0, r0, ip, ror r5
   27d28:	andeq	r0, r0, ip, ror r5
   27d2c:	ldrdeq	r0, [r0], -r4
   27d30:	ldr	r1, [r1, #12]
   27d34:	b	281b8 <myhtml_serialization_node_callback@@Base+0x5d0>
   27d38:	ldr	r0, [pc, #1468]	; 282fc <myhtml_serialization_node_callback@@Base+0x714>
   27d3c:	mov	r1, #9
   27d40:	mov	r2, r5
   27d44:	add	r0, pc, r0
   27d48:	blx	r4
   27d4c:	mov	r6, #2
   27d50:	cmp	r0, #0
   27d54:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27d58:	ldr	r0, [pc, #1440]	; 28300 <myhtml_serialization_node_callback@@Base+0x718>
   27d5c:	mov	r1, #1
   27d60:	mov	r2, r5
   27d64:	add	r0, pc, r0
   27d68:	blx	r4
   27d6c:	cmp	r0, #0
   27d70:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27d74:	ldr	r0, [r7, #32]
   27d78:	cmp	r0, #0
   27d7c:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27d80:	ldr	r7, [r0, #40]	; 0x28
   27d84:	cmp	r7, #0
   27d88:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27d8c:	ldr	r0, [r7, #8]
   27d90:	cmp	r0, #0
   27d94:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27d98:	ldr	r1, [r7, #16]
   27d9c:	cmp	r1, #0
   27da0:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27da4:	mov	r2, r5
   27da8:	blx	r4
   27dac:	cmp	r0, #0
   27db0:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27db4:	ldr	r7, [r7]
   27db8:	cmp	r7, #0
   27dbc:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27dc0:	ldr	r0, [r7, #36]	; 0x24
   27dc4:	cmp	r0, #6
   27dc8:	bne	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27dcc:	ldr	r0, [r7, #28]
   27dd0:	ldr	r1, [pc, #1324]	; 28304 <myhtml_serialization_node_callback@@Base+0x71c>
   27dd4:	add	r1, pc, r1
   27dd8:	bl	11468 <mycore_strcasecmp@plt>
   27ddc:	cmp	r0, #0
   27de0:	beq	28204 <myhtml_serialization_node_callback@@Base+0x61c>
   27de4:	ldr	r0, [r7, #28]
   27de8:	ldr	r1, [pc, #1304]	; 28308 <myhtml_serialization_node_callback@@Base+0x720>
   27dec:	add	r1, pc, r1
   27df0:	bl	11468 <mycore_strcasecmp@plt>
   27df4:	cmp	r0, #0
   27df8:	bne	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27dfc:	ldr	r7, [r7]
   27e00:	cmp	r7, #0
   27e04:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   27e08:	ldr	r0, [r7, #36]	; 0x24
   27e0c:	ldr	r8, [r7]
   27e10:	cmp	r0, #0
   27e14:	beq	282bc <myhtml_serialization_node_callback@@Base+0x6d4>
   27e18:	ldr	r0, [pc, #1260]	; 2830c <myhtml_serialization_node_callback@@Base+0x724>
   27e1c:	mov	r1, #9
   27e20:	mov	r2, r5
   27e24:	add	r0, pc, r0
   27e28:	blx	r4
   27e2c:	cmp	r0, #0
   27e30:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27e34:	ldr	r0, [r7, #28]
   27e38:	ldr	r1, [r7, #36]	; 0x24
   27e3c:	mov	r2, r5
   27e40:	blx	r4
   27e44:	cmp	r0, #0
   27e48:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27e4c:	ldr	r0, [pc, #1212]	; 28310 <myhtml_serialization_node_callback@@Base+0x728>
   27e50:	mov	r1, #1
   27e54:	mov	r2, r5
   27e58:	mov	r9, #1
   27e5c:	add	r0, pc, r0
   27e60:	blx	r4
   27e64:	cmp	r0, #0
   27e68:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27e6c:	b	28210 <myhtml_serialization_node_callback@@Base+0x628>
   27e70:	ldr	r0, [pc, #1148]	; 282f4 <myhtml_serialization_node_callback@@Base+0x70c>
   27e74:	mov	r1, #4
   27e78:	mov	r2, r5
   27e7c:	add	r0, pc, r0
   27e80:	blx	r4
   27e84:	mov	r6, #2
   27e88:	cmp	r0, #0
   27e8c:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27e90:	ldr	r1, [r7, #32]
   27e94:	cmp	r1, #0
   27e98:	beq	27ebc <myhtml_serialization_node_callback@@Base+0x2d4>
   27e9c:	ldr	r0, [r1, #4]
   27ea0:	cmp	r0, #0
   27ea4:	beq	27ebc <myhtml_serialization_node_callback@@Base+0x2d4>
   27ea8:	ldr	r1, [r1, #12]
   27eac:	mov	r2, r5
   27eb0:	blx	r4
   27eb4:	cmp	r0, #0
   27eb8:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27ebc:	ldr	r0, [pc, #1076]	; 282f8 <myhtml_serialization_node_callback@@Base+0x710>
   27ec0:	mov	r1, #3
   27ec4:	mov	r2, r5
   27ec8:	add	r0, pc, r0
   27ecc:	blx	r4
   27ed0:	cmp	r0, #0
   27ed4:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   27ed8:	b	281f4 <myhtml_serialization_node_callback@@Base+0x60c>
   27edc:	ldr	r0, [r7, #40]	; 0x28
   27ee0:	add	r2, sp, #4
   27ee4:	bl	11888 <myhtml_tag_name_by_id@plt>
   27ee8:	mov	r6, r0
   27eec:	ldr	r0, [pc, #1072]	; 28324 <myhtml_serialization_node_callback@@Base+0x73c>
   27ef0:	mov	r1, #1
   27ef4:	mov	r2, r5
   27ef8:	add	r0, pc, r0
   27efc:	blx	r4
   27f00:	cmp	r0, #0
   27f04:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   27f08:	ldr	r1, [sp, #4]
   27f0c:	mov	r0, r6
   27f10:	mov	r2, r5
   27f14:	blx	r4
   27f18:	cmp	r0, #0
   27f1c:	beq	27f30 <myhtml_serialization_node_callback@@Base+0x348>
   27f20:	mov	r6, #2
   27f24:	mov	r0, r6
   27f28:	sub	sp, fp, #28
   27f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f30:	ldr	r0, [r7, #32]
   27f34:	cmp	r0, #0
   27f38:	beq	281ac <myhtml_serialization_node_callback@@Base+0x5c4>
   27f3c:	ldr	r6, [r0, #40]	; 0x28
   27f40:	cmp	r6, #0
   27f44:	beq	281ac <myhtml_serialization_node_callback@@Base+0x5c4>
   27f48:	add	r7, sp, #8
   27f4c:	ldr	r0, [pc, #980]	; 28328 <myhtml_serialization_node_callback@@Base+0x740>
   27f50:	mov	r1, #1
   27f54:	mov	r2, r5
   27f58:	add	r0, pc, r0
   27f5c:	blx	r4
   27f60:	cmp	r0, #0
   27f64:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   27f68:	ldr	r0, [r6, #64]	; 0x40
   27f6c:	cmp	r0, #4
   27f70:	beq	27fa4 <myhtml_serialization_node_callback@@Base+0x3bc>
   27f74:	cmp	r0, #6
   27f78:	beq	27fc4 <myhtml_serialization_node_callback@@Base+0x3dc>
   27f7c:	cmp	r0, #5
   27f80:	bne	27ffc <myhtml_serialization_node_callback@@Base+0x414>
   27f84:	ldr	r0, [pc, #928]	; 2832c <myhtml_serialization_node_callback@@Base+0x744>
   27f88:	mov	r1, #4
   27f8c:	add	r0, pc, r0
   27f90:	mov	r2, r5
   27f94:	blx	r4
   27f98:	cmp	r0, #0
   27f9c:	beq	27ffc <myhtml_serialization_node_callback@@Base+0x414>
   27fa0:	b	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   27fa4:	ldr	r0, [pc, #908]	; 28338 <myhtml_serialization_node_callback@@Base+0x750>
   27fa8:	add	r0, pc, r0
   27fac:	mov	r1, #6
   27fb0:	mov	r2, r5
   27fb4:	blx	r4
   27fb8:	cmp	r0, #0
   27fbc:	beq	27ffc <myhtml_serialization_node_callback@@Base+0x414>
   27fc0:	b	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   27fc4:	ldr	r0, [r6, #8]
   27fc8:	cmp	r0, #0
   27fcc:	beq	27ffc <myhtml_serialization_node_callback@@Base+0x414>
   27fd0:	ldr	r1, [r6, #16]
   27fd4:	cmp	r1, #5
   27fd8:	bne	27ffc <myhtml_serialization_node_callback@@Base+0x414>
   27fdc:	ldr	r1, [pc, #844]	; 28330 <myhtml_serialization_node_callback@@Base+0x748>
   27fe0:	add	r1, pc, r1
   27fe4:	bl	10db4 <mycore_strcmp@plt>
   27fe8:	cmp	r0, #0
   27fec:	beq	27ffc <myhtml_serialization_node_callback@@Base+0x414>
   27ff0:	ldr	r0, [pc, #828]	; 28334 <myhtml_serialization_node_callback@@Base+0x74c>
   27ff4:	add	r0, pc, r0
   27ff8:	b	27fac <myhtml_serialization_node_callback@@Base+0x3c4>
   27ffc:	mov	r0, r6
   28000:	mov	r1, r7
   28004:	bl	118a0 <myhtml_attribute_key@plt>
   28008:	cmp	r0, #0
   2800c:	beq	28024 <myhtml_serialization_node_callback@@Base+0x43c>
   28010:	ldr	r1, [sp, #8]
   28014:	mov	r2, r5
   28018:	blx	r4
   2801c:	cmp	r0, #0
   28020:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   28024:	ldr	r0, [pc, #784]	; 2833c <myhtml_serialization_node_callback@@Base+0x754>
   28028:	mov	r1, #2
   2802c:	mov	r2, r5
   28030:	add	r0, pc, r0
   28034:	blx	r4
   28038:	cmp	r0, #0
   2803c:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   28040:	mov	r0, r6
   28044:	mov	r1, r7
   28048:	bl	113e4 <myhtml_attribute_value@plt>
   2804c:	cmp	r0, #0
   28050:	beq	28184 <myhtml_serialization_node_callback@@Base+0x59c>
   28054:	ldr	r8, [sp, #8]
   28058:	cmp	r8, #0
   2805c:	beq	28184 <myhtml_serialization_node_callback@@Base+0x59c>
   28060:	mov	r9, r0
   28064:	mov	sl, #0
   28068:	mov	r1, #0
   2806c:	ldrb	r0, [r9, sl]
   28070:	cmp	r0, #34	; 0x22
   28074:	bne	28098 <myhtml_serialization_node_callback@@Base+0x4b0>
   28078:	b	280d8 <myhtml_serialization_node_callback@@Base+0x4f0>
   2807c:	add	r1, r1, #1
   28080:	add	sl, sl, #1
   28084:	cmp	r8, sl
   28088:	beq	28164 <myhtml_serialization_node_callback@@Base+0x57c>
   2808c:	ldrb	r0, [r9, sl]
   28090:	cmp	r0, #34	; 0x22
   28094:	beq	280d8 <myhtml_serialization_node_callback@@Base+0x4f0>
   28098:	cmp	r0, #160	; 0xa0
   2809c:	beq	28104 <myhtml_serialization_node_callback@@Base+0x51c>
   280a0:	cmp	r0, #38	; 0x26
   280a4:	bne	2807c <myhtml_serialization_node_callback@@Base+0x494>
   280a8:	cmp	r1, #0
   280ac:	beq	280c8 <myhtml_serialization_node_callback@@Base+0x4e0>
   280b0:	sub	r0, sl, r1
   280b4:	mov	r2, r5
   280b8:	add	r0, r9, r0
   280bc:	blx	r4
   280c0:	cmp	r0, #0
   280c4:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   280c8:	ldr	r0, [pc, #624]	; 28340 <myhtml_serialization_node_callback@@Base+0x758>
   280cc:	mov	r1, #5
   280d0:	add	r0, pc, r0
   280d4:	b	2814c <myhtml_serialization_node_callback@@Base+0x564>
   280d8:	cmp	r1, #0
   280dc:	beq	280f8 <myhtml_serialization_node_callback@@Base+0x510>
   280e0:	sub	r0, sl, r1
   280e4:	mov	r2, r5
   280e8:	add	r0, r9, r0
   280ec:	blx	r4
   280f0:	cmp	r0, #0
   280f4:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   280f8:	ldr	r0, [pc, #580]	; 28344 <myhtml_serialization_node_callback@@Base+0x75c>
   280fc:	add	r0, pc, r0
   28100:	b	28148 <myhtml_serialization_node_callback@@Base+0x560>
   28104:	cmp	sl, #0
   28108:	beq	2807c <myhtml_serialization_node_callback@@Base+0x494>
   2810c:	add	r0, r9, sl
   28110:	ldrb	r0, [r0, #-1]
   28114:	cmp	r0, #194	; 0xc2
   28118:	bne	2807c <myhtml_serialization_node_callback@@Base+0x494>
   2811c:	cmp	r1, #0
   28120:	beq	28140 <myhtml_serialization_node_callback@@Base+0x558>
   28124:	sub	r0, sl, r1
   28128:	sub	r1, r1, #1
   2812c:	mov	r2, r5
   28130:	add	r0, r9, r0
   28134:	blx	r4
   28138:	cmp	r0, #0
   2813c:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   28140:	ldr	r0, [pc, #512]	; 28348 <myhtml_serialization_node_callback@@Base+0x760>
   28144:	add	r0, pc, r0
   28148:	mov	r1, #6
   2814c:	mov	r2, r5
   28150:	blx	r4
   28154:	mov	r1, #0
   28158:	cmp	r0, #0
   2815c:	beq	28080 <myhtml_serialization_node_callback@@Base+0x498>
   28160:	b	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   28164:	cmp	r1, #0
   28168:	beq	28184 <myhtml_serialization_node_callback@@Base+0x59c>
   2816c:	add	r0, r9, r8
   28170:	mov	r2, r5
   28174:	sub	r0, r0, r1
   28178:	blx	r4
   2817c:	cmp	r0, #0
   28180:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   28184:	ldr	r0, [pc, #448]	; 2834c <myhtml_serialization_node_callback@@Base+0x764>
   28188:	mov	r1, #1
   2818c:	mov	r2, r5
   28190:	add	r0, pc, r0
   28194:	blx	r4
   28198:	cmp	r0, #0
   2819c:	bne	27f20 <myhtml_serialization_node_callback@@Base+0x338>
   281a0:	ldr	r6, [r6]
   281a4:	cmp	r6, #0
   281a8:	bne	27f4c <myhtml_serialization_node_callback@@Base+0x364>
   281ac:	ldr	r0, [pc, #412]	; 28350 <myhtml_serialization_node_callback@@Base+0x768>
   281b0:	mov	r1, #1
   281b4:	add	r0, pc, r0
   281b8:	mov	r2, r5
   281bc:	blx	r4
   281c0:	mov	r6, #2
   281c4:	cmp	r0, #0
   281c8:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   281cc:	b	281f4 <myhtml_serialization_node_callback@@Base+0x60c>
   281d0:	cmp	r2, #67	; 0x43
   281d4:	beq	27d30 <myhtml_serialization_node_callback@@Base+0x148>
   281d8:	ldr	r1, [r1, #12]
   281dc:	mov	r2, r4
   281e0:	mov	r3, r5
   281e4:	bl	28728 <myhtml_serialization_concatenate@@Base+0x90>
   281e8:	mov	r6, #2
   281ec:	cmp	r0, #0
   281f0:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   281f4:	mov	r6, #0
   281f8:	mov	r0, r6
   281fc:	sub	sp, fp, #28
   28200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28204:	ldr	r8, [r7]
   28208:	mov	r9, #0
   2820c:	mov	r7, #0
   28210:	cmp	r8, #0
   28214:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   28218:	ldr	r0, [r8, #36]	; 0x24
   2821c:	cmp	r0, #0
   28220:	beq	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   28224:	cmp	r9, #0
   28228:	beq	28238 <myhtml_serialization_node_callback@@Base+0x650>
   2822c:	ldr	r0, [r7, #36]	; 0x24
   28230:	cmp	r0, #0
   28234:	bne	28254 <myhtml_serialization_node_callback@@Base+0x66c>
   28238:	ldr	r0, [pc, #212]	; 28314 <myhtml_serialization_node_callback@@Base+0x72c>
   2823c:	mov	r1, #7
   28240:	mov	r2, r5
   28244:	add	r0, pc, r0
   28248:	blx	r4
   2824c:	cmp	r0, #0
   28250:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   28254:	ldr	r0, [pc, #188]	; 28318 <myhtml_serialization_node_callback@@Base+0x730>
   28258:	mov	r1, #2
   2825c:	mov	r2, r5
   28260:	mov	r6, #2
   28264:	add	r0, pc, r0
   28268:	blx	r4
   2826c:	cmp	r0, #0
   28270:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   28274:	ldr	r0, [r8, #28]
   28278:	cmp	r0, #0
   2827c:	beq	2829c <myhtml_serialization_node_callback@@Base+0x6b4>
   28280:	ldr	r1, [r8, #36]	; 0x24
   28284:	cmp	r1, #0
   28288:	beq	2829c <myhtml_serialization_node_callback@@Base+0x6b4>
   2828c:	mov	r2, r5
   28290:	blx	r4
   28294:	cmp	r0, #0
   28298:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   2829c:	ldr	r0, [pc, #120]	; 2831c <myhtml_serialization_node_callback@@Base+0x734>
   282a0:	mov	r1, #1
   282a4:	mov	r2, r5
   282a8:	add	r0, pc, r0
   282ac:	blx	r4
   282b0:	cmp	r0, #0
   282b4:	bne	281f8 <myhtml_serialization_node_callback@@Base+0x610>
   282b8:	b	282c8 <myhtml_serialization_node_callback@@Base+0x6e0>
   282bc:	mov	r9, #1
   282c0:	cmp	r8, #0
   282c4:	bne	28218 <myhtml_serialization_node_callback@@Base+0x630>
   282c8:	ldr	r0, [pc, #80]	; 28320 <myhtml_serialization_node_callback@@Base+0x738>
   282cc:	mov	r1, #1
   282d0:	mov	r2, r5
   282d4:	add	r0, pc, r0
   282d8:	blx	r4
   282dc:	cmp	r0, #0
   282e0:	mov	r6, #2
   282e4:	moveq	r6, #0
   282e8:	mov	r0, r6
   282ec:	sub	sp, fp, #28
   282f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282f4:	andeq	fp, sp, sp, ror #9
   282f8:	andeq	fp, sp, r6, lsr #9
   282fc:	andeq	fp, sp, lr, lsr #12
   28300:	andeq	fp, sp, r8, lsl r6
   28304:			; <UNDEFINED> instruction: 0x000db5bc
   28308:	muleq	sp, r2, r5
   2830c:	andeq	fp, sp, r1, ror #10
   28310:	andeq	fp, sp, r1, lsr r5
   28314:	andeq	fp, sp, fp, asr #2
   28318:	andeq	fp, sp, r8, lsr #2
   2831c:	andeq	fp, sp, r5, ror #1
   28320:	muleq	sp, ip, r0
   28324:	muleq	sp, pc, r4	; <UNPREDICTABLE>
   28328:	andeq	fp, sp, r4, lsr #8
   2832c:	andeq	fp, sp, sp, lsl #8
   28330:			; <UNDEFINED> instruction: 0x000db3be
   28334:			; <UNDEFINED> instruction: 0x000db3b0
   28338:	andeq	fp, sp, r3, lsl #8
   2833c:	andeq	fp, sp, r2, lsl #7
   28340:	andeq	fp, sp, r5, ror #5
   28344:			; <UNDEFINED> instruction: 0x000db2bf
   28348:	andeq	fp, sp, lr, ror r2
   2834c:	strdeq	fp, [sp], -sp
   28350:			; <UNDEFINED> instruction: 0x000db1bc
   28354:	push	{r4, r5, r6, r7, fp, lr}
   28358:	add	fp, sp, #16
   2835c:	sub	sp, sp, #8
   28360:	mov	r4, r1
   28364:	ldr	r1, [r0, #4]
   28368:	mov	r5, r2
   2836c:	sub	r2, r1, #1
   28370:	cmp	r2, #141	; 0x8d
   28374:	bhi	285cc <myhtml_serialization_node_callback@@Base+0x9e4>
   28378:	add	r3, pc, #8
   2837c:	mov	r6, #0
   28380:	ldr	r2, [r3, r2, lsl #2]
   28384:	add	pc, r3, r2
   28388:	andeq	r0, r0, ip, lsl #5
   2838c:	andeq	r0, r0, ip, lsl #5
   28390:	andeq	r0, r0, ip, lsl #5
   28394:	andeq	r0, r0, r4, asr #4
   28398:	andeq	r0, r0, r4, asr #4
   2839c:	andeq	r0, r0, r4, asr #4
   283a0:	andeq	r0, r0, r4, asr #4
   283a4:	andeq	r0, r0, r4, asr #4
   283a8:	andeq	r0, r0, r4, asr #4
   283ac:	andeq	r0, r0, r8, lsr r2
   283b0:	andeq	r0, r0, r4, asr #4
   283b4:	andeq	r0, r0, r4, asr #4
   283b8:	andeq	r0, r0, r4, asr #4
   283bc:	andeq	r0, r0, r4, asr #4
   283c0:	andeq	r0, r0, r8, lsr r2
   283c4:	andeq	r0, r0, r4, asr #4
   283c8:	andeq	r0, r0, r4, asr #4
   283cc:	andeq	r0, r0, r4, asr #4
   283d0:	andeq	r0, r0, r8, lsr r2
   283d4:	andeq	r0, r0, r4, asr #4
   283d8:	andeq	r0, r0, r4, asr #4
   283dc:	andeq	r0, r0, r4, asr #4
   283e0:	andeq	r0, r0, r4, asr #4
   283e4:	andeq	r0, r0, r8, lsr r2
   283e8:	andeq	r0, r0, r4, asr #4
   283ec:	andeq	r0, r0, r4, asr #4
   283f0:	andeq	r0, r0, r4, asr #4
   283f4:	andeq	r0, r0, r4, asr #4
   283f8:	andeq	r0, r0, r4, asr #4
   283fc:	andeq	r0, r0, r4, asr #4
   28400:	andeq	r0, r0, r8, lsr r2
   28404:	andeq	r0, r0, r4, asr #4
   28408:	andeq	r0, r0, r4, asr #4
   2840c:	andeq	r0, r0, r4, asr #4
   28410:	andeq	r0, r0, r4, asr #4
   28414:	andeq	r0, r0, r4, asr #4
   28418:	andeq	r0, r0, r4, asr #4
   2841c:	andeq	r0, r0, r4, asr #4
   28420:	andeq	r0, r0, r4, asr #4
   28424:	andeq	r0, r0, r4, asr #4
   28428:	andeq	r0, r0, r4, asr #4
   2842c:	andeq	r0, r0, r4, asr #4
   28430:	andeq	r0, r0, r4, asr #4
   28434:	andeq	r0, r0, r4, asr #4
   28438:	andeq	r0, r0, r4, asr #4
   2843c:	andeq	r0, r0, r8, lsr r2
   28440:	andeq	r0, r0, r4, asr #4
   28444:	andeq	r0, r0, r4, asr #4
   28448:	andeq	r0, r0, r4, asr #4
   2844c:	andeq	r0, r0, r4, asr #4
   28450:	andeq	r0, r0, r4, asr #4
   28454:	andeq	r0, r0, r4, asr #4
   28458:	andeq	r0, r0, r8, lsr r2
   2845c:	andeq	r0, r0, r4, asr #4
   28460:	andeq	r0, r0, r4, asr #4
   28464:	andeq	r0, r0, r4, asr #4
   28468:	andeq	r0, r0, r4, asr #4
   2846c:	andeq	r0, r0, r4, asr #4
   28470:	andeq	r0, r0, r4, asr #4
   28474:	andeq	r0, r0, r4, asr #4
   28478:	andeq	r0, r0, r4, asr #4
   2847c:	andeq	r0, r0, r4, asr #4
   28480:	andeq	r0, r0, r4, asr #4
   28484:	andeq	r0, r0, r8, lsr r2
   28488:	andeq	r0, r0, r4, asr #4
   2848c:	andeq	r0, r0, r4, asr #4
   28490:	andeq	r0, r0, r4, asr #4
   28494:	andeq	r0, r0, r4, asr #4
   28498:	andeq	r0, r0, r8, lsr r2
   2849c:	andeq	r0, r0, r8, lsr r2
   284a0:	andeq	r0, r0, r4, asr #4
   284a4:	andeq	r0, r0, r4, asr #4
   284a8:	andeq	r0, r0, r4, asr #4
   284ac:	andeq	r0, r0, r8, lsr r2
   284b0:	andeq	r0, r0, r4, asr #4
   284b4:	andeq	r0, r0, r4, asr #4
   284b8:	andeq	r0, r0, r4, asr #4
   284bc:	andeq	r0, r0, r8, lsr r2
   284c0:	andeq	r0, r0, r4, asr #4
   284c4:	andeq	r0, r0, r4, asr #4
   284c8:	andeq	r0, r0, r4, asr #4
   284cc:	andeq	r0, r0, r4, asr #4
   284d0:	andeq	r0, r0, r4, asr #4
   284d4:	andeq	r0, r0, r4, asr #4
   284d8:	andeq	r0, r0, r4, asr #4
   284dc:	andeq	r0, r0, r8, lsr r2
   284e0:	andeq	r0, r0, r4, asr #4
   284e4:	andeq	r0, r0, r4, asr #4
   284e8:	andeq	r0, r0, r4, asr #4
   284ec:	andeq	r0, r0, r4, asr #4
   284f0:	andeq	r0, r0, r4, asr #4
   284f4:	andeq	r0, r0, r4, asr #4
   284f8:	andeq	r0, r0, r4, asr #4
   284fc:	andeq	r0, r0, r4, asr #4
   28500:	andeq	r0, r0, r4, asr #4
   28504:	andeq	r0, r0, r4, asr #4
   28508:	andeq	r0, r0, r4, asr #4
   2850c:	andeq	r0, r0, r4, asr #4
   28510:	andeq	r0, r0, r4, asr #4
   28514:	andeq	r0, r0, r8, lsr r2
   28518:	andeq	r0, r0, r4, asr #4
   2851c:	andeq	r0, r0, r4, asr #4
   28520:	andeq	r0, r0, r4, asr #4
   28524:	andeq	r0, r0, r4, asr #4
   28528:	andeq	r0, r0, r4, asr #4
   2852c:	andeq	r0, r0, r4, asr #4
   28530:	andeq	r0, r0, r4, asr #4
   28534:	andeq	r0, r0, r4, asr #4
   28538:	andeq	r0, r0, r4, asr #4
   2853c:	andeq	r0, r0, r4, asr #4
   28540:	andeq	r0, r0, r4, asr #4
   28544:	andeq	r0, r0, r4, asr #4
   28548:	andeq	r0, r0, r4, asr #4
   2854c:	andeq	r0, r0, r4, asr #4
   28550:	andeq	r0, r0, r4, asr #4
   28554:	andeq	r0, r0, r8, lsr r2
   28558:	andeq	r0, r0, r4, asr #4
   2855c:	andeq	r0, r0, r4, asr #4
   28560:	andeq	r0, r0, r4, asr #4
   28564:	andeq	r0, r0, r4, asr #4
   28568:	andeq	r0, r0, r4, asr #4
   2856c:	andeq	r0, r0, r4, asr #4
   28570:	andeq	r0, r0, r4, asr #4
   28574:	andeq	r0, r0, r4, asr #4
   28578:	andeq	r0, r0, r4, asr #4
   2857c:	andeq	r0, r0, r4, asr #4
   28580:	andeq	r0, r0, r4, asr #4
   28584:	andeq	r0, r0, r4, asr #4
   28588:	andeq	r0, r0, r4, asr #4
   2858c:	andeq	r0, r0, r4, asr #4
   28590:	andeq	r0, r0, r4, asr #4
   28594:	andeq	r0, r0, r4, asr #4
   28598:	andeq	r0, r0, r4, asr #4
   2859c:	andeq	r0, r0, r4, asr #4
   285a0:	andeq	r0, r0, r4, asr #4
   285a4:	andeq	r0, r0, r8, lsr r2
   285a8:	andeq	r0, r0, r4, asr #4
   285ac:	andeq	r0, r0, r4, asr #4
   285b0:	andeq	r0, r0, r4, asr #4
   285b4:	andeq	r0, r0, r4, asr #4
   285b8:	andeq	r0, r0, r4, asr #4
   285bc:	andeq	r0, r0, r8, lsr r2
   285c0:	ldr	r2, [r0, #8]
   285c4:	cmp	r2, #1
   285c8:	beq	28614 <myhtml_serialization_node_callback@@Base+0xa2c>
   285cc:	ldr	r0, [r0, #40]	; 0x28
   285d0:	add	r2, sp, #4
   285d4:	bl	11888 <myhtml_tag_name_by_id@plt>
   285d8:	mov	r7, r0
   285dc:	ldr	r0, [pc, #104]	; 2864c <myhtml_serialization_node_callback@@Base+0xa64>
   285e0:	mov	r1, #2
   285e4:	mov	r2, r5
   285e8:	mov	r6, #2
   285ec:	add	r0, pc, r0
   285f0:	blx	r4
   285f4:	cmp	r0, #0
   285f8:	bne	28614 <myhtml_serialization_node_callback@@Base+0xa2c>
   285fc:	ldr	r1, [sp, #4]
   28600:	mov	r0, r7
   28604:	mov	r2, r5
   28608:	blx	r4
   2860c:	cmp	r0, #0
   28610:	beq	28620 <myhtml_serialization_node_callback@@Base+0xa38>
   28614:	mov	r0, r6
   28618:	sub	sp, fp, #16
   2861c:	pop	{r4, r5, r6, r7, fp, pc}
   28620:	ldr	r0, [pc, #40]	; 28650 <myhtml_serialization_node_callback@@Base+0xa68>
   28624:	mov	r1, #1
   28628:	mov	r2, r5
   2862c:	add	r0, pc, r0
   28630:	blx	r4
   28634:	cmp	r0, #0
   28638:	movwne	r0, #1
   2863c:	lsl	r6, r0, #1
   28640:	mov	r0, r6
   28644:	sub	sp, fp, #16
   28648:	pop	{r4, r5, r6, r7, fp, pc}
   2864c:	ldrdeq	sl, [sp], -sp
   28650:	andeq	sl, sp, r4, asr #26

00028654 <myhtml_serialization_reallocate@@Base>:
   28654:	push	{r4, r5, fp, lr}
   28658:	add	fp, sp, #8
   2865c:	mov	r4, r0
   28660:	ldr	r0, [r0]
   28664:	mov	r5, r1
   28668:	bl	10d9c <mycore_realloc@plt>
   2866c:	cmp	r0, #0
   28670:	beq	28680 <myhtml_serialization_reallocate@@Base+0x2c>
   28674:	stm	r4, {r0, r5}
   28678:	mov	r0, #0
   2867c:	pop	{r4, r5, fp, pc}
   28680:	mov	r0, #0
   28684:	str	r0, [r4]
   28688:	str	r0, [r4, #4]
   2868c:	str	r0, [r4, #8]
   28690:	mov	r0, #2
   28694:	pop	{r4, r5, fp, pc}

00028698 <myhtml_serialization_concatenate@@Base>:
   28698:	push	{r4, r5, r6, r7, fp, lr}
   2869c:	add	fp, sp, #16
   286a0:	mov	r5, r1
   286a4:	mov	r6, r0
   286a8:	ldmib	r2, {r0, r1}
   286ac:	mov	r4, r2
   286b0:	add	r2, r1, r5
   286b4:	cmp	r2, r0
   286b8:	bcs	286c4 <myhtml_serialization_concatenate@@Base+0x2c>
   286bc:	ldr	r0, [r4]
   286c0:	b	286e4 <myhtml_serialization_concatenate@@Base+0x4c>
   286c4:	ldr	r0, [r4]
   286c8:	add	r7, r2, #4096	; 0x1000
   286cc:	mov	r1, r7
   286d0:	bl	10d9c <mycore_realloc@plt>
   286d4:	cmp	r0, #0
   286d8:	beq	28710 <myhtml_serialization_concatenate@@Base+0x78>
   286dc:	stm	r4, {r0, r7}
   286e0:	ldr	r1, [r4, #8]
   286e4:	add	r0, r0, r1
   286e8:	mov	r1, r6
   286ec:	mov	r2, r5
   286f0:	bl	11708 <strncpy@plt>
   286f4:	ldr	r0, [r4, #8]
   286f8:	ldr	r1, [r4]
   286fc:	add	r2, r0, r5
   28700:	mov	r0, #0
   28704:	str	r2, [r4, #8]
   28708:	strb	r0, [r1, r2]
   2870c:	pop	{r4, r5, r6, r7, fp, pc}
   28710:	mov	r0, #0
   28714:	str	r0, [r4]
   28718:	str	r0, [r4, #4]
   2871c:	str	r0, [r4, #8]
   28720:	mov	r0, #2
   28724:	pop	{r4, r5, r6, r7, fp, pc}
   28728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2872c:	add	fp, sp, #28
   28730:	sub	sp, sp, #4
   28734:	cmp	r1, #0
   28738:	beq	288cc <myhtml_serialization_concatenate@@Base+0x234>
   2873c:	ldr	r9, [pc, #404]	; 288d8 <myhtml_serialization_concatenate@@Base+0x240>
   28740:	ldr	sl, [pc, #404]	; 288dc <myhtml_serialization_concatenate@@Base+0x244>
   28744:	mov	r6, r1
   28748:	mov	r5, r3
   2874c:	mov	r4, r2
   28750:	mov	r7, r0
   28754:	mov	r8, #0
   28758:	mov	r1, #0
   2875c:	add	r9, pc, r9
   28760:	add	sl, pc, sl
   28764:	ldrb	r0, [r7, r8]
   28768:	cmp	r0, #61	; 0x3d
   2876c:	bgt	287c8 <myhtml_serialization_concatenate@@Base+0x130>
   28770:	b	28790 <myhtml_serialization_concatenate@@Base+0xf8>
   28774:	add	r1, r1, #1
   28778:	add	r8, r8, #1
   2877c:	cmp	r6, r8
   28780:	beq	2889c <myhtml_serialization_concatenate@@Base+0x204>
   28784:	ldrb	r0, [r7, r8]
   28788:	cmp	r0, #61	; 0x3d
   2878c:	bgt	287c8 <myhtml_serialization_concatenate@@Base+0x130>
   28790:	cmp	r0, #38	; 0x26
   28794:	beq	28824 <myhtml_serialization_concatenate@@Base+0x18c>
   28798:	cmp	r0, #60	; 0x3c
   2879c:	bne	28774 <myhtml_serialization_concatenate@@Base+0xdc>
   287a0:	cmp	r1, #0
   287a4:	beq	287c0 <myhtml_serialization_concatenate@@Base+0x128>
   287a8:	sub	r0, r8, r1
   287ac:	mov	r2, r5
   287b0:	add	r0, r7, r0
   287b4:	blx	r4
   287b8:	cmp	r0, #0
   287bc:	bne	28890 <myhtml_serialization_concatenate@@Base+0x1f8>
   287c0:	mov	r0, r9
   287c4:	b	28878 <myhtml_serialization_concatenate@@Base+0x1e0>
   287c8:	cmp	r0, #62	; 0x3e
   287cc:	beq	28854 <myhtml_serialization_concatenate@@Base+0x1bc>
   287d0:	cmp	r0, #160	; 0xa0
   287d4:	bne	28774 <myhtml_serialization_concatenate@@Base+0xdc>
   287d8:	cmp	r8, #0
   287dc:	beq	28774 <myhtml_serialization_concatenate@@Base+0xdc>
   287e0:	add	r0, r7, r8
   287e4:	ldrb	r0, [r0, #-1]
   287e8:	cmp	r0, #194	; 0xc2
   287ec:	bne	28774 <myhtml_serialization_concatenate@@Base+0xdc>
   287f0:	cmp	r1, #0
   287f4:	beq	28814 <myhtml_serialization_concatenate@@Base+0x17c>
   287f8:	sub	r0, r8, r1
   287fc:	sub	r1, r1, #1
   28800:	mov	r2, r5
   28804:	add	r0, r7, r0
   28808:	blx	r4
   2880c:	cmp	r0, #0
   28810:	bne	28890 <myhtml_serialization_concatenate@@Base+0x1f8>
   28814:	ldr	r0, [pc, #200]	; 288e4 <myhtml_serialization_concatenate@@Base+0x24c>
   28818:	mov	r1, #6
   2881c:	add	r0, pc, r0
   28820:	b	2887c <myhtml_serialization_concatenate@@Base+0x1e4>
   28824:	cmp	r1, #0
   28828:	beq	28844 <myhtml_serialization_concatenate@@Base+0x1ac>
   2882c:	sub	r0, r8, r1
   28830:	mov	r2, r5
   28834:	add	r0, r7, r0
   28838:	blx	r4
   2883c:	cmp	r0, #0
   28840:	bne	28890 <myhtml_serialization_concatenate@@Base+0x1f8>
   28844:	ldr	r0, [pc, #148]	; 288e0 <myhtml_serialization_concatenate@@Base+0x248>
   28848:	mov	r1, #5
   2884c:	add	r0, pc, r0
   28850:	b	2887c <myhtml_serialization_concatenate@@Base+0x1e4>
   28854:	cmp	r1, #0
   28858:	beq	28874 <myhtml_serialization_concatenate@@Base+0x1dc>
   2885c:	sub	r0, r8, r1
   28860:	mov	r2, r5
   28864:	add	r0, r7, r0
   28868:	blx	r4
   2886c:	cmp	r0, #0
   28870:	bne	28890 <myhtml_serialization_concatenate@@Base+0x1f8>
   28874:	mov	r0, sl
   28878:	mov	r1, #4
   2887c:	mov	r2, r5
   28880:	blx	r4
   28884:	mov	r1, #0
   28888:	cmp	r0, #0
   2888c:	beq	28778 <myhtml_serialization_concatenate@@Base+0xe0>
   28890:	mov	r0, #2
   28894:	sub	sp, fp, #28
   28898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2889c:	cmp	r1, #0
   288a0:	beq	288cc <myhtml_serialization_concatenate@@Base+0x234>
   288a4:	add	r0, r7, r6
   288a8:	mov	r2, r5
   288ac:	sub	r0, r0, r1
   288b0:	blx	r4
   288b4:	mov	r1, r0
   288b8:	mov	r0, #2
   288bc:	cmp	r1, #0
   288c0:	moveq	r0, #0
   288c4:	sub	sp, fp, #28
   288c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   288cc:	mov	r0, #0
   288d0:	sub	sp, fp, #28
   288d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   288d8:	andeq	sl, sp, r0, ror ip
   288dc:	andeq	sl, sp, r1, ror ip
   288e0:	andeq	sl, sp, r9, ror #22
   288e4:	andeq	sl, sp, r6, lsr #23

000288e8 <myhtml_stream_buffer_create@@Base>:
   288e8:	mov	r0, #1
   288ec:	mov	r1, #36	; 0x24
   288f0:	b	11000 <mycore_calloc@plt>

000288f4 <myhtml_stream_buffer_init@@Base>:
   288f4:	push	{r4, r5, fp, lr}
   288f8:	add	fp, sp, #8
   288fc:	mov	r5, #0
   28900:	mov	r4, r0
   28904:	str	r5, [r0, #4]
   28908:	str	r1, [r0, #8]
   2890c:	mov	r0, r1
   28910:	mov	r1, #12
   28914:	bl	11000 <mycore_calloc@plt>
   28918:	cmp	r0, #0
   2891c:	str	r0, [r4]
   28920:	movweq	r5, #37633	; 0x9301
   28924:	mov	r0, r5
   28928:	pop	{r4, r5, fp, pc}

0002892c <myhtml_stream_buffer_entry_init@@Base>:
   2892c:	push	{r4, r5, r6, sl, fp, lr}
   28930:	add	fp, sp, #16
   28934:	mov	r4, r0
   28938:	ldr	r0, [r0]
   2893c:	mov	r5, r1
   28940:	cmp	r0, #0
   28944:	beq	2895c <myhtml_stream_buffer_entry_init@@Base+0x30>
   28948:	ldr	r1, [r4, #8]
   2894c:	mov	r6, #0
   28950:	cmp	r1, r5
   28954:	bcs	2897c <myhtml_stream_buffer_entry_init@@Base+0x50>
   28958:	bl	11a98 <mycore_free@plt>
   2895c:	mov	r6, #0
   28960:	mov	r0, r5
   28964:	str	r6, [r4, #4]
   28968:	str	r5, [r4, #8]
   2896c:	bl	119a8 <mycore_malloc@plt>
   28970:	cmp	r0, #0
   28974:	str	r0, [r4]
   28978:	movweq	r6, #37635	; 0x9303
   2897c:	mov	r0, r6
   28980:	pop	{r4, r5, r6, sl, fp, pc}

00028984 <myhtml_stream_buffer_entry_clean@@Base>:
   28984:	cmp	r0, #0
   28988:	movne	r1, #0
   2898c:	strne	r1, [r0, #4]
   28990:	bx	lr

00028994 <myhtml_stream_buffer_entry_destroy@@Base>:
   28994:	push	{r4, r5, r6, sl, fp, lr}
   28998:	add	fp, sp, #16
   2899c:	mov	r4, #0
   289a0:	cmp	r0, #0
   289a4:	beq	289d0 <myhtml_stream_buffer_entry_destroy@@Base+0x3c>
   289a8:	mov	r5, r0
   289ac:	ldr	r0, [r0]
   289b0:	mov	r6, r1
   289b4:	cmp	r0, #0
   289b8:	beq	289c0 <myhtml_stream_buffer_entry_destroy@@Base+0x2c>
   289bc:	bl	11a98 <mycore_free@plt>
   289c0:	cmp	r6, #0
   289c4:	beq	289d8 <myhtml_stream_buffer_entry_destroy@@Base+0x44>
   289c8:	mov	r0, r5
   289cc:	bl	11a98 <mycore_free@plt>
   289d0:	mov	r0, r4
   289d4:	pop	{r4, r5, r6, sl, fp, pc}
   289d8:	mov	r0, r5
   289dc:	pop	{r4, r5, r6, sl, fp, pc}

000289e0 <myhtml_stream_buffer_clean@@Base>:
   289e0:	cmp	r0, #0
   289e4:	movne	r1, #0
   289e8:	strne	r1, [r0, #4]
   289ec:	bx	lr

000289f0 <myhtml_stream_buffer_destroy@@Base>:
   289f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   289f4:	add	fp, sp, #24
   289f8:	mov	r4, #0
   289fc:	cmp	r0, #0
   28a00:	beq	28a80 <myhtml_stream_buffer_destroy@@Base+0x90>
   28a04:	mov	r5, r0
   28a08:	ldr	r0, [r0]
   28a0c:	mov	r8, r1
   28a10:	cmp	r0, #0
   28a14:	beq	28a70 <myhtml_stream_buffer_destroy@@Base+0x80>
   28a18:	ldr	r1, [r5, #4]
   28a1c:	cmp	r1, #0
   28a20:	beq	28a6c <myhtml_stream_buffer_destroy@@Base+0x7c>
   28a24:	mov	r7, #1
   28a28:	mov	r6, #0
   28a2c:	cmp	r0, r6
   28a30:	beq	28a48 <myhtml_stream_buffer_destroy@@Base+0x58>
   28a34:	ldr	r0, [r0, -r6]
   28a38:	cmp	r0, #0
   28a3c:	beq	28a48 <myhtml_stream_buffer_destroy@@Base+0x58>
   28a40:	bl	11a98 <mycore_free@plt>
   28a44:	ldr	r1, [r5, #4]
   28a48:	cmp	r7, r1
   28a4c:	bcs	28a68 <myhtml_stream_buffer_destroy@@Base+0x78>
   28a50:	ldr	r0, [r5]
   28a54:	sub	r6, r6, #12
   28a58:	add	r7, r7, #1
   28a5c:	cmp	r0, r6
   28a60:	bne	28a34 <myhtml_stream_buffer_destroy@@Base+0x44>
   28a64:	b	28a48 <myhtml_stream_buffer_destroy@@Base+0x58>
   28a68:	ldr	r0, [r5]
   28a6c:	bl	11a98 <mycore_free@plt>
   28a70:	cmp	r8, #0
   28a74:	beq	28a88 <myhtml_stream_buffer_destroy@@Base+0x98>
   28a78:	mov	r0, r5
   28a7c:	bl	11a98 <mycore_free@plt>
   28a80:	mov	r0, r4
   28a84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28a88:	mov	r0, r5
   28a8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028a90 <myhtml_stream_buffer_add_entry@@Base>:
   28a90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28a94:	add	fp, sp, #24
   28a98:	mov	r8, r1
   28a9c:	ldmib	r0, {r1, r5}
   28aa0:	mov	r4, r0
   28aa4:	cmp	r1, r5
   28aa8:	bcs	28ab4 <myhtml_stream_buffer_add_entry@@Base+0x24>
   28aac:	ldr	r6, [r4]
   28ab0:	b	28af8 <myhtml_stream_buffer_add_entry@@Base+0x68>
   28ab4:	add	r0, r5, r5, lsl #1
   28ab8:	lsl	r1, r0, #3
   28abc:	mov	r0, r4
   28ac0:	bl	10d9c <mycore_realloc@plt>
   28ac4:	cmp	r0, #0
   28ac8:	beq	28b58 <myhtml_stream_buffer_add_entry@@Base+0xc8>
   28acc:	mov	r6, r0
   28ad0:	ldr	r0, [r4, #8]
   28ad4:	lsl	r5, r5, #1
   28ad8:	mov	r1, #0
   28adc:	sub	r2, r5, r0
   28ae0:	add	r0, r0, r0, lsl #1
   28ae4:	add	r0, r6, r0, lsl #2
   28ae8:	bl	116cc <memset@plt>
   28aec:	str	r5, [r4, #8]
   28af0:	str	r6, [r4]
   28af4:	ldr	r1, [r4, #4]
   28af8:	add	r5, r1, r1, lsl #1
   28afc:	mov	r7, r6
   28b00:	ldr	r0, [r7, r5, lsl #2]!
   28b04:	cmp	r0, #0
   28b08:	beq	28b20 <myhtml_stream_buffer_add_entry@@Base+0x90>
   28b0c:	add	r2, r6, r5, lsl #2
   28b10:	ldr	r2, [r2, #8]
   28b14:	cmp	r2, r8
   28b18:	bcs	28b44 <myhtml_stream_buffer_add_entry@@Base+0xb4>
   28b1c:	bl	11a98 <mycore_free@plt>
   28b20:	add	r0, r6, r5, lsl #2
   28b24:	mov	r6, #0
   28b28:	stmib	r0, {r6, r8}
   28b2c:	mov	r0, r8
   28b30:	bl	119a8 <mycore_malloc@plt>
   28b34:	cmp	r0, #0
   28b38:	str	r0, [r7]
   28b3c:	beq	28b50 <myhtml_stream_buffer_add_entry@@Base+0xc0>
   28b40:	ldr	r1, [r4, #4]
   28b44:	add	r0, r1, #1
   28b48:	mov	r6, r7
   28b4c:	str	r0, [r4, #4]
   28b50:	mov	r0, r6
   28b54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28b58:	mov	r6, #0
   28b5c:	mov	r0, r6
   28b60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028b64 <myhtml_stream_buffer_current_entry@@Base>:
   28b64:	ldr	r1, [r0, #4]
   28b68:	cmp	r1, #0
   28b6c:	moveq	r0, #0
   28b70:	bxeq	lr
   28b74:	ldr	r0, [r0]
   28b78:	add	r1, r1, r1, lsl #1
   28b7c:	add	r0, r0, r1, lsl #2
   28b80:	sub	r0, r0, #12
   28b84:	bx	lr

00028b88 <myhtml_tag_create@@Base>:
   28b88:	mov	r0, #20
   28b8c:	b	119a8 <mycore_malloc@plt>

00028b90 <myhtml_tag_init@@Base>:
   28b90:	push	{r4, r5, fp, lr}
   28b94:	add	fp, sp, #8
   28b98:	sub	sp, sp, #8
   28b9c:	mov	r4, r1
   28ba0:	mov	r5, r0
   28ba4:	bl	11294 <mcsimple_create@plt>
   28ba8:	cmp	r0, #0
   28bac:	str	r0, [r4, #4]
   28bb0:	beq	28c3c <myhtml_tag_init@@Base+0xac>
   28bb4:	mov	r1, #128	; 0x80
   28bb8:	mov	r2, #1024	; 0x400
   28bbc:	mov	r3, #44	; 0x2c
   28bc0:	bl	113a8 <mcsimple_init@plt>
   28bc4:	ldr	r0, [r5, #4]
   28bc8:	add	r1, sp, #4
   28bcc:	bl	1127c <mchar_async_node_add@plt>
   28bd0:	str	r0, [r4, #12]
   28bd4:	mov	r0, #2
   28bd8:	bl	11534 <mctree_create@plt>
   28bdc:	str	r0, [r4]
   28be0:	mov	r1, r0
   28be4:	mov	r2, #252	; 0xfc
   28be8:	ldr	r0, [r5, #4]
   28bec:	str	r2, [r4, #8]
   28bf0:	str	r0, [r4, #16]
   28bf4:	ldr	r0, [sp, #4]
   28bf8:	cmp	r0, #0
   28bfc:	bne	28c34 <myhtml_tag_init@@Base+0xa4>
   28c00:	cmp	r1, #0
   28c04:	mov	r0, #2
   28c08:	beq	28c34 <myhtml_tag_init@@Base+0xa4>
   28c0c:	mov	r0, #252	; 0xfc
   28c10:	str	r0, [r4, #8]
   28c14:	ldr	r0, [r4, #4]
   28c18:	bl	1124c <mcsimple_clean@plt>
   28c1c:	ldr	r1, [r4, #12]
   28c20:	ldr	r0, [r4, #16]
   28c24:	bl	115ac <mchar_async_node_clean@plt>
   28c28:	ldr	r0, [r4]
   28c2c:	bl	112c4 <mctree_clean@plt>
   28c30:	mov	r0, #0
   28c34:	sub	sp, fp, #8
   28c38:	pop	{r4, r5, fp, pc}
   28c3c:	movw	r0, #37264	; 0x9190
   28c40:	sub	sp, fp, #8
   28c44:	pop	{r4, r5, fp, pc}

00028c48 <myhtml_tag_clean@@Base>:
   28c48:	push	{r4, sl, fp, lr}
   28c4c:	add	fp, sp, #8
   28c50:	mov	r4, r0
   28c54:	mov	r0, #252	; 0xfc
   28c58:	str	r0, [r4, #8]
   28c5c:	ldr	r0, [r4, #4]
   28c60:	bl	1124c <mcsimple_clean@plt>
   28c64:	ldr	r1, [r4, #12]
   28c68:	ldr	r0, [r4, #16]
   28c6c:	bl	115ac <mchar_async_node_clean@plt>
   28c70:	ldr	r0, [r4]
   28c74:	pop	{r4, sl, fp, lr}
   28c78:	b	112c4 <mctree_clean@plt>

00028c7c <myhtml_tag_destroy@@Base>:
   28c7c:	cmp	r0, #0
   28c80:	beq	28cc4 <myhtml_tag_destroy@@Base+0x48>
   28c84:	push	{r4, sl, fp, lr}
   28c88:	add	fp, sp, #8
   28c8c:	mov	r4, r0
   28c90:	ldr	r0, [r0]
   28c94:	bl	11144 <mctree_destroy@plt>
   28c98:	str	r0, [r4]
   28c9c:	mov	r1, #1
   28ca0:	ldr	r0, [r4, #4]
   28ca4:	bl	11324 <mcsimple_destroy@plt>
   28ca8:	str	r0, [r4, #4]
   28cac:	ldr	r1, [r4, #12]
   28cb0:	ldr	r0, [r4, #16]
   28cb4:	bl	1196c <mchar_async_node_delete@plt>
   28cb8:	mov	r0, r4
   28cbc:	bl	11a98 <mycore_free@plt>
   28cc0:	pop	{r4, sl, fp, lr}
   28cc4:	mov	r0, #0
   28cc8:	bx	lr

00028ccc <myhtml_tag_add@@Base>:
   28ccc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28cd0:	add	fp, sp, #24
   28cd4:	sub	sp, sp, #8
   28cd8:	mov	r4, r1
   28cdc:	mov	r9, r0
   28ce0:	ldr	r1, [r0, #12]
   28ce4:	ldr	r0, [r0, #16]
   28ce8:	mov	r6, r2
   28cec:	add	r2, r2, #1
   28cf0:	mov	r8, r3
   28cf4:	bl	1172c <mchar_async_malloc@plt>
   28cf8:	mov	r7, r0
   28cfc:	ldr	r0, [fp, #8]
   28d00:	cmp	r0, #0
   28d04:	beq	28e64 <myhtml_tag_add@@Base+0x198>
   28d08:	cmp	r6, #0
   28d0c:	beq	28e74 <myhtml_tag_add@@Base+0x1a8>
   28d10:	mov	lr, #0
   28d14:	cmp	r6, #16
   28d18:	bcc	28de0 <myhtml_tag_add@@Base+0x114>
   28d1c:	add	r1, r4, r6
   28d20:	cmp	r7, r1
   28d24:	bcs	28d34 <myhtml_tag_add@@Base+0x68>
   28d28:	add	r1, r7, r6
   28d2c:	cmp	r1, r4
   28d30:	bhi	28de0 <myhtml_tag_add@@Base+0x114>
   28d34:	bic	lr, r6, #15
   28d38:	mov	r2, #1
   28d3c:	subs	r1, lr, #16
   28d40:	add	r1, r2, r1, lsr #4
   28d44:	and	ip, r1, #1
   28d48:	beq	28ed4 <myhtml_tag_add@@Base+0x208>
   28d4c:	vmov.i8	q8, #191	; 0xbf
   28d50:	vmov.i8	q9, #96	; 0x60
   28d54:	vmov.i8	q10, #26	; 0x1a
   28d58:	sub	r3, r1, ip
   28d5c:	mov	r1, #0
   28d60:	add	r2, r4, r1
   28d64:	add	r0, r7, r1
   28d68:	subs	r3, r3, #2
   28d6c:	add	r1, r1, #32
   28d70:	vld1.8	{d22-d23}, [r2]!
   28d74:	vadd.i8	q12, q11, q8
   28d78:	vorr	q13, q11, q9
   28d7c:	vcgt.u8	q12, q10, q12
   28d80:	vbsl	q12, q13, q11
   28d84:	vst1.8	{d24-d25}, [r0]!
   28d88:	vld1.8	{d22-d23}, [r2]
   28d8c:	vadd.i8	q12, q11, q8
   28d90:	vorr	q13, q11, q9
   28d94:	vcgt.u8	q12, q10, q12
   28d98:	vbsl	q12, q13, q11
   28d9c:	vst1.8	{d24-d25}, [r0]
   28da0:	bne	28d60 <myhtml_tag_add@@Base+0x94>
   28da4:	cmp	ip, #0
   28da8:	beq	28dd8 <myhtml_tag_add@@Base+0x10c>
   28dac:	add	r0, r4, r1
   28db0:	vmov.i8	q9, #191	; 0xbf
   28db4:	vmov.i8	q10, #96	; 0x60
   28db8:	vmov.i8	q11, #26	; 0x1a
   28dbc:	vld1.8	{d16-d17}, [r0]
   28dc0:	add	r0, r7, r1
   28dc4:	vadd.i8	q9, q8, q9
   28dc8:	vorr	q10, q8, q10
   28dcc:	vcgt.u8	q9, q11, q9
   28dd0:	vbsl	q9, q10, q8
   28dd4:	vst1.8	{d18-d19}, [r0]
   28dd8:	cmp	lr, r6
   28ddc:	beq	28e74 <myhtml_tag_add@@Base+0x1a8>
   28de0:	mvn	r1, lr
   28de4:	tst	r6, #1
   28de8:	beq	28e08 <myhtml_tag_add@@Base+0x13c>
   28dec:	ldrb	r0, [r4, lr]
   28df0:	sub	r2, r0, #65	; 0x41
   28df4:	uxtb	r2, r2
   28df8:	cmp	r2, #26
   28dfc:	orrcc	r0, r0, #96	; 0x60
   28e00:	strb	r0, [r7, lr]
   28e04:	orr	lr, lr, #1
   28e08:	cmn	r1, r6
   28e0c:	beq	28e74 <myhtml_tag_add@@Base+0x1a8>
   28e10:	add	r2, lr, #1
   28e14:	sub	r1, r6, lr
   28e18:	add	r0, r4, r2
   28e1c:	add	r2, r7, r2
   28e20:	ldrb	r3, [r0, #-1]
   28e24:	sub	r4, r3, #65	; 0x41
   28e28:	uxtb	r4, r4
   28e2c:	cmp	r4, #26
   28e30:	orrcc	r3, r3, #96	; 0x60
   28e34:	strb	r3, [r2, #-1]
   28e38:	ldrb	r3, [r0]
   28e3c:	add	r0, r0, #2
   28e40:	sub	r4, r3, #65	; 0x41
   28e44:	uxtb	r4, r4
   28e48:	cmp	r4, #26
   28e4c:	orrcc	r3, r3, #96	; 0x60
   28e50:	subs	r1, r1, #2
   28e54:	strb	r3, [r2]
   28e58:	add	r2, r2, #2
   28e5c:	bne	28e20 <myhtml_tag_add@@Base+0x154>
   28e60:	b	28e74 <myhtml_tag_add@@Base+0x1a8>
   28e64:	mov	r0, r7
   28e68:	mov	r1, r4
   28e6c:	mov	r2, r6
   28e70:	bl	11708 <strncpy@plt>
   28e74:	mov	r5, #0
   28e78:	strb	r5, [r7, r6]
   28e7c:	ldr	r0, [r9, #4]
   28e80:	bl	115dc <mcsimple_malloc@plt>
   28e84:	mov	r4, r0
   28e88:	ldr	r0, [r9]
   28e8c:	mov	r1, r7
   28e90:	mov	r2, r6
   28e94:	str	r5, [sp]
   28e98:	mov	r3, r4
   28e9c:	bl	11768 <mctree_insert@plt>
   28ea0:	ldr	r0, [r9, #8]
   28ea4:	vmov.i32	q8, #0	; 0x00000000
   28ea8:	add	r1, r0, #1
   28eac:	stm	r4, {r0, r7}
   28eb0:	str	r6, [r4, #8]
   28eb4:	str	r8, [r4, #12]
   28eb8:	str	r1, [r9, #8]
   28ebc:	add	r1, r4, #28
   28ec0:	vst1.32	{d16-d17}, [r1]
   28ec4:	add	r1, r4, #16
   28ec8:	vst1.32	{d16-d17}, [r1]
   28ecc:	sub	sp, fp, #24
   28ed0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28ed4:	mov	r1, #0
   28ed8:	cmp	ip, #0
   28edc:	bne	28dac <myhtml_tag_add@@Base+0xe0>
   28ee0:	b	28dd8 <myhtml_tag_add@@Base+0x10c>

00028ee4 <myhtml_tag_set_category@@Base>:
   28ee4:	cmp	r1, #252	; 0xfc
   28ee8:	bxcc	lr
   28eec:	push	{r4, r5, fp, lr}
   28ef0:	add	fp, sp, #8
   28ef4:	ldr	r0, [r0, #4]
   28ef8:	sub	r1, r1, #252	; 0xfc
   28efc:	mov	r4, r3
   28f00:	mov	r5, r2
   28f04:	bl	11be8 <mcsimple_get_by_absolute_position@plt>
   28f08:	add	r0, r0, r5, lsl #2
   28f0c:	str	r4, [r0, #16]
   28f10:	pop	{r4, r5, fp, lr}
   28f14:	bx	lr

00028f18 <myhtml_tag_get_by_id@@Base>:
   28f18:	cmp	r1, #252	; 0xfc
   28f1c:	bcc	28f2c <myhtml_tag_get_by_id@@Base+0x14>
   28f20:	ldr	r0, [r0, #4]
   28f24:	sub	r1, r1, #252	; 0xfc
   28f28:	b	11be8 <mcsimple_get_by_absolute_position@plt>
   28f2c:	mov	r0, r1
   28f30:	b	110c0 <myhtml_tag_static_get_by_id@plt>

00028f34 <myhtml_tag_get_by_name@@Base>:
   28f34:	push	{r4, r5, r6, sl, fp, lr}
   28f38:	add	fp, sp, #16
   28f3c:	mov	r4, r0
   28f40:	mov	r6, r1
   28f44:	mov	r0, r1
   28f48:	mov	r1, r2
   28f4c:	mov	r5, r2
   28f50:	bl	11738 <myhtml_tag_static_search@plt>
   28f54:	cmp	r0, #0
   28f58:	popne	{r4, r5, r6, sl, fp, pc}
   28f5c:	ldr	r0, [r4]
   28f60:	mov	r1, r6
   28f64:	mov	r2, r5
   28f68:	bl	115e8 <mctree_search_lowercase@plt>
   28f6c:	ldr	r1, [r4]
   28f70:	rsb	r0, r0, r0, lsl #3
   28f74:	ldr	r1, [r1]
   28f78:	add	r0, r1, r0, lsl #2
   28f7c:	ldr	r0, [r0, #8]
   28f80:	pop	{r4, r5, r6, sl, fp, pc}

00028f84 <myhtml_tag_static_search@@Base>:
   28f84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28f88:	add	fp, sp, #24
   28f8c:	mov	r4, r1
   28f90:	mov	r8, r0
   28f94:	ldrb	r1, [r0], r1
   28f98:	ldrb	r0, [r0, #-1]
   28f9c:	ldr	r2, [pc, #180]	; 29058 <myhtml_tag_static_search@@Base+0xd4>
   28fa0:	ldr	r7, [pc, #180]	; 2905c <myhtml_tag_static_search@@Base+0xd8>
   28fa4:	add	r2, pc, r2
   28fa8:	add	r7, pc, r7
   28fac:	ldrb	r1, [r2, r1]
   28fb0:	ldrb	r0, [r2, r0]
   28fb4:	mul	r1, r1, r4
   28fb8:	mul	r0, r1, r0
   28fbc:	movw	r1, #411	; 0x19b
   28fc0:	movt	r1, #4515	; 0x11a3
   28fc4:	umull	r1, r2, r0, r1
   28fc8:	sub	r1, r0, r2
   28fcc:	add	r1, r2, r1, lsr #1
   28fd0:	movw	r2, #479	; 0x1df
   28fd4:	lsr	r1, r1, #8
   28fd8:	mls	r0, r1, r2, r0
   28fdc:	add	r5, r0, #1
   28fe0:	add	r0, r5, r5, lsl #1
   28fe4:	ldr	r6, [r7, r0, lsl #2]
   28fe8:	cmp	r6, #0
   28fec:	bne	29014 <myhtml_tag_static_search@@Base+0x90>
   28ff0:	b	2904c <myhtml_tag_static_search@@Base+0xc8>
   28ff4:	bhi	2904c <myhtml_tag_static_search@@Base+0xc8>
   28ff8:	add	r0, r5, r5, lsl #1
   28ffc:	add	r0, r7, r0, lsl #2
   29000:	ldr	r5, [r0, #4]
   29004:	add	r0, r5, r5, lsl #1
   29008:	ldr	r6, [r7, r0, lsl #2]
   2900c:	cmp	r6, #0
   29010:	beq	2904c <myhtml_tag_static_search@@Base+0xc8>
   29014:	ldr	r0, [r6, #8]
   29018:	cmp	r0, r4
   2901c:	bne	28ff4 <myhtml_tag_static_search@@Base+0x70>
   29020:	ldr	r0, [r6, #4]
   29024:	mov	r1, r8
   29028:	mov	r2, r4
   2902c:	bl	11288 <mycore_strncasecmp@plt>
   29030:	cmp	r0, #0
   29034:	beq	29050 <myhtml_tag_static_search@@Base+0xcc>
   29038:	add	r0, r5, r5, lsl #1
   2903c:	add	r0, r7, r0, lsl #2
   29040:	ldr	r5, [r0, #4]
   29044:	cmp	r5, #0
   29048:	bne	29004 <myhtml_tag_static_search@@Base+0x80>
   2904c:	mov	r6, #0
   29050:	mov	r0, r6
   29054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29058:	andeq	sl, sp, r2, lsr r4
   2905c:	andeq	pc, lr, r0, lsr r6	; <UNPREDICTABLE>

00029060 <myhtml_tag_static_get_by_id@@Base>:
   29060:	ldr	r1, [pc, #12]	; 29074 <myhtml_tag_static_get_by_id@@Base+0x14>
   29064:	mov	r2, #44	; 0x2c
   29068:	add	r1, pc, r1
   2906c:	mla	r0, r0, r2, r1
   29070:	bx	lr
   29074:	andeq	r0, pc, ip, asr #29

00029078 <myhtml_token_create@@Base>:
   29078:	push	{r4, r5, r6, r7, fp, lr}
   2907c:	add	fp, sp, #16
   29080:	mov	r5, r0
   29084:	mov	r0, #24
   29088:	cmp	r1, #0
   2908c:	mov	r6, r1
   29090:	movweq	r6, #4096	; 0x1000
   29094:	bl	119a8 <mycore_malloc@plt>
   29098:	mov	r7, #0
   2909c:	cmp	r0, #0
   290a0:	beq	2911c <myhtml_token_create@@Base+0xa4>
   290a4:	mov	r4, r0
   290a8:	bl	10ebc <mcobject_async_create@plt>
   290ac:	cmp	r0, #0
   290b0:	str	r0, [r4, #4]
   290b4:	beq	29128 <myhtml_token_create@@Base+0xb0>
   290b8:	bl	10ebc <mcobject_async_create@plt>
   290bc:	str	r0, [r4, #8]
   290c0:	mov	r1, r0
   290c4:	ldr	r0, [r4, #4]
   290c8:	cmp	r1, #0
   290cc:	beq	29124 <myhtml_token_create@@Base+0xac>
   290d0:	mov	r1, #128	; 0x80
   290d4:	mov	r2, r6
   290d8:	mov	r3, #52	; 0x34
   290dc:	bl	10e20 <mcobject_async_init@plt>
   290e0:	ldr	r0, [r4, #8]
   290e4:	mov	r1, #128	; 0x80
   290e8:	mov	r2, r6
   290ec:	mov	r3, #68	; 0x44
   290f0:	bl	10e20 <mcobject_async_init@plt>
   290f4:	ldr	r0, [r4, #4]
   290f8:	mov	r1, #0
   290fc:	bl	1184c <mcobject_async_node_add@plt>
   29100:	str	r0, [r4, #12]
   29104:	mov	r1, #0
   29108:	ldr	r0, [r4, #8]
   2910c:	bl	1184c <mcobject_async_node_add@plt>
   29110:	mov	r7, r4
   29114:	str	r0, [r4, #16]
   29118:	str	r5, [r4]
   2911c:	mov	r0, r7
   29120:	pop	{r4, r5, r6, r7, fp, pc}
   29124:	bl	11a98 <mycore_free@plt>
   29128:	mov	r0, r4
   2912c:	bl	11a98 <mycore_free@plt>
   29130:	mov	r0, r7
   29134:	pop	{r4, r5, r6, r7, fp, pc}

00029138 <myhtml_token_clean@@Base>:
   29138:	push	{r4, sl, fp, lr}
   2913c:	add	fp, sp, #8
   29140:	mov	r4, r0
   29144:	ldr	r0, [r0, #4]
   29148:	ldr	r1, [r4, #12]
   2914c:	bl	116a8 <mcobject_async_node_clean@plt>
   29150:	ldr	r0, [r4, #8]
   29154:	ldr	r1, [r4, #16]
   29158:	pop	{r4, sl, fp, lr}
   2915c:	b	116a8 <mcobject_async_node_clean@plt>

00029160 <myhtml_token_clean_all@@Base>:
   29160:	push	{r4, sl, fp, lr}
   29164:	add	fp, sp, #8
   29168:	mov	r4, r0
   2916c:	ldr	r0, [r0, #4]
   29170:	bl	11c6c <mcobject_async_clean@plt>
   29174:	ldr	r0, [r4, #8]
   29178:	pop	{r4, sl, fp, lr}
   2917c:	b	11c6c <mcobject_async_clean@plt>

00029180 <myhtml_token_destroy@@Base>:
   29180:	cmp	r0, #0
   29184:	beq	291d0 <myhtml_token_destroy@@Base+0x50>
   29188:	push	{r4, sl, fp, lr}
   2918c:	add	fp, sp, #8
   29190:	mov	r4, r0
   29194:	ldr	r0, [r0, #4]
   29198:	cmp	r0, #0
   2919c:	beq	291ac <myhtml_token_destroy@@Base+0x2c>
   291a0:	mov	r1, #1
   291a4:	bl	118ac <mcobject_async_destroy@plt>
   291a8:	str	r0, [r4, #4]
   291ac:	ldr	r0, [r4, #8]
   291b0:	cmp	r0, #0
   291b4:	beq	291c4 <myhtml_token_destroy@@Base+0x44>
   291b8:	mov	r1, #1
   291bc:	bl	118ac <mcobject_async_destroy@plt>
   291c0:	str	r0, [r4, #8]
   291c4:	mov	r0, r4
   291c8:	bl	11a98 <mycore_free@plt>
   291cc:	pop	{r4, sl, fp, lr}
   291d0:	mov	r0, #0
   291d4:	bx	lr

000291d8 <myhtml_token_node_create@@Base>:
   291d8:	push	{r4, r5, fp, lr}
   291dc:	add	fp, sp, #8
   291e0:	ldr	r0, [r0, #4]
   291e4:	mov	r2, #0
   291e8:	mov	r5, #0
   291ec:	bl	1190c <mcobject_async_malloc@plt>
   291f0:	cmp	r0, #0
   291f4:	beq	29234 <myhtml_token_node_create@@Base+0x5c>
   291f8:	vmov.i32	q8, #0	; 0x00000000
   291fc:	mov	r4, r0
   29200:	mov	r0, #0
   29204:	mov	r1, #4
   29208:	str	r0, [r4, #48]	; 0x30
   2920c:	add	r0, r4, #32
   29210:	vst1.32	{d16-d17}, [r0]
   29214:	add	r0, r4, #16
   29218:	vst1.32	{d16-d17}, [r0]
   2921c:	mov	r0, #8
   29220:	str	r0, [r4, #48]	; 0x30
   29224:	mov	r0, r4
   29228:	vst1.32	{d16-d17}, [r0], r1
   2922c:	bl	11c90 <mycore_string_clean_all@plt>
   29230:	mov	r5, r4
   29234:	mov	r0, r5
   29238:	pop	{r4, r5, fp, pc}

0002923c <myhtml_token_node_clean@@Base>:
   2923c:	vmov.i32	q8, #0	; 0x00000000
   29240:	mov	r1, #0
   29244:	str	r1, [r0, #48]	; 0x30
   29248:	add	r1, r0, #32
   2924c:	vst1.32	{d16-d17}, [r1]
   29250:	add	r1, r0, #16
   29254:	vst1.32	{d16-d17}, [r1]
   29258:	mov	r1, #8
   2925c:	str	r1, [r0, #48]	; 0x30
   29260:	mov	r1, #4
   29264:	vst1.32	{d16-d17}, [r0], r1
   29268:	b	11c90 <mycore_string_clean_all@plt>

0002926c <myhtml_token_attr_create@@Base>:
   2926c:	push	{r4, r5, fp, lr}
   29270:	add	fp, sp, #8
   29274:	ldr	r0, [r0, #8]
   29278:	mov	r2, #0
   2927c:	mov	r5, #0
   29280:	bl	1190c <mcobject_async_malloc@plt>
   29284:	cmp	r0, #0
   29288:	beq	292d4 <myhtml_token_attr_create@@Base+0x68>
   2928c:	vmov.i32	q8, #0	; 0x00000000
   29290:	mov	r4, r0
   29294:	mov	r0, #1
   29298:	str	r0, [r4, #64]	; 0x40
   2929c:	add	r0, r4, #48	; 0x30
   292a0:	mov	r5, r4
   292a4:	vst1.32	{d16-d17}, [r0]
   292a8:	add	r0, r4, #32
   292ac:	vst1.32	{d16-d17}, [r0]
   292b0:	add	r0, r4, #16
   292b4:	vst1.32	{d16-d17}, [r0]
   292b8:	mov	r0, #28
   292bc:	vst1.32	{d16-d17}, [r5], r0
   292c0:	add	r0, r4, #8
   292c4:	bl	11c90 <mycore_string_clean_all@plt>
   292c8:	mov	r0, r5
   292cc:	bl	11c90 <mycore_string_clean_all@plt>
   292d0:	mov	r5, r4
   292d4:	mov	r0, r5
   292d8:	pop	{r4, r5, fp, pc}

000292dc <myhtml_token_attr_clean@@Base>:
   292dc:	push	{r4, sl, fp, lr}
   292e0:	add	fp, sp, #8
   292e4:	vmov.i32	q8, #0	; 0x00000000
   292e8:	mov	r1, #1
   292ec:	mov	r4, r0
   292f0:	str	r1, [r0, #64]	; 0x40
   292f4:	add	r1, r0, #48	; 0x30
   292f8:	vst1.32	{d16-d17}, [r1]
   292fc:	add	r1, r0, #32
   29300:	vst1.32	{d16-d17}, [r1]
   29304:	add	r1, r0, #16
   29308:	add	r0, r0, #8
   2930c:	vst1.32	{d16-d17}, [r1]
   29310:	mov	r1, #28
   29314:	vst1.32	{d16-d17}, [r4], r1
   29318:	bl	11c90 <mycore_string_clean_all@plt>
   2931c:	mov	r0, r4
   29320:	pop	{r4, sl, fp, lr}
   29324:	b	11c90 <mycore_string_clean_all@plt>

00029328 <myhtml_token_node_tag_id@@Base>:
   29328:	ldr	r0, [r0]
   2932c:	bx	lr

00029330 <myhtml_token_node_raw_position@@Base>:
   29330:	cmp	r1, #0
   29334:	moveq	r1, #0
   29338:	streq	r1, [r0]
   2933c:	streq	r1, [r0, #4]
   29340:	bxeq	lr
   29344:	ldr	r2, [r1, #24]
   29348:	ldr	r1, [r1, #28]
   2934c:	str	r2, [r0]
   29350:	str	r1, [r0, #4]
   29354:	bx	lr

00029358 <myhtml_token_node_element_position@@Base>:
   29358:	cmp	r1, #0
   2935c:	moveq	r1, #0
   29360:	streq	r1, [r0]
   29364:	streq	r1, [r0, #4]
   29368:	bxeq	lr
   2936c:	ldr	r2, [r1, #32]
   29370:	ldr	r1, [r1, #36]	; 0x24
   29374:	str	r2, [r0]
   29378:	str	r1, [r0, #4]
   2937c:	bx	lr

00029380 <myhtml_token_node_attribute_first@@Base>:
   29380:	ldr	r0, [r0, #40]	; 0x28
   29384:	bx	lr

00029388 <myhtml_token_node_attribute_last@@Base>:
   29388:	ldr	r0, [r0, #44]	; 0x2c
   2938c:	bx	lr

00029390 <myhtml_token_node_text@@Base>:
   29390:	cmp	r1, #0
   29394:	ldrne	r2, [r0, #12]
   29398:	strne	r2, [r1]
   2939c:	ldr	r0, [r0, #4]
   293a0:	bx	lr

000293a4 <myhtml_token_node_string@@Base>:
   293a4:	add	r0, r0, #4
   293a8:	bx	lr

000293ac <myhtml_token_node_is_close@@Base>:
   293ac:	ldr	r0, [r0, #48]	; 0x30
   293b0:	and	r0, r0, #1
   293b4:	bx	lr

000293b8 <myhtml_token_node_is_close_self@@Base>:
   293b8:	ldr	r0, [r0, #48]	; 0x30
   293bc:	ubfx	r0, r0, #1, #1
   293c0:	bx	lr

000293c4 <myhtml_token_node_wait_for_done@@Base>:
   293c4:	push	{r4, r5, fp, lr}
   293c8:	add	fp, sp, #8
   293cc:	mov	r5, r0
   293d0:	ldr	r0, [r1, #48]	; 0x30
   293d4:	tst	r0, #4
   293d8:	popne	{r4, r5, fp, pc}
   293dc:	mov	r4, r1
   293e0:	ldr	r0, [r5]
   293e4:	ldr	r0, [r0]
   293e8:	ldr	r0, [r0]
   293ec:	ldr	r0, [r0, #24]
   293f0:	bl	11138 <mythread_nanosleep_sleep@plt>
   293f4:	ldr	r0, [r4, #48]	; 0x30
   293f8:	tst	r0, #4
   293fc:	beq	293e0 <myhtml_token_node_wait_for_done@@Base+0x1c>
   29400:	pop	{r4, r5, fp, pc}

00029404 <myhtml_token_set_done@@Base>:
   29404:	ldr	r1, [r0, #48]	; 0x30
   29408:	orr	r1, r1, #4
   2940c:	str	r1, [r0, #48]	; 0x30
   29410:	bx	lr

00029414 <myhtml_token_node_clone@@Base>:
   29414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29418:	add	fp, sp, #28
   2941c:	sub	sp, sp, #4
   29420:	cmp	r1, #0
   29424:	beq	294f8 <myhtml_token_node_clone@@Base+0xe4>
   29428:	mov	r5, r0
   2942c:	ldr	r8, [r0]
   29430:	ldr	r0, [r0, #4]
   29434:	mov	r9, r1
   29438:	mov	r1, r2
   2943c:	mov	r2, #0
   29440:	mov	r4, r3
   29444:	mov	r7, #0
   29448:	bl	1190c <mcobject_async_malloc@plt>
   2944c:	cmp	r0, #0
   29450:	beq	294fc <myhtml_token_node_clone@@Base+0xe8>
   29454:	vmov.i32	q8, #0	; 0x00000000
   29458:	mov	r7, #0
   2945c:	mov	r6, r0
   29460:	str	r8, [sp]
   29464:	str	r7, [r0, #48]	; 0x30
   29468:	add	r0, r0, #32
   2946c:	mov	sl, r6
   29470:	add	r8, r6, #4
   29474:	vst1.32	{d16-d17}, [r0]
   29478:	add	r0, r6, #16
   2947c:	vst1.32	{d16-d17}, [r0]
   29480:	mov	r0, #8
   29484:	str	r0, [r6, #48]	; 0x30
   29488:	mov	r0, #24
   2948c:	vst1.32	{d16-d17}, [sl], r0
   29490:	mov	r0, r8
   29494:	bl	11c90 <mycore_string_clean_all@plt>
   29498:	ldr	r0, [r9]
   2949c:	str	r0, [r6]
   294a0:	ldr	r0, [r9, #48]	; 0x30
   294a4:	str	r7, [r6, #40]	; 0x28
   294a8:	str	r7, [r6, #44]	; 0x2c
   294ac:	str	r0, [r6, #48]	; 0x30
   294b0:	add	r0, r9, #24
   294b4:	vld1.32	{d16-d17}, [r0]
   294b8:	vst1.32	{d16-d17}, [sl]
   294bc:	ldr	r2, [r9, #12]
   294c0:	cmp	r2, #0
   294c4:	beq	29508 <myhtml_token_node_clone@@Base+0xf4>
   294c8:	ldr	r1, [sp]
   294cc:	add	r3, r2, #1
   294d0:	mov	r2, r8
   294d4:	ldr	r0, [r1, #4]
   294d8:	ldr	r1, [r1, #52]	; 0x34
   294dc:	bl	114f8 <mycore_string_init@plt>
   294e0:	ldr	r1, [r9, #4]
   294e4:	ldr	r2, [r9, #12]
   294e8:	mov	r0, r8
   294ec:	bl	116f0 <mycore_string_append@plt>
   294f0:	ldr	r7, [r9, #40]	; 0x28
   294f4:	b	29530 <myhtml_token_node_clone@@Base+0x11c>
   294f8:	mov	r7, #0
   294fc:	mov	r0, r7
   29500:	sub	sp, fp, #28
   29504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29508:	mov	r0, r8
   2950c:	bl	11c90 <mycore_string_clean_all@plt>
   29510:	ldr	r7, [r9, #40]	; 0x28
   29514:	b	29530 <myhtml_token_node_clone@@Base+0x11c>
   29518:	mov	r0, r5
   2951c:	mov	r1, r7
   29520:	mov	r2, r6
   29524:	mov	r3, r4
   29528:	bl	11600 <myhtml_token_attr_copy@plt>
   2952c:	ldr	r7, [r7]
   29530:	cmp	r7, #0
   29534:	bne	29518 <myhtml_token_node_clone@@Base+0x104>
   29538:	mov	r7, r6
   2953c:	mov	r0, r7
   29540:	sub	sp, fp, #28
   29544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00029548 <myhtml_token_node_attr_copy@@Base>:
   29548:	push	{r4, r5, r6, r7, fp, lr}
   2954c:	add	fp, sp, #16
   29550:	ldr	r7, [r1, #40]	; 0x28
   29554:	cmp	r7, #0
   29558:	beq	29588 <myhtml_token_node_attr_copy@@Base+0x40>
   2955c:	mov	r4, r3
   29560:	mov	r5, r2
   29564:	mov	r6, r0
   29568:	mov	r0, r6
   2956c:	mov	r1, r7
   29570:	mov	r2, r5
   29574:	mov	r3, r4
   29578:	bl	11600 <myhtml_token_attr_copy@plt>
   2957c:	ldr	r7, [r7]
   29580:	cmp	r7, #0
   29584:	bne	29568 <myhtml_token_node_attr_copy@@Base+0x20>
   29588:	pop	{r4, r5, r6, r7, fp, pc}

0002958c <myhtml_token_node_text_append@@Base>:
   2958c:	push	{r4, r5, r6, sl, fp, lr}
   29590:	add	fp, sp, #16
   29594:	mov	r5, r2
   29598:	ldr	r2, [r0]
   2959c:	add	r6, r1, #4
   295a0:	mov	r4, r3
   295a4:	add	r3, r3, #2
   295a8:	ldr	r0, [r2, #4]
   295ac:	ldr	r2, [r2, #52]	; 0x34
   295b0:	mov	r1, r2
   295b4:	mov	r2, r6
   295b8:	bl	114f8 <mycore_string_init@plt>
   295bc:	mov	r0, r6
   295c0:	mov	r1, r5
   295c4:	mov	r2, r4
   295c8:	pop	{r4, r5, r6, sl, fp, lr}
   295cc:	b	116f0 <mycore_string_append@plt>

000295d0 <myhtml_token_node_attr_append@@Base>:
   295d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   295d4:	add	fp, sp, #28
   295d8:	sub	sp, sp, #4
   295dc:	mov	r4, r1
   295e0:	mov	sl, r0
   295e4:	ldr	r0, [r0, #8]
   295e8:	ldr	r1, [fp, #16]
   295ec:	mov	r9, r2
   295f0:	mov	r2, #0
   295f4:	mov	r6, r3
   295f8:	mov	r7, #0
   295fc:	bl	1190c <mcobject_async_malloc@plt>
   29600:	ldr	r8, [fp, #12]
   29604:	mov	r5, r0
   29608:	cmp	r6, #0
   2960c:	str	r7, [r0]
   29610:	beq	29694 <myhtml_token_node_attr_append@@Base+0xc4>
   29614:	ldr	r1, [sl]
   29618:	add	r7, r5, #8
   2961c:	add	r3, r6, #1
   29620:	mov	r2, r7
   29624:	ldr	r0, [r1, #4]
   29628:	ldr	r1, [r1, #52]	; 0x34
   2962c:	bl	114f8 <mycore_string_init@plt>
   29630:	mov	r0, r7
   29634:	mov	r1, r9
   29638:	mov	r2, r6
   2963c:	bl	11564 <mycore_string_append_lowercase@plt>
   29640:	cmp	r8, #0
   29644:	beq	296a4 <myhtml_token_node_attr_append@@Base+0xd4>
   29648:	ldr	r1, [sl]
   2964c:	ldr	r6, [fp, #8]
   29650:	add	r7, r5, #28
   29654:	add	r3, r8, #1
   29658:	mov	r2, r7
   2965c:	ldr	r0, [r1, #4]
   29660:	ldr	r1, [r1, #52]	; 0x34
   29664:	bl	114f8 <mycore_string_init@plt>
   29668:	mov	r0, r7
   2966c:	mov	r1, r6
   29670:	mov	r2, r8
   29674:	bl	116f0 <mycore_string_append@plt>
   29678:	ldr	r0, [r4, #40]	; 0x28
   2967c:	cmp	r0, #0
   29680:	beq	296b8 <myhtml_token_node_attr_append@@Base+0xe8>
   29684:	ldr	r0, [r4, #44]!	; 0x2c
   29688:	str	r5, [r0]
   2968c:	str	r0, [r5, #4]
   29690:	b	296c8 <myhtml_token_node_attr_append@@Base+0xf8>
   29694:	add	r0, r5, #8
   29698:	bl	11c90 <mycore_string_clean_all@plt>
   2969c:	cmp	r8, #0
   296a0:	bne	29648 <myhtml_token_node_attr_append@@Base+0x78>
   296a4:	add	r0, r5, #28
   296a8:	bl	11c90 <mycore_string_clean_all@plt>
   296ac:	ldr	r0, [r4, #40]	; 0x28
   296b0:	cmp	r0, #0
   296b4:	bne	29684 <myhtml_token_node_attr_append@@Base+0xb4>
   296b8:	mov	r0, #0
   296bc:	str	r0, [r5, #4]
   296c0:	str	r5, [r4, #40]	; 0x28
   296c4:	add	r4, r4, #44	; 0x2c
   296c8:	mov	r0, #1
   296cc:	str	r5, [r4]
   296d0:	str	r0, [r5, #64]	; 0x40
   296d4:	mov	r0, r5
   296d8:	sub	sp, fp, #28
   296dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000296e0 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   296e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   296e4:	add	fp, sp, #28
   296e8:	sub	sp, sp, #4
   296ec:	mov	r9, r1
   296f0:	mov	sl, r0
   296f4:	ldr	r0, [r0, #8]
   296f8:	ldr	r1, [fp, #16]
   296fc:	str	r2, [sp]
   29700:	mov	r2, #0
   29704:	mov	r6, r3
   29708:	mov	r8, #0
   2970c:	bl	1190c <mcobject_async_malloc@plt>
   29710:	ldr	r4, [fp, #20]
   29714:	ldr	r7, [fp, #12]
   29718:	mov	r5, r0
   2971c:	cmp	r6, #0
   29720:	str	r8, [r0]
   29724:	beq	297c0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe0>
   29728:	ldr	r1, [sl]
   2972c:	add	r8, r5, #8
   29730:	add	r3, r6, #1
   29734:	mov	r2, r8
   29738:	ldr	r0, [r1, #4]
   2973c:	ldr	r1, [r1, #52]	; 0x34
   29740:	bl	114f8 <mycore_string_init@plt>
   29744:	mov	r0, r8
   29748:	cmp	r4, #0
   2974c:	beq	2980c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x12c>
   29750:	ldr	r1, [sp]
   29754:	mov	r2, r6
   29758:	mov	r3, r4
   2975c:	bl	10f70 <myencoding_string_append_lowercase_ascii@plt>
   29760:	cmp	r7, #0
   29764:	beq	297d0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf0>
   29768:	ldr	r1, [sl]
   2976c:	ldr	r8, [fp, #8]
   29770:	add	r6, r5, #28
   29774:	add	r3, r7, #1
   29778:	mov	r2, r6
   2977c:	ldr	r0, [r1, #4]
   29780:	ldr	r1, [r1, #52]	; 0x34
   29784:	bl	114f8 <mycore_string_init@plt>
   29788:	mov	r0, r6
   2978c:	mov	r1, r8
   29790:	mov	r2, r7
   29794:	cmp	r4, #0
   29798:	beq	29824 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x144>
   2979c:	mov	r3, r4
   297a0:	bl	113b4 <myencoding_string_append@plt>
   297a4:	ldr	r0, [r9, #40]	; 0x28
   297a8:	cmp	r0, #0
   297ac:	beq	297e4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x104>
   297b0:	ldr	r0, [r9, #44]!	; 0x2c
   297b4:	str	r5, [r0]
   297b8:	str	r0, [r5, #4]
   297bc:	b	297f4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x114>
   297c0:	add	r0, r5, #8
   297c4:	bl	11c90 <mycore_string_clean_all@plt>
   297c8:	cmp	r7, #0
   297cc:	bne	29768 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   297d0:	add	r0, r5, #28
   297d4:	bl	11c90 <mycore_string_clean_all@plt>
   297d8:	ldr	r0, [r9, #40]	; 0x28
   297dc:	cmp	r0, #0
   297e0:	bne	297b0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd0>
   297e4:	mov	r0, #0
   297e8:	str	r0, [r5, #4]
   297ec:	str	r5, [r9, #40]	; 0x28
   297f0:	add	r9, r9, #44	; 0x2c
   297f4:	mov	r0, #1
   297f8:	str	r5, [r9]
   297fc:	str	r0, [r5, #64]	; 0x40
   29800:	mov	r0, r5
   29804:	sub	sp, fp, #28
   29808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2980c:	ldr	r1, [sp]
   29810:	mov	r2, r6
   29814:	bl	11564 <mycore_string_append_lowercase@plt>
   29818:	cmp	r7, #0
   2981c:	bne	29768 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   29820:	b	297d0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf0>
   29824:	bl	116f0 <mycore_string_append@plt>
   29828:	ldr	r0, [r9, #40]	; 0x28
   2982c:	cmp	r0, #0
   29830:	bne	297b0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd0>
   29834:	b	297e4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x104>

00029838 <myhtml_token_node_attr_copy_with_check@@Base>:
   29838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2983c:	add	fp, sp, #28
   29840:	sub	sp, sp, #4
   29844:	ldr	r7, [r1, #40]	; 0x28
   29848:	cmp	r7, #0
   2984c:	beq	298e4 <myhtml_token_node_attr_copy_with_check@@Base+0xac>
   29850:	mov	r8, r3
   29854:	mov	sl, r2
   29858:	mov	r9, r0
   2985c:	ldr	r6, [r7, #16]
   29860:	cmp	r6, #0
   29864:	bne	29898 <myhtml_token_node_attr_copy_with_check@@Base+0x60>
   29868:	b	29880 <myhtml_token_node_attr_copy_with_check@@Base+0x48>
   2986c:	mov	r0, r9
   29870:	mov	r1, r7
   29874:	mov	r2, sl
   29878:	mov	r3, r8
   2987c:	bl	11600 <myhtml_token_attr_copy@plt>
   29880:	ldr	r7, [r7]
   29884:	cmp	r7, #0
   29888:	beq	298e4 <myhtml_token_node_attr_copy_with_check@@Base+0xac>
   2988c:	ldr	r6, [r7, #16]
   29890:	cmp	r6, #0
   29894:	beq	29880 <myhtml_token_node_attr_copy_with_check@@Base+0x48>
   29898:	ldr	r5, [sl, #40]	; 0x28
   2989c:	cmp	r5, #0
   298a0:	beq	2986c <myhtml_token_node_attr_copy_with_check@@Base+0x34>
   298a4:	ldr	r4, [r7, #8]
   298a8:	ldr	r0, [r5, #16]
   298ac:	cmp	r0, r6
   298b0:	beq	298cc <myhtml_token_node_attr_copy_with_check@@Base+0x94>
   298b4:	ldr	r5, [r5]
   298b8:	cmp	r5, #0
   298bc:	beq	2986c <myhtml_token_node_attr_copy_with_check@@Base+0x34>
   298c0:	ldr	r0, [r5, #16]
   298c4:	cmp	r0, r6
   298c8:	bne	298b4 <myhtml_token_node_attr_copy_with_check@@Base+0x7c>
   298cc:	ldr	r0, [r5, #8]
   298d0:	mov	r1, r4
   298d4:	bl	10db4 <mycore_strcmp@plt>
   298d8:	cmp	r0, #0
   298dc:	bne	298b4 <myhtml_token_node_attr_copy_with_check@@Base+0x7c>
   298e0:	b	29880 <myhtml_token_node_attr_copy_with_check@@Base+0x48>
   298e4:	sub	sp, fp, #28
   298e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000298ec <myhtml_token_attr_by_name@@Base>:
   298ec:	push	{r4, r5, r6, r7, fp, lr}
   298f0:	add	fp, sp, #16
   298f4:	ldr	r7, [r0, #40]	; 0x28
   298f8:	mov	r4, #0
   298fc:	cmp	r7, #0
   29900:	beq	2994c <myhtml_token_attr_by_name@@Base+0x60>
   29904:	mov	r5, r2
   29908:	mov	r6, r1
   2990c:	ldr	r0, [r7, #16]
   29910:	cmp	r0, r5
   29914:	beq	29930 <myhtml_token_attr_by_name@@Base+0x44>
   29918:	ldr	r7, [r7]
   2991c:	cmp	r7, #0
   29920:	beq	2994c <myhtml_token_attr_by_name@@Base+0x60>
   29924:	ldr	r0, [r7, #16]
   29928:	cmp	r0, r5
   2992c:	bne	29918 <myhtml_token_attr_by_name@@Base+0x2c>
   29930:	ldr	r0, [r7, #8]
   29934:	mov	r1, r6
   29938:	bl	10db4 <mycore_strcmp@plt>
   2993c:	cmp	r0, #0
   29940:	bne	29918 <myhtml_token_attr_by_name@@Base+0x2c>
   29944:	mov	r0, r7
   29948:	pop	{r4, r5, r6, r7, fp, pc}
   2994c:	mov	r0, r4
   29950:	pop	{r4, r5, r6, r7, fp, pc}

00029954 <myhtml_token_attr_copy@@Base>:
   29954:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29958:	add	fp, sp, #24
   2995c:	mov	r7, r0
   29960:	ldr	r0, [r0, #8]
   29964:	mov	r8, r2
   29968:	mov	r4, r1
   2996c:	mov	r1, r3
   29970:	mov	r2, #0
   29974:	mov	r5, #0
   29978:	bl	1190c <mcobject_async_malloc@plt>
   2997c:	str	r5, [r0]
   29980:	mov	r6, r0
   29984:	ldr	r2, [r4, #16]
   29988:	cmp	r2, #0
   2998c:	beq	29a10 <myhtml_token_attr_copy@@Base+0xbc>
   29990:	ldr	r1, [r7]
   29994:	add	r5, r6, #8
   29998:	add	r3, r2, #1
   2999c:	mov	r2, r5
   299a0:	ldr	r0, [r1, #4]
   299a4:	ldr	r1, [r1, #52]	; 0x34
   299a8:	bl	114f8 <mycore_string_init@plt>
   299ac:	ldr	r1, [r4, #8]
   299b0:	ldr	r2, [r4, #16]
   299b4:	mov	r0, r5
   299b8:	bl	11564 <mycore_string_append_lowercase@plt>
   299bc:	ldr	r2, [r4, #36]	; 0x24
   299c0:	cmp	r2, #0
   299c4:	beq	29a24 <myhtml_token_attr_copy@@Base+0xd0>
   299c8:	ldr	r1, [r7]
   299cc:	add	r5, r6, #28
   299d0:	add	r3, r2, #1
   299d4:	mov	r2, r5
   299d8:	ldr	r0, [r1, #4]
   299dc:	ldr	r1, [r1, #52]	; 0x34
   299e0:	bl	114f8 <mycore_string_init@plt>
   299e4:	ldr	r1, [r4, #28]
   299e8:	ldr	r2, [r4, #36]	; 0x24
   299ec:	mov	r0, r5
   299f0:	bl	116f0 <mycore_string_append@plt>
   299f4:	ldr	r0, [r8, #40]	; 0x28
   299f8:	cmp	r0, #0
   299fc:	beq	29a38 <myhtml_token_attr_copy@@Base+0xe4>
   29a00:	ldr	r0, [r8, #44]!	; 0x2c
   29a04:	str	r6, [r0]
   29a08:	str	r0, [r6, #4]
   29a0c:	b	29a48 <myhtml_token_attr_copy@@Base+0xf4>
   29a10:	add	r0, r6, #8
   29a14:	bl	11c90 <mycore_string_clean_all@plt>
   29a18:	ldr	r2, [r4, #36]	; 0x24
   29a1c:	cmp	r2, #0
   29a20:	bne	299c8 <myhtml_token_attr_copy@@Base+0x74>
   29a24:	add	r0, r6, #28
   29a28:	bl	11c90 <mycore_string_clean_all@plt>
   29a2c:	ldr	r0, [r8, #40]	; 0x28
   29a30:	cmp	r0, #0
   29a34:	bne	29a00 <myhtml_token_attr_copy@@Base+0xac>
   29a38:	mov	r0, #0
   29a3c:	str	r0, [r6, #4]
   29a40:	str	r6, [r8, #40]	; 0x28
   29a44:	add	r8, r8, #44	; 0x2c
   29a48:	str	r6, [r8]
   29a4c:	ldr	r0, [r4, #64]	; 0x40
   29a50:	str	r0, [r6, #64]	; 0x40
   29a54:	mov	r0, #1
   29a58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029a5c <myhtml_token_attr_match@@Base>:
   29a5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29a60:	add	fp, sp, #24
   29a64:	ldr	r4, [r1, #40]	; 0x28
   29a68:	cmp	r4, #0
   29a6c:	beq	29ae0 <myhtml_token_attr_match@@Base+0x84>
   29a70:	ldr	r7, [fp, #12]
   29a74:	ldr	r8, [fp, #8]
   29a78:	mov	r5, r3
   29a7c:	mov	r6, r2
   29a80:	ldr	r0, [r4, #16]
   29a84:	cmp	r0, r5
   29a88:	beq	29aa4 <myhtml_token_attr_match@@Base+0x48>
   29a8c:	ldr	r4, [r4]
   29a90:	cmp	r4, #0
   29a94:	beq	29ae0 <myhtml_token_attr_match@@Base+0x84>
   29a98:	ldr	r0, [r4, #16]
   29a9c:	cmp	r0, r5
   29aa0:	bne	29a8c <myhtml_token_attr_match@@Base+0x30>
   29aa4:	ldr	r0, [r4, #36]	; 0x24
   29aa8:	cmp	r0, r7
   29aac:	bne	29a8c <myhtml_token_attr_match@@Base+0x30>
   29ab0:	ldr	r0, [r4, #8]
   29ab4:	mov	r1, r6
   29ab8:	bl	10db4 <mycore_strcmp@plt>
   29abc:	cmp	r0, #0
   29ac0:	bne	29a8c <myhtml_token_attr_match@@Base+0x30>
   29ac4:	ldr	r0, [r4, #28]
   29ac8:	mov	r1, r8
   29acc:	bl	10db4 <mycore_strcmp@plt>
   29ad0:	cmp	r0, #0
   29ad4:	movne	r4, #0
   29ad8:	mov	r0, r4
   29adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29ae0:	mov	r4, #0
   29ae4:	mov	r0, r4
   29ae8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029aec <myhtml_token_attr_match_case@@Base>:
   29aec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29af0:	add	fp, sp, #24
   29af4:	ldr	r4, [r1, #40]	; 0x28
   29af8:	cmp	r4, #0
   29afc:	beq	29b70 <myhtml_token_attr_match_case@@Base+0x84>
   29b00:	ldr	r7, [fp, #12]
   29b04:	ldr	r8, [fp, #8]
   29b08:	mov	r5, r3
   29b0c:	mov	r6, r2
   29b10:	ldr	r0, [r4, #16]
   29b14:	cmp	r0, r5
   29b18:	beq	29b34 <myhtml_token_attr_match_case@@Base+0x48>
   29b1c:	ldr	r4, [r4]
   29b20:	cmp	r4, #0
   29b24:	beq	29b70 <myhtml_token_attr_match_case@@Base+0x84>
   29b28:	ldr	r0, [r4, #16]
   29b2c:	cmp	r0, r5
   29b30:	bne	29b1c <myhtml_token_attr_match_case@@Base+0x30>
   29b34:	ldr	r0, [r4, #36]	; 0x24
   29b38:	cmp	r0, r7
   29b3c:	bne	29b1c <myhtml_token_attr_match_case@@Base+0x30>
   29b40:	ldr	r0, [r4, #8]
   29b44:	mov	r1, r6
   29b48:	bl	10db4 <mycore_strcmp@plt>
   29b4c:	cmp	r0, #0
   29b50:	bne	29b1c <myhtml_token_attr_match_case@@Base+0x30>
   29b54:	ldr	r0, [r4, #28]
   29b58:	mov	r1, r8
   29b5c:	bl	11468 <mycore_strcasecmp@plt>
   29b60:	cmp	r0, #0
   29b64:	movne	r4, #0
   29b68:	mov	r0, r4
   29b6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29b70:	mov	r4, #0
   29b74:	mov	r0, r4
   29b78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029b7c <myhtml_token_adjust_mathml_attributes@@Base>:
   29b7c:	push	{r4, r5, fp, lr}
   29b80:	add	fp, sp, #8
   29b84:	ldr	r5, [r0, #40]	; 0x28
   29b88:	cmp	r5, #0
   29b8c:	popeq	{r4, r5, fp, pc}
   29b90:	ldr	r4, [pc, #96]	; 29bf8 <myhtml_token_adjust_mathml_attributes@@Base+0x7c>
   29b94:	add	r4, pc, r4
   29b98:	ldr	r0, [r5, #16]
   29b9c:	cmp	r0, #13
   29ba0:	beq	29bbc <myhtml_token_adjust_mathml_attributes@@Base+0x40>
   29ba4:	ldr	r5, [r5]
   29ba8:	cmp	r5, #0
   29bac:	beq	29bf4 <myhtml_token_adjust_mathml_attributes@@Base+0x78>
   29bb0:	ldr	r0, [r5, #16]
   29bb4:	cmp	r0, #13
   29bb8:	bne	29ba4 <myhtml_token_adjust_mathml_attributes@@Base+0x28>
   29bbc:	ldr	r0, [r5, #8]
   29bc0:	mov	r1, r4
   29bc4:	bl	10db4 <mycore_strcmp@plt>
   29bc8:	cmp	r0, #0
   29bcc:	bne	29ba4 <myhtml_token_adjust_mathml_attributes@@Base+0x28>
   29bd0:	ldr	r0, [r5, #8]
   29bd4:	ldr	r1, [pc, #32]	; 29bfc <myhtml_token_adjust_mathml_attributes@@Base+0x80>
   29bd8:	add	r1, pc, r1
   29bdc:	vldr	d16, [r1]
   29be0:	add	r1, r1, #5
   29be4:	vld1.8	{d17}, [r1]
   29be8:	vst1.8	{d16}, [r0]
   29bec:	add	r0, r0, #5
   29bf0:	vst1.8	{d17}, [r0]
   29bf4:	pop	{r4, r5, fp, pc}
   29bf8:	andeq	r9, sp, r2, lsr #31
   29bfc:	ldrdeq	sl, [sp], -r8

00029c00 <_myhtml_token_create_copy_srt@@Base>:
   29c00:	push	{r4, r5, r6, sl, fp, lr}
   29c04:	add	fp, sp, #16
   29c08:	mov	r6, r1
   29c0c:	ldr	r1, [r0]
   29c10:	mov	r5, r2
   29c14:	add	r2, r2, #2
   29c18:	mov	r4, r3
   29c1c:	ldr	r0, [r1, #4]
   29c20:	ldr	r1, [r1, #52]	; 0x34
   29c24:	bl	1172c <mchar_async_malloc@plt>
   29c28:	str	r0, [r4]
   29c2c:	mov	r1, r6
   29c30:	mov	r2, r5
   29c34:	pop	{r4, r5, r6, sl, fp, lr}
   29c38:	b	112ac <mycore_string_raw_copy@plt>

00029c3c <myhtml_token_strict_doctype_by_token@@Base>:
   29c3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29c40:	add	fp, sp, #24
   29c44:	ldr	r5, [r1, #40]	; 0x28
   29c48:	mov	r4, r2
   29c4c:	mov	r8, r0
   29c50:	cmp	r5, #0
   29c54:	beq	29d64 <myhtml_token_strict_doctype_by_token@@Base+0x128>
   29c58:	ldr	r6, [r5, #16]
   29c5c:	cmp	r6, #0
   29c60:	beq	29d64 <myhtml_token_strict_doctype_by_token@@Base+0x128>
   29c64:	ldr	r1, [r8]
   29c68:	ldr	r7, [r5, #8]
   29c6c:	add	r2, r6, #2
   29c70:	ldr	r0, [r1, #4]
   29c74:	ldr	r1, [r1, #52]	; 0x34
   29c78:	bl	1172c <mchar_async_malloc@plt>
   29c7c:	mov	r1, r7
   29c80:	mov	r2, r6
   29c84:	str	r0, [r4, #4]
   29c88:	bl	112ac <mycore_string_raw_copy@plt>
   29c8c:	ldr	r1, [r4, #4]
   29c90:	ldr	r0, [pc, #540]	; 29eb4 <myhtml_token_strict_doctype_by_token@@Base+0x278>
   29c94:	add	r0, pc, r0
   29c98:	bl	10db4 <mycore_strcmp@plt>
   29c9c:	clz	r0, r0
   29ca0:	lsr	r0, r0, #5
   29ca4:	strb	r0, [r4]
   29ca8:	ldr	r5, [r5]
   29cac:	cmp	r5, #0
   29cb0:	beq	29e74 <myhtml_token_strict_doctype_by_token@@Base+0x238>
   29cb4:	ldr	r0, [r5, #36]	; 0x24
   29cb8:	cmp	r0, #0
   29cbc:	beq	29e74 <myhtml_token_strict_doctype_by_token@@Base+0x238>
   29cc0:	ldr	r0, [r5, #28]
   29cc4:	ldr	r1, [pc, #492]	; 29eb8 <myhtml_token_strict_doctype_by_token@@Base+0x27c>
   29cc8:	add	r1, pc, r1
   29ccc:	bl	11468 <mycore_strcasecmp@plt>
   29cd0:	cmp	r0, #0
   29cd4:	beq	29dc4 <myhtml_token_strict_doctype_by_token@@Base+0x188>
   29cd8:	ldr	r0, [r5, #28]
   29cdc:	ldr	r2, [r5, #36]	; 0x24
   29ce0:	ldr	r1, [pc, #476]	; 29ec4 <myhtml_token_strict_doctype_by_token@@Base+0x288>
   29ce4:	add	r1, pc, r1
   29ce8:	bl	11288 <mycore_strncasecmp@plt>
   29cec:	cmp	r0, #0
   29cf0:	bne	29e48 <myhtml_token_strict_doctype_by_token@@Base+0x20c>
   29cf4:	ldr	r6, [r5]
   29cf8:	cmp	r6, #0
   29cfc:	beq	29e48 <myhtml_token_strict_doctype_by_token@@Base+0x20c>
   29d00:	ldr	r0, [r6, #36]	; 0x24
   29d04:	cmp	r0, #0
   29d08:	beq	29e48 <myhtml_token_strict_doctype_by_token@@Base+0x20c>
   29d0c:	ldr	r1, [r8]
   29d10:	mov	r2, #3
   29d14:	ldr	r0, [r1, #4]
   29d18:	ldr	r1, [r1, #52]	; 0x34
   29d1c:	bl	1172c <mchar_async_malloc@plt>
   29d20:	str	r0, [r4, #8]
   29d24:	mov	r2, #1
   29d28:	ldr	r1, [pc, #408]	; 29ec8 <myhtml_token_strict_doctype_by_token@@Base+0x28c>
   29d2c:	add	r1, pc, r1
   29d30:	bl	112ac <mycore_string_raw_copy@plt>
   29d34:	ldr	r1, [r8]
   29d38:	ldr	r5, [r6, #28]
   29d3c:	ldr	r6, [r6, #36]	; 0x24
   29d40:	ldr	r0, [r1, #4]
   29d44:	ldr	r1, [r1, #52]	; 0x34
   29d48:	add	r2, r6, #2
   29d4c:	bl	1172c <mchar_async_malloc@plt>
   29d50:	str	r0, [r4, #12]
   29d54:	mov	r1, r5
   29d58:	mov	r2, r6
   29d5c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   29d60:	b	112ac <mycore_string_raw_copy@plt>
   29d64:	mov	r5, #0
   29d68:	mov	r2, #3
   29d6c:	strb	r5, [r4]
   29d70:	ldr	r1, [r8]
   29d74:	ldr	r0, [r1, #4]
   29d78:	ldr	r1, [r1, #52]	; 0x34
   29d7c:	bl	1172c <mchar_async_malloc@plt>
   29d80:	str	r0, [r4, #4]
   29d84:	mov	r2, #1
   29d88:	ldr	r1, [pc, #300]	; 29ebc <myhtml_token_strict_doctype_by_token@@Base+0x280>
   29d8c:	add	r1, pc, r1
   29d90:	bl	112ac <mycore_string_raw_copy@plt>
   29d94:	ldr	r0, [r4, #8]
   29d98:	cmp	r0, #0
   29d9c:	beq	29da4 <myhtml_token_strict_doctype_by_token@@Base+0x168>
   29da0:	bl	11a98 <mycore_free@plt>
   29da4:	str	r5, [r4, #8]
   29da8:	ldr	r0, [r4, #12]
   29dac:	cmp	r0, #0
   29db0:	beq	29db8 <myhtml_token_strict_doctype_by_token@@Base+0x17c>
   29db4:	bl	11a98 <mycore_free@plt>
   29db8:	mov	r0, #0
   29dbc:	str	r0, [r4, #12]
   29dc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29dc4:	ldr	r5, [r5]
   29dc8:	cmp	r5, #0
   29dcc:	beq	29e48 <myhtml_token_strict_doctype_by_token@@Base+0x20c>
   29dd0:	ldr	r6, [r5, #36]	; 0x24
   29dd4:	cmp	r6, #0
   29dd8:	beq	29e48 <myhtml_token_strict_doctype_by_token@@Base+0x20c>
   29ddc:	ldr	r1, [r8]
   29de0:	ldr	r7, [r5, #28]
   29de4:	add	r2, r6, #2
   29de8:	ldr	r0, [r1, #4]
   29dec:	ldr	r1, [r1, #52]	; 0x34
   29df0:	bl	1172c <mchar_async_malloc@plt>
   29df4:	mov	r1, r7
   29df8:	mov	r2, r6
   29dfc:	str	r0, [r4, #8]
   29e00:	bl	112ac <mycore_string_raw_copy@plt>
   29e04:	ldr	r0, [r5]
   29e08:	cmp	r0, #0
   29e0c:	beq	29e78 <myhtml_token_strict_doctype_by_token@@Base+0x23c>
   29e10:	ldr	r6, [r0, #36]	; 0x24
   29e14:	cmp	r6, #0
   29e18:	beq	29e78 <myhtml_token_strict_doctype_by_token@@Base+0x23c>
   29e1c:	ldr	r1, [r8]
   29e20:	ldr	r7, [r0, #28]
   29e24:	add	r2, r6, #2
   29e28:	ldr	r0, [r1, #4]
   29e2c:	ldr	r1, [r1, #52]	; 0x34
   29e30:	bl	1172c <mchar_async_malloc@plt>
   29e34:	mov	r1, r7
   29e38:	str	r0, [r4, #12]
   29e3c:	mov	r2, r6
   29e40:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   29e44:	b	112ac <mycore_string_raw_copy@plt>
   29e48:	ldr	r0, [r4, #8]
   29e4c:	cmp	r0, #0
   29e50:	beq	29e58 <myhtml_token_strict_doctype_by_token@@Base+0x21c>
   29e54:	bl	11a98 <mycore_free@plt>
   29e58:	mov	r5, #0
   29e5c:	str	r5, [r4, #8]
   29e60:	ldr	r0, [r4, #12]
   29e64:	cmp	r0, #0
   29e68:	beq	29e70 <myhtml_token_strict_doctype_by_token@@Base+0x234>
   29e6c:	bl	11a98 <mycore_free@plt>
   29e70:	str	r5, [r4, #12]
   29e74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29e78:	ldr	r0, [r4, #12]
   29e7c:	cmp	r0, #0
   29e80:	beq	29e88 <myhtml_token_strict_doctype_by_token@@Base+0x24c>
   29e84:	bl	11a98 <mycore_free@plt>
   29e88:	ldr	r1, [r8]
   29e8c:	mov	r2, #3
   29e90:	ldr	r0, [r1, #4]
   29e94:	ldr	r1, [r1, #52]	; 0x34
   29e98:	bl	1172c <mchar_async_malloc@plt>
   29e9c:	str	r0, [r4, #12]
   29ea0:	mov	r2, #1
   29ea4:	ldr	r1, [pc, #20]	; 29ec0 <myhtml_token_strict_doctype_by_token@@Base+0x284>
   29ea8:	add	r1, pc, r1
   29eac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   29eb0:	b	112ac <mycore_string_raw_copy@plt>
   29eb4:	andeq	sl, sp, r4, asr #14
   29eb8:			; <UNDEFINED> instruction: 0x000d96b6
   29ebc:	andeq	sl, sp, r4, lsr r5
   29ec0:	andeq	sl, sp, r8, lsl r4
   29ec4:	andeq	r9, sp, ip, lsr #13
   29ec8:	muleq	sp, r4, r5

00029ecc <myhtml_token_doctype_check_html_4_0@@Base>:
   29ecc:	push	{r4, sl, fp, lr}
   29ed0:	add	fp, sp, #8
   29ed4:	mov	r4, r0
   29ed8:	ldr	r0, [r0, #8]
   29edc:	ldr	r1, [pc, #64]	; 29f24 <myhtml_token_doctype_check_html_4_0@@Base+0x58>
   29ee0:	add	r1, pc, r1
   29ee4:	bl	10db4 <mycore_strcmp@plt>
   29ee8:	cmp	r0, #0
   29eec:	beq	29f14 <myhtml_token_doctype_check_html_4_0@@Base+0x48>
   29ef0:	ldr	r0, [r4, #12]
   29ef4:	cmp	r0, #0
   29ef8:	beq	29f1c <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   29efc:	ldr	r1, [pc, #36]	; 29f28 <myhtml_token_doctype_check_html_4_0@@Base+0x5c>
   29f00:	add	r1, pc, r1
   29f04:	bl	10db4 <mycore_strcmp@plt>
   29f08:	cmp	r0, #0
   29f0c:	movwne	r0, #1
   29f10:	pop	{r4, sl, fp, pc}
   29f14:	mov	r0, #0
   29f18:	pop	{r4, sl, fp, pc}
   29f1c:	mov	r0, #1
   29f20:	pop	{r4, sl, fp, pc}
   29f24:	andeq	r9, sp, r4, ror #24
   29f28:	andeq	r9, sp, sp, asr ip

00029f2c <myhtml_token_doctype_check_html_4_01@@Base>:
   29f2c:	push	{r4, sl, fp, lr}
   29f30:	add	fp, sp, #8
   29f34:	mov	r4, r0
   29f38:	ldr	r0, [r0, #8]
   29f3c:	ldr	r1, [pc, #64]	; 29f84 <myhtml_token_doctype_check_html_4_01@@Base+0x58>
   29f40:	add	r1, pc, r1
   29f44:	bl	10db4 <mycore_strcmp@plt>
   29f48:	cmp	r0, #0
   29f4c:	beq	29f74 <myhtml_token_doctype_check_html_4_01@@Base+0x48>
   29f50:	ldr	r0, [r4, #12]
   29f54:	cmp	r0, #0
   29f58:	beq	29f7c <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   29f5c:	ldr	r1, [pc, #36]	; 29f88 <myhtml_token_doctype_check_html_4_01@@Base+0x5c>
   29f60:	add	r1, pc, r1
   29f64:	bl	10db4 <mycore_strcmp@plt>
   29f68:	cmp	r0, #0
   29f6c:	movwne	r0, #1
   29f70:	pop	{r4, sl, fp, pc}
   29f74:	mov	r0, #0
   29f78:	pop	{r4, sl, fp, pc}
   29f7c:	mov	r0, #1
   29f80:	pop	{r4, sl, fp, pc}
   29f84:	andeq	r9, sp, r8, asr #24
   29f88:	andeq	r9, sp, r2, asr #24

00029f8c <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   29f8c:	push	{r4, sl, fp, lr}
   29f90:	add	fp, sp, #8
   29f94:	mov	r4, r0
   29f98:	ldr	r0, [r0, #12]
   29f9c:	cmp	r0, #0
   29fa0:	beq	29fd8 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x4c>
   29fa4:	ldr	r0, [r4, #8]
   29fa8:	ldr	r1, [pc, #56]	; 29fe8 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x5c>
   29fac:	add	r1, pc, r1
   29fb0:	bl	10db4 <mycore_strcmp@plt>
   29fb4:	cmp	r0, #0
   29fb8:	beq	29fe0 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   29fbc:	ldr	r0, [r4, #12]
   29fc0:	ldr	r1, [pc, #36]	; 29fec <myhtml_token_doctype_check_xhtml_1_0@@Base+0x60>
   29fc4:	add	r1, pc, r1
   29fc8:	bl	10db4 <mycore_strcmp@plt>
   29fcc:	cmp	r0, #0
   29fd0:	movwne	r0, #1
   29fd4:	pop	{r4, sl, fp, pc}
   29fd8:	mov	r0, #1
   29fdc:	pop	{r4, sl, fp, pc}
   29fe0:	mov	r0, #0
   29fe4:	pop	{r4, sl, fp, pc}
   29fe8:	andeq	r9, sp, ip, lsl ip
   29fec:	andeq	r9, sp, r5, lsr #24

00029ff0 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   29ff0:	push	{r4, sl, fp, lr}
   29ff4:	add	fp, sp, #8
   29ff8:	mov	r4, r0
   29ffc:	ldr	r0, [r0, #12]
   2a000:	cmp	r0, #0
   2a004:	beq	2a03c <myhtml_token_doctype_check_xhtml_1_1@@Base+0x4c>
   2a008:	ldr	r0, [r4, #8]
   2a00c:	ldr	r1, [pc, #56]	; 2a04c <myhtml_token_doctype_check_xhtml_1_1@@Base+0x5c>
   2a010:	add	r1, pc, r1
   2a014:	bl	10db4 <mycore_strcmp@plt>
   2a018:	cmp	r0, #0
   2a01c:	beq	2a044 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   2a020:	ldr	r0, [r4, #12]
   2a024:	ldr	r1, [pc, #36]	; 2a050 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x60>
   2a028:	add	r1, pc, r1
   2a02c:	bl	10db4 <mycore_strcmp@plt>
   2a030:	cmp	r0, #0
   2a034:	movwne	r0, #1
   2a038:	pop	{r4, sl, fp, pc}
   2a03c:	mov	r0, #1
   2a040:	pop	{r4, sl, fp, pc}
   2a044:	mov	r0, #0
   2a048:	pop	{r4, sl, fp, pc}
   2a04c:	andeq	r9, sp, fp, lsl #24
   2a050:	andeq	r9, sp, sp, lsl #24

0002a054 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   2a054:	push	{r4, r5, fp, lr}
   2a058:	add	fp, sp, #8
   2a05c:	mov	r4, #0
   2a060:	cmp	r2, #0
   2a064:	beq	2a1bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2a068:	mov	r5, r2
   2a06c:	bl	113f0 <myhtml_token_strict_doctype_by_token@plt>
   2a070:	ldr	r0, [r5, #4]
   2a074:	cmp	r0, #0
   2a078:	beq	2a1bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2a07c:	ldrb	r0, [r5]
   2a080:	cmp	r0, #0
   2a084:	bne	2a094 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   2a088:	ldr	r0, [r5, #8]
   2a08c:	cmp	r0, #0
   2a090:	beq	2a198 <myhtml_token_release_and_check_doctype_attributes@@Base+0x144>
   2a094:	ldr	r0, [r5, #8]
   2a098:	cmp	r0, #0
   2a09c:	beq	2a1bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2a0a0:	ldrb	r1, [r5]
   2a0a4:	cmp	r1, #0
   2a0a8:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a0ac:	ldr	r1, [pc, #276]	; 2a1c8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x174>
   2a0b0:	add	r1, pc, r1
   2a0b4:	bl	10db4 <mycore_strcmp@plt>
   2a0b8:	cmp	r0, #0
   2a0bc:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a0c0:	ldr	r0, [r5, #12]
   2a0c4:	cmp	r0, #0
   2a0c8:	beq	2a0e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x8c>
   2a0cc:	ldr	r1, [pc, #248]	; 2a1cc <myhtml_token_release_and_check_doctype_attributes@@Base+0x178>
   2a0d0:	add	r1, pc, r1
   2a0d4:	bl	10db4 <mycore_strcmp@plt>
   2a0d8:	cmp	r0, #0
   2a0dc:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a0e0:	ldr	r0, [r5, #8]
   2a0e4:	ldr	r1, [pc, #228]	; 2a1d0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x17c>
   2a0e8:	add	r1, pc, r1
   2a0ec:	bl	10db4 <mycore_strcmp@plt>
   2a0f0:	cmp	r0, #0
   2a0f4:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a0f8:	ldr	r0, [r5, #12]
   2a0fc:	cmp	r0, #0
   2a100:	beq	2a1bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2a104:	ldr	r1, [pc, #200]	; 2a1d4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x180>
   2a108:	add	r1, pc, r1
   2a10c:	bl	10db4 <mycore_strcmp@plt>
   2a110:	cmp	r0, #0
   2a114:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a118:	ldr	r0, [r5, #12]
   2a11c:	cmp	r0, #0
   2a120:	beq	2a1bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2a124:	ldr	r0, [r5, #8]
   2a128:	ldr	r1, [pc, #168]	; 2a1d8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x184>
   2a12c:	add	r1, pc, r1
   2a130:	bl	10db4 <mycore_strcmp@plt>
   2a134:	cmp	r0, #0
   2a138:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a13c:	ldr	r0, [r5, #12]
   2a140:	ldr	r1, [pc, #148]	; 2a1dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x188>
   2a144:	add	r1, pc, r1
   2a148:	bl	10db4 <mycore_strcmp@plt>
   2a14c:	cmp	r0, #0
   2a150:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a154:	ldr	r0, [r5, #12]
   2a158:	cmp	r0, #0
   2a15c:	beq	2a1bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2a160:	ldr	r0, [r5, #8]
   2a164:	ldr	r1, [pc, #116]	; 2a1e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x18c>
   2a168:	add	r1, pc, r1
   2a16c:	bl	10db4 <mycore_strcmp@plt>
   2a170:	cmp	r0, #0
   2a174:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a178:	ldr	r0, [r5, #12]
   2a17c:	ldr	r1, [pc, #96]	; 2a1e4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x190>
   2a180:	add	r1, pc, r1
   2a184:	bl	10db4 <mycore_strcmp@plt>
   2a188:	cmp	r0, #0
   2a18c:	moveq	r4, #1
   2a190:	mov	r0, r4
   2a194:	pop	{r4, r5, fp, pc}
   2a198:	ldr	r0, [r5, #12]
   2a19c:	cmp	r0, #0
   2a1a0:	beq	2a1b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x164>
   2a1a4:	ldr	r1, [pc, #24]	; 2a1c4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x170>
   2a1a8:	add	r1, pc, r1
   2a1ac:	bl	10db4 <mycore_strcmp@plt>
   2a1b0:	cmp	r0, #0
   2a1b4:	bne	2a094 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   2a1b8:	mov	r4, #1
   2a1bc:	mov	r0, r4
   2a1c0:	pop	{r4, r5, fp, pc}
   2a1c4:			; <UNDEFINED> instruction: 0x000d9aba
   2a1c8:	muleq	sp, r4, sl
   2a1cc:	andeq	r9, sp, sp, lsl #21
   2a1d0:	andeq	r9, sp, r0, lsr #21
   2a1d4:	muleq	sp, sl, sl
   2a1d8:	muleq	sp, ip, sl
   2a1dc:	andeq	r9, sp, r5, lsr #21
   2a1e0:			; <UNDEFINED> instruction: 0x000d9ab3
   2a1e4:			; <UNDEFINED> instruction: 0x000d9ab5

0002a1e8 <myhtml_token_adjust_svg_attributes@@Base>:
   2a1e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a1ec:	add	fp, sp, #24
   2a1f0:	ldr	r8, [pc, #160]	; 2a298 <myhtml_token_adjust_svg_attributes@@Base+0xb0>
   2a1f4:	mov	r9, r0
   2a1f8:	mov	r6, #0
   2a1fc:	add	r8, pc, r8
   2a200:	ldr	r7, [r9, #40]	; 0x28
   2a204:	cmp	r7, #0
   2a208:	bne	2a224 <myhtml_token_adjust_svg_attributes@@Base+0x3c>
   2a20c:	add	r6, r6, #1
   2a210:	cmp	r6, #58	; 0x3a
   2a214:	beq	2a294 <myhtml_token_adjust_svg_attributes@@Base+0xac>
   2a218:	ldr	r7, [r9, #40]	; 0x28
   2a21c:	cmp	r7, #0
   2a220:	beq	2a20c <myhtml_token_adjust_svg_attributes@@Base+0x24>
   2a224:	mov	r0, r8
   2a228:	ldr	r5, [r0, r6, lsl #4]!
   2a22c:	ldr	r4, [r0, #4]
   2a230:	ldr	r0, [r7, #16]
   2a234:	cmp	r0, r4
   2a238:	beq	2a254 <myhtml_token_adjust_svg_attributes@@Base+0x6c>
   2a23c:	ldr	r7, [r7]
   2a240:	cmp	r7, #0
   2a244:	beq	2a20c <myhtml_token_adjust_svg_attributes@@Base+0x24>
   2a248:	ldr	r0, [r7, #16]
   2a24c:	cmp	r0, r4
   2a250:	bne	2a23c <myhtml_token_adjust_svg_attributes@@Base+0x54>
   2a254:	ldr	r0, [r7, #8]
   2a258:	mov	r1, r5
   2a25c:	bl	10db4 <mycore_strcmp@plt>
   2a260:	cmp	r0, #0
   2a264:	bne	2a23c <myhtml_token_adjust_svg_attributes@@Base+0x54>
   2a268:	add	r5, r7, #8
   2a26c:	mov	r0, r5
   2a270:	bl	119fc <mycore_string_clean@plt>
   2a274:	add	r0, r8, r6, lsl #4
   2a278:	ldr	r1, [r0, #8]
   2a27c:	ldr	r2, [r0, #12]
   2a280:	mov	r0, r5
   2a284:	bl	116f0 <mycore_string_append@plt>
   2a288:	add	r6, r6, #1
   2a28c:	cmp	r6, #58	; 0x3a
   2a290:	bne	2a218 <myhtml_token_adjust_svg_attributes@@Base+0x30>
   2a294:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a298:	andeq	r2, pc, r8, lsl #17

0002a29c <myhtml_token_adjust_foreign_attributes@@Base>:
   2a29c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2a0:	add	fp, sp, #28
   2a2a4:	sub	sp, sp, #4
   2a2a8:	ldr	r8, [pc, #172]	; 2a35c <myhtml_token_adjust_foreign_attributes@@Base+0xc0>
   2a2ac:	mov	r9, r0
   2a2b0:	mov	r6, #0
   2a2b4:	add	r8, pc, r8
   2a2b8:	ldr	r7, [r9, #40]	; 0x28
   2a2bc:	cmp	r7, #0
   2a2c0:	bne	2a2dc <myhtml_token_adjust_foreign_attributes@@Base+0x40>
   2a2c4:	add	r6, r6, #1
   2a2c8:	cmp	r6, #11
   2a2cc:	beq	2a354 <myhtml_token_adjust_foreign_attributes@@Base+0xb8>
   2a2d0:	ldr	r7, [r9, #40]	; 0x28
   2a2d4:	cmp	r7, #0
   2a2d8:	beq	2a2c4 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   2a2dc:	add	sl, r6, r6, lsl #2
   2a2e0:	mov	r0, r8
   2a2e4:	ldr	r5, [r0, sl, lsl #2]!
   2a2e8:	ldr	r4, [r0, #4]
   2a2ec:	ldr	r0, [r7, #16]
   2a2f0:	cmp	r0, r4
   2a2f4:	beq	2a310 <myhtml_token_adjust_foreign_attributes@@Base+0x74>
   2a2f8:	ldr	r7, [r7]
   2a2fc:	cmp	r7, #0
   2a300:	beq	2a2c4 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   2a304:	ldr	r0, [r7, #16]
   2a308:	cmp	r0, r4
   2a30c:	bne	2a2f8 <myhtml_token_adjust_foreign_attributes@@Base+0x5c>
   2a310:	ldr	r0, [r7, #8]
   2a314:	mov	r1, r5
   2a318:	bl	10db4 <mycore_strcmp@plt>
   2a31c:	cmp	r0, #0
   2a320:	bne	2a2f8 <myhtml_token_adjust_foreign_attributes@@Base+0x5c>
   2a324:	add	r5, r7, #8
   2a328:	mov	r0, r5
   2a32c:	bl	119fc <mycore_string_clean@plt>
   2a330:	add	r0, r8, sl, lsl #2
   2a334:	add	r4, r0, #8
   2a338:	mov	r0, r5
   2a33c:	ldm	r4, {r1, r2, r4}
   2a340:	bl	116f0 <mycore_string_append@plt>
   2a344:	str	r4, [r7, #64]	; 0x40
   2a348:	add	r6, r6, #1
   2a34c:	cmp	r6, #11
   2a350:	bne	2a2d0 <myhtml_token_adjust_foreign_attributes@@Base+0x34>
   2a354:	sub	sp, fp, #28
   2a358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a35c:	andeq	r2, pc, r0, ror fp	; <UNPREDICTABLE>

0002a360 <myhtml_token_attr_compare@@Base>:
   2a360:	mov	r2, r0
   2a364:	mov	r0, #0
   2a368:	cmp	r2, #0
   2a36c:	cmpne	r1, #0
   2a370:	bne	2a378 <myhtml_token_attr_compare@@Base+0x18>
   2a374:	bx	lr
   2a378:	push	{r4, r5, fp, lr}
   2a37c:	add	fp, sp, #8
   2a380:	ldr	r4, [r2, #40]	; 0x28
   2a384:	ldr	r5, [r1, #40]	; 0x28
   2a388:	b	2a3d8 <myhtml_token_attr_compare@@Base+0x78>
   2a38c:	ldr	r0, [r5, #16]
   2a390:	ldr	r1, [r4, #16]
   2a394:	cmp	r1, r0
   2a398:	ldreq	r0, [r5, #36]	; 0x24
   2a39c:	ldreq	r1, [r4, #36]	; 0x24
   2a3a0:	cmpeq	r1, r0
   2a3a4:	bne	2a3e4 <myhtml_token_attr_compare@@Base+0x84>
   2a3a8:	ldr	r1, [r5, #8]
   2a3ac:	ldr	r0, [r4, #8]
   2a3b0:	bl	10db4 <mycore_strcmp@plt>
   2a3b4:	cmp	r0, #0
   2a3b8:	bne	2a3e4 <myhtml_token_attr_compare@@Base+0x84>
   2a3bc:	ldr	r1, [r5, #28]
   2a3c0:	ldr	r0, [r4, #28]
   2a3c4:	bl	11468 <mycore_strcasecmp@plt>
   2a3c8:	cmp	r0, #0
   2a3cc:	bne	2a3e4 <myhtml_token_attr_compare@@Base+0x84>
   2a3d0:	ldr	r4, [r4]
   2a3d4:	ldr	r5, [r5]
   2a3d8:	cmp	r5, #0
   2a3dc:	cmpne	r4, #0
   2a3e0:	bne	2a38c <myhtml_token_attr_compare@@Base+0x2c>
   2a3e4:	orr	r0, r5, r4
   2a3e8:	clz	r0, r0
   2a3ec:	lsr	r0, r0, #5
   2a3f0:	pop	{r4, r5, fp, lr}
   2a3f4:	bx	lr

0002a3f8 <myhtml_token_delete@@Base>:
   2a3f8:	push	{r4, r5, fp, lr}
   2a3fc:	add	fp, sp, #8
   2a400:	ldr	r2, [r1, #4]
   2a404:	mov	r4, r1
   2a408:	mov	r5, r0
   2a40c:	cmp	r2, #0
   2a410:	beq	2a428 <myhtml_token_delete@@Base+0x30>
   2a414:	ldr	r0, [r4, #16]
   2a418:	cmp	r0, #0
   2a41c:	beq	2a428 <myhtml_token_delete@@Base+0x30>
   2a420:	ldr	r1, [r4, #20]
   2a424:	bl	115c4 <mchar_async_free@plt>
   2a428:	ldr	r0, [r5, #4]
   2a42c:	mov	r1, r4
   2a430:	pop	{r4, r5, fp, lr}
   2a434:	b	11108 <mcobject_async_free@plt>

0002a438 <myhtml_token_attr_delete_all@@Base>:
   2a438:	push	{r4, sl, fp, lr}
   2a43c:	add	fp, sp, #8
   2a440:	ldr	r4, [r1, #40]	; 0x28
   2a444:	cmp	r4, #0
   2a448:	bne	2a45c <myhtml_token_attr_delete_all@@Base+0x24>
   2a44c:	b	2a4a0 <myhtml_token_attr_delete_all@@Base+0x68>
   2a450:	ldr	r4, [r4]
   2a454:	cmp	r4, #0
   2a458:	beq	2a4a0 <myhtml_token_attr_delete_all@@Base+0x68>
   2a45c:	ldr	r2, [r4, #8]
   2a460:	cmp	r2, #0
   2a464:	beq	2a47c <myhtml_token_attr_delete_all@@Base+0x44>
   2a468:	ldr	r0, [r4, #20]
   2a46c:	cmp	r0, #0
   2a470:	beq	2a47c <myhtml_token_attr_delete_all@@Base+0x44>
   2a474:	ldr	r1, [r4, #24]
   2a478:	bl	115c4 <mchar_async_free@plt>
   2a47c:	ldr	r2, [r4, #28]
   2a480:	cmp	r2, #0
   2a484:	beq	2a450 <myhtml_token_attr_delete_all@@Base+0x18>
   2a488:	ldr	r0, [r4, #40]	; 0x28
   2a48c:	cmp	r0, #0
   2a490:	beq	2a450 <myhtml_token_attr_delete_all@@Base+0x18>
   2a494:	ldr	r1, [r4, #44]	; 0x2c
   2a498:	bl	115c4 <mchar_async_free@plt>
   2a49c:	b	2a450 <myhtml_token_attr_delete_all@@Base+0x18>
   2a4a0:	pop	{r4, sl, fp, pc}

0002a4a4 <myhtml_token_attr_remove@@Base>:
   2a4a4:	cmp	r1, #0
   2a4a8:	beq	2a4e4 <myhtml_token_attr_remove@@Base+0x40>
   2a4ac:	ldm	r1, {r3, ip}
   2a4b0:	cmp	ip, #0
   2a4b4:	beq	2a4c4 <myhtml_token_attr_remove@@Base+0x20>
   2a4b8:	str	r3, [ip]
   2a4bc:	ldr	r3, [r1]
   2a4c0:	b	2a4c8 <myhtml_token_attr_remove@@Base+0x24>
   2a4c4:	str	r3, [r0, #40]	; 0x28
   2a4c8:	cmp	r3, #0
   2a4cc:	add	r2, r3, #4
   2a4d0:	addeq	r2, r0, #44	; 0x2c
   2a4d4:	mov	r0, #0
   2a4d8:	str	ip, [r2]
   2a4dc:	str	r0, [r1]
   2a4e0:	str	r0, [r1, #4]
   2a4e4:	mov	r0, r1
   2a4e8:	bx	lr

0002a4ec <myhtml_token_attr_remove_by_name@@Base>:
   2a4ec:	push	{r4, r5, r6, r7, fp, lr}
   2a4f0:	add	fp, sp, #16
   2a4f4:	ldr	r4, [r0, #40]	; 0x28
   2a4f8:	cmp	r4, #0
   2a4fc:	beq	2a560 <myhtml_token_attr_remove_by_name@@Base+0x74>
   2a500:	mov	r6, r2
   2a504:	mov	r7, r1
   2a508:	mov	r5, r0
   2a50c:	ldr	r0, [r4, #16]
   2a510:	cmp	r0, r6
   2a514:	beq	2a530 <myhtml_token_attr_remove_by_name@@Base+0x44>
   2a518:	ldr	r4, [r4]
   2a51c:	cmp	r4, #0
   2a520:	beq	2a560 <myhtml_token_attr_remove_by_name@@Base+0x74>
   2a524:	ldr	r0, [r4, #16]
   2a528:	cmp	r0, r6
   2a52c:	bne	2a518 <myhtml_token_attr_remove_by_name@@Base+0x2c>
   2a530:	ldr	r0, [r4, #8]
   2a534:	mov	r1, r7
   2a538:	bl	10db4 <mycore_strcmp@plt>
   2a53c:	cmp	r0, #0
   2a540:	bne	2a518 <myhtml_token_attr_remove_by_name@@Base+0x2c>
   2a544:	ldr	r0, [r4, #4]
   2a548:	ldr	r1, [r4]
   2a54c:	cmp	r0, #0
   2a550:	beq	2a56c <myhtml_token_attr_remove_by_name@@Base+0x80>
   2a554:	str	r1, [r0]
   2a558:	ldr	r1, [r4]
   2a55c:	b	2a570 <myhtml_token_attr_remove_by_name@@Base+0x84>
   2a560:	mov	r4, #0
   2a564:	mov	r0, r4
   2a568:	pop	{r4, r5, r6, r7, fp, pc}
   2a56c:	str	r1, [r5, #40]	; 0x28
   2a570:	cmp	r1, #0
   2a574:	add	r2, r1, #4
   2a578:	addeq	r2, r5, #44	; 0x2c
   2a57c:	str	r0, [r2]
   2a580:	mov	r0, #0
   2a584:	str	r0, [r4]
   2a588:	str	r0, [r4, #4]
   2a58c:	mov	r0, r4
   2a590:	pop	{r4, r5, r6, r7, fp, pc}

0002a594 <myhtml_token_merged_two_token_string@@Base>:
   2a594:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a598:	add	fp, sp, #24
   2a59c:	sub	sp, sp, #24
   2a5a0:	mov	r7, r0
   2a5a4:	ldr	r5, [r0, #8]
   2a5a8:	ldr	r0, [r1, #48]	; 0x30
   2a5ac:	mov	r8, r3
   2a5b0:	mov	r6, r2
   2a5b4:	mov	r4, r1
   2a5b8:	tst	r0, #4
   2a5bc:	bne	2a5fc <myhtml_token_merged_two_token_string@@Base+0x68>
   2a5c0:	ldr	r0, [r5]
   2a5c4:	ldr	r0, [r0]
   2a5c8:	ldr	r0, [r0]
   2a5cc:	ldr	r0, [r0, #24]
   2a5d0:	bl	11138 <mythread_nanosleep_sleep@plt>
   2a5d4:	ldr	r0, [r4, #48]	; 0x30
   2a5d8:	tst	r0, #4
   2a5dc:	beq	2a5c0 <myhtml_token_merged_two_token_string@@Base+0x2c>
   2a5e0:	ldr	r5, [r7, #8]
   2a5e4:	b	2a5fc <myhtml_token_merged_two_token_string@@Base+0x68>
   2a5e8:	ldr	r0, [r5]
   2a5ec:	ldr	r0, [r0]
   2a5f0:	ldr	r0, [r0]
   2a5f4:	ldr	r0, [r0, #24]
   2a5f8:	bl	11138 <mythread_nanosleep_sleep@plt>
   2a5fc:	ldr	r0, [r6, #48]	; 0x30
   2a600:	tst	r0, #4
   2a604:	beq	2a5e8 <myhtml_token_merged_two_token_string@@Base+0x54>
   2a608:	mov	r0, #0
   2a60c:	add	r9, r6, #4
   2a610:	add	r5, r4, #4
   2a614:	str	r0, [r4, #24]
   2a618:	str	r0, [r4, #28]
   2a61c:	ldr	r1, [r7, #52]	; 0x34
   2a620:	ldr	r0, [r4, #20]
   2a624:	cmp	r0, r1
   2a628:	bne	2a64c <myhtml_token_merged_two_token_string@@Base+0xb8>
   2a62c:	cmp	r8, #0
   2a630:	bne	2a640 <myhtml_token_merged_two_token_string@@Base+0xac>
   2a634:	mov	r0, r5
   2a638:	mov	r1, r9
   2a63c:	bl	111bc <mycore_string_copy@plt>
   2a640:	mov	r0, r4
   2a644:	sub	sp, fp, #24
   2a648:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a64c:	ldr	r0, [r6, #20]
   2a650:	cmp	r0, r1
   2a654:	bne	2a680 <myhtml_token_merged_two_token_string@@Base+0xec>
   2a658:	cmp	r8, #0
   2a65c:	movne	r0, r9
   2a660:	movne	r1, r5
   2a664:	moveq	r0, r5
   2a668:	moveq	r1, r9
   2a66c:	bl	111bc <mycore_string_copy@plt>
   2a670:	mov	r4, r6
   2a674:	mov	r0, r4
   2a678:	sub	sp, fp, #24
   2a67c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a680:	ldr	r0, [r6, #12]
   2a684:	ldr	r2, [r4, #12]
   2a688:	mov	r6, sp
   2a68c:	add	r0, r2, r0
   2a690:	mov	r2, r6
   2a694:	add	r3, r0, #2
   2a698:	ldr	r0, [r7, #4]
   2a69c:	bl	114f8 <mycore_string_init@plt>
   2a6a0:	cmp	r8, #0
   2a6a4:	mov	r1, r5
   2a6a8:	mov	r0, r6
   2a6ac:	movne	r1, r9
   2a6b0:	bl	111bc <mycore_string_copy@plt>
   2a6b4:	cmp	r8, #0
   2a6b8:	mov	r0, r6
   2a6bc:	movne	r9, r5
   2a6c0:	mov	r1, r9
   2a6c4:	bl	111bc <mycore_string_copy@plt>
   2a6c8:	vld1.32	{d16-d17}, [r6]!
   2a6cc:	vst1.32	{d16-d17}, [r5]!
   2a6d0:	ldr	r0, [r6]
   2a6d4:	str	r0, [r5]
   2a6d8:	mov	r0, r4
   2a6dc:	sub	sp, fp, #24
   2a6e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a6e4 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   2a6e4:	push	{r4, r5, r6, sl, fp, lr}
   2a6e8:	add	fp, sp, #16
   2a6ec:	sub	sp, sp, #24
   2a6f0:	mov	r5, r0
   2a6f4:	ldr	r6, [r0, #8]
   2a6f8:	ldr	r0, [r1, #48]	; 0x30
   2a6fc:	mov	r4, r1
   2a700:	tst	r0, #4
   2a704:	bne	2a728 <myhtml_token_set_replacement_character_for_null_token@@Base+0x44>
   2a708:	ldr	r0, [r6]
   2a70c:	ldr	r0, [r0]
   2a710:	ldr	r0, [r0]
   2a714:	ldr	r0, [r0, #24]
   2a718:	bl	11138 <mythread_nanosleep_sleep@plt>
   2a71c:	ldr	r0, [r4, #48]	; 0x30
   2a720:	tst	r0, #4
   2a724:	beq	2a708 <myhtml_token_set_replacement_character_for_null_token@@Base+0x24>
   2a728:	ldr	r2, [r4, #12]
   2a72c:	ldr	r0, [r5, #4]
   2a730:	ldr	r1, [r5, #52]	; 0x34
   2a734:	mov	r5, sp
   2a738:	add	r3, r2, #2
   2a73c:	mov	r2, r5
   2a740:	bl	114f8 <mycore_string_init@plt>
   2a744:	mov	r6, r4
   2a748:	ldr	r2, [r4, #12]
   2a74c:	mov	r0, r5
   2a750:	ldr	r1, [r6, #4]!
   2a754:	bl	1130c <mycore_string_append_with_replacement_null_characters@plt>
   2a758:	vld1.64	{d16-d17}, [r5]!
   2a75c:	vst1.32	{d16-d17}, [r6]
   2a760:	ldr	r0, [r5]
   2a764:	str	r0, [r6, #16]
   2a768:	sub	sp, fp, #16
   2a76c:	pop	{r4, r5, r6, sl, fp, pc}

0002a770 <myhtml_tokenizer_set_first_settings@@Base>:
   2a770:	push	{r4, sl, fp, lr}
   2a774:	add	fp, sp, #8
   2a778:	mov	r4, r0
   2a77c:	ldr	r0, [r0, #24]
   2a780:	bl	111d4 <mythread_queue_get_current_node@plt>
   2a784:	str	r0, [r4, #68]	; 0x44
   2a788:	bl	11a44 <mythread_queue_node_clean@plt>
   2a78c:	ldr	r0, [r4, #68]	; 0x44
   2a790:	str	r4, [r0]
   2a794:	ldr	r0, [r4, #8]
   2a798:	ldr	r1, [r0, #12]
   2a79c:	bl	117e0 <myhtml_token_node_create@plt>
   2a7a0:	cmp	r0, #0
   2a7a4:	str	r0, [r4, #64]	; 0x40
   2a7a8:	beq	2a7bc <myhtml_tokenizer_set_first_settings@@Base+0x4c>
   2a7ac:	ldr	r0, [r4, #76]	; 0x4c
   2a7b0:	str	r0, [r4, #80]	; 0x50
   2a7b4:	mov	r0, #0
   2a7b8:	pop	{r4, sl, fp, pc}
   2a7bc:	mov	r0, #2
   2a7c0:	pop	{r4, sl, fp, pc}

0002a7c4 <myhtml_tokenizer_begin@@Base>:
   2a7c4:	ldr	r3, [r0, #204]	; 0xcc
   2a7c8:	bic	r3, r3, #1
   2a7cc:	cmp	r3, #4
   2a7d0:	bne	2a7d8 <myhtml_tokenizer_begin@@Base+0x14>
   2a7d4:	b	2a9b8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   2a7d8:	b	2a7f4 <myhtml_tokenizer_chunk_process@@Base>

0002a7dc <myhtml_tokenizer_chunk@@Base>:
   2a7dc:	ldr	r3, [r0, #204]	; 0xcc
   2a7e0:	bic	r3, r3, #1
   2a7e4:	cmp	r3, #4
   2a7e8:	bne	2a7f0 <myhtml_tokenizer_chunk@@Base+0x14>
   2a7ec:	b	2a9b8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   2a7f0:	b	2a7f4 <myhtml_tokenizer_chunk_process@@Base>

0002a7f4 <myhtml_tokenizer_chunk_process@@Base>:
   2a7f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a7f8:	add	fp, sp, #24
   2a7fc:	sub	sp, sp, #16
   2a800:	ldr	r8, [r0]
   2a804:	mov	r6, r1
   2a808:	mov	r5, r0
   2a80c:	ldr	r1, [r0, #72]	; 0x48
   2a810:	ldr	r0, [r0, #76]	; 0x4c
   2a814:	mov	r4, r2
   2a818:	mov	r2, r6
   2a81c:	mov	r3, r4
   2a820:	ldr	r9, [r8, #24]
   2a824:	bl	1112c <mycore_incoming_buffer_add@plt>
   2a828:	str	r0, [r5, #76]	; 0x4c
   2a82c:	ldrb	r0, [r8, #32]
   2a830:	tst	r0, #1
   2a834:	beq	2a844 <myhtml_tokenizer_chunk_process@@Base+0x50>
   2a838:	ldr	r0, [r5, #180]	; 0xb4
   2a83c:	orr	r0, r0, #16
   2a840:	str	r0, [r5, #180]	; 0xb4
   2a844:	ldr	r0, [r5, #180]	; 0xb4
   2a848:	tst	r0, #16
   2a84c:	bne	2a88c <myhtml_tokenizer_chunk_process@@Base+0x98>
   2a850:	ldr	r0, [r5, #20]
   2a854:	cmp	r0, #0
   2a858:	beq	2a928 <myhtml_tokenizer_chunk_process@@Base+0x134>
   2a85c:	ldr	r1, [r5]
   2a860:	ldr	r0, [r1]
   2a864:	cmp	r0, #0
   2a868:	beq	2a878 <myhtml_tokenizer_chunk_process@@Base+0x84>
   2a86c:	mov	r1, #0
   2a870:	bl	11414 <mythread_resume@plt>
   2a874:	ldr	r1, [r5]
   2a878:	ldr	r0, [r1, #4]
   2a87c:	cmp	r0, #0
   2a880:	beq	2a88c <myhtml_tokenizer_chunk_process@@Base+0x98>
   2a884:	mov	r1, #0
   2a888:	bl	11414 <mythread_resume@plt>
   2a88c:	ldr	r0, [r5, #68]	; 0x44
   2a890:	cmp	r0, #0
   2a894:	beq	2a8a4 <myhtml_tokenizer_chunk_process@@Base+0xb0>
   2a898:	cmp	r4, #0
   2a89c:	bne	2a8e4 <myhtml_tokenizer_chunk_process@@Base+0xf0>
   2a8a0:	b	2a910 <myhtml_tokenizer_chunk_process@@Base+0x11c>
   2a8a4:	ldr	r0, [r5, #24]
   2a8a8:	bl	111d4 <mythread_queue_get_current_node@plt>
   2a8ac:	str	r0, [r5, #68]	; 0x44
   2a8b0:	bl	11a44 <mythread_queue_node_clean@plt>
   2a8b4:	ldr	r0, [r5, #68]	; 0x44
   2a8b8:	str	r5, [r0]
   2a8bc:	ldr	r0, [r5, #8]
   2a8c0:	ldr	r1, [r0, #12]
   2a8c4:	bl	117e0 <myhtml_token_node_create@plt>
   2a8c8:	cmp	r0, #0
   2a8cc:	str	r0, [r5, #64]	; 0x40
   2a8d0:	beq	2a96c <myhtml_tokenizer_chunk_process@@Base+0x178>
   2a8d4:	ldr	r0, [r5, #76]	; 0x4c
   2a8d8:	str	r0, [r5, #80]	; 0x50
   2a8dc:	cmp	r4, #0
   2a8e0:	beq	2a910 <myhtml_tokenizer_chunk_process@@Base+0x11c>
   2a8e4:	mov	r3, #0
   2a8e8:	ldr	r0, [r5, #160]	; 0xa0
   2a8ec:	ldr	r1, [r5, #64]	; 0x40
   2a8f0:	mov	r2, r6
   2a8f4:	ldr	r7, [r9, r0, lsl #2]
   2a8f8:	mov	r0, r5
   2a8fc:	str	r4, [sp]
   2a900:	blx	r7
   2a904:	mov	r3, r0
   2a908:	cmp	r0, r4
   2a90c:	bcc	2a8e8 <myhtml_tokenizer_chunk_process@@Base+0xf4>
   2a910:	ldr	r0, [r5, #192]	; 0xc0
   2a914:	add	r0, r0, r4
   2a918:	str	r0, [r5, #192]	; 0xc0
   2a91c:	mov	r0, #0
   2a920:	sub	sp, fp, #24
   2a924:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a928:	mov	r0, #0
   2a92c:	str	r0, [sp, #12]
   2a930:	ldr	r0, [r8]
   2a934:	ldr	r1, [r8, #20]
   2a938:	ldr	r3, [r5, #24]
   2a93c:	ldr	r2, [r0, #16]
   2a940:	add	r0, sp, #12
   2a944:	str	r1, [sp]
   2a948:	mov	r1, #2
   2a94c:	str	r0, [sp, #4]
   2a950:	add	r0, r8, #8
   2a954:	bl	111c8 <mythread_queue_list_entry_push@plt>
   2a958:	str	r0, [r5, #20]
   2a95c:	ldr	r0, [sp, #12]
   2a960:	cmp	r0, #0
   2a964:	bne	2a920 <myhtml_tokenizer_chunk_process@@Base+0x12c>
   2a968:	b	2a85c <myhtml_tokenizer_chunk_process@@Base+0x68>
   2a96c:	mov	r0, #2
   2a970:	sub	sp, fp, #24
   2a974:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a978 <myhtml_tokenizer_post@@Base>:
   2a978:	push	{r4, sl, fp, lr}
   2a97c:	add	fp, sp, #8
   2a980:	ldr	r1, [r0]
   2a984:	mov	r4, r0
   2a988:	ldr	r0, [r1]
   2a98c:	cmp	r0, #0
   2a990:	beq	2a9a0 <myhtml_tokenizer_post@@Base+0x28>
   2a994:	mov	r1, #0
   2a998:	bl	11414 <mythread_resume@plt>
   2a99c:	ldr	r1, [r4]
   2a9a0:	ldr	r0, [r1, #4]
   2a9a4:	cmp	r0, #0
   2a9a8:	popeq	{r4, sl, fp, pc}
   2a9ac:	mov	r1, #0
   2a9b0:	pop	{r4, sl, fp, lr}
   2a9b4:	b	11414 <mythread_resume@plt>

0002a9b8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   2a9b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a9bc:	add	fp, sp, #28
   2a9c0:	sub	sp, sp, #4
   2a9c4:	mov	r7, r0
   2a9c8:	ldr	r0, [r0, #200]	; 0xc8
   2a9cc:	mov	r5, r2
   2a9d0:	mov	r6, r1
   2a9d4:	bl	11678 <myencoding_get_function_by_id@plt>
   2a9d8:	ldr	r9, [r7, #148]	; 0x94
   2a9dc:	mov	sl, r0
   2a9e0:	cmp	r9, #0
   2a9e4:	beq	2aa9c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xe4>
   2a9e8:	mov	r0, r9
   2a9ec:	bl	118f4 <myhtml_stream_buffer_current_entry@plt>
   2a9f0:	cmp	r5, #0
   2a9f4:	beq	2aaf0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x138>
   2a9f8:	ldr	r8, [r0, #4]
   2a9fc:	str	r7, [sp]
   2aa00:	mov	r4, r0
   2aa04:	add	r7, r9, #12
   2aa08:	b	2aa40 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x88>
   2aa0c:	ldr	r3, [r0, #4]
   2aa10:	mov	r4, r0
   2aa14:	mov	r8, r3
   2aa18:	ldr	r1, [r4]
   2aa1c:	ldr	r0, [r9, #24]
   2aa20:	add	r1, r1, r3
   2aa24:	bl	11b1c <myencoding_codepoint_to_ascii_utf_8@plt>
   2aa28:	ldr	r1, [r4, #4]
   2aa2c:	add	r0, r1, r0
   2aa30:	str	r0, [r4, #4]
   2aa34:	add	r6, r6, #1
   2aa38:	subs	r5, r5, #1
   2aa3c:	beq	2ab00 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x148>
   2aa40:	ldrb	r0, [r6]
   2aa44:	mov	r1, r7
   2aa48:	blx	sl
   2aa4c:	cmp	r0, #0
   2aa50:	bne	2aa34 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x7c>
   2aa54:	ldr	r3, [r4, #4]
   2aa58:	ldr	r1, [r4, #8]
   2aa5c:	add	r2, r3, #4
   2aa60:	cmp	r2, r1
   2aa64:	bcc	2aa18 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x60>
   2aa68:	ldr	r0, [sp]
   2aa6c:	mov	r1, #0
   2aa70:	sub	r2, r3, r8
   2aa74:	str	r1, [r0, #200]	; 0xc8
   2aa78:	ldr	r1, [r4]
   2aa7c:	add	r1, r1, r8
   2aa80:	bl	11390 <myhtml_tokenizer_chunk_process@plt>
   2aa84:	mov	r0, r9
   2aa88:	mov	r1, #16384	; 0x4000
   2aa8c:	bl	11750 <myhtml_stream_buffer_add_entry@plt>
   2aa90:	cmp	r0, #0
   2aa94:	bne	2aa0c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x54>
   2aa98:	b	2ab48 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x190>
   2aa9c:	bl	11b04 <myhtml_stream_buffer_create@plt>
   2aaa0:	cmp	r0, #0
   2aaa4:	str	r0, [r7, #148]	; 0x94
   2aaa8:	beq	2ab38 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x180>
   2aaac:	mov	r1, #1024	; 0x400
   2aab0:	mov	r4, r7
   2aab4:	bl	11a38 <myhtml_stream_buffer_init@plt>
   2aab8:	mov	r7, r0
   2aabc:	cmp	r0, #0
   2aac0:	bne	2ab2c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x174>
   2aac4:	ldr	r0, [r4, #148]	; 0x94
   2aac8:	mov	r1, #16384	; 0x4000
   2aacc:	mov	r7, r4
   2aad0:	bl	11750 <myhtml_stream_buffer_add_entry@plt>
   2aad4:	cmp	r0, #0
   2aad8:	beq	2ab48 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x190>
   2aadc:	ldr	r9, [r7, #148]	; 0x94
   2aae0:	mov	r0, r9
   2aae4:	bl	118f4 <myhtml_stream_buffer_current_entry@plt>
   2aae8:	cmp	r5, #0
   2aaec:	bne	2a9f8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x40>
   2aaf0:	mov	r7, #0
   2aaf4:	mov	r0, r7
   2aaf8:	sub	sp, fp, #28
   2aafc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab00:	ldr	r1, [r4, #4]
   2ab04:	mov	r7, #0
   2ab08:	cmp	r1, r8
   2ab0c:	beq	2ab2c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x174>
   2ab10:	ldr	r0, [sp]
   2ab14:	mov	r7, #0
   2ab18:	sub	r2, r1, r8
   2ab1c:	str	r7, [r0, #200]	; 0xc8
   2ab20:	ldr	r1, [r4]
   2ab24:	add	r1, r1, r8
   2ab28:	bl	11390 <myhtml_tokenizer_chunk_process@plt>
   2ab2c:	mov	r0, r7
   2ab30:	sub	sp, fp, #28
   2ab34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab38:	mov	r7, #37632	; 0x9300
   2ab3c:	mov	r0, r7
   2ab40:	sub	sp, fp, #28
   2ab44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab48:	movw	r7, #37636	; 0x9304
   2ab4c:	mov	r0, r7
   2ab50:	sub	sp, fp, #28
   2ab54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002ab58 <myhtml_tokenizer_end@@Base>:
   2ab58:	push	{r4, r5, fp, lr}
   2ab5c:	add	fp, sp, #8
   2ab60:	sub	sp, sp, #8
   2ab64:	mov	r4, r0
   2ab68:	ldr	r0, [r0, #76]	; 0x4c
   2ab6c:	cmp	r0, #0
   2ab70:	beq	2abac <myhtml_tokenizer_end@@Base+0x54>
   2ab74:	ldr	r3, [r0, #8]
   2ab78:	ldr	r2, [r4, #192]	; 0xc0
   2ab7c:	ldr	ip, [r4]
   2ab80:	ldr	r1, [r4, #64]	; 0x40
   2ab84:	ldr	r5, [r4, #160]	; 0xa0
   2ab88:	sub	r2, r2, r3
   2ab8c:	str	r2, [r4, #192]	; 0xc0
   2ab90:	ldr	r2, [ip, #24]
   2ab94:	add	r2, r2, r5, lsl #2
   2ab98:	ldr	r5, [r2, #280]	; 0x118
   2ab9c:	ldr	r2, [r0]
   2aba0:	mov	r0, r4
   2aba4:	str	r3, [sp]
   2aba8:	blx	r5
   2abac:	ldr	r2, [r4, #64]	; 0x40
   2abb0:	mov	r0, #251	; 0xfb
   2abb4:	mov	r1, #0
   2abb8:	str	r0, [r2]
   2abbc:	mov	r0, r4
   2abc0:	bl	110e4 <myhtml_queue_add@plt>
   2abc4:	cmp	r0, #0
   2abc8:	beq	2abe4 <myhtml_tokenizer_end@@Base+0x8c>
   2abcc:	mov	r5, #2
   2abd0:	str	r5, [r4, #196]	; 0xc4
   2abd4:	ldr	r0, [r4, #180]	; 0xb4
   2abd8:	tst	r0, #16
   2abdc:	beq	2abf4 <myhtml_tokenizer_end@@Base+0x9c>
   2abe0:	b	2ac80 <myhtml_tokenizer_end@@Base+0x128>
   2abe4:	ldr	r5, [r4, #196]	; 0xc4
   2abe8:	ldr	r0, [r4, #180]	; 0xb4
   2abec:	tst	r0, #16
   2abf0:	bne	2ac80 <myhtml_tokenizer_end@@Base+0x128>
   2abf4:	ldr	r0, [r4]
   2abf8:	ldr	r1, [r4, #20]
   2abfc:	ldr	r0, [r0]
   2ac00:	bl	1178c <mythread_queue_list_entry_wait_for_done@plt>
   2ac04:	ldr	r0, [r4]
   2ac08:	ldr	r3, [r4, #20]
   2ac0c:	ldr	r1, [r0], #8
   2ac10:	ldr	r2, [r1, #16]
   2ac14:	mov	r1, #0
   2ac18:	str	r1, [sp]
   2ac1c:	mov	r1, #2
   2ac20:	bl	10dcc <mythread_queue_list_entry_delete@plt>
   2ac24:	str	r0, [r4, #20]
   2ac28:	ldr	r0, [r4]
   2ac2c:	ldr	r0, [r0]
   2ac30:	ldr	r0, [r0, #16]
   2ac34:	bl	114e0 <mythread_queue_list_get_count@plt>
   2ac38:	cmp	r0, #0
   2ac3c:	bne	2ac68 <myhtml_tokenizer_end@@Base+0x110>
   2ac40:	ldr	r1, [r4]
   2ac44:	ldr	r0, [r1]
   2ac48:	cmp	r0, #0
   2ac4c:	beq	2ac58 <myhtml_tokenizer_end@@Base+0x100>
   2ac50:	bl	1187c <mythread_stop@plt>
   2ac54:	ldr	r1, [r4]
   2ac58:	ldr	r0, [r1, #4]
   2ac5c:	cmp	r0, #0
   2ac60:	beq	2ac68 <myhtml_tokenizer_end@@Base+0x110>
   2ac64:	bl	1187c <mythread_stop@plt>
   2ac68:	cmp	r5, #0
   2ac6c:	bne	2ac80 <myhtml_tokenizer_end@@Base+0x128>
   2ac70:	ldr	r0, [r4]
   2ac74:	ldr	r0, [r0]
   2ac78:	bl	1145c <mythread_check_status@plt>
   2ac7c:	mov	r5, r0
   2ac80:	ldr	r0, [r4, #180]	; 0xb4
   2ac84:	orr	r0, r0, #32
   2ac88:	str	r0, [r4, #180]	; 0xb4
   2ac8c:	mov	r0, r5
   2ac90:	sub	sp, fp, #8
   2ac94:	pop	{r4, r5, fp, pc}

0002ac98 <myhtml_tokenizer_pause@@Base>:
   2ac98:	push	{r4, sl, fp, lr}
   2ac9c:	add	fp, sp, #8
   2aca0:	ldr	r1, [r0]
   2aca4:	mov	r4, r0
   2aca8:	ldr	r0, [r1]
   2acac:	cmp	r0, #0
   2acb0:	beq	2acbc <myhtml_tokenizer_pause@@Base+0x24>
   2acb4:	bl	1187c <mythread_stop@plt>
   2acb8:	ldr	r1, [r4]
   2acbc:	ldr	r0, [r1, #4]
   2acc0:	cmp	r0, #0
   2acc4:	popeq	{r4, sl, fp, pc}
   2acc8:	pop	{r4, sl, fp, lr}
   2accc:	b	1187c <mythread_stop@plt>

0002acd0 <myhtml_tokenizer_fragment_init@@Base>:
   2acd0:	push	{r4, r5, r6, sl, fp, lr}
   2acd4:	add	fp, sp, #16
   2acd8:	mov	r6, r2
   2acdc:	mov	r5, r1
   2ace0:	mov	r4, r0
   2ace4:	bl	110a8 <myhtml_tree_node_create@plt>
   2ace8:	cmp	r6, #1
   2acec:	str	r0, [r4, #88]	; 0x58
   2acf0:	stmib	r0, {r5, r6}
   2acf4:	bne	2ad28 <myhtml_tokenizer_fragment_init@@Base+0x58>
   2acf8:	cmp	r5, #93	; 0x5d
   2acfc:	bne	2ad14 <myhtml_tokenizer_fragment_init@@Base+0x44>
   2ad00:	ldr	r0, [r4, #180]	; 0xb4
   2ad04:	tst	r0, #1
   2ad08:	moveq	r0, #0
   2ad0c:	movne	r0, #4
   2ad10:	b	2ad24 <myhtml_tokenizer_fragment_init@@Base+0x54>
   2ad14:	ldr	r0, [r4, #28]
   2ad18:	mov	r1, r5
   2ad1c:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2ad20:	ldr	r0, [r0, #12]
   2ad24:	str	r0, [r4, #160]	; 0xa0
   2ad28:	ldr	r0, [r4, #8]
   2ad2c:	ldr	r1, [r0, #12]
   2ad30:	bl	117e0 <myhtml_token_node_create@plt>
   2ad34:	ldr	r1, [r4, #88]	; 0x58
   2ad38:	cmp	r0, #0
   2ad3c:	str	r0, [r1, #32]
   2ad40:	beq	2ad8c <myhtml_tokenizer_fragment_init@@Base+0xbc>
   2ad44:	bl	1148c <myhtml_token_set_done@plt>
   2ad48:	ldr	r0, [r4, #88]	; 0x58
   2ad4c:	mov	r1, #0
   2ad50:	mov	r2, #1
   2ad54:	ldr	r0, [r0, #32]
   2ad58:	str	r0, [r4, #156]	; 0x9c
   2ad5c:	mov	r0, r4
   2ad60:	bl	10dc0 <myhtml_tree_node_insert_root@plt>
   2ad64:	mov	r6, r0
   2ad68:	cmp	r5, #128	; 0x80
   2ad6c:	bne	2ad7c <myhtml_tokenizer_fragment_init@@Base+0xac>
   2ad70:	mov	r0, r4
   2ad74:	mov	r1, #17
   2ad78:	bl	11078 <myhtml_tree_template_insertion_append@plt>
   2ad7c:	mov	r0, r4
   2ad80:	bl	115d0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   2ad84:	mov	r0, r6
   2ad88:	pop	{r4, r5, r6, sl, fp, pc}
   2ad8c:	mov	r6, #0
   2ad90:	mov	r0, r6
   2ad94:	pop	{r4, r5, r6, sl, fp, pc}

0002ad98 <myhtml_tokenizer_wait@@Base>:
   2ad98:	ldr	r1, [r0]
   2ad9c:	ldr	r2, [r1]
   2ada0:	cmp	r2, #0
   2ada4:	bxeq	lr
   2ada8:	ldr	r1, [r0, #20]
   2adac:	mov	r0, r2
   2adb0:	b	1178c <mythread_queue_list_entry_wait_for_done@plt>

0002adb4 <myhtml_tokenizer_calc_current_namespace@@Base>:
   2adb4:	push	{r4, r5, fp, lr}
   2adb8:	add	fp, sp, #8
   2adbc:	mov	r4, r0
   2adc0:	ldr	r0, [r0, #184]	; 0xb8
   2adc4:	tst	r0, #1
   2adc8:	bne	2ae3c <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   2adcc:	ldr	r0, [r4, #180]	; 0xb4
   2add0:	tst	r0, #16
   2add4:	bne	2ae34 <myhtml_tokenizer_calc_current_namespace@@Base+0x80>
   2add8:	mov	r5, r1
   2addc:	ldr	r1, [r1]
   2ade0:	cmp	r1, #54	; 0x36
   2ade4:	beq	2adf4 <myhtml_tokenizer_calc_current_namespace@@Base+0x40>
   2ade8:	cmp	r1, #218	; 0xda
   2adec:	cmpne	r1, #124	; 0x7c
   2adf0:	bne	2adfc <myhtml_tokenizer_calc_current_namespace@@Base+0x48>
   2adf4:	str	r5, [r4, #156]	; 0x9c
   2adf8:	pop	{r4, r5, fp, pc}
   2adfc:	ldr	r0, [r4, #156]	; 0x9c
   2ae00:	cmp	r0, #0
   2ae04:	beq	2ae3c <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   2ae08:	ldr	r0, [r5, #48]	; 0x30
   2ae0c:	tst	r0, #1
   2ae10:	bne	2ae3c <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   2ae14:	ldr	r0, [r4, #28]
   2ae18:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2ae1c:	ldr	r0, [r0, #12]
   2ae20:	cmp	r0, #0
   2ae24:	popeq	{r4, r5, fp, pc}
   2ae28:	mov	r0, r4
   2ae2c:	mov	r1, r5
   2ae30:	bl	10e74 <myhtml_tree_wait_for_last_done_token@plt>
   2ae34:	ldr	r0, [r4, #164]	; 0xa4
   2ae38:	str	r0, [r4, #160]	; 0xa0
   2ae3c:	pop	{r4, r5, fp, pc}

0002ae40 <myhtml_check_tag_parser@@Base>:
   2ae40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ae44:	add	fp, sp, #24
   2ae48:	sub	sp, sp, #8
   2ae4c:	mov	r4, r1
   2ae50:	mov	r8, r2
   2ae54:	ldr	r1, [r1, #24]
   2ae58:	ldr	r5, [r0, #28]
   2ae5c:	mov	r6, r3
   2ae60:	mov	r7, r0
   2ae64:	ldr	r2, [r4, #28]
   2ae68:	cmp	r2, r3
   2ae6c:	bls	2aea0 <myhtml_check_tag_parser@@Base+0x60>
   2ae70:	mov	r0, r7
   2ae74:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   2ae78:	ldr	r2, [r4, #28]
   2ae7c:	mov	r1, r0
   2ae80:	mov	r0, r5
   2ae84:	bl	118e8 <myhtml_tag_get_by_name@plt>
   2ae88:	cmp	r0, #0
   2ae8c:	beq	2aebc <myhtml_check_tag_parser@@Base+0x7c>
   2ae90:	ldr	r0, [r0]
   2ae94:	str	r0, [r4]
   2ae98:	sub	sp, fp, #24
   2ae9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aea0:	ldr	r0, [r7, #192]	; 0xc0
   2aea4:	sub	r0, r1, r0
   2aea8:	add	r1, r8, r0
   2aeac:	mov	r0, r5
   2aeb0:	bl	118e8 <myhtml_tag_get_by_name@plt>
   2aeb4:	cmp	r0, #0
   2aeb8:	bne	2ae90 <myhtml_check_tag_parser@@Base+0x50>
   2aebc:	ldr	r2, [r4, #28]
   2aec0:	ldr	r1, [r4, #24]
   2aec4:	cmp	r2, r6
   2aec8:	bls	2aee8 <myhtml_check_tag_parser@@Base+0xa8>
   2aecc:	mov	r0, r7
   2aed0:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   2aed4:	ldr	r2, [r4, #28]
   2aed8:	mov	r1, r0
   2aedc:	mov	r0, #1
   2aee0:	str	r0, [sp]
   2aee4:	b	2aefc <myhtml_check_tag_parser@@Base+0xbc>
   2aee8:	ldr	r0, [r7, #192]	; 0xc0
   2aeec:	mov	r3, #1
   2aef0:	str	r3, [sp]
   2aef4:	sub	r0, r1, r0
   2aef8:	add	r1, r8, r0
   2aefc:	mov	r0, r5
   2af00:	mov	r3, #0
   2af04:	bl	110cc <myhtml_tag_add@plt>
   2af08:	mov	r1, r0
   2af0c:	str	r0, [r4]
   2af10:	mov	r0, r5
   2af14:	mov	r2, #1
   2af18:	mov	r3, #1
   2af1c:	sub	sp, fp, #24
   2af20:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2af24:	b	11060 <myhtml_tag_set_category@plt>

0002af28 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   2af28:	push	{r4, sl, fp, lr}
   2af2c:	add	fp, sp, #8
   2af30:	mov	r4, r0
   2af34:	ldr	r0, [r1]
   2af38:	mov	r2, r1
   2af3c:	cmp	r0, #0
   2af40:	bne	2af90 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   2af44:	ldr	r0, [r2, #24]
   2af48:	cmp	r0, r3
   2af4c:	bcs	2af90 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   2af50:	mov	r1, #1
   2af54:	sub	r3, r3, r0
   2af58:	ldr	ip, [fp, #8]
   2af5c:	str	r1, [r2]
   2af60:	str	r3, [r2, #36]	; 0x24
   2af64:	ldr	r1, [r2, #32]
   2af68:	ldr	lr, [r2, #48]	; 0x30
   2af6c:	str	r0, [r2, #32]
   2af70:	str	r3, [r2, #28]
   2af74:	orr	r0, lr, ip
   2af78:	str	r0, [r2, #48]	; 0x30
   2af7c:	mov	r0, r4
   2af80:	bl	110e4 <myhtml_queue_add@plt>
   2af84:	cmp	r0, #0
   2af88:	mov	r2, #0
   2af8c:	ldreq	r2, [r4, #64]	; 0x40
   2af90:	mov	r0, r2
   2af94:	pop	{r4, sl, fp, pc}

0002af98 <myhtml_tokenizer_set_state@@Base>:
   2af98:	push	{r4, sl, fp, lr}
   2af9c:	add	fp, sp, #8
   2afa0:	ldr	r2, [r1, #48]	; 0x30
   2afa4:	mov	r4, r0
   2afa8:	mov	r0, #0
   2afac:	tst	r2, #1
   2afb0:	bne	2afd8 <myhtml_tokenizer_set_state@@Base+0x40>
   2afb4:	ldr	r1, [r1]
   2afb8:	cmp	r1, #93	; 0x5d
   2afbc:	bne	2afcc <myhtml_tokenizer_set_state@@Base+0x34>
   2afc0:	ldr	r2, [r4, #180]	; 0xb4
   2afc4:	tst	r2, #1
   2afc8:	beq	2afd8 <myhtml_tokenizer_set_state@@Base+0x40>
   2afcc:	ldr	r0, [r4, #28]
   2afd0:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2afd4:	ldr	r0, [r0, #12]
   2afd8:	str	r0, [r4, #160]	; 0xa0
   2afdc:	pop	{r4, sl, fp, pc}

0002afe0 <myhtml_tokenizer_state_rcdata@@Base>:
   2afe0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2afe4:	add	fp, sp, #24
   2afe8:	mov	r5, r0
   2afec:	ldr	r0, [r0, #60]	; 0x3c
   2aff0:	ldr	r6, [fp, #8]
   2aff4:	mov	r4, r3
   2aff8:	mov	r7, r2
   2affc:	mov	r8, r1
   2b000:	cmp	r0, #0
   2b004:	bne	2b04c <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   2b008:	ldr	r0, [r5, #192]	; 0xc0
   2b00c:	add	r0, r0, r4
   2b010:	str	r0, [r8, #24]
   2b014:	ldr	r0, [r5, #68]	; 0x44
   2b018:	bl	10e80 <mythread_queue_get_prev_node@plt>
   2b01c:	cmp	r0, #0
   2b020:	beq	2b038 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   2b024:	ldr	r0, [r0, #4]
   2b028:	cmp	r0, #0
   2b02c:	beq	2b038 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   2b030:	ldr	r0, [r0]
   2b034:	b	2b048 <myhtml_tokenizer_state_rcdata@@Base+0x68>
   2b038:	ldr	r0, [r5, #88]	; 0x58
   2b03c:	cmp	r0, #0
   2b040:	beq	2b04c <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   2b044:	ldr	r0, [r0, #4]
   2b048:	str	r0, [r5, #60]	; 0x3c
   2b04c:	cmp	r4, r6
   2b050:	bcs	2b070 <myhtml_tokenizer_state_rcdata@@Base+0x90>
   2b054:	ldrb	r0, [r7, r4]
   2b058:	cmp	r0, #60	; 0x3c
   2b05c:	beq	2b078 <myhtml_tokenizer_state_rcdata@@Base+0x98>
   2b060:	add	r4, r4, #1
   2b064:	cmp	r6, r4
   2b068:	bne	2b054 <myhtml_tokenizer_state_rcdata@@Base+0x74>
   2b06c:	mov	r4, r6
   2b070:	mov	r0, r4
   2b074:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b078:	ldr	r0, [r5, #192]	; 0xc0
   2b07c:	add	r0, r0, r4
   2b080:	add	r4, r4, #1
   2b084:	str	r0, [r8, #32]
   2b088:	mov	r0, #10
   2b08c:	str	r0, [r5, #160]	; 0xa0
   2b090:	mov	r0, r4
   2b094:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b098 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   2b098:	ldrb	r1, [r2, r3]
   2b09c:	mov	r2, #2
   2b0a0:	cmp	r1, #47	; 0x2f
   2b0a4:	movweq	r2, #11
   2b0a8:	addeq	r3, r3, #1
   2b0ac:	str	r2, [r0, #160]	; 0xa0
   2b0b0:	mov	r0, r3
   2b0b4:	bx	lr

0002b0b8 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   2b0b8:	ldrb	r1, [r2, r3]
   2b0bc:	ldr	r2, [pc, #28]	; 2b0e0 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   2b0c0:	add	r2, pc, r2
   2b0c4:	ldrb	r1, [r2, r1]
   2b0c8:	mov	r2, #2
   2b0cc:	cmp	r1, #1
   2b0d0:	movweq	r2, #12
   2b0d4:	str	r2, [r0, #160]	; 0xa0
   2b0d8:	mov	r0, r3
   2b0dc:	bx	lr
   2b0e0:	andeq	r9, sp, sl, lsl #4

0002b0e4 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   2b0e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b0e8:	add	fp, sp, #24
   2b0ec:	mov	r5, r0
   2b0f0:	mov	r6, r1
   2b0f4:	ldr	r0, [r3]
   2b0f8:	mov	r4, r3
   2b0fc:	ldr	r1, [r5, #192]	; 0xc0
   2b100:	add	r0, r1, r0
   2b104:	ldr	r1, [r6, #24]
   2b108:	sub	r0, r0, r1
   2b10c:	mov	r1, r6
   2b110:	str	r0, [r6, #28]
   2b114:	mov	r0, r5
   2b118:	ldr	r3, [r3]
   2b11c:	bl	11954 <myhtml_check_tag_parser@plt>
   2b120:	ldr	r0, [r6]
   2b124:	ldr	r2, [r5, #60]	; 0x3c
   2b128:	ldr	r1, [fp, #8]
   2b12c:	cmp	r0, r2
   2b130:	bne	2b1d4 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xf0>
   2b134:	ldr	r7, [r6, #24]
   2b138:	sub	r2, r7, #2
   2b13c:	cmp	r2, r1
   2b140:	bls	2b1a8 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xc4>
   2b144:	ldr	r8, [r6, #32]
   2b148:	ldr	r0, [fp, #12]
   2b14c:	ldr	r3, [r6, #48]	; 0x30
   2b150:	orr	r0, r3, r0
   2b154:	str	r0, [r6, #48]	; 0x30
   2b158:	mov	r0, #1
   2b15c:	str	r0, [r6]
   2b160:	sub	r0, r2, r1
   2b164:	str	r1, [r6, #24]
   2b168:	mov	r2, r6
   2b16c:	str	r0, [r6, #28]
   2b170:	str	r1, [r6, #32]
   2b174:	str	r0, [r6, #36]	; 0x24
   2b178:	ldr	r0, [r6, #48]	; 0x30
   2b17c:	ldr	r1, [r6, #48]	; 0x30
   2b180:	and	r0, r0, #8
   2b184:	eor	r0, r1, r0
   2b188:	str	r0, [r6, #48]	; 0x30
   2b18c:	mov	r0, r5
   2b190:	ldr	r1, [r4]
   2b194:	bl	110e4 <myhtml_queue_add@plt>
   2b198:	ldr	r6, [r5, #64]	; 0x40
   2b19c:	str	r8, [r6, #32]
   2b1a0:	str	r7, [r6, #24]
   2b1a4:	ldr	r0, [r5, #60]	; 0x3c
   2b1a8:	str	r0, [r6]
   2b1ac:	ldr	r0, [r6, #48]	; 0x30
   2b1b0:	orr	r0, r0, #1
   2b1b4:	str	r0, [r6, #48]	; 0x30
   2b1b8:	ldr	r0, [r5, #192]	; 0xc0
   2b1bc:	ldr	r1, [r4]
   2b1c0:	add	r0, r1, r0
   2b1c4:	sub	r0, r0, r7
   2b1c8:	str	r0, [r6, #28]
   2b1cc:	mov	r0, #1
   2b1d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b1d4:	mov	r0, #0
   2b1d8:	str	r1, [r6, #24]
   2b1dc:	mov	r1, #2
   2b1e0:	str	r0, [r6, #28]
   2b1e4:	str	r1, [r5, #160]	; 0xa0
   2b1e8:	ldr	r1, [r4]
   2b1ec:	add	r1, r1, #1
   2b1f0:	str	r1, [r4]
   2b1f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b1f8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   2b1f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b1fc:	add	fp, sp, #24
   2b200:	sub	sp, sp, #16
   2b204:	str	r3, [sp, #12]
   2b208:	mov	r4, r0
   2b20c:	mov	r5, r1
   2b210:	ldr	r0, [r0, #192]	; 0xc0
   2b214:	ldr	r8, [r1, #24]
   2b218:	add	r0, r0, r3
   2b21c:	str	r0, [r1, #24]
   2b220:	ldr	r0, [fp, #8]
   2b224:	cmp	r3, r0
   2b228:	bcs	2b344 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2b22c:	ldr	r1, [pc, #316]	; 2b370 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x178>
   2b230:	add	r1, pc, r1
   2b234:	ldrb	r7, [r2, r3]
   2b238:	ldrb	r6, [r1, r7]
   2b23c:	cmp	r6, #2
   2b240:	cmpne	r7, #47	; 0x2f
   2b244:	beq	2b26c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x74>
   2b248:	cmp	r7, #62	; 0x3e
   2b24c:	beq	2b2cc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd4>
   2b250:	cmp	r6, #1
   2b254:	bne	2b2bc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc4>
   2b258:	add	r3, r3, #1
   2b25c:	cmp	r0, r3
   2b260:	bne	2b234 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x3c>
   2b264:	str	r0, [sp, #12]
   2b268:	b	2b344 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2b26c:	mov	r0, #16
   2b270:	str	r3, [sp, #12]
   2b274:	add	r3, sp, #12
   2b278:	mov	r1, r5
   2b27c:	str	r8, [sp]
   2b280:	str	r0, [sp, #4]
   2b284:	mov	r0, r4
   2b288:	bl	11984 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2b28c:	cmp	r0, #0
   2b290:	beq	2b344 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2b294:	mov	r0, #0
   2b298:	str	r0, [r4, #60]	; 0x3c
   2b29c:	mov	r0, #33	; 0x21
   2b2a0:	str	r0, [r4, #160]	; 0xa0
   2b2a4:	ldr	r0, [sp, #12]
   2b2a8:	add	r5, r0, #1
   2b2ac:	str	r5, [sp, #12]
   2b2b0:	mov	r0, r5
   2b2b4:	sub	sp, fp, #24
   2b2b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b2bc:	mov	r0, #2
   2b2c0:	str	r3, [sp, #12]
   2b2c4:	str	r0, [r4, #160]	; 0xa0
   2b2c8:	b	2b344 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2b2cc:	mov	r0, #16
   2b2d0:	str	r3, [sp, #12]
   2b2d4:	add	r3, sp, #12
   2b2d8:	mov	r1, r5
   2b2dc:	str	r8, [sp]
   2b2e0:	str	r0, [sp, #4]
   2b2e4:	mov	r0, r4
   2b2e8:	bl	11984 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2b2ec:	cmp	r0, #0
   2b2f0:	beq	2b344 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   2b2f4:	ldr	r0, [sp, #12]
   2b2f8:	add	r5, r0, #1
   2b2fc:	str	r5, [sp, #12]
   2b300:	ldr	r2, [r4, #64]	; 0x40
   2b304:	ldr	r0, [r4, #192]	; 0xc0
   2b308:	ldr	r1, [r2, #32]
   2b30c:	add	r0, r0, r5
   2b310:	sub	r0, r0, r1
   2b314:	mov	r1, r5
   2b318:	str	r0, [r2, #36]	; 0x24
   2b31c:	mov	r0, r4
   2b320:	bl	110e4 <myhtml_queue_add@plt>
   2b324:	cmp	r0, #0
   2b328:	beq	2b358 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x160>
   2b32c:	mov	r0, #69	; 0x45
   2b330:	mov	r5, #0
   2b334:	str	r0, [r4, #160]	; 0xa0
   2b338:	mov	r0, r5
   2b33c:	sub	sp, fp, #24
   2b340:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b344:	str	r8, [r5, #24]
   2b348:	ldr	r5, [sp, #12]
   2b34c:	mov	r0, r5
   2b350:	sub	sp, fp, #24
   2b354:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b358:	mov	r0, #0
   2b35c:	str	r0, [r4, #160]	; 0xa0
   2b360:	str	r0, [r4, #60]	; 0x3c
   2b364:	mov	r0, r5
   2b368:	sub	sp, fp, #24
   2b36c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b370:	muleq	sp, sl, r0

0002b374 <myhtml_tokenizer_state_rawtext@@Base>:
   2b374:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b378:	add	fp, sp, #24
   2b37c:	mov	r5, r0
   2b380:	ldr	r0, [r0, #60]	; 0x3c
   2b384:	ldr	r6, [fp, #8]
   2b388:	mov	r4, r3
   2b38c:	mov	r7, r2
   2b390:	mov	r8, r1
   2b394:	cmp	r0, #0
   2b398:	bne	2b3e0 <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   2b39c:	ldr	r0, [r5, #192]	; 0xc0
   2b3a0:	add	r0, r0, r4
   2b3a4:	str	r0, [r8, #24]
   2b3a8:	ldr	r0, [r5, #68]	; 0x44
   2b3ac:	bl	10e80 <mythread_queue_get_prev_node@plt>
   2b3b0:	cmp	r0, #0
   2b3b4:	beq	2b3cc <myhtml_tokenizer_state_rawtext@@Base+0x58>
   2b3b8:	ldr	r0, [r0, #4]
   2b3bc:	cmp	r0, #0
   2b3c0:	beq	2b3cc <myhtml_tokenizer_state_rawtext@@Base+0x58>
   2b3c4:	ldr	r0, [r0]
   2b3c8:	b	2b3dc <myhtml_tokenizer_state_rawtext@@Base+0x68>
   2b3cc:	ldr	r0, [r5, #88]	; 0x58
   2b3d0:	cmp	r0, #0
   2b3d4:	beq	2b3e0 <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   2b3d8:	ldr	r0, [r0, #4]
   2b3dc:	str	r0, [r5, #60]	; 0x3c
   2b3e0:	cmp	r4, r6
   2b3e4:	bcs	2b404 <myhtml_tokenizer_state_rawtext@@Base+0x90>
   2b3e8:	ldrb	r0, [r7, r4]
   2b3ec:	cmp	r0, #60	; 0x3c
   2b3f0:	beq	2b40c <myhtml_tokenizer_state_rawtext@@Base+0x98>
   2b3f4:	add	r4, r4, #1
   2b3f8:	cmp	r6, r4
   2b3fc:	bne	2b3e8 <myhtml_tokenizer_state_rawtext@@Base+0x74>
   2b400:	mov	r4, r6
   2b404:	mov	r0, r4
   2b408:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b40c:	ldr	r0, [r5, #192]	; 0xc0
   2b410:	add	r0, r0, r4
   2b414:	add	r4, r4, #1
   2b418:	str	r0, [r8, #32]
   2b41c:	mov	r0, #13
   2b420:	str	r0, [r5, #160]	; 0xa0
   2b424:	mov	r0, r4
   2b428:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002b42c <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   2b42c:	ldrb	r1, [r2, r3]
   2b430:	mov	r2, #4
   2b434:	cmp	r1, #47	; 0x2f
   2b438:	movweq	r2, #14
   2b43c:	addeq	r3, r3, #1
   2b440:	str	r2, [r0, #160]	; 0xa0
   2b444:	mov	r0, r3
   2b448:	bx	lr

0002b44c <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   2b44c:	ldrb	r1, [r2, r3]
   2b450:	ldr	r2, [pc, #28]	; 2b474 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   2b454:	add	r2, pc, r2
   2b458:	ldrb	r1, [r2, r1]
   2b45c:	mov	r2, #4
   2b460:	cmp	r1, #1
   2b464:	movweq	r2, #15
   2b468:	str	r2, [r0, #160]	; 0xa0
   2b46c:	mov	r0, r3
   2b470:	bx	lr
   2b474:	andeq	r8, sp, r6, ror lr

0002b478 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   2b478:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b47c:	add	fp, sp, #24
   2b480:	sub	sp, sp, #16
   2b484:	str	r3, [sp, #12]
   2b488:	mov	r8, r0
   2b48c:	mov	r5, r3
   2b490:	ldr	r0, [r0, #192]	; 0xc0
   2b494:	add	r3, r0, r3
   2b498:	ldr	r0, [r1, #24]
   2b49c:	str	r3, [r1, #24]
   2b4a0:	ldr	r3, [fp, #8]
   2b4a4:	cmp	r5, r3
   2b4a8:	bcs	2b4f0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   2b4ac:	ldr	r4, [pc, #328]	; 2b5fc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x184>
   2b4b0:	add	r4, pc, r4
   2b4b4:	ldrb	r7, [r2, r5]
   2b4b8:	ldrb	r6, [r4, r7]
   2b4bc:	cmp	r6, #2
   2b4c0:	beq	2b500 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x88>
   2b4c4:	cmp	r7, #47	; 0x2f
   2b4c8:	beq	2b500 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x88>
   2b4cc:	cmp	r7, #62	; 0x3e
   2b4d0:	beq	2b574 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xfc>
   2b4d4:	cmp	r6, #1
   2b4d8:	bne	2b548 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xd0>
   2b4dc:	add	r5, r5, #1
   2b4e0:	cmp	r3, r5
   2b4e4:	bne	2b4b4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x3c>
   2b4e8:	mov	r5, r3
   2b4ec:	str	r3, [sp, #12]
   2b4f0:	str	r0, [r1, #24]
   2b4f4:	mov	r0, r5
   2b4f8:	sub	sp, fp, #24
   2b4fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b500:	mov	r3, #32
   2b504:	stm	sp, {r0, r3}
   2b508:	add	r3, sp, #12
   2b50c:	mov	r0, r8
   2b510:	str	r5, [sp, #12]
   2b514:	bl	11984 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2b518:	cmp	r0, #0
   2b51c:	beq	2b564 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xec>
   2b520:	mov	r0, #0
   2b524:	str	r0, [r8, #60]	; 0x3c
   2b528:	mov	r0, #33	; 0x21
   2b52c:	str	r0, [r8, #160]	; 0xa0
   2b530:	ldr	r0, [sp, #12]
   2b534:	add	r5, r0, #1
   2b538:	str	r5, [sp, #12]
   2b53c:	mov	r0, r5
   2b540:	sub	sp, fp, #24
   2b544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b548:	str	r5, [sp, #12]
   2b54c:	str	r0, [r1, #24]
   2b550:	mov	r0, #4
   2b554:	str	r0, [r8, #160]	; 0xa0
   2b558:	mov	r0, r5
   2b55c:	sub	sp, fp, #24
   2b560:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b564:	ldr	r5, [sp, #12]
   2b568:	mov	r0, r5
   2b56c:	sub	sp, fp, #24
   2b570:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b574:	mov	r3, #32
   2b578:	stm	sp, {r0, r3}
   2b57c:	add	r3, sp, #12
   2b580:	mov	r0, r8
   2b584:	str	r5, [sp, #12]
   2b588:	bl	11984 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2b58c:	ldr	r5, [sp, #12]
   2b590:	cmp	r0, #0
   2b594:	beq	2b4f4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x7c>
   2b598:	add	r5, r5, #1
   2b59c:	str	r5, [sp, #12]
   2b5a0:	ldr	r2, [r8, #64]	; 0x40
   2b5a4:	ldr	r0, [r8, #192]	; 0xc0
   2b5a8:	ldr	r1, [r2, #32]
   2b5ac:	add	r0, r0, r5
   2b5b0:	sub	r0, r0, r1
   2b5b4:	mov	r1, r5
   2b5b8:	str	r0, [r2, #36]	; 0x24
   2b5bc:	mov	r0, r8
   2b5c0:	bl	110e4 <myhtml_queue_add@plt>
   2b5c4:	cmp	r0, #0
   2b5c8:	beq	2b5e4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x16c>
   2b5cc:	mov	r0, #69	; 0x45
   2b5d0:	mov	r5, #0
   2b5d4:	str	r0, [r8, #160]	; 0xa0
   2b5d8:	mov	r0, r5
   2b5dc:	sub	sp, fp, #24
   2b5e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b5e4:	mov	r0, #0
   2b5e8:	str	r0, [r8, #160]	; 0xa0
   2b5ec:	str	r0, [r8, #60]	; 0x3c
   2b5f0:	mov	r0, r5
   2b5f4:	sub	sp, fp, #24
   2b5f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b5fc:	andeq	r8, sp, sl, lsl lr

0002b600 <myhtml_tokenizer_state_plaintext@@Base>:
   2b600:	push	{r4, r5, fp, lr}
   2b604:	add	fp, sp, #8
   2b608:	mov	r4, r0
   2b60c:	ldr	r0, [r1, #48]	; 0x30
   2b610:	ldr	r5, [fp, #8]
   2b614:	mov	r2, r1
   2b618:	tst	r0, #128	; 0x80
   2b61c:	bne	2b62c <myhtml_tokenizer_state_plaintext@@Base+0x2c>
   2b620:	ldr	r0, [r2, #48]	; 0x30
   2b624:	orr	r0, r0, #128	; 0x80
   2b628:	str	r0, [r2, #48]	; 0x30
   2b62c:	ldr	r0, [r2, #48]	; 0x30
   2b630:	ldr	r1, [r2, #48]	; 0x30
   2b634:	and	r0, r0, #8
   2b638:	eor	r0, r1, r0
   2b63c:	mov	r1, #1
   2b640:	str	r0, [r2, #48]	; 0x30
   2b644:	ldr	r0, [r4, #192]	; 0xc0
   2b648:	str	r1, [r2]
   2b64c:	add	r1, r0, r3
   2b650:	add	r0, r0, r5
   2b654:	sub	r0, r0, r1
   2b658:	str	r0, [r2, #36]	; 0x24
   2b65c:	str	r1, [r2, #24]
   2b660:	str	r0, [r2, #28]
   2b664:	mov	r0, #0
   2b668:	mov	r1, r5
   2b66c:	str	r0, [r4, #160]	; 0xa0
   2b670:	mov	r0, r4
   2b674:	bl	110e4 <myhtml_queue_add@plt>
   2b678:	cmp	r0, #0
   2b67c:	movne	r0, #69	; 0x45
   2b680:	movne	r5, #0
   2b684:	strne	r0, [r4, #160]	; 0xa0
   2b688:	mov	r0, r5
   2b68c:	pop	{r4, r5, fp, pc}

0002b690 <myhtml_tokenizer_state_cdata_section@@Base>:
   2b690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b694:	add	fp, sp, #28
   2b698:	sub	sp, sp, #4
   2b69c:	mov	r4, r0
   2b6a0:	ldr	r0, [r1, #48]	; 0x30
   2b6a4:	ldr	r8, [fp, #8]
   2b6a8:	mov	sl, r3
   2b6ac:	mov	r6, r2
   2b6b0:	mov	r9, r1
   2b6b4:	tst	r0, #256	; 0x100
   2b6b8:	beq	2b6d0 <myhtml_tokenizer_state_cdata_section@@Base+0x40>
   2b6bc:	cmp	sl, r8
   2b6c0:	bcc	2b6e4 <myhtml_tokenizer_state_cdata_section@@Base+0x54>
   2b6c4:	mov	r0, sl
   2b6c8:	sub	sp, fp, #28
   2b6cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b6d0:	ldr	r0, [r9, #48]	; 0x30
   2b6d4:	orr	r0, r0, #256	; 0x100
   2b6d8:	str	r0, [r9, #48]	; 0x30
   2b6dc:	cmp	sl, r8
   2b6e0:	bcs	2b6c4 <myhtml_tokenizer_state_cdata_section@@Base+0x34>
   2b6e4:	rsb	r7, r8, #0
   2b6e8:	sub	r5, sl, #2
   2b6ec:	add	r0, r6, r5
   2b6f0:	ldrb	r1, [r0, #2]
   2b6f4:	cmp	r1, #62	; 0x3e
   2b6f8:	beq	2b71c <myhtml_tokenizer_state_cdata_section@@Base+0x8c>
   2b6fc:	add	r5, r5, #1
   2b700:	add	r0, r7, r5
   2b704:	cmn	r0, #2
   2b708:	beq	2b7b4 <myhtml_tokenizer_state_cdata_section@@Base+0x124>
   2b70c:	add	r0, r6, r5
   2b710:	ldrb	r1, [r0, #2]
   2b714:	cmp	r1, #62	; 0x3e
   2b718:	bne	2b6fc <myhtml_tokenizer_state_cdata_section@@Base+0x6c>
   2b71c:	add	r1, r5, #2
   2b720:	cmp	r1, #1
   2b724:	bhi	2b73c <myhtml_tokenizer_state_cdata_section@@Base+0xac>
   2b728:	ldr	r0, [r4, #192]	; 0xc0
   2b72c:	mov	r2, #2
   2b730:	add	r1, r5, r0
   2b734:	mov	r0, r4
   2b738:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   2b73c:	ldrb	r1, [r0]
   2b740:	cmp	r1, #93	; 0x5d
   2b744:	bne	2b6fc <myhtml_tokenizer_state_cdata_section@@Base+0x6c>
   2b748:	ldrb	r0, [r0, #1]
   2b74c:	cmp	r0, #93	; 0x5d
   2b750:	bne	2b6fc <myhtml_tokenizer_state_cdata_section@@Base+0x6c>
   2b754:	ldr	r1, [r9, #24]
   2b758:	ldr	r0, [r4, #192]	; 0xc0
   2b75c:	add	sl, r5, #3
   2b760:	sub	r1, r0, r1
   2b764:	adds	r1, r1, r5
   2b768:	str	r1, [r9, #28]
   2b76c:	beq	2b7c4 <myhtml_tokenizer_state_cdata_section@@Base+0x134>
   2b770:	ldr	r1, [r9, #32]
   2b774:	mov	r2, r9
   2b778:	sub	r0, r0, r1
   2b77c:	mov	r1, sl
   2b780:	add	r0, r0, r5
   2b784:	add	r0, r0, #3
   2b788:	str	r0, [r9, #36]	; 0x24
   2b78c:	mov	r0, r4
   2b790:	bl	110e4 <myhtml_queue_add@plt>
   2b794:	cmp	r0, #0
   2b798:	beq	2b7d0 <myhtml_tokenizer_state_cdata_section@@Base+0x140>
   2b79c:	mov	r0, #69	; 0x45
   2b7a0:	mov	sl, #0
   2b7a4:	str	r0, [r4, #160]	; 0xa0
   2b7a8:	mov	r0, sl
   2b7ac:	sub	sp, fp, #28
   2b7b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b7b4:	mov	sl, r8
   2b7b8:	mov	r0, sl
   2b7bc:	sub	sp, fp, #28
   2b7c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b7c4:	add	r0, r0, r5
   2b7c8:	add	r0, r0, #3
   2b7cc:	str	r0, [r9, #24]
   2b7d0:	mov	r0, #0
   2b7d4:	str	r0, [r4, #160]	; 0xa0
   2b7d8:	mov	r0, sl
   2b7dc:	sub	sp, fp, #28
   2b7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002b7e4 <myhtml_tokenizer_state_data@@Base>:
   2b7e4:	push	{r4, r5, fp, lr}
   2b7e8:	add	fp, sp, #8
   2b7ec:	ldr	ip, [fp, #8]
   2b7f0:	cmp	r3, ip
   2b7f4:	bcs	2b888 <myhtml_tokenizer_state_data@@Base+0xa4>
   2b7f8:	ldr	lr, [pc, #176]	; 2b8b0 <myhtml_tokenizer_state_data@@Base+0xcc>
   2b7fc:	add	lr, pc, lr
   2b800:	ldrb	r4, [r2, r3]
   2b804:	cmp	r4, #0
   2b808:	bne	2b834 <myhtml_tokenizer_state_data@@Base+0x50>
   2b80c:	b	2b840 <myhtml_tokenizer_state_data@@Base+0x5c>
   2b810:	ldr	r4, [r1, #48]	; 0x30
   2b814:	orr	r4, r4, #2048	; 0x800
   2b818:	str	r4, [r1, #48]	; 0x30
   2b81c:	add	r3, r3, #1
   2b820:	cmp	ip, r3
   2b824:	beq	2b884 <myhtml_tokenizer_state_data@@Base+0xa0>
   2b828:	ldrb	r4, [r2, r3]
   2b82c:	cmp	r4, #0
   2b830:	beq	2b840 <myhtml_tokenizer_state_data@@Base+0x5c>
   2b834:	cmp	r4, #60	; 0x3c
   2b838:	bne	2b84c <myhtml_tokenizer_state_data@@Base+0x68>
   2b83c:	b	2b890 <myhtml_tokenizer_state_data@@Base+0xac>
   2b840:	ldr	r5, [r1, #48]	; 0x30
   2b844:	tst	r5, #2048	; 0x800
   2b848:	beq	2b810 <myhtml_tokenizer_state_data@@Base+0x2c>
   2b84c:	ldr	r5, [r1, #48]	; 0x30
   2b850:	tst	r5, #8
   2b854:	beq	2b81c <myhtml_tokenizer_state_data@@Base+0x38>
   2b858:	ldrb	r4, [lr, r4]
   2b85c:	cmp	r4, #2
   2b860:	beq	2b81c <myhtml_tokenizer_state_data@@Base+0x38>
   2b864:	ldr	r4, [r1, #48]	; 0x30
   2b868:	ldr	r5, [r1, #48]	; 0x30
   2b86c:	and	r4, r4, #8
   2b870:	eor	r4, r5, r4
   2b874:	str	r4, [r1, #48]	; 0x30
   2b878:	ldr	r4, [r1, #48]	; 0x30
   2b87c:	orr	r4, r4, #512	; 0x200
   2b880:	b	2b818 <myhtml_tokenizer_state_data@@Base+0x34>
   2b884:	mov	r3, ip
   2b888:	mov	r0, r3
   2b88c:	pop	{r4, r5, fp, pc}
   2b890:	ldr	r2, [r0, #192]	; 0xc0
   2b894:	add	r2, r2, r3
   2b898:	add	r3, r3, #1
   2b89c:	str	r2, [r1, #32]
   2b8a0:	mov	r1, #7
   2b8a4:	str	r1, [r0, #160]	; 0xa0
   2b8a8:	mov	r0, r3
   2b8ac:	pop	{r4, r5, fp, pc}
   2b8b0:	andeq	r8, sp, lr, asr #21

0002b8b4 <myhtml_tokenizer_state_tag_open@@Base>:
   2b8b4:	push	{r4, r5, fp, lr}
   2b8b8:	add	fp, sp, #8
   2b8bc:	mov	r5, r3
   2b8c0:	mov	r4, r0
   2b8c4:	mov	r3, r1
   2b8c8:	ldrb	r0, [r2, r5]
   2b8cc:	ldr	r1, [pc, #516]	; 2bad8 <myhtml_tokenizer_state_tag_open@@Base+0x224>
   2b8d0:	add	r1, pc, r1
   2b8d4:	ldrb	r1, [r1, r0]
   2b8d8:	cmp	r1, #1
   2b8dc:	bne	2b96c <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   2b8e0:	ldr	r1, [r3]
   2b8e4:	ldr	r0, [r4, #192]	; 0xc0
   2b8e8:	cmp	r1, #0
   2b8ec:	bne	2b95c <myhtml_tokenizer_state_tag_open@@Base+0xa8>
   2b8f0:	ldr	r2, [r3, #24]
   2b8f4:	add	r1, r5, r0
   2b8f8:	sub	r1, r1, #1
   2b8fc:	cmp	r1, r2
   2b900:	bls	2b95c <myhtml_tokenizer_state_tag_open@@Base+0xa8>
   2b904:	mov	r0, #1
   2b908:	str	r0, [r3]
   2b90c:	sub	r0, r1, r2
   2b910:	str	r0, [r3, #36]	; 0x24
   2b914:	ldr	r1, [r3, #32]
   2b918:	ldr	ip, [r3, #48]	; 0x30
   2b91c:	str	r2, [r3, #32]
   2b920:	str	r0, [r3, #28]
   2b924:	mov	r2, r3
   2b928:	orr	r0, ip, #512	; 0x200
   2b92c:	str	r0, [r3, #48]	; 0x30
   2b930:	mov	r0, r4
   2b934:	bl	110e4 <myhtml_queue_add@plt>
   2b938:	mov	r1, r0
   2b93c:	mov	r0, #0
   2b940:	mov	r2, #69	; 0x45
   2b944:	cmp	r1, #0
   2b948:	bne	2bad0 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2b94c:	ldr	r3, [r4, #64]	; 0x40
   2b950:	cmp	r3, #0
   2b954:	beq	2bad0 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2b958:	ldr	r0, [r4, #192]	; 0xc0
   2b95c:	add	r0, r0, r5
   2b960:	mov	r2, #9
   2b964:	str	r0, [r3, #24]
   2b968:	b	2bacc <myhtml_tokenizer_state_tag_open@@Base+0x218>
   2b96c:	cmp	r0, #63	; 0x3f
   2b970:	beq	2ba18 <myhtml_tokenizer_state_tag_open@@Base+0x164>
   2b974:	cmp	r0, #47	; 0x2f
   2b978:	beq	2baa4 <myhtml_tokenizer_state_tag_open@@Base+0x1f0>
   2b97c:	cmp	r0, #33	; 0x21
   2b980:	bne	2bab4 <myhtml_tokenizer_state_tag_open@@Base+0x200>
   2b984:	ldr	r0, [r3]
   2b988:	ldr	r1, [r4, #192]	; 0xc0
   2b98c:	cmp	r0, #0
   2b990:	bne	2ba00 <myhtml_tokenizer_state_tag_open@@Base+0x14c>
   2b994:	add	r0, r5, r1
   2b998:	sub	r2, r0, #1
   2b99c:	ldr	r0, [r3, #24]
   2b9a0:	cmp	r2, r0
   2b9a4:	bls	2ba00 <myhtml_tokenizer_state_tag_open@@Base+0x14c>
   2b9a8:	mov	r1, #1
   2b9ac:	sub	r2, r2, r0
   2b9b0:	str	r1, [r3]
   2b9b4:	str	r2, [r3, #36]	; 0x24
   2b9b8:	ldr	r1, [r3, #32]
   2b9bc:	ldr	ip, [r3, #48]	; 0x30
   2b9c0:	str	r0, [r3, #32]
   2b9c4:	str	r2, [r3, #28]
   2b9c8:	mov	r2, r3
   2b9cc:	orr	r0, ip, #512	; 0x200
   2b9d0:	str	r0, [r3, #48]	; 0x30
   2b9d4:	mov	r0, r4
   2b9d8:	bl	110e4 <myhtml_queue_add@plt>
   2b9dc:	mov	r1, r0
   2b9e0:	mov	r0, #0
   2b9e4:	mov	r2, #69	; 0x45
   2b9e8:	cmp	r1, #0
   2b9ec:	bne	2bad0 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2b9f0:	ldr	r3, [r4, #64]	; 0x40
   2b9f4:	cmp	r3, #0
   2b9f8:	beq	2bad0 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2b9fc:	ldr	r1, [r4, #192]	; 0xc0
   2ba00:	add	r0, r5, #1
   2ba04:	mov	r2, #44	; 0x2c
   2ba08:	add	r1, r1, r0
   2ba0c:	str	r1, [r3, #24]
   2ba10:	str	r2, [r4, #160]	; 0xa0
   2ba14:	pop	{r4, r5, fp, pc}
   2ba18:	ldr	r1, [r3]
   2ba1c:	ldr	r0, [r4, #192]	; 0xc0
   2ba20:	cmp	r1, #0
   2ba24:	bne	2ba94 <myhtml_tokenizer_state_tag_open@@Base+0x1e0>
   2ba28:	ldr	r2, [r3, #24]
   2ba2c:	add	r1, r5, r0
   2ba30:	sub	r1, r1, #1
   2ba34:	cmp	r1, r2
   2ba38:	bls	2ba94 <myhtml_tokenizer_state_tag_open@@Base+0x1e0>
   2ba3c:	mov	r0, #1
   2ba40:	str	r0, [r3]
   2ba44:	sub	r0, r1, r2
   2ba48:	str	r0, [r3, #36]	; 0x24
   2ba4c:	ldr	r1, [r3, #32]
   2ba50:	ldr	ip, [r3, #48]	; 0x30
   2ba54:	str	r2, [r3, #32]
   2ba58:	str	r0, [r3, #28]
   2ba5c:	mov	r2, r3
   2ba60:	orr	r0, ip, #512	; 0x200
   2ba64:	str	r0, [r3, #48]	; 0x30
   2ba68:	mov	r0, r4
   2ba6c:	bl	110e4 <myhtml_queue_add@plt>
   2ba70:	mov	r1, r0
   2ba74:	mov	r0, #0
   2ba78:	mov	r2, #69	; 0x45
   2ba7c:	cmp	r1, #0
   2ba80:	bne	2bad0 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2ba84:	ldr	r3, [r4, #64]	; 0x40
   2ba88:	cmp	r3, #0
   2ba8c:	beq	2bad0 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2ba90:	ldr	r0, [r4, #192]	; 0xc0
   2ba94:	add	r0, r0, r5
   2ba98:	mov	r2, #43	; 0x2b
   2ba9c:	str	r0, [r3, #24]
   2baa0:	b	2bacc <myhtml_tokenizer_state_tag_open@@Base+0x218>
   2baa4:	add	r0, r5, #1
   2baa8:	mov	r2, #8
   2baac:	str	r2, [r4, #160]	; 0xa0
   2bab0:	pop	{r4, r5, fp, pc}
   2bab4:	ldr	r0, [r3, #48]	; 0x30
   2bab8:	ldr	r1, [r3, #48]	; 0x30
   2babc:	mov	r2, #0
   2bac0:	and	r0, r0, #8
   2bac4:	eor	r0, r1, r0
   2bac8:	str	r0, [r3, #48]	; 0x30
   2bacc:	mov	r0, r5
   2bad0:	str	r2, [r4, #160]	; 0xa0
   2bad4:	pop	{r4, r5, fp, pc}
   2bad8:	strdeq	r8, [sp], -sl

0002badc <myhtml_tokenizer_state_end_tag_open@@Base>:
   2badc:	push	{r4, r5, fp, lr}
   2bae0:	add	fp, sp, #8
   2bae4:	mov	r5, r3
   2bae8:	mov	r4, r0
   2baec:	mov	r3, r1
   2baf0:	ldrb	r0, [r2, r5]
   2baf4:	ldr	r1, [pc, #328]	; 2bc44 <myhtml_tokenizer_state_end_tag_open@@Base+0x168>
   2baf8:	add	r1, pc, r1
   2bafc:	ldrb	r1, [r1, r0]
   2bb00:	cmp	r1, #1
   2bb04:	bne	2bb98 <myhtml_tokenizer_state_end_tag_open@@Base+0xbc>
   2bb08:	ldr	r1, [r3]
   2bb0c:	ldr	r0, [r4, #192]	; 0xc0
   2bb10:	cmp	r1, #0
   2bb14:	bne	2bb84 <myhtml_tokenizer_state_end_tag_open@@Base+0xa8>
   2bb18:	ldr	r2, [r3, #24]
   2bb1c:	add	r1, r5, r0
   2bb20:	sub	r1, r1, #2
   2bb24:	cmp	r1, r2
   2bb28:	bls	2bb84 <myhtml_tokenizer_state_end_tag_open@@Base+0xa8>
   2bb2c:	mov	r0, #1
   2bb30:	str	r0, [r3]
   2bb34:	sub	r0, r1, r2
   2bb38:	str	r0, [r3, #36]	; 0x24
   2bb3c:	ldr	r1, [r3, #32]
   2bb40:	ldr	ip, [r3, #48]	; 0x30
   2bb44:	str	r2, [r3, #32]
   2bb48:	str	r0, [r3, #28]
   2bb4c:	mov	r2, r3
   2bb50:	orr	r0, ip, #512	; 0x200
   2bb54:	str	r0, [r3, #48]	; 0x30
   2bb58:	mov	r0, r4
   2bb5c:	bl	110e4 <myhtml_queue_add@plt>
   2bb60:	mov	r1, r0
   2bb64:	mov	r0, #0
   2bb68:	mov	r2, #69	; 0x45
   2bb6c:	cmp	r1, #0
   2bb70:	bne	2bc3c <myhtml_tokenizer_state_end_tag_open@@Base+0x160>
   2bb74:	ldr	r3, [r4, #64]	; 0x40
   2bb78:	cmp	r3, #0
   2bb7c:	beq	2bc3c <myhtml_tokenizer_state_end_tag_open@@Base+0x160>
   2bb80:	ldr	r0, [r4, #192]	; 0xc0
   2bb84:	mov	r1, #1
   2bb88:	add	r0, r0, r5
   2bb8c:	mov	r2, #9
   2bb90:	str	r1, [r3, #48]	; 0x30
   2bb94:	b	2bc34 <myhtml_tokenizer_state_end_tag_open@@Base+0x158>
   2bb98:	cmp	r0, #62	; 0x3e
   2bb9c:	bne	2bbb0 <myhtml_tokenizer_state_end_tag_open@@Base+0xd4>
   2bba0:	add	r0, r5, #1
   2bba4:	mov	r2, #0
   2bba8:	str	r2, [r4, #160]	; 0xa0
   2bbac:	pop	{r4, r5, fp, pc}
   2bbb0:	ldr	r1, [r3]
   2bbb4:	ldr	r0, [r4, #192]	; 0xc0
   2bbb8:	cmp	r1, #0
   2bbbc:	bne	2bc2c <myhtml_tokenizer_state_end_tag_open@@Base+0x150>
   2bbc0:	ldr	r2, [r3, #24]
   2bbc4:	add	r1, r5, r0
   2bbc8:	sub	r1, r1, #2
   2bbcc:	cmp	r1, r2
   2bbd0:	bls	2bc2c <myhtml_tokenizer_state_end_tag_open@@Base+0x150>
   2bbd4:	mov	r0, #1
   2bbd8:	str	r0, [r3]
   2bbdc:	sub	r0, r1, r2
   2bbe0:	str	r0, [r3, #36]	; 0x24
   2bbe4:	ldr	r1, [r3, #32]
   2bbe8:	ldr	ip, [r3, #48]	; 0x30
   2bbec:	str	r2, [r3, #32]
   2bbf0:	str	r0, [r3, #28]
   2bbf4:	mov	r2, r3
   2bbf8:	orr	r0, ip, #512	; 0x200
   2bbfc:	str	r0, [r3, #48]	; 0x30
   2bc00:	mov	r0, r4
   2bc04:	bl	110e4 <myhtml_queue_add@plt>
   2bc08:	mov	r1, r0
   2bc0c:	mov	r0, #0
   2bc10:	mov	r2, #69	; 0x45
   2bc14:	cmp	r1, #0
   2bc18:	bne	2bc3c <myhtml_tokenizer_state_end_tag_open@@Base+0x160>
   2bc1c:	ldr	r3, [r4, #64]	; 0x40
   2bc20:	cmp	r3, #0
   2bc24:	beq	2bc3c <myhtml_tokenizer_state_end_tag_open@@Base+0x160>
   2bc28:	ldr	r0, [r4, #192]	; 0xc0
   2bc2c:	add	r0, r0, r5
   2bc30:	mov	r2, #43	; 0x2b
   2bc34:	str	r0, [r3, #24]
   2bc38:	mov	r0, r5
   2bc3c:	str	r2, [r4, #160]	; 0xa0
   2bc40:	pop	{r4, r5, fp, pc}
   2bc44:	ldrdeq	r8, [sp], -r2

0002bc48 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   2bc48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bc4c:	add	fp, sp, #24
   2bc50:	mov	r4, r1
   2bc54:	mov	r6, r0
   2bc58:	ldr	r1, [r1, #24]
   2bc5c:	ldr	r0, [r0, #192]	; 0xc0
   2bc60:	ldr	r7, [fp, #8]
   2bc64:	mov	r5, r3
   2bc68:	add	r0, r0, r7
   2bc6c:	add	r2, r1, #2
   2bc70:	cmp	r2, r0
   2bc74:	bhi	2bcdc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x94>
   2bc78:	mov	r0, r6
   2bc7c:	mov	r2, #2
   2bc80:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   2bc84:	ldrb	r1, [r0]
   2bc88:	cmp	r1, #45	; 0x2d
   2bc8c:	bne	2bcc4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   2bc90:	ldrb	r0, [r0, #1]
   2bc94:	cmp	r0, #45	; 0x2d
   2bc98:	bne	2bcc4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   2bc9c:	mov	r0, #45	; 0x2d
   2bca0:	add	r5, r5, #2
   2bca4:	mov	r1, #0
   2bca8:	str	r0, [r6, #160]	; 0xa0
   2bcac:	ldr	r0, [r6, #192]	; 0xc0
   2bcb0:	add	r0, r0, r5
   2bcb4:	str	r0, [r4, #24]
   2bcb8:	mov	r0, r5
   2bcbc:	str	r1, [r4, #28]
   2bcc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bcc4:	ldr	r0, [r6, #192]	; 0xc0
   2bcc8:	ldr	r1, [r4, #24]
   2bccc:	add	r0, r0, r7
   2bcd0:	add	r2, r1, #7
   2bcd4:	cmp	r2, r0
   2bcd8:	bls	2bcec <myhtml_tokenizer_state_markup_declaration_open@@Base+0xa4>
   2bcdc:	ldr	r0, [r6, #76]	; 0x4c
   2bce0:	str	r5, [r0, #4]
   2bce4:	mov	r0, r7
   2bce8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bcec:	mov	r0, r6
   2bcf0:	mov	r2, #7
   2bcf4:	mov	r8, #7
   2bcf8:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   2bcfc:	ldr	r1, [pc, #260]	; 2be08 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   2bd00:	mov	r2, #7
   2bd04:	mov	r7, r0
   2bd08:	add	r1, pc, r1
   2bd0c:	bl	11288 <mycore_strncasecmp@plt>
   2bd10:	cmp	r0, #0
   2bd14:	beq	2bd4c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x104>
   2bd18:	ldr	r1, [pc, #236]	; 2be0c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c4>
   2bd1c:	mov	r0, r7
   2bd20:	mov	r2, #7
   2bd24:	add	r1, pc, r1
   2bd28:	bl	11bdc <strncmp@plt>
   2bd2c:	cmp	r0, #0
   2bd30:	beq	2bd7c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x134>
   2bd34:	mov	r0, #0
   2bd38:	str	r0, [r4, #28]
   2bd3c:	mov	r0, #43	; 0x2b
   2bd40:	str	r0, [r6, #160]	; 0xa0
   2bd44:	mov	r0, r5
   2bd48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bd4c:	mov	r0, #51	; 0x33
   2bd50:	mov	r1, #3
   2bd54:	str	r0, [r6, #160]	; 0xa0
   2bd58:	ldr	r0, [r6, #76]	; 0x4c
   2bd5c:	ldr	r0, [r0, #12]
   2bd60:	str	r8, [r4, #28]
   2bd64:	str	r1, [r4]
   2bd68:	ldr	r1, [r4, #24]
   2bd6c:	sub	r0, r1, r0
   2bd70:	add	r5, r0, #7
   2bd74:	mov	r0, r5
   2bd78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bd7c:	ldr	r0, [r6, #68]	; 0x44
   2bd80:	ldr	r0, [r0, #8]
   2bd84:	cmp	r0, #0
   2bd88:	beq	2bd34 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   2bd8c:	ldr	r1, [r0, #4]
   2bd90:	cmp	r1, #0
   2bd94:	beq	2bd34 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   2bd98:	mov	r0, r6
   2bd9c:	bl	10e74 <myhtml_tree_wait_for_last_done_token@plt>
   2bda0:	mov	r0, r6
   2bda4:	bl	11a2c <myhtml_tree_adjusted_current_node@plt>
   2bda8:	cmp	r0, #0
   2bdac:	beq	2bd34 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   2bdb0:	ldr	r0, [r0, #8]
   2bdb4:	cmp	r0, #1
   2bdb8:	beq	2bd34 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   2bdbc:	mov	r0, #67	; 0x43
   2bdc0:	mov	r1, #1
   2bdc4:	str	r0, [r6, #160]	; 0xa0
   2bdc8:	ldr	r0, [r6, #76]	; 0x4c
   2bdcc:	ldr	r0, [r0, #12]
   2bdd0:	str	r1, [r4]
   2bdd4:	mov	r1, #0
   2bdd8:	str	r1, [r4, #28]
   2bddc:	ldr	r1, [r4, #24]
   2bde0:	add	r1, r1, #7
   2bde4:	str	r1, [r4, #24]
   2bde8:	sub	r5, r1, r0
   2bdec:	ldr	r2, [r4, #48]	; 0x30
   2bdf0:	ldr	r3, [r4, #48]	; 0x30
   2bdf4:	mov	r0, r5
   2bdf8:	and	r2, r2, #8
   2bdfc:	eor	r2, r3, r2
   2be00:	str	r2, [r4, #48]	; 0x30
   2be04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2be08:	andeq	r7, sp, ip, ror #12
   2be0c:	muleq	sp, lr, r5

0002be10 <myhtml_tokenizer_state_tag_name@@Base>:
   2be10:	push	{r4, r5, r6, r7, fp, lr}
   2be14:	add	fp, sp, #16
   2be18:	mov	r7, r0
   2be1c:	ldr	r0, [fp, #8]
   2be20:	mov	r4, r3
   2be24:	cmp	r3, r0
   2be28:	bcs	2be68 <myhtml_tokenizer_state_tag_name@@Base+0x58>
   2be2c:	mov	r6, r1
   2be30:	ldr	r1, [pc, #332]	; 2bf84 <myhtml_tokenizer_state_tag_name@@Base+0x174>
   2be34:	add	r1, pc, r1
   2be38:	ldrb	r3, [r2, r4]
   2be3c:	ldrb	r5, [r1, r3]
   2be40:	cmp	r5, #2
   2be44:	beq	2be70 <myhtml_tokenizer_state_tag_name@@Base+0x60>
   2be48:	cmp	r3, #62	; 0x3e
   2be4c:	beq	2bea8 <myhtml_tokenizer_state_tag_name@@Base+0x98>
   2be50:	cmp	r3, #47	; 0x2f
   2be54:	beq	2bf4c <myhtml_tokenizer_state_tag_name@@Base+0x13c>
   2be58:	add	r4, r4, #1
   2be5c:	cmp	r0, r4
   2be60:	bne	2be38 <myhtml_tokenizer_state_tag_name@@Base+0x28>
   2be64:	mov	r4, r0
   2be68:	mov	r0, r4
   2be6c:	pop	{r4, r5, r6, r7, fp, pc}
   2be70:	ldr	r0, [r6, #24]
   2be74:	ldr	r1, [r7, #192]	; 0xc0
   2be78:	mov	r3, r4
   2be7c:	sub	r0, r1, r0
   2be80:	mov	r1, r6
   2be84:	add	r0, r0, r4
   2be88:	str	r0, [r6, #28]
   2be8c:	mov	r0, r7
   2be90:	bl	11954 <myhtml_check_tag_parser@plt>
   2be94:	mov	r0, #33	; 0x21
   2be98:	add	r4, r4, #1
   2be9c:	str	r0, [r7, #160]	; 0xa0
   2bea0:	mov	r0, r4
   2bea4:	pop	{r4, r5, r6, r7, fp, pc}
   2bea8:	ldr	r0, [r6, #24]
   2beac:	ldr	r1, [r7, #192]	; 0xc0
   2beb0:	mov	r3, r4
   2beb4:	sub	r0, r1, r0
   2beb8:	mov	r1, r6
   2bebc:	add	r0, r0, r4
   2bec0:	str	r0, [r6, #28]
   2bec4:	mov	r0, r7
   2bec8:	bl	11954 <myhtml_check_tag_parser@plt>
   2becc:	ldr	r1, [r6, #48]	; 0x30
   2bed0:	mov	r0, #0
   2bed4:	tst	r1, #1
   2bed8:	bne	2bf00 <myhtml_tokenizer_state_tag_name@@Base+0xf0>
   2bedc:	ldr	r1, [r6]
   2bee0:	cmp	r1, #93	; 0x5d
   2bee4:	bne	2bef4 <myhtml_tokenizer_state_tag_name@@Base+0xe4>
   2bee8:	ldr	r2, [r7, #180]	; 0xb4
   2beec:	tst	r2, #1
   2bef0:	beq	2bf00 <myhtml_tokenizer_state_tag_name@@Base+0xf0>
   2bef4:	ldr	r0, [r7, #28]
   2bef8:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2befc:	ldr	r0, [r0, #12]
   2bf00:	str	r0, [r7, #160]	; 0xa0
   2bf04:	mov	r2, r6
   2bf08:	ldr	r0, [r7, #192]	; 0xc0
   2bf0c:	ldr	r1, [r6, #32]
   2bf10:	sub	r0, r0, r1
   2bf14:	add	r0, r0, r4
   2bf18:	add	r4, r4, #1
   2bf1c:	add	r0, r0, #1
   2bf20:	mov	r1, r4
   2bf24:	str	r0, [r6, #36]	; 0x24
   2bf28:	mov	r0, r7
   2bf2c:	bl	110e4 <myhtml_queue_add@plt>
   2bf30:	cmp	r0, #0
   2bf34:	beq	2be68 <myhtml_tokenizer_state_tag_name@@Base+0x58>
   2bf38:	mov	r0, #69	; 0x45
   2bf3c:	mov	r4, #0
   2bf40:	str	r0, [r7, #160]	; 0xa0
   2bf44:	mov	r0, r4
   2bf48:	pop	{r4, r5, r6, r7, fp, pc}
   2bf4c:	ldr	r0, [r6, #24]
   2bf50:	ldr	r1, [r7, #192]	; 0xc0
   2bf54:	mov	r3, r4
   2bf58:	sub	r0, r1, r0
   2bf5c:	mov	r1, r6
   2bf60:	add	r0, r0, r4
   2bf64:	str	r0, [r6, #28]
   2bf68:	mov	r0, r7
   2bf6c:	bl	11954 <myhtml_check_tag_parser@plt>
   2bf70:	mov	r0, #42	; 0x2a
   2bf74:	add	r4, r4, #1
   2bf78:	str	r0, [r7, #160]	; 0xa0
   2bf7c:	mov	r0, r4
   2bf80:	pop	{r4, r5, r6, r7, fp, pc}
   2bf84:	muleq	sp, r6, r4

0002bf88 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   2bf88:	push	{r4, r5, r6, r7, fp, lr}
   2bf8c:	add	fp, sp, #16
   2bf90:	mov	r4, r0
   2bf94:	ldrb	r0, [r2, r3]
   2bf98:	mov	r5, r1
   2bf9c:	mov	r6, r3
   2bfa0:	mov	r1, #33	; 0x21
   2bfa4:	cmp	r0, #62	; 0x3e
   2bfa8:	bne	2c034 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0xac>
   2bfac:	ldr	r0, [r5, #48]	; 0x30
   2bfb0:	mov	r7, #0
   2bfb4:	orr	r0, r0, #2
   2bfb8:	str	r0, [r5, #48]	; 0x30
   2bfbc:	ldr	r0, [r5, #48]	; 0x30
   2bfc0:	tst	r0, #1
   2bfc4:	mov	r0, #0
   2bfc8:	bne	2bff4 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   2bfcc:	ldr	r1, [r5]
   2bfd0:	cmp	r1, #93	; 0x5d
   2bfd4:	bne	2bfe8 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x60>
   2bfd8:	ldr	r0, [r4, #180]	; 0xb4
   2bfdc:	tst	r0, #1
   2bfe0:	mov	r0, #0
   2bfe4:	beq	2bff4 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   2bfe8:	ldr	r0, [r4, #28]
   2bfec:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2bff0:	ldr	r0, [r0, #12]
   2bff4:	str	r0, [r4, #160]	; 0xa0
   2bff8:	add	r6, r6, #1
   2bffc:	mov	r2, r5
   2c000:	ldr	r0, [r4, #192]	; 0xc0
   2c004:	ldr	r1, [r5, #32]
   2c008:	add	r0, r0, r6
   2c00c:	sub	r0, r0, r1
   2c010:	mov	r1, r6
   2c014:	str	r0, [r5, #36]	; 0x24
   2c018:	mov	r0, r4
   2c01c:	bl	110e4 <myhtml_queue_add@plt>
   2c020:	mov	r1, #69	; 0x45
   2c024:	cmp	r0, #0
   2c028:	bne	2c038 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0xb0>
   2c02c:	mov	r0, r6
   2c030:	pop	{r4, r5, r6, r7, fp, pc}
   2c034:	mov	r7, r6
   2c038:	mov	r6, r7
   2c03c:	str	r1, [r4, #160]	; 0xa0
   2c040:	mov	r0, r6
   2c044:	pop	{r4, r5, r6, r7, fp, pc}

0002c048 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   2c048:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c04c:	add	fp, sp, #24
   2c050:	mov	r5, r3
   2c054:	ldrb	r3, [r2, r3]
   2c058:	mov	r8, r0
   2c05c:	ldr	r0, [fp, #8]
   2c060:	mov	r6, r1
   2c064:	sub	r7, r3, #9
   2c068:	cmp	r7, #23
   2c06c:	bhi	2c0cc <myhtml_tokenizer_state_before_attribute_name@@Base+0x84>
   2c070:	movw	r1, #27
   2c074:	mov	r4, #1
   2c078:	movt	r1, #128	; 0x80
   2c07c:	tst	r1, r4, lsl r7
   2c080:	beq	2c0cc <myhtml_tokenizer_state_before_attribute_name@@Base+0x84>
   2c084:	cmp	r5, r0
   2c088:	bcs	2c0cc <myhtml_tokenizer_state_before_attribute_name@@Base+0x84>
   2c08c:	add	r5, r5, #1
   2c090:	mvn	r4, #8
   2c094:	mov	r7, #1
   2c098:	uxtab	r3, r4, r3
   2c09c:	cmp	r3, #23
   2c0a0:	bhi	2c0c8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x80>
   2c0a4:	tst	r1, r7, lsl r3
   2c0a8:	beq	2c0c8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x80>
   2c0ac:	cmp	r0, r5
   2c0b0:	beq	2c1ec <myhtml_tokenizer_state_before_attribute_name@@Base+0x1a4>
   2c0b4:	ldrb	r3, [r2, r5]
   2c0b8:	add	r5, r5, #1
   2c0bc:	uxtab	r3, r4, r3
   2c0c0:	cmp	r3, #23
   2c0c4:	bls	2c0a4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x5c>
   2c0c8:	sub	r5, r5, #1
   2c0cc:	cmp	r5, r0
   2c0d0:	bcs	2c1e8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x1a0>
   2c0d4:	ldrb	r0, [r2, r5]
   2c0d8:	cmp	r0, #47	; 0x2f
   2c0dc:	beq	2c164 <myhtml_tokenizer_state_before_attribute_name@@Base+0x11c>
   2c0e0:	cmp	r0, #62	; 0x3e
   2c0e4:	bne	2c17c <myhtml_tokenizer_state_before_attribute_name@@Base+0x134>
   2c0e8:	ldr	r1, [r6, #48]	; 0x30
   2c0ec:	mov	r0, #0
   2c0f0:	tst	r1, #1
   2c0f4:	bne	2c11c <myhtml_tokenizer_state_before_attribute_name@@Base+0xd4>
   2c0f8:	ldr	r1, [r6]
   2c0fc:	cmp	r1, #93	; 0x5d
   2c100:	bne	2c110 <myhtml_tokenizer_state_before_attribute_name@@Base+0xc8>
   2c104:	ldr	r2, [r8, #180]	; 0xb4
   2c108:	tst	r2, #1
   2c10c:	beq	2c11c <myhtml_tokenizer_state_before_attribute_name@@Base+0xd4>
   2c110:	ldr	r0, [r8, #28]
   2c114:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2c118:	ldr	r0, [r0, #12]
   2c11c:	str	r0, [r8, #160]	; 0xa0
   2c120:	add	r5, r5, #1
   2c124:	mov	r2, r6
   2c128:	ldr	r0, [r8, #192]	; 0xc0
   2c12c:	ldr	r1, [r6, #32]
   2c130:	add	r0, r0, r5
   2c134:	sub	r0, r0, r1
   2c138:	mov	r1, r5
   2c13c:	str	r0, [r6, #36]	; 0x24
   2c140:	mov	r0, r8
   2c144:	bl	110e4 <myhtml_queue_add@plt>
   2c148:	cmp	r0, #0
   2c14c:	beq	2c1e8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x1a0>
   2c150:	mov	r0, #69	; 0x45
   2c154:	mov	r5, #0
   2c158:	str	r0, [r8, #160]	; 0xa0
   2c15c:	mov	r0, r5
   2c160:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c164:	ldr	r0, [r6, #48]	; 0x30
   2c168:	add	r5, r5, #1
   2c16c:	orr	r0, r0, #2
   2c170:	str	r0, [r6, #48]	; 0x30
   2c174:	mov	r0, r5
   2c178:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c17c:	ldr	r1, [r6, #40]	; 0x28
   2c180:	ldr	r0, [r8, #56]	; 0x38
   2c184:	cmp	r1, #0
   2c188:	beq	2c1a0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x158>
   2c18c:	ldr	r1, [r6, #44]	; 0x2c
   2c190:	str	r0, [r1]
   2c194:	str	r0, [r6, #44]	; 0x2c
   2c198:	str	r0, [r8, #56]	; 0x38
   2c19c:	b	2c1ac <myhtml_tokenizer_state_before_attribute_name@@Base+0x164>
   2c1a0:	str	r0, [r6, #40]	; 0x28
   2c1a4:	str	r0, [r6, #44]	; 0x2c
   2c1a8:	mov	r1, #0
   2c1ac:	mov	r3, #0
   2c1b0:	str	r3, [r0]
   2c1b4:	str	r1, [r0, #4]
   2c1b8:	ldr	r1, [r8, #192]	; 0xc0
   2c1bc:	ldr	r0, [r8, #56]	; 0x38
   2c1c0:	add	r1, r1, r5
   2c1c4:	str	r1, [r0, #48]	; 0x30
   2c1c8:	str	r3, [r0, #52]	; 0x34
   2c1cc:	str	r3, [r0, #56]	; 0x38
   2c1d0:	str	r3, [r0, #60]	; 0x3c
   2c1d4:	mov	r1, #34	; 0x22
   2c1d8:	ldrb	r0, [r2, r5]
   2c1dc:	str	r1, [r8, #160]	; 0xa0
   2c1e0:	cmp	r0, #61	; 0x3d
   2c1e4:	addeq	r5, r5, #1
   2c1e8:	mov	r0, r5
   2c1ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002c1f0 <myhtml_tokenizer_state_attribute_name@@Base>:
   2c1f0:	push	{r4, r5, r6, sl, fp, lr}
   2c1f4:	add	fp, sp, #16
   2c1f8:	mov	r5, r0
   2c1fc:	ldr	r0, [fp, #8]
   2c200:	mov	r4, r3
   2c204:	cmp	r3, r0
   2c208:	bcs	2c350 <myhtml_tokenizer_state_attribute_name@@Base+0x160>
   2c20c:	mov	r6, r1
   2c210:	ldrb	r1, [r2, r4]
   2c214:	sub	r1, r1, #9
   2c218:	cmp	r1, #53	; 0x35
   2c21c:	bls	2c23c <myhtml_tokenizer_state_attribute_name@@Base+0x4c>
   2c220:	add	r4, r4, #1
   2c224:	cmp	r0, r4
   2c228:	beq	2c34c <myhtml_tokenizer_state_attribute_name@@Base+0x15c>
   2c22c:	ldrb	r1, [r2, r4]
   2c230:	sub	r1, r1, #9
   2c234:	cmp	r1, #53	; 0x35
   2c238:	bhi	2c220 <myhtml_tokenizer_state_attribute_name@@Base+0x30>
   2c23c:	add	r3, pc, #4
   2c240:	ldr	r1, [r3, r1, lsl #2]
   2c244:	add	pc, r3, r1
   2c248:	ldrdeq	r0, [r0], -r8
   2c24c:	ldrdeq	r0, [r0], -r8
   2c250:			; <UNDEFINED> instruction: 0xffffffd8
   2c254:	ldrdeq	r0, [r0], -r8
   2c258:	ldrdeq	r0, [r0], -r8
   2c25c:			; <UNDEFINED> instruction: 0xffffffd8
   2c260:			; <UNDEFINED> instruction: 0xffffffd8
   2c264:			; <UNDEFINED> instruction: 0xffffffd8
   2c268:			; <UNDEFINED> instruction: 0xffffffd8
   2c26c:			; <UNDEFINED> instruction: 0xffffffd8
   2c270:			; <UNDEFINED> instruction: 0xffffffd8
   2c274:			; <UNDEFINED> instruction: 0xffffffd8
   2c278:			; <UNDEFINED> instruction: 0xffffffd8
   2c27c:			; <UNDEFINED> instruction: 0xffffffd8
   2c280:			; <UNDEFINED> instruction: 0xffffffd8
   2c284:			; <UNDEFINED> instruction: 0xffffffd8
   2c288:			; <UNDEFINED> instruction: 0xffffffd8
   2c28c:			; <UNDEFINED> instruction: 0xffffffd8
   2c290:			; <UNDEFINED> instruction: 0xffffffd8
   2c294:			; <UNDEFINED> instruction: 0xffffffd8
   2c298:			; <UNDEFINED> instruction: 0xffffffd8
   2c29c:			; <UNDEFINED> instruction: 0xffffffd8
   2c2a0:			; <UNDEFINED> instruction: 0xffffffd8
   2c2a4:	ldrdeq	r0, [r0], -r8
   2c2a8:			; <UNDEFINED> instruction: 0xffffffd8
   2c2ac:			; <UNDEFINED> instruction: 0xffffffd8
   2c2b0:			; <UNDEFINED> instruction: 0xffffffd8
   2c2b4:			; <UNDEFINED> instruction: 0xffffffd8
   2c2b8:			; <UNDEFINED> instruction: 0xffffffd8
   2c2bc:			; <UNDEFINED> instruction: 0xffffffd8
   2c2c0:			; <UNDEFINED> instruction: 0xffffffd8
   2c2c4:			; <UNDEFINED> instruction: 0xffffffd8
   2c2c8:			; <UNDEFINED> instruction: 0xffffffd8
   2c2cc:			; <UNDEFINED> instruction: 0xffffffd8
   2c2d0:			; <UNDEFINED> instruction: 0xffffffd8
   2c2d4:			; <UNDEFINED> instruction: 0xffffffd8
   2c2d8:			; <UNDEFINED> instruction: 0xffffffd8
   2c2dc:			; <UNDEFINED> instruction: 0xffffffd8
   2c2e0:	andeq	r0, r0, r8, asr r1
   2c2e4:			; <UNDEFINED> instruction: 0xffffffd8
   2c2e8:			; <UNDEFINED> instruction: 0xffffffd8
   2c2ec:			; <UNDEFINED> instruction: 0xffffffd8
   2c2f0:			; <UNDEFINED> instruction: 0xffffffd8
   2c2f4:			; <UNDEFINED> instruction: 0xffffffd8
   2c2f8:			; <UNDEFINED> instruction: 0xffffffd8
   2c2fc:			; <UNDEFINED> instruction: 0xffffffd8
   2c300:			; <UNDEFINED> instruction: 0xffffffd8
   2c304:			; <UNDEFINED> instruction: 0xffffffd8
   2c308:			; <UNDEFINED> instruction: 0xffffffd8
   2c30c:			; <UNDEFINED> instruction: 0xffffffd8
   2c310:			; <UNDEFINED> instruction: 0xffffffd8
   2c314:			; <UNDEFINED> instruction: 0xffffffd8
   2c318:	andeq	r0, r0, r0, lsr #3
   2c31c:	andeq	r0, r0, r0, lsl r1
   2c320:	ldr	r0, [r5, #56]	; 0x38
   2c324:	ldr	r1, [r5, #192]	; 0xc0
   2c328:	ldr	r2, [r0, #48]	; 0x30
   2c32c:	sub	r1, r1, r2
   2c330:	add	r1, r1, r4
   2c334:	str	r1, [r0, #52]	; 0x34
   2c338:	mov	r0, #35	; 0x23
   2c33c:	str	r0, [r5, #160]	; 0xa0
   2c340:	add	r4, r4, #1
   2c344:	mov	r0, r4
   2c348:	pop	{r4, r5, r6, sl, fp, pc}
   2c34c:	mov	r4, r0
   2c350:	mov	r0, r4
   2c354:	pop	{r4, r5, r6, sl, fp, pc}
   2c358:	ldr	r1, [r5, #56]	; 0x38
   2c35c:	ldr	r0, [r5, #192]	; 0xc0
   2c360:	ldr	r2, [r1, #48]	; 0x30
   2c364:	sub	r2, r0, r2
   2c368:	add	r2, r2, r4
   2c36c:	str	r2, [r1, #52]	; 0x34
   2c370:	ldr	r1, [r6, #48]	; 0x30
   2c374:	tst	r1, #1
   2c378:	bne	2c394 <myhtml_tokenizer_state_attribute_name@@Base+0x1a4>
   2c37c:	ldr	r1, [r6]
   2c380:	cmp	r1, #93	; 0x5d
   2c384:	bne	2c408 <myhtml_tokenizer_state_attribute_name@@Base+0x218>
   2c388:	ldr	r2, [r5, #180]	; 0xb4
   2c38c:	tst	r2, #1
   2c390:	bne	2c408 <myhtml_tokenizer_state_attribute_name@@Base+0x218>
   2c394:	mov	r1, #0
   2c398:	str	r1, [r5, #160]	; 0xa0
   2c39c:	b	2c41c <myhtml_tokenizer_state_attribute_name@@Base+0x22c>
   2c3a0:	ldr	r0, [r5, #56]	; 0x38
   2c3a4:	ldr	r1, [r5, #192]	; 0xc0
   2c3a8:	ldr	r2, [r0, #48]	; 0x30
   2c3ac:	sub	r1, r1, r2
   2c3b0:	add	r1, r1, r4
   2c3b4:	str	r1, [r0, #52]	; 0x34
   2c3b8:	ldr	r0, [r6, #48]	; 0x30
   2c3bc:	orr	r0, r0, #2
   2c3c0:	str	r0, [r6, #48]	; 0x30
   2c3c4:	mov	r0, #33	; 0x21
   2c3c8:	str	r0, [r5, #160]	; 0xa0
   2c3cc:	ldr	r0, [r5, #8]
   2c3d0:	ldr	r1, [r0, #16]
   2c3d4:	bl	11720 <myhtml_token_attr_create@plt>
   2c3d8:	cmp	r0, #0
   2c3dc:	str	r0, [r5, #56]	; 0x38
   2c3e0:	bne	2c340 <myhtml_tokenizer_state_attribute_name@@Base+0x150>
   2c3e4:	b	2c44c <myhtml_tokenizer_state_attribute_name@@Base+0x25c>
   2c3e8:	ldr	r0, [r5, #56]	; 0x38
   2c3ec:	ldr	r1, [r5, #192]	; 0xc0
   2c3f0:	ldr	r2, [r0, #48]	; 0x30
   2c3f4:	sub	r1, r1, r2
   2c3f8:	add	r1, r1, r4
   2c3fc:	str	r1, [r0, #52]	; 0x34
   2c400:	mov	r0, #36	; 0x24
   2c404:	b	2c33c <myhtml_tokenizer_state_attribute_name@@Base+0x14c>
   2c408:	ldr	r0, [r5, #28]
   2c40c:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2c410:	ldr	r0, [r0, #12]
   2c414:	str	r0, [r5, #160]	; 0xa0
   2c418:	ldr	r0, [r5, #192]	; 0xc0
   2c41c:	ldr	r1, [r6, #32]
   2c420:	mov	r2, r6
   2c424:	sub	r0, r0, r1
   2c428:	add	r0, r0, r4
   2c42c:	add	r4, r4, #1
   2c430:	add	r0, r0, #1
   2c434:	mov	r1, r4
   2c438:	str	r0, [r6, #36]	; 0x24
   2c43c:	mov	r0, r5
   2c440:	bl	110e4 <myhtml_queue_add@plt>
   2c444:	cmp	r0, #0
   2c448:	beq	2c460 <myhtml_tokenizer_state_attribute_name@@Base+0x270>
   2c44c:	mov	r0, #69	; 0x45
   2c450:	mov	r4, #0
   2c454:	str	r0, [r5, #160]	; 0xa0
   2c458:	mov	r0, r4
   2c45c:	pop	{r4, r5, r6, sl, fp, pc}
   2c460:	ldr	r0, [r5, #8]
   2c464:	ldr	r1, [r0, #16]
   2c468:	bl	11720 <myhtml_token_attr_create@plt>
   2c46c:	cmp	r0, #0
   2c470:	str	r0, [r5, #56]	; 0x38
   2c474:	bne	2c350 <myhtml_tokenizer_state_attribute_name@@Base+0x160>
   2c478:	b	2c44c <myhtml_tokenizer_state_attribute_name@@Base+0x25c>

0002c47c <myhtml_tokenizer_state_after_attribute_name@@Base>:
   2c47c:	push	{r4, r5, r6, sl, fp, lr}
   2c480:	add	fp, sp, #16
   2c484:	mov	r5, r0
   2c488:	ldr	r0, [fp, #8]
   2c48c:	mov	r4, r3
   2c490:	cmp	r3, r0
   2c494:	bcs	2c5a0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x124>
   2c498:	mov	r6, r1
   2c49c:	ldrb	r1, [r2, r4]
   2c4a0:	sub	r1, r1, #9
   2c4a4:	cmp	r1, #53	; 0x35
   2c4a8:	bhi	2c5a8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x12c>
   2c4ac:	add	r3, pc, #4
   2c4b0:	ldr	r1, [r3, r1, lsl #2]
   2c4b4:	add	pc, r3, r1
   2c4b8:	ldrdeq	r0, [r0], -r8
   2c4bc:	ldrdeq	r0, [r0], -r8
   2c4c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4c4:	ldrdeq	r0, [r0], -r8
   2c4c8:	ldrdeq	r0, [r0], -r8
   2c4cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c4fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c500:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c504:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c508:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c50c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c510:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c514:	ldrdeq	r0, [r0], -r8
   2c518:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c51c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c520:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c524:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c528:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c52c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c530:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c534:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c538:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c53c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c540:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c544:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c548:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c54c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c550:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c554:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c558:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c55c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c560:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c564:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c568:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c56c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c570:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c574:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c578:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c57c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c580:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c584:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c588:	andeq	r0, r0, r8, lsr #3
   2c58c:	andeq	r0, r0, r8, lsr #2
   2c590:	add	r4, r4, #1
   2c594:	cmp	r0, r4
   2c598:	bne	2c49c <myhtml_tokenizer_state_after_attribute_name@@Base+0x20>
   2c59c:	mov	r4, r0
   2c5a0:	mov	r0, r4
   2c5a4:	pop	{r4, r5, r6, sl, fp, pc}
   2c5a8:	ldr	r0, [r5, #8]
   2c5ac:	ldr	r1, [r0, #16]
   2c5b0:	bl	11720 <myhtml_token_attr_create@plt>
   2c5b4:	cmp	r0, #0
   2c5b8:	str	r0, [r5, #56]	; 0x38
   2c5bc:	beq	2c64c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1d0>
   2c5c0:	ldr	r1, [r6, #40]	; 0x28
   2c5c4:	cmp	r1, #0
   2c5c8:	beq	2c674 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f8>
   2c5cc:	ldr	r1, [r6, #44]	; 0x2c
   2c5d0:	str	r0, [r1]
   2c5d4:	str	r0, [r6, #44]	; 0x2c
   2c5d8:	str	r0, [r5, #56]	; 0x38
   2c5dc:	b	2c684 <myhtml_tokenizer_state_after_attribute_name@@Base+0x208>
   2c5e0:	ldr	r1, [r6, #48]	; 0x30
   2c5e4:	mov	r0, #0
   2c5e8:	tst	r1, #1
   2c5ec:	bne	2c614 <myhtml_tokenizer_state_after_attribute_name@@Base+0x198>
   2c5f0:	ldr	r1, [r6]
   2c5f4:	cmp	r1, #93	; 0x5d
   2c5f8:	bne	2c608 <myhtml_tokenizer_state_after_attribute_name@@Base+0x18c>
   2c5fc:	ldr	r2, [r5, #180]	; 0xb4
   2c600:	tst	r2, #1
   2c604:	beq	2c614 <myhtml_tokenizer_state_after_attribute_name@@Base+0x198>
   2c608:	ldr	r0, [r5, #28]
   2c60c:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2c610:	ldr	r0, [r0, #12]
   2c614:	str	r0, [r5, #160]	; 0xa0
   2c618:	mov	r2, r6
   2c61c:	ldr	r0, [r5, #192]	; 0xc0
   2c620:	ldr	r1, [r6, #32]
   2c624:	sub	r0, r0, r1
   2c628:	add	r0, r0, r4
   2c62c:	add	r4, r4, #1
   2c630:	add	r0, r0, #1
   2c634:	mov	r1, r4
   2c638:	str	r0, [r6, #36]	; 0x24
   2c63c:	mov	r0, r5
   2c640:	bl	110e4 <myhtml_queue_add@plt>
   2c644:	cmp	r0, #0
   2c648:	beq	2c6bc <myhtml_tokenizer_state_after_attribute_name@@Base+0x240>
   2c64c:	mov	r0, #69	; 0x45
   2c650:	mov	r4, #0
   2c654:	str	r0, [r5, #160]	; 0xa0
   2c658:	mov	r0, r4
   2c65c:	pop	{r4, r5, r6, sl, fp, pc}
   2c660:	mov	r0, #36	; 0x24
   2c664:	add	r4, r4, #1
   2c668:	str	r0, [r5, #160]	; 0xa0
   2c66c:	mov	r0, r4
   2c670:	pop	{r4, r5, r6, sl, fp, pc}
   2c674:	str	r0, [r6, #40]	; 0x28
   2c678:	str	r0, [r6, #44]	; 0x2c
   2c67c:	str	r0, [r5, #56]	; 0x38
   2c680:	mov	r1, #0
   2c684:	mov	r2, #0
   2c688:	str	r2, [r0]
   2c68c:	str	r1, [r0, #4]
   2c690:	ldr	r1, [r5, #192]	; 0xc0
   2c694:	ldr	r0, [r5, #56]	; 0x38
   2c698:	add	r1, r1, r4
   2c69c:	str	r1, [r0, #48]	; 0x30
   2c6a0:	str	r2, [r0, #52]	; 0x34
   2c6a4:	str	r2, [r0, #56]	; 0x38
   2c6a8:	str	r2, [r0, #60]	; 0x3c
   2c6ac:	mov	r0, #34	; 0x22
   2c6b0:	str	r0, [r5, #160]	; 0xa0
   2c6b4:	mov	r0, r4
   2c6b8:	pop	{r4, r5, r6, sl, fp, pc}
   2c6bc:	ldr	r0, [r5, #8]
   2c6c0:	ldr	r1, [r0, #16]
   2c6c4:	bl	11720 <myhtml_token_attr_create@plt>
   2c6c8:	cmp	r0, #0
   2c6cc:	str	r0, [r5, #56]	; 0x38
   2c6d0:	bne	2c5a0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x124>
   2c6d4:	b	2c64c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1d0>

0002c6d8 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   2c6d8:	push	{r4, r5, r6, sl, fp, lr}
   2c6dc:	add	fp, sp, #16
   2c6e0:	mov	r5, r0
   2c6e4:	ldr	r0, [fp, #8]
   2c6e8:	mov	r4, r3
   2c6ec:	cmp	r3, r0
   2c6f0:	bcs	2c7fc <myhtml_tokenizer_state_before_attribute_value@@Base+0x124>
   2c6f4:	mov	r6, r1
   2c6f8:	ldrb	r1, [r2, r4]
   2c6fc:	sub	r1, r1, #9
   2c700:	cmp	r1, #53	; 0x35
   2c704:	bhi	2c804 <myhtml_tokenizer_state_before_attribute_value@@Base+0x12c>
   2c708:	add	r3, pc, #4
   2c70c:	ldr	r1, [r3, r1, lsl #2]
   2c710:	add	pc, r3, r1
   2c714:	ldrdeq	r0, [r0], -r8
   2c718:	ldrdeq	r0, [r0], -r8
   2c71c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c720:	ldrdeq	r0, [r0], -r8
   2c724:	ldrdeq	r0, [r0], -r8
   2c728:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c72c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c730:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c734:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c738:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c73c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c740:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c744:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c748:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c74c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c750:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c754:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c758:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c75c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c760:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c764:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c768:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c76c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c770:	ldrdeq	r0, [r0], -r8
   2c774:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c778:	andeq	r0, r0, r8, ror r1
   2c77c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c780:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c784:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c788:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c78c:	andeq	r0, r0, r4, lsl #3
   2c790:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c794:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c798:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c79c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2c7e8:	strdeq	r0, [r0], -r8
   2c7ec:	add	r4, r4, #1
   2c7f0:	cmp	r0, r4
   2c7f4:	bne	2c6f8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x20>
   2c7f8:	mov	r4, r0
   2c7fc:	mov	r0, r4
   2c800:	pop	{r4, r5, r6, sl, fp, pc}
   2c804:	mov	r0, #39	; 0x27
   2c808:	b	2c8a0 <myhtml_tokenizer_state_before_attribute_value@@Base+0x1c8>
   2c80c:	ldr	r1, [r6, #48]	; 0x30
   2c810:	mov	r0, #0
   2c814:	tst	r1, #1
   2c818:	bne	2c840 <myhtml_tokenizer_state_before_attribute_value@@Base+0x168>
   2c81c:	ldr	r1, [r6]
   2c820:	cmp	r1, #93	; 0x5d
   2c824:	bne	2c834 <myhtml_tokenizer_state_before_attribute_value@@Base+0x15c>
   2c828:	ldr	r2, [r5, #180]	; 0xb4
   2c82c:	tst	r2, #1
   2c830:	beq	2c840 <myhtml_tokenizer_state_before_attribute_value@@Base+0x168>
   2c834:	ldr	r0, [r5, #28]
   2c838:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2c83c:	ldr	r0, [r0, #12]
   2c840:	str	r0, [r5, #160]	; 0xa0
   2c844:	mov	r2, r6
   2c848:	ldr	r0, [r5, #192]	; 0xc0
   2c84c:	ldr	r1, [r6, #32]
   2c850:	sub	r0, r0, r1
   2c854:	add	r0, r0, r4
   2c858:	add	r4, r4, #1
   2c85c:	add	r0, r0, #1
   2c860:	mov	r1, r4
   2c864:	str	r0, [r6, #36]	; 0x24
   2c868:	mov	r0, r5
   2c86c:	bl	110e4 <myhtml_queue_add@plt>
   2c870:	cmp	r0, #0
   2c874:	beq	2c8bc <myhtml_tokenizer_state_before_attribute_value@@Base+0x1e4>
   2c878:	mov	r0, #69	; 0x45
   2c87c:	mov	r4, #0
   2c880:	str	r0, [r5, #160]	; 0xa0
   2c884:	mov	r0, r4
   2c888:	pop	{r4, r5, r6, sl, fp, pc}
   2c88c:	add	r4, r4, #1
   2c890:	mov	r0, #37	; 0x25
   2c894:	b	2c8a0 <myhtml_tokenizer_state_before_attribute_value@@Base+0x1c8>
   2c898:	add	r4, r4, #1
   2c89c:	mov	r0, #38	; 0x26
   2c8a0:	str	r0, [r5, #160]	; 0xa0
   2c8a4:	ldr	r1, [r5, #192]	; 0xc0
   2c8a8:	ldr	r0, [r5, #56]	; 0x38
   2c8ac:	add	r1, r1, r4
   2c8b0:	str	r1, [r0, #56]	; 0x38
   2c8b4:	mov	r0, r4
   2c8b8:	pop	{r4, r5, r6, sl, fp, pc}
   2c8bc:	ldr	r0, [r5, #8]
   2c8c0:	ldr	r1, [r0, #16]
   2c8c4:	bl	11720 <myhtml_token_attr_create@plt>
   2c8c8:	cmp	r0, #0
   2c8cc:	str	r0, [r5, #56]	; 0x38
   2c8d0:	bne	2c7fc <myhtml_tokenizer_state_before_attribute_value@@Base+0x124>
   2c8d4:	b	2c878 <myhtml_tokenizer_state_before_attribute_value@@Base+0x1a0>

0002c8d8 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   2c8d8:	push	{r4, r5, fp, lr}
   2c8dc:	add	fp, sp, #8
   2c8e0:	mov	r5, r0
   2c8e4:	ldr	r0, [fp, #8]
   2c8e8:	mov	r4, r3
   2c8ec:	cmp	r3, r0
   2c8f0:	bcs	2c910 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x38>
   2c8f4:	ldrb	r1, [r2, r4]
   2c8f8:	cmp	r1, #34	; 0x22
   2c8fc:	beq	2c918 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x40>
   2c900:	add	r4, r4, #1
   2c904:	cmp	r0, r4
   2c908:	bne	2c8f4 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x1c>
   2c90c:	mov	r4, r0
   2c910:	mov	r0, r4
   2c914:	pop	{r4, r5, fp, pc}
   2c918:	ldr	r0, [r5, #56]	; 0x38
   2c91c:	ldr	r1, [r5, #192]	; 0xc0
   2c920:	ldr	r2, [r0, #56]	; 0x38
   2c924:	sub	r1, r1, r2
   2c928:	add	r1, r1, r4
   2c92c:	str	r1, [r0, #60]	; 0x3c
   2c930:	ldr	r0, [r5, #8]
   2c934:	ldr	r1, [r0, #16]
   2c938:	bl	11720 <myhtml_token_attr_create@plt>
   2c93c:	cmp	r0, #0
   2c940:	str	r0, [r5, #56]	; 0x38
   2c944:	beq	2c95c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x84>
   2c948:	mov	r0, #41	; 0x29
   2c94c:	add	r4, r4, #1
   2c950:	str	r0, [r5, #160]	; 0xa0
   2c954:	mov	r0, r4
   2c958:	pop	{r4, r5, fp, pc}
   2c95c:	mov	r0, #69	; 0x45
   2c960:	mov	r4, #0
   2c964:	str	r0, [r5, #160]	; 0xa0
   2c968:	mov	r0, r4
   2c96c:	pop	{r4, r5, fp, pc}

0002c970 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   2c970:	push	{r4, r5, fp, lr}
   2c974:	add	fp, sp, #8
   2c978:	mov	r5, r0
   2c97c:	ldr	r0, [fp, #8]
   2c980:	mov	r4, r3
   2c984:	cmp	r3, r0
   2c988:	bcs	2c9a8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x38>
   2c98c:	ldrb	r1, [r2, r4]
   2c990:	cmp	r1, #39	; 0x27
   2c994:	beq	2c9b0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x40>
   2c998:	add	r4, r4, #1
   2c99c:	cmp	r0, r4
   2c9a0:	bne	2c98c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x1c>
   2c9a4:	mov	r4, r0
   2c9a8:	mov	r0, r4
   2c9ac:	pop	{r4, r5, fp, pc}
   2c9b0:	ldr	r0, [r5, #56]	; 0x38
   2c9b4:	ldr	r1, [r5, #192]	; 0xc0
   2c9b8:	ldr	r2, [r0, #56]	; 0x38
   2c9bc:	sub	r1, r1, r2
   2c9c0:	add	r1, r1, r4
   2c9c4:	str	r1, [r0, #60]	; 0x3c
   2c9c8:	ldr	r0, [r5, #8]
   2c9cc:	ldr	r1, [r0, #16]
   2c9d0:	bl	11720 <myhtml_token_attr_create@plt>
   2c9d4:	cmp	r0, #0
   2c9d8:	str	r0, [r5, #56]	; 0x38
   2c9dc:	beq	2c9f4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x84>
   2c9e0:	mov	r0, #41	; 0x29
   2c9e4:	add	r4, r4, #1
   2c9e8:	str	r0, [r5, #160]	; 0xa0
   2c9ec:	mov	r0, r4
   2c9f0:	pop	{r4, r5, fp, pc}
   2c9f4:	mov	r0, #69	; 0x45
   2c9f8:	mov	r4, #0
   2c9fc:	str	r0, [r5, #160]	; 0xa0
   2ca00:	mov	r0, r4
   2ca04:	pop	{r4, r5, fp, pc}

0002ca08 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   2ca08:	push	{r4, r5, r6, sl, fp, lr}
   2ca0c:	add	fp, sp, #16
   2ca10:	mov	r5, r0
   2ca14:	ldr	r0, [fp, #8]
   2ca18:	mov	r4, r3
   2ca1c:	cmp	r3, r0
   2ca20:	bcs	2cb80 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x178>
   2ca24:	mov	r6, r1
   2ca28:	ldrb	r1, [r2, r4]
   2ca2c:	sub	r1, r1, #9
   2ca30:	cmp	r1, #53	; 0x35
   2ca34:	bls	2ca54 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x4c>
   2ca38:	add	r4, r4, #1
   2ca3c:	cmp	r0, r4
   2ca40:	beq	2cb7c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x174>
   2ca44:	ldrb	r1, [r2, r4]
   2ca48:	sub	r1, r1, #9
   2ca4c:	cmp	r1, #53	; 0x35
   2ca50:	bhi	2ca38 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x30>
   2ca54:	add	r3, pc, #4
   2ca58:	ldr	r1, [r3, r1, lsl #2]
   2ca5c:	add	pc, r3, r1
   2ca60:	ldrdeq	r0, [r0], -r8
   2ca64:	ldrdeq	r0, [r0], -r8
   2ca68:			; <UNDEFINED> instruction: 0xffffffd8
   2ca6c:	ldrdeq	r0, [r0], -r8
   2ca70:	ldrdeq	r0, [r0], -r8
   2ca74:			; <UNDEFINED> instruction: 0xffffffd8
   2ca78:			; <UNDEFINED> instruction: 0xffffffd8
   2ca7c:			; <UNDEFINED> instruction: 0xffffffd8
   2ca80:			; <UNDEFINED> instruction: 0xffffffd8
   2ca84:			; <UNDEFINED> instruction: 0xffffffd8
   2ca88:			; <UNDEFINED> instruction: 0xffffffd8
   2ca8c:			; <UNDEFINED> instruction: 0xffffffd8
   2ca90:			; <UNDEFINED> instruction: 0xffffffd8
   2ca94:			; <UNDEFINED> instruction: 0xffffffd8
   2ca98:			; <UNDEFINED> instruction: 0xffffffd8
   2ca9c:			; <UNDEFINED> instruction: 0xffffffd8
   2caa0:			; <UNDEFINED> instruction: 0xffffffd8
   2caa4:			; <UNDEFINED> instruction: 0xffffffd8
   2caa8:			; <UNDEFINED> instruction: 0xffffffd8
   2caac:			; <UNDEFINED> instruction: 0xffffffd8
   2cab0:			; <UNDEFINED> instruction: 0xffffffd8
   2cab4:			; <UNDEFINED> instruction: 0xffffffd8
   2cab8:			; <UNDEFINED> instruction: 0xffffffd8
   2cabc:	ldrdeq	r0, [r0], -r8
   2cac0:			; <UNDEFINED> instruction: 0xffffffd8
   2cac4:			; <UNDEFINED> instruction: 0xffffffd8
   2cac8:			; <UNDEFINED> instruction: 0xffffffd8
   2cacc:			; <UNDEFINED> instruction: 0xffffffd8
   2cad0:			; <UNDEFINED> instruction: 0xffffffd8
   2cad4:			; <UNDEFINED> instruction: 0xffffffd8
   2cad8:			; <UNDEFINED> instruction: 0xffffffd8
   2cadc:			; <UNDEFINED> instruction: 0xffffffd8
   2cae0:			; <UNDEFINED> instruction: 0xffffffd8
   2cae4:			; <UNDEFINED> instruction: 0xffffffd8
   2cae8:			; <UNDEFINED> instruction: 0xffffffd8
   2caec:			; <UNDEFINED> instruction: 0xffffffd8
   2caf0:			; <UNDEFINED> instruction: 0xffffffd8
   2caf4:			; <UNDEFINED> instruction: 0xffffffd8
   2caf8:			; <UNDEFINED> instruction: 0xffffffd8
   2cafc:			; <UNDEFINED> instruction: 0xffffffd8
   2cb00:			; <UNDEFINED> instruction: 0xffffffd8
   2cb04:			; <UNDEFINED> instruction: 0xffffffd8
   2cb08:			; <UNDEFINED> instruction: 0xffffffd8
   2cb0c:			; <UNDEFINED> instruction: 0xffffffd8
   2cb10:			; <UNDEFINED> instruction: 0xffffffd8
   2cb14:			; <UNDEFINED> instruction: 0xffffffd8
   2cb18:			; <UNDEFINED> instruction: 0xffffffd8
   2cb1c:			; <UNDEFINED> instruction: 0xffffffd8
   2cb20:			; <UNDEFINED> instruction: 0xffffffd8
   2cb24:			; <UNDEFINED> instruction: 0xffffffd8
   2cb28:			; <UNDEFINED> instruction: 0xffffffd8
   2cb2c:			; <UNDEFINED> instruction: 0xffffffd8
   2cb30:			; <UNDEFINED> instruction: 0xffffffd8
   2cb34:	andeq	r0, r0, r8, lsr #2
   2cb38:	mov	r0, #33	; 0x21
   2cb3c:	str	r0, [r5, #160]	; 0xa0
   2cb40:	ldr	r0, [r5, #56]	; 0x38
   2cb44:	ldr	r1, [r5, #192]	; 0xc0
   2cb48:	ldr	r2, [r0, #56]	; 0x38
   2cb4c:	sub	r1, r1, r2
   2cb50:	add	r1, r1, r4
   2cb54:	str	r1, [r0, #60]	; 0x3c
   2cb58:	ldr	r0, [r5, #8]
   2cb5c:	ldr	r1, [r0, #16]
   2cb60:	bl	11720 <myhtml_token_attr_create@plt>
   2cb64:	cmp	r0, #0
   2cb68:	str	r0, [r5, #56]	; 0x38
   2cb6c:	beq	2cc2c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x224>
   2cb70:	add	r4, r4, #1
   2cb74:	mov	r0, r4
   2cb78:	pop	{r4, r5, r6, sl, fp, pc}
   2cb7c:	mov	r4, r0
   2cb80:	mov	r0, r4
   2cb84:	pop	{r4, r5, r6, sl, fp, pc}
   2cb88:	ldr	r1, [r5, #56]	; 0x38
   2cb8c:	ldr	r0, [r5, #192]	; 0xc0
   2cb90:	ldr	r2, [r1, #56]	; 0x38
   2cb94:	sub	r2, r0, r2
   2cb98:	add	r2, r2, r4
   2cb9c:	str	r2, [r1, #60]	; 0x3c
   2cba0:	ldr	r1, [r6, #48]	; 0x30
   2cba4:	tst	r1, #1
   2cba8:	bne	2cbc4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1bc>
   2cbac:	ldr	r1, [r6]
   2cbb0:	cmp	r1, #93	; 0x5d
   2cbb4:	bne	2cbd0 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1c8>
   2cbb8:	ldr	r2, [r5, #180]	; 0xb4
   2cbbc:	tst	r2, #1
   2cbc0:	bne	2cbd0 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1c8>
   2cbc4:	mov	r1, #0
   2cbc8:	str	r1, [r5, #160]	; 0xa0
   2cbcc:	b	2cbe4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1dc>
   2cbd0:	ldr	r0, [r5, #28]
   2cbd4:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2cbd8:	ldr	r0, [r0, #12]
   2cbdc:	str	r0, [r5, #160]	; 0xa0
   2cbe0:	ldr	r0, [r5, #192]	; 0xc0
   2cbe4:	ldr	r1, [r6, #32]
   2cbe8:	mov	r2, r6
   2cbec:	sub	r0, r0, r1
   2cbf0:	add	r0, r0, r4
   2cbf4:	add	r4, r4, #1
   2cbf8:	add	r0, r0, #1
   2cbfc:	mov	r1, r4
   2cc00:	str	r0, [r6, #36]	; 0x24
   2cc04:	mov	r0, r5
   2cc08:	bl	110e4 <myhtml_queue_add@plt>
   2cc0c:	cmp	r0, #0
   2cc10:	bne	2cc2c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x224>
   2cc14:	ldr	r0, [r5, #8]
   2cc18:	ldr	r1, [r0, #16]
   2cc1c:	bl	11720 <myhtml_token_attr_create@plt>
   2cc20:	cmp	r0, #0
   2cc24:	str	r0, [r5, #56]	; 0x38
   2cc28:	bne	2cb80 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x178>
   2cc2c:	mov	r0, #69	; 0x45
   2cc30:	mov	r4, #0
   2cc34:	str	r0, [r5, #160]	; 0xa0
   2cc38:	mov	r0, r4
   2cc3c:	pop	{r4, r5, r6, sl, fp, pc}

0002cc40 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   2cc40:	push	{r4, r5, r6, sl, fp, lr}
   2cc44:	add	fp, sp, #16
   2cc48:	mov	r5, r0
   2cc4c:	ldrb	r0, [r2, r3]
   2cc50:	mov	r4, r3
   2cc54:	sub	r0, r0, #9
   2cc58:	cmp	r0, #53	; 0x35
   2cc5c:	bhi	2cd5c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x11c>
   2cc60:	mov	r6, r1
   2cc64:	add	r1, pc, #4
   2cc68:	ldr	r0, [r1, r0, lsl #2]
   2cc6c:	add	pc, r1, r0
   2cc70:	ldrdeq	r0, [r0], -r8
   2cc74:	ldrdeq	r0, [r0], -r8
   2cc78:	andeq	r0, r0, ip, ror #1
   2cc7c:	ldrdeq	r0, [r0], -r8
   2cc80:	ldrdeq	r0, [r0], -r8
   2cc84:	andeq	r0, r0, ip, ror #1
   2cc88:	andeq	r0, r0, ip, ror #1
   2cc8c:	andeq	r0, r0, ip, ror #1
   2cc90:	andeq	r0, r0, ip, ror #1
   2cc94:	andeq	r0, r0, ip, ror #1
   2cc98:	andeq	r0, r0, ip, ror #1
   2cc9c:	andeq	r0, r0, ip, ror #1
   2cca0:	andeq	r0, r0, ip, ror #1
   2cca4:	andeq	r0, r0, ip, ror #1
   2cca8:	andeq	r0, r0, ip, ror #1
   2ccac:	andeq	r0, r0, ip, ror #1
   2ccb0:	andeq	r0, r0, ip, ror #1
   2ccb4:	andeq	r0, r0, ip, ror #1
   2ccb8:	andeq	r0, r0, ip, ror #1
   2ccbc:	andeq	r0, r0, ip, ror #1
   2ccc0:	andeq	r0, r0, ip, ror #1
   2ccc4:	andeq	r0, r0, ip, ror #1
   2ccc8:	andeq	r0, r0, ip, ror #1
   2cccc:	ldrdeq	r0, [r0], -r8
   2ccd0:	andeq	r0, r0, ip, ror #1
   2ccd4:	andeq	r0, r0, ip, ror #1
   2ccd8:	andeq	r0, r0, ip, ror #1
   2ccdc:	andeq	r0, r0, ip, ror #1
   2cce0:	andeq	r0, r0, ip, ror #1
   2cce4:	andeq	r0, r0, ip, ror #1
   2cce8:	andeq	r0, r0, ip, ror #1
   2ccec:	andeq	r0, r0, ip, ror #1
   2ccf0:	andeq	r0, r0, ip, ror #1
   2ccf4:	andeq	r0, r0, ip, ror #1
   2ccf8:	andeq	r0, r0, ip, ror #1
   2ccfc:	andeq	r0, r0, ip, ror #1
   2cd00:	andeq	r0, r0, ip, ror #1
   2cd04:	andeq	r0, r0, ip, ror #1
   2cd08:	strdeq	r0, [r0], -r4
   2cd0c:	andeq	r0, r0, ip, ror #1
   2cd10:	andeq	r0, r0, ip, ror #1
   2cd14:	andeq	r0, r0, ip, ror #1
   2cd18:	andeq	r0, r0, ip, ror #1
   2cd1c:	andeq	r0, r0, ip, ror #1
   2cd20:	andeq	r0, r0, ip, ror #1
   2cd24:	andeq	r0, r0, ip, ror #1
   2cd28:	andeq	r0, r0, ip, ror #1
   2cd2c:	andeq	r0, r0, ip, ror #1
   2cd30:	andeq	r0, r0, ip, ror #1
   2cd34:	andeq	r0, r0, ip, ror #1
   2cd38:	andeq	r0, r0, ip, ror #1
   2cd3c:	andeq	r0, r0, ip, ror #1
   2cd40:	andeq	r0, r0, ip, ror #1
   2cd44:	andeq	r0, r0, r8, lsl #2
   2cd48:	mov	r0, #33	; 0x21
   2cd4c:	add	r4, r4, #1
   2cd50:	str	r0, [r5, #160]	; 0xa0
   2cd54:	mov	r0, r4
   2cd58:	pop	{r4, r5, r6, sl, fp, pc}
   2cd5c:	mov	r0, #33	; 0x21
   2cd60:	b	2cde8 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x1a8>
   2cd64:	mov	r0, #42	; 0x2a
   2cd68:	add	r4, r4, #1
   2cd6c:	str	r0, [r5, #160]	; 0xa0
   2cd70:	mov	r0, r4
   2cd74:	pop	{r4, r5, r6, sl, fp, pc}
   2cd78:	ldr	r1, [r6, #48]	; 0x30
   2cd7c:	mov	r0, #0
   2cd80:	tst	r1, #1
   2cd84:	bne	2cdac <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x16c>
   2cd88:	ldr	r1, [r6]
   2cd8c:	cmp	r1, #93	; 0x5d
   2cd90:	bne	2cda0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x160>
   2cd94:	ldr	r2, [r5, #180]	; 0xb4
   2cd98:	tst	r2, #1
   2cd9c:	beq	2cdac <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x16c>
   2cda0:	ldr	r0, [r5, #28]
   2cda4:	bl	117f8 <myhtml_tag_get_by_id@plt>
   2cda8:	ldr	r0, [r0, #12]
   2cdac:	str	r0, [r5, #160]	; 0xa0
   2cdb0:	add	r4, r4, #1
   2cdb4:	mov	r2, r6
   2cdb8:	ldr	r0, [r5, #192]	; 0xc0
   2cdbc:	ldr	r1, [r6, #32]
   2cdc0:	add	r0, r0, r4
   2cdc4:	sub	r0, r0, r1
   2cdc8:	mov	r1, r4
   2cdcc:	str	r0, [r6, #36]	; 0x24
   2cdd0:	mov	r0, r5
   2cdd4:	bl	110e4 <myhtml_queue_add@plt>
   2cdd8:	cmp	r0, #0
   2cddc:	beq	2cdec <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x1ac>
   2cde0:	mov	r0, #69	; 0x45
   2cde4:	mov	r4, #0
   2cde8:	str	r0, [r5, #160]	; 0xa0
   2cdec:	mov	r0, r4
   2cdf0:	pop	{r4, r5, r6, sl, fp, pc}

0002cdf4 <myhtml_tokenizer_state_comment_start@@Base>:
   2cdf4:	push	{r4, r5, r6, r7, fp, lr}
   2cdf8:	add	fp, sp, #16
   2cdfc:	mov	r4, r0
   2ce00:	mov	r0, #2
   2ce04:	str	r0, [r1]
   2ce08:	ldrb	r0, [r2, r3]
   2ce0c:	cmp	r0, #45	; 0x2d
   2ce10:	beq	2ce68 <myhtml_tokenizer_state_comment_start@@Base+0x74>
   2ce14:	cmp	r0, #62	; 0x3e
   2ce18:	bne	2ce7c <myhtml_tokenizer_state_comment_start@@Base+0x88>
   2ce1c:	mov	r5, #0
   2ce20:	ldr	r0, [r4, #192]	; 0xc0
   2ce24:	mov	r6, r1
   2ce28:	add	r7, r3, #1
   2ce2c:	str	r5, [r1, #28]
   2ce30:	mov	r2, r6
   2ce34:	ldr	r1, [r1, #32]
   2ce38:	add	r0, r0, r7
   2ce3c:	sub	r0, r0, r1
   2ce40:	mov	r1, r7
   2ce44:	str	r0, [r6, #36]	; 0x24
   2ce48:	mov	r0, r4
   2ce4c:	bl	110e4 <myhtml_queue_add@plt>
   2ce50:	cmp	r0, #0
   2ce54:	beq	2ce90 <myhtml_tokenizer_state_comment_start@@Base+0x9c>
   2ce58:	mov	r0, #69	; 0x45
   2ce5c:	str	r0, [r4, #160]	; 0xa0
   2ce60:	mov	r0, r5
   2ce64:	pop	{r4, r5, r6, r7, fp, pc}
   2ce68:	mov	r0, #46	; 0x2e
   2ce6c:	add	r5, r3, #1
   2ce70:	str	r0, [r4, #160]	; 0xa0
   2ce74:	mov	r0, r5
   2ce78:	pop	{r4, r5, r6, r7, fp, pc}
   2ce7c:	mov	r0, #47	; 0x2f
   2ce80:	add	r5, r3, #1
   2ce84:	str	r0, [r4, #160]	; 0xa0
   2ce88:	mov	r0, r5
   2ce8c:	pop	{r4, r5, r6, r7, fp, pc}
   2ce90:	mov	r0, #0
   2ce94:	str	r0, [r4, #160]	; 0xa0
   2ce98:	mov	r0, r7
   2ce9c:	pop	{r4, r5, r6, r7, fp, pc}

0002cea0 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   2cea0:	push	{r4, r5, r6, r7, fp, lr}
   2cea4:	add	fp, sp, #16
   2cea8:	mov	r4, r0
   2ceac:	mov	r0, #2
   2ceb0:	str	r0, [r1]
   2ceb4:	ldrb	r0, [r2, r3]
   2ceb8:	cmp	r0, #45	; 0x2d
   2cebc:	beq	2cf14 <myhtml_tokenizer_state_comment_start_dash@@Base+0x74>
   2cec0:	cmp	r0, #62	; 0x3e
   2cec4:	bne	2cf28 <myhtml_tokenizer_state_comment_start_dash@@Base+0x88>
   2cec8:	mov	r5, #0
   2cecc:	ldr	r0, [r4, #192]	; 0xc0
   2ced0:	mov	r6, r1
   2ced4:	add	r7, r3, #1
   2ced8:	str	r5, [r1, #28]
   2cedc:	mov	r2, r6
   2cee0:	ldr	r1, [r1, #32]
   2cee4:	add	r0, r0, r7
   2cee8:	sub	r0, r0, r1
   2ceec:	mov	r1, r7
   2cef0:	str	r0, [r6, #36]	; 0x24
   2cef4:	mov	r0, r4
   2cef8:	bl	110e4 <myhtml_queue_add@plt>
   2cefc:	cmp	r0, #0
   2cf00:	beq	2cf3c <myhtml_tokenizer_state_comment_start_dash@@Base+0x9c>
   2cf04:	mov	r0, #69	; 0x45
   2cf08:	str	r0, [r4, #160]	; 0xa0
   2cf0c:	mov	r0, r5
   2cf10:	pop	{r4, r5, r6, r7, fp, pc}
   2cf14:	mov	r0, #49	; 0x31
   2cf18:	add	r5, r3, #1
   2cf1c:	str	r0, [r4, #160]	; 0xa0
   2cf20:	mov	r0, r5
   2cf24:	pop	{r4, r5, r6, r7, fp, pc}
   2cf28:	mov	r0, #47	; 0x2f
   2cf2c:	add	r5, r3, #1
   2cf30:	str	r0, [r4, #160]	; 0xa0
   2cf34:	mov	r0, r5
   2cf38:	pop	{r4, r5, r6, r7, fp, pc}
   2cf3c:	mov	r0, #0
   2cf40:	str	r0, [r4, #160]	; 0xa0
   2cf44:	mov	r0, r7
   2cf48:	pop	{r4, r5, r6, r7, fp, pc}

0002cf4c <myhtml_tokenizer_state_comment@@Base>:
   2cf4c:	mov	ip, r3
   2cf50:	mov	r3, #2
   2cf54:	str	r3, [r1]
   2cf58:	ldr	r1, [sp]
   2cf5c:	cmp	ip, r1
   2cf60:	bcs	2cf80 <myhtml_tokenizer_state_comment@@Base+0x34>
   2cf64:	ldrb	r3, [r2, ip]
   2cf68:	cmp	r3, #45	; 0x2d
   2cf6c:	beq	2cf88 <myhtml_tokenizer_state_comment@@Base+0x3c>
   2cf70:	add	ip, ip, #1
   2cf74:	cmp	r1, ip
   2cf78:	bne	2cf64 <myhtml_tokenizer_state_comment@@Base+0x18>
   2cf7c:	mov	ip, r1
   2cf80:	mov	r0, ip
   2cf84:	bx	lr
   2cf88:	mov	r1, #48	; 0x30
   2cf8c:	add	ip, ip, #1
   2cf90:	str	r1, [r0, #160]	; 0xa0
   2cf94:	mov	r0, ip
   2cf98:	bx	lr

0002cf9c <myhtml_tokenizer_state_comment_end_dash@@Base>:
   2cf9c:	ldrb	r1, [r2, r3]
   2cfa0:	mov	r2, #47	; 0x2f
   2cfa4:	cmp	r1, #45	; 0x2d
   2cfa8:	movweq	r2, #49	; 0x31
   2cfac:	str	r2, [r0, #160]	; 0xa0
   2cfb0:	add	r0, r3, #1
   2cfb4:	bx	lr

0002cfb8 <myhtml_tokenizer_state_comment_end@@Base>:
   2cfb8:	push	{r4, r5, r6, r7, fp, lr}
   2cfbc:	add	fp, sp, #16
   2cfc0:	mov	r4, r0
   2cfc4:	ldrb	r0, [r2, r3]
   2cfc8:	cmp	r0, #33	; 0x21
   2cfcc:	beq	2d034 <myhtml_tokenizer_state_comment_end@@Base+0x7c>
   2cfd0:	cmp	r0, #62	; 0x3e
   2cfd4:	bne	2d048 <myhtml_tokenizer_state_comment_end@@Base+0x90>
   2cfd8:	mov	r6, r1
   2cfdc:	ldr	r0, [r4, #192]	; 0xc0
   2cfe0:	add	r7, r3, #1
   2cfe4:	ldr	r2, [r6, #24]
   2cfe8:	ldr	r5, [r6, #32]
   2cfec:	add	r1, r0, r7
   2cff0:	add	r0, r0, r3
   2cff4:	sub	r0, r0, r2
   2cff8:	sub	r1, r1, r5
   2cffc:	mov	r2, r6
   2d000:	mov	r5, #0
   2d004:	cmp	r0, #1
   2d008:	str	r1, [r6, #36]	; 0x24
   2d00c:	mov	r1, #0
   2d010:	subhi	r1, r0, #2
   2d014:	mov	r0, r4
   2d018:	str	r1, [r6, #28]
   2d01c:	mov	r1, r7
   2d020:	bl	110e4 <myhtml_queue_add@plt>
   2d024:	cmp	r0, #0
   2d028:	beq	2d064 <myhtml_tokenizer_state_comment_end@@Base+0xac>
   2d02c:	mov	r0, #69	; 0x45
   2d030:	b	2d058 <myhtml_tokenizer_state_comment_end@@Base+0xa0>
   2d034:	mov	r0, #50	; 0x32
   2d038:	add	r5, r3, #1
   2d03c:	str	r0, [r4, #160]	; 0xa0
   2d040:	mov	r0, r5
   2d044:	pop	{r4, r5, r6, r7, fp, pc}
   2d048:	add	r5, r3, #1
   2d04c:	cmp	r0, #45	; 0x2d
   2d050:	beq	2d05c <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   2d054:	mov	r0, #47	; 0x2f
   2d058:	str	r0, [r4, #160]	; 0xa0
   2d05c:	mov	r0, r5
   2d060:	pop	{r4, r5, r6, r7, fp, pc}
   2d064:	mov	r0, #0
   2d068:	str	r0, [r4, #160]	; 0xa0
   2d06c:	mov	r0, r7
   2d070:	pop	{r4, r5, r6, r7, fp, pc}

0002d074 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   2d074:	push	{r4, r5, r6, sl, fp, lr}
   2d078:	add	fp, sp, #16
   2d07c:	mov	r6, r0
   2d080:	ldrb	r0, [r2, r3]
   2d084:	cmp	r0, #62	; 0x3e
   2d088:	bne	2d0f4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x80>
   2d08c:	ldr	r0, [r6, #192]	; 0xc0
   2d090:	mov	r4, r1
   2d094:	ldr	r2, [r4, #24]
   2d098:	add	r1, r0, r3
   2d09c:	sub	r5, r1, #3
   2d0a0:	cmp	r5, r2
   2d0a4:	add	r5, r3, #1
   2d0a8:	movcc	r1, #0
   2d0ac:	add	r0, r0, r5
   2d0b0:	subcs	r1, r1, r2
   2d0b4:	mov	r2, r4
   2d0b8:	subcs	r1, r1, #3
   2d0bc:	str	r1, [r4, #28]
   2d0c0:	ldr	r1, [r4, #32]
   2d0c4:	sub	r0, r0, r1
   2d0c8:	mov	r1, r5
   2d0cc:	str	r0, [r4, #36]	; 0x24
   2d0d0:	mov	r0, r6
   2d0d4:	bl	110e4 <myhtml_queue_add@plt>
   2d0d8:	cmp	r0, #0
   2d0dc:	beq	2d110 <myhtml_tokenizer_state_comment_end_bang@@Base+0x9c>
   2d0e0:	mov	r0, #69	; 0x45
   2d0e4:	mov	r5, #0
   2d0e8:	str	r0, [r6, #160]	; 0xa0
   2d0ec:	mov	r0, r5
   2d0f0:	pop	{r4, r5, r6, sl, fp, pc}
   2d0f4:	cmp	r0, #45	; 0x2d
   2d0f8:	add	r5, r3, #1
   2d0fc:	movne	r0, #47	; 0x2f
   2d100:	moveq	r0, #48	; 0x30
   2d104:	str	r0, [r6, #160]	; 0xa0
   2d108:	mov	r0, r5
   2d10c:	pop	{r4, r5, r6, sl, fp, pc}
   2d110:	mov	r0, #0
   2d114:	str	r0, [r6, #160]	; 0xa0
   2d118:	mov	r0, r5
   2d11c:	pop	{r4, r5, r6, sl, fp, pc}

0002d120 <myhtml_tokenizer_state_bogus_comment@@Base>:
   2d120:	push	{r4, r5, fp, lr}
   2d124:	add	fp, sp, #8
   2d128:	mov	r4, r0
   2d12c:	mov	r0, #2
   2d130:	mov	r5, r3
   2d134:	mov	r3, r1
   2d138:	str	r0, [r1]
   2d13c:	ldr	r0, [r1, #48]	; 0x30
   2d140:	orr	r0, r0, #1024	; 0x400
   2d144:	str	r0, [r1, #48]	; 0x30
   2d148:	ldr	r1, [fp, #8]
   2d14c:	cmp	r5, r1
   2d150:	bcs	2d174 <myhtml_tokenizer_state_bogus_comment@@Base+0x54>
   2d154:	rsb	r0, r5, #0
   2d158:	ldrb	r5, [r2, -r0]
   2d15c:	cmp	r5, #62	; 0x3e
   2d160:	beq	2d17c <myhtml_tokenizer_state_bogus_comment@@Base+0x5c>
   2d164:	sub	r0, r0, #1
   2d168:	adds	r5, r1, r0
   2d16c:	bne	2d158 <myhtml_tokenizer_state_bogus_comment@@Base+0x38>
   2d170:	mov	r5, r1
   2d174:	mov	r0, r5
   2d178:	pop	{r4, r5, fp, pc}
   2d17c:	ldr	r1, [r3, #24]
   2d180:	ldr	r5, [r4, #192]	; 0xc0
   2d184:	ldr	r2, [r3, #32]
   2d188:	sub	r1, r5, r1
   2d18c:	sub	r1, r1, r0
   2d190:	str	r1, [r3, #28]
   2d194:	sub	r1, r5, r2
   2d198:	rsb	r5, r0, #1
   2d19c:	mov	r2, r3
   2d1a0:	sub	r1, r1, r0
   2d1a4:	mov	r0, r4
   2d1a8:	add	r1, r1, #1
   2d1ac:	str	r1, [r3, #36]	; 0x24
   2d1b0:	mov	r1, r5
   2d1b4:	bl	110e4 <myhtml_queue_add@plt>
   2d1b8:	cmp	r0, #0
   2d1bc:	moveq	r0, #0
   2d1c0:	movne	r5, #0
   2d1c4:	streq	r0, [r4, #160]	; 0xa0
   2d1c8:	movne	r0, #69	; 0x45
   2d1cc:	strne	r0, [r4, #160]	; 0xa0
   2d1d0:	mov	r0, r5
   2d1d4:	pop	{r4, r5, fp, pc}

0002d1d8 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   2d1d8:	movw	r1, #37164	; 0x912c
   2d1dc:	str	r1, [r0, #196]	; 0xc4
   2d1e0:	ldr	r0, [sp]
   2d1e4:	bx	lr

0002d1e8 <myhtml_tokenizer_state_init@@Base>:
   2d1e8:	push	{r4, sl, fp, lr}
   2d1ec:	add	fp, sp, #8
   2d1f0:	mov	r4, r0
   2d1f4:	movw	r0, #19604	; 0x4c94
   2d1f8:	bl	119a8 <mycore_malloc@plt>
   2d1fc:	str	r0, [r4, #24]!
   2d200:	cmp	r0, #0
   2d204:	beq	2d9ec <myhtml_tokenizer_state_init@@Base+0x804>
   2d208:	ldr	r1, [pc, #2020]	; 2d9f4 <myhtml_tokenizer_state_init@@Base+0x80c>
   2d20c:	ldr	r1, [pc, r1]
   2d210:	str	r1, [r0]
   2d214:	ldr	r0, [r4]
   2d218:	ldr	r1, [pc, #2008]	; 2d9f8 <myhtml_tokenizer_state_init@@Base+0x810>
   2d21c:	ldr	r1, [pc, r1]
   2d220:	str	r1, [r0, #28]
   2d224:	ldr	r0, [r4]
   2d228:	ldr	r1, [pc, #1996]	; 2d9fc <myhtml_tokenizer_state_init@@Base+0x814>
   2d22c:	ldr	r1, [pc, r1]
   2d230:	str	r1, [r0, #36]	; 0x24
   2d234:	ldr	r0, [r4]
   2d238:	ldr	r1, [pc, #1984]	; 2da00 <myhtml_tokenizer_state_init@@Base+0x818>
   2d23c:	ldr	r1, [pc, r1]
   2d240:	str	r1, [r0, #32]
   2d244:	ldr	r0, [r4]
   2d248:	ldr	r1, [pc, #1972]	; 2da04 <myhtml_tokenizer_state_init@@Base+0x81c>
   2d24c:	ldr	r1, [pc, r1]
   2d250:	str	r1, [r0, #168]	; 0xa8
   2d254:	ldr	r0, [r4]
   2d258:	ldr	r1, [pc, #1960]	; 2da08 <myhtml_tokenizer_state_init@@Base+0x820>
   2d25c:	ldr	r1, [pc, r1]
   2d260:	str	r1, [r0, #176]	; 0xb0
   2d264:	ldr	r0, [r4]
   2d268:	ldr	r1, [pc, #1948]	; 2da0c <myhtml_tokenizer_state_init@@Base+0x824>
   2d26c:	ldr	r1, [pc, r1]
   2d270:	str	r1, [r0, #132]	; 0x84
   2d274:	ldr	r0, [r4]
   2d278:	ldr	r1, [pc, #1936]	; 2da10 <myhtml_tokenizer_state_init@@Base+0x828>
   2d27c:	ldr	r1, [pc, r1]
   2d280:	str	r1, [r0, #136]	; 0x88
   2d284:	ldr	r0, [r4]
   2d288:	ldr	r1, [pc, #1924]	; 2da14 <myhtml_tokenizer_state_init@@Base+0x82c>
   2d28c:	ldr	r1, [pc, r1]
   2d290:	str	r1, [r0, #140]	; 0x8c
   2d294:	ldr	r0, [r4]
   2d298:	ldr	r1, [pc, #1912]	; 2da18 <myhtml_tokenizer_state_init@@Base+0x830>
   2d29c:	ldr	r1, [pc, r1]
   2d2a0:	str	r1, [r0, #144]	; 0x90
   2d2a4:	ldr	r0, [r4]
   2d2a8:	ldr	r1, [pc, #1900]	; 2da1c <myhtml_tokenizer_state_init@@Base+0x834>
   2d2ac:	ldr	r1, [pc, r1]
   2d2b0:	str	r1, [r0, #164]	; 0xa4
   2d2b4:	ldr	r0, [r4]
   2d2b8:	ldr	r1, [pc, #1888]	; 2da20 <myhtml_tokenizer_state_init@@Base+0x838>
   2d2bc:	ldr	r1, [pc, r1]
   2d2c0:	str	r1, [r0, #148]	; 0x94
   2d2c4:	ldr	r0, [r4]
   2d2c8:	ldr	r1, [pc, #1876]	; 2da24 <myhtml_tokenizer_state_init@@Base+0x83c>
   2d2cc:	ldr	r1, [pc, r1]
   2d2d0:	str	r1, [r0, #152]	; 0x98
   2d2d4:	ldr	r0, [r4]
   2d2d8:	ldr	r1, [pc, #1864]	; 2da28 <myhtml_tokenizer_state_init@@Base+0x840>
   2d2dc:	ldr	r1, [pc, r1]
   2d2e0:	str	r1, [r0, #156]	; 0x9c
   2d2e4:	ldr	r0, [r4]
   2d2e8:	ldr	r1, [pc, #1852]	; 2da2c <myhtml_tokenizer_state_init@@Base+0x844>
   2d2ec:	ldr	r1, [pc, r1]
   2d2f0:	str	r1, [r0, #180]	; 0xb4
   2d2f4:	ldr	r0, [r4]
   2d2f8:	ldr	r1, [pc, #1840]	; 2da30 <myhtml_tokenizer_state_init@@Base+0x848>
   2d2fc:	ldr	r1, [pc, r1]
   2d300:	str	r1, [r0, #184]	; 0xb8
   2d304:	ldr	r0, [r4]
   2d308:	ldr	r1, [pc, #1828]	; 2da34 <myhtml_tokenizer_state_init@@Base+0x84c>
   2d30c:	ldr	r1, [pc, r1]
   2d310:	str	r1, [r0, #188]	; 0xbc
   2d314:	ldr	r0, [r4]
   2d318:	ldr	r1, [pc, #1816]	; 2da38 <myhtml_tokenizer_state_init@@Base+0x850>
   2d31c:	ldr	r1, [pc, r1]
   2d320:	str	r1, [r0, #196]	; 0xc4
   2d324:	ldr	r0, [r4]
   2d328:	ldr	r1, [pc, #1804]	; 2da3c <myhtml_tokenizer_state_init@@Base+0x854>
   2d32c:	ldr	r1, [pc, r1]
   2d330:	str	r1, [r0, #192]	; 0xc0
   2d334:	ldr	r0, [r4]
   2d338:	ldr	r1, [pc, #1792]	; 2da40 <myhtml_tokenizer_state_init@@Base+0x858>
   2d33c:	ldr	r1, [pc, r1]
   2d340:	str	r1, [r0, #200]	; 0xc8
   2d344:	ldr	r0, [r4]
   2d348:	ldr	r1, [pc, #1780]	; 2da44 <myhtml_tokenizer_state_init@@Base+0x85c>
   2d34c:	ldr	r1, [pc, r1]
   2d350:	str	r1, [r0, #172]	; 0xac
   2d354:	ldr	r0, [r4]
   2d358:	ldr	r1, [pc, #1768]	; 2da48 <myhtml_tokenizer_state_init@@Base+0x860>
   2d35c:	ldr	r1, [pc, r1]
   2d360:	str	r1, [r0, #268]	; 0x10c
   2d364:	ldr	r0, [r4]
   2d368:	ldr	r1, [pc, #1756]	; 2da4c <myhtml_tokenizer_state_init@@Base+0x864>
   2d36c:	ldr	r1, [pc, r1]
   2d370:	str	r1, [r0, #8]
   2d374:	ldr	r0, [r4]
   2d378:	ldr	r1, [pc, #1744]	; 2da50 <myhtml_tokenizer_state_init@@Base+0x868>
   2d37c:	ldr	r1, [pc, r1]
   2d380:	str	r1, [r0, #40]	; 0x28
   2d384:	ldr	r0, [r4]
   2d388:	ldr	r1, [pc, #1732]	; 2da54 <myhtml_tokenizer_state_init@@Base+0x86c>
   2d38c:	ldr	r1, [pc, r1]
   2d390:	str	r1, [r0, #44]	; 0x2c
   2d394:	ldr	r0, [r4]
   2d398:	ldr	r1, [pc, #1720]	; 2da58 <myhtml_tokenizer_state_init@@Base+0x870>
   2d39c:	ldr	r1, [pc, r1]
   2d3a0:	str	r1, [r0, #48]	; 0x30
   2d3a4:	ldr	r0, [r4]
   2d3a8:	ldr	r1, [pc, #1708]	; 2da5c <myhtml_tokenizer_state_init@@Base+0x874>
   2d3ac:	ldr	r1, [pc, r1]
   2d3b0:	str	r1, [r0, #16]
   2d3b4:	ldr	r0, [r4]
   2d3b8:	ldr	r1, [pc, #1696]	; 2da60 <myhtml_tokenizer_state_init@@Base+0x878>
   2d3bc:	ldr	r1, [pc, r1]
   2d3c0:	str	r1, [r0, #52]	; 0x34
   2d3c4:	ldr	r0, [r4]
   2d3c8:	ldr	r1, [pc, #1684]	; 2da64 <myhtml_tokenizer_state_init@@Base+0x87c>
   2d3cc:	ldr	r1, [pc, r1]
   2d3d0:	str	r1, [r0, #56]	; 0x38
   2d3d4:	ldr	r0, [r4]
   2d3d8:	ldr	r1, [pc, #1672]	; 2da68 <myhtml_tokenizer_state_init@@Base+0x880>
   2d3dc:	ldr	r1, [pc, r1]
   2d3e0:	str	r1, [r0, #60]	; 0x3c
   2d3e4:	ldr	r0, [r4]
   2d3e8:	ldr	r1, [pc, #1660]	; 2da6c <myhtml_tokenizer_state_init@@Base+0x884>
   2d3ec:	ldr	r1, [pc, r1]
   2d3f0:	str	r1, [r0, #24]
   2d3f4:	ldr	r0, [r4]
   2d3f8:	ldr	r1, [pc, #1648]	; 2da70 <myhtml_tokenizer_state_init@@Base+0x888>
   2d3fc:	ldr	r1, [pc, r1]
   2d400:	str	r1, [r0, #204]	; 0xcc
   2d404:	ldr	r0, [r4]
   2d408:	ldr	r1, [pc, #1636]	; 2da74 <myhtml_tokenizer_state_init@@Base+0x88c>
   2d40c:	ldr	r1, [pc, r1]
   2d410:	str	r1, [r0, #208]	; 0xd0
   2d414:	ldr	r0, [r4]
   2d418:	ldr	r1, [pc, #1624]	; 2da78 <myhtml_tokenizer_state_init@@Base+0x890>
   2d41c:	ldr	r1, [pc, r1]
   2d420:	str	r1, [r0, #212]	; 0xd4
   2d424:	ldr	r0, [r4]
   2d428:	ldr	r1, [pc, #1612]	; 2da7c <myhtml_tokenizer_state_init@@Base+0x894>
   2d42c:	ldr	r1, [pc, r1]
   2d430:	str	r1, [r0, #216]	; 0xd8
   2d434:	ldr	r0, [r4]
   2d438:	ldr	r1, [pc, #1600]	; 2da80 <myhtml_tokenizer_state_init@@Base+0x898>
   2d43c:	ldr	r1, [pc, r1]
   2d440:	str	r1, [r0, #272]	; 0x110
   2d444:	ldr	r0, [r4]
   2d448:	ldr	r1, [pc, #1588]	; 2da84 <myhtml_tokenizer_state_init@@Base+0x89c>
   2d44c:	ldr	r1, [pc, r1]
   2d450:	str	r1, [r0, #224]	; 0xe0
   2d454:	ldr	r0, [r4]
   2d458:	ldr	r1, [pc, #1576]	; 2da88 <myhtml_tokenizer_state_init@@Base+0x8a0>
   2d45c:	ldr	r1, [pc, r1]
   2d460:	str	r1, [r0, #228]	; 0xe4
   2d464:	ldr	r0, [r4]
   2d468:	ldr	r1, [pc, #1564]	; 2da8c <myhtml_tokenizer_state_init@@Base+0x8a4>
   2d46c:	ldr	r1, [pc, r1]
   2d470:	str	r1, [r0, #232]	; 0xe8
   2d474:	ldr	r0, [r4]
   2d478:	ldr	r1, [pc, #1552]	; 2da90 <myhtml_tokenizer_state_init@@Base+0x8a8>
   2d47c:	ldr	r1, [pc, r1]
   2d480:	str	r1, [r0, #236]	; 0xec
   2d484:	ldr	r0, [r4]
   2d488:	ldr	r1, [pc, #1540]	; 2da94 <myhtml_tokenizer_state_init@@Base+0x8ac>
   2d48c:	ldr	r1, [pc, r1]
   2d490:	str	r1, [r0, #252]	; 0xfc
   2d494:	ldr	r0, [r4]
   2d498:	ldr	r1, [pc, #1528]	; 2da98 <myhtml_tokenizer_state_init@@Base+0x8b0>
   2d49c:	ldr	r1, [pc, r1]
   2d4a0:	str	r1, [r0, #256]	; 0x100
   2d4a4:	ldr	r0, [r4]
   2d4a8:	ldr	r1, [pc, #1516]	; 2da9c <myhtml_tokenizer_state_init@@Base+0x8b4>
   2d4ac:	ldr	r1, [pc, r1]
   2d4b0:	str	r1, [r0, #260]	; 0x104
   2d4b4:	ldr	r0, [r4]
   2d4b8:	ldr	r1, [pc, #1504]	; 2daa0 <myhtml_tokenizer_state_init@@Base+0x8b8>
   2d4bc:	ldr	r1, [pc, r1]
   2d4c0:	str	r1, [r0, #264]	; 0x108
   2d4c4:	ldr	r0, [r4]
   2d4c8:	ldr	r1, [pc, #1492]	; 2daa4 <myhtml_tokenizer_state_init@@Base+0x8bc>
   2d4cc:	ldr	r1, [pc, r1]
   2d4d0:	str	r1, [r0, #20]
   2d4d4:	ldr	r0, [r4]
   2d4d8:	ldr	r1, [pc, #1480]	; 2daa8 <myhtml_tokenizer_state_init@@Base+0x8c0>
   2d4dc:	ldr	r1, [pc, r1]
   2d4e0:	str	r1, [r0, #64]	; 0x40
   2d4e4:	ldr	r0, [r4]
   2d4e8:	ldr	r1, [pc, #1468]	; 2daac <myhtml_tokenizer_state_init@@Base+0x8c4>
   2d4ec:	ldr	r1, [pc, r1]
   2d4f0:	str	r1, [r0, #68]	; 0x44
   2d4f4:	ldr	r0, [r4]
   2d4f8:	ldr	r1, [pc, #1456]	; 2dab0 <myhtml_tokenizer_state_init@@Base+0x8c8>
   2d4fc:	ldr	r1, [pc, r1]
   2d500:	str	r1, [r0, #72]	; 0x48
   2d504:	ldr	r0, [r4]
   2d508:	ldr	r1, [pc, #1444]	; 2dab4 <myhtml_tokenizer_state_init@@Base+0x8cc>
   2d50c:	ldr	r1, [pc, r1]
   2d510:	str	r1, [r0, #76]	; 0x4c
   2d514:	ldr	r0, [r4]
   2d518:	ldr	r1, [pc, #1432]	; 2dab8 <myhtml_tokenizer_state_init@@Base+0x8d0>
   2d51c:	ldr	r1, [pc, r1]
   2d520:	str	r1, [r0, #80]	; 0x50
   2d524:	ldr	r0, [r4]
   2d528:	ldr	r1, [pc, #1420]	; 2dabc <myhtml_tokenizer_state_init@@Base+0x8d4>
   2d52c:	ldr	r1, [pc, r1]
   2d530:	str	r1, [r0, #84]	; 0x54
   2d534:	ldr	r0, [r4]
   2d538:	ldr	r1, [pc, #1408]	; 2dac0 <myhtml_tokenizer_state_init@@Base+0x8d8>
   2d53c:	ldr	r1, [pc, r1]
   2d540:	str	r1, [r0, #88]	; 0x58
   2d544:	ldr	r0, [r4]
   2d548:	ldr	r1, [pc, #1396]	; 2dac4 <myhtml_tokenizer_state_init@@Base+0x8dc>
   2d54c:	ldr	r1, [pc, r1]
   2d550:	str	r1, [r0, #92]	; 0x5c
   2d554:	ldr	r0, [r4]
   2d558:	ldr	r1, [pc, #1384]	; 2dac8 <myhtml_tokenizer_state_init@@Base+0x8e0>
   2d55c:	ldr	r1, [pc, r1]
   2d560:	str	r1, [r0, #96]	; 0x60
   2d564:	ldr	r0, [r4]
   2d568:	ldr	r1, [pc, #1372]	; 2dacc <myhtml_tokenizer_state_init@@Base+0x8e4>
   2d56c:	ldr	r1, [pc, r1]
   2d570:	str	r1, [r0, #100]	; 0x64
   2d574:	ldr	r0, [r4]
   2d578:	ldr	r1, [pc, #1360]	; 2dad0 <myhtml_tokenizer_state_init@@Base+0x8e8>
   2d57c:	ldr	r1, [pc, r1]
   2d580:	str	r1, [r0, #104]	; 0x68
   2d584:	ldr	r0, [r4]
   2d588:	ldr	r1, [pc, #1348]	; 2dad4 <myhtml_tokenizer_state_init@@Base+0x8ec>
   2d58c:	ldr	r1, [pc, r1]
   2d590:	str	r1, [r0, #108]	; 0x6c
   2d594:	ldr	r0, [r4]
   2d598:	ldr	r1, [pc, #1336]	; 2dad8 <myhtml_tokenizer_state_init@@Base+0x8f0>
   2d59c:	ldr	r1, [pc, r1]
   2d5a0:	str	r1, [r0, #112]	; 0x70
   2d5a4:	ldr	r0, [r4]
   2d5a8:	ldr	r1, [pc, #1324]	; 2dadc <myhtml_tokenizer_state_init@@Base+0x8f4>
   2d5ac:	ldr	r1, [pc, r1]
   2d5b0:	str	r1, [r0, #116]	; 0x74
   2d5b4:	ldr	r0, [r4]
   2d5b8:	ldr	r1, [pc, #1312]	; 2dae0 <myhtml_tokenizer_state_init@@Base+0x8f8>
   2d5bc:	ldr	r1, [pc, r1]
   2d5c0:	str	r1, [r0, #120]	; 0x78
   2d5c4:	ldr	r0, [r4]
   2d5c8:	ldr	r1, [pc, #1300]	; 2dae4 <myhtml_tokenizer_state_init@@Base+0x8fc>
   2d5cc:	ldr	r1, [pc, r1]
   2d5d0:	str	r1, [r0, #124]	; 0x7c
   2d5d4:	ldr	r0, [r4]
   2d5d8:	ldr	r1, [pc, #1288]	; 2dae8 <myhtml_tokenizer_state_init@@Base+0x900>
   2d5dc:	ldr	r1, [pc, r1]
   2d5e0:	str	r1, [r0, #128]	; 0x80
   2d5e4:	ldr	r0, [r4]
   2d5e8:	ldr	r1, [pc, #1276]	; 2daec <myhtml_tokenizer_state_init@@Base+0x904>
   2d5ec:	ldr	r1, [pc, r1]
   2d5f0:	str	r1, [r0, #276]	; 0x114
   2d5f4:	ldr	r0, [r4]
   2d5f8:	ldr	r1, [pc, #1264]	; 2daf0 <myhtml_tokenizer_state_init@@Base+0x908>
   2d5fc:	ldr	r1, [pc, r1]
   2d600:	str	r1, [r0, #280]	; 0x118
   2d604:	ldr	r0, [r4]
   2d608:	ldr	r1, [pc, #1252]	; 2daf4 <myhtml_tokenizer_state_init@@Base+0x90c>
   2d60c:	ldr	r1, [pc, r1]
   2d610:	str	r1, [r0, #308]	; 0x134
   2d614:	ldr	r0, [r4]
   2d618:	ldr	r1, [pc, #1240]	; 2daf8 <myhtml_tokenizer_state_init@@Base+0x910>
   2d61c:	ldr	r1, [pc, r1]
   2d620:	str	r1, [r0, #316]	; 0x13c
   2d624:	ldr	r0, [r4]
   2d628:	ldr	r1, [pc, #1228]	; 2dafc <myhtml_tokenizer_state_init@@Base+0x914>
   2d62c:	ldr	r1, [pc, r1]
   2d630:	str	r1, [r0, #312]	; 0x138
   2d634:	ldr	r0, [r4]
   2d638:	ldr	r1, [pc, #1216]	; 2db00 <myhtml_tokenizer_state_init@@Base+0x918>
   2d63c:	ldr	r1, [pc, r1]
   2d640:	str	r1, [r0, #448]	; 0x1c0
   2d644:	ldr	r0, [r4]
   2d648:	ldr	r1, [pc, #1204]	; 2db04 <myhtml_tokenizer_state_init@@Base+0x91c>
   2d64c:	ldr	r1, [pc, r1]
   2d650:	str	r1, [r0, #456]	; 0x1c8
   2d654:	ldr	r0, [r4]
   2d658:	ldr	r1, [pc, #1192]	; 2db08 <myhtml_tokenizer_state_init@@Base+0x920>
   2d65c:	ldr	r1, [pc, r1]
   2d660:	str	r1, [r0, #412]	; 0x19c
   2d664:	ldr	r0, [r4]
   2d668:	ldr	r1, [pc, #1180]	; 2db0c <myhtml_tokenizer_state_init@@Base+0x924>
   2d66c:	ldr	r1, [pc, r1]
   2d670:	str	r1, [r0, #416]	; 0x1a0
   2d674:	ldr	r0, [r4]
   2d678:	ldr	r1, [pc, #1168]	; 2db10 <myhtml_tokenizer_state_init@@Base+0x928>
   2d67c:	ldr	r1, [pc, r1]
   2d680:	str	r1, [r0, #420]	; 0x1a4
   2d684:	ldr	r0, [r4]
   2d688:	ldr	r1, [pc, #1156]	; 2db14 <myhtml_tokenizer_state_init@@Base+0x92c>
   2d68c:	ldr	r1, [pc, r1]
   2d690:	str	r1, [r0, #424]	; 0x1a8
   2d694:	ldr	r0, [r4]
   2d698:	ldr	r1, [pc, #1144]	; 2db18 <myhtml_tokenizer_state_init@@Base+0x930>
   2d69c:	ldr	r1, [pc, r1]
   2d6a0:	str	r1, [r0, #428]	; 0x1ac
   2d6a4:	ldr	r0, [r4]
   2d6a8:	ldr	r1, [pc, #1132]	; 2db1c <myhtml_tokenizer_state_init@@Base+0x934>
   2d6ac:	ldr	r1, [pc, r1]
   2d6b0:	str	r1, [r0, #432]	; 0x1b0
   2d6b4:	ldr	r0, [r4]
   2d6b8:	ldr	r1, [pc, #1120]	; 2db20 <myhtml_tokenizer_state_init@@Base+0x938>
   2d6bc:	ldr	r1, [pc, r1]
   2d6c0:	str	r1, [r0, #436]	; 0x1b4
   2d6c4:	ldr	r0, [r4]
   2d6c8:	ldr	r1, [pc, #1108]	; 2db24 <myhtml_tokenizer_state_init@@Base+0x93c>
   2d6cc:	ldr	r1, [pc, r1]
   2d6d0:	str	r1, [r0, #444]	; 0x1bc
   2d6d4:	ldr	r0, [r4]
   2d6d8:	ldr	r1, [pc, #1096]	; 2db28 <myhtml_tokenizer_state_init@@Base+0x940>
   2d6dc:	ldr	r1, [pc, r1]
   2d6e0:	str	r1, [r0, #460]	; 0x1cc
   2d6e4:	ldr	r0, [r4]
   2d6e8:	ldr	r1, [pc, #1084]	; 2db2c <myhtml_tokenizer_state_init@@Base+0x944>
   2d6ec:	ldr	r1, [pc, r1]
   2d6f0:	str	r1, [r0, #464]	; 0x1d0
   2d6f4:	ldr	r0, [r4]
   2d6f8:	ldr	r1, [pc, #1072]	; 2db30 <myhtml_tokenizer_state_init@@Base+0x948>
   2d6fc:	ldr	r1, [pc, r1]
   2d700:	str	r1, [r0, #468]	; 0x1d4
   2d704:	ldr	r0, [r4]
   2d708:	ldr	r1, [pc, #1060]	; 2db34 <myhtml_tokenizer_state_init@@Base+0x94c>
   2d70c:	ldr	r1, [pc, r1]
   2d710:	str	r1, [r0, #476]	; 0x1dc
   2d714:	ldr	r0, [r4]
   2d718:	ldr	r1, [pc, #1048]	; 2db38 <myhtml_tokenizer_state_init@@Base+0x950>
   2d71c:	ldr	r1, [pc, r1]
   2d720:	str	r1, [r0, #472]	; 0x1d8
   2d724:	ldr	r0, [r4]
   2d728:	ldr	r1, [pc, #1036]	; 2db3c <myhtml_tokenizer_state_init@@Base+0x954>
   2d72c:	ldr	r1, [pc, r1]
   2d730:	str	r1, [r0, #480]	; 0x1e0
   2d734:	ldr	r0, [r4]
   2d738:	ldr	r1, [pc, #1024]	; 2db40 <myhtml_tokenizer_state_init@@Base+0x958>
   2d73c:	ldr	r1, [pc, r1]
   2d740:	str	r1, [r0, #452]	; 0x1c4
   2d744:	ldr	r0, [r4]
   2d748:	ldr	r1, [pc, #1012]	; 2db44 <myhtml_tokenizer_state_init@@Base+0x95c>
   2d74c:	ldr	r1, [pc, r1]
   2d750:	str	r1, [r0, #548]	; 0x224
   2d754:	ldr	r0, [r4]
   2d758:	ldr	r1, [pc, #1000]	; 2db48 <myhtml_tokenizer_state_init@@Base+0x960>
   2d75c:	ldr	r1, [pc, r1]
   2d760:	str	r1, [r0, #288]	; 0x120
   2d764:	ldr	r0, [r4]
   2d768:	ldr	r1, [pc, #988]	; 2db4c <myhtml_tokenizer_state_init@@Base+0x964>
   2d76c:	ldr	r1, [pc, r1]
   2d770:	str	r1, [r0, #320]	; 0x140
   2d774:	ldr	r0, [r4]
   2d778:	ldr	r1, [pc, #976]	; 2db50 <myhtml_tokenizer_state_init@@Base+0x968>
   2d77c:	ldr	r1, [pc, r1]
   2d780:	str	r1, [r0, #324]	; 0x144
   2d784:	ldr	r0, [r4]
   2d788:	ldr	r1, [pc, #964]	; 2db54 <myhtml_tokenizer_state_init@@Base+0x96c>
   2d78c:	ldr	r1, [pc, r1]
   2d790:	str	r1, [r0, #328]	; 0x148
   2d794:	ldr	r0, [r4]
   2d798:	ldr	r1, [pc, #952]	; 2db58 <myhtml_tokenizer_state_init@@Base+0x970>
   2d79c:	ldr	r1, [pc, r1]
   2d7a0:	str	r1, [r0, #296]	; 0x128
   2d7a4:	ldr	r0, [r4]
   2d7a8:	ldr	r1, [pc, #940]	; 2db5c <myhtml_tokenizer_state_init@@Base+0x974>
   2d7ac:	ldr	r1, [pc, r1]
   2d7b0:	str	r1, [r0, #332]	; 0x14c
   2d7b4:	ldr	r0, [r4]
   2d7b8:	ldr	r1, [pc, #928]	; 2db60 <myhtml_tokenizer_state_init@@Base+0x978>
   2d7bc:	ldr	r1, [pc, r1]
   2d7c0:	str	r1, [r0, #336]	; 0x150
   2d7c4:	ldr	r0, [r4]
   2d7c8:	ldr	r1, [pc, #916]	; 2db64 <myhtml_tokenizer_state_init@@Base+0x97c>
   2d7cc:	ldr	r1, [pc, r1]
   2d7d0:	str	r1, [r0, #340]	; 0x154
   2d7d4:	ldr	r0, [r4]
   2d7d8:	ldr	r1, [pc, #904]	; 2db68 <myhtml_tokenizer_state_init@@Base+0x980>
   2d7dc:	ldr	r1, [pc, r1]
   2d7e0:	str	r1, [r0, #304]	; 0x130
   2d7e4:	ldr	r0, [r4]
   2d7e8:	ldr	r1, [pc, #892]	; 2db6c <myhtml_tokenizer_state_init@@Base+0x984>
   2d7ec:	ldr	r1, [pc, r1]
   2d7f0:	str	r1, [r0, #484]	; 0x1e4
   2d7f4:	ldr	r0, [r4]
   2d7f8:	ldr	r1, [pc, #880]	; 2db70 <myhtml_tokenizer_state_init@@Base+0x988>
   2d7fc:	ldr	r1, [pc, r1]
   2d800:	str	r1, [r0, #488]	; 0x1e8
   2d804:	ldr	r0, [r4]
   2d808:	ldr	r1, [pc, #868]	; 2db74 <myhtml_tokenizer_state_init@@Base+0x98c>
   2d80c:	ldr	r1, [pc, r1]
   2d810:	str	r1, [r0, #492]	; 0x1ec
   2d814:	ldr	r0, [r4]
   2d818:	ldr	r1, [pc, #856]	; 2db78 <myhtml_tokenizer_state_init@@Base+0x990>
   2d81c:	ldr	r1, [pc, r1]
   2d820:	str	r1, [r0, #496]	; 0x1f0
   2d824:	ldr	r0, [r4]
   2d828:	ldr	r1, [pc, #844]	; 2db7c <myhtml_tokenizer_state_init@@Base+0x994>
   2d82c:	ldr	r1, [pc, r1]
   2d830:	str	r1, [r0, #552]	; 0x228
   2d834:	ldr	r0, [r4]
   2d838:	ldr	r1, [pc, #832]	; 2db80 <myhtml_tokenizer_state_init@@Base+0x998>
   2d83c:	ldr	r1, [pc, r1]
   2d840:	str	r1, [r0, #504]	; 0x1f8
   2d844:	ldr	r0, [r4]
   2d848:	ldr	r1, [pc, #820]	; 2db84 <myhtml_tokenizer_state_init@@Base+0x99c>
   2d84c:	ldr	r1, [pc, r1]
   2d850:	str	r1, [r0, #508]	; 0x1fc
   2d854:	ldr	r0, [r4]
   2d858:	ldr	r1, [pc, #808]	; 2db88 <myhtml_tokenizer_state_init@@Base+0x9a0>
   2d85c:	ldr	r1, [pc, r1]
   2d860:	str	r1, [r0, #512]	; 0x200
   2d864:	ldr	r0, [r4]
   2d868:	ldr	r1, [pc, #796]	; 2db8c <myhtml_tokenizer_state_init@@Base+0x9a4>
   2d86c:	ldr	r1, [pc, r1]
   2d870:	str	r1, [r0, #516]	; 0x204
   2d874:	ldr	r0, [r4]
   2d878:	ldr	r1, [pc, #784]	; 2db90 <myhtml_tokenizer_state_init@@Base+0x9a8>
   2d87c:	ldr	r1, [pc, r1]
   2d880:	str	r1, [r0, #532]	; 0x214
   2d884:	ldr	r0, [r4]
   2d888:	ldr	r1, [pc, #772]	; 2db94 <myhtml_tokenizer_state_init@@Base+0x9ac>
   2d88c:	ldr	r1, [pc, r1]
   2d890:	str	r1, [r0, #536]	; 0x218
   2d894:	ldr	r0, [r4]
   2d898:	ldr	r1, [pc, #760]	; 2db98 <myhtml_tokenizer_state_init@@Base+0x9b0>
   2d89c:	ldr	r1, [pc, r1]
   2d8a0:	str	r1, [r0, #540]	; 0x21c
   2d8a4:	ldr	r0, [r4]
   2d8a8:	ldr	r1, [pc, #748]	; 2db9c <myhtml_tokenizer_state_init@@Base+0x9b4>
   2d8ac:	ldr	r1, [pc, r1]
   2d8b0:	str	r1, [r0, #544]	; 0x220
   2d8b4:	ldr	r0, [r4]
   2d8b8:	ldr	r1, [pc, #736]	; 2dba0 <myhtml_tokenizer_state_init@@Base+0x9b8>
   2d8bc:	ldr	r1, [pc, r1]
   2d8c0:	str	r1, [r0, #300]	; 0x12c
   2d8c4:	ldr	r0, [r4]
   2d8c8:	ldr	r1, [pc, #724]	; 2dba4 <myhtml_tokenizer_state_init@@Base+0x9bc>
   2d8cc:	ldr	r1, [pc, r1]
   2d8d0:	str	r1, [r0, #344]	; 0x158
   2d8d4:	ldr	r0, [r4]
   2d8d8:	ldr	r1, [pc, #712]	; 2dba8 <myhtml_tokenizer_state_init@@Base+0x9c0>
   2d8dc:	ldr	r1, [pc, r1]
   2d8e0:	str	r1, [r0, #348]	; 0x15c
   2d8e4:	ldr	r0, [r4]
   2d8e8:	ldr	r1, [pc, #700]	; 2dbac <myhtml_tokenizer_state_init@@Base+0x9c4>
   2d8ec:	ldr	r1, [pc, r1]
   2d8f0:	str	r1, [r0, #352]	; 0x160
   2d8f4:	ldr	r0, [r4]
   2d8f8:	ldr	r1, [pc, #688]	; 2dbb0 <myhtml_tokenizer_state_init@@Base+0x9c8>
   2d8fc:	ldr	r1, [pc, r1]
   2d900:	str	r1, [r0, #356]	; 0x164
   2d904:	ldr	r0, [r4]
   2d908:	ldr	r1, [pc, #676]	; 2dbb4 <myhtml_tokenizer_state_init@@Base+0x9cc>
   2d90c:	ldr	r1, [pc, r1]
   2d910:	str	r1, [r0, #360]	; 0x168
   2d914:	ldr	r0, [r4]
   2d918:	ldr	r1, [pc, #664]	; 2dbb8 <myhtml_tokenizer_state_init@@Base+0x9d0>
   2d91c:	ldr	r1, [pc, r1]
   2d920:	str	r1, [r0, #364]	; 0x16c
   2d924:	ldr	r0, [r4]
   2d928:	ldr	r1, [pc, #652]	; 2dbbc <myhtml_tokenizer_state_init@@Base+0x9d4>
   2d92c:	ldr	r1, [pc, r1]
   2d930:	str	r1, [r0, #368]	; 0x170
   2d934:	ldr	r0, [r4]
   2d938:	ldr	r1, [pc, #640]	; 2dbc0 <myhtml_tokenizer_state_init@@Base+0x9d8>
   2d93c:	ldr	r1, [pc, r1]
   2d940:	str	r1, [r0, #372]	; 0x174
   2d944:	ldr	r0, [r4]
   2d948:	ldr	r1, [pc, #628]	; 2dbc4 <myhtml_tokenizer_state_init@@Base+0x9dc>
   2d94c:	ldr	r1, [pc, r1]
   2d950:	str	r1, [r0, #376]	; 0x178
   2d954:	ldr	r0, [r4]
   2d958:	ldr	r1, [pc, #616]	; 2dbc8 <myhtml_tokenizer_state_init@@Base+0x9e0>
   2d95c:	ldr	r1, [pc, r1]
   2d960:	str	r1, [r0, #380]	; 0x17c
   2d964:	ldr	r0, [r4]
   2d968:	ldr	r1, [pc, #604]	; 2dbcc <myhtml_tokenizer_state_init@@Base+0x9e4>
   2d96c:	ldr	r1, [pc, r1]
   2d970:	str	r1, [r0, #384]	; 0x180
   2d974:	ldr	r0, [r4]
   2d978:	ldr	r1, [pc, #592]	; 2dbd0 <myhtml_tokenizer_state_init@@Base+0x9e8>
   2d97c:	ldr	r1, [pc, r1]
   2d980:	str	r1, [r0, #388]	; 0x184
   2d984:	ldr	r0, [r4]
   2d988:	ldr	r1, [pc, #580]	; 2dbd4 <myhtml_tokenizer_state_init@@Base+0x9ec>
   2d98c:	ldr	r1, [pc, r1]
   2d990:	str	r1, [r0, #392]	; 0x188
   2d994:	ldr	r0, [r4]
   2d998:	ldr	r1, [pc, #568]	; 2dbd8 <myhtml_tokenizer_state_init@@Base+0x9f0>
   2d99c:	ldr	r1, [pc, r1]
   2d9a0:	str	r1, [r0, #396]	; 0x18c
   2d9a4:	ldr	r0, [r4]
   2d9a8:	ldr	r1, [pc, #556]	; 2dbdc <myhtml_tokenizer_state_init@@Base+0x9f4>
   2d9ac:	ldr	r1, [pc, r1]
   2d9b0:	str	r1, [r0, #400]	; 0x190
   2d9b4:	ldr	r0, [r4]
   2d9b8:	ldr	r1, [pc, #544]	; 2dbe0 <myhtml_tokenizer_state_init@@Base+0x9f8>
   2d9bc:	ldr	r1, [pc, r1]
   2d9c0:	str	r1, [r0, #404]	; 0x194
   2d9c4:	ldr	r0, [r4]
   2d9c8:	ldr	r1, [pc, #532]	; 2dbe4 <myhtml_tokenizer_state_init@@Base+0x9fc>
   2d9cc:	ldr	r1, [pc, r1]
   2d9d0:	str	r1, [r0, #408]	; 0x198
   2d9d4:	ldr	r0, [r4]
   2d9d8:	ldr	r1, [pc, #520]	; 2dbe8 <myhtml_tokenizer_state_init@@Base+0xa00>
   2d9dc:	ldr	r1, [pc, r1]
   2d9e0:	str	r1, [r0, #556]	; 0x22c
   2d9e4:	mov	r0, #0
   2d9e8:	pop	{r4, sl, fp, pc}
   2d9ec:	movw	r0, #37164	; 0x912c
   2d9f0:	pop	{r4, sl, fp, pc}
   2d9f4:	andeq	r0, pc, ip, lsl #7
   2d9f8:	andeq	r0, pc, ip, lsl r5	; <UNPREDICTABLE>
   2d9fc:	andeq	r0, pc, r8, asr #9
   2da00:	andeq	r0, pc, r4, lsr #10
   2da04:	andeq	r0, pc, ip, lsr r3	; <UNPREDICTABLE>
   2da08:	muleq	pc, ip, r3	; <UNPREDICTABLE>
   2da0c:	andeq	r0, pc, r8, ror #8
   2da10:	muleq	pc, r4, r2	; <UNPREDICTABLE>
   2da14:			; <UNDEFINED> instruction: 0x000f04b4
   2da18:	andeq	r0, pc, r0, ror #9
   2da1c:	andeq	r0, pc, ip, ror r4	; <UNPREDICTABLE>
   2da20:	andeq	r0, pc, r8, asr r4	; <UNPREDICTABLE>
   2da24:	andeq	r0, pc, ip, lsl #9
   2da28:	andeq	r0, pc, r8, ror #6
   2da2c:	andeq	r0, pc, r4, lsl #9
   2da30:	andeq	r0, pc, r8, ror #6
   2da34:	andeq	r0, pc, r4, lsl #8
   2da38:	strdeq	r0, [pc], -r8
   2da3c:	andeq	r0, pc, ip, lsl #5
   2da40:	andeq	r0, pc, r0, ror #6
   2da44:	andeq	r0, pc, r4, asr r2	; <UNPREDICTABLE>
   2da48:	andeq	r0, pc, r0, ror r4	; <UNPREDICTABLE>
   2da4c:	andeq	r0, pc, r0, asr #6
   2da50:	andeq	r0, pc, r4, asr r2	; <UNPREDICTABLE>
   2da54:	andeq	r0, pc, r8, lsr #3
   2da58:	andeq	r0, pc, r8, lsr r2	; <UNPREDICTABLE>
   2da5c:	ldrdeq	r0, [pc], -r8
   2da60:	andeq	r0, pc, r8, lsr r2	; <UNPREDICTABLE>
   2da64:	muleq	pc, r4, r1	; <UNPREDICTABLE>
   2da68:	andeq	r0, pc, r8, lsl #7
   2da6c:	andeq	r0, pc, r8, asr #7
   2da70:	andeq	r0, pc, r8, lsl r2	; <UNPREDICTABLE>
   2da74:	andeq	r0, pc, r0, lsl r1	; <UNPREDICTABLE>
   2da78:	andeq	r0, pc, r0, asr #4
   2da7c:	andeq	r0, pc, r8, ror #6
   2da80:	andeq	r0, pc, r8, asr #4
   2da84:	andeq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
   2da88:	andeq	r0, pc, r8, lsl r2	; <UNPREDICTABLE>
   2da8c:	andeq	r0, pc, ip, lsl r2	; <UNPREDICTABLE>
   2da90:	andeq	r0, pc, r8, asr #6
   2da94:	andeq	r0, pc, r8, ror #1
   2da98:	andeq	r0, pc, r8, lsl #3
   2da9c:	andeq	r0, pc, ip, lsl r1	; <UNPREDICTABLE>
   2daa0:	andeq	r0, pc, r8, ror r1	; <UNPREDICTABLE>
   2daa4:	strdeq	r0, [pc], -r8
   2daa8:	andeq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
   2daac:	strdeq	r0, [pc], -ip
   2dab0:	andeq	r0, pc, r0, ror r2	; <UNPREDICTABLE>
   2dab4:	strdeq	r0, [pc], -r8
   2dab8:	andeq	r0, pc, r4, asr #2
   2dabc:	andeq	r0, pc, r0, ror #3
   2dac0:	strdeq	r0, [pc], -ip
   2dac4:	andeq	r0, pc, ip, lsl #2
   2dac8:	andeq	r0, pc, r4, asr #4
   2dacc:	andeq	r0, pc, r0, lsr r0	; <UNPREDICTABLE>
   2dad0:	andeq	r0, pc, ip, lsr #32
   2dad4:	muleq	pc, r4, r0	; <UNPREDICTABLE>
   2dad8:			; <UNDEFINED> instruction: 0x000f01b4
   2dadc:	muleq	lr, r4, pc	; <UNPREDICTABLE>
   2dae0:	andeq	r0, pc, ip, lsl r0	; <UNPREDICTABLE>
   2dae4:	andeq	r0, pc, r0
   2dae8:	andeq	r0, pc, ip, lsr r1	; <UNPREDICTABLE>
   2daec:	andeq	pc, lr, r0, asr #31
   2daf0:	strdeq	pc, [lr], -r4
   2daf4:	andeq	r0, pc, ip
   2daf8:	andeq	r0, pc, ip, ror r1	; <UNPREDICTABLE>
   2dafc:	andeq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
   2db00:	andeq	r0, pc, r0, lsr #1
   2db04:	andeq	r0, pc, ip, lsr #1
   2db08:	andeq	r0, pc, r0, lsr #1
   2db0c:	ldrdeq	r0, [pc], -r8
   2db10:	andeq	pc, lr, r8, ror #29
   2db14:	andeq	r0, pc, ip, lsr #32
   2db18:	andeq	pc, lr, r0, lsr #31
   2db1c:	andeq	r0, pc, r8, asr r0	; <UNPREDICTABLE>
   2db20:	andeq	pc, lr, r0, lsr pc	; <UNPREDICTABLE>
   2db24:	andeq	r0, pc, r0
   2db28:	muleq	pc, r8, r0	; <UNPREDICTABLE>
   2db2c:	strdeq	pc, [lr], -r4
   2db30:	andeq	pc, lr, ip, lsr #31
   2db34:	andeq	pc, lr, r8, lsl #29
   2db38:	muleq	pc, r4, r0	; <UNPREDICTABLE>
   2db3c:	andeq	pc, lr, r0, ror #28
   2db40:	andeq	pc, lr, r0, lsr pc	; <UNPREDICTABLE>
   2db44:			; <UNDEFINED> instruction: 0x000efeb4
   2db48:	strdeq	pc, [lr], -r8
   2db4c:	andeq	pc, lr, r8, lsr lr	; <UNPREDICTABLE>
   2db50:	andeq	pc, lr, ip, ror #30
   2db54:	andeq	pc, lr, r8, lsr pc	; <UNPREDICTABLE>
   2db58:	andeq	pc, lr, r0, ror #29
   2db5c:	andeq	r0, pc, ip, lsl r0	; <UNPREDICTABLE>
   2db60:	andeq	pc, lr, r4, lsr pc	; <UNPREDICTABLE>
   2db64:	strdeq	pc, [lr], -r0
   2db68:	andeq	pc, lr, r4, ror lr	; <UNPREDICTABLE>
   2db6c:	andeq	pc, lr, r8, lsr sp	; <UNPREDICTABLE>
   2db70:	andeq	pc, lr, r4, lsr #30
   2db74:	andeq	pc, lr, r4, lsr #26
   2db78:	andeq	pc, lr, r8, lsr #26
   2db7c:	andeq	pc, lr, r4, lsr #26
   2db80:	andeq	pc, lr, r8, asr lr	; <UNPREDICTABLE>
   2db84:	andeq	pc, lr, r0, lsl #30
   2db88:	andeq	pc, lr, r4, lsr sp	; <UNPREDICTABLE>
   2db8c:	andeq	pc, lr, ip, asr #30
   2db90:	andeq	pc, lr, r0, lsl pc	; <UNPREDICTABLE>
   2db94:	andeq	pc, lr, r4, lsr lr	; <UNPREDICTABLE>
   2db98:	andeq	pc, lr, r8, ror #29
   2db9c:			; <UNDEFINED> instruction: 0x000efdbc
   2dba0:	andeq	pc, lr, r4, lsl #26
   2dba4:	andeq	pc, lr, ip, asr #27
   2dba8:	andeq	pc, lr, r8, lsl #28
   2dbac:	strdeq	pc, [lr], -r4
   2dbb0:	andeq	pc, lr, r0, asr #28
   2dbb4:	andeq	pc, lr, r0, lsl sp	; <UNPREDICTABLE>
   2dbb8:	strdeq	pc, [lr], -ip
   2dbbc:	andeq	pc, lr, ip, ror lr	; <UNPREDICTABLE>
   2dbc0:	muleq	lr, ip, sp
   2dbc4:	andeq	pc, lr, r4, ror lr	; <UNPREDICTABLE>
   2dbc8:	strdeq	pc, [lr], -ip
   2dbcc:	andeq	pc, lr, r4, ror #26
   2dbd0:	andeq	pc, lr, r4, lsl #27
   2dbd4:	andeq	pc, lr, r0, asr #25
   2dbd8:	andeq	pc, lr, ip, lsr #27
   2dbdc:	muleq	lr, ip, ip
   2dbe0:	andeq	pc, lr, ip, lsl #26
   2dbe4:	andeq	pc, lr, r0, lsl ip	; <UNPREDICTABLE>
   2dbe8:	andeq	pc, lr, r4, lsr ip	; <UNPREDICTABLE>

0002dbec <myhtml_tokenizer_state_destroy@@Base>:
   2dbec:	ldr	r0, [r0, #24]
   2dbf0:	cmp	r0, #0
   2dbf4:	bxeq	lr
   2dbf8:	b	11a98 <mycore_free@plt>

0002dbfc <myhtml_tokenizer_state_doctype@@Base>:
   2dbfc:	mov	r1, #52	; 0x34
   2dc00:	str	r1, [r0, #160]	; 0xa0
   2dc04:	mov	r0, r3
   2dc08:	bx	lr

0002dc0c <myhtml_tokenizer_state_before_doctype_name@@Base>:
   2dc0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2dc10:	add	fp, sp, #24
   2dc14:	mov	r5, r3
   2dc18:	mov	r8, r0
   2dc1c:	ldr	r0, [fp, #8]
   2dc20:	mov	r3, r1
   2dc24:	ldrb	r4, [r2, r5]
   2dc28:	sub	r7, r4, #9
   2dc2c:	cmp	r7, #23
   2dc30:	bhi	2dc90 <myhtml_tokenizer_state_before_doctype_name@@Base+0x84>
   2dc34:	movw	r1, #27
   2dc38:	mov	r6, #1
   2dc3c:	movt	r1, #128	; 0x80
   2dc40:	tst	r1, r6, lsl r7
   2dc44:	beq	2dc90 <myhtml_tokenizer_state_before_doctype_name@@Base+0x84>
   2dc48:	cmp	r5, r0
   2dc4c:	bcs	2dc90 <myhtml_tokenizer_state_before_doctype_name@@Base+0x84>
   2dc50:	add	r5, r5, #1
   2dc54:	mvn	r6, #8
   2dc58:	mov	r7, #1
   2dc5c:	uxtab	r4, r6, r4
   2dc60:	cmp	r4, #23
   2dc64:	bhi	2dc8c <myhtml_tokenizer_state_before_doctype_name@@Base+0x80>
   2dc68:	tst	r1, r7, lsl r4
   2dc6c:	beq	2dc8c <myhtml_tokenizer_state_before_doctype_name@@Base+0x80>
   2dc70:	cmp	r0, r5
   2dc74:	beq	2dd68 <myhtml_tokenizer_state_before_doctype_name@@Base+0x15c>
   2dc78:	ldrb	r4, [r2, r5]
   2dc7c:	add	r5, r5, #1
   2dc80:	uxtab	r4, r6, r4
   2dc84:	cmp	r4, #23
   2dc88:	bls	2dc68 <myhtml_tokenizer_state_before_doctype_name@@Base+0x5c>
   2dc8c:	sub	r5, r5, #1
   2dc90:	cmp	r5, r0
   2dc94:	bcs	2dd64 <myhtml_tokenizer_state_before_doctype_name@@Base+0x158>
   2dc98:	ldrb	r0, [r2, r5]
   2dc9c:	cmp	r0, #62	; 0x3e
   2dca0:	bne	2dcf0 <myhtml_tokenizer_state_before_doctype_name@@Base+0xe4>
   2dca4:	mov	r0, #1
   2dca8:	add	r5, r5, #1
   2dcac:	mov	r2, r3
   2dcb0:	str	r0, [r8, #176]	; 0xb0
   2dcb4:	ldr	r0, [r8, #192]	; 0xc0
   2dcb8:	ldr	r1, [r3, #32]
   2dcbc:	add	r0, r0, r5
   2dcc0:	sub	r0, r0, r1
   2dcc4:	mov	r1, r5
   2dcc8:	str	r0, [r3, #36]	; 0x24
   2dccc:	mov	r0, r8
   2dcd0:	bl	110e4 <myhtml_queue_add@plt>
   2dcd4:	cmp	r0, #0
   2dcd8:	beq	2dd14 <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   2dcdc:	mov	r0, #69	; 0x45
   2dce0:	mov	r5, #0
   2dce4:	str	r0, [r8, #160]	; 0xa0
   2dce8:	mov	r0, r5
   2dcec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dcf0:	ldr	r1, [r3, #40]	; 0x28
   2dcf4:	ldr	r0, [r8, #56]	; 0x38
   2dcf8:	cmp	r1, #0
   2dcfc:	beq	2dd34 <myhtml_tokenizer_state_before_doctype_name@@Base+0x128>
   2dd00:	ldr	r1, [r3, #44]	; 0x2c
   2dd04:	str	r0, [r1]
   2dd08:	str	r0, [r3, #44]	; 0x2c
   2dd0c:	str	r0, [r8, #56]	; 0x38
   2dd10:	b	2dd40 <myhtml_tokenizer_state_before_doctype_name@@Base+0x134>
   2dd14:	ldr	r0, [r8, #8]
   2dd18:	ldr	r1, [r0, #16]
   2dd1c:	bl	11720 <myhtml_token_attr_create@plt>
   2dd20:	cmp	r0, #0
   2dd24:	str	r0, [r8, #56]	; 0x38
   2dd28:	beq	2dcdc <myhtml_tokenizer_state_before_doctype_name@@Base+0xd0>
   2dd2c:	mov	r0, #0
   2dd30:	b	2dd60 <myhtml_tokenizer_state_before_doctype_name@@Base+0x154>
   2dd34:	str	r0, [r3, #40]	; 0x28
   2dd38:	str	r0, [r3, #44]	; 0x2c
   2dd3c:	mov	r1, #0
   2dd40:	mov	r2, #0
   2dd44:	str	r2, [r0]
   2dd48:	str	r1, [r0, #4]
   2dd4c:	ldr	r1, [r8, #192]	; 0xc0
   2dd50:	ldr	r0, [r8, #56]	; 0x38
   2dd54:	add	r1, r1, r5
   2dd58:	str	r1, [r0, #48]	; 0x30
   2dd5c:	mov	r0, #53	; 0x35
   2dd60:	str	r0, [r8, #160]	; 0xa0
   2dd64:	mov	r0, r5
   2dd68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002dd6c <myhtml_tokenizer_state_doctype_name@@Base>:
   2dd6c:	push	{r4, r5, fp, lr}
   2dd70:	add	fp, sp, #8
   2dd74:	mov	r5, r0
   2dd78:	ldr	r0, [fp, #8]
   2dd7c:	mov	r4, r3
   2dd80:	cmp	r3, r0
   2dd84:	bcs	2dee4 <myhtml_tokenizer_state_doctype_name@@Base+0x178>
   2dd88:	mov	ip, r1
   2dd8c:	ldrb	r1, [r2, r4]
   2dd90:	sub	r1, r1, #9
   2dd94:	cmp	r1, #53	; 0x35
   2dd98:	bls	2ddb8 <myhtml_tokenizer_state_doctype_name@@Base+0x4c>
   2dd9c:	add	r4, r4, #1
   2dda0:	cmp	r0, r4
   2dda4:	beq	2dee0 <myhtml_tokenizer_state_doctype_name@@Base+0x174>
   2dda8:	ldrb	r1, [r2, r4]
   2ddac:	sub	r1, r1, #9
   2ddb0:	cmp	r1, #53	; 0x35
   2ddb4:	bhi	2dd9c <myhtml_tokenizer_state_doctype_name@@Base+0x30>
   2ddb8:	add	r3, pc, #4
   2ddbc:	ldr	r1, [r3, r1, lsl #2]
   2ddc0:	add	pc, r3, r1
   2ddc4:	ldrdeq	r0, [r0], -r8
   2ddc8:	ldrdeq	r0, [r0], -r8
   2ddcc:			; <UNDEFINED> instruction: 0xffffffd8
   2ddd0:	ldrdeq	r0, [r0], -r8
   2ddd4:	ldrdeq	r0, [r0], -r8
   2ddd8:			; <UNDEFINED> instruction: 0xffffffd8
   2dddc:			; <UNDEFINED> instruction: 0xffffffd8
   2dde0:			; <UNDEFINED> instruction: 0xffffffd8
   2dde4:			; <UNDEFINED> instruction: 0xffffffd8
   2dde8:			; <UNDEFINED> instruction: 0xffffffd8
   2ddec:			; <UNDEFINED> instruction: 0xffffffd8
   2ddf0:			; <UNDEFINED> instruction: 0xffffffd8
   2ddf4:			; <UNDEFINED> instruction: 0xffffffd8
   2ddf8:			; <UNDEFINED> instruction: 0xffffffd8
   2ddfc:			; <UNDEFINED> instruction: 0xffffffd8
   2de00:			; <UNDEFINED> instruction: 0xffffffd8
   2de04:			; <UNDEFINED> instruction: 0xffffffd8
   2de08:			; <UNDEFINED> instruction: 0xffffffd8
   2de0c:			; <UNDEFINED> instruction: 0xffffffd8
   2de10:			; <UNDEFINED> instruction: 0xffffffd8
   2de14:			; <UNDEFINED> instruction: 0xffffffd8
   2de18:			; <UNDEFINED> instruction: 0xffffffd8
   2de1c:			; <UNDEFINED> instruction: 0xffffffd8
   2de20:	ldrdeq	r0, [r0], -r8
   2de24:			; <UNDEFINED> instruction: 0xffffffd8
   2de28:			; <UNDEFINED> instruction: 0xffffffd8
   2de2c:			; <UNDEFINED> instruction: 0xffffffd8
   2de30:			; <UNDEFINED> instruction: 0xffffffd8
   2de34:			; <UNDEFINED> instruction: 0xffffffd8
   2de38:			; <UNDEFINED> instruction: 0xffffffd8
   2de3c:			; <UNDEFINED> instruction: 0xffffffd8
   2de40:			; <UNDEFINED> instruction: 0xffffffd8
   2de44:			; <UNDEFINED> instruction: 0xffffffd8
   2de48:			; <UNDEFINED> instruction: 0xffffffd8
   2de4c:			; <UNDEFINED> instruction: 0xffffffd8
   2de50:			; <UNDEFINED> instruction: 0xffffffd8
   2de54:			; <UNDEFINED> instruction: 0xffffffd8
   2de58:			; <UNDEFINED> instruction: 0xffffffd8
   2de5c:			; <UNDEFINED> instruction: 0xffffffd8
   2de60:			; <UNDEFINED> instruction: 0xffffffd8
   2de64:			; <UNDEFINED> instruction: 0xffffffd8
   2de68:			; <UNDEFINED> instruction: 0xffffffd8
   2de6c:			; <UNDEFINED> instruction: 0xffffffd8
   2de70:			; <UNDEFINED> instruction: 0xffffffd8
   2de74:			; <UNDEFINED> instruction: 0xffffffd8
   2de78:			; <UNDEFINED> instruction: 0xffffffd8
   2de7c:			; <UNDEFINED> instruction: 0xffffffd8
   2de80:			; <UNDEFINED> instruction: 0xffffffd8
   2de84:			; <UNDEFINED> instruction: 0xffffffd8
   2de88:			; <UNDEFINED> instruction: 0xffffffd8
   2de8c:			; <UNDEFINED> instruction: 0xffffffd8
   2de90:			; <UNDEFINED> instruction: 0xffffffd8
   2de94:			; <UNDEFINED> instruction: 0xffffffd8
   2de98:	andeq	r0, r0, r8, lsr #2
   2de9c:	ldr	r0, [r5, #56]	; 0x38
   2dea0:	ldr	r1, [r5, #192]	; 0xc0
   2dea4:	ldr	r2, [r0, #48]	; 0x30
   2dea8:	sub	r1, r1, r2
   2deac:	add	r1, r1, r4
   2deb0:	str	r1, [r0, #52]	; 0x34
   2deb4:	ldr	r0, [r5, #8]
   2deb8:	ldr	r1, [r0, #16]
   2debc:	bl	11720 <myhtml_token_attr_create@plt>
   2dec0:	cmp	r0, #0
   2dec4:	str	r0, [r5, #56]	; 0x38
   2dec8:	beq	2df34 <myhtml_tokenizer_state_doctype_name@@Base+0x1c8>
   2decc:	mov	r0, #54	; 0x36
   2ded0:	add	r4, r4, #1
   2ded4:	str	r0, [r5, #160]	; 0xa0
   2ded8:	mov	r0, r4
   2dedc:	pop	{r4, r5, fp, pc}
   2dee0:	mov	r4, r0
   2dee4:	mov	r0, r4
   2dee8:	pop	{r4, r5, fp, pc}
   2deec:	ldr	r0, [r5, #56]	; 0x38
   2def0:	ldr	r1, [r5, #192]	; 0xc0
   2def4:	ldr	r2, [r0, #48]	; 0x30
   2def8:	sub	r2, r1, r2
   2defc:	add	r2, r2, r4
   2df00:	str	r2, [r0, #52]	; 0x34
   2df04:	mov	r2, ip
   2df08:	ldr	r0, [ip, #32]
   2df0c:	sub	r0, r1, r0
   2df10:	add	r0, r0, r4
   2df14:	add	r4, r4, #1
   2df18:	add	r0, r0, #1
   2df1c:	mov	r1, r4
   2df20:	str	r0, [ip, #36]	; 0x24
   2df24:	mov	r0, r5
   2df28:	bl	110e4 <myhtml_queue_add@plt>
   2df2c:	cmp	r0, #0
   2df30:	beq	2df48 <myhtml_tokenizer_state_doctype_name@@Base+0x1dc>
   2df34:	mov	r0, #69	; 0x45
   2df38:	mov	r4, #0
   2df3c:	str	r0, [r5, #160]	; 0xa0
   2df40:	mov	r0, r4
   2df44:	pop	{r4, r5, fp, pc}
   2df48:	ldr	r0, [r5, #8]
   2df4c:	ldr	r1, [r0, #16]
   2df50:	bl	11720 <myhtml_token_attr_create@plt>
   2df54:	cmp	r0, #0
   2df58:	str	r0, [r5, #56]	; 0x38
   2df5c:	beq	2df34 <myhtml_tokenizer_state_doctype_name@@Base+0x1c8>
   2df60:	mov	r0, #0
   2df64:	str	r0, [r5, #160]	; 0xa0
   2df68:	mov	r0, r4
   2df6c:	pop	{r4, r5, fp, pc}

0002df70 <myhtml_tokenizer_state_after_doctype_name@@Base>:
   2df70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2df74:	add	fp, sp, #24
   2df78:	mov	r5, r3
   2df7c:	mov	r8, r0
   2df80:	ldr	r0, [fp, #8]
   2df84:	mov	r3, r1
   2df88:	ldrb	r4, [r2, r5]
   2df8c:	sub	r7, r4, #9
   2df90:	cmp	r7, #23
   2df94:	bhi	2dff4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x84>
   2df98:	movw	r1, #27
   2df9c:	mov	r6, #1
   2dfa0:	movt	r1, #128	; 0x80
   2dfa4:	tst	r1, r6, lsl r7
   2dfa8:	beq	2dff4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x84>
   2dfac:	cmp	r5, r0
   2dfb0:	bcs	2dff4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x84>
   2dfb4:	add	r5, r5, #1
   2dfb8:	mvn	r6, #8
   2dfbc:	mov	r7, #1
   2dfc0:	uxtab	r4, r6, r4
   2dfc4:	cmp	r4, #23
   2dfc8:	bhi	2dff0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x80>
   2dfcc:	tst	r1, r7, lsl r4
   2dfd0:	beq	2dff0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x80>
   2dfd4:	cmp	r0, r5
   2dfd8:	beq	2e06c <myhtml_tokenizer_state_after_doctype_name@@Base+0xfc>
   2dfdc:	ldrb	r4, [r2, r5]
   2dfe0:	add	r5, r5, #1
   2dfe4:	uxtab	r4, r6, r4
   2dfe8:	cmp	r4, #23
   2dfec:	bls	2dfcc <myhtml_tokenizer_state_after_doctype_name@@Base+0x5c>
   2dff0:	sub	r5, r5, #1
   2dff4:	cmp	r5, r0
   2dff8:	bcs	2e068 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf8>
   2dffc:	ldrb	r0, [r2, r5]
   2e000:	cmp	r0, #62	; 0x3e
   2e004:	bne	2e04c <myhtml_tokenizer_state_after_doctype_name@@Base+0xdc>
   2e008:	ldr	r0, [r8, #192]	; 0xc0
   2e00c:	ldr	r1, [r3, #32]
   2e010:	add	r5, r5, #1
   2e014:	mov	r2, r3
   2e018:	add	r0, r0, r5
   2e01c:	sub	r0, r0, r1
   2e020:	mov	r1, r5
   2e024:	str	r0, [r3, #36]	; 0x24
   2e028:	mov	r0, r8
   2e02c:	bl	110e4 <myhtml_queue_add@plt>
   2e030:	cmp	r0, #0
   2e034:	beq	2e060 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   2e038:	mov	r0, #69	; 0x45
   2e03c:	mov	r5, #0
   2e040:	str	r0, [r8, #160]	; 0xa0
   2e044:	mov	r0, r5
   2e048:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e04c:	ldr	r0, [r8, #192]	; 0xc0
   2e050:	add	r0, r0, r5
   2e054:	str	r0, [r3, #12]
   2e058:	mov	r0, #68	; 0x44
   2e05c:	b	2e064 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf4>
   2e060:	mov	r0, #0
   2e064:	str	r0, [r8, #160]	; 0xa0
   2e068:	mov	r0, r5
   2e06c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002e070 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   2e070:	push	{r4, r5, r6, r7, fp, lr}
   2e074:	add	fp, sp, #16
   2e078:	mov	r5, r1
   2e07c:	mov	r4, r0
   2e080:	ldr	r1, [r1, #12]
   2e084:	ldr	r0, [r0, #192]	; 0xc0
   2e088:	ldr	r6, [fp, #8]
   2e08c:	add	r0, r0, r6
   2e090:	add	r2, r1, #6
   2e094:	cmp	r2, r0
   2e098:	bhi	2e0f8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x88>
   2e09c:	mov	r0, r4
   2e0a0:	mov	r2, #6
   2e0a4:	mov	r7, r3
   2e0a8:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   2e0ac:	ldr	r1, [pc, #344]	; 2e20c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   2e0b0:	mov	r2, #6
   2e0b4:	mov	r6, r0
   2e0b8:	add	r1, pc, r1
   2e0bc:	bl	11288 <mycore_strncasecmp@plt>
   2e0c0:	cmp	r0, #0
   2e0c4:	beq	2e100 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x90>
   2e0c8:	ldr	r1, [pc, #320]	; 2e210 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1a0>
   2e0cc:	mov	r0, r6
   2e0d0:	mov	r2, #6
   2e0d4:	add	r1, pc, r1
   2e0d8:	bl	11288 <mycore_strncasecmp@plt>
   2e0dc:	cmp	r0, #0
   2e0e0:	beq	2e124 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb4>
   2e0e4:	mov	r0, #66	; 0x42
   2e0e8:	mov	r6, r7
   2e0ec:	str	r0, [r4, #160]	; 0xa0
   2e0f0:	mov	r0, #1
   2e0f4:	str	r0, [r4, #176]	; 0xb0
   2e0f8:	mov	r0, r6
   2e0fc:	pop	{r4, r5, r6, r7, fp, pc}
   2e100:	ldr	r1, [r5, #40]	; 0x28
   2e104:	ldr	r0, [r4, #56]	; 0x38
   2e108:	cmp	r1, #0
   2e10c:	beq	2e148 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd8>
   2e110:	ldr	r1, [r5, #44]	; 0x2c
   2e114:	str	r0, [r1]
   2e118:	str	r0, [r5, #44]	; 0x2c
   2e11c:	str	r0, [r4, #56]	; 0x38
   2e120:	b	2e154 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xe4>
   2e124:	ldr	r1, [r5, #40]	; 0x28
   2e128:	ldr	r0, [r4, #56]	; 0x38
   2e12c:	cmp	r1, #0
   2e130:	beq	2e194 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x124>
   2e134:	ldr	r1, [r5, #44]	; 0x2c
   2e138:	str	r0, [r1]
   2e13c:	str	r0, [r5, #44]	; 0x2c
   2e140:	str	r0, [r4, #56]	; 0x38
   2e144:	b	2e1a0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x130>
   2e148:	str	r0, [r5, #40]	; 0x28
   2e14c:	str	r0, [r5, #44]	; 0x2c
   2e150:	mov	r1, #0
   2e154:	mov	r6, #0
   2e158:	mov	r2, #6
   2e15c:	str	r6, [r0]
   2e160:	str	r1, [r0, #4]
   2e164:	ldr	r0, [r5, #12]
   2e168:	ldr	r1, [r4, #56]	; 0x38
   2e16c:	str	r0, [r1, #56]	; 0x38
   2e170:	str	r2, [r1, #60]	; 0x3c
   2e174:	ldr	r0, [r4, #8]
   2e178:	ldr	r1, [r0, #16]
   2e17c:	bl	11720 <myhtml_token_attr_create@plt>
   2e180:	cmp	r0, #0
   2e184:	str	r0, [r4, #56]	; 0x38
   2e188:	beq	2e1fc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   2e18c:	mov	r0, #56	; 0x38
   2e190:	b	2e1dc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x16c>
   2e194:	str	r0, [r5, #40]	; 0x28
   2e198:	str	r0, [r5, #44]	; 0x2c
   2e19c:	mov	r1, #0
   2e1a0:	mov	r6, #0
   2e1a4:	mov	r2, #6
   2e1a8:	str	r6, [r0]
   2e1ac:	str	r1, [r0, #4]
   2e1b0:	ldr	r0, [r5, #12]
   2e1b4:	ldr	r1, [r4, #56]	; 0x38
   2e1b8:	str	r0, [r1, #56]	; 0x38
   2e1bc:	str	r2, [r1, #60]	; 0x3c
   2e1c0:	ldr	r0, [r4, #8]
   2e1c4:	ldr	r1, [r0, #16]
   2e1c8:	bl	11720 <myhtml_token_attr_create@plt>
   2e1cc:	cmp	r0, #0
   2e1d0:	str	r0, [r4, #56]	; 0x38
   2e1d4:	beq	2e1fc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   2e1d8:	mov	r0, #59	; 0x3b
   2e1dc:	str	r0, [r4, #160]	; 0xa0
   2e1e0:	ldr	r1, [r4, #76]	; 0x4c
   2e1e4:	ldr	r0, [r5, #12]
   2e1e8:	ldr	r1, [r1, #12]
   2e1ec:	sub	r0, r0, r1
   2e1f0:	add	r6, r0, #6
   2e1f4:	mov	r0, r6
   2e1f8:	pop	{r4, r5, r6, r7, fp, pc}
   2e1fc:	mov	r0, #69	; 0x45
   2e200:	str	r0, [r4, #160]	; 0xa0
   2e204:	mov	r0, r6
   2e208:	pop	{r4, r5, r6, r7, fp, pc}
   2e20c:	andeq	r5, sp, r6, asr #5
   2e210:			; <UNDEFINED> instruction: 0x000d52bc

0002e214 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   2e214:	push	{r4, r5, r6, r7, fp, lr}
   2e218:	add	fp, sp, #16
   2e21c:	mov	ip, r1
   2e220:	ldrb	r1, [r2, r3]
   2e224:	ldr	r5, [fp, #8]
   2e228:	mov	r7, r0
   2e22c:	sub	r6, r1, #9
   2e230:	cmp	r6, #23
   2e234:	bhi	2e294 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x80>
   2e238:	movw	r0, #27
   2e23c:	mov	r4, #1
   2e240:	movt	r0, #128	; 0x80
   2e244:	tst	r0, r4, lsl r6
   2e248:	beq	2e294 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x80>
   2e24c:	cmp	r3, r5
   2e250:	bcs	2e294 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x80>
   2e254:	add	r3, r3, #1
   2e258:	mvn	r4, #8
   2e25c:	mov	r6, #1
   2e260:	uxtab	r1, r4, r1
   2e264:	cmp	r1, #23
   2e268:	bhi	2e290 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x7c>
   2e26c:	tst	r0, r6, lsl r1
   2e270:	beq	2e290 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x7c>
   2e274:	cmp	r5, r3
   2e278:	beq	2e370 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x15c>
   2e27c:	ldrb	r1, [r2, r3]
   2e280:	add	r3, r3, #1
   2e284:	uxtab	r1, r4, r1
   2e288:	cmp	r1, #23
   2e28c:	bls	2e26c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x58>
   2e290:	sub	r3, r3, #1
   2e294:	cmp	r3, r5
   2e298:	bcs	2e2dc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xc8>
   2e29c:	ldrb	r0, [r2, r3]
   2e2a0:	cmp	r0, #39	; 0x27
   2e2a4:	beq	2e2e4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xd0>
   2e2a8:	cmp	r0, #34	; 0x22
   2e2ac:	bne	2e310 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xfc>
   2e2b0:	ldr	r1, [r7, #192]	; 0xc0
   2e2b4:	ldr	r0, [r7, #56]	; 0x38
   2e2b8:	add	r5, r3, #1
   2e2bc:	mov	r2, #0
   2e2c0:	add	r1, r5, r1
   2e2c4:	str	r1, [r0, #56]	; 0x38
   2e2c8:	str	r2, [r0, #60]	; 0x3c
   2e2cc:	mov	r0, #57	; 0x39
   2e2d0:	str	r0, [r7, #160]	; 0xa0
   2e2d4:	mov	r0, r5
   2e2d8:	pop	{r4, r5, r6, r7, fp, pc}
   2e2dc:	mov	r0, r3
   2e2e0:	pop	{r4, r5, r6, r7, fp, pc}
   2e2e4:	ldr	r1, [r7, #192]	; 0xc0
   2e2e8:	ldr	r0, [r7, #56]	; 0x38
   2e2ec:	add	r5, r3, #1
   2e2f0:	mov	r2, #0
   2e2f4:	add	r1, r5, r1
   2e2f8:	str	r1, [r0, #56]	; 0x38
   2e2fc:	str	r2, [r0, #60]	; 0x3c
   2e300:	mov	r0, #58	; 0x3a
   2e304:	str	r0, [r7, #160]	; 0xa0
   2e308:	mov	r0, r5
   2e30c:	pop	{r4, r5, r6, r7, fp, pc}
   2e310:	mov	r1, #1
   2e314:	cmp	r0, #62	; 0x3e
   2e318:	str	r1, [r7, #176]	; 0xb0
   2e31c:	bne	2e364 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x150>
   2e320:	ldr	r0, [r7, #192]	; 0xc0
   2e324:	ldr	r1, [ip, #32]
   2e328:	add	r5, r3, #1
   2e32c:	mov	r2, ip
   2e330:	add	r0, r0, r5
   2e334:	sub	r0, r0, r1
   2e338:	mov	r1, r5
   2e33c:	str	r0, [ip, #36]	; 0x24
   2e340:	mov	r0, r7
   2e344:	bl	110e4 <myhtml_queue_add@plt>
   2e348:	cmp	r0, #0
   2e34c:	beq	2e378 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x164>
   2e350:	mov	r0, #69	; 0x45
   2e354:	mov	r5, #0
   2e358:	str	r0, [r7, #160]	; 0xa0
   2e35c:	mov	r0, r5
   2e360:	pop	{r4, r5, r6, r7, fp, pc}
   2e364:	mov	r0, #66	; 0x42
   2e368:	add	r5, r3, #1
   2e36c:	str	r0, [r7, #160]	; 0xa0
   2e370:	mov	r0, r5
   2e374:	pop	{r4, r5, r6, r7, fp, pc}
   2e378:	mov	r0, #0
   2e37c:	str	r0, [r7, #160]	; 0xa0
   2e380:	mov	r0, r5
   2e384:	pop	{r4, r5, r6, r7, fp, pc}

0002e388 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   2e388:	push	{r4, r5, r6, r7, fp, lr}
   2e38c:	add	fp, sp, #16
   2e390:	ldr	r7, [fp, #8]
   2e394:	mov	r5, r3
   2e398:	cmp	r3, r7
   2e39c:	bcs	2e3d4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x4c>
   2e3a0:	mov	r4, r0
   2e3a4:	ldr	r0, [fp, #12]
   2e3a8:	mov	r6, r1
   2e3ac:	ldrb	r1, [r2, r5]
   2e3b0:	cmp	r1, r0
   2e3b4:	beq	2e3dc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x54>
   2e3b8:	cmp	r1, #62	; 0x3e
   2e3bc:	beq	2e414 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x8c>
   2e3c0:	add	r5, r5, #1
   2e3c4:	cmp	r7, r5
   2e3c8:	bne	2e3ac <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x24>
   2e3cc:	mov	r0, r7
   2e3d0:	pop	{r4, r5, r6, r7, fp, pc}
   2e3d4:	mov	r0, r5
   2e3d8:	pop	{r4, r5, r6, r7, fp, pc}
   2e3dc:	ldr	r0, [r4, #56]	; 0x38
   2e3e0:	ldr	r1, [r4, #192]	; 0xc0
   2e3e4:	ldr	r2, [r0, #56]	; 0x38
   2e3e8:	sub	r1, r1, r2
   2e3ec:	add	r1, r1, r5
   2e3f0:	str	r1, [r0, #60]	; 0x3c
   2e3f4:	ldr	r1, [r6, #40]	; 0x28
   2e3f8:	cmp	r1, #0
   2e3fc:	beq	2e460 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xd8>
   2e400:	ldr	r1, [r6, #44]	; 0x2c
   2e404:	str	r0, [r1]
   2e408:	str	r0, [r6, #44]	; 0x2c
   2e40c:	str	r0, [r4, #56]	; 0x38
   2e410:	b	2e46c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xe4>
   2e414:	mov	r0, #1
   2e418:	str	r0, [r4, #176]	; 0xb0
   2e41c:	ldr	r0, [r4, #56]	; 0x38
   2e420:	ldr	r1, [r4, #192]	; 0xc0
   2e424:	ldr	r2, [r0, #56]	; 0x38
   2e428:	add	r3, r1, r5
   2e42c:	cmp	r3, r2
   2e430:	bls	2e4d8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x150>
   2e434:	sub	r1, r1, r2
   2e438:	add	r1, r1, r5
   2e43c:	str	r1, [r0, #60]	; 0x3c
   2e440:	ldr	r1, [r6, #40]	; 0x28
   2e444:	cmp	r1, #0
   2e448:	beq	2e4a4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x11c>
   2e44c:	ldr	r1, [r6, #44]	; 0x2c
   2e450:	str	r0, [r1]
   2e454:	str	r0, [r6, #44]	; 0x2c
   2e458:	str	r0, [r4, #56]	; 0x38
   2e45c:	b	2e4b0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x128>
   2e460:	str	r0, [r6, #40]	; 0x28
   2e464:	str	r0, [r6, #44]	; 0x2c
   2e468:	mov	r1, #0
   2e46c:	mov	r7, #0
   2e470:	str	r7, [r0]
   2e474:	str	r1, [r0, #4]
   2e478:	ldr	r0, [r4, #8]
   2e47c:	ldr	r1, [r0, #16]
   2e480:	bl	11720 <myhtml_token_attr_create@plt>
   2e484:	cmp	r0, #0
   2e488:	str	r0, [r4, #56]	; 0x38
   2e48c:	beq	2e51c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x194>
   2e490:	mov	r0, #59	; 0x3b
   2e494:	add	r7, r5, #1
   2e498:	str	r0, [r4, #160]	; 0xa0
   2e49c:	mov	r0, r7
   2e4a0:	pop	{r4, r5, r6, r7, fp, pc}
   2e4a4:	str	r0, [r6, #40]	; 0x28
   2e4a8:	str	r0, [r6, #44]	; 0x2c
   2e4ac:	mov	r1, #0
   2e4b0:	mov	r7, #0
   2e4b4:	str	r7, [r0]
   2e4b8:	str	r1, [r0, #4]
   2e4bc:	ldr	r0, [r4, #8]
   2e4c0:	ldr	r1, [r0, #16]
   2e4c4:	bl	11720 <myhtml_token_attr_create@plt>
   2e4c8:	cmp	r0, #0
   2e4cc:	str	r0, [r4, #56]	; 0x38
   2e4d0:	beq	2e51c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x194>
   2e4d4:	ldr	r1, [r4, #192]	; 0xc0
   2e4d8:	ldr	r0, [r6, #32]
   2e4dc:	add	r7, r5, #1
   2e4e0:	mov	r2, r6
   2e4e4:	sub	r0, r1, r0
   2e4e8:	mov	r1, r7
   2e4ec:	add	r0, r0, r5
   2e4f0:	add	r0, r0, #1
   2e4f4:	str	r0, [r6, #36]	; 0x24
   2e4f8:	mov	r0, r4
   2e4fc:	bl	110e4 <myhtml_queue_add@plt>
   2e500:	cmp	r0, #0
   2e504:	beq	2e52c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1a4>
   2e508:	mov	r0, #69	; 0x45
   2e50c:	mov	r7, #0
   2e510:	str	r0, [r4, #160]	; 0xa0
   2e514:	mov	r0, r7
   2e518:	pop	{r4, r5, r6, r7, fp, pc}
   2e51c:	mov	r0, #69	; 0x45
   2e520:	str	r0, [r4, #160]	; 0xa0
   2e524:	mov	r0, r7
   2e528:	pop	{r4, r5, r6, r7, fp, pc}
   2e52c:	mov	r0, #0
   2e530:	str	r0, [r4, #160]	; 0xa0
   2e534:	mov	r0, r7
   2e538:	pop	{r4, r5, r6, r7, fp, pc}

0002e53c <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   2e53c:	push	{fp, lr}
   2e540:	mov	fp, sp
   2e544:	sub	sp, sp, #8
   2e548:	mov	ip, #34	; 0x22
   2e54c:	str	ip, [sp, #4]
   2e550:	ldr	ip, [fp, #8]
   2e554:	str	ip, [sp]
   2e558:	bl	11420 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2e55c:	mov	sp, fp
   2e560:	pop	{fp, pc}

0002e564 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   2e564:	push	{fp, lr}
   2e568:	mov	fp, sp
   2e56c:	sub	sp, sp, #8
   2e570:	mov	ip, #39	; 0x27
   2e574:	str	ip, [sp, #4]
   2e578:	ldr	ip, [fp, #8]
   2e57c:	str	ip, [sp]
   2e580:	bl	11420 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2e584:	mov	sp, fp
   2e588:	pop	{fp, pc}

0002e58c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   2e58c:	push	{r4, r5, r6, r7, fp, lr}
   2e590:	add	fp, sp, #16
   2e594:	mov	r5, r3
   2e598:	ldrb	r3, [r2, r3]
   2e59c:	mov	r7, r0
   2e5a0:	ldr	r0, [fp, #8]
   2e5a4:	mov	ip, r1
   2e5a8:	sub	r6, r3, #9
   2e5ac:	cmp	r6, #23
   2e5b0:	bhi	2e610 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x84>
   2e5b4:	movw	r1, #27
   2e5b8:	mov	r4, #1
   2e5bc:	movt	r1, #128	; 0x80
   2e5c0:	tst	r1, r4, lsl r6
   2e5c4:	beq	2e610 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x84>
   2e5c8:	cmp	r5, r0
   2e5cc:	bcs	2e610 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x84>
   2e5d0:	add	r5, r5, #1
   2e5d4:	mvn	r4, #8
   2e5d8:	mov	r6, #1
   2e5dc:	uxtab	r3, r4, r3
   2e5e0:	cmp	r3, #23
   2e5e4:	bhi	2e60c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x80>
   2e5e8:	tst	r1, r6, lsl r3
   2e5ec:	beq	2e60c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x80>
   2e5f0:	cmp	r0, r5
   2e5f4:	beq	2e6e4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x158>
   2e5f8:	ldrb	r3, [r2, r5]
   2e5fc:	add	r5, r5, #1
   2e600:	uxtab	r3, r4, r3
   2e604:	cmp	r3, #23
   2e608:	bls	2e5e8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x5c>
   2e60c:	sub	r5, r5, #1
   2e610:	cmp	r5, r0
   2e614:	bcs	2e6e0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x154>
   2e618:	ldrb	r0, [r2, r5]
   2e61c:	cmp	r0, #62	; 0x3e
   2e620:	beq	2e660 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xd4>
   2e624:	cmp	r0, #39	; 0x27
   2e628:	beq	2e6a4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x118>
   2e62c:	cmp	r0, #34	; 0x22
   2e630:	bne	2e6d0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x144>
   2e634:	ldr	r1, [r7, #192]	; 0xc0
   2e638:	ldr	r0, [r7, #56]	; 0x38
   2e63c:	add	r5, r5, #1
   2e640:	mov	r2, #0
   2e644:	add	r1, r5, r1
   2e648:	str	r1, [r0, #56]	; 0x38
   2e64c:	str	r2, [r0, #60]	; 0x3c
   2e650:	mov	r0, #63	; 0x3f
   2e654:	str	r0, [r7, #160]	; 0xa0
   2e658:	mov	r0, r5
   2e65c:	pop	{r4, r5, r6, r7, fp, pc}
   2e660:	ldr	r0, [r7, #192]	; 0xc0
   2e664:	ldr	r1, [ip, #32]
   2e668:	add	r5, r5, #1
   2e66c:	mov	r2, ip
   2e670:	add	r0, r0, r5
   2e674:	sub	r0, r0, r1
   2e678:	mov	r1, r5
   2e67c:	str	r0, [ip, #36]	; 0x24
   2e680:	mov	r0, r7
   2e684:	bl	110e4 <myhtml_queue_add@plt>
   2e688:	cmp	r0, #0
   2e68c:	beq	2e6e8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x15c>
   2e690:	mov	r0, #69	; 0x45
   2e694:	mov	r5, #0
   2e698:	str	r0, [r7, #160]	; 0xa0
   2e69c:	mov	r0, r5
   2e6a0:	pop	{r4, r5, r6, r7, fp, pc}
   2e6a4:	ldr	r1, [r7, #192]	; 0xc0
   2e6a8:	ldr	r0, [r7, #56]	; 0x38
   2e6ac:	add	r5, r5, #1
   2e6b0:	mov	r2, #0
   2e6b4:	add	r1, r5, r1
   2e6b8:	str	r1, [r0, #56]	; 0x38
   2e6bc:	str	r2, [r0, #60]	; 0x3c
   2e6c0:	mov	r0, #64	; 0x40
   2e6c4:	str	r0, [r7, #160]	; 0xa0
   2e6c8:	mov	r0, r5
   2e6cc:	pop	{r4, r5, r6, r7, fp, pc}
   2e6d0:	mov	r0, #66	; 0x42
   2e6d4:	str	r0, [r7, #160]	; 0xa0
   2e6d8:	mov	r0, #1
   2e6dc:	str	r0, [r7, #176]	; 0xb0
   2e6e0:	mov	r0, r5
   2e6e4:	pop	{r4, r5, r6, r7, fp, pc}
   2e6e8:	mov	r0, #0
   2e6ec:	str	r0, [r7, #160]	; 0xa0
   2e6f0:	mov	r0, r5
   2e6f4:	pop	{r4, r5, r6, r7, fp, pc}

0002e6f8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   2e6f8:	push	{r4, r5, r6, r7, fp, lr}
   2e6fc:	add	fp, sp, #16
   2e700:	ldr	r7, [fp, #8]
   2e704:	mov	r5, r3
   2e708:	cmp	r3, r7
   2e70c:	bcs	2e744 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x4c>
   2e710:	mov	r4, r0
   2e714:	ldr	r0, [fp, #12]
   2e718:	mov	r6, r1
   2e71c:	ldrb	r1, [r2, r5]
   2e720:	cmp	r1, r0
   2e724:	beq	2e74c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x54>
   2e728:	cmp	r1, #62	; 0x3e
   2e72c:	beq	2e784 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x8c>
   2e730:	add	r5, r5, #1
   2e734:	cmp	r7, r5
   2e738:	bne	2e71c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x24>
   2e73c:	mov	r0, r7
   2e740:	pop	{r4, r5, r6, r7, fp, pc}
   2e744:	mov	r0, r5
   2e748:	pop	{r4, r5, r6, r7, fp, pc}
   2e74c:	ldr	r0, [r4, #56]	; 0x38
   2e750:	ldr	r1, [r4, #192]	; 0xc0
   2e754:	ldr	r2, [r0, #56]	; 0x38
   2e758:	sub	r1, r1, r2
   2e75c:	add	r1, r1, r5
   2e760:	str	r1, [r0, #60]	; 0x3c
   2e764:	ldr	r1, [r6, #40]	; 0x28
   2e768:	cmp	r1, #0
   2e76c:	beq	2e7d0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xd8>
   2e770:	ldr	r1, [r6, #44]	; 0x2c
   2e774:	str	r0, [r1]
   2e778:	str	r0, [r6, #44]	; 0x2c
   2e77c:	str	r0, [r4, #56]	; 0x38
   2e780:	b	2e7dc <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xe4>
   2e784:	mov	r0, #1
   2e788:	str	r0, [r4, #176]	; 0xb0
   2e78c:	ldr	r0, [r4, #56]	; 0x38
   2e790:	ldr	r1, [r4, #192]	; 0xc0
   2e794:	ldr	r2, [r0, #56]	; 0x38
   2e798:	add	r3, r1, r5
   2e79c:	cmp	r3, r2
   2e7a0:	bls	2e848 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x150>
   2e7a4:	sub	r1, r1, r2
   2e7a8:	add	r1, r1, r5
   2e7ac:	str	r1, [r0, #60]	; 0x3c
   2e7b0:	ldr	r1, [r6, #40]	; 0x28
   2e7b4:	cmp	r1, #0
   2e7b8:	beq	2e814 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x11c>
   2e7bc:	ldr	r1, [r6, #44]	; 0x2c
   2e7c0:	str	r0, [r1]
   2e7c4:	str	r0, [r6, #44]	; 0x2c
   2e7c8:	str	r0, [r4, #56]	; 0x38
   2e7cc:	b	2e820 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x128>
   2e7d0:	str	r0, [r6, #40]	; 0x28
   2e7d4:	str	r0, [r6, #44]	; 0x2c
   2e7d8:	mov	r1, #0
   2e7dc:	mov	r7, #0
   2e7e0:	str	r7, [r0]
   2e7e4:	str	r1, [r0, #4]
   2e7e8:	ldr	r0, [r4, #8]
   2e7ec:	ldr	r1, [r0, #16]
   2e7f0:	bl	11720 <myhtml_token_attr_create@plt>
   2e7f4:	cmp	r0, #0
   2e7f8:	str	r0, [r4, #56]	; 0x38
   2e7fc:	beq	2e88c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x194>
   2e800:	mov	r0, #65	; 0x41
   2e804:	add	r7, r5, #1
   2e808:	str	r0, [r4, #160]	; 0xa0
   2e80c:	mov	r0, r7
   2e810:	pop	{r4, r5, r6, r7, fp, pc}
   2e814:	str	r0, [r6, #40]	; 0x28
   2e818:	str	r0, [r6, #44]	; 0x2c
   2e81c:	mov	r1, #0
   2e820:	mov	r7, #0
   2e824:	str	r7, [r0]
   2e828:	str	r1, [r0, #4]
   2e82c:	ldr	r0, [r4, #8]
   2e830:	ldr	r1, [r0, #16]
   2e834:	bl	11720 <myhtml_token_attr_create@plt>
   2e838:	cmp	r0, #0
   2e83c:	str	r0, [r4, #56]	; 0x38
   2e840:	beq	2e88c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x194>
   2e844:	ldr	r1, [r4, #192]	; 0xc0
   2e848:	ldr	r0, [r6, #32]
   2e84c:	add	r7, r5, #1
   2e850:	mov	r2, r6
   2e854:	sub	r0, r1, r0
   2e858:	mov	r1, r7
   2e85c:	add	r0, r0, r5
   2e860:	add	r0, r0, #1
   2e864:	str	r0, [r6, #36]	; 0x24
   2e868:	mov	r0, r4
   2e86c:	bl	110e4 <myhtml_queue_add@plt>
   2e870:	cmp	r0, #0
   2e874:	beq	2e89c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1a4>
   2e878:	mov	r0, #69	; 0x45
   2e87c:	mov	r7, #0
   2e880:	str	r0, [r4, #160]	; 0xa0
   2e884:	mov	r0, r7
   2e888:	pop	{r4, r5, r6, r7, fp, pc}
   2e88c:	mov	r0, #69	; 0x45
   2e890:	str	r0, [r4, #160]	; 0xa0
   2e894:	mov	r0, r7
   2e898:	pop	{r4, r5, r6, r7, fp, pc}
   2e89c:	mov	r0, #0
   2e8a0:	str	r0, [r4, #160]	; 0xa0
   2e8a4:	mov	r0, r7
   2e8a8:	pop	{r4, r5, r6, r7, fp, pc}

0002e8ac <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   2e8ac:	push	{fp, lr}
   2e8b0:	mov	fp, sp
   2e8b4:	sub	sp, sp, #8
   2e8b8:	mov	ip, #34	; 0x22
   2e8bc:	str	ip, [sp, #4]
   2e8c0:	ldr	ip, [fp, #8]
   2e8c4:	str	ip, [sp]
   2e8c8:	bl	11858 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2e8cc:	mov	sp, fp
   2e8d0:	pop	{fp, pc}

0002e8d4 <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2e8d4:	push	{fp, lr}
   2e8d8:	mov	fp, sp
   2e8dc:	sub	sp, sp, #8
   2e8e0:	mov	ip, #39	; 0x27
   2e8e4:	str	ip, [sp, #4]
   2e8e8:	ldr	ip, [fp, #8]
   2e8ec:	str	ip, [sp]
   2e8f0:	bl	11858 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2e8f4:	mov	sp, fp
   2e8f8:	pop	{fp, pc}

0002e8fc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   2e8fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e900:	add	fp, sp, #24
   2e904:	mov	r5, r3
   2e908:	mov	r8, r0
   2e90c:	ldr	r0, [fp, #8]
   2e910:	mov	r3, r1
   2e914:	ldrb	r4, [r2, r5]
   2e918:	sub	r7, r4, #9
   2e91c:	cmp	r7, #23
   2e920:	bhi	2e980 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2e924:	movw	r1, #27
   2e928:	mov	r6, #1
   2e92c:	movt	r1, #128	; 0x80
   2e930:	tst	r1, r6, lsl r7
   2e934:	beq	2e980 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2e938:	cmp	r5, r0
   2e93c:	bcs	2e980 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2e940:	add	r5, r5, #1
   2e944:	mvn	r6, #8
   2e948:	mov	r7, #1
   2e94c:	uxtab	r4, r6, r4
   2e950:	cmp	r4, #23
   2e954:	bhi	2e97c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x80>
   2e958:	tst	r1, r7, lsl r4
   2e95c:	beq	2e97c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x80>
   2e960:	cmp	r0, r5
   2e964:	beq	2e9ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xf0>
   2e968:	ldrb	r4, [r2, r5]
   2e96c:	add	r5, r5, #1
   2e970:	uxtab	r4, r6, r4
   2e974:	cmp	r4, #23
   2e978:	bls	2e958 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x5c>
   2e97c:	sub	r5, r5, #1
   2e980:	cmp	r5, r0
   2e984:	bcs	2e9e8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xec>
   2e988:	ldrb	r0, [r2, r5]
   2e98c:	cmp	r0, #62	; 0x3e
   2e990:	bne	2e9d8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xdc>
   2e994:	ldr	r0, [r8, #192]	; 0xc0
   2e998:	ldr	r1, [r3, #32]
   2e99c:	add	r5, r5, #1
   2e9a0:	mov	r2, r3
   2e9a4:	add	r0, r0, r5
   2e9a8:	sub	r0, r0, r1
   2e9ac:	mov	r1, r5
   2e9b0:	str	r0, [r3, #36]	; 0x24
   2e9b4:	mov	r0, r8
   2e9b8:	bl	110e4 <myhtml_queue_add@plt>
   2e9bc:	cmp	r0, #0
   2e9c0:	beq	2e9e0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   2e9c4:	mov	r0, #69	; 0x45
   2e9c8:	mov	r5, #0
   2e9cc:	str	r0, [r8, #160]	; 0xa0
   2e9d0:	mov	r0, r5
   2e9d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e9d8:	mov	r0, #66	; 0x42
   2e9dc:	b	2e9e4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe8>
   2e9e0:	mov	r0, #0
   2e9e4:	str	r0, [r8, #160]	; 0xa0
   2e9e8:	mov	r0, r5
   2e9ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002e9f0 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2e9f0:	push	{r4, r5, fp, lr}
   2e9f4:	add	fp, sp, #8
   2e9f8:	mov	r5, r0
   2e9fc:	ldr	r0, [fp, #8]
   2ea00:	mov	r4, r3
   2ea04:	mov	r3, r1
   2ea08:	cmp	r4, r0
   2ea0c:	bcs	2ea54 <myhtml_tokenizer_state_bogus_doctype@@Base+0x64>
   2ea10:	ldrb	r1, [r2, r4]
   2ea14:	add	r4, r4, #1
   2ea18:	cmp	r1, #62	; 0x3e
   2ea1c:	bne	2ea08 <myhtml_tokenizer_state_bogus_doctype@@Base+0x18>
   2ea20:	ldr	r0, [r3, #32]
   2ea24:	ldr	r1, [r5, #192]	; 0xc0
   2ea28:	mov	r2, r3
   2ea2c:	sub	r0, r1, r0
   2ea30:	mov	r1, r4
   2ea34:	add	r0, r0, r4
   2ea38:	str	r0, [r3, #36]	; 0x24
   2ea3c:	mov	r0, r5
   2ea40:	bl	110e4 <myhtml_queue_add@plt>
   2ea44:	cmp	r0, #0
   2ea48:	movwne	r0, #69	; 0x45
   2ea4c:	movne	r4, #0
   2ea50:	str	r0, [r5, #160]	; 0xa0
   2ea54:	mov	r0, r4
   2ea58:	pop	{r4, r5, fp, pc}

0002ea5c <myhtml_tokenizer_end_state_data@@Base>:
   2ea5c:	push	{r4, r5, fp, lr}
   2ea60:	add	fp, sp, #8
   2ea64:	sub	sp, sp, #8
   2ea68:	mov	r5, r3
   2ea6c:	ldr	r3, [r0, #192]	; 0xc0
   2ea70:	ldr	r4, [fp, #8]
   2ea74:	add	r3, r3, r4
   2ea78:	ldr	r4, [r1, #32]
   2ea7c:	sub	r4, r3, r4
   2ea80:	str	r4, [r1, #36]	; 0x24
   2ea84:	mov	r4, #512	; 0x200
   2ea88:	str	r4, [sp]
   2ea8c:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ea90:	mov	r0, r5
   2ea94:	sub	sp, fp, #8
   2ea98:	pop	{r4, r5, fp, pc}

0002ea9c <myhtml_tokenizer_end_state_tag_open@@Base>:
   2ea9c:	push	{r4, r5, r6, r7, fp, lr}
   2eaa0:	add	fp, sp, #16
   2eaa4:	sub	sp, sp, #8
   2eaa8:	mov	r6, r1
   2eaac:	mov	r5, r0
   2eab0:	ldr	r0, [r0, #192]	; 0xc0
   2eab4:	ldr	r1, [fp, #8]
   2eab8:	mov	r7, r3
   2eabc:	ldr	r4, [r6, #32]
   2eac0:	add	r3, r0, r1
   2eac4:	ldr	r1, [r6, #24]
   2eac8:	sub	r4, r3, r4
   2eacc:	str	r4, [r6, #36]	; 0x24
   2ead0:	cmp	r1, r3
   2ead4:	bcs	2eb1c <myhtml_tokenizer_end_state_tag_open@@Base+0x80>
   2ead8:	cmp	r1, #0
   2eadc:	beq	2eb28 <myhtml_tokenizer_end_state_tag_open@@Base+0x8c>
   2eae0:	add	r0, r0, r7
   2eae4:	mov	r3, r7
   2eae8:	sub	r0, r0, r1
   2eaec:	mov	r1, r6
   2eaf0:	str	r0, [r6, #28]
   2eaf4:	mov	r0, r5
   2eaf8:	bl	11954 <myhtml_check_tag_parser@plt>
   2eafc:	mov	r0, r5
   2eb00:	mov	r1, r7
   2eb04:	mov	r2, r6
   2eb08:	bl	110e4 <myhtml_queue_add@plt>
   2eb0c:	cmp	r0, #0
   2eb10:	movne	r0, #69	; 0x45
   2eb14:	movne	r7, #0
   2eb18:	strne	r0, [r5, #160]	; 0xa0
   2eb1c:	mov	r0, r7
   2eb20:	sub	sp, fp, #16
   2eb24:	pop	{r4, r5, r6, r7, fp, pc}
   2eb28:	ldr	r0, [r6, #48]	; 0x30
   2eb2c:	ldr	r1, [r6, #48]	; 0x30
   2eb30:	and	r0, r0, #8
   2eb34:	eor	r0, r1, r0
   2eb38:	mov	r1, r6
   2eb3c:	str	r0, [r6, #48]	; 0x30
   2eb40:	mov	r0, #512	; 0x200
   2eb44:	str	r0, [sp]
   2eb48:	mov	r0, r5
   2eb4c:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2eb50:	mov	r0, r7
   2eb54:	sub	sp, fp, #16
   2eb58:	pop	{r4, r5, r6, r7, fp, pc}

0002eb5c <myhtml_tokenizer_end_state_tag_name@@Base>:
   2eb5c:	push	{r4, r5, fp, lr}
   2eb60:	add	fp, sp, #8
   2eb64:	sub	sp, sp, #8
   2eb68:	mov	r5, r3
   2eb6c:	ldr	r3, [r0, #192]	; 0xc0
   2eb70:	ldr	r4, [fp, #8]
   2eb74:	add	r3, r3, r4
   2eb78:	ldr	r4, [r1, #32]
   2eb7c:	sub	r4, r3, r4
   2eb80:	str	r4, [r1, #36]	; 0x24
   2eb84:	mov	r4, #512	; 0x200
   2eb88:	str	r4, [sp]
   2eb8c:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2eb90:	mov	r0, r5
   2eb94:	sub	sp, fp, #8
   2eb98:	pop	{r4, r5, fp, pc}

0002eb9c <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2eb9c:	push	{r4, r5, r6, r7, fp, lr}
   2eba0:	add	fp, sp, #16
   2eba4:	sub	sp, sp, #8
   2eba8:	mov	r7, r3
   2ebac:	ldr	r4, [r0, #192]	; 0xc0
   2ebb0:	ldr	r3, [fp, #8]
   2ebb4:	ldr	r5, [r1, #24]
   2ebb8:	ldr	r6, [r1, #32]
   2ebbc:	add	r3, r4, r3
   2ebc0:	sub	r6, r3, r6
   2ebc4:	cmp	r5, r3
   2ebc8:	str	r6, [r1, #36]	; 0x24
   2ebcc:	bcs	2ebfc <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   2ebd0:	add	r6, r4, r7
   2ebd4:	sub	r6, r6, r5
   2ebd8:	str	r6, [r1, #28]
   2ebdc:	ldr	r6, [r1, #48]	; 0x30
   2ebe0:	ldr	r5, [r1, #48]	; 0x30
   2ebe4:	and	r6, r6, #8
   2ebe8:	eor	r6, r5, r6
   2ebec:	str	r6, [r1, #48]	; 0x30
   2ebf0:	mov	r6, #512	; 0x200
   2ebf4:	str	r6, [sp]
   2ebf8:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ebfc:	mov	r0, r7
   2ec00:	sub	sp, fp, #16
   2ec04:	pop	{r4, r5, r6, r7, fp, pc}

0002ec08 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2ec08:	push	{r4, r5, fp, lr}
   2ec0c:	add	fp, sp, #8
   2ec10:	sub	sp, sp, #8
   2ec14:	mov	r5, r3
   2ec18:	ldr	r3, [r0, #192]	; 0xc0
   2ec1c:	ldr	r4, [fp, #8]
   2ec20:	add	r3, r3, r4
   2ec24:	ldr	r4, [r1, #32]
   2ec28:	sub	r4, r3, r4
   2ec2c:	str	r4, [r1, #36]	; 0x24
   2ec30:	mov	r4, #512	; 0x200
   2ec34:	str	r4, [sp]
   2ec38:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ec3c:	mov	r0, r5
   2ec40:	sub	sp, fp, #8
   2ec44:	pop	{r4, r5, fp, pc}

0002ec48 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2ec48:	push	{r4, r5, r6, r7, fp, lr}
   2ec4c:	add	fp, sp, #16
   2ec50:	sub	sp, sp, #8
   2ec54:	mov	r5, r0
   2ec58:	ldr	r0, [r0, #192]	; 0xc0
   2ec5c:	ldr	r7, [fp, #8]
   2ec60:	mov	r4, r3
   2ec64:	ldr	r3, [r1, #24]
   2ec68:	mov	r6, r1
   2ec6c:	ldr	r1, [r1, #32]
   2ec70:	add	r0, r0, r7
   2ec74:	cmp	r3, #2
   2ec78:	sub	r0, r0, r1
   2ec7c:	str	r0, [r6, #36]	; 0x24
   2ec80:	bcc	2ed50 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   2ec84:	mov	r0, r5
   2ec88:	mov	r1, r6
   2ec8c:	str	r7, [sp]
   2ec90:	bl	1109c <myhtml_tokenizer_state_bogus_comment@plt>
   2ec94:	ldr	r1, [r5, #76]	; 0x4c
   2ec98:	str	r0, [r1, #4]
   2ec9c:	ldr	r2, [r5, #64]	; 0x40
   2eca0:	cmp	r2, r6
   2eca4:	beq	2ecf4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xac>
   2eca8:	ldr	r0, [r5, #192]	; 0xc0
   2ecac:	ldr	r1, [r2, #24]
   2ecb0:	add	r0, r0, r7
   2ecb4:	subs	r0, r0, r1
   2ecb8:	str	r0, [r2, #28]
   2ecbc:	beq	2ed50 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   2ecc0:	ldr	r1, [r2, #48]	; 0x30
   2ecc4:	ldr	r3, [r2, #48]	; 0x30
   2ecc8:	and	r1, r1, #8
   2eccc:	eor	r1, r3, r1
   2ecd0:	str	r1, [r2, #48]	; 0x30
   2ecd4:	mov	r1, #1
   2ecd8:	str	r1, [r2]
   2ecdc:	str	r0, [r2, #28]
   2ece0:	mov	r1, r4
   2ece4:	ldr	r0, [r2, #48]	; 0x30
   2ece8:	orr	r0, r0, #512	; 0x200
   2ecec:	str	r0, [r2, #48]	; 0x30
   2ecf0:	b	2ed38 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xf0>
   2ecf4:	ldr	r0, [r6, #24]
   2ecf8:	ldr	r1, [r6, #48]	; 0x30
   2ecfc:	ldr	r2, [r6, #48]	; 0x30
   2ed00:	and	r1, r1, #8
   2ed04:	eor	r1, r2, r1
   2ed08:	mov	r2, r6
   2ed0c:	str	r1, [r6, #48]	; 0x30
   2ed10:	mov	r1, #2
   2ed14:	str	r1, [r6]
   2ed18:	ldr	r1, [r6, #48]	; 0x30
   2ed1c:	orr	r1, r1, #1024	; 0x400
   2ed20:	str	r1, [r6, #48]	; 0x30
   2ed24:	ldr	r1, [r5, #192]	; 0xc0
   2ed28:	add	r1, r1, r7
   2ed2c:	sub	r0, r1, r0
   2ed30:	mov	r1, r4
   2ed34:	str	r0, [r6, #28]
   2ed38:	mov	r0, r5
   2ed3c:	bl	110e4 <myhtml_queue_add@plt>
   2ed40:	cmp	r0, #0
   2ed44:	movne	r0, #69	; 0x45
   2ed48:	movne	r4, #0
   2ed4c:	strne	r0, [r5, #160]	; 0xa0
   2ed50:	mov	r0, r4
   2ed54:	sub	sp, fp, #16
   2ed58:	pop	{r4, r5, r6, r7, fp, pc}

0002ed5c <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2ed5c:	push	{r4, r5, fp, lr}
   2ed60:	add	fp, sp, #8
   2ed64:	mov	r2, r1
   2ed68:	mov	r5, r0
   2ed6c:	ldr	r0, [r0, #192]	; 0xc0
   2ed70:	ldr	r1, [fp, #8]
   2ed74:	mov	r4, r3
   2ed78:	add	r0, r0, r1
   2ed7c:	ldr	r1, [r2, #32]
   2ed80:	sub	r0, r0, r1
   2ed84:	mov	r1, r3
   2ed88:	str	r0, [r2, #36]	; 0x24
   2ed8c:	mov	r0, r5
   2ed90:	bl	110e4 <myhtml_queue_add@plt>
   2ed94:	cmp	r0, #0
   2ed98:	movne	r0, #69	; 0x45
   2ed9c:	movne	r4, #0
   2eda0:	strne	r0, [r5, #160]	; 0xa0
   2eda4:	mov	r0, r4
   2eda8:	pop	{r4, r5, fp, pc}

0002edac <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2edac:	push	{r4, r5, fp, lr}
   2edb0:	add	fp, sp, #8
   2edb4:	mov	r2, r1
   2edb8:	mov	r5, r0
   2edbc:	ldr	r0, [r0, #192]	; 0xc0
   2edc0:	ldr	r1, [fp, #8]
   2edc4:	mov	r4, r3
   2edc8:	ldr	r3, [r2, #32]
   2edcc:	add	r1, r0, r1
   2edd0:	add	r0, r0, r4
   2edd4:	sub	r1, r1, r3
   2edd8:	str	r1, [r2, #36]	; 0x24
   2eddc:	ldr	r1, [r5, #56]	; 0x38
   2ede0:	ldr	r3, [r1, #48]	; 0x30
   2ede4:	sub	r0, r0, r3
   2ede8:	str	r0, [r1, #52]	; 0x34
   2edec:	mov	r0, r5
   2edf0:	mov	r1, r4
   2edf4:	bl	110e4 <myhtml_queue_add@plt>
   2edf8:	cmp	r0, #0
   2edfc:	movne	r0, #69	; 0x45
   2ee00:	movne	r4, #0
   2ee04:	strne	r0, [r5, #160]	; 0xa0
   2ee08:	mov	r0, r4
   2ee0c:	pop	{r4, r5, fp, pc}

0002ee10 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2ee10:	push	{r4, r5, fp, lr}
   2ee14:	add	fp, sp, #8
   2ee18:	mov	r2, r1
   2ee1c:	mov	r5, r0
   2ee20:	ldr	r0, [r0, #192]	; 0xc0
   2ee24:	ldr	r1, [fp, #8]
   2ee28:	mov	r4, r3
   2ee2c:	add	r0, r0, r1
   2ee30:	ldr	r1, [r2, #32]
   2ee34:	sub	r0, r0, r1
   2ee38:	mov	r1, r3
   2ee3c:	str	r0, [r2, #36]	; 0x24
   2ee40:	mov	r0, r5
   2ee44:	bl	110e4 <myhtml_queue_add@plt>
   2ee48:	cmp	r0, #0
   2ee4c:	movne	r0, #69	; 0x45
   2ee50:	movne	r4, #0
   2ee54:	strne	r0, [r5, #160]	; 0xa0
   2ee58:	mov	r0, r4
   2ee5c:	pop	{r4, r5, fp, pc}

0002ee60 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2ee60:	push	{r4, r5, fp, lr}
   2ee64:	add	fp, sp, #8
   2ee68:	mov	r2, r1
   2ee6c:	mov	r5, r0
   2ee70:	ldr	r0, [r0, #192]	; 0xc0
   2ee74:	ldr	r1, [fp, #8]
   2ee78:	mov	r4, r3
   2ee7c:	add	r0, r0, r1
   2ee80:	ldr	r1, [r2, #32]
   2ee84:	sub	r0, r0, r1
   2ee88:	mov	r1, r3
   2ee8c:	str	r0, [r2, #36]	; 0x24
   2ee90:	mov	r0, r5
   2ee94:	bl	110e4 <myhtml_queue_add@plt>
   2ee98:	cmp	r0, #0
   2ee9c:	bne	2eec0 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2eea0:	ldr	r0, [r5, #8]
   2eea4:	ldr	r1, [r0, #16]
   2eea8:	bl	11720 <myhtml_token_attr_create@plt>
   2eeac:	cmp	r0, #0
   2eeb0:	str	r0, [r5, #56]	; 0x38
   2eeb4:	beq	2eec0 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2eeb8:	mov	r0, r4
   2eebc:	pop	{r4, r5, fp, pc}
   2eec0:	mov	r0, #69	; 0x45
   2eec4:	mov	r4, #0
   2eec8:	str	r0, [r5, #160]	; 0xa0
   2eecc:	mov	r0, r4
   2eed0:	pop	{r4, r5, fp, pc}

0002eed4 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2eed4:	ldr	r0, [r0, #192]	; 0xc0
   2eed8:	ldr	r2, [sp]
   2eedc:	add	r0, r0, r2
   2eee0:	ldr	r2, [r1, #32]
   2eee4:	sub	r0, r0, r2
   2eee8:	str	r0, [r1, #36]	; 0x24
   2eeec:	mov	r0, r3
   2eef0:	bx	lr

0002eef4 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2eef4:	ldr	r0, [r0, #192]	; 0xc0
   2eef8:	ldr	r2, [sp]
   2eefc:	add	r0, r0, r2
   2ef00:	ldr	r2, [r1, #32]
   2ef04:	sub	r0, r0, r2
   2ef08:	str	r0, [r1, #36]	; 0x24
   2ef0c:	mov	r0, r3
   2ef10:	bx	lr

0002ef14 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2ef14:	push	{r4, r5, fp, lr}
   2ef18:	add	fp, sp, #8
   2ef1c:	mov	r2, r1
   2ef20:	mov	r5, r0
   2ef24:	ldr	r0, [r0, #192]	; 0xc0
   2ef28:	ldr	r1, [fp, #8]
   2ef2c:	mov	r4, r3
   2ef30:	ldr	r3, [r2, #32]
   2ef34:	add	r1, r0, r1
   2ef38:	add	r0, r0, r4
   2ef3c:	sub	r1, r1, r3
   2ef40:	str	r1, [r2, #36]	; 0x24
   2ef44:	ldr	r1, [r5, #56]	; 0x38
   2ef48:	ldr	r3, [r1, #56]	; 0x38
   2ef4c:	sub	r0, r0, r3
   2ef50:	str	r0, [r1, #60]	; 0x3c
   2ef54:	mov	r0, r5
   2ef58:	mov	r1, r4
   2ef5c:	bl	110e4 <myhtml_queue_add@plt>
   2ef60:	cmp	r0, #0
   2ef64:	bne	2ef88 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2ef68:	ldr	r0, [r5, #8]
   2ef6c:	ldr	r1, [r0, #16]
   2ef70:	bl	11720 <myhtml_token_attr_create@plt>
   2ef74:	cmp	r0, #0
   2ef78:	str	r0, [r5, #56]	; 0x38
   2ef7c:	beq	2ef88 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2ef80:	mov	r0, r4
   2ef84:	pop	{r4, r5, fp, pc}
   2ef88:	mov	r0, #69	; 0x45
   2ef8c:	mov	r4, #0
   2ef90:	str	r0, [r5, #160]	; 0xa0
   2ef94:	mov	r0, r4
   2ef98:	pop	{r4, r5, fp, pc}

0002ef9c <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2ef9c:	push	{r4, r5, fp, lr}
   2efa0:	add	fp, sp, #8
   2efa4:	mov	r2, r1
   2efa8:	mov	r5, r0
   2efac:	ldr	r0, [r0, #192]	; 0xc0
   2efb0:	ldr	r1, [fp, #8]
   2efb4:	mov	r4, r3
   2efb8:	ldr	ip, [r2, #24]
   2efbc:	ldr	r3, [r2, #32]
   2efc0:	add	r1, r0, r1
   2efc4:	add	r0, r0, r4
   2efc8:	sub	r1, r1, r3
   2efcc:	sub	r0, r0, ip
   2efd0:	str	r1, [r2, #36]	; 0x24
   2efd4:	str	r0, [r2, #28]
   2efd8:	mov	r0, r5
   2efdc:	mov	r1, r4
   2efe0:	bl	110e4 <myhtml_queue_add@plt>
   2efe4:	cmp	r0, #0
   2efe8:	movne	r0, #69	; 0x45
   2efec:	movne	r4, #0
   2eff0:	strne	r0, [r5, #160]	; 0xa0
   2eff4:	mov	r0, r4
   2eff8:	pop	{r4, r5, fp, pc}

0002effc <myhtml_tokenizer_end_state_comment_start@@Base>:
   2effc:	push	{r4, r5, fp, lr}
   2f000:	add	fp, sp, #8
   2f004:	mov	r2, r1
   2f008:	mov	r5, r0
   2f00c:	ldr	r0, [r0, #192]	; 0xc0
   2f010:	ldr	r1, [fp, #8]
   2f014:	mov	r4, r3
   2f018:	ldr	ip, [r2, #24]
   2f01c:	ldr	r3, [r2, #32]
   2f020:	add	r1, r0, r1
   2f024:	add	r0, r0, r4
   2f028:	sub	r1, r1, r3
   2f02c:	sub	r0, r0, ip
   2f030:	str	r1, [r2, #36]	; 0x24
   2f034:	str	r0, [r2, #28]
   2f038:	mov	r0, r5
   2f03c:	mov	r1, r4
   2f040:	bl	110e4 <myhtml_queue_add@plt>
   2f044:	cmp	r0, #0
   2f048:	movne	r0, #69	; 0x45
   2f04c:	movne	r4, #0
   2f050:	strne	r0, [r5, #160]	; 0xa0
   2f054:	mov	r0, r4
   2f058:	pop	{r4, r5, fp, pc}

0002f05c <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2f05c:	push	{r4, r5, fp, lr}
   2f060:	add	fp, sp, #8
   2f064:	mov	r2, r1
   2f068:	mov	r5, r0
   2f06c:	ldr	r0, [r0, #192]	; 0xc0
   2f070:	ldr	r1, [fp, #8]
   2f074:	mov	r4, r3
   2f078:	ldr	ip, [r2, #24]
   2f07c:	ldr	r3, [r2, #32]
   2f080:	add	r1, r0, r1
   2f084:	add	r0, r0, r4
   2f088:	sub	r1, r1, r3
   2f08c:	sub	r0, r0, ip
   2f090:	str	r1, [r2, #36]	; 0x24
   2f094:	str	r0, [r2, #28]
   2f098:	mov	r0, r5
   2f09c:	mov	r1, r4
   2f0a0:	bl	110e4 <myhtml_queue_add@plt>
   2f0a4:	cmp	r0, #0
   2f0a8:	movne	r0, #69	; 0x45
   2f0ac:	movne	r4, #0
   2f0b0:	strne	r0, [r5, #160]	; 0xa0
   2f0b4:	mov	r0, r4
   2f0b8:	pop	{r4, r5, fp, pc}

0002f0bc <myhtml_tokenizer_end_state_comment@@Base>:
   2f0bc:	push	{r4, r5, fp, lr}
   2f0c0:	add	fp, sp, #8
   2f0c4:	mov	r2, r1
   2f0c8:	mov	r5, r0
   2f0cc:	ldr	r0, [r0, #192]	; 0xc0
   2f0d0:	ldr	r1, [fp, #8]
   2f0d4:	mov	r4, r3
   2f0d8:	ldr	ip, [r2, #24]
   2f0dc:	ldr	r3, [r2, #32]
   2f0e0:	add	r1, r0, r1
   2f0e4:	add	r0, r0, r4
   2f0e8:	sub	r1, r1, r3
   2f0ec:	sub	r0, r0, ip
   2f0f0:	str	r1, [r2, #36]	; 0x24
   2f0f4:	str	r0, [r2, #28]
   2f0f8:	mov	r0, r5
   2f0fc:	mov	r1, r4
   2f100:	bl	110e4 <myhtml_queue_add@plt>
   2f104:	cmp	r0, #0
   2f108:	movne	r0, #69	; 0x45
   2f10c:	movne	r4, #0
   2f110:	strne	r0, [r5, #160]	; 0xa0
   2f114:	mov	r0, r4
   2f118:	pop	{r4, r5, fp, pc}

0002f11c <myhtml_tokenizer_end_state_comment_end@@Base>:
   2f11c:	push	{r4, r5, r6, sl, fp, lr}
   2f120:	add	fp, sp, #16
   2f124:	mov	r2, r1
   2f128:	mov	r6, r0
   2f12c:	ldr	r0, [r0, #192]	; 0xc0
   2f130:	ldr	r1, [fp, #8]
   2f134:	mov	r4, r3
   2f138:	ldr	r3, [r2, #24]
   2f13c:	ldr	r5, [r2, #32]
   2f140:	add	r1, r0, r1
   2f144:	add	r0, r0, r4
   2f148:	sub	r0, r0, r3
   2f14c:	sub	r1, r1, r5
   2f150:	cmp	r0, #3
   2f154:	str	r1, [r2, #36]	; 0x24
   2f158:	str	r0, [r2, #28]
   2f15c:	bcc	2f184 <myhtml_tokenizer_end_state_comment_end@@Base+0x68>
   2f160:	sub	r0, r0, #2
   2f164:	mov	r1, r4
   2f168:	str	r0, [r2, #28]
   2f16c:	mov	r0, r6
   2f170:	bl	110e4 <myhtml_queue_add@plt>
   2f174:	cmp	r0, #0
   2f178:	movne	r0, #69	; 0x45
   2f17c:	movne	r4, #0
   2f180:	strne	r0, [r6, #160]	; 0xa0
   2f184:	mov	r0, r4
   2f188:	pop	{r4, r5, r6, sl, fp, pc}

0002f18c <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2f18c:	push	{r4, r5, fp, lr}
   2f190:	add	fp, sp, #8
   2f194:	mov	r2, r1
   2f198:	mov	r5, r0
   2f19c:	ldr	r0, [r0, #192]	; 0xc0
   2f1a0:	ldr	r1, [fp, #8]
   2f1a4:	mov	r4, r3
   2f1a8:	ldr	ip, [r2, #24]
   2f1ac:	ldr	r3, [r2, #32]
   2f1b0:	add	r1, r0, r1
   2f1b4:	add	r0, r0, r4
   2f1b8:	sub	r1, r1, r3
   2f1bc:	sub	r0, r0, ip
   2f1c0:	str	r1, [r2, #36]	; 0x24
   2f1c4:	str	r0, [r2, #28]
   2f1c8:	mov	r0, r5
   2f1cc:	mov	r1, r4
   2f1d0:	bl	110e4 <myhtml_queue_add@plt>
   2f1d4:	cmp	r0, #0
   2f1d8:	movne	r0, #69	; 0x45
   2f1dc:	movne	r4, #0
   2f1e0:	strne	r0, [r5, #160]	; 0xa0
   2f1e4:	mov	r0, r4
   2f1e8:	pop	{r4, r5, fp, pc}

0002f1ec <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2f1ec:	push	{r4, r5, fp, lr}
   2f1f0:	add	fp, sp, #8
   2f1f4:	mov	r2, r1
   2f1f8:	mov	r5, r0
   2f1fc:	ldr	r0, [r0, #192]	; 0xc0
   2f200:	ldr	r1, [fp, #8]
   2f204:	mov	r4, r3
   2f208:	ldr	ip, [r2, #24]
   2f20c:	ldr	r3, [r2, #32]
   2f210:	add	r1, r0, r1
   2f214:	add	r0, r0, r4
   2f218:	sub	r1, r1, r3
   2f21c:	sub	r0, r0, ip
   2f220:	str	r1, [r2, #36]	; 0x24
   2f224:	str	r0, [r2, #28]
   2f228:	mov	r0, r5
   2f22c:	mov	r1, r4
   2f230:	bl	110e4 <myhtml_queue_add@plt>
   2f234:	cmp	r0, #0
   2f238:	movne	r0, #69	; 0x45
   2f23c:	movne	r4, #0
   2f240:	strne	r0, [r5, #160]	; 0xa0
   2f244:	mov	r0, r4
   2f248:	pop	{r4, r5, fp, pc}

0002f24c <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2f24c:	push	{r4, r5, fp, lr}
   2f250:	add	fp, sp, #8
   2f254:	mov	r2, r1
   2f258:	mov	r5, r0
   2f25c:	ldr	r0, [r0, #192]	; 0xc0
   2f260:	ldr	r1, [fp, #8]
   2f264:	mov	r4, r3
   2f268:	ldr	ip, [r2, #24]
   2f26c:	ldr	r3, [r2, #32]
   2f270:	add	r1, r0, r1
   2f274:	add	r0, r0, r4
   2f278:	sub	r1, r1, r3
   2f27c:	sub	r0, r0, ip
   2f280:	str	r1, [r2, #36]	; 0x24
   2f284:	str	r0, [r2, #28]
   2f288:	mov	r0, r5
   2f28c:	mov	r1, r4
   2f290:	bl	110e4 <myhtml_queue_add@plt>
   2f294:	cmp	r0, #0
   2f298:	movne	r0, #69	; 0x45
   2f29c:	movne	r4, #0
   2f2a0:	strne	r0, [r5, #160]	; 0xa0
   2f2a4:	mov	r0, r4
   2f2a8:	pop	{r4, r5, fp, pc}

0002f2ac <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2f2ac:	push	{r4, r5, r6, sl, fp, lr}
   2f2b0:	add	fp, sp, #16
   2f2b4:	mov	r2, r1
   2f2b8:	mov	r6, r0
   2f2bc:	ldr	r0, [r0, #192]	; 0xc0
   2f2c0:	ldr	r1, [fp, #8]
   2f2c4:	mov	r4, r3
   2f2c8:	ldr	r3, [r2, #24]
   2f2cc:	ldr	r5, [r2, #32]
   2f2d0:	add	r1, r0, r1
   2f2d4:	add	r0, r0, r4
   2f2d8:	sub	r1, r1, r5
   2f2dc:	subs	r0, r0, r3
   2f2e0:	str	r1, [r2, #36]	; 0x24
   2f2e4:	str	r0, [r2, #28]
   2f2e8:	beq	2f308 <myhtml_tokenizer_end_state_cdata_section@@Base+0x5c>
   2f2ec:	mov	r0, r6
   2f2f0:	mov	r1, r4
   2f2f4:	bl	110e4 <myhtml_queue_add@plt>
   2f2f8:	cmp	r0, #0
   2f2fc:	movne	r0, #69	; 0x45
   2f300:	movne	r4, #0
   2f304:	strne	r0, [r6, #160]	; 0xa0
   2f308:	mov	r0, r4
   2f30c:	pop	{r4, r5, r6, sl, fp, pc}

0002f310 <myhtml_tokenizer_end_state_rcdata@@Base>:
   2f310:	push	{r4, r5, fp, lr}
   2f314:	add	fp, sp, #8
   2f318:	mov	r2, r1
   2f31c:	mov	r5, r0
   2f320:	ldr	r0, [r0, #192]	; 0xc0
   2f324:	ldr	r1, [fp, #8]
   2f328:	mov	r4, r3
   2f32c:	ldr	r3, [r2, #32]
   2f330:	add	r0, r0, r1
   2f334:	ldr	r1, [r2, #24]
   2f338:	sub	r3, r0, r3
   2f33c:	str	r3, [r2, #36]	; 0x24
   2f340:	cmp	r0, r1
   2f344:	bls	2f380 <myhtml_tokenizer_end_state_rcdata@@Base+0x70>
   2f348:	mov	r3, #1
   2f34c:	sub	r0, r0, r1
   2f350:	mov	r1, #0
   2f354:	str	r3, [r2]
   2f358:	str	r0, [r2, #28]
   2f35c:	ldr	r0, [r2, #48]	; 0x30
   2f360:	orr	r0, r0, #16
   2f364:	str	r0, [r2, #48]	; 0x30
   2f368:	mov	r0, r5
   2f36c:	bl	110e4 <myhtml_queue_add@plt>
   2f370:	cmp	r0, #0
   2f374:	movne	r0, #69	; 0x45
   2f378:	movne	r4, #0
   2f37c:	strne	r0, [r5, #160]	; 0xa0
   2f380:	mov	r0, r4
   2f384:	pop	{r4, r5, fp, pc}

0002f388 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2f388:	push	{r4, r5, r6, sl, fp, lr}
   2f38c:	add	fp, sp, #16
   2f390:	sub	sp, sp, #8
   2f394:	mov	r6, r3
   2f398:	ldr	r3, [r0, #192]	; 0xc0
   2f39c:	ldr	r4, [fp, #8]
   2f3a0:	ldr	r5, [r1, #32]
   2f3a4:	add	r4, r3, r4
   2f3a8:	add	r3, r3, r6
   2f3ac:	sub	r5, r4, r5
   2f3b0:	str	r5, [r1, #36]	; 0x24
   2f3b4:	mov	r5, #16
   2f3b8:	str	r5, [sp]
   2f3bc:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f3c0:	mov	r0, r6
   2f3c4:	sub	sp, fp, #16
   2f3c8:	pop	{r4, r5, r6, sl, fp, pc}

0002f3cc <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2f3cc:	push	{r4, r5, r6, sl, fp, lr}
   2f3d0:	add	fp, sp, #16
   2f3d4:	sub	sp, sp, #8
   2f3d8:	mov	r6, r3
   2f3dc:	ldr	r3, [r0, #192]	; 0xc0
   2f3e0:	ldr	r4, [fp, #8]
   2f3e4:	ldr	r5, [r1, #32]
   2f3e8:	add	r4, r3, r4
   2f3ec:	add	r3, r3, r6
   2f3f0:	sub	r5, r4, r5
   2f3f4:	str	r5, [r1, #36]	; 0x24
   2f3f8:	mov	r5, #16
   2f3fc:	str	r5, [sp]
   2f400:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f404:	mov	r0, r6
   2f408:	sub	sp, fp, #16
   2f40c:	pop	{r4, r5, r6, sl, fp, pc}

0002f410 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2f410:	push	{r4, r5, r6, sl, fp, lr}
   2f414:	add	fp, sp, #16
   2f418:	sub	sp, sp, #8
   2f41c:	mov	r6, r3
   2f420:	ldr	r3, [r0, #192]	; 0xc0
   2f424:	ldr	r4, [fp, #8]
   2f428:	ldr	r5, [r1, #32]
   2f42c:	add	r4, r3, r4
   2f430:	add	r3, r3, r6
   2f434:	sub	r5, r4, r5
   2f438:	str	r5, [r1, #36]	; 0x24
   2f43c:	mov	r5, #16
   2f440:	str	r5, [sp]
   2f444:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f448:	mov	r0, r6
   2f44c:	sub	sp, fp, #16
   2f450:	pop	{r4, r5, r6, sl, fp, pc}

0002f454 <myhtml_tokenizer_end_state_rawtext@@Base>:
   2f454:	push	{r4, r5, r6, sl, fp, lr}
   2f458:	add	fp, sp, #16
   2f45c:	sub	sp, sp, #8
   2f460:	mov	r6, r3
   2f464:	ldr	r3, [r0, #192]	; 0xc0
   2f468:	ldr	r4, [fp, #8]
   2f46c:	ldr	r5, [r1, #32]
   2f470:	add	r4, r3, r4
   2f474:	add	r3, r3, r6
   2f478:	sub	r5, r4, r5
   2f47c:	str	r5, [r1, #36]	; 0x24
   2f480:	mov	r5, #32
   2f484:	str	r5, [sp]
   2f488:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f48c:	mov	r0, r6
   2f490:	sub	sp, fp, #16
   2f494:	pop	{r4, r5, r6, sl, fp, pc}

0002f498 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2f498:	push	{r4, r5, r6, sl, fp, lr}
   2f49c:	add	fp, sp, #16
   2f4a0:	sub	sp, sp, #8
   2f4a4:	mov	r6, r3
   2f4a8:	ldr	r3, [r0, #192]	; 0xc0
   2f4ac:	ldr	r4, [fp, #8]
   2f4b0:	ldr	r5, [r1, #32]
   2f4b4:	add	r4, r3, r4
   2f4b8:	add	r3, r3, r6
   2f4bc:	sub	r5, r4, r5
   2f4c0:	str	r5, [r1, #36]	; 0x24
   2f4c4:	mov	r5, #32
   2f4c8:	str	r5, [sp]
   2f4cc:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f4d0:	mov	r0, r6
   2f4d4:	sub	sp, fp, #16
   2f4d8:	pop	{r4, r5, r6, sl, fp, pc}

0002f4dc <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2f4dc:	push	{r4, r5, r6, sl, fp, lr}
   2f4e0:	add	fp, sp, #16
   2f4e4:	sub	sp, sp, #8
   2f4e8:	mov	r6, r3
   2f4ec:	ldr	r3, [r0, #192]	; 0xc0
   2f4f0:	ldr	r4, [fp, #8]
   2f4f4:	ldr	r5, [r1, #32]
   2f4f8:	add	r4, r3, r4
   2f4fc:	add	r3, r3, r6
   2f500:	sub	r5, r4, r5
   2f504:	str	r5, [r1, #36]	; 0x24
   2f508:	mov	r5, #32
   2f50c:	str	r5, [sp]
   2f510:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f514:	mov	r0, r6
   2f518:	sub	sp, fp, #16
   2f51c:	pop	{r4, r5, r6, sl, fp, pc}

0002f520 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2f520:	push	{r4, r5, r6, sl, fp, lr}
   2f524:	add	fp, sp, #16
   2f528:	sub	sp, sp, #8
   2f52c:	mov	r6, r3
   2f530:	ldr	r3, [r0, #192]	; 0xc0
   2f534:	ldr	r4, [fp, #8]
   2f538:	ldr	r5, [r1, #32]
   2f53c:	add	r4, r3, r4
   2f540:	add	r3, r3, r6
   2f544:	sub	r5, r4, r5
   2f548:	str	r5, [r1, #36]	; 0x24
   2f54c:	mov	r5, #32
   2f550:	str	r5, [sp]
   2f554:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f558:	mov	r0, r6
   2f55c:	sub	sp, fp, #16
   2f560:	pop	{r4, r5, r6, sl, fp, pc}

0002f564 <myhtml_tokenizer_end_state_plaintext@@Base>:
   2f564:	ldr	r0, [r0, #192]	; 0xc0
   2f568:	ldr	r2, [sp]
   2f56c:	add	r0, r0, r2
   2f570:	ldr	r2, [r1, #32]
   2f574:	sub	r0, r0, r2
   2f578:	str	r0, [r1, #36]	; 0x24
   2f57c:	mov	r0, r3
   2f580:	bx	lr

0002f584 <myhtml_tokenizer_end_state_doctype@@Base>:
   2f584:	push	{r4, r5, r6, sl, fp, lr}
   2f588:	add	fp, sp, #16
   2f58c:	sub	sp, sp, #8
   2f590:	mov	r6, r3
   2f594:	ldr	r3, [r0, #192]	; 0xc0
   2f598:	ldr	r4, [fp, #8]
   2f59c:	ldr	r5, [r1, #32]
   2f5a0:	add	r4, r3, r4
   2f5a4:	add	r3, r3, r6
   2f5a8:	sub	r5, r4, r5
   2f5ac:	str	r5, [r1, #36]	; 0x24
   2f5b0:	mov	r5, #32
   2f5b4:	str	r5, [sp]
   2f5b8:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2f5bc:	mov	r0, r6
   2f5c0:	sub	sp, fp, #16
   2f5c4:	pop	{r4, r5, r6, sl, fp, pc}

0002f5c8 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2f5c8:	push	{r4, r5, fp, lr}
   2f5cc:	add	fp, sp, #8
   2f5d0:	mov	r2, r1
   2f5d4:	mov	r5, r0
   2f5d8:	ldr	r0, [r0, #192]	; 0xc0
   2f5dc:	ldr	r1, [fp, #8]
   2f5e0:	mov	r4, r3
   2f5e4:	add	r0, r0, r1
   2f5e8:	ldr	r1, [r2, #32]
   2f5ec:	sub	r0, r0, r1
   2f5f0:	mov	r1, r3
   2f5f4:	str	r0, [r2, #36]	; 0x24
   2f5f8:	mov	r0, #1
   2f5fc:	str	r0, [r5, #176]	; 0xb0
   2f600:	mov	r0, r5
   2f604:	bl	110e4 <myhtml_queue_add@plt>
   2f608:	cmp	r0, #0
   2f60c:	movne	r0, #69	; 0x45
   2f610:	movne	r4, #0
   2f614:	strne	r0, [r5, #160]	; 0xa0
   2f618:	mov	r0, r4
   2f61c:	pop	{r4, r5, fp, pc}

0002f620 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2f620:	push	{r4, r5, fp, lr}
   2f624:	add	fp, sp, #8
   2f628:	mov	r2, r1
   2f62c:	mov	r5, r0
   2f630:	ldr	r0, [r0, #192]	; 0xc0
   2f634:	ldr	r1, [fp, #8]
   2f638:	mov	r4, r3
   2f63c:	ldr	r3, [r2, #32]
   2f640:	add	r1, r0, r1
   2f644:	add	r0, r0, r4
   2f648:	sub	r1, r1, r3
   2f64c:	str	r1, [r2, #36]	; 0x24
   2f650:	ldr	r1, [r5, #56]	; 0x38
   2f654:	ldr	r3, [r1, #48]	; 0x30
   2f658:	sub	r0, r0, r3
   2f65c:	str	r0, [r1, #52]	; 0x34
   2f660:	mov	r0, r5
   2f664:	mov	r1, r4
   2f668:	bl	110e4 <myhtml_queue_add@plt>
   2f66c:	cmp	r0, #0
   2f670:	movne	r0, #69	; 0x45
   2f674:	movne	r4, #0
   2f678:	strne	r0, [r5, #160]	; 0xa0
   2f67c:	mov	r0, r4
   2f680:	pop	{r4, r5, fp, pc}

0002f684 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2f684:	push	{r4, r5, fp, lr}
   2f688:	add	fp, sp, #8
   2f68c:	mov	r2, r1
   2f690:	mov	r5, r0
   2f694:	ldr	r0, [r0, #192]	; 0xc0
   2f698:	ldr	r1, [fp, #8]
   2f69c:	mov	r4, r3
   2f6a0:	add	r0, r0, r1
   2f6a4:	ldr	r1, [r2, #32]
   2f6a8:	sub	r0, r0, r1
   2f6ac:	mov	r1, r3
   2f6b0:	str	r0, [r2, #36]	; 0x24
   2f6b4:	mov	r0, r5
   2f6b8:	bl	110e4 <myhtml_queue_add@plt>
   2f6bc:	cmp	r0, #0
   2f6c0:	movne	r0, #69	; 0x45
   2f6c4:	movne	r4, #0
   2f6c8:	strne	r0, [r5, #160]	; 0xa0
   2f6cc:	mov	r0, r4
   2f6d0:	pop	{r4, r5, fp, pc}

0002f6d4 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2f6d4:	push	{r4, r5, fp, lr}
   2f6d8:	add	fp, sp, #8
   2f6dc:	mov	r2, r1
   2f6e0:	mov	r5, r0
   2f6e4:	ldr	r0, [r0, #192]	; 0xc0
   2f6e8:	ldr	r1, [fp, #8]
   2f6ec:	mov	r4, r3
   2f6f0:	add	r0, r0, r1
   2f6f4:	ldr	r1, [r2, #32]
   2f6f8:	sub	r0, r0, r1
   2f6fc:	mov	r1, r3
   2f700:	str	r0, [r2, #36]	; 0x24
   2f704:	mov	r0, r5
   2f708:	bl	110e4 <myhtml_queue_add@plt>
   2f70c:	cmp	r0, #0
   2f710:	movne	r0, #69	; 0x45
   2f714:	movne	r4, #0
   2f718:	strne	r0, [r5, #160]	; 0xa0
   2f71c:	mov	r0, r4
   2f720:	pop	{r4, r5, fp, pc}

0002f724 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2f724:	push	{r4, r5, fp, lr}
   2f728:	add	fp, sp, #8
   2f72c:	mov	r2, r1
   2f730:	mov	r5, r0
   2f734:	ldr	r0, [r0, #192]	; 0xc0
   2f738:	ldr	r1, [fp, #8]
   2f73c:	mov	r4, r3
   2f740:	add	r0, r0, r1
   2f744:	ldr	r1, [r2, #32]
   2f748:	sub	r0, r0, r1
   2f74c:	mov	r1, r3
   2f750:	str	r0, [r2, #36]	; 0x24
   2f754:	mov	r0, #1
   2f758:	str	r0, [r5, #176]	; 0xb0
   2f75c:	mov	r0, r5
   2f760:	bl	110e4 <myhtml_queue_add@plt>
   2f764:	cmp	r0, #0
   2f768:	movne	r0, #69	; 0x45
   2f76c:	movne	r4, #0
   2f770:	strne	r0, [r5, #160]	; 0xa0
   2f774:	mov	r0, r4
   2f778:	pop	{r4, r5, fp, pc}

0002f77c <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2f77c:	push	{r4, r5, fp, lr}
   2f780:	add	fp, sp, #8
   2f784:	mov	r5, r0
   2f788:	ldr	ip, [fp, #8]
   2f78c:	ldr	r0, [r0, #192]	; 0xc0
   2f790:	mov	r2, r1
   2f794:	ldr	r1, [r1, #32]
   2f798:	mov	r4, r3
   2f79c:	add	r3, r0, ip
   2f7a0:	cmp	ip, #0
   2f7a4:	sub	r1, r3, r1
   2f7a8:	str	r1, [r2, #36]	; 0x24
   2f7ac:	mov	r1, #1
   2f7b0:	str	r1, [r5, #176]	; 0xb0
   2f7b4:	beq	2f7d0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x54>
   2f7b8:	ldr	r1, [r5, #56]	; 0x38
   2f7bc:	ldr	r3, [r1, #48]	; 0x30
   2f7c0:	cmp	r3, #0
   2f7c4:	addne	r0, r0, r4
   2f7c8:	subne	r0, r0, r3
   2f7cc:	strne	r0, [r1, #52]	; 0x34
   2f7d0:	mov	r0, r5
   2f7d4:	mov	r1, r4
   2f7d8:	bl	110e4 <myhtml_queue_add@plt>
   2f7dc:	cmp	r0, #0
   2f7e0:	movne	r0, #69	; 0x45
   2f7e4:	movne	r4, #0
   2f7e8:	strne	r0, [r5, #160]	; 0xa0
   2f7ec:	mov	r0, r4
   2f7f0:	pop	{r4, r5, fp, pc}

0002f7f4 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2f7f4:	push	{r4, r5, r6, sl, fp, lr}
   2f7f8:	add	fp, sp, #16
   2f7fc:	mov	r6, r3
   2f800:	mov	r2, r1
   2f804:	mov	r5, r0
   2f808:	ldr	r3, [fp, #8]
   2f80c:	ldr	r0, [r0, #192]	; 0xc0
   2f810:	ldr	r4, [r2, #32]
   2f814:	add	r1, r0, r3
   2f818:	cmp	r3, #0
   2f81c:	sub	r1, r1, r4
   2f820:	str	r1, [r2, #36]	; 0x24
   2f824:	mov	r1, #1
   2f828:	str	r1, [r5, #176]	; 0xb0
   2f82c:	add	r1, r0, r6
   2f830:	beq	2f84c <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base+0x58>
   2f834:	ldr	r3, [r5, #56]	; 0x38
   2f838:	ldr	r4, [r3, #48]	; 0x30
   2f83c:	cmp	r4, #0
   2f840:	addne	r0, r1, r0
   2f844:	subne	r0, r0, r4
   2f848:	strne	r0, [r3, #52]	; 0x34
   2f84c:	mov	r0, r5
   2f850:	bl	110e4 <myhtml_queue_add@plt>
   2f854:	cmp	r0, #0
   2f858:	movne	r0, #69	; 0x45
   2f85c:	strne	r0, [r5, #160]	; 0xa0
   2f860:	mov	r0, r6
   2f864:	pop	{r4, r5, r6, sl, fp, pc}

0002f868 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2f868:	push	{r4, r5, fp, lr}
   2f86c:	add	fp, sp, #8
   2f870:	mov	r2, r1
   2f874:	mov	r5, r0
   2f878:	ldr	r0, [r0, #192]	; 0xc0
   2f87c:	ldr	r1, [fp, #8]
   2f880:	mov	r4, r3
   2f884:	add	r0, r0, r1
   2f888:	ldr	r1, [r2, #32]
   2f88c:	sub	r0, r0, r1
   2f890:	mov	r1, r3
   2f894:	str	r0, [r2, #36]	; 0x24
   2f898:	mov	r0, r5
   2f89c:	bl	110e4 <myhtml_queue_add@plt>
   2f8a0:	cmp	r0, #0
   2f8a4:	movne	r0, #69	; 0x45
   2f8a8:	movne	r4, #0
   2f8ac:	strne	r0, [r5, #160]	; 0xa0
   2f8b0:	mov	r0, r4
   2f8b4:	pop	{r4, r5, fp, pc}

0002f8b8 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2f8b8:	push	{r4, r5, fp, lr}
   2f8bc:	add	fp, sp, #8
   2f8c0:	mov	r5, r0
   2f8c4:	ldr	ip, [fp, #8]
   2f8c8:	ldr	r0, [r0, #192]	; 0xc0
   2f8cc:	mov	r2, r1
   2f8d0:	ldr	r1, [r1, #32]
   2f8d4:	mov	r4, r3
   2f8d8:	add	r3, r0, ip
   2f8dc:	cmp	ip, #0
   2f8e0:	sub	r1, r3, r1
   2f8e4:	str	r1, [r2, #36]	; 0x24
   2f8e8:	mov	r1, #1
   2f8ec:	str	r1, [r5, #176]	; 0xb0
   2f8f0:	beq	2f90c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x54>
   2f8f4:	ldr	r1, [r5, #56]	; 0x38
   2f8f8:	ldr	r3, [r1, #48]	; 0x30
   2f8fc:	cmp	r3, #0
   2f900:	addne	r0, r0, r4
   2f904:	subne	r0, r0, r3
   2f908:	strne	r0, [r1, #52]	; 0x34
   2f90c:	mov	r0, r5
   2f910:	mov	r1, r4
   2f914:	bl	110e4 <myhtml_queue_add@plt>
   2f918:	cmp	r0, #0
   2f91c:	movne	r0, #69	; 0x45
   2f920:	movne	r4, #0
   2f924:	strne	r0, [r5, #160]	; 0xa0
   2f928:	mov	r0, r4
   2f92c:	pop	{r4, r5, fp, pc}

0002f930 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2f930:	push	{r4, r5, r6, sl, fp, lr}
   2f934:	add	fp, sp, #16
   2f938:	mov	r6, r3
   2f93c:	mov	r2, r1
   2f940:	mov	r5, r0
   2f944:	ldr	r3, [fp, #8]
   2f948:	ldr	r0, [r0, #192]	; 0xc0
   2f94c:	ldr	r4, [r2, #32]
   2f950:	add	r1, r0, r3
   2f954:	cmp	r3, #0
   2f958:	sub	r1, r1, r4
   2f95c:	str	r1, [r2, #36]	; 0x24
   2f960:	mov	r1, #1
   2f964:	str	r1, [r5, #176]	; 0xb0
   2f968:	add	r1, r0, r6
   2f96c:	beq	2f988 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base+0x58>
   2f970:	ldr	r3, [r5, #56]	; 0x38
   2f974:	ldr	r4, [r3, #48]	; 0x30
   2f978:	cmp	r4, #0
   2f97c:	addne	r0, r1, r0
   2f980:	subne	r0, r0, r4
   2f984:	strne	r0, [r3, #52]	; 0x34
   2f988:	mov	r0, r5
   2f98c:	bl	110e4 <myhtml_queue_add@plt>
   2f990:	cmp	r0, #0
   2f994:	movne	r0, #69	; 0x45
   2f998:	strne	r0, [r5, #160]	; 0xa0
   2f99c:	mov	r0, r6
   2f9a0:	pop	{r4, r5, r6, sl, fp, pc}

0002f9a4 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2f9a4:	push	{r4, r5, fp, lr}
   2f9a8:	add	fp, sp, #8
   2f9ac:	mov	r2, r1
   2f9b0:	mov	r5, r0
   2f9b4:	ldr	r0, [r0, #192]	; 0xc0
   2f9b8:	ldr	r1, [fp, #8]
   2f9bc:	mov	r4, r3
   2f9c0:	add	r0, r0, r1
   2f9c4:	ldr	r1, [r2, #32]
   2f9c8:	sub	r0, r0, r1
   2f9cc:	mov	r1, r3
   2f9d0:	str	r0, [r2, #36]	; 0x24
   2f9d4:	mov	r0, r5
   2f9d8:	bl	110e4 <myhtml_queue_add@plt>
   2f9dc:	cmp	r0, #0
   2f9e0:	movne	r0, #69	; 0x45
   2f9e4:	movne	r4, #0
   2f9e8:	strne	r0, [r5, #160]	; 0xa0
   2f9ec:	mov	r0, r4
   2f9f0:	pop	{r4, r5, fp, pc}

0002f9f4 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2f9f4:	push	{r4, r5, fp, lr}
   2f9f8:	add	fp, sp, #8
   2f9fc:	mov	r2, r1
   2fa00:	mov	r5, r0
   2fa04:	ldr	r0, [r0, #192]	; 0xc0
   2fa08:	ldr	r1, [fp, #8]
   2fa0c:	mov	r4, r3
   2fa10:	add	r0, r0, r1
   2fa14:	ldr	r1, [r2, #32]
   2fa18:	sub	r0, r0, r1
   2fa1c:	mov	r1, r3
   2fa20:	str	r0, [r2, #36]	; 0x24
   2fa24:	mov	r0, r5
   2fa28:	bl	110e4 <myhtml_queue_add@plt>
   2fa2c:	cmp	r0, #0
   2fa30:	movne	r0, #69	; 0x45
   2fa34:	movne	r4, #0
   2fa38:	strne	r0, [r5, #160]	; 0xa0
   2fa3c:	mov	r0, r4
   2fa40:	pop	{r4, r5, fp, pc}

0002fa44 <myhtml_tokenizer_end_state_script_data@@Base>:
   2fa44:	push	{r4, r5, r6, sl, fp, lr}
   2fa48:	add	fp, sp, #16
   2fa4c:	sub	sp, sp, #8
   2fa50:	mov	r6, r3
   2fa54:	ldr	r3, [r0, #192]	; 0xc0
   2fa58:	ldr	r4, [fp, #8]
   2fa5c:	ldr	r5, [r1, #32]
   2fa60:	add	r4, r3, r4
   2fa64:	add	r3, r3, r6
   2fa68:	sub	r5, r4, r5
   2fa6c:	str	r5, [r1, #36]	; 0x24
   2fa70:	mov	r5, #64	; 0x40
   2fa74:	str	r5, [sp]
   2fa78:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fa7c:	mov	r0, r6
   2fa80:	sub	sp, fp, #16
   2fa84:	pop	{r4, r5, r6, sl, fp, pc}

0002fa88 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2fa88:	push	{r4, r5, r6, sl, fp, lr}
   2fa8c:	add	fp, sp, #16
   2fa90:	sub	sp, sp, #8
   2fa94:	mov	r6, r3
   2fa98:	ldr	r3, [r0, #192]	; 0xc0
   2fa9c:	ldr	r4, [fp, #8]
   2faa0:	ldr	r5, [r1, #32]
   2faa4:	add	r4, r3, r4
   2faa8:	add	r3, r3, r6
   2faac:	sub	r5, r4, r5
   2fab0:	str	r5, [r1, #36]	; 0x24
   2fab4:	mov	r5, #64	; 0x40
   2fab8:	str	r5, [sp]
   2fabc:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fac0:	mov	r0, r6
   2fac4:	sub	sp, fp, #16
   2fac8:	pop	{r4, r5, r6, sl, fp, pc}

0002facc <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2facc:	push	{r4, r5, r6, sl, fp, lr}
   2fad0:	add	fp, sp, #16
   2fad4:	sub	sp, sp, #8
   2fad8:	mov	r6, r3
   2fadc:	ldr	r3, [r0, #192]	; 0xc0
   2fae0:	ldr	r4, [fp, #8]
   2fae4:	ldr	r5, [r1, #32]
   2fae8:	add	r4, r3, r4
   2faec:	add	r3, r3, r6
   2faf0:	sub	r5, r4, r5
   2faf4:	str	r5, [r1, #36]	; 0x24
   2faf8:	mov	r5, #64	; 0x40
   2fafc:	str	r5, [sp]
   2fb00:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fb04:	mov	r0, r6
   2fb08:	sub	sp, fp, #16
   2fb0c:	pop	{r4, r5, r6, sl, fp, pc}

0002fb10 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2fb10:	push	{r4, r5, r6, sl, fp, lr}
   2fb14:	add	fp, sp, #16
   2fb18:	sub	sp, sp, #8
   2fb1c:	mov	r6, r3
   2fb20:	ldr	r3, [r0, #192]	; 0xc0
   2fb24:	ldr	r4, [fp, #8]
   2fb28:	ldr	r5, [r1, #32]
   2fb2c:	add	r4, r3, r4
   2fb30:	add	r3, r3, r6
   2fb34:	sub	r5, r4, r5
   2fb38:	str	r5, [r1, #36]	; 0x24
   2fb3c:	mov	r5, #64	; 0x40
   2fb40:	str	r5, [sp]
   2fb44:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fb48:	mov	r0, r6
   2fb4c:	sub	sp, fp, #16
   2fb50:	pop	{r4, r5, r6, sl, fp, pc}

0002fb54 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2fb54:	push	{r4, r5, r6, sl, fp, lr}
   2fb58:	add	fp, sp, #16
   2fb5c:	sub	sp, sp, #8
   2fb60:	mov	r6, r3
   2fb64:	ldr	r3, [r0, #192]	; 0xc0
   2fb68:	ldr	r4, [fp, #8]
   2fb6c:	ldr	r5, [r1, #32]
   2fb70:	add	r4, r3, r4
   2fb74:	add	r3, r3, r6
   2fb78:	sub	r5, r4, r5
   2fb7c:	str	r5, [r1, #36]	; 0x24
   2fb80:	mov	r5, #64	; 0x40
   2fb84:	str	r5, [sp]
   2fb88:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fb8c:	mov	r0, r6
   2fb90:	sub	sp, fp, #16
   2fb94:	pop	{r4, r5, r6, sl, fp, pc}

0002fb98 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2fb98:	push	{r4, r5, r6, sl, fp, lr}
   2fb9c:	add	fp, sp, #16
   2fba0:	sub	sp, sp, #8
   2fba4:	mov	r6, r3
   2fba8:	ldr	r3, [r0, #192]	; 0xc0
   2fbac:	ldr	r4, [fp, #8]
   2fbb0:	ldr	r5, [r1, #32]
   2fbb4:	add	r4, r3, r4
   2fbb8:	add	r3, r3, r6
   2fbbc:	sub	r5, r4, r5
   2fbc0:	str	r5, [r1, #36]	; 0x24
   2fbc4:	mov	r5, #64	; 0x40
   2fbc8:	str	r5, [sp]
   2fbcc:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fbd0:	mov	r0, r6
   2fbd4:	sub	sp, fp, #16
   2fbd8:	pop	{r4, r5, r6, sl, fp, pc}

0002fbdc <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2fbdc:	push	{r4, r5, r6, sl, fp, lr}
   2fbe0:	add	fp, sp, #16
   2fbe4:	sub	sp, sp, #8
   2fbe8:	mov	r6, r3
   2fbec:	ldr	r3, [r0, #192]	; 0xc0
   2fbf0:	ldr	r4, [fp, #8]
   2fbf4:	ldr	r5, [r1, #32]
   2fbf8:	add	r4, r3, r4
   2fbfc:	add	r3, r3, r6
   2fc00:	sub	r5, r4, r5
   2fc04:	str	r5, [r1, #36]	; 0x24
   2fc08:	mov	r5, #64	; 0x40
   2fc0c:	str	r5, [sp]
   2fc10:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fc14:	mov	r0, r6
   2fc18:	sub	sp, fp, #16
   2fc1c:	pop	{r4, r5, r6, sl, fp, pc}

0002fc20 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2fc20:	push	{r4, r5, r6, sl, fp, lr}
   2fc24:	add	fp, sp, #16
   2fc28:	sub	sp, sp, #8
   2fc2c:	mov	r6, r3
   2fc30:	ldr	r3, [r0, #192]	; 0xc0
   2fc34:	ldr	r4, [fp, #8]
   2fc38:	ldr	r5, [r1, #32]
   2fc3c:	add	r4, r3, r4
   2fc40:	add	r3, r3, r6
   2fc44:	sub	r5, r4, r5
   2fc48:	str	r5, [r1, #36]	; 0x24
   2fc4c:	mov	r5, #64	; 0x40
   2fc50:	str	r5, [sp]
   2fc54:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fc58:	mov	r0, r6
   2fc5c:	sub	sp, fp, #16
   2fc60:	pop	{r4, r5, r6, sl, fp, pc}

0002fc64 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2fc64:	push	{r4, r5, r6, sl, fp, lr}
   2fc68:	add	fp, sp, #16
   2fc6c:	sub	sp, sp, #8
   2fc70:	mov	r6, r3
   2fc74:	ldr	r3, [r0, #192]	; 0xc0
   2fc78:	ldr	r4, [fp, #8]
   2fc7c:	ldr	r5, [r1, #32]
   2fc80:	add	r4, r3, r4
   2fc84:	add	r3, r3, r6
   2fc88:	sub	r5, r4, r5
   2fc8c:	str	r5, [r1, #36]	; 0x24
   2fc90:	mov	r5, #64	; 0x40
   2fc94:	str	r5, [sp]
   2fc98:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fc9c:	mov	r0, r6
   2fca0:	sub	sp, fp, #16
   2fca4:	pop	{r4, r5, r6, sl, fp, pc}

0002fca8 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2fca8:	push	{r4, r5, r6, sl, fp, lr}
   2fcac:	add	fp, sp, #16
   2fcb0:	sub	sp, sp, #8
   2fcb4:	mov	r6, r3
   2fcb8:	ldr	r3, [r0, #192]	; 0xc0
   2fcbc:	ldr	r4, [fp, #8]
   2fcc0:	ldr	r5, [r1, #32]
   2fcc4:	add	r4, r3, r4
   2fcc8:	add	r3, r3, r6
   2fccc:	sub	r5, r4, r5
   2fcd0:	str	r5, [r1, #36]	; 0x24
   2fcd4:	mov	r5, #64	; 0x40
   2fcd8:	str	r5, [sp]
   2fcdc:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fce0:	mov	r0, r6
   2fce4:	sub	sp, fp, #16
   2fce8:	pop	{r4, r5, r6, sl, fp, pc}

0002fcec <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2fcec:	push	{r4, r5, r6, sl, fp, lr}
   2fcf0:	add	fp, sp, #16
   2fcf4:	sub	sp, sp, #8
   2fcf8:	mov	r6, r3
   2fcfc:	ldr	r3, [r0, #192]	; 0xc0
   2fd00:	ldr	r4, [fp, #8]
   2fd04:	ldr	r5, [r1, #32]
   2fd08:	add	r4, r3, r4
   2fd0c:	add	r3, r3, r6
   2fd10:	sub	r5, r4, r5
   2fd14:	str	r5, [r1, #36]	; 0x24
   2fd18:	mov	r5, #64	; 0x40
   2fd1c:	str	r5, [sp]
   2fd20:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fd24:	mov	r0, r6
   2fd28:	sub	sp, fp, #16
   2fd2c:	pop	{r4, r5, r6, sl, fp, pc}

0002fd30 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2fd30:	push	{r4, r5, r6, sl, fp, lr}
   2fd34:	add	fp, sp, #16
   2fd38:	sub	sp, sp, #8
   2fd3c:	mov	r6, r3
   2fd40:	ldr	r3, [r0, #192]	; 0xc0
   2fd44:	ldr	r4, [fp, #8]
   2fd48:	ldr	r5, [r1, #32]
   2fd4c:	add	r4, r3, r4
   2fd50:	add	r3, r3, r6
   2fd54:	sub	r5, r4, r5
   2fd58:	str	r5, [r1, #36]	; 0x24
   2fd5c:	mov	r5, #64	; 0x40
   2fd60:	str	r5, [sp]
   2fd64:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fd68:	mov	r0, r6
   2fd6c:	sub	sp, fp, #16
   2fd70:	pop	{r4, r5, r6, sl, fp, pc}

0002fd74 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2fd74:	push	{r4, r5, r6, sl, fp, lr}
   2fd78:	add	fp, sp, #16
   2fd7c:	sub	sp, sp, #8
   2fd80:	mov	r6, r3
   2fd84:	ldr	r3, [r0, #192]	; 0xc0
   2fd88:	ldr	r4, [fp, #8]
   2fd8c:	ldr	r5, [r1, #32]
   2fd90:	add	r4, r3, r4
   2fd94:	add	r3, r3, r6
   2fd98:	sub	r5, r4, r5
   2fd9c:	str	r5, [r1, #36]	; 0x24
   2fda0:	mov	r5, #64	; 0x40
   2fda4:	str	r5, [sp]
   2fda8:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fdac:	mov	r0, r6
   2fdb0:	sub	sp, fp, #16
   2fdb4:	pop	{r4, r5, r6, sl, fp, pc}

0002fdb8 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2fdb8:	push	{r4, r5, r6, sl, fp, lr}
   2fdbc:	add	fp, sp, #16
   2fdc0:	sub	sp, sp, #8
   2fdc4:	mov	r6, r3
   2fdc8:	ldr	r3, [r0, #192]	; 0xc0
   2fdcc:	ldr	r4, [fp, #8]
   2fdd0:	ldr	r5, [r1, #32]
   2fdd4:	add	r4, r3, r4
   2fdd8:	add	r3, r3, r6
   2fddc:	sub	r5, r4, r5
   2fde0:	str	r5, [r1, #36]	; 0x24
   2fde4:	mov	r5, #64	; 0x40
   2fde8:	str	r5, [sp]
   2fdec:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fdf0:	mov	r0, r6
   2fdf4:	sub	sp, fp, #16
   2fdf8:	pop	{r4, r5, r6, sl, fp, pc}

0002fdfc <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2fdfc:	push	{r4, r5, r6, sl, fp, lr}
   2fe00:	add	fp, sp, #16
   2fe04:	sub	sp, sp, #8
   2fe08:	mov	r6, r3
   2fe0c:	ldr	r3, [r0, #192]	; 0xc0
   2fe10:	ldr	r4, [fp, #8]
   2fe14:	ldr	r5, [r1, #32]
   2fe18:	add	r4, r3, r4
   2fe1c:	add	r3, r3, r6
   2fe20:	sub	r5, r4, r5
   2fe24:	str	r5, [r1, #36]	; 0x24
   2fe28:	mov	r5, #64	; 0x40
   2fe2c:	str	r5, [sp]
   2fe30:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fe34:	mov	r0, r6
   2fe38:	sub	sp, fp, #16
   2fe3c:	pop	{r4, r5, r6, sl, fp, pc}

0002fe40 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2fe40:	push	{r4, r5, r6, sl, fp, lr}
   2fe44:	add	fp, sp, #16
   2fe48:	sub	sp, sp, #8
   2fe4c:	mov	r6, r3
   2fe50:	ldr	r3, [r0, #192]	; 0xc0
   2fe54:	ldr	r4, [fp, #8]
   2fe58:	ldr	r5, [r1, #32]
   2fe5c:	add	r4, r3, r4
   2fe60:	add	r3, r3, r6
   2fe64:	sub	r5, r4, r5
   2fe68:	str	r5, [r1, #36]	; 0x24
   2fe6c:	mov	r5, #64	; 0x40
   2fe70:	str	r5, [sp]
   2fe74:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2fe78:	mov	r0, r6
   2fe7c:	sub	sp, fp, #16
   2fe80:	pop	{r4, r5, r6, sl, fp, pc}

0002fe84 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2fe84:	push	{r4, r5, r6, sl, fp, lr}
   2fe88:	add	fp, sp, #16
   2fe8c:	sub	sp, sp, #8
   2fe90:	mov	r6, r3
   2fe94:	ldr	r3, [r0, #192]	; 0xc0
   2fe98:	ldr	r4, [fp, #8]
   2fe9c:	ldr	r5, [r1, #32]
   2fea0:	add	r4, r3, r4
   2fea4:	add	r3, r3, r6
   2fea8:	sub	r5, r4, r5
   2feac:	str	r5, [r1, #36]	; 0x24
   2feb0:	mov	r5, #64	; 0x40
   2feb4:	str	r5, [sp]
   2feb8:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2febc:	mov	r0, r6
   2fec0:	sub	sp, fp, #16
   2fec4:	pop	{r4, r5, r6, sl, fp, pc}

0002fec8 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2fec8:	push	{r4, r5, r6, sl, fp, lr}
   2fecc:	add	fp, sp, #16
   2fed0:	sub	sp, sp, #8
   2fed4:	mov	r6, r3
   2fed8:	ldr	r3, [r0, #192]	; 0xc0
   2fedc:	ldr	r4, [fp, #8]
   2fee0:	ldr	r5, [r1, #32]
   2fee4:	add	r4, r3, r4
   2fee8:	add	r3, r3, r6
   2feec:	sub	r5, r4, r5
   2fef0:	str	r5, [r1, #36]	; 0x24
   2fef4:	mov	r5, #64	; 0x40
   2fef8:	str	r5, [sp]
   2fefc:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ff00:	mov	r0, r6
   2ff04:	sub	sp, fp, #16
   2ff08:	pop	{r4, r5, r6, sl, fp, pc}

0002ff0c <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2ff0c:	ldr	r0, [sp]
   2ff10:	bx	lr

0002ff14 <myhtml_tokenizer_state_script_data@@Base>:
   2ff14:	push	{fp, lr}
   2ff18:	mov	fp, sp
   2ff1c:	ldr	ip, [fp, #8]
   2ff20:	mov	lr, r3
   2ff24:	cmp	r3, ip
   2ff28:	bcs	2ff48 <myhtml_tokenizer_state_script_data@@Base+0x34>
   2ff2c:	ldrb	r3, [r2, lr]
   2ff30:	cmp	r3, #60	; 0x3c
   2ff34:	beq	2ff50 <myhtml_tokenizer_state_script_data@@Base+0x3c>
   2ff38:	add	lr, lr, #1
   2ff3c:	cmp	ip, lr
   2ff40:	bne	2ff2c <myhtml_tokenizer_state_script_data@@Base+0x18>
   2ff44:	mov	lr, ip
   2ff48:	mov	r0, lr
   2ff4c:	pop	{fp, pc}
   2ff50:	ldr	r2, [r0, #192]	; 0xc0
   2ff54:	add	r2, r2, lr
   2ff58:	add	lr, lr, #1
   2ff5c:	str	r2, [r1, #32]
   2ff60:	mov	r1, #16
   2ff64:	str	r1, [r0, #160]	; 0xa0
   2ff68:	mov	r0, lr
   2ff6c:	pop	{fp, pc}

0002ff70 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2ff70:	ldrb	r2, [r2, r3]
   2ff74:	cmp	r2, #33	; 0x21
   2ff78:	beq	2ff98 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x28>
   2ff7c:	cmp	r2, #47	; 0x2f
   2ff80:	mov	r1, #5
   2ff84:	addeq	r3, r3, #1
   2ff88:	moveq	r1, #17
   2ff8c:	str	r1, [r0, #160]	; 0xa0
   2ff90:	mov	r0, r3
   2ff94:	bx	lr
   2ff98:	add	r3, r3, #1
   2ff9c:	mov	r1, #19
   2ffa0:	str	r1, [r0, #160]	; 0xa0
   2ffa4:	mov	r0, r3
   2ffa8:	bx	lr

0002ffac <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2ffac:	ldrb	r1, [r2, r3]
   2ffb0:	mov	r2, #5
   2ffb4:	cmp	r1, #45	; 0x2d
   2ffb8:	movweq	r2, #20
   2ffbc:	addeq	r3, r3, #1
   2ffc0:	str	r2, [r0, #160]	; 0xa0
   2ffc4:	mov	r0, r3
   2ffc8:	bx	lr

0002ffcc <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2ffcc:	ldrb	r1, [r2, r3]
   2ffd0:	mov	r2, #5
   2ffd4:	cmp	r1, #45	; 0x2d
   2ffd8:	movweq	r2, #23
   2ffdc:	addeq	r3, r3, #1
   2ffe0:	str	r2, [r0, #160]	; 0xa0
   2ffe4:	mov	r0, r3
   2ffe8:	bx	lr

0002ffec <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2ffec:	ldrb	r2, [r2, r3]
   2fff0:	mov	ip, #5
   2fff4:	and	r2, r2, #223	; 0xdf
   2fff8:	sub	r2, r2, #65	; 0x41
   2fffc:	uxtb	r2, r2
   30000:	cmp	r2, #25
   30004:	bhi	30018 <myhtml_tokenizer_state_script_data_end_tag_open@@Base+0x2c>
   30008:	ldr	r2, [r0, #192]	; 0xc0
   3000c:	mov	ip, #18
   30010:	add	r2, r2, r3
   30014:	str	r2, [r1, #12]
   30018:	str	ip, [r0, #160]	; 0xa0
   3001c:	mov	r0, r3
   30020:	bx	lr

00030024 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   30024:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30028:	add	fp, sp, #24
   3002c:	sub	sp, sp, #8
   30030:	mov	r9, r0
   30034:	ldr	r0, [fp, #8]
   30038:	mov	r4, r3
   3003c:	cmp	r3, r0
   30040:	bcs	3018c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x168>
   30044:	mov	r7, r1
   30048:	mov	r6, r2
   3004c:	rsb	r1, r0, #0
   30050:	add	r4, r4, #1
   30054:	b	30068 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x44>
   30058:	add	r4, r4, #1
   3005c:	add	r2, r1, r4
   30060:	cmp	r2, #1
   30064:	beq	30198 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x174>
   30068:	add	r2, r6, r4
   3006c:	ldrb	r2, [r2, #-1]
   30070:	sub	r3, r2, #9
   30074:	cmp	r3, #53	; 0x35
   30078:	bhi	30160 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x13c>
   3007c:	add	r5, pc, #4
   30080:	ldr	r3, [r5, r3, lsl #2]
   30084:	add	pc, r5, r3
   30088:	andeq	r0, r0, r0, lsr #2
   3008c:	andeq	r0, r0, r0, lsr #2
   30090:	ldrdeq	r0, [r0], -r8
   30094:	andeq	r0, r0, r0, lsr #2
   30098:	andeq	r0, r0, r0, lsr #2
   3009c:	ldrdeq	r0, [r0], -r8
   300a0:	ldrdeq	r0, [r0], -r8
   300a4:	ldrdeq	r0, [r0], -r8
   300a8:	ldrdeq	r0, [r0], -r8
   300ac:	ldrdeq	r0, [r0], -r8
   300b0:	ldrdeq	r0, [r0], -r8
   300b4:	ldrdeq	r0, [r0], -r8
   300b8:	ldrdeq	r0, [r0], -r8
   300bc:	ldrdeq	r0, [r0], -r8
   300c0:	ldrdeq	r0, [r0], -r8
   300c4:	ldrdeq	r0, [r0], -r8
   300c8:	ldrdeq	r0, [r0], -r8
   300cc:	ldrdeq	r0, [r0], -r8
   300d0:	ldrdeq	r0, [r0], -r8
   300d4:	ldrdeq	r0, [r0], -r8
   300d8:	ldrdeq	r0, [r0], -r8
   300dc:	ldrdeq	r0, [r0], -r8
   300e0:	ldrdeq	r0, [r0], -r8
   300e4:	andeq	r0, r0, r0, lsr #2
   300e8:	ldrdeq	r0, [r0], -r8
   300ec:	ldrdeq	r0, [r0], -r8
   300f0:	ldrdeq	r0, [r0], -r8
   300f4:	ldrdeq	r0, [r0], -r8
   300f8:	ldrdeq	r0, [r0], -r8
   300fc:	ldrdeq	r0, [r0], -r8
   30100:	ldrdeq	r0, [r0], -r8
   30104:	ldrdeq	r0, [r0], -r8
   30108:	ldrdeq	r0, [r0], -r8
   3010c:	ldrdeq	r0, [r0], -r8
   30110:	ldrdeq	r0, [r0], -r8
   30114:	ldrdeq	r0, [r0], -r8
   30118:	ldrdeq	r0, [r0], -r8
   3011c:	ldrdeq	r0, [r0], -r8
   30120:	andeq	r0, r0, r0, asr #3
   30124:	ldrdeq	r0, [r0], -r8
   30128:	ldrdeq	r0, [r0], -r8
   3012c:	ldrdeq	r0, [r0], -r8
   30130:	ldrdeq	r0, [r0], -r8
   30134:	ldrdeq	r0, [r0], -r8
   30138:	ldrdeq	r0, [r0], -r8
   3013c:	ldrdeq	r0, [r0], -r8
   30140:	ldrdeq	r0, [r0], -r8
   30144:	ldrdeq	r0, [r0], -r8
   30148:	ldrdeq	r0, [r0], -r8
   3014c:	ldrdeq	r0, [r0], -r8
   30150:	ldrdeq	r0, [r0], -r8
   30154:	ldrdeq	r0, [r0], -r8
   30158:	ldrdeq	r0, [r0], -r8
   3015c:	andeq	r0, r0, r0, ror #4
   30160:	sub	r3, r2, #97	; 0x61
   30164:	uxtb	r3, r3
   30168:	cmp	r3, #26
   3016c:	bcc	30058 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x34>
   30170:	sub	r2, r2, #65	; 0x41
   30174:	uxtb	r2, r2
   30178:	cmp	r2, #26
   3017c:	bcc	30058 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x34>
   30180:	mov	r0, #5
   30184:	sub	r4, r4, #1
   30188:	str	r0, [r9, #160]	; 0xa0
   3018c:	mov	r0, r4
   30190:	sub	sp, fp, #24
   30194:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30198:	mov	r4, r0
   3019c:	mov	r0, r4
   301a0:	sub	sp, fp, #24
   301a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   301a8:	ldr	r8, [r7, #12]
   301ac:	ldr	r0, [r9, #192]	; 0xc0
   301b0:	sub	r0, r0, r8
   301b4:	add	r0, r0, r4
   301b8:	cmp	r0, #7
   301bc:	bne	30328 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x304>
   301c0:	mov	r0, r9
   301c4:	mov	r1, r8
   301c8:	mov	r2, #6
   301cc:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   301d0:	ldr	r1, [pc, #516]	; 303dc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3b8>
   301d4:	mov	r2, #6
   301d8:	add	r1, pc, r1
   301dc:	bl	11288 <mycore_strncasecmp@plt>
   301e0:	mov	r1, #5
   301e4:	cmp	r0, #0
   301e8:	bne	30238 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x214>
   301ec:	ldr	r0, [r9, #192]	; 0xc0
   301f0:	mov	r1, #64	; 0x40
   301f4:	mov	r2, r6
   301f8:	str	r1, [sp]
   301fc:	mov	r1, r7
   30200:	add	r0, r0, r4
   30204:	sub	r3, r0, #9
   30208:	mov	r0, r9
   3020c:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   30210:	cmp	r0, #0
   30214:	beq	303b0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x38c>
   30218:	mov	r1, #6
   3021c:	str	r8, [r0, #24]
   30220:	str	r1, [r0, #28]
   30224:	mov	r1, #1
   30228:	str	r1, [r0, #48]	; 0x30
   3022c:	mov	r1, #112	; 0x70
   30230:	str	r1, [r0]
   30234:	mov	r1, #33	; 0x21
   30238:	str	r1, [r9, #160]	; 0xa0
   3023c:	mov	r0, r4
   30240:	sub	sp, fp, #24
   30244:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30248:	ldr	r8, [r7, #12]
   3024c:	ldr	r0, [r9, #192]	; 0xc0
   30250:	sub	r0, r0, r8
   30254:	add	r0, r0, r4
   30258:	cmp	r0, #7
   3025c:	bne	30328 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x304>
   30260:	mov	r0, r9
   30264:	mov	r1, r8
   30268:	mov	r2, #6
   3026c:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   30270:	ldr	r1, [pc, #360]	; 303e0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3bc>
   30274:	mov	r2, #6
   30278:	add	r1, pc, r1
   3027c:	bl	11288 <mycore_strncasecmp@plt>
   30280:	mov	r1, #5
   30284:	cmp	r0, #0
   30288:	bne	302d8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2b4>
   3028c:	ldr	r0, [r9, #192]	; 0xc0
   30290:	mov	r1, #64	; 0x40
   30294:	mov	r2, r6
   30298:	str	r1, [sp]
   3029c:	mov	r1, r7
   302a0:	add	r0, r0, r4
   302a4:	sub	r3, r0, #9
   302a8:	mov	r0, r9
   302ac:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   302b0:	cmp	r0, #0
   302b4:	beq	303b0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x38c>
   302b8:	mov	r1, #6
   302bc:	str	r8, [r0, #24]
   302c0:	str	r1, [r0, #28]
   302c4:	mov	r1, #3
   302c8:	str	r1, [r0, #48]	; 0x30
   302cc:	mov	r1, #112	; 0x70
   302d0:	str	r1, [r0]
   302d4:	mov	r1, #33	; 0x21
   302d8:	str	r1, [r9, #160]	; 0xa0
   302dc:	mov	r0, r4
   302e0:	sub	sp, fp, #24
   302e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   302e8:	ldr	r8, [r7, #12]
   302ec:	ldr	r0, [r9, #192]	; 0xc0
   302f0:	sub	r0, r0, r8
   302f4:	add	r0, r0, r4
   302f8:	cmp	r0, #7
   302fc:	bne	30328 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x304>
   30300:	mov	r0, r9
   30304:	mov	r1, r8
   30308:	mov	r2, #6
   3030c:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   30310:	ldr	r1, [pc, #204]	; 303e4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3c0>
   30314:	mov	r2, #6
   30318:	add	r1, pc, r1
   3031c:	bl	11288 <mycore_strncasecmp@plt>
   30320:	cmp	r0, #0
   30324:	beq	3033c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x318>
   30328:	mov	r0, #5
   3032c:	str	r0, [r9, #160]	; 0xa0
   30330:	mov	r0, r4
   30334:	sub	sp, fp, #24
   30338:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3033c:	ldr	r0, [r9, #192]	; 0xc0
   30340:	mov	r1, #64	; 0x40
   30344:	mov	r2, r6
   30348:	str	r1, [sp]
   3034c:	mov	r1, r7
   30350:	add	r0, r0, r4
   30354:	sub	r3, r0, #9
   30358:	mov	r0, r9
   3035c:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   30360:	cmp	r0, #0
   30364:	beq	303b0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x38c>
   30368:	mov	r2, r0
   3036c:	mov	r0, #6
   30370:	str	r8, [r2, #24]
   30374:	str	r0, [r2, #28]
   30378:	mov	r0, #1
   3037c:	str	r0, [r2, #48]	; 0x30
   30380:	mov	r0, #112	; 0x70
   30384:	str	r0, [r2]
   30388:	ldr	r0, [r2, #32]
   3038c:	ldr	r1, [r9, #192]	; 0xc0
   30390:	sub	r0, r1, r0
   30394:	mov	r1, r4
   30398:	add	r0, r0, r4
   3039c:	str	r0, [r2, #36]	; 0x24
   303a0:	mov	r0, r9
   303a4:	bl	110e4 <myhtml_queue_add@plt>
   303a8:	cmp	r0, #0
   303ac:	beq	303c8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x3a4>
   303b0:	mov	r0, #69	; 0x45
   303b4:	mov	r4, #0
   303b8:	str	r0, [r9, #160]	; 0xa0
   303bc:	mov	r0, r4
   303c0:	sub	sp, fp, #24
   303c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   303c8:	mov	r0, #0
   303cc:	str	r0, [r9, #160]	; 0xa0
   303d0:	mov	r0, r4
   303d4:	sub	sp, fp, #24
   303d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   303dc:	andeq	r3, sp, fp, asr #9
   303e0:	andeq	r3, sp, fp, lsr #8
   303e4:	andeq	r3, sp, fp, lsl #7

000303e8 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   303e8:	ldrb	r1, [r2, r3]
   303ec:	cmp	r1, #45	; 0x2d
   303f0:	beq	30414 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   303f4:	cmp	r1, #60	; 0x3c
   303f8:	bne	30404 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x1c>
   303fc:	mov	r1, #24
   30400:	b	30410 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   30404:	cmp	r1, #62	; 0x3e
   30408:	movne	r1, #21
   3040c:	moveq	r1, #5
   30410:	str	r1, [r0, #160]	; 0xa0
   30414:	add	r0, r3, #1
   30418:	bx	lr

0003041c <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   3041c:	ldrb	r2, [r2, r3]
   30420:	cmp	r2, #47	; 0x2f
   30424:	moveq	r1, #25
   30428:	addeq	r3, r3, #1
   3042c:	streq	r1, [r0, #160]	; 0xa0
   30430:	moveq	r0, r3
   30434:	bxeq	lr
   30438:	and	r2, r2, #223	; 0xdf
   3043c:	sub	r2, r2, #65	; 0x41
   30440:	uxtb	r2, r2
   30444:	cmp	r2, #25
   30448:	bhi	30468 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x4c>
   3044c:	ldr	r2, [r0, #192]	; 0xc0
   30450:	add	r2, r2, r3
   30454:	str	r2, [r1, #12]
   30458:	mov	r1, #27
   3045c:	str	r1, [r0, #160]	; 0xa0
   30460:	mov	r0, r3
   30464:	bx	lr
   30468:	mov	r1, #21
   3046c:	str	r1, [r0, #160]	; 0xa0
   30470:	mov	r0, r3
   30474:	bx	lr

00030478 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   30478:	ldrb	r2, [r2, r3]
   3047c:	mov	ip, #21
   30480:	and	r2, r2, #223	; 0xdf
   30484:	sub	r2, r2, #65	; 0x41
   30488:	uxtb	r2, r2
   3048c:	cmp	r2, #25
   30490:	bhi	304a4 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base+0x2c>
   30494:	ldr	r2, [r0, #192]	; 0xc0
   30498:	mov	ip, #26
   3049c:	add	r2, r2, r3
   304a0:	str	r2, [r1, #12]
   304a4:	str	ip, [r0, #160]	; 0xa0
   304a8:	mov	r0, r3
   304ac:	bx	lr

000304b0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   304b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   304b4:	add	fp, sp, #24
   304b8:	sub	sp, sp, #8
   304bc:	mov	r9, r0
   304c0:	ldr	r0, [fp, #8]
   304c4:	mov	r4, r3
   304c8:	cmp	r3, r0
   304cc:	bcs	307bc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x30c>
   304d0:	mov	r7, r1
   304d4:	mov	r6, r2
   304d8:	rsb	r1, r0, #0
   304dc:	add	r4, r4, #1
   304e0:	b	304f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x44>
   304e4:	add	r4, r4, #1
   304e8:	add	r2, r1, r4
   304ec:	cmp	r2, #1
   304f0:	beq	30624 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x174>
   304f4:	add	r2, r6, r4
   304f8:	ldrb	r2, [r2, #-1]
   304fc:	sub	r3, r2, #9
   30500:	cmp	r3, #53	; 0x35
   30504:	bhi	305ec <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x13c>
   30508:	add	r5, pc, #4
   3050c:	ldr	r3, [r5, r3, lsl #2]
   30510:	add	pc, r5, r3
   30514:	andeq	r0, r0, r0, lsr #2
   30518:	andeq	r0, r0, r0, lsr #2
   3051c:	ldrdeq	r0, [r0], -r8
   30520:	andeq	r0, r0, r0, lsr #2
   30524:	andeq	r0, r0, r0, lsr #2
   30528:	ldrdeq	r0, [r0], -r8
   3052c:	ldrdeq	r0, [r0], -r8
   30530:	ldrdeq	r0, [r0], -r8
   30534:	ldrdeq	r0, [r0], -r8
   30538:	ldrdeq	r0, [r0], -r8
   3053c:	ldrdeq	r0, [r0], -r8
   30540:	ldrdeq	r0, [r0], -r8
   30544:	ldrdeq	r0, [r0], -r8
   30548:	ldrdeq	r0, [r0], -r8
   3054c:	ldrdeq	r0, [r0], -r8
   30550:	ldrdeq	r0, [r0], -r8
   30554:	ldrdeq	r0, [r0], -r8
   30558:	ldrdeq	r0, [r0], -r8
   3055c:	ldrdeq	r0, [r0], -r8
   30560:	ldrdeq	r0, [r0], -r8
   30564:	ldrdeq	r0, [r0], -r8
   30568:	ldrdeq	r0, [r0], -r8
   3056c:	ldrdeq	r0, [r0], -r8
   30570:	andeq	r0, r0, r0, lsr #2
   30574:	ldrdeq	r0, [r0], -r8
   30578:	ldrdeq	r0, [r0], -r8
   3057c:	ldrdeq	r0, [r0], -r8
   30580:	ldrdeq	r0, [r0], -r8
   30584:	ldrdeq	r0, [r0], -r8
   30588:	ldrdeq	r0, [r0], -r8
   3058c:	ldrdeq	r0, [r0], -r8
   30590:	ldrdeq	r0, [r0], -r8
   30594:	ldrdeq	r0, [r0], -r8
   30598:	ldrdeq	r0, [r0], -r8
   3059c:	ldrdeq	r0, [r0], -r8
   305a0:	ldrdeq	r0, [r0], -r8
   305a4:	ldrdeq	r0, [r0], -r8
   305a8:	ldrdeq	r0, [r0], -r8
   305ac:	andeq	r0, r0, r0, asr #3
   305b0:	ldrdeq	r0, [r0], -r8
   305b4:	ldrdeq	r0, [r0], -r8
   305b8:	ldrdeq	r0, [r0], -r8
   305bc:	ldrdeq	r0, [r0], -r8
   305c0:	ldrdeq	r0, [r0], -r8
   305c4:	ldrdeq	r0, [r0], -r8
   305c8:	ldrdeq	r0, [r0], -r8
   305cc:	ldrdeq	r0, [r0], -r8
   305d0:	ldrdeq	r0, [r0], -r8
   305d4:	ldrdeq	r0, [r0], -r8
   305d8:	ldrdeq	r0, [r0], -r8
   305dc:	ldrdeq	r0, [r0], -r8
   305e0:	ldrdeq	r0, [r0], -r8
   305e4:	ldrdeq	r0, [r0], -r8
   305e8:	andeq	r0, r0, r0, ror #4
   305ec:	sub	r3, r2, #97	; 0x61
   305f0:	uxtb	r3, r3
   305f4:	cmp	r3, #26
   305f8:	bcc	304e4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x34>
   305fc:	sub	r2, r2, #65	; 0x41
   30600:	uxtb	r2, r2
   30604:	cmp	r2, #26
   30608:	bcc	304e4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x34>
   3060c:	mov	r0, #21
   30610:	sub	r4, r4, #1
   30614:	str	r0, [r9, #160]	; 0xa0
   30618:	mov	r0, r4
   3061c:	sub	sp, fp, #24
   30620:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30624:	mov	r4, r0
   30628:	mov	r0, r4
   3062c:	sub	sp, fp, #24
   30630:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30634:	ldr	r8, [r7, #12]
   30638:	ldr	r0, [r9, #192]	; 0xc0
   3063c:	sub	r0, r0, r8
   30640:	add	r0, r0, r4
   30644:	cmp	r0, #7
   30648:	bne	307b4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x304>
   3064c:	mov	r0, r9
   30650:	mov	r1, r8
   30654:	mov	r2, #6
   30658:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   3065c:	ldr	r1, [pc, #504]	; 3085c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x3ac>
   30660:	mov	r2, #6
   30664:	add	r1, pc, r1
   30668:	bl	11288 <mycore_strncasecmp@plt>
   3066c:	mov	r1, #21
   30670:	cmp	r0, #0
   30674:	bne	306c4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x214>
   30678:	ldr	r0, [r9, #192]	; 0xc0
   3067c:	mov	r1, #64	; 0x40
   30680:	mov	r2, r6
   30684:	str	r1, [sp]
   30688:	mov	r1, r7
   3068c:	add	r0, r0, r4
   30690:	sub	r3, r0, #9
   30694:	mov	r0, r9
   30698:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   3069c:	cmp	r0, #0
   306a0:	beq	30844 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x394>
   306a4:	mov	r1, #6
   306a8:	str	r8, [r0, #24]
   306ac:	str	r1, [r0, #28]
   306b0:	mov	r1, #1
   306b4:	str	r1, [r0, #48]	; 0x30
   306b8:	mov	r1, #112	; 0x70
   306bc:	str	r1, [r0]
   306c0:	mov	r1, #33	; 0x21
   306c4:	str	r1, [r9, #160]	; 0xa0
   306c8:	mov	r0, r4
   306cc:	sub	sp, fp, #24
   306d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   306d4:	ldr	r8, [r7, #12]
   306d8:	ldr	r0, [r9, #192]	; 0xc0
   306dc:	sub	r0, r0, r8
   306e0:	add	r0, r0, r4
   306e4:	cmp	r0, #7
   306e8:	bne	307b4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x304>
   306ec:	mov	r0, r9
   306f0:	mov	r1, r8
   306f4:	mov	r2, #6
   306f8:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   306fc:	ldr	r1, [pc, #348]	; 30860 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x3b0>
   30700:	mov	r2, #6
   30704:	add	r1, pc, r1
   30708:	bl	11288 <mycore_strncasecmp@plt>
   3070c:	mov	r1, #21
   30710:	cmp	r0, #0
   30714:	bne	30764 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2b4>
   30718:	ldr	r0, [r9, #192]	; 0xc0
   3071c:	mov	r1, #64	; 0x40
   30720:	mov	r2, r6
   30724:	str	r1, [sp]
   30728:	mov	r1, r7
   3072c:	add	r0, r0, r4
   30730:	sub	r3, r0, #9
   30734:	mov	r0, r9
   30738:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   3073c:	cmp	r0, #0
   30740:	beq	30844 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x394>
   30744:	mov	r1, #6
   30748:	str	r8, [r0, #24]
   3074c:	str	r1, [r0, #28]
   30750:	mov	r1, #3
   30754:	str	r1, [r0, #48]	; 0x30
   30758:	mov	r1, #112	; 0x70
   3075c:	str	r1, [r0]
   30760:	mov	r1, #33	; 0x21
   30764:	str	r1, [r9, #160]	; 0xa0
   30768:	mov	r0, r4
   3076c:	sub	sp, fp, #24
   30770:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30774:	ldr	r8, [r7, #12]
   30778:	ldr	r0, [r9, #192]	; 0xc0
   3077c:	sub	r0, r0, r8
   30780:	add	r0, r0, r4
   30784:	cmp	r0, #7
   30788:	bne	307b4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x304>
   3078c:	mov	r0, r9
   30790:	mov	r1, r8
   30794:	mov	r2, #6
   30798:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   3079c:	ldr	r1, [pc, #192]	; 30864 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x3b4>
   307a0:	mov	r2, #6
   307a4:	add	r1, pc, r1
   307a8:	bl	11288 <mycore_strncasecmp@plt>
   307ac:	cmp	r0, #0
   307b0:	beq	307c8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x318>
   307b4:	mov	r0, #21
   307b8:	str	r0, [r9, #160]	; 0xa0
   307bc:	mov	r0, r4
   307c0:	sub	sp, fp, #24
   307c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   307c8:	ldr	r0, [r9, #192]	; 0xc0
   307cc:	mov	r1, #64	; 0x40
   307d0:	mov	r2, r6
   307d4:	str	r1, [sp]
   307d8:	mov	r1, r7
   307dc:	add	r0, r0, r4
   307e0:	sub	r3, r0, #9
   307e4:	mov	r0, r9
   307e8:	bl	119b4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   307ec:	cmp	r0, #0
   307f0:	beq	30844 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x394>
   307f4:	mov	r2, r0
   307f8:	mov	r0, #6
   307fc:	str	r8, [r2, #24]
   30800:	str	r0, [r2, #28]
   30804:	mov	r0, #1
   30808:	str	r0, [r2, #48]	; 0x30
   3080c:	mov	r0, #112	; 0x70
   30810:	str	r0, [r2]
   30814:	mov	r0, #0
   30818:	str	r0, [r9, #160]	; 0xa0
   3081c:	ldr	r0, [r9, #192]	; 0xc0
   30820:	ldr	r1, [r2, #32]
   30824:	sub	r0, r0, r1
   30828:	mov	r1, r4
   3082c:	add	r0, r0, r4
   30830:	str	r0, [r2, #36]	; 0x24
   30834:	mov	r0, r9
   30838:	bl	110e4 <myhtml_queue_add@plt>
   3083c:	cmp	r0, #0
   30840:	beq	307bc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x30c>
   30844:	mov	r0, #69	; 0x45
   30848:	mov	r4, #0
   3084c:	str	r0, [r9, #160]	; 0xa0
   30850:	mov	r0, r4
   30854:	sub	sp, fp, #24
   30858:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3085c:	andeq	r3, sp, pc, lsr r0
   30860:	muleq	sp, pc, pc	; <UNPREDICTABLE>
   30864:	strdeq	r2, [sp], -pc	; <UNPREDICTABLE>

00030868 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   30868:	ldr	ip, [sp]
   3086c:	cmp	r3, ip
   30870:	bcs	30898 <myhtml_tokenizer_state_script_data_escaped@@Base+0x30>
   30874:	ldrb	r1, [r2, r3]
   30878:	cmp	r1, #60	; 0x3c
   3087c:	beq	308a0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x38>
   30880:	cmp	r1, #45	; 0x2d
   30884:	beq	308b4 <myhtml_tokenizer_state_script_data_escaped@@Base+0x4c>
   30888:	add	r3, r3, #1
   3088c:	cmp	ip, r3
   30890:	bne	30874 <myhtml_tokenizer_state_script_data_escaped@@Base+0xc>
   30894:	mov	r3, ip
   30898:	mov	r0, r3
   3089c:	bx	lr
   308a0:	mov	r1, #24
   308a4:	add	r3, r3, #1
   308a8:	str	r1, [r0, #160]	; 0xa0
   308ac:	mov	r0, r3
   308b0:	bx	lr
   308b4:	mov	r1, #22
   308b8:	add	r3, r3, #1
   308bc:	str	r1, [r0, #160]	; 0xa0
   308c0:	mov	r0, r3
   308c4:	bx	lr

000308c8 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   308c8:	ldrb	r1, [r2, r3]
   308cc:	cmp	r1, #60	; 0x3c
   308d0:	beq	30904 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   308d4:	cmp	r1, #45	; 0x2d
   308d8:	moveq	r1, #23
   308dc:	addeq	r3, r3, #1
   308e0:	streq	r1, [r0, #160]	; 0xa0
   308e4:	moveq	r0, r3
   308e8:	bxeq	lr
   308ec:	cmp	r1, #0
   308f0:	mov	r2, #21
   308f4:	addne	r3, r3, #1
   308f8:	str	r2, [r0, #160]	; 0xa0
   308fc:	mov	r0, r3
   30900:	bx	lr
   30904:	mov	r1, #24
   30908:	str	r1, [r0, #160]	; 0xa0
   3090c:	mov	r0, r3
   30910:	bx	lr

00030914 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   30914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30918:	add	fp, sp, #24
   3091c:	mov	r8, r0
   30920:	ldr	r0, [fp, #8]
   30924:	mov	r4, r3
   30928:	cmp	r3, r0
   3092c:	bcs	30ac8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1b4>
   30930:	rsb	r3, r0, #0
   30934:	add	r4, r4, #1
   30938:	b	3094c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x38>
   3093c:	add	r4, r4, #1
   30940:	add	r7, r3, r4
   30944:	cmp	r7, #1
   30948:	beq	30ac4 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1b0>
   3094c:	add	r6, r2, r4
   30950:	ldrb	r5, [r6, #-1]
   30954:	sub	r6, r5, #9
   30958:	cmp	r6, #53	; 0x35
   3095c:	bhi	30a44 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x130>
   30960:	add	r7, pc, #4
   30964:	ldr	r6, [r7, r6, lsl #2]
   30968:	add	pc, r7, r6
   3096c:	andeq	r0, r0, ip, lsl #2
   30970:	andeq	r0, r0, ip, lsl #2
   30974:	ldrdeq	r0, [r0], -r8
   30978:	andeq	r0, r0, ip, lsl #2
   3097c:	andeq	r0, r0, ip, lsl #2
   30980:	ldrdeq	r0, [r0], -r8
   30984:	ldrdeq	r0, [r0], -r8
   30988:	ldrdeq	r0, [r0], -r8
   3098c:	ldrdeq	r0, [r0], -r8
   30990:	ldrdeq	r0, [r0], -r8
   30994:	ldrdeq	r0, [r0], -r8
   30998:	ldrdeq	r0, [r0], -r8
   3099c:	ldrdeq	r0, [r0], -r8
   309a0:	ldrdeq	r0, [r0], -r8
   309a4:	ldrdeq	r0, [r0], -r8
   309a8:	ldrdeq	r0, [r0], -r8
   309ac:	ldrdeq	r0, [r0], -r8
   309b0:	ldrdeq	r0, [r0], -r8
   309b4:	ldrdeq	r0, [r0], -r8
   309b8:	ldrdeq	r0, [r0], -r8
   309bc:	ldrdeq	r0, [r0], -r8
   309c0:	ldrdeq	r0, [r0], -r8
   309c4:	ldrdeq	r0, [r0], -r8
   309c8:	andeq	r0, r0, ip, lsl #2
   309cc:	ldrdeq	r0, [r0], -r8
   309d0:	ldrdeq	r0, [r0], -r8
   309d4:	ldrdeq	r0, [r0], -r8
   309d8:	ldrdeq	r0, [r0], -r8
   309dc:	ldrdeq	r0, [r0], -r8
   309e0:	ldrdeq	r0, [r0], -r8
   309e4:	ldrdeq	r0, [r0], -r8
   309e8:	ldrdeq	r0, [r0], -r8
   309ec:	ldrdeq	r0, [r0], -r8
   309f0:	ldrdeq	r0, [r0], -r8
   309f4:	ldrdeq	r0, [r0], -r8
   309f8:	ldrdeq	r0, [r0], -r8
   309fc:	ldrdeq	r0, [r0], -r8
   30a00:	ldrdeq	r0, [r0], -r8
   30a04:	andeq	r0, r0, ip, lsl #2
   30a08:	ldrdeq	r0, [r0], -r8
   30a0c:	ldrdeq	r0, [r0], -r8
   30a10:	ldrdeq	r0, [r0], -r8
   30a14:	ldrdeq	r0, [r0], -r8
   30a18:	ldrdeq	r0, [r0], -r8
   30a1c:	ldrdeq	r0, [r0], -r8
   30a20:	ldrdeq	r0, [r0], -r8
   30a24:	ldrdeq	r0, [r0], -r8
   30a28:	ldrdeq	r0, [r0], -r8
   30a2c:	ldrdeq	r0, [r0], -r8
   30a30:	ldrdeq	r0, [r0], -r8
   30a34:	ldrdeq	r0, [r0], -r8
   30a38:	ldrdeq	r0, [r0], -r8
   30a3c:	ldrdeq	r0, [r0], -r8
   30a40:	andeq	r0, r0, ip, lsl #2
   30a44:	sub	r7, r5, #97	; 0x61
   30a48:	uxtb	r7, r7
   30a4c:	cmp	r7, #26
   30a50:	bcc	3093c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x28>
   30a54:	sub	r7, r5, #65	; 0x41
   30a58:	uxtb	r7, r7
   30a5c:	cmp	r7, #26
   30a60:	bcc	3093c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x28>
   30a64:	mov	r0, #21
   30a68:	sub	r4, r4, #1
   30a6c:	str	r0, [r8, #160]	; 0xa0
   30a70:	mov	r0, r4
   30a74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30a78:	ldr	r1, [r1, #12]
   30a7c:	ldr	r0, [r8, #192]	; 0xc0
   30a80:	sub	r0, r0, r1
   30a84:	add	r0, r0, r4
   30a88:	cmp	r0, #7
   30a8c:	bne	30ad0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1bc>
   30a90:	mov	r0, r8
   30a94:	mov	r2, #6
   30a98:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   30a9c:	ldr	r1, [pc, #60]	; 30ae0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1cc>
   30aa0:	mov	r2, #6
   30aa4:	add	r1, pc, r1
   30aa8:	bl	11288 <mycore_strncasecmp@plt>
   30aac:	cmp	r0, #0
   30ab0:	mov	r1, #21
   30ab4:	mov	r0, r4
   30ab8:	movweq	r1, #28
   30abc:	str	r1, [r8, #160]	; 0xa0
   30ac0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30ac4:	mov	r4, r0
   30ac8:	mov	r0, r4
   30acc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30ad0:	mov	r0, #21
   30ad4:	str	r0, [r8, #160]	; 0xa0
   30ad8:	mov	r0, r4
   30adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30ae0:	strdeq	r2, [sp], -pc	; <UNPREDICTABLE>

00030ae4 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   30ae4:	ldr	ip, [sp]
   30ae8:	cmp	r3, ip
   30aec:	bcs	30b14 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x30>
   30af0:	ldrb	r1, [r2, r3]
   30af4:	cmp	r1, #60	; 0x3c
   30af8:	beq	30b1c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x38>
   30afc:	cmp	r1, #45	; 0x2d
   30b00:	beq	30b30 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x4c>
   30b04:	add	r3, r3, #1
   30b08:	cmp	ip, r3
   30b0c:	bne	30af0 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0xc>
   30b10:	mov	r3, ip
   30b14:	mov	r0, r3
   30b18:	bx	lr
   30b1c:	mov	r1, #31
   30b20:	add	r3, r3, #1
   30b24:	str	r1, [r0, #160]	; 0xa0
   30b28:	mov	r0, r3
   30b2c:	bx	lr
   30b30:	mov	r1, #29
   30b34:	add	r3, r3, #1
   30b38:	str	r1, [r0, #160]	; 0xa0
   30b3c:	mov	r0, r3
   30b40:	bx	lr

00030b44 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   30b44:	ldrb	r1, [r2, r3]
   30b48:	cmp	r1, #45	; 0x2d
   30b4c:	bne	30b60 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x1c>
   30b50:	mov	r1, #30
   30b54:	str	r1, [r0, #160]	; 0xa0
   30b58:	add	r0, r3, #1
   30b5c:	bx	lr
   30b60:	cmp	r1, #60	; 0x3c
   30b64:	movne	r1, #28
   30b68:	moveq	r1, #31
   30b6c:	str	r1, [r0, #160]	; 0xa0
   30b70:	add	r0, r3, #1
   30b74:	bx	lr

00030b78 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   30b78:	ldrb	r1, [r2, r3]
   30b7c:	cmp	r1, #45	; 0x2d
   30b80:	beq	30ba4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   30b84:	cmp	r1, #60	; 0x3c
   30b88:	bne	30b94 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x1c>
   30b8c:	mov	r1, #31
   30b90:	b	30ba0 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   30b94:	cmp	r1, #62	; 0x3e
   30b98:	movne	r1, #28
   30b9c:	moveq	r1, #5
   30ba0:	str	r1, [r0, #160]	; 0xa0
   30ba4:	add	r0, r3, #1
   30ba8:	bx	lr

00030bac <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   30bac:	ldrb	r2, [r2, r3]
   30bb0:	cmp	r2, #47	; 0x2f
   30bb4:	movne	r1, #28
   30bb8:	strne	r1, [r0, #160]	; 0xa0
   30bbc:	movne	r0, r3
   30bc0:	bxne	lr
   30bc4:	mov	r2, #32
   30bc8:	add	r3, r3, #1
   30bcc:	str	r2, [r0, #160]	; 0xa0
   30bd0:	ldr	r0, [r0, #192]	; 0xc0
   30bd4:	add	r0, r0, r3
   30bd8:	str	r0, [r1, #12]
   30bdc:	mov	r0, r3
   30be0:	bx	lr

00030be4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   30be4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30be8:	add	fp, sp, #24
   30bec:	mov	r8, r0
   30bf0:	ldr	r0, [fp, #8]
   30bf4:	mov	r4, r3
   30bf8:	cmp	r3, r0
   30bfc:	bcs	30d98 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1b4>
   30c00:	rsb	r3, r0, #0
   30c04:	add	r4, r4, #1
   30c08:	b	30c1c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x38>
   30c0c:	add	r4, r4, #1
   30c10:	add	r7, r3, r4
   30c14:	cmp	r7, #1
   30c18:	beq	30d94 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1b0>
   30c1c:	add	r6, r2, r4
   30c20:	ldrb	r5, [r6, #-1]
   30c24:	sub	r6, r5, #9
   30c28:	cmp	r6, #53	; 0x35
   30c2c:	bhi	30d14 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x130>
   30c30:	add	r7, pc, #4
   30c34:	ldr	r6, [r7, r6, lsl #2]
   30c38:	add	pc, r7, r6
   30c3c:	andeq	r0, r0, ip, lsl #2
   30c40:	andeq	r0, r0, ip, lsl #2
   30c44:	ldrdeq	r0, [r0], -r8
   30c48:	andeq	r0, r0, ip, lsl #2
   30c4c:	andeq	r0, r0, ip, lsl #2
   30c50:	ldrdeq	r0, [r0], -r8
   30c54:	ldrdeq	r0, [r0], -r8
   30c58:	ldrdeq	r0, [r0], -r8
   30c5c:	ldrdeq	r0, [r0], -r8
   30c60:	ldrdeq	r0, [r0], -r8
   30c64:	ldrdeq	r0, [r0], -r8
   30c68:	ldrdeq	r0, [r0], -r8
   30c6c:	ldrdeq	r0, [r0], -r8
   30c70:	ldrdeq	r0, [r0], -r8
   30c74:	ldrdeq	r0, [r0], -r8
   30c78:	ldrdeq	r0, [r0], -r8
   30c7c:	ldrdeq	r0, [r0], -r8
   30c80:	ldrdeq	r0, [r0], -r8
   30c84:	ldrdeq	r0, [r0], -r8
   30c88:	ldrdeq	r0, [r0], -r8
   30c8c:	ldrdeq	r0, [r0], -r8
   30c90:	ldrdeq	r0, [r0], -r8
   30c94:	ldrdeq	r0, [r0], -r8
   30c98:	andeq	r0, r0, ip, lsl #2
   30c9c:	ldrdeq	r0, [r0], -r8
   30ca0:	ldrdeq	r0, [r0], -r8
   30ca4:	ldrdeq	r0, [r0], -r8
   30ca8:	ldrdeq	r0, [r0], -r8
   30cac:	ldrdeq	r0, [r0], -r8
   30cb0:	ldrdeq	r0, [r0], -r8
   30cb4:	ldrdeq	r0, [r0], -r8
   30cb8:	ldrdeq	r0, [r0], -r8
   30cbc:	ldrdeq	r0, [r0], -r8
   30cc0:	ldrdeq	r0, [r0], -r8
   30cc4:	ldrdeq	r0, [r0], -r8
   30cc8:	ldrdeq	r0, [r0], -r8
   30ccc:	ldrdeq	r0, [r0], -r8
   30cd0:	ldrdeq	r0, [r0], -r8
   30cd4:	andeq	r0, r0, ip, lsl #2
   30cd8:	ldrdeq	r0, [r0], -r8
   30cdc:	ldrdeq	r0, [r0], -r8
   30ce0:	ldrdeq	r0, [r0], -r8
   30ce4:	ldrdeq	r0, [r0], -r8
   30ce8:	ldrdeq	r0, [r0], -r8
   30cec:	ldrdeq	r0, [r0], -r8
   30cf0:	ldrdeq	r0, [r0], -r8
   30cf4:	ldrdeq	r0, [r0], -r8
   30cf8:	ldrdeq	r0, [r0], -r8
   30cfc:	ldrdeq	r0, [r0], -r8
   30d00:	ldrdeq	r0, [r0], -r8
   30d04:	ldrdeq	r0, [r0], -r8
   30d08:	ldrdeq	r0, [r0], -r8
   30d0c:	ldrdeq	r0, [r0], -r8
   30d10:	andeq	r0, r0, ip, lsl #2
   30d14:	sub	r7, r5, #97	; 0x61
   30d18:	uxtb	r7, r7
   30d1c:	cmp	r7, #26
   30d20:	bcc	30c0c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x28>
   30d24:	sub	r7, r5, #65	; 0x41
   30d28:	uxtb	r7, r7
   30d2c:	cmp	r7, #26
   30d30:	bcc	30c0c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x28>
   30d34:	mov	r0, #28
   30d38:	sub	r4, r4, #1
   30d3c:	str	r0, [r8, #160]	; 0xa0
   30d40:	mov	r0, r4
   30d44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30d48:	ldr	r1, [r1, #12]
   30d4c:	ldr	r0, [r8, #192]	; 0xc0
   30d50:	sub	r0, r0, r1
   30d54:	add	r0, r0, r4
   30d58:	cmp	r0, #7
   30d5c:	bne	30da0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1bc>
   30d60:	mov	r0, r8
   30d64:	mov	r2, #6
   30d68:	bl	10f88 <myhtml_tree_incomming_buffer_make_data@plt>
   30d6c:	ldr	r1, [pc, #60]	; 30db0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1cc>
   30d70:	mov	r2, #6
   30d74:	add	r1, pc, r1
   30d78:	bl	11288 <mycore_strncasecmp@plt>
   30d7c:	cmp	r0, #0
   30d80:	mov	r1, #28
   30d84:	mov	r0, r4
   30d88:	movweq	r1, #21
   30d8c:	str	r1, [r8, #160]	; 0xa0
   30d90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30d94:	mov	r4, r0
   30d98:	mov	r0, r4
   30d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30da0:	mov	r0, #28
   30da4:	str	r0, [r8, #160]	; 0xa0
   30da8:	mov	r0, r4
   30dac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30db0:	andeq	r2, sp, pc, lsr #18

00030db4 <myhtml_tree_create@@Base>:
   30db4:	mov	r0, #1
   30db8:	mov	r1, #252	; 0xfc
   30dbc:	b	11000 <mycore_calloc@plt>

00030dc0 <myhtml_tree_init@@Base>:
   30dc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30dc4:	add	fp, sp, #24
   30dc8:	sub	sp, sp, #8
   30dcc:	mov	r6, #0
   30dd0:	mov	r5, r1
   30dd4:	mov	r4, r0
   30dd8:	str	r6, [sp, #4]
   30ddc:	str	r1, [r0]
   30de0:	mov	r1, #512	; 0x200
   30de4:	bl	11c24 <myhtml_token_create@plt>
   30de8:	cmp	r0, #0
   30dec:	str	r0, [r4, #8]
   30df0:	beq	310a4 <myhtml_tree_init@@Base+0x2e4>
   30df4:	vmov.i32	q8, #0	; 0x00000000
   30df8:	add	r0, r4, #220	; 0xdc
   30dfc:	str	r6, [r4, #184]	; 0xb8
   30e00:	str	r6, [r4, #148]	; 0x94
   30e04:	str	r6, [r4, #208]	; 0xd0
   30e08:	str	r6, [r4, #36]	; 0x24
   30e0c:	vst1.32	{d16-d17}, [r0]
   30e10:	add	r0, r4, #236	; 0xec
   30e14:	vst1.32	{d16-d17}, [r0]
   30e18:	bl	11840 <mythread_queue_create@plt>
   30e1c:	cmp	r0, #0
   30e20:	str	r0, [r4, #24]
   30e24:	beq	310b4 <myhtml_tree_init@@Base+0x2f4>
   30e28:	movw	r1, #9182	; 0x23de
   30e2c:	bl	1157c <mythread_queue_init@plt>
   30e30:	mov	r6, r0
   30e34:	cmp	r0, #0
   30e38:	str	r0, [sp, #4]
   30e3c:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   30e40:	bl	110d8 <mcobject_create@plt>
   30e44:	cmp	r0, #0
   30e48:	str	r0, [r4, #72]	; 0x48
   30e4c:	beq	310c4 <myhtml_tree_init@@Base+0x304>
   30e50:	mov	r1, #256	; 0x100
   30e54:	mov	r2, #24
   30e58:	bl	1160c <mcobject_init@plt>
   30e5c:	mov	r6, r0
   30e60:	cmp	r0, #0
   30e64:	str	r0, [sp, #4]
   30e68:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   30e6c:	bl	10ebc <mcobject_async_create@plt>
   30e70:	cmp	r0, #0
   30e74:	str	r0, [r4, #12]
   30e78:	beq	310d4 <myhtml_tree_init@@Base+0x314>
   30e7c:	mov	r1, #128	; 0x80
   30e80:	mov	r2, #1024	; 0x400
   30e84:	mov	r3, #44	; 0x2c
   30e88:	mov	r8, #1024	; 0x400
   30e8c:	bl	10e20 <mcobject_async_init@plt>
   30e90:	movw	r6, #37366	; 0x91f6
   30e94:	cmp	r0, #0
   30e98:	str	r0, [sp]
   30e9c:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   30ea0:	bl	111b0 <mchar_async_create@plt>
   30ea4:	str	r0, [r4, #4]
   30ea8:	mov	r0, #12
   30eac:	bl	119a8 <mycore_malloc@plt>
   30eb0:	mov	r9, #0
   30eb4:	mov	r7, #4096	; 0x1000
   30eb8:	mov	r6, r0
   30ebc:	str	r9, [r0, #4]
   30ec0:	str	r7, [r0, #8]
   30ec4:	mov	r0, #16384	; 0x4000
   30ec8:	bl	119a8 <mycore_malloc@plt>
   30ecc:	str	r0, [r6]
   30ed0:	mov	r0, #12
   30ed4:	str	r6, [r4, #124]	; 0x7c
   30ed8:	bl	119a8 <mycore_malloc@plt>
   30edc:	str	r9, [r0, #4]
   30ee0:	mov	r6, r0
   30ee4:	str	r7, [r0, #8]
   30ee8:	mov	r0, #16384	; 0x4000
   30eec:	bl	119a8 <mycore_malloc@plt>
   30ef0:	str	r0, [r6]
   30ef4:	mov	r0, #12
   30ef8:	str	r6, [r4, #128]	; 0x80
   30efc:	bl	119a8 <mycore_malloc@plt>
   30f00:	str	r9, [r0, #4]
   30f04:	mov	r6, r0
   30f08:	str	r7, [r0, #8]
   30f0c:	mov	r0, #16384	; 0x4000
   30f10:	bl	119a8 <mycore_malloc@plt>
   30f14:	str	r0, [r6]
   30f18:	mov	r0, #12
   30f1c:	str	r6, [r4, #132]	; 0x84
   30f20:	bl	119a8 <mycore_malloc@plt>
   30f24:	str	r9, [r0, #4]
   30f28:	mov	r6, r0
   30f2c:	str	r7, [r0, #8]
   30f30:	mov	r0, #16384	; 0x4000
   30f34:	bl	119a8 <mycore_malloc@plt>
   30f38:	str	r0, [r6]
   30f3c:	mov	r0, #12
   30f40:	str	r6, [r4, #136]	; 0x88
   30f44:	bl	119a8 <mycore_malloc@plt>
   30f48:	str	r9, [r0, #4]
   30f4c:	mov	r6, r0
   30f50:	str	r8, [r0, #8]
   30f54:	mov	r0, #4096	; 0x1000
   30f58:	bl	119a8 <mycore_malloc@plt>
   30f5c:	str	r0, [r6]
   30f60:	str	r6, [r4, #140]	; 0x8c
   30f64:	ldr	r0, [r4, #4]
   30f68:	cmp	r0, #0
   30f6c:	beq	310b4 <myhtml_tree_init@@Base+0x2f4>
   30f70:	mov	r1, #128	; 0x80
   30f74:	mov	r2, #20480	; 0x5000
   30f78:	bl	113fc <mchar_async_init@plt>
   30f7c:	mov	r6, r0
   30f80:	cmp	r0, #0
   30f84:	str	r0, [sp, #4]
   30f88:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   30f8c:	ldr	r0, [r4, #12]
   30f90:	mov	r1, sp
   30f94:	bl	1184c <mcobject_async_node_add@plt>
   30f98:	str	r0, [r4, #48]	; 0x30
   30f9c:	movw	r6, #37367	; 0x91f7
   30fa0:	ldr	r0, [sp]
   30fa4:	cmp	r0, #0
   30fa8:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   30fac:	ldr	r0, [r4, #8]
   30fb0:	mov	r1, sp
   30fb4:	ldr	r0, [r0, #4]
   30fb8:	bl	1184c <mcobject_async_node_add@plt>
   30fbc:	str	r0, [r4, #40]	; 0x28
   30fc0:	ldr	r0, [sp]
   30fc4:	cmp	r0, #0
   30fc8:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   30fcc:	ldr	r0, [r4, #8]
   30fd0:	mov	r1, sp
   30fd4:	ldr	r0, [r0, #8]
   30fd8:	bl	1184c <mcobject_async_node_add@plt>
   30fdc:	str	r0, [r4, #44]	; 0x2c
   30fe0:	ldr	r0, [sp]
   30fe4:	cmp	r0, #0
   30fe8:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   30fec:	ldr	r0, [r5, #20]
   30ff0:	mov	r1, #4
   30ff4:	bl	11000 <mycore_calloc@plt>
   30ff8:	cmp	r0, #0
   30ffc:	str	r0, [r4, #144]	; 0x90
   31000:	beq	310b4 <myhtml_tree_init@@Base+0x2f4>
   31004:	ldr	r1, [r5, #20]
   31008:	cmp	r1, #0
   3100c:	beq	3104c <myhtml_tree_init@@Base+0x28c>
   31010:	mov	r7, #0
   31014:	add	r8, sp, #4
   31018:	ldr	r0, [r4, #4]
   3101c:	mov	r1, r8
   31020:	bl	1127c <mchar_async_node_add@plt>
   31024:	mov	r1, r0
   31028:	ldr	r0, [r4, #144]	; 0x90
   3102c:	str	r1, [r0, r7, lsl #2]
   31030:	ldr	r6, [sp, #4]
   31034:	cmp	r6, #0
   31038:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   3103c:	ldr	r1, [r5, #20]
   31040:	add	r7, r7, #1
   31044:	cmp	r7, r1
   31048:	bcc	31018 <myhtml_tree_init@@Base+0x258>
   3104c:	ldr	r0, [r0]
   31050:	str	r0, [r4, #52]	; 0x34
   31054:	bl	10ef8 <mcsync_create@plt>
   31058:	cmp	r0, #0
   3105c:	str	r0, [r4, #16]
   31060:	beq	310b4 <myhtml_tree_init@@Base+0x2f4>
   31064:	bl	1169c <mcsync_init@plt>
   31068:	cmp	r0, #0
   3106c:	mov	r6, #2
   31070:	bne	310a8 <myhtml_tree_init@@Base+0x2e8>
   31074:	bl	11a14 <myhtml_tag_create@plt>
   31078:	mov	r1, r0
   3107c:	str	r0, [r4, #28]
   31080:	mov	r0, r4
   31084:	bl	118d0 <myhtml_tag_init@plt>
   31088:	str	r0, [sp, #4]
   3108c:	mov	r0, r4
   31090:	bl	11594 <myhtml_tree_clean@plt>
   31094:	ldr	r6, [sp, #4]
   31098:	mov	r0, r6
   3109c:	sub	sp, fp, #24
   310a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   310a4:	movw	r6, #37164	; 0x912c
   310a8:	mov	r0, r6
   310ac:	sub	sp, fp, #24
   310b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   310b4:	mov	r6, #2
   310b8:	mov	r0, r6
   310bc:	sub	sp, fp, #24
   310c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   310c4:	movw	r6, #37368	; 0x91f8
   310c8:	mov	r0, r6
   310cc:	sub	sp, fp, #24
   310d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   310d4:	movw	r6, #37365	; 0x91f5
   310d8:	mov	r0, r6
   310dc:	sub	sp, fp, #24
   310e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000310e4 <myhtml_tree_active_formatting_init@@Base>:
   310e4:	push	{r4, sl, fp, lr}
   310e8:	add	fp, sp, #8
   310ec:	mov	r0, #12
   310f0:	bl	119a8 <mycore_malloc@plt>
   310f4:	mov	r4, r0
   310f8:	mov	r0, #0
   310fc:	str	r0, [r4, #4]
   31100:	mov	r0, #4096	; 0x1000
   31104:	str	r0, [r4, #8]
   31108:	mov	r0, #16384	; 0x4000
   3110c:	bl	119a8 <mycore_malloc@plt>
   31110:	str	r0, [r4]
   31114:	mov	r0, r4
   31118:	pop	{r4, sl, fp, pc}

0003111c <myhtml_tree_open_elements_init@@Base>:
   3111c:	push	{r4, sl, fp, lr}
   31120:	add	fp, sp, #8
   31124:	mov	r0, #12
   31128:	bl	119a8 <mycore_malloc@plt>
   3112c:	mov	r4, r0
   31130:	mov	r0, #0
   31134:	str	r0, [r4, #4]
   31138:	mov	r0, #4096	; 0x1000
   3113c:	str	r0, [r4, #8]
   31140:	mov	r0, #16384	; 0x4000
   31144:	bl	119a8 <mycore_malloc@plt>
   31148:	str	r0, [r4]
   3114c:	mov	r0, r4
   31150:	pop	{r4, sl, fp, pc}

00031154 <myhtml_tree_list_init@@Base>:
   31154:	push	{r4, sl, fp, lr}
   31158:	add	fp, sp, #8
   3115c:	mov	r0, #12
   31160:	bl	119a8 <mycore_malloc@plt>
   31164:	mov	r4, r0
   31168:	mov	r0, #0
   3116c:	str	r0, [r4, #4]
   31170:	mov	r0, #4096	; 0x1000
   31174:	str	r0, [r4, #8]
   31178:	mov	r0, #16384	; 0x4000
   3117c:	bl	119a8 <mycore_malloc@plt>
   31180:	str	r0, [r4]
   31184:	mov	r0, r4
   31188:	pop	{r4, sl, fp, pc}

0003118c <myhtml_tree_token_list_init@@Base>:
   3118c:	push	{r4, sl, fp, lr}
   31190:	add	fp, sp, #8
   31194:	mov	r0, #12
   31198:	bl	119a8 <mycore_malloc@plt>
   3119c:	mov	r4, r0
   311a0:	mov	r1, #0
   311a4:	mov	r0, #4096	; 0x1000
   311a8:	str	r1, [r4, #4]
   311ac:	str	r0, [r4, #8]
   311b0:	mov	r0, #16384	; 0x4000
   311b4:	bl	119a8 <mycore_malloc@plt>
   311b8:	str	r0, [r4]
   311bc:	mov	r0, r4
   311c0:	pop	{r4, sl, fp, pc}

000311c4 <myhtml_tree_template_insertion_init@@Base>:
   311c4:	push	{r4, r5, fp, lr}
   311c8:	add	fp, sp, #8
   311cc:	mov	r4, r0
   311d0:	mov	r0, #12
   311d4:	bl	119a8 <mycore_malloc@plt>
   311d8:	mov	r5, r0
   311dc:	mov	r1, #0
   311e0:	mov	r0, #1024	; 0x400
   311e4:	str	r1, [r5, #4]
   311e8:	str	r0, [r5, #8]
   311ec:	mov	r0, #4096	; 0x1000
   311f0:	bl	119a8 <mycore_malloc@plt>
   311f4:	str	r0, [r5]
   311f8:	mov	r0, r5
   311fc:	str	r5, [r4, #140]	; 0x8c
   31200:	pop	{r4, r5, fp, pc}

00031204 <myhtml_tree_clean@@Base>:
   31204:	push	{r4, r5, r6, r7, fp, lr}
   31208:	add	fp, sp, #16
   3120c:	vpush	{d8-d9}
   31210:	ldr	r5, [r0]
   31214:	mov	r4, r0
   31218:	ldr	r0, [r5, #20]
   3121c:	cmp	r0, #0
   31220:	beq	31248 <myhtml_tree_clean@@Base+0x44>
   31224:	mov	r6, #0
   31228:	ldr	r1, [r4, #144]	; 0x90
   3122c:	ldr	r0, [r4, #4]
   31230:	ldr	r1, [r1, r6, lsl #2]
   31234:	bl	115ac <mchar_async_node_clean@plt>
   31238:	ldr	r0, [r5, #20]
   3123c:	add	r6, r6, #1
   31240:	cmp	r6, r0
   31244:	bcc	31228 <myhtml_tree_clean@@Base+0x24>
   31248:	ldr	r0, [r4, #12]
   3124c:	ldr	r1, [r4, #48]	; 0x30
   31250:	bl	116a8 <mcobject_async_node_clean@plt>
   31254:	ldr	r0, [r4, #8]
   31258:	ldr	r1, [r4, #40]	; 0x28
   3125c:	ldr	r0, [r0, #4]
   31260:	bl	116a8 <mcobject_async_node_clean@plt>
   31264:	ldr	r0, [r4, #8]
   31268:	ldr	r1, [r4, #44]	; 0x2c
   3126c:	ldr	r0, [r0, #8]
   31270:	bl	116a8 <mcobject_async_node_clean@plt>
   31274:	ldr	r0, [r4, #20]
   31278:	bl	117a4 <mythread_queue_list_entry_clean@plt>
   3127c:	ldr	r0, [r4]
   31280:	ldr	r1, [r4, #20]
   31284:	ldr	r0, [r0, #4]
   31288:	bl	11a08 <mythread_queue_list_entry_make_batch@plt>
   3128c:	ldr	r0, [r4]
   31290:	ldr	r1, [r4, #20]
   31294:	ldr	r0, [r0]
   31298:	bl	11b58 <mythread_queue_list_entry_make_stream@plt>
   3129c:	ldr	r0, [r4, #8]
   312a0:	bl	114d4 <myhtml_token_clean@plt>
   312a4:	ldr	r0, [r4, #12]
   312a8:	ldr	r1, [r4, #48]	; 0x30
   312ac:	mov	r2, #0
   312b0:	mov	r5, #0
   312b4:	bl	1190c <mcobject_async_malloc@plt>
   312b8:	vmov.i32	q4, #0	; 0x00000000
   312bc:	mov	r6, #36	; 0x24
   312c0:	mov	r1, r0
   312c4:	mov	r7, #1
   312c8:	str	r5, [r0, #32]
   312cc:	str	r4, [r0, #40]	; 0x28
   312d0:	mov	r2, #0
   312d4:	vst1.32	{d8-d9}, [r1], r6
   312d8:	str	r7, [r0, #8]
   312dc:	add	r0, r0, #16
   312e0:	vst1.32	{d8-d9}, [r0]
   312e4:	str	r5, [r1]
   312e8:	ldr	r0, [r4, #12]
   312ec:	ldr	r1, [r4, #48]	; 0x30
   312f0:	bl	1190c <mcobject_async_malloc@plt>
   312f4:	mov	r1, r0
   312f8:	str	r5, [r0, #32]
   312fc:	str	r4, [r0, #40]	; 0x28
   31300:	add	r2, r0, #16
   31304:	vst1.32	{d8-d9}, [r1], r6
   31308:	str	r7, [r0, #8]
   3130c:	vst1.32	{d8-d9}, [r2]
   31310:	str	r5, [r1]
   31314:	mov	r1, #2
   31318:	str	r1, [r4, #180]	; 0xb4
   3131c:	str	r5, [r4, #68]	; 0x44
   31320:	str	r5, [r4, #76]	; 0x4c
   31324:	str	r5, [r4, #80]	; 0x50
   31328:	str	r0, [r4, #84]	; 0x54
   3132c:	add	r0, r4, #160	; 0xa0
   31330:	str	r5, [r4, #192]	; 0xc0
   31334:	str	r5, [r4, #196]	; 0xc4
   31338:	str	r5, [r4, #200]	; 0xc8
   3133c:	str	r5, [r4, #204]	; 0xcc
   31340:	str	r5, [r4, #156]	; 0x9c
   31344:	strb	r5, [r4, #188]	; 0xbc
   31348:	str	r5, [r4, #176]	; 0xb0
   3134c:	vst1.32	{d8-d9}, [r0]
   31350:	add	r0, r4, #88	; 0x58
   31354:	str	r5, [r4, #101]	; 0x65
   31358:	str	r5, [r4, #105]	; 0x69
   3135c:	str	r5, [r4, #60]	; 0x3c
   31360:	vst1.32	{d8-d9}, [r0]
   31364:	str	r5, [r4, #112]	; 0x70
   31368:	str	r5, [r4, #116]	; 0x74
   3136c:	str	r5, [r4, #120]	; 0x78
   31370:	str	r5, [r4, #152]	; 0x98
   31374:	ldr	r0, [r4, #148]	; 0x94
   31378:	bl	113c0 <myhtml_stream_buffer_clean@plt>
   3137c:	ldr	r0, [r4, #124]	; 0x7c
   31380:	str	r5, [r0, #4]
   31384:	ldr	r0, [r4, #128]	; 0x80
   31388:	str	r5, [r0, #4]
   3138c:	ldr	r0, [r4, #132]	; 0x84
   31390:	str	r5, [r0, #4]
   31394:	ldr	r0, [r4, #136]	; 0x88
   31398:	str	r5, [r0, #4]
   3139c:	ldr	r0, [r4, #140]	; 0x8c
   313a0:	str	r5, [r0, #4]
   313a4:	ldr	r0, [r4, #72]	; 0x48
   313a8:	bl	11bb8 <mcobject_clean@plt>
   313ac:	ldr	r0, [r4, #28]
   313b0:	bl	11c78 <myhtml_tag_clean@plt>
   313b4:	ldr	r0, [r4, #24]
   313b8:	bl	10ec8 <mythread_queue_clean@plt>
   313bc:	ldr	r0, [r4, #8]
   313c0:	ldr	r1, [r0, #16]
   313c4:	bl	11720 <myhtml_token_attr_create@plt>
   313c8:	str	r0, [r4, #56]	; 0x38
   313cc:	vpop	{d8-d9}
   313d0:	pop	{r4, r5, r6, r7, fp, pc}

000313d4 <myhtml_tree_node_create@@Base>:
   313d4:	push	{r4, r5, fp, lr}
   313d8:	add	fp, sp, #8
   313dc:	mov	r4, r0
   313e0:	ldr	r0, [r0, #12]
   313e4:	mov	r2, #0
   313e8:	mov	r5, #0
   313ec:	ldr	r1, [r4, #48]	; 0x30
   313f0:	bl	1190c <mcobject_async_malloc@plt>
   313f4:	vmov.i32	q8, #0	; 0x00000000
   313f8:	mov	r1, #36	; 0x24
   313fc:	mov	r2, r0
   31400:	str	r5, [r0, #32]
   31404:	str	r4, [r0, #40]	; 0x28
   31408:	vst1.32	{d16-d17}, [r2], r1
   3140c:	mov	r1, #1
   31410:	str	r1, [r0, #8]
   31414:	add	r1, r0, #16
   31418:	str	r5, [r2]
   3141c:	vst1.32	{d16-d17}, [r1]
   31420:	pop	{r4, r5, fp, pc}

00031424 <myhtml_tree_active_formatting_clean@@Base>:
   31424:	ldr	r0, [r0, #124]	; 0x7c
   31428:	mov	r1, #0
   3142c:	str	r1, [r0, #4]
   31430:	bx	lr

00031434 <myhtml_tree_open_elements_clean@@Base>:
   31434:	ldr	r0, [r0, #128]	; 0x80
   31438:	mov	r1, #0
   3143c:	str	r1, [r0, #4]
   31440:	bx	lr

00031444 <myhtml_tree_list_clean@@Base>:
   31444:	mov	r1, #0
   31448:	str	r1, [r0, #4]
   3144c:	bx	lr

00031450 <myhtml_tree_token_list_clean@@Base>:
   31450:	mov	r1, #0
   31454:	str	r1, [r0, #4]
   31458:	bx	lr

0003145c <myhtml_tree_template_insertion_clean@@Base>:
   3145c:	ldr	r0, [r0, #140]	; 0x8c
   31460:	mov	r1, #0
   31464:	str	r1, [r0, #4]
   31468:	bx	lr

0003146c <myhtml_tree_clean_all@@Base>:
   3146c:	push	{r4, r5, r6, r7, fp, lr}
   31470:	add	fp, sp, #16
   31474:	vpush	{d8-d9}
   31478:	mov	r4, r0
   3147c:	ldr	r0, [r0, #12]
   31480:	bl	11c6c <mcobject_async_clean@plt>
   31484:	ldr	r0, [r4, #8]
   31488:	bl	114d4 <myhtml_token_clean@plt>
   3148c:	ldr	r0, [r4, #4]
   31490:	bl	11918 <mchar_async_clean@plt>
   31494:	ldr	r0, [r4, #12]
   31498:	ldr	r1, [r4, #48]	; 0x30
   3149c:	mov	r2, #0
   314a0:	mov	r5, #0
   314a4:	bl	1190c <mcobject_async_malloc@plt>
   314a8:	vmov.i32	q4, #0	; 0x00000000
   314ac:	mov	r6, #36	; 0x24
   314b0:	mov	r1, r0
   314b4:	mov	r7, #1
   314b8:	str	r5, [r0, #32]
   314bc:	str	r4, [r0, #40]	; 0x28
   314c0:	mov	r2, #0
   314c4:	vst1.32	{d8-d9}, [r1], r6
   314c8:	str	r7, [r0, #8]
   314cc:	add	r0, r0, #16
   314d0:	vst1.32	{d8-d9}, [r0]
   314d4:	str	r5, [r1]
   314d8:	ldr	r0, [r4, #12]
   314dc:	ldr	r1, [r4, #48]	; 0x30
   314e0:	bl	1190c <mcobject_async_malloc@plt>
   314e4:	mov	r1, r0
   314e8:	str	r5, [r0, #32]
   314ec:	str	r4, [r0, #40]	; 0x28
   314f0:	add	r2, r0, #16
   314f4:	vst1.32	{d8-d9}, [r1], r6
   314f8:	str	r7, [r0, #8]
   314fc:	vst1.32	{d8-d9}, [r2]
   31500:	str	r5, [r1]
   31504:	mov	r1, #2
   31508:	str	r1, [r4, #180]	; 0xb4
   3150c:	str	r5, [r4, #68]	; 0x44
   31510:	str	r5, [r4, #76]	; 0x4c
   31514:	str	r5, [r4, #80]	; 0x50
   31518:	str	r0, [r4, #84]	; 0x54
   3151c:	add	r0, r4, #160	; 0xa0
   31520:	str	r5, [r4, #192]	; 0xc0
   31524:	str	r5, [r4, #196]	; 0xc4
   31528:	str	r5, [r4, #200]	; 0xc8
   3152c:	str	r5, [r4, #204]	; 0xcc
   31530:	str	r5, [r4, #156]	; 0x9c
   31534:	strb	r5, [r4, #188]	; 0xbc
   31538:	str	r5, [r4, #176]	; 0xb0
   3153c:	vst1.32	{d8-d9}, [r0]
   31540:	add	r0, r4, #88	; 0x58
   31544:	str	r5, [r4, #101]	; 0x65
   31548:	str	r5, [r4, #105]	; 0x69
   3154c:	str	r5, [r4, #60]	; 0x3c
   31550:	vst1.32	{d8-d9}, [r0]
   31554:	str	r5, [r4, #112]	; 0x70
   31558:	str	r5, [r4, #116]	; 0x74
   3155c:	str	r5, [r4, #120]	; 0x78
   31560:	str	r5, [r4, #152]	; 0x98
   31564:	ldr	r0, [r4, #148]	; 0x94
   31568:	bl	113c0 <myhtml_stream_buffer_clean@plt>
   3156c:	ldr	r0, [r4, #124]	; 0x7c
   31570:	str	r5, [r0, #4]
   31574:	ldr	r0, [r4, #128]	; 0x80
   31578:	str	r5, [r0, #4]
   3157c:	ldr	r0, [r4, #132]	; 0x84
   31580:	str	r5, [r0, #4]
   31584:	ldr	r0, [r4, #136]	; 0x88
   31588:	str	r5, [r0, #4]
   3158c:	ldr	r0, [r4, #140]	; 0x8c
   31590:	str	r5, [r0, #4]
   31594:	ldr	r0, [r4, #72]	; 0x48
   31598:	bl	11bb8 <mcobject_clean@plt>
   3159c:	ldr	r0, [r4, #28]
   315a0:	bl	11c78 <myhtml_tag_clean@plt>
   315a4:	ldr	r0, [r4, #20]
   315a8:	bl	117a4 <mythread_queue_list_entry_clean@plt>
   315ac:	ldr	r0, [r4]
   315b0:	ldr	r1, [r4, #20]
   315b4:	ldr	r0, [r0, #4]
   315b8:	bl	11a08 <mythread_queue_list_entry_make_batch@plt>
   315bc:	ldr	r0, [r4]
   315c0:	ldr	r1, [r4, #20]
   315c4:	ldr	r0, [r0]
   315c8:	bl	11b58 <mythread_queue_list_entry_make_stream@plt>
   315cc:	ldr	r0, [r4, #8]
   315d0:	ldr	r1, [r0, #16]
   315d4:	bl	11720 <myhtml_token_attr_create@plt>
   315d8:	str	r0, [r4, #56]	; 0x38
   315dc:	vpop	{d8-d9}
   315e0:	pop	{r4, r5, r6, r7, fp, pc}

000315e4 <myhtml_tree_destroy@@Base>:
   315e4:	cmp	r0, #0
   315e8:	beq	31774 <myhtml_tree_destroy@@Base+0x190>
   315ec:	push	{r4, r5, r6, sl, fp, lr}
   315f0:	add	fp, sp, #16
   315f4:	mov	r4, r0
   315f8:	ldr	r0, [r0, #28]
   315fc:	bl	11ae0 <myhtml_tag_destroy@plt>
   31600:	str	r0, [r4, #28]
   31604:	ldr	r5, [r4, #124]	; 0x7c
   31608:	cmp	r5, #0
   3160c:	beq	31628 <myhtml_tree_destroy@@Base+0x44>
   31610:	ldr	r0, [r5]
   31614:	cmp	r0, #0
   31618:	beq	31620 <myhtml_tree_destroy@@Base+0x3c>
   3161c:	bl	11a98 <mycore_free@plt>
   31620:	mov	r0, r5
   31624:	bl	11a98 <mycore_free@plt>
   31628:	mov	r6, #0
   3162c:	str	r6, [r4, #124]	; 0x7c
   31630:	ldr	r5, [r4, #128]	; 0x80
   31634:	cmp	r5, #0
   31638:	beq	31654 <myhtml_tree_destroy@@Base+0x70>
   3163c:	ldr	r0, [r5]
   31640:	cmp	r0, #0
   31644:	beq	3164c <myhtml_tree_destroy@@Base+0x68>
   31648:	bl	11a98 <mycore_free@plt>
   3164c:	mov	r0, r5
   31650:	bl	11a98 <mycore_free@plt>
   31654:	str	r6, [r4, #128]	; 0x80
   31658:	ldr	r5, [r4, #132]	; 0x84
   3165c:	cmp	r5, #0
   31660:	beq	3167c <myhtml_tree_destroy@@Base+0x98>
   31664:	ldr	r0, [r5]
   31668:	cmp	r0, #0
   3166c:	beq	31674 <myhtml_tree_destroy@@Base+0x90>
   31670:	bl	11a98 <mycore_free@plt>
   31674:	mov	r0, r5
   31678:	bl	11a98 <mycore_free@plt>
   3167c:	mov	r6, #0
   31680:	str	r6, [r4, #132]	; 0x84
   31684:	ldr	r5, [r4, #136]	; 0x88
   31688:	cmp	r5, #0
   3168c:	beq	316a8 <myhtml_tree_destroy@@Base+0xc4>
   31690:	ldr	r0, [r5]
   31694:	cmp	r0, #0
   31698:	beq	316a0 <myhtml_tree_destroy@@Base+0xbc>
   3169c:	bl	11a98 <mycore_free@plt>
   316a0:	mov	r0, r5
   316a4:	bl	11a98 <mycore_free@plt>
   316a8:	str	r6, [r4, #136]	; 0x88
   316ac:	ldr	r0, [r4, #140]	; 0x8c
   316b0:	cmp	r0, #0
   316b4:	beq	316dc <myhtml_tree_destroy@@Base+0xf8>
   316b8:	ldr	r1, [r0]
   316bc:	cmp	r1, #0
   316c0:	beq	316d8 <myhtml_tree_destroy@@Base+0xf4>
   316c4:	mov	r0, r1
   316c8:	bl	11a98 <mycore_free@plt>
   316cc:	ldr	r0, [r4, #140]	; 0x8c
   316d0:	cmp	r0, #0
   316d4:	beq	316dc <myhtml_tree_destroy@@Base+0xf8>
   316d8:	bl	11a98 <mycore_free@plt>
   316dc:	mov	r5, #0
   316e0:	mov	r1, #1
   316e4:	str	r5, [r4, #140]	; 0x8c
   316e8:	ldr	r0, [r4, #16]
   316ec:	bl	111ec <mcsync_destroy@plt>
   316f0:	str	r0, [r4, #16]
   316f4:	mov	r1, #1
   316f8:	ldr	r0, [r4, #12]
   316fc:	bl	118ac <mcobject_async_destroy@plt>
   31700:	str	r0, [r4, #12]
   31704:	ldr	r0, [r4, #8]
   31708:	bl	11618 <myhtml_token_destroy@plt>
   3170c:	str	r0, [r4, #8]
   31710:	mov	r1, #1
   31714:	ldr	r0, [r4, #4]
   31718:	bl	11a74 <mchar_async_destroy@plt>
   3171c:	str	r0, [r4, #4]
   31720:	mov	r1, #1
   31724:	ldr	r0, [r4, #148]	; 0x94
   31728:	bl	10e98 <myhtml_stream_buffer_destroy@plt>
   3172c:	str	r0, [r4, #148]	; 0x94
   31730:	ldr	r0, [r4, #24]
   31734:	bl	112a0 <mythread_queue_destroy@plt>
   31738:	str	r0, [r4, #24]
   3173c:	mov	r1, #1
   31740:	ldr	r0, [r4, #72]	; 0x48
   31744:	bl	10f10 <mcobject_destroy@plt>
   31748:	str	r0, [r4, #72]	; 0x48
   3174c:	ldr	r0, [r4, #208]	; 0xd0
   31750:	cmp	r0, #0
   31754:	beq	31760 <myhtml_tree_destroy@@Base+0x17c>
   31758:	bl	11a98 <mycore_free@plt>
   3175c:	str	r5, [r4, #208]	; 0xd0
   31760:	ldr	r0, [r4, #144]	; 0x90
   31764:	bl	11a98 <mycore_free@plt>
   31768:	mov	r0, r4
   3176c:	bl	11a98 <mycore_free@plt>
   31770:	pop	{r4, r5, r6, sl, fp, lr}
   31774:	mov	r0, #0
   31778:	bx	lr

0003177c <myhtml_tree_active_formatting_destroy@@Base>:
   3177c:	push	{r4, sl, fp, lr}
   31780:	add	fp, sp, #8
   31784:	ldr	r4, [r0, #124]	; 0x7c
   31788:	cmp	r4, #0
   3178c:	beq	317a8 <myhtml_tree_active_formatting_destroy@@Base+0x2c>
   31790:	ldr	r0, [r4]
   31794:	cmp	r0, #0
   31798:	beq	317a0 <myhtml_tree_active_formatting_destroy@@Base+0x24>
   3179c:	bl	11a98 <mycore_free@plt>
   317a0:	mov	r0, r4
   317a4:	bl	11a98 <mycore_free@plt>
   317a8:	mov	r0, #0
   317ac:	pop	{r4, sl, fp, pc}

000317b0 <myhtml_tree_open_elements_destroy@@Base>:
   317b0:	push	{r4, sl, fp, lr}
   317b4:	add	fp, sp, #8
   317b8:	ldr	r4, [r0, #128]	; 0x80
   317bc:	cmp	r4, #0
   317c0:	beq	317dc <myhtml_tree_open_elements_destroy@@Base+0x2c>
   317c4:	ldr	r0, [r4]
   317c8:	cmp	r0, #0
   317cc:	beq	317d4 <myhtml_tree_open_elements_destroy@@Base+0x24>
   317d0:	bl	11a98 <mycore_free@plt>
   317d4:	mov	r0, r4
   317d8:	bl	11a98 <mycore_free@plt>
   317dc:	mov	r0, #0
   317e0:	pop	{r4, sl, fp, pc}

000317e4 <myhtml_tree_list_destroy@@Base>:
   317e4:	push	{r4, r5, r6, sl, fp, lr}
   317e8:	add	fp, sp, #16
   317ec:	mov	r4, #0
   317f0:	cmp	r0, #0
   317f4:	beq	31820 <myhtml_tree_list_destroy@@Base+0x3c>
   317f8:	mov	r5, r0
   317fc:	ldr	r0, [r0]
   31800:	mov	r6, r1
   31804:	cmp	r0, #0
   31808:	beq	31810 <myhtml_tree_list_destroy@@Base+0x2c>
   3180c:	bl	11a98 <mycore_free@plt>
   31810:	cmp	r6, #0
   31814:	beq	31828 <myhtml_tree_list_destroy@@Base+0x44>
   31818:	mov	r0, r5
   3181c:	bl	11a98 <mycore_free@plt>
   31820:	mov	r0, r4
   31824:	pop	{r4, r5, r6, sl, fp, pc}
   31828:	mov	r0, r5
   3182c:	pop	{r4, r5, r6, sl, fp, pc}

00031830 <myhtml_tree_token_list_destroy@@Base>:
   31830:	push	{r4, r5, r6, sl, fp, lr}
   31834:	add	fp, sp, #16
   31838:	mov	r4, #0
   3183c:	cmp	r0, #0
   31840:	beq	3186c <myhtml_tree_token_list_destroy@@Base+0x3c>
   31844:	mov	r5, r0
   31848:	ldr	r0, [r0]
   3184c:	mov	r6, r1
   31850:	cmp	r0, #0
   31854:	beq	3185c <myhtml_tree_token_list_destroy@@Base+0x2c>
   31858:	bl	11a98 <mycore_free@plt>
   3185c:	cmp	r6, #0
   31860:	beq	31874 <myhtml_tree_token_list_destroy@@Base+0x44>
   31864:	mov	r0, r5
   31868:	bl	11a98 <mycore_free@plt>
   3186c:	mov	r0, r4
   31870:	pop	{r4, r5, r6, sl, fp, pc}
   31874:	mov	r0, r5
   31878:	pop	{r4, r5, r6, sl, fp, pc}

0003187c <myhtml_tree_template_insertion_destroy@@Base>:
   3187c:	push	{r4, sl, fp, lr}
   31880:	add	fp, sp, #8
   31884:	mov	r4, r0
   31888:	ldr	r0, [r0, #140]	; 0x8c
   3188c:	cmp	r0, #0
   31890:	beq	318b8 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   31894:	ldr	r1, [r0]
   31898:	cmp	r1, #0
   3189c:	beq	318b4 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   318a0:	mov	r0, r1
   318a4:	bl	11a98 <mycore_free@plt>
   318a8:	ldr	r0, [r4, #140]	; 0x8c
   318ac:	cmp	r0, #0
   318b0:	beq	318b8 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   318b4:	bl	11a98 <mycore_free@plt>
   318b8:	mov	r0, #0
   318bc:	pop	{r4, sl, fp, pc}

000318c0 <myhtml_tree_temp_tag_name_destroy@@Base>:
   318c0:	push	{r4, r5, r6, sl, fp, lr}
   318c4:	add	fp, sp, #16
   318c8:	mov	r4, #0
   318cc:	cmp	r0, #0
   318d0:	beq	31904 <myhtml_tree_temp_tag_name_destroy@@Base+0x44>
   318d4:	mov	r5, r0
   318d8:	ldr	r0, [r0]
   318dc:	mov	r6, r1
   318e0:	cmp	r0, #0
   318e4:	beq	318f4 <myhtml_tree_temp_tag_name_destroy@@Base+0x34>
   318e8:	bl	11a98 <mycore_free@plt>
   318ec:	mov	r0, #0
   318f0:	str	r0, [r5]
   318f4:	cmp	r6, #0
   318f8:	beq	3190c <myhtml_tree_temp_tag_name_destroy@@Base+0x4c>
   318fc:	mov	r0, r5
   31900:	bl	11a98 <mycore_free@plt>
   31904:	mov	r0, r4
   31908:	pop	{r4, r5, r6, sl, fp, pc}
   3190c:	mov	r0, r5
   31910:	pop	{r4, r5, r6, sl, fp, pc}

00031914 <myhtml_tree_node_clean@@Base>:
   31914:	vmov.i32	q8, #0	; 0x00000000
   31918:	add	r1, r0, #28
   3191c:	vst1.32	{d16-d17}, [r1]
   31920:	add	r1, r0, #16
   31924:	vst1.32	{d16-d17}, [r1]
   31928:	mov	r1, #8
   3192c:	vst1.32	{d16-d17}, [r0], r1
   31930:	mov	r1, #1
   31934:	str	r1, [r0]
   31938:	bx	lr

0003193c <myhtml_tree_parse_flags@@Base>:
   3193c:	ldr	r0, [r0, #184]	; 0xb8
   31940:	bx	lr

00031944 <myhtml_tree_parse_flags_set@@Base>:
   31944:	str	r1, [r0, #184]	; 0xb8
   31948:	bx	lr

0003194c <myhtml_tree_get_myhtml@@Base>:
   3194c:	cmp	r0, #0
   31950:	ldrne	r0, [r0]
   31954:	moveq	r0, #0
   31958:	bx	lr

0003195c <myhtml_tree_get_tag@@Base>:
   3195c:	cmp	r0, #0
   31960:	ldrne	r0, [r0, #28]
   31964:	moveq	r0, #0
   31968:	bx	lr

0003196c <myhtml_tree_get_document@@Base>:
   3196c:	ldr	r0, [r0, #84]	; 0x54
   31970:	bx	lr

00031974 <myhtml_tree_get_node_html@@Base>:
   31974:	ldr	r0, [r0, #96]	; 0x60
   31978:	bx	lr

0003197c <myhtml_tree_get_node_body@@Base>:
   3197c:	ldr	r0, [r0, #100]	; 0x64
   31980:	bx	lr

00031984 <myhtml_tree_get_node_head@@Base>:
   31984:	ldr	r0, [r0, #92]	; 0x5c
   31988:	bx	lr

0003198c <myhtml_tree_get_mchar@@Base>:
   3198c:	ldr	r0, [r0, #4]
   31990:	bx	lr

00031994 <myhtml_tree_get_mchar_node_id@@Base>:
   31994:	ldr	r0, [r0, #52]	; 0x34
   31998:	bx	lr

0003199c <myhtml_tree_node_add_child@@Base>:
   3199c:	ldr	r2, [r0, #28]
   319a0:	cmp	r2, #0
   319a4:	streq	r1, [r0, #20]
   319a8:	strne	r1, [r2, #16]
   319ac:	strne	r2, [r1, #12]
   319b0:	str	r0, [r1, #24]
   319b4:	str	r1, [r0, #28]
   319b8:	ldr	r0, [r1, #40]	; 0x28
   319bc:	ldr	r3, [r0, #236]	; 0xec
   319c0:	cmp	r3, #0
   319c4:	bxeq	lr
   319c8:	ldr	r2, [r0, #244]	; 0xf4
   319cc:	bx	r3

000319d0 <myhtml_tree_node_insert_before@@Base>:
   319d0:	ldr	r2, [r0, #12]
   319d4:	cmp	r2, #0
   319d8:	beq	319ec <myhtml_tree_node_insert_before@@Base+0x1c>
   319dc:	str	r1, [r2, #16]
   319e0:	str	r2, [r1, #12]
   319e4:	ldr	r2, [r0, #24]
   319e8:	b	319f4 <myhtml_tree_node_insert_before@@Base+0x24>
   319ec:	ldr	r2, [r0, #24]
   319f0:	str	r1, [r2, #20]
   319f4:	str	r0, [r1, #16]
   319f8:	str	r2, [r1, #24]
   319fc:	str	r1, [r0, #12]
   31a00:	ldr	r0, [r1, #40]	; 0x28
   31a04:	ldr	r3, [r0, #236]	; 0xec
   31a08:	cmp	r3, #0
   31a0c:	bxeq	lr
   31a10:	ldr	r2, [r0, #244]	; 0xf4
   31a14:	bx	r3

00031a18 <myhtml_tree_node_insert_after@@Base>:
   31a18:	ldr	r2, [r0, #16]
   31a1c:	cmp	r2, #0
   31a20:	beq	31a34 <myhtml_tree_node_insert_after@@Base+0x1c>
   31a24:	str	r1, [r2, #12]
   31a28:	str	r2, [r1, #16]
   31a2c:	ldr	r2, [r0, #24]
   31a30:	b	31a3c <myhtml_tree_node_insert_after@@Base+0x24>
   31a34:	ldr	r2, [r0, #24]
   31a38:	str	r1, [r2, #28]
   31a3c:	str	r0, [r1, #12]
   31a40:	str	r2, [r1, #24]
   31a44:	str	r1, [r0, #16]
   31a48:	ldr	r0, [r1, #40]	; 0x28
   31a4c:	ldr	r3, [r0, #236]	; 0xec
   31a50:	cmp	r3, #0
   31a54:	bxeq	lr
   31a58:	ldr	r2, [r0, #244]	; 0xf4
   31a5c:	bx	r3

00031a60 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   31a60:	ldr	r0, [r0, #24]
   31a64:	cmp	r0, #0
   31a68:	ldrne	r2, [r0, #4]
   31a6c:	cmpne	r2, r1
   31a70:	bne	31a60 <myhtml_tree_node_find_parent_by_tag_id@@Base>
   31a74:	bx	lr

00031a78 <myhtml_tree_node_remove@@Base>:
   31a78:	push	{r4, sl, fp, lr}
   31a7c:	add	fp, sp, #8
   31a80:	mov	r4, r0
   31a84:	ldr	r0, [r0, #16]
   31a88:	cmp	r0, #0
   31a8c:	beq	31a98 <myhtml_tree_node_remove@@Base+0x20>
   31a90:	add	r1, r0, #12
   31a94:	b	31aa8 <myhtml_tree_node_remove@@Base+0x30>
   31a98:	ldr	r1, [r4, #24]
   31a9c:	cmp	r1, #0
   31aa0:	beq	31ab0 <myhtml_tree_node_remove@@Base+0x38>
   31aa4:	add	r1, r1, #28
   31aa8:	ldr	r2, [r4, #12]
   31aac:	str	r2, [r1]
   31ab0:	ldr	r1, [r4, #12]
   31ab4:	cmp	r1, #0
   31ab8:	beq	31ac4 <myhtml_tree_node_remove@@Base+0x4c>
   31abc:	add	r1, r1, #16
   31ac0:	b	31ad4 <myhtml_tree_node_remove@@Base+0x5c>
   31ac4:	ldr	r1, [r4, #24]
   31ac8:	cmp	r1, #0
   31acc:	beq	31ad8 <myhtml_tree_node_remove@@Base+0x60>
   31ad0:	add	r1, r1, #20
   31ad4:	str	r0, [r1]
   31ad8:	ldr	r0, [r4, #40]	; 0x28
   31adc:	ldr	r3, [r0, #240]	; 0xf0
   31ae0:	cmp	r3, #0
   31ae4:	beq	31af4 <myhtml_tree_node_remove@@Base+0x7c>
   31ae8:	ldr	r2, [r0, #248]	; 0xf8
   31aec:	mov	r1, r4
   31af0:	blx	r3
   31af4:	mov	r0, #0
   31af8:	str	r0, [r4, #24]
   31afc:	str	r0, [r4, #12]
   31b00:	str	r0, [r4, #16]
   31b04:	mov	r0, r4
   31b08:	pop	{r4, sl, fp, pc}

00031b0c <myhtml_tree_node_free@@Base>:
   31b0c:	cmp	r0, #0
   31b10:	bxeq	lr
   31b14:	push	{r4, sl, fp, lr}
   31b18:	add	fp, sp, #8
   31b1c:	ldr	r1, [r0, #32]
   31b20:	mov	r4, r0
   31b24:	cmp	r1, #0
   31b28:	beq	31b48 <myhtml_tree_node_free@@Base+0x3c>
   31b2c:	ldr	r0, [r4, #40]	; 0x28
   31b30:	ldr	r0, [r0, #8]
   31b34:	bl	11648 <myhtml_token_attr_delete_all@plt>
   31b38:	ldr	r0, [r4, #40]	; 0x28
   31b3c:	ldr	r1, [r4, #32]
   31b40:	ldr	r0, [r0, #8]
   31b44:	bl	11bd0 <myhtml_token_delete@plt>
   31b48:	ldr	r0, [r4, #40]	; 0x28
   31b4c:	mov	r1, r4
   31b50:	ldr	r0, [r0, #12]
   31b54:	pop	{r4, sl, fp, lr}
   31b58:	b	11108 <mcobject_async_free@plt>

00031b5c <myhtml_tree_node_delete@@Base>:
   31b5c:	cmp	r0, #0
   31b60:	bxeq	lr
   31b64:	push	{r4, sl, fp, lr}
   31b68:	add	fp, sp, #8
   31b6c:	mov	r4, r0
   31b70:	ldr	r0, [r0, #16]
   31b74:	cmp	r0, #0
   31b78:	beq	31b84 <myhtml_tree_node_delete@@Base+0x28>
   31b7c:	add	r1, r0, #12
   31b80:	b	31b94 <myhtml_tree_node_delete@@Base+0x38>
   31b84:	ldr	r1, [r4, #24]
   31b88:	cmp	r1, #0
   31b8c:	beq	31b9c <myhtml_tree_node_delete@@Base+0x40>
   31b90:	add	r1, r1, #28
   31b94:	ldr	r2, [r4, #12]
   31b98:	str	r2, [r1]
   31b9c:	ldr	r1, [r4, #12]
   31ba0:	cmp	r1, #0
   31ba4:	beq	31bb0 <myhtml_tree_node_delete@@Base+0x54>
   31ba8:	add	r1, r1, #16
   31bac:	b	31bc0 <myhtml_tree_node_delete@@Base+0x64>
   31bb0:	ldr	r1, [r4, #24]
   31bb4:	cmp	r1, #0
   31bb8:	beq	31bc4 <myhtml_tree_node_delete@@Base+0x68>
   31bbc:	add	r1, r1, #20
   31bc0:	str	r0, [r1]
   31bc4:	ldr	r0, [r4, #40]	; 0x28
   31bc8:	ldr	r3, [r0, #240]	; 0xf0
   31bcc:	cmp	r3, #0
   31bd0:	beq	31be0 <myhtml_tree_node_delete@@Base+0x84>
   31bd4:	ldr	r2, [r0, #248]	; 0xf8
   31bd8:	mov	r1, r4
   31bdc:	blx	r3
   31be0:	mov	r0, #0
   31be4:	str	r0, [r4, #24]
   31be8:	str	r0, [r4, #12]
   31bec:	str	r0, [r4, #16]
   31bf0:	ldr	r1, [r4, #32]
   31bf4:	cmp	r1, #0
   31bf8:	beq	31c18 <myhtml_tree_node_delete@@Base+0xbc>
   31bfc:	ldr	r0, [r4, #40]	; 0x28
   31c00:	ldr	r0, [r0, #8]
   31c04:	bl	11648 <myhtml_token_attr_delete_all@plt>
   31c08:	ldr	r0, [r4, #40]	; 0x28
   31c0c:	ldr	r1, [r4, #32]
   31c10:	ldr	r0, [r0, #8]
   31c14:	bl	11bd0 <myhtml_token_delete@plt>
   31c18:	ldr	r0, [r4, #40]	; 0x28
   31c1c:	mov	r1, r4
   31c20:	ldr	r0, [r0, #12]
   31c24:	pop	{r4, sl, fp, lr}
   31c28:	b	11108 <mcobject_async_free@plt>

00031c2c <myhtml_tree_node_delete_recursive@@Base>:
   31c2c:	cmp	r0, #0
   31c30:	bxeq	lr
   31c34:	push	{r4, sl, fp, lr}
   31c38:	add	fp, sp, #8
   31c3c:	mov	r4, r0
   31c40:	ldr	r0, [r0, #20]
   31c44:	cmp	r0, #0
   31c48:	blne	31c58 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   31c4c:	mov	r0, r4
   31c50:	pop	{r4, sl, fp, lr}
   31c54:	b	31b5c <myhtml_tree_node_delete@@Base>
   31c58:	push	{r4, sl, fp, lr}
   31c5c:	add	fp, sp, #8
   31c60:	cmp	r0, #0
   31c64:	popeq	{r4, sl, fp, pc}
   31c68:	mov	r4, r0
   31c6c:	ldr	r0, [r4, #20]
   31c70:	cmp	r0, #0
   31c74:	blne	31c58 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   31c78:	ldr	r4, [r4, #16]
   31c7c:	mov	r0, r4
   31c80:	bl	11a8c <myhtml_tree_node_delete@plt>
   31c84:	cmp	r4, #0
   31c88:	bne	31c6c <myhtml_tree_node_delete_recursive@@Base+0x40>
   31c8c:	pop	{r4, sl, fp, pc}

00031c90 <myhtml_tree_node_clone@@Base>:
   31c90:	push	{r4, r5, r6, r7, fp, lr}
   31c94:	add	fp, sp, #16
   31c98:	ldr	r7, [r0, #40]	; 0x28
   31c9c:	mov	r5, r0
   31ca0:	mov	r2, #0
   31ca4:	mov	r6, #0
   31ca8:	ldr	r0, [r7, #12]
   31cac:	ldr	r1, [r7, #48]	; 0x30
   31cb0:	bl	1190c <mcobject_async_malloc@plt>
   31cb4:	vmov.i32	q8, #0	; 0x00000000
   31cb8:	mov	r4, r0
   31cbc:	str	r7, [r0, #40]	; 0x28
   31cc0:	str	r6, [r0, #32]
   31cc4:	mov	r0, #36	; 0x24
   31cc8:	mov	r1, r4
   31ccc:	vst1.32	{d16-d17}, [r1], r0
   31cd0:	mov	r0, #1
   31cd4:	str	r0, [r4, #8]
   31cd8:	add	r0, r4, #16
   31cdc:	str	r6, [r1]
   31ce0:	vst1.32	{d16-d17}, [r0]
   31ce4:	ldr	r1, [r5, #32]
   31ce8:	cmp	r1, #0
   31cec:	beq	31d00 <myhtml_tree_node_clone@@Base+0x70>
   31cf0:	ldr	r0, [r5, #40]	; 0x28
   31cf4:	ldr	r0, [r0, #8]
   31cf8:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   31cfc:	ldr	r6, [r5, #32]
   31d00:	ldr	r1, [r5, #40]	; 0x28
   31d04:	ldr	r0, [r1, #8]
   31d08:	ldr	r2, [r1, #40]	; 0x28
   31d0c:	ldr	r3, [r1, #44]	; 0x2c
   31d10:	mov	r1, r6
   31d14:	bl	11018 <myhtml_token_node_clone@plt>
   31d18:	str	r0, [r4, #32]
   31d1c:	cmp	r0, #0
   31d20:	ldr	r1, [r5, #4]
   31d24:	str	r1, [r4, #4]
   31d28:	ldr	r1, [r5, #8]
   31d2c:	str	r1, [r4, #8]
   31d30:	ldrne	r1, [r0, #48]	; 0x30
   31d34:	orrne	r1, r1, #4
   31d38:	strne	r1, [r0, #48]	; 0x30
   31d3c:	mov	r0, r4
   31d40:	pop	{r4, r5, r6, r7, fp, pc}

00031d44 <myhtml_tree_node_insert_by_mode@@Base>:
   31d44:	cmp	r2, #1
   31d48:	beq	31d88 <myhtml_tree_node_insert_by_mode@@Base+0x44>
   31d4c:	cmp	r2, #0
   31d50:	bne	31da4 <myhtml_tree_node_insert_by_mode@@Base+0x60>
   31d54:	ldr	r2, [r0, #28]
   31d58:	cmp	r2, #0
   31d5c:	streq	r1, [r0, #20]
   31d60:	strne	r1, [r2, #16]
   31d64:	strne	r2, [r1, #12]
   31d68:	str	r0, [r1, #24]
   31d6c:	str	r1, [r0, #28]
   31d70:	ldr	r0, [r1, #40]	; 0x28
   31d74:	ldr	r3, [r0, #236]	; 0xec
   31d78:	cmp	r3, #0
   31d7c:	beq	31e18 <myhtml_tree_node_insert_by_mode@@Base+0xd4>
   31d80:	ldr	r2, [r0, #244]	; 0xf4
   31d84:	bx	r3
   31d88:	ldr	r2, [r0, #12]
   31d8c:	cmp	r2, #0
   31d90:	beq	31dc0 <myhtml_tree_node_insert_by_mode@@Base+0x7c>
   31d94:	str	r1, [r2, #16]
   31d98:	str	r2, [r1, #12]
   31d9c:	ldr	r2, [r0, #24]
   31da0:	b	31dc8 <myhtml_tree_node_insert_by_mode@@Base+0x84>
   31da4:	ldr	r2, [r0, #16]
   31da8:	cmp	r2, #0
   31dac:	beq	31dec <myhtml_tree_node_insert_by_mode@@Base+0xa8>
   31db0:	str	r1, [r2, #12]
   31db4:	str	r2, [r1, #16]
   31db8:	ldr	r2, [r0, #24]
   31dbc:	b	31df4 <myhtml_tree_node_insert_by_mode@@Base+0xb0>
   31dc0:	ldr	r2, [r0, #24]
   31dc4:	str	r1, [r2, #20]
   31dc8:	str	r0, [r1, #16]
   31dcc:	str	r2, [r1, #24]
   31dd0:	str	r1, [r0, #12]
   31dd4:	ldr	r0, [r1, #40]	; 0x28
   31dd8:	ldr	r3, [r0, #236]	; 0xec
   31ddc:	cmp	r3, #0
   31de0:	bxeq	lr
   31de4:	ldr	r2, [r0, #244]	; 0xf4
   31de8:	bx	r3
   31dec:	ldr	r2, [r0, #24]
   31df0:	str	r1, [r2, #28]
   31df4:	str	r0, [r1, #12]
   31df8:	str	r2, [r1, #24]
   31dfc:	str	r1, [r0, #16]
   31e00:	ldr	r0, [r1, #40]	; 0x28
   31e04:	ldr	r3, [r0, #236]	; 0xec
   31e08:	cmp	r3, #0
   31e0c:	beq	31e18 <myhtml_tree_node_insert_by_mode@@Base+0xd4>
   31e10:	ldr	r2, [r0, #244]	; 0xf4
   31e14:	bx	r3
   31e18:	bx	lr

00031e1c <myhtml_tree_node_insert_by_token@@Base>:
   31e1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31e20:	add	fp, sp, #24
   31e24:	sub	sp, sp, #8
   31e28:	mov	r5, r0
   31e2c:	mov	r7, r1
   31e30:	ldr	r0, [r0, #12]
   31e34:	mov	r6, r2
   31e38:	mov	r2, #0
   31e3c:	mov	r8, #0
   31e40:	ldr	r1, [r5, #48]	; 0x30
   31e44:	bl	1190c <mcobject_async_malloc@plt>
   31e48:	vmov.i32	q8, #0	; 0x00000000
   31e4c:	mov	r4, r0
   31e50:	str	r8, [r0, #32]
   31e54:	str	r5, [r0, #40]	; 0x28
   31e58:	add	r0, r0, #16
   31e5c:	add	r2, sp, #4
   31e60:	mov	r1, r4
   31e64:	vst1.32	{d16-d17}, [r0]
   31e68:	mov	r0, #36	; 0x24
   31e6c:	vst1.32	{d16-d17}, [r1], r0
   31e70:	str	r8, [r1]
   31e74:	mov	r1, #0
   31e78:	ldr	r0, [r7]
   31e7c:	str	r7, [r4, #32]
   31e80:	stmib	r4, {r0, r6}
   31e84:	mov	r0, r5
   31e88:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   31e8c:	ldr	r2, [sp, #4]
   31e90:	mov	r1, r4
   31e94:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   31e98:	ldr	r5, [r5, #128]	; 0x80
   31e9c:	ldr	r1, [r5, #8]
   31ea0:	ldr	r0, [r5, #4]
   31ea4:	cmp	r0, r1
   31ea8:	bcc	31ec8 <myhtml_tree_node_insert_by_token@@Base+0xac>
   31eac:	lsl	r0, r1, #1
   31eb0:	lsl	r1, r1, #3
   31eb4:	str	r0, [r5, #8]
   31eb8:	ldr	r0, [r5]
   31ebc:	bl	10d9c <mycore_realloc@plt>
   31ec0:	cmp	r0, #0
   31ec4:	strne	r0, [r5]
   31ec8:	ldr	r0, [r5]
   31ecc:	ldr	r1, [r5, #4]
   31ed0:	str	r4, [r0, r1, lsl #2]
   31ed4:	ldr	r0, [r5, #4]
   31ed8:	add	r0, r0, #1
   31edc:	str	r0, [r5, #4]
   31ee0:	mov	r0, r4
   31ee4:	sub	sp, fp, #24
   31ee8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031eec <myhtml_tree_appropriate_place_inserting@@Base>:
   31eec:	push	{r4, sl, fp, lr}
   31ef0:	add	fp, sp, #8
   31ef4:	mov	r3, #0
   31ef8:	cmp	r1, #0
   31efc:	str	r3, [r2]
   31f00:	bne	31f28 <myhtml_tree_appropriate_place_inserting@@Base+0x3c>
   31f04:	ldr	r3, [r0, #128]	; 0x80
   31f08:	ldr	r1, [r3, #4]
   31f0c:	cmp	r1, #0
   31f10:	mov	r1, #0
   31f14:	beq	31f28 <myhtml_tree_appropriate_place_inserting@@Base+0x3c>
   31f18:	ldr	r1, [r3]
   31f1c:	ldr	r3, [r3, #4]
   31f20:	add	r1, r1, r3, lsl #2
   31f24:	ldr	r1, [r1, #-4]
   31f28:	ldrb	r3, [r0, #188]	; 0xbc
   31f2c:	cmp	r3, #0
   31f30:	beq	32014 <myhtml_tree_appropriate_place_inserting@@Base+0x128>
   31f34:	ldr	r3, [r1, #8]
   31f38:	cmp	r3, #1
   31f3c:	bne	32014 <myhtml_tree_appropriate_place_inserting@@Base+0x128>
   31f40:	ldr	r3, [r1, #4]
   31f44:	sub	lr, r3, #125	; 0x7d
   31f48:	cmp	lr, #10
   31f4c:	bhi	32014 <myhtml_tree_appropriate_place_inserting@@Base+0x128>
   31f50:	mov	ip, #1
   31f54:	movw	r3, #1187	; 0x4a3
   31f58:	tst	r3, ip, lsl lr
   31f5c:	beq	32014 <myhtml_tree_appropriate_place_inserting@@Base+0x128>
   31f60:	ldr	r3, [r0, #128]	; 0x80
   31f64:	mov	lr, #0
   31f68:	ldr	r0, [r3, #4]
   31f6c:	ldr	ip, [r3]
   31f70:	cmp	r0, #0
   31f74:	beq	32080 <myhtml_tree_appropriate_place_inserting@@Base+0x194>
   31f78:	sub	r0, r0, #1
   31f7c:	ldr	r1, [ip, r0, lsl #2]
   31f80:	ldr	r4, [r1, #4]
   31f84:	cmp	r4, #128	; 0x80
   31f88:	beq	31fa8 <myhtml_tree_appropriate_place_inserting@@Base+0xbc>
   31f8c:	sub	r0, r0, #1
   31f90:	cmn	r0, #1
   31f94:	beq	3201c <myhtml_tree_appropriate_place_inserting@@Base+0x130>
   31f98:	ldr	r1, [ip, r0, lsl #2]
   31f9c:	ldr	r4, [r1, #4]
   31fa0:	cmp	r4, #128	; 0x80
   31fa4:	bne	31f8c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   31fa8:	ldr	r4, [r1, #8]
   31fac:	cmp	r4, #1
   31fb0:	bne	31f8c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   31fb4:	ldr	r3, [r3, #4]
   31fb8:	cmp	r3, #0
   31fbc:	beq	32030 <myhtml_tree_appropriate_place_inserting@@Base+0x144>
   31fc0:	sub	r3, r3, #1
   31fc4:	ldr	lr, [ip, r3, lsl #2]
   31fc8:	ldr	r4, [lr, #4]
   31fcc:	cmp	r4, #125	; 0x7d
   31fd0:	beq	31ff0 <myhtml_tree_appropriate_place_inserting@@Base+0x104>
   31fd4:	sub	r3, r3, #1
   31fd8:	cmn	r3, #1
   31fdc:	beq	3206c <myhtml_tree_appropriate_place_inserting@@Base+0x180>
   31fe0:	ldr	lr, [ip, r3, lsl #2]
   31fe4:	ldr	r4, [lr, #4]
   31fe8:	cmp	r4, #125	; 0x7d
   31fec:	bne	31fd4 <myhtml_tree_appropriate_place_inserting@@Base+0xe8>
   31ff0:	ldr	r4, [lr, #8]
   31ff4:	cmp	r4, #1
   31ff8:	bne	31fd4 <myhtml_tree_appropriate_place_inserting@@Base+0xe8>
   31ffc:	cmp	r1, #0
   32000:	beq	32038 <myhtml_tree_appropriate_place_inserting@@Base+0x14c>
   32004:	cmp	r0, r3
   32008:	bhi	32014 <myhtml_tree_appropriate_place_inserting@@Base+0x128>
   3200c:	cmp	lr, #0
   32010:	bne	32040 <myhtml_tree_appropriate_place_inserting@@Base+0x154>
   32014:	mov	r0, r1
   32018:	pop	{r4, sl, fp, pc}
   3201c:	mov	r0, #0
   32020:	mov	r1, #0
   32024:	ldr	r3, [r3, #4]
   32028:	cmp	r3, #0
   3202c:	bne	31fc0 <myhtml_tree_appropriate_place_inserting@@Base+0xd4>
   32030:	cmp	r1, #0
   32034:	bne	32004 <myhtml_tree_appropriate_place_inserting@@Base+0x118>
   32038:	cmp	lr, #0
   3203c:	beq	320a4 <myhtml_tree_appropriate_place_inserting@@Base+0x1b8>
   32040:	ldr	r0, [lr, #24]
   32044:	cmp	r0, #0
   32048:	beq	32094 <myhtml_tree_appropriate_place_inserting@@Base+0x1a8>
   3204c:	ldr	r1, [lr, #12]
   32050:	mov	r0, #2
   32054:	cmp	r1, #0
   32058:	movweq	r0, #1
   3205c:	moveq	r1, lr
   32060:	str	r0, [r2]
   32064:	mov	r0, r1
   32068:	pop	{r4, sl, fp, pc}
   3206c:	mov	r3, #0
   32070:	mov	lr, #0
   32074:	cmp	r1, #0
   32078:	bne	32004 <myhtml_tree_appropriate_place_inserting@@Base+0x118>
   3207c:	b	32038 <myhtml_tree_appropriate_place_inserting@@Base+0x14c>
   32080:	mov	r1, #0
   32084:	ldr	r3, [r3, #4]
   32088:	cmp	r3, #0
   3208c:	bne	31fc0 <myhtml_tree_appropriate_place_inserting@@Base+0xd4>
   32090:	b	32030 <myhtml_tree_appropriate_place_inserting@@Base+0x144>
   32094:	add	r0, ip, r3, lsl #2
   32098:	ldr	r1, [r0, #-4]
   3209c:	mov	r0, r1
   320a0:	pop	{r4, sl, fp, pc}
   320a4:	ldr	r1, [ip]
   320a8:	mov	r0, r1
   320ac:	pop	{r4, sl, fp, pc}

000320b0 <myhtml_tree_open_elements_append@@Base>:
   320b0:	push	{r4, r5, fp, lr}
   320b4:	add	fp, sp, #8
   320b8:	ldr	r5, [r0, #128]	; 0x80
   320bc:	mov	r4, r1
   320c0:	ldr	r1, [r5, #8]
   320c4:	ldr	r0, [r5, #4]
   320c8:	cmp	r0, r1
   320cc:	bcc	320ec <myhtml_tree_open_elements_append@@Base+0x3c>
   320d0:	lsl	r0, r1, #1
   320d4:	lsl	r1, r1, #3
   320d8:	str	r0, [r5, #8]
   320dc:	ldr	r0, [r5]
   320e0:	bl	10d9c <mycore_realloc@plt>
   320e4:	cmp	r0, #0
   320e8:	strne	r0, [r5]
   320ec:	ldr	r0, [r5]
   320f0:	ldr	r1, [r5, #4]
   320f4:	str	r4, [r0, r1, lsl #2]
   320f8:	ldr	r0, [r5, #4]
   320fc:	add	r0, r0, #1
   32100:	str	r0, [r5, #4]
   32104:	pop	{r4, r5, fp, pc}

00032108 <myhtml_tree_node_insert@@Base>:
   32108:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3210c:	add	fp, sp, #24
   32110:	sub	sp, sp, #8
   32114:	mov	r5, r0
   32118:	mov	r7, r1
   3211c:	ldr	r0, [r0, #12]
   32120:	mov	r6, r2
   32124:	mov	r2, #0
   32128:	mov	r8, #0
   3212c:	ldr	r1, [r5, #48]	; 0x30
   32130:	bl	1190c <mcobject_async_malloc@plt>
   32134:	vmov.i32	q8, #0	; 0x00000000
   32138:	mov	r4, r0
   3213c:	str	r8, [r0, #32]
   32140:	str	r5, [r0, #40]	; 0x28
   32144:	mov	r0, #36	; 0x24
   32148:	add	r2, sp, #4
   3214c:	mov	r1, r4
   32150:	vst1.32	{d16-d17}, [r1], r0
   32154:	add	r0, r4, #16
   32158:	str	r7, [r4, #4]
   3215c:	str	r6, [r4, #8]
   32160:	vst1.32	{d16-d17}, [r0]
   32164:	str	r8, [r1]
   32168:	mov	r0, r5
   3216c:	mov	r1, #0
   32170:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   32174:	ldr	r2, [sp, #4]
   32178:	mov	r1, r4
   3217c:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   32180:	ldr	r5, [r5, #128]	; 0x80
   32184:	ldr	r1, [r5, #8]
   32188:	ldr	r0, [r5, #4]
   3218c:	cmp	r0, r1
   32190:	bcc	321b0 <myhtml_tree_node_insert@@Base+0xa8>
   32194:	lsl	r0, r1, #1
   32198:	lsl	r1, r1, #3
   3219c:	str	r0, [r5, #8]
   321a0:	ldr	r0, [r5]
   321a4:	bl	10d9c <mycore_realloc@plt>
   321a8:	cmp	r0, #0
   321ac:	strne	r0, [r5]
   321b0:	ldr	r0, [r5]
   321b4:	ldr	r1, [r5, #4]
   321b8:	str	r4, [r0, r1, lsl #2]
   321bc:	ldr	r0, [r5, #4]
   321c0:	add	r0, r0, #1
   321c4:	str	r0, [r5, #4]
   321c8:	mov	r0, r4
   321cc:	sub	sp, fp, #24
   321d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000321d4 <myhtml_tree_node_insert_comment@@Base>:
   321d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   321d8:	add	fp, sp, #24
   321dc:	sub	sp, sp, #8
   321e0:	mov	r7, r0
   321e4:	mov	r8, r1
   321e8:	ldr	r0, [r0, #12]
   321ec:	mov	r4, r2
   321f0:	mov	r2, #0
   321f4:	mov	r6, #0
   321f8:	ldr	r1, [r7, #48]	; 0x30
   321fc:	bl	1190c <mcobject_async_malloc@plt>
   32200:	vmov.i32	q8, #0	; 0x00000000
   32204:	mov	r5, r0
   32208:	str	r8, [r0, #32]
   3220c:	str	r7, [r0, #40]	; 0x28
   32210:	mov	r0, #36	; 0x24
   32214:	cmp	r4, #0
   32218:	mov	r2, #1
   3221c:	mov	r1, r5
   32220:	vst1.32	{d16-d17}, [r1], r0
   32224:	mov	r0, #2
   32228:	stmib	r5, {r0, r2}
   3222c:	add	r0, r5, #16
   32230:	str	r6, [r1]
   32234:	vst1.32	{d16-d17}, [r0]
   32238:	str	r6, [sp, #4]
   3223c:	bne	32258 <myhtml_tree_node_insert_comment@@Base+0x84>
   32240:	add	r2, sp, #4
   32244:	mov	r0, r7
   32248:	mov	r1, #0
   3224c:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   32250:	ldr	r6, [sp, #4]
   32254:	mov	r4, r0
   32258:	mov	r0, r4
   3225c:	mov	r1, r5
   32260:	mov	r2, r6
   32264:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   32268:	ldr	r0, [r4, #8]
   3226c:	str	r0, [r5, #8]
   32270:	mov	r0, r5
   32274:	sub	sp, fp, #24
   32278:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003227c <myhtml_tree_node_insert_doctype@@Base>:
   3227c:	push	{r4, r5, r6, r7, fp, lr}
   32280:	add	fp, sp, #16
   32284:	mov	r4, r0
   32288:	mov	r6, r1
   3228c:	ldr	r0, [r0, #12]
   32290:	mov	r2, #0
   32294:	mov	r7, #0
   32298:	ldr	r1, [r4, #48]	; 0x30
   3229c:	bl	1190c <mcobject_async_malloc@plt>
   322a0:	vmov.i32	q8, #0	; 0x00000000
   322a4:	mov	r5, r0
   322a8:	str	r6, [r0, #32]
   322ac:	str	r4, [r0, #40]	; 0x28
   322b0:	add	r0, r0, #16
   322b4:	mov	r1, r5
   322b8:	vst1.32	{d16-d17}, [r0]
   322bc:	mov	r0, #36	; 0x24
   322c0:	vst1.32	{d16-d17}, [r1], r0
   322c4:	mov	r0, #1
   322c8:	str	r7, [r1]
   322cc:	mov	r1, #3
   322d0:	str	r1, [r5, #4]
   322d4:	str	r0, [r5, #8]
   322d8:	ldr	r0, [r4, #84]	; 0x54
   322dc:	ldr	r1, [r0, #28]
   322e0:	cmp	r1, #0
   322e4:	streq	r5, [r0, #20]
   322e8:	strne	r5, [r1, #16]
   322ec:	strne	r1, [r5, #12]
   322f0:	str	r0, [r5, #24]
   322f4:	str	r5, [r0, #28]
   322f8:	ldr	r3, [r4, #236]	; 0xec
   322fc:	cmp	r3, #0
   32300:	beq	32314 <myhtml_tree_node_insert_doctype@@Base+0x98>
   32304:	ldr	r2, [r4, #244]	; 0xf4
   32308:	mov	r0, r4
   3230c:	mov	r1, r5
   32310:	blx	r3
   32314:	mov	r0, r5
   32318:	pop	{r4, r5, r6, r7, fp, pc}

0003231c <myhtml_tree_node_insert_root@@Base>:
   3231c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32320:	add	fp, sp, #24
   32324:	mov	r4, r0
   32328:	mov	r7, r1
   3232c:	ldr	r0, [r0, #12]
   32330:	mov	r8, r2
   32334:	mov	r2, #0
   32338:	mov	r6, #0
   3233c:	ldr	r1, [r4, #48]	; 0x30
   32340:	bl	1190c <mcobject_async_malloc@plt>
   32344:	vmov.i32	q8, #0	; 0x00000000
   32348:	mov	r5, r0
   3234c:	str	r6, [r0, #32]
   32350:	str	r4, [r0, #40]	; 0x28
   32354:	mov	r0, #36	; 0x24
   32358:	cmp	r7, #0
   3235c:	mov	r1, r5
   32360:	vst1.32	{d16-d17}, [r1], r0
   32364:	mov	r0, #1
   32368:	str	r0, [r5, #8]
   3236c:	add	r0, r5, #16
   32370:	str	r6, [r1]
   32374:	vst1.32	{d16-d17}, [r0]
   32378:	beq	32384 <myhtml_tree_node_insert_root@@Base+0x68>
   3237c:	ldr	r0, [r7]
   32380:	b	32388 <myhtml_tree_node_insert_root@@Base+0x6c>
   32384:	mov	r0, #65	; 0x41
   32388:	str	r7, [r5, #32]
   3238c:	stmib	r5, {r0, r8}
   32390:	ldr	r0, [r4, #84]	; 0x54
   32394:	ldr	r1, [r0, #28]
   32398:	cmp	r1, #0
   3239c:	streq	r5, [r0, #20]
   323a0:	strne	r5, [r1, #16]
   323a4:	strne	r1, [r5, #12]
   323a8:	str	r0, [r5, #24]
   323ac:	str	r5, [r0, #28]
   323b0:	ldr	r3, [r4, #236]	; 0xec
   323b4:	cmp	r3, #0
   323b8:	beq	323cc <myhtml_tree_node_insert_root@@Base+0xb0>
   323bc:	ldr	r2, [r4, #244]	; 0xf4
   323c0:	mov	r0, r4
   323c4:	mov	r1, r5
   323c8:	blx	r3
   323cc:	ldr	r6, [r4, #128]	; 0x80
   323d0:	ldr	r1, [r6, #8]
   323d4:	ldr	r0, [r6, #4]
   323d8:	cmp	r0, r1
   323dc:	bcc	323fc <myhtml_tree_node_insert_root@@Base+0xe0>
   323e0:	lsl	r0, r1, #1
   323e4:	lsl	r1, r1, #3
   323e8:	str	r0, [r6, #8]
   323ec:	ldr	r0, [r6]
   323f0:	bl	10d9c <mycore_realloc@plt>
   323f4:	cmp	r0, #0
   323f8:	strne	r0, [r6]
   323fc:	ldr	r0, [r6]
   32400:	ldr	r1, [r6, #4]
   32404:	str	r5, [r0, r1, lsl #2]
   32408:	ldr	r0, [r6, #4]
   3240c:	add	r0, r0, #1
   32410:	str	r0, [r6, #4]
   32414:	mov	r0, r5
   32418:	str	r5, [r4, #96]	; 0x60
   3241c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00032420 <myhtml_tree_node_insert_text@@Base>:
   32420:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32424:	add	fp, sp, #24
   32428:	sub	sp, sp, #8
   3242c:	mov	r8, r1
   32430:	add	r2, sp, #4
   32434:	mov	r1, #0
   32438:	mov	r6, r0
   3243c:	mov	r4, #0
   32440:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   32444:	mov	r5, r0
   32448:	ldr	r0, [r6, #84]	; 0x54
   3244c:	cmp	r5, r0
   32450:	beq	324bc <myhtml_tree_node_insert_text@@Base+0x9c>
   32454:	ldr	r7, [sp, #4]
   32458:	cmp	r7, #1
   3245c:	beq	32490 <myhtml_tree_node_insert_text@@Base+0x70>
   32460:	cmp	r7, #2
   32464:	bne	324c8 <myhtml_tree_node_insert_text@@Base+0xa8>
   32468:	ldr	r0, [r5, #4]
   3246c:	cmp	r0, #1
   32470:	bne	3250c <myhtml_tree_node_insert_text@@Base+0xec>
   32474:	ldr	r1, [r5, #32]
   32478:	cmp	r1, #0
   3247c:	beq	3250c <myhtml_tree_node_insert_text@@Base+0xec>
   32480:	mov	r0, r6
   32484:	mov	r2, r8
   32488:	mov	r3, #0
   3248c:	b	324b4 <myhtml_tree_node_insert_text@@Base+0x94>
   32490:	ldr	r0, [r5, #4]
   32494:	cmp	r0, #1
   32498:	bne	3250c <myhtml_tree_node_insert_text@@Base+0xec>
   3249c:	ldr	r2, [r5, #32]
   324a0:	cmp	r2, #0
   324a4:	beq	3250c <myhtml_tree_node_insert_text@@Base+0xec>
   324a8:	mov	r0, r6
   324ac:	mov	r1, r8
   324b0:	mov	r3, #1
   324b4:	bl	113d8 <myhtml_token_merged_two_token_string@plt>
   324b8:	mov	r4, r5
   324bc:	mov	r0, r4
   324c0:	sub	sp, fp, #24
   324c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   324c8:	ldr	r0, [r5, #28]
   324cc:	cmp	r0, #0
   324d0:	beq	3250c <myhtml_tree_node_insert_text@@Base+0xec>
   324d4:	ldr	r1, [r0, #4]
   324d8:	cmp	r1, #1
   324dc:	bne	3250c <myhtml_tree_node_insert_text@@Base+0xec>
   324e0:	ldr	r1, [r0, #32]
   324e4:	cmp	r1, #0
   324e8:	beq	3250c <myhtml_tree_node_insert_text@@Base+0xec>
   324ec:	mov	r0, r6
   324f0:	mov	r2, r8
   324f4:	mov	r3, #0
   324f8:	bl	113d8 <myhtml_token_merged_two_token_string@plt>
   324fc:	ldr	r4, [r5, #28]
   32500:	mov	r0, r4
   32504:	sub	sp, fp, #24
   32508:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3250c:	ldr	r0, [r6, #12]
   32510:	ldr	r1, [r6, #48]	; 0x30
   32514:	mov	r2, #0
   32518:	mov	r9, #0
   3251c:	bl	1190c <mcobject_async_malloc@plt>
   32520:	vmov.i32	q8, #0	; 0x00000000
   32524:	mov	r4, r0
   32528:	str	r8, [r0, #32]
   3252c:	str	r6, [r0, #40]	; 0x28
   32530:	mov	r0, #36	; 0x24
   32534:	mov	r2, r7
   32538:	mov	r1, r4
   3253c:	vst1.32	{d16-d17}, [r1], r0
   32540:	mov	r0, #1
   32544:	str	r0, [r4, #4]
   32548:	str	r0, [r4, #8]
   3254c:	add	r0, r4, #16
   32550:	str	r9, [r1]
   32554:	mov	r1, r4
   32558:	vst1.32	{d16-d17}, [r0]
   3255c:	ldr	r0, [r5, #8]
   32560:	str	r0, [r4, #8]
   32564:	mov	r0, r5
   32568:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   3256c:	mov	r0, r4
   32570:	sub	sp, fp, #24
   32574:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00032578 <myhtml_tree_node_insert_by_node@@Base>:
   32578:	push	{r4, r5, fp, lr}
   3257c:	add	fp, sp, #8
   32580:	sub	sp, sp, #8
   32584:	mov	r4, r1
   32588:	add	r2, sp, #4
   3258c:	mov	r1, #0
   32590:	mov	r5, r0
   32594:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   32598:	ldr	r2, [sp, #4]
   3259c:	mov	r1, r4
   325a0:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   325a4:	ldr	r5, [r5, #128]	; 0x80
   325a8:	ldr	r1, [r5, #8]
   325ac:	ldr	r0, [r5, #4]
   325b0:	cmp	r0, r1
   325b4:	bcc	325d4 <myhtml_tree_node_insert_by_node@@Base+0x5c>
   325b8:	lsl	r0, r1, #1
   325bc:	lsl	r1, r1, #3
   325c0:	str	r0, [r5, #8]
   325c4:	ldr	r0, [r5]
   325c8:	bl	10d9c <mycore_realloc@plt>
   325cc:	cmp	r0, #0
   325d0:	strne	r0, [r5]
   325d4:	ldr	r0, [r5]
   325d8:	ldr	r1, [r5, #4]
   325dc:	str	r4, [r0, r1, lsl #2]
   325e0:	ldr	r0, [r5, #4]
   325e4:	add	r0, r0, #1
   325e8:	str	r0, [r5, #4]
   325ec:	mov	r0, r4
   325f0:	sub	sp, fp, #8
   325f4:	pop	{r4, r5, fp, pc}

000325f8 <myhtml_tree_node_insert_foreign_element@@Base>:
   325f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   325fc:	add	fp, sp, #24
   32600:	sub	sp, sp, #8
   32604:	mov	r6, r1
   32608:	add	r2, sp, #4
   3260c:	mov	r1, #0
   32610:	mov	r5, r0
   32614:	mov	r8, #0
   32618:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   3261c:	mov	r7, r0
   32620:	ldr	r0, [r5, #12]
   32624:	ldr	r1, [r5, #48]	; 0x30
   32628:	mov	r2, #0
   3262c:	bl	1190c <mcobject_async_malloc@plt>
   32630:	vmov.i32	q8, #0	; 0x00000000
   32634:	mov	r4, r0
   32638:	str	r8, [r0, #32]
   3263c:	str	r5, [r0, #40]	; 0x28
   32640:	mov	r0, #36	; 0x24
   32644:	mov	r1, r4
   32648:	vst1.32	{d16-d17}, [r1], r0
   3264c:	mov	r0, #1
   32650:	str	r0, [r4, #8]
   32654:	add	r0, r4, #16
   32658:	str	r8, [r1]
   3265c:	mov	r1, r4
   32660:	vst1.32	{d16-d17}, [r0]
   32664:	ldr	r0, [r6]
   32668:	str	r6, [r4, #32]
   3266c:	str	r0, [r4, #4]
   32670:	ldr	r0, [r7, #8]
   32674:	str	r0, [r4, #8]
   32678:	mov	r0, r7
   3267c:	ldr	r2, [sp, #4]
   32680:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   32684:	ldr	r5, [r5, #128]	; 0x80
   32688:	ldr	r1, [r5, #8]
   3268c:	ldr	r0, [r5, #4]
   32690:	cmp	r0, r1
   32694:	bcc	326b4 <myhtml_tree_node_insert_foreign_element@@Base+0xbc>
   32698:	lsl	r0, r1, #1
   3269c:	lsl	r1, r1, #3
   326a0:	str	r0, [r5, #8]
   326a4:	ldr	r0, [r5]
   326a8:	bl	10d9c <mycore_realloc@plt>
   326ac:	cmp	r0, #0
   326b0:	strne	r0, [r5]
   326b4:	ldr	r0, [r5]
   326b8:	ldr	r1, [r5, #4]
   326bc:	str	r4, [r0, r1, lsl #2]
   326c0:	ldr	r0, [r5, #4]
   326c4:	add	r0, r0, #1
   326c8:	str	r0, [r5, #4]
   326cc:	mov	r0, r4
   326d0:	sub	sp, fp, #24
   326d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000326d8 <myhtml_tree_node_insert_html_element@@Base>:
   326d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   326dc:	add	fp, sp, #24
   326e0:	sub	sp, sp, #8
   326e4:	mov	r6, r1
   326e8:	add	r2, sp, #4
   326ec:	mov	r1, #0
   326f0:	mov	r5, r0
   326f4:	mov	r8, #0
   326f8:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   326fc:	mov	r7, r0
   32700:	ldr	r0, [r5, #12]
   32704:	ldr	r1, [r5, #48]	; 0x30
   32708:	mov	r2, #0
   3270c:	bl	1190c <mcobject_async_malloc@plt>
   32710:	vmov.i32	q8, #0	; 0x00000000
   32714:	mov	r4, r0
   32718:	str	r8, [r0, #32]
   3271c:	str	r5, [r0, #40]	; 0x28
   32720:	add	r0, r0, #16
   32724:	mov	r1, r4
   32728:	vst1.32	{d16-d17}, [r0]
   3272c:	mov	r0, #36	; 0x24
   32730:	vst1.32	{d16-d17}, [r1], r0
   32734:	str	r8, [r1]
   32738:	mov	r1, #1
   3273c:	ldr	r0, [r6]
   32740:	str	r6, [r4, #32]
   32744:	stmib	r4, {r0, r1}
   32748:	mov	r0, r7
   3274c:	mov	r1, r4
   32750:	ldr	r2, [sp, #4]
   32754:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   32758:	ldr	r5, [r5, #128]	; 0x80
   3275c:	ldr	r1, [r5, #8]
   32760:	ldr	r0, [r5, #4]
   32764:	cmp	r0, r1
   32768:	bcc	32788 <myhtml_tree_node_insert_html_element@@Base+0xb0>
   3276c:	lsl	r0, r1, #1
   32770:	lsl	r1, r1, #3
   32774:	str	r0, [r5, #8]
   32778:	ldr	r0, [r5]
   3277c:	bl	10d9c <mycore_realloc@plt>
   32780:	cmp	r0, #0
   32784:	strne	r0, [r5]
   32788:	ldr	r0, [r5]
   3278c:	ldr	r1, [r5, #4]
   32790:	str	r4, [r0, r1, lsl #2]
   32794:	ldr	r0, [r5, #4]
   32798:	add	r0, r0, #1
   3279c:	str	r0, [r5, #4]
   327a0:	mov	r0, r4
   327a4:	sub	sp, fp, #24
   327a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000327ac <myhtml_tree_element_in_scope@@Base>:
   327ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   327b0:	add	fp, sp, #24
   327b4:	mov	r4, r1
   327b8:	ldr	r1, [r0, #128]	; 0x80
   327bc:	mov	r5, r0
   327c0:	ldr	r0, [r1, #4]
   327c4:	cmp	r0, #0
   327c8:	beq	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   327cc:	ldr	r6, [r1]
   327d0:	mov	r9, r3
   327d4:	mov	r8, r2
   327d8:	sub	r7, r0, #1
   327dc:	cmp	r2, #0
   327e0:	beq	3288c <myhtml_tree_element_in_scope@@Base+0xe0>
   327e4:	cmp	r9, #128	; 0x80
   327e8:	bne	3283c <myhtml_tree_element_in_scope@@Base+0x90>
   327ec:	ldr	r0, [r6, r7, lsl #2]
   327f0:	ldr	r1, [r0, #4]
   327f4:	ldr	r0, [r5, #28]
   327f8:	bl	117f8 <myhtml_tag_get_by_id@plt>
   327fc:	mov	r1, r0
   32800:	ldr	r0, [r6, r7, lsl #2]
   32804:	ldr	r3, [r0, #4]
   32808:	ldr	r2, [r0, #8]
   3280c:	cmp	r3, r4
   32810:	cmpeq	r2, r8
   32814:	beq	3292c <myhtml_tree_element_in_scope@@Base+0x180>
   32818:	add	r0, r1, r2, lsl #2
   3281c:	ldrb	r0, [r0, #16]
   32820:	tst	r0, #128	; 0x80
   32824:	beq	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   32828:	sub	r0, r7, #1
   3282c:	cmp	r7, #0
   32830:	mov	r7, r0
   32834:	bne	327ec <myhtml_tree_element_in_scope@@Base+0x40>
   32838:	b	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   3283c:	ldr	r0, [r6, r7, lsl #2]
   32840:	ldr	r1, [r0, #4]
   32844:	ldr	r0, [r5, #28]
   32848:	bl	117f8 <myhtml_tag_get_by_id@plt>
   3284c:	mov	r1, r0
   32850:	ldr	r0, [r6, r7, lsl #2]
   32854:	ldr	r3, [r0, #4]
   32858:	ldr	r2, [r0, #8]
   3285c:	cmp	r3, r4
   32860:	cmpeq	r2, r8
   32864:	beq	3292c <myhtml_tree_element_in_scope@@Base+0x180>
   32868:	add	r0, r1, r2, lsl #2
   3286c:	ldr	r0, [r0, #16]
   32870:	tst	r0, r9
   32874:	bne	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   32878:	sub	r0, r7, #1
   3287c:	cmp	r7, #0
   32880:	mov	r7, r0
   32884:	bne	3283c <myhtml_tree_element_in_scope@@Base+0x90>
   32888:	b	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   3288c:	cmp	r9, #128	; 0x80
   32890:	bne	328e0 <myhtml_tree_element_in_scope@@Base+0x134>
   32894:	ldr	r0, [r6, r7, lsl #2]
   32898:	ldr	r1, [r0, #4]
   3289c:	ldr	r0, [r5, #28]
   328a0:	bl	117f8 <myhtml_tag_get_by_id@plt>
   328a4:	mov	r1, r0
   328a8:	ldr	r0, [r6, r7, lsl #2]
   328ac:	ldr	r2, [r0, #4]
   328b0:	cmp	r2, r4
   328b4:	beq	3292c <myhtml_tree_element_in_scope@@Base+0x180>
   328b8:	ldr	r0, [r0, #8]
   328bc:	add	r0, r1, r0, lsl #2
   328c0:	ldrb	r0, [r0, #16]
   328c4:	tst	r0, #128	; 0x80
   328c8:	beq	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   328cc:	sub	r0, r7, #1
   328d0:	cmp	r7, #0
   328d4:	mov	r7, r0
   328d8:	bne	32894 <myhtml_tree_element_in_scope@@Base+0xe8>
   328dc:	b	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   328e0:	ldr	r0, [r6, r7, lsl #2]
   328e4:	ldr	r1, [r0, #4]
   328e8:	ldr	r0, [r5, #28]
   328ec:	bl	117f8 <myhtml_tag_get_by_id@plt>
   328f0:	mov	r1, r0
   328f4:	ldr	r0, [r6, r7, lsl #2]
   328f8:	ldr	r2, [r0, #4]
   328fc:	cmp	r2, r4
   32900:	beq	3292c <myhtml_tree_element_in_scope@@Base+0x180>
   32904:	ldr	r0, [r0, #8]
   32908:	add	r0, r1, r0, lsl #2
   3290c:	ldr	r0, [r0, #16]
   32910:	tst	r0, r9
   32914:	bne	32928 <myhtml_tree_element_in_scope@@Base+0x17c>
   32918:	sub	r0, r7, #1
   3291c:	cmp	r7, #0
   32920:	mov	r7, r0
   32924:	bne	328e0 <myhtml_tree_element_in_scope@@Base+0x134>
   32928:	mov	r0, #0
   3292c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00032930 <myhtml_tree_element_in_scope_by_node@@Base>:
   32930:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32934:	add	fp, sp, #24
   32938:	ldr	r7, [r0, #40]	; 0x28
   3293c:	mov	r9, r1
   32940:	mov	r5, r0
   32944:	mov	r8, #0
   32948:	ldr	r1, [r7, #128]	; 0x80
   3294c:	ldr	r0, [r1, #4]
   32950:	cmp	r0, #0
   32954:	beq	329ec <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   32958:	ldr	r4, [r1]
   3295c:	sub	r6, r0, #1
   32960:	cmp	r9, #128	; 0x80
   32964:	bne	329ac <myhtml_tree_element_in_scope_by_node@@Base+0x7c>
   32968:	ldr	r0, [r4, r6, lsl #2]
   3296c:	ldr	r1, [r0, #4]
   32970:	ldr	r0, [r7, #28]
   32974:	bl	117f8 <myhtml_tag_get_by_id@plt>
   32978:	ldr	r1, [r4, r6, lsl #2]
   3297c:	cmp	r1, r5
   32980:	beq	329f4 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   32984:	ldr	r1, [r1, #8]
   32988:	add	r0, r0, r1, lsl #2
   3298c:	ldrb	r0, [r0, #16]
   32990:	tst	r0, #128	; 0x80
   32994:	beq	329ec <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   32998:	sub	r0, r6, #1
   3299c:	cmp	r6, #0
   329a0:	mov	r6, r0
   329a4:	bne	32968 <myhtml_tree_element_in_scope_by_node@@Base+0x38>
   329a8:	b	329ec <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   329ac:	ldr	r0, [r4, r6, lsl #2]
   329b0:	ldr	r1, [r0, #4]
   329b4:	ldr	r0, [r7, #28]
   329b8:	bl	117f8 <myhtml_tag_get_by_id@plt>
   329bc:	ldr	r1, [r4, r6, lsl #2]
   329c0:	cmp	r1, r5
   329c4:	beq	329f4 <myhtml_tree_element_in_scope_by_node@@Base+0xc4>
   329c8:	ldr	r1, [r1, #8]
   329cc:	add	r0, r0, r1, lsl #2
   329d0:	ldr	r0, [r0, #16]
   329d4:	tst	r0, r9
   329d8:	bne	329ec <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   329dc:	sub	r0, r6, #1
   329e0:	cmp	r6, #0
   329e4:	mov	r6, r0
   329e8:	bne	329ac <myhtml_tree_element_in_scope_by_node@@Base+0x7c>
   329ec:	mov	r0, r8
   329f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   329f4:	mov	r8, #1
   329f8:	mov	r0, r8
   329fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00032a00 <myhtml_tree_list_append@@Base>:
   32a00:	push	{r4, r5, fp, lr}
   32a04:	add	fp, sp, #8
   32a08:	mov	r4, r0
   32a0c:	mov	r5, r1
   32a10:	ldr	r0, [r0, #4]
   32a14:	ldr	r1, [r4, #8]
   32a18:	cmp	r0, r1
   32a1c:	bcc	32a3c <myhtml_tree_list_append@@Base+0x3c>
   32a20:	lsl	r0, r1, #1
   32a24:	lsl	r1, r1, #3
   32a28:	str	r0, [r4, #8]
   32a2c:	ldr	r0, [r4]
   32a30:	bl	10d9c <mycore_realloc@plt>
   32a34:	cmp	r0, #0
   32a38:	strne	r0, [r4]
   32a3c:	ldr	r0, [r4]
   32a40:	ldr	r1, [r4, #4]
   32a44:	str	r5, [r0, r1, lsl #2]
   32a48:	ldr	r0, [r4, #4]
   32a4c:	add	r0, r0, #1
   32a50:	str	r0, [r4, #4]
   32a54:	pop	{r4, r5, fp, pc}

00032a58 <myhtml_tree_list_append_after_index@@Base>:
   32a58:	push	{r4, r5, r6, r7, fp, lr}
   32a5c:	add	fp, sp, #16
   32a60:	mov	r4, r0
   32a64:	mov	r5, r1
   32a68:	ldr	r0, [r0, #4]
   32a6c:	mov	r6, r2
   32a70:	add	r7, r2, #1
   32a74:	ldr	r1, [r4, #8]
   32a78:	cmp	r0, r1
   32a7c:	bcc	32a9c <myhtml_tree_list_append_after_index@@Base+0x44>
   32a80:	lsl	r0, r1, #1
   32a84:	lsl	r1, r1, #3
   32a88:	str	r0, [r4, #8]
   32a8c:	ldr	r0, [r4]
   32a90:	bl	10d9c <mycore_realloc@plt>
   32a94:	cmp	r0, #0
   32a98:	strne	r0, [r4]
   32a9c:	ldr	r0, [r4]
   32aa0:	ldr	r2, [r4, #4]
   32aa4:	add	r1, r0, r7, lsl #2
   32aa8:	add	r0, r0, r6, lsl #2
   32aac:	sub	r2, r2, r7
   32ab0:	lsl	r2, r2, #2
   32ab4:	add	r0, r0, #8
   32ab8:	bl	10f94 <memmove@plt>
   32abc:	ldr	r0, [r4]
   32ac0:	str	r5, [r0, r7, lsl #2]
   32ac4:	ldr	r0, [r4, #4]
   32ac8:	add	r0, r0, #1
   32acc:	str	r0, [r4, #4]
   32ad0:	pop	{r4, r5, r6, r7, fp, pc}

00032ad4 <myhtml_tree_list_insert_by_index@@Base>:
   32ad4:	push	{r4, r5, r6, sl, fp, lr}
   32ad8:	add	fp, sp, #16
   32adc:	mov	r4, r0
   32ae0:	mov	r6, r1
   32ae4:	ldr	r0, [r0, #4]
   32ae8:	mov	r5, r2
   32aec:	ldr	r1, [r4, #8]
   32af0:	cmp	r0, r1
   32af4:	bcc	32b14 <myhtml_tree_list_insert_by_index@@Base+0x40>
   32af8:	lsl	r0, r1, #1
   32afc:	lsl	r1, r1, #3
   32b00:	str	r0, [r4, #8]
   32b04:	ldr	r0, [r4]
   32b08:	bl	10d9c <mycore_realloc@plt>
   32b0c:	cmp	r0, #0
   32b10:	strne	r0, [r4]
   32b14:	ldr	r0, [r4]
   32b18:	ldr	r2, [r4, #4]
   32b1c:	add	r1, r0, r5, lsl #2
   32b20:	sub	r2, r2, r5
   32b24:	lsl	r2, r2, #2
   32b28:	add	r0, r1, #4
   32b2c:	bl	10f94 <memmove@plt>
   32b30:	ldr	r0, [r4]
   32b34:	str	r6, [r0, r5, lsl #2]
   32b38:	ldr	r0, [r4, #4]
   32b3c:	add	r0, r0, #1
   32b40:	str	r0, [r4, #4]
   32b44:	pop	{r4, r5, r6, sl, fp, pc}

00032b48 <myhtml_tree_list_current_node@@Base>:
   32b48:	ldr	r1, [r0, #4]
   32b4c:	cmp	r1, #0
   32b50:	moveq	r0, #0
   32b54:	bxeq	lr
   32b58:	ldr	r1, [r0]
   32b5c:	ldr	r0, [r0, #4]
   32b60:	add	r0, r1, r0, lsl #2
   32b64:	ldr	r0, [r0, #-4]
   32b68:	bx	lr

00032b6c <myhtml_tree_current_node@@Base>:
   32b6c:	ldr	r0, [r0, #128]	; 0x80
   32b70:	ldr	r1, [r0, #4]
   32b74:	cmp	r1, #0
   32b78:	moveq	r0, #0
   32b7c:	bxeq	lr
   32b80:	ldr	r1, [r0]
   32b84:	ldr	r0, [r0, #4]
   32b88:	add	r0, r1, r0, lsl #2
   32b8c:	ldr	r0, [r0, #-4]
   32b90:	bx	lr

00032b94 <myhtml_tree_adjusted_current_node@@Base>:
   32b94:	ldr	r1, [r0, #128]	; 0x80
   32b98:	ldr	r2, [r1, #4]
   32b9c:	cmp	r2, #1
   32ba0:	bne	32bb0 <myhtml_tree_adjusted_current_node@@Base+0x1c>
   32ba4:	ldr	r0, [r0, #88]	; 0x58
   32ba8:	cmp	r0, #0
   32bac:	bxne	lr
   32bb0:	ldr	r0, [r1, #4]
   32bb4:	cmp	r0, #0
   32bb8:	moveq	r0, #0
   32bbc:	bxeq	lr
   32bc0:	ldr	r0, [r1]
   32bc4:	ldr	r1, [r1, #4]
   32bc8:	add	r0, r0, r1, lsl #2
   32bcc:	ldr	r0, [r0, #-4]
   32bd0:	bx	lr

00032bd4 <myhtml_tree_open_elements_append_after_index@@Base>:
   32bd4:	push	{r4, r5, r6, r7, fp, lr}
   32bd8:	add	fp, sp, #16
   32bdc:	ldr	r6, [r0, #128]	; 0x80
   32be0:	mov	r4, r1
   32be4:	mov	r5, r2
   32be8:	add	r7, r2, #1
   32bec:	ldr	r1, [r6, #8]
   32bf0:	ldr	r0, [r6, #4]
   32bf4:	cmp	r0, r1
   32bf8:	bcc	32c18 <myhtml_tree_open_elements_append_after_index@@Base+0x44>
   32bfc:	lsl	r0, r1, #1
   32c00:	lsl	r1, r1, #3
   32c04:	str	r0, [r6, #8]
   32c08:	ldr	r0, [r6]
   32c0c:	bl	10d9c <mycore_realloc@plt>
   32c10:	cmp	r0, #0
   32c14:	strne	r0, [r6]
   32c18:	ldr	r0, [r6]
   32c1c:	ldr	r2, [r6, #4]
   32c20:	add	r1, r0, r7, lsl #2
   32c24:	add	r0, r0, r5, lsl #2
   32c28:	sub	r2, r2, r7
   32c2c:	lsl	r2, r2, #2
   32c30:	add	r0, r0, #8
   32c34:	bl	10f94 <memmove@plt>
   32c38:	ldr	r0, [r6]
   32c3c:	str	r4, [r0, r7, lsl #2]
   32c40:	ldr	r0, [r6, #4]
   32c44:	add	r0, r0, #1
   32c48:	str	r0, [r6, #4]
   32c4c:	pop	{r4, r5, r6, r7, fp, pc}

00032c50 <myhtml_tree_open_elements_pop@@Base>:
   32c50:	ldr	r0, [r0, #128]	; 0x80
   32c54:	ldr	r1, [r0, #4]
   32c58:	cmp	r1, #0
   32c5c:	ldrne	r1, [r0, #4]
   32c60:	subne	r1, r1, #1
   32c64:	strne	r1, [r0, #4]
   32c68:	bx	lr

00032c6c <myhtml_tree_open_elements_remove@@Base>:
   32c6c:	push	{r4, r5, fp, lr}
   32c70:	add	fp, sp, #8
   32c74:	mov	r5, r0
   32c78:	ldr	r0, [r0, #128]	; 0x80
   32c7c:	ldr	r2, [r0, #4]
   32c80:	ldr	r3, [r0]
   32c84:	add	r3, r3, r2, lsl #2
   32c88:	add	r3, r3, #4
   32c8c:	cmp	r2, #0
   32c90:	beq	32cd4 <myhtml_tree_open_elements_remove@@Base+0x68>
   32c94:	sub	r4, r3, #4
   32c98:	ldr	r3, [r3, #-8]
   32c9c:	sub	r2, r2, #1
   32ca0:	cmp	r3, r1
   32ca4:	mov	r3, r4
   32ca8:	bne	32c8c <myhtml_tree_open_elements_remove@@Base+0x20>
   32cac:	ldr	r0, [r0, #4]
   32cb0:	mov	r1, r4
   32cb4:	sub	r0, r0, r2
   32cb8:	lsl	r2, r0, #2
   32cbc:	sub	r0, r4, #4
   32cc0:	bl	10f94 <memmove@plt>
   32cc4:	ldr	r0, [r5, #128]	; 0x80
   32cc8:	ldr	r1, [r0, #4]
   32ccc:	sub	r1, r1, #1
   32cd0:	str	r1, [r0, #4]
   32cd4:	pop	{r4, r5, fp, pc}

00032cd8 <myhtml_tree_open_elements_pop_until@@Base>:
   32cd8:	push	{fp, lr}
   32cdc:	mov	fp, sp
   32ce0:	ldr	lr, [r0, #128]	; 0x80
   32ce4:	ldr	ip, [lr]
   32ce8:	ldr	r0, [lr, #4]
   32cec:	cmp	r0, #0
   32cf0:	beq	32d84 <myhtml_tree_open_elements_pop_until@@Base+0xac>
   32cf4:	cmp	r2, #0
   32cf8:	bne	32d0c <myhtml_tree_open_elements_pop_until@@Base+0x34>
   32cfc:	b	32d50 <myhtml_tree_open_elements_pop_until@@Base+0x78>
   32d00:	ldr	r0, [lr, #4]
   32d04:	cmp	r0, #0
   32d08:	beq	32d84 <myhtml_tree_open_elements_pop_until@@Base+0xac>
   32d0c:	ldr	r0, [lr, #4]
   32d10:	sub	r0, r0, #1
   32d14:	str	r0, [lr, #4]
   32d18:	ldr	r0, [lr, #4]
   32d1c:	ldr	r0, [ip, r0, lsl #2]
   32d20:	ldr	r0, [r0, #4]
   32d24:	cmp	r0, r1
   32d28:	bne	32d00 <myhtml_tree_open_elements_pop_until@@Base+0x28>
   32d2c:	ldr	r0, [lr, #4]
   32d30:	ldr	r0, [ip, r0, lsl #2]
   32d34:	ldr	r0, [r0, #8]
   32d38:	cmp	r0, r2
   32d3c:	bne	32d00 <myhtml_tree_open_elements_pop_until@@Base+0x28>
   32d40:	b	32d70 <myhtml_tree_open_elements_pop_until@@Base+0x98>
   32d44:	ldr	r0, [lr, #4]
   32d48:	cmp	r0, #0
   32d4c:	beq	32d84 <myhtml_tree_open_elements_pop_until@@Base+0xac>
   32d50:	ldr	r0, [lr, #4]
   32d54:	sub	r0, r0, #1
   32d58:	str	r0, [lr, #4]
   32d5c:	ldr	r0, [lr, #4]
   32d60:	ldr	r0, [ip, r0, lsl #2]
   32d64:	ldr	r0, [r0, #4]
   32d68:	cmp	r0, r1
   32d6c:	bne	32d44 <myhtml_tree_open_elements_pop_until@@Base+0x6c>
   32d70:	cmp	r3, #0
   32d74:	popeq	{fp, pc}
   32d78:	ldr	r0, [lr, #4]
   32d7c:	add	r0, r0, #1
   32d80:	str	r0, [lr, #4]
   32d84:	pop	{fp, pc}

00032d88 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   32d88:	ldr	r0, [r0, #128]	; 0x80
   32d8c:	ldr	ip, [r0]
   32d90:	ldr	r3, [r0, #4]
   32d94:	cmp	r3, #0
   32d98:	beq	32dcc <myhtml_tree_open_elements_pop_until_by_node@@Base+0x44>
   32d9c:	ldr	r3, [r0, #4]
   32da0:	sub	r3, r3, #1
   32da4:	str	r3, [r0, #4]
   32da8:	ldr	r3, [r0, #4]
   32dac:	ldr	r3, [ip, r3, lsl #2]
   32db0:	cmp	r3, r1
   32db4:	bne	32d90 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   32db8:	cmp	r2, #0
   32dbc:	bxeq	lr
   32dc0:	ldr	r1, [r0, #4]
   32dc4:	add	r1, r1, #1
   32dc8:	str	r1, [r0, #4]
   32dcc:	bx	lr

00032dd0 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   32dd0:	ldr	r0, [r0, #128]	; 0x80
   32dd4:	ldr	r3, [r0, #4]
   32dd8:	cmp	r3, #0
   32ddc:	beq	32e0c <myhtml_tree_open_elements_pop_until_by_index@@Base+0x3c>
   32de0:	ldr	r3, [r0, #4]
   32de4:	sub	r3, r3, #1
   32de8:	str	r3, [r0, #4]
   32dec:	ldr	r3, [r0, #4]
   32df0:	cmp	r3, r1
   32df4:	bne	32dd4 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   32df8:	cmp	r2, #0
   32dfc:	bxeq	lr
   32e00:	ldr	r1, [r0, #4]
   32e04:	add	r1, r1, #1
   32e08:	str	r1, [r0, #4]
   32e0c:	bx	lr

00032e10 <myhtml_tree_open_elements_find_reverse@@Base>:
   32e10:	ldr	r0, [r0, #128]	; 0x80
   32e14:	ldr	r3, [r0, #4]
   32e18:	ldr	r0, [r0]
   32e1c:	sub	ip, r0, #4
   32e20:	cmp	r3, #0
   32e24:	moveq	r0, #0
   32e28:	bxeq	lr
   32e2c:	ldr	r0, [ip, r3, lsl #2]
   32e30:	sub	r3, r3, #1
   32e34:	cmp	r0, r1
   32e38:	bne	32e20 <myhtml_tree_open_elements_find_reverse@@Base+0x10>
   32e3c:	mov	r0, #1
   32e40:	cmp	r2, #0
   32e44:	strne	r3, [r2]
   32e48:	bx	lr

00032e4c <myhtml_tree_open_elements_find@@Base>:
   32e4c:	push	{fp, lr}
   32e50:	mov	fp, sp
   32e54:	ldr	lr, [r0, #128]	; 0x80
   32e58:	ldr	ip, [lr]
   32e5c:	ldr	r3, [lr, #4]
   32e60:	cmp	r3, #0
   32e64:	beq	32e88 <myhtml_tree_open_elements_find@@Base+0x3c>
   32e68:	mov	r3, #0
   32e6c:	ldr	r0, [ip, r3, lsl #2]
   32e70:	cmp	r0, r1
   32e74:	beq	32e90 <myhtml_tree_open_elements_find@@Base+0x44>
   32e78:	ldr	r0, [lr, #4]
   32e7c:	add	r3, r3, #1
   32e80:	cmp	r3, r0
   32e84:	bcc	32e6c <myhtml_tree_open_elements_find@@Base+0x20>
   32e88:	mov	r0, #0
   32e8c:	pop	{fp, pc}
   32e90:	cmp	r2, #0
   32e94:	mov	r0, #1
   32e98:	strne	r3, [r2]
   32e9c:	popne	{fp, pc}
   32ea0:	pop	{fp, pc}

00032ea4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   32ea4:	push	{r4, sl, fp, lr}
   32ea8:	add	fp, sp, #8
   32eac:	ldr	r0, [r0, #128]	; 0x80
   32eb0:	ldr	lr, [r0, #4]
   32eb4:	cmp	lr, #0
   32eb8:	beq	32f2c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x88>
   32ebc:	ldr	ip, [r0]
   32ec0:	rsb	lr, lr, #1
   32ec4:	cmp	r2, #0
   32ec8:	bne	32edc <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x38>
   32ecc:	b	32f08 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x64>
   32ed0:	add	lr, lr, #1
   32ed4:	cmp	lr, #1
   32ed8:	beq	32f2c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x88>
   32edc:	ldr	r0, [ip, -lr, lsl #2]
   32ee0:	ldr	r4, [r0, #4]
   32ee4:	cmp	r4, r1
   32ee8:	bne	32ed0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x2c>
   32eec:	ldr	r4, [r0, #8]
   32ef0:	cmp	r4, r2
   32ef4:	bne	32ed0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x2c>
   32ef8:	b	32f18 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x74>
   32efc:	add	lr, lr, #1
   32f00:	cmp	lr, #1
   32f04:	beq	32f2c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x88>
   32f08:	ldr	r0, [ip, -lr, lsl #2]
   32f0c:	ldr	r2, [r0, #4]
   32f10:	cmp	r2, r1
   32f14:	bne	32efc <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x58>
   32f18:	cmp	r3, #0
   32f1c:	rsb	r1, lr, #0
   32f20:	strne	r1, [r3]
   32f24:	popne	{r4, sl, fp, pc}
   32f28:	pop	{r4, sl, fp, pc}
   32f2c:	mov	r0, #0
   32f30:	pop	{r4, sl, fp, pc}

00032f34 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   32f34:	push	{r4, r5, fp, lr}
   32f38:	add	fp, sp, #8
   32f3c:	ldr	lr, [r0, #128]	; 0x80
   32f40:	ldr	r4, [lr]
   32f44:	ldr	r0, [lr, #4]
   32f48:	cmp	r0, #0
   32f4c:	beq	32fc0 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x8c>
   32f50:	mov	ip, #0
   32f54:	cmp	r2, #0
   32f58:	bne	32f70 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x3c>
   32f5c:	b	32fa0 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x6c>
   32f60:	ldr	r0, [lr, #4]
   32f64:	add	ip, ip, #1
   32f68:	cmp	ip, r0
   32f6c:	bcs	32fc0 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x8c>
   32f70:	ldr	r0, [r4, ip, lsl #2]
   32f74:	ldr	r5, [r0, #4]
   32f78:	cmp	r5, r1
   32f7c:	bne	32f60 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x2c>
   32f80:	ldr	r5, [r0, #8]
   32f84:	cmp	r5, r2
   32f88:	bne	32f60 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x2c>
   32f8c:	b	32fb0 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x7c>
   32f90:	ldr	r0, [lr, #4]
   32f94:	add	ip, ip, #1
   32f98:	cmp	ip, r0
   32f9c:	bcs	32fc0 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x8c>
   32fa0:	ldr	r0, [r4, ip, lsl #2]
   32fa4:	ldr	r2, [r0, #4]
   32fa8:	cmp	r2, r1
   32fac:	bne	32f90 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x5c>
   32fb0:	cmp	r3, #0
   32fb4:	strne	ip, [r3]
   32fb8:	popne	{r4, r5, fp, pc}
   32fbc:	pop	{r4, r5, fp, pc}
   32fc0:	mov	r0, #0
   32fc4:	pop	{r4, r5, fp, pc}

00032fc8 <myhtml_tree_generate_implied_end_tags@@Base>:
   32fc8:	push	{r4, sl, fp, lr}
   32fcc:	add	fp, sp, #8
   32fd0:	ldr	lr, [r0, #128]	; 0x80
   32fd4:	ldr	r0, [lr, #4]
   32fd8:	cmp	r0, #0
   32fdc:	beq	3331c <myhtml_tree_generate_implied_end_tags@@Base+0x354>
   32fe0:	ldr	r0, [lr, #4]
   32fe4:	cmp	r0, #0
   32fe8:	popeq	{r4, sl, fp, pc}
   32fec:	cmp	r2, #0
   32ff0:	bne	33194 <myhtml_tree_generate_implied_end_tags@@Base+0x1cc>
   32ff4:	ldr	ip, [lr]
   32ff8:	ldr	r0, [lr, #4]
   32ffc:	ldr	r0, [lr, #4]
   33000:	add	r0, ip, r0, lsl #2
   33004:	ldr	r0, [r0, #-4]
   33008:	ldr	r3, [r0, #4]
   3300c:	sub	r0, r3, #36	; 0x24
   33010:	cmp	r0, #72	; 0x48
   33014:	bhi	3331c <myhtml_tree_generate_implied_end_tags@@Base+0x354>
   33018:	add	r2, pc, #4
   3301c:	ldr	r0, [r2, r0, lsl #2]
   33020:	add	pc, r2, r0
   33024:	andeq	r0, r0, r4, lsr #2
   33028:	strdeq	r0, [r0], -r8
   3302c:	strdeq	r0, [r0], -r8
   33030:	strdeq	r0, [r0], -r8
   33034:	strdeq	r0, [r0], -r8
   33038:	strdeq	r0, [r0], -r8
   3303c:	strdeq	r0, [r0], -r8
   33040:	strdeq	r0, [r0], -r8
   33044:	andeq	r0, r0, r4, lsr #2
   33048:	strdeq	r0, [r0], -r8
   3304c:	strdeq	r0, [r0], -r8
   33050:	strdeq	r0, [r0], -r8
   33054:	strdeq	r0, [r0], -r8
   33058:	strdeq	r0, [r0], -r8
   3305c:	strdeq	r0, [r0], -r8
   33060:	strdeq	r0, [r0], -r8
   33064:	strdeq	r0, [r0], -r8
   33068:	strdeq	r0, [r0], -r8
   3306c:	strdeq	r0, [r0], -r8
   33070:	strdeq	r0, [r0], -r8
   33074:	strdeq	r0, [r0], -r8
   33078:	strdeq	r0, [r0], -r8
   3307c:	strdeq	r0, [r0], -r8
   33080:	strdeq	r0, [r0], -r8
   33084:	strdeq	r0, [r0], -r8
   33088:	strdeq	r0, [r0], -r8
   3308c:	strdeq	r0, [r0], -r8
   33090:	strdeq	r0, [r0], -r8
   33094:	strdeq	r0, [r0], -r8
   33098:	strdeq	r0, [r0], -r8
   3309c:	strdeq	r0, [r0], -r8
   330a0:	strdeq	r0, [r0], -r8
   330a4:	strdeq	r0, [r0], -r8
   330a8:	strdeq	r0, [r0], -r8
   330ac:	strdeq	r0, [r0], -r8
   330b0:	strdeq	r0, [r0], -r8
   330b4:	strdeq	r0, [r0], -r8
   330b8:	strdeq	r0, [r0], -r8
   330bc:	strdeq	r0, [r0], -r8
   330c0:	strdeq	r0, [r0], -r8
   330c4:	strdeq	r0, [r0], -r8
   330c8:	andeq	r0, r0, r4, lsr #2
   330cc:	strdeq	r0, [r0], -r8
   330d0:	strdeq	r0, [r0], -r8
   330d4:	strdeq	r0, [r0], -r8
   330d8:	strdeq	r0, [r0], -r8
   330dc:	strdeq	r0, [r0], -r8
   330e0:	strdeq	r0, [r0], -r8
   330e4:	strdeq	r0, [r0], -r8
   330e8:	andeq	r0, r0, r4, lsr #2
   330ec:	strdeq	r0, [r0], -r8
   330f0:	strdeq	r0, [r0], -r8
   330f4:	strdeq	r0, [r0], -r8
   330f8:	strdeq	r0, [r0], -r8
   330fc:	strdeq	r0, [r0], -r8
   33100:	strdeq	r0, [r0], -r8
   33104:	strdeq	r0, [r0], -r8
   33108:	strdeq	r0, [r0], -r8
   3310c:	strdeq	r0, [r0], -r8
   33110:	strdeq	r0, [r0], -r8
   33114:	andeq	r0, r0, r4, lsr #2
   33118:	andeq	r0, r0, r4, lsr #2
   3311c:	strdeq	r0, [r0], -r8
   33120:	andeq	r0, r0, r4, lsr #2
   33124:	strdeq	r0, [r0], -r8
   33128:	strdeq	r0, [r0], -r8
   3312c:	strdeq	r0, [r0], -r8
   33130:	strdeq	r0, [r0], -r8
   33134:	strdeq	r0, [r0], -r8
   33138:	andeq	r0, r0, r4, lsr #2
   3313c:	andeq	r0, r0, r4, lsr #2
   33140:	andeq	r0, r0, r4, lsr #2
   33144:	andeq	r0, r0, r4, lsr #2
   33148:	cmp	r3, r1
   3314c:	beq	3331c <myhtml_tree_generate_implied_end_tags@@Base+0x354>
   33150:	ldr	r0, [lr, #4]
   33154:	cmp	r0, #0
   33158:	ldrne	r0, [lr, #4]
   3315c:	subne	r0, r0, #1
   33160:	strne	r0, [lr, #4]
   33164:	ldr	r0, [lr, #4]
   33168:	cmp	r0, #0
   3316c:	bne	32ff8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   33170:	b	3331c <myhtml_tree_generate_implied_end_tags@@Base+0x354>
   33174:	ldr	r0, [lr, #4]
   33178:	cmp	r0, #0
   3317c:	ldrne	r0, [lr, #4]
   33180:	subne	r0, r0, #1
   33184:	strne	r0, [lr, #4]
   33188:	ldr	r0, [lr, #4]
   3318c:	cmp	r0, #0
   33190:	beq	3331c <myhtml_tree_generate_implied_end_tags@@Base+0x354>
   33194:	ldr	r0, [lr, #4]
   33198:	cmp	r0, #0
   3319c:	beq	331c4 <myhtml_tree_generate_implied_end_tags@@Base+0x1fc>
   331a0:	ldr	r0, [lr]
   331a4:	ldr	r3, [lr, #4]
   331a8:	add	r0, r0, r3, lsl #2
   331ac:	ldr	ip, [r0, #-4]
   331b0:	ldr	r3, [ip, #4]
   331b4:	sub	r0, r3, #36	; 0x24
   331b8:	cmp	r0, #72	; 0x48
   331bc:	bls	331d8 <myhtml_tree_generate_implied_end_tags@@Base+0x210>
   331c0:	b	3331c <myhtml_tree_generate_implied_end_tags@@Base+0x354>
   331c4:	mov	ip, #0
   331c8:	ldr	r3, [ip, #4]
   331cc:	sub	r0, r3, #36	; 0x24
   331d0:	cmp	r0, #72	; 0x48
   331d4:	bhi	3331c <myhtml_tree_generate_implied_end_tags@@Base+0x354>
   331d8:	add	r4, pc, #4
   331dc:	ldr	r0, [r4, r0, lsl #2]
   331e0:	add	pc, r4, r0
   331e4:	andeq	r0, r0, r4, lsr #2
   331e8:	andeq	r0, r0, r8, lsr r1
   331ec:	andeq	r0, r0, r8, lsr r1
   331f0:	andeq	r0, r0, r8, lsr r1
   331f4:	andeq	r0, r0, r8, lsr r1
   331f8:	andeq	r0, r0, r8, lsr r1
   331fc:	andeq	r0, r0, r8, lsr r1
   33200:	andeq	r0, r0, r8, lsr r1
   33204:	andeq	r0, r0, r4, lsr #2
   33208:	andeq	r0, r0, r8, lsr r1
   3320c:	andeq	r0, r0, r8, lsr r1
   33210:	andeq	r0, r0, r8, lsr r1
   33214:	andeq	r0, r0, r8, lsr r1
   33218:	andeq	r0, r0, r8, lsr r1
   3321c:	andeq	r0, r0, r8, lsr r1
   33220:	andeq	r0, r0, r8, lsr r1
   33224:	andeq	r0, r0, r8, lsr r1
   33228:	andeq	r0, r0, r8, lsr r1
   3322c:	andeq	r0, r0, r8, lsr r1
   33230:	andeq	r0, r0, r8, lsr r1
   33234:	andeq	r0, r0, r8, lsr r1
   33238:	andeq	r0, r0, r8, lsr r1
   3323c:	andeq	r0, r0, r8, lsr r1
   33240:	andeq	r0, r0, r8, lsr r1
   33244:	andeq	r0, r0, r8, lsr r1
   33248:	andeq	r0, r0, r8, lsr r1
   3324c:	andeq	r0, r0, r8, lsr r1
   33250:	andeq	r0, r0, r8, lsr r1
   33254:	andeq	r0, r0, r8, lsr r1
   33258:	andeq	r0, r0, r8, lsr r1
   3325c:	andeq	r0, r0, r8, lsr r1
   33260:	andeq	r0, r0, r8, lsr r1
   33264:	andeq	r0, r0, r8, lsr r1
   33268:	andeq	r0, r0, r8, lsr r1
   3326c:	andeq	r0, r0, r8, lsr r1
   33270:	andeq	r0, r0, r8, lsr r1
   33274:	andeq	r0, r0, r8, lsr r1
   33278:	andeq	r0, r0, r8, lsr r1
   3327c:	andeq	r0, r0, r8, lsr r1
   33280:	andeq	r0, r0, r8, lsr r1
   33284:	andeq	r0, r0, r8, lsr r1
   33288:	andeq	r0, r0, r4, lsr #2
   3328c:	andeq	r0, r0, r8, lsr r1
   33290:	andeq	r0, r0, r8, lsr r1
   33294:	andeq	r0, r0, r8, lsr r1
   33298:	andeq	r0, r0, r8, lsr r1
   3329c:	andeq	r0, r0, r8, lsr r1
   332a0:	andeq	r0, r0, r8, lsr r1
   332a4:	andeq	r0, r0, r8, lsr r1
   332a8:	andeq	r0, r0, r4, lsr #2
   332ac:	andeq	r0, r0, r8, lsr r1
   332b0:	andeq	r0, r0, r8, lsr r1
   332b4:	andeq	r0, r0, r8, lsr r1
   332b8:	andeq	r0, r0, r8, lsr r1
   332bc:	andeq	r0, r0, r8, lsr r1
   332c0:	andeq	r0, r0, r8, lsr r1
   332c4:	andeq	r0, r0, r8, lsr r1
   332c8:	andeq	r0, r0, r8, lsr r1
   332cc:	andeq	r0, r0, r8, lsr r1
   332d0:	andeq	r0, r0, r8, lsr r1
   332d4:	andeq	r0, r0, r4, lsr #2
   332d8:	andeq	r0, r0, r4, lsr #2
   332dc:	andeq	r0, r0, r8, lsr r1
   332e0:	andeq	r0, r0, r4, lsr #2
   332e4:	andeq	r0, r0, r8, lsr r1
   332e8:	andeq	r0, r0, r8, lsr r1
   332ec:	andeq	r0, r0, r8, lsr r1
   332f0:	andeq	r0, r0, r8, lsr r1
   332f4:	andeq	r0, r0, r8, lsr r1
   332f8:	andeq	r0, r0, r4, lsr #2
   332fc:	andeq	r0, r0, r4, lsr #2
   33300:	andeq	r0, r0, r4, lsr #2
   33304:	andeq	r0, r0, r4, lsr #2
   33308:	cmp	r3, r1
   3330c:	bne	33174 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   33310:	ldr	r0, [ip, #8]
   33314:	cmp	r0, r2
   33318:	bne	33174 <myhtml_tree_generate_implied_end_tags@@Base+0x1ac>
   3331c:	pop	{r4, sl, fp, pc}

00033320 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   33320:	push	{r4, sl, fp, lr}
   33324:	add	fp, sp, #8
   33328:	ldr	lr, [r0, #128]	; 0x80
   3332c:	ldr	r0, [lr, #4]
   33330:	cmp	r0, #0
   33334:	beq	33794 <myhtml_tree_generate_all_implied_end_tags@@Base+0x474>
   33338:	ldr	r0, [lr, #4]
   3333c:	cmp	r0, #0
   33340:	popeq	{r4, sl, fp, pc}
   33344:	cmp	r2, #0
   33348:	bne	3357c <myhtml_tree_generate_all_implied_end_tags@@Base+0x25c>
   3334c:	ldr	ip, [lr]
   33350:	ldr	r0, [lr, #4]
   33354:	ldr	r0, [lr, #4]
   33358:	add	r0, ip, r0, lsl #2
   3335c:	ldr	r0, [r0, #-4]
   33360:	ldr	r3, [r0, #4]
   33364:	sub	r0, r3, #27
   33368:	cmp	r0, #108	; 0x6c
   3336c:	bhi	33794 <myhtml_tree_generate_all_implied_end_tags@@Base+0x474>
   33370:	add	r2, pc, #4
   33374:	ldr	r0, [r2, r0, lsl #2]
   33378:	add	pc, r2, r0
   3337c:			; <UNDEFINED> instruction: 0x000001b4
   33380:	andeq	r0, r0, r8, lsl r4
   33384:	andeq	r0, r0, r8, lsl r4
   33388:	andeq	r0, r0, r8, lsl r4
   3338c:	andeq	r0, r0, r8, lsl r4
   33390:			; <UNDEFINED> instruction: 0x000001b4
   33394:	andeq	r0, r0, r8, lsl r4
   33398:	andeq	r0, r0, r8, lsl r4
   3339c:	andeq	r0, r0, r8, lsl r4
   333a0:			; <UNDEFINED> instruction: 0x000001b4
   333a4:	andeq	r0, r0, r8, lsl r4
   333a8:	andeq	r0, r0, r8, lsl r4
   333ac:	andeq	r0, r0, r8, lsl r4
   333b0:	andeq	r0, r0, r8, lsl r4
   333b4:	andeq	r0, r0, r8, lsl r4
   333b8:	andeq	r0, r0, r8, lsl r4
   333bc:	andeq	r0, r0, r8, lsl r4
   333c0:			; <UNDEFINED> instruction: 0x000001b4
   333c4:	andeq	r0, r0, r8, lsl r4
   333c8:	andeq	r0, r0, r8, lsl r4
   333cc:	andeq	r0, r0, r8, lsl r4
   333d0:	andeq	r0, r0, r8, lsl r4
   333d4:	andeq	r0, r0, r8, lsl r4
   333d8:	andeq	r0, r0, r8, lsl r4
   333dc:	andeq	r0, r0, r8, lsl r4
   333e0:	andeq	r0, r0, r8, lsl r4
   333e4:	andeq	r0, r0, r8, lsl r4
   333e8:	andeq	r0, r0, r8, lsl r4
   333ec:	andeq	r0, r0, r8, lsl r4
   333f0:	andeq	r0, r0, r8, lsl r4
   333f4:	andeq	r0, r0, r8, lsl r4
   333f8:	andeq	r0, r0, r8, lsl r4
   333fc:	andeq	r0, r0, r8, lsl r4
   33400:	andeq	r0, r0, r8, lsl r4
   33404:	andeq	r0, r0, r8, lsl r4
   33408:	andeq	r0, r0, r8, lsl r4
   3340c:	andeq	r0, r0, r8, lsl r4
   33410:	andeq	r0, r0, r8, lsl r4
   33414:	andeq	r0, r0, r8, lsl r4
   33418:	andeq	r0, r0, r8, lsl r4
   3341c:	andeq	r0, r0, r8, lsl r4
   33420:	andeq	r0, r0, r8, lsl r4
   33424:	andeq	r0, r0, r8, lsl r4
   33428:	andeq	r0, r0, r8, lsl r4
   3342c:	andeq	r0, r0, r8, lsl r4
   33430:	andeq	r0, r0, r8, lsl r4
   33434:	andeq	r0, r0, r8, lsl r4
   33438:	andeq	r0, r0, r8, lsl r4
   3343c:	andeq	r0, r0, r8, lsl r4
   33440:	andeq	r0, r0, r8, lsl r4
   33444:			; <UNDEFINED> instruction: 0x000001b4
   33448:	andeq	r0, r0, r8, lsl r4
   3344c:	andeq	r0, r0, r8, lsl r4
   33450:	andeq	r0, r0, r8, lsl r4
   33454:	andeq	r0, r0, r8, lsl r4
   33458:	andeq	r0, r0, r8, lsl r4
   3345c:	andeq	r0, r0, r8, lsl r4
   33460:	andeq	r0, r0, r8, lsl r4
   33464:	andeq	r0, r0, r8, lsl r4
   33468:	andeq	r0, r0, r8, lsl r4
   3346c:	andeq	r0, r0, r8, lsl r4
   33470:	andeq	r0, r0, r8, lsl r4
   33474:	andeq	r0, r0, r8, lsl r4
   33478:	andeq	r0, r0, r8, lsl r4
   3347c:	andeq	r0, r0, r8, lsl r4
   33480:	andeq	r0, r0, r8, lsl r4
   33484:	andeq	r0, r0, r8, lsl r4
   33488:	andeq	r0, r0, r8, lsl r4
   3348c:	andeq	r0, r0, r8, lsl r4
   33490:			; <UNDEFINED> instruction: 0x000001b4
   33494:			; <UNDEFINED> instruction: 0x000001b4
   33498:	andeq	r0, r0, r8, lsl r4
   3349c:			; <UNDEFINED> instruction: 0x000001b4
   334a0:	andeq	r0, r0, r8, lsl r4
   334a4:	andeq	r0, r0, r8, lsl r4
   334a8:	andeq	r0, r0, r8, lsl r4
   334ac:	andeq	r0, r0, r8, lsl r4
   334b0:	andeq	r0, r0, r8, lsl r4
   334b4:			; <UNDEFINED> instruction: 0x000001b4
   334b8:			; <UNDEFINED> instruction: 0x000001b4
   334bc:			; <UNDEFINED> instruction: 0x000001b4
   334c0:			; <UNDEFINED> instruction: 0x000001b4
   334c4:	andeq	r0, r0, r8, lsl r4
   334c8:	andeq	r0, r0, r8, lsl r4
   334cc:	andeq	r0, r0, r8, lsl r4
   334d0:	andeq	r0, r0, r8, lsl r4
   334d4:	andeq	r0, r0, r8, lsl r4
   334d8:	andeq	r0, r0, r8, lsl r4
   334dc:	andeq	r0, r0, r8, lsl r4
   334e0:	andeq	r0, r0, r8, lsl r4
   334e4:	andeq	r0, r0, r8, lsl r4
   334e8:	andeq	r0, r0, r8, lsl r4
   334ec:	andeq	r0, r0, r8, lsl r4
   334f0:	andeq	r0, r0, r8, lsl r4
   334f4:	andeq	r0, r0, r8, lsl r4
   334f8:	andeq	r0, r0, r8, lsl r4
   334fc:	andeq	r0, r0, r8, lsl r4
   33500:	andeq	r0, r0, r8, lsl r4
   33504:	andeq	r0, r0, r8, lsl r4
   33508:			; <UNDEFINED> instruction: 0x000001b4
   3350c:			; <UNDEFINED> instruction: 0x000001b4
   33510:	andeq	r0, r0, r8, lsl r4
   33514:	andeq	r0, r0, r8, lsl r4
   33518:			; <UNDEFINED> instruction: 0x000001b4
   3351c:			; <UNDEFINED> instruction: 0x000001b4
   33520:			; <UNDEFINED> instruction: 0x000001b4
   33524:	andeq	r0, r0, r8, lsl r4
   33528:	andeq	r0, r0, r8, lsl r4
   3352c:			; <UNDEFINED> instruction: 0x000001b4
   33530:	cmp	r3, r1
   33534:	beq	33794 <myhtml_tree_generate_all_implied_end_tags@@Base+0x474>
   33538:	ldr	r0, [lr, #4]
   3353c:	cmp	r0, #0
   33540:	ldrne	r0, [lr, #4]
   33544:	subne	r0, r0, #1
   33548:	strne	r0, [lr, #4]
   3354c:	ldr	r0, [lr, #4]
   33550:	cmp	r0, #0
   33554:	bne	33350 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   33558:	b	33794 <myhtml_tree_generate_all_implied_end_tags@@Base+0x474>
   3355c:	ldr	r0, [lr, #4]
   33560:	cmp	r0, #0
   33564:	ldrne	r0, [lr, #4]
   33568:	subne	r0, r0, #1
   3356c:	strne	r0, [lr, #4]
   33570:	ldr	r0, [lr, #4]
   33574:	cmp	r0, #0
   33578:	beq	33794 <myhtml_tree_generate_all_implied_end_tags@@Base+0x474>
   3357c:	ldr	r0, [lr, #4]
   33580:	cmp	r0, #0
   33584:	beq	335ac <myhtml_tree_generate_all_implied_end_tags@@Base+0x28c>
   33588:	ldr	r0, [lr]
   3358c:	ldr	r3, [lr, #4]
   33590:	add	r0, r0, r3, lsl #2
   33594:	ldr	ip, [r0, #-4]
   33598:	ldr	r3, [ip, #4]
   3359c:	sub	r0, r3, #27
   335a0:	cmp	r0, #108	; 0x6c
   335a4:	bls	335c0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x2a0>
   335a8:	b	33794 <myhtml_tree_generate_all_implied_end_tags@@Base+0x474>
   335ac:	mov	ip, #0
   335b0:	ldr	r3, [ip, #4]
   335b4:	sub	r0, r3, #27
   335b8:	cmp	r0, #108	; 0x6c
   335bc:	bhi	33794 <myhtml_tree_generate_all_implied_end_tags@@Base+0x474>
   335c0:	add	r4, pc, #4
   335c4:	ldr	r0, [r4, r0, lsl #2]
   335c8:	add	pc, r4, r0
   335cc:			; <UNDEFINED> instruction: 0x000001b4
   335d0:	andeq	r0, r0, r8, asr #3
   335d4:	andeq	r0, r0, r8, asr #3
   335d8:	andeq	r0, r0, r8, asr #3
   335dc:	andeq	r0, r0, r8, asr #3
   335e0:			; <UNDEFINED> instruction: 0x000001b4
   335e4:	andeq	r0, r0, r8, asr #3
   335e8:	andeq	r0, r0, r8, asr #3
   335ec:	andeq	r0, r0, r8, asr #3
   335f0:			; <UNDEFINED> instruction: 0x000001b4
   335f4:	andeq	r0, r0, r8, asr #3
   335f8:	andeq	r0, r0, r8, asr #3
   335fc:	andeq	r0, r0, r8, asr #3
   33600:	andeq	r0, r0, r8, asr #3
   33604:	andeq	r0, r0, r8, asr #3
   33608:	andeq	r0, r0, r8, asr #3
   3360c:	andeq	r0, r0, r8, asr #3
   33610:			; <UNDEFINED> instruction: 0x000001b4
   33614:	andeq	r0, r0, r8, asr #3
   33618:	andeq	r0, r0, r8, asr #3
   3361c:	andeq	r0, r0, r8, asr #3
   33620:	andeq	r0, r0, r8, asr #3
   33624:	andeq	r0, r0, r8, asr #3
   33628:	andeq	r0, r0, r8, asr #3
   3362c:	andeq	r0, r0, r8, asr #3
   33630:	andeq	r0, r0, r8, asr #3
   33634:	andeq	r0, r0, r8, asr #3
   33638:	andeq	r0, r0, r8, asr #3
   3363c:	andeq	r0, r0, r8, asr #3
   33640:	andeq	r0, r0, r8, asr #3
   33644:	andeq	r0, r0, r8, asr #3
   33648:	andeq	r0, r0, r8, asr #3
   3364c:	andeq	r0, r0, r8, asr #3
   33650:	andeq	r0, r0, r8, asr #3
   33654:	andeq	r0, r0, r8, asr #3
   33658:	andeq	r0, r0, r8, asr #3
   3365c:	andeq	r0, r0, r8, asr #3
   33660:	andeq	r0, r0, r8, asr #3
   33664:	andeq	r0, r0, r8, asr #3
   33668:	andeq	r0, r0, r8, asr #3
   3366c:	andeq	r0, r0, r8, asr #3
   33670:	andeq	r0, r0, r8, asr #3
   33674:	andeq	r0, r0, r8, asr #3
   33678:	andeq	r0, r0, r8, asr #3
   3367c:	andeq	r0, r0, r8, asr #3
   33680:	andeq	r0, r0, r8, asr #3
   33684:	andeq	r0, r0, r8, asr #3
   33688:	andeq	r0, r0, r8, asr #3
   3368c:	andeq	r0, r0, r8, asr #3
   33690:	andeq	r0, r0, r8, asr #3
   33694:			; <UNDEFINED> instruction: 0x000001b4
   33698:	andeq	r0, r0, r8, asr #3
   3369c:	andeq	r0, r0, r8, asr #3
   336a0:	andeq	r0, r0, r8, asr #3
   336a4:	andeq	r0, r0, r8, asr #3
   336a8:	andeq	r0, r0, r8, asr #3
   336ac:	andeq	r0, r0, r8, asr #3
   336b0:	andeq	r0, r0, r8, asr #3
   336b4:	andeq	r0, r0, r8, asr #3
   336b8:	andeq	r0, r0, r8, asr #3
   336bc:	andeq	r0, r0, r8, asr #3
   336c0:	andeq	r0, r0, r8, asr #3
   336c4:	andeq	r0, r0, r8, asr #3
   336c8:	andeq	r0, r0, r8, asr #3
   336cc:	andeq	r0, r0, r8, asr #3
   336d0:	andeq	r0, r0, r8, asr #3
   336d4:	andeq	r0, r0, r8, asr #3
   336d8:	andeq	r0, r0, r8, asr #3
   336dc:	andeq	r0, r0, r8, asr #3
   336e0:			; <UNDEFINED> instruction: 0x000001b4
   336e4:			; <UNDEFINED> instruction: 0x000001b4
   336e8:	andeq	r0, r0, r8, asr #3
   336ec:			; <UNDEFINED> instruction: 0x000001b4
   336f0:	andeq	r0, r0, r8, asr #3
   336f4:	andeq	r0, r0, r8, asr #3
   336f8:	andeq	r0, r0, r8, asr #3
   336fc:	andeq	r0, r0, r8, asr #3
   33700:	andeq	r0, r0, r8, asr #3
   33704:			; <UNDEFINED> instruction: 0x000001b4
   33708:			; <UNDEFINED> instruction: 0x000001b4
   3370c:			; <UNDEFINED> instruction: 0x000001b4
   33710:			; <UNDEFINED> instruction: 0x000001b4
   33714:	andeq	r0, r0, r8, asr #3
   33718:	andeq	r0, r0, r8, asr #3
   3371c:	andeq	r0, r0, r8, asr #3
   33720:	andeq	r0, r0, r8, asr #3
   33724:	andeq	r0, r0, r8, asr #3
   33728:	andeq	r0, r0, r8, asr #3
   3372c:	andeq	r0, r0, r8, asr #3
   33730:	andeq	r0, r0, r8, asr #3
   33734:	andeq	r0, r0, r8, asr #3
   33738:	andeq	r0, r0, r8, asr #3
   3373c:	andeq	r0, r0, r8, asr #3
   33740:	andeq	r0, r0, r8, asr #3
   33744:	andeq	r0, r0, r8, asr #3
   33748:	andeq	r0, r0, r8, asr #3
   3374c:	andeq	r0, r0, r8, asr #3
   33750:	andeq	r0, r0, r8, asr #3
   33754:	andeq	r0, r0, r8, asr #3
   33758:			; <UNDEFINED> instruction: 0x000001b4
   3375c:			; <UNDEFINED> instruction: 0x000001b4
   33760:	andeq	r0, r0, r8, asr #3
   33764:	andeq	r0, r0, r8, asr #3
   33768:			; <UNDEFINED> instruction: 0x000001b4
   3376c:			; <UNDEFINED> instruction: 0x000001b4
   33770:			; <UNDEFINED> instruction: 0x000001b4
   33774:	andeq	r0, r0, r8, asr #3
   33778:	andeq	r0, r0, r8, asr #3
   3377c:			; <UNDEFINED> instruction: 0x000001b4
   33780:	cmp	r3, r1
   33784:	bne	3355c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   33788:	ldr	r0, [ip, #8]
   3378c:	cmp	r0, r2
   33790:	bne	3355c <myhtml_tree_generate_all_implied_end_tags@@Base+0x23c>
   33794:	pop	{r4, sl, fp, pc}

00033798 <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   33798:	push	{r4, sl, fp, lr}
   3379c:	add	fp, sp, #8
   337a0:	ldr	r1, [r0, #128]	; 0x80
   337a4:	ldr	r2, [r1, #4]
   337a8:	cmp	r2, #0
   337ac:	popeq	{r4, sl, fp, pc}
   337b0:	ldr	ip, [r1]
   337b4:	ldr	r1, [r1, #4]
   337b8:	cmp	r1, #0
   337bc:	beq	339e0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x248>
   337c0:	sub	lr, ip, #4
   337c4:	ldr	r3, [lr, r1, lsl #2]
   337c8:	mov	r2, #0
   337cc:	cmp	r1, #1
   337d0:	bne	337e4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>
   337d4:	ldr	r2, [r0, #88]	; 0x58
   337d8:	cmp	r2, #0
   337dc:	movne	r3, r2
   337e0:	mov	r2, #1
   337e4:	ldr	r4, [r3, #8]
   337e8:	cmp	r4, #1
   337ec:	bne	339d0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   337f0:	ldr	r3, [r3, #4]
   337f4:	sub	r3, r3, #23
   337f8:	cmp	r3, #112	; 0x70
   337fc:	bhi	339d0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   33800:	add	r4, pc, #4
   33804:	ldr	r3, [r4, r3, lsl #2]
   33808:	add	pc, r4, r3
   3380c:	andeq	r0, r0, ip, lsr #4
   33810:	andeq	r0, r0, r4, asr #3
   33814:	andeq	r0, r0, r4, asr #3
   33818:	andeq	r0, r0, r4, asr #3
   3381c:	andeq	r0, r0, r0, lsl #4
   33820:	andeq	r0, r0, r4, asr #3
   33824:	andeq	r0, r0, r4, asr #3
   33828:	andeq	r0, r0, r4, asr #3
   3382c:	andeq	r0, r0, r4, asr #3
   33830:	andeq	r0, r0, ip, lsl #4
   33834:	andeq	r0, r0, r4, asr #3
   33838:	andeq	r0, r0, r4, asr #3
   3383c:	andeq	r0, r0, r4, asr #3
   33840:	andeq	r0, r0, r4, asr #3
   33844:	andeq	r0, r0, r4, asr #3
   33848:	andeq	r0, r0, r4, asr #3
   3384c:	andeq	r0, r0, r4, asr #3
   33850:	andeq	r0, r0, r4, asr #3
   33854:	andeq	r0, r0, r4, asr #3
   33858:	andeq	r0, r0, r4, asr #3
   3385c:	andeq	r0, r0, r4, asr #3
   33860:	andeq	r0, r0, r4, asr #3
   33864:	andeq	r0, r0, r4, asr #3
   33868:	andeq	r0, r0, r4, asr #3
   3386c:	andeq	r0, r0, r4, asr #3
   33870:	andeq	r0, r0, r4, asr #3
   33874:	andeq	r0, r0, r4, asr #3
   33878:	andeq	r0, r0, r4, asr #3
   3387c:	andeq	r0, r0, r4, asr #3
   33880:	andeq	r0, r0, r4, asr #3
   33884:	andeq	r0, r0, r4, asr #3
   33888:	andeq	r0, r0, r8, lsl r2
   3388c:	andeq	r0, r0, r4, asr #3
   33890:	andeq	r0, r0, r4, asr #3
   33894:	andeq	r0, r0, r4, asr #3
   33898:	andeq	r0, r0, r4, asr #3
   3389c:	andeq	r0, r0, r4, asr #3
   338a0:	andeq	r0, r0, r4, asr #3
   338a4:	andeq	r0, r0, r4, lsr #4
   338a8:	andeq	r0, r0, r4, asr #3
   338ac:	andeq	r0, r0, r4, asr #3
   338b0:	andeq	r0, r0, r4, asr #3
   338b4:	andeq	r0, r0, r8, lsr r2
   338b8:	andeq	r0, r0, r4, asr #3
   338bc:	andeq	r0, r0, r4, asr #3
   338c0:	andeq	r0, r0, r4, asr #3
   338c4:	andeq	r0, r0, r4, asr #3
   338c8:	andeq	r0, r0, r4, asr #3
   338cc:	andeq	r0, r0, r4, asr #3
   338d0:	andeq	r0, r0, r4, asr #3
   338d4:	andeq	r0, r0, r4, asr #3
   338d8:	andeq	r0, r0, r4, asr #3
   338dc:	andeq	r0, r0, r4, asr #3
   338e0:	andeq	r0, r0, r4, asr #3
   338e4:	andeq	r0, r0, r4, asr #3
   338e8:	andeq	r0, r0, r4, asr #3
   338ec:	andeq	r0, r0, r4, asr #3
   338f0:	andeq	r0, r0, r4, asr #3
   338f4:	andeq	r0, r0, r4, asr #3
   338f8:	andeq	r0, r0, r4, asr #3
   338fc:	andeq	r0, r0, r4, asr #3
   33900:	andeq	r0, r0, r4, asr #3
   33904:	andeq	r0, r0, r4, asr #3
   33908:	andeq	r0, r0, r4, asr #3
   3390c:	andeq	r0, r0, r4, asr #3
   33910:	andeq	r0, r0, r4, asr #3
   33914:	andeq	r0, r0, r4, asr #3
   33918:	andeq	r0, r0, r4, asr #3
   3391c:	andeq	r0, r0, r4, asr #3
   33920:	andeq	r0, r0, r4, asr #3
   33924:	andeq	r0, r0, r4, asr #3
   33928:	andeq	r0, r0, r4, asr #3
   3392c:	andeq	r0, r0, r4, asr #3
   33930:	andeq	r0, r0, r4, asr #3
   33934:	andeq	r0, r0, r4, asr #3
   33938:	andeq	r0, r0, r4, asr #3
   3393c:	andeq	r0, r0, r4, asr #3
   33940:	andeq	r0, r0, r4, asr #3
   33944:	andeq	r0, r0, r4, asr #3
   33948:	andeq	r0, r0, r4, asr #3
   3394c:	andeq	r0, r0, r4, asr #3
   33950:	andeq	r0, r0, r4, asr #3
   33954:	andeq	r0, r0, r4, asr #3
   33958:	andeq	r0, r0, r4, asr #3
   3395c:	andeq	r0, r0, r4, asr #3
   33960:	andeq	r0, r0, r4, asr #3
   33964:	andeq	r0, r0, r4, asr #3
   33968:	andeq	r0, r0, r4, asr #3
   3396c:	andeq	r0, r0, r4, asr #3
   33970:	andeq	r0, r0, r4, asr #3
   33974:	andeq	r0, r0, r4, asr #3
   33978:	andeq	r0, r0, r0, asr r2
   3397c:	andeq	r0, r0, r4, asr #3
   33980:	andeq	r0, r0, r4, asr #3
   33984:	andeq	r0, r0, r4, asr #3
   33988:	andeq	r0, r0, r4, asr #3
   3398c:	andeq	r0, r0, r4, asr #3
   33990:	andeq	r0, r0, r4, asr #3
   33994:	andeq	r0, r0, r4, asr #3
   33998:	andeq	r0, r0, r4, asr #3
   3399c:	andeq	r0, r0, r4, asr #3
   339a0:	andeq	r0, r0, r4, asr #3
   339a4:	andeq	r0, r0, ip, lsl #5
   339a8:	andeq	r0, r0, r0, ror #3
   339ac:	andeq	r0, r0, ip, ror #3
   339b0:	muleq	r0, r8, r2
   339b4:	andeq	r0, r0, r4, asr #3
   339b8:	andeq	r0, r0, r0, ror #3
   339bc:	andeq	r0, r0, ip, ror #3
   339c0:	andeq	r0, r0, r0, ror #3
   339c4:	andeq	r0, r0, r4, asr #3
   339c8:	andeq	r0, r0, r4, asr #3
   339cc:			; <UNDEFINED> instruction: 0x000002b4
   339d0:	cmp	r2, #0
   339d4:	bne	33a38 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   339d8:	subs	r1, r1, #1
   339dc:	bne	337c4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c>
   339e0:	mov	r1, #0
   339e4:	str	r1, [r0, #168]	; 0xa8
   339e8:	pop	{r4, sl, fp, pc}
   339ec:	mov	r1, #12
   339f0:	str	r1, [r0, #168]	; 0xa8
   339f4:	pop	{r4, sl, fp, pc}
   339f8:	cmp	r2, #0
   339fc:	bne	33a38 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   33a00:	mov	r1, #14
   33a04:	str	r1, [r0, #168]	; 0xa8
   33a08:	pop	{r4, sl, fp, pc}
   33a0c:	mov	r1, #10
   33a10:	str	r1, [r0, #168]	; 0xa8
   33a14:	pop	{r4, sl, fp, pc}
   33a18:	mov	r1, #11
   33a1c:	str	r1, [r0, #168]	; 0xa8
   33a20:	pop	{r4, sl, fp, pc}
   33a24:	mov	r1, #19
   33a28:	str	r1, [r0, #168]	; 0xa8
   33a2c:	pop	{r4, sl, fp, pc}
   33a30:	cmp	r2, #0
   33a34:	beq	33acc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x334>
   33a38:	mov	r1, #6
   33a3c:	str	r1, [r0, #168]	; 0xa8
   33a40:	pop	{r4, sl, fp, pc}
   33a44:	ldr	r1, [r0, #92]	; 0x5c
   33a48:	cmp	r1, #0
   33a4c:	moveq	r1, #2
   33a50:	movne	r1, #5
   33a54:	str	r1, [r0, #168]	; 0xa8
   33a58:	pop	{r4, sl, fp, pc}
   33a5c:	cmp	r2, #0
   33a60:	bne	33a8c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   33a64:	sub	r2, ip, #8
   33a68:	cmp	r1, #1
   33a6c:	beq	33a8c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   33a70:	ldr	r3, [r2, r1, lsl #2]
   33a74:	ldr	r3, [r3, #4]
   33a78:	cmp	r3, #125	; 0x7d
   33a7c:	beq	33ad8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x340>
   33a80:	sub	r1, r1, #1
   33a84:	cmp	r3, #128	; 0x80
   33a88:	bne	33a68 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d0>
   33a8c:	mov	r1, #15
   33a90:	str	r1, [r0, #168]	; 0xa8
   33a94:	pop	{r4, sl, fp, pc}
   33a98:	mov	r1, #8
   33a9c:	str	r1, [r0, #168]	; 0xa8
   33aa0:	pop	{r4, sl, fp, pc}
   33aa4:	ldr	r1, [r0, #140]	; 0x8c
   33aa8:	ldr	r2, [r1]
   33aac:	ldr	r1, [r1, #4]
   33ab0:	add	r1, r2, r1, lsl #2
   33ab4:	ldr	r1, [r1, #-4]
   33ab8:	str	r1, [r0, #168]	; 0xa8
   33abc:	pop	{r4, sl, fp, pc}
   33ac0:	mov	r1, #13
   33ac4:	str	r1, [r0, #168]	; 0xa8
   33ac8:	pop	{r4, sl, fp, pc}
   33acc:	mov	r1, #3
   33ad0:	str	r1, [r0, #168]	; 0xa8
   33ad4:	pop	{r4, sl, fp, pc}
   33ad8:	mov	r1, #16
   33adc:	str	r1, [r0, #168]	; 0xa8
   33ae0:	pop	{r4, sl, fp, pc}

00033ae4 <myhtml_tree_active_formatting_is_marker@@Base>:
   33ae4:	ldr	r0, [r0]
   33ae8:	ldr	r2, [r0, #36]	; 0x24
   33aec:	mov	r0, #1
   33af0:	cmp	r2, r1
   33af4:	bxeq	lr
   33af8:	ldr	r1, [r1, #4]
   33afc:	cmp	r1, #82	; 0x52
   33b00:	ble	33b20 <myhtml_tree_active_formatting_is_marker@@Base+0x3c>
   33b04:	cmp	r1, #126	; 0x7e
   33b08:	bgt	33b40 <myhtml_tree_active_formatting_is_marker@@Base+0x5c>
   33b0c:	cmp	r1, #83	; 0x53
   33b10:	beq	33b3c <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   33b14:	cmp	r1, #94	; 0x5e
   33b18:	movne	r0, #0
   33b1c:	bx	lr
   33b20:	cmp	r1, #27
   33b24:	bhi	33b4c <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   33b28:	movw	r3, #512	; 0x200
   33b2c:	mov	r2, #1
   33b30:	movt	r3, #2560	; 0xa00
   33b34:	tst	r3, r2, lsl r1
   33b38:	beq	33b4c <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   33b3c:	bx	lr
   33b40:	cmp	r1, #127	; 0x7f
   33b44:	cmpne	r1, #131	; 0x83
   33b48:	beq	33b3c <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   33b4c:	mov	r0, #0
   33b50:	bx	lr

00033b54 <myhtml_tree_active_formatting_append@@Base>:
   33b54:	push	{r4, r5, fp, lr}
   33b58:	add	fp, sp, #8
   33b5c:	ldr	r5, [r0, #124]	; 0x7c
   33b60:	mov	r4, r1
   33b64:	ldr	r1, [r5, #8]
   33b68:	ldr	r0, [r5, #4]
   33b6c:	cmp	r0, r1
   33b70:	bcc	33b90 <myhtml_tree_active_formatting_append@@Base+0x3c>
   33b74:	lsl	r0, r1, #1
   33b78:	lsl	r1, r1, #3
   33b7c:	str	r0, [r5, #8]
   33b80:	ldr	r0, [r5]
   33b84:	bl	10d9c <mycore_realloc@plt>
   33b88:	cmp	r0, #0
   33b8c:	strne	r0, [r5]
   33b90:	ldr	r0, [r5]
   33b94:	ldr	r1, [r5, #4]
   33b98:	str	r4, [r0, r1, lsl #2]
   33b9c:	ldr	r0, [r5, #4]
   33ba0:	add	r0, r0, #1
   33ba4:	str	r0, [r5, #4]
   33ba8:	pop	{r4, r5, fp, pc}

00033bac <myhtml_tree_active_formatting_pop@@Base>:
   33bac:	ldr	r0, [r0, #124]	; 0x7c
   33bb0:	ldr	r1, [r0, #4]
   33bb4:	cmp	r1, #0
   33bb8:	ldrne	r1, [r0, #4]
   33bbc:	subne	r1, r1, #1
   33bc0:	strne	r1, [r0, #4]
   33bc4:	bx	lr

00033bc8 <myhtml_tree_active_formatting_remove@@Base>:
   33bc8:	push	{r4, r5, fp, lr}
   33bcc:	add	fp, sp, #8
   33bd0:	mov	r5, r0
   33bd4:	ldr	r0, [r0, #124]	; 0x7c
   33bd8:	ldr	r2, [r0, #4]
   33bdc:	ldr	r3, [r0]
   33be0:	add	r3, r3, r2, lsl #2
   33be4:	add	r3, r3, #4
   33be8:	cmp	r2, #0
   33bec:	beq	33c30 <myhtml_tree_active_formatting_remove@@Base+0x68>
   33bf0:	sub	r4, r3, #4
   33bf4:	ldr	r3, [r3, #-8]
   33bf8:	sub	r2, r2, #1
   33bfc:	cmp	r3, r1
   33c00:	mov	r3, r4
   33c04:	bne	33be8 <myhtml_tree_active_formatting_remove@@Base+0x20>
   33c08:	ldr	r0, [r0, #4]
   33c0c:	mov	r1, r4
   33c10:	sub	r0, r0, r2
   33c14:	lsl	r2, r0, #2
   33c18:	sub	r0, r4, #4
   33c1c:	bl	10f94 <memmove@plt>
   33c20:	ldr	r0, [r5, #124]	; 0x7c
   33c24:	ldr	r1, [r0, #4]
   33c28:	sub	r1, r1, #1
   33c2c:	str	r1, [r0, #4]
   33c30:	pop	{r4, r5, fp, pc}

00033c34 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   33c34:	push	{r4, sl, fp, lr}
   33c38:	add	fp, sp, #8
   33c3c:	ldr	r2, [r0, #124]	; 0x7c
   33c40:	mov	r4, r0
   33c44:	ldr	r0, [r2]
   33c48:	ldr	r2, [r2, #4]
   33c4c:	add	r0, r0, r1, lsl #2
   33c50:	sub	r1, r2, r1
   33c54:	lsl	r2, r1, #2
   33c58:	add	r3, r0, #4
   33c5c:	mov	r1, r3
   33c60:	bl	10f94 <memmove@plt>
   33c64:	ldr	r0, [r4, #124]	; 0x7c
   33c68:	ldr	r1, [r0, #4]
   33c6c:	sub	r1, r1, #1
   33c70:	str	r1, [r0, #4]
   33c74:	pop	{r4, sl, fp, pc}

00033c78 <myhtml_tree_active_formatting_append_with_check@@Base>:
   33c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c7c:	add	fp, sp, #28
   33c80:	sub	sp, sp, #4
   33c84:	mov	r4, r1
   33c88:	ldr	r1, [r0, #124]	; 0x7c
   33c8c:	mov	r5, r0
   33c90:	ldr	r0, [r1, #4]
   33c94:	cmp	r0, #0
   33c98:	beq	33dd8 <myhtml_tree_active_formatting_append_with_check@@Base+0x160>
   33c9c:	ldr	r6, [r1]
   33ca0:	movw	sl, #512	; 0x200
   33ca4:	sub	r7, r0, #1
   33ca8:	mov	r9, #0
   33cac:	movt	sl, #2560	; 0xa00
   33cb0:	mov	r8, r7
   33cb4:	b	33cc4 <myhtml_tree_active_formatting_append_with_check@@Base+0x4c>
   33cb8:	sub	r7, r7, #1
   33cbc:	cmn	r7, #1
   33cc0:	beq	33d8c <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   33cc4:	ldr	r1, [r5]
   33cc8:	ldr	r0, [r6, r7, lsl #2]
   33ccc:	ldr	r1, [r1, #36]	; 0x24
   33cd0:	cmp	r1, r0
   33cd4:	beq	33d8c <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   33cd8:	ldr	r1, [r0, #4]
   33cdc:	cmp	r1, #82	; 0x52
   33ce0:	ble	33d00 <myhtml_tree_active_formatting_append_with_check@@Base+0x88>
   33ce4:	cmp	r1, #126	; 0x7e
   33ce8:	bgt	33d80 <myhtml_tree_active_formatting_append_with_check@@Base+0x108>
   33cec:	cmp	r1, #83	; 0x53
   33cf0:	beq	33d8c <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   33cf4:	cmp	r1, #94	; 0x5e
   33cf8:	bne	33d14 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   33cfc:	b	33d8c <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   33d00:	cmp	r1, #27
   33d04:	bhi	33d14 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   33d08:	mov	r2, #1
   33d0c:	tst	sl, r2, lsl r1
   33d10:	bne	33d8c <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   33d14:	ldr	r1, [r0, #32]
   33d18:	cmp	r1, #0
   33d1c:	beq	33cb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   33d20:	ldr	r0, [r4, #32]
   33d24:	cmp	r0, #0
   33d28:	beq	33cb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   33d2c:	ldr	r0, [r5, #8]
   33d30:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   33d34:	ldr	r1, [r4, #32]
   33d38:	ldr	r0, [r5, #8]
   33d3c:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   33d40:	ldr	r0, [r6, r7, lsl #2]
   33d44:	ldr	r2, [r4, #8]
   33d48:	ldr	r1, [r0, #8]
   33d4c:	cmp	r1, r2
   33d50:	bne	33cb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   33d54:	ldr	r1, [r4, #4]
   33d58:	ldr	r2, [r0, #4]
   33d5c:	cmp	r2, r1
   33d60:	bne	33cb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   33d64:	ldr	r1, [r4, #32]
   33d68:	ldr	r0, [r0, #32]
   33d6c:	bl	118b8 <myhtml_token_attr_compare@plt>
   33d70:	cmp	r0, #0
   33d74:	add	r9, r9, r0
   33d78:	movne	r8, r7
   33d7c:	b	33cb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   33d80:	cmp	r1, #127	; 0x7f
   33d84:	cmpne	r1, #131	; 0x83
   33d88:	bne	33d14 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   33d8c:	cmp	r9, #2
   33d90:	bls	33dd8 <myhtml_tree_active_formatting_append_with_check@@Base+0x160>
   33d94:	ldr	r2, [r5, #124]	; 0x7c
   33d98:	ldr	r0, [r2]
   33d9c:	ldr	r2, [r2, #4]
   33da0:	add	r0, r0, r8, lsl #2
   33da4:	sub	r2, r2, r8
   33da8:	lsl	r2, r2, #2
   33dac:	add	r1, r0, #4
   33db0:	bl	10f94 <memmove@plt>
   33db4:	ldr	r5, [r5, #124]	; 0x7c
   33db8:	ldr	r0, [r5, #4]
   33dbc:	sub	r0, r0, #1
   33dc0:	str	r0, [r5, #4]
   33dc4:	ldr	r0, [r5, #4]
   33dc8:	ldr	r1, [r5, #8]
   33dcc:	cmp	r0, r1
   33dd0:	bcs	33dec <myhtml_tree_active_formatting_append_with_check@@Base+0x174>
   33dd4:	b	33e08 <myhtml_tree_active_formatting_append_with_check@@Base+0x190>
   33dd8:	ldr	r5, [r5, #124]	; 0x7c
   33ddc:	ldr	r0, [r5, #4]
   33de0:	ldr	r1, [r5, #8]
   33de4:	cmp	r0, r1
   33de8:	bcc	33e08 <myhtml_tree_active_formatting_append_with_check@@Base+0x190>
   33dec:	lsl	r0, r1, #1
   33df0:	lsl	r1, r1, #3
   33df4:	str	r0, [r5, #8]
   33df8:	ldr	r0, [r5]
   33dfc:	bl	10d9c <mycore_realloc@plt>
   33e00:	cmp	r0, #0
   33e04:	strne	r0, [r5]
   33e08:	ldr	r0, [r5]
   33e0c:	ldr	r1, [r5, #4]
   33e10:	str	r4, [r0, r1, lsl #2]
   33e14:	ldr	r0, [r5, #4]
   33e18:	add	r0, r0, #1
   33e1c:	str	r0, [r5, #4]
   33e20:	sub	sp, fp, #28
   33e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033e28 <myhtml_tree_active_formatting_current_node@@Base>:
   33e28:	ldr	r0, [r0, #124]	; 0x7c
   33e2c:	ldr	r1, [r0, #4]
   33e30:	cmp	r1, #0
   33e34:	moveq	r0, #0
   33e38:	bxeq	lr
   33e3c:	ldr	r1, [r0]
   33e40:	ldr	r0, [r0, #4]
   33e44:	add	r0, r1, r0, lsl #2
   33e48:	ldr	r0, [r0, #-4]
   33e4c:	bx	lr

00033e50 <myhtml_tree_active_formatting_find@@Base>:
   33e50:	ldr	r0, [r0, #124]	; 0x7c
   33e54:	ldr	r3, [r0, #4]
   33e58:	ldr	r0, [r0]
   33e5c:	sub	ip, r0, #4
   33e60:	cmp	r3, #0
   33e64:	moveq	r0, #0
   33e68:	bxeq	lr
   33e6c:	ldr	r0, [ip, r3, lsl #2]
   33e70:	sub	r3, r3, #1
   33e74:	cmp	r0, r1
   33e78:	bne	33e60 <myhtml_tree_active_formatting_find@@Base+0x10>
   33e7c:	mov	r0, #1
   33e80:	cmp	r2, #0
   33e84:	strne	r3, [r2]
   33e88:	bx	lr

00033e8c <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   33e8c:	push	{r4, sl, fp, lr}
   33e90:	add	fp, sp, #8
   33e94:	ldr	r1, [r0, #124]	; 0x7c
   33e98:	ldr	r2, [r1]
   33e9c:	ldr	r3, [r1, #4]
   33ea0:	cmp	r3, #0
   33ea4:	popeq	{r4, sl, fp, pc}
   33ea8:	movw	lr, #512	; 0x200
   33eac:	mov	ip, #1
   33eb0:	movt	lr, #2560	; 0xa00
   33eb4:	ldr	r3, [r1, #4]
   33eb8:	cmp	r3, #0
   33ebc:	ldrne	r3, [r1, #4]
   33ec0:	subne	r3, r3, #1
   33ec4:	strne	r3, [r1, #4]
   33ec8:	ldrne	r3, [r1, #4]
   33ecc:	ldrne	r4, [r0]
   33ed0:	ldrne	r3, [r2, r3, lsl #2]
   33ed4:	ldrne	r4, [r4, #36]	; 0x24
   33ed8:	cmpne	r4, r3
   33edc:	beq	33f28 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   33ee0:	ldr	r3, [r3, #4]
   33ee4:	cmp	r3, #82	; 0x52
   33ee8:	ble	33f08 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x7c>
   33eec:	cmp	r3, #126	; 0x7e
   33ef0:	bgt	33f1c <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x90>
   33ef4:	cmp	r3, #83	; 0x53
   33ef8:	beq	33f28 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   33efc:	cmp	r3, #94	; 0x5e
   33f00:	bne	33eb4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   33f04:	b	33f28 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   33f08:	cmp	r3, #27
   33f0c:	bhi	33eb4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   33f10:	tst	lr, ip, lsl r3
   33f14:	beq	33eb4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   33f18:	b	33f28 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   33f1c:	cmp	r3, #131	; 0x83
   33f20:	cmpne	r3, #127	; 0x7f
   33f24:	bne	33eb4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   33f28:	pop	{r4, sl, fp, pc}

00033f2c <myhtml_tree_active_formatting_between_last_marker@@Base>:
   33f2c:	push	{r4, r5, r6, sl, fp, lr}
   33f30:	add	fp, sp, #16
   33f34:	ldr	r6, [r0, #124]	; 0x7c
   33f38:	ldr	r3, [r6, #4]
   33f3c:	cmp	r3, #0
   33f40:	beq	33fe4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xb8>
   33f44:	ldr	r0, [r0]
   33f48:	ldr	ip, [r6]
   33f4c:	movw	r5, #512	; 0x200
   33f50:	rsb	r3, r3, #1
   33f54:	mov	r4, #1
   33f58:	movt	r5, #2560	; 0xa00
   33f5c:	ldr	lr, [r0, #36]	; 0x24
   33f60:	ldr	r0, [ip, -r3, lsl #2]
   33f64:	cmp	lr, r0
   33f68:	bne	33f88 <myhtml_tree_active_formatting_between_last_marker@@Base+0x5c>
   33f6c:	b	33fe4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xb8>
   33f70:	add	r3, r3, #1
   33f74:	cmp	r3, #1
   33f78:	beq	33fe4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xb8>
   33f7c:	ldr	r0, [ip, -r3, lsl #2]
   33f80:	cmp	lr, r0
   33f84:	beq	33fe4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xb8>
   33f88:	ldr	r6, [r0, #4]
   33f8c:	cmp	r6, #82	; 0x52
   33f90:	ble	33fb0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x84>
   33f94:	cmp	r6, #126	; 0x7e
   33f98:	bgt	33fd8 <myhtml_tree_active_formatting_between_last_marker@@Base+0xac>
   33f9c:	cmp	r6, #83	; 0x53
   33fa0:	beq	33fe4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xb8>
   33fa4:	cmp	r6, #94	; 0x5e
   33fa8:	bne	33fc0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x94>
   33fac:	b	33fe4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xb8>
   33fb0:	cmp	r6, #27
   33fb4:	bhi	33fc0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x94>
   33fb8:	tst	r5, r4, lsl r6
   33fbc:	bne	33fe4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xb8>
   33fc0:	cmp	r6, r1
   33fc4:	bne	33f70 <myhtml_tree_active_formatting_between_last_marker@@Base+0x44>
   33fc8:	ldr	r6, [r0, #8]
   33fcc:	cmp	r6, #1
   33fd0:	bne	33f70 <myhtml_tree_active_formatting_between_last_marker@@Base+0x44>
   33fd4:	b	33fec <myhtml_tree_active_formatting_between_last_marker@@Base+0xc0>
   33fd8:	cmp	r6, #127	; 0x7f
   33fdc:	cmpne	r6, #131	; 0x83
   33fe0:	bne	33fc0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x94>
   33fe4:	mov	r0, #0
   33fe8:	pop	{r4, r5, r6, sl, fp, pc}
   33fec:	cmp	r2, #0
   33ff0:	beq	33fe8 <myhtml_tree_active_formatting_between_last_marker@@Base+0xbc>
   33ff4:	rsb	r1, r3, #0
   33ff8:	str	r1, [r2]
   33ffc:	pop	{r4, r5, r6, sl, fp, pc}

00034000 <myhtml_tree_active_formatting_reconstruction@@Base>:
   34000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34004:	add	fp, sp, #28
   34008:	sub	sp, sp, #4
   3400c:	vpush	{d8-d9}
   34010:	sub	sp, sp, #8
   34014:	ldr	r7, [r0, #124]	; 0x7c
   34018:	mov	sl, r0
   3401c:	ldr	r9, [r7]
   34020:	ldr	r0, [r7, #4]
   34024:	cmp	r0, #0
   34028:	beq	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   3402c:	ldr	r0, [r7, #4]
   34030:	ldr	r1, [sl]
   34034:	sub	r0, r0, #1
   34038:	ldr	lr, [r1, #36]	; 0x24
   3403c:	ldr	r6, [r9, r0, lsl #2]
   34040:	cmp	lr, r6
   34044:	beq	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   34048:	ldr	r2, [r6, #4]
   3404c:	cmp	r2, #82	; 0x52
   34050:	ble	34070 <myhtml_tree_active_formatting_reconstruction@@Base+0x70>
   34054:	cmp	r2, #126	; 0x7e
   34058:	bgt	34090 <myhtml_tree_active_formatting_reconstruction@@Base+0x90>
   3405c:	cmp	r2, #83	; 0x53
   34060:	beq	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   34064:	cmp	r2, #94	; 0x5e
   34068:	beq	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   3406c:	b	340ac <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   34070:	cmp	r2, #27
   34074:	bhi	340ac <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   34078:	movw	r5, #512	; 0x200
   3407c:	mov	r3, #1
   34080:	movt	r5, #2560	; 0xa00
   34084:	tst	r5, r3, lsl r2
   34088:	bne	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   3408c:	b	340ac <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   34090:	cmp	r2, #127	; 0x7f
   34094:	cmpne	r2, #131	; 0x83
   34098:	bne	340ac <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   3409c:	sub	sp, fp, #48	; 0x30
   340a0:	vpop	{d8-d9}
   340a4:	add	sp, sp, #4
   340a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   340ac:	ldr	r2, [sl, #128]	; 0x80
   340b0:	ldr	r3, [r2]
   340b4:	ldr	r5, [r2, #4]
   340b8:	cmp	r5, #0
   340bc:	beq	340e0 <myhtml_tree_active_formatting_reconstruction@@Base+0xe0>
   340c0:	mov	r5, #0
   340c4:	ldr	r4, [r3, r5, lsl #2]
   340c8:	cmp	r4, r6
   340cc:	beq	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   340d0:	ldr	r4, [r2, #4]
   340d4:	add	r5, r5, #1
   340d8:	cmp	r5, r4
   340dc:	bcc	340c4 <myhtml_tree_active_formatting_reconstruction@@Base+0xc4>
   340e0:	mov	r5, #0
   340e4:	cmp	r0, #0
   340e8:	bne	340fc <myhtml_tree_active_formatting_reconstruction@@Base+0xfc>
   340ec:	b	34198 <myhtml_tree_active_formatting_reconstruction@@Base+0x198>
   340f0:	cmp	r8, #0
   340f4:	mov	r0, r8
   340f8:	beq	34198 <myhtml_tree_active_formatting_reconstruction@@Base+0x198>
   340fc:	sub	r8, r0, #1
   34100:	ldr	r6, [r9, r8, lsl #2]
   34104:	cmp	lr, r6
   34108:	beq	342c8 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c8>
   3410c:	ldr	ip, [r6, #4]
   34110:	cmp	ip, #82	; 0x52
   34114:	ble	34134 <myhtml_tree_active_formatting_reconstruction@@Base+0x134>
   34118:	cmp	ip, #126	; 0x7e
   3411c:	bgt	34154 <myhtml_tree_active_formatting_reconstruction@@Base+0x154>
   34120:	cmp	ip, #83	; 0x53
   34124:	beq	342c8 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c8>
   34128:	cmp	ip, #94	; 0x5e
   3412c:	bne	34164 <myhtml_tree_active_formatting_reconstruction@@Base+0x164>
   34130:	b	342c8 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c8>
   34134:	cmp	ip, #27
   34138:	bhi	34164 <myhtml_tree_active_formatting_reconstruction@@Base+0x164>
   3413c:	movw	r4, #512	; 0x200
   34140:	mov	r1, #1
   34144:	movt	r4, #2560	; 0xa00
   34148:	tst	r4, r1, lsl ip
   3414c:	beq	34164 <myhtml_tree_active_formatting_reconstruction@@Base+0x164>
   34150:	b	342c8 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c8>
   34154:	cmp	ip, #127	; 0x7f
   34158:	beq	342c8 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c8>
   3415c:	cmp	ip, #131	; 0x83
   34160:	beq	342c8 <myhtml_tree_active_formatting_reconstruction@@Base+0x2c8>
   34164:	ldr	r4, [r2, #4]
   34168:	cmp	r4, #0
   3416c:	beq	340f0 <myhtml_tree_active_formatting_reconstruction@@Base+0xf0>
   34170:	mov	r4, #0
   34174:	ldr	ip, [r3, r4, lsl #2]
   34178:	cmp	ip, r6
   3417c:	beq	34194 <myhtml_tree_active_formatting_reconstruction@@Base+0x194>
   34180:	ldr	r1, [r2, #4]
   34184:	add	r4, r4, #1
   34188:	cmp	r4, r1
   3418c:	bcc	34174 <myhtml_tree_active_formatting_reconstruction@@Base+0x174>
   34190:	b	340f0 <myhtml_tree_active_formatting_reconstruction@@Base+0xf0>
   34194:	mov	r5, r0
   34198:	ldr	r0, [r7, #4]
   3419c:	cmp	r5, r0
   341a0:	bcs	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   341a4:	vmov.i32	q4, #0	; 0x00000000
   341a8:	b	341d8 <myhtml_tree_active_formatting_reconstruction@@Base+0x1d8>
   341ac:	ldr	r0, [r4]
   341b0:	ldr	r1, [r4, #4]
   341b4:	str	r6, [r0, r1, lsl #2]
   341b8:	ldr	r0, [r4, #4]
   341bc:	add	r0, r0, #1
   341c0:	str	r0, [r4, #4]
   341c4:	str	r6, [r9, r5, lsl #2]
   341c8:	add	r5, r5, #1
   341cc:	ldr	r0, [r7, #4]
   341d0:	cmp	r5, r0
   341d4:	bcs	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   341d8:	ldr	r8, [r9, r5, lsl #2]
   341dc:	mov	r2, #0
   341e0:	ldr	r4, [r8, #40]	; 0x28
   341e4:	ldr	r0, [r4, #12]
   341e8:	ldr	r1, [r4, #48]	; 0x30
   341ec:	bl	1190c <mcobject_async_malloc@plt>
   341f0:	mov	r2, #0
   341f4:	mov	r1, #36	; 0x24
   341f8:	str	r4, [r0, #40]	; 0x28
   341fc:	mov	r6, r0
   34200:	str	r2, [r0, #32]
   34204:	vst1.32	{d8-d9}, [r0], r1
   34208:	mov	r1, #1
   3420c:	str	r1, [r6, #8]
   34210:	str	r2, [r0]
   34214:	add	r0, r6, #16
   34218:	mov	r1, #0
   3421c:	vst1.32	{d8-d9}, [r0]
   34220:	ldr	r2, [r8, #32]
   34224:	cmp	r2, #0
   34228:	beq	34240 <myhtml_tree_active_formatting_reconstruction@@Base+0x240>
   3422c:	ldr	r0, [r8, #40]	; 0x28
   34230:	mov	r1, r2
   34234:	ldr	r0, [r0, #8]
   34238:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   3423c:	ldr	r1, [r8, #32]
   34240:	ldr	r3, [r8, #40]	; 0x28
   34244:	ldr	r0, [r3, #8]
   34248:	ldr	r2, [r3, #40]	; 0x28
   3424c:	ldr	r3, [r3, #44]	; 0x2c
   34250:	bl	11018 <myhtml_token_node_clone@plt>
   34254:	str	r0, [r6, #32]
   34258:	cmp	r0, #0
   3425c:	add	r2, sp, #4
   34260:	ldr	r1, [r8, #4]
   34264:	str	r1, [r6, #4]
   34268:	ldr	r1, [r8, #8]
   3426c:	str	r1, [r6, #8]
   34270:	ldrne	r1, [r0, #48]	; 0x30
   34274:	orrne	r1, r1, #4
   34278:	strne	r1, [r0, #48]	; 0x30
   3427c:	mov	r0, sl
   34280:	mov	r1, #0
   34284:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   34288:	ldr	r2, [sp, #4]
   3428c:	mov	r1, r6
   34290:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   34294:	ldr	r4, [sl, #128]	; 0x80
   34298:	ldr	r1, [r4, #8]
   3429c:	ldr	r0, [r4, #4]
   342a0:	cmp	r0, r1
   342a4:	bcc	341ac <myhtml_tree_active_formatting_reconstruction@@Base+0x1ac>
   342a8:	lsl	r0, r1, #1
   342ac:	lsl	r1, r1, #3
   342b0:	str	r0, [r4, #8]
   342b4:	ldr	r0, [r4]
   342b8:	bl	10d9c <mycore_realloc@plt>
   342bc:	cmp	r0, #0
   342c0:	strne	r0, [r4]
   342c4:	b	341ac <myhtml_tree_active_formatting_reconstruction@@Base+0x1ac>
   342c8:	mov	r5, r0
   342cc:	ldr	r0, [r7, #4]
   342d0:	cmp	r5, r0
   342d4:	bcc	341a4 <myhtml_tree_active_formatting_reconstruction@@Base+0x1a4>
   342d8:	b	3409c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>

000342dc <myhtml_tree_adoption_agency_algorithm@@Base>:
   342dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   342e0:	add	fp, sp, #28
   342e4:	sub	sp, sp, #4
   342e8:	vpush	{d8-d9}
   342ec:	sub	sp, sp, #48	; 0x30
   342f0:	ldr	r1, [r0, #128]	; 0x80
   342f4:	mov	r4, r0
   342f8:	mov	r7, #0
   342fc:	ldr	r0, [r1, #4]
   34300:	cmp	r0, #0
   34304:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34308:	mov	sl, r2
   3430c:	ldr	r0, [r1]
   34310:	ldr	r2, [r1, #4]
   34314:	ldr	ip, [r4, #124]	; 0x7c
   34318:	add	r2, r0, r2, lsl #2
   3431c:	ldr	lr, [ip]
   34320:	ldr	r2, [r2, #-4]
   34324:	ldr	r3, [r2, #8]
   34328:	cmp	r3, #1
   3432c:	bne	3435c <myhtml_tree_adoption_agency_algorithm@@Base+0x80>
   34330:	ldr	r3, [r2, #4]
   34334:	cmp	r3, sl
   34338:	bne	3435c <myhtml_tree_adoption_agency_algorithm@@Base+0x80>
   3433c:	ldr	r6, [ip, #4]
   34340:	sub	r3, lr, #4
   34344:	cmp	r6, #0
   34348:	beq	34c5c <myhtml_tree_adoption_agency_algorithm@@Base+0x980>
   3434c:	ldr	r5, [r3, r6, lsl #2]
   34350:	sub	r6, r6, #1
   34354:	cmp	r5, r2
   34358:	bne	34344 <myhtml_tree_adoption_agency_algorithm@@Base+0x68>
   3435c:	sub	r1, r0, #4
   34360:	vmov.i32	q4, #0	; 0x00000000
   34364:	mov	r5, #1
   34368:	mov	r8, lr
   3436c:	mov	r2, #0
   34370:	str	r1, [sp, #40]	; 0x28
   34374:	movw	r1, #512	; 0x200
   34378:	movt	r1, #2560	; 0xa00
   3437c:	add	r2, r2, #1
   34380:	sub	r3, r8, #4
   34384:	str	r2, [sp, #28]
   34388:	ldr	r2, [ip, #4]
   3438c:	cmp	r2, #0
   34390:	bne	343ac <myhtml_tree_adoption_agency_algorithm@@Base+0xd0>
   34394:	b	34c78 <myhtml_tree_adoption_agency_algorithm@@Base+0x99c>
   34398:	sub	r2, r2, #1
   3439c:	cmp	r6, sl
   343a0:	beq	34410 <myhtml_tree_adoption_agency_algorithm@@Base+0x134>
   343a4:	cmp	r2, #0
   343a8:	beq	34c78 <myhtml_tree_adoption_agency_algorithm@@Base+0x99c>
   343ac:	ldr	r7, [r4]
   343b0:	ldr	r9, [r3, r2, lsl #2]
   343b4:	ldr	r6, [r7, #36]	; 0x24
   343b8:	mov	r7, #0
   343bc:	cmp	r6, r9
   343c0:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   343c4:	ldr	r6, [r9, #4]
   343c8:	cmp	r6, #82	; 0x52
   343cc:	ble	343ec <myhtml_tree_adoption_agency_algorithm@@Base+0x110>
   343d0:	cmp	r6, #126	; 0x7e
   343d4:	bgt	34400 <myhtml_tree_adoption_agency_algorithm@@Base+0x124>
   343d8:	cmp	r6, #83	; 0x53
   343dc:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   343e0:	cmp	r6, #94	; 0x5e
   343e4:	bne	34398 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   343e8:	b	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   343ec:	cmp	r6, #27
   343f0:	bhi	34398 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   343f4:	tst	r1, r5, lsl r6
   343f8:	beq	34398 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   343fc:	b	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34400:	cmp	r6, #127	; 0x7f
   34404:	cmpne	r6, #131	; 0x83
   34408:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   3440c:	b	34398 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   34410:	ldr	r3, [r4, #128]	; 0x80
   34414:	ldr	r5, [r3]
   34418:	ldr	r6, [r3, #4]
   3441c:	cmp	r6, #0
   34420:	beq	34c90 <myhtml_tree_adoption_agency_algorithm@@Base+0x9b4>
   34424:	add	r1, r2, #1
   34428:	mov	r6, #0
   3442c:	ldr	r2, [r5, r6, lsl #2]
   34430:	cmp	r2, r9
   34434:	beq	3444c <myhtml_tree_adoption_agency_algorithm@@Base+0x170>
   34438:	ldr	r2, [r3, #4]
   3443c:	add	r6, r6, #1
   34440:	cmp	r6, r2
   34444:	bcc	3442c <myhtml_tree_adoption_agency_algorithm@@Base+0x150>
   34448:	b	34c90 <myhtml_tree_adoption_agency_algorithm@@Base+0x9b4>
   3444c:	ldr	r8, [r9, #40]	; 0x28
   34450:	str	r1, [sp, #24]
   34454:	str	lr, [sp, #16]
   34458:	str	r0, [sp, #36]	; 0x24
   3445c:	mov	r7, #0
   34460:	ldr	r1, [r8, #128]	; 0x80
   34464:	ldr	r0, [r1, #4]
   34468:	cmp	r0, #0
   3446c:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34470:	str	r4, [sp, #32]
   34474:	ldr	r4, [r1]
   34478:	sub	r5, r0, #1
   3447c:	ldr	r0, [r4, r5, lsl #2]
   34480:	ldr	r1, [r0, #4]
   34484:	ldr	r0, [r8, #28]
   34488:	bl	117f8 <myhtml_tag_get_by_id@plt>
   3448c:	ldr	r1, [r4, r5, lsl #2]
   34490:	cmp	r1, r9
   34494:	beq	344bc <myhtml_tree_adoption_agency_algorithm@@Base+0x1e0>
   34498:	cmp	r5, #0
   3449c:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   344a0:	ldr	r1, [r1, #8]
   344a4:	sub	r5, r5, #1
   344a8:	add	r0, r0, r1, lsl #2
   344ac:	ldr	r0, [r0, #16]
   344b0:	ands	r0, r0, #8
   344b4:	beq	3447c <myhtml_tree_adoption_agency_algorithm@@Base+0x1a0>
   344b8:	b	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   344bc:	ldr	r4, [sp, #32]
   344c0:	ldr	r0, [r4, #128]	; 0x80
   344c4:	ldr	r1, [r0, #4]
   344c8:	cmp	r1, #0
   344cc:	ldrne	r1, [r0, #4]
   344d0:	ldr	r0, [r0, #4]
   344d4:	ldr	r5, [sp, #36]	; 0x24
   344d8:	cmp	r6, r0
   344dc:	bcs	34cec <myhtml_tree_adoption_agency_algorithm@@Base+0xa10>
   344e0:	mov	r7, r6
   344e4:	ldr	r0, [r5, r7, lsl #2]
   344e8:	ldr	r1, [r0, #4]
   344ec:	ldr	r0, [r4, #28]
   344f0:	bl	117f8 <myhtml_tag_get_by_id@plt>
   344f4:	ldr	r3, [r5, r7, lsl #2]
   344f8:	ldr	r1, [r3, #8]
   344fc:	add	r0, r0, r1, lsl #2
   34500:	ldrb	r0, [r0, #16]
   34504:	tst	r0, #2
   34508:	bne	34524 <myhtml_tree_adoption_agency_algorithm@@Base+0x248>
   3450c:	ldr	r0, [r4, #128]	; 0x80
   34510:	add	r7, r7, #1
   34514:	ldr	r0, [r0, #4]
   34518:	cmp	r7, r0
   3451c:	bcc	344e4 <myhtml_tree_adoption_agency_algorithm@@Base+0x208>
   34520:	mov	r3, #0
   34524:	cmp	r3, #0
   34528:	beq	34cec <myhtml_tree_adoption_agency_algorithm@@Base+0xa10>
   3452c:	ldr	r0, [sp, #40]	; 0x28
   34530:	mov	r2, #0
   34534:	str	sl, [sp, #8]
   34538:	str	r3, [sp, #20]
   3453c:	ldr	r0, [r0, r6, lsl #2]
   34540:	str	r0, [sp, #4]
   34544:	mov	sl, r3
   34548:	str	r3, [sp, #12]
   3454c:	b	34554 <myhtml_tree_adoption_agency_algorithm@@Base+0x278>
   34550:	mov	r2, ip
   34554:	ldr	r0, [r4, #128]	; 0x80
   34558:	ldr	r3, [r0]
   3455c:	ldr	r1, [r0, #4]
   34560:	cmp	r1, #0
   34564:	beq	34590 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b4>
   34568:	mov	r1, #0
   3456c:	ldr	r6, [r3, r1, lsl #2]
   34570:	cmp	r6, sl
   34574:	beq	3458c <myhtml_tree_adoption_agency_algorithm@@Base+0x2b0>
   34578:	ldr	r6, [r0, #4]
   3457c:	add	r1, r1, #1
   34580:	cmp	r1, r6
   34584:	bcc	3456c <myhtml_tree_adoption_agency_algorithm@@Base+0x290>
   34588:	b	34590 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b4>
   3458c:	mov	r7, r1
   34590:	cmp	r7, #0
   34594:	beq	34ce4 <myhtml_tree_adoption_agency_algorithm@@Base+0xa08>
   34598:	sub	r7, r7, #1
   3459c:	ldr	sl, [r5, r7, lsl #2]
   345a0:	cmp	sl, r9
   345a4:	beq	3482c <myhtml_tree_adoption_agency_algorithm@@Base+0x550>
   345a8:	ldr	r5, [r4, #124]	; 0x7c
   345ac:	add	ip, r2, #1
   345b0:	ldr	r8, [r5, #4]
   345b4:	ldr	r4, [r5]
   345b8:	add	r1, r4, r8, lsl #2
   345bc:	sub	r4, r4, #4
   345c0:	add	r1, r1, #4
   345c4:	cmp	r8, #0
   345c8:	beq	34630 <myhtml_tree_adoption_agency_algorithm@@Base+0x354>
   345cc:	ldr	r6, [r4, r8, lsl #2]
   345d0:	sub	r1, r1, #4
   345d4:	sub	r8, r8, #1
   345d8:	cmp	r6, sl
   345dc:	bne	345c4 <myhtml_tree_adoption_agency_algorithm@@Base+0x2e8>
   345e0:	mov	r6, ip
   345e4:	cmp	r2, #3
   345e8:	bcc	34694 <myhtml_tree_adoption_agency_algorithm@@Base+0x3b8>
   345ec:	ldr	r0, [r5, #4]
   345f0:	sub	r0, r0, r8
   345f4:	lsl	r2, r0, #2
   345f8:	sub	r0, r1, #4
   345fc:	bl	10f94 <memmove@plt>
   34600:	ldr	r4, [sp, #32]
   34604:	mov	r2, r6
   34608:	ldr	r0, [r4, #124]	; 0x7c
   3460c:	ldr	r1, [r0, #4]
   34610:	sub	r1, r1, #1
   34614:	str	r1, [r0, #4]
   34618:	ldr	r0, [sp, #24]
   3461c:	ldr	r5, [sp, #36]	; 0x24
   34620:	cmp	r8, r0
   34624:	subcc	r0, r0, #1
   34628:	str	r0, [sp, #24]
   3462c:	b	34554 <myhtml_tree_adoption_agency_algorithm@@Base+0x278>
   34630:	ldr	r2, [r0, #4]
   34634:	ldr	r4, [sp, #32]
   34638:	ldr	r5, [sp, #36]	; 0x24
   3463c:	add	r1, r3, r2, lsl #2
   34640:	add	r3, r1, #4
   34644:	cmp	r2, #0
   34648:	beq	34550 <myhtml_tree_adoption_agency_algorithm@@Base+0x274>
   3464c:	sub	r1, r3, #4
   34650:	ldr	r3, [r3, #-8]
   34654:	sub	r2, r2, #1
   34658:	cmp	r3, sl
   3465c:	mov	r3, r1
   34660:	bne	34644 <myhtml_tree_adoption_agency_algorithm@@Base+0x368>
   34664:	ldr	r0, [r0, #4]
   34668:	mov	r6, ip
   3466c:	sub	r0, r0, r2
   34670:	lsl	r2, r0, #2
   34674:	sub	r0, r1, #4
   34678:	bl	10f94 <memmove@plt>
   3467c:	ldr	r0, [r4, #128]	; 0x80
   34680:	mov	r2, r6
   34684:	ldr	r1, [r0, #4]
   34688:	sub	r1, r1, #1
   3468c:	str	r1, [r0, #4]
   34690:	b	34554 <myhtml_tree_adoption_agency_algorithm@@Base+0x278>
   34694:	ldr	r4, [sl, #40]	; 0x28
   34698:	mov	r2, #0
   3469c:	mov	r5, #0
   346a0:	ldr	r0, [r4, #12]
   346a4:	ldr	r1, [r4, #48]	; 0x30
   346a8:	bl	1190c <mcobject_async_malloc@plt>
   346ac:	mov	r2, r0
   346b0:	mov	r1, #36	; 0x24
   346b4:	str	r4, [r0, #40]	; 0x28
   346b8:	str	r5, [r0, #32]
   346bc:	str	r0, [sp]
   346c0:	vst1.32	{d8-d9}, [r2], r1
   346c4:	mov	r1, #1
   346c8:	str	r1, [r0, #8]
   346cc:	add	r0, r0, #16
   346d0:	str	r5, [r2]
   346d4:	vst1.32	{d8-d9}, [r0]
   346d8:	ldr	r1, [sl, #32]
   346dc:	cmp	r1, #0
   346e0:	beq	346f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x418>
   346e4:	ldr	r0, [sl, #40]	; 0x28
   346e8:	ldr	r0, [r0, #8]
   346ec:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   346f0:	ldr	r5, [sl, #32]
   346f4:	ldr	r1, [sl, #40]	; 0x28
   346f8:	ldr	r0, [r1, #8]
   346fc:	ldr	r2, [r1, #40]	; 0x28
   34700:	ldr	r3, [r1, #44]	; 0x2c
   34704:	mov	r1, r5
   34708:	bl	11018 <myhtml_token_node_clone@plt>
   3470c:	ldr	r3, [sp]
   34710:	cmp	r0, #0
   34714:	mov	ip, r6
   34718:	str	r0, [r3, #32]
   3471c:	ldr	r1, [sl, #4]
   34720:	str	r1, [r3, #4]
   34724:	ldr	r1, [sl, #8]
   34728:	str	r1, [r3, #8]
   3472c:	ldrne	r1, [r0, #48]	; 0x30
   34730:	orrne	r1, r1, #4
   34734:	strne	r1, [r0, #48]	; 0x30
   34738:	mov	r0, #1
   3473c:	str	r0, [r3, #8]
   34740:	ldr	r0, [sp, #16]
   34744:	ldr	sl, [sp, #12]
   34748:	ldr	r4, [sp, #32]
   3474c:	ldr	r5, [sp, #24]
   34750:	str	r3, [r0, r8, lsl #2]
   34754:	ldr	r0, [sp, #36]	; 0x24
   34758:	str	r3, [r0, r7, lsl #2]
   3475c:	ldr	r0, [sp, #20]
   34760:	cmp	sl, r0
   34764:	ldr	r0, [sl, #24]
   34768:	addeq	r5, r8, #1
   3476c:	cmp	r0, #0
   34770:	beq	347d8 <myhtml_tree_adoption_agency_algorithm@@Base+0x4fc>
   34774:	ldr	lr, [sl, #16]
   34778:	ldr	r2, [sl, #12]
   3477c:	cmp	lr, #0
   34780:	beq	34790 <myhtml_tree_adoption_agency_algorithm@@Base+0x4b4>
   34784:	str	r2, [lr, #12]
   34788:	ldr	r2, [sl, #12]
   3478c:	b	34794 <myhtml_tree_adoption_agency_algorithm@@Base+0x4b8>
   34790:	str	r2, [r0, #28]
   34794:	cmp	r2, #0
   34798:	add	r1, r2, #16
   3479c:	addeq	r1, r0, #20
   347a0:	str	lr, [r1]
   347a4:	ldr	r0, [sl, #40]	; 0x28
   347a8:	ldr	lr, [r0, #240]	; 0xf0
   347ac:	cmp	lr, #0
   347b0:	beq	347c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x4ec>
   347b4:	ldr	r2, [r0, #248]	; 0xf8
   347b8:	mov	r1, sl
   347bc:	blx	lr
   347c0:	ldr	r3, [sp]
   347c4:	mov	ip, r6
   347c8:	mov	r0, #0
   347cc:	str	r0, [sl, #24]
   347d0:	str	r0, [sl, #12]
   347d4:	str	r0, [sl, #16]
   347d8:	ldr	r0, [r3, #28]
   347dc:	ldr	r1, [sp, #12]
   347e0:	str	r5, [sp, #24]
   347e4:	ldr	r5, [sp, #36]	; 0x24
   347e8:	mov	r2, ip
   347ec:	cmp	r0, #0
   347f0:	streq	r1, [r3, #20]
   347f4:	strne	r1, [r0, #16]
   347f8:	strne	r0, [r1, #12]
   347fc:	str	r3, [r1, #24]
   34800:	str	r1, [r3, #28]
   34804:	ldr	r0, [r1, #40]	; 0x28
   34808:	ldr	r6, [r0, #236]	; 0xec
   3480c:	cmp	r6, #0
   34810:	beq	34544 <myhtml_tree_adoption_agency_algorithm@@Base+0x268>
   34814:	ldr	r2, [r0, #244]	; 0xf4
   34818:	mov	r8, ip
   3481c:	blx	r6
   34820:	ldr	r3, [sp]
   34824:	mov	r2, r8
   34828:	b	34544 <myhtml_tree_adoption_agency_algorithm@@Base+0x268>
   3482c:	ldr	r6, [sp, #12]
   34830:	ldr	sl, [sp, #8]
   34834:	ldr	r0, [r6, #24]
   34838:	cmp	r0, #0
   3483c:	beq	3489c <myhtml_tree_adoption_agency_algorithm@@Base+0x5c0>
   34840:	ldr	r1, [r6, #16]
   34844:	ldr	r2, [r6, #12]
   34848:	cmp	r1, #0
   3484c:	beq	3485c <myhtml_tree_adoption_agency_algorithm@@Base+0x580>
   34850:	str	r2, [r1, #12]
   34854:	ldr	r2, [r6, #12]
   34858:	b	34860 <myhtml_tree_adoption_agency_algorithm@@Base+0x584>
   3485c:	str	r2, [r0, #28]
   34860:	cmp	r2, #0
   34864:	add	r3, r2, #16
   34868:	addeq	r3, r0, #20
   3486c:	str	r1, [r3]
   34870:	ldr	r0, [r6, #40]	; 0x28
   34874:	ldr	r3, [r0, #240]	; 0xf0
   34878:	cmp	r3, #0
   3487c:	beq	3488c <myhtml_tree_adoption_agency_algorithm@@Base+0x5b0>
   34880:	ldr	r2, [r0, #248]	; 0xf8
   34884:	mov	r1, r6
   34888:	blx	r3
   3488c:	mov	r0, #0
   34890:	str	r0, [r6, #24]
   34894:	str	r0, [r6, #12]
   34898:	str	r0, [r6, #16]
   3489c:	ldr	r1, [sp, #4]
   348a0:	mov	r0, r4
   348a4:	add	r2, sp, #44	; 0x2c
   348a8:	bl	11b10 <myhtml_tree_appropriate_place_inserting@plt>
   348ac:	ldr	r2, [sp, #44]	; 0x2c
   348b0:	mov	r1, r6
   348b4:	bl	112f4 <myhtml_tree_node_insert_by_mode@plt>
   348b8:	ldr	r4, [r9, #40]	; 0x28
   348bc:	mov	r2, #0
   348c0:	mov	r6, #0
   348c4:	ldr	r0, [r4, #12]
   348c8:	ldr	r1, [r4, #48]	; 0x30
   348cc:	bl	1190c <mcobject_async_malloc@plt>
   348d0:	mov	r1, #36	; 0x24
   348d4:	str	r4, [r0, #40]	; 0x28
   348d8:	mov	r8, r0
   348dc:	str	r6, [r0, #32]
   348e0:	vst1.32	{d8-d9}, [r0], r1
   348e4:	mov	r1, #1
   348e8:	str	r1, [r8, #8]
   348ec:	str	r6, [r0]
   348f0:	add	r0, r8, #16
   348f4:	vst1.32	{d8-d9}, [r0]
   348f8:	ldr	r1, [r9, #32]
   348fc:	cmp	r1, #0
   34900:	beq	34914 <myhtml_tree_adoption_agency_algorithm@@Base+0x638>
   34904:	ldr	r0, [r9, #40]	; 0x28
   34908:	ldr	r0, [r0, #8]
   3490c:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   34910:	ldr	r6, [r9, #32]
   34914:	ldr	r1, [r9, #40]	; 0x28
   34918:	ldr	r0, [r1, #8]
   3491c:	ldr	r2, [r1, #40]	; 0x28
   34920:	ldr	r3, [r1, #44]	; 0x2c
   34924:	mov	r1, r6
   34928:	bl	11018 <myhtml_token_node_clone@plt>
   3492c:	str	r0, [r8, #32]
   34930:	cmp	r0, #0
   34934:	ldr	r1, [r9, #4]
   34938:	str	r1, [r8, #4]
   3493c:	ldr	r1, [r9, #8]
   34940:	str	r1, [r8, #8]
   34944:	ldrne	r1, [r0, #48]	; 0x30
   34948:	orrne	r1, r1, #4
   3494c:	strne	r1, [r0, #48]	; 0x30
   34950:	mov	r0, #1
   34954:	ldr	r1, [sp, #20]
   34958:	str	r0, [r8, #8]
   3495c:	ldr	r4, [sp, #32]
   34960:	ldr	r6, [r1, #20]
   34964:	cmp	r6, #0
   34968:	bne	34980 <myhtml_tree_adoption_agency_algorithm@@Base+0x6a4>
   3496c:	b	34a3c <myhtml_tree_adoption_agency_algorithm@@Base+0x760>
   34970:	ldr	r1, [sp, #20]
   34974:	cmp	r7, #0
   34978:	mov	r6, r7
   3497c:	beq	34a3c <myhtml_tree_adoption_agency_algorithm@@Base+0x760>
   34980:	ldr	r7, [r6, #16]
   34984:	cmp	r7, #0
   34988:	beq	34994 <myhtml_tree_adoption_agency_algorithm@@Base+0x6b8>
   3498c:	add	r0, r7, #12
   34990:	b	349a4 <myhtml_tree_adoption_agency_algorithm@@Base+0x6c8>
   34994:	ldr	r0, [r6, #24]
   34998:	cmp	r0, #0
   3499c:	beq	349ac <myhtml_tree_adoption_agency_algorithm@@Base+0x6d0>
   349a0:	add	r0, r0, #28
   349a4:	ldr	r1, [r6, #12]
   349a8:	str	r1, [r0]
   349ac:	ldr	r0, [r6, #12]
   349b0:	cmp	r0, #0
   349b4:	beq	349c0 <myhtml_tree_adoption_agency_algorithm@@Base+0x6e4>
   349b8:	add	r0, r0, #16
   349bc:	b	349d0 <myhtml_tree_adoption_agency_algorithm@@Base+0x6f4>
   349c0:	ldr	r0, [r6, #24]
   349c4:	cmp	r0, #0
   349c8:	beq	349d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x6f8>
   349cc:	add	r0, r0, #20
   349d0:	str	r7, [r0]
   349d4:	ldr	r0, [r6, #40]	; 0x28
   349d8:	ldr	r3, [r0, #240]	; 0xf0
   349dc:	cmp	r3, #0
   349e0:	beq	349f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x714>
   349e4:	ldr	r2, [r0, #248]	; 0xf8
   349e8:	mov	r1, r6
   349ec:	blx	r3
   349f0:	mov	r0, #0
   349f4:	str	r0, [r6, #24]
   349f8:	str	r0, [r6, #12]
   349fc:	str	r0, [r6, #16]
   34a00:	ldr	r0, [r8, #28]
   34a04:	cmp	r0, #0
   34a08:	streq	r6, [r8, #20]
   34a0c:	strne	r6, [r0, #16]
   34a10:	strne	r0, [r6, #12]
   34a14:	str	r8, [r6, #24]
   34a18:	str	r6, [r8, #28]
   34a1c:	ldr	r0, [r6, #40]	; 0x28
   34a20:	ldr	r3, [r0, #236]	; 0xec
   34a24:	cmp	r3, #0
   34a28:	beq	34970 <myhtml_tree_adoption_agency_algorithm@@Base+0x694>
   34a2c:	ldr	r2, [r0, #244]	; 0xf4
   34a30:	mov	r1, r6
   34a34:	blx	r3
   34a38:	b	34970 <myhtml_tree_adoption_agency_algorithm@@Base+0x694>
   34a3c:	ldr	r0, [r1, #28]
   34a40:	cmp	r0, #0
   34a44:	streq	r8, [r1, #20]
   34a48:	strne	r8, [r0, #16]
   34a4c:	strne	r0, [r8, #12]
   34a50:	str	r1, [r8, #24]
   34a54:	str	r8, [r1, #28]
   34a58:	ldr	r0, [r8, #40]	; 0x28
   34a5c:	ldr	r3, [r0, #236]	; 0xec
   34a60:	cmp	r3, #0
   34a64:	beq	34a74 <myhtml_tree_adoption_agency_algorithm@@Base+0x798>
   34a68:	ldr	r2, [r0, #244]	; 0xf4
   34a6c:	mov	r1, r8
   34a70:	blx	r3
   34a74:	ldr	r0, [r4, #124]	; 0x7c
   34a78:	ldr	r7, [r0, #4]
   34a7c:	ldr	r1, [r0]
   34a80:	add	r1, r1, r7, lsl #2
   34a84:	add	r2, r1, #4
   34a88:	cmp	r7, #0
   34a8c:	beq	34ce4 <myhtml_tree_adoption_agency_algorithm@@Base+0xa08>
   34a90:	sub	r1, r2, #4
   34a94:	ldr	r2, [r2, #-8]
   34a98:	sub	r7, r7, #1
   34a9c:	cmp	r2, r9
   34aa0:	mov	r2, r1
   34aa4:	bne	34a88 <myhtml_tree_adoption_agency_algorithm@@Base+0x7ac>
   34aa8:	ldr	r0, [r0, #4]
   34aac:	sub	r0, r0, r7
   34ab0:	lsl	r2, r0, #2
   34ab4:	sub	r0, r1, #4
   34ab8:	bl	10f94 <memmove@plt>
   34abc:	ldr	r6, [r4, #124]	; 0x7c
   34ac0:	ldr	r0, [r6, #4]
   34ac4:	sub	r0, r0, #1
   34ac8:	str	r0, [r6, #4]
   34acc:	ldr	r5, [sp, #24]
   34ad0:	ldr	r1, [r6, #8]
   34ad4:	ldr	r0, [r6, #4]
   34ad8:	cmp	r7, r5
   34adc:	subcc	r5, r5, #1
   34ae0:	cmp	r0, r1
   34ae4:	bcc	34b04 <myhtml_tree_adoption_agency_algorithm@@Base+0x828>
   34ae8:	lsl	r0, r1, #1
   34aec:	lsl	r1, r1, #3
   34af0:	str	r0, [r6, #8]
   34af4:	ldr	r0, [r6]
   34af8:	bl	10d9c <mycore_realloc@plt>
   34afc:	cmp	r0, #0
   34b00:	strne	r0, [r6]
   34b04:	ldr	r0, [r6]
   34b08:	ldr	r2, [r6, #4]
   34b0c:	add	r1, r0, r5, lsl #2
   34b10:	sub	r2, r2, r5
   34b14:	lsl	r2, r2, #2
   34b18:	add	r0, r1, #4
   34b1c:	bl	10f94 <memmove@plt>
   34b20:	ldr	r0, [r6]
   34b24:	str	r8, [r0, r5, lsl #2]
   34b28:	ldr	r0, [r6, #4]
   34b2c:	add	r0, r0, #1
   34b30:	str	r0, [r6, #4]
   34b34:	ldr	r6, [r4, #128]	; 0x80
   34b38:	ldr	r2, [r6, #4]
   34b3c:	ldr	r0, [r6]
   34b40:	add	r1, r0, r2, lsl #2
   34b44:	add	r3, r1, #4
   34b48:	cmp	r2, #0
   34b4c:	beq	34b90 <myhtml_tree_adoption_agency_algorithm@@Base+0x8b4>
   34b50:	sub	r1, r3, #4
   34b54:	ldr	r3, [r3, #-8]
   34b58:	sub	r2, r2, #1
   34b5c:	cmp	r3, r9
   34b60:	mov	r3, r1
   34b64:	bne	34b48 <myhtml_tree_adoption_agency_algorithm@@Base+0x86c>
   34b68:	ldr	r0, [r6, #4]
   34b6c:	sub	r0, r0, r2
   34b70:	lsl	r2, r0, #2
   34b74:	sub	r0, r1, #4
   34b78:	bl	10f94 <memmove@plt>
   34b7c:	ldr	r6, [r4, #128]	; 0x80
   34b80:	ldr	r0, [r6, #4]
   34b84:	sub	r0, r0, #1
   34b88:	str	r0, [r6, #4]
   34b8c:	ldr	r0, [r6]
   34b90:	ldr	r1, [r6, #4]
   34b94:	ldr	r3, [sp, #20]
   34b98:	cmp	r1, #0
   34b9c:	beq	34c30 <myhtml_tree_adoption_agency_algorithm@@Base+0x954>
   34ba0:	mov	r7, #0
   34ba4:	ldr	r1, [r0, r7, lsl #2]
   34ba8:	ldr	r2, [r6, #4]
   34bac:	cmp	r1, r3
   34bb0:	beq	34bc4 <myhtml_tree_adoption_agency_algorithm@@Base+0x8e8>
   34bb4:	add	r7, r7, #1
   34bb8:	cmp	r7, r2
   34bbc:	bcc	34ba4 <myhtml_tree_adoption_agency_algorithm@@Base+0x8c8>
   34bc0:	b	34c30 <myhtml_tree_adoption_agency_algorithm@@Base+0x954>
   34bc4:	ldr	r1, [r6, #8]
   34bc8:	cmp	r2, r1
   34bcc:	bcc	34bf8 <myhtml_tree_adoption_agency_algorithm@@Base+0x91c>
   34bd0:	lsl	r0, r1, #1
   34bd4:	lsl	r1, r1, #3
   34bd8:	str	r0, [r6, #8]
   34bdc:	ldr	r0, [r6]
   34be0:	bl	10d9c <mycore_realloc@plt>
   34be4:	cmp	r0, #0
   34be8:	beq	34bf4 <myhtml_tree_adoption_agency_algorithm@@Base+0x918>
   34bec:	str	r0, [r6]
   34bf0:	b	34bf8 <myhtml_tree_adoption_agency_algorithm@@Base+0x91c>
   34bf4:	ldr	r0, [r6]
   34bf8:	ldr	r1, [r6, #4]
   34bfc:	mvn	r2, #3
   34c00:	sub	r1, r1, r7
   34c04:	add	r2, r2, r1, lsl #2
   34c08:	add	r1, r0, r7, lsl #2
   34c0c:	add	r0, r1, #8
   34c10:	add	r1, r1, #4
   34c14:	bl	10f94 <memmove@plt>
   34c18:	ldr	r0, [r6]
   34c1c:	add	r0, r0, r7, lsl #2
   34c20:	str	r8, [r0, #4]
   34c24:	ldr	r0, [r6, #4]
   34c28:	add	r0, r0, #1
   34c2c:	str	r0, [r6, #4]
   34c30:	ldr	r2, [sp, #28]
   34c34:	cmp	r2, #8
   34c38:	beq	34ce4 <myhtml_tree_adoption_agency_algorithm@@Base+0xa08>
   34c3c:	ldr	ip, [r4, #124]	; 0x7c
   34c40:	ldr	r0, [sp, #36]	; 0x24
   34c44:	ldr	lr, [sp, #16]
   34c48:	movw	r1, #512	; 0x200
   34c4c:	mov	r5, #1
   34c50:	movt	r1, #2560	; 0xa00
   34c54:	ldr	r8, [ip]
   34c58:	b	3437c <myhtml_tree_adoption_agency_algorithm@@Base+0xa0>
   34c5c:	ldr	r0, [r1, #4]
   34c60:	cmp	r0, #0
   34c64:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34c68:	ldr	r0, [r1, #4]
   34c6c:	sub	r0, r0, #1
   34c70:	str	r0, [r1, #4]
   34c74:	b	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34c78:	mov	r7, #1
   34c7c:	mov	r0, r7
   34c80:	sub	sp, fp, #48	; 0x30
   34c84:	vpop	{d8-d9}
   34c88:	add	sp, sp, #4
   34c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34c90:	ldr	r2, [ip, #4]
   34c94:	add	r1, r8, r2, lsl #2
   34c98:	add	r3, r1, #4
   34c9c:	cmp	r2, #0
   34ca0:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34ca4:	sub	r1, r3, #4
   34ca8:	ldr	r3, [r3, #-8]
   34cac:	sub	r2, r2, #1
   34cb0:	cmp	r3, r9
   34cb4:	mov	r3, r1
   34cb8:	bne	34c9c <myhtml_tree_adoption_agency_algorithm@@Base+0x9c0>
   34cbc:	ldr	r0, [ip, #4]
   34cc0:	sub	r0, r0, r2
   34cc4:	lsl	r2, r0, #2
   34cc8:	sub	r0, r1, #4
   34ccc:	bl	10f94 <memmove@plt>
   34cd0:	ldr	r0, [r4, #124]	; 0x7c
   34cd4:	ldr	r1, [r0, #4]
   34cd8:	sub	r1, r1, #1
   34cdc:	str	r1, [r0, #4]
   34ce0:	b	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34ce4:	mov	r7, #0
   34ce8:	b	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34cec:	ldr	r0, [r4, #128]	; 0x80
   34cf0:	ldr	r1, [r0, #4]
   34cf4:	cmp	r1, #0
   34cf8:	beq	34d34 <myhtml_tree_adoption_agency_algorithm@@Base+0xa58>
   34cfc:	ldr	r1, [r0]
   34d00:	ldr	r2, [r0, #4]
   34d04:	add	r1, r1, r2, lsl #2
   34d08:	ldr	r1, [r1, #-4]
   34d0c:	ldr	r2, [r0, #4]
   34d10:	cmp	r2, #0
   34d14:	ldrne	r2, [r0, #4]
   34d18:	subne	r2, r2, #1
   34d1c:	strne	r2, [r0, #4]
   34d20:	cmp	r1, r9
   34d24:	beq	34d3c <myhtml_tree_adoption_agency_algorithm@@Base+0xa60>
   34d28:	ldr	r1, [r0, #4]
   34d2c:	cmp	r1, #0
   34d30:	bne	34cfc <myhtml_tree_adoption_agency_algorithm@@Base+0xa20>
   34d34:	mov	r1, #0
   34d38:	b	34d0c <myhtml_tree_adoption_agency_algorithm@@Base+0xa30>
   34d3c:	ldr	r0, [r4, #124]	; 0x7c
   34d40:	mov	r7, #0
   34d44:	ldr	r2, [r0, #4]
   34d48:	ldr	r1, [r0]
   34d4c:	add	r1, r1, r2, lsl #2
   34d50:	add	r3, r1, #4
   34d54:	cmp	r2, #0
   34d58:	beq	34c7c <myhtml_tree_adoption_agency_algorithm@@Base+0x9a0>
   34d5c:	sub	r1, r3, #4
   34d60:	ldr	r3, [r3, #-8]
   34d64:	sub	r2, r2, #1
   34d68:	cmp	r3, r9
   34d6c:	mov	r3, r1
   34d70:	bne	34d54 <myhtml_tree_adoption_agency_algorithm@@Base+0xa78>
   34d74:	ldr	r0, [r0, #4]
   34d78:	b	34cc0 <myhtml_tree_adoption_agency_algorithm@@Base+0x9e4>

00034d7c <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   34d7c:	push	{r4, sl, fp, lr}
   34d80:	add	fp, sp, #8
   34d84:	mov	r2, #1
   34d88:	str	r2, [r1]
   34d8c:	ldr	r2, [r0, #40]	; 0x28
   34d90:	ldrb	r2, [r2, #188]	; 0xbc
   34d94:	cmp	r2, #0
   34d98:	beq	34e0c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   34d9c:	ldr	r2, [r0, #8]
   34da0:	cmp	r2, #1
   34da4:	bne	34e14 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   34da8:	ldr	r2, [r0, #4]
   34dac:	sub	r2, r2, #125	; 0x7d
   34db0:	cmp	r2, #10
   34db4:	bhi	34e0c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   34db8:	mov	ip, #1
   34dbc:	movw	r3, #1187	; 0x4a3
   34dc0:	tst	r3, ip, lsl r2
   34dc4:	beq	34e0c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   34dc8:	mov	lr, r0
   34dcc:	ldr	lr, [lr, #24]
   34dd0:	cmp	lr, #0
   34dd4:	ldrne	r2, [lr, #4]
   34dd8:	cmpne	r2, #128	; 0x80
   34ddc:	bne	34dcc <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x50>
   34de0:	mov	r3, r0
   34de4:	ldr	r3, [r3, #24]
   34de8:	cmp	r3, #0
   34dec:	beq	34e20 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa4>
   34df0:	ldr	r2, [r3, #4]
   34df4:	cmp	r2, #125	; 0x7d
   34df8:	bne	34de4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x68>
   34dfc:	mov	ip, #0
   34e00:	cmp	lr, #0
   34e04:	bne	34e2c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   34e08:	b	34e54 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   34e0c:	mov	r2, #0
   34e10:	str	r2, [r1]
   34e14:	mov	lr, r0
   34e18:	mov	r0, lr
   34e1c:	pop	{r4, sl, fp, pc}
   34e20:	mov	ip, #1
   34e24:	cmp	lr, #0
   34e28:	beq	34e54 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   34e2c:	mov	r2, lr
   34e30:	ldr	r2, [r2, #24]
   34e34:	cmp	r2, #0
   34e38:	ldrne	r4, [r2, #4]
   34e3c:	cmpne	r4, #125	; 0x7d
   34e40:	bne	34e30 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   34e44:	cmp	r3, #0
   34e48:	beq	34e84 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x108>
   34e4c:	cmp	r3, r2
   34e50:	bne	34e84 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x108>
   34e54:	cmp	ip, #0
   34e58:	bne	34e14 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   34e5c:	ldr	r2, [r3, #24]
   34e60:	mov	lr, r0
   34e64:	cmp	r2, #0
   34e68:	beq	34e18 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x9c>
   34e6c:	ldr	r0, [r3, #12]
   34e70:	mov	lr, r3
   34e74:	cmp	r0, #0
   34e78:	beq	34e18 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x9c>
   34e7c:	mov	r2, #2
   34e80:	b	34e10 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x94>
   34e84:	mov	r0, #0
   34e88:	str	r0, [r1]
   34e8c:	mov	r0, lr
   34e90:	pop	{r4, sl, fp, pc}

00034e94 <myhtml_tree_template_insertion_append@@Base>:
   34e94:	push	{r4, r5, fp, lr}
   34e98:	add	fp, sp, #8
   34e9c:	ldr	r5, [r0, #140]	; 0x8c
   34ea0:	mov	r4, r1
   34ea4:	ldmib	r5, {r0, r1}
   34ea8:	cmp	r0, r1
   34eac:	bcc	34ecc <myhtml_tree_template_insertion_append@@Base+0x38>
   34eb0:	lsl	r0, r1, #1
   34eb4:	lsl	r1, r1, #3
   34eb8:	str	r0, [r5, #8]
   34ebc:	ldr	r0, [r5]
   34ec0:	bl	10d9c <mycore_realloc@plt>
   34ec4:	cmp	r0, #0
   34ec8:	strne	r0, [r5]
   34ecc:	ldm	r5, {r0, r1}
   34ed0:	str	r4, [r0, r1, lsl #2]
   34ed4:	ldr	r0, [r5, #4]
   34ed8:	add	r0, r0, #1
   34edc:	str	r0, [r5, #4]
   34ee0:	pop	{r4, r5, fp, pc}

00034ee4 <myhtml_tree_template_insertion_pop@@Base>:
   34ee4:	ldr	r0, [r0, #140]	; 0x8c
   34ee8:	ldr	r1, [r0, #4]
   34eec:	cmp	r1, #0
   34ef0:	subne	r1, r1, #1
   34ef4:	strne	r1, [r0, #4]
   34ef8:	bx	lr

00034efc <myhtml_tree_template_insertion_length@@Base>:
   34efc:	ldr	r0, [r0, #140]	; 0x8c
   34f00:	ldr	r0, [r0, #4]
   34f04:	bx	lr

00034f08 <myhtml_tree_token_list_append@@Base>:
   34f08:	push	{r4, r5, fp, lr}
   34f0c:	add	fp, sp, #8
   34f10:	mov	r4, r0
   34f14:	mov	r5, r1
   34f18:	ldr	r0, [r0, #4]
   34f1c:	ldr	r1, [r4, #8]
   34f20:	cmp	r0, r1
   34f24:	bcc	34f44 <myhtml_tree_token_list_append@@Base+0x3c>
   34f28:	lsl	r0, r1, #1
   34f2c:	lsl	r1, r1, #3
   34f30:	str	r0, [r4, #8]
   34f34:	ldr	r0, [r4]
   34f38:	bl	10d9c <mycore_realloc@plt>
   34f3c:	cmp	r0, #0
   34f40:	strne	r0, [r4]
   34f44:	ldm	r4, {r0, r1}
   34f48:	str	r5, [r0, r1, lsl #2]
   34f4c:	add	r0, r1, #1
   34f50:	str	r0, [r4, #4]
   34f54:	pop	{r4, r5, fp, pc}

00034f58 <myhtml_tree_token_list_append_after_index@@Base>:
   34f58:	push	{r4, r5, r6, sl, fp, lr}
   34f5c:	add	fp, sp, #16
   34f60:	mov	r4, r0
   34f64:	mov	r5, r1
   34f68:	ldr	r0, [r0, #4]
   34f6c:	mov	r6, r2
   34f70:	ldr	r1, [r4, #8]
   34f74:	cmp	r0, r1
   34f78:	bcc	34f98 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   34f7c:	lsl	r0, r1, #1
   34f80:	lsl	r1, r1, #3
   34f84:	str	r0, [r4, #8]
   34f88:	ldr	r0, [r4]
   34f8c:	bl	10d9c <mycore_realloc@plt>
   34f90:	cmp	r0, #0
   34f94:	strne	r0, [r4]
   34f98:	ldr	r0, [r4, #4]
   34f9c:	ldr	r1, [r4]
   34fa0:	cmp	r0, r6
   34fa4:	bcs	34fc8 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   34fa8:	ldr	r2, [r1, r6, lsl #2]
   34fac:	add	r1, r1, #4
   34fb0:	mov	r3, r6
   34fb4:	str	r2, [r1, r3, lsl #2]
   34fb8:	add	r3, r3, #1
   34fbc:	cmp	r3, r0
   34fc0:	bhi	34fb4 <myhtml_tree_token_list_append_after_index@@Base+0x5c>
   34fc4:	ldr	r1, [r4]
   34fc8:	add	r1, r1, r6, lsl #2
   34fcc:	add	r0, r0, #1
   34fd0:	str	r5, [r1, #4]
   34fd4:	str	r0, [r4, #4]
   34fd8:	pop	{r4, r5, r6, sl, fp, pc}

00034fdc <myhtml_tree_token_list_current_node@@Base>:
   34fdc:	ldr	r1, [r0, #4]
   34fe0:	cmp	r1, #0
   34fe4:	moveq	r0, #0
   34fe8:	bxeq	lr
   34fec:	ldr	r0, [r0]
   34ff0:	add	r0, r0, r1, lsl #2
   34ff4:	ldr	r0, [r0, #-4]
   34ff8:	bx	lr

00034ffc <myhtml_tree_tags_close_p@@Base>:
   34ffc:	push	{r4, sl, fp, lr}
   35000:	add	fp, sp, #8
   35004:	mov	r1, #99	; 0x63
   35008:	mov	r2, #1
   3500c:	mov	r4, r0
   35010:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   35014:	ldr	r0, [r4, #128]	; 0x80
   35018:	ldr	r1, [r0, #4]
   3501c:	cmp	r1, #0
   35020:	beq	35038 <myhtml_tree_tags_close_p@@Base+0x3c>
   35024:	ldr	r1, [r0]
   35028:	ldr	r0, [r0, #4]
   3502c:	add	r0, r1, r0, lsl #2
   35030:	ldr	r0, [r0, #-4]
   35034:	b	3503c <myhtml_tree_tags_close_p@@Base+0x40>
   35038:	mov	r0, #0
   3503c:	mov	r1, #99	; 0x63
   35040:	bl	11864 <myhtml_is_html_node@plt>
   35044:	ldr	r0, [r4, #128]	; 0x80
   35048:	ldr	r1, [r0]
   3504c:	ldr	r2, [r0, #4]
   35050:	cmp	r2, #0
   35054:	beq	3508c <myhtml_tree_tags_close_p@@Base+0x90>
   35058:	ldr	r2, [r0, #4]
   3505c:	sub	r2, r2, #1
   35060:	str	r2, [r0, #4]
   35064:	ldr	r2, [r0, #4]
   35068:	ldr	r2, [r1, r2, lsl #2]
   3506c:	ldr	r2, [r2, #4]
   35070:	cmp	r2, #99	; 0x63
   35074:	bne	3504c <myhtml_tree_tags_close_p@@Base+0x50>
   35078:	ldr	r2, [r0, #4]
   3507c:	ldr	r2, [r1, r2, lsl #2]
   35080:	ldr	r2, [r2, #8]
   35084:	cmp	r2, #1
   35088:	bne	3504c <myhtml_tree_tags_close_p@@Base+0x50>
   3508c:	pop	{r4, sl, fp, pc}

00035090 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   35090:	push	{r4, sl, fp, lr}
   35094:	add	fp, sp, #8
   35098:	mov	r2, #1
   3509c:	mov	r4, r0
   350a0:	bl	119cc <myhtml_tree_node_insert_by_token@plt>
   350a4:	ldr	r1, [r4, #168]	; 0xa8
   350a8:	mov	r2, #7
   350ac:	str	r2, [r4, #168]	; 0xa8
   350b0:	str	r1, [r4, #172]	; 0xac
   350b4:	pop	{r4, sl, fp, pc}

000350b8 <myhtml_tree_clear_stack_back_table_context@@Base>:
   350b8:	ldr	r0, [r0, #128]	; 0x80
   350bc:	ldr	r1, [r0, #4]
   350c0:	cmp	r1, #0
   350c4:	bne	350e0 <myhtml_tree_clear_stack_back_table_context@@Base+0x28>
   350c8:	mov	r1, #0
   350cc:	ldr	r2, [r1, #4]
   350d0:	cmp	r2, #65	; 0x41
   350d4:	cmpne	r2, #128	; 0x80
   350d8:	beq	35100 <myhtml_tree_clear_stack_back_table_context@@Base+0x48>
   350dc:	b	35134 <myhtml_tree_clear_stack_back_table_context@@Base+0x7c>
   350e0:	ldr	r1, [r0]
   350e4:	ldr	r2, [r0, #4]
   350e8:	add	r1, r1, r2, lsl #2
   350ec:	ldr	r1, [r1, #-4]
   350f0:	ldr	r2, [r1, #4]
   350f4:	cmp	r2, #65	; 0x41
   350f8:	cmpne	r2, #128	; 0x80
   350fc:	bne	35134 <myhtml_tree_clear_stack_back_table_context@@Base+0x7c>
   35100:	ldr	r1, [r1, #8]
   35104:	cmp	r1, #1
   35108:	bxeq	lr
   3510c:	ldr	r1, [r0, #4]
   35110:	cmp	r1, #0
   35114:	ldrne	r1, [r0, #4]
   35118:	subne	r1, r1, #1
   3511c:	strne	r1, [r0, #4]
   35120:	mov	r1, #0
   35124:	ldr	r2, [r0, #4]
   35128:	cmp	r2, #0
   3512c:	bne	350e0 <myhtml_tree_clear_stack_back_table_context@@Base+0x28>
   35130:	b	350f0 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>
   35134:	cmp	r2, #125	; 0x7d
   35138:	beq	35100 <myhtml_tree_clear_stack_back_table_context@@Base+0x48>
   3513c:	b	3510c <myhtml_tree_clear_stack_back_table_context@@Base+0x54>

00035140 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   35140:	push	{fp, lr}
   35144:	mov	fp, sp
   35148:	ldr	r0, [r0, #128]	; 0x80
   3514c:	ldr	r1, [r0, #4]
   35150:	cmp	r1, #0
   35154:	beq	3516c <myhtml_tree_clear_stack_back_table_body_context@@Base+0x2c>
   35158:	ldr	r1, [r0]
   3515c:	ldr	r2, [r0, #4]
   35160:	add	r1, r1, r2, lsl #2
   35164:	ldr	r3, [r1, #-4]
   35168:	b	35170 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x30>
   3516c:	mov	r3, #0
   35170:	mov	ip, #1
   35174:	mov	lr, #85	; 0x55
   35178:	ldr	r1, [r3, #4]
   3517c:	sub	r2, r1, #126	; 0x7e
   35180:	cmp	r2, #6
   35184:	bhi	351e0 <myhtml_tree_clear_stack_back_table_body_context@@Base+0xa0>
   35188:	tst	lr, ip, lsl r2
   3518c:	beq	351e0 <myhtml_tree_clear_stack_back_table_body_context@@Base+0xa0>
   35190:	ldr	r1, [r3, #8]
   35194:	cmp	r1, #1
   35198:	beq	351ec <myhtml_tree_clear_stack_back_table_body_context@@Base+0xac>
   3519c:	ldr	r1, [r0, #4]
   351a0:	mov	r3, #0
   351a4:	cmp	r1, #0
   351a8:	ldrne	r1, [r0, #4]
   351ac:	subne	r1, r1, #1
   351b0:	strne	r1, [r0, #4]
   351b4:	ldr	r1, [r0, #4]
   351b8:	cmp	r1, #0
   351bc:	beq	35178 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x38>
   351c0:	ldr	r1, [r0]
   351c4:	ldr	r2, [r0, #4]
   351c8:	add	r1, r1, r2, lsl #2
   351cc:	ldr	r3, [r1, #-4]
   351d0:	ldr	r1, [r3, #4]
   351d4:	sub	r2, r1, #126	; 0x7e
   351d8:	cmp	r2, #6
   351dc:	bls	35188 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x48>
   351e0:	cmp	r1, #65	; 0x41
   351e4:	beq	35190 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x50>
   351e8:	b	3519c <myhtml_tree_clear_stack_back_table_body_context@@Base+0x5c>
   351ec:	pop	{fp, pc}

000351f0 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   351f0:	ldr	r0, [r0, #128]	; 0x80
   351f4:	ldr	r1, [r0, #4]
   351f8:	cmp	r1, #0
   351fc:	bne	35218 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x28>
   35200:	mov	r1, #0
   35204:	ldr	r2, [r1, #4]
   35208:	cmp	r2, #65	; 0x41
   3520c:	cmpne	r2, #135	; 0x87
   35210:	beq	35238 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x48>
   35214:	b	3526c <myhtml_tree_clear_stack_back_table_row_context@@Base+0x7c>
   35218:	ldr	r1, [r0]
   3521c:	ldr	r2, [r0, #4]
   35220:	add	r1, r1, r2, lsl #2
   35224:	ldr	r1, [r1, #-4]
   35228:	ldr	r2, [r1, #4]
   3522c:	cmp	r2, #65	; 0x41
   35230:	cmpne	r2, #135	; 0x87
   35234:	bne	3526c <myhtml_tree_clear_stack_back_table_row_context@@Base+0x7c>
   35238:	ldr	r1, [r1, #8]
   3523c:	cmp	r1, #1
   35240:	bxeq	lr
   35244:	ldr	r1, [r0, #4]
   35248:	cmp	r1, #0
   3524c:	ldrne	r1, [r0, #4]
   35250:	subne	r1, r1, #1
   35254:	strne	r1, [r0, #4]
   35258:	mov	r1, #0
   3525c:	ldr	r2, [r0, #4]
   35260:	cmp	r2, #0
   35264:	bne	35218 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x28>
   35268:	b	35228 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>
   3526c:	cmp	r2, #128	; 0x80
   35270:	beq	35238 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x48>
   35274:	b	35244 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x54>

00035278 <myhtml_tree_close_cell@@Base>:
   35278:	push	{r4, r5, fp, lr}
   3527c:	add	fp, sp, #8
   35280:	mov	r5, r1
   35284:	mov	r1, #0
   35288:	mov	r2, #0
   3528c:	mov	r4, r0
   35290:	bl	115a0 <myhtml_tree_generate_implied_end_tags@plt>
   35294:	ldr	r0, [r4, #128]	; 0x80
   35298:	ldr	r1, [r0, #4]
   3529c:	cmp	r1, #0
   352a0:	ldrne	r1, [r0, #4]
   352a4:	ldmib	r5, {r1, r3}
   352a8:	ldr	r2, [r0]
   352ac:	ldr	r5, [r0, #4]
   352b0:	cmp	r5, #0
   352b4:	beq	35334 <myhtml_tree_close_cell@@Base+0xbc>
   352b8:	cmp	r3, #0
   352bc:	bne	352d0 <myhtml_tree_close_cell@@Base+0x58>
   352c0:	b	35314 <myhtml_tree_close_cell@@Base+0x9c>
   352c4:	ldr	r5, [r0, #4]
   352c8:	cmp	r5, #0
   352cc:	beq	35334 <myhtml_tree_close_cell@@Base+0xbc>
   352d0:	ldr	r5, [r0, #4]
   352d4:	sub	r5, r5, #1
   352d8:	str	r5, [r0, #4]
   352dc:	ldr	r5, [r0, #4]
   352e0:	ldr	r5, [r2, r5, lsl #2]
   352e4:	ldr	r5, [r5, #4]
   352e8:	cmp	r5, r1
   352ec:	bne	352c4 <myhtml_tree_close_cell@@Base+0x4c>
   352f0:	ldr	r5, [r0, #4]
   352f4:	ldr	r5, [r2, r5, lsl #2]
   352f8:	ldr	r5, [r5, #8]
   352fc:	cmp	r5, r3
   35300:	bne	352c4 <myhtml_tree_close_cell@@Base+0x4c>
   35304:	b	35334 <myhtml_tree_close_cell@@Base+0xbc>
   35308:	ldr	r3, [r0, #4]
   3530c:	cmp	r3, #0
   35310:	beq	35334 <myhtml_tree_close_cell@@Base+0xbc>
   35314:	ldr	r3, [r0, #4]
   35318:	sub	r3, r3, #1
   3531c:	str	r3, [r0, #4]
   35320:	ldr	r3, [r0, #4]
   35324:	ldr	r3, [r2, r3, lsl #2]
   35328:	ldr	r3, [r3, #4]
   3532c:	cmp	r3, r1
   35330:	bne	35308 <myhtml_tree_close_cell@@Base+0x90>
   35334:	ldr	r0, [r4, #124]	; 0x7c
   35338:	ldr	r1, [r0]
   3533c:	ldr	r2, [r0, #4]
   35340:	cmp	r2, #0
   35344:	beq	353c8 <myhtml_tree_close_cell@@Base+0x150>
   35348:	movw	r3, #512	; 0x200
   3534c:	mov	ip, #1
   35350:	movt	r3, #2560	; 0xa00
   35354:	ldr	r5, [r0, #4]
   35358:	cmp	r5, #0
   3535c:	ldrne	r5, [r0, #4]
   35360:	subne	r5, r5, #1
   35364:	strne	r5, [r0, #4]
   35368:	ldrne	r5, [r0, #4]
   3536c:	ldrne	r2, [r4]
   35370:	ldrne	r5, [r1, r5, lsl #2]
   35374:	ldrne	r2, [r2, #36]	; 0x24
   35378:	cmpne	r2, r5
   3537c:	beq	353c8 <myhtml_tree_close_cell@@Base+0x150>
   35380:	ldr	r5, [r5, #4]
   35384:	cmp	r5, #82	; 0x52
   35388:	ble	353a8 <myhtml_tree_close_cell@@Base+0x130>
   3538c:	cmp	r5, #126	; 0x7e
   35390:	bgt	353bc <myhtml_tree_close_cell@@Base+0x144>
   35394:	cmp	r5, #83	; 0x53
   35398:	beq	353c8 <myhtml_tree_close_cell@@Base+0x150>
   3539c:	cmp	r5, #94	; 0x5e
   353a0:	bne	35354 <myhtml_tree_close_cell@@Base+0xdc>
   353a4:	b	353c8 <myhtml_tree_close_cell@@Base+0x150>
   353a8:	cmp	r5, #27
   353ac:	bhi	35354 <myhtml_tree_close_cell@@Base+0xdc>
   353b0:	tst	r3, ip, lsl r5
   353b4:	beq	35354 <myhtml_tree_close_cell@@Base+0xdc>
   353b8:	b	353c8 <myhtml_tree_close_cell@@Base+0x150>
   353bc:	cmp	r5, #131	; 0x83
   353c0:	cmpne	r5, #127	; 0x7f
   353c4:	bne	35354 <myhtml_tree_close_cell@@Base+0xdc>
   353c8:	mov	r0, #13
   353cc:	str	r0, [r4, #168]	; 0xa8
   353d0:	pop	{r4, r5, fp, pc}

000353d4 <myhtml_tree_is_mathml_integration_point@@Base>:
   353d4:	ldr	r0, [r1, #8]
   353d8:	cmp	r0, #2
   353dc:	bne	35410 <myhtml_tree_is_mathml_integration_point@@Base+0x3c>
   353e0:	ldr	r1, [r1, #4]
   353e4:	mov	r0, #1
   353e8:	sub	r2, r1, #227	; 0xe3
   353ec:	cmp	r2, #11
   353f0:	bhi	35408 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   353f4:	mov	ip, #1
   353f8:	movw	r3, #2097	; 0x831
   353fc:	tst	r3, ip, lsl r2
   35400:	beq	35408 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   35404:	bx	lr
   35408:	cmp	r1, #88	; 0x58
   3540c:	bxeq	lr
   35410:	mov	r0, #0
   35414:	bx	lr

00035418 <myhtml_tree_is_html_integration_point@@Base>:
   35418:	push	{r4, r5, r6, sl, fp, lr}
   3541c:	add	fp, sp, #16
   35420:	sub	sp, sp, #8
   35424:	mov	r5, r0
   35428:	ldr	r0, [r1, #8]
   3542c:	mov	r4, r1
   35430:	cmp	r0, #2
   35434:	beq	35468 <myhtml_tree_is_html_integration_point@@Base+0x50>
   35438:	cmp	r0, #3
   3543c:	bne	35500 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   35440:	ldr	r0, [r4, #4]
   35444:	mov	r6, #1
   35448:	cmp	r0, #134	; 0x86
   3544c:	cmpne	r0, #156	; 0x9c
   35450:	beq	35504 <myhtml_tree_is_html_integration_point@@Base+0xec>
   35454:	cmp	r0, #189	; 0xbd
   35458:	movne	r6, #0
   3545c:	mov	r0, r6
   35460:	sub	sp, fp, #16
   35464:	pop	{r4, r5, r6, sl, fp, pc}
   35468:	ldr	r0, [r4, #4]
   3546c:	cmp	r0, #8
   35470:	bne	35500 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   35474:	ldr	r1, [r4, #32]
   35478:	cmp	r1, #0
   3547c:	beq	35500 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   35480:	ldr	r0, [r1, #48]	; 0x30
   35484:	tst	r0, #1
   35488:	bne	35500 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   3548c:	ldr	r0, [r5, #8]
   35490:	bl	11558 <myhtml_token_node_wait_for_done@plt>
   35494:	ldr	r1, [r4, #32]
   35498:	ldr	r0, [r5, #8]
   3549c:	ldr	r3, [pc, #108]	; 35510 <myhtml_tree_is_html_integration_point@@Base+0xf8>
   354a0:	mov	r2, #9
   354a4:	str	r2, [sp, #4]
   354a8:	add	r3, pc, r3
   354ac:	str	r3, [sp]
   354b0:	mov	r3, #8
   354b4:	ldr	r2, [pc, #88]	; 35514 <myhtml_tree_is_html_integration_point@@Base+0xfc>
   354b8:	add	r2, pc, r2
   354bc:	bl	10ea4 <myhtml_token_attr_match_case@plt>
   354c0:	mov	r6, #1
   354c4:	cmp	r0, #0
   354c8:	bne	35504 <myhtml_tree_is_html_integration_point@@Base+0xec>
   354cc:	ldr	r1, [r4, #32]
   354d0:	ldr	r0, [r5, #8]
   354d4:	ldr	r3, [pc, #60]	; 35518 <myhtml_tree_is_html_integration_point@@Base+0x100>
   354d8:	mov	r2, #21
   354dc:	str	r2, [sp, #4]
   354e0:	add	r3, pc, r3
   354e4:	str	r3, [sp]
   354e8:	mov	r3, #8
   354ec:	ldr	r2, [pc, #40]	; 3551c <myhtml_tree_is_html_integration_point@@Base+0x104>
   354f0:	add	r2, pc, r2
   354f4:	bl	10ea4 <myhtml_token_attr_match_case@plt>
   354f8:	cmp	r0, #0
   354fc:	bne	35504 <myhtml_tree_is_html_integration_point@@Base+0xec>
   35500:	mov	r6, #0
   35504:	mov	r0, r6
   35508:	sub	sp, fp, #16
   3550c:	pop	{r4, r5, r6, sl, fp, pc}
   35510:	andeq	lr, ip, fp, lsr #30
   35514:	andeq	lr, ip, r2, lsl pc
   35518:	strdeq	lr, [ip], -sp
   3551c:	ldrdeq	lr, [ip], -sl

00035520 <myhtml_tree_temp_tag_name_init@@Base>:
   35520:	push	{r4, sl, fp, lr}
   35524:	add	fp, sp, #8
   35528:	mov	r4, r0
   3552c:	mov	r0, #0
   35530:	mov	r1, #1024	; 0x400
   35534:	stmib	r4, {r0, r1}
   35538:	mov	r0, #1024	; 0x400
   3553c:	bl	119a8 <mycore_malloc@plt>
   35540:	str	r0, [r4]
   35544:	clz	r0, r0
   35548:	lsr	r0, r0, #5
   3554c:	lsl	r0, r0, #1
   35550:	pop	{r4, sl, fp, pc}

00035554 <myhtml_tree_temp_tag_name_clean@@Base>:
   35554:	mov	r1, #0
   35558:	str	r1, [r0, #4]
   3555c:	bx	lr

00035560 <myhtml_tree_temp_tag_name_append_one@@Base>:
   35560:	push	{r4, r5, r6, sl, fp, lr}
   35564:	add	fp, sp, #16
   35568:	mov	r5, r1
   3556c:	ldmib	r0, {r1, r2}
   35570:	mov	r4, r0
   35574:	cmp	r1, r2
   35578:	bcs	35584 <myhtml_tree_temp_tag_name_append_one@@Base+0x24>
   3557c:	ldr	r0, [r4]
   35580:	b	355a8 <myhtml_tree_temp_tag_name_append_one@@Base+0x48>
   35584:	ldr	r0, [r4]
   35588:	lsl	r6, r2, #1
   3558c:	mov	r1, r6
   35590:	bl	10d9c <mycore_realloc@plt>
   35594:	cmp	r0, #0
   35598:	beq	355c0 <myhtml_tree_temp_tag_name_append_one@@Base+0x60>
   3559c:	str	r0, [r4]
   355a0:	str	r6, [r4, #8]
   355a4:	ldr	r1, [r4, #4]
   355a8:	strb	r5, [r0, r1]
   355ac:	ldr	r0, [r4, #4]
   355b0:	add	r0, r0, #1
   355b4:	str	r0, [r4, #4]
   355b8:	mov	r0, #0
   355bc:	pop	{r4, r5, r6, sl, fp, pc}
   355c0:	mov	r0, #2
   355c4:	pop	{r4, r5, r6, sl, fp, pc}

000355c8 <myhtml_tree_temp_tag_name_append@@Base>:
   355c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   355cc:	add	fp, sp, #24
   355d0:	cmp	r2, #0
   355d4:	mov	r4, #0
   355d8:	movne	r6, r0
   355dc:	ldrne	r0, [r0]
   355e0:	cmpne	r0, #0
   355e4:	bne	355f0 <myhtml_tree_temp_tag_name_append@@Base+0x28>
   355e8:	mov	r0, r4
   355ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   355f0:	mov	r5, r2
   355f4:	mov	r7, r1
   355f8:	ldmib	r6, {r1, r2}
   355fc:	add	r3, r1, r5
   35600:	cmp	r3, r2
   35604:	bcc	35628 <myhtml_tree_temp_tag_name_append@@Base+0x60>
   35608:	add	r8, r5, r2, lsl #1
   3560c:	mov	r1, r8
   35610:	bl	10d9c <mycore_realloc@plt>
   35614:	cmp	r0, #0
   35618:	beq	3564c <myhtml_tree_temp_tag_name_append@@Base+0x84>
   3561c:	str	r0, [r6]
   35620:	str	r8, [r6, #8]
   35624:	ldr	r1, [r6, #4]
   35628:	add	r0, r0, r1
   3562c:	mov	r1, r7
   35630:	mov	r2, r5
   35634:	bl	11030 <memcpy@plt>
   35638:	ldr	r0, [r6, #4]
   3563c:	add	r0, r0, r5
   35640:	str	r0, [r6, #4]
   35644:	mov	r0, r4
   35648:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3564c:	mov	r4, #2
   35650:	mov	r0, r4
   35654:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00035658 <myhtml_tree_wait_for_last_done_token@@Base>:
   35658:	push	{r4, r5, fp, lr}
   3565c:	add	fp, sp, #8
   35660:	mov	r5, r0
   35664:	ldr	r0, [r0, #152]	; 0x98
   35668:	cmp	r0, r1
   3566c:	popeq	{r4, r5, fp, pc}
   35670:	mov	r4, r1
   35674:	ldr	r0, [r5]
   35678:	ldr	r0, [r0]
   3567c:	ldr	r0, [r0, #24]
   35680:	bl	11138 <mythread_nanosleep_sleep@plt>
   35684:	ldr	r0, [r5, #152]	; 0x98
   35688:	cmp	r0, r4
   3568c:	bne	35674 <myhtml_tree_wait_for_last_done_token@@Base+0x1c>
   35690:	pop	{r4, r5, fp, pc}

00035694 <myhtml_tree_special_list_init@@Base>:
   35694:	push	{r4, sl, fp, lr}
   35698:	add	fp, sp, #8
   3569c:	mov	r4, r0
   356a0:	mov	r0, #0
   356a4:	mov	r1, #1024	; 0x400
   356a8:	stmib	r4, {r0, r1}
   356ac:	mov	r0, #8192	; 0x2000
   356b0:	bl	119a8 <mycore_malloc@plt>
   356b4:	str	r0, [r4]
   356b8:	clz	r0, r0
   356bc:	lsr	r0, r0, #5
   356c0:	lsl	r0, r0, #1
   356c4:	pop	{r4, sl, fp, pc}

000356c8 <myhtml_tree_special_list_clean@@Base>:
   356c8:	mov	r1, #0
   356cc:	str	r1, [r0, #4]
   356d0:	bx	lr

000356d4 <myhtml_tree_special_list_destroy@@Base>:
   356d4:	push	{r4, r5, r6, sl, fp, lr}
   356d8:	add	fp, sp, #16
   356dc:	mov	r4, #0
   356e0:	cmp	r0, #0
   356e4:	beq	35718 <myhtml_tree_special_list_destroy@@Base+0x44>
   356e8:	mov	r5, r0
   356ec:	ldr	r0, [r0]
   356f0:	mov	r6, r1
   356f4:	cmp	r0, #0
   356f8:	beq	35708 <myhtml_tree_special_list_destroy@@Base+0x34>
   356fc:	bl	11a98 <mycore_free@plt>
   35700:	mov	r0, #0
   35704:	str	r0, [r5]
   35708:	cmp	r6, #0
   3570c:	beq	35720 <myhtml_tree_special_list_destroy@@Base+0x4c>
   35710:	mov	r0, r5
   35714:	bl	11a98 <mycore_free@plt>
   35718:	mov	r0, r4
   3571c:	pop	{r4, r5, r6, sl, fp, pc}
   35720:	mov	r0, r5
   35724:	pop	{r4, r5, r6, sl, fp, pc}

00035728 <myhtml_tree_special_list_append@@Base>:
   35728:	push	{r4, r5, r6, r7, fp, lr}
   3572c:	add	fp, sp, #16
   35730:	mov	r6, r1
   35734:	ldmib	r0, {r1, r7}
   35738:	mov	r5, r2
   3573c:	mov	r4, r0
   35740:	cmp	r1, r7
   35744:	bcs	35750 <myhtml_tree_special_list_append@@Base+0x28>
   35748:	ldr	r0, [r4]
   3574c:	b	35774 <myhtml_tree_special_list_append@@Base+0x4c>
   35750:	ldr	r0, [r4]
   35754:	lsl	r1, r7, #4
   35758:	bl	10d9c <mycore_realloc@plt>
   3575c:	cmp	r0, #0
   35760:	beq	3578c <myhtml_tree_special_list_append@@Base+0x64>
   35764:	lsl	r1, r7, #1
   35768:	str	r0, [r4]
   3576c:	str	r1, [r4, #8]
   35770:	ldr	r1, [r4, #4]
   35774:	str	r6, [r0, r1, lsl #3]!
   35778:	str	r5, [r0, #4]
   3577c:	add	r0, r1, #1
   35780:	str	r0, [r4, #4]
   35784:	mov	r0, #0
   35788:	pop	{r4, r5, r6, r7, fp, pc}
   3578c:	mov	r0, #2
   35790:	pop	{r4, r5, r6, r7, fp, pc}

00035794 <myhtml_tree_special_list_length@@Base>:
   35794:	ldr	r0, [r0, #4]
   35798:	bx	lr

0003579c <myhtml_tree_special_list_pop@@Base>:
   3579c:	mov	r1, r0
   357a0:	ldr	r0, [r0, #4]
   357a4:	cmp	r0, #0
   357a8:	moveq	r0, #0
   357ac:	subne	r0, r0, #1
   357b0:	strne	r0, [r1, #4]
   357b4:	bx	lr

000357b8 <myhtml_tree_special_list_get_last@@Base>:
   357b8:	ldr	r1, [r0, #4]
   357bc:	cmp	r1, #0
   357c0:	moveq	r0, #0
   357c4:	bxeq	lr
   357c8:	ldr	r0, [r0]
   357cc:	add	r0, r0, r1, lsl #3
   357d0:	bx	lr

000357d4 <myhtml_tree_incoming_buffer_first@@Base>:
   357d4:	ldr	r0, [r0, #80]	; 0x50
   357d8:	bx	lr

000357dc <myhtml_tree_incomming_buffer_make_data@@Base>:
   357dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   357e0:	add	fp, sp, #28
   357e4:	sub	sp, sp, #4
   357e8:	mov	r9, r0
   357ec:	ldr	r0, [r0, #80]	; 0x50
   357f0:	mov	r5, r2
   357f4:	mov	r7, r1
   357f8:	bl	11180 <mycore_incoming_buffer_find_by_position@plt>
   357fc:	mov	r6, r0
   35800:	ldr	r0, [r0, #8]
   35804:	ldr	r1, [r6, #12]
   35808:	sub	r4, r7, r1
   3580c:	add	r1, r4, r5
   35810:	cmp	r1, r0
   35814:	bls	35838 <myhtml_tree_incomming_buffer_make_data@@Base+0x5c>
   35818:	ldr	r0, [r9, #208]	; 0xd0
   3581c:	cmp	r0, #0
   35820:	beq	35848 <myhtml_tree_incomming_buffer_make_data@@Base+0x6c>
   35824:	mov	r0, #0
   35828:	str	r0, [r9, #212]	; 0xd4
   3582c:	cmp	r6, #0
   35830:	bne	358a0 <myhtml_tree_incomming_buffer_make_data@@Base+0xc4>
   35834:	b	35960 <myhtml_tree_incomming_buffer_make_data@@Base+0x184>
   35838:	ldr	r0, [r6]
   3583c:	add	r0, r0, r4
   35840:	sub	sp, fp, #28
   35844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35848:	mov	r0, #0
   3584c:	mov	r1, #1024	; 0x400
   35850:	str	r0, [r9, #212]	; 0xd4
   35854:	mov	r0, #1024	; 0x400
   35858:	str	r1, [r9, #216]	; 0xd8
   3585c:	bl	119a8 <mycore_malloc@plt>
   35860:	str	r0, [r9, #208]	; 0xd0
   35864:	cmp	r6, #0
   35868:	bne	358a0 <myhtml_tree_incomming_buffer_make_data@@Base+0xc4>
   3586c:	b	35960 <myhtml_tree_incomming_buffer_make_data@@Base+0x184>
   35870:	add	r0, r0, r2
   35874:	add	r1, sl, r4
   35878:	mov	r2, r7
   3587c:	bl	11030 <memcpy@plt>
   35880:	ldr	r0, [r9, #212]	; 0xd4
   35884:	add	r0, r0, r7
   35888:	str	r0, [r9, #212]	; 0xd4
   3588c:	ldr	r6, [r6, #20]
   35890:	sub	r5, r5, r7
   35894:	mov	r4, #0
   35898:	cmp	r6, #0
   3589c:	beq	35960 <myhtml_tree_incomming_buffer_make_data@@Base+0x184>
   358a0:	ldr	r0, [r6, #8]
   358a4:	add	r1, r4, r5
   358a8:	cmp	r1, r0
   358ac:	bls	358fc <myhtml_tree_incomming_buffer_make_data@@Base+0x120>
   358b0:	subs	r7, r0, r4
   358b4:	ldrne	r0, [r9, #208]	; 0xd0
   358b8:	cmpne	r0, #0
   358bc:	beq	3588c <myhtml_tree_incomming_buffer_make_data@@Base+0xb0>
   358c0:	ldr	r2, [r9, #212]	; 0xd4
   358c4:	ldr	r1, [r9, #216]	; 0xd8
   358c8:	ldr	sl, [r6]
   358cc:	add	r3, r2, r7
   358d0:	cmp	r3, r1
   358d4:	bcc	35870 <myhtml_tree_incomming_buffer_make_data@@Base+0x94>
   358d8:	add	r8, r7, r1, lsl #1
   358dc:	mov	r1, r8
   358e0:	bl	10d9c <mycore_realloc@plt>
   358e4:	cmp	r0, #0
   358e8:	beq	3588c <myhtml_tree_incomming_buffer_make_data@@Base+0xb0>
   358ec:	str	r0, [r9, #208]	; 0xd0
   358f0:	str	r8, [r9, #216]	; 0xd8
   358f4:	ldr	r2, [r9, #212]	; 0xd4
   358f8:	b	35870 <myhtml_tree_incomming_buffer_make_data@@Base+0x94>
   358fc:	cmp	r5, #0
   35900:	ldrne	r0, [r9, #208]	; 0xd0
   35904:	cmpne	r0, #0
   35908:	beq	35960 <myhtml_tree_incomming_buffer_make_data@@Base+0x184>
   3590c:	ldr	r2, [r9, #212]	; 0xd4
   35910:	ldr	r1, [r9, #216]	; 0xd8
   35914:	ldr	r7, [r6]
   35918:	add	r3, r2, r5
   3591c:	cmp	r3, r1
   35920:	bcc	35944 <myhtml_tree_incomming_buffer_make_data@@Base+0x168>
   35924:	add	r6, r5, r1, lsl #1
   35928:	mov	r1, r6
   3592c:	bl	10d9c <mycore_realloc@plt>
   35930:	cmp	r0, #0
   35934:	beq	35960 <myhtml_tree_incomming_buffer_make_data@@Base+0x184>
   35938:	str	r0, [r9, #208]	; 0xd0
   3593c:	str	r6, [r9, #216]	; 0xd8
   35940:	ldr	r2, [r9, #212]	; 0xd4
   35944:	add	r0, r0, r2
   35948:	add	r1, r7, r4
   3594c:	mov	r2, r5
   35950:	bl	11030 <memcpy@plt>
   35954:	ldr	r0, [r9, #212]	; 0xd4
   35958:	add	r0, r0, r5
   3595c:	str	r0, [r9, #212]	; 0xd4
   35960:	ldr	r0, [r9, #208]	; 0xd0
   35964:	sub	sp, fp, #28
   35968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003596c <mycore_fopen@@Base>:
   3596c:	b	10f04 <fopen@plt>

00035970 <mycore_fclose@@Base>:
   35970:	b	117d4 <fclose@plt>

00035974 <mycore_fread@@Base>:
   35974:	b	1133c <fread@plt>

00035978 <mycore_fwrite@@Base>:
   35978:	b	112dc <fwrite@plt>

0003597c <mycore_fflush@@Base>:
   3597c:	b	10f40 <fflush@plt>

00035980 <mycore_fseek@@Base>:
   35980:	b	11b7c <fseek@plt>

00035984 <mycore_ftell@@Base>:
   35984:	b	11120 <ftell@plt>

00035988 <mycore_ferror@@Base>:
   35988:	b	11024 <ferror@plt>

0003598c <mycore_setbuf@@Base>:
   3598c:	b	10e8c <setbuf@plt>

00035990 <mycore_malloc@@Base>:
   35990:	b	11450 <malloc@plt>

00035994 <mycore_realloc@@Base>:
   35994:	b	1121c <realloc@plt>

00035998 <mycore_calloc@@Base>:
   35998:	b	10da8 <calloc@plt>

0003599c <mycore_free@@Base>:
   3599c:	push	{fp, lr}
   359a0:	mov	fp, sp
   359a4:	bl	10fc4 <free@plt>
   359a8:	mov	r0, #0
   359ac:	pop	{fp, pc}

000359b0 <mythread_thread_create@@Base>:
   359b0:	push	{r4, r5, r6, r7, fp, lr}
   359b4:	add	fp, sp, #16
   359b8:	mov	r6, r1
   359bc:	mov	r7, r0
   359c0:	mov	r0, #1
   359c4:	mov	r1, #4
   359c8:	mov	r5, r2
   359cc:	bl	11000 <mycore_calloc@plt>
   359d0:	cmp	r0, #0
   359d4:	beq	359fc <mythread_thread_create@@Base+0x4c>
   359d8:	ldr	r1, [r7, #20]
   359dc:	mov	r2, r6
   359e0:	mov	r3, r5
   359e4:	mov	r4, r0
   359e8:	bl	11348 <pthread_create@plt>
   359ec:	cmp	r0, #0
   359f0:	movne	r4, #0
   359f4:	mov	r0, r4
   359f8:	pop	{r4, r5, r6, r7, fp, pc}
   359fc:	mov	r4, #0
   35a00:	mov	r0, r4
   35a04:	pop	{r4, r5, r6, r7, fp, pc}

00035a08 <mythread_thread_join@@Base>:
   35a08:	push	{fp, lr}
   35a0c:	mov	fp, sp
   35a10:	ldr	r0, [r1]
   35a14:	mov	r1, #0
   35a18:	bl	118dc <pthread_join@plt>
   35a1c:	cmp	r0, #0
   35a20:	movwne	r0, #1
   35a24:	pop	{fp, pc}

00035a28 <mythread_thread_cancel@@Base>:
   35a28:	push	{fp, lr}
   35a2c:	mov	fp, sp
   35a30:	ldr	r0, [r1]
   35a34:	bl	11714 <pthread_cancel@plt>
   35a38:	cmp	r0, #0
   35a3c:	movwne	r0, #1
   35a40:	pop	{fp, pc}

00035a44 <mythread_thread_destroy@@Base>:
   35a44:	push	{fp, lr}
   35a48:	mov	fp, sp
   35a4c:	mov	r0, r1
   35a50:	bl	11a98 <mycore_free@plt>
   35a54:	mov	r0, #0
   35a58:	pop	{fp, pc}

00035a5c <mythread_thread_attr_init@@Base>:
   35a5c:	push	{r4, r5, r6, sl, fp, lr}
   35a60:	add	fp, sp, #16
   35a64:	mov	r6, r0
   35a68:	mov	r0, #1
   35a6c:	mov	r1, #36	; 0x24
   35a70:	bl	11000 <mycore_calloc@plt>
   35a74:	mov	r4, #0
   35a78:	cmp	r0, #0
   35a7c:	beq	35ab8 <mythread_thread_attr_init@@Base+0x5c>
   35a80:	mov	r5, r0
   35a84:	bl	11624 <pthread_attr_init@plt>
   35a88:	cmp	r0, #0
   35a8c:	str	r0, [r6, #28]
   35a90:	bne	35ab0 <mythread_thread_attr_init@@Base+0x54>
   35a94:	mov	r0, r5
   35a98:	mov	r1, #0
   35a9c:	mov	r4, #0
   35aa0:	bl	11ba0 <pthread_attr_setdetachstate@plt>
   35aa4:	cmp	r0, #0
   35aa8:	str	r0, [r6, #28]
   35aac:	beq	35ac0 <mythread_thread_attr_init@@Base+0x64>
   35ab0:	mov	r0, r5
   35ab4:	bl	11a98 <mycore_free@plt>
   35ab8:	mov	r0, r4
   35abc:	pop	{r4, r5, r6, sl, fp, pc}
   35ac0:	mov	r0, r5
   35ac4:	pop	{r4, r5, r6, sl, fp, pc}

00035ac8 <mythread_thread_attr_clean@@Base>:
   35ac8:	bx	lr

00035acc <mythread_thread_attr_destroy@@Base>:
   35acc:	cmp	r1, #0
   35ad0:	bxeq	lr
   35ad4:	push	{r4, r5, fp, lr}
   35ad8:	add	fp, sp, #8
   35adc:	mov	r5, r0
   35ae0:	mov	r0, r1
   35ae4:	mov	r4, r1
   35ae8:	bl	10f1c <pthread_attr_destroy@plt>
   35aec:	str	r0, [r5, #28]
   35af0:	mov	r0, r4
   35af4:	pop	{r4, r5, fp, lr}
   35af8:	b	11a98 <mycore_free@plt>

00035afc <mythread_mutex_create@@Base>:
   35afc:	push	{r4, r5, fp, lr}
   35b00:	add	fp, sp, #8
   35b04:	bl	116e4 <mcsync_mutex_create@plt>
   35b08:	mov	r4, #0
   35b0c:	cmp	r0, #0
   35b10:	beq	35b2c <mythread_mutex_create@@Base+0x30>
   35b14:	mov	r5, r0
   35b18:	bl	118c4 <mcsync_mutex_init@plt>
   35b1c:	cmp	r0, #0
   35b20:	beq	35b34 <mythread_mutex_create@@Base+0x38>
   35b24:	mov	r0, r5
   35b28:	bl	11a98 <mycore_free@plt>
   35b2c:	mov	r0, r4
   35b30:	pop	{r4, r5, fp, pc}
   35b34:	mov	r0, r5
   35b38:	pop	{r4, r5, fp, pc}

00035b3c <mythread_mutex_post@@Base>:
   35b3c:	mov	r0, r1
   35b40:	b	10fe8 <mcsync_mutex_unlock@plt>

00035b44 <mythread_mutex_wait@@Base>:
   35b44:	mov	r0, r1
   35b48:	b	11c60 <mcsync_mutex_lock@plt>

00035b4c <mythread_mutex_try_wait@@Base>:
   35b4c:	mov	r0, r1
   35b50:	b	11bf4 <mcsync_mutex_try_lock@plt>

00035b54 <mythread_mutex_close@@Base>:
   35b54:	mov	r0, r1
   35b58:	b	10ed4 <mcsync_mutex_destroy@plt>

00035b5c <mythread_nanosleep_create@@Base>:
   35b5c:	mov	r0, #1
   35b60:	mov	r1, #8
   35b64:	b	11000 <mycore_calloc@plt>

00035b68 <mythread_nanosleep_clean@@Base>:
   35b68:	mov	r1, #0
   35b6c:	str	r1, [r0, #4]
   35b70:	str	r1, [r0]
   35b74:	bx	lr

00035b78 <mythread_nanosleep_destroy@@Base>:
   35b78:	b	11a98 <mycore_free@plt>

00035b7c <mythread_nanosleep_sleep@@Base>:
   35b7c:	push	{fp, lr}
   35b80:	mov	fp, sp
   35b84:	mov	r1, #0
   35b88:	bl	1100c <nanosleep@plt>
   35b8c:	cmp	r0, #0
   35b90:	movwne	r0, #1
   35b94:	pop	{fp, pc}

00035b98 <mcsync_spin_create@@Base>:
   35b98:	mov	r0, #1
   35b9c:	mov	r1, #4
   35ba0:	b	11000 <mycore_calloc@plt>

00035ba4 <mcsync_spin_init@@Base>:
   35ba4:	mov	r0, #0
   35ba8:	bx	lr

00035bac <mcsync_spin_clean@@Base>:
   35bac:	mov	r1, #0
   35bb0:	str	r1, [r0]
   35bb4:	bx	lr

00035bb8 <mcsync_spin_destroy@@Base>:
   35bb8:	b	11a98 <mycore_free@plt>

00035bbc <mcsync_spin_lock@@Base>:
   35bbc:	mov	r2, #0
   35bc0:	mov	r1, #1
   35bc4:	ldaex	r3, [r0]
   35bc8:	cmp	r3, r2
   35bcc:	beq	35be4 <mcsync_spin_lock@@Base+0x28>
   35bd0:	clrex
   35bd4:	mov	r2, r3
   35bd8:	ldaex	r3, [r0]
   35bdc:	cmp	r3, r2
   35be0:	bne	35bd0 <mcsync_spin_lock@@Base+0x14>
   35be4:	stlex	r3, r1, [r0]
   35be8:	cmp	r3, #0
   35bec:	moveq	r0, #0
   35bf0:	bxeq	lr
   35bf4:	ldaex	r3, [r0]
   35bf8:	cmp	r3, r2
   35bfc:	beq	35be4 <mcsync_spin_lock@@Base+0x28>
   35c00:	b	35bd0 <mcsync_spin_lock@@Base+0x14>

00035c04 <mcsync_spin_unlock@@Base>:
   35c04:	mov	r1, #0
   35c08:	stl	r1, [r0]
   35c0c:	mov	r0, #0
   35c10:	bx	lr

00035c14 <mcsync_mutex_create@@Base>:
   35c14:	mov	r0, #1
   35c18:	mov	r1, #24
   35c1c:	b	11000 <mycore_calloc@plt>

00035c20 <mcsync_mutex_init@@Base>:
   35c20:	push	{fp, lr}
   35c24:	mov	fp, sp
   35c28:	mov	r1, #0
   35c2c:	bl	11090 <pthread_mutex_init@plt>
   35c30:	cmp	r0, #0
   35c34:	movwne	r0, #1
   35c38:	pop	{fp, pc}

00035c3c <mcsync_mutex_clean@@Base>:
   35c3c:	bx	lr

00035c40 <mcsync_mutex_destroy@@Base>:
   35c40:	push	{r4, sl, fp, lr}
   35c44:	add	fp, sp, #8
   35c48:	mov	r4, r0
   35c4c:	bl	10f34 <pthread_mutex_destroy@plt>
   35c50:	mov	r0, r4
   35c54:	pop	{r4, sl, fp, lr}
   35c58:	b	11a98 <mycore_free@plt>

00035c5c <mcsync_mutex_lock@@Base>:
   35c5c:	push	{fp, lr}
   35c60:	mov	fp, sp
   35c64:	bl	10ff4 <pthread_mutex_lock@plt>
   35c68:	cmp	r0, #0
   35c6c:	movwne	r0, #1
   35c70:	pop	{fp, pc}

00035c74 <mcsync_mutex_try_lock@@Base>:
   35c74:	push	{fp, lr}
   35c78:	mov	fp, sp
   35c7c:	bl	110f0 <pthread_mutex_trylock@plt>
   35c80:	cmp	r0, #0
   35c84:	movwne	r0, #1
   35c88:	pop	{fp, pc}

00035c8c <mcsync_mutex_unlock@@Base>:
   35c8c:	push	{fp, lr}
   35c90:	mov	fp, sp
   35c94:	bl	10d90 <pthread_mutex_unlock@plt>
   35c98:	cmp	r0, #0
   35c9c:	movwne	r0, #1
   35ca0:	pop	{fp, pc}

Disassembly of section .fini:

00035ca4 <.fini>:
   35ca4:	push	{r3, lr}
   35ca8:	pop	{r3, pc}
