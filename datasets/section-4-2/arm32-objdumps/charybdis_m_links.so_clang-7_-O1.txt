
../repos/charybdis/modules/.libs/m_links.so:     file format elf32-littlearm


Disassembly of section .init:

000005f8 <_init>:
 5f8:	push	{r3, lr}
 5fc:	bl	684 <call_weak_fn>
 600:	pop	{r3, pc}

Disassembly of section .plt:

00000604 <.plt>:
 604:	push	{lr}		; (str lr, [sp, #-4]!)
 608:	ldr	lr, [pc, #4]	; 614 <.plt+0x10>
 60c:	add	lr, pc, lr
 610:	ldr	pc, [lr, #8]!
 614:	.word	0x000109ec

00000618 <__cxa_finalize@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2540]!	; 0x9ec

00000624 <scache_send_flattened_links@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2532]!	; 0x9e4

00000630 <hunt_server@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2524]!	; 0x9dc

0000063c <__gmon_start__@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2516]!	; 0x9d4

00000648 <sendto_one_numeric@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2508]!	; 0x9cc

00000654 <strlen@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2500]!	; 0x9c4

00000660 <collapse@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2492]!	; 0x9bc

0000066c <match@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #16, 20	; 0x10000
 674:	ldr	pc, [ip, #2484]!	; 0x9b4

00000678 <call_hook@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #16, 20	; 0x10000
 680:	ldr	pc, [ip, #2476]!	; 0x9ac

Disassembly of section .text:

00000684 <call_weak_fn>:
 684:	ldr	r3, [pc, #20]	; 6a0 <call_weak_fn+0x1c>
 688:	ldr	r2, [pc, #20]	; 6a4 <call_weak_fn+0x20>
 68c:	add	r3, pc, r3
 690:	ldr	r2, [r3, r2]
 694:	cmp	r2, #0
 698:	bxeq	lr
 69c:	b	63c <__gmon_start__@plt>
 6a0:	.word	0x0001096c
 6a4:	.word	0x00000040

000006a8 <deregister_tm_clones>:
 6a8:	ldr	r0, [pc, #44]	; 6dc <deregister_tm_clones+0x34>
 6ac:	ldr	r3, [pc, #44]	; 6e0 <deregister_tm_clones+0x38>
 6b0:	add	r0, pc, r0
 6b4:	add	r3, pc, r3
 6b8:	cmp	r3, r0
 6bc:	ldr	r3, [pc, #32]	; 6e4 <deregister_tm_clones+0x3c>
 6c0:	add	r3, pc, r3
 6c4:	bxeq	lr
 6c8:	ldr	r2, [pc, #24]	; 6e8 <deregister_tm_clones+0x40>
 6cc:	ldr	r3, [r3, r2]
 6d0:	cmp	r3, #0
 6d4:	bxeq	lr
 6d8:	bx	r3
 6dc:	.word	0x00010a20
 6e0:	.word	0x00010a1c
 6e4:	.word	0x00010938
 6e8:	.word	0x00000038

000006ec <register_tm_clones>:
 6ec:	ldr	r0, [pc, #56]	; 72c <register_tm_clones+0x40>
 6f0:	ldr	r3, [pc, #56]	; 730 <register_tm_clones+0x44>
 6f4:	add	r0, pc, r0
 6f8:	add	r3, pc, r3
 6fc:	sub	r1, r3, r0
 700:	ldr	r3, [pc, #44]	; 734 <register_tm_clones+0x48>
 704:	asr	r1, r1, #2
 708:	add	r3, pc, r3
 70c:	add	r1, r1, r1, lsr #31
 710:	asrs	r1, r1, #1
 714:	bxeq	lr
 718:	ldr	r2, [pc, #24]	; 738 <register_tm_clones+0x4c>
 71c:	ldr	r3, [r3, r2]
 720:	cmp	r3, #0
 724:	bxeq	lr
 728:	bx	r3
 72c:	.word	0x000109dc
 730:	.word	0x000109d8
 734:	.word	0x000108f0
 738:	.word	0x0000004c

0000073c <__do_global_dtors_aux>:
 73c:	ldr	r3, [pc, #76]	; 790 <__do_global_dtors_aux+0x54>
 740:	ldr	r2, [pc, #76]	; 794 <__do_global_dtors_aux+0x58>
 744:	add	r3, pc, r3
 748:	add	r2, pc, r2
 74c:	ldrb	r3, [r3]
 750:	cmp	r3, #0
 754:	bxne	lr
 758:	ldr	r3, [pc, #56]	; 798 <__do_global_dtors_aux+0x5c>
 75c:	push	{r4, lr}
 760:	ldr	r3, [r2, r3]
 764:	cmp	r3, #0
 768:	beq	778 <__do_global_dtors_aux+0x3c>
 76c:	ldr	r3, [pc, #40]	; 79c <__do_global_dtors_aux+0x60>
 770:	ldr	r0, [pc, r3]
 774:	bl	618 <__cxa_finalize@plt>
 778:	bl	6a8 <deregister_tm_clones>
 77c:	ldr	r3, [pc, #28]	; 7a0 <__do_global_dtors_aux+0x64>
 780:	mov	r2, #1
 784:	add	r3, pc, r3
 788:	strb	r2, [r3]
 78c:	pop	{r4, pc}
 790:	.word	0x0001098c
 794:	.word	0x000108b0
 798:	.word	0x00000034
 79c:	.word	0x000108d8
 7a0:	.word	0x0001094c

000007a4 <frame_dummy>:
 7a4:	b	6ec <register_tm_clones>

000007a8 <m_links>:
 7a8:	ldr	ip, [pc, #36]	; 7d4 <m_links+0x2c>
 7ac:	ldr	ip, [pc, ip]
 7b0:	ldr	ip, [ip]
 7b4:	cmp	ip, #0
 7b8:	beq	7d0 <m_links+0x28>
 7bc:	ldrb	ip, [r2, #67]	; 0x43
 7c0:	tst	ip, #4
 7c4:	bne	7d0 <m_links+0x28>
 7c8:	mov	r0, r2
 7cc:	b	624 <scache_send_flattened_links@plt>
 7d0:	b	7d8 <mo_links>
 7d4:	.word	0x00010888

000007d8 <mo_links>:
 7d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7dc:	add	fp, sp, #28
 7e0:	sub	sp, sp, #156	; 0x9c
 7e4:	mov	r6, r3
 7e8:	mov	r8, r2
 7ec:	ldr	r7, [fp, #8]
 7f0:	cmp	r3, #3
 7f4:	blt	83c <mo_links+0x64>
 7f8:	mov	r5, r1
 7fc:	mov	r4, r7
 800:	ldr	r0, [r4, #8]!
 804:	bl	654 <strlen@plt>
 808:	cmp	r0, #63	; 0x3f
 80c:	bhi	834 <mo_links+0x5c>
 810:	stm	sp, {r6, r7}
 814:	ldr	r2, [pc, #344]	; 974 <mo_links+0x19c>
 818:	add	r2, pc, r2
 81c:	mov	r0, r5
 820:	mov	r1, r8
 824:	mov	r3, #1
 828:	bl	630 <hunt_server@plt>
 82c:	cmp	r0, #0
 830:	beq	848 <mo_links+0x70>
 834:	sub	sp, fp, #28
 838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 83c:	cmp	r6, #2
 840:	bne	850 <mo_links+0x78>
 844:	add	r4, r7, #4
 848:	ldr	r5, [r4]
 84c:	b	858 <mo_links+0x80>
 850:	ldr	r5, [pc, #288]	; 978 <mo_links+0x1a0>
 854:	add	r5, pc, r5
 858:	ldrb	r0, [r5]
 85c:	cmp	r0, #0
 860:	beq	878 <mo_links+0xa0>
 864:	add	r0, sp, #26
 868:	mov	r1, r5
 86c:	bl	998 <clean_string>
 870:	bl	660 <collapse@plt>
 874:	mov	r5, r0
 878:	str	r5, [sp, #16]
 87c:	str	r8, [sp, #12]
 880:	mov	r0, #0
 884:	str	r0, [sp, #20]
 888:	ldr	r0, [pc, #236]	; 97c <mo_links+0x1a4>
 88c:	ldr	r0, [pc, r0]
 890:	ldr	r0, [r0]
 894:	add	r1, sp, #12
 898:	bl	678 <call_hook@plt>
 89c:	ldr	r0, [pc, #220]	; 980 <mo_links+0x1a8>
 8a0:	ldr	r0, [pc, r0]
 8a4:	ldr	r7, [r0]
 8a8:	cmp	r7, #0
 8ac:	beq	930 <mo_links+0x158>
 8b0:	ldr	r9, [pc, #204]	; 984 <mo_links+0x1ac>
 8b4:	add	r9, pc, r9
 8b8:	movw	sl, #257	; 0x101
 8bc:	ldr	r6, [pc, #196]	; 988 <mo_links+0x1b0>
 8c0:	add	r6, pc, r6
 8c4:	ldr	r4, [r7]
 8c8:	ldrb	r0, [r5]
 8cc:	cmp	r0, #0
 8d0:	beq	8e8 <mo_links+0x110>
 8d4:	add	r1, r4, #88	; 0x58
 8d8:	mov	r0, r5
 8dc:	bl	66c <match@plt>
 8e0:	cmp	r0, #0
 8e4:	beq	920 <mo_links+0x148>
 8e8:	ldrb	r0, [r4, #345]!	; 0x159
 8ec:	cmp	r0, #0
 8f0:	mov	r0, r4
 8f4:	moveq	r0, r9
 8f8:	ldr	r1, [r4, #-313]	; 0xfffffec7
 8fc:	ldr	r2, [r4, #-269]	; 0xfffffef3
 900:	add	r1, r1, #88	; 0x58
 904:	stm	sp, {r1, r2}
 908:	str	r0, [sp, #8]
 90c:	sub	r3, r4, sl
 910:	mov	r0, r8
 914:	mov	r1, #364	; 0x16c
 918:	mov	r2, r6
 91c:	bl	648 <sendto_one_numeric@plt>
 920:	ldr	r7, [r7, #8]
 924:	cmp	r7, #0
 928:	bne	8c4 <mo_links+0xec>
 92c:	b	938 <mo_links+0x160>
 930:	cmp	r5, #0
 934:	beq	968 <mo_links+0x190>
 938:	ldrb	r0, [r5]
 93c:	ldr	r3, [pc, #72]	; 98c <mo_links+0x1b4>
 940:	add	r3, pc, r3
 944:	cmp	r0, #0
 948:	movne	r3, r5
 94c:	ldr	r2, [pc, #64]	; 994 <mo_links+0x1bc>
 950:	add	r2, pc, r2
 954:	mov	r0, r8
 958:	movw	r1, #365	; 0x16d
 95c:	bl	648 <sendto_one_numeric@plt>
 960:	sub	sp, fp, #28
 964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 968:	ldr	r3, [pc, #32]	; 990 <mo_links+0x1b8>
 96c:	add	r3, pc, r3
 970:	b	94c <mo_links+0x174>
 974:	.word	0x0000027e
 978:	.word	0x00000272
 97c:	.word	0x000107b4
 980:	.word	0x00010788
 984:	.word	0x00000200
 988:	.word	0x000001e7
 98c:	.word	0x0000019f
 990:	.word	0x00000173
 994:	.word	0x00000177

00000998 <clean_string>:
 998:	mov	r2, #0
 99c:	cmp	r0, #0
 9a0:	cmpne	r1, #0
 9a4:	bne	9b0 <clean_string+0x18>
 9a8:	mov	r0, r2
 9ac:	bx	lr
 9b0:	push	{r4, r5, r6, r7, fp, lr}
 9b4:	add	fp, sp, #16
 9b8:	ldrb	r5, [r1]
 9bc:	cmp	r5, #0
 9c0:	mov	r6, r0
 9c4:	beq	a68 <clean_string+0xd0>
 9c8:	add	r1, r1, #1
 9cc:	mov	r2, #126	; 0x7e
 9d0:	ldr	lr, [pc, #168]	; a80 <clean_string+0xe8>
 9d4:	ldr	lr, [pc, lr]
 9d8:	mov	ip, #94	; 0x5e
 9dc:	mov	r3, #46	; 0x2e
 9e0:	mov	r4, r0
 9e4:	tst	r5, #128	; 0x80
 9e8:	bne	a24 <clean_string+0x8c>
 9ec:	uxtb	r6, r5
 9f0:	ldrb	r7, [lr, r6, lsl #2]
 9f4:	add	r6, r4, #1
 9f8:	tst	r7, #1
 9fc:	bne	a3c <clean_string+0xa4>
 a00:	strb	ip, [r4]
 a04:	sub	r2, r2, #1
 a08:	cmp	r2, #2
 a0c:	bcc	a68 <clean_string+0xd0>
 a10:	ldrb	r5, [r1, #-1]
 a14:	add	r5, r5, #64	; 0x40
 a18:	strb	r5, [r4, #1]
 a1c:	add	r4, r4, #2
 a20:	b	a44 <clean_string+0xac>
 a24:	strb	r3, [r4], #1
 a28:	sub	r2, r2, #1
 a2c:	cmp	r2, #2
 a30:	mov	r6, r4
 a34:	bcs	a44 <clean_string+0xac>
 a38:	b	a68 <clean_string+0xd0>
 a3c:	strb	r5, [r4]
 a40:	mov	r4, r6
 a44:	sub	r2, r2, #1
 a48:	cmp	r2, #2
 a4c:	bcc	a64 <clean_string+0xcc>
 a50:	ldrb	r5, [r1], #1
 a54:	cmp	r5, #0
 a58:	mov	r6, r4
 a5c:	bne	9e4 <clean_string+0x4c>
 a60:	b	a68 <clean_string+0xd0>
 a64:	mov	r6, r4
 a68:	mov	r1, #0
 a6c:	strb	r1, [r6]
 a70:	mov	r2, r0
 a74:	pop	{r4, r5, r6, r7, fp, lr}
 a78:	mov	r0, r2
 a7c:	bx	lr
 a80:	.word	0x00010668

Disassembly of section .fini:

00000a84 <_fini>:
 a84:	push	{r3, lr}
 a88:	pop	{r3, pc}
