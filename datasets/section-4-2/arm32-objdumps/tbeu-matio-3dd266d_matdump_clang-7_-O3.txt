
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e90 <.init>:
   10e90:	push	{r3, lr}
   10e94:	bl	1115c <Mat_VarReadNextInfo@plt+0x54>
   10e98:	pop	{r3, pc}

Disassembly of section .plt:

00010e9c <Mat_VarGetNumberOfFields@plt-0x14>:
   10e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea0:	ldr	lr, [pc, #4]	; 10eac <Mat_VarGetNumberOfFields@plt-0x4>
   10ea4:	add	lr, pc, lr
   10ea8:	ldr	pc, [lr, #8]!
   10eac:	andeq	r4, r1, r4, asr r1

00010eb0 <Mat_VarGetNumberOfFields@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #340]!	; 0x154

00010ebc <Mat_SetVerbose@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #332]!	; 0x14c

00010ec8 <Mat_LogClose@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #324]!	; 0x144

00010ed4 <Mat_VarReadNext@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #316]!	; 0x13c

00010ee0 <strcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #308]!	; 0x134

00010eec <Mat_Open@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #300]!	; 0x12c

00010ef8 <strtol@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #292]!	; 0x124

00010f04 <printf@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #284]!	; 0x11c

00010f10 <Mat_VarGetCells@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #276]!	; 0x114

00010f1c <Mat_VarGetCell@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #268]!	; 0x10c

00010f28 <Mat_VarCreate@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #260]!	; 0x104

00010f34 <free@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #252]!	; 0xfc

00010f40 <Mat_Warning@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #244]!	; 0xf4

00010f4c <Mat_VarReadDataLinear@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #236]!	; 0xec

00010f58 <Mat_Message@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #228]!	; 0xe4

00010f64 <Mat_VarReadData@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #220]!	; 0xdc

00010f70 <Mat_VarReadDataAll@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #212]!	; 0xd4

00010f7c <Mat_VarReadInfo@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #204]!	; 0xcc

00010f88 <fwrite@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #196]!	; 0xc4

00010f94 <Mat_VarGetStructFieldnames@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #188]!	; 0xbc

00010fa0 <getenv@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #180]!	; 0xb4

00010fac <puts@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #172]!	; 0xac

00010fb8 <malloc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #164]!	; 0xa4

00010fc4 <log10@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #156]!	; 0x9c

00010fd0 <__libc_start_main@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #148]!	; 0x94

00010fdc <__gmon_start__@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #140]!	; 0x8c

00010fe8 <exit@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #132]!	; 0x84

00010ff4 <Mat_VarFree@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #124]!	; 0x7c

00011000 <Mat_SizeOf@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #116]!	; 0x74

0001100c <strlen@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #108]!	; 0x6c

00011018 <strchr@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #20, 20	; 0x14000
   11020:	ldr	pc, [ip, #100]!	; 0x64

00011024 <warnx@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #20, 20	; 0x14000
   1102c:	ldr	pc, [ip, #92]!	; 0x5c

00011030 <fprintf@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #20, 20	; 0x14000
   11038:	ldr	pc, [ip, #84]!	; 0x54

0001103c <Mat_GetLibraryVersion@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #20, 20	; 0x14000
   11044:	ldr	pc, [ip, #76]!	; 0x4c

00011048 <Mat_VarPrint@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #20, 20	; 0x14000
   11050:	ldr	pc, [ip, #68]!	; 0x44

00011054 <memset@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #20, 20	; 0x14000
   1105c:	ldr	pc, [ip, #60]!	; 0x3c

00011060 <putchar@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #20, 20	; 0x14000
   11068:	ldr	pc, [ip, #52]!	; 0x34

0001106c <Mat_Close@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #20, 20	; 0x14000
   11074:	ldr	pc, [ip, #44]!	; 0x2c

00011078 <Mat_Critical@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #20, 20	; 0x14000
   11080:	ldr	pc, [ip, #36]!	; 0x24

00011084 <Mat_LogInitFunc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #20, 20	; 0x14000
   1108c:	ldr	pc, [ip, #28]!

00011090 <Mat_VerbMessage@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #20, 20	; 0x14000
   11098:	ldr	pc, [ip, #20]!

0001109c <Mat_VarGetCellsLinear@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #20, 20	; 0x14000
   110a4:	ldr	pc, [ip, #12]!

000110a8 <sprintf@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #20, 20	; 0x14000
   110b0:	ldr	pc, [ip, #4]!

000110b4 <Mat_Help@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #77824	; 0x13000
   110bc:	ldr	pc, [ip, #4092]!	; 0xffc

000110c0 <Mat_VarGetStructFieldByName@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #77824	; 0x13000
   110c8:	ldr	pc, [ip, #4084]!	; 0xff4

000110cc <Mat_SizeOfClass@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #77824	; 0x13000
   110d4:	ldr	pc, [ip, #4076]!	; 0xfec

000110d8 <Mat_VarGetSize@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #77824	; 0x13000
   110e0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110e4 <strncmp@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #77824	; 0x13000
   110ec:	ldr	pc, [ip, #4060]!	; 0xfdc

000110f0 <abort@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #77824	; 0x13000
   110f8:	ldr	pc, [ip, #4052]!	; 0xfd4

000110fc <Mat_VarDuplicate@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #77824	; 0x13000
   11104:	ldr	pc, [ip, #4044]!	; 0xfcc

00011108 <Mat_VarReadNextInfo@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #77824	; 0x13000
   11110:	ldr	pc, [ip, #4036]!	; 0xfc4

Disassembly of section .text:

00011120 <getopt@@Base-0x2180>:
   11120:	mov	fp, #0
   11124:	mov	lr, #0
   11128:	pop	{r1}		; (ldr r1, [sp], #4)
   1112c:	mov	r2, sp
   11130:	push	{r2}		; (str r2, [sp, #-4]!)
   11134:	push	{r0}		; (str r0, [sp, #-4]!)
   11138:	ldr	ip, [pc, #16]	; 11150 <Mat_VarReadNextInfo@plt+0x48>
   1113c:	push	{ip}		; (str ip, [sp, #-4]!)
   11140:	ldr	r0, [pc, #12]	; 11154 <Mat_VarReadNextInfo@plt+0x4c>
   11144:	ldr	r3, [pc, #12]	; 11158 <Mat_VarReadNextInfo@plt+0x50>
   11148:	bl	10fd0 <__libc_start_main@plt>
   1114c:	bl	110f0 <abort@plt>
   11150:	muleq	r1, r8, r1
   11154:	andeq	r1, r1, r0, lsl r2
   11158:	andeq	r4, r1, r8, lsr r1
   1115c:	ldr	r3, [pc, #20]	; 11178 <Mat_VarReadNextInfo@plt+0x70>
   11160:	ldr	r2, [pc, #20]	; 1117c <Mat_VarReadNextInfo@plt+0x74>
   11164:	add	r3, pc, r3
   11168:	ldr	r2, [r3, r2]
   1116c:	cmp	r2, #0
   11170:	bxeq	lr
   11174:	b	10fdc <__gmon_start__@plt>
   11178:	muleq	r1, r4, lr
   1117c:	andeq	r0, r0, r0, ror #1
   11180:	ldr	r0, [pc, #24]	; 111a0 <Mat_VarReadNextInfo@plt+0x98>
   11184:	ldr	r3, [pc, #24]	; 111a4 <Mat_VarReadNextInfo@plt+0x9c>
   11188:	cmp	r3, r0
   1118c:	bxeq	lr
   11190:	ldr	r3, [pc, #16]	; 111a8 <Mat_VarReadNextInfo@plt+0xa0>
   11194:	cmp	r3, #0
   11198:	bxeq	lr
   1119c:	bx	r3
   111a0:	andeq	r5, r2, ip, asr #3
   111a4:	andeq	r5, r2, ip, asr #3
   111a8:	andeq	r0, r0, r0
   111ac:	ldr	r0, [pc, #36]	; 111d8 <Mat_VarReadNextInfo@plt+0xd0>
   111b0:	ldr	r1, [pc, #36]	; 111dc <Mat_VarReadNextInfo@plt+0xd4>
   111b4:	sub	r1, r1, r0
   111b8:	asr	r1, r1, #2
   111bc:	add	r1, r1, r1, lsr #31
   111c0:	asrs	r1, r1, #1
   111c4:	bxeq	lr
   111c8:	ldr	r3, [pc, #16]	; 111e0 <Mat_VarReadNextInfo@plt+0xd8>
   111cc:	cmp	r3, #0
   111d0:	bxeq	lr
   111d4:	bx	r3
   111d8:	andeq	r5, r2, ip, asr #3
   111dc:	andeq	r5, r2, ip, asr #3
   111e0:	andeq	r0, r0, r0
   111e4:	push	{r4, lr}
   111e8:	ldr	r4, [pc, #24]	; 11208 <Mat_VarReadNextInfo@plt+0x100>
   111ec:	ldrb	r3, [r4]
   111f0:	cmp	r3, #0
   111f4:	popne	{r4, pc}
   111f8:	bl	11180 <Mat_VarReadNextInfo@plt+0x78>
   111fc:	mov	r3, #1
   11200:	strb	r3, [r4]
   11204:	pop	{r4, pc}
   11208:	ldrdeq	r5, [r2], -r4
   1120c:	b	111ac <Mat_VarReadNextInfo@plt+0xa4>
   11210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11214:	add	fp, sp, #28
   11218:	sub	sp, sp, #4
   1121c:	vpush	{d8-d10}
   11220:	sub	sp, sp, #72	; 0x48
   11224:	str	r0, [sp, #44]	; 0x2c
   11228:	add	r0, sp, #60	; 0x3c
   1122c:	mov	r4, r1
   11230:	add	r1, r0, #4
   11234:	add	r2, r0, #8
   11238:	bl	1103c <Mat_GetLibraryVersion@plt>
   1123c:	ldr	r0, [sp, #60]	; 0x3c
   11240:	cmp	r0, #1
   11244:	ldreq	r0, [sp, #64]	; 0x40
   11248:	cmpeq	r0, #5
   1124c:	beq	11278 <Mat_VarReadNextInfo@plt+0x170>
   11250:	movw	r0, #20944	; 0x51d0
   11254:	mov	r1, #55	; 0x37
   11258:	mov	r2, #1
   1125c:	mov	r4, #1
   11260:	movt	r0, #2
   11264:	ldr	r3, [r0]
   11268:	movw	r0, #16816	; 0x41b0
   1126c:	movt	r0, #1
   11270:	bl	10f88 <fwrite@plt>
   11274:	b	12058 <Mat_VarReadNextInfo@plt+0xf50>
   11278:	ldr	r0, [sp, #68]	; 0x44
   1127c:	cmp	r0, #15
   11280:	bne	11250 <Mat_VarReadNextInfo@plt+0x148>
   11284:	movw	r0, #16808	; 0x41a8
   11288:	movw	r1, #8384	; 0x20c0
   1128c:	str	r4, [sp, #40]	; 0x28
   11290:	movt	r0, #1
   11294:	movt	r1, #1
   11298:	bl	11084 <Mat_LogInitFunc@plt>
   1129c:	movw	r8, #20952	; 0x51d8
   112a0:	movw	r0, #8464	; 0x2110
   112a4:	movw	r4, #17344	; 0x43c0
   112a8:	movw	r5, #20728	; 0x50f8
   112ac:	movw	r6, #17076	; 0x42b4
   112b0:	movw	r7, #16872	; 0x41e8
   112b4:	mov	sl, #0
   112b8:	mov	r9, #1
   112bc:	movt	r8, #2
   112c0:	movt	r0, #1
   112c4:	movt	r4, #1
   112c8:	movt	r5, #2
   112cc:	movt	r6, #1
   112d0:	movt	r7, #1
   112d4:	str	r0, [r8, #12]
   112d8:	b	112e4 <Mat_VarReadNextInfo@plt+0x1dc>
   112dc:	mov	r0, r6
   112e0:	bl	10f04 <printf@plt>
   112e4:	ldr	r0, [sp, #44]	; 0x2c
   112e8:	ldr	r1, [sp, #40]	; 0x28
   112ec:	mov	r2, r4
   112f0:	mov	r3, r5
   112f4:	str	sl, [sp]
   112f8:	bl	13bcc <getopt_long@@Base>
   112fc:	mov	r1, r0
   11300:	sub	r0, r0, #72	; 0x48
   11304:	cmp	r0, #46	; 0x2e
   11308:	bhi	113e4 <Mat_VarReadNextInfo@plt+0x2dc>
   1130c:	add	r2, pc, #0
   11310:	ldr	pc, [r2, r0, lsl #2]
   11314:	andeq	r2, r1, ip, rrx
   11318:	ldrdeq	r1, [r1], -ip
   1131c:	ldrdeq	r1, [r1], -ip
   11320:	ldrdeq	r1, [r1], -ip
   11324:	ldrdeq	r1, [r1], -ip
   11328:	ldrdeq	r1, [r1], -ip
   1132c:	ldrdeq	r1, [r1], -ip
   11330:	ldrdeq	r1, [r1], -ip
   11334:	ldrdeq	r1, [r1], -ip
   11338:	ldrdeq	r1, [r1], -ip
   1133c:	ldrdeq	r1, [r1], -ip
   11340:	ldrdeq	r1, [r1], -ip
   11344:	ldrdeq	r1, [r1], -ip
   11348:	ldrdeq	r1, [r1], -ip
   1134c:	andeq	r2, r1, r0, lsl #1
   11350:	ldrdeq	r1, [r1], -ip
   11354:	ldrdeq	r1, [r1], -ip
   11358:	ldrdeq	r1, [r1], -ip
   1135c:	ldrdeq	r1, [r1], -ip
   11360:	ldrdeq	r1, [r1], -ip
   11364:	ldrdeq	r1, [r1], -ip
   11368:	ldrdeq	r1, [r1], -ip
   1136c:	ldrdeq	r1, [r1], -ip
   11370:	ldrdeq	r1, [r1], -ip
   11374:	ldrdeq	r1, [r1], -ip
   11378:	ldrdeq	r1, [r1], -ip
   1137c:	ldrdeq	r1, [r1], -ip
   11380:	ldrdeq	r1, [r1], -ip
   11384:	ldrdeq	r1, [r1], -r0
   11388:	ldrdeq	r1, [r1], -ip
   1138c:	strdeq	r1, [r1], -r8
   11390:	ldrdeq	r1, [r1], -ip
   11394:	strdeq	r1, [r1], -r0
   11398:	ldrdeq	r1, [r1], -ip
   1139c:	ldrdeq	r1, [r1], -ip
   113a0:	ldrdeq	r1, [r1], -ip
   113a4:	ldrdeq	r1, [r1], -ip
   113a8:	ldrdeq	r1, [r1], -ip
   113ac:	ldrdeq	r1, [r1], -ip
   113b0:	ldrdeq	r1, [r1], -ip
   113b4:	ldrdeq	r1, [r1], -ip
   113b8:	ldrdeq	r1, [r1], -ip
   113bc:	ldrdeq	r1, [r1], -ip
   113c0:	ldrdeq	r1, [r1], -ip
   113c4:	ldrdeq	r1, [r1], -ip
   113c8:	ldrdeq	r1, [r1], -ip
   113cc:	andeq	r1, r1, r8, lsr r4
   113d0:	mov	r0, #1
   113d4:	mov	r1, r7
   113d8:	strb	r9, [r8]
   113dc:	bl	11090 <Mat_VerbMessage@plt>
   113e0:	b	112e4 <Mat_VarReadNextInfo@plt+0x1dc>
   113e4:	cmn	r1, #1
   113e8:	beq	11478 <Mat_VarReadNextInfo@plt+0x370>
   113ec:	b	112dc <Mat_VarReadNextInfo@plt+0x1d4>
   113f0:	strb	r9, [r8, #4]
   113f4:	b	112e4 <Mat_VarReadNextInfo@plt+0x1dc>
   113f8:	movw	r0, #20976	; 0x51f0
   113fc:	movt	r0, #2
   11400:	ldr	r8, [r0]
   11404:	cmp	r8, #0
   11408:	beq	11448 <Mat_VarReadNextInfo@plt+0x340>
   1140c:	movw	r1, #16887	; 0x41f7
   11410:	mov	r0, r8
   11414:	movt	r1, #1
   11418:	bl	10ee0 <strcmp@plt>
   1141c:	cmp	r0, #0
   11420:	beq	11460 <Mat_VarReadNextInfo@plt+0x358>
   11424:	movw	r0, #16892	; 0x41fc
   11428:	mov	r1, r8
   1142c:	movt	r0, #1
   11430:	bl	10f40 <Mat_Warning@plt>
   11434:	b	11454 <Mat_VarReadNextInfo@plt+0x34c>
   11438:	mov	r0, #1
   1143c:	mov	r1, #0
   11440:	bl	10ebc <Mat_SetVerbose@plt>
   11444:	b	112e4 <Mat_VarReadNextInfo@plt+0x1dc>
   11448:	movw	r0, #16945	; 0x4231
   1144c:	movt	r0, #1
   11450:	bl	10f40 <Mat_Warning@plt>
   11454:	movw	r8, #20952	; 0x51d8
   11458:	movt	r8, #2
   1145c:	b	112e4 <Mat_VarReadNextInfo@plt+0x1dc>
   11460:	movw	r8, #20952	; 0x51d8
   11464:	movw	r0, #10360	; 0x2878
   11468:	movt	r8, #2
   1146c:	movt	r0, #1
   11470:	str	r0, [r8, #12]
   11474:	b	112e4 <Mat_VarReadNextInfo@plt+0x1dc>
   11478:	movw	r4, #20916	; 0x51b4
   1147c:	ldr	r1, [sp, #44]	; 0x2c
   11480:	movt	r4, #2
   11484:	ldr	r0, [r4]
   11488:	cmp	r0, r1
   1148c:	bge	114d8 <Mat_VarReadNextInfo@plt+0x3d0>
   11490:	mov	sl, r8
   11494:	ldr	r8, [sp, #40]	; 0x28
   11498:	mov	r1, #0
   1149c:	ldr	r0, [r8, r0, lsl #2]
   114a0:	bl	10eec <Mat_Open@plt>
   114a4:	mov	r9, r0
   114a8:	ldr	r0, [r4]
   114ac:	cmp	r9, #0
   114b0:	beq	114ec <Mat_VarReadNextInfo@plt+0x3e4>
   114b4:	add	r7, r0, #1
   114b8:	ldr	r0, [sp, #44]	; 0x2c
   114bc:	str	r7, [r4]
   114c0:	cmp	r7, r0
   114c4:	bge	11504 <Mat_VarReadNextInfo@plt+0x3fc>
   114c8:	vmov.i32	q4, #1	; 0x00000001
   114cc:	vmov.i16	d10, #44	; 0x002c
   114d0:	str	r9, [sp, #16]
   114d4:	b	115b4 <Mat_VarReadNextInfo@plt+0x4ac>
   114d8:	movw	r0, #17099	; 0x42cb
   114dc:	movt	r0, #1
   114e0:	bl	11078 <Mat_Critical@plt>
   114e4:	mov	r4, #1
   114e8:	b	12058 <Mat_VarReadNextInfo@plt+0xf50>
   114ec:	ldr	r1, [r8, r0, lsl #2]
   114f0:	movw	r0, #17134	; 0x42ee
   114f4:	movt	r0, #1
   114f8:	bl	11078 <Mat_Critical@plt>
   114fc:	mov	r4, #1
   11500:	b	12058 <Mat_VarReadNextInfo@plt+0xf50>
   11504:	ldrb	r0, [sl]
   11508:	cmp	r0, #0
   1150c:	beq	11550 <Mat_VarReadNextInfo@plt+0x448>
   11510:	mov	r0, r9
   11514:	bl	10ed4 <Mat_VarReadNext@plt>
   11518:	cmp	r0, #0
   1151c:	beq	12048 <Mat_VarReadNextInfo@plt+0xf40>
   11520:	mov	r4, r0
   11524:	ldr	r1, [sl, #12]
   11528:	mov	r0, r4
   1152c:	blx	r1
   11530:	mov	r0, r4
   11534:	bl	10ff4 <Mat_VarFree@plt>
   11538:	mov	r0, r9
   1153c:	bl	10ed4 <Mat_VarReadNext@plt>
   11540:	mov	r4, r0
   11544:	cmp	r0, #0
   11548:	bne	11524 <Mat_VarReadNextInfo@plt+0x41c>
   1154c:	b	12048 <Mat_VarReadNextInfo@plt+0xf40>
   11550:	mov	r0, r9
   11554:	bl	11108 <Mat_VarReadNextInfo@plt>
   11558:	cmp	r0, #0
   1155c:	beq	12048 <Mat_VarReadNextInfo@plt+0xf40>
   11560:	mov	r4, r0
   11564:	ldr	r1, [sl, #12]
   11568:	mov	r0, r4
   1156c:	blx	r1
   11570:	mov	r0, r4
   11574:	bl	10ff4 <Mat_VarFree@plt>
   11578:	mov	r0, r9
   1157c:	bl	11108 <Mat_VarReadNextInfo@plt>
   11580:	mov	r4, r0
   11584:	cmp	r0, #0
   11588:	bne	11564 <Mat_VarReadNextInfo@plt+0x45c>
   1158c:	b	12048 <Mat_VarReadNextInfo@plt+0xf40>
   11590:	mov	r1, #0
   11594:	strb	r1, [r0]
   11598:	movw	r0, #20944	; 0x51d0
   1159c:	mov	r1, #56	; 0x38
   115a0:	movt	r0, #2
   115a4:	ldr	r3, [r0]
   115a8:	movw	r0, #18342	; 0x47a6
   115ac:	movt	r0, #1
   115b0:	b	11c84 <Mat_VarReadNextInfo@plt+0xb7c>
   115b4:	ldr	r5, [r8, r7, lsl #2]
   115b8:	mov	r0, r5
   115bc:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x19a8>
   115c0:	cmp	r0, r5
   115c4:	mov	r4, r0
   115c8:	mov	r6, #0
   115cc:	str	r7, [sp, #36]	; 0x24
   115d0:	movne	r0, #0
   115d4:	ldrbne	r6, [r4]
   115d8:	strbne	r0, [r4]
   115dc:	mov	r0, r9
   115e0:	ldrne	r5, [r8, r7, lsl #2]
   115e4:	mov	r1, r5
   115e8:	bl	10f7c <Mat_VarReadInfo@plt>
   115ec:	cmp	r0, #0
   115f0:	beq	11628 <Mat_VarReadNextInfo@plt+0x520>
   115f4:	mov	r1, r0
   115f8:	ldrb	r0, [sl]
   115fc:	mov	r8, sl
   11600:	cmp	r0, #1
   11604:	bne	11640 <Mat_VarReadNextInfo@plt+0x538>
   11608:	cmp	r6, #0
   1160c:	mov	sl, r1
   11610:	beq	11648 <Mat_VarReadNextInfo@plt+0x540>
   11614:	mov	r0, r4
   11618:	strb	r6, [r4]
   1161c:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x19a8>
   11620:	ldrb	r1, [r0]
   11624:	b	116dc <Mat_VarReadNextInfo@plt+0x5d4>
   11628:	ldr	r7, [sp, #36]	; 0x24
   1162c:	movw	r0, #17152	; 0x4300
   11630:	movt	r0, #1
   11634:	ldr	r1, [r8, r7, lsl #2]
   11638:	bl	10f40 <Mat_Warning@plt>
   1163c:	b	12038 <Mat_VarReadNextInfo@plt+0xf30>
   11640:	mov	sl, r1
   11644:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11648:	mov	r0, r9
   1164c:	mov	r1, sl
   11650:	bl	10f70 <Mat_VarReadDataAll@plt>
   11654:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11658:	movw	r0, #20944	; 0x51d0
   1165c:	ldr	r3, [sl, #36]	; 0x24
   11660:	movw	r1, #18437	; 0x4805
   11664:	mov	r2, r4
   11668:	movt	r0, #2
   1166c:	movt	r1, #1
   11670:	ldr	r0, [r0]
   11674:	bl	11030 <fprintf@plt>
   11678:	ldr	r1, [sp, #32]
   1167c:	ldr	r0, [sp, #28]
   11680:	ldr	r2, [sp, #24]
   11684:	movw	r8, #20952	; 0x51d8
   11688:	cmp	r5, r9
   1168c:	movt	r8, #2
   11690:	beq	11c04 <Mat_VarReadNextInfo@plt+0xafc>
   11694:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11698:	movw	r0, #20944	; 0x51d0
   1169c:	mov	r1, #24
   116a0:	movt	r0, #2
   116a4:	ldr	r3, [r0]
   116a8:	movw	r0, #18598	; 0x48a6
   116ac:	movt	r0, #1
   116b0:	b	116cc <Mat_VarReadNextInfo@plt+0x5c4>
   116b4:	movw	r0, #20944	; 0x51d0
   116b8:	mov	r1, #31
   116bc:	movt	r0, #2
   116c0:	ldr	r3, [r0]
   116c4:	movw	r0, #18566	; 0x4886
   116c8:	movt	r0, #1
   116cc:	mov	r2, #1
   116d0:	bl	10f88 <fwrite@plt>
   116d4:	mov	r7, #0
   116d8:	b	11bd0 <Mat_VarReadNextInfo@plt+0xac8>
   116dc:	str	sl, [sp, #48]	; 0x30
   116e0:	mov	sl, r0
   116e4:	uxtb	r0, r1
   116e8:	mov	r2, #0
   116ec:	cmp	r0, #46	; 0x2e
   116f0:	beq	1177c <Mat_VarReadNextInfo@plt+0x674>
   116f4:	cmp	r0, #123	; 0x7b
   116f8:	beq	11718 <Mat_VarReadNextInfo@plt+0x610>
   116fc:	cmp	r0, #40	; 0x28
   11700:	beq	11c20 <Mat_VarReadNextInfo@plt+0xb18>
   11704:	mov	r0, sl
   11708:	ldr	sl, [sp, #48]	; 0x30
   1170c:	cmp	r2, #0
   11710:	beq	116dc <Mat_VarReadNextInfo@plt+0x5d4>
   11714:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11718:	ldr	r0, [sp, #48]	; 0x30
   1171c:	ldr	r0, [r0, #16]
   11720:	cmp	r0, #1
   11724:	bne	11c6c <Mat_VarReadNextInfo@plt+0xb64>
   11728:	add	r5, sl, #1
   1172c:	mov	r1, #125	; 0x7d
   11730:	mov	r0, r5
   11734:	bl	11018 <strchr@plt>
   11738:	mov	r7, r0
   1173c:	add	r0, r0, #1
   11740:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x19a8>
   11744:	ldrb	r1, [r0]
   11748:	mov	r4, #1
   1174c:	str	r0, [sp, #28]
   11750:	cmp	r1, #0
   11754:	beq	117ec <Mat_VarReadNextInfo@plt+0x6e4>
   11758:	str	r1, [sp, #32]
   1175c:	mov	r2, #0
   11760:	mov	r1, #0
   11764:	str	r1, [sp, #24]
   11768:	strb	r2, [r0]
   1176c:	add	r2, sp, #56	; 0x38
   11770:	cmp	r5, r7
   11774:	bne	11808 <Mat_VarReadNextInfo@plt+0x700>
   11778:	b	11890 <Mat_VarReadNextInfo@plt+0x788>
   1177c:	add	r4, sl, #1
   11780:	ldr	sl, [sp, #48]	; 0x30
   11784:	ldr	r0, [sl, #16]
   11788:	cmp	r0, #1
   1178c:	beq	117bc <Mat_VarReadNextInfo@plt+0x6b4>
   11790:	cmp	r0, #2
   11794:	bne	11c94 <Mat_VarReadNextInfo@plt+0xb8c>
   11798:	mov	r0, r4
   1179c:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x19a8>
   117a0:	cmp	r0, r4
   117a4:	beq	11a5c <Mat_VarReadNextInfo@plt+0x954>
   117a8:	ldrb	r9, [r0]
   117ac:	mov	r5, #0
   117b0:	mov	r7, r0
   117b4:	strb	r5, [r0]
   117b8:	b	11a68 <Mat_VarReadNextInfo@plt+0x960>
   117bc:	ldr	r0, [sl]
   117c0:	ldr	r1, [sl, #12]
   117c4:	ldr	r8, [sl, #40]	; 0x28
   117c8:	udiv	r9, r0, r1
   117cc:	mov	r0, r4
   117d0:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x19a8>
   117d4:	cmp	r0, r4
   117d8:	beq	11abc <Mat_VarReadNextInfo@plt+0x9b4>
   117dc:	ldrb	r1, [r0]
   117e0:	mov	r2, #0
   117e4:	strb	r2, [r0]
   117e8:	b	11ac4 <Mat_VarReadNextInfo@plt+0x9bc>
   117ec:	mov	r0, #123	; 0x7b
   117f0:	str	r0, [sp, #32]
   117f4:	mov	r0, #1
   117f8:	str	r0, [sp, #24]
   117fc:	add	r2, sp, #56	; 0x38
   11800:	cmp	r5, r7
   11804:	beq	11890 <Mat_VarReadNextInfo@plt+0x788>
   11808:	sub	r0, r7, sl
   1180c:	mov	r4, #1
   11810:	sub	r1, r0, #1
   11814:	cmp	r1, #4
   11818:	bcs	11824 <Mat_VarReadNextInfo@plt+0x71c>
   1181c:	mov	r0, r5
   11820:	b	1187c <Mat_VarReadNextInfo@plt+0x774>
   11824:	add	r0, pc, #996	; 0x3e4
   11828:	bic	ip, r1, #3
   1182c:	vld1.64	{d16-d17}, [r0 :128]
   11830:	add	r0, r5, ip
   11834:	mov	r3, ip
   11838:	ldr	r6, [r5], #4
   1183c:	subs	r3, r3, #4
   11840:	str	r6, [sp, #56]	; 0x38
   11844:	vld1.32	{d18[0]}, [r2 :32]
   11848:	vmovl.u8	q9, d18
   1184c:	vceq.i16	d18, d18, d10
   11850:	vmovl.u16	q9, d18
   11854:	vand	q9, q9, q4
   11858:	vadd.i32	q8, q8, q9
   1185c:	bne	11838 <Mat_VarReadNextInfo@plt+0x730>
   11860:	vext.8	q9, q8, q8, #8
   11864:	cmp	ip, r1
   11868:	vadd.i32	q8, q8, q9
   1186c:	vdup.32	q9, d16[1]
   11870:	vadd.i32	q8, q8, q9
   11874:	vmov.32	r4, d16[0]
   11878:	beq	11890 <Mat_VarReadNextInfo@plt+0x788>
   1187c:	ldrb	r1, [r0], #1
   11880:	cmp	r1, #44	; 0x2c
   11884:	addeq	r4, r4, #1
   11888:	cmp	r7, r0
   1188c:	bne	1187c <Mat_VarReadNextInfo@plt+0x774>
   11890:	lsl	r6, r4, #2
   11894:	mov	r0, r6
   11898:	bl	10fb8 <malloc@plt>
   1189c:	mov	r9, r0
   118a0:	mov	r0, r6
   118a4:	bl	10fb8 <malloc@plt>
   118a8:	str	r0, [sp, #20]
   118ac:	mov	r0, r6
   118b0:	bl	10fb8 <malloc@plt>
   118b4:	mov	r8, r0
   118b8:	cmp	r4, #1
   118bc:	blt	11928 <Mat_VarReadNextInfo@plt+0x820>
   118c0:	mov	r0, r9
   118c4:	mov	r1, #0
   118c8:	mov	r2, r6
   118cc:	mov	r5, #0
   118d0:	bl	11054 <memset@plt>
   118d4:	mov	r3, #1
   118d8:	cmp	r4, #4
   118dc:	bcc	11908 <Mat_VarReadNextInfo@plt+0x800>
   118e0:	ldr	r2, [sp, #20]
   118e4:	bic	r5, r4, #3
   118e8:	mov	r1, r8
   118ec:	mov	r0, r5
   118f0:	vst1.32	{d8-d9}, [r2]!
   118f4:	vst1.32	{d8-d9}, [r1]!
   118f8:	subs	r0, r0, #4
   118fc:	bne	118f0 <Mat_VarReadNextInfo@plt+0x7e8>
   11900:	cmp	r4, r5
   11904:	beq	11928 <Mat_VarReadNextInfo@plt+0x820>
   11908:	ldr	r0, [sp, #20]
   1190c:	add	r1, r8, r5, lsl #2
   11910:	sub	r2, r4, r5
   11914:	add	r0, r0, r5, lsl #2
   11918:	str	r3, [r0], #4
   1191c:	str	r3, [r1], #4
   11920:	subs	r2, r2, #1
   11924:	bne	11918 <Mat_VarReadNextInfo@plt+0x810>
   11928:	ldr	r5, [sp, #20]
   1192c:	mov	r0, sl
   11930:	mov	r1, r7
   11934:	mov	r2, r9
   11938:	str	r8, [sp]
   1193c:	mov	r3, r5
   11940:	bl	12c94 <Mat_VarReadNextInfo@plt+0x1b8c>
   11944:	ldr	sl, [sp, #48]	; 0x30
   11948:	mov	r0, r4
   1194c:	mov	r1, r9
   11950:	mov	r2, r5
   11954:	mov	r3, r8
   11958:	str	sl, [sp]
   1195c:	bl	12efc <Mat_VarReadNextInfo@plt+0x1df4>
   11960:	cmp	r0, #0
   11964:	beq	11698 <Mat_VarReadNextInfo@plt+0x590>
   11968:	mov	r7, r0
   1196c:	cmp	r4, #1
   11970:	bne	119c0 <Mat_VarReadNextInfo@plt+0x8b8>
   11974:	ldr	r3, [r8]
   11978:	ldr	r2, [r5]
   1197c:	ldr	r1, [r9]
   11980:	mov	r0, sl
   11984:	bl	1109c <Mat_VarGetCellsLinear@plt>
   11988:	ldr	r1, [sl, #4]
   1198c:	mov	r6, r0
   11990:	ldr	r0, [sl, #32]
   11994:	mov	r2, #1
   11998:	cmp	r1, #2
   1199c:	bne	11a54 <Mat_VarReadNextInfo@plt+0x94c>
   119a0:	ldr	r1, [r0]
   119a4:	cmp	r1, #1
   119a8:	bne	11b60 <Mat_VarReadNextInfo@plt+0xa58>
   119ac:	ldr	r1, [r8]
   119b0:	str	r1, [r0, #4]
   119b4:	cmp	r6, #0
   119b8:	bne	11b7c <Mat_VarReadNextInfo@plt+0xa74>
   119bc:	b	116b4 <Mat_VarReadNextInfo@plt+0x5ac>
   119c0:	mov	r0, sl
   119c4:	mov	r1, r9
   119c8:	mov	r2, r5
   119cc:	mov	r3, r8
   119d0:	bl	10f10 <Mat_VarGetCells@plt>
   119d4:	mov	r6, r0
   119d8:	cmp	r4, #1
   119dc:	blt	11b74 <Mat_VarReadNextInfo@plt+0xa6c>
   119e0:	ldr	r0, [sl, #32]
   119e4:	mov	r1, #0
   119e8:	cmp	r4, #4
   119ec:	bcc	11a34 <Mat_VarReadNextInfo@plt+0x92c>
   119f0:	add	r2, r8, r4, lsl #2
   119f4:	cmp	r2, r0
   119f8:	bls	11a08 <Mat_VarReadNextInfo@plt+0x900>
   119fc:	add	r2, r0, r4, lsl #2
   11a00:	cmp	r8, r2
   11a04:	bcc	11a34 <Mat_VarReadNextInfo@plt+0x92c>
   11a08:	bic	r1, r4, #3
   11a0c:	mov	r3, r0
   11a10:	mov	r5, r8
   11a14:	mov	r2, r1
   11a18:	vld1.32	{d16-d17}, [r5]!
   11a1c:	subs	r2, r2, #4
   11a20:	vst1.32	{d16-d17}, [r3]!
   11a24:	bne	11a18 <Mat_VarReadNextInfo@plt+0x910>
   11a28:	ldr	r5, [sp, #20]
   11a2c:	cmp	r4, r1
   11a30:	beq	11b74 <Mat_VarReadNextInfo@plt+0xa6c>
   11a34:	add	r2, r8, r1, lsl #2
   11a38:	add	r0, r0, r1, lsl #2
   11a3c:	sub	r1, r4, r1
   11a40:	ldr	r3, [r2], #4
   11a44:	subs	r1, r1, #1
   11a48:	str	r3, [r0], #4
   11a4c:	bne	11a40 <Mat_VarReadNextInfo@plt+0x938>
   11a50:	b	11b74 <Mat_VarReadNextInfo@plt+0xa6c>
   11a54:	str	r2, [sl, #4]
   11a58:	b	11b6c <Mat_VarReadNextInfo@plt+0xa64>
   11a5c:	mov	r7, r0
   11a60:	mov	r9, #46	; 0x2e
   11a64:	mov	r5, #1
   11a68:	mov	r0, sl
   11a6c:	mov	r1, r4
   11a70:	mov	r2, #0
   11a74:	bl	110c0 <Mat_VarGetStructFieldByName@plt>
   11a78:	ldr	r6, [sp, #16]
   11a7c:	cmp	r0, #0
   11a80:	beq	11ec0 <Mat_VarReadNextInfo@plt+0xdb8>
   11a84:	mov	r1, #1
   11a88:	bl	110fc <Mat_VarDuplicate@plt>
   11a8c:	mov	r4, r0
   11a90:	mov	r0, sl
   11a94:	bl	10ff4 <Mat_VarFree@plt>
   11a98:	cmp	r5, #0
   11a9c:	bne	11fb4 <Mat_VarReadNextInfo@plt+0xeac>
   11aa0:	mov	sl, r4
   11aa4:	mov	r1, r9
   11aa8:	mov	r0, r7
   11aac:	mov	r2, #0
   11ab0:	cmp	r2, #0
   11ab4:	beq	116dc <Mat_VarReadNextInfo@plt+0x5d4>
   11ab8:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11abc:	mov	r1, #46	; 0x2e
   11ac0:	mov	r2, #1
   11ac4:	mov	r5, #0
   11ac8:	cmp	r9, #1
   11acc:	str	r2, [sp, #24]
   11ad0:	str	r0, [sp, #28]
   11ad4:	str	r1, [sp, #32]
   11ad8:	blt	11678 <Mat_VarReadNextInfo@plt+0x570>
   11adc:	mov	r0, sl
   11ae0:	mov	r1, r5
   11ae4:	bl	10f1c <Mat_VarGetCell@plt>
   11ae8:	cmp	r0, #0
   11aec:	beq	11b40 <Mat_VarReadNextInfo@plt+0xa38>
   11af0:	mov	r6, r0
   11af4:	ldr	r0, [r0, #16]
   11af8:	cmp	r0, #2
   11afc:	bne	11b40 <Mat_VarReadNextInfo@plt+0xa38>
   11b00:	mov	r0, r6
   11b04:	mov	r1, r4
   11b08:	mov	r2, #0
   11b0c:	bl	110c0 <Mat_VarGetStructFieldByName@plt>
   11b10:	cmp	r0, #0
   11b14:	beq	11658 <Mat_VarReadNextInfo@plt+0x550>
   11b18:	mov	r1, #1
   11b1c:	bl	110fc <Mat_VarDuplicate@plt>
   11b20:	mov	r7, r0
   11b24:	mov	r0, r6
   11b28:	bl	10ff4 <Mat_VarFree@plt>
   11b2c:	str	r7, [r8, r5, lsl #2]
   11b30:	add	r5, r5, #1
   11b34:	cmp	r5, r9
   11b38:	blt	11adc <Mat_VarReadNextInfo@plt+0x9d4>
   11b3c:	b	11678 <Mat_VarReadNextInfo@plt+0x570>
   11b40:	movw	r0, #20944	; 0x51d0
   11b44:	movw	r1, #18476	; 0x482c
   11b48:	mov	r2, r5
   11b4c:	movt	r0, #2
   11b50:	movt	r1, #1
   11b54:	ldr	r0, [r0]
   11b58:	bl	11030 <fprintf@plt>
   11b5c:	b	11678 <Mat_VarReadNextInfo@plt+0x570>
   11b60:	ldr	r1, [r0, #4]
   11b64:	cmp	r1, #1
   11b68:	strne	r2, [sl, #4]
   11b6c:	ldr	r1, [r8]
   11b70:	str	r1, [r0]
   11b74:	cmp	r6, #0
   11b78:	beq	116b4 <Mat_VarReadNextInfo@plt+0x5ac>
   11b7c:	cmp	r7, #1
   11b80:	mov	r4, r6
   11b84:	blt	11ba0 <Mat_VarReadNextInfo@plt+0xa98>
   11b88:	ldr	r0, [r4]
   11b8c:	mov	r1, #1
   11b90:	bl	110fc <Mat_VarDuplicate@plt>
   11b94:	str	r0, [r4], #4
   11b98:	subs	r7, r7, #1
   11b9c:	bne	11b88 <Mat_VarReadNextInfo@plt+0xa80>
   11ba0:	ldr	r1, [sl, #32]
   11ba4:	ldr	r3, [sl, #4]
   11ba8:	ldr	r0, [sl, #36]	; 0x24
   11bac:	mov	r7, #1
   11bb0:	mov	r2, #21
   11bb4:	stm	sp, {r1, r6, r7}
   11bb8:	mov	r1, #1
   11bbc:	bl	10f28 <Mat_VarCreate@plt>
   11bc0:	mov	r4, r0
   11bc4:	mov	r0, sl
   11bc8:	bl	10ff4 <Mat_VarFree@plt>
   11bcc:	mov	sl, r4
   11bd0:	mov	r0, r9
   11bd4:	bl	10f34 <free@plt>
   11bd8:	mov	r0, r5
   11bdc:	bl	10f34 <free@plt>
   11be0:	mov	r0, r8
   11be4:	bl	10f34 <free@plt>
   11be8:	ldr	r1, [sp, #32]
   11bec:	ldr	r0, [sp, #28]
   11bf0:	ldr	r2, [sp, #24]
   11bf4:	movw	r8, #20952	; 0x51d8
   11bf8:	cmp	r7, #0
   11bfc:	movt	r8, #2
   11c00:	beq	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11c04:	cmp	r2, #0
   11c08:	beq	116dc <Mat_VarReadNextInfo@plt+0x5d4>
   11c0c:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11c10:	andeq	r0, r0, r1
	...
   11c20:	add	r6, sl, #1
   11c24:	mov	r1, #41	; 0x29
   11c28:	mov	r0, r6
   11c2c:	bl	11018 <strchr@plt>
   11c30:	add	r5, r0, #1
   11c34:	mov	r4, r0
   11c38:	mov	r0, r5
   11c3c:	bl	12ab0 <Mat_VarReadNextInfo@plt+0x19a8>
   11c40:	cmp	r0, r5
   11c44:	bne	11590 <Mat_VarReadNextInfo@plt+0x488>
   11c48:	cmp	r6, r4
   11c4c:	beq	11cb4 <Mat_VarReadNextInfo@plt+0xbac>
   11c50:	sub	r0, r4, sl
   11c54:	mov	r5, #1
   11c58:	sub	r1, r0, #1
   11c5c:	cmp	r1, #4
   11c60:	bcs	11cbc <Mat_VarReadNextInfo@plt+0xbb4>
   11c64:	mov	r0, r6
   11c68:	b	11d18 <Mat_VarReadNextInfo@plt+0xc10>
   11c6c:	movw	r0, #20944	; 0x51d0
   11c70:	mov	r1, #34	; 0x22
   11c74:	movt	r0, #2
   11c78:	ldr	r3, [r0]
   11c7c:	movw	r0, #18531	; 0x4863
   11c80:	movt	r0, #1
   11c84:	mov	r2, #1
   11c88:	bl	10f88 <fwrite@plt>
   11c8c:	ldr	sl, [sp, #48]	; 0x30
   11c90:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11c94:	movw	r0, #20944	; 0x51d0
   11c98:	movw	r1, #18509	; 0x484d
   11c9c:	mov	r2, r4
   11ca0:	movt	r0, #2
   11ca4:	movt	r1, #1
   11ca8:	ldr	r0, [r0]
   11cac:	bl	11030 <fprintf@plt>
   11cb0:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11cb4:	mov	r5, #1
   11cb8:	b	11d2c <Mat_VarReadNextInfo@plt+0xc24>
   11cbc:	add	r0, pc, #1004	; 0x3ec
   11cc0:	bic	r2, r1, #3
   11cc4:	add	r5, sp, #52	; 0x34
   11cc8:	vld1.64	{d16-d17}, [r0 :128]
   11ccc:	add	r0, r6, r2
   11cd0:	mov	r3, r2
   11cd4:	ldr	r7, [r6], #4
   11cd8:	subs	r3, r3, #4
   11cdc:	str	r7, [sp, #52]	; 0x34
   11ce0:	vld1.32	{d18[0]}, [r5 :32]
   11ce4:	vmovl.u8	q9, d18
   11ce8:	vceq.i16	d18, d18, d10
   11cec:	vmovl.u16	q9, d18
   11cf0:	vand	q9, q9, q4
   11cf4:	vadd.i32	q8, q8, q9
   11cf8:	bne	11cd4 <Mat_VarReadNextInfo@plt+0xbcc>
   11cfc:	vext.8	q9, q8, q8, #8
   11d00:	cmp	r2, r1
   11d04:	vadd.i32	q8, q8, q9
   11d08:	vdup.32	q9, d16[1]
   11d0c:	vadd.i32	q8, q8, q9
   11d10:	vmov.32	r5, d16[0]
   11d14:	beq	11d2c <Mat_VarReadNextInfo@plt+0xc24>
   11d18:	ldrb	r1, [r0], #1
   11d1c:	cmp	r1, #44	; 0x2c
   11d20:	addeq	r5, r5, #1
   11d24:	cmp	r4, r0
   11d28:	bne	11d18 <Mat_VarReadNextInfo@plt+0xc10>
   11d2c:	lsl	r8, r5, #2
   11d30:	mov	r0, r8
   11d34:	bl	10fb8 <malloc@plt>
   11d38:	mov	r9, r0
   11d3c:	mov	r0, r8
   11d40:	bl	10fb8 <malloc@plt>
   11d44:	mov	r7, r0
   11d48:	mov	r0, r8
   11d4c:	bl	10fb8 <malloc@plt>
   11d50:	cmp	r5, #1
   11d54:	str	r0, [sp, #32]
   11d58:	blt	11dc4 <Mat_VarReadNextInfo@plt+0xcbc>
   11d5c:	mov	r0, r9
   11d60:	mov	r1, #0
   11d64:	mov	r2, r8
   11d68:	mov	r6, #0
   11d6c:	bl	11054 <memset@plt>
   11d70:	mov	r3, #1
   11d74:	cmp	r5, #4
   11d78:	bcc	11da4 <Mat_VarReadNextInfo@plt+0xc9c>
   11d7c:	ldr	r1, [sp, #32]
   11d80:	bic	r6, r5, #3
   11d84:	mov	r2, r7
   11d88:	mov	r0, r6
   11d8c:	vst1.32	{d8-d9}, [r2]!
   11d90:	vst1.32	{d8-d9}, [r1]!
   11d94:	subs	r0, r0, #4
   11d98:	bne	11d8c <Mat_VarReadNextInfo@plt+0xc84>
   11d9c:	cmp	r5, r6
   11da0:	beq	11dc4 <Mat_VarReadNextInfo@plt+0xcbc>
   11da4:	ldr	r1, [sp, #32]
   11da8:	add	r0, r7, r6, lsl #2
   11dac:	sub	r2, r5, r6
   11db0:	add	r1, r1, r6, lsl #2
   11db4:	str	r3, [r0], #4
   11db8:	str	r3, [r1], #4
   11dbc:	subs	r2, r2, #1
   11dc0:	bne	11db4 <Mat_VarReadNextInfo@plt+0xcac>
   11dc4:	ldr	r6, [sp, #32]
   11dc8:	mov	r0, sl
   11dcc:	mov	r1, r4
   11dd0:	mov	r2, r9
   11dd4:	mov	r3, r7
   11dd8:	str	r6, [sp]
   11ddc:	bl	12c94 <Mat_VarReadNextInfo@plt+0x1b8c>
   11de0:	ldr	sl, [sp, #48]	; 0x30
   11de4:	mov	r0, r5
   11de8:	mov	r1, r9
   11dec:	mov	r2, r7
   11df0:	mov	r3, r6
   11df4:	str	sl, [sp]
   11df8:	bl	12efc <Mat_VarReadNextInfo@plt+0x1df4>
   11dfc:	movw	r8, #20952	; 0x51d8
   11e00:	cmp	r0, #0
   11e04:	movt	r8, #2
   11e08:	beq	11ff8 <Mat_VarReadNextInfo@plt+0xef0>
   11e0c:	mov	r4, r0
   11e10:	ldr	r0, [sl, #16]
   11e14:	bl	110cc <Mat_SizeOfClass@plt>
   11e18:	str	r0, [sl, #12]
   11e1c:	mul	r0, r0, r4
   11e20:	str	r0, [sl]
   11e24:	ldr	r1, [sl, #20]
   11e28:	cmp	r1, #0
   11e2c:	beq	11f78 <Mat_VarReadNextInfo@plt+0xe70>
   11e30:	mov	r0, #8
   11e34:	bl	10fb8 <malloc@plt>
   11e38:	str	r0, [sl, #40]	; 0x28
   11e3c:	mov	r4, r0
   11e40:	ldr	r0, [sl]
   11e44:	bl	10fb8 <malloc@plt>
   11e48:	str	r0, [r4]
   11e4c:	ldr	r0, [sl]
   11e50:	bl	10fb8 <malloc@plt>
   11e54:	str	r0, [r4, #4]
   11e58:	ldr	r2, [sl, #40]	; 0x28
   11e5c:	ldr	r0, [sp, #16]
   11e60:	cmp	r2, #0
   11e64:	beq	11f90 <Mat_VarReadNextInfo@plt+0xe88>
   11e68:	cmp	r5, #1
   11e6c:	bne	11ee4 <Mat_VarReadNextInfo@plt+0xddc>
   11e70:	ldr	r1, [r6]
   11e74:	mov	r4, r7
   11e78:	ldr	r7, [r7]
   11e7c:	ldr	r3, [r9]
   11e80:	str	r1, [sp, #4]
   11e84:	mov	r1, sl
   11e88:	str	r7, [sp]
   11e8c:	bl	10f4c <Mat_VarReadDataLinear@plt>
   11e90:	ldr	r1, [sl, #4]
   11e94:	ldr	r0, [sl, #32]
   11e98:	mov	r2, #1
   11e9c:	cmp	r1, #2
   11ea0:	bne	11fe4 <Mat_VarReadNextInfo@plt+0xedc>
   11ea4:	ldr	r1, [r0]
   11ea8:	cmp	r1, #1
   11eac:	bne	11fc8 <Mat_VarReadNextInfo@plt+0xec0>
   11eb0:	ldr	r1, [r6]
   11eb4:	mov	r7, r4
   11eb8:	str	r1, [r0, #4]
   11ebc:	b	11ff8 <Mat_VarReadNextInfo@plt+0xef0>
   11ec0:	movw	r0, #20944	; 0x51d0
   11ec4:	ldr	r3, [sl, #36]	; 0x24
   11ec8:	movw	r1, #18437	; 0x4805
   11ecc:	mov	r2, r4
   11ed0:	movt	r0, #2
   11ed4:	movt	r1, #1
   11ed8:	ldr	r0, [r0]
   11edc:	bl	11030 <fprintf@plt>
   11ee0:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11ee4:	mov	r1, sl
   11ee8:	mov	r3, r9
   11eec:	str	r7, [sp]
   11ef0:	str	r6, [sp, #4]
   11ef4:	bl	10f64 <Mat_VarReadData@plt>
   11ef8:	cmp	r5, #1
   11efc:	blt	11ff8 <Mat_VarReadNextInfo@plt+0xef0>
   11f00:	ldr	r0, [sl, #32]
   11f04:	mov	r1, #0
   11f08:	cmp	r5, #4
   11f0c:	bcc	11f58 <Mat_VarReadNextInfo@plt+0xe50>
   11f10:	add	r2, r6, r5, lsl #2
   11f14:	cmp	r2, r0
   11f18:	bls	11f28 <Mat_VarReadNextInfo@plt+0xe20>
   11f1c:	add	r2, r0, r5, lsl #2
   11f20:	cmp	r6, r2
   11f24:	bcc	11f58 <Mat_VarReadNextInfo@plt+0xe50>
   11f28:	bic	r1, r5, #3
   11f2c:	mov	r4, r7
   11f30:	mov	r3, r0
   11f34:	mov	r2, r1
   11f38:	vld1.32	{d16-d17}, [r6]!
   11f3c:	subs	r2, r2, #4
   11f40:	vst1.32	{d16-d17}, [r3]!
   11f44:	bne	11f38 <Mat_VarReadNextInfo@plt+0xe30>
   11f48:	ldr	r6, [sp, #32]
   11f4c:	cmp	r5, r1
   11f50:	mov	r7, r4
   11f54:	beq	11ff8 <Mat_VarReadNextInfo@plt+0xef0>
   11f58:	add	r2, r6, r1, lsl #2
   11f5c:	add	r0, r0, r1, lsl #2
   11f60:	sub	r1, r5, r1
   11f64:	ldr	r3, [r2], #4
   11f68:	subs	r1, r1, #1
   11f6c:	str	r3, [r0], #4
   11f70:	bne	11f64 <Mat_VarReadNextInfo@plt+0xe5c>
   11f74:	b	11ff8 <Mat_VarReadNextInfo@plt+0xef0>
   11f78:	bl	10fb8 <malloc@plt>
   11f7c:	mov	r2, r0
   11f80:	str	r0, [sl, #40]	; 0x28
   11f84:	ldr	r0, [sp, #16]
   11f88:	cmp	r2, #0
   11f8c:	bne	11e68 <Mat_VarReadNextInfo@plt+0xd60>
   11f90:	movw	r0, #20944	; 0x51d0
   11f94:	mov	r1, #37	; 0x25
   11f98:	mov	r2, #1
   11f9c:	movt	r0, #2
   11fa0:	ldr	r3, [r0]
   11fa4:	movw	r0, #18399	; 0x47df
   11fa8:	movt	r0, #1
   11fac:	bl	10f88 <fwrite@plt>
   11fb0:	b	11ff8 <Mat_VarReadNextInfo@plt+0xef0>
   11fb4:	mov	r0, r6
   11fb8:	mov	r1, r4
   11fbc:	bl	10f70 <Mat_VarReadDataAll@plt>
   11fc0:	mov	sl, r4
   11fc4:	b	12010 <Mat_VarReadNextInfo@plt+0xf08>
   11fc8:	ldr	r1, [r0, #4]
   11fcc:	cmp	r1, #1
   11fd0:	bne	11fe4 <Mat_VarReadNextInfo@plt+0xedc>
   11fd4:	ldr	r1, [r6]
   11fd8:	mov	r7, r4
   11fdc:	str	r1, [r0]
   11fe0:	b	11ff8 <Mat_VarReadNextInfo@plt+0xef0>
   11fe4:	mov	r1, #2
   11fe8:	mov	r7, r4
   11fec:	str	r1, [sl, #4]
   11ff0:	ldr	r1, [r6]
   11ff4:	stm	r0, {r1, r2}
   11ff8:	mov	r0, r9
   11ffc:	bl	10f34 <free@plt>
   12000:	mov	r0, r7
   12004:	bl	10f34 <free@plt>
   12008:	mov	r0, r6
   1200c:	bl	10f34 <free@plt>
   12010:	ldr	r1, [r8, #12]
   12014:	mov	r4, sl
   12018:	mov	sl, r8
   1201c:	mov	r0, r4
   12020:	blx	r1
   12024:	mov	r0, r4
   12028:	bl	10ff4 <Mat_VarFree@plt>
   1202c:	ldr	r8, [sp, #40]	; 0x28
   12030:	ldr	r9, [sp, #16]
   12034:	ldr	r7, [sp, #36]	; 0x24
   12038:	ldr	r0, [sp, #44]	; 0x2c
   1203c:	add	r7, r7, #1
   12040:	cmp	r7, r0
   12044:	bne	115b4 <Mat_VarReadNextInfo@plt+0x4ac>
   12048:	mov	r0, r9
   1204c:	bl	1106c <Mat_Close@plt>
   12050:	bl	10ec8 <Mat_LogClose@plt>
   12054:	mov	r4, #0
   12058:	mov	r0, r4
   1205c:	sub	sp, fp, #56	; 0x38
   12060:	vpop	{d8-d10}
   12064:	add	sp, sp, #4
   12068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1206c:	movw	r0, #20840	; 0x5168
   12070:	movt	r0, #2
   12074:	bl	110b4 <Mat_Help@plt>
   12078:	mov	r0, #0
   1207c:	bl	10fe8 <exit@plt>
   12080:	movw	r0, #16983	; 0x4257
   12084:	movw	r1, #16808	; 0x41a8
   12088:	movw	r2, #17069	; 0x42ad
   1208c:	movt	r0, #1
   12090:	movt	r1, #1
   12094:	movt	r2, #1
   12098:	bl	10f04 <printf@plt>
   1209c:	mov	r0, #0
   120a0:	bl	10fe8 <exit@plt>
   120a4:	nop	{0}
   120a8:	nop	{0}
   120ac:	nop	{0}
   120b0:	andeq	r0, r0, r1
	...
   120c0:	push	{r4, r5, r6, r7, fp, lr}
   120c4:	add	fp, sp, #16
   120c8:	movw	r6, #20952	; 0x51d8
   120cc:	mov	r4, r1
   120d0:	movt	r6, #2
   120d4:	ldr	r0, [r6, #16]
   120d8:	cmp	r0, #1
   120dc:	blt	12104 <Mat_VarReadNextInfo@plt+0xffc>
   120e0:	movw	r5, #17486	; 0x444e
   120e4:	mov	r7, #0
   120e8:	movt	r5, #1
   120ec:	mov	r0, r5
   120f0:	bl	10f04 <printf@plt>
   120f4:	ldr	r0, [r6, #16]
   120f8:	add	r7, r7, #1
   120fc:	cmp	r7, r0
   12100:	blt	120ec <Mat_VarReadNextInfo@plt+0xfe4>
   12104:	mov	r0, r4
   12108:	pop	{r4, r5, r6, r7, fp, lr}
   1210c:	b	10fac <puts@plt>
   12110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12114:	add	fp, sp, #28
   12118:	sub	sp, sp, #20
   1211c:	cmp	r0, #0
   12120:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12124:	mov	r4, r0
   12128:	ldr	r0, [r0, #16]
   1212c:	sub	r1, r0, #6
   12130:	cmp	r1, #10
   12134:	bcs	12218 <Mat_VarReadNextInfo@plt+0x1110>
   12138:	ldr	r0, [r4, #4]
   1213c:	str	r4, [sp, #16]
   12140:	cmp	r0, #3
   12144:	beq	12364 <Mat_VarReadNextInfo@plt+0x125c>
   12148:	cmp	r0, #2
   1214c:	bne	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12150:	ldr	r0, [r4, #40]	; 0x28
   12154:	cmp	r0, #0
   12158:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   1215c:	ldr	r0, [r4, #8]
   12160:	bl	11000 <Mat_SizeOf@plt>
   12164:	mov	r5, r0
   12168:	ldr	r0, [r4, #20]
   1216c:	cmp	r0, #0
   12170:	beq	1262c <Mat_VarReadNextInfo@plt+0x1524>
   12174:	ldr	r1, [r4, #32]
   12178:	ldr	r0, [r1]
   1217c:	cmp	r0, #0
   12180:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12184:	ldr	r2, [r4, #40]	; 0x28
   12188:	mov	r6, #0
   1218c:	ldr	sl, [r2]
   12190:	ldr	r7, [r2, #4]
   12194:	ldr	r1, [r1, #4]
   12198:	cmp	r1, #0
   1219c:	beq	121f8 <Mat_VarReadNextInfo@plt+0x10f0>
   121a0:	mov	r8, #0
   121a4:	b	121ac <Mat_VarReadNextInfo@plt+0x10a4>
   121a8:	ldr	r0, [r0]
   121ac:	ldr	r4, [sp, #16]
   121b0:	mla	r9, r8, r0, r6
   121b4:	mla	r1, r9, r5, sl
   121b8:	ldr	r0, [r4, #8]
   121bc:	bl	12b9c <Mat_VarReadNextInfo@plt+0x1a94>
   121c0:	movw	r0, #17288	; 0x4388
   121c4:	movt	r0, #1
   121c8:	bl	10f04 <printf@plt>
   121cc:	ldr	r0, [r4, #8]
   121d0:	mla	r1, r9, r5, r7
   121d4:	bl	12b9c <Mat_VarReadNextInfo@plt+0x1a94>
   121d8:	movw	r0, #17292	; 0x438c
   121dc:	movt	r0, #1
   121e0:	bl	10f04 <printf@plt>
   121e4:	ldr	r0, [r4, #32]
   121e8:	add	r8, r8, #1
   121ec:	ldr	r1, [r0, #4]
   121f0:	cmp	r8, r1
   121f4:	bcc	121a8 <Mat_VarReadNextInfo@plt+0x10a0>
   121f8:	mov	r0, #10
   121fc:	bl	11060 <putchar@plt>
   12200:	ldr	r1, [r4, #32]
   12204:	add	r6, r6, #1
   12208:	ldr	r0, [r1]
   1220c:	cmp	r6, r0
   12210:	bcc	12194 <Mat_VarReadNextInfo@plt+0x108c>
   12214:	b	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12218:	sub	r1, r0, #4
   1221c:	cmp	r1, #2
   12220:	bcc	124f0 <Mat_VarReadNextInfo@plt+0x13e8>
   12224:	cmp	r0, #1
   12228:	beq	1250c <Mat_VarReadNextInfo@plt+0x1404>
   1222c:	cmp	r0, #2
   12230:	bne	12618 <Mat_VarReadNextInfo@plt+0x1510>
   12234:	ldr	r1, [r4, #36]	; 0x24
   12238:	cmp	r1, #0
   1223c:	beq	1224c <Mat_VarReadNextInfo@plt+0x1144>
   12240:	movw	r0, #17194	; 0x432a
   12244:	movt	r0, #1
   12248:	bl	10f58 <Mat_Message@plt>
   1224c:	ldr	r1, [r4, #4]
   12250:	movw	r0, #17209	; 0x4339
   12254:	movt	r0, #1
   12258:	bl	10f58 <Mat_Message@plt>
   1225c:	ldr	r0, [r4, #4]
   12260:	cmp	r0, #0
   12264:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12268:	movw	r0, #17224	; 0x4348
   1226c:	movt	r0, #1
   12270:	bl	10f58 <Mat_Message@plt>
   12274:	mov	r0, r4
   12278:	bl	10eb0 <Mat_VarGetNumberOfFields@plt>
   1227c:	ldr	r1, [r4, #32]
   12280:	mov	r5, r0
   12284:	ldr	r0, [r4, #4]
   12288:	ldr	r6, [r1]
   1228c:	cmp	r0, #2
   12290:	blt	122fc <Mat_VarReadNextInfo@plt+0x11f4>
   12294:	sub	r3, r0, #1
   12298:	mov	r2, #1
   1229c:	cmp	r3, #4
   122a0:	bcc	122e8 <Mat_VarReadNextInfo@plt+0x11e0>
   122a4:	mov	r2, #1
   122a8:	bic	ip, r3, #3
   122ac:	vdup.32	q8, r2
   122b0:	orr	r2, ip, #1
   122b4:	mov	r7, ip
   122b8:	vmov.32	d16[0], r6
   122bc:	add	r6, r1, #4
   122c0:	vld1.32	{d18-d19}, [r6]!
   122c4:	subs	r7, r7, #4
   122c8:	vmul.i32	q8, q9, q8
   122cc:	bne	122c0 <Mat_VarReadNextInfo@plt+0x11b8>
   122d0:	vext.8	q9, q8, q8, #8
   122d4:	cmp	r3, ip
   122d8:	vmul.i32	q0, q8, q9
   122dc:	vmul.i32	q8, q0, d0[1]
   122e0:	vmov.32	r6, d16[0]
   122e4:	beq	122fc <Mat_VarReadNextInfo@plt+0x11f4>
   122e8:	ldr	r3, [r1, r2, lsl #2]
   122ec:	add	r2, r2, #1
   122f0:	cmp	r2, r0
   122f4:	mul	r6, r3, r6
   122f8:	blt	122e8 <Mat_VarReadNextInfo@plt+0x11e0>
   122fc:	cmp	r5, #1
   12300:	blt	127fc <Mat_VarReadNextInfo@plt+0x16f4>
   12304:	cmp	r6, #0
   12308:	bne	127fc <Mat_VarReadNextInfo@plt+0x16f4>
   1230c:	mov	r0, r4
   12310:	bl	10f94 <Mat_VarGetStructFieldnames@plt>
   12314:	mov	r4, r0
   12318:	movw	r0, #17246	; 0x435e
   1231c:	mov	r1, r5
   12320:	movt	r0, #1
   12324:	bl	10f58 <Mat_Message@plt>
   12328:	movw	r7, #20952	; 0x51d8
   1232c:	cmp	r4, #0
   12330:	movt	r7, #2
   12334:	ldr	r0, [r7, #16]
   12338:	add	r0, r0, #1
   1233c:	str	r0, [r7, #16]
   12340:	beq	12858 <Mat_VarReadNextInfo@plt+0x1750>
   12344:	movw	r6, #17196	; 0x432c
   12348:	movt	r6, #1
   1234c:	ldr	r1, [r4], #4
   12350:	mov	r0, r6
   12354:	bl	10f58 <Mat_Message@plt>
   12358:	subs	r5, r5, #1
   1235c:	bne	1234c <Mat_VarReadNextInfo@plt+0x1244>
   12360:	b	12854 <Mat_VarReadNextInfo@plt+0x174c>
   12364:	ldr	r0, [r4, #40]	; 0x28
   12368:	cmp	r0, #0
   1236c:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12370:	ldr	r0, [r4, #8]
   12374:	bl	11000 <Mat_SizeOf@plt>
   12378:	str	r0, [sp, #4]
   1237c:	ldr	r0, [r4, #20]
   12380:	cmp	r0, #0
   12384:	beq	126c8 <Mat_VarReadNextInfo@plt+0x15c0>
   12388:	ldr	r0, [r4, #32]
   1238c:	ldr	r0, [r0, #8]
   12390:	cmp	r0, #0
   12394:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12398:	ldr	r0, [r4, #40]	; 0x28
   1239c:	movw	r7, #20952	; 0x51d8
   123a0:	movw	r8, #17288	; 0x4388
   123a4:	mov	r2, #0
   123a8:	movt	r7, #2
   123ac:	movt	r8, #1
   123b0:	ldr	r9, [r0]
   123b4:	ldr	r0, [r0, #4]
   123b8:	str	r0, [sp, #12]
   123bc:	str	r9, [sp]
   123c0:	ldr	r5, [sp, #4]
   123c4:	ldr	r1, [r4, #36]	; 0x24
   123c8:	movw	r0, #17329	; 0x43b1
   123cc:	str	r2, [sp, #8]
   123d0:	movt	r0, #1
   123d4:	bl	10f58 <Mat_Message@plt>
   123d8:	ldr	r0, [r7, #16]
   123dc:	add	r1, r0, #1
   123e0:	str	r1, [r7, #16]
   123e4:	ldr	r0, [r4, #32]
   123e8:	ldr	r2, [r0]
   123ec:	cmp	r2, #0
   123f0:	beq	124c4 <Mat_VarReadNextInfo@plt+0x13bc>
   123f4:	mov	r6, #0
   123f8:	cmp	r1, #0
   123fc:	beq	12430 <Mat_VarReadNextInfo@plt+0x1328>
   12400:	movw	sl, #17486	; 0x444e
   12404:	mov	r4, #0
   12408:	movt	sl, #1
   1240c:	mov	r0, sl
   12410:	bl	10f04 <printf@plt>
   12414:	ldr	r0, [r7, #16]
   12418:	add	r4, r4, #1
   1241c:	cmp	r4, r0
   12420:	bcc	1240c <Mat_VarReadNextInfo@plt+0x1304>
   12424:	ldr	r4, [sp, #16]
   12428:	ldr	r9, [sp]
   1242c:	ldr	r0, [r4, #32]
   12430:	ldr	r1, [r0, #4]
   12434:	ldr	r7, [sp, #8]
   12438:	cmp	r1, #0
   1243c:	beq	1249c <Mat_VarReadNextInfo@plt+0x1394>
   12440:	mov	sl, #0
   12444:	ldr	r0, [r0]
   12448:	mla	r1, r7, r1, sl
   1244c:	mla	r4, r1, r0, r6
   12450:	ldr	r0, [sp, #16]
   12454:	mla	r1, r4, r5, r9
   12458:	ldr	r0, [r0, #8]
   1245c:	bl	12b9c <Mat_VarReadNextInfo@plt+0x1a94>
   12460:	mov	r0, r8
   12464:	bl	10f04 <printf@plt>
   12468:	ldr	r0, [sp, #12]
   1246c:	mla	r1, r4, r5, r0
   12470:	ldr	r4, [sp, #16]
   12474:	ldr	r0, [r4, #8]
   12478:	bl	12b9c <Mat_VarReadNextInfo@plt+0x1a94>
   1247c:	movw	r0, #17292	; 0x438c
   12480:	movt	r0, #1
   12484:	bl	10f04 <printf@plt>
   12488:	ldr	r0, [r4, #32]
   1248c:	add	sl, sl, #1
   12490:	ldr	r1, [r0, #4]
   12494:	cmp	sl, r1
   12498:	bcc	12444 <Mat_VarReadNextInfo@plt+0x133c>
   1249c:	mov	r0, #10
   124a0:	bl	11060 <putchar@plt>
   124a4:	ldr	r0, [r4, #32]
   124a8:	movw	r7, #20952	; 0x51d8
   124ac:	add	r6, r6, #1
   124b0:	movt	r7, #2
   124b4:	ldr	r1, [r7, #16]
   124b8:	ldr	r2, [r0]
   124bc:	cmp	r6, r2
   124c0:	bcc	123f8 <Mat_VarReadNextInfo@plt+0x12f0>
   124c4:	sub	r0, r1, #1
   124c8:	str	r0, [r7, #16]
   124cc:	mov	r0, #10
   124d0:	bl	11060 <putchar@plt>
   124d4:	ldr	r0, [r4, #32]
   124d8:	ldr	r2, [sp, #8]
   124dc:	ldr	r0, [r0, #8]
   124e0:	add	r2, r2, #1
   124e4:	cmp	r2, r0
   124e8:	bcc	123c4 <Mat_VarReadNextInfo@plt+0x12bc>
   124ec:	b	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   124f0:	movw	r0, #20952	; 0x51d8
   124f4:	movt	r0, #2
   124f8:	ldrb	r1, [r0]
   124fc:	mov	r0, r4
   12500:	sub	sp, fp, #28
   12504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12508:	b	11048 <Mat_VarPrint@plt>
   1250c:	ldr	r1, [r4, #36]	; 0x24
   12510:	cmp	r1, #0
   12514:	beq	12524 <Mat_VarReadNextInfo@plt+0x141c>
   12518:	movw	r0, #17194	; 0x432a
   1251c:	movt	r0, #1
   12520:	bl	10f58 <Mat_Message@plt>
   12524:	ldr	r1, [r4, #4]
   12528:	movw	r0, #17209	; 0x4339
   1252c:	movt	r0, #1
   12530:	bl	10f58 <Mat_Message@plt>
   12534:	ldr	r0, [r4, #4]
   12538:	cmp	r0, #0
   1253c:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12540:	ldr	r1, [r4, #32]
   12544:	cmp	r0, #2
   12548:	ldr	r5, [r1]
   1254c:	blt	125bc <Mat_VarReadNextInfo@plt+0x14b4>
   12550:	sub	r3, r0, #1
   12554:	mov	r2, #1
   12558:	cmp	r3, #4
   1255c:	bcc	125a4 <Mat_VarReadNextInfo@plt+0x149c>
   12560:	mov	r2, #1
   12564:	bic	ip, r3, #3
   12568:	add	r6, r1, #4
   1256c:	vdup.32	q8, r2
   12570:	orr	r2, ip, #1
   12574:	mov	r7, ip
   12578:	vmov.32	d16[0], r5
   1257c:	vld1.32	{d18-d19}, [r6]!
   12580:	subs	r7, r7, #4
   12584:	vmul.i32	q8, q9, q8
   12588:	bne	1257c <Mat_VarReadNextInfo@plt+0x1474>
   1258c:	vext.8	q9, q8, q8, #8
   12590:	cmp	r3, ip
   12594:	vmul.i32	q0, q8, q9
   12598:	vmul.i32	q8, q0, d0[1]
   1259c:	vmov.32	r5, d16[0]
   125a0:	beq	125bc <Mat_VarReadNextInfo@plt+0x14b4>
   125a4:	sub	r0, r0, r2
   125a8:	add	r1, r1, r2, lsl #2
   125ac:	ldr	r2, [r1], #4
   125b0:	subs	r0, r0, #1
   125b4:	mul	r5, r2, r5
   125b8:	bne	125ac <Mat_VarReadNextInfo@plt+0x14a4>
   125bc:	movw	r0, #17259	; 0x436b
   125c0:	movt	r0, #1
   125c4:	bl	10f58 <Mat_Message@plt>
   125c8:	movw	r0, #17257	; 0x4369
   125cc:	movt	r0, #1
   125d0:	bl	10f58 <Mat_Message@plt>
   125d4:	movw	r6, #20952	; 0x51d8
   125d8:	movt	r6, #2
   125dc:	ldr	r0, [r6, #16]
   125e0:	add	r0, r0, #1
   125e4:	str	r0, [r6, #16]
   125e8:	ldr	r4, [r4, #40]	; 0x28
   125ec:	cmp	r4, #0
   125f0:	cmpne	r5, #0
   125f4:	beq	1260c <Mat_VarReadNextInfo@plt+0x1504>
   125f8:	ldr	r0, [r4], #4
   125fc:	bl	12110 <Mat_VarReadNextInfo@plt+0x1008>
   12600:	subs	r5, r5, #1
   12604:	bne	125f8 <Mat_VarReadNextInfo@plt+0x14f0>
   12608:	ldr	r0, [r6, #16]
   1260c:	sub	r0, r0, #1
   12610:	str	r0, [r6, #16]
   12614:	b	12860 <Mat_VarReadNextInfo@plt+0x1758>
   12618:	movw	r0, #17282	; 0x4382
   1261c:	movt	r0, #1
   12620:	sub	sp, fp, #28
   12624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12628:	b	10f58 <Mat_Message@plt>
   1262c:	ldr	r0, [r4, #32]
   12630:	ldr	r1, [r0]
   12634:	cmp	r1, #0
   12638:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   1263c:	ldr	r8, [r4, #40]	; 0x28
   12640:	mov	r7, #0
   12644:	ldr	r0, [r0, #4]
   12648:	cmp	r0, #0
   1264c:	beq	126a8 <Mat_VarReadNextInfo@plt+0x15a0>
   12650:	ldr	r0, [r4, #8]
   12654:	mla	r1, r7, r5, r8
   12658:	bl	12b9c <Mat_VarReadNextInfo@plt+0x1a94>
   1265c:	mov	r0, #32
   12660:	bl	11060 <putchar@plt>
   12664:	ldr	r0, [r4, #32]
   12668:	ldr	r1, [r0, #4]
   1266c:	cmp	r1, #2
   12670:	bcc	126a8 <Mat_VarReadNextInfo@plt+0x15a0>
   12674:	mov	r6, #1
   12678:	ldr	r0, [r0]
   1267c:	mla	r0, r6, r0, r7
   12680:	mla	r1, r0, r5, r8
   12684:	ldr	r0, [r4, #8]
   12688:	bl	12b9c <Mat_VarReadNextInfo@plt+0x1a94>
   1268c:	mov	r0, #32
   12690:	bl	11060 <putchar@plt>
   12694:	ldr	r0, [r4, #32]
   12698:	add	r6, r6, #1
   1269c:	ldr	r1, [r0, #4]
   126a0:	cmp	r6, r1
   126a4:	bcc	12678 <Mat_VarReadNextInfo@plt+0x1570>
   126a8:	mov	r0, #10
   126ac:	bl	11060 <putchar@plt>
   126b0:	ldr	r0, [r4, #32]
   126b4:	add	r7, r7, #1
   126b8:	ldr	r1, [r0]
   126bc:	cmp	r7, r1
   126c0:	bcc	12644 <Mat_VarReadNextInfo@plt+0x153c>
   126c4:	b	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   126c8:	ldr	r0, [r4, #32]
   126cc:	ldr	r0, [r0, #8]
   126d0:	cmp	r0, #0
   126d4:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   126d8:	ldr	r0, [r4, #40]	; 0x28
   126dc:	movw	r6, #20952	; 0x51d8
   126e0:	movw	r5, #17486	; 0x444e
   126e4:	mov	r2, #0
   126e8:	movt	r6, #2
   126ec:	movt	r5, #1
   126f0:	str	r0, [sp, #8]
   126f4:	ldr	sl, [sp, #4]
   126f8:	ldr	r1, [r4, #36]	; 0x24
   126fc:	movw	r0, #17329	; 0x43b1
   12700:	str	r2, [sp, #12]
   12704:	movt	r0, #1
   12708:	bl	10f58 <Mat_Message@plt>
   1270c:	ldr	r0, [r6, #16]
   12710:	add	r1, r0, #1
   12714:	str	r1, [r6, #16]
   12718:	ldr	r0, [r4, #32]
   1271c:	ldr	r2, [r0]
   12720:	cmp	r2, #0
   12724:	beq	127cc <Mat_VarReadNextInfo@plt+0x16c4>
   12728:	mov	r7, #0
   1272c:	cmp	r1, #0
   12730:	beq	12758 <Mat_VarReadNextInfo@plt+0x1650>
   12734:	mov	r4, #0
   12738:	mov	r0, r5
   1273c:	bl	10f04 <printf@plt>
   12740:	ldr	r0, [r6, #16]
   12744:	add	r4, r4, #1
   12748:	cmp	r4, r0
   1274c:	bcc	12738 <Mat_VarReadNextInfo@plt+0x1630>
   12750:	ldr	r4, [sp, #16]
   12754:	ldr	r0, [r4, #32]
   12758:	ldr	r1, [r0, #4]
   1275c:	ldr	r6, [sp, #8]
   12760:	ldr	r8, [sp, #12]
   12764:	cmp	r1, #0
   12768:	beq	127a4 <Mat_VarReadNextInfo@plt+0x169c>
   1276c:	mov	r9, #0
   12770:	ldr	r0, [r0]
   12774:	mla	r1, r8, r1, r9
   12778:	mla	r0, r1, r0, r7
   1277c:	mla	r1, r0, sl, r6
   12780:	ldr	r0, [r4, #8]
   12784:	bl	12b9c <Mat_VarReadNextInfo@plt+0x1a94>
   12788:	mov	r0, #32
   1278c:	bl	11060 <putchar@plt>
   12790:	ldr	r0, [r4, #32]
   12794:	add	r9, r9, #1
   12798:	ldr	r1, [r0, #4]
   1279c:	cmp	r9, r1
   127a0:	bcc	12770 <Mat_VarReadNextInfo@plt+0x1668>
   127a4:	mov	r0, #10
   127a8:	bl	11060 <putchar@plt>
   127ac:	ldr	r0, [r4, #32]
   127b0:	movw	r6, #20952	; 0x51d8
   127b4:	add	r7, r7, #1
   127b8:	movt	r6, #2
   127bc:	ldr	r1, [r6, #16]
   127c0:	ldr	r2, [r0]
   127c4:	cmp	r7, r2
   127c8:	bcc	1272c <Mat_VarReadNextInfo@plt+0x1624>
   127cc:	sub	r0, r1, #1
   127d0:	str	r0, [r6, #16]
   127d4:	mov	r0, #10
   127d8:	bl	11060 <putchar@plt>
   127dc:	ldr	r0, [r4, #32]
   127e0:	ldr	r2, [sp, #12]
   127e4:	ldr	r0, [r0, #8]
   127e8:	add	r2, r2, #1
   127ec:	cmp	r2, r0
   127f0:	bcc	126f8 <Mat_VarReadNextInfo@plt+0x15f0>
   127f4:	sub	sp, fp, #28
   127f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127fc:	cmp	r5, #1
   12800:	blt	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   12804:	cmp	r6, #0
   12808:	beq	127f4 <Mat_VarReadNextInfo@plt+0x16ec>
   1280c:	movw	r0, #17246	; 0x435e
   12810:	mov	r1, r5
   12814:	movt	r0, #1
   12818:	bl	10f58 <Mat_Message@plt>
   1281c:	movw	r7, #20952	; 0x51d8
   12820:	movt	r7, #2
   12824:	ldr	r0, [r7, #16]
   12828:	add	r0, r0, #1
   1282c:	str	r0, [r7, #16]
   12830:	ldr	r4, [r4, #40]	; 0x28
   12834:	cmp	r4, #0
   12838:	mulne	r5, r6, r5
   1283c:	cmpne	r5, #0
   12840:	beq	12858 <Mat_VarReadNextInfo@plt+0x1750>
   12844:	ldr	r0, [r4], #4
   12848:	bl	12110 <Mat_VarReadNextInfo@plt+0x1008>
   1284c:	subs	r5, r5, #1
   12850:	bne	12844 <Mat_VarReadNextInfo@plt+0x173c>
   12854:	ldr	r0, [r7, #16]
   12858:	sub	r0, r0, #1
   1285c:	str	r0, [r7, #16]
   12860:	movw	r0, #18564	; 0x4884
   12864:	movt	r0, #1
   12868:	sub	sp, fp, #28
   1286c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12870:	b	10f58 <Mat_Message@plt>
   12874:	nop	{0}
   12878:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1287c:	add	fp, sp, #24
   12880:	vpush	{d8-d9}
   12884:	sub	sp, sp, #40	; 0x28
   12888:	add	r9, sp, #8
   1288c:	movw	r8, #20952	; 0x51d8
   12890:	mov	r4, r0
   12894:	vmov.i32	q8, #0	; 0x00000000
   12898:	mov	r0, r9
   1289c:	movt	r8, #2
   128a0:	vst1.64	{d16-d17}, [r0]!
   128a4:	vst1.64	{d16-d17}, [r0]
   128a8:	ldrb	r0, [r8, #8]
   128ac:	cmp	r0, #0
   128b0:	bne	128ec <Mat_VarReadNextInfo@plt+0x17e4>
   128b4:	movw	r0, #17442	; 0x4422
   128b8:	movw	r1, #17426	; 0x4412
   128bc:	movw	r2, #17431	; 0x4417
   128c0:	movw	r3, #17436	; 0x441c
   128c4:	movt	r0, #1
   128c8:	movt	r1, #1
   128cc:	movt	r2, #1
   128d0:	movt	r3, #1
   128d4:	str	r0, [sp]
   128d8:	movw	r0, #17386	; 0x43ea
   128dc:	movt	r0, #1
   128e0:	bl	10f04 <printf@plt>
   128e4:	mov	r0, #1
   128e8:	strb	r0, [r8, #8]
   128ec:	ldr	r1, [r4, #36]	; 0x24
   128f0:	movw	r0, #17448	; 0x4428
   128f4:	movt	r0, #1
   128f8:	bl	10f04 <printf@plt>
   128fc:	ldr	r0, [r4, #4]
   12900:	cmp	r0, #1
   12904:	blt	129a4 <Mat_VarReadNextInfo@plt+0x189c>
   12908:	ldr	r0, [r4, #32]
   1290c:	ldr	r1, [r0]
   12910:	movw	r0, #17454	; 0x442e
   12914:	movt	r0, #1
   12918:	bl	10f04 <printf@plt>
   1291c:	ldr	r0, [r4, #4]
   12920:	cmp	r0, #2
   12924:	blt	12990 <Mat_VarReadNextInfo@plt+0x1888>
   12928:	vldr	d8, [pc, #352]	; 12a90 <Mat_VarReadNextInfo@plt+0x1988>
   1292c:	movw	r5, #17459	; 0x4433
   12930:	mov	r6, #1
   12934:	mov	r7, #0
   12938:	vmov.f64	d9, #112	; 0x3f800000  1.0
   1293c:	movt	r5, #1
   12940:	ldr	r0, [r4, #32]
   12944:	add	r0, r0, r6, lsl #2
   12948:	vldr	s0, [r0]
   1294c:	vcvt.f64.u32	d0, s0
   12950:	bl	10fc4 <log10@plt>
   12954:	vrintp.f64	d16, d0
   12958:	vadd.f64	d16, d16, d9
   1295c:	vcmpe.f64	d16, d8
   12960:	vmrs	APSR_nzcv, fpscr
   12964:	bpl	12980 <Mat_VarReadNextInfo@plt+0x1878>
   12968:	ldr	r0, [r4, #32]
   1296c:	mov	r1, r5
   12970:	ldr	r2, [r0, r6, lsl #2]
   12974:	add	r0, r9, r7
   12978:	bl	110a8 <sprintf@plt>
   1297c:	add	r7, r0, r7
   12980:	ldr	r0, [r4, #4]
   12984:	add	r6, r6, #1
   12988:	cmp	r6, r0
   1298c:	blt	12940 <Mat_VarReadNextInfo@plt+0x1838>
   12990:	movw	r0, #17464	; 0x4438
   12994:	add	r1, sp, #8
   12998:	movt	r0, #1
   1299c:	bl	10f04 <printf@plt>
   129a0:	b	129b0 <Mat_VarReadNextInfo@plt+0x18a8>
   129a4:	movw	r0, #17470	; 0x443e
   129a8:	movt	r0, #1
   129ac:	bl	10f04 <printf@plt>
   129b0:	mov	r0, r4
   129b4:	bl	110d8 <Mat_VarGetSize@plt>
   129b8:	mov	r1, r0
   129bc:	ldrb	r0, [r8, #4]
   129c0:	cmp	r0, #1
   129c4:	bne	129f4 <Mat_VarReadNextInfo@plt+0x18ec>
   129c8:	cmp	r1, #1073741825	; 0x40000001
   129cc:	bcc	12a28 <Mat_VarReadNextInfo@plt+0x1920>
   129d0:	vldr	d16, [pc, #208]	; 12aa8 <Mat_VarReadNextInfo@plt+0x19a0>
   129d4:	vmov	s0, r1
   129d8:	movw	r0, #17491	; 0x4453
   129dc:	vcvt.f64.u32	d17, s0
   129e0:	movt	r0, #1
   129e4:	vmul.f64	d16, d17, d16
   129e8:	vmov	r2, r3, d16
   129ec:	bl	10f04 <printf@plt>
   129f0:	b	12a00 <Mat_VarReadNextInfo@plt+0x18f8>
   129f4:	movw	r0, #17526	; 0x4476
   129f8:	movt	r0, #1
   129fc:	bl	10f04 <printf@plt>
   12a00:	ldr	r0, [r4, #16]
   12a04:	movw	r1, #18784	; 0x4960
   12a08:	movt	r1, #1
   12a0c:	ldr	r1, [r1, r0, lsl #2]
   12a10:	movw	r0, #17534	; 0x447e
   12a14:	movt	r0, #1
   12a18:	bl	10f04 <printf@plt>
   12a1c:	sub	sp, fp, #40	; 0x28
   12a20:	vpop	{d8-d9}
   12a24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12a28:	cmp	r1, #1048576	; 0x100000
   12a2c:	bls	12a54 <Mat_VarReadNextInfo@plt+0x194c>
   12a30:	vldr	d16, [pc, #104]	; 12aa0 <Mat_VarReadNextInfo@plt+0x1998>
   12a34:	vmov	s0, r1
   12a38:	movw	r0, #17500	; 0x445c
   12a3c:	vcvt.f64.u32	d17, s0
   12a40:	movt	r0, #1
   12a44:	vmul.f64	d16, d17, d16
   12a48:	vmov	r2, r3, d16
   12a4c:	bl	10f04 <printf@plt>
   12a50:	b	12a00 <Mat_VarReadNextInfo@plt+0x18f8>
   12a54:	cmp	r1, #1024	; 0x400
   12a58:	bls	12a80 <Mat_VarReadNextInfo@plt+0x1978>
   12a5c:	vldr	d16, [pc, #52]	; 12a98 <Mat_VarReadNextInfo@plt+0x1990>
   12a60:	vmov	s0, r1
   12a64:	movw	r0, #17509	; 0x4465
   12a68:	vcvt.f64.u32	d17, s0
   12a6c:	movt	r0, #1
   12a70:	vmul.f64	d16, d17, d16
   12a74:	vmov	r2, r3, d16
   12a78:	bl	10f04 <printf@plt>
   12a7c:	b	12a00 <Mat_VarReadNextInfo@plt+0x18f8>
   12a80:	movw	r0, #17518	; 0x446e
   12a84:	movt	r0, #1
   12a88:	b	129fc <Mat_VarReadNextInfo@plt+0x18f4>
   12a8c:	nop	{0}
   12a90:	andeq	r0, r0, r0
   12a94:	submi	r0, r0, r0
   12a98:	andeq	r0, r0, r0
   12a9c:	svccc	0x00500000
   12aa0:	andeq	r0, r0, r0
   12aa4:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   12aa8:	andeq	r0, r0, r0
   12aac:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   12ab0:	push	{r4, r5, r6, sl, fp, lr}
   12ab4:	add	fp, sp, #16
   12ab8:	mov	r1, #40	; 0x28
   12abc:	mov	r4, r0
   12ac0:	bl	11018 <strchr@plt>
   12ac4:	mov	r5, r0
   12ac8:	mov	r0, r4
   12acc:	mov	r1, #41	; 0x29
   12ad0:	bl	11018 <strchr@plt>
   12ad4:	cmp	r0, #0
   12ad8:	beq	12af4 <Mat_VarReadNextInfo@plt+0x19ec>
   12adc:	cmp	r5, #0
   12ae0:	beq	12af0 <Mat_VarReadNextInfo@plt+0x19e8>
   12ae4:	cmp	r0, r5
   12ae8:	movcc	r5, r0
   12aec:	b	12af4 <Mat_VarReadNextInfo@plt+0x19ec>
   12af0:	mov	r5, r0
   12af4:	mov	r0, r4
   12af8:	mov	r1, #123	; 0x7b
   12afc:	bl	11018 <strchr@plt>
   12b00:	cmp	r0, #0
   12b04:	beq	12b20 <Mat_VarReadNextInfo@plt+0x1a18>
   12b08:	mov	r6, r0
   12b0c:	cmp	r5, #0
   12b10:	beq	12b24 <Mat_VarReadNextInfo@plt+0x1a1c>
   12b14:	cmp	r6, r5
   12b18:	movcs	r6, r5
   12b1c:	b	12b24 <Mat_VarReadNextInfo@plt+0x1a1c>
   12b20:	mov	r6, r5
   12b24:	mov	r0, r4
   12b28:	mov	r1, #125	; 0x7d
   12b2c:	bl	11018 <strchr@plt>
   12b30:	cmp	r0, #0
   12b34:	beq	12b50 <Mat_VarReadNextInfo@plt+0x1a48>
   12b38:	mov	r5, r0
   12b3c:	cmp	r6, #0
   12b40:	beq	12b54 <Mat_VarReadNextInfo@plt+0x1a4c>
   12b44:	cmp	r5, r6
   12b48:	movcs	r5, r6
   12b4c:	b	12b54 <Mat_VarReadNextInfo@plt+0x1a4c>
   12b50:	mov	r5, r6
   12b54:	mov	r0, r4
   12b58:	mov	r1, #46	; 0x2e
   12b5c:	bl	11018 <strchr@plt>
   12b60:	cmp	r0, #0
   12b64:	beq	12b88 <Mat_VarReadNextInfo@plt+0x1a80>
   12b68:	cmp	r5, #0
   12b6c:	beq	12b78 <Mat_VarReadNextInfo@plt+0x1a70>
   12b70:	cmp	r0, r5
   12b74:	movcs	r0, r5
   12b78:	cmp	r0, #0
   12b7c:	movne	r4, r0
   12b80:	mov	r0, r4
   12b84:	pop	{r4, r5, r6, sl, fp, pc}
   12b88:	mov	r0, r5
   12b8c:	cmp	r0, #0
   12b90:	movne	r4, r0
   12b94:	mov	r0, r4
   12b98:	pop	{r4, r5, r6, sl, fp, pc}
   12b9c:	sub	r0, r0, #1
   12ba0:	cmp	r0, #12
   12ba4:	bxhi	lr
   12ba8:	add	r2, pc, #0
   12bac:	ldr	pc, [r2, r0, lsl #2]
   12bb0:	andeq	r2, r1, r4, ror #23
   12bb4:	strdeq	r2, [r1], -r4
   12bb8:	andeq	r2, r1, r4, lsl #24
   12bbc:	andeq	r2, r1, r4, lsl ip
   12bc0:	andeq	r2, r1, r4, lsr #24
   12bc4:	andeq	r2, r1, r4, lsr ip
   12bc8:	andeq	r2, r1, r4, asr #24
   12bcc:	muleq	r1, r0, ip
   12bd0:	andeq	r2, r1, ip, asr ip
   12bd4:	muleq	r1, r0, ip
   12bd8:	muleq	r1, r0, ip
   12bdc:	andeq	r2, r1, r0, ror ip
   12be0:	andeq	r2, r1, r0, lsl #25
   12be4:	ldrsb	r1, [r1]
   12be8:	movw	r0, #17319	; 0x43a7
   12bec:	movt	r0, #1
   12bf0:	b	10f04 <printf@plt>
   12bf4:	ldrb	r1, [r1]
   12bf8:	movw	r0, #17324	; 0x43ac
   12bfc:	movt	r0, #1
   12c00:	b	10f04 <printf@plt>
   12c04:	ldrsh	r1, [r1]
   12c08:	movw	r0, #17311	; 0x439f
   12c0c:	movt	r0, #1
   12c10:	b	10f04 <printf@plt>
   12c14:	ldrh	r1, [r1]
   12c18:	movw	r0, #17315	; 0x43a3
   12c1c:	movt	r0, #1
   12c20:	b	10f04 <printf@plt>
   12c24:	ldr	r1, [r1]
   12c28:	movw	r0, #17221	; 0x4345
   12c2c:	movt	r0, #1
   12c30:	b	10f04 <printf@plt>
   12c34:	ldr	r1, [r1]
   12c38:	movw	r0, #17308	; 0x439c
   12c3c:	movt	r0, #1
   12c40:	b	10f04 <printf@plt>
   12c44:	vldr	s0, [r1]
   12c48:	vcvt.f64.f32	d16, s0
   12c4c:	movw	r0, #17295	; 0x438f
   12c50:	vmov	r2, r3, d16
   12c54:	movt	r0, #1
   12c58:	b	10f04 <printf@plt>
   12c5c:	vldr	d16, [r1]
   12c60:	movw	r0, #17295	; 0x438f
   12c64:	vmov	r2, r3, d16
   12c68:	movt	r0, #1
   12c6c:	b	10f04 <printf@plt>
   12c70:	ldrd	r2, [r1]
   12c74:	movw	r0, #17298	; 0x4392
   12c78:	movt	r0, #1
   12c7c:	b	10f04 <printf@plt>
   12c80:	ldrd	r2, [r1]
   12c84:	movw	r0, #17303	; 0x4397
   12c88:	movt	r0, #1
   12c8c:	b	10f04 <printf@plt>
   12c90:	bx	lr
   12c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c98:	add	fp, sp, #28
   12c9c:	sub	sp, sp, #12
   12ca0:	movw	r4, #18623	; 0x48bf
   12ca4:	mov	r6, r1
   12ca8:	mov	r7, r0
   12cac:	add	r5, r0, #1
   12cb0:	mov	r9, #0
   12cb4:	mov	sl, #0
   12cb8:	str	r3, [sp, #4]
   12cbc:	str	r2, [sp, #8]
   12cc0:	movt	r4, #1
   12cc4:	mov	r8, r7
   12cc8:	ldrb	r0, [r7, #1]!
   12ccc:	cmp	r0, #57	; 0x39
   12cd0:	ble	12d80 <Mat_VarReadNextInfo@plt+0x1c78>
   12cd4:	cmp	r0, #58	; 0x3a
   12cd8:	beq	12ce8 <Mat_VarReadNextInfo@plt+0x1be0>
   12cdc:	cmp	r0, #125	; 0x7d
   12ce0:	beq	12dd8 <Mat_VarReadNextInfo@plt+0x1cd0>
   12ce4:	b	12d64 <Mat_VarReadNextInfo@plt+0x1c5c>
   12ce8:	mov	r0, #0
   12cec:	mov	r1, r4
   12cf0:	strb	r0, [r8, #1]
   12cf4:	mov	r0, r5
   12cf8:	bl	10ee0 <strcmp@plt>
   12cfc:	cmp	r0, #0
   12d00:	beq	12d3c <Mat_VarReadNextInfo@plt+0x1c34>
   12d04:	mov	r0, r5
   12d08:	mov	r1, #0
   12d0c:	mov	r2, #10
   12d10:	bl	10ef8 <strtol@plt>
   12d14:	cmp	r9, #2
   12d18:	beq	12e10 <Mat_VarReadNextInfo@plt+0x1d08>
   12d1c:	cmp	r9, #1
   12d20:	beq	12d58 <Mat_VarReadNextInfo@plt+0x1c50>
   12d24:	cmp	r9, #0
   12d28:	bne	12eb8 <Mat_VarReadNextInfo@plt+0x1db0>
   12d2c:	ldr	r1, [sp, #8]
   12d30:	sub	r0, r0, #1
   12d34:	str	r0, [r1, sl, lsl #2]
   12d38:	b	12e34 <Mat_VarReadNextInfo@plt+0x1d2c>
   12d3c:	cmp	r9, #2
   12d40:	cmpne	r9, #1
   12d44:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12d48:	cmp	r9, #0
   12d4c:	bne	12eb8 <Mat_VarReadNextInfo@plt+0x1db0>
   12d50:	ldr	r0, [sp, #8]
   12d54:	b	12e2c <Mat_VarReadNextInfo@plt+0x1d24>
   12d58:	ldr	r1, [sp, #4]
   12d5c:	str	r0, [r1, sl, lsl #2]
   12d60:	b	12e34 <Mat_VarReadNextInfo@plt+0x1d2c>
   12d64:	cmp	r6, r7
   12d68:	subeq	sp, fp, #28
   12d6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d70:	mov	r8, r7
   12d74:	ldrb	r0, [r7, #1]!
   12d78:	cmp	r0, #57	; 0x39
   12d7c:	bgt	12cd4 <Mat_VarReadNextInfo@plt+0x1bcc>
   12d80:	cmp	r0, #41	; 0x29
   12d84:	beq	12dd8 <Mat_VarReadNextInfo@plt+0x1cd0>
   12d88:	cmp	r0, #44	; 0x2c
   12d8c:	bne	12d64 <Mat_VarReadNextInfo@plt+0x1c5c>
   12d90:	cmp	r9, #0
   12d94:	beq	12e58 <Mat_VarReadNextInfo@plt+0x1d50>
   12d98:	cmp	r9, #1
   12d9c:	beq	12da8 <Mat_VarReadNextInfo@plt+0x1ca0>
   12da0:	cmp	r9, #2
   12da4:	bne	12eec <Mat_VarReadNextInfo@plt+0x1de4>
   12da8:	mov	r0, #0
   12dac:	mov	r1, r4
   12db0:	strb	r0, [r8, #1]
   12db4:	mov	r0, r5
   12db8:	bl	10ee0 <strcmp@plt>
   12dbc:	cmp	r0, #0
   12dc0:	beq	12eb0 <Mat_VarReadNextInfo@plt+0x1da8>
   12dc4:	mov	r0, r5
   12dc8:	mov	r1, #0
   12dcc:	mov	r2, #10
   12dd0:	bl	10ef8 <strtol@plt>
   12dd4:	b	12ee4 <Mat_VarReadNextInfo@plt+0x1ddc>
   12dd8:	mov	r0, #0
   12ddc:	mov	r1, r4
   12de0:	strb	r0, [r8, #1]
   12de4:	mov	r0, r5
   12de8:	bl	10ee0 <strcmp@plt>
   12dec:	cmp	r0, #0
   12df0:	beq	12e1c <Mat_VarReadNextInfo@plt+0x1d14>
   12df4:	mov	r0, r5
   12df8:	mov	r1, #0
   12dfc:	mov	r2, #10
   12e00:	bl	10ef8 <strtol@plt>
   12e04:	cmp	r9, #2
   12e08:	cmpne	r9, #1
   12e0c:	bne	12e40 <Mat_VarReadNextInfo@plt+0x1d38>
   12e10:	ldr	r1, [fp, #8]
   12e14:	str	r0, [r1, sl, lsl #2]
   12e18:	b	12e34 <Mat_VarReadNextInfo@plt+0x1d2c>
   12e1c:	cmp	r9, #2
   12e20:	cmpne	r9, #1
   12e24:	bne	12e94 <Mat_VarReadNextInfo@plt+0x1d8c>
   12e28:	ldr	r0, [fp, #8]
   12e2c:	mvn	r1, #0
   12e30:	str	r1, [r0, sl, lsl #2]
   12e34:	add	r5, r8, #2
   12e38:	add	r9, r9, #1
   12e3c:	b	12d64 <Mat_VarReadNextInfo@plt+0x1c5c>
   12e40:	cmp	r9, #0
   12e44:	bne	12eb8 <Mat_VarReadNextInfo@plt+0x1db0>
   12e48:	ldr	r2, [sp, #8]
   12e4c:	sub	r1, r0, #1
   12e50:	str	r1, [r2, sl, lsl #2]
   12e54:	b	12e10 <Mat_VarReadNextInfo@plt+0x1d08>
   12e58:	mov	r0, #0
   12e5c:	mov	r1, r4
   12e60:	strb	r0, [r8, #1]
   12e64:	mov	r0, r5
   12e68:	bl	10ee0 <strcmp@plt>
   12e6c:	cmp	r0, #0
   12e70:	beq	12ed8 <Mat_VarReadNextInfo@plt+0x1dd0>
   12e74:	mov	r0, r5
   12e78:	mov	r1, #0
   12e7c:	mov	r2, #10
   12e80:	bl	10ef8 <strtol@plt>
   12e84:	ldr	r2, [sp, #8]
   12e88:	sub	r1, r0, #1
   12e8c:	str	r1, [r2, sl, lsl #2]
   12e90:	b	12ee4 <Mat_VarReadNextInfo@plt+0x1ddc>
   12e94:	cmp	r9, #0
   12e98:	bne	12eb8 <Mat_VarReadNextInfo@plt+0x1db0>
   12e9c:	ldr	r0, [sp, #8]
   12ea0:	mvn	r1, #0
   12ea4:	str	r1, [r0, sl, lsl #2]
   12ea8:	ldr	r0, [fp, #8]
   12eac:	b	12e30 <Mat_VarReadNextInfo@plt+0x1d28>
   12eb0:	mvn	r0, #0
   12eb4:	b	12ee4 <Mat_VarReadNextInfo@plt+0x1ddc>
   12eb8:	movw	r0, #20944	; 0x51d0
   12ebc:	movw	r1, #18627	; 0x48c3
   12ec0:	add	r2, sl, #1
   12ec4:	movt	r0, #2
   12ec8:	movt	r1, #1
   12ecc:	ldr	r0, [r0]
   12ed0:	bl	11030 <fprintf@plt>
   12ed4:	b	12e34 <Mat_VarReadNextInfo@plt+0x1d2c>
   12ed8:	ldr	r1, [sp, #8]
   12edc:	mvn	r0, #0
   12ee0:	str	r0, [r1, sl, lsl #2]
   12ee4:	ldr	r1, [fp, #8]
   12ee8:	str	r0, [r1, sl, lsl #2]
   12eec:	add	r5, r8, #2
   12ef0:	add	sl, sl, #1
   12ef4:	mov	r9, #0
   12ef8:	b	12d64 <Mat_VarReadNextInfo@plt+0x1c5c>
   12efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f00:	add	fp, sp, #28
   12f04:	sub	sp, sp, #4
   12f08:	ldr	ip, [fp, #8]
   12f0c:	cmp	r0, #1
   12f10:	mov	r9, #0
   12f14:	ldr	r6, [ip, #4]
   12f18:	cmpne	r6, r0
   12f1c:	bne	13068 <Mat_VarReadNextInfo@plt+0x1f60>
   12f20:	cmp	r0, #1
   12f24:	bne	12f48 <Mat_VarReadNextInfo@plt+0x1e40>
   12f28:	cmp	r6, #1
   12f2c:	blt	13074 <Mat_VarReadNextInfo@plt+0x1f6c>
   12f30:	ldr	r5, [ip, #32]
   12f34:	cmp	r6, #4
   12f38:	bcs	130b0 <Mat_VarReadNextInfo@plt+0x1fa8>
   12f3c:	mov	r4, #0
   12f40:	mov	r0, #1
   12f44:	b	130e8 <Mat_VarReadNextInfo@plt+0x1fe0>
   12f48:	blt	130a0 <Mat_VarReadNextInfo@plt+0x1f98>
   12f4c:	mov	lr, #0
   12f50:	mov	r8, #1
   12f54:	mov	r9, #1
   12f58:	mov	r4, #0
   12f5c:	ldr	r7, [r2, r4, lsl #2]
   12f60:	cmp	r7, #0
   12f64:	ble	13188 <Mat_VarReadNextInfo@plt+0x2080>
   12f68:	ldr	r6, [r3, r4, lsl #2]
   12f6c:	cmn	r6, #1
   12f70:	beq	12fb8 <Mat_VarReadNextInfo@plt+0x1eb0>
   12f74:	cmp	r6, #0
   12f78:	blt	12fc4 <Mat_VarReadNextInfo@plt+0x1ebc>
   12f7c:	ldr	r5, [ip, #32]
   12f80:	ldr	r5, [r5, r4, lsl #2]
   12f84:	cmp	r6, r5
   12f88:	bhi	1320c <Mat_VarReadNextInfo@plt+0x2104>
   12f8c:	ldr	sl, [r1, r4, lsl #2]
   12f90:	cmp	sl, r5
   12f94:	bcs	131b8 <Mat_VarReadNextInfo@plt+0x20b0>
   12f98:	cmp	r6, #1
   12f9c:	cmpge	sl, r6
   12fa0:	bgt	131b8 <Mat_VarReadNextInfo@plt+0x20b0>
   12fa4:	add	r5, sl, #1
   12fa8:	cmp	r6, r5
   12fac:	bne	13008 <Mat_VarReadNextInfo@plt+0x1f00>
   12fb0:	str	r8, [r3, r4, lsl #2]
   12fb4:	b	13054 <Mat_VarReadNextInfo@plt+0x1f4c>
   12fb8:	ldr	r5, [r1, r4, lsl #2]
   12fbc:	cmn	r5, #1
   12fc0:	beq	13040 <Mat_VarReadNextInfo@plt+0x1f38>
   12fc4:	ldr	r5, [ip, #32]
   12fc8:	cmp	r7, #1
   12fcc:	ldr	r5, [r5, r4, lsl #2]
   12fd0:	bne	12fe8 <Mat_VarReadNextInfo@plt+0x1ee0>
   12fd4:	str	r5, [r3, r4, lsl #2]
   12fd8:	ldr	r5, [r1, r4, lsl #2]
   12fdc:	cmn	r5, #1
   12fe0:	strle	lr, [r1, r4, lsl #2]
   12fe4:	b	13054 <Mat_VarReadNextInfo@plt+0x1f4c>
   12fe8:	ldr	r6, [r1, r4, lsl #2]
   12fec:	vmov	s0, r7
   12ff0:	vcvt.f64.s32	d16, s0
   12ff4:	mvn	r6, r6
   12ff8:	add	r5, r5, r6
   12ffc:	vmov	s0, r5
   13000:	vcvt.f64.u32	d17, s0
   13004:	b	13028 <Mat_VarReadNextInfo@plt+0x1f20>
   13008:	cmp	r6, #1
   1300c:	blt	13054 <Mat_VarReadNextInfo@plt+0x1f4c>
   13010:	mvn	r5, sl
   13014:	vmov	s0, r7
   13018:	add	r5, r6, r5
   1301c:	vcvt.f64.s32	d16, s0
   13020:	vmov	s0, r5
   13024:	vcvt.f64.s32	d17, s0
   13028:	vdiv.f64	d16, d17, d16
   1302c:	vcvtm.s32.f64	s0, d16
   13030:	vmov	r5, s0
   13034:	add	r5, r5, #1
   13038:	str	r5, [r3, r4, lsl #2]
   1303c:	b	13054 <Mat_VarReadNextInfo@plt+0x1f4c>
   13040:	str	r8, [r3, r4, lsl #2]
   13044:	ldr	r5, [ip, #32]
   13048:	ldr	r5, [r5, r4, lsl #2]
   1304c:	sub	r5, r5, #1
   13050:	str	r5, [r1, r4, lsl #2]
   13054:	ldr	r5, [r3, r4, lsl #2]
   13058:	add	r4, r4, #1
   1305c:	cmp	r4, r0
   13060:	mul	r9, r5, r9
   13064:	blt	12f5c <Mat_VarReadNextInfo@plt+0x1e54>
   13068:	mov	r0, r9
   1306c:	sub	sp, fp, #28
   13070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13074:	mov	r0, #1
   13078:	ldr	r7, [r2]
   1307c:	cmp	r7, #0
   13080:	bgt	1310c <Mat_VarReadNextInfo@plt+0x2004>
   13084:	movw	r0, #20944	; 0x51d0
   13088:	mov	r1, #23
   1308c:	movt	r0, #2
   13090:	ldr	r3, [r0]
   13094:	movw	r0, #18653	; 0x48dd
   13098:	movt	r0, #1
   1309c:	b	1328c <Mat_VarReadNextInfo@plt+0x2184>
   130a0:	mov	r9, #1
   130a4:	mov	r0, r9
   130a8:	sub	sp, fp, #28
   130ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130b0:	bic	r4, r6, #3
   130b4:	vmov.i32	q8, #1	; 0x00000001
   130b8:	mov	r7, r5
   130bc:	mov	r0, r4
   130c0:	vld1.32	{d18-d19}, [r7]!
   130c4:	subs	r0, r0, #4
   130c8:	vmul.i32	q8, q9, q8
   130cc:	bne	130c0 <Mat_VarReadNextInfo@plt+0x1fb8>
   130d0:	vext.8	q9, q8, q8, #8
   130d4:	cmp	r6, r4
   130d8:	vmul.i32	q0, q8, q9
   130dc:	vmul.i32	q8, q0, d0[1]
   130e0:	vmov.32	r0, d16[0]
   130e4:	beq	13100 <Mat_VarReadNextInfo@plt+0x1ff8>
   130e8:	sub	r6, r6, r4
   130ec:	add	r7, r5, r4, lsl #2
   130f0:	ldr	r5, [r7], #4
   130f4:	subs	r6, r6, #1
   130f8:	mul	r0, r5, r0
   130fc:	bne	130f0 <Mat_VarReadNextInfo@plt+0x1fe8>
   13100:	ldr	r7, [r2]
   13104:	cmp	r7, #0
   13108:	ble	13084 <Mat_VarReadNextInfo@plt+0x1f7c>
   1310c:	ldr	r6, [r3]
   13110:	cmp	r6, r0
   13114:	bgt	13274 <Mat_VarReadNextInfo@plt+0x216c>
   13118:	ldr	r4, [r1]
   1311c:	cmp	r4, r0
   13120:	bge	131f0 <Mat_VarReadNextInfo@plt+0x20e8>
   13124:	cmp	r6, #1
   13128:	cmpge	r4, r6
   1312c:	bgt	131f0 <Mat_VarReadNextInfo@plt+0x20e8>
   13130:	cmn	r6, #1
   13134:	beq	13160 <Mat_VarReadNextInfo@plt+0x2058>
   13138:	cmp	r6, #1
   1313c:	blt	131e0 <Mat_VarReadNextInfo@plt+0x20d8>
   13140:	mvn	r0, r4
   13144:	vmov	s0, r7
   13148:	add	r0, r6, r0
   1314c:	vcvt.f64.s32	d16, s0
   13150:	vmov	s0, r0
   13154:	vcvt.f64.s32	d17, s0
   13158:	vdiv.f64	d16, d17, d16
   1315c:	b	13254 <Mat_VarReadNextInfo@plt+0x214c>
   13160:	cmn	r4, #1
   13164:	beq	131d0 <Mat_VarReadNextInfo@plt+0x20c8>
   13168:	str	r0, [r3]
   1316c:	cmp	r7, #1
   13170:	ldr	r6, [r1]
   13174:	bne	13238 <Mat_VarReadNextInfo@plt+0x2130>
   13178:	cmn	r6, #1
   1317c:	bgt	131e0 <Mat_VarReadNextInfo@plt+0x20d8>
   13180:	mov	r0, #0
   13184:	b	131dc <Mat_VarReadNextInfo@plt+0x20d4>
   13188:	movw	r0, #20944	; 0x51d0
   1318c:	mov	r1, #23
   13190:	mov	r2, #1
   13194:	movt	r0, #2
   13198:	ldr	r3, [r0]
   1319c:	movw	r0, #18653	; 0x48dd
   131a0:	movt	r0, #1
   131a4:	bl	10f88 <fwrite@plt>
   131a8:	mov	r9, #0
   131ac:	mov	r0, r9
   131b0:	sub	sp, fp, #28
   131b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131b8:	movw	r0, #20944	; 0x51d0
   131bc:	movw	r1, #18748	; 0x493c
   131c0:	add	r2, r4, #1
   131c4:	movt	r0, #2
   131c8:	movt	r1, #1
   131cc:	b	13220 <Mat_VarReadNextInfo@plt+0x2118>
   131d0:	mov	r2, #1
   131d4:	sub	r0, r0, #1
   131d8:	str	r2, [r3]
   131dc:	str	r0, [r1]
   131e0:	ldr	r9, [r3]
   131e4:	mov	r0, r9
   131e8:	sub	sp, fp, #28
   131ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131f0:	movw	r0, #20944	; 0x51d0
   131f4:	mov	r1, #18
   131f8:	movt	r0, #2
   131fc:	ldr	r3, [r0]
   13200:	movw	r0, #18695	; 0x4907
   13204:	movt	r0, #1
   13208:	b	1328c <Mat_VarReadNextInfo@plt+0x2184>
   1320c:	movw	r0, #20944	; 0x51d0
   13210:	movw	r1, #18714	; 0x491a
   13214:	add	r2, r4, #1
   13218:	movt	r0, #2
   1321c:	movt	r1, #1
   13220:	ldr	r0, [r0]
   13224:	bl	11030 <fprintf@plt>
   13228:	mov	r9, #0
   1322c:	mov	r0, r9
   13230:	sub	sp, fp, #28
   13234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13238:	vldr	s0, [r2]
   1323c:	mvn	r1, r6
   13240:	add	r0, r0, r1
   13244:	vmov	s2, r0
   13248:	vcvt.f64.s32	d16, s2
   1324c:	vcvt.f64.s32	d17, s0
   13250:	vdiv.f64	d16, d16, d17
   13254:	vcvtm.s32.f64	s0, d16
   13258:	vmov	r0, s0
   1325c:	add	r0, r0, #1
   13260:	str	r0, [r3]
   13264:	ldr	r9, [r3]
   13268:	mov	r0, r9
   1326c:	sub	sp, fp, #28
   13270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13274:	movw	r0, #20944	; 0x51d0
   13278:	mov	r1, #17
   1327c:	movt	r0, #2
   13280:	ldr	r3, [r0]
   13284:	movw	r0, #18677	; 0x48f5
   13288:	movt	r0, #1
   1328c:	mov	r2, #1
   13290:	bl	10f88 <fwrite@plt>
   13294:	mov	r0, r9
   13298:	sub	sp, fp, #28
   1329c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000132a0 <getopt@@Base>:
   132a0:	push	{fp, lr}
   132a4:	mov	fp, sp
   132a8:	sub	sp, sp, #8
   132ac:	mov	r3, #0
   132b0:	str	r3, [sp]
   132b4:	str	r3, [sp, #4]
   132b8:	mov	r3, #0
   132bc:	bl	132c8 <getopt@@Base+0x28>
   132c0:	mov	sp, fp
   132c4:	pop	{fp, pc}
   132c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132cc:	add	fp, sp, #28
   132d0:	sub	sp, sp, #36	; 0x24
   132d4:	mov	sl, r0
   132d8:	mvn	r0, #0
   132dc:	cmp	r2, #0
   132e0:	beq	13ab4 <getopt@@Base+0x814>
   132e4:	str	r3, [sp, #20]
   132e8:	ldr	r5, [fp, #12]
   132ec:	mov	r6, r2
   132f0:	mov	r4, r1
   132f4:	ldr	r0, [pc, #2084]	; 13b20 <getopt@@Base+0x880>
   132f8:	add	r0, pc, r0
   132fc:	bl	10fa0 <getenv@plt>
   13300:	ldrb	r1, [r6]
   13304:	cmp	r1, #45	; 0x2d
   13308:	bne	13314 <getopt@@Base+0x74>
   1330c:	orr	r3, r5, #2
   13310:	b	13330 <getopt@@Base+0x90>
   13314:	bic	r3, r5, #1
   13318:	cmp	r1, #43	; 0x2b
   1331c:	moveq	r5, r3
   13320:	cmp	r0, #0
   13324:	movne	r5, r3
   13328:	cmp	r1, #43	; 0x2b
   1332c:	bne	13338 <getopt@@Base+0x98>
   13330:	add	r6, r6, #1
   13334:	b	1333c <getopt@@Base+0x9c>
   13338:	mov	r3, r5
   1333c:	str	r0, [sp, #8]
   13340:	ldr	r9, [pc, #2012]	; 13b24 <getopt@@Base+0x884>
   13344:	ldr	r9, [pc, r9]
   13348:	ldr	r2, [r9]
   1334c:	cmp	r2, #0
   13350:	beq	1351c <getopt@@Base+0x27c>
   13354:	ldr	r0, [pc, #2004]	; 13b30 <getopt@@Base+0x890>
   13358:	mov	r1, #0
   1335c:	ldr	r0, [pc, r0]
   13360:	str	r1, [r0]
   13364:	ldr	r0, [pc, #1992]	; 13b34 <getopt@@Base+0x894>
   13368:	ldr	r0, [pc, r0]
   1336c:	ldr	r0, [r0]
   13370:	cmp	r0, #0
   13374:	bne	13544 <getopt@@Base+0x2a4>
   13378:	tst	r3, #2
   1337c:	str	r6, [sp, #16]
   13380:	str	r3, [sp, #12]
   13384:	bne	1356c <getopt@@Base+0x2cc>
   13388:	ldr	r6, [pc, #1964]	; 13b3c <getopt@@Base+0x89c>
   1338c:	ldr	r5, [pc, #1964]	; 13b40 <getopt@@Base+0x8a0>
   13390:	and	r3, r3, #1
   13394:	mov	ip, #0
   13398:	ldr	r5, [pc, r5]
   1339c:	add	r6, pc, r6
   133a0:	str	sl, [sp, #28]
   133a4:	str	r3, [sp, #24]
   133a8:	cmp	r1, #0
   133ac:	bne	133d8 <getopt@@Base+0x138>
   133b0:	b	133c8 <getopt@@Base+0x128>
   133b4:	add	r2, r2, #1
   133b8:	mov	r1, #0
   133bc:	str	r2, [r9]
   133c0:	cmp	r1, #0
   133c4:	bne	133d8 <getopt@@Base+0x138>
   133c8:	ldr	lr, [r6, #8]
   133cc:	ldrb	r8, [lr]
   133d0:	cmp	r8, #0
   133d4:	bne	1374c <getopt@@Base+0x4ac>
   133d8:	cmp	r2, sl
   133dc:	str	ip, [r5]
   133e0:	bge	135e4 <getopt@@Base+0x344>
   133e4:	ldr	r7, [r4, r2, lsl #2]
   133e8:	str	r7, [r6, #8]
   133ec:	ldrb	r0, [r7]
   133f0:	cmp	r0, #45	; 0x2d
   133f4:	bne	13404 <getopt@@Base+0x164>
   133f8:	ldrb	r8, [r7, #1]
   133fc:	cmp	r8, #0
   13400:	bne	13704 <getopt@@Base+0x464>
   13404:	ldr	r0, [pc, #1848]	; 13b44 <getopt@@Base+0x8a4>
   13408:	cmp	r3, #0
   1340c:	add	r0, pc, r0
   13410:	str	r0, [r6, #8]
   13414:	beq	136dc <getopt@@Base+0x43c>
   13418:	ldr	lr, [r6, #4]
   1341c:	cmn	lr, #1
   13420:	beq	13514 <getopt@@Base+0x274>
   13424:	ldr	r7, [pc, #1820]	; 13b48 <getopt@@Base+0x8a8>
   13428:	ldr	r7, [pc, r7]
   1342c:	cmn	r7, #1
   13430:	beq	133b4 <getopt@@Base+0x114>
   13434:	sub	r1, r2, r7
   13438:	sub	r5, r7, lr
   1343c:	str	r2, [sp, #32]
   13440:	sdiv	r0, r5, r1
   13444:	mov	sl, r1
   13448:	mls	r0, r0, r1, r5
   1344c:	cmp	r0, #0
   13450:	beq	13470 <getopt@@Base+0x1d0>
   13454:	mov	r2, r1
   13458:	mov	sl, r0
   1345c:	sdiv	r0, r2, r0
   13460:	mls	r0, r0, sl, r2
   13464:	mov	r2, sl
   13468:	cmp	r0, #0
   1346c:	bne	13458 <getopt@@Base+0x1b8>
   13470:	cmp	sl, #1
   13474:	blt	134d4 <getopt@@Base+0x234>
   13478:	ldr	r0, [sp, #32]
   1347c:	sub	r0, r0, lr
   13480:	sdiv	r9, r0, sl
   13484:	cmp	r9, #1
   13488:	blt	134d4 <getopt@@Base+0x234>
   1348c:	mov	r0, #0
   13490:	add	r8, r0, r7
   13494:	mov	r2, r9
   13498:	ldr	ip, [r4, r8, lsl #2]
   1349c:	mov	r6, r8
   134a0:	cmp	r6, r7
   134a4:	mov	r3, r1
   134a8:	rsbge	r3, r5, #0
   134ac:	subs	r2, r2, #1
   134b0:	add	r6, r3, r6
   134b4:	ldr	r3, [r4, r6, lsl #2]
   134b8:	str	ip, [r4, r6, lsl #2]
   134bc:	mov	ip, r3
   134c0:	str	r3, [r4, r8, lsl #2]
   134c4:	bne	134a0 <getopt@@Base+0x200>
   134c8:	add	r0, r0, #1
   134cc:	cmp	r0, sl
   134d0:	bne	13490 <getopt@@Base+0x1f0>
   134d4:	ldr	r2, [sp, #32]
   134d8:	ldr	r6, [pc, #1644]	; 13b4c <getopt@@Base+0x8ac>
   134dc:	mvn	r1, #0
   134e0:	mov	ip, #0
   134e4:	add	r0, lr, r2
   134e8:	add	r6, pc, r6
   134ec:	sub	r0, r0, r7
   134f0:	str	r1, [r6]
   134f4:	str	r0, [r6, #4]
   134f8:	ldr	r9, [pc, #1616]	; 13b50 <getopt@@Base+0x8b0>
   134fc:	ldr	r9, [pc, r9]
   13500:	ldr	sl, [sp, #28]
   13504:	ldr	r3, [sp, #24]
   13508:	ldr	r5, [pc, #1604]	; 13b54 <getopt@@Base+0x8b4>
   1350c:	ldr	r5, [pc, r5]
   13510:	b	133b4 <getopt@@Base+0x114>
   13514:	str	r2, [r6, #4]
   13518:	b	133b4 <getopt@@Base+0x114>
   1351c:	mov	r2, #1
   13520:	mov	r1, #0
   13524:	str	r2, [r9]
   13528:	ldr	r0, [pc, #1528]	; 13b28 <getopt@@Base+0x888>
   1352c:	ldr	r0, [pc, r0]
   13530:	str	r2, [r0]
   13534:	ldr	r0, [pc, #1520]	; 13b2c <getopt@@Base+0x88c>
   13538:	ldr	r0, [pc, r0]
   1353c:	str	r1, [r0]
   13540:	mov	r0, #1
   13544:	ldr	r1, [pc, #1516]	; 13b38 <getopt@@Base+0x898>
   13548:	mvn	r7, #0
   1354c:	add	r1, pc, r1
   13550:	str	r7, [r1]
   13554:	str	r7, [r1, #4]
   13558:	mov	r1, r0
   1355c:	tst	r3, #2
   13560:	str	r6, [sp, #16]
   13564:	str	r3, [sp, #12]
   13568:	beq	13388 <getopt@@Base+0xe8>
   1356c:	cmp	r1, #0
   13570:	beq	136c0 <getopt@@Base+0x420>
   13574:	ldr	r0, [pc, #1504]	; 13b5c <getopt@@Base+0x8bc>
   13578:	cmp	r2, sl
   1357c:	mov	r1, #0
   13580:	ldr	r0, [pc, r0]
   13584:	str	r1, [r0]
   13588:	bge	135e4 <getopt@@Base+0x344>
   1358c:	ldr	r7, [r4, r2, lsl #2]
   13590:	ldr	r0, [pc, #1500]	; 13b74 <getopt@@Base+0x8d4>
   13594:	add	r0, pc, r0
   13598:	str	r7, [r0, #8]
   1359c:	ldrb	r1, [r7]
   135a0:	cmp	r1, #45	; 0x2d
   135a4:	bne	135b8 <getopt@@Base+0x318>
   135a8:	mov	lr, r7
   135ac:	ldrb	r8, [lr, #1]!
   135b0:	cmp	r8, #0
   135b4:	bne	13708 <getopt@@Base+0x468>
   135b8:	ldr	r1, [pc, #1464]	; 13b78 <getopt@@Base+0x8d8>
   135bc:	add	r1, pc, r1
   135c0:	str	r1, [r0, #8]
   135c4:	add	r0, r2, #1
   135c8:	str	r0, [r9]
   135cc:	ldr	r0, [pc, #1448]	; 13b7c <getopt@@Base+0x8dc>
   135d0:	ldr	r0, [pc, r0]
   135d4:	str	r7, [r0]
   135d8:	mov	r0, #1
   135dc:	sub	sp, fp, #28
   135e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135e4:	ldr	r1, [pc, #1396]	; 13b60 <getopt@@Base+0x8c0>
   135e8:	ldr	r0, [pc, #1396]	; 13b64 <getopt@@Base+0x8c4>
   135ec:	add	r1, pc, r1
   135f0:	add	r0, pc, r0
   135f4:	str	r0, [r1, #8]
   135f8:	ldr	lr, [r1, #4]
   135fc:	ldr	r3, [pc, #1380]	; 13b68 <getopt@@Base+0x8c8>
   13600:	ldr	r3, [pc, r3]
   13604:	cmn	r3, #1
   13608:	beq	136e8 <getopt@@Base+0x448>
   1360c:	sub	r9, r2, r3
   13610:	sub	r6, r3, lr
   13614:	sdiv	r0, r6, r9
   13618:	mov	ip, r9
   1361c:	mls	r0, r0, r9, r6
   13620:	cmp	r0, #0
   13624:	beq	13644 <getopt@@Base+0x3a4>
   13628:	mov	r1, r9
   1362c:	mov	ip, r0
   13630:	sdiv	r0, r1, r0
   13634:	mls	r0, r0, ip, r1
   13638:	mov	r1, ip
   1363c:	cmp	r0, #0
   13640:	bne	1362c <getopt@@Base+0x38c>
   13644:	cmp	ip, #1
   13648:	blt	136a4 <getopt@@Base+0x404>
   1364c:	sub	r0, r2, lr
   13650:	sdiv	r8, r0, ip
   13654:	cmp	r8, #1
   13658:	blt	136a4 <getopt@@Base+0x404>
   1365c:	mov	sl, #0
   13660:	add	r5, sl, r3
   13664:	mov	r0, r8
   13668:	ldr	r1, [r4, r5, lsl #2]
   1366c:	mov	r2, r5
   13670:	cmp	r2, r3
   13674:	mov	r7, r9
   13678:	rsbge	r7, r6, #0
   1367c:	subs	r0, r0, #1
   13680:	add	r2, r7, r2
   13684:	ldr	r7, [r4, r2, lsl #2]
   13688:	str	r1, [r4, r2, lsl #2]
   1368c:	mov	r1, r7
   13690:	str	r7, [r4, r5, lsl #2]
   13694:	bne	13670 <getopt@@Base+0x3d0>
   13698:	add	sl, sl, #1
   1369c:	cmp	sl, ip
   136a0:	bne	13660 <getopt@@Base+0x3c0>
   136a4:	add	lr, r9, lr
   136a8:	ldr	r9, [pc, #1212]	; 13b6c <getopt@@Base+0x8cc>
   136ac:	ldr	r9, [pc, r9]
   136b0:	ldr	r1, [pc, #1208]	; 13b70 <getopt@@Base+0x8d0>
   136b4:	add	r1, pc, r1
   136b8:	str	lr, [r9]
   136bc:	b	136f0 <getopt@@Base+0x450>
   136c0:	ldr	r0, [pc, #1168]	; 13b58 <getopt@@Base+0x8b8>
   136c4:	add	r0, pc, r0
   136c8:	ldr	lr, [r0, #8]
   136cc:	ldrb	r8, [lr]
   136d0:	cmp	r8, #0
   136d4:	bne	1374c <getopt@@Base+0x4ac>
   136d8:	b	13574 <getopt@@Base+0x2d4>
   136dc:	mvn	r0, #0
   136e0:	sub	sp, fp, #28
   136e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136e8:	cmn	lr, #1
   136ec:	strne	lr, [r9]
   136f0:	mvn	r0, #0
   136f4:	str	r0, [r1]
   136f8:	str	r0, [r1, #4]
   136fc:	sub	sp, fp, #28
   13700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13704:	add	lr, r7, #1
   13708:	ldr	r1, [pc, #1136]	; 13b80 <getopt@@Base+0x8e0>
   1370c:	add	r1, pc, r1
   13710:	ldr	r6, [r1, #4]
   13714:	ldr	r3, [pc, #1128]	; 13b84 <getopt@@Base+0x8e4>
   13718:	ldr	r3, [pc, r3]
   1371c:	cmn	r6, #1
   13720:	beq	13730 <getopt@@Base+0x490>
   13724:	cmn	r3, #1
   13728:	moveq	r3, r2
   1372c:	streq	r2, [r1]
   13730:	cmp	r8, #45	; 0x2d
   13734:	str	lr, [r1, #8]
   13738:	bne	1374c <getopt@@Base+0x4ac>
   1373c:	ldrb	r0, [r7, #2]
   13740:	mov	r8, #45	; 0x2d
   13744:	cmp	r0, #0
   13748:	beq	13934 <getopt@@Base+0x694>
   1374c:	ldr	r0, [sp, #20]
   13750:	ldr	r5, [fp, #8]
   13754:	cmp	r0, #0
   13758:	ldrne	r0, [r4, r2, lsl #2]
   1375c:	cmpne	lr, r0
   13760:	bne	137ec <getopt@@Base+0x54c>
   13764:	ldr	r6, [pc, #1068]	; 13b98 <getopt@@Base+0x8f8>
   13768:	add	r7, lr, #1
   1376c:	cmp	r8, #58	; 0x3a
   13770:	add	r6, pc, r6
   13774:	str	r7, [r6, #8]
   13778:	beq	13850 <getopt@@Base+0x5b0>
   1377c:	cmp	r8, #45	; 0x2d
   13780:	bne	13790 <getopt@@Base+0x4f0>
   13784:	ldrb	r0, [r7]
   13788:	cmp	r0, #0
   1378c:	bne	13864 <getopt@@Base+0x5c4>
   13790:	ldr	r0, [sp, #16]
   13794:	mov	r1, r8
   13798:	bl	11018 <strchr@plt>
   1379c:	cmp	r0, #0
   137a0:	beq	13834 <getopt@@Base+0x594>
   137a4:	ldr	r2, [sp, #20]
   137a8:	ldrb	r1, [r0, #1]
   137ac:	cmp	r2, #0
   137b0:	beq	137c0 <getopt@@Base+0x520>
   137b4:	cmp	r8, #87	; 0x57
   137b8:	cmpeq	r1, #59	; 0x3b
   137bc:	beq	138d4 <getopt@@Base+0x634>
   137c0:	cmp	r1, #58	; 0x3a
   137c4:	bne	138c4 <getopt@@Base+0x624>
   137c8:	ldr	r1, [pc, #1008]	; 13bc0 <getopt@@Base+0x920>
   137cc:	mov	r2, #0
   137d0:	ldr	r1, [pc, r1]
   137d4:	str	r2, [r1]
   137d8:	ldrb	r2, [r7]
   137dc:	cmp	r2, #0
   137e0:	beq	13a70 <getopt@@Base+0x7d0>
   137e4:	str	r7, [r1]
   137e8:	b	13a98 <getopt@@Base+0x7f8>
   137ec:	ldr	r0, [sp, #12]
   137f0:	tst	r0, #4
   137f4:	bne	13800 <getopt@@Base+0x560>
   137f8:	cmp	r8, #45	; 0x2d
   137fc:	bne	13764 <getopt@@Base+0x4c4>
   13800:	ldr	r7, [pc, #908]	; 13b94 <getopt@@Base+0x8f4>
   13804:	mov	r0, #0
   13808:	cmp	r8, #58	; 0x3a
   1380c:	add	r7, pc, r7
   13810:	str	r0, [r7, #12]
   13814:	beq	13a2c <getopt@@Base+0x78c>
   13818:	cmp	r8, #45	; 0x2d
   1381c:	bne	13a18 <getopt@@Base+0x778>
   13820:	add	r2, lr, #1
   13824:	mov	r1, #1
   13828:	str	r2, [r7, #8]
   1382c:	str	r1, [r7, #12]
   13830:	b	13a2c <getopt@@Base+0x78c>
   13834:	cmp	r8, #45	; 0x2d
   13838:	bne	13850 <getopt@@Base+0x5b0>
   1383c:	ldrb	r0, [r7]
   13840:	cmp	r0, #0
   13844:	mvn	r0, #0
   13848:	bne	13864 <getopt@@Base+0x5c4>
   1384c:	b	13ab4 <getopt@@Base+0x814>
   13850:	ldrb	r0, [r7]
   13854:	cmp	r0, #0
   13858:	ldreq	r0, [r9]
   1385c:	addeq	r0, r0, #1
   13860:	streq	r0, [r9]
   13864:	ldr	r0, [pc, #816]	; 13b9c <getopt@@Base+0x8fc>
   13868:	ldr	r0, [pc, r0]
   1386c:	ldr	r0, [r0]
   13870:	cmp	r0, #0
   13874:	beq	138ac <getopt@@Base+0x60c>
   13878:	ldr	r0, [sp, #16]
   1387c:	ldrb	r0, [r0]
   13880:	cmp	r0, #58	; 0x3a
   13884:	beq	138ac <getopt@@Base+0x60c>
   13888:	ldr	r1, [pc, #784]	; 13ba0 <getopt@@Base+0x900>
   1388c:	ldr	r0, [pc, #784]	; 13ba4 <getopt@@Base+0x904>
   13890:	ldr	r2, [sp, #8]
   13894:	add	r1, pc, r1
   13898:	add	r0, pc, r0
   1389c:	cmp	r2, #0
   138a0:	movne	r0, r1
   138a4:	mov	r1, r8
   138a8:	bl	11024 <warnx@plt>
   138ac:	ldr	r0, [pc, #756]	; 13ba8 <getopt@@Base+0x908>
   138b0:	ldr	r0, [pc, r0]
   138b4:	str	r8, [r0]
   138b8:	mov	r0, #63	; 0x3f
   138bc:	sub	sp, fp, #28
   138c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138c4:	ldrb	r0, [r7]
   138c8:	cmp	r0, #0
   138cc:	bne	13ab0 <getopt@@Base+0x810>
   138d0:	b	13aa4 <getopt@@Base+0x804>
   138d4:	ldrb	r0, [r7]
   138d8:	ldr	r1, [sp, #12]
   138dc:	cmp	r0, #0
   138e0:	bne	13900 <getopt@@Base+0x660>
   138e4:	ldr	r0, [r9]
   138e8:	add	r0, r0, #1
   138ec:	cmp	r0, sl
   138f0:	str	r0, [r9]
   138f4:	bge	13abc <getopt@@Base+0x81c>
   138f8:	ldr	r0, [r4, r0, lsl #2]
   138fc:	str	r0, [r6, #8]
   13900:	mov	r0, #2
   13904:	mov	r3, r5
   13908:	str	r0, [r6, #12]
   1390c:	mov	r0, #0
   13910:	stm	sp, {r0, r1}
   13914:	mov	r0, r4
   13918:	ldr	r1, [sp, #16]
   1391c:	bl	13c1c <getopt_long_only@@Base+0x28>
   13920:	ldr	r1, [pc, #660]	; 13bbc <getopt@@Base+0x91c>
   13924:	add	r1, pc, r1
   13928:	str	r1, [r6, #8]
   1392c:	sub	sp, fp, #28
   13930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13934:	ldr	r0, [pc, #588]	; 13b88 <getopt@@Base+0x8e8>
   13938:	cmn	r3, #1
   1393c:	add	r0, pc, r0
   13940:	str	r0, [r1, #8]
   13944:	add	r0, r2, #1
   13948:	str	r0, [r9]
   1394c:	beq	136f0 <getopt@@Base+0x450>
   13950:	sub	sl, r0, r3
   13954:	mov	r9, r6
   13958:	sub	r6, r3, r6
   1395c:	str	r0, [sp, #32]
   13960:	sdiv	r0, r6, sl
   13964:	mov	r8, sl
   13968:	mls	r0, r0, sl, r6
   1396c:	cmp	r0, #0
   13970:	beq	13990 <getopt@@Base+0x6f0>
   13974:	mov	r1, sl
   13978:	mov	r8, r0
   1397c:	sdiv	r0, r1, r0
   13980:	mls	r0, r0, r8, r1
   13984:	mov	r1, r8
   13988:	cmp	r0, #0
   1398c:	bne	13978 <getopt@@Base+0x6d8>
   13990:	cmp	r8, #1
   13994:	blt	139f4 <getopt@@Base+0x754>
   13998:	ldr	r0, [sp, #32]
   1399c:	sub	r0, r0, r9
   139a0:	sdiv	lr, r0, r8
   139a4:	cmp	lr, #1
   139a8:	blt	139f4 <getopt@@Base+0x754>
   139ac:	mov	r1, #0
   139b0:	add	r5, r1, r3
   139b4:	mov	r0, lr
   139b8:	ldr	ip, [r4, r5, lsl #2]
   139bc:	mov	r2, r5
   139c0:	cmp	r2, r3
   139c4:	mov	r7, sl
   139c8:	rsbge	r7, r6, #0
   139cc:	subs	r0, r0, #1
   139d0:	add	r2, r7, r2
   139d4:	ldr	r7, [r4, r2, lsl #2]
   139d8:	str	ip, [r4, r2, lsl #2]
   139dc:	mov	ip, r7
   139e0:	str	r7, [r4, r5, lsl #2]
   139e4:	bne	139c0 <getopt@@Base+0x720>
   139e8:	add	r1, r1, #1
   139ec:	cmp	r1, r8
   139f0:	bne	139b0 <getopt@@Base+0x710>
   139f4:	ldr	r0, [sp, #32]
   139f8:	ldr	r1, [pc, #396]	; 13b8c <getopt@@Base+0x8ec>
   139fc:	ldr	r1, [pc, r1]
   13a00:	add	r0, r9, r0
   13a04:	sub	r0, r0, r3
   13a08:	str	r0, [r1]
   13a0c:	ldr	r1, [pc, #380]	; 13b90 <getopt@@Base+0x8f0>
   13a10:	add	r1, pc, r1
   13a14:	b	136f0 <getopt@@Base+0x450>
   13a18:	ldr	r0, [sp, #16]
   13a1c:	mov	r1, r8
   13a20:	bl	11018 <strchr@plt>
   13a24:	cmp	r0, #0
   13a28:	movwne	r0, #1
   13a2c:	str	r0, [sp]
   13a30:	ldr	r0, [sp, #12]
   13a34:	ldr	r1, [sp, #16]
   13a38:	ldr	r2, [sp, #20]
   13a3c:	mov	r3, r5
   13a40:	str	r0, [sp, #4]
   13a44:	mov	r0, r4
   13a48:	bl	13c1c <getopt_long_only@@Base+0x28>
   13a4c:	cmn	r0, #1
   13a50:	ldrne	r1, [pc, #368]	; 13bc8 <getopt@@Base+0x928>
   13a54:	addne	r1, pc, r1
   13a58:	strne	r1, [r7, #8]
   13a5c:	subne	sp, fp, #28
   13a60:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a64:	ldr	lr, [r7, #8]
   13a68:	ldrb	r8, [lr]
   13a6c:	b	13764 <getopt@@Base+0x4c4>
   13a70:	ldrb	r0, [r0, #2]
   13a74:	cmp	r0, #58	; 0x3a
   13a78:	beq	13a98 <getopt@@Base+0x7f8>
   13a7c:	ldr	r0, [r9]
   13a80:	add	r0, r0, #1
   13a84:	cmp	r0, sl
   13a88:	str	r0, [r9]
   13a8c:	bge	13abc <getopt@@Base+0x81c>
   13a90:	ldr	r0, [r4, r0, lsl #2]
   13a94:	str	r0, [r1]
   13a98:	ldr	r0, [pc, #292]	; 13bc4 <getopt@@Base+0x924>
   13a9c:	add	r0, pc, r0
   13aa0:	str	r0, [r6, #8]
   13aa4:	ldr	r0, [r9]
   13aa8:	add	r0, r0, #1
   13aac:	str	r0, [r9]
   13ab0:	mov	r0, r8
   13ab4:	sub	sp, fp, #28
   13ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13abc:	ldr	r0, [pc, #232]	; 13bac <getopt@@Base+0x90c>
   13ac0:	add	r0, pc, r0
   13ac4:	str	r0, [r6, #8]
   13ac8:	ldr	r0, [pc, #224]	; 13bb0 <getopt@@Base+0x910>
   13acc:	ldr	r0, [pc, r0]
   13ad0:	ldr	r0, [r0]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13afc <getopt@@Base+0x85c>
   13adc:	ldr	r0, [sp, #16]
   13ae0:	ldrb	r0, [r0]
   13ae4:	cmp	r0, #58	; 0x3a
   13ae8:	beq	13afc <getopt@@Base+0x85c>
   13aec:	ldr	r0, [pc, #192]	; 13bb4 <getopt@@Base+0x914>
   13af0:	mov	r1, r8
   13af4:	add	r0, pc, r0
   13af8:	bl	11024 <warnx@plt>
   13afc:	ldr	r0, [pc, #180]	; 13bb8 <getopt@@Base+0x918>
   13b00:	ldr	r0, [pc, r0]
   13b04:	str	r8, [r0]
   13b08:	ldr	r0, [sp, #16]
   13b0c:	ldrb	r0, [r0]
   13b10:	cmp	r0, #58	; 0x3a
   13b14:	movwne	r0, #63	; 0x3f
   13b18:	sub	sp, fp, #28
   13b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b20:	andeq	r1, r0, r8, lsr #13
   13b24:	muleq	r1, r8, sp
   13b28:	andeq	r1, r1, r4, lsr #23
   13b2c:	andeq	r1, r1, ip, lsr #23
   13b30:	andeq	r1, r1, r8, lsl #27
   13b34:	andeq	r1, r1, r8, ror #26
   13b38:	andeq	r1, r1, r8, ror #24
   13b3c:	andeq	r1, r1, r8, lsl lr
   13b40:	andeq	r1, r1, r8, lsr sp
   13b44:	strdeq	r0, [r0], -sp
   13b48:	andeq	r1, r1, ip, lsl #27
   13b4c:	andeq	r1, r1, ip, asr #25
   13b50:	andeq	r1, r1, r0, ror #23
   13b54:	andeq	r1, r1, r4, asr #23
   13b58:	strdeq	r1, [r1], -r0
   13b5c:	andeq	r1, r1, r0, asr fp
   13b60:	andeq	r1, r1, r8, asr #23
   13b64:	andeq	r0, r0, r9, lsl lr
   13b68:			; <UNDEFINED> instruction: 0x00011bb4
   13b6c:	andeq	r1, r1, r0, lsr sl
   13b70:	andeq	r1, r1, r0, lsl #22
   13b74:	andeq	r1, r1, r0, lsr #24
   13b78:	andeq	r0, r0, sp, asr #28
   13b7c:	andeq	r1, r1, r4, lsl fp
   13b80:	andeq	r1, r1, r8, lsr #21
   13b84:	muleq	r1, ip, sl
   13b88:	andeq	r0, r0, sp, asr #21
   13b8c:	andeq	r1, r1, r0, ror #13
   13b90:	andeq	r1, r1, r4, lsr #15
   13b94:	andeq	r1, r1, r8, lsr #19
   13b98:	andeq	r1, r1, r4, asr #20
   13b9c:	andeq	r1, r1, ip, ror #16
   13ba0:	andeq	r1, r0, r3, lsr #2
   13ba4:	andeq	r1, r0, r4, lsr r1
   13ba8:	andeq	r1, r1, r0, lsr r8
   13bac:	andeq	r0, r0, r9, asr #18
   13bb0:	andeq	r1, r1, r8, lsl #12
   13bb4:	andeq	r0, r0, sp, ror #29
   13bb8:	andeq	r1, r1, r0, ror #11
   13bbc:	andeq	r0, r0, r5, ror #21
   13bc0:	andeq	r1, r1, r4, lsl r9
   13bc4:	andeq	r0, r0, sp, ror #18
   13bc8:			; <UNDEFINED> instruction: 0x000009b5

00013bcc <getopt_long@@Base>:
   13bcc:	push	{fp, lr}
   13bd0:	mov	fp, sp
   13bd4:	sub	sp, sp, #8
   13bd8:	mov	ip, #1
   13bdc:	str	ip, [sp, #4]
   13be0:	ldr	ip, [fp, #8]
   13be4:	str	ip, [sp]
   13be8:	bl	132c8 <getopt@@Base+0x28>
   13bec:	mov	sp, fp
   13bf0:	pop	{fp, pc}

00013bf4 <getopt_long_only@@Base>:
   13bf4:	push	{fp, lr}
   13bf8:	mov	fp, sp
   13bfc:	sub	sp, sp, #8
   13c00:	mov	ip, #5
   13c04:	str	ip, [sp, #4]
   13c08:	ldr	ip, [fp, #8]
   13c0c:	str	ip, [sp]
   13c10:	bl	132c8 <getopt@@Base+0x28>
   13c14:	mov	sp, fp
   13c18:	pop	{fp, pc}
   13c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c20:	add	fp, sp, #28
   13c24:	sub	sp, sp, #44	; 0x2c
   13c28:	str	r2, [sp, #32]
   13c2c:	mov	r6, r1
   13c30:	ldr	r1, [pc, #1196]	; 140e4 <getopt_long_only@@Base+0x4f0>
   13c34:	str	r3, [sp, #16]
   13c38:	str	r0, [sp, #12]
   13c3c:	add	r1, pc, r1
   13c40:	ldr	r2, [r1, #12]
   13c44:	ldr	r7, [r1, #8]
   13c48:	cmp	r2, #2
   13c4c:	bhi	13c60 <getopt_long_only@@Base+0x6c>
   13c50:	ldr	r1, [pc, #1172]	; 140ec <getopt_long_only@@Base+0x4f8>
   13c54:	add	r1, pc, r1
   13c58:	ldr	r9, [r1, r2, lsl #2]
   13c5c:	b	13c68 <getopt_long_only@@Base+0x74>
   13c60:	ldr	r9, [pc, #1152]	; 140e8 <getopt_long_only@@Base+0x4f4>
   13c64:	add	r9, pc, r9
   13c68:	ldr	r0, [pc, #1152]	; 140f0 <getopt_long_only@@Base+0x4fc>
   13c6c:	mov	r1, #61	; 0x3d
   13c70:	ldr	r0, [pc, r0]
   13c74:	ldr	r4, [r0]
   13c78:	add	r5, r4, #1
   13c7c:	str	r5, [r0]
   13c80:	mov	r0, r7
   13c84:	bl	11018 <strchr@plt>
   13c88:	cmp	r0, #0
   13c8c:	str	r4, [sp, #24]
   13c90:	str	r5, [sp, #8]
   13c94:	beq	13ca8 <getopt_long_only@@Base+0xb4>
   13c98:	sub	r1, r0, r7
   13c9c:	add	r0, r0, #1
   13ca0:	str	r1, [fp, #-32]	; 0xffffffe0
   13ca4:	b	13cb8 <getopt_long_only@@Base+0xc4>
   13ca8:	mov	r0, r7
   13cac:	bl	1100c <strlen@plt>
   13cb0:	str	r0, [fp, #-32]	; 0xffffffe0
   13cb4:	mov	r0, #0
   13cb8:	str	r0, [sp, #20]
   13cbc:	ldr	r0, [sp, #32]
   13cc0:	ldr	r8, [r0]
   13cc4:	cmp	r8, #0
   13cc8:	beq	13d20 <getopt_long_only@@Base+0x12c>
   13ccc:	ldr	r0, [fp, #8]
   13cd0:	cmp	r0, #0
   13cd4:	beq	13d48 <getopt_long_only@@Base+0x154>
   13cd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cdc:	cmp	r0, #1
   13ce0:	bne	13d48 <getopt_long_only@@Base+0x154>
   13ce4:	ldr	r0, [sp, #32]
   13ce8:	ldrb	r5, [r7]
   13cec:	mov	sl, #0
   13cf0:	add	r4, r0, #16
   13cf4:	ldrb	r0, [r8]
   13cf8:	cmp	r5, r0
   13cfc:	bne	13d10 <getopt_long_only@@Base+0x11c>
   13d00:	mov	r0, r8
   13d04:	bl	1100c <strlen@plt>
   13d08:	cmp	r0, #1
   13d0c:	beq	13f4c <getopt_long_only@@Base+0x358>
   13d10:	ldr	r8, [r4, sl, lsl #4]
   13d14:	add	sl, sl, #1
   13d18:	cmp	r8, #0
   13d1c:	bne	13cf4 <getopt_long_only@@Base+0x100>
   13d20:	ldr	r0, [fp, #8]
   13d24:	cmp	r0, #0
   13d28:	beq	13e08 <getopt_long_only@@Base+0x214>
   13d2c:	ldr	r0, [pc, #960]	; 140f4 <getopt_long_only@@Base+0x500>
   13d30:	ldr	r0, [pc, r0]
   13d34:	ldr	r1, [sp, #24]
   13d38:	str	r1, [r0]
   13d3c:	mvn	r0, #0
   13d40:	sub	sp, fp, #28
   13d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d48:	ldr	r0, [fp, #12]
   13d4c:	stm	sp, {r6, r9}
   13d50:	str	r7, [sp, #36]	; 0x24
   13d54:	tst	r0, #4
   13d58:	bne	13e40 <getopt_long_only@@Base+0x24c>
   13d5c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13d60:	mov	r0, #0
   13d64:	mvn	sl, #0
   13d68:	mov	r9, #0
   13d6c:	str	r0, [sp, #28]
   13d70:	ldr	r0, [sp, #36]	; 0x24
   13d74:	mov	r1, r8
   13d78:	mov	r2, r4
   13d7c:	bl	110e4 <strncmp@plt>
   13d80:	cmp	r0, #0
   13d84:	bne	13dec <getopt_long_only@@Base+0x1f8>
   13d88:	mov	r0, r8
   13d8c:	bl	1100c <strlen@plt>
   13d90:	cmp	r0, r4
   13d94:	beq	13f38 <getopt_long_only@@Base+0x344>
   13d98:	cmn	sl, #1
   13d9c:	beq	13de8 <getopt_long_only@@Base+0x1f4>
   13da0:	ldr	r1, [sp, #32]
   13da4:	add	r0, r1, sl, lsl #4
   13da8:	add	r1, r1, r9, lsl #4
   13dac:	ldr	r2, [r0, #4]
   13db0:	ldr	r3, [r1, #4]
   13db4:	cmp	r3, r2
   13db8:	bne	13ddc <getopt_long_only@@Base+0x1e8>
   13dbc:	ldr	r2, [r0, #8]
   13dc0:	ldr	r3, [r1, #8]
   13dc4:	cmp	r3, r2
   13dc8:	bne	13ddc <getopt_long_only@@Base+0x1e8>
   13dcc:	ldr	r0, [r0, #12]
   13dd0:	ldr	r1, [r1, #12]
   13dd4:	cmp	r1, r0
   13dd8:	beq	13dec <getopt_long_only@@Base+0x1f8>
   13ddc:	mov	r0, #1
   13de0:	str	r0, [sp, #28]
   13de4:	b	13dec <getopt_long_only@@Base+0x1f8>
   13de8:	mov	sl, r9
   13dec:	ldr	r0, [sp, #32]
   13df0:	add	r0, r0, r9, lsl #4
   13df4:	add	r9, r9, #1
   13df8:	ldr	r8, [r0, #16]
   13dfc:	cmp	r8, #0
   13e00:	bne	13d70 <getopt_long_only@@Base+0x17c>
   13e04:	b	13ec0 <getopt_long_only@@Base+0x2cc>
   13e08:	ldr	r0, [pc, #800]	; 14130 <getopt_long_only@@Base+0x53c>
   13e0c:	ldr	r0, [pc, r0]
   13e10:	ldr	r0, [r0]
   13e14:	cmp	r0, #0
   13e18:	ldrbne	r0, [r6]
   13e1c:	cmpne	r0, #58	; 0x3a
   13e20:	bne	13f20 <getopt_long_only@@Base+0x32c>
   13e24:	ldr	r0, [pc, #724]	; 14100 <getopt_long_only@@Base+0x50c>
   13e28:	mov	r1, #0
   13e2c:	ldr	r0, [pc, r0]
   13e30:	str	r1, [r0]
   13e34:	mov	r0, #63	; 0x3f
   13e38:	sub	sp, fp, #28
   13e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e40:	ldr	r0, [sp, #32]
   13e44:	ldr	r7, [sp, #36]	; 0x24
   13e48:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13e4c:	mvn	sl, #0
   13e50:	mov	r4, #0
   13e54:	add	r5, r0, #16
   13e58:	mov	r0, #0
   13e5c:	str	r0, [sp, #28]
   13e60:	mov	r0, r7
   13e64:	mov	r1, r8
   13e68:	mov	r2, r6
   13e6c:	bl	110e4 <strncmp@plt>
   13e70:	cmp	r0, #0
   13e74:	beq	13e8c <getopt_long_only@@Base+0x298>
   13e78:	ldr	r8, [r5, r4, lsl #4]
   13e7c:	add	r4, r4, #1
   13e80:	cmp	r8, #0
   13e84:	bne	13e60 <getopt_long_only@@Base+0x26c>
   13e88:	b	13ec0 <getopt_long_only@@Base+0x2cc>
   13e8c:	mov	r0, r8
   13e90:	bl	1100c <strlen@plt>
   13e94:	cmp	r0, r6
   13e98:	beq	13f44 <getopt_long_only@@Base+0x350>
   13e9c:	ldr	r0, [sp, #28]
   13ea0:	cmn	sl, #1
   13ea4:	moveq	sl, r4
   13ea8:	movne	r0, #1
   13eac:	str	r0, [sp, #28]
   13eb0:	ldr	r8, [r5, r4, lsl #4]
   13eb4:	add	r4, r4, #1
   13eb8:	cmp	r8, #0
   13ebc:	bne	13e60 <getopt_long_only@@Base+0x26c>
   13ec0:	ldr	r0, [sp, #28]
   13ec4:	cmp	r0, #0
   13ec8:	beq	13f0c <getopt_long_only@@Base+0x318>
   13ecc:	ldr	r0, [pc, #548]	; 140f8 <getopt_long_only@@Base+0x504>
   13ed0:	ldr	r0, [pc, r0]
   13ed4:	ldr	r3, [sp, #36]	; 0x24
   13ed8:	ldr	r1, [sp, #4]
   13edc:	ldr	r0, [r0]
   13ee0:	cmp	r0, #0
   13ee4:	beq	13e24 <getopt_long_only@@Base+0x230>
   13ee8:	ldr	r0, [sp]
   13eec:	ldrb	r0, [r0]
   13ef0:	cmp	r0, #58	; 0x3a
   13ef4:	beq	13e24 <getopt_long_only@@Base+0x230>
   13ef8:	ldr	r0, [pc, #508]	; 140fc <getopt_long_only@@Base+0x508>
   13efc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f00:	add	r0, pc, r0
   13f04:	bl	11024 <warnx@plt>
   13f08:	b	13e24 <getopt_long_only@@Base+0x230>
   13f0c:	ldr	r7, [sp, #36]	; 0x24
   13f10:	ldm	sp, {r6, r9}
   13f14:	cmn	sl, #1
   13f18:	bne	13f4c <getopt_long_only@@Base+0x358>
   13f1c:	b	13d20 <getopt_long_only@@Base+0x12c>
   13f20:	ldr	r0, [pc, #524]	; 14134 <getopt_long_only@@Base+0x540>
   13f24:	mov	r1, r9
   13f28:	mov	r2, r7
   13f2c:	add	r0, pc, r0
   13f30:	bl	11024 <warnx@plt>
   13f34:	b	13e24 <getopt_long_only@@Base+0x230>
   13f38:	ldr	r7, [sp, #36]	; 0x24
   13f3c:	mov	sl, r9
   13f40:	b	13f48 <getopt_long_only@@Base+0x354>
   13f44:	mov	sl, r4
   13f48:	ldm	sp, {r6, r9}
   13f4c:	ldr	r0, [sp, #32]
   13f50:	ldr	r3, [sp, #20]
   13f54:	add	r5, r0, sl, lsl #4
   13f58:	cmp	r3, #0
   13f5c:	mov	r0, r5
   13f60:	ldr	r1, [r0, #4]!
   13f64:	beq	13fb4 <getopt_long_only@@Base+0x3c0>
   13f68:	cmp	r1, #0
   13f6c:	bne	13fb4 <getopt_long_only@@Base+0x3c0>
   13f70:	ldr	r0, [pc, #396]	; 14104 <getopt_long_only@@Base+0x510>
   13f74:	ldr	r0, [pc, r0]
   13f78:	ldr	r0, [r0]
   13f7c:	cmp	r0, #0
   13f80:	ldrbne	r0, [r6]
   13f84:	cmpne	r0, #58	; 0x3a
   13f88:	bne	13fd8 <getopt_long_only@@Base+0x3e4>
   13f8c:	ldr	r1, [r5, #8]
   13f90:	mov	r0, #0
   13f94:	cmp	r1, #0
   13f98:	ldreq	r0, [r5, #12]
   13f9c:	ldr	r1, [pc, #360]	; 1410c <getopt_long_only@@Base+0x518>
   13fa0:	ldr	r1, [pc, r1]
   13fa4:	str	r0, [r1]
   13fa8:	mov	r0, #63	; 0x3f
   13fac:	sub	sp, fp, #28
   13fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fb4:	sub	r2, r1, #1
   13fb8:	cmp	r2, #1
   13fbc:	bhi	14044 <getopt_long_only@@Base+0x450>
   13fc0:	cmp	r3, #0
   13fc4:	beq	13ff4 <getopt_long_only@@Base+0x400>
   13fc8:	ldr	r0, [pc, #320]	; 14110 <getopt_long_only@@Base+0x51c>
   13fcc:	ldr	r0, [pc, r0]
   13fd0:	str	r3, [r0]
   13fd4:	b	1402c <getopt_long_only@@Base+0x438>
   13fd8:	ldr	r0, [pc, #296]	; 14108 <getopt_long_only@@Base+0x514>
   13fdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fe0:	mov	r1, r9
   13fe4:	mov	r3, r7
   13fe8:	add	r0, pc, r0
   13fec:	bl	11024 <warnx@plt>
   13ff0:	b	13f8c <getopt_long_only@@Base+0x398>
   13ff4:	cmp	r1, #1
   13ff8:	bne	14044 <getopt_long_only@@Base+0x450>
   13ffc:	ldr	r1, [sp, #24]
   14000:	ldr	r2, [pc, #268]	; 14114 <getopt_long_only@@Base+0x520>
   14004:	ldr	r2, [pc, r2]
   14008:	add	r1, r1, #2
   1400c:	str	r1, [r2]
   14010:	ldr	r1, [sp, #12]
   14014:	ldr	r2, [sp, #8]
   14018:	ldr	r1, [r1, r2, lsl #2]
   1401c:	ldr	r2, [pc, #244]	; 14118 <getopt_long_only@@Base+0x524>
   14020:	ldr	r2, [pc, r2]
   14024:	str	r1, [r2]
   14028:	ldr	r1, [r0]
   1402c:	cmp	r1, #1
   14030:	ldreq	r0, [pc, #228]	; 1411c <getopt_long_only@@Base+0x528>
   14034:	ldreq	r0, [pc, r0]
   14038:	ldreq	r0, [r0]
   1403c:	cmpeq	r0, #0
   14040:	beq	1406c <getopt_long_only@@Base+0x478>
   14044:	ldr	r0, [sp, #16]
   14048:	cmp	r0, #0
   1404c:	strne	sl, [r0]
   14050:	ldr	r1, [r5, #8]
   14054:	ldr	r0, [r5, #12]
   14058:	cmp	r1, #0
   1405c:	strne	r0, [r1]
   14060:	movne	r0, #0
   14064:	sub	sp, fp, #28
   14068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1406c:	ldr	r0, [pc, #172]	; 14120 <getopt_long_only@@Base+0x52c>
   14070:	ldr	r0, [pc, r0]
   14074:	ldr	r0, [r0]
   14078:	cmp	r0, #0
   1407c:	ldrbne	r0, [r6]
   14080:	cmpne	r0, #58	; 0x3a
   14084:	beq	1409c <getopt_long_only@@Base+0x4a8>
   14088:	ldr	r0, [pc, #148]	; 14124 <getopt_long_only@@Base+0x530>
   1408c:	mov	r1, r9
   14090:	mov	r2, r7
   14094:	add	r0, pc, r0
   14098:	bl	11024 <warnx@plt>
   1409c:	ldr	r1, [r5, #8]
   140a0:	mov	r0, #0
   140a4:	cmp	r1, #0
   140a8:	ldreq	r0, [r5, #12]
   140ac:	ldr	r1, [pc, #116]	; 14128 <getopt_long_only@@Base+0x534>
   140b0:	ldr	r1, [pc, r1]
   140b4:	str	r0, [r1]
   140b8:	ldr	r0, [pc, #108]	; 1412c <getopt_long_only@@Base+0x538>
   140bc:	ldr	r0, [pc, r0]
   140c0:	mov	r1, r0
   140c4:	ldr	r0, [r0]
   140c8:	sub	r0, r0, #1
   140cc:	str	r0, [r1]
   140d0:	ldrb	r0, [r6]
   140d4:	cmp	r0, #58	; 0x3a
   140d8:	movwne	r0, #63	; 0x3f
   140dc:	sub	sp, fp, #28
   140e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140e4:	andeq	r1, r1, r8, ror r5
   140e8:	andeq	r0, r0, r5, lsr #15
   140ec:	muleq	r1, r0, r2
   140f0:	andeq	r1, r1, ip, ror #8
   140f4:	andeq	r1, r1, ip, lsr #7
   140f8:	andeq	r1, r1, r4, lsl #4
   140fc:	andeq	r0, r0, r3, lsl #22
   14100:			; <UNDEFINED> instruction: 0x000112b4
   14104:	andeq	r1, r1, r0, ror #2
   14108:	andeq	r0, r0, r8, lsr sl
   1410c:	andeq	r1, r1, r0, asr #2
   14110:	andeq	r1, r1, r8, lsl r1
   14114:	ldrdeq	r1, [r1], -r8
   14118:	andeq	r1, r1, r4, asr #1
   1411c:	strheq	r1, [r1], -r0
   14120:	andeq	r1, r1, r4, rrx
   14124:			; <UNDEFINED> instruction: 0x000009b6
   14128:	andeq	r1, r1, r0, lsr r0
   1412c:	andeq	r1, r1, r0, lsr #32
   14130:	andeq	r1, r1, r8, asr #5
   14134:	andeq	r0, r0, r1, asr #22
   14138:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1413c:	mov	r7, r0
   14140:	ldr	r6, [pc, #72]	; 14190 <getopt_long_only@@Base+0x59c>
   14144:	ldr	r5, [pc, #72]	; 14194 <getopt_long_only@@Base+0x5a0>
   14148:	add	r6, pc, r6
   1414c:	add	r5, pc, r5
   14150:	sub	r6, r6, r5
   14154:	mov	r8, r1
   14158:	mov	r9, r2
   1415c:	bl	10e90 <Mat_VarGetNumberOfFields@plt-0x20>
   14160:	asrs	r6, r6, #2
   14164:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14168:	mov	r4, #0
   1416c:	add	r4, r4, #1
   14170:	ldr	r3, [r5], #4
   14174:	mov	r2, r9
   14178:	mov	r1, r8
   1417c:	mov	r0, r7
   14180:	blx	r3
   14184:	cmp	r6, r4
   14188:	bne	1416c <getopt_long_only@@Base+0x578>
   1418c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14190:	muleq	r1, r8, sp
   14194:	muleq	r1, r0, sp
   14198:	bx	lr

Disassembly of section .fini:

0001419c <.fini>:
   1419c:	push	{r3, lr}
   141a0:	pop	{r3, pc}
