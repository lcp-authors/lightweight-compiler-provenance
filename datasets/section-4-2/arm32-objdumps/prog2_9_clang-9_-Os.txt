
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010b04 <.init>:
   10b04:	push	{r3, lr}
   10b08:	bl	10c38 <_start@@Base+0x3c>
   10b0c:	pop	{r3, pc}

Disassembly of section .plt:

00010b10 <calloc@plt-0x14>:
   10b10:	push	{lr}		; (str lr, [sp, #-4]!)
   10b14:	ldr	lr, [pc, #4]	; 10b20 <calloc@plt-0x4>
   10b18:	add	lr, pc, lr
   10b1c:	ldr	pc, [lr, #8]!
   10b20:	andeq	r1, r1, r0, ror #9

00010b24 <calloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b30 <strcmp@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b3c <printf@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b48 <__isoc99_fscanf@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b54 <fopen@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b60 <fflush@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b6c <free@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b78 <fgets@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b84 <strdup@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b90 <puts@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1176]!	; 0x498

00010b9c <malloc@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1168]!	; 0x490

00010ba8 <__libc_start_main@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1160]!	; 0x488

00010bb4 <__gmon_start__@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1152]!	; 0x480

00010bc0 <feof@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1144]!	; 0x478

00010bcc <strlen@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1136]!	; 0x470

00010bd8 <putchar@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1128]!	; 0x468

00010be4 <fclose@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1120]!	; 0x460

00010bf0 <abort@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1112]!	; 0x458

Disassembly of section .text:

00010bfc <_start@@Base>:
   10bfc:	mov	fp, #0
   10c00:	mov	lr, #0
   10c04:	pop	{r1}		; (ldr r1, [sp], #4)
   10c08:	mov	r2, sp
   10c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c10:	push	{r0}		; (str r0, [sp, #-4]!)
   10c14:	ldr	ip, [pc, #16]	; 10c2c <_start@@Base+0x30>
   10c18:	push	{ip}		; (str ip, [sp, #-4]!)
   10c1c:	ldr	r0, [pc, #12]	; 10c30 <_start@@Base+0x34>
   10c20:	ldr	r3, [pc, #12]	; 10c34 <_start@@Base+0x38>
   10c24:	bl	10ba8 <__libc_start_main@plt>
   10c28:	bl	10bf0 <abort@plt>
   10c2c:	andeq	r1, r1, r4, lsl #16
   10c30:	andeq	r1, r1, r4, rrx
   10c34:	andeq	r1, r1, r4, lsr #15
   10c38:	ldr	r3, [pc, #20]	; 10c54 <_start@@Base+0x58>
   10c3c:	ldr	r2, [pc, #20]	; 10c58 <_start@@Base+0x5c>
   10c40:	add	r3, pc, r3
   10c44:	ldr	r2, [r3, r2]
   10c48:	cmp	r2, #0
   10c4c:	bxeq	lr
   10c50:	b	10bb4 <__gmon_start__@plt>
   10c54:			; <UNDEFINED> instruction: 0x000113b8
   10c58:	andeq	r0, r0, r4, asr r0
   10c5c:	ldr	r0, [pc, #24]	; 10c7c <_start@@Base+0x80>
   10c60:	ldr	r3, [pc, #24]	; 10c80 <_start@@Base+0x84>
   10c64:	cmp	r3, r0
   10c68:	bxeq	lr
   10c6c:	ldr	r3, [pc, #16]	; 10c84 <_start@@Base+0x88>
   10c70:	cmp	r3, #0
   10c74:	bxeq	lr
   10c78:	bx	r3
   10c7c:	andeq	r2, r2, r0, rrx
   10c80:	andeq	r2, r2, r0, rrx
   10c84:	andeq	r0, r0, r0
   10c88:	ldr	r0, [pc, #36]	; 10cb4 <_start@@Base+0xb8>
   10c8c:	ldr	r1, [pc, #36]	; 10cb8 <_start@@Base+0xbc>
   10c90:	sub	r1, r1, r0
   10c94:	asr	r1, r1, #2
   10c98:	add	r1, r1, r1, lsr #31
   10c9c:	asrs	r1, r1, #1
   10ca0:	bxeq	lr
   10ca4:	ldr	r3, [pc, #16]	; 10cbc <_start@@Base+0xc0>
   10ca8:	cmp	r3, #0
   10cac:	bxeq	lr
   10cb0:	bx	r3
   10cb4:	andeq	r2, r2, r0, rrx
   10cb8:	andeq	r2, r2, r0, rrx
   10cbc:	andeq	r0, r0, r0
   10cc0:	push	{r4, lr}
   10cc4:	ldr	r4, [pc, #24]	; 10ce4 <_start@@Base+0xe8>
   10cc8:	ldrb	r3, [r4]
   10ccc:	cmp	r3, #0
   10cd0:	popne	{r4, pc}
   10cd4:	bl	10c5c <_start@@Base+0x60>
   10cd8:	mov	r3, #1
   10cdc:	strb	r3, [r4]
   10ce0:	pop	{r4, pc}
   10ce4:	andeq	r2, r2, r4, rrx
   10ce8:	b	10c88 <_start@@Base+0x8c>

00010cec <fp_insere@@Base>:
   10cec:	push	{r4, r5, r6, sl, fp, lr}
   10cf0:	add	fp, sp, #16
   10cf4:	cmp	r0, #0
   10cf8:	beq	10d58 <fp_insere@@Base+0x6c>
   10cfc:	ldm	r0, {r3, r6}
   10d00:	mov	r4, r0
   10d04:	mov	r0, #0
   10d08:	cmp	r3, r6
   10d0c:	beq	10da0 <fp_insere@@Base+0xb4>
   10d10:	mov	r0, r2
   10d14:	bl	1156c <elemento_cria@@Base>
   10d18:	mov	r5, r0
   10d1c:	ldr	r0, [r4]
   10d20:	mov	r6, #0
   10d24:	cmp	r0, #1
   10d28:	blt	10d64 <fp_insere@@Base+0x78>
   10d2c:	ldr	r0, [r4, #8]
   10d30:	mov	r1, r5
   10d34:	ldr	r0, [r0, r6, lsl #2]
   10d38:	bl	115b0 <maior_que@@Base>
   10d3c:	cmp	r0, #0
   10d40:	beq	10d60 <fp_insere@@Base+0x74>
   10d44:	ldr	r0, [r4]
   10d48:	add	r6, r6, #1
   10d4c:	cmp	r6, r0
   10d50:	blt	10d2c <fp_insere@@Base+0x40>
   10d54:	b	10d64 <fp_insere@@Base+0x78>
   10d58:	mvn	r0, #0
   10d5c:	pop	{r4, r5, r6, sl, fp, pc}
   10d60:	ldr	r0, [r4]
   10d64:	ldr	r1, [r4, #8]
   10d68:	cmp	r0, r6
   10d6c:	blt	10d90 <fp_insere@@Base+0xa4>
   10d70:	mov	r2, r0
   10d74:	ldr	r3, [r1, r2, lsl #2]!
   10d78:	cmp	r2, r6
   10d7c:	str	r3, [r1, #4]
   10d80:	sub	r3, r2, #1
   10d84:	ldr	r1, [r4, #8]
   10d88:	mov	r2, r3
   10d8c:	bgt	10d74 <fp_insere@@Base+0x88>
   10d90:	add	r0, r0, #1
   10d94:	str	r5, [r1, r6, lsl #2]
   10d98:	str	r0, [r4]
   10d9c:	mov	r0, #1
   10da0:	pop	{r4, r5, r6, sl, fp, pc}

00010da4 <fp_remove@@Base>:
   10da4:	push	{r4, sl, fp, lr}
   10da8:	add	fp, sp, #8
   10dac:	mov	r1, #0
   10db0:	cmp	r0, #0
   10db4:	beq	10e10 <fp_remove@@Base+0x6c>
   10db8:	ldr	lr, [r0]
   10dbc:	cmp	lr, #0
   10dc0:	beq	10e10 <fp_remove@@Base+0x6c>
   10dc4:	ldr	r1, [r0, #8]
   10dc8:	cmp	lr, #1
   10dcc:	ldr	ip, [r1]
   10dd0:	blt	10e04 <fp_remove@@Base+0x60>
   10dd4:	ldr	r3, [r1, #4]
   10dd8:	str	r3, [r1]
   10ddc:	beq	10e04 <fp_remove@@Base+0x60>
   10de0:	sub	r3, lr, #1
   10de4:	mov	r1, #0
   10de8:	ldr	r2, [r0, #8]
   10dec:	add	r2, r2, r1, lsl #2
   10df0:	add	r1, r1, #1
   10df4:	cmp	r3, r1
   10df8:	ldr	r4, [r2, #8]
   10dfc:	str	r4, [r2, #4]
   10e00:	bne	10de8 <fp_remove@@Base+0x44>
   10e04:	sub	r1, lr, #1
   10e08:	str	r1, [r0]
   10e0c:	ldr	r1, [ip, #4]
   10e10:	mov	r0, r1
   10e14:	pop	{r4, sl, fp, pc}

00010e18 <fp_carrega@@Base>:
   10e18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10e1c:	add	fp, sp, #24
   10e20:	sub	sp, sp, #264	; 0x108
   10e24:	mov	r2, r1
   10e28:	movw	r1, #6864	; 0x1ad0
   10e2c:	mov	r4, r0
   10e30:	movt	r1, #1
   10e34:	mov	r0, r2
   10e38:	bl	10b54 <fopen@plt>
   10e3c:	cmp	r0, #0
   10e40:	beq	10ec4 <fp_carrega@@Base+0xac>
   10e44:	mov	r5, r0
   10e48:	bl	10bc0 <feof@plt>
   10e4c:	cmp	r0, #0
   10e50:	bne	10eb8 <fp_carrega@@Base+0xa0>
   10e54:	movw	r8, #6164	; 0x1814
   10e58:	mov	r9, sp
   10e5c:	add	r6, sp, #4
   10e60:	mov	r7, #0
   10e64:	movt	r8, #1
   10e68:	mov	r0, r5
   10e6c:	mov	r1, r8
   10e70:	mov	r2, r9
   10e74:	bl	10b48 <__isoc99_fscanf@plt>
   10e78:	mov	r0, r6
   10e7c:	mov	r1, #256	; 0x100
   10e80:	mov	r2, r5
   10e84:	bl	10b78 <fgets@plt>
   10e88:	mov	r0, r6
   10e8c:	bl	10bcc <strlen@plt>
   10e90:	ldr	r2, [sp]
   10e94:	add	r0, r0, r6
   10e98:	mov	r1, r6
   10e9c:	strb	r7, [r0, #-1]
   10ea0:	mov	r0, r4
   10ea4:	bl	10cec <fp_insere@@Base>
   10ea8:	mov	r0, r5
   10eac:	bl	10bc0 <feof@plt>
   10eb0:	cmp	r0, #0
   10eb4:	beq	10e68 <fp_carrega@@Base+0x50>
   10eb8:	mov	r0, r5
   10ebc:	bl	10be4 <fclose@plt>
   10ec0:	b	10ed0 <fp_carrega@@Base+0xb8>
   10ec4:	movw	r0, #6778	; 0x1a7a
   10ec8:	movt	r0, #1
   10ecc:	bl	10b90 <puts@plt>
   10ed0:	sub	sp, fp, #24
   10ed4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00010ed8 <heap_insere@@Base>:
   10ed8:	push	{r4, r5, r6, r7, fp, lr}
   10edc:	add	fp, sp, #16
   10ee0:	mov	r4, r0
   10ee4:	mov	r7, r1
   10ee8:	ldr	r0, [r0]
   10eec:	mov	r5, #0
   10ef0:	ldr	r1, [r4, #4]
   10ef4:	cmp	r0, r1
   10ef8:	beq	10f90 <heap_insere@@Base+0xb8>
   10efc:	mov	r0, r3
   10f00:	mov	r1, r2
   10f04:	bl	1156c <elemento_cria@@Base>
   10f08:	mov	r6, r0
   10f0c:	ldr	r0, [r4]
   10f10:	cmp	r0, #1
   10f14:	blt	10f4c <heap_insere@@Base+0x74>
   10f18:	mov	r5, #0
   10f1c:	ldr	r0, [r4, #8]
   10f20:	mov	r1, r6
   10f24:	ldr	r0, [r0, r5, lsl #2]
   10f28:	blx	r7
   10f2c:	cmp	r0, #1
   10f30:	beq	10f58 <heap_insere@@Base+0x80>
   10f34:	ldr	r0, [r4]
   10f38:	add	r5, r5, #1
   10f3c:	cmp	r5, r0
   10f40:	blt	10f1c <heap_insere@@Base+0x44>
   10f44:	ldr	r0, [r4, #8]
   10f48:	b	10f64 <heap_insere@@Base+0x8c>
   10f4c:	ldr	r0, [r4, #8]
   10f50:	mov	r5, #0
   10f54:	b	10f80 <heap_insere@@Base+0xa8>
   10f58:	ldr	r0, [r4, #8]
   10f5c:	cmp	r5, #0
   10f60:	beq	10f80 <heap_insere@@Base+0xa8>
   10f64:	mov	r1, r5
   10f68:	ldr	r2, [r0, r1, lsl #2]!
   10f6c:	sub	r1, r1, #1
   10f70:	cmp	r1, #0
   10f74:	str	r2, [r0, #4]
   10f78:	ldr	r0, [r4, #8]
   10f7c:	bgt	10f68 <heap_insere@@Base+0x90>
   10f80:	str	r6, [r0, r5, lsl #2]
   10f84:	ldr	r0, [r4]
   10f88:	add	r0, r0, #1
   10f8c:	str	r0, [r4]
   10f90:	mov	r0, r5
   10f94:	pop	{r4, r5, r6, r7, fp, pc}

00010f98 <heap_remove@@Base>:
   10f98:	mov	r0, #0
   10f9c:	bx	lr

00010fa0 <heap_carrega@@Base>:
   10fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fa4:	add	fp, sp, #28
   10fa8:	sub	sp, sp, #268	; 0x10c
   10fac:	mov	r4, r1
   10fb0:	movw	r1, #6864	; 0x1ad0
   10fb4:	mov	r5, r0
   10fb8:	mov	r0, r2
   10fbc:	movt	r1, #1
   10fc0:	bl	10b54 <fopen@plt>
   10fc4:	cmp	r0, #0
   10fc8:	beq	11050 <heap_carrega@@Base+0xb0>
   10fcc:	mov	r6, r0
   10fd0:	bl	10bc0 <feof@plt>
   10fd4:	cmp	r0, #0
   10fd8:	bne	11044 <heap_carrega@@Base+0xa4>
   10fdc:	movw	r8, #6164	; 0x1814
   10fe0:	add	r9, sp, #4
   10fe4:	add	r7, sp, #8
   10fe8:	mov	sl, #0
   10fec:	movt	r8, #1
   10ff0:	mov	r0, r6
   10ff4:	mov	r1, r8
   10ff8:	mov	r2, r9
   10ffc:	bl	10b48 <__isoc99_fscanf@plt>
   11000:	mov	r0, r7
   11004:	mov	r1, #256	; 0x100
   11008:	mov	r2, r6
   1100c:	bl	10b78 <fgets@plt>
   11010:	mov	r0, r7
   11014:	bl	10bcc <strlen@plt>
   11018:	ldr	r3, [sp, #4]
   1101c:	add	r0, r0, r7
   11020:	mov	r1, r4
   11024:	mov	r2, r7
   11028:	strb	sl, [r0, #-1]
   1102c:	mov	r0, r5
   11030:	bl	10ed8 <heap_insere@@Base>
   11034:	mov	r0, r6
   11038:	bl	10bc0 <feof@plt>
   1103c:	cmp	r0, #0
   11040:	beq	10ff0 <heap_carrega@@Base+0x50>
   11044:	mov	r0, r6
   11048:	bl	10be4 <fclose@plt>
   1104c:	b	1105c <heap_carrega@@Base+0xbc>
   11050:	movw	r0, #6778	; 0x1a7a
   11054:	movt	r0, #1
   11058:	bl	10b90 <puts@plt>
   1105c:	sub	sp, fp, #28
   11060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011064 <main@@Base>:
   11064:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11068:	add	fp, sp, #24
   1106c:	mov	r0, #42	; 0x2a
   11070:	bl	114c4 <vetor_cria@@Base>
   11074:	mov	r4, r0
   11078:	movw	r0, #6811	; 0x1a9b
   1107c:	movt	r0, #1
   11080:	bl	10b90 <puts@plt>
   11084:	movw	r1, #6168	; 0x1818
   11088:	mov	r0, r4
   1108c:	movt	r1, #1
   11090:	bl	10e18 <fp_carrega@@Base>
   11094:	movw	r9, #8296	; 0x2068
   11098:	movw	r0, #6178	; 0x1822
   1109c:	movt	r9, #2
   110a0:	movt	r0, #1
   110a4:	ldr	r1, [r9]
   110a8:	bl	10b3c <printf@plt>
   110ac:	mov	r0, r4
   110b0:	bl	11684 <vetor_imprime@@Base>
   110b4:	ldr	r0, [r4]
   110b8:	cmp	r0, #42	; 0x2a
   110bc:	bne	11270 <main@@Base+0x20c>
   110c0:	mov	r0, r4
   110c4:	bl	10da4 <fp_remove@@Base>
   110c8:	mov	r1, r0
   110cc:	movw	r0, #6233	; 0x1859
   110d0:	movt	r0, #1
   110d4:	bl	10b30 <strcmp@plt>
   110d8:	movw	r5, #6961	; 0x1b31
   110dc:	cmp	r0, #0
   110e0:	movt	r5, #1
   110e4:	bne	11278 <main@@Base+0x214>
   110e8:	mov	r7, #0
   110ec:	mov	r0, r4
   110f0:	str	r7, [r9]
   110f4:	bl	10da4 <fp_remove@@Base>
   110f8:	ldr	r1, [r9]
   110fc:	movw	r0, #6251	; 0x186b
   11100:	movt	r0, #1
   11104:	bl	10b3c <printf@plt>
   11108:	movw	r6, #6303	; 0x189f
   1110c:	mov	r0, r4
   11110:	mov	r2, #99	; 0x63
   11114:	str	r7, [r9]
   11118:	movt	r6, #1
   1111c:	mov	r1, r6
   11120:	bl	10cec <fp_insere@@Base>
   11124:	ldr	r1, [r9]
   11128:	movw	r0, #6317	; 0x18ad
   1112c:	movt	r0, #1
   11130:	bl	10b3c <printf@plt>
   11134:	mov	r0, r4
   11138:	bl	10da4 <fp_remove@@Base>
   1113c:	mov	r0, r4
   11140:	mov	r1, r6
   11144:	mov	r2, #0
   11148:	str	r7, [r9]
   1114c:	bl	10cec <fp_insere@@Base>
   11150:	ldr	r1, [r9]
   11154:	movw	r0, #6388	; 0x18f4
   11158:	movt	r0, #1
   1115c:	bl	10b3c <printf@plt>
   11160:	mov	r0, r4
   11164:	bl	10da4 <fp_remove@@Base>
   11168:	mov	r0, r4
   1116c:	mov	r1, r6
   11170:	mov	r2, #42	; 0x2a
   11174:	str	r7, [r9]
   11178:	bl	10cec <fp_insere@@Base>
   1117c:	ldr	r1, [r9]
   11180:	movw	r0, #6459	; 0x193b
   11184:	movt	r0, #1
   11188:	bl	10b3c <printf@plt>
   1118c:	movw	r0, #6866	; 0x1ad2
   11190:	movt	r0, #1
   11194:	bl	10b90 <puts@plt>
   11198:	mov	r0, #42	; 0x2a
   1119c:	bl	11518 <vetor_criaHeap@@Base>
   111a0:	movw	r1, #5552	; 0x15b0
   111a4:	movw	r2, #6168	; 0x1818
   111a8:	mov	r4, r0
   111ac:	movt	r1, #1
   111b0:	movt	r2, #1
   111b4:	bl	10fa0 <heap_carrega@@Base>
   111b8:	ldr	r1, [r9]
   111bc:	movw	r0, #6529	; 0x1981
   111c0:	movt	r0, #1
   111c4:	bl	10b3c <printf@plt>
   111c8:	mov	r0, r4
   111cc:	bl	11714 <vetor_imprimeHeap@@Base>
   111d0:	ldr	r0, [r4]
   111d4:	cmp	r0, #42	; 0x2a
   111d8:	bne	1128c <main@@Base+0x228>
   111dc:	movw	r0, #6233	; 0x1859
   111e0:	mov	r1, #0
   111e4:	mov	r6, #0
   111e8:	movt	r0, #1
   111ec:	bl	10b30 <strcmp@plt>
   111f0:	cmp	r0, #0
   111f4:	bne	11278 <main@@Base+0x214>
   111f8:	movw	r0, #6584	; 0x19b8
   111fc:	mov	r1, #0
   11200:	str	r6, [r9]
   11204:	movt	r0, #1
   11208:	bl	10b3c <printf@plt>
   1120c:	str	r6, [r9]
   11210:	ldm	r4, {r0, r1}
   11214:	cmp	r0, r1
   11218:	beq	112e4 <main@@Base+0x280>
   1121c:	movw	r1, #6303	; 0x189f
   11220:	mov	r0, #99	; 0x63
   11224:	movt	r1, #1
   11228:	bl	1156c <elemento_cria@@Base>
   1122c:	mov	r5, r0
   11230:	ldr	r0, [r4]
   11234:	cmp	r0, #1
   11238:	blt	11298 <main@@Base+0x234>
   1123c:	mov	r6, #0
   11240:	ldr	r0, [r4, #8]
   11244:	mov	r1, r5
   11248:	ldr	r0, [r0, r6, lsl #2]
   1124c:	bl	115b0 <maior_que@@Base>
   11250:	cmp	r0, #1
   11254:	beq	112a0 <main@@Base+0x23c>
   11258:	ldr	r0, [r4]
   1125c:	add	r6, r6, #1
   11260:	cmp	r6, r0
   11264:	blt	11240 <main@@Base+0x1dc>
   11268:	ldr	r0, [r4, #8]
   1126c:	b	112ac <main@@Base+0x248>
   11270:	movw	r5, #7029	; 0x1b75
   11274:	movt	r5, #1
   11278:	mov	r0, r5
   1127c:	bl	10b90 <puts@plt>
   11280:	mov	r4, #1
   11284:	mov	r0, r4
   11288:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1128c:	movw	r5, #6922	; 0x1b0a
   11290:	movt	r5, #1
   11294:	b	11278 <main@@Base+0x214>
   11298:	ldr	r0, [r4, #8]
   1129c:	b	112cc <main@@Base+0x268>
   112a0:	ldr	r0, [r4, #8]
   112a4:	cmp	r6, #0
   112a8:	beq	112cc <main@@Base+0x268>
   112ac:	mov	r1, r6
   112b0:	ldr	r2, [r0, r1, lsl #2]!
   112b4:	sub	r1, r1, #1
   112b8:	cmp	r1, #0
   112bc:	str	r2, [r0, #4]
   112c0:	ldr	r0, [r4, #8]
   112c4:	bgt	112b0 <main@@Base+0x24c>
   112c8:	b	112d0 <main@@Base+0x26c>
   112cc:	mov	r6, #0
   112d0:	str	r5, [r0, r6, lsl #2]
   112d4:	ldr	r0, [r4]
   112d8:	add	r0, r0, #1
   112dc:	str	r0, [r4]
   112e0:	ldr	r6, [r9]
   112e4:	movw	r0, #6636	; 0x19ec
   112e8:	mov	r1, r6
   112ec:	movt	r0, #1
   112f0:	bl	10b3c <printf@plt>
   112f4:	mov	r8, #0
   112f8:	str	r8, [r9]
   112fc:	ldm	r4, {r0, r1}
   11300:	cmp	r0, r1
   11304:	mov	r1, #0
   11308:	beq	113b0 <main@@Base+0x34c>
   1130c:	movw	r1, #6303	; 0x189f
   11310:	mov	r0, #0
   11314:	mov	r5, #0
   11318:	movt	r1, #1
   1131c:	bl	1156c <elemento_cria@@Base>
   11320:	mov	r6, r0
   11324:	ldr	r0, [r4]
   11328:	cmp	r0, #1
   1132c:	blt	11364 <main@@Base+0x300>
   11330:	mov	r5, #0
   11334:	ldr	r0, [r4, #8]
   11338:	mov	r1, r6
   1133c:	ldr	r0, [r0, r5, lsl #2]
   11340:	bl	115b0 <maior_que@@Base>
   11344:	cmp	r0, #1
   11348:	beq	1136c <main@@Base+0x308>
   1134c:	ldr	r0, [r4]
   11350:	add	r5, r5, #1
   11354:	cmp	r5, r0
   11358:	blt	11334 <main@@Base+0x2d0>
   1135c:	ldr	r0, [r4, #8]
   11360:	b	11378 <main@@Base+0x314>
   11364:	ldr	r0, [r4, #8]
   11368:	b	1139c <main@@Base+0x338>
   1136c:	ldr	r0, [r4, #8]
   11370:	cmp	r5, #0
   11374:	beq	11398 <main@@Base+0x334>
   11378:	mov	r1, r5
   1137c:	ldr	r2, [r0, r1, lsl #2]!
   11380:	sub	r1, r1, #1
   11384:	cmp	r1, #0
   11388:	str	r2, [r0, #4]
   1138c:	ldr	r0, [r4, #8]
   11390:	bgt	1137c <main@@Base+0x318>
   11394:	b	1139c <main@@Base+0x338>
   11398:	mov	r5, #0
   1139c:	str	r6, [r0, r5, lsl #2]
   113a0:	ldr	r0, [r4]
   113a4:	add	r0, r0, #1
   113a8:	str	r0, [r4]
   113ac:	ldr	r1, [r9]
   113b0:	movw	r0, #6707	; 0x1a33
   113b4:	movt	r0, #1
   113b8:	bl	10b3c <printf@plt>
   113bc:	str	r8, [r9]
   113c0:	ldm	r4, {r0, r1}
   113c4:	cmp	r0, r1
   113c8:	beq	1146c <main@@Base+0x408>
   113cc:	movw	r1, #6303	; 0x189f
   113d0:	mov	r0, #42	; 0x2a
   113d4:	movt	r1, #1
   113d8:	bl	1156c <elemento_cria@@Base>
   113dc:	mov	r5, r0
   113e0:	ldr	r0, [r4]
   113e4:	cmp	r0, #1
   113e8:	blt	11420 <main@@Base+0x3bc>
   113ec:	mov	r6, #0
   113f0:	ldr	r0, [r4, #8]
   113f4:	mov	r1, r5
   113f8:	ldr	r0, [r0, r6, lsl #2]
   113fc:	bl	115b0 <maior_que@@Base>
   11400:	cmp	r0, #1
   11404:	beq	11428 <main@@Base+0x3c4>
   11408:	ldr	r0, [r4]
   1140c:	add	r6, r6, #1
   11410:	cmp	r6, r0
   11414:	blt	113f0 <main@@Base+0x38c>
   11418:	ldr	r0, [r4, #8]
   1141c:	b	11434 <main@@Base+0x3d0>
   11420:	ldr	r0, [r4, #8]
   11424:	b	11454 <main@@Base+0x3f0>
   11428:	ldr	r0, [r4, #8]
   1142c:	cmp	r6, #0
   11430:	beq	11454 <main@@Base+0x3f0>
   11434:	mov	r1, r6
   11438:	ldr	r2, [r0, r1, lsl #2]!
   1143c:	sub	r1, r1, #1
   11440:	cmp	r1, #0
   11444:	str	r2, [r0, #4]
   11448:	ldr	r0, [r4, #8]
   1144c:	bgt	11438 <main@@Base+0x3d4>
   11450:	b	11458 <main@@Base+0x3f4>
   11454:	mov	r6, #0
   11458:	str	r5, [r0, r6, lsl #2]
   1145c:	ldr	r0, [r4]
   11460:	add	r0, r0, #1
   11464:	str	r0, [r4]
   11468:	ldr	r8, [r9]
   1146c:	movw	r0, #6459	; 0x193b
   11470:	mov	r1, r8
   11474:	movt	r0, #1
   11478:	bl	10b3c <printf@plt>
   1147c:	mov	r0, #42	; 0x2a
   11480:	mov	r5, #42	; 0x2a
   11484:	bl	11518 <vetor_criaHeap@@Base>
   11488:	movw	r1, #5660	; 0x161c
   1148c:	movw	r2, #6168	; 0x1818
   11490:	movt	r1, #1
   11494:	movt	r2, #1
   11498:	bl	10fa0 <heap_carrega@@Base>
   1149c:	ldr	r1, [r9]
   114a0:	movw	r0, #6529	; 0x1981
   114a4:	movt	r0, #1
   114a8:	bl	10b3c <printf@plt>
   114ac:	mov	r4, #0
   114b0:	mov	r0, #0
   114b4:	bl	10b90 <puts@plt>
   114b8:	subs	r5, r5, #1
   114bc:	bne	114b0 <main@@Base+0x44c>
   114c0:	b	11284 <main@@Base+0x220>

000114c4 <vetor_cria@@Base>:
   114c4:	push	{r4, r5, fp, lr}
   114c8:	add	fp, sp, #8
   114cc:	mov	r5, r0
   114d0:	mov	r0, #12
   114d4:	bl	10b9c <malloc@plt>
   114d8:	cmp	r0, #0
   114dc:	beq	1150c <vetor_cria@@Base+0x48>
   114e0:	mov	r4, r0
   114e4:	mov	r0, #0
   114e8:	mov	r1, #4
   114ec:	stm	r4, {r0, r5}
   114f0:	mov	r0, r5
   114f4:	bl	10b24 <calloc@plt>
   114f8:	cmp	r0, #0
   114fc:	str	r0, [r4, #8]
   11500:	bne	11510 <vetor_cria@@Base+0x4c>
   11504:	mov	r0, r4
   11508:	bl	10b6c <free@plt>
   1150c:	mov	r4, #0
   11510:	mov	r0, r4
   11514:	pop	{r4, r5, fp, pc}

00011518 <vetor_criaHeap@@Base>:
   11518:	push	{r4, r5, fp, lr}
   1151c:	add	fp, sp, #8
   11520:	mov	r5, r0
   11524:	mov	r0, #12
   11528:	bl	10b9c <malloc@plt>
   1152c:	cmp	r0, #0
   11530:	beq	11560 <vetor_criaHeap@@Base+0x48>
   11534:	mov	r4, r0
   11538:	mov	r0, #0
   1153c:	mov	r1, #4
   11540:	stm	r4, {r0, r5}
   11544:	add	r0, r5, #1
   11548:	bl	10b24 <calloc@plt>
   1154c:	cmp	r0, #0
   11550:	str	r0, [r4, #8]
   11554:	bne	11564 <vetor_criaHeap@@Base+0x4c>
   11558:	mov	r0, r4
   1155c:	bl	10b6c <free@plt>
   11560:	mov	r4, #0
   11564:	mov	r0, r4
   11568:	pop	{r4, r5, fp, pc}

0001156c <elemento_cria@@Base>:
   1156c:	push	{r4, r5, r6, sl, fp, lr}
   11570:	add	fp, sp, #16
   11574:	mov	r5, r0
   11578:	mov	r0, #8
   1157c:	mov	r6, r1
   11580:	bl	10b9c <malloc@plt>
   11584:	cmp	r0, #0
   11588:	beq	115a4 <elemento_cria@@Base+0x38>
   1158c:	mov	r4, r0
   11590:	mov	r0, r6
   11594:	bl	10b84 <strdup@plt>
   11598:	str	r5, [r4]
   1159c:	str	r0, [r4, #4]
   115a0:	b	115a8 <elemento_cria@@Base+0x3c>
   115a4:	mov	r4, #0
   115a8:	mov	r0, r4
   115ac:	pop	{r4, r5, r6, sl, fp, pc}

000115b0 <maior_que@@Base>:
   115b0:	push	{r4, r5, fp, lr}
   115b4:	add	fp, sp, #8
   115b8:	cmp	r0, #0
   115bc:	movne	r5, r1
   115c0:	cmpne	r1, #0
   115c4:	bne	115dc <maior_que@@Base+0x2c>
   115c8:	movw	r0, #7111	; 0x1bc7
   115cc:	movt	r0, #1
   115d0:	bl	10b90 <puts@plt>
   115d4:	mov	r0, #0
   115d8:	pop	{r4, r5, fp, pc}
   115dc:	mov	r4, r0
   115e0:	movw	r0, #8288	; 0x2060
   115e4:	movt	r0, #2
   115e8:	ldr	r0, [r0]
   115ec:	bl	10b60 <fflush@plt>
   115f0:	movw	r0, #8296	; 0x2068
   115f4:	movt	r0, #2
   115f8:	ldr	r1, [r0]
   115fc:	add	r1, r1, #1
   11600:	str	r1, [r0]
   11604:	mov	r0, #0
   11608:	ldr	r1, [r5]
   1160c:	ldr	r2, [r4]
   11610:	cmp	r2, r1
   11614:	movwgt	r0, #1
   11618:	pop	{r4, r5, fp, pc}

0001161c <maior_que_HeapSort@@Base>:
   1161c:	push	{r4, r5, fp, lr}
   11620:	add	fp, sp, #8
   11624:	cmp	r0, #0
   11628:	movne	r5, r1
   1162c:	cmpne	r1, #0
   11630:	bne	11648 <maior_que_HeapSort@@Base+0x2c>
   11634:	movw	r0, #7111	; 0x1bc7
   11638:	movt	r0, #1
   1163c:	bl	10b90 <puts@plt>
   11640:	mov	r0, #0
   11644:	pop	{r4, r5, fp, pc}
   11648:	mov	r4, r0
   1164c:	movw	r0, #8288	; 0x2060
   11650:	movt	r0, #2
   11654:	ldr	r0, [r0]
   11658:	bl	10b60 <fflush@plt>
   1165c:	movw	r0, #8296	; 0x2068
   11660:	movt	r0, #2
   11664:	ldr	r1, [r0]
   11668:	add	r1, r1, #1
   1166c:	str	r1, [r0]
   11670:	ldr	r1, [r5, #4]
   11674:	ldr	r0, [r4, #4]
   11678:	bl	10b30 <strcmp@plt>
   1167c:	lsr	r0, r0, #31
   11680:	pop	{r4, r5, fp, pc}

00011684 <vetor_imprime@@Base>:
   11684:	push	{r4, r5, r6, sl, fp, lr}
   11688:	add	fp, sp, #16
   1168c:	mov	r4, r0
   11690:	ldr	r0, [r0]
   11694:	cmp	r0, #1
   11698:	blt	11704 <vetor_imprime@@Base+0x80>
   1169c:	ldr	r0, [r4, #8]
   116a0:	ldr	r0, [r0]
   116a4:	ldr	r2, [r0]
   116a8:	ldr	r1, [r0, #4]
   116ac:	movw	r0, #7067	; 0x1b9b
   116b0:	movt	r0, #1
   116b4:	bl	10b3c <printf@plt>
   116b8:	ldr	r0, [r4]
   116bc:	cmp	r0, #2
   116c0:	blt	116f8 <vetor_imprime@@Base+0x74>
   116c4:	movw	r5, #7096	; 0x1bb8
   116c8:	mov	r6, #1
   116cc:	movt	r5, #1
   116d0:	ldr	r0, [r4, #8]
   116d4:	ldr	r0, [r0, r6, lsl #2]
   116d8:	ldr	r2, [r0]
   116dc:	ldr	r1, [r0, #4]
   116e0:	mov	r0, r5
   116e4:	bl	10b3c <printf@plt>
   116e8:	ldr	r0, [r4]
   116ec:	add	r6, r6, #1
   116f0:	cmp	r6, r0
   116f4:	blt	116d0 <vetor_imprime@@Base+0x4c>
   116f8:	mov	r0, #10
   116fc:	pop	{r4, r5, r6, sl, fp, lr}
   11700:	b	10bd8 <putchar@plt>
   11704:	movw	r0, #7122	; 0x1bd2
   11708:	movt	r0, #1
   1170c:	pop	{r4, r5, r6, sl, fp, lr}
   11710:	b	10b90 <puts@plt>

00011714 <vetor_imprimeHeap@@Base>:
   11714:	push	{r4, r5, r6, sl, fp, lr}
   11718:	add	fp, sp, #16
   1171c:	mov	r4, r0
   11720:	ldr	r0, [r0]
   11724:	cmp	r0, #1
   11728:	blt	11794 <vetor_imprimeHeap@@Base+0x80>
   1172c:	ldr	r0, [r4, #8]
   11730:	ldr	r0, [r0, #4]
   11734:	ldr	r2, [r0]
   11738:	ldr	r1, [r0, #4]
   1173c:	movw	r0, #7067	; 0x1b9b
   11740:	movt	r0, #1
   11744:	bl	10b3c <printf@plt>
   11748:	ldr	r0, [r4]
   1174c:	cmp	r0, #3
   11750:	blt	11788 <vetor_imprimeHeap@@Base+0x74>
   11754:	movw	r5, #7096	; 0x1bb8
   11758:	mov	r6, #2
   1175c:	movt	r5, #1
   11760:	ldr	r0, [r4, #8]
   11764:	ldr	r0, [r0, r6, lsl #2]
   11768:	ldr	r2, [r0]
   1176c:	ldr	r1, [r0, #4]
   11770:	mov	r0, r5
   11774:	bl	10b3c <printf@plt>
   11778:	ldr	r0, [r4]
   1177c:	add	r6, r6, #1
   11780:	cmp	r6, r0
   11784:	blt	11760 <vetor_imprimeHeap@@Base+0x4c>
   11788:	mov	r0, #10
   1178c:	pop	{r4, r5, r6, sl, fp, lr}
   11790:	b	10bd8 <putchar@plt>
   11794:	movw	r0, #7122	; 0x1bd2
   11798:	movt	r0, #1
   1179c:	pop	{r4, r5, r6, sl, fp, lr}
   117a0:	b	10b90 <puts@plt>

000117a4 <__libc_csu_init@@Base>:
   117a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117a8:	mov	r7, r0
   117ac:	ldr	r6, [pc, #72]	; 117fc <__libc_csu_init@@Base+0x58>
   117b0:	ldr	r5, [pc, #72]	; 11800 <__libc_csu_init@@Base+0x5c>
   117b4:	add	r6, pc, r6
   117b8:	add	r5, pc, r5
   117bc:	sub	r6, r6, r5
   117c0:	mov	r8, r1
   117c4:	mov	r9, r2
   117c8:	bl	10b04 <calloc@plt-0x20>
   117cc:	asrs	r6, r6, #2
   117d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   117d4:	mov	r4, #0
   117d8:	add	r4, r4, #1
   117dc:	ldr	r3, [r5], #4
   117e0:	mov	r2, r9
   117e4:	mov	r1, r8
   117e8:	mov	r0, r7
   117ec:	blx	r3
   117f0:	cmp	r6, r4
   117f4:	bne	117d8 <__libc_csu_init@@Base+0x34>
   117f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117fc:	andeq	r0, r1, r0, asr r7
   11800:	andeq	r0, r1, r8, asr #14

00011804 <__libc_csu_fini@@Base>:
   11804:	bx	lr

Disassembly of section .fini:

00011808 <.fini>:
   11808:	push	{r3, lr}
   1180c:	pop	{r3, pc}
