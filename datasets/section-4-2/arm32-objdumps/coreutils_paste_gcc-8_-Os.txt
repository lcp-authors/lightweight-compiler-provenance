
../repos/coreutils/src/paste:     file format elf32-littlearm


Disassembly of section .init:

00010c10 <.init>:
   10c10:	push	{r3, lr}
   10c14:	bl	1120c <putchar_unlocked@plt+0x39c>
   10c18:	pop	{r3, pc}

Disassembly of section .plt:

00010c1c <calloc@plt-0x14>:
   10c1c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c20:	ldr	lr, [pc, #4]	; 10c2c <calloc@plt-0x4>
   10c24:	add	lr, pc, lr
   10c28:	ldr	pc, [lr, #8]!
   10c2c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>

00010c30 <calloc@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #20, 20	; 0x14000
   10c38:	ldr	pc, [ip, #980]!	; 0x3d4

00010c3c <fputs_unlocked@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #20, 20	; 0x14000
   10c44:	ldr	pc, [ip, #972]!	; 0x3cc

00010c48 <strcmp@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #20, 20	; 0x14000
   10c50:	ldr	pc, [ip, #964]!	; 0x3c4

00010c54 <posix_fadvise64@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #956]!	; 0x3bc

00010c60 <fflush@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #948]!	; 0x3b4

00010c6c <free@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #940]!	; 0x3ac

00010c78 <_exit@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #932]!	; 0x3a4

00010c84 <memcpy@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #924]!	; 0x39c

00010c90 <mbsinit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #916]!	; 0x394

00010c9c <fwrite_unlocked@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #908]!	; 0x38c

00010ca8 <memcmp@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #900]!	; 0x384

00010cb4 <fputc_unlocked@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #892]!	; 0x37c

00010cc0 <getc_unlocked@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #884]!	; 0x374

00010ccc <dcgettext@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #876]!	; 0x36c

00010cd8 <realloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #868]!	; 0x364

00010ce4 <textdomain@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #860]!	; 0x35c

00010cf0 <iswprint@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #852]!	; 0x354

00010cfc <lseek64@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #844]!	; 0x34c

00010d08 <__ctype_get_mb_cur_max@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #836]!	; 0x344

00010d14 <__fpending@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #828]!	; 0x33c

00010d20 <ferror_unlocked@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #820]!	; 0x334

00010d2c <mbrtowc@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #812]!	; 0x32c

00010d38 <error@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #804]!	; 0x324

00010d44 <malloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #796]!	; 0x31c

00010d50 <__libc_start_main@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #788]!	; 0x314

00010d5c <__freading@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #780]!	; 0x30c

00010d68 <__gmon_start__@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #772]!	; 0x304

00010d74 <getopt_long@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #764]!	; 0x2fc

00010d80 <__ctype_b_loc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #756]!	; 0x2f4

00010d8c <exit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #748]!	; 0x2ec

00010d98 <strlen@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #740]!	; 0x2e4

00010da4 <__errno_location@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #732]!	; 0x2dc

00010db0 <__cxa_atexit@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #724]!	; 0x2d4

00010dbc <memset@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #716]!	; 0x2cc

00010dc8 <__printf_chk@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #708]!	; 0x2c4

00010dd4 <fileno@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #700]!	; 0x2bc

00010de0 <__fprintf_chk@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #692]!	; 0x2b4

00010dec <fclose@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #684]!	; 0x2ac

00010df8 <fseeko64@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #676]!	; 0x2a4

00010e04 <setlocale@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #668]!	; 0x29c

00010e10 <strrchr@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #660]!	; 0x294

00010e1c <nl_langinfo@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #652]!	; 0x28c

00010e28 <clearerr_unlocked@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #644]!	; 0x284

00010e34 <fopen64@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #636]!	; 0x27c

00010e40 <bindtextdomain@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #628]!	; 0x274

00010e4c <fputs@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #620]!	; 0x26c

00010e58 <strncmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #612]!	; 0x264

00010e64 <abort@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #604]!	; 0x25c

00010e70 <putchar_unlocked@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #596]!	; 0x254

Disassembly of section .text:

00010e7c <.text>:
   10e7c:	push	{r4, lr}
   10e80:	bl	10da4 <__errno_location@plt>
   10e84:	mov	r3, #12
   10e88:	str	r3, [r0]
   10e8c:	mov	r0, #0
   10e90:	pop	{r4, pc}
   10e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e98:	mov	r6, r0
   10e9c:	sub	sp, sp, #28
   10ea0:	mov	r7, r1
   10ea4:	ldr	r0, [r1]
   10ea8:	bl	11e4c <putchar_unlocked@plt+0xfdc>
   10eac:	ldr	r1, [pc, #704]	; 11174 <putchar_unlocked@plt+0x304>
   10eb0:	mov	r0, #6
   10eb4:	bl	10e04 <setlocale@plt>
   10eb8:	ldr	r4, [pc, #696]	; 11178 <putchar_unlocked@plt+0x308>
   10ebc:	ldr	r1, [pc, #696]	; 1117c <putchar_unlocked@plt+0x30c>
   10ec0:	ldr	r0, [pc, #696]	; 11180 <putchar_unlocked@plt+0x310>
   10ec4:	bl	10e40 <bindtextdomain@plt>
   10ec8:	ldr	r5, [pc, #692]	; 11184 <putchar_unlocked@plt+0x314>
   10ecc:	ldr	sl, [pc, #692]	; 11188 <putchar_unlocked@plt+0x318>
   10ed0:	ldr	r9, [pc, #692]	; 1118c <putchar_unlocked@plt+0x31c>
   10ed4:	ldr	fp, [pc, #692]	; 11190 <putchar_unlocked@plt+0x320>
   10ed8:	ldr	r0, [pc, #672]	; 11180 <putchar_unlocked@plt+0x310>
   10edc:	bl	10ce4 <textdomain@plt>
   10ee0:	ldr	r0, [pc, #684]	; 11194 <putchar_unlocked@plt+0x324>
   10ee4:	bl	13fa8 <putchar_unlocked@plt+0x3138>
   10ee8:	mov	r3, #0
   10eec:	strb	r3, [r4]
   10ef0:	strb	r3, [r4, #12]
   10ef4:	mov	r8, #0
   10ef8:	mov	r3, sl
   10efc:	mov	r2, r9
   10f00:	mov	r1, r7
   10f04:	mov	r0, r6
   10f08:	str	r8, [sp]
   10f0c:	bl	10d74 <getopt_long@plt>
   10f10:	cmn	r0, #1
   10f14:	bne	10fb0 <putchar_unlocked@plt+0x140>
   10f18:	ldr	r2, [pc, #632]	; 11198 <putchar_unlocked@plt+0x328>
   10f1c:	mov	r0, r5
   10f20:	mov	r8, #11
   10f24:	mov	r9, #10
   10f28:	mov	sl, #0
   10f2c:	mov	fp, #8
   10f30:	ldr	r3, [r2]
   10f34:	str	r2, [sp, #20]
   10f38:	subs	r6, r6, r3
   10f3c:	ldreq	r2, [pc, #600]	; 1119c <putchar_unlocked@plt+0x32c>
   10f40:	moveq	r6, #1
   10f44:	streq	r2, [r7, r3, lsl #2]
   10f48:	bl	13bfc <putchar_unlocked@plt+0x2d8c>
   10f4c:	mov	r2, r5
   10f50:	mov	r1, #12
   10f54:	str	r0, [r4, #4]
   10f58:	mov	ip, #13
   10f5c:	mov	lr, #9
   10f60:	ldrb	r3, [r2]
   10f64:	cmp	r3, #0
   10f68:	bne	1104c <putchar_unlocked@plt+0x1dc>
   10f6c:	cmp	r3, #0
   10f70:	str	r0, [r4, #8]
   10f74:	beq	110fc <putchar_unlocked@plt+0x28c>
   10f78:	mov	r2, #5
   10f7c:	ldr	r1, [pc, #540]	; 111a0 <putchar_unlocked@plt+0x330>
   10f80:	mov	r0, #0
   10f84:	bl	10ccc <dcgettext@plt>
   10f88:	mov	r4, r0
   10f8c:	mov	r2, r5
   10f90:	mov	r1, #6
   10f94:	mov	r0, #0
   10f98:	bl	1330c <putchar_unlocked@plt+0x249c>
   10f9c:	mov	r3, r0
   10fa0:	mov	r2, r4
   10fa4:	mov	r1, #0
   10fa8:	mov	r0, #1
   10fac:	bl	10d38 <error@plt>
   10fb0:	cmp	r0, #100	; 0x64
   10fb4:	beq	10ff4 <putchar_unlocked@plt+0x184>
   10fb8:	bgt	10fd8 <putchar_unlocked@plt+0x168>
   10fbc:	cmn	r0, #3
   10fc0:	beq	11018 <putchar_unlocked@plt+0x1a8>
   10fc4:	cmn	r0, #2
   10fc8:	moveq	r0, r8
   10fcc:	beq	10fd4 <putchar_unlocked@plt+0x164>
   10fd0:	mov	r0, #1
   10fd4:	bl	118b4 <putchar_unlocked@plt+0xa44>
   10fd8:	cmp	r0, #115	; 0x73
   10fdc:	beq	1100c <putchar_unlocked@plt+0x19c>
   10fe0:	cmp	r0, #122	; 0x7a
   10fe4:	bne	10fd0 <putchar_unlocked@plt+0x160>
   10fe8:	ldr	r3, [pc, #436]	; 111a4 <putchar_unlocked@plt+0x334>
   10fec:	strb	r8, [r3]
   10ff0:	b	10ef4 <putchar_unlocked@plt+0x84>
   10ff4:	ldr	r5, [fp]
   10ff8:	ldr	r3, [pc, #424]	; 111a8 <putchar_unlocked@plt+0x338>
   10ffc:	ldrb	r2, [r5]
   11000:	cmp	r2, #0
   11004:	moveq	r5, r3
   11008:	b	10ef4 <putchar_unlocked@plt+0x84>
   1100c:	mov	r3, #1
   11010:	strb	r3, [r4, #12]
   11014:	b	10ef4 <putchar_unlocked@plt+0x84>
   11018:	ldr	r3, [pc, #396]	; 111ac <putchar_unlocked@plt+0x33c>
   1101c:	ldr	r0, [pc, #396]	; 111b0 <putchar_unlocked@plt+0x340>
   11020:	ldr	r2, [pc, #396]	; 111b4 <putchar_unlocked@plt+0x344>
   11024:	stmib	sp, {r3, r8}
   11028:	ldr	r3, [pc, #392]	; 111b8 <putchar_unlocked@plt+0x348>
   1102c:	ldr	r1, [pc, #392]	; 111bc <putchar_unlocked@plt+0x34c>
   11030:	str	r3, [sp]
   11034:	ldr	r3, [pc, #388]	; 111c0 <putchar_unlocked@plt+0x350>
   11038:	ldr	r0, [r0]
   1103c:	ldr	r3, [r3]
   11040:	bl	13898 <putchar_unlocked@plt+0x2a28>
   11044:	mov	r0, r8
   11048:	bl	10d8c <exit@plt>
   1104c:	cmp	r3, #92	; 0x5c
   11050:	addne	r2, r2, #1
   11054:	strbne	r3, [r0]
   11058:	bne	110a0 <putchar_unlocked@plt+0x230>
   1105c:	ldrb	r3, [r2, #1]
   11060:	cmp	r3, #102	; 0x66
   11064:	beq	110ec <putchar_unlocked@plt+0x27c>
   11068:	bhi	110a8 <putchar_unlocked@plt+0x238>
   1106c:	cmp	r3, #48	; 0x30
   11070:	beq	110e4 <putchar_unlocked@plt+0x274>
   11074:	bhi	11088 <putchar_unlocked@plt+0x218>
   11078:	cmp	r3, #0
   1107c:	beq	110f4 <putchar_unlocked@plt+0x284>
   11080:	strb	r3, [r0]
   11084:	b	1109c <putchar_unlocked@plt+0x22c>
   11088:	cmp	r3, #92	; 0x5c
   1108c:	beq	11080 <putchar_unlocked@plt+0x210>
   11090:	cmp	r3, #98	; 0x62
   11094:	strbeq	fp, [r0]
   11098:	bne	11080 <putchar_unlocked@plt+0x210>
   1109c:	add	r2, r2, #2
   110a0:	add	r0, r0, #1
   110a4:	b	10f60 <putchar_unlocked@plt+0xf0>
   110a8:	cmp	r3, #114	; 0x72
   110ac:	strbeq	ip, [r0]
   110b0:	beq	1109c <putchar_unlocked@plt+0x22c>
   110b4:	bhi	110c8 <putchar_unlocked@plt+0x258>
   110b8:	cmp	r3, #110	; 0x6e
   110bc:	strbeq	r9, [r0]
   110c0:	beq	1109c <putchar_unlocked@plt+0x22c>
   110c4:	b	11080 <putchar_unlocked@plt+0x210>
   110c8:	cmp	r3, #116	; 0x74
   110cc:	strbeq	lr, [r0]
   110d0:	beq	1109c <putchar_unlocked@plt+0x22c>
   110d4:	cmp	r3, #118	; 0x76
   110d8:	strbeq	r8, [r0]
   110dc:	beq	1109c <putchar_unlocked@plt+0x22c>
   110e0:	b	11080 <putchar_unlocked@plt+0x210>
   110e4:	strb	sl, [r0]
   110e8:	b	1109c <putchar_unlocked@plt+0x22c>
   110ec:	strb	r1, [r0]
   110f0:	b	1109c <putchar_unlocked@plt+0x22c>
   110f4:	mov	r3, #1
   110f8:	b	10f6c <putchar_unlocked@plt+0xfc>
   110fc:	ldrb	r1, [r4, #12]
   11100:	mov	r0, r6
   11104:	ldr	r2, [pc, #184]	; 111c4 <putchar_unlocked@plt+0x354>
   11108:	ldr	r3, [pc, #184]	; 111c8 <putchar_unlocked@plt+0x358>
   1110c:	cmp	r1, #0
   11110:	moveq	r3, r2
   11114:	ldr	r2, [sp, #20]
   11118:	ldr	r1, [r2]
   1111c:	add	r1, r7, r1, lsl #2
   11120:	blx	r3
   11124:	mov	r5, r0
   11128:	ldr	r0, [r4, #4]
   1112c:	bl	11d64 <putchar_unlocked@plt+0xef4>
   11130:	ldrb	r3, [r4]
   11134:	cmp	r3, #0
   11138:	beq	11164 <putchar_unlocked@plt+0x2f4>
   1113c:	ldr	r3, [pc, #136]	; 111cc <putchar_unlocked@plt+0x35c>
   11140:	ldr	r0, [r3]
   11144:	bl	11c6c <putchar_unlocked@plt+0xdfc>
   11148:	cmn	r0, #1
   1114c:	bne	11164 <putchar_unlocked@plt+0x2f4>
   11150:	bl	10da4 <__errno_location@plt>
   11154:	ldr	r2, [pc, #64]	; 1119c <putchar_unlocked@plt+0x32c>
   11158:	ldr	r1, [r0]
   1115c:	mov	r0, #1
   11160:	bl	10d38 <error@plt>
   11164:	eor	r0, r5, #1
   11168:	uxtb	r0, r0
   1116c:	add	sp, sp, #28
   11170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11174:	andeq	r4, r1, sp, ror #7
   11178:	andeq	r5, r2, r0, asr r1
   1117c:	andeq	r4, r1, lr, ror #7
   11180:	andeq	r4, r1, r6, asr #6
   11184:	andeq	r4, r1, ip, ror #7
   11188:	andeq	r4, r1, r4
   1118c:	andeq	r4, r1, r5, lsr #8
   11190:	andeq	r5, r2, r8, asr #2
   11194:	andeq	r1, r1, r4, ror #22
   11198:	andeq	r5, r2, r0, lsr r1
   1119c:	andeq	r4, r1, r4, asr #10
   111a0:	andeq	r4, r1, sl, lsr #8
   111a4:	ldrdeq	r5, [r2], -ip
   111a8:	andeq	r4, r1, r9, ror #7
   111ac:	andeq	r4, r1, r6, lsl #8
   111b0:	andeq	r5, r2, r4, asr #2
   111b4:	andeq	r4, r1, r2, asr #6
   111b8:	andeq	r4, r1, r6, lsl r4
   111bc:	andeq	r4, r1, r9, lsl #1
   111c0:	andeq	r5, r2, r0, ror #1
   111c4:	andeq	r1, r1, r4, lsl #6
   111c8:	andeq	r1, r1, r0, lsl #14
   111cc:	andeq	r5, r2, r0, asr #2
   111d0:	mov	fp, #0
   111d4:	mov	lr, #0
   111d8:	pop	{r1}		; (ldr r1, [sp], #4)
   111dc:	mov	r2, sp
   111e0:	push	{r2}		; (str r2, [sp, #-4]!)
   111e4:	push	{r0}		; (str r0, [sp, #-4]!)
   111e8:	ldr	ip, [pc, #16]	; 11200 <putchar_unlocked@plt+0x390>
   111ec:	push	{ip}		; (str ip, [sp, #-4]!)
   111f0:	ldr	r0, [pc, #12]	; 11204 <putchar_unlocked@plt+0x394>
   111f4:	ldr	r3, [pc, #12]	; 11208 <putchar_unlocked@plt+0x398>
   111f8:	bl	10d50 <__libc_start_main@plt>
   111fc:	bl	10e64 <abort@plt>
   11200:	andeq	r3, r1, r4, lsr #31
   11204:	muleq	r1, r4, lr
   11208:	andeq	r3, r1, r4, asr #30
   1120c:	ldr	r3, [pc, #20]	; 11228 <putchar_unlocked@plt+0x3b8>
   11210:	ldr	r2, [pc, #20]	; 1122c <putchar_unlocked@plt+0x3bc>
   11214:	add	r3, pc, r3
   11218:	ldr	r2, [r3, r2]
   1121c:	cmp	r2, #0
   11220:	bxeq	lr
   11224:	b	10d68 <__gmon_start__@plt>
   11228:	andeq	r3, r1, r4, ror #27
   1122c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11230:	ldr	r0, [pc, #24]	; 11250 <putchar_unlocked@plt+0x3e0>
   11234:	ldr	r3, [pc, #24]	; 11254 <putchar_unlocked@plt+0x3e4>
   11238:	cmp	r3, r0
   1123c:	bxeq	lr
   11240:	ldr	r3, [pc, #16]	; 11258 <putchar_unlocked@plt+0x3e8>
   11244:	cmp	r3, #0
   11248:	bxeq	lr
   1124c:	bx	r3
   11250:	andeq	r5, r2, r8, lsr #2
   11254:	andeq	r5, r2, r8, lsr #2
   11258:	andeq	r0, r0, r0
   1125c:	ldr	r0, [pc, #36]	; 11288 <putchar_unlocked@plt+0x418>
   11260:	ldr	r1, [pc, #36]	; 1128c <putchar_unlocked@plt+0x41c>
   11264:	sub	r1, r1, r0
   11268:	asr	r1, r1, #2
   1126c:	add	r1, r1, r1, lsr #31
   11270:	asrs	r1, r1, #1
   11274:	bxeq	lr
   11278:	ldr	r3, [pc, #16]	; 11290 <putchar_unlocked@plt+0x420>
   1127c:	cmp	r3, #0
   11280:	bxeq	lr
   11284:	bx	r3
   11288:	andeq	r5, r2, r8, lsr #2
   1128c:	andeq	r5, r2, r8, lsr #2
   11290:	andeq	r0, r0, r0
   11294:	push	{r4, lr}
   11298:	ldr	r4, [pc, #24]	; 112b8 <putchar_unlocked@plt+0x448>
   1129c:	ldrb	r3, [r4]
   112a0:	cmp	r3, #0
   112a4:	popne	{r4, pc}
   112a8:	bl	11230 <putchar_unlocked@plt+0x3c0>
   112ac:	mov	r3, #1
   112b0:	strb	r3, [r4]
   112b4:	pop	{r4, pc}
   112b8:	andeq	r5, r2, ip, asr #2
   112bc:	b	1125c <putchar_unlocked@plt+0x3ec>
   112c0:	push	{r4, lr}
   112c4:	bl	10da4 <__errno_location@plt>
   112c8:	ldr	r4, [r0]
   112cc:	mov	r2, #5
   112d0:	mov	r0, #0
   112d4:	ldr	r1, [pc, #16]	; 112ec <putchar_unlocked@plt+0x47c>
   112d8:	bl	10ccc <dcgettext@plt>
   112dc:	mov	r2, r0
   112e0:	mov	r0, #1
   112e4:	mov	r1, r4
   112e8:	bl	10d38 <error@plt>
   112ec:	andeq	r4, r1, r4, rrx
   112f0:	push	{r4, lr}
   112f4:	bl	10e70 <putchar_unlocked@plt>
   112f8:	cmp	r0, #0
   112fc:	popge	{r4, pc}
   11300:	bl	112c0 <putchar_unlocked@plt+0x450>
   11304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11308:	sub	sp, sp, #36	; 0x24
   1130c:	mov	r4, r0
   11310:	add	r0, r0, #2
   11314:	mov	sl, #0
   11318:	mov	r6, sl
   1131c:	str	r1, [sp, #28]
   11320:	bl	13960 <putchar_unlocked@plt+0x2af0>
   11324:	mov	r1, #4
   11328:	str	r0, [sp, #16]
   1132c:	add	r0, r4, #1
   11330:	bl	13a20 <putchar_unlocked@plt+0x2bb0>
   11334:	ldr	r8, [pc, #932]	; 116e0 <putchar_unlocked@plt+0x870>
   11338:	str	r0, [sp, #4]
   1133c:	ldr	r9, [pc, #928]	; 116e4 <putchar_unlocked@plt+0x874>
   11340:	ldr	r7, [sp, #28]
   11344:	cmp	r6, r4
   11348:	bne	11388 <putchar_unlocked@plt+0x518>
   1134c:	cmp	sl, #0
   11350:	beq	116d4 <putchar_unlocked@plt+0x864>
   11354:	ldr	r3, [pc, #908]	; 116e8 <putchar_unlocked@plt+0x878>
   11358:	ldrb	r3, [r3]
   1135c:	cmp	r3, #0
   11360:	streq	r4, [sp]
   11364:	beq	11478 <putchar_unlocked@plt+0x608>
   11368:	mov	r2, #5
   1136c:	ldr	r1, [pc, #888]	; 116ec <putchar_unlocked@plt+0x87c>
   11370:	mov	r0, #0
   11374:	bl	10ccc <dcgettext@plt>
   11378:	mov	r2, r0
   1137c:	mov	r1, #0
   11380:	mov	r0, #1
   11384:	bl	10d38 <error@plt>
   11388:	mov	fp, r7
   1138c:	ldr	r3, [r7], #4
   11390:	mov	r1, r8
   11394:	mov	r0, r3
   11398:	str	r3, [sp]
   1139c:	bl	10c48 <strcmp@plt>
   113a0:	cmp	r0, #0
   113a4:	ldr	r3, [sp]
   113a8:	bne	113d0 <putchar_unlocked@plt+0x560>
   113ac:	ldr	r2, [pc, #820]	; 116e8 <putchar_unlocked@plt+0x878>
   113b0:	mov	r3, #1
   113b4:	strb	r3, [r2]
   113b8:	ldr	r3, [pc, #816]	; 116f0 <putchar_unlocked@plt+0x880>
   113bc:	ldr	r2, [sp, #4]
   113c0:	ldr	r3, [r3]
   113c4:	str	r3, [r2, r6, lsl #2]
   113c8:	add	r6, r6, #1
   113cc:	b	11344 <putchar_unlocked@plt+0x4d4>
   113d0:	mov	r1, r9
   113d4:	mov	r0, r3
   113d8:	bl	10e34 <fopen64@plt>
   113dc:	ldr	r2, [sp, #4]
   113e0:	cmp	r0, #0
   113e4:	str	r0, [r2, r6, lsl #2]
   113e8:	bne	11420 <putchar_unlocked@plt+0x5b0>
   113ec:	str	r0, [sp]
   113f0:	bl	10da4 <__errno_location@plt>
   113f4:	ldr	r3, [sp]
   113f8:	mov	r1, #3
   113fc:	ldr	r4, [r0]
   11400:	ldr	r2, [fp]
   11404:	mov	r0, r3
   11408:	bl	1330c <putchar_unlocked@plt+0x249c>
   1140c:	mov	r3, r0
   11410:	ldr	r2, [pc, #732]	; 116f4 <putchar_unlocked@plt+0x884>
   11414:	mov	r1, r4
   11418:	mov	r0, #1
   1141c:	bl	10d38 <error@plt>
   11420:	bl	10dd4 <fileno@plt>
   11424:	ldr	r3, [sp, #4]
   11428:	cmp	r0, #0
   1142c:	mov	r1, #2
   11430:	moveq	sl, #1
   11434:	ldr	r0, [r3, r6, lsl #2]
   11438:	bl	11c3c <putchar_unlocked@plt+0xdcc>
   1143c:	b	113c8 <putchar_unlocked@plt+0x558>
   11440:	ldr	r3, [pc, #672]	; 116e8 <putchar_unlocked@plt+0x878>
   11444:	mov	r9, #0
   11448:	mov	r7, r9
   1144c:	ldr	fp, [sp, #4]
   11450:	str	r9, [sp, #12]
   11454:	ldr	r8, [r3, #4]
   11458:	str	r3, [sp, #20]
   1145c:	ldr	r3, [sp]
   11460:	cmp	r3, #0
   11464:	cmpne	r9, r4
   11468:	movcc	r3, #1
   1146c:	movcs	r3, #0
   11470:	str	r3, [sp, #8]
   11474:	bcc	114a0 <putchar_unlocked@plt+0x630>
   11478:	ldr	r3, [sp]
   1147c:	cmp	r3, #0
   11480:	bne	11440 <putchar_unlocked@plt+0x5d0>
   11484:	ldr	r0, [sp, #4]
   11488:	bl	11d64 <putchar_unlocked@plt+0xef4>
   1148c:	ldr	r0, [sp, #16]
   11490:	bl	11d64 <putchar_unlocked@plt+0xef4>
   11494:	mov	r0, sl
   11498:	add	sp, sp, #36	; 0x24
   1149c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114a0:	ldr	r0, [fp]
   114a4:	cmp	r0, #0
   114a8:	beq	11530 <putchar_unlocked@plt+0x6c0>
   114ac:	bl	10cc0 <getc_unlocked@plt>
   114b0:	mov	r6, r0
   114b4:	bl	10da4 <__errno_location@plt>
   114b8:	cmp	r7, #0
   114bc:	cmnne	r6, #1
   114c0:	str	r0, [sp, #24]
   114c4:	ldr	r5, [r0]
   114c8:	beq	11608 <putchar_unlocked@plt+0x798>
   114cc:	mov	r2, r7
   114d0:	mov	r1, #1
   114d4:	ldr	r3, [pc, #540]	; 116f8 <putchar_unlocked@plt+0x888>
   114d8:	ldr	r0, [sp, #16]
   114dc:	ldr	r3, [r3]
   114e0:	bl	10c9c <fwrite_unlocked@plt>
   114e4:	cmp	r0, r7
   114e8:	beq	11604 <putchar_unlocked@plt+0x794>
   114ec:	bl	112c0 <putchar_unlocked@plt+0x450>
   114f0:	ldr	r3, [pc, #516]	; 116fc <putchar_unlocked@plt+0x88c>
   114f4:	ldrb	r3, [r3]
   114f8:	cmp	r3, r6
   114fc:	beq	11660 <putchar_unlocked@plt+0x7f0>
   11500:	uxtb	r0, r6
   11504:	bl	112f0 <putchar_unlocked@plt+0x480>
   11508:	ldr	r0, [fp]
   1150c:	bl	10cc0 <getc_unlocked@plt>
   11510:	ldr	r3, [sp, #24]
   11514:	mov	r6, r0
   11518:	ldr	r5, [r3]
   1151c:	ldr	r3, [sp, #8]
   11520:	cmn	r6, #1
   11524:	bne	114f0 <putchar_unlocked@plt+0x680>
   11528:	cmp	r3, #0
   1152c:	bne	11660 <putchar_unlocked@plt+0x7f0>
   11530:	ldr	r0, [fp]
   11534:	cmp	r0, #0
   11538:	beq	115a8 <putchar_unlocked@plt+0x738>
   1153c:	bl	10d20 <ferror_unlocked@plt>
   11540:	ldr	r3, [pc, #424]	; 116f0 <putchar_unlocked@plt+0x880>
   11544:	cmp	r0, #0
   11548:	moveq	r5, #0
   1154c:	ldr	r0, [fp]
   11550:	ldr	r3, [r3]
   11554:	cmp	r0, r3
   11558:	bne	11610 <putchar_unlocked@plt+0x7a0>
   1155c:	bl	10e28 <clearerr_unlocked@plt>
   11560:	cmp	r5, #0
   11564:	beq	11594 <putchar_unlocked@plt+0x724>
   11568:	ldr	r3, [sp, #28]
   1156c:	mov	r1, #3
   11570:	mov	r0, #0
   11574:	mov	sl, #0
   11578:	ldr	r2, [r3, r9, lsl #2]
   1157c:	bl	1330c <putchar_unlocked@plt+0x249c>
   11580:	mov	r3, r0
   11584:	ldr	r2, [pc, #360]	; 116f4 <putchar_unlocked@plt+0x884>
   11588:	mov	r1, r5
   1158c:	mov	r0, #0
   11590:	bl	10d38 <error@plt>
   11594:	mov	r3, #0
   11598:	str	r3, [fp]
   1159c:	ldr	r3, [sp]
   115a0:	sub	r3, r3, #1
   115a4:	str	r3, [sp]
   115a8:	add	r3, r9, #1
   115ac:	cmp	r4, r3
   115b0:	bne	11630 <putchar_unlocked@plt+0x7c0>
   115b4:	ldr	r3, [sp, #12]
   115b8:	cmp	r3, #0
   115bc:	beq	115f8 <putchar_unlocked@plt+0x788>
   115c0:	cmp	r7, #0
   115c4:	beq	115e8 <putchar_unlocked@plt+0x778>
   115c8:	ldr	r3, [pc, #296]	; 116f8 <putchar_unlocked@plt+0x888>
   115cc:	mov	r2, r7
   115d0:	mov	r1, #1
   115d4:	ldr	r0, [sp, #16]
   115d8:	ldr	r3, [r3]
   115dc:	bl	10c9c <fwrite_unlocked@plt>
   115e0:	cmp	r0, r7
   115e4:	bne	114ec <putchar_unlocked@plt+0x67c>
   115e8:	ldr	r3, [pc, #268]	; 116fc <putchar_unlocked@plt+0x88c>
   115ec:	mov	r7, #0
   115f0:	ldrb	r0, [r3]
   115f4:	bl	112f0 <putchar_unlocked@plt+0x480>
   115f8:	add	r9, r9, #1
   115fc:	add	fp, fp, #4
   11600:	b	1145c <putchar_unlocked@plt+0x5ec>
   11604:	mov	r7, #0
   11608:	mov	r3, #0
   1160c:	b	11520 <putchar_unlocked@plt+0x6b0>
   11610:	bl	11c6c <putchar_unlocked@plt+0xdfc>
   11614:	cmn	r0, #1
   11618:	bne	11560 <putchar_unlocked@plt+0x6f0>
   1161c:	cmp	r5, #0
   11620:	bne	11568 <putchar_unlocked@plt+0x6f8>
   11624:	bl	10da4 <__errno_location@plt>
   11628:	ldr	r5, [r0]
   1162c:	b	11560 <putchar_unlocked@plt+0x6f0>
   11630:	ldrb	r3, [r8]
   11634:	add	r8, r8, #1
   11638:	cmp	r3, #0
   1163c:	ldrne	r2, [sp, #16]
   11640:	strbne	r3, [r2, r7]
   11644:	addne	r7, r7, #1
   11648:	ldr	r3, [sp, #20]
   1164c:	ldr	r3, [r3, #8]
   11650:	cmp	r3, r8
   11654:	ldreq	r3, [sp, #20]
   11658:	ldreq	r8, [r3, #4]
   1165c:	b	115f8 <putchar_unlocked@plt+0x788>
   11660:	add	r3, r9, #1
   11664:	cmp	r3, r4
   11668:	beq	116bc <putchar_unlocked@plt+0x84c>
   1166c:	ldr	r3, [pc, #136]	; 116fc <putchar_unlocked@plt+0x88c>
   11670:	ldrb	r3, [r3]
   11674:	cmp	r3, r6
   11678:	cmnne	r6, #1
   1167c:	beq	11688 <putchar_unlocked@plt+0x818>
   11680:	uxtb	r0, r6
   11684:	bl	112f0 <putchar_unlocked@plt+0x480>
   11688:	ldrb	r0, [r8]
   1168c:	cmp	r0, #0
   11690:	beq	11698 <putchar_unlocked@plt+0x828>
   11694:	bl	112f0 <putchar_unlocked@plt+0x480>
   11698:	ldr	r3, [sp, #20]
   1169c:	add	r8, r8, #1
   116a0:	ldr	r3, [r3, #8]
   116a4:	cmp	r3, r8
   116a8:	ldreq	r3, [sp, #20]
   116ac:	ldreq	r8, [r3, #4]
   116b0:	ldr	r3, [sp, #8]
   116b4:	str	r3, [sp, #12]
   116b8:	b	115f8 <putchar_unlocked@plt+0x788>
   116bc:	cmn	r6, #1
   116c0:	ldreq	r3, [pc, #52]	; 116fc <putchar_unlocked@plt+0x88c>
   116c4:	uxtbne	r0, r6
   116c8:	ldrbeq	r0, [r3]
   116cc:	bl	112f0 <putchar_unlocked@plt+0x480>
   116d0:	b	116b0 <putchar_unlocked@plt+0x840>
   116d4:	mov	sl, #1
   116d8:	str	r4, [sp]
   116dc:	b	11478 <putchar_unlocked@plt+0x608>
   116e0:	andeq	r4, r1, r4, asr #10
   116e4:	andeq	r4, r1, lr, rrx
   116e8:	andeq	r5, r2, r0, asr r1
   116ec:	andeq	r4, r1, r0, ror r0
   116f0:	andeq	r5, r2, r0, asr #2
   116f4:	andeq	r4, r1, fp, asr r4
   116f8:	andeq	r5, r2, r4, asr #2
   116fc:	ldrdeq	r5, [r2], -ip
   11700:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11704:	mov	sl, r0
   11708:	mov	r5, r1
   1170c:	mov	r9, #1
   11710:	ldr	r7, [pc, #388]	; 1189c <putchar_unlocked@plt+0xa2c>
   11714:	cmp	sl, #0
   11718:	bne	11728 <putchar_unlocked@plt+0x8b8>
   1171c:	mov	r0, r9
   11720:	add	sp, sp, #12
   11724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11728:	ldr	r4, [r5]
   1172c:	ldr	r1, [pc, #364]	; 118a0 <putchar_unlocked@plt+0xa30>
   11730:	mov	r0, r4
   11734:	bl	10c48 <strcmp@plt>
   11738:	str	r0, [sp]
   1173c:	bl	10da4 <__errno_location@plt>
   11740:	ldr	r3, [sp]
   11744:	mov	r8, r0
   11748:	cmp	r3, #0
   1174c:	bne	11810 <putchar_unlocked@plt+0x9a0>
   11750:	mov	r3, #1
   11754:	strb	r3, [r7]
   11758:	ldr	r3, [pc, #324]	; 118a4 <putchar_unlocked@plt+0xa34>
   1175c:	ldr	r4, [r3]
   11760:	mov	r0, r4
   11764:	ldr	r6, [r7, #4]
   11768:	bl	10cc0 <getc_unlocked@plt>
   1176c:	cmn	r0, #1
   11770:	mov	fp, r0
   11774:	ldreq	r6, [r8]
   11778:	beq	1179c <putchar_unlocked@plt+0x92c>
   1177c:	mov	r0, r4
   11780:	bl	10cc0 <getc_unlocked@plt>
   11784:	cmn	r0, #1
   11788:	str	r0, [sp, #4]
   1178c:	bne	1183c <putchar_unlocked@plt+0x9cc>
   11790:	uxtb	r0, fp
   11794:	ldr	r6, [r8]
   11798:	bl	112f0 <putchar_unlocked@plt+0x480>
   1179c:	ldr	r3, [pc, #260]	; 118a8 <putchar_unlocked@plt+0xa38>
   117a0:	ldrb	r0, [r3]
   117a4:	cmp	r0, fp
   117a8:	beq	117b0 <putchar_unlocked@plt+0x940>
   117ac:	bl	112f0 <putchar_unlocked@plt+0x480>
   117b0:	mov	r0, r4
   117b4:	bl	10d20 <ferror_unlocked@plt>
   117b8:	ldr	r3, [sp]
   117bc:	cmp	r0, #0
   117c0:	mov	r0, r4
   117c4:	moveq	r6, #0
   117c8:	cmp	r3, #0
   117cc:	bne	11880 <putchar_unlocked@plt+0xa10>
   117d0:	bl	10e28 <clearerr_unlocked@plt>
   117d4:	cmp	r6, #0
   117d8:	beq	11804 <putchar_unlocked@plt+0x994>
   117dc:	ldr	r2, [r5]
   117e0:	mov	r1, #3
   117e4:	mov	r0, #0
   117e8:	bl	1330c <putchar_unlocked@plt+0x249c>
   117ec:	mov	r3, r0
   117f0:	ldr	r2, [pc, #180]	; 118ac <putchar_unlocked@plt+0xa3c>
   117f4:	mov	r1, r6
   117f8:	mov	r0, #0
   117fc:	mov	r9, #0
   11800:	bl	10d38 <error@plt>
   11804:	sub	sl, sl, #1
   11808:	add	r5, r5, #4
   1180c:	b	11714 <putchar_unlocked@plt+0x8a4>
   11810:	ldr	r1, [pc, #152]	; 118b0 <putchar_unlocked@plt+0xa40>
   11814:	mov	r0, r4
   11818:	bl	10e34 <fopen64@plt>
   1181c:	subs	r4, r0, #0
   11820:	moveq	r1, #3
   11824:	ldreq	r2, [r5]
   11828:	ldreq	r6, [r8]
   1182c:	beq	117e8 <putchar_unlocked@plt+0x978>
   11830:	mov	r1, #2
   11834:	bl	11c3c <putchar_unlocked@plt+0xdcc>
   11838:	b	11760 <putchar_unlocked@plt+0x8f0>
   1183c:	ldr	r3, [pc, #100]	; 118a8 <putchar_unlocked@plt+0xa38>
   11840:	ldrb	r2, [r3]
   11844:	cmp	r2, fp
   11848:	bne	11874 <putchar_unlocked@plt+0xa04>
   1184c:	ldrb	r0, [r6]
   11850:	cmp	r0, #0
   11854:	beq	1185c <putchar_unlocked@plt+0x9ec>
   11858:	bl	112f0 <putchar_unlocked@plt+0x480>
   1185c:	ldr	r3, [r7, #8]
   11860:	add	r6, r6, #1
   11864:	cmp	r3, r6
   11868:	ldreq	r6, [r7, #4]
   1186c:	ldr	fp, [sp, #4]
   11870:	b	1177c <putchar_unlocked@plt+0x90c>
   11874:	uxtb	r0, fp
   11878:	bl	112f0 <putchar_unlocked@plt+0x480>
   1187c:	b	1186c <putchar_unlocked@plt+0x9fc>
   11880:	bl	11c6c <putchar_unlocked@plt+0xdfc>
   11884:	cmp	r0, #0
   11888:	beq	117d4 <putchar_unlocked@plt+0x964>
   1188c:	cmp	r6, #0
   11890:	bne	117dc <putchar_unlocked@plt+0x96c>
   11894:	ldr	r6, [r8]
   11898:	b	117d4 <putchar_unlocked@plt+0x964>
   1189c:	andeq	r5, r2, r0, asr r1
   118a0:	andeq	r4, r1, r4, asr #10
   118a4:	andeq	r5, r2, r0, asr #2
   118a8:	ldrdeq	r5, [r2], -ip
   118ac:	andeq	r4, r1, fp, asr r4
   118b0:	andeq	r4, r1, lr, rrx
   118b4:	subs	r5, r0, #0
   118b8:	push	{r7, lr}
   118bc:	sub	sp, sp, #56	; 0x38
   118c0:	ldr	r4, [pc, #544]	; 11ae8 <putchar_unlocked@plt+0xc78>
   118c4:	beq	118fc <putchar_unlocked@plt+0xa8c>
   118c8:	mov	r2, #5
   118cc:	mov	r0, #0
   118d0:	ldr	r3, [pc, #532]	; 11aec <putchar_unlocked@plt+0xc7c>
   118d4:	ldr	r1, [pc, #532]	; 11af0 <putchar_unlocked@plt+0xc80>
   118d8:	ldr	r6, [r3]
   118dc:	bl	10ccc <dcgettext@plt>
   118e0:	mov	r2, r0
   118e4:	mov	r1, #1
   118e8:	ldr	r3, [r4]
   118ec:	mov	r0, r6
   118f0:	bl	10de0 <__fprintf_chk@plt>
   118f4:	mov	r0, r5
   118f8:	bl	10d8c <exit@plt>
   118fc:	mov	r2, #5
   11900:	ldr	r1, [pc, #492]	; 11af4 <putchar_unlocked@plt+0xc84>
   11904:	mov	r6, sp
   11908:	bl	10ccc <dcgettext@plt>
   1190c:	ldr	r2, [r4]
   11910:	mov	r1, r0
   11914:	mov	r0, #1
   11918:	bl	10dc8 <__printf_chk@plt>
   1191c:	ldr	r4, [pc, #468]	; 11af8 <putchar_unlocked@plt+0xc88>
   11920:	mov	r2, #5
   11924:	mov	r0, r5
   11928:	ldr	r1, [pc, #460]	; 11afc <putchar_unlocked@plt+0xc8c>
   1192c:	bl	10ccc <dcgettext@plt>
   11930:	ldr	r7, [pc, #456]	; 11b00 <putchar_unlocked@plt+0xc90>
   11934:	ldr	r1, [r4]
   11938:	bl	10c3c <fputs_unlocked@plt>
   1193c:	mov	r2, #5
   11940:	ldr	r1, [pc, #444]	; 11b04 <putchar_unlocked@plt+0xc94>
   11944:	mov	r0, r5
   11948:	bl	10ccc <dcgettext@plt>
   1194c:	ldr	r1, [r4]
   11950:	bl	10c3c <fputs_unlocked@plt>
   11954:	mov	r2, #5
   11958:	ldr	r1, [pc, #424]	; 11b08 <putchar_unlocked@plt+0xc98>
   1195c:	mov	r0, r5
   11960:	bl	10ccc <dcgettext@plt>
   11964:	ldr	r1, [r4]
   11968:	bl	10c3c <fputs_unlocked@plt>
   1196c:	mov	r2, #5
   11970:	ldr	r1, [pc, #404]	; 11b0c <putchar_unlocked@plt+0xc9c>
   11974:	mov	r0, r5
   11978:	bl	10ccc <dcgettext@plt>
   1197c:	ldr	r1, [r4]
   11980:	bl	10c3c <fputs_unlocked@plt>
   11984:	mov	r2, #5
   11988:	ldr	r1, [pc, #384]	; 11b10 <putchar_unlocked@plt+0xca0>
   1198c:	mov	r0, r5
   11990:	bl	10ccc <dcgettext@plt>
   11994:	ldr	r1, [r4]
   11998:	bl	10c3c <fputs_unlocked@plt>
   1199c:	mov	r2, #5
   119a0:	ldr	r1, [pc, #364]	; 11b14 <putchar_unlocked@plt+0xca4>
   119a4:	mov	r0, r5
   119a8:	bl	10ccc <dcgettext@plt>
   119ac:	ldr	r1, [r4]
   119b0:	bl	10c3c <fputs_unlocked@plt>
   119b4:	mov	r2, #5
   119b8:	ldr	r1, [pc, #344]	; 11b18 <putchar_unlocked@plt+0xca8>
   119bc:	mov	r0, r5
   119c0:	bl	10ccc <dcgettext@plt>
   119c4:	ldr	r1, [r4]
   119c8:	bl	10c3c <fputs_unlocked@plt>
   119cc:	ldr	lr, [pc, #328]	; 11b1c <putchar_unlocked@plt+0xcac>
   119d0:	mov	ip, sp
   119d4:	ldm	lr!, {r0, r1, r2, r3}
   119d8:	stmia	ip!, {r0, r1, r2, r3}
   119dc:	ldm	lr!, {r0, r1, r2, r3}
   119e0:	stmia	ip!, {r0, r1, r2, r3}
   119e4:	ldm	lr!, {r0, r1, r2, r3}
   119e8:	stmia	ip!, {r0, r1, r2, r3}
   119ec:	ldm	lr, {r0, r1}
   119f0:	stm	ip, {r0, r1}
   119f4:	ldr	r1, [r6]
   119f8:	cmp	r1, #0
   119fc:	bne	11aa0 <putchar_unlocked@plt+0xc30>
   11a00:	ldr	r6, [r6, #4]
   11a04:	mov	r2, #5
   11a08:	mov	r0, #0
   11a0c:	ldr	r7, [pc, #236]	; 11b00 <putchar_unlocked@plt+0xc90>
   11a10:	ldr	r1, [pc, #264]	; 11b20 <putchar_unlocked@plt+0xcb0>
   11a14:	cmp	r6, #0
   11a18:	moveq	r6, r7
   11a1c:	bl	10ccc <dcgettext@plt>
   11a20:	mov	r1, r0
   11a24:	ldr	r3, [pc, #248]	; 11b24 <putchar_unlocked@plt+0xcb4>
   11a28:	mov	r0, #1
   11a2c:	ldr	r2, [pc, #244]	; 11b28 <putchar_unlocked@plt+0xcb8>
   11a30:	bl	10dc8 <__printf_chk@plt>
   11a34:	mov	r1, #0
   11a38:	mov	r0, #5
   11a3c:	bl	10e04 <setlocale@plt>
   11a40:	cmp	r0, #0
   11a44:	bne	11ab8 <putchar_unlocked@plt+0xc48>
   11a48:	mov	r2, #5
   11a4c:	ldr	r1, [pc, #216]	; 11b2c <putchar_unlocked@plt+0xcbc>
   11a50:	mov	r0, #0
   11a54:	bl	10ccc <dcgettext@plt>
   11a58:	mov	r1, r0
   11a5c:	ldr	r3, [pc, #156]	; 11b00 <putchar_unlocked@plt+0xc90>
   11a60:	mov	r0, #1
   11a64:	ldr	r2, [pc, #184]	; 11b24 <putchar_unlocked@plt+0xcb4>
   11a68:	bl	10dc8 <__printf_chk@plt>
   11a6c:	mov	r2, #5
   11a70:	ldr	r1, [pc, #184]	; 11b30 <putchar_unlocked@plt+0xcc0>
   11a74:	mov	r0, #0
   11a78:	bl	10ccc <dcgettext@plt>
   11a7c:	ldr	r2, [pc, #176]	; 11b34 <putchar_unlocked@plt+0xcc4>
   11a80:	cmp	r6, r7
   11a84:	mov	r1, r0
   11a88:	mov	r0, #1
   11a8c:	ldr	r3, [pc, #164]	; 11b38 <putchar_unlocked@plt+0xcc8>
   11a90:	moveq	r3, r2
   11a94:	mov	r2, r6
   11a98:	bl	10dc8 <__printf_chk@plt>
   11a9c:	b	118f4 <putchar_unlocked@plt+0xa84>
   11aa0:	mov	r0, r7
   11aa4:	bl	10c48 <strcmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	beq	11a00 <putchar_unlocked@plt+0xb90>
   11ab0:	add	r6, r6, #8
   11ab4:	b	119f4 <putchar_unlocked@plt+0xb84>
   11ab8:	mov	r2, #3
   11abc:	ldr	r1, [pc, #120]	; 11b3c <putchar_unlocked@plt+0xccc>
   11ac0:	bl	10e58 <strncmp@plt>
   11ac4:	cmp	r0, #0
   11ac8:	beq	11a48 <putchar_unlocked@plt+0xbd8>
   11acc:	mov	r2, #5
   11ad0:	ldr	r1, [pc, #104]	; 11b40 <putchar_unlocked@plt+0xcd0>
   11ad4:	mov	r0, #0
   11ad8:	bl	10ccc <dcgettext@plt>
   11adc:	ldr	r1, [r4]
   11ae0:	bl	10c3c <fputs_unlocked@plt>
   11ae4:	b	11a48 <putchar_unlocked@plt+0xbd8>
   11ae8:	andeq	r5, r2, r8, ror #2
   11aec:	andeq	r5, r2, r8, lsr r1
   11af0:	andeq	r4, r1, pc, lsl #1
   11af4:	strheq	r4, [r1], -r6
   11af8:	andeq	r5, r2, r4, asr #2
   11afc:	ldrdeq	r4, [r1], -r7
   11b00:	andeq	r4, r1, r9, lsl #1
   11b04:	andeq	r4, r1, lr, asr #2
   11b08:	andeq	r4, r1, r6, lsl #3
   11b0c:	ldrdeq	r4, [r1], -r1
   11b10:	andeq	r4, r1, r1, ror #4
   11b14:	andeq	r4, r1, r0, lsr #5
   11b18:	andeq	r4, r1, sp, asr #5
   11b1c:	andeq	r3, r1, ip, asr #31
   11b20:	andeq	r4, r1, r3, lsl #6
   11b24:	andeq	r4, r1, sl, lsl r3
   11b28:	andeq	r4, r1, r2, asr #6
   11b2c:	muleq	r1, fp, r3
   11b30:			; <UNDEFINED> instruction: 0x000143b6
   11b34:	andeq	r4, r1, sl, ror r4
   11b38:	andeq	r4, r1, sp, ror #7
   11b3c:	andeq	r4, r1, r0, asr r3
   11b40:	andeq	r4, r1, r4, asr r3
   11b44:	ldr	r3, [pc, #4]	; 11b50 <putchar_unlocked@plt+0xce0>
   11b48:	str	r0, [r3]
   11b4c:	bx	lr
   11b50:	andeq	r5, r2, r0, ror #2
   11b54:	ldr	r3, [pc, #4]	; 11b60 <putchar_unlocked@plt+0xcf0>
   11b58:	strb	r0, [r3, #4]
   11b5c:	bx	lr
   11b60:	andeq	r5, r2, r0, ror #2
   11b64:	ldr	r3, [pc, #176]	; 11c1c <putchar_unlocked@plt+0xdac>
   11b68:	push	{r0, r1, r4, r5, r6, lr}
   11b6c:	ldr	r0, [r3]
   11b70:	bl	13d1c <putchar_unlocked@plt+0x2eac>
   11b74:	cmp	r0, #0
   11b78:	beq	11c00 <putchar_unlocked@plt+0xd90>
   11b7c:	ldr	r4, [pc, #156]	; 11c20 <putchar_unlocked@plt+0xdb0>
   11b80:	bl	10da4 <__errno_location@plt>
   11b84:	mov	r5, r0
   11b88:	ldrb	r6, [r4, #4]
   11b8c:	cmp	r6, #0
   11b90:	beq	11ba0 <putchar_unlocked@plt+0xd30>
   11b94:	ldr	r3, [r0]
   11b98:	cmp	r3, #32
   11b9c:	beq	11c00 <putchar_unlocked@plt+0xd90>
   11ba0:	mov	r2, #5
   11ba4:	ldr	r1, [pc, #120]	; 11c24 <putchar_unlocked@plt+0xdb4>
   11ba8:	mov	r0, #0
   11bac:	bl	10ccc <dcgettext@plt>
   11bb0:	mov	r6, r0
   11bb4:	ldr	r0, [r4]
   11bb8:	cmp	r0, #0
   11bbc:	beq	11bec <putchar_unlocked@plt+0xd7c>
   11bc0:	ldr	r4, [r5]
   11bc4:	bl	132fc <putchar_unlocked@plt+0x248c>
   11bc8:	mov	r3, r0
   11bcc:	ldr	r2, [pc, #84]	; 11c28 <putchar_unlocked@plt+0xdb8>
   11bd0:	mov	r0, #0
   11bd4:	str	r6, [sp]
   11bd8:	mov	r1, r4
   11bdc:	bl	10d38 <error@plt>
   11be0:	ldr	r3, [pc, #68]	; 11c2c <putchar_unlocked@plt+0xdbc>
   11be4:	ldr	r0, [r3]
   11be8:	bl	10c78 <_exit@plt>
   11bec:	mov	r3, r6
   11bf0:	ldr	r2, [pc, #56]	; 11c30 <putchar_unlocked@plt+0xdc0>
   11bf4:	ldr	r1, [r5]
   11bf8:	bl	10d38 <error@plt>
   11bfc:	b	11be0 <putchar_unlocked@plt+0xd70>
   11c00:	ldr	r3, [pc, #44]	; 11c34 <putchar_unlocked@plt+0xdc4>
   11c04:	ldr	r0, [r3]
   11c08:	bl	13d1c <putchar_unlocked@plt+0x2eac>
   11c0c:	cmp	r0, #0
   11c10:	bne	11be0 <putchar_unlocked@plt+0xd70>
   11c14:	add	sp, sp, #8
   11c18:	pop	{r4, r5, r6, pc}
   11c1c:	andeq	r5, r2, r4, asr #2
   11c20:	andeq	r5, r2, r0, ror #2
   11c24:	andeq	r4, r1, r4, rrx
   11c28:	strdeq	r4, [r1], -fp
   11c2c:	andeq	r5, r2, r4, ror #1
   11c30:	andeq	r4, r1, fp, asr r4
   11c34:	andeq	r5, r2, r8, lsr r1
   11c38:	b	10c54 <posix_fadvise64@plt>
   11c3c:	cmp	r0, #0
   11c40:	bxeq	lr
   11c44:	push	{r0, r1, r2, r3, r4, lr}
   11c48:	mov	r4, r1
   11c4c:	bl	10dd4 <fileno@plt>
   11c50:	mov	r2, #0
   11c54:	mov	r3, #0
   11c58:	strd	r2, [sp]
   11c5c:	str	r4, [sp, #8]
   11c60:	bl	10c54 <posix_fadvise64@plt>
   11c64:	add	sp, sp, #16
   11c68:	pop	{r4, pc}
   11c6c:	push	{r0, r1, r2, r4, r5, lr}
   11c70:	mov	r4, r0
   11c74:	bl	10dd4 <fileno@plt>
   11c78:	cmp	r0, #0
   11c7c:	mov	r0, r4
   11c80:	bge	11c90 <putchar_unlocked@plt+0xe20>
   11c84:	add	sp, sp, #12
   11c88:	pop	{r4, r5, lr}
   11c8c:	b	10dec <fclose@plt>
   11c90:	bl	10d5c <__freading@plt>
   11c94:	cmp	r0, #0
   11c98:	bne	11cd4 <putchar_unlocked@plt+0xe64>
   11c9c:	mov	r0, r4
   11ca0:	bl	11d14 <putchar_unlocked@plt+0xea4>
   11ca4:	cmp	r0, #0
   11ca8:	bne	11d08 <putchar_unlocked@plt+0xe98>
   11cac:	mov	r5, #0
   11cb0:	mov	r0, r4
   11cb4:	bl	10dec <fclose@plt>
   11cb8:	cmp	r5, #0
   11cbc:	beq	11ccc <putchar_unlocked@plt+0xe5c>
   11cc0:	bl	10da4 <__errno_location@plt>
   11cc4:	str	r5, [r0]
   11cc8:	mvn	r0, #0
   11ccc:	add	sp, sp, #12
   11cd0:	pop	{r4, r5, pc}
   11cd4:	mov	r0, r4
   11cd8:	bl	10dd4 <fileno@plt>
   11cdc:	mov	r3, #1
   11ce0:	mov	r2, #0
   11ce4:	str	r3, [sp]
   11ce8:	mov	r3, #0
   11cec:	bl	10cfc <lseek64@plt>
   11cf0:	mvn	r3, #0
   11cf4:	mvn	r2, #0
   11cf8:	cmp	r1, r3
   11cfc:	cmpeq	r0, r2
   11d00:	bne	11c9c <putchar_unlocked@plt+0xe2c>
   11d04:	b	11cac <putchar_unlocked@plt+0xe3c>
   11d08:	bl	10da4 <__errno_location@plt>
   11d0c:	ldr	r5, [r0]
   11d10:	b	11cb0 <putchar_unlocked@plt+0xe40>
   11d14:	push	{r0, r1, r4, lr}
   11d18:	subs	r4, r0, #0
   11d1c:	bne	11d30 <putchar_unlocked@plt+0xec0>
   11d20:	mov	r0, r4
   11d24:	add	sp, sp, #8
   11d28:	pop	{r4, lr}
   11d2c:	b	10c60 <fflush@plt>
   11d30:	bl	10d5c <__freading@plt>
   11d34:	cmp	r0, #0
   11d38:	beq	11d20 <putchar_unlocked@plt+0xeb0>
   11d3c:	ldr	r3, [r4]
   11d40:	tst	r3, #256	; 0x100
   11d44:	beq	11d20 <putchar_unlocked@plt+0xeb0>
   11d48:	mov	r3, #1
   11d4c:	mov	r2, #0
   11d50:	mov	r0, r4
   11d54:	str	r3, [sp]
   11d58:	mov	r3, #0
   11d5c:	bl	11db4 <putchar_unlocked@plt+0xf44>
   11d60:	b	11d20 <putchar_unlocked@plt+0xeb0>
   11d64:	push	{r0, r1, r2, r4, r5, lr}
   11d68:	mov	r5, r0
   11d6c:	bl	10da4 <__errno_location@plt>
   11d70:	mov	r4, r0
   11d74:	mov	r0, r5
   11d78:	ldr	r3, [r4]
   11d7c:	str	r3, [sp]
   11d80:	str	r3, [sp, #4]
   11d84:	mov	r3, #0
   11d88:	str	r3, [r4]
   11d8c:	bl	10c6c <free@plt>
   11d90:	ldr	r3, [r4]
   11d94:	add	r2, sp, #8
   11d98:	clz	r3, r3
   11d9c:	lsr	r3, r3, #5
   11da0:	add	r3, r2, r3, lsl #2
   11da4:	ldr	r3, [r3, #-8]
   11da8:	str	r3, [r4]
   11dac:	add	sp, sp, #12
   11db0:	pop	{r4, r5, pc}
   11db4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11db8:	mov	r4, r0
   11dbc:	ldmib	r0, {ip, lr}
   11dc0:	ldr	r8, [sp, #32]
   11dc4:	cmp	lr, ip
   11dc8:	bne	11e38 <putchar_unlocked@plt+0xfc8>
   11dcc:	ldr	ip, [r0, #16]
   11dd0:	ldr	lr, [r0, #20]
   11dd4:	cmp	lr, ip
   11dd8:	bne	11e38 <putchar_unlocked@plt+0xfc8>
   11ddc:	ldr	r5, [r0, #36]	; 0x24
   11de0:	cmp	r5, #0
   11de4:	bne	11e38 <putchar_unlocked@plt+0xfc8>
   11de8:	mov	r6, r2
   11dec:	mov	r7, r3
   11df0:	bl	10dd4 <fileno@plt>
   11df4:	mov	r2, r6
   11df8:	mov	r3, r7
   11dfc:	str	r8, [sp]
   11e00:	bl	10cfc <lseek64@plt>
   11e04:	mvn	r3, #0
   11e08:	mvn	r2, #0
   11e0c:	cmp	r1, r3
   11e10:	cmpeq	r0, r2
   11e14:	mvneq	r0, #0
   11e18:	beq	11e30 <putchar_unlocked@plt+0xfc0>
   11e1c:	ldr	r3, [r4]
   11e20:	strd	r0, [r4, #80]	; 0x50
   11e24:	mov	r0, r5
   11e28:	bic	r3, r3, #16
   11e2c:	str	r3, [r4]
   11e30:	add	sp, sp, #8
   11e34:	pop	{r4, r5, r6, r7, r8, pc}
   11e38:	mov	r0, r4
   11e3c:	str	r8, [sp, #32]
   11e40:	add	sp, sp, #8
   11e44:	pop	{r4, r5, r6, r7, r8, lr}
   11e48:	b	10df8 <fseeko64@plt>
   11e4c:	push	{r4, r5, r6, lr}
   11e50:	subs	r4, r0, #0
   11e54:	bne	11e6c <putchar_unlocked@plt+0xffc>
   11e58:	ldr	r3, [pc, #124]	; 11edc <putchar_unlocked@plt+0x106c>
   11e5c:	ldr	r0, [pc, #124]	; 11ee0 <putchar_unlocked@plt+0x1070>
   11e60:	ldr	r1, [r3]
   11e64:	bl	10e4c <fputs@plt>
   11e68:	bl	10e64 <abort@plt>
   11e6c:	mov	r1, #47	; 0x2f
   11e70:	bl	10e10 <strrchr@plt>
   11e74:	subs	r6, r0, #0
   11e78:	beq	11ec8 <putchar_unlocked@plt+0x1058>
   11e7c:	add	r5, r6, #1
   11e80:	sub	r3, r5, r4
   11e84:	cmp	r3, #6
   11e88:	ble	11ec8 <putchar_unlocked@plt+0x1058>
   11e8c:	mov	r2, #7
   11e90:	ldr	r1, [pc, #76]	; 11ee4 <putchar_unlocked@plt+0x1074>
   11e94:	sub	r0, r6, #6
   11e98:	bl	10e58 <strncmp@plt>
   11e9c:	cmp	r0, #0
   11ea0:	bne	11ec8 <putchar_unlocked@plt+0x1058>
   11ea4:	mov	r2, #3
   11ea8:	ldr	r1, [pc, #56]	; 11ee8 <putchar_unlocked@plt+0x1078>
   11eac:	mov	r0, r5
   11eb0:	bl	10e58 <strncmp@plt>
   11eb4:	cmp	r0, #0
   11eb8:	ldreq	r3, [pc, #44]	; 11eec <putchar_unlocked@plt+0x107c>
   11ebc:	addeq	r4, r6, #4
   11ec0:	movne	r4, r5
   11ec4:	streq	r4, [r3]
   11ec8:	ldr	r3, [pc, #32]	; 11ef0 <putchar_unlocked@plt+0x1080>
   11ecc:	str	r4, [r3]
   11ed0:	ldr	r3, [pc, #28]	; 11ef4 <putchar_unlocked@plt+0x1084>
   11ed4:	str	r4, [r3]
   11ed8:	pop	{r4, r5, r6, pc}
   11edc:	andeq	r5, r2, r8, lsr r1
   11ee0:	andeq	r4, r1, r2, lsl #10
   11ee4:	andeq	r4, r1, sl, lsr r5
   11ee8:	andeq	r4, r1, r2, asr #10
   11eec:	andeq	r5, r2, r8, lsr #2
   11ef0:	andeq	r5, r2, r8, ror #2
   11ef4:	andeq	r5, r2, ip, lsr #2
   11ef8:	push	{r4, lr}
   11efc:	mov	r2, #48	; 0x30
   11f00:	mov	r4, r1
   11f04:	mov	r1, #0
   11f08:	bl	10dbc <memset@plt>
   11f0c:	cmp	r4, #10
   11f10:	bne	11f18 <putchar_unlocked@plt+0x10a8>
   11f14:	bl	10e64 <abort@plt>
   11f18:	str	r4, [r0]
   11f1c:	pop	{r4, pc}
   11f20:	push	{r4, r5, r6, lr}
   11f24:	mov	r2, #5
   11f28:	mov	r6, r0
   11f2c:	mov	r5, r1
   11f30:	mov	r1, r0
   11f34:	mov	r0, #0
   11f38:	bl	10ccc <dcgettext@plt>
   11f3c:	cmp	r6, r0
   11f40:	mov	r4, r0
   11f44:	bne	11fb4 <putchar_unlocked@plt+0x1144>
   11f48:	bl	13db4 <putchar_unlocked@plt+0x2f44>
   11f4c:	ldrb	r3, [r0]
   11f50:	bic	r3, r3, #32
   11f54:	cmp	r3, #85	; 0x55
   11f58:	bne	11fbc <putchar_unlocked@plt+0x114c>
   11f5c:	ldrb	r3, [r0, #1]
   11f60:	bic	r3, r3, #32
   11f64:	cmp	r3, #84	; 0x54
   11f68:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11f6c:	ldrb	r3, [r0, #2]
   11f70:	bic	r3, r3, #32
   11f74:	cmp	r3, #70	; 0x46
   11f78:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11f7c:	ldrb	r3, [r0, #3]
   11f80:	cmp	r3, #45	; 0x2d
   11f84:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11f88:	ldrb	r3, [r0, #4]
   11f8c:	cmp	r3, #56	; 0x38
   11f90:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11f94:	ldrb	r3, [r0, #5]
   11f98:	cmp	r3, #0
   11f9c:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11fa0:	ldrb	r2, [r4]
   11fa4:	ldr	r3, [pc, #144]	; 1203c <putchar_unlocked@plt+0x11cc>
   11fa8:	ldr	r4, [pc, #144]	; 12040 <putchar_unlocked@plt+0x11d0>
   11fac:	cmp	r2, #96	; 0x60
   11fb0:	movne	r4, r3
   11fb4:	mov	r0, r4
   11fb8:	pop	{r4, r5, r6, pc}
   11fbc:	cmp	r3, #71	; 0x47
   11fc0:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11fc4:	ldrb	r3, [r0, #1]
   11fc8:	bic	r3, r3, #32
   11fcc:	cmp	r3, #66	; 0x42
   11fd0:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11fd4:	ldrb	r3, [r0, #2]
   11fd8:	cmp	r3, #49	; 0x31
   11fdc:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11fe0:	ldrb	r3, [r0, #3]
   11fe4:	cmp	r3, #56	; 0x38
   11fe8:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11fec:	ldrb	r3, [r0, #4]
   11ff0:	cmp	r3, #48	; 0x30
   11ff4:	bne	1202c <putchar_unlocked@plt+0x11bc>
   11ff8:	ldrb	r3, [r0, #5]
   11ffc:	cmp	r3, #51	; 0x33
   12000:	bne	1202c <putchar_unlocked@plt+0x11bc>
   12004:	ldrb	r3, [r0, #6]
   12008:	cmp	r3, #48	; 0x30
   1200c:	bne	1202c <putchar_unlocked@plt+0x11bc>
   12010:	ldrb	r3, [r0, #7]
   12014:	cmp	r3, #0
   12018:	bne	1202c <putchar_unlocked@plt+0x11bc>
   1201c:	ldrb	r2, [r4]
   12020:	ldr	r3, [pc, #28]	; 12044 <putchar_unlocked@plt+0x11d4>
   12024:	ldr	r4, [pc, #28]	; 12048 <putchar_unlocked@plt+0x11d8>
   12028:	b	11fac <putchar_unlocked@plt+0x113c>
   1202c:	ldr	r4, [pc, #24]	; 1204c <putchar_unlocked@plt+0x11dc>
   12030:	cmp	r5, #9
   12034:	ldr	r3, [pc, #20]	; 12050 <putchar_unlocked@plt+0x11e0>
   12038:	b	11fb0 <putchar_unlocked@plt+0x1140>
   1203c:	muleq	r1, lr, r5
   12040:	andeq	r4, r1, r9, lsr #11
   12044:	andeq	r4, r1, r2, lsr #11
   12048:	andeq	r4, r1, r5, lsr #11
   1204c:	muleq	r1, ip, r5
   12050:	andeq	r4, r1, sp, lsr #11
   12054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12058:	sub	sp, sp, #108	; 0x6c
   1205c:	mov	r8, r0
   12060:	mov	r5, r1
   12064:	mov	r6, #0
   12068:	str	r3, [sp, #40]	; 0x28
   1206c:	str	r2, [sp, #48]	; 0x30
   12070:	ldr	sl, [sp, #144]	; 0x90
   12074:	bl	10d08 <__ctype_get_mb_cur_max@plt>
   12078:	ldr	r3, [sp, #148]	; 0x94
   1207c:	str	r6, [sp, #24]
   12080:	str	r6, [sp, #32]
   12084:	str	r6, [sp, #44]	; 0x2c
   12088:	str	r6, [sp, #52]	; 0x34
   1208c:	ubfx	r7, r3, #1, #1
   12090:	mov	r3, #1
   12094:	str	r6, [sp, #60]	; 0x3c
   12098:	str	r3, [sp, #72]	; 0x48
   1209c:	str	r0, [sp, #76]	; 0x4c
   120a0:	cmp	sl, #10
   120a4:	ldrls	pc, [pc, sl, lsl #2]
   120a8:	b	122ec <putchar_unlocked@plt+0x147c>
   120ac:	ldrdeq	r2, [r1], -r8
   120b0:	andeq	r2, r1, r4, lsl #6
   120b4:	andeq	r2, r1, r8, lsl #5
   120b8:	andeq	r2, r1, r0, lsr #5
   120bc:	andeq	r2, r1, r0, ror r2
   120c0:	andeq	r2, r1, r8, asr #3
   120c4:	andeq	r2, r1, r8, lsr #3
   120c8:	strdeq	r2, [r1], -r0
   120cc:	strdeq	r2, [r1], -r8
   120d0:	strdeq	r2, [r1], -r8
   120d4:	strdeq	r2, [r1], -r8
   120d8:	mov	r4, sl
   120dc:	mov	r7, #0
   120e0:	mov	r9, r5
   120e4:	mov	r3, #0
   120e8:	str	r6, [sp, #68]	; 0x44
   120ec:	str	r3, [sp, #28]
   120f0:	ldr	r3, [sp, #40]	; 0x28
   120f4:	cmn	r3, #1
   120f8:	bne	12c98 <putchar_unlocked@plt+0x1e28>
   120fc:	ldr	r2, [sp, #28]
   12100:	ldr	r3, [sp, #48]	; 0x30
   12104:	ldrb	r3, [r3, r2]
   12108:	adds	r3, r3, #0
   1210c:	movne	r3, #1
   12110:	str	r3, [sp, #36]	; 0x24
   12114:	ldr	r3, [sp, #36]	; 0x24
   12118:	cmp	r3, #0
   1211c:	bne	12328 <putchar_unlocked@plt+0x14b8>
   12120:	sub	r3, sl, #2
   12124:	cmp	r4, #0
   12128:	clz	r3, r3
   1212c:	movne	r2, #0
   12130:	lsr	r3, r3, #5
   12134:	andeq	r2, r3, r7
   12138:	cmp	r2, #0
   1213c:	bne	124ec <putchar_unlocked@plt+0x167c>
   12140:	eor	r7, r7, #1
   12144:	ands	r3, r3, r7
   12148:	beq	12d10 <putchar_unlocked@plt+0x1ea0>
   1214c:	ldr	r2, [sp, #68]	; 0x44
   12150:	cmp	r2, #0
   12154:	beq	12cd8 <putchar_unlocked@plt+0x1e68>
   12158:	ldr	r3, [sp, #72]	; 0x48
   1215c:	cmp	r3, #0
   12160:	beq	12cac <putchar_unlocked@plt+0x1e3c>
   12164:	ldr	r2, [sp, #48]	; 0x30
   12168:	ldr	r3, [sp, #160]	; 0xa0
   1216c:	ldr	r1, [sp, #60]	; 0x3c
   12170:	str	r3, [sp, #16]
   12174:	ldr	r3, [sp, #156]	; 0x9c
   12178:	str	r3, [sp, #12]
   1217c:	ldr	r3, [sp, #152]	; 0x98
   12180:	str	r3, [sp, #8]
   12184:	ldr	r3, [sp, #148]	; 0x94
   12188:	str	r3, [sp, #4]
   1218c:	mov	r3, #5
   12190:	str	r3, [sp]
   12194:	ldr	r3, [sp, #40]	; 0x28
   12198:	mov	r0, r8
   1219c:	bl	12054 <putchar_unlocked@plt+0x11e4>
   121a0:	mov	r4, r0
   121a4:	b	12d04 <putchar_unlocked@plt+0x1e94>
   121a8:	ldr	r3, [pc, #2948]	; 12d34 <putchar_unlocked@plt+0x1ec4>
   121ac:	mov	r7, #1
   121b0:	mov	r4, #0
   121b4:	mov	sl, #5
   121b8:	str	r7, [sp, #24]
   121bc:	str	r7, [sp, #32]
   121c0:	str	r3, [sp, #44]	; 0x2c
   121c4:	b	120e0 <putchar_unlocked@plt+0x1270>
   121c8:	cmp	r7, #0
   121cc:	bne	12310 <putchar_unlocked@plt+0x14a0>
   121d0:	cmp	r5, #0
   121d4:	mov	r4, #1
   121d8:	movne	r3, #34	; 0x22
   121dc:	strbne	r3, [r8]
   121e0:	mov	r3, #1
   121e4:	str	r3, [sp, #24]
   121e8:	str	r3, [sp, #32]
   121ec:	ldr	r3, [pc, #2880]	; 12d34 <putchar_unlocked@plt+0x1ec4>
   121f0:	str	r3, [sp, #44]	; 0x2c
   121f4:	b	120e0 <putchar_unlocked@plt+0x1270>
   121f8:	cmp	sl, #10
   121fc:	beq	12220 <putchar_unlocked@plt+0x13b0>
   12200:	mov	r1, sl
   12204:	ldr	r0, [pc, #2860]	; 12d38 <putchar_unlocked@plt+0x1ec8>
   12208:	bl	11f20 <putchar_unlocked@plt+0x10b0>
   1220c:	mov	r1, sl
   12210:	str	r0, [sp, #156]	; 0x9c
   12214:	ldr	r0, [pc, #2848]	; 12d3c <putchar_unlocked@plt+0x1ecc>
   12218:	bl	11f20 <putchar_unlocked@plt+0x10b0>
   1221c:	str	r0, [sp, #160]	; 0xa0
   12220:	cmp	r7, #0
   12224:	moveq	r4, r7
   12228:	beq	12240 <putchar_unlocked@plt+0x13d0>
   1222c:	mov	r4, #0
   12230:	b	12250 <putchar_unlocked@plt+0x13e0>
   12234:	cmp	r5, r4
   12238:	strbhi	r3, [r8, r4]
   1223c:	add	r4, r4, #1
   12240:	ldr	r3, [sp, #156]	; 0x9c
   12244:	ldrb	r3, [r3, r4]
   12248:	cmp	r3, #0
   1224c:	bne	12234 <putchar_unlocked@plt+0x13c4>
   12250:	ldr	r0, [sp, #160]	; 0xa0
   12254:	bl	10d98 <strlen@plt>
   12258:	ldr	r3, [sp, #160]	; 0xa0
   1225c:	str	r0, [sp, #32]
   12260:	str	r3, [sp, #44]	; 0x2c
   12264:	mov	r3, #1
   12268:	str	r3, [sp, #24]
   1226c:	b	120e0 <putchar_unlocked@plt+0x1270>
   12270:	mov	r3, #1
   12274:	cmp	r7, #0
   12278:	streq	r3, [sp, #24]
   1227c:	beq	122c0 <putchar_unlocked@plt+0x1450>
   12280:	str	r3, [sp, #32]
   12284:	b	122ac <putchar_unlocked@plt+0x143c>
   12288:	cmp	r7, #0
   1228c:	beq	122c0 <putchar_unlocked@plt+0x1450>
   12290:	mov	r3, #1
   12294:	str	r3, [sp, #32]
   12298:	ldr	r3, [pc, #2716]	; 12d3c <putchar_unlocked@plt+0x1ecc>
   1229c:	b	12320 <putchar_unlocked@plt+0x14b0>
   122a0:	mov	r7, #1
   122a4:	str	r7, [sp, #24]
   122a8:	str	r7, [sp, #32]
   122ac:	ldr	r3, [pc, #2696]	; 12d3c <putchar_unlocked@plt+0x1ecc>
   122b0:	mov	r4, #0
   122b4:	str	r3, [sp, #44]	; 0x2c
   122b8:	mov	sl, #2
   122bc:	b	120e0 <putchar_unlocked@plt+0x1270>
   122c0:	cmp	r5, #0
   122c4:	movne	r3, #39	; 0x27
   122c8:	movne	r7, #0
   122cc:	strbne	r3, [r8]
   122d0:	moveq	r7, r5
   122d4:	mov	r3, #1
   122d8:	mov	r4, #1
   122dc:	str	r3, [sp, #32]
   122e0:	ldr	r3, [pc, #2644]	; 12d3c <putchar_unlocked@plt+0x1ecc>
   122e4:	str	r3, [sp, #44]	; 0x2c
   122e8:	b	122b8 <putchar_unlocked@plt+0x1448>
   122ec:	bl	10e64 <abort@plt>
   122f0:	mov	r3, #1
   122f4:	mov	r7, #0
   122f8:	str	r3, [sp, #24]
   122fc:	mov	r4, #0
   12300:	b	120e0 <putchar_unlocked@plt+0x1270>
   12304:	mov	r7, #1
   12308:	str	sl, [sp, #32]
   1230c:	b	122ac <putchar_unlocked@plt+0x143c>
   12310:	mov	r3, #1
   12314:	str	r7, [sp, #24]
   12318:	str	r3, [sp, #32]
   1231c:	ldr	r3, [pc, #2576]	; 12d34 <putchar_unlocked@plt+0x1ec4>
   12320:	str	r3, [sp, #44]	; 0x2c
   12324:	b	122fc <putchar_unlocked@plt+0x148c>
   12328:	ldr	fp, [sp, #24]
   1232c:	ldr	r3, [sp, #32]
   12330:	cmp	sl, #2
   12334:	moveq	fp, #0
   12338:	andne	fp, fp, #1
   1233c:	adds	r5, r3, #0
   12340:	movne	r5, #1
   12344:	ands	r3, fp, r5
   12348:	str	r3, [sp, #64]	; 0x40
   1234c:	beq	1241c <putchar_unlocked@plt+0x15ac>
   12350:	ldr	r3, [sp, #28]
   12354:	ldr	r2, [sp, #32]
   12358:	cmp	r2, #1
   1235c:	add	r6, r3, r2
   12360:	mov	r3, r2
   12364:	ldr	r2, [sp, #40]	; 0x28
   12368:	movls	r3, #0
   1236c:	movhi	r3, #1
   12370:	cmn	r2, #1
   12374:	movne	r3, #0
   12378:	cmp	r3, #0
   1237c:	beq	1238c <putchar_unlocked@plt+0x151c>
   12380:	ldr	r0, [sp, #48]	; 0x30
   12384:	bl	10d98 <strlen@plt>
   12388:	str	r0, [sp, #40]	; 0x28
   1238c:	ldr	r3, [sp, #40]	; 0x28
   12390:	cmp	r6, r3
   12394:	bhi	12414 <putchar_unlocked@plt+0x15a4>
   12398:	ldr	r0, [sp, #28]
   1239c:	ldr	r2, [sp, #32]
   123a0:	ldr	r3, [sp, #48]	; 0x30
   123a4:	ldr	r1, [sp, #44]	; 0x2c
   123a8:	add	r0, r3, r0
   123ac:	bl	10ca8 <memcmp@plt>
   123b0:	cmp	r0, #0
   123b4:	bne	12414 <putchar_unlocked@plt+0x15a4>
   123b8:	cmp	r7, #0
   123bc:	beq	1241c <putchar_unlocked@plt+0x15ac>
   123c0:	str	r7, [sp, #24]
   123c4:	ldr	r3, [sp, #24]
   123c8:	mov	r1, r9
   123cc:	ldr	r2, [sp, #48]	; 0x30
   123d0:	cmp	sl, #2
   123d4:	movne	r3, #0
   123d8:	andeq	r3, r3, #1
   123dc:	cmp	r3, #0
   123e0:	ldr	r3, [sp, #160]	; 0xa0
   123e4:	movne	sl, #4
   123e8:	str	sl, [sp]
   123ec:	str	r3, [sp, #16]
   123f0:	ldr	r3, [sp, #156]	; 0x9c
   123f4:	str	r3, [sp, #12]
   123f8:	mov	r3, #0
   123fc:	str	r3, [sp, #8]
   12400:	ldr	r3, [sp, #148]	; 0x94
   12404:	bic	r3, r3, #2
   12408:	str	r3, [sp, #4]
   1240c:	ldr	r3, [sp, #40]	; 0x28
   12410:	b	12198 <putchar_unlocked@plt+0x1328>
   12414:	mov	r3, #0
   12418:	str	r3, [sp, #64]	; 0x40
   1241c:	ldr	r2, [sp, #28]
   12420:	ldr	r3, [sp, #48]	; 0x30
   12424:	add	r3, r3, r2
   12428:	str	r3, [sp, #80]	; 0x50
   1242c:	ldr	r3, [sp, #48]	; 0x30
   12430:	ldrb	r6, [r3, r2]
   12434:	cmp	r6, #58	; 0x3a
   12438:	bhi	1259c <putchar_unlocked@plt+0x172c>
   1243c:	cmp	r6, #43	; 0x2b
   12440:	bcs	1275c <putchar_unlocked@plt+0x18ec>
   12444:	cmp	r6, #32
   12448:	beq	127b0 <putchar_unlocked@plt+0x1940>
   1244c:	bhi	124f4 <putchar_unlocked@plt+0x1684>
   12450:	cmp	r6, #9
   12454:	beq	12958 <putchar_unlocked@plt+0x1ae8>
   12458:	bhi	124b8 <putchar_unlocked@plt+0x1648>
   1245c:	cmp	r6, #7
   12460:	beq	12968 <putchar_unlocked@plt+0x1af8>
   12464:	bhi	12984 <putchar_unlocked@plt+0x1b14>
   12468:	cmp	r6, #0
   1246c:	beq	127cc <putchar_unlocked@plt+0x195c>
   12470:	ldr	r3, [sp, #76]	; 0x4c
   12474:	cmp	r3, #1
   12478:	bne	129d0 <putchar_unlocked@plt+0x1b60>
   1247c:	bl	10d80 <__ctype_b_loc@plt>
   12480:	ldr	r2, [r0]
   12484:	sxth	r3, r6
   12488:	lsl	r3, r3, #1
   1248c:	ldrh	r5, [r2, r3]
   12490:	ldr	r3, [sp, #76]	; 0x4c
   12494:	ubfx	r5, r5, #14, #1
   12498:	str	r3, [sp, #56]	; 0x38
   1249c:	ldr	r3, [sp, #24]
   124a0:	eor	fp, r5, #1
   124a4:	and	fp, fp, r3
   124a8:	ands	fp, fp, #255	; 0xff
   124ac:	beq	1268c <putchar_unlocked@plt+0x181c>
   124b0:	mov	r5, #0
   124b4:	b	12a7c <putchar_unlocked@plt+0x1c0c>
   124b8:	cmp	r6, #11
   124bc:	beq	1298c <putchar_unlocked@plt+0x1b1c>
   124c0:	bcc	12960 <putchar_unlocked@plt+0x1af0>
   124c4:	cmp	r6, #12
   124c8:	beq	12994 <putchar_unlocked@plt+0x1b24>
   124cc:	cmp	r6, #13
   124d0:	moveq	r3, #114	; 0x72
   124d4:	bne	12470 <putchar_unlocked@plt+0x1600>
   124d8:	cmp	sl, #2
   124dc:	movne	r2, #0
   124e0:	andeq	r2, r7, #1
   124e4:	cmp	r2, #0
   124e8:	beq	1296c <putchar_unlocked@plt+0x1afc>
   124ec:	mov	sl, #2
   124f0:	b	123c4 <putchar_unlocked@plt+0x1554>
   124f4:	cmp	r6, #37	; 0x25
   124f8:	beq	1275c <putchar_unlocked@plt+0x18ec>
   124fc:	bhi	12510 <putchar_unlocked@plt+0x16a0>
   12500:	cmp	r6, #35	; 0x23
   12504:	beq	127a4 <putchar_unlocked@plt+0x1934>
   12508:	mov	r5, #0
   1250c:	b	127b4 <putchar_unlocked@plt+0x1944>
   12510:	cmp	r6, #39	; 0x27
   12514:	bne	12508 <putchar_unlocked@plt+0x1698>
   12518:	cmp	sl, #2
   1251c:	ldrne	r5, [sp, #36]	; 0x24
   12520:	movne	r3, r5
   12524:	strne	r3, [sp, #68]	; 0x44
   12528:	bne	128a8 <putchar_unlocked@plt+0x1a38>
   1252c:	cmp	r7, #0
   12530:	bne	123c4 <putchar_unlocked@plt+0x1554>
   12534:	ldr	r3, [sp, #60]	; 0x3c
   12538:	cmp	r9, #0
   1253c:	clz	r3, r3
   12540:	lsr	r3, r3, #5
   12544:	moveq	r3, #0
   12548:	cmp	r3, #0
   1254c:	strne	r9, [sp, #60]	; 0x3c
   12550:	movne	r9, #0
   12554:	bne	12564 <putchar_unlocked@plt+0x16f4>
   12558:	cmp	r9, r4
   1255c:	movhi	r3, #39	; 0x27
   12560:	strbhi	r3, [r8, r4]
   12564:	add	r3, r4, #1
   12568:	ldr	r5, [sp, #36]	; 0x24
   1256c:	mov	fp, #0
   12570:	cmp	r3, r9
   12574:	movcc	r2, #92	; 0x5c
   12578:	str	fp, [sp, #52]	; 0x34
   1257c:	strbcc	r2, [r8, r3]
   12580:	add	r3, r4, #2
   12584:	add	r4, r4, #3
   12588:	cmp	r3, r9
   1258c:	str	r5, [sp, #68]	; 0x44
   12590:	movcc	r2, #39	; 0x27
   12594:	strbcc	r2, [r8, r3]
   12598:	b	1268c <putchar_unlocked@plt+0x181c>
   1259c:	cmp	r6, #94	; 0x5e
   125a0:	beq	12508 <putchar_unlocked@plt+0x1698>
   125a4:	bhi	12764 <putchar_unlocked@plt+0x18f4>
   125a8:	cmp	r6, #90	; 0x5a
   125ac:	bhi	12750 <putchar_unlocked@plt+0x18e0>
   125b0:	cmp	r6, #65	; 0x41
   125b4:	bcs	1275c <putchar_unlocked@plt+0x18ec>
   125b8:	cmp	r6, #62	; 0x3e
   125bc:	bls	12508 <putchar_unlocked@plt+0x1698>
   125c0:	cmp	r6, #63	; 0x3f
   125c4:	bne	12470 <putchar_unlocked@plt+0x1600>
   125c8:	cmp	sl, #2
   125cc:	beq	128b0 <putchar_unlocked@plt+0x1a40>
   125d0:	cmp	sl, #5
   125d4:	movne	fp, #0
   125d8:	bne	12c80 <putchar_unlocked@plt+0x1e10>
   125dc:	ldr	r3, [sp, #148]	; 0x94
   125e0:	tst	r3, #4
   125e4:	beq	128b8 <putchar_unlocked@plt+0x1a48>
   125e8:	ldr	r3, [sp, #28]
   125ec:	add	r2, r3, #2
   125f0:	ldr	r3, [sp, #40]	; 0x28
   125f4:	cmp	r2, r3
   125f8:	bcs	128b8 <putchar_unlocked@plt+0x1a48>
   125fc:	ldr	r1, [sp, #28]
   12600:	ldr	r3, [sp, #48]	; 0x30
   12604:	add	r3, r3, r1
   12608:	ldrb	r1, [r3, #1]
   1260c:	cmp	r1, #63	; 0x3f
   12610:	bne	128b8 <putchar_unlocked@plt+0x1a48>
   12614:	ldr	r3, [sp, #48]	; 0x30
   12618:	ldrb	r6, [r3, r2]
   1261c:	sub	r3, r6, #33	; 0x21
   12620:	uxtb	r3, r3
   12624:	cmp	r3, #29
   12628:	bhi	12c88 <putchar_unlocked@plt+0x1e18>
   1262c:	ldr	r0, [pc, #1804]	; 12d40 <putchar_unlocked@plt+0x1ed0>
   12630:	mov	r5, #1
   12634:	ands	r5, r0, r5, lsl r3
   12638:	beq	12c90 <putchar_unlocked@plt+0x1e20>
   1263c:	cmp	r7, #0
   12640:	bne	123c4 <putchar_unlocked@plt+0x1554>
   12644:	cmp	r9, r4
   12648:	add	r3, r4, #1
   1264c:	str	r2, [sp, #28]
   12650:	mov	r5, #0
   12654:	strbhi	r1, [r8, r4]
   12658:	cmp	r9, r3
   1265c:	mov	fp, r5
   12660:	movhi	r1, #34	; 0x22
   12664:	strbhi	r1, [r8, r3]
   12668:	add	r3, r4, #2
   1266c:	cmp	r9, r3
   12670:	movhi	r1, #34	; 0x22
   12674:	strbhi	r1, [r8, r3]
   12678:	add	r3, r4, #3
   1267c:	add	r4, r4, #4
   12680:	cmp	r9, r3
   12684:	movhi	r1, #63	; 0x3f
   12688:	strbhi	r1, [r8, r3]
   1268c:	ldr	r3, [sp, #24]
   12690:	eor	r3, r3, #1
   12694:	cmp	sl, #2
   12698:	orreq	r3, r3, #1
   1269c:	eor	r3, r3, #1
   126a0:	orr	r3, r7, r3
   126a4:	tst	r3, #255	; 0xff
   126a8:	beq	126d4 <putchar_unlocked@plt+0x1864>
   126ac:	ldr	r3, [sp, #152]	; 0x98
   126b0:	cmp	r3, #0
   126b4:	beq	126d4 <putchar_unlocked@plt+0x1864>
   126b8:	ldr	r1, [sp, #152]	; 0x98
   126bc:	ubfx	r2, r6, #5, #8
   126c0:	and	r3, r6, #31
   126c4:	ldr	r2, [r1, r2, lsl #2]
   126c8:	lsr	r3, r2, r3
   126cc:	tst	r3, #1
   126d0:	bne	126e0 <putchar_unlocked@plt+0x1870>
   126d4:	ldr	r3, [sp, #64]	; 0x40
   126d8:	cmp	r3, #0
   126dc:	beq	128d8 <putchar_unlocked@plt+0x1a68>
   126e0:	sub	r3, sl, #2
   126e4:	cmp	r7, #0
   126e8:	clz	r3, r3
   126ec:	lsr	r3, r3, #5
   126f0:	bne	123c4 <putchar_unlocked@plt+0x1554>
   126f4:	ldr	r2, [sp, #52]	; 0x34
   126f8:	eor	r2, r2, #1
   126fc:	ands	r3, r3, r2
   12700:	beq	12738 <putchar_unlocked@plt+0x18c8>
   12704:	cmp	r9, r4
   12708:	str	r3, [sp, #52]	; 0x34
   1270c:	movhi	r2, #39	; 0x27
   12710:	strbhi	r2, [r8, r4]
   12714:	add	r2, r4, #1
   12718:	cmp	r9, r2
   1271c:	movhi	r1, #36	; 0x24
   12720:	strbhi	r1, [r8, r2]
   12724:	add	r2, r4, #2
   12728:	add	r4, r4, #3
   1272c:	cmp	r9, r2
   12730:	movhi	r1, #39	; 0x27
   12734:	strbhi	r1, [r8, r2]
   12738:	cmp	r9, r4
   1273c:	ldr	fp, [sp, #36]	; 0x24
   12740:	movhi	r3, #92	; 0x5c
   12744:	strbhi	r3, [r8, r4]
   12748:	add	r4, r4, #1
   1274c:	b	128d8 <putchar_unlocked@plt+0x1a68>
   12750:	cmp	r6, #92	; 0x5c
   12754:	beq	128c0 <putchar_unlocked@plt+0x1a50>
   12758:	bls	12508 <putchar_unlocked@plt+0x1698>
   1275c:	ldr	r5, [sp, #36]	; 0x24
   12760:	b	128a8 <putchar_unlocked@plt+0x1a38>
   12764:	cmp	r6, #122	; 0x7a
   12768:	bhi	12788 <putchar_unlocked@plt+0x1918>
   1276c:	cmp	r6, #97	; 0x61
   12770:	bcs	1275c <putchar_unlocked@plt+0x18ec>
   12774:	cmp	r6, #95	; 0x5f
   12778:	beq	1275c <putchar_unlocked@plt+0x18ec>
   1277c:	cmp	r6, #96	; 0x60
   12780:	bne	12470 <putchar_unlocked@plt+0x1600>
   12784:	b	12508 <putchar_unlocked@plt+0x1698>
   12788:	cmp	r6, #124	; 0x7c
   1278c:	beq	12508 <putchar_unlocked@plt+0x1698>
   12790:	bcc	1299c <putchar_unlocked@plt+0x1b2c>
   12794:	cmp	r6, #125	; 0x7d
   12798:	beq	1299c <putchar_unlocked@plt+0x1b2c>
   1279c:	cmp	r6, #126	; 0x7e
   127a0:	bne	12470 <putchar_unlocked@plt+0x1600>
   127a4:	ldr	r3, [sp, #28]
   127a8:	cmp	r3, #0
   127ac:	bne	128b8 <putchar_unlocked@plt+0x1a48>
   127b0:	ldr	r5, [sp, #36]	; 0x24
   127b4:	cmp	sl, #2
   127b8:	movne	fp, #0
   127bc:	andeq	fp, r7, #1
   127c0:	cmp	fp, #0
   127c4:	beq	1268c <putchar_unlocked@plt+0x181c>
   127c8:	b	124ec <putchar_unlocked@plt+0x167c>
   127cc:	ldr	r3, [sp, #24]
   127d0:	cmp	r3, #0
   127d4:	beq	1289c <putchar_unlocked@plt+0x1a2c>
   127d8:	sub	r2, sl, #2
   127dc:	cmp	r7, #0
   127e0:	clz	r2, r2
   127e4:	lsr	r2, r2, #5
   127e8:	bne	123c0 <putchar_unlocked@plt+0x1550>
   127ec:	ldr	r3, [sp, #52]	; 0x34
   127f0:	eor	r3, r3, #1
   127f4:	ands	r2, r2, r3
   127f8:	moveq	r3, r4
   127fc:	beq	12834 <putchar_unlocked@plt+0x19c4>
   12800:	cmp	r9, r4
   12804:	str	r2, [sp, #52]	; 0x34
   12808:	movhi	r3, #39	; 0x27
   1280c:	strbhi	r3, [r8, r4]
   12810:	add	r3, r4, #1
   12814:	cmp	r9, r3
   12818:	movhi	r1, #36	; 0x24
   1281c:	strbhi	r1, [r8, r3]
   12820:	add	r3, r4, #2
   12824:	cmp	r9, r3
   12828:	movhi	r1, #39	; 0x27
   1282c:	strbhi	r1, [r8, r3]
   12830:	add	r3, r4, #3
   12834:	cmp	r9, r3
   12838:	add	r4, r3, #1
   1283c:	movhi	r2, #92	; 0x5c
   12840:	strbhi	r2, [r8, r3]
   12844:	cmp	fp, #0
   12848:	beq	12c70 <putchar_unlocked@plt+0x1e00>
   1284c:	ldr	r2, [sp, #28]
   12850:	ldr	r1, [sp, #40]	; 0x28
   12854:	add	r2, r2, #1
   12858:	cmp	r2, r1
   1285c:	bcs	12894 <putchar_unlocked@plt+0x1a24>
   12860:	ldr	r1, [sp, #48]	; 0x30
   12864:	mov	r6, #48	; 0x30
   12868:	ldrb	r2, [r1, r2]
   1286c:	sub	r2, r2, #48	; 0x30
   12870:	cmp	r2, #9
   12874:	bhi	12c80 <putchar_unlocked@plt+0x1e10>
   12878:	cmp	r9, r4
   1287c:	add	r2, r3, #2
   12880:	strbhi	r6, [r8, r4]
   12884:	cmp	r9, r2
   12888:	add	r4, r3, #3
   1288c:	movhi	r1, #48	; 0x30
   12890:	strbhi	r1, [r8, r2]
   12894:	mov	r5, #0
   12898:	b	12c78 <putchar_unlocked@plt+0x1e08>
   1289c:	ldr	r3, [sp, #148]	; 0x94
   128a0:	ands	r5, r3, #1
   128a4:	bne	1292c <putchar_unlocked@plt+0x1abc>
   128a8:	mov	fp, #0
   128ac:	b	1268c <putchar_unlocked@plt+0x181c>
   128b0:	cmp	r7, #0
   128b4:	bne	123c4 <putchar_unlocked@plt+0x1554>
   128b8:	mov	r5, #0
   128bc:	b	128a8 <putchar_unlocked@plt+0x1a38>
   128c0:	cmp	sl, #2
   128c4:	bne	12938 <putchar_unlocked@plt+0x1ac8>
   128c8:	cmp	r7, #0
   128cc:	bne	123c4 <putchar_unlocked@plt+0x1554>
   128d0:	mov	r5, r7
   128d4:	mov	fp, r7
   128d8:	ldr	r3, [sp, #52]	; 0x34
   128dc:	eor	fp, fp, #1
   128e0:	tst	r3, fp
   128e4:	beq	12910 <putchar_unlocked@plt+0x1aa0>
   128e8:	cmp	r9, r4
   128ec:	movhi	r3, #39	; 0x27
   128f0:	strbhi	r3, [r8, r4]
   128f4:	add	r3, r4, #1
   128f8:	add	r4, r4, #2
   128fc:	cmp	r9, r3
   12900:	movhi	r2, #39	; 0x27
   12904:	strbhi	r2, [r8, r3]
   12908:	mov	r3, #0
   1290c:	str	r3, [sp, #52]	; 0x34
   12910:	cmp	r9, r4
   12914:	ldr	r3, [sp, #72]	; 0x48
   12918:	strbhi	r6, [r8, r4]
   1291c:	cmp	r5, #0
   12920:	add	r4, r4, #1
   12924:	moveq	r3, #0
   12928:	str	r3, [sp, #72]	; 0x48
   1292c:	ldr	r3, [sp, #28]
   12930:	add	r3, r3, #1
   12934:	b	120ec <putchar_unlocked@plt+0x127c>
   12938:	ldr	r3, [sp, #24]
   1293c:	and	r3, r3, r7
   12940:	tst	r5, r3
   12944:	moveq	r3, r6
   12948:	beq	124d8 <putchar_unlocked@plt+0x1668>
   1294c:	mov	fp, #0
   12950:	mov	r5, fp
   12954:	b	128d8 <putchar_unlocked@plt+0x1a68>
   12958:	mov	r3, #116	; 0x74
   1295c:	b	124d8 <putchar_unlocked@plt+0x1668>
   12960:	mov	r3, #110	; 0x6e
   12964:	b	124d8 <putchar_unlocked@plt+0x1668>
   12968:	mov	r3, #97	; 0x61
   1296c:	ldr	r2, [sp, #24]
   12970:	cmp	r2, #0
   12974:	beq	128b8 <putchar_unlocked@plt+0x1a48>
   12978:	mov	r6, r3
   1297c:	mov	r5, #0
   12980:	b	126e0 <putchar_unlocked@plt+0x1870>
   12984:	mov	r3, #98	; 0x62
   12988:	b	1296c <putchar_unlocked@plt+0x1afc>
   1298c:	mov	r3, #118	; 0x76
   12990:	b	1296c <putchar_unlocked@plt+0x1afc>
   12994:	mov	r3, #102	; 0x66
   12998:	b	1296c <putchar_unlocked@plt+0x1afc>
   1299c:	ldr	r3, [sp, #40]	; 0x28
   129a0:	cmn	r3, #1
   129a4:	bne	129c4 <putchar_unlocked@plt+0x1b54>
   129a8:	ldr	r3, [sp, #48]	; 0x30
   129ac:	ldrb	r3, [r3, #1]
   129b0:	adds	r3, r3, #0
   129b4:	movne	r3, #1
   129b8:	cmp	r3, #0
   129bc:	bne	128b8 <putchar_unlocked@plt+0x1a48>
   129c0:	b	127a4 <putchar_unlocked@plt+0x1934>
   129c4:	ldr	r3, [sp, #40]	; 0x28
   129c8:	subs	r3, r3, #1
   129cc:	b	129b4 <putchar_unlocked@plt+0x1b44>
   129d0:	mov	r3, #0
   129d4:	mov	r2, #0
   129d8:	strd	r2, [sp, #96]	; 0x60
   129dc:	ldr	r3, [sp, #40]	; 0x28
   129e0:	cmn	r3, #1
   129e4:	bne	129f4 <putchar_unlocked@plt+0x1b84>
   129e8:	ldr	r0, [sp, #48]	; 0x30
   129ec:	bl	10d98 <strlen@plt>
   129f0:	str	r0, [sp, #40]	; 0x28
   129f4:	ldr	r5, [sp, #36]	; 0x24
   129f8:	mov	r3, #0
   129fc:	str	r3, [sp, #56]	; 0x38
   12a00:	ldr	r3, [sp, #28]
   12a04:	add	r0, sp, #92	; 0x5c
   12a08:	ldr	r1, [sp, #40]	; 0x28
   12a0c:	ldr	r2, [sp, #56]	; 0x38
   12a10:	add	r2, r3, r2
   12a14:	ldr	r3, [sp, #48]	; 0x30
   12a18:	add	fp, r3, r2
   12a1c:	sub	r2, r1, r2
   12a20:	add	r3, sp, #96	; 0x60
   12a24:	mov	r1, fp
   12a28:	bl	13de8 <putchar_unlocked@plt+0x2f78>
   12a2c:	subs	r2, r0, #0
   12a30:	beq	12a70 <putchar_unlocked@plt+0x1c00>
   12a34:	cmn	r2, #1
   12a38:	beq	12c44 <putchar_unlocked@plt+0x1dd4>
   12a3c:	cmn	r2, #2
   12a40:	bne	12bb4 <putchar_unlocked@plt+0x1d44>
   12a44:	ldr	r3, [sp, #28]
   12a48:	ldr	r2, [sp, #56]	; 0x38
   12a4c:	add	r3, r3, r2
   12a50:	ldr	r2, [sp, #40]	; 0x28
   12a54:	cmp	r2, r3
   12a58:	bls	12c44 <putchar_unlocked@plt+0x1dd4>
   12a5c:	ldr	r2, [sp, #56]	; 0x38
   12a60:	ldr	r3, [sp, #80]	; 0x50
   12a64:	ldrb	r5, [r3, r2]
   12a68:	cmp	r5, #0
   12a6c:	bne	12ba4 <putchar_unlocked@plt+0x1d34>
   12a70:	ldr	r3, [sp, #56]	; 0x38
   12a74:	cmp	r3, #1
   12a78:	bls	1249c <putchar_unlocked@plt+0x162c>
   12a7c:	ldr	r3, [sp, #28]
   12a80:	mov	fp, #0
   12a84:	mov	ip, #92	; 0x5c
   12a88:	ldr	r2, [sp, #56]	; 0x38
   12a8c:	add	r3, r3, r2
   12a90:	ldr	r2, [sp, #24]
   12a94:	str	r3, [sp, #36]	; 0x24
   12a98:	eor	r3, r5, #1
   12a9c:	and	r3, r3, r2
   12aa0:	mov	r2, #39	; 0x27
   12aa4:	uxtb	r3, r3
   12aa8:	cmp	r3, #0
   12aac:	beq	12c4c <putchar_unlocked@plt+0x1ddc>
   12ab0:	sub	r0, sl, #2
   12ab4:	cmp	r7, #0
   12ab8:	clz	r0, r0
   12abc:	lsr	r0, r0, #5
   12ac0:	bne	123c0 <putchar_unlocked@plt+0x1550>
   12ac4:	ldr	r1, [sp, #52]	; 0x34
   12ac8:	eor	r1, r1, #1
   12acc:	ands	r1, r0, r1
   12ad0:	beq	12b00 <putchar_unlocked@plt+0x1c90>
   12ad4:	cmp	r9, r4
   12ad8:	add	r0, r4, #1
   12adc:	str	r1, [sp, #52]	; 0x34
   12ae0:	strbhi	r2, [r8, r4]
   12ae4:	cmp	r9, r0
   12ae8:	movhi	lr, #36	; 0x24
   12aec:	strbhi	lr, [r8, r0]
   12af0:	add	r0, r4, #2
   12af4:	add	r4, r4, #3
   12af8:	cmp	r9, r0
   12afc:	strbhi	r2, [r8, r0]
   12b00:	cmp	r9, r4
   12b04:	add	r0, r4, #1
   12b08:	mov	fp, r3
   12b0c:	strbhi	ip, [r8, r4]
   12b10:	cmp	r9, r0
   12b14:	lsrhi	r1, r6, #6
   12b18:	addhi	r1, r1, #48	; 0x30
   12b1c:	strbhi	r1, [r8, r0]
   12b20:	add	r0, r4, #2
   12b24:	add	r4, r4, #3
   12b28:	cmp	r9, r0
   12b2c:	ubfxhi	r1, r6, #3, #3
   12b30:	and	r6, r6, #7
   12b34:	add	r6, r6, #48	; 0x30
   12b38:	addhi	r1, r1, #48	; 0x30
   12b3c:	strbhi	r1, [r8, r0]
   12b40:	eor	r0, fp, #1
   12b44:	ldr	r1, [sp, #28]
   12b48:	ldr	lr, [sp, #52]	; 0x34
   12b4c:	add	r1, r1, #1
   12b50:	and	r0, r0, lr
   12b54:	ldr	lr, [sp, #36]	; 0x24
   12b58:	cmp	r1, lr
   12b5c:	bcs	128d8 <putchar_unlocked@plt+0x1a68>
   12b60:	cmp	r0, #0
   12b64:	beq	12b88 <putchar_unlocked@plt+0x1d18>
   12b68:	cmp	r9, r4
   12b6c:	add	r0, r4, #1
   12b70:	strbhi	r2, [r8, r4]
   12b74:	cmp	r9, r0
   12b78:	add	r4, r4, #2
   12b7c:	strbhi	r2, [r8, r0]
   12b80:	mov	r0, #0
   12b84:	str	r0, [sp, #52]	; 0x34
   12b88:	ldr	r0, [sp, #48]	; 0x30
   12b8c:	cmp	r9, r4
   12b90:	str	r1, [sp, #28]
   12b94:	strbhi	r6, [r8, r4]
   12b98:	add	r4, r4, #1
   12b9c:	ldrb	r6, [r0, r1]
   12ba0:	b	12aa8 <putchar_unlocked@plt+0x1c38>
   12ba4:	ldr	r3, [sp, #56]	; 0x38
   12ba8:	add	r3, r3, #1
   12bac:	str	r3, [sp, #56]	; 0x38
   12bb0:	b	12a44 <putchar_unlocked@plt+0x1bd4>
   12bb4:	cmp	sl, #2
   12bb8:	movne	r3, #0
   12bbc:	andeq	r3, r7, #1
   12bc0:	cmp	r3, #0
   12bc4:	movne	r1, #1
   12bc8:	bne	12c24 <putchar_unlocked@plt+0x1db4>
   12bcc:	ldr	r0, [sp, #92]	; 0x5c
   12bd0:	str	r2, [sp, #84]	; 0x54
   12bd4:	bl	10cf0 <iswprint@plt>
   12bd8:	ldr	r3, [sp, #56]	; 0x38
   12bdc:	cmp	r0, #0
   12be0:	add	r0, sp, #96	; 0x60
   12be4:	moveq	r5, #0
   12be8:	ldr	r2, [sp, #84]	; 0x54
   12bec:	add	r3, r3, r2
   12bf0:	str	r3, [sp, #56]	; 0x38
   12bf4:	bl	10c90 <mbsinit@plt>
   12bf8:	cmp	r0, #0
   12bfc:	beq	12a00 <putchar_unlocked@plt+0x1b90>
   12c00:	b	12a70 <putchar_unlocked@plt+0x1c00>
   12c04:	ldrb	r3, [fp, #1]!
   12c08:	cmp	r3, #94	; 0x5e
   12c0c:	beq	124ec <putchar_unlocked@plt+0x167c>
   12c10:	bhi	12c30 <putchar_unlocked@plt+0x1dc0>
   12c14:	sub	r3, r3, #91	; 0x5b
   12c18:	cmp	r3, #1
   12c1c:	bls	124ec <putchar_unlocked@plt+0x167c>
   12c20:	add	r1, r1, #1
   12c24:	cmp	r1, r2
   12c28:	bne	12c04 <putchar_unlocked@plt+0x1d94>
   12c2c:	b	12bcc <putchar_unlocked@plt+0x1d5c>
   12c30:	cmp	r3, #96	; 0x60
   12c34:	beq	124ec <putchar_unlocked@plt+0x167c>
   12c38:	cmp	r3, #124	; 0x7c
   12c3c:	bne	12c20 <putchar_unlocked@plt+0x1db0>
   12c40:	b	124ec <putchar_unlocked@plt+0x167c>
   12c44:	mov	r5, #0
   12c48:	b	12a70 <putchar_unlocked@plt+0x1c00>
   12c4c:	ldr	r1, [sp, #64]	; 0x40
   12c50:	cmp	r1, #0
   12c54:	beq	12b40 <putchar_unlocked@plt+0x1cd0>
   12c58:	cmp	r9, r4
   12c5c:	mov	r1, #0
   12c60:	strbhi	ip, [r8, r4]
   12c64:	add	r4, r4, #1
   12c68:	str	r1, [sp, #64]	; 0x40
   12c6c:	b	12b40 <putchar_unlocked@plt+0x1cd0>
   12c70:	mov	r5, fp
   12c74:	ldr	fp, [sp, #24]
   12c78:	mov	r6, #48	; 0x30
   12c7c:	b	1268c <putchar_unlocked@plt+0x181c>
   12c80:	mov	r5, #0
   12c84:	b	1268c <putchar_unlocked@plt+0x181c>
   12c88:	mov	r6, r1
   12c8c:	b	128b8 <putchar_unlocked@plt+0x1a48>
   12c90:	mov	r6, r1
   12c94:	b	128a8 <putchar_unlocked@plt+0x1a38>
   12c98:	ldr	r2, [sp, #28]
   12c9c:	ldr	r3, [sp, #40]	; 0x28
   12ca0:	subs	r3, r3, r2
   12ca4:	movne	r3, #1
   12ca8:	b	12110 <putchar_unlocked@plt+0x12a0>
   12cac:	ldr	r3, [sp, #60]	; 0x3c
   12cb0:	mov	sl, #2
   12cb4:	ldr	r7, [sp, #72]	; 0x48
   12cb8:	adds	r6, r3, #0
   12cbc:	mov	r5, r3
   12cc0:	movne	r6, #1
   12cc4:	cmp	r9, #0
   12cc8:	movne	r6, #0
   12ccc:	cmp	r6, #0
   12cd0:	bne	120a0 <putchar_unlocked@plt+0x1230>
   12cd4:	ldr	r3, [sp, #68]	; 0x44
   12cd8:	ldr	r2, [sp, #44]	; 0x2c
   12cdc:	cmp	r2, #0
   12ce0:	moveq	r3, #0
   12ce4:	andne	r3, r3, #1
   12ce8:	cmp	r3, #0
   12cec:	movne	r3, r2
   12cf0:	subne	r3, r3, #1
   12cf4:	bne	12d24 <putchar_unlocked@plt+0x1eb4>
   12cf8:	cmp	r9, r4
   12cfc:	movhi	r3, #0
   12d00:	strbhi	r3, [r8, r4]
   12d04:	mov	r0, r4
   12d08:	add	sp, sp, #108	; 0x6c
   12d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d10:	mov	r3, r7
   12d14:	b	12cd8 <putchar_unlocked@plt+0x1e68>
   12d18:	cmp	r9, r4
   12d1c:	strbhi	r2, [r8, r4]
   12d20:	add	r4, r4, #1
   12d24:	ldrb	r2, [r3, #1]!
   12d28:	cmp	r2, #0
   12d2c:	bne	12d18 <putchar_unlocked@plt+0x1ea8>
   12d30:	b	12cf8 <putchar_unlocked@plt+0x1e88>
   12d34:	muleq	r1, ip, r5
   12d38:	andeq	r4, r1, pc, lsr #11
   12d3c:	andeq	r4, r1, sp, lsr #11
   12d40:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d48:	sub	sp, sp, #52	; 0x34
   12d4c:	mov	r6, r0
   12d50:	mov	r5, r3
   12d54:	mov	r8, r1
   12d58:	mov	r9, r2
   12d5c:	bl	10da4 <__errno_location@plt>
   12d60:	ldr	r3, [r0]
   12d64:	cmn	r6, #-2147483647	; 0x80000001
   12d68:	str	r0, [sp, #24]
   12d6c:	ldr	r7, [pc, #368]	; 12ee4 <putchar_unlocked@plt+0x2074>
   12d70:	str	r3, [sp, #32]
   12d74:	movne	r3, #0
   12d78:	moveq	r3, #1
   12d7c:	orrs	r3, r3, r6, lsr #31
   12d80:	ldr	r4, [r7]
   12d84:	beq	12d8c <putchar_unlocked@plt+0x1f1c>
   12d88:	bl	10e64 <abort@plt>
   12d8c:	ldr	r2, [r7, #4]
   12d90:	cmp	r2, r6
   12d94:	bgt	12e04 <putchar_unlocked@plt+0x1f94>
   12d98:	add	sl, r7, #8
   12d9c:	mov	r3, #8
   12da0:	cmp	r4, sl
   12da4:	add	r1, sp, #44	; 0x2c
   12da8:	str	r2, [sp, #44]	; 0x2c
   12dac:	sub	r2, r6, r2
   12db0:	movne	r0, r4
   12db4:	moveq	r0, #0
   12db8:	add	r2, r2, #1
   12dbc:	str	r3, [sp]
   12dc0:	mvn	r3, #-2147483648	; 0x80000000
   12dc4:	bl	13a98 <putchar_unlocked@plt+0x2c28>
   12dc8:	cmp	r4, sl
   12dcc:	mov	fp, r0
   12dd0:	str	r0, [r7]
   12dd4:	ldmeq	r4, {r0, r1}
   12dd8:	mov	r4, fp
   12ddc:	ldr	r2, [sp, #44]	; 0x2c
   12de0:	stmeq	fp, {r0, r1}
   12de4:	mov	r1, #0
   12de8:	ldr	r0, [r7, #4]
   12dec:	sub	r2, r2, r0
   12df0:	add	r0, fp, r0, lsl #3
   12df4:	lsl	r2, r2, #3
   12df8:	bl	10dbc <memset@plt>
   12dfc:	ldr	r3, [sp, #44]	; 0x2c
   12e00:	str	r3, [r7, #4]
   12e04:	ldr	r3, [r5, #4]
   12e08:	add	sl, r4, r6, lsl #3
   12e0c:	mov	r2, r8
   12e10:	ldr	fp, [r4, r6, lsl #3]
   12e14:	ldr	r7, [sl, #4]
   12e18:	orr	r3, r3, #1
   12e1c:	str	r3, [sp, #28]
   12e20:	add	r3, r5, #8
   12e24:	mov	r1, fp
   12e28:	str	r3, [sp, #36]	; 0x24
   12e2c:	mov	r0, r7
   12e30:	ldr	r3, [r5, #44]	; 0x2c
   12e34:	str	r3, [sp, #16]
   12e38:	ldr	r3, [r5, #40]	; 0x28
   12e3c:	str	r3, [sp, #12]
   12e40:	add	r3, r5, #8
   12e44:	str	r3, [sp, #8]
   12e48:	ldr	r3, [sp, #28]
   12e4c:	str	r3, [sp, #4]
   12e50:	ldr	r3, [r5]
   12e54:	str	r3, [sp]
   12e58:	mov	r3, r9
   12e5c:	bl	12054 <putchar_unlocked@plt+0x11e4>
   12e60:	cmp	fp, r0
   12e64:	bhi	12ecc <putchar_unlocked@plt+0x205c>
   12e68:	ldr	r3, [pc, #120]	; 12ee8 <putchar_unlocked@plt+0x2078>
   12e6c:	add	fp, r0, #1
   12e70:	str	fp, [r4, r6, lsl #3]
   12e74:	cmp	r7, r3
   12e78:	beq	12e84 <putchar_unlocked@plt+0x2014>
   12e7c:	mov	r0, r7
   12e80:	bl	11d64 <putchar_unlocked@plt+0xef4>
   12e84:	mov	r0, fp
   12e88:	bl	13988 <putchar_unlocked@plt+0x2b18>
   12e8c:	ldr	r3, [r5, #44]	; 0x2c
   12e90:	mov	r2, r8
   12e94:	mov	r1, fp
   12e98:	str	r0, [sl, #4]
   12e9c:	mov	r7, r0
   12ea0:	str	r3, [sp, #16]
   12ea4:	ldr	r3, [r5, #40]	; 0x28
   12ea8:	str	r3, [sp, #12]
   12eac:	add	r3, r5, #8
   12eb0:	str	r3, [sp, #8]
   12eb4:	ldr	r3, [sp, #28]
   12eb8:	str	r3, [sp, #4]
   12ebc:	ldr	r3, [r5]
   12ec0:	str	r3, [sp]
   12ec4:	mov	r3, r9
   12ec8:	bl	12054 <putchar_unlocked@plt+0x11e4>
   12ecc:	ldr	r3, [sp, #24]
   12ed0:	mov	r0, r7
   12ed4:	ldr	r2, [sp, #32]
   12ed8:	str	r2, [r3]
   12edc:	add	sp, sp, #52	; 0x34
   12ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ee4:	andeq	r5, r2, r8, ror #1
   12ee8:	andeq	r5, r2, ip, ror #2
   12eec:	push	{r4, r5, r6, lr}
   12ef0:	mov	r5, r0
   12ef4:	bl	10da4 <__errno_location@plt>
   12ef8:	mov	r4, r0
   12efc:	cmp	r5, #0
   12f00:	ldr	r0, [pc, #20]	; 12f1c <putchar_unlocked@plt+0x20ac>
   12f04:	mov	r1, #48	; 0x30
   12f08:	movne	r0, r5
   12f0c:	ldr	r6, [r4]
   12f10:	bl	13b88 <putchar_unlocked@plt+0x2d18>
   12f14:	str	r6, [r4]
   12f18:	pop	{r4, r5, r6, pc}
   12f1c:	andeq	r5, r2, ip, ror #4
   12f20:	ldr	r3, [pc, #12]	; 12f34 <putchar_unlocked@plt+0x20c4>
   12f24:	cmp	r0, #0
   12f28:	moveq	r0, r3
   12f2c:	ldr	r0, [r0]
   12f30:	bx	lr
   12f34:	andeq	r5, r2, ip, ror #4
   12f38:	ldr	r3, [pc, #12]	; 12f4c <putchar_unlocked@plt+0x20dc>
   12f3c:	cmp	r0, #0
   12f40:	moveq	r0, r3
   12f44:	str	r1, [r0]
   12f48:	bx	lr
   12f4c:	andeq	r5, r2, ip, ror #4
   12f50:	ldr	r3, [pc, #52]	; 12f8c <putchar_unlocked@plt+0x211c>
   12f54:	cmp	r0, #0
   12f58:	push	{lr}		; (str lr, [sp, #-4]!)
   12f5c:	lsr	lr, r1, #5
   12f60:	and	r1, r1, #31
   12f64:	moveq	r0, r3
   12f68:	add	r3, r0, #8
   12f6c:	ldr	ip, [r3, lr, lsl #2]
   12f70:	lsr	r0, ip, r1
   12f74:	eor	r2, r2, r0
   12f78:	and	r0, r0, #1
   12f7c:	and	r2, r2, #1
   12f80:	eor	r1, ip, r2, lsl r1
   12f84:	str	r1, [r3, lr, lsl #2]
   12f88:	pop	{pc}		; (ldr pc, [sp], #4)
   12f8c:	andeq	r5, r2, ip, ror #4
   12f90:	ldr	r3, [pc, #16]	; 12fa8 <putchar_unlocked@plt+0x2138>
   12f94:	cmp	r0, #0
   12f98:	movne	r3, r0
   12f9c:	ldr	r0, [r3, #4]
   12fa0:	str	r1, [r3, #4]
   12fa4:	bx	lr
   12fa8:	andeq	r5, r2, ip, ror #4
   12fac:	ldr	r3, [pc, #44]	; 12fe0 <putchar_unlocked@plt+0x2170>
   12fb0:	cmp	r0, #0
   12fb4:	moveq	r0, r3
   12fb8:	mov	r3, #10
   12fbc:	cmp	r2, #0
   12fc0:	cmpne	r1, #0
   12fc4:	str	r3, [r0]
   12fc8:	bne	12fd4 <putchar_unlocked@plt+0x2164>
   12fcc:	push	{r4, lr}
   12fd0:	bl	10e64 <abort@plt>
   12fd4:	str	r1, [r0, #40]	; 0x28
   12fd8:	str	r2, [r0, #44]	; 0x2c
   12fdc:	bx	lr
   12fe0:	andeq	r5, r2, ip, ror #4
   12fe4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12fe8:	sub	sp, sp, #24
   12fec:	mov	sl, r3
   12ff0:	mov	r7, r0
   12ff4:	mov	r8, r1
   12ff8:	mov	r9, r2
   12ffc:	ldr	r4, [sp, #56]	; 0x38
   13000:	ldr	r3, [pc, #88]	; 13060 <putchar_unlocked@plt+0x21f0>
   13004:	cmp	r4, #0
   13008:	moveq	r4, r3
   1300c:	bl	10da4 <__errno_location@plt>
   13010:	ldr	r3, [r4, #44]	; 0x2c
   13014:	mov	r5, r0
   13018:	mov	r2, r9
   1301c:	mov	r1, r8
   13020:	mov	r0, r7
   13024:	ldr	r6, [r5]
   13028:	str	r3, [sp, #16]
   1302c:	ldr	r3, [r4, #40]	; 0x28
   13030:	str	r3, [sp, #12]
   13034:	add	r3, r4, #8
   13038:	str	r3, [sp, #8]
   1303c:	ldr	r3, [r4, #4]
   13040:	str	r3, [sp, #4]
   13044:	ldr	r3, [r4]
   13048:	str	r3, [sp]
   1304c:	mov	r3, sl
   13050:	bl	12054 <putchar_unlocked@plt+0x11e4>
   13054:	str	r6, [r5]
   13058:	add	sp, sp, #24
   1305c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13060:	andeq	r5, r2, ip, ror #4
   13064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13068:	cmp	r3, #0
   1306c:	sub	sp, sp, #44	; 0x2c
   13070:	mov	r6, r2
   13074:	mov	sl, r1
   13078:	mov	r9, r0
   1307c:	ldr	r4, [pc, #176]	; 13134 <putchar_unlocked@plt+0x22c4>
   13080:	movne	r4, r3
   13084:	bl	10da4 <__errno_location@plt>
   13088:	ldr	r3, [r0]
   1308c:	mov	r1, #0
   13090:	mov	r2, r9
   13094:	mov	r8, r0
   13098:	mov	r0, r1
   1309c:	ldr	r5, [r4, #4]
   130a0:	add	fp, r4, #8
   130a4:	str	r3, [sp, #28]
   130a8:	ldr	r3, [r4, #44]	; 0x2c
   130ac:	cmp	r6, #0
   130b0:	orreq	r5, r5, #1
   130b4:	str	r3, [sp, #16]
   130b8:	ldr	r3, [r4, #40]	; 0x28
   130bc:	stmib	sp, {r5, fp}
   130c0:	str	r3, [sp, #12]
   130c4:	ldr	r3, [r4]
   130c8:	str	r3, [sp]
   130cc:	mov	r3, sl
   130d0:	bl	12054 <putchar_unlocked@plt+0x11e4>
   130d4:	add	r1, r0, #1
   130d8:	mov	r7, r0
   130dc:	mov	r0, r1
   130e0:	str	r1, [sp, #36]	; 0x24
   130e4:	bl	13988 <putchar_unlocked@plt+0x2b18>
   130e8:	ldr	r3, [r4, #44]	; 0x2c
   130ec:	mov	r2, r9
   130f0:	ldr	r1, [sp, #36]	; 0x24
   130f4:	str	r3, [sp, #16]
   130f8:	ldr	r3, [r4, #40]	; 0x28
   130fc:	stmib	sp, {r5, fp}
   13100:	str	r0, [sp, #32]
   13104:	str	r3, [sp, #12]
   13108:	ldr	r3, [r4]
   1310c:	str	r3, [sp]
   13110:	mov	r3, sl
   13114:	bl	12054 <putchar_unlocked@plt+0x11e4>
   13118:	ldr	r3, [sp, #28]
   1311c:	cmp	r6, #0
   13120:	ldr	r0, [sp, #32]
   13124:	str	r3, [r8]
   13128:	strne	r7, [r6]
   1312c:	add	sp, sp, #44	; 0x2c
   13130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13134:	andeq	r5, r2, ip, ror #4
   13138:	mov	r3, r2
   1313c:	mov	r2, #0
   13140:	b	13064 <putchar_unlocked@plt+0x21f4>
   13144:	push	{r4, r5, r6, r7, r8, lr}
   13148:	mov	r6, #1
   1314c:	ldr	r4, [pc, #100]	; 131b8 <putchar_unlocked@plt+0x2348>
   13150:	ldr	r5, [r4]
   13154:	add	r7, r5, #4
   13158:	ldr	r3, [r4, #4]
   1315c:	cmp	r3, r6
   13160:	bgt	131a8 <putchar_unlocked@plt+0x2338>
   13164:	ldr	r6, [pc, #80]	; 131bc <putchar_unlocked@plt+0x234c>
   13168:	ldr	r0, [r5, #4]
   1316c:	cmp	r0, r6
   13170:	beq	13184 <putchar_unlocked@plt+0x2314>
   13174:	bl	11d64 <putchar_unlocked@plt+0xef4>
   13178:	mov	r3, #256	; 0x100
   1317c:	str	r3, [r4, #8]
   13180:	str	r6, [r4, #12]
   13184:	ldr	r6, [pc, #52]	; 131c0 <putchar_unlocked@plt+0x2350>
   13188:	cmp	r5, r6
   1318c:	beq	1319c <putchar_unlocked@plt+0x232c>
   13190:	mov	r0, r5
   13194:	bl	11d64 <putchar_unlocked@plt+0xef4>
   13198:	str	r6, [r4]
   1319c:	mov	r3, #1
   131a0:	str	r3, [r4, #4]
   131a4:	pop	{r4, r5, r6, r7, r8, pc}
   131a8:	ldr	r0, [r7, r6, lsl #3]
   131ac:	add	r6, r6, #1
   131b0:	bl	11d64 <putchar_unlocked@plt+0xef4>
   131b4:	b	13158 <putchar_unlocked@plt+0x22e8>
   131b8:	andeq	r5, r2, r8, ror #1
   131bc:	andeq	r5, r2, ip, ror #2
   131c0:	strdeq	r5, [r2], -r0
   131c4:	ldr	r3, [pc, #4]	; 131d0 <putchar_unlocked@plt+0x2360>
   131c8:	mvn	r2, #0
   131cc:	b	12d44 <putchar_unlocked@plt+0x1ed4>
   131d0:	andeq	r5, r2, ip, ror #4
   131d4:	ldr	r3, [pc]	; 131dc <putchar_unlocked@plt+0x236c>
   131d8:	b	12d44 <putchar_unlocked@plt+0x1ed4>
   131dc:	andeq	r5, r2, ip, ror #4
   131e0:	mov	r1, r0
   131e4:	mov	r0, #0
   131e8:	b	131c4 <putchar_unlocked@plt+0x2354>
   131ec:	mov	r2, r1
   131f0:	mov	r1, r0
   131f4:	mov	r0, #0
   131f8:	b	131d4 <putchar_unlocked@plt+0x2364>
   131fc:	push	{r4, r5, lr}
   13200:	sub	sp, sp, #52	; 0x34
   13204:	mov	r5, r2
   13208:	mov	r4, r0
   1320c:	mov	r0, sp
   13210:	bl	11ef8 <putchar_unlocked@plt+0x1088>
   13214:	mov	r3, sp
   13218:	mvn	r2, #0
   1321c:	mov	r1, r5
   13220:	mov	r0, r4
   13224:	bl	12d44 <putchar_unlocked@plt+0x1ed4>
   13228:	add	sp, sp, #52	; 0x34
   1322c:	pop	{r4, r5, pc}
   13230:	push	{r4, r5, r6, lr}
   13234:	sub	sp, sp, #48	; 0x30
   13238:	mov	r5, r2
   1323c:	mov	r6, r3
   13240:	mov	r4, r0
   13244:	mov	r0, sp
   13248:	bl	11ef8 <putchar_unlocked@plt+0x1088>
   1324c:	mov	r3, sp
   13250:	mov	r2, r6
   13254:	mov	r1, r5
   13258:	mov	r0, r4
   1325c:	bl	12d44 <putchar_unlocked@plt+0x1ed4>
   13260:	add	sp, sp, #48	; 0x30
   13264:	pop	{r4, r5, r6, pc}
   13268:	mov	r2, r1
   1326c:	mov	r1, r0
   13270:	mov	r0, #0
   13274:	b	131fc <putchar_unlocked@plt+0x238c>
   13278:	mov	r3, r2
   1327c:	mov	r2, r1
   13280:	mov	r1, r0
   13284:	mov	r0, #0
   13288:	b	13230 <putchar_unlocked@plt+0x23c0>
   1328c:	push	{r4, r5, r6, lr}
   13290:	mov	r4, r0
   13294:	mov	r5, r1
   13298:	mov	r6, r2
   1329c:	sub	sp, sp, #48	; 0x30
   132a0:	mov	ip, sp
   132a4:	ldr	lr, [pc, #64]	; 132ec <putchar_unlocked@plt+0x247c>
   132a8:	ldm	lr!, {r0, r1, r2, r3}
   132ac:	stmia	ip!, {r0, r1, r2, r3}
   132b0:	ldm	lr!, {r0, r1, r2, r3}
   132b4:	stmia	ip!, {r0, r1, r2, r3}
   132b8:	ldm	lr, {r0, r1, r2, r3}
   132bc:	stm	ip, {r0, r1, r2, r3}
   132c0:	mov	r1, r6
   132c4:	mov	r2, #1
   132c8:	mov	r0, sp
   132cc:	bl	12f50 <putchar_unlocked@plt+0x20e0>
   132d0:	mov	r3, sp
   132d4:	mov	r2, r5
   132d8:	mov	r1, r4
   132dc:	mov	r0, #0
   132e0:	bl	12d44 <putchar_unlocked@plt+0x1ed4>
   132e4:	add	sp, sp, #48	; 0x30
   132e8:	pop	{r4, r5, r6, pc}
   132ec:	andeq	r5, r2, ip, ror #4
   132f0:	mov	r2, r1
   132f4:	mvn	r1, #0
   132f8:	b	1328c <putchar_unlocked@plt+0x241c>
   132fc:	mov	r1, #58	; 0x3a
   13300:	b	132f0 <putchar_unlocked@plt+0x2480>
   13304:	mov	r2, #58	; 0x3a
   13308:	b	1328c <putchar_unlocked@plt+0x241c>
   1330c:	push	{r4, r5, lr}
   13310:	sub	sp, sp, #100	; 0x64
   13314:	mov	r4, r0
   13318:	mov	r0, sp
   1331c:	mov	r5, r2
   13320:	bl	11ef8 <putchar_unlocked@plt+0x1088>
   13324:	mov	ip, sp
   13328:	add	lr, sp, #48	; 0x30
   1332c:	ldm	ip!, {r0, r1, r2, r3}
   13330:	stmia	lr!, {r0, r1, r2, r3}
   13334:	ldm	ip!, {r0, r1, r2, r3}
   13338:	stmia	lr!, {r0, r1, r2, r3}
   1333c:	ldm	ip, {r0, r1, r2, r3}
   13340:	stm	lr, {r0, r1, r2, r3}
   13344:	mov	r2, #1
   13348:	mov	r1, #58	; 0x3a
   1334c:	add	r0, sp, #48	; 0x30
   13350:	bl	12f50 <putchar_unlocked@plt+0x20e0>
   13354:	add	r3, sp, #48	; 0x30
   13358:	mvn	r2, #0
   1335c:	mov	r1, r5
   13360:	mov	r0, r4
   13364:	bl	12d44 <putchar_unlocked@plt+0x1ed4>
   13368:	add	sp, sp, #100	; 0x64
   1336c:	pop	{r4, r5, pc}
   13370:	push	{r4, r5, r6, r7, lr}
   13374:	mov	r4, r0
   13378:	mov	r6, r1
   1337c:	mov	r7, r2
   13380:	mov	r5, r3
   13384:	sub	sp, sp, #52	; 0x34
   13388:	ldr	lr, [pc, #68]	; 133d4 <putchar_unlocked@plt+0x2564>
   1338c:	mov	ip, sp
   13390:	ldm	lr!, {r0, r1, r2, r3}
   13394:	stmia	ip!, {r0, r1, r2, r3}
   13398:	ldm	lr!, {r0, r1, r2, r3}
   1339c:	stmia	ip!, {r0, r1, r2, r3}
   133a0:	ldm	lr, {r0, r1, r2, r3}
   133a4:	stm	ip, {r0, r1, r2, r3}
   133a8:	mov	r2, r7
   133ac:	mov	r1, r6
   133b0:	mov	r0, sp
   133b4:	bl	12fac <putchar_unlocked@plt+0x213c>
   133b8:	ldr	r2, [sp, #72]	; 0x48
   133bc:	mov	r3, sp
   133c0:	mov	r1, r5
   133c4:	mov	r0, r4
   133c8:	bl	12d44 <putchar_unlocked@plt+0x1ed4>
   133cc:	add	sp, sp, #52	; 0x34
   133d0:	pop	{r4, r5, r6, r7, pc}
   133d4:	andeq	r5, r2, ip, ror #4
   133d8:	mvn	ip, #0
   133dc:	push	{r0, r1, r2, lr}
   133e0:	str	ip, [sp]
   133e4:	bl	13370 <putchar_unlocked@plt+0x2500>
   133e8:	add	sp, sp, #12
   133ec:	pop	{pc}		; (ldr pc, [sp], #4)
   133f0:	mov	r3, r2
   133f4:	mov	r2, r1
   133f8:	mov	r1, r0
   133fc:	mov	r0, #0
   13400:	b	133d8 <putchar_unlocked@plt+0x2568>
   13404:	push	{r0, r1, r2, lr}
   13408:	str	r3, [sp]
   1340c:	mov	r3, r2
   13410:	mov	r2, r1
   13414:	mov	r1, r0
   13418:	mov	r0, #0
   1341c:	bl	13370 <putchar_unlocked@plt+0x2500>
   13420:	add	sp, sp, #12
   13424:	pop	{pc}		; (ldr pc, [sp], #4)
   13428:	ldr	r3, [pc]	; 13430 <putchar_unlocked@plt+0x25c0>
   1342c:	b	12d44 <putchar_unlocked@plt+0x1ed4>
   13430:	strdeq	r5, [r2], -r8
   13434:	mov	r2, r1
   13438:	mov	r1, r0
   1343c:	mov	r0, #0
   13440:	b	13428 <putchar_unlocked@plt+0x25b8>
   13444:	mvn	r2, #0
   13448:	b	13428 <putchar_unlocked@plt+0x25b8>
   1344c:	mov	r1, r0
   13450:	mov	r0, #0
   13454:	b	13444 <putchar_unlocked@plt+0x25d4>
   13458:	push	{r4, r5, r6, lr}
   1345c:	cmp	r1, #0
   13460:	sub	sp, sp, #32
   13464:	mov	r5, r0
   13468:	ldr	r4, [sp, #48]	; 0x30
   1346c:	ldr	r6, [sp, #52]	; 0x34
   13470:	beq	13524 <putchar_unlocked@plt+0x26b4>
   13474:	strd	r2, [sp]
   13478:	mov	r3, r1
   1347c:	mov	r1, #1
   13480:	ldr	r2, [pc, #856]	; 137e0 <putchar_unlocked@plt+0x2970>
   13484:	bl	10de0 <__fprintf_chk@plt>
   13488:	mov	r2, #5
   1348c:	ldr	r1, [pc, #848]	; 137e4 <putchar_unlocked@plt+0x2974>
   13490:	mov	r0, #0
   13494:	bl	10ccc <dcgettext@plt>
   13498:	movw	r3, #2022	; 0x7e6
   1349c:	ldr	r2, [pc, #836]	; 137e8 <putchar_unlocked@plt+0x2978>
   134a0:	mov	r1, #1
   134a4:	str	r3, [sp]
   134a8:	mov	r3, r0
   134ac:	mov	r0, r5
   134b0:	bl	10de0 <__fprintf_chk@plt>
   134b4:	mov	r1, r5
   134b8:	mov	r0, #10
   134bc:	bl	10cb4 <fputc_unlocked@plt>
   134c0:	mov	r2, #5
   134c4:	ldr	r1, [pc, #800]	; 137ec <putchar_unlocked@plt+0x297c>
   134c8:	mov	r0, #0
   134cc:	bl	10ccc <dcgettext@plt>
   134d0:	mov	r2, r0
   134d4:	mov	r1, #1
   134d8:	ldr	r3, [pc, #784]	; 137f0 <putchar_unlocked@plt+0x2980>
   134dc:	mov	r0, r5
   134e0:	bl	10de0 <__fprintf_chk@plt>
   134e4:	mov	r1, r5
   134e8:	mov	r0, #10
   134ec:	bl	10cb4 <fputc_unlocked@plt>
   134f0:	cmp	r6, #9
   134f4:	ldrls	pc, [pc, r6, lsl #2]
   134f8:	b	137d4 <putchar_unlocked@plt+0x2964>
   134fc:	andeq	r3, r1, r4, lsl r6
   13500:	andeq	r3, r1, ip, lsr r5
   13504:	andeq	r3, r1, r8, ror #10
   13508:	muleq	r1, ip, r5
   1350c:	ldrdeq	r3, [r1], -r8
   13510:	andeq	r3, r1, ip, lsl r6
   13514:	andeq	r3, r1, r4, ror #12
   13518:			; <UNDEFINED> instruction: 0x000136b4
   1351c:	andeq	r3, r1, ip, lsl #14
   13520:	andeq	r3, r1, ip, ror #14
   13524:	mov	r1, #1
   13528:	str	r3, [sp]
   1352c:	mov	r3, r2
   13530:	ldr	r2, [pc, #700]	; 137f4 <putchar_unlocked@plt+0x2984>
   13534:	bl	10de0 <__fprintf_chk@plt>
   13538:	b	13488 <putchar_unlocked@plt+0x2618>
   1353c:	mov	r2, #5
   13540:	ldr	r1, [pc, #688]	; 137f8 <putchar_unlocked@plt+0x2988>
   13544:	mov	r0, #0
   13548:	bl	10ccc <dcgettext@plt>
   1354c:	ldr	r3, [r4]
   13550:	mov	r2, r0
   13554:	mov	r1, #1
   13558:	mov	r0, r5
   1355c:	add	sp, sp, #32
   13560:	pop	{r4, r5, r6, lr}
   13564:	b	10de0 <__fprintf_chk@plt>
   13568:	mov	r2, #5
   1356c:	ldr	r1, [pc, #648]	; 137fc <putchar_unlocked@plt+0x298c>
   13570:	mov	r0, #0
   13574:	bl	10ccc <dcgettext@plt>
   13578:	ldr	r3, [r4, #4]
   1357c:	mov	r2, r0
   13580:	mov	r1, #1
   13584:	mov	r0, r5
   13588:	str	r3, [sp, #48]	; 0x30
   1358c:	ldr	r3, [r4]
   13590:	add	sp, sp, #32
   13594:	pop	{r4, r5, r6, lr}
   13598:	b	10de0 <__fprintf_chk@plt>
   1359c:	mov	r2, #5
   135a0:	ldr	r1, [pc, #600]	; 13800 <putchar_unlocked@plt+0x2990>
   135a4:	mov	r0, #0
   135a8:	bl	10ccc <dcgettext@plt>
   135ac:	ldr	r3, [r4, #8]
   135b0:	mov	r2, r0
   135b4:	mov	r1, #1
   135b8:	mov	r0, r5
   135bc:	str	r3, [sp, #52]	; 0x34
   135c0:	ldr	r3, [r4, #4]
   135c4:	str	r3, [sp, #48]	; 0x30
   135c8:	ldr	r3, [r4]
   135cc:	add	sp, sp, #32
   135d0:	pop	{r4, r5, r6, lr}
   135d4:	b	10de0 <__fprintf_chk@plt>
   135d8:	mov	r2, #5
   135dc:	ldr	r1, [pc, #544]	; 13804 <putchar_unlocked@plt+0x2994>
   135e0:	mov	r0, #0
   135e4:	bl	10ccc <dcgettext@plt>
   135e8:	ldr	r3, [r4, #12]
   135ec:	mov	r2, r0
   135f0:	mov	r1, #1
   135f4:	mov	r0, r5
   135f8:	str	r3, [sp, #8]
   135fc:	ldr	r3, [r4, #8]
   13600:	str	r3, [sp, #4]
   13604:	ldr	r3, [r4, #4]
   13608:	str	r3, [sp]
   1360c:	ldr	r3, [r4]
   13610:	bl	10de0 <__fprintf_chk@plt>
   13614:	add	sp, sp, #32
   13618:	pop	{r4, r5, r6, pc}
   1361c:	mov	r2, #5
   13620:	ldr	r1, [pc, #480]	; 13808 <putchar_unlocked@plt+0x2998>
   13624:	mov	r0, #0
   13628:	bl	10ccc <dcgettext@plt>
   1362c:	ldr	r3, [r4, #16]
   13630:	mov	r2, r0
   13634:	mov	r1, #1
   13638:	mov	r0, r5
   1363c:	str	r3, [sp, #12]
   13640:	ldr	r3, [r4, #12]
   13644:	str	r3, [sp, #8]
   13648:	ldr	r3, [r4, #8]
   1364c:	str	r3, [sp, #4]
   13650:	ldr	r3, [r4, #4]
   13654:	str	r3, [sp]
   13658:	ldr	r3, [r4]
   1365c:	bl	10de0 <__fprintf_chk@plt>
   13660:	b	13614 <putchar_unlocked@plt+0x27a4>
   13664:	mov	r2, #5
   13668:	ldr	r1, [pc, #412]	; 1380c <putchar_unlocked@plt+0x299c>
   1366c:	mov	r0, #0
   13670:	bl	10ccc <dcgettext@plt>
   13674:	ldr	r3, [r4, #20]
   13678:	mov	r2, r0
   1367c:	mov	r1, #1
   13680:	mov	r0, r5
   13684:	str	r3, [sp, #16]
   13688:	ldr	r3, [r4, #16]
   1368c:	str	r3, [sp, #12]
   13690:	ldr	r3, [r4, #12]
   13694:	str	r3, [sp, #8]
   13698:	ldr	r3, [r4, #8]
   1369c:	str	r3, [sp, #4]
   136a0:	ldr	r3, [r4, #4]
   136a4:	str	r3, [sp]
   136a8:	ldr	r3, [r4]
   136ac:	bl	10de0 <__fprintf_chk@plt>
   136b0:	b	13614 <putchar_unlocked@plt+0x27a4>
   136b4:	mov	r2, #5
   136b8:	ldr	r1, [pc, #336]	; 13810 <putchar_unlocked@plt+0x29a0>
   136bc:	mov	r0, #0
   136c0:	bl	10ccc <dcgettext@plt>
   136c4:	ldr	r3, [r4, #24]
   136c8:	mov	r2, r0
   136cc:	mov	r1, #1
   136d0:	mov	r0, r5
   136d4:	str	r3, [sp, #20]
   136d8:	ldr	r3, [r4, #20]
   136dc:	str	r3, [sp, #16]
   136e0:	ldr	r3, [r4, #16]
   136e4:	str	r3, [sp, #12]
   136e8:	ldr	r3, [r4, #12]
   136ec:	str	r3, [sp, #8]
   136f0:	ldr	r3, [r4, #8]
   136f4:	str	r3, [sp, #4]
   136f8:	ldr	r3, [r4, #4]
   136fc:	str	r3, [sp]
   13700:	ldr	r3, [r4]
   13704:	bl	10de0 <__fprintf_chk@plt>
   13708:	b	13614 <putchar_unlocked@plt+0x27a4>
   1370c:	mov	r2, #5
   13710:	ldr	r1, [pc, #252]	; 13814 <putchar_unlocked@plt+0x29a4>
   13714:	mov	r0, #0
   13718:	bl	10ccc <dcgettext@plt>
   1371c:	ldr	r3, [r4, #28]
   13720:	mov	r2, r0
   13724:	mov	r1, #1
   13728:	mov	r0, r5
   1372c:	str	r3, [sp, #24]
   13730:	ldr	r3, [r4, #24]
   13734:	str	r3, [sp, #20]
   13738:	ldr	r3, [r4, #20]
   1373c:	str	r3, [sp, #16]
   13740:	ldr	r3, [r4, #16]
   13744:	str	r3, [sp, #12]
   13748:	ldr	r3, [r4, #12]
   1374c:	str	r3, [sp, #8]
   13750:	ldr	r3, [r4, #8]
   13754:	str	r3, [sp, #4]
   13758:	ldr	r3, [r4, #4]
   1375c:	str	r3, [sp]
   13760:	ldr	r3, [r4]
   13764:	bl	10de0 <__fprintf_chk@plt>
   13768:	b	13614 <putchar_unlocked@plt+0x27a4>
   1376c:	ldr	r1, [pc, #164]	; 13818 <putchar_unlocked@plt+0x29a8>
   13770:	mov	r2, #5
   13774:	mov	r0, #0
   13778:	bl	10ccc <dcgettext@plt>
   1377c:	ldr	r3, [r4, #32]
   13780:	mov	r2, r0
   13784:	mov	r1, #1
   13788:	mov	r0, r5
   1378c:	str	r3, [sp, #28]
   13790:	ldr	r3, [r4, #28]
   13794:	str	r3, [sp, #24]
   13798:	ldr	r3, [r4, #24]
   1379c:	str	r3, [sp, #20]
   137a0:	ldr	r3, [r4, #20]
   137a4:	str	r3, [sp, #16]
   137a8:	ldr	r3, [r4, #16]
   137ac:	str	r3, [sp, #12]
   137b0:	ldr	r3, [r4, #12]
   137b4:	str	r3, [sp, #8]
   137b8:	ldr	r3, [r4, #8]
   137bc:	str	r3, [sp, #4]
   137c0:	ldr	r3, [r4, #4]
   137c4:	str	r3, [sp]
   137c8:	ldr	r3, [r4]
   137cc:	bl	10de0 <__fprintf_chk@plt>
   137d0:	b	13614 <putchar_unlocked@plt+0x27a4>
   137d4:	mov	r2, #5
   137d8:	ldr	r1, [pc, #60]	; 1381c <putchar_unlocked@plt+0x29ac>
   137dc:	b	13774 <putchar_unlocked@plt+0x2904>
   137e0:	strdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   137e4:	andeq	r4, r1, r2, lsl r6
   137e8:	andeq	r4, r1, r0, ror #17
   137ec:	andeq	r4, r1, r6, lsl r6
   137f0:	andeq	r4, r1, r1, asr #13
   137f4:	andeq	r4, r1, fp, lsl #12
   137f8:	andeq	r4, r1, r3, ror #13
   137fc:	strdeq	r4, [r1], -r3
   13800:	andeq	r4, r1, sl, lsl #14
   13804:	andeq	r4, r1, r6, lsr #14
   13808:	andeq	r4, r1, r6, asr #14
   1380c:	andeq	r4, r1, sl, ror #14
   13810:	muleq	r1, r2, r7
   13814:			; <UNDEFINED> instruction: 0x000147be
   13818:	andeq	r4, r1, lr, ror #15
   1381c:	andeq	r4, r1, r2, lsr #16
   13820:	push	{r0, r1, r4, lr}
   13824:	mov	ip, #0
   13828:	ldr	lr, [sp, #16]
   1382c:	ldr	r4, [lr, ip, lsl #2]
   13830:	cmp	r4, #0
   13834:	bne	1384c <putchar_unlocked@plt+0x29dc>
   13838:	str	lr, [sp]
   1383c:	str	ip, [sp, #4]
   13840:	bl	13458 <putchar_unlocked@plt+0x25e8>
   13844:	add	sp, sp, #8
   13848:	pop	{r4, pc}
   1384c:	add	ip, ip, #1
   13850:	b	1382c <putchar_unlocked@plt+0x29bc>
   13854:	push	{r4, r5, r6, lr}
   13858:	sub	sp, sp, #48	; 0x30
   1385c:	mov	ip, #0
   13860:	add	lr, sp, #8
   13864:	mov	r5, lr
   13868:	ldr	r6, [sp, #64]	; 0x40
   1386c:	ldr	r4, [r6, ip, lsl #2]
   13870:	cmp	r4, #0
   13874:	str	r4, [lr], #4
   13878:	beq	13888 <putchar_unlocked@plt+0x2a18>
   1387c:	add	ip, ip, #1
   13880:	cmp	ip, #10
   13884:	bne	1386c <putchar_unlocked@plt+0x29fc>
   13888:	stm	sp, {r5, ip}
   1388c:	bl	13458 <putchar_unlocked@plt+0x25e8>
   13890:	add	sp, sp, #48	; 0x30
   13894:	pop	{r4, r5, r6, pc}
   13898:	push	{r3}		; (str r3, [sp, #-4]!)
   1389c:	push	{r0, r1, r2, r3, lr}
   138a0:	add	r3, sp, #24
   138a4:	str	r3, [sp]
   138a8:	str	r3, [sp, #12]
   138ac:	ldr	r3, [sp, #20]
   138b0:	bl	13854 <putchar_unlocked@plt+0x29e4>
   138b4:	add	sp, sp, #16
   138b8:	pop	{lr}		; (ldr lr, [sp], #4)
   138bc:	add	sp, sp, #4
   138c0:	bx	lr
   138c4:	ldr	r3, [pc, #116]	; 13940 <putchar_unlocked@plt+0x2ad0>
   138c8:	mov	r0, #10
   138cc:	push	{r4, lr}
   138d0:	ldr	r1, [r3]
   138d4:	bl	10cb4 <fputc_unlocked@plt>
   138d8:	mov	r2, #5
   138dc:	ldr	r1, [pc, #96]	; 13944 <putchar_unlocked@plt+0x2ad4>
   138e0:	mov	r0, #0
   138e4:	bl	10ccc <dcgettext@plt>
   138e8:	mov	r1, r0
   138ec:	ldr	r2, [pc, #84]	; 13948 <putchar_unlocked@plt+0x2ad8>
   138f0:	mov	r0, #1
   138f4:	bl	10dc8 <__printf_chk@plt>
   138f8:	mov	r2, #5
   138fc:	ldr	r1, [pc, #72]	; 1394c <putchar_unlocked@plt+0x2adc>
   13900:	mov	r0, #0
   13904:	bl	10ccc <dcgettext@plt>
   13908:	mov	r1, r0
   1390c:	ldr	r3, [pc, #60]	; 13950 <putchar_unlocked@plt+0x2ae0>
   13910:	mov	r0, #1
   13914:	ldr	r2, [pc, #56]	; 13954 <putchar_unlocked@plt+0x2ae4>
   13918:	bl	10dc8 <__printf_chk@plt>
   1391c:	mov	r2, #5
   13920:	ldr	r1, [pc, #48]	; 13958 <putchar_unlocked@plt+0x2ae8>
   13924:	mov	r0, #0
   13928:	bl	10ccc <dcgettext@plt>
   1392c:	mov	r1, r0
   13930:	ldr	r2, [pc, #36]	; 1395c <putchar_unlocked@plt+0x2aec>
   13934:	mov	r0, #1
   13938:	pop	{r4, lr}
   1393c:	b	10dc8 <__printf_chk@plt>
   13940:	andeq	r5, r2, r4, asr #2
   13944:	andeq	r4, r1, lr, asr r8
   13948:	andeq	r4, r1, r2, ror r8
   1394c:	andeq	r4, r1, r8, lsl #17
   13950:	andeq	r4, r1, sl, lsl r3
   13954:	andeq	r4, r1, r2, asr #6
   13958:	muleq	r1, ip, r8
   1395c:	andeq	r4, r1, r3, asr #17
   13960:	push	{r4, lr}
   13964:	bl	13cac <putchar_unlocked@plt+0x2e3c>
   13968:	cmp	r0, #0
   1396c:	popne	{r4, pc}
   13970:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13974:	push	{r4, lr}
   13978:	bl	13cac <putchar_unlocked@plt+0x2e3c>
   1397c:	cmp	r0, #0
   13980:	popne	{r4, pc}
   13984:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13988:	b	13960 <putchar_unlocked@plt+0x2af0>
   1398c:	push	{r4, r5, r6, lr}
   13990:	mov	r5, r0
   13994:	mov	r4, r1
   13998:	bl	13cd8 <putchar_unlocked@plt+0x2e68>
   1399c:	cmp	r0, #0
   139a0:	popne	{r4, r5, r6, pc}
   139a4:	adds	r4, r4, #0
   139a8:	movne	r4, #1
   139ac:	cmp	r5, #0
   139b0:	moveq	r4, #1
   139b4:	cmp	r4, #0
   139b8:	popeq	{r4, r5, r6, pc}
   139bc:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   139c0:	push	{r4, lr}
   139c4:	bl	13d90 <putchar_unlocked@plt+0x2f20>
   139c8:	cmp	r0, #0
   139cc:	popne	{r4, pc}
   139d0:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   139d4:	push	{r4, r5, r6, lr}
   139d8:	mov	r6, r0
   139dc:	mov	r5, r1
   139e0:	mov	r4, r2
   139e4:	bl	13e38 <putchar_unlocked@plt+0x2fc8>
   139e8:	cmp	r0, #0
   139ec:	popne	{r4, r5, r6, pc}
   139f0:	cmp	r6, #0
   139f4:	beq	13a04 <putchar_unlocked@plt+0x2b94>
   139f8:	cmp	r5, #0
   139fc:	cmpne	r4, #0
   13a00:	popeq	{r4, r5, r6, pc}
   13a04:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13a08:	b	139d4 <putchar_unlocked@plt+0x2b64>
   13a0c:	push	{r4, lr}
   13a10:	bl	13da0 <putchar_unlocked@plt+0x2f30>
   13a14:	cmp	r0, #0
   13a18:	popne	{r4, pc}
   13a1c:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13a20:	mov	r2, r1
   13a24:	mov	r1, r0
   13a28:	mov	r0, #0
   13a2c:	b	139d4 <putchar_unlocked@plt+0x2b64>
   13a30:	mov	r2, r1
   13a34:	mov	r1, r0
   13a38:	mov	r0, #0
   13a3c:	b	13a0c <putchar_unlocked@plt+0x2b9c>
   13a40:	cmp	r0, #0
   13a44:	push	{r4, r5, r6, lr}
   13a48:	mov	r5, r1
   13a4c:	ldr	r4, [r1]
   13a50:	bne	13a7c <putchar_unlocked@plt+0x2c0c>
   13a54:	cmp	r4, #0
   13a58:	bne	13a6c <putchar_unlocked@plt+0x2bfc>
   13a5c:	mov	r4, #64	; 0x40
   13a60:	udiv	r4, r4, r2
   13a64:	cmp	r2, #64	; 0x40
   13a68:	addhi	r4, r4, #1
   13a6c:	mov	r1, r4
   13a70:	bl	139d4 <putchar_unlocked@plt+0x2b64>
   13a74:	str	r4, [r5]
   13a78:	pop	{r4, r5, r6, pc}
   13a7c:	lsr	r3, r4, #1
   13a80:	add	r3, r3, #1
   13a84:	adds	r4, r4, r3
   13a88:	bcc	13a6c <putchar_unlocked@plt+0x2bfc>
   13a8c:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13a90:	mov	r2, #1
   13a94:	b	13a40 <putchar_unlocked@plt+0x2bd0>
   13a98:	ldr	ip, [r1]
   13a9c:	push	{r4, r5, r6, r7, r8, lr}
   13aa0:	mov	r5, r1
   13aa4:	mvn	r8, r3
   13aa8:	lsr	r8, r8, #31
   13aac:	ldr	lr, [sp, #24]
   13ab0:	asr	r1, ip, #1
   13ab4:	adds	r4, ip, r1
   13ab8:	mvnvs	r4, #-2147483648	; 0x80000000
   13abc:	cmp	r3, r4
   13ac0:	movge	r1, #0
   13ac4:	andlt	r1, r8, #1
   13ac8:	cmp	r1, #0
   13acc:	movne	r4, r3
   13ad0:	smull	r6, r7, r4, lr
   13ad4:	cmp	r7, r6, asr #31
   13ad8:	bne	13af0 <putchar_unlocked@plt+0x2c80>
   13adc:	cmp	r6, #63	; 0x3f
   13ae0:	mov	r1, r6
   13ae4:	bgt	13b00 <putchar_unlocked@plt+0x2c90>
   13ae8:	mov	r1, #64	; 0x40
   13aec:	b	13af4 <putchar_unlocked@plt+0x2c84>
   13af0:	mvn	r1, #-2147483648	; 0x80000000
   13af4:	sdiv	r4, r1, lr
   13af8:	mls	r6, lr, r4, r1
   13afc:	sub	r1, r1, r6
   13b00:	cmp	r0, #0
   13b04:	sub	r6, r4, ip
   13b08:	streq	r0, [r5]
   13b0c:	cmp	r6, r2
   13b10:	bge	13b44 <putchar_unlocked@plt+0x2cd4>
   13b14:	adds	r4, ip, r2
   13b18:	bvs	13b40 <putchar_unlocked@plt+0x2cd0>
   13b1c:	cmp	r4, r3
   13b20:	movle	r3, #0
   13b24:	andgt	r3, r8, #1
   13b28:	cmp	r3, #0
   13b2c:	bne	13b40 <putchar_unlocked@plt+0x2cd0>
   13b30:	smull	r2, r3, r4, lr
   13b34:	cmp	r3, r2, asr #31
   13b38:	mov	r1, r2
   13b3c:	beq	13b44 <putchar_unlocked@plt+0x2cd4>
   13b40:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13b44:	bl	1398c <putchar_unlocked@plt+0x2b1c>
   13b48:	str	r4, [r5]
   13b4c:	pop	{r4, r5, r6, r7, r8, pc}
   13b50:	push	{r4, lr}
   13b54:	bl	13c58 <putchar_unlocked@plt+0x2de8>
   13b58:	cmp	r0, #0
   13b5c:	popne	{r4, pc}
   13b60:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13b64:	mov	r1, #1
   13b68:	b	13b50 <putchar_unlocked@plt+0x2ce0>
   13b6c:	push	{r4, lr}
   13b70:	bl	13c58 <putchar_unlocked@plt+0x2de8>
   13b74:	cmp	r0, #0
   13b78:	popne	{r4, pc}
   13b7c:	bl	13c18 <putchar_unlocked@plt+0x2da8>
   13b80:	mov	r1, #1
   13b84:	b	13b6c <putchar_unlocked@plt+0x2cfc>
   13b88:	push	{r4, r5, r6, lr}
   13b8c:	mov	r4, r1
   13b90:	mov	r5, r0
   13b94:	mov	r0, r1
   13b98:	bl	13960 <putchar_unlocked@plt+0x2af0>
   13b9c:	mov	r2, r4
   13ba0:	mov	r1, r5
   13ba4:	pop	{r4, r5, r6, lr}
   13ba8:	b	10c84 <memcpy@plt>
   13bac:	push	{r4, r5, r6, lr}
   13bb0:	mov	r4, r1
   13bb4:	mov	r5, r0
   13bb8:	mov	r0, r1
   13bbc:	bl	13974 <putchar_unlocked@plt+0x2b04>
   13bc0:	mov	r2, r4
   13bc4:	mov	r1, r5
   13bc8:	pop	{r4, r5, r6, lr}
   13bcc:	b	10c84 <memcpy@plt>
   13bd0:	push	{r4, r5, r6, lr}
   13bd4:	mov	r5, r0
   13bd8:	add	r0, r1, #1
   13bdc:	mov	r4, r1
   13be0:	bl	13974 <putchar_unlocked@plt+0x2b04>
   13be4:	mov	r2, #0
   13be8:	mov	r1, r5
   13bec:	strb	r2, [r0, r4]
   13bf0:	mov	r2, r4
   13bf4:	pop	{r4, r5, r6, lr}
   13bf8:	b	10c84 <memcpy@plt>
   13bfc:	push	{r4, lr}
   13c00:	mov	r4, r0
   13c04:	bl	10d98 <strlen@plt>
   13c08:	add	r1, r0, #1
   13c0c:	mov	r0, r4
   13c10:	pop	{r4, lr}
   13c14:	b	13b88 <putchar_unlocked@plt+0x2d18>
   13c18:	ldr	r3, [pc, #44]	; 13c4c <putchar_unlocked@plt+0x2ddc>
   13c1c:	mov	r2, #5
   13c20:	mov	r0, #0
   13c24:	push	{r4, lr}
   13c28:	ldr	r1, [pc, #32]	; 13c50 <putchar_unlocked@plt+0x2de0>
   13c2c:	ldr	r4, [r3]
   13c30:	bl	10ccc <dcgettext@plt>
   13c34:	mov	r3, r0
   13c38:	ldr	r2, [pc, #20]	; 13c54 <putchar_unlocked@plt+0x2de4>
   13c3c:	mov	r1, #0
   13c40:	mov	r0, r4
   13c44:	bl	10d38 <error@plt>
   13c48:	bl	10e64 <abort@plt>
   13c4c:	andeq	r5, r2, r4, ror #1
   13c50:	andeq	r4, r1, pc, lsl #18
   13c54:	andeq	r4, r1, fp, asr r4
   13c58:	cmp	r1, #0
   13c5c:	cmpne	r0, #0
   13c60:	beq	13c98 <putchar_unlocked@plt+0x2e28>
   13c64:	push	{r4, r5, r6, lr}
   13c68:	umull	r4, r5, r0, r1
   13c6c:	adds	r3, r5, #0
   13c70:	movne	r3, #1
   13c74:	cmp	r4, #0
   13c78:	blt	13c84 <putchar_unlocked@plt+0x2e14>
   13c7c:	cmp	r3, #0
   13c80:	beq	13ca4 <putchar_unlocked@plt+0x2e34>
   13c84:	bl	10da4 <__errno_location@plt>
   13c88:	mov	r3, #12
   13c8c:	str	r3, [r0]
   13c90:	mov	r0, #0
   13c94:	pop	{r4, r5, r6, pc}
   13c98:	mov	r1, #1
   13c9c:	mov	r0, r1
   13ca0:	b	10c30 <calloc@plt>
   13ca4:	pop	{r4, r5, r6, lr}
   13ca8:	b	13ca0 <putchar_unlocked@plt+0x2e30>
   13cac:	cmp	r0, #0
   13cb0:	beq	13cd0 <putchar_unlocked@plt+0x2e60>
   13cb4:	bge	13cd4 <putchar_unlocked@plt+0x2e64>
   13cb8:	push	{r4, lr}
   13cbc:	bl	10da4 <__errno_location@plt>
   13cc0:	mov	r3, #12
   13cc4:	str	r3, [r0]
   13cc8:	mov	r0, #0
   13ccc:	pop	{r4, pc}
   13cd0:	mov	r0, #1
   13cd4:	b	10d44 <malloc@plt>
   13cd8:	cmp	r0, #0
   13cdc:	bne	13ce8 <putchar_unlocked@plt+0x2e78>
   13ce0:	mov	r0, r1
   13ce4:	b	13cac <putchar_unlocked@plt+0x2e3c>
   13ce8:	cmp	r1, #0
   13cec:	push	{r4, lr}
   13cf0:	bne	13d00 <putchar_unlocked@plt+0x2e90>
   13cf4:	bl	11d64 <putchar_unlocked@plt+0xef4>
   13cf8:	mov	r0, #0
   13cfc:	pop	{r4, pc}
   13d00:	blt	13d0c <putchar_unlocked@plt+0x2e9c>
   13d04:	pop	{r4, lr}
   13d08:	b	10cd8 <realloc@plt>
   13d0c:	bl	10da4 <__errno_location@plt>
   13d10:	mov	r3, #12
   13d14:	str	r3, [r0]
   13d18:	b	13cf8 <putchar_unlocked@plt+0x2e88>
   13d1c:	push	{r4, r5, r6, lr}
   13d20:	mov	r4, r0
   13d24:	bl	10d14 <__fpending@plt>
   13d28:	mov	r5, r0
   13d2c:	mov	r0, r4
   13d30:	bl	10d20 <ferror_unlocked@plt>
   13d34:	mov	r6, r0
   13d38:	mov	r0, r4
   13d3c:	bl	11c6c <putchar_unlocked@plt+0xdfc>
   13d40:	cmp	r6, #0
   13d44:	mov	r4, r0
   13d48:	bne	13d74 <putchar_unlocked@plt+0x2f04>
   13d4c:	cmp	r0, #0
   13d50:	beq	13d6c <putchar_unlocked@plt+0x2efc>
   13d54:	cmp	r5, #0
   13d58:	bne	13d84 <putchar_unlocked@plt+0x2f14>
   13d5c:	bl	10da4 <__errno_location@plt>
   13d60:	ldr	r4, [r0]
   13d64:	subs	r4, r4, #9
   13d68:	mvnne	r4, #0
   13d6c:	mov	r0, r4
   13d70:	pop	{r4, r5, r6, pc}
   13d74:	cmp	r0, #0
   13d78:	bne	13d84 <putchar_unlocked@plt+0x2f14>
   13d7c:	bl	10da4 <__errno_location@plt>
   13d80:	str	r4, [r0]
   13d84:	mvn	r4, #0
   13d88:	b	13d6c <putchar_unlocked@plt+0x2efc>
   13d8c:	b	13cac <putchar_unlocked@plt+0x2e3c>
   13d90:	cmp	r1, #0
   13d94:	orreq	r1, r1, #1
   13d98:	b	13cd8 <putchar_unlocked@plt+0x2e68>
   13d9c:	b	13c58 <putchar_unlocked@plt+0x2de8>
   13da0:	cmp	r2, #0
   13da4:	cmpne	r1, #0
   13da8:	moveq	r2, #1
   13dac:	moveq	r1, r2
   13db0:	b	13e38 <putchar_unlocked@plt+0x2fc8>
   13db4:	push	{r4, lr}
   13db8:	mov	r0, #14
   13dbc:	bl	10e1c <nl_langinfo@plt>
   13dc0:	cmp	r0, #0
   13dc4:	beq	13ddc <putchar_unlocked@plt+0x2f6c>
   13dc8:	ldrb	r2, [r0]
   13dcc:	ldr	r3, [pc, #16]	; 13de4 <putchar_unlocked@plt+0x2f74>
   13dd0:	cmp	r2, #0
   13dd4:	moveq	r0, r3
   13dd8:	pop	{r4, pc}
   13ddc:	ldr	r0, [pc]	; 13de4 <putchar_unlocked@plt+0x2f74>
   13de0:	pop	{r4, pc}
   13de4:	andeq	r4, r1, r0, lsr #18
   13de8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13dec:	subs	r5, r0, #0
   13df0:	mov	r7, r2
   13df4:	addeq	r5, sp, #4
   13df8:	mov	r6, r1
   13dfc:	mov	r0, r5
   13e00:	bl	10d2c <mbrtowc@plt>
   13e04:	cmp	r7, #0
   13e08:	cmnne	r0, #3
   13e0c:	mov	r4, r0
   13e10:	bls	13e2c <putchar_unlocked@plt+0x2fbc>
   13e14:	mov	r0, #0
   13e18:	bl	13e64 <putchar_unlocked@plt+0x2ff4>
   13e1c:	cmp	r0, #0
   13e20:	ldrbeq	r3, [r6]
   13e24:	moveq	r4, #1
   13e28:	streq	r3, [r5]
   13e2c:	mov	r0, r4
   13e30:	add	sp, sp, #12
   13e34:	pop	{r4, r5, r6, r7, pc}
   13e38:	umull	r2, r3, r1, r2
   13e3c:	cmp	r3, #0
   13e40:	bne	13e4c <putchar_unlocked@plt+0x2fdc>
   13e44:	mov	r1, r2
   13e48:	b	13cd8 <putchar_unlocked@plt+0x2e68>
   13e4c:	push	{r4, lr}
   13e50:	bl	10da4 <__errno_location@plt>
   13e54:	mov	r3, #12
   13e58:	str	r3, [r0]
   13e5c:	mov	r0, #0
   13e60:	pop	{r4, pc}
   13e64:	push	{lr}		; (str lr, [sp, #-4]!)
   13e68:	sub	sp, sp, #268	; 0x10c
   13e6c:	movw	r2, #257	; 0x101
   13e70:	add	r1, sp, #4
   13e74:	bl	13ec0 <putchar_unlocked@plt+0x3050>
   13e78:	cmp	r0, #0
   13e7c:	movne	r0, #0
   13e80:	bne	13eb0 <putchar_unlocked@plt+0x3040>
   13e84:	ldr	r1, [pc, #44]	; 13eb8 <putchar_unlocked@plt+0x3048>
   13e88:	add	r0, sp, #4
   13e8c:	bl	10c48 <strcmp@plt>
   13e90:	cmp	r0, #0
   13e94:	beq	13eac <putchar_unlocked@plt+0x303c>
   13e98:	ldr	r1, [pc, #28]	; 13ebc <putchar_unlocked@plt+0x304c>
   13e9c:	add	r0, sp, #4
   13ea0:	bl	10c48 <strcmp@plt>
   13ea4:	adds	r0, r0, #0
   13ea8:	movne	r0, #1
   13eac:	and	r0, r0, #1
   13eb0:	add	sp, sp, #268	; 0x10c
   13eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   13eb8:	andeq	r4, r1, r6, lsr #18
   13ebc:	andeq	r4, r1, r8, lsr #18
   13ec0:	push	{r4, r5, r6, lr}
   13ec4:	mov	r5, r1
   13ec8:	mov	r1, #0
   13ecc:	mov	r4, r2
   13ed0:	bl	10e04 <setlocale@plt>
   13ed4:	subs	r6, r0, #0
   13ed8:	bne	13eec <putchar_unlocked@plt+0x307c>
   13edc:	cmp	r4, #0
   13ee0:	mov	r0, #22
   13ee4:	strbne	r6, [r5]
   13ee8:	pop	{r4, r5, r6, pc}
   13eec:	bl	10d98 <strlen@plt>
   13ef0:	cmp	r4, r0
   13ef4:	bls	13f10 <putchar_unlocked@plt+0x30a0>
   13ef8:	add	r2, r0, #1
   13efc:	mov	r1, r6
   13f00:	mov	r0, r5
   13f04:	bl	10c84 <memcpy@plt>
   13f08:	mov	r0, #0
   13f0c:	pop	{r4, r5, r6, pc}
   13f10:	cmp	r4, #0
   13f14:	beq	13f34 <putchar_unlocked@plt+0x30c4>
   13f18:	sub	r4, r4, #1
   13f1c:	mov	r1, r6
   13f20:	mov	r2, r4
   13f24:	mov	r0, r5
   13f28:	bl	10c84 <memcpy@plt>
   13f2c:	mov	r3, #0
   13f30:	strb	r3, [r5, r4]
   13f34:	mov	r0, #34	; 0x22
   13f38:	pop	{r4, r5, r6, pc}
   13f3c:	mov	r1, #0
   13f40:	b	10e04 <setlocale@plt>
   13f44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f48:	mov	r7, r0
   13f4c:	ldr	r6, [pc, #72]	; 13f9c <putchar_unlocked@plt+0x312c>
   13f50:	ldr	r5, [pc, #72]	; 13fa0 <putchar_unlocked@plt+0x3130>
   13f54:	add	r6, pc, r6
   13f58:	add	r5, pc, r5
   13f5c:	sub	r6, r6, r5
   13f60:	mov	r8, r1
   13f64:	mov	r9, r2
   13f68:	bl	10c10 <calloc@plt-0x20>
   13f6c:	asrs	r6, r6, #2
   13f70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f74:	mov	r4, #0
   13f78:	add	r4, r4, #1
   13f7c:	ldr	r3, [r5], #4
   13f80:	mov	r2, r9
   13f84:	mov	r1, r8
   13f88:	mov	r0, r7
   13f8c:	blx	r3
   13f90:	cmp	r6, r4
   13f94:	bne	13f78 <putchar_unlocked@plt+0x3108>
   13f98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f9c:			; <UNDEFINED> instruction: 0x00010fb8
   13fa0:			; <UNDEFINED> instruction: 0x00010fb0
   13fa4:	bx	lr
   13fa8:	ldr	r3, [pc, #12]	; 13fbc <putchar_unlocked@plt+0x314c>
   13fac:	mov	r1, #0
   13fb0:	add	r3, pc, r3
   13fb4:	ldr	r2, [r3]
   13fb8:	b	10db0 <__cxa_atexit@plt>
   13fbc:	andeq	r1, r1, r0, lsr #2

Disassembly of section .fini:

00013fc0 <.fini>:
   13fc0:	push	{r3, lr}
   13fc4:	pop	{r3, pc}
