
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000b64 <_init>:
 b64:	push	{r3, lr}
 b68:	bl	d70 <call_weak_fn>
 b6c:	pop	{r3, pc}

Disassembly of section .plt:

00000b70 <.plt>:
 b70:	push	{lr}		; (str lr, [sp, #-4]!)
 b74:	ldr	lr, [pc, #4]	; b80 <.plt+0x10>
 b78:	add	lr, pc, lr
 b7c:	ldr	pc, [lr, #8]!
 b80:	.word	0x00012480

00000b84 <propagate_generic@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #73728	; 0x12000
 b8c:	ldr	pc, [ip, #1152]!	; 0x480

00000b90 <make_conf@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #73728	; 0x12000
 b98:	ldr	pc, [ip, #1144]!	; 0x478

00000b9c <rb_current_time@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #73728	; 0x12000
 ba4:	ldr	pc, [ip, #1136]!	; 0x470

00000ba8 <add_to_resv_hash@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #73728	; 0x12000
 bb0:	ldr	pc, [ip, #1128]!	; 0x468

00000bb4 <sendto_match_servs@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #73728	; 0x12000
 bbc:	ldr	pc, [ip, #1120]!	; 0x460

00000bc0 <__cxa_finalize@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #73728	; 0x12000
 bc8:	ldr	pc, [ip, #1112]!	; 0x458

00000bcc <sendto_one@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #73728	; 0x12000
 bd4:	ldr	pc, [ip, #1104]!	; 0x450

00000bd8 <replace_old_ban@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #73728	; 0x12000
 be0:	ldr	pc, [ip, #1096]!	; 0x448

00000be4 <rb_outofmemory@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #73728	; 0x12000
 bec:	ldr	pc, [ip, #1088]!	; 0x440

00000bf0 <resv_nick_fnc@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #73728	; 0x12000
 bf8:	ldr	pc, [ip, #1080]!	; 0x438

00000bfc <operhash_delete@plt>:
 bfc:	add	ip, pc, #0, 12
 c00:	add	ip, ip, #73728	; 0x12000
 c04:	ldr	pc, [ip, #1072]!	; 0x430

00000c08 <sendto_realops_snomask@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #73728	; 0x12000
 c10:	ldr	pc, [ip, #1064]!	; 0x428

00000c14 <bandb_add@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #73728	; 0x12000
 c1c:	ldr	pc, [ip, #1056]!	; 0x420

00000c20 <resv_chan_forcepart@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #73728	; 0x12000
 c28:	ldr	pc, [ip, #1048]!	; 0x418

00000c2c <deactivate_conf@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #73728	; 0x12000
 c34:	ldr	pc, [ip, #1040]!	; 0x410

00000c38 <get_oper_name@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #73728	; 0x12000
 c40:	ldr	pc, [ip, #1032]!	; 0x408

00000c44 <rb_free_rb_dlink_node@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #73728	; 0x12000
 c4c:	ldr	pc, [ip, #1024]!	; 0x400

00000c50 <cluster_generic@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #73728	; 0x12000
 c58:	ldr	pc, [ip, #1016]!	; 0x3f8

00000c5c <operhash_add@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #73728	; 0x12000
 c64:	ldr	pc, [ip, #1008]!	; 0x3f0

00000c68 <strcpy@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #73728	; 0x12000
 c70:	ldr	pc, [ip, #1000]!	; 0x3e8

00000c74 <sendto_server@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #992]!	; 0x3e0

00000c80 <malloc@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #984]!	; 0x3d8

00000c8c <__gmon_start__@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #976]!	; 0x3d0

00000c98 <free_conf@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #968]!	; 0x3c8

00000ca4 <rb_make_rb_dlink_node@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #960]!	; 0x3c0

00000cb0 <strlen@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #952]!	; 0x3b8

00000cbc <ilog@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #944]!	; 0x3b0

00000cc8 <match@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #936]!	; 0x3a8

00000cd4 <del_from_resv_hash@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #928]!	; 0x3a0

00000ce0 <find_nick_resv_mask@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #920]!	; 0x398

00000cec <valid_temp_time@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #912]!	; 0x390

00000cf8 <sendto_one_notice@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #904]!	; 0x388

00000d04 <bandb_del@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #896]!	; 0x380

00000d10 <atoi@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #888]!	; 0x378

00000d1c <valid_wild_card_simple@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #880]!	; 0x370

00000d28 <find_shared_conf@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #872]!	; 0x368

00000d34 <privilegeset_in_set@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #864]!	; 0x360

00000d40 <hash_find_resv@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #856]!	; 0x358

00000d4c <irccmp@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #848]!	; 0x350

00000d58 <clean_resv_nick@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #840]!	; 0x348

00000d64 <__assert_fail@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #832]!	; 0x340

Disassembly of section .text:

00000d70 <call_weak_fn>:
     d70:	ldr	r3, [pc, #20]	; d8c <call_weak_fn+0x1c>
     d74:	ldr	r2, [pc, #20]	; d90 <call_weak_fn+0x20>
     d78:	add	r3, pc, r3
     d7c:	ldr	r2, [r3, r2]
     d80:	cmp	r2, #0
     d84:	bxeq	lr
     d88:	b	c8c <__gmon_start__@plt>
     d8c:	.word	0x00012280
     d90:	.word	0x000000cc

00000d94 <deregister_tm_clones>:
     d94:	ldr	r0, [pc, #44]	; dc8 <deregister_tm_clones+0x34>
     d98:	ldr	r3, [pc, #44]	; dcc <deregister_tm_clones+0x38>
     d9c:	add	r0, pc, r0
     da0:	add	r3, pc, r3
     da4:	cmp	r3, r0
     da8:	ldr	r3, [pc, #32]	; dd0 <deregister_tm_clones+0x3c>
     dac:	add	r3, pc, r3
     db0:	bxeq	lr
     db4:	ldr	r2, [pc, #24]	; dd4 <deregister_tm_clones+0x40>
     db8:	ldr	r3, [r3, r2]
     dbc:	cmp	r3, #0
     dc0:	bxeq	lr
     dc4:	bx	r3
     dc8:	.word	0x00012404
     dcc:	.word	0x00012400
     dd0:	.word	0x0001224c
     dd4:	.word	0x000000b4

00000dd8 <register_tm_clones>:
     dd8:	ldr	r0, [pc, #56]	; e18 <register_tm_clones+0x40>
     ddc:	ldr	r3, [pc, #56]	; e1c <register_tm_clones+0x44>
     de0:	add	r0, pc, r0
     de4:	add	r3, pc, r3
     de8:	sub	r1, r3, r0
     dec:	ldr	r3, [pc, #44]	; e20 <register_tm_clones+0x48>
     df0:	asr	r1, r1, #2
     df4:	add	r3, pc, r3
     df8:	add	r1, r1, r1, lsr #31
     dfc:	asrs	r1, r1, #1
     e00:	bxeq	lr
     e04:	ldr	r2, [pc, #24]	; e24 <register_tm_clones+0x4c>
     e08:	ldr	r3, [r3, r2]
     e0c:	cmp	r3, #0
     e10:	bxeq	lr
     e14:	bx	r3
     e18:	.word	0x000123c0
     e1c:	.word	0x000123bc
     e20:	.word	0x00012204
     e24:	.word	0x000000d8

00000e28 <__do_global_dtors_aux>:
     e28:	ldr	r3, [pc, #76]	; e7c <__do_global_dtors_aux+0x54>
     e2c:	ldr	r2, [pc, #76]	; e80 <__do_global_dtors_aux+0x58>
     e30:	add	r3, pc, r3
     e34:	add	r2, pc, r2
     e38:	ldrb	r3, [r3]
     e3c:	cmp	r3, #0
     e40:	bxne	lr
     e44:	ldr	r3, [pc, #56]	; e84 <__do_global_dtors_aux+0x5c>
     e48:	push	{r4, lr}
     e4c:	ldr	r3, [r2, r3]
     e50:	cmp	r3, #0
     e54:	beq	e64 <__do_global_dtors_aux+0x3c>
     e58:	ldr	r3, [pc, #40]	; e88 <__do_global_dtors_aux+0x60>
     e5c:	ldr	r0, [pc, r3]
     e60:	bl	bc0 <__cxa_finalize@plt>
     e64:	bl	d94 <deregister_tm_clones>
     e68:	ldr	r3, [pc, #28]	; e8c <__do_global_dtors_aux+0x64>
     e6c:	mov	r2, #1
     e70:	add	r3, pc, r3
     e74:	strb	r2, [r3]
     e78:	pop	{r4, pc}
     e7c:	.word	0x00012370
     e80:	.word	0x000121c4
     e84:	.word	0x000000b0
     e88:	.word	0x00012284
     e8c:	.word	0x00012330

00000e90 <frame_dummy>:
     e90:	b	dd8 <register_tm_clones>

00000e94 <rb_strdup>:
     e94:	push	{r4, r5, r6, lr}
     e98:	mov	r5, r0
     e9c:	bl	cb0 <strlen@plt>
     ea0:	add	r0, r0, #1
     ea4:	bl	c80 <malloc@plt>
     ea8:	subs	r4, r0, #0
     eac:	bne	eb4 <rb_strdup+0x20>
     eb0:	bl	be4 <rb_outofmemory@plt>
     eb4:	mov	r1, r5
     eb8:	bl	c68 <strcpy@plt>
     ebc:	mov	r0, r4
     ec0:	pop	{r4, r5, r6, pc}

00000ec4 <propagate_resv.part.0>:
     ec4:	push	{r4, r5, r6, r7, r8, r9, lr}
     ec8:	mov	r8, r3
     ecc:	sub	sp, sp, #28
     ed0:	mov	r4, r1
     ed4:	mov	r7, r2
     ed8:	mov	r9, r0
     edc:	ldr	r5, [pc, #100]	; f48 <propagate_resv.part.0+0x84>
     ee0:	ldr	r3, [pc, #100]	; f4c <propagate_resv.part.0+0x88>
     ee4:	add	r5, pc, r5
     ee8:	ldr	r6, [r5, r3]
     eec:	ldr	r3, [pc, #92]	; f50 <propagate_resv.part.0+0x8c>
     ef0:	add	r3, pc, r3
     ef4:	stm	sp, {r3, r4, r7, r8}
     ef8:	mov	r3, #0
     efc:	ldr	r2, [r6]
     f00:	bl	bb4 <sendto_match_servs@plt>
     f04:	ldr	r3, [pc, #72]	; f54 <propagate_resv.part.0+0x90>
     f08:	mov	r1, r4
     f0c:	mov	r0, r9
     f10:	ldr	r2, [r5, r3]
     f14:	mov	r3, #0
     f18:	str	r4, [sp, #4]
     f1c:	str	r3, [sp, #8]
     f20:	ldr	r3, [pc, #48]	; f58 <propagate_resv.part.0+0x94>
     f24:	str	r7, [sp, #12]
     f28:	str	r8, [sp, #16]
     f2c:	add	r3, pc, r3
     f30:	str	r3, [sp]
     f34:	ldr	r2, [r2]
     f38:	ldr	r3, [r6]
     f3c:	bl	bb4 <sendto_match_servs@plt>
     f40:	add	sp, sp, #28
     f44:	pop	{r4, r5, r6, r7, r8, r9, pc}
     f48:	.word	0x00012114
     f4c:	.word	0x000000c0
     f50:	.word	0x00001627
     f54:	.word	0x000000e0
     f58:	.word	0x000015fa

00000f5c <rb_dlinkAdd>:
     f5c:	cmp	r0, #0
     f60:	push	{r4, lr}
     f64:	bne	f88 <rb_dlinkAdd+0x2c>
     f68:	ldr	r3, [pc, #124]	; fec <rb_dlinkAdd+0x90>
     f6c:	mov	r2, #143	; 0x8f
     f70:	ldr	r1, [pc, #120]	; ff0 <rb_dlinkAdd+0x94>
     f74:	ldr	r0, [pc, #120]	; ff4 <rb_dlinkAdd+0x98>
     f78:	add	r3, pc, r3
     f7c:	add	r1, pc, r1
     f80:	add	r0, pc, r0
     f84:	bl	d64 <__assert_fail@plt>
     f88:	cmp	r1, #0
     f8c:	bne	fb0 <rb_dlinkAdd+0x54>
     f90:	ldr	r3, [pc, #96]	; ff8 <rb_dlinkAdd+0x9c>
     f94:	mov	r2, #144	; 0x90
     f98:	ldr	r1, [pc, #92]	; ffc <rb_dlinkAdd+0xa0>
     f9c:	ldr	r0, [pc, #92]	; 1000 <rb_dlinkAdd+0xa4>
     fa0:	add	r3, pc, r3
     fa4:	add	r1, pc, r1
     fa8:	add	r0, pc, r0
     fac:	b	f84 <rb_dlinkAdd+0x28>
     fb0:	mov	r3, #0
     fb4:	stm	r1, {r0, r3}
     fb8:	ldr	r3, [r2]
     fbc:	cmp	r3, #0
     fc0:	str	r3, [r1, #8]
     fc4:	strne	r1, [r3, #4]
     fc8:	bne	fd8 <rb_dlinkAdd+0x7c>
     fcc:	ldr	r3, [r2, #4]
     fd0:	cmp	r3, #0
     fd4:	streq	r1, [r2, #4]
     fd8:	ldr	r3, [r2, #8]
     fdc:	str	r1, [r2]
     fe0:	add	r3, r3, #1
     fe4:	str	r3, [r2, #8]
     fe8:	pop	{r4, pc}
     fec:	.word	0x00001540
     ff0:	.word	0x000015c4
     ff4:	.word	0x000015dc
     ff8:	.word	0x00001518
     ffc:	.word	0x0000159c
    1000:	.word	0x000015c1

00001004 <parse_resv>:
    1004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1008:	mov	r5, r1
    100c:	mov	r7, r2
    1010:	mov	r8, r3
    1014:	mov	r3, #0
    1018:	sub	sp, sp, #44	; 0x2c
    101c:	mov	r4, r0
    1020:	ldr	r1, [r0, #64]	; 0x40
    1024:	ldr	sl, [pc, #1644]	; 1698 <parse_resv+0x694>
    1028:	ldr	r9, [sp, #80]	; 0x50
    102c:	and	r2, r1, #8192	; 0x2000
    1030:	orrs	r3, r2, r3
    1034:	add	sl, pc, sl
    1038:	beq	1098 <parse_resv+0x94>
    103c:	ldrh	r3, [r0, #80]	; 0x50
    1040:	cmp	r3, #64	; 0x40
    1044:	bne	1098 <parse_resv+0x94>
    1048:	cmp	r5, #0
    104c:	bne	10c8 <parse_resv+0xc4>
    1050:	mov	r0, r5
    1054:	bl	d58 <clean_resv_nick@plt>
    1058:	cmp	r0, #0
    105c:	beq	1688 <parse_resv+0x684>
    1060:	mov	r0, r5
    1064:	bl	cb0 <strlen@plt>
    1068:	cmp	r0, #64	; 0x40
    106c:	bhi	1120 <parse_resv+0x11c>
    1070:	mov	r0, r5
    1074:	bl	d1c <valid_wild_card_simple@plt>
    1078:	cmp	r0, #0
    107c:	bne	13c4 <parse_resv+0x3c0>
    1080:	ldr	r3, [pc, #1556]	; 169c <parse_resv+0x698>
    1084:	ldr	r1, [pc, #1556]	; 16a0 <parse_resv+0x69c>
    1088:	ldr	r3, [sl, r3]
    108c:	add	r1, pc, r1
    1090:	ldr	r2, [r3, #240]	; 0xf0
    1094:	b	1100 <parse_resv+0xfc>
    1098:	ldr	r2, [r4, #32]
    109c:	cmp	r8, #0
    10a0:	add	r1, r4, #163	; 0xa3
    10a4:	movgt	r3, #128	; 0x80
    10a8:	movle	r3, #256	; 0x100
    10ac:	add	r0, r4, #152	; 0x98
    10b0:	add	r2, r2, #88	; 0x58
    10b4:	bl	d28 <find_shared_conf@plt>
    10b8:	cmp	r0, #0
    10bc:	bne	1048 <parse_resv+0x44>
    10c0:	add	sp, sp, #44	; 0x2c
    10c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10c8:	ldr	r3, [pc, #1492]	; 16a4 <parse_resv+0x6a0>
    10cc:	ldrb	r2, [r5]
    10d0:	ldr	r3, [sl, r3]
    10d4:	ldr	r3, [r3, r2, lsl #2]
    10d8:	tst	r3, #512	; 0x200
    10dc:	beq	1050 <parse_resv+0x4c>
    10e0:	mov	r0, r5
    10e4:	bl	d40 <hash_find_resv@plt>
    10e8:	subs	r3, r0, #0
    10ec:	str	r3, [sp, #32]
    10f0:	beq	1110 <parse_resv+0x10c>
    10f4:	ldr	r1, [pc, #1452]	; 16a8 <parse_resv+0x6a4>
    10f8:	mov	r2, r5
    10fc:	add	r1, pc, r1
    1100:	mov	r0, r4
    1104:	add	sp, sp, #44	; 0x2c
    1108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    110c:	b	cf8 <sendto_one_notice@plt>
    1110:	mov	r0, r5
    1114:	bl	cb0 <strlen@plt>
    1118:	cmp	r0, #200	; 0xc8
    111c:	bls	1130 <parse_resv+0x12c>
    1120:	ldr	r1, [pc, #1412]	; 16ac <parse_resv+0x6a8>
    1124:	mov	r2, r5
    1128:	add	r1, pc, r1
    112c:	b	1100 <parse_resv+0xfc>
    1130:	bl	b90 <make_conf@plt>
    1134:	ldr	r3, [sp, #32]
    1138:	mov	fp, #256	; 0x100
    113c:	mov	r6, r0
    1140:	str	fp, [r0]
    1144:	str	r3, [r0, #32]
    1148:	bl	b9c <rb_current_time@plt>
    114c:	str	r0, [r6, #40]	; 0x28
    1150:	mov	r0, r5
    1154:	bl	e94 <rb_strdup>
    1158:	str	r0, [r6, #16]
    115c:	mov	r0, r7
    1160:	bl	e94 <rb_strdup>
    1164:	str	r0, [r6, #20]
    1168:	mov	r0, r4
    116c:	bl	c38 <get_oper_name@plt>
    1170:	bl	c5c <operhash_add@plt>
    1174:	cmp	r9, #0
    1178:	str	r0, [r6, #12]
    117c:	beq	12bc <parse_resv+0x2b8>
    1180:	ldr	r3, [r6, #4]
    1184:	mov	r9, #60	; 0x3c
    1188:	orr	r3, r3, #8912896	; 0x880000
    118c:	str	r3, [r6, #4]
    1190:	bl	b9c <rb_current_time@plt>
    1194:	add	r0, r0, r8
    1198:	str	r0, [r6, #36]	; 0x24
    119c:	str	r0, [r6, #44]	; 0x2c
    11a0:	mov	r0, r6
    11a4:	bl	bd8 <replace_old_ban@plt>
    11a8:	bl	ca4 <rb_make_rb_dlink_node@plt>
    11ac:	ldr	r3, [pc, #1276]	; 16b0 <parse_resv+0x6ac>
    11b0:	mov	r1, r0
    11b4:	mov	r0, r6
    11b8:	ldr	r3, [sl, r3]
    11bc:	mov	r2, r3
    11c0:	str	r3, [sp, #36]	; 0x24
    11c4:	bl	f5c <rb_dlinkAdd>
    11c8:	mov	r0, r4
    11cc:	bl	c38 <get_oper_name@plt>
    11d0:	sdiv	r9, r8, r9
    11d4:	ldr	r2, [pc, #1240]	; 16b4 <parse_resv+0x6b0>
    11d8:	mov	r3, r0
    11dc:	mov	r0, fp
    11e0:	ldr	r1, [sp, #32]
    11e4:	add	r2, pc, r2
    11e8:	str	r9, [sp]
    11ec:	stmib	sp, {r5, r7}
    11f0:	bl	c08 <sendto_realops_snomask@plt>
    11f4:	mov	r0, r4
    11f8:	bl	c38 <get_oper_name@plt>
    11fc:	ldr	r1, [pc, #1204]	; 16b8 <parse_resv+0x6b4>
    1200:	mov	r2, r0
    1204:	mov	r3, r9
    1208:	mov	r0, #7
    120c:	stm	sp, {r5, r7}
    1210:	add	r1, pc, r1
    1214:	bl	cbc <ilog@plt>
    1218:	ldr	r1, [pc, #1180]	; 16bc <parse_resv+0x6b8>
    121c:	mov	r0, r4
    1220:	mov	r3, r5
    1224:	mov	r2, r9
    1228:	add	r4, r4, #396	; 0x18c
    122c:	add	r1, pc, r1
    1230:	bl	cf8 <sendto_one_notice@plt>
    1234:	ldr	r2, [pc, #1156]	; 16c0 <parse_resv+0x6bc>
    1238:	ldr	r3, [r6, #40]	; 0x28
    123c:	ldr	r1, [sl, r2]
    1240:	ldr	r2, [pc, #1148]	; 16c4 <parse_resv+0x6c0>
    1244:	ldr	r0, [r1]
    1248:	ldr	r2, [sl, r2]
    124c:	ldr	r2, [r2]
    1250:	str	r7, [sp, #24]
    1254:	ldr	r1, [r6, #44]	; 0x2c
    1258:	orr	r2, r0, r2
    125c:	sub	r1, r1, r3
    1260:	str	r1, [sp, #20]
    1264:	ldr	r1, [r6, #36]	; 0x24
    1268:	str	r3, [sp, #12]
    126c:	sub	r1, r1, r3
    1270:	str	r1, [sp, #16]
    1274:	ldr	r3, [r6, #16]
    1278:	str	r4, [sp, #4]
    127c:	str	r3, [sp, #8]
    1280:	ldr	r3, [pc, #1088]	; 16c8 <parse_resv+0x6c4>
    1284:	add	r3, pc, r3
    1288:	str	r3, [sp]
    128c:	ldr	r3, [sp, #32]
    1290:	mov	r1, r3
    1294:	mov	r0, r3
    1298:	bl	c74 <sendto_server@plt>
    129c:	mov	r1, r6
    12a0:	ldr	r0, [r6, #16]
    12a4:	bl	ba8 <add_to_resv_hash@plt>
    12a8:	ldrd	r0, [r6, #16]
    12ac:	mov	r2, r8
    12b0:	add	sp, sp, #44	; 0x2c
    12b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12b8:	b	c20 <resv_chan_forcepart@plt>
    12bc:	cmp	r8, #0
    12c0:	ble	1340 <parse_resv+0x33c>
    12c4:	bl	b9c <rb_current_time@plt>
    12c8:	add	r0, r0, r8
    12cc:	mov	sl, #60	; 0x3c
    12d0:	str	r0, [r6, #36]	; 0x24
    12d4:	mov	r0, r4
    12d8:	bl	c38 <get_oper_name@plt>
    12dc:	sdiv	sl, r8, sl
    12e0:	ldr	r2, [pc, #996]	; 16cc <parse_resv+0x6c8>
    12e4:	mov	r3, r0
    12e8:	mov	r1, r9
    12ec:	mov	r0, fp
    12f0:	add	r2, pc, r2
    12f4:	str	sl, [sp]
    12f8:	stmib	sp, {r5, r7}
    12fc:	bl	c08 <sendto_realops_snomask@plt>
    1300:	mov	r0, r4
    1304:	bl	c38 <get_oper_name@plt>
    1308:	ldr	r1, [pc, #960]	; 16d0 <parse_resv+0x6cc>
    130c:	mov	r3, sl
    1310:	mov	r2, r0
    1314:	mov	r0, #7
    1318:	stm	sp, {r5, r7}
    131c:	add	r1, pc, r1
    1320:	bl	cbc <ilog@plt>
    1324:	ldr	r1, [pc, #936]	; 16d4 <parse_resv+0x6d0>
    1328:	mov	r3, r5
    132c:	mov	r2, sl
    1330:	mov	r0, r4
    1334:	add	r1, pc, r1
    1338:	bl	cf8 <sendto_one_notice@plt>
    133c:	b	129c <parse_resv+0x298>
    1340:	mov	r0, r4
    1344:	bl	c38 <get_oper_name@plt>
    1348:	ldr	r2, [pc, #904]	; 16d8 <parse_resv+0x6d4>
    134c:	mov	r3, r0
    1350:	mov	r1, r9
    1354:	mov	r0, fp
    1358:	stm	sp, {r5, r7}
    135c:	add	r2, pc, r2
    1360:	bl	c08 <sendto_realops_snomask@plt>
    1364:	mov	r0, r4
    1368:	bl	c38 <get_oper_name@plt>
    136c:	ldr	r1, [pc, #872]	; 16dc <parse_resv+0x6d8>
    1370:	mov	r3, r5
    1374:	mov	r2, r0
    1378:	mov	r0, #7
    137c:	str	r7, [sp]
    1380:	add	r1, pc, r1
    1384:	bl	cbc <ilog@plt>
    1388:	ldr	r1, [pc, #848]	; 16e0 <parse_resv+0x6dc>
    138c:	mov	r2, r5
    1390:	mov	r0, r4
    1394:	add	r1, pc, r1
    1398:	bl	cf8 <sendto_one_notice@plt>
    139c:	str	r9, [sp, #4]
    13a0:	mov	r1, r4
    13a4:	mov	r0, #3
    13a8:	str	r9, [sp, #8]
    13ac:	ldr	r3, [r6, #20]
    13b0:	str	r3, [sp]
    13b4:	mov	r3, r9
    13b8:	ldr	r2, [r6, #16]
    13bc:	bl	c14 <bandb_add@plt>
    13c0:	b	129c <parse_resv+0x298>
    13c4:	mov	r0, r5
    13c8:	bl	ce0 <find_nick_resv_mask@plt>
    13cc:	subs	fp, r0, #0
    13d0:	beq	13e4 <parse_resv+0x3e0>
    13d4:	ldr	r1, [pc, #776]	; 16e4 <parse_resv+0x6e0>
    13d8:	mov	r2, r5
    13dc:	add	r1, pc, r1
    13e0:	b	1100 <parse_resv+0xfc>
    13e4:	bl	b90 <make_conf@plt>
    13e8:	mov	r3, #512	; 0x200
    13ec:	mov	r6, r0
    13f0:	str	r3, [r0]
    13f4:	str	fp, [r0, #32]
    13f8:	bl	b9c <rb_current_time@plt>
    13fc:	str	r0, [r6, #40]	; 0x28
    1400:	mov	r0, r5
    1404:	bl	e94 <rb_strdup>
    1408:	str	r0, [r6, #16]
    140c:	mov	r0, r7
    1410:	bl	e94 <rb_strdup>
    1414:	str	r0, [r6, #20]
    1418:	mov	r0, r4
    141c:	bl	c38 <get_oper_name@plt>
    1420:	bl	c5c <operhash_add@plt>
    1424:	cmp	r9, #0
    1428:	str	r0, [r6, #12]
    142c:	beq	1580 <parse_resv+0x57c>
    1430:	ldr	r3, [r6, #4]
    1434:	mov	r9, #60	; 0x3c
    1438:	orr	r3, r3, #8912896	; 0x880000
    143c:	str	r3, [r6, #4]
    1440:	bl	b9c <rb_current_time@plt>
    1444:	add	r0, r0, r8
    1448:	str	r0, [r6, #36]	; 0x24
    144c:	str	r0, [r6, #44]	; 0x2c
    1450:	mov	r0, r6
    1454:	bl	bd8 <replace_old_ban@plt>
    1458:	bl	ca4 <rb_make_rb_dlink_node@plt>
    145c:	ldr	r3, [pc, #588]	; 16b0 <parse_resv+0x6ac>
    1460:	mov	r1, r0
    1464:	mov	r0, r6
    1468:	ldr	r3, [sl, r3]
    146c:	mov	r2, r3
    1470:	str	r3, [sp, #32]
    1474:	bl	f5c <rb_dlinkAdd>
    1478:	mov	r0, r4
    147c:	bl	c38 <get_oper_name@plt>
    1480:	sdiv	r9, r8, r9
    1484:	ldr	r2, [pc, #604]	; 16e8 <parse_resv+0x6e4>
    1488:	mov	r3, r0
    148c:	mov	r1, fp
    1490:	mov	r0, #256	; 0x100
    1494:	add	r2, pc, r2
    1498:	str	r9, [sp]
    149c:	stmib	sp, {r5, r7}
    14a0:	bl	c08 <sendto_realops_snomask@plt>
    14a4:	mov	r0, r4
    14a8:	bl	c38 <get_oper_name@plt>
    14ac:	ldr	r1, [pc, #568]	; 16ec <parse_resv+0x6e8>
    14b0:	mov	r2, r0
    14b4:	mov	r3, r9
    14b8:	mov	r0, #7
    14bc:	stm	sp, {r5, r7}
    14c0:	add	r1, pc, r1
    14c4:	bl	cbc <ilog@plt>
    14c8:	ldr	r1, [pc, #544]	; 16f0 <parse_resv+0x6ec>
    14cc:	mov	r0, r4
    14d0:	mov	r3, r5
    14d4:	mov	r2, r9
    14d8:	add	r4, r4, #396	; 0x18c
    14dc:	add	r1, pc, r1
    14e0:	bl	cf8 <sendto_one_notice@plt>
    14e4:	ldr	r2, [pc, #468]	; 16c0 <parse_resv+0x6bc>
    14e8:	ldr	r3, [r6, #40]	; 0x28
    14ec:	ldr	r1, [sl, r2]
    14f0:	ldr	r2, [pc, #460]	; 16c4 <parse_resv+0x6c0>
    14f4:	ldr	r0, [r1]
    14f8:	ldr	r2, [sl, r2]
    14fc:	ldr	r2, [r2]
    1500:	str	r7, [sp, #24]
    1504:	ldr	r1, [r6, #44]	; 0x2c
    1508:	orr	r2, r0, r2
    150c:	mov	r0, fp
    1510:	sub	r1, r1, r3
    1514:	str	r1, [sp, #20]
    1518:	ldr	r1, [r6, #36]	; 0x24
    151c:	str	r3, [sp, #12]
    1520:	sub	r1, r1, r3
    1524:	str	r1, [sp, #16]
    1528:	mov	r1, fp
    152c:	ldr	r3, [r6, #16]
    1530:	str	r4, [sp, #4]
    1534:	str	r3, [sp, #8]
    1538:	ldr	r3, [pc, #436]	; 16f4 <parse_resv+0x6f0>
    153c:	add	r3, pc, r3
    1540:	str	r3, [sp]
    1544:	mov	r3, fp
    1548:	bl	c74 <sendto_server@plt>
    154c:	bl	ca4 <rb_make_rb_dlink_node@plt>
    1550:	ldr	r3, [pc, #416]	; 16f8 <parse_resv+0x6f4>
    1554:	mov	r1, r0
    1558:	mov	r0, r6
    155c:	ldr	r3, [sl, r3]
    1560:	mov	r2, r3
    1564:	str	r3, [sp, #32]
    1568:	bl	f5c <rb_dlinkAdd>
    156c:	ldrd	r0, [r6, #16]
    1570:	mov	r2, r8
    1574:	add	sp, sp, #44	; 0x2c
    1578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    157c:	b	bf0 <resv_nick_fnc@plt>
    1580:	cmp	r8, #0
    1584:	ble	1604 <parse_resv+0x600>
    1588:	bl	b9c <rb_current_time@plt>
    158c:	add	r0, r0, r8
    1590:	mov	fp, #60	; 0x3c
    1594:	str	r0, [r6, #36]	; 0x24
    1598:	mov	r0, r4
    159c:	bl	c38 <get_oper_name@plt>
    15a0:	sdiv	fp, r8, fp
    15a4:	ldr	r2, [pc, #336]	; 16fc <parse_resv+0x6f8>
    15a8:	mov	r3, r0
    15ac:	mov	r1, r9
    15b0:	mov	r0, #256	; 0x100
    15b4:	add	r2, pc, r2
    15b8:	str	fp, [sp]
    15bc:	stmib	sp, {r5, r7}
    15c0:	bl	c08 <sendto_realops_snomask@plt>
    15c4:	mov	r0, r4
    15c8:	bl	c38 <get_oper_name@plt>
    15cc:	ldr	r1, [pc, #300]	; 1700 <parse_resv+0x6fc>
    15d0:	mov	r3, fp
    15d4:	mov	r2, r0
    15d8:	mov	r0, #7
    15dc:	stm	sp, {r5, r7}
    15e0:	add	r1, pc, r1
    15e4:	bl	cbc <ilog@plt>
    15e8:	ldr	r1, [pc, #276]	; 1704 <parse_resv+0x700>
    15ec:	mov	r3, r5
    15f0:	mov	r2, fp
    15f4:	mov	r0, r4
    15f8:	add	r1, pc, r1
    15fc:	bl	cf8 <sendto_one_notice@plt>
    1600:	b	154c <parse_resv+0x548>
    1604:	mov	r0, r4
    1608:	bl	c38 <get_oper_name@plt>
    160c:	ldr	r2, [pc, #244]	; 1708 <parse_resv+0x704>
    1610:	mov	r3, r0
    1614:	mov	r1, r9
    1618:	mov	r0, #256	; 0x100
    161c:	stm	sp, {r5, r7}
    1620:	add	r2, pc, r2
    1624:	bl	c08 <sendto_realops_snomask@plt>
    1628:	mov	r0, r4
    162c:	bl	c38 <get_oper_name@plt>
    1630:	ldr	r1, [pc, #212]	; 170c <parse_resv+0x708>
    1634:	mov	r3, r5
    1638:	mov	r2, r0
    163c:	mov	r0, #7
    1640:	str	r7, [sp]
    1644:	add	r1, pc, r1
    1648:	bl	cbc <ilog@plt>
    164c:	ldr	r1, [pc, #188]	; 1710 <parse_resv+0x70c>
    1650:	mov	r2, r5
    1654:	mov	r0, r4
    1658:	add	r1, pc, r1
    165c:	bl	cf8 <sendto_one_notice@plt>
    1660:	str	r9, [sp, #4]
    1664:	mov	r1, r4
    1668:	mov	r0, #3
    166c:	str	r9, [sp, #8]
    1670:	ldr	r3, [r6, #20]
    1674:	str	r3, [sp]
    1678:	mov	r3, r9
    167c:	ldr	r2, [r6, #16]
    1680:	bl	c14 <bandb_add@plt>
    1684:	b	154c <parse_resv+0x548>
    1688:	ldr	r1, [pc, #132]	; 1714 <parse_resv+0x710>
    168c:	mov	r2, r5
    1690:	add	r1, pc, r1
    1694:	b	1100 <parse_resv+0xfc>
    1698:	.word	0x00011fc4
    169c:	.word	0x000000e4
    16a0:	.word	0x00001632
    16a4:	.word	0x000000d4
    16a8:	.word	0x00001477
    16ac:	.word	0x0000147a
    16b0:	.word	0x000000bc
    16b4:	.word	0x000013d7
    16b8:	.word	0x000013d6
    16bc:	.word	0x000013c8
    16c0:	.word	0x000000c4
    16c4:	.word	0x000000c8
    16c8:	.word	0x00001390
    16cc:	.word	0x00001343
    16d0:	.word	0x000012ca
    16d4:	.word	0x0000132d
    16d8:	.word	0x00001328
    16dc:	.word	0x00001320
    16e0:	.word	0x00001319
    16e4:	.word	0x00001324
    16e8:	.word	0x00001127
    16ec:	.word	0x00001126
    16f0:	.word	0x00001118
    16f4:	.word	0x000010d8
    16f8:	.word	0x000000b8
    16fc:	.word	0x0000107f
    1700:	.word	0x00001006
    1704:	.word	0x00001069
    1708:	.word	0x00001064
    170c:	.word	0x0000105c
    1710:	.word	0x00001055
    1714:	.word	0x0000109c

00001718 <mo_resv>:
    1718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    171c:	sub	sp, sp, #44	; 0x2c
    1720:	mov	r4, r2
    1724:	str	r3, [sp, #28]
    1728:	ldr	r3, [r2, #24]
    172c:	ldr	r5, [pc, #848]	; 1a84 <mo_resv+0x36c>
    1730:	ldr	r9, [sp, #80]	; 0x50
    1734:	cmp	r3, #0
    1738:	add	r5, pc, r5
    173c:	bne	1774 <mo_resv+0x5c>
    1740:	ldr	r3, [pc, #832]	; 1a88 <mo_resv+0x370>
    1744:	ldr	r1, [pc, #832]	; 1a8c <mo_resv+0x374>
    1748:	ldr	r2, [r5, r3]
    174c:	ldr	r3, [pc, #828]	; 1a90 <mo_resv+0x378>
    1750:	add	r1, pc, r1
    1754:	add	r2, r2, #88	; 0x58
    1758:	add	r3, pc, r3
    175c:	str	r3, [sp, #80]	; 0x50
    1760:	add	r3, r4, #88	; 0x58
    1764:	mov	r0, r4
    1768:	add	sp, sp, #44	; 0x2c
    176c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1770:	b	bcc <sendto_one@plt>
    1774:	ldr	r0, [r3, #36]	; 0x24
    1778:	cmp	r0, #0
    177c:	beq	1740 <mo_resv+0x28>
    1780:	ldr	r3, [pc, #780]	; 1a94 <mo_resv+0x37c>
    1784:	ldr	r1, [pc, #780]	; 1a98 <mo_resv+0x380>
    1788:	ldr	r3, [r5, r3]
    178c:	add	r1, pc, r1
    1790:	ldr	r3, [r3, #324]	; 0x144
    1794:	str	r3, [sp, #24]
    1798:	bl	d34 <privilegeset_in_set@plt>
    179c:	cmp	r0, #0
    17a0:	beq	1740 <mo_resv+0x28>
    17a4:	ldr	r0, [r9, #4]
    17a8:	bl	cec <valid_temp_time@plt>
    17ac:	ldr	r2, [sp, #28]
    17b0:	subs	r6, r0, #0
    17b4:	movge	r8, #2
    17b8:	movlt	r8, #1
    17bc:	add	r3, r8, #2
    17c0:	movlt	r6, #0
    17c4:	lsl	r7, r8, #2
    17c8:	add	fp, r8, #1
    17cc:	ldr	sl, [r9, r8, lsl #2]
    17d0:	cmp	r3, r2
    17d4:	movge	r7, #0
    17d8:	bge	1858 <mo_resv+0x140>
    17dc:	ldr	r1, [pc, #696]	; 1a9c <mo_resv+0x384>
    17e0:	add	r7, r9, r7
    17e4:	ldr	r0, [r7, #4]
    17e8:	add	r1, pc, r1
    17ec:	bl	d4c <irccmp@plt>
    17f0:	subs	r3, r0, #0
    17f4:	bne	188c <mo_resv+0x174>
    17f8:	ldr	r2, [r4, #24]
    17fc:	cmp	r2, #0
    1800:	bne	182c <mo_resv+0x114>
    1804:	ldr	r3, [pc, #636]	; 1a88 <mo_resv+0x370>
    1808:	ldr	r1, [pc, #656]	; 1aa0 <mo_resv+0x388>
    180c:	ldr	r2, [r5, r3]
    1810:	ldr	r3, [pc, #652]	; 1aa4 <mo_resv+0x38c>
    1814:	add	r1, pc, r1
    1818:	add	r2, r2, #88	; 0x58
    181c:	add	r3, pc, r3
    1820:	str	r3, [sp, #80]	; 0x50
    1824:	add	r3, r4, #88	; 0x58
    1828:	b	1764 <mo_resv+0x4c>
    182c:	ldr	r0, [r2, #36]	; 0x24
    1830:	str	r3, [sp, #24]
    1834:	cmp	r0, #0
    1838:	beq	1804 <mo_resv+0xec>
    183c:	ldr	r1, [pc, #612]	; 1aa8 <mo_resv+0x390>
    1840:	add	r1, pc, r1
    1844:	bl	d34 <privilegeset_in_set@plt>
    1848:	cmp	r0, #0
    184c:	addne	fp, r8, #3
    1850:	ldrne	r7, [r7, #8]
    1854:	beq	1804 <mo_resv+0xec>
    1858:	ldr	r3, [sp, #28]
    185c:	cmp	fp, r3
    1860:	blt	1890 <mo_resv+0x178>
    1864:	ldr	r3, [pc, #540]	; 1a88 <mo_resv+0x370>
    1868:	ldr	r1, [pc, #572]	; 1aac <mo_resv+0x394>
    186c:	ldr	r2, [r5, r3]
    1870:	ldr	r3, [pc, #568]	; 1ab0 <mo_resv+0x398>
    1874:	add	r1, pc, r1
    1878:	add	r2, r2, #88	; 0x58
    187c:	add	r3, pc, r3
    1880:	str	r3, [sp, #80]	; 0x50
    1884:	add	r3, r4, #88	; 0x58
    1888:	b	1764 <mo_resv+0x4c>
    188c:	mov	r7, #0
    1890:	ldr	r8, [r9, fp, lsl #2]
    1894:	cmp	r8, #0
    1898:	beq	1864 <mo_resv+0x14c>
    189c:	ldrb	r3, [r8]
    18a0:	cmp	r3, #0
    18a4:	beq	1864 <mo_resv+0x14c>
    18a8:	cmp	r7, #0
    18ac:	beq	1928 <mo_resv+0x210>
    18b0:	cmp	r6, #0
    18b4:	bne	18f0 <mo_resv+0x1d8>
    18b8:	mov	r3, r8
    18bc:	mov	r2, sl
    18c0:	mov	r1, r7
    18c4:	mov	r0, r4
    18c8:	bl	ec4 <propagate_resv.part.0>
    18cc:	ldr	r3, [pc, #436]	; 1a88 <mo_resv+0x370>
    18d0:	mov	r0, r7
    18d4:	ldr	r1, [r5, r3]
    18d8:	add	r1, r1, #88	; 0x58
    18dc:	bl	cc8 <match@plt>
    18e0:	cmp	r0, #0
    18e4:	bne	1a50 <mo_resv+0x338>
    18e8:	add	sp, sp, #44	; 0x2c
    18ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18f0:	ldr	r3, [pc, #444]	; 1ab4 <mo_resv+0x39c>
    18f4:	mov	r1, r7
    18f8:	mov	r0, r4
    18fc:	ldr	r2, [r5, r3]
    1900:	str	r6, [sp, #8]
    1904:	ldr	r3, [pc, #428]	; 1ab8 <mo_resv+0x3a0>
    1908:	str	sl, [sp, #12]
    190c:	str	r8, [sp, #16]
    1910:	add	r3, pc, r3
    1914:	stm	sp, {r3, r7}
    1918:	mov	r3, #0
    191c:	ldr	r2, [r2]
    1920:	bl	bb4 <sendto_match_servs@plt>
    1924:	b	18cc <mo_resv+0x1b4>
    1928:	ldr	r3, [sp, #24]
    192c:	cmp	r3, #0
    1930:	bne	1a50 <mo_resv+0x338>
    1934:	ldr	r3, [pc, #384]	; 1abc <mo_resv+0x3a4>
    1938:	ldr	r3, [r5, r3]
    193c:	ldr	r2, [r3, #8]
    1940:	cmp	r2, #0
    1944:	beq	1974 <mo_resv+0x25c>
    1948:	ldr	r7, [r3]
    194c:	ldr	r3, [pc, #364]	; 1ac0 <mo_resv+0x3a8>
    1950:	ldr	fp, [pc, #364]	; 1ac4 <mo_resv+0x3ac>
    1954:	add	r3, pc, r3
    1958:	str	r3, [sp, #32]
    195c:	add	fp, pc, fp
    1960:	ldr	r3, [pc, #352]	; 1ac8 <mo_resv+0x3b0>
    1964:	add	r3, pc, r3
    1968:	str	r3, [sp, #36]	; 0x24
    196c:	cmp	r7, #0
    1970:	bne	1998 <mo_resv+0x280>
    1974:	ldr	r3, [sp, #24]
    1978:	mov	r2, r8
    197c:	mov	r1, sl
    1980:	mov	r0, r4
    1984:	str	r3, [sp, #80]	; 0x50
    1988:	mov	r3, r6
    198c:	add	sp, sp, #44	; 0x2c
    1990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1994:	b	1004 <parse_resv>
    1998:	ldr	r9, [r7]
    199c:	cmp	r6, #0
    19a0:	ldr	r3, [r9, #12]
    19a4:	bne	1a18 <mo_resv+0x300>
    19a8:	tst	r3, #256	; 0x100
    19ac:	beq	1a10 <mo_resv+0x2f8>
    19b0:	ldr	r3, [pc, #276]	; 1acc <mo_resv+0x3b4>
    19b4:	mov	r0, r4
    19b8:	ldr	r1, [r9, #8]
    19bc:	ldr	r3, [r5, r3]
    19c0:	str	fp, [sp]
    19c4:	stmib	sp, {r1, sl}
    19c8:	str	r8, [sp, #12]
    19cc:	str	r3, [sp, #28]
    19d0:	mov	r3, r6
    19d4:	ldr	r2, [sp, #28]
    19d8:	ldr	r2, [r2]
    19dc:	bl	bb4 <sendto_match_servs@plt>
    19e0:	ldr	r3, [pc, #204]	; 1ab4 <mo_resv+0x39c>
    19e4:	mov	r0, r4
    19e8:	ldr	r1, [r9, #8]
    19ec:	ldr	r2, [r5, r3]
    19f0:	ldr	r3, [sp, #36]	; 0x24
    19f4:	str	r8, [sp, #12]
    19f8:	str	r3, [sp]
    19fc:	ldr	r3, [sp, #28]
    1a00:	stmib	sp, {r1, sl}
    1a04:	ldr	r2, [r2]
    1a08:	ldr	r3, [r3]
    1a0c:	bl	bb4 <sendto_match_servs@plt>
    1a10:	ldr	r7, [r7, #8]
    1a14:	b	196c <mo_resv+0x254>
    1a18:	tst	r3, #128	; 0x80
    1a1c:	beq	1a10 <mo_resv+0x2f8>
    1a20:	ldr	r3, [pc, #140]	; 1ab4 <mo_resv+0x39c>
    1a24:	mov	r0, r4
    1a28:	ldr	r1, [r9, #8]
    1a2c:	ldr	r2, [r5, r3]
    1a30:	ldr	r3, [sp, #32]
    1a34:	str	r8, [sp, #16]
    1a38:	str	r3, [sp]
    1a3c:	mov	r3, #0
    1a40:	stmib	sp, {r1, r6, sl}
    1a44:	ldr	r2, [r2]
    1a48:	bl	bb4 <sendto_match_servs@plt>
    1a4c:	b	1a10 <mo_resv+0x2f8>
    1a50:	ldr	r2, [sp, #24]
    1a54:	clz	r3, r6
    1a58:	lsr	r3, r3, #5
    1a5c:	cmp	r2, #0
    1a60:	moveq	r3, #0
    1a64:	cmp	r3, #0
    1a68:	beq	1974 <mo_resv+0x25c>
    1a6c:	ldr	r1, [pc, #92]	; 1ad0 <mo_resv+0x3b8>
    1a70:	mov	r0, r4
    1a74:	add	r1, pc, r1
    1a78:	add	sp, sp, #44	; 0x2c
    1a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a80:	b	cf8 <sendto_one_notice@plt>
    1a84:	.word	0x000118c0
    1a88:	.word	0x000000dc
    1a8c:	.word	0x00001006
    1a90:	.word	0x00000fa3
    1a94:	.word	0x000000e4
    1a98:	.word	0x00000ff1
    1a9c:	.word	0x00000f9f
    1aa0:	.word	0x00000f42
    1aa4:	.word	0x00000f73
    1aa8:	.word	0x00000f4a
    1aac:	.word	0x00000f25
    1ab0:	.word	0x00000f80
    1ab4:	.word	0x000000e0
    1ab8:	.word	0x00000c16
    1abc:	.word	0x000000d0
    1ac0:	.word	0x00000bd2
    1ac4:	.word	0x00000bbb
    1ac8:	.word	0x00000e5a
    1acc:	.word	0x000000c0
    1ad0:	.word	0x00000d63

00001ad4 <ms_resv>:
    1ad4:	push	{r4, r5, r6, lr}
    1ad8:	mov	r0, r2
    1adc:	mov	r5, r2
    1ae0:	ldr	r4, [sp, #16]
    1ae4:	ldr	r6, [pc, #92]	; 1b48 <ms_resv+0x74>
    1ae8:	ldr	r1, [r4, #4]
    1aec:	ldrd	r2, [r4, #8]
    1af0:	add	r6, pc, r6
    1af4:	bl	ec4 <propagate_resv.part.0>
    1af8:	ldr	r3, [pc, #76]	; 1b4c <ms_resv+0x78>
    1afc:	ldr	r0, [r4, #4]
    1b00:	ldr	r1, [r6, r3]
    1b04:	add	r1, r1, #88	; 0x58
    1b08:	bl	cc8 <match@plt>
    1b0c:	cmp	r0, #0
    1b10:	popeq	{r4, r5, r6, pc}
    1b14:	ldrh	r3, [r5, #80]	; 0x50
    1b18:	cmp	r3, #64	; 0x40
    1b1c:	popne	{r4, r5, r6, pc}
    1b20:	ldr	r3, [r5, #24]
    1b24:	cmp	r3, #0
    1b28:	popeq	{r4, r5, r6, pc}
    1b2c:	mov	r3, #0
    1b30:	mov	r0, r5
    1b34:	str	r3, [sp, #16]
    1b38:	ldr	r1, [r4, #8]
    1b3c:	ldr	r2, [r4, #12]
    1b40:	pop	{r4, r5, r6, lr}
    1b44:	b	1004 <parse_resv>
    1b48:	.word	0x00011508
    1b4c:	.word	0x000000dc

00001b50 <rb_dlinkFind.part.3>:
    1b50:	ldr	r3, [pc, #32]	; 1b78 <rb_dlinkFind.part.3+0x28>
    1b54:	movw	r2, #311	; 0x137
    1b58:	push	{r4, lr}
    1b5c:	ldr	r1, [pc, #24]	; 1b7c <rb_dlinkFind.part.3+0x2c>
    1b60:	add	r3, pc, r3
    1b64:	ldr	r0, [pc, #20]	; 1b80 <rb_dlinkFind.part.3+0x30>
    1b68:	add	r3, r3, #12
    1b6c:	add	r1, pc, r1
    1b70:	add	r0, pc, r0
    1b74:	bl	d64 <__assert_fail@plt>
    1b78:	.word	0x00000958
    1b7c:	.word	0x000009d4
    1b80:	.word	0x000009ec

00001b84 <me_resv>:
    1b84:	ldrh	r3, [r2, #80]	; 0x50
    1b88:	push	{r4, r5, r6, lr}
    1b8c:	ldr	r5, [sp, #16]
    1b90:	cmp	r3, #64	; 0x40
    1b94:	popne	{r4, r5, r6, pc}
    1b98:	ldr	r3, [r2, #24]
    1b9c:	cmp	r3, #0
    1ba0:	popeq	{r4, r5, r6, pc}
    1ba4:	mov	r4, r2
    1ba8:	ldr	r0, [r5, #4]
    1bac:	bl	d10 <atoi@plt>
    1bb0:	mov	r3, #0
    1bb4:	str	r3, [sp, #16]
    1bb8:	mov	r3, r0
    1bbc:	mov	r0, r4
    1bc0:	ldr	r1, [r5, #8]
    1bc4:	ldr	r2, [r5, #16]
    1bc8:	pop	{r4, r5, r6, lr}
    1bcc:	b	1004 <parse_resv>

00001bd0 <remove_resv>:
    1bd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1bd4:	subs	r6, r1, #0
    1bd8:	sub	sp, sp, #24
    1bdc:	mov	r5, r0
    1be0:	mov	r9, r2
    1be4:	ldr	r7, [pc, #1448]	; 2194 <remove_resv+0x5c4>
    1be8:	add	r7, pc, r7
    1bec:	beq	1dc4 <remove_resv+0x1f4>
    1bf0:	ldr	r3, [pc, #1440]	; 2198 <remove_resv+0x5c8>
    1bf4:	ldrb	r2, [r6]
    1bf8:	ldr	r3, [r7, r3]
    1bfc:	ldr	r3, [r3, r2, lsl #2]
    1c00:	tst	r3, #512	; 0x200
    1c04:	beq	1dc4 <remove_resv+0x1f4>
    1c08:	mov	r0, r6
    1c0c:	bl	d40 <hash_find_resv@plt>
    1c10:	subs	r4, r0, #0
    1c14:	bne	1c7c <remove_resv+0xac>
    1c18:	cmp	r9, #0
    1c1c:	beq	1c60 <remove_resv+0x90>
    1c20:	ldr	r3, [pc, #1396]	; 219c <remove_resv+0x5cc>
    1c24:	ldr	r3, [r7, r3]
    1c28:	ldr	r3, [r3, #8]
    1c2c:	cmp	r3, #0
    1c30:	beq	1c60 <remove_resv+0x90>
    1c34:	ldr	r3, [pc, #1380]	; 21a0 <remove_resv+0x5d0>
    1c38:	ldr	r2, [pc, #1380]	; 21a4 <remove_resv+0x5d4>
    1c3c:	ldr	r1, [pc, #1380]	; 21a8 <remove_resv+0x5d8>
    1c40:	ldr	r3, [r7, r3]
    1c44:	add	r2, pc, r2
    1c48:	stm	sp, {r2, r6}
    1c4c:	add	r1, pc, r1
    1c50:	mov	r2, #512	; 0x200
    1c54:	ldr	r3, [r3]
    1c58:	mov	r0, r5
    1c5c:	bl	c50 <cluster_generic@plt>
    1c60:	ldr	r1, [pc, #1348]	; 21ac <remove_resv+0x5dc>
    1c64:	mov	r2, r6
    1c68:	add	r1, pc, r1
    1c6c:	mov	r0, r5
    1c70:	add	sp, sp, #24
    1c74:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1c78:	b	cf8 <sendto_one_notice@plt>
    1c7c:	ldr	r3, [r4, #44]	; 0x2c
    1c80:	cmp	r3, #0
    1c84:	beq	1cd0 <remove_resv+0x100>
    1c88:	cmp	r9, #0
    1c8c:	bne	1ca0 <remove_resv+0xd0>
    1c90:	ldr	r1, [pc, #1304]	; 21b0 <remove_resv+0x5e0>
    1c94:	mov	r2, r6
    1c98:	add	r1, pc, r1
    1c9c:	b	1c6c <remove_resv+0x9c>
    1ca0:	ldr	r3, [pc, #1292]	; 21b4 <remove_resv+0x5e4>
    1ca4:	ldr	r3, [r7, r3]
    1ca8:	ldr	r8, [r3]
    1cac:	cmp	r8, #0
    1cb0:	bne	1cbc <remove_resv+0xec>
    1cb4:	add	sp, sp, #24
    1cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1cbc:	ldr	r3, [r8]
    1cc0:	cmp	r4, r3
    1cc4:	beq	1e88 <remove_resv+0x2b8>
    1cc8:	ldr	r8, [r8, #8]
    1ccc:	b	1cac <remove_resv+0xdc>
    1cd0:	cmp	r9, #0
    1cd4:	beq	1d18 <remove_resv+0x148>
    1cd8:	ldr	r3, [pc, #1212]	; 219c <remove_resv+0x5cc>
    1cdc:	ldr	r3, [r7, r3]
    1ce0:	ldr	r3, [r3, #8]
    1ce4:	cmp	r3, #0
    1ce8:	beq	1d18 <remove_resv+0x148>
    1cec:	ldr	r3, [pc, #1196]	; 21a0 <remove_resv+0x5d0>
    1cf0:	mov	r0, r5
    1cf4:	ldr	r2, [pc, #1212]	; 21b8 <remove_resv+0x5e8>
    1cf8:	ldr	r1, [pc, #1212]	; 21bc <remove_resv+0x5ec>
    1cfc:	ldr	r3, [r7, r3]
    1d00:	add	r2, pc, r2
    1d04:	add	r1, pc, r1
    1d08:	stm	sp, {r2, r6}
    1d0c:	mov	r2, #512	; 0x200
    1d10:	ldr	r3, [r3]
    1d14:	bl	c50 <cluster_generic@plt>
    1d18:	ldr	r1, [pc, #1184]	; 21c0 <remove_resv+0x5f0>
    1d1c:	mov	r2, r6
    1d20:	mov	r0, r5
    1d24:	add	r1, pc, r1
    1d28:	bl	cf8 <sendto_one_notice@plt>
    1d2c:	mov	r0, r5
    1d30:	bl	c38 <get_oper_name@plt>
    1d34:	ldr	r1, [pc, #1160]	; 21c4 <remove_resv+0x5f4>
    1d38:	mov	r2, r0
    1d3c:	mov	r3, r6
    1d40:	mov	r0, #7
    1d44:	add	r1, pc, r1
    1d48:	bl	cbc <ilog@plt>
    1d4c:	ldr	r7, [r4, #36]	; 0x24
    1d50:	cmp	r7, #0
    1d54:	bne	1da8 <remove_resv+0x1d8>
    1d58:	mov	r2, r7
    1d5c:	mov	r0, #3
    1d60:	ldr	r1, [r4, #16]
    1d64:	bl	d04 <bandb_del@plt>
    1d68:	mov	r0, r5
    1d6c:	bl	c38 <get_oper_name@plt>
    1d70:	ldr	r2, [pc, #1104]	; 21c8 <remove_resv+0x5f8>
    1d74:	mov	r3, r0
    1d78:	str	r6, [sp]
    1d7c:	add	r2, pc, r2
    1d80:	mov	r1, #0
    1d84:	mov	r0, #256	; 0x100
    1d88:	bl	c08 <sendto_realops_snomask@plt>
    1d8c:	mov	r1, r4
    1d90:	mov	r0, r6
    1d94:	bl	cd4 <del_from_resv_hash@plt>
    1d98:	mov	r0, r4
    1d9c:	add	sp, sp, #24
    1da0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1da4:	b	c98 <free_conf@plt>
    1da8:	mov	r0, r5
    1dac:	bl	c38 <get_oper_name@plt>
    1db0:	ldr	r2, [pc, #1044]	; 21cc <remove_resv+0x5fc>
    1db4:	mov	r3, r0
    1db8:	str	r6, [sp]
    1dbc:	add	r2, pc, r2
    1dc0:	b	1d80 <remove_resv+0x1b0>
    1dc4:	ldr	r3, [pc, #1028]	; 21d0 <remove_resv+0x600>
    1dc8:	ldr	sl, [r7, r3]
    1dcc:	ldr	r8, [sl]
    1dd0:	cmp	r8, #0
    1dd4:	bne	1e1c <remove_resv+0x24c>
    1dd8:	cmp	r9, #0
    1ddc:	beq	1c60 <remove_resv+0x90>
    1de0:	ldr	r3, [pc, #948]	; 219c <remove_resv+0x5cc>
    1de4:	ldr	r3, [r7, r3]
    1de8:	ldr	r3, [r3, #8]
    1dec:	cmp	r3, #0
    1df0:	beq	1c60 <remove_resv+0x90>
    1df4:	ldr	r3, [pc, #932]	; 21a0 <remove_resv+0x5d0>
    1df8:	ldr	r2, [pc, #980]	; 21d4 <remove_resv+0x604>
    1dfc:	ldr	r1, [pc, #980]	; 21d8 <remove_resv+0x608>
    1e00:	ldr	r3, [r7, r3]
    1e04:	add	r2, pc, r2
    1e08:	add	r1, pc, r1
    1e0c:	stm	sp, {r2, r6}
    1e10:	mov	r2, #512	; 0x200
    1e14:	ldr	r3, [r3]
    1e18:	b	1c58 <remove_resv+0x88>
    1e1c:	ldr	r4, [r8]
    1e20:	mov	r1, r6
    1e24:	ldr	r0, [r4, #16]
    1e28:	bl	d4c <irccmp@plt>
    1e2c:	cmp	r0, #0
    1e30:	beq	2088 <remove_resv+0x4b8>
    1e34:	ldr	r8, [r8, #8]
    1e38:	b	1dd0 <remove_resv+0x200>
    1e3c:	cmp	r9, #0
    1e40:	beq	1c90 <remove_resv+0xc0>
    1e44:	ldr	r3, [pc, #872]	; 21b4 <remove_resv+0x5e4>
    1e48:	ldr	r3, [r7, r3]
    1e4c:	ldr	r8, [r3]
    1e50:	cmp	r8, #0
    1e54:	beq	1cb4 <remove_resv+0xe4>
    1e58:	ldr	r3, [r8]
    1e5c:	cmp	r4, r3
    1e60:	beq	1f9c <remove_resv+0x3cc>
    1e64:	ldr	r8, [r8, #8]
    1e68:	b	1e50 <remove_resv+0x280>
    1e6c:	mov	r0, r5
    1e70:	bl	c38 <get_oper_name@plt>
    1e74:	ldr	r2, [pc, #864]	; 21dc <remove_resv+0x60c>
    1e78:	mov	r3, r0
    1e7c:	str	r6, [sp]
    1e80:	add	r2, pc, r2
    1e84:	b	2144 <remove_resv+0x574>
    1e88:	ldr	r1, [pc, #848]	; 21e0 <remove_resv+0x610>
    1e8c:	mov	r2, r6
    1e90:	mov	r0, r5
    1e94:	add	r1, pc, r1
    1e98:	bl	cf8 <sendto_one_notice@plt>
    1e9c:	mov	r0, r5
    1ea0:	bl	c38 <get_oper_name@plt>
    1ea4:	ldr	r2, [pc, #824]	; 21e4 <remove_resv+0x614>
    1ea8:	mov	r3, r0
    1eac:	mov	r1, #0
    1eb0:	mov	r0, #256	; 0x100
    1eb4:	str	r6, [sp]
    1eb8:	add	r2, pc, r2
    1ebc:	bl	c08 <sendto_realops_snomask@plt>
    1ec0:	mov	r0, r5
    1ec4:	bl	c38 <get_oper_name@plt>
    1ec8:	ldr	r1, [pc, #792]	; 21e8 <remove_resv+0x618>
    1ecc:	mov	r3, r6
    1ed0:	mov	r2, r0
    1ed4:	mov	r0, #7
    1ed8:	add	r1, pc, r1
    1edc:	bl	cbc <ilog@plt>
    1ee0:	bl	b9c <rb_current_time@plt>
    1ee4:	ldr	r3, [r4, #40]	; 0x28
    1ee8:	mov	r6, r0
    1eec:	cmp	r3, r0
    1ef0:	movlt	r3, r0
    1ef4:	addge	r3, r3, #1
    1ef8:	str	r3, [r4, #36]	; 0x24
    1efc:	str	r3, [r4, #40]	; 0x28
    1f00:	ldr	r0, [r4, #12]
    1f04:	bl	bfc <operhash_delete@plt>
    1f08:	mov	r0, r5
    1f0c:	add	r5, r5, #396	; 0x18c
    1f10:	bl	c38 <get_oper_name@plt>
    1f14:	bl	c5c <operhash_add@plt>
    1f18:	ldr	r3, [r4, #4]
    1f1c:	str	r0, [r4, #12]
    1f20:	ldr	r1, [r4, #40]	; 0x28
    1f24:	orr	r3, r3, #8912896	; 0x880000
    1f28:	str	r3, [r4, #4]
    1f2c:	ldr	r3, [pc, #696]	; 21ec <remove_resv+0x61c>
    1f30:	ldr	r2, [r7, r3]
    1f34:	ldr	r3, [pc, #692]	; 21f0 <remove_resv+0x620>
    1f38:	ldr	r0, [r2]
    1f3c:	ldr	r3, [r7, r3]
    1f40:	ldr	r2, [r3]
    1f44:	ldr	r3, [r4, #44]	; 0x2c
    1f48:	str	r1, [sp, #12]
    1f4c:	sub	r3, r3, r1
    1f50:	str	r3, [sp, #20]
    1f54:	mov	r3, #0
    1f58:	str	r3, [sp, #16]
    1f5c:	ldr	r1, [r4, #16]
    1f60:	str	r5, [sp, #4]
    1f64:	str	r1, [sp, #8]
    1f68:	ldr	r1, [pc, #644]	; 21f4 <remove_resv+0x624>
    1f6c:	add	r1, pc, r1
    1f70:	orr	r2, r0, r2
    1f74:	mov	r0, r3
    1f78:	str	r1, [sp]
    1f7c:	mov	r1, r3
    1f80:	bl	c74 <sendto_server@plt>
    1f84:	mov	r2, r6
    1f88:	mov	r1, r8
    1f8c:	mov	r0, r4
    1f90:	add	sp, sp, #24
    1f94:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1f98:	b	c2c <deactivate_conf@plt>
    1f9c:	ldr	r1, [pc, #596]	; 21f8 <remove_resv+0x628>
    1fa0:	mov	r2, r6
    1fa4:	mov	r0, r5
    1fa8:	add	r1, pc, r1
    1fac:	bl	cf8 <sendto_one_notice@plt>
    1fb0:	mov	r0, r5
    1fb4:	bl	c38 <get_oper_name@plt>
    1fb8:	ldr	r2, [pc, #572]	; 21fc <remove_resv+0x62c>
    1fbc:	mov	r3, r0
    1fc0:	mov	r1, #0
    1fc4:	mov	r0, #256	; 0x100
    1fc8:	str	r6, [sp]
    1fcc:	add	r2, pc, r2
    1fd0:	bl	c08 <sendto_realops_snomask@plt>
    1fd4:	mov	r0, r5
    1fd8:	bl	c38 <get_oper_name@plt>
    1fdc:	ldr	r1, [pc, #540]	; 2200 <remove_resv+0x630>
    1fe0:	mov	r3, r6
    1fe4:	mov	r2, r0
    1fe8:	mov	r0, #7
    1fec:	add	r1, pc, r1
    1ff0:	bl	cbc <ilog@plt>
    1ff4:	bl	b9c <rb_current_time@plt>
    1ff8:	ldr	r3, [r4, #40]	; 0x28
    1ffc:	mov	r6, r0
    2000:	cmp	r3, r0
    2004:	movlt	r3, r0
    2008:	addge	r3, r3, #1
    200c:	str	r3, [r4, #36]	; 0x24
    2010:	str	r3, [r4, #40]	; 0x28
    2014:	ldr	r0, [r4, #12]
    2018:	bl	bfc <operhash_delete@plt>
    201c:	mov	r0, r5
    2020:	add	r5, r5, #396	; 0x18c
    2024:	bl	c38 <get_oper_name@plt>
    2028:	bl	c5c <operhash_add@plt>
    202c:	ldr	r3, [r4, #4]
    2030:	str	r0, [r4, #12]
    2034:	ldr	r1, [r4, #40]	; 0x28
    2038:	orr	r3, r3, #8912896	; 0x880000
    203c:	str	r3, [r4, #4]
    2040:	ldr	r3, [pc, #420]	; 21ec <remove_resv+0x61c>
    2044:	ldr	r2, [r7, r3]
    2048:	ldr	r3, [pc, #416]	; 21f0 <remove_resv+0x620>
    204c:	ldr	r0, [r2]
    2050:	ldr	r3, [r7, r3]
    2054:	ldr	r2, [r3]
    2058:	ldr	r3, [r4, #44]	; 0x2c
    205c:	str	r1, [sp, #12]
    2060:	sub	r3, r3, r1
    2064:	str	r3, [sp, #20]
    2068:	mov	r3, #0
    206c:	str	r3, [sp, #16]
    2070:	ldr	r1, [r4, #16]
    2074:	str	r5, [sp, #4]
    2078:	str	r1, [sp, #8]
    207c:	ldr	r1, [pc, #384]	; 2204 <remove_resv+0x634>
    2080:	add	r1, pc, r1
    2084:	b	1f70 <remove_resv+0x3a0>
    2088:	ldr	r3, [r4, #44]	; 0x2c
    208c:	cmp	r3, #0
    2090:	bne	1e3c <remove_resv+0x26c>
    2094:	cmp	r9, #0
    2098:	beq	20dc <remove_resv+0x50c>
    209c:	ldr	r3, [pc, #248]	; 219c <remove_resv+0x5cc>
    20a0:	ldr	r3, [r7, r3]
    20a4:	ldr	r3, [r3, #8]
    20a8:	cmp	r3, #0
    20ac:	beq	20dc <remove_resv+0x50c>
    20b0:	ldr	r3, [pc, #232]	; 21a0 <remove_resv+0x5d0>
    20b4:	mov	r0, r5
    20b8:	ldr	r2, [pc, #328]	; 2208 <remove_resv+0x638>
    20bc:	ldr	r1, [pc, #328]	; 220c <remove_resv+0x63c>
    20c0:	ldr	r3, [r7, r3]
    20c4:	add	r2, pc, r2
    20c8:	add	r1, pc, r1
    20cc:	stm	sp, {r2, r6}
    20d0:	mov	r2, #512	; 0x200
    20d4:	ldr	r3, [r3]
    20d8:	bl	c50 <cluster_generic@plt>
    20dc:	ldr	r1, [pc, #300]	; 2210 <remove_resv+0x640>
    20e0:	mov	r2, r6
    20e4:	mov	r0, r5
    20e8:	add	r1, pc, r1
    20ec:	bl	cf8 <sendto_one_notice@plt>
    20f0:	mov	r0, r5
    20f4:	bl	c38 <get_oper_name@plt>
    20f8:	ldr	r1, [pc, #276]	; 2214 <remove_resv+0x644>
    20fc:	mov	r2, r0
    2100:	mov	r3, r6
    2104:	mov	r0, #7
    2108:	add	r1, pc, r1
    210c:	bl	cbc <ilog@plt>
    2110:	ldr	r7, [r4, #36]	; 0x24
    2114:	cmp	r7, #0
    2118:	bne	1e6c <remove_resv+0x29c>
    211c:	mov	r2, r7
    2120:	mov	r0, #3
    2124:	ldr	r1, [r4, #16]
    2128:	bl	d04 <bandb_del@plt>
    212c:	mov	r0, r5
    2130:	bl	c38 <get_oper_name@plt>
    2134:	ldr	r2, [pc, #220]	; 2218 <remove_resv+0x648>
    2138:	mov	r3, r0
    213c:	str	r6, [sp]
    2140:	add	r2, pc, r2
    2144:	mov	r1, #0
    2148:	mov	r0, #256	; 0x100
    214c:	bl	c08 <sendto_realops_snomask@plt>
    2150:	ldrd	r2, [r8, #4]
    2154:	mov	r0, r8
    2158:	cmp	r3, #0
    215c:	strne	r2, [r3, #4]
    2160:	streq	r2, [sl, #4]
    2164:	ldr	r2, [r8, #4]
    2168:	cmp	r2, #0
    216c:	strne	r3, [r2, #8]
    2170:	streq	r3, [sl]
    2174:	mov	r3, #0
    2178:	str	r3, [r8, #4]
    217c:	str	r3, [r8, #8]
    2180:	ldr	r3, [sl, #8]
    2184:	sub	r3, r3, #1
    2188:	str	r3, [sl, #8]
    218c:	bl	c44 <rb_free_rb_dlink_node@plt>
    2190:	b	1d98 <remove_resv+0x1c8>
    2194:	.word	0x00011410
    2198:	.word	0x000000d4
    219c:	.word	0x000000d0
    21a0:	.word	0x000000c0
    21a4:	.word	0x00000974
    21a8:	.word	0x00000bae
    21ac:	.word	0x00000b99
    21b0:	.word	0x00000b79
    21b4:	.word	0x000000bc
    21b8:	.word	0x000008b8
    21bc:	.word	0x00000af6
    21c0:	.word	0x00000b3d
    21c4:	.word	0x00000b37
    21c8:	.word	0x00000b08
    21cc:	.word	0x00000aea
    21d0:	.word	0x000000b8
    21d4:	.word	0x000007b4
    21d8:	.word	0x000009f2
    21dc:	.word	0x00000a26
    21e0:	.word	0x000009cd
    21e4:	.word	0x00000a1a
    21e8:	.word	0x000009a3
    21ec:	.word	0x000000c4
    21f0:	.word	0x000000c8
    21f4:	.word	0x000008d7
    21f8:	.word	0x000008b9
    21fc:	.word	0x00000906
    2200:	.word	0x0000088f
    2204:	.word	0x000007c3
    2208:	.word	0x000004f4
    220c:	.word	0x00000732
    2210:	.word	0x00000779
    2214:	.word	0x00000773
    2218:	.word	0x00000744

0000221c <mo_unresv>:
    221c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
    2220:	mov	r4, r2
    2224:	ldr	r2, [r2, #24]
    2228:	ldr	r6, [pc, #324]	; 2374 <mo_unresv+0x158>
    222c:	ldr	r5, [sp, #32]
    2230:	cmp	r2, #0
    2234:	add	r6, pc, r6
    2238:	bne	2270 <mo_unresv+0x54>
    223c:	ldr	r3, [pc, #308]	; 2378 <mo_unresv+0x15c>
    2240:	ldr	r1, [pc, #308]	; 237c <mo_unresv+0x160>
    2244:	ldr	r2, [r6, r3]
    2248:	ldr	r3, [pc, #304]	; 2380 <mo_unresv+0x164>
    224c:	add	r1, pc, r1
    2250:	add	r2, r2, #88	; 0x58
    2254:	add	r3, pc, r3
    2258:	str	r3, [sp, #32]
    225c:	add	r3, r4, #88	; 0x58
    2260:	mov	r0, r4
    2264:	add	sp, sp, #8
    2268:	pop	{r4, r5, r6, r7, r8, lr}
    226c:	b	bcc <sendto_one@plt>
    2270:	ldr	r0, [r2, #36]	; 0x24
    2274:	cmp	r0, #0
    2278:	beq	223c <mo_unresv+0x20>
    227c:	ldr	r1, [pc, #256]	; 2384 <mo_unresv+0x168>
    2280:	mov	r7, r3
    2284:	add	r1, pc, r1
    2288:	bl	d34 <privilegeset_in_set@plt>
    228c:	cmp	r0, #0
    2290:	beq	223c <mo_unresv+0x20>
    2294:	cmp	r7, #4
    2298:	beq	22b8 <mo_unresv+0x9c>
    229c:	mov	r7, #1
    22a0:	ldr	r1, [r5, #4]
    22a4:	mov	r2, r7
    22a8:	mov	r0, r4
    22ac:	add	sp, sp, #8
    22b0:	pop	{r4, r5, r6, r7, r8, lr}
    22b4:	b	1bd0 <remove_resv>
    22b8:	ldr	r1, [pc, #200]	; 2388 <mo_unresv+0x16c>
    22bc:	ldr	r0, [r5, #8]
    22c0:	add	r1, pc, r1
    22c4:	bl	d4c <irccmp@plt>
    22c8:	subs	r7, r0, #0
    22cc:	bne	229c <mo_unresv+0x80>
    22d0:	ldr	r3, [r4, #24]
    22d4:	ldr	r2, [pc, #156]	; 2378 <mo_unresv+0x15c>
    22d8:	cmp	r3, #0
    22dc:	ldr	r8, [r6, r2]
    22e0:	bne	2304 <mo_unresv+0xe8>
    22e4:	ldr	r3, [pc, #160]	; 238c <mo_unresv+0x170>
    22e8:	add	r2, r8, #88	; 0x58
    22ec:	ldr	r1, [pc, #156]	; 2390 <mo_unresv+0x174>
    22f0:	add	r3, pc, r3
    22f4:	add	r1, pc, r1
    22f8:	str	r3, [sp, #32]
    22fc:	add	r3, r4, #88	; 0x58
    2300:	b	2260 <mo_unresv+0x44>
    2304:	ldr	r0, [r3, #36]	; 0x24
    2308:	cmp	r0, #0
    230c:	beq	22e4 <mo_unresv+0xc8>
    2310:	ldr	r1, [pc, #124]	; 2394 <mo_unresv+0x178>
    2314:	add	r1, pc, r1
    2318:	bl	d34 <privilegeset_in_set@plt>
    231c:	cmp	r0, #0
    2320:	beq	22e4 <mo_unresv+0xc8>
    2324:	ldr	r3, [pc, #108]	; 2398 <mo_unresv+0x17c>
    2328:	mov	r0, r4
    232c:	ldr	r2, [r5, #4]
    2330:	ldr	r1, [pc, #100]	; 239c <mo_unresv+0x180>
    2334:	ldr	r3, [r6, r3]
    2338:	str	r2, [sp, #4]
    233c:	ldr	r2, [pc, #92]	; 23a0 <mo_unresv+0x184>
    2340:	add	r1, pc, r1
    2344:	add	r2, pc, r2
    2348:	str	r2, [sp]
    234c:	ldr	r3, [r3]
    2350:	ldr	r2, [r5, #12]
    2354:	bl	b84 <propagate_generic@plt>
    2358:	add	r1, r8, #88	; 0x58
    235c:	ldr	r0, [r5, #12]
    2360:	bl	cc8 <match@plt>
    2364:	cmp	r0, #0
    2368:	bne	22a0 <mo_unresv+0x84>
    236c:	add	sp, sp, #8
    2370:	pop	{r4, r5, r6, r7, r8, pc}
    2374:	.word	0x00010dc4
    2378:	.word	0x000000dc
    237c:	.word	0x0000050a
    2380:	.word	0x000004a7
    2384:	.word	0x000004f9
    2388:	.word	0x000004c7
    238c:	.word	0x0000049f
    2390:	.word	0x00000462
    2394:	.word	0x00000476
    2398:	.word	0x000000c0
    239c:	.word	0x000004ba
    23a0:	.word	0x00000274

000023a4 <handle_remote_unresv>:
    23a4:	ldr	r2, [r0, #32]
    23a8:	mov	r3, #512	; 0x200
    23ac:	push	{r4, r5, r6, lr}
    23b0:	mov	r4, r0
    23b4:	mov	r5, r1
    23b8:	add	r1, r0, #163	; 0xa3
    23bc:	add	r0, r0, #152	; 0x98
    23c0:	add	r2, r2, #88	; 0x58
    23c4:	bl	d28 <find_shared_conf@plt>
    23c8:	cmp	r0, #0
    23cc:	popeq	{r4, r5, r6, pc}
    23d0:	mov	r1, r5
    23d4:	mov	r0, r4
    23d8:	pop	{r4, r5, r6, lr}
    23dc:	mov	r2, #0
    23e0:	b	1bd0 <remove_resv>

000023e4 <me_unresv>:
    23e4:	ldrh	r1, [r2, #80]	; 0x50
    23e8:	ldr	r3, [sp]
    23ec:	cmp	r1, #64	; 0x40
    23f0:	bxne	lr
    23f4:	ldr	r1, [r2, #24]
    23f8:	cmp	r1, #0
    23fc:	bxeq	lr
    2400:	mov	r0, r2
    2404:	ldr	r1, [r3, #4]
    2408:	b	23a4 <handle_remote_unresv>

0000240c <ms_unresv>:
    240c:	push	{r0, r1, r4, r5, r6, lr}
    2410:	mov	r0, r2
    2414:	mov	r4, r2
    2418:	ldr	r5, [sp, #24]
    241c:	ldr	r6, [pc, #128]	; 24a4 <ms_unresv+0x98>
    2420:	ldr	r3, [pc, #128]	; 24a8 <ms_unresv+0x9c>
    2424:	ldr	r2, [r5, #8]
    2428:	add	r6, pc, r6
    242c:	ldr	r1, [pc, #120]	; 24ac <ms_unresv+0xa0>
    2430:	ldr	r3, [r6, r3]
    2434:	str	r2, [sp, #4]
    2438:	ldr	r2, [pc, #112]	; 24b0 <ms_unresv+0xa4>
    243c:	add	r1, pc, r1
    2440:	add	r2, pc, r2
    2444:	str	r2, [sp]
    2448:	ldr	r3, [r3]
    244c:	ldr	r2, [r5, #4]
    2450:	bl	b84 <propagate_generic@plt>
    2454:	ldr	r3, [pc, #88]	; 24b4 <ms_unresv+0xa8>
    2458:	ldr	r0, [r5, #4]
    245c:	ldr	r1, [r6, r3]
    2460:	add	r1, r1, #88	; 0x58
    2464:	bl	cc8 <match@plt>
    2468:	cmp	r0, #0
    246c:	beq	249c <ms_unresv+0x90>
    2470:	ldrh	r3, [r4, #80]	; 0x50
    2474:	cmp	r3, #64	; 0x40
    2478:	bne	249c <ms_unresv+0x90>
    247c:	ldr	r3, [r4, #24]
    2480:	cmp	r3, #0
    2484:	beq	249c <ms_unresv+0x90>
    2488:	ldr	r1, [r5, #8]
    248c:	mov	r0, r4
    2490:	add	sp, sp, #8
    2494:	pop	{r4, r5, r6, lr}
    2498:	b	23a4 <handle_remote_unresv>
    249c:	add	sp, sp, #8
    24a0:	pop	{r4, r5, r6, pc}
    24a4:	.word	0x00010bd0
    24a8:	.word	0x000000c0
    24ac:	.word	0x000003be
    24b0:	.word	0x00000178
    24b4:	.word	0x000000dc

Disassembly of section .fini:

000024b8 <_fini>:
    24b8:	push	{r3, lr}
    24bc:	pop	{r3, pc}
