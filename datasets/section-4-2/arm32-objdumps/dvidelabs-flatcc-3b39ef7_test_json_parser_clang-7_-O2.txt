
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a70 <.init>:
   12a70:	push	{r3, lr}
   12a74:	bl	12c04 <_start@@Base+0x3c>
   12a78:	pop	{r3, pc}

Disassembly of section .plt:

00012a7c <fopen@plt-0x14>:
   12a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   12a80:	ldr	lr, [pc, #4]	; 12a8c <fopen@plt-0x4>
   12a84:	add	lr, pc, lr
   12a88:	ldr	pc, [lr, #8]!
   12a8c:	andeq	r4, r3, r4, ror r5

00012a90 <fopen@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #52, 20	; 0x34000
   12a98:	ldr	pc, [ip, #1396]!	; 0x574

00012a9c <free@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #52, 20	; 0x34000
   12aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa8 <memcpy@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #52, 20	; 0x34000
   12ab0:	ldr	pc, [ip, #1380]!	; 0x564

00012ab4 <ftell@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #52, 20	; 0x34000
   12abc:	ldr	pc, [ip, #1372]!	; 0x55c

00012ac0 <memcmp@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #52, 20	; 0x34000
   12ac8:	ldr	pc, [ip, #1364]!	; 0x554

00012acc <rewind@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #52, 20	; 0x34000
   12ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad8 <__isinff@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #52, 20	; 0x34000
   12ae0:	ldr	pc, [ip, #1348]!	; 0x544

00012ae4 <__isinf@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #52, 20	; 0x34000
   12aec:	ldr	pc, [ip, #1340]!	; 0x53c

00012af0 <realloc@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #52, 20	; 0x34000
   12af8:	ldr	pc, [ip, #1332]!	; 0x534

00012afc <fwrite@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #52, 20	; 0x34000
   12b04:	ldr	pc, [ip, #1324]!	; 0x52c

00012b08 <malloc@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #52, 20	; 0x34000
   12b10:	ldr	pc, [ip, #1316]!	; 0x524

00012b14 <__libc_start_main@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #52, 20	; 0x34000
   12b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00012b20 <__gmon_start__@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #52, 20	; 0x34000
   12b28:	ldr	pc, [ip, #1300]!	; 0x514

00012b2c <exit@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #52, 20	; 0x34000
   12b34:	ldr	pc, [ip, #1292]!	; 0x50c

00012b38 <strlen@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #52, 20	; 0x34000
   12b40:	ldr	pc, [ip, #1284]!	; 0x504

00012b44 <fprintf@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #52, 20	; 0x34000
   12b4c:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b50 <posix_memalign@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #52, 20	; 0x34000
   12b58:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b5c <memset@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #52, 20	; 0x34000
   12b64:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b68 <strtod@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #52, 20	; 0x34000
   12b70:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b74 <memchr@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #52, 20	; 0x34000
   12b7c:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b80 <fclose@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #52, 20	; 0x34000
   12b88:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b8c <fputc@plt>:
   12b8c:	add	ip, pc, #0, 12
   12b90:	add	ip, ip, #52, 20	; 0x34000
   12b94:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b98 <fread_unlocked@plt>:
   12b98:	add	ip, pc, #0, 12
   12b9c:	add	ip, ip, #52, 20	; 0x34000
   12ba0:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba4 <fseek@plt>:
   12ba4:	add	ip, pc, #0, 12
   12ba8:	add	ip, ip, #52, 20	; 0x34000
   12bac:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bb0 <abort@plt>:
   12bb0:	add	ip, pc, #0, 12
   12bb4:	add	ip, ip, #52, 20	; 0x34000
   12bb8:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bbc <__assert_fail@plt>:
   12bbc:	add	ip, pc, #0, 12
   12bc0:	add	ip, ip, #52, 20	; 0x34000
   12bc4:	ldr	pc, [ip, #1196]!	; 0x4ac

Disassembly of section .text:

00012bc8 <_start@@Base>:
   12bc8:	mov	fp, #0
   12bcc:	mov	lr, #0
   12bd0:	pop	{r1}		; (ldr r1, [sp], #4)
   12bd4:	mov	r2, sp
   12bd8:	push	{r2}		; (str r2, [sp, #-4]!)
   12bdc:	push	{r0}		; (str r0, [sp, #-4]!)
   12be0:	ldr	ip, [pc, #16]	; 12bf8 <_start@@Base+0x30>
   12be4:	push	{ip}		; (str ip, [sp, #-4]!)
   12be8:	ldr	r0, [pc, #12]	; 12bfc <_start@@Base+0x34>
   12bec:	ldr	r3, [pc, #12]	; 12c00 <_start@@Base+0x38>
   12bf0:	bl	12b14 <__libc_start_main@plt>
   12bf4:	bl	12bb0 <abort@plt>
   12bf8:	andeq	r3, r3, ip, lsr #17
   12bfc:	andeq	r3, r1, r4, lsr #7
   12c00:	andeq	r3, r3, ip, asr #16
   12c04:	ldr	r3, [pc, #20]	; 12c20 <_start@@Base+0x58>
   12c08:	ldr	r2, [pc, #20]	; 12c24 <_start@@Base+0x5c>
   12c0c:	add	r3, pc, r3
   12c10:	ldr	r2, [r3, r2]
   12c14:	cmp	r2, #0
   12c18:	bxeq	lr
   12c1c:	b	12b20 <__gmon_start__@plt>
   12c20:	andeq	r4, r3, ip, ror #7
   12c24:	andeq	r0, r0, ip, ror r0
   12c28:	ldr	r0, [pc, #24]	; 12c48 <_start@@Base+0x80>
   12c2c:	ldr	r3, [pc, #24]	; 12c4c <_start@@Base+0x84>
   12c30:	cmp	r3, r0
   12c34:	bxeq	lr
   12c38:	ldr	r3, [pc, #16]	; 12c50 <_start@@Base+0x88>
   12c3c:	cmp	r3, #0
   12c40:	bxeq	lr
   12c44:	bx	r3
   12c48:	andeq	r7, r4, r8, ror #6
   12c4c:	andeq	r7, r4, r8, ror #6
   12c50:	andeq	r0, r0, r0
   12c54:	ldr	r0, [pc, #36]	; 12c80 <_start@@Base+0xb8>
   12c58:	ldr	r1, [pc, #36]	; 12c84 <_start@@Base+0xbc>
   12c5c:	sub	r1, r1, r0
   12c60:	asr	r1, r1, #2
   12c64:	add	r1, r1, r1, lsr #31
   12c68:	asrs	r1, r1, #1
   12c6c:	bxeq	lr
   12c70:	ldr	r3, [pc, #16]	; 12c88 <_start@@Base+0xc0>
   12c74:	cmp	r3, #0
   12c78:	bxeq	lr
   12c7c:	bx	r3
   12c80:	andeq	r7, r4, r8, ror #6
   12c84:	andeq	r7, r4, r8, ror #6
   12c88:	andeq	r0, r0, r0
   12c8c:	push	{r4, lr}
   12c90:	ldr	r4, [pc, #24]	; 12cb0 <_start@@Base+0xe8>
   12c94:	ldrb	r3, [r4]
   12c98:	cmp	r3, #0
   12c9c:	popne	{r4, pc}
   12ca0:	bl	12c28 <_start@@Base+0x60>
   12ca4:	mov	r3, #1
   12ca8:	strb	r3, [r4]
   12cac:	pop	{r4, pc}
   12cb0:	andeq	r7, r4, r8, ror #6
   12cb4:	b	12c54 <_start@@Base+0x8c>

00012cb8 <verify_parse@@Base>:
   12cb8:	push	{fp, lr}
   12cbc:	mov	fp, sp
   12cc0:	cmp	r0, #0
   12cc4:	beq	12dbc <verify_parse@@Base+0x104>
   12cc8:	ldr	r1, [r0, #4]
   12ccc:	movw	r2, #20301	; 0x4f4d
   12cd0:	movt	r2, #21326	; 0x534e
   12cd4:	cmp	r1, r2
   12cd8:	bne	12dbc <verify_parse@@Base+0x104>
   12cdc:	ldr	r1, [r0]
   12ce0:	ldr	r2, [r0, r1]!
   12ce4:	mov	r1, r0
   12ce8:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   12cec:	cmp	r2, #5
   12cf0:	bls	12d04 <verify_parse@@Base+0x4c>
   12cf4:	ldrh	r1, [r1, #4]
   12cf8:	cmp	r1, #0
   12cfc:	addsne	r0, r0, r1
   12d00:	bne	12d24 <verify_parse@@Base+0x6c>
   12d04:	ldr	r0, [pc, #412]	; 12ea8 <verify_parse@@Base+0x1f0>
   12d08:	ldr	r1, [pc, #412]	; 12eac <verify_parse@@Base+0x1f4>
   12d0c:	ldr	r3, [pc, #412]	; 12eb0 <verify_parse@@Base+0x1f8>
   12d10:	mov	r2, #45	; 0x2d
   12d14:	add	r0, pc, r0
   12d18:	add	r1, pc, r1
   12d1c:	add	r3, pc, r3
   12d20:	bl	12bbc <__assert_fail@plt>
   12d24:	vldr	s0, [r0]
   12d28:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12d2c:	vcmp.f32	s0, s2
   12d30:	vmrs	APSR_nzcv, fpscr
   12d34:	bne	12ddc <verify_parse@@Base+0x124>
   12d38:	vldr	s0, [r0, #4]
   12d3c:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d40:	vcmp.f32	s0, s2
   12d44:	vmrs	APSR_nzcv, fpscr
   12d48:	bne	12dfc <verify_parse@@Base+0x144>
   12d4c:	vldr	s0, [r0, #8]
   12d50:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d54:	vcmp.f32	s0, s2
   12d58:	vmrs	APSR_nzcv, fpscr
   12d5c:	bne	12e1c <verify_parse@@Base+0x164>
   12d60:	vldr	d16, [r0, #16]
   12d64:	vmov.f64	d17, #8	; 0x40400000  3.0
   12d68:	vcmp.f64	d16, d17
   12d6c:	vmrs	APSR_nzcv, fpscr
   12d70:	bne	12e3c <verify_parse@@Base+0x184>
   12d74:	ldrb	r1, [r0, #24]
   12d78:	cmp	r1, #2
   12d7c:	bne	12e5c <verify_parse@@Base+0x1a4>
   12d80:	ldrh	r1, [r0, #26]
   12d84:	cmp	r1, #5
   12d88:	bne	12e7c <verify_parse@@Base+0x1c4>
   12d8c:	ldrb	r0, [r0, #28]
   12d90:	cmp	r0, #6
   12d94:	moveq	r0, #0
   12d98:	popeq	{fp, pc}
   12d9c:	ldr	r0, [pc, #344]	; 12efc <verify_parse@@Base+0x244>
   12da0:	ldr	r1, [pc, #344]	; 12f00 <verify_parse@@Base+0x248>
   12da4:	ldr	r3, [pc, #344]	; 12f04 <verify_parse@@Base+0x24c>
   12da8:	mov	r2, #54	; 0x36
   12dac:	add	r0, pc, r0
   12db0:	add	r1, pc, r1
   12db4:	add	r3, pc, r3
   12db8:	bl	12bbc <__assert_fail@plt>
   12dbc:	ldr	r0, [pc, #216]	; 12e9c <verify_parse@@Base+0x1e4>
   12dc0:	ldr	r1, [pc, #216]	; 12ea0 <verify_parse@@Base+0x1e8>
   12dc4:	ldr	r3, [pc, #216]	; 12ea4 <verify_parse@@Base+0x1ec>
   12dc8:	mov	r2, #696	; 0x2b8
   12dcc:	add	r0, pc, r0
   12dd0:	add	r1, pc, r1
   12dd4:	add	r3, pc, r3
   12dd8:	bl	12bbc <__assert_fail@plt>
   12ddc:	ldr	r0, [pc, #208]	; 12eb4 <verify_parse@@Base+0x1fc>
   12de0:	ldr	r1, [pc, #208]	; 12eb8 <verify_parse@@Base+0x200>
   12de4:	ldr	r3, [pc, #208]	; 12ebc <verify_parse@@Base+0x204>
   12de8:	mov	r2, #46	; 0x2e
   12dec:	add	r0, pc, r0
   12df0:	add	r1, pc, r1
   12df4:	add	r3, pc, r3
   12df8:	bl	12bbc <__assert_fail@plt>
   12dfc:	ldr	r0, [pc, #188]	; 12ec0 <verify_parse@@Base+0x208>
   12e00:	ldr	r1, [pc, #188]	; 12ec4 <verify_parse@@Base+0x20c>
   12e04:	ldr	r3, [pc, #188]	; 12ec8 <verify_parse@@Base+0x210>
   12e08:	mov	r2, #47	; 0x2f
   12e0c:	add	r0, pc, r0
   12e10:	add	r1, pc, r1
   12e14:	add	r3, pc, r3
   12e18:	bl	12bbc <__assert_fail@plt>
   12e1c:	ldr	r0, [pc, #168]	; 12ecc <verify_parse@@Base+0x214>
   12e20:	ldr	r1, [pc, #168]	; 12ed0 <verify_parse@@Base+0x218>
   12e24:	ldr	r3, [pc, #168]	; 12ed4 <verify_parse@@Base+0x21c>
   12e28:	mov	r2, #48	; 0x30
   12e2c:	add	r0, pc, r0
   12e30:	add	r1, pc, r1
   12e34:	add	r3, pc, r3
   12e38:	bl	12bbc <__assert_fail@plt>
   12e3c:	ldr	r0, [pc, #148]	; 12ed8 <verify_parse@@Base+0x220>
   12e40:	ldr	r1, [pc, #148]	; 12edc <verify_parse@@Base+0x224>
   12e44:	ldr	r3, [pc, #148]	; 12ee0 <verify_parse@@Base+0x228>
   12e48:	mov	r2, #49	; 0x31
   12e4c:	add	r0, pc, r0
   12e50:	add	r1, pc, r1
   12e54:	add	r3, pc, r3
   12e58:	bl	12bbc <__assert_fail@plt>
   12e5c:	ldr	r0, [pc, #128]	; 12ee4 <verify_parse@@Base+0x22c>
   12e60:	ldr	r1, [pc, #128]	; 12ee8 <verify_parse@@Base+0x230>
   12e64:	ldr	r3, [pc, #128]	; 12eec <verify_parse@@Base+0x234>
   12e68:	mov	r2, #50	; 0x32
   12e6c:	add	r0, pc, r0
   12e70:	add	r1, pc, r1
   12e74:	add	r3, pc, r3
   12e78:	bl	12bbc <__assert_fail@plt>
   12e7c:	ldr	r0, [pc, #108]	; 12ef0 <verify_parse@@Base+0x238>
   12e80:	ldr	r1, [pc, #108]	; 12ef4 <verify_parse@@Base+0x23c>
   12e84:	ldr	r3, [pc, #108]	; 12ef8 <verify_parse@@Base+0x240>
   12e88:	mov	r2, #53	; 0x35
   12e8c:	add	r0, pc, r0
   12e90:	add	r1, pc, r1
   12e94:	add	r3, pc, r3
   12e98:	bl	12bbc <__assert_fail@plt>
   12e9c:	andeq	r0, r2, lr, asr ip
   12ea0:	andeq	r0, r2, r0, lsl #25
   12ea4:	strdeq	r0, [r2], -r2
   12ea8:	andeq	r2, r2, r7, ror #4
   12eac:	andeq	r0, r2, r9, lsr #23
   12eb0:	andeq	r0, r2, lr, lsl #24
   12eb4:	andeq	r2, r2, pc, lsl #3
   12eb8:	ldrdeq	r0, [r2], -r1
   12ebc:	andeq	r0, r2, r6, lsr fp
   12ec0:	andeq	r2, r2, pc, ror #2
   12ec4:			; <UNDEFINED> instruction: 0x00020ab1
   12ec8:	andeq	r0, r2, r6, lsl fp
   12ecc:	andeq	r2, r2, pc, asr #2
   12ed0:	muleq	r2, r1, sl
   12ed4:	strdeq	r0, [r2], -r6
   12ed8:	andeq	r2, r2, pc, lsr #2
   12edc:	andeq	r0, r2, r1, ror sl
   12ee0:	ldrdeq	r0, [r2], -r6
   12ee4:	andeq	r2, r2, pc, lsl #2
   12ee8:	andeq	r0, r2, r1, asr sl
   12eec:			; <UNDEFINED> instruction: 0x00020ab6
   12ef0:	andeq	r2, r2, pc, ror #1
   12ef4:	andeq	r0, r2, r1, lsr sl
   12ef8:	muleq	r2, r6, sl
   12efc:	andeq	r2, r2, pc, asr #3
   12f00:	andeq	r0, r2, r1, lsl fp
   12f04:	andeq	r0, r2, r6, ror fp

00012f08 <test_parse@@Base>:
   12f08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f0c:	add	fp, sp, #28
   12f10:	sub	sp, sp, #316	; 0x13c
   12f14:	add	r8, sp, #12
   12f18:	mov	r0, r8
   12f1c:	bl	299d0 <flatcc_builder_init@@Base>
   12f20:	ldr	r9, [pc, #1044]	; 1333c <test_parse@@Base+0x434>
   12f24:	ldr	r9, [pc, r9]
   12f28:	ldr	r0, [r9]
   12f2c:	ldr	r1, [pc, #1036]	; 13340 <test_parse@@Base+0x438>
   12f30:	add	r1, pc, r1
   12f34:	bl	12a90 <fopen@plt>
   12f38:	cmp	r0, #0
   12f3c:	beq	130d0 <test_parse@@Base+0x1c8>
   12f40:	mov	r1, #0
   12f44:	mov	r2, #2
   12f48:	mov	r7, r0
   12f4c:	bl	12ba4 <fseek@plt>
   12f50:	mov	r0, r7
   12f54:	bl	12ab4 <ftell@plt>
   12f58:	cmp	r0, #10240	; 0x2800
   12f5c:	bhi	130c8 <test_parse@@Base+0x1c0>
   12f60:	mov	r5, r0
   12f64:	mov	r0, r7
   12f68:	bl	12acc <rewind@plt>
   12f6c:	cmp	r5, #0
   12f70:	mov	r0, r5
   12f74:	movweq	r0, #1
   12f78:	bl	12b08 <malloc@plt>
   12f7c:	cmp	r0, #0
   12f80:	beq	130c8 <test_parse@@Base+0x1c0>
   12f84:	mov	r4, r0
   12f88:	mov	r1, #0
   12f8c:	mov	r6, r1
   12f90:	add	r0, r4, r1
   12f94:	sub	r2, r5, r1
   12f98:	mov	r1, #1
   12f9c:	mov	r3, r7
   12fa0:	bl	12b98 <fread_unlocked@plt>
   12fa4:	add	r1, r0, r6
   12fa8:	cmp	r0, #0
   12fac:	bne	12f8c <test_parse@@Base+0x84>
   12fb0:	mov	r0, r7
   12fb4:	bl	12b80 <fclose@plt>
   12fb8:	cmp	r5, r6
   12fbc:	bne	130bc <test_parse@@Base+0x1b4>
   12fc0:	sub	r0, fp, #100	; 0x64
   12fc4:	vmov.i32	q8, #0	; 0x00000000
   12fc8:	mov	r7, #0
   12fcc:	add	r6, r4, r5
   12fd0:	mov	r2, #0
   12fd4:	mov	r3, #0
   12fd8:	add	r1, r0, #12
   12fdc:	add	r0, r0, #28
   12fe0:	vst1.32	{d16-d17}, [r0]
   12fe4:	mov	r0, #1
   12fe8:	vst1.32	{d16-d17}, [r1]
   12fec:	str	r8, [fp, #-100]	; 0xffffff9c
   12ff0:	str	r4, [fp, #-96]	; 0xffffffa0
   12ff4:	str	r7, [fp, #-92]	; 0xffffffa4
   12ff8:	str	r0, [fp, #-84]	; 0xffffffac
   12ffc:	str	r4, [fp, #-72]	; 0xffffffb8
   13000:	str	r6, [fp, #-68]	; 0xffffffbc
   13004:	str	r4, [fp, #-64]	; 0xffffffc0
   13008:	mov	r0, r8
   1300c:	ldr	r1, [pc, #824]	; 1334c <test_parse@@Base+0x444>
   13010:	add	r1, pc, r1
   13014:	bl	2a774 <flatcc_builder_start_buffer@@Base>
   13018:	cmp	r0, #0
   1301c:	bne	13058 <test_parse@@Base+0x150>
   13020:	sub	r0, fp, #100	; 0x64
   13024:	sub	r3, fp, #52	; 0x34
   13028:	mov	r1, r4
   1302c:	mov	r2, r6
   13030:	bl	1342c <main@@Base+0x88>
   13034:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13038:	cmp	r7, #0
   1303c:	bne	13058 <test_parse@@Base+0x150>
   13040:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13044:	add	r0, sp, #12
   13048:	bl	2a974 <flatcc_builder_end_buffer@@Base>
   1304c:	cmp	r0, #0
   13050:	bne	130fc <test_parse@@Base+0x1f4>
   13054:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13058:	ldr	r8, [r9]
   1305c:	ldr	r0, [pc, #748]	; 13350 <test_parse@@Base+0x448>
   13060:	ldr	r0, [pc, r0]
   13064:	ldr	r5, [fp, #-96]	; 0xffffffa0
   13068:	ldr	r9, [fp, #-84]	; 0xffffffac
   1306c:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13070:	ldr	sl, [r0]
   13074:	mov	r0, r7
   13078:	bl	2f058 <flatcc_json_parser_error_string@@Base>
   1307c:	add	r1, r6, #1
   13080:	str	r0, [sp, #4]
   13084:	mov	r0, sl
   13088:	mov	r2, r8
   1308c:	mov	r3, r9
   13090:	sub	r1, r1, r5
   13094:	str	r1, [sp]
   13098:	ldr	r1, [pc, #692]	; 13354 <test_parse@@Base+0x44c>
   1309c:	add	r1, pc, r1
   130a0:	bl	12b44 <fprintf@plt>
   130a4:	mvn	r5, #0
   130a8:	mov	r0, r4
   130ac:	bl	12a9c <free@plt>
   130b0:	add	r0, sp, #12
   130b4:	bl	29d38 <flatcc_builder_clear@@Base>
   130b8:	b	130f0 <test_parse@@Base+0x1e8>
   130bc:	mov	r0, r4
   130c0:	bl	12a9c <free@plt>
   130c4:	b	130d0 <test_parse@@Base+0x1c8>
   130c8:	mov	r0, r7
   130cc:	bl	12b80 <fclose@plt>
   130d0:	ldr	r2, [r9]
   130d4:	ldr	r0, [pc, #616]	; 13344 <test_parse@@Base+0x43c>
   130d8:	ldr	r0, [pc, r0]
   130dc:	ldr	r0, [r0]
   130e0:	ldr	r1, [pc, #608]	; 13348 <test_parse@@Base+0x440>
   130e4:	add	r1, pc, r1
   130e8:	bl	12b44 <fprintf@plt>
   130ec:	mvn	r5, #0
   130f0:	mov	r0, r5
   130f4:	sub	sp, fp, #28
   130f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130fc:	str	r4, [fp, #-60]	; 0xffffffc4
   13100:	ldr	r2, [r9]
   13104:	ldr	r9, [pc, #588]	; 13358 <test_parse@@Base+0x450>
   13108:	ldr	r9, [pc, r9]
   1310c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13110:	ldr	r0, [r9]
   13114:	ldr	r1, [pc, #576]	; 1335c <test_parse@@Base+0x454>
   13118:	add	r1, pc, r1
   1311c:	bl	12b44 <fprintf@plt>
   13120:	add	r0, sp, #12
   13124:	sub	r1, fp, #56	; 0x38
   13128:	bl	2e46c <flatcc_builder_finalize_aligned_buffer@@Base>
   1312c:	mov	sl, r0
   13130:	ldr	r0, [pc, #552]	; 13360 <test_parse@@Base+0x458>
   13134:	ldr	r0, [pc, r0]
   13138:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1313c:	ldr	r7, [r0]
   13140:	ldr	r1, [pc, #540]	; 13364 <test_parse@@Base+0x45c>
   13144:	ldr	r2, [pc, #540]	; 13368 <test_parse@@Base+0x460>
   13148:	add	r1, pc, r1
   1314c:	add	r2, pc, r2
   13150:	mov	r0, r7
   13154:	bl	12b44 <fprintf@plt>
   13158:	cmp	r6, #0
   1315c:	beq	1323c <test_parse@@Base+0x334>
   13160:	mov	r9, #0
   13164:	ands	r8, r9, #15
   13168:	beq	13184 <test_parse@@Base+0x27c>
   1316c:	tst	r9, #7
   13170:	bne	131b4 <test_parse@@Base+0x2ac>
   13174:	mov	r0, #32
   13178:	mov	r1, r7
   1317c:	bl	12b8c <fputc@plt>
   13180:	b	131b4 <test_parse@@Base+0x2ac>
   13184:	cmp	r9, #0
   13188:	beq	131a0 <test_parse@@Base+0x298>
   1318c:	ldr	r1, [pc, #472]	; 1336c <test_parse@@Base+0x464>
   13190:	mov	r0, r7
   13194:	sub	r2, fp, #52	; 0x34
   13198:	add	r1, pc, r1
   1319c:	bl	12b44 <fprintf@plt>
   131a0:	ldr	r1, [pc, #456]	; 13370 <test_parse@@Base+0x468>
   131a4:	mov	r0, r7
   131a8:	mov	r2, r9
   131ac:	add	r1, pc, r1
   131b0:	bl	12b44 <fprintf@plt>
   131b4:	ldrb	r2, [sl, r9]
   131b8:	ldr	r1, [pc, #472]	; 13398 <test_parse@@Base+0x490>
   131bc:	mov	r0, r7
   131c0:	add	r1, pc, r1
   131c4:	bl	12b44 <fprintf@plt>
   131c8:	ldrb	r0, [sl, r9]
   131cc:	add	r9, r9, #1
   131d0:	sub	r1, r0, #32
   131d4:	uxtb	r1, r1
   131d8:	cmp	r1, #94	; 0x5e
   131dc:	sub	r1, fp, #52	; 0x34
   131e0:	movwhi	r0, #46	; 0x2e
   131e4:	cmp	r6, r9
   131e8:	strb	r0, [r1, r8]
   131ec:	add	r0, r1, r8
   131f0:	mov	r1, #0
   131f4:	strb	r1, [r0, #1]
   131f8:	bne	13164 <test_parse@@Base+0x25c>
   131fc:	ldr	r9, [pc, #368]	; 13374 <test_parse@@Base+0x46c>
   13200:	tst	r6, #15
   13204:	ldr	r9, [pc, r9]
   13208:	beq	1323c <test_parse@@Base+0x334>
   1320c:	ldr	r8, [pc, #356]	; 13378 <test_parse@@Base+0x470>
   13210:	add	r6, r6, #1
   13214:	add	r8, pc, r8
   13218:	mov	r0, r8
   1321c:	mov	r1, #3
   13220:	mov	r2, #1
   13224:	mov	r3, r7
   13228:	bl	12afc <fwrite@plt>
   1322c:	add	r0, r6, #1
   13230:	tst	r6, #15
   13234:	mov	r6, r0
   13238:	bne	13218 <test_parse@@Base+0x310>
   1323c:	ldr	r1, [pc, #312]	; 1337c <test_parse@@Base+0x474>
   13240:	sub	r2, fp, #52	; 0x34
   13244:	mov	r0, r7
   13248:	add	r1, pc, r1
   1324c:	bl	12b44 <fprintf@plt>
   13250:	ldr	r0, [r9]
   13254:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13258:	ldr	r1, [pc, #288]	; 13380 <test_parse@@Base+0x478>
   1325c:	mov	r2, r5
   13260:	add	r1, pc, r1
   13264:	bl	12b44 <fprintf@plt>
   13268:	mov	r0, sl
   1326c:	bl	12cb8 <verify_parse@@Base>
   13270:	ldr	r0, [pc, #268]	; 13384 <test_parse@@Base+0x47c>
   13274:	ldr	r0, [pc, r0]
   13278:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1327c:	ldr	r5, [r0]
   13280:	ldr	r1, [pc, #256]	; 13388 <test_parse@@Base+0x480>
   13284:	ldr	r2, [pc, #256]	; 1338c <test_parse@@Base+0x484>
   13288:	add	r1, pc, r1
   1328c:	add	r2, pc, r2
   13290:	mov	r0, r5
   13294:	bl	12b44 <fprintf@plt>
   13298:	cmp	r7, #0
   1329c:	beq	13304 <test_parse@@Base+0x3fc>
   132a0:	ldr	r8, [pc, #232]	; 13390 <test_parse@@Base+0x488>
   132a4:	ldr	r6, [pc, #232]	; 13394 <test_parse@@Base+0x48c>
   132a8:	mov	r9, #0
   132ac:	add	r8, pc, r8
   132b0:	add	r6, pc, r6
   132b4:	tst	r9, #15
   132b8:	beq	132d4 <test_parse@@Base+0x3cc>
   132bc:	tst	r9, #7
   132c0:	bne	132e8 <test_parse@@Base+0x3e0>
   132c4:	ldr	r0, [pc, #208]	; 1339c <test_parse@@Base+0x494>
   132c8:	mov	r1, #3
   132cc:	add	r0, pc, r0
   132d0:	b	132dc <test_parse@@Base+0x3d4>
   132d4:	mov	r0, r8
   132d8:	mov	r1, #4
   132dc:	mov	r2, #1
   132e0:	mov	r3, r5
   132e4:	bl	12afc <fwrite@plt>
   132e8:	ldrb	r2, [sl, r9]
   132ec:	mov	r0, r5
   132f0:	mov	r1, r6
   132f4:	bl	12b44 <fprintf@plt>
   132f8:	add	r9, r9, #1
   132fc:	cmp	r7, r9
   13300:	bne	132b4 <test_parse@@Base+0x3ac>
   13304:	ldr	r0, [pc, #148]	; 133a0 <test_parse@@Base+0x498>
   13308:	mov	r1, #4
   1330c:	mov	r2, #1
   13310:	mov	r3, r5
   13314:	add	r0, pc, r0
   13318:	bl	12afc <fwrite@plt>
   1331c:	add	r0, sp, #12
   13320:	bl	29b74 <flatcc_builder_reset@@Base>
   13324:	mov	r5, #0
   13328:	cmp	sl, #0
   1332c:	beq	130a8 <test_parse@@Base+0x1a0>
   13330:	mov	r0, sl
   13334:	bl	2e5ac <flatcc_builder_aligned_free@@Base>
   13338:	b	130a8 <test_parse@@Base+0x1a0>
   1333c:	andeq	r4, r3, r4, asr r1
   13340:	andeq	r0, r2, lr, ror #23
   13344:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   13348:	andeq	r0, r2, pc, asr r8
   1334c:	andeq	r0, r2, ip, lsr #17
   13350:	andeq	r4, r3, r0, lsl r0
   13354:	andeq	r0, r2, pc, lsr #18
   13358:	andeq	r3, r3, r8, ror #30
   1335c:	andeq	r0, r2, pc, asr #16
   13360:	andeq	r3, r3, ip, asr #30
   13364:	andeq	r0, r2, r4, ror #19
   13368:	andeq	r0, r2, sp, lsr r8
   1336c:	muleq	r2, r9, r9
   13370:	andeq	r0, r2, fp, lsl #19
   13374:	andeq	r3, r3, ip, ror #28
   13378:	andeq	r0, r2, pc, asr #18
   1337c:	andeq	r0, r2, r9, ror #17
   13380:	andeq	r0, r2, r8, asr #14
   13384:	andeq	r3, r3, ip, lsl #28
   13388:			; <UNDEFINED> instruction: 0x000208bd
   1338c:	andeq	r0, r2, r5, lsl r7
   13390:			; <UNDEFINED> instruction: 0x000208b6
   13394:			; <UNDEFINED> instruction: 0x000208b7
   13398:	andeq	r0, r2, pc, ror r9
   1339c:	muleq	r2, r7, r8
   133a0:	andeq	r0, r2, ip, asr r8

000133a4 <main@@Base>:
   133a4:	push	{r4, r5, r6, sl, fp, lr}
   133a8:	add	fp, sp, #16
   133ac:	ldr	r6, [pc, #104]	; 1341c <main@@Base+0x78>
   133b0:	mov	r5, r0
   133b4:	mov	r4, r1
   133b8:	mov	r1, #16
   133bc:	mov	r2, #1
   133c0:	ldr	r6, [pc, r6]
   133c4:	ldr	r3, [r6]
   133c8:	ldr	r0, [pc, #80]	; 13420 <main@@Base+0x7c>
   133cc:	add	r0, pc, r0
   133d0:	bl	12afc <fwrite@plt>
   133d4:	sub	r0, r5, #1
   133d8:	cmp	r0, #2
   133dc:	bcs	133fc <main@@Base+0x58>
   133e0:	cmp	r5, #2
   133e4:	ldreq	r0, [r4, #4]
   133e8:	ldreq	r1, [pc, #52]	; 13424 <main@@Base+0x80>
   133ec:	ldreq	r1, [pc, r1]
   133f0:	streq	r0, [r1]
   133f4:	pop	{r4, r5, r6, sl, fp, lr}
   133f8:	b	12f08 <test_parse@@Base>
   133fc:	ldr	r3, [r6]
   13400:	ldr	r0, [pc, #32]	; 13428 <main@@Base+0x84>
   13404:	mov	r1, #63	; 0x3f
   13408:	mov	r2, #1
   1340c:	add	r0, pc, r0
   13410:	bl	12afc <fwrite@plt>
   13414:	mov	r0, #1
   13418:	bl	12b2c <exit@plt>
   1341c:			; <UNDEFINED> instruction: 0x00033cb0
   13420:	andeq	r0, r2, sp, lsl #12
   13424:	andeq	r3, r3, ip, lsl #25
   13428:	ldrdeq	r0, [r2], -lr
   1342c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13430:	add	fp, sp, #28
   13434:	sub	sp, sp, #4
   13438:	vpush	{d8-d9}
   1343c:	sub	sp, sp, #80	; 0x50
   13440:	mov	r8, r0
   13444:	mov	r0, #0
   13448:	mov	r4, r1
   1344c:	mov	r1, #36	; 0x24
   13450:	mov	sl, r3
   13454:	mov	r5, r2
   13458:	str	r0, [r3]
   1345c:	ldr	r0, [r8]
   13460:	bl	2bd4c <flatcc_builder_start_table@@Base>
   13464:	cmp	r0, #0
   13468:	beq	13498 <main@@Base+0xf4>
   1346c:	mov	r0, r8
   13470:	mov	r1, r4
   13474:	mov	r2, r5
   13478:	mov	r3, #33	; 0x21
   1347c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   13480:	mov	r4, r0
   13484:	mov	r0, r4
   13488:	sub	sp, fp, #48	; 0x30
   1348c:	vpop	{d8-d9}
   13490:	add	sp, sp, #4
   13494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13498:	add	r0, sp, #48	; 0x30
   1349c:	mov	r1, r4
   134a0:	mov	r2, r5
   134a4:	mov	r3, #1
   134a8:	str	r0, [sp]
   134ac:	mov	r0, r8
   134b0:	bl	31c7c <flatcc_json_parser_prepare_unions@@Base>
   134b4:	cmp	r0, r5
   134b8:	beq	1346c <main@@Base+0xc8>
   134bc:	cmp	r4, r5
   134c0:	beq	134f4 <main@@Base+0x150>
   134c4:	ldrb	r0, [r4]
   134c8:	cmp	r0, #123	; 0x7b
   134cc:	bne	134f4 <main@@Base+0x150>
   134d0:	add	r1, r4, #1
   134d4:	sub	r0, r5, r1
   134d8:	cmp	r0, #2
   134dc:	blt	1358c <main@@Base+0x1e8>
   134e0:	ldrb	r0, [r1]
   134e4:	cmp	r0, #32
   134e8:	bls	1357c <main@@Base+0x1d8>
   134ec:	mov	r4, r1
   134f0:	b	1359c <main@@Base+0x1f8>
   134f4:	mov	r0, r8
   134f8:	mov	r1, r4
   134fc:	mov	r2, r5
   13500:	mov	r3, #21
   13504:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   13508:	mov	r4, r0
   1350c:	add	r0, r8, #24
   13510:	ldr	r0, [r0]
   13514:	cmp	r0, #0
   13518:	bne	1346c <main@@Base+0xc8>
   1351c:	ldr	r0, [r8]
   13520:	mov	r1, #3
   13524:	bl	2c5cc <flatcc_builder_check_required_field@@Base>
   13528:	cmp	r0, #0
   1352c:	beq	13560 <main@@Base+0x1bc>
   13530:	ldr	r3, [sp, #48]	; 0x30
   13534:	mov	r0, r8
   13538:	mov	r1, r4
   1353c:	mov	r2, r5
   13540:	bl	31d0c <flatcc_json_parser_finalize_unions@@Base>
   13544:	mov	r4, r0
   13548:	ldr	r0, [r8]
   1354c:	bl	2c77c <flatcc_builder_end_table@@Base>
   13550:	cmp	r0, #0
   13554:	str	r0, [sl]
   13558:	bne	13484 <main@@Base+0xe0>
   1355c:	b	1346c <main@@Base+0xc8>
   13560:	mov	r0, r8
   13564:	mov	r1, r4
   13568:	mov	r2, r5
   1356c:	mov	r3, #29
   13570:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   13574:	mov	r4, r0
   13578:	b	1346c <main@@Base+0xc8>
   1357c:	bne	1358c <main@@Base+0x1e8>
   13580:	ldrb	r0, [r4, #2]!
   13584:	cmp	r0, #32
   13588:	bhi	1359c <main@@Base+0x1f8>
   1358c:	mov	r0, r8
   13590:	mov	r2, r5
   13594:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   13598:	mov	r4, r0
   1359c:	cmp	r4, r5
   135a0:	mov	r2, r5
   135a4:	beq	135dc <main@@Base+0x238>
   135a8:	ldrb	r0, [r4]
   135ac:	cmp	r0, #125	; 0x7d
   135b0:	bne	135d8 <main@@Base+0x234>
   135b4:	add	r1, r4, #1
   135b8:	sub	r0, r5, r1
   135bc:	cmp	r0, #2
   135c0:	blt	1d590 <main@@Base+0xa1ec>
   135c4:	ldrb	r0, [r1]
   135c8:	cmp	r0, #32
   135cc:	bls	1d580 <main@@Base+0xa1dc>
   135d0:	mov	r4, r1
   135d4:	b	1350c <main@@Base+0x168>
   135d8:	mov	r2, r4
   135dc:	add	r0, r8, #24
   135e0:	vldr	s18, [pc, #912]	; 13978 <main@@Base+0x5d4>
   135e4:	movw	lr, #29556	; 0x7374
   135e8:	vmov.f32	s16, #8	; 0x40400000  3.0
   135ec:	str	r5, [sp, #44]	; 0x2c
   135f0:	str	r8, [sp, #40]	; 0x28
   135f4:	str	sl, [sp, #36]	; 0x24
   135f8:	str	r0, [sp, #28]
   135fc:	add	r0, r8, #12
   13600:	movt	lr, #29797	; 0x7465
   13604:	str	r0, [sp, #32]
   13608:	movw	r0, #13407	; 0x345f
   1360c:	movt	r0, #29494	; 0x7336
   13610:	sub	r0, r0, #512	; 0x200
   13614:	sub	r0, r0, #196608	; 0x30000
   13618:	str	r0, [sp, #24]
   1361c:	cmp	r2, r5
   13620:	mov	r9, r5
   13624:	beq	13680 <main@@Base+0x2dc>
   13628:	ldrb	r0, [r2]
   1362c:	cmp	r0, #46	; 0x2e
   13630:	beq	1364c <main@@Base+0x2a8>
   13634:	cmp	r0, #34	; 0x22
   13638:	bne	13670 <main@@Base+0x2cc>
   1363c:	ldr	r0, [sp, #32]
   13640:	mov	r1, #0
   13644:	add	r9, r2, #1
   13648:	b	1367c <main@@Base+0x2d8>
   1364c:	mov	r1, r2
   13650:	mov	r0, r8
   13654:	mov	r2, r5
   13658:	mov	r3, #5
   1365c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   13660:	movw	lr, #29556	; 0x7374
   13664:	mov	r9, r0
   13668:	movt	lr, #29797	; 0x7465
   1366c:	b	13680 <main@@Base+0x2dc>
   13670:	ldr	r0, [sp, #32]
   13674:	mov	r1, #1
   13678:	mov	r9, r2
   1367c:	str	r1, [r0]
   13680:	sub	r8, r5, r9
   13684:	mov	r0, #8
   13688:	cmp	r8, #8
   1368c:	movcc	r0, r8
   13690:	and	r0, r0, #15
   13694:	sub	r0, r0, #1
   13698:	cmp	r0, #7
   1369c:	bhi	14974 <main@@Base+0x15d0>
   136a0:	add	r7, pc, #36	; 0x24
   136a4:	mov	sl, #0
   136a8:	mov	ip, #0
   136ac:	mov	r4, #0
   136b0:	mov	r1, #0
   136b4:	mov	r2, #0
   136b8:	mov	r3, #0
   136bc:	mov	r6, #0
   136c0:	mov	r5, #0
   136c4:	ldr	r0, [r7, r0, lsl #2]
   136c8:	add	pc, r7, r0
   136cc:	andeq	r0, r0, r4, rrx
   136d0:	andeq	r0, r0, ip, asr r0
   136d4:	andeq	r0, r0, r4, asr r0
   136d8:	andeq	r0, r0, ip, asr #32
   136dc:	andeq	r0, r0, r0, asr #32
   136e0:	andeq	r0, r0, r4, lsr r0
   136e4:	andeq	r0, r0, r4, lsr #32
   136e8:	andeq	r0, r0, r0, lsr #32
   136ec:	ldrb	ip, [r9, #7]
   136f0:	ldrb	r0, [r9, #6]
   136f4:	mov	r4, sl
   136f8:	orr	r0, ip, r0, lsl #8
   136fc:	mov	sl, r0
   13700:	ldrb	r0, [r9, #5]
   13704:	mov	r1, r4
   13708:	orr	sl, sl, r0, lsl #16
   1370c:	ldrb	r0, [r9, #4]
   13710:	mov	r2, r1
   13714:	orr	sl, sl, r0, lsl #24
   13718:	ldrb	r0, [r9, #3]
   1371c:	orr	r3, r0, r2
   13720:	ldrb	r0, [r9, #2]
   13724:	orr	r6, r3, r0, lsl #8
   13728:	ldrb	r0, [r9, #1]
   1372c:	orr	r5, r6, r0, lsl #16
   13730:	ldrb	r0, [r9]
   13734:	movw	r1, #29281	; 0x7261
   13738:	movt	r1, #24946	; 0x6172
   1373c:	subs	r1, sl, r1
   13740:	orr	r0, r5, r0, lsl #24
   13744:	sbcs	r1, r0, lr
   13748:	bcs	137f4 <main@@Base+0x450>
   1374c:	movw	r1, #28004	; 0x6d64
   13750:	movt	r1, #28257	; 0x6e61
   13754:	cmp	r0, r1
   13758:	bhi	1397c <main@@Base+0x5d8>
   1375c:	ldr	r5, [sp, #44]	; 0x2c
   13760:	movw	r1, #25975	; 0x6577
   13764:	movt	r1, #26220	; 0x666c
   13768:	cmp	r0, r1
   1376c:	bhi	13a90 <main@@Base+0x6ec>
   13770:	movw	r1, #27759	; 0x6c6f
   13774:	movt	r1, #25455	; 0x636f
   13778:	eor	r2, r0, r1
   1377c:	and	r1, sl, #-16777216	; 0xff000000
   13780:	eor	r3, r1, #1912602624	; 0x72000000
   13784:	orrs	r2, r3, r2
   13788:	beq	14370 <main@@Base+0xfcc>
   1378c:	movw	r2, #25965	; 0x656d
   13790:	ldr	sl, [sp, #36]	; 0x24
   13794:	eor	r1, r1, #2030043136	; 0x79000000
   13798:	movt	r2, #25966	; 0x656e
   1379c:	eor	r0, r0, r2
   137a0:	orrs	r0, r1, r0
   137a4:	bne	14974 <main@@Base+0x15d0>
   137a8:	cmp	r8, #6
   137ac:	ldr	r8, [sp, #40]	; 0x28
   137b0:	mov	r1, r9
   137b4:	blt	15be0 <main@@Base+0x283c>
   137b8:	ldr	r1, [sp, #32]
   137bc:	mov	r2, r9
   137c0:	ldrb	r0, [r2, #5]!
   137c4:	ldr	r1, [r1]
   137c8:	cmp	r1, #0
   137cc:	beq	14b14 <main@@Base+0x1770>
   137d0:	cmp	r0, #33	; 0x21
   137d4:	bcc	137e4 <main@@Base+0x440>
   137d8:	cmp	r0, #58	; 0x3a
   137dc:	mov	r1, r9
   137e0:	bne	15be0 <main@@Base+0x283c>
   137e4:	ldr	r0, [sp, #32]
   137e8:	mov	r1, #0
   137ec:	str	r1, [r0]
   137f0:	b	14b24 <main@@Base+0x1780>
   137f4:	movw	r1, #0
   137f8:	movt	r1, #26163	; 0x6633
   137fc:	subs	r1, sl, r1
   13800:	sbcs	r1, r0, lr
   13804:	bcs	13a0c <main@@Base+0x668>
   13808:	movw	r1, #29281	; 0x7261
   1380c:	ldr	r5, [sp, #44]	; 0x2c
   13810:	movt	r1, #24946	; 0x6172
   13814:	eor	r2, sl, r1
   13818:	eor	r1, r0, lr
   1381c:	orrs	r2, r2, r1
   13820:	bne	13b10 <main@@Base+0x76c>
   13824:	add	sl, r9, #8
   13828:	mov	r0, #8
   1382c:	sub	ip, r5, sl
   13830:	cmp	ip, #8
   13834:	movcc	r0, ip
   13838:	and	r0, r0, #15
   1383c:	sub	r0, r0, #1
   13840:	cmp	r0, #7
   13844:	bhi	1582c <main@@Base+0x2488>
   13848:	add	r2, pc, #36	; 0x24
   1384c:	mov	r1, #0
   13850:	mov	lr, #0
   13854:	mov	r8, #0
   13858:	mov	r6, #0
   1385c:	mov	r3, #0
   13860:	mov	r4, #0
   13864:	mov	r7, #0
   13868:	ldr	r5, [r2, r0, lsl #2]
   1386c:	mov	r0, #0
   13870:	add	pc, r2, r5
   13874:	andeq	r0, r0, r4, rrx
   13878:	andeq	r0, r0, ip, asr r0
   1387c:	andeq	r0, r0, r4, asr r0
   13880:	andeq	r0, r0, ip, asr #32
   13884:	andeq	r0, r0, r0, asr #32
   13888:	andeq	r0, r0, r4, lsr r0
   1388c:	andeq	r0, r0, r4, lsr #32
   13890:	andeq	r0, r0, r0, lsr #32
   13894:	ldrb	lr, [r9, #15]
   13898:	ldrb	r0, [r9, #14]
   1389c:	mov	r8, r1
   138a0:	orr	r0, lr, r0, lsl #8
   138a4:	mov	r1, r0
   138a8:	ldrb	r0, [r9, #13]
   138ac:	mov	r6, r8
   138b0:	orr	r1, r1, r0, lsl #16
   138b4:	ldrb	r0, [r9, #12]
   138b8:	mov	r3, r6
   138bc:	orr	r1, r1, r0, lsl #24
   138c0:	ldrb	r0, [r9, #11]
   138c4:	orr	r4, r0, r3
   138c8:	ldrb	r0, [r9, #10]
   138cc:	orr	r7, r4, r0, lsl #8
   138d0:	ldrb	r0, [r9, #9]
   138d4:	orr	r0, r7, r0, lsl #16
   138d8:	ldrb	r2, [sl]
   138dc:	movw	r7, #26227	; 0x6673
   138e0:	movt	r7, #31087	; 0x796f
   138e4:	orr	r2, r0, r2, lsl #24
   138e8:	movw	r0, #26989	; 0x696d
   138ec:	movt	r0, #29810	; 0x7472
   138f0:	subs	r0, r0, r1
   138f4:	sbcs	r0, r7, r2
   138f8:	bcc	142a0 <main@@Base+0xefc>
   138fc:	movw	r0, #29797	; 0x7465
   13900:	ldr	r5, [sp, #44]	; 0x2c
   13904:	eor	r3, r2, r7
   13908:	movt	r0, #28530	; 0x6f72
   1390c:	eor	r0, r1, r0
   13910:	orrs	r0, r0, r3
   13914:	beq	14768 <main@@Base+0x13c4>
   13918:	movw	r0, #27763	; 0x6c73
   1391c:	movt	r0, #28527	; 0x6f6f
   13920:	eor	r0, r1, r0
   13924:	movw	r1, #26210	; 0x6662
   13928:	movt	r1, #31087	; 0x796f
   1392c:	eor	r1, r2, r1
   13930:	orrs	r0, r0, r1
   13934:	bne	1582c <main@@Base+0x2488>
   13938:	cmp	ip, #9
   1393c:	blt	1582c <main@@Base+0x2488>
   13940:	ldr	r2, [sp, #32]
   13944:	mov	r1, r9
   13948:	ldrb	r0, [r1, #16]!
   1394c:	ldr	r2, [r2]
   13950:	cmp	r2, #0
   13954:	beq	14e38 <main@@Base+0x1a94>
   13958:	cmp	r0, #33	; 0x21
   1395c:	bcc	13968 <main@@Base+0x5c4>
   13960:	cmp	r0, #58	; 0x3a
   13964:	bne	1582c <main@@Base+0x2488>
   13968:	ldr	r0, [sp, #32]
   1396c:	mov	r2, #0
   13970:	str	r2, [r0]
   13974:	b	14e44 <main@@Base+0x1aa0>
   13978:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1397c:	ldr	r5, [sp, #44]	; 0x2c
   13980:	movw	r1, #29555	; 0x7373
   13984:	movt	r1, #29797	; 0x7465
   13988:	cmp	r0, r1
   1398c:	bhi	13be0 <main@@Base+0x83c>
   13990:	movw	r3, #24430	; 0x5f6e
   13994:	movw	r2, #29285	; 0x7265
   13998:	movt	r3, #28276	; 0x6e74
   1399c:	movt	r2, #28769	; 0x7061
   139a0:	subs	r1, sl, r3
   139a4:	sbcs	r1, r0, r2
   139a8:	bcs	13d80 <main@@Base+0x9dc>
   139ac:	movw	r1, #28005	; 0x6d65
   139b0:	movt	r1, #28257	; 0x6e61
   139b4:	teq	r0, r1
   139b8:	bne	16710 <main@@Base+0x336c>
   139bc:	cmp	r8, #5
   139c0:	ldr	r8, [sp, #40]	; 0x28
   139c4:	ldr	sl, [sp, #36]	; 0x24
   139c8:	mov	r1, r9
   139cc:	blt	15e48 <main@@Base+0x2aa4>
   139d0:	ldr	r1, [sp, #32]
   139d4:	mov	r2, r9
   139d8:	ldrb	r0, [r2, #4]!
   139dc:	ldr	r1, [r1]
   139e0:	cmp	r1, #0
   139e4:	beq	14bf4 <main@@Base+0x1850>
   139e8:	cmp	r0, #33	; 0x21
   139ec:	bcc	139fc <main@@Base+0x658>
   139f0:	cmp	r0, #58	; 0x3a
   139f4:	mov	r1, r9
   139f8:	bne	15e48 <main@@Base+0x2aa4>
   139fc:	ldr	r0, [sp, #32]
   13a00:	mov	r1, #0
   13a04:	str	r1, [r0]
   13a08:	b	14c04 <main@@Base+0x1860>
   13a0c:	movw	r2, #29544	; 0x7368
   13a10:	ldr	r5, [sp, #44]	; 0x2c
   13a14:	movt	r2, #26721	; 0x6861
   13a18:	subs	r1, sl, r2
   13a1c:	sbcs	r1, r0, lr
   13a20:	bcs	13c3c <main@@Base+0x898>
   13a24:	movw	r1, #0
   13a28:	bfc	sl, #0, #16
   13a2c:	eor	r0, r0, lr
   13a30:	movt	r1, #26163	; 0x6633
   13a34:	eor	r1, sl, r1
   13a38:	orrs	r0, r1, r0
   13a3c:	bne	16710 <main@@Base+0x336c>
   13a40:	cmp	r8, #7
   13a44:	ldr	r8, [sp, #40]	; 0x28
   13a48:	ldr	sl, [sp, #36]	; 0x24
   13a4c:	mov	r7, r9
   13a50:	blt	1549c <main@@Base+0x20f8>
   13a54:	ldr	r2, [sp, #32]
   13a58:	mov	r1, r9
   13a5c:	ldrb	r0, [r1, #6]!
   13a60:	ldr	r2, [r2]
   13a64:	cmp	r2, #0
   13a68:	beq	14a4c <main@@Base+0x16a8>
   13a6c:	cmp	r0, #33	; 0x21
   13a70:	bcc	13a80 <main@@Base+0x6dc>
   13a74:	cmp	r0, #58	; 0x3a
   13a78:	mov	r7, r9
   13a7c:	bne	1549c <main@@Base+0x20f8>
   13a80:	ldr	r0, [sp, #32]
   13a84:	mov	r2, #0
   13a88:	str	r2, [r0]
   13a8c:	b	14a5c <main@@Base+0x16b8>
   13a90:	movw	r1, #65535	; 0xffff
   13a94:	movw	r2, #30309	; 0x7665
   13a98:	movw	r3, #28530	; 0x6f72
   13a9c:	movt	r1, #26735	; 0x686f
   13aa0:	movt	r2, #26990	; 0x696e
   13aa4:	movt	r3, #28276	; 0x6e74
   13aa8:	cmp	r0, r1
   13aac:	bhi	13f64 <main@@Base+0xbc0>
   13ab0:	movw	r1, #25976	; 0x6578
   13ab4:	movt	r1, #26220	; 0x666c
   13ab8:	teq	r0, r1
   13abc:	bne	16710 <main@@Base+0x336c>
   13ac0:	cmp	r8, #5
   13ac4:	ldr	r8, [sp, #40]	; 0x28
   13ac8:	ldr	sl, [sp, #36]	; 0x24
   13acc:	mov	r4, r9
   13ad0:	blt	15e9c <main@@Base+0x2af8>
   13ad4:	ldr	r2, [sp, #32]
   13ad8:	mov	r1, r9
   13adc:	ldrb	r0, [r1, #4]!
   13ae0:	ldr	r2, [r2]
   13ae4:	cmp	r2, #0
   13ae8:	beq	14c2c <main@@Base+0x1888>
   13aec:	cmp	r0, #33	; 0x21
   13af0:	bcc	13b00 <main@@Base+0x75c>
   13af4:	cmp	r0, #58	; 0x3a
   13af8:	mov	r4, r9
   13afc:	bne	15e9c <main@@Base+0x2af8>
   13b00:	ldr	r0, [sp, #32]
   13b04:	mov	r2, #0
   13b08:	str	r2, [r0]
   13b0c:	b	14c3c <main@@Base+0x1898>
   13b10:	movw	r2, #28788	; 0x7074
   13b14:	movt	r2, #25965	; 0x656d
   13b18:	subs	r2, sl, r2
   13b1c:	sbcs	r2, r0, lr
   13b20:	bcs	13fd4 <main@@Base+0xc30>
   13b24:	movw	r0, #28524	; 0x6f6c
   13b28:	movt	r0, #25199	; 0x626f
   13b2c:	eor	r0, sl, r0
   13b30:	orrs	r0, r0, r1
   13b34:	beq	14718 <main@@Base+0x1374>
   13b38:	movw	r0, #29541	; 0x7365
   13b3c:	movt	r0, #25185	; 0x6261
   13b40:	eor	r0, sl, r0
   13b44:	orrs	r0, r0, r1
   13b48:	bne	16710 <main@@Base+0x336c>
   13b4c:	add	r7, r9, #8
   13b50:	mov	r1, #8
   13b54:	ldr	r8, [sp, #40]	; 0x28
   13b58:	ldr	sl, [sp, #36]	; 0x24
   13b5c:	sub	r0, r5, r7
   13b60:	cmp	r0, #8
   13b64:	movcc	r1, r0
   13b68:	and	r2, r1, #15
   13b6c:	sub	r1, r2, #2
   13b70:	cmp	r1, #7
   13b74:	bcs	14c9c <main@@Base+0x18f8>
   13b78:	ldrb	r1, [r9, #9]
   13b7c:	lsl	r2, r1, #16
   13b80:	mov	r1, #0
   13b84:	ldrb	r3, [r7]
   13b88:	orr	r2, r2, r3, lsl #24
   13b8c:	movw	r3, #0
   13b90:	movt	r3, #13876	; 0x3634
   13b94:	eor	r2, r2, r3
   13b98:	orrs	r1, r1, r2
   13b9c:	bne	1abfc <main@@Base+0x7858>
   13ba0:	cmp	r0, #3
   13ba4:	blt	1abfc <main@@Base+0x7858>
   13ba8:	ldr	r2, [sp, #32]
   13bac:	mov	r1, r9
   13bb0:	ldrb	r0, [r1, #10]!
   13bb4:	ldr	r2, [r2]
   13bb8:	cmp	r2, #0
   13bbc:	beq	15244 <main@@Base+0x1ea0>
   13bc0:	cmp	r0, #33	; 0x21
   13bc4:	bcc	13bd0 <main@@Base+0x82c>
   13bc8:	cmp	r0, #58	; 0x3a
   13bcc:	bne	1abfc <main@@Base+0x7858>
   13bd0:	ldr	r0, [sp, #32]
   13bd4:	mov	r2, #0
   13bd8:	str	r2, [r0]
   13bdc:	b	15250 <main@@Base+0x1eac>
   13be0:	and	r6, sl, #-16777216	; 0xff000000
   13be4:	eor	r4, r0, lr
   13be8:	eor	r1, r6, #872415232	; 0x34000000
   13bec:	orrs	r1, r1, r4
   13bf0:	bne	14074 <main@@Base+0xcd0>
   13bf4:	cmp	r8, #6
   13bf8:	mov	r7, r9
   13bfc:	blt	1555c <main@@Base+0x21b8>
   13c00:	ldr	r2, [sp, #32]
   13c04:	mov	r1, r9
   13c08:	ldrb	r0, [r1, #5]!
   13c0c:	ldr	r2, [r2]
   13c10:	cmp	r2, #0
   13c14:	beq	14a84 <main@@Base+0x16e0>
   13c18:	cmp	r0, #33	; 0x21
   13c1c:	bcc	13c2c <main@@Base+0x888>
   13c20:	cmp	r0, #58	; 0x3a
   13c24:	mov	r7, r9
   13c28:	bne	1555c <main@@Base+0x21b8>
   13c2c:	ldr	r0, [sp, #32]
   13c30:	mov	r2, #0
   13c34:	str	r2, [r0]
   13c38:	b	14a94 <main@@Base+0x16f0>
   13c3c:	eor	r2, sl, r2
   13c40:	eor	r1, r0, lr
   13c44:	orrs	r2, r2, r1
   13c48:	bne	140c4 <main@@Base+0xd20>
   13c4c:	add	sl, r9, #8
   13c50:	mov	r0, #8
   13c54:	sub	ip, r5, sl
   13c58:	cmp	ip, #8
   13c5c:	movcc	r0, ip
   13c60:	and	r0, r0, #15
   13c64:	sub	r0, r0, #1
   13c68:	cmp	r0, #7
   13c6c:	bhi	1582c <main@@Base+0x2488>
   13c70:	add	r2, pc, #36	; 0x24
   13c74:	mov	r1, #0
   13c78:	mov	lr, #0
   13c7c:	mov	r8, #0
   13c80:	mov	r7, #0
   13c84:	mov	r3, #0
   13c88:	mov	r6, #0
   13c8c:	mov	r4, #0
   13c90:	ldr	r5, [r2, r0, lsl #2]
   13c94:	mov	r0, #0
   13c98:	add	pc, r2, r5
   13c9c:	andeq	r0, r0, r4, rrx
   13ca0:	andeq	r0, r0, ip, asr r0
   13ca4:	andeq	r0, r0, r4, asr r0
   13ca8:	andeq	r0, r0, ip, asr #32
   13cac:	andeq	r0, r0, r0, asr #32
   13cb0:	andeq	r0, r0, r4, lsr r0
   13cb4:	andeq	r0, r0, r4, lsr #32
   13cb8:	andeq	r0, r0, r0, lsr #32
   13cbc:	ldrb	lr, [r9, #15]
   13cc0:	ldrb	r0, [r9, #14]
   13cc4:	mov	r8, r1
   13cc8:	orr	r0, lr, r0, lsl #8
   13ccc:	mov	r1, r0
   13cd0:	ldrb	r0, [r9, #13]
   13cd4:	mov	r7, r8
   13cd8:	orr	r1, r1, r0, lsl #16
   13cdc:	ldrb	r0, [r9, #12]
   13ce0:	mov	r3, r7
   13ce4:	orr	r1, r1, r0, lsl #24
   13ce8:	ldrb	r0, [r9, #11]
   13cec:	orr	r6, r0, r3
   13cf0:	ldrb	r0, [r9, #10]
   13cf4:	orr	r4, r6, r0, lsl #8
   13cf8:	ldrb	r0, [r9, #9]
   13cfc:	orr	r0, r4, r0, lsl #16
   13d00:	ldrb	r2, [sl]
   13d04:	movw	r3, #30257	; 0x7631
   13d08:	movt	r3, #26222	; 0x666e
   13d0c:	orr	r2, r0, r2, lsl #24
   13d10:	subs	r0, r1, r3
   13d14:	movw	r0, #13407	; 0x345f
   13d18:	movt	r0, #29494	; 0x7336
   13d1c:	sbcs	r0, r2, r0
   13d20:	bcs	14694 <main@@Base+0x12f0>
   13d24:	eor	r0, r1, r3
   13d28:	ldr	r1, [sp, #24]
   13d2c:	ldr	r5, [sp, #44]	; 0x2c
   13d30:	eor	r1, r2, r1
   13d34:	orrs	r0, r0, r1
   13d38:	bne	1582c <main@@Base+0x2488>
   13d3c:	ldr	r8, [sp, #40]	; 0x28
   13d40:	cmp	ip, #9
   13d44:	blt	15b2c <main@@Base+0x2788>
   13d48:	ldr	r2, [sp, #32]
   13d4c:	mov	r1, r9
   13d50:	ldrb	r0, [r1, #16]!
   13d54:	ldr	r2, [r2]
   13d58:	cmp	r2, #0
   13d5c:	beq	14f18 <main@@Base+0x1b74>
   13d60:	cmp	r0, #33	; 0x21
   13d64:	bcc	13d70 <main@@Base+0x9cc>
   13d68:	cmp	r0, #58	; 0x3a
   13d6c:	bne	15b2c <main@@Base+0x2788>
   13d70:	ldr	r0, [sp, #32]
   13d74:	mov	r2, #0
   13d78:	str	r2, [r0]
   13d7c:	b	14f24 <main@@Base+0x1b80>
   13d80:	eor	r1, sl, r3
   13d84:	eor	r2, r0, r2
   13d88:	orrs	r1, r1, r2
   13d8c:	bne	143c0 <main@@Base+0x101c>
   13d90:	add	r1, r9, #8
   13d94:	mov	r2, #8
   13d98:	ldr	sl, [sp, #36]	; 0x24
   13d9c:	sub	r0, r5, r1
   13da0:	cmp	r0, #8
   13da4:	movcs	r0, r2
   13da8:	and	r0, r0, #15
   13dac:	sub	r2, r0, #1
   13db0:	cmp	r2, #7
   13db4:	bhi	14908 <main@@Base+0x1564>
   13db8:	add	r4, pc, #36	; 0x24
   13dbc:	mov	r8, #0
   13dc0:	mov	ip, #0
   13dc4:	mov	lr, #0
   13dc8:	mov	r7, #0
   13dcc:	mov	r3, #0
   13dd0:	mov	r6, #0
   13dd4:	mov	r5, #0
   13dd8:	ldr	r0, [r4, r2, lsl #2]
   13ddc:	mov	r2, #0
   13de0:	add	pc, r4, r0
   13de4:	andeq	r0, r0, r4, rrx
   13de8:	andeq	r0, r0, ip, asr r0
   13dec:	andeq	r0, r0, r4, asr r0
   13df0:	andeq	r0, r0, ip, asr #32
   13df4:	andeq	r0, r0, r0, asr #32
   13df8:	andeq	r0, r0, r4, lsr r0
   13dfc:	andeq	r0, r0, r4, lsr #32
   13e00:	andeq	r0, r0, r0, lsr #32
   13e04:	ldrb	ip, [r9, #15]
   13e08:	ldrb	r0, [r9, #14]
   13e0c:	mov	lr, r8
   13e10:	orr	r0, ip, r0, lsl #8
   13e14:	mov	r8, r0
   13e18:	ldrb	r0, [r9, #13]
   13e1c:	mov	r7, lr
   13e20:	orr	r8, r8, r0, lsl #16
   13e24:	ldrb	r0, [r9, #12]
   13e28:	mov	r3, r7
   13e2c:	orr	r8, r8, r0, lsl #24
   13e30:	ldrb	r0, [r9, #11]
   13e34:	orr	r6, r0, r3
   13e38:	ldrb	r0, [r9, #10]
   13e3c:	orr	r5, r6, r0, lsl #8
   13e40:	ldrb	r0, [r9, #9]
   13e44:	orr	r2, r5, r0, lsl #16
   13e48:	ldrb	r3, [r1]
   13e4c:	movw	r0, #25445	; 0x6365
   13e50:	ldr	r5, [sp, #44]	; 0x2c
   13e54:	movt	r0, #28769	; 0x7061
   13e58:	eor	r0, r8, r0
   13e5c:	orr	r2, r2, r3, lsl #24
   13e60:	movw	r3, #25971	; 0x6573
   13e64:	movt	r3, #24941	; 0x616d
   13e68:	eor	r2, r2, r3
   13e6c:	orrs	r0, r0, r2
   13e70:	bne	14908 <main@@Base+0x1564>
   13e74:	add	r8, r9, #16
   13e78:	mov	r1, #8
   13e7c:	sub	r0, r5, r8
   13e80:	cmp	r0, #8
   13e84:	movcc	r1, r0
   13e88:	and	r1, r1, #15
   13e8c:	sub	r2, r1, #1
   13e90:	cmp	r2, #7
   13e94:	bhi	16c40 <main@@Base+0x389c>
   13e98:	add	r4, pc, #24
   13e9c:	mov	r1, #0
   13ea0:	mov	r3, #0
   13ea4:	mov	r6, #0
   13ea8:	mov	r5, #0
   13eac:	ldr	r7, [r4, r2, lsl #2]
   13eb0:	mov	r2, #0
   13eb4:	add	pc, r4, r7
   13eb8:	andeq	r0, r0, r4, asr #32
   13ebc:	andeq	r0, r0, ip, lsr r0
   13ec0:	andeq	r0, r0, r4, lsr r0
   13ec4:	andeq	r0, r0, r8, lsr #32
   13ec8:	andeq	r0, r0, r0, lsr #32
   13ecc:	andeq	r0, r0, r0, lsr #32
   13ed0:	andeq	r0, r0, r0, lsr #32
   13ed4:	andeq	r0, r0, r0, lsr #32
   13ed8:	ldrb	r2, [r9, #20]
   13edc:	lsl	r2, r2, #24
   13ee0:	ldrb	r3, [r9, #19]
   13ee4:	orr	r3, r3, r1
   13ee8:	mov	r1, r2
   13eec:	ldrb	r2, [r9, #18]
   13ef0:	orr	r6, r3, r2, lsl #8
   13ef4:	ldrb	r2, [r9, #17]
   13ef8:	orr	r5, r6, r2, lsl #16
   13efc:	ldrb	r2, [r8]
   13f00:	movw	r3, #25971	; 0x6573
   13f04:	and	r1, r1, #-16777216	; 0xff000000
   13f08:	movt	r3, #24436	; 0x5f74
   13f0c:	eor	r1, r1, #1946157056	; 0x74000000
   13f10:	orr	r2, r5, r2, lsl #24
   13f14:	ldr	r5, [sp, #44]	; 0x2c
   13f18:	eor	r2, r2, r3
   13f1c:	orrs	r1, r1, r2
   13f20:	bne	16c40 <main@@Base+0x389c>
   13f24:	cmp	r0, #6
   13f28:	blt	16c40 <main@@Base+0x389c>
   13f2c:	ldr	r2, [sp, #32]
   13f30:	mov	r1, r9
   13f34:	ldrb	r0, [r1, #21]!
   13f38:	ldr	r2, [r2]
   13f3c:	cmp	r2, #0
   13f40:	beq	15798 <main@@Base+0x23f4>
   13f44:	cmp	r0, #33	; 0x21
   13f48:	bcc	13f54 <main@@Base+0xbb0>
   13f4c:	cmp	r0, #58	; 0x3a
   13f50:	bne	16c40 <main@@Base+0x389c>
   13f54:	ldr	r0, [sp, #32]
   13f58:	mov	r2, #0
   13f5c:	str	r2, [r0]
   13f60:	b	157a4 <main@@Base+0x2400>
   13f64:	subs	r1, sl, r3
   13f68:	sbcs	r1, r0, r2
   13f6c:	bcs	14424 <main@@Base+0x1080>
   13f70:	movw	r1, #0
   13f74:	bfc	r0, #0, #16
   13f78:	movt	r1, #26736	; 0x6870
   13f7c:	teq	r0, r1
   13f80:	bne	16710 <main@@Base+0x336c>
   13f84:	cmp	r8, #3
   13f88:	ldr	r8, [sp, #40]	; 0x28
   13f8c:	ldr	sl, [sp, #36]	; 0x24
   13f90:	mov	r7, r9
   13f94:	blt	16e0c <main@@Base+0x3a68>
   13f98:	ldr	r2, [sp, #32]
   13f9c:	mov	r1, r9
   13fa0:	ldrb	r0, [r1, #2]!
   13fa4:	ldr	r2, [r2]
   13fa8:	cmp	r2, #0
   13fac:	beq	14e70 <main@@Base+0x1acc>
   13fb0:	cmp	r0, #33	; 0x21
   13fb4:	bcc	13fc4 <main@@Base+0xc20>
   13fb8:	cmp	r0, #58	; 0x3a
   13fbc:	mov	r7, r9
   13fc0:	bne	16e0c <main@@Base+0x3a68>
   13fc4:	ldr	r0, [sp, #32]
   13fc8:	mov	r2, #0
   13fcc:	str	r2, [r0]
   13fd0:	b	14e80 <main@@Base+0x1adc>
   13fd4:	mvn	r2, #-1711276032	; 0x9a000000
   13fd8:	subs	r2, r2, sl
   13fdc:	sbcs	r2, lr, r0
   13fe0:	bcc	144b0 <main@@Base+0x110c>
   13fe4:	movw	r0, #28788	; 0x7074
   13fe8:	movt	r0, #25965	; 0x656d
   13fec:	eor	r0, sl, r0
   13ff0:	orrs	r0, r0, r1
   13ff4:	bne	16710 <main@@Base+0x336c>
   13ff8:	add	r7, r9, #8
   13ffc:	mov	r1, #8
   14000:	mov	r2, #-268435456	; 0xf0000000
   14004:	ldr	r8, [sp, #40]	; 0x28
   14008:	ldr	sl, [sp, #36]	; 0x24
   1400c:	sub	r0, r5, r7
   14010:	cmp	r0, #8
   14014:	movcc	r1, r0
   14018:	add	r1, r2, r1, lsl #28
   1401c:	asr	r1, r1, #28
   14020:	cmp	r1, #0
   14024:	blt	1abfc <main@@Base+0x7858>
   14028:	ldrb	r1, [r7]
   1402c:	cmp	r1, #121	; 0x79
   14030:	bne	1abfc <main@@Base+0x7858>
   14034:	cmp	r0, #2
   14038:	blt	1abfc <main@@Base+0x7858>
   1403c:	ldr	r2, [sp, #32]
   14040:	mov	r1, r9
   14044:	ldrb	r0, [r1, #9]!
   14048:	ldr	r2, [r2]
   1404c:	cmp	r2, #0
   14050:	beq	159fc <main@@Base+0x2658>
   14054:	cmp	r0, #33	; 0x21
   14058:	bcc	14064 <main@@Base+0xcc0>
   1405c:	cmp	r0, #58	; 0x3a
   14060:	bne	1abfc <main@@Base+0x7858>
   14064:	ldr	r0, [sp, #32]
   14068:	mov	r2, #0
   1406c:	str	r2, [r0]
   14070:	b	15a08 <main@@Base+0x2664>
   14074:	teq	r0, lr
   14078:	bne	151a0 <main@@Base+0x1dfc>
   1407c:	cmp	r8, #5
   14080:	mov	r1, r9
   14084:	blt	16208 <main@@Base+0x2e64>
   14088:	ldr	r1, [sp, #32]
   1408c:	mov	r2, r9
   14090:	ldrb	r0, [r2, #4]!
   14094:	ldr	r1, [r1]
   14098:	cmp	r1, #0
   1409c:	beq	14c64 <main@@Base+0x18c0>
   140a0:	cmp	r0, #33	; 0x21
   140a4:	bcc	140b4 <main@@Base+0xd10>
   140a8:	cmp	r0, #58	; 0x3a
   140ac:	mov	r1, r9
   140b0:	bne	16208 <main@@Base+0x2e64>
   140b4:	ldr	r0, [sp, #32]
   140b8:	mov	r1, #0
   140bc:	str	r1, [r0]
   140c0:	b	14c74 <main@@Base+0x18d0>
   140c4:	movw	r7, #24431	; 0x5f6f
   140c8:	ldr	r8, [sp, #40]	; 0x28
   140cc:	movw	r3, #25460	; 0x6374
   140d0:	movt	r7, #28530	; 0x6f72
   140d4:	movt	r3, #30309	; 0x7665
   140d8:	subs	r2, sl, r7
   140dc:	sbcs	r2, r0, r3
   140e0:	bcs	14528 <main@@Base+0x1184>
   140e4:	movw	r0, #29556	; 0x7374
   140e8:	movt	r0, #28261	; 0x6e65
   140ec:	eor	r0, sl, r0
   140f0:	orrs	r0, r0, r1
   140f4:	bne	16714 <main@@Base+0x3370>
   140f8:	add	r1, r9, #8
   140fc:	mov	r2, #8
   14100:	ldr	sl, [sp, #36]	; 0x24
   14104:	sub	r0, r5, r1
   14108:	cmp	r0, #8
   1410c:	movcs	r0, r2
   14110:	and	r0, r0, #15
   14114:	sub	r2, r0, #1
   14118:	cmp	r2, #7
   1411c:	bhi	1490c <main@@Base+0x1568>
   14120:	add	r5, pc, #36	; 0x24
   14124:	mov	r8, #0
   14128:	mov	ip, #0
   1412c:	mov	lr, #0
   14130:	mov	r7, #0
   14134:	mov	r3, #0
   14138:	mov	r6, #0
   1413c:	mov	r4, #0
   14140:	ldr	r0, [r5, r2, lsl #2]
   14144:	mov	r2, #0
   14148:	add	pc, r5, r0
   1414c:	andeq	r0, r0, r4, rrx
   14150:	andeq	r0, r0, ip, asr r0
   14154:	andeq	r0, r0, r4, asr r0
   14158:	andeq	r0, r0, ip, asr #32
   1415c:	andeq	r0, r0, r0, asr #32
   14160:	andeq	r0, r0, r4, lsr r0
   14164:	andeq	r0, r0, r4, lsr #32
   14168:	andeq	r0, r0, r0, lsr #32
   1416c:	ldrb	ip, [r9, #15]
   14170:	ldrb	r0, [r9, #14]
   14174:	mov	lr, r8
   14178:	orr	r0, ip, r0, lsl #8
   1417c:	mov	r8, r0
   14180:	ldrb	r0, [r9, #13]
   14184:	mov	r7, lr
   14188:	orr	r8, r8, r0, lsl #16
   1418c:	ldrb	r0, [r9, #12]
   14190:	mov	r3, r7
   14194:	orr	r8, r8, r0, lsl #24
   14198:	ldrb	r0, [r9, #11]
   1419c:	orr	r6, r0, r3
   141a0:	ldrb	r0, [r9, #10]
   141a4:	orr	r4, r6, r0, lsl #8
   141a8:	ldrb	r0, [r9, #9]
   141ac:	orr	r2, r4, r0, lsl #16
   141b0:	ldrb	r3, [r1]
   141b4:	movw	r0, #25205	; 0x6275
   141b8:	ldr	r5, [sp, #44]	; 0x2c
   141bc:	movt	r0, #24948	; 0x6174
   141c0:	eor	r0, r8, r0
   141c4:	ldr	r8, [sp, #40]	; 0x28
   141c8:	orr	r2, r2, r3, lsl #24
   141cc:	movw	r3, #26220	; 0x666c
   141d0:	movt	r3, #25956	; 0x6564
   141d4:	eor	r2, r2, r3
   141d8:	orrs	r0, r0, r2
   141dc:	bne	1490c <main@@Base+0x1568>
   141e0:	add	r7, r9, #16
   141e4:	mov	r1, #8
   141e8:	sub	r0, r5, r7
   141ec:	cmp	r0, #8
   141f0:	movcc	r1, r0
   141f4:	and	r1, r1, #15
   141f8:	sub	r2, r1, #1
   141fc:	cmp	r2, #7
   14200:	bhi	1abfc <main@@Base+0x7858>
   14204:	add	r3, pc, #8
   14208:	mov	r1, #0
   1420c:	ldr	r2, [r3, r2, lsl #2]
   14210:	add	pc, r3, r2
   14214:	andeq	r0, r0, r4, lsr r0
   14218:	andeq	r0, r0, ip, lsr #32
   1421c:	andeq	r0, r0, r4, lsr #32
   14220:	andeq	r0, r0, r0, lsr #32
   14224:	andeq	r0, r0, r0, lsr #32
   14228:	andeq	r0, r0, r0, lsr #32
   1422c:	andeq	r0, r0, r0, lsr #32
   14230:	andeq	r0, r0, r0, lsr #32
   14234:	ldrb	r1, [r9, #19]
   14238:	ldrb	r2, [r9, #18]
   1423c:	orr	r1, r1, r2, lsl #8
   14240:	ldrb	r2, [r9, #17]
   14244:	orr	r1, r1, r2, lsl #16
   14248:	ldrb	r2, [r7]
   1424c:	orr	r1, r1, r2, lsl #24
   14250:	movw	r2, #25970	; 0x6572
   14254:	movt	r2, #26214	; 0x6666
   14258:	teq	r1, r2
   1425c:	bne	1abfc <main@@Base+0x7858>
   14260:	cmp	r0, #5
   14264:	blt	1abfc <main@@Base+0x7858>
   14268:	ldr	r2, [sp, #32]
   1426c:	mov	r1, r9
   14270:	ldrb	r0, [r1, #20]!
   14274:	ldr	r2, [r2]
   14278:	cmp	r2, #0
   1427c:	beq	16268 <main@@Base+0x2ec4>
   14280:	cmp	r0, #33	; 0x21
   14284:	bcc	14290 <main@@Base+0xeec>
   14288:	cmp	r0, #58	; 0x3a
   1428c:	bne	1abfc <main@@Base+0x7858>
   14290:	ldr	r0, [sp, #32]
   14294:	mov	r2, #0
   14298:	str	r2, [r0]
   1429c:	b	16274 <main@@Base+0x2ed0>
   142a0:	movw	r0, #27749	; 0x6c65
   142a4:	movw	r3, #26228	; 0x6674
   142a8:	ldr	r5, [sp, #44]	; 0x2c
   142ac:	ldr	r8, [sp, #40]	; 0x28
   142b0:	movt	r0, #24930	; 0x6162
   142b4:	movt	r3, #31087	; 0x796f
   142b8:	eor	r0, r1, r0
   142bc:	eor	r3, r2, r3
   142c0:	orrs	r0, r0, r3
   142c4:	beq	14884 <main@@Base+0x14e0>
   142c8:	movw	r0, #26990	; 0x696e
   142cc:	movt	r0, #29810	; 0x7472
   142d0:	eor	r0, r1, r0
   142d4:	eor	r1, r2, r7
   142d8:	orrs	r0, r0, r1
   142dc:	bne	15830 <main@@Base+0x248c>
   142e0:	add	r7, r9, #16
   142e4:	mov	r1, #8
   142e8:	sub	r0, r5, r7
   142ec:	cmp	r0, #8
   142f0:	movcc	r1, r0
   142f4:	and	r2, r1, #15
   142f8:	sub	r1, r2, #2
   142fc:	cmp	r1, #7
   14300:	bcs	14cf0 <main@@Base+0x194c>
   14304:	ldrb	r1, [r9, #17]
   14308:	ldr	sl, [sp, #36]	; 0x24
   1430c:	lsl	r2, r1, #16
   14310:	mov	r1, #0
   14314:	ldrb	r3, [r7]
   14318:	orr	r2, r2, r3, lsl #24
   1431c:	movw	r3, #0
   14320:	movt	r3, #26418	; 0x6732
   14324:	eor	r3, r2, r3
   14328:	orrs	r1, r1, r3
   1432c:	bne	14ac8 <main@@Base+0x1724>
   14330:	cmp	r0, #3
   14334:	blt	1abfc <main@@Base+0x7858>
   14338:	ldr	r2, [sp, #32]
   1433c:	mov	r1, r9
   14340:	ldrb	r0, [r1, #18]!
   14344:	ldr	r2, [r2]
   14348:	cmp	r2, #0
   1434c:	beq	15278 <main@@Base+0x1ed4>
   14350:	cmp	r0, #33	; 0x21
   14354:	bcc	14360 <main@@Base+0xfbc>
   14358:	cmp	r0, #58	; 0x3a
   1435c:	bne	1abfc <main@@Base+0x7858>
   14360:	ldr	r0, [sp, #32]
   14364:	mov	r2, #0
   14368:	str	r2, [r0]
   1436c:	b	15284 <main@@Base+0x1ee0>
   14370:	cmp	r8, #6
   14374:	ldr	r8, [sp, #40]	; 0x28
   14378:	ldr	sl, [sp, #36]	; 0x24
   1437c:	mov	r7, r9
   14380:	blt	15c34 <main@@Base+0x2890>
   14384:	ldr	r2, [sp, #32]
   14388:	mov	r1, r9
   1438c:	ldrb	r0, [r1, #5]!
   14390:	ldr	r2, [r2]
   14394:	cmp	r2, #0
   14398:	beq	14b4c <main@@Base+0x17a8>
   1439c:	cmp	r0, #33	; 0x21
   143a0:	bcc	143b0 <main@@Base+0x100c>
   143a4:	cmp	r0, #58	; 0x3a
   143a8:	mov	r7, r9
   143ac:	bne	15c34 <main@@Base+0x2890>
   143b0:	ldr	r0, [sp, #32]
   143b4:	mov	r2, #0
   143b8:	str	r2, [r0]
   143bc:	b	14b5c <main@@Base+0x17b8>
   143c0:	ldr	sl, [sp, #36]	; 0x24
   143c4:	movw	r1, #29440	; 0x7300
   143c8:	bic	r0, r0, #255	; 0xff
   143cc:	movt	r1, #28783	; 0x706f
   143d0:	teq	r0, r1
   143d4:	bne	14974 <main@@Base+0x15d0>
   143d8:	cmp	r8, #4
   143dc:	ldr	r8, [sp, #40]	; 0x28
   143e0:	mov	r4, r9
   143e4:	blt	16f80 <main@@Base+0x3bdc>
   143e8:	ldr	r2, [sp, #32]
   143ec:	mov	r1, r9
   143f0:	ldrb	r0, [r1, #3]!
   143f4:	ldr	r2, [r2]
   143f8:	cmp	r2, #0
   143fc:	beq	14ea8 <main@@Base+0x1b04>
   14400:	cmp	r0, #33	; 0x21
   14404:	bcc	14414 <main@@Base+0x1070>
   14408:	cmp	r0, #58	; 0x3a
   1440c:	mov	r4, r9
   14410:	bne	16f80 <main@@Base+0x3bdc>
   14414:	ldr	r0, [sp, #32]
   14418:	mov	r2, #0
   1441c:	str	r2, [r0]
   14420:	b	14eb8 <main@@Base+0x1b14>
   14424:	eor	r1, sl, r3
   14428:	eor	r2, r0, r2
   1442c:	orrs	r1, r1, r2
   14430:	bne	14914 <main@@Base+0x1570>
   14434:	add	r7, r9, #8
   14438:	mov	r1, #8
   1443c:	mov	r2, #-268435456	; 0xf0000000
   14440:	ldr	sl, [sp, #36]	; 0x24
   14444:	sub	r0, r5, r7
   14448:	cmp	r0, #8
   1444c:	movcc	r1, r0
   14450:	add	r1, r2, r1, lsl #28
   14454:	asr	r1, r1, #28
   14458:	cmp	r1, #0
   1445c:	blt	14ac0 <main@@Base+0x171c>
   14460:	ldrb	r1, [r7]
   14464:	cmp	r1, #121	; 0x79
   14468:	bne	14ac0 <main@@Base+0x171c>
   1446c:	ldr	r8, [sp, #40]	; 0x28
   14470:	cmp	r0, #2
   14474:	blt	1abfc <main@@Base+0x7858>
   14478:	ldr	r2, [sp, #32]
   1447c:	mov	r1, r9
   14480:	ldrb	r0, [r1, #9]!
   14484:	ldr	r2, [r2]
   14488:	cmp	r2, #0
   1448c:	beq	15a30 <main@@Base+0x268c>
   14490:	cmp	r0, #33	; 0x21
   14494:	bcc	144a0 <main@@Base+0x10fc>
   14498:	cmp	r0, #58	; 0x3a
   1449c:	bne	1abfc <main@@Base+0x7858>
   144a0:	ldr	r0, [sp, #32]
   144a4:	mov	r2, #0
   144a8:	str	r2, [r0]
   144ac:	b	15a3c <main@@Base+0x2698>
   144b0:	movw	r3, #0
   144b4:	mov	r2, sl
   144b8:	movt	r3, #26163	; 0x6633
   144bc:	bfc	r2, #0, #16
   144c0:	subs	r3, r3, #65536	; 0x10000
   144c4:	eor	r2, r2, r3
   144c8:	sbc	r3, lr, #0
   144cc:	eor	r0, r0, r3
   144d0:	orrs	r0, r2, r0
   144d4:	bne	14984 <main@@Base+0x15e0>
   144d8:	cmp	r8, #7
   144dc:	ldr	r8, [sp, #40]	; 0x28
   144e0:	ldr	sl, [sp, #36]	; 0x24
   144e4:	mov	r7, r9
   144e8:	blt	17e44 <main@@Base+0x4aa0>
   144ec:	ldr	r2, [sp, #32]
   144f0:	mov	r1, r9
   144f4:	ldrb	r0, [r1, #6]!
   144f8:	ldr	r2, [r2]
   144fc:	cmp	r2, #0
   14500:	beq	14ee0 <main@@Base+0x1b3c>
   14504:	cmp	r0, #33	; 0x21
   14508:	bcc	14518 <main@@Base+0x1174>
   1450c:	cmp	r0, #58	; 0x3a
   14510:	mov	r7, r9
   14514:	bne	17e44 <main@@Base+0x4aa0>
   14518:	ldr	r0, [sp, #32]
   1451c:	mov	r2, #0
   14520:	str	r2, [r0]
   14524:	b	14ef0 <main@@Base+0x1b4c>
   14528:	eor	r1, sl, r7
   1452c:	eor	r0, r0, r3
   14530:	orrs	r0, r1, r0
   14534:	bne	16714 <main@@Base+0x3370>
   14538:	add	sl, r9, #8
   1453c:	mov	r1, #8
   14540:	sub	lr, r5, sl
   14544:	cmp	lr, #8
   14548:	movcc	r1, lr
   1454c:	and	r1, r1, #15
   14550:	sub	r2, r1, #1
   14554:	cmp	r2, #7
   14558:	bhi	15830 <main@@Base+0x248c>
   1455c:	add	r0, pc, #36	; 0x24
   14560:	mov	r1, #0
   14564:	mov	ip, #0
   14568:	mov	r8, #0
   1456c:	mov	r6, #0
   14570:	mov	r3, #0
   14574:	mov	r4, #0
   14578:	mov	r7, #0
   1457c:	ldr	r5, [r0, r2, lsl #2]
   14580:	mov	r2, #0
   14584:	add	pc, r0, r5
   14588:	andeq	r0, r0, r4, rrx
   1458c:	andeq	r0, r0, ip, asr r0
   14590:	andeq	r0, r0, r4, asr r0
   14594:	andeq	r0, r0, ip, asr #32
   14598:	andeq	r0, r0, r0, asr #32
   1459c:	andeq	r0, r0, r4, lsr r0
   145a0:	andeq	r0, r0, r4, lsr #32
   145a4:	andeq	r0, r0, r0, lsr #32
   145a8:	ldrb	ip, [r9, #15]
   145ac:	ldrb	r0, [r9, #14]
   145b0:	mov	r8, r1
   145b4:	orr	r0, ip, r0, lsl #8
   145b8:	mov	r1, r0
   145bc:	ldrb	r0, [r9, #13]
   145c0:	mov	r6, r8
   145c4:	orr	r1, r1, r0, lsl #16
   145c8:	ldrb	r0, [r9, #12]
   145cc:	mov	r3, r6
   145d0:	orr	r1, r1, r0, lsl #24
   145d4:	ldrb	r0, [r9, #11]
   145d8:	orr	r4, r0, r3
   145dc:	ldrb	r0, [r9, #10]
   145e0:	orr	r7, r4, r0, lsl #8
   145e4:	ldrb	r0, [r9, #9]
   145e8:	orr	r2, r7, r0, lsl #16
   145ec:	ldrb	r3, [sl]
   145f0:	movw	r0, #27749	; 0x6c65
   145f4:	movt	r0, #30050	; 0x7562
   145f8:	eor	r0, r1, r0
   145fc:	orr	r2, r2, r3, lsl #24
   14600:	movw	r3, #25711	; 0x646f
   14604:	movt	r3, #26207	; 0x665f
   14608:	eor	r3, r2, r3
   1460c:	orrs	r0, r0, r3
   14610:	bne	14b84 <main@@Base+0x17e0>
   14614:	ldr	r5, [sp, #44]	; 0x2c
   14618:	add	r7, r9, #16
   1461c:	mov	r1, #8
   14620:	mov	r2, #-268435456	; 0xf0000000
   14624:	ldr	r8, [sp, #40]	; 0x28
   14628:	sub	r0, r5, r7
   1462c:	cmp	r0, #8
   14630:	movcc	r1, r0
   14634:	add	r1, r2, r1, lsl #28
   14638:	asr	r1, r1, #28
   1463c:	cmp	r1, #0
   14640:	blt	148fc <main@@Base+0x1558>
   14644:	ldrb	r1, [r7]
   14648:	cmp	r1, #115	; 0x73
   1464c:	bne	148fc <main@@Base+0x1558>
   14650:	ldr	sl, [sp, #36]	; 0x24
   14654:	cmp	r0, #2
   14658:	blt	1abfc <main@@Base+0x7858>
   1465c:	ldr	r2, [sp, #32]
   14660:	mov	r1, r9
   14664:	ldrb	r0, [r1, #17]!
   14668:	ldr	r2, [r2]
   1466c:	cmp	r2, #0
   14670:	beq	169fc <main@@Base+0x3658>
   14674:	cmp	r0, #33	; 0x21
   14678:	bcc	14684 <main@@Base+0x12e0>
   1467c:	cmp	r0, #58	; 0x3a
   14680:	bne	1abfc <main@@Base+0x7858>
   14684:	ldr	r0, [sp, #32]
   14688:	mov	r2, #0
   1468c:	str	r2, [r0]
   14690:	b	16a08 <main@@Base+0x3664>
   14694:	movw	r0, #30256	; 0x7630
   14698:	ldr	r5, [sp, #44]	; 0x2c
   1469c:	ldr	r8, [sp, #40]	; 0x28
   146a0:	movt	r0, #26222	; 0x666e
   146a4:	subs	r0, r0, r1
   146a8:	movw	r0, #12895	; 0x325f
   146ac:	movt	r0, #30003	; 0x7533
   146b0:	sbcs	r0, r0, r2
   146b4:	movw	r0, #30257	; 0x7631
   146b8:	movt	r0, #26222	; 0x666e
   146bc:	eor	r0, r1, r0
   146c0:	bcc	149e4 <main@@Base+0x1640>
   146c4:	movw	r1, #13407	; 0x345f
   146c8:	movt	r1, #29494	; 0x7336
   146cc:	eor	r1, r2, r1
   146d0:	orrs	r0, r0, r1
   146d4:	bne	15830 <main@@Base+0x248c>
   146d8:	cmp	ip, #9
   146dc:	blt	1656c <main@@Base+0x31c8>
   146e0:	ldr	r2, [sp, #32]
   146e4:	mov	r1, r9
   146e8:	ldrb	r0, [r1, #16]!
   146ec:	ldr	r2, [r2]
   146f0:	cmp	r2, #0
   146f4:	beq	153cc <main@@Base+0x2028>
   146f8:	cmp	r0, #33	; 0x21
   146fc:	bcc	14708 <main@@Base+0x1364>
   14700:	cmp	r0, #58	; 0x3a
   14704:	bne	1656c <main@@Base+0x31c8>
   14708:	ldr	r0, [sp, #32]
   1470c:	mov	r2, #0
   14710:	str	r2, [r0]
   14714:	b	153d8 <main@@Base+0x2034>
   14718:	cmp	r8, #9
   1471c:	ldr	r8, [sp, #40]	; 0x28
   14720:	ldr	sl, [sp, #36]	; 0x24
   14724:	mov	r7, r9
   14728:	blt	16a50 <main@@Base+0x36ac>
   1472c:	ldr	r2, [sp, #32]
   14730:	mov	r1, r9
   14734:	ldrb	r0, [r1, #8]!
   14738:	ldr	r2, [r2]
   1473c:	cmp	r2, #0
   14740:	beq	14d08 <main@@Base+0x1964>
   14744:	cmp	r0, #33	; 0x21
   14748:	bcc	14758 <main@@Base+0x13b4>
   1474c:	cmp	r0, #58	; 0x3a
   14750:	mov	r7, r9
   14754:	bne	16a50 <main@@Base+0x36ac>
   14758:	ldr	r0, [sp, #32]
   1475c:	mov	r2, #0
   14760:	str	r2, [r0]
   14764:	b	14d18 <main@@Base+0x1974>
   14768:	add	sl, r9, #16
   1476c:	mov	r1, #8
   14770:	ldr	r8, [sp, #40]	; 0x28
   14774:	sub	ip, r5, sl
   14778:	cmp	ip, #8
   1477c:	movcc	r1, ip
   14780:	and	r1, r1, #15
   14784:	sub	r2, r1, #1
   14788:	cmp	r2, #7
   1478c:	bhi	15830 <main@@Base+0x248c>
   14790:	add	r0, pc, #32
   14794:	mov	r1, #0
   14798:	mov	lr, #0
   1479c:	mov	r6, #0
   147a0:	mov	r3, #0
   147a4:	mov	r7, #0
   147a8:	mov	r5, #0
   147ac:	mov	r4, #0
   147b0:	ldr	r2, [r0, r2, lsl #2]
   147b4:	add	pc, r0, r2
   147b8:	andeq	r0, r0, ip, asr r0
   147bc:	andeq	r0, r0, r4, asr r0
   147c0:	andeq	r0, r0, ip, asr #32
   147c4:	andeq	r0, r0, r4, asr #32
   147c8:	andeq	r0, r0, r8, lsr r0
   147cc:	andeq	r0, r0, r8, lsr #32
   147d0:	andeq	r0, r0, r0, lsr #32
   147d4:	andeq	r0, r0, r0, lsr #32
   147d8:	ldrb	r0, [r9, #22]
   147dc:	lsl	lr, r0, #8
   147e0:	ldrb	r0, [r9, #21]
   147e4:	mov	r6, r1
   147e8:	orr	r0, lr, r0, lsl #16
   147ec:	mov	r1, r0
   147f0:	ldrb	r0, [r9, #20]
   147f4:	mov	r3, r6
   147f8:	orr	r1, r1, r0, lsl #24
   147fc:	ldrb	r0, [r9, #19]
   14800:	orr	r7, r0, r3
   14804:	ldrb	r0, [r9, #18]
   14808:	orr	r5, r7, r0, lsl #8
   1480c:	ldrb	r0, [r9, #17]
   14810:	orr	r4, r5, r0, lsl #16
   14814:	bic	r0, r1, #255	; 0xff
   14818:	movw	r1, #29696	; 0x7400
   1481c:	movw	r2, #29810	; 0x7472
   14820:	ldr	r5, [sp, #44]	; 0x2c
   14824:	movt	r1, #30051	; 0x7563
   14828:	movt	r2, #25715	; 0x6473
   1482c:	eor	r0, r0, r1
   14830:	ldrb	r1, [sl]
   14834:	orr	r1, r4, r1, lsl #24
   14838:	eor	r1, r1, r2
   1483c:	orrs	r0, r0, r1
   14840:	bne	15830 <main@@Base+0x248c>
   14844:	cmp	ip, #8
   14848:	blt	15830 <main@@Base+0x248c>
   1484c:	ldr	r2, [sp, #32]
   14850:	mov	r1, r9
   14854:	ldrb	r0, [r1, #23]!
   14858:	ldr	r2, [r2]
   1485c:	cmp	r2, #0
   14860:	beq	152ac <main@@Base+0x1f08>
   14864:	cmp	r0, #33	; 0x21
   14868:	bcc	14874 <main@@Base+0x14d0>
   1486c:	cmp	r0, #58	; 0x3a
   14870:	bne	15830 <main@@Base+0x248c>
   14874:	ldr	r0, [sp, #32]
   14878:	mov	r2, #0
   1487c:	str	r2, [r0]
   14880:	b	152b8 <main@@Base+0x1f14>
   14884:	add	r7, r9, #16
   14888:	mov	r1, #8
   1488c:	mov	r2, #-268435456	; 0xf0000000
   14890:	sub	r0, r5, r7
   14894:	cmp	r0, #8
   14898:	movcc	r1, r0
   1489c:	add	r1, r2, r1, lsl #28
   148a0:	asr	r1, r1, #28
   148a4:	cmp	r1, #0
   148a8:	blt	148fc <main@@Base+0x1558>
   148ac:	ldrb	r1, [r7]
   148b0:	cmp	r1, #115	; 0x73
   148b4:	bne	148fc <main@@Base+0x1558>
   148b8:	ldr	sl, [sp, #36]	; 0x24
   148bc:	cmp	r0, #2
   148c0:	blt	1abfc <main@@Base+0x7858>
   148c4:	ldr	r2, [sp, #32]
   148c8:	mov	r1, r9
   148cc:	ldrb	r0, [r1, #17]!
   148d0:	ldr	r2, [r2]
   148d4:	cmp	r2, #0
   148d8:	beq	15854 <main@@Base+0x24b0>
   148dc:	cmp	r0, #33	; 0x21
   148e0:	bcc	148ec <main@@Base+0x1548>
   148e4:	cmp	r0, #58	; 0x3a
   148e8:	bne	1abfc <main@@Base+0x7858>
   148ec:	ldr	r0, [sp, #32]
   148f0:	mov	r2, #0
   148f4:	str	r2, [r0]
   148f8:	b	15860 <main@@Base+0x24bc>
   148fc:	mov	r0, r8
   14900:	mov	r1, r7
   14904:	b	1671c <main@@Base+0x3378>
   14908:	ldr	r8, [sp, #40]	; 0x28
   1490c:	mov	r0, r8
   14910:	b	1b874 <main@@Base+0x84d0>
   14914:	ldr	sl, [sp, #36]	; 0x24
   14918:	movw	r1, #28257	; 0x6e61
   1491c:	movt	r1, #28001	; 0x6d61
   14920:	teq	r0, r1
   14924:	bne	14974 <main@@Base+0x15d0>
   14928:	cmp	r8, #5
   1492c:	ldr	r8, [sp, #40]	; 0x28
   14930:	mov	r7, r9
   14934:	blt	18b6c <main@@Base+0x57c8>
   14938:	ldr	r2, [sp, #32]
   1493c:	mov	r1, r9
   14940:	ldrb	r0, [r1, #4]!
   14944:	ldr	r2, [r2]
   14948:	cmp	r2, #0
   1494c:	beq	152e0 <main@@Base+0x1f3c>
   14950:	cmp	r0, #33	; 0x21
   14954:	bcc	14964 <main@@Base+0x15c0>
   14958:	cmp	r0, #58	; 0x3a
   1495c:	mov	r7, r9
   14960:	bne	18b6c <main@@Base+0x57c8>
   14964:	ldr	r0, [sp, #32]
   14968:	mov	r2, #0
   1496c:	str	r2, [r0]
   14970:	b	152f0 <main@@Base+0x1f4c>
   14974:	ldr	r8, [sp, #40]	; 0x28
   14978:	mov	r0, r8
   1497c:	mov	r1, r9
   14980:	b	1b874 <main@@Base+0x84d0>
   14984:	and	r0, sl, #-16777216	; 0xff000000
   14988:	eor	r0, r0, #1711276032	; 0x66000000
   1498c:	orrs	r0, r0, r1
   14990:	bne	16710 <main@@Base+0x336c>
   14994:	cmp	r8, #6
   14998:	ldr	r8, [sp, #40]	; 0x28
   1499c:	ldr	sl, [sp, #36]	; 0x24
   149a0:	mov	r7, r9
   149a4:	blt	18cec <main@@Base+0x5948>
   149a8:	ldr	r2, [sp, #32]
   149ac:	mov	r1, r9
   149b0:	ldrb	r0, [r1, #5]!
   149b4:	ldr	r2, [r2]
   149b8:	cmp	r2, #0
   149bc:	beq	15318 <main@@Base+0x1f74>
   149c0:	cmp	r0, #33	; 0x21
   149c4:	bcc	149d4 <main@@Base+0x1630>
   149c8:	cmp	r0, #58	; 0x3a
   149cc:	mov	r7, r9
   149d0:	bne	18cec <main@@Base+0x5948>
   149d4:	ldr	r0, [sp, #32]
   149d8:	mov	r2, #0
   149dc:	str	r2, [r0]
   149e0:	b	15328 <main@@Base+0x1f84>
   149e4:	movw	r1, #13407	; 0x345f
   149e8:	movt	r1, #30006	; 0x7536
   149ec:	eor	r1, r2, r1
   149f0:	orrs	r1, r0, r1
   149f4:	beq	14cb0 <main@@Base+0x190c>
   149f8:	movw	r1, #12895	; 0x325f
   149fc:	movt	r1, #30003	; 0x7533
   14a00:	eor	r1, r2, r1
   14a04:	orrs	r0, r0, r1
   14a08:	bne	15830 <main@@Base+0x248c>
   14a0c:	cmp	ip, #9
   14a10:	blt	18030 <main@@Base+0x4c8c>
   14a14:	ldr	r2, [sp, #32]
   14a18:	mov	r1, r9
   14a1c:	ldrb	r0, [r1, #16]!
   14a20:	ldr	r2, [r2]
   14a24:	cmp	r2, #0
   14a28:	beq	15a64 <main@@Base+0x26c0>
   14a2c:	cmp	r0, #33	; 0x21
   14a30:	bcc	14a3c <main@@Base+0x1698>
   14a34:	cmp	r0, #58	; 0x3a
   14a38:	bne	18030 <main@@Base+0x4c8c>
   14a3c:	ldr	r0, [sp, #32]
   14a40:	mov	r2, #0
   14a44:	str	r2, [r0]
   14a48:	b	15a70 <main@@Base+0x26cc>
   14a4c:	cmp	r0, #34	; 0x22
   14a50:	mov	r7, r9
   14a54:	bne	1549c <main@@Base+0x20f8>
   14a58:	add	r1, r9, #7
   14a5c:	sub	r0, r5, r1
   14a60:	cmp	r0, #2
   14a64:	blt	14d54 <main@@Base+0x19b0>
   14a68:	ldrb	r0, [r1]
   14a6c:	cmp	r0, #32
   14a70:	bls	14d40 <main@@Base+0x199c>
   14a74:	mov	r7, r1
   14a78:	cmp	r7, r5
   14a7c:	bne	14d6c <main@@Base+0x19c8>
   14a80:	b	14da4 <main@@Base+0x1a00>
   14a84:	cmp	r0, #34	; 0x22
   14a88:	mov	r7, r9
   14a8c:	bne	1555c <main@@Base+0x21b8>
   14a90:	add	r1, r9, #6
   14a94:	ldr	r6, [sp, #40]	; 0x28
   14a98:	sub	r0, r5, r1
   14a9c:	cmp	r0, #2
   14aa0:	blt	14dd0 <main@@Base+0x1a2c>
   14aa4:	ldrb	r0, [r1]
   14aa8:	cmp	r0, #32
   14aac:	bls	14dbc <main@@Base+0x1a18>
   14ab0:	mov	r7, r1
   14ab4:	cmp	r7, r5
   14ab8:	bne	14de8 <main@@Base+0x1a44>
   14abc:	b	14e20 <main@@Base+0x1a7c>
   14ac0:	ldr	r8, [sp, #40]	; 0x28
   14ac4:	b	1abfc <main@@Base+0x7858>
   14ac8:	and	r1, r2, #-16777216	; 0xff000000
   14acc:	teq	r1, #1728053248	; 0x67000000
   14ad0:	bne	1abfc <main@@Base+0x7858>
   14ad4:	cmp	r0, #2
   14ad8:	blt	1abfc <main@@Base+0x7858>
   14adc:	ldr	r2, [sp, #32]
   14ae0:	mov	r1, r9
   14ae4:	ldrb	r0, [r1, #17]!
   14ae8:	ldr	r2, [r2]
   14aec:	cmp	r2, #0
   14af0:	beq	15d88 <main@@Base+0x29e4>
   14af4:	cmp	r0, #33	; 0x21
   14af8:	bcc	14b04 <main@@Base+0x1760>
   14afc:	cmp	r0, #58	; 0x3a
   14b00:	bne	1abfc <main@@Base+0x7858>
   14b04:	ldr	r0, [sp, #32]
   14b08:	mov	r2, #0
   14b0c:	str	r2, [r0]
   14b10:	b	15d94 <main@@Base+0x29f0>
   14b14:	cmp	r0, #34	; 0x22
   14b18:	mov	r1, r9
   14b1c:	bne	15be0 <main@@Base+0x283c>
   14b20:	add	r2, r9, #6
   14b24:	sub	r0, r5, r2
   14b28:	cmp	r0, #2
   14b2c:	blt	14f60 <main@@Base+0x1bbc>
   14b30:	ldrb	r0, [r2]
   14b34:	cmp	r0, #32
   14b38:	bls	14f4c <main@@Base+0x1ba8>
   14b3c:	mov	r1, r2
   14b40:	cmp	r1, r5
   14b44:	bne	14f7c <main@@Base+0x1bd8>
   14b48:	b	14fb4 <main@@Base+0x1c10>
   14b4c:	cmp	r0, #34	; 0x22
   14b50:	mov	r7, r9
   14b54:	bne	15c34 <main@@Base+0x2890>
   14b58:	add	r1, r9, #6
   14b5c:	sub	r0, r5, r1
   14b60:	cmp	r0, #2
   14b64:	blt	14fdc <main@@Base+0x1c38>
   14b68:	ldrb	r0, [r1]
   14b6c:	cmp	r0, #32
   14b70:	bls	14fc8 <main@@Base+0x1c24>
   14b74:	mov	r7, r1
   14b78:	cmp	r7, r5
   14b7c:	bne	14ff4 <main@@Base+0x1c50>
   14b80:	b	1502c <main@@Base+0x1c88>
   14b84:	movw	r0, #24428	; 0x5f6c
   14b88:	lsr	r1, r1, #8
   14b8c:	ldr	r5, [sp, #44]	; 0x2c
   14b90:	ldr	r8, [sp, #40]	; 0x28
   14b94:	movt	r0, #102	; 0x66
   14b98:	orr	r1, r1, r2, lsl #24
   14b9c:	eor	r0, r0, r2, lsr #8
   14ba0:	movw	r2, #26483	; 0x6773
   14ba4:	movt	r2, #28526	; 0x6f6e
   14ba8:	eor	r1, r1, r2
   14bac:	orrs	r0, r1, r0
   14bb0:	bne	15830 <main@@Base+0x248c>
   14bb4:	cmp	lr, #8
   14bb8:	blt	15830 <main@@Base+0x248c>
   14bbc:	ldr	r2, [sp, #32]
   14bc0:	mov	r1, r9
   14bc4:	ldrb	r0, [r1, #15]!
   14bc8:	ldr	r2, [r2]
   14bcc:	cmp	r2, #0
   14bd0:	beq	15df0 <main@@Base+0x2a4c>
   14bd4:	cmp	r0, #33	; 0x21
   14bd8:	bcc	14be4 <main@@Base+0x1840>
   14bdc:	cmp	r0, #58	; 0x3a
   14be0:	bne	15830 <main@@Base+0x248c>
   14be4:	ldr	r0, [sp, #32]
   14be8:	mov	r2, #0
   14bec:	str	r2, [r0]
   14bf0:	b	15dfc <main@@Base+0x2a58>
   14bf4:	cmp	r0, #34	; 0x22
   14bf8:	mov	r1, r9
   14bfc:	bne	15e48 <main@@Base+0x2aa4>
   14c00:	add	r2, r9, #5
   14c04:	sub	r0, r5, r2
   14c08:	cmp	r0, #2
   14c0c:	blt	15058 <main@@Base+0x1cb4>
   14c10:	ldrb	r0, [r2]
   14c14:	cmp	r0, #32
   14c18:	bls	15044 <main@@Base+0x1ca0>
   14c1c:	mov	r1, r2
   14c20:	cmp	r1, r5
   14c24:	bne	15074 <main@@Base+0x1cd0>
   14c28:	b	150ac <main@@Base+0x1d08>
   14c2c:	cmp	r0, #34	; 0x22
   14c30:	mov	r4, r9
   14c34:	bne	15e9c <main@@Base+0x2af8>
   14c38:	add	r1, r9, #5
   14c3c:	sub	r0, r5, r1
   14c40:	cmp	r0, #2
   14c44:	blt	150d4 <main@@Base+0x1d30>
   14c48:	ldrb	r0, [r1]
   14c4c:	cmp	r0, #32
   14c50:	bls	150c0 <main@@Base+0x1d1c>
   14c54:	mov	r4, r1
   14c58:	cmp	r4, r5
   14c5c:	bne	150ec <main@@Base+0x1d48>
   14c60:	b	15124 <main@@Base+0x1d80>
   14c64:	cmp	r0, #34	; 0x22
   14c68:	mov	r1, r9
   14c6c:	bne	16208 <main@@Base+0x2e64>
   14c70:	add	r2, r9, #5
   14c74:	sub	r0, r5, r2
   14c78:	cmp	r0, #2
   14c7c:	blt	15150 <main@@Base+0x1dac>
   14c80:	ldrb	r0, [r2]
   14c84:	cmp	r0, #32
   14c88:	bls	1513c <main@@Base+0x1d98>
   14c8c:	mov	r1, r2
   14c90:	cmp	r1, r5
   14c94:	bne	1516c <main@@Base+0x1dc8>
   14c98:	b	151f4 <main@@Base+0x1e50>
   14c9c:	cmp	r2, #1
   14ca0:	mov	r1, #0
   14ca4:	mov	r2, #0
   14ca8:	beq	13b84 <main@@Base+0x7e0>
   14cac:	b	1abfc <main@@Base+0x7858>
   14cb0:	cmp	ip, #9
   14cb4:	blt	18128 <main@@Base+0x4d84>
   14cb8:	ldr	r2, [sp, #32]
   14cbc:	mov	r1, r9
   14cc0:	ldrb	r0, [r1, #16]!
   14cc4:	ldr	r2, [r2]
   14cc8:	cmp	r2, #0
   14ccc:	beq	15a98 <main@@Base+0x26f4>
   14cd0:	cmp	r0, #33	; 0x21
   14cd4:	bcc	14ce0 <main@@Base+0x193c>
   14cd8:	cmp	r0, #58	; 0x3a
   14cdc:	bne	18128 <main@@Base+0x4d84>
   14ce0:	ldr	r0, [sp, #32]
   14ce4:	mov	r2, #0
   14ce8:	str	r2, [r0]
   14cec:	b	15aa4 <main@@Base+0x2700>
   14cf0:	ldr	sl, [sp, #36]	; 0x24
   14cf4:	cmp	r2, #1
   14cf8:	mov	r1, #0
   14cfc:	mov	r2, #0
   14d00:	beq	14314 <main@@Base+0xf70>
   14d04:	b	1abfc <main@@Base+0x7858>
   14d08:	cmp	r0, #34	; 0x22
   14d0c:	mov	r7, r9
   14d10:	bne	16a50 <main@@Base+0x36ac>
   14d14:	add	r1, r9, #9
   14d18:	sub	r0, r5, r1
   14d1c:	cmp	r0, #2
   14d20:	blt	15414 <main@@Base+0x2070>
   14d24:	ldrb	r0, [r1]
   14d28:	cmp	r0, #32
   14d2c:	bls	15400 <main@@Base+0x205c>
   14d30:	mov	r7, r1
   14d34:	cmp	r7, r5
   14d38:	bne	1542c <main@@Base+0x2088>
   14d3c:	b	15464 <main@@Base+0x20c0>
   14d40:	bne	14d54 <main@@Base+0x19b0>
   14d44:	mov	r7, r1
   14d48:	ldrb	r0, [r7, #1]!
   14d4c:	cmp	r0, #32
   14d50:	bhi	14d64 <main@@Base+0x19c0>
   14d54:	mov	r0, r8
   14d58:	mov	r2, r5
   14d5c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   14d60:	mov	r7, r0
   14d64:	cmp	r7, r5
   14d68:	beq	14da4 <main@@Base+0x1a00>
   14d6c:	ldrb	r0, [r7]
   14d70:	cmp	r0, #58	; 0x3a
   14d74:	bne	14da4 <main@@Base+0x1a00>
   14d78:	add	r1, r7, #1
   14d7c:	sub	r0, r5, r1
   14d80:	cmp	r0, #2
   14d84:	blt	1548c <main@@Base+0x20e8>
   14d88:	ldrb	r0, [r1]
   14d8c:	cmp	r0, #32
   14d90:	bls	1547c <main@@Base+0x20d8>
   14d94:	mov	r7, r1
   14d98:	cmp	r9, r7
   14d9c:	bne	154a4 <main@@Base+0x2100>
   14da0:	b	14978 <main@@Base+0x15d4>
   14da4:	mov	r0, r8
   14da8:	mov	r1, r7
   14dac:	mov	r2, r5
   14db0:	mov	r3, #4
   14db4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   14db8:	b	15498 <main@@Base+0x20f4>
   14dbc:	bne	14dd0 <main@@Base+0x1a2c>
   14dc0:	mov	r7, r1
   14dc4:	ldrb	r0, [r7, #1]!
   14dc8:	cmp	r0, #32
   14dcc:	bhi	14de0 <main@@Base+0x1a3c>
   14dd0:	mov	r0, r6
   14dd4:	mov	r2, r5
   14dd8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   14ddc:	mov	r7, r0
   14de0:	cmp	r7, r5
   14de4:	beq	14e20 <main@@Base+0x1a7c>
   14de8:	ldrb	r0, [r7]
   14dec:	cmp	r0, #58	; 0x3a
   14df0:	bne	14e20 <main@@Base+0x1a7c>
   14df4:	add	r1, r7, #1
   14df8:	sub	r0, r5, r1
   14dfc:	cmp	r0, #2
   14e00:	blt	1554c <main@@Base+0x21a8>
   14e04:	ldrb	r0, [r1]
   14e08:	cmp	r0, #32
   14e0c:	bls	1553c <main@@Base+0x2198>
   14e10:	mov	r7, r1
   14e14:	cmp	r9, r7
   14e18:	bne	15564 <main@@Base+0x21c0>
   14e1c:	b	16680 <main@@Base+0x32dc>
   14e20:	mov	r0, r6
   14e24:	mov	r1, r7
   14e28:	mov	r2, r5
   14e2c:	mov	r3, #4
   14e30:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   14e34:	b	15558 <main@@Base+0x21b4>
   14e38:	cmp	r0, #34	; 0x22
   14e3c:	bne	1582c <main@@Base+0x2488>
   14e40:	add	r1, r9, #17
   14e44:	ldr	r6, [sp, #40]	; 0x28
   14e48:	sub	r0, r5, r1
   14e4c:	cmp	r0, #2
   14e50:	blt	157e0 <main@@Base+0x243c>
   14e54:	ldrb	r0, [r1]
   14e58:	cmp	r0, #32
   14e5c:	bls	157cc <main@@Base+0x2428>
   14e60:	mov	r4, r1
   14e64:	cmp	r4, r5
   14e68:	bne	157f8 <main@@Base+0x2454>
   14e6c:	b	1583c <main@@Base+0x2498>
   14e70:	cmp	r0, #34	; 0x22
   14e74:	mov	r7, r9
   14e78:	bne	16e0c <main@@Base+0x3a68>
   14e7c:	add	r1, r9, #3
   14e80:	sub	r0, r5, r1
   14e84:	cmp	r0, #2
   14e88:	blt	1589c <main@@Base+0x24f8>
   14e8c:	ldrb	r0, [r1]
   14e90:	cmp	r0, #32
   14e94:	bls	15888 <main@@Base+0x24e4>
   14e98:	mov	r7, r1
   14e9c:	cmp	r7, r5
   14ea0:	bne	158b4 <main@@Base+0x2510>
   14ea4:	b	158ec <main@@Base+0x2548>
   14ea8:	cmp	r0, #34	; 0x22
   14eac:	mov	r4, r9
   14eb0:	bne	16f80 <main@@Base+0x3bdc>
   14eb4:	add	r1, r9, #4
   14eb8:	sub	r0, r5, r1
   14ebc:	cmp	r0, #2
   14ec0:	blt	15918 <main@@Base+0x2574>
   14ec4:	ldrb	r0, [r1]
   14ec8:	cmp	r0, #32
   14ecc:	bls	15904 <main@@Base+0x2560>
   14ed0:	mov	r4, r1
   14ed4:	cmp	r4, r5
   14ed8:	bne	15930 <main@@Base+0x258c>
   14edc:	b	15968 <main@@Base+0x25c4>
   14ee0:	cmp	r0, #34	; 0x22
   14ee4:	mov	r7, r9
   14ee8:	bne	17e44 <main@@Base+0x4aa0>
   14eec:	add	r1, r9, #7
   14ef0:	sub	r0, r5, r1
   14ef4:	cmp	r0, #2
   14ef8:	blt	15994 <main@@Base+0x25f0>
   14efc:	ldrb	r0, [r1]
   14f00:	cmp	r0, #32
   14f04:	bls	15980 <main@@Base+0x25dc>
   14f08:	mov	r7, r1
   14f0c:	cmp	r7, r5
   14f10:	bne	159ac <main@@Base+0x2608>
   14f14:	b	159e4 <main@@Base+0x2640>
   14f18:	cmp	r0, #34	; 0x22
   14f1c:	bne	15b2c <main@@Base+0x2788>
   14f20:	add	r1, r9, #17
   14f24:	sub	r0, r5, r1
   14f28:	cmp	r0, #2
   14f2c:	blt	15ae0 <main@@Base+0x273c>
   14f30:	ldrb	r0, [r1]
   14f34:	cmp	r0, #32
   14f38:	bls	15acc <main@@Base+0x2728>
   14f3c:	mov	r7, r1
   14f40:	cmp	r7, r5
   14f44:	bne	15af8 <main@@Base+0x2754>
   14f48:	b	15ba4 <main@@Base+0x2800>
   14f4c:	bne	14f60 <main@@Base+0x1bbc>
   14f50:	mov	r1, r2
   14f54:	ldrb	r0, [r1, #1]!
   14f58:	cmp	r0, #32
   14f5c:	bhi	14f74 <main@@Base+0x1bd0>
   14f60:	mov	r1, r2
   14f64:	mov	r0, r8
   14f68:	mov	r2, r5
   14f6c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   14f70:	mov	r1, r0
   14f74:	cmp	r1, r5
   14f78:	beq	14fb4 <main@@Base+0x1c10>
   14f7c:	ldrb	r0, [r1]
   14f80:	cmp	r0, #58	; 0x3a
   14f84:	bne	14fb4 <main@@Base+0x1c10>
   14f88:	add	r2, r1, #1
   14f8c:	sub	r0, r5, r2
   14f90:	cmp	r0, #2
   14f94:	blt	15bcc <main@@Base+0x2828>
   14f98:	ldrb	r0, [r2]
   14f9c:	cmp	r0, #32
   14fa0:	bls	15bbc <main@@Base+0x2818>
   14fa4:	mov	r1, r2
   14fa8:	cmp	r9, r1
   14fac:	bne	15be8 <main@@Base+0x2844>
   14fb0:	b	14978 <main@@Base+0x15d4>
   14fb4:	mov	r0, r8
   14fb8:	mov	r2, r5
   14fbc:	mov	r3, #4
   14fc0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   14fc4:	b	15bdc <main@@Base+0x2838>
   14fc8:	bne	14fdc <main@@Base+0x1c38>
   14fcc:	mov	r7, r1
   14fd0:	ldrb	r0, [r7, #1]!
   14fd4:	cmp	r0, #32
   14fd8:	bhi	14fec <main@@Base+0x1c48>
   14fdc:	mov	r0, r8
   14fe0:	mov	r2, r5
   14fe4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   14fe8:	mov	r7, r0
   14fec:	cmp	r7, r5
   14ff0:	beq	1502c <main@@Base+0x1c88>
   14ff4:	ldrb	r0, [r7]
   14ff8:	cmp	r0, #58	; 0x3a
   14ffc:	bne	1502c <main@@Base+0x1c88>
   15000:	add	r1, r7, #1
   15004:	sub	r0, r5, r1
   15008:	cmp	r0, #2
   1500c:	blt	15c24 <main@@Base+0x2880>
   15010:	ldrb	r0, [r1]
   15014:	cmp	r0, #32
   15018:	bls	15c14 <main@@Base+0x2870>
   1501c:	mov	r7, r1
   15020:	cmp	r9, r7
   15024:	bne	15c3c <main@@Base+0x2898>
   15028:	b	14978 <main@@Base+0x15d4>
   1502c:	mov	r0, r8
   15030:	mov	r1, r7
   15034:	mov	r2, r5
   15038:	mov	r3, #4
   1503c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15040:	b	15c30 <main@@Base+0x288c>
   15044:	bne	15058 <main@@Base+0x1cb4>
   15048:	mov	r1, r2
   1504c:	ldrb	r0, [r1, #1]!
   15050:	cmp	r0, #32
   15054:	bhi	1506c <main@@Base+0x1cc8>
   15058:	mov	r1, r2
   1505c:	mov	r0, r8
   15060:	mov	r2, r5
   15064:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15068:	mov	r1, r0
   1506c:	cmp	r1, r5
   15070:	beq	150ac <main@@Base+0x1d08>
   15074:	ldrb	r0, [r1]
   15078:	cmp	r0, #58	; 0x3a
   1507c:	bne	150ac <main@@Base+0x1d08>
   15080:	add	r2, r1, #1
   15084:	sub	r0, r5, r2
   15088:	cmp	r0, #2
   1508c:	blt	15e34 <main@@Base+0x2a90>
   15090:	ldrb	r0, [r2]
   15094:	cmp	r0, #32
   15098:	bls	15e24 <main@@Base+0x2a80>
   1509c:	mov	r1, r2
   150a0:	cmp	r9, r1
   150a4:	bne	15e50 <main@@Base+0x2aac>
   150a8:	b	14978 <main@@Base+0x15d4>
   150ac:	mov	r0, r8
   150b0:	mov	r2, r5
   150b4:	mov	r3, #4
   150b8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   150bc:	b	15e44 <main@@Base+0x2aa0>
   150c0:	bne	150d4 <main@@Base+0x1d30>
   150c4:	mov	r4, r1
   150c8:	ldrb	r0, [r4, #1]!
   150cc:	cmp	r0, #32
   150d0:	bhi	150e4 <main@@Base+0x1d40>
   150d4:	mov	r0, r8
   150d8:	mov	r2, r5
   150dc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   150e0:	mov	r4, r0
   150e4:	cmp	r4, r5
   150e8:	beq	15124 <main@@Base+0x1d80>
   150ec:	ldrb	r0, [r4]
   150f0:	cmp	r0, #58	; 0x3a
   150f4:	bne	15124 <main@@Base+0x1d80>
   150f8:	add	r1, r4, #1
   150fc:	sub	r0, r5, r1
   15100:	cmp	r0, #2
   15104:	blt	15e8c <main@@Base+0x2ae8>
   15108:	ldrb	r0, [r1]
   1510c:	cmp	r0, #32
   15110:	bls	15e7c <main@@Base+0x2ad8>
   15114:	mov	r4, r1
   15118:	cmp	r9, r4
   1511c:	bne	15ea4 <main@@Base+0x2b00>
   15120:	b	14978 <main@@Base+0x15d4>
   15124:	mov	r0, r8
   15128:	mov	r1, r4
   1512c:	mov	r2, r5
   15130:	mov	r3, #4
   15134:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15138:	b	15e98 <main@@Base+0x2af4>
   1513c:	bne	15150 <main@@Base+0x1dac>
   15140:	mov	r1, r2
   15144:	ldrb	r0, [r1, #1]!
   15148:	cmp	r0, #32
   1514c:	bhi	15164 <main@@Base+0x1dc0>
   15150:	ldr	r0, [sp, #40]	; 0x28
   15154:	mov	r1, r2
   15158:	mov	r2, r5
   1515c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15160:	mov	r1, r0
   15164:	cmp	r1, r5
   15168:	beq	151f4 <main@@Base+0x1e50>
   1516c:	ldrb	r0, [r1]
   15170:	cmp	r0, #58	; 0x3a
   15174:	bne	151f4 <main@@Base+0x1e50>
   15178:	add	r2, r1, #1
   1517c:	sub	r0, r5, r2
   15180:	cmp	r0, #2
   15184:	blt	161f4 <main@@Base+0x2e50>
   15188:	ldrb	r0, [r2]
   1518c:	cmp	r0, #32
   15190:	bls	161e4 <main@@Base+0x2e40>
   15194:	mov	r1, r2
   15198:	cmp	r9, r1
   1519c:	bne	16210 <main@@Base+0x2e6c>
   151a0:	eor	r0, r6, #889192448	; 0x35000000
   151a4:	orrs	r0, r0, r4
   151a8:	bne	16680 <main@@Base+0x32dc>
   151ac:	cmp	r8, #6
   151b0:	mov	r7, r9
   151b4:	blt	1661c <main@@Base+0x3278>
   151b8:	ldr	r2, [sp, #32]
   151bc:	mov	r1, r9
   151c0:	ldrb	r0, [r1, #5]!
   151c4:	ldr	r2, [r2]
   151c8:	cmp	r2, #0
   151cc:	beq	15208 <main@@Base+0x1e64>
   151d0:	cmp	r0, #33	; 0x21
   151d4:	bcc	151e4 <main@@Base+0x1e40>
   151d8:	cmp	r0, #58	; 0x3a
   151dc:	mov	r7, r9
   151e0:	bne	1661c <main@@Base+0x3278>
   151e4:	ldr	r0, [sp, #32]
   151e8:	mov	r2, #0
   151ec:	str	r2, [r0]
   151f0:	b	15218 <main@@Base+0x1e74>
   151f4:	ldr	r0, [sp, #40]	; 0x28
   151f8:	mov	r2, r5
   151fc:	mov	r3, #4
   15200:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15204:	b	16204 <main@@Base+0x2e60>
   15208:	cmp	r0, #34	; 0x22
   1520c:	mov	r7, r9
   15210:	bne	1661c <main@@Base+0x3278>
   15214:	add	r1, r9, #6
   15218:	ldr	r6, [sp, #40]	; 0x28
   1521c:	sub	r0, r5, r1
   15220:	cmp	r0, #2
   15224:	blt	15364 <main@@Base+0x1fc0>
   15228:	ldrb	r0, [r1]
   1522c:	cmp	r0, #32
   15230:	bls	15350 <main@@Base+0x1fac>
   15234:	mov	r7, r1
   15238:	cmp	r7, r5
   1523c:	bne	1537c <main@@Base+0x1fd8>
   15240:	b	153b4 <main@@Base+0x2010>
   15244:	cmp	r0, #34	; 0x22
   15248:	bne	1abfc <main@@Base+0x7858>
   1524c:	add	r1, r9, #11
   15250:	sub	r0, r5, r1
   15254:	cmp	r0, #2
   15258:	blt	162b0 <main@@Base+0x2f0c>
   1525c:	ldrb	r0, [r1]
   15260:	cmp	r0, #32
   15264:	bls	1629c <main@@Base+0x2ef8>
   15268:	mov	r4, r1
   1526c:	cmp	r4, r5
   15270:	bne	162c8 <main@@Base+0x2f24>
   15274:	b	16300 <main@@Base+0x2f5c>
   15278:	cmp	r0, #34	; 0x22
   1527c:	bne	1abfc <main@@Base+0x7858>
   15280:	add	r1, r9, #19
   15284:	sub	r0, r5, r1
   15288:	cmp	r0, #2
   1528c:	blt	1632c <main@@Base+0x2f88>
   15290:	ldrb	r0, [r1]
   15294:	cmp	r0, #32
   15298:	bls	16318 <main@@Base+0x2f74>
   1529c:	mov	r4, r1
   152a0:	cmp	r4, r5
   152a4:	bne	16344 <main@@Base+0x2fa0>
   152a8:	b	1637c <main@@Base+0x2fd8>
   152ac:	cmp	r0, #34	; 0x22
   152b0:	bne	15830 <main@@Base+0x248c>
   152b4:	add	r1, r9, #24
   152b8:	sub	r0, r5, r1
   152bc:	cmp	r0, #2
   152c0:	blt	163a8 <main@@Base+0x3004>
   152c4:	ldrb	r0, [r1]
   152c8:	cmp	r0, #32
   152cc:	bls	16394 <main@@Base+0x2ff0>
   152d0:	mov	r7, r1
   152d4:	cmp	r7, r5
   152d8:	bne	163c0 <main@@Base+0x301c>
   152dc:	b	163f8 <main@@Base+0x3054>
   152e0:	cmp	r0, #34	; 0x22
   152e4:	mov	r7, r9
   152e8:	bne	18b6c <main@@Base+0x57c8>
   152ec:	add	r1, r9, #5
   152f0:	sub	r0, r5, r1
   152f4:	cmp	r0, #2
   152f8:	blt	16424 <main@@Base+0x3080>
   152fc:	ldrb	r0, [r1]
   15300:	cmp	r0, #32
   15304:	bls	16410 <main@@Base+0x306c>
   15308:	mov	r7, r1
   1530c:	cmp	r7, r5
   15310:	bne	1643c <main@@Base+0x3098>
   15314:	b	16474 <main@@Base+0x30d0>
   15318:	cmp	r0, #34	; 0x22
   1531c:	mov	r7, r9
   15320:	bne	18cec <main@@Base+0x5948>
   15324:	add	r1, r9, #6
   15328:	sub	r0, r5, r1
   1532c:	cmp	r0, #2
   15330:	blt	164a4 <main@@Base+0x3100>
   15334:	ldrb	r0, [r1]
   15338:	cmp	r0, #32
   1533c:	bls	16490 <main@@Base+0x30ec>
   15340:	mov	r7, r1
   15344:	cmp	r7, r5
   15348:	bne	164bc <main@@Base+0x3118>
   1534c:	b	164f4 <main@@Base+0x3150>
   15350:	bne	15364 <main@@Base+0x1fc0>
   15354:	mov	r7, r1
   15358:	ldrb	r0, [r7, #1]!
   1535c:	cmp	r0, #32
   15360:	bhi	15374 <main@@Base+0x1fd0>
   15364:	mov	r0, r6
   15368:	mov	r2, r5
   1536c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15370:	mov	r7, r0
   15374:	cmp	r7, r5
   15378:	beq	153b4 <main@@Base+0x2010>
   1537c:	ldrb	r0, [r7]
   15380:	cmp	r0, #58	; 0x3a
   15384:	bne	153b4 <main@@Base+0x2010>
   15388:	add	r1, r7, #1
   1538c:	sub	r0, r5, r1
   15390:	cmp	r0, #2
   15394:	blt	1660c <main@@Base+0x3268>
   15398:	ldrb	r0, [r1]
   1539c:	cmp	r0, #32
   153a0:	bls	165fc <main@@Base+0x3258>
   153a4:	mov	r7, r1
   153a8:	cmp	r9, r7
   153ac:	bne	16624 <main@@Base+0x3280>
   153b0:	b	16680 <main@@Base+0x32dc>
   153b4:	mov	r0, r6
   153b8:	mov	r1, r7
   153bc:	mov	r2, r5
   153c0:	mov	r3, #4
   153c4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   153c8:	b	16618 <main@@Base+0x3274>
   153cc:	cmp	r0, #34	; 0x22
   153d0:	bne	1656c <main@@Base+0x31c8>
   153d4:	add	r1, r9, #17
   153d8:	sub	r0, r5, r1
   153dc:	cmp	r0, #2
   153e0:	blt	16520 <main@@Base+0x317c>
   153e4:	ldrb	r0, [r1]
   153e8:	cmp	r0, #32
   153ec:	bls	1650c <main@@Base+0x3168>
   153f0:	mov	r7, r1
   153f4:	cmp	r7, r5
   153f8:	bne	16538 <main@@Base+0x3194>
   153fc:	b	165e4 <main@@Base+0x3240>
   15400:	bne	15414 <main@@Base+0x2070>
   15404:	mov	r7, r1
   15408:	ldrb	r0, [r7, #1]!
   1540c:	cmp	r0, #32
   15410:	bhi	15424 <main@@Base+0x2080>
   15414:	mov	r0, r8
   15418:	mov	r2, r5
   1541c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15420:	mov	r7, r0
   15424:	cmp	r7, r5
   15428:	beq	15464 <main@@Base+0x20c0>
   1542c:	ldrb	r0, [r7]
   15430:	cmp	r0, #58	; 0x3a
   15434:	bne	15464 <main@@Base+0x20c0>
   15438:	add	r1, r7, #1
   1543c:	sub	r0, r5, r1
   15440:	cmp	r0, #2
   15444:	blt	16a40 <main@@Base+0x369c>
   15448:	ldrb	r0, [r1]
   1544c:	cmp	r0, #32
   15450:	bls	16a30 <main@@Base+0x368c>
   15454:	mov	r7, r1
   15458:	cmp	r9, r7
   1545c:	bne	16a58 <main@@Base+0x36b4>
   15460:	b	14978 <main@@Base+0x15d4>
   15464:	mov	r0, r8
   15468:	mov	r1, r7
   1546c:	mov	r2, r5
   15470:	mov	r3, #4
   15474:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15478:	b	16a4c <main@@Base+0x36a8>
   1547c:	bne	1548c <main@@Base+0x20e8>
   15480:	ldrb	r0, [r7, #2]!
   15484:	cmp	r0, #32
   15488:	bhi	1549c <main@@Base+0x20f8>
   1548c:	mov	r0, r8
   15490:	mov	r2, r5
   15494:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15498:	mov	r7, r0
   1549c:	cmp	r9, r7
   154a0:	beq	14978 <main@@Base+0x15d4>
   154a4:	mov	r0, #0
   154a8:	mov	r1, r7
   154ac:	mov	r2, r5
   154b0:	sub	r3, fp, #56	; 0x38
   154b4:	str	r0, [fp, #-56]	; 0xffffffc8
   154b8:	mov	r0, r8
   154bc:	bl	312d8 <flatcc_json_parser_float@@Base>
   154c0:	mov	r4, r0
   154c4:	cmp	r7, r0
   154c8:	bne	154fc <main@@Base+0x2158>
   154cc:	sub	r0, fp, #56	; 0x38
   154d0:	mov	r1, r7
   154d4:	mov	r2, r5
   154d8:	str	r0, [sp]
   154dc:	mov	r0, r8
   154e0:	ldr	r3, [pc, #4004]	; 1648c <main@@Base+0x30e8>
   154e4:	add	r3, pc, r3
   154e8:	bl	23270 <main@@Base+0xfecc>
   154ec:	mov	r4, r0
   154f0:	cmp	r0, r7
   154f4:	cmpne	r4, r5
   154f8:	beq	1346c <main@@Base+0xc8>
   154fc:	vldr	s0, [fp, #-56]	; 0xffffffc8
   15500:	vcmp.f32	s0, #0.0
   15504:	vmrs	APSR_nzcv, fpscr
   15508:	bne	15518 <main@@Base+0x2174>
   1550c:	ldrb	r0, [r8, #8]
   15510:	tst	r0, #2
   15514:	beq	1b880 <main@@Base+0x84dc>
   15518:	ldr	r0, [r8]
   1551c:	mov	r1, #27
   15520:	mov	r2, #4
   15524:	mov	r3, #4
   15528:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   1552c:	cmp	r0, #0
   15530:	beq	1346c <main@@Base+0xc8>
   15534:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15538:	b	1677c <main@@Base+0x33d8>
   1553c:	bne	1554c <main@@Base+0x21a8>
   15540:	ldrb	r0, [r7, #2]!
   15544:	cmp	r0, #32
   15548:	bhi	1555c <main@@Base+0x21b8>
   1554c:	ldr	r0, [sp, #40]	; 0x28
   15550:	mov	r2, r5
   15554:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15558:	mov	r7, r0
   1555c:	cmp	r9, r7
   15560:	beq	16680 <main@@Base+0x32dc>
   15564:	ldr	r8, [sp, #40]	; 0x28
   15568:	mov	r1, #4
   1556c:	mov	r2, #2
   15570:	mvn	r3, #-1073741824	; 0xc0000000
   15574:	ldr	r0, [r8]
   15578:	bl	2b840 <flatcc_builder_start_vector@@Base>
   1557c:	cmp	r0, #0
   15580:	bne	1d5c4 <main@@Base+0xa220>
   15584:	cmp	r7, r5
   15588:	beq	155c0 <main@@Base+0x221c>
   1558c:	ldrb	r0, [r7]
   15590:	cmp	r0, #91	; 0x5b
   15594:	bne	155c0 <main@@Base+0x221c>
   15598:	ldr	sl, [sp, #36]	; 0x24
   1559c:	add	r1, r7, #1
   155a0:	sub	r0, r5, r1
   155a4:	cmp	r0, #2
   155a8:	blt	1560c <main@@Base+0x2268>
   155ac:	ldrb	r0, [r1]
   155b0:	cmp	r0, #32
   155b4:	bls	155fc <main@@Base+0x2258>
   155b8:	mov	r7, r1
   155bc:	b	1561c <main@@Base+0x2278>
   155c0:	mov	r0, r8
   155c4:	mov	r1, r7
   155c8:	mov	r2, r5
   155cc:	mov	r3, #22
   155d0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   155d4:	ldr	sl, [sp, #36]	; 0x24
   155d8:	mov	r7, r0
   155dc:	ldr	r0, [r8]
   155e0:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   155e4:	cmp	r0, #0
   155e8:	str	r0, [sp, #52]	; 0x34
   155ec:	beq	1d5c4 <main@@Base+0xa220>
   155f0:	ldr	r0, [r8]
   155f4:	mov	r1, #9
   155f8:	b	16768 <main@@Base+0x33c4>
   155fc:	bne	1560c <main@@Base+0x2268>
   15600:	ldrb	r0, [r7, #2]!
   15604:	cmp	r0, #32
   15608:	bhi	1561c <main@@Base+0x2278>
   1560c:	mov	r0, r8
   15610:	mov	r2, r5
   15614:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15618:	mov	r7, r0
   1561c:	cmp	r7, r5
   15620:	mov	r4, r5
   15624:	beq	15668 <main@@Base+0x22c4>
   15628:	ldrb	r0, [r7]
   1562c:	cmp	r0, #93	; 0x5d
   15630:	bne	15664 <main@@Base+0x22c0>
   15634:	add	r1, r7, #1
   15638:	sub	r0, r5, r1
   1563c:	cmp	r0, #2
   15640:	blt	16258 <main@@Base+0x2eb4>
   15644:	ldrb	r0, [r1]
   15648:	cmp	r0, #32
   1564c:	bhi	15784 <main@@Base+0x23e0>
   15650:	bne	16258 <main@@Base+0x2eb4>
   15654:	ldrb	r0, [r7, #2]!
   15658:	cmp	r0, #32
   1565c:	bls	16258 <main@@Base+0x2eb4>
   15660:	b	155dc <main@@Base+0x2238>
   15664:	mov	r4, r7
   15668:	ldr	r0, [r8]
   1566c:	mov	r1, #1
   15670:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   15674:	mov	r3, r0
   15678:	cmp	r0, #0
   1567c:	beq	1346c <main@@Base+0xc8>
   15680:	mov	r0, r8
   15684:	mov	r1, r4
   15688:	mov	r2, r5
   1568c:	bl	1f210 <main@@Base+0xbe6c>
   15690:	mov	r1, r0
   15694:	sub	r0, r5, r0
   15698:	cmp	r0, #2
   1569c:	blt	156d0 <main@@Base+0x232c>
   156a0:	ldrb	r0, [r1]
   156a4:	cmp	r0, #32
   156a8:	bls	156bc <main@@Base+0x2318>
   156ac:	mov	r4, r1
   156b0:	cmp	r4, r5
   156b4:	bne	156e8 <main@@Base+0x2344>
   156b8:	b	15758 <main@@Base+0x23b4>
   156bc:	bne	156d0 <main@@Base+0x232c>
   156c0:	mov	r4, r1
   156c4:	ldrb	r0, [r4, #1]!
   156c8:	cmp	r0, #32
   156cc:	bhi	156e0 <main@@Base+0x233c>
   156d0:	mov	r0, r8
   156d4:	mov	r2, r5
   156d8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   156dc:	mov	r4, r0
   156e0:	cmp	r4, r5
   156e4:	beq	15758 <main@@Base+0x23b4>
   156e8:	ldrb	r0, [r4]
   156ec:	cmp	r0, #44	; 0x2c
   156f0:	bne	15760 <main@@Base+0x23bc>
   156f4:	add	r1, r4, #1
   156f8:	sub	r0, r5, r1
   156fc:	cmp	r0, #2
   15700:	blt	15730 <main@@Base+0x238c>
   15704:	ldrb	r0, [r1]
   15708:	cmp	r0, #32
   1570c:	bls	15720 <main@@Base+0x237c>
   15710:	mov	r4, r1
   15714:	cmp	r4, r5
   15718:	bne	15748 <main@@Base+0x23a4>
   1571c:	b	1578c <main@@Base+0x23e8>
   15720:	bne	15730 <main@@Base+0x238c>
   15724:	ldrb	r0, [r4, #2]!
   15728:	cmp	r0, #32
   1572c:	bhi	15740 <main@@Base+0x239c>
   15730:	mov	r0, r8
   15734:	mov	r2, r5
   15738:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1573c:	mov	r4, r0
   15740:	cmp	r4, r5
   15744:	beq	1578c <main@@Base+0x23e8>
   15748:	ldrb	r0, [r4]
   1574c:	cmp	r0, #93	; 0x5d
   15750:	bne	15668 <main@@Base+0x22c4>
   15754:	b	15768 <main@@Base+0x23c4>
   15758:	mov	r7, r5
   1575c:	b	155dc <main@@Base+0x2238>
   15760:	cmp	r0, #93	; 0x5d
   15764:	bne	15d70 <main@@Base+0x29cc>
   15768:	add	r1, r4, #1
   1576c:	sub	r0, r5, r1
   15770:	cmp	r0, #2
   15774:	blt	16258 <main@@Base+0x2eb4>
   15778:	ldrb	r0, [r1]
   1577c:	cmp	r0, #32
   15780:	bls	16244 <main@@Base+0x2ea0>
   15784:	mov	r7, r1
   15788:	b	155dc <main@@Base+0x2238>
   1578c:	mov	r0, r8
   15790:	mov	r1, r5
   15794:	b	15d78 <main@@Base+0x29d4>
   15798:	cmp	r0, #34	; 0x22
   1579c:	bne	16c40 <main@@Base+0x389c>
   157a0:	add	r1, r9, #22
   157a4:	sub	r0, r5, r1
   157a8:	cmp	r0, #2
   157ac:	blt	16bf4 <main@@Base+0x3850>
   157b0:	ldrb	r0, [r1]
   157b4:	cmp	r0, #32
   157b8:	bls	16be0 <main@@Base+0x383c>
   157bc:	mov	r4, r1
   157c0:	cmp	r4, r5
   157c4:	bne	16c0c <main@@Base+0x3868>
   157c8:	b	16c50 <main@@Base+0x38ac>
   157cc:	bne	157e0 <main@@Base+0x243c>
   157d0:	mov	r4, r1
   157d4:	ldrb	r0, [r4, #1]!
   157d8:	cmp	r0, #32
   157dc:	bhi	157f0 <main@@Base+0x244c>
   157e0:	mov	r0, r6
   157e4:	mov	r2, r5
   157e8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   157ec:	mov	r4, r0
   157f0:	cmp	r4, r5
   157f4:	beq	1583c <main@@Base+0x2498>
   157f8:	ldrb	r0, [r4]
   157fc:	cmp	r0, #58	; 0x3a
   15800:	bne	1583c <main@@Base+0x2498>
   15804:	add	r1, r4, #1
   15808:	sub	r0, r5, r1
   1580c:	cmp	r0, #2
   15810:	blt	16c8c <main@@Base+0x38e8>
   15814:	ldrb	r0, [r1]
   15818:	cmp	r0, #32
   1581c:	bls	16c7c <main@@Base+0x38d8>
   15820:	mov	r4, r1
   15824:	cmp	sl, r4
   15828:	bne	16ca4 <main@@Base+0x3900>
   1582c:	ldr	r8, [sp, #40]	; 0x28
   15830:	mov	r0, r8
   15834:	mov	r1, sl
   15838:	b	1671c <main@@Base+0x3378>
   1583c:	mov	r0, r6
   15840:	mov	r1, r4
   15844:	mov	r2, r5
   15848:	mov	r3, #4
   1584c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15850:	b	16c98 <main@@Base+0x38f4>
   15854:	cmp	r0, #34	; 0x22
   15858:	bne	1abfc <main@@Base+0x7858>
   1585c:	add	r1, r9, #18
   15860:	sub	r0, r5, r1
   15864:	cmp	r0, #2
   15868:	blt	16d50 <main@@Base+0x39ac>
   1586c:	ldrb	r0, [r1]
   15870:	cmp	r0, #32
   15874:	bls	16d3c <main@@Base+0x3998>
   15878:	mov	r4, r1
   1587c:	cmp	r4, r5
   15880:	bne	16d68 <main@@Base+0x39c4>
   15884:	b	16da0 <main@@Base+0x39fc>
   15888:	bne	1589c <main@@Base+0x24f8>
   1588c:	mov	r7, r1
   15890:	ldrb	r0, [r7, #1]!
   15894:	cmp	r0, #32
   15898:	bhi	158ac <main@@Base+0x2508>
   1589c:	mov	r0, r8
   158a0:	mov	r2, r5
   158a4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   158a8:	mov	r7, r0
   158ac:	cmp	r7, r5
   158b0:	beq	158ec <main@@Base+0x2548>
   158b4:	ldrb	r0, [r7]
   158b8:	cmp	r0, #58	; 0x3a
   158bc:	bne	158ec <main@@Base+0x2548>
   158c0:	add	r1, r7, #1
   158c4:	sub	r0, r5, r1
   158c8:	cmp	r0, #2
   158cc:	blt	16dfc <main@@Base+0x3a58>
   158d0:	ldrb	r0, [r1]
   158d4:	cmp	r0, #32
   158d8:	bls	16dec <main@@Base+0x3a48>
   158dc:	mov	r7, r1
   158e0:	cmp	r9, r7
   158e4:	bne	16e14 <main@@Base+0x3a70>
   158e8:	b	14978 <main@@Base+0x15d4>
   158ec:	mov	r0, r8
   158f0:	mov	r1, r7
   158f4:	mov	r2, r5
   158f8:	mov	r3, #4
   158fc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15900:	b	16e08 <main@@Base+0x3a64>
   15904:	bne	15918 <main@@Base+0x2574>
   15908:	mov	r4, r1
   1590c:	ldrb	r0, [r4, #1]!
   15910:	cmp	r0, #32
   15914:	bhi	15928 <main@@Base+0x2584>
   15918:	mov	r0, r8
   1591c:	mov	r2, r5
   15920:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15924:	mov	r4, r0
   15928:	cmp	r4, r5
   1592c:	beq	15968 <main@@Base+0x25c4>
   15930:	ldrb	r0, [r4]
   15934:	cmp	r0, #58	; 0x3a
   15938:	bne	15968 <main@@Base+0x25c4>
   1593c:	add	r1, r4, #1
   15940:	sub	r0, r5, r1
   15944:	cmp	r0, #2
   15948:	blt	16f70 <main@@Base+0x3bcc>
   1594c:	ldrb	r0, [r1]
   15950:	cmp	r0, #32
   15954:	bls	16f60 <main@@Base+0x3bbc>
   15958:	mov	r4, r1
   1595c:	cmp	r9, r4
   15960:	bne	16f88 <main@@Base+0x3be4>
   15964:	b	14978 <main@@Base+0x15d4>
   15968:	mov	r0, r8
   1596c:	mov	r1, r4
   15970:	mov	r2, r5
   15974:	mov	r3, #4
   15978:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1597c:	b	16f7c <main@@Base+0x3bd8>
   15980:	bne	15994 <main@@Base+0x25f0>
   15984:	mov	r7, r1
   15988:	ldrb	r0, [r7, #1]!
   1598c:	cmp	r0, #32
   15990:	bhi	159a4 <main@@Base+0x2600>
   15994:	mov	r0, r8
   15998:	mov	r2, r5
   1599c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   159a0:	mov	r7, r0
   159a4:	cmp	r7, r5
   159a8:	beq	159e4 <main@@Base+0x2640>
   159ac:	ldrb	r0, [r7]
   159b0:	cmp	r0, #58	; 0x3a
   159b4:	bne	159e4 <main@@Base+0x2640>
   159b8:	add	r1, r7, #1
   159bc:	sub	r0, r5, r1
   159c0:	cmp	r0, #2
   159c4:	blt	17e34 <main@@Base+0x4a90>
   159c8:	ldrb	r0, [r1]
   159cc:	cmp	r0, #32
   159d0:	bls	17e24 <main@@Base+0x4a80>
   159d4:	mov	r7, r1
   159d8:	cmp	r9, r7
   159dc:	bne	17e4c <main@@Base+0x4aa8>
   159e0:	b	14978 <main@@Base+0x15d4>
   159e4:	mov	r0, r8
   159e8:	mov	r1, r7
   159ec:	mov	r2, r5
   159f0:	mov	r3, #4
   159f4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   159f8:	b	17e40 <main@@Base+0x4a9c>
   159fc:	cmp	r0, #34	; 0x22
   15a00:	bne	1abfc <main@@Base+0x7858>
   15a04:	add	r1, r9, #10
   15a08:	sub	r0, r5, r1
   15a0c:	cmp	r0, #2
   15a10:	blt	17ee4 <main@@Base+0x4b40>
   15a14:	ldrb	r0, [r1]
   15a18:	cmp	r0, #32
   15a1c:	bls	17ed0 <main@@Base+0x4b2c>
   15a20:	mov	r4, r1
   15a24:	cmp	r4, r5
   15a28:	bne	17efc <main@@Base+0x4b58>
   15a2c:	b	17f34 <main@@Base+0x4b90>
   15a30:	cmp	r0, #34	; 0x22
   15a34:	bne	1abfc <main@@Base+0x7858>
   15a38:	add	r1, r9, #10
   15a3c:	sub	r0, r5, r1
   15a40:	cmp	r0, #2
   15a44:	blt	17f60 <main@@Base+0x4bbc>
   15a48:	ldrb	r0, [r1]
   15a4c:	cmp	r0, #32
   15a50:	bls	17f4c <main@@Base+0x4ba8>
   15a54:	mov	r4, r1
   15a58:	cmp	r4, r5
   15a5c:	bne	17f78 <main@@Base+0x4bd4>
   15a60:	b	17fb0 <main@@Base+0x4c0c>
   15a64:	cmp	r0, #34	; 0x22
   15a68:	bne	18030 <main@@Base+0x4c8c>
   15a6c:	add	r1, r9, #17
   15a70:	sub	r0, r5, r1
   15a74:	cmp	r0, #2
   15a78:	blt	17fdc <main@@Base+0x4c38>
   15a7c:	ldrb	r0, [r1]
   15a80:	cmp	r0, #32
   15a84:	bls	17fc8 <main@@Base+0x4c24>
   15a88:	mov	r7, r1
   15a8c:	cmp	r7, r5
   15a90:	bne	17ff4 <main@@Base+0x4c50>
   15a94:	b	180a8 <main@@Base+0x4d04>
   15a98:	cmp	r0, #34	; 0x22
   15a9c:	bne	18128 <main@@Base+0x4d84>
   15aa0:	add	r1, r9, #17
   15aa4:	sub	r0, r5, r1
   15aa8:	cmp	r0, #2
   15aac:	blt	180d4 <main@@Base+0x4d30>
   15ab0:	ldrb	r0, [r1]
   15ab4:	cmp	r0, #32
   15ab8:	bls	180c0 <main@@Base+0x4d1c>
   15abc:	mov	r7, r1
   15ac0:	cmp	r7, r5
   15ac4:	bne	180ec <main@@Base+0x4d48>
   15ac8:	b	181ac <main@@Base+0x4e08>
   15acc:	bne	15ae0 <main@@Base+0x273c>
   15ad0:	mov	r7, r1
   15ad4:	ldrb	r0, [r7, #1]!
   15ad8:	cmp	r0, #32
   15adc:	bhi	15af0 <main@@Base+0x274c>
   15ae0:	mov	r0, r8
   15ae4:	mov	r2, r5
   15ae8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15aec:	mov	r7, r0
   15af0:	cmp	r7, r5
   15af4:	beq	15ba4 <main@@Base+0x2800>
   15af8:	ldrb	r0, [r7]
   15afc:	cmp	r0, #58	; 0x3a
   15b00:	bne	15ba4 <main@@Base+0x2800>
   15b04:	add	r1, r7, #1
   15b08:	sub	r0, r5, r1
   15b0c:	cmp	r0, #2
   15b10:	blt	181ec <main@@Base+0x4e48>
   15b14:	ldrb	r0, [r1]
   15b18:	cmp	r0, #32
   15b1c:	bls	181dc <main@@Base+0x4e38>
   15b20:	mov	r7, r1
   15b24:	cmp	sl, r7
   15b28:	bne	18204 <main@@Base+0x4e60>
   15b2c:	add	r4, r9, #16
   15b30:	mov	r1, #8
   15b34:	mov	r2, #-268435456	; 0xf0000000
   15b38:	sub	r0, r5, r4
   15b3c:	cmp	r0, #8
   15b40:	movcc	r1, r0
   15b44:	add	r1, r2, r1, lsl #28
   15b48:	asr	r1, r1, #28
   15b4c:	cmp	r1, #0
   15b50:	blt	181a0 <main@@Base+0x4dfc>
   15b54:	ldrb	r1, [r4]
   15b58:	cmp	r1, #97	; 0x61
   15b5c:	bne	181a0 <main@@Base+0x4dfc>
   15b60:	ldr	sl, [sp, #36]	; 0x24
   15b64:	cmp	r0, #2
   15b68:	blt	1b86c <main@@Base+0x84c8>
   15b6c:	ldr	r2, [sp, #32]
   15b70:	mov	r1, r9
   15b74:	ldrb	r0, [r1, #17]!
   15b78:	ldr	r2, [r2]
   15b7c:	cmp	r2, #0
   15b80:	beq	15dbc <main@@Base+0x2a18>
   15b84:	cmp	r0, #33	; 0x21
   15b88:	bcc	15b94 <main@@Base+0x27f0>
   15b8c:	cmp	r0, #58	; 0x3a
   15b90:	bne	1b86c <main@@Base+0x84c8>
   15b94:	ldr	r0, [sp, #32]
   15b98:	mov	r2, #0
   15b9c:	str	r2, [r0]
   15ba0:	b	15dc8 <main@@Base+0x2a24>
   15ba4:	mov	r0, r8
   15ba8:	mov	r1, r7
   15bac:	mov	r2, r5
   15bb0:	mov	r3, #4
   15bb4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15bb8:	b	181f8 <main@@Base+0x4e54>
   15bbc:	bne	15bcc <main@@Base+0x2828>
   15bc0:	ldrb	r0, [r1, #2]!
   15bc4:	cmp	r0, #32
   15bc8:	bhi	15be0 <main@@Base+0x283c>
   15bcc:	mov	r1, r2
   15bd0:	mov	r0, r8
   15bd4:	mov	r2, r5
   15bd8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15bdc:	mov	r1, r0
   15be0:	cmp	r9, r1
   15be4:	beq	14978 <main@@Base+0x15d4>
   15be8:	mov	r0, r8
   15bec:	mov	r2, r5
   15bf0:	add	r3, sp, #52	; 0x34
   15bf4:	bl	1342c <main@@Base+0x88>
   15bf8:	mov	r4, r0
   15bfc:	ldr	r0, [sp, #52]	; 0x34
   15c00:	cmp	r0, #0
   15c04:	beq	1346c <main@@Base+0xc8>
   15c08:	ldr	r0, [r8]
   15c0c:	mov	r1, #12
   15c10:	b	15f2c <main@@Base+0x2b88>
   15c14:	bne	15c24 <main@@Base+0x2880>
   15c18:	ldrb	r0, [r7, #2]!
   15c1c:	cmp	r0, #32
   15c20:	bhi	15c34 <main@@Base+0x2890>
   15c24:	mov	r0, r8
   15c28:	mov	r2, r5
   15c2c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15c30:	mov	r7, r0
   15c34:	cmp	r9, r7
   15c38:	beq	14978 <main@@Base+0x15d4>
   15c3c:	mov	r6, #0
   15c40:	cmp	r7, r5
   15c44:	str	r6, [fp, #-52]	; 0xffffffcc
   15c48:	str	r6, [fp, #-56]	; 0xffffffc8
   15c4c:	strb	r6, [fp, #-60]	; 0xffffffc4
   15c50:	str	r6, [sp, #56]	; 0x38
   15c54:	beq	15cb4 <main@@Base+0x2910>
   15c58:	sub	r0, fp, #56	; 0x38
   15c5c:	mov	r1, r7
   15c60:	mov	r2, r5
   15c64:	add	r3, sp, #56	; 0x38
   15c68:	str	r0, [sp]
   15c6c:	mov	r0, r8
   15c70:	bl	31418 <flatcc_json_parser_integer@@Base>
   15c74:	cmp	r0, r7
   15c78:	beq	15cc4 <main@@Base+0x2920>
   15c7c:	ldr	r2, [sp, #56]	; 0x38
   15c80:	mov	r4, r0
   15c84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15c88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15c8c:	cmp	r2, #0
   15c90:	beq	15cd4 <main@@Base+0x2930>
   15c94:	subs	r2, r0, #129	; 0x81
   15c98:	sbcs	r1, r1, #0
   15c9c:	bcc	15d04 <main@@Base+0x2960>
   15ca0:	mov	r0, r8
   15ca4:	mov	r1, r4
   15ca8:	mov	r2, r5
   15cac:	mov	r3, #8
   15cb0:	b	15cf0 <main@@Base+0x294c>
   15cb4:	mov	r4, r5
   15cb8:	cmp	r7, r4
   15cbc:	bne	15d50 <main@@Base+0x29ac>
   15cc0:	b	15d1c <main@@Base+0x2978>
   15cc4:	mov	r4, r7
   15cc8:	cmp	r7, r4
   15ccc:	bne	15d50 <main@@Base+0x29ac>
   15cd0:	b	15d1c <main@@Base+0x2978>
   15cd4:	subs	r2, r0, #128	; 0x80
   15cd8:	sbcs	r1, r1, #0
   15cdc:	bcc	15d0c <main@@Base+0x2968>
   15ce0:	mov	r0, r8
   15ce4:	mov	r1, r4
   15ce8:	mov	r2, r5
   15cec:	mov	r3, #7
   15cf0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15cf4:	mov	r4, r0
   15cf8:	cmp	r7, r4
   15cfc:	bne	15d50 <main@@Base+0x29ac>
   15d00:	b	15d1c <main@@Base+0x2978>
   15d04:	rsb	r6, r0, #0
   15d08:	b	15d10 <main@@Base+0x296c>
   15d0c:	mov	r6, r0
   15d10:	strb	r6, [fp, #-60]	; 0xffffffc4
   15d14:	cmp	r7, r4
   15d18:	bne	15d50 <main@@Base+0x29ac>
   15d1c:	sub	r0, fp, #60	; 0x3c
   15d20:	mov	r1, r7
   15d24:	mov	r2, r5
   15d28:	str	r0, [sp]
   15d2c:	mov	r0, r8
   15d30:	ldr	r3, [pc, #4040]	; 16d00 <main@@Base+0x395c>
   15d34:	add	r3, pc, r3
   15d38:	bl	1eb3c <main@@Base+0xb798>
   15d3c:	mov	r4, r0
   15d40:	cmp	r0, r7
   15d44:	cmpne	r4, r5
   15d48:	beq	1346c <main@@Base+0xc8>
   15d4c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   15d50:	uxtb	r0, r6
   15d54:	cmp	r0, #8
   15d58:	ldrbeq	r0, [r8, #8]
   15d5c:	tsteq	r0, #2
   15d60:	beq	1b880 <main@@Base+0x84dc>
   15d64:	ldr	r0, [r8]
   15d68:	mov	r1, #6
   15d6c:	b	16bb0 <main@@Base+0x380c>
   15d70:	mov	r0, r8
   15d74:	mov	r1, r4
   15d78:	mov	r2, r5
   15d7c:	mov	r3, #9
   15d80:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15d84:	b	155d8 <main@@Base+0x2234>
   15d88:	cmp	r0, #34	; 0x22
   15d8c:	bne	1abfc <main@@Base+0x7858>
   15d90:	add	r1, r9, #18
   15d94:	sub	r0, r5, r1
   15d98:	cmp	r0, #2
   15d9c:	blt	182fc <main@@Base+0x4f58>
   15da0:	ldrb	r0, [r1]
   15da4:	cmp	r0, #32
   15da8:	bls	182e8 <main@@Base+0x4f44>
   15dac:	mov	r4, r1
   15db0:	cmp	r4, r5
   15db4:	bne	18314 <main@@Base+0x4f70>
   15db8:	b	18358 <main@@Base+0x4fb4>
   15dbc:	cmp	r0, #34	; 0x22
   15dc0:	bne	1b86c <main@@Base+0x84c8>
   15dc4:	add	r1, r9, #18
   15dc8:	sub	r0, r5, r1
   15dcc:	cmp	r0, #2
   15dd0:	blt	18384 <main@@Base+0x4fe0>
   15dd4:	ldrb	r0, [r1]
   15dd8:	cmp	r0, #32
   15ddc:	bls	18370 <main@@Base+0x4fcc>
   15de0:	mov	r7, r1
   15de4:	cmp	r7, r5
   15de8:	bne	1839c <main@@Base+0x4ff8>
   15dec:	b	183e0 <main@@Base+0x503c>
   15df0:	cmp	r0, #34	; 0x22
   15df4:	bne	15830 <main@@Base+0x248c>
   15df8:	add	r1, r9, #16
   15dfc:	sub	r0, r5, r1
   15e00:	cmp	r0, #2
   15e04:	blt	18714 <main@@Base+0x5370>
   15e08:	ldrb	r0, [r1]
   15e0c:	cmp	r0, #32
   15e10:	bls	18700 <main@@Base+0x535c>
   15e14:	mov	r4, r1
   15e18:	cmp	r4, r5
   15e1c:	bne	1872c <main@@Base+0x5388>
   15e20:	b	1876c <main@@Base+0x53c8>
   15e24:	bne	15e34 <main@@Base+0x2a90>
   15e28:	ldrb	r0, [r1, #2]!
   15e2c:	cmp	r0, #32
   15e30:	bhi	15e48 <main@@Base+0x2aa4>
   15e34:	mov	r1, r2
   15e38:	mov	r0, r8
   15e3c:	mov	r2, r5
   15e40:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15e44:	mov	r1, r0
   15e48:	cmp	r9, r1
   15e4c:	beq	14978 <main@@Base+0x15d4>
   15e50:	mov	r0, r8
   15e54:	mov	r2, r5
   15e58:	add	r3, sp, #52	; 0x34
   15e5c:	bl	319ac <flatcc_json_parser_build_string@@Base>
   15e60:	mov	r4, r0
   15e64:	ldr	r0, [sp, #52]	; 0x34
   15e68:	cmp	r0, #0
   15e6c:	beq	1346c <main@@Base+0xc8>
   15e70:	ldr	r0, [r8]
   15e74:	mov	r1, #3
   15e78:	b	15f2c <main@@Base+0x2b88>
   15e7c:	bne	15e8c <main@@Base+0x2ae8>
   15e80:	ldrb	r0, [r4, #2]!
   15e84:	cmp	r0, #32
   15e88:	bhi	15e9c <main@@Base+0x2af8>
   15e8c:	mov	r0, r8
   15e90:	mov	r2, r5
   15e94:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15e98:	mov	r4, r0
   15e9c:	cmp	r9, r4
   15ea0:	beq	14978 <main@@Base+0x15d4>
   15ea4:	ldr	r0, [r8]
   15ea8:	mov	r1, #1
   15eac:	mov	r2, #1
   15eb0:	mvn	r3, #0
   15eb4:	bl	2b840 <flatcc_builder_start_vector@@Base>
   15eb8:	cmp	r0, #0
   15ebc:	bne	1346c <main@@Base+0xc8>
   15ec0:	cmp	r4, r5
   15ec4:	beq	15ef8 <main@@Base+0x2b54>
   15ec8:	ldrb	r0, [r4]
   15ecc:	cmp	r0, #91	; 0x5b
   15ed0:	bne	15ef8 <main@@Base+0x2b54>
   15ed4:	add	r1, r4, #1
   15ed8:	sub	r0, r5, r1
   15edc:	cmp	r0, #2
   15ee0:	blt	15f50 <main@@Base+0x2bac>
   15ee4:	ldrb	r0, [r1]
   15ee8:	cmp	r0, #32
   15eec:	bls	15f40 <main@@Base+0x2b9c>
   15ef0:	mov	r4, r1
   15ef4:	b	15f60 <main@@Base+0x2bbc>
   15ef8:	mov	r0, r8
   15efc:	mov	r1, r4
   15f00:	mov	r2, r5
   15f04:	mov	r3, #22
   15f08:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   15f0c:	mov	r4, r0
   15f10:	ldr	r0, [r8]
   15f14:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   15f18:	cmp	r0, #0
   15f1c:	str	r0, [sp, #52]	; 0x34
   15f20:	beq	1346c <main@@Base+0xc8>
   15f24:	ldr	r0, [r8]
   15f28:	mov	r1, #30
   15f2c:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   15f30:	cmp	r0, #0
   15f34:	beq	1346c <main@@Base+0xc8>
   15f38:	ldr	r1, [sp, #52]	; 0x34
   15f3c:	b	1677c <main@@Base+0x33d8>
   15f40:	bne	15f50 <main@@Base+0x2bac>
   15f44:	ldrb	r0, [r4, #2]!
   15f48:	cmp	r0, #32
   15f4c:	bhi	15f60 <main@@Base+0x2bbc>
   15f50:	mov	r0, r8
   15f54:	mov	r2, r5
   15f58:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   15f5c:	mov	r4, r0
   15f60:	cmp	r4, r5
   15f64:	mov	r6, r5
   15f68:	beq	15f7c <main@@Base+0x2bd8>
   15f6c:	ldrb	r0, [r4]
   15f70:	cmp	r0, #93	; 0x5d
   15f74:	beq	16194 <main@@Base+0x2df0>
   15f78:	mov	r6, r4
   15f7c:	mov	r0, #0
   15f80:	mov	r1, #1
   15f84:	strb	r0, [fp, #-60]	; 0xffffffc4
   15f88:	ldr	r0, [r8]
   15f8c:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   15f90:	cmp	r0, #0
   15f94:	beq	1d5cc <main@@Base+0xa228>
   15f98:	mov	r7, r0
   15f9c:	mov	r4, r6
   15fa0:	mov	r6, #0
   15fa4:	cmp	r4, r5
   15fa8:	str	r6, [fp, #-52]	; 0xffffffcc
   15fac:	str	r6, [fp, #-56]	; 0xffffffc8
   15fb0:	strb	r6, [fp, #-60]	; 0xffffffc4
   15fb4:	str	r6, [sp, #56]	; 0x38
   15fb8:	beq	16000 <main@@Base+0x2c5c>
   15fbc:	sub	r0, fp, #56	; 0x38
   15fc0:	mov	r1, r4
   15fc4:	mov	r2, r5
   15fc8:	add	r3, sp, #56	; 0x38
   15fcc:	str	r0, [sp]
   15fd0:	mov	r0, r8
   15fd4:	bl	31418 <flatcc_json_parser_integer@@Base>
   15fd8:	cmp	r0, r4
   15fdc:	beq	16010 <main@@Base+0x2c6c>
   15fe0:	mov	r1, r0
   15fe4:	ldr	r0, [sp, #56]	; 0x38
   15fe8:	cmp	r0, #0
   15fec:	beq	16020 <main@@Base+0x2c7c>
   15ff0:	mov	r0, r8
   15ff4:	mov	r2, r5
   15ff8:	mov	r3, #8
   15ffc:	b	16040 <main@@Base+0x2c9c>
   16000:	mov	r1, r5
   16004:	cmp	r4, r1
   16008:	bne	16088 <main@@Base+0x2ce4>
   1600c:	b	16050 <main@@Base+0x2cac>
   16010:	mov	r1, r4
   16014:	cmp	r4, r1
   16018:	bne	16088 <main@@Base+0x2ce4>
   1601c:	b	16050 <main@@Base+0x2cac>
   16020:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16024:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16028:	subs	r3, r0, #256	; 0x100
   1602c:	sbcs	r2, r2, #0
   16030:	bcc	16170 <main@@Base+0x2dcc>
   16034:	mov	r0, r8
   16038:	mov	r2, r5
   1603c:	mov	r3, #7
   16040:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16044:	mov	r1, r0
   16048:	cmp	r4, r1
   1604c:	bne	16088 <main@@Base+0x2ce4>
   16050:	sub	r0, fp, #60	; 0x3c
   16054:	mov	r1, r4
   16058:	mov	r2, r5
   1605c:	str	r0, [sp]
   16060:	mov	r0, r8
   16064:	ldr	r3, [pc, #4084]	; 17060 <main@@Base+0x3cbc>
   16068:	add	r3, pc, r3
   1606c:	bl	1ed84 <main@@Base+0xb9e0>
   16070:	mov	r1, r0
   16074:	cmp	r0, r4
   16078:	beq	1d5f0 <main@@Base+0xa24c>
   1607c:	cmp	r1, r5
   16080:	beq	1d5f0 <main@@Base+0xa24c>
   16084:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   16088:	sub	r0, r5, r1
   1608c:	strb	r6, [r7]
   16090:	cmp	r0, #2
   16094:	blt	160c8 <main@@Base+0x2d24>
   16098:	ldrb	r0, [r1]
   1609c:	cmp	r0, #32
   160a0:	bls	160b4 <main@@Base+0x2d10>
   160a4:	mov	r4, r1
   160a8:	cmp	r4, r5
   160ac:	bne	160e0 <main@@Base+0x2d3c>
   160b0:	b	16184 <main@@Base+0x2de0>
   160b4:	bne	160c8 <main@@Base+0x2d24>
   160b8:	mov	r4, r1
   160bc:	ldrb	r0, [r4, #1]!
   160c0:	cmp	r0, #32
   160c4:	bhi	160d8 <main@@Base+0x2d34>
   160c8:	mov	r0, r8
   160cc:	mov	r2, r5
   160d0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   160d4:	mov	r4, r0
   160d8:	cmp	r4, r5
   160dc:	beq	16184 <main@@Base+0x2de0>
   160e0:	ldrb	r0, [r4]
   160e4:	cmp	r0, #44	; 0x2c
   160e8:	bne	1618c <main@@Base+0x2de8>
   160ec:	add	r1, r4, #1
   160f0:	sub	r0, r5, r1
   160f4:	cmp	r0, #2
   160f8:	blt	16128 <main@@Base+0x2d84>
   160fc:	ldrb	r0, [r1]
   16100:	cmp	r0, #32
   16104:	bls	16118 <main@@Base+0x2d74>
   16108:	mov	r4, r1
   1610c:	cmp	r4, r5
   16110:	bne	16140 <main@@Base+0x2d9c>
   16114:	b	161d8 <main@@Base+0x2e34>
   16118:	bne	16128 <main@@Base+0x2d84>
   1611c:	ldrb	r0, [r4, #2]!
   16120:	cmp	r0, #32
   16124:	bhi	16138 <main@@Base+0x2d94>
   16128:	mov	r0, r8
   1612c:	mov	r2, r5
   16130:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16134:	mov	r4, r0
   16138:	cmp	r4, r5
   1613c:	beq	161d8 <main@@Base+0x2e34>
   16140:	ldrb	r0, [r4]
   16144:	cmp	r0, #93	; 0x5d
   16148:	beq	16194 <main@@Base+0x2df0>
   1614c:	mov	r0, #0
   16150:	mov	r1, #1
   16154:	strb	r0, [fp, #-60]	; 0xffffffc4
   16158:	ldr	r0, [r8]
   1615c:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   16160:	mov	r7, r0
   16164:	cmp	r0, #0
   16168:	bne	15fa0 <main@@Base+0x2bfc>
   1616c:	b	1346c <main@@Base+0xc8>
   16170:	mov	r6, r0
   16174:	strb	r0, [fp, #-60]	; 0xffffffc4
   16178:	cmp	r4, r1
   1617c:	bne	16088 <main@@Base+0x2ce4>
   16180:	b	16050 <main@@Base+0x2cac>
   16184:	mov	r4, r5
   16188:	b	15f10 <main@@Base+0x2b6c>
   1618c:	cmp	r0, #93	; 0x5d
   16190:	bne	16c68 <main@@Base+0x38c4>
   16194:	add	r1, r4, #1
   16198:	sub	r0, r5, r1
   1619c:	cmp	r0, #2
   161a0:	blt	161c8 <main@@Base+0x2e24>
   161a4:	ldrb	r0, [r1]
   161a8:	cmp	r0, #32
   161ac:	bls	161b8 <main@@Base+0x2e14>
   161b0:	mov	r4, r1
   161b4:	b	15f10 <main@@Base+0x2b6c>
   161b8:	bne	161c8 <main@@Base+0x2e24>
   161bc:	ldrb	r0, [r4, #2]!
   161c0:	cmp	r0, #32
   161c4:	bhi	15f10 <main@@Base+0x2b6c>
   161c8:	mov	r0, r8
   161cc:	mov	r2, r5
   161d0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   161d4:	b	15f0c <main@@Base+0x2b68>
   161d8:	mov	r0, r8
   161dc:	mov	r1, r5
   161e0:	b	16c70 <main@@Base+0x38cc>
   161e4:	bne	161f4 <main@@Base+0x2e50>
   161e8:	ldrb	r0, [r1, #2]!
   161ec:	cmp	r0, #32
   161f0:	bhi	16208 <main@@Base+0x2e64>
   161f4:	ldr	r0, [sp, #40]	; 0x28
   161f8:	mov	r1, r2
   161fc:	mov	r2, r5
   16200:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16204:	mov	r1, r0
   16208:	cmp	r9, r1
   1620c:	beq	151a0 <main@@Base+0x1dfc>
   16210:	ldr	r0, [sp, #48]	; 0x30
   16214:	mov	r2, #8
   16218:	mov	r3, #0
   1621c:	str	r2, [sp]
   16220:	mov	r2, r5
   16224:	str	r0, [sp, #4]
   16228:	ldr	r0, [pc, #4064]	; 17210 <main@@Base+0x3e6c>
   1622c:	ldr	r8, [sp, #40]	; 0x28
   16230:	add	r0, pc, r0
   16234:	str	r0, [sp, #8]
   16238:	mov	r0, r8
   1623c:	bl	31d80 <flatcc_json_parser_union@@Base>
   16240:	b	16724 <main@@Base+0x3380>
   16244:	bne	16258 <main@@Base+0x2eb4>
   16248:	ldrb	r0, [r4, #2]!
   1624c:	cmp	r0, #32
   16250:	mov	r7, r4
   16254:	bhi	155dc <main@@Base+0x2238>
   16258:	mov	r0, r8
   1625c:	mov	r2, r5
   16260:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16264:	b	155d8 <main@@Base+0x2234>
   16268:	cmp	r0, #34	; 0x22
   1626c:	bne	1abfc <main@@Base+0x7858>
   16270:	add	r1, r9, #21
   16274:	sub	r0, r5, r1
   16278:	cmp	r0, #2
   1627c:	blt	18798 <main@@Base+0x53f4>
   16280:	ldrb	r0, [r1]
   16284:	cmp	r0, #32
   16288:	bls	18784 <main@@Base+0x53e0>
   1628c:	mov	r4, r1
   16290:	cmp	r4, r5
   16294:	bne	187b0 <main@@Base+0x540c>
   16298:	b	187f4 <main@@Base+0x5450>
   1629c:	bne	162b0 <main@@Base+0x2f0c>
   162a0:	mov	r4, r1
   162a4:	ldrb	r0, [r4, #1]!
   162a8:	cmp	r0, #32
   162ac:	bhi	162c0 <main@@Base+0x2f1c>
   162b0:	mov	r0, r8
   162b4:	mov	r2, r5
   162b8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   162bc:	mov	r4, r0
   162c0:	cmp	r4, r5
   162c4:	beq	16300 <main@@Base+0x2f5c>
   162c8:	ldrb	r0, [r4]
   162cc:	cmp	r0, #58	; 0x3a
   162d0:	bne	16300 <main@@Base+0x2f5c>
   162d4:	add	r1, r4, #1
   162d8:	sub	r0, r5, r1
   162dc:	cmp	r0, #2
   162e0:	blt	18820 <main@@Base+0x547c>
   162e4:	ldrb	r0, [r1]
   162e8:	cmp	r0, #32
   162ec:	bls	18810 <main@@Base+0x546c>
   162f0:	mov	r4, r1
   162f4:	cmp	r7, r4
   162f8:	bne	18838 <main@@Base+0x5494>
   162fc:	b	1abfc <main@@Base+0x7858>
   16300:	mov	r0, r8
   16304:	mov	r1, r4
   16308:	mov	r2, r5
   1630c:	mov	r3, #4
   16310:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16314:	b	1882c <main@@Base+0x5488>
   16318:	bne	1632c <main@@Base+0x2f88>
   1631c:	mov	r4, r1
   16320:	ldrb	r0, [r4, #1]!
   16324:	cmp	r0, #32
   16328:	bhi	1633c <main@@Base+0x2f98>
   1632c:	mov	r0, r8
   16330:	mov	r2, r5
   16334:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16338:	mov	r4, r0
   1633c:	cmp	r4, r5
   16340:	beq	1637c <main@@Base+0x2fd8>
   16344:	ldrb	r0, [r4]
   16348:	cmp	r0, #58	; 0x3a
   1634c:	bne	1637c <main@@Base+0x2fd8>
   16350:	add	r1, r4, #1
   16354:	sub	r0, r5, r1
   16358:	cmp	r0, #2
   1635c:	blt	18990 <main@@Base+0x55ec>
   16360:	ldrb	r0, [r1]
   16364:	cmp	r0, #32
   16368:	bls	18980 <main@@Base+0x55dc>
   1636c:	mov	r4, r1
   16370:	cmp	r7, r4
   16374:	bne	189a8 <main@@Base+0x5604>
   16378:	b	1abfc <main@@Base+0x7858>
   1637c:	mov	r0, r8
   16380:	mov	r1, r4
   16384:	mov	r2, r5
   16388:	mov	r3, #4
   1638c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16390:	b	1899c <main@@Base+0x55f8>
   16394:	bne	163a8 <main@@Base+0x3004>
   16398:	mov	r7, r1
   1639c:	ldrb	r0, [r7, #1]!
   163a0:	cmp	r0, #32
   163a4:	bhi	163b8 <main@@Base+0x3014>
   163a8:	mov	r0, r8
   163ac:	mov	r2, r5
   163b0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   163b4:	mov	r7, r0
   163b8:	cmp	r7, r5
   163bc:	beq	163f8 <main@@Base+0x3054>
   163c0:	ldrb	r0, [r7]
   163c4:	cmp	r0, #58	; 0x3a
   163c8:	bne	163f8 <main@@Base+0x3054>
   163cc:	add	r1, r7, #1
   163d0:	sub	r0, r5, r1
   163d4:	cmp	r0, #2
   163d8:	blt	18a38 <main@@Base+0x5694>
   163dc:	ldrb	r0, [r1]
   163e0:	cmp	r0, #32
   163e4:	bls	18a28 <main@@Base+0x5684>
   163e8:	mov	r7, r1
   163ec:	cmp	sl, r7
   163f0:	bne	18a50 <main@@Base+0x56ac>
   163f4:	b	15830 <main@@Base+0x248c>
   163f8:	mov	r0, r8
   163fc:	mov	r1, r7
   16400:	mov	r2, r5
   16404:	mov	r3, #4
   16408:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1640c:	b	18a44 <main@@Base+0x56a0>
   16410:	bne	16424 <main@@Base+0x3080>
   16414:	mov	r7, r1
   16418:	ldrb	r0, [r7, #1]!
   1641c:	cmp	r0, #32
   16420:	bhi	16434 <main@@Base+0x3090>
   16424:	mov	r0, r8
   16428:	mov	r2, r5
   1642c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16430:	mov	r7, r0
   16434:	cmp	r7, r5
   16438:	beq	16474 <main@@Base+0x30d0>
   1643c:	ldrb	r0, [r7]
   16440:	cmp	r0, #58	; 0x3a
   16444:	bne	16474 <main@@Base+0x30d0>
   16448:	add	r1, r7, #1
   1644c:	sub	r0, r5, r1
   16450:	cmp	r0, #2
   16454:	blt	18b5c <main@@Base+0x57b8>
   16458:	ldrb	r0, [r1]
   1645c:	cmp	r0, #32
   16460:	bls	18b4c <main@@Base+0x57a8>
   16464:	mov	r7, r1
   16468:	cmp	r9, r7
   1646c:	bne	18b74 <main@@Base+0x57d0>
   16470:	b	14978 <main@@Base+0x15d4>
   16474:	mov	r0, r8
   16478:	mov	r1, r7
   1647c:	mov	r2, r5
   16480:	mov	r3, #4
   16484:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16488:	b	18b68 <main@@Base+0x57c4>
   1648c:	andeq	r1, r3, r0, lsr ip
   16490:	bne	164a4 <main@@Base+0x3100>
   16494:	mov	r7, r1
   16498:	ldrb	r0, [r7, #1]!
   1649c:	cmp	r0, #32
   164a0:	bhi	164b4 <main@@Base+0x3110>
   164a4:	mov	r0, r8
   164a8:	mov	r2, r5
   164ac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   164b0:	mov	r7, r0
   164b4:	cmp	r7, r5
   164b8:	beq	164f4 <main@@Base+0x3150>
   164bc:	ldrb	r0, [r7]
   164c0:	cmp	r0, #58	; 0x3a
   164c4:	bne	164f4 <main@@Base+0x3150>
   164c8:	add	r1, r7, #1
   164cc:	sub	r0, r5, r1
   164d0:	cmp	r0, #2
   164d4:	blt	18cdc <main@@Base+0x5938>
   164d8:	ldrb	r0, [r1]
   164dc:	cmp	r0, #32
   164e0:	bls	18ccc <main@@Base+0x5928>
   164e4:	mov	r7, r1
   164e8:	cmp	r9, r7
   164ec:	bne	18cf4 <main@@Base+0x5950>
   164f0:	b	14978 <main@@Base+0x15d4>
   164f4:	mov	r0, r8
   164f8:	mov	r1, r7
   164fc:	mov	r2, r5
   16500:	mov	r3, #4
   16504:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16508:	b	18ce8 <main@@Base+0x5944>
   1650c:	bne	16520 <main@@Base+0x317c>
   16510:	mov	r7, r1
   16514:	ldrb	r0, [r7, #1]!
   16518:	cmp	r0, #32
   1651c:	bhi	16530 <main@@Base+0x318c>
   16520:	mov	r0, r8
   16524:	mov	r2, r5
   16528:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1652c:	mov	r7, r0
   16530:	cmp	r7, r5
   16534:	beq	165e4 <main@@Base+0x3240>
   16538:	ldrb	r0, [r7]
   1653c:	cmp	r0, #58	; 0x3a
   16540:	bne	165e4 <main@@Base+0x3240>
   16544:	add	r1, r7, #1
   16548:	sub	r0, r5, r1
   1654c:	cmp	r0, #2
   16550:	blt	18d84 <main@@Base+0x59e0>
   16554:	ldrb	r0, [r1]
   16558:	cmp	r0, #32
   1655c:	bls	18d74 <main@@Base+0x59d0>
   16560:	mov	r7, r1
   16564:	cmp	sl, r7
   16568:	bne	18d9c <main@@Base+0x59f8>
   1656c:	add	r4, r9, #16
   16570:	mov	r1, #8
   16574:	mov	r2, #-268435456	; 0xf0000000
   16578:	sub	r0, r5, r4
   1657c:	cmp	r0, #8
   16580:	movcc	r1, r0
   16584:	add	r1, r2, r1, lsl #28
   16588:	asr	r1, r1, #28
   1658c:	cmp	r1, #0
   16590:	blt	181a0 <main@@Base+0x4dfc>
   16594:	ldrb	r1, [r4]
   16598:	cmp	r1, #97	; 0x61
   1659c:	bne	181a0 <main@@Base+0x4dfc>
   165a0:	ldr	sl, [sp, #36]	; 0x24
   165a4:	cmp	r0, #2
   165a8:	blt	1b86c <main@@Base+0x84c8>
   165ac:	ldr	r2, [sp, #32]
   165b0:	mov	r1, r9
   165b4:	ldrb	r0, [r1, #17]!
   165b8:	ldr	r2, [r2]
   165bc:	cmp	r2, #0
   165c0:	beq	16db8 <main@@Base+0x3a14>
   165c4:	cmp	r0, #33	; 0x21
   165c8:	bcc	165d4 <main@@Base+0x3230>
   165cc:	cmp	r0, #58	; 0x3a
   165d0:	bne	1b86c <main@@Base+0x84c8>
   165d4:	ldr	r0, [sp, #32]
   165d8:	mov	r2, #0
   165dc:	str	r2, [r0]
   165e0:	b	16dc4 <main@@Base+0x3a20>
   165e4:	mov	r0, r8
   165e8:	mov	r1, r7
   165ec:	mov	r2, r5
   165f0:	mov	r3, #4
   165f4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   165f8:	b	18d90 <main@@Base+0x59ec>
   165fc:	bne	1660c <main@@Base+0x3268>
   16600:	ldrb	r0, [r7, #2]!
   16604:	cmp	r0, #32
   16608:	bhi	1661c <main@@Base+0x3278>
   1660c:	ldr	r0, [sp, #40]	; 0x28
   16610:	mov	r2, r5
   16614:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16618:	mov	r7, r0
   1661c:	cmp	r9, r7
   16620:	beq	16680 <main@@Base+0x32dc>
   16624:	ldr	r8, [sp, #40]	; 0x28
   16628:	mov	r1, #4
   1662c:	mov	r2, #2
   16630:	mvn	r3, #-1073741824	; 0xc0000000
   16634:	ldr	r0, [r8]
   16638:	bl	2b840 <flatcc_builder_start_vector@@Base>
   1663c:	cmp	r0, #0
   16640:	bne	1d5c4 <main@@Base+0xa220>
   16644:	cmp	r7, r5
   16648:	beq	16730 <main@@Base+0x338c>
   1664c:	ldrb	r0, [r7]
   16650:	cmp	r0, #91	; 0x5b
   16654:	bne	16730 <main@@Base+0x338c>
   16658:	ldr	sl, [sp, #36]	; 0x24
   1665c:	add	r1, r7, #1
   16660:	sub	r0, r5, r1
   16664:	cmp	r0, #2
   16668:	blt	167c8 <main@@Base+0x3424>
   1666c:	ldrb	r0, [r1]
   16670:	cmp	r0, #32
   16674:	bls	167b8 <main@@Base+0x3414>
   16678:	mov	r7, r1
   1667c:	b	167d8 <main@@Base+0x3434>
   16680:	movw	r0, #31088	; 0x7970
   16684:	movt	r0, #24436	; 0x5f74
   16688:	eor	r0, sl, r0
   1668c:	orrs	r0, r0, r4
   16690:	bne	16710 <main@@Base+0x336c>
   16694:	add	r4, r9, #8
   16698:	mov	r1, #8
   1669c:	mov	r2, #-268435456	; 0xf0000000
   166a0:	ldr	r8, [sp, #40]	; 0x28
   166a4:	ldr	sl, [sp, #36]	; 0x24
   166a8:	sub	r0, r5, r4
   166ac:	cmp	r0, #8
   166b0:	movcc	r1, r0
   166b4:	add	r1, r2, r1, lsl #28
   166b8:	asr	r1, r1, #28
   166bc:	cmp	r1, #0
   166c0:	blt	1b86c <main@@Base+0x84c8>
   166c4:	ldrb	r1, [r4]
   166c8:	cmp	r1, #101	; 0x65
   166cc:	bne	1b86c <main@@Base+0x84c8>
   166d0:	cmp	r0, #2
   166d4:	blt	1b86c <main@@Base+0x84c8>
   166d8:	ldr	r2, [sp, #32]
   166dc:	mov	r1, r9
   166e0:	ldrb	r0, [r1, #9]!
   166e4:	ldr	r2, [r2]
   166e8:	cmp	r2, #0
   166ec:	beq	16784 <main@@Base+0x33e0>
   166f0:	cmp	r0, #33	; 0x21
   166f4:	bcc	16700 <main@@Base+0x335c>
   166f8:	cmp	r0, #58	; 0x3a
   166fc:	bne	1b86c <main@@Base+0x84c8>
   16700:	ldr	r0, [sp, #32]
   16704:	mov	r2, #0
   16708:	str	r2, [r0]
   1670c:	b	16790 <main@@Base+0x33ec>
   16710:	ldr	r8, [sp, #40]	; 0x28
   16714:	mov	r0, r8
   16718:	mov	r1, r9
   1671c:	mov	r2, r5
   16720:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   16724:	mov	r4, r0
   16728:	ldr	sl, [sp, #36]	; 0x24
   1672c:	b	1b880 <main@@Base+0x84dc>
   16730:	mov	r0, r8
   16734:	mov	r1, r7
   16738:	mov	r2, r5
   1673c:	mov	r3, #22
   16740:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16744:	ldr	sl, [sp, #36]	; 0x24
   16748:	mov	r7, r0
   1674c:	ldr	r0, [r8]
   16750:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   16754:	cmp	r0, #0
   16758:	str	r0, [sp, #52]	; 0x34
   1675c:	beq	1d5c4 <main@@Base+0xa220>
   16760:	ldr	r0, [r8]
   16764:	mov	r1, #31
   16768:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   1676c:	cmp	r0, #0
   16770:	beq	1d5c4 <main@@Base+0xa220>
   16774:	ldr	r1, [sp, #52]	; 0x34
   16778:	mov	r4, r7
   1677c:	str	r1, [r0]
   16780:	b	1b880 <main@@Base+0x84dc>
   16784:	cmp	r0, #34	; 0x22
   16788:	bne	1b86c <main@@Base+0x84c8>
   1678c:	add	r1, r9, #10
   16790:	sub	r0, r5, r1
   16794:	cmp	r0, #2
   16798:	blt	16994 <main@@Base+0x35f0>
   1679c:	ldrb	r0, [r1]
   167a0:	cmp	r0, #32
   167a4:	bls	16980 <main@@Base+0x35dc>
   167a8:	mov	r2, r1
   167ac:	cmp	r2, r5
   167b0:	bne	169ac <main@@Base+0x3608>
   167b4:	b	169e4 <main@@Base+0x3640>
   167b8:	bne	167c8 <main@@Base+0x3424>
   167bc:	ldrb	r0, [r7, #2]!
   167c0:	cmp	r0, #32
   167c4:	bhi	167d8 <main@@Base+0x3434>
   167c8:	mov	r0, r8
   167cc:	mov	r2, r5
   167d0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   167d4:	mov	r7, r0
   167d8:	cmp	r7, r5
   167dc:	mov	r4, r5
   167e0:	beq	16824 <main@@Base+0x3480>
   167e4:	ldrb	r0, [r7]
   167e8:	cmp	r0, #93	; 0x5d
   167ec:	bne	16820 <main@@Base+0x347c>
   167f0:	add	r1, r7, #1
   167f4:	sub	r0, r5, r1
   167f8:	cmp	r0, #2
   167fc:	blt	19b7c <main@@Base+0x67d8>
   16800:	ldrb	r0, [r1]
   16804:	cmp	r0, #32
   16808:	bhi	1692c <main@@Base+0x3588>
   1680c:	bne	19b7c <main@@Base+0x67d8>
   16810:	ldrb	r0, [r7, #2]!
   16814:	cmp	r0, #32
   16818:	bls	19b7c <main@@Base+0x67d8>
   1681c:	b	1674c <main@@Base+0x33a8>
   16820:	mov	r4, r7
   16824:	ldr	r0, [r8]
   16828:	mov	r1, #1
   1682c:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   16830:	mov	r3, r0
   16834:	cmp	r0, #0
   16838:	beq	1346c <main@@Base+0xc8>
   1683c:	mov	r0, r8
   16840:	mov	r1, r4
   16844:	mov	r2, r5
   16848:	bl	1f210 <main@@Base+0xbe6c>
   1684c:	mov	r1, r0
   16850:	sub	r0, r5, r0
   16854:	cmp	r0, #2
   16858:	blt	1688c <main@@Base+0x34e8>
   1685c:	ldrb	r0, [r1]
   16860:	cmp	r0, #32
   16864:	bls	16878 <main@@Base+0x34d4>
   16868:	mov	r4, r1
   1686c:	cmp	r4, r5
   16870:	bne	168a4 <main@@Base+0x3500>
   16874:	b	16934 <main@@Base+0x3590>
   16878:	bne	1688c <main@@Base+0x34e8>
   1687c:	mov	r4, r1
   16880:	ldrb	r0, [r4, #1]!
   16884:	cmp	r0, #32
   16888:	bhi	1689c <main@@Base+0x34f8>
   1688c:	mov	r0, r8
   16890:	mov	r2, r5
   16894:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16898:	mov	r4, r0
   1689c:	cmp	r4, r5
   168a0:	beq	16934 <main@@Base+0x3590>
   168a4:	ldrb	r0, [r4]
   168a8:	cmp	r0, #44	; 0x2c
   168ac:	bne	1693c <main@@Base+0x3598>
   168b0:	add	r1, r4, #1
   168b4:	sub	r0, r5, r1
   168b8:	cmp	r0, #2
   168bc:	blt	168ec <main@@Base+0x3548>
   168c0:	ldrb	r0, [r1]
   168c4:	cmp	r0, #32
   168c8:	bls	168dc <main@@Base+0x3538>
   168cc:	mov	r4, r1
   168d0:	cmp	r4, r5
   168d4:	bne	16904 <main@@Base+0x3560>
   168d8:	b	16974 <main@@Base+0x35d0>
   168dc:	bne	168ec <main@@Base+0x3548>
   168e0:	ldrb	r0, [r4, #2]!
   168e4:	cmp	r0, #32
   168e8:	bhi	168fc <main@@Base+0x3558>
   168ec:	mov	r0, r8
   168f0:	mov	r2, r5
   168f4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   168f8:	mov	r4, r0
   168fc:	cmp	r4, r5
   16900:	beq	16974 <main@@Base+0x35d0>
   16904:	ldrb	r0, [r4]
   16908:	cmp	r0, #93	; 0x5d
   1690c:	bne	16824 <main@@Base+0x3480>
   16910:	add	r1, r4, #1
   16914:	sub	r0, r5, r1
   16918:	cmp	r0, #2
   1691c:	blt	19b7c <main@@Base+0x67d8>
   16920:	ldrb	r0, [r1]
   16924:	cmp	r0, #32
   16928:	bls	18f5c <main@@Base+0x5bb8>
   1692c:	mov	r7, r1
   16930:	b	1674c <main@@Base+0x33a8>
   16934:	mov	r7, r5
   16938:	b	1674c <main@@Base+0x33a8>
   1693c:	cmp	r0, #93	; 0x5d
   16940:	bne	181c4 <main@@Base+0x4e20>
   16944:	add	r1, r4, #1
   16948:	sub	r0, r5, r1
   1694c:	cmp	r0, #2
   16950:	blt	19b7c <main@@Base+0x67d8>
   16954:	ldrb	r0, [r1]
   16958:	cmp	r0, #32
   1695c:	bls	19b5c <main@@Base+0x67b8>
   16960:	ldr	r5, [sp, #44]	; 0x2c
   16964:	ldr	r8, [sp, #40]	; 0x28
   16968:	ldr	sl, [sp, #36]	; 0x24
   1696c:	mov	r7, r1
   16970:	b	1674c <main@@Base+0x33a8>
   16974:	mov	r0, r8
   16978:	mov	r1, r5
   1697c:	b	181cc <main@@Base+0x4e28>
   16980:	bne	16994 <main@@Base+0x35f0>
   16984:	mov	r2, r1
   16988:	ldrb	r0, [r2, #1]!
   1698c:	cmp	r0, #32
   16990:	bhi	169a4 <main@@Base+0x3600>
   16994:	mov	r0, r8
   16998:	mov	r2, r5
   1699c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   169a0:	mov	r2, r0
   169a4:	cmp	r2, r5
   169a8:	beq	169e4 <main@@Base+0x3640>
   169ac:	ldrb	r0, [r2]
   169b0:	cmp	r0, #58	; 0x3a
   169b4:	bne	169e4 <main@@Base+0x3640>
   169b8:	add	r1, r2, #1
   169bc:	sub	r0, r5, r1
   169c0:	cmp	r0, #2
   169c4:	blt	18928 <main@@Base+0x5584>
   169c8:	ldrb	r0, [r1]
   169cc:	cmp	r0, #32
   169d0:	bls	18918 <main@@Base+0x5574>
   169d4:	mov	r2, r1
   169d8:	cmp	r4, r2
   169dc:	bne	18940 <main@@Base+0x559c>
   169e0:	b	1b86c <main@@Base+0x84c8>
   169e4:	mov	r1, r2
   169e8:	mov	r0, r8
   169ec:	mov	r2, r5
   169f0:	mov	r3, #4
   169f4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   169f8:	b	18934 <main@@Base+0x5590>
   169fc:	cmp	r0, #34	; 0x22
   16a00:	bne	1abfc <main@@Base+0x7858>
   16a04:	add	r1, r9, #18
   16a08:	sub	r0, r5, r1
   16a0c:	cmp	r0, #2
   16a10:	blt	18e74 <main@@Base+0x5ad0>
   16a14:	ldrb	r0, [r1]
   16a18:	cmp	r0, #32
   16a1c:	bls	18e60 <main@@Base+0x5abc>
   16a20:	mov	r4, r1
   16a24:	cmp	r4, r5
   16a28:	bne	18e8c <main@@Base+0x5ae8>
   16a2c:	b	18ed0 <main@@Base+0x5b2c>
   16a30:	bne	16a40 <main@@Base+0x369c>
   16a34:	ldrb	r0, [r7, #2]!
   16a38:	cmp	r0, #32
   16a3c:	bhi	16a50 <main@@Base+0x36ac>
   16a40:	mov	r0, r8
   16a44:	mov	r2, r5
   16a48:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16a4c:	mov	r7, r0
   16a50:	cmp	r9, r7
   16a54:	beq	14978 <main@@Base+0x15d4>
   16a58:	mov	r0, #0
   16a5c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16a60:	sub	r0, r5, r7
   16a64:	cmp	r0, #4
   16a68:	blt	16aa4 <main@@Base+0x3700>
   16a6c:	ldr	r1, [r7]
   16a70:	movw	r2, #29300	; 0x7274
   16a74:	movt	r2, #25973	; 0x6575
   16a78:	cmp	r1, r2
   16a7c:	beq	16b0c <main@@Base+0x3768>
   16a80:	cmp	r0, #5
   16a84:	blt	16aa4 <main@@Base+0x3700>
   16a88:	ldr	r1, [pc, #4052]	; 17a64 <main@@Base+0x46c0>
   16a8c:	mov	r0, r7
   16a90:	mov	r2, #5
   16a94:	add	r1, pc, r1
   16a98:	bl	12ac0 <memcmp@plt>
   16a9c:	cmp	r0, #0
   16aa0:	beq	16bcc <main@@Base+0x3828>
   16aa4:	mov	r6, #0
   16aa8:	cmp	r7, r5
   16aac:	str	r6, [fp, #-52]	; 0xffffffcc
   16ab0:	str	r6, [fp, #-56]	; 0xffffffc8
   16ab4:	str	r6, [sp, #56]	; 0x38
   16ab8:	beq	16b04 <main@@Base+0x3760>
   16abc:	sub	r0, fp, #56	; 0x38
   16ac0:	mov	r1, r7
   16ac4:	mov	r2, r5
   16ac8:	add	r3, sp, #56	; 0x38
   16acc:	str	r0, [sp]
   16ad0:	mov	r0, r8
   16ad4:	bl	31418 <flatcc_json_parser_integer@@Base>
   16ad8:	cmp	r0, r7
   16adc:	beq	16b18 <main@@Base+0x3774>
   16ae0:	mov	r4, r0
   16ae4:	ldr	r0, [sp, #56]	; 0x38
   16ae8:	cmp	r0, #0
   16aec:	beq	16b20 <main@@Base+0x377c>
   16af0:	mov	r0, r8
   16af4:	mov	r1, r4
   16af8:	mov	r2, r5
   16afc:	mov	r3, #8
   16b00:	b	16b44 <main@@Base+0x37a0>
   16b04:	mov	r4, r5
   16b08:	b	16b4c <main@@Base+0x37a8>
   16b0c:	mov	r6, #1
   16b10:	add	r4, r7, #4
   16b14:	b	16b58 <main@@Base+0x37b4>
   16b18:	mov	r4, r7
   16b1c:	b	16b4c <main@@Base+0x37a8>
   16b20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16b24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16b28:	subs	r2, r0, #256	; 0x100
   16b2c:	sbcs	r1, r1, #0
   16b30:	bcc	16bd8 <main@@Base+0x3834>
   16b34:	mov	r0, r8
   16b38:	mov	r1, r4
   16b3c:	mov	r2, r5
   16b40:	mov	r3, #7
   16b44:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16b48:	mov	r4, r0
   16b4c:	uxtb	r6, r6
   16b50:	cmp	r6, #0
   16b54:	movwne	r6, #1
   16b58:	strb	r6, [fp, #-60]	; 0xffffffc4
   16b5c:	cmp	r7, r4
   16b60:	bne	16b98 <main@@Base+0x37f4>
   16b64:	sub	r0, fp, #60	; 0x3c
   16b68:	mov	r1, r7
   16b6c:	mov	r2, r5
   16b70:	str	r0, [sp]
   16b74:	mov	r0, r8
   16b78:	ldr	r3, [pc, #3940]	; 17ae4 <main@@Base+0x4740>
   16b7c:	add	r3, pc, r3
   16b80:	bl	23060 <main@@Base+0xfcbc>
   16b84:	mov	r4, r0
   16b88:	cmp	r0, r7
   16b8c:	cmpne	r4, r5
   16b90:	beq	1346c <main@@Base+0xc8>
   16b94:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   16b98:	cmp	r6, #1
   16b9c:	ldrbeq	r0, [r8, #8]
   16ba0:	tsteq	r0, #2
   16ba4:	beq	1b880 <main@@Base+0x84dc>
   16ba8:	ldr	r0, [r8]
   16bac:	mov	r1, #15
   16bb0:	mov	r2, #1
   16bb4:	mov	r3, #1
   16bb8:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   16bbc:	cmp	r0, #0
   16bc0:	beq	1346c <main@@Base+0xc8>
   16bc4:	strb	r6, [r0]
   16bc8:	b	1b880 <main@@Base+0x84dc>
   16bcc:	mov	r6, #0
   16bd0:	add	r4, r7, #5
   16bd4:	b	16b58 <main@@Base+0x37b4>
   16bd8:	mov	r6, r0
   16bdc:	b	16b4c <main@@Base+0x37a8>
   16be0:	bne	16bf4 <main@@Base+0x3850>
   16be4:	mov	r4, r1
   16be8:	ldrb	r0, [r4, #1]!
   16bec:	cmp	r0, #32
   16bf0:	bhi	16c04 <main@@Base+0x3860>
   16bf4:	ldr	r0, [sp, #40]	; 0x28
   16bf8:	mov	r2, r5
   16bfc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16c00:	mov	r4, r0
   16c04:	cmp	r4, r5
   16c08:	beq	16c50 <main@@Base+0x38ac>
   16c0c:	ldrb	r0, [r4]
   16c10:	cmp	r0, #58	; 0x3a
   16c14:	bne	16c50 <main@@Base+0x38ac>
   16c18:	add	r1, r4, #1
   16c1c:	sub	r0, r5, r1
   16c20:	cmp	r0, #2
   16c24:	blt	18f74 <main@@Base+0x5bd0>
   16c28:	ldrb	r0, [r1]
   16c2c:	cmp	r0, #32
   16c30:	bls	18f64 <main@@Base+0x5bc0>
   16c34:	mov	r4, r1
   16c38:	cmp	r8, r4
   16c3c:	bne	18f8c <main@@Base+0x5be8>
   16c40:	ldr	r0, [sp, #40]	; 0x28
   16c44:	mov	r1, r8
   16c48:	mov	r8, r0
   16c4c:	b	1b874 <main@@Base+0x84d0>
   16c50:	ldr	r0, [sp, #40]	; 0x28
   16c54:	mov	r1, r4
   16c58:	mov	r2, r5
   16c5c:	mov	r3, #4
   16c60:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16c64:	b	18f80 <main@@Base+0x5bdc>
   16c68:	mov	r0, r8
   16c6c:	mov	r1, r4
   16c70:	mov	r2, r5
   16c74:	mov	r3, #9
   16c78:	b	15f08 <main@@Base+0x2b64>
   16c7c:	bne	16c8c <main@@Base+0x38e8>
   16c80:	ldrb	r0, [r4, #2]!
   16c84:	cmp	r0, #32
   16c88:	bhi	16c9c <main@@Base+0x38f8>
   16c8c:	mov	r0, r6
   16c90:	mov	r2, r5
   16c94:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16c98:	mov	r4, r0
   16c9c:	cmp	sl, r4
   16ca0:	beq	1582c <main@@Base+0x2488>
   16ca4:	ldr	r8, [sp, #40]	; 0x28
   16ca8:	mov	r1, #1
   16cac:	mov	r2, #1
   16cb0:	mvn	r3, #0
   16cb4:	ldr	r0, [r8]
   16cb8:	bl	2b840 <flatcc_builder_start_vector@@Base>
   16cbc:	cmp	r0, #0
   16cc0:	bne	1346c <main@@Base+0xc8>
   16cc4:	ldr	sl, [sp, #36]	; 0x24
   16cc8:	cmp	r4, r5
   16ccc:	beq	16d04 <main@@Base+0x3960>
   16cd0:	ldrb	r0, [r4]
   16cd4:	cmp	r0, #91	; 0x5b
   16cd8:	bne	16d04 <main@@Base+0x3960>
   16cdc:	add	r1, r4, #1
   16ce0:	sub	r0, r5, r1
   16ce4:	cmp	r0, #2
   16ce8:	blt	18480 <main@@Base+0x50dc>
   16cec:	ldrb	r0, [r1]
   16cf0:	cmp	r0, #32
   16cf4:	bls	18470 <main@@Base+0x50cc>
   16cf8:	mov	r4, r1
   16cfc:	b	18490 <main@@Base+0x50ec>
   16d00:	andeq	r1, r3, r0, ror #6
   16d04:	mov	r0, r8
   16d08:	mov	r1, r4
   16d0c:	mov	r2, r5
   16d10:	mov	r3, #22
   16d14:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16d18:	mov	r4, r0
   16d1c:	ldr	r0, [r8]
   16d20:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   16d24:	cmp	r0, #0
   16d28:	str	r0, [sp, #52]	; 0x34
   16d2c:	beq	1346c <main@@Base+0xc8>
   16d30:	ldr	r0, [r8]
   16d34:	mov	r1, #24
   16d38:	b	15f2c <main@@Base+0x2b88>
   16d3c:	bne	16d50 <main@@Base+0x39ac>
   16d40:	mov	r4, r1
   16d44:	ldrb	r0, [r4, #1]!
   16d48:	cmp	r0, #32
   16d4c:	bhi	16d60 <main@@Base+0x39bc>
   16d50:	mov	r0, r8
   16d54:	mov	r2, r5
   16d58:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16d5c:	mov	r4, r0
   16d60:	cmp	r4, r5
   16d64:	beq	16da0 <main@@Base+0x39fc>
   16d68:	ldrb	r0, [r4]
   16d6c:	cmp	r0, #58	; 0x3a
   16d70:	bne	16da0 <main@@Base+0x39fc>
   16d74:	add	r1, r4, #1
   16d78:	sub	r0, r5, r1
   16d7c:	cmp	r0, #2
   16d80:	blt	19100 <main@@Base+0x5d5c>
   16d84:	ldrb	r0, [r1]
   16d88:	cmp	r0, #32
   16d8c:	bls	190f0 <main@@Base+0x5d4c>
   16d90:	mov	r4, r1
   16d94:	cmp	r7, r4
   16d98:	bne	19118 <main@@Base+0x5d74>
   16d9c:	b	1abfc <main@@Base+0x7858>
   16da0:	mov	r0, r8
   16da4:	mov	r1, r4
   16da8:	mov	r2, r5
   16dac:	mov	r3, #4
   16db0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16db4:	b	1910c <main@@Base+0x5d68>
   16db8:	cmp	r0, #34	; 0x22
   16dbc:	bne	1b86c <main@@Base+0x84c8>
   16dc0:	add	r1, r9, #18
   16dc4:	sub	r0, r5, r1
   16dc8:	cmp	r0, #2
   16dcc:	blt	1907c <main@@Base+0x5cd8>
   16dd0:	ldrb	r0, [r1]
   16dd4:	cmp	r0, #32
   16dd8:	bls	19068 <main@@Base+0x5cc4>
   16ddc:	mov	r7, r1
   16de0:	cmp	r7, r5
   16de4:	bne	19094 <main@@Base+0x5cf0>
   16de8:	b	190d8 <main@@Base+0x5d34>
   16dec:	bne	16dfc <main@@Base+0x3a58>
   16df0:	ldrb	r0, [r7, #2]!
   16df4:	cmp	r0, #32
   16df8:	bhi	16e0c <main@@Base+0x3a68>
   16dfc:	mov	r0, r8
   16e00:	mov	r2, r5
   16e04:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16e08:	mov	r7, r0
   16e0c:	cmp	r9, r7
   16e10:	beq	14978 <main@@Base+0x15d4>
   16e14:	mov	r6, #0
   16e18:	cmp	r7, r5
   16e1c:	str	r6, [fp, #-52]	; 0xffffffcc
   16e20:	str	r6, [fp, #-56]	; 0xffffffc8
   16e24:	strh	r6, [fp, #-60]	; 0xffffffc4
   16e28:	str	r6, [sp, #56]	; 0x38
   16e2c:	beq	16e90 <main@@Base+0x3aec>
   16e30:	sub	r0, fp, #56	; 0x38
   16e34:	mov	r1, r7
   16e38:	mov	r2, r5
   16e3c:	add	r3, sp, #56	; 0x38
   16e40:	str	r0, [sp]
   16e44:	mov	r0, r8
   16e48:	bl	31418 <flatcc_json_parser_integer@@Base>
   16e4c:	cmp	r0, r7
   16e50:	beq	16ea0 <main@@Base+0x3afc>
   16e54:	ldr	r2, [sp, #56]	; 0x38
   16e58:	mov	r4, r0
   16e5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16e60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16e64:	cmp	r2, #0
   16e68:	beq	16eb0 <main@@Base+0x3b0c>
   16e6c:	movw	r2, #32769	; 0x8001
   16e70:	subs	r2, r0, r2
   16e74:	sbcs	r1, r1, #0
   16e78:	bcc	16ee0 <main@@Base+0x3b3c>
   16e7c:	mov	r0, r8
   16e80:	mov	r1, r4
   16e84:	mov	r2, r5
   16e88:	mov	r3, #8
   16e8c:	b	16ecc <main@@Base+0x3b28>
   16e90:	mov	r4, r5
   16e94:	cmp	r7, r4
   16e98:	bne	16f2c <main@@Base+0x3b88>
   16e9c:	b	16ef8 <main@@Base+0x3b54>
   16ea0:	mov	r4, r7
   16ea4:	cmp	r7, r4
   16ea8:	bne	16f2c <main@@Base+0x3b88>
   16eac:	b	16ef8 <main@@Base+0x3b54>
   16eb0:	subs	r2, r0, #32768	; 0x8000
   16eb4:	sbcs	r1, r1, #0
   16eb8:	bcc	16ee8 <main@@Base+0x3b44>
   16ebc:	mov	r0, r8
   16ec0:	mov	r1, r4
   16ec4:	mov	r2, r5
   16ec8:	mov	r3, #7
   16ecc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16ed0:	mov	r4, r0
   16ed4:	cmp	r7, r4
   16ed8:	bne	16f2c <main@@Base+0x3b88>
   16edc:	b	16ef8 <main@@Base+0x3b54>
   16ee0:	rsb	r6, r0, #0
   16ee4:	b	16eec <main@@Base+0x3b48>
   16ee8:	mov	r6, r0
   16eec:	strh	r6, [fp, #-60]	; 0xffffffc4
   16ef0:	cmp	r7, r4
   16ef4:	bne	16f2c <main@@Base+0x3b88>
   16ef8:	sub	r0, fp, #60	; 0x3c
   16efc:	mov	r1, r7
   16f00:	mov	r2, r5
   16f04:	str	r0, [sp]
   16f08:	mov	r0, r8
   16f0c:	ldr	r3, [pc, #4024]	; 17ecc <main@@Base+0x4b28>
   16f10:	add	r3, pc, r3
   16f14:	bl	1efc4 <main@@Base+0xbc20>
   16f18:	mov	r4, r0
   16f1c:	cmp	r0, r7
   16f20:	cmpne	r4, r5
   16f24:	beq	1346c <main@@Base+0xc8>
   16f28:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   16f2c:	uxth	r0, r6
   16f30:	cmp	r0, #100	; 0x64
   16f34:	ldrbeq	r0, [r8, #8]
   16f38:	tsteq	r0, #2
   16f3c:	beq	1b880 <main@@Base+0x84dc>
   16f40:	ldr	r0, [r8]
   16f44:	mov	r1, #2
   16f48:	mov	r2, #2
   16f4c:	mov	r3, #2
   16f50:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   16f54:	cmp	r0, #0
   16f58:	bne	18cc4 <main@@Base+0x5920>
   16f5c:	b	1346c <main@@Base+0xc8>
   16f60:	bne	16f70 <main@@Base+0x3bcc>
   16f64:	ldrb	r0, [r4, #2]!
   16f68:	cmp	r0, #32
   16f6c:	bhi	16f80 <main@@Base+0x3bdc>
   16f70:	mov	r0, r8
   16f74:	mov	r2, r5
   16f78:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   16f7c:	mov	r4, r0
   16f80:	cmp	r9, r4
   16f84:	beq	14978 <main@@Base+0x15d4>
   16f88:	ldr	r0, [r8]
   16f8c:	mov	r1, #0
   16f90:	mov	r2, #32
   16f94:	mov	r3, #16
   16f98:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   16f9c:	cmp	r0, #0
   16fa0:	beq	1346c <main@@Base+0xc8>
   16fa4:	cmp	r4, r5
   16fa8:	beq	16fe0 <main@@Base+0x3c3c>
   16fac:	mov	r9, r0
   16fb0:	ldrb	r0, [r4]
   16fb4:	cmp	r0, #123	; 0x7b
   16fb8:	bne	16fe0 <main@@Base+0x3c3c>
   16fbc:	add	r1, r4, #1
   16fc0:	sub	r0, r5, r1
   16fc4:	cmp	r0, #2
   16fc8:	blt	17008 <main@@Base+0x3c64>
   16fcc:	ldrb	r0, [r1]
   16fd0:	cmp	r0, #32
   16fd4:	bls	16ff8 <main@@Base+0x3c54>
   16fd8:	mov	r4, r1
   16fdc:	b	17018 <main@@Base+0x3c74>
   16fe0:	mov	r0, r8
   16fe4:	mov	r1, r4
   16fe8:	mov	r2, r5
   16fec:	mov	r3, #21
   16ff0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   16ff4:	b	1b87c <main@@Base+0x84d8>
   16ff8:	bne	17008 <main@@Base+0x3c64>
   16ffc:	ldrb	r0, [r4, #2]!
   17000:	cmp	r0, #32
   17004:	bhi	17018 <main@@Base+0x3c74>
   17008:	mov	r0, r8
   1700c:	mov	r2, r5
   17010:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17014:	mov	r4, r0
   17018:	cmp	r4, r5
   1701c:	mov	r2, r5
   17020:	beq	17068 <main@@Base+0x3cc4>
   17024:	ldrb	r0, [r4]
   17028:	cmp	r0, #125	; 0x7d
   1702c:	bne	17064 <main@@Base+0x3cc0>
   17030:	add	r1, r4, #1
   17034:	sub	r0, r5, r1
   17038:	cmp	r0, #2
   1703c:	blt	1a3b4 <main@@Base+0x7010>
   17040:	ldrb	r0, [r1]
   17044:	cmp	r0, #32
   17048:	bhi	17db8 <main@@Base+0x4a14>
   1704c:	bne	1a3b4 <main@@Base+0x7010>
   17050:	ldrb	r0, [r4, #2]!
   17054:	cmp	r0, #32
   17058:	bhi	1b880 <main@@Base+0x84dc>
   1705c:	b	1a3b4 <main@@Base+0x7010>
   17060:	andeq	r1, r3, ip, lsr r0
   17064:	mov	r2, r4
   17068:	add	r0, r9, #26
   1706c:	str	r9, [sp, #20]
   17070:	str	r0, [sp, #16]
   17074:	cmp	r2, r5
   17078:	mov	sl, r5
   1707c:	beq	170d0 <main@@Base+0x3d2c>
   17080:	ldrb	r0, [r2]
   17084:	cmp	r0, #46	; 0x2e
   17088:	beq	170a4 <main@@Base+0x3d00>
   1708c:	cmp	r0, #34	; 0x22
   17090:	bne	170c0 <main@@Base+0x3d1c>
   17094:	ldr	r0, [sp, #32]
   17098:	mov	r1, #0
   1709c:	add	sl, r2, #1
   170a0:	b	170cc <main@@Base+0x3d28>
   170a4:	mov	r1, r2
   170a8:	mov	r0, r8
   170ac:	mov	r2, r5
   170b0:	mov	r3, #5
   170b4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   170b8:	mov	sl, r0
   170bc:	b	170d0 <main@@Base+0x3d2c>
   170c0:	ldr	r0, [sp, #32]
   170c4:	mov	r1, #1
   170c8:	mov	sl, r2
   170cc:	str	r1, [r0]
   170d0:	sub	ip, r5, sl
   170d4:	mov	r0, #8
   170d8:	cmp	ip, #8
   170dc:	movcc	r0, ip
   170e0:	and	r0, r0, #15
   170e4:	sub	r0, r0, #1
   170e8:	cmp	r0, #7
   170ec:	bhi	17cc4 <main@@Base+0x4920>
   170f0:	add	r2, pc, #36	; 0x24
   170f4:	mov	r1, #0
   170f8:	mov	lr, #0
   170fc:	mov	r8, #0
   17100:	mov	r7, #0
   17104:	mov	r3, #0
   17108:	mov	r6, #0
   1710c:	mov	r5, #0
   17110:	ldr	r4, [r2, r0, lsl #2]
   17114:	mov	r0, #0
   17118:	add	pc, r2, r4
   1711c:	andeq	r0, r0, r4, rrx
   17120:	andeq	r0, r0, ip, asr r0
   17124:	andeq	r0, r0, r4, asr r0
   17128:	andeq	r0, r0, ip, asr #32
   1712c:	andeq	r0, r0, r0, asr #32
   17130:	andeq	r0, r0, r4, lsr r0
   17134:	andeq	r0, r0, r4, lsr #32
   17138:	andeq	r0, r0, r0, lsr #32
   1713c:	ldrb	lr, [sl, #7]
   17140:	ldrb	r0, [sl, #6]
   17144:	mov	r8, r1
   17148:	orr	r0, lr, r0, lsl #8
   1714c:	mov	r1, r0
   17150:	ldrb	r0, [sl, #5]
   17154:	mov	r7, r8
   17158:	orr	r1, r1, r0, lsl #16
   1715c:	ldrb	r0, [sl, #4]
   17160:	mov	r3, r7
   17164:	orr	r1, r1, r0, lsl #24
   17168:	ldrb	r0, [sl, #3]
   1716c:	orr	r6, r0, r3
   17170:	ldrb	r0, [sl, #2]
   17174:	orr	r5, r6, r0, lsl #8
   17178:	ldrb	r0, [sl, #1]
   1717c:	orr	r0, r5, r0, lsl #16
   17180:	ldrb	r2, [sl]
   17184:	movw	r3, #29556	; 0x7374
   17188:	movt	r3, #29797	; 0x7465
   1718c:	orr	r2, r0, r2, lsl #24
   17190:	mvn	r0, #-855638016	; 0xcd000000
   17194:	subs	r0, r0, r1
   17198:	sbcs	r0, r3, r2
   1719c:	bcc	17214 <main@@Base+0x3e70>
   171a0:	ldr	r5, [sp, #44]	; 0x2c
   171a4:	ldr	r8, [sp, #40]	; 0x28
   171a8:	and	r1, r1, #-16777216	; 0xff000000
   171ac:	eor	r0, r2, r3
   171b0:	eor	r2, r1, #822083584	; 0x31000000
   171b4:	orrs	r2, r2, r0
   171b8:	beq	172e0 <main@@Base+0x3f3c>
   171bc:	eor	r1, r1, #838860800	; 0x32000000
   171c0:	orrs	r0, r1, r0
   171c4:	bne	17cc4 <main@@Base+0x4920>
   171c8:	cmp	ip, #6
   171cc:	mov	r9, sl
   171d0:	blt	177a0 <main@@Base+0x43fc>
   171d4:	ldr	r2, [sp, #32]
   171d8:	mov	r1, sl
   171dc:	ldrb	r0, [r1, #5]!
   171e0:	ldr	r2, [r2]
   171e4:	cmp	r2, #0
   171e8:	beq	173c8 <main@@Base+0x4024>
   171ec:	cmp	r0, #33	; 0x21
   171f0:	bcc	17200 <main@@Base+0x3e5c>
   171f4:	cmp	r0, #58	; 0x3a
   171f8:	mov	r9, sl
   171fc:	bne	177a0 <main@@Base+0x43fc>
   17200:	ldr	r0, [sp, #32]
   17204:	mov	r2, #0
   17208:	str	r2, [r0]
   1720c:	b	173d8 <main@@Base+0x4034>
   17210:	andeq	r9, r0, r8, asr r7
   17214:	ldr	r5, [sp, #44]	; 0x2c
   17218:	ldr	r8, [sp, #40]	; 0x28
   1721c:	cmn	r2, #-2013265919	; 0x88000001
   17220:	bhi	17280 <main@@Base+0x3edc>
   17224:	and	r1, r1, #-16777216	; 0xff000000
   17228:	eor	r0, r2, r3
   1722c:	eor	r1, r1, #855638016	; 0x33000000
   17230:	orrs	r0, r1, r0
   17234:	bne	17cc4 <main@@Base+0x4920>
   17238:	cmp	ip, #6
   1723c:	mov	r1, sl
   17240:	blt	17ac8 <main@@Base+0x4724>
   17244:	ldr	r1, [sp, #32]
   17248:	mov	r2, sl
   1724c:	ldrb	r0, [r2, #5]!
   17250:	ldr	r1, [r1]
   17254:	cmp	r1, #0
   17258:	beq	17438 <main@@Base+0x4094>
   1725c:	cmp	r0, #33	; 0x21
   17260:	bcc	17270 <main@@Base+0x3ecc>
   17264:	cmp	r0, #58	; 0x3a
   17268:	mov	r1, sl
   1726c:	bne	17ac8 <main@@Base+0x4724>
   17270:	ldr	r0, [sp, #32]
   17274:	mov	r1, #0
   17278:	str	r1, [r0]
   1727c:	b	17448 <main@@Base+0x40a4>
   17280:	lsr	r0, r2, #24
   17284:	and	r1, r2, #-16777216	; 0xff000000
   17288:	cmp	r0, #120	; 0x78
   1728c:	bhi	17328 <main@@Base+0x3f84>
   17290:	teq	r1, #2013265920	; 0x78000000
   17294:	bne	17cc4 <main@@Base+0x4920>
   17298:	cmp	ip, #2
   1729c:	mov	r7, sl
   172a0:	blt	17b14 <main@@Base+0x4770>
   172a4:	ldr	r2, [sp, #32]
   172a8:	mov	r1, sl
   172ac:	ldrb	r0, [r1, #1]!
   172b0:	ldr	r2, [r2]
   172b4:	cmp	r2, #0
   172b8:	beq	17470 <main@@Base+0x40cc>
   172bc:	cmp	r0, #33	; 0x21
   172c0:	bcc	172d0 <main@@Base+0x3f2c>
   172c4:	cmp	r0, #58	; 0x3a
   172c8:	mov	r7, sl
   172cc:	bne	17b14 <main@@Base+0x4770>
   172d0:	ldr	r0, [sp, #32]
   172d4:	mov	r2, #0
   172d8:	str	r2, [r0]
   172dc:	b	17480 <main@@Base+0x40dc>
   172e0:	cmp	ip, #6
   172e4:	mov	r7, sl
   172e8:	blt	178d8 <main@@Base+0x4534>
   172ec:	ldr	r2, [sp, #32]
   172f0:	mov	r1, sl
   172f4:	ldrb	r0, [r1, #5]!
   172f8:	ldr	r2, [r2]
   172fc:	cmp	r2, #0
   17300:	beq	17400 <main@@Base+0x405c>
   17304:	cmp	r0, #33	; 0x21
   17308:	bcc	17318 <main@@Base+0x3f74>
   1730c:	cmp	r0, #58	; 0x3a
   17310:	mov	r7, sl
   17314:	bne	178d8 <main@@Base+0x4534>
   17318:	ldr	r0, [sp, #32]
   1731c:	mov	r2, #0
   17320:	str	r2, [r0]
   17324:	b	17410 <main@@Base+0x406c>
   17328:	teq	r1, #2030043136	; 0x79000000
   1732c:	beq	17380 <main@@Base+0x3fdc>
   17330:	teq	r1, #2046820352	; 0x7a000000
   17334:	bne	17cc4 <main@@Base+0x4920>
   17338:	cmp	ip, #2
   1733c:	mov	r7, sl
   17340:	blt	17bb0 <main@@Base+0x480c>
   17344:	ldr	r2, [sp, #32]
   17348:	mov	r1, sl
   1734c:	ldrb	r0, [r1, #1]!
   17350:	ldr	r2, [r2]
   17354:	cmp	r2, #0
   17358:	beq	175d4 <main@@Base+0x4230>
   1735c:	cmp	r0, #33	; 0x21
   17360:	bcc	17370 <main@@Base+0x3fcc>
   17364:	cmp	r0, #58	; 0x3a
   17368:	mov	r7, sl
   1736c:	bne	17bb0 <main@@Base+0x480c>
   17370:	ldr	r0, [sp, #32]
   17374:	mov	r2, #0
   17378:	str	r2, [r0]
   1737c:	b	175e4 <main@@Base+0x4240>
   17380:	cmp	ip, #2
   17384:	mov	r7, sl
   17388:	blt	17c50 <main@@Base+0x48ac>
   1738c:	ldr	r2, [sp, #32]
   17390:	mov	r1, sl
   17394:	ldrb	r0, [r1, #1]!
   17398:	ldr	r2, [r2]
   1739c:	cmp	r2, #0
   173a0:	beq	17614 <main@@Base+0x4270>
   173a4:	cmp	r0, #33	; 0x21
   173a8:	bcc	173b8 <main@@Base+0x4014>
   173ac:	cmp	r0, #58	; 0x3a
   173b0:	mov	r7, sl
   173b4:	bne	17c50 <main@@Base+0x48ac>
   173b8:	ldr	r0, [sp, #32]
   173bc:	mov	r2, #0
   173c0:	str	r2, [r0]
   173c4:	b	17624 <main@@Base+0x4280>
   173c8:	cmp	r0, #34	; 0x22
   173cc:	mov	r9, sl
   173d0:	bne	177a0 <main@@Base+0x43fc>
   173d4:	add	r1, sl, #6
   173d8:	sub	r0, r5, r1
   173dc:	cmp	r0, #2
   173e0:	blt	174c0 <main@@Base+0x411c>
   173e4:	ldrb	r0, [r1]
   173e8:	cmp	r0, #32
   173ec:	bls	174ac <main@@Base+0x4108>
   173f0:	mov	r9, r1
   173f4:	cmp	r9, r5
   173f8:	bne	174d8 <main@@Base+0x4134>
   173fc:	b	17534 <main@@Base+0x4190>
   17400:	cmp	r0, #34	; 0x22
   17404:	mov	r7, sl
   17408:	bne	178d8 <main@@Base+0x4534>
   1740c:	add	r1, sl, #6
   17410:	sub	r0, r5, r1
   17414:	cmp	r0, #2
   17418:	blt	17560 <main@@Base+0x41bc>
   1741c:	ldrb	r0, [r1]
   17420:	cmp	r0, #32
   17424:	bls	1754c <main@@Base+0x41a8>
   17428:	mov	r7, r1
   1742c:	cmp	r7, r5
   17430:	bne	17578 <main@@Base+0x41d4>
   17434:	b	175bc <main@@Base+0x4218>
   17438:	cmp	r0, #34	; 0x22
   1743c:	mov	r1, sl
   17440:	bne	17ac8 <main@@Base+0x4724>
   17444:	add	r2, sl, #6
   17448:	sub	r0, r5, r2
   1744c:	cmp	r0, #2
   17450:	blt	17668 <main@@Base+0x42c4>
   17454:	ldrb	r0, [r2]
   17458:	cmp	r0, #32
   1745c:	bls	17654 <main@@Base+0x42b0>
   17460:	mov	r1, r2
   17464:	cmp	r1, r5
   17468:	bne	17684 <main@@Base+0x42e0>
   1746c:	b	176c8 <main@@Base+0x4324>
   17470:	cmp	r0, #34	; 0x22
   17474:	mov	r7, sl
   17478:	bne	17b14 <main@@Base+0x4770>
   1747c:	add	r1, sl, #2
   17480:	sub	r0, r5, r1
   17484:	cmp	r0, #2
   17488:	blt	176f4 <main@@Base+0x4350>
   1748c:	ldrb	r0, [r1]
   17490:	cmp	r0, #32
   17494:	bls	176dc <main@@Base+0x4338>
   17498:	ldr	r5, [sp, #44]	; 0x2c
   1749c:	mov	r7, r1
   174a0:	cmp	r7, r5
   174a4:	bne	1770c <main@@Base+0x4368>
   174a8:	b	1774c <main@@Base+0x43a8>
   174ac:	bne	174c0 <main@@Base+0x411c>
   174b0:	mov	r9, r1
   174b4:	ldrb	r0, [r9, #1]!
   174b8:	cmp	r0, #32
   174bc:	bhi	174d0 <main@@Base+0x412c>
   174c0:	mov	r0, r8
   174c4:	mov	r2, r5
   174c8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   174cc:	mov	r9, r0
   174d0:	cmp	r9, r5
   174d4:	beq	17534 <main@@Base+0x4190>
   174d8:	ldrb	r0, [r9]
   174dc:	cmp	r0, #58	; 0x3a
   174e0:	bne	17534 <main@@Base+0x4190>
   174e4:	add	r1, r9, #1
   174e8:	sub	r0, r5, r1
   174ec:	cmp	r0, #2
   174f0:	blt	17790 <main@@Base+0x43ec>
   174f4:	ldrb	r0, [r1]
   174f8:	cmp	r0, #32
   174fc:	bls	17778 <main@@Base+0x43d4>
   17500:	ldr	r5, [sp, #44]	; 0x2c
   17504:	ldr	r8, [sp, #40]	; 0x28
   17508:	mov	r9, r1
   1750c:	cmp	sl, r9
   17510:	bne	177a8 <main@@Base+0x4404>
   17514:	mov	r0, r8
   17518:	mov	r1, sl
   1751c:	mov	r2, r5
   17520:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   17524:	ldr	sl, [sp, #36]	; 0x24
   17528:	ldr	r9, [sp, #20]
   1752c:	mov	r1, r0
   17530:	b	17cdc <main@@Base+0x4938>
   17534:	mov	r0, r8
   17538:	mov	r1, r9
   1753c:	mov	r2, r5
   17540:	mov	r3, #4
   17544:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   17548:	b	1779c <main@@Base+0x43f8>
   1754c:	bne	17560 <main@@Base+0x41bc>
   17550:	mov	r7, r1
   17554:	ldrb	r0, [r7, #1]!
   17558:	cmp	r0, #32
   1755c:	bhi	17570 <main@@Base+0x41cc>
   17560:	mov	r0, r8
   17564:	mov	r2, r5
   17568:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1756c:	mov	r7, r0
   17570:	cmp	r7, r5
   17574:	beq	175bc <main@@Base+0x4218>
   17578:	ldrb	r0, [r7]
   1757c:	cmp	r0, #58	; 0x3a
   17580:	bne	175bc <main@@Base+0x4218>
   17584:	add	r1, r7, #1
   17588:	sub	r0, r5, r1
   1758c:	cmp	r0, #2
   17590:	blt	178c8 <main@@Base+0x4524>
   17594:	ldrb	r0, [r1]
   17598:	cmp	r0, #32
   1759c:	bls	178ac <main@@Base+0x4508>
   175a0:	ldr	r5, [sp, #44]	; 0x2c
   175a4:	ldr	r8, [sp, #40]	; 0x28
   175a8:	ldr	r9, [sp, #20]
   175ac:	mov	r7, r1
   175b0:	cmp	sl, r7
   175b4:	bne	178e0 <main@@Base+0x453c>
   175b8:	b	17cc4 <main@@Base+0x4920>
   175bc:	mov	r0, r8
   175c0:	mov	r1, r7
   175c4:	mov	r2, r5
   175c8:	mov	r3, #4
   175cc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   175d0:	b	178d4 <main@@Base+0x4530>
   175d4:	cmp	r0, #34	; 0x22
   175d8:	mov	r7, sl
   175dc:	bne	17bb0 <main@@Base+0x480c>
   175e0:	add	r1, sl, #2
   175e4:	ldr	r4, [sp, #44]	; 0x2c
   175e8:	sub	r0, r4, r1
   175ec:	cmp	r0, #2
   175f0:	blt	17964 <main@@Base+0x45c0>
   175f4:	ldrb	r0, [r1]
   175f8:	cmp	r0, #32
   175fc:	bls	1794c <main@@Base+0x45a8>
   17600:	ldr	r4, [sp, #44]	; 0x2c
   17604:	mov	r7, r1
   17608:	cmp	r7, r4
   1760c:	bne	1797c <main@@Base+0x45d8>
   17610:	b	179c0 <main@@Base+0x461c>
   17614:	cmp	r0, #34	; 0x22
   17618:	mov	r7, sl
   1761c:	bne	17c50 <main@@Base+0x48ac>
   17620:	add	r1, sl, #2
   17624:	ldr	r4, [sp, #44]	; 0x2c
   17628:	sub	r0, r4, r1
   1762c:	cmp	r0, #2
   17630:	blt	17a08 <main@@Base+0x4664>
   17634:	ldrb	r0, [r1]
   17638:	cmp	r0, #32
   1763c:	bls	179f0 <main@@Base+0x464c>
   17640:	ldr	r4, [sp, #44]	; 0x2c
   17644:	mov	r7, r1
   17648:	cmp	r7, r4
   1764c:	bne	17a20 <main@@Base+0x467c>
   17650:	b	17a68 <main@@Base+0x46c4>
   17654:	bne	17668 <main@@Base+0x42c4>
   17658:	mov	r1, r2
   1765c:	ldrb	r0, [r1, #1]!
   17660:	cmp	r0, #32
   17664:	bhi	1767c <main@@Base+0x42d8>
   17668:	mov	r1, r2
   1766c:	mov	r0, r8
   17670:	mov	r2, r5
   17674:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17678:	mov	r1, r0
   1767c:	cmp	r1, r5
   17680:	beq	176c8 <main@@Base+0x4324>
   17684:	ldrb	r0, [r1]
   17688:	cmp	r0, #58	; 0x3a
   1768c:	bne	176c8 <main@@Base+0x4324>
   17690:	add	r2, r1, #1
   17694:	sub	r0, r5, r2
   17698:	cmp	r0, #2
   1769c:	blt	17ab4 <main@@Base+0x4710>
   176a0:	ldrb	r0, [r2]
   176a4:	cmp	r0, #32
   176a8:	bls	17a98 <main@@Base+0x46f4>
   176ac:	ldr	r5, [sp, #44]	; 0x2c
   176b0:	ldr	r8, [sp, #40]	; 0x28
   176b4:	ldr	r9, [sp, #20]
   176b8:	mov	r1, r2
   176bc:	cmp	sl, r1
   176c0:	bne	17ad0 <main@@Base+0x472c>
   176c4:	b	17cc4 <main@@Base+0x4920>
   176c8:	mov	r0, r8
   176cc:	mov	r2, r5
   176d0:	mov	r3, #4
   176d4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   176d8:	b	17ac4 <main@@Base+0x4720>
   176dc:	ldr	r5, [sp, #44]	; 0x2c
   176e0:	bne	176f4 <main@@Base+0x4350>
   176e4:	mov	r7, r1
   176e8:	ldrb	r0, [r7, #1]!
   176ec:	cmp	r0, #32
   176f0:	bhi	17704 <main@@Base+0x4360>
   176f4:	ldr	r0, [sp, #40]	; 0x28
   176f8:	mov	r2, r5
   176fc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17700:	mov	r7, r0
   17704:	cmp	r7, r5
   17708:	beq	1774c <main@@Base+0x43a8>
   1770c:	ldrb	r0, [r7]
   17710:	cmp	r0, #58	; 0x3a
   17714:	bne	1774c <main@@Base+0x43a8>
   17718:	ldr	r8, [sp, #40]	; 0x28
   1771c:	ldr	r9, [sp, #20]
   17720:	add	r1, r7, #1
   17724:	sub	r0, r5, r1
   17728:	cmp	r0, #2
   1772c:	blt	17b04 <main@@Base+0x4760>
   17730:	ldrb	r0, [r1]
   17734:	cmp	r0, #32
   17738:	bls	17ae8 <main@@Base+0x4744>
   1773c:	ldr	r5, [sp, #44]	; 0x2c
   17740:	ldr	r8, [sp, #40]	; 0x28
   17744:	mov	r7, r1
   17748:	b	17768 <main@@Base+0x43c4>
   1774c:	ldr	r8, [sp, #40]	; 0x28
   17750:	mov	r1, r7
   17754:	mov	r2, r5
   17758:	mov	r3, #4
   1775c:	mov	r0, r8
   17760:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   17764:	mov	r7, r0
   17768:	ldr	r9, [sp, #20]
   1776c:	cmp	sl, r7
   17770:	bne	17b1c <main@@Base+0x4778>
   17774:	b	17cc4 <main@@Base+0x4920>
   17778:	ldr	r5, [sp, #44]	; 0x2c
   1777c:	ldr	r8, [sp, #40]	; 0x28
   17780:	bne	17790 <main@@Base+0x43ec>
   17784:	ldrb	r0, [r9, #2]!
   17788:	cmp	r0, #32
   1778c:	bhi	177a0 <main@@Base+0x43fc>
   17790:	mov	r0, r8
   17794:	mov	r2, r5
   17798:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1779c:	mov	r9, r0
   177a0:	cmp	sl, r9
   177a4:	beq	17514 <main@@Base+0x4170>
   177a8:	mov	r4, #0
   177ac:	cmp	r9, r5
   177b0:	str	r4, [fp, #-52]	; 0xffffffcc
   177b4:	str	r4, [fp, #-56]	; 0xffffffc8
   177b8:	strb	r4, [fp, #-60]	; 0xffffffc4
   177bc:	str	r4, [sp, #56]	; 0x38
   177c0:	beq	1781c <main@@Base+0x4478>
   177c4:	sub	r0, fp, #56	; 0x38
   177c8:	mov	r1, r9
   177cc:	mov	r2, r5
   177d0:	add	r3, sp, #56	; 0x38
   177d4:	str	r0, [sp]
   177d8:	mov	r0, r8
   177dc:	bl	31418 <flatcc_json_parser_integer@@Base>
   177e0:	cmp	r0, r9
   177e4:	beq	17824 <main@@Base+0x4480>
   177e8:	ldr	r3, [sp, #56]	; 0x38
   177ec:	mov	r1, r0
   177f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   177f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   177f8:	cmp	r3, #0
   177fc:	beq	1782c <main@@Base+0x4488>
   17800:	subs	r3, r0, #129	; 0x81
   17804:	sbcs	r2, r2, #0
   17808:	bcc	17850 <main@@Base+0x44ac>
   1780c:	mov	r0, r8
   17810:	mov	r2, r5
   17814:	mov	r3, #8
   17818:	b	17844 <main@@Base+0x44a0>
   1781c:	mov	r1, r5
   17820:	b	17860 <main@@Base+0x44bc>
   17824:	mov	r1, r9
   17828:	b	17860 <main@@Base+0x44bc>
   1782c:	subs	r3, r0, #128	; 0x80
   17830:	sbcs	r2, r2, #0
   17834:	bcc	17858 <main@@Base+0x44b4>
   17838:	mov	r0, r8
   1783c:	mov	r2, r5
   17840:	mov	r3, #7
   17844:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   17848:	mov	r1, r0
   1784c:	b	17860 <main@@Base+0x44bc>
   17850:	rsb	r4, r0, #0
   17854:	b	1785c <main@@Base+0x44b8>
   17858:	mov	r4, r0
   1785c:	strb	r4, [fp, #-60]	; 0xffffffc4
   17860:	ldr	sl, [sp, #36]	; 0x24
   17864:	cmp	r9, r1
   17868:	bne	178a0 <main@@Base+0x44fc>
   1786c:	sub	r0, fp, #60	; 0x3c
   17870:	mov	r1, r9
   17874:	mov	r2, r5
   17878:	str	r0, [sp]
   1787c:	mov	r0, r8
   17880:	ldr	r3, [pc, #3972]	; 1880c <main@@Base+0x5468>
   17884:	add	r3, pc, r3
   17888:	bl	1eb3c <main@@Base+0xb798>
   1788c:	mov	r1, r0
   17890:	cmp	r0, r9
   17894:	cmpne	r1, r5
   17898:	beq	17dc0 <main@@Base+0x4a1c>
   1789c:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   178a0:	ldr	r9, [sp, #20]
   178a4:	strb	r4, [r9, #24]
   178a8:	b	17cdc <main@@Base+0x4938>
   178ac:	ldr	r5, [sp, #44]	; 0x2c
   178b0:	ldr	r8, [sp, #40]	; 0x28
   178b4:	ldr	r9, [sp, #20]
   178b8:	bne	178c8 <main@@Base+0x4524>
   178bc:	ldrb	r0, [r7, #2]!
   178c0:	cmp	r0, #32
   178c4:	bhi	178d8 <main@@Base+0x4534>
   178c8:	mov	r0, r8
   178cc:	mov	r2, r5
   178d0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   178d4:	mov	r7, r0
   178d8:	cmp	sl, r7
   178dc:	beq	17cc4 <main@@Base+0x4920>
   178e0:	mov	r0, #0
   178e4:	mov	r1, r7
   178e8:	mov	r2, r5
   178ec:	sub	r3, fp, #56	; 0x38
   178f0:	str	r0, [fp, #-52]	; 0xffffffcc
   178f4:	str	r0, [fp, #-56]	; 0xffffffc8
   178f8:	mov	r0, r8
   178fc:	bl	308fc <flatcc_json_parser_double@@Base>
   17900:	ldr	sl, [sp, #36]	; 0x24
   17904:	mov	r1, r0
   17908:	cmp	r7, r0
   1790c:	bne	17940 <main@@Base+0x459c>
   17910:	sub	r0, fp, #56	; 0x38
   17914:	mov	r1, r7
   17918:	mov	r2, r5
   1791c:	str	r0, [sp]
   17920:	mov	r0, r8
   17924:	ldr	r3, [pc, #4072]	; 18914 <main@@Base+0x5570>
   17928:	add	r3, pc, r3
   1792c:	bl	23d40 <main@@Base+0x1099c>
   17930:	mov	r1, r0
   17934:	cmp	r0, r7
   17938:	cmpne	r1, r5
   1793c:	beq	17dc0 <main@@Base+0x4a1c>
   17940:	vldr	d16, [fp, #-56]	; 0xffffffc8
   17944:	vstr	d16, [r9, #16]
   17948:	b	17cdc <main@@Base+0x4938>
   1794c:	ldr	r4, [sp, #44]	; 0x2c
   17950:	bne	17964 <main@@Base+0x45c0>
   17954:	mov	r7, r1
   17958:	ldrb	r0, [r7, #1]!
   1795c:	cmp	r0, #32
   17960:	bhi	17974 <main@@Base+0x45d0>
   17964:	ldr	r0, [sp, #40]	; 0x28
   17968:	mov	r2, r4
   1796c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17970:	mov	r7, r0
   17974:	cmp	r7, r4
   17978:	beq	179c0 <main@@Base+0x461c>
   1797c:	ldrb	r0, [r7]
   17980:	cmp	r0, #58	; 0x3a
   17984:	bne	179c0 <main@@Base+0x461c>
   17988:	ldr	r5, [sp, #44]	; 0x2c
   1798c:	ldr	r8, [sp, #40]	; 0x28
   17990:	ldr	r9, [sp, #20]
   17994:	add	r1, r7, #1
   17998:	sub	r0, r5, r1
   1799c:	cmp	r0, #2
   179a0:	blt	17ba0 <main@@Base+0x47fc>
   179a4:	ldrb	r0, [r1]
   179a8:	cmp	r0, #32
   179ac:	bls	17b84 <main@@Base+0x47e0>
   179b0:	ldr	r5, [sp, #44]	; 0x2c
   179b4:	ldr	r8, [sp, #40]	; 0x28
   179b8:	mov	r7, r1
   179bc:	b	179e0 <main@@Base+0x463c>
   179c0:	ldr	r8, [sp, #40]	; 0x28
   179c4:	ldr	r5, [sp, #44]	; 0x2c
   179c8:	mov	r1, r7
   179cc:	mov	r3, #4
   179d0:	mov	r0, r8
   179d4:	mov	r2, r5
   179d8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   179dc:	mov	r7, r0
   179e0:	ldr	r9, [sp, #20]
   179e4:	cmp	sl, r7
   179e8:	bne	17bb8 <main@@Base+0x4814>
   179ec:	b	17cc4 <main@@Base+0x4920>
   179f0:	ldr	r4, [sp, #44]	; 0x2c
   179f4:	bne	17a08 <main@@Base+0x4664>
   179f8:	mov	r7, r1
   179fc:	ldrb	r0, [r7, #1]!
   17a00:	cmp	r0, #32
   17a04:	bhi	17a18 <main@@Base+0x4674>
   17a08:	ldr	r0, [sp, #40]	; 0x28
   17a0c:	mov	r2, r4
   17a10:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17a14:	mov	r7, r0
   17a18:	cmp	r7, r4
   17a1c:	beq	17a68 <main@@Base+0x46c4>
   17a20:	ldrb	r0, [r7]
   17a24:	cmp	r0, #58	; 0x3a
   17a28:	bne	17a68 <main@@Base+0x46c4>
   17a2c:	ldr	r5, [sp, #44]	; 0x2c
   17a30:	ldr	r8, [sp, #40]	; 0x28
   17a34:	ldr	r9, [sp, #20]
   17a38:	add	r1, r7, #1
   17a3c:	sub	r0, r5, r1
   17a40:	cmp	r0, #2
   17a44:	blt	17c40 <main@@Base+0x489c>
   17a48:	ldrb	r0, [r1]
   17a4c:	cmp	r0, #32
   17a50:	bls	17c24 <main@@Base+0x4880>
   17a54:	ldr	r5, [sp, #44]	; 0x2c
   17a58:	ldr	r8, [sp, #40]	; 0x28
   17a5c:	mov	r7, r1
   17a60:	b	17a88 <main@@Base+0x46e4>
   17a64:	muleq	r1, r2, r0
   17a68:	ldr	r8, [sp, #40]	; 0x28
   17a6c:	ldr	r5, [sp, #44]	; 0x2c
   17a70:	mov	r1, r7
   17a74:	mov	r3, #4
   17a78:	mov	r0, r8
   17a7c:	mov	r2, r5
   17a80:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   17a84:	mov	r7, r0
   17a88:	ldr	r9, [sp, #20]
   17a8c:	cmp	sl, r7
   17a90:	bne	17c58 <main@@Base+0x48b4>
   17a94:	b	17cc4 <main@@Base+0x4920>
   17a98:	ldr	r5, [sp, #44]	; 0x2c
   17a9c:	ldr	r8, [sp, #40]	; 0x28
   17aa0:	ldr	r9, [sp, #20]
   17aa4:	bne	17ab4 <main@@Base+0x4710>
   17aa8:	ldrb	r0, [r1, #2]!
   17aac:	cmp	r0, #32
   17ab0:	bhi	17ac8 <main@@Base+0x4724>
   17ab4:	mov	r1, r2
   17ab8:	mov	r0, r8
   17abc:	mov	r2, r5
   17ac0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17ac4:	mov	r1, r0
   17ac8:	cmp	sl, r1
   17acc:	beq	17cc4 <main@@Base+0x4920>
   17ad0:	ldr	r3, [sp, #16]
   17ad4:	mov	r0, r8
   17ad8:	mov	r2, r5
   17adc:	bl	1f210 <main@@Base+0xbe6c>
   17ae0:	b	17cd4 <main@@Base+0x4930>
   17ae4:	andeq	r0, r3, r4, ror r5
   17ae8:	ldr	r5, [sp, #44]	; 0x2c
   17aec:	ldr	r8, [sp, #40]	; 0x28
   17af0:	ldr	r9, [sp, #20]
   17af4:	bne	17b04 <main@@Base+0x4760>
   17af8:	ldrb	r0, [r7, #2]!
   17afc:	cmp	r0, #32
   17b00:	bhi	17b14 <main@@Base+0x4770>
   17b04:	mov	r0, r8
   17b08:	mov	r2, r5
   17b0c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17b10:	mov	r7, r0
   17b14:	cmp	sl, r7
   17b18:	beq	17cc4 <main@@Base+0x4920>
   17b1c:	mov	r0, #0
   17b20:	mov	r1, r7
   17b24:	mov	r2, r5
   17b28:	sub	r3, fp, #56	; 0x38
   17b2c:	str	r0, [fp, #-56]	; 0xffffffc8
   17b30:	mov	r0, r8
   17b34:	bl	312d8 <flatcc_json_parser_float@@Base>
   17b38:	ldr	sl, [sp, #36]	; 0x24
   17b3c:	mov	r1, r0
   17b40:	cmp	r7, r0
   17b44:	bne	17b78 <main@@Base+0x47d4>
   17b48:	sub	r0, fp, #56	; 0x38
   17b4c:	mov	r1, r7
   17b50:	mov	r2, r5
   17b54:	str	r0, [sp]
   17b58:	mov	r0, r8
   17b5c:	ldr	r3, [pc, #4068]	; 18b48 <main@@Base+0x57a4>
   17b60:	add	r3, pc, r3
   17b64:	bl	23270 <main@@Base+0xfecc>
   17b68:	mov	r1, r0
   17b6c:	cmp	r0, r7
   17b70:	cmpne	r1, r5
   17b74:	beq	17dc0 <main@@Base+0x4a1c>
   17b78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17b7c:	str	r0, [r9]
   17b80:	b	17cdc <main@@Base+0x4938>
   17b84:	ldr	r5, [sp, #44]	; 0x2c
   17b88:	ldr	r8, [sp, #40]	; 0x28
   17b8c:	ldr	r9, [sp, #20]
   17b90:	bne	17ba0 <main@@Base+0x47fc>
   17b94:	ldrb	r0, [r7, #2]!
   17b98:	cmp	r0, #32
   17b9c:	bhi	17bb0 <main@@Base+0x480c>
   17ba0:	mov	r0, r8
   17ba4:	mov	r2, r5
   17ba8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17bac:	mov	r7, r0
   17bb0:	cmp	sl, r7
   17bb4:	beq	17cc4 <main@@Base+0x4920>
   17bb8:	mov	r0, #0
   17bbc:	mov	r1, r7
   17bc0:	mov	r2, r5
   17bc4:	sub	r3, fp, #56	; 0x38
   17bc8:	str	r0, [fp, #-56]	; 0xffffffc8
   17bcc:	mov	r0, r8
   17bd0:	bl	312d8 <flatcc_json_parser_float@@Base>
   17bd4:	mov	r1, r0
   17bd8:	cmp	r7, r0
   17bdc:	bne	17c18 <main@@Base+0x4874>
   17be0:	sub	r0, fp, #56	; 0x38
   17be4:	mov	r1, r7
   17be8:	mov	r2, r5
   17bec:	str	r0, [sp]
   17bf0:	mov	r0, r8
   17bf4:	ldr	r3, [pc, #4084]	; 18bf0 <main@@Base+0x584c>
   17bf8:	add	r3, pc, r3
   17bfc:	bl	23270 <main@@Base+0xfecc>
   17c00:	mov	r1, r0
   17c04:	cmp	r0, r7
   17c08:	cmpne	r1, r5
   17c0c:	beq	17dc0 <main@@Base+0x4a1c>
   17c10:	ldr	r8, [sp, #40]	; 0x28
   17c14:	ldr	r9, [sp, #20]
   17c18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17c1c:	str	r0, [r9, #8]
   17c20:	b	17cd8 <main@@Base+0x4934>
   17c24:	ldr	r5, [sp, #44]	; 0x2c
   17c28:	ldr	r8, [sp, #40]	; 0x28
   17c2c:	ldr	r9, [sp, #20]
   17c30:	bne	17c40 <main@@Base+0x489c>
   17c34:	ldrb	r0, [r7, #2]!
   17c38:	cmp	r0, #32
   17c3c:	bhi	17c50 <main@@Base+0x48ac>
   17c40:	mov	r0, r8
   17c44:	mov	r2, r5
   17c48:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17c4c:	mov	r7, r0
   17c50:	cmp	sl, r7
   17c54:	beq	17cc4 <main@@Base+0x4920>
   17c58:	mov	r0, #0
   17c5c:	mov	r1, r7
   17c60:	mov	r2, r5
   17c64:	sub	r3, fp, #56	; 0x38
   17c68:	str	r0, [fp, #-56]	; 0xffffffc8
   17c6c:	mov	r0, r8
   17c70:	bl	312d8 <flatcc_json_parser_float@@Base>
   17c74:	mov	r1, r0
   17c78:	cmp	r7, r0
   17c7c:	bne	17cb8 <main@@Base+0x4914>
   17c80:	sub	r0, fp, #56	; 0x38
   17c84:	mov	r1, r7
   17c88:	mov	r2, r5
   17c8c:	str	r0, [sp]
   17c90:	mov	r0, r8
   17c94:	ldr	r3, [pc, #4016]	; 18c4c <main@@Base+0x58a8>
   17c98:	add	r3, pc, r3
   17c9c:	bl	23270 <main@@Base+0xfecc>
   17ca0:	mov	r1, r0
   17ca4:	cmp	r0, r7
   17ca8:	cmpne	r1, r5
   17cac:	beq	17dc0 <main@@Base+0x4a1c>
   17cb0:	ldr	r8, [sp, #40]	; 0x28
   17cb4:	ldr	r9, [sp, #20]
   17cb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17cbc:	str	r0, [r9, #4]
   17cc0:	b	17cd8 <main@@Base+0x4934>
   17cc4:	mov	r0, r8
   17cc8:	mov	r1, sl
   17ccc:	mov	r2, r5
   17cd0:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   17cd4:	mov	r1, r0
   17cd8:	ldr	sl, [sp, #36]	; 0x24
   17cdc:	sub	r0, r5, r1
   17ce0:	cmp	r0, #2
   17ce4:	blt	17d18 <main@@Base+0x4974>
   17ce8:	ldrb	r0, [r1]
   17cec:	cmp	r0, #32
   17cf0:	bls	17d04 <main@@Base+0x4960>
   17cf4:	mov	r2, r1
   17cf8:	cmp	r2, r5
   17cfc:	bne	17d30 <main@@Base+0x498c>
   17d00:	b	17ddc <main@@Base+0x4a38>
   17d04:	bne	17d18 <main@@Base+0x4974>
   17d08:	mov	r2, r1
   17d0c:	ldrb	r0, [r2, #1]!
   17d10:	cmp	r0, #32
   17d14:	bhi	17d28 <main@@Base+0x4984>
   17d18:	mov	r0, r8
   17d1c:	mov	r2, r5
   17d20:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17d24:	mov	r2, r0
   17d28:	cmp	r2, r5
   17d2c:	beq	17ddc <main@@Base+0x4a38>
   17d30:	ldrb	r0, [r2]
   17d34:	cmp	r0, #44	; 0x2c
   17d38:	bne	17de4 <main@@Base+0x4a40>
   17d3c:	add	r1, r2, #1
   17d40:	sub	r0, r5, r1
   17d44:	cmp	r0, #2
   17d48:	blt	17d78 <main@@Base+0x49d4>
   17d4c:	ldrb	r0, [r1]
   17d50:	cmp	r0, #32
   17d54:	bls	17d68 <main@@Base+0x49c4>
   17d58:	mov	r2, r1
   17d5c:	cmp	r2, r5
   17d60:	bne	17d90 <main@@Base+0x49ec>
   17d64:	b	17e18 <main@@Base+0x4a74>
   17d68:	bne	17d78 <main@@Base+0x49d4>
   17d6c:	ldrb	r0, [r2, #2]!
   17d70:	cmp	r0, #32
   17d74:	bhi	17d88 <main@@Base+0x49e4>
   17d78:	mov	r0, r8
   17d7c:	mov	r2, r5
   17d80:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17d84:	mov	r2, r0
   17d88:	cmp	r2, r5
   17d8c:	beq	17e18 <main@@Base+0x4a74>
   17d90:	ldrb	r0, [r2]
   17d94:	cmp	r0, #125	; 0x7d
   17d98:	bne	17074 <main@@Base+0x3cd0>
   17d9c:	add	r1, r2, #1
   17da0:	sub	r0, r5, r1
   17da4:	cmp	r0, #2
   17da8:	blt	1a3b4 <main@@Base+0x7010>
   17dac:	ldrb	r0, [r1]
   17db0:	cmp	r0, #32
   17db4:	bls	19884 <main@@Base+0x64e0>
   17db8:	mov	r4, r1
   17dbc:	b	1b880 <main@@Base+0x84dc>
   17dc0:	ldr	r8, [sp, #40]	; 0x28
   17dc4:	ldr	r5, [sp, #44]	; 0x2c
   17dc8:	mov	r3, #33	; 0x21
   17dcc:	mov	r0, r8
   17dd0:	mov	r2, r5
   17dd4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   17dd8:	b	16724 <main@@Base+0x3380>
   17ddc:	mov	r4, r5
   17de0:	b	1b880 <main@@Base+0x84dc>
   17de4:	cmp	r0, #125	; 0x7d
   17de8:	bne	18900 <main@@Base+0x555c>
   17dec:	add	r1, r2, #1
   17df0:	sub	r0, r5, r1
   17df4:	cmp	r0, #2
   17df8:	blt	1a3b4 <main@@Base+0x7010>
   17dfc:	ldrb	r0, [r1]
   17e00:	cmp	r0, #32
   17e04:	bls	1a394 <main@@Base+0x6ff0>
   17e08:	ldr	r5, [sp, #44]	; 0x2c
   17e0c:	ldr	r8, [sp, #40]	; 0x28
   17e10:	mov	r4, r1
   17e14:	b	16728 <main@@Base+0x3384>
   17e18:	mov	r0, r8
   17e1c:	mov	r1, r5
   17e20:	b	18908 <main@@Base+0x5564>
   17e24:	bne	17e34 <main@@Base+0x4a90>
   17e28:	ldrb	r0, [r7, #2]!
   17e2c:	cmp	r0, #32
   17e30:	bhi	17e44 <main@@Base+0x4aa0>
   17e34:	mov	r0, r8
   17e38:	mov	r2, r5
   17e3c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17e40:	mov	r7, r0
   17e44:	cmp	r9, r7
   17e48:	beq	14978 <main@@Base+0x15d4>
   17e4c:	mov	r0, #0
   17e50:	mov	r1, r7
   17e54:	mov	r2, r5
   17e58:	sub	r3, fp, #56	; 0x38
   17e5c:	str	r0, [fp, #-56]	; 0xffffffc8
   17e60:	mov	r0, r8
   17e64:	bl	312d8 <flatcc_json_parser_float@@Base>
   17e68:	mov	r4, r0
   17e6c:	cmp	r7, r0
   17e70:	bne	17ea4 <main@@Base+0x4b00>
   17e74:	sub	r0, fp, #56	; 0x38
   17e78:	mov	r1, r7
   17e7c:	mov	r2, r5
   17e80:	str	r0, [sp]
   17e84:	mov	r0, r8
   17e88:	ldr	r3, [pc, #4044]	; 18e5c <main@@Base+0x5ab8>
   17e8c:	add	r3, pc, r3
   17e90:	bl	23270 <main@@Base+0xfecc>
   17e94:	mov	r4, r0
   17e98:	cmp	r0, r7
   17e9c:	cmpne	r4, r5
   17ea0:	beq	1346c <main@@Base+0xc8>
   17ea4:	vldr	s0, [fp, #-56]	; 0xffffffc8
   17ea8:	vcmp.f32	s0, s16
   17eac:	vmrs	APSR_nzcv, fpscr
   17eb0:	bne	17ec0 <main@@Base+0x4b1c>
   17eb4:	ldrb	r0, [r8, #8]
   17eb8:	tst	r0, #2
   17ebc:	beq	1b880 <main@@Base+0x84dc>
   17ec0:	ldr	r0, [r8]
   17ec4:	mov	r1, #26
   17ec8:	b	15520 <main@@Base+0x217c>
   17ecc:	andeq	r0, r3, r0, lsr #3
   17ed0:	bne	17ee4 <main@@Base+0x4b40>
   17ed4:	mov	r4, r1
   17ed8:	ldrb	r0, [r4, #1]!
   17edc:	cmp	r0, #32
   17ee0:	bhi	17ef4 <main@@Base+0x4b50>
   17ee4:	mov	r0, r8
   17ee8:	mov	r2, r5
   17eec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17ef0:	mov	r4, r0
   17ef4:	cmp	r4, r5
   17ef8:	beq	17f34 <main@@Base+0x4b90>
   17efc:	ldrb	r0, [r4]
   17f00:	cmp	r0, #58	; 0x3a
   17f04:	bne	17f34 <main@@Base+0x4b90>
   17f08:	add	r1, r4, #1
   17f0c:	sub	r0, r5, r1
   17f10:	cmp	r0, #2
   17f14:	blt	19430 <main@@Base+0x608c>
   17f18:	ldrb	r0, [r1]
   17f1c:	cmp	r0, #32
   17f20:	bls	19420 <main@@Base+0x607c>
   17f24:	mov	r4, r1
   17f28:	cmp	r7, r4
   17f2c:	bne	19448 <main@@Base+0x60a4>
   17f30:	b	1abfc <main@@Base+0x7858>
   17f34:	mov	r0, r8
   17f38:	mov	r1, r4
   17f3c:	mov	r2, r5
   17f40:	mov	r3, #4
   17f44:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   17f48:	b	1943c <main@@Base+0x6098>
   17f4c:	bne	17f60 <main@@Base+0x4bbc>
   17f50:	mov	r4, r1
   17f54:	ldrb	r0, [r4, #1]!
   17f58:	cmp	r0, #32
   17f5c:	bhi	17f70 <main@@Base+0x4bcc>
   17f60:	mov	r0, r8
   17f64:	mov	r2, r5
   17f68:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17f6c:	mov	r4, r0
   17f70:	cmp	r4, r5
   17f74:	beq	17fb0 <main@@Base+0x4c0c>
   17f78:	ldrb	r0, [r4]
   17f7c:	cmp	r0, #58	; 0x3a
   17f80:	bne	17fb0 <main@@Base+0x4c0c>
   17f84:	add	r1, r4, #1
   17f88:	sub	r0, r5, r1
   17f8c:	cmp	r0, #2
   17f90:	blt	1953c <main@@Base+0x6198>
   17f94:	ldrb	r0, [r1]
   17f98:	cmp	r0, #32
   17f9c:	bls	1952c <main@@Base+0x6188>
   17fa0:	mov	r4, r1
   17fa4:	cmp	r7, r4
   17fa8:	bne	19554 <main@@Base+0x61b0>
   17fac:	b	1abfc <main@@Base+0x7858>
   17fb0:	mov	r0, r8
   17fb4:	mov	r1, r4
   17fb8:	mov	r2, r5
   17fbc:	mov	r3, #4
   17fc0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   17fc4:	b	19548 <main@@Base+0x61a4>
   17fc8:	bne	17fdc <main@@Base+0x4c38>
   17fcc:	mov	r7, r1
   17fd0:	ldrb	r0, [r7, #1]!
   17fd4:	cmp	r0, #32
   17fd8:	bhi	17fec <main@@Base+0x4c48>
   17fdc:	mov	r0, r8
   17fe0:	mov	r2, r5
   17fe4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   17fe8:	mov	r7, r0
   17fec:	cmp	r7, r5
   17ff0:	beq	180a8 <main@@Base+0x4d04>
   17ff4:	ldrb	r0, [r7]
   17ff8:	cmp	r0, #58	; 0x3a
   17ffc:	bne	180a8 <main@@Base+0x4d04>
   18000:	add	r1, r7, #1
   18004:	sub	r0, r5, r1
   18008:	cmp	r0, #2
   1800c:	blt	1960c <main@@Base+0x6268>
   18010:	ldrb	r0, [r1]
   18014:	cmp	r0, #32
   18018:	bls	195f4 <main@@Base+0x6250>
   1801c:	ldr	r5, [sp, #44]	; 0x2c
   18020:	ldr	r8, [sp, #40]	; 0x28
   18024:	mov	r7, r1
   18028:	cmp	sl, r7
   1802c:	bne	19624 <main@@Base+0x6280>
   18030:	add	r4, r9, #16
   18034:	mov	r1, #8
   18038:	mov	r2, #-268435456	; 0xf0000000
   1803c:	sub	r0, r5, r4
   18040:	cmp	r0, #8
   18044:	movcc	r1, r0
   18048:	add	r1, r2, r1, lsl #28
   1804c:	asr	r1, r1, #28
   18050:	cmp	r1, #0
   18054:	blt	181a0 <main@@Base+0x4dfc>
   18058:	ldrb	r1, [r4]
   1805c:	cmp	r1, #97	; 0x61
   18060:	bne	181a0 <main@@Base+0x4dfc>
   18064:	ldr	sl, [sp, #36]	; 0x24
   18068:	cmp	r0, #2
   1806c:	blt	1b86c <main@@Base+0x84c8>
   18070:	ldr	r2, [sp, #32]
   18074:	mov	r1, r9
   18078:	ldrb	r0, [r1, #17]!
   1807c:	ldr	r2, [r2]
   18080:	cmp	r2, #0
   18084:	beq	183f8 <main@@Base+0x5054>
   18088:	cmp	r0, #33	; 0x21
   1808c:	bcc	18098 <main@@Base+0x4cf4>
   18090:	cmp	r0, #58	; 0x3a
   18094:	bne	1b86c <main@@Base+0x84c8>
   18098:	ldr	r0, [sp, #32]
   1809c:	mov	r2, #0
   180a0:	str	r2, [r0]
   180a4:	b	18404 <main@@Base+0x5060>
   180a8:	mov	r0, r8
   180ac:	mov	r1, r7
   180b0:	mov	r2, r5
   180b4:	mov	r3, #4
   180b8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   180bc:	b	19618 <main@@Base+0x6274>
   180c0:	bne	180d4 <main@@Base+0x4d30>
   180c4:	mov	r7, r1
   180c8:	ldrb	r0, [r7, #1]!
   180cc:	cmp	r0, #32
   180d0:	bhi	180e4 <main@@Base+0x4d40>
   180d4:	mov	r0, r8
   180d8:	mov	r2, r5
   180dc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   180e0:	mov	r7, r0
   180e4:	cmp	r7, r5
   180e8:	beq	181ac <main@@Base+0x4e08>
   180ec:	ldrb	r0, [r7]
   180f0:	cmp	r0, #58	; 0x3a
   180f4:	bne	181ac <main@@Base+0x4e08>
   180f8:	add	r1, r7, #1
   180fc:	sub	r0, r5, r1
   18100:	cmp	r0, #2
   18104:	blt	19744 <main@@Base+0x63a0>
   18108:	ldrb	r0, [r1]
   1810c:	cmp	r0, #32
   18110:	bls	1972c <main@@Base+0x6388>
   18114:	ldr	r5, [sp, #44]	; 0x2c
   18118:	ldr	r8, [sp, #40]	; 0x28
   1811c:	mov	r7, r1
   18120:	cmp	sl, r7
   18124:	bne	1975c <main@@Base+0x63b8>
   18128:	add	r4, r9, #16
   1812c:	mov	r1, #8
   18130:	mov	r2, #-268435456	; 0xf0000000
   18134:	sub	r0, r5, r4
   18138:	cmp	r0, #8
   1813c:	movcc	r1, r0
   18140:	add	r1, r2, r1, lsl #28
   18144:	asr	r1, r1, #28
   18148:	cmp	r1, #0
   1814c:	blt	181a0 <main@@Base+0x4dfc>
   18150:	ldrb	r1, [r4]
   18154:	cmp	r1, #97	; 0x61
   18158:	bne	181a0 <main@@Base+0x4dfc>
   1815c:	ldr	sl, [sp, #36]	; 0x24
   18160:	cmp	r0, #2
   18164:	blt	1b86c <main@@Base+0x84c8>
   18168:	ldr	r2, [sp, #32]
   1816c:	mov	r1, r9
   18170:	ldrb	r0, [r1, #17]!
   18174:	ldr	r2, [r2]
   18178:	cmp	r2, #0
   1817c:	beq	18434 <main@@Base+0x5090>
   18180:	cmp	r0, #33	; 0x21
   18184:	bcc	18190 <main@@Base+0x4dec>
   18188:	cmp	r0, #58	; 0x3a
   1818c:	bne	1b86c <main@@Base+0x84c8>
   18190:	ldr	r0, [sp, #32]
   18194:	mov	r2, #0
   18198:	str	r2, [r0]
   1819c:	b	18440 <main@@Base+0x509c>
   181a0:	mov	r0, r8
   181a4:	mov	r1, r4
   181a8:	b	1671c <main@@Base+0x3378>
   181ac:	mov	r0, r8
   181b0:	mov	r1, r7
   181b4:	mov	r2, r5
   181b8:	mov	r3, #4
   181bc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   181c0:	b	19750 <main@@Base+0x63ac>
   181c4:	mov	r0, r8
   181c8:	mov	r1, r4
   181cc:	mov	r2, r5
   181d0:	mov	r3, #9
   181d4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   181d8:	b	16748 <main@@Base+0x33a4>
   181dc:	bne	181ec <main@@Base+0x4e48>
   181e0:	ldrb	r0, [r7, #2]!
   181e4:	cmp	r0, #32
   181e8:	bhi	181fc <main@@Base+0x4e58>
   181ec:	mov	r0, r8
   181f0:	mov	r2, r5
   181f4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   181f8:	mov	r7, r0
   181fc:	cmp	sl, r7
   18200:	beq	15b2c <main@@Base+0x2788>
   18204:	mov	r6, #0
   18208:	cmp	r7, r5
   1820c:	str	r6, [fp, #-52]	; 0xffffffcc
   18210:	str	r6, [fp, #-56]	; 0xffffffc8
   18214:	str	r6, [fp, #-60]	; 0xffffffc4
   18218:	str	r6, [sp, #56]	; 0x38
   1821c:	beq	18284 <main@@Base+0x4ee0>
   18220:	sub	r0, fp, #56	; 0x38
   18224:	mov	r1, r7
   18228:	mov	r2, r5
   1822c:	add	r3, sp, #56	; 0x38
   18230:	str	r0, [sp]
   18234:	mov	r0, r8
   18238:	bl	31418 <flatcc_json_parser_integer@@Base>
   1823c:	cmp	r0, r7
   18240:	beq	18298 <main@@Base+0x4ef4>
   18244:	ldr	r2, [sp, #56]	; 0x38
   18248:	mov	r4, r0
   1824c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18250:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18254:	cmp	r2, #0
   18258:	beq	182ac <main@@Base+0x4f08>
   1825c:	ldr	sl, [sp, #36]	; 0x24
   18260:	subs	r2, r0, #-2147483647	; 0x80000001
   18264:	sbcs	r1, r1, #0
   18268:	bcc	182e0 <main@@Base+0x4f3c>
   1826c:	mov	r0, r8
   18270:	mov	r1, r4
   18274:	mov	r2, r5
   18278:	mov	r3, #8
   1827c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18280:	b	182d0 <main@@Base+0x4f2c>
   18284:	ldr	sl, [sp, #36]	; 0x24
   18288:	mov	r4, r5
   1828c:	cmp	r7, r4
   18290:	bne	18b28 <main@@Base+0x5784>
   18294:	b	18af4 <main@@Base+0x5750>
   18298:	ldr	sl, [sp, #36]	; 0x24
   1829c:	mov	r4, r7
   182a0:	cmp	r7, r4
   182a4:	bne	18b28 <main@@Base+0x5784>
   182a8:	b	18af4 <main@@Base+0x5750>
   182ac:	subs	r2, r0, #-2147483648	; 0x80000000
   182b0:	sbcs	r1, r1, #0
   182b4:	bcc	18ae0 <main@@Base+0x573c>
   182b8:	mov	r0, r8
   182bc:	mov	r1, r4
   182c0:	mov	r2, r5
   182c4:	mov	r3, #7
   182c8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   182cc:	ldr	sl, [sp, #36]	; 0x24
   182d0:	mov	r4, r0
   182d4:	cmp	r7, r4
   182d8:	bne	18b28 <main@@Base+0x5784>
   182dc:	b	18af4 <main@@Base+0x5750>
   182e0:	rsb	r6, r0, #0
   182e4:	b	18ae8 <main@@Base+0x5744>
   182e8:	bne	182fc <main@@Base+0x4f58>
   182ec:	mov	r4, r1
   182f0:	ldrb	r0, [r4, #1]!
   182f4:	cmp	r0, #32
   182f8:	bhi	1830c <main@@Base+0x4f68>
   182fc:	mov	r0, r8
   18300:	mov	r2, r5
   18304:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18308:	mov	r4, r0
   1830c:	cmp	r4, r5
   18310:	beq	18358 <main@@Base+0x4fb4>
   18314:	ldrb	r0, [r4]
   18318:	cmp	r0, #58	; 0x3a
   1831c:	bne	18358 <main@@Base+0x4fb4>
   18320:	add	r1, r4, #1
   18324:	sub	r0, r5, r1
   18328:	cmp	r0, #2
   1832c:	blt	198a8 <main@@Base+0x6504>
   18330:	ldrb	r0, [r1]
   18334:	cmp	r0, #32
   18338:	bls	1988c <main@@Base+0x64e8>
   1833c:	ldr	r5, [sp, #44]	; 0x2c
   18340:	ldr	r8, [sp, #40]	; 0x28
   18344:	ldr	sl, [sp, #36]	; 0x24
   18348:	mov	r4, r1
   1834c:	cmp	r7, r4
   18350:	bne	198c0 <main@@Base+0x651c>
   18354:	b	1abfc <main@@Base+0x7858>
   18358:	mov	r0, r8
   1835c:	mov	r1, r4
   18360:	mov	r2, r5
   18364:	mov	r3, #4
   18368:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1836c:	b	198b4 <main@@Base+0x6510>
   18370:	bne	18384 <main@@Base+0x4fe0>
   18374:	mov	r7, r1
   18378:	ldrb	r0, [r7, #1]!
   1837c:	cmp	r0, #32
   18380:	bhi	18394 <main@@Base+0x4ff0>
   18384:	mov	r0, r8
   18388:	mov	r2, r5
   1838c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18390:	mov	r7, r0
   18394:	cmp	r7, r5
   18398:	beq	183e0 <main@@Base+0x503c>
   1839c:	ldrb	r0, [r7]
   183a0:	cmp	r0, #58	; 0x3a
   183a4:	bne	183e0 <main@@Base+0x503c>
   183a8:	add	r1, r7, #1
   183ac:	sub	r0, r5, r1
   183b0:	cmp	r0, #2
   183b4:	blt	19a70 <main@@Base+0x66cc>
   183b8:	ldrb	r0, [r1]
   183bc:	cmp	r0, #32
   183c0:	bls	19a54 <main@@Base+0x66b0>
   183c4:	ldr	r5, [sp, #44]	; 0x2c
   183c8:	ldr	r8, [sp, #40]	; 0x28
   183cc:	ldr	sl, [sp, #36]	; 0x24
   183d0:	mov	r7, r1
   183d4:	cmp	r4, r7
   183d8:	bne	19a88 <main@@Base+0x66e4>
   183dc:	b	1b86c <main@@Base+0x84c8>
   183e0:	mov	r0, r8
   183e4:	mov	r1, r7
   183e8:	mov	r2, r5
   183ec:	mov	r3, #4
   183f0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   183f4:	b	19a7c <main@@Base+0x66d8>
   183f8:	cmp	r0, #34	; 0x22
   183fc:	bne	1b86c <main@@Base+0x84c8>
   18400:	add	r1, r9, #18
   18404:	sub	r0, r5, r1
   18408:	cmp	r0, #2
   1840c:	blt	19968 <main@@Base+0x65c4>
   18410:	ldrb	r0, [r1]
   18414:	cmp	r0, #32
   18418:	bls	1994c <main@@Base+0x65a8>
   1841c:	ldr	r5, [sp, #44]	; 0x2c
   18420:	ldr	r8, [sp, #40]	; 0x28
   18424:	mov	r7, r1
   18428:	cmp	r7, r5
   1842c:	bne	19980 <main@@Base+0x65dc>
   18430:	b	199b8 <main@@Base+0x6614>
   18434:	cmp	r0, #34	; 0x22
   18438:	bne	1b86c <main@@Base+0x84c8>
   1843c:	add	r1, r9, #18
   18440:	sub	r0, r5, r1
   18444:	cmp	r0, #2
   18448:	blt	199ec <main@@Base+0x6648>
   1844c:	ldrb	r0, [r1]
   18450:	cmp	r0, #32
   18454:	bls	199d0 <main@@Base+0x662c>
   18458:	ldr	r5, [sp, #44]	; 0x2c
   1845c:	ldr	r8, [sp, #40]	; 0x28
   18460:	mov	r7, r1
   18464:	cmp	r7, r5
   18468:	bne	19a04 <main@@Base+0x6660>
   1846c:	b	19a3c <main@@Base+0x6698>
   18470:	bne	18480 <main@@Base+0x50dc>
   18474:	ldrb	r0, [r4, #2]!
   18478:	cmp	r0, #32
   1847c:	bhi	18490 <main@@Base+0x50ec>
   18480:	mov	r0, r8
   18484:	mov	r2, r5
   18488:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1848c:	mov	r4, r0
   18490:	cmp	r4, r5
   18494:	mov	r6, r5
   18498:	beq	184ac <main@@Base+0x5108>
   1849c:	ldrb	r0, [r4]
   184a0:	cmp	r0, #93	; 0x5d
   184a4:	beq	191b4 <main@@Base+0x5e10>
   184a8:	mov	r6, r4
   184ac:	mov	r0, #0
   184b0:	mov	r1, #1
   184b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   184b8:	ldr	r0, [r8]
   184bc:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   184c0:	cmp	r0, #0
   184c4:	beq	1d5cc <main@@Base+0xa228>
   184c8:	mov	r7, r0
   184cc:	mov	r4, r6
   184d0:	sub	r0, r5, r4
   184d4:	cmp	r0, #4
   184d8:	blt	18514 <main@@Base+0x5170>
   184dc:	ldr	r1, [r4]
   184e0:	movw	r2, #29300	; 0x7274
   184e4:	movt	r2, #25973	; 0x6575
   184e8:	cmp	r1, r2
   184ec:	beq	18578 <main@@Base+0x51d4>
   184f0:	cmp	r0, #5
   184f4:	blt	18514 <main@@Base+0x5170>
   184f8:	ldr	r1, [pc, #3996]	; 1949c <main@@Base+0x60f8>
   184fc:	mov	r0, r4
   18500:	mov	r2, #5
   18504:	add	r1, pc, r1
   18508:	bl	12ac0 <memcmp@plt>
   1850c:	cmp	r0, #0
   18510:	beq	186ec <main@@Base+0x5348>
   18514:	mov	r6, #0
   18518:	cmp	r4, r5
   1851c:	str	r6, [fp, #-52]	; 0xffffffcc
   18520:	str	r6, [fp, #-56]	; 0xffffffc8
   18524:	str	r6, [sp, #56]	; 0x38
   18528:	beq	18570 <main@@Base+0x51cc>
   1852c:	sub	r0, fp, #56	; 0x38
   18530:	mov	r1, r4
   18534:	mov	r2, r5
   18538:	add	r3, sp, #56	; 0x38
   1853c:	str	r0, [sp]
   18540:	mov	r0, r8
   18544:	bl	31418 <flatcc_json_parser_integer@@Base>
   18548:	cmp	r0, r4
   1854c:	beq	18584 <main@@Base+0x51e0>
   18550:	mov	r1, r0
   18554:	ldr	r0, [sp, #56]	; 0x38
   18558:	cmp	r0, #0
   1855c:	beq	1858c <main@@Base+0x51e8>
   18560:	mov	r0, r8
   18564:	mov	r2, r5
   18568:	mov	r3, #8
   1856c:	b	185ac <main@@Base+0x5208>
   18570:	mov	r1, r5
   18574:	b	185b4 <main@@Base+0x5210>
   18578:	mov	r0, #1
   1857c:	add	r1, r4, #4
   18580:	b	185c0 <main@@Base+0x521c>
   18584:	mov	r1, r4
   18588:	b	185b4 <main@@Base+0x5210>
   1858c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18590:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18594:	subs	r3, r0, #256	; 0x100
   18598:	sbcs	r2, r2, #0
   1859c:	bcc	186f8 <main@@Base+0x5354>
   185a0:	mov	r0, r8
   185a4:	mov	r2, r5
   185a8:	mov	r3, #7
   185ac:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   185b0:	mov	r1, r0
   185b4:	uxtb	r0, r6
   185b8:	cmp	r0, #0
   185bc:	movwne	r0, #1
   185c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   185c4:	cmp	r4, r1
   185c8:	bne	18604 <main@@Base+0x5260>
   185cc:	sub	r0, fp, #60	; 0x3c
   185d0:	mov	r1, r4
   185d4:	mov	r2, r5
   185d8:	str	r0, [sp]
   185dc:	mov	r0, r8
   185e0:	ldr	r3, [pc, #4048]	; 195b8 <main@@Base+0x6214>
   185e4:	add	r3, pc, r3
   185e8:	bl	23060 <main@@Base+0xfcbc>
   185ec:	mov	r1, r0
   185f0:	cmp	r0, r4
   185f4:	beq	1d5f0 <main@@Base+0xa24c>
   185f8:	cmp	r1, r5
   185fc:	beq	1d5f0 <main@@Base+0xa24c>
   18600:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   18604:	strb	r0, [r7]
   18608:	sub	r0, r5, r1
   1860c:	cmp	r0, #2
   18610:	blt	18644 <main@@Base+0x52a0>
   18614:	ldrb	r0, [r1]
   18618:	cmp	r0, #32
   1861c:	bls	18630 <main@@Base+0x528c>
   18620:	mov	r4, r1
   18624:	cmp	r4, r5
   18628:	bne	1865c <main@@Base+0x52b8>
   1862c:	b	19060 <main@@Base+0x5cbc>
   18630:	bne	18644 <main@@Base+0x52a0>
   18634:	mov	r4, r1
   18638:	ldrb	r0, [r4, #1]!
   1863c:	cmp	r0, #32
   18640:	bhi	18654 <main@@Base+0x52b0>
   18644:	mov	r0, r8
   18648:	mov	r2, r5
   1864c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18650:	mov	r4, r0
   18654:	cmp	r4, r5
   18658:	beq	19060 <main@@Base+0x5cbc>
   1865c:	ldrb	r0, [r4]
   18660:	cmp	r0, #44	; 0x2c
   18664:	bne	191a0 <main@@Base+0x5dfc>
   18668:	add	r1, r4, #1
   1866c:	sub	r0, r5, r1
   18670:	cmp	r0, #2
   18674:	blt	186a4 <main@@Base+0x5300>
   18678:	ldrb	r0, [r1]
   1867c:	cmp	r0, #32
   18680:	bls	18694 <main@@Base+0x52f0>
   18684:	mov	r4, r1
   18688:	cmp	r4, r5
   1868c:	bne	186bc <main@@Base+0x5318>
   18690:	b	19210 <main@@Base+0x5e6c>
   18694:	bne	186a4 <main@@Base+0x5300>
   18698:	ldrb	r0, [r4, #2]!
   1869c:	cmp	r0, #32
   186a0:	bhi	186b4 <main@@Base+0x5310>
   186a4:	mov	r0, r8
   186a8:	mov	r2, r5
   186ac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   186b0:	mov	r4, r0
   186b4:	cmp	r4, r5
   186b8:	beq	19210 <main@@Base+0x5e6c>
   186bc:	ldrb	r0, [r4]
   186c0:	cmp	r0, #93	; 0x5d
   186c4:	beq	191b4 <main@@Base+0x5e10>
   186c8:	mov	r0, #0
   186cc:	mov	r1, #1
   186d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   186d4:	ldr	r0, [r8]
   186d8:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   186dc:	mov	r7, r0
   186e0:	cmp	r0, #0
   186e4:	bne	184d0 <main@@Base+0x512c>
   186e8:	b	1346c <main@@Base+0xc8>
   186ec:	mov	r0, #0
   186f0:	add	r1, r4, #5
   186f4:	b	185c0 <main@@Base+0x521c>
   186f8:	mov	r6, r0
   186fc:	b	185b4 <main@@Base+0x5210>
   18700:	bne	18714 <main@@Base+0x5370>
   18704:	mov	r4, r1
   18708:	ldrb	r0, [r4, #1]!
   1870c:	cmp	r0, #32
   18710:	bhi	18724 <main@@Base+0x5380>
   18714:	mov	r0, r8
   18718:	mov	r2, r5
   1871c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18720:	mov	r4, r0
   18724:	cmp	r4, r5
   18728:	beq	1876c <main@@Base+0x53c8>
   1872c:	ldrb	r0, [r4]
   18730:	cmp	r0, #58	; 0x3a
   18734:	bne	1876c <main@@Base+0x53c8>
   18738:	add	r1, r4, #1
   1873c:	sub	r0, r5, r1
   18740:	cmp	r0, #2
   18744:	blt	19d48 <main@@Base+0x69a4>
   18748:	ldrb	r0, [r1]
   1874c:	cmp	r0, #32
   18750:	bls	19d30 <main@@Base+0x698c>
   18754:	ldr	r5, [sp, #44]	; 0x2c
   18758:	ldr	r8, [sp, #40]	; 0x28
   1875c:	mov	r4, r1
   18760:	cmp	sl, r4
   18764:	bne	19d60 <main@@Base+0x69bc>
   18768:	b	15830 <main@@Base+0x248c>
   1876c:	mov	r0, r8
   18770:	mov	r1, r4
   18774:	mov	r2, r5
   18778:	mov	r3, #4
   1877c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18780:	b	19d54 <main@@Base+0x69b0>
   18784:	bne	18798 <main@@Base+0x53f4>
   18788:	mov	r4, r1
   1878c:	ldrb	r0, [r4, #1]!
   18790:	cmp	r0, #32
   18794:	bhi	187a8 <main@@Base+0x5404>
   18798:	mov	r0, r8
   1879c:	mov	r2, r5
   187a0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   187a4:	mov	r4, r0
   187a8:	cmp	r4, r5
   187ac:	beq	187f4 <main@@Base+0x5450>
   187b0:	ldrb	r0, [r4]
   187b4:	cmp	r0, #58	; 0x3a
   187b8:	bne	187f4 <main@@Base+0x5450>
   187bc:	add	r1, r4, #1
   187c0:	sub	r0, r5, r1
   187c4:	cmp	r0, #2
   187c8:	blt	19e18 <main@@Base+0x6a74>
   187cc:	ldrb	r0, [r1]
   187d0:	cmp	r0, #32
   187d4:	bls	19dfc <main@@Base+0x6a58>
   187d8:	ldr	r5, [sp, #44]	; 0x2c
   187dc:	ldr	r8, [sp, #40]	; 0x28
   187e0:	ldr	sl, [sp, #36]	; 0x24
   187e4:	mov	r4, r1
   187e8:	cmp	r7, r4
   187ec:	bne	19e30 <main@@Base+0x6a8c>
   187f0:	b	1abfc <main@@Base+0x7858>
   187f4:	mov	r0, r8
   187f8:	mov	r1, r4
   187fc:	mov	r2, r5
   18800:	mov	r3, #4
   18804:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18808:	b	19e24 <main@@Base+0x6a80>
   1880c:	andeq	pc, r2, r0, lsr #18
   18810:	bne	18820 <main@@Base+0x547c>
   18814:	ldrb	r0, [r4, #2]!
   18818:	cmp	r0, #32
   1881c:	bhi	18830 <main@@Base+0x548c>
   18820:	mov	r0, r8
   18824:	mov	r2, r5
   18828:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1882c:	mov	r4, r0
   18830:	cmp	r7, r4
   18834:	beq	1abfc <main@@Base+0x7858>
   18838:	mov	r0, #0
   1883c:	mov	r1, #3
   18840:	str	r0, [sp, #52]	; 0x34
   18844:	ldr	r0, [r8]
   18848:	bl	2bd4c <flatcc_builder_start_table@@Base>
   1884c:	cmp	r0, #0
   18850:	bne	188b8 <main@@Base+0x5514>
   18854:	cmp	r4, r5
   18858:	beq	18890 <main@@Base+0x54ec>
   1885c:	ldrb	r0, [r4]
   18860:	cmp	r0, #123	; 0x7b
   18864:	bne	18890 <main@@Base+0x54ec>
   18868:	add	r1, r4, #1
   1886c:	sub	r0, r5, r1
   18870:	cmp	r0, #2
   18874:	blt	1a42c <main@@Base+0x7088>
   18878:	ldrb	r0, [r1]
   1887c:	cmp	r0, #32
   18880:	bls	1a414 <main@@Base+0x7070>
   18884:	ldr	r5, [sp, #44]	; 0x2c
   18888:	mov	r4, r1
   1888c:	b	1a43c <main@@Base+0x7098>
   18890:	mov	r0, r8
   18894:	mov	r1, r4
   18898:	mov	r2, r5
   1889c:	mov	r3, #21
   188a0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   188a4:	mov	r4, r0
   188a8:	ldr	r0, [sp, #28]
   188ac:	ldr	r0, [r0]
   188b0:	cmp	r0, #0
   188b4:	beq	188e8 <main@@Base+0x5544>
   188b8:	mov	r0, r8
   188bc:	mov	r1, r4
   188c0:	mov	r2, r5
   188c4:	mov	r3, #33	; 0x21
   188c8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   188cc:	mov	r4, r0
   188d0:	ldr	r0, [sp, #52]	; 0x34
   188d4:	cmp	r0, #0
   188d8:	beq	1346c <main@@Base+0xc8>
   188dc:	ldr	r0, [r8]
   188e0:	mov	r1, #35	; 0x23
   188e4:	b	15f2c <main@@Base+0x2b88>
   188e8:	ldr	r0, [r8]
   188ec:	bl	2c77c <flatcc_builder_end_table@@Base>
   188f0:	cmp	r0, #0
   188f4:	str	r0, [sp, #52]	; 0x34
   188f8:	bne	188dc <main@@Base+0x5538>
   188fc:	b	188b8 <main@@Base+0x5514>
   18900:	mov	r0, r8
   18904:	mov	r1, r2
   18908:	mov	r2, r5
   1890c:	mov	r3, #10
   18910:	b	16ff0 <main@@Base+0x3c4c>
   18914:	andeq	pc, r2, ip, lsl #17
   18918:	bne	18928 <main@@Base+0x5584>
   1891c:	ldrb	r0, [r2, #2]!
   18920:	cmp	r0, #32
   18924:	bhi	18938 <main@@Base+0x5594>
   18928:	mov	r0, r8
   1892c:	mov	r2, r5
   18930:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18934:	mov	r2, r0
   18938:	cmp	r4, r2
   1893c:	beq	1b86c <main@@Base+0x84c8>
   18940:	ldr	r0, [sp, #48]	; 0x30
   18944:	mov	r1, #8
   18948:	mov	r3, #0
   1894c:	str	r1, [sp]
   18950:	mov	r1, r2
   18954:	mov	r2, r5
   18958:	str	r0, [sp, #4]
   1895c:	ldr	r0, [pc, #4064]	; 19944 <main@@Base+0x65a0>
   18960:	add	r0, pc, r0
   18964:	str	r0, [sp, #8]
   18968:	ldr	r0, [pc, #4056]	; 19948 <main@@Base+0x65a4>
   1896c:	add	r0, pc, r0
   18970:	str	r0, [sp, #12]
   18974:	mov	r0, r8
   18978:	bl	31ec0 <flatcc_json_parser_union_type@@Base>
   1897c:	b	1b87c <main@@Base+0x84d8>
   18980:	bne	18990 <main@@Base+0x55ec>
   18984:	ldrb	r0, [r4, #2]!
   18988:	cmp	r0, #32
   1898c:	bhi	189a0 <main@@Base+0x55fc>
   18990:	mov	r0, r8
   18994:	mov	r2, r5
   18998:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1899c:	mov	r4, r0
   189a0:	cmp	r7, r4
   189a4:	beq	1abfc <main@@Base+0x7858>
   189a8:	ldr	r0, [r8]
   189ac:	bl	2b8cc <flatcc_builder_start_offset_vector@@Base>
   189b0:	cmp	r0, #0
   189b4:	bne	1346c <main@@Base+0xc8>
   189b8:	cmp	r4, r5
   189bc:	beq	189f0 <main@@Base+0x564c>
   189c0:	ldrb	r0, [r4]
   189c4:	cmp	r0, #91	; 0x5b
   189c8:	bne	189f0 <main@@Base+0x564c>
   189cc:	add	r1, r4, #1
   189d0:	sub	r0, r5, r1
   189d4:	cmp	r0, #2
   189d8:	blt	19234 <main@@Base+0x5e90>
   189dc:	ldrb	r0, [r1]
   189e0:	cmp	r0, #32
   189e4:	bls	19224 <main@@Base+0x5e80>
   189e8:	mov	r4, r1
   189ec:	b	19244 <main@@Base+0x5ea0>
   189f0:	mov	r0, r8
   189f4:	mov	r1, r4
   189f8:	mov	r2, r5
   189fc:	mov	r3, #22
   18a00:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18a04:	mov	r4, r0
   18a08:	ldr	r0, [r8]
   18a0c:	bl	2bab4 <flatcc_builder_end_offset_vector@@Base>
   18a10:	cmp	r0, #0
   18a14:	str	r0, [sp, #52]	; 0x34
   18a18:	beq	1346c <main@@Base+0xc8>
   18a1c:	ldr	r0, [r8]
   18a20:	mov	r1, #28
   18a24:	b	15f2c <main@@Base+0x2b88>
   18a28:	bne	18a38 <main@@Base+0x5694>
   18a2c:	ldrb	r0, [r7, #2]!
   18a30:	cmp	r0, #32
   18a34:	bhi	18a48 <main@@Base+0x56a4>
   18a38:	mov	r0, r8
   18a3c:	mov	r2, r5
   18a40:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18a44:	mov	r7, r0
   18a48:	cmp	sl, r7
   18a4c:	beq	15830 <main@@Base+0x248c>
   18a50:	ldr	r0, [r8]
   18a54:	mov	r1, #8
   18a58:	mov	r2, #4
   18a5c:	mvn	r3, #-536870912	; 0xe0000000
   18a60:	bl	2b840 <flatcc_builder_start_vector@@Base>
   18a64:	cmp	r0, #0
   18a68:	bne	1d5c4 <main@@Base+0xa220>
   18a6c:	ldr	sl, [sp, #36]	; 0x24
   18a70:	cmp	r7, r5
   18a74:	beq	18aa8 <main@@Base+0x5704>
   18a78:	ldrb	r0, [r7]
   18a7c:	cmp	r0, #91	; 0x5b
   18a80:	bne	18aa8 <main@@Base+0x5704>
   18a84:	add	r1, r7, #1
   18a88:	sub	r0, r5, r1
   18a8c:	cmp	r0, #2
   18a90:	blt	193b4 <main@@Base+0x6010>
   18a94:	ldrb	r0, [r1]
   18a98:	cmp	r0, #32
   18a9c:	bls	193a4 <main@@Base+0x6000>
   18aa0:	mov	r7, r1
   18aa4:	b	193c4 <main@@Base+0x6020>
   18aa8:	mov	r0, r8
   18aac:	mov	r1, r7
   18ab0:	mov	r2, r5
   18ab4:	mov	r3, #22
   18ab8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18abc:	mov	r7, r0
   18ac0:	ldr	r0, [r8]
   18ac4:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   18ac8:	cmp	r0, #0
   18acc:	str	r0, [sp, #52]	; 0x34
   18ad0:	beq	1d5c4 <main@@Base+0xa220>
   18ad4:	ldr	r0, [r8]
   18ad8:	mov	r1, #29
   18adc:	b	16768 <main@@Base+0x33c4>
   18ae0:	ldr	sl, [sp, #36]	; 0x24
   18ae4:	mov	r6, r0
   18ae8:	str	r6, [fp, #-60]	; 0xffffffc4
   18aec:	cmp	r7, r4
   18af0:	bne	18b28 <main@@Base+0x5784>
   18af4:	sub	r0, fp, #60	; 0x3c
   18af8:	mov	r1, r7
   18afc:	mov	r2, r5
   18b00:	str	r0, [sp]
   18b04:	mov	r0, r8
   18b08:	ldr	r3, [pc, #4080]	; 19b00 <main@@Base+0x675c>
   18b0c:	add	r3, pc, r3
   18b10:	bl	23444 <main@@Base+0x100a0>
   18b14:	mov	r4, r0
   18b18:	cmp	r0, r7
   18b1c:	cmpne	r4, r5
   18b20:	beq	1d614 <main@@Base+0xa270>
   18b24:	ldr	r6, [fp, #-60]	; 0xffffffc4
   18b28:	cmp	r6, #0
   18b2c:	bne	18b3c <main@@Base+0x5798>
   18b30:	ldrb	r0, [r8, #8]
   18b34:	tst	r0, #2
   18b38:	beq	1b880 <main@@Base+0x84dc>
   18b3c:	ldr	r0, [r8]
   18b40:	mov	r1, #16
   18b44:	b	1acd0 <main@@Base+0x792c>
   18b48:	andeq	pc, r2, r0, ror #12
   18b4c:	bne	18b5c <main@@Base+0x57b8>
   18b50:	ldrb	r0, [r7, #2]!
   18b54:	cmp	r0, #32
   18b58:	bhi	18b6c <main@@Base+0x57c8>
   18b5c:	mov	r0, r8
   18b60:	mov	r2, r5
   18b64:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18b68:	mov	r7, r0
   18b6c:	cmp	r9, r7
   18b70:	beq	14978 <main@@Base+0x15d4>
   18b74:	mov	r6, #0
   18b78:	cmp	r7, r5
   18b7c:	str	r6, [fp, #-52]	; 0xffffffcc
   18b80:	str	r6, [fp, #-56]	; 0xffffffc8
   18b84:	strh	r6, [fp, #-60]	; 0xffffffc4
   18b88:	str	r6, [sp, #56]	; 0x38
   18b8c:	beq	18bf4 <main@@Base+0x5850>
   18b90:	sub	r0, fp, #56	; 0x38
   18b94:	mov	r1, r7
   18b98:	mov	r2, r5
   18b9c:	add	r3, sp, #56	; 0x38
   18ba0:	str	r0, [sp]
   18ba4:	mov	r0, r8
   18ba8:	bl	31418 <flatcc_json_parser_integer@@Base>
   18bac:	cmp	r0, r7
   18bb0:	beq	18c04 <main@@Base+0x5860>
   18bb4:	ldr	r2, [sp, #56]	; 0x38
   18bb8:	mov	r4, r0
   18bbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18bc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18bc4:	cmp	r2, #0
   18bc8:	beq	18c14 <main@@Base+0x5870>
   18bcc:	movw	r2, #32769	; 0x8001
   18bd0:	subs	r2, r0, r2
   18bd4:	sbcs	r1, r1, #0
   18bd8:	bcc	18c44 <main@@Base+0x58a0>
   18bdc:	mov	r0, r8
   18be0:	mov	r1, r4
   18be4:	mov	r2, r5
   18be8:	mov	r3, #8
   18bec:	b	18c30 <main@@Base+0x588c>
   18bf0:	ldrdeq	pc, [r2], -r4
   18bf4:	mov	r4, r5
   18bf8:	cmp	r7, r4
   18bfc:	bne	18c94 <main@@Base+0x58f0>
   18c00:	b	18c60 <main@@Base+0x58bc>
   18c04:	mov	r4, r7
   18c08:	cmp	r7, r4
   18c0c:	bne	18c94 <main@@Base+0x58f0>
   18c10:	b	18c60 <main@@Base+0x58bc>
   18c14:	subs	r2, r0, #32768	; 0x8000
   18c18:	sbcs	r1, r1, #0
   18c1c:	bcc	18c50 <main@@Base+0x58ac>
   18c20:	mov	r0, r8
   18c24:	mov	r1, r4
   18c28:	mov	r2, r5
   18c2c:	mov	r3, #7
   18c30:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18c34:	mov	r4, r0
   18c38:	cmp	r7, r4
   18c3c:	bne	18c94 <main@@Base+0x58f0>
   18c40:	b	18c60 <main@@Base+0x58bc>
   18c44:	rsb	r6, r0, #0
   18c48:	b	18c54 <main@@Base+0x58b0>
   18c4c:	andeq	pc, r2, r0, asr #10
   18c50:	mov	r6, r0
   18c54:	strh	r6, [fp, #-60]	; 0xffffffc4
   18c58:	cmp	r7, r4
   18c5c:	bne	18c94 <main@@Base+0x58f0>
   18c60:	sub	r0, fp, #60	; 0x3c
   18c64:	mov	r1, r7
   18c68:	mov	r2, r5
   18c6c:	str	r0, [sp]
   18c70:	mov	r0, r8
   18c74:	ldr	r3, [pc, #3992]	; 19c14 <main@@Base+0x6870>
   18c78:	add	r3, pc, r3
   18c7c:	bl	1efc4 <main@@Base+0xbc20>
   18c80:	mov	r4, r0
   18c84:	cmp	r0, r7
   18c88:	cmpne	r4, r5
   18c8c:	beq	1d614 <main@@Base+0xa270>
   18c90:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   18c94:	uxth	r0, r6
   18c98:	cmp	r0, #150	; 0x96
   18c9c:	ldrbeq	r0, [r8, #8]
   18ca0:	tsteq	r0, #2
   18ca4:	beq	1b880 <main@@Base+0x84dc>
   18ca8:	ldr	r0, [r8]
   18cac:	mov	r1, #1
   18cb0:	mov	r2, #2
   18cb4:	mov	r3, #2
   18cb8:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   18cbc:	cmp	r0, #0
   18cc0:	beq	1d614 <main@@Base+0xa270>
   18cc4:	strh	r6, [r0]
   18cc8:	b	1b880 <main@@Base+0x84dc>
   18ccc:	bne	18cdc <main@@Base+0x5938>
   18cd0:	ldrb	r0, [r7, #2]!
   18cd4:	cmp	r0, #32
   18cd8:	bhi	18cec <main@@Base+0x5948>
   18cdc:	mov	r0, r8
   18ce0:	mov	r2, r5
   18ce4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18ce8:	mov	r7, r0
   18cec:	cmp	r9, r7
   18cf0:	beq	14978 <main@@Base+0x15d4>
   18cf4:	mov	r0, #0
   18cf8:	mov	r1, r7
   18cfc:	mov	r2, r5
   18d00:	sub	r3, fp, #56	; 0x38
   18d04:	str	r0, [fp, #-56]	; 0xffffffc8
   18d08:	mov	r0, r8
   18d0c:	bl	312d8 <flatcc_json_parser_float@@Base>
   18d10:	mov	r4, r0
   18d14:	cmp	r7, r0
   18d18:	bne	18d4c <main@@Base+0x59a8>
   18d1c:	sub	r0, fp, #56	; 0x38
   18d20:	mov	r1, r7
   18d24:	mov	r2, r5
   18d28:	str	r0, [sp]
   18d2c:	mov	r0, r8
   18d30:	ldr	r3, [pc, #4084]	; 19d2c <main@@Base+0x6988>
   18d34:	add	r3, pc, r3
   18d38:	bl	23270 <main@@Base+0xfecc>
   18d3c:	mov	r4, r0
   18d40:	cmp	r0, r7
   18d44:	cmpne	r4, r5
   18d48:	beq	1346c <main@@Base+0xc8>
   18d4c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18d50:	vcmp.f32	s0, s18
   18d54:	vmrs	APSR_nzcv, fpscr
   18d58:	bne	18d68 <main@@Base+0x59c4>
   18d5c:	ldrb	r0, [r8, #8]
   18d60:	tst	r0, #2
   18d64:	beq	1b880 <main@@Base+0x84dc>
   18d68:	ldr	r0, [r8]
   18d6c:	mov	r1, #25
   18d70:	b	15520 <main@@Base+0x217c>
   18d74:	bne	18d84 <main@@Base+0x59e0>
   18d78:	ldrb	r0, [r7, #2]!
   18d7c:	cmp	r0, #32
   18d80:	bhi	18d94 <main@@Base+0x59f0>
   18d84:	mov	r0, r8
   18d88:	mov	r2, r5
   18d8c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18d90:	mov	r7, r0
   18d94:	cmp	sl, r7
   18d98:	beq	1656c <main@@Base+0x31c8>
   18d9c:	mov	r6, #0
   18da0:	cmp	r7, r5
   18da4:	str	r6, [fp, #-52]	; 0xffffffcc
   18da8:	str	r6, [fp, #-56]	; 0xffffffc8
   18dac:	str	r6, [sp, #60]	; 0x3c
   18db0:	str	r6, [sp, #56]	; 0x38
   18db4:	str	r6, [fp, #-60]	; 0xffffffc4
   18db8:	beq	18e14 <main@@Base+0x5a70>
   18dbc:	sub	r0, fp, #56	; 0x38
   18dc0:	mov	r1, r7
   18dc4:	mov	r2, r5
   18dc8:	sub	r3, fp, #60	; 0x3c
   18dcc:	str	r0, [sp]
   18dd0:	mov	r0, r8
   18dd4:	bl	31418 <flatcc_json_parser_integer@@Base>
   18dd8:	cmp	r0, r7
   18ddc:	beq	18e20 <main@@Base+0x5a7c>
   18de0:	sub	r9, fp, #60	; 0x3c
   18de4:	mov	r4, r0
   18de8:	ldm	r9, {r0, r6, r9}
   18dec:	cmp	r0, #0
   18df0:	beq	18e30 <main@@Base+0x5a8c>
   18df4:	subs	r0, r6, #1
   18df8:	sbcs	r0, r9, #-2147483648	; 0x80000000
   18dfc:	bcc	18ee8 <main@@Base+0x5b44>
   18e00:	mov	r0, r8
   18e04:	mov	r1, r4
   18e08:	mov	r2, r5
   18e0c:	mov	r3, #8
   18e10:	b	18e48 <main@@Base+0x5aa4>
   18e14:	mov	r9, #0
   18e18:	mov	r4, r5
   18e1c:	b	18ef8 <main@@Base+0x5b54>
   18e20:	mov	r6, #0
   18e24:	mov	r9, #0
   18e28:	mov	r4, r7
   18e2c:	b	18ef8 <main@@Base+0x5b54>
   18e30:	cmn	r9, #1
   18e34:	bgt	18ef0 <main@@Base+0x5b4c>
   18e38:	mov	r0, r8
   18e3c:	mov	r1, r4
   18e40:	mov	r2, r5
   18e44:	mov	r3, #7
   18e48:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18e4c:	mov	r4, r0
   18e50:	mov	r6, #0
   18e54:	mov	r9, #0
   18e58:	b	18ef8 <main@@Base+0x5b54>
   18e5c:	andeq	pc, r2, r0, ror r2	; <UNPREDICTABLE>
   18e60:	bne	18e74 <main@@Base+0x5ad0>
   18e64:	mov	r4, r1
   18e68:	ldrb	r0, [r4, #1]!
   18e6c:	cmp	r0, #32
   18e70:	bhi	18e84 <main@@Base+0x5ae0>
   18e74:	mov	r0, r8
   18e78:	mov	r2, r5
   18e7c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18e80:	mov	r4, r0
   18e84:	cmp	r4, r5
   18e88:	beq	18ed0 <main@@Base+0x5b2c>
   18e8c:	ldrb	r0, [r4]
   18e90:	cmp	r0, #58	; 0x3a
   18e94:	bne	18ed0 <main@@Base+0x5b2c>
   18e98:	add	r1, r4, #1
   18e9c:	sub	r0, r5, r1
   18ea0:	cmp	r0, #2
   18ea4:	blt	1ab90 <main@@Base+0x77ec>
   18ea8:	ldrb	r0, [r1]
   18eac:	cmp	r0, #32
   18eb0:	bls	1ab74 <main@@Base+0x77d0>
   18eb4:	ldr	r5, [sp, #44]	; 0x2c
   18eb8:	ldr	r8, [sp, #40]	; 0x28
   18ebc:	ldr	sl, [sp, #36]	; 0x24
   18ec0:	mov	r4, r1
   18ec4:	cmp	r7, r4
   18ec8:	bne	1aba8 <main@@Base+0x7804>
   18ecc:	b	1abfc <main@@Base+0x7858>
   18ed0:	mov	r0, r8
   18ed4:	mov	r1, r4
   18ed8:	mov	r2, r5
   18edc:	mov	r3, #4
   18ee0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18ee4:	b	1ab9c <main@@Base+0x77f8>
   18ee8:	rsbs	r6, r6, #0
   18eec:	rsc	r9, r9, #0
   18ef0:	str	r6, [sp, #56]	; 0x38
   18ef4:	str	r9, [sp, #60]	; 0x3c
   18ef8:	ldr	sl, [sp, #36]	; 0x24
   18efc:	cmp	r7, r4
   18f00:	bne	18f3c <main@@Base+0x5b98>
   18f04:	add	r0, sp, #56	; 0x38
   18f08:	mov	r1, r7
   18f0c:	mov	r2, r5
   18f10:	str	r0, [sp]
   18f14:	mov	r0, r8
   18f18:	ldr	r3, [pc, #4056]	; 19ef8 <main@@Base+0x6b54>
   18f1c:	add	r3, pc, r3
   18f20:	bl	2368c <main@@Base+0x102e8>
   18f24:	mov	r4, r0
   18f28:	cmp	r0, r7
   18f2c:	cmpne	r4, r5
   18f30:	beq	1d614 <main@@Base+0xa270>
   18f34:	ldr	r6, [sp, #56]	; 0x38
   18f38:	ldr	r9, [sp, #60]	; 0x3c
   18f3c:	orrs	r0, r6, r9
   18f40:	bne	18f50 <main@@Base+0x5bac>
   18f44:	ldrb	r0, [r8, #8]
   18f48:	tst	r0, #2
   18f4c:	beq	1b880 <main@@Base+0x84dc>
   18f50:	ldr	r0, [r8]
   18f54:	mov	r1, #18
   18f58:	b	19868 <main@@Base+0x64c4>
   18f5c:	beq	19b6c <main@@Base+0x67c8>
   18f60:	b	19b7c <main@@Base+0x67d8>
   18f64:	bne	18f74 <main@@Base+0x5bd0>
   18f68:	ldrb	r0, [r4, #2]!
   18f6c:	cmp	r0, #32
   18f70:	bhi	18f84 <main@@Base+0x5be0>
   18f74:	ldr	r0, [sp, #40]	; 0x28
   18f78:	mov	r2, r5
   18f7c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   18f80:	mov	r4, r0
   18f84:	cmp	r8, r4
   18f88:	beq	16c40 <main@@Base+0x389c>
   18f8c:	ldr	r8, [sp, #40]	; 0x28
   18f90:	mov	r0, #0
   18f94:	mov	r1, #0
   18f98:	str	r0, [sp, #52]	; 0x34
   18f9c:	ldr	r0, [r8]
   18fa0:	bl	2bd4c <flatcc_builder_start_table@@Base>
   18fa4:	cmp	r0, #0
   18fa8:	bne	19014 <main@@Base+0x5c70>
   18fac:	cmp	r4, r5
   18fb0:	beq	18fe8 <main@@Base+0x5c44>
   18fb4:	ldrb	r0, [r4]
   18fb8:	cmp	r0, #123	; 0x7b
   18fbc:	bne	18fe8 <main@@Base+0x5c44>
   18fc0:	add	r1, r4, #1
   18fc4:	sub	r0, r5, r1
   18fc8:	cmp	r0, #2
   18fcc:	blt	1b228 <main@@Base+0x7e84>
   18fd0:	ldrb	r0, [r1]
   18fd4:	cmp	r0, #32
   18fd8:	bls	1b214 <main@@Base+0x7e70>
   18fdc:	ldr	r5, [sp, #44]	; 0x2c
   18fe0:	mov	r4, r1
   18fe4:	b	1b238 <main@@Base+0x7e94>
   18fe8:	mov	r0, r8
   18fec:	mov	r1, r4
   18ff0:	mov	r2, r5
   18ff4:	mov	r3, #21
   18ff8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   18ffc:	mov	r4, r0
   19000:	ldr	r0, [sp, #28]
   19004:	ldr	r0, [r0]
   19008:	cmp	r0, #0
   1900c:	beq	19044 <main@@Base+0x5ca0>
   19010:	ldr	sl, [sp, #36]	; 0x24
   19014:	mov	r0, r8
   19018:	mov	r1, r4
   1901c:	mov	r2, r5
   19020:	mov	r3, #33	; 0x21
   19024:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   19028:	mov	r4, r0
   1902c:	ldr	r0, [sp, #52]	; 0x34
   19030:	cmp	r0, #0
   19034:	beq	1346c <main@@Base+0xc8>
   19038:	ldr	r0, [r8]
   1903c:	mov	r1, #34	; 0x22
   19040:	b	15f2c <main@@Base+0x2b88>
   19044:	ldr	r0, [r8]
   19048:	bl	2c77c <flatcc_builder_end_table@@Base>
   1904c:	ldr	sl, [sp, #36]	; 0x24
   19050:	cmp	r0, #0
   19054:	str	r0, [sp, #52]	; 0x34
   19058:	bne	19038 <main@@Base+0x5c94>
   1905c:	b	19014 <main@@Base+0x5c70>
   19060:	mov	r4, r5
   19064:	b	16d1c <main@@Base+0x3978>
   19068:	bne	1907c <main@@Base+0x5cd8>
   1906c:	mov	r7, r1
   19070:	ldrb	r0, [r7, #1]!
   19074:	cmp	r0, #32
   19078:	bhi	1908c <main@@Base+0x5ce8>
   1907c:	mov	r0, r8
   19080:	mov	r2, r5
   19084:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19088:	mov	r7, r0
   1908c:	cmp	r7, r5
   19090:	beq	190d8 <main@@Base+0x5d34>
   19094:	ldrb	r0, [r7]
   19098:	cmp	r0, #58	; 0x3a
   1909c:	bne	190d8 <main@@Base+0x5d34>
   190a0:	add	r1, r7, #1
   190a4:	sub	r0, r5, r1
   190a8:	cmp	r0, #2
   190ac:	blt	1aff8 <main@@Base+0x7c54>
   190b0:	ldrb	r0, [r1]
   190b4:	cmp	r0, #32
   190b8:	bls	1afdc <main@@Base+0x7c38>
   190bc:	ldr	r5, [sp, #44]	; 0x2c
   190c0:	ldr	r8, [sp, #40]	; 0x28
   190c4:	ldr	sl, [sp, #36]	; 0x24
   190c8:	mov	r7, r1
   190cc:	cmp	r4, r7
   190d0:	bne	1b010 <main@@Base+0x7c6c>
   190d4:	b	1b86c <main@@Base+0x84c8>
   190d8:	mov	r0, r8
   190dc:	mov	r1, r7
   190e0:	mov	r2, r5
   190e4:	mov	r3, #4
   190e8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   190ec:	b	1b004 <main@@Base+0x7c60>
   190f0:	bne	19100 <main@@Base+0x5d5c>
   190f4:	ldrb	r0, [r4, #2]!
   190f8:	cmp	r0, #32
   190fc:	bhi	19110 <main@@Base+0x5d6c>
   19100:	mov	r0, r8
   19104:	mov	r2, r5
   19108:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1910c:	mov	r4, r0
   19110:	cmp	r7, r4
   19114:	beq	1abfc <main@@Base+0x7858>
   19118:	ldr	r0, [r8]
   1911c:	bl	2b8cc <flatcc_builder_start_offset_vector@@Base>
   19120:	cmp	r0, #0
   19124:	bne	1346c <main@@Base+0xc8>
   19128:	cmp	r4, r5
   1912c:	beq	19168 <main@@Base+0x5dc4>
   19130:	ldrb	r0, [r4]
   19134:	cmp	r0, #91	; 0x5b
   19138:	bne	19168 <main@@Base+0x5dc4>
   1913c:	add	r1, r4, #1
   19140:	sub	r0, r5, r1
   19144:	cmp	r0, #2
   19148:	blt	19ba4 <main@@Base+0x6800>
   1914c:	ldrb	r0, [r1]
   19150:	cmp	r0, #32
   19154:	bls	19b8c <main@@Base+0x67e8>
   19158:	ldr	r5, [sp, #44]	; 0x2c
   1915c:	ldr	r8, [sp, #40]	; 0x28
   19160:	mov	r4, r1
   19164:	b	19bb4 <main@@Base+0x6810>
   19168:	mov	r0, r8
   1916c:	mov	r1, r4
   19170:	mov	r2, r5
   19174:	mov	r3, #22
   19178:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1917c:	mov	r4, r0
   19180:	ldr	r0, [r8]
   19184:	bl	2bab4 <flatcc_builder_end_offset_vector@@Base>
   19188:	cmp	r0, #0
   1918c:	str	r0, [sp, #52]	; 0x34
   19190:	beq	1346c <main@@Base+0xc8>
   19194:	ldr	r0, [r8]
   19198:	mov	r1, #11
   1919c:	b	15f2c <main@@Base+0x2b88>
   191a0:	cmp	r0, #93	; 0x5d
   191a4:	bne	1a1b4 <main@@Base+0x6e10>
   191a8:	ldr	r5, [sp, #44]	; 0x2c
   191ac:	ldr	r8, [sp, #40]	; 0x28
   191b0:	ldr	sl, [sp, #36]	; 0x24
   191b4:	add	r1, r4, #1
   191b8:	sub	r0, r5, r1
   191bc:	cmp	r0, #2
   191c0:	blt	19200 <main@@Base+0x5e5c>
   191c4:	ldrb	r0, [r1]
   191c8:	cmp	r0, #32
   191cc:	bls	191e4 <main@@Base+0x5e40>
   191d0:	ldr	r5, [sp, #44]	; 0x2c
   191d4:	ldr	r8, [sp, #40]	; 0x28
   191d8:	ldr	sl, [sp, #36]	; 0x24
   191dc:	mov	r4, r1
   191e0:	b	16d1c <main@@Base+0x3978>
   191e4:	ldr	r5, [sp, #44]	; 0x2c
   191e8:	ldr	r8, [sp, #40]	; 0x28
   191ec:	ldr	sl, [sp, #36]	; 0x24
   191f0:	bne	19200 <main@@Base+0x5e5c>
   191f4:	ldrb	r0, [r4, #2]!
   191f8:	cmp	r0, #32
   191fc:	bhi	16d1c <main@@Base+0x3978>
   19200:	mov	r0, r8
   19204:	mov	r2, r5
   19208:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1920c:	b	16d18 <main@@Base+0x3974>
   19210:	mov	r0, r8
   19214:	mov	r1, r5
   19218:	mov	r2, r5
   1921c:	mov	r3, #9
   19220:	b	16d14 <main@@Base+0x3970>
   19224:	bne	19234 <main@@Base+0x5e90>
   19228:	ldrb	r0, [r4, #2]!
   1922c:	cmp	r0, #32
   19230:	bhi	19244 <main@@Base+0x5ea0>
   19234:	mov	r0, r8
   19238:	mov	r2, r5
   1923c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19240:	mov	r4, r0
   19244:	cmp	r4, r5
   19248:	mov	r2, r5
   1924c:	beq	1929c <main@@Base+0x5ef8>
   19250:	ldrb	r0, [r4]
   19254:	cmp	r0, #93	; 0x5d
   19258:	bne	19298 <main@@Base+0x5ef4>
   1925c:	add	r1, r4, #1
   19260:	sub	r0, r5, r1
   19264:	cmp	r0, #2
   19268:	blt	1d124 <main@@Base+0x9d80>
   1926c:	ldrb	r0, [r1]
   19270:	cmp	r0, #32
   19274:	bhi	1a3f4 <main@@Base+0x7050>
   19278:	ldr	r5, [sp, #44]	; 0x2c
   1927c:	ldr	r8, [sp, #40]	; 0x28
   19280:	ldr	sl, [sp, #36]	; 0x24
   19284:	bne	1d124 <main@@Base+0x9d80>
   19288:	ldrb	r0, [r4, #2]!
   1928c:	cmp	r0, #32
   19290:	bhi	18a08 <main@@Base+0x5664>
   19294:	b	1d124 <main@@Base+0x9d80>
   19298:	mov	r2, r4
   1929c:	mov	r1, r2
   192a0:	mov	r0, r8
   192a4:	mov	r2, r5
   192a8:	add	r3, sp, #52	; 0x34
   192ac:	bl	319ac <flatcc_json_parser_build_string@@Base>
   192b0:	mov	r4, r0
   192b4:	ldr	r0, [sp, #52]	; 0x34
   192b8:	cmp	r0, #0
   192bc:	beq	1346c <main@@Base+0xc8>
   192c0:	ldr	r0, [r8]
   192c4:	mov	r1, #1
   192c8:	bl	2b024 <flatcc_builder_extend_offset_vector@@Base>
   192cc:	cmp	r0, #0
   192d0:	beq	1346c <main@@Base+0xc8>
   192d4:	ldr	r1, [sp, #52]	; 0x34
   192d8:	str	r1, [r0]
   192dc:	sub	r0, r5, r4
   192e0:	cmp	r0, #2
   192e4:	blt	19318 <main@@Base+0x5f74>
   192e8:	ldrb	r0, [r4]
   192ec:	cmp	r0, #32
   192f0:	bls	19304 <main@@Base+0x5f60>
   192f4:	mov	r2, r4
   192f8:	cmp	r2, r5
   192fc:	bne	19334 <main@@Base+0x5f90>
   19300:	b	1a388 <main@@Base+0x6fe4>
   19304:	bne	19318 <main@@Base+0x5f74>
   19308:	mov	r2, r4
   1930c:	ldrb	r0, [r2, #1]!
   19310:	cmp	r0, #32
   19314:	bhi	1932c <main@@Base+0x5f88>
   19318:	mov	r0, r8
   1931c:	mov	r1, r4
   19320:	mov	r2, r5
   19324:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19328:	mov	r2, r0
   1932c:	cmp	r2, r5
   19330:	beq	1a388 <main@@Base+0x6fe4>
   19334:	ldrb	r0, [r2]
   19338:	cmp	r0, #44	; 0x2c
   1933c:	bne	1a3c4 <main@@Base+0x7020>
   19340:	add	r1, r2, #1
   19344:	sub	r0, r5, r1
   19348:	cmp	r0, #2
   1934c:	blt	1937c <main@@Base+0x5fd8>
   19350:	ldrb	r0, [r1]
   19354:	cmp	r0, #32
   19358:	bls	1936c <main@@Base+0x5fc8>
   1935c:	mov	r2, r1
   19360:	cmp	r2, r5
   19364:	bne	19394 <main@@Base+0x5ff0>
   19368:	b	1a408 <main@@Base+0x7064>
   1936c:	bne	1937c <main@@Base+0x5fd8>
   19370:	ldrb	r0, [r2, #2]!
   19374:	cmp	r0, #32
   19378:	bhi	1938c <main@@Base+0x5fe8>
   1937c:	mov	r0, r8
   19380:	mov	r2, r5
   19384:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19388:	mov	r2, r0
   1938c:	cmp	r2, r5
   19390:	beq	1a408 <main@@Base+0x7064>
   19394:	ldrb	r0, [r2]
   19398:	cmp	r0, #93	; 0x5d
   1939c:	bne	1929c <main@@Base+0x5ef8>
   193a0:	b	1a3d4 <main@@Base+0x7030>
   193a4:	bne	193b4 <main@@Base+0x6010>
   193a8:	ldrb	r0, [r7, #2]!
   193ac:	cmp	r0, #32
   193b0:	bhi	193c4 <main@@Base+0x6020>
   193b4:	mov	r0, r8
   193b8:	mov	r2, r5
   193bc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   193c0:	mov	r7, r0
   193c4:	cmp	r7, r5
   193c8:	mov	r4, r5
   193cc:	beq	1c45c <main@@Base+0x90b8>
   193d0:	ldrb	r0, [r7]
   193d4:	cmp	r0, #93	; 0x5d
   193d8:	bne	19418 <main@@Base+0x6074>
   193dc:	add	r1, r7, #1
   193e0:	sub	r0, r5, r1
   193e4:	cmp	r0, #2
   193e8:	blt	1d208 <main@@Base+0x9e64>
   193ec:	ldrb	r0, [r1]
   193f0:	cmp	r0, #32
   193f4:	bhi	1cda0 <main@@Base+0x99fc>
   193f8:	ldr	r5, [sp, #44]	; 0x2c
   193fc:	ldr	r8, [sp, #40]	; 0x28
   19400:	ldr	sl, [sp, #36]	; 0x24
   19404:	bne	1d208 <main@@Base+0x9e64>
   19408:	ldrb	r0, [r7, #2]!
   1940c:	cmp	r0, #32
   19410:	bhi	18ac0 <main@@Base+0x571c>
   19414:	b	1d208 <main@@Base+0x9e64>
   19418:	mov	r4, r7
   1941c:	b	1c45c <main@@Base+0x90b8>
   19420:	bne	19430 <main@@Base+0x608c>
   19424:	ldrb	r0, [r4, #2]!
   19428:	cmp	r0, #32
   1942c:	bhi	19440 <main@@Base+0x609c>
   19430:	mov	r0, r8
   19434:	mov	r2, r5
   19438:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1943c:	mov	r4, r0
   19440:	cmp	r7, r4
   19444:	beq	1abfc <main@@Base+0x7858>
   19448:	mov	r0, #0
   1944c:	mov	r1, #3
   19450:	str	r0, [sp, #52]	; 0x34
   19454:	ldr	r0, [r8]
   19458:	bl	2bd4c <flatcc_builder_start_table@@Base>
   1945c:	cmp	r0, #0
   19460:	bne	194d4 <main@@Base+0x6130>
   19464:	cmp	r4, r5
   19468:	beq	194a0 <main@@Base+0x60fc>
   1946c:	ldrb	r0, [r4]
   19470:	cmp	r0, #123	; 0x7b
   19474:	bne	194a0 <main@@Base+0x60fc>
   19478:	add	r1, r4, #1
   1947c:	sub	r0, r5, r1
   19480:	cmp	r0, #2
   19484:	blt	1ba30 <main@@Base+0x868c>
   19488:	ldrb	r0, [r1]
   1948c:	cmp	r0, #32
   19490:	bls	1ba20 <main@@Base+0x867c>
   19494:	mov	r4, r1
   19498:	b	1ba40 <main@@Base+0x869c>
   1949c:	andeq	fp, r1, r2, lsr #12
   194a0:	mov	r0, r8
   194a4:	mov	r1, r4
   194a8:	mov	r2, r5
   194ac:	mov	r3, #21
   194b0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   194b4:	mov	r4, r0
   194b8:	ldr	r0, [sp, #28]
   194bc:	ldr	r0, [r0]
   194c0:	cmp	r0, #0
   194c4:	beq	19504 <main@@Base+0x6160>
   194c8:	ldr	r5, [sp, #44]	; 0x2c
   194cc:	ldr	r8, [sp, #40]	; 0x28
   194d0:	ldr	sl, [sp, #36]	; 0x24
   194d4:	mov	r0, r8
   194d8:	mov	r1, r4
   194dc:	mov	r2, r5
   194e0:	mov	r3, #33	; 0x21
   194e4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   194e8:	mov	r4, r0
   194ec:	ldr	r0, [sp, #52]	; 0x34
   194f0:	cmp	r0, #0
   194f4:	beq	1346c <main@@Base+0xc8>
   194f8:	ldr	r0, [r8]
   194fc:	mov	r1, #14
   19500:	b	15f2c <main@@Base+0x2b88>
   19504:	ldr	r0, [sp, #40]	; 0x28
   19508:	ldr	r0, [r0]
   1950c:	bl	2c77c <flatcc_builder_end_table@@Base>
   19510:	cmp	r0, #0
   19514:	str	r0, [sp, #52]	; 0x34
   19518:	beq	194c8 <main@@Base+0x6124>
   1951c:	ldr	r5, [sp, #44]	; 0x2c
   19520:	ldr	r8, [sp, #40]	; 0x28
   19524:	ldr	sl, [sp, #36]	; 0x24
   19528:	b	194f8 <main@@Base+0x6154>
   1952c:	bne	1953c <main@@Base+0x6198>
   19530:	ldrb	r0, [r4, #2]!
   19534:	cmp	r0, #32
   19538:	bhi	1954c <main@@Base+0x61a8>
   1953c:	mov	r0, r8
   19540:	mov	r2, r5
   19544:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19548:	mov	r4, r0
   1954c:	cmp	r7, r4
   19550:	beq	1abfc <main@@Base+0x7858>
   19554:	ldr	r0, [r8]
   19558:	mov	r1, #1
   1955c:	mov	r2, #1
   19560:	mvn	r3, #0
   19564:	bl	2b840 <flatcc_builder_start_vector@@Base>
   19568:	cmp	r0, #0
   1956c:	bne	1346c <main@@Base+0xc8>
   19570:	cmp	r4, r5
   19574:	beq	195bc <main@@Base+0x6218>
   19578:	ldrb	r0, [r4]
   1957c:	cmp	r0, #91	; 0x5b
   19580:	bne	195bc <main@@Base+0x6218>
   19584:	add	r1, r4, #1
   19588:	sub	r0, r5, r1
   1958c:	cmp	r0, #2
   19590:	blt	19f14 <main@@Base+0x6b70>
   19594:	ldrb	r0, [r1]
   19598:	cmp	r0, #32
   1959c:	bls	19efc <main@@Base+0x6b58>
   195a0:	ldr	r5, [sp, #44]	; 0x2c
   195a4:	ldr	r8, [sp, #40]	; 0x28
   195a8:	mov	r4, r1
   195ac:	cmp	r4, r5
   195b0:	bne	19f2c <main@@Base+0x6b88>
   195b4:	b	19f94 <main@@Base+0x6bf0>
   195b8:	andeq	lr, r2, r0, lsl #22
   195bc:	mov	r0, r8
   195c0:	mov	r1, r4
   195c4:	mov	r2, r5
   195c8:	mov	r3, #22
   195cc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   195d0:	mov	r4, r0
   195d4:	ldr	r0, [r8]
   195d8:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   195dc:	cmp	r0, #0
   195e0:	str	r0, [sp, #52]	; 0x34
   195e4:	beq	1346c <main@@Base+0xc8>
   195e8:	ldr	r0, [r8]
   195ec:	mov	r1, #5
   195f0:	b	15f2c <main@@Base+0x2b88>
   195f4:	ldr	r5, [sp, #44]	; 0x2c
   195f8:	ldr	r8, [sp, #40]	; 0x28
   195fc:	bne	1960c <main@@Base+0x6268>
   19600:	ldrb	r0, [r7, #2]!
   19604:	cmp	r0, #32
   19608:	bhi	1961c <main@@Base+0x6278>
   1960c:	mov	r0, r8
   19610:	mov	r2, r5
   19614:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19618:	mov	r7, r0
   1961c:	cmp	sl, r7
   19620:	beq	18030 <main@@Base+0x4c8c>
   19624:	mov	r6, #0
   19628:	cmp	r7, r5
   1962c:	str	r6, [fp, #-52]	; 0xffffffcc
   19630:	str	r6, [fp, #-56]	; 0xffffffc8
   19634:	str	r6, [fp, #-60]	; 0xffffffc4
   19638:	str	r6, [sp, #56]	; 0x38
   1963c:	beq	19688 <main@@Base+0x62e4>
   19640:	sub	r0, fp, #56	; 0x38
   19644:	mov	r1, r7
   19648:	mov	r2, r5
   1964c:	add	r3, sp, #56	; 0x38
   19650:	str	r0, [sp]
   19654:	mov	r0, r8
   19658:	bl	31418 <flatcc_json_parser_integer@@Base>
   1965c:	cmp	r0, r7
   19660:	beq	19690 <main@@Base+0x62ec>
   19664:	mov	r4, r0
   19668:	ldr	r0, [sp, #56]	; 0x38
   1966c:	cmp	r0, #0
   19670:	beq	19698 <main@@Base+0x62f4>
   19674:	mov	r0, r8
   19678:	mov	r1, r4
   1967c:	mov	r2, r5
   19680:	mov	r3, #8
   19684:	b	196bc <main@@Base+0x6318>
   19688:	mov	r4, r5
   1968c:	b	196c4 <main@@Base+0x6320>
   19690:	mov	r4, r7
   19694:	b	196c4 <main@@Base+0x6320>
   19698:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1969c:	cmp	r0, #0
   196a0:	beq	1a1d8 <main@@Base+0x6e34>
   196a4:	ldr	r8, [sp, #40]	; 0x28
   196a8:	ldr	r5, [sp, #44]	; 0x2c
   196ac:	mov	r1, r4
   196b0:	mov	r3, #7
   196b4:	mov	r0, r8
   196b8:	mov	r2, r5
   196bc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   196c0:	mov	r4, r0
   196c4:	ldr	sl, [sp, #36]	; 0x24
   196c8:	cmp	r7, r4
   196cc:	bne	1970c <main@@Base+0x6368>
   196d0:	sub	r0, fp, #60	; 0x3c
   196d4:	mov	r1, r7
   196d8:	mov	r2, r5
   196dc:	str	r0, [sp]
   196e0:	mov	r0, r8
   196e4:	ldr	r3, [pc, #4040]	; 1a6b4 <main@@Base+0x7310>
   196e8:	add	r3, pc, r3
   196ec:	bl	238e4 <main@@Base+0x10540>
   196f0:	mov	r4, r0
   196f4:	cmp	r0, r7
   196f8:	cmpne	r4, r5
   196fc:	beq	1d614 <main@@Base+0xa270>
   19700:	ldr	r6, [fp, #-60]	; 0xffffffc4
   19704:	ldr	r8, [sp, #40]	; 0x28
   19708:	ldr	sl, [sp, #36]	; 0x24
   1970c:	cmp	r6, #0
   19710:	bne	19720 <main@@Base+0x637c>
   19714:	ldrb	r0, [r8, #8]
   19718:	tst	r0, #2
   1971c:	beq	1b880 <main@@Base+0x84dc>
   19720:	ldr	r0, [r8]
   19724:	mov	r1, #17
   19728:	b	1acd0 <main@@Base+0x792c>
   1972c:	ldr	r5, [sp, #44]	; 0x2c
   19730:	ldr	r8, [sp, #40]	; 0x28
   19734:	bne	19744 <main@@Base+0x63a0>
   19738:	ldrb	r0, [r7, #2]!
   1973c:	cmp	r0, #32
   19740:	bhi	19754 <main@@Base+0x63b0>
   19744:	mov	r0, r8
   19748:	mov	r2, r5
   1974c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19750:	mov	r7, r0
   19754:	cmp	sl, r7
   19758:	beq	18128 <main@@Base+0x4d84>
   1975c:	mov	r6, #0
   19760:	cmp	r7, r5
   19764:	str	r6, [fp, #-52]	; 0xffffffcc
   19768:	str	r6, [fp, #-56]	; 0xffffffc8
   1976c:	str	r6, [sp, #60]	; 0x3c
   19770:	str	r6, [sp, #56]	; 0x38
   19774:	str	r6, [fp, #-60]	; 0xffffffc4
   19778:	beq	197d4 <main@@Base+0x6430>
   1977c:	sub	r0, fp, #56	; 0x38
   19780:	mov	r1, r7
   19784:	mov	r2, r5
   19788:	sub	r3, fp, #60	; 0x3c
   1978c:	str	r0, [sp]
   19790:	mov	r0, r8
   19794:	bl	31418 <flatcc_json_parser_integer@@Base>
   19798:	cmp	r0, r7
   1979c:	beq	197e0 <main@@Base+0x643c>
   197a0:	mov	r4, r0
   197a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   197a8:	cmp	r0, #0
   197ac:	beq	197f0 <main@@Base+0x644c>
   197b0:	mov	r0, r8
   197b4:	mov	r1, r4
   197b8:	mov	r2, r5
   197bc:	mov	r3, #8
   197c0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   197c4:	mov	r4, r0
   197c8:	mov	r6, #0
   197cc:	mov	r9, #0
   197d0:	b	19800 <main@@Base+0x645c>
   197d4:	mov	r9, #0
   197d8:	mov	r4, r5
   197dc:	b	19800 <main@@Base+0x645c>
   197e0:	mov	r6, #0
   197e4:	mov	r9, #0
   197e8:	mov	r4, r7
   197ec:	b	19800 <main@@Base+0x645c>
   197f0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   197f4:	ldr	r9, [fp, #-52]	; 0xffffffcc
   197f8:	str	r9, [sp, #60]	; 0x3c
   197fc:	str	r6, [sp, #56]	; 0x38
   19800:	ldr	sl, [sp, #36]	; 0x24
   19804:	cmp	r7, r4
   19808:	bne	1984c <main@@Base+0x64a8>
   1980c:	add	r0, sp, #56	; 0x38
   19810:	mov	r1, r7
   19814:	mov	r2, r5
   19818:	str	r0, [sp]
   1981c:	mov	r0, r8
   19820:	ldr	r3, [pc, #3992]	; 1a7c0 <main@@Base+0x741c>
   19824:	add	r3, pc, r3
   19828:	bl	23b20 <main@@Base+0x1077c>
   1982c:	mov	r4, r0
   19830:	cmp	r0, r7
   19834:	cmpne	r4, r5
   19838:	beq	1d614 <main@@Base+0xa270>
   1983c:	ldr	r6, [sp, #56]	; 0x38
   19840:	ldr	r9, [sp, #60]	; 0x3c
   19844:	ldr	r8, [sp, #40]	; 0x28
   19848:	ldr	sl, [sp, #36]	; 0x24
   1984c:	orrs	r0, r6, r9
   19850:	bne	19860 <main@@Base+0x64bc>
   19854:	ldrb	r0, [r8, #8]
   19858:	tst	r0, #2
   1985c:	beq	1b880 <main@@Base+0x84dc>
   19860:	ldr	r0, [r8]
   19864:	mov	r1, #19
   19868:	mov	r2, #8
   1986c:	mov	r3, #8
   19870:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   19874:	cmp	r0, #0
   19878:	beq	1d614 <main@@Base+0xa270>
   1987c:	stm	r0, {r6, r9}
   19880:	b	1b880 <main@@Base+0x84dc>
   19884:	beq	1a3a4 <main@@Base+0x7000>
   19888:	b	1a3b4 <main@@Base+0x7010>
   1988c:	ldr	r5, [sp, #44]	; 0x2c
   19890:	ldr	r8, [sp, #40]	; 0x28
   19894:	ldr	sl, [sp, #36]	; 0x24
   19898:	bne	198a8 <main@@Base+0x6504>
   1989c:	ldrb	r0, [r4, #2]!
   198a0:	cmp	r0, #32
   198a4:	bhi	198b8 <main@@Base+0x6514>
   198a8:	mov	r0, r8
   198ac:	mov	r2, r5
   198b0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   198b4:	mov	r4, r0
   198b8:	cmp	r7, r4
   198bc:	beq	1abfc <main@@Base+0x7858>
   198c0:	ldr	r0, [r8]
   198c4:	bl	2b8cc <flatcc_builder_start_offset_vector@@Base>
   198c8:	cmp	r0, #0
   198cc:	bne	1346c <main@@Base+0xc8>
   198d0:	cmp	r4, r5
   198d4:	beq	1990c <main@@Base+0x6568>
   198d8:	ldrb	r0, [r4]
   198dc:	cmp	r0, #91	; 0x5b
   198e0:	bne	1990c <main@@Base+0x6568>
   198e4:	add	r1, r4, #1
   198e8:	sub	r0, r5, r1
   198ec:	cmp	r0, #2
   198f0:	blt	1a204 <main@@Base+0x6e60>
   198f4:	ldrb	r0, [r1]
   198f8:	cmp	r0, #32
   198fc:	bls	1a1ec <main@@Base+0x6e48>
   19900:	ldr	r5, [sp, #44]	; 0x2c
   19904:	mov	r4, r1
   19908:	b	1a214 <main@@Base+0x6e70>
   1990c:	mov	r0, r8
   19910:	mov	r1, r4
   19914:	mov	r2, r5
   19918:	mov	r3, #22
   1991c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   19920:	mov	r4, r0
   19924:	ldr	r0, [r8]
   19928:	bl	2bab4 <flatcc_builder_end_offset_vector@@Base>
   1992c:	cmp	r0, #0
   19930:	str	r0, [sp, #52]	; 0x34
   19934:	beq	1346c <main@@Base+0xc8>
   19938:	ldr	r0, [r8]
   1993c:	mov	r1, #10
   19940:	b	15f2c <main@@Base+0x2b88>
   19944:	andeq	lr, r2, r4, ror r7
   19948:	andeq	r7, r0, ip, lsl r0
   1994c:	ldr	r5, [sp, #44]	; 0x2c
   19950:	ldr	r8, [sp, #40]	; 0x28
   19954:	bne	19968 <main@@Base+0x65c4>
   19958:	mov	r7, r1
   1995c:	ldrb	r0, [r7, #1]!
   19960:	cmp	r0, #32
   19964:	bhi	19978 <main@@Base+0x65d4>
   19968:	mov	r0, r8
   1996c:	mov	r2, r5
   19970:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19974:	mov	r7, r0
   19978:	cmp	r7, r5
   1997c:	beq	199b8 <main@@Base+0x6614>
   19980:	ldrb	r0, [r7]
   19984:	cmp	r0, #58	; 0x3a
   19988:	bne	199b8 <main@@Base+0x6614>
   1998c:	add	r1, r7, #1
   19990:	sub	r0, r5, r1
   19994:	cmp	r0, #2
   19998:	blt	1b678 <main@@Base+0x82d4>
   1999c:	ldrb	r0, [r1]
   199a0:	cmp	r0, #32
   199a4:	bls	1b660 <main@@Base+0x82bc>
   199a8:	ldr	r5, [sp, #44]	; 0x2c
   199ac:	ldr	r8, [sp, #40]	; 0x28
   199b0:	mov	r7, r1
   199b4:	b	1b688 <main@@Base+0x82e4>
   199b8:	mov	r0, r8
   199bc:	mov	r1, r7
   199c0:	mov	r2, r5
   199c4:	mov	r3, #4
   199c8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   199cc:	b	1b684 <main@@Base+0x82e0>
   199d0:	ldr	r5, [sp, #44]	; 0x2c
   199d4:	ldr	r8, [sp, #40]	; 0x28
   199d8:	bne	199ec <main@@Base+0x6648>
   199dc:	mov	r7, r1
   199e0:	ldrb	r0, [r7, #1]!
   199e4:	cmp	r0, #32
   199e8:	bhi	199fc <main@@Base+0x6658>
   199ec:	mov	r0, r8
   199f0:	mov	r2, r5
   199f4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   199f8:	mov	r7, r0
   199fc:	cmp	r7, r5
   19a00:	beq	19a3c <main@@Base+0x6698>
   19a04:	ldrb	r0, [r7]
   19a08:	cmp	r0, #58	; 0x3a
   19a0c:	bne	19a3c <main@@Base+0x6698>
   19a10:	add	r1, r7, #1
   19a14:	sub	r0, r5, r1
   19a18:	cmp	r0, #2
   19a1c:	blt	1b7d0 <main@@Base+0x842c>
   19a20:	ldrb	r0, [r1]
   19a24:	cmp	r0, #32
   19a28:	bls	1b7b8 <main@@Base+0x8414>
   19a2c:	ldr	r5, [sp, #44]	; 0x2c
   19a30:	ldr	r8, [sp, #40]	; 0x28
   19a34:	mov	r7, r1
   19a38:	b	1b7e0 <main@@Base+0x843c>
   19a3c:	mov	r0, r8
   19a40:	mov	r1, r7
   19a44:	mov	r2, r5
   19a48:	mov	r3, #4
   19a4c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   19a50:	b	1b7dc <main@@Base+0x8438>
   19a54:	ldr	r5, [sp, #44]	; 0x2c
   19a58:	ldr	r8, [sp, #40]	; 0x28
   19a5c:	ldr	sl, [sp, #36]	; 0x24
   19a60:	bne	19a70 <main@@Base+0x66cc>
   19a64:	ldrb	r0, [r7, #2]!
   19a68:	cmp	r0, #32
   19a6c:	bhi	19a80 <main@@Base+0x66dc>
   19a70:	mov	r0, r8
   19a74:	mov	r2, r5
   19a78:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19a7c:	mov	r7, r0
   19a80:	cmp	r4, r7
   19a84:	beq	1b86c <main@@Base+0x84c8>
   19a88:	mov	r6, #0
   19a8c:	cmp	r7, r5
   19a90:	str	r6, [fp, #-52]	; 0xffffffcc
   19a94:	str	r6, [fp, #-56]	; 0xffffffc8
   19a98:	str	r6, [fp, #-60]	; 0xffffffc4
   19a9c:	str	r6, [sp, #56]	; 0x38
   19aa0:	beq	19b04 <main@@Base+0x6760>
   19aa4:	sub	r0, fp, #56	; 0x38
   19aa8:	mov	r1, r7
   19aac:	mov	r2, r5
   19ab0:	add	r3, sp, #56	; 0x38
   19ab4:	str	r0, [sp]
   19ab8:	mov	r0, r8
   19abc:	bl	31418 <flatcc_json_parser_integer@@Base>
   19ac0:	cmp	r0, r7
   19ac4:	beq	19b14 <main@@Base+0x6770>
   19ac8:	ldr	r2, [sp, #56]	; 0x38
   19acc:	mov	r4, r0
   19ad0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ad4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ad8:	cmp	r2, #0
   19adc:	beq	19b24 <main@@Base+0x6780>
   19ae0:	subs	r2, r0, #-2147483647	; 0x80000001
   19ae4:	sbcs	r1, r1, #0
   19ae8:	bcc	19b54 <main@@Base+0x67b0>
   19aec:	ldr	r8, [sp, #40]	; 0x28
   19af0:	ldr	r5, [sp, #44]	; 0x2c
   19af4:	mov	r1, r4
   19af8:	mov	r3, #8
   19afc:	b	19b40 <main@@Base+0x679c>
   19b00:	andeq	lr, r2, r4, lsl r6
   19b04:	mov	r4, r5
   19b08:	cmp	r7, r4
   19b0c:	bne	1acb4 <main@@Base+0x7910>
   19b10:	b	1ac78 <main@@Base+0x78d4>
   19b14:	mov	r4, r7
   19b18:	cmp	r7, r4
   19b1c:	bne	1acb4 <main@@Base+0x7910>
   19b20:	b	1ac78 <main@@Base+0x78d4>
   19b24:	subs	r2, r0, #-2147483648	; 0x80000000
   19b28:	sbcs	r1, r1, #0
   19b2c:	bcc	1ac5c <main@@Base+0x78b8>
   19b30:	ldr	r8, [sp, #40]	; 0x28
   19b34:	ldr	r5, [sp, #44]	; 0x2c
   19b38:	mov	r1, r4
   19b3c:	mov	r3, #7
   19b40:	mov	r0, r8
   19b44:	mov	r2, r5
   19b48:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   19b4c:	mov	r4, r0
   19b50:	b	1ac6c <main@@Base+0x78c8>
   19b54:	rsb	r6, r0, #0
   19b58:	b	1ac60 <main@@Base+0x78bc>
   19b5c:	ldr	r5, [sp, #44]	; 0x2c
   19b60:	ldr	r8, [sp, #40]	; 0x28
   19b64:	ldr	sl, [sp, #36]	; 0x24
   19b68:	bne	19b7c <main@@Base+0x67d8>
   19b6c:	ldrb	r0, [r4, #2]!
   19b70:	cmp	r0, #32
   19b74:	mov	r7, r4
   19b78:	bhi	1674c <main@@Base+0x33a8>
   19b7c:	mov	r0, r8
   19b80:	mov	r2, r5
   19b84:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19b88:	b	16748 <main@@Base+0x33a4>
   19b8c:	ldr	r5, [sp, #44]	; 0x2c
   19b90:	ldr	r8, [sp, #40]	; 0x28
   19b94:	bne	19ba4 <main@@Base+0x6800>
   19b98:	ldrb	r0, [r4, #2]!
   19b9c:	cmp	r0, #32
   19ba0:	bhi	19bb4 <main@@Base+0x6810>
   19ba4:	mov	r0, r8
   19ba8:	mov	r2, r5
   19bac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19bb0:	mov	r4, r0
   19bb4:	cmp	r4, r5
   19bb8:	mov	r2, r5
   19bbc:	beq	19c24 <main@@Base+0x6880>
   19bc0:	ldrb	r0, [r4]
   19bc4:	cmp	r0, #93	; 0x5d
   19bc8:	bne	19c18 <main@@Base+0x6874>
   19bcc:	ldr	r5, [sp, #44]	; 0x2c
   19bd0:	ldr	r8, [sp, #40]	; 0x28
   19bd4:	ldr	sl, [sp, #36]	; 0x24
   19bd8:	add	r1, r4, #1
   19bdc:	sub	r0, r5, r1
   19be0:	cmp	r0, #2
   19be4:	blt	1d260 <main@@Base+0x9ebc>
   19be8:	ldrb	r0, [r1]
   19bec:	cmp	r0, #32
   19bf0:	bhi	1b1bc <main@@Base+0x7e18>
   19bf4:	ldr	r5, [sp, #44]	; 0x2c
   19bf8:	ldr	r8, [sp, #40]	; 0x28
   19bfc:	ldr	sl, [sp, #36]	; 0x24
   19c00:	bne	1d260 <main@@Base+0x9ebc>
   19c04:	ldrb	r0, [r4, #2]!
   19c08:	cmp	r0, #32
   19c0c:	bhi	19180 <main@@Base+0x5ddc>
   19c10:	b	1d260 <main@@Base+0x9ebc>
   19c14:	andeq	lr, r2, r0, asr r4
   19c18:	ldr	r5, [sp, #44]	; 0x2c
   19c1c:	ldr	r8, [sp, #40]	; 0x28
   19c20:	mov	r2, r4
   19c24:	mov	r1, r2
   19c28:	mov	r0, r8
   19c2c:	mov	r2, r5
   19c30:	add	r3, sp, #52	; 0x34
   19c34:	bl	1342c <main@@Base+0x88>
   19c38:	mov	r4, r0
   19c3c:	ldr	r0, [sp, #52]	; 0x34
   19c40:	cmp	r0, #0
   19c44:	beq	1346c <main@@Base+0xc8>
   19c48:	ldr	r0, [r8]
   19c4c:	mov	r1, #1
   19c50:	bl	2b024 <flatcc_builder_extend_offset_vector@@Base>
   19c54:	cmp	r0, #0
   19c58:	beq	1346c <main@@Base+0xc8>
   19c5c:	ldr	r1, [sp, #52]	; 0x34
   19c60:	str	r1, [r0]
   19c64:	sub	r0, r5, r4
   19c68:	cmp	r0, #2
   19c6c:	blt	19ca0 <main@@Base+0x68fc>
   19c70:	ldrb	r0, [r4]
   19c74:	cmp	r0, #32
   19c78:	bls	19c8c <main@@Base+0x68e8>
   19c7c:	mov	r2, r4
   19c80:	cmp	r2, r5
   19c84:	bne	19cbc <main@@Base+0x6918>
   19c88:	b	1b180 <main@@Base+0x7ddc>
   19c8c:	bne	19ca0 <main@@Base+0x68fc>
   19c90:	mov	r2, r4
   19c94:	ldrb	r0, [r2, #1]!
   19c98:	cmp	r0, #32
   19c9c:	bhi	19cb4 <main@@Base+0x6910>
   19ca0:	mov	r0, r8
   19ca4:	mov	r1, r4
   19ca8:	mov	r2, r5
   19cac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19cb0:	mov	r2, r0
   19cb4:	cmp	r2, r5
   19cb8:	beq	1b180 <main@@Base+0x7ddc>
   19cbc:	ldrb	r0, [r2]
   19cc0:	cmp	r0, #44	; 0x2c
   19cc4:	bne	1b18c <main@@Base+0x7de8>
   19cc8:	add	r1, r2, #1
   19ccc:	sub	r0, r5, r1
   19cd0:	cmp	r0, #2
   19cd4:	blt	19d04 <main@@Base+0x6960>
   19cd8:	ldrb	r0, [r1]
   19cdc:	cmp	r0, #32
   19ce0:	bls	19cf4 <main@@Base+0x6950>
   19ce4:	mov	r2, r1
   19ce8:	cmp	r2, r5
   19cec:	bne	19d1c <main@@Base+0x6978>
   19cf0:	b	1b1d8 <main@@Base+0x7e34>
   19cf4:	bne	19d04 <main@@Base+0x6960>
   19cf8:	ldrb	r0, [r2, #2]!
   19cfc:	cmp	r0, #32
   19d00:	bhi	19d14 <main@@Base+0x6970>
   19d04:	mov	r0, r8
   19d08:	mov	r2, r5
   19d0c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19d10:	mov	r2, r0
   19d14:	cmp	r2, r5
   19d18:	beq	1b1d8 <main@@Base+0x7e34>
   19d1c:	ldrb	r0, [r2]
   19d20:	cmp	r0, #93	; 0x5d
   19d24:	bne	19c24 <main@@Base+0x6880>
   19d28:	b	1b19c <main@@Base+0x7df8>
   19d2c:	ldrdeq	lr, [r2], -r4
   19d30:	ldr	r5, [sp, #44]	; 0x2c
   19d34:	ldr	r8, [sp, #40]	; 0x28
   19d38:	bne	19d48 <main@@Base+0x69a4>
   19d3c:	ldrb	r0, [r4, #2]!
   19d40:	cmp	r0, #32
   19d44:	bhi	19d58 <main@@Base+0x69b4>
   19d48:	mov	r0, r8
   19d4c:	mov	r2, r5
   19d50:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19d54:	mov	r4, r0
   19d58:	cmp	sl, r4
   19d5c:	beq	15830 <main@@Base+0x248c>
   19d60:	ldr	r0, [r8]
   19d64:	mov	r1, #8
   19d68:	mov	r2, #8
   19d6c:	mvn	r3, #-536870912	; 0xe0000000
   19d70:	bl	2b840 <flatcc_builder_start_vector@@Base>
   19d74:	cmp	r0, #0
   19d78:	bne	1346c <main@@Base+0xc8>
   19d7c:	cmp	r4, r5
   19d80:	beq	19dc0 <main@@Base+0x6a1c>
   19d84:	ldrb	r0, [r4]
   19d88:	cmp	r0, #91	; 0x5b
   19d8c:	bne	19dc0 <main@@Base+0x6a1c>
   19d90:	add	r1, r4, #1
   19d94:	sub	r0, r5, r1
   19d98:	cmp	r0, #2
   19d9c:	blt	1ad04 <main@@Base+0x7960>
   19da0:	ldrb	r0, [r1]
   19da4:	cmp	r0, #32
   19da8:	bls	1acec <main@@Base+0x7948>
   19dac:	ldr	r5, [sp, #44]	; 0x2c
   19db0:	mov	r4, r1
   19db4:	cmp	r4, r5
   19db8:	bne	1ad1c <main@@Base+0x7978>
   19dbc:	b	1ad80 <main@@Base+0x79dc>
   19dc0:	mov	r0, r8
   19dc4:	mov	r1, r4
   19dc8:	mov	r2, r5
   19dcc:	mov	r3, #22
   19dd0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   19dd4:	ldr	sl, [sp, #36]	; 0x24
   19dd8:	mov	r4, r0
   19ddc:	ldr	r0, [r8]
   19de0:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   19de4:	cmp	r0, #0
   19de8:	str	r0, [sp, #52]	; 0x34
   19dec:	beq	1346c <main@@Base+0xc8>
   19df0:	ldr	r0, [r8]
   19df4:	mov	r1, #32
   19df8:	b	15f2c <main@@Base+0x2b88>
   19dfc:	ldr	r5, [sp, #44]	; 0x2c
   19e00:	ldr	r8, [sp, #40]	; 0x28
   19e04:	ldr	sl, [sp, #36]	; 0x24
   19e08:	bne	19e18 <main@@Base+0x6a74>
   19e0c:	ldrb	r0, [r4, #2]!
   19e10:	cmp	r0, #32
   19e14:	bhi	19e28 <main@@Base+0x6a84>
   19e18:	mov	r0, r8
   19e1c:	mov	r2, r5
   19e20:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19e24:	mov	r4, r0
   19e28:	cmp	r7, r4
   19e2c:	beq	1abfc <main@@Base+0x7858>
   19e30:	cmp	r4, r5
   19e34:	beq	19e94 <main@@Base+0x6af0>
   19e38:	ldrb	r0, [r4]
   19e3c:	cmp	r0, #91	; 0x5b
   19e40:	bne	19e94 <main@@Base+0x6af0>
   19e44:	ldr	r0, [r8]
   19e48:	mov	r1, #1
   19e4c:	mov	r2, #1
   19e50:	mvn	r3, #0
   19e54:	bl	2b840 <flatcc_builder_start_vector@@Base>
   19e58:	cmp	r0, #0
   19e5c:	bne	1d614 <main@@Base+0xa270>
   19e60:	ldrb	r0, [r4]
   19e64:	cmp	r0, #91	; 0x5b
   19e68:	bne	19ee0 <main@@Base+0x6b3c>
   19e6c:	ldr	r0, [sp, #44]	; 0x2c
   19e70:	add	r1, r4, #1
   19e74:	sub	r0, r0, r1
   19e78:	cmp	r0, #2
   19e7c:	blt	1ce88 <main@@Base+0x9ae4>
   19e80:	ldrb	r0, [r1]
   19e84:	cmp	r0, #32
   19e88:	bls	1ce78 <main@@Base+0x9ad4>
   19e8c:	mov	r4, r1
   19e90:	b	1ce98 <main@@Base+0x9af4>
   19e94:	ldr	r0, [r8]
   19e98:	mov	r1, #0
   19e9c:	mov	r2, #0
   19ea0:	mov	r3, #0
   19ea4:	bl	2a774 <flatcc_builder_start_buffer@@Base>
   19ea8:	cmp	r0, #0
   19eac:	bne	1346c <main@@Base+0xc8>
   19eb0:	mov	r0, r8
   19eb4:	mov	r1, r4
   19eb8:	mov	r2, r5
   19ebc:	add	r3, sp, #52	; 0x34
   19ec0:	bl	1342c <main@@Base+0x88>
   19ec4:	ldr	r1, [sp, #52]	; 0x34
   19ec8:	mov	r4, r0
   19ecc:	cmp	r1, #0
   19ed0:	beq	1346c <main@@Base+0xc8>
   19ed4:	ldr	r0, [r8]
   19ed8:	bl	2a974 <flatcc_builder_end_buffer@@Base>
   19edc:	b	1d3e8 <main@@Base+0xa044>
   19ee0:	ldr	r0, [sp, #40]	; 0x28
   19ee4:	ldr	r2, [sp, #44]	; 0x2c
   19ee8:	mov	r1, r4
   19eec:	mov	r3, #22
   19ef0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   19ef4:	b	1d3d4 <main@@Base+0xa030>
   19ef8:	andeq	lr, r2, ip, lsl r2
   19efc:	ldr	r5, [sp, #44]	; 0x2c
   19f00:	ldr	r8, [sp, #40]	; 0x28
   19f04:	bne	19f14 <main@@Base+0x6b70>
   19f08:	ldrb	r0, [r4, #2]!
   19f0c:	cmp	r0, #32
   19f10:	bhi	19f24 <main@@Base+0x6b80>
   19f14:	mov	r0, r8
   19f18:	mov	r2, r5
   19f1c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19f20:	mov	r4, r0
   19f24:	cmp	r4, r5
   19f28:	beq	19f94 <main@@Base+0x6bf0>
   19f2c:	ldrb	r0, [r4]
   19f30:	cmp	r0, #93	; 0x5d
   19f34:	bne	19f8c <main@@Base+0x6be8>
   19f38:	ldr	r5, [sp, #44]	; 0x2c
   19f3c:	ldr	r8, [sp, #40]	; 0x28
   19f40:	ldr	sl, [sp, #36]	; 0x24
   19f44:	add	r1, r4, #1
   19f48:	sub	r0, r5, r1
   19f4c:	cmp	r0, #2
   19f50:	blt	19f7c <main@@Base+0x6bd8>
   19f54:	ldrb	r0, [r1]
   19f58:	cmp	r0, #32
   19f5c:	bhi	1b3f0 <main@@Base+0x804c>
   19f60:	ldr	r5, [sp, #44]	; 0x2c
   19f64:	ldr	r8, [sp, #40]	; 0x28
   19f68:	ldr	sl, [sp, #36]	; 0x24
   19f6c:	bne	19f7c <main@@Base+0x6bd8>
   19f70:	ldrb	r0, [r4, #2]!
   19f74:	cmp	r0, #32
   19f78:	bhi	195d4 <main@@Base+0x6230>
   19f7c:	mov	r0, r8
   19f80:	mov	r2, r5
   19f84:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   19f88:	b	195d0 <main@@Base+0x622c>
   19f8c:	ldr	r8, [sp, #40]	; 0x28
   19f90:	mov	r5, r4
   19f94:	mov	r0, #0
   19f98:	mov	r1, #1
   19f9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19fa0:	ldr	r0, [r8]
   19fa4:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   19fa8:	cmp	r0, #0
   19fac:	beq	1d5e4 <main@@Base+0xa240>
   19fb0:	mov	r4, r5
   19fb4:	ldr	r5, [sp, #44]	; 0x2c
   19fb8:	ldr	r8, [sp, #40]	; 0x28
   19fbc:	mov	r7, r0
   19fc0:	mov	r6, #0
   19fc4:	cmp	r4, r5
   19fc8:	str	r6, [fp, #-52]	; 0xffffffcc
   19fcc:	str	r6, [fp, #-56]	; 0xffffffc8
   19fd0:	strb	r6, [fp, #-60]	; 0xffffffc4
   19fd4:	str	r6, [sp, #56]	; 0x38
   19fd8:	beq	1a020 <main@@Base+0x6c7c>
   19fdc:	sub	r0, fp, #56	; 0x38
   19fe0:	mov	r1, r4
   19fe4:	mov	r2, r5
   19fe8:	add	r3, sp, #56	; 0x38
   19fec:	str	r0, [sp]
   19ff0:	mov	r0, r8
   19ff4:	bl	31418 <flatcc_json_parser_integer@@Base>
   19ff8:	cmp	r0, r4
   19ffc:	beq	1a030 <main@@Base+0x6c8c>
   1a000:	mov	r1, r0
   1a004:	ldr	r0, [sp, #56]	; 0x38
   1a008:	cmp	r0, #0
   1a00c:	beq	1a040 <main@@Base+0x6c9c>
   1a010:	mov	r0, r8
   1a014:	mov	r2, r5
   1a018:	mov	r3, #8
   1a01c:	b	1a068 <main@@Base+0x6cc4>
   1a020:	mov	r1, r5
   1a024:	cmp	r4, r1
   1a028:	bne	1a0b0 <main@@Base+0x6d0c>
   1a02c:	b	1a078 <main@@Base+0x6cd4>
   1a030:	mov	r1, r4
   1a034:	cmp	r4, r1
   1a038:	bne	1a0b0 <main@@Base+0x6d0c>
   1a03c:	b	1a078 <main@@Base+0x6cd4>
   1a040:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a044:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a048:	subs	r3, r0, #256	; 0x100
   1a04c:	sbcs	r2, r2, #0
   1a050:	bcc	1a198 <main@@Base+0x6df4>
   1a054:	ldr	r8, [sp, #40]	; 0x28
   1a058:	ldr	r5, [sp, #44]	; 0x2c
   1a05c:	mov	r3, #7
   1a060:	mov	r0, r8
   1a064:	mov	r2, r5
   1a068:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1a06c:	mov	r1, r0
   1a070:	cmp	r4, r1
   1a074:	bne	1a0b0 <main@@Base+0x6d0c>
   1a078:	sub	r0, fp, #60	; 0x3c
   1a07c:	mov	r1, r4
   1a080:	mov	r2, r5
   1a084:	str	r0, [sp]
   1a088:	mov	r0, r8
   1a08c:	ldr	r3, [pc, #4084]	; 1b088 <main@@Base+0x7ce4>
   1a090:	add	r3, pc, r3
   1a094:	bl	1ed84 <main@@Base+0xb9e0>
   1a098:	mov	r1, r0
   1a09c:	cmp	r0, r4
   1a0a0:	beq	1d5f0 <main@@Base+0xa24c>
   1a0a4:	cmp	r1, r5
   1a0a8:	beq	1d5f0 <main@@Base+0xa24c>
   1a0ac:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1a0b0:	sub	r0, r5, r1
   1a0b4:	strb	r6, [r7]
   1a0b8:	cmp	r0, #2
   1a0bc:	blt	1a0f0 <main@@Base+0x6d4c>
   1a0c0:	ldrb	r0, [r1]
   1a0c4:	cmp	r0, #32
   1a0c8:	bls	1a0dc <main@@Base+0x6d38>
   1a0cc:	mov	r4, r1
   1a0d0:	cmp	r4, r5
   1a0d4:	bne	1a108 <main@@Base+0x6d64>
   1a0d8:	b	1b1d0 <main@@Base+0x7e2c>
   1a0dc:	bne	1a0f0 <main@@Base+0x6d4c>
   1a0e0:	mov	r4, r1
   1a0e4:	ldrb	r0, [r4, #1]!
   1a0e8:	cmp	r0, #32
   1a0ec:	bhi	1a100 <main@@Base+0x6d5c>
   1a0f0:	mov	r0, r8
   1a0f4:	mov	r2, r5
   1a0f8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a0fc:	mov	r4, r0
   1a100:	cmp	r4, r5
   1a104:	beq	1b1d0 <main@@Base+0x7e2c>
   1a108:	ldrb	r0, [r4]
   1a10c:	cmp	r0, #44	; 0x2c
   1a110:	bne	1b1e4 <main@@Base+0x7e40>
   1a114:	add	r1, r4, #1
   1a118:	sub	r0, r5, r1
   1a11c:	cmp	r0, #2
   1a120:	blt	1a150 <main@@Base+0x6dac>
   1a124:	ldrb	r0, [r1]
   1a128:	cmp	r0, #32
   1a12c:	bls	1a140 <main@@Base+0x6d9c>
   1a130:	mov	r4, r1
   1a134:	cmp	r4, r5
   1a138:	bne	1a168 <main@@Base+0x6dc4>
   1a13c:	b	1b204 <main@@Base+0x7e60>
   1a140:	bne	1a150 <main@@Base+0x6dac>
   1a144:	ldrb	r0, [r4, #2]!
   1a148:	cmp	r0, #32
   1a14c:	bhi	1a160 <main@@Base+0x6dbc>
   1a150:	mov	r0, r8
   1a154:	mov	r2, r5
   1a158:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a15c:	mov	r4, r0
   1a160:	cmp	r4, r5
   1a164:	beq	1b204 <main@@Base+0x7e60>
   1a168:	ldrb	r0, [r4]
   1a16c:	cmp	r0, #93	; 0x5d
   1a170:	beq	1b3d4 <main@@Base+0x8030>
   1a174:	mov	r0, #0
   1a178:	mov	r1, #1
   1a17c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a180:	ldr	r0, [r8]
   1a184:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1a188:	mov	r7, r0
   1a18c:	cmp	r0, #0
   1a190:	bne	19fc0 <main@@Base+0x6c1c>
   1a194:	b	1346c <main@@Base+0xc8>
   1a198:	ldr	r5, [sp, #44]	; 0x2c
   1a19c:	ldr	r8, [sp, #40]	; 0x28
   1a1a0:	mov	r6, r0
   1a1a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a1a8:	cmp	r4, r1
   1a1ac:	bne	1a0b0 <main@@Base+0x6d0c>
   1a1b0:	b	1a078 <main@@Base+0x6cd4>
   1a1b4:	ldr	r8, [sp, #40]	; 0x28
   1a1b8:	ldr	r5, [sp, #44]	; 0x2c
   1a1bc:	mov	r1, r4
   1a1c0:	mov	r3, #9
   1a1c4:	mov	r0, r8
   1a1c8:	mov	r2, r5
   1a1cc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1a1d0:	ldr	sl, [sp, #36]	; 0x24
   1a1d4:	b	16d18 <main@@Base+0x3974>
   1a1d8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1a1dc:	ldr	r5, [sp, #44]	; 0x2c
   1a1e0:	ldr	r8, [sp, #40]	; 0x28
   1a1e4:	str	r6, [fp, #-60]	; 0xffffffc4
   1a1e8:	b	196c4 <main@@Base+0x6320>
   1a1ec:	ldr	r5, [sp, #44]	; 0x2c
   1a1f0:	ldr	r8, [sp, #40]	; 0x28
   1a1f4:	bne	1a204 <main@@Base+0x6e60>
   1a1f8:	ldrb	r0, [r4, #2]!
   1a1fc:	cmp	r0, #32
   1a200:	bhi	1a214 <main@@Base+0x6e70>
   1a204:	mov	r0, r8
   1a208:	mov	r2, r5
   1a20c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a210:	mov	r4, r0
   1a214:	cmp	r4, r5
   1a218:	mov	r2, r5
   1a21c:	beq	1a278 <main@@Base+0x6ed4>
   1a220:	ldrb	r0, [r4]
   1a224:	cmp	r0, #93	; 0x5d
   1a228:	bne	1a274 <main@@Base+0x6ed0>
   1a22c:	ldr	r5, [sp, #44]	; 0x2c
   1a230:	ldr	r8, [sp, #40]	; 0x28
   1a234:	ldr	sl, [sp, #36]	; 0x24
   1a238:	add	r1, r4, #1
   1a23c:	sub	r0, r5, r1
   1a240:	cmp	r0, #2
   1a244:	blt	1d424 <main@@Base+0xa080>
   1a248:	ldrb	r0, [r1]
   1a24c:	cmp	r0, #32
   1a250:	bhi	1c3a8 <main@@Base+0x9004>
   1a254:	ldr	r5, [sp, #44]	; 0x2c
   1a258:	ldr	r8, [sp, #40]	; 0x28
   1a25c:	ldr	sl, [sp, #36]	; 0x24
   1a260:	bne	1d424 <main@@Base+0xa080>
   1a264:	ldrb	r0, [r4, #2]!
   1a268:	cmp	r0, #32
   1a26c:	bhi	19924 <main@@Base+0x6580>
   1a270:	b	1d424 <main@@Base+0xa080>
   1a274:	mov	r2, r4
   1a278:	ldr	r5, [sp, #44]	; 0x2c
   1a27c:	ldr	r8, [sp, #40]	; 0x28
   1a280:	mov	r1, r2
   1a284:	mov	r0, r8
   1a288:	mov	r2, r5
   1a28c:	add	r3, sp, #52	; 0x34
   1a290:	bl	319ac <flatcc_json_parser_build_string@@Base>
   1a294:	mov	r4, r0
   1a298:	ldr	r0, [sp, #52]	; 0x34
   1a29c:	cmp	r0, #0
   1a2a0:	beq	1346c <main@@Base+0xc8>
   1a2a4:	ldr	r0, [r8]
   1a2a8:	mov	r1, #1
   1a2ac:	bl	2b024 <flatcc_builder_extend_offset_vector@@Base>
   1a2b0:	cmp	r0, #0
   1a2b4:	beq	1346c <main@@Base+0xc8>
   1a2b8:	ldr	r1, [sp, #52]	; 0x34
   1a2bc:	str	r1, [r0]
   1a2c0:	sub	r0, r5, r4
   1a2c4:	cmp	r0, #2
   1a2c8:	blt	1a2fc <main@@Base+0x6f58>
   1a2cc:	ldrb	r0, [r4]
   1a2d0:	cmp	r0, #32
   1a2d4:	bls	1a2e8 <main@@Base+0x6f44>
   1a2d8:	mov	r2, r4
   1a2dc:	cmp	r2, r5
   1a2e0:	bne	1a318 <main@@Base+0x6f74>
   1a2e4:	b	1ba14 <main@@Base+0x8670>
   1a2e8:	bne	1a2fc <main@@Base+0x6f58>
   1a2ec:	mov	r2, r4
   1a2f0:	ldrb	r0, [r2, #1]!
   1a2f4:	cmp	r0, #32
   1a2f8:	bhi	1a310 <main@@Base+0x6f6c>
   1a2fc:	mov	r0, r8
   1a300:	mov	r1, r4
   1a304:	mov	r2, r5
   1a308:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a30c:	mov	r2, r0
   1a310:	cmp	r2, r5
   1a314:	beq	1ba14 <main@@Base+0x8670>
   1a318:	ldrb	r0, [r2]
   1a31c:	cmp	r0, #44	; 0x2c
   1a320:	bne	1c378 <main@@Base+0x8fd4>
   1a324:	add	r1, r2, #1
   1a328:	sub	r0, r5, r1
   1a32c:	cmp	r0, #2
   1a330:	blt	1a360 <main@@Base+0x6fbc>
   1a334:	ldrb	r0, [r1]
   1a338:	cmp	r0, #32
   1a33c:	bls	1a350 <main@@Base+0x6fac>
   1a340:	mov	r2, r1
   1a344:	cmp	r2, r5
   1a348:	bne	1a378 <main@@Base+0x6fd4>
   1a34c:	b	1c3e8 <main@@Base+0x9044>
   1a350:	bne	1a360 <main@@Base+0x6fbc>
   1a354:	ldrb	r0, [r2, #2]!
   1a358:	cmp	r0, #32
   1a35c:	bhi	1a370 <main@@Base+0x6fcc>
   1a360:	mov	r0, r8
   1a364:	mov	r2, r5
   1a368:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a36c:	mov	r2, r0
   1a370:	cmp	r2, r5
   1a374:	beq	1c3e8 <main@@Base+0x9044>
   1a378:	ldrb	r0, [r2]
   1a37c:	cmp	r0, #93	; 0x5d
   1a380:	bne	1a280 <main@@Base+0x6edc>
   1a384:	b	1c388 <main@@Base+0x8fe4>
   1a388:	ldr	sl, [sp, #36]	; 0x24
   1a38c:	mov	r4, r5
   1a390:	b	18a08 <main@@Base+0x5664>
   1a394:	ldr	r5, [sp, #44]	; 0x2c
   1a398:	ldr	r8, [sp, #40]	; 0x28
   1a39c:	ldr	sl, [sp, #36]	; 0x24
   1a3a0:	bne	1a3b4 <main@@Base+0x7010>
   1a3a4:	ldrb	r0, [r2, #2]!
   1a3a8:	cmp	r0, #32
   1a3ac:	mov	r4, r2
   1a3b0:	bhi	1b880 <main@@Base+0x84dc>
   1a3b4:	mov	r0, r8
   1a3b8:	mov	r2, r5
   1a3bc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a3c0:	b	1b87c <main@@Base+0x84d8>
   1a3c4:	cmp	r0, #93	; 0x5d
   1a3c8:	bne	1c3bc <main@@Base+0x9018>
   1a3cc:	ldr	r5, [sp, #44]	; 0x2c
   1a3d0:	ldr	r8, [sp, #40]	; 0x28
   1a3d4:	add	r1, r2, #1
   1a3d8:	sub	r0, r5, r1
   1a3dc:	cmp	r0, #2
   1a3e0:	ldr	sl, [sp, #36]	; 0x24
   1a3e4:	blt	1d124 <main@@Base+0x9d80>
   1a3e8:	ldrb	r0, [r1]
   1a3ec:	cmp	r0, #32
   1a3f0:	bls	1d104 <main@@Base+0x9d60>
   1a3f4:	ldr	r5, [sp, #44]	; 0x2c
   1a3f8:	ldr	r8, [sp, #40]	; 0x28
   1a3fc:	ldr	sl, [sp, #36]	; 0x24
   1a400:	mov	r4, r1
   1a404:	b	18a08 <main@@Base+0x5664>
   1a408:	mov	r0, r8
   1a40c:	mov	r1, r5
   1a410:	b	1c3cc <main@@Base+0x9028>
   1a414:	ldr	r5, [sp, #44]	; 0x2c
   1a418:	ldr	r8, [sp, #40]	; 0x28
   1a41c:	bne	1a42c <main@@Base+0x7088>
   1a420:	ldrb	r0, [r4, #2]!
   1a424:	cmp	r0, #32
   1a428:	bhi	1a43c <main@@Base+0x7098>
   1a42c:	mov	r0, r8
   1a430:	mov	r2, r5
   1a434:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a438:	mov	r4, r0
   1a43c:	cmp	r4, r5
   1a440:	mov	r2, r5
   1a444:	beq	1a4a0 <main@@Base+0x70fc>
   1a448:	ldrb	r0, [r4]
   1a44c:	cmp	r0, #125	; 0x7d
   1a450:	bne	1a49c <main@@Base+0x70f8>
   1a454:	ldr	r5, [sp, #44]	; 0x2c
   1a458:	ldr	r8, [sp, #40]	; 0x28
   1a45c:	ldr	sl, [sp, #36]	; 0x24
   1a460:	add	r1, r4, #1
   1a464:	sub	r0, r5, r1
   1a468:	cmp	r0, #2
   1a46c:	blt	1d398 <main@@Base+0x9ff4>
   1a470:	ldrb	r0, [r1]
   1a474:	cmp	r0, #32
   1a478:	bhi	1b640 <main@@Base+0x829c>
   1a47c:	ldr	r5, [sp, #44]	; 0x2c
   1a480:	ldr	r8, [sp, #40]	; 0x28
   1a484:	ldr	sl, [sp, #36]	; 0x24
   1a488:	bne	1d398 <main@@Base+0x9ff4>
   1a48c:	ldrb	r0, [r4, #2]!
   1a490:	cmp	r0, #32
   1a494:	bhi	188a8 <main@@Base+0x5504>
   1a498:	b	1d398 <main@@Base+0x9ff4>
   1a49c:	mov	r2, r4
   1a4a0:	ldr	r5, [sp, #44]	; 0x2c
   1a4a4:	ldr	r8, [sp, #40]	; 0x28
   1a4a8:	cmp	r2, r5
   1a4ac:	mov	r9, r5
   1a4b0:	beq	1a504 <main@@Base+0x7160>
   1a4b4:	ldrb	r0, [r2]
   1a4b8:	cmp	r0, #46	; 0x2e
   1a4bc:	beq	1a4d8 <main@@Base+0x7134>
   1a4c0:	cmp	r0, #34	; 0x22
   1a4c4:	bne	1a4f4 <main@@Base+0x7150>
   1a4c8:	ldr	r0, [sp, #32]
   1a4cc:	mov	r1, #0
   1a4d0:	add	r9, r2, #1
   1a4d4:	b	1a500 <main@@Base+0x715c>
   1a4d8:	mov	r1, r2
   1a4dc:	mov	r0, r8
   1a4e0:	mov	r2, r5
   1a4e4:	mov	r3, #5
   1a4e8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1a4ec:	mov	r9, r0
   1a4f0:	b	1a504 <main@@Base+0x7160>
   1a4f4:	ldr	r0, [sp, #32]
   1a4f8:	mov	r1, #1
   1a4fc:	mov	r9, r2
   1a500:	str	r1, [r0]
   1a504:	sub	lr, r5, r9
   1a508:	mov	r1, #8
   1a50c:	cmp	lr, #8
   1a510:	movcc	r1, lr
   1a514:	and	r1, r1, #15
   1a518:	sub	r2, r1, #1
   1a51c:	cmp	r2, #7
   1a520:	bhi	1a6a8 <main@@Base+0x7304>
   1a524:	add	r0, pc, #36	; 0x24
   1a528:	mov	r1, #0
   1a52c:	mov	ip, #0
   1a530:	mov	r8, #0
   1a534:	mov	r7, #0
   1a538:	mov	r3, #0
   1a53c:	mov	r6, #0
   1a540:	mov	r4, #0
   1a544:	ldr	r5, [r0, r2, lsl #2]
   1a548:	mov	r2, #0
   1a54c:	add	pc, r0, r5
   1a550:	andeq	r0, r0, r4, rrx
   1a554:	andeq	r0, r0, ip, asr r0
   1a558:	andeq	r0, r0, r4, asr r0
   1a55c:	andeq	r0, r0, ip, asr #32
   1a560:	andeq	r0, r0, r0, asr #32
   1a564:	andeq	r0, r0, r4, lsr r0
   1a568:	andeq	r0, r0, r4, lsr #32
   1a56c:	andeq	r0, r0, r0, lsr #32
   1a570:	ldrb	ip, [r9, #7]
   1a574:	ldrb	r0, [r9, #6]
   1a578:	mov	r8, r1
   1a57c:	orr	r0, ip, r0, lsl #8
   1a580:	mov	r1, r0
   1a584:	ldrb	r0, [r9, #5]
   1a588:	mov	r7, r8
   1a58c:	orr	r1, r1, r0, lsl #16
   1a590:	ldrb	r0, [r9, #4]
   1a594:	mov	r3, r7
   1a598:	orr	r1, r1, r0, lsl #24
   1a59c:	ldrb	r0, [r9, #3]
   1a5a0:	orr	r6, r0, r3
   1a5a4:	ldrb	r0, [r9, #2]
   1a5a8:	orr	r4, r6, r0, lsl #8
   1a5ac:	ldrb	r0, [r9, #1]
   1a5b0:	orr	r2, r4, r0, lsl #16
   1a5b4:	ldrb	r0, [r9]
   1a5b8:	orr	r2, r2, r0, lsl #24
   1a5bc:	movw	r0, #0
   1a5c0:	movt	r0, #25956	; 0x6564
   1a5c4:	subs	r0, r1, r0
   1a5c8:	movw	r0, #29556	; 0x7374
   1a5cc:	movt	r0, #28261	; 0x6e65
   1a5d0:	sbcs	r0, r2, r0
   1a5d4:	bcs	1a638 <main@@Base+0x7294>
   1a5d8:	ldr	r5, [sp, #44]	; 0x2c
   1a5dc:	ldr	r8, [sp, #40]	; 0x28
   1a5e0:	movw	r0, #29793	; 0x7461
   1a5e4:	movt	r0, #25697	; 0x6461
   1a5e8:	teq	r2, r0
   1a5ec:	bne	1a6a8 <main@@Base+0x7304>
   1a5f0:	cmp	lr, #5
   1a5f4:	mov	r1, r9
   1a5f8:	blt	1a974 <main@@Base+0x75d0>
   1a5fc:	ldr	r1, [sp, #32]
   1a600:	mov	r2, r9
   1a604:	ldrb	r0, [r2, #4]!
   1a608:	ldr	r1, [r1]
   1a60c:	cmp	r1, #0
   1a610:	beq	1a724 <main@@Base+0x7380>
   1a614:	cmp	r0, #33	; 0x21
   1a618:	bcc	1a628 <main@@Base+0x7284>
   1a61c:	cmp	r0, #58	; 0x3a
   1a620:	mov	r1, r9
   1a624:	bne	1a974 <main@@Base+0x75d0>
   1a628:	ldr	r0, [sp, #32]
   1a62c:	mov	r1, #0
   1a630:	str	r1, [r0]
   1a634:	b	1a734 <main@@Base+0x7390>
   1a638:	movw	r0, #29292	; 0x726c
   1a63c:	lsr	r3, r1, #8
   1a640:	movw	r7, #29793	; 0x7461
   1a644:	movt	r0, #117	; 0x75
   1a648:	orr	r3, r3, r2, lsl #24
   1a64c:	movt	r7, #25697	; 0x6461
   1a650:	eor	r0, r0, r2, lsr #8
   1a654:	eor	r3, r3, r7
   1a658:	orrs	r0, r3, r0
   1a65c:	bne	1a6b8 <main@@Base+0x7314>
   1a660:	cmp	lr, #8
   1a664:	mov	r1, r9
   1a668:	blt	1a9d4 <main@@Base+0x7630>
   1a66c:	ldr	r1, [sp, #32]
   1a670:	mov	r2, r9
   1a674:	ldrb	r0, [r2, #7]!
   1a678:	ldr	r1, [r1]
   1a67c:	cmp	r1, #0
   1a680:	beq	1a758 <main@@Base+0x73b4>
   1a684:	cmp	r0, #33	; 0x21
   1a688:	bcc	1a698 <main@@Base+0x72f4>
   1a68c:	cmp	r0, #58	; 0x3a
   1a690:	mov	r1, r9
   1a694:	bne	1a9d4 <main@@Base+0x7630>
   1a698:	ldr	r0, [sp, #32]
   1a69c:	mov	r1, #0
   1a6a0:	str	r1, [r0]
   1a6a4:	b	1a768 <main@@Base+0x73c4>
   1a6a8:	mov	r0, r8
   1a6ac:	mov	r1, r9
   1a6b0:	b	1aaa0 <main@@Base+0x76fc>
   1a6b4:	andeq	sp, r2, r8, ror #20
   1a6b8:	movw	r0, #29556	; 0x7374
   1a6bc:	bfc	r1, #0, #16
   1a6c0:	movt	r0, #28261	; 0x6e65
   1a6c4:	eor	r0, r2, r0
   1a6c8:	movw	r2, #0
   1a6cc:	movt	r2, #25956	; 0x6564
   1a6d0:	eor	r1, r1, r2
   1a6d4:	orrs	r0, r1, r0
   1a6d8:	bne	1aa90 <main@@Base+0x76ec>
   1a6dc:	cmp	lr, #7
   1a6e0:	mov	r1, r9
   1a6e4:	blt	1aa34 <main@@Base+0x7690>
   1a6e8:	ldr	r1, [sp, #32]
   1a6ec:	mov	r2, r9
   1a6f0:	ldrb	r0, [r2, #6]!
   1a6f4:	ldr	r1, [r1]
   1a6f8:	cmp	r1, #0
   1a6fc:	beq	1a78c <main@@Base+0x73e8>
   1a700:	cmp	r0, #33	; 0x21
   1a704:	bcc	1a714 <main@@Base+0x7370>
   1a708:	cmp	r0, #58	; 0x3a
   1a70c:	mov	r1, r9
   1a710:	bne	1aa34 <main@@Base+0x7690>
   1a714:	ldr	r0, [sp, #32]
   1a718:	mov	r1, #0
   1a71c:	str	r1, [r0]
   1a720:	b	1a79c <main@@Base+0x73f8>
   1a724:	cmp	r0, #34	; 0x22
   1a728:	mov	r1, r9
   1a72c:	bne	1a974 <main@@Base+0x75d0>
   1a730:	add	r2, r9, #5
   1a734:	ldr	r0, [sp, #44]	; 0x2c
   1a738:	sub	r0, r0, r2
   1a73c:	cmp	r0, #2
   1a740:	blt	1a7d8 <main@@Base+0x7434>
   1a744:	ldrb	r0, [r2]
   1a748:	cmp	r0, #32
   1a74c:	bls	1a7c4 <main@@Base+0x7420>
   1a750:	mov	r1, r2
   1a754:	b	1a7ec <main@@Base+0x7448>
   1a758:	cmp	r0, #34	; 0x22
   1a75c:	mov	r1, r9
   1a760:	bne	1a9d4 <main@@Base+0x7630>
   1a764:	add	r2, r9, #8
   1a768:	ldr	r0, [sp, #44]	; 0x2c
   1a76c:	sub	r0, r0, r2
   1a770:	cmp	r0, #2
   1a774:	blt	1a85c <main@@Base+0x74b8>
   1a778:	ldrb	r0, [r2]
   1a77c:	cmp	r0, #32
   1a780:	bls	1a848 <main@@Base+0x74a4>
   1a784:	mov	r1, r2
   1a788:	b	1a870 <main@@Base+0x74cc>
   1a78c:	cmp	r0, #34	; 0x22
   1a790:	mov	r1, r9
   1a794:	bne	1aa34 <main@@Base+0x7690>
   1a798:	add	r2, r9, #7
   1a79c:	ldr	r0, [sp, #44]	; 0x2c
   1a7a0:	sub	r0, r0, r2
   1a7a4:	cmp	r0, #2
   1a7a8:	blt	1a8e0 <main@@Base+0x753c>
   1a7ac:	ldrb	r0, [r2]
   1a7b0:	cmp	r0, #32
   1a7b4:	bls	1a8cc <main@@Base+0x7528>
   1a7b8:	mov	r1, r2
   1a7bc:	b	1a8f4 <main@@Base+0x7550>
   1a7c0:	andeq	sp, r2, r4, asr #18
   1a7c4:	bne	1a7d8 <main@@Base+0x7434>
   1a7c8:	mov	r1, r2
   1a7cc:	ldrb	r0, [r1, #1]!
   1a7d0:	cmp	r0, #32
   1a7d4:	bhi	1a7ec <main@@Base+0x7448>
   1a7d8:	mov	r1, r2
   1a7dc:	ldr	r0, [sp, #40]	; 0x28
   1a7e0:	ldr	r2, [sp, #44]	; 0x2c
   1a7e4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a7e8:	mov	r1, r0
   1a7ec:	ldr	r0, [sp, #44]	; 0x2c
   1a7f0:	cmp	r1, r0
   1a7f4:	beq	1a834 <main@@Base+0x7490>
   1a7f8:	ldrb	r0, [r1]
   1a7fc:	cmp	r0, #58	; 0x3a
   1a800:	bne	1a834 <main@@Base+0x7490>
   1a804:	ldr	r0, [sp, #44]	; 0x2c
   1a808:	add	r2, r1, #1
   1a80c:	sub	r0, r0, r2
   1a810:	cmp	r0, #2
   1a814:	blt	1a960 <main@@Base+0x75bc>
   1a818:	ldrb	r0, [r2]
   1a81c:	cmp	r0, #32
   1a820:	bls	1a950 <main@@Base+0x75ac>
   1a824:	mov	r1, r2
   1a828:	cmp	r9, r1
   1a82c:	bne	1a97c <main@@Base+0x75d8>
   1a830:	b	1aa90 <main@@Base+0x76ec>
   1a834:	ldr	r0, [sp, #40]	; 0x28
   1a838:	ldr	r2, [sp, #44]	; 0x2c
   1a83c:	mov	r3, #4
   1a840:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1a844:	b	1a970 <main@@Base+0x75cc>
   1a848:	bne	1a85c <main@@Base+0x74b8>
   1a84c:	mov	r1, r2
   1a850:	ldrb	r0, [r1, #1]!
   1a854:	cmp	r0, #32
   1a858:	bhi	1a870 <main@@Base+0x74cc>
   1a85c:	mov	r1, r2
   1a860:	ldr	r0, [sp, #40]	; 0x28
   1a864:	ldr	r2, [sp, #44]	; 0x2c
   1a868:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a86c:	mov	r1, r0
   1a870:	ldr	r0, [sp, #44]	; 0x2c
   1a874:	cmp	r1, r0
   1a878:	beq	1a8b8 <main@@Base+0x7514>
   1a87c:	ldrb	r0, [r1]
   1a880:	cmp	r0, #58	; 0x3a
   1a884:	bne	1a8b8 <main@@Base+0x7514>
   1a888:	ldr	r0, [sp, #44]	; 0x2c
   1a88c:	add	r2, r1, #1
   1a890:	sub	r0, r0, r2
   1a894:	cmp	r0, #2
   1a898:	blt	1a9c0 <main@@Base+0x761c>
   1a89c:	ldrb	r0, [r2]
   1a8a0:	cmp	r0, #32
   1a8a4:	bls	1a9b0 <main@@Base+0x760c>
   1a8a8:	mov	r1, r2
   1a8ac:	cmp	r9, r1
   1a8b0:	bne	1a9dc <main@@Base+0x7638>
   1a8b4:	b	1aa90 <main@@Base+0x76ec>
   1a8b8:	ldr	r0, [sp, #40]	; 0x28
   1a8bc:	ldr	r2, [sp, #44]	; 0x2c
   1a8c0:	mov	r3, #4
   1a8c4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1a8c8:	b	1a9d0 <main@@Base+0x762c>
   1a8cc:	bne	1a8e0 <main@@Base+0x753c>
   1a8d0:	mov	r1, r2
   1a8d4:	ldrb	r0, [r1, #1]!
   1a8d8:	cmp	r0, #32
   1a8dc:	bhi	1a8f4 <main@@Base+0x7550>
   1a8e0:	mov	r1, r2
   1a8e4:	ldr	r0, [sp, #40]	; 0x28
   1a8e8:	ldr	r2, [sp, #44]	; 0x2c
   1a8ec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a8f0:	mov	r1, r0
   1a8f4:	ldr	r0, [sp, #44]	; 0x2c
   1a8f8:	cmp	r1, r0
   1a8fc:	beq	1a93c <main@@Base+0x7598>
   1a900:	ldrb	r0, [r1]
   1a904:	cmp	r0, #58	; 0x3a
   1a908:	bne	1a93c <main@@Base+0x7598>
   1a90c:	ldr	r0, [sp, #44]	; 0x2c
   1a910:	add	r2, r1, #1
   1a914:	sub	r0, r0, r2
   1a918:	cmp	r0, #2
   1a91c:	blt	1aa20 <main@@Base+0x767c>
   1a920:	ldrb	r0, [r2]
   1a924:	cmp	r0, #32
   1a928:	bls	1aa10 <main@@Base+0x766c>
   1a92c:	mov	r1, r2
   1a930:	cmp	r9, r1
   1a934:	bne	1aa3c <main@@Base+0x7698>
   1a938:	b	1aa90 <main@@Base+0x76ec>
   1a93c:	ldr	r0, [sp, #40]	; 0x28
   1a940:	ldr	r2, [sp, #44]	; 0x2c
   1a944:	mov	r3, #4
   1a948:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1a94c:	b	1aa30 <main@@Base+0x768c>
   1a950:	bne	1a960 <main@@Base+0x75bc>
   1a954:	ldrb	r0, [r1, #2]!
   1a958:	cmp	r0, #32
   1a95c:	bhi	1a974 <main@@Base+0x75d0>
   1a960:	mov	r1, r2
   1a964:	ldr	r0, [sp, #40]	; 0x28
   1a968:	ldr	r2, [sp, #44]	; 0x2c
   1a96c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a970:	mov	r1, r0
   1a974:	cmp	r9, r1
   1a978:	beq	1aa90 <main@@Base+0x76ec>
   1a97c:	mov	r0, #0
   1a980:	ldr	r2, [sp, #44]	; 0x2c
   1a984:	sub	r3, fp, #56	; 0x38
   1a988:	str	r0, [sp]
   1a98c:	ldr	r0, [sp, #40]	; 0x28
   1a990:	bl	31588 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1a994:	mov	r4, r0
   1a998:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a99c:	cmp	r0, #0
   1a9a0:	beq	1d0f4 <main@@Base+0x9d50>
   1a9a4:	ldr	r0, [sp, #40]	; 0x28
   1a9a8:	mov	r1, #0
   1a9ac:	b	1aa6c <main@@Base+0x76c8>
   1a9b0:	bne	1a9c0 <main@@Base+0x761c>
   1a9b4:	ldrb	r0, [r1, #2]!
   1a9b8:	cmp	r0, #32
   1a9bc:	bhi	1a9d4 <main@@Base+0x7630>
   1a9c0:	mov	r1, r2
   1a9c4:	ldr	r0, [sp, #40]	; 0x28
   1a9c8:	ldr	r2, [sp, #44]	; 0x2c
   1a9cc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1a9d0:	mov	r1, r0
   1a9d4:	cmp	r9, r1
   1a9d8:	beq	1aa90 <main@@Base+0x76ec>
   1a9dc:	mov	r0, #1
   1a9e0:	ldr	r2, [sp, #44]	; 0x2c
   1a9e4:	sub	r3, fp, #56	; 0x38
   1a9e8:	str	r0, [sp]
   1a9ec:	ldr	r0, [sp, #40]	; 0x28
   1a9f0:	bl	31588 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1a9f4:	mov	r4, r0
   1a9f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a9fc:	cmp	r0, #0
   1aa00:	beq	1d0f4 <main@@Base+0x9d50>
   1aa04:	ldr	r0, [sp, #40]	; 0x28
   1aa08:	mov	r1, #1
   1aa0c:	b	1aa6c <main@@Base+0x76c8>
   1aa10:	bne	1aa20 <main@@Base+0x767c>
   1aa14:	ldrb	r0, [r1, #2]!
   1aa18:	cmp	r0, #32
   1aa1c:	bhi	1aa34 <main@@Base+0x7690>
   1aa20:	mov	r1, r2
   1aa24:	ldr	r0, [sp, #40]	; 0x28
   1aa28:	ldr	r2, [sp, #44]	; 0x2c
   1aa2c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1aa30:	mov	r1, r0
   1aa34:	cmp	r9, r1
   1aa38:	beq	1aa90 <main@@Base+0x76ec>
   1aa3c:	mov	r0, #0
   1aa40:	ldr	r2, [sp, #44]	; 0x2c
   1aa44:	sub	r3, fp, #56	; 0x38
   1aa48:	str	r0, [sp]
   1aa4c:	ldr	r0, [sp, #40]	; 0x28
   1aa50:	bl	31588 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1aa54:	mov	r4, r0
   1aa58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aa5c:	cmp	r0, #0
   1aa60:	beq	1d0f4 <main@@Base+0x9d50>
   1aa64:	ldr	r0, [sp, #40]	; 0x28
   1aa68:	mov	r1, #2
   1aa6c:	ldr	r0, [r0]
   1aa70:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   1aa74:	cmp	r0, #0
   1aa78:	beq	1d0f4 <main@@Base+0x9d50>
   1aa7c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1aa80:	str	r1, [r0]
   1aa84:	ldr	r5, [sp, #44]	; 0x2c
   1aa88:	ldr	r8, [sp, #40]	; 0x28
   1aa8c:	b	1aaac <main@@Base+0x7708>
   1aa90:	ldr	r8, [sp, #40]	; 0x28
   1aa94:	ldr	r5, [sp, #44]	; 0x2c
   1aa98:	mov	r1, r9
   1aa9c:	mov	r0, r8
   1aaa0:	mov	r2, r5
   1aaa4:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   1aaa8:	mov	r4, r0
   1aaac:	sub	r0, r5, r4
   1aab0:	cmp	r0, #2
   1aab4:	blt	1aae8 <main@@Base+0x7744>
   1aab8:	ldrb	r0, [r4]
   1aabc:	cmp	r0, #32
   1aac0:	bls	1aad4 <main@@Base+0x7730>
   1aac4:	mov	r2, r4
   1aac8:	cmp	r2, r5
   1aacc:	bne	1ab04 <main@@Base+0x7760>
   1aad0:	b	1b3f8 <main@@Base+0x8054>
   1aad4:	bne	1aae8 <main@@Base+0x7744>
   1aad8:	mov	r2, r4
   1aadc:	ldrb	r0, [r2, #1]!
   1aae0:	cmp	r0, #32
   1aae4:	bhi	1aafc <main@@Base+0x7758>
   1aae8:	mov	r0, r8
   1aaec:	mov	r1, r4
   1aaf0:	mov	r2, r5
   1aaf4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1aaf8:	mov	r2, r0
   1aafc:	cmp	r2, r5
   1ab00:	beq	1b3f8 <main@@Base+0x8054>
   1ab04:	ldrb	r0, [r2]
   1ab08:	cmp	r0, #44	; 0x2c
   1ab0c:	bne	1b610 <main@@Base+0x826c>
   1ab10:	add	r1, r2, #1
   1ab14:	sub	r0, r5, r1
   1ab18:	cmp	r0, #2
   1ab1c:	blt	1ab4c <main@@Base+0x77a8>
   1ab20:	ldrb	r0, [r1]
   1ab24:	cmp	r0, #32
   1ab28:	bls	1ab3c <main@@Base+0x7798>
   1ab2c:	mov	r2, r1
   1ab30:	cmp	r2, r5
   1ab34:	bne	1ab64 <main@@Base+0x77c0>
   1ab38:	b	1b654 <main@@Base+0x82b0>
   1ab3c:	bne	1ab4c <main@@Base+0x77a8>
   1ab40:	ldrb	r0, [r2, #2]!
   1ab44:	cmp	r0, #32
   1ab48:	bhi	1ab5c <main@@Base+0x77b8>
   1ab4c:	mov	r0, r8
   1ab50:	mov	r2, r5
   1ab54:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ab58:	mov	r2, r0
   1ab5c:	cmp	r2, r5
   1ab60:	beq	1b654 <main@@Base+0x82b0>
   1ab64:	ldrb	r0, [r2]
   1ab68:	cmp	r0, #125	; 0x7d
   1ab6c:	bne	1a4a8 <main@@Base+0x7104>
   1ab70:	b	1b620 <main@@Base+0x827c>
   1ab74:	ldr	r5, [sp, #44]	; 0x2c
   1ab78:	ldr	r8, [sp, #40]	; 0x28
   1ab7c:	ldr	sl, [sp, #36]	; 0x24
   1ab80:	bne	1ab90 <main@@Base+0x77ec>
   1ab84:	ldrb	r0, [r4, #2]!
   1ab88:	cmp	r0, #32
   1ab8c:	bhi	1aba0 <main@@Base+0x77fc>
   1ab90:	mov	r0, r8
   1ab94:	mov	r2, r5
   1ab98:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ab9c:	mov	r4, r0
   1aba0:	cmp	r7, r4
   1aba4:	beq	1abfc <main@@Base+0x7858>
   1aba8:	ldr	r0, [r8]
   1abac:	mov	r1, #8
   1abb0:	mov	r2, #8
   1abb4:	mvn	r3, #-536870912	; 0xe0000000
   1abb8:	bl	2b840 <flatcc_builder_start_vector@@Base>
   1abbc:	cmp	r0, #0
   1abc0:	bne	1d5dc <main@@Base+0xa238>
   1abc4:	cmp	r4, r5
   1abc8:	beq	1ac08 <main@@Base+0x7864>
   1abcc:	ldrb	r0, [r4]
   1abd0:	cmp	r0, #91	; 0x5b
   1abd4:	bne	1ac08 <main@@Base+0x7864>
   1abd8:	add	r1, r4, #1
   1abdc:	sub	r0, r5, r1
   1abe0:	cmp	r0, #2
   1abe4:	blt	1b414 <main@@Base+0x8070>
   1abe8:	ldrb	r0, [r1]
   1abec:	cmp	r0, #32
   1abf0:	bls	1b404 <main@@Base+0x8060>
   1abf4:	mov	r4, r1
   1abf8:	b	1b424 <main@@Base+0x8080>
   1abfc:	mov	r0, r8
   1ac00:	mov	r1, r7
   1ac04:	b	1b874 <main@@Base+0x84d0>
   1ac08:	ldr	r8, [sp, #40]	; 0x28
   1ac0c:	mov	r1, r4
   1ac10:	mov	r2, r5
   1ac14:	mov	r3, #22
   1ac18:	mov	r0, r8
   1ac1c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ac20:	mov	r4, r0
   1ac24:	ldr	r0, [r8]
   1ac28:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   1ac2c:	cmp	r0, #0
   1ac30:	str	r0, [sp, #52]	; 0x34
   1ac34:	beq	1d5d4 <main@@Base+0xa230>
   1ac38:	ldr	r0, [r8]
   1ac3c:	mov	r1, #33	; 0x21
   1ac40:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   1ac44:	cmp	r0, #0
   1ac48:	beq	1d5d4 <main@@Base+0xa230>
   1ac4c:	ldr	r1, [sp, #52]	; 0x34
   1ac50:	ldr	r5, [sp, #44]	; 0x2c
   1ac54:	str	r1, [r0]
   1ac58:	b	16728 <main@@Base+0x3384>
   1ac5c:	mov	r6, r0
   1ac60:	ldr	r5, [sp, #44]	; 0x2c
   1ac64:	ldr	r8, [sp, #40]	; 0x28
   1ac68:	str	r6, [fp, #-60]	; 0xffffffc4
   1ac6c:	ldr	sl, [sp, #36]	; 0x24
   1ac70:	cmp	r7, r4
   1ac74:	bne	1acb4 <main@@Base+0x7910>
   1ac78:	sub	r0, fp, #60	; 0x3c
   1ac7c:	mov	r1, r7
   1ac80:	mov	r2, r5
   1ac84:	str	r0, [sp]
   1ac88:	mov	r0, r8
   1ac8c:	ldr	r3, [pc, #4072]	; 1bc7c <main@@Base+0x88d8>
   1ac90:	add	r3, pc, r3
   1ac94:	bl	23444 <main@@Base+0x100a0>
   1ac98:	mov	r4, r0
   1ac9c:	cmp	r0, r7
   1aca0:	cmpne	r4, r5
   1aca4:	beq	1d614 <main@@Base+0xa270>
   1aca8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1acac:	ldr	r8, [sp, #40]	; 0x28
   1acb0:	ldr	sl, [sp, #36]	; 0x24
   1acb4:	cmp	r6, #0
   1acb8:	bne	1acc8 <main@@Base+0x7924>
   1acbc:	ldrb	r0, [r8, #8]
   1acc0:	tst	r0, #2
   1acc4:	beq	1b880 <main@@Base+0x84dc>
   1acc8:	ldr	r0, [r8]
   1accc:	mov	r1, #20
   1acd0:	mov	r2, #4
   1acd4:	mov	r3, #4
   1acd8:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   1acdc:	cmp	r0, #0
   1ace0:	beq	1d614 <main@@Base+0xa270>
   1ace4:	str	r6, [r0]
   1ace8:	b	1b880 <main@@Base+0x84dc>
   1acec:	ldr	r5, [sp, #44]	; 0x2c
   1acf0:	ldr	r8, [sp, #40]	; 0x28
   1acf4:	bne	1ad04 <main@@Base+0x7960>
   1acf8:	ldrb	r0, [r4, #2]!
   1acfc:	cmp	r0, #32
   1ad00:	bhi	1ad14 <main@@Base+0x7970>
   1ad04:	mov	r0, r8
   1ad08:	mov	r2, r5
   1ad0c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ad10:	mov	r4, r0
   1ad14:	cmp	r4, r5
   1ad18:	beq	1ad80 <main@@Base+0x79dc>
   1ad1c:	ldrb	r0, [r4]
   1ad20:	cmp	r0, #93	; 0x5d
   1ad24:	bne	1ad7c <main@@Base+0x79d8>
   1ad28:	ldr	r5, [sp, #44]	; 0x2c
   1ad2c:	ldr	r8, [sp, #40]	; 0x28
   1ad30:	ldr	sl, [sp, #36]	; 0x24
   1ad34:	add	r1, r4, #1
   1ad38:	sub	r0, r5, r1
   1ad3c:	cmp	r0, #2
   1ad40:	blt	1ad6c <main@@Base+0x79c8>
   1ad44:	ldrb	r0, [r1]
   1ad48:	cmp	r0, #32
   1ad4c:	bhi	1ce64 <main@@Base+0x9ac0>
   1ad50:	ldr	r5, [sp, #44]	; 0x2c
   1ad54:	ldr	r8, [sp, #40]	; 0x28
   1ad58:	ldr	sl, [sp, #36]	; 0x24
   1ad5c:	bne	1ad6c <main@@Base+0x79c8>
   1ad60:	ldrb	r0, [r4, #2]!
   1ad64:	cmp	r0, #32
   1ad68:	bhi	19ddc <main@@Base+0x6a38>
   1ad6c:	mov	r0, r8
   1ad70:	mov	r2, r5
   1ad74:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ad78:	b	19dd8 <main@@Base+0x6a34>
   1ad7c:	mov	r5, r4
   1ad80:	mov	r0, #0
   1ad84:	mov	r1, #1
   1ad88:	str	r0, [sp, #60]	; 0x3c
   1ad8c:	str	r0, [sp, #56]	; 0x38
   1ad90:	ldr	r0, [sp, #40]	; 0x28
   1ad94:	ldr	r0, [r0]
   1ad98:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1ad9c:	cmp	r0, #0
   1ada0:	beq	1d5e4 <main@@Base+0xa240>
   1ada4:	mov	r4, r5
   1ada8:	ldr	r5, [sp, #44]	; 0x2c
   1adac:	ldr	r8, [sp, #40]	; 0x28
   1adb0:	mov	r7, r0
   1adb4:	mov	r0, #0
   1adb8:	cmp	r4, r5
   1adbc:	str	r0, [fp, #-52]	; 0xffffffcc
   1adc0:	str	r0, [fp, #-56]	; 0xffffffc8
   1adc4:	str	r0, [sp, #60]	; 0x3c
   1adc8:	str	r0, [sp, #56]	; 0x38
   1adcc:	str	r0, [fp, #-60]	; 0xffffffc4
   1add0:	beq	1ae30 <main@@Base+0x7a8c>
   1add4:	sub	r0, fp, #56	; 0x38
   1add8:	mov	r1, r4
   1addc:	mov	r2, r5
   1ade0:	sub	r3, fp, #60	; 0x3c
   1ade4:	str	r0, [sp]
   1ade8:	mov	r0, r8
   1adec:	bl	31418 <flatcc_json_parser_integer@@Base>
   1adf0:	cmp	r0, r4
   1adf4:	beq	1ae44 <main@@Base+0x7aa0>
   1adf8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1adfc:	mov	r1, r0
   1ae00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ae04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae08:	cmp	r2, #0
   1ae0c:	beq	1ae5c <main@@Base+0x7ab8>
   1ae10:	rsbs	r2, r0, #0
   1ae14:	mov	r2, #-2147483648	; 0x80000000
   1ae18:	sbcs	r2, r2, r3
   1ae1c:	bcs	1ae94 <main@@Base+0x7af0>
   1ae20:	ldr	r8, [sp, #40]	; 0x28
   1ae24:	ldr	r5, [sp, #44]	; 0x2c
   1ae28:	mov	r3, #8
   1ae2c:	b	1ae70 <main@@Base+0x7acc>
   1ae30:	mov	r3, #0
   1ae34:	mov	r1, r5
   1ae38:	cmp	r4, r1
   1ae3c:	bne	1aef0 <main@@Base+0x7b4c>
   1ae40:	b	1aeb4 <main@@Base+0x7b10>
   1ae44:	mov	r0, #0
   1ae48:	mov	r3, #0
   1ae4c:	mov	r1, r4
   1ae50:	cmp	r4, r1
   1ae54:	bne	1aef0 <main@@Base+0x7b4c>
   1ae58:	b	1aeb4 <main@@Base+0x7b10>
   1ae5c:	cmn	r3, #1
   1ae60:	bgt	1ae9c <main@@Base+0x7af8>
   1ae64:	ldr	r8, [sp, #40]	; 0x28
   1ae68:	ldr	r5, [sp, #44]	; 0x2c
   1ae6c:	mov	r3, #7
   1ae70:	mov	r0, r8
   1ae74:	mov	r2, r5
   1ae78:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ae7c:	mov	r1, r0
   1ae80:	mov	r0, #0
   1ae84:	mov	r3, #0
   1ae88:	cmp	r4, r1
   1ae8c:	bne	1aef0 <main@@Base+0x7b4c>
   1ae90:	b	1aeb4 <main@@Base+0x7b10>
   1ae94:	rsbs	r0, r0, #0
   1ae98:	rsc	r3, r3, #0
   1ae9c:	ldr	r5, [sp, #44]	; 0x2c
   1aea0:	ldr	r8, [sp, #40]	; 0x28
   1aea4:	str	r0, [sp, #56]	; 0x38
   1aea8:	str	r3, [sp, #60]	; 0x3c
   1aeac:	cmp	r4, r1
   1aeb0:	bne	1aef0 <main@@Base+0x7b4c>
   1aeb4:	add	r0, sp, #56	; 0x38
   1aeb8:	mov	r1, r4
   1aebc:	mov	r2, r5
   1aec0:	str	r0, [sp]
   1aec4:	mov	r0, r8
   1aec8:	ldr	r3, [pc, #4016]	; 1be80 <main@@Base+0x8adc>
   1aecc:	add	r3, pc, r3
   1aed0:	bl	2368c <main@@Base+0x102e8>
   1aed4:	mov	r1, r0
   1aed8:	cmp	r0, r4
   1aedc:	cmpne	r1, r5
   1aee0:	beq	1d5ec <main@@Base+0xa248>
   1aee4:	ldr	r0, [sp, #56]	; 0x38
   1aee8:	ldr	r3, [sp, #60]	; 0x3c
   1aeec:	ldr	r8, [sp, #40]	; 0x28
   1aef0:	stm	r7, {r0, r3}
   1aef4:	sub	r0, r5, r1
   1aef8:	cmp	r0, #2
   1aefc:	blt	1af30 <main@@Base+0x7b8c>
   1af00:	ldrb	r0, [r1]
   1af04:	cmp	r0, #32
   1af08:	bls	1af1c <main@@Base+0x7b78>
   1af0c:	mov	r4, r1
   1af10:	cmp	r4, r5
   1af14:	bne	1af48 <main@@Base+0x7ba4>
   1af18:	b	1c3e0 <main@@Base+0x903c>
   1af1c:	bne	1af30 <main@@Base+0x7b8c>
   1af20:	mov	r4, r1
   1af24:	ldrb	r0, [r4, #1]!
   1af28:	cmp	r0, #32
   1af2c:	bhi	1af40 <main@@Base+0x7b9c>
   1af30:	mov	r0, r8
   1af34:	mov	r2, r5
   1af38:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1af3c:	mov	r4, r0
   1af40:	cmp	r4, r5
   1af44:	beq	1c3e0 <main@@Base+0x903c>
   1af48:	ldrb	r0, [r4]
   1af4c:	cmp	r0, #44	; 0x2c
   1af50:	bne	1c3f4 <main@@Base+0x9050>
   1af54:	add	r1, r4, #1
   1af58:	sub	r0, r5, r1
   1af5c:	cmp	r0, #2
   1af60:	blt	1af90 <main@@Base+0x7bec>
   1af64:	ldrb	r0, [r1]
   1af68:	cmp	r0, #32
   1af6c:	bls	1af80 <main@@Base+0x7bdc>
   1af70:	mov	r4, r1
   1af74:	cmp	r4, r5
   1af78:	bne	1afa8 <main@@Base+0x7c04>
   1af7c:	b	1c41c <main@@Base+0x9078>
   1af80:	bne	1af90 <main@@Base+0x7bec>
   1af84:	ldrb	r0, [r4, #2]!
   1af88:	cmp	r0, #32
   1af8c:	bhi	1afa0 <main@@Base+0x7bfc>
   1af90:	mov	r0, r8
   1af94:	mov	r2, r5
   1af98:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1af9c:	mov	r4, r0
   1afa0:	cmp	r4, r5
   1afa4:	beq	1c41c <main@@Base+0x9078>
   1afa8:	ldrb	r0, [r4]
   1afac:	cmp	r0, #93	; 0x5d
   1afb0:	beq	1ce48 <main@@Base+0x9aa4>
   1afb4:	mov	r0, #0
   1afb8:	mov	r1, #1
   1afbc:	str	r0, [sp, #60]	; 0x3c
   1afc0:	str	r0, [sp, #56]	; 0x38
   1afc4:	ldr	r0, [r8]
   1afc8:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1afcc:	mov	r7, r0
   1afd0:	cmp	r0, #0
   1afd4:	bne	1adb4 <main@@Base+0x7a10>
   1afd8:	b	1346c <main@@Base+0xc8>
   1afdc:	ldr	r5, [sp, #44]	; 0x2c
   1afe0:	ldr	r8, [sp, #40]	; 0x28
   1afe4:	ldr	sl, [sp, #36]	; 0x24
   1afe8:	bne	1aff8 <main@@Base+0x7c54>
   1afec:	ldrb	r0, [r7, #2]!
   1aff0:	cmp	r0, #32
   1aff4:	bhi	1b008 <main@@Base+0x7c64>
   1aff8:	mov	r0, r8
   1affc:	mov	r2, r5
   1b000:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b004:	mov	r7, r0
   1b008:	cmp	r4, r7
   1b00c:	beq	1b86c <main@@Base+0x84c8>
   1b010:	mov	r6, #0
   1b014:	cmp	r7, r5
   1b018:	str	r6, [fp, #-52]	; 0xffffffcc
   1b01c:	str	r6, [fp, #-56]	; 0xffffffc8
   1b020:	str	r6, [sp, #60]	; 0x3c
   1b024:	str	r6, [sp, #56]	; 0x38
   1b028:	str	r6, [fp, #-60]	; 0xffffffc4
   1b02c:	beq	1b08c <main@@Base+0x7ce8>
   1b030:	sub	r0, fp, #56	; 0x38
   1b034:	mov	r1, r7
   1b038:	mov	r2, r5
   1b03c:	sub	r3, fp, #60	; 0x3c
   1b040:	str	r0, [sp]
   1b044:	mov	r0, r8
   1b048:	bl	31418 <flatcc_json_parser_integer@@Base>
   1b04c:	cmp	r0, r7
   1b050:	beq	1b0a0 <main@@Base+0x7cfc>
   1b054:	sub	r9, fp, #60	; 0x3c
   1b058:	mov	r4, r0
   1b05c:	ldm	r9, {r0, r6, r9}
   1b060:	cmp	r0, #0
   1b064:	beq	1b0b0 <main@@Base+0x7d0c>
   1b068:	subs	r0, r6, #1
   1b06c:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1b070:	bcc	1b0e8 <main@@Base+0x7d44>
   1b074:	ldr	r8, [sp, #40]	; 0x28
   1b078:	ldr	r2, [sp, #44]	; 0x2c
   1b07c:	mov	r1, r4
   1b080:	mov	r3, #8
   1b084:	b	1b0c8 <main@@Base+0x7d24>
   1b088:	andeq	sp, r2, ip, lsr #32
   1b08c:	mov	r9, #0
   1b090:	mov	r4, r5
   1b094:	cmp	r7, r4
   1b098:	bne	1b144 <main@@Base+0x7da0>
   1b09c:	b	1b104 <main@@Base+0x7d60>
   1b0a0:	mov	r6, #0
   1b0a4:	mov	r9, #0
   1b0a8:	mov	r4, r7
   1b0ac:	b	1b0f8 <main@@Base+0x7d54>
   1b0b0:	cmn	r9, #1
   1b0b4:	bgt	1b0f0 <main@@Base+0x7d4c>
   1b0b8:	ldr	r8, [sp, #40]	; 0x28
   1b0bc:	ldr	r2, [sp, #44]	; 0x2c
   1b0c0:	mov	r1, r4
   1b0c4:	mov	r3, #7
   1b0c8:	mov	r0, r8
   1b0cc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1b0d0:	mov	r4, r0
   1b0d4:	mov	r6, #0
   1b0d8:	mov	r9, #0
   1b0dc:	cmp	r7, r4
   1b0e0:	bne	1b144 <main@@Base+0x7da0>
   1b0e4:	b	1b104 <main@@Base+0x7d60>
   1b0e8:	rsbs	r6, r6, #0
   1b0ec:	rsc	r9, r9, #0
   1b0f0:	str	r6, [sp, #56]	; 0x38
   1b0f4:	str	r9, [sp, #60]	; 0x3c
   1b0f8:	ldr	r8, [sp, #40]	; 0x28
   1b0fc:	cmp	r7, r4
   1b100:	bne	1b144 <main@@Base+0x7da0>
   1b104:	add	r0, sp, #56	; 0x38
   1b108:	ldr	r2, [sp, #44]	; 0x2c
   1b10c:	mov	r1, r7
   1b110:	str	r0, [sp]
   1b114:	mov	r0, r8
   1b118:	ldr	r3, [pc, #3932]	; 1c07c <main@@Base+0x8cd8>
   1b11c:	add	r3, pc, r3
   1b120:	bl	2368c <main@@Base+0x102e8>
   1b124:	cmp	r0, r7
   1b128:	mov	r4, r0
   1b12c:	ldrne	r0, [sp, #44]	; 0x2c
   1b130:	cmpne	r4, r0
   1b134:	beq	1d614 <main@@Base+0xa270>
   1b138:	ldr	r6, [sp, #56]	; 0x38
   1b13c:	ldr	r9, [sp, #60]	; 0x3c
   1b140:	ldr	r8, [sp, #40]	; 0x28
   1b144:	orrs	r0, r6, r9
   1b148:	bne	1b158 <main@@Base+0x7db4>
   1b14c:	ldrb	r0, [r8, #8]
   1b150:	tst	r0, #2
   1b154:	beq	1b178 <main@@Base+0x7dd4>
   1b158:	ldr	r0, [r8]
   1b15c:	mov	r1, #22
   1b160:	mov	r2, #8
   1b164:	mov	r3, #8
   1b168:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   1b16c:	cmp	r0, #0
   1b170:	beq	1d614 <main@@Base+0xa270>
   1b174:	stm	r0, {r6, r9}
   1b178:	ldr	r5, [sp, #44]	; 0x2c
   1b17c:	b	16728 <main@@Base+0x3384>
   1b180:	ldr	sl, [sp, #36]	; 0x24
   1b184:	mov	r4, r5
   1b188:	b	19180 <main@@Base+0x5ddc>
   1b18c:	cmp	r0, #93	; 0x5d
   1b190:	bne	1d134 <main@@Base+0x9d90>
   1b194:	ldr	r5, [sp, #44]	; 0x2c
   1b198:	ldr	r8, [sp, #40]	; 0x28
   1b19c:	add	r1, r2, #1
   1b1a0:	sub	r0, r5, r1
   1b1a4:	cmp	r0, #2
   1b1a8:	ldr	sl, [sp, #36]	; 0x24
   1b1ac:	blt	1d260 <main@@Base+0x9ebc>
   1b1b0:	ldrb	r0, [r1]
   1b1b4:	cmp	r0, #32
   1b1b8:	bls	1d240 <main@@Base+0x9e9c>
   1b1bc:	ldr	r5, [sp, #44]	; 0x2c
   1b1c0:	ldr	r8, [sp, #40]	; 0x28
   1b1c4:	ldr	sl, [sp, #36]	; 0x24
   1b1c8:	mov	r4, r1
   1b1cc:	b	19180 <main@@Base+0x5ddc>
   1b1d0:	mov	r4, r5
   1b1d4:	b	1d2b4 <main@@Base+0x9f10>
   1b1d8:	mov	r0, r8
   1b1dc:	mov	r1, r5
   1b1e0:	b	1d144 <main@@Base+0x9da0>
   1b1e4:	cmp	r0, #93	; 0x5d
   1b1e8:	bne	1d158 <main@@Base+0x9db4>
   1b1ec:	ldr	r0, [sp, #44]	; 0x2c
   1b1f0:	add	r1, r4, #1
   1b1f4:	sub	r0, r0, r1
   1b1f8:	cmp	r0, #2
   1b1fc:	blt	1d2a4 <main@@Base+0x9f00>
   1b200:	b	1b3e4 <main@@Base+0x8040>
   1b204:	mov	r0, r8
   1b208:	mov	r1, r5
   1b20c:	mov	r2, r5
   1b210:	b	1d164 <main@@Base+0x9dc0>
   1b214:	ldr	r5, [sp, #44]	; 0x2c
   1b218:	bne	1b228 <main@@Base+0x7e84>
   1b21c:	ldrb	r0, [r4, #2]!
   1b220:	cmp	r0, #32
   1b224:	bhi	1b238 <main@@Base+0x7e94>
   1b228:	ldr	r0, [sp, #40]	; 0x28
   1b22c:	mov	r2, r5
   1b230:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b234:	mov	r4, r0
   1b238:	cmp	r4, r5
   1b23c:	mov	r3, r5
   1b240:	beq	1b294 <main@@Base+0x7ef0>
   1b244:	ldrb	r0, [r4]
   1b248:	cmp	r0, #125	; 0x7d
   1b24c:	bne	1b290 <main@@Base+0x7eec>
   1b250:	ldr	r5, [sp, #44]	; 0x2c
   1b254:	ldr	r8, [sp, #40]	; 0x28
   1b258:	add	r1, r4, #1
   1b25c:	sub	r0, r5, r1
   1b260:	cmp	r0, #2
   1b264:	blt	1d480 <main@@Base+0xa0dc>
   1b268:	ldrb	r0, [r1]
   1b26c:	cmp	r0, #32
   1b270:	bhi	1ce38 <main@@Base+0x9a94>
   1b274:	ldr	r5, [sp, #44]	; 0x2c
   1b278:	ldr	r8, [sp, #40]	; 0x28
   1b27c:	bne	1d480 <main@@Base+0xa0dc>
   1b280:	ldrb	r0, [r4, #2]!
   1b284:	cmp	r0, #32
   1b288:	bhi	19000 <main@@Base+0x5c5c>
   1b28c:	b	1d480 <main@@Base+0xa0dc>
   1b290:	mov	r3, r4
   1b294:	ldr	r5, [sp, #44]	; 0x2c
   1b298:	ldr	r8, [sp, #40]	; 0x28
   1b29c:	cmp	r3, r5
   1b2a0:	mov	r1, r5
   1b2a4:	beq	1b2fc <main@@Base+0x7f58>
   1b2a8:	ldrb	r0, [r3]
   1b2ac:	cmp	r0, #46	; 0x2e
   1b2b0:	beq	1b2d0 <main@@Base+0x7f2c>
   1b2b4:	cmp	r0, #34	; 0x22
   1b2b8:	bne	1b2ec <main@@Base+0x7f48>
   1b2bc:	ldr	r0, [sp, #32]
   1b2c0:	mov	r1, #0
   1b2c4:	str	r1, [r0]
   1b2c8:	add	r1, r3, #1
   1b2cc:	b	1b2fc <main@@Base+0x7f58>
   1b2d0:	mov	r1, r3
   1b2d4:	mov	r0, r8
   1b2d8:	mov	r2, r5
   1b2dc:	mov	r3, #5
   1b2e0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1b2e4:	mov	r1, r0
   1b2e8:	b	1b2fc <main@@Base+0x7f58>
   1b2ec:	ldr	r0, [sp, #32]
   1b2f0:	mov	r1, #1
   1b2f4:	str	r1, [r0]
   1b2f8:	mov	r1, r3
   1b2fc:	mov	r0, r8
   1b300:	mov	r2, r5
   1b304:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   1b308:	mov	r2, r0
   1b30c:	sub	r0, r5, r0
   1b310:	cmp	r0, #2
   1b314:	blt	1b348 <main@@Base+0x7fa4>
   1b318:	ldrb	r0, [r2]
   1b31c:	cmp	r0, #32
   1b320:	bls	1b334 <main@@Base+0x7f90>
   1b324:	mov	r3, r2
   1b328:	cmp	r3, r5
   1b32c:	bne	1b364 <main@@Base+0x7fc0>
   1b330:	b	1c414 <main@@Base+0x9070>
   1b334:	bne	1b348 <main@@Base+0x7fa4>
   1b338:	mov	r3, r2
   1b33c:	ldrb	r0, [r3, #1]!
   1b340:	cmp	r0, #32
   1b344:	bhi	1b35c <main@@Base+0x7fb8>
   1b348:	mov	r1, r2
   1b34c:	mov	r0, r8
   1b350:	mov	r2, r5
   1b354:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b358:	mov	r3, r0
   1b35c:	cmp	r3, r5
   1b360:	beq	1c414 <main@@Base+0x9070>
   1b364:	ldrb	r0, [r3]
   1b368:	cmp	r0, #44	; 0x2c
   1b36c:	bne	1ce0c <main@@Base+0x9a68>
   1b370:	add	r1, r3, #1
   1b374:	sub	r0, r5, r1
   1b378:	cmp	r0, #2
   1b37c:	blt	1b3ac <main@@Base+0x8008>
   1b380:	ldrb	r0, [r1]
   1b384:	cmp	r0, #32
   1b388:	bls	1b39c <main@@Base+0x7ff8>
   1b38c:	mov	r3, r1
   1b390:	cmp	r3, r5
   1b394:	bne	1b3c4 <main@@Base+0x8020>
   1b398:	b	1ce6c <main@@Base+0x9ac8>
   1b39c:	bne	1b3ac <main@@Base+0x8008>
   1b3a0:	ldrb	r0, [r3, #2]!
   1b3a4:	cmp	r0, #32
   1b3a8:	bhi	1b3bc <main@@Base+0x8018>
   1b3ac:	mov	r0, r8
   1b3b0:	mov	r2, r5
   1b3b4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b3b8:	mov	r3, r0
   1b3bc:	cmp	r3, r5
   1b3c0:	beq	1ce6c <main@@Base+0x9ac8>
   1b3c4:	ldrb	r0, [r3]
   1b3c8:	cmp	r0, #125	; 0x7d
   1b3cc:	bne	1b29c <main@@Base+0x7ef8>
   1b3d0:	b	1ce1c <main@@Base+0x9a78>
   1b3d4:	add	r1, r4, #1
   1b3d8:	sub	r0, r5, r1
   1b3dc:	cmp	r0, #2
   1b3e0:	blt	1d2a4 <main@@Base+0x9f00>
   1b3e4:	ldrb	r0, [r1]
   1b3e8:	cmp	r0, #32
   1b3ec:	bls	1d294 <main@@Base+0x9ef0>
   1b3f0:	mov	r4, r1
   1b3f4:	b	1d2b4 <main@@Base+0x9f10>
   1b3f8:	ldr	sl, [sp, #36]	; 0x24
   1b3fc:	mov	r4, r5
   1b400:	b	188a8 <main@@Base+0x5504>
   1b404:	bne	1b414 <main@@Base+0x8070>
   1b408:	ldrb	r0, [r4, #2]!
   1b40c:	cmp	r0, #32
   1b410:	bhi	1b424 <main@@Base+0x8080>
   1b414:	ldr	r0, [sp, #40]	; 0x28
   1b418:	ldr	r2, [sp, #44]	; 0x2c
   1b41c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b420:	mov	r4, r0
   1b424:	ldr	r7, [sp, #44]	; 0x2c
   1b428:	cmp	r4, r7
   1b42c:	beq	1b488 <main@@Base+0x80e4>
   1b430:	ldrb	r0, [r4]
   1b434:	cmp	r0, #93	; 0x5d
   1b438:	bne	1b484 <main@@Base+0x80e0>
   1b43c:	ldr	r0, [sp, #44]	; 0x2c
   1b440:	ldr	r8, [sp, #40]	; 0x28
   1b444:	add	r1, r4, #1
   1b448:	sub	r0, r0, r1
   1b44c:	cmp	r0, #2
   1b450:	blt	1b474 <main@@Base+0x80d0>
   1b454:	ldrb	r0, [r1]
   1b458:	cmp	r0, #32
   1b45c:	bhi	1d234 <main@@Base+0x9e90>
   1b460:	ldr	r8, [sp, #40]	; 0x28
   1b464:	bne	1b474 <main@@Base+0x80d0>
   1b468:	ldrb	r0, [r4, #2]!
   1b46c:	cmp	r0, #32
   1b470:	bhi	1ac24 <main@@Base+0x7880>
   1b474:	ldr	r2, [sp, #44]	; 0x2c
   1b478:	mov	r0, r8
   1b47c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b480:	b	1ac20 <main@@Base+0x787c>
   1b484:	mov	r7, r4
   1b488:	mov	r0, #0
   1b48c:	mov	r1, #1
   1b490:	str	r0, [fp, #-52]	; 0xffffffcc
   1b494:	str	r0, [fp, #-56]	; 0xffffffc8
   1b498:	ldr	r0, [sp, #40]	; 0x28
   1b49c:	ldr	r0, [r0]
   1b4a0:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1b4a4:	cmp	r0, #0
   1b4a8:	beq	1d5f8 <main@@Base+0xa254>
   1b4ac:	ldr	r5, [sp, #44]	; 0x2c
   1b4b0:	ldr	r8, [sp, #40]	; 0x28
   1b4b4:	mov	r9, r0
   1b4b8:	mov	r4, r7
   1b4bc:	mov	r0, r8
   1b4c0:	mov	r1, r4
   1b4c4:	mov	r2, r5
   1b4c8:	sub	r3, fp, #56	; 0x38
   1b4cc:	bl	308fc <flatcc_json_parser_double@@Base>
   1b4d0:	mov	r7, r0
   1b4d4:	cmp	r4, r0
   1b4d8:	bne	1b518 <main@@Base+0x8174>
   1b4dc:	sub	r0, fp, #56	; 0x38
   1b4e0:	mov	r1, r4
   1b4e4:	mov	r2, r5
   1b4e8:	str	r0, [sp]
   1b4ec:	mov	r0, r8
   1b4f0:	ldr	r3, [pc, #4048]	; 1c4c8 <main@@Base+0x9124>
   1b4f4:	add	r3, pc, r3
   1b4f8:	bl	23d40 <main@@Base+0x1099c>
   1b4fc:	mov	r7, r0
   1b500:	cmp	r0, r4
   1b504:	beq	1d5f8 <main@@Base+0xa254>
   1b508:	ldr	r5, [sp, #44]	; 0x2c
   1b50c:	ldr	r8, [sp, #40]	; 0x28
   1b510:	cmp	r7, r5
   1b514:	beq	1d5c4 <main@@Base+0xa220>
   1b518:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1b51c:	sub	r0, r5, r7
   1b520:	cmp	r0, #2
   1b524:	vstr	d16, [r9]
   1b528:	blt	1b55c <main@@Base+0x81b8>
   1b52c:	ldrb	r0, [r7]
   1b530:	cmp	r0, #32
   1b534:	bls	1b548 <main@@Base+0x81a4>
   1b538:	mov	r4, r7
   1b53c:	cmp	r4, r5
   1b540:	bne	1b578 <main@@Base+0x81d4>
   1b544:	b	1d184 <main@@Base+0x9de0>
   1b548:	bne	1b55c <main@@Base+0x81b8>
   1b54c:	mov	r4, r7
   1b550:	ldrb	r0, [r4, #1]!
   1b554:	cmp	r0, #32
   1b558:	bhi	1b570 <main@@Base+0x81cc>
   1b55c:	mov	r0, r8
   1b560:	mov	r1, r7
   1b564:	mov	r2, r5
   1b568:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b56c:	mov	r4, r0
   1b570:	cmp	r4, r5
   1b574:	beq	1d184 <main@@Base+0x9de0>
   1b578:	ldrb	r0, [r4]
   1b57c:	cmp	r0, #44	; 0x2c
   1b580:	bne	1d194 <main@@Base+0x9df0>
   1b584:	add	r1, r4, #1
   1b588:	sub	r0, r5, r1
   1b58c:	cmp	r0, #2
   1b590:	blt	1b5c0 <main@@Base+0x821c>
   1b594:	ldrb	r0, [r1]
   1b598:	cmp	r0, #32
   1b59c:	bls	1b5b0 <main@@Base+0x820c>
   1b5a0:	mov	r4, r1
   1b5a4:	cmp	r4, r5
   1b5a8:	bne	1b5d8 <main@@Base+0x8234>
   1b5ac:	b	1d1b4 <main@@Base+0x9e10>
   1b5b0:	bne	1b5c0 <main@@Base+0x821c>
   1b5b4:	ldrb	r0, [r4, #2]!
   1b5b8:	cmp	r0, #32
   1b5bc:	bhi	1b5d0 <main@@Base+0x822c>
   1b5c0:	mov	r0, r8
   1b5c4:	mov	r2, r5
   1b5c8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b5cc:	mov	r4, r0
   1b5d0:	cmp	r4, r5
   1b5d4:	beq	1d1b4 <main@@Base+0x9e10>
   1b5d8:	ldrb	r0, [r4]
   1b5dc:	cmp	r0, #93	; 0x5d
   1b5e0:	beq	1d218 <main@@Base+0x9e74>
   1b5e4:	mov	r0, #0
   1b5e8:	mov	r1, #1
   1b5ec:	str	r0, [fp, #-52]	; 0xffffffcc
   1b5f0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b5f4:	ldr	r0, [r8]
   1b5f8:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1b5fc:	mov	r9, r0
   1b600:	cmp	r0, #0
   1b604:	mov	r7, r4
   1b608:	bne	1b4bc <main@@Base+0x8118>
   1b60c:	b	1d5c4 <main@@Base+0xa220>
   1b610:	cmp	r0, #125	; 0x7d
   1b614:	bne	1d1c4 <main@@Base+0x9e20>
   1b618:	ldr	r5, [sp, #44]	; 0x2c
   1b61c:	ldr	r8, [sp, #40]	; 0x28
   1b620:	add	r1, r2, #1
   1b624:	sub	r0, r5, r1
   1b628:	cmp	r0, #2
   1b62c:	ldr	sl, [sp, #36]	; 0x24
   1b630:	blt	1d398 <main@@Base+0x9ff4>
   1b634:	ldrb	r0, [r1]
   1b638:	cmp	r0, #32
   1b63c:	bls	1d378 <main@@Base+0x9fd4>
   1b640:	ldr	r5, [sp, #44]	; 0x2c
   1b644:	ldr	r8, [sp, #40]	; 0x28
   1b648:	ldr	sl, [sp, #36]	; 0x24
   1b64c:	mov	r4, r1
   1b650:	b	188a8 <main@@Base+0x5504>
   1b654:	mov	r0, r8
   1b658:	mov	r1, r5
   1b65c:	b	1d1d4 <main@@Base+0x9e30>
   1b660:	ldr	r5, [sp, #44]	; 0x2c
   1b664:	ldr	r8, [sp, #40]	; 0x28
   1b668:	bne	1b678 <main@@Base+0x82d4>
   1b66c:	ldrb	r0, [r7, #2]!
   1b670:	cmp	r0, #32
   1b674:	bhi	1b688 <main@@Base+0x82e4>
   1b678:	mov	r0, r8
   1b67c:	mov	r2, r5
   1b680:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b684:	mov	r7, r0
   1b688:	ldr	sl, [sp, #36]	; 0x24
   1b68c:	cmp	r4, r7
   1b690:	beq	1b86c <main@@Base+0x84c8>
   1b694:	mov	r6, #0
   1b698:	cmp	r7, r5
   1b69c:	str	r6, [fp, #-52]	; 0xffffffcc
   1b6a0:	str	r6, [fp, #-56]	; 0xffffffc8
   1b6a4:	str	r6, [fp, #-60]	; 0xffffffc4
   1b6a8:	str	r6, [sp, #56]	; 0x38
   1b6ac:	beq	1b6f8 <main@@Base+0x8354>
   1b6b0:	sub	r0, fp, #56	; 0x38
   1b6b4:	mov	r1, r7
   1b6b8:	mov	r2, r5
   1b6bc:	add	r3, sp, #56	; 0x38
   1b6c0:	str	r0, [sp]
   1b6c4:	ldr	r0, [sp, #40]	; 0x28
   1b6c8:	bl	31418 <flatcc_json_parser_integer@@Base>
   1b6cc:	cmp	r0, r7
   1b6d0:	beq	1b708 <main@@Base+0x8364>
   1b6d4:	mov	r4, r0
   1b6d8:	ldr	r0, [sp, #56]	; 0x38
   1b6dc:	cmp	r0, #0
   1b6e0:	beq	1b718 <main@@Base+0x8374>
   1b6e4:	ldr	r0, [sp, #40]	; 0x28
   1b6e8:	ldr	r2, [sp, #44]	; 0x2c
   1b6ec:	mov	r1, r4
   1b6f0:	mov	r3, #8
   1b6f4:	b	1b734 <main@@Base+0x8390>
   1b6f8:	mov	r4, r5
   1b6fc:	cmp	r7, r4
   1b700:	bne	1b77c <main@@Base+0x83d8>
   1b704:	b	1b744 <main@@Base+0x83a0>
   1b708:	mov	r4, r7
   1b70c:	cmp	r7, r4
   1b710:	bne	1b77c <main@@Base+0x83d8>
   1b714:	b	1b744 <main@@Base+0x83a0>
   1b718:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b71c:	cmp	r0, #0
   1b720:	beq	1d170 <main@@Base+0x9dcc>
   1b724:	ldr	r0, [sp, #40]	; 0x28
   1b728:	ldr	r2, [sp, #44]	; 0x2c
   1b72c:	mov	r1, r4
   1b730:	mov	r3, #7
   1b734:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1b738:	mov	r4, r0
   1b73c:	cmp	r7, r4
   1b740:	bne	1b77c <main@@Base+0x83d8>
   1b744:	sub	r0, fp, #60	; 0x3c
   1b748:	ldr	r2, [sp, #44]	; 0x2c
   1b74c:	mov	r1, r7
   1b750:	str	r0, [sp]
   1b754:	ldr	r0, [sp, #40]	; 0x28
   1b758:	ldr	r3, [pc, #3932]	; 1c6bc <main@@Base+0x9318>
   1b75c:	add	r3, pc, r3
   1b760:	bl	238e4 <main@@Base+0x10540>
   1b764:	cmp	r0, r7
   1b768:	mov	r4, r0
   1b76c:	ldrne	r0, [sp, #44]	; 0x2c
   1b770:	cmpne	r4, r0
   1b774:	beq	1d614 <main@@Base+0xa270>
   1b778:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1b77c:	ldr	r8, [sp, #40]	; 0x28
   1b780:	cmp	r6, #0
   1b784:	bne	1b794 <main@@Base+0x83f0>
   1b788:	ldrb	r0, [r8, #8]
   1b78c:	tst	r0, #2
   1b790:	beq	1b178 <main@@Base+0x7dd4>
   1b794:	ldr	r0, [r8]
   1b798:	mov	r1, #21
   1b79c:	mov	r2, #4
   1b7a0:	mov	r3, #4
   1b7a4:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   1b7a8:	cmp	r0, #0
   1b7ac:	beq	1d614 <main@@Base+0xa270>
   1b7b0:	str	r6, [r0]
   1b7b4:	b	1ba08 <main@@Base+0x8664>
   1b7b8:	ldr	r5, [sp, #44]	; 0x2c
   1b7bc:	ldr	r8, [sp, #40]	; 0x28
   1b7c0:	bne	1b7d0 <main@@Base+0x842c>
   1b7c4:	ldrb	r0, [r7, #2]!
   1b7c8:	cmp	r0, #32
   1b7cc:	bhi	1b7e0 <main@@Base+0x843c>
   1b7d0:	mov	r0, r8
   1b7d4:	mov	r2, r5
   1b7d8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b7dc:	mov	r7, r0
   1b7e0:	ldr	sl, [sp, #36]	; 0x24
   1b7e4:	cmp	r4, r7
   1b7e8:	beq	1b86c <main@@Base+0x84c8>
   1b7ec:	mov	r6, #0
   1b7f0:	cmp	r7, r5
   1b7f4:	str	r6, [fp, #-52]	; 0xffffffcc
   1b7f8:	str	r6, [fp, #-56]	; 0xffffffc8
   1b7fc:	str	r6, [sp, #60]	; 0x3c
   1b800:	str	r6, [sp, #56]	; 0x38
   1b804:	str	r6, [fp, #-60]	; 0xffffffc4
   1b808:	beq	1b950 <main@@Base+0x85ac>
   1b80c:	sub	r0, fp, #56	; 0x38
   1b810:	mov	r1, r7
   1b814:	mov	r2, r5
   1b818:	sub	r3, fp, #60	; 0x3c
   1b81c:	str	r0, [sp]
   1b820:	ldr	r0, [sp, #40]	; 0x28
   1b824:	bl	31418 <flatcc_json_parser_integer@@Base>
   1b828:	cmp	r0, r7
   1b82c:	beq	1b964 <main@@Base+0x85c0>
   1b830:	mov	r4, r0
   1b834:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1b838:	cmp	r0, #0
   1b83c:	beq	1b97c <main@@Base+0x85d8>
   1b840:	ldr	r0, [sp, #40]	; 0x28
   1b844:	ldr	r2, [sp, #44]	; 0x2c
   1b848:	mov	r1, r4
   1b84c:	mov	r3, #8
   1b850:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1b854:	mov	r4, r0
   1b858:	mov	r6, #0
   1b85c:	mov	r9, #0
   1b860:	cmp	r7, r4
   1b864:	bne	1b9d0 <main@@Base+0x862c>
   1b868:	b	1b994 <main@@Base+0x85f0>
   1b86c:	mov	r0, r8
   1b870:	mov	r1, r4
   1b874:	mov	r2, r5
   1b878:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   1b87c:	mov	r4, r0
   1b880:	sub	r0, r5, r4
   1b884:	cmp	r0, #2
   1b888:	blt	1b8bc <main@@Base+0x8518>
   1b88c:	ldrb	r0, [r4]
   1b890:	cmp	r0, #32
   1b894:	bls	1b8a8 <main@@Base+0x8504>
   1b898:	mov	r2, r4
   1b89c:	cmp	r2, r5
   1b8a0:	bne	1b8d8 <main@@Base+0x8534>
   1b8a4:	b	1d51c <main@@Base+0xa178>
   1b8a8:	bne	1b8bc <main@@Base+0x8518>
   1b8ac:	mov	r2, r4
   1b8b0:	ldrb	r0, [r2, #1]!
   1b8b4:	cmp	r0, #32
   1b8b8:	bhi	1b8d0 <main@@Base+0x852c>
   1b8bc:	mov	r0, r8
   1b8c0:	mov	r1, r4
   1b8c4:	mov	r2, r5
   1b8c8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b8cc:	mov	r2, r0
   1b8d0:	cmp	r2, r5
   1b8d4:	beq	1d51c <main@@Base+0xa178>
   1b8d8:	ldrb	r0, [r2]
   1b8dc:	cmp	r0, #44	; 0x2c
   1b8e0:	bne	1d524 <main@@Base+0xa180>
   1b8e4:	add	r1, r2, #1
   1b8e8:	sub	r0, r5, r1
   1b8ec:	cmp	r0, #2
   1b8f0:	blt	1b920 <main@@Base+0x857c>
   1b8f4:	ldrb	r0, [r1]
   1b8f8:	cmp	r0, #32
   1b8fc:	bls	1b910 <main@@Base+0x856c>
   1b900:	mov	r2, r1
   1b904:	cmp	r2, r5
   1b908:	bne	1b938 <main@@Base+0x8594>
   1b90c:	b	1d574 <main@@Base+0xa1d0>
   1b910:	bne	1b920 <main@@Base+0x857c>
   1b914:	ldrb	r0, [r2, #2]!
   1b918:	cmp	r0, #32
   1b91c:	bhi	1b930 <main@@Base+0x858c>
   1b920:	mov	r0, r8
   1b924:	mov	r2, r5
   1b928:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1b92c:	mov	r2, r0
   1b930:	cmp	r2, r5
   1b934:	beq	1d574 <main@@Base+0xa1d0>
   1b938:	ldrb	r0, [r2]
   1b93c:	movw	lr, #29556	; 0x7374
   1b940:	movt	lr, #29797	; 0x7465
   1b944:	cmp	r0, #125	; 0x7d
   1b948:	bne	1361c <main@@Base+0x278>
   1b94c:	b	1d52c <main@@Base+0xa188>
   1b950:	mov	r9, #0
   1b954:	mov	r4, r5
   1b958:	cmp	r7, r4
   1b95c:	bne	1b9d0 <main@@Base+0x862c>
   1b960:	b	1b994 <main@@Base+0x85f0>
   1b964:	mov	r6, #0
   1b968:	mov	r9, #0
   1b96c:	mov	r4, r7
   1b970:	cmp	r7, r4
   1b974:	bne	1b9d0 <main@@Base+0x862c>
   1b978:	b	1b994 <main@@Base+0x85f0>
   1b97c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1b980:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1b984:	str	r9, [sp, #60]	; 0x3c
   1b988:	str	r6, [sp, #56]	; 0x38
   1b98c:	cmp	r7, r4
   1b990:	bne	1b9d0 <main@@Base+0x862c>
   1b994:	add	r0, sp, #56	; 0x38
   1b998:	ldr	r2, [sp, #44]	; 0x2c
   1b99c:	mov	r1, r7
   1b9a0:	str	r0, [sp]
   1b9a4:	ldr	r0, [sp, #40]	; 0x28
   1b9a8:	ldr	r3, [pc, #4056]	; 1c988 <main@@Base+0x95e4>
   1b9ac:	add	r3, pc, r3
   1b9b0:	bl	23b20 <main@@Base+0x1077c>
   1b9b4:	cmp	r0, r7
   1b9b8:	mov	r4, r0
   1b9bc:	ldrne	r0, [sp, #44]	; 0x2c
   1b9c0:	cmpne	r4, r0
   1b9c4:	beq	1d614 <main@@Base+0xa270>
   1b9c8:	ldr	r6, [sp, #56]	; 0x38
   1b9cc:	ldr	r9, [sp, #60]	; 0x3c
   1b9d0:	ldr	r8, [sp, #40]	; 0x28
   1b9d4:	orrs	r0, r6, r9
   1b9d8:	bne	1b9e8 <main@@Base+0x8644>
   1b9dc:	ldrb	r0, [r8, #8]
   1b9e0:	tst	r0, #2
   1b9e4:	beq	1b178 <main@@Base+0x7dd4>
   1b9e8:	ldr	r0, [r8]
   1b9ec:	mov	r1, #23
   1b9f0:	mov	r2, #8
   1b9f4:	mov	r3, #8
   1b9f8:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   1b9fc:	cmp	r0, #0
   1ba00:	beq	1d614 <main@@Base+0xa270>
   1ba04:	stm	r0, {r6, r9}
   1ba08:	ldr	r8, [sp, #40]	; 0x28
   1ba0c:	ldr	r5, [sp, #44]	; 0x2c
   1ba10:	b	16728 <main@@Base+0x3384>
   1ba14:	ldr	sl, [sp, #36]	; 0x24
   1ba18:	mov	r4, r5
   1ba1c:	b	19924 <main@@Base+0x6580>
   1ba20:	bne	1ba30 <main@@Base+0x868c>
   1ba24:	ldrb	r0, [r4, #2]!
   1ba28:	cmp	r0, #32
   1ba2c:	bhi	1ba40 <main@@Base+0x869c>
   1ba30:	ldr	r0, [sp, #40]	; 0x28
   1ba34:	ldr	r2, [sp, #44]	; 0x2c
   1ba38:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ba3c:	mov	r4, r0
   1ba40:	ldr	r2, [sp, #44]	; 0x2c
   1ba44:	cmp	r4, r2
   1ba48:	beq	1ba90 <main@@Base+0x86ec>
   1ba4c:	ldrb	r0, [r4]
   1ba50:	cmp	r0, #125	; 0x7d
   1ba54:	bne	1ba8c <main@@Base+0x86e8>
   1ba58:	ldr	r0, [sp, #44]	; 0x2c
   1ba5c:	add	r1, r4, #1
   1ba60:	sub	r0, r0, r1
   1ba64:	cmp	r0, #2
   1ba68:	blt	1d50c <main@@Base+0xa168>
   1ba6c:	ldrb	r0, [r1]
   1ba70:	cmp	r0, #32
   1ba74:	bhi	1d30c <main@@Base+0x9f68>
   1ba78:	bne	1d50c <main@@Base+0xa168>
   1ba7c:	ldrb	r0, [r4, #2]!
   1ba80:	cmp	r0, #32
   1ba84:	bhi	194b8 <main@@Base+0x6114>
   1ba88:	b	1d50c <main@@Base+0xa168>
   1ba8c:	mov	r2, r4
   1ba90:	ldr	r5, [sp, #44]	; 0x2c
   1ba94:	ldr	r6, [sp, #40]	; 0x28
   1ba98:	cmp	r2, r5
   1ba9c:	mov	r9, r5
   1baa0:	beq	1baf4 <main@@Base+0x8750>
   1baa4:	ldrb	r0, [r2]
   1baa8:	cmp	r0, #46	; 0x2e
   1baac:	beq	1bac8 <main@@Base+0x8724>
   1bab0:	cmp	r0, #34	; 0x22
   1bab4:	bne	1bae4 <main@@Base+0x8740>
   1bab8:	ldr	r0, [sp, #32]
   1babc:	mov	r1, #0
   1bac0:	add	r9, r2, #1
   1bac4:	b	1baf0 <main@@Base+0x874c>
   1bac8:	mov	r1, r2
   1bacc:	mov	r0, r6
   1bad0:	mov	r2, r5
   1bad4:	mov	r3, #5
   1bad8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1badc:	mov	r9, r0
   1bae0:	b	1baf4 <main@@Base+0x8750>
   1bae4:	ldr	r0, [sp, #32]
   1bae8:	mov	r1, #1
   1baec:	mov	r9, r2
   1baf0:	str	r1, [r0]
   1baf4:	sub	lr, r5, r9
   1baf8:	mov	r1, #8
   1bafc:	cmp	lr, #8
   1bb00:	movcc	r1, lr
   1bb04:	and	r1, r1, #15
   1bb08:	sub	r2, r1, #1
   1bb0c:	cmp	r2, #7
   1bb10:	bhi	1c284 <main@@Base+0x8ee0>
   1bb14:	add	r0, pc, #36	; 0x24
   1bb18:	mov	r1, #0
   1bb1c:	mov	ip, #0
   1bb20:	mov	r8, #0
   1bb24:	mov	r7, #0
   1bb28:	mov	r3, #0
   1bb2c:	mov	r6, #0
   1bb30:	mov	r4, #0
   1bb34:	ldr	r5, [r0, r2, lsl #2]
   1bb38:	mov	r2, #0
   1bb3c:	add	pc, r0, r5
   1bb40:	andeq	r0, r0, r4, rrx
   1bb44:	andeq	r0, r0, ip, asr r0
   1bb48:	andeq	r0, r0, r4, asr r0
   1bb4c:	andeq	r0, r0, ip, asr #32
   1bb50:	andeq	r0, r0, r0, asr #32
   1bb54:	andeq	r0, r0, r4, lsr r0
   1bb58:	andeq	r0, r0, r4, lsr #32
   1bb5c:	andeq	r0, r0, r0, lsr #32
   1bb60:	ldrb	ip, [r9, #7]
   1bb64:	ldrb	r0, [r9, #6]
   1bb68:	mov	r8, r1
   1bb6c:	orr	r0, ip, r0, lsl #8
   1bb70:	mov	r1, r0
   1bb74:	ldrb	r0, [r9, #5]
   1bb78:	mov	r7, r8
   1bb7c:	orr	r1, r1, r0, lsl #16
   1bb80:	ldrb	r0, [r9, #4]
   1bb84:	mov	r3, r7
   1bb88:	orr	r1, r1, r0, lsl #24
   1bb8c:	ldrb	r0, [r9, #3]
   1bb90:	orr	r6, r0, r3
   1bb94:	ldrb	r0, [r9, #2]
   1bb98:	orr	r4, r6, r0, lsl #8
   1bb9c:	ldrb	r0, [r9, #1]
   1bba0:	orr	r2, r4, r0, lsl #16
   1bba4:	ldrb	r0, [r9]
   1bba8:	orr	r2, r2, r0, lsl #24
   1bbac:	movw	r0, #65535	; 0xffff
   1bbb0:	movt	r0, #26979	; 0x6963
   1bbb4:	cmp	r2, r0
   1bbb8:	bhi	1bc20 <main@@Base+0x887c>
   1bbbc:	movw	r0, #30062	; 0x756e
   1bbc0:	and	r1, r1, #-16777216	; 0xff000000
   1bbc4:	movt	r0, #25455	; 0x636f
   1bbc8:	eor	r1, r1, #1946157056	; 0x74000000
   1bbcc:	eor	r0, r2, r0
   1bbd0:	orrs	r0, r1, r0
   1bbd4:	bne	1c284 <main@@Base+0x8ee0>
   1bbd8:	cmp	lr, #6
   1bbdc:	mov	r7, r9
   1bbe0:	blt	1bf28 <main@@Base+0x8b84>
   1bbe4:	ldr	r2, [sp, #32]
   1bbe8:	mov	r1, r9
   1bbec:	ldrb	r0, [r1, #5]!
   1bbf0:	ldr	r2, [r2]
   1bbf4:	cmp	r2, #0
   1bbf8:	beq	1bcdc <main@@Base+0x8938>
   1bbfc:	cmp	r0, #33	; 0x21
   1bc00:	bcc	1bc10 <main@@Base+0x886c>
   1bc04:	cmp	r0, #58	; 0x3a
   1bc08:	mov	r7, r9
   1bc0c:	bne	1bf28 <main@@Base+0x8b84>
   1bc10:	ldr	r0, [sp, #32]
   1bc14:	mov	r2, #0
   1bc18:	str	r2, [r0]
   1bc1c:	b	1bcec <main@@Base+0x8948>
   1bc20:	movw	r1, #27648	; 0x6c00
   1bc24:	bic	r0, r2, #255	; 0xff
   1bc28:	movt	r1, #30305	; 0x7661
   1bc2c:	teq	r0, r1
   1bc30:	bne	1bc80 <main@@Base+0x88dc>
   1bc34:	cmp	lr, #4
   1bc38:	mov	r7, r9
   1bc3c:	blt	1c0a0 <main@@Base+0x8cfc>
   1bc40:	ldr	r2, [sp, #32]
   1bc44:	mov	r1, r9
   1bc48:	ldrb	r0, [r1, #3]!
   1bc4c:	ldr	r2, [r2]
   1bc50:	cmp	r2, #0
   1bc54:	beq	1bd10 <main@@Base+0x896c>
   1bc58:	cmp	r0, #33	; 0x21
   1bc5c:	bcc	1bc6c <main@@Base+0x88c8>
   1bc60:	cmp	r0, #58	; 0x3a
   1bc64:	mov	r7, r9
   1bc68:	bne	1c0a0 <main@@Base+0x8cfc>
   1bc6c:	ldr	r0, [sp, #32]
   1bc70:	mov	r2, #0
   1bc74:	str	r2, [r0]
   1bc78:	b	1bd20 <main@@Base+0x897c>
   1bc7c:	muleq	r2, ip, r4
   1bc80:	movw	r0, #0
   1bc84:	bfc	r2, #0, #16
   1bc88:	movt	r0, #26980	; 0x6964
   1bc8c:	teq	r2, r0
   1bc90:	bne	1c284 <main@@Base+0x8ee0>
   1bc94:	cmp	lr, #3
   1bc98:	mov	r1, r9
   1bc9c:	blt	1c230 <main@@Base+0x8e8c>
   1bca0:	ldr	r1, [sp, #32]
   1bca4:	mov	r2, r9
   1bca8:	ldrb	r0, [r2, #2]!
   1bcac:	ldr	r1, [r1]
   1bcb0:	cmp	r1, #0
   1bcb4:	beq	1bd44 <main@@Base+0x89a0>
   1bcb8:	cmp	r0, #33	; 0x21
   1bcbc:	bcc	1bccc <main@@Base+0x8928>
   1bcc0:	cmp	r0, #58	; 0x3a
   1bcc4:	mov	r1, r9
   1bcc8:	bne	1c230 <main@@Base+0x8e8c>
   1bccc:	ldr	r0, [sp, #32]
   1bcd0:	mov	r1, #0
   1bcd4:	str	r1, [r0]
   1bcd8:	b	1bd54 <main@@Base+0x89b0>
   1bcdc:	cmp	r0, #34	; 0x22
   1bce0:	mov	r7, r9
   1bce4:	bne	1bf28 <main@@Base+0x8b84>
   1bce8:	add	r1, r9, #6
   1bcec:	ldr	r0, [sp, #44]	; 0x2c
   1bcf0:	sub	r0, r0, r1
   1bcf4:	cmp	r0, #2
   1bcf8:	blt	1bd8c <main@@Base+0x89e8>
   1bcfc:	ldrb	r0, [r1]
   1bd00:	cmp	r0, #32
   1bd04:	bls	1bd78 <main@@Base+0x89d4>
   1bd08:	mov	r7, r1
   1bd0c:	b	1bd9c <main@@Base+0x89f8>
   1bd10:	cmp	r0, #34	; 0x22
   1bd14:	mov	r7, r9
   1bd18:	bne	1c0a0 <main@@Base+0x8cfc>
   1bd1c:	add	r1, r9, #4
   1bd20:	ldr	r0, [sp, #44]	; 0x2c
   1bd24:	sub	r0, r0, r1
   1bd28:	cmp	r0, #2
   1bd2c:	blt	1be10 <main@@Base+0x8a6c>
   1bd30:	ldrb	r0, [r1]
   1bd34:	cmp	r0, #32
   1bd38:	bls	1bdfc <main@@Base+0x8a58>
   1bd3c:	mov	r7, r1
   1bd40:	b	1be20 <main@@Base+0x8a7c>
   1bd44:	cmp	r0, #34	; 0x22
   1bd48:	mov	r1, r9
   1bd4c:	bne	1c230 <main@@Base+0x8e8c>
   1bd50:	add	r2, r9, #3
   1bd54:	ldr	r0, [sp, #44]	; 0x2c
   1bd58:	sub	r0, r0, r2
   1bd5c:	cmp	r0, #2
   1bd60:	blt	1be98 <main@@Base+0x8af4>
   1bd64:	ldrb	r0, [r2]
   1bd68:	cmp	r0, #32
   1bd6c:	bls	1be84 <main@@Base+0x8ae0>
   1bd70:	mov	r1, r2
   1bd74:	b	1beac <main@@Base+0x8b08>
   1bd78:	bne	1bd8c <main@@Base+0x89e8>
   1bd7c:	mov	r7, r1
   1bd80:	ldrb	r0, [r7, #1]!
   1bd84:	cmp	r0, #32
   1bd88:	bhi	1bd9c <main@@Base+0x89f8>
   1bd8c:	ldr	r0, [sp, #40]	; 0x28
   1bd90:	ldr	r2, [sp, #44]	; 0x2c
   1bd94:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1bd98:	mov	r7, r0
   1bd9c:	ldr	r0, [sp, #44]	; 0x2c
   1bda0:	cmp	r7, r0
   1bda4:	beq	1bde4 <main@@Base+0x8a40>
   1bda8:	ldrb	r0, [r7]
   1bdac:	cmp	r0, #58	; 0x3a
   1bdb0:	bne	1bde4 <main@@Base+0x8a40>
   1bdb4:	ldr	r0, [sp, #44]	; 0x2c
   1bdb8:	add	r1, r7, #1
   1bdbc:	sub	r0, r0, r1
   1bdc0:	cmp	r0, #2
   1bdc4:	blt	1bf18 <main@@Base+0x8b74>
   1bdc8:	ldrb	r0, [r1]
   1bdcc:	cmp	r0, #32
   1bdd0:	bls	1bf08 <main@@Base+0x8b64>
   1bdd4:	mov	r7, r1
   1bdd8:	cmp	r9, r7
   1bddc:	bne	1bf30 <main@@Base+0x8b8c>
   1bde0:	b	1c284 <main@@Base+0x8ee0>
   1bde4:	ldr	r0, [sp, #40]	; 0x28
   1bde8:	ldr	r2, [sp, #44]	; 0x2c
   1bdec:	mov	r1, r7
   1bdf0:	mov	r3, #4
   1bdf4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1bdf8:	b	1bf24 <main@@Base+0x8b80>
   1bdfc:	bne	1be10 <main@@Base+0x8a6c>
   1be00:	mov	r7, r1
   1be04:	ldrb	r0, [r7, #1]!
   1be08:	cmp	r0, #32
   1be0c:	bhi	1be20 <main@@Base+0x8a7c>
   1be10:	ldr	r0, [sp, #40]	; 0x28
   1be14:	ldr	r2, [sp, #44]	; 0x2c
   1be18:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1be1c:	mov	r7, r0
   1be20:	ldr	r0, [sp, #44]	; 0x2c
   1be24:	cmp	r7, r0
   1be28:	beq	1be68 <main@@Base+0x8ac4>
   1be2c:	ldrb	r0, [r7]
   1be30:	cmp	r0, #58	; 0x3a
   1be34:	bne	1be68 <main@@Base+0x8ac4>
   1be38:	ldr	r0, [sp, #44]	; 0x2c
   1be3c:	add	r1, r7, #1
   1be40:	sub	r0, r0, r1
   1be44:	cmp	r0, #2
   1be48:	blt	1c090 <main@@Base+0x8cec>
   1be4c:	ldrb	r0, [r1]
   1be50:	cmp	r0, #32
   1be54:	bls	1c080 <main@@Base+0x8cdc>
   1be58:	mov	r7, r1
   1be5c:	cmp	r9, r7
   1be60:	bne	1c0a8 <main@@Base+0x8d04>
   1be64:	b	1c284 <main@@Base+0x8ee0>
   1be68:	ldr	r0, [sp, #40]	; 0x28
   1be6c:	ldr	r2, [sp, #44]	; 0x2c
   1be70:	mov	r1, r7
   1be74:	mov	r3, #4
   1be78:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1be7c:	b	1c09c <main@@Base+0x8cf8>
   1be80:	andeq	ip, r2, ip, asr #5
   1be84:	bne	1be98 <main@@Base+0x8af4>
   1be88:	mov	r1, r2
   1be8c:	ldrb	r0, [r1, #1]!
   1be90:	cmp	r0, #32
   1be94:	bhi	1beac <main@@Base+0x8b08>
   1be98:	mov	r1, r2
   1be9c:	ldr	r0, [sp, #40]	; 0x28
   1bea0:	ldr	r2, [sp, #44]	; 0x2c
   1bea4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1bea8:	mov	r1, r0
   1beac:	ldr	r0, [sp, #44]	; 0x2c
   1beb0:	cmp	r1, r0
   1beb4:	beq	1bef4 <main@@Base+0x8b50>
   1beb8:	ldrb	r0, [r1]
   1bebc:	cmp	r0, #58	; 0x3a
   1bec0:	bne	1bef4 <main@@Base+0x8b50>
   1bec4:	ldr	r0, [sp, #44]	; 0x2c
   1bec8:	add	r2, r1, #1
   1becc:	sub	r0, r0, r2
   1bed0:	cmp	r0, #2
   1bed4:	blt	1c21c <main@@Base+0x8e78>
   1bed8:	ldrb	r0, [r2]
   1bedc:	cmp	r0, #32
   1bee0:	bls	1c20c <main@@Base+0x8e68>
   1bee4:	mov	r1, r2
   1bee8:	cmp	r9, r1
   1beec:	bne	1c238 <main@@Base+0x8e94>
   1bef0:	b	1c284 <main@@Base+0x8ee0>
   1bef4:	ldr	r0, [sp, #40]	; 0x28
   1bef8:	ldr	r2, [sp, #44]	; 0x2c
   1befc:	mov	r3, #4
   1bf00:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1bf04:	b	1c22c <main@@Base+0x8e88>
   1bf08:	bne	1bf18 <main@@Base+0x8b74>
   1bf0c:	ldrb	r0, [r7, #2]!
   1bf10:	cmp	r0, #32
   1bf14:	bhi	1bf28 <main@@Base+0x8b84>
   1bf18:	ldr	r0, [sp, #40]	; 0x28
   1bf1c:	ldr	r2, [sp, #44]	; 0x2c
   1bf20:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1bf24:	mov	r7, r0
   1bf28:	cmp	r9, r7
   1bf2c:	beq	1c284 <main@@Base+0x8ee0>
   1bf30:	ldr	r0, [sp, #44]	; 0x2c
   1bf34:	mov	r6, #0
   1bf38:	str	r6, [fp, #-52]	; 0xffffffcc
   1bf3c:	str	r6, [fp, #-56]	; 0xffffffc8
   1bf40:	strh	r6, [fp, #-60]	; 0xffffffc4
   1bf44:	str	r6, [sp, #56]	; 0x38
   1bf48:	cmp	r7, r0
   1bf4c:	beq	1bf98 <main@@Base+0x8bf4>
   1bf50:	sub	r0, fp, #56	; 0x38
   1bf54:	ldr	r2, [sp, #44]	; 0x2c
   1bf58:	mov	r1, r7
   1bf5c:	add	r3, sp, #56	; 0x38
   1bf60:	str	r0, [sp]
   1bf64:	ldr	r0, [sp, #40]	; 0x28
   1bf68:	bl	31418 <flatcc_json_parser_integer@@Base>
   1bf6c:	cmp	r0, r7
   1bf70:	beq	1bfa8 <main@@Base+0x8c04>
   1bf74:	mov	r4, r0
   1bf78:	ldr	r0, [sp, #56]	; 0x38
   1bf7c:	cmp	r0, #0
   1bf80:	beq	1bfb8 <main@@Base+0x8c14>
   1bf84:	ldr	r0, [sp, #40]	; 0x28
   1bf88:	ldr	r2, [sp, #44]	; 0x2c
   1bf8c:	mov	r1, r4
   1bf90:	mov	r3, #8
   1bf94:	b	1bfdc <main@@Base+0x8c38>
   1bf98:	ldr	r4, [sp, #44]	; 0x2c
   1bf9c:	cmp	r7, r4
   1bfa0:	bne	1c024 <main@@Base+0x8c80>
   1bfa4:	b	1bfec <main@@Base+0x8c48>
   1bfa8:	mov	r4, r7
   1bfac:	cmp	r7, r4
   1bfb0:	bne	1c024 <main@@Base+0x8c80>
   1bfb4:	b	1bfec <main@@Base+0x8c48>
   1bfb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bfbc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bfc0:	subs	r2, r0, #65536	; 0x10000
   1bfc4:	sbcs	r1, r1, #0
   1bfc8:	bcc	1c068 <main@@Base+0x8cc4>
   1bfcc:	ldr	r0, [sp, #40]	; 0x28
   1bfd0:	ldr	r2, [sp, #44]	; 0x2c
   1bfd4:	mov	r1, r4
   1bfd8:	mov	r3, #7
   1bfdc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1bfe0:	mov	r4, r0
   1bfe4:	cmp	r7, r4
   1bfe8:	bne	1c024 <main@@Base+0x8c80>
   1bfec:	sub	r0, fp, #60	; 0x3c
   1bff0:	ldr	r2, [sp, #44]	; 0x2c
   1bff4:	mov	r1, r7
   1bff8:	str	r0, [sp]
   1bffc:	ldr	r0, [sp, #40]	; 0x28
   1c000:	ldr	r3, [pc, #3972]	; 1cf8c <main@@Base+0x9be8>
   1c004:	add	r3, pc, r3
   1c008:	bl	295cc <main@@Base+0x16228>
   1c00c:	cmp	r0, r7
   1c010:	mov	r4, r0
   1c014:	ldrne	r0, [sp, #44]	; 0x2c
   1c018:	cmpne	r4, r0
   1c01c:	beq	194c8 <main@@Base+0x6124>
   1c020:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1c024:	movw	r0, #65535	; 0xffff
   1c028:	tst	r6, r0
   1c02c:	bne	1c040 <main@@Base+0x8c9c>
   1c030:	ldr	r0, [sp, #40]	; 0x28
   1c034:	ldrb	r0, [r0, #8]
   1c038:	tst	r0, #2
   1c03c:	beq	1c278 <main@@Base+0x8ed4>
   1c040:	ldr	r0, [sp, #40]	; 0x28
   1c044:	mov	r1, #2
   1c048:	mov	r2, #2
   1c04c:	mov	r3, #2
   1c050:	ldr	r0, [r0]
   1c054:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   1c058:	cmp	r0, #0
   1c05c:	beq	194c8 <main@@Base+0x6124>
   1c060:	strh	r6, [r0]
   1c064:	b	1c278 <main@@Base+0x8ed4>
   1c068:	mov	r6, r0
   1c06c:	strh	r0, [fp, #-60]	; 0xffffffc4
   1c070:	cmp	r7, r4
   1c074:	bne	1c024 <main@@Base+0x8c80>
   1c078:	b	1bfec <main@@Base+0x8c48>
   1c07c:	andeq	ip, r2, r8, lsr #32
   1c080:	bne	1c090 <main@@Base+0x8cec>
   1c084:	ldrb	r0, [r7, #2]!
   1c088:	cmp	r0, #32
   1c08c:	bhi	1c0a0 <main@@Base+0x8cfc>
   1c090:	ldr	r0, [sp, #40]	; 0x28
   1c094:	ldr	r2, [sp, #44]	; 0x2c
   1c098:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c09c:	mov	r7, r0
   1c0a0:	cmp	r9, r7
   1c0a4:	beq	1c284 <main@@Base+0x8ee0>
   1c0a8:	ldr	r0, [sp, #44]	; 0x2c
   1c0ac:	mov	r6, #0
   1c0b0:	str	r6, [fp, #-52]	; 0xffffffcc
   1c0b4:	str	r6, [fp, #-56]	; 0xffffffc8
   1c0b8:	str	r6, [sp, #60]	; 0x3c
   1c0bc:	str	r6, [sp, #56]	; 0x38
   1c0c0:	str	r6, [fp, #-60]	; 0xffffffc4
   1c0c4:	cmp	r7, r0
   1c0c8:	beq	1c124 <main@@Base+0x8d80>
   1c0cc:	sub	r0, fp, #56	; 0x38
   1c0d0:	ldr	r2, [sp, #44]	; 0x2c
   1c0d4:	mov	r1, r7
   1c0d8:	sub	r3, fp, #60	; 0x3c
   1c0dc:	str	r0, [sp]
   1c0e0:	ldr	r0, [sp, #40]	; 0x28
   1c0e4:	bl	31418 <flatcc_json_parser_integer@@Base>
   1c0e8:	cmp	r0, r7
   1c0ec:	beq	1c12c <main@@Base+0x8d88>
   1c0f0:	sub	r9, fp, #60	; 0x3c
   1c0f4:	mov	r4, r0
   1c0f8:	ldm	r9, {r0, r6, r9}
   1c0fc:	cmp	r0, #0
   1c100:	beq	1c144 <main@@Base+0x8da0>
   1c104:	subs	r0, r6, #1
   1c108:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1c10c:	bcc	1c178 <main@@Base+0x8dd4>
   1c110:	ldr	r0, [sp, #40]	; 0x28
   1c114:	ldr	r2, [sp, #44]	; 0x2c
   1c118:	mov	r1, r4
   1c11c:	mov	r3, #8
   1c120:	b	1c15c <main@@Base+0x8db8>
   1c124:	ldr	r4, [sp, #44]	; 0x2c
   1c128:	b	1c168 <main@@Base+0x8dc4>
   1c12c:	mov	r6, #0
   1c130:	mov	r9, #0
   1c134:	mov	r4, r7
   1c138:	cmp	r7, r4
   1c13c:	bne	1c1cc <main@@Base+0x8e28>
   1c140:	b	1c190 <main@@Base+0x8dec>
   1c144:	cmn	r9, #1
   1c148:	bgt	1c180 <main@@Base+0x8ddc>
   1c14c:	ldr	r0, [sp, #40]	; 0x28
   1c150:	ldr	r2, [sp, #44]	; 0x2c
   1c154:	mov	r1, r4
   1c158:	mov	r3, #7
   1c15c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1c160:	mov	r4, r0
   1c164:	mov	r6, #0
   1c168:	mov	r9, #0
   1c16c:	cmp	r7, r4
   1c170:	bne	1c1cc <main@@Base+0x8e28>
   1c174:	b	1c190 <main@@Base+0x8dec>
   1c178:	rsbs	r6, r6, #0
   1c17c:	rsc	r9, r9, #0
   1c180:	str	r6, [sp, #56]	; 0x38
   1c184:	str	r9, [sp, #60]	; 0x3c
   1c188:	cmp	r7, r4
   1c18c:	bne	1c1cc <main@@Base+0x8e28>
   1c190:	add	r0, sp, #56	; 0x38
   1c194:	ldr	r2, [sp, #44]	; 0x2c
   1c198:	mov	r1, r7
   1c19c:	str	r0, [sp]
   1c1a0:	ldr	r0, [sp, #40]	; 0x28
   1c1a4:	ldr	r3, [pc, #4068]	; 1d190 <main@@Base+0x9dec>
   1c1a8:	add	r3, pc, r3
   1c1ac:	bl	2368c <main@@Base+0x102e8>
   1c1b0:	cmp	r0, r7
   1c1b4:	mov	r4, r0
   1c1b8:	ldrne	r0, [sp, #44]	; 0x2c
   1c1bc:	cmpne	r4, r0
   1c1c0:	beq	194c8 <main@@Base+0x6124>
   1c1c4:	ldr	r6, [sp, #56]	; 0x38
   1c1c8:	ldr	r9, [sp, #60]	; 0x3c
   1c1cc:	orrs	r0, r6, r9
   1c1d0:	bne	1c1e4 <main@@Base+0x8e40>
   1c1d4:	ldr	r0, [sp, #40]	; 0x28
   1c1d8:	ldrb	r0, [r0, #8]
   1c1dc:	tst	r0, #2
   1c1e0:	beq	1c278 <main@@Base+0x8ed4>
   1c1e4:	ldr	r0, [sp, #40]	; 0x28
   1c1e8:	mov	r1, #1
   1c1ec:	mov	r2, #8
   1c1f0:	mov	r3, #8
   1c1f4:	ldr	r0, [r0]
   1c1f8:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   1c1fc:	cmp	r0, #0
   1c200:	beq	194c8 <main@@Base+0x6124>
   1c204:	stm	r0, {r6, r9}
   1c208:	b	1c278 <main@@Base+0x8ed4>
   1c20c:	bne	1c21c <main@@Base+0x8e78>
   1c210:	ldrb	r0, [r1, #2]!
   1c214:	cmp	r0, #32
   1c218:	bhi	1c230 <main@@Base+0x8e8c>
   1c21c:	mov	r1, r2
   1c220:	ldr	r0, [sp, #40]	; 0x28
   1c224:	ldr	r2, [sp, #44]	; 0x2c
   1c228:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c22c:	mov	r1, r0
   1c230:	cmp	r9, r1
   1c234:	beq	1c284 <main@@Base+0x8ee0>
   1c238:	ldr	r0, [sp, #40]	; 0x28
   1c23c:	ldr	r2, [sp, #44]	; 0x2c
   1c240:	add	r3, sp, #64	; 0x40
   1c244:	bl	319ac <flatcc_json_parser_build_string@@Base>
   1c248:	mov	r4, r0
   1c24c:	ldr	r0, [sp, #64]	; 0x40
   1c250:	cmp	r0, #0
   1c254:	beq	194c8 <main@@Base+0x6124>
   1c258:	ldr	r0, [sp, #40]	; 0x28
   1c25c:	mov	r1, #0
   1c260:	ldr	r0, [r0]
   1c264:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   1c268:	cmp	r0, #0
   1c26c:	beq	194c8 <main@@Base+0x6124>
   1c270:	ldr	r1, [sp, #64]	; 0x40
   1c274:	str	r1, [r0]
   1c278:	ldr	r5, [sp, #44]	; 0x2c
   1c27c:	ldr	r6, [sp, #40]	; 0x28
   1c280:	b	1c2a0 <main@@Base+0x8efc>
   1c284:	ldr	r6, [sp, #40]	; 0x28
   1c288:	ldr	r5, [sp, #44]	; 0x2c
   1c28c:	mov	r1, r9
   1c290:	mov	r0, r6
   1c294:	mov	r2, r5
   1c298:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   1c29c:	mov	r4, r0
   1c2a0:	sub	r0, r5, r4
   1c2a4:	cmp	r0, #2
   1c2a8:	blt	1c2dc <main@@Base+0x8f38>
   1c2ac:	ldrb	r0, [r4]
   1c2b0:	cmp	r0, #32
   1c2b4:	bls	1c2c8 <main@@Base+0x8f24>
   1c2b8:	mov	r2, r4
   1c2bc:	cmp	r2, r5
   1c2c0:	bne	1c2f8 <main@@Base+0x8f54>
   1c2c4:	b	1d2dc <main@@Base+0x9f38>
   1c2c8:	bne	1c2dc <main@@Base+0x8f38>
   1c2cc:	mov	r2, r4
   1c2d0:	ldrb	r0, [r2, #1]!
   1c2d4:	cmp	r0, #32
   1c2d8:	bhi	1c2f0 <main@@Base+0x8f4c>
   1c2dc:	mov	r0, r6
   1c2e0:	mov	r1, r4
   1c2e4:	mov	r2, r5
   1c2e8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c2ec:	mov	r2, r0
   1c2f0:	cmp	r2, r5
   1c2f4:	beq	1d2dc <main@@Base+0x9f38>
   1c2f8:	ldrb	r0, [r2]
   1c2fc:	cmp	r0, #44	; 0x2c
   1c300:	bne	1d2e4 <main@@Base+0x9f40>
   1c304:	add	r1, r2, #1
   1c308:	sub	r0, r5, r1
   1c30c:	cmp	r0, #2
   1c310:	blt	1c340 <main@@Base+0x8f9c>
   1c314:	ldrb	r0, [r1]
   1c318:	cmp	r0, #32
   1c31c:	bls	1c330 <main@@Base+0x8f8c>
   1c320:	mov	r2, r1
   1c324:	cmp	r2, r5
   1c328:	bne	1c358 <main@@Base+0x8fb4>
   1c32c:	b	1d330 <main@@Base+0x9f8c>
   1c330:	bne	1c340 <main@@Base+0x8f9c>
   1c334:	ldrb	r0, [r2, #2]!
   1c338:	cmp	r0, #32
   1c33c:	bhi	1c350 <main@@Base+0x8fac>
   1c340:	mov	r0, r6
   1c344:	mov	r2, r5
   1c348:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c34c:	mov	r2, r0
   1c350:	cmp	r2, r5
   1c354:	beq	1d330 <main@@Base+0x9f8c>
   1c358:	ldrb	r0, [r2]
   1c35c:	cmp	r0, #125	; 0x7d
   1c360:	bne	1ba98 <main@@Base+0x86f4>
   1c364:	add	r1, r2, #1
   1c368:	sub	r0, r5, r1
   1c36c:	cmp	r0, #2
   1c370:	blt	1d50c <main@@Base+0xa168>
   1c374:	b	1d300 <main@@Base+0x9f5c>
   1c378:	cmp	r0, #93	; 0x5d
   1c37c:	bne	1d270 <main@@Base+0x9ecc>
   1c380:	ldr	r5, [sp, #44]	; 0x2c
   1c384:	ldr	r8, [sp, #40]	; 0x28
   1c388:	add	r1, r2, #1
   1c38c:	sub	r0, r5, r1
   1c390:	cmp	r0, #2
   1c394:	ldr	sl, [sp, #36]	; 0x24
   1c398:	blt	1d424 <main@@Base+0xa080>
   1c39c:	ldrb	r0, [r1]
   1c3a0:	cmp	r0, #32
   1c3a4:	bls	1d404 <main@@Base+0xa060>
   1c3a8:	ldr	r5, [sp, #44]	; 0x2c
   1c3ac:	ldr	r8, [sp, #40]	; 0x28
   1c3b0:	ldr	sl, [sp, #36]	; 0x24
   1c3b4:	mov	r4, r1
   1c3b8:	b	19924 <main@@Base+0x6580>
   1c3bc:	ldr	r8, [sp, #40]	; 0x28
   1c3c0:	ldr	r5, [sp, #44]	; 0x2c
   1c3c4:	mov	r1, r2
   1c3c8:	mov	r0, r8
   1c3cc:	mov	r2, r5
   1c3d0:	mov	r3, #9
   1c3d4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1c3d8:	ldr	sl, [sp, #36]	; 0x24
   1c3dc:	b	18a04 <main@@Base+0x5660>
   1c3e0:	mov	r4, r5
   1c3e4:	b	1d454 <main@@Base+0xa0b0>
   1c3e8:	mov	r0, r8
   1c3ec:	mov	r1, r5
   1c3f0:	b	1d280 <main@@Base+0x9edc>
   1c3f4:	cmp	r0, #93	; 0x5d
   1c3f8:	bne	1d2c4 <main@@Base+0x9f20>
   1c3fc:	ldr	r0, [sp, #44]	; 0x2c
   1c400:	add	r1, r4, #1
   1c404:	sub	r0, r0, r1
   1c408:	cmp	r0, #2
   1c40c:	blt	1d444 <main@@Base+0xa0a0>
   1c410:	b	1ce58 <main@@Base+0x9ab4>
   1c414:	mov	r4, r5
   1c418:	b	19000 <main@@Base+0x5c5c>
   1c41c:	mov	r0, r8
   1c420:	mov	r1, r5
   1c424:	mov	r2, r5
   1c428:	b	1d2d0 <main@@Base+0x9f2c>
   1c42c:	ldr	r5, [sp, #44]	; 0x2c
   1c430:	ldr	r8, [sp, #40]	; 0x28
   1c434:	ldr	sl, [sp, #36]	; 0x24
   1c438:	bne	1c44c <main@@Base+0x90a8>
   1c43c:	ldrb	r0, [r2, #2]!
   1c440:	cmp	r0, #32
   1c444:	mov	r4, r2
   1c448:	bhi	1ccbc <main@@Base+0x9918>
   1c44c:	mov	r0, r8
   1c450:	mov	r2, r5
   1c454:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c458:	b	1c4c0 <main@@Base+0x911c>
   1c45c:	ldr	r0, [r8]
   1c460:	mov	r1, #1
   1c464:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1c468:	mov	r9, r0
   1c46c:	cmp	r0, #0
   1c470:	beq	1346c <main@@Base+0xc8>
   1c474:	cmp	r4, r5
   1c478:	beq	1c4ac <main@@Base+0x9108>
   1c47c:	ldrb	r0, [r4]
   1c480:	cmp	r0, #123	; 0x7b
   1c484:	bne	1c4ac <main@@Base+0x9108>
   1c488:	add	r1, r4, #1
   1c48c:	sub	r0, r5, r1
   1c490:	cmp	r0, #2
   1c494:	blt	1c4dc <main@@Base+0x9138>
   1c498:	ldrb	r0, [r1]
   1c49c:	cmp	r0, #32
   1c4a0:	bls	1c4cc <main@@Base+0x9128>
   1c4a4:	mov	r4, r1
   1c4a8:	b	1c4ec <main@@Base+0x9148>
   1c4ac:	mov	r0, r8
   1c4b0:	mov	r1, r4
   1c4b4:	mov	r2, r5
   1c4b8:	mov	r3, #21
   1c4bc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1c4c0:	mov	r4, r0
   1c4c4:	b	1ccbc <main@@Base+0x9918>
   1c4c8:	muleq	r2, r8, ip
   1c4cc:	bne	1c4dc <main@@Base+0x9138>
   1c4d0:	ldrb	r0, [r4, #2]!
   1c4d4:	cmp	r0, #32
   1c4d8:	bhi	1c4ec <main@@Base+0x9148>
   1c4dc:	mov	r0, r8
   1c4e0:	mov	r2, r5
   1c4e4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c4e8:	mov	r4, r0
   1c4ec:	cmp	r4, r5
   1c4f0:	mov	r2, r5
   1c4f4:	beq	1c5f4 <main@@Base+0x9250>
   1c4f8:	ldrb	r0, [r4]
   1c4fc:	cmp	r0, #125	; 0x7d
   1c500:	bne	1c540 <main@@Base+0x919c>
   1c504:	add	r1, r4, #1
   1c508:	sub	r0, r5, r1
   1c50c:	cmp	r0, #2
   1c510:	blt	1c44c <main@@Base+0x90a8>
   1c514:	ldrb	r0, [r1]
   1c518:	cmp	r0, #32
   1c51c:	bhi	1cc7c <main@@Base+0x98d8>
   1c520:	ldr	r5, [sp, #44]	; 0x2c
   1c524:	ldr	r8, [sp, #40]	; 0x28
   1c528:	ldr	sl, [sp, #36]	; 0x24
   1c52c:	bne	1c44c <main@@Base+0x90a8>
   1c530:	ldrb	r0, [r4, #2]!
   1c534:	cmp	r0, #32
   1c538:	bls	1c44c <main@@Base+0x90a8>
   1c53c:	b	1ccbc <main@@Base+0x9918>
   1c540:	mov	r2, r4
   1c544:	b	1c5f4 <main@@Base+0x9250>
   1c548:	mov	r1, r5
   1c54c:	cmp	r7, r1
   1c550:	bne	1c5d0 <main@@Base+0x922c>
   1c554:	b	1c598 <main@@Base+0x91f4>
   1c558:	mov	r1, r7
   1c55c:	cmp	r7, r1
   1c560:	bne	1c5d0 <main@@Base+0x922c>
   1c564:	b	1c598 <main@@Base+0x91f4>
   1c568:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c56c:	cmp	r0, #0
   1c570:	beq	1c5d8 <main@@Base+0x9234>
   1c574:	ldr	r8, [sp, #40]	; 0x28
   1c578:	ldr	r5, [sp, #44]	; 0x2c
   1c57c:	mov	r3, #7
   1c580:	mov	r0, r8
   1c584:	mov	r2, r5
   1c588:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1c58c:	mov	r1, r0
   1c590:	cmp	r7, r1
   1c594:	bne	1c5d0 <main@@Base+0x922c>
   1c598:	sub	r0, fp, #60	; 0x3c
   1c59c:	mov	r1, r7
   1c5a0:	mov	r2, r5
   1c5a4:	str	r0, [sp]
   1c5a8:	mov	r0, r8
   1c5ac:	ldr	r3, [pc, #4076]	; 1d5a0 <main@@Base+0xa1fc>
   1c5b0:	add	r3, pc, r3
   1c5b4:	bl	238e4 <main@@Base+0x10540>
   1c5b8:	mov	r1, r0
   1c5bc:	cmp	r0, r7
   1c5c0:	cmpne	r1, r5
   1c5c4:	beq	1cc2c <main@@Base+0x9888>
   1c5c8:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1c5cc:	ldr	r8, [sp, #40]	; 0x28
   1c5d0:	str	r4, [r9, #4]
   1c5d4:	b	1cb68 <main@@Base+0x97c4>
   1c5d8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c5dc:	ldr	r5, [sp, #44]	; 0x2c
   1c5e0:	ldr	r8, [sp, #40]	; 0x28
   1c5e4:	str	r4, [fp, #-60]	; 0xffffffc4
   1c5e8:	cmp	r7, r1
   1c5ec:	bne	1c5d0 <main@@Base+0x922c>
   1c5f0:	b	1c598 <main@@Base+0x91f4>
   1c5f4:	cmp	r2, r5
   1c5f8:	mov	sl, r5
   1c5fc:	beq	1c650 <main@@Base+0x92ac>
   1c600:	ldrb	r0, [r2]
   1c604:	cmp	r0, #46	; 0x2e
   1c608:	beq	1c624 <main@@Base+0x9280>
   1c60c:	cmp	r0, #34	; 0x22
   1c610:	bne	1c640 <main@@Base+0x929c>
   1c614:	ldr	r0, [sp, #32]
   1c618:	mov	r1, #0
   1c61c:	add	sl, r2, #1
   1c620:	b	1c64c <main@@Base+0x92a8>
   1c624:	mov	r1, r2
   1c628:	mov	r0, r8
   1c62c:	mov	r2, r5
   1c630:	mov	r3, #5
   1c634:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1c638:	mov	sl, r0
   1c63c:	b	1c650 <main@@Base+0x92ac>
   1c640:	ldr	r0, [sp, #32]
   1c644:	mov	r1, #1
   1c648:	mov	sl, r2
   1c64c:	str	r1, [r0]
   1c650:	sub	lr, r5, sl
   1c654:	mov	r1, #8
   1c658:	cmp	lr, #8
   1c65c:	movcc	r1, lr
   1c660:	and	r1, r1, #15
   1c664:	sub	r2, r1, #1
   1c668:	cmp	r2, #7
   1c66c:	bhi	1cb54 <main@@Base+0x97b0>
   1c670:	add	r0, pc, #36	; 0x24
   1c674:	mov	r1, #0
   1c678:	mov	ip, #0
   1c67c:	mov	r8, #0
   1c680:	mov	r7, #0
   1c684:	mov	r3, #0
   1c688:	mov	r6, #0
   1c68c:	mov	r4, #0
   1c690:	ldr	r5, [r0, r2, lsl #2]
   1c694:	mov	r2, #0
   1c698:	add	pc, r0, r5
   1c69c:	andeq	r0, r0, r8, rrx
   1c6a0:	andeq	r0, r0, r0, rrx
   1c6a4:	andeq	r0, r0, r8, asr r0
   1c6a8:	andeq	r0, r0, r0, asr r0
   1c6ac:	andeq	r0, r0, r4, asr #32
   1c6b0:	andeq	r0, r0, r8, lsr r0
   1c6b4:	andeq	r0, r0, r8, lsr #32
   1c6b8:	andeq	r0, r0, r4, lsr #32
   1c6bc:	andeq	fp, r2, r0, lsl #20
   1c6c0:	ldrb	ip, [sl, #7]
   1c6c4:	ldrb	r0, [sl, #6]
   1c6c8:	mov	r8, r1
   1c6cc:	orr	r0, ip, r0, lsl #8
   1c6d0:	mov	r1, r0
   1c6d4:	ldrb	r0, [sl, #5]
   1c6d8:	mov	r7, r8
   1c6dc:	orr	r1, r1, r0, lsl #16
   1c6e0:	ldrb	r0, [sl, #4]
   1c6e4:	mov	r3, r7
   1c6e8:	orr	r1, r1, r0, lsl #24
   1c6ec:	ldrb	r0, [sl, #3]
   1c6f0:	orr	r6, r0, r3
   1c6f4:	ldrb	r0, [sl, #2]
   1c6f8:	orr	r4, r6, r0, lsl #8
   1c6fc:	ldrb	r0, [sl, #1]
   1c700:	orr	r2, r4, r0, lsl #16
   1c704:	ldrb	r0, [sl]
   1c708:	movw	r3, #0
   1c70c:	movt	r3, #26980	; 0x6964
   1c710:	orr	r2, r2, r0, lsl #24
   1c714:	mov	r0, r2
   1c718:	bfc	r0, #0, #16
   1c71c:	teq	r0, r3
   1c720:	bne	1c774 <main@@Base+0x93d0>
   1c724:	ldr	r5, [sp, #44]	; 0x2c
   1c728:	ldr	r8, [sp, #40]	; 0x28
   1c72c:	cmp	lr, #3
   1c730:	mov	r7, sl
   1c734:	blt	1c9b4 <main@@Base+0x9610>
   1c738:	ldr	r2, [sp, #32]
   1c73c:	mov	r1, sl
   1c740:	ldrb	r0, [r1, #2]!
   1c744:	ldr	r2, [r2]
   1c748:	cmp	r2, #0
   1c74c:	beq	1c7e4 <main@@Base+0x9440>
   1c750:	cmp	r0, #33	; 0x21
   1c754:	bcc	1c764 <main@@Base+0x93c0>
   1c758:	cmp	r0, #58	; 0x3a
   1c75c:	mov	r7, sl
   1c760:	bne	1c9b4 <main@@Base+0x9610>
   1c764:	ldr	r0, [sp, #32]
   1c768:	mov	r2, #0
   1c76c:	str	r2, [r0]
   1c770:	b	1c7f4 <main@@Base+0x9450>
   1c774:	movw	r0, #25445	; 0x6365
   1c778:	ldr	r5, [sp, #44]	; 0x2c
   1c77c:	ldr	r8, [sp, #40]	; 0x28
   1c780:	movt	r0, #24942	; 0x616e
   1c784:	eor	r0, r1, r0
   1c788:	movw	r1, #29556	; 0x7374
   1c78c:	movt	r1, #25705	; 0x6469
   1c790:	eor	r1, r2, r1
   1c794:	orrs	r0, r0, r1
   1c798:	bne	1cb54 <main@@Base+0x97b0>
   1c79c:	cmp	lr, #9
   1c7a0:	mov	r7, sl
   1c7a4:	blt	1caec <main@@Base+0x9748>
   1c7a8:	ldr	r2, [sp, #32]
   1c7ac:	mov	r1, sl
   1c7b0:	ldrb	r0, [r1, #8]!
   1c7b4:	ldr	r2, [r2]
   1c7b8:	cmp	r2, #0
   1c7bc:	beq	1c824 <main@@Base+0x9480>
   1c7c0:	cmp	r0, #33	; 0x21
   1c7c4:	bcc	1c7d4 <main@@Base+0x9430>
   1c7c8:	cmp	r0, #58	; 0x3a
   1c7cc:	mov	r7, sl
   1c7d0:	bne	1caec <main@@Base+0x9748>
   1c7d4:	ldr	r0, [sp, #32]
   1c7d8:	mov	r2, #0
   1c7dc:	str	r2, [r0]
   1c7e0:	b	1c834 <main@@Base+0x9490>
   1c7e4:	cmp	r0, #34	; 0x22
   1c7e8:	mov	r7, sl
   1c7ec:	bne	1c9b4 <main@@Base+0x9610>
   1c7f0:	add	r1, sl, #3
   1c7f4:	sub	r0, r5, r1
   1c7f8:	cmp	r0, #2
   1c7fc:	blt	1c880 <main@@Base+0x94dc>
   1c800:	ldrb	r0, [r1]
   1c804:	cmp	r0, #32
   1c808:	bls	1c864 <main@@Base+0x94c0>
   1c80c:	ldr	r5, [sp, #44]	; 0x2c
   1c810:	ldr	r8, [sp, #40]	; 0x28
   1c814:	mov	r7, r1
   1c818:	cmp	r7, r5
   1c81c:	bne	1c898 <main@@Base+0x94f4>
   1c820:	b	1c8d8 <main@@Base+0x9534>
   1c824:	cmp	r0, #34	; 0x22
   1c828:	mov	r7, sl
   1c82c:	bne	1caec <main@@Base+0x9748>
   1c830:	add	r1, sl, #9
   1c834:	ldr	r4, [sp, #44]	; 0x2c
   1c838:	sub	r0, r4, r1
   1c83c:	cmp	r0, #2
   1c840:	blt	1c908 <main@@Base+0x9564>
   1c844:	ldrb	r0, [r1]
   1c848:	cmp	r0, #32
   1c84c:	bls	1c8f0 <main@@Base+0x954c>
   1c850:	ldr	r4, [sp, #44]	; 0x2c
   1c854:	mov	r7, r1
   1c858:	cmp	r7, r4
   1c85c:	bne	1c920 <main@@Base+0x957c>
   1c860:	b	1c968 <main@@Base+0x95c4>
   1c864:	ldr	r5, [sp, #44]	; 0x2c
   1c868:	ldr	r8, [sp, #40]	; 0x28
   1c86c:	bne	1c880 <main@@Base+0x94dc>
   1c870:	mov	r7, r1
   1c874:	ldrb	r0, [r7, #1]!
   1c878:	cmp	r0, #32
   1c87c:	bhi	1c890 <main@@Base+0x94ec>
   1c880:	mov	r0, r8
   1c884:	mov	r2, r5
   1c888:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c88c:	mov	r7, r0
   1c890:	cmp	r7, r5
   1c894:	beq	1c8d8 <main@@Base+0x9534>
   1c898:	ldrb	r0, [r7]
   1c89c:	cmp	r0, #58	; 0x3a
   1c8a0:	bne	1c8d8 <main@@Base+0x9534>
   1c8a4:	add	r1, r7, #1
   1c8a8:	sub	r0, r5, r1
   1c8ac:	cmp	r0, #2
   1c8b0:	blt	1c9a4 <main@@Base+0x9600>
   1c8b4:	ldrb	r0, [r1]
   1c8b8:	cmp	r0, #32
   1c8bc:	bls	1c98c <main@@Base+0x95e8>
   1c8c0:	ldr	r5, [sp, #44]	; 0x2c
   1c8c4:	ldr	r8, [sp, #40]	; 0x28
   1c8c8:	mov	r7, r1
   1c8cc:	cmp	sl, r7
   1c8d0:	bne	1c9bc <main@@Base+0x9618>
   1c8d4:	b	1cb54 <main@@Base+0x97b0>
   1c8d8:	mov	r0, r8
   1c8dc:	mov	r1, r7
   1c8e0:	mov	r2, r5
   1c8e4:	mov	r3, #4
   1c8e8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1c8ec:	b	1c9b0 <main@@Base+0x960c>
   1c8f0:	ldr	r4, [sp, #44]	; 0x2c
   1c8f4:	bne	1c908 <main@@Base+0x9564>
   1c8f8:	mov	r7, r1
   1c8fc:	ldrb	r0, [r7, #1]!
   1c900:	cmp	r0, #32
   1c904:	bhi	1c918 <main@@Base+0x9574>
   1c908:	ldr	r0, [sp, #40]	; 0x28
   1c90c:	mov	r2, r4
   1c910:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c914:	mov	r7, r0
   1c918:	cmp	r7, r4
   1c91c:	beq	1c968 <main@@Base+0x95c4>
   1c920:	ldrb	r0, [r7]
   1c924:	cmp	r0, #58	; 0x3a
   1c928:	bne	1c968 <main@@Base+0x95c4>
   1c92c:	ldr	r5, [sp, #44]	; 0x2c
   1c930:	ldr	r8, [sp, #40]	; 0x28
   1c934:	add	r1, r7, #1
   1c938:	sub	r0, r5, r1
   1c93c:	cmp	r0, #2
   1c940:	blt	1cadc <main@@Base+0x9738>
   1c944:	ldrb	r0, [r1]
   1c948:	cmp	r0, #32
   1c94c:	bls	1cac4 <main@@Base+0x9720>
   1c950:	ldr	r5, [sp, #44]	; 0x2c
   1c954:	ldr	r8, [sp, #40]	; 0x28
   1c958:	mov	r7, r1
   1c95c:	cmp	sl, r7
   1c960:	bne	1caf4 <main@@Base+0x9750>
   1c964:	b	1cb54 <main@@Base+0x97b0>
   1c968:	ldr	r8, [sp, #40]	; 0x28
   1c96c:	ldr	r5, [sp, #44]	; 0x2c
   1c970:	mov	r1, r7
   1c974:	mov	r3, #4
   1c978:	mov	r0, r8
   1c97c:	mov	r2, r5
   1c980:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1c984:	b	1cae8 <main@@Base+0x9744>
   1c988:	andeq	fp, r2, r8, asr #15
   1c98c:	ldr	r5, [sp, #44]	; 0x2c
   1c990:	ldr	r8, [sp, #40]	; 0x28
   1c994:	bne	1c9a4 <main@@Base+0x9600>
   1c998:	ldrb	r0, [r7, #2]!
   1c99c:	cmp	r0, #32
   1c9a0:	bhi	1c9b4 <main@@Base+0x9610>
   1c9a4:	mov	r0, r8
   1c9a8:	mov	r2, r5
   1c9ac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1c9b0:	mov	r7, r0
   1c9b4:	cmp	sl, r7
   1c9b8:	beq	1cb54 <main@@Base+0x97b0>
   1c9bc:	mov	r4, #0
   1c9c0:	cmp	r7, r5
   1c9c4:	str	r4, [fp, #-52]	; 0xffffffcc
   1c9c8:	str	r4, [fp, #-56]	; 0xffffffc8
   1c9cc:	str	r4, [fp, #-60]	; 0xffffffc4
   1c9d0:	str	r4, [sp, #56]	; 0x38
   1c9d4:	beq	1ca1c <main@@Base+0x9678>
   1c9d8:	sub	r0, fp, #56	; 0x38
   1c9dc:	mov	r1, r7
   1c9e0:	mov	r2, r5
   1c9e4:	add	r3, sp, #56	; 0x38
   1c9e8:	str	r0, [sp]
   1c9ec:	mov	r0, r8
   1c9f0:	bl	31418 <flatcc_json_parser_integer@@Base>
   1c9f4:	cmp	r0, r7
   1c9f8:	beq	1ca2c <main@@Base+0x9688>
   1c9fc:	mov	r1, r0
   1ca00:	ldr	r0, [sp, #56]	; 0x38
   1ca04:	cmp	r0, #0
   1ca08:	beq	1ca3c <main@@Base+0x9698>
   1ca0c:	mov	r0, r8
   1ca10:	mov	r2, r5
   1ca14:	mov	r3, #8
   1ca18:	b	1ca5c <main@@Base+0x96b8>
   1ca1c:	mov	r1, r5
   1ca20:	cmp	r7, r1
   1ca24:	bne	1caa0 <main@@Base+0x96fc>
   1ca28:	b	1ca6c <main@@Base+0x96c8>
   1ca2c:	mov	r1, r7
   1ca30:	cmp	r7, r1
   1ca34:	bne	1caa0 <main@@Base+0x96fc>
   1ca38:	b	1ca6c <main@@Base+0x96c8>
   1ca3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ca40:	cmp	r0, #0
   1ca44:	beq	1caa8 <main@@Base+0x9704>
   1ca48:	ldr	r8, [sp, #40]	; 0x28
   1ca4c:	ldr	r5, [sp, #44]	; 0x2c
   1ca50:	mov	r3, #7
   1ca54:	mov	r0, r8
   1ca58:	mov	r2, r5
   1ca5c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ca60:	mov	r1, r0
   1ca64:	cmp	r7, r1
   1ca68:	bne	1caa0 <main@@Base+0x96fc>
   1ca6c:	sub	r0, fp, #60	; 0x3c
   1ca70:	mov	r1, r7
   1ca74:	mov	r2, r5
   1ca78:	str	r0, [sp]
   1ca7c:	mov	r0, r8
   1ca80:	ldr	r3, [pc, #2968]	; 1d620 <main@@Base+0xa27c>
   1ca84:	add	r3, pc, r3
   1ca88:	bl	238e4 <main@@Base+0x10540>
   1ca8c:	mov	r1, r0
   1ca90:	cmp	r0, r7
   1ca94:	cmpne	r1, r5
   1ca98:	beq	1cc2c <main@@Base+0x9888>
   1ca9c:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1caa0:	str	r4, [r9]
   1caa4:	b	1cb68 <main@@Base+0x97c4>
   1caa8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1caac:	ldr	r5, [sp, #44]	; 0x2c
   1cab0:	ldr	r8, [sp, #40]	; 0x28
   1cab4:	str	r4, [fp, #-60]	; 0xffffffc4
   1cab8:	cmp	r7, r1
   1cabc:	bne	1caa0 <main@@Base+0x96fc>
   1cac0:	b	1ca6c <main@@Base+0x96c8>
   1cac4:	ldr	r5, [sp, #44]	; 0x2c
   1cac8:	ldr	r8, [sp, #40]	; 0x28
   1cacc:	bne	1cadc <main@@Base+0x9738>
   1cad0:	ldrb	r0, [r7, #2]!
   1cad4:	cmp	r0, #32
   1cad8:	bhi	1caec <main@@Base+0x9748>
   1cadc:	mov	r0, r8
   1cae0:	mov	r2, r5
   1cae4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1cae8:	mov	r7, r0
   1caec:	cmp	sl, r7
   1caf0:	beq	1cb54 <main@@Base+0x97b0>
   1caf4:	mov	r4, #0
   1caf8:	cmp	r7, r5
   1cafc:	str	r4, [fp, #-52]	; 0xffffffcc
   1cb00:	str	r4, [fp, #-56]	; 0xffffffc8
   1cb04:	str	r4, [fp, #-60]	; 0xffffffc4
   1cb08:	str	r4, [sp, #56]	; 0x38
   1cb0c:	beq	1c548 <main@@Base+0x91a4>
   1cb10:	sub	r0, fp, #56	; 0x38
   1cb14:	mov	r1, r7
   1cb18:	mov	r2, r5
   1cb1c:	add	r3, sp, #56	; 0x38
   1cb20:	str	r0, [sp]
   1cb24:	mov	r0, r8
   1cb28:	bl	31418 <flatcc_json_parser_integer@@Base>
   1cb2c:	cmp	r0, r7
   1cb30:	beq	1c558 <main@@Base+0x91b4>
   1cb34:	mov	r1, r0
   1cb38:	ldr	r0, [sp, #56]	; 0x38
   1cb3c:	cmp	r0, #0
   1cb40:	beq	1c568 <main@@Base+0x91c4>
   1cb44:	ldr	r8, [sp, #40]	; 0x28
   1cb48:	ldr	r5, [sp, #44]	; 0x2c
   1cb4c:	mov	r3, #8
   1cb50:	b	1c580 <main@@Base+0x91dc>
   1cb54:	mov	r0, r8
   1cb58:	mov	r1, sl
   1cb5c:	mov	r2, r5
   1cb60:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   1cb64:	mov	r1, r0
   1cb68:	sub	r0, r5, r1
   1cb6c:	cmp	r0, #2
   1cb70:	blt	1cba4 <main@@Base+0x9800>
   1cb74:	ldrb	r0, [r1]
   1cb78:	cmp	r0, #32
   1cb7c:	bls	1cb90 <main@@Base+0x97ec>
   1cb80:	mov	r2, r1
   1cb84:	cmp	r2, r5
   1cb88:	bne	1cbbc <main@@Base+0x9818>
   1cb8c:	b	1cc44 <main@@Base+0x98a0>
   1cb90:	bne	1cba4 <main@@Base+0x9800>
   1cb94:	mov	r2, r1
   1cb98:	ldrb	r0, [r2, #1]!
   1cb9c:	cmp	r0, #32
   1cba0:	bhi	1cbb4 <main@@Base+0x9810>
   1cba4:	mov	r0, r8
   1cba8:	mov	r2, r5
   1cbac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1cbb0:	mov	r2, r0
   1cbb4:	cmp	r2, r5
   1cbb8:	beq	1cc44 <main@@Base+0x98a0>
   1cbbc:	ldrb	r0, [r2]
   1cbc0:	cmp	r0, #44	; 0x2c
   1cbc4:	bne	1cc4c <main@@Base+0x98a8>
   1cbc8:	add	r1, r2, #1
   1cbcc:	sub	r0, r5, r1
   1cbd0:	cmp	r0, #2
   1cbd4:	blt	1cc04 <main@@Base+0x9860>
   1cbd8:	ldrb	r0, [r1]
   1cbdc:	cmp	r0, #32
   1cbe0:	bls	1cbf4 <main@@Base+0x9850>
   1cbe4:	mov	r2, r1
   1cbe8:	cmp	r2, r5
   1cbec:	bne	1cc1c <main@@Base+0x9878>
   1cbf0:	b	1cc8c <main@@Base+0x98e8>
   1cbf4:	bne	1cc04 <main@@Base+0x9860>
   1cbf8:	ldrb	r0, [r2, #2]!
   1cbfc:	cmp	r0, #32
   1cc00:	bhi	1cc14 <main@@Base+0x9870>
   1cc04:	mov	r0, r8
   1cc08:	mov	r2, r5
   1cc0c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1cc10:	mov	r2, r0
   1cc14:	cmp	r2, r5
   1cc18:	beq	1cc8c <main@@Base+0x98e8>
   1cc1c:	ldrb	r0, [r2]
   1cc20:	cmp	r0, #125	; 0x7d
   1cc24:	bne	1c5f4 <main@@Base+0x9250>
   1cc28:	b	1cc5c <main@@Base+0x98b8>
   1cc2c:	ldr	r8, [sp, #40]	; 0x28
   1cc30:	ldr	r5, [sp, #44]	; 0x2c
   1cc34:	mov	r3, #33	; 0x21
   1cc38:	mov	r0, r8
   1cc3c:	mov	r2, r5
   1cc40:	b	1ccb0 <main@@Base+0x990c>
   1cc44:	mov	r4, r5
   1cc48:	b	1ccb8 <main@@Base+0x9914>
   1cc4c:	cmp	r0, #125	; 0x7d
   1cc50:	bne	1cc98 <main@@Base+0x98f4>
   1cc54:	ldr	r5, [sp, #44]	; 0x2c
   1cc58:	ldr	r8, [sp, #40]	; 0x28
   1cc5c:	add	r1, r2, #1
   1cc60:	sub	r0, r5, r1
   1cc64:	cmp	r0, #2
   1cc68:	ldr	sl, [sp, #36]	; 0x24
   1cc6c:	blt	1c44c <main@@Base+0x90a8>
   1cc70:	ldrb	r0, [r1]
   1cc74:	cmp	r0, #32
   1cc78:	bls	1c42c <main@@Base+0x9088>
   1cc7c:	ldr	r5, [sp, #44]	; 0x2c
   1cc80:	ldr	r8, [sp, #40]	; 0x28
   1cc84:	mov	r4, r1
   1cc88:	b	1ccb8 <main@@Base+0x9914>
   1cc8c:	mov	r0, r8
   1cc90:	mov	r1, r5
   1cc94:	b	1cca8 <main@@Base+0x9904>
   1cc98:	ldr	r8, [sp, #40]	; 0x28
   1cc9c:	ldr	r5, [sp, #44]	; 0x2c
   1cca0:	mov	r1, r2
   1cca4:	mov	r0, r8
   1cca8:	mov	r2, r5
   1ccac:	mov	r3, #10
   1ccb0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ccb4:	mov	r4, r0
   1ccb8:	ldr	sl, [sp, #36]	; 0x24
   1ccbc:	sub	r0, r5, r4
   1ccc0:	cmp	r0, #2
   1ccc4:	blt	1ccf8 <main@@Base+0x9954>
   1ccc8:	ldrb	r0, [r4]
   1cccc:	cmp	r0, #32
   1ccd0:	bls	1cce4 <main@@Base+0x9940>
   1ccd4:	mov	r7, r4
   1ccd8:	cmp	r7, r5
   1ccdc:	bne	1cd14 <main@@Base+0x9970>
   1cce0:	b	1cdb4 <main@@Base+0x9a10>
   1cce4:	bne	1ccf8 <main@@Base+0x9954>
   1cce8:	mov	r7, r4
   1ccec:	ldrb	r0, [r7, #1]!
   1ccf0:	cmp	r0, #32
   1ccf4:	bhi	1cd0c <main@@Base+0x9968>
   1ccf8:	mov	r0, r8
   1ccfc:	mov	r1, r4
   1cd00:	mov	r2, r5
   1cd04:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1cd08:	mov	r7, r0
   1cd0c:	cmp	r7, r5
   1cd10:	beq	1cdb4 <main@@Base+0x9a10>
   1cd14:	ldrb	r0, [r7]
   1cd18:	cmp	r0, #44	; 0x2c
   1cd1c:	bne	1cdbc <main@@Base+0x9a18>
   1cd20:	add	r1, r7, #1
   1cd24:	sub	r0, r5, r1
   1cd28:	cmp	r0, #2
   1cd2c:	blt	1cd60 <main@@Base+0x99bc>
   1cd30:	ldrb	r0, [r1]
   1cd34:	cmp	r0, #32
   1cd38:	bls	1cd4c <main@@Base+0x99a8>
   1cd3c:	mov	r4, r1
   1cd40:	cmp	r4, r5
   1cd44:	bne	1cd78 <main@@Base+0x99d4>
   1cd48:	b	1cdd4 <main@@Base+0x9a30>
   1cd4c:	bne	1cd60 <main@@Base+0x99bc>
   1cd50:	ldrb	r0, [r7, #2]!
   1cd54:	cmp	r0, #32
   1cd58:	mov	r4, r7
   1cd5c:	bhi	1cd70 <main@@Base+0x99cc>
   1cd60:	mov	r0, r8
   1cd64:	mov	r2, r5
   1cd68:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1cd6c:	mov	r4, r0
   1cd70:	cmp	r4, r5
   1cd74:	beq	1cdd4 <main@@Base+0x9a30>
   1cd78:	ldrb	r0, [r4]
   1cd7c:	cmp	r0, #93	; 0x5d
   1cd80:	bne	1c45c <main@@Base+0x90b8>
   1cd84:	add	r1, r4, #1
   1cd88:	sub	r0, r5, r1
   1cd8c:	cmp	r0, #2
   1cd90:	blt	1d208 <main@@Base+0x9e64>
   1cd94:	ldrb	r0, [r1]
   1cd98:	cmp	r0, #32
   1cd9c:	bls	1d1e8 <main@@Base+0x9e44>
   1cda0:	ldr	r5, [sp, #44]	; 0x2c
   1cda4:	ldr	r8, [sp, #40]	; 0x28
   1cda8:	ldr	sl, [sp, #36]	; 0x24
   1cdac:	mov	r7, r1
   1cdb0:	b	18ac0 <main@@Base+0x571c>
   1cdb4:	mov	r7, r5
   1cdb8:	b	18ac0 <main@@Base+0x571c>
   1cdbc:	cmp	r0, #93	; 0x5d
   1cdc0:	bne	1cde8 <main@@Base+0x9a44>
   1cdc4:	ldr	r5, [sp, #44]	; 0x2c
   1cdc8:	ldr	r8, [sp, #40]	; 0x28
   1cdcc:	ldr	sl, [sp, #36]	; 0x24
   1cdd0:	b	193dc <main@@Base+0x6038>
   1cdd4:	mov	r0, r8
   1cdd8:	mov	r1, r5
   1cddc:	mov	r2, r5
   1cde0:	mov	r3, #9
   1cde4:	b	18ab8 <main@@Base+0x5714>
   1cde8:	ldr	r8, [sp, #40]	; 0x28
   1cdec:	ldr	r5, [sp, #44]	; 0x2c
   1cdf0:	mov	r1, r7
   1cdf4:	mov	r3, #9
   1cdf8:	mov	r0, r8
   1cdfc:	mov	r2, r5
   1ce00:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ce04:	ldr	sl, [sp, #36]	; 0x24
   1ce08:	b	18abc <main@@Base+0x5718>
   1ce0c:	cmp	r0, #125	; 0x7d
   1ce10:	bne	1d314 <main@@Base+0x9f70>
   1ce14:	ldr	r5, [sp, #44]	; 0x2c
   1ce18:	ldr	r8, [sp, #40]	; 0x28
   1ce1c:	add	r1, r3, #1
   1ce20:	sub	r0, r5, r1
   1ce24:	cmp	r0, #2
   1ce28:	blt	1d480 <main@@Base+0xa0dc>
   1ce2c:	ldrb	r0, [r1]
   1ce30:	cmp	r0, #32
   1ce34:	bls	1d464 <main@@Base+0xa0c0>
   1ce38:	ldr	r5, [sp, #44]	; 0x2c
   1ce3c:	ldr	r8, [sp, #40]	; 0x28
   1ce40:	mov	r4, r1
   1ce44:	b	19000 <main@@Base+0x5c5c>
   1ce48:	add	r1, r4, #1
   1ce4c:	sub	r0, r5, r1
   1ce50:	cmp	r0, #2
   1ce54:	blt	1d444 <main@@Base+0xa0a0>
   1ce58:	ldrb	r0, [r1]
   1ce5c:	cmp	r0, #32
   1ce60:	bls	1d434 <main@@Base+0xa090>
   1ce64:	mov	r4, r1
   1ce68:	b	1d454 <main@@Base+0xa0b0>
   1ce6c:	mov	r0, r8
   1ce70:	mov	r1, r5
   1ce74:	b	1d324 <main@@Base+0x9f80>
   1ce78:	bne	1ce88 <main@@Base+0x9ae4>
   1ce7c:	ldrb	r0, [r4, #2]!
   1ce80:	cmp	r0, #32
   1ce84:	bhi	1ce98 <main@@Base+0x9af4>
   1ce88:	ldr	r0, [sp, #40]	; 0x28
   1ce8c:	ldr	r2, [sp, #44]	; 0x2c
   1ce90:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ce94:	mov	r4, r0
   1ce98:	ldr	r6, [sp, #44]	; 0x2c
   1ce9c:	cmp	r4, r6
   1cea0:	beq	1ceb4 <main@@Base+0x9b10>
   1cea4:	ldrb	r0, [r4]
   1cea8:	cmp	r0, #93	; 0x5d
   1ceac:	beq	1d350 <main@@Base+0x9fac>
   1ceb0:	mov	r6, r4
   1ceb4:	mov	r0, #0
   1ceb8:	mov	r1, #1
   1cebc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1cec0:	ldr	r0, [sp, #40]	; 0x28
   1cec4:	ldr	r0, [r0]
   1cec8:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1cecc:	cmp	r0, #0
   1ced0:	beq	1d610 <main@@Base+0xa26c>
   1ced4:	mov	r8, r0
   1ced8:	mov	r4, r6
   1cedc:	ldr	r5, [sp, #44]	; 0x2c
   1cee0:	mov	r6, #0
   1cee4:	str	r6, [fp, #-52]	; 0xffffffcc
   1cee8:	str	r6, [fp, #-56]	; 0xffffffc8
   1ceec:	strb	r6, [fp, #-60]	; 0xffffffc4
   1cef0:	str	r6, [sp, #56]	; 0x38
   1cef4:	cmp	r4, r5
   1cef8:	beq	1cf40 <main@@Base+0x9b9c>
   1cefc:	sub	r0, fp, #56	; 0x38
   1cf00:	mov	r1, r4
   1cf04:	mov	r2, r5
   1cf08:	add	r3, sp, #56	; 0x38
   1cf0c:	str	r0, [sp]
   1cf10:	ldr	r0, [sp, #40]	; 0x28
   1cf14:	bl	31418 <flatcc_json_parser_integer@@Base>
   1cf18:	cmp	r0, r4
   1cf1c:	beq	1cf48 <main@@Base+0x9ba4>
   1cf20:	mov	r1, r0
   1cf24:	ldr	r0, [sp, #56]	; 0x38
   1cf28:	cmp	r0, #0
   1cf2c:	beq	1cf50 <main@@Base+0x9bac>
   1cf30:	ldr	r7, [sp, #40]	; 0x28
   1cf34:	ldr	r5, [sp, #44]	; 0x2c
   1cf38:	mov	r3, #8
   1cf3c:	b	1cf70 <main@@Base+0x9bcc>
   1cf40:	mov	r1, r5
   1cf44:	b	1cf9c <main@@Base+0x9bf8>
   1cf48:	mov	r1, r4
   1cf4c:	b	1cf98 <main@@Base+0x9bf4>
   1cf50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cf54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cf58:	subs	r3, r0, #256	; 0x100
   1cf5c:	sbcs	r2, r2, #0
   1cf60:	bcc	1cf90 <main@@Base+0x9bec>
   1cf64:	ldr	r7, [sp, #40]	; 0x28
   1cf68:	ldr	r5, [sp, #44]	; 0x2c
   1cf6c:	mov	r3, #7
   1cf70:	mov	r0, r7
   1cf74:	mov	r2, r5
   1cf78:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1cf7c:	mov	r1, r0
   1cf80:	cmp	r4, r1
   1cf84:	bne	1cfec <main@@Base+0x9c48>
   1cf88:	b	1cfa8 <main@@Base+0x9c04>
   1cf8c:	andeq	fp, r2, r4, asr #6
   1cf90:	mov	r6, r0
   1cf94:	strb	r0, [fp, #-60]	; 0xffffffc4
   1cf98:	ldr	r5, [sp, #44]	; 0x2c
   1cf9c:	ldr	r7, [sp, #40]	; 0x28
   1cfa0:	cmp	r4, r1
   1cfa4:	bne	1cfec <main@@Base+0x9c48>
   1cfa8:	sub	r0, fp, #60	; 0x3c
   1cfac:	mov	r1, r4
   1cfb0:	mov	r2, r5
   1cfb4:	str	r0, [sp]
   1cfb8:	mov	r0, r7
   1cfbc:	ldr	r3, [pc, #1632]	; 1d624 <main@@Base+0xa280>
   1cfc0:	add	r3, pc, r3
   1cfc4:	bl	1ed84 <main@@Base+0xb9e0>
   1cfc8:	mov	r1, r0
   1cfcc:	cmp	r0, r4
   1cfd0:	beq	1d608 <main@@Base+0xa264>
   1cfd4:	ldr	r0, [sp, #44]	; 0x2c
   1cfd8:	cmp	r1, r0
   1cfdc:	beq	1d608 <main@@Base+0xa264>
   1cfe0:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1cfe4:	ldr	r5, [sp, #44]	; 0x2c
   1cfe8:	ldr	r7, [sp, #40]	; 0x28
   1cfec:	sub	r0, r5, r1
   1cff0:	strb	r6, [r8]
   1cff4:	cmp	r0, #2
   1cff8:	blt	1d038 <main@@Base+0x9c94>
   1cffc:	ldrb	r0, [r1]
   1d000:	cmp	r0, #32
   1d004:	bls	1d01c <main@@Base+0x9c78>
   1d008:	ldr	r5, [sp, #44]	; 0x2c
   1d00c:	mov	r4, r1
   1d010:	cmp	r4, r5
   1d014:	bne	1d050 <main@@Base+0x9cac>
   1d018:	b	1d340 <main@@Base+0x9f9c>
   1d01c:	ldr	r5, [sp, #44]	; 0x2c
   1d020:	ldr	r7, [sp, #40]	; 0x28
   1d024:	bne	1d038 <main@@Base+0x9c94>
   1d028:	mov	r4, r1
   1d02c:	ldrb	r0, [r4, #1]!
   1d030:	cmp	r0, #32
   1d034:	bhi	1d048 <main@@Base+0x9ca4>
   1d038:	mov	r0, r7
   1d03c:	mov	r2, r5
   1d040:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d044:	mov	r4, r0
   1d048:	cmp	r4, r5
   1d04c:	beq	1d340 <main@@Base+0x9f9c>
   1d050:	ldrb	r0, [r4]
   1d054:	cmp	r0, #44	; 0x2c
   1d058:	bne	1d348 <main@@Base+0x9fa4>
   1d05c:	ldr	r5, [sp, #44]	; 0x2c
   1d060:	add	r1, r4, #1
   1d064:	sub	r0, r5, r1
   1d068:	cmp	r0, #2
   1d06c:	ldr	r0, [sp, #40]	; 0x28
   1d070:	blt	1d0ac <main@@Base+0x9d08>
   1d074:	ldrb	r0, [r1]
   1d078:	cmp	r0, #32
   1d07c:	bls	1d094 <main@@Base+0x9cf0>
   1d080:	ldr	r5, [sp, #44]	; 0x2c
   1d084:	mov	r4, r1
   1d088:	cmp	r4, r5
   1d08c:	bne	1d0c0 <main@@Base+0x9d1c>
   1d090:	b	1d3a8 <main@@Base+0xa004>
   1d094:	ldr	r5, [sp, #44]	; 0x2c
   1d098:	ldr	r0, [sp, #40]	; 0x28
   1d09c:	bne	1d0ac <main@@Base+0x9d08>
   1d0a0:	ldrb	r2, [r4, #2]!
   1d0a4:	cmp	r2, #32
   1d0a8:	bhi	1d0b8 <main@@Base+0x9d14>
   1d0ac:	mov	r2, r5
   1d0b0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d0b4:	mov	r4, r0
   1d0b8:	cmp	r4, r5
   1d0bc:	beq	1d3a8 <main@@Base+0xa004>
   1d0c0:	ldrb	r0, [r4]
   1d0c4:	cmp	r0, #93	; 0x5d
   1d0c8:	beq	1d350 <main@@Base+0x9fac>
   1d0cc:	mov	r0, #0
   1d0d0:	mov	r1, #1
   1d0d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1d0d8:	ldr	r0, [sp, #40]	; 0x28
   1d0dc:	ldr	r0, [r0]
   1d0e0:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   1d0e4:	mov	r8, r0
   1d0e8:	cmp	r0, #0
   1d0ec:	bne	1cedc <main@@Base+0x9b38>
   1d0f0:	b	1d614 <main@@Base+0xa270>
   1d0f4:	ldr	r5, [sp, #44]	; 0x2c
   1d0f8:	ldr	r8, [sp, #40]	; 0x28
   1d0fc:	ldr	sl, [sp, #36]	; 0x24
   1d100:	b	188b8 <main@@Base+0x5514>
   1d104:	ldr	r5, [sp, #44]	; 0x2c
   1d108:	ldr	r8, [sp, #40]	; 0x28
   1d10c:	ldr	sl, [sp, #36]	; 0x24
   1d110:	bne	1d124 <main@@Base+0x9d80>
   1d114:	ldrb	r0, [r2, #2]!
   1d118:	cmp	r0, #32
   1d11c:	mov	r4, r2
   1d120:	bhi	18a08 <main@@Base+0x5664>
   1d124:	mov	r0, r8
   1d128:	mov	r2, r5
   1d12c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d130:	b	18a04 <main@@Base+0x5660>
   1d134:	ldr	r8, [sp, #40]	; 0x28
   1d138:	ldr	r5, [sp, #44]	; 0x2c
   1d13c:	mov	r1, r2
   1d140:	mov	r0, r8
   1d144:	mov	r2, r5
   1d148:	mov	r3, #9
   1d14c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1d150:	ldr	sl, [sp, #36]	; 0x24
   1d154:	b	1917c <main@@Base+0x5dd8>
   1d158:	ldr	r0, [sp, #40]	; 0x28
   1d15c:	ldr	r2, [sp, #44]	; 0x2c
   1d160:	mov	r1, r4
   1d164:	mov	r3, #9
   1d168:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1d16c:	b	1d2b0 <main@@Base+0x9f0c>
   1d170:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d174:	str	r6, [fp, #-60]	; 0xffffffc4
   1d178:	cmp	r7, r4
   1d17c:	bne	1b77c <main@@Base+0x83d8>
   1d180:	b	1b744 <main@@Base+0x83a0>
   1d184:	ldr	r8, [sp, #40]	; 0x28
   1d188:	mov	r4, r5
   1d18c:	b	1ac24 <main@@Base+0x7880>
   1d190:	andeq	fp, r2, ip, lsr #3
   1d194:	cmp	r0, #93	; 0x5d
   1d198:	bne	1d490 <main@@Base+0xa0ec>
   1d19c:	ldr	r0, [sp, #44]	; 0x2c
   1d1a0:	add	r1, r4, #1
   1d1a4:	sub	r0, r0, r1
   1d1a8:	cmp	r0, #2
   1d1ac:	blt	1d4cc <main@@Base+0xa128>
   1d1b0:	b	1d228 <main@@Base+0x9e84>
   1d1b4:	mov	r0, r8
   1d1b8:	mov	r1, r5
   1d1bc:	mov	r2, r5
   1d1c0:	b	1d49c <main@@Base+0xa0f8>
   1d1c4:	ldr	r8, [sp, #40]	; 0x28
   1d1c8:	ldr	r5, [sp, #44]	; 0x2c
   1d1cc:	mov	r1, r2
   1d1d0:	mov	r0, r8
   1d1d4:	mov	r2, r5
   1d1d8:	mov	r3, #10
   1d1dc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1d1e0:	ldr	sl, [sp, #36]	; 0x24
   1d1e4:	b	188a4 <main@@Base+0x5500>
   1d1e8:	ldr	r5, [sp, #44]	; 0x2c
   1d1ec:	ldr	r8, [sp, #40]	; 0x28
   1d1f0:	ldr	sl, [sp, #36]	; 0x24
   1d1f4:	bne	1d208 <main@@Base+0x9e64>
   1d1f8:	ldrb	r0, [r4, #2]!
   1d1fc:	cmp	r0, #32
   1d200:	mov	r7, r4
   1d204:	bhi	18ac0 <main@@Base+0x571c>
   1d208:	mov	r0, r8
   1d20c:	mov	r2, r5
   1d210:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d214:	b	18abc <main@@Base+0x5718>
   1d218:	add	r1, r4, #1
   1d21c:	sub	r0, r5, r1
   1d220:	cmp	r0, #2
   1d224:	blt	1d4cc <main@@Base+0xa128>
   1d228:	ldrb	r0, [r1]
   1d22c:	cmp	r0, #32
   1d230:	bls	1d4bc <main@@Base+0xa118>
   1d234:	ldr	r8, [sp, #40]	; 0x28
   1d238:	mov	r4, r1
   1d23c:	b	1ac24 <main@@Base+0x7880>
   1d240:	ldr	r5, [sp, #44]	; 0x2c
   1d244:	ldr	r8, [sp, #40]	; 0x28
   1d248:	ldr	sl, [sp, #36]	; 0x24
   1d24c:	bne	1d260 <main@@Base+0x9ebc>
   1d250:	ldrb	r0, [r2, #2]!
   1d254:	cmp	r0, #32
   1d258:	mov	r4, r2
   1d25c:	bhi	19180 <main@@Base+0x5ddc>
   1d260:	mov	r0, r8
   1d264:	mov	r2, r5
   1d268:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d26c:	b	1917c <main@@Base+0x5dd8>
   1d270:	ldr	r8, [sp, #40]	; 0x28
   1d274:	ldr	r5, [sp, #44]	; 0x2c
   1d278:	mov	r1, r2
   1d27c:	mov	r0, r8
   1d280:	mov	r2, r5
   1d284:	mov	r3, #9
   1d288:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1d28c:	ldr	sl, [sp, #36]	; 0x24
   1d290:	b	19920 <main@@Base+0x657c>
   1d294:	bne	1d2a4 <main@@Base+0x9f00>
   1d298:	ldrb	r0, [r4, #2]!
   1d29c:	cmp	r0, #32
   1d2a0:	bhi	1d2b4 <main@@Base+0x9f10>
   1d2a4:	ldr	r0, [sp, #40]	; 0x28
   1d2a8:	ldr	r2, [sp, #44]	; 0x2c
   1d2ac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d2b0:	mov	r4, r0
   1d2b4:	ldr	r5, [sp, #44]	; 0x2c
   1d2b8:	ldr	r8, [sp, #40]	; 0x28
   1d2bc:	ldr	sl, [sp, #36]	; 0x24
   1d2c0:	b	195d4 <main@@Base+0x6230>
   1d2c4:	ldr	r0, [sp, #40]	; 0x28
   1d2c8:	ldr	r2, [sp, #44]	; 0x2c
   1d2cc:	mov	r1, r4
   1d2d0:	mov	r3, #9
   1d2d4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1d2d8:	b	1d450 <main@@Base+0xa0ac>
   1d2dc:	mov	r4, r5
   1d2e0:	b	194b8 <main@@Base+0x6114>
   1d2e4:	cmp	r0, #125	; 0x7d
   1d2e8:	bne	1d4a8 <main@@Base+0xa104>
   1d2ec:	ldr	r0, [sp, #44]	; 0x2c
   1d2f0:	add	r1, r2, #1
   1d2f4:	sub	r0, r0, r1
   1d2f8:	cmp	r0, #2
   1d2fc:	blt	1d50c <main@@Base+0xa168>
   1d300:	ldrb	r0, [r1]
   1d304:	cmp	r0, #32
   1d308:	bls	1d4f8 <main@@Base+0xa154>
   1d30c:	mov	r4, r1
   1d310:	b	194b8 <main@@Base+0x6114>
   1d314:	ldr	r8, [sp, #40]	; 0x28
   1d318:	ldr	r5, [sp, #44]	; 0x2c
   1d31c:	mov	r1, r3
   1d320:	mov	r0, r8
   1d324:	mov	r2, r5
   1d328:	mov	r3, #10
   1d32c:	b	18ff8 <main@@Base+0x5c54>
   1d330:	mov	r0, r6
   1d334:	mov	r1, r5
   1d338:	mov	r2, r5
   1d33c:	b	1d4b4 <main@@Base+0xa110>
   1d340:	ldr	r4, [sp, #44]	; 0x2c
   1d344:	b	1d3d8 <main@@Base+0xa034>
   1d348:	cmp	r0, #93	; 0x5d
   1d34c:	bne	1d4e4 <main@@Base+0xa140>
   1d350:	ldr	r0, [sp, #44]	; 0x2c
   1d354:	add	r1, r4, #1
   1d358:	sub	r0, r0, r1
   1d35c:	cmp	r0, #2
   1d360:	blt	1d3c8 <main@@Base+0xa024>
   1d364:	ldrb	r0, [r1]
   1d368:	cmp	r0, #32
   1d36c:	bls	1d3b8 <main@@Base+0xa014>
   1d370:	mov	r4, r1
   1d374:	b	1d3d8 <main@@Base+0xa034>
   1d378:	ldr	r5, [sp, #44]	; 0x2c
   1d37c:	ldr	r8, [sp, #40]	; 0x28
   1d380:	ldr	sl, [sp, #36]	; 0x24
   1d384:	bne	1d398 <main@@Base+0x9ff4>
   1d388:	ldrb	r0, [r2, #2]!
   1d38c:	cmp	r0, #32
   1d390:	mov	r4, r2
   1d394:	bhi	188a8 <main@@Base+0x5504>
   1d398:	mov	r0, r8
   1d39c:	mov	r2, r5
   1d3a0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d3a4:	b	188a4 <main@@Base+0x5500>
   1d3a8:	ldr	r1, [sp, #44]	; 0x2c
   1d3ac:	ldr	r0, [sp, #40]	; 0x28
   1d3b0:	mov	r2, r1
   1d3b4:	b	1d4f0 <main@@Base+0xa14c>
   1d3b8:	bne	1d3c8 <main@@Base+0xa024>
   1d3bc:	ldrb	r0, [r4, #2]!
   1d3c0:	cmp	r0, #32
   1d3c4:	bhi	1d3d8 <main@@Base+0xa034>
   1d3c8:	ldr	r0, [sp, #40]	; 0x28
   1d3cc:	ldr	r2, [sp, #44]	; 0x2c
   1d3d0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d3d4:	mov	r4, r0
   1d3d8:	ldr	r8, [sp, #40]	; 0x28
   1d3dc:	ldr	r0, [r8]
   1d3e0:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   1d3e4:	ldr	r5, [sp, #44]	; 0x2c
   1d3e8:	ldr	sl, [sp, #36]	; 0x24
   1d3ec:	cmp	r0, #0
   1d3f0:	str	r0, [sp, #52]	; 0x34
   1d3f4:	beq	1346c <main@@Base+0xc8>
   1d3f8:	ldr	r0, [r8]
   1d3fc:	mov	r1, #13
   1d400:	b	15f2c <main@@Base+0x2b88>
   1d404:	ldr	r5, [sp, #44]	; 0x2c
   1d408:	ldr	r8, [sp, #40]	; 0x28
   1d40c:	ldr	sl, [sp, #36]	; 0x24
   1d410:	bne	1d424 <main@@Base+0xa080>
   1d414:	ldrb	r0, [r2, #2]!
   1d418:	cmp	r0, #32
   1d41c:	mov	r4, r2
   1d420:	bhi	19924 <main@@Base+0x6580>
   1d424:	mov	r0, r8
   1d428:	mov	r2, r5
   1d42c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d430:	b	19920 <main@@Base+0x657c>
   1d434:	bne	1d444 <main@@Base+0xa0a0>
   1d438:	ldrb	r0, [r4, #2]!
   1d43c:	cmp	r0, #32
   1d440:	bhi	1d454 <main@@Base+0xa0b0>
   1d444:	ldr	r0, [sp, #40]	; 0x28
   1d448:	ldr	r2, [sp, #44]	; 0x2c
   1d44c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d450:	mov	r4, r0
   1d454:	ldr	r5, [sp, #44]	; 0x2c
   1d458:	ldr	r8, [sp, #40]	; 0x28
   1d45c:	ldr	sl, [sp, #36]	; 0x24
   1d460:	b	19ddc <main@@Base+0x6a38>
   1d464:	ldr	r5, [sp, #44]	; 0x2c
   1d468:	ldr	r8, [sp, #40]	; 0x28
   1d46c:	bne	1d480 <main@@Base+0xa0dc>
   1d470:	ldrb	r0, [r3, #2]!
   1d474:	cmp	r0, #32
   1d478:	mov	r4, r3
   1d47c:	bhi	19000 <main@@Base+0x5c5c>
   1d480:	mov	r0, r8
   1d484:	mov	r2, r5
   1d488:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d48c:	b	18ffc <main@@Base+0x5c58>
   1d490:	ldr	r0, [sp, #40]	; 0x28
   1d494:	ldr	r2, [sp, #44]	; 0x2c
   1d498:	mov	r1, r4
   1d49c:	mov	r3, #9
   1d4a0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1d4a4:	b	1d4d8 <main@@Base+0xa134>
   1d4a8:	mov	r1, r2
   1d4ac:	ldr	r0, [sp, #40]	; 0x28
   1d4b0:	ldr	r2, [sp, #44]	; 0x2c
   1d4b4:	mov	r3, #10
   1d4b8:	b	194b0 <main@@Base+0x610c>
   1d4bc:	bne	1d4cc <main@@Base+0xa128>
   1d4c0:	ldrb	r0, [r4, #2]!
   1d4c4:	cmp	r0, #32
   1d4c8:	bhi	1d4dc <main@@Base+0xa138>
   1d4cc:	ldr	r0, [sp, #40]	; 0x28
   1d4d0:	ldr	r2, [sp, #44]	; 0x2c
   1d4d4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d4d8:	mov	r4, r0
   1d4dc:	ldr	r8, [sp, #40]	; 0x28
   1d4e0:	b	1ac24 <main@@Base+0x7880>
   1d4e4:	ldr	r0, [sp, #40]	; 0x28
   1d4e8:	ldr	r2, [sp, #44]	; 0x2c
   1d4ec:	mov	r1, r4
   1d4f0:	mov	r3, #9
   1d4f4:	b	19ef0 <main@@Base+0x6b4c>
   1d4f8:	bne	1d50c <main@@Base+0xa168>
   1d4fc:	ldrb	r0, [r2, #2]!
   1d500:	cmp	r0, #32
   1d504:	mov	r4, r2
   1d508:	bhi	194b8 <main@@Base+0x6114>
   1d50c:	ldr	r0, [sp, #40]	; 0x28
   1d510:	ldr	r2, [sp, #44]	; 0x2c
   1d514:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d518:	b	194b4 <main@@Base+0x6110>
   1d51c:	mov	r4, r5
   1d520:	b	1d5bc <main@@Base+0xa218>
   1d524:	cmp	r0, #125	; 0x7d
   1d528:	bne	1d5a4 <main@@Base+0xa200>
   1d52c:	add	r4, r2, #1
   1d530:	sub	r0, r5, r4
   1d534:	cmp	r0, #2
   1d538:	blt	1d560 <main@@Base+0xa1bc>
   1d53c:	ldrb	r0, [r4]
   1d540:	cmp	r0, #32
   1d544:	bhi	1d5bc <main@@Base+0xa218>
   1d548:	bne	1d560 <main@@Base+0xa1bc>
   1d54c:	ldrb	r0, [r2, #2]!
   1d550:	cmp	r0, #32
   1d554:	bls	1d560 <main@@Base+0xa1bc>
   1d558:	mov	r4, r2
   1d55c:	b	1d5bc <main@@Base+0xa218>
   1d560:	mov	r0, r8
   1d564:	mov	r1, r4
   1d568:	mov	r2, r5
   1d56c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d570:	b	1d5b8 <main@@Base+0xa214>
   1d574:	mov	r0, r8
   1d578:	mov	r1, r5
   1d57c:	b	1d5ac <main@@Base+0xa208>
   1d580:	bne	1d590 <main@@Base+0xa1ec>
   1d584:	ldrb	r0, [r4, #2]!
   1d588:	cmp	r0, #32
   1d58c:	bhi	1350c <main@@Base+0x168>
   1d590:	mov	r0, r8
   1d594:	mov	r2, r5
   1d598:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1d59c:	b	13508 <main@@Base+0x164>
   1d5a0:	andeq	sl, r2, ip, lsl #27
   1d5a4:	mov	r0, r8
   1d5a8:	mov	r1, r2
   1d5ac:	mov	r2, r5
   1d5b0:	mov	r3, #10
   1d5b4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1d5b8:	mov	r4, r0
   1d5bc:	ldr	r0, [sp, #28]
   1d5c0:	b	13510 <main@@Base+0x16c>
   1d5c4:	mov	r4, r7
   1d5c8:	b	1346c <main@@Base+0xc8>
   1d5cc:	mov	r4, r6
   1d5d0:	b	1346c <main@@Base+0xc8>
   1d5d4:	ldr	r5, [sp, #44]	; 0x2c
   1d5d8:	b	1346c <main@@Base+0xc8>
   1d5dc:	ldr	r8, [sp, #40]	; 0x28
   1d5e0:	b	1346c <main@@Base+0xc8>
   1d5e4:	mov	r4, r5
   1d5e8:	b	1d614 <main@@Base+0xa270>
   1d5ec:	ldr	r8, [sp, #40]	; 0x28
   1d5f0:	mov	r4, r1
   1d5f4:	b	1346c <main@@Base+0xc8>
   1d5f8:	ldr	r5, [sp, #44]	; 0x2c
   1d5fc:	ldr	r8, [sp, #40]	; 0x28
   1d600:	mov	r4, r7
   1d604:	b	1346c <main@@Base+0xc8>
   1d608:	mov	r4, r1
   1d60c:	b	1d614 <main@@Base+0xa270>
   1d610:	mov	r4, r6
   1d614:	ldr	r5, [sp, #44]	; 0x2c
   1d618:	ldr	r8, [sp, #40]	; 0x28
   1d61c:	b	1346c <main@@Base+0xc8>
   1d620:	andeq	sl, r2, ip, lsr #17
   1d624:	andeq	sl, r2, r0, asr #3
   1d628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d62c:	add	fp, sp, #28
   1d630:	sub	sp, sp, #12
   1d634:	mov	r5, r1
   1d638:	sub	r1, r2, r1
   1d63c:	cmp	r1, #8
   1d640:	movcs	r1, #8
   1d644:	and	r1, r1, #15
   1d648:	sub	r1, r1, #1
   1d64c:	cmp	r1, #7
   1d650:	bhi	1d7c4 <main@@Base+0xa420>
   1d654:	str	r3, [sp, #8]
   1d658:	add	r4, pc, #36	; 0x24
   1d65c:	mov	r9, #0
   1d660:	mov	ip, #0
   1d664:	mov	lr, #0
   1d668:	mov	sl, #0
   1d66c:	mov	r6, #0
   1d670:	mov	r7, #0
   1d674:	mov	r3, #0
   1d678:	ldr	r8, [r4, r1, lsl #2]
   1d67c:	mov	r1, #0
   1d680:	add	pc, r4, r8
   1d684:	andeq	r0, r0, r4, rrx
   1d688:	andeq	r0, r0, ip, asr r0
   1d68c:	andeq	r0, r0, r4, asr r0
   1d690:	andeq	r0, r0, ip, asr #32
   1d694:	andeq	r0, r0, r0, asr #32
   1d698:	andeq	r0, r0, r4, lsr r0
   1d69c:	andeq	r0, r0, r4, lsr #32
   1d6a0:	andeq	r0, r0, r0, lsr #32
   1d6a4:	ldrb	ip, [r5, #7]
   1d6a8:	ldrb	r1, [r5, #6]
   1d6ac:	mov	lr, r9
   1d6b0:	orr	r1, ip, r1, lsl #8
   1d6b4:	mov	r9, r1
   1d6b8:	ldrb	r1, [r5, #5]
   1d6bc:	mov	sl, lr
   1d6c0:	orr	r9, r9, r1, lsl #16
   1d6c4:	ldrb	r1, [r5, #4]
   1d6c8:	mov	r6, sl
   1d6cc:	orr	r9, r9, r1, lsl #24
   1d6d0:	ldrb	r1, [r5, #3]
   1d6d4:	orr	r7, r1, r6
   1d6d8:	ldrb	r1, [r5, #2]
   1d6dc:	orr	r3, r7, r1, lsl #8
   1d6e0:	ldrb	r1, [r5, #1]
   1d6e4:	orr	r1, r3, r1, lsl #16
   1d6e8:	ldrb	r7, [r5]
   1d6ec:	ldr	r3, [fp, #12]
   1d6f0:	ldr	r8, [fp, #8]
   1d6f4:	orr	r4, r1, r7, lsl #24
   1d6f8:	movw	r7, #25957	; 0x6565
   1d6fc:	mvn	r1, #-1845493760	; 0x92000000
   1d700:	movt	r7, #18290	; 0x4772
   1d704:	subs	r1, r1, r9
   1d708:	sbcs	r1, r7, r4
   1d70c:	bcc	1d744 <main@@Base+0xa3a0>
   1d710:	movw	r1, #30053	; 0x7565
   1d714:	movt	r1, #17004	; 0x426c
   1d718:	teq	r4, r1
   1d71c:	bne	1d7c4 <main@@Base+0xa420>
   1d720:	str	r3, [sp]
   1d724:	mov	r1, r5
   1d728:	mov	r3, #4
   1d72c:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   1d730:	cmp	r0, r5
   1d734:	beq	1d7c4 <main@@Base+0xa420>
   1d738:	mov	r1, #0
   1d73c:	mov	r2, #8
   1d740:	b	1d7b0 <main@@Base+0xa40c>
   1d744:	movw	r6, #25600	; 0x6400
   1d748:	bic	r1, r4, #255	; 0xff
   1d74c:	movt	r6, #21093	; 0x5265
   1d750:	teq	r1, r6
   1d754:	bne	1d77c <main@@Base+0xa3d8>
   1d758:	str	r3, [sp]
   1d75c:	mov	r1, r5
   1d760:	mov	r3, #3
   1d764:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   1d768:	cmp	r0, r5
   1d76c:	beq	1d7c4 <main@@Base+0xa420>
   1d770:	mov	r1, #0
   1d774:	mov	r2, #1
   1d778:	b	1d7b0 <main@@Base+0xa40c>
   1d77c:	eor	r1, r4, r7
   1d780:	and	r7, r9, #-16777216	; 0xff000000
   1d784:	eor	r7, r7, #1845493760	; 0x6e000000
   1d788:	orrs	r1, r7, r1
   1d78c:	bne	1d7c4 <main@@Base+0xa420>
   1d790:	str	r3, [sp]
   1d794:	mov	r1, r5
   1d798:	mov	r3, #5
   1d79c:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   1d7a0:	cmp	r0, r5
   1d7a4:	beq	1d7c4 <main@@Base+0xa420>
   1d7a8:	mov	r1, #0
   1d7ac:	mov	r2, #2
   1d7b0:	str	r2, [r8]
   1d7b4:	str	r1, [r8, #4]
   1d7b8:	mov	r5, r0
   1d7bc:	ldr	r2, [sp, #8]
   1d7c0:	str	r1, [r2]
   1d7c4:	mov	r0, r5
   1d7c8:	sub	sp, fp, #28
   1d7cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d7d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7d4:	add	fp, sp, #28
   1d7d8:	sub	sp, sp, #20
   1d7dc:	sub	sl, r2, r1
   1d7e0:	cmp	sl, #8
   1d7e4:	mov	r7, sl
   1d7e8:	movcs	r7, #8
   1d7ec:	and	r7, r7, #15
   1d7f0:	sub	r7, r7, #1
   1d7f4:	cmp	r7, #7
   1d7f8:	bhi	1dc08 <main@@Base+0xa864>
   1d7fc:	str	r0, [sp, #16]
   1d800:	str	r3, [sp, #12]
   1d804:	mov	r4, #0
   1d808:	mov	lr, #0
   1d80c:	mov	r6, #0
   1d810:	mov	r3, #0
   1d814:	mov	r5, #0
   1d818:	mov	r8, #0
   1d81c:	mov	r9, #0
   1d820:	ldr	r0, [fp, #12]
   1d824:	str	r0, [sp, #8]
   1d828:	ldr	r0, [fp, #8]
   1d82c:	str	r0, [sp, #4]
   1d830:	add	ip, pc, #8
   1d834:	ldr	r0, [ip, r7, lsl #2]
   1d838:	mov	r7, #0
   1d83c:	add	pc, ip, r0
   1d840:	andeq	r0, r0, r4, rrx
   1d844:	andeq	r0, r0, ip, asr r0
   1d848:	andeq	r0, r0, r4, asr r0
   1d84c:	andeq	r0, r0, ip, asr #32
   1d850:	andeq	r0, r0, r0, asr #32
   1d854:	andeq	r0, r0, r4, lsr r0
   1d858:	andeq	r0, r0, r4, lsr #32
   1d85c:	andeq	r0, r0, r0, lsr #32
   1d860:	ldrb	lr, [r1, #7]
   1d864:	ldrb	r0, [r1, #6]
   1d868:	mov	r7, r4
   1d86c:	orr	r0, lr, r0, lsl #8
   1d870:	mov	r4, r0
   1d874:	ldrb	r0, [r1, #5]
   1d878:	mov	r6, r7
   1d87c:	orr	r4, r4, r0, lsl #16
   1d880:	ldrb	r0, [r1, #4]
   1d884:	mov	r3, r6
   1d888:	orr	r4, r4, r0, lsl #24
   1d88c:	ldrb	r0, [r1, #3]
   1d890:	orr	r5, r0, r3
   1d894:	ldrb	r0, [r1, #2]
   1d898:	orr	r8, r5, r0, lsl #8
   1d89c:	ldrb	r0, [r1, #1]
   1d8a0:	orr	r9, r8, r0, lsl #16
   1d8a4:	ldrb	r0, [r1]
   1d8a8:	movw	lr, #30061	; 0x756d
   1d8ac:	movw	r3, #30815	; 0x785f
   1d8b0:	movt	lr, #25966	; 0x656e
   1d8b4:	movt	r3, #26725	; 0x6865
   1d8b8:	orr	r6, r9, r0, lsl #24
   1d8bc:	subs	r0, r4, lr
   1d8c0:	sbcs	r0, r6, r3
   1d8c4:	bcs	1d92c <main@@Base+0xa588>
   1d8c8:	movw	r3, #27759	; 0x6c6f
   1d8cc:	mvn	r0, #-1912602624	; 0x8e000000
   1d8d0:	bic	r7, r6, #255	; 0xff
   1d8d4:	movt	r3, #17263	; 0x436f
   1d8d8:	subs	r0, r0, r4
   1d8dc:	sbcs	r0, r3, r6
   1d8e0:	bcc	1d988 <main@@Base+0xa5e4>
   1d8e4:	cmp	sl, #4
   1d8e8:	blt	1dc08 <main@@Base+0xa864>
   1d8ec:	movw	r0, #30976	; 0x7900
   1d8f0:	movt	r0, #16750	; 0x416e
   1d8f4:	teq	r7, r0
   1d8f8:	bne	1dc08 <main@@Base+0xa864>
   1d8fc:	ldrb	r0, [r1, #3]
   1d900:	mov	r3, r1
   1d904:	cmp	r0, #46	; 0x2e
   1d908:	addeq	r3, r3, #4
   1d90c:	cmp	r3, r1
   1d910:	beq	1dc08 <main@@Base+0xa864>
   1d914:	mov	r1, r3
   1d918:	ldr	r0, [sp, #16]
   1d91c:	ldr	r3, [sp, #12]
   1d920:	sub	sp, fp, #28
   1d924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d928:	b	22c18 <main@@Base+0xf874>
   1d92c:	add	r0, r3, #64512	; 0xfc00
   1d930:	add	r7, r0, #17301504	; 0x1080000
   1d934:	subs	r0, r4, lr
   1d938:	sbcs	r0, r6, r7
   1d93c:	bcs	1d9d0 <main@@Base+0xa62c>
   1d940:	cmp	sl, #9
   1d944:	blt	1dc08 <main@@Base+0xa864>
   1d948:	eor	r0, r4, lr
   1d94c:	eor	r3, r6, r3
   1d950:	orrs	r0, r0, r3
   1d954:	bne	1dc08 <main@@Base+0xa864>
   1d958:	ldrb	r0, [r1, #8]
   1d95c:	mov	r3, r1
   1d960:	cmp	r0, #46	; 0x2e
   1d964:	addeq	r3, r3, #9
   1d968:	cmp	r3, r1
   1d96c:	beq	1dc08 <main@@Base+0xa864>
   1d970:	mov	r1, r3
   1d974:	ldr	r0, [sp, #16]
   1d978:	ldr	r3, [sp, #12]
   1d97c:	sub	sp, fp, #28
   1d980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d984:	b	2419c <main@@Base+0x10df8>
   1d988:	movw	r0, #28416	; 0x6f00
   1d98c:	movt	r0, #18031	; 0x466f
   1d990:	teq	r7, r0
   1d994:	bne	1da2c <main@@Base+0xa688>
   1d998:	cmp	sl, #4
   1d99c:	blt	1dc08 <main@@Base+0xa864>
   1d9a0:	ldrb	r0, [r1, #3]
   1d9a4:	mov	r3, r1
   1d9a8:	cmp	r0, #46	; 0x2e
   1d9ac:	addeq	r3, r3, #4
   1d9b0:	cmp	r3, r1
   1d9b4:	beq	1dc08 <main@@Base+0xa864>
   1d9b8:	mov	r1, r3
   1d9bc:	ldr	r0, [sp, #16]
   1d9c0:	ldr	r3, [sp, #12]
   1d9c4:	sub	sp, fp, #28
   1d9c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9cc:	b	23f24 <main@@Base+0x10b80>
   1d9d0:	sub	r0, r3, #4352	; 0x1100
   1d9d4:	subs	r3, r4, lr
   1d9d8:	sub	r0, r0, #-100663296	; 0xfa000000
   1d9dc:	sbcs	r0, r6, r0
   1d9e0:	bcs	1da78 <main@@Base+0xa6d4>
   1d9e4:	cmp	sl, #9
   1d9e8:	blt	1dc08 <main@@Base+0xa864>
   1d9ec:	eor	r0, r4, lr
   1d9f0:	eor	r3, r6, r7
   1d9f4:	orrs	r0, r0, r3
   1d9f8:	bne	1dc08 <main@@Base+0xa864>
   1d9fc:	ldrb	r0, [r1, #8]
   1da00:	mov	r3, r1
   1da04:	cmp	r0, #46	; 0x2e
   1da08:	addeq	r3, r3, #9
   1da0c:	cmp	r3, r1
   1da10:	beq	1dc08 <main@@Base+0xa864>
   1da14:	mov	r1, r3
   1da18:	ldr	r0, [sp, #16]
   1da1c:	ldr	r3, [sp, #12]
   1da20:	sub	sp, fp, #28
   1da24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da28:	b	24350 <main@@Base+0x10fac>
   1da2c:	cmp	sl, #6
   1da30:	blt	1dc08 <main@@Base+0xa864>
   1da34:	and	r0, r4, #-16777216	; 0xff000000
   1da38:	eor	r3, r6, r3
   1da3c:	eor	r0, r0, #1912602624	; 0x72000000
   1da40:	orrs	r0, r0, r3
   1da44:	bne	1dc08 <main@@Base+0xa864>
   1da48:	ldrb	r0, [r1, #5]
   1da4c:	mov	r3, r1
   1da50:	cmp	r0, #46	; 0x2e
   1da54:	addeq	r3, r3, #6
   1da58:	cmp	r3, r1
   1da5c:	beq	1dc08 <main@@Base+0xa864>
   1da60:	mov	r1, r3
   1da64:	ldr	r0, [sp, #16]
   1da68:	ldr	r3, [sp, #12]
   1da6c:	sub	sp, fp, #28
   1da70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da74:	b	1d628 <main@@Base+0xa284>
   1da78:	movw	r0, #29817	; 0x7479
   1da7c:	movw	r3, #29797	; 0x7465
   1da80:	movt	r0, #28016	; 0x6d70
   1da84:	movt	r3, #28271	; 0x6e6f
   1da88:	eor	r0, r4, r0
   1da8c:	eor	r3, r6, r3
   1da90:	orrs	r0, r0, r3
   1da94:	beq	1dae8 <main@@Base+0xa744>
   1da98:	movw	r3, #26463	; 0x675f
   1da9c:	eor	r0, r4, lr
   1daa0:	movt	r3, #28261	; 0x6e65
   1daa4:	eor	r3, r6, r3
   1daa8:	orrs	r0, r0, r3
   1daac:	bne	1dc08 <main@@Base+0xa864>
   1dab0:	cmp	sl, #9
   1dab4:	blt	1dc08 <main@@Base+0xa864>
   1dab8:	ldrb	r0, [r1, #8]
   1dabc:	mov	r3, r1
   1dac0:	cmp	r0, #46	; 0x2e
   1dac4:	addeq	r3, r3, #9
   1dac8:	cmp	r3, r1
   1dacc:	beq	1dc08 <main@@Base+0xa864>
   1dad0:	mov	r1, r3
   1dad4:	ldr	r0, [sp, #16]
   1dad8:	ldr	r3, [sp, #12]
   1dadc:	sub	sp, fp, #28
   1dae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dae4:	b	24548 <main@@Base+0x111a4>
   1dae8:	add	ip, r1, #8
   1daec:	sub	r5, r2, ip
   1daf0:	cmp	r5, #8
   1daf4:	mov	r0, r5
   1daf8:	movcs	r0, #8
   1dafc:	and	r0, r0, #15
   1db00:	sub	r3, r0, #1
   1db04:	cmp	r3, #7
   1db08:	bhi	1dc08 <main@@Base+0xa864>
   1db0c:	add	r0, pc, #20
   1db10:	mov	r8, #0
   1db14:	mov	r4, #0
   1db18:	mov	r7, #0
   1db1c:	ldr	r6, [r0, r3, lsl #2]
   1db20:	mov	r3, #0
   1db24:	add	pc, r0, r6
   1db28:	andeq	r0, r0, r8, lsr r0
   1db2c:	andeq	r0, r0, r0, lsr r0
   1db30:	andeq	r0, r0, r8, lsr #32
   1db34:	andeq	r0, r0, r0, lsr #32
   1db38:	andeq	r0, r0, r0, lsr #32
   1db3c:	andeq	r0, r0, r0, lsr #32
   1db40:	andeq	r0, r0, r0, lsr #32
   1db44:	andeq	r0, r0, r0, lsr #32
   1db48:	ldrb	r3, [r1, #11]
   1db4c:	mov	r8, #0
   1db50:	ldrb	r0, [r1, #10]
   1db54:	orr	r4, r3, r0, lsl #8
   1db58:	ldrb	r0, [r1, #9]
   1db5c:	orr	r7, r4, r0, lsl #16
   1db60:	cmp	r5, #5
   1db64:	blt	1dc08 <main@@Base+0xa864>
   1db68:	ldrb	r0, [ip]
   1db6c:	orr	r0, r7, r0, lsl #24
   1db70:	eor	r0, r0, lr
   1db74:	orrs	r0, r8, r0
   1db78:	bne	1dc08 <main@@Base+0xa864>
   1db7c:	ldrb	r0, [r1, #12]
   1db80:	mov	r5, ip
   1db84:	cmp	r0, #46	; 0x2e
   1db88:	addeq	r5, r1, #13
   1db8c:	cmp	r5, ip
   1db90:	beq	1dc08 <main@@Base+0xa864>
   1db94:	sub	r0, r2, r5
   1db98:	mov	r1, #-268435456	; 0xf0000000
   1db9c:	cmp	r0, #8
   1dba0:	movcs	r0, #8
   1dba4:	add	r0, r1, r0, lsl #28
   1dba8:	asr	r0, r0, #28
   1dbac:	cmp	r0, #0
   1dbb0:	blt	1dc04 <main@@Base+0xa860>
   1dbb4:	ldrb	r0, [r5]
   1dbb8:	cmp	r0, #120	; 0x78
   1dbbc:	bne	1dc04 <main@@Base+0xa860>
   1dbc0:	ldr	r0, [sp, #8]
   1dbc4:	mov	r1, r5
   1dbc8:	mov	r3, #1
   1dbcc:	str	r0, [sp]
   1dbd0:	ldr	r0, [sp, #16]
   1dbd4:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   1dbd8:	cmp	r0, r5
   1dbdc:	mov	r1, r5
   1dbe0:	beq	1dc08 <main@@Base+0xa864>
   1dbe4:	ldr	r2, [sp, #4]
   1dbe8:	mov	r1, #0
   1dbec:	str	r1, [r2]
   1dbf0:	str	r1, [r2, #4]
   1dbf4:	ldr	r2, [sp, #12]
   1dbf8:	str	r1, [r2]
   1dbfc:	mov	r1, r0
   1dc00:	b	1dc08 <main@@Base+0xa864>
   1dc04:	mov	r1, r5
   1dc08:	mov	r0, r1
   1dc0c:	sub	sp, fp, #28
   1dc10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc18:	add	fp, sp, #28
   1dc1c:	sub	sp, sp, #28
   1dc20:	mov	r8, r2
   1dc24:	sub	r2, r2, r1
   1dc28:	cmp	r2, #8
   1dc2c:	movcs	r2, #8
   1dc30:	and	r2, r2, #15
   1dc34:	sub	r2, r2, #1
   1dc38:	cmp	r2, #7
   1dc3c:	bhi	1eb30 <main@@Base+0xb78c>
   1dc40:	str	r0, [sp, #24]
   1dc44:	mov	r0, #0
   1dc48:	mov	ip, #0
   1dc4c:	mov	lr, #0
   1dc50:	mov	sl, #0
   1dc54:	mov	r6, #0
   1dc58:	mov	r5, #0
   1dc5c:	ldr	r7, [fp, #12]
   1dc60:	str	r7, [sp, #20]
   1dc64:	ldr	r7, [fp, #8]
   1dc68:	str	r7, [sp, #16]
   1dc6c:	add	r4, pc, #12
   1dc70:	mov	r7, #0
   1dc74:	ldr	r9, [r4, r2, lsl #2]
   1dc78:	mov	r2, #0
   1dc7c:	add	pc, r4, r9
   1dc80:	andeq	r0, r0, r4, rrx
   1dc84:	andeq	r0, r0, ip, asr r0
   1dc88:	andeq	r0, r0, r4, asr r0
   1dc8c:	andeq	r0, r0, ip, asr #32
   1dc90:	andeq	r0, r0, r0, asr #32
   1dc94:	andeq	r0, r0, r4, lsr r0
   1dc98:	andeq	r0, r0, r4, lsr #32
   1dc9c:	andeq	r0, r0, r0, lsr #32
   1dca0:	ldrb	ip, [r1, #7]
   1dca4:	ldrb	r2, [r1, #6]
   1dca8:	mov	lr, r0
   1dcac:	orr	r2, ip, r2, lsl #8
   1dcb0:	mov	r0, r2
   1dcb4:	ldrb	r2, [r1, #5]
   1dcb8:	mov	sl, lr
   1dcbc:	orr	r0, r0, r2, lsl #16
   1dcc0:	ldrb	r2, [r1, #4]
   1dcc4:	mov	r6, sl
   1dcc8:	orr	r0, r0, r2, lsl #24
   1dccc:	ldrb	r2, [r1, #3]
   1dcd0:	orr	r7, r2, r6
   1dcd4:	ldrb	r2, [r1, #2]
   1dcd8:	orr	r5, r7, r2, lsl #8
   1dcdc:	ldrb	r2, [r1, #1]
   1dce0:	orr	r2, r5, r2, lsl #16
   1dce4:	ldrb	r7, [r1]
   1dce8:	movw	r6, #18273	; 0x4761
   1dcec:	movt	r6, #19833	; 0x4d79
   1dcf0:	orr	r2, r2, r7, lsl #24
   1dcf4:	movw	r7, #11844	; 0x2e44
   1dcf8:	movt	r7, #28005	; 0x6d65
   1dcfc:	subs	r7, r7, r0
   1dd00:	sbcs	r7, r6, r2
   1dd04:	bcc	1de70 <main@@Base+0xaacc>
   1dd08:	movw	r7, #31022	; 0x792e
   1dd0c:	movt	r7, #24947	; 0x6173
   1dd10:	eor	r0, r0, r7
   1dd14:	movw	r7, #28276	; 0x6e74
   1dd18:	movt	r7, #18017	; 0x4661
   1dd1c:	eor	r2, r2, r7
   1dd20:	orrs	r0, r0, r2
   1dd24:	bne	1eb30 <main@@Base+0xb78c>
   1dd28:	add	lr, r1, #8
   1dd2c:	sub	r0, r8, lr
   1dd30:	cmp	r0, #8
   1dd34:	movcs	r0, #8
   1dd38:	and	r0, r0, #15
   1dd3c:	sub	r0, r0, #1
   1dd40:	cmp	r0, #7
   1dd44:	bhi	1eb30 <main@@Base+0xb78c>
   1dd48:	str	r3, [sp, #12]
   1dd4c:	add	r5, pc, #36	; 0x24
   1dd50:	mov	sl, #0
   1dd54:	mov	ip, #0
   1dd58:	mov	r9, #0
   1dd5c:	mov	r6, #0
   1dd60:	mov	r7, #0
   1dd64:	mov	r4, #0
   1dd68:	mov	r3, #0
   1dd6c:	ldr	r2, [r5, r0, lsl #2]
   1dd70:	mov	r0, #0
   1dd74:	add	pc, r5, r2
   1dd78:	andeq	r0, r0, r4, rrx
   1dd7c:	andeq	r0, r0, ip, asr r0
   1dd80:	andeq	r0, r0, r4, asr r0
   1dd84:	andeq	r0, r0, ip, asr #32
   1dd88:	andeq	r0, r0, r0, asr #32
   1dd8c:	andeq	r0, r0, r4, lsr r0
   1dd90:	andeq	r0, r0, r4, lsr #32
   1dd94:	andeq	r0, r0, r0, lsr #32
   1dd98:	ldrb	ip, [r1, #15]
   1dd9c:	ldrb	r0, [r1, #14]
   1dda0:	mov	r9, sl
   1dda4:	orr	r0, ip, r0, lsl #8
   1dda8:	mov	sl, r0
   1ddac:	ldrb	r0, [r1, #13]
   1ddb0:	mov	r6, r9
   1ddb4:	orr	sl, sl, r0, lsl #16
   1ddb8:	ldrb	r0, [r1, #12]
   1ddbc:	mov	r7, r6
   1ddc0:	orr	sl, sl, r0, lsl #24
   1ddc4:	ldrb	r0, [r1, #11]
   1ddc8:	orr	r4, r0, r7
   1ddcc:	ldrb	r0, [r1, #10]
   1ddd0:	orr	r3, r4, r0, lsl #8
   1ddd4:	ldrb	r0, [r1, #9]
   1ddd8:	orr	r0, r3, r0, lsl #16
   1dddc:	ldrb	r3, [lr]
   1dde0:	movw	r2, #29797	; 0x7465
   1dde4:	movt	r2, #24931	; 0x6163
   1dde8:	eor	r2, sl, r2
   1ddec:	orr	r0, r0, r3, lsl #24
   1ddf0:	movw	r3, #24946	; 0x6172
   1ddf4:	movt	r3, #17256	; 0x4368
   1ddf8:	eor	r0, r0, r3
   1ddfc:	orrs	r0, r2, r0
   1de00:	bne	1eb30 <main@@Base+0xb78c>
   1de04:	add	r0, r1, #16
   1de08:	mov	r7, #-268435456	; 0xf0000000
   1de0c:	sub	r2, r8, r0
   1de10:	cmp	r2, #8
   1de14:	mov	r3, r2
   1de18:	movcs	r3, #8
   1de1c:	add	r3, r7, r3, lsl #28
   1de20:	asr	r3, r3, #28
   1de24:	cmp	r3, #0
   1de28:	cmpge	r2, #2
   1de2c:	blt	1eb30 <main@@Base+0xb78c>
   1de30:	ldrb	r2, [r0]
   1de34:	cmp	r2, #114	; 0x72
   1de38:	bne	1eb30 <main@@Base+0xb78c>
   1de3c:	ldrb	r2, [r1, #17]
   1de40:	ldr	r3, [sp, #12]
   1de44:	cmp	r2, #46	; 0x2e
   1de48:	mov	r2, r0
   1de4c:	addeq	r2, r1, #18
   1de50:	cmp	r2, r0
   1de54:	beq	1eb30 <main@@Base+0xb78c>
   1de58:	ldr	r0, [sp, #24]
   1de5c:	mov	r1, r2
   1de60:	mov	r2, r8
   1de64:	sub	sp, fp, #28
   1de68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de6c:	b	24698 <main@@Base+0x112f4>
   1de70:	movw	r7, #11855	; 0x2e4f
   1de74:	eor	r2, r2, r6
   1de78:	movt	r7, #28005	; 0x6d65
   1de7c:	eor	r7, r0, r7
   1de80:	orrs	r7, r7, r2
   1de84:	beq	1e028 <main@@Base+0xac84>
   1de88:	movw	r7, #11845	; 0x2e45
   1de8c:	movt	r7, #28005	; 0x6d65
   1de90:	eor	r0, r0, r7
   1de94:	orrs	r0, r0, r2
   1de98:	bne	1eb30 <main@@Base+0xb78c>
   1de9c:	add	lr, r1, #8
   1dea0:	sub	r0, r8, lr
   1dea4:	cmp	r0, #8
   1dea8:	movcs	r0, #8
   1deac:	and	r0, r0, #15
   1deb0:	sub	r2, r0, #1
   1deb4:	cmp	r2, #7
   1deb8:	bhi	1eb30 <main@@Base+0xb78c>
   1debc:	str	r3, [sp, #12]
   1dec0:	add	r5, pc, #36	; 0x24
   1dec4:	mov	r0, #0
   1dec8:	mov	ip, #0
   1decc:	mov	r9, #0
   1ded0:	mov	r7, #0
   1ded4:	mov	r6, #0
   1ded8:	mov	r4, #0
   1dedc:	mov	r3, #0
   1dee0:	ldr	sl, [r5, r2, lsl #2]
   1dee4:	mov	r2, #0
   1dee8:	add	pc, r5, sl
   1deec:	andeq	r0, r0, r4, rrx
   1def0:	andeq	r0, r0, ip, asr r0
   1def4:	andeq	r0, r0, r4, asr r0
   1def8:	andeq	r0, r0, ip, asr #32
   1defc:	andeq	r0, r0, r0, asr #32
   1df00:	andeq	r0, r0, r4, lsr r0
   1df04:	andeq	r0, r0, r4, lsr #32
   1df08:	andeq	r0, r0, r0, lsr #32
   1df0c:	ldrb	ip, [r1, #15]
   1df10:	ldrb	r2, [r1, #14]
   1df14:	mov	r9, r0
   1df18:	orr	r2, ip, r2, lsl #8
   1df1c:	mov	r0, r2
   1df20:	ldrb	r2, [r1, #13]
   1df24:	mov	r7, r9
   1df28:	orr	r0, r0, r2, lsl #16
   1df2c:	ldrb	r2, [r1, #12]
   1df30:	mov	r6, r7
   1df34:	orr	r0, r0, r2, lsl #24
   1df38:	ldrb	r2, [r1, #11]
   1df3c:	orr	r4, r2, r6
   1df40:	ldrb	r2, [r1, #10]
   1df44:	orr	r3, r4, r2, lsl #8
   1df48:	ldrb	r2, [r1, #9]
   1df4c:	orr	r2, r3, r2, lsl #16
   1df50:	ldrb	r3, [lr]
   1df54:	movw	r6, #11880	; 0x2e68
   1df58:	movt	r6, #27749	; 0x6c65
   1df5c:	subs	r7, r0, r6
   1df60:	orr	r2, r2, r3, lsl #24
   1df64:	movw	r3, #28016	; 0x6d70
   1df68:	movt	r3, #30817	; 0x7861
   1df6c:	sbcs	r7, r2, r3
   1df70:	bcs	1e408 <main@@Base+0xb064>
   1df74:	ldr	lr, [sp, #12]
   1df78:	subs	r7, r6, #37	; 0x25
   1df7c:	sbc	r5, r3, #0
   1df80:	subs	r7, r0, r7
   1df84:	sbcs	r7, r2, r5
   1df88:	bcs	1e528 <main@@Base+0xb184>
   1df8c:	subs	r7, r6, #39	; 0x27
   1df90:	sbc	r3, r3, #0
   1df94:	eor	r0, r0, r7
   1df98:	eor	r2, r2, r3
   1df9c:	orrs	r0, r0, r2
   1dfa0:	bne	1eb30 <main@@Base+0xb78c>
   1dfa4:	add	r0, r1, #16
   1dfa8:	sub	r2, r8, r0
   1dfac:	cmp	r2, #8
   1dfb0:	mov	r3, r2
   1dfb4:	movcs	r3, #8
   1dfb8:	and	r7, r3, #15
   1dfbc:	sub	r3, r7, #2
   1dfc0:	cmp	r3, #7
   1dfc4:	bcs	1ea10 <main@@Base+0xb66c>
   1dfc8:	ldrb	r3, [r1, #17]
   1dfcc:	lsl	r7, r3, #16
   1dfd0:	mov	r3, #0
   1dfd4:	cmp	r2, #3
   1dfd8:	blt	1eb30 <main@@Base+0xb78c>
   1dfdc:	ldrb	r2, [r0]
   1dfe0:	orr	r2, r7, r2, lsl #24
   1dfe4:	eor	r2, r2, #7929856	; 0x790000
   1dfe8:	eor	r2, r2, #1845493760	; 0x6e000000
   1dfec:	orrs	r2, r3, r2
   1dff0:	bne	1eb30 <main@@Base+0xb78c>
   1dff4:	ldrb	r2, [r1, #18]
   1dff8:	cmp	r2, #46	; 0x2e
   1dffc:	mov	r2, r0
   1e000:	addeq	r2, r1, #19
   1e004:	cmp	r2, r0
   1e008:	beq	1eb30 <main@@Base+0xb78c>
   1e00c:	ldr	r0, [sp, #24]
   1e010:	mov	r1, r2
   1e014:	mov	r2, r8
   1e018:	mov	r3, lr
   1e01c:	sub	sp, fp, #28
   1e020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e024:	b	22c18 <main@@Base+0xf874>
   1e028:	add	lr, r1, #8
   1e02c:	sub	r0, r8, lr
   1e030:	cmp	r0, #8
   1e034:	movcs	r0, #8
   1e038:	and	r0, r0, #15
   1e03c:	sub	r0, r0, #1
   1e040:	cmp	r0, #7
   1e044:	bhi	1eb30 <main@@Base+0xb78c>
   1e048:	str	r3, [sp, #12]
   1e04c:	add	r5, pc, #36	; 0x24
   1e050:	mov	sl, #0
   1e054:	mov	ip, #0
   1e058:	mov	r9, #0
   1e05c:	mov	r7, #0
   1e060:	mov	r6, #0
   1e064:	mov	r4, #0
   1e068:	mov	r3, #0
   1e06c:	ldr	r2, [r5, r0, lsl #2]
   1e070:	mov	r0, #0
   1e074:	add	pc, r5, r2
   1e078:	andeq	r0, r0, r4, rrx
   1e07c:	andeq	r0, r0, ip, asr r0
   1e080:	andeq	r0, r0, r4, asr r0
   1e084:	andeq	r0, r0, ip, asr #32
   1e088:	andeq	r0, r0, r0, asr #32
   1e08c:	andeq	r0, r0, r4, lsr r0
   1e090:	andeq	r0, r0, r4, lsr #32
   1e094:	andeq	r0, r0, r0, lsr #32
   1e098:	ldrb	ip, [r1, #15]
   1e09c:	ldrb	r0, [r1, #14]
   1e0a0:	mov	r9, sl
   1e0a4:	orr	r0, ip, r0, lsl #8
   1e0a8:	mov	sl, r0
   1e0ac:	ldrb	r0, [r1, #13]
   1e0b0:	mov	r7, r9
   1e0b4:	orr	sl, sl, r0, lsl #16
   1e0b8:	ldrb	r0, [r1, #12]
   1e0bc:	mov	r6, r7
   1e0c0:	orr	sl, sl, r0, lsl #24
   1e0c4:	ldrb	r0, [r1, #11]
   1e0c8:	orr	r4, r0, r6
   1e0cc:	ldrb	r0, [r1, #10]
   1e0d0:	orr	r3, r4, r0, lsl #8
   1e0d4:	ldrb	r0, [r1, #9]
   1e0d8:	orr	r0, r3, r0, lsl #16
   1e0dc:	ldrb	r3, [lr]
   1e0e0:	movw	r2, #28005	; 0x6d65
   1e0e4:	movt	r2, #20065	; 0x4e61
   1e0e8:	eor	r2, sl, r2
   1e0ec:	orr	r0, r0, r3, lsl #24
   1e0f0:	movw	r3, #25970	; 0x6572
   1e0f4:	movt	r3, #29800	; 0x7468
   1e0f8:	eor	r0, r0, r3
   1e0fc:	orrs	r0, r2, r0
   1e100:	bne	1eb30 <main@@Base+0xb78c>
   1e104:	add	lr, r1, #16
   1e108:	sub	r0, r8, lr
   1e10c:	cmp	r0, #8
   1e110:	movcs	r0, #8
   1e114:	and	r0, r0, #15
   1e118:	sub	r0, r0, #1
   1e11c:	cmp	r0, #7
   1e120:	bhi	1eb30 <main@@Base+0xb78c>
   1e124:	add	r5, pc, #36	; 0x24
   1e128:	mov	sl, #0
   1e12c:	mov	ip, #0
   1e130:	mov	r9, #0
   1e134:	mov	r7, #0
   1e138:	mov	r6, #0
   1e13c:	mov	r4, #0
   1e140:	mov	r3, #0
   1e144:	ldr	r2, [r5, r0, lsl #2]
   1e148:	mov	r0, #0
   1e14c:	add	pc, r5, r2
   1e150:	andeq	r0, r0, r4, rrx
   1e154:	andeq	r0, r0, ip, asr r0
   1e158:	andeq	r0, r0, r4, asr r0
   1e15c:	andeq	r0, r0, ip, asr #32
   1e160:	andeq	r0, r0, r0, asr #32
   1e164:	andeq	r0, r0, r4, lsr r0
   1e168:	andeq	r0, r0, r4, lsr #32
   1e16c:	andeq	r0, r0, r0, lsr #32
   1e170:	ldrb	ip, [r1, #23]
   1e174:	ldrb	r0, [r1, #22]
   1e178:	mov	r9, sl
   1e17c:	orr	r0, ip, r0, lsl #8
   1e180:	mov	sl, r0
   1e184:	ldrb	r0, [r1, #21]
   1e188:	mov	r7, r9
   1e18c:	orr	sl, sl, r0, lsl #16
   1e190:	ldrb	r0, [r1, #20]
   1e194:	mov	r6, r7
   1e198:	orr	sl, sl, r0, lsl #24
   1e19c:	ldrb	r0, [r1, #19]
   1e1a0:	orr	r4, r0, r6
   1e1a4:	ldrb	r0, [r1, #18]
   1e1a8:	orr	r3, r4, r0, lsl #8
   1e1ac:	ldrb	r0, [r1, #17]
   1e1b0:	orr	r0, r3, r0, lsl #16
   1e1b4:	ldrb	r3, [lr]
   1e1b8:	movw	r2, #18034	; 0x4672
   1e1bc:	movt	r2, #25902	; 0x652e
   1e1c0:	eor	r2, sl, r2
   1e1c4:	orr	r0, r0, r3, lsl #24
   1e1c8:	movw	r3, #24931	; 0x6163
   1e1cc:	movt	r3, #21360	; 0x5370
   1e1d0:	eor	r0, r0, r3
   1e1d4:	orrs	r0, r2, r0
   1e1d8:	bne	1eb30 <main@@Base+0xb78c>
   1e1dc:	add	lr, r1, #24
   1e1e0:	sub	r0, r8, lr
   1e1e4:	cmp	r0, #8
   1e1e8:	movcs	r0, #8
   1e1ec:	and	r0, r0, #15
   1e1f0:	sub	r0, r0, #1
   1e1f4:	cmp	r0, #7
   1e1f8:	bhi	1eb30 <main@@Base+0xb78c>
   1e1fc:	add	r5, pc, #36	; 0x24
   1e200:	mov	sl, #0
   1e204:	mov	ip, #0
   1e208:	mov	r9, #0
   1e20c:	mov	r7, #0
   1e210:	mov	r6, #0
   1e214:	mov	r4, #0
   1e218:	mov	r3, #0
   1e21c:	ldr	r2, [r5, r0, lsl #2]
   1e220:	mov	r0, #0
   1e224:	add	pc, r5, r2
   1e228:	andeq	r0, r0, r4, rrx
   1e22c:	andeq	r0, r0, ip, asr r0
   1e230:	andeq	r0, r0, r4, asr r0
   1e234:	andeq	r0, r0, ip, asr #32
   1e238:	andeq	r0, r0, r0, asr #32
   1e23c:	andeq	r0, r0, r4, lsr r0
   1e240:	andeq	r0, r0, r4, lsr #32
   1e244:	andeq	r0, r0, r0, lsr #32
   1e248:	ldrb	ip, [r1, #31]
   1e24c:	ldrb	r0, [r1, #30]
   1e250:	mov	r9, sl
   1e254:	orr	r0, ip, r0, lsl #8
   1e258:	mov	sl, r0
   1e25c:	ldrb	r0, [r1, #29]
   1e260:	mov	r7, r9
   1e264:	orr	sl, sl, r0, lsl #16
   1e268:	ldrb	r0, [r1, #28]
   1e26c:	mov	r6, r7
   1e270:	orr	sl, sl, r0, lsl #24
   1e274:	ldrb	r0, [r1, #27]
   1e278:	orr	r4, r0, r6
   1e27c:	ldrb	r0, [r1, #26]
   1e280:	orr	r3, r4, r0, lsl #8
   1e284:	ldrb	r0, [r1, #25]
   1e288:	orr	r0, r3, r0, lsl #16
   1e28c:	ldrb	r3, [lr]
   1e290:	movw	r2, #30052	; 0x7564
   1e294:	movt	r2, #25452	; 0x636c
   1e298:	eor	r2, sl, r2
   1e29c:	orr	r0, r0, r3, lsl #24
   1e2a0:	movw	r3, #18798	; 0x496e
   1e2a4:	movt	r3, #28525	; 0x6f6d
   1e2a8:	eor	r0, r0, r3
   1e2ac:	orrs	r0, r2, r0
   1e2b0:	bne	1eb30 <main@@Base+0xb78c>
   1e2b4:	add	r0, r1, #32
   1e2b8:	mov	r7, #-268435456	; 0xf0000000
   1e2bc:	sub	r2, r8, r0
   1e2c0:	cmp	r2, #8
   1e2c4:	mov	r3, r2
   1e2c8:	movcs	r3, #8
   1e2cc:	add	r3, r7, r3, lsl #28
   1e2d0:	asr	r3, r3, #28
   1e2d4:	cmp	r3, #0
   1e2d8:	cmpge	r2, #2
   1e2dc:	blt	1eb30 <main@@Base+0xb78c>
   1e2e0:	ldrb	r2, [r0]
   1e2e4:	cmp	r2, #101	; 0x65
   1e2e8:	bne	1eb30 <main@@Base+0xb78c>
   1e2ec:	ldrb	r2, [r1, #33]	; 0x21
   1e2f0:	ldr	r9, [sp, #12]
   1e2f4:	mov	r7, r0
   1e2f8:	cmp	r2, #46	; 0x2e
   1e2fc:	addeq	r7, r1, #34	; 0x22
   1e300:	cmp	r7, r0
   1e304:	beq	1eb30 <main@@Base+0xb78c>
   1e308:	sub	r0, r8, r7
   1e30c:	cmp	r0, #8
   1e310:	movcs	r0, #8
   1e314:	and	r0, r0, #15
   1e318:	sub	r0, r0, #1
   1e31c:	cmp	r0, #7
   1e320:	bhi	1eb2c <main@@Base+0xb788>
   1e324:	add	r6, pc, #36	; 0x24
   1e328:	mov	sl, #0
   1e32c:	mov	ip, #0
   1e330:	mov	lr, #0
   1e334:	mov	r1, #0
   1e338:	mov	r2, #0
   1e33c:	mov	r3, #0
   1e340:	mov	r5, #0
   1e344:	mov	r4, #0
   1e348:	ldr	r0, [r6, r0, lsl #2]
   1e34c:	add	pc, r6, r0
   1e350:	andeq	r0, r0, r4, rrx
   1e354:	andeq	r0, r0, ip, asr r0
   1e358:	andeq	r0, r0, r4, asr r0
   1e35c:	andeq	r0, r0, ip, asr #32
   1e360:	andeq	r0, r0, r0, asr #32
   1e364:	andeq	r0, r0, r4, lsr r0
   1e368:	andeq	r0, r0, r4, lsr #32
   1e36c:	andeq	r0, r0, r0, lsr #32
   1e370:	ldrb	ip, [r7, #7]
   1e374:	ldrb	r0, [r7, #6]
   1e378:	mov	lr, sl
   1e37c:	orr	r0, ip, r0, lsl #8
   1e380:	mov	sl, r0
   1e384:	ldrb	r0, [r7, #5]
   1e388:	mov	r1, lr
   1e38c:	orr	sl, sl, r0, lsl #16
   1e390:	ldrb	r0, [r7, #4]
   1e394:	mov	r2, r1
   1e398:	orr	sl, sl, r0, lsl #24
   1e39c:	ldrb	r0, [r7, #3]
   1e3a0:	orr	r3, r0, r2
   1e3a4:	ldrb	r0, [r7, #2]
   1e3a8:	orr	r5, r3, r0, lsl #8
   1e3ac:	ldrb	r0, [r7, #1]
   1e3b0:	orr	r4, r5, r0, lsl #16
   1e3b4:	ldrb	r0, [r7]
   1e3b8:	movw	r1, #28416	; 0x6f00
   1e3bc:	movt	r1, #18031	; 0x466f
   1e3c0:	orr	r6, r4, r0, lsl #24
   1e3c4:	ldr	r4, [sp, #24]
   1e3c8:	bic	r0, r6, #255	; 0xff
   1e3cc:	teq	r0, r1
   1e3d0:	bne	1ea38 <main@@Base+0xb694>
   1e3d4:	ldr	r0, [sp, #20]
   1e3d8:	mov	r1, r7
   1e3dc:	mov	r2, r8
   1e3e0:	mov	r3, #3
   1e3e4:	str	r0, [sp]
   1e3e8:	mov	r0, r4
   1e3ec:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   1e3f0:	cmp	r0, r7
   1e3f4:	beq	1ea38 <main@@Base+0xb694>
   1e3f8:	mov	r1, r0
   1e3fc:	mov	r3, #0
   1e400:	mov	r2, #17
   1e404:	b	1ead0 <main@@Base+0xb72c>
   1e408:	eor	r5, r0, r6
   1e40c:	eor	r7, r2, r3
   1e410:	orrs	r5, r5, r7
   1e414:	bne	1e624 <main@@Base+0xb280>
   1e418:	add	ip, r1, #16
   1e41c:	sub	r2, r8, ip
   1e420:	cmp	r2, #8
   1e424:	mov	r0, r2
   1e428:	movcs	r0, #8
   1e42c:	and	r0, r0, #15
   1e430:	sub	r0, r0, #1
   1e434:	cmp	r0, #7
   1e438:	bhi	1eb30 <main@@Base+0xb78c>
   1e43c:	add	r5, pc, #32
   1e440:	mov	r9, #0
   1e444:	mov	lr, #0
   1e448:	mov	sl, #0
   1e44c:	mov	r3, #0
   1e450:	mov	r4, #0
   1e454:	mov	r7, #0
   1e458:	ldr	r6, [r5, r0, lsl #2]
   1e45c:	mov	r0, #0
   1e460:	add	pc, r5, r6
   1e464:	andeq	r0, r0, ip, asr r0
   1e468:	andeq	r0, r0, r4, asr r0
   1e46c:	andeq	r0, r0, ip, asr #32
   1e470:	andeq	r0, r0, r4, asr #32
   1e474:	andeq	r0, r0, r8, lsr r0
   1e478:	andeq	r0, r0, r8, lsr #32
   1e47c:	andeq	r0, r0, r0, lsr #32
   1e480:	andeq	r0, r0, r0, lsr #32
   1e484:	ldrb	r0, [r1, #22]
   1e488:	lsl	lr, r0, #8
   1e48c:	ldrb	r0, [r1, #21]
   1e490:	mov	sl, r9
   1e494:	orr	r0, lr, r0, lsl #16
   1e498:	mov	r9, r0
   1e49c:	ldrb	r0, [r1, #20]
   1e4a0:	mov	r3, sl
   1e4a4:	orr	r9, r9, r0, lsl #24
   1e4a8:	ldrb	r0, [r1, #19]
   1e4ac:	orr	r4, r0, r3
   1e4b0:	ldrb	r0, [r1, #18]
   1e4b4:	orr	r7, r4, r0, lsl #8
   1e4b8:	ldrb	r0, [r1, #17]
   1e4bc:	orr	r0, r7, r0, lsl #16
   1e4c0:	cmp	r2, #8
   1e4c4:	blt	1eb30 <main@@Base+0xb78c>
   1e4c8:	ldrb	r2, [ip]
   1e4cc:	movw	r3, #27904	; 0x6d00
   1e4d0:	movt	r3, #28277	; 0x6e75
   1e4d4:	eor	r3, r9, r3
   1e4d8:	orr	r0, r0, r2, lsl #24
   1e4dc:	movw	r2, #24421	; 0x5f65
   1e4e0:	movt	r2, #25959	; 0x6567
   1e4e4:	add	r2, r2, #1114112	; 0x110000
   1e4e8:	eor	r0, r0, r2
   1e4ec:	orrs	r0, r3, r0
   1e4f0:	bne	1eb30 <main@@Base+0xb78c>
   1e4f4:	ldrb	r0, [r1, #23]
   1e4f8:	ldr	r3, [sp, #12]
   1e4fc:	mov	r2, ip
   1e500:	cmp	r0, #46	; 0x2e
   1e504:	addeq	r2, r1, #24
   1e508:	cmp	r2, ip
   1e50c:	beq	1eb30 <main@@Base+0xb78c>
   1e510:	ldr	r0, [sp, #24]
   1e514:	mov	r1, r2
   1e518:	mov	r2, r8
   1e51c:	sub	sp, fp, #28
   1e520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e524:	b	2419c <main@@Base+0x10df8>
   1e528:	movw	r7, #11846	; 0x2e46
   1e52c:	eor	r2, r2, r3
   1e530:	movt	r7, #27749	; 0x6c65
   1e534:	eor	r7, r0, r7
   1e538:	orrs	r3, r7, r2
   1e53c:	beq	1e88c <main@@Base+0xb4e8>
   1e540:	movw	r3, #11843	; 0x2e43
   1e544:	movt	r3, #27749	; 0x6c65
   1e548:	eor	r0, r0, r3
   1e54c:	orrs	r0, r0, r2
   1e550:	bne	1eb30 <main@@Base+0xb78c>
   1e554:	add	r0, r1, #16
   1e558:	sub	r2, r8, r0
   1e55c:	cmp	r2, #8
   1e560:	mov	r3, r2
   1e564:	movcs	r3, #8
   1e568:	and	r3, r3, #15
   1e56c:	sub	r7, r3, #1
   1e570:	cmp	r7, #7
   1e574:	bhi	1eb30 <main@@Base+0xb78c>
   1e578:	add	r4, pc, #20
   1e57c:	mov	ip, #0
   1e580:	mov	r5, #0
   1e584:	mov	r6, #0
   1e588:	ldr	r3, [r4, r7, lsl #2]
   1e58c:	mov	r7, #0
   1e590:	add	pc, r4, r3
   1e594:	andeq	r0, r0, r8, lsr r0
   1e598:	andeq	r0, r0, r0, lsr r0
   1e59c:	andeq	r0, r0, r8, lsr #32
   1e5a0:	andeq	r0, r0, r0, lsr #32
   1e5a4:	andeq	r0, r0, r0, lsr #32
   1e5a8:	andeq	r0, r0, r0, lsr #32
   1e5ac:	andeq	r0, r0, r0, lsr #32
   1e5b0:	andeq	r0, r0, r0, lsr #32
   1e5b4:	ldrb	r7, [r1, #19]
   1e5b8:	mov	ip, #0
   1e5bc:	ldrb	r3, [r1, #18]
   1e5c0:	orr	r5, r7, r3, lsl #8
   1e5c4:	ldrb	r3, [r1, #17]
   1e5c8:	orr	r6, r5, r3, lsl #16
   1e5cc:	cmp	r2, #5
   1e5d0:	blt	1eb30 <main@@Base+0xb78c>
   1e5d4:	ldrb	r2, [r0]
   1e5d8:	movw	r3, #28530	; 0x6f72
   1e5dc:	movt	r3, #28524	; 0x6f6c
   1e5e0:	orr	r2, r6, r2, lsl #24
   1e5e4:	eor	r2, r2, r3
   1e5e8:	orrs	r2, ip, r2
   1e5ec:	bne	1eb30 <main@@Base+0xb78c>
   1e5f0:	ldrb	r2, [r1, #20]
   1e5f4:	cmp	r2, #46	; 0x2e
   1e5f8:	mov	r2, r0
   1e5fc:	addeq	r2, r1, #21
   1e600:	cmp	r2, r0
   1e604:	beq	1eb30 <main@@Base+0xb78c>
   1e608:	ldr	r0, [sp, #24]
   1e60c:	mov	r1, r2
   1e610:	mov	r2, r8
   1e614:	mov	r3, lr
   1e618:	sub	sp, fp, #28
   1e61c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e620:	b	1d628 <main@@Base+0xa284>
   1e624:	add	r5, r6, #6
   1e628:	subs	r4, r0, r5
   1e62c:	sbcs	r2, r2, r3
   1e630:	bcs	1e758 <main@@Base+0xb3b4>
   1e634:	add	r2, r6, #1
   1e638:	eor	r0, r0, r2
   1e63c:	orrs	r0, r0, r7
   1e640:	bne	1eb30 <main@@Base+0xb78c>
   1e644:	add	ip, r1, #16
   1e648:	sub	r2, r8, ip
   1e64c:	cmp	r2, #8
   1e650:	mov	r0, r2
   1e654:	movcs	r0, #8
   1e658:	and	r0, r0, #15
   1e65c:	sub	r0, r0, #1
   1e660:	cmp	r0, #7
   1e664:	bhi	1eb30 <main@@Base+0xb78c>
   1e668:	add	r7, pc, #32
   1e66c:	mov	lr, #0
   1e670:	mov	r9, #0
   1e674:	mov	sl, #0
   1e678:	mov	r3, #0
   1e67c:	mov	r5, #0
   1e680:	mov	r4, #0
   1e684:	ldr	r6, [r7, r0, lsl #2]
   1e688:	mov	r0, #0
   1e68c:	add	pc, r7, r6
   1e690:	andeq	r0, r0, ip, asr r0
   1e694:	andeq	r0, r0, r4, asr r0
   1e698:	andeq	r0, r0, ip, asr #32
   1e69c:	andeq	r0, r0, r4, asr #32
   1e6a0:	andeq	r0, r0, r8, lsr r0
   1e6a4:	andeq	r0, r0, r8, lsr #32
   1e6a8:	andeq	r0, r0, r0, lsr #32
   1e6ac:	andeq	r0, r0, r0, lsr #32
   1e6b0:	ldrb	r0, [r1, #22]
   1e6b4:	lsl	r9, r0, #8
   1e6b8:	ldrb	r0, [r1, #21]
   1e6bc:	mov	sl, lr
   1e6c0:	orr	r0, r9, r0, lsl #16
   1e6c4:	mov	lr, r0
   1e6c8:	ldrb	r0, [r1, #20]
   1e6cc:	mov	r3, sl
   1e6d0:	orr	lr, lr, r0, lsl #24
   1e6d4:	ldrb	r0, [r1, #19]
   1e6d8:	orr	r0, r0, r3
   1e6dc:	ldrb	r3, [r1, #18]
   1e6e0:	orr	r5, r0, r3, lsl #8
   1e6e4:	ldrb	r0, [r1, #17]
   1e6e8:	orr	r4, r5, r0, lsl #16
   1e6ec:	cmp	r2, #8
   1e6f0:	blt	1eb30 <main@@Base+0xb78c>
   1e6f4:	ldrb	r2, [ip]
   1e6f8:	movw	r0, #24421	; 0x5f65
   1e6fc:	movw	r3, #27904	; 0x6d00
   1e700:	movt	r0, #25959	; 0x6567
   1e704:	movt	r3, #28277	; 0x6e75
   1e708:	add	r0, r0, #851968	; 0xd0000
   1e70c:	eor	r3, lr, r3
   1e710:	add	r0, r0, #150994944	; 0x9000000
   1e714:	orr	r2, r4, r2, lsl #24
   1e718:	eor	r0, r2, r0
   1e71c:	orrs	r0, r3, r0
   1e720:	bne	1eb30 <main@@Base+0xb78c>
   1e724:	ldrb	r0, [r1, #23]
   1e728:	ldr	r3, [sp, #12]
   1e72c:	mov	r2, ip
   1e730:	cmp	r0, #46	; 0x2e
   1e734:	addeq	r2, r1, #24
   1e738:	cmp	r2, ip
   1e73c:	beq	1eb30 <main@@Base+0xb78c>
   1e740:	ldr	r0, [sp, #24]
   1e744:	mov	r1, r2
   1e748:	mov	r2, r8
   1e74c:	sub	sp, fp, #28
   1e750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e754:	b	24350 <main@@Base+0x10fac>
   1e758:	eor	r0, r0, r5
   1e75c:	orrs	r0, r0, r7
   1e760:	bne	1eb30 <main@@Base+0xb78c>
   1e764:	add	lr, r1, #16
   1e768:	sub	r2, r8, lr
   1e76c:	cmp	r2, #8
   1e770:	mov	r0, r2
   1e774:	movcs	r0, #8
   1e778:	and	r0, r0, #15
   1e77c:	sub	r0, r0, #1
   1e780:	cmp	r0, #7
   1e784:	bhi	1eb30 <main@@Base+0xb78c>
   1e788:	add	r5, pc, #40	; 0x28
   1e78c:	mov	sl, #0
   1e790:	mov	r9, #0
   1e794:	mov	r7, #0
   1e798:	mov	r6, #0
   1e79c:	mov	r4, #0
   1e7a0:	mov	ip, #0
   1e7a4:	ldr	r3, [r5, r0, lsl #2]
   1e7a8:	mov	r0, #0
   1e7ac:	str	r0, [sp, #8]
   1e7b0:	mov	r0, #0
   1e7b4:	add	pc, r5, r3
   1e7b8:	andeq	r0, r0, ip, rrx
   1e7bc:	andeq	r0, r0, r4, rrx
   1e7c0:	andeq	r0, r0, ip, asr r0
   1e7c4:	andeq	r0, r0, r4, asr r0
   1e7c8:	andeq	r0, r0, r8, asr #32
   1e7cc:	andeq	r0, r0, ip, lsr r0
   1e7d0:	andeq	r0, r0, r8, lsr #32
   1e7d4:	andeq	r0, r0, r0, lsr #32
   1e7d8:	ldrb	r0, [r1, #23]
   1e7dc:	str	r0, [sp, #8]
   1e7e0:	ldrb	r0, [r1, #22]
   1e7e4:	ldr	r3, [sp, #8]
   1e7e8:	mov	r9, sl
   1e7ec:	orr	r0, r3, r0, lsl #8
   1e7f0:	mov	sl, r0
   1e7f4:	ldrb	r0, [r1, #21]
   1e7f8:	mov	r7, r9
   1e7fc:	orr	sl, sl, r0, lsl #16
   1e800:	ldrb	r0, [r1, #20]
   1e804:	mov	r6, r7
   1e808:	orr	sl, sl, r0, lsl #24
   1e80c:	ldrb	r0, [r1, #19]
   1e810:	orr	r4, r0, r6
   1e814:	ldrb	r0, [r1, #18]
   1e818:	orr	r0, r4, r0, lsl #8
   1e81c:	ldrb	r3, [r1, #17]
   1e820:	orr	ip, r0, r3, lsl #16
   1e824:	ldrb	r0, [lr]
   1e828:	cmp	r2, #8
   1e82c:	orr	r6, ip, r0, lsl #24
   1e830:	movw	ip, #27904	; 0x6d00
   1e834:	movt	ip, #28277	; 0x6e75
   1e838:	blt	1e910 <main@@Base+0xb56c>
   1e83c:	movw	r2, #24421	; 0x5f65
   1e840:	bic	r0, sl, #255	; 0xff
   1e844:	movt	r2, #25959	; 0x6567
   1e848:	eor	r0, r0, ip
   1e84c:	eor	r2, r6, r2
   1e850:	orrs	r0, r0, r2
   1e854:	bne	1e910 <main@@Base+0xb56c>
   1e858:	ldrb	r0, [r1, #23]
   1e85c:	mov	r2, lr
   1e860:	cmp	r0, #46	; 0x2e
   1e864:	addeq	r2, r1, #24
   1e868:	cmp	r2, lr
   1e86c:	beq	1e910 <main@@Base+0xb56c>
   1e870:	ldr	r0, [sp, #24]
   1e874:	ldr	r3, [sp, #12]
   1e878:	mov	r1, r2
   1e87c:	mov	r2, r8
   1e880:	sub	sp, fp, #28
   1e884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e888:	b	24548 <main@@Base+0x111a4>
   1e88c:	add	r0, r1, #16
   1e890:	sub	r2, r8, r0
   1e894:	cmp	r2, #8
   1e898:	mov	r3, r2
   1e89c:	movcs	r3, #8
   1e8a0:	and	r7, r3, #15
   1e8a4:	sub	r3, r7, #2
   1e8a8:	cmp	r3, #7
   1e8ac:	bcs	1ea24 <main@@Base+0xb680>
   1e8b0:	ldrb	r3, [r1, #17]
   1e8b4:	lsl	r7, r3, #16
   1e8b8:	mov	r3, #0
   1e8bc:	cmp	r2, #3
   1e8c0:	blt	1eb30 <main@@Base+0xb78c>
   1e8c4:	ldrb	r2, [r0]
   1e8c8:	orr	r2, r7, r2, lsl #24
   1e8cc:	eor	r2, r2, #7274496	; 0x6f0000
   1e8d0:	eor	r2, r2, #1862270976	; 0x6f000000
   1e8d4:	orrs	r2, r3, r2
   1e8d8:	bne	1eb30 <main@@Base+0xb78c>
   1e8dc:	ldrb	r2, [r1, #18]
   1e8e0:	cmp	r2, #46	; 0x2e
   1e8e4:	mov	r2, r0
   1e8e8:	addeq	r2, r1, #19
   1e8ec:	cmp	r2, r0
   1e8f0:	beq	1eb30 <main@@Base+0xb78c>
   1e8f4:	ldr	r0, [sp, #24]
   1e8f8:	mov	r1, r2
   1e8fc:	mov	r2, r8
   1e900:	mov	r3, lr
   1e904:	sub	sp, fp, #28
   1e908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e90c:	b	23f24 <main@@Base+0x10b80>
   1e910:	movw	r0, #31077	; 0x7965
   1e914:	movw	r2, #25965	; 0x656d
   1e918:	movt	r0, #28788	; 0x7074
   1e91c:	movt	r2, #28532	; 0x6f74
   1e920:	eor	r0, sl, r0
   1e924:	eor	r2, r6, r2
   1e928:	orrs	r0, r0, r2
   1e92c:	bne	1eb30 <main@@Base+0xb78c>
   1e930:	add	r0, r1, #24
   1e934:	sub	r2, r8, r0
   1e938:	cmp	r2, #8
   1e93c:	mov	r3, r2
   1e940:	movcs	r3, #8
   1e944:	and	r7, r3, #15
   1e948:	sub	r3, r7, #3
   1e94c:	cmp	r3, #6
   1e950:	bcs	1eae4 <main@@Base+0xb740>
   1e954:	ldrb	r3, [r1, #26]
   1e958:	ldr	r4, [sp, #12]
   1e95c:	lsl	r7, r3, #8
   1e960:	mov	r3, #0
   1e964:	ldrb	r6, [r1, #25]
   1e968:	orr	r7, r7, r6, lsl #16
   1e96c:	cmp	r2, #4
   1e970:	blt	1eb30 <main@@Base+0xb78c>
   1e974:	ldrb	r2, [r0]
   1e978:	orr	r2, r7, r2, lsl #24
   1e97c:	eor	r2, r2, ip
   1e980:	orrs	r2, r3, r2
   1e984:	bne	1eb30 <main@@Base+0xb78c>
   1e988:	ldrb	r2, [r1, #27]
   1e98c:	mov	r6, r0
   1e990:	cmp	r2, #46	; 0x2e
   1e994:	addeq	r6, r1, #28
   1e998:	cmp	r6, r0
   1e99c:	beq	1eb30 <main@@Base+0xb78c>
   1e9a0:	sub	r0, r8, r6
   1e9a4:	mov	r1, #-268435456	; 0xf0000000
   1e9a8:	cmp	r0, #8
   1e9ac:	movcs	r0, #8
   1e9b0:	add	r0, r1, r0, lsl #28
   1e9b4:	asr	r0, r0, #28
   1e9b8:	cmp	r0, #0
   1e9bc:	blt	1eb04 <main@@Base+0xb760>
   1e9c0:	ldrb	r0, [r6]
   1e9c4:	cmp	r0, #120	; 0x78
   1e9c8:	bne	1eb04 <main@@Base+0xb760>
   1e9cc:	ldr	r0, [sp, #20]
   1e9d0:	mov	r1, r6
   1e9d4:	mov	r2, r8
   1e9d8:	mov	r3, #1
   1e9dc:	str	r0, [sp]
   1e9e0:	ldr	r0, [sp, #24]
   1e9e4:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   1e9e8:	cmp	r0, r6
   1e9ec:	mov	r1, r6
   1e9f0:	beq	1eb30 <main@@Base+0xb78c>
   1e9f4:	ldr	r2, [sp, #16]
   1e9f8:	mov	r1, #0
   1e9fc:	str	r1, [r2]
   1ea00:	str	r1, [r2, #4]
   1ea04:	str	r1, [r4]
   1ea08:	mov	r1, r0
   1ea0c:	b	1eb30 <main@@Base+0xb78c>
   1ea10:	cmp	r7, #1
   1ea14:	mov	r3, #0
   1ea18:	mov	r7, #0
   1ea1c:	beq	1dfd4 <main@@Base+0xac30>
   1ea20:	b	1eb30 <main@@Base+0xb78c>
   1ea24:	cmp	r7, #1
   1ea28:	mov	r3, #0
   1ea2c:	mov	r7, #0
   1ea30:	beq	1e8bc <main@@Base+0xb518>
   1ea34:	b	1eb30 <main@@Base+0xb78c>
   1ea38:	movw	r0, #25942	; 0x6556
   1ea3c:	movw	r1, #25452	; 0x636c
   1ea40:	movt	r0, #30052	; 0x7564
   1ea44:	movt	r1, #18798	; 0x496e
   1ea48:	eor	r0, sl, r0
   1ea4c:	eor	r1, r6, r1
   1ea50:	orrs	r0, r0, r1
   1ea54:	bne	1eb2c <main@@Base+0xb788>
   1ea58:	add	r6, r7, #8
   1ea5c:	sub	r0, r8, r6
   1ea60:	cmp	r0, #8
   1ea64:	movcs	r0, #8
   1ea68:	and	r1, r0, #15
   1ea6c:	sub	r0, r1, #2
   1ea70:	cmp	r0, #7
   1ea74:	bcs	1eb1c <main@@Base+0xb778>
   1ea78:	ldrb	r0, [r7, #9]
   1ea7c:	lsl	r1, r0, #16
   1ea80:	mov	r0, #0
   1ea84:	ldrb	r2, [r6]
   1ea88:	orr	r1, r1, r2, lsl #24
   1ea8c:	eor	r1, r1, #23855104	; 0x16c0000
   1ea90:	eor	r1, r1, #1610612736	; 0x60000000
   1ea94:	orrs	r0, r0, r1
   1ea98:	bne	1eb2c <main@@Base+0xb788>
   1ea9c:	ldr	r0, [sp, #20]
   1eaa0:	mov	r1, r6
   1eaa4:	mov	r2, r8
   1eaa8:	mov	r3, #2
   1eaac:	str	r0, [sp]
   1eab0:	mov	r0, r4
   1eab4:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   1eab8:	cmp	r0, r6
   1eabc:	mov	r1, r7
   1eac0:	beq	1eb30 <main@@Base+0xb78c>
   1eac4:	mov	r2, #0
   1eac8:	mov	r3, #0
   1eacc:	mov	r1, r0
   1ead0:	ldr	r0, [sp, #16]
   1ead4:	strd	r2, [r0]
   1ead8:	mov	r0, #0
   1eadc:	str	r0, [r9]
   1eae0:	b	1eb30 <main@@Base+0xb78c>
   1eae4:	ldr	r4, [sp, #12]
   1eae8:	mov	r3, #0
   1eaec:	cmp	r7, #1
   1eaf0:	beq	1eb0c <main@@Base+0xb768>
   1eaf4:	cmp	r7, #2
   1eaf8:	mov	r7, #0
   1eafc:	beq	1e964 <main@@Base+0xb5c0>
   1eb00:	b	1eb30 <main@@Base+0xb78c>
   1eb04:	mov	r1, r6
   1eb08:	b	1eb30 <main@@Base+0xb78c>
   1eb0c:	mov	r7, #0
   1eb10:	cmp	r2, #4
   1eb14:	bge	1e974 <main@@Base+0xb5d0>
   1eb18:	b	1eb30 <main@@Base+0xb78c>
   1eb1c:	cmp	r1, #1
   1eb20:	mov	r0, #0
   1eb24:	mov	r1, #0
   1eb28:	beq	1ea84 <main@@Base+0xb6e0>
   1eb2c:	mov	r1, r7
   1eb30:	mov	r0, r1
   1eb34:	sub	sp, fp, #28
   1eb38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb40:	add	fp, sp, #28
   1eb44:	sub	sp, sp, #44	; 0x2c
   1eb48:	mov	r6, r2
   1eb4c:	ldr	r2, [fp, #8]
   1eb50:	mov	r5, r0
   1eb54:	mov	r0, #0
   1eb58:	mov	sl, r3
   1eb5c:	cmp	r1, r6
   1eb60:	strb	r0, [r2]
   1eb64:	beq	1eba8 <main@@Base+0xb804>
   1eb68:	ldrb	r0, [r1]
   1eb6c:	cmp	r0, #46	; 0x2e
   1eb70:	beq	1eb88 <main@@Base+0xb7e4>
   1eb74:	cmp	r0, #34	; 0x22
   1eb78:	bne	1eba0 <main@@Base+0xb7fc>
   1eb7c:	mov	r0, #0
   1eb80:	add	r1, r1, #1
   1eb84:	b	1eba4 <main@@Base+0xb800>
   1eb88:	mov	r0, r5
   1eb8c:	mov	r2, r6
   1eb90:	mov	r3, #5
   1eb94:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1eb98:	mov	r1, r0
   1eb9c:	b	1eba8 <main@@Base+0xb804>
   1eba0:	mov	r0, #1
   1eba4:	str	r0, [r5, #12]
   1eba8:	ldr	r0, [r5, #12]
   1ebac:	cmp	r0, #0
   1ebb0:	beq	1ebc4 <main@@Base+0xb820>
   1ebb4:	mov	r7, r1
   1ebb8:	cmp	r7, r6
   1ebbc:	bne	1ec08 <main@@Base+0xb864>
   1ebc0:	b	1ed44 <main@@Base+0xb9a0>
   1ebc4:	sub	r0, r6, r1
   1ebc8:	cmp	r0, #2
   1ebcc:	blt	1ebf0 <main@@Base+0xb84c>
   1ebd0:	ldrb	r0, [r1]
   1ebd4:	cmp	r0, #32
   1ebd8:	bhi	1ebb4 <main@@Base+0xb810>
   1ebdc:	bne	1ebf0 <main@@Base+0xb84c>
   1ebe0:	mov	r7, r1
   1ebe4:	ldrb	r0, [r7, #1]!
   1ebe8:	cmp	r0, #32
   1ebec:	bhi	1ec00 <main@@Base+0xb85c>
   1ebf0:	mov	r0, r5
   1ebf4:	mov	r2, r6
   1ebf8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ebfc:	mov	r7, r0
   1ec00:	cmp	r7, r6
   1ec04:	beq	1ed44 <main@@Base+0xb9a0>
   1ec08:	add	r0, sl, #4
   1ec0c:	mov	r1, #0
   1ec10:	mov	r2, #0
   1ec14:	add	r8, sp, #32
   1ec18:	add	r9, sp, #28
   1ec1c:	str	sl, [sp, #12]
   1ec20:	str	r1, [sp, #20]
   1ec24:	str	r0, [sp, #8]
   1ec28:	ldr	r4, [sl]
   1ec2c:	mov	sl, r0
   1ec30:	str	r2, [sp, #16]
   1ec34:	add	r0, sp, #24
   1ec38:	mov	r1, r7
   1ec3c:	mov	r2, r6
   1ec40:	mov	r3, r9
   1ec44:	str	r8, [sp]
   1ec48:	str	r0, [sp, #4]
   1ec4c:	mov	r0, r5
   1ec50:	blx	r4
   1ec54:	cmp	r0, r6
   1ec58:	beq	1ed44 <main@@Base+0xb9a0>
   1ec5c:	mov	r4, r0
   1ec60:	cmp	r0, r7
   1ec64:	bne	1ec78 <main@@Base+0xb8d4>
   1ec68:	ldr	r4, [sl], #4
   1ec6c:	cmp	r4, #0
   1ec70:	bne	1ec34 <main@@Base+0xb890>
   1ec74:	b	1ed4c <main@@Base+0xb9a8>
   1ec78:	ldr	r7, [sp, #20]
   1ec7c:	cmp	r7, #0
   1ec80:	ldrne	r0, [r5, #12]
   1ec84:	cmpne	r0, #0
   1ec88:	bne	1ed70 <main@@Base+0xb9cc>
   1ec8c:	ldr	r2, [sp, #28]
   1ec90:	ldr	r0, [sp, #32]
   1ec94:	ldr	r1, [sp, #36]	; 0x24
   1ec98:	cmp	r2, #0
   1ec9c:	beq	1ecc4 <main@@Base+0xb920>
   1eca0:	ldr	sl, [sp, #12]
   1eca4:	subs	r2, r0, #129	; 0x81
   1eca8:	sbcs	r1, r1, #0
   1ecac:	bcc	1ecf8 <main@@Base+0xb954>
   1ecb0:	mov	r0, r5
   1ecb4:	mov	r1, r4
   1ecb8:	mov	r2, r6
   1ecbc:	mov	r3, #8
   1ecc0:	b	1ece4 <main@@Base+0xb940>
   1ecc4:	ldr	sl, [sp, #12]
   1ecc8:	subs	r2, r0, #128	; 0x80
   1eccc:	sbcs	r1, r1, #0
   1ecd0:	bcc	1ed00 <main@@Base+0xb95c>
   1ecd4:	mov	r0, r5
   1ecd8:	mov	r1, r4
   1ecdc:	mov	r2, r6
   1ece0:	mov	r3, #7
   1ece4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ece8:	ldr	r2, [sp, #16]
   1ecec:	cmp	r0, r6
   1ecf0:	bne	1ed10 <main@@Base+0xb96c>
   1ecf4:	b	1ed44 <main@@Base+0xb9a0>
   1ecf8:	rsb	r2, r0, #0
   1ecfc:	b	1ed04 <main@@Base+0xb960>
   1ed00:	mov	r2, r0
   1ed04:	mov	r0, r4
   1ed08:	cmp	r0, r6
   1ed0c:	beq	1ed44 <main@@Base+0xb9a0>
   1ed10:	ldr	r0, [fp, #8]
   1ed14:	add	r7, r7, #1
   1ed18:	str	r7, [sp, #20]
   1ed1c:	mov	r7, r4
   1ed20:	mov	r1, r0
   1ed24:	ldrb	r0, [r0]
   1ed28:	add	r0, r0, r2
   1ed2c:	strb	r0, [r1]
   1ed30:	ldr	r0, [sp, #24]
   1ed34:	cmp	r0, #0
   1ed38:	ldr	r0, [sp, #8]
   1ed3c:	bne	1ec28 <main@@Base+0xb884>
   1ed40:	b	1ed64 <main@@Base+0xb9c0>
   1ed44:	mov	r4, r6
   1ed48:	b	1ed64 <main@@Base+0xb9c0>
   1ed4c:	mov	r0, r5
   1ed50:	mov	r1, r7
   1ed54:	mov	r2, r6
   1ed58:	mov	r3, #23
   1ed5c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ed60:	mov	r4, r0
   1ed64:	mov	r0, r4
   1ed68:	sub	sp, fp, #28
   1ed6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed70:	mov	r0, r5
   1ed74:	mov	r1, r4
   1ed78:	mov	r2, r6
   1ed7c:	mov	r3, #14
   1ed80:	b	1ed5c <main@@Base+0xb9b8>
   1ed84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed88:	add	fp, sp, #28
   1ed8c:	sub	sp, sp, #44	; 0x2c
   1ed90:	mov	r6, r2
   1ed94:	ldr	r2, [fp, #8]
   1ed98:	mov	r5, r0
   1ed9c:	mov	r0, #0
   1eda0:	mov	sl, r3
   1eda4:	cmp	r1, r6
   1eda8:	strb	r0, [r2]
   1edac:	beq	1edf0 <main@@Base+0xba4c>
   1edb0:	ldrb	r0, [r1]
   1edb4:	cmp	r0, #46	; 0x2e
   1edb8:	beq	1edd0 <main@@Base+0xba2c>
   1edbc:	cmp	r0, #34	; 0x22
   1edc0:	bne	1ede8 <main@@Base+0xba44>
   1edc4:	mov	r0, #0
   1edc8:	add	r1, r1, #1
   1edcc:	b	1edec <main@@Base+0xba48>
   1edd0:	mov	r0, r5
   1edd4:	mov	r2, r6
   1edd8:	mov	r3, #5
   1eddc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ede0:	mov	r1, r0
   1ede4:	b	1edf0 <main@@Base+0xba4c>
   1ede8:	mov	r0, #1
   1edec:	str	r0, [r5, #12]
   1edf0:	ldr	r0, [r5, #12]
   1edf4:	cmp	r0, #0
   1edf8:	beq	1ee0c <main@@Base+0xba68>
   1edfc:	mov	r7, r1
   1ee00:	cmp	r7, r6
   1ee04:	bne	1ee50 <main@@Base+0xbaac>
   1ee08:	b	1ef84 <main@@Base+0xbbe0>
   1ee0c:	sub	r0, r6, r1
   1ee10:	cmp	r0, #2
   1ee14:	blt	1ee38 <main@@Base+0xba94>
   1ee18:	ldrb	r0, [r1]
   1ee1c:	cmp	r0, #32
   1ee20:	bhi	1edfc <main@@Base+0xba58>
   1ee24:	bne	1ee38 <main@@Base+0xba94>
   1ee28:	mov	r7, r1
   1ee2c:	ldrb	r0, [r7, #1]!
   1ee30:	cmp	r0, #32
   1ee34:	bhi	1ee48 <main@@Base+0xbaa4>
   1ee38:	mov	r0, r5
   1ee3c:	mov	r2, r6
   1ee40:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ee44:	mov	r7, r0
   1ee48:	cmp	r7, r6
   1ee4c:	beq	1ef84 <main@@Base+0xbbe0>
   1ee50:	mov	r1, #0
   1ee54:	add	r0, sl, #4
   1ee58:	add	r8, sp, #32
   1ee5c:	add	r9, sp, #28
   1ee60:	str	sl, [sp, #12]
   1ee64:	str	r1, [sp, #16]
   1ee68:	mov	r1, #0
   1ee6c:	str	r0, [sp, #8]
   1ee70:	str	r1, [sp, #20]
   1ee74:	ldr	r4, [sl]
   1ee78:	mov	sl, r0
   1ee7c:	add	r0, sp, #24
   1ee80:	mov	r1, r7
   1ee84:	mov	r2, r6
   1ee88:	mov	r3, r9
   1ee8c:	str	r8, [sp]
   1ee90:	str	r0, [sp, #4]
   1ee94:	mov	r0, r5
   1ee98:	blx	r4
   1ee9c:	cmp	r0, r6
   1eea0:	beq	1ef84 <main@@Base+0xbbe0>
   1eea4:	mov	r4, r0
   1eea8:	cmp	r0, r7
   1eeac:	bne	1eec0 <main@@Base+0xbb1c>
   1eeb0:	ldr	r4, [sl], #4
   1eeb4:	cmp	r4, #0
   1eeb8:	bne	1ee7c <main@@Base+0xbad8>
   1eebc:	b	1ef8c <main@@Base+0xbbe8>
   1eec0:	ldr	r7, [sp, #20]
   1eec4:	cmp	r7, #0
   1eec8:	ldrne	r0, [r5, #12]
   1eecc:	cmpne	r0, #0
   1eed0:	bne	1efb0 <main@@Base+0xbc0c>
   1eed4:	ldr	r0, [sp, #28]
   1eed8:	cmp	r0, #0
   1eedc:	beq	1ef04 <main@@Base+0xbb60>
   1eee0:	mov	r0, r5
   1eee4:	mov	r1, r4
   1eee8:	mov	r2, r6
   1eeec:	mov	r3, #8
   1eef0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1eef4:	ldr	sl, [sp, #12]
   1eef8:	cmp	r0, r6
   1eefc:	bne	1ef4c <main@@Base+0xbba8>
   1ef00:	b	1ef84 <main@@Base+0xbbe0>
   1ef04:	ldr	r0, [sp, #32]
   1ef08:	ldr	r1, [sp, #36]	; 0x24
   1ef0c:	ldr	sl, [sp, #12]
   1ef10:	subs	r2, r0, #256	; 0x100
   1ef14:	sbcs	r1, r1, #0
   1ef18:	bcc	1ef3c <main@@Base+0xbb98>
   1ef1c:	mov	r0, r5
   1ef20:	mov	r1, r4
   1ef24:	mov	r2, r6
   1ef28:	mov	r3, #7
   1ef2c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ef30:	cmp	r0, r6
   1ef34:	bne	1ef4c <main@@Base+0xbba8>
   1ef38:	b	1ef84 <main@@Base+0xbbe0>
   1ef3c:	str	r0, [sp, #16]
   1ef40:	mov	r0, r4
   1ef44:	cmp	r0, r6
   1ef48:	beq	1ef84 <main@@Base+0xbbe0>
   1ef4c:	ldr	r0, [fp, #8]
   1ef50:	ldr	r2, [sp, #16]
   1ef54:	add	r7, r7, #1
   1ef58:	str	r7, [sp, #20]
   1ef5c:	mov	r7, r4
   1ef60:	mov	r1, r0
   1ef64:	ldrb	r0, [r0]
   1ef68:	add	r0, r0, r2
   1ef6c:	strb	r0, [r1]
   1ef70:	ldr	r0, [sp, #24]
   1ef74:	cmp	r0, #0
   1ef78:	ldr	r0, [sp, #8]
   1ef7c:	bne	1ee74 <main@@Base+0xbad0>
   1ef80:	b	1efa4 <main@@Base+0xbc00>
   1ef84:	mov	r4, r6
   1ef88:	b	1efa4 <main@@Base+0xbc00>
   1ef8c:	mov	r0, r5
   1ef90:	mov	r1, r7
   1ef94:	mov	r2, r6
   1ef98:	mov	r3, #23
   1ef9c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1efa0:	mov	r4, r0
   1efa4:	mov	r0, r4
   1efa8:	sub	sp, fp, #28
   1efac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1efb0:	mov	r0, r5
   1efb4:	mov	r1, r4
   1efb8:	mov	r2, r6
   1efbc:	mov	r3, #14
   1efc0:	b	1ef9c <main@@Base+0xbbf8>
   1efc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1efc8:	add	fp, sp, #28
   1efcc:	sub	sp, sp, #44	; 0x2c
   1efd0:	mov	r6, r2
   1efd4:	ldr	r2, [fp, #8]
   1efd8:	mov	r5, r0
   1efdc:	mov	r0, #0
   1efe0:	mov	sl, r3
   1efe4:	cmp	r1, r6
   1efe8:	strh	r0, [r2]
   1efec:	beq	1f030 <main@@Base+0xbc8c>
   1eff0:	ldrb	r0, [r1]
   1eff4:	cmp	r0, #46	; 0x2e
   1eff8:	beq	1f010 <main@@Base+0xbc6c>
   1effc:	cmp	r0, #34	; 0x22
   1f000:	bne	1f028 <main@@Base+0xbc84>
   1f004:	mov	r0, #0
   1f008:	add	r1, r1, #1
   1f00c:	b	1f02c <main@@Base+0xbc88>
   1f010:	mov	r0, r5
   1f014:	mov	r2, r6
   1f018:	mov	r3, #5
   1f01c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f020:	mov	r1, r0
   1f024:	b	1f030 <main@@Base+0xbc8c>
   1f028:	mov	r0, #1
   1f02c:	str	r0, [r5, #12]
   1f030:	ldr	r0, [r5, #12]
   1f034:	cmp	r0, #0
   1f038:	beq	1f04c <main@@Base+0xbca8>
   1f03c:	mov	r7, r1
   1f040:	cmp	r7, r6
   1f044:	bne	1f090 <main@@Base+0xbcec>
   1f048:	b	1f1d0 <main@@Base+0xbe2c>
   1f04c:	sub	r0, r6, r1
   1f050:	cmp	r0, #2
   1f054:	blt	1f078 <main@@Base+0xbcd4>
   1f058:	ldrb	r0, [r1]
   1f05c:	cmp	r0, #32
   1f060:	bhi	1f03c <main@@Base+0xbc98>
   1f064:	bne	1f078 <main@@Base+0xbcd4>
   1f068:	mov	r7, r1
   1f06c:	ldrb	r0, [r7, #1]!
   1f070:	cmp	r0, #32
   1f074:	bhi	1f088 <main@@Base+0xbce4>
   1f078:	mov	r0, r5
   1f07c:	mov	r2, r6
   1f080:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f084:	mov	r7, r0
   1f088:	cmp	r7, r6
   1f08c:	beq	1f1d0 <main@@Base+0xbe2c>
   1f090:	add	r0, sl, #4
   1f094:	mov	r1, #0
   1f098:	mov	r2, #0
   1f09c:	add	r8, sp, #32
   1f0a0:	add	r9, sp, #28
   1f0a4:	str	sl, [sp, #12]
   1f0a8:	str	r1, [sp, #20]
   1f0ac:	str	r0, [sp, #8]
   1f0b0:	ldr	r4, [sl]
   1f0b4:	mov	sl, r0
   1f0b8:	str	r2, [sp, #16]
   1f0bc:	add	r0, sp, #24
   1f0c0:	mov	r1, r7
   1f0c4:	mov	r2, r6
   1f0c8:	mov	r3, r9
   1f0cc:	str	r8, [sp]
   1f0d0:	str	r0, [sp, #4]
   1f0d4:	mov	r0, r5
   1f0d8:	blx	r4
   1f0dc:	cmp	r0, r6
   1f0e0:	beq	1f1d0 <main@@Base+0xbe2c>
   1f0e4:	mov	r4, r0
   1f0e8:	cmp	r0, r7
   1f0ec:	bne	1f100 <main@@Base+0xbd5c>
   1f0f0:	ldr	r4, [sl], #4
   1f0f4:	cmp	r4, #0
   1f0f8:	bne	1f0bc <main@@Base+0xbd18>
   1f0fc:	b	1f1d8 <main@@Base+0xbe34>
   1f100:	ldr	r7, [sp, #20]
   1f104:	cmp	r7, #0
   1f108:	ldrne	r0, [r5, #12]
   1f10c:	cmpne	r0, #0
   1f110:	bne	1f1fc <main@@Base+0xbe58>
   1f114:	ldr	r2, [sp, #28]
   1f118:	ldr	r0, [sp, #32]
   1f11c:	ldr	r1, [sp, #36]	; 0x24
   1f120:	cmp	r2, #0
   1f124:	beq	1f150 <main@@Base+0xbdac>
   1f128:	ldr	sl, [sp, #12]
   1f12c:	movw	r2, #32769	; 0x8001
   1f130:	subs	r2, r0, r2
   1f134:	sbcs	r1, r1, #0
   1f138:	bcc	1f184 <main@@Base+0xbde0>
   1f13c:	mov	r0, r5
   1f140:	mov	r1, r4
   1f144:	mov	r2, r6
   1f148:	mov	r3, #8
   1f14c:	b	1f170 <main@@Base+0xbdcc>
   1f150:	ldr	sl, [sp, #12]
   1f154:	subs	r2, r0, #32768	; 0x8000
   1f158:	sbcs	r1, r1, #0
   1f15c:	bcc	1f18c <main@@Base+0xbde8>
   1f160:	mov	r0, r5
   1f164:	mov	r1, r4
   1f168:	mov	r2, r6
   1f16c:	mov	r3, #7
   1f170:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f174:	ldr	r2, [sp, #16]
   1f178:	cmp	r0, r6
   1f17c:	bne	1f19c <main@@Base+0xbdf8>
   1f180:	b	1f1d0 <main@@Base+0xbe2c>
   1f184:	rsb	r2, r0, #0
   1f188:	b	1f190 <main@@Base+0xbdec>
   1f18c:	mov	r2, r0
   1f190:	mov	r0, r4
   1f194:	cmp	r0, r6
   1f198:	beq	1f1d0 <main@@Base+0xbe2c>
   1f19c:	ldr	r0, [fp, #8]
   1f1a0:	add	r7, r7, #1
   1f1a4:	str	r7, [sp, #20]
   1f1a8:	mov	r7, r4
   1f1ac:	mov	r1, r0
   1f1b0:	ldrh	r0, [r0]
   1f1b4:	add	r0, r0, r2
   1f1b8:	strh	r0, [r1]
   1f1bc:	ldr	r0, [sp, #24]
   1f1c0:	cmp	r0, #0
   1f1c4:	ldr	r0, [sp, #8]
   1f1c8:	bne	1f0b0 <main@@Base+0xbd0c>
   1f1cc:	b	1f1f0 <main@@Base+0xbe4c>
   1f1d0:	mov	r4, r6
   1f1d4:	b	1f1f0 <main@@Base+0xbe4c>
   1f1d8:	mov	r0, r5
   1f1dc:	mov	r1, r7
   1f1e0:	mov	r2, r6
   1f1e4:	mov	r3, #23
   1f1e8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f1ec:	mov	r4, r0
   1f1f0:	mov	r0, r4
   1f1f4:	sub	sp, fp, #28
   1f1f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1fc:	mov	r0, r5
   1f200:	mov	r1, r4
   1f204:	mov	r2, r6
   1f208:	mov	r3, #14
   1f20c:	b	1f1e8 <main@@Base+0xbe44>
   1f210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f214:	add	fp, sp, #28
   1f218:	sub	sp, sp, #28
   1f21c:	mov	r7, r2
   1f220:	mov	r5, r0
   1f224:	cmp	r1, r2
   1f228:	beq	1f260 <main@@Base+0xbebc>
   1f22c:	ldrb	r0, [r1]
   1f230:	cmp	r0, #123	; 0x7b
   1f234:	bne	1f260 <main@@Base+0xbebc>
   1f238:	add	r2, r1, #1
   1f23c:	mov	r9, r3
   1f240:	sub	r0, r7, r2
   1f244:	cmp	r0, #2
   1f248:	blt	1f288 <main@@Base+0xbee4>
   1f24c:	ldrb	r0, [r2]
   1f250:	cmp	r0, #32
   1f254:	bls	1f278 <main@@Base+0xbed4>
   1f258:	mov	r1, r2
   1f25c:	b	1f29c <main@@Base+0xbef8>
   1f260:	mov	r0, r5
   1f264:	mov	r2, r7
   1f268:	mov	r3, #21
   1f26c:	sub	sp, fp, #28
   1f270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f274:	b	2f080 <flatcc_json_parser_set_error@@Base>
   1f278:	bne	1f288 <main@@Base+0xbee4>
   1f27c:	ldrb	r0, [r1, #2]!
   1f280:	cmp	r0, #32
   1f284:	bhi	1f29c <main@@Base+0xbef8>
   1f288:	mov	r1, r2
   1f28c:	mov	r0, r5
   1f290:	mov	r2, r7
   1f294:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f298:	mov	r1, r0
   1f29c:	cmp	r1, r7
   1f2a0:	mov	r2, r7
   1f2a4:	beq	1f2dc <main@@Base+0xbf38>
   1f2a8:	ldrb	r0, [r1]
   1f2ac:	cmp	r0, #125	; 0x7d
   1f2b0:	bne	1f2d8 <main@@Base+0xbf34>
   1f2b4:	add	r2, r1, #1
   1f2b8:	sub	r0, r7, r2
   1f2bc:	cmp	r0, #2
   1f2c0:	blt	1f924 <main@@Base+0xc580>
   1f2c4:	ldrb	r0, [r2]
   1f2c8:	cmp	r0, #32
   1f2cc:	bls	1f914 <main@@Base+0xc570>
   1f2d0:	mov	r1, r2
   1f2d4:	b	1f97c <main@@Base+0xc5d8>
   1f2d8:	mov	r2, r1
   1f2dc:	mov	sl, #-268435456	; 0xf0000000
   1f2e0:	mov	r6, #1627389952	; 0x61000000
   1f2e4:	cmp	r2, r7
   1f2e8:	mov	r4, r7
   1f2ec:	beq	1f338 <main@@Base+0xbf94>
   1f2f0:	ldrb	r0, [r2]
   1f2f4:	cmp	r0, #46	; 0x2e
   1f2f8:	beq	1f310 <main@@Base+0xbf6c>
   1f2fc:	cmp	r0, #34	; 0x22
   1f300:	bne	1f32c <main@@Base+0xbf88>
   1f304:	mov	r0, #0
   1f308:	add	r4, r2, #1
   1f30c:	b	1f334 <main@@Base+0xbf90>
   1f310:	mov	r1, r2
   1f314:	mov	r0, r5
   1f318:	mov	r2, r7
   1f31c:	mov	r3, #5
   1f320:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f324:	mov	r4, r0
   1f328:	b	1f338 <main@@Base+0xbf94>
   1f32c:	mov	r0, #1
   1f330:	mov	r4, r2
   1f334:	str	r0, [r5, #12]
   1f338:	sub	r0, r7, r4
   1f33c:	mov	r1, #8
   1f340:	cmp	r0, #8
   1f344:	movcc	r1, r0
   1f348:	add	r1, sl, r1, lsl #28
   1f34c:	asr	r1, r1, #28
   1f350:	cmp	r1, #0
   1f354:	blt	1f4c0 <main@@Base+0xc11c>
   1f358:	ldrb	r1, [r4]
   1f35c:	teq	r6, r1, lsl #24
   1f360:	beq	1f3b0 <main@@Base+0xc00c>
   1f364:	lsl	r1, r1, #24
   1f368:	teq	r1, #1644167168	; 0x62000000
   1f36c:	bne	1f4c0 <main@@Base+0xc11c>
   1f370:	cmp	r0, #2
   1f374:	mov	r8, r4
   1f378:	blt	1f664 <main@@Base+0xc2c0>
   1f37c:	mov	r1, r4
   1f380:	ldr	r2, [r5, #12]
   1f384:	ldrb	r0, [r1, #1]!
   1f388:	cmp	r2, #0
   1f38c:	beq	1f3f0 <main@@Base+0xc04c>
   1f390:	cmp	r0, #33	; 0x21
   1f394:	bcc	1f3a4 <main@@Base+0xc000>
   1f398:	cmp	r0, #58	; 0x3a
   1f39c:	mov	r8, r4
   1f3a0:	bne	1f664 <main@@Base+0xc2c0>
   1f3a4:	mov	r0, #0
   1f3a8:	str	r0, [r5, #12]
   1f3ac:	b	1f400 <main@@Base+0xc05c>
   1f3b0:	cmp	r0, #2
   1f3b4:	mov	r6, r4
   1f3b8:	blt	1f7a0 <main@@Base+0xc3fc>
   1f3bc:	mov	r1, r4
   1f3c0:	ldr	r2, [r5, #12]
   1f3c4:	ldrb	r0, [r1, #1]!
   1f3c8:	cmp	r2, #0
   1f3cc:	beq	1f428 <main@@Base+0xc084>
   1f3d0:	cmp	r0, #33	; 0x21
   1f3d4:	bcc	1f3e4 <main@@Base+0xc040>
   1f3d8:	cmp	r0, #58	; 0x3a
   1f3dc:	mov	r6, r4
   1f3e0:	bne	1f7a0 <main@@Base+0xc3fc>
   1f3e4:	mov	r0, #0
   1f3e8:	str	r0, [r5, #12]
   1f3ec:	b	1f438 <main@@Base+0xc094>
   1f3f0:	cmp	r0, #34	; 0x22
   1f3f4:	mov	r8, r4
   1f3f8:	bne	1f664 <main@@Base+0xc2c0>
   1f3fc:	add	r1, r4, #2
   1f400:	sub	r0, r7, r1
   1f404:	cmp	r0, #2
   1f408:	blt	1f474 <main@@Base+0xc0d0>
   1f40c:	ldrb	r0, [r1]
   1f410:	cmp	r0, #32
   1f414:	bls	1f460 <main@@Base+0xc0bc>
   1f418:	mov	r8, r1
   1f41c:	cmp	r8, r7
   1f420:	bne	1f48c <main@@Base+0xc0e8>
   1f424:	b	1f598 <main@@Base+0xc1f4>
   1f428:	cmp	r0, #34	; 0x22
   1f42c:	mov	r6, r4
   1f430:	bne	1f7a0 <main@@Base+0xc3fc>
   1f434:	add	r1, r4, #2
   1f438:	sub	r0, r7, r1
   1f43c:	cmp	r0, #2
   1f440:	blt	1f5c4 <main@@Base+0xc220>
   1f444:	ldrb	r0, [r1]
   1f448:	cmp	r0, #32
   1f44c:	bls	1f5b0 <main@@Base+0xc20c>
   1f450:	mov	r6, r1
   1f454:	cmp	r6, r7
   1f458:	bne	1f5dc <main@@Base+0xc238>
   1f45c:	b	1f62c <main@@Base+0xc288>
   1f460:	bne	1f474 <main@@Base+0xc0d0>
   1f464:	mov	r8, r1
   1f468:	ldrb	r0, [r8, #1]!
   1f46c:	cmp	r0, #32
   1f470:	bhi	1f484 <main@@Base+0xc0e0>
   1f474:	mov	r0, r5
   1f478:	mov	r2, r7
   1f47c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f480:	mov	r8, r0
   1f484:	cmp	r8, r7
   1f488:	beq	1f598 <main@@Base+0xc1f4>
   1f48c:	ldrb	r0, [r8]
   1f490:	cmp	r0, #58	; 0x3a
   1f494:	bne	1f598 <main@@Base+0xc1f4>
   1f498:	add	r1, r8, #1
   1f49c:	sub	r0, r7, r1
   1f4a0:	cmp	r0, #2
   1f4a4:	blt	1f654 <main@@Base+0xc2b0>
   1f4a8:	ldrb	r0, [r1]
   1f4ac:	cmp	r0, #32
   1f4b0:	bls	1f644 <main@@Base+0xc2a0>
   1f4b4:	mov	r8, r1
   1f4b8:	cmp	r4, r8
   1f4bc:	bne	1f66c <main@@Base+0xc2c8>
   1f4c0:	mov	r0, r5
   1f4c4:	mov	r1, r4
   1f4c8:	mov	r2, r7
   1f4cc:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   1f4d0:	mov	r1, r0
   1f4d4:	sub	r0, r7, r1
   1f4d8:	cmp	r0, #2
   1f4dc:	blt	1f510 <main@@Base+0xc16c>
   1f4e0:	ldrb	r0, [r1]
   1f4e4:	cmp	r0, #32
   1f4e8:	bls	1f4fc <main@@Base+0xc158>
   1f4ec:	mov	r2, r1
   1f4f0:	cmp	r2, r7
   1f4f4:	bne	1f528 <main@@Base+0xc184>
   1f4f8:	b	1f8d4 <main@@Base+0xc530>
   1f4fc:	bne	1f510 <main@@Base+0xc16c>
   1f500:	mov	r2, r1
   1f504:	ldrb	r0, [r2, #1]!
   1f508:	cmp	r0, #32
   1f50c:	bhi	1f520 <main@@Base+0xc17c>
   1f510:	mov	r0, r5
   1f514:	mov	r2, r7
   1f518:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f51c:	mov	r2, r0
   1f520:	cmp	r2, r7
   1f524:	beq	1f8d4 <main@@Base+0xc530>
   1f528:	ldrb	r0, [r2]
   1f52c:	cmp	r0, #44	; 0x2c
   1f530:	bne	1f8dc <main@@Base+0xc538>
   1f534:	add	r1, r2, #1
   1f538:	sub	r0, r7, r1
   1f53c:	cmp	r0, #2
   1f540:	blt	1f570 <main@@Base+0xc1cc>
   1f544:	ldrb	r0, [r1]
   1f548:	cmp	r0, #32
   1f54c:	bls	1f560 <main@@Base+0xc1bc>
   1f550:	mov	r2, r1
   1f554:	cmp	r2, r7
   1f558:	bne	1f588 <main@@Base+0xc1e4>
   1f55c:	b	1f908 <main@@Base+0xc564>
   1f560:	bne	1f570 <main@@Base+0xc1cc>
   1f564:	ldrb	r0, [r2, #2]!
   1f568:	cmp	r0, #32
   1f56c:	bhi	1f580 <main@@Base+0xc1dc>
   1f570:	mov	r0, r5
   1f574:	mov	r2, r7
   1f578:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f57c:	mov	r2, r0
   1f580:	cmp	r2, r7
   1f584:	beq	1f908 <main@@Base+0xc564>
   1f588:	ldrb	r0, [r2]
   1f58c:	cmp	r0, #125	; 0x7d
   1f590:	bne	1f2e4 <main@@Base+0xbf40>
   1f594:	b	1f8e4 <main@@Base+0xc540>
   1f598:	mov	r0, r5
   1f59c:	mov	r1, r8
   1f5a0:	mov	r2, r7
   1f5a4:	mov	r3, #4
   1f5a8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f5ac:	b	1f660 <main@@Base+0xc2bc>
   1f5b0:	bne	1f5c4 <main@@Base+0xc220>
   1f5b4:	mov	r6, r1
   1f5b8:	ldrb	r0, [r6, #1]!
   1f5bc:	cmp	r0, #32
   1f5c0:	bhi	1f5d4 <main@@Base+0xc230>
   1f5c4:	mov	r0, r5
   1f5c8:	mov	r2, r7
   1f5cc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f5d0:	mov	r6, r0
   1f5d4:	cmp	r6, r7
   1f5d8:	beq	1f62c <main@@Base+0xc288>
   1f5dc:	ldrb	r0, [r6]
   1f5e0:	cmp	r0, #58	; 0x3a
   1f5e4:	bne	1f62c <main@@Base+0xc288>
   1f5e8:	add	r1, r6, #1
   1f5ec:	sub	r0, r7, r1
   1f5f0:	cmp	r0, #2
   1f5f4:	blt	1f790 <main@@Base+0xc3ec>
   1f5f8:	ldrb	r0, [r1]
   1f5fc:	cmp	r0, #32
   1f600:	bls	1f780 <main@@Base+0xc3dc>
   1f604:	mov	r6, r1
   1f608:	cmp	r4, r6
   1f60c:	bne	1f7a8 <main@@Base+0xc404>
   1f610:	mov	r0, r5
   1f614:	mov	r1, r4
   1f618:	mov	r2, r7
   1f61c:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   1f620:	mov	r1, r0
   1f624:	mov	r6, #1627389952	; 0x61000000
   1f628:	b	1f4d4 <main@@Base+0xc130>
   1f62c:	mov	r0, r5
   1f630:	mov	r1, r6
   1f634:	mov	r2, r7
   1f638:	mov	r3, #4
   1f63c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f640:	b	1f79c <main@@Base+0xc3f8>
   1f644:	bne	1f654 <main@@Base+0xc2b0>
   1f648:	ldrb	r0, [r8, #2]!
   1f64c:	cmp	r0, #32
   1f650:	bhi	1f664 <main@@Base+0xc2c0>
   1f654:	mov	r0, r5
   1f658:	mov	r2, r7
   1f65c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f660:	mov	r8, r0
   1f664:	cmp	r4, r8
   1f668:	beq	1f4c0 <main@@Base+0xc11c>
   1f66c:	mov	r4, #0
   1f670:	cmp	r8, r7
   1f674:	str	r4, [sp, #20]
   1f678:	str	r4, [sp, #16]
   1f67c:	strb	r4, [sp, #10]
   1f680:	str	r4, [sp, #12]
   1f684:	beq	1f6e0 <main@@Base+0xc33c>
   1f688:	add	r0, sp, #16
   1f68c:	mov	r1, r8
   1f690:	mov	r2, r7
   1f694:	add	r3, sp, #12
   1f698:	str	r0, [sp]
   1f69c:	mov	r0, r5
   1f6a0:	bl	31418 <flatcc_json_parser_integer@@Base>
   1f6a4:	cmp	r0, r8
   1f6a8:	beq	1f6f0 <main@@Base+0xc34c>
   1f6ac:	ldr	r3, [sp, #12]
   1f6b0:	mov	r1, r0
   1f6b4:	ldr	r0, [sp, #16]
   1f6b8:	ldr	r2, [sp, #20]
   1f6bc:	cmp	r3, #0
   1f6c0:	beq	1f700 <main@@Base+0xc35c>
   1f6c4:	subs	r3, r0, #129	; 0x81
   1f6c8:	sbcs	r2, r2, #0
   1f6cc:	bcc	1f72c <main@@Base+0xc388>
   1f6d0:	mov	r0, r5
   1f6d4:	mov	r2, r7
   1f6d8:	mov	r3, #8
   1f6dc:	b	1f718 <main@@Base+0xc374>
   1f6e0:	mov	r1, r7
   1f6e4:	cmp	r8, r1
   1f6e8:	bne	1f778 <main@@Base+0xc3d4>
   1f6ec:	b	1f744 <main@@Base+0xc3a0>
   1f6f0:	mov	r1, r8
   1f6f4:	cmp	r8, r1
   1f6f8:	bne	1f778 <main@@Base+0xc3d4>
   1f6fc:	b	1f744 <main@@Base+0xc3a0>
   1f700:	subs	r3, r0, #128	; 0x80
   1f704:	sbcs	r2, r2, #0
   1f708:	bcc	1f734 <main@@Base+0xc390>
   1f70c:	mov	r0, r5
   1f710:	mov	r2, r7
   1f714:	mov	r3, #7
   1f718:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f71c:	mov	r1, r0
   1f720:	cmp	r8, r1
   1f724:	bne	1f778 <main@@Base+0xc3d4>
   1f728:	b	1f744 <main@@Base+0xc3a0>
   1f72c:	rsb	r4, r0, #0
   1f730:	b	1f738 <main@@Base+0xc394>
   1f734:	mov	r4, r0
   1f738:	strb	r4, [sp, #10]
   1f73c:	cmp	r8, r1
   1f740:	bne	1f778 <main@@Base+0xc3d4>
   1f744:	add	r0, sp, #10
   1f748:	mov	r1, r8
   1f74c:	mov	r2, r7
   1f750:	str	r0, [sp]
   1f754:	mov	r0, r5
   1f758:	ldr	r3, [pc, #552]	; 1f988 <main@@Base+0xc5e4>
   1f75c:	add	r3, pc, r3
   1f760:	bl	1eb3c <main@@Base+0xb798>
   1f764:	mov	r1, r0
   1f768:	cmp	r0, r8
   1f76c:	cmpne	r1, r7
   1f770:	beq	1f8c4 <main@@Base+0xc520>
   1f774:	ldrb	r4, [sp, #10]
   1f778:	strb	r4, [r9, #2]
   1f77c:	b	1f4d4 <main@@Base+0xc130>
   1f780:	bne	1f790 <main@@Base+0xc3ec>
   1f784:	ldrb	r0, [r6, #2]!
   1f788:	cmp	r0, #32
   1f78c:	bhi	1f7a0 <main@@Base+0xc3fc>
   1f790:	mov	r0, r5
   1f794:	mov	r2, r7
   1f798:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f79c:	mov	r6, r0
   1f7a0:	cmp	r4, r6
   1f7a4:	beq	1f610 <main@@Base+0xc26c>
   1f7a8:	mov	r4, #0
   1f7ac:	cmp	r6, r7
   1f7b0:	str	r4, [sp, #20]
   1f7b4:	str	r4, [sp, #16]
   1f7b8:	strh	r4, [sp, #10]
   1f7bc:	str	r4, [sp, #12]
   1f7c0:	beq	1f820 <main@@Base+0xc47c>
   1f7c4:	add	r0, sp, #16
   1f7c8:	mov	r1, r6
   1f7cc:	mov	r2, r7
   1f7d0:	add	r3, sp, #12
   1f7d4:	str	r0, [sp]
   1f7d8:	mov	r0, r5
   1f7dc:	bl	31418 <flatcc_json_parser_integer@@Base>
   1f7e0:	cmp	r0, r6
   1f7e4:	beq	1f830 <main@@Base+0xc48c>
   1f7e8:	ldr	r3, [sp, #12]
   1f7ec:	mov	r1, r0
   1f7f0:	ldr	r0, [sp, #16]
   1f7f4:	ldr	r2, [sp, #20]
   1f7f8:	cmp	r3, #0
   1f7fc:	beq	1f840 <main@@Base+0xc49c>
   1f800:	movw	r3, #32769	; 0x8001
   1f804:	subs	r3, r0, r3
   1f808:	sbcs	r2, r2, #0
   1f80c:	bcc	1f86c <main@@Base+0xc4c8>
   1f810:	mov	r0, r5
   1f814:	mov	r2, r7
   1f818:	mov	r3, #8
   1f81c:	b	1f858 <main@@Base+0xc4b4>
   1f820:	mov	r1, r7
   1f824:	cmp	r6, r1
   1f828:	bne	1f8b8 <main@@Base+0xc514>
   1f82c:	b	1f884 <main@@Base+0xc4e0>
   1f830:	mov	r1, r6
   1f834:	cmp	r6, r1
   1f838:	bne	1f8b8 <main@@Base+0xc514>
   1f83c:	b	1f884 <main@@Base+0xc4e0>
   1f840:	subs	r3, r0, #32768	; 0x8000
   1f844:	sbcs	r2, r2, #0
   1f848:	bcc	1f874 <main@@Base+0xc4d0>
   1f84c:	mov	r0, r5
   1f850:	mov	r2, r7
   1f854:	mov	r3, #7
   1f858:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f85c:	mov	r1, r0
   1f860:	cmp	r6, r1
   1f864:	bne	1f8b8 <main@@Base+0xc514>
   1f868:	b	1f884 <main@@Base+0xc4e0>
   1f86c:	rsb	r4, r0, #0
   1f870:	b	1f878 <main@@Base+0xc4d4>
   1f874:	mov	r4, r0
   1f878:	strh	r4, [sp, #10]
   1f87c:	cmp	r6, r1
   1f880:	bne	1f8b8 <main@@Base+0xc514>
   1f884:	add	r0, sp, #10
   1f888:	mov	r1, r6
   1f88c:	mov	r2, r7
   1f890:	str	r0, [sp]
   1f894:	mov	r0, r5
   1f898:	ldr	r3, [pc, #236]	; 1f98c <main@@Base+0xc5e8>
   1f89c:	add	r3, pc, r3
   1f8a0:	bl	1efc4 <main@@Base+0xbc20>
   1f8a4:	mov	r1, r0
   1f8a8:	cmp	r0, r6
   1f8ac:	cmpne	r1, r7
   1f8b0:	beq	1f8c4 <main@@Base+0xc520>
   1f8b4:	ldrh	r4, [sp, #10]
   1f8b8:	strh	r4, [r9]
   1f8bc:	mov	r6, #1627389952	; 0x61000000
   1f8c0:	b	1f4d4 <main@@Base+0xc130>
   1f8c4:	mov	r0, r5
   1f8c8:	mov	r2, r7
   1f8cc:	mov	r3, #33	; 0x21
   1f8d0:	b	1f94c <main@@Base+0xc5a8>
   1f8d4:	mov	r1, r7
   1f8d8:	b	1f97c <main@@Base+0xc5d8>
   1f8dc:	cmp	r0, #125	; 0x7d
   1f8e0:	bne	1f93c <main@@Base+0xc598>
   1f8e4:	add	r3, r2, #1
   1f8e8:	sub	r0, r7, r3
   1f8ec:	cmp	r0, #2
   1f8f0:	blt	1f968 <main@@Base+0xc5c4>
   1f8f4:	ldrb	r0, [r3]
   1f8f8:	cmp	r0, #32
   1f8fc:	bls	1f954 <main@@Base+0xc5b0>
   1f900:	mov	r1, r3
   1f904:	b	1f97c <main@@Base+0xc5d8>
   1f908:	mov	r0, r5
   1f90c:	mov	r1, r7
   1f910:	b	1f944 <main@@Base+0xc5a0>
   1f914:	bne	1f924 <main@@Base+0xc580>
   1f918:	ldrb	r0, [r1, #2]!
   1f91c:	cmp	r0, #32
   1f920:	bhi	1f97c <main@@Base+0xc5d8>
   1f924:	mov	r1, r2
   1f928:	mov	r0, r5
   1f92c:	mov	r2, r7
   1f930:	sub	sp, fp, #28
   1f934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f938:	b	2f130 <flatcc_json_parser_space_ext@@Base>
   1f93c:	mov	r0, r5
   1f940:	mov	r1, r2
   1f944:	mov	r2, r7
   1f948:	mov	r3, #10
   1f94c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1f950:	b	1f978 <main@@Base+0xc5d4>
   1f954:	bne	1f968 <main@@Base+0xc5c4>
   1f958:	ldrb	r0, [r2, #2]!
   1f95c:	cmp	r0, #32
   1f960:	mov	r1, r2
   1f964:	bhi	1f97c <main@@Base+0xc5d8>
   1f968:	mov	r0, r5
   1f96c:	mov	r1, r3
   1f970:	mov	r2, r7
   1f974:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1f978:	mov	r1, r0
   1f97c:	mov	r0, r1
   1f980:	sub	sp, fp, #28
   1f984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f988:	andeq	r7, r2, r8, lsl #21
   1f98c:	andeq	r7, r2, r4, asr r9
   1f990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f994:	add	fp, sp, #28
   1f998:	sub	sp, sp, #68	; 0x44
   1f99c:	ldr	r9, [fp, #8]
   1f9a0:	mov	r5, r0
   1f9a4:	mov	r0, #0
   1f9a8:	mov	r8, r2
   1f9ac:	mov	r4, r1
   1f9b0:	cmp	r3, #4
   1f9b4:	str	r0, [r9]
   1f9b8:	bhi	1fa10 <main@@Base+0xc66c>
   1f9bc:	add	r0, pc, #4
   1f9c0:	ldr	r1, [r0, r3, lsl #2]
   1f9c4:	add	pc, r0, r1
   1f9c8:	andeq	r0, r0, r4, lsl r0
   1f9cc:	andeq	r0, r0, r0, ror r0
   1f9d0:	andeq	r0, r0, r8, lsl #1
   1f9d4:	ldrdeq	r0, [r0], -ip
   1f9d8:	andeq	r0, r0, r0, lsr r1
   1f9dc:	sub	r0, r8, r4
   1f9e0:	cmp	r0, #4
   1f9e4:	blt	1f9fc <main@@Base+0xc658>
   1f9e8:	ldr	r0, [r4]
   1f9ec:	movw	r1, #30062	; 0x756e
   1f9f0:	movt	r1, #27756	; 0x6c6c
   1f9f4:	cmp	r0, r1
   1f9f8:	beq	1fbb0 <main@@Base+0xc80c>
   1f9fc:	mov	r0, r5
   1fa00:	mov	r1, r4
   1fa04:	mov	r2, r8
   1fa08:	mov	r3, #26
   1fa0c:	b	1fa2c <main@@Base+0xc688>
   1fa10:	ldrb	r0, [r5, #8]
   1fa14:	tst	r0, #1
   1fa18:	bne	1fb98 <main@@Base+0xc7f4>
   1fa1c:	mov	r0, r5
   1fa20:	mov	r1, r4
   1fa24:	mov	r2, r8
   1fa28:	mov	r3, #15
   1fa2c:	sub	sp, fp, #28
   1fa30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa34:	b	2f080 <flatcc_json_parser_set_error@@Base>
   1fa38:	mov	r0, r5
   1fa3c:	mov	r1, r4
   1fa40:	mov	r2, r8
   1fa44:	mov	r3, r9
   1fa48:	bl	1342c <main@@Base+0x88>
   1fa4c:	b	22b98 <main@@Base+0xf7f4>
   1fa50:	mov	r0, #0
   1fa54:	mov	r1, #4
   1fa58:	str	r0, [r9]
   1fa5c:	ldr	r0, [r5]
   1fa60:	bl	2bd4c <flatcc_builder_start_table@@Base>
   1fa64:	cmp	r0, #0
   1fa68:	bne	22b84 <main@@Base+0xf7e0>
   1fa6c:	cmp	r4, r8
   1fa70:	beq	1fb70 <main@@Base+0xc7cc>
   1fa74:	ldrb	r0, [r4]
   1fa78:	cmp	r0, #123	; 0x7b
   1fa7c:	bne	1fb70 <main@@Base+0xc7cc>
   1fa80:	add	r1, r4, #1
   1fa84:	sub	r0, r8, r1
   1fa88:	cmp	r0, #2
   1fa8c:	blt	1fc20 <main@@Base+0xc87c>
   1fa90:	ldrb	r0, [r1]
   1fa94:	cmp	r0, #32
   1fa98:	bls	1fc10 <main@@Base+0xc86c>
   1fa9c:	mov	r4, r1
   1faa0:	b	1fc30 <main@@Base+0xc88c>
   1faa4:	mov	r0, #0
   1faa8:	mov	r1, #0
   1faac:	str	r0, [r9]
   1fab0:	ldr	r0, [r5]
   1fab4:	bl	2bd4c <flatcc_builder_start_table@@Base>
   1fab8:	cmp	r0, #0
   1fabc:	bne	22b84 <main@@Base+0xf7e0>
   1fac0:	cmp	r4, r8
   1fac4:	beq	1fb70 <main@@Base+0xc7cc>
   1fac8:	ldrb	r0, [r4]
   1facc:	cmp	r0, #123	; 0x7b
   1fad0:	bne	1fb70 <main@@Base+0xc7cc>
   1fad4:	add	r1, r4, #1
   1fad8:	sub	r0, r8, r1
   1fadc:	cmp	r0, #2
   1fae0:	blt	20830 <main@@Base+0xd48c>
   1fae4:	ldrb	r0, [r1]
   1fae8:	cmp	r0, #32
   1faec:	bls	20820 <main@@Base+0xd47c>
   1faf0:	mov	r4, r1
   1faf4:	b	20840 <main@@Base+0xd49c>
   1faf8:	mov	r0, #0
   1fafc:	mov	r1, #4
   1fb00:	str	r0, [r9]
   1fb04:	ldr	r0, [r5]
   1fb08:	bl	2bd4c <flatcc_builder_start_table@@Base>
   1fb0c:	cmp	r0, #0
   1fb10:	bne	22b84 <main@@Base+0xf7e0>
   1fb14:	sub	r0, fp, #36	; 0x24
   1fb18:	mov	r1, r4
   1fb1c:	mov	r2, r8
   1fb20:	mov	r3, #1
   1fb24:	str	r0, [sp]
   1fb28:	mov	r0, r5
   1fb2c:	bl	31c7c <flatcc_json_parser_prepare_unions@@Base>
   1fb30:	cmp	r0, r8
   1fb34:	beq	22b84 <main@@Base+0xf7e0>
   1fb38:	cmp	r4, r8
   1fb3c:	beq	1fbb8 <main@@Base+0xc814>
   1fb40:	ldrb	r0, [r4]
   1fb44:	cmp	r0, #123	; 0x7b
   1fb48:	bne	1fbb8 <main@@Base+0xc814>
   1fb4c:	add	r1, r4, #1
   1fb50:	sub	r0, r8, r1
   1fb54:	cmp	r0, #2
   1fb58:	blt	20a1c <main@@Base+0xd678>
   1fb5c:	ldrb	r0, [r1]
   1fb60:	cmp	r0, #32
   1fb64:	bls	20a0c <main@@Base+0xd668>
   1fb68:	mov	r4, r1
   1fb6c:	b	20a2c <main@@Base+0xd688>
   1fb70:	mov	r0, r5
   1fb74:	mov	r1, r4
   1fb78:	mov	r2, r8
   1fb7c:	mov	r3, #21
   1fb80:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1fb84:	mov	r4, r0
   1fb88:	ldr	r0, [r5, #24]
   1fb8c:	cmp	r0, #0
   1fb90:	bne	22b84 <main@@Base+0xf7e0>
   1fb94:	b	1fbf8 <main@@Base+0xc854>
   1fb98:	mov	r0, r5
   1fb9c:	mov	r1, r4
   1fba0:	mov	r2, r8
   1fba4:	sub	sp, fp, #28
   1fba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fbac:	b	2fb98 <flatcc_json_parser_generic_json@@Base>
   1fbb0:	add	r4, r4, #4
   1fbb4:	b	22bcc <main@@Base+0xf828>
   1fbb8:	mov	r0, r5
   1fbbc:	mov	r1, r4
   1fbc0:	mov	r2, r8
   1fbc4:	mov	r3, #21
   1fbc8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1fbcc:	mov	r4, r0
   1fbd0:	add	r0, r5, #24
   1fbd4:	ldr	r0, [r0]
   1fbd8:	cmp	r0, #0
   1fbdc:	bne	22b84 <main@@Base+0xf7e0>
   1fbe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fbe4:	mov	r0, r5
   1fbe8:	mov	r1, r4
   1fbec:	mov	r2, r8
   1fbf0:	bl	31d0c <flatcc_json_parser_finalize_unions@@Base>
   1fbf4:	mov	r4, r0
   1fbf8:	ldr	r0, [r5]
   1fbfc:	bl	2c77c <flatcc_builder_end_table@@Base>
   1fc00:	cmp	r0, #0
   1fc04:	str	r0, [r9]
   1fc08:	bne	22b9c <main@@Base+0xf7f8>
   1fc0c:	b	22b84 <main@@Base+0xf7e0>
   1fc10:	bne	1fc20 <main@@Base+0xc87c>
   1fc14:	ldrb	r0, [r4, #2]!
   1fc18:	cmp	r0, #32
   1fc1c:	bhi	1fc30 <main@@Base+0xc88c>
   1fc20:	mov	r0, r5
   1fc24:	mov	r2, r8
   1fc28:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1fc2c:	mov	r4, r0
   1fc30:	cmp	r4, r8
   1fc34:	mov	r2, r8
   1fc38:	beq	1fc4c <main@@Base+0xc8a8>
   1fc3c:	ldrb	r0, [r4]
   1fc40:	cmp	r0, #125	; 0x7d
   1fc44:	beq	20858 <main@@Base+0xd4b4>
   1fc48:	mov	r2, r4
   1fc4c:	str	r5, [sp, #44]	; 0x2c
   1fc50:	str	r9, [sp, #40]	; 0x28
   1fc54:	cmp	r2, r8
   1fc58:	mov	sl, r8
   1fc5c:	beq	1fca8 <main@@Base+0xc904>
   1fc60:	ldrb	r0, [r2]
   1fc64:	cmp	r0, #46	; 0x2e
   1fc68:	beq	1fc80 <main@@Base+0xc8dc>
   1fc6c:	cmp	r0, #34	; 0x22
   1fc70:	bne	1fc9c <main@@Base+0xc8f8>
   1fc74:	mov	r0, #0
   1fc78:	add	sl, r2, #1
   1fc7c:	b	1fca4 <main@@Base+0xc900>
   1fc80:	mov	r1, r2
   1fc84:	mov	r0, r5
   1fc88:	mov	r2, r8
   1fc8c:	mov	r3, #5
   1fc90:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1fc94:	mov	sl, r0
   1fc98:	b	1fca8 <main@@Base+0xc904>
   1fc9c:	mov	r0, #1
   1fca0:	mov	sl, r2
   1fca4:	str	r0, [r5, #12]
   1fca8:	sub	lr, r8, sl
   1fcac:	mov	r0, #8
   1fcb0:	cmp	lr, #8
   1fcb4:	movcc	r0, lr
   1fcb8:	and	r0, r0, #15
   1fcbc:	sub	r1, r0, #1
   1fcc0:	cmp	r1, #7
   1fcc4:	bhi	20670 <main@@Base+0xd2cc>
   1fcc8:	add	r5, pc, #28
   1fccc:	mov	r0, #0
   1fcd0:	mov	r2, #0
   1fcd4:	mov	r3, #0
   1fcd8:	mov	r7, #0
   1fcdc:	mov	r6, #0
   1fce0:	ldr	r4, [r5, r1, lsl #2]
   1fce4:	mov	r1, #0
   1fce8:	add	pc, r5, r4
   1fcec:	andeq	r0, r0, r0, asr r0
   1fcf0:	andeq	r0, r0, r8, asr #32
   1fcf4:	andeq	r0, r0, r0, asr #32
   1fcf8:	andeq	r0, r0, r8, lsr r0
   1fcfc:	andeq	r0, r0, r8, lsr #32
   1fd00:	andeq	r0, r0, r0, lsr #32
   1fd04:	andeq	r0, r0, r0, lsr #32
   1fd08:	andeq	r0, r0, r0, lsr #32
   1fd0c:	ldrb	r1, [sl, #5]
   1fd10:	lsl	r1, r1, #16
   1fd14:	ldrb	r2, [sl, #4]
   1fd18:	orr	r1, r1, r2, lsl #24
   1fd1c:	mov	r2, r0
   1fd20:	mov	r0, r1
   1fd24:	ldrb	r1, [sl, #3]
   1fd28:	orr	r3, r1, r2
   1fd2c:	ldrb	r1, [sl, #2]
   1fd30:	orr	r7, r3, r1, lsl #8
   1fd34:	ldrb	r1, [sl, #1]
   1fd38:	orr	r6, r7, r1, lsl #16
   1fd3c:	ldrb	r1, [sl]
   1fd40:	movw	r3, #29234	; 0x7232
   1fd44:	lsr	r2, r0, #16
   1fd48:	movt	r3, #27759	; 0x6c6f
   1fd4c:	orr	r9, r6, r1, lsl #24
   1fd50:	movw	r1, #25455	; 0x636f
   1fd54:	orr	r2, r2, r9, lsl #16
   1fd58:	eor	r1, r1, r9, lsr #16
   1fd5c:	eor	r2, r2, r3
   1fd60:	orrs	r1, r2, r1
   1fd64:	bne	1fdb0 <main@@Base+0xca0c>
   1fd68:	cmp	lr, #7
   1fd6c:	mov	r7, sl
   1fd70:	blt	1ffbc <main@@Base+0xcc18>
   1fd74:	ldr	r2, [sp, #44]	; 0x2c
   1fd78:	mov	r1, sl
   1fd7c:	ldrb	r0, [r1, #6]!
   1fd80:	ldr	r2, [r2, #12]
   1fd84:	cmp	r2, #0
   1fd88:	beq	1fe14 <main@@Base+0xca70>
   1fd8c:	cmp	r0, #33	; 0x21
   1fd90:	bcc	1fda0 <main@@Base+0xc9fc>
   1fd94:	cmp	r0, #58	; 0x3a
   1fd98:	mov	r7, sl
   1fd9c:	bne	1ffbc <main@@Base+0xcc18>
   1fda0:	ldr	r0, [sp, #44]	; 0x2c
   1fda4:	mov	r2, #0
   1fda8:	str	r2, [r0, #12]
   1fdac:	b	1fe24 <main@@Base+0xca80>
   1fdb0:	movw	r1, #27759	; 0x6c6f
   1fdb4:	and	r0, r0, #-16777216	; 0xff000000
   1fdb8:	movt	r1, #25455	; 0x636f
   1fdbc:	eor	r0, r0, #1912602624	; 0x72000000
   1fdc0:	eor	r1, r9, r1
   1fdc4:	orrs	r0, r0, r1
   1fdc8:	bne	201b8 <main@@Base+0xce14>
   1fdcc:	cmp	lr, #6
   1fdd0:	mov	r7, sl
   1fdd4:	blt	20130 <main@@Base+0xcd8c>
   1fdd8:	ldr	r2, [sp, #44]	; 0x2c
   1fddc:	mov	r1, sl
   1fde0:	ldrb	r0, [r1, #5]!
   1fde4:	ldr	r2, [r2, #12]
   1fde8:	cmp	r2, #0
   1fdec:	beq	1fe4c <main@@Base+0xcaa8>
   1fdf0:	cmp	r0, #33	; 0x21
   1fdf4:	bcc	1fe04 <main@@Base+0xca60>
   1fdf8:	cmp	r0, #58	; 0x3a
   1fdfc:	mov	r7, sl
   1fe00:	bne	20130 <main@@Base+0xcd8c>
   1fe04:	ldr	r0, [sp, #44]	; 0x2c
   1fe08:	mov	r2, #0
   1fe0c:	str	r2, [r0, #12]
   1fe10:	b	1fe5c <main@@Base+0xcab8>
   1fe14:	cmp	r0, #34	; 0x22
   1fe18:	mov	r7, sl
   1fe1c:	bne	1ffbc <main@@Base+0xcc18>
   1fe20:	add	r1, sl, #7
   1fe24:	sub	r0, r8, r1
   1fe28:	cmp	r0, #2
   1fe2c:	blt	1fe98 <main@@Base+0xcaf4>
   1fe30:	ldrb	r0, [r1]
   1fe34:	cmp	r0, #32
   1fe38:	bls	1fe84 <main@@Base+0xcae0>
   1fe3c:	mov	r7, r1
   1fe40:	cmp	r7, r8
   1fe44:	bne	1feb8 <main@@Base+0xcb14>
   1fe48:	b	1fef0 <main@@Base+0xcb4c>
   1fe4c:	cmp	r0, #34	; 0x22
   1fe50:	mov	r7, sl
   1fe54:	bne	20130 <main@@Base+0xcd8c>
   1fe58:	add	r1, sl, #6
   1fe5c:	sub	r0, r8, r1
   1fe60:	cmp	r0, #2
   1fe64:	blt	1ff20 <main@@Base+0xcb7c>
   1fe68:	ldrb	r0, [r1]
   1fe6c:	cmp	r0, #32
   1fe70:	bls	1ff0c <main@@Base+0xcb68>
   1fe74:	mov	r7, r1
   1fe78:	cmp	r7, r8
   1fe7c:	bne	1ff40 <main@@Base+0xcb9c>
   1fe80:	b	1ff78 <main@@Base+0xcbd4>
   1fe84:	bne	1fe98 <main@@Base+0xcaf4>
   1fe88:	mov	r7, r1
   1fe8c:	ldrb	r0, [r7, #1]!
   1fe90:	cmp	r0, #32
   1fe94:	bhi	1feb0 <main@@Base+0xcb0c>
   1fe98:	ldr	r0, [sp, #44]	; 0x2c
   1fe9c:	mov	r2, r8
   1fea0:	mov	r4, lr
   1fea4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1fea8:	mov	lr, r4
   1feac:	mov	r7, r0
   1feb0:	cmp	r7, r8
   1feb4:	beq	1fef0 <main@@Base+0xcb4c>
   1feb8:	ldrb	r0, [r7]
   1febc:	cmp	r0, #58	; 0x3a
   1fec0:	bne	1fef0 <main@@Base+0xcb4c>
   1fec4:	add	r1, r7, #1
   1fec8:	sub	r0, r8, r1
   1fecc:	cmp	r0, #2
   1fed0:	blt	1ffa4 <main@@Base+0xcc00>
   1fed4:	ldrb	r0, [r1]
   1fed8:	cmp	r0, #32
   1fedc:	bls	1ff94 <main@@Base+0xcbf0>
   1fee0:	mov	r7, r1
   1fee4:	cmp	sl, r7
   1fee8:	bne	1ffc4 <main@@Base+0xcc20>
   1feec:	b	201b8 <main@@Base+0xce14>
   1fef0:	ldr	r0, [sp, #44]	; 0x2c
   1fef4:	mov	r1, r7
   1fef8:	mov	r2, r8
   1fefc:	mov	r3, #4
   1ff00:	mov	r4, lr
   1ff04:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ff08:	b	1ffb4 <main@@Base+0xcc10>
   1ff0c:	bne	1ff20 <main@@Base+0xcb7c>
   1ff10:	mov	r7, r1
   1ff14:	ldrb	r0, [r7, #1]!
   1ff18:	cmp	r0, #32
   1ff1c:	bhi	1ff38 <main@@Base+0xcb94>
   1ff20:	ldr	r0, [sp, #44]	; 0x2c
   1ff24:	mov	r2, r8
   1ff28:	mov	r4, lr
   1ff2c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ff30:	mov	lr, r4
   1ff34:	mov	r7, r0
   1ff38:	cmp	r7, r8
   1ff3c:	beq	1ff78 <main@@Base+0xcbd4>
   1ff40:	ldrb	r0, [r7]
   1ff44:	cmp	r0, #58	; 0x3a
   1ff48:	bne	1ff78 <main@@Base+0xcbd4>
   1ff4c:	add	r1, r7, #1
   1ff50:	sub	r0, r8, r1
   1ff54:	cmp	r0, #2
   1ff58:	blt	20118 <main@@Base+0xcd74>
   1ff5c:	ldrb	r0, [r1]
   1ff60:	cmp	r0, #32
   1ff64:	bls	20108 <main@@Base+0xcd64>
   1ff68:	mov	r7, r1
   1ff6c:	cmp	sl, r7
   1ff70:	bne	20138 <main@@Base+0xcd94>
   1ff74:	b	201b8 <main@@Base+0xce14>
   1ff78:	ldr	r0, [sp, #44]	; 0x2c
   1ff7c:	mov	r1, r7
   1ff80:	mov	r2, r8
   1ff84:	mov	r3, #4
   1ff88:	mov	r4, lr
   1ff8c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   1ff90:	b	20128 <main@@Base+0xcd84>
   1ff94:	bne	1ffa4 <main@@Base+0xcc00>
   1ff98:	ldrb	r0, [r7, #2]!
   1ff9c:	cmp	r0, #32
   1ffa0:	bhi	1ffbc <main@@Base+0xcc18>
   1ffa4:	ldr	r0, [sp, #44]	; 0x2c
   1ffa8:	mov	r2, r8
   1ffac:	mov	r4, lr
   1ffb0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   1ffb4:	mov	lr, r4
   1ffb8:	mov	r7, r0
   1ffbc:	cmp	sl, r7
   1ffc0:	beq	201b8 <main@@Base+0xce14>
   1ffc4:	mov	r6, #0
   1ffc8:	cmp	r7, r8
   1ffcc:	str	r6, [sp, #52]	; 0x34
   1ffd0:	str	r6, [sp, #48]	; 0x30
   1ffd4:	strb	r6, [fp, #-36]	; 0xffffffdc
   1ffd8:	str	r6, [fp, #-32]	; 0xffffffe0
   1ffdc:	beq	20044 <main@@Base+0xcca0>
   1ffe0:	add	r0, sp, #48	; 0x30
   1ffe4:	mov	r1, r7
   1ffe8:	mov	r2, r8
   1ffec:	sub	r3, fp, #32
   1fff0:	str	r0, [sp]
   1fff4:	ldr	r5, [sp, #44]	; 0x2c
   1fff8:	mov	r0, r5
   1fffc:	bl	31418 <flatcc_json_parser_integer@@Base>
   20000:	ldr	r9, [sp, #40]	; 0x28
   20004:	cmp	r0, r7
   20008:	beq	2005c <main@@Base+0xccb8>
   2000c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20010:	mov	r4, r0
   20014:	ldr	r0, [sp, #48]	; 0x30
   20018:	ldr	r1, [sp, #52]	; 0x34
   2001c:	cmp	r2, #0
   20020:	beq	2006c <main@@Base+0xccc8>
   20024:	subs	r2, r0, #129	; 0x81
   20028:	sbcs	r1, r1, #0
   2002c:	bcc	2009c <main@@Base+0xccf8>
   20030:	mov	r0, r5
   20034:	mov	r1, r4
   20038:	mov	r2, r8
   2003c:	mov	r3, #8
   20040:	b	20088 <main@@Base+0xcce4>
   20044:	ldr	r5, [sp, #44]	; 0x2c
   20048:	ldr	r9, [sp, #40]	; 0x28
   2004c:	mov	r4, r8
   20050:	cmp	r7, r4
   20054:	bne	200e8 <main@@Base+0xcd44>
   20058:	b	200b4 <main@@Base+0xcd10>
   2005c:	mov	r4, r7
   20060:	cmp	r7, r4
   20064:	bne	200e8 <main@@Base+0xcd44>
   20068:	b	200b4 <main@@Base+0xcd10>
   2006c:	subs	r2, r0, #128	; 0x80
   20070:	sbcs	r1, r1, #0
   20074:	bcc	200a4 <main@@Base+0xcd00>
   20078:	mov	r0, r5
   2007c:	mov	r1, r4
   20080:	mov	r2, r8
   20084:	mov	r3, #7
   20088:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2008c:	mov	r4, r0
   20090:	cmp	r7, r4
   20094:	bne	200e8 <main@@Base+0xcd44>
   20098:	b	200b4 <main@@Base+0xcd10>
   2009c:	rsb	r6, r0, #0
   200a0:	b	200a8 <main@@Base+0xcd04>
   200a4:	mov	r6, r0
   200a8:	strb	r6, [fp, #-36]	; 0xffffffdc
   200ac:	cmp	r7, r4
   200b0:	bne	200e8 <main@@Base+0xcd44>
   200b4:	sub	r0, fp, #36	; 0x24
   200b8:	mov	r1, r7
   200bc:	mov	r2, r8
   200c0:	str	r0, [sp]
   200c4:	mov	r0, r5
   200c8:	ldr	r3, [pc, #4084]	; 210c4 <main@@Base+0xdd20>
   200cc:	add	r3, pc, r3
   200d0:	bl	1eb3c <main@@Base+0xb798>
   200d4:	mov	r4, r0
   200d8:	cmp	r0, r7
   200dc:	cmpne	r4, r8
   200e0:	beq	22b84 <main@@Base+0xf7e0>
   200e4:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   200e8:	uxtb	r0, r6
   200ec:	cmp	r0, #2
   200f0:	ldrbeq	r0, [r5, #8]
   200f4:	tsteq	r0, #2
   200f8:	beq	20744 <main@@Base+0xd3a0>
   200fc:	ldr	r0, [r5]
   20100:	mov	r1, #1
   20104:	b	2072c <main@@Base+0xd388>
   20108:	bne	20118 <main@@Base+0xcd74>
   2010c:	ldrb	r0, [r7, #2]!
   20110:	cmp	r0, #32
   20114:	bhi	20130 <main@@Base+0xcd8c>
   20118:	ldr	r0, [sp, #44]	; 0x2c
   2011c:	mov	r2, r8
   20120:	mov	r4, lr
   20124:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20128:	mov	lr, r4
   2012c:	mov	r7, r0
   20130:	cmp	sl, r7
   20134:	beq	201b8 <main@@Base+0xce14>
   20138:	mov	r6, #0
   2013c:	cmp	r7, r8
   20140:	str	r6, [sp, #52]	; 0x34
   20144:	str	r6, [sp, #48]	; 0x30
   20148:	strb	r6, [fp, #-36]	; 0xffffffdc
   2014c:	str	r6, [fp, #-32]	; 0xffffffe0
   20150:	beq	20270 <main@@Base+0xcecc>
   20154:	add	r0, sp, #48	; 0x30
   20158:	mov	r1, r7
   2015c:	mov	r2, r8
   20160:	sub	r3, fp, #32
   20164:	str	r0, [sp]
   20168:	ldr	r5, [sp, #44]	; 0x2c
   2016c:	mov	r0, r5
   20170:	bl	31418 <flatcc_json_parser_integer@@Base>
   20174:	ldr	r9, [sp, #40]	; 0x28
   20178:	cmp	r0, r7
   2017c:	beq	202c0 <main@@Base+0xcf1c>
   20180:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20184:	mov	r4, r0
   20188:	ldr	r0, [sp, #48]	; 0x30
   2018c:	ldr	r1, [sp, #52]	; 0x34
   20190:	cmp	r2, #0
   20194:	beq	20308 <main@@Base+0xcf64>
   20198:	subs	r2, r0, #129	; 0x81
   2019c:	sbcs	r1, r1, #0
   201a0:	bcc	20338 <main@@Base+0xcf94>
   201a4:	mov	r0, r5
   201a8:	mov	r1, r4
   201ac:	mov	r2, r8
   201b0:	mov	r3, #8
   201b4:	b	20324 <main@@Base+0xcf80>
   201b8:	movw	r1, #12800	; 0x3200
   201bc:	bic	r0, r9, #255	; 0xff
   201c0:	movt	r1, #30051	; 0x7563
   201c4:	teq	r0, r1
   201c8:	bne	20214 <main@@Base+0xce70>
   201cc:	ldr	r5, [sp, #44]	; 0x2c
   201d0:	ldr	r9, [sp, #40]	; 0x28
   201d4:	cmp	lr, #4
   201d8:	mov	r7, sl
   201dc:	blt	204bc <main@@Base+0xd118>
   201e0:	mov	r1, sl
   201e4:	ldr	r2, [r5, #12]
   201e8:	ldrb	r0, [r1, #3]!
   201ec:	cmp	r2, #0
   201f0:	beq	20288 <main@@Base+0xcee4>
   201f4:	cmp	r0, #33	; 0x21
   201f8:	bcc	20208 <main@@Base+0xce64>
   201fc:	cmp	r0, #58	; 0x3a
   20200:	mov	r7, sl
   20204:	bne	204bc <main@@Base+0xd118>
   20208:	mov	r0, #0
   2020c:	str	r0, [r5, #12]
   20210:	b	20298 <main@@Base+0xcef4>
   20214:	movw	r0, #0
   20218:	bfc	r9, #0, #16
   2021c:	ldr	r5, [sp, #44]	; 0x2c
   20220:	movt	r0, #30051	; 0x7563
   20224:	teq	r9, r0
   20228:	ldr	r9, [sp, #40]	; 0x28
   2022c:	bne	20670 <main@@Base+0xd2cc>
   20230:	cmp	lr, #3
   20234:	mov	r7, sl
   20238:	blt	20604 <main@@Base+0xd260>
   2023c:	mov	r1, sl
   20240:	ldr	r2, [r5, #12]
   20244:	ldrb	r0, [r1, #2]!
   20248:	cmp	r2, #0
   2024c:	beq	202d0 <main@@Base+0xcf2c>
   20250:	cmp	r0, #33	; 0x21
   20254:	bcc	20264 <main@@Base+0xcec0>
   20258:	cmp	r0, #58	; 0x3a
   2025c:	mov	r7, sl
   20260:	bne	20604 <main@@Base+0xd260>
   20264:	mov	r0, #0
   20268:	str	r0, [r5, #12]
   2026c:	b	202e0 <main@@Base+0xcf3c>
   20270:	ldr	r5, [sp, #44]	; 0x2c
   20274:	ldr	r9, [sp, #40]	; 0x28
   20278:	mov	r4, r8
   2027c:	cmp	r7, r4
   20280:	bne	20400 <main@@Base+0xd05c>
   20284:	b	203cc <main@@Base+0xd028>
   20288:	cmp	r0, #34	; 0x22
   2028c:	mov	r7, sl
   20290:	bne	204bc <main@@Base+0xd118>
   20294:	add	r1, sl, #4
   20298:	sub	r0, r8, r1
   2029c:	cmp	r0, #2
   202a0:	blt	20354 <main@@Base+0xcfb0>
   202a4:	ldrb	r0, [r1]
   202a8:	cmp	r0, #32
   202ac:	bls	20340 <main@@Base+0xcf9c>
   202b0:	mov	r7, r1
   202b4:	cmp	r7, r8
   202b8:	bne	2036c <main@@Base+0xcfc8>
   202bc:	b	203a4 <main@@Base+0xd000>
   202c0:	mov	r4, r7
   202c4:	cmp	r7, r4
   202c8:	bne	20400 <main@@Base+0xd05c>
   202cc:	b	203cc <main@@Base+0xd028>
   202d0:	cmp	r0, #34	; 0x22
   202d4:	mov	r7, sl
   202d8:	bne	20604 <main@@Base+0xd260>
   202dc:	add	r1, sl, #3
   202e0:	sub	r0, r8, r1
   202e4:	cmp	r0, #2
   202e8:	blt	20434 <main@@Base+0xd090>
   202ec:	ldrb	r0, [r1]
   202f0:	cmp	r0, #32
   202f4:	bls	20420 <main@@Base+0xd07c>
   202f8:	mov	r7, r1
   202fc:	cmp	r7, r8
   20300:	bne	2044c <main@@Base+0xd0a8>
   20304:	b	20484 <main@@Base+0xd0e0>
   20308:	subs	r2, r0, #128	; 0x80
   2030c:	sbcs	r1, r1, #0
   20310:	bcc	203bc <main@@Base+0xd018>
   20314:	mov	r0, r5
   20318:	mov	r1, r4
   2031c:	mov	r2, r8
   20320:	mov	r3, #7
   20324:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   20328:	mov	r4, r0
   2032c:	cmp	r7, r4
   20330:	bne	20400 <main@@Base+0xd05c>
   20334:	b	203cc <main@@Base+0xd028>
   20338:	rsb	r6, r0, #0
   2033c:	b	203c0 <main@@Base+0xd01c>
   20340:	bne	20354 <main@@Base+0xcfb0>
   20344:	mov	r7, r1
   20348:	ldrb	r0, [r7, #1]!
   2034c:	cmp	r0, #32
   20350:	bhi	20364 <main@@Base+0xcfc0>
   20354:	mov	r0, r5
   20358:	mov	r2, r8
   2035c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20360:	mov	r7, r0
   20364:	cmp	r7, r8
   20368:	beq	203a4 <main@@Base+0xd000>
   2036c:	ldrb	r0, [r7]
   20370:	cmp	r0, #58	; 0x3a
   20374:	bne	203a4 <main@@Base+0xd000>
   20378:	add	r1, r7, #1
   2037c:	sub	r0, r8, r1
   20380:	cmp	r0, #2
   20384:	blt	204ac <main@@Base+0xd108>
   20388:	ldrb	r0, [r1]
   2038c:	cmp	r0, #32
   20390:	bls	2049c <main@@Base+0xd0f8>
   20394:	mov	r7, r1
   20398:	cmp	sl, r7
   2039c:	bne	204c4 <main@@Base+0xd120>
   203a0:	b	20670 <main@@Base+0xd2cc>
   203a4:	mov	r0, r5
   203a8:	mov	r1, r7
   203ac:	mov	r2, r8
   203b0:	mov	r3, #4
   203b4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   203b8:	b	204b8 <main@@Base+0xd114>
   203bc:	mov	r6, r0
   203c0:	strb	r6, [fp, #-36]	; 0xffffffdc
   203c4:	cmp	r7, r4
   203c8:	bne	20400 <main@@Base+0xd05c>
   203cc:	sub	r0, fp, #36	; 0x24
   203d0:	mov	r1, r7
   203d4:	mov	r2, r8
   203d8:	str	r0, [sp]
   203dc:	mov	r0, r5
   203e0:	ldr	r3, [pc, #3996]	; 21384 <main@@Base+0xdfe0>
   203e4:	add	r3, pc, r3
   203e8:	bl	1eb3c <main@@Base+0xb798>
   203ec:	mov	r4, r0
   203f0:	cmp	r0, r7
   203f4:	cmpne	r4, r8
   203f8:	beq	22b84 <main@@Base+0xf7e0>
   203fc:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20400:	uxtb	r0, r6
   20404:	cmp	r0, #2
   20408:	ldrbeq	r0, [r5, #8]
   2040c:	tsteq	r0, #2
   20410:	beq	20744 <main@@Base+0xd3a0>
   20414:	ldr	r0, [r5]
   20418:	mov	r1, #0
   2041c:	b	2072c <main@@Base+0xd388>
   20420:	bne	20434 <main@@Base+0xd090>
   20424:	mov	r7, r1
   20428:	ldrb	r0, [r7, #1]!
   2042c:	cmp	r0, #32
   20430:	bhi	20444 <main@@Base+0xd0a0>
   20434:	mov	r0, r5
   20438:	mov	r2, r8
   2043c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20440:	mov	r7, r0
   20444:	cmp	r7, r8
   20448:	beq	20484 <main@@Base+0xd0e0>
   2044c:	ldrb	r0, [r7]
   20450:	cmp	r0, #58	; 0x3a
   20454:	bne	20484 <main@@Base+0xd0e0>
   20458:	add	r1, r7, #1
   2045c:	sub	r0, r8, r1
   20460:	cmp	r0, #2
   20464:	blt	205f4 <main@@Base+0xd250>
   20468:	ldrb	r0, [r1]
   2046c:	cmp	r0, #32
   20470:	bls	205e4 <main@@Base+0xd240>
   20474:	mov	r7, r1
   20478:	cmp	sl, r7
   2047c:	bne	2060c <main@@Base+0xd268>
   20480:	b	20670 <main@@Base+0xd2cc>
   20484:	mov	r0, r5
   20488:	mov	r1, r7
   2048c:	mov	r2, r8
   20490:	mov	r3, #4
   20494:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   20498:	b	20600 <main@@Base+0xd25c>
   2049c:	bne	204ac <main@@Base+0xd108>
   204a0:	ldrb	r0, [r7, #2]!
   204a4:	cmp	r0, #32
   204a8:	bhi	204bc <main@@Base+0xd118>
   204ac:	mov	r0, r5
   204b0:	mov	r2, r8
   204b4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   204b8:	mov	r7, r0
   204bc:	cmp	sl, r7
   204c0:	beq	20670 <main@@Base+0xd2cc>
   204c4:	mov	r6, #0
   204c8:	cmp	r7, r8
   204cc:	str	r6, [sp, #52]	; 0x34
   204d0:	str	r6, [sp, #48]	; 0x30
   204d4:	strb	r6, [fp, #-36]	; 0xffffffdc
   204d8:	str	r6, [fp, #-32]	; 0xffffffe0
   204dc:	beq	20528 <main@@Base+0xd184>
   204e0:	add	r0, sp, #48	; 0x30
   204e4:	mov	r1, r7
   204e8:	mov	r2, r8
   204ec:	sub	r3, fp, #32
   204f0:	str	r0, [sp]
   204f4:	mov	r0, r5
   204f8:	bl	31418 <flatcc_json_parser_integer@@Base>
   204fc:	cmp	r0, r7
   20500:	beq	20538 <main@@Base+0xd194>
   20504:	mov	r4, r0
   20508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2050c:	cmp	r0, #0
   20510:	beq	20548 <main@@Base+0xd1a4>
   20514:	mov	r0, r5
   20518:	mov	r1, r4
   2051c:	mov	r2, r8
   20520:	mov	r3, #8
   20524:	b	2056c <main@@Base+0xd1c8>
   20528:	mov	r4, r8
   2052c:	cmp	r7, r4
   20530:	bne	205b0 <main@@Base+0xd20c>
   20534:	b	2057c <main@@Base+0xd1d8>
   20538:	mov	r4, r7
   2053c:	cmp	r7, r4
   20540:	bne	205b0 <main@@Base+0xd20c>
   20544:	b	2057c <main@@Base+0xd1d8>
   20548:	ldr	r0, [sp, #48]	; 0x30
   2054c:	ldr	r1, [sp, #52]	; 0x34
   20550:	subs	r2, r0, #256	; 0x100
   20554:	sbcs	r1, r1, #0
   20558:	bcc	205d0 <main@@Base+0xd22c>
   2055c:	mov	r0, r5
   20560:	mov	r1, r4
   20564:	mov	r2, r8
   20568:	mov	r3, #7
   2056c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   20570:	mov	r4, r0
   20574:	cmp	r7, r4
   20578:	bne	205b0 <main@@Base+0xd20c>
   2057c:	sub	r0, fp, #36	; 0x24
   20580:	mov	r1, r7
   20584:	mov	r2, r8
   20588:	str	r0, [sp]
   2058c:	mov	r0, r5
   20590:	ldr	r3, [pc, #3992]	; 21530 <main@@Base+0xe18c>
   20594:	add	r3, pc, r3
   20598:	bl	1ed84 <main@@Base+0xb9e0>
   2059c:	mov	r4, r0
   205a0:	cmp	r0, r7
   205a4:	cmpne	r4, r8
   205a8:	beq	22b84 <main@@Base+0xf7e0>
   205ac:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   205b0:	uxtb	r0, r6
   205b4:	cmp	r0, #2
   205b8:	ldrbeq	r0, [r5, #8]
   205bc:	tsteq	r0, #2
   205c0:	beq	20744 <main@@Base+0xd3a0>
   205c4:	ldr	r0, [r5]
   205c8:	mov	r1, #3
   205cc:	b	2072c <main@@Base+0xd388>
   205d0:	mov	r6, r0
   205d4:	strb	r0, [fp, #-36]	; 0xffffffdc
   205d8:	cmp	r7, r4
   205dc:	bne	205b0 <main@@Base+0xd20c>
   205e0:	b	2057c <main@@Base+0xd1d8>
   205e4:	bne	205f4 <main@@Base+0xd250>
   205e8:	ldrb	r0, [r7, #2]!
   205ec:	cmp	r0, #32
   205f0:	bhi	20604 <main@@Base+0xd260>
   205f4:	mov	r0, r5
   205f8:	mov	r2, r8
   205fc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20600:	mov	r7, r0
   20604:	cmp	sl, r7
   20608:	beq	20670 <main@@Base+0xd2cc>
   2060c:	mov	r6, #0
   20610:	cmp	r7, r8
   20614:	str	r6, [sp, #52]	; 0x34
   20618:	str	r6, [sp, #48]	; 0x30
   2061c:	strb	r6, [fp, #-36]	; 0xffffffdc
   20620:	str	r6, [fp, #-32]	; 0xffffffe0
   20624:	beq	20688 <main@@Base+0xd2e4>
   20628:	add	r0, sp, #48	; 0x30
   2062c:	mov	r1, r7
   20630:	mov	r2, r8
   20634:	sub	r3, fp, #32
   20638:	str	r0, [sp]
   2063c:	mov	r0, r5
   20640:	bl	31418 <flatcc_json_parser_integer@@Base>
   20644:	cmp	r0, r7
   20648:	beq	20698 <main@@Base+0xd2f4>
   2064c:	mov	r4, r0
   20650:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20654:	cmp	r0, #0
   20658:	beq	206a8 <main@@Base+0xd304>
   2065c:	mov	r0, r5
   20660:	mov	r1, r4
   20664:	mov	r2, r8
   20668:	mov	r3, #8
   2066c:	b	206cc <main@@Base+0xd328>
   20670:	mov	r0, r5
   20674:	mov	r1, sl
   20678:	mov	r2, r8
   2067c:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   20680:	mov	r4, r0
   20684:	b	20744 <main@@Base+0xd3a0>
   20688:	mov	r4, r8
   2068c:	cmp	r7, r4
   20690:	bne	20710 <main@@Base+0xd36c>
   20694:	b	206dc <main@@Base+0xd338>
   20698:	mov	r4, r7
   2069c:	cmp	r7, r4
   206a0:	bne	20710 <main@@Base+0xd36c>
   206a4:	b	206dc <main@@Base+0xd338>
   206a8:	ldr	r0, [sp, #48]	; 0x30
   206ac:	ldr	r1, [sp, #52]	; 0x34
   206b0:	subs	r2, r0, #256	; 0x100
   206b4:	sbcs	r1, r1, #0
   206b8:	bcc	2080c <main@@Base+0xd468>
   206bc:	mov	r0, r5
   206c0:	mov	r1, r4
   206c4:	mov	r2, r8
   206c8:	mov	r3, #7
   206cc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   206d0:	mov	r4, r0
   206d4:	cmp	r7, r4
   206d8:	bne	20710 <main@@Base+0xd36c>
   206dc:	sub	r0, fp, #36	; 0x24
   206e0:	mov	r1, r7
   206e4:	mov	r2, r8
   206e8:	str	r0, [sp]
   206ec:	mov	r0, r5
   206f0:	ldr	r3, [pc, #4092]	; 216f4 <main@@Base+0xe350>
   206f4:	add	r3, pc, r3
   206f8:	bl	1ed84 <main@@Base+0xb9e0>
   206fc:	mov	r4, r0
   20700:	cmp	r0, r7
   20704:	cmpne	r4, r8
   20708:	beq	22b84 <main@@Base+0xf7e0>
   2070c:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20710:	uxtb	r0, r6
   20714:	cmp	r0, #2
   20718:	ldrbeq	r0, [r5, #8]
   2071c:	tsteq	r0, #2
   20720:	beq	20744 <main@@Base+0xd3a0>
   20724:	ldr	r0, [r5]
   20728:	mov	r1, #2
   2072c:	mov	r2, #1
   20730:	mov	r3, #1
   20734:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   20738:	cmp	r0, #0
   2073c:	beq	22b84 <main@@Base+0xf7e0>
   20740:	strb	r6, [r0]
   20744:	sub	r0, r8, r4
   20748:	cmp	r0, #2
   2074c:	blt	20780 <main@@Base+0xd3dc>
   20750:	ldrb	r0, [r4]
   20754:	cmp	r0, #32
   20758:	bls	2076c <main@@Base+0xd3c8>
   2075c:	mov	r2, r4
   20760:	cmp	r2, r8
   20764:	bne	2079c <main@@Base+0xd3f8>
   20768:	b	209bc <main@@Base+0xd618>
   2076c:	bne	20780 <main@@Base+0xd3dc>
   20770:	mov	r2, r4
   20774:	ldrb	r0, [r2, #1]!
   20778:	cmp	r0, #32
   2077c:	bhi	20794 <main@@Base+0xd3f0>
   20780:	mov	r0, r5
   20784:	mov	r1, r4
   20788:	mov	r2, r8
   2078c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20790:	mov	r2, r0
   20794:	cmp	r2, r8
   20798:	beq	209bc <main@@Base+0xd618>
   2079c:	ldrb	r0, [r2]
   207a0:	cmp	r0, #44	; 0x2c
   207a4:	bne	22ac8 <main@@Base+0xf724>
   207a8:	add	r1, r2, #1
   207ac:	sub	r0, r8, r1
   207b0:	cmp	r0, #2
   207b4:	blt	207e4 <main@@Base+0xd440>
   207b8:	ldrb	r0, [r1]
   207bc:	cmp	r0, #32
   207c0:	bls	207d4 <main@@Base+0xd430>
   207c4:	mov	r2, r1
   207c8:	cmp	r2, r8
   207cc:	bne	207fc <main@@Base+0xd458>
   207d0:	b	209c4 <main@@Base+0xd620>
   207d4:	bne	207e4 <main@@Base+0xd440>
   207d8:	ldrb	r0, [r2, #2]!
   207dc:	cmp	r0, #32
   207e0:	bhi	207f4 <main@@Base+0xd450>
   207e4:	mov	r0, r5
   207e8:	mov	r2, r8
   207ec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   207f0:	mov	r2, r0
   207f4:	cmp	r2, r8
   207f8:	beq	209c4 <main@@Base+0xd620>
   207fc:	ldrb	r0, [r2]
   20800:	cmp	r0, #125	; 0x7d
   20804:	bne	1fc54 <main@@Base+0xc8b0>
   20808:	b	22ad0 <main@@Base+0xf72c>
   2080c:	mov	r6, r0
   20810:	strb	r0, [fp, #-36]	; 0xffffffdc
   20814:	cmp	r7, r4
   20818:	bne	20710 <main@@Base+0xd36c>
   2081c:	b	206dc <main@@Base+0xd338>
   20820:	bne	20830 <main@@Base+0xd48c>
   20824:	ldrb	r0, [r4, #2]!
   20828:	cmp	r0, #32
   2082c:	bhi	20840 <main@@Base+0xd49c>
   20830:	mov	r0, r5
   20834:	mov	r2, r8
   20838:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2083c:	mov	r4, r0
   20840:	cmp	r4, r8
   20844:	mov	r3, r8
   20848:	beq	2088c <main@@Base+0xd4e8>
   2084c:	ldrb	r0, [r4]
   20850:	cmp	r0, #125	; 0x7d
   20854:	bne	20888 <main@@Base+0xd4e4>
   20858:	add	r1, r4, #1
   2085c:	sub	r0, r8, r1
   20860:	cmp	r0, #2
   20864:	blt	22b5c <main@@Base+0xf7b8>
   20868:	ldrb	r0, [r1]
   2086c:	cmp	r0, #32
   20870:	bhi	22aec <main@@Base+0xf748>
   20874:	bne	22b5c <main@@Base+0xf7b8>
   20878:	ldrb	r0, [r4, #2]!
   2087c:	cmp	r0, #32
   20880:	bhi	1fb88 <main@@Base+0xc7e4>
   20884:	b	22b5c <main@@Base+0xf7b8>
   20888:	mov	r3, r4
   2088c:	mov	r4, #0
   20890:	mov	r7, #1
   20894:	cmp	r3, r8
   20898:	mov	r1, r8
   2089c:	beq	208e4 <main@@Base+0xd540>
   208a0:	ldrb	r0, [r3]
   208a4:	cmp	r0, #46	; 0x2e
   208a8:	beq	208c0 <main@@Base+0xd51c>
   208ac:	cmp	r0, #34	; 0x22
   208b0:	bne	208dc <main@@Base+0xd538>
   208b4:	str	r4, [r5, #12]
   208b8:	add	r1, r3, #1
   208bc:	b	208e4 <main@@Base+0xd540>
   208c0:	mov	r1, r3
   208c4:	mov	r0, r5
   208c8:	mov	r2, r8
   208cc:	mov	r3, #5
   208d0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   208d4:	mov	r1, r0
   208d8:	b	208e4 <main@@Base+0xd540>
   208dc:	mov	r1, r3
   208e0:	str	r7, [r5, #12]
   208e4:	mov	r0, r5
   208e8:	mov	r2, r8
   208ec:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   208f0:	mov	r2, r0
   208f4:	sub	r0, r8, r0
   208f8:	cmp	r0, #2
   208fc:	blt	20930 <main@@Base+0xd58c>
   20900:	ldrb	r0, [r2]
   20904:	cmp	r0, #32
   20908:	bls	2091c <main@@Base+0xd578>
   2090c:	mov	r3, r2
   20910:	cmp	r3, r8
   20914:	bne	2094c <main@@Base+0xd5a8>
   20918:	b	209bc <main@@Base+0xd618>
   2091c:	bne	20930 <main@@Base+0xd58c>
   20920:	mov	r3, r2
   20924:	ldrb	r0, [r3, #1]!
   20928:	cmp	r0, #32
   2092c:	bhi	20944 <main@@Base+0xd5a0>
   20930:	mov	r1, r2
   20934:	mov	r0, r5
   20938:	mov	r2, r8
   2093c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20940:	mov	r3, r0
   20944:	cmp	r3, r8
   20948:	beq	209bc <main@@Base+0xd618>
   2094c:	ldrb	r0, [r3]
   20950:	cmp	r0, #44	; 0x2c
   20954:	bne	209d0 <main@@Base+0xd62c>
   20958:	add	r1, r3, #1
   2095c:	sub	r0, r8, r1
   20960:	cmp	r0, #2
   20964:	blt	20994 <main@@Base+0xd5f0>
   20968:	ldrb	r0, [r1]
   2096c:	cmp	r0, #32
   20970:	bls	20984 <main@@Base+0xd5e0>
   20974:	mov	r3, r1
   20978:	cmp	r3, r8
   2097c:	bne	209ac <main@@Base+0xd608>
   20980:	b	209c4 <main@@Base+0xd620>
   20984:	bne	20994 <main@@Base+0xd5f0>
   20988:	ldrb	r0, [r3, #2]!
   2098c:	cmp	r0, #32
   20990:	bhi	209a4 <main@@Base+0xd600>
   20994:	mov	r0, r5
   20998:	mov	r2, r8
   2099c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   209a0:	mov	r3, r0
   209a4:	cmp	r3, r8
   209a8:	beq	209c4 <main@@Base+0xd620>
   209ac:	ldrb	r0, [r3]
   209b0:	cmp	r0, #125	; 0x7d
   209b4:	bne	20894 <main@@Base+0xd4f0>
   209b8:	b	209d8 <main@@Base+0xd634>
   209bc:	mov	r4, r8
   209c0:	b	1fb88 <main@@Base+0xc7e4>
   209c4:	mov	r0, r5
   209c8:	mov	r1, r8
   209cc:	b	22b3c <main@@Base+0xf798>
   209d0:	cmp	r0, #125	; 0x7d
   209d4:	bne	22abc <main@@Base+0xf718>
   209d8:	add	r1, r3, #1
   209dc:	sub	r0, r8, r1
   209e0:	cmp	r0, #2
   209e4:	blt	22b5c <main@@Base+0xf7b8>
   209e8:	ldrb	r0, [r1]
   209ec:	cmp	r0, #32
   209f0:	bhi	22aec <main@@Base+0xf748>
   209f4:	bne	22b5c <main@@Base+0xf7b8>
   209f8:	ldrb	r0, [r3, #2]!
   209fc:	cmp	r0, #32
   20a00:	mov	r4, r3
   20a04:	bhi	1fb88 <main@@Base+0xc7e4>
   20a08:	b	22b5c <main@@Base+0xf7b8>
   20a0c:	bne	20a1c <main@@Base+0xd678>
   20a10:	ldrb	r0, [r4, #2]!
   20a14:	cmp	r0, #32
   20a18:	bhi	20a2c <main@@Base+0xd688>
   20a1c:	mov	r0, r5
   20a20:	mov	r2, r8
   20a24:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20a28:	mov	r4, r0
   20a2c:	cmp	r4, r8
   20a30:	mov	r2, r8
   20a34:	beq	20a6c <main@@Base+0xd6c8>
   20a38:	ldrb	r0, [r4]
   20a3c:	cmp	r0, #125	; 0x7d
   20a40:	bne	20a68 <main@@Base+0xd6c4>
   20a44:	add	r1, r4, #1
   20a48:	sub	r0, r8, r1
   20a4c:	cmp	r0, #2
   20a50:	blt	22b24 <main@@Base+0xf780>
   20a54:	ldrb	r0, [r1]
   20a58:	cmp	r0, #32
   20a5c:	bls	22b14 <main@@Base+0xf770>
   20a60:	mov	r4, r1
   20a64:	b	1fbd0 <main@@Base+0xc82c>
   20a68:	mov	r2, r4
   20a6c:	add	r0, r5, #24
   20a70:	str	r0, [sp, #28]
   20a74:	add	r0, r5, #12
   20a78:	str	r0, [sp, #32]
   20a7c:	movw	r0, #24436	; 0x5f74
   20a80:	movt	r0, #29299	; 0x7273
   20a84:	add	r0, r0, #65536	; 0x10000
   20a88:	add	r0, r0, #16777216	; 0x1000000
   20a8c:	str	r0, [sp, #24]
   20a90:	str	r8, [sp, #36]	; 0x24
   20a94:	str	r5, [sp, #44]	; 0x2c
   20a98:	str	r9, [sp, #40]	; 0x28
   20a9c:	cmp	r2, r8
   20aa0:	mov	sl, r8
   20aa4:	beq	20af8 <main@@Base+0xd754>
   20aa8:	ldrb	r0, [r2]
   20aac:	cmp	r0, #46	; 0x2e
   20ab0:	beq	20acc <main@@Base+0xd728>
   20ab4:	cmp	r0, #34	; 0x22
   20ab8:	bne	20ae8 <main@@Base+0xd744>
   20abc:	ldr	r0, [sp, #32]
   20ac0:	mov	r1, #0
   20ac4:	add	sl, r2, #1
   20ac8:	b	20af4 <main@@Base+0xd750>
   20acc:	mov	r1, r2
   20ad0:	mov	r0, r5
   20ad4:	mov	r2, r8
   20ad8:	mov	r3, #5
   20adc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   20ae0:	mov	sl, r0
   20ae4:	b	20af8 <main@@Base+0xd754>
   20ae8:	ldr	r0, [sp, #32]
   20aec:	mov	r1, #1
   20af0:	mov	sl, r2
   20af4:	str	r1, [r0]
   20af8:	sub	lr, r8, sl
   20afc:	mov	r0, #8
   20b00:	cmp	lr, #8
   20b04:	movcc	r0, lr
   20b08:	and	r0, r0, #15
   20b0c:	sub	r0, r0, #1
   20b10:	cmp	r0, #7
   20b14:	bhi	20eb0 <main@@Base+0xdb0c>
   20b18:	add	r7, pc, #36	; 0x24
   20b1c:	mov	r9, #0
   20b20:	mov	ip, #0
   20b24:	mov	r6, #0
   20b28:	mov	r1, #0
   20b2c:	mov	r2, #0
   20b30:	mov	r3, #0
   20b34:	mov	r5, #0
   20b38:	mov	r4, #0
   20b3c:	ldr	r0, [r7, r0, lsl #2]
   20b40:	add	pc, r7, r0
   20b44:	andeq	r0, r0, r4, rrx
   20b48:	andeq	r0, r0, ip, asr r0
   20b4c:	andeq	r0, r0, r4, asr r0
   20b50:	andeq	r0, r0, ip, asr #32
   20b54:	andeq	r0, r0, r0, asr #32
   20b58:	andeq	r0, r0, r4, lsr r0
   20b5c:	andeq	r0, r0, r4, lsr #32
   20b60:	andeq	r0, r0, r0, lsr #32
   20b64:	ldrb	ip, [sl, #7]
   20b68:	ldrb	r0, [sl, #6]
   20b6c:	mov	r6, r9
   20b70:	orr	r0, ip, r0, lsl #8
   20b74:	mov	r9, r0
   20b78:	ldrb	r0, [sl, #5]
   20b7c:	mov	r1, r6
   20b80:	orr	r9, r9, r0, lsl #16
   20b84:	ldrb	r0, [sl, #4]
   20b88:	mov	r2, r1
   20b8c:	orr	r9, r9, r0, lsl #24
   20b90:	ldrb	r0, [sl, #3]
   20b94:	orr	r3, r0, r2
   20b98:	ldrb	r0, [sl, #2]
   20b9c:	orr	r5, r3, r0, lsl #8
   20ba0:	ldrb	r0, [sl, #1]
   20ba4:	orr	r4, r5, r0, lsl #16
   20ba8:	movw	r2, #30976	; 0x7900
   20bac:	movt	r2, #24942	; 0x616e
   20bb0:	add	r0, r2, #95	; 0x5f
   20bb4:	eor	r1, r9, r0
   20bb8:	ldrb	r0, [sl]
   20bbc:	orr	r4, r4, r0, lsl #24
   20bc0:	movw	r0, #28281	; 0x6e79
   20bc4:	movt	r0, #28001	; 0x6d61
   20bc8:	eor	r0, r4, r0
   20bcc:	orrs	r1, r1, r0
   20bd0:	bne	20ca0 <main@@Base+0xd8fc>
   20bd4:	ldr	r8, [sp, #36]	; 0x24
   20bd8:	add	r4, sl, #8
   20bdc:	mov	r1, #8
   20be0:	ldr	r5, [sp, #44]	; 0x2c
   20be4:	ldr	r9, [sp, #40]	; 0x28
   20be8:	sub	r0, r8, r4
   20bec:	cmp	r0, #8
   20bf0:	movcc	r1, r0
   20bf4:	and	r1, r1, #15
   20bf8:	sub	r2, r1, #1
   20bfc:	cmp	r2, #7
   20c00:	bhi	20fa8 <main@@Base+0xdc04>
   20c04:	add	r3, pc, #8
   20c08:	mov	r1, #0
   20c0c:	ldr	r2, [r3, r2, lsl #2]
   20c10:	add	pc, r3, r2
   20c14:	andeq	r0, r0, r4, lsr r0
   20c18:	andeq	r0, r0, ip, lsr #32
   20c1c:	andeq	r0, r0, r4, lsr #32
   20c20:	andeq	r0, r0, r0, lsr #32
   20c24:	andeq	r0, r0, r0, lsr #32
   20c28:	andeq	r0, r0, r0, lsr #32
   20c2c:	andeq	r0, r0, r0, lsr #32
   20c30:	andeq	r0, r0, r0, lsr #32
   20c34:	ldrb	r1, [sl, #11]
   20c38:	ldrb	r2, [sl, #10]
   20c3c:	orr	r1, r1, r2, lsl #8
   20c40:	ldrb	r2, [sl, #9]
   20c44:	orr	r1, r1, r2, lsl #16
   20c48:	ldrb	r2, [r4]
   20c4c:	orr	r1, r1, r2, lsl #24
   20c50:	movw	r2, #28773	; 0x7065
   20c54:	movt	r2, #29817	; 0x7479
   20c58:	teq	r1, r2
   20c5c:	bne	20fa8 <main@@Base+0xdc04>
   20c60:	cmp	r0, #5
   20c64:	blt	20fa8 <main@@Base+0xdc04>
   20c68:	ldr	r2, [sp, #32]
   20c6c:	mov	r1, sl
   20c70:	ldrb	r0, [r1, #12]!
   20c74:	ldr	r2, [r2]
   20c78:	cmp	r2, #0
   20c7c:	beq	20d38 <main@@Base+0xd994>
   20c80:	cmp	r0, #33	; 0x21
   20c84:	bcc	20c90 <main@@Base+0xd8ec>
   20c88:	cmp	r0, #58	; 0x3a
   20c8c:	bne	20fa8 <main@@Base+0xdc04>
   20c90:	ldr	r0, [sp, #32]
   20c94:	mov	r2, #0
   20c98:	str	r2, [r0]
   20c9c:	b	20d44 <main@@Base+0xd9a0>
   20ca0:	ldr	r8, [sp, #36]	; 0x24
   20ca4:	bic	r1, r9, #255	; 0xff
   20ca8:	eor	r1, r1, r2
   20cac:	orrs	r0, r1, r0
   20cb0:	bne	20dd4 <main@@Base+0xda30>
   20cb4:	cmp	lr, #8
   20cb8:	mov	r1, sl
   20cbc:	blt	210f0 <main@@Base+0xdd4c>
   20cc0:	ldr	r1, [sp, #32]
   20cc4:	mov	r2, sl
   20cc8:	ldrb	r0, [r2, #7]!
   20ccc:	ldr	r1, [r1]
   20cd0:	cmp	r1, #0
   20cd4:	beq	20cfc <main@@Base+0xd958>
   20cd8:	cmp	r0, #33	; 0x21
   20cdc:	bcc	20cec <main@@Base+0xd948>
   20ce0:	cmp	r0, #58	; 0x3a
   20ce4:	mov	r1, sl
   20ce8:	bne	210f0 <main@@Base+0xdd4c>
   20cec:	ldr	r0, [sp, #32]
   20cf0:	mov	r1, #0
   20cf4:	str	r1, [r0]
   20cf8:	b	20d0c <main@@Base+0xd968>
   20cfc:	cmp	r0, #34	; 0x22
   20d00:	mov	r1, sl
   20d04:	bne	210f0 <main@@Base+0xdd4c>
   20d08:	add	r2, sl, #8
   20d0c:	sub	r0, r8, r2
   20d10:	mov	r5, lr
   20d14:	cmp	r0, #2
   20d18:	blt	20d80 <main@@Base+0xd9dc>
   20d1c:	ldrb	r0, [r2]
   20d20:	cmp	r0, #32
   20d24:	bls	20d6c <main@@Base+0xd9c8>
   20d28:	mov	r1, r2
   20d2c:	cmp	r1, r8
   20d30:	bne	20da0 <main@@Base+0xd9fc>
   20d34:	b	20ec4 <main@@Base+0xdb20>
   20d38:	cmp	r0, #34	; 0x22
   20d3c:	bne	20fa8 <main@@Base+0xdc04>
   20d40:	add	r1, sl, #13
   20d44:	sub	r0, r8, r1
   20d48:	cmp	r0, #2
   20d4c:	blt	20f5c <main@@Base+0xdbb8>
   20d50:	ldrb	r0, [r1]
   20d54:	cmp	r0, #32
   20d58:	bls	20f48 <main@@Base+0xdba4>
   20d5c:	mov	r2, r1
   20d60:	cmp	r2, r8
   20d64:	bne	20f74 <main@@Base+0xdbd0>
   20d68:	b	20fbc <main@@Base+0xdc18>
   20d6c:	bne	20d80 <main@@Base+0xd9dc>
   20d70:	mov	r1, r2
   20d74:	ldrb	r0, [r1, #1]!
   20d78:	cmp	r0, #32
   20d7c:	bhi	20d98 <main@@Base+0xd9f4>
   20d80:	ldr	r0, [sp, #44]	; 0x2c
   20d84:	mov	r1, r2
   20d88:	mov	r2, r8
   20d8c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20d90:	mov	lr, r5
   20d94:	mov	r1, r0
   20d98:	cmp	r1, r8
   20d9c:	beq	20ec4 <main@@Base+0xdb20>
   20da0:	ldrb	r0, [r1]
   20da4:	cmp	r0, #58	; 0x3a
   20da8:	bne	20ec4 <main@@Base+0xdb20>
   20dac:	add	r2, r1, #1
   20db0:	sub	r0, r8, r2
   20db4:	cmp	r0, #2
   20db8:	blt	210d8 <main@@Base+0xdd34>
   20dbc:	ldrb	r0, [r2]
   20dc0:	cmp	r0, #32
   20dc4:	bls	210c8 <main@@Base+0xdd24>
   20dc8:	mov	r1, r2
   20dcc:	cmp	sl, r1
   20dd0:	bne	210f8 <main@@Base+0xdd54>
   20dd4:	lsr	r1, r9, #16
   20dd8:	movw	r2, #27000	; 0x6978
   20ddc:	movw	r0, #28786	; 0x7072
   20de0:	orr	r1, r1, r4, lsl #16
   20de4:	movt	r2, #25958	; 0x6566
   20de8:	eor	r0, r0, r4, lsr #16
   20dec:	eor	r1, r1, r2
   20df0:	orrs	r0, r1, r0
   20df4:	bne	20e48 <main@@Base+0xdaa4>
   20df8:	ldr	r5, [sp, #44]	; 0x2c
   20dfc:	ldr	r9, [sp, #40]	; 0x28
   20e00:	cmp	lr, #7
   20e04:	mov	r1, sl
   20e08:	blt	21290 <main@@Base+0xdeec>
   20e0c:	ldr	r1, [sp, #32]
   20e10:	mov	r2, sl
   20e14:	ldrb	r0, [r2, #6]!
   20e18:	ldr	r1, [r1]
   20e1c:	cmp	r1, #0
   20e20:	beq	20ed8 <main@@Base+0xdb34>
   20e24:	cmp	r0, #33	; 0x21
   20e28:	bcc	20e38 <main@@Base+0xda94>
   20e2c:	cmp	r0, #58	; 0x3a
   20e30:	mov	r1, sl
   20e34:	bne	21290 <main@@Base+0xdeec>
   20e38:	ldr	r0, [sp, #32]
   20e3c:	mov	r1, #0
   20e40:	str	r1, [r0]
   20e44:	b	20ee8 <main@@Base+0xdb44>
   20e48:	movw	r0, #30313	; 0x7669
   20e4c:	ldr	r5, [sp, #44]	; 0x2c
   20e50:	and	r1, r9, #-16777216	; 0xff000000
   20e54:	movt	r0, #28015	; 0x6d6f
   20e58:	eor	r1, r1, #1694498816	; 0x65000000
   20e5c:	eor	r0, r4, r0
   20e60:	orrs	r0, r1, r0
   20e64:	bne	20eb0 <main@@Base+0xdb0c>
   20e68:	cmp	lr, #6
   20e6c:	mov	r4, sl
   20e70:	blt	212f4 <main@@Base+0xdf50>
   20e74:	ldr	r2, [sp, #32]
   20e78:	mov	r1, sl
   20e7c:	ldrb	r0, [r1, #5]!
   20e80:	ldr	r2, [r2]
   20e84:	cmp	r2, #0
   20e88:	beq	20f10 <main@@Base+0xdb6c>
   20e8c:	cmp	r0, #33	; 0x21
   20e90:	bcc	20ea0 <main@@Base+0xdafc>
   20e94:	cmp	r0, #58	; 0x3a
   20e98:	mov	r4, sl
   20e9c:	bne	212f4 <main@@Base+0xdf50>
   20ea0:	ldr	r0, [sp, #32]
   20ea4:	mov	r2, #0
   20ea8:	str	r2, [r0]
   20eac:	b	20f20 <main@@Base+0xdb7c>
   20eb0:	mov	r0, r5
   20eb4:	mov	r1, sl
   20eb8:	mov	r2, r8
   20ebc:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   20ec0:	b	21128 <main@@Base+0xdd84>
   20ec4:	ldr	r0, [sp, #44]	; 0x2c
   20ec8:	mov	r2, r8
   20ecc:	mov	r3, #4
   20ed0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   20ed4:	b	210e8 <main@@Base+0xdd44>
   20ed8:	cmp	r0, #34	; 0x22
   20edc:	mov	r1, sl
   20ee0:	bne	21290 <main@@Base+0xdeec>
   20ee4:	add	r2, sl, #7
   20ee8:	sub	r0, r8, r2
   20eec:	cmp	r0, #2
   20ef0:	blt	20fe8 <main@@Base+0xdc44>
   20ef4:	ldrb	r0, [r2]
   20ef8:	cmp	r0, #32
   20efc:	bls	20fd4 <main@@Base+0xdc30>
   20f00:	mov	r1, r2
   20f04:	cmp	r1, r8
   20f08:	bne	21004 <main@@Base+0xdc60>
   20f0c:	b	2103c <main@@Base+0xdc98>
   20f10:	cmp	r0, #34	; 0x22
   20f14:	mov	r4, sl
   20f18:	bne	212f4 <main@@Base+0xdf50>
   20f1c:	add	r1, sl, #6
   20f20:	sub	r0, r8, r1
   20f24:	cmp	r0, #2
   20f28:	blt	21064 <main@@Base+0xdcc0>
   20f2c:	ldrb	r0, [r1]
   20f30:	cmp	r0, #32
   20f34:	bls	21050 <main@@Base+0xdcac>
   20f38:	mov	r4, r1
   20f3c:	cmp	r4, r8
   20f40:	bne	2107c <main@@Base+0xdcd8>
   20f44:	b	210ac <main@@Base+0xdd08>
   20f48:	bne	20f5c <main@@Base+0xdbb8>
   20f4c:	mov	r2, r1
   20f50:	ldrb	r0, [r2, #1]!
   20f54:	cmp	r0, #32
   20f58:	bhi	20f6c <main@@Base+0xdbc8>
   20f5c:	mov	r0, r5
   20f60:	mov	r2, r8
   20f64:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20f68:	mov	r2, r0
   20f6c:	cmp	r2, r8
   20f70:	beq	20fbc <main@@Base+0xdc18>
   20f74:	ldrb	r0, [r2]
   20f78:	cmp	r0, #58	; 0x3a
   20f7c:	bne	20fbc <main@@Base+0xdc18>
   20f80:	add	r1, r2, #1
   20f84:	sub	r0, r8, r1
   20f88:	cmp	r0, #2
   20f8c:	blt	21208 <main@@Base+0xde64>
   20f90:	ldrb	r0, [r1]
   20f94:	cmp	r0, #32
   20f98:	bls	211f8 <main@@Base+0xde54>
   20f9c:	mov	r2, r1
   20fa0:	cmp	r4, r2
   20fa4:	bne	21220 <main@@Base+0xde7c>
   20fa8:	mov	r0, r5
   20fac:	mov	r1, r4
   20fb0:	mov	r2, r8
   20fb4:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   20fb8:	b	2112c <main@@Base+0xdd88>
   20fbc:	mov	r1, r2
   20fc0:	mov	r0, r5
   20fc4:	mov	r2, r8
   20fc8:	mov	r3, #4
   20fcc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   20fd0:	b	21214 <main@@Base+0xde70>
   20fd4:	bne	20fe8 <main@@Base+0xdc44>
   20fd8:	mov	r1, r2
   20fdc:	ldrb	r0, [r1, #1]!
   20fe0:	cmp	r0, #32
   20fe4:	bhi	20ffc <main@@Base+0xdc58>
   20fe8:	mov	r1, r2
   20fec:	mov	r0, r5
   20ff0:	mov	r2, r8
   20ff4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   20ff8:	mov	r1, r0
   20ffc:	cmp	r1, r8
   21000:	beq	2103c <main@@Base+0xdc98>
   21004:	ldrb	r0, [r1]
   21008:	cmp	r0, #58	; 0x3a
   2100c:	bne	2103c <main@@Base+0xdc98>
   21010:	add	r2, r1, #1
   21014:	sub	r0, r8, r2
   21018:	cmp	r0, #2
   2101c:	blt	2127c <main@@Base+0xded8>
   21020:	ldrb	r0, [r2]
   21024:	cmp	r0, #32
   21028:	bls	2126c <main@@Base+0xdec8>
   2102c:	mov	r1, r2
   21030:	cmp	sl, r1
   21034:	bne	21298 <main@@Base+0xdef4>
   21038:	b	21378 <main@@Base+0xdfd4>
   2103c:	mov	r0, r5
   21040:	mov	r2, r8
   21044:	mov	r3, #4
   21048:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2104c:	b	2128c <main@@Base+0xdee8>
   21050:	bne	21064 <main@@Base+0xdcc0>
   21054:	mov	r4, r1
   21058:	ldrb	r0, [r4, #1]!
   2105c:	cmp	r0, #32
   21060:	bhi	21074 <main@@Base+0xdcd0>
   21064:	mov	r0, r5
   21068:	mov	r2, r8
   2106c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   21070:	mov	r4, r0
   21074:	cmp	r4, r8
   21078:	beq	210ac <main@@Base+0xdd08>
   2107c:	ldrb	r0, [r4]
   21080:	cmp	r0, #58	; 0x3a
   21084:	bne	210ac <main@@Base+0xdd08>
   21088:	add	r1, r4, #1
   2108c:	sub	r0, r8, r1
   21090:	cmp	r0, #2
   21094:	blt	212e4 <main@@Base+0xdf40>
   21098:	ldrb	r0, [r1]
   2109c:	cmp	r0, #32
   210a0:	bls	212d4 <main@@Base+0xdf30>
   210a4:	mov	r4, r1
   210a8:	b	212f4 <main@@Base+0xdf50>
   210ac:	mov	r0, r5
   210b0:	mov	r1, r4
   210b4:	mov	r2, r8
   210b8:	mov	r3, #4
   210bc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   210c0:	b	212f0 <main@@Base+0xdf4c>
   210c4:	andeq	r7, r2, r0, lsr r1
   210c8:	bne	210d8 <main@@Base+0xdd34>
   210cc:	ldrb	r0, [r1, #2]!
   210d0:	cmp	r0, #32
   210d4:	bhi	210f0 <main@@Base+0xdd4c>
   210d8:	ldr	r0, [sp, #44]	; 0x2c
   210dc:	mov	r1, r2
   210e0:	mov	r2, r8
   210e4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   210e8:	mov	lr, r5
   210ec:	mov	r1, r0
   210f0:	cmp	sl, r1
   210f4:	beq	20dd4 <main@@Base+0xda30>
   210f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   210fc:	mov	r2, #3
   21100:	mov	r3, #0
   21104:	str	r2, [sp]
   21108:	mov	r2, r8
   2110c:	str	r0, [sp, #4]
   21110:	ldr	r0, [pc, #4068]	; 220fc <main@@Base+0xed58>
   21114:	add	r0, pc, r0
   21118:	str	r0, [sp, #8]
   2111c:	ldr	r5, [sp, #44]	; 0x2c
   21120:	mov	r0, r5
   21124:	bl	32494 <flatcc_json_parser_union_vector@@Base>
   21128:	ldr	r9, [sp, #40]	; 0x28
   2112c:	mov	r4, r0
   21130:	sub	r0, r8, r4
   21134:	cmp	r0, #2
   21138:	blt	2116c <main@@Base+0xddc8>
   2113c:	ldrb	r0, [r4]
   21140:	cmp	r0, #32
   21144:	bls	21158 <main@@Base+0xddb4>
   21148:	mov	r2, r4
   2114c:	cmp	r2, r8
   21150:	bne	21188 <main@@Base+0xdde4>
   21154:	b	22a58 <main@@Base+0xf6b4>
   21158:	bne	2116c <main@@Base+0xddc8>
   2115c:	mov	r2, r4
   21160:	ldrb	r0, [r2, #1]!
   21164:	cmp	r0, #32
   21168:	bhi	21180 <main@@Base+0xdddc>
   2116c:	mov	r0, r5
   21170:	mov	r1, r4
   21174:	mov	r2, r8
   21178:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2117c:	mov	r2, r0
   21180:	cmp	r2, r8
   21184:	beq	22a58 <main@@Base+0xf6b4>
   21188:	ldrb	r0, [r2]
   2118c:	cmp	r0, #44	; 0x2c
   21190:	bne	22a60 <main@@Base+0xf6bc>
   21194:	add	r1, r2, #1
   21198:	sub	r0, r8, r1
   2119c:	cmp	r0, #2
   211a0:	blt	211d0 <main@@Base+0xde2c>
   211a4:	ldrb	r0, [r1]
   211a8:	cmp	r0, #32
   211ac:	bls	211c0 <main@@Base+0xde1c>
   211b0:	mov	r2, r1
   211b4:	cmp	r2, r8
   211b8:	bne	211e8 <main@@Base+0xde44>
   211bc:	b	22ab0 <main@@Base+0xf70c>
   211c0:	bne	211d0 <main@@Base+0xde2c>
   211c4:	ldrb	r0, [r2, #2]!
   211c8:	cmp	r0, #32
   211cc:	bhi	211e0 <main@@Base+0xde3c>
   211d0:	mov	r0, r5
   211d4:	mov	r2, r8
   211d8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   211dc:	mov	r2, r0
   211e0:	cmp	r2, r8
   211e4:	beq	22ab0 <main@@Base+0xf70c>
   211e8:	ldrb	r0, [r2]
   211ec:	cmp	r0, #125	; 0x7d
   211f0:	bne	20a9c <main@@Base+0xd6f8>
   211f4:	b	22a68 <main@@Base+0xf6c4>
   211f8:	bne	21208 <main@@Base+0xde64>
   211fc:	ldrb	r0, [r2, #2]!
   21200:	cmp	r0, #32
   21204:	bhi	21218 <main@@Base+0xde74>
   21208:	mov	r0, r5
   2120c:	mov	r2, r8
   21210:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   21214:	mov	r2, r0
   21218:	cmp	r4, r2
   2121c:	beq	20fa8 <main@@Base+0xdc04>
   21220:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21224:	mov	r1, #3
   21228:	mov	r3, #0
   2122c:	str	r1, [sp]
   21230:	mov	r1, r2
   21234:	mov	r2, r8
   21238:	str	r0, [sp, #4]
   2123c:	ldr	r0, [pc, #4008]	; 221ec <main@@Base+0xee48>
   21240:	add	r0, pc, r0
   21244:	str	r0, [sp, #8]
   21248:	ldr	r0, [pc, #4000]	; 221f0 <main@@Base+0xee4c>
   2124c:	add	r0, pc, r0
   21250:	str	r0, [sp, #12]
   21254:	ldr	r0, [pc, #4092]	; 22258 <main@@Base+0xeeb4>
   21258:	add	r0, pc, r0
   2125c:	str	r0, [sp, #16]
   21260:	mov	r0, r5
   21264:	bl	32988 <flatcc_json_parser_union_type_vector@@Base>
   21268:	b	2112c <main@@Base+0xdd88>
   2126c:	bne	2127c <main@@Base+0xded8>
   21270:	ldrb	r0, [r1, #2]!
   21274:	cmp	r0, #32
   21278:	bhi	21290 <main@@Base+0xdeec>
   2127c:	mov	r1, r2
   21280:	mov	r0, r5
   21284:	mov	r2, r8
   21288:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2128c:	mov	r1, r0
   21290:	cmp	sl, r1
   21294:	beq	21378 <main@@Base+0xdfd4>
   21298:	mov	r0, r5
   2129c:	mov	r2, r8
   212a0:	sub	r3, fp, #32
   212a4:	bl	24998 <main@@Base+0x115f4>
   212a8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   212ac:	mov	r4, r0
   212b0:	cmp	r6, #0
   212b4:	beq	22b84 <main@@Base+0xf7e0>
   212b8:	ldr	r0, [r5]
   212bc:	mov	r1, #0
   212c0:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   212c4:	cmp	r0, #0
   212c8:	beq	22b84 <main@@Base+0xf7e0>
   212cc:	str	r6, [r0]
   212d0:	b	21130 <main@@Base+0xdd8c>
   212d4:	bne	212e4 <main@@Base+0xdf40>
   212d8:	ldrb	r0, [r4, #2]!
   212dc:	cmp	r0, #32
   212e0:	bhi	212f4 <main@@Base+0xdf50>
   212e4:	mov	r0, r5
   212e8:	mov	r2, r8
   212ec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   212f0:	mov	r4, r0
   212f4:	ldr	r9, [sp, #40]	; 0x28
   212f8:	cmp	sl, r4
   212fc:	beq	21378 <main@@Base+0xdfd4>
   21300:	mov	r0, #0
   21304:	mov	r1, #10
   21308:	str	r0, [fp, #-32]	; 0xffffffe0
   2130c:	ldr	r0, [r5]
   21310:	bl	2bd4c <flatcc_builder_start_table@@Base>
   21314:	cmp	r0, #0
   21318:	bne	22b6c <main@@Base+0xf7c8>
   2131c:	add	r0, sp, #48	; 0x30
   21320:	mov	r1, r4
   21324:	mov	r2, r8
   21328:	mov	r3, #5
   2132c:	str	r0, [sp]
   21330:	mov	r0, r5
   21334:	bl	31c7c <flatcc_json_parser_prepare_unions@@Base>
   21338:	cmp	r0, r8
   2133c:	beq	22b6c <main@@Base+0xf7c8>
   21340:	cmp	r4, r8
   21344:	beq	21388 <main@@Base+0xdfe4>
   21348:	ldrb	r0, [r4]
   2134c:	cmp	r0, #123	; 0x7b
   21350:	bne	21388 <main@@Base+0xdfe4>
   21354:	add	r1, r4, #1
   21358:	sub	r0, r8, r1
   2135c:	cmp	r0, #2
   21360:	blt	2140c <main@@Base+0xe068>
   21364:	ldrb	r0, [r1]
   21368:	cmp	r0, #32
   2136c:	bls	213fc <main@@Base+0xe058>
   21370:	mov	r4, r1
   21374:	b	2141c <main@@Base+0xe078>
   21378:	mov	r0, r5
   2137c:	mov	r1, sl
   21380:	b	20fb0 <main@@Base+0xdc0c>
   21384:	andeq	r6, r2, r8, lsr #28
   21388:	mov	r0, r5
   2138c:	mov	r1, r4
   21390:	mov	r2, r8
   21394:	mov	r3, #21
   21398:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2139c:	mov	r4, r0
   213a0:	ldr	r0, [sp, #28]
   213a4:	ldr	r0, [r0]
   213a8:	cmp	r0, #0
   213ac:	bne	22b6c <main@@Base+0xf7c8>
   213b0:	ldr	r3, [sp, #48]	; 0x30
   213b4:	mov	r0, r5
   213b8:	mov	r1, r4
   213bc:	mov	r2, r8
   213c0:	bl	31d0c <flatcc_json_parser_finalize_unions@@Base>
   213c4:	mov	r4, r0
   213c8:	ldr	r0, [r5]
   213cc:	bl	2c77c <flatcc_builder_end_table@@Base>
   213d0:	cmp	r0, #0
   213d4:	str	r0, [fp, #-32]	; 0xffffffe0
   213d8:	beq	22b6c <main@@Base+0xf7c8>
   213dc:	mov	r7, r0
   213e0:	ldr	r0, [r5]
   213e4:	mov	r1, #1
   213e8:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   213ec:	cmp	r0, #0
   213f0:	beq	22b84 <main@@Base+0xf7e0>
   213f4:	str	r7, [r0]
   213f8:	b	21130 <main@@Base+0xdd8c>
   213fc:	bne	2140c <main@@Base+0xe068>
   21400:	ldrb	r0, [r4, #2]!
   21404:	cmp	r0, #32
   21408:	bhi	2141c <main@@Base+0xe078>
   2140c:	mov	r0, r5
   21410:	mov	r2, r8
   21414:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   21418:	mov	r4, r0
   2141c:	cmp	r4, r8
   21420:	mov	r2, r8
   21424:	beq	21468 <main@@Base+0xe0c4>
   21428:	ldrb	r0, [r4]
   2142c:	cmp	r0, #125	; 0x7d
   21430:	bne	21464 <main@@Base+0xe0c0>
   21434:	add	r1, r4, #1
   21438:	sub	r0, r8, r1
   2143c:	cmp	r0, #2
   21440:	blt	22a48 <main@@Base+0xf6a4>
   21444:	ldrb	r0, [r1]
   21448:	cmp	r0, #32
   2144c:	bhi	229b8 <main@@Base+0xf614>
   21450:	bne	22a48 <main@@Base+0xf6a4>
   21454:	ldrb	r0, [r4, #2]!
   21458:	cmp	r0, #32
   2145c:	bhi	213a0 <main@@Base+0xdffc>
   21460:	b	22a48 <main@@Base+0xf6a4>
   21464:	mov	r2, r4
   21468:	cmp	r2, r8
   2146c:	mov	r9, r8
   21470:	beq	214c4 <main@@Base+0xe120>
   21474:	ldrb	r0, [r2]
   21478:	cmp	r0, #46	; 0x2e
   2147c:	beq	21498 <main@@Base+0xe0f4>
   21480:	cmp	r0, #34	; 0x22
   21484:	bne	214b4 <main@@Base+0xe110>
   21488:	ldr	r0, [sp, #32]
   2148c:	mov	r1, #0
   21490:	add	r9, r2, #1
   21494:	b	214c0 <main@@Base+0xe11c>
   21498:	ldr	r0, [sp, #44]	; 0x2c
   2149c:	mov	r1, r2
   214a0:	mov	r2, r8
   214a4:	mov	r3, #5
   214a8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   214ac:	mov	r9, r0
   214b0:	b	214c4 <main@@Base+0xe120>
   214b4:	ldr	r0, [sp, #32]
   214b8:	mov	r1, #1
   214bc:	mov	r9, r2
   214c0:	str	r1, [r0]
   214c4:	sub	ip, r8, r9
   214c8:	mov	r0, #8
   214cc:	cmp	ip, #8
   214d0:	movcc	r0, ip
   214d4:	and	r0, r0, #15
   214d8:	sub	r0, r0, #1
   214dc:	cmp	r0, #7
   214e0:	bhi	21f94 <main@@Base+0xebf0>
   214e4:	add	r2, pc, #36	; 0x24
   214e8:	mov	r1, #0
   214ec:	mov	lr, #0
   214f0:	mov	r8, #0
   214f4:	mov	r7, #0
   214f8:	mov	r3, #0
   214fc:	mov	r6, #0
   21500:	mov	r5, #0
   21504:	ldr	r4, [r2, r0, lsl #2]
   21508:	mov	r0, #0
   2150c:	add	pc, r2, r4
   21510:	andeq	r0, r0, r8, rrx
   21514:	andeq	r0, r0, r0, rrx
   21518:	andeq	r0, r0, r8, asr r0
   2151c:	andeq	r0, r0, r0, asr r0
   21520:	andeq	r0, r0, r4, asr #32
   21524:	andeq	r0, r0, r8, lsr r0
   21528:	andeq	r0, r0, r8, lsr #32
   2152c:	andeq	r0, r0, r4, lsr #32
   21530:	andeq	r6, r2, r8, lsl #25
   21534:	ldrb	lr, [r9, #7]
   21538:	ldrb	r0, [r9, #6]
   2153c:	mov	r8, r1
   21540:	orr	r0, lr, r0, lsl #8
   21544:	mov	r1, r0
   21548:	ldrb	r0, [r9, #5]
   2154c:	mov	r7, r8
   21550:	orr	r1, r1, r0, lsl #16
   21554:	ldrb	r0, [r9, #4]
   21558:	mov	r3, r7
   2155c:	orr	r1, r1, r0, lsl #24
   21560:	ldrb	r0, [r9, #3]
   21564:	orr	r6, r0, r3
   21568:	ldrb	r0, [r9, #2]
   2156c:	orr	r5, r6, r0, lsl #8
   21570:	ldrb	r0, [r9, #1]
   21574:	orr	r0, r5, r0, lsl #16
   21578:	ldrb	r2, [r9]
   2157c:	orr	r2, r0, r2, lsl #24
   21580:	movw	r0, #29797	; 0x7465
   21584:	movt	r0, #24931	; 0x6163
   21588:	subs	r0, r1, r0
   2158c:	movw	r0, #24946	; 0x6172
   21590:	movt	r0, #25448	; 0x6368
   21594:	sbcs	r0, r2, r0
   21598:	bcs	216f8 <main@@Base+0xe354>
   2159c:	movw	r0, #29817	; 0x7479
   215a0:	movw	r3, #28005	; 0x6d65
   215a4:	ldr	r8, [sp, #36]	; 0x24
   215a8:	movt	r0, #28511	; 0x6f5f
   215ac:	movt	r3, #25441	; 0x6361
   215b0:	eor	r0, r1, r0
   215b4:	eor	r3, r2, r3
   215b8:	orrs	r0, r0, r3
   215bc:	beq	21a0c <main@@Base+0xe668>
   215c0:	movw	r0, #28265	; 0x6e69
   215c4:	movw	r7, #29793	; 0x7461
   215c8:	movt	r0, #26479	; 0x676f
   215cc:	movt	r7, #24942	; 0x616e
   215d0:	eor	r0, r1, r0
   215d4:	eor	r2, r2, r7
   215d8:	orrs	r0, r0, r2
   215dc:	bne	21a98 <main@@Base+0xe6f4>
   215e0:	add	sl, r9, #8
   215e4:	mov	r1, #8
   215e8:	sub	ip, r8, sl
   215ec:	cmp	ip, #8
   215f0:	movcc	r1, ip
   215f4:	and	r1, r1, #15
   215f8:	sub	r1, r1, #1
   215fc:	cmp	r1, #7
   21600:	bhi	22844 <main@@Base+0xf4a0>
   21604:	add	r0, pc, #32
   21608:	mov	r4, #0
   2160c:	mov	lr, #0
   21610:	mov	r3, #0
   21614:	mov	r6, #0
   21618:	mov	r5, #0
   2161c:	mov	r7, #0
   21620:	ldr	r2, [r0, r1, lsl #2]
   21624:	mov	r1, #0
   21628:	add	pc, r0, r2
   2162c:	andeq	r0, r0, ip, asr r0
   21630:	andeq	r0, r0, r4, asr r0
   21634:	andeq	r0, r0, ip, asr #32
   21638:	andeq	r0, r0, r4, asr #32
   2163c:	andeq	r0, r0, r8, lsr r0
   21640:	andeq	r0, r0, r8, lsr #32
   21644:	andeq	r0, r0, r0, lsr #32
   21648:	andeq	r0, r0, r0, lsr #32
   2164c:	ldrb	r0, [r9, #14]
   21650:	lsl	lr, r0, #8
   21654:	ldrb	r0, [r9, #13]
   21658:	mov	r1, r4
   2165c:	orr	r0, lr, r0, lsl #16
   21660:	mov	r4, r0
   21664:	ldrb	r0, [r9, #12]
   21668:	mov	r3, r1
   2166c:	orr	r4, r4, r0, lsl #24
   21670:	ldrb	r0, [r9, #11]
   21674:	orr	r6, r0, r3
   21678:	ldrb	r0, [r9, #10]
   2167c:	orr	r5, r6, r0, lsl #8
   21680:	ldrb	r0, [r9, #9]
   21684:	orr	r7, r5, r0, lsl #16
   21688:	ldrb	r0, [sl]
   2168c:	movw	r3, #25856	; 0x6500
   21690:	bic	r2, r4, #255	; 0xff
   21694:	movt	r3, #31088	; 0x7970
   21698:	eor	r2, r2, r3
   2169c:	orr	r1, r7, r0, lsl #24
   216a0:	ldr	r0, [sp, #24]
   216a4:	eor	r0, r1, r0
   216a8:	orrs	r0, r2, r0
   216ac:	bne	21bf8 <main@@Base+0xe854>
   216b0:	ldr	r8, [sp, #36]	; 0x24
   216b4:	cmp	ip, #8
   216b8:	blt	22844 <main@@Base+0xf4a0>
   216bc:	ldr	r2, [sp, #32]
   216c0:	mov	r1, r9
   216c4:	ldrb	r0, [r1, #15]!
   216c8:	ldr	r2, [r2]
   216cc:	cmp	r2, #0
   216d0:	beq	21dbc <main@@Base+0xea18>
   216d4:	cmp	r0, #33	; 0x21
   216d8:	bcc	216e4 <main@@Base+0xe340>
   216dc:	cmp	r0, #58	; 0x3a
   216e0:	bne	22844 <main@@Base+0xf4a0>
   216e4:	ldr	r0, [sp, #32]
   216e8:	mov	r2, #0
   216ec:	str	r2, [r0]
   216f0:	b	21dc8 <main@@Base+0xea24>
   216f4:	andeq	r6, r2, r4, lsr fp
   216f8:	movw	r0, #26720	; 0x6860
   216fc:	ldr	r8, [sp, #36]	; 0x24
   21700:	movt	r0, #24419	; 0x5f63
   21704:	subs	r0, r0, r1
   21708:	movw	r0, #26990	; 0x696e
   2170c:	movt	r0, #28001	; 0x6d61
   21710:	sbcs	r0, r0, r2
   21714:	bcc	21850 <main@@Base+0xe4ac>
   21718:	movw	r0, #29797	; 0x7465
   2171c:	movt	r0, #24931	; 0x6163
   21720:	eor	r0, r1, r0
   21724:	movw	r1, #24946	; 0x6172
   21728:	movt	r1, #25448	; 0x6368
   2172c:	eor	r1, r2, r1
   21730:	orrs	r0, r0, r1
   21734:	bne	21f94 <main@@Base+0xebf0>
   21738:	add	sl, r9, #8
   2173c:	mov	r1, #8
   21740:	sub	ip, r8, sl
   21744:	cmp	ip, #8
   21748:	movcc	r1, ip
   2174c:	and	r1, r1, #15
   21750:	sub	r2, r1, #1
   21754:	cmp	r2, #7
   21758:	bhi	22844 <main@@Base+0xf4a0>
   2175c:	add	r0, pc, #32
   21760:	mov	r1, #0
   21764:	mov	lr, #0
   21768:	mov	r4, #0
   2176c:	mov	r3, #0
   21770:	mov	r6, #0
   21774:	mov	r5, #0
   21778:	mov	r7, #0
   2177c:	ldr	r2, [r0, r2, lsl #2]
   21780:	add	pc, r0, r2
   21784:	andeq	r0, r0, ip, asr r0
   21788:	andeq	r0, r0, r4, asr r0
   2178c:	andeq	r0, r0, ip, asr #32
   21790:	andeq	r0, r0, r4, asr #32
   21794:	andeq	r0, r0, r8, lsr r0
   21798:	andeq	r0, r0, r8, lsr #32
   2179c:	andeq	r0, r0, r0, lsr #32
   217a0:	andeq	r0, r0, r0, lsr #32
   217a4:	ldrb	r0, [r9, #14]
   217a8:	lsl	lr, r0, #8
   217ac:	ldrb	r0, [r9, #13]
   217b0:	mov	r4, r1
   217b4:	orr	r0, lr, r0, lsl #16
   217b8:	mov	r1, r0
   217bc:	ldrb	r0, [r9, #12]
   217c0:	mov	r3, r4
   217c4:	orr	r1, r1, r0, lsl #24
   217c8:	ldrb	r0, [r9, #11]
   217cc:	orr	r6, r0, r3
   217d0:	ldrb	r0, [r9, #10]
   217d4:	orr	r5, r6, r0, lsl #8
   217d8:	ldrb	r0, [r9, #9]
   217dc:	orr	r7, r5, r0, lsl #16
   217e0:	bic	r0, r1, #255	; 0xff
   217e4:	movw	r1, #25856	; 0x6500
   217e8:	movw	r2, #24436	; 0x5f74
   217ec:	movt	r1, #31088	; 0x7970
   217f0:	movt	r2, #29299	; 0x7273
   217f4:	eor	r0, r0, r1
   217f8:	ldrb	r1, [sl]
   217fc:	orr	r1, r7, r1, lsl #24
   21800:	eor	r2, r1, r2
   21804:	orrs	r0, r0, r2
   21808:	bne	21c50 <main@@Base+0xe8ac>
   2180c:	ldr	r8, [sp, #36]	; 0x24
   21810:	cmp	ip, #8
   21814:	blt	22844 <main@@Base+0xf4a0>
   21818:	ldr	r2, [sp, #32]
   2181c:	mov	r1, r9
   21820:	ldrb	r0, [r1, #15]!
   21824:	ldr	r2, [r2]
   21828:	cmp	r2, #0
   2182c:	beq	21e48 <main@@Base+0xeaa4>
   21830:	cmp	r0, #33	; 0x21
   21834:	bcc	21840 <main@@Base+0xe49c>
   21838:	cmp	r0, #58	; 0x3a
   2183c:	bne	22844 <main@@Base+0xf4a0>
   21840:	ldr	r0, [sp, #32]
   21844:	mov	r2, #0
   21848:	str	r2, [r0]
   2184c:	b	21e54 <main@@Base+0xeab0>
   21850:	movw	r0, #26979	; 0x6963
   21854:	movw	r3, #25701	; 0x6465
   21858:	movt	r0, #24427	; 0x5f6b
   2185c:	movt	r3, #29545	; 0x7369
   21860:	eor	r0, r1, r0
   21864:	eor	r3, r2, r3
   21868:	orrs	r0, r0, r3
   2186c:	beq	21af0 <main@@Base+0xe74c>
   21870:	movw	r0, #26721	; 0x6861
   21874:	movt	r0, #24419	; 0x5f63
   21878:	eor	r0, r1, r0
   2187c:	movw	r1, #26990	; 0x696e
   21880:	movt	r1, #28001	; 0x6d61
   21884:	eor	r1, r2, r1
   21888:	orrs	r0, r0, r1
   2188c:	bne	21f94 <main@@Base+0xebf0>
   21890:	add	r7, r9, #8
   21894:	mov	r1, #8
   21898:	sub	lr, r8, r7
   2189c:	cmp	lr, #8
   218a0:	movcc	r1, lr
   218a4:	and	r1, r1, #15
   218a8:	sub	r2, r1, #1
   218ac:	cmp	r2, #7
   218b0:	bhi	228c0 <main@@Base+0xf51c>
   218b4:	str	r7, [sp, #20]
   218b8:	add	r0, pc, #36	; 0x24
   218bc:	mov	r1, #0
   218c0:	mov	ip, #0
   218c4:	mov	sl, #0
   218c8:	mov	r6, #0
   218cc:	mov	r3, #0
   218d0:	mov	r7, #0
   218d4:	mov	r5, #0
   218d8:	ldr	r4, [r0, r2, lsl #2]
   218dc:	mov	r2, #0
   218e0:	add	pc, r0, r4
   218e4:	andeq	r0, r0, r4, rrx
   218e8:	andeq	r0, r0, ip, asr r0
   218ec:	andeq	r0, r0, r4, asr r0
   218f0:	andeq	r0, r0, ip, asr #32
   218f4:	andeq	r0, r0, r0, asr #32
   218f8:	andeq	r0, r0, r4, lsr r0
   218fc:	andeq	r0, r0, r4, lsr #32
   21900:	andeq	r0, r0, r0, lsr #32
   21904:	ldrb	ip, [r9, #15]
   21908:	ldrb	r0, [r9, #14]
   2190c:	mov	sl, r1
   21910:	orr	r0, ip, r0, lsl #8
   21914:	mov	r1, r0
   21918:	ldrb	r0, [r9, #13]
   2191c:	mov	r6, sl
   21920:	orr	r1, r1, r0, lsl #16
   21924:	ldrb	r0, [r9, #12]
   21928:	mov	r3, r6
   2192c:	orr	r1, r1, r0, lsl #24
   21930:	ldrb	r0, [r9, #11]
   21934:	orr	r7, r0, r3
   21938:	ldrb	r0, [r9, #10]
   2193c:	orr	r5, r7, r0, lsl #8
   21940:	ldrb	r0, [r9, #9]
   21944:	orr	r2, r5, r0, lsl #16
   21948:	ldr	r7, [sp, #20]
   2194c:	movw	r0, #24436	; 0x5f74
   21950:	movt	r0, #25970	; 0x6572
   21954:	eor	r0, r1, r0
   21958:	ldrb	r3, [r7]
   2195c:	orr	r2, r2, r3, lsl #24
   21960:	movw	r3, #25460	; 0x6374
   21964:	movt	r3, #29281	; 0x7261
   21968:	eor	r3, r2, r3
   2196c:	orrs	r0, r0, r3
   21970:	bne	21ca8 <main@@Base+0xe904>
   21974:	ldr	r8, [sp, #36]	; 0x24
   21978:	add	r7, r9, #16
   2197c:	mov	r1, #8
   21980:	sub	r0, r8, r7
   21984:	cmp	r0, #8
   21988:	movcc	r1, r0
   2198c:	and	r2, r1, #15
   21990:	sub	r1, r2, #3
   21994:	cmp	r1, #6
   21998:	bcs	21e2c <main@@Base+0xea88>
   2199c:	ldrb	r1, [r9, #18]
   219a0:	lsl	r1, r1, #8
   219a4:	ldrb	r2, [r9, #17]
   219a8:	orr	r1, r1, r2, lsl #16
   219ac:	ldrb	r2, [r7]
   219b0:	bic	r1, r1, #255	; 0xff
   219b4:	orr	r1, r1, r2, lsl #24
   219b8:	movw	r2, #25856	; 0x6500
   219bc:	movt	r2, #31088	; 0x7970
   219c0:	teq	r1, r2
   219c4:	bne	228c0 <main@@Base+0xf51c>
   219c8:	cmp	r0, #4
   219cc:	blt	228c0 <main@@Base+0xf51c>
   219d0:	ldr	r2, [sp, #32]
   219d4:	mov	r1, r9
   219d8:	ldrb	r0, [r1, #19]!
   219dc:	ldr	r2, [r2]
   219e0:	cmp	r2, #0
   219e4:	beq	221b8 <main@@Base+0xee14>
   219e8:	ldr	r8, [sp, #36]	; 0x24
   219ec:	cmp	r0, #33	; 0x21
   219f0:	bcc	219fc <main@@Base+0xe658>
   219f4:	cmp	r0, #58	; 0x3a
   219f8:	bne	228c0 <main@@Base+0xf51c>
   219fc:	ldr	r0, [sp, #32]
   21a00:	mov	r2, #0
   21a04:	str	r2, [r0]
   21a08:	b	221c8 <main@@Base+0xee24>
   21a0c:	add	r7, r9, #8
   21a10:	mov	r1, #8
   21a14:	sub	r0, r8, r7
   21a18:	cmp	r0, #8
   21a1c:	movcc	r1, r0
   21a20:	and	r2, r1, #15
   21a24:	sub	r1, r2, #2
   21a28:	cmp	r1, #7
   21a2c:	bcs	21d18 <main@@Base+0xe974>
   21a30:	ldrb	r1, [r9, #9]
   21a34:	lsl	r2, r1, #16
   21a38:	mov	r1, #0
   21a3c:	ldrb	r3, [r7]
   21a40:	orr	r2, r2, r3, lsl #24
   21a44:	movw	r3, #0
   21a48:	movt	r3, #28773	; 0x7065
   21a4c:	eor	r2, r2, r3
   21a50:	orrs	r1, r1, r2
   21a54:	bne	228c0 <main@@Base+0xf51c>
   21a58:	cmp	r0, #3
   21a5c:	blt	228c0 <main@@Base+0xf51c>
   21a60:	ldr	r2, [sp, #32]
   21a64:	mov	r1, r9
   21a68:	ldrb	r0, [r1, #10]!
   21a6c:	ldr	r2, [r2]
   21a70:	cmp	r2, #0
   21a74:	beq	21df4 <main@@Base+0xea50>
   21a78:	cmp	r0, #33	; 0x21
   21a7c:	bcc	21a88 <main@@Base+0xe6e4>
   21a80:	cmp	r0, #58	; 0x3a
   21a84:	bne	228c0 <main@@Base+0xf51c>
   21a88:	ldr	r0, [sp, #32]
   21a8c:	mov	r2, #0
   21a90:	str	r2, [r0]
   21a94:	b	21e00 <main@@Base+0xea5c>
   21a98:	and	r0, r1, #-16777216	; 0xff000000
   21a9c:	eor	r0, r0, #1862270976	; 0x6f000000
   21aa0:	orrs	r0, r0, r3
   21aa4:	bne	21f94 <main@@Base+0xebf0>
   21aa8:	cmp	ip, #6
   21aac:	mov	r1, r9
   21ab0:	blt	22394 <main@@Base+0xeff0>
   21ab4:	ldr	r1, [sp, #32]
   21ab8:	mov	r2, r9
   21abc:	ldrb	r0, [r2, #5]!
   21ac0:	ldr	r1, [r1]
   21ac4:	cmp	r1, #0
   21ac8:	beq	21d80 <main@@Base+0xe9dc>
   21acc:	cmp	r0, #33	; 0x21
   21ad0:	bcc	21ae0 <main@@Base+0xe73c>
   21ad4:	cmp	r0, #58	; 0x3a
   21ad8:	mov	r1, r9
   21adc:	bne	22394 <main@@Base+0xeff0>
   21ae0:	ldr	r0, [sp, #32]
   21ae4:	mov	r1, #0
   21ae8:	str	r1, [r0]
   21aec:	b	21d90 <main@@Base+0xe9ec>
   21af0:	add	sl, r9, #8
   21af4:	mov	r1, #8
   21af8:	sub	r0, r8, sl
   21afc:	cmp	r0, #8
   21b00:	movcc	r1, r0
   21b04:	and	r1, r1, #15
   21b08:	sub	r2, r1, #1
   21b0c:	cmp	r2, #7
   21b10:	bhi	22844 <main@@Base+0xf4a0>
   21b14:	add	r7, pc, #28
   21b18:	mov	ip, #0
   21b1c:	mov	r3, #0
   21b20:	mov	r6, #0
   21b24:	mov	r5, #0
   21b28:	mov	r4, #0
   21b2c:	ldr	r1, [r7, r2, lsl #2]
   21b30:	mov	r2, #0
   21b34:	add	pc, r7, r1
   21b38:	andeq	r0, r0, r0, asr r0
   21b3c:	andeq	r0, r0, r8, asr #32
   21b40:	andeq	r0, r0, r0, asr #32
   21b44:	andeq	r0, r0, r8, lsr r0
   21b48:	andeq	r0, r0, r8, lsr #32
   21b4c:	andeq	r0, r0, r0, lsr #32
   21b50:	andeq	r0, r0, r0, lsr #32
   21b54:	andeq	r0, r0, r0, lsr #32
   21b58:	ldrb	r1, [r9, #13]
   21b5c:	lsl	r2, r1, #16
   21b60:	ldrb	r1, [r9, #12]
   21b64:	mov	r3, ip
   21b68:	orr	r1, r2, r1, lsl #24
   21b6c:	mov	ip, r1
   21b70:	ldrb	r1, [r9, #11]
   21b74:	orr	r6, r1, r3
   21b78:	ldrb	r1, [r9, #10]
   21b7c:	orr	r5, r6, r1, lsl #8
   21b80:	ldrb	r1, [r9, #9]
   21b84:	orr	r4, r5, r1, lsl #16
   21b88:	ldrb	r1, [sl]
   21b8c:	movw	r7, #28773	; 0x7065
   21b90:	lsr	r3, ip, #16
   21b94:	movt	r7, #29817	; 0x7479
   21b98:	orr	r2, r4, r1, lsl #24
   21b9c:	movw	r1, #27487	; 0x6b5f
   21ba0:	orr	r3, r3, r2, lsl #16
   21ba4:	eor	r1, r1, r2, lsr #16
   21ba8:	eor	r3, r3, r7
   21bac:	orrs	r1, r3, r1
   21bb0:	bne	21d2c <main@@Base+0xe988>
   21bb4:	ldr	r8, [sp, #36]	; 0x24
   21bb8:	cmp	r0, #7
   21bbc:	blt	22844 <main@@Base+0xf4a0>
   21bc0:	ldr	r2, [sp, #32]
   21bc4:	mov	r1, r9
   21bc8:	ldrb	r0, [r1, #14]!
   21bcc:	ldr	r2, [r2]
   21bd0:	cmp	r2, #0
   21bd4:	beq	21e80 <main@@Base+0xeadc>
   21bd8:	cmp	r0, #33	; 0x21
   21bdc:	bcc	21be8 <main@@Base+0xe844>
   21be0:	cmp	r0, #58	; 0x3a
   21be4:	bne	22844 <main@@Base+0xf4a0>
   21be8:	ldr	r0, [sp, #32]
   21bec:	mov	r2, #0
   21bf0:	str	r2, [r0]
   21bf4:	b	21e8c <main@@Base+0xeae8>
   21bf8:	ldr	r8, [sp, #36]	; 0x24
   21bfc:	movw	r0, #0
   21c00:	bfc	r1, #0, #16
   21c04:	movt	r0, #29556	; 0x7374
   21c08:	teq	r1, r0
   21c0c:	bne	22844 <main@@Base+0xf4a0>
   21c10:	cmp	ip, #3
   21c14:	blt	22844 <main@@Base+0xf4a0>
   21c18:	ldr	r2, [sp, #32]
   21c1c:	mov	r1, r9
   21c20:	ldrb	r0, [r1, #10]!
   21c24:	ldr	r2, [r2]
   21c28:	cmp	r2, #0
   21c2c:	beq	21ebc <main@@Base+0xeb18>
   21c30:	cmp	r0, #33	; 0x21
   21c34:	bcc	21c40 <main@@Base+0xe89c>
   21c38:	cmp	r0, #58	; 0x3a
   21c3c:	bne	22844 <main@@Base+0xf4a0>
   21c40:	ldr	r0, [sp, #32]
   21c44:	mov	r2, #0
   21c48:	str	r2, [r0]
   21c4c:	b	21ec8 <main@@Base+0xeb24>
   21c50:	ldr	r8, [sp, #36]	; 0x24
   21c54:	movw	r0, #0
   21c58:	bfc	r1, #0, #16
   21c5c:	movt	r0, #29299	; 0x7273
   21c60:	teq	r1, r0
   21c64:	bne	22844 <main@@Base+0xf4a0>
   21c68:	cmp	ip, #3
   21c6c:	blt	22844 <main@@Base+0xf4a0>
   21c70:	ldr	r2, [sp, #32]
   21c74:	mov	r1, r9
   21c78:	ldrb	r0, [r1, #10]!
   21c7c:	ldr	r2, [r2]
   21c80:	cmp	r2, #0
   21c84:	beq	21ef8 <main@@Base+0xeb54>
   21c88:	cmp	r0, #33	; 0x21
   21c8c:	bcc	21c98 <main@@Base+0xe8f4>
   21c90:	cmp	r0, #58	; 0x3a
   21c94:	bne	22844 <main@@Base+0xf4a0>
   21c98:	ldr	r0, [sp, #32]
   21c9c:	mov	r2, #0
   21ca0:	str	r2, [r0]
   21ca4:	b	21f04 <main@@Base+0xeb60>
   21ca8:	movw	r0, #29281	; 0x7261
   21cac:	lsr	r1, r1, #16
   21cb0:	ldr	r8, [sp, #36]	; 0x24
   21cb4:	eor	r0, r0, r2, lsr #16
   21cb8:	orr	r1, r1, r2, lsl #16
   21cbc:	movw	r2, #25970	; 0x6572
   21cc0:	movt	r2, #25460	; 0x6374
   21cc4:	eor	r1, r1, r2
   21cc8:	orrs	r0, r1, r0
   21ccc:	bne	228c0 <main@@Base+0xf51c>
   21cd0:	cmp	lr, #7
   21cd4:	blt	228c0 <main@@Base+0xf51c>
   21cd8:	ldr	r2, [sp, #32]
   21cdc:	mov	r1, r9
   21ce0:	ldrb	r0, [r1, #14]!
   21ce4:	ldr	r2, [r2]
   21ce8:	cmp	r2, #0
   21cec:	beq	220c4 <main@@Base+0xed20>
   21cf0:	ldr	r8, [sp, #36]	; 0x24
   21cf4:	ldr	r7, [sp, #20]
   21cf8:	cmp	r0, #33	; 0x21
   21cfc:	bcc	21d08 <main@@Base+0xe964>
   21d00:	cmp	r0, #58	; 0x3a
   21d04:	bne	228c0 <main@@Base+0xf51c>
   21d08:	ldr	r0, [sp, #32]
   21d0c:	mov	r2, #0
   21d10:	str	r2, [r0]
   21d14:	b	220d8 <main@@Base+0xed34>
   21d18:	cmp	r2, #1
   21d1c:	mov	r1, #0
   21d20:	mov	r2, #0
   21d24:	beq	21a3c <main@@Base+0xe698>
   21d28:	b	228c0 <main@@Base+0xf51c>
   21d2c:	ldr	r8, [sp, #36]	; 0x24
   21d30:	and	r1, r2, #-16777216	; 0xff000000
   21d34:	teq	r1, #1795162112	; 0x6b000000
   21d38:	bne	22844 <main@@Base+0xf4a0>
   21d3c:	cmp	r0, #2
   21d40:	blt	22844 <main@@Base+0xf4a0>
   21d44:	ldr	r2, [sp, #32]
   21d48:	mov	r1, r9
   21d4c:	ldrb	r0, [r1, #9]!
   21d50:	ldr	r2, [r2]
   21d54:	cmp	r2, #0
   21d58:	beq	22100 <main@@Base+0xed5c>
   21d5c:	ldr	r8, [sp, #36]	; 0x24
   21d60:	cmp	r0, #33	; 0x21
   21d64:	bcc	21d70 <main@@Base+0xe9cc>
   21d68:	cmp	r0, #58	; 0x3a
   21d6c:	bne	22844 <main@@Base+0xf4a0>
   21d70:	ldr	r0, [sp, #32]
   21d74:	mov	r2, #0
   21d78:	str	r2, [r0]
   21d7c:	b	22110 <main@@Base+0xed6c>
   21d80:	cmp	r0, #34	; 0x22
   21d84:	mov	r1, r9
   21d88:	bne	22394 <main@@Base+0xeff0>
   21d8c:	add	r2, r9, #6
   21d90:	sub	r0, r8, r2
   21d94:	cmp	r0, #2
   21d98:	blt	21f40 <main@@Base+0xeb9c>
   21d9c:	ldrb	r0, [r2]
   21da0:	cmp	r0, #32
   21da4:	bls	21f28 <main@@Base+0xeb84>
   21da8:	ldr	r8, [sp, #36]	; 0x24
   21dac:	mov	r1, r2
   21db0:	cmp	r1, r8
   21db4:	bne	21f5c <main@@Base+0xebb8>
   21db8:	b	21fa0 <main@@Base+0xebfc>
   21dbc:	cmp	r0, #34	; 0x22
   21dc0:	bne	22844 <main@@Base+0xf4a0>
   21dc4:	add	r1, r9, #16
   21dc8:	sub	r0, r8, r1
   21dcc:	cmp	r0, #2
   21dd0:	blt	21fcc <main@@Base+0xec28>
   21dd4:	ldrb	r0, [r1]
   21dd8:	cmp	r0, #32
   21ddc:	bls	21fb4 <main@@Base+0xec10>
   21de0:	ldr	r8, [sp, #36]	; 0x24
   21de4:	mov	r2, r1
   21de8:	cmp	r2, r8
   21dec:	bne	21fe4 <main@@Base+0xec40>
   21df0:	b	22020 <main@@Base+0xec7c>
   21df4:	cmp	r0, #34	; 0x22
   21df8:	bne	228c0 <main@@Base+0xf51c>
   21dfc:	add	r1, r9, #11
   21e00:	sub	r0, r8, r1
   21e04:	cmp	r0, #2
   21e08:	blt	22050 <main@@Base+0xecac>
   21e0c:	ldrb	r0, [r1]
   21e10:	cmp	r0, #32
   21e14:	bls	22038 <main@@Base+0xec94>
   21e18:	ldr	r8, [sp, #36]	; 0x24
   21e1c:	mov	r2, r1
   21e20:	cmp	r2, r8
   21e24:	bne	22068 <main@@Base+0xecc4>
   21e28:	b	220a4 <main@@Base+0xed00>
   21e2c:	mov	r1, #0
   21e30:	cmp	r2, #1
   21e34:	beq	220bc <main@@Base+0xed18>
   21e38:	ldr	r8, [sp, #36]	; 0x24
   21e3c:	cmp	r2, #2
   21e40:	beq	219a4 <main@@Base+0xe600>
   21e44:	b	228c0 <main@@Base+0xf51c>
   21e48:	cmp	r0, #34	; 0x22
   21e4c:	bne	22844 <main@@Base+0xf4a0>
   21e50:	add	r1, r9, #16
   21e54:	sub	r0, r8, r1
   21e58:	cmp	r0, #2
   21e5c:	blt	2214c <main@@Base+0xeda8>
   21e60:	ldrb	r0, [r1]
   21e64:	cmp	r0, #32
   21e68:	bls	22134 <main@@Base+0xed90>
   21e6c:	ldr	r8, [sp, #36]	; 0x24
   21e70:	mov	r2, r1
   21e74:	cmp	r2, r8
   21e78:	bne	22164 <main@@Base+0xedc0>
   21e7c:	b	221a0 <main@@Base+0xedfc>
   21e80:	cmp	r0, #34	; 0x22
   21e84:	bne	22844 <main@@Base+0xf4a0>
   21e88:	add	r1, r9, #15
   21e8c:	ldr	r4, [sp, #36]	; 0x24
   21e90:	sub	r0, r4, r1
   21e94:	cmp	r0, #2
   21e98:	blt	2220c <main@@Base+0xee68>
   21e9c:	ldrb	r0, [r1]
   21ea0:	cmp	r0, #32
   21ea4:	bls	221f4 <main@@Base+0xee50>
   21ea8:	ldr	r4, [sp, #36]	; 0x24
   21eac:	mov	r2, r1
   21eb0:	cmp	r2, r4
   21eb4:	bne	22224 <main@@Base+0xee80>
   21eb8:	b	2225c <main@@Base+0xeeb8>
   21ebc:	cmp	r0, #34	; 0x22
   21ec0:	bne	22844 <main@@Base+0xf4a0>
   21ec4:	add	r1, r9, #11
   21ec8:	ldr	r4, [sp, #36]	; 0x24
   21ecc:	sub	r0, r4, r1
   21ed0:	cmp	r0, #2
   21ed4:	blt	2228c <main@@Base+0xeee8>
   21ed8:	ldrb	r0, [r1]
   21edc:	cmp	r0, #32
   21ee0:	bls	22274 <main@@Base+0xeed0>
   21ee4:	ldr	r4, [sp, #36]	; 0x24
   21ee8:	mov	r2, r1
   21eec:	cmp	r2, r4
   21ef0:	bne	222a4 <main@@Base+0xef00>
   21ef4:	b	222d8 <main@@Base+0xef34>
   21ef8:	cmp	r0, #34	; 0x22
   21efc:	bne	22844 <main@@Base+0xf4a0>
   21f00:	add	r1, r9, #11
   21f04:	ldr	r0, [sp, #36]	; 0x24
   21f08:	sub	r0, r0, r1
   21f0c:	cmp	r0, #2
   21f10:	blt	22304 <main@@Base+0xef60>
   21f14:	ldrb	r0, [r1]
   21f18:	cmp	r0, #32
   21f1c:	bls	222f0 <main@@Base+0xef4c>
   21f20:	mov	r2, r1
   21f24:	b	22314 <main@@Base+0xef70>
   21f28:	ldr	r8, [sp, #36]	; 0x24
   21f2c:	bne	21f40 <main@@Base+0xeb9c>
   21f30:	mov	r1, r2
   21f34:	ldrb	r0, [r1, #1]!
   21f38:	cmp	r0, #32
   21f3c:	bhi	21f54 <main@@Base+0xebb0>
   21f40:	ldr	r0, [sp, #44]	; 0x2c
   21f44:	mov	r1, r2
   21f48:	mov	r2, r8
   21f4c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   21f50:	mov	r1, r0
   21f54:	cmp	r1, r8
   21f58:	beq	21fa0 <main@@Base+0xebfc>
   21f5c:	ldrb	r0, [r1]
   21f60:	cmp	r0, #58	; 0x3a
   21f64:	bne	21fa0 <main@@Base+0xebfc>
   21f68:	add	r2, r1, #1
   21f6c:	sub	r0, r8, r2
   21f70:	cmp	r0, #2
   21f74:	blt	22380 <main@@Base+0xefdc>
   21f78:	ldrb	r0, [r2]
   21f7c:	cmp	r0, #32
   21f80:	bls	2236c <main@@Base+0xefc8>
   21f84:	ldr	r8, [sp, #36]	; 0x24
   21f88:	mov	r1, r2
   21f8c:	cmp	r9, r1
   21f90:	bne	2239c <main@@Base+0xeff8>
   21f94:	ldr	r5, [sp, #44]	; 0x2c
   21f98:	mov	r1, r9
   21f9c:	b	228c8 <main@@Base+0xf524>
   21fa0:	ldr	r0, [sp, #44]	; 0x2c
   21fa4:	mov	r2, r8
   21fa8:	mov	r3, #4
   21fac:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   21fb0:	b	22390 <main@@Base+0xefec>
   21fb4:	ldr	r8, [sp, #36]	; 0x24
   21fb8:	bne	21fcc <main@@Base+0xec28>
   21fbc:	mov	r2, r1
   21fc0:	ldrb	r0, [r2, #1]!
   21fc4:	cmp	r0, #32
   21fc8:	bhi	21fdc <main@@Base+0xec38>
   21fcc:	ldr	r0, [sp, #44]	; 0x2c
   21fd0:	mov	r2, r8
   21fd4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   21fd8:	mov	r2, r0
   21fdc:	cmp	r2, r8
   21fe0:	beq	22020 <main@@Base+0xec7c>
   21fe4:	ldrb	r0, [r2]
   21fe8:	cmp	r0, #58	; 0x3a
   21fec:	bne	22020 <main@@Base+0xec7c>
   21ff0:	add	r1, r2, #1
   21ff4:	sub	r0, r8, r1
   21ff8:	cmp	r0, #2
   21ffc:	blt	223e4 <main@@Base+0xf040>
   22000:	ldrb	r0, [r1]
   22004:	cmp	r0, #32
   22008:	bls	223d0 <main@@Base+0xf02c>
   2200c:	ldr	r8, [sp, #36]	; 0x24
   22010:	mov	r2, r1
   22014:	cmp	sl, r2
   22018:	bne	223fc <main@@Base+0xf058>
   2201c:	b	22844 <main@@Base+0xf4a0>
   22020:	ldr	r0, [sp, #44]	; 0x2c
   22024:	mov	r1, r2
   22028:	mov	r2, r8
   2202c:	mov	r3, #4
   22030:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22034:	b	223f0 <main@@Base+0xf04c>
   22038:	ldr	r8, [sp, #36]	; 0x24
   2203c:	bne	22050 <main@@Base+0xecac>
   22040:	mov	r2, r1
   22044:	ldrb	r0, [r2, #1]!
   22048:	cmp	r0, #32
   2204c:	bhi	22060 <main@@Base+0xecbc>
   22050:	ldr	r0, [sp, #44]	; 0x2c
   22054:	mov	r2, r8
   22058:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2205c:	mov	r2, r0
   22060:	cmp	r2, r8
   22064:	beq	220a4 <main@@Base+0xed00>
   22068:	ldrb	r0, [r2]
   2206c:	cmp	r0, #58	; 0x3a
   22070:	bne	220a4 <main@@Base+0xed00>
   22074:	add	r1, r2, #1
   22078:	sub	r0, r8, r1
   2207c:	cmp	r0, #2
   22080:	blt	22444 <main@@Base+0xf0a0>
   22084:	ldrb	r0, [r1]
   22088:	cmp	r0, #32
   2208c:	bls	22430 <main@@Base+0xf08c>
   22090:	ldr	r8, [sp, #36]	; 0x24
   22094:	mov	r2, r1
   22098:	cmp	r7, r2
   2209c:	bne	2245c <main@@Base+0xf0b8>
   220a0:	b	228c0 <main@@Base+0xf51c>
   220a4:	ldr	r0, [sp, #44]	; 0x2c
   220a8:	mov	r1, r2
   220ac:	mov	r2, r8
   220b0:	mov	r3, #4
   220b4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   220b8:	b	22450 <main@@Base+0xf0ac>
   220bc:	ldr	r8, [sp, #36]	; 0x24
   220c0:	b	219ac <main@@Base+0xe608>
   220c4:	ldr	r8, [sp, #36]	; 0x24
   220c8:	ldr	r7, [sp, #20]
   220cc:	cmp	r0, #34	; 0x22
   220d0:	bne	228c0 <main@@Base+0xf51c>
   220d4:	add	r1, r9, #15
   220d8:	ldr	r0, [sp, #36]	; 0x24
   220dc:	sub	r0, r0, r1
   220e0:	cmp	r0, #2
   220e4:	blt	224a4 <main@@Base+0xf100>
   220e8:	ldrb	r0, [r1]
   220ec:	cmp	r0, #32
   220f0:	bls	22490 <main@@Base+0xf0ec>
   220f4:	mov	r2, r1
   220f8:	b	224b4 <main@@Base+0xf110>
   220fc:			; <UNDEFINED> instruction: 0xffffe874
   22100:	ldr	r8, [sp, #36]	; 0x24
   22104:	cmp	r0, #34	; 0x22
   22108:	bne	22844 <main@@Base+0xf4a0>
   2210c:	add	r1, r9, #10
   22110:	ldr	r0, [sp, #36]	; 0x24
   22114:	sub	r0, r0, r1
   22118:	cmp	r0, #2
   2211c:	blt	22520 <main@@Base+0xf17c>
   22120:	ldrb	r0, [r1]
   22124:	cmp	r0, #32
   22128:	bls	2250c <main@@Base+0xf168>
   2212c:	mov	r2, r1
   22130:	b	22530 <main@@Base+0xf18c>
   22134:	ldr	r8, [sp, #36]	; 0x24
   22138:	bne	2214c <main@@Base+0xeda8>
   2213c:	mov	r2, r1
   22140:	ldrb	r0, [r2, #1]!
   22144:	cmp	r0, #32
   22148:	bhi	2215c <main@@Base+0xedb8>
   2214c:	ldr	r0, [sp, #44]	; 0x2c
   22150:	mov	r2, r8
   22154:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22158:	mov	r2, r0
   2215c:	cmp	r2, r8
   22160:	beq	221a0 <main@@Base+0xedfc>
   22164:	ldrb	r0, [r2]
   22168:	cmp	r0, #58	; 0x3a
   2216c:	bne	221a0 <main@@Base+0xedfc>
   22170:	add	r1, r2, #1
   22174:	sub	r0, r8, r1
   22178:	cmp	r0, #2
   2217c:	blt	2259c <main@@Base+0xf1f8>
   22180:	ldrb	r0, [r1]
   22184:	cmp	r0, #32
   22188:	bls	22588 <main@@Base+0xf1e4>
   2218c:	ldr	r8, [sp, #36]	; 0x24
   22190:	mov	r2, r1
   22194:	cmp	sl, r2
   22198:	bne	225b4 <main@@Base+0xf210>
   2219c:	b	22844 <main@@Base+0xf4a0>
   221a0:	ldr	r0, [sp, #44]	; 0x2c
   221a4:	mov	r1, r2
   221a8:	mov	r2, r8
   221ac:	mov	r3, #4
   221b0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   221b4:	b	225a8 <main@@Base+0xf204>
   221b8:	ldr	r8, [sp, #36]	; 0x24
   221bc:	cmp	r0, #34	; 0x22
   221c0:	bne	228c0 <main@@Base+0xf51c>
   221c4:	add	r1, r9, #20
   221c8:	ldr	r0, [sp, #36]	; 0x24
   221cc:	sub	r0, r0, r1
   221d0:	cmp	r0, #2
   221d4:	blt	22618 <main@@Base+0xf274>
   221d8:	ldrb	r0, [r1]
   221dc:	cmp	r0, #32
   221e0:	bls	22604 <main@@Base+0xf260>
   221e4:	mov	r2, r1
   221e8:	b	22628 <main@@Base+0xf284>
   221ec:	strdeq	r5, [r2], -r4
   221f0:			; <UNDEFINED> instruction: 0xffffe73c
   221f4:	ldr	r4, [sp, #36]	; 0x24
   221f8:	bne	2220c <main@@Base+0xee68>
   221fc:	mov	r2, r1
   22200:	ldrb	r0, [r2, #1]!
   22204:	cmp	r0, #32
   22208:	bhi	2221c <main@@Base+0xee78>
   2220c:	ldr	r0, [sp, #44]	; 0x2c
   22210:	mov	r2, r4
   22214:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22218:	mov	r2, r0
   2221c:	cmp	r2, r4
   22220:	beq	2225c <main@@Base+0xeeb8>
   22224:	ldrb	r0, [r2]
   22228:	cmp	r0, #58	; 0x3a
   2222c:	bne	2225c <main@@Base+0xeeb8>
   22230:	ldr	r0, [sp, #36]	; 0x24
   22234:	add	r1, r2, #1
   22238:	sub	r0, r0, r1
   2223c:	cmp	r0, #2
   22240:	blt	226e4 <main@@Base+0xf340>
   22244:	ldrb	r0, [r1]
   22248:	cmp	r0, #32
   2224c:	bls	226d4 <main@@Base+0xf330>
   22250:	mov	r2, r1
   22254:	b	226f4 <main@@Base+0xf350>
   22258:	andeq	r3, r0, r4, lsr #14
   2225c:	mov	r1, r2
   22260:	ldr	r0, [sp, #44]	; 0x2c
   22264:	ldr	r2, [sp, #36]	; 0x24
   22268:	mov	r3, #4
   2226c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22270:	b	226f0 <main@@Base+0xf34c>
   22274:	ldr	r4, [sp, #36]	; 0x24
   22278:	bne	2228c <main@@Base+0xeee8>
   2227c:	mov	r2, r1
   22280:	ldrb	r0, [r2, #1]!
   22284:	cmp	r0, #32
   22288:	bhi	2229c <main@@Base+0xeef8>
   2228c:	ldr	r0, [sp, #44]	; 0x2c
   22290:	mov	r2, r4
   22294:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22298:	mov	r2, r0
   2229c:	cmp	r2, r4
   222a0:	beq	222d8 <main@@Base+0xef34>
   222a4:	ldrb	r0, [r2]
   222a8:	cmp	r0, #58	; 0x3a
   222ac:	bne	222d8 <main@@Base+0xef34>
   222b0:	ldr	r0, [sp, #36]	; 0x24
   222b4:	add	r1, r2, #1
   222b8:	sub	r0, r0, r1
   222bc:	cmp	r0, #2
   222c0:	blt	22690 <main@@Base+0xf2ec>
   222c4:	ldrb	r0, [r1]
   222c8:	cmp	r0, #32
   222cc:	bls	22680 <main@@Base+0xf2dc>
   222d0:	mov	r2, r1
   222d4:	b	226a0 <main@@Base+0xf2fc>
   222d8:	mov	r1, r2
   222dc:	ldr	r0, [sp, #44]	; 0x2c
   222e0:	ldr	r2, [sp, #36]	; 0x24
   222e4:	mov	r3, #4
   222e8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   222ec:	b	2269c <main@@Base+0xf2f8>
   222f0:	bne	22304 <main@@Base+0xef60>
   222f4:	mov	r2, r1
   222f8:	ldrb	r0, [r2, #1]!
   222fc:	cmp	r0, #32
   22300:	bhi	22314 <main@@Base+0xef70>
   22304:	ldr	r0, [sp, #44]	; 0x2c
   22308:	ldr	r2, [sp, #36]	; 0x24
   2230c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22310:	mov	r2, r0
   22314:	ldr	r0, [sp, #36]	; 0x24
   22318:	cmp	r2, r0
   2231c:	beq	22354 <main@@Base+0xefb0>
   22320:	ldrb	r0, [r2]
   22324:	cmp	r0, #58	; 0x3a
   22328:	bne	22354 <main@@Base+0xefb0>
   2232c:	ldr	r0, [sp, #36]	; 0x24
   22330:	add	r1, r2, #1
   22334:	sub	r0, r0, r1
   22338:	cmp	r0, #2
   2233c:	blt	22744 <main@@Base+0xf3a0>
   22340:	ldrb	r0, [r1]
   22344:	cmp	r0, #32
   22348:	bls	22734 <main@@Base+0xf390>
   2234c:	mov	r2, r1
   22350:	b	22754 <main@@Base+0xf3b0>
   22354:	mov	r1, r2
   22358:	ldr	r0, [sp, #44]	; 0x2c
   2235c:	ldr	r2, [sp, #36]	; 0x24
   22360:	mov	r3, #4
   22364:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22368:	b	22750 <main@@Base+0xf3ac>
   2236c:	ldr	r8, [sp, #36]	; 0x24
   22370:	bne	22380 <main@@Base+0xefdc>
   22374:	ldrb	r0, [r1, #2]!
   22378:	cmp	r0, #32
   2237c:	bhi	22394 <main@@Base+0xeff0>
   22380:	ldr	r0, [sp, #44]	; 0x2c
   22384:	mov	r1, r2
   22388:	mov	r2, r8
   2238c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22390:	mov	r1, r0
   22394:	cmp	r9, r1
   22398:	beq	21f94 <main@@Base+0xebf0>
   2239c:	ldr	r0, [sp, #48]	; 0x30
   223a0:	mov	r2, #7
   223a4:	mov	r3, #3
   223a8:	str	r2, [sp]
   223ac:	mov	r2, r8
   223b0:	str	r0, [sp, #4]
   223b4:	ldr	r0, [pc, #2096]	; 22bec <main@@Base+0xf848>
   223b8:	add	r0, pc, r0
   223bc:	str	r0, [sp, #8]
   223c0:	ldr	r5, [sp, #44]	; 0x2c
   223c4:	mov	r0, r5
   223c8:	bl	31d80 <flatcc_json_parser_union@@Base>
   223cc:	b	228d4 <main@@Base+0xf530>
   223d0:	ldr	r8, [sp, #36]	; 0x24
   223d4:	bne	223e4 <main@@Base+0xf040>
   223d8:	ldrb	r0, [r2, #2]!
   223dc:	cmp	r0, #32
   223e0:	bhi	223f4 <main@@Base+0xf050>
   223e4:	ldr	r0, [sp, #44]	; 0x2c
   223e8:	mov	r2, r8
   223ec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   223f0:	mov	r2, r0
   223f4:	cmp	sl, r2
   223f8:	beq	22844 <main@@Base+0xf4a0>
   223fc:	ldr	r0, [sp, #48]	; 0x30
   22400:	mov	r1, #3
   22404:	mov	r3, #1
   22408:	str	r1, [sp]
   2240c:	mov	r1, r2
   22410:	mov	r2, r8
   22414:	str	r0, [sp, #4]
   22418:	ldr	r0, [pc, #1976]	; 22bd8 <main@@Base+0xf834>
   2241c:	add	r0, pc, r0
   22420:	str	r0, [sp, #8]
   22424:	ldr	r0, [pc, #1968]	; 22bdc <main@@Base+0xf838>
   22428:	add	r0, pc, r0
   2242c:	b	228ac <main@@Base+0xf508>
   22430:	ldr	r8, [sp, #36]	; 0x24
   22434:	bne	22444 <main@@Base+0xf0a0>
   22438:	ldrb	r0, [r2, #2]!
   2243c:	cmp	r0, #32
   22440:	bhi	22454 <main@@Base+0xf0b0>
   22444:	ldr	r0, [sp, #44]	; 0x2c
   22448:	mov	r2, r8
   2244c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22450:	mov	r2, r0
   22454:	cmp	r7, r2
   22458:	beq	228c0 <main@@Base+0xf51c>
   2245c:	ldr	r0, [sp, #48]	; 0x30
   22460:	mov	r1, #7
   22464:	mov	r3, #3
   22468:	str	r1, [sp]
   2246c:	mov	r1, r2
   22470:	mov	r2, r8
   22474:	str	r0, [sp, #4]
   22478:	ldr	r0, [pc, #1892]	; 22be4 <main@@Base+0xf840>
   2247c:	add	r0, pc, r0
   22480:	str	r0, [sp, #8]
   22484:	ldr	r0, [pc, #1884]	; 22be8 <main@@Base+0xf844>
   22488:	add	r0, pc, r0
   2248c:	b	228ac <main@@Base+0xf508>
   22490:	bne	224a4 <main@@Base+0xf100>
   22494:	mov	r2, r1
   22498:	ldrb	r0, [r2, #1]!
   2249c:	cmp	r0, #32
   224a0:	bhi	224b4 <main@@Base+0xf110>
   224a4:	ldr	r0, [sp, #44]	; 0x2c
   224a8:	ldr	r2, [sp, #36]	; 0x24
   224ac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   224b0:	mov	r2, r0
   224b4:	ldr	r0, [sp, #36]	; 0x24
   224b8:	cmp	r2, r0
   224bc:	beq	224f4 <main@@Base+0xf150>
   224c0:	ldrb	r0, [r2]
   224c4:	cmp	r0, #58	; 0x3a
   224c8:	bne	224f4 <main@@Base+0xf150>
   224cc:	ldr	r0, [sp, #36]	; 0x24
   224d0:	add	r1, r2, #1
   224d4:	sub	r0, r0, r1
   224d8:	cmp	r0, #2
   224dc:	blt	227a8 <main@@Base+0xf404>
   224e0:	ldrb	r0, [r1]
   224e4:	cmp	r0, #32
   224e8:	bls	22798 <main@@Base+0xf3f4>
   224ec:	mov	r2, r1
   224f0:	b	227b8 <main@@Base+0xf414>
   224f4:	mov	r1, r2
   224f8:	ldr	r0, [sp, #44]	; 0x2c
   224fc:	ldr	r2, [sp, #36]	; 0x24
   22500:	mov	r3, #4
   22504:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22508:	b	227b4 <main@@Base+0xf410>
   2250c:	bne	22520 <main@@Base+0xf17c>
   22510:	mov	r2, r1
   22514:	ldrb	r0, [r2, #1]!
   22518:	cmp	r0, #32
   2251c:	bhi	22530 <main@@Base+0xf18c>
   22520:	ldr	r0, [sp, #44]	; 0x2c
   22524:	ldr	r2, [sp, #36]	; 0x24
   22528:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2252c:	mov	r2, r0
   22530:	ldr	r0, [sp, #36]	; 0x24
   22534:	cmp	r2, r0
   22538:	beq	22570 <main@@Base+0xf1cc>
   2253c:	ldrb	r0, [r2]
   22540:	cmp	r0, #58	; 0x3a
   22544:	bne	22570 <main@@Base+0xf1cc>
   22548:	ldr	r0, [sp, #36]	; 0x24
   2254c:	add	r1, r2, #1
   22550:	sub	r0, r0, r1
   22554:	cmp	r0, #2
   22558:	blt	22800 <main@@Base+0xf45c>
   2255c:	ldrb	r0, [r1]
   22560:	cmp	r0, #32
   22564:	bls	227f0 <main@@Base+0xf44c>
   22568:	mov	r2, r1
   2256c:	b	22810 <main@@Base+0xf46c>
   22570:	mov	r1, r2
   22574:	ldr	r0, [sp, #44]	; 0x2c
   22578:	ldr	r2, [sp, #36]	; 0x24
   2257c:	mov	r3, #4
   22580:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22584:	b	2280c <main@@Base+0xf468>
   22588:	ldr	r8, [sp, #36]	; 0x24
   2258c:	bne	2259c <main@@Base+0xf1f8>
   22590:	ldrb	r0, [r2, #2]!
   22594:	cmp	r0, #32
   22598:	bhi	225ac <main@@Base+0xf208>
   2259c:	ldr	r0, [sp, #44]	; 0x2c
   225a0:	mov	r2, r8
   225a4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   225a8:	mov	r2, r0
   225ac:	cmp	sl, r2
   225b0:	beq	22844 <main@@Base+0xf4a0>
   225b4:	ldr	r0, [sp, #48]	; 0x30
   225b8:	mov	r1, #9
   225bc:	mov	r3, #4
   225c0:	str	r1, [sp]
   225c4:	mov	r1, r2
   225c8:	mov	r2, r8
   225cc:	str	r0, [sp, #4]
   225d0:	ldr	r0, [pc, #1560]	; 22bf0 <main@@Base+0xf84c>
   225d4:	add	r0, pc, r0
   225d8:	str	r0, [sp, #8]
   225dc:	ldr	r0, [pc, #1552]	; 22bf4 <main@@Base+0xf850>
   225e0:	add	r0, pc, r0
   225e4:	str	r0, [sp, #12]
   225e8:	ldr	r0, [pc, #1544]	; 22bf8 <main@@Base+0xf854>
   225ec:	add	r0, pc, r0
   225f0:	str	r0, [sp, #16]
   225f4:	ldr	r5, [sp, #44]	; 0x2c
   225f8:	mov	r0, r5
   225fc:	bl	32988 <flatcc_json_parser_union_type_vector@@Base>
   22600:	b	228d4 <main@@Base+0xf530>
   22604:	bne	22618 <main@@Base+0xf274>
   22608:	mov	r2, r1
   2260c:	ldrb	r0, [r2, #1]!
   22610:	cmp	r0, #32
   22614:	bhi	22628 <main@@Base+0xf284>
   22618:	ldr	r0, [sp, #44]	; 0x2c
   2261c:	ldr	r2, [sp, #36]	; 0x24
   22620:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22624:	mov	r2, r0
   22628:	ldr	r0, [sp, #36]	; 0x24
   2262c:	cmp	r2, r0
   22630:	beq	22668 <main@@Base+0xf2c4>
   22634:	ldrb	r0, [r2]
   22638:	cmp	r0, #58	; 0x3a
   2263c:	bne	22668 <main@@Base+0xf2c4>
   22640:	ldr	r0, [sp, #36]	; 0x24
   22644:	add	r1, r2, #1
   22648:	sub	r0, r0, r1
   2264c:	cmp	r0, #2
   22650:	blt	22860 <main@@Base+0xf4bc>
   22654:	ldrb	r0, [r1]
   22658:	cmp	r0, #32
   2265c:	bls	22850 <main@@Base+0xf4ac>
   22660:	mov	r2, r1
   22664:	b	22870 <main@@Base+0xf4cc>
   22668:	mov	r1, r2
   2266c:	ldr	r0, [sp, #44]	; 0x2c
   22670:	ldr	r2, [sp, #36]	; 0x24
   22674:	mov	r3, #4
   22678:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2267c:	b	2286c <main@@Base+0xf4c8>
   22680:	bne	22690 <main@@Base+0xf2ec>
   22684:	ldrb	r0, [r2, #2]!
   22688:	cmp	r0, #32
   2268c:	bhi	226a0 <main@@Base+0xf2fc>
   22690:	ldr	r0, [sp, #44]	; 0x2c
   22694:	ldr	r2, [sp, #36]	; 0x24
   22698:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2269c:	mov	r2, r0
   226a0:	ldr	r8, [sp, #36]	; 0x24
   226a4:	cmp	sl, r2
   226a8:	beq	22844 <main@@Base+0xf4a0>
   226ac:	ldr	r0, [sp, #48]	; 0x30
   226b0:	mov	r1, #3
   226b4:	mov	r3, #1
   226b8:	str	r1, [sp]
   226bc:	mov	r1, r2
   226c0:	mov	r2, r8
   226c4:	str	r0, [sp, #4]
   226c8:	ldr	r0, [pc, #1296]	; 22be0 <main@@Base+0xf83c>
   226cc:	add	r0, pc, r0
   226d0:	b	223bc <main@@Base+0xf018>
   226d4:	bne	226e4 <main@@Base+0xf340>
   226d8:	ldrb	r0, [r2, #2]!
   226dc:	cmp	r0, #32
   226e0:	bhi	226f4 <main@@Base+0xf350>
   226e4:	ldr	r0, [sp, #44]	; 0x2c
   226e8:	ldr	r2, [sp, #36]	; 0x24
   226ec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   226f0:	mov	r2, r0
   226f4:	ldr	r8, [sp, #36]	; 0x24
   226f8:	cmp	sl, r2
   226fc:	beq	22844 <main@@Base+0xf4a0>
   22700:	ldr	r0, [sp, #48]	; 0x30
   22704:	mov	r1, #5
   22708:	mov	r3, #2
   2270c:	str	r1, [sp]
   22710:	mov	r1, r2
   22714:	mov	r2, r8
   22718:	str	r0, [sp, #4]
   2271c:	ldr	r0, [pc, #1256]	; 22c0c <main@@Base+0xf868>
   22720:	add	r0, pc, r0
   22724:	str	r0, [sp, #8]
   22728:	ldr	r0, [pc, #1248]	; 22c10 <main@@Base+0xf86c>
   2272c:	add	r0, pc, r0
   22730:	b	228ac <main@@Base+0xf508>
   22734:	bne	22744 <main@@Base+0xf3a0>
   22738:	ldrb	r0, [r2, #2]!
   2273c:	cmp	r0, #32
   22740:	bhi	22754 <main@@Base+0xf3b0>
   22744:	ldr	r0, [sp, #44]	; 0x2c
   22748:	ldr	r2, [sp, #36]	; 0x24
   2274c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22750:	mov	r2, r0
   22754:	ldr	r8, [sp, #36]	; 0x24
   22758:	cmp	sl, r2
   2275c:	beq	22844 <main@@Base+0xf4a0>
   22760:	ldr	r0, [sp, #48]	; 0x30
   22764:	mov	r1, #9
   22768:	mov	r3, #4
   2276c:	str	r1, [sp]
   22770:	mov	r1, r2
   22774:	mov	r2, r8
   22778:	str	r0, [sp, #4]
   2277c:	ldr	r0, [pc, #1144]	; 22bfc <main@@Base+0xf858>
   22780:	add	r0, pc, r0
   22784:	str	r0, [sp, #8]
   22788:	ldr	r5, [sp, #44]	; 0x2c
   2278c:	mov	r0, r5
   22790:	bl	32494 <flatcc_json_parser_union_vector@@Base>
   22794:	b	228d4 <main@@Base+0xf530>
   22798:	bne	227a8 <main@@Base+0xf404>
   2279c:	ldrb	r0, [r2, #2]!
   227a0:	cmp	r0, #32
   227a4:	bhi	227b8 <main@@Base+0xf414>
   227a8:	ldr	r0, [sp, #44]	; 0x2c
   227ac:	ldr	r2, [sp, #36]	; 0x24
   227b0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   227b4:	mov	r2, r0
   227b8:	ldr	r7, [sp, #20]
   227bc:	ldr	r8, [sp, #36]	; 0x24
   227c0:	cmp	r7, r2
   227c4:	beq	228c0 <main@@Base+0xf51c>
   227c8:	ldr	r0, [sp, #48]	; 0x30
   227cc:	mov	r1, #1
   227d0:	mov	r3, #0
   227d4:	str	r1, [sp]
   227d8:	mov	r1, r2
   227dc:	mov	r2, r8
   227e0:	str	r0, [sp, #4]
   227e4:	ldr	r0, [pc, #1052]	; 22c08 <main@@Base+0xf864>
   227e8:	add	r0, pc, r0
   227ec:	b	223bc <main@@Base+0xf018>
   227f0:	bne	22800 <main@@Base+0xf45c>
   227f4:	ldrb	r0, [r2, #2]!
   227f8:	cmp	r0, #32
   227fc:	bhi	22810 <main@@Base+0xf46c>
   22800:	ldr	r0, [sp, #44]	; 0x2c
   22804:	ldr	r2, [sp, #36]	; 0x24
   22808:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2280c:	mov	r2, r0
   22810:	ldr	r8, [sp, #36]	; 0x24
   22814:	cmp	sl, r2
   22818:	beq	22844 <main@@Base+0xf4a0>
   2281c:	ldr	r0, [sp, #48]	; 0x30
   22820:	mov	r1, #5
   22824:	mov	r3, #2
   22828:	str	r1, [sp]
   2282c:	mov	r1, r2
   22830:	mov	r2, r8
   22834:	str	r0, [sp, #4]
   22838:	ldr	r0, [pc, #980]	; 22c14 <main@@Base+0xf870>
   2283c:	add	r0, pc, r0
   22840:	b	223bc <main@@Base+0xf018>
   22844:	ldr	r5, [sp, #44]	; 0x2c
   22848:	mov	r1, sl
   2284c:	b	228c8 <main@@Base+0xf524>
   22850:	bne	22860 <main@@Base+0xf4bc>
   22854:	ldrb	r0, [r2, #2]!
   22858:	cmp	r0, #32
   2285c:	bhi	22870 <main@@Base+0xf4cc>
   22860:	ldr	r0, [sp, #44]	; 0x2c
   22864:	ldr	r2, [sp, #36]	; 0x24
   22868:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2286c:	mov	r2, r0
   22870:	ldr	r8, [sp, #36]	; 0x24
   22874:	cmp	r7, r2
   22878:	beq	228c0 <main@@Base+0xf51c>
   2287c:	ldr	r0, [sp, #48]	; 0x30
   22880:	mov	r1, #1
   22884:	mov	r3, #0
   22888:	str	r1, [sp]
   2288c:	mov	r1, r2
   22890:	mov	r2, r8
   22894:	str	r0, [sp, #4]
   22898:	ldr	r0, [pc, #864]	; 22c00 <main@@Base+0xf85c>
   2289c:	add	r0, pc, r0
   228a0:	str	r0, [sp, #8]
   228a4:	ldr	r0, [pc, #856]	; 22c04 <main@@Base+0xf860>
   228a8:	add	r0, pc, r0
   228ac:	str	r0, [sp, #12]
   228b0:	ldr	r5, [sp, #44]	; 0x2c
   228b4:	mov	r0, r5
   228b8:	bl	31ec0 <flatcc_json_parser_union_type@@Base>
   228bc:	b	228d4 <main@@Base+0xf530>
   228c0:	ldr	r5, [sp, #44]	; 0x2c
   228c4:	mov	r1, r7
   228c8:	mov	r0, r5
   228cc:	mov	r2, r8
   228d0:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   228d4:	ldr	r9, [sp, #40]	; 0x28
   228d8:	mov	r1, r0
   228dc:	sub	r0, r8, r0
   228e0:	cmp	r0, #2
   228e4:	blt	22918 <main@@Base+0xf574>
   228e8:	ldrb	r0, [r1]
   228ec:	cmp	r0, #32
   228f0:	bls	22904 <main@@Base+0xf560>
   228f4:	mov	r2, r1
   228f8:	cmp	r2, r8
   228fc:	bne	22930 <main@@Base+0xf58c>
   22900:	b	229c0 <main@@Base+0xf61c>
   22904:	bne	22918 <main@@Base+0xf574>
   22908:	mov	r2, r1
   2290c:	ldrb	r0, [r2, #1]!
   22910:	cmp	r0, #32
   22914:	bhi	22928 <main@@Base+0xf584>
   22918:	mov	r0, r5
   2291c:	mov	r2, r8
   22920:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22924:	mov	r2, r0
   22928:	cmp	r2, r8
   2292c:	beq	229c0 <main@@Base+0xf61c>
   22930:	ldrb	r0, [r2]
   22934:	cmp	r0, #44	; 0x2c
   22938:	bne	229c8 <main@@Base+0xf624>
   2293c:	add	r1, r2, #1
   22940:	sub	r0, r8, r1
   22944:	cmp	r0, #2
   22948:	blt	22978 <main@@Base+0xf5d4>
   2294c:	ldrb	r0, [r1]
   22950:	cmp	r0, #32
   22954:	bls	22968 <main@@Base+0xf5c4>
   22958:	mov	r2, r1
   2295c:	cmp	r2, r8
   22960:	bne	22990 <main@@Base+0xf5ec>
   22964:	b	22a00 <main@@Base+0xf65c>
   22968:	bne	22978 <main@@Base+0xf5d4>
   2296c:	ldrb	r0, [r2, #2]!
   22970:	cmp	r0, #32
   22974:	bhi	22988 <main@@Base+0xf5e4>
   22978:	mov	r0, r5
   2297c:	mov	r2, r8
   22980:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22984:	mov	r2, r0
   22988:	cmp	r2, r8
   2298c:	beq	22a00 <main@@Base+0xf65c>
   22990:	ldrb	r0, [r2]
   22994:	cmp	r0, #125	; 0x7d
   22998:	bne	21468 <main@@Base+0xe0c4>
   2299c:	add	r1, r2, #1
   229a0:	sub	r0, r8, r1
   229a4:	cmp	r0, #2
   229a8:	blt	22a48 <main@@Base+0xf6a4>
   229ac:	ldrb	r0, [r1]
   229b0:	cmp	r0, #32
   229b4:	bls	22a20 <main@@Base+0xf67c>
   229b8:	mov	r4, r1
   229bc:	b	213a0 <main@@Base+0xdffc>
   229c0:	mov	r4, r8
   229c4:	b	213a0 <main@@Base+0xdffc>
   229c8:	cmp	r0, #125	; 0x7d
   229cc:	bne	22a0c <main@@Base+0xf668>
   229d0:	add	r1, r2, #1
   229d4:	sub	r0, r8, r1
   229d8:	cmp	r0, #2
   229dc:	blt	22a48 <main@@Base+0xf6a4>
   229e0:	ldrb	r0, [r1]
   229e4:	cmp	r0, #32
   229e8:	bls	22a28 <main@@Base+0xf684>
   229ec:	ldr	r8, [sp, #36]	; 0x24
   229f0:	ldr	r5, [sp, #44]	; 0x2c
   229f4:	ldr	r9, [sp, #40]	; 0x28
   229f8:	mov	r4, r1
   229fc:	b	213a0 <main@@Base+0xdffc>
   22a00:	mov	r0, r5
   22a04:	mov	r1, r8
   22a08:	b	22a14 <main@@Base+0xf670>
   22a0c:	mov	r0, r5
   22a10:	mov	r1, r2
   22a14:	mov	r2, r8
   22a18:	mov	r3, #10
   22a1c:	b	21398 <main@@Base+0xdff4>
   22a20:	beq	22a38 <main@@Base+0xf694>
   22a24:	b	22a48 <main@@Base+0xf6a4>
   22a28:	ldr	r8, [sp, #36]	; 0x24
   22a2c:	ldr	r5, [sp, #44]	; 0x2c
   22a30:	ldr	r9, [sp, #40]	; 0x28
   22a34:	bne	22a48 <main@@Base+0xf6a4>
   22a38:	ldrb	r0, [r2, #2]!
   22a3c:	cmp	r0, #32
   22a40:	mov	r4, r2
   22a44:	bhi	213a0 <main@@Base+0xdffc>
   22a48:	mov	r0, r5
   22a4c:	mov	r2, r8
   22a50:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22a54:	b	2139c <main@@Base+0xdff8>
   22a58:	mov	r4, r8
   22a5c:	b	22b0c <main@@Base+0xf768>
   22a60:	cmp	r0, #125	; 0x7d
   22a64:	bne	22af4 <main@@Base+0xf750>
   22a68:	add	r4, r2, #1
   22a6c:	sub	r0, r8, r4
   22a70:	cmp	r0, #2
   22a74:	blt	22a9c <main@@Base+0xf6f8>
   22a78:	ldrb	r0, [r4]
   22a7c:	cmp	r0, #32
   22a80:	bhi	22b0c <main@@Base+0xf768>
   22a84:	bne	22a9c <main@@Base+0xf6f8>
   22a88:	ldrb	r0, [r2, #2]!
   22a8c:	cmp	r0, #32
   22a90:	bls	22a9c <main@@Base+0xf6f8>
   22a94:	mov	r4, r2
   22a98:	b	22b0c <main@@Base+0xf768>
   22a9c:	mov	r0, r5
   22aa0:	mov	r1, r4
   22aa4:	mov	r2, r8
   22aa8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22aac:	b	22b08 <main@@Base+0xf764>
   22ab0:	mov	r0, r5
   22ab4:	mov	r1, r8
   22ab8:	b	22afc <main@@Base+0xf758>
   22abc:	mov	r0, r5
   22ac0:	mov	r1, r3
   22ac4:	b	22b3c <main@@Base+0xf798>
   22ac8:	cmp	r0, #125	; 0x7d
   22acc:	bne	22b34 <main@@Base+0xf790>
   22ad0:	add	r1, r2, #1
   22ad4:	sub	r0, r8, r1
   22ad8:	cmp	r0, #2
   22adc:	blt	22b5c <main@@Base+0xf7b8>
   22ae0:	ldrb	r0, [r1]
   22ae4:	cmp	r0, #32
   22ae8:	bls	22b48 <main@@Base+0xf7a4>
   22aec:	mov	r4, r1
   22af0:	b	1fb88 <main@@Base+0xc7e4>
   22af4:	mov	r0, r5
   22af8:	mov	r1, r2
   22afc:	mov	r2, r8
   22b00:	mov	r3, #10
   22b04:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22b08:	mov	r4, r0
   22b0c:	ldr	r0, [sp, #28]
   22b10:	b	1fbd4 <main@@Base+0xc830>
   22b14:	bne	22b24 <main@@Base+0xf780>
   22b18:	ldrb	r0, [r4, #2]!
   22b1c:	cmp	r0, #32
   22b20:	bhi	1fbd0 <main@@Base+0xc82c>
   22b24:	mov	r0, r5
   22b28:	mov	r2, r8
   22b2c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22b30:	b	1fbcc <main@@Base+0xc828>
   22b34:	mov	r0, r5
   22b38:	mov	r1, r2
   22b3c:	mov	r2, r8
   22b40:	mov	r3, #10
   22b44:	b	1fb80 <main@@Base+0xc7dc>
   22b48:	bne	22b5c <main@@Base+0xf7b8>
   22b4c:	ldrb	r0, [r2, #2]!
   22b50:	cmp	r0, #32
   22b54:	mov	r4, r2
   22b58:	bhi	1fb88 <main@@Base+0xc7e4>
   22b5c:	mov	r0, r5
   22b60:	mov	r2, r8
   22b64:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   22b68:	b	1fb84 <main@@Base+0xc7e0>
   22b6c:	mov	r0, r5
   22b70:	mov	r1, r4
   22b74:	mov	r2, r8
   22b78:	mov	r3, #33	; 0x21
   22b7c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22b80:	mov	r4, r0
   22b84:	mov	r0, r5
   22b88:	mov	r1, r4
   22b8c:	mov	r2, r8
   22b90:	mov	r3, #33	; 0x21
   22b94:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22b98:	mov	r4, r0
   22b9c:	ldr	r0, [r5, #24]
   22ba0:	cmp	r0, #0
   22ba4:	bne	22bcc <main@@Base+0xf828>
   22ba8:	ldr	r0, [r9]
   22bac:	cmp	r0, #0
   22bb0:	bne	22bcc <main@@Base+0xf828>
   22bb4:	mov	r0, r5
   22bb8:	mov	r1, r4
   22bbc:	mov	r2, r8
   22bc0:	mov	r3, #33	; 0x21
   22bc4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   22bc8:	mov	r4, r0
   22bcc:	mov	r0, r4
   22bd0:	sub	sp, fp, #28
   22bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22bd8:	andeq	r4, r2, r0, lsr #29
   22bdc:	strdeq	r5, [r0], -ip
   22be0:	andeq	r5, r0, r8, asr r9
   22be4:	andeq	r4, r2, r0, asr lr
   22be8:	muleq	r0, ip, fp
   22bec:	andeq	r5, r0, ip, ror #24
   22bf0:	andeq	r4, r2, r8, lsl #26
   22bf4:	andeq	r5, r0, r4, asr #20
   22bf8:	andeq	r6, r0, r0, asr #18
   22bfc:	andeq	r5, r0, r4, lsr #17
   22c00:	andeq	r4, r2, r0, asr sl
   22c04:	andeq	r5, r0, ip, ror r7
   22c08:	andeq	r5, r0, ip, lsr r8
   22c0c:	ldrdeq	r4, [r2], -ip
   22c10:	strdeq	r5, [r0], -r8
   22c14:	andeq	r5, r0, r8, ror #15
   22c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c1c:	add	fp, sp, #28
   22c20:	sub	sp, sp, #20
   22c24:	mov	r8, r1
   22c28:	sub	r1, r2, r1
   22c2c:	cmp	r1, #8
   22c30:	movcs	r1, #8
   22c34:	and	r1, r1, #15
   22c38:	sub	r1, r1, #1
   22c3c:	cmp	r1, #7
   22c40:	bhi	22e48 <main@@Base+0xfaa4>
   22c44:	str	r2, [sp, #16]
   22c48:	str	r0, [sp, #12]
   22c4c:	add	r4, pc, #40	; 0x28
   22c50:	mov	lr, r3
   22c54:	mov	sl, #0
   22c58:	mov	ip, #0
   22c5c:	mov	r5, #0
   22c60:	mov	r2, #0
   22c64:	mov	r3, #0
   22c68:	mov	r7, #0
   22c6c:	mov	r6, #0
   22c70:	ldr	r0, [r4, r1, lsl #2]
   22c74:	mov	r1, #0
   22c78:	add	pc, r4, r0
   22c7c:	andeq	r0, r0, r4, rrx
   22c80:	andeq	r0, r0, ip, asr r0
   22c84:	andeq	r0, r0, r4, asr r0
   22c88:	andeq	r0, r0, ip, asr #32
   22c8c:	andeq	r0, r0, r0, asr #32
   22c90:	andeq	r0, r0, r4, lsr r0
   22c94:	andeq	r0, r0, r4, lsr #32
   22c98:	andeq	r0, r0, r0, lsr #32
   22c9c:	ldrb	ip, [r8, #7]
   22ca0:	ldrb	r0, [r8, #6]
   22ca4:	mov	r5, sl
   22ca8:	orr	r0, ip, r0, lsl #8
   22cac:	mov	sl, r0
   22cb0:	ldrb	r0, [r8, #5]
   22cb4:	mov	r1, r5
   22cb8:	orr	sl, sl, r0, lsl #16
   22cbc:	ldrb	r0, [r8, #4]
   22cc0:	mov	r2, r1
   22cc4:	orr	sl, sl, r0, lsl #24
   22cc8:	ldrb	r0, [r8, #3]
   22ccc:	orr	r3, r0, r2
   22cd0:	ldrb	r0, [r8, #2]
   22cd4:	orr	r7, r3, r0, lsl #8
   22cd8:	ldrb	r0, [r8, #1]
   22cdc:	orr	r6, r7, r0, lsl #16
   22ce0:	ldrb	r0, [r8]
   22ce4:	ldr	r5, [fp, #12]
   22ce8:	ldr	r7, [fp, #8]
   22cec:	movw	r1, #28275	; 0x6e73
   22cf0:	movt	r1, #19823	; 0x4d6f
   22cf4:	orr	r9, r6, r0, lsl #24
   22cf8:	movw	r0, #29184	; 0x7200
   22cfc:	movt	r0, #29797	; 0x7465
   22d00:	subs	r2, sl, r0
   22d04:	sbcs	r2, r9, r1
   22d08:	bcs	22d50 <main@@Base+0xf9ac>
   22d0c:	movw	r1, #29696	; 0x7400
   22d10:	bic	r0, r9, #255	; 0xff
   22d14:	movt	r1, #16748	; 0x416c
   22d18:	teq	r0, r1
   22d1c:	bne	22e48 <main@@Base+0xfaa4>
   22d20:	ldr	r0, [sp, #12]
   22d24:	ldr	r2, [sp, #16]
   22d28:	mov	r1, r8
   22d2c:	mov	r3, #3
   22d30:	mov	r4, lr
   22d34:	str	r5, [sp]
   22d38:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   22d3c:	cmp	r0, r8
   22d40:	beq	22e48 <main@@Base+0xfaa4>
   22d44:	mov	r1, #0
   22d48:	mov	r2, #4
   22d4c:	b	22d90 <main@@Base+0xf9ec>
   22d50:	add	r2, r0, #50	; 0x32
   22d54:	eor	r1, r9, r1
   22d58:	eor	r2, sl, r2
   22d5c:	orrs	r2, r2, r1
   22d60:	bne	22da0 <main@@Base+0xf9fc>
   22d64:	ldr	r0, [sp, #12]
   22d68:	ldr	r2, [sp, #16]
   22d6c:	mov	r1, r8
   22d70:	mov	r3, #8
   22d74:	mov	r4, lr
   22d78:	str	r5, [sp]
   22d7c:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   22d80:	cmp	r0, r8
   22d84:	beq	22e48 <main@@Base+0xfaa4>
   22d88:	mov	r1, #0
   22d8c:	mov	r2, #3
   22d90:	str	r2, [r7]
   22d94:	str	r1, [r7, #4]
   22d98:	str	r1, [r4]
   22d9c:	b	22e44 <main@@Base+0xfaa0>
   22da0:	ldr	r6, [sp, #16]
   22da4:	ldr	r7, [sp, #12]
   22da8:	bic	r2, sl, #255	; 0xff
   22dac:	eor	r0, r2, r0
   22db0:	orrs	r0, r0, r1
   22db4:	bne	22df8 <main@@Base+0xfa54>
   22db8:	mov	r0, r7
   22dbc:	mov	r1, r8
   22dc0:	mov	r2, r6
   22dc4:	mov	r3, #7
   22dc8:	str	r5, [sp]
   22dcc:	mov	r4, lr
   22dd0:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   22dd4:	mov	lr, r4
   22dd8:	cmp	r0, r8
   22ddc:	beq	22df8 <main@@Base+0xfa54>
   22de0:	ldr	r3, [fp, #8]
   22de4:	mov	r2, #1
   22de8:	mov	r1, #0
   22dec:	str	r2, [r3]
   22df0:	str	r1, [r3, #4]
   22df4:	b	22e40 <main@@Base+0xfa9c>
   22df8:	movw	r0, #20037	; 0x4e45
   22dfc:	movt	r0, #20047	; 0x4e4f
   22e00:	teq	r9, r0
   22e04:	bne	22e54 <main@@Base+0xfab0>
   22e08:	mov	r0, r7
   22e0c:	mov	r1, r8
   22e10:	mov	r2, r6
   22e14:	mov	r3, #4
   22e18:	str	r5, [sp]
   22e1c:	mov	r4, lr
   22e20:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   22e24:	mov	lr, r4
   22e28:	cmp	r0, r8
   22e2c:	beq	22e54 <main@@Base+0xfab0>
   22e30:	ldr	r2, [fp, #8]
   22e34:	mov	r1, #0
   22e38:	str	r1, [r2]
   22e3c:	str	r1, [r2, #4]
   22e40:	str	r1, [lr]
   22e44:	mov	r8, r0
   22e48:	mov	r0, r8
   22e4c:	sub	sp, fp, #28
   22e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e54:	movw	r0, #28016	; 0x6d70
   22e58:	movw	r1, #29556	; 0x7374
   22e5c:	movt	r0, #21353	; 0x5369
   22e60:	movt	r1, #21605	; 0x5465
   22e64:	eor	r0, sl, r0
   22e68:	eor	r1, r9, r1
   22e6c:	orrs	r0, r0, r1
   22e70:	bne	22e48 <main@@Base+0xfaa4>
   22e74:	str	lr, [sp, #8]
   22e78:	add	lr, r8, #8
   22e7c:	sub	r0, r6, lr
   22e80:	cmp	r0, #8
   22e84:	movcs	r0, #8
   22e88:	and	r0, r0, #15
   22e8c:	sub	r0, r0, #1
   22e90:	cmp	r0, #7
   22e94:	bhi	22e48 <main@@Base+0xfaa4>
   22e98:	add	r4, pc, #36	; 0x24
   22e9c:	mov	sl, #0
   22ea0:	mov	ip, #0
   22ea4:	mov	r9, #0
   22ea8:	mov	r3, #0
   22eac:	mov	r2, #0
   22eb0:	mov	r6, #0
   22eb4:	mov	r7, #0
   22eb8:	ldr	r1, [r4, r0, lsl #2]
   22ebc:	mov	r0, #0
   22ec0:	add	pc, r4, r1
   22ec4:	andeq	r0, r0, r4, rrx
   22ec8:	andeq	r0, r0, ip, asr r0
   22ecc:	andeq	r0, r0, r4, asr r0
   22ed0:	andeq	r0, r0, ip, asr #32
   22ed4:	andeq	r0, r0, r0, asr #32
   22ed8:	andeq	r0, r0, r4, lsr r0
   22edc:	andeq	r0, r0, r4, lsr #32
   22ee0:	andeq	r0, r0, r0, lsr #32
   22ee4:	ldrb	ip, [r8, #15]
   22ee8:	ldrb	r0, [r8, #14]
   22eec:	mov	r9, sl
   22ef0:	orr	r0, ip, r0, lsl #8
   22ef4:	mov	sl, r0
   22ef8:	ldrb	r0, [r8, #13]
   22efc:	orr	sl, sl, r0, lsl #16
   22f00:	mov	r0, r9
   22f04:	ldrb	r1, [r8, #12]
   22f08:	mov	r3, r0
   22f0c:	orr	sl, sl, r1, lsl #24
   22f10:	ldrb	r0, [r8, #11]
   22f14:	orr	r2, r0, r3
   22f18:	ldrb	r0, [r8, #10]
   22f1c:	orr	r6, r2, r0, lsl #8
   22f20:	ldrb	r0, [r8, #9]
   22f24:	orr	r7, r6, r0, lsl #16
   22f28:	ldrb	r1, [lr]
   22f2c:	movw	r0, #25943	; 0x6557
   22f30:	movw	r2, #21601	; 0x5461
   22f34:	movt	r0, #25196	; 0x626c
   22f38:	movt	r2, #27749	; 0x6c65
   22f3c:	eor	r0, sl, r0
   22f40:	orr	r1, r7, r1, lsl #24
   22f44:	eor	r1, r1, r2
   22f48:	orrs	r0, r0, r1
   22f4c:	bne	22e48 <main@@Base+0xfaa4>
   22f50:	ldr	r0, [sp, #16]
   22f54:	add	r9, r8, #16
   22f58:	sub	r0, r0, r9
   22f5c:	cmp	r0, #8
   22f60:	movcs	r0, #8
   22f64:	and	r0, r0, #15
   22f68:	sub	r0, r0, #1
   22f6c:	cmp	r0, #7
   22f70:	bhi	22e48 <main@@Base+0xfaa4>
   22f74:	add	r4, pc, #32
   22f78:	mov	lr, #0
   22f7c:	mov	ip, #0
   22f80:	mov	r2, #0
   22f84:	mov	r3, #0
   22f88:	mov	r7, #0
   22f8c:	mov	r6, #0
   22f90:	ldr	r1, [r4, r0, lsl #2]
   22f94:	mov	r0, #0
   22f98:	add	pc, r4, r1
   22f9c:	andeq	r0, r0, ip, asr r0
   22fa0:	andeq	r0, r0, r4, asr r0
   22fa4:	andeq	r0, r0, ip, asr #32
   22fa8:	andeq	r0, r0, r4, asr #32
   22fac:	andeq	r0, r0, r8, lsr r0
   22fb0:	andeq	r0, r0, r8, lsr #32
   22fb4:	andeq	r0, r0, r0, lsr #32
   22fb8:	andeq	r0, r0, r0, lsr #32
   22fbc:	ldrb	r0, [r8, #22]
   22fc0:	lsl	ip, r0, #8
   22fc4:	ldrb	r0, [r8, #21]
   22fc8:	orr	r1, ip, r0, lsl #16
   22fcc:	mov	r0, lr
   22fd0:	mov	lr, r1
   22fd4:	ldrb	r1, [r8, #20]
   22fd8:	mov	r2, r0
   22fdc:	orr	lr, lr, r1, lsl #24
   22fe0:	ldrb	r0, [r8, #19]
   22fe4:	orr	r3, r0, r2
   22fe8:	ldrb	r0, [r8, #18]
   22fec:	orr	r7, r3, r0, lsl #8
   22ff0:	ldrb	r0, [r8, #17]
   22ff4:	orr	r6, r7, r0, lsl #16
   22ff8:	ldrb	r1, [r9]
   22ffc:	movw	r0, #27904	; 0x6d00
   23000:	movw	r2, #26693	; 0x6845
   23004:	movt	r0, #28277	; 0x6e75
   23008:	movt	r2, #26996	; 0x6974
   2300c:	eor	r0, lr, r0
   23010:	orr	r1, r6, r1, lsl #24
   23014:	eor	r1, r1, r2
   23018:	orrs	r0, r0, r1
   2301c:	bne	22e48 <main@@Base+0xfaa4>
   23020:	ldr	r0, [sp, #12]
   23024:	ldr	r2, [sp, #16]
   23028:	mov	r1, r9
   2302c:	mov	r3, #7
   23030:	str	r5, [sp]
   23034:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   23038:	ldr	r3, [fp, #8]
   2303c:	cmp	r0, r9
   23040:	beq	22e48 <main@@Base+0xfaa4>
   23044:	mov	r2, #2
   23048:	mov	r1, #0
   2304c:	str	r2, [r3]
   23050:	str	r1, [r3, #4]
   23054:	ldr	r2, [sp, #8]
   23058:	str	r1, [r2]
   2305c:	b	22e44 <main@@Base+0xfaa0>
   23060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23064:	add	fp, sp, #28
   23068:	sub	sp, sp, #44	; 0x2c
   2306c:	mov	r6, r2
   23070:	ldr	r2, [fp, #8]
   23074:	mov	r5, r0
   23078:	mov	r0, #0
   2307c:	mov	r8, r3
   23080:	cmp	r1, r6
   23084:	strb	r0, [r2]
   23088:	beq	230cc <main@@Base+0xfd28>
   2308c:	ldrb	r0, [r1]
   23090:	cmp	r0, #46	; 0x2e
   23094:	beq	230ac <main@@Base+0xfd08>
   23098:	cmp	r0, #34	; 0x22
   2309c:	bne	230c4 <main@@Base+0xfd20>
   230a0:	mov	r0, #0
   230a4:	add	r1, r1, #1
   230a8:	b	230c8 <main@@Base+0xfd24>
   230ac:	mov	r0, r5
   230b0:	mov	r2, r6
   230b4:	mov	r3, #5
   230b8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   230bc:	mov	r1, r0
   230c0:	b	230cc <main@@Base+0xfd28>
   230c4:	mov	r0, #1
   230c8:	str	r0, [r5, #12]
   230cc:	ldr	r0, [r5, #12]
   230d0:	cmp	r0, #0
   230d4:	beq	230e8 <main@@Base+0xfd44>
   230d8:	mov	r7, r1
   230dc:	cmp	r7, r6
   230e0:	bne	2312c <main@@Base+0xfd88>
   230e4:	b	23230 <main@@Base+0xfe8c>
   230e8:	sub	r0, r6, r1
   230ec:	cmp	r0, #2
   230f0:	blt	23114 <main@@Base+0xfd70>
   230f4:	ldrb	r0, [r1]
   230f8:	cmp	r0, #32
   230fc:	bhi	230d8 <main@@Base+0xfd34>
   23100:	bne	23114 <main@@Base+0xfd70>
   23104:	mov	r7, r1
   23108:	ldrb	r0, [r7, #1]!
   2310c:	cmp	r0, #32
   23110:	bhi	23124 <main@@Base+0xfd80>
   23114:	mov	r0, r5
   23118:	mov	r2, r6
   2311c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   23120:	mov	r7, r0
   23124:	cmp	r7, r6
   23128:	beq	23230 <main@@Base+0xfe8c>
   2312c:	mov	r1, #0
   23130:	add	r0, r8, #4
   23134:	add	sl, sp, #32
   23138:	add	r9, sp, #28
   2313c:	str	r8, [sp, #12]
   23140:	str	r1, [sp, #16]
   23144:	mov	r1, #0
   23148:	str	r0, [sp, #8]
   2314c:	str	r1, [sp, #20]
   23150:	ldr	r4, [r8]
   23154:	mov	r8, r0
   23158:	add	r0, sp, #24
   2315c:	mov	r1, r7
   23160:	mov	r2, r6
   23164:	mov	r3, r9
   23168:	str	sl, [sp]
   2316c:	str	r0, [sp, #4]
   23170:	mov	r0, r5
   23174:	blx	r4
   23178:	cmp	r0, r6
   2317c:	beq	23230 <main@@Base+0xfe8c>
   23180:	mov	r4, r0
   23184:	cmp	r0, r7
   23188:	bne	2319c <main@@Base+0xfdf8>
   2318c:	ldr	r4, [r8], #4
   23190:	cmp	r4, #0
   23194:	bne	23158 <main@@Base+0xfdb4>
   23198:	b	23238 <main@@Base+0xfe94>
   2319c:	ldr	r7, [sp, #20]
   231a0:	cmp	r7, #0
   231a4:	ldrne	r0, [r5, #12]
   231a8:	cmpne	r0, #0
   231ac:	bne	2325c <main@@Base+0xfeb8>
   231b0:	ldr	r0, [sp, #28]
   231b4:	cmp	r0, #0
   231b8:	beq	231d4 <main@@Base+0xfe30>
   231bc:	mov	r0, r5
   231c0:	mov	r1, r4
   231c4:	mov	r2, r6
   231c8:	mov	r3, #8
   231cc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   231d0:	b	231ec <main@@Base+0xfe48>
   231d4:	ldr	r0, [sp, #32]
   231d8:	ldr	r1, [sp, #36]	; 0x24
   231dc:	orrs	r0, r0, r1
   231e0:	movwne	r0, #1
   231e4:	str	r0, [sp, #16]
   231e8:	mov	r0, r4
   231ec:	ldr	r8, [sp, #12]
   231f0:	cmp	r0, r6
   231f4:	beq	23230 <main@@Base+0xfe8c>
   231f8:	ldr	r0, [fp, #8]
   231fc:	ldr	r2, [sp, #16]
   23200:	add	r7, r7, #1
   23204:	str	r7, [sp, #20]
   23208:	mov	r7, r4
   2320c:	mov	r1, r0
   23210:	ldrb	r0, [r0]
   23214:	add	r0, r0, r2
   23218:	strb	r0, [r1]
   2321c:	ldr	r0, [sp, #24]
   23220:	cmp	r0, #0
   23224:	ldr	r0, [sp, #8]
   23228:	bne	23150 <main@@Base+0xfdac>
   2322c:	b	23250 <main@@Base+0xfeac>
   23230:	mov	r4, r6
   23234:	b	23250 <main@@Base+0xfeac>
   23238:	mov	r0, r5
   2323c:	mov	r1, r7
   23240:	mov	r2, r6
   23244:	mov	r3, #23
   23248:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2324c:	mov	r4, r0
   23250:	mov	r0, r4
   23254:	sub	sp, fp, #28
   23258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2325c:	mov	r0, r5
   23260:	mov	r1, r4
   23264:	mov	r2, r6
   23268:	mov	r3, #14
   2326c:	b	23248 <main@@Base+0xfea4>
   23270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23274:	add	fp, sp, #28
   23278:	sub	sp, sp, #44	; 0x2c
   2327c:	mov	r4, r2
   23280:	ldr	r2, [fp, #8]
   23284:	mov	r5, r0
   23288:	mov	r0, #0
   2328c:	mov	r6, r3
   23290:	cmp	r1, r4
   23294:	str	r0, [r2]
   23298:	beq	232dc <main@@Base+0xff38>
   2329c:	ldrb	r0, [r1]
   232a0:	cmp	r0, #46	; 0x2e
   232a4:	beq	232bc <main@@Base+0xff18>
   232a8:	cmp	r0, #34	; 0x22
   232ac:	bne	232d4 <main@@Base+0xff30>
   232b0:	mov	r0, #0
   232b4:	add	r1, r1, #1
   232b8:	b	232d8 <main@@Base+0xff34>
   232bc:	mov	r0, r5
   232c0:	mov	r2, r4
   232c4:	mov	r3, #5
   232c8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   232cc:	mov	r1, r0
   232d0:	b	232dc <main@@Base+0xff38>
   232d4:	mov	r0, #1
   232d8:	str	r0, [r5, #12]
   232dc:	ldr	r0, [r5, #12]
   232e0:	cmp	r0, #0
   232e4:	beq	232f8 <main@@Base+0xff54>
   232e8:	mov	r7, r1
   232ec:	cmp	r7, r4
   232f0:	bne	2333c <main@@Base+0xff98>
   232f4:	b	23404 <main@@Base+0x10060>
   232f8:	sub	r0, r4, r1
   232fc:	cmp	r0, #2
   23300:	blt	23324 <main@@Base+0xff80>
   23304:	ldrb	r0, [r1]
   23308:	cmp	r0, #32
   2330c:	bhi	232e8 <main@@Base+0xff44>
   23310:	bne	23324 <main@@Base+0xff80>
   23314:	mov	r7, r1
   23318:	ldrb	r0, [r7, #1]!
   2331c:	cmp	r0, #32
   23320:	bhi	23334 <main@@Base+0xff90>
   23324:	mov	r0, r5
   23328:	mov	r2, r4
   2332c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   23330:	mov	r7, r0
   23334:	cmp	r7, r4
   23338:	beq	23404 <main@@Base+0x10060>
   2333c:	add	r9, r6, #4
   23340:	mov	r0, #0
   23344:	add	sl, sp, #32
   23348:	add	r8, sp, #28
   2334c:	str	r6, [sp, #16]
   23350:	str	r0, [sp, #20]
   23354:	str	r9, [sp, #12]
   23358:	ldr	r6, [r6]
   2335c:	add	r0, sp, #24
   23360:	mov	r1, r7
   23364:	mov	r2, r4
   23368:	mov	r3, r8
   2336c:	str	sl, [sp]
   23370:	str	r0, [sp, #4]
   23374:	mov	r0, r5
   23378:	blx	r6
   2337c:	cmp	r0, r4
   23380:	beq	23404 <main@@Base+0x10060>
   23384:	cmp	r0, r7
   23388:	bne	2339c <main@@Base+0xfff8>
   2338c:	ldr	r6, [r9], #4
   23390:	cmp	r6, #0
   23394:	bne	2335c <main@@Base+0xffb8>
   23398:	b	2340c <main@@Base+0x10068>
   2339c:	ldr	r1, [sp, #20]
   233a0:	mov	r7, r0
   233a4:	cmp	r1, #0
   233a8:	ldrne	r0, [r5, #12]
   233ac:	cmpne	r0, #0
   233b0:	bne	23430 <main@@Base+0x1008c>
   233b4:	add	r1, r1, #1
   233b8:	ldr	r0, [sp, #32]
   233bc:	str	r1, [sp, #20]
   233c0:	ldr	r1, [sp, #36]	; 0x24
   233c4:	bl	337c0 <flatcc_json_parser_struct_as_root@@Base+0x658>
   233c8:	ldr	r2, [fp, #8]
   233cc:	ldr	r1, [sp, #28]
   233d0:	vmov	s2, r0
   233d4:	ldr	r6, [sp, #16]
   233d8:	ldr	r9, [sp, #12]
   233dc:	vneg.f32	s4, s2
   233e0:	vldr	s0, [r2]
   233e4:	cmp	r1, #0
   233e8:	vseleq.f32	s2, s2, s4
   233ec:	vadd.f32	s0, s0, s2
   233f0:	vstr	s0, [r2]
   233f4:	ldr	r0, [sp, #24]
   233f8:	cmp	r0, #0
   233fc:	bne	23358 <main@@Base+0xffb4>
   23400:	b	23424 <main@@Base+0x10080>
   23404:	mov	r7, r4
   23408:	b	23424 <main@@Base+0x10080>
   2340c:	mov	r0, r5
   23410:	mov	r1, r7
   23414:	mov	r2, r4
   23418:	mov	r3, #23
   2341c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23420:	mov	r7, r0
   23424:	mov	r0, r7
   23428:	sub	sp, fp, #28
   2342c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23430:	mov	r0, r5
   23434:	mov	r1, r7
   23438:	mov	r2, r4
   2343c:	mov	r3, #14
   23440:	b	2341c <main@@Base+0x10078>
   23444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23448:	add	fp, sp, #28
   2344c:	sub	sp, sp, #44	; 0x2c
   23450:	mov	r6, r2
   23454:	ldr	r2, [fp, #8]
   23458:	mov	r5, r0
   2345c:	mov	r0, #0
   23460:	mov	sl, r3
   23464:	cmp	r1, r6
   23468:	str	r0, [r2]
   2346c:	beq	234b0 <main@@Base+0x1010c>
   23470:	ldrb	r0, [r1]
   23474:	cmp	r0, #46	; 0x2e
   23478:	beq	23490 <main@@Base+0x100ec>
   2347c:	cmp	r0, #34	; 0x22
   23480:	bne	234a8 <main@@Base+0x10104>
   23484:	mov	r0, #0
   23488:	add	r1, r1, #1
   2348c:	b	234ac <main@@Base+0x10108>
   23490:	mov	r0, r5
   23494:	mov	r2, r6
   23498:	mov	r3, #5
   2349c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   234a0:	mov	r1, r0
   234a4:	b	234b0 <main@@Base+0x1010c>
   234a8:	mov	r0, #1
   234ac:	str	r0, [r5, #12]
   234b0:	ldr	r0, [r5, #12]
   234b4:	cmp	r0, #0
   234b8:	beq	234cc <main@@Base+0x10128>
   234bc:	mov	r7, r1
   234c0:	cmp	r7, r6
   234c4:	bne	23510 <main@@Base+0x1016c>
   234c8:	b	2364c <main@@Base+0x102a8>
   234cc:	sub	r0, r6, r1
   234d0:	cmp	r0, #2
   234d4:	blt	234f8 <main@@Base+0x10154>
   234d8:	ldrb	r0, [r1]
   234dc:	cmp	r0, #32
   234e0:	bhi	234bc <main@@Base+0x10118>
   234e4:	bne	234f8 <main@@Base+0x10154>
   234e8:	mov	r7, r1
   234ec:	ldrb	r0, [r7, #1]!
   234f0:	cmp	r0, #32
   234f4:	bhi	23508 <main@@Base+0x10164>
   234f8:	mov	r0, r5
   234fc:	mov	r2, r6
   23500:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   23504:	mov	r7, r0
   23508:	cmp	r7, r6
   2350c:	beq	2364c <main@@Base+0x102a8>
   23510:	add	r0, sl, #4
   23514:	mov	r1, #0
   23518:	mov	r2, #0
   2351c:	add	r8, sp, #32
   23520:	add	r9, sp, #28
   23524:	str	sl, [sp, #12]
   23528:	str	r1, [sp, #20]
   2352c:	str	r0, [sp, #8]
   23530:	ldr	r4, [sl]
   23534:	mov	sl, r0
   23538:	str	r2, [sp, #16]
   2353c:	add	r0, sp, #24
   23540:	mov	r1, r7
   23544:	mov	r2, r6
   23548:	mov	r3, r9
   2354c:	str	r8, [sp]
   23550:	str	r0, [sp, #4]
   23554:	mov	r0, r5
   23558:	blx	r4
   2355c:	cmp	r0, r6
   23560:	beq	2364c <main@@Base+0x102a8>
   23564:	mov	r4, r0
   23568:	cmp	r0, r7
   2356c:	bne	23580 <main@@Base+0x101dc>
   23570:	ldr	r4, [sl], #4
   23574:	cmp	r4, #0
   23578:	bne	2353c <main@@Base+0x10198>
   2357c:	b	23654 <main@@Base+0x102b0>
   23580:	ldr	r7, [sp, #20]
   23584:	cmp	r7, #0
   23588:	ldrne	r0, [r5, #12]
   2358c:	cmpne	r0, #0
   23590:	bne	23678 <main@@Base+0x102d4>
   23594:	ldr	r2, [sp, #28]
   23598:	ldr	r0, [sp, #32]
   2359c:	ldr	r1, [sp, #36]	; 0x24
   235a0:	cmp	r2, #0
   235a4:	beq	235cc <main@@Base+0x10228>
   235a8:	ldr	sl, [sp, #12]
   235ac:	subs	r2, r0, #-2147483647	; 0x80000001
   235b0:	sbcs	r1, r1, #0
   235b4:	bcc	23600 <main@@Base+0x1025c>
   235b8:	mov	r0, r5
   235bc:	mov	r1, r4
   235c0:	mov	r2, r6
   235c4:	mov	r3, #8
   235c8:	b	235ec <main@@Base+0x10248>
   235cc:	ldr	sl, [sp, #12]
   235d0:	subs	r2, r0, #-2147483648	; 0x80000000
   235d4:	sbcs	r1, r1, #0
   235d8:	bcc	23608 <main@@Base+0x10264>
   235dc:	mov	r0, r5
   235e0:	mov	r1, r4
   235e4:	mov	r2, r6
   235e8:	mov	r3, #7
   235ec:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   235f0:	ldr	r2, [sp, #16]
   235f4:	cmp	r0, r6
   235f8:	bne	23618 <main@@Base+0x10274>
   235fc:	b	2364c <main@@Base+0x102a8>
   23600:	rsb	r2, r0, #0
   23604:	b	2360c <main@@Base+0x10268>
   23608:	mov	r2, r0
   2360c:	mov	r0, r4
   23610:	cmp	r0, r6
   23614:	beq	2364c <main@@Base+0x102a8>
   23618:	ldr	r0, [fp, #8]
   2361c:	add	r7, r7, #1
   23620:	str	r7, [sp, #20]
   23624:	mov	r7, r4
   23628:	mov	r1, r0
   2362c:	ldr	r0, [r0]
   23630:	add	r0, r0, r2
   23634:	str	r0, [r1]
   23638:	ldr	r0, [sp, #24]
   2363c:	cmp	r0, #0
   23640:	ldr	r0, [sp, #8]
   23644:	bne	23530 <main@@Base+0x1018c>
   23648:	b	2366c <main@@Base+0x102c8>
   2364c:	mov	r4, r6
   23650:	b	2366c <main@@Base+0x102c8>
   23654:	mov	r0, r5
   23658:	mov	r1, r7
   2365c:	mov	r2, r6
   23660:	mov	r3, #23
   23664:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23668:	mov	r4, r0
   2366c:	mov	r0, r4
   23670:	sub	sp, fp, #28
   23674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23678:	mov	r0, r5
   2367c:	mov	r1, r4
   23680:	mov	r2, r6
   23684:	mov	r3, #14
   23688:	b	23664 <main@@Base+0x102c0>
   2368c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23690:	add	fp, sp, #28
   23694:	sub	sp, sp, #52	; 0x34
   23698:	mov	r6, r2
   2369c:	ldr	r2, [fp, #8]
   236a0:	mov	r5, r0
   236a4:	mov	r0, #0
   236a8:	mov	sl, r3
   236ac:	cmp	r1, r6
   236b0:	str	r0, [r2]
   236b4:	str	r0, [r2, #4]
   236b8:	beq	236fc <main@@Base+0x10358>
   236bc:	ldrb	r0, [r1]
   236c0:	cmp	r0, #46	; 0x2e
   236c4:	beq	236dc <main@@Base+0x10338>
   236c8:	cmp	r0, #34	; 0x22
   236cc:	bne	236f4 <main@@Base+0x10350>
   236d0:	mov	r0, #0
   236d4:	add	r1, r1, #1
   236d8:	b	236f8 <main@@Base+0x10354>
   236dc:	mov	r0, r5
   236e0:	mov	r2, r6
   236e4:	mov	r3, #5
   236e8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   236ec:	mov	r1, r0
   236f0:	b	236fc <main@@Base+0x10358>
   236f4:	mov	r0, #1
   236f8:	str	r0, [r5, #12]
   236fc:	ldr	r0, [r5, #12]
   23700:	cmp	r0, #0
   23704:	beq	23718 <main@@Base+0x10374>
   23708:	mov	r7, r1
   2370c:	cmp	r7, r6
   23710:	bne	2375c <main@@Base+0x103b8>
   23714:	b	238a4 <main@@Base+0x10500>
   23718:	sub	r0, r6, r1
   2371c:	cmp	r0, #2
   23720:	blt	23744 <main@@Base+0x103a0>
   23724:	ldrb	r0, [r1]
   23728:	cmp	r0, #32
   2372c:	bhi	23708 <main@@Base+0x10364>
   23730:	bne	23744 <main@@Base+0x103a0>
   23734:	mov	r7, r1
   23738:	ldrb	r0, [r7, #1]!
   2373c:	cmp	r0, #32
   23740:	bhi	23754 <main@@Base+0x103b0>
   23744:	mov	r0, r5
   23748:	mov	r2, r6
   2374c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   23750:	mov	r7, r0
   23754:	cmp	r7, r6
   23758:	beq	238a4 <main@@Base+0x10500>
   2375c:	add	r0, sl, #4
   23760:	mov	r1, #0
   23764:	mov	r3, #0
   23768:	add	r8, sp, #40	; 0x28
   2376c:	add	r9, sp, #36	; 0x24
   23770:	mov	r2, #0
   23774:	str	sl, [sp, #16]
   23778:	str	r1, [sp, #28]
   2377c:	str	r0, [sp, #12]
   23780:	ldr	r4, [sl]
   23784:	mov	sl, r0
   23788:	str	r2, [sp, #20]
   2378c:	str	r3, [sp, #24]
   23790:	add	r0, sp, #32
   23794:	mov	r1, r7
   23798:	mov	r2, r6
   2379c:	mov	r3, r9
   237a0:	str	r8, [sp]
   237a4:	str	r0, [sp, #4]
   237a8:	mov	r0, r5
   237ac:	blx	r4
   237b0:	cmp	r0, r6
   237b4:	beq	238a4 <main@@Base+0x10500>
   237b8:	mov	r4, r0
   237bc:	cmp	r0, r7
   237c0:	bne	237d4 <main@@Base+0x10430>
   237c4:	ldr	r4, [sl], #4
   237c8:	cmp	r4, #0
   237cc:	bne	23790 <main@@Base+0x103ec>
   237d0:	b	238ac <main@@Base+0x10508>
   237d4:	ldr	r7, [sp, #28]
   237d8:	cmp	r7, #0
   237dc:	ldrne	r0, [r5, #12]
   237e0:	cmpne	r0, #0
   237e4:	bne	238d0 <main@@Base+0x1052c>
   237e8:	add	r2, sp, #36	; 0x24
   237ec:	ldm	r2, {r0, r1, r2}
   237f0:	cmp	r0, #0
   237f4:	beq	2381c <main@@Base+0x10478>
   237f8:	ldr	sl, [sp, #16]
   237fc:	subs	r0, r1, #1
   23800:	sbcs	r0, r2, #-2147483648	; 0x80000000
   23804:	bcc	23854 <main@@Base+0x104b0>
   23808:	mov	r0, r5
   2380c:	mov	r1, r4
   23810:	mov	r2, r6
   23814:	mov	r3, #8
   23818:	b	2383c <main@@Base+0x10498>
   2381c:	ldr	sl, [sp, #16]
   23820:	cmn	r2, #1
   23824:	mov	r0, r4
   23828:	bgt	23848 <main@@Base+0x104a4>
   2382c:	mov	r0, r5
   23830:	mov	r1, r4
   23834:	mov	r2, r6
   23838:	mov	r3, #7
   2383c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23840:	ldr	r1, [sp, #24]
   23844:	ldr	r2, [sp, #20]
   23848:	cmp	r0, r6
   2384c:	bne	23868 <main@@Base+0x104c4>
   23850:	b	238a4 <main@@Base+0x10500>
   23854:	rsbs	r1, r1, #0
   23858:	mov	r0, r4
   2385c:	rsc	r2, r2, #0
   23860:	cmp	r0, r6
   23864:	beq	238a4 <main@@Base+0x10500>
   23868:	ldr	r0, [fp, #8]
   2386c:	add	r7, r7, #1
   23870:	str	r7, [sp, #28]
   23874:	mov	r7, r0
   23878:	ldm	r0, {r0, r3}
   2387c:	adds	r0, r0, r1
   23880:	adc	r3, r3, r2
   23884:	stm	r7, {r0, r3}
   23888:	mov	r3, r1
   2388c:	mov	r7, r4
   23890:	ldr	r0, [sp, #32]
   23894:	cmp	r0, #0
   23898:	ldr	r0, [sp, #12]
   2389c:	bne	23780 <main@@Base+0x103dc>
   238a0:	b	238c4 <main@@Base+0x10520>
   238a4:	mov	r4, r6
   238a8:	b	238c4 <main@@Base+0x10520>
   238ac:	mov	r0, r5
   238b0:	mov	r1, r7
   238b4:	mov	r2, r6
   238b8:	mov	r3, #23
   238bc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   238c0:	mov	r4, r0
   238c4:	mov	r0, r4
   238c8:	sub	sp, fp, #28
   238cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238d0:	mov	r0, r5
   238d4:	mov	r1, r4
   238d8:	mov	r2, r6
   238dc:	mov	r3, #14
   238e0:	b	238bc <main@@Base+0x10518>
   238e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238e8:	add	fp, sp, #28
   238ec:	sub	sp, sp, #44	; 0x2c
   238f0:	mov	r6, r2
   238f4:	ldr	r2, [fp, #8]
   238f8:	mov	r5, r0
   238fc:	mov	r0, #0
   23900:	mov	sl, r3
   23904:	cmp	r1, r6
   23908:	str	r0, [r2]
   2390c:	beq	23950 <main@@Base+0x105ac>
   23910:	ldrb	r0, [r1]
   23914:	cmp	r0, #46	; 0x2e
   23918:	beq	23930 <main@@Base+0x1058c>
   2391c:	cmp	r0, #34	; 0x22
   23920:	bne	23948 <main@@Base+0x105a4>
   23924:	mov	r0, #0
   23928:	add	r1, r1, #1
   2392c:	b	2394c <main@@Base+0x105a8>
   23930:	mov	r0, r5
   23934:	mov	r2, r6
   23938:	mov	r3, #5
   2393c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23940:	mov	r1, r0
   23944:	b	23950 <main@@Base+0x105ac>
   23948:	mov	r0, #1
   2394c:	str	r0, [r5, #12]
   23950:	ldr	r0, [r5, #12]
   23954:	cmp	r0, #0
   23958:	beq	2396c <main@@Base+0x105c8>
   2395c:	mov	r7, r1
   23960:	cmp	r7, r6
   23964:	bne	239b0 <main@@Base+0x1060c>
   23968:	b	23ae0 <main@@Base+0x1073c>
   2396c:	sub	r0, r6, r1
   23970:	cmp	r0, #2
   23974:	blt	23998 <main@@Base+0x105f4>
   23978:	ldrb	r0, [r1]
   2397c:	cmp	r0, #32
   23980:	bhi	2395c <main@@Base+0x105b8>
   23984:	bne	23998 <main@@Base+0x105f4>
   23988:	mov	r7, r1
   2398c:	ldrb	r0, [r7, #1]!
   23990:	cmp	r0, #32
   23994:	bhi	239a8 <main@@Base+0x10604>
   23998:	mov	r0, r5
   2399c:	mov	r2, r6
   239a0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   239a4:	mov	r7, r0
   239a8:	cmp	r7, r6
   239ac:	beq	23ae0 <main@@Base+0x1073c>
   239b0:	mov	r1, #0
   239b4:	add	r0, sl, #4
   239b8:	add	r8, sp, #32
   239bc:	add	r9, sp, #28
   239c0:	str	sl, [sp, #12]
   239c4:	str	r1, [sp, #16]
   239c8:	mov	r1, #0
   239cc:	str	r0, [sp, #8]
   239d0:	str	r1, [sp, #20]
   239d4:	ldr	r4, [sl]
   239d8:	mov	sl, r0
   239dc:	add	r0, sp, #24
   239e0:	mov	r1, r7
   239e4:	mov	r2, r6
   239e8:	mov	r3, r9
   239ec:	str	r8, [sp]
   239f0:	str	r0, [sp, #4]
   239f4:	mov	r0, r5
   239f8:	blx	r4
   239fc:	cmp	r0, r6
   23a00:	beq	23ae0 <main@@Base+0x1073c>
   23a04:	mov	r4, r0
   23a08:	cmp	r0, r7
   23a0c:	bne	23a20 <main@@Base+0x1067c>
   23a10:	ldr	r4, [sl], #4
   23a14:	cmp	r4, #0
   23a18:	bne	239dc <main@@Base+0x10638>
   23a1c:	b	23ae8 <main@@Base+0x10744>
   23a20:	ldr	r7, [sp, #20]
   23a24:	cmp	r7, #0
   23a28:	ldrne	r0, [r5, #12]
   23a2c:	cmpne	r0, #0
   23a30:	bne	23b0c <main@@Base+0x10768>
   23a34:	ldr	r0, [sp, #28]
   23a38:	cmp	r0, #0
   23a3c:	beq	23a64 <main@@Base+0x106c0>
   23a40:	mov	r0, r5
   23a44:	mov	r1, r4
   23a48:	mov	r2, r6
   23a4c:	mov	r3, #8
   23a50:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23a54:	ldr	sl, [sp, #12]
   23a58:	cmp	r0, r6
   23a5c:	bne	23aa8 <main@@Base+0x10704>
   23a60:	b	23ae0 <main@@Base+0x1073c>
   23a64:	ldr	r0, [sp, #36]	; 0x24
   23a68:	ldr	sl, [sp, #12]
   23a6c:	cmp	r0, #0
   23a70:	beq	23a94 <main@@Base+0x106f0>
   23a74:	mov	r0, r5
   23a78:	mov	r1, r4
   23a7c:	mov	r2, r6
   23a80:	mov	r3, #7
   23a84:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23a88:	cmp	r0, r6
   23a8c:	bne	23aa8 <main@@Base+0x10704>
   23a90:	b	23ae0 <main@@Base+0x1073c>
   23a94:	ldr	r0, [sp, #32]
   23a98:	str	r0, [sp, #16]
   23a9c:	mov	r0, r4
   23aa0:	cmp	r0, r6
   23aa4:	beq	23ae0 <main@@Base+0x1073c>
   23aa8:	ldr	r0, [fp, #8]
   23aac:	ldr	r2, [sp, #16]
   23ab0:	add	r7, r7, #1
   23ab4:	str	r7, [sp, #20]
   23ab8:	mov	r7, r4
   23abc:	mov	r1, r0
   23ac0:	ldr	r0, [r0]
   23ac4:	add	r0, r0, r2
   23ac8:	str	r0, [r1]
   23acc:	ldr	r0, [sp, #24]
   23ad0:	cmp	r0, #0
   23ad4:	ldr	r0, [sp, #8]
   23ad8:	bne	239d4 <main@@Base+0x10630>
   23adc:	b	23b00 <main@@Base+0x1075c>
   23ae0:	mov	r4, r6
   23ae4:	b	23b00 <main@@Base+0x1075c>
   23ae8:	mov	r0, r5
   23aec:	mov	r1, r7
   23af0:	mov	r2, r6
   23af4:	mov	r3, #23
   23af8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23afc:	mov	r4, r0
   23b00:	mov	r0, r4
   23b04:	sub	sp, fp, #28
   23b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b0c:	mov	r0, r5
   23b10:	mov	r1, r4
   23b14:	mov	r2, r6
   23b18:	mov	r3, #14
   23b1c:	b	23af8 <main@@Base+0x10754>
   23b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b24:	add	fp, sp, #28
   23b28:	sub	sp, sp, #52	; 0x34
   23b2c:	mov	r6, r2
   23b30:	ldr	r2, [fp, #8]
   23b34:	mov	r5, r0
   23b38:	mov	r0, #0
   23b3c:	mov	r8, r3
   23b40:	cmp	r1, r6
   23b44:	str	r0, [r2]
   23b48:	str	r0, [r2, #4]
   23b4c:	beq	23b90 <main@@Base+0x107ec>
   23b50:	ldrb	r0, [r1]
   23b54:	cmp	r0, #46	; 0x2e
   23b58:	beq	23b70 <main@@Base+0x107cc>
   23b5c:	cmp	r0, #34	; 0x22
   23b60:	bne	23b88 <main@@Base+0x107e4>
   23b64:	mov	r0, #0
   23b68:	add	r1, r1, #1
   23b6c:	b	23b8c <main@@Base+0x107e8>
   23b70:	mov	r0, r5
   23b74:	mov	r2, r6
   23b78:	mov	r3, #5
   23b7c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23b80:	mov	r1, r0
   23b84:	b	23b90 <main@@Base+0x107ec>
   23b88:	mov	r0, #1
   23b8c:	str	r0, [r5, #12]
   23b90:	ldr	r0, [r5, #12]
   23b94:	cmp	r0, #0
   23b98:	beq	23bac <main@@Base+0x10808>
   23b9c:	mov	r7, r1
   23ba0:	cmp	r7, r6
   23ba4:	bne	23bf0 <main@@Base+0x1084c>
   23ba8:	b	23d00 <main@@Base+0x1095c>
   23bac:	sub	r0, r6, r1
   23bb0:	cmp	r0, #2
   23bb4:	blt	23bd8 <main@@Base+0x10834>
   23bb8:	ldrb	r0, [r1]
   23bbc:	cmp	r0, #32
   23bc0:	bhi	23b9c <main@@Base+0x107f8>
   23bc4:	bne	23bd8 <main@@Base+0x10834>
   23bc8:	mov	r7, r1
   23bcc:	ldrb	r0, [r7, #1]!
   23bd0:	cmp	r0, #32
   23bd4:	bhi	23be8 <main@@Base+0x10844>
   23bd8:	mov	r0, r5
   23bdc:	mov	r2, r6
   23be0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   23be4:	mov	r7, r0
   23be8:	cmp	r7, r6
   23bec:	beq	23d00 <main@@Base+0x1095c>
   23bf0:	mov	r1, #0
   23bf4:	add	r0, r8, #4
   23bf8:	add	sl, sp, #40	; 0x28
   23bfc:	add	r9, sp, #36	; 0x24
   23c00:	str	r8, [sp, #16]
   23c04:	str	r1, [sp, #24]
   23c08:	mov	r1, #0
   23c0c:	str	r0, [sp, #12]
   23c10:	str	r1, [sp, #20]
   23c14:	mov	r1, #0
   23c18:	str	r1, [sp, #28]
   23c1c:	ldr	r4, [r8]
   23c20:	mov	r8, r0
   23c24:	add	r0, sp, #32
   23c28:	mov	r1, r7
   23c2c:	mov	r2, r6
   23c30:	mov	r3, r9
   23c34:	str	sl, [sp]
   23c38:	str	r0, [sp, #4]
   23c3c:	mov	r0, r5
   23c40:	blx	r4
   23c44:	cmp	r0, r6
   23c48:	beq	23d00 <main@@Base+0x1095c>
   23c4c:	mov	r4, r0
   23c50:	cmp	r0, r7
   23c54:	bne	23c68 <main@@Base+0x108c4>
   23c58:	ldr	r4, [r8], #4
   23c5c:	cmp	r4, #0
   23c60:	bne	23c24 <main@@Base+0x10880>
   23c64:	b	23d08 <main@@Base+0x10964>
   23c68:	ldr	r7, [sp, #28]
   23c6c:	cmp	r7, #0
   23c70:	ldrne	r0, [r5, #12]
   23c74:	cmpne	r0, #0
   23c78:	bne	23d2c <main@@Base+0x10988>
   23c7c:	ldr	r0, [sp, #36]	; 0x24
   23c80:	cmp	r0, #0
   23c84:	beq	23ca0 <main@@Base+0x108fc>
   23c88:	mov	r0, r5
   23c8c:	mov	r1, r4
   23c90:	mov	r2, r6
   23c94:	mov	r3, #8
   23c98:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23c9c:	b	23cb4 <main@@Base+0x10910>
   23ca0:	ldr	r0, [sp, #40]	; 0x28
   23ca4:	str	r0, [sp, #24]
   23ca8:	ldr	r0, [sp, #44]	; 0x2c
   23cac:	str	r0, [sp, #20]
   23cb0:	mov	r0, r4
   23cb4:	ldr	r8, [sp, #16]
   23cb8:	cmp	r0, r6
   23cbc:	beq	23d00 <main@@Base+0x1095c>
   23cc0:	ldr	r0, [fp, #8]
   23cc4:	add	r7, r7, #1
   23cc8:	ldr	r3, [sp, #24]
   23ccc:	str	r7, [sp, #28]
   23cd0:	mov	r7, r4
   23cd4:	mov	r2, r0
   23cd8:	ldrd	r0, [r0]
   23cdc:	adds	r0, r0, r3
   23ce0:	ldr	r3, [sp, #20]
   23ce4:	adc	r1, r1, r3
   23ce8:	strd	r0, [r2]
   23cec:	ldr	r0, [sp, #32]
   23cf0:	cmp	r0, #0
   23cf4:	ldr	r0, [sp, #12]
   23cf8:	bne	23c1c <main@@Base+0x10878>
   23cfc:	b	23d20 <main@@Base+0x1097c>
   23d00:	mov	r4, r6
   23d04:	b	23d20 <main@@Base+0x1097c>
   23d08:	mov	r0, r5
   23d0c:	mov	r1, r7
   23d10:	mov	r2, r6
   23d14:	mov	r3, #23
   23d18:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23d1c:	mov	r4, r0
   23d20:	mov	r0, r4
   23d24:	sub	sp, fp, #28
   23d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d2c:	mov	r0, r5
   23d30:	mov	r1, r4
   23d34:	mov	r2, r6
   23d38:	mov	r3, #14
   23d3c:	b	23d18 <main@@Base+0x10974>
   23d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23d44:	add	fp, sp, #28
   23d48:	sub	sp, sp, #44	; 0x2c
   23d4c:	mov	r4, r2
   23d50:	ldr	r2, [fp, #8]
   23d54:	mov	r5, r0
   23d58:	mov	r0, #0
   23d5c:	mov	r9, r3
   23d60:	cmp	r1, r4
   23d64:	str	r0, [r2]
   23d68:	str	r0, [r2, #4]
   23d6c:	beq	23db0 <main@@Base+0x10a0c>
   23d70:	ldrb	r0, [r1]
   23d74:	cmp	r0, #46	; 0x2e
   23d78:	beq	23d90 <main@@Base+0x109ec>
   23d7c:	cmp	r0, #34	; 0x22
   23d80:	bne	23da8 <main@@Base+0x10a04>
   23d84:	mov	r0, #0
   23d88:	add	r1, r1, #1
   23d8c:	b	23dac <main@@Base+0x10a08>
   23d90:	mov	r0, r5
   23d94:	mov	r2, r4
   23d98:	mov	r3, #5
   23d9c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23da0:	mov	r1, r0
   23da4:	b	23db0 <main@@Base+0x10a0c>
   23da8:	mov	r0, #1
   23dac:	str	r0, [r5, #12]
   23db0:	ldr	r0, [r5, #12]
   23db4:	cmp	r0, #0
   23db8:	beq	23dcc <main@@Base+0x10a28>
   23dbc:	mov	r7, r1
   23dc0:	cmp	r7, r4
   23dc4:	bne	23e10 <main@@Base+0x10a6c>
   23dc8:	b	23ee4 <main@@Base+0x10b40>
   23dcc:	sub	r0, r4, r1
   23dd0:	cmp	r0, #2
   23dd4:	blt	23df8 <main@@Base+0x10a54>
   23dd8:	ldrb	r0, [r1]
   23ddc:	cmp	r0, #32
   23de0:	bhi	23dbc <main@@Base+0x10a18>
   23de4:	bne	23df8 <main@@Base+0x10a54>
   23de8:	mov	r7, r1
   23dec:	ldrb	r0, [r7, #1]!
   23df0:	cmp	r0, #32
   23df4:	bhi	23e08 <main@@Base+0x10a64>
   23df8:	mov	r0, r5
   23dfc:	mov	r2, r4
   23e00:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   23e04:	mov	r7, r0
   23e08:	cmp	r7, r4
   23e0c:	beq	23ee4 <main@@Base+0x10b40>
   23e10:	add	r0, r9, #4
   23e14:	mov	r1, #0
   23e18:	add	sl, sp, #32
   23e1c:	add	r8, sp, #28
   23e20:	str	r9, [sp, #16]
   23e24:	str	r1, [sp, #20]
   23e28:	str	r0, [sp, #12]
   23e2c:	ldr	r6, [r9]
   23e30:	mov	r9, r0
   23e34:	add	r0, sp, #24
   23e38:	mov	r1, r7
   23e3c:	mov	r2, r4
   23e40:	mov	r3, r8
   23e44:	str	sl, [sp]
   23e48:	str	r0, [sp, #4]
   23e4c:	mov	r0, r5
   23e50:	blx	r6
   23e54:	cmp	r0, r4
   23e58:	beq	23ee4 <main@@Base+0x10b40>
   23e5c:	cmp	r0, r7
   23e60:	bne	23e74 <main@@Base+0x10ad0>
   23e64:	ldr	r6, [r9], #4
   23e68:	cmp	r6, #0
   23e6c:	bne	23e34 <main@@Base+0x10a90>
   23e70:	b	23eec <main@@Base+0x10b48>
   23e74:	ldr	r1, [sp, #20]
   23e78:	mov	r7, r0
   23e7c:	cmp	r1, #0
   23e80:	ldrne	r0, [r5, #12]
   23e84:	cmpne	r0, #0
   23e88:	bne	23f10 <main@@Base+0x10b6c>
   23e8c:	add	r1, r1, #1
   23e90:	ldr	r0, [sp, #32]
   23e94:	str	r1, [sp, #20]
   23e98:	ldr	r1, [sp, #36]	; 0x24
   23e9c:	bl	33588 <flatcc_json_parser_struct_as_root@@Base+0x420>
   23ea0:	ldr	r2, [fp, #8]
   23ea4:	ldr	r3, [sp, #28]
   23ea8:	vmov	d17, r0, r1
   23eac:	ldr	r9, [sp, #16]
   23eb0:	vldr	d16, [r2]
   23eb4:	mov	r6, r2
   23eb8:	eor	r2, r1, #-2147483648	; 0x80000000
   23ebc:	cmp	r3, #0
   23ec0:	vmov	d18, r0, r2
   23ec4:	vseleq.f64	d17, d17, d18
   23ec8:	vadd.f64	d16, d16, d17
   23ecc:	vstr	d16, [r6]
   23ed0:	ldr	r0, [sp, #24]
   23ed4:	cmp	r0, #0
   23ed8:	ldr	r0, [sp, #12]
   23edc:	bne	23e2c <main@@Base+0x10a88>
   23ee0:	b	23f04 <main@@Base+0x10b60>
   23ee4:	mov	r7, r4
   23ee8:	b	23f04 <main@@Base+0x10b60>
   23eec:	mov	r0, r5
   23ef0:	mov	r1, r7
   23ef4:	mov	r2, r4
   23ef8:	mov	r3, #23
   23efc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   23f00:	mov	r7, r0
   23f04:	mov	r0, r7
   23f08:	sub	sp, fp, #28
   23f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f10:	mov	r0, r5
   23f14:	mov	r1, r7
   23f18:	mov	r2, r4
   23f1c:	mov	r3, #14
   23f20:	b	23efc <main@@Base+0x10b58>
   23f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23f28:	add	fp, sp, #28
   23f2c:	sub	sp, sp, #12
   23f30:	mov	sl, r1
   23f34:	sub	r1, r2, r1
   23f38:	cmp	r1, #8
   23f3c:	movcs	r1, #8
   23f40:	and	r1, r1, #15
   23f44:	sub	r1, r1, #1
   23f48:	cmp	r1, #7
   23f4c:	bhi	24190 <main@@Base+0x10dec>
   23f50:	str	r3, [sp, #8]
   23f54:	add	r3, pc, #36	; 0x24
   23f58:	mov	r8, #0
   23f5c:	mov	ip, #0
   23f60:	mov	lr, #0
   23f64:	mov	r5, #0
   23f68:	mov	r6, #0
   23f6c:	mov	r7, #0
   23f70:	mov	r4, #0
   23f74:	ldr	r9, [r3, r1, lsl #2]
   23f78:	mov	r1, #0
   23f7c:	add	pc, r3, r9
   23f80:	andeq	r0, r0, r4, rrx
   23f84:	andeq	r0, r0, ip, asr r0
   23f88:	andeq	r0, r0, r4, asr r0
   23f8c:	andeq	r0, r0, ip, asr #32
   23f90:	andeq	r0, r0, r0, asr #32
   23f94:	andeq	r0, r0, r4, lsr r0
   23f98:	andeq	r0, r0, r4, lsr #32
   23f9c:	andeq	r0, r0, r0, lsr #32
   23fa0:	ldrb	ip, [sl, #7]
   23fa4:	ldrb	r1, [sl, #6]
   23fa8:	mov	lr, r8
   23fac:	orr	r1, ip, r1, lsl #8
   23fb0:	mov	r8, r1
   23fb4:	ldrb	r1, [sl, #5]
   23fb8:	mov	r5, lr
   23fbc:	orr	r8, r8, r1, lsl #16
   23fc0:	ldrb	r1, [sl, #4]
   23fc4:	mov	r6, r5
   23fc8:	orr	r8, r8, r1, lsl #24
   23fcc:	ldrb	r1, [sl, #3]
   23fd0:	orr	r7, r1, r6
   23fd4:	ldrb	r1, [sl, #2]
   23fd8:	orr	r4, r7, r1, lsl #8
   23fdc:	ldrb	r1, [sl, #1]
   23fe0:	orr	r1, r4, r1, lsl #16
   23fe4:	ldrb	r7, [sl]
   23fe8:	movw	r3, #28276	; 0x6e74
   23fec:	ldr	r6, [fp, #12]
   23ff0:	movt	r3, #29285	; 0x7265
   23ff4:	eor	r3, r8, r3
   23ff8:	orr	r1, r1, r7, lsl #24
   23ffc:	movw	r7, #20577	; 0x5061
   24000:	movt	r7, #18798	; 0x496e
   24004:	eor	r7, r1, r7
   24008:	orrs	r3, r3, r7
   2400c:	bne	24144 <main@@Base+0x10da0>
   24010:	add	r8, sl, #8
   24014:	sub	r1, r2, r8
   24018:	cmp	r1, #8
   2401c:	movcs	r1, #8
   24020:	and	r1, r1, #15
   24024:	sub	r1, r1, #1
   24028:	cmp	r1, #7
   2402c:	bhi	24190 <main@@Base+0x10dec>
   24030:	str	r0, [sp, #4]
   24034:	add	r3, pc, #36	; 0x24
   24038:	mov	r6, #0
   2403c:	mov	r0, #0
   24040:	mov	r9, #0
   24044:	mov	r7, #0
   24048:	mov	r5, #0
   2404c:	mov	r4, #0
   24050:	mov	ip, #0
   24054:	ldr	lr, [r3, r1, lsl #2]
   24058:	mov	r1, #0
   2405c:	add	pc, r3, lr
   24060:	andeq	r0, r0, r4, rrx
   24064:	andeq	r0, r0, ip, asr r0
   24068:	andeq	r0, r0, r4, asr r0
   2406c:	andeq	r0, r0, ip, asr #32
   24070:	andeq	r0, r0, r0, asr #32
   24074:	andeq	r0, r0, r4, lsr r0
   24078:	andeq	r0, r0, r4, lsr #32
   2407c:	andeq	r0, r0, r0, lsr #32
   24080:	ldrb	r0, [sl, #15]
   24084:	ldrb	r1, [sl, #14]
   24088:	mov	r9, r6
   2408c:	orr	r0, r0, r1, lsl #8
   24090:	mov	r6, r0
   24094:	ldrb	r0, [sl, #13]
   24098:	mov	r7, r9
   2409c:	orr	r6, r6, r0, lsl #16
   240a0:	ldrb	r0, [sl, #12]
   240a4:	mov	r5, r7
   240a8:	orr	r6, r6, r0, lsl #24
   240ac:	ldrb	r0, [sl, #11]
   240b0:	orr	r1, r0, r5
   240b4:	ldrb	r0, [sl, #10]
   240b8:	orr	r4, r1, r0, lsl #8
   240bc:	ldrb	r0, [sl, #9]
   240c0:	orr	ip, r4, r0, lsl #16
   240c4:	ldrb	r1, [r8]
   240c8:	movw	r0, #24931	; 0x6163
   240cc:	movw	r3, #28005	; 0x6d65
   240d0:	movt	r0, #29552	; 0x7370
   240d4:	movt	r3, #20065	; 0x4e61
   240d8:	eor	r0, r6, r0
   240dc:	orr	r1, ip, r1, lsl #24
   240e0:	eor	r1, r1, r3
   240e4:	orrs	r0, r0, r1
   240e8:	bne	24190 <main@@Base+0x10dec>
   240ec:	add	r6, sl, #16
   240f0:	mov	r1, #-268435456	; 0xf0000000
   240f4:	sub	r0, r2, r6
   240f8:	cmp	r0, #8
   240fc:	movcs	r0, #8
   24100:	add	r0, r1, r0, lsl #28
   24104:	asr	r0, r0, #28
   24108:	cmp	r0, #0
   2410c:	blt	24190 <main@@Base+0x10dec>
   24110:	ldrb	r0, [r6]
   24114:	cmp	r0, #101	; 0x65
   24118:	bne	24190 <main@@Base+0x10dec>
   2411c:	ldr	r0, [fp, #12]
   24120:	mov	r1, r6
   24124:	mov	r3, #1
   24128:	mov	r8, #1
   2412c:	str	r0, [sp]
   24130:	ldr	r0, [sp, #4]
   24134:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24138:	cmp	r0, r6
   2413c:	bne	24170 <main@@Base+0x10dcc>
   24140:	b	24190 <main@@Base+0x10dec>
   24144:	movw	r3, #20037	; 0x4e45
   24148:	movt	r3, #20047	; 0x4e4f
   2414c:	teq	r1, r3
   24150:	bne	24190 <main@@Base+0x10dec>
   24154:	mov	r1, sl
   24158:	mov	r3, #4
   2415c:	str	r6, [sp]
   24160:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24164:	cmp	r0, sl
   24168:	beq	24190 <main@@Base+0x10dec>
   2416c:	mov	r8, #0
   24170:	mov	sl, r0
   24174:	ldr	r0, [fp, #8]
   24178:	mov	r1, #0
   2417c:	str	r8, [r0]
   24180:	str	r1, [r0, #4]
   24184:	mov	r0, #0
   24188:	ldr	r1, [sp, #8]
   2418c:	str	r0, [r1]
   24190:	mov	r0, sl
   24194:	sub	sp, fp, #28
   24198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2419c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241a0:	add	fp, sp, #28
   241a4:	sub	sp, sp, #12
   241a8:	mov	r5, r1
   241ac:	sub	r1, r2, r1
   241b0:	cmp	r1, #8
   241b4:	movcs	r1, #8
   241b8:	and	r1, r1, #15
   241bc:	sub	r1, r1, #1
   241c0:	cmp	r1, #7
   241c4:	bhi	24344 <main@@Base+0x10fa0>
   241c8:	str	r3, [sp, #8]
   241cc:	add	r6, pc, #36	; 0x24
   241d0:	mov	lr, #0
   241d4:	mov	ip, #0
   241d8:	mov	r9, #0
   241dc:	mov	sl, #0
   241e0:	mov	r4, #0
   241e4:	mov	r3, #0
   241e8:	mov	r7, #0
   241ec:	ldr	r8, [r6, r1, lsl #2]
   241f0:	mov	r1, #0
   241f4:	add	pc, r6, r8
   241f8:	andeq	r0, r0, r4, rrx
   241fc:	andeq	r0, r0, ip, asr r0
   24200:	andeq	r0, r0, r4, asr r0
   24204:	andeq	r0, r0, ip, asr #32
   24208:	andeq	r0, r0, r0, asr #32
   2420c:	andeq	r0, r0, r4, lsr r0
   24210:	andeq	r0, r0, r4, lsr #32
   24214:	andeq	r0, r0, r0, lsr #32
   24218:	ldrb	ip, [r5, #7]
   2421c:	ldrb	r1, [r5, #6]
   24220:	mov	r9, lr
   24224:	orr	r1, ip, r1, lsl #8
   24228:	mov	lr, r1
   2422c:	ldrb	r1, [r5, #5]
   24230:	mov	sl, r9
   24234:	orr	lr, lr, r1, lsl #16
   24238:	ldrb	r1, [r5, #4]
   2423c:	orr	lr, lr, r1, lsl #24
   24240:	mov	r1, sl
   24244:	ldrb	r3, [r5, #3]
   24248:	orr	r4, r3, r1
   2424c:	ldrb	r1, [r5, #2]
   24250:	orr	r3, r4, r1, lsl #8
   24254:	ldrb	r1, [r5, #1]
   24258:	orr	r7, r3, r1, lsl #16
   2425c:	ldrb	r1, [r5]
   24260:	ldr	r3, [fp, #12]
   24264:	ldr	r8, [fp, #8]
   24268:	orr	r1, r7, r1, lsl #24
   2426c:	movw	r7, #30769	; 0x7831
   24270:	movt	r7, #26725	; 0x6865
   24274:	cmp	r1, r7
   24278:	bhi	242a8 <main@@Base+0x10f04>
   2427c:	teq	r1, r7
   24280:	bne	24344 <main@@Base+0x10fa0>
   24284:	str	r3, [sp]
   24288:	mov	r1, r5
   2428c:	mov	r3, #4
   24290:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24294:	cmp	r0, r5
   24298:	beq	24344 <main@@Base+0x10fa0>
   2429c:	mov	r1, #0
   242a0:	mov	r2, #3
   242a4:	b	24330 <main@@Base+0x10f8c>
   242a8:	lsr	r4, lr, #16
   242ac:	movw	r6, #25959	; 0x6567
   242b0:	movw	r7, #26725	; 0x6865
   242b4:	orr	r4, r4, r1, lsl #16
   242b8:	movt	r6, #30830	; 0x786e
   242bc:	eor	r7, r7, r1, lsr #16
   242c0:	eor	r6, r4, r6
   242c4:	orrs	r7, r6, r7
   242c8:	bne	242fc <main@@Base+0x10f58>
   242cc:	str	r3, [sp]
   242d0:	mov	r1, r5
   242d4:	mov	r3, #6
   242d8:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   242dc:	cmp	r0, r5
   242e0:	beq	24344 <main@@Base+0x10fa0>
   242e4:	mvn	r2, #1
   242e8:	mvn	r1, #0
   242ec:	str	r2, [r8]
   242f0:	str	r1, [r8, #4]
   242f4:	mov	r1, #1
   242f8:	b	24338 <main@@Base+0x10f94>
   242fc:	movw	r7, #30770	; 0x7832
   24300:	movt	r7, #26725	; 0x6865
   24304:	teq	r1, r7
   24308:	bne	24344 <main@@Base+0x10fa0>
   2430c:	str	r3, [sp]
   24310:	mov	r1, r5
   24314:	mov	r3, #4
   24318:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   2431c:	cmp	r0, r5
   24320:	beq	24344 <main@@Base+0x10fa0>
   24324:	movw	r2, #48815	; 0xbeaf
   24328:	mov	r1, #0
   2432c:	movt	r2, #32431	; 0x7eaf
   24330:	str	r2, [r8]
   24334:	str	r1, [r8, #4]
   24338:	ldr	r2, [sp, #8]
   2433c:	mov	r5, r0
   24340:	str	r1, [r2]
   24344:	mov	r0, r5
   24348:	sub	sp, fp, #28
   2434c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24354:	add	fp, sp, #28
   24358:	sub	sp, sp, #12
   2435c:	mov	r8, r1
   24360:	sub	r1, r2, r1
   24364:	cmp	r1, #8
   24368:	movcs	r1, #8
   2436c:	and	r1, r1, #15
   24370:	sub	r1, r1, #1
   24374:	cmp	r1, #7
   24378:	bhi	2453c <main@@Base+0x11198>
   2437c:	str	r3, [sp, #8]
   24380:	add	r5, pc, #36	; 0x24
   24384:	mov	sl, #0
   24388:	mov	ip, #0
   2438c:	mov	lr, #0
   24390:	mov	r4, #0
   24394:	mov	r6, #0
   24398:	mov	r7, #0
   2439c:	mov	r3, #0
   243a0:	ldr	r9, [r5, r1, lsl #2]
   243a4:	mov	r1, #0
   243a8:	add	pc, r5, r9
   243ac:	andeq	r0, r0, r4, rrx
   243b0:	andeq	r0, r0, ip, asr r0
   243b4:	andeq	r0, r0, r4, asr r0
   243b8:	andeq	r0, r0, ip, asr #32
   243bc:	andeq	r0, r0, r0, asr #32
   243c0:	andeq	r0, r0, r4, lsr r0
   243c4:	andeq	r0, r0, r4, lsr #32
   243c8:	andeq	r0, r0, r0, lsr #32
   243cc:	ldrb	ip, [r8, #7]
   243d0:	ldrb	r1, [r8, #6]
   243d4:	mov	lr, sl
   243d8:	orr	r1, ip, r1, lsl #8
   243dc:	mov	sl, r1
   243e0:	ldrb	r1, [r8, #5]
   243e4:	mov	r4, lr
   243e8:	orr	sl, sl, r1, lsl #16
   243ec:	ldrb	r1, [r8, #4]
   243f0:	mov	r6, r4
   243f4:	orr	sl, sl, r1, lsl #24
   243f8:	ldrb	r1, [r8, #3]
   243fc:	orr	r7, r1, r6
   24400:	ldrb	r1, [r8, #2]
   24404:	orr	r3, r7, r1, lsl #8
   24408:	ldrb	r1, [r8, #1]
   2440c:	orr	r1, r3, r1, lsl #16
   24410:	ldrb	r7, [r8]
   24414:	ldr	r3, [fp, #12]
   24418:	ldr	r5, [fp, #8]
   2441c:	orr	r4, r1, r7, lsl #24
   24420:	movw	r1, #29745	; 0x7431
   24424:	movt	r1, #26990	; 0x696e
   24428:	cmp	r4, r1
   2442c:	bhi	2445c <main@@Base+0x110b8>
   24430:	teq	r4, r1
   24434:	bne	2453c <main@@Base+0x11198>
   24438:	str	r3, [sp]
   2443c:	mov	r1, r8
   24440:	mov	r3, #4
   24444:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24448:	cmp	r0, r8
   2444c:	beq	2453c <main@@Base+0x11198>
   24450:	mov	r1, #0
   24454:	mov	r2, #2
   24458:	b	244a8 <main@@Base+0x11104>
   2445c:	movw	r6, #0
   24460:	movw	r1, #29806	; 0x746e
   24464:	movt	r6, #25959	; 0x6567
   24468:	movt	r1, #26990	; 0x696e
   2446c:	subs	r7, sl, r6
   24470:	sbcs	r7, r4, r1
   24474:	bcs	244b4 <main@@Base+0x11110>
   24478:	movw	r1, #29746	; 0x7432
   2447c:	movt	r1, #26990	; 0x696e
   24480:	teq	r4, r1
   24484:	bne	2453c <main@@Base+0x11198>
   24488:	str	r3, [sp]
   2448c:	mov	r1, r8
   24490:	mov	r3, #4
   24494:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24498:	cmp	r0, r8
   2449c:	beq	2453c <main@@Base+0x11198>
   244a0:	mov	r1, #0
   244a4:	mov	r2, #42	; 0x2a
   244a8:	str	r2, [r5]
   244ac:	str	r1, [r5, #4]
   244b0:	b	24530 <main@@Base+0x1118c>
   244b4:	eor	r1, r4, r1
   244b8:	add	r7, r6, #12800	; 0x3200
   244bc:	bic	r4, sl, #255	; 0xff
   244c0:	eor	r7, r4, r7
   244c4:	orrs	r7, r7, r1
   244c8:	bne	244f4 <main@@Base+0x11150>
   244cc:	str	r3, [sp]
   244d0:	mov	r1, r8
   244d4:	mov	r3, #7
   244d8:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   244dc:	cmp	r0, r8
   244e0:	beq	2453c <main@@Base+0x11198>
   244e4:	mvn	r2, #1
   244e8:	mvn	r1, #0
   244ec:	add	r2, r2, #1
   244f0:	b	24524 <main@@Base+0x11180>
   244f4:	bfc	sl, #0, #16
   244f8:	eor	r7, sl, r6
   244fc:	orrs	r1, r7, r1
   24500:	bne	2453c <main@@Base+0x11198>
   24504:	str	r3, [sp]
   24508:	mov	r1, r8
   2450c:	mov	r3, #6
   24510:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24514:	cmp	r0, r8
   24518:	beq	2453c <main@@Base+0x11198>
   2451c:	mvn	r1, #0
   24520:	mvn	r2, #1
   24524:	str	r2, [r5]
   24528:	str	r1, [r5, #4]
   2452c:	mov	r1, #1
   24530:	ldr	r2, [sp, #8]
   24534:	mov	r8, r0
   24538:	str	r1, [r2]
   2453c:	mov	r0, r8
   24540:	sub	sp, fp, #28
   24544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24548:	push	{r4, r5, r6, r7, fp, lr}
   2454c:	add	fp, sp, #16
   24550:	sub	sp, sp, #8
   24554:	mov	r5, r1
   24558:	sub	r1, r2, r1
   2455c:	mov	r4, r3
   24560:	cmp	r1, #8
   24564:	movcs	r1, #8
   24568:	and	r1, r1, #15
   2456c:	sub	r3, r1, #1
   24570:	cmp	r3, #7
   24574:	bhi	2468c <main@@Base+0x112e8>
   24578:	add	r7, pc, #8
   2457c:	mov	r1, #0
   24580:	ldr	r3, [r7, r3, lsl #2]
   24584:	add	pc, r7, r3
   24588:	andeq	r0, r0, r8, lsr r0
   2458c:	andeq	r0, r0, r0, lsr r0
   24590:	andeq	r0, r0, r8, lsr #32
   24594:	andeq	r0, r0, r0, lsr #32
   24598:	andeq	r0, r0, r0, lsr #32
   2459c:	andeq	r0, r0, r0, lsr #32
   245a0:	andeq	r0, r0, r0, lsr #32
   245a4:	andeq	r0, r0, r0, lsr #32
   245a8:	ldrb	r3, [r5, #3]
   245ac:	orr	r1, r3, r1
   245b0:	ldrb	r3, [r5, #2]
   245b4:	orr	r1, r1, r3, lsl #8
   245b8:	ldrb	r3, [r5, #1]
   245bc:	orr	r1, r1, r3, lsl #16
   245c0:	ldrb	r6, [r5]
   245c4:	ldr	r3, [fp, #12]
   245c8:	ldr	r7, [fp, #8]
   245cc:	orr	r1, r1, r6, lsl #24
   245d0:	movw	r6, #26417	; 0x6731
   245d4:	movt	r6, #28261	; 0x6e65
   245d8:	cmp	r1, r6
   245dc:	bhi	2460c <main@@Base+0x11268>
   245e0:	teq	r1, r6
   245e4:	bne	2468c <main@@Base+0x112e8>
   245e8:	str	r3, [sp]
   245ec:	mov	r1, r5
   245f0:	mov	r3, #4
   245f4:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   245f8:	cmp	r0, r5
   245fc:	beq	2468c <main@@Base+0x112e8>
   24600:	mvn	r1, #0
   24604:	mvn	r2, #11
   24608:	b	24678 <main@@Base+0x112d4>
   2460c:	movw	r6, #26418	; 0x6732
   24610:	movt	r6, #28261	; 0x6e65
   24614:	teq	r1, r6
   24618:	beq	24654 <main@@Base+0x112b0>
   2461c:	movw	r6, #26419	; 0x6733
   24620:	movt	r6, #28261	; 0x6e65
   24624:	teq	r1, r6
   24628:	bne	2468c <main@@Base+0x112e8>
   2462c:	str	r3, [sp]
   24630:	mov	r1, r5
   24634:	mov	r3, #4
   24638:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   2463c:	cmp	r0, r5
   24640:	beq	2468c <main@@Base+0x112e8>
   24644:	mvn	r2, #11
   24648:	mvn	r1, #0
   2464c:	add	r2, r2, #2
   24650:	b	24678 <main@@Base+0x112d4>
   24654:	str	r3, [sp]
   24658:	mov	r1, r5
   2465c:	mov	r3, #4
   24660:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24664:	cmp	r0, r5
   24668:	beq	2468c <main@@Base+0x112e8>
   2466c:	mvn	r2, #11
   24670:	mvn	r1, #0
   24674:	add	r2, r2, #1
   24678:	str	r2, [r7]
   2467c:	str	r1, [r7, #4]
   24680:	mov	r1, #1
   24684:	mov	r5, r0
   24688:	str	r1, [r4]
   2468c:	mov	r0, r5
   24690:	sub	sp, fp, #16
   24694:	pop	{r4, r5, r6, r7, fp, pc}
   24698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2469c:	add	fp, sp, #28
   246a0:	sub	sp, sp, #12
   246a4:	mov	sl, r1
   246a8:	sub	r1, r2, r1
   246ac:	cmp	r1, #8
   246b0:	movcs	r1, #8
   246b4:	and	r1, r1, #15
   246b8:	sub	r7, r1, #1
   246bc:	cmp	r7, #7
   246c0:	bhi	24940 <main@@Base+0x1159c>
   246c4:	str	r3, [sp, #8]
   246c8:	add	r1, pc, #36	; 0x24
   246cc:	mov	r9, #0
   246d0:	mov	ip, #0
   246d4:	mov	lr, #0
   246d8:	mov	r6, #0
   246dc:	mov	r4, #0
   246e0:	mov	r5, #0
   246e4:	mov	r8, #0
   246e8:	ldr	r3, [r1, r7, lsl #2]
   246ec:	mov	r7, #0
   246f0:	add	pc, r1, r3
   246f4:	andeq	r0, r0, r4, rrx
   246f8:	andeq	r0, r0, ip, asr r0
   246fc:	andeq	r0, r0, r4, asr r0
   24700:	andeq	r0, r0, ip, asr #32
   24704:	andeq	r0, r0, r0, asr #32
   24708:	andeq	r0, r0, r4, lsr r0
   2470c:	andeq	r0, r0, r4, lsr #32
   24710:	andeq	r0, r0, r0, lsr #32
   24714:	ldrb	ip, [sl, #7]
   24718:	ldrb	r1, [sl, #6]
   2471c:	mov	lr, r9
   24720:	orr	r1, ip, r1, lsl #8
   24724:	mov	r9, r1
   24728:	ldrb	r1, [sl, #5]
   2472c:	mov	r6, lr
   24730:	orr	r9, r9, r1, lsl #16
   24734:	ldrb	r1, [sl, #4]
   24738:	mov	r7, r6
   2473c:	orr	r9, r9, r1, lsl #24
   24740:	ldrb	r1, [sl, #3]
   24744:	orr	r4, r1, r7
   24748:	ldrb	r1, [sl, #2]
   2474c:	orr	r5, r4, r1, lsl #8
   24750:	ldrb	r1, [sl, #1]
   24754:	orr	r8, r5, r1, lsl #16
   24758:	ldrb	r1, [sl]
   2475c:	ldr	lr, [fp, #12]
   24760:	ldr	r5, [fp, #8]
   24764:	orr	r6, r8, r1, lsl #24
   24768:	movw	r1, #20036	; 0x4e44
   2476c:	movt	r1, #20047	; 0x4e4f
   24770:	cmp	r6, r1
   24774:	bhi	247d4 <main@@Base+0x11430>
   24778:	movw	r7, #28160	; 0x6e00
   2477c:	movw	r4, #28523	; 0x6f6b
   24780:	and	r3, r9, #-16777216	; 0xff000000
   24784:	movt	r7, #18017	; 0x4661
   24788:	movt	r4, #17007	; 0x426f
   2478c:	subs	r1, r9, r7
   24790:	sbcs	r1, r6, r4
   24794:	bcs	24820 <main@@Base+0x1147c>
   24798:	movw	r1, #27756	; 0x6c6c
   2479c:	eor	r3, r3, #1694498816	; 0x65000000
   247a0:	movt	r1, #16997	; 0x4265
   247a4:	eor	r1, r6, r1
   247a8:	orrs	r1, r3, r1
   247ac:	bne	24940 <main@@Base+0x1159c>
   247b0:	mov	r1, sl
   247b4:	mov	r3, #5
   247b8:	str	lr, [sp]
   247bc:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   247c0:	cmp	r0, sl
   247c4:	beq	24940 <main@@Base+0x1159c>
   247c8:	mov	r1, #0
   247cc:	mov	r2, #9
   247d0:	b	2492c <main@@Base+0x11588>
   247d4:	movw	r7, #26725	; 0x6865
   247d8:	mvn	r1, #-1912602624	; 0x8e000000
   247dc:	movt	r7, #20340	; 0x4f74
   247e0:	subs	r1, r1, r9
   247e4:	sbcs	r1, r7, r6
   247e8:	bcc	2485c <main@@Base+0x114b8>
   247ec:	movw	r1, #20037	; 0x4e45
   247f0:	movt	r1, #20047	; 0x4e4f
   247f4:	teq	r6, r1
   247f8:	bne	24940 <main@@Base+0x1159c>
   247fc:	mov	r1, sl
   24800:	mov	r3, #4
   24804:	str	lr, [sp]
   24808:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   2480c:	cmp	r0, sl
   24810:	beq	24940 <main@@Base+0x1159c>
   24814:	mov	r1, #0
   24818:	str	r1, [r5]
   2481c:	b	24930 <main@@Base+0x1158c>
   24820:	movw	r1, #19553	; 0x4c61
   24824:	eor	r3, r3, #1845493760	; 0x6e000000
   24828:	movt	r1, #19829	; 0x4d75
   2482c:	eor	r1, r6, r1
   24830:	orrs	r1, r3, r1
   24834:	bne	248b0 <main@@Base+0x1150c>
   24838:	mov	r1, sl
   2483c:	mov	r3, #5
   24840:	str	lr, [sp]
   24844:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24848:	cmp	r0, sl
   2484c:	beq	24940 <main@@Base+0x1159c>
   24850:	mov	r1, #0
   24854:	mov	r2, #2
   24858:	b	2492c <main@@Base+0x11588>
   2485c:	movw	r4, #25964	; 0x656c
   24860:	movw	ip, #28789	; 0x7075
   24864:	movt	r4, #28282	; 0x6e7a
   24868:	movt	ip, #21089	; 0x5261
   2486c:	subs	r1, r9, r4
   24870:	sbcs	r1, r6, ip
   24874:	bcs	248e8 <main@@Base+0x11544>
   24878:	and	r3, r9, #-16777216	; 0xff000000
   2487c:	eor	r1, r6, r7
   24880:	eor	r3, r3, #1912602624	; 0x72000000
   24884:	orrs	r1, r3, r1
   24888:	bne	24940 <main@@Base+0x1159c>
   2488c:	mov	r1, sl
   24890:	mov	r3, #5
   24894:	str	lr, [sp]
   24898:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   2489c:	cmp	r0, sl
   248a0:	beq	24940 <main@@Base+0x1159c>
   248a4:	mov	r1, #0
   248a8:	mov	r2, #11
   248ac:	b	2492c <main@@Base+0x11588>
   248b0:	bic	r3, r9, #255	; 0xff
   248b4:	eor	r1, r6, r4
   248b8:	eor	r3, r3, r7
   248bc:	orrs	r1, r3, r1
   248c0:	bne	24940 <main@@Base+0x1159c>
   248c4:	mov	r1, sl
   248c8:	mov	r3, #7
   248cc:	str	lr, [sp]
   248d0:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   248d4:	cmp	r0, sl
   248d8:	beq	24940 <main@@Base+0x1159c>
   248dc:	mov	r1, #0
   248e0:	mov	r2, #10
   248e4:	b	2492c <main@@Base+0x11588>
   248e8:	lsr	r3, r9, #16
   248ec:	movw	r7, #25956	; 0x6564
   248f0:	movw	r1, #21870	; 0x556e
   248f4:	orr	r3, r3, r6, lsl #16
   248f8:	movt	r7, #30067	; 0x7573
   248fc:	eor	r1, r1, r6, lsr #16
   24900:	eor	r3, r3, r7
   24904:	orrs	r1, r3, r1
   24908:	bne	2494c <main@@Base+0x115a8>
   2490c:	mov	r1, sl
   24910:	mov	r3, #6
   24914:	str	lr, [sp]
   24918:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   2491c:	cmp	r0, sl
   24920:	beq	24940 <main@@Base+0x1159c>
   24924:	mov	r1, #0
   24928:	mov	r2, #255	; 0xff
   2492c:	str	r2, [r5]
   24930:	str	r1, [r5, #4]
   24934:	mov	sl, r0
   24938:	ldr	r2, [sp, #8]
   2493c:	str	r1, [r2]
   24940:	mov	r0, sl
   24944:	sub	sp, fp, #28
   24948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2494c:	eor	r1, r9, r4
   24950:	eor	r3, r6, ip
   24954:	orrs	r1, r1, r3
   24958:	bne	24940 <main@@Base+0x1159c>
   2495c:	mov	r1, sl
   24960:	mov	r3, #8
   24964:	str	lr, [sp]
   24968:	mov	r4, #8
   2496c:	bl	2f754 <flatcc_json_parser_match_constant@@Base>
   24970:	cmp	r0, sl
   24974:	beq	24940 <main@@Base+0x1159c>
   24978:	mov	r1, #0
   2497c:	str	r4, [r5]
   24980:	b	24930 <main@@Base+0x1158c>
   24984:	mov	r1, #0
   24988:	cmp	r0, #5
   2498c:	movwcc	r1, #1
   24990:	mov	r0, r1
   24994:	bx	lr
   24998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2499c:	add	fp, sp, #28
   249a0:	sub	sp, sp, #68	; 0x44
   249a4:	mov	r9, r0
   249a8:	mov	r0, #0
   249ac:	mov	r4, r1
   249b0:	mov	r1, #3
   249b4:	mov	r6, r3
   249b8:	mov	r8, r2
   249bc:	str	r0, [r3]
   249c0:	ldr	r0, [r9]
   249c4:	bl	2bd4c <flatcc_builder_start_table@@Base>
   249c8:	cmp	r0, #0
   249cc:	bne	27e4c <main@@Base+0x14aa8>
   249d0:	cmp	r4, r8
   249d4:	beq	24a08 <main@@Base+0x11664>
   249d8:	ldrb	r0, [r4]
   249dc:	cmp	r0, #123	; 0x7b
   249e0:	bne	24a08 <main@@Base+0x11664>
   249e4:	add	r1, r4, #1
   249e8:	sub	r0, r8, r1
   249ec:	cmp	r0, #2
   249f0:	blt	24a38 <main@@Base+0x11694>
   249f4:	ldrb	r0, [r1]
   249f8:	cmp	r0, #32
   249fc:	bls	24a28 <main@@Base+0x11684>
   24a00:	mov	r4, r1
   24a04:	b	24a48 <main@@Base+0x116a4>
   24a08:	mov	r0, r9
   24a0c:	mov	r1, r4
   24a10:	mov	r2, r8
   24a14:	mov	r3, #21
   24a18:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   24a1c:	mov	r4, r0
   24a20:	add	r0, r9, #24
   24a24:	b	27e40 <main@@Base+0x14a9c>
   24a28:	bne	24a38 <main@@Base+0x11694>
   24a2c:	ldrb	r0, [r4, #2]!
   24a30:	cmp	r0, #32
   24a34:	bhi	24a48 <main@@Base+0x116a4>
   24a38:	mov	r0, r9
   24a3c:	mov	r2, r8
   24a40:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   24a44:	mov	r4, r0
   24a48:	cmp	r4, r8
   24a4c:	mov	r2, r8
   24a50:	beq	24a8c <main@@Base+0x116e8>
   24a54:	ldrb	r0, [r4]
   24a58:	cmp	r0, #125	; 0x7d
   24a5c:	bne	24a88 <main@@Base+0x116e4>
   24a60:	add	r1, r4, #1
   24a64:	sub	r0, r8, r1
   24a68:	cmp	r0, #2
   24a6c:	blt	27e98 <main@@Base+0x14af4>
   24a70:	ldrb	r0, [r1]
   24a74:	cmp	r0, #32
   24a78:	bls	27e88 <main@@Base+0x14ae4>
   24a7c:	mov	r4, r1
   24a80:	add	r0, r9, #24
   24a84:	b	27e40 <main@@Base+0x14a9c>
   24a88:	mov	r2, r4
   24a8c:	add	r0, r9, #24
   24a90:	movw	r1, #25186	; 0x6262
   24a94:	str	r9, [sp, #24]
   24a98:	str	r6, [sp, #32]
   24a9c:	str	r0, [sp, #20]
   24aa0:	add	r0, r9, #12
   24aa4:	movt	r1, #25186	; 0x6262
   24aa8:	str	r0, [sp, #28]
   24aac:	movw	r0, #257	; 0x101
   24ab0:	movt	r0, #257	; 0x101
   24ab4:	add	r0, r1, r0
   24ab8:	str	r0, [sp, #16]
   24abc:	movw	r0, #514	; 0x202
   24ac0:	movt	r0, #514	; 0x202
   24ac4:	add	r0, r1, r0
   24ac8:	str	r0, [sp, #12]
   24acc:	cmp	r2, r8
   24ad0:	mov	sl, r8
   24ad4:	beq	24b28 <main@@Base+0x11784>
   24ad8:	ldrb	r0, [r2]
   24adc:	cmp	r0, #46	; 0x2e
   24ae0:	beq	24afc <main@@Base+0x11758>
   24ae4:	cmp	r0, #34	; 0x22
   24ae8:	bne	24b18 <main@@Base+0x11774>
   24aec:	ldr	r0, [sp, #28]
   24af0:	mov	r1, #0
   24af4:	add	sl, r2, #1
   24af8:	b	24b24 <main@@Base+0x11780>
   24afc:	mov	r1, r2
   24b00:	mov	r0, r9
   24b04:	mov	r2, r8
   24b08:	mov	r3, #5
   24b0c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   24b10:	mov	sl, r0
   24b14:	b	24b28 <main@@Base+0x11784>
   24b18:	ldr	r0, [sp, #28]
   24b1c:	mov	r1, #1
   24b20:	mov	sl, r2
   24b24:	str	r1, [r0]
   24b28:	sub	r0, r8, sl
   24b2c:	mov	r1, #8
   24b30:	cmp	r0, #8
   24b34:	movcs	r0, r1
   24b38:	and	r0, r0, #15
   24b3c:	sub	r1, r0, #1
   24b40:	cmp	r1, #7
   24b44:	bhi	24de4 <main@@Base+0x11a40>
   24b48:	add	r6, pc, #36	; 0x24
   24b4c:	mov	r0, #0
   24b50:	mov	ip, #0
   24b54:	mov	lr, #0
   24b58:	mov	r2, #0
   24b5c:	mov	r3, #0
   24b60:	mov	r7, #0
   24b64:	mov	r5, #0
   24b68:	mov	r4, #0
   24b6c:	ldr	r1, [r6, r1, lsl #2]
   24b70:	add	pc, r6, r1
   24b74:	andeq	r0, r0, r4, rrx
   24b78:	andeq	r0, r0, ip, asr r0
   24b7c:	andeq	r0, r0, r4, asr r0
   24b80:	andeq	r0, r0, ip, asr #32
   24b84:	andeq	r0, r0, r0, asr #32
   24b88:	andeq	r0, r0, r4, lsr r0
   24b8c:	andeq	r0, r0, r4, lsr #32
   24b90:	andeq	r0, r0, r0, lsr #32
   24b94:	ldrb	ip, [sl, #7]
   24b98:	ldrb	r1, [sl, #6]
   24b9c:	mov	lr, r0
   24ba0:	orr	r1, ip, r1, lsl #8
   24ba4:	mov	r0, r1
   24ba8:	ldrb	r1, [sl, #5]
   24bac:	mov	r2, lr
   24bb0:	orr	r0, r0, r1, lsl #16
   24bb4:	ldrb	r1, [sl, #4]
   24bb8:	mov	r3, r2
   24bbc:	orr	r0, r0, r1, lsl #24
   24bc0:	ldrb	r1, [sl, #3]
   24bc4:	orr	r7, r1, r3
   24bc8:	ldrb	r1, [sl, #2]
   24bcc:	orr	r5, r7, r1, lsl #8
   24bd0:	ldrb	r1, [sl, #1]
   24bd4:	orr	r4, r5, r1, lsl #16
   24bd8:	movw	r1, #28526	; 0x6f6e
   24bdc:	movw	r2, #29556	; 0x7374
   24be0:	movt	r1, #27251	; 0x6a73
   24be4:	movt	r2, #29797	; 0x7465
   24be8:	eor	r0, r0, r1
   24bec:	ldrb	r1, [sl]
   24bf0:	orr	r1, r4, r1, lsl #24
   24bf4:	eor	r1, r1, r2
   24bf8:	orrs	r0, r0, r1
   24bfc:	bne	24de4 <main@@Base+0x11a40>
   24c00:	add	r1, sl, #8
   24c04:	mov	r2, #8
   24c08:	sub	r0, r8, r1
   24c0c:	cmp	r0, #8
   24c10:	movcs	r0, r2
   24c14:	and	r0, r0, #15
   24c18:	sub	r2, r0, #1
   24c1c:	cmp	r2, #7
   24c20:	bhi	24df0 <main@@Base+0x11a4c>
   24c24:	add	r5, pc, #36	; 0x24
   24c28:	mov	r9, #0
   24c2c:	mov	ip, #0
   24c30:	mov	lr, #0
   24c34:	mov	r7, #0
   24c38:	mov	r3, #0
   24c3c:	mov	r6, #0
   24c40:	mov	r4, #0
   24c44:	ldr	r0, [r5, r2, lsl #2]
   24c48:	mov	r2, #0
   24c4c:	add	pc, r5, r0
   24c50:	andeq	r0, r0, r4, rrx
   24c54:	andeq	r0, r0, ip, asr r0
   24c58:	andeq	r0, r0, r4, asr r0
   24c5c:	andeq	r0, r0, ip, asr #32
   24c60:	andeq	r0, r0, r0, asr #32
   24c64:	andeq	r0, r0, r4, lsr r0
   24c68:	andeq	r0, r0, r4, lsr #32
   24c6c:	andeq	r0, r0, r0, lsr #32
   24c70:	ldrb	ip, [sl, #15]
   24c74:	ldrb	r0, [sl, #14]
   24c78:	mov	lr, r9
   24c7c:	orr	r0, ip, r0, lsl #8
   24c80:	mov	r9, r0
   24c84:	ldrb	r0, [sl, #13]
   24c88:	mov	r7, lr
   24c8c:	orr	r9, r9, r0, lsl #16
   24c90:	ldrb	r0, [sl, #12]
   24c94:	mov	r3, r7
   24c98:	orr	r9, r9, r0, lsl #24
   24c9c:	ldrb	r0, [sl, #11]
   24ca0:	orr	r6, r0, r3
   24ca4:	ldrb	r0, [sl, #10]
   24ca8:	orr	r4, r6, r0, lsl #8
   24cac:	ldrb	r0, [sl, #9]
   24cb0:	orr	r2, r4, r0, lsl #16
   24cb4:	ldrb	r3, [r1]
   24cb8:	movw	r0, #28769	; 0x7061
   24cbc:	movt	r0, #27000	; 0x6978
   24cc0:	eor	r0, r9, r0
   24cc4:	orr	r2, r2, r3, lsl #24
   24cc8:	movw	r3, #25958	; 0x6566
   24ccc:	movt	r3, #28786	; 0x7072
   24cd0:	eor	r2, r2, r3
   24cd4:	orrs	r0, r0, r2
   24cd8:	bne	24df0 <main@@Base+0x11a4c>
   24cdc:	add	ip, sl, #16
   24ce0:	mov	r0, #8
   24ce4:	sub	r9, r8, ip
   24ce8:	cmp	r9, #8
   24cec:	movcc	r0, r9
   24cf0:	and	r0, r0, #15
   24cf4:	sub	r1, r0, #1
   24cf8:	cmp	r1, #7
   24cfc:	bhi	2515c <main@@Base+0x11db8>
   24d00:	add	r4, pc, #28
   24d04:	mov	r0, #0
   24d08:	mov	r2, #0
   24d0c:	mov	r3, #0
   24d10:	mov	r6, #0
   24d14:	mov	r5, #0
   24d18:	ldr	r7, [r4, r1, lsl #2]
   24d1c:	mov	r1, #0
   24d20:	add	pc, r4, r7
   24d24:	andeq	r0, r0, r0, asr r0
   24d28:	andeq	r0, r0, r8, asr #32
   24d2c:	andeq	r0, r0, r0, asr #32
   24d30:	andeq	r0, r0, r8, lsr r0
   24d34:	andeq	r0, r0, r8, lsr #32
   24d38:	andeq	r0, r0, r0, lsr #32
   24d3c:	andeq	r0, r0, r0, lsr #32
   24d40:	andeq	r0, r0, r0, lsr #32
   24d44:	ldrb	r1, [sl, #21]
   24d48:	lsl	r1, r1, #16
   24d4c:	ldrb	r2, [sl, #20]
   24d50:	orr	r1, r1, r2, lsl #24
   24d54:	mov	r2, r0
   24d58:	mov	r0, r1
   24d5c:	ldrb	r1, [sl, #19]
   24d60:	orr	r3, r1, r2
   24d64:	ldrb	r1, [sl, #18]
   24d68:	orr	r6, r3, r1, lsl #8
   24d6c:	ldrb	r1, [sl, #17]
   24d70:	orr	r5, r6, r1, lsl #16
   24d74:	mov	r6, r0
   24d78:	movw	r1, #0
   24d7c:	movw	r3, #26990	; 0x696e
   24d80:	bfc	r6, #0, #16
   24d84:	movt	r1, #26418	; 0x6732
   24d88:	movt	r3, #29299	; 0x7273
   24d8c:	eor	r2, r6, r1
   24d90:	ldrb	r1, [ip]
   24d94:	orr	r1, r5, r1, lsl #24
   24d98:	eor	r5, r1, r3
   24d9c:	orrs	r2, r2, r5
   24da0:	bne	24dfc <main@@Base+0x11a58>
   24da4:	cmp	r9, #7
   24da8:	blt	2515c <main@@Base+0x11db8>
   24dac:	ldr	r2, [sp, #28]
   24db0:	mov	r1, sl
   24db4:	ldrb	r0, [r1, #22]!
   24db8:	ldr	r2, [r2]
   24dbc:	cmp	r2, #0
   24dc0:	beq	24e58 <main@@Base+0x11ab4>
   24dc4:	cmp	r0, #33	; 0x21
   24dc8:	bcc	24dd4 <main@@Base+0x11a30>
   24dcc:	cmp	r0, #58	; 0x3a
   24dd0:	bne	2515c <main@@Base+0x11db8>
   24dd4:	ldr	r0, [sp, #28]
   24dd8:	mov	r2, #0
   24ddc:	str	r2, [r0]
   24de0:	b	24e64 <main@@Base+0x11ac0>
   24de4:	mov	r0, r9
   24de8:	mov	r1, sl
   24dec:	b	25168 <main@@Base+0x11dc4>
   24df0:	ldr	r9, [sp, #24]
   24df4:	mov	r0, r9
   24df8:	b	25168 <main@@Base+0x11dc4>
   24dfc:	cmp	r9, #6
   24e00:	blt	25100 <main@@Base+0x11d5c>
   24e04:	movw	r2, #26990	; 0x696e
   24e08:	and	r0, r0, #-16777216	; 0xff000000
   24e0c:	movt	r2, #29299	; 0x7273
   24e10:	eor	r0, r0, #1728053248	; 0x67000000
   24e14:	eor	r1, r1, r2
   24e18:	orrs	r0, r0, r1
   24e1c:	bne	25100 <main@@Base+0x11d5c>
   24e20:	ldr	r2, [sp, #28]
   24e24:	mov	r1, sl
   24e28:	ldrb	r0, [r1, #21]!
   24e2c:	ldr	r2, [r2]
   24e30:	cmp	r2, #0
   24e34:	beq	24e88 <main@@Base+0x11ae4>
   24e38:	cmp	r0, #33	; 0x21
   24e3c:	bcc	24e48 <main@@Base+0x11aa4>
   24e40:	cmp	r0, #58	; 0x3a
   24e44:	bne	25100 <main@@Base+0x11d5c>
   24e48:	ldr	r0, [sp, #28]
   24e4c:	mov	r2, #0
   24e50:	str	r2, [r0]
   24e54:	b	24e94 <main@@Base+0x11af0>
   24e58:	cmp	r0, #34	; 0x22
   24e5c:	bne	2515c <main@@Base+0x11db8>
   24e60:	add	r1, sl, #23
   24e64:	ldr	r5, [sp, #24]
   24e68:	sub	r0, r8, r1
   24e6c:	cmp	r0, #2
   24e70:	blt	24ec8 <main@@Base+0x11b24>
   24e74:	ldrb	r0, [r1]
   24e78:	cmp	r0, #32
   24e7c:	bls	24eb4 <main@@Base+0x11b10>
   24e80:	mov	r4, r1
   24e84:	b	24ee0 <main@@Base+0x11b3c>
   24e88:	cmp	r0, #34	; 0x22
   24e8c:	bne	25100 <main@@Base+0x11d5c>
   24e90:	add	r1, sl, #22
   24e94:	sub	r0, r8, r1
   24e98:	cmp	r0, #2
   24e9c:	blt	24f48 <main@@Base+0x11ba4>
   24ea0:	ldrb	r0, [r1]
   24ea4:	cmp	r0, #32
   24ea8:	bls	24f34 <main@@Base+0x11b90>
   24eac:	mov	r4, r1
   24eb0:	b	24f60 <main@@Base+0x11bbc>
   24eb4:	bne	24ec8 <main@@Base+0x11b24>
   24eb8:	mov	r4, r1
   24ebc:	ldrb	r0, [r4, #1]!
   24ec0:	cmp	r0, #32
   24ec4:	bhi	24ee0 <main@@Base+0x11b3c>
   24ec8:	mov	r0, r5
   24ecc:	mov	r2, r8
   24ed0:	mov	r4, ip
   24ed4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   24ed8:	mov	ip, r4
   24edc:	mov	r4, r0
   24ee0:	mov	r6, ip
   24ee4:	cmp	r4, r8
   24ee8:	beq	24f1c <main@@Base+0x11b78>
   24eec:	ldrb	r0, [r4]
   24ef0:	cmp	r0, #58	; 0x3a
   24ef4:	bne	24f1c <main@@Base+0x11b78>
   24ef8:	add	r1, r4, #1
   24efc:	sub	r0, r8, r1
   24f00:	cmp	r0, #2
   24f04:	blt	24fc4 <main@@Base+0x11c20>
   24f08:	ldrb	r0, [r1]
   24f0c:	cmp	r0, #32
   24f10:	bls	24fb4 <main@@Base+0x11c10>
   24f14:	mov	r4, r1
   24f18:	b	24fd4 <main@@Base+0x11c30>
   24f1c:	mov	r0, r5
   24f20:	mov	r1, r4
   24f24:	mov	r2, r8
   24f28:	mov	r3, #4
   24f2c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   24f30:	b	24fd0 <main@@Base+0x11c2c>
   24f34:	bne	24f48 <main@@Base+0x11ba4>
   24f38:	mov	r4, r1
   24f3c:	ldrb	r0, [r4, #1]!
   24f40:	cmp	r0, #32
   24f44:	bhi	24f60 <main@@Base+0x11bbc>
   24f48:	ldr	r0, [sp, #24]
   24f4c:	mov	r2, r8
   24f50:	mov	r4, ip
   24f54:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   24f58:	mov	ip, r4
   24f5c:	mov	r4, r0
   24f60:	mov	r7, ip
   24f64:	cmp	r4, r8
   24f68:	beq	24f9c <main@@Base+0x11bf8>
   24f6c:	ldrb	r0, [r4]
   24f70:	cmp	r0, #58	; 0x3a
   24f74:	bne	24f9c <main@@Base+0x11bf8>
   24f78:	add	r1, r4, #1
   24f7c:	sub	r0, r8, r1
   24f80:	cmp	r0, #2
   24f84:	blt	25090 <main@@Base+0x11cec>
   24f88:	ldrb	r0, [r1]
   24f8c:	cmp	r0, #32
   24f90:	bls	25080 <main@@Base+0x11cdc>
   24f94:	mov	r4, r1
   24f98:	b	250a0 <main@@Base+0x11cfc>
   24f9c:	ldr	r0, [sp, #24]
   24fa0:	mov	r1, r4
   24fa4:	mov	r2, r8
   24fa8:	mov	r3, #4
   24fac:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   24fb0:	b	2509c <main@@Base+0x11cf8>
   24fb4:	bne	24fc4 <main@@Base+0x11c20>
   24fb8:	ldrb	r0, [r4, #2]!
   24fbc:	cmp	r0, #32
   24fc0:	bhi	24fd4 <main@@Base+0x11c30>
   24fc4:	mov	r0, r5
   24fc8:	mov	r2, r8
   24fcc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   24fd0:	mov	r4, r0
   24fd4:	mov	ip, r6
   24fd8:	cmp	r6, r4
   24fdc:	beq	2515c <main@@Base+0x11db8>
   24fe0:	ldr	r9, [sp, #24]
   24fe4:	mov	r1, #2
   24fe8:	ldr	r0, [r9]
   24fec:	bl	2bd4c <flatcc_builder_start_table@@Base>
   24ff0:	cmp	r0, #0
   24ff4:	bne	27eac <main@@Base+0x14b08>
   24ff8:	cmp	r4, r8
   24ffc:	beq	25034 <main@@Base+0x11c90>
   25000:	ldrb	r0, [r4]
   25004:	cmp	r0, #123	; 0x7b
   25008:	bne	25034 <main@@Base+0x11c90>
   2500c:	ldr	r6, [sp, #32]
   25010:	add	r1, r4, #1
   25014:	sub	r0, r8, r1
   25018:	cmp	r0, #2
   2501c:	blt	25348 <main@@Base+0x11fa4>
   25020:	ldrb	r0, [r1]
   25024:	cmp	r0, #32
   25028:	bls	25338 <main@@Base+0x11f94>
   2502c:	mov	r4, r1
   25030:	b	25358 <main@@Base+0x11fb4>
   25034:	mov	r0, r9
   25038:	mov	r1, r4
   2503c:	mov	r2, r8
   25040:	mov	r3, #21
   25044:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25048:	ldr	r6, [sp, #32]
   2504c:	mov	r4, r0
   25050:	ldr	r0, [sp, #20]
   25054:	ldr	r0, [r0]
   25058:	cmp	r0, #0
   2505c:	bne	27eac <main@@Base+0x14b08>
   25060:	ldr	r0, [r9]
   25064:	bl	2c77c <flatcc_builder_end_table@@Base>
   25068:	cmp	r0, #0
   2506c:	beq	27eac <main@@Base+0x14b08>
   25070:	mov	r7, r0
   25074:	ldr	r0, [r9]
   25078:	mov	r1, #1
   2507c:	b	254dc <main@@Base+0x12138>
   25080:	bne	25090 <main@@Base+0x11cec>
   25084:	ldrb	r0, [r4, #2]!
   25088:	cmp	r0, #32
   2508c:	bhi	250a0 <main@@Base+0x11cfc>
   25090:	ldr	r0, [sp, #24]
   25094:	mov	r2, r8
   25098:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2509c:	mov	r4, r0
   250a0:	mov	ip, r7
   250a4:	cmp	r7, r4
   250a8:	beq	25100 <main@@Base+0x11d5c>
   250ac:	ldr	r9, [sp, #24]
   250b0:	mov	r1, #9
   250b4:	ldr	r0, [r9]
   250b8:	bl	2bd4c <flatcc_builder_start_table@@Base>
   250bc:	cmp	r0, #0
   250c0:	bne	27eac <main@@Base+0x14b08>
   250c4:	cmp	r4, r8
   250c8:	beq	25240 <main@@Base+0x11e9c>
   250cc:	ldrb	r0, [r4]
   250d0:	cmp	r0, #123	; 0x7b
   250d4:	bne	25240 <main@@Base+0x11e9c>
   250d8:	ldr	r6, [sp, #32]
   250dc:	add	r1, r4, #1
   250e0:	sub	r0, r8, r1
   250e4:	cmp	r0, #2
   250e8:	blt	253b8 <main@@Base+0x12014>
   250ec:	ldrb	r0, [r1]
   250f0:	cmp	r0, #32
   250f4:	bls	253a8 <main@@Base+0x12004>
   250f8:	mov	r4, r1
   250fc:	b	253c8 <main@@Base+0x12024>
   25100:	movw	r0, #0
   25104:	movt	r0, #26418	; 0x6732
   25108:	add	r0, r0, #65536	; 0x10000
   2510c:	eor	r0, r6, r0
   25110:	orrs	r0, r0, r5
   25114:	bne	2515c <main@@Base+0x11db8>
   25118:	cmp	r9, #7
   2511c:	ldr	r9, [sp, #24]
   25120:	blt	25160 <main@@Base+0x11dbc>
   25124:	ldr	r2, [sp, #28]
   25128:	mov	r1, sl
   2512c:	ldrb	r0, [r1, #22]!
   25130:	ldr	r2, [r2]
   25134:	cmp	r2, #0
   25138:	beq	2528c <main@@Base+0x11ee8>
   2513c:	cmp	r0, #33	; 0x21
   25140:	bcc	2514c <main@@Base+0x11da8>
   25144:	cmp	r0, #58	; 0x3a
   25148:	bne	25160 <main@@Base+0x11dbc>
   2514c:	ldr	r0, [sp, #28]
   25150:	mov	r2, #0
   25154:	str	r2, [r0]
   25158:	b	25298 <main@@Base+0x11ef4>
   2515c:	ldr	r9, [sp, #24]
   25160:	mov	r0, r9
   25164:	mov	r1, ip
   25168:	mov	r2, r8
   2516c:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   25170:	ldr	r6, [sp, #32]
   25174:	mov	r4, r0
   25178:	sub	r0, r8, r4
   2517c:	cmp	r0, #2
   25180:	blt	251b4 <main@@Base+0x11e10>
   25184:	ldrb	r0, [r4]
   25188:	cmp	r0, #32
   2518c:	bls	251a0 <main@@Base+0x11dfc>
   25190:	mov	r2, r4
   25194:	cmp	r2, r8
   25198:	bne	251d0 <main@@Base+0x11e2c>
   2519c:	b	27dc0 <main@@Base+0x14a1c>
   251a0:	bne	251b4 <main@@Base+0x11e10>
   251a4:	mov	r2, r4
   251a8:	ldrb	r0, [r2, #1]!
   251ac:	cmp	r0, #32
   251b0:	bhi	251c8 <main@@Base+0x11e24>
   251b4:	mov	r0, r9
   251b8:	mov	r1, r4
   251bc:	mov	r2, r8
   251c0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   251c4:	mov	r2, r0
   251c8:	cmp	r2, r8
   251cc:	beq	27dc0 <main@@Base+0x14a1c>
   251d0:	ldrb	r0, [r2]
   251d4:	cmp	r0, #44	; 0x2c
   251d8:	bne	27dc8 <main@@Base+0x14a24>
   251dc:	add	r1, r2, #1
   251e0:	sub	r0, r8, r1
   251e4:	cmp	r0, #2
   251e8:	blt	25218 <main@@Base+0x11e74>
   251ec:	ldrb	r0, [r1]
   251f0:	cmp	r0, #32
   251f4:	bls	25208 <main@@Base+0x11e64>
   251f8:	mov	r2, r1
   251fc:	cmp	r2, r8
   25200:	bne	25230 <main@@Base+0x11e8c>
   25204:	b	27e18 <main@@Base+0x14a74>
   25208:	bne	25218 <main@@Base+0x11e74>
   2520c:	ldrb	r0, [r2, #2]!
   25210:	cmp	r0, #32
   25214:	bhi	25228 <main@@Base+0x11e84>
   25218:	mov	r0, r9
   2521c:	mov	r2, r8
   25220:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25224:	mov	r2, r0
   25228:	cmp	r2, r8
   2522c:	beq	27e18 <main@@Base+0x14a74>
   25230:	ldrb	r0, [r2]
   25234:	cmp	r0, #125	; 0x7d
   25238:	bne	24acc <main@@Base+0x11728>
   2523c:	b	27dd0 <main@@Base+0x14a2c>
   25240:	mov	r0, r9
   25244:	mov	r1, r4
   25248:	mov	r2, r8
   2524c:	mov	r3, #21
   25250:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25254:	ldr	r6, [sp, #32]
   25258:	mov	r4, r0
   2525c:	ldr	r0, [sp, #20]
   25260:	ldr	r0, [r0]
   25264:	cmp	r0, #0
   25268:	bne	27eac <main@@Base+0x14b08>
   2526c:	ldr	r0, [r9]
   25270:	bl	2c77c <flatcc_builder_end_table@@Base>
   25274:	cmp	r0, #0
   25278:	beq	27eac <main@@Base+0x14b08>
   2527c:	mov	r7, r0
   25280:	ldr	r0, [r9]
   25284:	mov	r1, #0
   25288:	b	254dc <main@@Base+0x12138>
   2528c:	cmp	r0, #34	; 0x22
   25290:	bne	25160 <main@@Base+0x11dbc>
   25294:	add	r1, sl, #23
   25298:	sub	r0, r8, r1
   2529c:	cmp	r0, #2
   252a0:	blt	252cc <main@@Base+0x11f28>
   252a4:	ldrb	r0, [r1]
   252a8:	cmp	r0, #32
   252ac:	bls	252b8 <main@@Base+0x11f14>
   252b0:	mov	r4, r1
   252b4:	b	252e4 <main@@Base+0x11f40>
   252b8:	bne	252cc <main@@Base+0x11f28>
   252bc:	mov	r4, r1
   252c0:	ldrb	r0, [r4, #1]!
   252c4:	cmp	r0, #32
   252c8:	bhi	252e4 <main@@Base+0x11f40>
   252cc:	mov	r0, r9
   252d0:	mov	r2, r8
   252d4:	mov	r4, ip
   252d8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   252dc:	mov	ip, r4
   252e0:	mov	r4, r0
   252e4:	mov	r5, ip
   252e8:	cmp	r4, r8
   252ec:	beq	25320 <main@@Base+0x11f7c>
   252f0:	ldrb	r0, [r4]
   252f4:	cmp	r0, #58	; 0x3a
   252f8:	bne	25320 <main@@Base+0x11f7c>
   252fc:	add	r1, r4, #1
   25300:	sub	r0, r8, r1
   25304:	cmp	r0, #2
   25308:	blt	25428 <main@@Base+0x12084>
   2530c:	ldrb	r0, [r1]
   25310:	cmp	r0, #32
   25314:	bls	25418 <main@@Base+0x12074>
   25318:	mov	r4, r1
   2531c:	b	25438 <main@@Base+0x12094>
   25320:	mov	r0, r9
   25324:	mov	r1, r4
   25328:	mov	r2, r8
   2532c:	mov	r3, #4
   25330:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25334:	b	25434 <main@@Base+0x12090>
   25338:	bne	25348 <main@@Base+0x11fa4>
   2533c:	ldrb	r0, [r4, #2]!
   25340:	cmp	r0, #32
   25344:	bhi	25358 <main@@Base+0x11fb4>
   25348:	mov	r0, r9
   2534c:	mov	r2, r8
   25350:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25354:	mov	r4, r0
   25358:	cmp	r4, r8
   2535c:	mov	r2, r8
   25360:	beq	25f7c <main@@Base+0x12bd8>
   25364:	ldrb	r0, [r4]
   25368:	cmp	r0, #125	; 0x7d
   2536c:	bne	253a0 <main@@Base+0x11ffc>
   25370:	add	r1, r4, #1
   25374:	sub	r0, r8, r1
   25378:	cmp	r0, #2
   2537c:	blt	2673c <main@@Base+0x13398>
   25380:	ldrb	r0, [r1]
   25384:	cmp	r0, #32
   25388:	bhi	266fc <main@@Base+0x13358>
   2538c:	bne	2673c <main@@Base+0x13398>
   25390:	ldrb	r0, [r4, #2]!
   25394:	cmp	r0, #32
   25398:	bls	2673c <main@@Base+0x13398>
   2539c:	b	25050 <main@@Base+0x11cac>
   253a0:	mov	r2, r4
   253a4:	b	25f7c <main@@Base+0x12bd8>
   253a8:	bne	253b8 <main@@Base+0x12014>
   253ac:	ldrb	r0, [r4, #2]!
   253b0:	cmp	r0, #32
   253b4:	bhi	253c8 <main@@Base+0x12024>
   253b8:	mov	r0, r9
   253bc:	mov	r2, r8
   253c0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   253c4:	mov	r4, r0
   253c8:	cmp	r4, r8
   253cc:	mov	r2, r8
   253d0:	beq	2685c <main@@Base+0x134b8>
   253d4:	ldrb	r0, [r4]
   253d8:	cmp	r0, #125	; 0x7d
   253dc:	bne	25410 <main@@Base+0x1206c>
   253e0:	add	r1, r4, #1
   253e4:	sub	r0, r8, r1
   253e8:	cmp	r0, #2
   253ec:	blt	27db0 <main@@Base+0x14a0c>
   253f0:	ldrb	r0, [r1]
   253f4:	cmp	r0, #32
   253f8:	bhi	27d70 <main@@Base+0x149cc>
   253fc:	bne	27db0 <main@@Base+0x14a0c>
   25400:	ldrb	r0, [r4, #2]!
   25404:	cmp	r0, #32
   25408:	bhi	2525c <main@@Base+0x11eb8>
   2540c:	b	27db0 <main@@Base+0x14a0c>
   25410:	mov	r2, r4
   25414:	b	2685c <main@@Base+0x134b8>
   25418:	bne	25428 <main@@Base+0x12084>
   2541c:	ldrb	r0, [r4, #2]!
   25420:	cmp	r0, #32
   25424:	bhi	25438 <main@@Base+0x12094>
   25428:	mov	r0, r9
   2542c:	mov	r2, r8
   25430:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25434:	mov	r4, r0
   25438:	mov	ip, r5
   2543c:	cmp	r5, r4
   25440:	beq	25160 <main@@Base+0x11dbc>
   25444:	ldr	r0, [r9]
   25448:	mov	r1, #2
   2544c:	bl	2bd4c <flatcc_builder_start_table@@Base>
   25450:	cmp	r0, #0
   25454:	bne	27eac <main@@Base+0x14b08>
   25458:	cmp	r4, r8
   2545c:	beq	25494 <main@@Base+0x120f0>
   25460:	ldrb	r0, [r4]
   25464:	cmp	r0, #123	; 0x7b
   25468:	bne	25494 <main@@Base+0x120f0>
   2546c:	ldr	r6, [sp, #32]
   25470:	add	r1, r4, #1
   25474:	sub	r0, r8, r1
   25478:	cmp	r0, #2
   2547c:	blt	25500 <main@@Base+0x1215c>
   25480:	ldrb	r0, [r1]
   25484:	cmp	r0, #32
   25488:	bls	254f0 <main@@Base+0x1214c>
   2548c:	mov	r4, r1
   25490:	b	25510 <main@@Base+0x1216c>
   25494:	mov	r0, r9
   25498:	mov	r1, r4
   2549c:	mov	r2, r8
   254a0:	mov	r3, #21
   254a4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   254a8:	ldr	r6, [sp, #32]
   254ac:	mov	r4, r0
   254b0:	ldr	r0, [sp, #20]
   254b4:	ldr	r0, [r0]
   254b8:	cmp	r0, #0
   254bc:	bne	27eac <main@@Base+0x14b08>
   254c0:	ldr	r0, [r9]
   254c4:	bl	2c77c <flatcc_builder_end_table@@Base>
   254c8:	cmp	r0, #0
   254cc:	beq	27eac <main@@Base+0x14b08>
   254d0:	mov	r7, r0
   254d4:	ldr	r0, [r9]
   254d8:	mov	r1, #2
   254dc:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   254e0:	cmp	r0, #0
   254e4:	beq	27e4c <main@@Base+0x14aa8>
   254e8:	str	r7, [r0]
   254ec:	b	25178 <main@@Base+0x11dd4>
   254f0:	bne	25500 <main@@Base+0x1215c>
   254f4:	ldrb	r0, [r4, #2]!
   254f8:	cmp	r0, #32
   254fc:	bhi	25510 <main@@Base+0x1216c>
   25500:	mov	r0, r9
   25504:	mov	r2, r8
   25508:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2550c:	mov	r4, r0
   25510:	cmp	r4, r8
   25514:	mov	r2, r8
   25518:	beq	25868 <main@@Base+0x124c4>
   2551c:	ldrb	r0, [r4]
   25520:	cmp	r0, #125	; 0x7d
   25524:	bne	25558 <main@@Base+0x121b4>
   25528:	add	r1, r4, #1
   2552c:	sub	r0, r8, r1
   25530:	cmp	r0, #2
   25534:	blt	26770 <main@@Base+0x133cc>
   25538:	ldrb	r0, [r1]
   2553c:	cmp	r0, #32
   25540:	bhi	25e3c <main@@Base+0x12a98>
   25544:	bne	26770 <main@@Base+0x133cc>
   25548:	ldrb	r0, [r4, #2]!
   2554c:	cmp	r0, #32
   25550:	bls	26770 <main@@Base+0x133cc>
   25554:	b	254b0 <main@@Base+0x1210c>
   25558:	mov	r2, r4
   2555c:	b	25868 <main@@Base+0x124c4>
   25560:	ldr	r0, [sp, #24]
   25564:	mov	r1, r7
   25568:	mov	r2, r8
   2556c:	mov	r3, #4
   25570:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25574:	b	25738 <main@@Base+0x12394>
   25578:	ldr	r9, [sp, #24]
   2557c:	ldr	r6, [sp, #32]
   25580:	ldr	r4, [sp, #8]
   25584:	bne	25594 <main@@Base+0x121f0>
   25588:	ldrb	r0, [r7, #2]!
   2558c:	cmp	r0, #32
   25590:	bhi	255a4 <main@@Base+0x12200>
   25594:	mov	r0, r9
   25598:	mov	r2, r8
   2559c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   255a0:	mov	r7, r0
   255a4:	cmp	r4, r7
   255a8:	beq	25cb8 <main@@Base+0x12914>
   255ac:	mov	r6, #0
   255b0:	cmp	r7, r8
   255b4:	str	r6, [fp, #-36]	; 0xffffffdc
   255b8:	str	r6, [fp, #-40]	; 0xffffffd8
   255bc:	str	r6, [sp, #44]	; 0x2c
   255c0:	str	r6, [sp, #40]	; 0x28
   255c4:	str	r6, [fp, #-44]	; 0xffffffd4
   255c8:	beq	25628 <main@@Base+0x12284>
   255cc:	sub	r0, fp, #40	; 0x28
   255d0:	mov	r1, r7
   255d4:	mov	r2, r8
   255d8:	sub	r3, fp, #44	; 0x2c
   255dc:	str	r0, [sp]
   255e0:	mov	r0, r9
   255e4:	bl	31418 <flatcc_json_parser_integer@@Base>
   255e8:	cmp	r0, r7
   255ec:	beq	2563c <main@@Base+0x12298>
   255f0:	mov	r4, r0
   255f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   255f8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   255fc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   25600:	cmp	r0, #0
   25604:	beq	2564c <main@@Base+0x122a8>
   25608:	subs	r0, r6, #1
   2560c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   25610:	bcc	25684 <main@@Base+0x122e0>
   25614:	ldr	r9, [sp, #24]
   25618:	mov	r1, r4
   2561c:	mov	r2, r8
   25620:	mov	r3, #8
   25624:	b	25664 <main@@Base+0x122c0>
   25628:	mov	r5, #0
   2562c:	mov	r4, r8
   25630:	cmp	r7, r4
   25634:	bne	256dc <main@@Base+0x12338>
   25638:	b	256a0 <main@@Base+0x122fc>
   2563c:	mov	r6, #0
   25640:	mov	r5, #0
   25644:	mov	r4, r7
   25648:	b	25694 <main@@Base+0x122f0>
   2564c:	cmn	r5, #1
   25650:	bgt	2568c <main@@Base+0x122e8>
   25654:	ldr	r9, [sp, #24]
   25658:	mov	r1, r4
   2565c:	mov	r2, r8
   25660:	mov	r3, #7
   25664:	mov	r0, r9
   25668:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2566c:	mov	r4, r0
   25670:	mov	r6, #0
   25674:	mov	r5, #0
   25678:	cmp	r7, r4
   2567c:	bne	256dc <main@@Base+0x12338>
   25680:	b	256a0 <main@@Base+0x122fc>
   25684:	rsbs	r6, r6, #0
   25688:	rsc	r5, r5, #0
   2568c:	str	r6, [sp, #40]	; 0x28
   25690:	str	r5, [sp, #44]	; 0x2c
   25694:	ldr	r9, [sp, #24]
   25698:	cmp	r7, r4
   2569c:	bne	256dc <main@@Base+0x12338>
   256a0:	add	r0, sp, #40	; 0x28
   256a4:	mov	r1, r7
   256a8:	mov	r2, r8
   256ac:	str	r0, [sp]
   256b0:	mov	r0, r9
   256b4:	ldr	r3, [pc, #4056]	; 26694 <main@@Base+0x132f0>
   256b8:	add	r3, pc, r3
   256bc:	bl	2368c <main@@Base+0x102e8>
   256c0:	mov	r4, r0
   256c4:	cmp	r0, r7
   256c8:	cmpne	r4, r8
   256cc:	beq	27ea8 <main@@Base+0x14b04>
   256d0:	ldr	r6, [sp, #40]	; 0x28
   256d4:	ldr	r5, [sp, #44]	; 0x2c
   256d8:	ldr	r9, [sp, #24]
   256dc:	orrs	r0, r6, r5
   256e0:	bne	256f0 <main@@Base+0x1234c>
   256e4:	ldrb	r0, [r9, #8]
   256e8:	tst	r0, #2
   256ec:	beq	25854 <main@@Base+0x124b0>
   256f0:	ldr	r0, [r9]
   256f4:	mov	r1, #0
   256f8:	mov	r2, #8
   256fc:	mov	r3, #8
   25700:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   25704:	cmp	r0, #0
   25708:	beq	27ea8 <main@@Base+0x14b04>
   2570c:	str	r6, [r0]
   25710:	str	r5, [r0, #4]
   25714:	b	25854 <main@@Base+0x124b0>
   25718:	ldr	r6, [sp, #32]
   2571c:	bne	2572c <main@@Base+0x12388>
   25720:	ldrb	r0, [r7, #2]!
   25724:	cmp	r0, #32
   25728:	bhi	2573c <main@@Base+0x12398>
   2572c:	ldr	r0, [sp, #24]
   25730:	mov	r2, r8
   25734:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25738:	mov	r7, r0
   2573c:	cmp	r9, r7
   25740:	beq	25d44 <main@@Base+0x129a0>
   25744:	mov	r5, #0
   25748:	cmp	r7, r8
   2574c:	str	r5, [fp, #-36]	; 0xffffffdc
   25750:	str	r5, [fp, #-40]	; 0xffffffd8
   25754:	str	r5, [fp, #-44]	; 0xffffffd4
   25758:	str	r5, [sp, #40]	; 0x28
   2575c:	beq	257a8 <main@@Base+0x12404>
   25760:	sub	r0, fp, #40	; 0x28
   25764:	mov	r1, r7
   25768:	mov	r2, r8
   2576c:	add	r3, sp, #40	; 0x28
   25770:	str	r0, [sp]
   25774:	ldr	r0, [sp, #24]
   25778:	bl	31418 <flatcc_json_parser_integer@@Base>
   2577c:	cmp	r0, r7
   25780:	beq	257b0 <main@@Base+0x1240c>
   25784:	mov	r4, r0
   25788:	ldr	r0, [sp, #40]	; 0x28
   2578c:	cmp	r0, #0
   25790:	beq	257b8 <main@@Base+0x12414>
   25794:	ldr	r0, [sp, #24]
   25798:	mov	r1, r4
   2579c:	mov	r2, r8
   257a0:	mov	r3, #8
   257a4:	b	257d4 <main@@Base+0x12430>
   257a8:	mov	r4, r8
   257ac:	b	257dc <main@@Base+0x12438>
   257b0:	mov	r4, r7
   257b4:	b	257dc <main@@Base+0x12438>
   257b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   257bc:	cmp	r0, #0
   257c0:	beq	2585c <main@@Base+0x124b8>
   257c4:	ldr	r0, [sp, #24]
   257c8:	mov	r1, r4
   257cc:	mov	r2, r8
   257d0:	mov	r3, #7
   257d4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   257d8:	mov	r4, r0
   257dc:	ldr	r9, [sp, #24]
   257e0:	cmp	r7, r4
   257e4:	bne	25820 <main@@Base+0x1247c>
   257e8:	sub	r0, fp, #44	; 0x2c
   257ec:	mov	r1, r7
   257f0:	mov	r2, r8
   257f4:	str	r0, [sp]
   257f8:	mov	r0, r9
   257fc:	ldr	r3, [pc, #3996]	; 267a0 <main@@Base+0x133fc>
   25800:	add	r3, pc, r3
   25804:	bl	238e4 <main@@Base+0x10540>
   25808:	mov	r4, r0
   2580c:	cmp	r0, r7
   25810:	cmpne	r4, r8
   25814:	beq	27ea8 <main@@Base+0x14b04>
   25818:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2581c:	ldr	r9, [sp, #24]
   25820:	cmp	r5, #0
   25824:	bne	25834 <main@@Base+0x12490>
   25828:	ldrb	r0, [r9, #8]
   2582c:	tst	r0, #2
   25830:	beq	25854 <main@@Base+0x124b0>
   25834:	ldr	r0, [r9]
   25838:	mov	r1, #1
   2583c:	mov	r2, #4
   25840:	mov	r3, #4
   25844:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   25848:	cmp	r0, #0
   2584c:	beq	27ea8 <main@@Base+0x14b04>
   25850:	str	r5, [r0]
   25854:	ldr	r6, [sp, #32]
   25858:	b	25d5c <main@@Base+0x129b8>
   2585c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25860:	str	r5, [fp, #-44]	; 0xffffffd4
   25864:	b	257dc <main@@Base+0x12438>
   25868:	cmp	r2, r8
   2586c:	mov	r1, r8
   25870:	beq	258c8 <main@@Base+0x12524>
   25874:	ldrb	r0, [r2]
   25878:	cmp	r0, #46	; 0x2e
   2587c:	beq	2589c <main@@Base+0x124f8>
   25880:	cmp	r0, #34	; 0x22
   25884:	bne	258b8 <main@@Base+0x12514>
   25888:	ldr	r0, [sp, #28]
   2588c:	mov	r1, #0
   25890:	str	r1, [r0]
   25894:	add	r1, r2, #1
   25898:	b	258c8 <main@@Base+0x12524>
   2589c:	mov	r1, r2
   258a0:	mov	r0, r9
   258a4:	mov	r2, r8
   258a8:	mov	r3, #5
   258ac:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   258b0:	mov	r1, r0
   258b4:	b	258c8 <main@@Base+0x12524>
   258b8:	ldr	r0, [sp, #28]
   258bc:	mov	r1, #1
   258c0:	str	r1, [r0]
   258c4:	mov	r1, r2
   258c8:	sub	r0, r8, r1
   258cc:	mov	r2, #8
   258d0:	cmp	r0, #8
   258d4:	movcs	r0, r2
   258d8:	and	r0, r0, #15
   258dc:	sub	r2, r0, #1
   258e0:	cmp	r2, #7
   258e4:	bhi	25b78 <main@@Base+0x127d4>
   258e8:	add	r5, pc, #36	; 0x24
   258ec:	mov	r9, #0
   258f0:	mov	ip, #0
   258f4:	mov	lr, #0
   258f8:	mov	sl, #0
   258fc:	mov	r3, #0
   25900:	mov	r7, #0
   25904:	mov	r4, #0
   25908:	ldr	r0, [r5, r2, lsl #2]
   2590c:	mov	r2, #0
   25910:	add	pc, r5, r0
   25914:	andeq	r0, r0, r4, rrx
   25918:	andeq	r0, r0, ip, asr r0
   2591c:	andeq	r0, r0, r4, asr r0
   25920:	andeq	r0, r0, ip, asr #32
   25924:	andeq	r0, r0, r0, asr #32
   25928:	andeq	r0, r0, r4, lsr r0
   2592c:	andeq	r0, r0, r4, lsr #32
   25930:	andeq	r0, r0, r0, lsr #32
   25934:	ldrb	ip, [r1, #7]
   25938:	ldrb	r0, [r1, #6]
   2593c:	mov	lr, r9
   25940:	orr	r0, ip, r0, lsl #8
   25944:	mov	r9, r0
   25948:	ldrb	r0, [r1, #5]
   2594c:	mov	sl, lr
   25950:	orr	r9, r9, r0, lsl #16
   25954:	ldrb	r0, [r1, #4]
   25958:	mov	r3, sl
   2595c:	orr	r9, r9, r0, lsl #24
   25960:	ldrb	r0, [r1, #3]
   25964:	orr	r7, r0, r3
   25968:	ldrb	r0, [r1, #2]
   2596c:	orr	r4, r7, r0, lsl #8
   25970:	ldrb	r0, [r1, #1]
   25974:	orr	r2, r4, r0, lsl #16
   25978:	ldrb	r3, [r1]
   2597c:	movw	r0, #25186	; 0x6262
   25980:	movt	r0, #24418	; 0x5f62
   25984:	eor	r0, r9, r0
   25988:	ldr	r9, [sp, #24]
   2598c:	orr	r2, r2, r3, lsl #24
   25990:	movw	r3, #24929	; 0x6161
   25994:	movt	r3, #24929	; 0x6161
   25998:	eor	r2, r2, r3
   2599c:	orrs	r0, r0, r2
   259a0:	bne	25b78 <main@@Base+0x127d4>
   259a4:	add	r4, r1, #8
   259a8:	mov	r0, #8
   259ac:	sub	lr, r8, r4
   259b0:	cmp	lr, #8
   259b4:	movcc	r0, lr
   259b8:	and	r0, r0, #15
   259bc:	sub	r0, r0, #1
   259c0:	cmp	r0, #7
   259c4:	bhi	25cb8 <main@@Base+0x12914>
   259c8:	str	r4, [sp, #8]
   259cc:	add	r4, pc, #36	; 0x24
   259d0:	mov	r2, #0
   259d4:	mov	ip, #0
   259d8:	mov	sl, #0
   259dc:	mov	r6, #0
   259e0:	mov	r7, #0
   259e4:	mov	r5, #0
   259e8:	mov	r3, #0
   259ec:	ldr	r9, [r4, r0, lsl #2]
   259f0:	mov	r0, #0
   259f4:	add	pc, r4, r9
   259f8:	andeq	r0, r0, r4, rrx
   259fc:	andeq	r0, r0, ip, asr r0
   25a00:	andeq	r0, r0, r4, asr r0
   25a04:	andeq	r0, r0, ip, asr #32
   25a08:	andeq	r0, r0, r0, asr #32
   25a0c:	andeq	r0, r0, r4, lsr r0
   25a10:	andeq	r0, r0, r4, lsr #32
   25a14:	andeq	r0, r0, r0, lsr #32
   25a18:	ldrb	ip, [r1, #15]
   25a1c:	ldrb	r0, [r1, #14]
   25a20:	mov	sl, r2
   25a24:	orr	r0, ip, r0, lsl #8
   25a28:	mov	r2, r0
   25a2c:	ldrb	r0, [r1, #13]
   25a30:	mov	r6, sl
   25a34:	orr	r2, r2, r0, lsl #16
   25a38:	ldrb	r0, [r1, #12]
   25a3c:	mov	r7, r6
   25a40:	orr	r2, r2, r0, lsl #24
   25a44:	ldrb	r0, [r1, #11]
   25a48:	orr	r5, r0, r7
   25a4c:	ldrb	r0, [r1, #10]
   25a50:	orr	r3, r5, r0, lsl #8
   25a54:	ldrb	r0, [r1, #9]
   25a58:	orr	r0, r3, r0, lsl #16
   25a5c:	ldr	r4, [sp, #8]
   25a60:	movw	r3, #29791	; 0x745f
   25a64:	movt	r3, #24946	; 0x6172
   25a68:	eor	r3, r2, r3
   25a6c:	ldrb	r7, [r4]
   25a70:	orr	r0, r0, r7, lsl #24
   25a74:	movw	r7, #29556	; 0x7374
   25a78:	movt	r7, #25183	; 0x625f
   25a7c:	eor	r0, r0, r7
   25a80:	orrs	r3, r3, r0
   25a84:	bne	25b80 <main@@Base+0x127dc>
   25a88:	add	r9, r1, #16
   25a8c:	mov	r2, #8
   25a90:	ldr	r6, [sp, #32]
   25a94:	sub	ip, r8, r9
   25a98:	cmp	ip, #8
   25a9c:	movcc	r2, ip
   25aa0:	and	r2, r2, #15
   25aa4:	sub	r3, r2, #1
   25aa8:	cmp	r3, #7
   25aac:	bhi	25d44 <main@@Base+0x129a0>
   25ab0:	add	r4, pc, #24
   25ab4:	mov	lr, #0
   25ab8:	mov	r7, #0
   25abc:	mov	r2, #0
   25ac0:	mov	r5, #0
   25ac4:	ldr	r0, [r4, r3, lsl #2]
   25ac8:	mov	r3, #0
   25acc:	add	pc, r4, r0
   25ad0:	andeq	r0, r0, r4, asr #32
   25ad4:	andeq	r0, r0, ip, lsr r0
   25ad8:	andeq	r0, r0, r4, lsr r0
   25adc:	andeq	r0, r0, r8, lsr #32
   25ae0:	andeq	r0, r0, r0, lsr #32
   25ae4:	andeq	r0, r0, r0, lsr #32
   25ae8:	andeq	r0, r0, r0, lsr #32
   25aec:	andeq	r0, r0, r0, lsr #32
   25af0:	ldrb	r0, [r1, #20]
   25af4:	lsl	r3, r0, #24
   25af8:	ldrb	r0, [r1, #19]
   25afc:	orr	r7, r0, lr
   25b00:	mov	lr, r3
   25b04:	ldrb	r0, [r1, #18]
   25b08:	orr	r2, r7, r0, lsl #8
   25b0c:	ldrb	r0, [r1, #17]
   25b10:	orr	r5, r2, r0, lsl #16
   25b14:	ldrb	r0, [r9]
   25b18:	movw	r2, #25968	; 0x6570
   25b1c:	movt	r2, #29556	; 0x7374
   25b20:	orr	r0, r5, r0, lsl #24
   25b24:	eor	r0, r0, r2
   25b28:	and	r2, lr, #-16777216	; 0xff000000
   25b2c:	eor	r2, r2, #1929379840	; 0x73000000
   25b30:	orrs	r0, r2, r0
   25b34:	bne	25d44 <main@@Base+0x129a0>
   25b38:	cmp	ip, #6
   25b3c:	blt	25d44 <main@@Base+0x129a0>
   25b40:	ldr	r3, [sp, #28]
   25b44:	mov	r2, r1
   25b48:	ldrb	r0, [r2, #21]!
   25b4c:	ldr	r3, [r3]
   25b50:	cmp	r3, #0
   25b54:	beq	25c14 <main@@Base+0x12870>
   25b58:	cmp	r0, #33	; 0x21
   25b5c:	bcc	25b68 <main@@Base+0x127c4>
   25b60:	cmp	r0, #58	; 0x3a
   25b64:	bne	25d44 <main@@Base+0x129a0>
   25b68:	ldr	r0, [sp, #28]
   25b6c:	mov	r1, #0
   25b70:	str	r1, [r0]
   25b74:	b	25c20 <main@@Base+0x1287c>
   25b78:	mov	r0, r9
   25b7c:	b	25d50 <main@@Base+0x129ac>
   25b80:	movw	r3, #29440	; 0x7300
   25b84:	ldr	r9, [sp, #24]
   25b88:	ldr	r6, [sp, #32]
   25b8c:	bic	r2, r2, #255	; 0xff
   25b90:	movt	r3, #25968	; 0x6570
   25b94:	eor	r2, r2, r3
   25b98:	orrs	r0, r2, r0
   25b9c:	bne	25cb8 <main@@Base+0x12914>
   25ba0:	cmp	lr, #8
   25ba4:	blt	25cb8 <main@@Base+0x12914>
   25ba8:	ldr	r3, [sp, #28]
   25bac:	mov	r2, r1
   25bb0:	ldrb	r0, [r2, #15]!
   25bb4:	ldr	r3, [r3]
   25bb8:	cmp	r3, #0
   25bbc:	beq	25be0 <main@@Base+0x1283c>
   25bc0:	cmp	r0, #33	; 0x21
   25bc4:	bcc	25bd0 <main@@Base+0x1282c>
   25bc8:	cmp	r0, #58	; 0x3a
   25bcc:	bne	25cb8 <main@@Base+0x12914>
   25bd0:	ldr	r0, [sp, #28]
   25bd4:	mov	r1, #0
   25bd8:	str	r1, [r0]
   25bdc:	b	25bec <main@@Base+0x12848>
   25be0:	cmp	r0, #34	; 0x22
   25be4:	bne	25cb8 <main@@Base+0x12914>
   25be8:	add	r2, r1, #16
   25bec:	sub	r0, r8, r2
   25bf0:	cmp	r0, #2
   25bf4:	blt	25c5c <main@@Base+0x128b8>
   25bf8:	ldrb	r0, [r2]
   25bfc:	cmp	r0, #32
   25c00:	bls	25c48 <main@@Base+0x128a4>
   25c04:	mov	r7, r2
   25c08:	cmp	r7, r8
   25c0c:	bne	25c78 <main@@Base+0x128d4>
   25c10:	b	25cc4 <main@@Base+0x12920>
   25c14:	cmp	r0, #34	; 0x22
   25c18:	bne	25d44 <main@@Base+0x129a0>
   25c1c:	add	r2, r1, #22
   25c20:	sub	r0, r8, r2
   25c24:	cmp	r0, #2
   25c28:	blt	25cf0 <main@@Base+0x1294c>
   25c2c:	ldrb	r0, [r2]
   25c30:	cmp	r0, #32
   25c34:	bls	25cdc <main@@Base+0x12938>
   25c38:	mov	r7, r2
   25c3c:	cmp	r7, r8
   25c40:	bne	25d0c <main@@Base+0x12968>
   25c44:	b	25560 <main@@Base+0x121bc>
   25c48:	bne	25c5c <main@@Base+0x128b8>
   25c4c:	mov	r7, r2
   25c50:	ldrb	r0, [r7, #1]!
   25c54:	cmp	r0, #32
   25c58:	bhi	25c70 <main@@Base+0x128cc>
   25c5c:	mov	r1, r2
   25c60:	mov	r0, r9
   25c64:	mov	r2, r8
   25c68:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25c6c:	mov	r7, r0
   25c70:	cmp	r7, r8
   25c74:	beq	25cc4 <main@@Base+0x12920>
   25c78:	ldrb	r0, [r7]
   25c7c:	cmp	r0, #58	; 0x3a
   25c80:	bne	25cc4 <main@@Base+0x12920>
   25c84:	add	r1, r7, #1
   25c88:	sub	r0, r8, r1
   25c8c:	cmp	r0, #2
   25c90:	blt	25594 <main@@Base+0x121f0>
   25c94:	ldrb	r0, [r1]
   25c98:	cmp	r0, #32
   25c9c:	bls	25578 <main@@Base+0x121d4>
   25ca0:	ldr	r9, [sp, #24]
   25ca4:	ldr	r6, [sp, #32]
   25ca8:	ldr	r4, [sp, #8]
   25cac:	mov	r7, r1
   25cb0:	cmp	r4, r7
   25cb4:	bne	255ac <main@@Base+0x12208>
   25cb8:	mov	r0, r9
   25cbc:	mov	r1, r4
   25cc0:	b	25d50 <main@@Base+0x129ac>
   25cc4:	mov	r0, r9
   25cc8:	mov	r1, r7
   25ccc:	mov	r2, r8
   25cd0:	mov	r3, #4
   25cd4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25cd8:	b	255a0 <main@@Base+0x121fc>
   25cdc:	bne	25cf0 <main@@Base+0x1294c>
   25ce0:	mov	r7, r2
   25ce4:	ldrb	r0, [r7, #1]!
   25ce8:	cmp	r0, #32
   25cec:	bhi	25d04 <main@@Base+0x12960>
   25cf0:	ldr	r0, [sp, #24]
   25cf4:	mov	r1, r2
   25cf8:	mov	r2, r8
   25cfc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25d00:	mov	r7, r0
   25d04:	cmp	r7, r8
   25d08:	beq	25560 <main@@Base+0x121bc>
   25d0c:	ldrb	r0, [r7]
   25d10:	cmp	r0, #58	; 0x3a
   25d14:	bne	25560 <main@@Base+0x121bc>
   25d18:	add	r1, r7, #1
   25d1c:	sub	r0, r8, r1
   25d20:	cmp	r0, #2
   25d24:	blt	2572c <main@@Base+0x12388>
   25d28:	ldrb	r0, [r1]
   25d2c:	cmp	r0, #32
   25d30:	bls	25718 <main@@Base+0x12374>
   25d34:	ldr	r6, [sp, #32]
   25d38:	mov	r7, r1
   25d3c:	cmp	r9, r7
   25d40:	bne	25744 <main@@Base+0x123a0>
   25d44:	ldr	r0, [sp, #24]
   25d48:	mov	r1, r9
   25d4c:	mov	r9, r0
   25d50:	mov	r2, r8
   25d54:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   25d58:	mov	r4, r0
   25d5c:	sub	r0, r8, r4
   25d60:	cmp	r0, #2
   25d64:	blt	25d98 <main@@Base+0x129f4>
   25d68:	ldrb	r0, [r4]
   25d6c:	cmp	r0, #32
   25d70:	bls	25d84 <main@@Base+0x129e0>
   25d74:	mov	r2, r4
   25d78:	cmp	r2, r8
   25d7c:	bne	25db4 <main@@Base+0x12a10>
   25d80:	b	25e44 <main@@Base+0x12aa0>
   25d84:	bne	25d98 <main@@Base+0x129f4>
   25d88:	mov	r2, r4
   25d8c:	ldrb	r0, [r2, #1]!
   25d90:	cmp	r0, #32
   25d94:	bhi	25dac <main@@Base+0x12a08>
   25d98:	mov	r0, r9
   25d9c:	mov	r1, r4
   25da0:	mov	r2, r8
   25da4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25da8:	mov	r2, r0
   25dac:	cmp	r2, r8
   25db0:	beq	25e44 <main@@Base+0x12aa0>
   25db4:	ldrb	r0, [r2]
   25db8:	cmp	r0, #44	; 0x2c
   25dbc:	bne	25e4c <main@@Base+0x12aa8>
   25dc0:	add	r1, r2, #1
   25dc4:	sub	r0, r8, r1
   25dc8:	cmp	r0, #2
   25dcc:	blt	25dfc <main@@Base+0x12a58>
   25dd0:	ldrb	r0, [r1]
   25dd4:	cmp	r0, #32
   25dd8:	bls	25dec <main@@Base+0x12a48>
   25ddc:	mov	r2, r1
   25de0:	cmp	r2, r8
   25de4:	bne	25e14 <main@@Base+0x12a70>
   25de8:	b	25e80 <main@@Base+0x12adc>
   25dec:	bne	25dfc <main@@Base+0x12a58>
   25df0:	ldrb	r0, [r2, #2]!
   25df4:	cmp	r0, #32
   25df8:	bhi	25e0c <main@@Base+0x12a68>
   25dfc:	mov	r0, r9
   25e00:	mov	r2, r8
   25e04:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   25e08:	mov	r2, r0
   25e0c:	cmp	r2, r8
   25e10:	beq	25e80 <main@@Base+0x12adc>
   25e14:	ldrb	r0, [r2]
   25e18:	cmp	r0, #125	; 0x7d
   25e1c:	bne	25868 <main@@Base+0x124c4>
   25e20:	add	r1, r2, #1
   25e24:	sub	r0, r8, r1
   25e28:	cmp	r0, #2
   25e2c:	blt	26770 <main@@Base+0x133cc>
   25e30:	ldrb	r0, [r1]
   25e34:	cmp	r0, #32
   25e38:	bls	2674c <main@@Base+0x133a8>
   25e3c:	mov	r4, r1
   25e40:	b	254b0 <main@@Base+0x1210c>
   25e44:	mov	r4, r8
   25e48:	b	254b0 <main@@Base+0x1210c>
   25e4c:	cmp	r0, #125	; 0x7d
   25e50:	bne	25e8c <main@@Base+0x12ae8>
   25e54:	add	r1, r2, #1
   25e58:	sub	r0, r8, r1
   25e5c:	cmp	r0, #2
   25e60:	blt	26770 <main@@Base+0x133cc>
   25e64:	ldrb	r0, [r1]
   25e68:	cmp	r0, #32
   25e6c:	bls	26754 <main@@Base+0x133b0>
   25e70:	ldr	r9, [sp, #24]
   25e74:	ldr	r6, [sp, #32]
   25e78:	mov	r4, r1
   25e7c:	b	254b0 <main@@Base+0x1210c>
   25e80:	mov	r0, r9
   25e84:	mov	r1, r8
   25e88:	b	25e94 <main@@Base+0x12af0>
   25e8c:	mov	r0, r9
   25e90:	mov	r1, r2
   25e94:	mov	r2, r8
   25e98:	mov	r3, #10
   25e9c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25ea0:	b	254ac <main@@Base+0x12108>
   25ea4:	mov	r4, r8
   25ea8:	cmp	r7, r4
   25eac:	bne	25f44 <main@@Base+0x12ba0>
   25eb0:	b	25f08 <main@@Base+0x12b64>
   25eb4:	mov	r4, r7
   25eb8:	cmp	r7, r4
   25ebc:	bne	25f44 <main@@Base+0x12ba0>
   25ec0:	b	25f08 <main@@Base+0x12b64>
   25ec4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ec8:	cmp	r0, #0
   25ecc:	beq	25ef0 <main@@Base+0x12b4c>
   25ed0:	ldr	r9, [sp, #24]
   25ed4:	mov	r1, r4
   25ed8:	mov	r2, r8
   25edc:	mov	r3, #7
   25ee0:	mov	r0, r9
   25ee4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25ee8:	mov	r4, r0
   25eec:	b	25efc <main@@Base+0x12b58>
   25ef0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25ef4:	ldr	r9, [sp, #24]
   25ef8:	str	r5, [fp, #-44]	; 0xffffffd4
   25efc:	ldr	r6, [sp, #32]
   25f00:	cmp	r7, r4
   25f04:	bne	25f44 <main@@Base+0x12ba0>
   25f08:	sub	r0, fp, #44	; 0x2c
   25f0c:	mov	r1, r7
   25f10:	mov	r2, r8
   25f14:	str	r0, [sp]
   25f18:	mov	r0, r9
   25f1c:	ldr	r3, [pc, #3940]	; 26e88 <main@@Base+0x13ae4>
   25f20:	add	r3, pc, r3
   25f24:	bl	238e4 <main@@Base+0x10540>
   25f28:	mov	r4, r0
   25f2c:	cmp	r0, r7
   25f30:	cmpne	r4, r8
   25f34:	beq	27ea8 <main@@Base+0x14b04>
   25f38:	ldr	r5, [fp, #-44]	; 0xffffffd4
   25f3c:	ldr	r9, [sp, #24]
   25f40:	ldr	r6, [sp, #32]
   25f44:	cmp	r5, #0
   25f48:	bne	25f58 <main@@Base+0x12bb4>
   25f4c:	ldrb	r0, [r9, #8]
   25f50:	tst	r0, #2
   25f54:	beq	26604 <main@@Base+0x13260>
   25f58:	ldr	r0, [r9]
   25f5c:	mov	r1, #1
   25f60:	mov	r2, #4
   25f64:	mov	r3, #4
   25f68:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   25f6c:	cmp	r0, #0
   25f70:	beq	27ea8 <main@@Base+0x14b04>
   25f74:	str	r5, [r0]
   25f78:	b	26604 <main@@Base+0x13260>
   25f7c:	cmp	r2, r8
   25f80:	mov	r1, r8
   25f84:	beq	25fdc <main@@Base+0x12c38>
   25f88:	ldrb	r0, [r2]
   25f8c:	cmp	r0, #46	; 0x2e
   25f90:	beq	25fb0 <main@@Base+0x12c0c>
   25f94:	cmp	r0, #34	; 0x22
   25f98:	bne	25fcc <main@@Base+0x12c28>
   25f9c:	ldr	r0, [sp, #28]
   25fa0:	mov	r1, #0
   25fa4:	str	r1, [r0]
   25fa8:	add	r1, r2, #1
   25fac:	b	25fdc <main@@Base+0x12c38>
   25fb0:	mov	r1, r2
   25fb4:	mov	r0, r9
   25fb8:	mov	r2, r8
   25fbc:	mov	r3, #5
   25fc0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   25fc4:	mov	r1, r0
   25fc8:	b	25fdc <main@@Base+0x12c38>
   25fcc:	ldr	r0, [sp, #28]
   25fd0:	mov	r1, #1
   25fd4:	str	r1, [r0]
   25fd8:	mov	r1, r2
   25fdc:	sub	r0, r8, r1
   25fe0:	mov	r2, #8
   25fe4:	cmp	r0, #8
   25fe8:	movcs	r0, r2
   25fec:	and	r0, r0, #15
   25ff0:	sub	r2, r0, #1
   25ff4:	cmp	r2, #7
   25ff8:	bhi	261e8 <main@@Base+0x12e44>
   25ffc:	add	r5, pc, #36	; 0x24
   26000:	mov	r9, #0
   26004:	mov	ip, #0
   26008:	mov	lr, #0
   2600c:	mov	sl, #0
   26010:	mov	r3, #0
   26014:	mov	r7, #0
   26018:	mov	r4, #0
   2601c:	ldr	r0, [r5, r2, lsl #2]
   26020:	mov	r2, #0
   26024:	add	pc, r5, r0
   26028:	andeq	r0, r0, r4, rrx
   2602c:	andeq	r0, r0, ip, asr r0
   26030:	andeq	r0, r0, r4, asr r0
   26034:	andeq	r0, r0, ip, asr #32
   26038:	andeq	r0, r0, r0, asr #32
   2603c:	andeq	r0, r0, r4, lsr r0
   26040:	andeq	r0, r0, r4, lsr #32
   26044:	andeq	r0, r0, r0, lsr #32
   26048:	ldrb	ip, [r1, #7]
   2604c:	ldrb	r0, [r1, #6]
   26050:	mov	lr, r9
   26054:	orr	r0, ip, r0, lsl #8
   26058:	mov	r9, r0
   2605c:	ldrb	r0, [r1, #5]
   26060:	mov	sl, lr
   26064:	orr	r9, r9, r0, lsl #16
   26068:	ldrb	r0, [r1, #4]
   2606c:	mov	r3, sl
   26070:	orr	r9, r9, r0, lsl #24
   26074:	ldrb	r0, [r1, #3]
   26078:	orr	r7, r0, r3
   2607c:	ldrb	r0, [r1, #2]
   26080:	orr	r4, r7, r0, lsl #8
   26084:	ldrb	r0, [r1, #1]
   26088:	orr	r2, r4, r0, lsl #16
   2608c:	ldrb	r3, [r1]
   26090:	movw	r0, #25186	; 0x6262
   26094:	movt	r0, #24418	; 0x5f62
   26098:	eor	r0, r9, r0
   2609c:	ldr	r9, [sp, #24]
   260a0:	orr	r2, r2, r3, lsl #24
   260a4:	movw	r3, #24929	; 0x6161
   260a8:	movt	r3, #24929	; 0x6161
   260ac:	eor	r2, r2, r3
   260b0:	orrs	r0, r0, r2
   260b4:	bne	261e8 <main@@Base+0x12e44>
   260b8:	add	r4, r1, #8
   260bc:	mov	r0, #8
   260c0:	sub	lr, r8, r4
   260c4:	cmp	lr, #8
   260c8:	movcc	r0, lr
   260cc:	and	r0, r0, #15
   260d0:	sub	r0, r0, #1
   260d4:	cmp	r0, #7
   260d8:	bhi	265f0 <main@@Base+0x1324c>
   260dc:	str	r4, [sp, #8]
   260e0:	add	r4, pc, #36	; 0x24
   260e4:	mov	r2, #0
   260e8:	mov	ip, #0
   260ec:	mov	sl, #0
   260f0:	mov	r6, #0
   260f4:	mov	r7, #0
   260f8:	mov	r5, #0
   260fc:	mov	r3, #0
   26100:	ldr	r9, [r4, r0, lsl #2]
   26104:	mov	r0, #0
   26108:	add	pc, r4, r9
   2610c:	andeq	r0, r0, r4, rrx
   26110:	andeq	r0, r0, ip, asr r0
   26114:	andeq	r0, r0, r4, asr r0
   26118:	andeq	r0, r0, ip, asr #32
   2611c:	andeq	r0, r0, r0, asr #32
   26120:	andeq	r0, r0, r4, lsr r0
   26124:	andeq	r0, r0, r4, lsr #32
   26128:	andeq	r0, r0, r0, lsr #32
   2612c:	ldrb	ip, [r1, #15]
   26130:	ldrb	r0, [r1, #14]
   26134:	mov	sl, r2
   26138:	orr	r0, ip, r0, lsl #8
   2613c:	mov	r2, r0
   26140:	ldrb	r0, [r1, #13]
   26144:	mov	r6, sl
   26148:	orr	r2, r2, r0, lsl #16
   2614c:	ldrb	r0, [r1, #12]
   26150:	mov	r7, r6
   26154:	orr	r2, r2, r0, lsl #24
   26158:	ldrb	r0, [r1, #11]
   2615c:	orr	r5, r0, r7
   26160:	ldrb	r0, [r1, #10]
   26164:	orr	r3, r5, r0, lsl #8
   26168:	ldrb	r0, [r1, #9]
   2616c:	orr	r0, r3, r0, lsl #16
   26170:	ldr	r4, [sp, #8]
   26174:	movw	r7, #29440	; 0x7300
   26178:	bic	r3, r2, #255	; 0xff
   2617c:	movt	r7, #25968	; 0x6570
   26180:	eor	r3, r3, r7
   26184:	ldrb	r7, [r4]
   26188:	orr	r0, r0, r7, lsl #24
   2618c:	movw	r7, #29556	; 0x7374
   26190:	movt	r7, #25183	; 0x625f
   26194:	eor	r0, r0, r7
   26198:	orrs	r3, r3, r0
   2619c:	bne	261f0 <main@@Base+0x12e4c>
   261a0:	ldr	r9, [sp, #24]
   261a4:	ldr	r6, [sp, #32]
   261a8:	cmp	lr, #8
   261ac:	blt	265f0 <main@@Base+0x1324c>
   261b0:	ldr	r3, [sp, #28]
   261b4:	mov	r2, r1
   261b8:	ldrb	r0, [r2, #15]!
   261bc:	ldr	r3, [r3]
   261c0:	cmp	r3, #0
   261c4:	beq	2624c <main@@Base+0x12ea8>
   261c8:	cmp	r0, #33	; 0x21
   261cc:	bcc	261d8 <main@@Base+0x12e34>
   261d0:	cmp	r0, #58	; 0x3a
   261d4:	bne	265f0 <main@@Base+0x1324c>
   261d8:	ldr	r0, [sp, #28]
   261dc:	mov	r1, #0
   261e0:	str	r1, [r0]
   261e4:	b	26258 <main@@Base+0x12eb4>
   261e8:	mov	r0, r9
   261ec:	b	265f8 <main@@Base+0x13254>
   261f0:	movw	r3, #29791	; 0x745f
   261f4:	ldr	r9, [sp, #24]
   261f8:	ldr	r6, [sp, #32]
   261fc:	movt	r3, #24946	; 0x6172
   26200:	eor	r2, r2, r3
   26204:	orrs	r0, r2, r0
   26208:	bne	265f0 <main@@Base+0x1324c>
   2620c:	cmp	lr, #9
   26210:	blt	265f0 <main@@Base+0x1324c>
   26214:	ldr	r3, [sp, #28]
   26218:	mov	r2, r1
   2621c:	ldrb	r0, [r2, #16]!
   26220:	ldr	r3, [r3]
   26224:	cmp	r3, #0
   26228:	beq	26280 <main@@Base+0x12edc>
   2622c:	cmp	r0, #33	; 0x21
   26230:	bcc	2623c <main@@Base+0x12e98>
   26234:	cmp	r0, #58	; 0x3a
   26238:	bne	265f0 <main@@Base+0x1324c>
   2623c:	ldr	r0, [sp, #28]
   26240:	mov	r1, #0
   26244:	str	r1, [r0]
   26248:	b	2628c <main@@Base+0x12ee8>
   2624c:	cmp	r0, #34	; 0x22
   26250:	bne	265f0 <main@@Base+0x1324c>
   26254:	add	r2, r1, #16
   26258:	sub	r0, r8, r2
   2625c:	cmp	r0, #2
   26260:	blt	262c8 <main@@Base+0x12f24>
   26264:	ldrb	r0, [r2]
   26268:	cmp	r0, #32
   2626c:	bls	262b4 <main@@Base+0x12f10>
   26270:	mov	r7, r2
   26274:	cmp	r7, r8
   26278:	bne	262e4 <main@@Base+0x12f40>
   2627c:	b	2631c <main@@Base+0x12f78>
   26280:	cmp	r0, #34	; 0x22
   26284:	bne	265f0 <main@@Base+0x1324c>
   26288:	add	r2, r1, #17
   2628c:	sub	r0, r8, r2
   26290:	cmp	r0, #2
   26294:	blt	26348 <main@@Base+0x12fa4>
   26298:	ldrb	r0, [r2]
   2629c:	cmp	r0, #32
   262a0:	bls	26334 <main@@Base+0x12f90>
   262a4:	mov	r7, r2
   262a8:	cmp	r7, r8
   262ac:	bne	26364 <main@@Base+0x12fc0>
   262b0:	b	263a8 <main@@Base+0x13004>
   262b4:	bne	262c8 <main@@Base+0x12f24>
   262b8:	mov	r7, r2
   262bc:	ldrb	r0, [r7, #1]!
   262c0:	cmp	r0, #32
   262c4:	bhi	262dc <main@@Base+0x12f38>
   262c8:	mov	r1, r2
   262cc:	mov	r0, r9
   262d0:	mov	r2, r8
   262d4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   262d8:	mov	r7, r0
   262dc:	cmp	r7, r8
   262e0:	beq	2631c <main@@Base+0x12f78>
   262e4:	ldrb	r0, [r7]
   262e8:	cmp	r0, #58	; 0x3a
   262ec:	bne	2631c <main@@Base+0x12f78>
   262f0:	add	r1, r7, #1
   262f4:	sub	r0, r8, r1
   262f8:	cmp	r0, #2
   262fc:	blt	263d0 <main@@Base+0x1302c>
   26300:	ldrb	r0, [r1]
   26304:	cmp	r0, #32
   26308:	bls	263c0 <main@@Base+0x1301c>
   2630c:	mov	r7, r1
   26310:	cmp	r4, r7
   26314:	bne	263e8 <main@@Base+0x13044>
   26318:	b	265f0 <main@@Base+0x1324c>
   2631c:	mov	r0, r9
   26320:	mov	r1, r7
   26324:	mov	r2, r8
   26328:	mov	r3, #4
   2632c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   26330:	b	263dc <main@@Base+0x13038>
   26334:	bne	26348 <main@@Base+0x12fa4>
   26338:	mov	r7, r2
   2633c:	ldrb	r0, [r7, #1]!
   26340:	cmp	r0, #32
   26344:	bhi	2635c <main@@Base+0x12fb8>
   26348:	mov	r1, r2
   2634c:	mov	r0, r9
   26350:	mov	r2, r8
   26354:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26358:	mov	r7, r0
   2635c:	cmp	r7, r8
   26360:	beq	263a8 <main@@Base+0x13004>
   26364:	ldrb	r0, [r7]
   26368:	cmp	r0, #58	; 0x3a
   2636c:	bne	263a8 <main@@Base+0x13004>
   26370:	add	r1, r7, #1
   26374:	sub	r0, r8, r1
   26378:	cmp	r0, #2
   2637c:	blt	26564 <main@@Base+0x131c0>
   26380:	ldrb	r0, [r1]
   26384:	cmp	r0, #32
   26388:	bls	26548 <main@@Base+0x131a4>
   2638c:	ldr	r9, [sp, #24]
   26390:	ldr	r6, [sp, #32]
   26394:	ldr	r4, [sp, #8]
   26398:	mov	r7, r1
   2639c:	cmp	r4, r7
   263a0:	bne	2657c <main@@Base+0x131d8>
   263a4:	b	265f0 <main@@Base+0x1324c>
   263a8:	mov	r0, r9
   263ac:	mov	r1, r7
   263b0:	mov	r2, r8
   263b4:	mov	r3, #4
   263b8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   263bc:	b	26570 <main@@Base+0x131cc>
   263c0:	bne	263d0 <main@@Base+0x1302c>
   263c4:	ldrb	r0, [r7, #2]!
   263c8:	cmp	r0, #32
   263cc:	bhi	263e0 <main@@Base+0x1303c>
   263d0:	mov	r0, r9
   263d4:	mov	r2, r8
   263d8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   263dc:	mov	r7, r0
   263e0:	cmp	r4, r7
   263e4:	beq	265f0 <main@@Base+0x1324c>
   263e8:	mov	r5, #0
   263ec:	cmp	r7, r8
   263f0:	str	r5, [fp, #-36]	; 0xffffffdc
   263f4:	str	r5, [fp, #-40]	; 0xffffffd8
   263f8:	str	r5, [sp, #44]	; 0x2c
   263fc:	str	r5, [sp, #40]	; 0x28
   26400:	str	r5, [fp, #-44]	; 0xffffffd4
   26404:	beq	26460 <main@@Base+0x130bc>
   26408:	sub	r0, fp, #40	; 0x28
   2640c:	mov	r1, r7
   26410:	mov	r2, r8
   26414:	sub	r3, fp, #44	; 0x2c
   26418:	str	r0, [sp]
   2641c:	mov	r0, r9
   26420:	bl	31418 <flatcc_json_parser_integer@@Base>
   26424:	cmp	r0, r7
   26428:	beq	26474 <main@@Base+0x130d0>
   2642c:	sub	sl, fp, #44	; 0x2c
   26430:	mov	r4, r0
   26434:	ldm	sl, {r0, r5, sl}
   26438:	cmp	r0, #0
   2643c:	beq	2648c <main@@Base+0x130e8>
   26440:	subs	r0, r5, #1
   26444:	sbcs	r0, sl, #-2147483648	; 0x80000000
   26448:	bcc	264c0 <main@@Base+0x1311c>
   2644c:	mov	r0, r9
   26450:	mov	r1, r4
   26454:	mov	r2, r8
   26458:	mov	r3, #8
   2645c:	b	264a4 <main@@Base+0x13100>
   26460:	mov	sl, #0
   26464:	mov	r4, r8
   26468:	cmp	r7, r4
   2646c:	bne	26510 <main@@Base+0x1316c>
   26470:	b	264d8 <main@@Base+0x13134>
   26474:	mov	r5, #0
   26478:	mov	sl, #0
   2647c:	mov	r4, r7
   26480:	cmp	r7, r4
   26484:	bne	26510 <main@@Base+0x1316c>
   26488:	b	264d8 <main@@Base+0x13134>
   2648c:	cmn	sl, #1
   26490:	bgt	264c8 <main@@Base+0x13124>
   26494:	mov	r0, r9
   26498:	mov	r1, r4
   2649c:	mov	r2, r8
   264a0:	mov	r3, #7
   264a4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   264a8:	mov	r4, r0
   264ac:	mov	r5, #0
   264b0:	mov	sl, #0
   264b4:	cmp	r7, r4
   264b8:	bne	26510 <main@@Base+0x1316c>
   264bc:	b	264d8 <main@@Base+0x13134>
   264c0:	rsbs	r5, r5, #0
   264c4:	rsc	sl, sl, #0
   264c8:	str	r5, [sp, #40]	; 0x28
   264cc:	str	sl, [sp, #44]	; 0x2c
   264d0:	cmp	r7, r4
   264d4:	bne	26510 <main@@Base+0x1316c>
   264d8:	add	r0, sp, #40	; 0x28
   264dc:	mov	r1, r7
   264e0:	mov	r2, r8
   264e4:	str	r0, [sp]
   264e8:	mov	r0, r9
   264ec:	ldr	r3, [pc, #4044]	; 274c0 <main@@Base+0x1411c>
   264f0:	add	r3, pc, r3
   264f4:	bl	2368c <main@@Base+0x102e8>
   264f8:	mov	r4, r0
   264fc:	cmp	r0, r7
   26500:	cmpne	r4, r8
   26504:	beq	27ea8 <main@@Base+0x14b04>
   26508:	ldr	r5, [sp, #40]	; 0x28
   2650c:	ldr	sl, [sp, #44]	; 0x2c
   26510:	orrs	r0, r5, sl
   26514:	bne	26524 <main@@Base+0x13180>
   26518:	ldrb	r0, [r9, #8]
   2651c:	tst	r0, #2
   26520:	beq	26604 <main@@Base+0x13260>
   26524:	ldr	r0, [r9]
   26528:	mov	r1, #0
   2652c:	mov	r2, #8
   26530:	mov	r3, #8
   26534:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   26538:	cmp	r0, #0
   2653c:	beq	27ea8 <main@@Base+0x14b04>
   26540:	stm	r0, {r5, sl}
   26544:	b	26604 <main@@Base+0x13260>
   26548:	ldr	r9, [sp, #24]
   2654c:	ldr	r6, [sp, #32]
   26550:	ldr	r4, [sp, #8]
   26554:	bne	26564 <main@@Base+0x131c0>
   26558:	ldrb	r0, [r7, #2]!
   2655c:	cmp	r0, #32
   26560:	bhi	26574 <main@@Base+0x131d0>
   26564:	mov	r0, r9
   26568:	mov	r2, r8
   2656c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26570:	mov	r7, r0
   26574:	cmp	r4, r7
   26578:	beq	265f0 <main@@Base+0x1324c>
   2657c:	mov	r5, #0
   26580:	cmp	r7, r8
   26584:	str	r5, [fp, #-36]	; 0xffffffdc
   26588:	str	r5, [fp, #-40]	; 0xffffffd8
   2658c:	str	r5, [fp, #-44]	; 0xffffffd4
   26590:	str	r5, [sp, #40]	; 0x28
   26594:	beq	25ea4 <main@@Base+0x12b00>
   26598:	sub	r0, fp, #40	; 0x28
   2659c:	mov	r1, r7
   265a0:	mov	r2, r8
   265a4:	add	r3, sp, #40	; 0x28
   265a8:	str	r0, [sp]
   265ac:	mov	r0, r9
   265b0:	bl	31418 <flatcc_json_parser_integer@@Base>
   265b4:	cmp	r0, r7
   265b8:	beq	25eb4 <main@@Base+0x12b10>
   265bc:	mov	r4, r0
   265c0:	ldr	r0, [sp, #40]	; 0x28
   265c4:	cmp	r0, #0
   265c8:	beq	25ec4 <main@@Base+0x12b20>
   265cc:	mov	r0, r9
   265d0:	mov	r1, r4
   265d4:	mov	r2, r8
   265d8:	mov	r3, #8
   265dc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   265e0:	mov	r4, r0
   265e4:	cmp	r7, r4
   265e8:	bne	25f44 <main@@Base+0x12ba0>
   265ec:	b	25f08 <main@@Base+0x12b64>
   265f0:	mov	r0, r9
   265f4:	mov	r1, r4
   265f8:	mov	r2, r8
   265fc:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   26600:	mov	r4, r0
   26604:	sub	r0, r8, r4
   26608:	cmp	r0, #2
   2660c:	blt	26640 <main@@Base+0x1329c>
   26610:	ldrb	r0, [r4]
   26614:	cmp	r0, #32
   26618:	bls	2662c <main@@Base+0x13288>
   2661c:	mov	r2, r4
   26620:	cmp	r2, r8
   26624:	bne	2665c <main@@Base+0x132b8>
   26628:	b	266d0 <main@@Base+0x1332c>
   2662c:	bne	26640 <main@@Base+0x1329c>
   26630:	mov	r2, r4
   26634:	ldrb	r0, [r2, #1]!
   26638:	cmp	r0, #32
   2663c:	bhi	26654 <main@@Base+0x132b0>
   26640:	mov	r0, r9
   26644:	mov	r1, r4
   26648:	mov	r2, r8
   2664c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26650:	mov	r2, r0
   26654:	cmp	r2, r8
   26658:	beq	266d0 <main@@Base+0x1332c>
   2665c:	ldrb	r0, [r2]
   26660:	cmp	r0, #44	; 0x2c
   26664:	bne	266d8 <main@@Base+0x13334>
   26668:	add	r1, r2, #1
   2666c:	sub	r0, r8, r1
   26670:	cmp	r0, #2
   26674:	blt	266a8 <main@@Base+0x13304>
   26678:	ldrb	r0, [r1]
   2667c:	cmp	r0, #32
   26680:	bls	26698 <main@@Base+0x132f4>
   26684:	mov	r2, r1
   26688:	cmp	r2, r8
   2668c:	bne	266c0 <main@@Base+0x1331c>
   26690:	b	26704 <main@@Base+0x13360>
   26694:	strdeq	r1, [r2], -r8
   26698:	bne	266a8 <main@@Base+0x13304>
   2669c:	ldrb	r0, [r2, #2]!
   266a0:	cmp	r0, #32
   266a4:	bhi	266b8 <main@@Base+0x13314>
   266a8:	mov	r0, r9
   266ac:	mov	r2, r8
   266b0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   266b4:	mov	r2, r0
   266b8:	cmp	r2, r8
   266bc:	beq	26704 <main@@Base+0x13360>
   266c0:	ldrb	r0, [r2]
   266c4:	cmp	r0, #125	; 0x7d
   266c8:	bne	25f7c <main@@Base+0x12bd8>
   266cc:	b	266e0 <main@@Base+0x1333c>
   266d0:	mov	r4, r8
   266d4:	b	25050 <main@@Base+0x11cac>
   266d8:	cmp	r0, #125	; 0x7d
   266dc:	bne	26710 <main@@Base+0x1336c>
   266e0:	add	r1, r2, #1
   266e4:	sub	r0, r8, r1
   266e8:	cmp	r0, #2
   266ec:	blt	2673c <main@@Base+0x13398>
   266f0:	ldrb	r0, [r1]
   266f4:	cmp	r0, #32
   266f8:	bls	26728 <main@@Base+0x13384>
   266fc:	mov	r4, r1
   26700:	b	25050 <main@@Base+0x11cac>
   26704:	mov	r0, r9
   26708:	mov	r1, r8
   2670c:	b	26718 <main@@Base+0x13374>
   26710:	mov	r0, r9
   26714:	mov	r1, r2
   26718:	mov	r2, r8
   2671c:	mov	r3, #10
   26720:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   26724:	b	2504c <main@@Base+0x11ca8>
   26728:	bne	2673c <main@@Base+0x13398>
   2672c:	ldrb	r0, [r2, #2]!
   26730:	cmp	r0, #32
   26734:	mov	r4, r2
   26738:	bhi	25050 <main@@Base+0x11cac>
   2673c:	mov	r0, r9
   26740:	mov	r2, r8
   26744:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26748:	b	2504c <main@@Base+0x11ca8>
   2674c:	beq	26760 <main@@Base+0x133bc>
   26750:	b	26770 <main@@Base+0x133cc>
   26754:	ldr	r9, [sp, #24]
   26758:	ldr	r6, [sp, #32]
   2675c:	bne	26770 <main@@Base+0x133cc>
   26760:	ldrb	r0, [r2, #2]!
   26764:	cmp	r0, #32
   26768:	mov	r4, r2
   2676c:	bhi	254b0 <main@@Base+0x1210c>
   26770:	mov	r0, r9
   26774:	mov	r2, r8
   26778:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2677c:	b	254ac <main@@Base+0x12108>
   26780:	mov	r4, r8
   26784:	cmp	r9, r4
   26788:	bne	26804 <main@@Base+0x13460>
   2678c:	b	267d0 <main@@Base+0x1342c>
   26790:	mov	r4, r9
   26794:	cmp	r9, r4
   26798:	bne	26804 <main@@Base+0x13460>
   2679c:	b	267d0 <main@@Base+0x1342c>
   267a0:	andeq	r1, r2, r4, lsr #21
   267a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   267a8:	cmp	r0, #0
   267ac:	beq	26848 <main@@Base+0x134a4>
   267b0:	ldr	r0, [sp, #24]
   267b4:	mov	r1, r4
   267b8:	mov	r2, r8
   267bc:	mov	r3, #7
   267c0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   267c4:	mov	r4, r0
   267c8:	cmp	r9, r4
   267cc:	bne	26804 <main@@Base+0x13460>
   267d0:	sub	r0, fp, #44	; 0x2c
   267d4:	mov	r1, r9
   267d8:	mov	r2, r8
   267dc:	str	r0, [sp]
   267e0:	ldr	r0, [sp, #24]
   267e4:	ldr	r3, [pc, #4060]	; 277c8 <main@@Base+0x14424>
   267e8:	add	r3, pc, r3
   267ec:	bl	238e4 <main@@Base+0x10540>
   267f0:	mov	r4, r0
   267f4:	cmp	r0, r9
   267f8:	cmpne	r4, r8
   267fc:	beq	27ea8 <main@@Base+0x14b04>
   26800:	ldr	r5, [fp, #-44]	; 0xffffffd4
   26804:	cmp	r5, #0
   26808:	bne	2681c <main@@Base+0x13478>
   2680c:	ldr	r0, [sp, #24]
   26810:	ldrb	r0, [r0, #8]
   26814:	tst	r0, #2
   26818:	beq	26840 <main@@Base+0x1349c>
   2681c:	ldr	r0, [sp, #24]
   26820:	mov	r1, #8
   26824:	mov	r2, #4
   26828:	mov	r3, #4
   2682c:	ldr	r0, [r0]
   26830:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   26834:	cmp	r0, #0
   26838:	beq	27ea8 <main@@Base+0x14b04>
   2683c:	str	r5, [r0]
   26840:	ldr	r9, [sp, #24]
   26844:	b	27c78 <main@@Base+0x148d4>
   26848:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2684c:	str	r5, [fp, #-44]	; 0xffffffd4
   26850:	cmp	r9, r4
   26854:	bne	26804 <main@@Base+0x13460>
   26858:	b	267d0 <main@@Base+0x1342c>
   2685c:	cmp	r2, r8
   26860:	mov	sl, r8
   26864:	beq	268b8 <main@@Base+0x13514>
   26868:	ldrb	r0, [r2]
   2686c:	cmp	r0, #46	; 0x2e
   26870:	beq	2688c <main@@Base+0x134e8>
   26874:	cmp	r0, #34	; 0x22
   26878:	bne	268a8 <main@@Base+0x13504>
   2687c:	ldr	r0, [sp, #28]
   26880:	mov	r1, #0
   26884:	add	sl, r2, #1
   26888:	b	268b4 <main@@Base+0x13510>
   2688c:	mov	r1, r2
   26890:	mov	r0, r9
   26894:	mov	r2, r8
   26898:	mov	r3, #5
   2689c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   268a0:	mov	sl, r0
   268a4:	b	268b8 <main@@Base+0x13514>
   268a8:	ldr	r0, [sp, #28]
   268ac:	mov	r1, #1
   268b0:	mov	sl, r2
   268b4:	str	r1, [r0]
   268b8:	sub	r9, r8, sl
   268bc:	mov	r0, #8
   268c0:	cmp	r9, #8
   268c4:	movcc	r0, r9
   268c8:	and	r0, r0, #15
   268cc:	sub	r1, r0, #1
   268d0:	cmp	r1, #7
   268d4:	bhi	26f4c <main@@Base+0x13ba8>
   268d8:	add	r6, pc, #36	; 0x24
   268dc:	mov	r0, #0
   268e0:	mov	ip, #0
   268e4:	mov	lr, #0
   268e8:	mov	r2, #0
   268ec:	mov	r3, #0
   268f0:	mov	r7, #0
   268f4:	mov	r5, #0
   268f8:	mov	r4, #0
   268fc:	ldr	r1, [r6, r1, lsl #2]
   26900:	add	pc, r6, r1
   26904:	andeq	r0, r0, r4, rrx
   26908:	andeq	r0, r0, ip, asr r0
   2690c:	andeq	r0, r0, r4, asr r0
   26910:	andeq	r0, r0, ip, asr #32
   26914:	andeq	r0, r0, r0, asr #32
   26918:	andeq	r0, r0, r4, lsr r0
   2691c:	andeq	r0, r0, r4, lsr #32
   26920:	andeq	r0, r0, r0, lsr #32
   26924:	ldrb	ip, [sl, #7]
   26928:	ldrb	r1, [sl, #6]
   2692c:	mov	lr, r0
   26930:	orr	r1, ip, r1, lsl #8
   26934:	mov	r0, r1
   26938:	ldrb	r1, [sl, #5]
   2693c:	mov	r2, lr
   26940:	orr	r0, r0, r1, lsl #16
   26944:	ldrb	r1, [sl, #4]
   26948:	mov	r3, r2
   2694c:	orr	r0, r0, r1, lsl #24
   26950:	ldrb	r1, [sl, #3]
   26954:	orr	r7, r1, r3
   26958:	ldrb	r1, [sl, #2]
   2695c:	orr	r5, r7, r1, lsl #8
   26960:	ldrb	r1, [sl, #1]
   26964:	orr	r4, r5, r1, lsl #16
   26968:	ldrb	r1, [sl]
   2696c:	orr	r7, r4, r1, lsl #24
   26970:	movw	r1, #25442	; 0x6362
   26974:	movt	r1, #25443	; 0x6363
   26978:	cmp	r7, r1
   2697c:	bhi	26a14 <main@@Base+0x13670>
   26980:	movw	r1, #13108	; 0x3334
   26984:	movt	r1, #12594	; 0x3132
   26988:	eor	r5, r0, r1
   2698c:	movw	r1, #24929	; 0x6161
   26990:	movt	r1, #24929	; 0x6161
   26994:	eor	r0, r7, r1
   26998:	orrs	r0, r5, r0
   2699c:	bne	26a7c <main@@Base+0x136d8>
   269a0:	add	r7, sl, #8
   269a4:	mov	r1, #8
   269a8:	mov	r2, #-268435456	; 0xf0000000
   269ac:	sub	r0, r8, r7
   269b0:	cmp	r0, #8
   269b4:	movcc	r1, r0
   269b8:	add	r1, r2, r1, lsl #28
   269bc:	asr	r1, r1, #28
   269c0:	cmp	r1, #0
   269c4:	blt	27c60 <main@@Base+0x148bc>
   269c8:	ldrb	r1, [r7]
   269cc:	cmp	r1, #53	; 0x35
   269d0:	bne	27c60 <main@@Base+0x148bc>
   269d4:	cmp	r0, #2
   269d8:	blt	27c60 <main@@Base+0x148bc>
   269dc:	ldr	r2, [sp, #28]
   269e0:	mov	r1, sl
   269e4:	ldrb	r0, [r1, #9]!
   269e8:	ldr	r2, [r2]
   269ec:	cmp	r2, #0
   269f0:	beq	26cb8 <main@@Base+0x13914>
   269f4:	cmp	r0, #33	; 0x21
   269f8:	bcc	26a04 <main@@Base+0x13660>
   269fc:	cmp	r0, #58	; 0x3a
   26a00:	bne	27c60 <main@@Base+0x148bc>
   26a04:	ldr	r0, [sp, #28]
   26a08:	mov	r2, #0
   26a0c:	str	r2, [r0]
   26a10:	b	26cc4 <main@@Base+0x13920>
   26a14:	movw	r1, #13108	; 0x3334
   26a18:	movt	r1, #12594	; 0x3132
   26a1c:	eor	r5, r0, r1
   26a20:	ldr	r0, [sp, #16]
   26a24:	eor	r0, r7, r0
   26a28:	orrs	r0, r5, r0
   26a2c:	bne	26acc <main@@Base+0x13728>
   26a30:	cmp	r9, #9
   26a34:	ldr	r9, [sp, #24]
   26a38:	mov	r7, sl
   26a3c:	blt	2716c <main@@Base+0x13dc8>
   26a40:	ldr	r2, [sp, #28]
   26a44:	mov	r1, sl
   26a48:	ldrb	r0, [r1, #8]!
   26a4c:	ldr	r2, [r2]
   26a50:	cmp	r2, #0
   26a54:	beq	26b24 <main@@Base+0x13780>
   26a58:	cmp	r0, #33	; 0x21
   26a5c:	bcc	26a6c <main@@Base+0x136c8>
   26a60:	cmp	r0, #58	; 0x3a
   26a64:	mov	r7, sl
   26a68:	bne	2716c <main@@Base+0x13dc8>
   26a6c:	ldr	r0, [sp, #28]
   26a70:	mov	r2, #0
   26a74:	str	r2, [r0]
   26a78:	b	26b34 <main@@Base+0x13790>
   26a7c:	teq	r7, r1
   26a80:	bne	26d50 <main@@Base+0x139ac>
   26a84:	cmp	r9, #5
   26a88:	mov	r1, sl
   26a8c:	blt	273f8 <main@@Base+0x14054>
   26a90:	ldr	r1, [sp, #28]
   26a94:	mov	r2, sl
   26a98:	ldrb	r0, [r2, #4]!
   26a9c:	ldr	r1, [r1]
   26aa0:	cmp	r1, #0
   26aa4:	beq	26b5c <main@@Base+0x137b8>
   26aa8:	cmp	r0, #33	; 0x21
   26aac:	bcc	26abc <main@@Base+0x13718>
   26ab0:	cmp	r0, #58	; 0x3a
   26ab4:	mov	r1, sl
   26ab8:	bne	273f8 <main@@Base+0x14054>
   26abc:	ldr	r0, [sp, #28]
   26ac0:	mov	r1, #0
   26ac4:	str	r1, [r0]
   26ac8:	b	26b6c <main@@Base+0x137c8>
   26acc:	movw	r0, #25443	; 0x6363
   26ad0:	movt	r0, #25443	; 0x6363
   26ad4:	teq	r7, r0
   26ad8:	bne	26ef0 <main@@Base+0x13b4c>
   26adc:	cmp	r9, #5
   26ae0:	mov	r1, sl
   26ae4:	blt	27454 <main@@Base+0x140b0>
   26ae8:	ldr	r1, [sp, #28]
   26aec:	mov	r2, sl
   26af0:	ldrb	r0, [r2, #4]!
   26af4:	ldr	r1, [r1]
   26af8:	cmp	r1, #0
   26afc:	beq	26b94 <main@@Base+0x137f0>
   26b00:	cmp	r0, #33	; 0x21
   26b04:	bcc	26b14 <main@@Base+0x13770>
   26b08:	cmp	r0, #58	; 0x3a
   26b0c:	mov	r1, sl
   26b10:	bne	27454 <main@@Base+0x140b0>
   26b14:	ldr	r0, [sp, #28]
   26b18:	mov	r1, #0
   26b1c:	str	r1, [r0]
   26b20:	b	26ba4 <main@@Base+0x13800>
   26b24:	cmp	r0, #34	; 0x22
   26b28:	mov	r7, sl
   26b2c:	bne	2716c <main@@Base+0x13dc8>
   26b30:	add	r1, sl, #9
   26b34:	sub	r0, r8, r1
   26b38:	cmp	r0, #2
   26b3c:	blt	26be0 <main@@Base+0x1383c>
   26b40:	ldrb	r0, [r1]
   26b44:	cmp	r0, #32
   26b48:	bls	26bcc <main@@Base+0x13828>
   26b4c:	mov	r7, r1
   26b50:	cmp	r7, r8
   26b54:	bne	26bf8 <main@@Base+0x13854>
   26b58:	b	26ca0 <main@@Base+0x138fc>
   26b5c:	cmp	r0, #34	; 0x22
   26b60:	mov	r1, sl
   26b64:	bne	273f8 <main@@Base+0x14054>
   26b68:	add	r2, sl, #5
   26b6c:	sub	r0, r8, r2
   26b70:	cmp	r0, #2
   26b74:	blt	26d00 <main@@Base+0x1395c>
   26b78:	ldrb	r0, [r2]
   26b7c:	cmp	r0, #32
   26b80:	bls	26cec <main@@Base+0x13948>
   26b84:	mov	r1, r2
   26b88:	cmp	r1, r8
   26b8c:	bne	26d1c <main@@Base+0x13978>
   26b90:	b	26e04 <main@@Base+0x13a60>
   26b94:	cmp	r0, #34	; 0x22
   26b98:	mov	r1, sl
   26b9c:	bne	27454 <main@@Base+0x140b0>
   26ba0:	add	r2, sl, #5
   26ba4:	sub	r0, r8, r2
   26ba8:	cmp	r0, #2
   26bac:	blt	26ea0 <main@@Base+0x13afc>
   26bb0:	ldrb	r0, [r2]
   26bb4:	cmp	r0, #32
   26bb8:	bls	26e8c <main@@Base+0x13ae8>
   26bbc:	mov	r1, r2
   26bc0:	cmp	r1, r8
   26bc4:	bne	26ebc <main@@Base+0x13b18>
   26bc8:	b	26f5c <main@@Base+0x13bb8>
   26bcc:	bne	26be0 <main@@Base+0x1383c>
   26bd0:	mov	r7, r1
   26bd4:	ldrb	r0, [r7, #1]!
   26bd8:	cmp	r0, #32
   26bdc:	bhi	26bf0 <main@@Base+0x1384c>
   26be0:	mov	r0, r9
   26be4:	mov	r2, r8
   26be8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26bec:	mov	r7, r0
   26bf0:	cmp	r7, r8
   26bf4:	beq	26ca0 <main@@Base+0x138fc>
   26bf8:	ldrb	r0, [r7]
   26bfc:	cmp	r0, #58	; 0x3a
   26c00:	bne	26ca0 <main@@Base+0x138fc>
   26c04:	add	r1, r7, #1
   26c08:	sub	r0, r8, r1
   26c0c:	cmp	r0, #2
   26c10:	blt	2715c <main@@Base+0x13db8>
   26c14:	ldrb	r0, [r1]
   26c18:	cmp	r0, #32
   26c1c:	bls	2714c <main@@Base+0x13da8>
   26c20:	mov	r7, r1
   26c24:	cmp	sl, r7
   26c28:	bne	27174 <main@@Base+0x13dd0>
   26c2c:	add	r7, sl, #8
   26c30:	mov	r1, #8
   26c34:	mov	r2, #-268435456	; 0xf0000000
   26c38:	sub	r0, r8, r7
   26c3c:	cmp	r0, #8
   26c40:	movcc	r1, r0
   26c44:	add	r1, r2, r1, lsl #28
   26c48:	asr	r1, r1, #28
   26c4c:	cmp	r1, #0
   26c50:	blt	27c64 <main@@Base+0x148c0>
   26c54:	ldrb	r1, [r7]
   26c58:	cmp	r1, #53	; 0x35
   26c5c:	bne	27c64 <main@@Base+0x148c0>
   26c60:	cmp	r0, #2
   26c64:	blt	27c60 <main@@Base+0x148bc>
   26c68:	ldr	r2, [sp, #28]
   26c6c:	mov	r1, sl
   26c70:	ldrb	r0, [r1, #9]!
   26c74:	ldr	r2, [r2]
   26c78:	cmp	r2, #0
   26c7c:	beq	26fa8 <main@@Base+0x13c04>
   26c80:	cmp	r0, #33	; 0x21
   26c84:	bcc	26c90 <main@@Base+0x138ec>
   26c88:	cmp	r0, #58	; 0x3a
   26c8c:	bne	27c60 <main@@Base+0x148bc>
   26c90:	ldr	r0, [sp, #28]
   26c94:	mov	r2, #0
   26c98:	str	r2, [r0]
   26c9c:	b	26fb4 <main@@Base+0x13c10>
   26ca0:	mov	r0, r9
   26ca4:	mov	r1, r7
   26ca8:	mov	r2, r8
   26cac:	mov	r3, #4
   26cb0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   26cb4:	b	27168 <main@@Base+0x13dc4>
   26cb8:	cmp	r0, #34	; 0x22
   26cbc:	bne	27c60 <main@@Base+0x148bc>
   26cc0:	add	r1, sl, #10
   26cc4:	sub	r0, r8, r1
   26cc8:	cmp	r0, #2
   26ccc:	blt	272ec <main@@Base+0x13f48>
   26cd0:	ldrb	r0, [r1]
   26cd4:	cmp	r0, #32
   26cd8:	bls	272d8 <main@@Base+0x13f34>
   26cdc:	mov	r9, r1
   26ce0:	cmp	r9, r8
   26ce4:	bne	27304 <main@@Base+0x13f60>
   26ce8:	b	2733c <main@@Base+0x13f98>
   26cec:	bne	26d00 <main@@Base+0x1395c>
   26cf0:	mov	r1, r2
   26cf4:	ldrb	r0, [r1, #1]!
   26cf8:	cmp	r0, #32
   26cfc:	bhi	26d14 <main@@Base+0x13970>
   26d00:	ldr	r0, [sp, #24]
   26d04:	mov	r1, r2
   26d08:	mov	r2, r8
   26d0c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26d10:	mov	r1, r0
   26d14:	cmp	r1, r8
   26d18:	beq	26e04 <main@@Base+0x13a60>
   26d1c:	ldrb	r0, [r1]
   26d20:	cmp	r0, #58	; 0x3a
   26d24:	bne	26e04 <main@@Base+0x13a60>
   26d28:	add	r2, r1, #1
   26d2c:	sub	r0, r8, r2
   26d30:	cmp	r0, #2
   26d34:	blt	273e4 <main@@Base+0x14040>
   26d38:	ldrb	r0, [r2]
   26d3c:	cmp	r0, #32
   26d40:	bls	273d4 <main@@Base+0x14030>
   26d44:	mov	r1, r2
   26d48:	cmp	sl, r1
   26d4c:	bne	27400 <main@@Base+0x1405c>
   26d50:	movw	r1, #25186	; 0x6262
   26d54:	movt	r1, #25186	; 0x6262
   26d58:	eor	r0, r7, r1
   26d5c:	orrs	r0, r5, r0
   26d60:	bne	26db0 <main@@Base+0x13a0c>
   26d64:	cmp	r9, #9
   26d68:	ldr	r9, [sp, #24]
   26d6c:	mov	r7, sl
   26d70:	blt	27564 <main@@Base+0x141c0>
   26d74:	ldr	r2, [sp, #28]
   26d78:	mov	r1, sl
   26d7c:	ldrb	r0, [r1, #8]!
   26d80:	ldr	r2, [r2]
   26d84:	cmp	r2, #0
   26d88:	beq	26e18 <main@@Base+0x13a74>
   26d8c:	cmp	r0, #33	; 0x21
   26d90:	bcc	26da0 <main@@Base+0x139fc>
   26d94:	cmp	r0, #58	; 0x3a
   26d98:	mov	r7, sl
   26d9c:	bne	27564 <main@@Base+0x141c0>
   26da0:	ldr	r0, [sp, #28]
   26da4:	mov	r2, #0
   26da8:	str	r2, [r0]
   26dac:	b	26e28 <main@@Base+0x13a84>
   26db0:	teq	r7, r1
   26db4:	bne	26f4c <main@@Base+0x13ba8>
   26db8:	cmp	r9, #5
   26dbc:	ldr	r9, [sp, #24]
   26dc0:	mov	r1, sl
   26dc4:	blt	279c8 <main@@Base+0x14624>
   26dc8:	ldr	r1, [sp, #28]
   26dcc:	mov	r2, sl
   26dd0:	ldrb	r0, [r2, #4]!
   26dd4:	ldr	r1, [r1]
   26dd8:	cmp	r1, #0
   26ddc:	beq	26e50 <main@@Base+0x13aac>
   26de0:	cmp	r0, #33	; 0x21
   26de4:	bcc	26df4 <main@@Base+0x13a50>
   26de8:	cmp	r0, #58	; 0x3a
   26dec:	mov	r1, sl
   26df0:	bne	279c8 <main@@Base+0x14624>
   26df4:	ldr	r0, [sp, #28]
   26df8:	mov	r1, #0
   26dfc:	str	r1, [r0]
   26e00:	b	26e60 <main@@Base+0x13abc>
   26e04:	ldr	r0, [sp, #24]
   26e08:	mov	r2, r8
   26e0c:	mov	r3, #4
   26e10:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   26e14:	b	273f4 <main@@Base+0x14050>
   26e18:	cmp	r0, #34	; 0x22
   26e1c:	mov	r7, sl
   26e20:	bne	27564 <main@@Base+0x141c0>
   26e24:	add	r1, sl, #9
   26e28:	sub	r0, r8, r1
   26e2c:	cmp	r0, #2
   26e30:	blt	26ff0 <main@@Base+0x13c4c>
   26e34:	ldrb	r0, [r1]
   26e38:	cmp	r0, #32
   26e3c:	bls	26fdc <main@@Base+0x13c38>
   26e40:	mov	r7, r1
   26e44:	cmp	r7, r8
   26e48:	bne	27008 <main@@Base+0x13c64>
   26e4c:	b	27044 <main@@Base+0x13ca0>
   26e50:	cmp	r0, #34	; 0x22
   26e54:	mov	r1, sl
   26e58:	bne	279c8 <main@@Base+0x14624>
   26e5c:	add	r2, sl, #5
   26e60:	sub	r0, r8, r2
   26e64:	cmp	r0, #2
   26e68:	blt	27368 <main@@Base+0x13fc4>
   26e6c:	ldrb	r0, [r2]
   26e70:	cmp	r0, #32
   26e74:	bls	27354 <main@@Base+0x13fb0>
   26e78:	mov	r1, r2
   26e7c:	cmp	r1, r8
   26e80:	bne	27384 <main@@Base+0x13fe0>
   26e84:	b	273c0 <main@@Base+0x1401c>
   26e88:	andeq	r1, r2, r0, lsr r3
   26e8c:	bne	26ea0 <main@@Base+0x13afc>
   26e90:	mov	r1, r2
   26e94:	ldrb	r0, [r1, #1]!
   26e98:	cmp	r0, #32
   26e9c:	bhi	26eb4 <main@@Base+0x13b10>
   26ea0:	ldr	r0, [sp, #24]
   26ea4:	mov	r1, r2
   26ea8:	mov	r2, r8
   26eac:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26eb0:	mov	r1, r0
   26eb4:	cmp	r1, r8
   26eb8:	beq	26f5c <main@@Base+0x13bb8>
   26ebc:	ldrb	r0, [r1]
   26ec0:	cmp	r0, #58	; 0x3a
   26ec4:	bne	26f5c <main@@Base+0x13bb8>
   26ec8:	add	r2, r1, #1
   26ecc:	sub	r0, r8, r2
   26ed0:	cmp	r0, #2
   26ed4:	blt	27440 <main@@Base+0x1409c>
   26ed8:	ldrb	r0, [r2]
   26edc:	cmp	r0, #32
   26ee0:	bls	27430 <main@@Base+0x1408c>
   26ee4:	mov	r1, r2
   26ee8:	cmp	sl, r1
   26eec:	bne	2745c <main@@Base+0x140b8>
   26ef0:	ldr	r0, [sp, #12]
   26ef4:	eor	r0, r7, r0
   26ef8:	orrs	r0, r5, r0
   26efc:	bne	26f4c <main@@Base+0x13ba8>
   26f00:	cmp	r9, #9
   26f04:	ldr	r9, [sp, #24]
   26f08:	mov	r7, sl
   26f0c:	blt	276e0 <main@@Base+0x1433c>
   26f10:	ldr	r2, [sp, #28]
   26f14:	mov	r1, sl
   26f18:	ldrb	r0, [r1, #8]!
   26f1c:	ldr	r2, [r2]
   26f20:	cmp	r2, #0
   26f24:	beq	26f70 <main@@Base+0x13bcc>
   26f28:	cmp	r0, #33	; 0x21
   26f2c:	bcc	26f3c <main@@Base+0x13b98>
   26f30:	cmp	r0, #58	; 0x3a
   26f34:	mov	r7, sl
   26f38:	bne	276e0 <main@@Base+0x1433c>
   26f3c:	ldr	r0, [sp, #28]
   26f40:	mov	r2, #0
   26f44:	str	r2, [r0]
   26f48:	b	26f80 <main@@Base+0x13bdc>
   26f4c:	ldr	r9, [sp, #24]
   26f50:	mov	r0, r9
   26f54:	mov	r1, sl
   26f58:	b	27c6c <main@@Base+0x148c8>
   26f5c:	ldr	r0, [sp, #24]
   26f60:	mov	r2, r8
   26f64:	mov	r3, #4
   26f68:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   26f6c:	b	27450 <main@@Base+0x140ac>
   26f70:	cmp	r0, #34	; 0x22
   26f74:	mov	r7, sl
   26f78:	bne	276e0 <main@@Base+0x1433c>
   26f7c:	add	r1, sl, #9
   26f80:	sub	r0, r8, r1
   26f84:	cmp	r0, #2
   26f88:	blt	27070 <main@@Base+0x13ccc>
   26f8c:	ldrb	r0, [r1]
   26f90:	cmp	r0, #32
   26f94:	bls	2705c <main@@Base+0x13cb8>
   26f98:	mov	r7, r1
   26f9c:	cmp	r7, r8
   26fa0:	bne	27088 <main@@Base+0x13ce4>
   26fa4:	b	27134 <main@@Base+0x13d90>
   26fa8:	cmp	r0, #34	; 0x22
   26fac:	bne	27c60 <main@@Base+0x148bc>
   26fb0:	add	r1, sl, #10
   26fb4:	sub	r0, r8, r1
   26fb8:	cmp	r0, #2
   26fbc:	blt	274d8 <main@@Base+0x14134>
   26fc0:	ldrb	r0, [r1]
   26fc4:	cmp	r0, #32
   26fc8:	bls	274c4 <main@@Base+0x14120>
   26fcc:	mov	r9, r1
   26fd0:	cmp	r9, r8
   26fd4:	bne	274f0 <main@@Base+0x1414c>
   26fd8:	b	27528 <main@@Base+0x14184>
   26fdc:	bne	26ff0 <main@@Base+0x13c4c>
   26fe0:	mov	r7, r1
   26fe4:	ldrb	r0, [r7, #1]!
   26fe8:	cmp	r0, #32
   26fec:	bhi	27000 <main@@Base+0x13c5c>
   26ff0:	mov	r0, r9
   26ff4:	mov	r2, r8
   26ff8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   26ffc:	mov	r7, r0
   27000:	cmp	r7, r8
   27004:	beq	27044 <main@@Base+0x13ca0>
   27008:	ldrb	r0, [r7]
   2700c:	cmp	r0, #58	; 0x3a
   27010:	bne	27044 <main@@Base+0x13ca0>
   27014:	add	r1, r7, #1
   27018:	sub	r0, r8, r1
   2701c:	cmp	r0, #2
   27020:	blt	27554 <main@@Base+0x141b0>
   27024:	ldrb	r0, [r1]
   27028:	cmp	r0, #32
   2702c:	bls	27540 <main@@Base+0x1419c>
   27030:	ldr	r9, [sp, #24]
   27034:	mov	r7, r1
   27038:	cmp	sl, r7
   2703c:	bne	2756c <main@@Base+0x141c8>
   27040:	b	26f50 <main@@Base+0x13bac>
   27044:	mov	r0, r9
   27048:	mov	r1, r7
   2704c:	mov	r2, r8
   27050:	mov	r3, #4
   27054:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27058:	b	27560 <main@@Base+0x141bc>
   2705c:	bne	27070 <main@@Base+0x13ccc>
   27060:	mov	r7, r1
   27064:	ldrb	r0, [r7, #1]!
   27068:	cmp	r0, #32
   2706c:	bhi	27080 <main@@Base+0x13cdc>
   27070:	mov	r0, r9
   27074:	mov	r2, r8
   27078:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2707c:	mov	r7, r0
   27080:	cmp	r7, r8
   27084:	beq	27134 <main@@Base+0x13d90>
   27088:	ldrb	r0, [r7]
   2708c:	cmp	r0, #58	; 0x3a
   27090:	bne	27134 <main@@Base+0x13d90>
   27094:	add	r1, r7, #1
   27098:	sub	r0, r8, r1
   2709c:	cmp	r0, #2
   270a0:	blt	276d0 <main@@Base+0x1432c>
   270a4:	ldrb	r0, [r1]
   270a8:	cmp	r0, #32
   270ac:	bls	276bc <main@@Base+0x14318>
   270b0:	ldr	r9, [sp, #24]
   270b4:	mov	r7, r1
   270b8:	cmp	sl, r7
   270bc:	bne	276e8 <main@@Base+0x14344>
   270c0:	add	r7, sl, #8
   270c4:	mov	r1, #8
   270c8:	mov	r2, #-268435456	; 0xf0000000
   270cc:	sub	r0, r8, r7
   270d0:	cmp	r0, #8
   270d4:	movcc	r1, r0
   270d8:	add	r1, r2, r1, lsl #28
   270dc:	asr	r1, r1, #28
   270e0:	cmp	r1, #0
   270e4:	blt	27c64 <main@@Base+0x148c0>
   270e8:	ldrb	r1, [r7]
   270ec:	cmp	r1, #53	; 0x35
   270f0:	bne	27c64 <main@@Base+0x148c0>
   270f4:	cmp	r0, #2
   270f8:	blt	27c60 <main@@Base+0x148bc>
   270fc:	ldr	r2, [sp, #28]
   27100:	mov	r1, sl
   27104:	ldrb	r0, [r1, #9]!
   27108:	ldr	r2, [r2]
   2710c:	cmp	r2, #0
   27110:	beq	2748c <main@@Base+0x140e8>
   27114:	cmp	r0, #33	; 0x21
   27118:	bcc	27124 <main@@Base+0x13d80>
   2711c:	cmp	r0, #58	; 0x3a
   27120:	bne	27c60 <main@@Base+0x148bc>
   27124:	ldr	r0, [sp, #28]
   27128:	mov	r2, #0
   2712c:	str	r2, [r0]
   27130:	b	27498 <main@@Base+0x140f4>
   27134:	mov	r0, r9
   27138:	mov	r1, r7
   2713c:	mov	r2, r8
   27140:	mov	r3, #4
   27144:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27148:	b	276dc <main@@Base+0x14338>
   2714c:	bne	2715c <main@@Base+0x13db8>
   27150:	ldrb	r0, [r7, #2]!
   27154:	cmp	r0, #32
   27158:	bhi	2716c <main@@Base+0x13dc8>
   2715c:	mov	r0, r9
   27160:	mov	r2, r8
   27164:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27168:	mov	r7, r0
   2716c:	cmp	sl, r7
   27170:	beq	26c2c <main@@Base+0x13888>
   27174:	mov	r5, #0
   27178:	cmp	r7, r8
   2717c:	str	r5, [fp, #-36]	; 0xffffffdc
   27180:	str	r5, [fp, #-40]	; 0xffffffd8
   27184:	str	r5, [sp, #44]	; 0x2c
   27188:	str	r5, [sp, #40]	; 0x28
   2718c:	str	r5, [fp, #-44]	; 0xffffffd4
   27190:	beq	271f0 <main@@Base+0x13e4c>
   27194:	sub	r0, fp, #40	; 0x28
   27198:	mov	r1, r7
   2719c:	mov	r2, r8
   271a0:	sub	r3, fp, #44	; 0x2c
   271a4:	str	r0, [sp]
   271a8:	mov	r0, r9
   271ac:	bl	31418 <flatcc_json_parser_integer@@Base>
   271b0:	ldr	r6, [sp, #32]
   271b4:	cmp	r0, r7
   271b8:	beq	27208 <main@@Base+0x13e64>
   271bc:	sub	sl, fp, #44	; 0x2c
   271c0:	mov	r4, r0
   271c4:	ldm	sl, {r0, r5, sl}
   271c8:	cmp	r0, #0
   271cc:	beq	27220 <main@@Base+0x13e7c>
   271d0:	subs	r0, r5, #1
   271d4:	sbcs	r0, sl, #-2147483648	; 0x80000000
   271d8:	bcc	27254 <main@@Base+0x13eb0>
   271dc:	mov	r0, r9
   271e0:	mov	r1, r4
   271e4:	mov	r2, r8
   271e8:	mov	r3, #8
   271ec:	b	27238 <main@@Base+0x13e94>
   271f0:	ldr	r6, [sp, #32]
   271f4:	mov	sl, #0
   271f8:	mov	r4, r8
   271fc:	cmp	r7, r4
   27200:	bne	272a4 <main@@Base+0x13f00>
   27204:	b	2726c <main@@Base+0x13ec8>
   27208:	mov	r5, #0
   2720c:	mov	sl, #0
   27210:	mov	r4, r7
   27214:	cmp	r7, r4
   27218:	bne	272a4 <main@@Base+0x13f00>
   2721c:	b	2726c <main@@Base+0x13ec8>
   27220:	cmn	sl, #1
   27224:	bgt	2725c <main@@Base+0x13eb8>
   27228:	mov	r0, r9
   2722c:	mov	r1, r4
   27230:	mov	r2, r8
   27234:	mov	r3, #7
   27238:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2723c:	mov	r4, r0
   27240:	mov	r5, #0
   27244:	mov	sl, #0
   27248:	cmp	r7, r4
   2724c:	bne	272a4 <main@@Base+0x13f00>
   27250:	b	2726c <main@@Base+0x13ec8>
   27254:	rsbs	r5, r5, #0
   27258:	rsc	sl, sl, #0
   2725c:	str	r5, [sp, #40]	; 0x28
   27260:	str	sl, [sp, #44]	; 0x2c
   27264:	cmp	r7, r4
   27268:	bne	272a4 <main@@Base+0x13f00>
   2726c:	add	r0, sp, #40	; 0x28
   27270:	mov	r1, r7
   27274:	mov	r2, r8
   27278:	str	r0, [sp]
   2727c:	mov	r0, r9
   27280:	ldr	r3, [pc, #3144]	; 27ed0 <main@@Base+0x14b2c>
   27284:	add	r3, pc, r3
   27288:	bl	2368c <main@@Base+0x102e8>
   2728c:	mov	r4, r0
   27290:	cmp	r0, r7
   27294:	cmpne	r4, r8
   27298:	beq	27eac <main@@Base+0x14b08>
   2729c:	ldr	r5, [sp, #40]	; 0x28
   272a0:	ldr	sl, [sp, #44]	; 0x2c
   272a4:	orrs	r0, r5, sl
   272a8:	bne	272b8 <main@@Base+0x13f14>
   272ac:	ldrb	r0, [r9, #8]
   272b0:	tst	r0, #2
   272b4:	beq	27c7c <main@@Base+0x148d8>
   272b8:	ldr	r0, [r9]
   272bc:	mov	r1, #5
   272c0:	mov	r2, #8
   272c4:	mov	r3, #8
   272c8:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   272cc:	cmp	r0, #0
   272d0:	bne	2784c <main@@Base+0x144a8>
   272d4:	b	27eac <main@@Base+0x14b08>
   272d8:	bne	272ec <main@@Base+0x13f48>
   272dc:	mov	r9, r1
   272e0:	ldrb	r0, [r9, #1]!
   272e4:	cmp	r0, #32
   272e8:	bhi	272fc <main@@Base+0x13f58>
   272ec:	ldr	r0, [sp, #24]
   272f0:	mov	r2, r8
   272f4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   272f8:	mov	r9, r0
   272fc:	cmp	r9, r8
   27300:	beq	2733c <main@@Base+0x13f98>
   27304:	ldrb	r0, [r9]
   27308:	cmp	r0, #58	; 0x3a
   2730c:	bne	2733c <main@@Base+0x13f98>
   27310:	add	r1, r9, #1
   27314:	sub	r0, r8, r1
   27318:	cmp	r0, #2
   2731c:	blt	27864 <main@@Base+0x144c0>
   27320:	ldrb	r0, [r1]
   27324:	cmp	r0, #32
   27328:	bls	27854 <main@@Base+0x144b0>
   2732c:	mov	r9, r1
   27330:	cmp	r7, r9
   27334:	bne	2787c <main@@Base+0x144d8>
   27338:	b	27c60 <main@@Base+0x148bc>
   2733c:	ldr	r0, [sp, #24]
   27340:	mov	r1, r9
   27344:	mov	r2, r8
   27348:	mov	r3, #4
   2734c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27350:	b	27870 <main@@Base+0x144cc>
   27354:	bne	27368 <main@@Base+0x13fc4>
   27358:	mov	r1, r2
   2735c:	ldrb	r0, [r1, #1]!
   27360:	cmp	r0, #32
   27364:	bhi	2737c <main@@Base+0x13fd8>
   27368:	mov	r1, r2
   2736c:	mov	r0, r9
   27370:	mov	r2, r8
   27374:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27378:	mov	r1, r0
   2737c:	cmp	r1, r8
   27380:	beq	273c0 <main@@Base+0x1401c>
   27384:	ldrb	r0, [r1]
   27388:	cmp	r0, #58	; 0x3a
   2738c:	bne	273c0 <main@@Base+0x1401c>
   27390:	add	r2, r1, #1
   27394:	sub	r0, r8, r2
   27398:	cmp	r0, #2
   2739c:	blt	279b4 <main@@Base+0x14610>
   273a0:	ldrb	r0, [r2]
   273a4:	cmp	r0, #32
   273a8:	bls	279a0 <main@@Base+0x145fc>
   273ac:	ldr	r9, [sp, #24]
   273b0:	mov	r1, r2
   273b4:	cmp	sl, r1
   273b8:	bne	279d0 <main@@Base+0x1462c>
   273bc:	b	26f50 <main@@Base+0x13bac>
   273c0:	mov	r0, r9
   273c4:	mov	r2, r8
   273c8:	mov	r3, #4
   273cc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   273d0:	b	279c4 <main@@Base+0x14620>
   273d4:	bne	273e4 <main@@Base+0x14040>
   273d8:	ldrb	r0, [r1, #2]!
   273dc:	cmp	r0, #32
   273e0:	bhi	273f8 <main@@Base+0x14054>
   273e4:	ldr	r0, [sp, #24]
   273e8:	mov	r1, r2
   273ec:	mov	r2, r8
   273f0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   273f4:	mov	r1, r0
   273f8:	cmp	sl, r1
   273fc:	beq	26d50 <main@@Base+0x139ac>
   27400:	ldr	r9, [sp, #24]
   27404:	mov	r2, r8
   27408:	add	r3, sp, #36	; 0x24
   2740c:	mov	r0, r9
   27410:	bl	319ac <flatcc_json_parser_build_string@@Base>
   27414:	mov	r4, r0
   27418:	ldr	r0, [sp, #36]	; 0x24
   2741c:	cmp	r0, #0
   27420:	beq	27eac <main@@Base+0x14b08>
   27424:	ldr	r0, [r9]
   27428:	mov	r1, #0
   2742c:	b	279f8 <main@@Base+0x14654>
   27430:	bne	27440 <main@@Base+0x1409c>
   27434:	ldrb	r0, [r1, #2]!
   27438:	cmp	r0, #32
   2743c:	bhi	27454 <main@@Base+0x140b0>
   27440:	ldr	r0, [sp, #24]
   27444:	mov	r1, r2
   27448:	mov	r2, r8
   2744c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27450:	mov	r1, r0
   27454:	cmp	sl, r1
   27458:	beq	26ef0 <main@@Base+0x13b4c>
   2745c:	ldr	r9, [sp, #24]
   27460:	mov	r2, r8
   27464:	add	r3, sp, #36	; 0x24
   27468:	mov	r0, r9
   2746c:	bl	319ac <flatcc_json_parser_build_string@@Base>
   27470:	mov	r4, r0
   27474:	ldr	r0, [sp, #36]	; 0x24
   27478:	cmp	r0, #0
   2747c:	beq	27eac <main@@Base+0x14b08>
   27480:	ldr	r0, [r9]
   27484:	mov	r1, #4
   27488:	b	279f8 <main@@Base+0x14654>
   2748c:	cmp	r0, #34	; 0x22
   27490:	bne	27c60 <main@@Base+0x148bc>
   27494:	add	r1, sl, #10
   27498:	sub	r0, r8, r1
   2749c:	cmp	r0, #2
   274a0:	blt	27a28 <main@@Base+0x14684>
   274a4:	ldrb	r0, [r1]
   274a8:	cmp	r0, #32
   274ac:	bls	27a14 <main@@Base+0x14670>
   274b0:	mov	r9, r1
   274b4:	cmp	r9, r8
   274b8:	bne	27a40 <main@@Base+0x1469c>
   274bc:	b	27a78 <main@@Base+0x146d4>
   274c0:	andeq	r0, r2, r4, asr sp
   274c4:	bne	274d8 <main@@Base+0x14134>
   274c8:	mov	r9, r1
   274cc:	ldrb	r0, [r9, #1]!
   274d0:	cmp	r0, #32
   274d4:	bhi	274e8 <main@@Base+0x14144>
   274d8:	ldr	r0, [sp, #24]
   274dc:	mov	r2, r8
   274e0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   274e4:	mov	r9, r0
   274e8:	cmp	r9, r8
   274ec:	beq	27528 <main@@Base+0x14184>
   274f0:	ldrb	r0, [r9]
   274f4:	cmp	r0, #58	; 0x3a
   274f8:	bne	27528 <main@@Base+0x14184>
   274fc:	add	r1, r9, #1
   27500:	sub	r0, r8, r1
   27504:	cmp	r0, #2
   27508:	blt	27aa0 <main@@Base+0x146fc>
   2750c:	ldrb	r0, [r1]
   27510:	cmp	r0, #32
   27514:	bls	27a90 <main@@Base+0x146ec>
   27518:	mov	r9, r1
   2751c:	cmp	r7, r9
   27520:	bne	27ab8 <main@@Base+0x14714>
   27524:	b	27c60 <main@@Base+0x148bc>
   27528:	ldr	r0, [sp, #24]
   2752c:	mov	r1, r9
   27530:	mov	r2, r8
   27534:	mov	r3, #4
   27538:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2753c:	b	27aac <main@@Base+0x14708>
   27540:	ldr	r9, [sp, #24]
   27544:	bne	27554 <main@@Base+0x141b0>
   27548:	ldrb	r0, [r7, #2]!
   2754c:	cmp	r0, #32
   27550:	bhi	27564 <main@@Base+0x141c0>
   27554:	mov	r0, r9
   27558:	mov	r2, r8
   2755c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27560:	mov	r7, r0
   27564:	cmp	sl, r7
   27568:	beq	26f50 <main@@Base+0x13bac>
   2756c:	mov	r5, #0
   27570:	cmp	r7, r8
   27574:	str	r5, [fp, #-36]	; 0xffffffdc
   27578:	str	r5, [fp, #-40]	; 0xffffffd8
   2757c:	str	r5, [sp, #44]	; 0x2c
   27580:	str	r5, [sp, #40]	; 0x28
   27584:	str	r5, [fp, #-44]	; 0xffffffd4
   27588:	beq	275e8 <main@@Base+0x14244>
   2758c:	sub	r0, fp, #40	; 0x28
   27590:	mov	r1, r7
   27594:	mov	r2, r8
   27598:	sub	r3, fp, #44	; 0x2c
   2759c:	str	r0, [sp]
   275a0:	mov	r0, r9
   275a4:	bl	31418 <flatcc_json_parser_integer@@Base>
   275a8:	ldr	r6, [sp, #32]
   275ac:	cmp	r0, r7
   275b0:	beq	27600 <main@@Base+0x1425c>
   275b4:	sub	sl, fp, #44	; 0x2c
   275b8:	mov	r4, r0
   275bc:	ldm	sl, {r0, r5, sl}
   275c0:	cmp	r0, #0
   275c4:	beq	27618 <main@@Base+0x14274>
   275c8:	subs	r0, r5, #1
   275cc:	sbcs	r0, sl, #-2147483648	; 0x80000000
   275d0:	bcc	2764c <main@@Base+0x142a8>
   275d4:	mov	r0, r9
   275d8:	mov	r1, r4
   275dc:	mov	r2, r8
   275e0:	mov	r3, #8
   275e4:	b	27630 <main@@Base+0x1428c>
   275e8:	ldr	r6, [sp, #32]
   275ec:	mov	sl, #0
   275f0:	mov	r4, r8
   275f4:	cmp	r7, r4
   275f8:	bne	2769c <main@@Base+0x142f8>
   275fc:	b	27664 <main@@Base+0x142c0>
   27600:	mov	r5, #0
   27604:	mov	sl, #0
   27608:	mov	r4, r7
   2760c:	cmp	r7, r4
   27610:	bne	2769c <main@@Base+0x142f8>
   27614:	b	27664 <main@@Base+0x142c0>
   27618:	cmn	sl, #1
   2761c:	bgt	27654 <main@@Base+0x142b0>
   27620:	mov	r0, r9
   27624:	mov	r1, r4
   27628:	mov	r2, r8
   2762c:	mov	r3, #7
   27630:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27634:	mov	r4, r0
   27638:	mov	r5, #0
   2763c:	mov	sl, #0
   27640:	cmp	r7, r4
   27644:	bne	2769c <main@@Base+0x142f8>
   27648:	b	27664 <main@@Base+0x142c0>
   2764c:	rsbs	r5, r5, #0
   27650:	rsc	sl, sl, #0
   27654:	str	r5, [sp, #40]	; 0x28
   27658:	str	sl, [sp, #44]	; 0x2c
   2765c:	cmp	r7, r4
   27660:	bne	2769c <main@@Base+0x142f8>
   27664:	add	r0, sp, #40	; 0x28
   27668:	mov	r1, r7
   2766c:	mov	r2, r8
   27670:	str	r0, [sp]
   27674:	mov	r0, r9
   27678:	ldr	r3, [pc, #2124]	; 27ecc <main@@Base+0x14b28>
   2767c:	add	r3, pc, r3
   27680:	bl	2368c <main@@Base+0x102e8>
   27684:	mov	r4, r0
   27688:	cmp	r0, r7
   2768c:	cmpne	r4, r8
   27690:	beq	27ea8 <main@@Base+0x14b04>
   27694:	ldr	r5, [sp, #40]	; 0x28
   27698:	ldr	sl, [sp, #44]	; 0x2c
   2769c:	orrs	r0, r5, sl
   276a0:	bne	276b0 <main@@Base+0x1430c>
   276a4:	ldrb	r0, [r9, #8]
   276a8:	tst	r0, #2
   276ac:	beq	27c7c <main@@Base+0x148d8>
   276b0:	ldr	r0, [r9]
   276b4:	mov	r1, #3
   276b8:	b	27838 <main@@Base+0x14494>
   276bc:	ldr	r9, [sp, #24]
   276c0:	bne	276d0 <main@@Base+0x1432c>
   276c4:	ldrb	r0, [r7, #2]!
   276c8:	cmp	r0, #32
   276cc:	bhi	276e0 <main@@Base+0x1433c>
   276d0:	mov	r0, r9
   276d4:	mov	r2, r8
   276d8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   276dc:	mov	r7, r0
   276e0:	cmp	sl, r7
   276e4:	beq	270c0 <main@@Base+0x13d1c>
   276e8:	mov	r5, #0
   276ec:	cmp	r7, r8
   276f0:	str	r5, [fp, #-36]	; 0xffffffdc
   276f4:	str	r5, [fp, #-40]	; 0xffffffd8
   276f8:	str	r5, [sp, #44]	; 0x2c
   276fc:	str	r5, [sp, #40]	; 0x28
   27700:	str	r5, [fp, #-44]	; 0xffffffd4
   27704:	beq	27764 <main@@Base+0x143c0>
   27708:	sub	r0, fp, #40	; 0x28
   2770c:	mov	r1, r7
   27710:	mov	r2, r8
   27714:	sub	r3, fp, #44	; 0x2c
   27718:	str	r0, [sp]
   2771c:	mov	r0, r9
   27720:	bl	31418 <flatcc_json_parser_integer@@Base>
   27724:	ldr	r6, [sp, #32]
   27728:	cmp	r0, r7
   2772c:	beq	2777c <main@@Base+0x143d8>
   27730:	sub	sl, fp, #44	; 0x2c
   27734:	mov	r4, r0
   27738:	ldm	sl, {r0, r5, sl}
   2773c:	cmp	r0, #0
   27740:	beq	27794 <main@@Base+0x143f0>
   27744:	subs	r0, r5, #1
   27748:	sbcs	r0, sl, #-2147483648	; 0x80000000
   2774c:	bcc	277cc <main@@Base+0x14428>
   27750:	mov	r0, r9
   27754:	mov	r1, r4
   27758:	mov	r2, r8
   2775c:	mov	r3, #8
   27760:	b	277ac <main@@Base+0x14408>
   27764:	ldr	r6, [sp, #32]
   27768:	mov	sl, #0
   2776c:	mov	r4, r8
   27770:	cmp	r7, r4
   27774:	bne	2781c <main@@Base+0x14478>
   27778:	b	277e4 <main@@Base+0x14440>
   2777c:	mov	r5, #0
   27780:	mov	sl, #0
   27784:	mov	r4, r7
   27788:	cmp	r7, r4
   2778c:	bne	2781c <main@@Base+0x14478>
   27790:	b	277e4 <main@@Base+0x14440>
   27794:	cmn	sl, #1
   27798:	bgt	277d4 <main@@Base+0x14430>
   2779c:	mov	r0, r9
   277a0:	mov	r1, r4
   277a4:	mov	r2, r8
   277a8:	mov	r3, #7
   277ac:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   277b0:	mov	r4, r0
   277b4:	mov	r5, #0
   277b8:	mov	sl, #0
   277bc:	cmp	r7, r4
   277c0:	bne	2781c <main@@Base+0x14478>
   277c4:	b	277e4 <main@@Base+0x14440>
   277c8:			; <UNDEFINED> instruction: 0x00020ab0
   277cc:	rsbs	r5, r5, #0
   277d0:	rsc	sl, sl, #0
   277d4:	str	r5, [sp, #40]	; 0x28
   277d8:	str	sl, [sp, #44]	; 0x2c
   277dc:	cmp	r7, r4
   277e0:	bne	2781c <main@@Base+0x14478>
   277e4:	add	r0, sp, #40	; 0x28
   277e8:	mov	r1, r7
   277ec:	mov	r2, r8
   277f0:	str	r0, [sp]
   277f4:	mov	r0, r9
   277f8:	ldr	r3, [pc, #1752]	; 27ed8 <main@@Base+0x14b34>
   277fc:	add	r3, pc, r3
   27800:	bl	2368c <main@@Base+0x102e8>
   27804:	mov	r4, r0
   27808:	cmp	r0, r7
   2780c:	cmpne	r4, r8
   27810:	beq	27ea8 <main@@Base+0x14b04>
   27814:	ldr	r5, [sp, #40]	; 0x28
   27818:	ldr	sl, [sp, #44]	; 0x2c
   2781c:	orrs	r0, r5, sl
   27820:	bne	27830 <main@@Base+0x1448c>
   27824:	ldrb	r0, [r9, #8]
   27828:	tst	r0, #2
   2782c:	beq	27c7c <main@@Base+0x148d8>
   27830:	ldr	r0, [r9]
   27834:	mov	r1, #7
   27838:	mov	r2, #8
   2783c:	mov	r3, #8
   27840:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   27844:	cmp	r0, #0
   27848:	beq	27ea8 <main@@Base+0x14b04>
   2784c:	stm	r0, {r5, sl}
   27850:	b	27c7c <main@@Base+0x148d8>
   27854:	bne	27864 <main@@Base+0x144c0>
   27858:	ldrb	r0, [r9, #2]!
   2785c:	cmp	r0, #32
   27860:	bhi	27874 <main@@Base+0x144d0>
   27864:	ldr	r0, [sp, #24]
   27868:	mov	r2, r8
   2786c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27870:	mov	r9, r0
   27874:	cmp	r7, r9
   27878:	beq	27c60 <main@@Base+0x148bc>
   2787c:	mov	r5, #0
   27880:	cmp	r9, r8
   27884:	str	r5, [fp, #-36]	; 0xffffffdc
   27888:	str	r5, [fp, #-40]	; 0xffffffd8
   2788c:	str	r5, [fp, #-44]	; 0xffffffd4
   27890:	str	r5, [sp, #40]	; 0x28
   27894:	beq	278e0 <main@@Base+0x1453c>
   27898:	sub	r0, fp, #40	; 0x28
   2789c:	mov	r1, r9
   278a0:	mov	r2, r8
   278a4:	add	r3, sp, #40	; 0x28
   278a8:	str	r0, [sp]
   278ac:	ldr	r0, [sp, #24]
   278b0:	bl	31418 <flatcc_json_parser_integer@@Base>
   278b4:	cmp	r0, r9
   278b8:	beq	278e8 <main@@Base+0x14544>
   278bc:	mov	r4, r0
   278c0:	ldr	r0, [sp, #40]	; 0x28
   278c4:	cmp	r0, #0
   278c8:	beq	278f0 <main@@Base+0x1454c>
   278cc:	ldr	r0, [sp, #24]
   278d0:	mov	r1, r4
   278d4:	mov	r2, r8
   278d8:	mov	r3, #8
   278dc:	b	2790c <main@@Base+0x14568>
   278e0:	mov	r4, r8
   278e4:	b	27914 <main@@Base+0x14570>
   278e8:	mov	r4, r9
   278ec:	b	27914 <main@@Base+0x14570>
   278f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   278f4:	cmp	r0, #0
   278f8:	beq	27994 <main@@Base+0x145f0>
   278fc:	ldr	r0, [sp, #24]
   27900:	mov	r1, r4
   27904:	mov	r2, r8
   27908:	mov	r3, #7
   2790c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27910:	mov	r4, r0
   27914:	ldr	r6, [sp, #32]
   27918:	cmp	r9, r4
   2791c:	bne	27958 <main@@Base+0x145b4>
   27920:	sub	r0, fp, #44	; 0x2c
   27924:	mov	r1, r9
   27928:	mov	r2, r8
   2792c:	str	r0, [sp]
   27930:	ldr	r0, [sp, #24]
   27934:	ldr	r3, [pc, #1420]	; 27ec8 <main@@Base+0x14b24>
   27938:	add	r3, pc, r3
   2793c:	bl	238e4 <main@@Base+0x10540>
   27940:	mov	r4, r0
   27944:	cmp	r0, r9
   27948:	cmpne	r4, r8
   2794c:	beq	27ea8 <main@@Base+0x14b04>
   27950:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27954:	ldr	r6, [sp, #32]
   27958:	ldr	r9, [sp, #24]
   2795c:	cmp	r5, #0
   27960:	bne	27970 <main@@Base+0x145cc>
   27964:	ldrb	r0, [r9, #8]
   27968:	tst	r0, #2
   2796c:	beq	27c7c <main@@Base+0x148d8>
   27970:	ldr	r0, [r9]
   27974:	mov	r1, #1
   27978:	mov	r2, #4
   2797c:	mov	r3, #4
   27980:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   27984:	cmp	r0, #0
   27988:	beq	27ea8 <main@@Base+0x14b04>
   2798c:	str	r5, [r0]
   27990:	b	27c7c <main@@Base+0x148d8>
   27994:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27998:	str	r5, [fp, #-44]	; 0xffffffd4
   2799c:	b	27914 <main@@Base+0x14570>
   279a0:	ldr	r9, [sp, #24]
   279a4:	bne	279b4 <main@@Base+0x14610>
   279a8:	ldrb	r0, [r1, #2]!
   279ac:	cmp	r0, #32
   279b0:	bhi	279c8 <main@@Base+0x14624>
   279b4:	mov	r1, r2
   279b8:	mov	r0, r9
   279bc:	mov	r2, r8
   279c0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   279c4:	mov	r1, r0
   279c8:	cmp	sl, r1
   279cc:	beq	26f50 <main@@Base+0x13bac>
   279d0:	mov	r0, r9
   279d4:	mov	r2, r8
   279d8:	add	r3, sp, #36	; 0x24
   279dc:	bl	319ac <flatcc_json_parser_build_string@@Base>
   279e0:	mov	r4, r0
   279e4:	ldr	r0, [sp, #36]	; 0x24
   279e8:	cmp	r0, #0
   279ec:	beq	27eac <main@@Base+0x14b08>
   279f0:	ldr	r0, [r9]
   279f4:	mov	r1, #2
   279f8:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   279fc:	ldr	r6, [sp, #32]
   27a00:	cmp	r0, #0
   27a04:	beq	27eac <main@@Base+0x14b08>
   27a08:	ldr	r1, [sp, #36]	; 0x24
   27a0c:	str	r1, [r0]
   27a10:	b	27c7c <main@@Base+0x148d8>
   27a14:	bne	27a28 <main@@Base+0x14684>
   27a18:	mov	r9, r1
   27a1c:	ldrb	r0, [r9, #1]!
   27a20:	cmp	r0, #32
   27a24:	bhi	27a38 <main@@Base+0x14694>
   27a28:	ldr	r0, [sp, #24]
   27a2c:	mov	r2, r8
   27a30:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27a34:	mov	r9, r0
   27a38:	cmp	r9, r8
   27a3c:	beq	27a78 <main@@Base+0x146d4>
   27a40:	ldrb	r0, [r9]
   27a44:	cmp	r0, #58	; 0x3a
   27a48:	bne	27a78 <main@@Base+0x146d4>
   27a4c:	add	r1, r9, #1
   27a50:	sub	r0, r8, r1
   27a54:	cmp	r0, #2
   27a58:	blt	27be4 <main@@Base+0x14840>
   27a5c:	ldrb	r0, [r1]
   27a60:	cmp	r0, #32
   27a64:	bls	27bd4 <main@@Base+0x14830>
   27a68:	mov	r9, r1
   27a6c:	cmp	r7, r9
   27a70:	bne	27bfc <main@@Base+0x14858>
   27a74:	b	27c60 <main@@Base+0x148bc>
   27a78:	ldr	r0, [sp, #24]
   27a7c:	mov	r1, r9
   27a80:	mov	r2, r8
   27a84:	mov	r3, #4
   27a88:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27a8c:	b	27bf0 <main@@Base+0x1484c>
   27a90:	bne	27aa0 <main@@Base+0x146fc>
   27a94:	ldrb	r0, [r9, #2]!
   27a98:	cmp	r0, #32
   27a9c:	bhi	27ab0 <main@@Base+0x1470c>
   27aa0:	ldr	r0, [sp, #24]
   27aa4:	mov	r2, r8
   27aa8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27aac:	mov	r9, r0
   27ab0:	cmp	r7, r9
   27ab4:	beq	27c60 <main@@Base+0x148bc>
   27ab8:	mov	r5, #0
   27abc:	cmp	r9, r8
   27ac0:	str	r5, [fp, #-36]	; 0xffffffdc
   27ac4:	str	r5, [fp, #-40]	; 0xffffffd8
   27ac8:	str	r5, [fp, #-44]	; 0xffffffd4
   27acc:	str	r5, [sp, #40]	; 0x28
   27ad0:	beq	27b1c <main@@Base+0x14778>
   27ad4:	sub	r0, fp, #40	; 0x28
   27ad8:	mov	r1, r9
   27adc:	mov	r2, r8
   27ae0:	add	r3, sp, #40	; 0x28
   27ae4:	str	r0, [sp]
   27ae8:	ldr	r0, [sp, #24]
   27aec:	bl	31418 <flatcc_json_parser_integer@@Base>
   27af0:	cmp	r0, r9
   27af4:	beq	27b2c <main@@Base+0x14788>
   27af8:	mov	r4, r0
   27afc:	ldr	r0, [sp, #40]	; 0x28
   27b00:	cmp	r0, #0
   27b04:	beq	27b3c <main@@Base+0x14798>
   27b08:	ldr	r0, [sp, #24]
   27b0c:	mov	r1, r4
   27b10:	mov	r2, r8
   27b14:	mov	r3, #8
   27b18:	b	27b58 <main@@Base+0x147b4>
   27b1c:	mov	r4, r8
   27b20:	cmp	r9, r4
   27b24:	bne	27b9c <main@@Base+0x147f8>
   27b28:	b	27b68 <main@@Base+0x147c4>
   27b2c:	mov	r4, r9
   27b30:	cmp	r9, r4
   27b34:	bne	27b9c <main@@Base+0x147f8>
   27b38:	b	27b68 <main@@Base+0x147c4>
   27b3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b40:	cmp	r0, #0
   27b44:	beq	27bc0 <main@@Base+0x1481c>
   27b48:	ldr	r0, [sp, #24]
   27b4c:	mov	r1, r4
   27b50:	mov	r2, r8
   27b54:	mov	r3, #7
   27b58:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27b5c:	mov	r4, r0
   27b60:	cmp	r9, r4
   27b64:	bne	27b9c <main@@Base+0x147f8>
   27b68:	sub	r0, fp, #44	; 0x2c
   27b6c:	mov	r1, r9
   27b70:	mov	r2, r8
   27b74:	str	r0, [sp]
   27b78:	ldr	r0, [sp, #24]
   27b7c:	ldr	r3, [pc, #848]	; 27ed4 <main@@Base+0x14b30>
   27b80:	add	r3, pc, r3
   27b84:	bl	238e4 <main@@Base+0x10540>
   27b88:	mov	r4, r0
   27b8c:	cmp	r0, r9
   27b90:	cmpne	r4, r8
   27b94:	beq	27ea8 <main@@Base+0x14b04>
   27b98:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27b9c:	cmp	r5, #0
   27ba0:	bne	27bb4 <main@@Base+0x14810>
   27ba4:	ldr	r0, [sp, #24]
   27ba8:	ldrb	r0, [r0, #8]
   27bac:	tst	r0, #2
   27bb0:	beq	26840 <main@@Base+0x1349c>
   27bb4:	ldr	r0, [sp, #24]
   27bb8:	mov	r1, #6
   27bbc:	b	26824 <main@@Base+0x13480>
   27bc0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27bc4:	str	r5, [fp, #-44]	; 0xffffffd4
   27bc8:	cmp	r9, r4
   27bcc:	bne	27b9c <main@@Base+0x147f8>
   27bd0:	b	27b68 <main@@Base+0x147c4>
   27bd4:	bne	27be4 <main@@Base+0x14840>
   27bd8:	ldrb	r0, [r9, #2]!
   27bdc:	cmp	r0, #32
   27be0:	bhi	27bf4 <main@@Base+0x14850>
   27be4:	ldr	r0, [sp, #24]
   27be8:	mov	r2, r8
   27bec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27bf0:	mov	r9, r0
   27bf4:	cmp	r7, r9
   27bf8:	beq	27c60 <main@@Base+0x148bc>
   27bfc:	mov	r5, #0
   27c00:	cmp	r9, r8
   27c04:	str	r5, [fp, #-36]	; 0xffffffdc
   27c08:	str	r5, [fp, #-40]	; 0xffffffd8
   27c0c:	str	r5, [fp, #-44]	; 0xffffffd4
   27c10:	str	r5, [sp, #40]	; 0x28
   27c14:	beq	26780 <main@@Base+0x133dc>
   27c18:	sub	r0, fp, #40	; 0x28
   27c1c:	mov	r1, r9
   27c20:	mov	r2, r8
   27c24:	add	r3, sp, #40	; 0x28
   27c28:	str	r0, [sp]
   27c2c:	ldr	r0, [sp, #24]
   27c30:	bl	31418 <flatcc_json_parser_integer@@Base>
   27c34:	cmp	r0, r9
   27c38:	beq	26790 <main@@Base+0x133ec>
   27c3c:	mov	r4, r0
   27c40:	ldr	r0, [sp, #40]	; 0x28
   27c44:	cmp	r0, #0
   27c48:	beq	267a4 <main@@Base+0x13400>
   27c4c:	ldr	r0, [sp, #24]
   27c50:	mov	r1, r4
   27c54:	mov	r2, r8
   27c58:	mov	r3, #8
   27c5c:	b	267c0 <main@@Base+0x1341c>
   27c60:	ldr	r9, [sp, #24]
   27c64:	mov	r0, r9
   27c68:	mov	r1, r7
   27c6c:	mov	r2, r8
   27c70:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   27c74:	mov	r4, r0
   27c78:	ldr	r6, [sp, #32]
   27c7c:	sub	r0, r8, r4
   27c80:	cmp	r0, #2
   27c84:	blt	27cb8 <main@@Base+0x14914>
   27c88:	ldrb	r0, [r4]
   27c8c:	cmp	r0, #32
   27c90:	bls	27ca4 <main@@Base+0x14900>
   27c94:	mov	r2, r4
   27c98:	cmp	r2, r8
   27c9c:	bne	27cd4 <main@@Base+0x14930>
   27ca0:	b	27d44 <main@@Base+0x149a0>
   27ca4:	bne	27cb8 <main@@Base+0x14914>
   27ca8:	mov	r2, r4
   27cac:	ldrb	r0, [r2, #1]!
   27cb0:	cmp	r0, #32
   27cb4:	bhi	27ccc <main@@Base+0x14928>
   27cb8:	mov	r0, r9
   27cbc:	mov	r1, r4
   27cc0:	mov	r2, r8
   27cc4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27cc8:	mov	r2, r0
   27ccc:	cmp	r2, r8
   27cd0:	beq	27d44 <main@@Base+0x149a0>
   27cd4:	ldrb	r0, [r2]
   27cd8:	cmp	r0, #44	; 0x2c
   27cdc:	bne	27d4c <main@@Base+0x149a8>
   27ce0:	add	r1, r2, #1
   27ce4:	sub	r0, r8, r1
   27ce8:	cmp	r0, #2
   27cec:	blt	27d1c <main@@Base+0x14978>
   27cf0:	ldrb	r0, [r1]
   27cf4:	cmp	r0, #32
   27cf8:	bls	27d0c <main@@Base+0x14968>
   27cfc:	mov	r2, r1
   27d00:	cmp	r2, r8
   27d04:	bne	27d34 <main@@Base+0x14990>
   27d08:	b	27d78 <main@@Base+0x149d4>
   27d0c:	bne	27d1c <main@@Base+0x14978>
   27d10:	ldrb	r0, [r2, #2]!
   27d14:	cmp	r0, #32
   27d18:	bhi	27d2c <main@@Base+0x14988>
   27d1c:	mov	r0, r9
   27d20:	mov	r2, r8
   27d24:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27d28:	mov	r2, r0
   27d2c:	cmp	r2, r8
   27d30:	beq	27d78 <main@@Base+0x149d4>
   27d34:	ldrb	r0, [r2]
   27d38:	cmp	r0, #125	; 0x7d
   27d3c:	bne	2685c <main@@Base+0x134b8>
   27d40:	b	27d54 <main@@Base+0x149b0>
   27d44:	mov	r4, r8
   27d48:	b	2525c <main@@Base+0x11eb8>
   27d4c:	cmp	r0, #125	; 0x7d
   27d50:	bne	27d84 <main@@Base+0x149e0>
   27d54:	add	r1, r2, #1
   27d58:	sub	r0, r8, r1
   27d5c:	cmp	r0, #2
   27d60:	blt	27db0 <main@@Base+0x14a0c>
   27d64:	ldrb	r0, [r1]
   27d68:	cmp	r0, #32
   27d6c:	bls	27d9c <main@@Base+0x149f8>
   27d70:	mov	r4, r1
   27d74:	b	2525c <main@@Base+0x11eb8>
   27d78:	mov	r0, r9
   27d7c:	mov	r1, r8
   27d80:	b	27d8c <main@@Base+0x149e8>
   27d84:	mov	r0, r9
   27d88:	mov	r1, r2
   27d8c:	mov	r2, r8
   27d90:	mov	r3, #10
   27d94:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27d98:	b	25258 <main@@Base+0x11eb4>
   27d9c:	bne	27db0 <main@@Base+0x14a0c>
   27da0:	ldrb	r0, [r2, #2]!
   27da4:	cmp	r0, #32
   27da8:	mov	r4, r2
   27dac:	bhi	2525c <main@@Base+0x11eb8>
   27db0:	mov	r0, r9
   27db4:	mov	r2, r8
   27db8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27dbc:	b	25258 <main@@Base+0x11eb4>
   27dc0:	mov	r4, r8
   27dc4:	b	27e3c <main@@Base+0x14a98>
   27dc8:	cmp	r0, #125	; 0x7d
   27dcc:	bne	27e24 <main@@Base+0x14a80>
   27dd0:	add	r4, r2, #1
   27dd4:	sub	r0, r8, r4
   27dd8:	cmp	r0, #2
   27ddc:	blt	27e04 <main@@Base+0x14a60>
   27de0:	ldrb	r0, [r4]
   27de4:	cmp	r0, #32
   27de8:	bhi	27e3c <main@@Base+0x14a98>
   27dec:	bne	27e04 <main@@Base+0x14a60>
   27df0:	ldrb	r0, [r2, #2]!
   27df4:	cmp	r0, #32
   27df8:	bls	27e04 <main@@Base+0x14a60>
   27dfc:	mov	r4, r2
   27e00:	b	27e3c <main@@Base+0x14a98>
   27e04:	mov	r0, r9
   27e08:	mov	r1, r4
   27e0c:	mov	r2, r8
   27e10:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27e14:	b	27e38 <main@@Base+0x14a94>
   27e18:	mov	r0, r9
   27e1c:	mov	r1, r8
   27e20:	b	27e2c <main@@Base+0x14a88>
   27e24:	mov	r0, r9
   27e28:	mov	r1, r2
   27e2c:	mov	r2, r8
   27e30:	mov	r3, #10
   27e34:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27e38:	mov	r4, r0
   27e3c:	ldr	r0, [sp, #20]
   27e40:	ldr	r0, [r0]
   27e44:	cmp	r0, #0
   27e48:	beq	27e70 <main@@Base+0x14acc>
   27e4c:	mov	r0, r9
   27e50:	mov	r1, r4
   27e54:	mov	r2, r8
   27e58:	mov	r3, #33	; 0x21
   27e5c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27e60:	mov	r4, r0
   27e64:	mov	r0, r4
   27e68:	sub	sp, fp, #28
   27e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e70:	ldr	r0, [r9]
   27e74:	bl	2c77c <flatcc_builder_end_table@@Base>
   27e78:	cmp	r0, #0
   27e7c:	str	r0, [r6]
   27e80:	bne	27e64 <main@@Base+0x14ac0>
   27e84:	b	27e4c <main@@Base+0x14aa8>
   27e88:	bne	27e98 <main@@Base+0x14af4>
   27e8c:	ldrb	r0, [r4, #2]!
   27e90:	cmp	r0, #32
   27e94:	bhi	24a20 <main@@Base+0x1167c>
   27e98:	mov	r0, r9
   27e9c:	mov	r2, r8
   27ea0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   27ea4:	b	24a1c <main@@Base+0x11678>
   27ea8:	ldr	r9, [sp, #24]
   27eac:	mov	r0, r9
   27eb0:	mov	r1, r4
   27eb4:	mov	r2, r8
   27eb8:	mov	r3, #33	; 0x21
   27ebc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   27ec0:	mov	r4, r0
   27ec4:	b	27e4c <main@@Base+0x14aa8>
   27ec8:	andeq	pc, r1, r4, lsr #18
   27ecc:	andeq	pc, r1, ip, ror #23
   27ed0:	strdeq	pc, [r1], -r0
   27ed4:	andeq	pc, r1, r0, lsl #14
   27ed8:	muleq	r1, r0, sl
   27edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ee0:	add	fp, sp, #28
   27ee4:	push	{r3}		; (str r3, [sp, #-4]!)
   27ee8:	sub	r7, r2, r1
   27eec:	cmp	r7, #8
   27ef0:	movcs	r7, #8
   27ef4:	and	r7, r7, #15
   27ef8:	sub	r7, r7, #1
   27efc:	cmp	r7, #7
   27f00:	bhi	27fe8 <main@@Base+0x14c44>
   27f04:	add	r6, pc, #36	; 0x24
   27f08:	mov	ip, #0
   27f0c:	mov	r3, #0
   27f10:	mov	r8, #0
   27f14:	mov	r9, #0
   27f18:	mov	sl, #0
   27f1c:	mov	r4, #0
   27f20:	mov	r5, #0
   27f24:	ldr	lr, [r6, r7, lsl #2]
   27f28:	mov	r7, #0
   27f2c:	add	pc, r6, lr
   27f30:	andeq	r0, r0, r4, rrx
   27f34:	andeq	r0, r0, ip, asr r0
   27f38:	andeq	r0, r0, r4, asr r0
   27f3c:	andeq	r0, r0, ip, asr #32
   27f40:	andeq	r0, r0, r0, asr #32
   27f44:	andeq	r0, r0, r4, lsr r0
   27f48:	andeq	r0, r0, r4, lsr #32
   27f4c:	andeq	r0, r0, r0, lsr #32
   27f50:	ldrb	r3, [r1, #7]
   27f54:	ldrb	r7, [r1, #6]
   27f58:	mov	r8, ip
   27f5c:	orr	r3, r3, r7, lsl #8
   27f60:	mov	ip, r3
   27f64:	ldrb	r3, [r1, #5]
   27f68:	mov	r9, r8
   27f6c:	orr	ip, ip, r3, lsl #16
   27f70:	ldrb	r3, [r1, #4]
   27f74:	mov	sl, r9
   27f78:	orr	ip, ip, r3, lsl #24
   27f7c:	ldrb	r3, [r1, #3]
   27f80:	orr	r7, r3, sl
   27f84:	ldrb	r3, [r1, #2]
   27f88:	orr	r4, r7, r3, lsl #8
   27f8c:	ldrb	r3, [r1, #1]
   27f90:	orr	r5, r4, r3, lsl #16
   27f94:	ldrb	r7, [r1]
   27f98:	movw	r3, #29797	; 0x7465
   27f9c:	movw	r6, #24946	; 0x6172
   27fa0:	movt	r3, #24931	; 0x6163
   27fa4:	movt	r6, #17256	; 0x4368
   27fa8:	eor	r3, ip, r3
   27fac:	orr	r7, r5, r7, lsl #24
   27fb0:	eor	r7, r7, r6
   27fb4:	orrs	r3, r3, r7
   27fb8:	bne	27fe8 <main@@Base+0x14c44>
   27fbc:	add	lr, r1, #8
   27fc0:	mov	r6, #-268435456	; 0xf0000000
   27fc4:	sub	r7, r2, lr
   27fc8:	cmp	r7, #8
   27fcc:	mov	r3, r7
   27fd0:	movcs	r3, #8
   27fd4:	add	r3, r6, r3, lsl #28
   27fd8:	asr	r3, r3, #28
   27fdc:	cmp	r3, #0
   27fe0:	cmpge	r7, #2
   27fe4:	bge	27ff4 <main@@Base+0x14c50>
   27fe8:	mov	r0, r1
   27fec:	sub	sp, fp, #28
   27ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ff4:	ldrb	r3, [lr]
   27ff8:	cmp	r3, #114	; 0x72
   27ffc:	bne	27fe8 <main@@Base+0x14c44>
   28000:	ldrb	r3, [r1, #9]
   28004:	mov	ip, lr
   28008:	cmp	r3, #46	; 0x2e
   2800c:	addeq	ip, r1, #10
   28010:	cmp	ip, lr
   28014:	beq	27fe8 <main@@Base+0x14c44>
   28018:	ldr	r3, [sp]
   2801c:	mov	r1, ip
   28020:	sub	sp, fp, #28
   28024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28028:	b	24698 <main@@Base+0x112f4>
   2802c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28030:	add	fp, sp, #28
   28034:	sub	sp, sp, #36	; 0x24
   28038:	ldr	r7, [fp, #8]
   2803c:	mov	r9, r0
   28040:	mov	r0, #0
   28044:	mov	r8, r2
   28048:	mov	r4, r1
   2804c:	cmp	r3, #11
   28050:	str	r0, [r7]
   28054:	bhi	280ac <main@@Base+0x14d08>
   28058:	add	r0, pc, #4
   2805c:	ldr	r1, [r0, r3, lsl #2]
   28060:	add	pc, r0, r1
   28064:	andeq	r0, r0, r8, lsl #1
   28068:	andeq	r0, r0, r8, rrx
   2806c:	andeq	r0, r0, r4, asr #1
   28070:	andeq	r0, r0, r8, rrx
   28074:	andeq	r0, r0, r8, rrx
   28078:	andeq	r0, r0, r8, rrx
   2807c:	andeq	r0, r0, r8, rrx
   28080:	andeq	r0, r0, r8, rrx
   28084:	andeq	r0, r0, r8, lsl r1
   28088:	andeq	r0, r0, r0, lsr r0
   2808c:	andeq	r0, r0, r0, lsr r0
   28090:	andeq	r0, r0, r0, asr r0
   28094:	mov	r0, r9
   28098:	mov	r1, r4
   2809c:	mov	r2, r8
   280a0:	mov	r3, r7
   280a4:	bl	28f60 <main@@Base+0x15bbc>
   280a8:	b	28274 <main@@Base+0x14ed0>
   280ac:	cmp	r3, #255	; 0xff
   280b0:	bne	280cc <main@@Base+0x14d28>
   280b4:	mov	r0, r9
   280b8:	mov	r1, r4
   280bc:	mov	r2, r8
   280c0:	mov	r3, r7
   280c4:	bl	319ac <flatcc_json_parser_build_string@@Base>
   280c8:	b	28274 <main@@Base+0x14ed0>
   280cc:	ldrb	r0, [r9, #8]
   280d0:	tst	r0, #1
   280d4:	bne	281d8 <main@@Base+0x14e34>
   280d8:	mov	r0, r9
   280dc:	mov	r1, r4
   280e0:	mov	r2, r8
   280e4:	mov	r3, #15
   280e8:	b	2811c <main@@Base+0x14d78>
   280ec:	sub	r0, r8, r4
   280f0:	cmp	r0, #4
   280f4:	blt	2810c <main@@Base+0x14d68>
   280f8:	ldr	r0, [r4]
   280fc:	movw	r1, #30062	; 0x756e
   28100:	movt	r1, #27756	; 0x6c6c
   28104:	cmp	r0, r1
   28108:	beq	282b4 <main@@Base+0x14f10>
   2810c:	mov	r0, r9
   28110:	mov	r1, r4
   28114:	mov	r2, r8
   28118:	mov	r3, #26
   2811c:	sub	sp, fp, #28
   28120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28124:	b	2f080 <flatcc_json_parser_set_error@@Base>
   28128:	mov	r0, #0
   2812c:	mov	r1, #1
   28130:	str	r0, [r7]
   28134:	ldr	r0, [r9]
   28138:	bl	2bd4c <flatcc_builder_start_table@@Base>
   2813c:	cmp	r0, #0
   28140:	bne	28260 <main@@Base+0x14ebc>
   28144:	cmp	r4, r8
   28148:	beq	2823c <main@@Base+0x14e98>
   2814c:	ldrb	r0, [r4]
   28150:	cmp	r0, #123	; 0x7b
   28154:	bne	2823c <main@@Base+0x14e98>
   28158:	add	r1, r4, #1
   2815c:	sub	r0, r8, r1
   28160:	cmp	r0, #2
   28164:	blt	28828 <main@@Base+0x15484>
   28168:	ldrb	r0, [r1]
   2816c:	cmp	r0, #32
   28170:	bls	28818 <main@@Base+0x15474>
   28174:	mov	r4, r1
   28178:	b	28838 <main@@Base+0x15494>
   2817c:	mov	r0, #0
   28180:	mov	r1, #2
   28184:	mov	r2, #2
   28188:	str	r0, [r7]
   2818c:	ldr	r0, [r9]
   28190:	bl	2aab0 <flatcc_builder_start_struct@@Base>
   28194:	cmp	r0, #0
   28198:	beq	28230 <main@@Base+0x14e8c>
   2819c:	cmp	r4, r8
   281a0:	beq	281f0 <main@@Base+0x14e4c>
   281a4:	ldrb	r1, [r4]
   281a8:	cmp	r1, #123	; 0x7b
   281ac:	bne	281f0 <main@@Base+0x14e4c>
   281b0:	add	r1, r4, #1
   281b4:	str	r0, [sp, #4]
   281b8:	sub	r0, r8, r1
   281bc:	cmp	r0, #2
   281c0:	blt	282e4 <main@@Base+0x14f40>
   281c4:	ldrb	r0, [r1]
   281c8:	cmp	r0, #32
   281cc:	bls	282d4 <main@@Base+0x14f30>
   281d0:	mov	r4, r1
   281d4:	b	282f4 <main@@Base+0x14f50>
   281d8:	mov	r0, r9
   281dc:	mov	r1, r4
   281e0:	mov	r2, r8
   281e4:	sub	sp, fp, #28
   281e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   281ec:	b	2fb98 <flatcc_json_parser_generic_json@@Base>
   281f0:	mov	r0, r9
   281f4:	mov	r1, r4
   281f8:	mov	r2, r8
   281fc:	mov	r3, #21
   28200:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28204:	mov	r4, r0
   28208:	cmp	r4, r8
   2820c:	mov	r1, r8
   28210:	beq	28234 <main@@Base+0x14e90>
   28214:	ldr	r0, [r9]
   28218:	bl	2ab98 <flatcc_builder_end_struct@@Base>
   2821c:	cmp	r0, #0
   28220:	mov	r1, r4
   28224:	str	r0, [r7]
   28228:	bne	28278 <main@@Base+0x14ed4>
   2822c:	b	28234 <main@@Base+0x14e90>
   28230:	mov	r1, r4
   28234:	mov	r0, r9
   28238:	b	28268 <main@@Base+0x14ec4>
   2823c:	mov	r0, r9
   28240:	mov	r1, r4
   28244:	mov	r2, r8
   28248:	mov	r3, #21
   2824c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28250:	mov	r4, r0
   28254:	ldr	r0, [r9, #24]
   28258:	cmp	r0, #0
   2825c:	beq	282bc <main@@Base+0x14f18>
   28260:	mov	r0, r9
   28264:	mov	r1, r4
   28268:	mov	r2, r8
   2826c:	mov	r3, #33	; 0x21
   28270:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28274:	mov	r4, r0
   28278:	ldr	r0, [r9, #24]
   2827c:	cmp	r0, #0
   28280:	bne	282a8 <main@@Base+0x14f04>
   28284:	ldr	r0, [r7]
   28288:	cmp	r0, #0
   2828c:	bne	282a8 <main@@Base+0x14f04>
   28290:	mov	r0, r9
   28294:	mov	r1, r4
   28298:	mov	r2, r8
   2829c:	mov	r3, #33	; 0x21
   282a0:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   282a4:	mov	r4, r0
   282a8:	mov	r0, r4
   282ac:	sub	sp, fp, #28
   282b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282b4:	add	r4, r4, #4
   282b8:	b	282a8 <main@@Base+0x14f04>
   282bc:	ldr	r0, [r9]
   282c0:	bl	2c77c <flatcc_builder_end_table@@Base>
   282c4:	cmp	r0, #0
   282c8:	str	r0, [r7]
   282cc:	bne	28278 <main@@Base+0x14ed4>
   282d0:	b	28260 <main@@Base+0x14ebc>
   282d4:	bne	282e4 <main@@Base+0x14f40>
   282d8:	ldrb	r0, [r4, #2]!
   282dc:	cmp	r0, #32
   282e0:	bhi	282f4 <main@@Base+0x14f50>
   282e4:	mov	r0, r9
   282e8:	mov	r2, r8
   282ec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   282f0:	mov	r4, r0
   282f4:	cmp	r4, r8
   282f8:	mov	r2, r8
   282fc:	beq	28340 <main@@Base+0x14f9c>
   28300:	ldrb	r0, [r4]
   28304:	cmp	r0, #125	; 0x7d
   28308:	bne	2833c <main@@Base+0x14f98>
   2830c:	add	r1, r4, #1
   28310:	sub	r0, r8, r1
   28314:	cmp	r0, #2
   28318:	blt	28ecc <main@@Base+0x15b28>
   2831c:	ldrb	r0, [r1]
   28320:	cmp	r0, #32
   28324:	bhi	28804 <main@@Base+0x15460>
   28328:	bne	28ecc <main@@Base+0x15b28>
   2832c:	ldrb	r0, [r4, #2]!
   28330:	cmp	r0, #32
   28334:	bhi	28208 <main@@Base+0x14e64>
   28338:	b	28ecc <main@@Base+0x15b28>
   2833c:	mov	r2, r4
   28340:	str	r9, [sp, #12]
   28344:	cmp	r2, r8
   28348:	mov	r1, r8
   2834c:	beq	28398 <main@@Base+0x14ff4>
   28350:	ldrb	r0, [r2]
   28354:	cmp	r0, #46	; 0x2e
   28358:	beq	28370 <main@@Base+0x14fcc>
   2835c:	cmp	r0, #34	; 0x22
   28360:	bne	2838c <main@@Base+0x14fe8>
   28364:	mov	r0, #0
   28368:	add	r1, r2, #1
   2836c:	b	28394 <main@@Base+0x14ff0>
   28370:	mov	r1, r2
   28374:	mov	r0, r9
   28378:	mov	r2, r8
   2837c:	mov	r3, #5
   28380:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28384:	mov	r1, r0
   28388:	b	28398 <main@@Base+0x14ff4>
   2838c:	mov	r0, #1
   28390:	mov	r1, r2
   28394:	str	r0, [r9, #12]
   28398:	sub	r0, r8, r1
   2839c:	mov	r2, #8
   283a0:	cmp	r0, #8
   283a4:	movcs	r0, r2
   283a8:	and	r0, r0, #15
   283ac:	sub	r2, r0, #1
   283b0:	cmp	r2, #7
   283b4:	bhi	28504 <main@@Base+0x15160>
   283b8:	add	r5, pc, #40	; 0x28
   283bc:	mov	r9, r7
   283c0:	mov	sl, #0
   283c4:	mov	ip, #0
   283c8:	mov	lr, #0
   283cc:	mov	r4, #0
   283d0:	mov	r3, #0
   283d4:	mov	r6, #0
   283d8:	mov	r7, #0
   283dc:	ldr	r0, [r5, r2, lsl #2]
   283e0:	mov	r2, #0
   283e4:	add	pc, r5, r0
   283e8:	andeq	r0, r0, r4, rrx
   283ec:	andeq	r0, r0, ip, asr r0
   283f0:	andeq	r0, r0, r4, asr r0
   283f4:	andeq	r0, r0, ip, asr #32
   283f8:	andeq	r0, r0, r0, asr #32
   283fc:	andeq	r0, r0, r4, lsr r0
   28400:	andeq	r0, r0, r4, lsr #32
   28404:	andeq	r0, r0, r0, lsr #32
   28408:	ldrb	ip, [r1, #7]
   2840c:	ldrb	r0, [r1, #6]
   28410:	mov	lr, sl
   28414:	orr	r0, ip, r0, lsl #8
   28418:	mov	sl, r0
   2841c:	ldrb	r0, [r1, #5]
   28420:	mov	r4, lr
   28424:	orr	sl, sl, r0, lsl #16
   28428:	ldrb	r0, [r1, #4]
   2842c:	mov	r3, r4
   28430:	orr	sl, sl, r0, lsl #24
   28434:	ldrb	r0, [r1, #3]
   28438:	orr	r6, r0, r3
   2843c:	ldrb	r0, [r1, #2]
   28440:	orr	r7, r6, r0, lsl #8
   28444:	ldrb	r0, [r1, #1]
   28448:	orr	r2, r7, r0, lsl #16
   2844c:	ldrb	r3, [r1]
   28450:	movw	r0, #25966	; 0x656e
   28454:	mov	r7, r9
   28458:	ldr	r9, [sp, #12]
   2845c:	movt	r0, #24428	; 0x5f6c
   28460:	eor	r0, sl, r0
   28464:	orr	r2, r2, r3, lsl #24
   28468:	movw	r3, #26994	; 0x6972
   2846c:	movt	r3, #26721	; 0x6861
   28470:	eor	r2, r2, r3
   28474:	orrs	r0, r0, r2
   28478:	bne	28504 <main@@Base+0x15160>
   2847c:	add	r4, r1, #8
   28480:	mov	r2, #8
   28484:	sub	r0, r8, r4
   28488:	cmp	r0, #8
   2848c:	movcc	r2, r0
   28490:	and	r3, r2, #15
   28494:	sub	r2, r3, #3
   28498:	cmp	r2, #6
   2849c:	bcs	2850c <main@@Base+0x15168>
   284a0:	ldrb	r2, [r1, #10]
   284a4:	lsl	r2, r2, #8
   284a8:	ldrb	r3, [r1, #9]
   284ac:	orr	r2, r2, r3, lsl #16
   284b0:	ldrb	r3, [r4]
   284b4:	bic	r2, r2, #255	; 0xff
   284b8:	orr	r2, r2, r3, lsl #24
   284bc:	movw	r3, #26624	; 0x6800
   284c0:	movt	r3, #26484	; 0x6774
   284c4:	teq	r2, r3
   284c8:	bne	285bc <main@@Base+0x15218>
   284cc:	cmp	r0, #4
   284d0:	blt	285bc <main@@Base+0x15218>
   284d4:	mov	r2, r1
   284d8:	ldr	r3, [r9, #12]
   284dc:	ldrb	r0, [r2, #11]!
   284e0:	cmp	r3, #0
   284e4:	beq	28524 <main@@Base+0x15180>
   284e8:	cmp	r0, #33	; 0x21
   284ec:	bcc	284f8 <main@@Base+0x15154>
   284f0:	cmp	r0, #58	; 0x3a
   284f4:	bne	285bc <main@@Base+0x15218>
   284f8:	mov	r0, #0
   284fc:	str	r0, [r9, #12]
   28500:	b	28530 <main@@Base+0x1518c>
   28504:	mov	r0, r9
   28508:	b	285c4 <main@@Base+0x15220>
   2850c:	mov	r2, #0
   28510:	cmp	r3, #1
   28514:	beq	284b0 <main@@Base+0x1510c>
   28518:	cmp	r3, #2
   2851c:	beq	284a8 <main@@Base+0x15104>
   28520:	b	285bc <main@@Base+0x15218>
   28524:	cmp	r0, #34	; 0x22
   28528:	bne	285bc <main@@Base+0x15218>
   2852c:	add	r2, r1, #12
   28530:	sub	r0, r8, r2
   28534:	cmp	r0, #2
   28538:	blt	2856c <main@@Base+0x151c8>
   2853c:	ldrb	r0, [r2]
   28540:	cmp	r0, #32
   28544:	bls	28558 <main@@Base+0x151b4>
   28548:	mov	r5, r2
   2854c:	cmp	r5, r8
   28550:	bne	28588 <main@@Base+0x151e4>
   28554:	b	28694 <main@@Base+0x152f0>
   28558:	bne	2856c <main@@Base+0x151c8>
   2855c:	mov	r5, r2
   28560:	ldrb	r0, [r5, #1]!
   28564:	cmp	r0, #32
   28568:	bhi	28580 <main@@Base+0x151dc>
   2856c:	mov	r1, r2
   28570:	mov	r0, r9
   28574:	mov	r2, r8
   28578:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2857c:	mov	r5, r0
   28580:	cmp	r5, r8
   28584:	beq	28694 <main@@Base+0x152f0>
   28588:	ldrb	r0, [r5]
   2858c:	cmp	r0, #58	; 0x3a
   28590:	bne	28694 <main@@Base+0x152f0>
   28594:	add	r1, r5, #1
   28598:	sub	r0, r8, r1
   2859c:	cmp	r0, #2
   285a0:	blt	286bc <main@@Base+0x15318>
   285a4:	ldrb	r0, [r1]
   285a8:	cmp	r0, #32
   285ac:	bls	286ac <main@@Base+0x15308>
   285b0:	mov	r5, r1
   285b4:	cmp	r4, r5
   285b8:	bne	286d4 <main@@Base+0x15330>
   285bc:	mov	r0, r9
   285c0:	mov	r1, r4
   285c4:	mov	r2, r8
   285c8:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   285cc:	mov	r1, r0
   285d0:	sub	r0, r8, r1
   285d4:	cmp	r0, #2
   285d8:	blt	2860c <main@@Base+0x15268>
   285dc:	ldrb	r0, [r1]
   285e0:	cmp	r0, #32
   285e4:	bls	285f8 <main@@Base+0x15254>
   285e8:	mov	r2, r1
   285ec:	cmp	r2, r8
   285f0:	bne	28624 <main@@Base+0x15280>
   285f4:	b	287d8 <main@@Base+0x15434>
   285f8:	bne	2860c <main@@Base+0x15268>
   285fc:	mov	r2, r1
   28600:	ldrb	r0, [r2, #1]!
   28604:	cmp	r0, #32
   28608:	bhi	2861c <main@@Base+0x15278>
   2860c:	mov	r0, r9
   28610:	mov	r2, r8
   28614:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28618:	mov	r2, r0
   2861c:	cmp	r2, r8
   28620:	beq	287d8 <main@@Base+0x15434>
   28624:	ldrb	r0, [r2]
   28628:	cmp	r0, #44	; 0x2c
   2862c:	bne	287e0 <main@@Base+0x1543c>
   28630:	add	r1, r2, #1
   28634:	sub	r0, r8, r1
   28638:	cmp	r0, #2
   2863c:	blt	2866c <main@@Base+0x152c8>
   28640:	ldrb	r0, [r1]
   28644:	cmp	r0, #32
   28648:	bls	2865c <main@@Base+0x152b8>
   2864c:	mov	r2, r1
   28650:	cmp	r2, r8
   28654:	bne	28684 <main@@Base+0x152e0>
   28658:	b	2880c <main@@Base+0x15468>
   2865c:	bne	2866c <main@@Base+0x152c8>
   28660:	ldrb	r0, [r2, #2]!
   28664:	cmp	r0, #32
   28668:	bhi	2867c <main@@Base+0x152d8>
   2866c:	mov	r0, r9
   28670:	mov	r2, r8
   28674:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28678:	mov	r2, r0
   2867c:	cmp	r2, r8
   28680:	beq	2880c <main@@Base+0x15468>
   28684:	ldrb	r0, [r2]
   28688:	cmp	r0, #125	; 0x7d
   2868c:	bne	28344 <main@@Base+0x14fa0>
   28690:	b	287e8 <main@@Base+0x15444>
   28694:	mov	r0, r9
   28698:	mov	r1, r5
   2869c:	mov	r2, r8
   286a0:	mov	r3, #4
   286a4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   286a8:	b	286c8 <main@@Base+0x15324>
   286ac:	bne	286bc <main@@Base+0x15318>
   286b0:	ldrb	r0, [r5, #2]!
   286b4:	cmp	r0, #32
   286b8:	bhi	286cc <main@@Base+0x15328>
   286bc:	mov	r0, r9
   286c0:	mov	r2, r8
   286c4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   286c8:	mov	r5, r0
   286cc:	cmp	r4, r5
   286d0:	beq	285bc <main@@Base+0x15218>
   286d4:	mov	r4, #0
   286d8:	cmp	r5, r8
   286dc:	str	r4, [sp, #28]
   286e0:	str	r4, [sp, #24]
   286e4:	strh	r4, [sp, #16]
   286e8:	str	r4, [sp, #20]
   286ec:	beq	28734 <main@@Base+0x15390>
   286f0:	add	r0, sp, #24
   286f4:	mov	r1, r5
   286f8:	mov	r2, r8
   286fc:	add	r3, sp, #20
   28700:	str	r0, [sp]
   28704:	mov	r0, r9
   28708:	bl	31418 <flatcc_json_parser_integer@@Base>
   2870c:	cmp	r0, r5
   28710:	beq	28744 <main@@Base+0x153a0>
   28714:	mov	r1, r0
   28718:	ldr	r0, [sp, #20]
   2871c:	cmp	r0, #0
   28720:	beq	28754 <main@@Base+0x153b0>
   28724:	mov	r0, r9
   28728:	mov	r2, r8
   2872c:	mov	r3, #8
   28730:	b	28774 <main@@Base+0x153d0>
   28734:	mov	r1, r8
   28738:	cmp	r5, r1
   2873c:	bne	287b8 <main@@Base+0x15414>
   28740:	b	28784 <main@@Base+0x153e0>
   28744:	mov	r1, r5
   28748:	cmp	r5, r1
   2874c:	bne	287b8 <main@@Base+0x15414>
   28750:	b	28784 <main@@Base+0x153e0>
   28754:	ldr	r0, [sp, #24]
   28758:	ldr	r2, [sp, #28]
   2875c:	subs	r3, r0, #65536	; 0x10000
   28760:	sbcs	r2, r2, #0
   28764:	bcc	287c4 <main@@Base+0x15420>
   28768:	mov	r0, r9
   2876c:	mov	r2, r8
   28770:	mov	r3, #7
   28774:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28778:	mov	r1, r0
   2877c:	cmp	r5, r1
   28780:	bne	287b8 <main@@Base+0x15414>
   28784:	add	r0, sp, #16
   28788:	mov	r1, r5
   2878c:	mov	r2, r8
   28790:	str	r0, [sp]
   28794:	mov	r0, r9
   28798:	ldr	r3, [pc, #1936]	; 28f30 <main@@Base+0x15b8c>
   2879c:	add	r3, pc, r3
   287a0:	bl	295cc <main@@Base+0x16228>
   287a4:	mov	r1, r0
   287a8:	cmp	r0, r5
   287ac:	cmpne	r1, r8
   287b0:	beq	28f14 <main@@Base+0x15b70>
   287b4:	ldrh	r4, [sp, #16]
   287b8:	ldr	r0, [sp, #4]
   287bc:	strh	r4, [r0]
   287c0:	b	285d0 <main@@Base+0x1522c>
   287c4:	mov	r4, r0
   287c8:	strh	r0, [sp, #16]
   287cc:	cmp	r5, r1
   287d0:	bne	287b8 <main@@Base+0x15414>
   287d4:	b	28784 <main@@Base+0x153e0>
   287d8:	mov	r1, r8
   287dc:	b	28234 <main@@Base+0x14e90>
   287e0:	cmp	r0, #125	; 0x7d
   287e4:	bne	28ea4 <main@@Base+0x15b00>
   287e8:	add	r1, r2, #1
   287ec:	sub	r0, r8, r1
   287f0:	cmp	r0, #2
   287f4:	blt	28ecc <main@@Base+0x15b28>
   287f8:	ldrb	r0, [r1]
   287fc:	cmp	r0, #32
   28800:	bls	28eb8 <main@@Base+0x15b14>
   28804:	mov	r4, r1
   28808:	b	28208 <main@@Base+0x14e64>
   2880c:	mov	r0, r9
   28810:	mov	r1, r8
   28814:	b	28eac <main@@Base+0x15b08>
   28818:	bne	28828 <main@@Base+0x15484>
   2881c:	ldrb	r0, [r4, #2]!
   28820:	cmp	r0, #32
   28824:	bhi	28838 <main@@Base+0x15494>
   28828:	mov	r0, r9
   2882c:	mov	r2, r8
   28830:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28834:	mov	r4, r0
   28838:	cmp	r4, r8
   2883c:	mov	r2, r8
   28840:	beq	28884 <main@@Base+0x154e0>
   28844:	ldrb	r0, [r4]
   28848:	cmp	r0, #125	; 0x7d
   2884c:	bne	28880 <main@@Base+0x154dc>
   28850:	add	r1, r4, #1
   28854:	sub	r0, r8, r1
   28858:	cmp	r0, #2
   2885c:	blt	28f04 <main@@Base+0x15b60>
   28860:	ldrb	r0, [r1]
   28864:	cmp	r0, #32
   28868:	bhi	28e90 <main@@Base+0x15aec>
   2886c:	bne	28f04 <main@@Base+0x15b60>
   28870:	ldrb	r0, [r4, #2]!
   28874:	cmp	r0, #32
   28878:	bhi	28254 <main@@Base+0x14eb0>
   2887c:	b	28f04 <main@@Base+0x15b60>
   28880:	mov	r2, r4
   28884:	str	r7, [sp, #8]
   28888:	cmp	r2, r8
   2888c:	mov	r1, r8
   28890:	beq	288dc <main@@Base+0x15538>
   28894:	ldrb	r0, [r2]
   28898:	cmp	r0, #46	; 0x2e
   2889c:	beq	288b4 <main@@Base+0x15510>
   288a0:	cmp	r0, #34	; 0x22
   288a4:	bne	288d0 <main@@Base+0x1552c>
   288a8:	mov	r0, #0
   288ac:	add	r1, r2, #1
   288b0:	b	288d8 <main@@Base+0x15534>
   288b4:	mov	r1, r2
   288b8:	mov	r0, r9
   288bc:	mov	r2, r8
   288c0:	mov	r3, #5
   288c4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   288c8:	mov	r1, r0
   288cc:	b	288dc <main@@Base+0x15538>
   288d0:	mov	r0, #1
   288d4:	mov	r1, r2
   288d8:	str	r0, [r9, #12]
   288dc:	sub	r0, r8, r1
   288e0:	mov	r2, #8
   288e4:	cmp	r0, #8
   288e8:	movcs	r0, r2
   288ec:	and	r0, r0, #15
   288f0:	sub	r2, r0, #1
   288f4:	cmp	r2, #7
   288f8:	bhi	28b28 <main@@Base+0x15784>
   288fc:	add	r0, pc, #36	; 0x24
   28900:	mov	lr, #0
   28904:	mov	ip, #0
   28908:	mov	r4, #0
   2890c:	mov	r3, #0
   28910:	mov	r6, #0
   28914:	mov	r5, #0
   28918:	mov	r7, #0
   2891c:	ldr	sl, [r0, r2, lsl #2]
   28920:	mov	r2, #0
   28924:	add	pc, r0, sl
   28928:	andeq	r0, r0, r4, rrx
   2892c:	andeq	r0, r0, ip, asr r0
   28930:	andeq	r0, r0, r4, asr r0
   28934:	andeq	r0, r0, ip, asr #32
   28938:	andeq	r0, r0, r0, asr #32
   2893c:	andeq	r0, r0, r4, lsr r0
   28940:	andeq	r0, r0, r4, lsr #32
   28944:	andeq	r0, r0, r0, lsr #32
   28948:	ldrb	ip, [r1, #7]
   2894c:	ldrb	r0, [r1, #6]
   28950:	mov	r2, lr
   28954:	orr	r0, ip, r0, lsl #8
   28958:	mov	lr, r0
   2895c:	ldrb	r0, [r1, #5]
   28960:	mov	r4, r2
   28964:	orr	lr, lr, r0, lsl #16
   28968:	ldrb	r0, [r1, #4]
   2896c:	mov	r3, r4
   28970:	orr	lr, lr, r0, lsl #24
   28974:	ldrb	r0, [r1, #3]
   28978:	orr	r6, r0, r3
   2897c:	ldrb	r0, [r1, #2]
   28980:	orr	r5, r6, r0, lsl #8
   28984:	ldrb	r0, [r1, #1]
   28988:	orr	r7, r5, r0, lsl #16
   2898c:	ldrb	r2, [r1]
   28990:	movw	r0, #24948	; 0x6174
   28994:	movw	r3, #28530	; 0x6f72
   28998:	movt	r0, #25695	; 0x645f
   2899c:	movt	r3, #29559	; 0x7377
   289a0:	eor	r0, lr, r0
   289a4:	orr	r2, r7, r2, lsl #24
   289a8:	eor	r2, r2, r3
   289ac:	orrs	r0, r0, r2
   289b0:	bne	28b28 <main@@Base+0x15784>
   289b4:	add	lr, r1, #8
   289b8:	mov	r2, #8
   289bc:	sub	r0, r8, lr
   289c0:	cmp	r0, #8
   289c4:	movcs	r0, r2
   289c8:	and	r0, r0, #15
   289cc:	sub	r2, r0, #1
   289d0:	cmp	r2, #7
   289d4:	bhi	28b30 <main@@Base+0x1578c>
   289d8:	add	r0, pc, #40	; 0x28
   289dc:	mov	sl, #0
   289e0:	mov	r3, #0
   289e4:	mov	r4, #0
   289e8:	mov	r6, #0
   289ec:	mov	r5, #0
   289f0:	mov	r7, #0
   289f4:	ldr	ip, [r0, r2, lsl #2]
   289f8:	mov	r2, #0
   289fc:	str	r2, [sp, #4]
   28a00:	mov	r2, #0
   28a04:	add	pc, r0, ip
   28a08:	andeq	r0, r0, ip, rrx
   28a0c:	andeq	r0, r0, r4, rrx
   28a10:	andeq	r0, r0, ip, asr r0
   28a14:	andeq	r0, r0, r4, asr r0
   28a18:	andeq	r0, r0, r8, asr #32
   28a1c:	andeq	r0, r0, ip, lsr r0
   28a20:	andeq	r0, r0, r8, lsr #32
   28a24:	andeq	r0, r0, r0, lsr #32
   28a28:	ldrb	r0, [r1, #15]
   28a2c:	str	r0, [sp, #4]
   28a30:	ldrb	r0, [r1, #14]
   28a34:	ldr	r2, [sp, #4]
   28a38:	orr	r0, r2, r0, lsl #8
   28a3c:	mov	r2, sl
   28a40:	mov	sl, r0
   28a44:	ldrb	r0, [r1, #13]
   28a48:	mov	r3, r2
   28a4c:	orr	sl, sl, r0, lsl #16
   28a50:	ldrb	r0, [r1, #12]
   28a54:	mov	r4, r3
   28a58:	orr	sl, sl, r0, lsl #24
   28a5c:	ldrb	r0, [r1, #11]
   28a60:	orr	r6, r0, r4
   28a64:	ldrb	r0, [r1, #10]
   28a68:	orr	r5, r6, r0, lsl #8
   28a6c:	ldrb	r0, [r1, #9]
   28a70:	orr	r7, r5, r0, lsl #16
   28a74:	ldrb	r2, [lr]
   28a78:	movw	r0, #24941	; 0x616d
   28a7c:	movw	r3, #25451	; 0x636b
   28a80:	movt	r0, #24420	; 0x5f64
   28a84:	movt	r3, #29793	; 0x7461
   28a88:	eor	r0, sl, r0
   28a8c:	orr	r2, r7, r2, lsl #24
   28a90:	eor	r2, r2, r3
   28a94:	orrs	r0, r0, r2
   28a98:	bne	28b30 <main@@Base+0x1578c>
   28a9c:	add	r4, r1, #16
   28aa0:	mov	r2, #8
   28aa4:	sub	r0, r8, r4
   28aa8:	cmp	r0, #8
   28aac:	movcc	r2, r0
   28ab0:	and	r3, r2, #15
   28ab4:	sub	r2, r3, #3
   28ab8:	cmp	r2, #6
   28abc:	bcs	28c10 <main@@Base+0x1586c>
   28ac0:	ldrb	r2, [r1, #18]
   28ac4:	ldr	r7, [sp, #8]
   28ac8:	lsl	r2, r2, #8
   28acc:	ldrb	r3, [r1, #17]
   28ad0:	orr	r2, r2, r3, lsl #16
   28ad4:	ldrb	r3, [r4]
   28ad8:	bic	r2, r2, #255	; 0xff
   28adc:	orr	r2, r2, r3, lsl #24
   28ae0:	movw	r3, #25856	; 0x6500
   28ae4:	movt	r3, #24935	; 0x6167
   28ae8:	teq	r2, r3
   28aec:	bne	28cc4 <main@@Base+0x15920>
   28af0:	cmp	r0, #4
   28af4:	blt	28cc4 <main@@Base+0x15920>
   28af8:	mov	r2, r1
   28afc:	ldr	r3, [r9, #12]
   28b00:	ldrb	r0, [r2, #19]!
   28b04:	cmp	r3, #0
   28b08:	beq	28c2c <main@@Base+0x15888>
   28b0c:	cmp	r0, #33	; 0x21
   28b10:	bcc	28b1c <main@@Base+0x15778>
   28b14:	cmp	r0, #58	; 0x3a
   28b18:	bne	28cc4 <main@@Base+0x15920>
   28b1c:	mov	r0, #0
   28b20:	str	r0, [r9, #12]
   28b24:	b	28c38 <main@@Base+0x15894>
   28b28:	mov	r0, r9
   28b2c:	b	28b38 <main@@Base+0x15794>
   28b30:	mov	r0, r9
   28b34:	mov	r1, lr
   28b38:	mov	r2, r8
   28b3c:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   28b40:	ldr	r7, [sp, #8]
   28b44:	mov	r4, r0
   28b48:	sub	r0, r8, r4
   28b4c:	cmp	r0, #2
   28b50:	blt	28b84 <main@@Base+0x157e0>
   28b54:	ldrb	r0, [r4]
   28b58:	cmp	r0, #32
   28b5c:	bls	28b70 <main@@Base+0x157cc>
   28b60:	mov	r2, r4
   28b64:	cmp	r2, r8
   28b68:	bne	28ba0 <main@@Base+0x157fc>
   28b6c:	b	28e64 <main@@Base+0x15ac0>
   28b70:	bne	28b84 <main@@Base+0x157e0>
   28b74:	mov	r2, r4
   28b78:	ldrb	r0, [r2, #1]!
   28b7c:	cmp	r0, #32
   28b80:	bhi	28b98 <main@@Base+0x157f4>
   28b84:	mov	r0, r9
   28b88:	mov	r1, r4
   28b8c:	mov	r2, r8
   28b90:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28b94:	mov	r2, r0
   28b98:	cmp	r2, r8
   28b9c:	beq	28e64 <main@@Base+0x15ac0>
   28ba0:	ldrb	r0, [r2]
   28ba4:	cmp	r0, #44	; 0x2c
   28ba8:	bne	28e6c <main@@Base+0x15ac8>
   28bac:	add	r1, r2, #1
   28bb0:	sub	r0, r8, r1
   28bb4:	cmp	r0, #2
   28bb8:	blt	28be8 <main@@Base+0x15844>
   28bbc:	ldrb	r0, [r1]
   28bc0:	cmp	r0, #32
   28bc4:	bls	28bd8 <main@@Base+0x15834>
   28bc8:	mov	r2, r1
   28bcc:	cmp	r2, r8
   28bd0:	bne	28c00 <main@@Base+0x1585c>
   28bd4:	b	28e98 <main@@Base+0x15af4>
   28bd8:	bne	28be8 <main@@Base+0x15844>
   28bdc:	ldrb	r0, [r2, #2]!
   28be0:	cmp	r0, #32
   28be4:	bhi	28bf8 <main@@Base+0x15854>
   28be8:	mov	r0, r9
   28bec:	mov	r2, r8
   28bf0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28bf4:	mov	r2, r0
   28bf8:	cmp	r2, r8
   28bfc:	beq	28e98 <main@@Base+0x15af4>
   28c00:	ldrb	r0, [r2]
   28c04:	cmp	r0, #125	; 0x7d
   28c08:	bne	28888 <main@@Base+0x154e4>
   28c0c:	b	28e74 <main@@Base+0x15ad0>
   28c10:	ldr	r7, [sp, #8]
   28c14:	mov	r2, #0
   28c18:	cmp	r3, #1
   28c1c:	beq	28ad4 <main@@Base+0x15730>
   28c20:	cmp	r3, #2
   28c24:	beq	28acc <main@@Base+0x15728>
   28c28:	b	28cc4 <main@@Base+0x15920>
   28c2c:	cmp	r0, #34	; 0x22
   28c30:	bne	28cc4 <main@@Base+0x15920>
   28c34:	add	r2, r1, #20
   28c38:	sub	r0, r8, r2
   28c3c:	cmp	r0, #2
   28c40:	blt	28c74 <main@@Base+0x158d0>
   28c44:	ldrb	r0, [r2]
   28c48:	cmp	r0, #32
   28c4c:	bls	28c60 <main@@Base+0x158bc>
   28c50:	mov	r6, r2
   28c54:	cmp	r6, r8
   28c58:	bne	28c90 <main@@Base+0x158ec>
   28c5c:	b	28cd8 <main@@Base+0x15934>
   28c60:	bne	28c74 <main@@Base+0x158d0>
   28c64:	mov	r6, r2
   28c68:	ldrb	r0, [r6, #1]!
   28c6c:	cmp	r0, #32
   28c70:	bhi	28c88 <main@@Base+0x158e4>
   28c74:	mov	r1, r2
   28c78:	mov	r0, r9
   28c7c:	mov	r2, r8
   28c80:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28c84:	mov	r6, r0
   28c88:	cmp	r6, r8
   28c8c:	beq	28cd8 <main@@Base+0x15934>
   28c90:	ldrb	r0, [r6]
   28c94:	cmp	r0, #58	; 0x3a
   28c98:	bne	28cd8 <main@@Base+0x15934>
   28c9c:	add	r1, r6, #1
   28ca0:	sub	r0, r8, r1
   28ca4:	cmp	r0, #2
   28ca8:	blt	28d00 <main@@Base+0x1595c>
   28cac:	ldrb	r0, [r1]
   28cb0:	cmp	r0, #32
   28cb4:	bls	28cf0 <main@@Base+0x1594c>
   28cb8:	mov	r6, r1
   28cbc:	cmp	r4, r6
   28cc0:	bne	28d18 <main@@Base+0x15974>
   28cc4:	mov	r0, r9
   28cc8:	mov	r1, r4
   28ccc:	mov	r2, r8
   28cd0:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   28cd4:	b	28b44 <main@@Base+0x157a0>
   28cd8:	mov	r0, r9
   28cdc:	mov	r1, r6
   28ce0:	mov	r2, r8
   28ce4:	mov	r3, #4
   28ce8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28cec:	b	28d0c <main@@Base+0x15968>
   28cf0:	bne	28d00 <main@@Base+0x1595c>
   28cf4:	ldrb	r0, [r6, #2]!
   28cf8:	cmp	r0, #32
   28cfc:	bhi	28d10 <main@@Base+0x1596c>
   28d00:	mov	r0, r9
   28d04:	mov	r2, r8
   28d08:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28d0c:	mov	r6, r0
   28d10:	cmp	r4, r6
   28d14:	beq	28cc4 <main@@Base+0x15920>
   28d18:	mov	r5, #0
   28d1c:	cmp	r6, r8
   28d20:	str	r5, [sp, #28]
   28d24:	str	r5, [sp, #24]
   28d28:	str	r5, [sp, #16]
   28d2c:	str	r5, [sp, #20]
   28d30:	beq	28d90 <main@@Base+0x159ec>
   28d34:	add	r0, sp, #24
   28d38:	mov	r1, r6
   28d3c:	mov	r2, r8
   28d40:	add	r3, sp, #20
   28d44:	str	r0, [sp]
   28d48:	mov	r0, r9
   28d4c:	bl	31418 <flatcc_json_parser_integer@@Base>
   28d50:	cmp	r0, r6
   28d54:	beq	28da0 <main@@Base+0x159fc>
   28d58:	ldr	r2, [sp, #20]
   28d5c:	mov	r4, r0
   28d60:	ldr	r0, [sp, #24]
   28d64:	ldr	r1, [sp, #28]
   28d68:	cmp	r2, #0
   28d6c:	beq	28db0 <main@@Base+0x15a0c>
   28d70:	subs	r2, r0, #-2147483647	; 0x80000001
   28d74:	sbcs	r1, r1, #0
   28d78:	bcc	28de0 <main@@Base+0x15a3c>
   28d7c:	mov	r0, r9
   28d80:	mov	r1, r4
   28d84:	mov	r2, r8
   28d88:	mov	r3, #8
   28d8c:	b	28dcc <main@@Base+0x15a28>
   28d90:	mov	r4, r8
   28d94:	cmp	r6, r4
   28d98:	bne	28e2c <main@@Base+0x15a88>
   28d9c:	b	28df8 <main@@Base+0x15a54>
   28da0:	mov	r4, r6
   28da4:	cmp	r6, r4
   28da8:	bne	28e2c <main@@Base+0x15a88>
   28dac:	b	28df8 <main@@Base+0x15a54>
   28db0:	subs	r2, r0, #-2147483648	; 0x80000000
   28db4:	sbcs	r1, r1, #0
   28db8:	bcc	28de8 <main@@Base+0x15a44>
   28dbc:	mov	r0, r9
   28dc0:	mov	r1, r4
   28dc4:	mov	r2, r8
   28dc8:	mov	r3, #7
   28dcc:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28dd0:	mov	r4, r0
   28dd4:	cmp	r6, r4
   28dd8:	bne	28e2c <main@@Base+0x15a88>
   28ddc:	b	28df8 <main@@Base+0x15a54>
   28de0:	rsb	r5, r0, #0
   28de4:	b	28dec <main@@Base+0x15a48>
   28de8:	mov	r5, r0
   28dec:	str	r5, [sp, #16]
   28df0:	cmp	r6, r4
   28df4:	bne	28e2c <main@@Base+0x15a88>
   28df8:	add	r0, sp, #16
   28dfc:	mov	r1, r6
   28e00:	mov	r2, r8
   28e04:	str	r0, [sp]
   28e08:	mov	r0, r9
   28e0c:	ldr	r3, [pc, #280]	; 28f2c <main@@Base+0x15b88>
   28e10:	add	r3, pc, r3
   28e14:	bl	23444 <main@@Base+0x100a0>
   28e18:	mov	r4, r0
   28e1c:	cmp	r0, r6
   28e20:	cmpne	r4, r8
   28e24:	beq	28f24 <main@@Base+0x15b80>
   28e28:	ldr	r5, [sp, #16]
   28e2c:	cmp	r5, #0
   28e30:	bne	28e40 <main@@Base+0x15a9c>
   28e34:	ldrb	r0, [r9, #8]
   28e38:	tst	r0, #2
   28e3c:	beq	28b48 <main@@Base+0x157a4>
   28e40:	ldr	r0, [r9]
   28e44:	mov	r1, #0
   28e48:	mov	r2, #4
   28e4c:	mov	r3, #4
   28e50:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   28e54:	cmp	r0, #0
   28e58:	beq	28f24 <main@@Base+0x15b80>
   28e5c:	str	r5, [r0]
   28e60:	b	28b48 <main@@Base+0x157a4>
   28e64:	mov	r4, r8
   28e68:	b	28254 <main@@Base+0x14eb0>
   28e6c:	cmp	r0, #125	; 0x7d
   28e70:	bne	28edc <main@@Base+0x15b38>
   28e74:	add	r1, r2, #1
   28e78:	sub	r0, r8, r1
   28e7c:	cmp	r0, #2
   28e80:	blt	28f04 <main@@Base+0x15b60>
   28e84:	ldrb	r0, [r1]
   28e88:	cmp	r0, #32
   28e8c:	bls	28ef0 <main@@Base+0x15b4c>
   28e90:	mov	r4, r1
   28e94:	b	28254 <main@@Base+0x14eb0>
   28e98:	mov	r0, r9
   28e9c:	mov	r1, r8
   28ea0:	b	28ee4 <main@@Base+0x15b40>
   28ea4:	mov	r0, r9
   28ea8:	mov	r1, r2
   28eac:	mov	r2, r8
   28eb0:	mov	r3, #10
   28eb4:	b	28200 <main@@Base+0x14e5c>
   28eb8:	bne	28ecc <main@@Base+0x15b28>
   28ebc:	ldrb	r0, [r2, #2]!
   28ec0:	cmp	r0, #32
   28ec4:	mov	r4, r2
   28ec8:	bhi	28208 <main@@Base+0x14e64>
   28ecc:	mov	r0, r9
   28ed0:	mov	r2, r8
   28ed4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28ed8:	b	28204 <main@@Base+0x14e60>
   28edc:	mov	r0, r9
   28ee0:	mov	r1, r2
   28ee4:	mov	r2, r8
   28ee8:	mov	r3, #10
   28eec:	b	2824c <main@@Base+0x14ea8>
   28ef0:	bne	28f04 <main@@Base+0x15b60>
   28ef4:	ldrb	r0, [r2, #2]!
   28ef8:	cmp	r0, #32
   28efc:	mov	r4, r2
   28f00:	bhi	28254 <main@@Base+0x14eb0>
   28f04:	mov	r0, r9
   28f08:	mov	r2, r8
   28f0c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   28f10:	b	28250 <main@@Base+0x14eac>
   28f14:	mov	r0, r9
   28f18:	mov	r2, r8
   28f1c:	mov	r3, #33	; 0x21
   28f20:	b	28200 <main@@Base+0x14e5c>
   28f24:	ldr	r7, [sp, #8]
   28f28:	b	28260 <main@@Base+0x14ebc>
   28f2c:	strdeq	lr, [r1], -ip
   28f30:	andeq	lr, r1, ip, ror fp
   28f34:	add	r0, r0, #1
   28f38:	uxtb	r1, r0
   28f3c:	cmp	r1, #12
   28f40:	movhi	r0, #0
   28f44:	bxhi	lr
   28f48:	ldr	r1, [pc, #12]	; 28f5c <main@@Base+0x15bb8>
   28f4c:	sxtb	r0, r0
   28f50:	add	r1, pc, r1
   28f54:	ldr	r0, [r1, r0, lsl #2]
   28f58:	bx	lr
   28f5c:	andeq	sl, r0, r8, lsr #24
   28f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28f64:	add	fp, sp, #28
   28f68:	sub	sp, sp, #36	; 0x24
   28f6c:	mov	r9, r0
   28f70:	mov	r0, #0
   28f74:	mov	sl, r2
   28f78:	mov	r6, r1
   28f7c:	mov	r1, #4
   28f80:	mov	r2, #4
   28f84:	str	r3, [sp, #12]
   28f88:	str	r0, [r3]
   28f8c:	ldr	r0, [r9]
   28f90:	bl	2aab0 <flatcc_builder_start_struct@@Base>
   28f94:	cmp	r0, #0
   28f98:	beq	2901c <main@@Base+0x15c78>
   28f9c:	cmp	r6, sl
   28fa0:	beq	28fd8 <main@@Base+0x15c34>
   28fa4:	ldrb	r1, [r6]
   28fa8:	cmp	r1, #123	; 0x7b
   28fac:	bne	28fd8 <main@@Base+0x15c34>
   28fb0:	add	r1, r6, #1
   28fb4:	str	r0, [sp, #8]
   28fb8:	sub	r0, sl, r1
   28fbc:	cmp	r0, #2
   28fc0:	blt	29050 <main@@Base+0x15cac>
   28fc4:	ldrb	r0, [r1]
   28fc8:	cmp	r0, #32
   28fcc:	bls	29040 <main@@Base+0x15c9c>
   28fd0:	mov	r6, r1
   28fd4:	b	29060 <main@@Base+0x15cbc>
   28fd8:	mov	r0, r9
   28fdc:	mov	r1, r6
   28fe0:	mov	r2, sl
   28fe4:	mov	r3, #21
   28fe8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   28fec:	mov	r6, r0
   28ff0:	cmp	r6, sl
   28ff4:	mov	r1, sl
   28ff8:	beq	29020 <main@@Base+0x15c7c>
   28ffc:	ldr	r0, [r9]
   29000:	bl	2ab98 <flatcc_builder_end_struct@@Base>
   29004:	ldr	r1, [sp, #12]
   29008:	cmp	r0, #0
   2900c:	str	r0, [r1]
   29010:	mov	r1, r6
   29014:	bne	29034 <main@@Base+0x15c90>
   29018:	b	29020 <main@@Base+0x15c7c>
   2901c:	mov	r1, r6
   29020:	mov	r0, r9
   29024:	mov	r2, sl
   29028:	mov	r3, #33	; 0x21
   2902c:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   29030:	mov	r6, r0
   29034:	mov	r0, r6
   29038:	sub	sp, fp, #28
   2903c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29040:	bne	29050 <main@@Base+0x15cac>
   29044:	ldrb	r0, [r6, #2]!
   29048:	cmp	r0, #32
   2904c:	bhi	29060 <main@@Base+0x15cbc>
   29050:	mov	r0, r9
   29054:	mov	r2, sl
   29058:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2905c:	mov	r6, r0
   29060:	cmp	r6, sl
   29064:	mov	r2, sl
   29068:	beq	290ac <main@@Base+0x15d08>
   2906c:	ldrb	r0, [r6]
   29070:	cmp	r0, #125	; 0x7d
   29074:	bne	290a8 <main@@Base+0x15d04>
   29078:	add	r1, r6, #1
   2907c:	sub	r0, sl, r1
   29080:	cmp	r0, #2
   29084:	blt	295a8 <main@@Base+0x16204>
   29088:	ldrb	r0, [r1]
   2908c:	cmp	r0, #32
   29090:	bhi	2956c <main@@Base+0x161c8>
   29094:	bne	295a8 <main@@Base+0x16204>
   29098:	ldrb	r0, [r6, #2]!
   2909c:	cmp	r0, #32
   290a0:	bhi	28ff0 <main@@Base+0x15c4c>
   290a4:	b	295a8 <main@@Base+0x16204>
   290a8:	mov	r2, r6
   290ac:	cmp	r2, sl
   290b0:	mov	r1, sl
   290b4:	beq	29100 <main@@Base+0x15d5c>
   290b8:	ldrb	r0, [r2]
   290bc:	cmp	r0, #46	; 0x2e
   290c0:	beq	290d8 <main@@Base+0x15d34>
   290c4:	cmp	r0, #34	; 0x22
   290c8:	bne	290f4 <main@@Base+0x15d50>
   290cc:	mov	r0, #0
   290d0:	add	r1, r2, #1
   290d4:	b	290fc <main@@Base+0x15d58>
   290d8:	mov	r1, r2
   290dc:	mov	r0, r9
   290e0:	mov	r2, sl
   290e4:	mov	r3, #5
   290e8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   290ec:	mov	r1, r0
   290f0:	b	29100 <main@@Base+0x15d5c>
   290f4:	mov	r0, #1
   290f8:	mov	r1, r2
   290fc:	str	r0, [r9, #12]
   29100:	sub	r0, sl, r1
   29104:	mov	r2, #8
   29108:	cmp	r0, #8
   2910c:	movcs	r0, r2
   29110:	and	r0, r0, #15
   29114:	sub	r2, r0, #1
   29118:	cmp	r2, #7
   2911c:	bhi	2925c <main@@Base+0x15eb8>
   29120:	add	r5, pc, #36	; 0x24
   29124:	mov	r8, #0
   29128:	mov	ip, #0
   2912c:	mov	lr, #0
   29130:	mov	r6, #0
   29134:	mov	r3, #0
   29138:	mov	r7, #0
   2913c:	mov	r4, #0
   29140:	ldr	r0, [r5, r2, lsl #2]
   29144:	mov	r2, #0
   29148:	add	pc, r5, r0
   2914c:	andeq	r0, r0, r4, rrx
   29150:	andeq	r0, r0, ip, asr r0
   29154:	andeq	r0, r0, r4, asr r0
   29158:	andeq	r0, r0, ip, asr #32
   2915c:	andeq	r0, r0, r0, asr #32
   29160:	andeq	r0, r0, r4, lsr r0
   29164:	andeq	r0, r0, r4, lsr #32
   29168:	andeq	r0, r0, r0, lsr #32
   2916c:	ldrb	ip, [r1, #7]
   29170:	ldrb	r0, [r1, #6]
   29174:	mov	lr, r8
   29178:	orr	r0, ip, r0, lsl #8
   2917c:	mov	r8, r0
   29180:	ldrb	r0, [r1, #5]
   29184:	mov	r6, lr
   29188:	orr	r8, r8, r0, lsl #16
   2918c:	ldrb	r0, [r1, #4]
   29190:	mov	r3, r6
   29194:	orr	r8, r8, r0, lsl #24
   29198:	ldrb	r0, [r1, #3]
   2919c:	orr	r7, r0, r3
   291a0:	ldrb	r0, [r1, #2]
   291a4:	orr	r4, r7, r0, lsl #8
   291a8:	ldrb	r0, [r1, #1]
   291ac:	orr	r2, r4, r0, lsl #16
   291b0:	ldrb	r3, [r1]
   291b4:	movw	r0, #29285	; 0x7265
   291b8:	movt	r0, #29535	; 0x735f
   291bc:	eor	r0, r8, r0
   291c0:	orr	r2, r2, r3, lsl #24
   291c4:	movw	r3, #28523	; 0x6f6b
   291c8:	movt	r3, #25199	; 0x626f
   291cc:	eor	r2, r2, r3
   291d0:	orrs	r0, r0, r2
   291d4:	bne	2925c <main@@Base+0x15eb8>
   291d8:	add	r8, r1, #8
   291dc:	mov	r2, #8
   291e0:	sub	r0, sl, r8
   291e4:	cmp	r0, #8
   291e8:	movcc	r2, r0
   291ec:	and	r3, r2, #15
   291f0:	sub	r2, r3, #2
   291f4:	cmp	r2, #7
   291f8:	bcs	29264 <main@@Base+0x15ec0>
   291fc:	ldrb	r2, [r1, #9]
   29200:	lsl	r3, r2, #16
   29204:	mov	r2, #0
   29208:	ldrb	r7, [r8]
   2920c:	orr	r3, r3, r7, lsl #24
   29210:	movw	r7, #0
   29214:	movt	r7, #24932	; 0x6164
   29218:	eor	r3, r3, r7
   2921c:	orrs	r2, r2, r3
   29220:	bne	29310 <main@@Base+0x15f6c>
   29224:	cmp	r0, #3
   29228:	blt	29310 <main@@Base+0x15f6c>
   2922c:	mov	r2, r1
   29230:	ldr	r3, [r9, #12]
   29234:	ldrb	r0, [r2, #10]!
   29238:	cmp	r3, #0
   2923c:	beq	29278 <main@@Base+0x15ed4>
   29240:	cmp	r0, #33	; 0x21
   29244:	bcc	29250 <main@@Base+0x15eac>
   29248:	cmp	r0, #58	; 0x3a
   2924c:	bne	29310 <main@@Base+0x15f6c>
   29250:	mov	r0, #0
   29254:	str	r0, [r9, #12]
   29258:	b	29284 <main@@Base+0x15ee0>
   2925c:	mov	r0, r9
   29260:	b	29318 <main@@Base+0x15f74>
   29264:	cmp	r3, #1
   29268:	mov	r2, #0
   2926c:	mov	r3, #0
   29270:	beq	29208 <main@@Base+0x15e64>
   29274:	b	29310 <main@@Base+0x15f6c>
   29278:	cmp	r0, #34	; 0x22
   2927c:	bne	29310 <main@@Base+0x15f6c>
   29280:	add	r2, r1, #11
   29284:	sub	r0, sl, r2
   29288:	cmp	r0, #2
   2928c:	blt	292c0 <main@@Base+0x15f1c>
   29290:	ldrb	r0, [r2]
   29294:	cmp	r0, #32
   29298:	bls	292ac <main@@Base+0x15f08>
   2929c:	mov	r7, r2
   292a0:	cmp	r7, sl
   292a4:	bne	292dc <main@@Base+0x15f38>
   292a8:	b	293e8 <main@@Base+0x16044>
   292ac:	bne	292c0 <main@@Base+0x15f1c>
   292b0:	mov	r7, r2
   292b4:	ldrb	r0, [r7, #1]!
   292b8:	cmp	r0, #32
   292bc:	bhi	292d4 <main@@Base+0x15f30>
   292c0:	mov	r1, r2
   292c4:	mov	r0, r9
   292c8:	mov	r2, sl
   292cc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   292d0:	mov	r7, r0
   292d4:	cmp	r7, sl
   292d8:	beq	293e8 <main@@Base+0x16044>
   292dc:	ldrb	r0, [r7]
   292e0:	cmp	r0, #58	; 0x3a
   292e4:	bne	293e8 <main@@Base+0x16044>
   292e8:	add	r1, r7, #1
   292ec:	sub	r0, sl, r1
   292f0:	cmp	r0, #2
   292f4:	blt	29410 <main@@Base+0x1606c>
   292f8:	ldrb	r0, [r1]
   292fc:	cmp	r0, #32
   29300:	bls	29400 <main@@Base+0x1605c>
   29304:	mov	r7, r1
   29308:	cmp	r8, r7
   2930c:	bne	29428 <main@@Base+0x16084>
   29310:	mov	r0, r9
   29314:	mov	r1, r8
   29318:	mov	r2, sl
   2931c:	bl	2f934 <flatcc_json_parser_unmatched_symbol@@Base>
   29320:	mov	r1, r0
   29324:	sub	r0, sl, r1
   29328:	cmp	r0, #2
   2932c:	blt	29360 <main@@Base+0x15fbc>
   29330:	ldrb	r0, [r1]
   29334:	cmp	r0, #32
   29338:	bls	2934c <main@@Base+0x15fa8>
   2933c:	mov	r2, r1
   29340:	cmp	r2, sl
   29344:	bne	29378 <main@@Base+0x15fd4>
   29348:	b	29540 <main@@Base+0x1619c>
   2934c:	bne	29360 <main@@Base+0x15fbc>
   29350:	mov	r2, r1
   29354:	ldrb	r0, [r2, #1]!
   29358:	cmp	r0, #32
   2935c:	bhi	29370 <main@@Base+0x15fcc>
   29360:	mov	r0, r9
   29364:	mov	r2, sl
   29368:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2936c:	mov	r2, r0
   29370:	cmp	r2, sl
   29374:	beq	29540 <main@@Base+0x1619c>
   29378:	ldrb	r0, [r2]
   2937c:	cmp	r0, #44	; 0x2c
   29380:	bne	29548 <main@@Base+0x161a4>
   29384:	add	r1, r2, #1
   29388:	sub	r0, sl, r1
   2938c:	cmp	r0, #2
   29390:	blt	293c0 <main@@Base+0x1601c>
   29394:	ldrb	r0, [r1]
   29398:	cmp	r0, #32
   2939c:	bls	293b0 <main@@Base+0x1600c>
   293a0:	mov	r2, r1
   293a4:	cmp	r2, sl
   293a8:	bne	293d8 <main@@Base+0x16034>
   293ac:	b	29574 <main@@Base+0x161d0>
   293b0:	bne	293c0 <main@@Base+0x1601c>
   293b4:	ldrb	r0, [r2, #2]!
   293b8:	cmp	r0, #32
   293bc:	bhi	293d0 <main@@Base+0x1602c>
   293c0:	mov	r0, r9
   293c4:	mov	r2, sl
   293c8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   293cc:	mov	r2, r0
   293d0:	cmp	r2, sl
   293d4:	beq	29574 <main@@Base+0x161d0>
   293d8:	ldrb	r0, [r2]
   293dc:	cmp	r0, #125	; 0x7d
   293e0:	bne	290ac <main@@Base+0x15d08>
   293e4:	b	29550 <main@@Base+0x161ac>
   293e8:	mov	r0, r9
   293ec:	mov	r1, r7
   293f0:	mov	r2, sl
   293f4:	mov	r3, #4
   293f8:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   293fc:	b	2941c <main@@Base+0x16078>
   29400:	bne	29410 <main@@Base+0x1606c>
   29404:	ldrb	r0, [r7, #2]!
   29408:	cmp	r0, #32
   2940c:	bhi	29420 <main@@Base+0x1607c>
   29410:	mov	r0, r9
   29414:	mov	r2, sl
   29418:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2941c:	mov	r7, r0
   29420:	cmp	r8, r7
   29424:	beq	29310 <main@@Base+0x15f6c>
   29428:	mov	r6, #0
   2942c:	cmp	r7, sl
   29430:	str	r6, [sp, #28]
   29434:	str	r6, [sp, #24]
   29438:	str	r6, [sp, #16]
   2943c:	str	r6, [sp, #20]
   29440:	beq	2949c <main@@Base+0x160f8>
   29444:	add	r0, sp, #24
   29448:	mov	r1, r7
   2944c:	mov	r2, sl
   29450:	add	r3, sp, #20
   29454:	str	r0, [sp]
   29458:	mov	r0, r9
   2945c:	bl	31418 <flatcc_json_parser_integer@@Base>
   29460:	cmp	r0, r7
   29464:	beq	294ac <main@@Base+0x16108>
   29468:	ldr	r3, [sp, #20]
   2946c:	mov	r1, r0
   29470:	ldr	r0, [sp, #24]
   29474:	ldr	r2, [sp, #28]
   29478:	cmp	r3, #0
   2947c:	beq	294bc <main@@Base+0x16118>
   29480:	subs	r3, r0, #-2147483647	; 0x80000001
   29484:	sbcs	r2, r2, #0
   29488:	bcc	294e8 <main@@Base+0x16144>
   2948c:	mov	r0, r9
   29490:	mov	r2, sl
   29494:	mov	r3, #8
   29498:	b	294d4 <main@@Base+0x16130>
   2949c:	mov	r1, sl
   294a0:	cmp	r7, r1
   294a4:	bne	29534 <main@@Base+0x16190>
   294a8:	b	29500 <main@@Base+0x1615c>
   294ac:	mov	r1, r7
   294b0:	cmp	r7, r1
   294b4:	bne	29534 <main@@Base+0x16190>
   294b8:	b	29500 <main@@Base+0x1615c>
   294bc:	subs	r3, r0, #-2147483648	; 0x80000000
   294c0:	sbcs	r2, r2, #0
   294c4:	bcc	294f0 <main@@Base+0x1614c>
   294c8:	mov	r0, r9
   294cc:	mov	r2, sl
   294d0:	mov	r3, #7
   294d4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   294d8:	mov	r1, r0
   294dc:	cmp	r7, r1
   294e0:	bne	29534 <main@@Base+0x16190>
   294e4:	b	29500 <main@@Base+0x1615c>
   294e8:	rsb	r6, r0, #0
   294ec:	b	294f4 <main@@Base+0x16150>
   294f0:	mov	r6, r0
   294f4:	str	r6, [sp, #16]
   294f8:	cmp	r7, r1
   294fc:	bne	29534 <main@@Base+0x16190>
   29500:	add	r0, sp, #16
   29504:	mov	r1, r7
   29508:	mov	r2, sl
   2950c:	str	r0, [sp]
   29510:	mov	r0, r9
   29514:	ldr	r3, [pc, #172]	; 295c8 <main@@Base+0x16224>
   29518:	add	r3, pc, r3
   2951c:	bl	23444 <main@@Base+0x100a0>
   29520:	mov	r1, r0
   29524:	cmp	r0, r7
   29528:	cmpne	r1, sl
   2952c:	beq	295b8 <main@@Base+0x16214>
   29530:	ldr	r6, [sp, #16]
   29534:	ldr	r0, [sp, #8]
   29538:	str	r6, [r0]
   2953c:	b	29324 <main@@Base+0x15f80>
   29540:	mov	r1, sl
   29544:	b	29020 <main@@Base+0x15c7c>
   29548:	cmp	r0, #125	; 0x7d
   2954c:	bne	29580 <main@@Base+0x161dc>
   29550:	add	r1, r2, #1
   29554:	sub	r0, sl, r1
   29558:	cmp	r0, #2
   2955c:	blt	295a8 <main@@Base+0x16204>
   29560:	ldrb	r0, [r1]
   29564:	cmp	r0, #32
   29568:	bls	29594 <main@@Base+0x161f0>
   2956c:	mov	r6, r1
   29570:	b	28ff0 <main@@Base+0x15c4c>
   29574:	mov	r0, r9
   29578:	mov	r1, sl
   2957c:	b	29588 <main@@Base+0x161e4>
   29580:	mov	r0, r9
   29584:	mov	r1, r2
   29588:	mov	r2, sl
   2958c:	mov	r3, #10
   29590:	b	28fe8 <main@@Base+0x15c44>
   29594:	bne	295a8 <main@@Base+0x16204>
   29598:	ldrb	r0, [r2, #2]!
   2959c:	cmp	r0, #32
   295a0:	mov	r6, r2
   295a4:	bhi	28ff0 <main@@Base+0x15c4c>
   295a8:	mov	r0, r9
   295ac:	mov	r2, sl
   295b0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   295b4:	b	28fec <main@@Base+0x15c48>
   295b8:	mov	r0, r9
   295bc:	mov	r2, sl
   295c0:	mov	r3, #33	; 0x21
   295c4:	b	28fe8 <main@@Base+0x15c44>
   295c8:	andeq	sp, r1, ip, lsl #28
   295cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   295d0:	add	fp, sp, #28
   295d4:	sub	sp, sp, #44	; 0x2c
   295d8:	mov	r6, r2
   295dc:	ldr	r2, [fp, #8]
   295e0:	mov	r5, r0
   295e4:	mov	r0, #0
   295e8:	mov	sl, r3
   295ec:	cmp	r1, r6
   295f0:	strh	r0, [r2]
   295f4:	beq	29638 <main@@Base+0x16294>
   295f8:	ldrb	r0, [r1]
   295fc:	cmp	r0, #46	; 0x2e
   29600:	beq	29618 <main@@Base+0x16274>
   29604:	cmp	r0, #34	; 0x22
   29608:	bne	29630 <main@@Base+0x1628c>
   2960c:	mov	r0, #0
   29610:	add	r1, r1, #1
   29614:	b	29634 <main@@Base+0x16290>
   29618:	mov	r0, r5
   2961c:	mov	r2, r6
   29620:	mov	r3, #5
   29624:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   29628:	mov	r1, r0
   2962c:	b	29638 <main@@Base+0x16294>
   29630:	mov	r0, #1
   29634:	str	r0, [r5, #12]
   29638:	ldr	r0, [r5, #12]
   2963c:	cmp	r0, #0
   29640:	beq	29654 <main@@Base+0x162b0>
   29644:	mov	r7, r1
   29648:	cmp	r7, r6
   2964c:	bne	29698 <main@@Base+0x162f4>
   29650:	b	297cc <main@@Base+0x16428>
   29654:	sub	r0, r6, r1
   29658:	cmp	r0, #2
   2965c:	blt	29680 <main@@Base+0x162dc>
   29660:	ldrb	r0, [r1]
   29664:	cmp	r0, #32
   29668:	bhi	29644 <main@@Base+0x162a0>
   2966c:	bne	29680 <main@@Base+0x162dc>
   29670:	mov	r7, r1
   29674:	ldrb	r0, [r7, #1]!
   29678:	cmp	r0, #32
   2967c:	bhi	29690 <main@@Base+0x162ec>
   29680:	mov	r0, r5
   29684:	mov	r2, r6
   29688:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2968c:	mov	r7, r0
   29690:	cmp	r7, r6
   29694:	beq	297cc <main@@Base+0x16428>
   29698:	mov	r1, #0
   2969c:	add	r0, sl, #4
   296a0:	add	r8, sp, #32
   296a4:	add	r9, sp, #28
   296a8:	str	sl, [sp, #12]
   296ac:	str	r1, [sp, #16]
   296b0:	mov	r1, #0
   296b4:	str	r0, [sp, #8]
   296b8:	str	r1, [sp, #20]
   296bc:	ldr	r4, [sl]
   296c0:	mov	sl, r0
   296c4:	add	r0, sp, #24
   296c8:	mov	r1, r7
   296cc:	mov	r2, r6
   296d0:	mov	r3, r9
   296d4:	str	r8, [sp]
   296d8:	str	r0, [sp, #4]
   296dc:	mov	r0, r5
   296e0:	blx	r4
   296e4:	cmp	r0, r6
   296e8:	beq	297cc <main@@Base+0x16428>
   296ec:	mov	r4, r0
   296f0:	cmp	r0, r7
   296f4:	bne	29708 <main@@Base+0x16364>
   296f8:	ldr	r4, [sl], #4
   296fc:	cmp	r4, #0
   29700:	bne	296c4 <main@@Base+0x16320>
   29704:	b	297d4 <main@@Base+0x16430>
   29708:	ldr	r7, [sp, #20]
   2970c:	cmp	r7, #0
   29710:	ldrne	r0, [r5, #12]
   29714:	cmpne	r0, #0
   29718:	bne	297f8 <main@@Base+0x16454>
   2971c:	ldr	r0, [sp, #28]
   29720:	cmp	r0, #0
   29724:	beq	2974c <main@@Base+0x163a8>
   29728:	mov	r0, r5
   2972c:	mov	r1, r4
   29730:	mov	r2, r6
   29734:	mov	r3, #8
   29738:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   2973c:	ldr	sl, [sp, #12]
   29740:	cmp	r0, r6
   29744:	bne	29794 <main@@Base+0x163f0>
   29748:	b	297cc <main@@Base+0x16428>
   2974c:	ldr	r0, [sp, #32]
   29750:	ldr	r1, [sp, #36]	; 0x24
   29754:	ldr	sl, [sp, #12]
   29758:	subs	r2, r0, #65536	; 0x10000
   2975c:	sbcs	r1, r1, #0
   29760:	bcc	29784 <main@@Base+0x163e0>
   29764:	mov	r0, r5
   29768:	mov	r1, r4
   2976c:	mov	r2, r6
   29770:	mov	r3, #7
   29774:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   29778:	cmp	r0, r6
   2977c:	bne	29794 <main@@Base+0x163f0>
   29780:	b	297cc <main@@Base+0x16428>
   29784:	str	r0, [sp, #16]
   29788:	mov	r0, r4
   2978c:	cmp	r0, r6
   29790:	beq	297cc <main@@Base+0x16428>
   29794:	ldr	r0, [fp, #8]
   29798:	ldr	r2, [sp, #16]
   2979c:	add	r7, r7, #1
   297a0:	str	r7, [sp, #20]
   297a4:	mov	r7, r4
   297a8:	mov	r1, r0
   297ac:	ldrh	r0, [r0]
   297b0:	add	r0, r0, r2
   297b4:	strh	r0, [r1]
   297b8:	ldr	r0, [sp, #24]
   297bc:	cmp	r0, #0
   297c0:	ldr	r0, [sp, #8]
   297c4:	bne	296bc <main@@Base+0x16318>
   297c8:	b	297ec <main@@Base+0x16448>
   297cc:	mov	r4, r6
   297d0:	b	297ec <main@@Base+0x16448>
   297d4:	mov	r0, r5
   297d8:	mov	r1, r7
   297dc:	mov	r2, r6
   297e0:	mov	r3, #23
   297e4:	bl	2f080 <flatcc_json_parser_set_error@@Base>
   297e8:	mov	r4, r0
   297ec:	mov	r0, r4
   297f0:	sub	sp, fp, #28
   297f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   297f8:	mov	r0, r5
   297fc:	mov	r1, r4
   29800:	mov	r2, r6
   29804:	mov	r3, #14
   29808:	b	297e4 <main@@Base+0x16440>

0002980c <flatcc_builder_default_alloc@@Base>:
   2980c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29810:	add	fp, sp, #24
   29814:	mov	r4, r1
   29818:	cmp	r2, #0
   2981c:	beq	29868 <flatcc_builder_default_alloc@@Base+0x5c>
   29820:	ldr	r0, [fp, #8]
   29824:	mov	r8, r3
   29828:	sub	r1, r0, #1
   2982c:	cmp	r1, #6
   29830:	bhi	29894 <flatcc_builder_default_alloc@@Base+0x88>
   29834:	add	r3, pc, #8
   29838:	mov	r0, #256	; 0x100
   2983c:	ldr	r1, [r3, r1, lsl #2]
   29840:	add	pc, r3, r1
   29844:	andeq	r0, r0, r4, rrx
   29848:	andeq	r0, r0, r0, asr r0
   2984c:	andeq	r0, r0, r0, asr r0
   29850:	andeq	r0, r0, ip, lsl r0
   29854:	andeq	r0, r0, r8, asr r0
   29858:	andeq	r0, r0, r0, asr r0
   2985c:	andeq	r0, r0, r0, rrx
   29860:	mov	r0, #288	; 0x120
   29864:	b	298a8 <flatcc_builder_default_alloc@@Base+0x9c>
   29868:	ldr	r0, [r4]
   2986c:	cmp	r0, #0
   29870:	moveq	r6, #0
   29874:	moveq	r0, r6
   29878:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2987c:	bl	12a9c <free@plt>
   29880:	mov	r6, #0
   29884:	mov	r0, r6
   29888:	str	r6, [r4]
   2988c:	str	r6, [r4, #4]
   29890:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29894:	mov	r0, #32
   29898:	b	298a8 <flatcc_builder_default_alloc@@Base+0x9c>
   2989c:	mov	r0, r2
   298a0:	b	298a8 <flatcc_builder_default_alloc@@Base+0x9c>
   298a4:	mov	r0, #64	; 0x40
   298a8:	mov	r7, r0
   298ac:	lsl	r0, r0, #1
   298b0:	cmp	r7, r2
   298b4:	bcc	298a8 <flatcc_builder_default_alloc@@Base+0x9c>
   298b8:	ldr	r0, [r4, #4]
   298bc:	mov	r6, #0
   298c0:	cmp	r0, r2
   298c4:	lsrcs	r0, r0, #1
   298c8:	cmpcs	r0, r7
   298cc:	bcs	29904 <flatcc_builder_default_alloc@@Base+0xf8>
   298d0:	ldr	r0, [r4]
   298d4:	mov	r1, r7
   298d8:	bl	12af0 <realloc@plt>
   298dc:	cmp	r0, #0
   298e0:	mvneq	r6, #0
   298e4:	moveq	r0, r6
   298e8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   298ec:	cmp	r8, #0
   298f0:	mov	r5, r0
   298f4:	ldrne	r1, [r4, #4]
   298f8:	cmpne	r7, r1
   298fc:	bhi	2990c <flatcc_builder_default_alloc@@Base+0x100>
   29900:	stm	r4, {r5, r7}
   29904:	mov	r0, r6
   29908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2990c:	add	r0, r5, r1
   29910:	sub	r2, r7, r1
   29914:	mov	r1, #0
   29918:	bl	12b5c <memset@plt>
   2991c:	b	29900 <flatcc_builder_default_alloc@@Base+0xf4>

00029920 <flatcc_builder_flush_vtable_cache@@Base>:
   29920:	push	{r4, r5, fp, lr}
   29924:	add	fp, sp, #8
   29928:	mov	r4, r0
   2992c:	ldr	r0, [r0, #116]	; 0x74
   29930:	cmp	r0, #0
   29934:	popeq	{r4, r5, fp, pc}
   29938:	ldr	r0, [r4, #92]	; 0x5c
   2993c:	ldr	r2, [r4, #96]	; 0x60
   29940:	mov	r1, #0
   29944:	mov	r5, #0
   29948:	bl	12b5c <memset@plt>
   2994c:	mov	r0, #16
   29950:	str	r5, [r4, #120]	; 0x78
   29954:	str	r0, [r4, #124]	; 0x7c
   29958:	pop	{r4, r5, fp, pc}

0002995c <flatcc_builder_custom_init@@Base>:
   2995c:	push	{r4, r5, r6, r7, fp, lr}
   29960:	add	fp, sp, #16
   29964:	mov	r6, r2
   29968:	mov	r7, r1
   2996c:	mov	r1, #0
   29970:	mov	r2, #232	; 0xe8
   29974:	mov	r5, r3
   29978:	mov	r4, r0
   2997c:	bl	12b5c <memset@plt>
   29980:	ldr	r0, [fp, #8]
   29984:	cmp	r7, #0
   29988:	bne	299a0 <flatcc_builder_custom_init@@Base+0x44>
   2998c:	mov	r1, #1
   29990:	add	r6, r4, #188	; 0xbc
   29994:	str	r1, [r4, #184]	; 0xb8
   29998:	ldr	r7, [pc, #40]	; 299c8 <flatcc_builder_custom_init@@Base+0x6c>
   2999c:	ldr	r7, [pc, r7]
   299a0:	ldr	r1, [pc, #36]	; 299cc <flatcc_builder_custom_init@@Base+0x70>
   299a4:	cmp	r5, #0
   299a8:	ldr	r1, [pc, r1]
   299ac:	str	r6, [r4, #36]	; 0x24
   299b0:	str	r0, [r4, #40]	; 0x28
   299b4:	mov	r0, #0
   299b8:	str	r7, [r4, #44]	; 0x2c
   299bc:	movne	r1, r5
   299c0:	str	r1, [r4, #48]	; 0x30
   299c4:	pop	{r4, r5, r6, r7, fp, pc}
   299c8:	andeq	sp, r1, r8, ror #13
   299cc:	ldrdeq	sp, [r1], -r4

000299d0 <flatcc_builder_init@@Base>:
   299d0:	push	{r4, r5, fp, lr}
   299d4:	add	fp, sp, #8
   299d8:	mov	r1, #0
   299dc:	mov	r2, #232	; 0xe8
   299e0:	mov	r4, r0
   299e4:	mov	r5, #0
   299e8:	bl	12b5c <memset@plt>
   299ec:	mov	r0, #1
   299f0:	str	r0, [r4, #184]	; 0xb8
   299f4:	add	r0, r4, #188	; 0xbc
   299f8:	ldr	r1, [pc, #32]	; 29a20 <flatcc_builder_init@@Base+0x50>
   299fc:	ldr	r1, [pc, r1]
   29a00:	ldr	r2, [pc, #28]	; 29a24 <flatcc_builder_init@@Base+0x54>
   29a04:	ldr	r2, [pc, r2]
   29a08:	str	r0, [r4, #36]	; 0x24
   29a0c:	mov	r0, #0
   29a10:	str	r5, [r4, #40]	; 0x28
   29a14:	str	r2, [r4, #44]	; 0x2c
   29a18:	str	r1, [r4, #48]	; 0x30
   29a1c:	pop	{r4, r5, fp, pc}
   29a20:	andeq	sp, r1, r0, lsl #13
   29a24:	andeq	sp, r1, r0, lsl #13

00029a28 <flatcc_builder_custom_reset@@Base>:
   29a28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29a2c:	add	fp, sp, #24
   29a30:	sub	sp, sp, #8
   29a34:	mov	r9, r2
   29a38:	mov	r8, r1
   29a3c:	mov	r4, r0
   29a40:	add	r7, r0, #52	; 0x34
   29a44:	mov	r5, #0
   29a48:	ldr	r0, [r7]
   29a4c:	cmp	r0, #0
   29a50:	beq	29a98 <flatcc_builder_custom_reset@@Base+0x70>
   29a54:	cmp	r9, #0
   29a58:	cmpne	r5, #5
   29a5c:	beq	29a88 <flatcc_builder_custom_reset@@Base+0x60>
   29a60:	ldr	r0, [r4, #40]	; 0x28
   29a64:	ldr	r6, [r4, #48]	; 0x30
   29a68:	mov	r1, r7
   29a6c:	mov	r2, #1
   29a70:	mov	r3, #1
   29a74:	str	r5, [sp]
   29a78:	blx	r6
   29a7c:	cmp	r0, #0
   29a80:	bne	29b38 <flatcc_builder_custom_reset@@Base+0x110>
   29a84:	ldr	r0, [r7]
   29a88:	ldr	r2, [r7, #4]
   29a8c:	mov	r1, #0
   29a90:	bl	12b5c <memset@plt>
   29a94:	b	29aa4 <flatcc_builder_custom_reset@@Base+0x7c>
   29a98:	ldr	r0, [r7, #4]
   29a9c:	cmp	r0, #0
   29aa0:	bne	29b48 <flatcc_builder_custom_reset@@Base+0x120>
   29aa4:	add	r5, r5, #1
   29aa8:	add	r7, r7, #8
   29aac:	cmp	r5, #8
   29ab0:	bcc	29a48 <flatcc_builder_custom_reset@@Base+0x20>
   29ab4:	mov	r0, #0
   29ab8:	vmov.i32	q8, #0	; 0x00000000
   29abc:	mov	r5, #0
   29ac0:	str	r0, [r4, #120]	; 0x78
   29ac4:	ldr	r1, [r4, #124]	; 0x7c
   29ac8:	cmp	r1, #0
   29acc:	movne	r1, #16
   29ad0:	strne	r1, [r4, #124]	; 0x7c
   29ad4:	add	r1, r4, #148	; 0x94
   29ad8:	strh	r0, [r4, #128]	; 0x80
   29adc:	str	r0, [r4, #136]	; 0x88
   29ae0:	str	r0, [r4, #140]	; 0x8c
   29ae4:	str	r0, [r4, #32]
   29ae8:	cmp	r8, #0
   29aec:	vst1.32	{d16-d17}, [r1]
   29af0:	ldr	r2, [r4, #60]	; 0x3c
   29af4:	ldr	r1, [r4, #52]	; 0x34
   29af8:	ldr	r3, [r4, #76]	; 0x4c
   29afc:	str	r2, [r4, #16]
   29b00:	str	r0, [r4, #20]
   29b04:	str	r0, [r4, #24]
   29b08:	movne	r0, #0
   29b0c:	str	r3, [r4]
   29b10:	str	r1, [r4, #4]
   29b14:	strne	r0, [r4, #172]	; 0xac
   29b18:	strne	r0, [r4, #176]	; 0xb0
   29b1c:	strne	r0, [r4, #180]	; 0xb4
   29b20:	ldr	r0, [r4, #184]	; 0xb8
   29b24:	cmp	r0, #0
   29b28:	beq	29b3c <flatcc_builder_custom_reset@@Base+0x114>
   29b2c:	add	r0, r4, #188	; 0xbc
   29b30:	bl	2e60c <flatcc_emitter_reset@@Base>
   29b34:	b	29b3c <flatcc_builder_custom_reset@@Base+0x114>
   29b38:	mvn	r5, #0
   29b3c:	mov	r0, r5
   29b40:	sub	sp, fp, #24
   29b44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29b48:	ldr	r0, [pc, #24]	; 29b68 <flatcc_builder_custom_reset@@Base+0x140>
   29b4c:	ldr	r1, [pc, #24]	; 29b6c <flatcc_builder_custom_reset@@Base+0x144>
   29b50:	ldr	r3, [pc, #24]	; 29b70 <flatcc_builder_custom_reset@@Base+0x148>
   29b54:	movw	r2, #434	; 0x1b2
   29b58:	add	r0, pc, r0
   29b5c:	add	r1, pc, r1
   29b60:	add	r3, pc, r3
   29b64:	bl	12bbc <__assert_fail@plt>
   29b68:	andeq	sl, r0, r4, asr r2
   29b6c:	andeq	sl, r0, r2, ror #4
   29b70:			; <UNDEFINED> instruction: 0x0000a2bb

00029b74 <flatcc_builder_reset@@Base>:
   29b74:	push	{r4, sl, fp, lr}
   29b78:	add	fp, sp, #8
   29b7c:	mov	r4, r0
   29b80:	ldr	r0, [r0, #52]	; 0x34
   29b84:	ldr	r2, [r4, #56]	; 0x38
   29b88:	cmp	r0, #0
   29b8c:	beq	29b9c <flatcc_builder_reset@@Base+0x28>
   29b90:	mov	r1, #0
   29b94:	bl	12b5c <memset@plt>
   29b98:	b	29ba4 <flatcc_builder_reset@@Base+0x30>
   29b9c:	cmp	r2, #0
   29ba0:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29ba4:	ldr	r0, [r4, #60]	; 0x3c
   29ba8:	ldr	r2, [r4, #64]	; 0x40
   29bac:	cmp	r0, #0
   29bb0:	beq	29bc0 <flatcc_builder_reset@@Base+0x4c>
   29bb4:	mov	r1, #0
   29bb8:	bl	12b5c <memset@plt>
   29bbc:	b	29bc8 <flatcc_builder_reset@@Base+0x54>
   29bc0:	cmp	r2, #0
   29bc4:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29bc8:	ldr	r0, [r4, #68]	; 0x44
   29bcc:	ldr	r2, [r4, #72]	; 0x48
   29bd0:	cmp	r0, #0
   29bd4:	beq	29be4 <flatcc_builder_reset@@Base+0x70>
   29bd8:	mov	r1, #0
   29bdc:	bl	12b5c <memset@plt>
   29be0:	b	29bec <flatcc_builder_reset@@Base+0x78>
   29be4:	cmp	r2, #0
   29be8:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29bec:	ldr	r0, [r4, #76]	; 0x4c
   29bf0:	ldr	r2, [r4, #80]	; 0x50
   29bf4:	cmp	r0, #0
   29bf8:	beq	29c08 <flatcc_builder_reset@@Base+0x94>
   29bfc:	mov	r1, #0
   29c00:	bl	12b5c <memset@plt>
   29c04:	b	29c10 <flatcc_builder_reset@@Base+0x9c>
   29c08:	cmp	r2, #0
   29c0c:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29c10:	ldr	r0, [r4, #84]	; 0x54
   29c14:	ldr	r2, [r4, #88]	; 0x58
   29c18:	cmp	r0, #0
   29c1c:	beq	29c2c <flatcc_builder_reset@@Base+0xb8>
   29c20:	mov	r1, #0
   29c24:	bl	12b5c <memset@plt>
   29c28:	b	29c34 <flatcc_builder_reset@@Base+0xc0>
   29c2c:	cmp	r2, #0
   29c30:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29c34:	ldr	r0, [r4, #92]	; 0x5c
   29c38:	ldr	r2, [r4, #96]	; 0x60
   29c3c:	cmp	r0, #0
   29c40:	beq	29c50 <flatcc_builder_reset@@Base+0xdc>
   29c44:	mov	r1, #0
   29c48:	bl	12b5c <memset@plt>
   29c4c:	b	29c58 <flatcc_builder_reset@@Base+0xe4>
   29c50:	cmp	r2, #0
   29c54:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29c58:	ldr	r0, [r4, #100]	; 0x64
   29c5c:	ldr	r2, [r4, #104]	; 0x68
   29c60:	cmp	r0, #0
   29c64:	beq	29c74 <flatcc_builder_reset@@Base+0x100>
   29c68:	mov	r1, #0
   29c6c:	bl	12b5c <memset@plt>
   29c70:	b	29c7c <flatcc_builder_reset@@Base+0x108>
   29c74:	cmp	r2, #0
   29c78:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29c7c:	ldr	r0, [r4, #108]	; 0x6c
   29c80:	ldr	r2, [r4, #112]	; 0x70
   29c84:	cmp	r0, #0
   29c88:	beq	29c98 <flatcc_builder_reset@@Base+0x124>
   29c8c:	mov	r1, #0
   29c90:	bl	12b5c <memset@plt>
   29c94:	b	29ca0 <flatcc_builder_reset@@Base+0x12c>
   29c98:	cmp	r2, #0
   29c9c:	bne	29d0c <flatcc_builder_reset@@Base+0x198>
   29ca0:	mov	r0, #0
   29ca4:	str	r0, [r4, #120]	; 0x78
   29ca8:	ldr	r1, [r4, #124]	; 0x7c
   29cac:	cmp	r1, #0
   29cb0:	movne	r1, #16
   29cb4:	strne	r1, [r4, #124]	; 0x7c
   29cb8:	vmov.i32	q8, #0	; 0x00000000
   29cbc:	add	r1, r4, #148	; 0x94
   29cc0:	strh	r0, [r4, #128]	; 0x80
   29cc4:	str	r0, [r4, #136]	; 0x88
   29cc8:	str	r0, [r4, #140]	; 0x8c
   29ccc:	str	r0, [r4, #32]
   29cd0:	vst1.32	{d16-d17}, [r1]
   29cd4:	ldr	r1, [r4, #184]	; 0xb8
   29cd8:	ldr	ip, [r4, #52]	; 0x34
   29cdc:	ldr	r2, [r4, #60]	; 0x3c
   29ce0:	ldr	r3, [r4, #76]	; 0x4c
   29ce4:	cmp	r1, #0
   29ce8:	str	r2, [r4, #16]
   29cec:	str	r0, [r4, #20]
   29cf0:	str	r0, [r4, #24]
   29cf4:	stm	r4, {r3, ip}
   29cf8:	beq	29d04 <flatcc_builder_reset@@Base+0x190>
   29cfc:	add	r0, r4, #188	; 0xbc
   29d00:	bl	2e60c <flatcc_emitter_reset@@Base>
   29d04:	mov	r0, #0
   29d08:	pop	{r4, sl, fp, pc}
   29d0c:	ldr	r0, [pc, #24]	; 29d2c <flatcc_builder_reset@@Base+0x1b8>
   29d10:	ldr	r1, [pc, #24]	; 29d30 <flatcc_builder_reset@@Base+0x1bc>
   29d14:	ldr	r3, [pc, #24]	; 29d34 <flatcc_builder_reset@@Base+0x1c0>
   29d18:	movw	r2, #434	; 0x1b2
   29d1c:	add	r0, pc, r0
   29d20:	add	r1, pc, r1
   29d24:	add	r3, pc, r3
   29d28:	bl	12bbc <__assert_fail@plt>
   29d2c:	muleq	r0, r0, r0
   29d30:	muleq	r0, lr, r0
   29d34:	strdeq	sl, [r0], -r7

00029d38 <flatcc_builder_clear@@Base>:
   29d38:	push	{r4, sl, fp, lr}
   29d3c:	add	fp, sp, #8
   29d40:	sub	sp, sp, #8
   29d44:	mov	r4, r0
   29d48:	ldr	r0, [r0, #40]	; 0x28
   29d4c:	mov	r1, #0
   29d50:	mov	r2, #0
   29d54:	mov	r3, #0
   29d58:	ldr	ip, [r4, #48]	; 0x30
   29d5c:	str	r1, [sp]
   29d60:	add	r1, r4, #52	; 0x34
   29d64:	blx	ip
   29d68:	ldr	r0, [r4, #40]	; 0x28
   29d6c:	ldr	ip, [r4, #48]	; 0x30
   29d70:	mov	r1, #1
   29d74:	mov	r2, #0
   29d78:	mov	r3, #0
   29d7c:	str	r1, [sp]
   29d80:	add	r1, r4, #60	; 0x3c
   29d84:	blx	ip
   29d88:	ldr	r0, [r4, #40]	; 0x28
   29d8c:	ldr	ip, [r4, #48]	; 0x30
   29d90:	mov	r1, #2
   29d94:	mov	r2, #0
   29d98:	mov	r3, #0
   29d9c:	str	r1, [sp]
   29da0:	add	r1, r4, #68	; 0x44
   29da4:	blx	ip
   29da8:	ldr	r0, [r4, #40]	; 0x28
   29dac:	ldr	ip, [r4, #48]	; 0x30
   29db0:	mov	r1, #3
   29db4:	mov	r2, #0
   29db8:	mov	r3, #0
   29dbc:	str	r1, [sp]
   29dc0:	add	r1, r4, #76	; 0x4c
   29dc4:	blx	ip
   29dc8:	ldr	r0, [r4, #40]	; 0x28
   29dcc:	ldr	ip, [r4, #48]	; 0x30
   29dd0:	mov	r1, #4
   29dd4:	mov	r2, #0
   29dd8:	mov	r3, #0
   29ddc:	str	r1, [sp]
   29de0:	add	r1, r4, #84	; 0x54
   29de4:	blx	ip
   29de8:	ldr	r0, [r4, #40]	; 0x28
   29dec:	ldr	ip, [r4, #48]	; 0x30
   29df0:	mov	r1, #5
   29df4:	mov	r2, #0
   29df8:	mov	r3, #0
   29dfc:	str	r1, [sp]
   29e00:	add	r1, r4, #92	; 0x5c
   29e04:	blx	ip
   29e08:	ldr	r0, [r4, #40]	; 0x28
   29e0c:	ldr	ip, [r4, #48]	; 0x30
   29e10:	mov	r1, #6
   29e14:	mov	r2, #0
   29e18:	mov	r3, #0
   29e1c:	str	r1, [sp]
   29e20:	add	r1, r4, #100	; 0x64
   29e24:	blx	ip
   29e28:	ldr	r0, [r4, #40]	; 0x28
   29e2c:	ldr	ip, [r4, #48]	; 0x30
   29e30:	mov	r1, #7
   29e34:	mov	r2, #0
   29e38:	mov	r3, #0
   29e3c:	str	r1, [sp]
   29e40:	add	r1, r4, #108	; 0x6c
   29e44:	blx	ip
   29e48:	ldr	r0, [r4, #184]	; 0xb8
   29e4c:	cmp	r0, #0
   29e50:	beq	29e5c <flatcc_builder_clear@@Base+0x124>
   29e54:	add	r0, r4, #188	; 0xbc
   29e58:	bl	2e6d8 <flatcc_emitter_clear@@Base>
   29e5c:	mov	r0, r4
   29e60:	mov	r1, #0
   29e64:	mov	r2, #232	; 0xe8
   29e68:	sub	sp, fp, #8
   29e6c:	pop	{r4, sl, fp, lr}
   29e70:	b	12b5c <memset@plt>

00029e74 <flatcc_builder_enter_user_frame_ptr@@Base>:
   29e74:	push	{r4, r5, r6, r7, fp, lr}
   29e78:	add	fp, sp, #16
   29e7c:	sub	sp, sp, #8
   29e80:	mov	r4, r0
   29e84:	ldr	r0, [r0, #112]	; 0x70
   29e88:	add	r1, r1, #7
   29e8c:	ldr	r7, [r4, #228]	; 0xe4
   29e90:	bic	r5, r1, #3
   29e94:	add	r6, r4, #108	; 0x6c
   29e98:	add	r2, r7, r5
   29e9c:	cmp	r2, r0
   29ea0:	bls	29ec8 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   29ea4:	ldr	r0, [r4, #40]	; 0x28
   29ea8:	ldr	ip, [r4, #48]	; 0x30
   29eac:	mov	r1, #7
   29eb0:	mov	r3, #0
   29eb4:	str	r1, [sp]
   29eb8:	mov	r1, r6
   29ebc:	blx	ip
   29ec0:	cmp	r0, #0
   29ec4:	bne	29f14 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   29ec8:	ldr	r0, [r6]
   29ecc:	adds	r6, r0, r7
   29ed0:	beq	29f04 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   29ed4:	mov	r0, r6
   29ed8:	mov	r1, #0
   29edc:	mov	r2, r5
   29ee0:	bl	12b5c <memset@plt>
   29ee4:	ldr	r0, [r4, #224]	; 0xe0
   29ee8:	str	r0, [r6], #4
   29eec:	ldr	r0, [r4, #228]	; 0xe4
   29ef0:	add	r1, r0, #4
   29ef4:	add	r0, r0, r5
   29ef8:	str	r1, [r4, #224]	; 0xe0
   29efc:	str	r0, [r4, #228]	; 0xe4
   29f00:	b	29f08 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   29f04:	mov	r6, #0
   29f08:	mov	r0, r6
   29f0c:	sub	sp, fp, #16
   29f10:	pop	{r4, r5, r6, r7, fp, pc}
   29f14:	ldr	r0, [pc, #24]	; 29f34 <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   29f18:	ldr	r1, [pc, #24]	; 29f38 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   29f1c:	ldr	r3, [pc, #24]	; 29f3c <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   29f20:	mov	r2, #308	; 0x134
   29f24:	add	r0, pc, r0
   29f28:	add	r1, pc, r1
   29f2c:	add	r3, pc, r3
   29f30:	bl	12bbc <__assert_fail@plt>
   29f34:	andeq	fp, r0, r7, asr r0
   29f38:	muleq	r0, r6, lr
   29f3c:	andeq	sl, r0, r9, lsl #29

00029f40 <flatcc_builder_enter_user_frame@@Base>:
   29f40:	push	{r4, r5, r6, r7, fp, lr}
   29f44:	add	fp, sp, #16
   29f48:	sub	sp, sp, #8
   29f4c:	mov	r4, r0
   29f50:	ldr	r0, [r0, #112]	; 0x70
   29f54:	add	r1, r1, #7
   29f58:	ldr	r7, [r4, #228]	; 0xe4
   29f5c:	bic	r5, r1, #3
   29f60:	add	r6, r4, #108	; 0x6c
   29f64:	add	r2, r7, r5
   29f68:	cmp	r2, r0
   29f6c:	bls	29f94 <flatcc_builder_enter_user_frame@@Base+0x54>
   29f70:	ldr	r0, [r4, #40]	; 0x28
   29f74:	ldr	ip, [r4, #48]	; 0x30
   29f78:	mov	r1, #7
   29f7c:	mov	r3, #0
   29f80:	str	r1, [sp]
   29f84:	mov	r1, r6
   29f88:	blx	ip
   29f8c:	cmp	r0, #0
   29f90:	bne	29fdc <flatcc_builder_enter_user_frame@@Base+0x9c>
   29f94:	ldr	r0, [r6]
   29f98:	adds	r6, r0, r7
   29f9c:	moveq	r0, #0
   29fa0:	subeq	sp, fp, #16
   29fa4:	popeq	{r4, r5, r6, r7, fp, pc}
   29fa8:	mov	r0, r6
   29fac:	mov	r1, #0
   29fb0:	mov	r2, r5
   29fb4:	bl	12b5c <memset@plt>
   29fb8:	ldr	r0, [r4, #224]	; 0xe0
   29fbc:	str	r0, [r6]
   29fc0:	ldr	r1, [r4, #228]	; 0xe4
   29fc4:	add	r0, r1, #4
   29fc8:	add	r1, r1, r5
   29fcc:	str	r0, [r4, #224]	; 0xe0
   29fd0:	str	r1, [r4, #228]	; 0xe4
   29fd4:	sub	sp, fp, #16
   29fd8:	pop	{r4, r5, r6, r7, fp, pc}
   29fdc:	ldr	r0, [pc, #24]	; 29ffc <flatcc_builder_enter_user_frame@@Base+0xbc>
   29fe0:	ldr	r1, [pc, #24]	; 2a000 <flatcc_builder_enter_user_frame@@Base+0xc0>
   29fe4:	ldr	r3, [pc, #24]	; 2a004 <flatcc_builder_enter_user_frame@@Base+0xc4>
   29fe8:	mov	r2, #308	; 0x134
   29fec:	add	r0, pc, r0
   29ff0:	add	r1, pc, r1
   29ff4:	add	r3, pc, r3
   29ff8:	bl	12bbc <__assert_fail@plt>
   29ffc:	andeq	sl, r0, pc, lsl #31
   2a000:	andeq	r9, r0, lr, asr #27
   2a004:	andeq	sl, r0, r1, asr #27

0002a008 <flatcc_builder_exit_user_frame@@Base>:
   2a008:	ldr	r1, [r0, #224]	; 0xe0
   2a00c:	cmp	r1, #0
   2a010:	subne	r2, r1, #4
   2a014:	strne	r2, [r0, #228]	; 0xe4
   2a018:	ldrne	r2, [r0, #108]	; 0x6c
   2a01c:	addne	r1, r2, r1
   2a020:	ldrne	r1, [r1, #-4]
   2a024:	strne	r1, [r0, #224]	; 0xe0
   2a028:	movne	r0, r1
   2a02c:	bxne	lr
   2a030:	push	{fp, lr}
   2a034:	mov	fp, sp
   2a038:	ldr	r0, [pc, #24]	; 2a058 <flatcc_builder_exit_user_frame@@Base+0x50>
   2a03c:	ldr	r1, [pc, #24]	; 2a05c <flatcc_builder_exit_user_frame@@Base+0x54>
   2a040:	ldr	r3, [pc, #24]	; 2a060 <flatcc_builder_exit_user_frame@@Base+0x58>
   2a044:	movw	r2, #542	; 0x21e
   2a048:	add	r0, pc, r0
   2a04c:	add	r1, pc, r1
   2a050:	add	r3, pc, r3
   2a054:	bl	12bbc <__assert_fail@plt>
   2a058:	andeq	r9, r0, r1, lsl lr
   2a05c:	andeq	r9, r0, r2, ror sp
   2a060:	andeq	r9, r0, r2, lsr #28

0002a064 <flatcc_builder_exit_user_frame_at@@Base>:
   2a064:	push	{fp, lr}
   2a068:	mov	fp, sp
   2a06c:	ldr	r2, [r0, #224]	; 0xe0
   2a070:	cmp	r2, r1
   2a074:	bcc	2a0c0 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2a078:	cmp	r1, #0
   2a07c:	str	r1, [r0, #224]	; 0xe0
   2a080:	subne	r2, r1, #4
   2a084:	strne	r2, [r0, #228]	; 0xe4
   2a088:	ldrne	r2, [r0, #108]	; 0x6c
   2a08c:	addne	r1, r2, r1
   2a090:	ldrne	r1, [r1, #-4]
   2a094:	strne	r1, [r0, #224]	; 0xe0
   2a098:	movne	r0, r1
   2a09c:	popne	{fp, pc}
   2a0a0:	ldr	r0, [pc, #68]	; 2a0ec <flatcc_builder_exit_user_frame_at@@Base+0x88>
   2a0a4:	ldr	r1, [pc, #68]	; 2a0f0 <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   2a0a8:	ldr	r3, [pc, #68]	; 2a0f4 <flatcc_builder_exit_user_frame_at@@Base+0x90>
   2a0ac:	movw	r2, #542	; 0x21e
   2a0b0:	add	r0, pc, r0
   2a0b4:	add	r1, pc, r1
   2a0b8:	add	r3, pc, r3
   2a0bc:	bl	12bbc <__assert_fail@plt>
   2a0c0:	ldr	r0, [pc, #24]	; 2a0e0 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   2a0c4:	ldr	r1, [pc, #24]	; 2a0e4 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   2a0c8:	ldr	r3, [pc, #24]	; 2a0e8 <flatcc_builder_exit_user_frame_at@@Base+0x84>
   2a0cc:	movw	r2, #551	; 0x227
   2a0d0:	add	r0, pc, r0
   2a0d4:	add	r1, pc, r1
   2a0d8:	add	r3, pc, r3
   2a0dc:	bl	12bbc <__assert_fail@plt>
   2a0e0:	ldrdeq	r9, [r0], -ip
   2a0e4:	andeq	r9, r0, sl, ror #25
   2a0e8:	strdeq	r9, [r0], -r3
   2a0ec:	andeq	r9, r0, r9, lsr #27
   2a0f0:	andeq	r9, r0, sl, lsl #26
   2a0f4:			; <UNDEFINED> instruction: 0x00009dba

0002a0f8 <flatcc_builder_get_current_user_frame@@Base>:
   2a0f8:	ldr	r0, [r0, #224]	; 0xe0
   2a0fc:	bx	lr

0002a100 <flatcc_builder_get_user_frame_ptr@@Base>:
   2a100:	ldr	r0, [r0, #108]	; 0x6c
   2a104:	add	r0, r0, r1
   2a108:	bx	lr

0002a10c <flatcc_builder_embed_buffer@@Base>:
   2a10c:	push	{r4, r5, r6, r7, fp, lr}
   2a110:	add	fp, sp, #16
   2a114:	sub	sp, sp, #88	; 0x58
   2a118:	mov	r4, r0
   2a11c:	ldr	r0, [fp, #8]
   2a120:	mov	r5, r3
   2a124:	mov	r7, r2
   2a128:	mov	r2, r1
   2a12c:	sub	r1, fp, #18
   2a130:	strh	r0, [fp, #-18]	; 0xffffffee
   2a134:	mov	r0, r4
   2a138:	ldr	r3, [r4, #152]	; 0x98
   2a13c:	cmp	r3, #0
   2a140:	movwne	r3, #1
   2a144:	bl	2a298 <flatcc_builder_embed_buffer@@Base+0x18c>
   2a148:	ldr	r1, [fp, #12]
   2a14c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2a150:	ldr	r0, [r4, #136]	; 0x88
   2a154:	mov	r2, #0
   2a158:	str	r2, [sp, #8]
   2a15c:	str	r2, [sp, #12]
   2a160:	and	r1, r1, #2
   2a164:	sub	r3, r3, #1
   2a168:	add	r1, r5, r1, lsl #1
   2a16c:	sub	r1, r0, r1
   2a170:	and	r3, r1, r3
   2a174:	add	r1, r3, r5
   2a178:	str	r1, [fp, #-24]	; 0xffffffe8
   2a17c:	ldr	r1, [r4, #152]	; 0x98
   2a180:	cmp	r1, #0
   2a184:	mov	r1, #0
   2a188:	beq	2a1a8 <flatcc_builder_embed_buffer@@Base+0x9c>
   2a18c:	sub	r1, fp, #24
   2a190:	mov	r2, #1
   2a194:	str	r1, [sp, #16]
   2a198:	mov	r1, #4
   2a19c:	str	r1, [sp, #8]
   2a1a0:	str	r1, [sp, #20]
   2a1a4:	str	r2, [sp, #12]
   2a1a8:	cmp	r5, #0
   2a1ac:	beq	2a1d0 <flatcc_builder_embed_buffer@@Base+0xc4>
   2a1b0:	add	r6, sp, #8
   2a1b4:	add	r1, r1, r5
   2a1b8:	add	r6, r6, r2, lsl #3
   2a1bc:	add	r2, r2, #1
   2a1c0:	str	r1, [sp, #8]
   2a1c4:	str	r7, [r6, #8]
   2a1c8:	str	r5, [r6, #12]
   2a1cc:	str	r2, [sp, #12]
   2a1d0:	cmp	r3, #0
   2a1d4:	beq	2a200 <flatcc_builder_embed_buffer@@Base+0xf4>
   2a1d8:	add	r1, r1, r3
   2a1dc:	add	r7, sp, #8
   2a1e0:	str	r1, [sp, #8]
   2a1e4:	add	r7, r7, r2, lsl #3
   2a1e8:	add	r2, r2, #1
   2a1ec:	ldr	r6, [pc, #136]	; 2a27c <flatcc_builder_embed_buffer@@Base+0x170>
   2a1f0:	ldr	r6, [pc, r6]
   2a1f4:	str	r6, [r7, #8]
   2a1f8:	str	r3, [r7, #12]
   2a1fc:	str	r2, [sp, #12]
   2a200:	cmp	r1, #0
   2a204:	ble	2a25c <flatcc_builder_embed_buffer@@Base+0x150>
   2a208:	sub	r5, r0, r1
   2a20c:	ldr	r0, [r4, #36]	; 0x24
   2a210:	ldr	r7, [r4, #44]	; 0x2c
   2a214:	str	r1, [sp]
   2a218:	add	r1, sp, #8
   2a21c:	add	r1, r1, #8
   2a220:	mov	r3, r5
   2a224:	blx	r7
   2a228:	cmp	r0, #0
   2a22c:	streq	r5, [r4, #136]	; 0x88
   2a230:	moveq	r0, r5
   2a234:	subeq	sp, fp, #16
   2a238:	popeq	{r4, r5, r6, r7, fp, pc}
   2a23c:	ldr	r0, [pc, #72]	; 2a28c <flatcc_builder_embed_buffer@@Base+0x180>
   2a240:	ldr	r1, [pc, #72]	; 2a290 <flatcc_builder_embed_buffer@@Base+0x184>
   2a244:	ldr	r3, [pc, #72]	; 2a294 <flatcc_builder_embed_buffer@@Base+0x188>
   2a248:	movw	r2, #651	; 0x28b
   2a24c:	add	r0, pc, r0
   2a250:	add	r1, pc, r1
   2a254:	add	r3, pc, r3
   2a258:	bl	12bbc <__assert_fail@plt>
   2a25c:	ldr	r0, [pc, #28]	; 2a280 <flatcc_builder_embed_buffer@@Base+0x174>
   2a260:	ldr	r1, [pc, #28]	; 2a284 <flatcc_builder_embed_buffer@@Base+0x178>
   2a264:	ldr	r3, [pc, #28]	; 2a288 <flatcc_builder_embed_buffer@@Base+0x17c>
   2a268:	movw	r2, #647	; 0x287
   2a26c:	add	r0, pc, r0
   2a270:	add	r1, pc, r1
   2a274:	add	r3, pc, r3
   2a278:	bl	12bbc <__assert_fail@plt>
   2a27c:	andeq	ip, r1, ip, ror lr
   2a280:	andeq	sl, r0, pc, lsl #26
   2a284:	andeq	r9, r0, lr, asr #22
   2a288:	andeq	sl, r0, r6, asr #23
   2a28c:	andeq	sl, r0, pc, lsr #26
   2a290:	andeq	r9, r0, lr, ror #22
   2a294:	andeq	sl, r0, r6, ror #23
   2a298:	push	{r4, sl, fp, lr}
   2a29c:	add	fp, sp, #8
   2a2a0:	sub	sp, sp, #80	; 0x50
   2a2a4:	cmp	r2, #0
   2a2a8:	bne	2a2b8 <flatcc_builder_embed_buffer@@Base+0x1ac>
   2a2ac:	ldrh	r2, [r0, #132]	; 0x84
   2a2b0:	cmp	r2, #0
   2a2b4:	movweq	r2, #1
   2a2b8:	ldrh	r4, [r1]
   2a2bc:	cmp	r4, #4
   2a2c0:	movwcc	r4, #4
   2a2c4:	cmpcs	r4, r2
   2a2c8:	bcs	2a2d8 <flatcc_builder_embed_buffer@@Base+0x1cc>
   2a2cc:	cmp	r4, r2
   2a2d0:	movcc	r4, r2
   2a2d4:	strh	r4, [r1]
   2a2d8:	cmp	r3, #0
   2a2dc:	bne	2a350 <flatcc_builder_embed_buffer@@Base+0x244>
   2a2e0:	ldr	r4, [r0, #140]	; 0x8c
   2a2e4:	sub	r1, r2, #1
   2a2e8:	ands	r1, r4, r1
   2a2ec:	beq	2a350 <flatcc_builder_embed_buffer@@Base+0x244>
   2a2f0:	mov	r2, #1
   2a2f4:	str	r1, [sp, #8]
   2a2f8:	str	r1, [sp, #20]
   2a2fc:	cmn	r1, #1
   2a300:	str	r2, [sp, #12]
   2a304:	ldr	r2, [pc, #172]	; 2a3b8 <flatcc_builder_embed_buffer@@Base+0x2ac>
   2a308:	ldr	r2, [pc, r2]
   2a30c:	str	r2, [sp, #16]
   2a310:	add	r2, r1, r4
   2a314:	str	r2, [r0, #140]	; 0x8c
   2a318:	ble	2a358 <flatcc_builder_embed_buffer@@Base+0x24c>
   2a31c:	ldr	r2, [r0, #36]	; 0x24
   2a320:	ldr	ip, [r0, #44]	; 0x2c
   2a324:	add	r0, sp, #8
   2a328:	str	r1, [sp]
   2a32c:	mov	r3, r4
   2a330:	add	r1, r0, #8
   2a334:	mov	r0, r2
   2a338:	mov	r2, #1
   2a33c:	blx	ip
   2a340:	cmp	r0, #0
   2a344:	bne	2a378 <flatcc_builder_embed_buffer@@Base+0x26c>
   2a348:	cmn	r4, #1
   2a34c:	beq	2a398 <flatcc_builder_embed_buffer@@Base+0x28c>
   2a350:	sub	sp, fp, #8
   2a354:	pop	{r4, sl, fp, pc}
   2a358:	ldr	r0, [pc, #92]	; 2a3bc <flatcc_builder_embed_buffer@@Base+0x2b0>
   2a35c:	ldr	r1, [pc, #92]	; 2a3c0 <flatcc_builder_embed_buffer@@Base+0x2b4>
   2a360:	ldr	r3, [pc, #92]	; 2a3c4 <flatcc_builder_embed_buffer@@Base+0x2b8>
   2a364:	movw	r2, #673	; 0x2a1
   2a368:	add	r0, pc, r0
   2a36c:	add	r1, pc, r1
   2a370:	add	r3, pc, r3
   2a374:	bl	12bbc <__assert_fail@plt>
   2a378:	ldr	r0, [pc, #72]	; 2a3c8 <flatcc_builder_embed_buffer@@Base+0x2bc>
   2a37c:	ldr	r1, [pc, #72]	; 2a3cc <flatcc_builder_embed_buffer@@Base+0x2c0>
   2a380:	ldr	r3, [pc, #72]	; 2a3d0 <flatcc_builder_embed_buffer@@Base+0x2c4>
   2a384:	movw	r2, #677	; 0x2a5
   2a388:	add	r0, pc, r0
   2a38c:	add	r1, pc, r1
   2a390:	add	r3, pc, r3
   2a394:	bl	12bbc <__assert_fail@plt>
   2a398:	ldr	r0, [pc, #52]	; 2a3d4 <flatcc_builder_embed_buffer@@Base+0x2c8>
   2a39c:	ldr	r1, [pc, #52]	; 2a3d8 <flatcc_builder_embed_buffer@@Base+0x2cc>
   2a3a0:	ldr	r3, [pc, #52]	; 2a3dc <flatcc_builder_embed_buffer@@Base+0x2d0>
   2a3a4:	movw	r2, #702	; 0x2be
   2a3a8:	add	r0, pc, r0
   2a3ac:	add	r1, pc, r1
   2a3b0:	add	r3, pc, r3
   2a3b4:	bl	12bbc <__assert_fail@plt>
   2a3b8:	andeq	ip, r1, r4, ror #26
   2a3bc:	andeq	sl, r0, r3, lsl ip
   2a3c0:	andeq	r9, r0, r2, asr sl
   2a3c4:	andeq	sl, r0, r6, lsl #23
   2a3c8:	strdeq	sl, [r0], -r3
   2a3cc:	andeq	r9, r0, r2, lsr sl
   2a3d0:	andeq	sl, r0, r6, ror #22
   2a3d4:	ldrdeq	sl, [r0], -r3
   2a3d8:	andeq	r9, r0, r2, lsl sl
   2a3dc:	andeq	sl, r0, r8, asr #20

0002a3e0 <flatcc_builder_create_buffer@@Base>:
   2a3e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a3e4:	add	fp, sp, #28
   2a3e8:	sub	sp, sp, #100	; 0x64
   2a3ec:	ldr	r8, [fp, #12]
   2a3f0:	mov	r4, r0
   2a3f4:	ldr	r0, [fp, #8]
   2a3f8:	mov	r7, r1
   2a3fc:	mov	r5, #0
   2a400:	mov	r9, r3
   2a404:	sub	r1, fp, #30
   2a408:	str	r5, [sp, #12]
   2a40c:	and	r6, r8, #1
   2a410:	strh	r0, [fp, #-30]	; 0xffffffe2
   2a414:	mov	r0, r4
   2a418:	mov	r3, r6
   2a41c:	bl	2a298 <flatcc_builder_embed_buffer@@Base+0x18c>
   2a420:	ldrh	r0, [r4, #128]	; 0x80
   2a424:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2a428:	cmp	r0, r1
   2a42c:	strhcc	r1, [r4, #128]	; 0x80
   2a430:	cmp	r7, #0
   2a434:	stmib	sp, {r6, r9}
   2a438:	beq	2a454 <flatcc_builder_create_buffer@@Base+0x74>
   2a43c:	ldr	r5, [r7]
   2a440:	cmp	r5, #0
   2a444:	str	r5, [sp, #12]
   2a448:	movwne	r5, #1
   2a44c:	lsl	r7, r5, #2
   2a450:	b	2a458 <flatcc_builder_create_buffer@@Base+0x78>
   2a454:	mov	r7, #0
   2a458:	ldr	r9, [r4, #136]	; 0x88
   2a45c:	mov	sl, #4
   2a460:	mvn	r6, #3
   2a464:	mov	r3, #0
   2a468:	ands	ip, r8, #3
   2a46c:	and	r2, sl, r8, lsl #1
   2a470:	str	r3, [sp, #20]
   2a474:	str	r3, [sp, #16]
   2a478:	sub	r2, r6, r2
   2a47c:	sub	r6, r1, #1
   2a480:	mov	r1, #4
   2a484:	add	r2, r2, r9
   2a488:	sub	r2, r2, r7
   2a48c:	beq	2a4b0 <flatcc_builder_create_buffer@@Base+0xd0>
   2a490:	sub	r1, fp, #40	; 0x28
   2a494:	mov	r3, #1
   2a498:	str	r1, [sp, #24]
   2a49c:	mov	r1, #4
   2a4a0:	str	r1, [sp, #16]
   2a4a4:	str	r1, [sp, #28]
   2a4a8:	mov	r1, #8
   2a4ac:	str	r3, [sp, #20]
   2a4b0:	add	lr, sp, #16
   2a4b4:	and	r6, r2, r6
   2a4b8:	sub	r0, fp, #36	; 0x24
   2a4bc:	str	r1, [sp, #16]
   2a4c0:	cmp	r5, #0
   2a4c4:	add	r2, lr, r3, lsl #3
   2a4c8:	str	r0, [r2, #8]
   2a4cc:	str	sl, [r2, #12]
   2a4d0:	add	r2, r3, #1
   2a4d4:	str	r2, [sp, #20]
   2a4d8:	beq	2a4fc <flatcc_builder_create_buffer@@Base+0x11c>
   2a4dc:	add	r1, r1, r7
   2a4e0:	add	r0, lr, r2, lsl #3
   2a4e4:	add	r2, sp, #12
   2a4e8:	str	r1, [sp, #16]
   2a4ec:	str	r2, [r0, #8]
   2a4f0:	orr	r2, r3, #2
   2a4f4:	str	r7, [r0, #12]
   2a4f8:	str	r2, [sp, #20]
   2a4fc:	cmp	r6, #0
   2a500:	beq	2a528 <flatcc_builder_create_buffer@@Base+0x148>
   2a504:	add	r1, r1, r6
   2a508:	add	r0, lr, r2, lsl #3
   2a50c:	add	r2, r2, #1
   2a510:	str	r1, [sp, #16]
   2a514:	ldr	r3, [pc, #224]	; 2a5fc <flatcc_builder_create_buffer@@Base+0x21c>
   2a518:	ldr	r3, [pc, r3]
   2a51c:	str	r3, [r0, #8]
   2a520:	str	r6, [r0, #12]
   2a524:	str	r2, [sp, #20]
   2a528:	ldr	r5, [sp, #4]
   2a52c:	sub	r7, r9, r1
   2a530:	cmp	ip, #0
   2a534:	mov	r6, #144	; 0x90
   2a538:	ldr	r3, [sp, #8]
   2a53c:	mov	r0, r7
   2a540:	addne	r0, r0, #4
   2a544:	cmp	r5, #0
   2a548:	sub	r3, r3, r0
   2a54c:	movweq	r6, #140	; 0x8c
   2a550:	cmp	r1, #0
   2a554:	ldr	r6, [r4, r6]
   2a558:	str	r3, [fp, #-36]	; 0xffffffdc
   2a55c:	sub	r0, r6, r0
   2a560:	str	r0, [fp, #-40]	; 0xffffffd8
   2a564:	ble	2a5bc <flatcc_builder_create_buffer@@Base+0x1dc>
   2a568:	ldr	r0, [r4, #36]	; 0x24
   2a56c:	ldr	r6, [r4, #44]	; 0x2c
   2a570:	str	r1, [sp]
   2a574:	add	r1, lr, #8
   2a578:	mov	r3, r7
   2a57c:	blx	r6
   2a580:	cmp	r0, #0
   2a584:	bne	2a5dc <flatcc_builder_create_buffer@@Base+0x1fc>
   2a588:	cmp	r7, #0
   2a58c:	str	r7, [r4, #136]	; 0x88
   2a590:	movne	r0, r7
   2a594:	subne	sp, fp, #28
   2a598:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a59c:	ldr	r0, [pc, #116]	; 2a618 <flatcc_builder_create_buffer@@Base+0x238>
   2a5a0:	ldr	r1, [pc, #116]	; 2a61c <flatcc_builder_create_buffer@@Base+0x23c>
   2a5a4:	ldr	r3, [pc, #116]	; 2a620 <flatcc_builder_create_buffer@@Base+0x240>
   2a5a8:	mov	r2, #772	; 0x304
   2a5ac:	add	r0, pc, r0
   2a5b0:	add	r1, pc, r1
   2a5b4:	add	r3, pc, r3
   2a5b8:	bl	12bbc <__assert_fail@plt>
   2a5bc:	ldr	r0, [pc, #60]	; 2a600 <flatcc_builder_create_buffer@@Base+0x220>
   2a5c0:	ldr	r1, [pc, #60]	; 2a604 <flatcc_builder_create_buffer@@Base+0x224>
   2a5c4:	ldr	r3, [pc, #60]	; 2a608 <flatcc_builder_create_buffer@@Base+0x228>
   2a5c8:	movw	r2, #647	; 0x287
   2a5cc:	add	r0, pc, r0
   2a5d0:	add	r1, pc, r1
   2a5d4:	add	r3, pc, r3
   2a5d8:	bl	12bbc <__assert_fail@plt>
   2a5dc:	ldr	r0, [pc, #40]	; 2a60c <flatcc_builder_create_buffer@@Base+0x22c>
   2a5e0:	ldr	r1, [pc, #40]	; 2a610 <flatcc_builder_create_buffer@@Base+0x230>
   2a5e4:	ldr	r3, [pc, #40]	; 2a614 <flatcc_builder_create_buffer@@Base+0x234>
   2a5e8:	movw	r2, #651	; 0x28b
   2a5ec:	add	r0, pc, r0
   2a5f0:	add	r1, pc, r1
   2a5f4:	add	r3, pc, r3
   2a5f8:	bl	12bbc <__assert_fail@plt>
   2a5fc:	andeq	ip, r1, r4, asr fp
   2a600:	andeq	sl, r0, pc, lsr #19
   2a604:	andeq	r9, r0, lr, ror #15
   2a608:	andeq	sl, r0, r6, ror #16
   2a60c:	andeq	sl, r0, pc, lsl #19
   2a610:	andeq	r9, r0, lr, asr #15
   2a614:	andeq	sl, r0, r6, asr #16
   2a618:	andeq	sl, r0, pc, asr #19
   2a61c:	andeq	r9, r0, lr, lsl #16
   2a620:	andeq	r9, r0, ip, asr r9

0002a624 <flatcc_builder_create_struct@@Base>:
   2a624:	push	{r4, r5, r6, sl, fp, lr}
   2a628:	add	fp, sp, #16
   2a62c:	sub	sp, sp, #80	; 0x50
   2a630:	cmp	r3, #0
   2a634:	beq	2a70c <flatcc_builder_create_struct@@Base+0xe8>
   2a638:	mov	r5, r0
   2a63c:	ldrh	r0, [r0, #128]	; 0x80
   2a640:	mov	r4, #0
   2a644:	cmp	r0, r3
   2a648:	strhcc	r3, [r5, #128]	; 0x80
   2a64c:	sub	r3, r3, #1
   2a650:	cmp	r2, #0
   2a654:	ldr	r0, [r5, #136]	; 0x88
   2a658:	str	r4, [sp, #12]
   2a65c:	str	r4, [sp, #8]
   2a660:	movne	r4, #1
   2a664:	strne	r1, [sp, #16]
   2a668:	strne	r2, [sp, #8]
   2a66c:	strne	r2, [sp, #20]
   2a670:	strne	r4, [sp, #12]
   2a674:	sub	r6, r0, r2
   2a678:	and	r3, r6, r3
   2a67c:	cmp	r3, #0
   2a680:	beq	2a6ac <flatcc_builder_create_struct@@Base+0x88>
   2a684:	add	r2, r3, r2
   2a688:	add	r1, sp, #8
   2a68c:	str	r2, [sp, #8]
   2a690:	add	r1, r1, r4, lsl #3
   2a694:	add	r4, r4, #1
   2a698:	ldr	r6, [pc, #172]	; 2a74c <flatcc_builder_create_struct@@Base+0x128>
   2a69c:	ldr	r6, [pc, r6]
   2a6a0:	str	r6, [r1, #8]
   2a6a4:	str	r3, [r1, #12]
   2a6a8:	str	r4, [sp, #12]
   2a6ac:	cmp	r2, #0
   2a6b0:	ble	2a72c <flatcc_builder_create_struct@@Base+0x108>
   2a6b4:	sub	r6, r0, r2
   2a6b8:	ldr	r0, [r5, #36]	; 0x24
   2a6bc:	ldr	ip, [r5, #44]	; 0x2c
   2a6c0:	add	r1, sp, #8
   2a6c4:	str	r2, [sp]
   2a6c8:	mov	r2, r4
   2a6cc:	add	r1, r1, #8
   2a6d0:	mov	r3, r6
   2a6d4:	blx	ip
   2a6d8:	cmp	r0, #0
   2a6dc:	streq	r6, [r5, #136]	; 0x88
   2a6e0:	moveq	r0, r6
   2a6e4:	subeq	sp, fp, #16
   2a6e8:	popeq	{r4, r5, r6, sl, fp, pc}
   2a6ec:	ldr	r0, [pc, #116]	; 2a768 <flatcc_builder_create_struct@@Base+0x144>
   2a6f0:	ldr	r1, [pc, #116]	; 2a76c <flatcc_builder_create_struct@@Base+0x148>
   2a6f4:	ldr	r3, [pc, #116]	; 2a770 <flatcc_builder_create_struct@@Base+0x14c>
   2a6f8:	movw	r2, #651	; 0x28b
   2a6fc:	add	r0, pc, r0
   2a700:	add	r1, pc, r1
   2a704:	add	r3, pc, r3
   2a708:	bl	12bbc <__assert_fail@plt>
   2a70c:	ldr	r0, [pc, #60]	; 2a750 <flatcc_builder_create_struct@@Base+0x12c>
   2a710:	ldr	r1, [pc, #60]	; 2a754 <flatcc_builder_create_struct@@Base+0x130>
   2a714:	ldr	r3, [pc, #60]	; 2a758 <flatcc_builder_create_struct@@Base+0x134>
   2a718:	movw	r2, #783	; 0x30f
   2a71c:	add	r0, pc, r0
   2a720:	add	r1, pc, r1
   2a724:	add	r3, pc, r3
   2a728:	bl	12bbc <__assert_fail@plt>
   2a72c:	ldr	r0, [pc, #40]	; 2a75c <flatcc_builder_create_struct@@Base+0x138>
   2a730:	ldr	r1, [pc, #40]	; 2a760 <flatcc_builder_create_struct@@Base+0x13c>
   2a734:	ldr	r3, [pc, #40]	; 2a764 <flatcc_builder_create_struct@@Base+0x140>
   2a738:	movw	r2, #647	; 0x287
   2a73c:	add	r0, pc, r0
   2a740:	add	r1, pc, r1
   2a744:	add	r3, pc, r3
   2a748:	bl	12bbc <__assert_fail@plt>
   2a74c:	ldrdeq	ip, [r1], -r0
   2a750:	andeq	r9, r0, r7, ror r8
   2a754:	muleq	r0, lr, r6
   2a758:	andeq	r9, r0, sl, ror r8
   2a75c:	andeq	sl, r0, pc, lsr r8
   2a760:	andeq	r9, r0, lr, ror r6
   2a764:	strdeq	sl, [r0], -r6
   2a768:	andeq	sl, r0, pc, ror r8
   2a76c:			; <UNDEFINED> instruction: 0x000096be
   2a770:	andeq	sl, r0, r6, lsr r7

0002a774 <flatcc_builder_start_buffer@@Base>:
   2a774:	push	{r4, r5, r6, r7, fp, lr}
   2a778:	add	fp, sp, #16
   2a77c:	mov	r5, r1
   2a780:	ldrh	r1, [r0, #128]	; 0x80
   2a784:	mov	r6, r3
   2a788:	mov	r7, r2
   2a78c:	mov	r4, r0
   2a790:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2a794:	mov	r1, r0
   2a798:	mvn	r0, #0
   2a79c:	cmp	r1, #0
   2a7a0:	popne	{r4, r5, r6, r7, fp, pc}
   2a7a4:	mov	r0, #1
   2a7a8:	cmp	r5, #0
   2a7ac:	strh	r0, [r4, #128]	; 0x80
   2a7b0:	ldrh	r1, [r4, #132]	; 0x84
   2a7b4:	ldr	r2, [r4, #32]
   2a7b8:	strh	r1, [r2, #34]	; 0x22
   2a7bc:	strh	r7, [r4, #132]	; 0x84
   2a7c0:	ldrh	r1, [r4, #164]	; 0xa4
   2a7c4:	ldr	r2, [r4, #32]
   2a7c8:	strh	r1, [r2, #32]
   2a7cc:	strh	r6, [r4, #164]	; 0xa4
   2a7d0:	ldr	r1, [r4, #32]
   2a7d4:	ldr	r2, [r4, #144]	; 0x90
   2a7d8:	str	r2, [r1, #20]
   2a7dc:	ldr	r1, [r4, #32]
   2a7e0:	ldr	r2, [r4, #152]	; 0x98
   2a7e4:	str	r2, [r1, #28]
   2a7e8:	ldr	r3, [r4, #148]	; 0x94
   2a7ec:	ldr	r1, [r4, #32]
   2a7f0:	ldr	r2, [r4, #136]	; 0x88
   2a7f4:	ldr	r7, [r4, #168]	; 0xa8
   2a7f8:	add	r6, r3, #1
   2a7fc:	str	r2, [r4, #144]	; 0x90
   2a800:	str	r6, [r4, #148]	; 0x94
   2a804:	str	r3, [r4, #152]	; 0x98
   2a808:	str	r7, [r1, #16]
   2a80c:	ldr	r1, [pc, #28]	; 2a830 <flatcc_builder_start_buffer@@Base+0xbc>
   2a810:	ldr	r1, [pc, r1]
   2a814:	movne	r1, r5
   2a818:	ldr	r1, [r1]
   2a81c:	str	r1, [r4, #168]	; 0xa8
   2a820:	ldr	r1, [r4, #32]
   2a824:	strh	r0, [r1, #14]
   2a828:	mov	r0, #0
   2a82c:	pop	{r4, r5, r6, r7, fp, pc}
   2a830:	andeq	ip, r1, ip, asr r8
   2a834:	push	{r4, r5, r6, r7, fp, lr}
   2a838:	add	fp, sp, #16
   2a83c:	sub	sp, sp, #8
   2a840:	mov	r5, r1
   2a844:	ldr	r1, [r0, #156]	; 0x9c
   2a848:	ldr	r2, [r0, #160]	; 0xa0
   2a84c:	mov	r4, r0
   2a850:	add	r0, r1, #1
   2a854:	cmp	r1, r2
   2a858:	str	r0, [r4, #156]	; 0x9c
   2a85c:	bge	2a870 <flatcc_builder_start_buffer@@Base+0xfc>
   2a860:	ldr	r0, [r4, #32]
   2a864:	add	r0, r0, #36	; 0x24
   2a868:	str	r0, [r4, #32]
   2a86c:	b	2a904 <flatcc_builder_start_buffer@@Base+0x190>
   2a870:	ldr	r2, [r4, #176]	; 0xb0
   2a874:	mvn	r6, #0
   2a878:	cmp	r2, #1
   2a87c:	cmpge	r1, r2
   2a880:	bge	2a93c <flatcc_builder_start_buffer@@Base+0x1c8>
   2a884:	add	r7, r0, r0, lsl #3
   2a888:	ldr	r0, [r4, #88]	; 0x58
   2a88c:	lsl	r2, r7, #2
   2a890:	cmp	r2, r0
   2a894:	bls	2a8bc <flatcc_builder_start_buffer@@Base+0x148>
   2a898:	ldr	r0, [r4, #40]	; 0x28
   2a89c:	ldr	ip, [r4, #48]	; 0x30
   2a8a0:	mov	r3, #4
   2a8a4:	add	r1, r4, #84	; 0x54
   2a8a8:	str	r3, [sp]
   2a8ac:	mov	r3, #0
   2a8b0:	blx	ip
   2a8b4:	cmp	r0, #0
   2a8b8:	bne	2a948 <flatcc_builder_start_buffer@@Base+0x1d4>
   2a8bc:	ldr	r1, [r4, #84]	; 0x54
   2a8c0:	mvn	r0, #35	; 0x23
   2a8c4:	add	r0, r0, r7, lsl #2
   2a8c8:	adds	r0, r0, r1
   2a8cc:	str	r0, [r4, #32]
   2a8d0:	beq	2a93c <flatcc_builder_start_buffer@@Base+0x1c8>
   2a8d4:	ldr	r1, [r4, #88]	; 0x58
   2a8d8:	movw	r3, #36409	; 0x8e39
   2a8dc:	ldr	r2, [r4, #176]	; 0xb0
   2a8e0:	movt	r3, #14563	; 0x38e3
   2a8e4:	umull	r1, r3, r1, r3
   2a8e8:	lsr	r1, r3, #3
   2a8ec:	cmp	r2, r3, lsr #3
   2a8f0:	mov	r3, r1
   2a8f4:	movlt	r3, r2
   2a8f8:	cmp	r2, #0
   2a8fc:	movle	r3, r1
   2a900:	str	r3, [r4, #160]	; 0xa0
   2a904:	ldr	r1, [r4, #20]
   2a908:	mvn	r3, #3
   2a90c:	mov	r6, #0
   2a910:	str	r1, [r0, #8]
   2a914:	ldrh	r2, [r4, #130]	; 0x82
   2a918:	strh	r2, [r0, #12]
   2a91c:	strh	r5, [r4, #130]	; 0x82
   2a920:	ldr	r2, [r4, #28]
   2a924:	stm	r0, {r2, r3}
   2a928:	add	r0, r1, r2
   2a92c:	str	r6, [r4, #20]
   2a930:	add	r0, r0, #7
   2a934:	bic	r0, r0, #7
   2a938:	str	r0, [r4, #28]
   2a93c:	mov	r0, r6
   2a940:	sub	sp, fp, #16
   2a944:	pop	{r4, r5, r6, r7, fp, pc}
   2a948:	ldr	r0, [pc, #24]	; 2a968 <flatcc_builder_start_buffer@@Base+0x1f4>
   2a94c:	ldr	r1, [pc, #24]	; 2a96c <flatcc_builder_start_buffer@@Base+0x1f8>
   2a950:	ldr	r3, [pc, #24]	; 2a970 <flatcc_builder_start_buffer@@Base+0x1fc>
   2a954:	mov	r2, #308	; 0x134
   2a958:	add	r0, pc, r0
   2a95c:	add	r1, pc, r1
   2a960:	add	r3, pc, r3
   2a964:	bl	12bbc <__assert_fail@plt>
   2a968:	andeq	sl, r0, r3, lsr #12
   2a96c:	andeq	r9, r0, r2, ror #8
   2a970:	andeq	sl, r0, r5, asr r4

0002a974 <flatcc_builder_end_buffer@@Base>:
   2a974:	push	{r4, r5, r6, sl, fp, lr}
   2a978:	add	fp, sp, #16
   2a97c:	sub	sp, sp, #8
   2a980:	mov	r4, r0
   2a984:	ldr	r0, [r0, #32]
   2a988:	ldrh	r0, [r0, #14]
   2a98c:	cmp	r0, #1
   2a990:	bne	2aa84 <flatcc_builder_end_buffer@@Base+0x110>
   2a994:	mov	r3, r1
   2a998:	ldr	r1, [r4, #152]	; 0x98
   2a99c:	ldrh	r0, [r4, #164]	; 0xa4
   2a9a0:	ldrh	r2, [r4, #132]	; 0x84
   2a9a4:	cmp	r1, #0
   2a9a8:	ldrh	r1, [r4, #128]	; 0x80
   2a9ac:	and	r0, r0, #2
   2a9b0:	orrne	r0, r0, #1
   2a9b4:	cmp	r1, r2
   2a9b8:	movcc	r1, r2
   2a9bc:	strhcc	r2, [r4, #128]	; 0x80
   2a9c0:	str	r0, [sp, #4]
   2a9c4:	mov	r0, r4
   2a9c8:	str	r1, [sp]
   2a9cc:	add	r1, r4, #168	; 0xa8
   2a9d0:	bl	2a3e0 <flatcc_builder_create_buffer@@Base>
   2a9d4:	mov	r6, r0
   2a9d8:	cmp	r0, #0
   2a9dc:	beq	2aa78 <flatcc_builder_end_buffer@@Base+0x104>
   2a9e0:	ldr	r1, [r4, #32]
   2a9e4:	ldr	r0, [r4, #16]
   2a9e8:	ldr	r2, [r4, #20]
   2a9ec:	ldr	r3, [r1, #20]
   2a9f0:	str	r3, [r4, #144]	; 0x90
   2a9f4:	ldr	r3, [r1, #28]
   2a9f8:	str	r3, [r4, #152]	; 0x98
   2a9fc:	ldr	r3, [r1, #16]
   2aa00:	str	r3, [r4, #168]	; 0xa8
   2aa04:	ldrh	r1, [r1, #32]
   2aa08:	strh	r1, [r4, #164]	; 0xa4
   2aa0c:	mov	r1, #0
   2aa10:	bl	12b5c <memset@plt>
   2aa14:	ldr	r0, [r4, #32]
   2aa18:	ldr	r1, [r4, #60]	; 0x3c
   2aa1c:	ldr	r2, [r4, #64]	; 0x40
   2aa20:	ldr	r3, [r0, #8]
   2aa24:	str	r3, [r4, #20]
   2aa28:	ldr	r3, [r0]
   2aa2c:	str	r3, [r4, #28]
   2aa30:	add	r1, r1, r3
   2aa34:	ldr	r5, [r0, #4]
   2aa38:	str	r1, [r4, #16]
   2aa3c:	sub	r1, r2, r3
   2aa40:	cmp	r1, r5
   2aa44:	movhi	r1, r5
   2aa48:	str	r1, [r4, #24]
   2aa4c:	ldrh	r1, [r4, #130]	; 0x82
   2aa50:	ldrh	r2, [r4, #128]	; 0x80
   2aa54:	cmp	r2, r1
   2aa58:	strhcc	r1, [r4, #128]	; 0x80
   2aa5c:	ldrh	r1, [r0, #12]
   2aa60:	sub	r0, r0, #36	; 0x24
   2aa64:	str	r0, [r4, #32]
   2aa68:	strh	r1, [r4, #130]	; 0x82
   2aa6c:	ldr	r0, [r4, #156]	; 0x9c
   2aa70:	sub	r0, r0, #1
   2aa74:	str	r0, [r4, #156]	; 0x9c
   2aa78:	mov	r0, r6
   2aa7c:	sub	sp, fp, #16
   2aa80:	pop	{r4, r5, r6, sl, fp, pc}
   2aa84:	ldr	r0, [pc, #24]	; 2aaa4 <flatcc_builder_end_buffer@@Base+0x130>
   2aa88:	ldr	r1, [pc, #24]	; 2aaa8 <flatcc_builder_end_buffer@@Base+0x134>
   2aa8c:	ldr	r3, [pc, #24]	; 2aaac <flatcc_builder_end_buffer@@Base+0x138>
   2aa90:	movw	r2, #838	; 0x346
   2aa94:	add	r0, pc, r0
   2aa98:	add	r1, pc, r1
   2aa9c:	add	r3, pc, r3
   2aaa0:	bl	12bbc <__assert_fail@plt>
   2aaa4:	andeq	r9, r0, r0, ror r5
   2aaa8:	andeq	r9, r0, r6, lsr #6
   2aaac:	muleq	r0, r4, r5

0002aab0 <flatcc_builder_start_struct@@Base>:
   2aab0:	push	{r4, r5, r6, r7, fp, lr}
   2aab4:	add	fp, sp, #16
   2aab8:	sub	sp, sp, #8
   2aabc:	mov	r6, r1
   2aac0:	mov	r1, r2
   2aac4:	mov	r4, r0
   2aac8:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2aacc:	mov	r5, #0
   2aad0:	cmp	r0, #0
   2aad4:	bne	2ab84 <flatcc_builder_start_struct@@Base+0xd4>
   2aad8:	ldr	r2, [r4, #32]
   2aadc:	mov	r0, #2
   2aae0:	mvn	r7, #3
   2aae4:	strh	r0, [r2, #14]
   2aae8:	ldr	r1, [r4, #28]
   2aaec:	ldr	r3, [r4, #64]	; 0x40
   2aaf0:	ldr	r0, [r4, #60]	; 0x3c
   2aaf4:	sub	r3, r3, r1
   2aaf8:	add	r0, r0, r1
   2aafc:	cmn	r3, #4
   2ab00:	str	r0, [r4, #16]
   2ab04:	movcs	r3, r7
   2ab08:	str	r3, [r4, #24]
   2ab0c:	str	r7, [r2, #4]
   2ab10:	ldr	r7, [r4, #20]
   2ab14:	add	r2, r7, r6
   2ab18:	cmp	r2, r3
   2ab1c:	str	r2, [r4, #20]
   2ab20:	bcc	2ab80 <flatcc_builder_start_struct@@Base+0xd0>
   2ab24:	ldr	r0, [r4, #40]	; 0x28
   2ab28:	ldr	r6, [r4, #48]	; 0x30
   2ab2c:	add	r1, r1, r2
   2ab30:	mov	r3, #1
   2ab34:	str	r3, [sp]
   2ab38:	add	r2, r1, #1
   2ab3c:	add	r1, r4, #60	; 0x3c
   2ab40:	mov	r3, #1
   2ab44:	blx	r6
   2ab48:	cmp	r0, #0
   2ab4c:	bne	2ab84 <flatcc_builder_start_struct@@Base+0xd4>
   2ab50:	ldr	r1, [r4, #28]
   2ab54:	ldr	r0, [r4, #60]	; 0x3c
   2ab58:	ldr	r3, [r4, #64]	; 0x40
   2ab5c:	ldr	r2, [r4, #32]
   2ab60:	add	r0, r0, r1
   2ab64:	sub	r1, r3, r1
   2ab68:	mvn	r3, #3
   2ab6c:	cmn	r1, #4
   2ab70:	str	r0, [r4, #16]
   2ab74:	movcs	r1, r3
   2ab78:	str	r1, [r4, #24]
   2ab7c:	str	r3, [r2, #4]
   2ab80:	add	r5, r0, r7
   2ab84:	mov	r0, r5
   2ab88:	sub	sp, fp, #16
   2ab8c:	pop	{r4, r5, r6, r7, fp, pc}

0002ab90 <flatcc_builder_struct_edit@@Base>:
   2ab90:	ldr	r0, [r0, #16]
   2ab94:	bx	lr

0002ab98 <flatcc_builder_end_struct@@Base>:
   2ab98:	push	{r4, r5, fp, lr}
   2ab9c:	add	fp, sp, #8
   2aba0:	mov	r4, r0
   2aba4:	ldr	r0, [r0, #32]
   2aba8:	ldrh	r0, [r0, #14]
   2abac:	cmp	r0, #2
   2abb0:	bne	2ac50 <flatcc_builder_end_struct@@Base+0xb8>
   2abb4:	ldrh	r3, [r4, #130]	; 0x82
   2abb8:	ldr	r1, [r4, #16]
   2abbc:	ldr	r2, [r4, #20]
   2abc0:	mov	r0, r4
   2abc4:	bl	2a624 <flatcc_builder_create_struct@@Base>
   2abc8:	mov	r5, r0
   2abcc:	cmp	r0, #0
   2abd0:	beq	2ac48 <flatcc_builder_end_struct@@Base+0xb0>
   2abd4:	ldr	r0, [r4, #16]
   2abd8:	ldr	r2, [r4, #20]
   2abdc:	mov	r1, #0
   2abe0:	bl	12b5c <memset@plt>
   2abe4:	ldr	r0, [r4, #32]
   2abe8:	ldr	r1, [r4, #60]	; 0x3c
   2abec:	ldr	ip, [r4, #64]	; 0x40
   2abf0:	ldr	r3, [r0, #8]
   2abf4:	str	r3, [r4, #20]
   2abf8:	ldr	r3, [r0]
   2abfc:	str	r3, [r4, #28]
   2ac00:	add	r1, r1, r3
   2ac04:	ldr	r2, [r0, #4]
   2ac08:	str	r1, [r4, #16]
   2ac0c:	sub	r1, ip, r3
   2ac10:	cmp	r1, r2
   2ac14:	movhi	r1, r2
   2ac18:	str	r1, [r4, #24]
   2ac1c:	ldrh	r1, [r4, #130]	; 0x82
   2ac20:	ldrh	r2, [r4, #128]	; 0x80
   2ac24:	cmp	r2, r1
   2ac28:	strhcc	r1, [r4, #128]	; 0x80
   2ac2c:	ldrh	r1, [r0, #12]
   2ac30:	sub	r0, r0, #36	; 0x24
   2ac34:	str	r0, [r4, #32]
   2ac38:	strh	r1, [r4, #130]	; 0x82
   2ac3c:	ldr	r0, [r4, #156]	; 0x9c
   2ac40:	sub	r0, r0, #1
   2ac44:	str	r0, [r4, #156]	; 0x9c
   2ac48:	mov	r0, r5
   2ac4c:	pop	{r4, r5, fp, pc}
   2ac50:	ldr	r0, [pc, #24]	; 2ac70 <flatcc_builder_end_struct@@Base+0xd8>
   2ac54:	ldr	r1, [pc, #24]	; 2ac74 <flatcc_builder_end_struct@@Base+0xdc>
   2ac58:	ldr	r3, [pc, #24]	; 2ac78 <flatcc_builder_end_struct@@Base+0xe0>
   2ac5c:	mov	r2, #872	; 0x368
   2ac60:	add	r0, pc, r0
   2ac64:	add	r1, pc, r1
   2ac68:	add	r3, pc, r3
   2ac6c:	bl	12bbc <__assert_fail@plt>
   2ac70:	andeq	r9, r0, r9, lsr #8
   2ac74:	andeq	r9, r0, sl, asr r1
   2ac78:	andeq	r9, r0, sp, asr #8

0002ac7c <flatcc_builder_extend_vector@@Base>:
   2ac7c:	push	{r4, r5, fp, lr}
   2ac80:	add	fp, sp, #8
   2ac84:	sub	sp, sp, #8
   2ac88:	mov	r4, r0
   2ac8c:	ldr	r0, [r0, #32]
   2ac90:	ldr	r2, [r0, #20]
   2ac94:	adds	r2, r2, r1
   2ac98:	bcs	2ad50 <flatcc_builder_extend_vector@@Base+0xd4>
   2ac9c:	ldr	r3, [r0, #24]
   2aca0:	cmp	r2, r3
   2aca4:	bhi	2ad50 <flatcc_builder_extend_vector@@Base+0xd4>
   2aca8:	str	r2, [r0, #20]
   2acac:	ldr	r2, [r4, #32]
   2acb0:	ldr	r5, [r4, #20]
   2acb4:	ldr	r0, [r4, #24]
   2acb8:	ldr	r2, [r2, #16]
   2acbc:	mla	r1, r2, r1, r5
   2acc0:	cmp	r1, r0
   2acc4:	str	r1, [r4, #20]
   2acc8:	bcs	2acd4 <flatcc_builder_extend_vector@@Base+0x58>
   2accc:	ldr	r0, [r4, #16]
   2acd0:	b	2ad44 <flatcc_builder_extend_vector@@Base+0xc8>
   2acd4:	ldr	r2, [r4, #28]
   2acd8:	ldr	r0, [r4, #40]	; 0x28
   2acdc:	ldr	ip, [r4, #48]	; 0x30
   2ace0:	mov	r3, #1
   2ace4:	str	r3, [sp]
   2ace8:	mov	r3, #1
   2acec:	add	r1, r1, r2
   2acf0:	add	r2, r1, #1
   2acf4:	add	r1, r4, #60	; 0x3c
   2acf8:	blx	ip
   2acfc:	mov	r1, r0
   2ad00:	mov	r0, #0
   2ad04:	cmp	r1, #0
   2ad08:	beq	2ad14 <flatcc_builder_extend_vector@@Base+0x98>
   2ad0c:	sub	sp, fp, #8
   2ad10:	pop	{r4, r5, fp, pc}
   2ad14:	ldr	r1, [r4, #28]
   2ad18:	ldr	r0, [r4, #60]	; 0x3c
   2ad1c:	ldr	r3, [r4, #64]	; 0x40
   2ad20:	ldr	r2, [r4, #32]
   2ad24:	add	r0, r0, r1
   2ad28:	sub	r1, r3, r1
   2ad2c:	mvn	r3, #3
   2ad30:	cmn	r1, #4
   2ad34:	str	r0, [r4, #16]
   2ad38:	movcs	r1, r3
   2ad3c:	str	r1, [r4, #24]
   2ad40:	str	r3, [r2, #4]
   2ad44:	add	r0, r0, r5
   2ad48:	sub	sp, fp, #8
   2ad4c:	pop	{r4, r5, fp, pc}
   2ad50:	ldr	r0, [pc, #24]	; 2ad70 <flatcc_builder_extend_vector@@Base+0xf4>
   2ad54:	ldr	r1, [pc, #24]	; 2ad74 <flatcc_builder_extend_vector@@Base+0xf8>
   2ad58:	ldr	r3, [pc, #24]	; 2ad78 <flatcc_builder_extend_vector@@Base+0xfc>
   2ad5c:	mov	r2, #892	; 0x37c
   2ad60:	add	r0, pc, r0
   2ad64:	add	r1, pc, r1
   2ad68:	add	r3, pc, r3
   2ad6c:	bl	12bbc <__assert_fail@plt>
   2ad70:	andeq	sl, r0, r4, lsr #2
   2ad74:	andeq	r9, r0, sl, asr r0
   2ad78:	andeq	sl, r0, r7, lsr r1

0002ad7c <flatcc_builder_vector_push@@Base>:
   2ad7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ad80:	add	fp, sp, #24
   2ad84:	sub	sp, sp, #8
   2ad88:	mov	r5, r0
   2ad8c:	ldr	r0, [r0, #32]
   2ad90:	mov	r8, r1
   2ad94:	ldrh	r1, [r0, #14]
   2ad98:	cmp	r1, #4
   2ad9c:	bne	2ae74 <flatcc_builder_vector_push@@Base+0xf8>
   2ada0:	ldr	r1, [r0, #20]
   2ada4:	ldr	r2, [r0, #24]
   2ada8:	cmp	r1, r2
   2adac:	bhi	2ae94 <flatcc_builder_vector_push@@Base+0x118>
   2adb0:	add	r1, r1, #1
   2adb4:	str	r1, [r0, #20]
   2adb8:	ldr	r1, [r5, #32]
   2adbc:	ldr	r4, [r5, #20]
   2adc0:	ldr	r0, [r5, #24]
   2adc4:	ldr	r6, [r1, #16]
   2adc8:	add	r1, r4, r6
   2adcc:	cmp	r1, r0
   2add0:	str	r1, [r5, #20]
   2add4:	bcs	2adf8 <flatcc_builder_vector_push@@Base+0x7c>
   2add8:	ldr	r0, [r5, #16]
   2addc:	adds	r7, r0, r4
   2ade0:	beq	2ae64 <flatcc_builder_vector_push@@Base+0xe8>
   2ade4:	mov	r0, r7
   2ade8:	mov	r1, r8
   2adec:	mov	r2, r6
   2adf0:	bl	12aa8 <memcpy@plt>
   2adf4:	b	2ae68 <flatcc_builder_vector_push@@Base+0xec>
   2adf8:	ldr	r2, [r5, #28]
   2adfc:	ldr	r0, [r5, #40]	; 0x28
   2ae00:	ldr	r7, [r5, #48]	; 0x30
   2ae04:	mov	r3, #1
   2ae08:	str	r3, [sp]
   2ae0c:	mov	r3, #1
   2ae10:	add	r1, r1, r2
   2ae14:	add	r2, r1, #1
   2ae18:	add	r1, r5, #60	; 0x3c
   2ae1c:	blx	r7
   2ae20:	mov	r7, #0
   2ae24:	cmp	r0, #0
   2ae28:	bne	2ae68 <flatcc_builder_vector_push@@Base+0xec>
   2ae2c:	ldr	r1, [r5, #28]
   2ae30:	ldr	r0, [r5, #60]	; 0x3c
   2ae34:	ldr	r3, [r5, #64]	; 0x40
   2ae38:	ldr	r2, [r5, #32]
   2ae3c:	add	r0, r0, r1
   2ae40:	sub	r1, r3, r1
   2ae44:	mvn	r3, #3
   2ae48:	cmn	r1, #4
   2ae4c:	str	r0, [r5, #16]
   2ae50:	movcs	r1, r3
   2ae54:	str	r1, [r5, #24]
   2ae58:	str	r3, [r2, #4]
   2ae5c:	adds	r7, r0, r4
   2ae60:	bne	2ade4 <flatcc_builder_vector_push@@Base+0x68>
   2ae64:	mov	r7, #0
   2ae68:	mov	r0, r7
   2ae6c:	sub	sp, fp, #24
   2ae70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ae74:	ldr	r0, [pc, #56]	; 2aeb4 <flatcc_builder_vector_push@@Base+0x138>
   2ae78:	ldr	r1, [pc, #56]	; 2aeb8 <flatcc_builder_vector_push@@Base+0x13c>
   2ae7c:	ldr	r3, [pc, #56]	; 2aebc <flatcc_builder_vector_push@@Base+0x140>
   2ae80:	movw	r2, #907	; 0x38b
   2ae84:	add	r0, pc, r0
   2ae88:	add	r1, pc, r1
   2ae8c:	add	r3, pc, r3
   2ae90:	bl	12bbc <__assert_fail@plt>
   2ae94:	ldr	r0, [pc, #36]	; 2aec0 <flatcc_builder_vector_push@@Base+0x144>
   2ae98:	ldr	r1, [pc, #36]	; 2aec4 <flatcc_builder_vector_push@@Base+0x148>
   2ae9c:	ldr	r3, [pc, #36]	; 2aec8 <flatcc_builder_vector_push@@Base+0x14c>
   2aea0:	mov	r2, #908	; 0x38c
   2aea4:	add	r0, pc, r0
   2aea8:	add	r1, pc, r1
   2aeac:	add	r3, pc, r3
   2aeb0:	bl	12bbc <__assert_fail@plt>
   2aeb4:	andeq	r9, r0, r4, ror r2
   2aeb8:	andeq	r8, r0, r6, lsr pc
   2aebc:	muleq	r0, r8, r2
   2aec0:	andeq	r9, r0, r3, asr #5
   2aec4:	andeq	r8, r0, r6, lsl pc
   2aec8:	andeq	r9, r0, r8, ror r2

0002aecc <flatcc_builder_append_vector@@Base>:
   2aecc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2aed0:	add	fp, sp, #24
   2aed4:	sub	sp, sp, #8
   2aed8:	mov	r6, r0
   2aedc:	ldr	r0, [r0, #32]
   2aee0:	mov	r8, r1
   2aee4:	ldrh	r1, [r0, #14]
   2aee8:	cmp	r1, #4
   2aeec:	bne	2afec <flatcc_builder_append_vector@@Base+0x120>
   2aef0:	ldr	r1, [r0, #20]
   2aef4:	mov	r5, r2
   2aef8:	adds	r1, r1, r2
   2aefc:	bcs	2afcc <flatcc_builder_append_vector@@Base+0x100>
   2af00:	ldr	r2, [r0, #24]
   2af04:	cmp	r1, r2
   2af08:	bhi	2afcc <flatcc_builder_append_vector@@Base+0x100>
   2af0c:	str	r1, [r0, #20]
   2af10:	ldr	r1, [r6, #32]
   2af14:	ldr	r4, [r6, #20]
   2af18:	ldr	r0, [r6, #24]
   2af1c:	ldr	r9, [r1, #16]
   2af20:	mla	r1, r9, r5, r4
   2af24:	cmp	r1, r0
   2af28:	str	r1, [r6, #20]
   2af2c:	bcs	2af50 <flatcc_builder_append_vector@@Base+0x84>
   2af30:	ldr	r0, [r6, #16]
   2af34:	adds	r7, r0, r4
   2af38:	beq	2afbc <flatcc_builder_append_vector@@Base+0xf0>
   2af3c:	mul	r2, r9, r5
   2af40:	mov	r0, r7
   2af44:	mov	r1, r8
   2af48:	bl	12aa8 <memcpy@plt>
   2af4c:	b	2afc0 <flatcc_builder_append_vector@@Base+0xf4>
   2af50:	ldr	r2, [r6, #28]
   2af54:	ldr	r0, [r6, #40]	; 0x28
   2af58:	ldr	r7, [r6, #48]	; 0x30
   2af5c:	mov	r3, #1
   2af60:	str	r3, [sp]
   2af64:	mov	r3, #1
   2af68:	add	r1, r1, r2
   2af6c:	add	r2, r1, #1
   2af70:	add	r1, r6, #60	; 0x3c
   2af74:	blx	r7
   2af78:	mov	r7, #0
   2af7c:	cmp	r0, #0
   2af80:	bne	2afc0 <flatcc_builder_append_vector@@Base+0xf4>
   2af84:	ldr	r1, [r6, #28]
   2af88:	ldr	r0, [r6, #60]	; 0x3c
   2af8c:	ldr	r3, [r6, #64]	; 0x40
   2af90:	ldr	r2, [r6, #32]
   2af94:	add	r0, r0, r1
   2af98:	sub	r1, r3, r1
   2af9c:	mvn	r3, #3
   2afa0:	cmn	r1, #4
   2afa4:	str	r0, [r6, #16]
   2afa8:	movcs	r1, r3
   2afac:	str	r1, [r6, #24]
   2afb0:	str	r3, [r2, #4]
   2afb4:	adds	r7, r0, r4
   2afb8:	bne	2af3c <flatcc_builder_append_vector@@Base+0x70>
   2afbc:	mov	r7, #0
   2afc0:	mov	r0, r7
   2afc4:	sub	sp, fp, #24
   2afc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2afcc:	ldr	r0, [pc, #68]	; 2b018 <flatcc_builder_append_vector@@Base+0x14c>
   2afd0:	ldr	r1, [pc, #68]	; 2b01c <flatcc_builder_append_vector@@Base+0x150>
   2afd4:	ldr	r3, [pc, #68]	; 2b020 <flatcc_builder_append_vector@@Base+0x154>
   2afd8:	mov	r2, #892	; 0x37c
   2afdc:	add	r0, pc, r0
   2afe0:	add	r1, pc, r1
   2afe4:	add	r3, pc, r3
   2afe8:	bl	12bbc <__assert_fail@plt>
   2afec:	ldr	r0, [pc, #24]	; 2b00c <flatcc_builder_append_vector@@Base+0x140>
   2aff0:	ldr	r1, [pc, #24]	; 2b010 <flatcc_builder_append_vector@@Base+0x144>
   2aff4:	ldr	r3, [pc, #24]	; 2b014 <flatcc_builder_append_vector@@Base+0x148>
   2aff8:	movw	r2, #915	; 0x393
   2affc:	add	r0, pc, r0
   2b000:	add	r1, pc, r1
   2b004:	add	r3, pc, r3
   2b008:	bl	12bbc <__assert_fail@plt>
   2b00c:	strdeq	r9, [r0], -ip
   2b010:			; <UNDEFINED> instruction: 0x00008dbe
   2b014:	andeq	r9, r0, r0, lsr #3
   2b018:	andeq	r9, r0, r8, lsr #29
   2b01c:	ldrdeq	r8, [r0], -lr
   2b020:			; <UNDEFINED> instruction: 0x00009ebb

0002b024 <flatcc_builder_extend_offset_vector@@Base>:
   2b024:	push	{r4, r5, fp, lr}
   2b028:	add	fp, sp, #8
   2b02c:	sub	sp, sp, #8
   2b030:	mov	r4, r0
   2b034:	ldr	r0, [r0, #32]
   2b038:	ldr	r2, [r0, #20]
   2b03c:	adds	r2, r2, r1
   2b040:	cmpcc	r2, #1073741824	; 0x40000000
   2b044:	bcc	2b068 <flatcc_builder_extend_offset_vector@@Base+0x44>
   2b048:	ldr	r0, [pc, #184]	; 2b108 <flatcc_builder_extend_offset_vector@@Base+0xe4>
   2b04c:	ldr	r1, [pc, #184]	; 2b10c <flatcc_builder_extend_offset_vector@@Base+0xe8>
   2b050:	ldr	r3, [pc, #184]	; 2b110 <flatcc_builder_extend_offset_vector@@Base+0xec>
   2b054:	mov	r2, #892	; 0x37c
   2b058:	add	r0, pc, r0
   2b05c:	add	r1, pc, r1
   2b060:	add	r3, pc, r3
   2b064:	bl	12bbc <__assert_fail@plt>
   2b068:	str	r2, [r0, #20]
   2b06c:	ldr	r5, [r4, #20]
   2b070:	ldr	r0, [r4, #24]
   2b074:	add	r1, r5, r1, lsl #2
   2b078:	cmp	r1, r0
   2b07c:	str	r1, [r4, #20]
   2b080:	bcs	2b08c <flatcc_builder_extend_offset_vector@@Base+0x68>
   2b084:	ldr	r0, [r4, #16]
   2b088:	b	2b0fc <flatcc_builder_extend_offset_vector@@Base+0xd8>
   2b08c:	ldr	r2, [r4, #28]
   2b090:	ldr	r0, [r4, #40]	; 0x28
   2b094:	ldr	ip, [r4, #48]	; 0x30
   2b098:	mov	r3, #1
   2b09c:	str	r3, [sp]
   2b0a0:	mov	r3, #1
   2b0a4:	add	r1, r1, r2
   2b0a8:	add	r2, r1, #1
   2b0ac:	add	r1, r4, #60	; 0x3c
   2b0b0:	blx	ip
   2b0b4:	mov	r1, r0
   2b0b8:	mov	r0, #0
   2b0bc:	cmp	r1, #0
   2b0c0:	beq	2b0cc <flatcc_builder_extend_offset_vector@@Base+0xa8>
   2b0c4:	sub	sp, fp, #8
   2b0c8:	pop	{r4, r5, fp, pc}
   2b0cc:	ldr	r1, [r4, #28]
   2b0d0:	ldr	r0, [r4, #60]	; 0x3c
   2b0d4:	ldr	r3, [r4, #64]	; 0x40
   2b0d8:	ldr	r2, [r4, #32]
   2b0dc:	add	r0, r0, r1
   2b0e0:	sub	r1, r3, r1
   2b0e4:	mvn	r3, #3
   2b0e8:	cmn	r1, #4
   2b0ec:	str	r0, [r4, #16]
   2b0f0:	movcs	r1, r3
   2b0f4:	str	r1, [r4, #24]
   2b0f8:	str	r3, [r2, #4]
   2b0fc:	add	r0, r0, r5
   2b100:	sub	sp, fp, #8
   2b104:	pop	{r4, r5, fp, pc}
   2b108:	andeq	r9, r0, ip, lsr #28
   2b10c:	andeq	r8, r0, r2, ror #26
   2b110:	andeq	r9, r0, pc, lsr lr

0002b114 <flatcc_builder_offset_vector_push@@Base>:
   2b114:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b118:	add	fp, sp, #24
   2b11c:	sub	sp, sp, #8
   2b120:	mov	r6, r0
   2b124:	ldr	r0, [r0, #32]
   2b128:	mov	r8, r1
   2b12c:	ldrh	r1, [r0, #14]
   2b130:	cmp	r1, #5
   2b134:	bne	2b1e8 <flatcc_builder_offset_vector_push@@Base+0xd4>
   2b138:	ldr	r1, [r0, #20]
   2b13c:	mov	r5, #0
   2b140:	cmn	r1, #-1073741823	; 0xc0000001
   2b144:	beq	2b1dc <flatcc_builder_offset_vector_push@@Base+0xc8>
   2b148:	add	r1, r1, #1
   2b14c:	str	r1, [r0, #20]
   2b150:	ldr	r7, [r6, #20]
   2b154:	ldr	r0, [r6, #24]
   2b158:	add	r1, r7, #4
   2b15c:	cmp	r1, r0
   2b160:	str	r1, [r6, #20]
   2b164:	bcs	2b170 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2b168:	ldr	r0, [r6, #16]
   2b16c:	b	2b1d0 <flatcc_builder_offset_vector_push@@Base+0xbc>
   2b170:	ldr	r1, [r6, #28]
   2b174:	ldr	r0, [r6, #40]	; 0x28
   2b178:	ldr	r4, [r6, #48]	; 0x30
   2b17c:	mov	r2, #1
   2b180:	mov	r3, #1
   2b184:	str	r2, [sp]
   2b188:	add	r1, r7, r1
   2b18c:	add	r2, r1, #5
   2b190:	add	r1, r6, #60	; 0x3c
   2b194:	blx	r4
   2b198:	cmp	r0, #0
   2b19c:	bne	2b1dc <flatcc_builder_offset_vector_push@@Base+0xc8>
   2b1a0:	ldr	r1, [r6, #28]
   2b1a4:	ldr	r0, [r6, #60]	; 0x3c
   2b1a8:	ldr	r3, [r6, #64]	; 0x40
   2b1ac:	ldr	r2, [r6, #32]
   2b1b0:	add	r0, r0, r1
   2b1b4:	sub	r1, r3, r1
   2b1b8:	mvn	r3, #3
   2b1bc:	cmn	r1, #4
   2b1c0:	str	r0, [r6, #16]
   2b1c4:	movcs	r1, r3
   2b1c8:	str	r1, [r6, #24]
   2b1cc:	str	r3, [r2, #4]
   2b1d0:	adds	r0, r0, r7
   2b1d4:	movne	r5, r0
   2b1d8:	strne	r8, [r0]
   2b1dc:	mov	r0, r5
   2b1e0:	sub	sp, fp, #24
   2b1e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b1e8:	ldr	r0, [pc, #24]	; 2b208 <flatcc_builder_offset_vector_push@@Base+0xf4>
   2b1ec:	ldr	r1, [pc, #24]	; 2b20c <flatcc_builder_offset_vector_push@@Base+0xf8>
   2b1f0:	ldr	r3, [pc, #24]	; 2b210 <flatcc_builder_offset_vector_push@@Base+0xfc>
   2b1f4:	movw	r2, #934	; 0x3a6
   2b1f8:	add	r0, pc, r0
   2b1fc:	add	r1, pc, r1
   2b200:	add	r3, pc, r3
   2b204:	bl	12bbc <__assert_fail@plt>
   2b208:	strdeq	r8, [r0], -r9
   2b20c:	andeq	r8, r0, r2, asr #23
   2b210:	andeq	r9, r0, r4, lsr #32

0002b214 <flatcc_builder_append_offset_vector@@Base>:
   2b214:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b218:	add	fp, sp, #24
   2b21c:	sub	sp, sp, #8
   2b220:	mov	r6, r0
   2b224:	ldr	r0, [r0, #32]
   2b228:	mov	r8, r1
   2b22c:	ldrh	r1, [r0, #14]
   2b230:	cmp	r1, #5
   2b234:	bne	2b324 <flatcc_builder_append_offset_vector@@Base+0x110>
   2b238:	ldr	r1, [r0, #20]
   2b23c:	mov	r5, r2
   2b240:	adds	r1, r1, r2
   2b244:	cmpcc	r1, #1073741824	; 0x40000000
   2b248:	bcc	2b26c <flatcc_builder_append_offset_vector@@Base+0x58>
   2b24c:	ldr	r0, [pc, #252]	; 2b350 <flatcc_builder_append_offset_vector@@Base+0x13c>
   2b250:	ldr	r1, [pc, #252]	; 2b354 <flatcc_builder_append_offset_vector@@Base+0x140>
   2b254:	ldr	r3, [pc, #252]	; 2b358 <flatcc_builder_append_offset_vector@@Base+0x144>
   2b258:	mov	r2, #892	; 0x37c
   2b25c:	add	r0, pc, r0
   2b260:	add	r1, pc, r1
   2b264:	add	r3, pc, r3
   2b268:	bl	12bbc <__assert_fail@plt>
   2b26c:	str	r1, [r0, #20]
   2b270:	ldr	r4, [r6, #20]
   2b274:	ldr	r0, [r6, #24]
   2b278:	add	r1, r4, r5, lsl #2
   2b27c:	cmp	r1, r0
   2b280:	str	r1, [r6, #20]
   2b284:	bcs	2b2a8 <flatcc_builder_append_offset_vector@@Base+0x94>
   2b288:	ldr	r0, [r6, #16]
   2b28c:	adds	r7, r0, r4
   2b290:	beq	2b314 <flatcc_builder_append_offset_vector@@Base+0x100>
   2b294:	lsl	r2, r5, #2
   2b298:	mov	r0, r7
   2b29c:	mov	r1, r8
   2b2a0:	bl	12aa8 <memcpy@plt>
   2b2a4:	b	2b318 <flatcc_builder_append_offset_vector@@Base+0x104>
   2b2a8:	ldr	r2, [r6, #28]
   2b2ac:	ldr	r0, [r6, #40]	; 0x28
   2b2b0:	ldr	r7, [r6, #48]	; 0x30
   2b2b4:	mov	r3, #1
   2b2b8:	str	r3, [sp]
   2b2bc:	mov	r3, #1
   2b2c0:	add	r1, r1, r2
   2b2c4:	add	r2, r1, #1
   2b2c8:	add	r1, r6, #60	; 0x3c
   2b2cc:	blx	r7
   2b2d0:	mov	r7, #0
   2b2d4:	cmp	r0, #0
   2b2d8:	bne	2b318 <flatcc_builder_append_offset_vector@@Base+0x104>
   2b2dc:	ldr	r1, [r6, #28]
   2b2e0:	ldr	r0, [r6, #60]	; 0x3c
   2b2e4:	ldr	r3, [r6, #64]	; 0x40
   2b2e8:	ldr	r2, [r6, #32]
   2b2ec:	add	r0, r0, r1
   2b2f0:	sub	r1, r3, r1
   2b2f4:	mvn	r3, #3
   2b2f8:	cmn	r1, #4
   2b2fc:	str	r0, [r6, #16]
   2b300:	movcs	r1, r3
   2b304:	str	r1, [r6, #24]
   2b308:	str	r3, [r2, #4]
   2b30c:	adds	r7, r0, r4
   2b310:	bne	2b294 <flatcc_builder_append_offset_vector@@Base+0x80>
   2b314:	mov	r7, #0
   2b318:	mov	r0, r7
   2b31c:	sub	sp, fp, #24
   2b320:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b324:	ldr	r0, [pc, #24]	; 2b344 <flatcc_builder_append_offset_vector@@Base+0x130>
   2b328:	ldr	r1, [pc, #24]	; 2b348 <flatcc_builder_append_offset_vector@@Base+0x134>
   2b32c:	ldr	r3, [pc, #24]	; 2b34c <flatcc_builder_append_offset_vector@@Base+0x138>
   2b330:	mov	r2, #948	; 0x3b4
   2b334:	add	r0, pc, r0
   2b338:	add	r1, pc, r1
   2b33c:	add	r3, pc, r3
   2b340:	bl	12bbc <__assert_fail@plt>
   2b344:			; <UNDEFINED> instruction: 0x00008ebd
   2b348:	andeq	r8, r0, r6, lsl #21
   2b34c:	andeq	r8, r0, sl, asr #30
   2b350:	andeq	r9, r0, r8, lsr #24
   2b354:	andeq	r8, r0, lr, asr fp
   2b358:	andeq	r9, r0, fp, lsr ip

0002b35c <flatcc_builder_extend_string@@Base>:
   2b35c:	push	{r4, r5, fp, lr}
   2b360:	add	fp, sp, #8
   2b364:	sub	sp, sp, #8
   2b368:	mov	r4, r0
   2b36c:	ldr	r0, [r0, #32]
   2b370:	ldrh	r2, [r0, #14]
   2b374:	cmp	r2, #6
   2b378:	bne	2b428 <flatcc_builder_extend_string@@Base+0xcc>
   2b37c:	ldr	r2, [r0, #20]
   2b380:	adds	r2, r2, r1
   2b384:	bcs	2b448 <flatcc_builder_extend_string@@Base+0xec>
   2b388:	str	r2, [r0, #20]
   2b38c:	ldr	r5, [r4, #20]
   2b390:	ldr	r0, [r4, #24]
   2b394:	add	r1, r5, r1
   2b398:	cmp	r1, r0
   2b39c:	str	r1, [r4, #20]
   2b3a0:	bcs	2b3ac <flatcc_builder_extend_string@@Base+0x50>
   2b3a4:	ldr	r0, [r4, #16]
   2b3a8:	b	2b41c <flatcc_builder_extend_string@@Base+0xc0>
   2b3ac:	ldr	r2, [r4, #28]
   2b3b0:	ldr	r0, [r4, #40]	; 0x28
   2b3b4:	ldr	ip, [r4, #48]	; 0x30
   2b3b8:	mov	r3, #1
   2b3bc:	str	r3, [sp]
   2b3c0:	mov	r3, #1
   2b3c4:	add	r1, r1, r2
   2b3c8:	add	r2, r1, #1
   2b3cc:	add	r1, r4, #60	; 0x3c
   2b3d0:	blx	ip
   2b3d4:	mov	r1, r0
   2b3d8:	mov	r0, #0
   2b3dc:	cmp	r1, #0
   2b3e0:	beq	2b3ec <flatcc_builder_extend_string@@Base+0x90>
   2b3e4:	sub	sp, fp, #8
   2b3e8:	pop	{r4, r5, fp, pc}
   2b3ec:	ldr	r1, [r4, #28]
   2b3f0:	ldr	r0, [r4, #60]	; 0x3c
   2b3f4:	ldr	r3, [r4, #64]	; 0x40
   2b3f8:	ldr	r2, [r4, #32]
   2b3fc:	add	r0, r0, r1
   2b400:	sub	r1, r3, r1
   2b404:	mvn	r3, #3
   2b408:	cmn	r1, #4
   2b40c:	str	r0, [r4, #16]
   2b410:	movcs	r1, r3
   2b414:	str	r1, [r4, #24]
   2b418:	str	r3, [r2, #4]
   2b41c:	add	r0, r0, r5
   2b420:	sub	sp, fp, #8
   2b424:	pop	{r4, r5, fp, pc}
   2b428:	ldr	r0, [pc, #56]	; 2b468 <flatcc_builder_extend_string@@Base+0x10c>
   2b42c:	ldr	r1, [pc, #56]	; 2b46c <flatcc_builder_extend_string@@Base+0x110>
   2b430:	ldr	r3, [pc, #56]	; 2b470 <flatcc_builder_extend_string@@Base+0x114>
   2b434:	movw	r2, #957	; 0x3bd
   2b438:	add	r0, pc, r0
   2b43c:	add	r1, pc, r1
   2b440:	add	r3, pc, r3
   2b444:	bl	12bbc <__assert_fail@plt>
   2b448:	ldr	r0, [pc, #36]	; 2b474 <flatcc_builder_extend_string@@Base+0x118>
   2b44c:	ldr	r1, [pc, #36]	; 2b478 <flatcc_builder_extend_string@@Base+0x11c>
   2b450:	ldr	r3, [pc, #36]	; 2b47c <flatcc_builder_extend_string@@Base+0x120>
   2b454:	mov	r2, #892	; 0x37c
   2b458:	add	r0, pc, r0
   2b45c:	add	r1, pc, r1
   2b460:	add	r3, pc, r3
   2b464:	bl	12bbc <__assert_fail@plt>
   2b468:	andeq	r8, r0, r2, asr #29
   2b46c:	andeq	r8, r0, r2, lsl #19
   2b470:	andeq	r8, r0, r6, ror #29
   2b474:	andeq	r9, r0, ip, lsr #20
   2b478:	andeq	r8, r0, r2, ror #18
   2b47c:	andeq	r9, r0, pc, lsr sl

0002b480 <flatcc_builder_append_string@@Base>:
   2b480:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b484:	add	fp, sp, #24
   2b488:	sub	sp, sp, #8
   2b48c:	mov	r6, r0
   2b490:	ldr	r0, [r0, #32]
   2b494:	mov	r8, r1
   2b498:	ldrh	r1, [r0, #14]
   2b49c:	cmp	r1, #6
   2b4a0:	bne	2b56c <flatcc_builder_append_string@@Base+0xec>
   2b4a4:	ldr	r1, [r0, #20]
   2b4a8:	mov	r4, r2
   2b4ac:	adds	r1, r1, r2
   2b4b0:	bcs	2b58c <flatcc_builder_append_string@@Base+0x10c>
   2b4b4:	str	r1, [r0, #20]
   2b4b8:	ldr	r5, [r6, #20]
   2b4bc:	ldr	r0, [r6, #24]
   2b4c0:	add	r1, r5, r4
   2b4c4:	cmp	r1, r0
   2b4c8:	str	r1, [r6, #20]
   2b4cc:	bcs	2b4f0 <flatcc_builder_append_string@@Base+0x70>
   2b4d0:	ldr	r0, [r6, #16]
   2b4d4:	adds	r7, r0, r5
   2b4d8:	beq	2b55c <flatcc_builder_append_string@@Base+0xdc>
   2b4dc:	mov	r0, r7
   2b4e0:	mov	r1, r8
   2b4e4:	mov	r2, r4
   2b4e8:	bl	12aa8 <memcpy@plt>
   2b4ec:	b	2b560 <flatcc_builder_append_string@@Base+0xe0>
   2b4f0:	ldr	r2, [r6, #28]
   2b4f4:	ldr	r0, [r6, #40]	; 0x28
   2b4f8:	ldr	r7, [r6, #48]	; 0x30
   2b4fc:	mov	r3, #1
   2b500:	str	r3, [sp]
   2b504:	mov	r3, #1
   2b508:	add	r1, r1, r2
   2b50c:	add	r2, r1, #1
   2b510:	add	r1, r6, #60	; 0x3c
   2b514:	blx	r7
   2b518:	mov	r7, #0
   2b51c:	cmp	r0, #0
   2b520:	bne	2b560 <flatcc_builder_append_string@@Base+0xe0>
   2b524:	ldr	r1, [r6, #28]
   2b528:	ldr	r0, [r6, #60]	; 0x3c
   2b52c:	ldr	r3, [r6, #64]	; 0x40
   2b530:	ldr	r2, [r6, #32]
   2b534:	add	r0, r0, r1
   2b538:	sub	r1, r3, r1
   2b53c:	mvn	r3, #3
   2b540:	cmn	r1, #4
   2b544:	str	r0, [r6, #16]
   2b548:	movcs	r1, r3
   2b54c:	str	r1, [r6, #24]
   2b550:	str	r3, [r2, #4]
   2b554:	adds	r7, r0, r5
   2b558:	bne	2b4dc <flatcc_builder_append_string@@Base+0x5c>
   2b55c:	mov	r7, #0
   2b560:	mov	r0, r7
   2b564:	sub	sp, fp, #24
   2b568:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b56c:	ldr	r0, [pc, #56]	; 2b5ac <flatcc_builder_append_string@@Base+0x12c>
   2b570:	ldr	r1, [pc, #56]	; 2b5b0 <flatcc_builder_append_string@@Base+0x130>
   2b574:	ldr	r3, [pc, #56]	; 2b5b4 <flatcc_builder_append_string@@Base+0x134>
   2b578:	movw	r2, #966	; 0x3c6
   2b57c:	add	r0, pc, r0
   2b580:	add	r1, pc, r1
   2b584:	add	r3, pc, r3
   2b588:	bl	12bbc <__assert_fail@plt>
   2b58c:	ldr	r0, [pc, #36]	; 2b5b8 <flatcc_builder_append_string@@Base+0x138>
   2b590:	ldr	r1, [pc, #36]	; 2b5bc <flatcc_builder_append_string@@Base+0x13c>
   2b594:	ldr	r3, [pc, #36]	; 2b5c0 <flatcc_builder_append_string@@Base+0x140>
   2b598:	mov	r2, #892	; 0x37c
   2b59c:	add	r0, pc, r0
   2b5a0:	add	r1, pc, r1
   2b5a4:	add	r3, pc, r3
   2b5a8:	bl	12bbc <__assert_fail@plt>
   2b5ac:	andeq	r8, r0, lr, ror sp
   2b5b0:	andeq	r8, r0, lr, lsr r8
   2b5b4:	andeq	r8, r0, r1, ror #27
   2b5b8:	andeq	r9, r0, r8, ror #17
   2b5bc:	andeq	r8, r0, lr, lsl r8
   2b5c0:	strdeq	r9, [r0], -fp

0002b5c4 <flatcc_builder_append_string_str@@Base>:
   2b5c4:	push	{r4, r5, fp, lr}
   2b5c8:	add	fp, sp, #8
   2b5cc:	mov	r5, r0
   2b5d0:	mov	r0, r1
   2b5d4:	mov	r4, r1
   2b5d8:	bl	12b38 <strlen@plt>
   2b5dc:	mov	r2, r0
   2b5e0:	mov	r0, r5
   2b5e4:	mov	r1, r4
   2b5e8:	pop	{r4, r5, fp, lr}
   2b5ec:	b	2b480 <flatcc_builder_append_string@@Base>

0002b5f0 <flatcc_builder_append_string_strn@@Base>:
   2b5f0:	push	{r4, r5, r6, sl, fp, lr}
   2b5f4:	add	fp, sp, #16
   2b5f8:	mov	r6, r0
   2b5fc:	mov	r5, r1
   2b600:	mov	r0, r1
   2b604:	mov	r1, #0
   2b608:	mov	r4, r2
   2b60c:	bl	12b74 <memchr@plt>
   2b610:	cmp	r0, #0
   2b614:	mov	r1, r5
   2b618:	subne	r4, r0, r5
   2b61c:	mov	r0, r6
   2b620:	mov	r2, r4
   2b624:	pop	{r4, r5, r6, sl, fp, lr}
   2b628:	b	2b480 <flatcc_builder_append_string@@Base>

0002b62c <flatcc_builder_truncate_vector@@Base>:
   2b62c:	push	{fp, lr}
   2b630:	mov	fp, sp
   2b634:	ldr	r2, [r0, #32]
   2b638:	ldrh	r3, [r2, #14]
   2b63c:	cmp	r3, #4
   2b640:	bne	2b688 <flatcc_builder_truncate_vector@@Base+0x5c>
   2b644:	ldr	r3, [r2, #20]
   2b648:	cmp	r3, r1
   2b64c:	bcc	2b6a8 <flatcc_builder_truncate_vector@@Base+0x7c>
   2b650:	sub	r3, r3, r1
   2b654:	str	r3, [r2, #20]
   2b658:	ldr	r2, [r0, #32]
   2b65c:	ldr	r3, [r0, #20]
   2b660:	ldr	ip, [r0, #16]
   2b664:	ldr	r2, [r2, #16]
   2b668:	mls	r3, r2, r1, r3
   2b66c:	mul	r2, r2, r1
   2b670:	mov	r1, #0
   2b674:	str	r3, [r0, #20]
   2b678:	add	r0, ip, r3
   2b67c:	bl	12b5c <memset@plt>
   2b680:	mov	r0, #0
   2b684:	pop	{fp, pc}
   2b688:	ldr	r0, [pc, #56]	; 2b6c8 <flatcc_builder_truncate_vector@@Base+0x9c>
   2b68c:	ldr	r1, [pc, #56]	; 2b6cc <flatcc_builder_truncate_vector@@Base+0xa0>
   2b690:	ldr	r3, [pc, #56]	; 2b6d0 <flatcc_builder_truncate_vector@@Base+0xa4>
   2b694:	movw	r2, #985	; 0x3d9
   2b698:	add	r0, pc, r0
   2b69c:	add	r1, pc, r1
   2b6a0:	add	r3, pc, r3
   2b6a4:	bl	12bbc <__assert_fail@plt>
   2b6a8:	ldr	r0, [pc, #36]	; 2b6d4 <flatcc_builder_truncate_vector@@Base+0xa8>
   2b6ac:	ldr	r1, [pc, #36]	; 2b6d8 <flatcc_builder_truncate_vector@@Base+0xac>
   2b6b0:	ldr	r3, [pc, #36]	; 2b6dc <flatcc_builder_truncate_vector@@Base+0xb0>
   2b6b4:	movw	r2, #986	; 0x3da
   2b6b8:	add	r0, pc, r0
   2b6bc:	add	r1, pc, r1
   2b6c0:	add	r3, pc, r3
   2b6c4:	bl	12bbc <__assert_fail@plt>
   2b6c8:	andeq	r8, r0, r0, ror #20
   2b6cc:	andeq	r8, r0, r2, lsr #14
   2b6d0:	andeq	r8, r0, r2, lsl sp
   2b6d4:	andeq	r8, r0, r9, lsr sp
   2b6d8:	andeq	r8, r0, r2, lsl #14
   2b6dc:	strdeq	r8, [r0], -r2

0002b6e0 <flatcc_builder_truncate_offset_vector@@Base>:
   2b6e0:	push	{fp, lr}
   2b6e4:	mov	fp, sp
   2b6e8:	ldr	r2, [r0, #32]
   2b6ec:	ldrh	r3, [r2, #14]
   2b6f0:	cmp	r3, #5
   2b6f4:	bne	2b73c <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2b6f8:	ldr	r3, [r2, #20]
   2b6fc:	cmp	r3, r1
   2b700:	bcc	2b75c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2b704:	sub	r3, r3, r1
   2b708:	str	r3, [r2, #20]
   2b70c:	ldr	r2, [r0, #32]
   2b710:	ldr	r3, [r0, #20]
   2b714:	ldr	ip, [r0, #16]
   2b718:	ldr	r2, [r2, #16]
   2b71c:	mls	r3, r2, r1, r3
   2b720:	mul	r2, r2, r1
   2b724:	mov	r1, #0
   2b728:	str	r3, [r0, #20]
   2b72c:	add	r0, ip, r3
   2b730:	bl	12b5c <memset@plt>
   2b734:	mov	r0, #0
   2b738:	pop	{fp, pc}
   2b73c:	ldr	r0, [pc, #56]	; 2b77c <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   2b740:	ldr	r1, [pc, #56]	; 2b780 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2b744:	ldr	r3, [pc, #56]	; 2b784 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   2b748:	movw	r2, #994	; 0x3e2
   2b74c:	add	r0, pc, r0
   2b750:	add	r1, pc, r1
   2b754:	add	r3, pc, r3
   2b758:	bl	12bbc <__assert_fail@plt>
   2b75c:	ldr	r0, [pc, #36]	; 2b788 <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   2b760:	ldr	r1, [pc, #36]	; 2b78c <flatcc_builder_truncate_offset_vector@@Base+0xac>
   2b764:	ldr	r3, [pc, #36]	; 2b790 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   2b768:	movw	r2, #995	; 0x3e3
   2b76c:	add	r0, pc, r0
   2b770:	add	r1, pc, r1
   2b774:	add	r3, pc, r3
   2b778:	bl	12bbc <__assert_fail@plt>
   2b77c:	andeq	r8, r0, r5, lsr #21
   2b780:	andeq	r8, r0, lr, ror #12
   2b784:	andeq	r8, r0, r1, asr #25
   2b788:	andeq	r8, r0, pc, ror #25
   2b78c:	andeq	r8, r0, lr, asr #12
   2b790:	andeq	r8, r0, r1, lsr #25

0002b794 <flatcc_builder_truncate_string@@Base>:
   2b794:	push	{fp, lr}
   2b798:	mov	fp, sp
   2b79c:	mov	r2, r1
   2b7a0:	ldr	r1, [r0, #32]
   2b7a4:	ldrh	r3, [r1, #14]
   2b7a8:	cmp	r3, #6
   2b7ac:	bne	2b7e8 <flatcc_builder_truncate_string@@Base+0x54>
   2b7b0:	ldr	r3, [r1, #20]
   2b7b4:	cmp	r3, r2
   2b7b8:	bcc	2b808 <flatcc_builder_truncate_string@@Base+0x74>
   2b7bc:	sub	r3, r3, r2
   2b7c0:	str	r3, [r1, #20]
   2b7c4:	ldr	r3, [r0, #20]
   2b7c8:	ldr	r1, [r0, #16]
   2b7cc:	sub	r3, r3, r2
   2b7d0:	str	r3, [r0, #20]
   2b7d4:	add	r0, r1, r3
   2b7d8:	mov	r1, #0
   2b7dc:	bl	12b5c <memset@plt>
   2b7e0:	mov	r0, #0
   2b7e4:	pop	{fp, pc}
   2b7e8:	ldr	r0, [pc, #56]	; 2b828 <flatcc_builder_truncate_string@@Base+0x94>
   2b7ec:	ldr	r1, [pc, #56]	; 2b82c <flatcc_builder_truncate_string@@Base+0x98>
   2b7f0:	ldr	r3, [pc, #56]	; 2b830 <flatcc_builder_truncate_string@@Base+0x9c>
   2b7f4:	movw	r2, #1003	; 0x3eb
   2b7f8:	add	r0, pc, r0
   2b7fc:	add	r1, pc, r1
   2b800:	add	r3, pc, r3
   2b804:	bl	12bbc <__assert_fail@plt>
   2b808:	ldr	r0, [pc, #36]	; 2b834 <flatcc_builder_truncate_string@@Base+0xa0>
   2b80c:	ldr	r1, [pc, #36]	; 2b838 <flatcc_builder_truncate_string@@Base+0xa4>
   2b810:	ldr	r3, [pc, #36]	; 2b83c <flatcc_builder_truncate_string@@Base+0xa8>
   2b814:	mov	r2, #1004	; 0x3ec
   2b818:	add	r0, pc, r0
   2b81c:	add	r1, pc, r1
   2b820:	add	r3, pc, r3
   2b824:	bl	12bbc <__assert_fail@plt>
   2b828:	andeq	r8, r0, r2, lsl #22
   2b82c:	andeq	r8, r0, r2, asr #11
   2b830:	muleq	r0, r6, ip
   2b834:			; <UNDEFINED> instruction: 0x00008cbd
   2b838:	andeq	r8, r0, r2, lsr #11
   2b83c:	andeq	r8, r0, r6, ror ip

0002b840 <flatcc_builder_start_vector@@Base>:
   2b840:	push	{r4, r5, r6, r7, fp, lr}
   2b844:	add	fp, sp, #16
   2b848:	mov	r7, #4
   2b84c:	cmp	r2, #4
   2b850:	mov	r6, r1
   2b854:	mov	r5, r3
   2b858:	mov	r4, r0
   2b85c:	movls	r2, r7
   2b860:	mov	r1, r2
   2b864:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2b868:	mov	r1, r0
   2b86c:	mvn	r0, #0
   2b870:	cmp	r1, #0
   2b874:	popne	{r4, r5, r6, r7, fp, pc}
   2b878:	ldr	r0, [r4, #32]
   2b87c:	str	r6, [r0, #16]
   2b880:	mov	r0, #0
   2b884:	ldr	r1, [r4, #32]
   2b888:	str	r0, [r1, #20]
   2b88c:	ldr	r1, [r4, #32]
   2b890:	str	r5, [r1, #24]
   2b894:	ldr	r1, [r4, #32]
   2b898:	strh	r7, [r1, #14]
   2b89c:	ldr	r2, [r4, #28]
   2b8a0:	ldr	r3, [r4, #60]	; 0x3c
   2b8a4:	ldr	r7, [r4, #64]	; 0x40
   2b8a8:	add	r3, r3, r2
   2b8ac:	sub	r2, r7, r2
   2b8b0:	str	r3, [r4, #16]
   2b8b4:	mvn	r3, #3
   2b8b8:	cmn	r2, #4
   2b8bc:	movcs	r2, r3
   2b8c0:	str	r2, [r4, #24]
   2b8c4:	str	r3, [r1, #4]
   2b8c8:	pop	{r4, r5, r6, r7, fp, pc}

0002b8cc <flatcc_builder_start_offset_vector@@Base>:
   2b8cc:	push	{r4, r5, fp, lr}
   2b8d0:	add	fp, sp, #8
   2b8d4:	mov	r1, #4
   2b8d8:	mov	r4, r0
   2b8dc:	mov	r5, #4
   2b8e0:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2b8e4:	mov	r1, r0
   2b8e8:	mvn	r0, #0
   2b8ec:	cmp	r1, #0
   2b8f0:	popne	{r4, r5, fp, pc}
   2b8f4:	ldr	r0, [r4, #32]
   2b8f8:	mov	r2, #5
   2b8fc:	str	r5, [r0, #16]
   2b900:	mov	r0, #0
   2b904:	ldr	r1, [r4, #32]
   2b908:	str	r0, [r1, #20]
   2b90c:	ldr	r1, [r4, #32]
   2b910:	strh	r2, [r1, #14]
   2b914:	ldr	r2, [r4, #28]
   2b918:	ldr	r3, [r4, #60]	; 0x3c
   2b91c:	ldr	r5, [r4, #64]	; 0x40
   2b920:	add	r3, r3, r2
   2b924:	sub	r2, r5, r2
   2b928:	str	r3, [r4, #16]
   2b92c:	mvn	r3, #3
   2b930:	cmn	r2, #4
   2b934:	movcs	r2, r3
   2b938:	str	r2, [r4, #24]
   2b93c:	str	r3, [r1, #4]
   2b940:	pop	{r4, r5, fp, pc}

0002b944 <flatcc_builder_create_offset_vector@@Base>:
   2b944:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b948:	add	fp, sp, #24
   2b94c:	sub	sp, sp, #8
   2b950:	mov	r8, r1
   2b954:	mov	r1, #4
   2b958:	mov	r6, r2
   2b95c:	mov	r4, r0
   2b960:	mov	r7, #4
   2b964:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2b968:	cmp	r0, #0
   2b96c:	beq	2b97c <flatcc_builder_create_offset_vector@@Base+0x38>
   2b970:	mov	r0, #0
   2b974:	sub	sp, fp, #24
   2b978:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b97c:	ldr	r0, [r4, #32]
   2b980:	mov	r1, #0
   2b984:	str	r7, [r0, #16]
   2b988:	ldr	r0, [r4, #32]
   2b98c:	str	r1, [r0, #20]
   2b990:	mov	r1, #5
   2b994:	ldr	r0, [r4, #32]
   2b998:	strh	r1, [r0, #14]
   2b99c:	ldr	r1, [r4, #28]
   2b9a0:	ldr	r2, [r4, #60]	; 0x3c
   2b9a4:	ldr	r3, [r4, #64]	; 0x40
   2b9a8:	add	r2, r2, r1
   2b9ac:	sub	r1, r3, r1
   2b9b0:	str	r2, [r4, #16]
   2b9b4:	mvn	r2, #3
   2b9b8:	cmn	r1, #4
   2b9bc:	movcs	r1, r2
   2b9c0:	str	r1, [r4, #24]
   2b9c4:	str	r2, [r0, #4]
   2b9c8:	ldr	r1, [r0, #20]
   2b9cc:	adds	r1, r1, r6
   2b9d0:	cmpcc	r1, #1073741824	; 0x40000000
   2b9d4:	bcc	2b9f8 <flatcc_builder_create_offset_vector@@Base+0xb4>
   2b9d8:	ldr	r0, [pc, #200]	; 2baa8 <flatcc_builder_create_offset_vector@@Base+0x164>
   2b9dc:	ldr	r1, [pc, #200]	; 2baac <flatcc_builder_create_offset_vector@@Base+0x168>
   2b9e0:	ldr	r3, [pc, #200]	; 2bab0 <flatcc_builder_create_offset_vector@@Base+0x16c>
   2b9e4:	mov	r2, #892	; 0x37c
   2b9e8:	add	r0, pc, r0
   2b9ec:	add	r1, pc, r1
   2b9f0:	add	r3, pc, r3
   2b9f4:	bl	12bbc <__assert_fail@plt>
   2b9f8:	str	r1, [r0, #20]
   2b9fc:	ldr	r7, [r4, #20]
   2ba00:	ldr	r0, [r4, #24]
   2ba04:	add	r1, r7, r6, lsl #2
   2ba08:	cmp	r1, r0
   2ba0c:	str	r1, [r4, #20]
   2ba10:	bcs	2ba24 <flatcc_builder_create_offset_vector@@Base+0xe0>
   2ba14:	ldr	r0, [r4, #16]
   2ba18:	adds	r0, r0, r7
   2ba1c:	bne	2ba8c <flatcc_builder_create_offset_vector@@Base+0x148>
   2ba20:	b	2b970 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2ba24:	ldr	r2, [r4, #28]
   2ba28:	ldr	r0, [r4, #40]	; 0x28
   2ba2c:	ldr	r5, [r4, #48]	; 0x30
   2ba30:	mov	r3, #1
   2ba34:	str	r3, [sp]
   2ba38:	mov	r3, #1
   2ba3c:	add	r1, r1, r2
   2ba40:	add	r2, r1, #1
   2ba44:	add	r1, r4, #60	; 0x3c
   2ba48:	blx	r5
   2ba4c:	cmp	r0, #0
   2ba50:	bne	2b970 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2ba54:	ldr	r1, [r4, #28]
   2ba58:	ldr	r0, [r4, #60]	; 0x3c
   2ba5c:	ldr	r3, [r4, #64]	; 0x40
   2ba60:	ldr	r2, [r4, #32]
   2ba64:	add	r0, r0, r1
   2ba68:	sub	r1, r3, r1
   2ba6c:	mvn	r3, #3
   2ba70:	cmn	r1, #4
   2ba74:	str	r0, [r4, #16]
   2ba78:	movcs	r1, r3
   2ba7c:	str	r1, [r4, #24]
   2ba80:	str	r3, [r2, #4]
   2ba84:	adds	r0, r0, r7
   2ba88:	beq	2b970 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2ba8c:	lsl	r2, r6, #2
   2ba90:	mov	r1, r8
   2ba94:	bl	12aa8 <memcpy@plt>
   2ba98:	mov	r0, r4
   2ba9c:	sub	sp, fp, #24
   2baa0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2baa4:	b	2bab4 <flatcc_builder_end_offset_vector@@Base>
   2baa8:	muleq	r0, ip, r4
   2baac:	ldrdeq	r8, [r0], -r2
   2bab0:	andeq	r9, r0, pc, lsr #9

0002bab4 <flatcc_builder_end_offset_vector@@Base>:
   2bab4:	push	{r4, r5, fp, lr}
   2bab8:	add	fp, sp, #8
   2babc:	mov	r4, r0
   2bac0:	ldr	r0, [r0, #32]
   2bac4:	ldrh	r1, [r0, #14]
   2bac8:	cmp	r1, #5
   2bacc:	bne	2bb6c <flatcc_builder_end_offset_vector@@Base+0xb8>
   2bad0:	ldr	r2, [r0, #20]
   2bad4:	ldr	r1, [r4, #16]
   2bad8:	mov	r0, r4
   2badc:	mov	r3, #0
   2bae0:	bl	2cbd8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2bae4:	mov	r5, r0
   2bae8:	cmp	r0, #0
   2baec:	beq	2bb64 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2baf0:	ldr	r0, [r4, #16]
   2baf4:	ldr	r2, [r4, #20]
   2baf8:	mov	r1, #0
   2bafc:	bl	12b5c <memset@plt>
   2bb00:	ldr	r0, [r4, #32]
   2bb04:	ldr	r1, [r4, #60]	; 0x3c
   2bb08:	ldr	ip, [r4, #64]	; 0x40
   2bb0c:	ldr	r3, [r0, #8]
   2bb10:	str	r3, [r4, #20]
   2bb14:	ldr	r3, [r0]
   2bb18:	str	r3, [r4, #28]
   2bb1c:	add	r1, r1, r3
   2bb20:	ldr	r2, [r0, #4]
   2bb24:	str	r1, [r4, #16]
   2bb28:	sub	r1, ip, r3
   2bb2c:	cmp	r1, r2
   2bb30:	movhi	r1, r2
   2bb34:	str	r1, [r4, #24]
   2bb38:	ldrh	r1, [r4, #130]	; 0x82
   2bb3c:	ldrh	r2, [r4, #128]	; 0x80
   2bb40:	cmp	r2, r1
   2bb44:	strhcc	r1, [r4, #128]	; 0x80
   2bb48:	ldrh	r1, [r0, #12]
   2bb4c:	sub	r0, r0, #36	; 0x24
   2bb50:	str	r0, [r4, #32]
   2bb54:	strh	r1, [r4, #130]	; 0x82
   2bb58:	ldr	r0, [r4, #156]	; 0x9c
   2bb5c:	sub	r0, r0, #1
   2bb60:	str	r0, [r4, #156]	; 0x9c
   2bb64:	mov	r0, r5
   2bb68:	pop	{r4, r5, fp, pc}
   2bb6c:	ldr	r0, [pc, #24]	; 2bb8c <flatcc_builder_end_offset_vector@@Base+0xd8>
   2bb70:	ldr	r1, [pc, #24]	; 2bb90 <flatcc_builder_end_offset_vector@@Base+0xdc>
   2bb74:	ldr	r3, [pc, #24]	; 2bb94 <flatcc_builder_end_offset_vector@@Base+0xe0>
   2bb78:	movw	r2, #1480	; 0x5c8
   2bb7c:	add	r0, pc, r0
   2bb80:	add	r1, pc, r1
   2bb84:	add	r3, pc, r3
   2bb88:	bl	12bbc <__assert_fail@plt>
   2bb8c:	andeq	r8, r0, r5, ror r6
   2bb90:	andeq	r8, r0, lr, lsr r2
   2bb94:	muleq	r0, ip, ip

0002bb98 <flatcc_builder_start_string@@Base>:
   2bb98:	push	{r4, r5, fp, lr}
   2bb9c:	add	fp, sp, #8
   2bba0:	mov	r1, #1
   2bba4:	mov	r4, r0
   2bba8:	mov	r5, #1
   2bbac:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2bbb0:	mov	r1, r0
   2bbb4:	mvn	r0, #0
   2bbb8:	cmp	r1, #0
   2bbbc:	popne	{r4, r5, fp, pc}
   2bbc0:	ldr	r0, [r4, #32]
   2bbc4:	mov	r2, #6
   2bbc8:	str	r5, [r0, #16]
   2bbcc:	mov	r0, #0
   2bbd0:	ldr	r1, [r4, #32]
   2bbd4:	str	r0, [r1, #20]
   2bbd8:	ldr	r1, [r4, #32]
   2bbdc:	strh	r2, [r1, #14]
   2bbe0:	ldr	r2, [r4, #28]
   2bbe4:	ldr	r3, [r4, #60]	; 0x3c
   2bbe8:	ldr	r5, [r4, #64]	; 0x40
   2bbec:	add	r3, r3, r2
   2bbf0:	sub	r2, r5, r2
   2bbf4:	str	r3, [r4, #16]
   2bbf8:	mvn	r3, #3
   2bbfc:	cmn	r2, #4
   2bc00:	movcs	r2, r3
   2bc04:	str	r2, [r4, #24]
   2bc08:	str	r3, [r1, #4]
   2bc0c:	pop	{r4, r5, fp, pc}

0002bc10 <flatcc_builder_reserve_table@@Base>:
   2bc10:	push	{r4, r5, r6, sl, fp, lr}
   2bc14:	add	fp, sp, #16
   2bc18:	sub	sp, sp, #8
   2bc1c:	cmn	r1, #1
   2bc20:	ble	2bcf4 <flatcc_builder_reserve_table@@Base+0xe4>
   2bc24:	mov	r4, r0
   2bc28:	ldr	r0, [r0, #32]
   2bc2c:	mov	r5, r1
   2bc30:	ldr	r1, [r4, #56]	; 0x38
   2bc34:	ldrh	r2, [r0, #28]
   2bc38:	ldr	r0, [r0, #16]
   2bc3c:	add	r6, r0, r2, lsl #1
   2bc40:	add	r0, r6, r5, lsl #1
   2bc44:	add	r2, r0, #4
   2bc48:	cmp	r2, r1
   2bc4c:	bls	2bc74 <flatcc_builder_reserve_table@@Base+0x64>
   2bc50:	ldr	r0, [r4, #40]	; 0x28
   2bc54:	ldr	ip, [r4, #48]	; 0x30
   2bc58:	mov	r3, #0
   2bc5c:	add	r1, r4, #52	; 0x34
   2bc60:	str	r3, [sp]
   2bc64:	mov	r3, #1
   2bc68:	blx	ip
   2bc6c:	cmp	r0, #0
   2bc70:	bne	2bd14 <flatcc_builder_reserve_table@@Base+0x104>
   2bc74:	ldr	r0, [r4, #52]	; 0x34
   2bc78:	adds	r0, r0, r6
   2bc7c:	str	r0, [r4, #4]
   2bc80:	mvneq	r0, #0
   2bc84:	subeq	sp, fp, #16
   2bc88:	popeq	{r4, r5, r6, sl, fp, pc}
   2bc8c:	add	r0, r0, #4
   2bc90:	lsl	r1, r5, #1
   2bc94:	str	r0, [r4, #4]
   2bc98:	ldr	r0, [r4, #32]
   2bc9c:	ldr	r3, [r4, #80]	; 0x50
   2bca0:	ldr	r5, [r0, #20]
   2bca4:	orr	r0, r1, #1
   2bca8:	add	r2, r5, r0
   2bcac:	cmp	r2, r3
   2bcb0:	bls	2bcd8 <flatcc_builder_reserve_table@@Base+0xc8>
   2bcb4:	ldr	r0, [r4, #40]	; 0x28
   2bcb8:	ldr	r6, [r4, #48]	; 0x30
   2bcbc:	mov	r3, #3
   2bcc0:	add	r1, r4, #76	; 0x4c
   2bcc4:	str	r3, [sp]
   2bcc8:	mov	r3, #0
   2bccc:	blx	r6
   2bcd0:	cmp	r0, #0
   2bcd4:	bne	2bd14 <flatcc_builder_reserve_table@@Base+0x104>
   2bcd8:	ldr	r0, [r4, #76]	; 0x4c
   2bcdc:	adds	r0, r0, r5
   2bce0:	str	r0, [r4]
   2bce4:	mov	r0, #0
   2bce8:	mvneq	r0, #0
   2bcec:	sub	sp, fp, #16
   2bcf0:	pop	{r4, r5, r6, sl, fp, pc}
   2bcf4:	ldr	r0, [pc, #56]	; 2bd34 <flatcc_builder_reserve_table@@Base+0x124>
   2bcf8:	ldr	r1, [pc, #56]	; 2bd38 <flatcc_builder_reserve_table@@Base+0x128>
   2bcfc:	ldr	r3, [pc, #56]	; 2bd3c <flatcc_builder_reserve_table@@Base+0x12c>
   2bd00:	movw	r2, #1065	; 0x429
   2bd04:	add	r0, pc, r0
   2bd08:	add	r1, pc, r1
   2bd0c:	add	r3, pc, r3
   2bd10:	bl	12bbc <__assert_fail@plt>
   2bd14:	ldr	r0, [pc, #36]	; 2bd40 <flatcc_builder_reserve_table@@Base+0x130>
   2bd18:	ldr	r1, [pc, #36]	; 2bd44 <flatcc_builder_reserve_table@@Base+0x134>
   2bd1c:	ldr	r3, [pc, #36]	; 2bd48 <flatcc_builder_reserve_table@@Base+0x138>
   2bd20:	mov	r2, #308	; 0x134
   2bd24:	add	r0, pc, r0
   2bd28:	add	r1, pc, r1
   2bd2c:	add	r3, pc, r3
   2bd30:	bl	12bbc <__assert_fail@plt>
   2bd34:	andeq	r8, r0, r4, lsr r8
   2bd38:	strheq	r8, [r0], -r6
   2bd3c:	andeq	r8, r0, fp, ror #15
   2bd40:	andeq	r9, r0, r7, asr r2
   2bd44:	muleq	r0, r6, r0
   2bd48:	andeq	r9, r0, r9, lsl #1

0002bd4c <flatcc_builder_start_table@@Base>:
   2bd4c:	push	{r4, r5, r6, r7, fp, lr}
   2bd50:	add	fp, sp, #16
   2bd54:	sub	sp, sp, #8
   2bd58:	mov	r6, r1
   2bd5c:	mov	r1, #4
   2bd60:	mov	r4, r0
   2bd64:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2bd68:	mvn	r5, #0
   2bd6c:	cmp	r0, #0
   2bd70:	beq	2bd80 <flatcc_builder_start_table@@Base+0x34>
   2bd74:	mov	r0, r5
   2bd78:	sub	sp, fp, #16
   2bd7c:	pop	{r4, r5, r6, r7, fp, pc}
   2bd80:	mov	r1, r4
   2bd84:	ldr	r2, [r4, #4]
   2bd88:	ldr	r3, [r4, #32]
   2bd8c:	ldr	r0, [r1, #52]!	; 0x34
   2bd90:	sub	r0, r2, r0
   2bd94:	str	r0, [r3, #16]
   2bd98:	ldr	r0, [r4]
   2bd9c:	ldr	r3, [r4, #76]	; 0x4c
   2bda0:	ldr	r2, [r4, #32]
   2bda4:	sub	r0, r0, r3
   2bda8:	mov	r3, #0
   2bdac:	str	r0, [r2, #20]
   2bdb0:	ldr	r0, [r4, #12]
   2bdb4:	ldr	r2, [r4, #32]
   2bdb8:	str	r0, [r2, #24]
   2bdbc:	ldr	r0, [r4, #32]
   2bdc0:	ldrh	r2, [r4, #8]
   2bdc4:	strh	r2, [r0, #28]
   2bdc8:	movw	r0, #15186	; 0x3b52
   2bdcc:	strh	r3, [r4, #8]
   2bdd0:	mov	r2, #3
   2bdd4:	movt	r0, #12137	; 0x2f69
   2bdd8:	str	r0, [r4, #12]
   2bddc:	ldr	r0, [r4, #32]
   2bde0:	strh	r2, [r0, #14]
   2bde4:	ldrh	r2, [r0, #28]
   2bde8:	ldr	r0, [r0, #16]
   2bdec:	add	r7, r0, r2, lsl #1
   2bdf0:	add	r0, r7, r6, lsl #1
   2bdf4:	add	r2, r0, #4
   2bdf8:	ldr	r0, [r4, #56]	; 0x38
   2bdfc:	cmp	r2, r0
   2be00:	bls	2be20 <flatcc_builder_start_table@@Base+0xd4>
   2be04:	ldr	r0, [r4, #40]	; 0x28
   2be08:	ldr	ip, [r4, #48]	; 0x30
   2be0c:	str	r3, [sp]
   2be10:	mov	r3, #1
   2be14:	blx	ip
   2be18:	cmp	r0, #0
   2be1c:	bne	2bec4 <flatcc_builder_start_table@@Base+0x178>
   2be20:	ldr	r0, [r4, #52]	; 0x34
   2be24:	adds	r0, r0, r7
   2be28:	str	r0, [r4, #4]
   2be2c:	beq	2bd74 <flatcc_builder_start_table@@Base+0x28>
   2be30:	add	r0, r0, #4
   2be34:	lsl	r1, r6, #1
   2be38:	str	r0, [r4, #4]
   2be3c:	ldr	r0, [r4, #32]
   2be40:	ldr	r3, [r4, #80]	; 0x50
   2be44:	ldr	r6, [r0, #20]
   2be48:	orr	r0, r1, #1
   2be4c:	add	r2, r6, r0
   2be50:	cmp	r2, r3
   2be54:	bls	2be7c <flatcc_builder_start_table@@Base+0x130>
   2be58:	ldr	r0, [r4, #40]	; 0x28
   2be5c:	ldr	r7, [r4, #48]	; 0x30
   2be60:	mov	r3, #3
   2be64:	add	r1, r4, #76	; 0x4c
   2be68:	str	r3, [sp]
   2be6c:	mov	r3, #0
   2be70:	blx	r7
   2be74:	cmp	r0, #0
   2be78:	bne	2bec4 <flatcc_builder_start_table@@Base+0x178>
   2be7c:	ldr	r0, [r4, #76]	; 0x4c
   2be80:	adds	r0, r0, r6
   2be84:	str	r0, [r4]
   2be88:	beq	2bd74 <flatcc_builder_start_table@@Base+0x28>
   2be8c:	ldr	r0, [r4, #28]
   2be90:	ldr	r2, [r4, #60]	; 0x3c
   2be94:	ldr	r3, [r4, #64]	; 0x40
   2be98:	ldr	r1, [r4, #32]
   2be9c:	mov	r5, #0
   2bea0:	add	r2, r2, r0
   2bea4:	sub	r0, r3, r0
   2bea8:	str	r2, [r4, #16]
   2beac:	movw	r2, #65532	; 0xfffc
   2beb0:	cmp	r0, r2
   2beb4:	movcs	r0, r2
   2beb8:	str	r0, [r4, #24]
   2bebc:	str	r2, [r1, #4]
   2bec0:	b	2bd74 <flatcc_builder_start_table@@Base+0x28>
   2bec4:	ldr	r0, [pc, #24]	; 2bee4 <flatcc_builder_start_table@@Base+0x198>
   2bec8:	ldr	r1, [pc, #24]	; 2bee8 <flatcc_builder_start_table@@Base+0x19c>
   2becc:	ldr	r3, [pc, #24]	; 2beec <flatcc_builder_start_table@@Base+0x1a0>
   2bed0:	mov	r2, #308	; 0x134
   2bed4:	add	r0, pc, r0
   2bed8:	add	r1, pc, r1
   2bedc:	add	r3, pc, r3
   2bee0:	bl	12bbc <__assert_fail@plt>
   2bee4:	andeq	r9, r0, r7, lsr #1
   2bee8:	andeq	r7, r0, r6, ror #29
   2beec:	ldrdeq	r8, [r0], -r9

0002bef0 <flatcc_builder_create_vtable@@Base>:
   2bef0:	push	{r4, r5, fp, lr}
   2bef4:	add	fp, sp, #8
   2bef8:	sub	sp, sp, #80	; 0x50
   2befc:	mov	r3, r2
   2bf00:	mov	r2, #0
   2bf04:	mov	r4, r0
   2bf08:	cmp	r3, #0
   2bf0c:	str	r2, [sp, #12]
   2bf10:	str	r2, [sp, #8]
   2bf14:	movne	r2, #1
   2bf18:	strne	r1, [sp, #16]
   2bf1c:	strne	r3, [sp, #8]
   2bf20:	strne	r3, [sp, #20]
   2bf24:	strne	r2, [sp, #12]
   2bf28:	ldr	r0, [r4, #152]	; 0x98
   2bf2c:	cmp	r0, #0
   2bf30:	bne	2bf40 <flatcc_builder_create_vtable@@Base+0x50>
   2bf34:	ldr	r0, [r4, #180]	; 0xb4
   2bf38:	cmp	r0, #0
   2bf3c:	beq	2bf8c <flatcc_builder_create_vtable@@Base+0x9c>
   2bf40:	cmp	r3, #0
   2bf44:	beq	2bfd0 <flatcc_builder_create_vtable@@Base+0xe0>
   2bf48:	ldr	r0, [r4, #136]	; 0x88
   2bf4c:	ldr	ip, [r4, #44]	; 0x2c
   2bf50:	add	r1, sp, #8
   2bf54:	add	r1, r1, #8
   2bf58:	sub	r5, r0, r3
   2bf5c:	ldr	r0, [r4, #36]	; 0x24
   2bf60:	str	r3, [sp]
   2bf64:	mov	r3, r5
   2bf68:	blx	ip
   2bf6c:	cmp	r0, #0
   2bf70:	bne	2bff0 <flatcc_builder_create_vtable@@Base+0x100>
   2bf74:	cmp	r5, #0
   2bf78:	str	r5, [r4, #136]	; 0x88
   2bf7c:	beq	2bfc4 <flatcc_builder_create_vtable@@Base+0xd4>
   2bf80:	add	r0, r5, #1
   2bf84:	sub	sp, fp, #8
   2bf88:	pop	{r4, r5, fp, pc}
   2bf8c:	ldr	r5, [r4, #140]	; 0x8c
   2bf90:	ldr	r0, [r4, #36]	; 0x24
   2bf94:	ldr	ip, [r4, #44]	; 0x2c
   2bf98:	add	r1, r5, r3
   2bf9c:	str	r1, [r4, #140]	; 0x8c
   2bfa0:	add	r1, sp, #8
   2bfa4:	str	r3, [sp]
   2bfa8:	mov	r3, r5
   2bfac:	add	r1, r1, #8
   2bfb0:	blx	ip
   2bfb4:	cmp	r0, #0
   2bfb8:	bne	2c010 <flatcc_builder_create_vtable@@Base+0x120>
   2bfbc:	adds	r0, r5, #1
   2bfc0:	bne	2bf84 <flatcc_builder_create_vtable@@Base+0x94>
   2bfc4:	mov	r0, #0
   2bfc8:	sub	sp, fp, #8
   2bfcc:	pop	{r4, r5, fp, pc}
   2bfd0:	ldr	r0, [pc, #100]	; 2c03c <flatcc_builder_create_vtable@@Base+0x14c>
   2bfd4:	ldr	r1, [pc, #100]	; 2c040 <flatcc_builder_create_vtable@@Base+0x150>
   2bfd8:	ldr	r3, [pc, #100]	; 2c044 <flatcc_builder_create_vtable@@Base+0x154>
   2bfdc:	movw	r2, #647	; 0x287
   2bfe0:	add	r0, pc, r0
   2bfe4:	add	r1, pc, r1
   2bfe8:	add	r3, pc, r3
   2bfec:	bl	12bbc <__assert_fail@plt>
   2bff0:	ldr	r0, [pc, #80]	; 2c048 <flatcc_builder_create_vtable@@Base+0x158>
   2bff4:	ldr	r1, [pc, #80]	; 2c04c <flatcc_builder_create_vtable@@Base+0x15c>
   2bff8:	ldr	r3, [pc, #80]	; 2c050 <flatcc_builder_create_vtable@@Base+0x160>
   2bffc:	movw	r2, #651	; 0x28b
   2c000:	add	r0, pc, r0
   2c004:	add	r1, pc, r1
   2c008:	add	r3, pc, r3
   2c00c:	bl	12bbc <__assert_fail@plt>
   2c010:	ldr	r0, [pc, #24]	; 2c030 <flatcc_builder_create_vtable@@Base+0x140>
   2c014:	ldr	r1, [pc, #24]	; 2c034 <flatcc_builder_create_vtable@@Base+0x144>
   2c018:	ldr	r3, [pc, #24]	; 2c038 <flatcc_builder_create_vtable@@Base+0x148>
   2c01c:	movw	r2, #677	; 0x2a5
   2c020:	add	r0, pc, r0
   2c024:	add	r1, pc, r1
   2c028:	add	r3, pc, r3
   2c02c:	bl	12bbc <__assert_fail@plt>
   2c030:	andeq	r8, r0, fp, asr pc
   2c034:	muleq	r0, sl, sp
   2c038:	andeq	r8, r0, lr, asr #29
   2c03c:	muleq	r0, fp, pc	; <UNPREDICTABLE>
   2c040:	ldrdeq	r7, [r0], -sl
   2c044:	andeq	r8, r0, r2, asr lr
   2c048:	andeq	r8, r0, fp, ror pc
   2c04c:			; <UNDEFINED> instruction: 0x00007dba
   2c050:	andeq	r8, r0, r2, lsr lr

0002c054 <flatcc_builder_create_cached_vtable@@Base>:
   2c054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c058:	add	fp, sp, #28
   2c05c:	sub	sp, sp, #20
   2c060:	mov	sl, r0
   2c064:	ldr	r0, [r0, #116]	; 0x74
   2c068:	mov	r8, r3
   2c06c:	mov	r5, r2
   2c070:	str	r1, [sp, #16]
   2c074:	cmp	r0, #0
   2c078:	beq	2c11c <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2c07c:	ldr	r1, [sl, #92]	; 0x5c
   2c080:	rsb	r0, r0, #32
   2c084:	lsr	r0, r8, r0
   2c088:	add	r6, r1, r0, lsl #2
   2c08c:	cmp	r6, #0
   2c090:	beq	2c1e0 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2c094:	ldr	r7, [r6]
   2c098:	str	r6, [sp, #12]
   2c09c:	cmp	r7, #0
   2c0a0:	beq	2c1e8 <flatcc_builder_create_cached_vtable@@Base+0x194>
   2c0a4:	ldr	r4, [sl, #68]	; 0x44
   2c0a8:	ldr	r8, [sl, #100]	; 0x64
   2c0ac:	mov	r0, #0
   2c0b0:	str	r0, [sp, #8]
   2c0b4:	add	r9, r8, r7
   2c0b8:	mov	r1, r4
   2c0bc:	ldr	r0, [r9, #8]
   2c0c0:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2c0c4:	cmp	r0, r5
   2c0c8:	bne	2c0e0 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2c0cc:	ldr	r0, [sp, #16]
   2c0d0:	mov	r2, r5
   2c0d4:	bl	12ac0 <memcmp@plt>
   2c0d8:	cmp	r0, #0
   2c0dc:	beq	2c0f4 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2c0e0:	ldr	r7, [r9, #12]!
   2c0e4:	cmp	r7, #0
   2c0e8:	mov	r6, r9
   2c0ec:	bne	2c0b4 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2c0f0:	b	2c1d8 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2c0f4:	ldr	r0, [sl, #152]	; 0x98
   2c0f8:	ldr	r1, [r9, #4]
   2c0fc:	cmp	r1, r0
   2c100:	beq	2c34c <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2c104:	mov	r6, r9
   2c108:	mov	r0, r9
   2c10c:	ldr	r7, [r6, #12]!
   2c110:	cmp	r7, #0
   2c114:	bne	2c0b0 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2c118:	b	2c1ec <flatcc_builder_create_cached_vtable@@Base+0x198>
   2c11c:	ldr	r0, [sl, #124]	; 0x7c
   2c120:	cmp	r0, #0
   2c124:	bne	2c398 <flatcc_builder_create_cached_vtable@@Base+0x344>
   2c128:	ldr	r0, [sl, #104]	; 0x68
   2c12c:	add	r7, sl, #100	; 0x64
   2c130:	cmp	r0, #15
   2c134:	bhi	2c160 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2c138:	ldr	r0, [sl, #40]	; 0x28
   2c13c:	ldr	r6, [sl, #48]	; 0x30
   2c140:	mov	r1, #6
   2c144:	mov	r2, #16
   2c148:	mov	r3, #0
   2c14c:	str	r1, [sp]
   2c150:	mov	r1, r7
   2c154:	blx	r6
   2c158:	cmp	r0, #0
   2c15c:	bne	2c378 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2c160:	ldr	r0, [r7]
   2c164:	mov	r7, #0
   2c168:	cmp	r0, #0
   2c16c:	beq	2c28c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c170:	mov	r0, #16
   2c174:	mov	r2, #5
   2c178:	add	r1, sl, #92	; 0x5c
   2c17c:	mov	r3, #1
   2c180:	mov	r4, #256	; 0x100
   2c184:	str	r0, [sl, #124]	; 0x7c
   2c188:	ldr	r0, [sl, #40]	; 0x28
   2c18c:	ldr	r6, [sl, #48]	; 0x30
   2c190:	str	r2, [sp]
   2c194:	mov	r2, #256	; 0x100
   2c198:	blx	r6
   2c19c:	cmp	r0, #0
   2c1a0:	bne	2c28c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c1a4:	ldr	r0, [sl, #96]	; 0x60
   2c1a8:	mov	r1, r4
   2c1ac:	lsl	r4, r4, #1
   2c1b0:	cmp	r0, r1, lsl #1
   2c1b4:	bcs	2c1a8 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2c1b8:	lsr	r1, r1, #2
   2c1bc:	mvn	r0, #0
   2c1c0:	mov	r2, #1
   2c1c4:	add	r0, r0, #1
   2c1c8:	cmp	r1, r2, lsl r0
   2c1cc:	bhi	2c1c4 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2c1d0:	str	r0, [sl, #116]	; 0x74
   2c1d4:	b	2c07c <flatcc_builder_create_cached_vtable@@Base+0x28>
   2c1d8:	ldr	r9, [sp, #8]
   2c1dc:	b	2c1ec <flatcc_builder_create_cached_vtable@@Base+0x198>
   2c1e0:	mov	r7, #0
   2c1e4:	b	2c28c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c1e8:	mov	r9, #0
   2c1ec:	ldr	r4, [sl, #124]	; 0x7c
   2c1f0:	ldr	r0, [sl, #104]	; 0x68
   2c1f4:	add	r7, sl, #100	; 0x64
   2c1f8:	add	r2, r4, #16
   2c1fc:	cmp	r2, r0
   2c200:	bls	2c228 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2c204:	ldr	r0, [sl, #40]	; 0x28
   2c208:	ldr	r6, [sl, #48]	; 0x30
   2c20c:	mov	r1, #6
   2c210:	mov	r3, #0
   2c214:	str	r1, [sp]
   2c218:	mov	r1, r7
   2c21c:	blx	r6
   2c220:	cmp	r0, #0
   2c224:	bne	2c378 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2c228:	ldr	r0, [r7]
   2c22c:	mov	r7, #0
   2c230:	adds	r4, r0, r4
   2c234:	beq	2c28c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c238:	ldr	r0, [sl, #124]	; 0x7c
   2c23c:	ldr	r1, [sl, #152]	; 0x98
   2c240:	add	r2, r0, #16
   2c244:	str	r2, [sl, #124]	; 0x7c
   2c248:	ldr	r2, [sp, #12]
   2c24c:	str	r1, [r4, #4]
   2c250:	ldr	r1, [r2]
   2c254:	str	r1, [r4, #12]
   2c258:	ldr	r1, [sp, #16]
   2c25c:	str	r0, [r2]
   2c260:	mov	r0, sl
   2c264:	mov	r2, r5
   2c268:	bl	2bef0 <flatcc_builder_create_vtable@@Base>
   2c26c:	cmp	r0, #0
   2c270:	str	r0, [r4]
   2c274:	beq	2c28c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c278:	cmp	r9, #0
   2c27c:	beq	2c298 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2c280:	ldr	r0, [r9, #8]
   2c284:	str	r0, [r4, #8]
   2c288:	ldr	r7, [r4]
   2c28c:	mov	r0, r7
   2c290:	sub	sp, fp, #28
   2c294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c298:	ldr	r6, [sl, #120]	; 0x78
   2c29c:	ldr	r0, [sl, #172]	; 0xac
   2c2a0:	add	r2, r6, r5
   2c2a4:	cmp	r0, #0
   2c2a8:	beq	2c2e4 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2c2ac:	cmp	r0, r2
   2c2b0:	bcs	2c2e4 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2c2b4:	ldr	r0, [sl, #116]	; 0x74
   2c2b8:	cmp	r0, #0
   2c2bc:	beq	2c288 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2c2c0:	ldr	r0, [sl, #92]	; 0x5c
   2c2c4:	ldr	r2, [sl, #96]	; 0x60
   2c2c8:	mov	r1, #0
   2c2cc:	mov	r5, #0
   2c2d0:	bl	12b5c <memset@plt>
   2c2d4:	mov	r0, #16
   2c2d8:	str	r5, [sl, #120]	; 0x78
   2c2dc:	str	r0, [sl, #124]	; 0x7c
   2c2e0:	b	2c288 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2c2e4:	ldr	r0, [sl, #72]	; 0x48
   2c2e8:	add	r7, sl, #68	; 0x44
   2c2ec:	cmp	r2, r0
   2c2f0:	bls	2c318 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2c2f4:	ldr	r0, [sl, #40]	; 0x28
   2c2f8:	ldr	ip, [sl, #48]	; 0x30
   2c2fc:	mov	r1, #2
   2c300:	mov	r3, #0
   2c304:	str	r1, [sp]
   2c308:	mov	r1, r7
   2c30c:	blx	ip
   2c310:	cmp	r0, #0
   2c314:	bne	2c378 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2c318:	ldr	r0, [r7]
   2c31c:	adds	r0, r0, r6
   2c320:	beq	2c344 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2c324:	ldr	r1, [sl, #120]	; 0x78
   2c328:	mov	r2, r5
   2c32c:	str	r1, [r4, #8]
   2c330:	add	r1, r1, r5
   2c334:	str	r1, [sl, #120]	; 0x78
   2c338:	ldr	r1, [sp, #16]
   2c33c:	bl	12aa8 <memcpy@plt>
   2c340:	b	2c288 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2c344:	mvn	r7, #0
   2c348:	b	2c28c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c34c:	ldr	r0, [sp, #12]
   2c350:	cmp	r6, r0
   2c354:	beq	2c370 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2c358:	mov	r1, r0
   2c35c:	ldr	r0, [r9, #12]
   2c360:	str	r0, [r6]
   2c364:	ldr	r0, [r1]
   2c368:	str	r0, [r9, #12]
   2c36c:	str	r7, [r1]
   2c370:	ldr	r7, [r9]
   2c374:	b	2c28c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2c378:	ldr	r0, [pc, #68]	; 2c3c4 <flatcc_builder_create_cached_vtable@@Base+0x370>
   2c37c:	ldr	r1, [pc, #68]	; 2c3c8 <flatcc_builder_create_cached_vtable@@Base+0x374>
   2c380:	ldr	r3, [pc, #68]	; 2c3cc <flatcc_builder_create_cached_vtable@@Base+0x378>
   2c384:	mov	r2, #308	; 0x134
   2c388:	add	r0, pc, r0
   2c38c:	add	r1, pc, r1
   2c390:	add	r3, pc, r3
   2c394:	bl	12bbc <__assert_fail@plt>
   2c398:	ldr	r0, [pc, #24]	; 2c3b8 <flatcc_builder_create_cached_vtable@@Base+0x364>
   2c39c:	ldr	r1, [pc, #24]	; 2c3bc <flatcc_builder_create_cached_vtable@@Base+0x368>
   2c3a0:	ldr	r3, [pc, #24]	; 2c3c0 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   2c3a4:	movw	r2, #342	; 0x156
   2c3a8:	add	r0, pc, r0
   2c3ac:	add	r1, pc, r1
   2c3b0:	add	r3, pc, r3
   2c3b4:	bl	12bbc <__assert_fail@plt>
   2c3b8:	muleq	r0, r7, fp
   2c3bc:	andeq	r7, r0, r2, lsl sl
   2c3c0:	muleq	r0, lr, fp
   2c3c4:	strdeq	r8, [r0], -r3
   2c3c8:	andeq	r7, r0, r2, lsr sl
   2c3cc:	andeq	r8, r0, r5, lsr #20

0002c3d0 <flatcc_builder_create_table@@Base>:
   2c3d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c3d4:	add	fp, sp, #24
   2c3d8:	sub	sp, sp, #80	; 0x50
   2c3dc:	ldr	r5, [fp, #12]
   2c3e0:	cmn	r5, #1
   2c3e4:	ble	2c538 <flatcc_builder_create_table@@Base+0x168>
   2c3e8:	ldr	ip, [fp, #16]
   2c3ec:	tst	ip, #1
   2c3f0:	beq	2c558 <flatcc_builder_create_table@@Base+0x188>
   2c3f4:	mov	r8, r0
   2c3f8:	ldrh	r0, [r0, #128]	; 0x80
   2c3fc:	cmp	r3, #4
   2c400:	movls	r3, #4
   2c404:	cmp	r0, r3
   2c408:	strhcc	r3, [r8, #128]	; 0x80
   2c40c:	sub	r3, r3, #1
   2c410:	cmp	r5, #1
   2c414:	ldr	r4, [r8, #136]	; 0x88
   2c418:	sub	r0, r4, r2
   2c41c:	and	r0, r0, r3
   2c420:	add	r3, ip, r0
   2c424:	mvn	ip, #3
   2c428:	sub	r6, ip, r2
   2c42c:	add	r4, r6, r4
   2c430:	add	r6, r4, #1
   2c434:	sub	r3, r6, r3
   2c438:	str	r3, [fp, #-28]	; 0xffffffe4
   2c43c:	blt	2c468 <flatcc_builder_create_table@@Base+0x98>
   2c440:	ldr	r3, [fp, #8]
   2c444:	sub	r6, r4, r0
   2c448:	sub	r4, ip, r6
   2c44c:	ldrh	r6, [r3], #2
   2c450:	subs	r5, r5, #1
   2c454:	ldr	r7, [r6, r1]
   2c458:	add	r7, r4, r7
   2c45c:	sub	r7, r7, r6
   2c460:	str	r7, [r6, r1]
   2c464:	bne	2c44c <flatcc_builder_create_table@@Base+0x7c>
   2c468:	sub	r3, fp, #28
   2c46c:	mov	r4, #4
   2c470:	cmp	r2, #0
   2c474:	str	r3, [sp, #12]
   2c478:	mov	r3, #1
   2c47c:	str	r4, [sp, #4]
   2c480:	str	r4, [sp, #16]
   2c484:	str	r3, [sp, #8]
   2c488:	beq	2c4a4 <flatcc_builder_create_table@@Base+0xd4>
   2c48c:	mov	r3, #2
   2c490:	add	r4, r2, #4
   2c494:	str	r1, [sp, #20]
   2c498:	str	r2, [sp, #24]
   2c49c:	str	r3, [sp, #8]
   2c4a0:	str	r4, [sp, #4]
   2c4a4:	cmp	r0, #0
   2c4a8:	beq	2c4d4 <flatcc_builder_create_table@@Base+0x104>
   2c4ac:	add	r4, r4, r0
   2c4b0:	add	r1, sp, #4
   2c4b4:	str	r4, [sp, #4]
   2c4b8:	add	r1, r1, r3, lsl #3
   2c4bc:	add	r3, r3, #1
   2c4c0:	ldr	r2, [pc, #208]	; 2c598 <flatcc_builder_create_table@@Base+0x1c8>
   2c4c4:	ldr	r2, [pc, r2]
   2c4c8:	str	r2, [r1, #8]
   2c4cc:	str	r0, [r1, #12]
   2c4d0:	str	r3, [sp, #8]
   2c4d4:	cmp	r4, #0
   2c4d8:	ble	2c578 <flatcc_builder_create_table@@Base+0x1a8>
   2c4dc:	ldr	r0, [r8, #136]	; 0x88
   2c4e0:	ldr	r7, [r8, #44]	; 0x2c
   2c4e4:	add	r1, sp, #4
   2c4e8:	mov	r2, r3
   2c4ec:	add	r1, r1, #8
   2c4f0:	sub	r5, r0, r4
   2c4f4:	ldr	r0, [r8, #36]	; 0x24
   2c4f8:	str	r4, [sp]
   2c4fc:	mov	r3, r5
   2c500:	blx	r7
   2c504:	cmp	r0, #0
   2c508:	streq	r5, [r8, #136]	; 0x88
   2c50c:	moveq	r0, r5
   2c510:	subeq	sp, fp, #24
   2c514:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c518:	ldr	r0, [pc, #160]	; 2c5c0 <flatcc_builder_create_table@@Base+0x1f0>
   2c51c:	ldr	r1, [pc, #160]	; 2c5c4 <flatcc_builder_create_table@@Base+0x1f4>
   2c520:	ldr	r3, [pc, #160]	; 2c5c8 <flatcc_builder_create_table@@Base+0x1f8>
   2c524:	movw	r2, #651	; 0x28b
   2c528:	add	r0, pc, r0
   2c52c:	add	r1, pc, r1
   2c530:	add	r3, pc, r3
   2c534:	bl	12bbc <__assert_fail@plt>
   2c538:	ldr	r0, [pc, #92]	; 2c59c <flatcc_builder_create_table@@Base+0x1cc>
   2c53c:	ldr	r1, [pc, #92]	; 2c5a0 <flatcc_builder_create_table@@Base+0x1d0>
   2c540:	ldr	r3, [pc, #92]	; 2c5a4 <flatcc_builder_create_table@@Base+0x1d4>
   2c544:	movw	r2, #1237	; 0x4d5
   2c548:	add	r0, pc, r0
   2c54c:	add	r1, pc, r1
   2c550:	add	r3, pc, r3
   2c554:	bl	12bbc <__assert_fail@plt>
   2c558:	ldr	r0, [pc, #72]	; 2c5a8 <flatcc_builder_create_table@@Base+0x1d8>
   2c55c:	ldr	r1, [pc, #72]	; 2c5ac <flatcc_builder_create_table@@Base+0x1dc>
   2c560:	ldr	r3, [pc, #72]	; 2c5b0 <flatcc_builder_create_table@@Base+0x1e0>
   2c564:	movw	r2, #1243	; 0x4db
   2c568:	add	r0, pc, r0
   2c56c:	add	r1, pc, r1
   2c570:	add	r3, pc, r3
   2c574:	bl	12bbc <__assert_fail@plt>
   2c578:	ldr	r0, [pc, #52]	; 2c5b4 <flatcc_builder_create_table@@Base+0x1e4>
   2c57c:	ldr	r1, [pc, #52]	; 2c5b8 <flatcc_builder_create_table@@Base+0x1e8>
   2c580:	ldr	r3, [pc, #52]	; 2c5bc <flatcc_builder_create_table@@Base+0x1ec>
   2c584:	movw	r2, #647	; 0x287
   2c588:	add	r0, pc, r0
   2c58c:	add	r1, pc, r1
   2c590:	add	r3, pc, r3
   2c594:	bl	12bbc <__assert_fail@plt>
   2c598:	andeq	sl, r1, r8, lsr #23
   2c59c:	andeq	r7, r0, r9, ror #31
   2c5a0:	andeq	r7, r0, r2, ror r8
   2c5a4:	strdeq	r7, [r0], -r3
   2c5a8:	andeq	r8, r0, r7, ror r0
   2c5ac:	andeq	r7, r0, r2, asr r8
   2c5b0:	ldrdeq	r7, [r0], -r3
   2c5b4:	strdeq	r8, [r0], -r3
   2c5b8:	andeq	r7, r0, r2, lsr r8
   2c5bc:	andeq	r8, r0, sl, lsr #17
   2c5c0:	andeq	r8, r0, r3, asr sl
   2c5c4:	muleq	r0, r2, r8
   2c5c8:	andeq	r8, r0, sl, lsl #18

0002c5cc <flatcc_builder_check_required_field@@Base>:
   2c5cc:	ldr	r2, [r0, #32]
   2c5d0:	ldrh	r2, [r2, #14]
   2c5d4:	cmp	r2, #3
   2c5d8:	bne	2c608 <flatcc_builder_check_required_field@@Base+0x3c>
   2c5dc:	ldrh	r3, [r0, #8]
   2c5e0:	mov	r2, #0
   2c5e4:	cmp	r3, r1
   2c5e8:	bls	2c600 <flatcc_builder_check_required_field@@Base+0x34>
   2c5ec:	ldr	r0, [r0, #4]
   2c5f0:	add	r0, r0, r1, lsl #1
   2c5f4:	ldrh	r2, [r0]
   2c5f8:	cmp	r2, #0
   2c5fc:	movwne	r2, #1
   2c600:	mov	r0, r2
   2c604:	bx	lr
   2c608:	push	{fp, lr}
   2c60c:	mov	fp, sp
   2c610:	ldr	r0, [pc, #24]	; 2c630 <flatcc_builder_check_required_field@@Base+0x64>
   2c614:	ldr	r1, [pc, #24]	; 2c634 <flatcc_builder_check_required_field@@Base+0x68>
   2c618:	ldr	r3, [pc, #24]	; 2c638 <flatcc_builder_check_required_field@@Base+0x6c>
   2c61c:	movw	r2, #1272	; 0x4f8
   2c620:	add	r0, pc, r0
   2c624:	add	r1, pc, r1
   2c628:	add	r3, pc, r3
   2c62c:	bl	12bbc <__assert_fail@plt>
   2c630:	andeq	r7, r0, sl, asr #31
   2c634:	muleq	r0, sl, r7
   2c638:	andeq	r7, r0, sp, ror #31

0002c63c <flatcc_builder_check_union_field@@Base>:
   2c63c:	mov	r2, r0
   2c640:	ldr	r0, [r0, #32]
   2c644:	ldrh	r0, [r0, #14]
   2c648:	cmp	r0, #3
   2c64c:	bne	2c6ac <flatcc_builder_check_union_field@@Base+0x70>
   2c650:	cmp	r1, #0
   2c654:	mov	r0, #0
   2c658:	ldrhne	r3, [r2, #8]
   2c65c:	cmpne	r3, r1
   2c660:	bhi	2c668 <flatcc_builder_check_union_field@@Base+0x2c>
   2c664:	bx	lr
   2c668:	ldr	r0, [r2, #4]
   2c66c:	add	r0, r0, r1, lsl #1
   2c670:	ldrh	r1, [r0, #-2]
   2c674:	cmp	r1, #0
   2c678:	beq	2c69c <flatcc_builder_check_union_field@@Base+0x60>
   2c67c:	ldr	r2, [r2, #16]
   2c680:	ldrh	r0, [r0]
   2c684:	ldrb	r1, [r2, r1]
   2c688:	cmp	r1, #0
   2c68c:	beq	2c6a0 <flatcc_builder_check_union_field@@Base+0x64>
   2c690:	cmp	r0, #0
   2c694:	movwne	r0, #1
   2c698:	bx	lr
   2c69c:	ldrh	r0, [r0]
   2c6a0:	clz	r0, r0
   2c6a4:	lsr	r0, r0, #5
   2c6a8:	bx	lr
   2c6ac:	push	{fp, lr}
   2c6b0:	mov	fp, sp
   2c6b4:	ldr	r0, [pc, #24]	; 2c6d4 <flatcc_builder_check_union_field@@Base+0x98>
   2c6b8:	ldr	r1, [pc, #24]	; 2c6d8 <flatcc_builder_check_union_field@@Base+0x9c>
   2c6bc:	ldr	r3, [pc, #24]	; 2c6dc <flatcc_builder_check_union_field@@Base+0xa0>
   2c6c0:	movw	r2, #1279	; 0x4ff
   2c6c4:	add	r0, pc, r0
   2c6c8:	add	r1, pc, r1
   2c6cc:	add	r3, pc, r3
   2c6d0:	bl	12bbc <__assert_fail@plt>
   2c6d4:	andeq	r7, r0, r6, lsr #30
   2c6d8:	strdeq	r7, [r0], -r6
   2c6dc:	muleq	r0, ip, pc	; <UNPREDICTABLE>

0002c6e0 <flatcc_builder_check_required@@Base>:
   2c6e0:	push	{fp, lr}
   2c6e4:	mov	fp, sp
   2c6e8:	mov	r3, r0
   2c6ec:	ldr	r0, [r0, #32]
   2c6f0:	ldrh	r0, [r0, #14]
   2c6f4:	cmp	r0, #3
   2c6f8:	bne	2c750 <flatcc_builder_check_required@@Base+0x70>
   2c6fc:	ldrh	ip, [r3, #8]
   2c700:	mov	r0, #0
   2c704:	cmp	ip, r2
   2c708:	movge	r0, #1
   2c70c:	cmpge	r2, #1
   2c710:	bge	2c718 <flatcc_builder_check_required@@Base+0x38>
   2c714:	pop	{fp, pc}
   2c718:	ldr	ip, [r3, #4]
   2c71c:	mov	lr, #0
   2c720:	b	2c734 <flatcc_builder_check_required@@Base+0x54>
   2c724:	add	lr, lr, #1
   2c728:	add	r1, r1, #2
   2c72c:	cmp	lr, r2
   2c730:	popge	{fp, pc}
   2c734:	ldrh	r3, [r1]
   2c738:	add	r3, ip, r3, lsl #1
   2c73c:	ldrh	r3, [r3]
   2c740:	cmp	r3, #0
   2c744:	bne	2c724 <flatcc_builder_check_required@@Base+0x44>
   2c748:	mov	r0, #0
   2c74c:	pop	{fp, pc}
   2c750:	ldr	r0, [pc, #24]	; 2c770 <flatcc_builder_check_required@@Base+0x90>
   2c754:	ldr	r1, [pc, #24]	; 2c774 <flatcc_builder_check_required@@Base+0x94>
   2c758:	ldr	r3, [pc, #24]	; 2c778 <flatcc_builder_check_required@@Base+0x98>
   2c75c:	movw	r2, #1297	; 0x511
   2c760:	add	r0, pc, r0
   2c764:	add	r1, pc, r1
   2c768:	add	r3, pc, r3
   2c76c:	bl	12bbc <__assert_fail@plt>
   2c770:	andeq	r7, r0, sl, lsl #29
   2c774:	andeq	r7, r0, sl, asr r6
   2c778:	andeq	r7, r0, r0, asr pc

0002c77c <flatcc_builder_end_table@@Base>:
   2c77c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c780:	add	fp, sp, #24
   2c784:	sub	sp, sp, #16
   2c788:	mov	r4, r0
   2c78c:	ldr	r0, [r0, #32]
   2c790:	ldrh	r0, [r0, #14]
   2c794:	cmp	r0, #3
   2c798:	bne	2c914 <flatcc_builder_end_table@@Base+0x198>
   2c79c:	ldrh	r0, [r4, #8]
   2c7a0:	ldr	r5, [r4, #4]
   2c7a4:	mov	r1, #4
   2c7a8:	movw	r2, #31153	; 0x79b1
   2c7ac:	movt	r2, #40503	; 0x9e37
   2c7b0:	add	r0, r1, r0, lsl #1
   2c7b4:	strh	r0, [r5, #-4]!
   2c7b8:	ldrh	r1, [r4, #20]
   2c7bc:	uxth	r6, r0
   2c7c0:	add	r1, r1, #4
   2c7c4:	strh	r1, [r5, #2]
   2c7c8:	uxth	r1, r1
   2c7cc:	ldr	r0, [r4, #12]
   2c7d0:	eor	r0, r0, r6
   2c7d4:	mul	r0, r0, r2
   2c7d8:	eor	r0, r0, r1
   2c7dc:	mov	r1, r5
   2c7e0:	mul	r3, r0, r2
   2c7e4:	mov	r0, r4
   2c7e8:	mov	r2, r6
   2c7ec:	str	r3, [r4, #12]
   2c7f0:	bl	2c054 <flatcc_builder_create_cached_vtable@@Base>
   2c7f4:	cmp	r0, #0
   2c7f8:	beq	2c904 <flatcc_builder_end_table@@Base+0x188>
   2c7fc:	mov	r7, r0
   2c800:	mov	r0, r5
   2c804:	mov	r1, #0
   2c808:	mov	r2, r6
   2c80c:	mov	r8, #0
   2c810:	bl	12b5c <memset@plt>
   2c814:	ldr	r5, [r4, #32]
   2c818:	ldr	r0, [r4, #76]	; 0x4c
   2c81c:	ldr	r6, [r4]
   2c820:	ldrh	r3, [r4, #130]	; 0x82
   2c824:	ldr	r1, [r4, #16]
   2c828:	ldr	r2, [r4, #20]
   2c82c:	ldr	r5, [r5, #20]
   2c830:	add	r0, r0, r5
   2c834:	sub	r6, r6, r0
   2c838:	asr	r6, r6, #1
   2c83c:	stm	sp, {r0, r6, r7}
   2c840:	mov	r0, r4
   2c844:	bl	2c3d0 <flatcc_builder_create_table@@Base>
   2c848:	cmp	r0, #0
   2c84c:	beq	2c908 <flatcc_builder_end_table@@Base+0x18c>
   2c850:	ldr	r1, [r4, #32]
   2c854:	mov	r5, r0
   2c858:	ldr	r0, [r4, #16]
   2c85c:	ldr	r2, [r4, #20]
   2c860:	ldr	r3, [r4, #52]	; 0x34
   2c864:	ldr	r7, [r1, #24]
   2c868:	str	r7, [r4, #12]
   2c86c:	ldrh	r7, [r1, #28]
   2c870:	strh	r7, [r4, #8]
   2c874:	ldr	r7, [r1, #16]
   2c878:	add	r3, r3, r7
   2c87c:	str	r3, [r4, #4]
   2c880:	ldr	r3, [r4, #76]	; 0x4c
   2c884:	ldr	r1, [r1, #20]
   2c888:	add	r1, r3, r1
   2c88c:	str	r1, [r4]
   2c890:	mov	r1, #0
   2c894:	bl	12b5c <memset@plt>
   2c898:	ldr	r0, [r4, #32]
   2c89c:	ldr	r1, [r4, #60]	; 0x3c
   2c8a0:	ldr	r2, [r4, #64]	; 0x40
   2c8a4:	mov	r8, r5
   2c8a8:	ldr	r3, [r0, #8]
   2c8ac:	str	r3, [r4, #20]
   2c8b0:	ldr	r3, [r0]
   2c8b4:	str	r3, [r4, #28]
   2c8b8:	add	r1, r1, r3
   2c8bc:	ldr	r7, [r0, #4]
   2c8c0:	str	r1, [r4, #16]
   2c8c4:	sub	r1, r2, r3
   2c8c8:	cmp	r1, r7
   2c8cc:	movhi	r1, r7
   2c8d0:	str	r1, [r4, #24]
   2c8d4:	ldrh	r1, [r4, #130]	; 0x82
   2c8d8:	ldrh	r2, [r4, #128]	; 0x80
   2c8dc:	cmp	r2, r1
   2c8e0:	strhcc	r1, [r4, #128]	; 0x80
   2c8e4:	ldrh	r1, [r0, #12]
   2c8e8:	sub	r0, r0, #36	; 0x24
   2c8ec:	str	r0, [r4, #32]
   2c8f0:	strh	r1, [r4, #130]	; 0x82
   2c8f4:	ldr	r0, [r4, #156]	; 0x9c
   2c8f8:	sub	r0, r0, #1
   2c8fc:	str	r0, [r4, #156]	; 0x9c
   2c900:	b	2c908 <flatcc_builder_end_table@@Base+0x18c>
   2c904:	mov	r8, #0
   2c908:	mov	r0, r8
   2c90c:	sub	sp, fp, #24
   2c910:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c914:	ldr	r0, [pc, #24]	; 2c934 <flatcc_builder_end_table@@Base+0x1b8>
   2c918:	ldr	r1, [pc, #24]	; 2c938 <flatcc_builder_end_table@@Base+0x1bc>
   2c91c:	ldr	r3, [pc, #24]	; 2c93c <flatcc_builder_end_table@@Base+0x1c0>
   2c920:	movw	r2, #1317	; 0x525
   2c924:	add	r0, pc, r0
   2c928:	add	r1, pc, r1
   2c92c:	add	r3, pc, r3
   2c930:	bl	12bbc <__assert_fail@plt>
   2c934:	andeq	r7, r0, r6, asr #25
   2c938:	muleq	r0, r6, r4
   2c93c:	andeq	r7, r0, r6, ror #27

0002c940 <flatcc_builder_create_vector@@Base>:
   2c940:	push	{r4, r5, r6, r7, fp, lr}
   2c944:	add	fp, sp, #16
   2c948:	sub	sp, sp, #80	; 0x50
   2c94c:	mov	r7, r0
   2c950:	ldr	r0, [fp, #12]
   2c954:	cmp	r2, r0
   2c958:	bhi	2ca58 <flatcc_builder_create_vector@@Base+0x118>
   2c95c:	ldr	r0, [fp, #8]
   2c960:	mov	r4, r2
   2c964:	ldrh	r2, [r7, #128]	; 0x80
   2c968:	mov	r5, #4
   2c96c:	cmp	r0, #4
   2c970:	movls	r0, r5
   2c974:	cmp	r2, r0
   2c978:	sub	r2, fp, #20
   2c97c:	strhcc	r0, [r7, #128]	; 0x80
   2c980:	str	r4, [fp, #-20]	; 0xffffffec
   2c984:	sub	r0, r0, #1
   2c988:	ldr	ip, [r7, #136]	; 0x88
   2c98c:	str	r2, [sp, #12]
   2c990:	mov	r2, #1
   2c994:	str	r5, [sp, #4]
   2c998:	str	r5, [sp, #16]
   2c99c:	str	r2, [sp, #8]
   2c9a0:	mls	r6, r3, r4, ip
   2c9a4:	mul	r3, r3, r4
   2c9a8:	and	r0, r6, r0
   2c9ac:	cmp	r3, #0
   2c9b0:	beq	2c9cc <flatcc_builder_create_vector@@Base+0x8c>
   2c9b4:	mov	r2, #2
   2c9b8:	add	r5, r3, #4
   2c9bc:	str	r1, [sp, #20]
   2c9c0:	str	r3, [sp, #24]
   2c9c4:	str	r2, [sp, #8]
   2c9c8:	str	r5, [sp, #4]
   2c9cc:	cmp	r0, #0
   2c9d0:	beq	2c9fc <flatcc_builder_create_vector@@Base+0xbc>
   2c9d4:	add	r5, r5, r0
   2c9d8:	add	r1, sp, #4
   2c9dc:	str	r5, [sp, #4]
   2c9e0:	add	r1, r1, r2, lsl #3
   2c9e4:	add	r2, r2, #1
   2c9e8:	ldr	r3, [pc, #168]	; 2ca98 <flatcc_builder_create_vector@@Base+0x158>
   2c9ec:	ldr	r3, [pc, r3]
   2c9f0:	str	r3, [r1, #8]
   2c9f4:	str	r0, [r1, #12]
   2c9f8:	str	r2, [sp, #8]
   2c9fc:	cmp	r5, #0
   2ca00:	ble	2ca78 <flatcc_builder_create_vector@@Base+0x138>
   2ca04:	ldr	r0, [r7, #36]	; 0x24
   2ca08:	ldr	r6, [r7, #44]	; 0x2c
   2ca0c:	add	r1, sp, #4
   2ca10:	sub	r4, ip, r5
   2ca14:	str	r5, [sp]
   2ca18:	add	r1, r1, #8
   2ca1c:	mov	r3, r4
   2ca20:	blx	r6
   2ca24:	cmp	r0, #0
   2ca28:	streq	r4, [r7, #136]	; 0x88
   2ca2c:	moveq	r0, r4
   2ca30:	subeq	sp, fp, #16
   2ca34:	popeq	{r4, r5, r6, r7, fp, pc}
   2ca38:	ldr	r0, [pc, #116]	; 2cab4 <flatcc_builder_create_vector@@Base+0x174>
   2ca3c:	ldr	r1, [pc, #116]	; 2cab8 <flatcc_builder_create_vector@@Base+0x178>
   2ca40:	ldr	r3, [pc, #116]	; 2cabc <flatcc_builder_create_vector@@Base+0x17c>
   2ca44:	movw	r2, #651	; 0x28b
   2ca48:	add	r0, pc, r0
   2ca4c:	add	r1, pc, r1
   2ca50:	add	r3, pc, r3
   2ca54:	bl	12bbc <__assert_fail@plt>
   2ca58:	ldr	r0, [pc, #60]	; 2ca9c <flatcc_builder_create_vector@@Base+0x15c>
   2ca5c:	ldr	r1, [pc, #60]	; 2caa0 <flatcc_builder_create_vector@@Base+0x160>
   2ca60:	ldr	r3, [pc, #60]	; 2caa4 <flatcc_builder_create_vector@@Base+0x164>
   2ca64:	movw	r2, #1365	; 0x555
   2ca68:	add	r0, pc, r0
   2ca6c:	add	r1, pc, r1
   2ca70:	add	r3, pc, r3
   2ca74:	bl	12bbc <__assert_fail@plt>
   2ca78:	ldr	r0, [pc, #40]	; 2caa8 <flatcc_builder_create_vector@@Base+0x168>
   2ca7c:	ldr	r1, [pc, #40]	; 2caac <flatcc_builder_create_vector@@Base+0x16c>
   2ca80:	ldr	r3, [pc, #40]	; 2cab0 <flatcc_builder_create_vector@@Base+0x170>
   2ca84:	movw	r2, #647	; 0x287
   2ca88:	add	r0, pc, r0
   2ca8c:	add	r1, pc, r1
   2ca90:	add	r3, pc, r3
   2ca94:	bl	12bbc <__assert_fail@plt>
   2ca98:	andeq	sl, r1, r0, lsl #13
   2ca9c:	andeq	r7, r0, ip, ror #25
   2caa0:	andeq	r7, r0, r2, asr r3
   2caa4:	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>
   2caa8:	strdeq	r8, [r0], -r3
   2caac:	andeq	r7, r0, r2, lsr r3
   2cab0:	andeq	r8, r0, sl, lsr #7
   2cab4:	andeq	r8, r0, r3, lsr r5
   2cab8:	andeq	r7, r0, r2, ror r3
   2cabc:	andeq	r8, r0, sl, ror #7

0002cac0 <flatcc_builder_end_vector@@Base>:
   2cac0:	push	{r4, r5, fp, lr}
   2cac4:	add	fp, sp, #8
   2cac8:	sub	sp, sp, #8
   2cacc:	mov	r4, r0
   2cad0:	ldr	r0, [r0, #32]
   2cad4:	ldrh	r1, [r0, #14]
   2cad8:	cmp	r1, #4
   2cadc:	bne	2cb90 <flatcc_builder_end_vector@@Base+0xd0>
   2cae0:	ldr	r3, [r0, #16]
   2cae4:	ldr	r2, [r0, #20]
   2cae8:	ldr	r0, [r0, #24]
   2caec:	ldr	r1, [r4, #16]
   2caf0:	ldrh	r5, [r4, #130]	; 0x82
   2caf4:	str	r0, [sp, #4]
   2caf8:	mov	r0, r4
   2cafc:	str	r5, [sp]
   2cb00:	bl	2c940 <flatcc_builder_create_vector@@Base>
   2cb04:	mov	r5, r0
   2cb08:	cmp	r0, #0
   2cb0c:	beq	2cb84 <flatcc_builder_end_vector@@Base+0xc4>
   2cb10:	ldr	r0, [r4, #16]
   2cb14:	ldr	r2, [r4, #20]
   2cb18:	mov	r1, #0
   2cb1c:	bl	12b5c <memset@plt>
   2cb20:	ldr	r0, [r4, #32]
   2cb24:	ldr	r1, [r4, #60]	; 0x3c
   2cb28:	ldr	ip, [r4, #64]	; 0x40
   2cb2c:	ldr	r3, [r0, #8]
   2cb30:	str	r3, [r4, #20]
   2cb34:	ldr	r3, [r0]
   2cb38:	str	r3, [r4, #28]
   2cb3c:	add	r1, r1, r3
   2cb40:	ldr	r2, [r0, #4]
   2cb44:	str	r1, [r4, #16]
   2cb48:	sub	r1, ip, r3
   2cb4c:	cmp	r1, r2
   2cb50:	movhi	r1, r2
   2cb54:	str	r1, [r4, #24]
   2cb58:	ldrh	r1, [r4, #130]	; 0x82
   2cb5c:	ldrh	r2, [r4, #128]	; 0x80
   2cb60:	cmp	r2, r1
   2cb64:	strhcc	r1, [r4, #128]	; 0x80
   2cb68:	ldrh	r1, [r0, #12]
   2cb6c:	sub	r0, r0, #36	; 0x24
   2cb70:	str	r0, [r4, #32]
   2cb74:	strh	r1, [r4, #130]	; 0x82
   2cb78:	ldr	r0, [r4, #156]	; 0x9c
   2cb7c:	sub	r0, r0, #1
   2cb80:	str	r0, [r4, #156]	; 0x9c
   2cb84:	mov	r0, r5
   2cb88:	sub	sp, fp, #8
   2cb8c:	pop	{r4, r5, fp, pc}
   2cb90:	ldr	r0, [pc, #24]	; 2cbb0 <flatcc_builder_end_vector@@Base+0xf0>
   2cb94:	ldr	r1, [pc, #24]	; 2cbb4 <flatcc_builder_end_vector@@Base+0xf4>
   2cb98:	ldr	r3, [pc, #24]	; 2cbb8 <flatcc_builder_end_vector@@Base+0xf8>
   2cb9c:	movw	r2, #1400	; 0x578
   2cba0:	add	r0, pc, r0
   2cba4:	add	r1, pc, r1
   2cba8:	add	r3, pc, r3
   2cbac:	bl	12bbc <__assert_fail@plt>
   2cbb0:	andeq	r7, r0, r8, asr r5
   2cbb4:	andeq	r7, r0, sl, lsl r2
   2cbb8:	andeq	r7, r0, r5, lsr ip

0002cbbc <flatcc_builder_vector_count@@Base>:
   2cbbc:	ldr	r0, [r0, #32]
   2cbc0:	ldr	r0, [r0, #20]
   2cbc4:	bx	lr

0002cbc8 <flatcc_builder_vector_edit@@Base>:
   2cbc8:	ldr	r0, [r0, #16]
   2cbcc:	bx	lr

0002cbd0 <flatcc_builder_create_offset_vector_direct@@Base>:
   2cbd0:	mov	r3, #0
   2cbd4:	b	2cbd8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2cbd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2cbdc:	add	fp, sp, #24
   2cbe0:	sub	sp, sp, #80	; 0x50
   2cbe4:	mov	r6, #0
   2cbe8:	cmn	r2, #-1073741823	; 0xc0000001
   2cbec:	bhi	2cd28 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   2cbf0:	mov	r8, r0
   2cbf4:	ldrh	r0, [r0, #128]	; 0x80
   2cbf8:	sub	r7, fp, #28
   2cbfc:	mov	r5, #4
   2cc00:	mov	r4, #1
   2cc04:	cmp	r0, #3
   2cc08:	movls	r0, #4
   2cc0c:	strhls	r0, [r8, #128]	; 0x80
   2cc10:	str	r2, [fp, #-28]	; 0xffffffe4
   2cc14:	ldr	ip, [r8, #136]	; 0x88
   2cc18:	str	r7, [sp, #12]
   2cc1c:	mov	r7, #0
   2cc20:	str	r5, [sp, #4]
   2cc24:	str	r5, [sp, #16]
   2cc28:	str	r4, [sp, #8]
   2cc2c:	cmp	r7, r2, lsl #2
   2cc30:	and	r6, ip, #3
   2cc34:	beq	2cc54 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2cc38:	lsl	r7, r2, #2
   2cc3c:	mov	r4, #2
   2cc40:	str	r1, [sp, #20]
   2cc44:	add	r5, r7, #4
   2cc48:	str	r7, [sp, #24]
   2cc4c:	str	r4, [sp, #8]
   2cc50:	str	r5, [sp, #4]
   2cc54:	cmp	r6, #0
   2cc58:	beq	2cc84 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2cc5c:	add	r5, r5, r6
   2cc60:	add	r7, sp, #4
   2cc64:	str	r5, [sp, #4]
   2cc68:	add	r7, r7, r4, lsl #3
   2cc6c:	add	r4, r4, #1
   2cc70:	ldr	r0, [pc, #348]	; 2cdd4 <flatcc_builder_create_offset_vector_direct@@Base+0x204>
   2cc74:	ldr	r0, [pc, r0]
   2cc78:	str	r0, [r7, #8]
   2cc7c:	str	r6, [r7, #12]
   2cc80:	str	r4, [sp, #8]
   2cc84:	cmp	r2, #0
   2cc88:	beq	2ccf0 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   2cc8c:	mvn	r0, #3
   2cc90:	mov	r6, #0
   2cc94:	sub	r0, r0, ip
   2cc98:	add	r0, r0, r5
   2cc9c:	ldr	r7, [r1, r6, lsl #2]
   2cca0:	cmp	r7, #0
   2cca4:	beq	2ccc8 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   2cca8:	add	r7, r0, r7
   2ccac:	cmp	r3, #0
   2ccb0:	str	r7, [r1, r6, lsl #2]
   2ccb4:	beq	2ccdc <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   2ccb8:	ldrb	r7, [r3, r6]
   2ccbc:	cmp	r7, #0
   2ccc0:	bne	2ccdc <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   2ccc4:	b	2cd34 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   2ccc8:	cmp	r3, #0
   2cccc:	beq	2cd74 <flatcc_builder_create_offset_vector_direct@@Base+0x1a4>
   2ccd0:	ldrb	r7, [r3, r6]
   2ccd4:	cmp	r7, #0
   2ccd8:	bne	2cd54 <flatcc_builder_create_offset_vector_direct@@Base+0x184>
   2ccdc:	add	r6, r6, #1
   2cce0:	sub	r0, r0, #4
   2cce4:	cmp	r6, r2
   2cce8:	bcc	2cc9c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   2ccec:	ldr	ip, [r8, #136]	; 0x88
   2ccf0:	cmp	r5, #0
   2ccf4:	ble	2cd94 <flatcc_builder_create_offset_vector_direct@@Base+0x1c4>
   2ccf8:	ldr	r0, [r8, #36]	; 0x24
   2ccfc:	ldr	r7, [r8, #44]	; 0x2c
   2cd00:	add	r1, sp, #4
   2cd04:	sub	r6, ip, r5
   2cd08:	mov	r2, r4
   2cd0c:	str	r5, [sp]
   2cd10:	add	r1, r1, #8
   2cd14:	mov	r3, r6
   2cd18:	blx	r7
   2cd1c:	cmp	r0, #0
   2cd20:	bne	2cdb4 <flatcc_builder_create_offset_vector_direct@@Base+0x1e4>
   2cd24:	str	r6, [r8, #136]	; 0x88
   2cd28:	mov	r0, r6
   2cd2c:	sub	sp, fp, #24
   2cd30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cd34:	ldr	r0, [pc, #156]	; 2cdd8 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   2cd38:	ldr	r1, [pc, #156]	; 2cddc <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   2cd3c:	ldr	r3, [pc, #156]	; 2cde0 <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   2cd40:	movw	r2, #1457	; 0x5b1
   2cd44:	add	r0, pc, r0
   2cd48:	add	r1, pc, r1
   2cd4c:	add	r3, pc, r3
   2cd50:	bl	12bbc <__assert_fail@plt>
   2cd54:	ldr	r0, [pc, #136]	; 2cde4 <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   2cd58:	ldr	r1, [pc, #136]	; 2cde8 <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   2cd5c:	ldr	r3, [pc, #136]	; 2cdec <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   2cd60:	movw	r2, #1461	; 0x5b5
   2cd64:	add	r0, pc, r0
   2cd68:	add	r1, pc, r1
   2cd6c:	add	r3, pc, r3
   2cd70:	bl	12bbc <__assert_fail@plt>
   2cd74:	ldr	r0, [pc, #116]	; 2cdf0 <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   2cd78:	ldr	r1, [pc, #116]	; 2cdf4 <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   2cd7c:	ldr	r3, [pc, #116]	; 2cdf8 <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   2cd80:	movw	r2, #1463	; 0x5b7
   2cd84:	add	r0, pc, r0
   2cd88:	add	r1, pc, r1
   2cd8c:	add	r3, pc, r3
   2cd90:	bl	12bbc <__assert_fail@plt>
   2cd94:	ldr	r0, [pc, #96]	; 2cdfc <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   2cd98:	ldr	r1, [pc, #96]	; 2ce00 <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   2cd9c:	ldr	r3, [pc, #96]	; 2ce04 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   2cda0:	movw	r2, #647	; 0x287
   2cda4:	add	r0, pc, r0
   2cda8:	add	r1, pc, r1
   2cdac:	add	r3, pc, r3
   2cdb0:	bl	12bbc <__assert_fail@plt>
   2cdb4:	ldr	r0, [pc, #76]	; 2ce08 <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   2cdb8:	ldr	r1, [pc, #76]	; 2ce0c <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   2cdbc:	ldr	r3, [pc, #76]	; 2ce10 <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   2cdc0:	movw	r2, #651	; 0x28b
   2cdc4:	add	r0, pc, r0
   2cdc8:	add	r1, pc, r1
   2cdcc:	add	r3, pc, r3
   2cdd0:	bl	12bbc <__assert_fail@plt>
   2cdd4:	strdeq	sl, [r1], -r8
   2cdd8:	andeq	r8, r0, fp, lsr #4
   2cddc:	andeq	r7, r0, r6, ror r0
   2cde0:	andeq	r8, r0, r1, lsr r2
   2cde4:	muleq	r0, ip, r2
   2cde8:	andeq	r7, r0, r6, asr r0
   2cdec:	andeq	r8, r0, r1, lsl r2
   2cdf0:	strdeq	r8, [r0], -r7
   2cdf4:	andeq	r7, r0, r6, lsr r0
   2cdf8:	strdeq	r8, [r0], -r1
   2cdfc:	ldrdeq	r8, [r0], -r7
   2ce00:	andeq	r7, r0, r6, lsl r0
   2ce04:	andeq	r8, r0, lr, lsl #1
   2ce08:			; <UNDEFINED> instruction: 0x000081b7
   2ce0c:	strdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   2ce10:	andeq	r8, r0, lr, rrx

0002ce14 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2ce14:	push	{r4, r5, fp, lr}
   2ce18:	add	fp, sp, #8
   2ce1c:	mov	r4, r0
   2ce20:	ldr	r0, [r0, #32]
   2ce24:	mov	r3, r1
   2ce28:	ldrh	r1, [r0, #14]
   2ce2c:	cmp	r1, #5
   2ce30:	bne	2cecc <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2ce34:	ldr	r2, [r0, #20]
   2ce38:	ldr	r1, [r4, #16]
   2ce3c:	mov	r0, r4
   2ce40:	bl	2cbd8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ce44:	mov	r5, r0
   2ce48:	cmp	r0, #0
   2ce4c:	beq	2cec4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2ce50:	ldr	r0, [r4, #16]
   2ce54:	ldr	r2, [r4, #20]
   2ce58:	mov	r1, #0
   2ce5c:	bl	12b5c <memset@plt>
   2ce60:	ldr	r0, [r4, #32]
   2ce64:	ldr	r1, [r4, #60]	; 0x3c
   2ce68:	ldr	ip, [r4, #64]	; 0x40
   2ce6c:	ldr	r3, [r0, #8]
   2ce70:	str	r3, [r4, #20]
   2ce74:	ldr	r3, [r0]
   2ce78:	str	r3, [r4, #28]
   2ce7c:	add	r1, r1, r3
   2ce80:	ldr	r2, [r0, #4]
   2ce84:	str	r1, [r4, #16]
   2ce88:	sub	r1, ip, r3
   2ce8c:	cmp	r1, r2
   2ce90:	movhi	r1, r2
   2ce94:	str	r1, [r4, #24]
   2ce98:	ldrh	r1, [r4, #130]	; 0x82
   2ce9c:	ldrh	r2, [r4, #128]	; 0x80
   2cea0:	cmp	r2, r1
   2cea4:	strhcc	r1, [r4, #128]	; 0x80
   2cea8:	ldrh	r1, [r0, #12]
   2ceac:	sub	r0, r0, #36	; 0x24
   2ceb0:	str	r0, [r4, #32]
   2ceb4:	strh	r1, [r4, #130]	; 0x82
   2ceb8:	ldr	r0, [r4, #156]	; 0x9c
   2cebc:	sub	r0, r0, #1
   2cec0:	str	r0, [r4, #156]	; 0x9c
   2cec4:	mov	r0, r5
   2cec8:	pop	{r4, r5, fp, pc}
   2cecc:	ldr	r0, [pc, #24]	; 2ceec <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   2ced0:	ldr	r1, [pc, #24]	; 2cef0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   2ced4:	ldr	r3, [pc, #24]	; 2cef4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   2ced8:	movw	r2, #1493	; 0x5d5
   2cedc:	add	r0, pc, r0
   2cee0:	add	r1, pc, r1
   2cee4:	add	r3, pc, r3
   2cee8:	bl	12bbc <__assert_fail@plt>
   2ceec:	andeq	r7, r0, r5, lsl r3
   2cef0:	ldrdeq	r6, [r0], -lr
   2cef4:	andeq	r7, r0, r6, lsl #19

0002cef8 <flatcc_builder_offset_vector_edit@@Base>:
   2cef8:	ldr	r0, [r0, #16]
   2cefc:	bx	lr

0002cf00 <flatcc_builder_offset_vector_count@@Base>:
   2cf00:	ldr	r0, [r0, #32]
   2cf04:	ldr	r0, [r0, #20]
   2cf08:	bx	lr

0002cf0c <flatcc_builder_table_add_union@@Base>:
   2cf0c:	push	{r4, r5, r6, r7, fp, lr}
   2cf10:	add	fp, sp, #16
   2cf14:	mov	r5, r0
   2cf18:	ldr	r0, [r0, #32]
   2cf1c:	ldrh	r0, [r0, #14]
   2cf20:	cmp	r0, #3
   2cf24:	bne	2cfac <flatcc_builder_table_add_union@@Base+0xa0>
   2cf28:	mov	r7, r3
   2cf2c:	mov	r4, r2
   2cf30:	mov	r6, r1
   2cf34:	cmp	r3, #0
   2cf38:	beq	2cf48 <flatcc_builder_table_add_union@@Base+0x3c>
   2cf3c:	uxtb	r0, r4
   2cf40:	cmp	r0, #0
   2cf44:	beq	2cfcc <flatcc_builder_table_add_union@@Base+0xc0>
   2cf48:	cmp	r7, #0
   2cf4c:	beq	2cf68 <flatcc_builder_table_add_union@@Base+0x5c>
   2cf50:	mov	r0, r5
   2cf54:	mov	r1, r6
   2cf58:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   2cf5c:	cmp	r0, #0
   2cf60:	beq	2cfec <flatcc_builder_table_add_union@@Base+0xe0>
   2cf64:	str	r7, [r0]
   2cf68:	sub	r1, r6, #1
   2cf6c:	mov	r0, r5
   2cf70:	mov	r2, #1
   2cf74:	mov	r3, #1
   2cf78:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   2cf7c:	cmp	r0, #0
   2cf80:	strbne	r4, [r0]
   2cf84:	movne	r0, #0
   2cf88:	popne	{r4, r5, r6, r7, fp, pc}
   2cf8c:	ldr	r0, [pc, #156]	; 2d030 <flatcc_builder_table_add_union@@Base+0x124>
   2cf90:	ldr	r1, [pc, #156]	; 2d034 <flatcc_builder_table_add_union@@Base+0x128>
   2cf94:	ldr	r3, [pc, #156]	; 2d038 <flatcc_builder_table_add_union@@Base+0x12c>
   2cf98:	movw	r2, #1526	; 0x5f6
   2cf9c:	add	r0, pc, r0
   2cfa0:	add	r1, pc, r1
   2cfa4:	add	r3, pc, r3
   2cfa8:	bl	12bbc <__assert_fail@plt>
   2cfac:	ldr	r0, [pc, #88]	; 2d00c <flatcc_builder_table_add_union@@Base+0x100>
   2cfb0:	ldr	r1, [pc, #88]	; 2d010 <flatcc_builder_table_add_union@@Base+0x104>
   2cfb4:	ldr	r3, [pc, #88]	; 2d014 <flatcc_builder_table_add_union@@Base+0x108>
   2cfb8:	movw	r2, #1518	; 0x5ee
   2cfbc:	add	r0, pc, r0
   2cfc0:	add	r1, pc, r1
   2cfc4:	add	r3, pc, r3
   2cfc8:	bl	12bbc <__assert_fail@plt>
   2cfcc:	ldr	r0, [pc, #68]	; 2d018 <flatcc_builder_table_add_union@@Base+0x10c>
   2cfd0:	ldr	r1, [pc, #68]	; 2d01c <flatcc_builder_table_add_union@@Base+0x110>
   2cfd4:	ldr	r3, [pc, #68]	; 2d020 <flatcc_builder_table_add_union@@Base+0x114>
   2cfd8:	movw	r2, #1519	; 0x5ef
   2cfdc:	add	r0, pc, r0
   2cfe0:	add	r1, pc, r1
   2cfe4:	add	r3, pc, r3
   2cfe8:	bl	12bbc <__assert_fail@plt>
   2cfec:	ldr	r0, [pc, #48]	; 2d024 <flatcc_builder_table_add_union@@Base+0x118>
   2cff0:	ldr	r1, [pc, #48]	; 2d028 <flatcc_builder_table_add_union@@Base+0x11c>
   2cff4:	ldr	r3, [pc, #48]	; 2d02c <flatcc_builder_table_add_union@@Base+0x120>
   2cff8:	movw	r2, #1522	; 0x5f2
   2cffc:	add	r0, pc, r0
   2d000:	add	r1, pc, r1
   2d004:	add	r3, pc, r3
   2d008:	bl	12bbc <__assert_fail@plt>
   2d00c:	andeq	r7, r0, lr, lsr #12
   2d010:	strdeq	r6, [r0], -lr
   2d014:	andeq	r7, r0, r8, lsl r9
   2d018:	andeq	r7, r0, r8, asr r9
   2d01c:	ldrdeq	r6, [r0], -lr
   2d020:	strdeq	r7, [r0], -r8
   2d024:	andeq	r7, r0, sl, asr r9
   2d028:			; <UNDEFINED> instruction: 0x00006dbe
   2d02c:	ldrdeq	r7, [r0], -r8
   2d030:	andeq	r7, r0, r4, asr #19
   2d034:	andeq	r6, r0, lr, lsl lr
   2d038:	andeq	r7, r0, r8, lsr r9

0002d03c <flatcc_builder_table_add_offset@@Base>:
   2d03c:	push	{r4, r5, r6, r7, fp, lr}
   2d040:	add	fp, sp, #16
   2d044:	sub	sp, sp, #8
   2d048:	mov	r4, r0
   2d04c:	ldr	r0, [r0, #32]
   2d050:	ldrh	r0, [r0, #14]
   2d054:	cmp	r0, #3
   2d058:	bne	2d16c <flatcc_builder_table_add_offset@@Base+0x130>
   2d05c:	movw	r0, #32765	; 0x7ffd
   2d060:	mov	r5, r1
   2d064:	cmp	r1, r0
   2d068:	bcs	2d18c <flatcc_builder_table_add_offset@@Base+0x150>
   2d06c:	ldr	r0, [r4, #4]
   2d070:	add	r1, r0, r5, lsl #1
   2d074:	ldrh	r1, [r1]
   2d078:	cmp	r1, #0
   2d07c:	bne	2d1ac <flatcc_builder_table_add_offset@@Base+0x170>
   2d080:	ldr	r2, [r4, #20]
   2d084:	ldr	r1, [r4, #12]
   2d088:	ldr	r3, [r4, #24]
   2d08c:	add	r2, r2, #3
   2d090:	eor	r1, r1, r5
   2d094:	bic	r6, r2, #3
   2d098:	movw	r2, #31153	; 0x79b1
   2d09c:	movt	r2, #40503	; 0x9e37
   2d0a0:	add	r7, r6, #4
   2d0a4:	mul	r1, r1, r2
   2d0a8:	cmp	r7, r3
   2d0ac:	str	r7, [r4, #20]
   2d0b0:	eor	r1, r1, #4
   2d0b4:	mul	r1, r1, r2
   2d0b8:	str	r1, [r4, #12]
   2d0bc:	bls	2d130 <flatcc_builder_table_add_offset@@Base+0xf4>
   2d0c0:	ldr	r1, [r4, #28]
   2d0c4:	ldr	r0, [r4, #40]	; 0x28
   2d0c8:	ldr	ip, [r4, #48]	; 0x30
   2d0cc:	mov	r2, #1
   2d0d0:	mov	r3, #1
   2d0d4:	str	r2, [sp]
   2d0d8:	add	r2, r1, r7
   2d0dc:	add	r1, r4, #60	; 0x3c
   2d0e0:	blx	ip
   2d0e4:	mov	r1, r0
   2d0e8:	mov	r0, #0
   2d0ec:	cmp	r1, #0
   2d0f0:	beq	2d0fc <flatcc_builder_table_add_offset@@Base+0xc0>
   2d0f4:	sub	sp, fp, #16
   2d0f8:	pop	{r4, r5, r6, r7, fp, pc}
   2d0fc:	ldr	r0, [r4, #28]
   2d100:	ldr	r2, [r4, #60]	; 0x3c
   2d104:	ldr	r3, [r4, #64]	; 0x40
   2d108:	ldr	r1, [r4, #32]
   2d10c:	add	r2, r2, r0
   2d110:	sub	r0, r3, r0
   2d114:	str	r2, [r4, #16]
   2d118:	movw	r2, #65532	; 0xfffc
   2d11c:	cmp	r0, r2
   2d120:	movcs	r0, r2
   2d124:	str	r0, [r4, #24]
   2d128:	str	r2, [r1, #4]
   2d12c:	ldr	r0, [r4, #4]
   2d130:	uxth	r1, r5
   2d134:	add	r0, r0, r1, lsl #1
   2d138:	strh	r7, [r0]
   2d13c:	ldrh	r0, [r4, #8]
   2d140:	cmp	r0, r1
   2d144:	addls	r0, r5, #1
   2d148:	strhls	r0, [r4, #8]
   2d14c:	ldr	r0, [r4]
   2d150:	add	r1, r0, #2
   2d154:	str	r1, [r4]
   2d158:	strh	r6, [r0]
   2d15c:	ldr	r0, [r4, #16]
   2d160:	add	r0, r0, r6
   2d164:	sub	sp, fp, #16
   2d168:	pop	{r4, r5, r6, r7, fp, pc}
   2d16c:	ldr	r0, [pc, #88]	; 2d1cc <flatcc_builder_table_add_offset@@Base+0x190>
   2d170:	ldr	r1, [pc, #88]	; 2d1d0 <flatcc_builder_table_add_offset@@Base+0x194>
   2d174:	ldr	r3, [pc, #88]	; 2d1d4 <flatcc_builder_table_add_offset@@Base+0x198>
   2d178:	movw	r2, #1811	; 0x713
   2d17c:	add	r0, pc, r0
   2d180:	add	r1, pc, r1
   2d184:	add	r3, pc, r3
   2d188:	bl	12bbc <__assert_fail@plt>
   2d18c:	ldr	r0, [pc, #68]	; 2d1d8 <flatcc_builder_table_add_offset@@Base+0x19c>
   2d190:	ldr	r1, [pc, #68]	; 2d1dc <flatcc_builder_table_add_offset@@Base+0x1a0>
   2d194:	ldr	r3, [pc, #68]	; 2d1e0 <flatcc_builder_table_add_offset@@Base+0x1a4>
   2d198:	movw	r2, #1812	; 0x714
   2d19c:	add	r0, pc, r0
   2d1a0:	add	r1, pc, r1
   2d1a4:	add	r3, pc, r3
   2d1a8:	bl	12bbc <__assert_fail@plt>
   2d1ac:	ldr	r0, [pc, #48]	; 2d1e4 <flatcc_builder_table_add_offset@@Base+0x1a8>
   2d1b0:	ldr	r1, [pc, #48]	; 2d1e8 <flatcc_builder_table_add_offset@@Base+0x1ac>
   2d1b4:	ldr	r3, [pc, #48]	; 2d1ec <flatcc_builder_table_add_offset@@Base+0x1b0>
   2d1b8:	movw	r2, #1819	; 0x71b
   2d1bc:	add	r0, pc, r0
   2d1c0:	add	r1, pc, r1
   2d1c4:	add	r3, pc, r3
   2d1c8:	bl	12bbc <__assert_fail@plt>
   2d1cc:	andeq	r7, r0, lr, ror #8
   2d1d0:	andeq	r6, r0, lr, lsr ip
   2d1d4:	andeq	r7, r0, sl, asr fp
   2d1d8:	andeq	r7, r0, r2, asr #21
   2d1dc:	andeq	r6, r0, lr, lsl ip
   2d1e0:	andeq	r7, r0, sl, lsr fp
   2d1e4:			; <UNDEFINED> instruction: 0x00007dbf
   2d1e8:	strdeq	r6, [r0], -lr
   2d1ec:	andeq	r7, r0, sl, lsl fp

0002d1f0 <flatcc_builder_table_add@@Base>:
   2d1f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d1f4:	add	fp, sp, #24
   2d1f8:	sub	sp, sp, #8
   2d1fc:	mov	r4, r0
   2d200:	ldr	r0, [r0, #32]
   2d204:	ldrh	r0, [r0, #14]
   2d208:	cmp	r0, #3
   2d20c:	bne	2d32c <flatcc_builder_table_add@@Base+0x13c>
   2d210:	movw	r0, #32765	; 0x7ffd
   2d214:	mov	r8, r1
   2d218:	cmp	r1, r0
   2d21c:	bcs	2d34c <flatcc_builder_table_add@@Base+0x15c>
   2d220:	ldrh	r0, [r4, #130]	; 0x82
   2d224:	cmp	r0, r3
   2d228:	strhcc	r3, [r4, #130]	; 0x82
   2d22c:	ldr	r0, [r4, #4]
   2d230:	add	r1, r0, r8, lsl #1
   2d234:	ldrh	r1, [r1]
   2d238:	cmp	r1, #0
   2d23c:	bne	2d36c <flatcc_builder_table_add@@Base+0x17c>
   2d240:	ldr	r1, [r4, #12]
   2d244:	movw	r7, #31153	; 0x79b1
   2d248:	ldr	r6, [r4, #20]
   2d24c:	ldr	r5, [r4, #24]
   2d250:	movt	r7, #40503	; 0x9e37
   2d254:	eor	r1, r1, r8
   2d258:	mul	r1, r1, r7
   2d25c:	eor	r1, r1, r2
   2d260:	mul	r1, r1, r7
   2d264:	str	r1, [r4, #12]
   2d268:	add	r1, r3, r6
   2d26c:	rsb	r3, r3, #0
   2d270:	sub	r1, r1, #1
   2d274:	and	r6, r1, r3
   2d278:	add	r1, r6, r2
   2d27c:	cmp	r1, r5
   2d280:	str	r1, [r4, #20]
   2d284:	bcc	2d2fc <flatcc_builder_table_add@@Base+0x10c>
   2d288:	ldr	r2, [r4, #28]
   2d28c:	ldr	r0, [r4, #40]	; 0x28
   2d290:	ldr	r7, [r4, #48]	; 0x30
   2d294:	mov	r3, #1
   2d298:	str	r3, [sp]
   2d29c:	mov	r3, #1
   2d2a0:	add	r1, r1, r2
   2d2a4:	add	r2, r1, #1
   2d2a8:	add	r1, r4, #60	; 0x3c
   2d2ac:	blx	r7
   2d2b0:	mov	r1, r0
   2d2b4:	mov	r0, #0
   2d2b8:	cmp	r1, #0
   2d2bc:	beq	2d2c8 <flatcc_builder_table_add@@Base+0xd8>
   2d2c0:	sub	sp, fp, #24
   2d2c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d2c8:	ldr	r0, [r4, #28]
   2d2cc:	ldr	r2, [r4, #60]	; 0x3c
   2d2d0:	ldr	r3, [r4, #64]	; 0x40
   2d2d4:	ldr	r1, [r4, #32]
   2d2d8:	add	r2, r2, r0
   2d2dc:	sub	r0, r3, r0
   2d2e0:	str	r2, [r4, #16]
   2d2e4:	movw	r2, #65532	; 0xfffc
   2d2e8:	cmp	r0, r2
   2d2ec:	movcs	r0, r2
   2d2f0:	str	r0, [r4, #24]
   2d2f4:	str	r2, [r1, #4]
   2d2f8:	ldr	r0, [r4, #4]
   2d2fc:	uxth	r1, r8
   2d300:	add	r2, r6, #4
   2d304:	add	r0, r0, r1, lsl #1
   2d308:	strh	r2, [r0]
   2d30c:	ldrh	r0, [r4, #8]
   2d310:	cmp	r0, r1
   2d314:	addls	r0, r8, #1
   2d318:	strhls	r0, [r4, #8]
   2d31c:	ldr	r0, [r4, #16]
   2d320:	add	r0, r0, r6
   2d324:	sub	sp, fp, #24
   2d328:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d32c:	ldr	r0, [pc, #88]	; 2d38c <flatcc_builder_table_add@@Base+0x19c>
   2d330:	ldr	r1, [pc, #88]	; 2d390 <flatcc_builder_table_add@@Base+0x1a0>
   2d334:	ldr	r3, [pc, #88]	; 2d394 <flatcc_builder_table_add@@Base+0x1a4>
   2d338:	movw	r2, #1773	; 0x6ed
   2d33c:	add	r0, pc, r0
   2d340:	add	r1, pc, r1
   2d344:	add	r3, pc, r3
   2d348:	bl	12bbc <__assert_fail@plt>
   2d34c:	ldr	r0, [pc, #68]	; 2d398 <flatcc_builder_table_add@@Base+0x1a8>
   2d350:	ldr	r1, [pc, #68]	; 2d39c <flatcc_builder_table_add@@Base+0x1ac>
   2d354:	ldr	r3, [pc, #68]	; 2d3a0 <flatcc_builder_table_add@@Base+0x1b0>
   2d358:	movw	r2, #1774	; 0x6ee
   2d35c:	add	r0, pc, r0
   2d360:	add	r1, pc, r1
   2d364:	add	r3, pc, r3
   2d368:	bl	12bbc <__assert_fail@plt>
   2d36c:	ldr	r0, [pc, #48]	; 2d3a4 <flatcc_builder_table_add@@Base+0x1b4>
   2d370:	ldr	r1, [pc, #48]	; 2d3a8 <flatcc_builder_table_add@@Base+0x1b8>
   2d374:	ldr	r3, [pc, #48]	; 2d3ac <flatcc_builder_table_add@@Base+0x1bc>
   2d378:	movw	r2, #1784	; 0x6f8
   2d37c:	add	r0, pc, r0
   2d380:	add	r1, pc, r1
   2d384:	add	r3, pc, r3
   2d388:	bl	12bbc <__assert_fail@plt>
   2d38c:	andeq	r7, r0, lr, lsr #5
   2d390:	andeq	r6, r0, lr, ror sl
   2d394:	ldrdeq	r7, [r0], -r0
   2d398:	andeq	r7, r0, r2, lsl #18
   2d39c:	andeq	r6, r0, lr, asr sl
   2d3a0:			; <UNDEFINED> instruction: 0x000078b0
   2d3a4:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2d3a8:	andeq	r6, r0, lr, lsr sl
   2d3ac:	muleq	r0, r0, r8

0002d3b0 <flatcc_builder_table_add_union_vector@@Base>:
   2d3b0:	push	{r4, r5, r6, r7, fp, lr}
   2d3b4:	add	fp, sp, #16
   2d3b8:	mov	r6, r0
   2d3bc:	ldr	r0, [r0, #32]
   2d3c0:	ldrh	r0, [r0, #14]
   2d3c4:	cmp	r0, #3
   2d3c8:	bne	2d430 <flatcc_builder_table_add_union_vector@@Base+0x80>
   2d3cc:	clz	r0, r3
   2d3d0:	mov	r5, r1
   2d3d4:	clz	r1, r2
   2d3d8:	mov	r4, r3
   2d3dc:	mov	r7, r2
   2d3e0:	lsr	r0, r0, #5
   2d3e4:	lsr	r1, r1, #5
   2d3e8:	cmp	r1, r0
   2d3ec:	bne	2d450 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   2d3f0:	cmp	r7, #0
   2d3f4:	beq	2d428 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2d3f8:	sub	r1, r5, #1
   2d3fc:	mov	r0, r6
   2d400:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   2d404:	cmp	r0, #0
   2d408:	beq	2d470 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   2d40c:	str	r7, [r0]
   2d410:	mov	r0, r6
   2d414:	mov	r1, r5
   2d418:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   2d41c:	cmp	r0, #0
   2d420:	beq	2d490 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2d424:	str	r4, [r0]
   2d428:	mov	r0, #0
   2d42c:	pop	{r4, r5, r6, r7, fp, pc}
   2d430:	ldr	r0, [pc, #120]	; 2d4b0 <flatcc_builder_table_add_union_vector@@Base+0x100>
   2d434:	ldr	r1, [pc, #120]	; 2d4b4 <flatcc_builder_table_add_union_vector@@Base+0x104>
   2d438:	ldr	r3, [pc, #120]	; 2d4b8 <flatcc_builder_table_add_union_vector@@Base+0x108>
   2d43c:	mov	r2, #1536	; 0x600
   2d440:	add	r0, pc, r0
   2d444:	add	r1, pc, r1
   2d448:	add	r3, pc, r3
   2d44c:	bl	12bbc <__assert_fail@plt>
   2d450:	ldr	r0, [pc, #100]	; 2d4bc <flatcc_builder_table_add_union_vector@@Base+0x10c>
   2d454:	ldr	r1, [pc, #100]	; 2d4c0 <flatcc_builder_table_add_union_vector@@Base+0x110>
   2d458:	ldr	r3, [pc, #100]	; 2d4c4 <flatcc_builder_table_add_union_vector@@Base+0x114>
   2d45c:	movw	r2, #1537	; 0x601
   2d460:	add	r0, pc, r0
   2d464:	add	r1, pc, r1
   2d468:	add	r3, pc, r3
   2d46c:	bl	12bbc <__assert_fail@plt>
   2d470:	ldr	r0, [pc, #80]	; 2d4c8 <flatcc_builder_table_add_union_vector@@Base+0x118>
   2d474:	ldr	r1, [pc, #80]	; 2d4cc <flatcc_builder_table_add_union_vector@@Base+0x11c>
   2d478:	ldr	r3, [pc, #80]	; 2d4d0 <flatcc_builder_table_add_union_vector@@Base+0x120>
   2d47c:	movw	r2, #1540	; 0x604
   2d480:	add	r0, pc, r0
   2d484:	add	r1, pc, r1
   2d488:	add	r3, pc, r3
   2d48c:	bl	12bbc <__assert_fail@plt>
   2d490:	ldr	r0, [pc, #60]	; 2d4d4 <flatcc_builder_table_add_union_vector@@Base+0x124>
   2d494:	ldr	r1, [pc, #60]	; 2d4d8 <flatcc_builder_table_add_union_vector@@Base+0x128>
   2d498:	ldr	r3, [pc, #60]	; 2d4dc <flatcc_builder_table_add_union_vector@@Base+0x12c>
   2d49c:	movw	r2, #1544	; 0x608
   2d4a0:	add	r0, pc, r0
   2d4a4:	add	r1, pc, r1
   2d4a8:	add	r3, pc, r3
   2d4ac:	bl	12bbc <__assert_fail@plt>
   2d4b0:	andeq	r7, r0, sl, lsr #3
   2d4b4:	andeq	r6, r0, sl, ror r9
   2d4b8:	andeq	r7, r0, r4, lsr #10
   2d4bc:	andeq	r7, r0, pc, ror #10
   2d4c0:	andeq	r6, r0, sl, asr r9
   2d4c4:	andeq	r7, r0, r4, lsl #10
   2d4c8:	ldrdeq	r7, [r0], -r6
   2d4cc:	andeq	r6, r0, sl, lsr r9
   2d4d0:	andeq	r7, r0, r4, ror #9
   2d4d4:			; <UNDEFINED> instruction: 0x000074b6
   2d4d8:	andeq	r6, r0, sl, lsl r9
   2d4dc:	andeq	r7, r0, r4, asr #9

0002d4e0 <flatcc_builder_create_union_vector@@Base>:
   2d4e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d4e4:	add	fp, sp, #28
   2d4e8:	sub	sp, sp, #12
   2d4ec:	mov	r7, #0
   2d4f0:	mov	r4, r1
   2d4f4:	mov	r5, r0
   2d4f8:	mov	sl, r3
   2d4fc:	mov	r9, r2
   2d500:	mov	r6, #4
   2d504:	str	r7, [r0]
   2d508:	str	r7, [r0, #4]
   2d50c:	mov	r0, r1
   2d510:	mov	r1, #4
   2d514:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2d518:	cmp	r0, #0
   2d51c:	beq	2d528 <flatcc_builder_create_union_vector@@Base+0x48>
   2d520:	sub	sp, fp, #28
   2d524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d528:	ldr	r0, [r4, #32]
   2d52c:	mov	r1, #5
   2d530:	str	r6, [r0, #16]
   2d534:	ldr	r0, [r4, #32]
   2d538:	str	r7, [r0, #20]
   2d53c:	ldr	r0, [r4, #32]
   2d540:	strh	r1, [r0, #14]
   2d544:	ldr	r1, [r4, #28]
   2d548:	ldr	r2, [r4, #60]	; 0x3c
   2d54c:	ldr	r3, [r4, #64]	; 0x40
   2d550:	add	r2, r2, r1
   2d554:	sub	r1, r3, r1
   2d558:	str	r2, [r4, #16]
   2d55c:	mvn	r2, #3
   2d560:	cmn	r1, #4
   2d564:	movcs	r1, r2
   2d568:	str	r1, [r4, #24]
   2d56c:	str	r2, [r0, #4]
   2d570:	ldr	r1, [r0, #20]
   2d574:	adds	r1, r1, sl
   2d578:	cmpcc	r1, #1073741824	; 0x40000000
   2d57c:	bcc	2d5a0 <flatcc_builder_create_union_vector@@Base+0xc0>
   2d580:	ldr	r0, [pc, #556]	; 2d7b4 <flatcc_builder_create_union_vector@@Base+0x2d4>
   2d584:	ldr	r1, [pc, #556]	; 2d7b8 <flatcc_builder_create_union_vector@@Base+0x2d8>
   2d588:	ldr	r3, [pc, #556]	; 2d7bc <flatcc_builder_create_union_vector@@Base+0x2dc>
   2d58c:	mov	r2, #892	; 0x37c
   2d590:	add	r0, pc, r0
   2d594:	add	r1, pc, r1
   2d598:	add	r3, pc, r3
   2d59c:	bl	12bbc <__assert_fail@plt>
   2d5a0:	str	r1, [r0, #20]
   2d5a4:	ldr	r7, [r4, #20]
   2d5a8:	ldr	r0, [r4, #24]
   2d5ac:	add	r1, r7, sl, lsl #2
   2d5b0:	cmp	r1, r0
   2d5b4:	str	r1, [r4, #20]
   2d5b8:	bcs	2d5cc <flatcc_builder_create_union_vector@@Base+0xec>
   2d5bc:	ldr	r1, [r4, #16]
   2d5c0:	adds	r2, r1, r7
   2d5c4:	bne	2d634 <flatcc_builder_create_union_vector@@Base+0x154>
   2d5c8:	b	2d520 <flatcc_builder_create_union_vector@@Base+0x40>
   2d5cc:	ldr	r2, [r4, #28]
   2d5d0:	ldr	r0, [r4, #40]	; 0x28
   2d5d4:	ldr	r6, [r4, #48]	; 0x30
   2d5d8:	mov	r3, #1
   2d5dc:	str	r3, [sp]
   2d5e0:	mov	r3, #1
   2d5e4:	add	r1, r1, r2
   2d5e8:	add	r2, r1, #1
   2d5ec:	add	r1, r4, #60	; 0x3c
   2d5f0:	blx	r6
   2d5f4:	cmp	r0, #0
   2d5f8:	bne	2d520 <flatcc_builder_create_union_vector@@Base+0x40>
   2d5fc:	ldr	r0, [r4, #28]
   2d600:	ldr	r1, [r4, #60]	; 0x3c
   2d604:	ldr	r3, [r4, #64]	; 0x40
   2d608:	ldr	r2, [r4, #32]
   2d60c:	add	r1, r1, r0
   2d610:	sub	r0, r3, r0
   2d614:	mvn	r3, #3
   2d618:	cmn	r0, #4
   2d61c:	str	r1, [r4, #16]
   2d620:	movcs	r0, r3
   2d624:	str	r0, [r4, #24]
   2d628:	str	r3, [r2, #4]
   2d62c:	adds	r2, r1, r7
   2d630:	beq	2d520 <flatcc_builder_create_union_vector@@Base+0x40>
   2d634:	ldr	r7, [r4, #20]
   2d638:	add	r2, r7, sl
   2d63c:	cmp	r2, r0
   2d640:	str	r2, [r4, #20]
   2d644:	bcc	2d6a8 <flatcc_builder_create_union_vector@@Base+0x1c8>
   2d648:	ldr	r1, [r4, #28]
   2d64c:	ldr	r0, [r4, #40]	; 0x28
   2d650:	ldr	r6, [r4, #48]	; 0x30
   2d654:	mov	r3, #1
   2d658:	str	r3, [sp]
   2d65c:	mov	r3, #1
   2d660:	add	r1, r2, r1
   2d664:	add	r2, r1, #1
   2d668:	add	r1, r4, #60	; 0x3c
   2d66c:	blx	r6
   2d670:	cmp	r0, #0
   2d674:	bne	2d520 <flatcc_builder_create_union_vector@@Base+0x40>
   2d678:	ldr	r0, [r4, #28]
   2d67c:	ldr	r1, [r4, #60]	; 0x3c
   2d680:	ldr	r3, [r4, #64]	; 0x40
   2d684:	ldr	r2, [r4, #32]
   2d688:	add	r1, r1, r0
   2d68c:	sub	r0, r3, r0
   2d690:	mvn	r3, #3
   2d694:	cmn	r0, #4
   2d698:	str	r1, [r4, #16]
   2d69c:	movcs	r0, r3
   2d6a0:	str	r0, [r4, #24]
   2d6a4:	str	r3, [r2, #4]
   2d6a8:	adds	r8, r1, r7
   2d6ac:	beq	2d520 <flatcc_builder_create_union_vector@@Base+0x40>
   2d6b0:	cmp	sl, #0
   2d6b4:	beq	2d6e4 <flatcc_builder_create_union_vector@@Base+0x204>
   2d6b8:	add	r0, r9, #4
   2d6bc:	mov	r2, sl
   2d6c0:	mov	r3, r1
   2d6c4:	mov	r7, r8
   2d6c8:	ldrb	r6, [r0, #-4]
   2d6cc:	subs	r2, r2, #1
   2d6d0:	strb	r6, [r7], #1
   2d6d4:	ldr	r6, [r0]
   2d6d8:	add	r0, r0, #8
   2d6dc:	str	r6, [r3], #4
   2d6e0:	bne	2d6c8 <flatcc_builder_create_union_vector@@Base+0x1e8>
   2d6e4:	mov	r0, r4
   2d6e8:	mov	r2, sl
   2d6ec:	mov	r3, r8
   2d6f0:	bl	2cbd8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d6f4:	mov	r7, r0
   2d6f8:	mov	r9, #0
   2d6fc:	cmp	r0, #0
   2d700:	beq	2d72c <flatcc_builder_create_union_vector@@Base+0x24c>
   2d704:	mvn	r0, #0
   2d708:	mov	r1, #1
   2d70c:	mov	r2, sl
   2d710:	mov	r3, #1
   2d714:	str	r1, [sp]
   2d718:	str	r0, [sp, #4]
   2d71c:	mov	r0, r4
   2d720:	mov	r1, r8
   2d724:	bl	2c940 <flatcc_builder_create_vector@@Base>
   2d728:	b	2d730 <flatcc_builder_create_union_vector@@Base+0x250>
   2d72c:	mov	r0, #0
   2d730:	orr	r1, r9, r7
   2d734:	stm	r5, {r0, r1}
   2d738:	mov	r1, #0
   2d73c:	ldr	r0, [r4, #16]
   2d740:	ldr	r2, [r4, #20]
   2d744:	bl	12b5c <memset@plt>
   2d748:	ldr	r0, [r4, #32]
   2d74c:	ldr	r1, [r4, #60]	; 0x3c
   2d750:	ldr	r2, [r4, #64]	; 0x40
   2d754:	ldr	r3, [r0, #8]
   2d758:	str	r3, [r4, #20]
   2d75c:	ldr	r3, [r0]
   2d760:	str	r3, [r4, #28]
   2d764:	add	r1, r1, r3
   2d768:	ldr	r7, [r0, #4]
   2d76c:	str	r1, [r4, #16]
   2d770:	sub	r1, r2, r3
   2d774:	cmp	r1, r7
   2d778:	movhi	r1, r7
   2d77c:	str	r1, [r4, #24]
   2d780:	ldrh	r1, [r4, #130]	; 0x82
   2d784:	ldrh	r2, [r4, #128]	; 0x80
   2d788:	cmp	r2, r1
   2d78c:	strhcc	r1, [r4, #128]	; 0x80
   2d790:	ldrh	r1, [r0, #12]
   2d794:	sub	r0, r0, #36	; 0x24
   2d798:	str	r0, [r4, #32]
   2d79c:	strh	r1, [r4, #130]	; 0x82
   2d7a0:	ldr	r0, [r4, #156]	; 0x9c
   2d7a4:	sub	r0, r0, #1
   2d7a8:	str	r0, [r4, #156]	; 0x9c
   2d7ac:	sub	sp, fp, #28
   2d7b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d7b4:	strdeq	r7, [r0], -r4
   2d7b8:	andeq	r6, r0, sl, lsr #16
   2d7bc:	andeq	r7, r0, r7, lsl #18

0002d7c0 <flatcc_builder_create_union_vector_direct@@Base>:
   2d7c0:	push	{r4, r5, r6, r7, fp, lr}
   2d7c4:	add	fp, sp, #16
   2d7c8:	sub	sp, sp, #8
   2d7cc:	ldr	r7, [fp, #8]
   2d7d0:	mov	r5, r2
   2d7d4:	mov	r4, r0
   2d7d8:	mov	r0, #0
   2d7dc:	mov	r6, r1
   2d7e0:	str	r0, [r4]
   2d7e4:	str	r0, [r4, #4]
   2d7e8:	mov	r0, r1
   2d7ec:	mov	r1, r3
   2d7f0:	mov	r3, r5
   2d7f4:	mov	r2, r7
   2d7f8:	bl	2cbd8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d7fc:	cmp	r0, #0
   2d800:	str	r0, [r4, #4]
   2d804:	beq	2d830 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2d808:	mvn	r0, #0
   2d80c:	mov	r1, #1
   2d810:	mov	r2, r7
   2d814:	mov	r3, #1
   2d818:	str	r1, [sp]
   2d81c:	str	r0, [sp, #4]
   2d820:	mov	r0, r6
   2d824:	mov	r1, r5
   2d828:	bl	2c940 <flatcc_builder_create_vector@@Base>
   2d82c:	str	r0, [r4]
   2d830:	sub	sp, fp, #16
   2d834:	pop	{r4, r5, r6, r7, fp, pc}

0002d838 <flatcc_builder_start_union_vector@@Base>:
   2d838:	push	{r4, sl, fp, lr}
   2d83c:	add	fp, sp, #8
   2d840:	mov	r1, #4
   2d844:	mov	r4, r0
   2d848:	bl	2a834 <flatcc_builder_start_buffer@@Base+0xc0>
   2d84c:	mov	r1, r0
   2d850:	mvn	r0, #0
   2d854:	cmp	r1, #0
   2d858:	popne	{r4, sl, fp, pc}
   2d85c:	ldr	r0, [r4, #32]
   2d860:	mov	r1, #8
   2d864:	mov	r2, #7
   2d868:	str	r1, [r0, #16]
   2d86c:	mov	r0, #0
   2d870:	ldr	r1, [r4, #32]
   2d874:	str	r0, [r1, #20]
   2d878:	ldr	r1, [r4, #32]
   2d87c:	strh	r2, [r1, #14]
   2d880:	ldr	r2, [r4, #28]
   2d884:	ldr	r3, [r4, #60]	; 0x3c
   2d888:	ldr	ip, [r4, #64]	; 0x40
   2d88c:	add	r3, r3, r2
   2d890:	sub	r2, ip, r2
   2d894:	str	r3, [r4, #16]
   2d898:	mvn	r3, #3
   2d89c:	cmn	r2, #4
   2d8a0:	movcs	r2, r3
   2d8a4:	str	r2, [r4, #24]
   2d8a8:	str	r3, [r1, #4]
   2d8ac:	pop	{r4, sl, fp, pc}

0002d8b0 <flatcc_builder_end_union_vector@@Base>:
   2d8b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d8b4:	add	fp, sp, #28
   2d8b8:	sub	sp, sp, #12
   2d8bc:	mov	sl, r0
   2d8c0:	mov	r0, #0
   2d8c4:	mov	r4, r1
   2d8c8:	str	r0, [sl]
   2d8cc:	str	r0, [sl, #4]
   2d8d0:	ldr	r0, [r1, #32]
   2d8d4:	ldrh	r1, [r0, #14]
   2d8d8:	cmp	r1, #7
   2d8dc:	bne	2da80 <flatcc_builder_end_union_vector@@Base+0x1d0>
   2d8e0:	ldr	r6, [r0, #20]
   2d8e4:	ldr	r7, [r4, #20]
   2d8e8:	ldr	r2, [r4, #24]
   2d8ec:	add	r0, r6, r6, lsl #2
   2d8f0:	add	r1, r7, r0
   2d8f4:	cmp	r1, r2
   2d8f8:	str	r1, [r4, #20]
   2d8fc:	bcs	2d910 <flatcc_builder_end_union_vector@@Base+0x60>
   2d900:	ldr	r0, [r4, #16]
   2d904:	adds	r1, r0, r7
   2d908:	bne	2d978 <flatcc_builder_end_union_vector@@Base+0xc8>
   2d90c:	b	2da78 <flatcc_builder_end_union_vector@@Base+0x1c8>
   2d910:	ldr	r2, [r4, #28]
   2d914:	ldr	r0, [r4, #40]	; 0x28
   2d918:	ldr	r5, [r4, #48]	; 0x30
   2d91c:	mov	r3, #1
   2d920:	str	r3, [sp]
   2d924:	mov	r3, #1
   2d928:	add	r1, r1, r2
   2d92c:	add	r2, r1, #1
   2d930:	add	r1, r4, #60	; 0x3c
   2d934:	blx	r5
   2d938:	cmp	r0, #0
   2d93c:	bne	2da78 <flatcc_builder_end_union_vector@@Base+0x1c8>
   2d940:	ldr	r1, [r4, #28]
   2d944:	ldr	r0, [r4, #60]	; 0x3c
   2d948:	ldr	r3, [r4, #64]	; 0x40
   2d94c:	ldr	r2, [r4, #32]
   2d950:	add	r0, r0, r1
   2d954:	sub	r1, r3, r1
   2d958:	mvn	r3, #3
   2d95c:	cmn	r1, #4
   2d960:	str	r0, [r4, #16]
   2d964:	movcs	r1, r3
   2d968:	str	r1, [r4, #24]
   2d96c:	str	r3, [r2, #4]
   2d970:	adds	r1, r0, r7
   2d974:	beq	2da78 <flatcc_builder_end_union_vector@@Base+0x1c8>
   2d978:	add	r8, r1, r6, lsl #2
   2d97c:	cmp	r6, #0
   2d980:	beq	2d9b0 <flatcc_builder_end_union_vector@@Base+0x100>
   2d984:	add	r0, r0, #4
   2d988:	mov	r2, r6
   2d98c:	mov	r3, r1
   2d990:	mov	r7, r8
   2d994:	ldrb	r5, [r0, #-4]
   2d998:	subs	r2, r2, #1
   2d99c:	strb	r5, [r7], #1
   2d9a0:	ldr	r5, [r0]
   2d9a4:	add	r0, r0, #8
   2d9a8:	str	r5, [r3], #4
   2d9ac:	bne	2d994 <flatcc_builder_end_union_vector@@Base+0xe4>
   2d9b0:	mov	r0, r4
   2d9b4:	mov	r2, r6
   2d9b8:	mov	r3, r8
   2d9bc:	bl	2cbd8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d9c0:	mov	r7, r0
   2d9c4:	mov	r9, #0
   2d9c8:	cmp	r0, #0
   2d9cc:	beq	2d9f8 <flatcc_builder_end_union_vector@@Base+0x148>
   2d9d0:	mvn	r0, #0
   2d9d4:	mov	r1, #1
   2d9d8:	mov	r2, r6
   2d9dc:	mov	r3, #1
   2d9e0:	str	r1, [sp]
   2d9e4:	str	r0, [sp, #4]
   2d9e8:	mov	r0, r4
   2d9ec:	mov	r1, r8
   2d9f0:	bl	2c940 <flatcc_builder_create_vector@@Base>
   2d9f4:	b	2d9fc <flatcc_builder_end_union_vector@@Base+0x14c>
   2d9f8:	mov	r0, #0
   2d9fc:	orr	r1, r9, r7
   2da00:	stm	sl, {r0, r1}
   2da04:	mov	r1, #0
   2da08:	ldr	r0, [r4, #16]
   2da0c:	ldr	r2, [r4, #20]
   2da10:	bl	12b5c <memset@plt>
   2da14:	ldr	r0, [r4, #32]
   2da18:	ldr	r1, [r4, #60]	; 0x3c
   2da1c:	ldr	r2, [r4, #64]	; 0x40
   2da20:	ldr	r3, [r0, #8]
   2da24:	str	r3, [r4, #20]
   2da28:	ldr	r3, [r0]
   2da2c:	str	r3, [r4, #28]
   2da30:	add	r1, r1, r3
   2da34:	ldr	r7, [r0, #4]
   2da38:	str	r1, [r4, #16]
   2da3c:	sub	r1, r2, r3
   2da40:	cmp	r1, r7
   2da44:	movhi	r1, r7
   2da48:	str	r1, [r4, #24]
   2da4c:	ldrh	r1, [r4, #130]	; 0x82
   2da50:	ldrh	r2, [r4, #128]	; 0x80
   2da54:	cmp	r2, r1
   2da58:	strhcc	r1, [r4, #128]	; 0x80
   2da5c:	ldrh	r1, [r0, #12]
   2da60:	sub	r0, r0, #36	; 0x24
   2da64:	str	r0, [r4, #32]
   2da68:	strh	r1, [r4, #130]	; 0x82
   2da6c:	ldr	r0, [r4, #156]	; 0x9c
   2da70:	sub	r0, r0, #1
   2da74:	str	r0, [r4, #156]	; 0x9c
   2da78:	sub	sp, fp, #28
   2da7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2da80:	ldr	r0, [pc, #24]	; 2daa0 <flatcc_builder_end_union_vector@@Base+0x1f0>
   2da84:	ldr	r1, [pc, #24]	; 2daa4 <flatcc_builder_end_union_vector@@Base+0x1f4>
   2da88:	ldr	r3, [pc, #24]	; 2daa8 <flatcc_builder_end_union_vector@@Base+0x1f8>
   2da8c:	movw	r2, #1617	; 0x651
   2da90:	add	r0, pc, r0
   2da94:	add	r1, pc, r1
   2da98:	add	r3, pc, r3
   2da9c:	bl	12bbc <__assert_fail@plt>
   2daa0:	andeq	r6, r0, r7, ror #30
   2daa4:	andeq	r6, r0, sl, lsr #6
   2daa8:	muleq	r0, r1, pc	; <UNPREDICTABLE>

0002daac <flatcc_builder_union_vector_count@@Base>:
   2daac:	ldr	r0, [r0, #32]
   2dab0:	ldr	r0, [r0, #20]
   2dab4:	bx	lr

0002dab8 <flatcc_builder_union_vector_edit@@Base>:
   2dab8:	ldr	r0, [r0, #16]
   2dabc:	bx	lr

0002dac0 <flatcc_builder_extend_union_vector@@Base>:
   2dac0:	push	{r4, r5, fp, lr}
   2dac4:	add	fp, sp, #8
   2dac8:	sub	sp, sp, #8
   2dacc:	mov	r4, r0
   2dad0:	ldr	r0, [r0, #32]
   2dad4:	ldr	r2, [r0, #20]
   2dad8:	adds	r2, r2, r1
   2dadc:	cmpcc	r2, #536870912	; 0x20000000
   2dae0:	bcc	2db04 <flatcc_builder_extend_union_vector@@Base+0x44>
   2dae4:	ldr	r0, [pc, #184]	; 2dba4 <flatcc_builder_extend_union_vector@@Base+0xe4>
   2dae8:	ldr	r1, [pc, #184]	; 2dba8 <flatcc_builder_extend_union_vector@@Base+0xe8>
   2daec:	ldr	r3, [pc, #184]	; 2dbac <flatcc_builder_extend_union_vector@@Base+0xec>
   2daf0:	mov	r2, #892	; 0x37c
   2daf4:	add	r0, pc, r0
   2daf8:	add	r1, pc, r1
   2dafc:	add	r3, pc, r3
   2db00:	bl	12bbc <__assert_fail@plt>
   2db04:	str	r2, [r0, #20]
   2db08:	ldr	r5, [r4, #20]
   2db0c:	ldr	r0, [r4, #24]
   2db10:	add	r1, r5, r1, lsl #3
   2db14:	cmp	r1, r0
   2db18:	str	r1, [r4, #20]
   2db1c:	bcs	2db28 <flatcc_builder_extend_union_vector@@Base+0x68>
   2db20:	ldr	r0, [r4, #16]
   2db24:	b	2db98 <flatcc_builder_extend_union_vector@@Base+0xd8>
   2db28:	ldr	r2, [r4, #28]
   2db2c:	ldr	r0, [r4, #40]	; 0x28
   2db30:	ldr	ip, [r4, #48]	; 0x30
   2db34:	mov	r3, #1
   2db38:	str	r3, [sp]
   2db3c:	mov	r3, #1
   2db40:	add	r1, r1, r2
   2db44:	add	r2, r1, #1
   2db48:	add	r1, r4, #60	; 0x3c
   2db4c:	blx	ip
   2db50:	mov	r1, r0
   2db54:	mov	r0, #0
   2db58:	cmp	r1, #0
   2db5c:	beq	2db68 <flatcc_builder_extend_union_vector@@Base+0xa8>
   2db60:	sub	sp, fp, #8
   2db64:	pop	{r4, r5, fp, pc}
   2db68:	ldr	r1, [r4, #28]
   2db6c:	ldr	r0, [r4, #60]	; 0x3c
   2db70:	ldr	r3, [r4, #64]	; 0x40
   2db74:	ldr	r2, [r4, #32]
   2db78:	add	r0, r0, r1
   2db7c:	sub	r1, r3, r1
   2db80:	mvn	r3, #3
   2db84:	cmn	r1, #4
   2db88:	str	r0, [r4, #16]
   2db8c:	movcs	r1, r3
   2db90:	str	r1, [r4, #24]
   2db94:	str	r3, [r2, #4]
   2db98:	add	r0, r0, r5
   2db9c:	sub	sp, fp, #8
   2dba0:	pop	{r4, r5, fp, pc}
   2dba4:	muleq	r0, r0, r3
   2dba8:	andeq	r6, r0, r6, asr #5
   2dbac:	andeq	r7, r0, r3, lsr #7

0002dbb0 <flatcc_builder_truncate_union_vector@@Base>:
   2dbb0:	push	{fp, lr}
   2dbb4:	mov	fp, sp
   2dbb8:	ldr	r2, [r0, #32]
   2dbbc:	ldrh	r3, [r2, #14]
   2dbc0:	cmp	r3, #7
   2dbc4:	bne	2dc0c <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2dbc8:	ldr	r3, [r2, #20]
   2dbcc:	cmp	r3, r1
   2dbd0:	bcc	2dc2c <flatcc_builder_truncate_union_vector@@Base+0x7c>
   2dbd4:	sub	r3, r3, r1
   2dbd8:	str	r3, [r2, #20]
   2dbdc:	ldr	r2, [r0, #32]
   2dbe0:	ldr	r3, [r0, #20]
   2dbe4:	ldr	ip, [r0, #16]
   2dbe8:	ldr	r2, [r2, #16]
   2dbec:	mls	r3, r2, r1, r3
   2dbf0:	mul	r2, r2, r1
   2dbf4:	mov	r1, #0
   2dbf8:	str	r3, [r0, #20]
   2dbfc:	add	r0, ip, r3
   2dc00:	bl	12b5c <memset@plt>
   2dc04:	mov	r0, #0
   2dc08:	pop	{fp, pc}
   2dc0c:	ldr	r0, [pc, #56]	; 2dc4c <flatcc_builder_truncate_union_vector@@Base+0x9c>
   2dc10:	ldr	r1, [pc, #56]	; 2dc50 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   2dc14:	ldr	r3, [pc, #56]	; 2dc54 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   2dc18:	movw	r2, #1665	; 0x681
   2dc1c:	add	r0, pc, r0
   2dc20:	add	r1, pc, r1
   2dc24:	add	r3, pc, r3
   2dc28:	bl	12bbc <__assert_fail@plt>
   2dc2c:	ldr	r0, [pc, #36]	; 2dc58 <flatcc_builder_truncate_union_vector@@Base+0xa8>
   2dc30:	ldr	r1, [pc, #36]	; 2dc5c <flatcc_builder_truncate_union_vector@@Base+0xac>
   2dc34:	ldr	r3, [pc, #36]	; 2dc60 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   2dc38:	movw	r2, #1666	; 0x682
   2dc3c:	add	r0, pc, r0
   2dc40:	add	r1, pc, r1
   2dc44:	add	r3, pc, r3
   2dc48:	bl	12bbc <__assert_fail@plt>
   2dc4c:	ldrdeq	r6, [r0], -fp
   2dc50:	muleq	r0, lr, r1
   2dc54:	andeq	r6, r0, r8, asr lr
   2dc58:	andeq	r6, r0, pc, lsl r8
   2dc5c:	andeq	r6, r0, lr, ror r1
   2dc60:	andeq	r6, r0, r8, lsr lr

0002dc64 <flatcc_builder_union_vector_push@@Base>:
   2dc64:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2dc68:	add	fp, sp, #24
   2dc6c:	sub	sp, sp, #8
   2dc70:	mov	r7, r0
   2dc74:	ldr	r0, [r0, #32]
   2dc78:	mov	r9, r1
   2dc7c:	ldrh	r1, [r0, #14]
   2dc80:	cmp	r1, #7
   2dc84:	bne	2dd40 <flatcc_builder_union_vector_push@@Base+0xdc>
   2dc88:	ldr	r1, [r0, #20]
   2dc8c:	mov	r6, #0
   2dc90:	cmn	r1, #-536870911	; 0xe0000001
   2dc94:	beq	2dd34 <flatcc_builder_union_vector_push@@Base+0xd0>
   2dc98:	add	r1, r1, #1
   2dc9c:	mov	r8, r2
   2dca0:	str	r1, [r0, #20]
   2dca4:	ldr	r4, [r7, #20]
   2dca8:	ldr	r0, [r7, #24]
   2dcac:	add	r1, r4, #8
   2dcb0:	cmp	r1, r0
   2dcb4:	str	r1, [r7, #20]
   2dcb8:	bcs	2dcc4 <flatcc_builder_union_vector_push@@Base+0x60>
   2dcbc:	ldr	r0, [r7, #16]
   2dcc0:	b	2dd24 <flatcc_builder_union_vector_push@@Base+0xc0>
   2dcc4:	ldr	r1, [r7, #28]
   2dcc8:	ldr	r0, [r7, #40]	; 0x28
   2dccc:	ldr	r5, [r7, #48]	; 0x30
   2dcd0:	mov	r2, #1
   2dcd4:	mov	r3, #1
   2dcd8:	str	r2, [sp]
   2dcdc:	add	r1, r4, r1
   2dce0:	add	r2, r1, #9
   2dce4:	add	r1, r7, #60	; 0x3c
   2dce8:	blx	r5
   2dcec:	cmp	r0, #0
   2dcf0:	bne	2dd34 <flatcc_builder_union_vector_push@@Base+0xd0>
   2dcf4:	ldr	r1, [r7, #28]
   2dcf8:	ldr	r0, [r7, #60]	; 0x3c
   2dcfc:	ldr	r3, [r7, #64]	; 0x40
   2dd00:	ldr	r2, [r7, #32]
   2dd04:	add	r0, r0, r1
   2dd08:	sub	r1, r3, r1
   2dd0c:	mvn	r3, #3
   2dd10:	cmn	r1, #4
   2dd14:	str	r0, [r7, #16]
   2dd18:	movcs	r1, r3
   2dd1c:	str	r1, [r7, #24]
   2dd20:	str	r3, [r2, #4]
   2dd24:	adds	r0, r0, r4
   2dd28:	movne	r6, r0
   2dd2c:	strne	r9, [r0]
   2dd30:	strne	r8, [r0, #4]
   2dd34:	mov	r0, r6
   2dd38:	sub	sp, fp, #24
   2dd3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2dd40:	ldr	r0, [pc, #24]	; 2dd60 <flatcc_builder_union_vector_push@@Base+0xfc>
   2dd44:	ldr	r1, [pc, #24]	; 2dd64 <flatcc_builder_union_vector_push@@Base+0x100>
   2dd48:	ldr	r3, [pc, #24]	; 2dd68 <flatcc_builder_union_vector_push@@Base+0x104>
   2dd4c:	movw	r2, #1677	; 0x68d
   2dd50:	add	r0, pc, r0
   2dd54:	add	r1, pc, r1
   2dd58:	add	r3, pc, r3
   2dd5c:	bl	12bbc <__assert_fail@plt>
   2dd60:	andeq	r6, r0, r7, lsr #25
   2dd64:	andeq	r6, r0, sl, rrx
   2dd68:	andeq	r6, r0, r9, ror #26

0002dd6c <flatcc_builder_append_union_vector@@Base>:
   2dd6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2dd70:	add	fp, sp, #24
   2dd74:	sub	sp, sp, #8
   2dd78:	mov	r6, r0
   2dd7c:	ldr	r0, [r0, #32]
   2dd80:	mov	r8, r1
   2dd84:	ldrh	r1, [r0, #14]
   2dd88:	cmp	r1, #7
   2dd8c:	bne	2de7c <flatcc_builder_append_union_vector@@Base+0x110>
   2dd90:	ldr	r1, [r0, #20]
   2dd94:	mov	r5, r2
   2dd98:	adds	r1, r1, r2
   2dd9c:	cmpcc	r1, #536870912	; 0x20000000
   2dda0:	bcc	2ddc4 <flatcc_builder_append_union_vector@@Base+0x58>
   2dda4:	ldr	r0, [pc, #252]	; 2dea8 <flatcc_builder_append_union_vector@@Base+0x13c>
   2dda8:	ldr	r1, [pc, #252]	; 2deac <flatcc_builder_append_union_vector@@Base+0x140>
   2ddac:	ldr	r3, [pc, #252]	; 2deb0 <flatcc_builder_append_union_vector@@Base+0x144>
   2ddb0:	mov	r2, #892	; 0x37c
   2ddb4:	add	r0, pc, r0
   2ddb8:	add	r1, pc, r1
   2ddbc:	add	r3, pc, r3
   2ddc0:	bl	12bbc <__assert_fail@plt>
   2ddc4:	str	r1, [r0, #20]
   2ddc8:	ldr	r4, [r6, #20]
   2ddcc:	ldr	r0, [r6, #24]
   2ddd0:	add	r1, r4, r5, lsl #3
   2ddd4:	cmp	r1, r0
   2ddd8:	str	r1, [r6, #20]
   2dddc:	bcs	2de00 <flatcc_builder_append_union_vector@@Base+0x94>
   2dde0:	ldr	r0, [r6, #16]
   2dde4:	adds	r7, r0, r4
   2dde8:	beq	2de6c <flatcc_builder_append_union_vector@@Base+0x100>
   2ddec:	lsl	r2, r5, #3
   2ddf0:	mov	r0, r7
   2ddf4:	mov	r1, r8
   2ddf8:	bl	12aa8 <memcpy@plt>
   2ddfc:	b	2de70 <flatcc_builder_append_union_vector@@Base+0x104>
   2de00:	ldr	r2, [r6, #28]
   2de04:	ldr	r0, [r6, #40]	; 0x28
   2de08:	ldr	r7, [r6, #48]	; 0x30
   2de0c:	mov	r3, #1
   2de10:	str	r3, [sp]
   2de14:	mov	r3, #1
   2de18:	add	r1, r1, r2
   2de1c:	add	r2, r1, #1
   2de20:	add	r1, r6, #60	; 0x3c
   2de24:	blx	r7
   2de28:	mov	r7, #0
   2de2c:	cmp	r0, #0
   2de30:	bne	2de70 <flatcc_builder_append_union_vector@@Base+0x104>
   2de34:	ldr	r1, [r6, #28]
   2de38:	ldr	r0, [r6, #60]	; 0x3c
   2de3c:	ldr	r3, [r6, #64]	; 0x40
   2de40:	ldr	r2, [r6, #32]
   2de44:	add	r0, r0, r1
   2de48:	sub	r1, r3, r1
   2de4c:	mvn	r3, #3
   2de50:	cmn	r1, #4
   2de54:	str	r0, [r6, #16]
   2de58:	movcs	r1, r3
   2de5c:	str	r1, [r6, #24]
   2de60:	str	r3, [r2, #4]
   2de64:	adds	r7, r0, r4
   2de68:	bne	2ddec <flatcc_builder_append_union_vector@@Base+0x80>
   2de6c:	mov	r7, #0
   2de70:	mov	r0, r7
   2de74:	sub	sp, fp, #24
   2de78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2de7c:	ldr	r0, [pc, #24]	; 2de9c <flatcc_builder_append_union_vector@@Base+0x130>
   2de80:	ldr	r1, [pc, #24]	; 2dea0 <flatcc_builder_append_union_vector@@Base+0x134>
   2de84:	ldr	r3, [pc, #24]	; 2dea4 <flatcc_builder_append_union_vector@@Base+0x138>
   2de88:	movw	r2, #1692	; 0x69c
   2de8c:	add	r0, pc, r0
   2de90:	add	r1, pc, r1
   2de94:	add	r3, pc, r3
   2de98:	bl	12bbc <__assert_fail@plt>
   2de9c:	andeq	r6, r0, fp, ror #22
   2dea0:	andeq	r5, r0, lr, lsr #30
   2dea4:	muleq	r0, sl, ip
   2dea8:	ldrdeq	r7, [r0], -r0
   2deac:	andeq	r6, r0, r6
   2deb0:	andeq	r7, r0, r3, ror #1

0002deb4 <flatcc_builder_create_string@@Base>:
   2deb4:	push	{r4, r5, r6, sl, fp, lr}
   2deb8:	add	fp, sp, #16
   2debc:	sub	sp, sp, #80	; 0x50
   2dec0:	str	r2, [fp, #-20]	; 0xffffffec
   2dec4:	mvn	r5, r2
   2dec8:	mov	r6, r0
   2decc:	mov	r3, #1
   2ded0:	cmp	r2, #0
   2ded4:	ldr	ip, [r0, #136]	; 0x88
   2ded8:	sub	r0, fp, #20
   2dedc:	str	r0, [sp, #12]
   2dee0:	mov	r0, #4
   2dee4:	str	r0, [sp, #4]
   2dee8:	str	r0, [sp, #16]
   2deec:	str	r3, [sp, #8]
   2def0:	add	r5, ip, r5
   2def4:	and	r5, r5, #3
   2def8:	add	r5, r5, #1
   2defc:	beq	2df18 <flatcc_builder_create_string@@Base+0x64>
   2df00:	mov	r3, #2
   2df04:	add	r0, r2, #4
   2df08:	str	r1, [sp, #20]
   2df0c:	str	r2, [sp, #24]
   2df10:	str	r3, [sp, #8]
   2df14:	str	r0, [sp, #4]
   2df18:	add	r1, r0, r5
   2df1c:	add	lr, sp, #4
   2df20:	str	r1, [sp, #4]
   2df24:	add	r0, lr, r3, lsl #3
   2df28:	cmp	r1, #0
   2df2c:	ldr	r2, [pc, #132]	; 2dfb8 <flatcc_builder_create_string@@Base+0x104>
   2df30:	ldr	r2, [pc, r2]
   2df34:	str	r2, [r0, #8]
   2df38:	add	r2, r3, #1
   2df3c:	str	r5, [r0, #12]
   2df40:	str	r2, [sp, #8]
   2df44:	ble	2df98 <flatcc_builder_create_string@@Base+0xe4>
   2df48:	ldr	r0, [r6, #36]	; 0x24
   2df4c:	ldr	r4, [r6, #44]	; 0x2c
   2df50:	sub	r5, ip, r1
   2df54:	str	r1, [sp]
   2df58:	add	r1, lr, #8
   2df5c:	mov	r3, r5
   2df60:	blx	r4
   2df64:	cmp	r0, #0
   2df68:	streq	r5, [r6, #136]	; 0x88
   2df6c:	moveq	r0, r5
   2df70:	subeq	sp, fp, #16
   2df74:	popeq	{r4, r5, r6, sl, fp, pc}
   2df78:	ldr	r0, [pc, #72]	; 2dfc8 <flatcc_builder_create_string@@Base+0x114>
   2df7c:	ldr	r1, [pc, #72]	; 2dfcc <flatcc_builder_create_string@@Base+0x118>
   2df80:	ldr	r3, [pc, #72]	; 2dfd0 <flatcc_builder_create_string@@Base+0x11c>
   2df84:	movw	r2, #651	; 0x28b
   2df88:	add	r0, pc, r0
   2df8c:	add	r1, pc, r1
   2df90:	add	r3, pc, r3
   2df94:	bl	12bbc <__assert_fail@plt>
   2df98:	ldr	r0, [pc, #28]	; 2dfbc <flatcc_builder_create_string@@Base+0x108>
   2df9c:	ldr	r1, [pc, #28]	; 2dfc0 <flatcc_builder_create_string@@Base+0x10c>
   2dfa0:	ldr	r3, [pc, #28]	; 2dfc4 <flatcc_builder_create_string@@Base+0x110>
   2dfa4:	movw	r2, #647	; 0x287
   2dfa8:	add	r0, pc, r0
   2dfac:	add	r1, pc, r1
   2dfb0:	add	r3, pc, r3
   2dfb4:	bl	12bbc <__assert_fail@plt>
   2dfb8:	andeq	r9, r1, ip, lsr r1
   2dfbc:	ldrdeq	r6, [r0], -r3
   2dfc0:	andeq	r5, r0, r2, lsl lr
   2dfc4:	andeq	r6, r0, sl, lsl #29
   2dfc8:	strdeq	r6, [r0], -r3
   2dfcc:	andeq	r5, r0, r2, lsr lr
   2dfd0:	andeq	r6, r0, sl, lsr #29

0002dfd4 <flatcc_builder_create_string_str@@Base>:
   2dfd4:	push	{r4, r5, fp, lr}
   2dfd8:	add	fp, sp, #8
   2dfdc:	mov	r5, r0
   2dfe0:	mov	r0, r1
   2dfe4:	mov	r4, r1
   2dfe8:	bl	12b38 <strlen@plt>
   2dfec:	mov	r2, r0
   2dff0:	mov	r0, r5
   2dff4:	mov	r1, r4
   2dff8:	pop	{r4, r5, fp, lr}
   2dffc:	b	2deb4 <flatcc_builder_create_string@@Base>

0002e000 <flatcc_builder_create_string_strn@@Base>:
   2e000:	push	{r4, r5, r6, sl, fp, lr}
   2e004:	add	fp, sp, #16
   2e008:	mov	r6, r0
   2e00c:	mov	r5, r1
   2e010:	mov	r0, r1
   2e014:	mov	r1, #0
   2e018:	mov	r4, r2
   2e01c:	bl	12b74 <memchr@plt>
   2e020:	cmp	r0, #0
   2e024:	mov	r1, r5
   2e028:	subne	r4, r0, r5
   2e02c:	mov	r0, r6
   2e030:	mov	r2, r4
   2e034:	pop	{r4, r5, r6, sl, fp, lr}
   2e038:	b	2deb4 <flatcc_builder_create_string@@Base>

0002e03c <flatcc_builder_end_string@@Base>:
   2e03c:	push	{r4, r5, fp, lr}
   2e040:	add	fp, sp, #8
   2e044:	mov	r4, r0
   2e048:	ldr	r0, [r0, #32]
   2e04c:	ldrh	r1, [r0, #14]
   2e050:	cmp	r1, #6
   2e054:	bne	2e0fc <flatcc_builder_end_string@@Base+0xc0>
   2e058:	ldr	r2, [r0, #20]
   2e05c:	ldr	r0, [r4, #20]
   2e060:	cmp	r2, r0
   2e064:	bne	2e11c <flatcc_builder_end_string@@Base+0xe0>
   2e068:	ldr	r1, [r4, #16]
   2e06c:	mov	r0, r4
   2e070:	bl	2deb4 <flatcc_builder_create_string@@Base>
   2e074:	mov	r5, r0
   2e078:	cmp	r0, #0
   2e07c:	beq	2e0f4 <flatcc_builder_end_string@@Base+0xb8>
   2e080:	ldr	r0, [r4, #16]
   2e084:	ldr	r2, [r4, #20]
   2e088:	mov	r1, #0
   2e08c:	bl	12b5c <memset@plt>
   2e090:	ldr	r0, [r4, #32]
   2e094:	ldr	r1, [r4, #60]	; 0x3c
   2e098:	ldr	ip, [r4, #64]	; 0x40
   2e09c:	ldr	r3, [r0, #8]
   2e0a0:	str	r3, [r4, #20]
   2e0a4:	ldr	r3, [r0]
   2e0a8:	str	r3, [r4, #28]
   2e0ac:	add	r1, r1, r3
   2e0b0:	ldr	r2, [r0, #4]
   2e0b4:	str	r1, [r4, #16]
   2e0b8:	sub	r1, ip, r3
   2e0bc:	cmp	r1, r2
   2e0c0:	movhi	r1, r2
   2e0c4:	str	r1, [r4, #24]
   2e0c8:	ldrh	r1, [r4, #130]	; 0x82
   2e0cc:	ldrh	r2, [r4, #128]	; 0x80
   2e0d0:	cmp	r2, r1
   2e0d4:	strhcc	r1, [r4, #128]	; 0x80
   2e0d8:	ldrh	r1, [r0, #12]
   2e0dc:	sub	r0, r0, #36	; 0x24
   2e0e0:	str	r0, [r4, #32]
   2e0e4:	strh	r1, [r4, #130]	; 0x82
   2e0e8:	ldr	r0, [r4, #156]	; 0x9c
   2e0ec:	sub	r0, r0, #1
   2e0f0:	str	r0, [r4, #156]	; 0x9c
   2e0f4:	mov	r0, r5
   2e0f8:	pop	{r4, r5, fp, pc}
   2e0fc:	ldr	r0, [pc, #56]	; 2e13c <flatcc_builder_end_string@@Base+0x100>
   2e100:	ldr	r1, [pc, #56]	; 2e140 <flatcc_builder_end_string@@Base+0x104>
   2e104:	ldr	r3, [pc, #56]	; 2e144 <flatcc_builder_end_string@@Base+0x108>
   2e108:	movw	r2, #1732	; 0x6c4
   2e10c:	add	r0, pc, r0
   2e110:	add	r1, pc, r1
   2e114:	add	r3, pc, r3
   2e118:	bl	12bbc <__assert_fail@plt>
   2e11c:	ldr	r0, [pc, #36]	; 2e148 <flatcc_builder_end_string@@Base+0x10c>
   2e120:	ldr	r1, [pc, #36]	; 2e14c <flatcc_builder_end_string@@Base+0x110>
   2e124:	ldr	r3, [pc, #36]	; 2e150 <flatcc_builder_end_string@@Base+0x114>
   2e128:	movw	r2, #1733	; 0x6c5
   2e12c:	add	r0, pc, r0
   2e130:	add	r1, pc, r1
   2e134:	add	r3, pc, r3
   2e138:	bl	12bbc <__assert_fail@plt>
   2e13c:	andeq	r6, r0, lr, ror #3
   2e140:	andeq	r5, r0, lr, lsr #25
   2e144:	muleq	r0, r9, sl
   2e148:	andeq	r6, r0, r4, asr #21
   2e14c:	andeq	r5, r0, lr, lsl #25
   2e150:	andeq	r6, r0, r9, ror sl

0002e154 <flatcc_builder_string_edit@@Base>:
   2e154:	ldr	r0, [r0, #16]
   2e158:	bx	lr

0002e15c <flatcc_builder_string_len@@Base>:
   2e15c:	ldr	r0, [r0, #32]
   2e160:	ldr	r0, [r0, #20]
   2e164:	bx	lr

0002e168 <flatcc_builder_table_edit@@Base>:
   2e168:	ldr	r2, [r0, #32]
   2e16c:	ldrh	r2, [r2, #14]
   2e170:	cmp	r2, #3
   2e174:	ldreq	r2, [r0, #16]
   2e178:	ldreq	r0, [r0, #20]
   2e17c:	addeq	r0, r2, r0
   2e180:	subeq	r0, r0, r1
   2e184:	bxeq	lr
   2e188:	push	{fp, lr}
   2e18c:	mov	fp, sp
   2e190:	ldr	r0, [pc, #24]	; 2e1b0 <flatcc_builder_table_edit@@Base+0x48>
   2e194:	ldr	r1, [pc, #24]	; 2e1b4 <flatcc_builder_table_edit@@Base+0x4c>
   2e198:	ldr	r3, [pc, #24]	; 2e1b8 <flatcc_builder_table_edit@@Base+0x50>
   2e19c:	movw	r2, #1794	; 0x702
   2e1a0:	add	r0, pc, r0
   2e1a4:	add	r1, pc, r1
   2e1a8:	add	r3, pc, r3
   2e1ac:	bl	12bbc <__assert_fail@plt>
   2e1b0:	andeq	r6, r0, sl, asr #8
   2e1b4:	andeq	r5, r0, sl, lsl ip
   2e1b8:	strdeq	r6, [r0], -sl

0002e1bc <flatcc_builder_table_add_copy@@Base>:
   2e1bc:	push	{r4, r5, r6, sl, fp, lr}
   2e1c0:	add	fp, sp, #16
   2e1c4:	mov	r4, r3
   2e1c8:	ldr	r3, [fp, #8]
   2e1cc:	mov	r5, r2
   2e1d0:	mov	r2, r4
   2e1d4:	bl	2d1f0 <flatcc_builder_table_add@@Base>
   2e1d8:	mov	r6, r0
   2e1dc:	cmp	r0, #0
   2e1e0:	beq	2e1f4 <flatcc_builder_table_add_copy@@Base+0x38>
   2e1e4:	mov	r0, r6
   2e1e8:	mov	r1, r5
   2e1ec:	mov	r2, r4
   2e1f0:	bl	12aa8 <memcpy@plt>
   2e1f4:	mov	r0, r6
   2e1f8:	pop	{r4, r5, r6, sl, fp, pc}

0002e1fc <flatcc_builder_push_buffer_alignment@@Base>:
   2e1fc:	ldrh	r1, [r0, #128]	; 0x80
   2e200:	mov	r2, #4
   2e204:	strh	r2, [r0, #128]	; 0x80
   2e208:	mov	r0, r1
   2e20c:	bx	lr

0002e210 <flatcc_builder_pop_buffer_alignment@@Base>:
   2e210:	ldrh	r2, [r0, #128]	; 0x80
   2e214:	cmp	r2, r1
   2e218:	strhcc	r1, [r0, #128]	; 0x80
   2e21c:	bx	lr

0002e220 <flatcc_builder_get_buffer_alignment@@Base>:
   2e220:	ldrh	r0, [r0, #128]	; 0x80
   2e224:	bx	lr

0002e228 <flatcc_builder_set_vtable_clustering@@Base>:
   2e228:	clz	r1, r1
   2e22c:	lsr	r1, r1, #5
   2e230:	str	r1, [r0, #180]	; 0xb4
   2e234:	bx	lr

0002e238 <flatcc_builder_set_block_align@@Base>:
   2e238:	strh	r1, [r0, #132]	; 0x84
   2e23c:	bx	lr

0002e240 <flatcc_builder_get_level@@Base>:
   2e240:	ldr	r0, [r0, #156]	; 0x9c
   2e244:	bx	lr

0002e248 <flatcc_builder_set_max_level@@Base>:
   2e248:	str	r1, [r0, #176]	; 0xb0
   2e24c:	ldr	r2, [r0, #160]	; 0xa0
   2e250:	cmp	r2, r1
   2e254:	strlt	r1, [r0, #160]	; 0xa0
   2e258:	bx	lr

0002e25c <flatcc_builder_get_buffer_size@@Base>:
   2e25c:	ldr	r1, [r0, #136]	; 0x88
   2e260:	ldr	r0, [r0, #140]	; 0x8c
   2e264:	sub	r0, r0, r1
   2e268:	bx	lr

0002e26c <flatcc_builder_get_buffer_start@@Base>:
   2e26c:	ldr	r0, [r0, #136]	; 0x88
   2e270:	bx	lr

0002e274 <flatcc_builder_get_buffer_end@@Base>:
   2e274:	ldr	r0, [r0, #140]	; 0x8c
   2e278:	bx	lr

0002e27c <flatcc_builder_set_vtable_cache_limit@@Base>:
   2e27c:	str	r1, [r0, #172]	; 0xac
   2e280:	bx	lr

0002e284 <flatcc_builder_set_identifier@@Base>:
   2e284:	ldr	r2, [pc, #20]	; 2e2a0 <flatcc_builder_set_identifier@@Base+0x1c>
   2e288:	cmp	r1, #0
   2e28c:	ldr	r2, [pc, r2]
   2e290:	movne	r2, r1
   2e294:	ldr	r1, [r2]
   2e298:	str	r1, [r0, #168]	; 0xa8
   2e29c:	bx	lr
   2e2a0:	andeq	r8, r1, r0, ror #27

0002e2a4 <flatcc_builder_get_type@@Base>:
   2e2a4:	ldr	r0, [r0, #32]
   2e2a8:	cmp	r0, #0
   2e2ac:	ldrhne	r0, [r0, #14]
   2e2b0:	moveq	r0, #0
   2e2b4:	bx	lr

0002e2b8 <flatcc_builder_get_type_at@@Base>:
   2e2b8:	mov	r2, r0
   2e2bc:	cmp	r1, #1
   2e2c0:	mov	r0, #0
   2e2c4:	ldrge	r3, [r2, #156]	; 0x9c
   2e2c8:	cmpge	r3, r1
   2e2cc:	bge	2e2d4 <flatcc_builder_get_type_at@@Base+0x1c>
   2e2d0:	bx	lr
   2e2d4:	sub	r0, r1, r3
   2e2d8:	ldr	r1, [r2, #32]
   2e2dc:	add	r0, r0, r0, lsl #3
   2e2e0:	add	r0, r1, r0, lsl #2
   2e2e4:	ldrh	r0, [r0, #14]
   2e2e8:	bx	lr

0002e2ec <flatcc_builder_get_direct_buffer@@Base>:
   2e2ec:	ldr	r2, [r0, #184]	; 0xb8
   2e2f0:	cmp	r2, #0
   2e2f4:	beq	2e308 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   2e2f8:	ldr	r2, [r0, #188]	; 0xbc
   2e2fc:	ldr	r3, [r0, #192]	; 0xc0
   2e300:	cmp	r2, r3
   2e304:	beq	2e320 <flatcc_builder_get_direct_buffer@@Base+0x34>
   2e308:	cmp	r1, #0
   2e30c:	moveq	r0, #0
   2e310:	bxeq	lr
   2e314:	mov	r0, #0
   2e318:	str	r0, [r1]
   2e31c:	bx	lr
   2e320:	cmp	r1, #0
   2e324:	ldrne	r2, [r0, #212]	; 0xd4
   2e328:	strne	r2, [r1]
   2e32c:	ldr	r0, [r0, #196]	; 0xc4
   2e330:	bx	lr

0002e334 <flatcc_builder_copy_buffer@@Base>:
   2e334:	push	{fp, lr}
   2e338:	mov	fp, sp
   2e33c:	ldr	r3, [r0, #184]	; 0xb8
   2e340:	cmp	r3, #0
   2e344:	beq	2e378 <flatcc_builder_copy_buffer@@Base+0x44>
   2e348:	add	r0, r0, #188	; 0xbc
   2e34c:	bl	2ea84 <flatcc_emitter_copy_buffer@@Base>
   2e350:	cmp	r0, #0
   2e354:	popne	{fp, pc}
   2e358:	ldr	r0, [pc, #32]	; 2e380 <flatcc_builder_copy_buffer@@Base+0x4c>
   2e35c:	ldr	r1, [pc, #32]	; 2e384 <flatcc_builder_copy_buffer@@Base+0x50>
   2e360:	ldr	r3, [pc, #32]	; 2e388 <flatcc_builder_copy_buffer@@Base+0x54>
   2e364:	movw	r2, #1926	; 0x786
   2e368:	add	r0, pc, r0
   2e36c:	add	r1, pc, r1
   2e370:	add	r3, pc, r3
   2e374:	bl	12bbc <__assert_fail@plt>
   2e378:	mov	r0, #0
   2e37c:	pop	{fp, pc}
   2e380:	andeq	r5, r0, r1, asr #25
   2e384:	andeq	r5, r0, r2, asr sl
   2e388:			; <UNDEFINED> instruction: 0x000069bd

0002e38c <flatcc_builder_finalize_buffer@@Base>:
   2e38c:	push	{r4, r5, r6, sl, fp, lr}
   2e390:	add	fp, sp, #16
   2e394:	mov	r5, r0
   2e398:	ldr	r0, [r0, #136]	; 0x88
   2e39c:	cmp	r1, #0
   2e3a0:	ldr	r2, [r5, #140]	; 0x8c
   2e3a4:	sub	r4, r2, r0
   2e3a8:	mov	r0, r4
   2e3ac:	strne	r4, [r1]
   2e3b0:	bl	12b08 <malloc@plt>
   2e3b4:	cmp	r0, #0
   2e3b8:	beq	2e408 <flatcc_builder_finalize_buffer@@Base+0x7c>
   2e3bc:	mov	r6, r0
   2e3c0:	ldr	r0, [r5, #184]	; 0xb8
   2e3c4:	cmp	r0, #0
   2e3c8:	beq	2e428 <flatcc_builder_finalize_buffer@@Base+0x9c>
   2e3cc:	add	r0, r5, #188	; 0xbc
   2e3d0:	mov	r1, r6
   2e3d4:	mov	r2, r4
   2e3d8:	bl	2ea84 <flatcc_emitter_copy_buffer@@Base>
   2e3dc:	cmp	r0, #0
   2e3e0:	movne	r0, r6
   2e3e4:	popne	{r4, r5, r6, sl, fp, pc}
   2e3e8:	ldr	r0, [pc, #88]	; 2e448 <flatcc_builder_finalize_buffer@@Base+0xbc>
   2e3ec:	ldr	r1, [pc, #88]	; 2e44c <flatcc_builder_finalize_buffer@@Base+0xc0>
   2e3f0:	ldr	r3, [pc, #88]	; 2e450 <flatcc_builder_finalize_buffer@@Base+0xc4>
   2e3f4:	movw	r2, #1926	; 0x786
   2e3f8:	add	r0, pc, r0
   2e3fc:	add	r1, pc, r1
   2e400:	add	r3, pc, r3
   2e404:	bl	12bbc <__assert_fail@plt>
   2e408:	ldr	r0, [pc, #80]	; 2e460 <flatcc_builder_finalize_buffer@@Base+0xd4>
   2e40c:	ldr	r1, [pc, #80]	; 2e464 <flatcc_builder_finalize_buffer@@Base+0xd8>
   2e410:	ldr	r3, [pc, #80]	; 2e468 <flatcc_builder_finalize_buffer@@Base+0xdc>
   2e414:	movw	r2, #1944	; 0x798
   2e418:	add	r0, pc, r0
   2e41c:	add	r1, pc, r1
   2e420:	add	r3, pc, r3
   2e424:	bl	12bbc <__assert_fail@plt>
   2e428:	ldr	r0, [pc, #36]	; 2e454 <flatcc_builder_finalize_buffer@@Base+0xc8>
   2e42c:	ldr	r1, [pc, #36]	; 2e458 <flatcc_builder_finalize_buffer@@Base+0xcc>
   2e430:	ldr	r3, [pc, #36]	; 2e45c <flatcc_builder_finalize_buffer@@Base+0xd0>
   2e434:	movw	r2, #1948	; 0x79c
   2e438:	add	r0, pc, r0
   2e43c:	add	r1, pc, r1
   2e440:	add	r3, pc, r3
   2e444:	bl	12bbc <__assert_fail@plt>
   2e448:	andeq	r5, r0, r1, lsr ip
   2e44c:	andeq	r5, r0, r2, asr #19
   2e450:	andeq	r6, r0, sp, lsr #18
   2e454:	andeq	r6, r0, r3, asr #22
   2e458:	andeq	r5, r0, r2, lsl #19
   2e45c:	andeq	r6, r0, r2, lsr r9
   2e460:	andeq	r6, r0, r3, ror #22
   2e464:	andeq	r5, r0, r2, lsr #19
   2e468:	andeq	r6, r0, r2, asr r9

0002e46c <flatcc_builder_finalize_aligned_buffer@@Base>:
   2e46c:	push	{r4, r5, r6, r7, fp, lr}
   2e470:	add	fp, sp, #16
   2e474:	sub	sp, sp, #8
   2e478:	mov	r5, r0
   2e47c:	mov	r4, r1
   2e480:	ldr	r0, [r0, #136]	; 0x88
   2e484:	ldr	r1, [r5, #140]	; 0x8c
   2e488:	cmp	r4, #0
   2e48c:	sub	r0, r1, r0
   2e490:	mov	r1, #0
   2e494:	strne	r0, [r4]
   2e498:	ldrh	r2, [r5, #128]	; 0x80
   2e49c:	str	r1, [sp, #4]
   2e4a0:	add	r0, r0, r2
   2e4a4:	cmp	r2, #4
   2e4a8:	mov	r1, r2
   2e4ac:	rsb	r2, r2, #0
   2e4b0:	sub	r0, r0, #1
   2e4b4:	movls	r1, #4
   2e4b8:	and	r7, r0, r2
   2e4bc:	add	r0, sp, #4
   2e4c0:	mov	r2, r7
   2e4c4:	bl	12b50 <posix_memalign@plt>
   2e4c8:	ldr	r6, [sp, #4]
   2e4cc:	cmp	r0, #0
   2e4d0:	cmpne	r6, #0
   2e4d4:	bne	2e524 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   2e4d8:	cmp	r6, #0
   2e4dc:	beq	2e52c <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   2e4e0:	ldr	r0, [r5, #184]	; 0xb8
   2e4e4:	cmp	r0, #0
   2e4e8:	beq	2e524 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   2e4ec:	add	r0, r5, #188	; 0xbc
   2e4f0:	mov	r1, r6
   2e4f4:	mov	r2, r7
   2e4f8:	bl	2ea84 <flatcc_emitter_copy_buffer@@Base>
   2e4fc:	cmp	r0, #0
   2e500:	bne	2e538 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2e504:	ldr	r0, [pc, #56]	; 2e544 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   2e508:	ldr	r1, [pc, #56]	; 2e548 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   2e50c:	ldr	r3, [pc, #56]	; 2e54c <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   2e510:	movw	r2, #1926	; 0x786
   2e514:	add	r0, pc, r0
   2e518:	add	r1, pc, r1
   2e51c:	add	r3, pc, r3
   2e520:	bl	12bbc <__assert_fail@plt>
   2e524:	mov	r0, r6
   2e528:	bl	12a9c <free@plt>
   2e52c:	mov	r6, #0
   2e530:	cmp	r4, #0
   2e534:	strne	r6, [r4]
   2e538:	mov	r0, r6
   2e53c:	sub	sp, fp, #16
   2e540:	pop	{r4, r5, r6, r7, fp, pc}
   2e544:	andeq	r5, r0, r5, lsl fp
   2e548:	andeq	r5, r0, r6, lsr #17
   2e54c:	andeq	r6, r0, r1, lsl r8

0002e550 <flatcc_builder_aligned_alloc@@Base>:
   2e550:	push	{fp, lr}
   2e554:	mov	fp, sp
   2e558:	sub	sp, sp, #8
   2e55c:	mov	r2, r1
   2e560:	mov	r1, r0
   2e564:	mov	r0, #0
   2e568:	cmp	r1, #4
   2e56c:	str	r0, [sp, #4]
   2e570:	add	r0, sp, #4
   2e574:	movls	r1, #4
   2e578:	bl	12b50 <posix_memalign@plt>
   2e57c:	mov	r1, r0
   2e580:	ldr	r0, [sp, #4]
   2e584:	cmp	r1, #0
   2e588:	cmpne	r0, #0
   2e58c:	bne	2e598 <flatcc_builder_aligned_alloc@@Base+0x48>
   2e590:	mov	sp, fp
   2e594:	pop	{fp, pc}
   2e598:	bl	12a9c <free@plt>
   2e59c:	mov	r0, #0
   2e5a0:	str	r0, [sp, #4]
   2e5a4:	mov	sp, fp
   2e5a8:	pop	{fp, pc}

0002e5ac <flatcc_builder_aligned_free@@Base>:
   2e5ac:	b	12a9c <free@plt>

0002e5b0 <flatcc_builder_get_emit_context@@Base>:
   2e5b0:	ldr	r0, [r0, #36]	; 0x24
   2e5b4:	bx	lr

0002e5b8 <flatcc_emitter_recycle_page@@Base>:
   2e5b8:	ldr	r3, [r0]
   2e5bc:	mov	r2, r0
   2e5c0:	mvn	r0, #0
   2e5c4:	cmp	r3, r1
   2e5c8:	ldrne	r2, [r2, #4]
   2e5cc:	cmpne	r2, r1
   2e5d0:	bne	2e5d8 <flatcc_emitter_recycle_page@@Base+0x20>
   2e5d4:	bx	lr
   2e5d8:	ldr	r0, [r1, #2944]	; 0xb80
   2e5dc:	ldr	r2, [r1, #2948]	; 0xb84
   2e5e0:	str	r2, [r0, #2948]	; 0xb84
   2e5e4:	ldr	r2, [r1, #2948]	; 0xb84
   2e5e8:	str	r0, [r2, #2944]	; 0xb80
   2e5ec:	ldr	r0, [r3, #2948]	; 0xb84
   2e5f0:	str	r3, [r1, #2944]	; 0xb80
   2e5f4:	str	r0, [r1, #2948]	; 0xb84
   2e5f8:	str	r1, [r0, #2944]	; 0xb80
   2e5fc:	ldr	r0, [r1, #2944]	; 0xb80
   2e600:	str	r1, [r0, #2948]	; 0xb84
   2e604:	mov	r0, #0
   2e608:	bx	lr

0002e60c <flatcc_emitter_reset@@Base>:
   2e60c:	push	{r4, sl, fp, lr}
   2e610:	add	fp, sp, #8
   2e614:	ldr	r1, [r0]
   2e618:	cmp	r1, #0
   2e61c:	beq	2e6d4 <flatcc_emitter_reset@@Base+0xc8>
   2e620:	mov	r4, r0
   2e624:	add	r2, r1, #1472	; 0x5c0
   2e628:	mov	r0, #1472	; 0x5c0
   2e62c:	mov	r3, #0
   2e630:	stmib	r4, {r1, r2}
   2e634:	str	r0, [r4, #12]
   2e638:	str	r2, [r4, #16]
   2e63c:	str	r0, [r4, #20]
   2e640:	movw	r0, #64064	; 0xfa40
   2e644:	movt	r0, #65535	; 0xffff
   2e648:	str	r0, [r1, #2952]	; 0xb88
   2e64c:	ldr	r2, [r4, #32]
   2e650:	ldr	r0, [r4, #24]
   2e654:	cmp	r2, #0
   2e658:	moveq	r2, r0
   2e65c:	streq	r0, [r4, #32]
   2e660:	str	r3, [r4, #24]
   2e664:	add	r2, r2, r2, lsl #1
   2e668:	lsr	r2, r2, #2
   2e66c:	add	r0, r2, r0, lsr #2
   2e670:	str	r0, [r4, #32]
   2e674:	ldr	r2, [r4, #28]
   2e678:	cmp	r2, r0, lsl #1
   2e67c:	bls	2e6d4 <flatcc_emitter_reset@@Base+0xc8>
   2e680:	mov	r2, r1
   2e684:	ldr	r0, [r2, #2944]!	; 0xb80
   2e688:	cmp	r0, r1
   2e68c:	beq	2e6d4 <flatcc_emitter_reset@@Base+0xc8>
   2e690:	ldr	r3, [r0, #2944]	; 0xb80
   2e694:	str	r3, [r2]
   2e698:	ldr	r2, [r0, #2944]	; 0xb80
   2e69c:	str	r1, [r2, #2948]	; 0xb84
   2e6a0:	bl	12a9c <free@plt>
   2e6a4:	ldr	r0, [r4, #28]
   2e6a8:	ldr	r1, [r4, #32]
   2e6ac:	sub	r0, r0, #2944	; 0xb80
   2e6b0:	cmp	r0, r1, lsl #1
   2e6b4:	str	r0, [r4, #28]
   2e6b8:	popls	{r4, sl, fp, pc}
   2e6bc:	ldr	r1, [r4, #4]
   2e6c0:	ldr	r3, [r4]
   2e6c4:	mov	r2, r1
   2e6c8:	ldr	r0, [r2, #2944]!	; 0xb80
   2e6cc:	cmp	r0, r3
   2e6d0:	bne	2e690 <flatcc_emitter_reset@@Base+0x84>
   2e6d4:	pop	{r4, sl, fp, pc}

0002e6d8 <flatcc_emitter_clear@@Base>:
   2e6d8:	push	{r4, r5, r6, sl, fp, lr}
   2e6dc:	add	fp, sp, #16
   2e6e0:	ldr	r5, [r0]
   2e6e4:	cmp	r5, #0
   2e6e8:	popeq	{r4, r5, r6, sl, fp, pc}
   2e6ec:	mov	r4, r0
   2e6f0:	ldr	r0, [r5, #2948]	; 0xb84
   2e6f4:	mov	r6, #0
   2e6f8:	str	r6, [r0, #2944]	; 0xb80
   2e6fc:	b	2e70c <flatcc_emitter_clear@@Base+0x34>
   2e700:	mov	r5, r0
   2e704:	ldr	r0, [r0, #2948]	; 0xb84
   2e708:	bl	12a9c <free@plt>
   2e70c:	ldr	r0, [r5, #2944]	; 0xb80
   2e710:	cmp	r0, #0
   2e714:	bne	2e700 <flatcc_emitter_clear@@Base+0x28>
   2e718:	mov	r0, r5
   2e71c:	bl	12a9c <free@plt>
   2e720:	vmov.i32	q8, #0	; 0x00000000
   2e724:	add	r0, r4, #16
   2e728:	vst1.32	{d16-d17}, [r0]
   2e72c:	mov	r0, #32
   2e730:	vst1.32	{d16-d17}, [r4], r0
   2e734:	str	r6, [r4]
   2e738:	pop	{r4, r5, r6, sl, fp, pc}

0002e73c <flatcc_emitter@@Base>:
   2e73c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e740:	add	fp, sp, #28
   2e744:	sub	sp, sp, #4
   2e748:	mov	r6, r0
   2e74c:	mov	r7, r1
   2e750:	ldr	r0, [r0, #24]
   2e754:	ldr	r1, [fp, #8]
   2e758:	mov	r4, r2
   2e75c:	cmn	r3, #1
   2e760:	mov	r9, r6
   2e764:	add	r0, r0, r1
   2e768:	str	r0, [r6, #24]
   2e76c:	ble	2e8ac <flatcc_emitter@@Base+0x170>
   2e770:	ldr	r0, [r9, #20]!
   2e774:	cmp	r0, r1
   2e778:	bcs	2ea20 <flatcc_emitter@@Base+0x2e4>
   2e77c:	mov	r8, #0
   2e780:	cmp	r4, #0
   2e784:	beq	2ea78 <flatcc_emitter@@Base+0x33c>
   2e788:	movw	sl, #64064	; 0xfa40
   2e78c:	movt	sl, #65535	; 0xffff
   2e790:	ldr	r8, [r7, #4]
   2e794:	cmp	r8, #0
   2e798:	beq	2e89c <flatcc_emitter@@Base+0x160>
   2e79c:	ldr	r9, [r7]
   2e7a0:	cmp	r8, r0
   2e7a4:	mov	r5, r8
   2e7a8:	bls	2e868 <flatcc_emitter@@Base+0x12c>
   2e7ac:	mov	r5, r0
   2e7b0:	cmp	r5, #0
   2e7b4:	bne	2e868 <flatcc_emitter@@Base+0x12c>
   2e7b8:	ldr	r5, [r6, #4]
   2e7bc:	cmp	r5, #0
   2e7c0:	beq	2e7d4 <flatcc_emitter@@Base+0x98>
   2e7c4:	ldr	r0, [r5, #2944]	; 0xb80
   2e7c8:	ldr	r1, [r6]
   2e7cc:	cmp	r0, r1
   2e7d0:	bne	2e80c <flatcc_emitter@@Base+0xd0>
   2e7d4:	movw	r0, #2956	; 0xb8c
   2e7d8:	bl	12b08 <malloc@plt>
   2e7dc:	cmp	r0, #0
   2e7e0:	beq	2ea30 <flatcc_emitter@@Base+0x2f4>
   2e7e4:	ldr	r1, [r6, #28]
   2e7e8:	cmp	r5, #0
   2e7ec:	add	r1, r1, #2944	; 0xb80
   2e7f0:	str	r1, [r6, #28]
   2e7f4:	beq	2e838 <flatcc_emitter@@Base+0xfc>
   2e7f8:	ldr	r1, [r6]
   2e7fc:	str	r1, [r0, #2944]	; 0xb80
   2e800:	str	r5, [r0, #2948]	; 0xb84
   2e804:	str	r0, [r1, #2948]	; 0xb84
   2e808:	str	r0, [r5, #2944]	; 0xb80
   2e80c:	mov	r5, #2944	; 0xb80
   2e810:	str	r0, [r6, #4]
   2e814:	str	r0, [r6, #16]
   2e818:	str	r5, [r6, #20]
   2e81c:	ldr	r1, [r0, #2948]	; 0xb84
   2e820:	ldr	r1, [r1, #2952]	; 0xb88
   2e824:	add	r1, r1, #2944	; 0xb80
   2e828:	str	r1, [r0, #2952]	; 0xb88
   2e82c:	cmp	r8, r5
   2e830:	bhi	2e7b0 <flatcc_emitter@@Base+0x74>
   2e834:	b	2e864 <flatcc_emitter@@Base+0x128>
   2e838:	add	r1, r0, #1472	; 0x5c0
   2e83c:	mov	r5, #1472	; 0x5c0
   2e840:	str	r0, [r6]
   2e844:	stmib	r6, {r0, r1, r5}
   2e848:	str	r1, [r6, #16]
   2e84c:	str	r5, [r6, #20]
   2e850:	str	r0, [r0, #2944]	; 0xb80
   2e854:	str	r0, [r0, #2948]	; 0xb84
   2e858:	str	sl, [r0, #2952]	; 0xb88
   2e85c:	cmp	r8, r5
   2e860:	bhi	2e7b0 <flatcc_emitter@@Base+0x74>
   2e864:	mov	r5, r8
   2e868:	ldr	r0, [r6, #16]
   2e86c:	mov	r1, r9
   2e870:	mov	r2, r5
   2e874:	bl	12aa8 <memcpy@plt>
   2e878:	ldr	r0, [r6, #16]
   2e87c:	ldr	r1, [r6, #20]
   2e880:	add	r9, r9, r5
   2e884:	subs	r8, r8, r5
   2e888:	add	r2, r0, r5
   2e88c:	sub	r0, r1, r5
   2e890:	str	r2, [r6, #16]
   2e894:	str	r0, [r6, #20]
   2e898:	bne	2e7a0 <flatcc_emitter@@Base+0x64>
   2e89c:	subs	r4, r4, #1
   2e8a0:	add	r7, r7, #8
   2e8a4:	bne	2e790 <flatcc_emitter@@Base+0x54>
   2e8a8:	b	2ea18 <flatcc_emitter@@Base+0x2dc>
   2e8ac:	ldr	r0, [r9, #12]!
   2e8b0:	cmp	r0, r1
   2e8b4:	bcs	2ea38 <flatcc_emitter@@Base+0x2fc>
   2e8b8:	mov	r8, #0
   2e8bc:	cmp	r4, #0
   2e8c0:	beq	2ea78 <flatcc_emitter@@Base+0x33c>
   2e8c4:	add	r0, r7, r4, lsl #3
   2e8c8:	movw	sl, #2952	; 0xb88
   2e8cc:	ldr	r8, [r0, #-4]
   2e8d0:	sub	r1, r0, #8
   2e8d4:	str	r1, [sp]
   2e8d8:	cmp	r8, #0
   2e8dc:	beq	2ea0c <flatcc_emitter@@Base+0x2d0>
   2e8e0:	ldr	r0, [sp]
   2e8e4:	ldr	r0, [r0]
   2e8e8:	add	r7, r0, r8
   2e8ec:	ldr	r1, [r9]
   2e8f0:	cmp	r8, r1
   2e8f4:	bls	2e9dc <flatcc_emitter@@Base+0x2a0>
   2e8f8:	cmp	r1, #0
   2e8fc:	mov	r5, r1
   2e900:	bne	2e9e0 <flatcc_emitter@@Base+0x2a4>
   2e904:	ldr	r5, [r6]
   2e908:	cmp	r5, #0
   2e90c:	beq	2e938 <flatcc_emitter@@Base+0x1fc>
   2e910:	ldr	r0, [r5, #2948]	; 0xb84
   2e914:	ldr	r1, [r6, #4]
   2e918:	cmp	r0, r1
   2e91c:	beq	2e938 <flatcc_emitter@@Base+0x1fc>
   2e920:	ldr	r1, [r5, #2952]	; 0xb88
   2e924:	mov	r2, r0
   2e928:	sub	r1, r1, #2944	; 0xb80
   2e92c:	str	r1, [r2, #2952]!	; 0xb88
   2e930:	str	r0, [r6]
   2e934:	b	2e978 <flatcc_emitter@@Base+0x23c>
   2e938:	movw	r0, #2956	; 0xb8c
   2e93c:	bl	12b08 <malloc@plt>
   2e940:	cmp	r0, #0
   2e944:	beq	2ea30 <flatcc_emitter@@Base+0x2f4>
   2e948:	ldr	r1, [r6, #28]
   2e94c:	cmp	r5, #0
   2e950:	add	r1, r1, #2944	; 0xb80
   2e954:	str	r1, [r6, #28]
   2e958:	beq	2e9a4 <flatcc_emitter@@Base+0x268>
   2e95c:	ldr	r1, [r6, #4]
   2e960:	add	r2, r0, sl
   2e964:	str	r5, [r0, #2944]	; 0xb80
   2e968:	str	r1, [r0, #2948]	; 0xb84
   2e96c:	str	r0, [r5, #2948]	; 0xb84
   2e970:	str	r0, [r1, #2944]	; 0xb80
   2e974:	str	r0, [r6]
   2e978:	add	r3, r0, #2944	; 0xb80
   2e97c:	mov	r1, #2944	; 0xb80
   2e980:	str	r3, [r6, #8]
   2e984:	str	r1, [r6, #12]
   2e988:	ldr	r0, [r0, #2944]	; 0xb80
   2e98c:	ldr	r0, [r0, #2952]	; 0xb88
   2e990:	sub	r0, r0, #2944	; 0xb80
   2e994:	str	r0, [r2]
   2e998:	cmp	r8, r1
   2e99c:	bhi	2e8f8 <flatcc_emitter@@Base+0x1bc>
   2e9a0:	b	2e9dc <flatcc_emitter@@Base+0x2a0>
   2e9a4:	add	r2, r0, #1472	; 0x5c0
   2e9a8:	mov	r1, #1472	; 0x5c0
   2e9ac:	str	r0, [r6]
   2e9b0:	stmib	r6, {r0, r2}
   2e9b4:	str	r1, [r6, #12]
   2e9b8:	str	r2, [r6, #16]
   2e9bc:	movw	r2, #64064	; 0xfa40
   2e9c0:	str	r1, [r6, #20]
   2e9c4:	str	r0, [r0, #2944]	; 0xb80
   2e9c8:	str	r0, [r0, #2948]	; 0xb84
   2e9cc:	movt	r2, #65535	; 0xffff
   2e9d0:	str	r2, [r0, #2952]	; 0xb88
   2e9d4:	cmp	r8, r1
   2e9d8:	bhi	2e8f8 <flatcc_emitter@@Base+0x1bc>
   2e9dc:	mov	r5, r8
   2e9e0:	sub	r0, r1, r5
   2e9e4:	sub	r7, r7, r5
   2e9e8:	mov	r2, r5
   2e9ec:	str	r0, [r6, #12]
   2e9f0:	mov	r1, r7
   2e9f4:	ldr	r0, [r6, #8]
   2e9f8:	sub	r0, r0, r5
   2e9fc:	str	r0, [r6, #8]
   2ea00:	bl	12aa8 <memcpy@plt>
   2ea04:	subs	r8, r8, r5
   2ea08:	bne	2e8ec <flatcc_emitter@@Base+0x1b0>
   2ea0c:	ldr	r0, [sp]
   2ea10:	subs	r4, r4, #1
   2ea14:	bne	2e8cc <flatcc_emitter@@Base+0x190>
   2ea18:	mov	r8, #0
   2ea1c:	b	2ea78 <flatcc_emitter@@Base+0x33c>
   2ea20:	ldr	r5, [r6, #16]
   2ea24:	add	r2, r5, r1
   2ea28:	str	r2, [r6, #16]
   2ea2c:	b	2ea44 <flatcc_emitter@@Base+0x308>
   2ea30:	mvn	r8, #0
   2ea34:	b	2ea78 <flatcc_emitter@@Base+0x33c>
   2ea38:	ldr	r2, [r6, #8]
   2ea3c:	sub	r5, r2, r1
   2ea40:	str	r5, [r6, #8]
   2ea44:	sub	r0, r0, r1
   2ea48:	mov	r8, #0
   2ea4c:	cmp	r4, #0
   2ea50:	str	r0, [r9]
   2ea54:	beq	2ea78 <flatcc_emitter@@Base+0x33c>
   2ea58:	ldm	r7, {r1, r2}
   2ea5c:	mov	r0, r5
   2ea60:	bl	12aa8 <memcpy@plt>
   2ea64:	ldr	r0, [r7, #4]
   2ea68:	add	r7, r7, #8
   2ea6c:	subs	r4, r4, #1
   2ea70:	add	r5, r5, r0
   2ea74:	bne	2ea58 <flatcc_emitter@@Base+0x31c>
   2ea78:	mov	r0, r8
   2ea7c:	sub	sp, fp, #28
   2ea80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002ea84 <flatcc_emitter_copy_buffer@@Base>:
   2ea84:	push	{r4, r5, r6, sl, fp, lr}
   2ea88:	add	fp, sp, #16
   2ea8c:	mov	r3, r2
   2ea90:	ldr	r2, [r0, #24]
   2ea94:	mov	r5, #0
   2ea98:	cmp	r2, r3
   2ea9c:	bhi	2eb24 <flatcc_emitter_copy_buffer@@Base+0xa0>
   2eaa0:	mov	r4, r0
   2eaa4:	ldr	r0, [r0]
   2eaa8:	cmp	r0, #0
   2eaac:	beq	2eb24 <flatcc_emitter_copy_buffer@@Base+0xa0>
   2eab0:	mov	r6, r1
   2eab4:	ldr	r1, [r4, #4]
   2eab8:	cmp	r0, r1
   2eabc:	beq	2eb2c <flatcc_emitter_copy_buffer@@Base+0xa8>
   2eac0:	ldr	r0, [r4, #12]
   2eac4:	ldr	r1, [r4, #8]
   2eac8:	rsb	r5, r0, #2944	; 0xb80
   2eacc:	mov	r0, r6
   2ead0:	mov	r2, r5
   2ead4:	bl	12aa8 <memcpy@plt>
   2ead8:	ldm	r4, {r0, r1}
   2eadc:	add	r5, r6, r5
   2eae0:	ldr	r6, [r0, #2944]	; 0xb80
   2eae4:	cmp	r6, r1
   2eae8:	beq	2eb10 <flatcc_emitter_copy_buffer@@Base+0x8c>
   2eaec:	mov	r0, r5
   2eaf0:	mov	r1, r6
   2eaf4:	mov	r2, #2944	; 0xb80
   2eaf8:	bl	12aa8 <memcpy@plt>
   2eafc:	ldr	r6, [r6, #2944]	; 0xb80
   2eb00:	ldr	r0, [r4, #4]
   2eb04:	add	r5, r5, #2944	; 0xb80
   2eb08:	cmp	r6, r0
   2eb0c:	bne	2eaec <flatcc_emitter_copy_buffer@@Base+0x68>
   2eb10:	ldr	r0, [r4, #20]
   2eb14:	mov	r1, r6
   2eb18:	rsb	r2, r0, #2944	; 0xb80
   2eb1c:	mov	r0, r5
   2eb20:	bl	12aa8 <memcpy@plt>
   2eb24:	mov	r0, r5
   2eb28:	pop	{r4, r5, r6, sl, fp, pc}
   2eb2c:	ldr	r1, [r4, #8]
   2eb30:	mov	r0, r6
   2eb34:	bl	12aa8 <memcpy@plt>
   2eb38:	mov	r0, r6
   2eb3c:	pop	{r4, r5, r6, sl, fp, pc}

0002eb40 <grisu3_diy_fp_encode_double@@Base>:
   2eb40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eb44:	add	fp, sp, #28
   2eb48:	sub	sp, sp, #12
   2eb4c:	ldr	lr, [fp, #8]
   2eb50:	orr	r7, r0, r1
   2eb54:	cmp	lr, #0
   2eb58:	movwne	lr, #4
   2eb5c:	cmp	r7, #0
   2eb60:	beq	2ef48 <grisu3_diy_fp_encode_double@@Base+0x408>
   2eb64:	mov	ip, #0
   2eb68:	mov	r5, #0
   2eb6c:	cmp	ip, r1, lsr #22
   2eb70:	bne	2eb90 <grisu3_diy_fp_encode_double@@Base+0x50>
   2eb74:	mov	ip, #0
   2eb78:	lsl	r1, r1, #10
   2eb7c:	sub	ip, ip, #10
   2eb80:	orr	r1, r1, r0, lsr #22
   2eb84:	lsl	r0, r0, #10
   2eb88:	cmp	r1, #4194304	; 0x400000
   2eb8c:	bcc	2eb78 <grisu3_diy_fp_encode_double@@Base+0x38>
   2eb90:	sub	r6, r2, r3
   2eb94:	mvn	r2, #0
   2eb98:	cmp	r1, #0
   2eb9c:	blt	2ebc4 <grisu3_diy_fp_encode_double@@Base+0x84>
   2eba0:	lsl	r1, r1, #1
   2eba4:	lsl	r4, r0, #1
   2eba8:	sub	ip, ip, #1
   2ebac:	orr	r1, r1, r0, lsr #31
   2ebb0:	subs	r0, r2, r0, lsl #1
   2ebb4:	sbcs	r0, r2, r1
   2ebb8:	mov	r0, r4
   2ebbc:	blt	2eba0 <grisu3_diy_fp_encode_double@@Base+0x60>
   2ebc0:	b	2ebc8 <grisu3_diy_fp_encode_double@@Base+0x88>
   2ebc4:	mov	r4, r0
   2ebc8:	cmn	r6, #348	; 0x15c
   2ebcc:	blt	2ef68 <grisu3_diy_fp_encode_double@@Base+0x428>
   2ebd0:	cmp	r6, #348	; 0x15c
   2ebd4:	bge	2ef88 <grisu3_diy_fp_encode_double@@Base+0x448>
   2ebd8:	ldr	r9, [pc, #1064]	; 2f008 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   2ebdc:	add	r0, r6, #348	; 0x15c
   2ebe0:	asr	r5, r0, #31
   2ebe4:	add	r0, r0, r5, lsr #29
   2ebe8:	mvn	r5, #15
   2ebec:	and	r0, r5, r0, lsl #1
   2ebf0:	add	r9, pc, r9
   2ebf4:	ldr	r5, [r9, r0]!
   2ebf8:	ldrsh	r0, [r9, #10]
   2ebfc:	cmp	r6, r0
   2ec00:	blt	2efa8 <grisu3_diy_fp_encode_double@@Base+0x468>
   2ec04:	add	r7, r0, #8
   2ec08:	cmp	r7, r6
   2ec0c:	ble	2efc8 <grisu3_diy_fp_encode_double@@Base+0x488>
   2ec10:	rsb	r7, ip, #0
   2ec14:	cmp	r6, r0
   2ec18:	lsl	r8, lr, r7
   2ec1c:	beq	2eca8 <grisu3_diy_fp_encode_double@@Base+0x168>
   2ec20:	mvn	r0, r0
   2ec24:	str	r8, [sp, #4]
   2ec28:	str	r3, [sp, #8]
   2ec2c:	add	sl, r6, r0
   2ec30:	cmp	sl, #7
   2ec34:	bcs	2efe8 <grisu3_diy_fp_encode_double@@Base+0x4a8>
   2ec38:	ldr	r0, [pc, #972]	; 2f00c <grisu3_diy_fp_encode_double@@Base+0x4cc>
   2ec3c:	add	r0, pc, r0
   2ec40:	ldr	r7, [r0, sl, lsl #4]!
   2ec44:	ldr	r8, [r0, #4]
   2ec48:	ldr	r0, [r0, #8]
   2ec4c:	umull	lr, r6, r7, r1
   2ec50:	str	r0, [sp]
   2ec54:	umull	r3, r0, r8, r4
   2ec58:	umaal	r6, r0, r8, r1
   2ec5c:	umull	r1, r4, r7, r4
   2ec60:	ldr	r8, [sp, #4]
   2ec64:	mov	r1, #0
   2ec68:	adds	r7, lr, r4
   2ec6c:	adc	r1, r1, #0
   2ec70:	adds	r3, r7, r3
   2ec74:	adc	r1, r1, #0
   2ec78:	adds	r3, r3, #-2147483648	; 0x80000000
   2ec7c:	adc	r1, r1, #0
   2ec80:	adds	r4, r6, r1
   2ec84:	adc	r1, r0, #0
   2ec88:	ldr	r0, [sp, #8]
   2ec8c:	add	r0, r0, sl
   2ec90:	add	r0, r0, #1
   2ec94:	cmp	r0, #19
   2ec98:	ldr	r0, [sp]
   2ec9c:	addgt	r8, r8, #4
   2eca0:	add	r0, ip, r0
   2eca4:	add	ip, r0, #64	; 0x40
   2eca8:	ldr	r0, [r9, #4]
   2ecac:	umull	r3, r6, r4, r5
   2ecb0:	mov	lr, #0
   2ecb4:	umull	r3, r7, r1, r5
   2ecb8:	adds	r3, r3, r6
   2ecbc:	adc	r6, lr, #0
   2ecc0:	umull	r4, r5, r4, r0
   2ecc4:	adds	r3, r3, r4
   2ecc8:	umaal	r7, r5, r1, r0
   2eccc:	adc	r4, r6, #0
   2ecd0:	adds	r3, r3, #-2147483648	; 0x80000000
   2ecd4:	mov	r6, #9
   2ecd8:	adc	r3, r4, #0
   2ecdc:	adds	r4, r7, r3
   2ece0:	adc	r3, r5, #0
   2ece4:	cmp	r8, #0
   2ece8:	orr	r0, r4, r3
   2ecec:	movweq	r6, #8
   2ecf0:	cmp	r0, #0
   2ecf4:	beq	2ef48 <grisu3_diy_fp_encode_double@@Base+0x408>
   2ecf8:	ldrsh	r0, [r9, #8]
   2ecfc:	cmp	lr, r3, lsr #22
   2ed00:	add	r0, r0, ip
   2ed04:	add	r5, r0, #64	; 0x40
   2ed08:	bne	2ed30 <grisu3_diy_fp_encode_double@@Base+0x1f0>
   2ed0c:	mov	lr, #0
   2ed10:	mov	r1, r5
   2ed14:	lsl	r0, r3, #10
   2ed18:	sub	r1, r1, #10
   2ed1c:	orr	r3, r0, r4, lsr #22
   2ed20:	lsl	r4, r4, #10
   2ed24:	cmp	r3, #4194304	; 0x400000
   2ed28:	bcc	2ed14 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   2ed2c:	b	2ed34 <grisu3_diy_fp_encode_double@@Base+0x1f4>
   2ed30:	mov	r1, r5
   2ed34:	subs	r0, r2, r4
   2ed38:	add	r7, r6, r8
   2ed3c:	sbcs	r0, r2, r3
   2ed40:	bge	2ed68 <grisu3_diy_fp_encode_double@@Base+0x228>
   2ed44:	lsl	r0, r3, #1
   2ed48:	subs	r6, r2, r4, lsl #1
   2ed4c:	sub	r1, r1, #1
   2ed50:	orr	r3, r0, r4, lsr #31
   2ed54:	lsl	r0, r4, #1
   2ed58:	sbcs	r6, r2, r3
   2ed5c:	mov	r4, r0
   2ed60:	blt	2ed44 <grisu3_diy_fp_encode_double@@Base+0x204>
   2ed64:	b	2ed6c <grisu3_diy_fp_encode_double@@Base+0x22c>
   2ed68:	mov	r0, r4
   2ed6c:	movw	ip, #64462	; 0xfbce
   2ed70:	sub	r2, r5, r1
   2ed74:	mov	r5, #0
   2ed78:	movt	ip, #65535	; 0xffff
   2ed7c:	lsl	lr, r7, r2
   2ed80:	sub	r2, ip, #1
   2ed84:	cmp	r1, r2
   2ed88:	bgt	2eddc <grisu3_diy_fp_encode_double@@Base+0x29c>
   2ed8c:	mvn	r2, #1136	; 0x470
   2ed90:	mov	r5, #64	; 0x40
   2ed94:	cmp	r1, r2
   2ed98:	blt	2eda8 <grisu3_diy_fp_encode_double@@Base+0x268>
   2ed9c:	sub	r5, ip, r1
   2eda0:	cmp	r5, #61	; 0x3d
   2eda4:	blt	2eddc <grisu3_diy_fp_encode_double@@Base+0x29c>
   2eda8:	sub	r2, r5, #62	; 0x3e
   2edac:	mov	r4, #9
   2edb0:	add	lr, r4, lr, asr r2
   2edb4:	lsr	r0, r0, r2
   2edb8:	rsb	r4, r5, #94	; 0x5e
   2edbc:	add	r1, r2, r1
   2edc0:	orr	r0, r0, r3, lsl r4
   2edc4:	sub	r4, r5, #94	; 0x5e
   2edc8:	mov	r5, #62	; 0x3e
   2edcc:	cmp	r4, #0
   2edd0:	lsrge	r0, r3, r4
   2edd4:	lsr	r3, r3, r2
   2edd8:	movwge	r3, #0
   2eddc:	lsr	r2, r0, r5
   2ede0:	rsb	r4, r5, #32
   2ede4:	lsr	r6, r3, r5
   2ede8:	add	r1, r1, r5
   2edec:	orr	r2, r2, r3, lsl r4
   2edf0:	sub	r4, r5, #32
   2edf4:	cmp	r4, #0
   2edf8:	lsrge	r2, r3, r4
   2edfc:	sub	r3, r5, #1
   2ee00:	mov	r4, #1
   2ee04:	movwge	r6, #0
   2ee08:	lsl	r4, r4, r3
   2ee0c:	sub	r3, r5, #33	; 0x21
   2ee10:	cmp	r3, #0
   2ee14:	movwge	r4, #0
   2ee18:	add	sl, lr, r4, lsl #3
   2ee1c:	cmp	r5, sl
   2ee20:	blt	2ee40 <grisu3_diy_fp_encode_double@@Base+0x300>
   2ee24:	adds	r2, r2, #1
   2ee28:	adc	r6, r6, #0
   2ee2c:	tst	r6, #2097152	; 0x200000
   2ee30:	beq	2ee40 <grisu3_diy_fp_encode_double@@Base+0x300>
   2ee34:	lsrs	r6, r6, #1
   2ee38:	add	r1, r1, #1
   2ee3c:	rrx	r2, r2
   2ee40:	and	r0, r4, r0
   2ee44:	cmp	r6, #2097152	; 0x200000
   2ee48:	bcc	2ee6c <grisu3_diy_fp_encode_double@@Base+0x32c>
   2ee4c:	mov	r3, #0
   2ee50:	lsrs	r7, r6, #1
   2ee54:	add	r1, r1, #1
   2ee58:	rrx	r2, r2
   2ee5c:	cmp	r3, r6, lsr #22
   2ee60:	mov	r6, r7
   2ee64:	bne	2ee50 <grisu3_diy_fp_encode_double@@Base+0x310>
   2ee68:	b	2ee70 <grisu3_diy_fp_encode_double@@Base+0x330>
   2ee6c:	mov	r7, r6
   2ee70:	ldr	r8, [fp, #12]
   2ee74:	lsl	r9, r4, #3
   2ee78:	lsl	r0, r0, #3
   2ee7c:	vmov.i32	d16, #0	; 0x00000000
   2ee80:	cmp	r1, ip
   2ee84:	blt	2ef1c <grisu3_diy_fp_encode_double@@Base+0x3dc>
   2ee88:	and	r3, r7, #1048576	; 0x100000
   2ee8c:	mov	r4, #1
   2ee90:	cmp	r1, ip
   2ee94:	eor	r5, r4, r3, lsr #20
   2ee98:	beq	2eedc <grisu3_diy_fp_encode_double@@Base+0x39c>
   2ee9c:	cmp	r3, #0
   2eea0:	bne	2eedc <grisu3_diy_fp_encode_double@@Base+0x39c>
   2eea4:	mov	r3, #1
   2eea8:	lsl	r4, r7, #1
   2eeac:	and	r7, r7, #524288	; 0x80000
   2eeb0:	cmn	r1, #1072	; 0x430
   2eeb4:	orr	r6, r4, r2, lsr #31
   2eeb8:	eor	r5, r3, r7, lsr #19
   2eebc:	lsl	r2, r2, #1
   2eec0:	sub	r4, r1, #1
   2eec4:	blt	2eee4 <grisu3_diy_fp_encode_double@@Base+0x3a4>
   2eec8:	cmp	r7, #0
   2eecc:	mov	r7, r6
   2eed0:	mov	r1, r4
   2eed4:	beq	2eea8 <grisu3_diy_fp_encode_double@@Base+0x368>
   2eed8:	b	2eee4 <grisu3_diy_fp_encode_double@@Base+0x3a4>
   2eedc:	mov	r4, r1
   2eee0:	mov	r6, r7
   2eee4:	cmp	r4, ip
   2eee8:	bne	2eefc <grisu3_diy_fp_encode_double@@Base+0x3bc>
   2eeec:	mov	r1, #0
   2eef0:	cmp	r5, #0
   2eef4:	mov	r3, #0
   2eef8:	bne	2ef0c <grisu3_diy_fp_encode_double@@Base+0x3cc>
   2eefc:	movw	r1, #0
   2ef00:	movt	r1, #17200	; 0x4330
   2ef04:	add	r3, r1, r4, lsl #20
   2ef08:	mov	r1, #0
   2ef0c:	bfc	r6, #20, #12
   2ef10:	orr	r1, r1, r2
   2ef14:	orr	r2, r3, r6
   2ef18:	vmov	d16, r1, r2
   2ef1c:	cmp	r0, sl
   2ef20:	mov	r2, #0
   2ef24:	sub	r3, r9, lr
   2ef28:	mov	r1, #0
   2ef2c:	vstr	d16, [r8]
   2ef30:	movwge	r2, #1
   2ef34:	cmp	r3, r0
   2ef38:	movwge	r1, #1
   2ef3c:	orr	r0, r2, r1
   2ef40:	sub	sp, fp, #28
   2ef44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ef48:	ldr	r0, [pc, #252]	; 2f04c <grisu3_diy_fp_encode_double@@Base+0x50c>
   2ef4c:	ldr	r1, [pc, #252]	; 2f050 <grisu3_diy_fp_encode_double@@Base+0x510>
   2ef50:	ldr	r3, [pc, #252]	; 2f054 <grisu3_diy_fp_encode_double@@Base+0x514>
   2ef54:	mov	r2, #260	; 0x104
   2ef58:	add	r0, pc, r0
   2ef5c:	add	r1, pc, r1
   2ef60:	add	r3, pc, r3
   2ef64:	bl	12bbc <__assert_fail@plt>
   2ef68:	ldr	r0, [pc, #160]	; 2f010 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   2ef6c:	ldr	r1, [pc, #160]	; 2f014 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   2ef70:	ldr	r3, [pc, #160]	; 2f018 <grisu3_diy_fp_encode_double@@Base+0x4d8>
   2ef74:	mov	r2, #80	; 0x50
   2ef78:	add	r0, pc, r0
   2ef7c:	add	r1, pc, r1
   2ef80:	add	r3, pc, r3
   2ef84:	bl	12bbc <__assert_fail@plt>
   2ef88:	ldr	r0, [pc, #140]	; 2f01c <grisu3_diy_fp_encode_double@@Base+0x4dc>
   2ef8c:	ldr	r1, [pc, #140]	; 2f020 <grisu3_diy_fp_encode_double@@Base+0x4e0>
   2ef90:	ldr	r3, [pc, #140]	; 2f024 <grisu3_diy_fp_encode_double@@Base+0x4e4>
   2ef94:	mov	r2, #81	; 0x51
   2ef98:	add	r0, pc, r0
   2ef9c:	add	r1, pc, r1
   2efa0:	add	r3, pc, r3
   2efa4:	bl	12bbc <__assert_fail@plt>
   2efa8:	ldr	r0, [pc, #120]	; 2f028 <grisu3_diy_fp_encode_double@@Base+0x4e8>
   2efac:	ldr	r1, [pc, #120]	; 2f02c <grisu3_diy_fp_encode_double@@Base+0x4ec>
   2efb0:	ldr	r3, [pc, #120]	; 2f030 <grisu3_diy_fp_encode_double@@Base+0x4f0>
   2efb4:	mov	r2, #88	; 0x58
   2efb8:	add	r0, pc, r0
   2efbc:	add	r1, pc, r1
   2efc0:	add	r3, pc, r3
   2efc4:	bl	12bbc <__assert_fail@plt>
   2efc8:	ldr	r0, [pc, #100]	; 2f034 <grisu3_diy_fp_encode_double@@Base+0x4f4>
   2efcc:	ldr	r1, [pc, #100]	; 2f038 <grisu3_diy_fp_encode_double@@Base+0x4f8>
   2efd0:	ldr	r3, [pc, #100]	; 2f03c <grisu3_diy_fp_encode_double@@Base+0x4fc>
   2efd4:	mov	r2, #89	; 0x59
   2efd8:	add	r0, pc, r0
   2efdc:	add	r1, pc, r1
   2efe0:	add	r3, pc, r3
   2efe4:	bl	12bbc <__assert_fail@plt>
   2efe8:	ldr	r0, [pc, #80]	; 2f040 <grisu3_diy_fp_encode_double@@Base+0x500>
   2efec:	ldr	r1, [pc, #80]	; 2f044 <grisu3_diy_fp_encode_double@@Base+0x504>
   2eff0:	ldr	r3, [pc, #80]	; 2f048 <grisu3_diy_fp_encode_double@@Base+0x508>
   2eff4:	mov	r2, #185	; 0xb9
   2eff8:	add	r0, pc, r0
   2effc:	add	r1, pc, r1
   2f000:	add	r3, pc, r3
   2f004:	bl	12bbc <__assert_fail@plt>
   2f008:	muleq	r0, r0, r4
   2f00c:	ldrdeq	r6, [r0], -r4
   2f010:			; <UNDEFINED> instruction: 0x00006eb4
   2f014:	muleq	r0, r0, r8
   2f018:	andeq	r6, r0, fp, asr #29
   2f01c:	andeq	r6, r0, ip, ror #29
   2f020:	andeq	r6, r0, r0, ror r8
   2f024:	andeq	r6, r0, fp, lsr #29
   2f028:	strdeq	r6, [r0], -r7
   2f02c:	andeq	r6, r0, r0, asr r8
   2f030:	andeq	r6, r0, fp, lsl #29
   2f034:	andeq	r6, r0, r6, ror #29
   2f038:	andeq	r6, r0, r0, lsr r8
   2f03c:	andeq	r6, r0, fp, ror #28
   2f040:	strdeq	r6, [r0], -r8
   2f044:	andeq	r6, r0, r0, lsl r8
   2f048:	andeq	r6, r0, sl, ror r8
   2f04c:	andeq	r6, r0, r5, lsr #28
   2f050:	andeq	r6, r0, sl, lsr #28
   2f054:	muleq	r0, r3, lr

0002f058 <flatcc_json_parser_error_string@@Base>:
   2f058:	cmp	r0, #34	; 0x22
   2f05c:	ldrhi	r0, [pc, #24]	; 2f07c <flatcc_json_parser_error_string@@Base+0x24>
   2f060:	addhi	r0, pc, r0
   2f064:	bxhi	lr
   2f068:	ldr	r1, [pc, #8]	; 2f078 <flatcc_json_parser_error_string@@Base+0x20>
   2f06c:	add	r1, pc, r1
   2f070:	ldr	r0, [r1, r0, lsl #2]
   2f074:	bx	lr
   2f078:	andeq	r7, r1, ip, lsl #28
   2f07c:	andeq	r6, r0, r0, ror #21

0002f080 <flatcc_json_parser_set_error@@Base>:
   2f080:	mov	ip, r2
   2f084:	ldr	r2, [r0, #24]
   2f088:	cmp	r2, #0
   2f08c:	beq	2f098 <flatcc_json_parser_set_error@@Base+0x18>
   2f090:	mov	r0, ip
   2f094:	bx	lr
   2f098:	str	r1, [r0, #36]	; 0x24
   2f09c:	add	r1, r1, #1
   2f0a0:	ldr	r2, [r0, #4]
   2f0a4:	sub	r1, r1, r2
   2f0a8:	str	r1, [r0, #20]
   2f0ac:	str	r3, [r0, #24]
   2f0b0:	mov	r0, ip
   2f0b4:	bx	lr

0002f0b8 <flatcc_json_parser_string_part@@Base>:
   2f0b8:	cmp	r1, r2
   2f0bc:	beq	2f0e8 <flatcc_json_parser_string_part@@Base+0x30>
   2f0c0:	ldrb	r3, [r1]
   2f0c4:	cmp	r3, #32
   2f0c8:	bcc	2f11c <flatcc_json_parser_string_part@@Base+0x64>
   2f0cc:	cmp	r3, #34	; 0x22
   2f0d0:	cmpne	r3, #92	; 0x5c
   2f0d4:	beq	2f114 <flatcc_json_parser_string_part@@Base+0x5c>
   2f0d8:	add	r1, r1, #1
   2f0dc:	cmp	r2, r1
   2f0e0:	bne	2f0c0 <flatcc_json_parser_string_part@@Base+0x8>
   2f0e4:	mov	r1, r2
   2f0e8:	ldr	r3, [r0, #24]
   2f0ec:	cmp	r3, #0
   2f0f0:	bne	2f110 <flatcc_json_parser_string_part@@Base+0x58>
   2f0f4:	mov	ip, #20
   2f0f8:	str	r1, [r0, #36]	; 0x24
   2f0fc:	add	r1, r1, #1
   2f100:	ldr	r3, [r0, #4]
   2f104:	sub	r1, r1, r3
   2f108:	str	r1, [r0, #20]
   2f10c:	str	ip, [r0, #24]
   2f110:	mov	r1, r2
   2f114:	mov	r0, r1
   2f118:	bx	lr
   2f11c:	ldr	r3, [r0, #24]
   2f120:	cmp	r3, #0
   2f124:	bne	2f110 <flatcc_json_parser_string_part@@Base+0x58>
   2f128:	mov	ip, #17
   2f12c:	b	2f0f8 <flatcc_json_parser_string_part@@Base+0x40>

0002f130 <flatcc_json_parser_space_ext@@Base>:
   2f130:	mov	ip, r2
   2f134:	cmp	r1, r2
   2f138:	bne	2f218 <flatcc_json_parser_space_ext@@Base+0xe8>
   2f13c:	b	2f240 <flatcc_json_parser_space_ext@@Base+0x110>
   2f140:	add	r1, r1, #1
   2f144:	str	r1, [r0, #4]
   2f148:	ldr	r2, [r0, #16]
   2f14c:	add	r2, r2, #1
   2f150:	str	r2, [r0, #16]
   2f154:	cmp	r1, ip
   2f158:	bne	2f16c <flatcc_json_parser_space_ext@@Base+0x3c>
   2f15c:	b	2f240 <flatcc_json_parser_space_ext@@Base+0x110>
   2f160:	add	r1, r1, #1
   2f164:	cmp	r1, ip
   2f168:	beq	2f240 <flatcc_json_parser_space_ext@@Base+0x110>
   2f16c:	ldrb	r3, [r1]
   2f170:	cmp	r3, #32
   2f174:	movhi	r0, r1
   2f178:	bxhi	lr
   2f17c:	sub	r3, r3, #9
   2f180:	cmp	r3, #23
   2f184:	bhi	2f234 <flatcc_json_parser_space_ext@@Base+0x104>
   2f188:	add	r2, pc, #4
   2f18c:	ldr	r3, [r2, r3, lsl #2]
   2f190:	add	pc, r2, r3
   2f194:			; <UNDEFINED> instruction: 0xffffffcc
   2f198:			; <UNDEFINED> instruction: 0xffffffac
   2f19c:	andeq	r0, r0, r0, lsr #1
   2f1a0:	andeq	r0, r0, r0, lsr #1
   2f1a4:	andeq	r0, r0, r0, rrx
   2f1a8:	andeq	r0, r0, r0, lsr #1
   2f1ac:	andeq	r0, r0, r0, lsr #1
   2f1b0:	andeq	r0, r0, r0, lsr #1
   2f1b4:	andeq	r0, r0, r0, lsr #1
   2f1b8:	andeq	r0, r0, r0, lsr #1
   2f1bc:	andeq	r0, r0, r0, lsr #1
   2f1c0:	andeq	r0, r0, r0, lsr #1
   2f1c4:	andeq	r0, r0, r0, lsr #1
   2f1c8:	andeq	r0, r0, r0, lsr #1
   2f1cc:	andeq	r0, r0, r0, lsr #1
   2f1d0:	andeq	r0, r0, r0, lsr #1
   2f1d4:	andeq	r0, r0, r0, lsr #1
   2f1d8:	andeq	r0, r0, r0, lsr #1
   2f1dc:	andeq	r0, r0, r0, lsr #1
   2f1e0:	andeq	r0, r0, r0, lsr #1
   2f1e4:	andeq	r0, r0, r0, lsr #1
   2f1e8:	andeq	r0, r0, r0, lsr #1
   2f1ec:	andeq	r0, r0, r0, lsr #1
   2f1f0:	muleq	r0, r4, r0
   2f1f4:	sub	r2, ip, r1
   2f1f8:	mov	r3, #0
   2f1fc:	cmp	r2, #2
   2f200:	ldrbge	r2, [r1, #1]
   2f204:	subge	r2, r2, #10
   2f208:	clzge	r2, r2
   2f20c:	lsrge	r3, r2, #5
   2f210:	add	r1, r1, r3
   2f214:	b	2f140 <flatcc_json_parser_space_ext@@Base+0x10>
   2f218:	ldrb	r3, [r1]
   2f21c:	cmp	r3, #32
   2f220:	bne	2f154 <flatcc_json_parser_space_ext@@Base+0x24>
   2f224:	add	r1, r1, #1
   2f228:	cmp	r1, ip
   2f22c:	bne	2f218 <flatcc_json_parser_space_ext@@Base+0xe8>
   2f230:	b	2f240 <flatcc_json_parser_space_ext@@Base+0x110>
   2f234:	ldr	r2, [r0, #24]
   2f238:	cmp	r2, #0
   2f23c:	beq	2f248 <flatcc_json_parser_space_ext@@Base+0x118>
   2f240:	mov	r0, ip
   2f244:	bx	lr
   2f248:	str	r1, [r0, #36]	; 0x24
   2f24c:	add	r1, r1, #1
   2f250:	mov	r2, #5
   2f254:	ldr	r3, [r0, #4]
   2f258:	sub	r1, r1, r3
   2f25c:	str	r1, [r0, #20]
   2f260:	str	r2, [r0, #24]
   2f264:	mov	r0, ip
   2f268:	bx	lr

0002f26c <flatcc_json_parser_string_escape@@Base>:
   2f26c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f270:	add	fp, sp, #24
   2f274:	sub	r7, r2, r1
   2f278:	cmp	r7, #2
   2f27c:	blt	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f280:	ldrb	r6, [r1]
   2f284:	cmp	r6, #92	; 0x5c
   2f288:	bne	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f28c:	ldrb	r6, [r1, #1]
   2f290:	sub	r6, r6, #34	; 0x22
   2f294:	cmp	r6, #86	; 0x56
   2f298:	bhi	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f29c:	add	r5, pc, #4
   2f2a0:	ldr	r6, [r5, r6, lsl #2]
   2f2a4:	add	pc, r5, r6
   2f2a8:	andeq	r0, r0, ip, asr r1
   2f2ac:	ldrdeq	r0, [r0], -ip
   2f2b0:	ldrdeq	r0, [r0], -ip
   2f2b4:	ldrdeq	r0, [r0], -ip
   2f2b8:	ldrdeq	r0, [r0], -ip
   2f2bc:	ldrdeq	r0, [r0], -ip
   2f2c0:	ldrdeq	r0, [r0], -ip
   2f2c4:	ldrdeq	r0, [r0], -ip
   2f2c8:	ldrdeq	r0, [r0], -ip
   2f2cc:	ldrdeq	r0, [r0], -ip
   2f2d0:	ldrdeq	r0, [r0], -ip
   2f2d4:	ldrdeq	r0, [r0], -ip
   2f2d8:	ldrdeq	r0, [r0], -ip
   2f2dc:	andeq	r0, r0, r4, ror #2
   2f2e0:	ldrdeq	r0, [r0], -ip
   2f2e4:	ldrdeq	r0, [r0], -ip
   2f2e8:	ldrdeq	r0, [r0], -ip
   2f2ec:	ldrdeq	r0, [r0], -ip
   2f2f0:	ldrdeq	r0, [r0], -ip
   2f2f4:	ldrdeq	r0, [r0], -ip
   2f2f8:	ldrdeq	r0, [r0], -ip
   2f2fc:	ldrdeq	r0, [r0], -ip
   2f300:	ldrdeq	r0, [r0], -ip
   2f304:	ldrdeq	r0, [r0], -ip
   2f308:	ldrdeq	r0, [r0], -ip
   2f30c:	ldrdeq	r0, [r0], -ip
   2f310:	ldrdeq	r0, [r0], -ip
   2f314:	ldrdeq	r0, [r0], -ip
   2f318:	ldrdeq	r0, [r0], -ip
   2f31c:	ldrdeq	r0, [r0], -ip
   2f320:	ldrdeq	r0, [r0], -ip
   2f324:	ldrdeq	r0, [r0], -ip
   2f328:	ldrdeq	r0, [r0], -ip
   2f32c:	ldrdeq	r0, [r0], -ip
   2f330:	ldrdeq	r0, [r0], -ip
   2f334:	ldrdeq	r0, [r0], -ip
   2f338:	ldrdeq	r0, [r0], -ip
   2f33c:	ldrdeq	r0, [r0], -ip
   2f340:	ldrdeq	r0, [r0], -ip
   2f344:	ldrdeq	r0, [r0], -ip
   2f348:	ldrdeq	r0, [r0], -ip
   2f34c:	ldrdeq	r0, [r0], -ip
   2f350:	ldrdeq	r0, [r0], -ip
   2f354:	ldrdeq	r0, [r0], -ip
   2f358:	ldrdeq	r0, [r0], -ip
   2f35c:	ldrdeq	r0, [r0], -ip
   2f360:	ldrdeq	r0, [r0], -ip
   2f364:	ldrdeq	r0, [r0], -ip
   2f368:	ldrdeq	r0, [r0], -ip
   2f36c:	ldrdeq	r0, [r0], -ip
   2f370:	ldrdeq	r0, [r0], -ip
   2f374:	ldrdeq	r0, [r0], -ip
   2f378:	ldrdeq	r0, [r0], -ip
   2f37c:	ldrdeq	r0, [r0], -ip
   2f380:	ldrdeq	r0, [r0], -ip
   2f384:	ldrdeq	r0, [r0], -ip
   2f388:	ldrdeq	r0, [r0], -ip
   2f38c:	ldrdeq	r0, [r0], -ip
   2f390:	andeq	r0, r0, ip, ror #2
   2f394:	ldrdeq	r0, [r0], -ip
   2f398:	ldrdeq	r0, [r0], -ip
   2f39c:	ldrdeq	r0, [r0], -ip
   2f3a0:	ldrdeq	r0, [r0], -ip
   2f3a4:	ldrdeq	r0, [r0], -ip
   2f3a8:	andeq	r0, r0, r4, ror r1
   2f3ac:	ldrdeq	r0, [r0], -ip
   2f3b0:	ldrdeq	r0, [r0], -ip
   2f3b4:	ldrdeq	r0, [r0], -ip
   2f3b8:	andeq	r0, r0, ip, ror r1
   2f3bc:	ldrdeq	r0, [r0], -ip
   2f3c0:	ldrdeq	r0, [r0], -ip
   2f3c4:	ldrdeq	r0, [r0], -ip
   2f3c8:	ldrdeq	r0, [r0], -ip
   2f3cc:	ldrdeq	r0, [r0], -ip
   2f3d0:	ldrdeq	r0, [r0], -ip
   2f3d4:	ldrdeq	r0, [r0], -ip
   2f3d8:	andeq	r0, r0, r4, lsl #3
   2f3dc:	ldrdeq	r0, [r0], -ip
   2f3e0:	ldrdeq	r0, [r0], -ip
   2f3e4:	ldrdeq	r0, [r0], -ip
   2f3e8:	andeq	r0, r0, ip, lsl #3
   2f3ec:	ldrdeq	r0, [r0], -ip
   2f3f0:	muleq	r0, r4, r1
   2f3f4:	andeq	r0, r0, r8, lsr #3
   2f3f8:	ldrdeq	r0, [r0], -ip
   2f3fc:	ldrdeq	r0, [r0], -ip
   2f400:	andeq	r0, r0, ip, asr #3
   2f404:	movw	r0, #8705	; 0x2201
   2f408:	b	2f440 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f40c:	movw	r0, #12033	; 0x2f01
   2f410:	b	2f440 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f414:	movw	r0, #23553	; 0x5c01
   2f418:	b	2f440 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f41c:	movw	r0, #2049	; 0x801
   2f420:	b	2f440 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f424:	movw	r0, #3073	; 0xc01
   2f428:	b	2f440 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f42c:	movw	r0, #2561	; 0xa01
   2f430:	b	2f440 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f434:	movw	r0, #3329	; 0xd01
   2f438:	b	2f440 <flatcc_json_parser_string_escape@@Base+0x1d4>
   2f43c:	movw	r0, #2305	; 0x901
   2f440:	add	r2, r1, #2
   2f444:	strh	r0, [r3]
   2f448:	mov	r0, r2
   2f44c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f450:	cmp	r7, #5
   2f454:	ble	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f458:	ldrb	r7, [r1, #2]
   2f45c:	sub	r6, r7, #48	; 0x30
   2f460:	uxtb	r6, r6
   2f464:	cmp	r6, #9
   2f468:	bhi	2f4e0 <flatcc_json_parser_string_escape@@Base+0x274>
   2f46c:	lsl	ip, r7, #12
   2f470:	b	2f500 <flatcc_json_parser_string_escape@@Base+0x294>
   2f474:	mov	r6, #1
   2f478:	cmp	r7, #3
   2f47c:	strb	r6, [r3]
   2f480:	bgt	2f4c4 <flatcc_json_parser_string_escape@@Base+0x258>
   2f484:	mov	r7, #0
   2f488:	strb	r7, [r3]
   2f48c:	ldr	r3, [r0, #24]
   2f490:	cmp	r3, #0
   2f494:	beq	2f4a0 <flatcc_json_parser_string_escape@@Base+0x234>
   2f498:	mov	r0, r2
   2f49c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f4a0:	str	r1, [r0, #36]	; 0x24
   2f4a4:	add	r1, r1, #1
   2f4a8:	mov	r3, #18
   2f4ac:	ldr	r7, [r0, #4]
   2f4b0:	sub	r1, r1, r7
   2f4b4:	str	r1, [r0, #20]
   2f4b8:	str	r3, [r0, #24]
   2f4bc:	mov	r0, r2
   2f4c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f4c4:	ldrb	r7, [r1, #2]
   2f4c8:	sub	r6, r7, #48	; 0x30
   2f4cc:	uxtb	r6, r6
   2f4d0:	cmp	r6, #9
   2f4d4:	bhi	2f51c <flatcc_json_parser_string_escape@@Base+0x2b0>
   2f4d8:	lsl	r7, r7, #4
   2f4dc:	b	2f538 <flatcc_json_parser_string_escape@@Base+0x2cc>
   2f4e0:	orr	r6, r7, #32
   2f4e4:	sub	r6, r6, #97	; 0x61
   2f4e8:	uxtb	r6, r6
   2f4ec:	cmp	r6, #5
   2f4f0:	bhi	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f4f4:	movw	r6, #36864	; 0x9000
   2f4f8:	movt	r6, #65535	; 0xffff
   2f4fc:	add	ip, r6, r7, lsl #12
   2f500:	ldrb	lr, [r1, #3]
   2f504:	sub	r4, lr, #48	; 0x30
   2f508:	uxtb	r4, r4
   2f50c:	cmp	r4, #10
   2f510:	bcs	2f578 <flatcc_json_parser_string_escape@@Base+0x30c>
   2f514:	mov	r8, #53248	; 0xd000
   2f518:	b	2f590 <flatcc_json_parser_string_escape@@Base+0x324>
   2f51c:	orr	r6, r7, #32
   2f520:	sub	r6, r6, #97	; 0x61
   2f524:	uxtb	r6, r6
   2f528:	cmp	r6, #5
   2f52c:	bhi	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f530:	mvn	r6, #111	; 0x6f
   2f534:	add	r7, r6, r7, lsl #4
   2f538:	ldrb	r5, [r1, #3]
   2f53c:	sub	r6, r5, #48	; 0x30
   2f540:	uxtb	r4, r6
   2f544:	cmp	r4, #10
   2f548:	bcc	2f564 <flatcc_json_parser_string_escape@@Base+0x2f8>
   2f54c:	orr	r6, r5, #32
   2f550:	sub	r5, r6, #97	; 0x61
   2f554:	uxtb	r5, r5
   2f558:	cmp	r5, #5
   2f55c:	bhi	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f560:	sub	r6, r6, #87	; 0x57
   2f564:	orr	r0, r6, r7
   2f568:	add	r2, r1, #4
   2f56c:	strb	r0, [r3, #1]
   2f570:	mov	r0, r2
   2f574:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f578:	orr	lr, lr, #32
   2f57c:	mov	r8, #43264	; 0xa900
   2f580:	sub	r4, lr, #97	; 0x61
   2f584:	uxtb	r4, r4
   2f588:	cmp	r4, #6
   2f58c:	bcs	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f590:	ldrb	r5, [r1, #4]
   2f594:	sub	r4, r5, #48	; 0x30
   2f598:	uxtb	r4, r4
   2f59c:	cmp	r4, #10
   2f5a0:	bcs	2f5ac <flatcc_json_parser_string_escape@@Base+0x340>
   2f5a4:	mov	r9, #64768	; 0xfd00
   2f5a8:	b	2f5c4 <flatcc_json_parser_string_escape@@Base+0x358>
   2f5ac:	orr	r5, r5, #32
   2f5b0:	movw	r9, #64144	; 0xfa90
   2f5b4:	sub	r4, r5, #97	; 0x61
   2f5b8:	uxtb	r4, r4
   2f5bc:	cmp	r4, #6
   2f5c0:	bcs	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f5c4:	ldrb	r7, [r1, #5]
   2f5c8:	sub	r4, r7, #48	; 0x30
   2f5cc:	uxtb	r4, r4
   2f5d0:	cmp	r4, #10
   2f5d4:	bcs	2f5e4 <flatcc_json_parser_string_escape@@Base+0x378>
   2f5d8:	mvn	r0, #86	; 0x56
   2f5dc:	add	r4, r0, #39	; 0x27
   2f5e0:	b	2f5fc <flatcc_json_parser_string_escape@@Base+0x390>
   2f5e4:	orr	r7, r7, #32
   2f5e8:	movw	r4, #65449	; 0xffa9
   2f5ec:	sub	r6, r7, #97	; 0x61
   2f5f0:	uxtb	r6, r6
   2f5f4:	cmp	r6, #6
   2f5f8:	bcs	2f484 <flatcc_json_parser_string_escape@@Base+0x218>
   2f5fc:	add	r0, r8, lr, lsl #8
   2f600:	add	r2, r9, r5, lsl #4
   2f604:	orr	r0, r0, ip
   2f608:	orr	r0, r0, r2
   2f60c:	add	r2, r4, r7
   2f610:	orr	r0, r0, r2
   2f614:	uxth	r7, r0
   2f618:	cmp	r7, #127	; 0x7f
   2f61c:	bhi	2f62c <flatcc_json_parser_string_escape@@Base+0x3c0>
   2f620:	mov	r2, #1
   2f624:	strb	r2, [r3]
   2f628:	b	2f680 <flatcc_json_parser_string_escape@@Base+0x414>
   2f62c:	and	r2, r0, #63488	; 0xf800
   2f630:	mov	r6, #0
   2f634:	cmp	r6, r2, lsr #11
   2f638:	bne	2f654 <flatcc_json_parser_string_escape@@Base+0x3e8>
   2f63c:	mov	r7, #192	; 0xc0
   2f640:	mov	r2, #2
   2f644:	orr	r7, r7, r0, lsr #6
   2f648:	strb	r2, [r3]
   2f64c:	strb	r7, [r3, #1]
   2f650:	b	2f678 <flatcc_json_parser_string_escape@@Base+0x40c>
   2f654:	mov	r6, #224	; 0xe0
   2f658:	mov	r2, #3
   2f65c:	orr	r6, r6, r7, lsr #12
   2f660:	strb	r2, [r3]
   2f664:	lsr	r7, r7, #6
   2f668:	strb	r6, [r3, #1]
   2f66c:	mov	r6, #2
   2f670:	bfi	r7, r6, #6, #26
   2f674:	strb	r7, [r3, #2]
   2f678:	mvn	r7, #-67108863	; 0xfc000001
   2f67c:	bfi	r0, r7, #6, #26
   2f680:	strb	r0, [r3, r2]
   2f684:	add	r2, r1, #6
   2f688:	mov	r0, r2
   2f68c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002f690 <flatcc_json_parser_skip_constant@@Base>:
   2f690:	push	{r4, r5, r6, sl, fp, lr}
   2f694:	add	fp, sp, #16
   2f698:	cmp	r1, r2
   2f69c:	moveq	r0, r1
   2f6a0:	popeq	{r4, r5, r6, sl, fp, pc}
   2f6a4:	mov	r4, r2
   2f6a8:	mov	r5, r0
   2f6ac:	b	2f6bc <flatcc_json_parser_skip_constant@@Base+0x2c>
   2f6b0:	cmp	r1, r4
   2f6b4:	moveq	r0, r4
   2f6b8:	popeq	{r4, r5, r6, sl, fp, pc}
   2f6bc:	ldrsb	r0, [r1]
   2f6c0:	mov	r6, r1
   2f6c4:	cmp	r0, #0
   2f6c8:	blt	2f6dc <flatcc_json_parser_skip_constant@@Base+0x4c>
   2f6cc:	uxtb	r0, r0
   2f6d0:	cmp	r0, #95	; 0x5f
   2f6d4:	cmpne	r0, #46	; 0x2e
   2f6d8:	bne	2f6e4 <flatcc_json_parser_skip_constant@@Base+0x54>
   2f6dc:	add	r1, r6, #1
   2f6e0:	b	2f6b0 <flatcc_json_parser_skip_constant@@Base+0x20>
   2f6e4:	sub	r1, r0, #48	; 0x30
   2f6e8:	uxtb	r1, r1
   2f6ec:	cmp	r1, #9
   2f6f0:	bls	2f6dc <flatcc_json_parser_skip_constant@@Base+0x4c>
   2f6f4:	orr	r1, r0, #32
   2f6f8:	sub	r1, r1, #97	; 0x61
   2f6fc:	uxtb	r1, r1
   2f700:	cmp	r1, #25
   2f704:	bls	2f6dc <flatcc_json_parser_skip_constant@@Base+0x4c>
   2f708:	sub	r1, r4, r6
   2f70c:	cmp	r1, #2
   2f710:	blt	2f730 <flatcc_json_parser_skip_constant@@Base+0xa0>
   2f714:	cmp	r0, #32
   2f718:	bhi	2f74c <flatcc_json_parser_skip_constant@@Base+0xbc>
   2f71c:	bne	2f730 <flatcc_json_parser_skip_constant@@Base+0xa0>
   2f720:	mov	r1, r6
   2f724:	ldrb	r0, [r1, #1]!
   2f728:	cmp	r0, #32
   2f72c:	bhi	2f6b0 <flatcc_json_parser_skip_constant@@Base+0x20>
   2f730:	mov	r0, r5
   2f734:	mov	r1, r6
   2f738:	mov	r2, r4
   2f73c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2f740:	mov	r1, r0
   2f744:	cmp	r0, r6
   2f748:	bne	2f6b0 <flatcc_json_parser_skip_constant@@Base+0x20>
   2f74c:	mov	r0, r6
   2f750:	pop	{r4, r5, r6, sl, fp, pc}

0002f754 <flatcc_json_parser_match_constant@@Base>:
   2f754:	push	{r4, r5, r6, r7, fp, lr}
   2f758:	add	fp, sp, #16
   2f75c:	ldr	r7, [fp, #8]
   2f760:	mov	r4, r1
   2f764:	sub	r1, r2, r1
   2f768:	cmp	r1, r3
   2f76c:	ble	2f86c <flatcc_json_parser_match_constant@@Base+0x118>
   2f770:	ldr	r1, [r0, #12]
   2f774:	mov	r5, r2
   2f778:	add	r6, r4, r3
   2f77c:	cmp	r1, #0
   2f780:	beq	2f804 <flatcc_json_parser_match_constant@@Base+0xb0>
   2f784:	sub	r1, r5, r6
   2f788:	cmp	r1, #2
   2f78c:	blt	2f7b4 <flatcc_json_parser_match_constant@@Base+0x60>
   2f790:	ldrb	r1, [r6]
   2f794:	mov	r2, r6
   2f798:	cmp	r1, #32
   2f79c:	bhi	2f7c4 <flatcc_json_parser_match_constant@@Base+0x70>
   2f7a0:	bne	2f7b4 <flatcc_json_parser_match_constant@@Base+0x60>
   2f7a4:	mov	r2, r6
   2f7a8:	ldrb	r1, [r2, #1]!
   2f7ac:	cmp	r1, #32
   2f7b0:	bhi	2f7c4 <flatcc_json_parser_match_constant@@Base+0x70>
   2f7b4:	mov	r1, r6
   2f7b8:	mov	r2, r5
   2f7bc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2f7c0:	mov	r2, r0
   2f7c4:	cmp	r2, r5
   2f7c8:	beq	2f880 <flatcc_json_parser_match_constant@@Base+0x12c>
   2f7cc:	cmp	r2, r6
   2f7d0:	beq	2f890 <flatcc_json_parser_match_constant@@Base+0x13c>
   2f7d4:	ldrsb	r0, [r2]
   2f7d8:	cmp	r0, #95	; 0x5f
   2f7dc:	beq	2f7fc <flatcc_json_parser_match_constant@@Base+0xa8>
   2f7e0:	cmn	r0, #1
   2f7e4:	ble	2f7fc <flatcc_json_parser_match_constant@@Base+0xa8>
   2f7e8:	orr	r0, r0, #32
   2f7ec:	sub	r0, r0, #97	; 0x61
   2f7f0:	uxtb	r0, r0
   2f7f4:	cmp	r0, #25
   2f7f8:	bhi	2f890 <flatcc_json_parser_match_constant@@Base+0x13c>
   2f7fc:	mov	r0, #1
   2f800:	b	2f914 <flatcc_json_parser_match_constant@@Base+0x1c0>
   2f804:	ldrb	r1, [r6]
   2f808:	cmp	r1, #92	; 0x5c
   2f80c:	beq	2f8b8 <flatcc_json_parser_match_constant@@Base+0x164>
   2f810:	cmp	r1, #34	; 0x22
   2f814:	beq	2f848 <flatcc_json_parser_match_constant@@Base+0xf4>
   2f818:	cmp	r1, #32
   2f81c:	bne	2f86c <flatcc_json_parser_match_constant@@Base+0x118>
   2f820:	add	r1, r4, r3
   2f824:	add	r1, r1, #1
   2f828:	cmp	r5, r1
   2f82c:	beq	2f880 <flatcc_json_parser_match_constant@@Base+0x12c>
   2f830:	ldrb	r2, [r1], #1
   2f834:	cmp	r2, #32
   2f838:	beq	2f828 <flatcc_json_parser_match_constant@@Base+0xd4>
   2f83c:	cmp	r2, #34	; 0x22
   2f840:	bne	2f920 <flatcc_json_parser_match_constant@@Base+0x1cc>
   2f844:	sub	r6, r1, #1
   2f848:	mvn	r2, r6
   2f84c:	add	r1, r6, #1
   2f850:	cmp	r2, #2
   2f854:	blt	2f904 <flatcc_json_parser_match_constant@@Base+0x1b0>
   2f858:	ldrb	r2, [r1]
   2f85c:	cmp	r2, #32
   2f860:	bls	2f8f0 <flatcc_json_parser_match_constant@@Base+0x19c>
   2f864:	mov	r2, r1
   2f868:	b	2f910 <flatcc_json_parser_match_constant@@Base+0x1bc>
   2f86c:	mov	r0, #0
   2f870:	mov	r2, r4
   2f874:	str	r0, [r7]
   2f878:	mov	r0, r2
   2f87c:	pop	{r4, r5, r6, r7, fp, pc}
   2f880:	mov	r0, #0
   2f884:	str	r0, [r7]
   2f888:	mov	r0, r5
   2f88c:	pop	{r4, r5, r6, r7, fp, pc}
   2f890:	mov	r0, #0
   2f894:	str	r0, [r7]
   2f898:	ldrb	r0, [r2]
   2f89c:	cmp	r0, #44	; 0x2c
   2f8a0:	cmpne	r0, #93	; 0x5d
   2f8a4:	beq	2f878 <flatcc_json_parser_match_constant@@Base+0x124>
   2f8a8:	cmp	r0, #125	; 0x7d
   2f8ac:	movne	r2, r4
   2f8b0:	mov	r0, r2
   2f8b4:	pop	{r4, r5, r6, r7, fp, pc}
   2f8b8:	mov	r1, #0
   2f8bc:	str	r1, [r7]
   2f8c0:	ldr	r1, [r0, #24]
   2f8c4:	cmp	r1, #0
   2f8c8:	bne	2f888 <flatcc_json_parser_match_constant@@Base+0x134>
   2f8cc:	str	r6, [r0, #36]	; 0x24
   2f8d0:	add	r3, r6, #1
   2f8d4:	mov	r1, #18
   2f8d8:	ldr	r2, [r0, #4]
   2f8dc:	sub	r2, r3, r2
   2f8e0:	str	r2, [r0, #20]
   2f8e4:	str	r1, [r0, #24]
   2f8e8:	mov	r0, r5
   2f8ec:	pop	{r4, r5, r6, r7, fp, pc}
   2f8f0:	bne	2f904 <flatcc_json_parser_match_constant@@Base+0x1b0>
   2f8f4:	ldrb	r2, [r6, #2]!
   2f8f8:	cmp	r2, #32
   2f8fc:	mov	r2, r6
   2f900:	bhi	2f910 <flatcc_json_parser_match_constant@@Base+0x1bc>
   2f904:	mov	r2, #0
   2f908:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2f90c:	mov	r2, r0
   2f910:	mov	r0, #0
   2f914:	str	r0, [r7]
   2f918:	mov	r0, r2
   2f91c:	pop	{r4, r5, r6, r7, fp, pc}
   2f920:	mov	r0, #1
   2f924:	sub	r2, r1, #1
   2f928:	str	r0, [r7]
   2f92c:	mov	r0, r2
   2f930:	pop	{r4, r5, r6, r7, fp, pc}

0002f934 <flatcc_json_parser_unmatched_symbol@@Base>:
   2f934:	push	{r4, r5, r6, sl, fp, lr}
   2f938:	add	fp, sp, #16
   2f93c:	mov	r6, r0
   2f940:	ldrb	r0, [r0, #8]
   2f944:	mov	r4, r2
   2f948:	tst	r0, #1
   2f94c:	bne	2f974 <flatcc_json_parser_unmatched_symbol@@Base+0x40>
   2f950:	ldr	r0, [r6, #24]
   2f954:	cmp	r0, #0
   2f958:	bne	2fb38 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   2f95c:	str	r1, [r6, #36]	; 0x24
   2f960:	add	r1, r1, #1
   2f964:	mov	r0, #13
   2f968:	ldr	r2, [r6, #4]
   2f96c:	sub	r1, r1, r2
   2f970:	b	2fb54 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   2f974:	ldr	r0, [r6, #12]
   2f978:	cmp	r0, #0
   2f97c:	beq	2fa08 <flatcc_json_parser_unmatched_symbol@@Base+0xd4>
   2f980:	cmp	r1, r4
   2f984:	beq	2fa00 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   2f988:	ldrb	r3, [r1]
   2f98c:	cmp	r3, #33	; 0x21
   2f990:	bcc	2fa00 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   2f994:	add	r0, r1, #1
   2f998:	uxtb	r2, r3
   2f99c:	cmp	r2, #46	; 0x2e
   2f9a0:	cmpne	r2, #95	; 0x5f
   2f9a4:	bne	2f9c4 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
   2f9a8:	cmp	r4, r0
   2f9ac:	beq	2fa68 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   2f9b0:	ldrb	r3, [r0], #1
   2f9b4:	add	r1, r1, #1
   2f9b8:	cmp	r3, #33	; 0x21
   2f9bc:	bcs	2f998 <flatcc_json_parser_unmatched_symbol@@Base+0x64>
   2f9c0:	b	2fa6c <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   2f9c4:	sxtb	r5, r3
   2f9c8:	cmp	r5, #0
   2f9cc:	blt	2f9a8 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   2f9d0:	sub	r5, r3, #48	; 0x30
   2f9d4:	uxtb	r5, r5
   2f9d8:	cmp	r5, #9
   2f9dc:	bls	2f9a8 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   2f9e0:	orr	r3, r3, #32
   2f9e4:	sub	r3, r3, #97	; 0x61
   2f9e8:	uxtb	r3, r3
   2f9ec:	cmp	r3, #26
   2f9f0:	bcc	2f9a8 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   2f9f4:	sub	r1, r0, #1
   2f9f8:	cmp	r2, #46	; 0x2e
   2f9fc:	beq	2fa74 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   2fa00:	mov	r2, r1
   2fa04:	b	2faa4 <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   2fa08:	cmp	r1, r4
   2fa0c:	beq	2fa48 <flatcc_json_parser_unmatched_symbol@@Base+0x114>
   2fa10:	ldrb	r0, [r1]
   2fa14:	cmp	r0, #92	; 0x5c
   2fa18:	beq	2fa28 <flatcc_json_parser_unmatched_symbol@@Base+0xf4>
   2fa1c:	cmp	r0, #34	; 0x22
   2fa20:	bne	2fa38 <flatcc_json_parser_unmatched_symbol@@Base+0x104>
   2fa24:	b	2fa60 <flatcc_json_parser_unmatched_symbol@@Base+0x12c>
   2fa28:	sub	r0, r4, r1
   2fa2c:	cmp	r0, #2
   2fa30:	blt	2fa48 <flatcc_json_parser_unmatched_symbol@@Base+0x114>
   2fa34:	add	r1, r1, #1
   2fa38:	add	r1, r1, #1
   2fa3c:	cmp	r1, r4
   2fa40:	bne	2fa10 <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
   2fa44:	mov	r1, r4
   2fa48:	ldr	r0, [r6, #24]
   2fa4c:	mov	r2, r4
   2fa50:	cmp	r0, #0
   2fa54:	bne	2faa4 <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   2fa58:	mov	r0, #20
   2fa5c:	b	2fa88 <flatcc_json_parser_unmatched_symbol@@Base+0x154>
   2fa60:	add	r2, r1, #1
   2fa64:	b	2faa4 <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   2fa68:	mov	r1, r4
   2fa6c:	cmp	r2, #46	; 0x2e
   2fa70:	bne	2fa00 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   2fa74:	ldr	r0, [r6, #24]
   2fa78:	mov	r2, r4
   2fa7c:	cmp	r0, #0
   2fa80:	bne	2faa4 <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   2fa84:	mov	r0, #5
   2fa88:	str	r1, [r6, #36]	; 0x24
   2fa8c:	add	r1, r1, #1
   2fa90:	ldr	r2, [r6, #4]
   2fa94:	sub	r1, r1, r2
   2fa98:	mov	r2, r4
   2fa9c:	str	r1, [r6, #20]
   2faa0:	str	r0, [r6, #24]
   2faa4:	sub	r0, r4, r2
   2faa8:	cmp	r0, #2
   2faac:	blt	2fae0 <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   2fab0:	ldrb	r0, [r2]
   2fab4:	cmp	r0, #32
   2fab8:	bls	2facc <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   2fabc:	mov	r3, r2
   2fac0:	cmp	r3, r4
   2fac4:	bne	2fafc <flatcc_json_parser_unmatched_symbol@@Base+0x1c8>
   2fac8:	b	2fb2c <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   2facc:	bne	2fae0 <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   2fad0:	mov	r3, r2
   2fad4:	ldrb	r0, [r3, #1]!
   2fad8:	cmp	r0, #32
   2fadc:	bhi	2faf4 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   2fae0:	mov	r1, r2
   2fae4:	mov	r0, r6
   2fae8:	mov	r2, r4
   2faec:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2faf0:	mov	r3, r0
   2faf4:	cmp	r3, r4
   2faf8:	beq	2fb2c <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   2fafc:	ldrb	r0, [r3]
   2fb00:	cmp	r0, #58	; 0x3a
   2fb04:	bne	2fb2c <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   2fb08:	add	r1, r3, #1
   2fb0c:	sub	r0, r4, r1
   2fb10:	cmp	r0, #2
   2fb14:	blt	2fb74 <flatcc_json_parser_unmatched_symbol@@Base+0x240>
   2fb18:	ldrb	r0, [r1]
   2fb1c:	cmp	r0, #32
   2fb20:	bls	2fb64 <flatcc_json_parser_unmatched_symbol@@Base+0x230>
   2fb24:	mov	r3, r1
   2fb28:	b	2fb84 <flatcc_json_parser_unmatched_symbol@@Base+0x250>
   2fb2c:	ldr	r0, [r6, #24]
   2fb30:	cmp	r0, #0
   2fb34:	beq	2fb40 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   2fb38:	mov	r0, r4
   2fb3c:	pop	{r4, r5, r6, sl, fp, pc}
   2fb40:	str	r3, [r6, #36]	; 0x24
   2fb44:	add	r2, r3, #1
   2fb48:	mov	r0, #4
   2fb4c:	ldr	r1, [r6, #4]
   2fb50:	sub	r1, r2, r1
   2fb54:	str	r1, [r6, #20]
   2fb58:	str	r0, [r6, #24]
   2fb5c:	mov	r0, r4
   2fb60:	pop	{r4, r5, r6, sl, fp, pc}
   2fb64:	bne	2fb74 <flatcc_json_parser_unmatched_symbol@@Base+0x240>
   2fb68:	ldrb	r0, [r3, #2]!
   2fb6c:	cmp	r0, #32
   2fb70:	bhi	2fb84 <flatcc_json_parser_unmatched_symbol@@Base+0x250>
   2fb74:	mov	r0, r6
   2fb78:	mov	r2, r4
   2fb7c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2fb80:	mov	r3, r0
   2fb84:	mov	r0, r6
   2fb88:	mov	r1, r3
   2fb8c:	mov	r2, r4
   2fb90:	pop	{r4, r5, r6, sl, fp, lr}
   2fb94:	b	2fb98 <flatcc_json_parser_generic_json@@Base>

0002fb98 <flatcc_json_parser_generic_json@@Base>:
   2fb98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fb9c:	add	fp, sp, #28
   2fba0:	sub	sp, sp, #540	; 0x21c
   2fba4:	mov	r7, r1
   2fba8:	cmp	r1, r2
   2fbac:	beq	30800 <flatcc_json_parser_generic_json@@Base+0xc68>
   2fbb0:	mov	r5, r0
   2fbb4:	add	r0, r2, #1
   2fbb8:	add	r1, sp, #24
   2fbbc:	mov	r6, r2
   2fbc0:	mov	r8, #0
   2fbc4:	str	r0, [sp, #4]
   2fbc8:	add	r0, r5, #36	; 0x24
   2fbcc:	sub	sl, r1, #1
   2fbd0:	add	r9, r5, #24
   2fbd4:	str	r0, [sp, #16]
   2fbd8:	add	r0, r5, #20
   2fbdc:	str	r0, [sp, #12]
   2fbe0:	add	r0, r5, #4
   2fbe4:	str	r0, [sp, #8]
   2fbe8:	mov	r0, r1
   2fbec:	cmp	r8, #0
   2fbf0:	beq	2fe7c <flatcc_json_parser_generic_json@@Base+0x2e4>
   2fbf4:	ldrb	r0, [r0, #-1]
   2fbf8:	cmp	r0, #125	; 0x7d
   2fbfc:	bne	2fe7c <flatcc_json_parser_generic_json@@Base+0x2e4>
   2fc00:	ldrb	r0, [r7]
   2fc04:	cmp	r0, #46	; 0x2e
   2fc08:	beq	2fc68 <flatcc_json_parser_generic_json@@Base+0xd0>
   2fc0c:	cmp	r0, #34	; 0x22
   2fc10:	bne	2fcb4 <flatcc_json_parser_generic_json@@Base+0x11c>
   2fc14:	mov	r0, #0
   2fc18:	mov	r2, r6
   2fc1c:	str	r0, [r5, #12]
   2fc20:	add	r0, r7, #1
   2fc24:	cmp	r0, r6
   2fc28:	beq	2fd9c <flatcc_json_parser_generic_json@@Base+0x204>
   2fc2c:	ldrb	r1, [r0]
   2fc30:	cmp	r1, #92	; 0x5c
   2fc34:	beq	2fc44 <flatcc_json_parser_generic_json@@Base+0xac>
   2fc38:	cmp	r1, #34	; 0x22
   2fc3c:	bne	2fc54 <flatcc_json_parser_generic_json@@Base+0xbc>
   2fc40:	b	2fd48 <flatcc_json_parser_generic_json@@Base+0x1b0>
   2fc44:	sub	r1, r6, r0
   2fc48:	cmp	r1, #2
   2fc4c:	blt	2fd98 <flatcc_json_parser_generic_json@@Base+0x200>
   2fc50:	add	r0, r0, #1
   2fc54:	add	r0, r0, #1
   2fc58:	cmp	r0, r6
   2fc5c:	bne	2fc2c <flatcc_json_parser_generic_json@@Base+0x94>
   2fc60:	mov	r2, r6
   2fc64:	b	2fd9c <flatcc_json_parser_generic_json@@Base+0x204>
   2fc68:	ldr	r0, [r9]
   2fc6c:	cmp	r0, #0
   2fc70:	bne	2fc9c <flatcc_json_parser_generic_json@@Base+0x104>
   2fc74:	mov	r0, #5
   2fc78:	add	r1, r7, #1
   2fc7c:	str	r0, [r9]
   2fc80:	ldr	r0, [sp, #8]
   2fc84:	ldr	r0, [r0]
   2fc88:	sub	r0, r1, r0
   2fc8c:	ldr	r1, [sp, #12]
   2fc90:	str	r0, [r1]
   2fc94:	ldr	r0, [sp, #16]
   2fc98:	str	r7, [r0]
   2fc9c:	ldr	r0, [r5, #12]
   2fca0:	mov	r2, r6
   2fca4:	mov	r1, r6
   2fca8:	cmp	r0, #0
   2fcac:	bne	2fdd8 <flatcc_json_parser_generic_json@@Base+0x240>
   2fcb0:	b	2fd9c <flatcc_json_parser_generic_json@@Base+0x204>
   2fcb4:	mov	r0, #1
   2fcb8:	cmp	r7, r6
   2fcbc:	mov	r1, r6
   2fcc0:	str	r0, [r5, #12]
   2fcc4:	beq	2fdd8 <flatcc_json_parser_generic_json@@Base+0x240>
   2fcc8:	ldrb	r2, [r7]
   2fccc:	cmp	r2, #33	; 0x21
   2fcd0:	bcc	2fd40 <flatcc_json_parser_generic_json@@Base+0x1a8>
   2fcd4:	add	r0, r7, #1
   2fcd8:	uxtb	r1, r2
   2fcdc:	cmp	r1, #46	; 0x2e
   2fce0:	cmpne	r1, #95	; 0x5f
   2fce4:	bne	2fd04 <flatcc_json_parser_generic_json@@Base+0x16c>
   2fce8:	cmp	r6, r0
   2fcec:	beq	2fd50 <flatcc_json_parser_generic_json@@Base+0x1b8>
   2fcf0:	ldrb	r2, [r0], #1
   2fcf4:	add	r7, r7, #1
   2fcf8:	cmp	r2, #33	; 0x21
   2fcfc:	bcs	2fcd8 <flatcc_json_parser_generic_json@@Base+0x140>
   2fd00:	b	2fd54 <flatcc_json_parser_generic_json@@Base+0x1bc>
   2fd04:	sxtb	r3, r2
   2fd08:	cmp	r3, #0
   2fd0c:	blt	2fce8 <flatcc_json_parser_generic_json@@Base+0x150>
   2fd10:	sub	r3, r2, #48	; 0x30
   2fd14:	uxtb	r3, r3
   2fd18:	cmp	r3, #9
   2fd1c:	bls	2fce8 <flatcc_json_parser_generic_json@@Base+0x150>
   2fd20:	orr	r2, r2, #32
   2fd24:	sub	r2, r2, #97	; 0x61
   2fd28:	uxtb	r2, r2
   2fd2c:	cmp	r2, #26
   2fd30:	bcc	2fce8 <flatcc_json_parser_generic_json@@Base+0x150>
   2fd34:	sub	r7, r0, #1
   2fd38:	cmp	r1, #46	; 0x2e
   2fd3c:	beq	2fd5c <flatcc_json_parser_generic_json@@Base+0x1c4>
   2fd40:	mov	r1, r7
   2fd44:	b	2fdd8 <flatcc_json_parser_generic_json@@Base+0x240>
   2fd48:	add	r1, r0, #1
   2fd4c:	b	2fdd8 <flatcc_json_parser_generic_json@@Base+0x240>
   2fd50:	mov	r7, r6
   2fd54:	cmp	r1, #46	; 0x2e
   2fd58:	bne	2fd40 <flatcc_json_parser_generic_json@@Base+0x1a8>
   2fd5c:	ldr	r0, [r9]
   2fd60:	mov	r1, r6
   2fd64:	cmp	r0, #0
   2fd68:	bne	2fdd8 <flatcc_json_parser_generic_json@@Base+0x240>
   2fd6c:	mov	r0, #5
   2fd70:	add	r1, r7, #1
   2fd74:	str	r0, [r9]
   2fd78:	ldr	r0, [sp, #8]
   2fd7c:	ldr	r0, [r0]
   2fd80:	sub	r0, r1, r0
   2fd84:	ldr	r1, [sp, #12]
   2fd88:	str	r0, [r1]
   2fd8c:	ldr	r0, [sp, #16]
   2fd90:	str	r7, [r0]
   2fd94:	b	2fdd4 <flatcc_json_parser_generic_json@@Base+0x23c>
   2fd98:	mov	r2, r0
   2fd9c:	ldr	r0, [r9]
   2fda0:	mov	r1, r6
   2fda4:	cmp	r0, #0
   2fda8:	bne	2fdd8 <flatcc_json_parser_generic_json@@Base+0x240>
   2fdac:	mov	r0, #20
   2fdb0:	add	r1, r2, #1
   2fdb4:	str	r0, [r9]
   2fdb8:	ldr	r0, [sp, #8]
   2fdbc:	ldr	r0, [r0]
   2fdc0:	sub	r0, r1, r0
   2fdc4:	ldr	r1, [sp, #12]
   2fdc8:	str	r0, [r1]
   2fdcc:	ldr	r0, [sp, #16]
   2fdd0:	str	r2, [r0]
   2fdd4:	mov	r1, r6
   2fdd8:	sub	r0, r6, r1
   2fddc:	cmp	r0, #2
   2fde0:	blt	2fe14 <flatcc_json_parser_generic_json@@Base+0x27c>
   2fde4:	ldrb	r0, [r1]
   2fde8:	cmp	r0, #32
   2fdec:	bls	2fe00 <flatcc_json_parser_generic_json@@Base+0x268>
   2fdf0:	mov	r7, r1
   2fdf4:	cmp	r7, r6
   2fdf8:	bne	2fe2c <flatcc_json_parser_generic_json@@Base+0x294>
   2fdfc:	b	30884 <flatcc_json_parser_generic_json@@Base+0xcec>
   2fe00:	bne	2fe14 <flatcc_json_parser_generic_json@@Base+0x27c>
   2fe04:	mov	r7, r1
   2fe08:	ldrb	r0, [r7, #1]!
   2fe0c:	cmp	r0, #32
   2fe10:	bhi	2fe24 <flatcc_json_parser_generic_json@@Base+0x28c>
   2fe14:	mov	r0, r5
   2fe18:	mov	r2, r6
   2fe1c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2fe20:	mov	r7, r0
   2fe24:	cmp	r7, r6
   2fe28:	beq	30884 <flatcc_json_parser_generic_json@@Base+0xcec>
   2fe2c:	ldrb	r0, [r7]
   2fe30:	cmp	r0, #58	; 0x3a
   2fe34:	bne	3089c <flatcc_json_parser_generic_json@@Base+0xd04>
   2fe38:	add	r1, r7, #1
   2fe3c:	sub	r0, r6, r1
   2fe40:	cmp	r0, #2
   2fe44:	blt	2fe6c <flatcc_json_parser_generic_json@@Base+0x2d4>
   2fe48:	ldrb	r2, [r1]
   2fe4c:	cmp	r2, #32
   2fe50:	bls	2fe5c <flatcc_json_parser_generic_json@@Base+0x2c4>
   2fe54:	mov	r7, r1
   2fe58:	b	2fe80 <flatcc_json_parser_generic_json@@Base+0x2e8>
   2fe5c:	bne	2fe6c <flatcc_json_parser_generic_json@@Base+0x2d4>
   2fe60:	ldrb	r2, [r7, #2]!
   2fe64:	cmp	r2, #32
   2fe68:	bhi	2fe80 <flatcc_json_parser_generic_json@@Base+0x2e8>
   2fe6c:	mov	r0, r5
   2fe70:	mov	r2, r6
   2fe74:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   2fe78:	mov	r7, r0
   2fe7c:	ldrb	r2, [r7]
   2fe80:	sub	r0, r2, #48	; 0x30
   2fe84:	cmp	r0, #10
   2fe88:	bcs	2ff24 <flatcc_json_parser_generic_json@@Base+0x38c>
   2fe8c:	cmp	r7, r6
   2fe90:	beq	302e0 <flatcc_json_parser_generic_json@@Base+0x748>
   2fe94:	cmp	r2, #45	; 0x2d
   2fe98:	bne	2feac <flatcc_json_parser_generic_json@@Base+0x314>
   2fe9c:	add	r7, r7, #1
   2fea0:	cmp	r7, r6
   2fea4:	beq	302bc <flatcc_json_parser_generic_json@@Base+0x724>
   2fea8:	ldrb	r2, [r7]
   2feac:	cmp	r2, #48	; 0x30
   2feb0:	bne	2ff40 <flatcc_json_parser_generic_json@@Base+0x3a8>
   2feb4:	add	r4, r7, #1
   2feb8:	cmp	r4, r6
   2febc:	mov	r1, r6
   2fec0:	beq	302d4 <flatcc_json_parser_generic_json@@Base+0x73c>
   2fec4:	ldrb	r0, [r4]
   2fec8:	cmp	r0, #46	; 0x2e
   2fecc:	bne	30158 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2fed0:	mov	r0, r4
   2fed4:	ldrb	r1, [r0, #1]!
   2fed8:	sub	r1, r1, #48	; 0x30
   2fedc:	uxtb	r1, r1
   2fee0:	cmp	r1, #10
   2fee4:	bcc	30124 <flatcc_json_parser_generic_json@@Base+0x58c>
   2fee8:	ldr	r1, [r9]
   2feec:	cmp	r1, #0
   2fef0:	bne	302e0 <flatcc_json_parser_generic_json@@Base+0x748>
   2fef4:	mov	r1, #6
   2fef8:	add	r2, r0, #1
   2fefc:	mov	r4, r6
   2ff00:	str	r1, [r9]
   2ff04:	ldr	r1, [sp, #8]
   2ff08:	ldr	r1, [r1]
   2ff0c:	sub	r1, r2, r1
   2ff10:	ldr	r2, [sp, #12]
   2ff14:	str	r1, [r2]
   2ff18:	ldr	r1, [sp, #16]
   2ff1c:	str	r0, [r1]
   2ff20:	b	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   2ff24:	cmp	r2, #90	; 0x5a
   2ff28:	bgt	2ff88 <flatcc_json_parser_generic_json@@Base+0x3f0>
   2ff2c:	cmp	r2, #34	; 0x22
   2ff30:	beq	30000 <flatcc_json_parser_generic_json@@Base+0x468>
   2ff34:	cmp	r2, #45	; 0x2d
   2ff38:	beq	2fe8c <flatcc_json_parser_generic_json@@Base+0x2f4>
   2ff3c:	b	30064 <flatcc_json_parser_generic_json@@Base+0x4cc>
   2ff40:	sub	r0, r2, #49	; 0x31
   2ff44:	uxtb	r0, r0
   2ff48:	cmp	r0, #8
   2ff4c:	bls	2ffd8 <flatcc_json_parser_generic_json@@Base+0x440>
   2ff50:	ldr	r0, [r9]
   2ff54:	cmp	r0, #0
   2ff58:	bne	302e0 <flatcc_json_parser_generic_json@@Base+0x748>
   2ff5c:	mov	r0, #6
   2ff60:	add	r1, r7, #1
   2ff64:	str	r0, [r9]
   2ff68:	ldr	r0, [sp, #8]
   2ff6c:	ldr	r0, [r0]
   2ff70:	sub	r0, r1, r0
   2ff74:	ldr	r1, [sp, #12]
   2ff78:	str	r0, [r1]
   2ff7c:	ldr	r0, [sp, #16]
   2ff80:	str	r7, [r0]
   2ff84:	b	302e0 <flatcc_json_parser_generic_json@@Base+0x748>
   2ff88:	cmp	r2, #91	; 0x5b
   2ff8c:	beq	30024 <flatcc_json_parser_generic_json@@Base+0x48c>
   2ff90:	cmp	r2, #123	; 0x7b
   2ff94:	bne	30064 <flatcc_json_parser_generic_json@@Base+0x4cc>
   2ff98:	cmp	r8, #512	; 0x200
   2ff9c:	beq	308b0 <flatcc_json_parser_generic_json@@Base+0xd18>
   2ffa0:	add	r0, sp, #24
   2ffa4:	mov	r1, #125	; 0x7d
   2ffa8:	strb	r1, [r0, r8]
   2ffac:	add	r1, r7, #1
   2ffb0:	sub	r0, r6, r1
   2ffb4:	cmp	r0, #2
   2ffb8:	blt	30634 <flatcc_json_parser_generic_json@@Base+0xa9c>
   2ffbc:	ldrb	r0, [r1]
   2ffc0:	cmp	r0, #32
   2ffc4:	bls	30624 <flatcc_json_parser_generic_json@@Base+0xa8c>
   2ffc8:	mov	r7, r1
   2ffcc:	cmp	r7, r6
   2ffd0:	bne	3064c <flatcc_json_parser_generic_json@@Base+0xab4>
   2ffd4:	b	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   2ffd8:	add	r0, r7, #1
   2ffdc:	cmp	r6, r0
   2ffe0:	beq	302d0 <flatcc_json_parser_generic_json@@Base+0x738>
   2ffe4:	ldrb	r1, [r0], #1
   2ffe8:	sub	r1, r1, #48	; 0x30
   2ffec:	uxtb	r1, r1
   2fff0:	cmp	r1, #10
   2fff4:	bcc	2ffdc <flatcc_json_parser_generic_json@@Base+0x444>
   2fff8:	sub	r4, r0, #1
   2fffc:	b	2feb8 <flatcc_json_parser_generic_json@@Base+0x320>
   30000:	cmp	r7, r6
   30004:	beq	305e8 <flatcc_json_parser_generic_json@@Base+0xa50>
   30008:	add	r0, r7, #1
   3000c:	mov	r1, r6
   30010:	add	r4, sp, #20
   30014:	mov	r7, #17
   30018:	cmp	r0, r6
   3001c:	bne	306f4 <flatcc_json_parser_generic_json@@Base+0xb5c>
   30020:	b	307d4 <flatcc_json_parser_generic_json@@Base+0xc3c>
   30024:	cmp	r8, #512	; 0x200
   30028:	beq	308b0 <flatcc_json_parser_generic_json@@Base+0xd18>
   3002c:	add	r0, sp, #24
   30030:	mov	r1, #93	; 0x5d
   30034:	strb	r1, [r0, r8]
   30038:	add	r1, r7, #1
   3003c:	sub	r0, r6, r1
   30040:	cmp	r0, #2
   30044:	blt	30674 <flatcc_json_parser_generic_json@@Base+0xadc>
   30048:	ldrb	r0, [r1]
   3004c:	cmp	r0, #32
   30050:	bls	30664 <flatcc_json_parser_generic_json@@Base+0xacc>
   30054:	mov	r7, r1
   30058:	cmp	r7, r6
   3005c:	bne	3068c <flatcc_json_parser_generic_json@@Base+0xaf4>
   30060:	b	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   30064:	cmp	r7, r6
   30068:	mov	r4, r6
   3006c:	beq	30118 <flatcc_json_parser_generic_json@@Base+0x580>
   30070:	mov	r4, r7
   30074:	b	30080 <flatcc_json_parser_generic_json@@Base+0x4e8>
   30078:	ldrb	r2, [r0]
   3007c:	mov	r4, r0
   30080:	sxtb	r0, r2
   30084:	cmp	r0, #0
   30088:	blt	3009c <flatcc_json_parser_generic_json@@Base+0x504>
   3008c:	uxtb	r0, r2
   30090:	cmp	r0, #95	; 0x5f
   30094:	cmpne	r0, #46	; 0x2e
   30098:	bne	300ac <flatcc_json_parser_generic_json@@Base+0x514>
   3009c:	add	r0, r4, #1
   300a0:	cmp	r0, r6
   300a4:	bne	30078 <flatcc_json_parser_generic_json@@Base+0x4e0>
   300a8:	b	30114 <flatcc_json_parser_generic_json@@Base+0x57c>
   300ac:	sub	r1, r2, #48	; 0x30
   300b0:	uxtb	r1, r1
   300b4:	cmp	r1, #9
   300b8:	bls	3009c <flatcc_json_parser_generic_json@@Base+0x504>
   300bc:	orr	r1, r2, #32
   300c0:	sub	r1, r1, #97	; 0x61
   300c4:	uxtb	r1, r1
   300c8:	cmp	r1, #25
   300cc:	bls	3009c <flatcc_json_parser_generic_json@@Base+0x504>
   300d0:	sub	r1, r6, r4
   300d4:	cmp	r1, #2
   300d8:	blt	300f8 <flatcc_json_parser_generic_json@@Base+0x560>
   300dc:	cmp	r0, #32
   300e0:	bhi	30118 <flatcc_json_parser_generic_json@@Base+0x580>
   300e4:	bne	300f8 <flatcc_json_parser_generic_json@@Base+0x560>
   300e8:	mov	r0, r4
   300ec:	ldrb	r1, [r0, #1]!
   300f0:	cmp	r1, #32
   300f4:	bhi	300a0 <flatcc_json_parser_generic_json@@Base+0x508>
   300f8:	mov	r0, r5
   300fc:	mov	r1, r4
   30100:	mov	r2, r6
   30104:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   30108:	cmp	r0, r4
   3010c:	bne	300a0 <flatcc_json_parser_generic_json@@Base+0x508>
   30110:	b	30118 <flatcc_json_parser_generic_json@@Base+0x580>
   30114:	mov	r4, r6
   30118:	cmp	r7, r4
   3011c:	bne	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   30120:	b	308c4 <flatcc_json_parser_generic_json@@Base+0xd2c>
   30124:	add	r4, r4, #2
   30128:	mov	r1, r6
   3012c:	cmp	r4, r6
   30130:	beq	302d4 <flatcc_json_parser_generic_json@@Base+0x73c>
   30134:	ldrb	r0, [r4]
   30138:	sub	r1, r0, #48	; 0x30
   3013c:	uxtb	r1, r1
   30140:	cmp	r1, #9
   30144:	bhi	30158 <flatcc_json_parser_generic_json@@Base+0x5c0>
   30148:	add	r4, r4, #1
   3014c:	cmp	r6, r4
   30150:	bne	30134 <flatcc_json_parser_generic_json@@Base+0x59c>
   30154:	b	302d0 <flatcc_json_parser_generic_json@@Base+0x738>
   30158:	cmp	r4, r6
   3015c:	mov	r1, r6
   30160:	beq	302d4 <flatcc_json_parser_generic_json@@Base+0x73c>
   30164:	orr	r1, r0, #32
   30168:	cmp	r1, #101	; 0x65
   3016c:	bne	301cc <flatcc_json_parser_generic_json@@Base+0x634>
   30170:	add	r0, r4, #1
   30174:	cmp	r0, r6
   30178:	beq	302bc <flatcc_json_parser_generic_json@@Base+0x724>
   3017c:	ldrb	r1, [r0]
   30180:	cmp	r1, #45	; 0x2d
   30184:	cmpne	r1, #43	; 0x2b
   30188:	addeq	r0, r4, #2
   3018c:	cmp	r0, r6
   30190:	beq	2fee8 <flatcc_json_parser_generic_json@@Base+0x350>
   30194:	ldrb	r1, [r0]
   30198:	sub	r1, r1, #48	; 0x30
   3019c:	uxtb	r1, r1
   301a0:	cmp	r1, #9
   301a4:	bhi	2fee8 <flatcc_json_parser_generic_json@@Base+0x350>
   301a8:	add	r1, r0, #1
   301ac:	cmp	r6, r1
   301b0:	beq	302d0 <flatcc_json_parser_generic_json@@Base+0x738>
   301b4:	ldrb	r0, [r1], #1
   301b8:	sub	r2, r0, #48	; 0x30
   301bc:	uxtb	r2, r2
   301c0:	cmp	r2, #10
   301c4:	bcc	301ac <flatcc_json_parser_generic_json@@Base+0x614>
   301c8:	sub	r4, r1, #1
   301cc:	cmp	r4, r6
   301d0:	mov	r1, r6
   301d4:	beq	302d4 <flatcc_json_parser_generic_json@@Base+0x73c>
   301d8:	sub	r1, r0, #9
   301dc:	cmp	r1, #49	; 0x31
   301e0:	bhi	307e8 <flatcc_json_parser_generic_json@@Base+0xc50>
   301e4:	add	r0, pc, #8
   301e8:	ldr	r2, [r0, r1, lsl #2]
   301ec:	mov	r1, r4
   301f0:	add	pc, r0, r2
   301f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   301f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   301fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30200:	andeq	r0, r0, r0, ror #1
   30204:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30208:	andeq	r0, r0, r0, ror #1
   3020c:	andeq	r0, r0, r0, ror #1
   30210:	andeq	r0, r0, r0, ror #1
   30214:	andeq	r0, r0, r0, ror #1
   30218:	andeq	r0, r0, r0, ror #1
   3021c:	andeq	r0, r0, r0, ror #1
   30220:	andeq	r0, r0, r0, ror #1
   30224:	andeq	r0, r0, r0, ror #1
   30228:	andeq	r0, r0, r0, ror #1
   3022c:	andeq	r0, r0, r0, ror #1
   30230:	andeq	r0, r0, r0, ror #1
   30234:	andeq	r0, r0, r0, ror #1
   30238:	andeq	r0, r0, r0, ror #1
   3023c:	andeq	r0, r0, r0, ror #1
   30240:	andeq	r0, r0, r0, ror #1
   30244:	andeq	r0, r0, r0, ror #1
   30248:	andeq	r0, r0, r0, ror #1
   3024c:	andeq	r0, r0, r0, ror #1
   30250:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30254:	andeq	r0, r0, r0, ror #1
   30258:	andeq	r0, r0, r0, ror #1
   3025c:	andeq	r0, r0, r0, ror #1
   30260:	andeq	r0, r0, r0, ror #1
   30264:	andeq	r0, r0, r0, ror #1
   30268:	andeq	r0, r0, r0, ror #1
   3026c:	andeq	r0, r0, r0, ror #1
   30270:	andeq	r0, r0, r0, ror #1
   30274:	andeq	r0, r0, r0, ror #1
   30278:	andeq	r0, r0, r0, ror #1
   3027c:	andeq	r0, r0, r0, ror #1
   30280:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30284:	andeq	r0, r0, r0, ror #1
   30288:	andeq	r0, r0, r0, ror #1
   3028c:	andeq	r0, r0, r0, ror #1
   30290:	andeq	r0, r0, r0, ror #1
   30294:	andeq	r0, r0, r0, ror #1
   30298:	andeq	r0, r0, r0, ror #1
   3029c:	andeq	r0, r0, r0, ror #1
   302a0:	andeq	r0, r0, r0, ror #1
   302a4:	andeq	r0, r0, r0, ror #1
   302a8:	andeq	r0, r0, r0, ror #1
   302ac:	andeq	r0, r0, r0, ror #1
   302b0:	andeq	r0, r0, r0, ror #1
   302b4:	andeq	r0, r0, r0, ror #1
   302b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   302bc:	ldr	r0, [r9]
   302c0:	cmp	r0, #0
   302c4:	bne	302e0 <flatcc_json_parser_generic_json@@Base+0x748>
   302c8:	mov	r0, #6
   302cc:	b	305f8 <flatcc_json_parser_generic_json@@Base+0xa60>
   302d0:	mov	r1, r6
   302d4:	ldr	r0, [r9]
   302d8:	cmp	r0, #0
   302dc:	beq	305b8 <flatcc_json_parser_generic_json@@Base+0xa20>
   302e0:	mov	r4, r6
   302e4:	subs	r1, r4, r6
   302e8:	mov	r2, r8
   302ec:	movwne	r1, #1
   302f0:	cmp	r8, #0
   302f4:	movwne	r2, #1
   302f8:	beq	30808 <flatcc_json_parser_generic_json@@Base+0xc70>
   302fc:	cmp	r4, r6
   30300:	beq	30818 <flatcc_json_parser_generic_json@@Base+0xc80>
   30304:	ldrb	r1, [sl, r8]
   30308:	sub	r0, r6, r4
   3030c:	cmp	r1, #93	; 0x5d
   30310:	bne	30330 <flatcc_json_parser_generic_json@@Base+0x798>
   30314:	cmp	r0, #2
   30318:	blt	30360 <flatcc_json_parser_generic_json@@Base+0x7c8>
   3031c:	ldrb	r0, [r4]
   30320:	cmp	r0, #32
   30324:	bls	3034c <flatcc_json_parser_generic_json@@Base+0x7b4>
   30328:	mov	r7, r4
   3032c:	b	30374 <flatcc_json_parser_generic_json@@Base+0x7dc>
   30330:	cmp	r0, #2
   30334:	blt	303c0 <flatcc_json_parser_generic_json@@Base+0x828>
   30338:	ldrb	r0, [r4]
   3033c:	cmp	r0, #32
   30340:	bls	303ac <flatcc_json_parser_generic_json@@Base+0x814>
   30344:	mov	r7, r4
   30348:	b	303d4 <flatcc_json_parser_generic_json@@Base+0x83c>
   3034c:	bne	30360 <flatcc_json_parser_generic_json@@Base+0x7c8>
   30350:	mov	r7, r4
   30354:	ldrb	r0, [r7, #1]!
   30358:	cmp	r0, #32
   3035c:	bhi	30374 <flatcc_json_parser_generic_json@@Base+0x7dc>
   30360:	mov	r0, r5
   30364:	mov	r1, r4
   30368:	mov	r2, r6
   3036c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   30370:	mov	r7, r0
   30374:	cmp	r7, r6
   30378:	mov	r4, r6
   3037c:	beq	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   30380:	ldrb	r0, [r7]
   30384:	cmp	r0, #44	; 0x2c
   30388:	beq	30434 <flatcc_json_parser_generic_json@@Base+0x89c>
   3038c:	cmp	r0, #93	; 0x5d
   30390:	beq	30548 <flatcc_json_parser_generic_json@@Base+0x9b0>
   30394:	ldr	r0, [r9]
   30398:	mov	r4, r6
   3039c:	cmp	r0, #0
   303a0:	bne	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   303a4:	mov	r0, #9
   303a8:	b	30408 <flatcc_json_parser_generic_json@@Base+0x870>
   303ac:	bne	303c0 <flatcc_json_parser_generic_json@@Base+0x828>
   303b0:	mov	r7, r4
   303b4:	ldrb	r0, [r7, #1]!
   303b8:	cmp	r0, #32
   303bc:	bhi	303d4 <flatcc_json_parser_generic_json@@Base+0x83c>
   303c0:	mov	r0, r5
   303c4:	mov	r1, r4
   303c8:	mov	r2, r6
   303cc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   303d0:	mov	r7, r0
   303d4:	cmp	r7, r6
   303d8:	mov	r4, r6
   303dc:	beq	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   303e0:	ldrb	r0, [r7]
   303e4:	cmp	r0, #44	; 0x2c
   303e8:	beq	30474 <flatcc_json_parser_generic_json@@Base+0x8dc>
   303ec:	cmp	r0, #125	; 0x7d
   303f0:	beq	30548 <flatcc_json_parser_generic_json@@Base+0x9b0>
   303f4:	ldr	r0, [r9]
   303f8:	mov	r4, r6
   303fc:	cmp	r0, #0
   30400:	bne	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   30404:	mov	r0, #10
   30408:	str	r0, [r9]
   3040c:	ldr	r0, [sp, #8]
   30410:	add	r1, r7, #1
   30414:	mov	r4, r6
   30418:	ldr	r0, [r0]
   3041c:	sub	r0, r1, r0
   30420:	ldr	r1, [sp, #12]
   30424:	str	r0, [r1]
   30428:	ldr	r0, [sp, #16]
   3042c:	str	r7, [r0]
   30430:	b	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   30434:	add	r1, r7, #1
   30438:	sub	r0, r6, r1
   3043c:	cmp	r0, #2
   30440:	blt	304ec <flatcc_json_parser_generic_json@@Base+0x954>
   30444:	ldrb	r0, [r1]
   30448:	cmp	r0, #32
   3044c:	bls	304dc <flatcc_json_parser_generic_json@@Base+0x944>
   30450:	mov	r7, r1
   30454:	cmp	r7, r6
   30458:	bne	30504 <flatcc_json_parser_generic_json@@Base+0x96c>
   3045c:	ldr	r0, [r9]
   30460:	mov	r4, r6
   30464:	cmp	r0, #0
   30468:	bne	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   3046c:	mov	r0, #9
   30470:	b	304b0 <flatcc_json_parser_generic_json@@Base+0x918>
   30474:	add	r1, r7, #1
   30478:	sub	r0, r6, r1
   3047c:	cmp	r0, #2
   30480:	blt	30524 <flatcc_json_parser_generic_json@@Base+0x98c>
   30484:	ldrb	r0, [r1]
   30488:	cmp	r0, #32
   3048c:	bls	30514 <flatcc_json_parser_generic_json@@Base+0x97c>
   30490:	mov	r7, r1
   30494:	cmp	r7, r6
   30498:	bne	3053c <flatcc_json_parser_generic_json@@Base+0x9a4>
   3049c:	ldr	r0, [r9]
   304a0:	mov	r4, r6
   304a4:	cmp	r0, #0
   304a8:	bne	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   304ac:	mov	r0, #10
   304b0:	str	r0, [r9]
   304b4:	ldr	r0, [sp, #8]
   304b8:	ldr	r1, [sp, #4]
   304bc:	mov	r4, r6
   304c0:	ldr	r0, [r0]
   304c4:	sub	r0, r1, r0
   304c8:	ldr	r1, [sp, #12]
   304cc:	str	r0, [r1]
   304d0:	ldr	r0, [sp, #16]
   304d4:	str	r6, [r0]
   304d8:	b	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   304dc:	bne	304ec <flatcc_json_parser_generic_json@@Base+0x954>
   304e0:	ldrb	r0, [r7, #2]!
   304e4:	cmp	r0, #32
   304e8:	bhi	304fc <flatcc_json_parser_generic_json@@Base+0x964>
   304ec:	mov	r0, r5
   304f0:	mov	r2, r6
   304f4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   304f8:	mov	r7, r0
   304fc:	cmp	r7, r6
   30500:	beq	3045c <flatcc_json_parser_generic_json@@Base+0x8c4>
   30504:	ldrb	r0, [r7]
   30508:	cmp	r0, #93	; 0x5d
   3050c:	beq	30548 <flatcc_json_parser_generic_json@@Base+0x9b0>
   30510:	b	306a0 <flatcc_json_parser_generic_json@@Base+0xb08>
   30514:	bne	30524 <flatcc_json_parser_generic_json@@Base+0x98c>
   30518:	ldrb	r0, [r7, #2]!
   3051c:	cmp	r0, #32
   30520:	bhi	30534 <flatcc_json_parser_generic_json@@Base+0x99c>
   30524:	mov	r0, r5
   30528:	mov	r2, r6
   3052c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   30530:	mov	r7, r0
   30534:	cmp	r7, r6
   30538:	beq	3049c <flatcc_json_parser_generic_json@@Base+0x904>
   3053c:	ldrb	r0, [r7]
   30540:	cmp	r0, #125	; 0x7d
   30544:	bne	306a0 <flatcc_json_parser_generic_json@@Base+0xb08>
   30548:	add	r1, r7, #1
   3054c:	sub	r0, r6, r1
   30550:	cmp	r0, #2
   30554:	blt	30580 <flatcc_json_parser_generic_json@@Base+0x9e8>
   30558:	ldrb	r0, [r1]
   3055c:	cmp	r0, #32
   30560:	bls	3056c <flatcc_json_parser_generic_json@@Base+0x9d4>
   30564:	mov	r4, r1
   30568:	b	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   3056c:	bne	30580 <flatcc_json_parser_generic_json@@Base+0x9e8>
   30570:	ldrb	r0, [r7, #2]!
   30574:	cmp	r0, #32
   30578:	mov	r4, r7
   3057c:	bhi	30590 <flatcc_json_parser_generic_json@@Base+0x9f8>
   30580:	mov	r0, r5
   30584:	mov	r2, r6
   30588:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   3058c:	mov	r4, r0
   30590:	subs	r1, r4, r6
   30594:	sub	r0, r8, #1
   30598:	movwne	r1, #1
   3059c:	subs	r2, r8, #1
   305a0:	movwne	r2, #1
   305a4:	beq	3081c <flatcc_json_parser_generic_json@@Base+0xc84>
   305a8:	cmp	r4, r6
   305ac:	mov	r8, r0
   305b0:	bne	30304 <flatcc_json_parser_generic_json@@Base+0x76c>
   305b4:	b	3081c <flatcc_json_parser_generic_json@@Base+0xc84>
   305b8:	mov	r0, #6
   305bc:	str	r0, [r9]
   305c0:	ldr	r0, [sp, #8]
   305c4:	add	r2, r1, #1
   305c8:	mov	r4, r6
   305cc:	ldr	r0, [r0]
   305d0:	sub	r0, r2, r0
   305d4:	ldr	r2, [sp, #12]
   305d8:	str	r0, [r2]
   305dc:	ldr	r0, [sp, #16]
   305e0:	str	r1, [r0]
   305e4:	b	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   305e8:	ldr	r0, [r9]
   305ec:	cmp	r0, #0
   305f0:	bne	302e0 <flatcc_json_parser_generic_json@@Base+0x748>
   305f4:	mov	r0, #16
   305f8:	str	r0, [r9]
   305fc:	ldr	r0, [sp, #8]
   30600:	ldr	r1, [sp, #4]
   30604:	mov	r4, r6
   30608:	ldr	r0, [r0]
   3060c:	sub	r0, r1, r0
   30610:	ldr	r1, [sp, #12]
   30614:	str	r0, [r1]
   30618:	ldr	r0, [sp, #16]
   3061c:	str	r6, [r0]
   30620:	b	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   30624:	bne	30634 <flatcc_json_parser_generic_json@@Base+0xa9c>
   30628:	ldrb	r0, [r7, #2]!
   3062c:	cmp	r0, #32
   30630:	bhi	30644 <flatcc_json_parser_generic_json@@Base+0xaac>
   30634:	mov	r0, r5
   30638:	mov	r2, r6
   3063c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   30640:	mov	r7, r0
   30644:	cmp	r7, r6
   30648:	beq	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   3064c:	ldrb	r0, [r7]
   30650:	add	r8, r8, #1
   30654:	cmp	r0, #125	; 0x7d
   30658:	mov	r4, r7
   3065c:	bne	306a0 <flatcc_json_parser_generic_json@@Base+0xb08>
   30660:	b	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   30664:	bne	30674 <flatcc_json_parser_generic_json@@Base+0xadc>
   30668:	ldrb	r0, [r7, #2]!
   3066c:	cmp	r0, #32
   30670:	bhi	30684 <flatcc_json_parser_generic_json@@Base+0xaec>
   30674:	mov	r0, r5
   30678:	mov	r2, r6
   3067c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   30680:	mov	r7, r0
   30684:	cmp	r7, r6
   30688:	beq	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   3068c:	ldrb	r0, [r7]
   30690:	add	r8, r8, #1
   30694:	cmp	r0, #93	; 0x5d
   30698:	mov	r4, r7
   3069c:	beq	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   306a0:	add	r0, sp, #24
   306a4:	cmp	r7, r6
   306a8:	add	r0, r0, r8
   306ac:	bne	2fbec <flatcc_json_parser_generic_json@@Base+0x54>
   306b0:	b	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   306b4:	ldr	r0, [r9]
   306b8:	mov	r1, r6
   306bc:	cmp	r0, #0
   306c0:	bne	30794 <flatcc_json_parser_generic_json@@Base+0xbfc>
   306c4:	mov	r0, #20
   306c8:	ldr	r1, [sp, #4]
   306cc:	str	r0, [r9]
   306d0:	ldr	r0, [sp, #8]
   306d4:	ldr	r0, [r0]
   306d8:	sub	r0, r1, r0
   306dc:	ldr	r1, [sp, #12]
   306e0:	str	r0, [r1]
   306e4:	ldr	r0, [sp, #16]
   306e8:	mov	r1, r6
   306ec:	str	r6, [r0]
   306f0:	b	30794 <flatcc_json_parser_generic_json@@Base+0xbfc>
   306f4:	ldrb	r1, [r0]
   306f8:	cmp	r1, #34	; 0x22
   306fc:	beq	307b4 <flatcc_json_parser_generic_json@@Base+0xc1c>
   30700:	cmp	r1, #32
   30704:	bcc	30740 <flatcc_json_parser_generic_json@@Base+0xba8>
   30708:	rsb	r0, r0, #0
   3070c:	uxtb	r2, r1
   30710:	cmp	r2, #34	; 0x22
   30714:	cmpne	r2, #92	; 0x5c
   30718:	beq	3077c <flatcc_json_parser_generic_json@@Base+0xbe4>
   3071c:	add	r1, r6, r0
   30720:	cmp	r1, #1
   30724:	beq	306b4 <flatcc_json_parser_generic_json@@Base+0xb1c>
   30728:	rsb	r1, r0, #0
   3072c:	sub	r0, r0, #1
   30730:	ldrb	r1, [r1, #1]
   30734:	cmp	r1, #32
   30738:	bcs	3070c <flatcc_json_parser_generic_json@@Base+0xb74>
   3073c:	rsb	r0, r0, #0
   30740:	ldr	r1, [r9]
   30744:	cmp	r1, #0
   30748:	mov	r1, r6
   3074c:	bne	30794 <flatcc_json_parser_generic_json@@Base+0xbfc>
   30750:	ldr	r1, [sp, #8]
   30754:	str	r7, [r9]
   30758:	add	r2, r0, #1
   3075c:	ldr	r1, [r1]
   30760:	sub	r1, r2, r1
   30764:	ldr	r2, [sp, #12]
   30768:	str	r1, [r2]
   3076c:	ldr	r1, [sp, #16]
   30770:	str	r0, [r1]
   30774:	mov	r1, r6
   30778:	b	30794 <flatcc_json_parser_generic_json@@Base+0xbfc>
   3077c:	adds	r1, r6, r0
   30780:	mov	r1, r6
   30784:	beq	30794 <flatcc_json_parser_generic_json@@Base+0xbfc>
   30788:	rsb	r1, r0, #0
   3078c:	cmp	r2, #34	; 0x22
   30790:	beq	307b8 <flatcc_json_parser_generic_json@@Base+0xc20>
   30794:	mov	r0, r5
   30798:	mov	r2, r6
   3079c:	mov	r3, r4
   307a0:	bl	2f26c <flatcc_json_parser_string_escape@@Base>
   307a4:	cmp	r0, r6
   307a8:	bne	306f4 <flatcc_json_parser_generic_json@@Base+0xb5c>
   307ac:	mov	r1, r6
   307b0:	b	307d4 <flatcc_json_parser_generic_json@@Base+0xc3c>
   307b4:	mov	r1, r0
   307b8:	cmp	r1, r6
   307bc:	beq	307d4 <flatcc_json_parser_generic_json@@Base+0xc3c>
   307c0:	ldrb	r0, [r1]
   307c4:	cmp	r0, #34	; 0x22
   307c8:	bne	307d4 <flatcc_json_parser_generic_json@@Base+0xc3c>
   307cc:	add	r4, r1, #1
   307d0:	b	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   307d4:	ldr	r0, [r9]
   307d8:	cmp	r0, #0
   307dc:	bne	302e0 <flatcc_json_parser_generic_json@@Base+0x748>
   307e0:	mov	r0, #20
   307e4:	b	305bc <flatcc_json_parser_generic_json@@Base+0xa24>
   307e8:	cmp	r0, #93	; 0x5d
   307ec:	beq	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   307f0:	cmp	r0, #125	; 0x7d
   307f4:	mov	r1, r4
   307f8:	beq	302e4 <flatcc_json_parser_generic_json@@Base+0x74c>
   307fc:	b	302d4 <flatcc_json_parser_generic_json@@Base+0x73c>
   30800:	mov	r4, r7
   30804:	b	30878 <flatcc_json_parser_generic_json@@Base+0xce0>
   30808:	mov	r0, r8
   3080c:	cmp	r1, #0
   30810:	beq	30824 <flatcc_json_parser_generic_json@@Base+0xc8c>
   30814:	b	30878 <flatcc_json_parser_generic_json@@Base+0xce0>
   30818:	mov	r0, r8
   3081c:	cmp	r1, #0
   30820:	bne	30878 <flatcc_json_parser_generic_json@@Base+0xce0>
   30824:	cmp	r2, #0
   30828:	beq	30878 <flatcc_json_parser_generic_json@@Base+0xce0>
   3082c:	ldr	r1, [r9]
   30830:	cmp	r1, #0
   30834:	bne	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   30838:	add	r1, sp, #24
   3083c:	add	r0, r1, r0
   30840:	mov	r1, #10
   30844:	ldrb	r0, [r0, #-1]
   30848:	cmp	r0, #93	; 0x5d
   3084c:	movweq	r1, #9
   30850:	str	r1, [r9]
   30854:	ldr	r0, [sp, #8]
   30858:	ldr	r1, [sp, #4]
   3085c:	ldr	r0, [r0]
   30860:	sub	r0, r1, r0
   30864:	ldr	r1, [sp, #12]
   30868:	str	r0, [r1]
   3086c:	ldr	r0, [sp, #16]
   30870:	str	r6, [r0]
   30874:	mov	r4, r6
   30878:	mov	r0, r4
   3087c:	sub	sp, fp, #28
   30880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30884:	ldr	r0, [r9]
   30888:	cmp	r0, #0
   3088c:	bne	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   30890:	mov	r0, #10
   30894:	str	r0, [r9]
   30898:	b	30854 <flatcc_json_parser_generic_json@@Base+0xcbc>
   3089c:	ldr	r0, [r9]
   308a0:	cmp	r0, #0
   308a4:	bne	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   308a8:	mov	r0, #4
   308ac:	b	308d4 <flatcc_json_parser_generic_json@@Base+0xd3c>
   308b0:	ldr	r0, [r9]
   308b4:	cmp	r0, #0
   308b8:	bne	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   308bc:	mov	r0, #2
   308c0:	b	308d4 <flatcc_json_parser_generic_json@@Base+0xd3c>
   308c4:	ldr	r0, [r9]
   308c8:	cmp	r0, #0
   308cc:	bne	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>
   308d0:	mov	r0, #5
   308d4:	str	r0, [r9]
   308d8:	ldr	r0, [sp, #8]
   308dc:	add	r1, r7, #1
   308e0:	ldr	r0, [r0]
   308e4:	sub	r0, r1, r0
   308e8:	ldr	r1, [sp, #12]
   308ec:	str	r0, [r1]
   308f0:	ldr	r0, [sp, #16]
   308f4:	str	r7, [r0]
   308f8:	b	30874 <flatcc_json_parser_generic_json@@Base+0xcdc>

000308fc <flatcc_json_parser_double@@Base>:
   308fc:	push	{r4, r5, r6, r7, fp, lr}
   30900:	add	fp, sp, #16
   30904:	mov	r5, r0
   30908:	mov	r0, #0
   3090c:	mov	r6, r1
   30910:	cmp	r1, r2
   30914:	str	r0, [r3]
   30918:	str	r0, [r3, #4]
   3091c:	moveq	r0, r6
   30920:	popeq	{r4, r5, r6, r7, fp, pc}
   30924:	mov	r0, r6
   30928:	mov	r4, r2
   3092c:	mov	r7, r3
   30930:	ldrb	r1, [r0], #1
   30934:	cmp	r1, #45	; 0x2d
   30938:	movne	r0, r6
   3093c:	sub	r2, r2, r0
   30940:	cmp	r2, #2
   30944:	blt	30970 <flatcc_json_parser_double@@Base+0x74>
   30948:	sub	r1, r1, #45	; 0x2d
   3094c:	clz	r1, r1
   30950:	lsr	r1, r1, #5
   30954:	ldrb	r1, [r6, r1]
   30958:	cmp	r1, #46	; 0x2e
   3095c:	beq	309c0 <flatcc_json_parser_double@@Base+0xc4>
   30960:	cmp	r1, #48	; 0x30
   30964:	ldrbeq	r0, [r0, #1]
   30968:	cmpeq	r0, #48	; 0x30
   3096c:	beq	309c0 <flatcc_json_parser_double@@Base+0xc4>
   30970:	sub	r1, r4, r6
   30974:	mov	r0, r6
   30978:	mov	r2, r7
   3097c:	bl	309f0 <flatcc_json_parser_double@@Base+0xf4>
   30980:	cmp	r0, #0
   30984:	cmpne	r0, r6
   30988:	popne	{r4, r5, r6, r7, fp, pc}
   3098c:	vldr	d0, [r7]
   30990:	bl	12ae4 <__isinf@plt>
   30994:	ldr	r1, [r5, #24]
   30998:	cmp	r0, #0
   3099c:	beq	309b0 <flatcc_json_parser_double@@Base+0xb4>
   309a0:	cmp	r1, #0
   309a4:	bne	309b8 <flatcc_json_parser_double@@Base+0xbc>
   309a8:	mov	r0, #7
   309ac:	b	309d0 <flatcc_json_parser_double@@Base+0xd4>
   309b0:	cmp	r1, #0
   309b4:	beq	309cc <flatcc_json_parser_double@@Base+0xd0>
   309b8:	mov	r0, r4
   309bc:	pop	{r4, r5, r6, r7, fp, pc}
   309c0:	ldr	r0, [r5, #24]
   309c4:	cmp	r0, #0
   309c8:	bne	309b8 <flatcc_json_parser_double@@Base+0xbc>
   309cc:	mov	r0, #6
   309d0:	str	r6, [r5, #36]	; 0x24
   309d4:	add	r2, r6, #1
   309d8:	ldr	r1, [r5, #4]
   309dc:	sub	r1, r2, r1
   309e0:	str	r1, [r5, #20]
   309e4:	str	r0, [r5, #24]
   309e8:	mov	r0, r4
   309ec:	pop	{r4, r5, r6, r7, fp, pc}
   309f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   309f4:	add	fp, sp, #28
   309f8:	sub	sp, sp, #36	; 0x24
   309fc:	cmp	r1, #1000	; 0x3e8
   30a00:	mov	r3, r1
   30a04:	mov	r6, #0
   30a08:	mov	r9, r0
   30a0c:	movge	r1, #1000	; 0x3e8
   30a10:	str	r6, [r2]
   30a14:	str	r6, [r2, #4]
   30a18:	add	lr, r0, r1
   30a1c:	add	r4, lr, #1
   30a20:	cmp	r4, r0
   30a24:	beq	30a98 <flatcc_json_parser_double@@Base+0x19c>
   30a28:	ldrb	r0, [r9]
   30a2c:	mov	r5, r9
   30a30:	cmp	r0, #45	; 0x2d
   30a34:	bne	30a4c <flatcc_json_parser_double@@Base+0x150>
   30a38:	cmp	r1, #0
   30a3c:	beq	30e04 <flatcc_json_parser_double@@Base+0x508>
   30a40:	add	r5, r9, #1
   30a44:	mov	r6, #1
   30a48:	ldrb	r0, [r5]
   30a4c:	cmp	r0, #48	; 0x30
   30a50:	bne	30a80 <flatcc_json_parser_double@@Base+0x184>
   30a54:	add	ip, r5, #1
   30a58:	cmp	r5, lr
   30a5c:	beq	30ae8 <flatcc_json_parser_double@@Base+0x1ec>
   30a60:	ldrb	r1, [ip]
   30a64:	orr	r0, r1, #32
   30a68:	cmp	r0, #120	; 0x78
   30a6c:	bne	30ab8 <flatcc_json_parser_double@@Base+0x1bc>
   30a70:	mov	r0, #0
   30a74:	str	r0, [r2]
   30a78:	str	r0, [r2, #4]
   30a7c:	b	30a98 <flatcc_json_parser_double@@Base+0x19c>
   30a80:	sub	r1, r0, #49	; 0x31
   30a84:	uxtb	r1, r1
   30a88:	cmp	r1, #9
   30a8c:	bcc	30aa0 <flatcc_json_parser_double@@Base+0x1a4>
   30a90:	cmp	r6, #0
   30a94:	movne	r9, #0
   30a98:	mov	r2, r9
   30a9c:	b	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30aa0:	sub	r0, r0, #48	; 0x30
   30aa4:	add	ip, r5, #1
   30aa8:	asr	r1, r0, #31
   30aac:	cmp	ip, r4
   30ab0:	bne	30af8 <flatcc_json_parser_double@@Base+0x1fc>
   30ab4:	b	30e04 <flatcc_json_parser_double@@Base+0x508>
   30ab8:	cmp	r1, #48	; 0x30
   30abc:	mov	r0, #0
   30ac0:	mov	r1, #0
   30ac4:	bne	30af0 <flatcc_json_parser_double@@Base+0x1f4>
   30ac8:	add	r0, r5, #2
   30acc:	mov	ip, r0
   30ad0:	cmp	r4, r0
   30ad4:	beq	30ae8 <flatcc_json_parser_double@@Base+0x1ec>
   30ad8:	mov	r0, ip
   30adc:	ldrb	r1, [r0], #1
   30ae0:	cmp	r1, #48	; 0x30
   30ae4:	beq	30acc <flatcc_json_parser_double@@Base+0x1d0>
   30ae8:	mov	r0, #0
   30aec:	mov	r1, #0
   30af0:	cmp	ip, r4
   30af4:	beq	30e04 <flatcc_json_parser_double@@Base+0x508>
   30af8:	movw	r5, #39321	; 0x9999
   30afc:	mov	sl, #10
   30b00:	mov	r7, ip
   30b04:	str	r6, [sp, #20]
   30b08:	str	r2, [sp, #24]
   30b0c:	movt	r5, #6553	; 0x1999
   30b10:	ldrb	r8, [r7]
   30b14:	sub	r2, r8, #48	; 0x30
   30b18:	uxtb	r6, r2
   30b1c:	mov	r2, #0
   30b20:	cmp	r6, #9
   30b24:	bhi	30b5c <flatcc_json_parser_double@@Base+0x260>
   30b28:	movw	r6, #39320	; 0x9998
   30b2c:	movt	r6, #39321	; 0x9999
   30b30:	subs	r6, r6, r0
   30b34:	sbcs	r6, r5, r1
   30b38:	bcc	30b74 <flatcc_json_parser_double@@Base+0x278>
   30b3c:	add	r1, r1, r1, lsl #2
   30b40:	add	r7, r7, #1
   30b44:	lsl	r1, r1, #1
   30b48:	umlal	r8, r1, r0, sl
   30b4c:	subs	r0, r8, #48	; 0x30
   30b50:	sbc	r1, r1, #0
   30b54:	cmp	r4, r7
   30b58:	bne	30b10 <flatcc_json_parser_double@@Base+0x214>
   30b5c:	mov	r5, r1
   30b60:	mov	sl, #0
   30b64:	str	r0, [sp, #28]
   30b68:	cmp	r7, r4
   30b6c:	bne	30b98 <flatcc_json_parser_double@@Base+0x29c>
   30b70:	b	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30b74:	adds	r6, r0, #1
   30b78:	mov	sl, #1
   30b7c:	adc	r5, r1, #0
   30b80:	cmp	r8, #52	; 0x34
   30b84:	movls	r6, r0
   30b88:	movls	r5, r1
   30b8c:	str	r6, [sp, #28]
   30b90:	cmp	r7, r4
   30b94:	beq	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30b98:	sub	r8, r7, ip
   30b9c:	mvn	ip, r3
   30ba0:	mov	r3, #0
   30ba4:	cmn	ip, #1000	; 0x3e8
   30ba8:	mov	r0, ip
   30bac:	mvnlt	r0, #1000	; 0x3e8
   30bb0:	mvn	r0, r0
   30bb4:	sub	r0, r0, r7
   30bb8:	add	r0, r9, r0
   30bbc:	ldrb	r1, [r7]
   30bc0:	cmp	r1, #48	; 0x30
   30bc4:	bne	30be8 <flatcc_json_parser_double@@Base+0x2ec>
   30bc8:	add	r1, r7, #1
   30bcc:	cmp	r7, lr
   30bd0:	sub	r0, r0, #1
   30bd4:	add	r3, r3, #1
   30bd8:	mov	r7, r1
   30bdc:	bne	30bbc <flatcc_json_parser_double@@Base+0x2c0>
   30be0:	mov	r7, r1
   30be4:	b	30c30 <flatcc_json_parser_double@@Base+0x334>
   30be8:	sub	r1, r1, #49	; 0x31
   30bec:	uxtb	r1, r1
   30bf0:	cmp	r1, #8
   30bf4:	bhi	30c30 <flatcc_json_parser_double@@Base+0x334>
   30bf8:	mvn	r2, #0
   30bfc:	mov	r1, r2
   30c00:	cmp	r0, #0
   30c04:	beq	30c24 <flatcc_json_parser_double@@Base+0x328>
   30c08:	ldrb	r2, [r7, -r1]
   30c0c:	sub	r0, r0, #1
   30c10:	sub	r2, r2, #48	; 0x30
   30c14:	uxtb	r6, r2
   30c18:	sub	r2, r1, #1
   30c1c:	cmp	r6, #10
   30c20:	bcc	30bfc <flatcc_json_parser_double@@Base+0x300>
   30c24:	sub	r3, r3, r1
   30c28:	sub	r7, r7, r1
   30c2c:	mov	sl, #1
   30c30:	mov	r2, #0
   30c34:	cmp	r7, r4
   30c38:	beq	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30c3c:	ldrb	r0, [r7]
   30c40:	cmp	r0, #46	; 0x2e
   30c44:	bne	30ddc <flatcc_json_parser_double@@Base+0x4e0>
   30c48:	mov	r6, r7
   30c4c:	ldrb	r0, [r6, #1]!
   30c50:	sub	r1, r0, #48	; 0x30
   30c54:	uxtb	r1, r1
   30c58:	cmp	r1, #9
   30c5c:	bhi	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30c60:	cmp	r7, lr
   30c64:	beq	30d1c <flatcc_json_parser_double@@Base+0x420>
   30c68:	cmn	ip, #1000	; 0x3e8
   30c6c:	mvn	r1, #1
   30c70:	str	sl, [sp, #12]
   30c74:	str	r6, [sp, #8]
   30c78:	str	r8, [sp, #16]
   30c7c:	mvnlt	ip, #1000	; 0x3e8
   30c80:	sub	r1, r1, ip
   30c84:	sub	r1, r1, r7
   30c88:	add	sl, r9, r1
   30c8c:	mov	r1, #0
   30c90:	mov	ip, r1
   30c94:	ldr	r1, [sp, #28]
   30c98:	movw	r6, #39320	; 0x9998
   30c9c:	movt	r6, #39321	; 0x9999
   30ca0:	subs	r1, r6, r1
   30ca4:	movw	r1, #39321	; 0x9999
   30ca8:	movt	r1, #6553	; 0x1999
   30cac:	sbcs	r1, r1, r5
   30cb0:	bcc	30d2c <flatcc_json_parser_double@@Base+0x430>
   30cb4:	add	r1, r5, r5, lsl #2
   30cb8:	ldr	r5, [sp, #28]
   30cbc:	uxtb	r0, r0
   30cc0:	mov	r6, #10
   30cc4:	lsl	r1, r1, #1
   30cc8:	umlal	r0, r1, r5, r6
   30ccc:	add	r6, r7, ip
   30cd0:	subs	r0, r0, #48	; 0x30
   30cd4:	sbc	r5, r1, #0
   30cd8:	cmp	sl, ip
   30cdc:	str	r0, [sp, #28]
   30ce0:	beq	30d04 <flatcc_json_parser_double@@Base+0x408>
   30ce4:	ldrb	r0, [r6, #2]
   30ce8:	mov	r8, r5
   30cec:	add	r1, ip, #1
   30cf0:	sub	r5, r0, #48	; 0x30
   30cf4:	uxtb	r5, r5
   30cf8:	cmp	r5, #10
   30cfc:	mov	r5, r8
   30d00:	bcc	30c90 <flatcc_json_parser_double@@Base+0x394>
   30d04:	ldr	r8, [sp, #16]
   30d08:	ldr	sl, [sp, #12]
   30d0c:	sub	r0, r3, #1
   30d10:	add	r7, r6, #2
   30d14:	sub	r3, r0, ip
   30d18:	b	30d6c <flatcc_json_parser_double@@Base+0x470>
   30d1c:	mov	r7, r6
   30d20:	cmp	r7, r4
   30d24:	bne	30d78 <flatcc_json_parser_double@@Base+0x47c>
   30d28:	b	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30d2c:	ldr	sl, [sp, #12]
   30d30:	ldr	r8, [sp, #16]
   30d34:	add	r1, r7, ip
   30d38:	sub	r3, r3, ip
   30d3c:	add	r7, r1, #1
   30d40:	cmp	sl, #0
   30d44:	bne	30d6c <flatcc_json_parser_double@@Base+0x470>
   30d48:	ldr	r6, [sp, #28]
   30d4c:	uxtb	r0, r0
   30d50:	mov	sl, #1
   30d54:	adds	r1, r6, #1
   30d58:	adc	ip, r5, #0
   30d5c:	cmp	r0, #52	; 0x34
   30d60:	movhi	r6, r1
   30d64:	movhi	r5, ip
   30d68:	str	r6, [sp, #28]
   30d6c:	ldr	r6, [sp, #8]
   30d70:	cmp	r7, r4
   30d74:	beq	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30d78:	sub	r0, r7, r6
   30d7c:	add	r8, r0, r8
   30d80:	ldrb	r0, [r7]
   30d84:	cmp	r0, #48	; 0x30
   30d88:	bne	30da0 <flatcc_json_parser_double@@Base+0x4a4>
   30d8c:	add	r7, r7, #1
   30d90:	add	r3, r3, #1
   30d94:	cmp	r4, r7
   30d98:	bne	30d80 <flatcc_json_parser_double@@Base+0x484>
   30d9c:	b	30ddc <flatcc_json_parser_double@@Base+0x4e0>
   30da0:	sub	r0, r0, #49	; 0x31
   30da4:	uxtb	r0, r0
   30da8:	cmp	r0, #8
   30dac:	bhi	30ddc <flatcc_json_parser_double@@Base+0x4e0>
   30db0:	add	r0, r7, #1
   30db4:	mov	sl, #1
   30db8:	mov	r7, r0
   30dbc:	cmp	r4, r0
   30dc0:	beq	30ddc <flatcc_json_parser_double@@Base+0x4e0>
   30dc4:	mov	r0, r7
   30dc8:	ldrb	r1, [r0], #1
   30dcc:	sub	r1, r1, #48	; 0x30
   30dd0:	uxtb	r1, r1
   30dd4:	cmp	r1, #10
   30dd8:	bcc	30db8 <flatcc_json_parser_double@@Base+0x4bc>
   30ddc:	cmp	r7, r4
   30de0:	beq	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30de4:	ldrb	r0, [r7]
   30de8:	mov	ip, #0
   30dec:	orr	r0, r0, #32
   30df0:	cmp	r0, #101	; 0x65
   30df4:	bne	30e14 <flatcc_json_parser_double@@Base+0x518>
   30df8:	sub	r0, r4, r7
   30dfc:	cmp	r0, #2
   30e00:	bge	30e84 <flatcc_json_parser_double@@Base+0x588>
   30e04:	mov	r2, #0
   30e08:	mov	r0, r2
   30e0c:	sub	sp, fp, #28
   30e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e14:	mov	r0, #0
   30e18:	cmp	r7, r4
   30e1c:	mov	r2, #0
   30e20:	beq	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30e24:	ldr	r1, [sp, #28]
   30e28:	cmp	ip, #0
   30e2c:	vmov.i32	d16, #0	; 0x00000000
   30e30:	rsbne	r0, r0, #0
   30e34:	orrs	r1, r1, r5
   30e38:	beq	30e5c <flatcc_json_parser_double@@Base+0x560>
   30e3c:	add	r1, r8, r3
   30e40:	add	r4, r1, r0
   30e44:	cmn	r4, #324	; 0x144
   30e48:	blt	30e5c <flatcc_json_parser_double@@Base+0x560>
   30e4c:	movw	r0, #310	; 0x136
   30e50:	cmp	r4, r0
   30e54:	ble	30eb8 <flatcc_json_parser_double@@Base+0x5bc>
   30e58:	vldr	d16, [pc, #968]	; 31228 <flatcc_json_parser_double@@Base+0x92c>
   30e5c:	ldr	r0, [sp, #24]
   30e60:	vstr	d16, [r0]
   30e64:	ldr	r0, [sp, #20]
   30e68:	cmp	r0, #0
   30e6c:	ldrne	r0, [sp, #24]
   30e70:	vldrne	d16, [r0]
   30e74:	vnegne.f64	d16, d16
   30e78:	vstrne	d16, [r0]
   30e7c:	mov	r2, r7
   30e80:	b	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30e84:	mov	r1, r7
   30e88:	ldrb	r0, [r1, #1]!
   30e8c:	cmp	r0, #45	; 0x2d
   30e90:	beq	30fb4 <flatcc_json_parser_double@@Base+0x6b8>
   30e94:	mov	ip, #0
   30e98:	cmp	r0, #43	; 0x2b
   30e9c:	bne	30fc4 <flatcc_json_parser_double@@Base+0x6c8>
   30ea0:	add	r1, r7, #2
   30ea4:	mov	r2, #0
   30ea8:	cmp	r1, r4
   30eac:	beq	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30eb0:	mov	ip, #0
   30eb4:	b	30fc4 <flatcc_json_parser_double@@Base+0x6c8>
   30eb8:	mov	r0, #0
   30ebc:	cmp	r0, r5, lsr #21
   30ec0:	bne	31024 <flatcc_json_parser_double@@Base+0x728>
   30ec4:	cmp	r4, #22
   30ec8:	bhi	31024 <flatcc_json_parser_double@@Base+0x728>
   30ecc:	ldr	r0, [sp, #28]
   30ed0:	mov	r1, r5
   30ed4:	bl	33588 <flatcc_json_parser_struct_as_root@@Base+0x420>
   30ed8:	sub	r2, r4, r8
   30edc:	vmov	d16, r0, r1
   30ee0:	add	r0, r2, #22
   30ee4:	cmp	r0, #44	; 0x2c
   30ee8:	bhi	30e5c <flatcc_json_parser_double@@Base+0x560>
   30eec:	add	r1, pc, #4
   30ef0:	ldr	r0, [r1, r0, lsl #2]
   30ef4:	add	pc, r1, r0
   30ef8:	strheq	r0, [r0], -r4
   30efc:	andeq	r0, r0, r8, ror r1
   30f00:	andeq	r0, r0, r0, lsl #3
   30f04:	andeq	r0, r0, r8, lsl #3
   30f08:	muleq	r0, r0, r1
   30f0c:	muleq	r0, r8, r1
   30f10:	andeq	r0, r0, r0, lsr #3
   30f14:	andeq	r0, r0, r8, lsr #3
   30f18:			; <UNDEFINED> instruction: 0x000001b0
   30f1c:			; <UNDEFINED> instruction: 0x000001b8
   30f20:	andeq	r0, r0, r0, asr #3
   30f24:	andeq	r0, r0, r8, asr #3
   30f28:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30f2c:	ldrdeq	r0, [r0], -r8
   30f30:	andeq	r0, r0, r0, ror #3
   30f34:	andeq	r0, r0, r8, ror #3
   30f38:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30f3c:	strdeq	r0, [r0], -r8
   30f40:	andeq	r0, r0, r0, lsl #4
   30f44:	andeq	r0, r0, r8, lsl #4
   30f48:	andeq	r0, r0, r0, lsl r2
   30f4c:	andeq	r0, r0, r8, lsl r2
   30f50:			; <UNDEFINED> instruction: 0xffffff64
   30f54:	andeq	r0, r0, r4, lsr #4
   30f58:	andeq	r0, r0, r0, lsr r2
   30f5c:	andeq	r0, r0, ip, lsr r2
   30f60:	andeq	r0, r0, r8, asr #4
   30f64:	andeq	r0, r0, r4, asr r2
   30f68:	andeq	r0, r0, r0, ror #4
   30f6c:	andeq	r0, r0, ip, ror #4
   30f70:	andeq	r0, r0, r8, ror r2
   30f74:	andeq	r0, r0, r4, lsl #5
   30f78:	muleq	r0, r0, r2
   30f7c:	muleq	r0, ip, r2
   30f80:	andeq	r0, r0, r8, lsr #5
   30f84:			; <UNDEFINED> instruction: 0x000002b4
   30f88:	andeq	r0, r0, r0, asr #5
   30f8c:	andeq	r0, r0, ip, asr #5
   30f90:	ldrdeq	r0, [r0], -r8
   30f94:	andeq	r0, r0, r4, ror #5
   30f98:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30f9c:	strdeq	r0, [r0], -ip
   30fa0:	andeq	r0, r0, r8, lsl #6
   30fa4:	andeq	r0, r0, r4, lsl r3
   30fa8:	andeq	r0, r0, r0, lsr #6
   30fac:	vldr	d17, [pc, #796]	; 312d0 <flatcc_json_parser_double@@Base+0x9d4>
   30fb0:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   30fb4:	add	r1, r7, #2
   30fb8:	mov	ip, #1
   30fbc:	cmp	r1, r4
   30fc0:	beq	30e04 <flatcc_json_parser_double@@Base+0x508>
   30fc4:	ldrb	r0, [r1]
   30fc8:	mov	r7, r5
   30fcc:	mov	r2, #0
   30fd0:	sub	r0, r0, #48	; 0x30
   30fd4:	uxtb	r5, r0
   30fd8:	cmp	r5, #9
   30fdc:	bhi	30e08 <flatcc_json_parser_double@@Base+0x50c>
   30fe0:	mov	r5, r7
   30fe4:	add	r7, r1, #1
   30fe8:	cmp	r1, lr
   30fec:	beq	30e18 <flatcc_json_parser_double@@Base+0x51c>
   30ff0:	ldrb	r1, [r7]
   30ff4:	sub	r2, r1, #48	; 0x30
   30ff8:	uxtb	r2, r2
   30ffc:	cmp	r2, #9
   31000:	bhi	30e18 <flatcc_json_parser_double@@Base+0x51c>
   31004:	cmp	r0, #32768	; 0x8000
   31008:	add	r7, r7, #1
   3100c:	addlt	r0, r0, r0, lsl #2
   31010:	addlt	r0, r1, r0, lsl #1
   31014:	sublt	r0, r0, #48	; 0x30
   31018:	cmp	r4, r7
   3101c:	bne	30ff0 <flatcc_json_parser_double@@Base+0x6f4>
   31020:	b	30e18 <flatcc_json_parser_double@@Base+0x51c>
   31024:	ldr	r0, [sp, #24]
   31028:	mov	r1, r5
   3102c:	mov	r2, r4
   31030:	mov	r3, r8
   31034:	str	sl, [sp]
   31038:	str	r0, [sp, #4]
   3103c:	ldr	r0, [sp, #28]
   31040:	bl	2eb40 <grisu3_diy_fp_encode_double@@Base>
   31044:	cmp	r0, #0
   31048:	bne	30e64 <flatcc_json_parser_double@@Base+0x568>
   3104c:	add	r1, sp, #32
   31050:	mov	r0, r9
   31054:	bl	12b68 <strtod@plt>
   31058:	ldr	r0, [sp, #24]
   3105c:	vstr	d0, [r0]
   31060:	ldr	r0, [sp, #32]
   31064:	cmp	r0, r7
   31068:	movcc	r7, r0
   3106c:	b	30e7c <flatcc_json_parser_double@@Base+0x580>
   31070:	vldr	d17, [pc, #440]	; 31230 <flatcc_json_parser_double@@Base+0x934>
   31074:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31078:	vldr	d17, [pc, #440]	; 31238 <flatcc_json_parser_double@@Base+0x93c>
   3107c:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31080:	vldr	d17, [pc, #440]	; 31240 <flatcc_json_parser_double@@Base+0x944>
   31084:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31088:	vldr	d17, [pc, #440]	; 31248 <flatcc_json_parser_double@@Base+0x94c>
   3108c:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31090:	vldr	d17, [pc, #440]	; 31250 <flatcc_json_parser_double@@Base+0x954>
   31094:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31098:	vldr	d17, [pc, #440]	; 31258 <flatcc_json_parser_double@@Base+0x95c>
   3109c:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310a0:	vldr	d17, [pc, #440]	; 31260 <flatcc_json_parser_double@@Base+0x964>
   310a4:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310a8:	vldr	d17, [pc, #440]	; 31268 <flatcc_json_parser_double@@Base+0x96c>
   310ac:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310b0:	vldr	d17, [pc, #440]	; 31270 <flatcc_json_parser_double@@Base+0x974>
   310b4:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310b8:	vldr	d17, [pc, #440]	; 31278 <flatcc_json_parser_double@@Base+0x97c>
   310bc:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310c0:	vldr	d17, [pc, #440]	; 31280 <flatcc_json_parser_double@@Base+0x984>
   310c4:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310c8:	vldr	d17, [pc, #440]	; 31288 <flatcc_json_parser_double@@Base+0x98c>
   310cc:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310d0:	vldr	d17, [pc, #440]	; 31290 <flatcc_json_parser_double@@Base+0x994>
   310d4:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310d8:	vldr	d17, [pc, #440]	; 31298 <flatcc_json_parser_double@@Base+0x99c>
   310dc:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310e0:	vldr	d17, [pc, #440]	; 312a0 <flatcc_json_parser_double@@Base+0x9a4>
   310e4:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310e8:	vldr	d17, [pc, #440]	; 312a8 <flatcc_json_parser_double@@Base+0x9ac>
   310ec:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310f0:	vldr	d17, [pc, #440]	; 312b0 <flatcc_json_parser_double@@Base+0x9b4>
   310f4:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   310f8:	vldr	d17, [pc, #440]	; 312b8 <flatcc_json_parser_double@@Base+0x9bc>
   310fc:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31100:	vldr	d17, [pc, #440]	; 312c0 <flatcc_json_parser_double@@Base+0x9c4>
   31104:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31108:	vldr	d17, [pc, #440]	; 312c8 <flatcc_json_parser_double@@Base+0x9cc>
   3110c:	b	31114 <flatcc_json_parser_double@@Base+0x818>
   31110:	vmov.f64	d17, #36	; 0x41200000  10.0
   31114:	vdiv.f64	d16, d16, d17
   31118:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   3111c:	vmov.f64	d17, #36	; 0x41200000  10.0
   31120:	vmul.f64	d16, d16, d17
   31124:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31128:	vldr	d17, [pc, #408]	; 312c8 <flatcc_json_parser_double@@Base+0x9cc>
   3112c:	vmul.f64	d16, d16, d17
   31130:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31134:	vldr	d17, [pc, #388]	; 312c0 <flatcc_json_parser_double@@Base+0x9c4>
   31138:	vmul.f64	d16, d16, d17
   3113c:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31140:	vldr	d17, [pc, #368]	; 312b8 <flatcc_json_parser_double@@Base+0x9bc>
   31144:	vmul.f64	d16, d16, d17
   31148:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   3114c:	vldr	d17, [pc, #348]	; 312b0 <flatcc_json_parser_double@@Base+0x9b4>
   31150:	vmul.f64	d16, d16, d17
   31154:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31158:	vldr	d17, [pc, #328]	; 312a8 <flatcc_json_parser_double@@Base+0x9ac>
   3115c:	vmul.f64	d16, d16, d17
   31160:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31164:	vldr	d17, [pc, #308]	; 312a0 <flatcc_json_parser_double@@Base+0x9a4>
   31168:	vmul.f64	d16, d16, d17
   3116c:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31170:	vldr	d17, [pc, #288]	; 31298 <flatcc_json_parser_double@@Base+0x99c>
   31174:	vmul.f64	d16, d16, d17
   31178:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   3117c:	vldr	d17, [pc, #268]	; 31290 <flatcc_json_parser_double@@Base+0x994>
   31180:	vmul.f64	d16, d16, d17
   31184:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31188:	vldr	d17, [pc, #248]	; 31288 <flatcc_json_parser_double@@Base+0x98c>
   3118c:	vmul.f64	d16, d16, d17
   31190:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31194:	vldr	d17, [pc, #228]	; 31280 <flatcc_json_parser_double@@Base+0x984>
   31198:	vmul.f64	d16, d16, d17
   3119c:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311a0:	vldr	d17, [pc, #208]	; 31278 <flatcc_json_parser_double@@Base+0x97c>
   311a4:	vmul.f64	d16, d16, d17
   311a8:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311ac:	vldr	d17, [pc, #188]	; 31270 <flatcc_json_parser_double@@Base+0x974>
   311b0:	vmul.f64	d16, d16, d17
   311b4:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311b8:	vldr	d17, [pc, #168]	; 31268 <flatcc_json_parser_double@@Base+0x96c>
   311bc:	vmul.f64	d16, d16, d17
   311c0:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311c4:	vldr	d17, [pc, #148]	; 31260 <flatcc_json_parser_double@@Base+0x964>
   311c8:	vmul.f64	d16, d16, d17
   311cc:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311d0:	vldr	d17, [pc, #128]	; 31258 <flatcc_json_parser_double@@Base+0x95c>
   311d4:	vmul.f64	d16, d16, d17
   311d8:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311dc:	vldr	d17, [pc, #108]	; 31250 <flatcc_json_parser_double@@Base+0x954>
   311e0:	vmul.f64	d16, d16, d17
   311e4:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311e8:	vldr	d17, [pc, #88]	; 31248 <flatcc_json_parser_double@@Base+0x94c>
   311ec:	vmul.f64	d16, d16, d17
   311f0:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   311f4:	vldr	d17, [pc, #68]	; 31240 <flatcc_json_parser_double@@Base+0x944>
   311f8:	vmul.f64	d16, d16, d17
   311fc:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31200:	vldr	d17, [pc, #48]	; 31238 <flatcc_json_parser_double@@Base+0x93c>
   31204:	vmul.f64	d16, d16, d17
   31208:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   3120c:	vldr	d17, [pc, #28]	; 31230 <flatcc_json_parser_double@@Base+0x934>
   31210:	vmul.f64	d16, d16, d17
   31214:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31218:	vldr	d17, [pc, #176]	; 312d0 <flatcc_json_parser_double@@Base+0x9d4>
   3121c:	vmul.f64	d16, d16, d17
   31220:	b	30e5c <flatcc_json_parser_double@@Base+0x560>
   31224:	nop	{0}
   31228:	andeq	r0, r0, r0
   3122c:	svcvc	0x00f00000	; IMB
   31230:	usatle	lr, #2, r0, asr #30
   31234:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   31238:	ldmvc	r5!, {r6, sl, fp, pc}
   3123c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   31240:	addsvs	r3, r1, r0, lsl #26
   31244:	mvnmi	r5, #228, 16	; 0xe40000
   31248:	strbvs	ip, [lr, -r0, lsl #16]
   3124c:			; <UNDEFINED> instruction: 0x43abc16d
   31250:	ldrbhi	sl, [r8]
   31254:	cmnmi	r6, #1459617792	; 0x57000000
   31258:	strbcc	r8, [r0, r0]!
   3125c:	movtmi	ip, #4985	; 0x1379
   31260:	ldrtcs	r0, [r4], -r0
   31264:	movwmi	r6, #52213	; 0xcbf5
   31268:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3126c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   31270:	strb	r0, [r0, #-0]
   31274:	adcmi	r3, r2, #156	; 0x9c
   31278:	andge	r0, r0, #0
   3127c:	rsbmi	r1, sp, #148, 20	; 0x94000
   31280:	stmda	r0, {}	; <UNPREDICTABLE>
   31284:	eorsmi	r4, r7, #7733248	; 0x760000
   31288:	andcs	r0, r0, r0
   3128c:	andmi	sl, r2, #95	; 0x5f
   31290:	andeq	r0, r0, r0
   31294:	bicmi	ip, sp, r5, ror #26
   31298:	andeq	r0, r0, r0
   3129c:	orrsmi	sp, r7, r4, lsl #15
   312a0:	andeq	r0, r0, r0
   312a4:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   312a8:	andeq	r0, r0, r0
   312ac:	smlawbmi	lr, r0, r4, r8
   312b0:	andeq	r0, r0, r0
   312b4:	rscsmi	r6, r8, r0, lsl #20
   312b8:	andeq	r0, r0, r0
   312bc:	sbcmi	r8, r3, r0, lsl #16
   312c0:	andeq	r0, r0, r0
   312c4:	addmi	r4, pc, r0
   312c8:	andeq	r0, r0, r0
   312cc:	subsmi	r0, r9, r0
   312d0:			; <UNDEFINED> instruction: 0x064dd592
   312d4:	strmi	pc, [r0], #207	; 0xcf

000312d8 <flatcc_json_parser_float@@Base>:
   312d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   312dc:	add	fp, sp, #24
   312e0:	vpush	{d8-d9}
   312e4:	sub	sp, sp, #8
   312e8:	mov	r8, r0
   312ec:	mov	r0, #0
   312f0:	mov	r6, r1
   312f4:	cmp	r1, r2
   312f8:	str	r0, [r3]
   312fc:	beq	313c0 <flatcc_json_parser_float@@Base+0xe8>
   31300:	mov	r0, r6
   31304:	mov	r5, r2
   31308:	mov	r7, r3
   3130c:	ldrb	r1, [r0], #1
   31310:	cmp	r1, #45	; 0x2d
   31314:	movne	r0, r6
   31318:	sub	r2, r2, r0
   3131c:	cmp	r2, #2
   31320:	blt	3134c <flatcc_json_parser_float@@Base+0x74>
   31324:	sub	r1, r1, #45	; 0x2d
   31328:	clz	r1, r1
   3132c:	lsr	r1, r1, #5
   31330:	ldrb	r1, [r6, r1]
   31334:	cmp	r1, #46	; 0x2e
   31338:	beq	313c8 <flatcc_json_parser_float@@Base+0xf0>
   3133c:	cmp	r1, #48	; 0x30
   31340:	ldrbeq	r0, [r0, #1]
   31344:	cmpeq	r0, #48	; 0x30
   31348:	beq	313c8 <flatcc_json_parser_float@@Base+0xf0>
   3134c:	sub	r1, r5, r6
   31350:	mov	r2, sp
   31354:	mov	r0, r6
   31358:	bl	309f0 <flatcc_json_parser_double@@Base+0xf4>
   3135c:	vldr	d16, [sp]
   31360:	mov	r4, r0
   31364:	add	r0, pc, #164	; 0xa4
   31368:	vcmpe.f64	d16, #0.0
   3136c:	vcvt.f32.f64	s16, d16
   31370:	vmrs	APSR_nzcv, fpscr
   31374:	vmov.f32	s0, s16
   31378:	addmi	r0, r0, #4
   3137c:	vldr	s18, [r0]
   31380:	bl	12ad8 <__isinff@plt>
   31384:	cmp	r0, #0
   31388:	movne	r4, r6
   3138c:	vseleq.f32	s0, s16, s18
   31390:	cmp	r4, #0
   31394:	vstr	s0, [r7]
   31398:	cmpne	r4, r6
   3139c:	bne	31400 <flatcc_json_parser_float@@Base+0x128>
   313a0:	bl	12ad8 <__isinff@plt>
   313a4:	ldr	r1, [r8, #24]
   313a8:	cmp	r0, #0
   313ac:	beq	313d8 <flatcc_json_parser_float@@Base+0x100>
   313b0:	cmp	r1, #0
   313b4:	bne	313fc <flatcc_json_parser_float@@Base+0x124>
   313b8:	mov	r0, #7
   313bc:	b	313e4 <flatcc_json_parser_float@@Base+0x10c>
   313c0:	mov	r4, r6
   313c4:	b	31400 <flatcc_json_parser_float@@Base+0x128>
   313c8:	ldr	r0, [r8, #24]
   313cc:	cmp	r0, #0
   313d0:	bne	313fc <flatcc_json_parser_float@@Base+0x124>
   313d4:	b	313e0 <flatcc_json_parser_float@@Base+0x108>
   313d8:	cmp	r1, #0
   313dc:	bne	313fc <flatcc_json_parser_float@@Base+0x124>
   313e0:	mov	r0, #6
   313e4:	str	r6, [r8, #36]	; 0x24
   313e8:	add	r2, r6, #1
   313ec:	ldr	r1, [r8, #4]
   313f0:	sub	r1, r2, r1
   313f4:	str	r1, [r8, #20]
   313f8:	str	r0, [r8, #24]
   313fc:	mov	r4, r5
   31400:	mov	r0, r4
   31404:	sub	sp, fp, #40	; 0x28
   31408:	vpop	{d8-d9}
   3140c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31410:	svcvc	0x00800000
   31414:			; <UNDEFINED> instruction: 0xff800000

00031418 <flatcc_json_parser_integer@@Base>:
   31418:	push	{r4, r5, r6, r7, fp, lr}
   3141c:	add	fp, sp, #16
   31420:	mov	ip, r1
   31424:	cmp	r1, r2
   31428:	beq	31514 <flatcc_json_parser_integer@@Base+0xfc>
   3142c:	ldrb	r1, [ip]
   31430:	mov	r4, #0
   31434:	sub	r1, r1, #45	; 0x2d
   31438:	clz	r1, r1
   3143c:	lsr	r1, r1, #5
   31440:	str	r1, [r3]
   31444:	add	r1, ip, r1
   31448:	cmp	r1, r2
   3144c:	beq	31500 <flatcc_json_parser_integer@@Base+0xe8>
   31450:	mov	lr, #10
   31454:	mov	r5, #0
   31458:	ldrb	r6, [r1]
   3145c:	sub	r7, r6, #48	; 0x30
   31460:	uxtb	r7, r7
   31464:	cmp	r7, #9
   31468:	bhi	3151c <flatcc_json_parser_integer@@Base+0x104>
   3146c:	add	r7, r5, r5, lsl #2
   31470:	lsl	r7, r7, #1
   31474:	umlal	r6, r7, r4, lr
   31478:	subs	r6, r6, #48	; 0x30
   3147c:	sbc	r7, r7, #0
   31480:	subs	r4, r6, r4
   31484:	sbcs	r4, r7, r5
   31488:	bcc	3152c <flatcc_json_parser_integer@@Base+0x114>
   3148c:	add	r1, r1, #1
   31490:	mov	r4, r6
   31494:	mov	r5, r7
   31498:	cmp	r2, r1
   3149c:	bne	31458 <flatcc_json_parser_integer@@Base+0x40>
   314a0:	mov	r3, #0
   314a4:	mov	r1, r2
   314a8:	mov	r4, r6
   314ac:	mov	r5, r7
   314b0:	cmp	r1, ip
   314b4:	beq	31514 <flatcc_json_parser_integer@@Base+0xfc>
   314b8:	cmp	r3, #0
   314bc:	beq	31548 <flatcc_json_parser_integer@@Base+0x130>
   314c0:	ldrb	r3, [r1]
   314c4:	cmp	r3, #46	; 0x2e
   314c8:	cmpne	r3, #101	; 0x65
   314cc:	bne	31540 <flatcc_json_parser_integer@@Base+0x128>
   314d0:	ldr	r3, [r0, #24]
   314d4:	cmp	r3, #0
   314d8:	bne	31538 <flatcc_json_parser_integer@@Base+0x120>
   314dc:	str	r1, [r0, #36]	; 0x24
   314e0:	add	r1, r1, #1
   314e4:	mov	r3, #12
   314e8:	ldr	r7, [r0, #4]
   314ec:	sub	r1, r1, r7
   314f0:	str	r1, [r0, #20]
   314f4:	str	r3, [r0, #24]
   314f8:	mov	r0, r2
   314fc:	pop	{r4, r5, r6, r7, fp, pc}
   31500:	mov	r1, r2
   31504:	mov	r5, #0
   31508:	mov	r3, #0
   3150c:	cmp	r1, ip
   31510:	bne	314b8 <flatcc_json_parser_integer@@Base+0xa0>
   31514:	mov	r0, ip
   31518:	pop	{r4, r5, r6, r7, fp, pc}
   3151c:	mov	r3, #1
   31520:	cmp	r1, ip
   31524:	bne	314b8 <flatcc_json_parser_integer@@Base+0xa0>
   31528:	b	31514 <flatcc_json_parser_integer@@Base+0xfc>
   3152c:	ldr	r7, [r0, #24]
   31530:	cmp	r7, #0
   31534:	beq	3155c <flatcc_json_parser_integer@@Base+0x144>
   31538:	mov	r0, r2
   3153c:	pop	{r4, r5, r6, r7, fp, pc}
   31540:	cmp	r3, #69	; 0x45
   31544:	beq	314d0 <flatcc_json_parser_integer@@Base+0xb8>
   31548:	ldr	r0, [fp, #8]
   3154c:	mov	ip, r1
   31550:	strd	r4, [r0]
   31554:	mov	r0, ip
   31558:	pop	{r4, r5, r6, r7, fp, pc}
   3155c:	str	r1, [r0, #36]	; 0x24
   31560:	cmp	r3, #0
   31564:	mov	r7, #8
   31568:	add	r1, r1, #1
   3156c:	ldr	r3, [r0, #4]
   31570:	movweq	r7, #7
   31574:	sub	r1, r1, r3
   31578:	str	r1, [r0, #20]
   3157c:	str	r7, [r0, #24]
   31580:	mov	r0, r2
   31584:	pop	{r4, r5, r6, r7, fp, pc}

00031588 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   31588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3158c:	add	fp, sp, #28
   31590:	sub	sp, sp, #28
   31594:	ldr	r9, [fp, #8]
   31598:	mov	r6, r3
   3159c:	mov	r4, r2
   315a0:	mov	r5, r0
   315a4:	cmp	r1, r2
   315a8:	beq	315f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   315ac:	ldrb	r0, [r1]
   315b0:	cmp	r0, #34	; 0x22
   315b4:	bne	315f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   315b8:	add	sl, r1, #1
   315bc:	cmp	sl, r4
   315c0:	beq	31618 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   315c4:	mov	r7, sl
   315c8:	ldrb	r1, [r7]
   315cc:	cmp	r1, #32
   315d0:	bcc	31824 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x29c>
   315d4:	cmp	r1, #34	; 0x22
   315d8:	cmpne	r1, #92	; 0x5c
   315dc:	beq	3168c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x104>
   315e0:	add	r7, r7, #1
   315e4:	cmp	r4, r7
   315e8:	bne	315c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   315ec:	b	31618 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   315f0:	ldr	r0, [r5, #24]
   315f4:	cmp	r0, #0
   315f8:	bne	31618 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   315fc:	str	r1, [r5, #36]	; 0x24
   31600:	add	r1, r1, #1
   31604:	mov	r0, #16
   31608:	ldr	r2, [r5, #4]
   3160c:	sub	r1, r1, r2
   31610:	str	r1, [r5, #20]
   31614:	str	r0, [r5, #24]
   31618:	ldr	r0, [r5, #24]
   3161c:	cmp	r0, #0
   31620:	mov	r0, r4
   31624:	bne	31648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   31628:	str	r4, [r5, #36]	; 0x24
   3162c:	mov	r0, #20
   31630:	add	r2, r4, #1
   31634:	ldr	r1, [r5, #4]
   31638:	sub	r1, r2, r1
   3163c:	str	r1, [r5, #20]
   31640:	str	r0, [r5, #24]
   31644:	mov	r0, r4
   31648:	mov	r1, #0
   3164c:	str	r1, [r6]
   31650:	ldr	r1, [r5, #24]
   31654:	cmp	r1, #0
   31658:	bne	31680 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   3165c:	str	r0, [r5, #36]	; 0x24
   31660:	mov	r1, #31
   31664:	cmp	r9, #0
   31668:	add	r0, r0, #1
   3166c:	ldr	r2, [r5, #4]
   31670:	movwne	r1, #32
   31674:	sub	r0, r0, r2
   31678:	str	r0, [r5, #20]
   3167c:	str	r1, [r5, #24]
   31680:	mov	r0, r4
   31684:	sub	sp, fp, #28
   31688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3168c:	cmp	r4, r7
   31690:	mov	r0, r4
   31694:	beq	31648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   31698:	cmp	r1, #34	; 0x22
   3169c:	bne	316c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   316a0:	sub	r1, r7, sl
   316a4:	and	r0, r1, #3
   316a8:	str	r1, [sp, #20]
   316ac:	lsr	r1, r1, #2
   316b0:	add	r8, r1, r1, lsl #1
   316b4:	cmp	r0, #2
   316b8:	beq	316d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x148>
   316bc:	cmp	r0, #3
   316c0:	addeq	r8, r8, #2
   316c4:	b	316d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   316c8:	mov	r0, r7
   316cc:	b	31648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   316d0:	add	r8, r8, #1
   316d4:	ldr	r0, [r5]
   316d8:	mov	r1, #1
   316dc:	mov	r2, #1
   316e0:	mvn	r3, #0
   316e4:	bl	2b840 <flatcc_builder_start_vector@@Base>
   316e8:	cmp	r0, #0
   316ec:	beq	31724 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
   316f0:	mov	r0, #0
   316f4:	str	r0, [r6]
   316f8:	ldr	r0, [r5, #24]
   316fc:	cmp	r0, #0
   31700:	bne	31680 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   31704:	mov	r0, #33	; 0x21
   31708:	str	r7, [r5, #36]	; 0x24
   3170c:	add	r2, r7, #1
   31710:	ldr	r1, [r5, #4]
   31714:	sub	r1, r2, r1
   31718:	str	r1, [r5, #20]
   3171c:	str	r0, [r5, #24]
   31720:	b	31680 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   31724:	ldr	r0, [r5]
   31728:	mov	r1, r8
   3172c:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   31730:	cmp	r0, #0
   31734:	beq	316f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   31738:	ldr	r2, [pc, #612]	; 319a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x41c>
   3173c:	mov	r1, r8
   31740:	ldr	r8, [pc, #608]	; 319a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x420>
   31744:	str	r0, [sp]
   31748:	str	r0, [sp, #12]
   3174c:	ldr	r0, [sp, #20]
   31750:	cmp	r9, #0
   31754:	add	lr, sp, #24
   31758:	mov	ip, sl
   3175c:	str	r1, [sp, #4]
   31760:	add	r2, pc, r2
   31764:	add	r8, pc, r8
   31768:	movne	r8, r2
   3176c:	cmp	r1, #0
   31770:	mvneq	r1, #0
   31774:	str	r1, [sp, #16]
   31778:	mov	r1, #0
   3177c:	str	r0, [sp, #8]
   31780:	cmp	r0, r1
   31784:	beq	31844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2bc>
   31788:	ldrb	r2, [ip, r1]
   3178c:	ldrb	r3, [r8, r2]
   31790:	cmp	r3, #64	; 0x40
   31794:	strb	r3, [lr, r1]
   31798:	bcc	317b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x228>
   3179c:	cmp	r3, #65	; 0x41
   317a0:	bne	31880 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f8>
   317a4:	sub	r1, r1, #1
   317a8:	sub	r0, r0, #1
   317ac:	add	ip, ip, #1
   317b0:	add	r1, r1, #1
   317b4:	cmp	r1, #4
   317b8:	bcc	31780 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f8>
   317bc:	ldr	lr, [sp, #16]
   317c0:	cmp	lr, #3
   317c4:	bcc	31874 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   317c8:	ldrb	r2, [sp, #25]
   317cc:	ldrb	r1, [sp, #24]
   317d0:	subs	lr, lr, #3
   317d4:	sub	r0, r0, #4
   317d8:	add	ip, ip, #4
   317dc:	str	lr, [sp, #16]
   317e0:	add	lr, sp, #24
   317e4:	lsr	r3, r2, #4
   317e8:	orr	r1, r3, r1, lsl #2
   317ec:	ldr	r3, [sp, #12]
   317f0:	strb	r1, [r3]
   317f4:	ldrb	r1, [sp, #26]
   317f8:	lsr	r1, r1, #2
   317fc:	orr	r1, r1, r2, lsl #4
   31800:	strb	r1, [r3, #1]
   31804:	ldrb	r1, [sp, #26]
   31808:	ldrb	r2, [sp, #27]
   3180c:	orr	r1, r2, r1, lsl #6
   31810:	strb	r1, [r3, #2]
   31814:	add	r3, r3, #3
   31818:	str	r3, [sp, #12]
   3181c:	bne	31778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   31820:	b	31920 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   31824:	ldr	r0, [r5, #24]
   31828:	cmp	r0, #0
   3182c:	mov	r0, r4
   31830:	bne	31648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   31834:	str	r7, [r5, #36]	; 0x24
   31838:	mov	r0, #17
   3183c:	add	r2, r7, #1
   31840:	b	31634 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xac>
   31844:	mov	r1, r0
   31848:	mov	r3, r0
   3184c:	ldr	r2, [sp, #16]
   31850:	sub	r0, r0, r3
   31854:	cmp	r1, #0
   31858:	beq	31920 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   3185c:	cmp	r1, #3
   31860:	beq	318c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   31864:	cmp	r1, #2
   31868:	ldrbeq	r1, [sp, #25]
   3186c:	tsteq	r1, #15
   31870:	beq	31908 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x380>
   31874:	ldr	r0, [sp, #20]
   31878:	ldr	r1, [sp, #8]
   3187c:	b	31930 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   31880:	cmp	r3, #66	; 0x42
   31884:	bne	31900 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x378>
   31888:	add	r2, r1, #1
   3188c:	mov	r3, r2
   31890:	cmp	r2, r0
   31894:	bcs	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   31898:	cmp	r3, #7
   3189c:	bhi	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   318a0:	ldrb	r2, [ip, r3]
   318a4:	ldrb	r2, [r8, r2]
   318a8:	sub	r2, r2, #65	; 0x41
   318ac:	uxtb	lr, r2
   318b0:	add	r2, r3, #1
   318b4:	cmp	lr, #2
   318b8:	bcc	3188c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x304>
   318bc:	b	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   318c0:	cmp	r2, #2
   318c4:	bcc	31874 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   318c8:	ldrb	r1, [sp, #26]
   318cc:	ands	r2, r1, #3
   318d0:	bne	31874 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   318d4:	ldrb	r3, [sp, #25]
   318d8:	ldrb	ip, [sp, #24]
   318dc:	lsl	r2, r3, #4
   318e0:	orr	r1, r2, r1, lsr #2
   318e4:	ldr	r2, [sp, #12]
   318e8:	strb	r1, [r2, #1]
   318ec:	lsr	r1, r3, #4
   318f0:	orr	r1, r1, ip, lsl #2
   318f4:	strb	r1, [r2]
   318f8:	add	r2, r2, #2
   318fc:	b	3191c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   31900:	mov	r3, r1
   31904:	b	3184c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   31908:	ldrb	r2, [sp, #24]
   3190c:	lsl	r2, r2, #2
   31910:	orr	r1, r2, r1, lsr #4
   31914:	ldr	r2, [sp, #12]
   31918:	strb	r1, [r2], #1
   3191c:	str	r2, [sp, #12]
   31920:	cmp	r0, #0
   31924:	beq	3193c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b4>
   31928:	mov	r1, r0
   3192c:	ldr	r0, [sp, #20]
   31930:	sub	r0, r0, r1
   31934:	add	r0, sl, r0
   31938:	b	31648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   3193c:	ldr	r0, [sp]
   31940:	ldr	r1, [sp, #12]
   31944:	sub	r0, r1, r0
   31948:	ldr	r1, [sp, #4]
   3194c:	cmp	r1, r0
   31950:	bls	31968 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   31954:	sub	r1, r1, r0
   31958:	ldr	r0, [r5]
   3195c:	bl	2b62c <flatcc_builder_truncate_vector@@Base>
   31960:	cmp	r0, #0
   31964:	bne	316f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   31968:	ldr	r0, [r5]
   3196c:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   31970:	cmp	r0, #0
   31974:	str	r0, [r6]
   31978:	beq	316f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   3197c:	ldrb	r0, [r7]
   31980:	cmp	r0, #34	; 0x22
   31984:	bne	31990 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x408>
   31988:	add	r4, r7, #1
   3198c:	b	31680 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   31990:	ldr	r0, [r5, #24]
   31994:	cmp	r0, #0
   31998:	bne	31680 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   3199c:	mov	r0, #20
   319a0:	b	31708 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   319a4:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   319a8:	andeq	r3, r0, ip, lsl #29

000319ac <flatcc_json_parser_build_string@@Base>:
   319ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   319b0:	add	fp, sp, #28
   319b4:	sub	sp, sp, #4
   319b8:	mov	sl, r3
   319bc:	mov	r4, r2
   319c0:	mov	r5, r0
   319c4:	cmp	r1, r2
   319c8:	beq	31a18 <flatcc_json_parser_build_string@@Base+0x6c>
   319cc:	ldrb	r0, [r1]
   319d0:	cmp	r0, #34	; 0x22
   319d4:	bne	31a18 <flatcc_json_parser_build_string@@Base+0x6c>
   319d8:	add	r1, r1, #1
   319dc:	mov	r6, r4
   319e0:	cmp	r1, r4
   319e4:	beq	31a48 <flatcc_json_parser_build_string@@Base+0x9c>
   319e8:	mov	r6, r1
   319ec:	ldrb	r0, [r6]
   319f0:	cmp	r0, #32
   319f4:	bcc	31c40 <flatcc_json_parser_build_string@@Base+0x294>
   319f8:	cmp	r0, #34	; 0x22
   319fc:	cmpne	r0, #92	; 0x5c
   31a00:	beq	31b64 <flatcc_json_parser_build_string@@Base+0x1b8>
   31a04:	add	r6, r6, #1
   31a08:	cmp	r4, r6
   31a0c:	bne	319ec <flatcc_json_parser_build_string@@Base+0x40>
   31a10:	mov	r6, r1
   31a14:	b	31a48 <flatcc_json_parser_build_string@@Base+0x9c>
   31a18:	ldr	r0, [r5, #24]
   31a1c:	mov	r6, r4
   31a20:	cmp	r0, #0
   31a24:	bne	31a48 <flatcc_json_parser_build_string@@Base+0x9c>
   31a28:	str	r1, [r5, #36]	; 0x24
   31a2c:	add	r1, r1, #1
   31a30:	mov	r0, #16
   31a34:	mov	r6, r4
   31a38:	ldr	r2, [r5, #4]
   31a3c:	sub	r1, r1, r2
   31a40:	str	r1, [r5, #20]
   31a44:	str	r0, [r5, #24]
   31a48:	ldr	r0, [r5, #24]
   31a4c:	cmp	r0, #0
   31a50:	bne	31a70 <flatcc_json_parser_build_string@@Base+0xc4>
   31a54:	str	r4, [r5, #36]	; 0x24
   31a58:	add	r2, r4, #1
   31a5c:	mov	r0, #20
   31a60:	ldr	r1, [r5, #4]
   31a64:	sub	r1, r2, r1
   31a68:	str	r1, [r5, #20]
   31a6c:	str	r0, [r5, #24]
   31a70:	mov	r7, r4
   31a74:	ldr	r0, [r5]
   31a78:	bl	2bb98 <flatcc_builder_start_string@@Base>
   31a7c:	cmp	r0, #0
   31a80:	beq	31a9c <flatcc_json_parser_build_string@@Base+0xf0>
   31a84:	mov	r4, r7
   31a88:	mov	r0, #0
   31a8c:	str	r0, [sl]
   31a90:	mov	r0, r4
   31a94:	sub	sp, fp, #28
   31a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a9c:	ldr	r0, [r5]
   31aa0:	sub	r2, r7, r6
   31aa4:	mov	r1, r6
   31aa8:	bl	2b480 <flatcc_builder_append_string@@Base>
   31aac:	cmp	r0, #0
   31ab0:	beq	31a84 <flatcc_json_parser_build_string@@Base+0xd8>
   31ab4:	cmp	r7, r4
   31ab8:	mov	r6, r4
   31abc:	beq	31be4 <flatcc_json_parser_build_string@@Base+0x238>
   31ac0:	mov	r8, sp
   31ac4:	add	r9, r8, #1
   31ac8:	ldrb	r0, [r7]
   31acc:	cmp	r0, #34	; 0x22
   31ad0:	beq	31be0 <flatcc_json_parser_build_string@@Base+0x234>
   31ad4:	mov	r0, r5
   31ad8:	mov	r1, r7
   31adc:	mov	r2, r4
   31ae0:	mov	r3, r8
   31ae4:	bl	2f26c <flatcc_json_parser_string_escape@@Base>
   31ae8:	mov	r6, r0
   31aec:	ldr	r0, [r5]
   31af0:	ldrb	r2, [sp]
   31af4:	mov	r1, r9
   31af8:	bl	2b480 <flatcc_builder_append_string@@Base>
   31afc:	cmp	r0, #0
   31b00:	beq	31c38 <flatcc_json_parser_build_string@@Base+0x28c>
   31b04:	cmp	r6, r4
   31b08:	beq	31b8c <flatcc_json_parser_build_string@@Base+0x1e0>
   31b0c:	mov	r7, r6
   31b10:	ldrb	r0, [r7]
   31b14:	cmp	r0, #32
   31b18:	bcc	31bac <flatcc_json_parser_build_string@@Base+0x200>
   31b1c:	cmp	r0, #34	; 0x22
   31b20:	cmpne	r0, #92	; 0x5c
   31b24:	beq	31b38 <flatcc_json_parser_build_string@@Base+0x18c>
   31b28:	add	r7, r7, #1
   31b2c:	cmp	r4, r7
   31b30:	bne	31b10 <flatcc_json_parser_build_string@@Base+0x164>
   31b34:	b	31b8c <flatcc_json_parser_build_string@@Base+0x1e0>
   31b38:	cmp	r4, r7
   31b3c:	beq	31bd8 <flatcc_json_parser_build_string@@Base+0x22c>
   31b40:	ldr	r0, [r5]
   31b44:	sub	r2, r7, r6
   31b48:	mov	r1, r6
   31b4c:	bl	2b480 <flatcc_builder_append_string@@Base>
   31b50:	cmp	r0, #0
   31b54:	beq	31a84 <flatcc_json_parser_build_string@@Base+0xd8>
   31b58:	cmp	r4, r7
   31b5c:	bne	31ac8 <flatcc_json_parser_build_string@@Base+0x11c>
   31b60:	b	31bd8 <flatcc_json_parser_build_string@@Base+0x22c>
   31b64:	cmp	r4, r6
   31b68:	beq	31c4c <flatcc_json_parser_build_string@@Base+0x2a0>
   31b6c:	cmp	r0, #34	; 0x22
   31b70:	bne	31b84 <flatcc_json_parser_build_string@@Base+0x1d8>
   31b74:	ldr	r0, [r5]
   31b78:	sub	r2, r6, r1
   31b7c:	bl	2deb4 <flatcc_builder_create_string@@Base>
   31b80:	b	31bec <flatcc_json_parser_build_string@@Base+0x240>
   31b84:	mov	r7, r6
   31b88:	b	31c50 <flatcc_json_parser_build_string@@Base+0x2a4>
   31b8c:	ldr	r0, [r5, #24]
   31b90:	mov	r6, r4
   31b94:	cmp	r0, #0
   31b98:	bne	31be4 <flatcc_json_parser_build_string@@Base+0x238>
   31b9c:	str	r4, [r5, #36]	; 0x24
   31ba0:	mov	r0, #20
   31ba4:	add	r2, r4, #1
   31ba8:	b	31bc8 <flatcc_json_parser_build_string@@Base+0x21c>
   31bac:	ldr	r0, [r5, #24]
   31bb0:	mov	r6, r4
   31bb4:	cmp	r0, #0
   31bb8:	bne	31be4 <flatcc_json_parser_build_string@@Base+0x238>
   31bbc:	str	r7, [r5, #36]	; 0x24
   31bc0:	mov	r0, #17
   31bc4:	add	r2, r7, #1
   31bc8:	ldr	r1, [r5, #4]
   31bcc:	sub	r1, r2, r1
   31bd0:	str	r1, [r5, #20]
   31bd4:	str	r0, [r5, #24]
   31bd8:	mov	r6, r4
   31bdc:	b	31be4 <flatcc_json_parser_build_string@@Base+0x238>
   31be0:	mov	r6, r7
   31be4:	ldr	r0, [r5]
   31be8:	bl	2e03c <flatcc_builder_end_string@@Base>
   31bec:	cmp	r6, r4
   31bf0:	str	r0, [sl]
   31bf4:	beq	31c0c <flatcc_json_parser_build_string@@Base+0x260>
   31bf8:	ldrb	r0, [r6]
   31bfc:	cmp	r0, #34	; 0x22
   31c00:	bne	31c0c <flatcc_json_parser_build_string@@Base+0x260>
   31c04:	add	r4, r6, #1
   31c08:	b	31a90 <flatcc_json_parser_build_string@@Base+0xe4>
   31c0c:	ldr	r0, [r5, #24]
   31c10:	cmp	r0, #0
   31c14:	bne	31a90 <flatcc_json_parser_build_string@@Base+0xe4>
   31c18:	str	r6, [r5, #36]	; 0x24
   31c1c:	add	r2, r6, #1
   31c20:	mov	r0, #20
   31c24:	ldr	r1, [r5, #4]
   31c28:	sub	r1, r2, r1
   31c2c:	str	r1, [r5, #20]
   31c30:	str	r0, [r5, #24]
   31c34:	b	31a90 <flatcc_json_parser_build_string@@Base+0xe4>
   31c38:	mov	r4, r6
   31c3c:	b	31a88 <flatcc_json_parser_build_string@@Base+0xdc>
   31c40:	ldr	r0, [r5, #24]
   31c44:	cmp	r0, #0
   31c48:	beq	31c58 <flatcc_json_parser_build_string@@Base+0x2ac>
   31c4c:	mov	r7, r4
   31c50:	mov	r6, r1
   31c54:	b	31a74 <flatcc_json_parser_build_string@@Base+0xc8>
   31c58:	str	r6, [r5, #36]	; 0x24
   31c5c:	add	r3, r6, #1
   31c60:	mov	r0, #17
   31c64:	mov	r7, r4
   31c68:	ldr	r2, [r5, #4]
   31c6c:	sub	r2, r3, r2
   31c70:	str	r2, [r5, #20]
   31c74:	str	r0, [r5, #24]
   31c78:	b	31c50 <flatcc_json_parser_build_string@@Base+0x2a4>

00031c7c <flatcc_json_parser_prepare_unions@@Base>:
   31c7c:	push	{r4, r5, r6, r7, fp, lr}
   31c80:	add	fp, sp, #16
   31c84:	mov	r5, r1
   31c88:	mov	r6, r0
   31c8c:	add	r0, r3, r3, lsl #1
   31c90:	mov	r1, #8
   31c94:	mov	r7, r3
   31c98:	mov	r4, r2
   31c9c:	add	r1, r1, r0, lsl #3
   31ca0:	ldr	r0, [r6]
   31ca4:	bl	29f40 <flatcc_builder_enter_user_frame@@Base>
   31ca8:	mov	r1, r0
   31cac:	ldr	r0, [fp, #8]
   31cb0:	cmp	r1, #0
   31cb4:	str	r1, [r0]
   31cb8:	beq	31cd4 <flatcc_json_parser_prepare_unions@@Base+0x58>
   31cbc:	ldr	r0, [r6]
   31cc0:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   31cc4:	mov	r4, r5
   31cc8:	str	r7, [r0]
   31ccc:	mov	r0, r4
   31cd0:	pop	{r4, r5, r6, r7, fp, pc}
   31cd4:	ldr	r0, [r6, #24]
   31cd8:	cmp	r0, #0
   31cdc:	beq	31ce8 <flatcc_json_parser_prepare_unions@@Base+0x6c>
   31ce0:	mov	r0, r4
   31ce4:	pop	{r4, r5, r6, r7, fp, pc}
   31ce8:	str	r5, [r6, #36]	; 0x24
   31cec:	add	r2, r5, #1
   31cf0:	mov	r0, #33	; 0x21
   31cf4:	ldr	r1, [r6, #4]
   31cf8:	sub	r1, r2, r1
   31cfc:	str	r1, [r6, #20]
   31d00:	str	r0, [r6, #24]
   31d04:	mov	r0, r4
   31d08:	pop	{r4, r5, r6, r7, fp, pc}

00031d0c <flatcc_json_parser_finalize_unions@@Base>:
   31d0c:	push	{r4, r5, r6, r7, fp, lr}
   31d10:	add	fp, sp, #16
   31d14:	mov	r6, r0
   31d18:	ldr	r0, [r0]
   31d1c:	mov	r7, r1
   31d20:	mov	r1, r3
   31d24:	mov	r5, r3
   31d28:	mov	r4, r2
   31d2c:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   31d30:	ldr	r0, [r0, #4]
   31d34:	cmp	r0, #0
   31d38:	beq	31d68 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   31d3c:	ldr	r0, [r6, #24]
   31d40:	cmp	r0, #0
   31d44:	bne	31d6c <flatcc_json_parser_finalize_unions@@Base+0x60>
   31d48:	str	r7, [r6, #36]	; 0x24
   31d4c:	add	r2, r7, #1
   31d50:	mov	r0, #27
   31d54:	ldr	r1, [r6, #4]
   31d58:	sub	r1, r2, r1
   31d5c:	str	r1, [r6, #20]
   31d60:	str	r0, [r6, #24]
   31d64:	b	31d6c <flatcc_json_parser_finalize_unions@@Base+0x60>
   31d68:	mov	r4, r7
   31d6c:	ldr	r0, [r6]
   31d70:	mov	r1, r5
   31d74:	bl	2a064 <flatcc_builder_exit_user_frame_at@@Base>
   31d78:	mov	r0, r4
   31d7c:	pop	{r4, r5, r6, r7, fp, pc}

00031d80 <flatcc_json_parser_union@@Base>:
   31d80:	push	{r4, r5, r6, r7, fp, lr}
   31d84:	add	fp, sp, #16
   31d88:	sub	sp, sp, #16
   31d8c:	mov	r6, r1
   31d90:	mov	r5, r0
   31d94:	ldr	r0, [r0]
   31d98:	ldr	r1, [fp, #12]
   31d9c:	mov	r7, r3
   31da0:	mov	r4, r2
   31da4:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   31da8:	add	r2, r0, #8
   31dac:	add	r3, r7, r7, lsl #1
   31db0:	mov	r1, r2
   31db4:	ldr	r7, [r1, r3, lsl #3]!
   31db8:	cmp	r7, #0
   31dbc:	beq	31dec <flatcc_json_parser_union@@Base+0x6c>
   31dc0:	ldr	r0, [r5, #24]
   31dc4:	cmp	r0, #0
   31dc8:	bne	31eac <flatcc_json_parser_union@@Base+0x12c>
   31dcc:	mov	r0, #28
   31dd0:	str	r6, [r5, #36]	; 0x24
   31dd4:	add	r2, r6, #1
   31dd8:	ldr	r1, [r5, #4]
   31ddc:	sub	r1, r2, r1
   31de0:	str	r1, [r5, #20]
   31de4:	str	r0, [r5, #24]
   31de8:	b	31eac <flatcc_json_parser_union@@Base+0x12c>
   31dec:	add	r2, r2, r3, lsl #3
   31df0:	ldrb	r3, [r2, #12]
   31df4:	cmp	r3, #0
   31df8:	beq	31e68 <flatcc_json_parser_union@@Base+0xe8>
   31dfc:	ldrb	r3, [r2, #13]
   31e00:	cmp	r3, #0
   31e04:	strb	r3, [sp, #8]
   31e08:	beq	31ea0 <flatcc_json_parser_union@@Base+0x120>
   31e0c:	ldr	r1, [r0, #4]
   31e10:	ldr	r7, [fp, #16]
   31e14:	mov	r2, r4
   31e18:	sub	r1, r1, #1
   31e1c:	str	r1, [r0, #4]
   31e20:	add	r0, sp, #8
   31e24:	mov	r1, r6
   31e28:	add	r0, r0, #4
   31e2c:	str	r0, [sp]
   31e30:	mov	r0, r5
   31e34:	blx	r7
   31e38:	cmp	r0, r4
   31e3c:	beq	31eac <flatcc_json_parser_union@@Base+0x12c>
   31e40:	mov	r6, r0
   31e44:	ldr	r1, [fp, #8]
   31e48:	ldr	r0, [r5]
   31e4c:	ldr	r2, [sp, #8]
   31e50:	ldr	r3, [sp, #12]
   31e54:	bl	2cf0c <flatcc_builder_table_add_union@@Base>
   31e58:	cmp	r0, #0
   31e5c:	bne	31dc0 <flatcc_json_parser_union@@Base+0x40>
   31e60:	mov	r4, r6
   31e64:	b	31eac <flatcc_json_parser_union@@Base+0x12c>
   31e68:	ldr	r3, [r0, #4]
   31e6c:	add	r3, r3, #1
   31e70:	str	r3, [r0, #4]
   31e74:	ldr	r0, [r5, #16]
   31e78:	str	r0, [r2, #8]
   31e7c:	ldr	r0, [r5, #4]
   31e80:	str	r0, [r2, #4]
   31e84:	str	r6, [r1]
   31e88:	mov	r0, r5
   31e8c:	mov	r1, r6
   31e90:	mov	r2, r4
   31e94:	bl	2fb98 <flatcc_json_parser_generic_json@@Base>
   31e98:	mov	r4, r0
   31e9c:	b	31eac <flatcc_json_parser_union@@Base+0x12c>
   31ea0:	ldr	r0, [r5, #24]
   31ea4:	cmp	r0, #0
   31ea8:	beq	31eb8 <flatcc_json_parser_union@@Base+0x138>
   31eac:	mov	r0, r4
   31eb0:	sub	sp, fp, #16
   31eb4:	pop	{r4, r5, r6, r7, fp, pc}
   31eb8:	mov	r0, #25
   31ebc:	b	31dd0 <flatcc_json_parser_union@@Base+0x50>

00031ec0 <flatcc_json_parser_union_type@@Base>:
   31ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31ec4:	add	fp, sp, #28
   31ec8:	sub	sp, sp, #20
   31ecc:	mov	r8, r1
   31ed0:	mov	r5, r0
   31ed4:	ldr	r0, [r0]
   31ed8:	ldr	r1, [fp, #12]
   31edc:	mov	r6, r3
   31ee0:	mov	r4, r2
   31ee4:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   31ee8:	add	r2, r0, #8
   31eec:	add	r3, r6, r6, lsl #1
   31ef0:	mov	r9, r0
   31ef4:	add	sl, r2, r3, lsl #3
   31ef8:	mov	r0, sl
   31efc:	ldrb	r1, [r0, #12]!
   31f00:	cmp	r1, #0
   31f04:	beq	31f34 <flatcc_json_parser_union_type@@Base+0x74>
   31f08:	ldr	r0, [r5, #24]
   31f0c:	cmp	r0, #0
   31f10:	bne	3220c <flatcc_json_parser_union_type@@Base+0x34c>
   31f14:	str	r8, [r5, #36]	; 0x24
   31f18:	mov	r0, #28
   31f1c:	add	r2, r8, #1
   31f20:	ldr	r1, [r5, #4]
   31f24:	sub	r1, r2, r1
   31f28:	str	r1, [r5, #20]
   31f2c:	str	r0, [r5, #24]
   31f30:	b	3220c <flatcc_json_parser_union_type@@Base+0x34c>
   31f34:	mov	r1, #1
   31f38:	mov	r6, #0
   31f3c:	mov	lr, sl
   31f40:	cmp	r8, r4
   31f44:	str	r3, [sp, #4]
   31f48:	str	r2, [sp, #8]
   31f4c:	strb	r1, [r0]
   31f50:	strb	r6, [lr, #13]!
   31f54:	beq	32114 <flatcc_json_parser_union_type@@Base+0x254>
   31f58:	mov	r2, r8
   31f5c:	ldrb	ip, [r2], #1
   31f60:	cmp	ip, #45	; 0x2d
   31f64:	movne	r2, r8
   31f68:	cmp	r2, r4
   31f6c:	beq	3201c <flatcc_json_parser_union_type@@Base+0x15c>
   31f70:	mov	r6, #0
   31f74:	mov	r0, #10
   31f78:	mov	r7, #0
   31f7c:	ldrb	r1, [r2]
   31f80:	sub	r3, r1, #48	; 0x30
   31f84:	uxtb	r3, r3
   31f88:	cmp	r3, #9
   31f8c:	bhi	320a8 <flatcc_json_parser_union_type@@Base+0x1e8>
   31f90:	add	r3, r7, r7, lsl #2
   31f94:	lsl	r3, r3, #1
   31f98:	umlal	r1, r3, r6, r0
   31f9c:	subs	r1, r1, #48	; 0x30
   31fa0:	sbc	r3, r3, #0
   31fa4:	subs	r6, r1, r6
   31fa8:	sbcs	r7, r3, r7
   31fac:	bcc	320b8 <flatcc_json_parser_union_type@@Base+0x1f8>
   31fb0:	add	r2, r2, #1
   31fb4:	mov	r6, r1
   31fb8:	mov	r7, r3
   31fbc:	cmp	r4, r2
   31fc0:	bne	31f7c <flatcc_json_parser_union_type@@Base+0xbc>
   31fc4:	mov	r0, #0
   31fc8:	mov	r2, r4
   31fcc:	mov	r6, r1
   31fd0:	mov	r7, r3
   31fd4:	cmp	r2, r8
   31fd8:	beq	32114 <flatcc_json_parser_union_type@@Base+0x254>
   31fdc:	cmp	r0, #0
   31fe0:	beq	32034 <flatcc_json_parser_union_type@@Base+0x174>
   31fe4:	ldrb	r0, [r2]
   31fe8:	cmp	r0, #46	; 0x2e
   31fec:	beq	31ffc <flatcc_json_parser_union_type@@Base+0x13c>
   31ff0:	cmp	r0, #101	; 0x65
   31ff4:	cmpne	r0, #69	; 0x45
   31ff8:	bne	32034 <flatcc_json_parser_union_type@@Base+0x174>
   31ffc:	ldr	r0, [r5, #24]
   32000:	mov	r6, #0
   32004:	mov	r7, #0
   32008:	cmp	r0, #0
   3200c:	mov	r0, r4
   32010:	bne	320f8 <flatcc_json_parser_union_type@@Base+0x238>
   32014:	mov	r0, #12
   32018:	b	320d4 <flatcc_json_parser_union_type@@Base+0x214>
   3201c:	mov	r2, r4
   32020:	mov	r7, #0
   32024:	mov	r0, #0
   32028:	cmp	r2, r8
   3202c:	bne	31fdc <flatcc_json_parser_union_type@@Base+0x11c>
   32030:	b	32114 <flatcc_json_parser_union_type@@Base+0x254>
   32034:	mov	r0, r2
   32038:	cmp	r0, r8
   3203c:	beq	32114 <flatcc_json_parser_union_type@@Base+0x254>
   32040:	cmp	ip, #45	; 0x2d
   32044:	bne	32060 <flatcc_json_parser_union_type@@Base+0x1a0>
   32048:	ldr	r1, [r5, #24]
   3204c:	mov	r2, r4
   32050:	cmp	r1, #0
   32054:	bne	3210c <flatcc_json_parser_union_type@@Base+0x24c>
   32058:	mov	r1, #8
   3205c:	b	32080 <flatcc_json_parser_union_type@@Base+0x1c0>
   32060:	subs	r1, r6, #256	; 0x100
   32064:	sbcs	r1, r7, #0
   32068:	bcc	32104 <flatcc_json_parser_union_type@@Base+0x244>
   3206c:	ldr	r1, [r5, #24]
   32070:	mov	r2, r4
   32074:	cmp	r1, #0
   32078:	bne	3210c <flatcc_json_parser_union_type@@Base+0x24c>
   3207c:	mov	r1, #7
   32080:	str	r0, [r5, #36]	; 0x24
   32084:	add	r0, r0, #1
   32088:	ldr	r2, [r5, #4]
   3208c:	sub	r0, r0, r2
   32090:	mov	r2, r4
   32094:	str	r0, [r5, #20]
   32098:	str	r1, [r5, #24]
   3209c:	cmp	r2, r8
   320a0:	bne	32138 <flatcc_json_parser_union_type@@Base+0x278>
   320a4:	b	32114 <flatcc_json_parser_union_type@@Base+0x254>
   320a8:	mov	r0, #1
   320ac:	cmp	r2, r8
   320b0:	bne	31fdc <flatcc_json_parser_union_type@@Base+0x11c>
   320b4:	b	32114 <flatcc_json_parser_union_type@@Base+0x254>
   320b8:	ldr	r0, [r5, #24]
   320bc:	mov	r6, #0
   320c0:	mov	r7, #0
   320c4:	cmp	r0, #0
   320c8:	mov	r0, r4
   320cc:	bne	320f8 <flatcc_json_parser_union_type@@Base+0x238>
   320d0:	mov	r0, #8
   320d4:	str	r2, [r5, #36]	; 0x24
   320d8:	add	r2, r2, #1
   320dc:	mov	r6, #0
   320e0:	mov	r7, #0
   320e4:	ldr	r1, [r5, #4]
   320e8:	sub	r1, r2, r1
   320ec:	str	r1, [r5, #20]
   320f0:	str	r0, [r5, #24]
   320f4:	mov	r0, r4
   320f8:	cmp	r0, r8
   320fc:	bne	32040 <flatcc_json_parser_union_type@@Base+0x180>
   32100:	b	32114 <flatcc_json_parser_union_type@@Base+0x254>
   32104:	mov	r2, r0
   32108:	strb	r6, [lr]
   3210c:	cmp	r2, r8
   32110:	bne	32138 <flatcc_json_parser_union_type@@Base+0x278>
   32114:	ldr	r3, [fp, #16]
   32118:	mov	r0, r5
   3211c:	mov	r1, r8
   32120:	mov	r2, r4
   32124:	str	lr, [sp]
   32128:	mov	r6, lr
   3212c:	bl	32244 <flatcc_json_parser_union_type@@Base+0x384>
   32130:	mov	lr, r6
   32134:	mov	r2, r0
   32138:	ldr	r0, [sp, #8]
   3213c:	ldr	r1, [sp, #4]
   32140:	ldr	r1, [r0, r1, lsl #3]
   32144:	cmp	r1, #0
   32148:	beq	321e4 <flatcc_json_parser_union_type@@Base+0x324>
   3214c:	ldr	r0, [r9, #4]
   32150:	str	r2, [sp, #8]
   32154:	cmp	r0, #0
   32158:	beq	32218 <flatcc_json_parser_union_type@@Base+0x358>
   3215c:	sub	r0, r0, #1
   32160:	ldr	r6, [fp, #20]
   32164:	mov	r2, r4
   32168:	str	r0, [r9, #4]
   3216c:	ldr	r0, [sl, #8]
   32170:	ldr	r8, [r5, #4]
   32174:	ldr	r7, [r5, #16]
   32178:	str	r0, [r5, #16]
   3217c:	ldr	r0, [sl, #4]
   32180:	str	r0, [r5, #4]
   32184:	add	r0, sp, #12
   32188:	ldrb	r3, [lr]
   3218c:	add	r0, r0, #4
   32190:	str	r0, [sp]
   32194:	mov	r0, r5
   32198:	strb	r3, [sp, #12]
   3219c:	blx	r6
   321a0:	cmp	r0, r4
   321a4:	beq	3220c <flatcc_json_parser_union_type@@Base+0x34c>
   321a8:	ldr	r1, [fp, #8]
   321ac:	ldr	r0, [r5]
   321b0:	ldr	r2, [sp, #12]
   321b4:	ldr	r3, [sp, #16]
   321b8:	bl	2cf0c <flatcc_builder_table_add_union@@Base>
   321bc:	cmp	r0, #0
   321c0:	beq	32200 <flatcc_json_parser_union_type@@Base+0x340>
   321c4:	ldr	r0, [r5, #24]
   321c8:	cmp	r0, #0
   321cc:	bne	3220c <flatcc_json_parser_union_type@@Base+0x34c>
   321d0:	ldr	r2, [sp, #8]
   321d4:	mov	r0, #28
   321d8:	str	r2, [r5, #36]	; 0x24
   321dc:	add	r2, r2, #1
   321e0:	b	31f20 <flatcc_json_parser_union_type@@Base+0x60>
   321e4:	ldrb	r0, [lr]
   321e8:	ldr	r1, [r9, #4]
   321ec:	mov	r4, r2
   321f0:	cmp	r0, #0
   321f4:	addne	r1, r1, #1
   321f8:	str	r1, [r9, #4]
   321fc:	b	3220c <flatcc_json_parser_union_type@@Base+0x34c>
   32200:	ldr	r4, [sp, #8]
   32204:	str	r8, [r5, #4]
   32208:	str	r7, [r5, #16]
   3220c:	mov	r0, r4
   32210:	sub	sp, fp, #28
   32214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32218:	ldr	r0, [pc, #24]	; 32238 <flatcc_json_parser_union_type@@Base+0x378>
   3221c:	ldr	r1, [pc, #24]	; 3223c <flatcc_json_parser_union_type@@Base+0x37c>
   32220:	ldr	r3, [pc, #24]	; 32240 <flatcc_json_parser_union_type@@Base+0x380>
   32224:	movw	r2, #965	; 0x3c5
   32228:	add	r0, pc, r0
   3222c:	add	r1, pc, r1
   32230:	add	r3, pc, r3
   32234:	bl	12bbc <__assert_fail@plt>
   32238:	andeq	r3, r0, r0, lsr #18
   3223c:	andeq	r3, r0, fp, lsr #18
   32240:	andeq	r3, r0, r8, lsl #19
   32244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32248:	add	fp, sp, #28
   3224c:	sub	sp, sp, #44	; 0x2c
   32250:	mov	r4, r2
   32254:	mov	r2, r1
   32258:	ldr	r1, [fp, #8]
   3225c:	mov	r5, r0
   32260:	mov	r0, #0
   32264:	cmp	r2, r4
   32268:	strb	r0, [r1]
   3226c:	beq	322d0 <flatcc_json_parser_union_type@@Base+0x410>
   32270:	ldrb	r0, [r2]
   32274:	cmp	r0, #46	; 0x2e
   32278:	beq	32294 <flatcc_json_parser_union_type@@Base+0x3d4>
   3227c:	cmp	r0, #34	; 0x22
   32280:	bne	322c8 <flatcc_json_parser_union_type@@Base+0x408>
   32284:	mov	r0, #0
   32288:	add	r1, r2, #1
   3228c:	str	r0, [r5, #12]
   32290:	b	322d4 <flatcc_json_parser_union_type@@Base+0x414>
   32294:	ldr	r0, [r5, #24]
   32298:	mov	r1, r4
   3229c:	cmp	r0, #0
   322a0:	bne	322d4 <flatcc_json_parser_union_type@@Base+0x414>
   322a4:	str	r2, [r5, #36]	; 0x24
   322a8:	add	r2, r2, #1
   322ac:	mov	r0, #5
   322b0:	ldr	r1, [r5, #4]
   322b4:	sub	r1, r2, r1
   322b8:	str	r1, [r5, #20]
   322bc:	str	r0, [r5, #24]
   322c0:	mov	r1, r4
   322c4:	b	322d4 <flatcc_json_parser_union_type@@Base+0x414>
   322c8:	mov	r0, #1
   322cc:	str	r0, [r5, #12]
   322d0:	mov	r1, r2
   322d4:	ldr	r0, [r5, #12]
   322d8:	cmp	r0, #0
   322dc:	beq	322f0 <flatcc_json_parser_union_type@@Base+0x430>
   322e0:	mov	r7, r1
   322e4:	cmp	r7, r4
   322e8:	bne	3233c <flatcc_json_parser_union_type@@Base+0x47c>
   322ec:	b	32448 <flatcc_json_parser_union_type@@Base+0x588>
   322f0:	sub	r0, r4, r1
   322f4:	cmp	r0, #2
   322f8:	blt	3231c <flatcc_json_parser_union_type@@Base+0x45c>
   322fc:	ldrb	r0, [r1]
   32300:	cmp	r0, #32
   32304:	bhi	322e0 <flatcc_json_parser_union_type@@Base+0x420>
   32308:	bne	3231c <flatcc_json_parser_union_type@@Base+0x45c>
   3230c:	mov	r7, r1
   32310:	ldrb	r0, [r7, #1]!
   32314:	cmp	r0, #32
   32318:	bhi	32334 <flatcc_json_parser_union_type@@Base+0x474>
   3231c:	mov	r0, r5
   32320:	mov	r2, r4
   32324:	mov	r6, r3
   32328:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   3232c:	mov	r3, r6
   32330:	mov	r7, r0
   32334:	cmp	r7, r4
   32338:	beq	32448 <flatcc_json_parser_union_type@@Base+0x588>
   3233c:	add	r9, r3, #4
   32340:	mov	r6, #0
   32344:	add	sl, sp, #32
   32348:	add	r8, sp, #28
   3234c:	str	r3, [sp, #16]
   32350:	str	r9, [sp, #12]
   32354:	b	3238c <flatcc_json_parser_union_type@@Base+0x4cc>
   32358:	ldr	r2, [fp, #8]
   3235c:	ldr	r9, [sp, #12]
   32360:	add	r6, r6, #1
   32364:	mov	r7, r0
   32368:	mov	r3, r2
   3236c:	ldrb	r2, [r2]
   32370:	add	r1, r2, r1
   32374:	strb	r1, [r3]
   32378:	ldr	r3, [sp, #16]
   3237c:	ldr	r1, [sp, #24]
   32380:	cmp	r1, #0
   32384:	subeq	sp, fp, #28
   32388:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3238c:	str	r6, [sp, #20]
   32390:	mov	r6, r3
   32394:	ldr	r6, [r3]
   32398:	add	r0, sp, #24
   3239c:	mov	r1, r7
   323a0:	mov	r2, r4
   323a4:	mov	r3, r8
   323a8:	str	sl, [sp]
   323ac:	str	r0, [sp, #4]
   323b0:	mov	r0, r5
   323b4:	blx	r6
   323b8:	cmp	r0, r4
   323bc:	beq	32448 <flatcc_json_parser_union_type@@Base+0x588>
   323c0:	cmp	r0, r7
   323c4:	bne	323d8 <flatcc_json_parser_union_type@@Base+0x518>
   323c8:	ldr	r6, [r9], #4
   323cc:	cmp	r6, #0
   323d0:	bne	32398 <flatcc_json_parser_union_type@@Base+0x4d8>
   323d4:	b	32420 <flatcc_json_parser_union_type@@Base+0x560>
   323d8:	ldr	r6, [sp, #20]
   323dc:	cmp	r6, #0
   323e0:	ldrne	r1, [r5, #12]
   323e4:	cmpne	r1, #0
   323e8:	bne	32468 <flatcc_json_parser_union_type@@Base+0x5a8>
   323ec:	ldr	r1, [sp, #28]
   323f0:	cmp	r1, #0
   323f4:	bne	32454 <flatcc_json_parser_union_type@@Base+0x594>
   323f8:	ldr	r1, [sp, #32]
   323fc:	ldr	r2, [sp, #36]	; 0x24
   32400:	subs	r3, r1, #256	; 0x100
   32404:	sbcs	r2, r2, #0
   32408:	bcc	32358 <flatcc_json_parser_union_type@@Base+0x498>
   3240c:	ldr	r1, [r5, #24]
   32410:	cmp	r1, #0
   32414:	bne	32448 <flatcc_json_parser_union_type@@Base+0x588>
   32418:	mov	r1, #7
   3241c:	b	32478 <flatcc_json_parser_union_type@@Base+0x5b8>
   32420:	ldr	r0, [r5, #24]
   32424:	cmp	r0, #0
   32428:	bne	32448 <flatcc_json_parser_union_type@@Base+0x588>
   3242c:	str	r7, [r5, #36]	; 0x24
   32430:	add	r2, r7, #1
   32434:	mov	r0, #23
   32438:	ldr	r1, [r5, #4]
   3243c:	sub	r1, r2, r1
   32440:	str	r1, [r5, #20]
   32444:	str	r0, [r5, #24]
   32448:	mov	r0, r4
   3244c:	sub	sp, fp, #28
   32450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32454:	ldr	r1, [r5, #24]
   32458:	cmp	r1, #0
   3245c:	bne	32448 <flatcc_json_parser_union_type@@Base+0x588>
   32460:	mov	r1, #8
   32464:	b	32478 <flatcc_json_parser_union_type@@Base+0x5b8>
   32468:	ldr	r1, [r5, #24]
   3246c:	cmp	r1, #0
   32470:	bne	32448 <flatcc_json_parser_union_type@@Base+0x588>
   32474:	mov	r1, #14
   32478:	str	r0, [r5, #36]	; 0x24
   3247c:	add	r0, r0, #1
   32480:	ldr	r2, [r5, #4]
   32484:	sub	r0, r0, r2
   32488:	str	r0, [r5, #20]
   3248c:	str	r1, [r5, #24]
   32490:	b	32448 <flatcc_json_parser_union_type@@Base+0x588>

00032494 <flatcc_json_parser_union_vector@@Base>:
   32494:	push	{r4, r5, r6, r7, fp, lr}
   32498:	add	fp, sp, #16
   3249c:	sub	sp, sp, #16
   324a0:	mov	r6, r1
   324a4:	mov	r5, r0
   324a8:	ldr	r0, [r0]
   324ac:	ldr	r1, [fp, #12]
   324b0:	mov	r7, r3
   324b4:	mov	r4, r2
   324b8:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   324bc:	add	r2, r0, #8
   324c0:	add	r3, r7, r7, lsl #1
   324c4:	mov	r1, r2
   324c8:	ldr	r7, [r1, r3, lsl #3]!
   324cc:	cmp	r7, #0
   324d0:	beq	32508 <flatcc_json_parser_union_vector@@Base+0x74>
   324d4:	ldr	r0, [r5, #24]
   324d8:	cmp	r0, #0
   324dc:	bne	324fc <flatcc_json_parser_union_vector@@Base+0x68>
   324e0:	str	r6, [r5, #36]	; 0x24
   324e4:	add	r2, r6, #1
   324e8:	mov	r0, #28
   324ec:	ldr	r1, [r5, #4]
   324f0:	sub	r1, r2, r1
   324f4:	str	r1, [r5, #20]
   324f8:	str	r0, [r5, #24]
   324fc:	mov	r0, r4
   32500:	sub	sp, fp, #16
   32504:	pop	{r4, r5, r6, r7, fp, pc}
   32508:	add	r2, r2, r3, lsl #3
   3250c:	ldr	r3, [r0, #4]
   32510:	ldrb	r7, [r2, #12]
   32514:	cmp	r7, #0
   32518:	beq	32554 <flatcc_json_parser_union_vector@@Base+0xc0>
   3251c:	sub	r3, r3, #1
   32520:	ldr	r1, [fp, #16]
   32524:	ldr	r7, [fp, #8]
   32528:	str	r3, [r0, #4]
   3252c:	ldr	r0, [r2, #16]
   32530:	ldr	r3, [r2, #20]
   32534:	mov	r2, r4
   32538:	stm	sp, {r0, r7}
   3253c:	str	r1, [sp, #8]
   32540:	mov	r0, r5
   32544:	mov	r1, r6
   32548:	bl	32588 <flatcc_json_parser_union_vector@@Base+0xf4>
   3254c:	sub	sp, fp, #16
   32550:	pop	{r4, r5, r6, r7, fp, pc}
   32554:	add	r3, r3, #1
   32558:	str	r3, [r0, #4]
   3255c:	ldr	r0, [r5, #16]
   32560:	str	r0, [r2, #8]
   32564:	ldr	r0, [r5, #4]
   32568:	str	r0, [r2, #4]
   3256c:	str	r6, [r1]
   32570:	mov	r0, r5
   32574:	mov	r1, r6
   32578:	mov	r2, r4
   3257c:	sub	sp, fp, #16
   32580:	pop	{r4, r5, r6, r7, fp, lr}
   32584:	b	2fb98 <flatcc_json_parser_generic_json@@Base>
   32588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3258c:	add	fp, sp, #28
   32590:	sub	sp, sp, #12
   32594:	mov	r5, r0
   32598:	mov	r0, #0
   3259c:	mov	r8, r3
   325a0:	mov	r6, r2
   325a4:	mov	r7, r1
   325a8:	str	r0, [sp, #8]
   325ac:	ldr	r0, [r5]
   325b0:	bl	2b8cc <flatcc_builder_start_offset_vector@@Base>
   325b4:	cmp	r0, #0
   325b8:	beq	325d8 <flatcc_json_parser_union_vector@@Base+0x144>
   325bc:	ldr	r0, [r5, #24]
   325c0:	cmp	r0, #0
   325c4:	bne	32654 <flatcc_json_parser_union_vector@@Base+0x1c0>
   325c8:	str	r7, [r5, #36]	; 0x24
   325cc:	mov	r0, #33	; 0x21
   325d0:	add	r2, r7, #1
   325d4:	b	32644 <flatcc_json_parser_union_vector@@Base+0x1b0>
   325d8:	ldr	sl, [fp, #8]
   325dc:	cmp	r7, r6
   325e0:	beq	32614 <flatcc_json_parser_union_vector@@Base+0x180>
   325e4:	ldrb	r0, [r7]
   325e8:	cmp	r0, #91	; 0x5b
   325ec:	bne	32614 <flatcc_json_parser_union_vector@@Base+0x180>
   325f0:	add	r1, r7, #1
   325f4:	sub	r0, r6, r1
   325f8:	cmp	r0, #2
   325fc:	blt	326e8 <flatcc_json_parser_union_vector@@Base+0x254>
   32600:	ldrb	r0, [r1]
   32604:	cmp	r0, #32
   32608:	bls	326d8 <flatcc_json_parser_union_vector@@Base+0x244>
   3260c:	mov	r7, r1
   32610:	b	326f8 <flatcc_json_parser_union_vector@@Base+0x264>
   32614:	ldr	r0, [r5, #24]
   32618:	mov	r9, r6
   3261c:	cmp	r0, #0
   32620:	beq	32660 <flatcc_json_parser_union_vector@@Base+0x1cc>
   32624:	cmp	sl, #0
   32628:	beq	32688 <flatcc_json_parser_union_vector@@Base+0x1f4>
   3262c:	ldr	r0, [r5, #24]
   32630:	cmp	r0, #0
   32634:	bne	32654 <flatcc_json_parser_union_vector@@Base+0x1c0>
   32638:	str	r9, [r5, #36]	; 0x24
   3263c:	mov	r0, #30
   32640:	add	r2, r9, #1
   32644:	ldr	r1, [r5, #4]
   32648:	sub	r1, r2, r1
   3264c:	str	r1, [r5, #20]
   32650:	str	r0, [r5, #24]
   32654:	mov	r0, r6
   32658:	sub	sp, fp, #28
   3265c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32660:	str	r7, [r5, #36]	; 0x24
   32664:	add	r2, r7, #1
   32668:	mov	r0, #22
   3266c:	mov	r9, r6
   32670:	ldr	r1, [r5, #4]
   32674:	sub	r1, r2, r1
   32678:	str	r1, [r5, #20]
   3267c:	str	r0, [r5, #24]
   32680:	cmp	sl, #0
   32684:	bne	3262c <flatcc_json_parser_union_vector@@Base+0x198>
   32688:	ldr	r0, [r5]
   3268c:	mov	r1, r8
   32690:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   32694:	mov	r1, r0
   32698:	ldr	r0, [r5]
   3269c:	bl	2ce14 <flatcc_builder_end_offset_vector_for_unions@@Base>
   326a0:	cmp	r0, #0
   326a4:	str	r0, [sp, #8]
   326a8:	beq	326d0 <flatcc_json_parser_union_vector@@Base+0x23c>
   326ac:	ldr	r1, [fp, #12]
   326b0:	ldr	r0, [r5]
   326b4:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   326b8:	cmp	r0, #0
   326bc:	beq	326d0 <flatcc_json_parser_union_vector@@Base+0x23c>
   326c0:	ldr	r1, [sp, #8]
   326c4:	mov	r6, r9
   326c8:	str	r1, [r0]
   326cc:	b	32654 <flatcc_json_parser_union_vector@@Base+0x1c0>
   326d0:	mov	r7, r9
   326d4:	b	325bc <flatcc_json_parser_union_vector@@Base+0x128>
   326d8:	bne	326e8 <flatcc_json_parser_union_vector@@Base+0x254>
   326dc:	ldrb	r0, [r7, #2]!
   326e0:	cmp	r0, #32
   326e4:	bhi	326f8 <flatcc_json_parser_union_vector@@Base+0x264>
   326e8:	mov	r0, r5
   326ec:	mov	r2, r6
   326f0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   326f4:	mov	r7, r0
   326f8:	cmp	r7, r6
   326fc:	mov	r4, r6
   32700:	beq	32740 <flatcc_json_parser_union_vector@@Base+0x2ac>
   32704:	ldrb	r0, [r7]
   32708:	cmp	r0, #93	; 0x5d
   3270c:	bne	3273c <flatcc_json_parser_union_vector@@Base+0x2a8>
   32710:	add	r1, r7, #1
   32714:	sub	r0, r6, r1
   32718:	cmp	r0, #2
   3271c:	blt	328ac <flatcc_json_parser_union_vector@@Base+0x418>
   32720:	ldrb	r0, [r1]
   32724:	cmp	r0, #32
   32728:	bls	32898 <flatcc_json_parser_union_vector@@Base+0x404>
   3272c:	mov	r9, r1
   32730:	cmp	sl, #0
   32734:	bne	3262c <flatcc_json_parser_union_vector@@Base+0x198>
   32738:	b	32688 <flatcc_json_parser_union_vector@@Base+0x1f4>
   3273c:	mov	r4, r7
   32740:	cmp	sl, #0
   32744:	beq	3287c <flatcc_json_parser_union_vector@@Base+0x3e8>
   32748:	add	r0, r6, #1
   3274c:	mov	sl, #0
   32750:	add	r9, sp, #8
   32754:	str	r0, [sp, #4]
   32758:	ldr	r0, [r5]
   3275c:	mov	r1, r8
   32760:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   32764:	ldrb	r3, [r0, -sl]
   32768:	ldr	r7, [fp, #16]
   3276c:	mov	r0, r5
   32770:	mov	r1, r4
   32774:	mov	r2, r6
   32778:	str	r9, [sp]
   3277c:	blx	r7
   32780:	cmp	r0, r6
   32784:	beq	32654 <flatcc_json_parser_union_vector@@Base+0x1c0>
   32788:	mov	r7, r0
   3278c:	ldr	r0, [r5]
   32790:	mov	r1, #1
   32794:	bl	2b024 <flatcc_builder_extend_offset_vector@@Base>
   32798:	cmp	r0, #0
   3279c:	beq	325bc <flatcc_json_parser_union_vector@@Base+0x128>
   327a0:	ldr	r1, [sp, #8]
   327a4:	str	r1, [r0]
   327a8:	sub	r0, r6, r7
   327ac:	cmp	r0, #2
   327b0:	blt	327e4 <flatcc_json_parser_union_vector@@Base+0x350>
   327b4:	ldrb	r0, [r7]
   327b8:	cmp	r0, #32
   327bc:	bls	327d0 <flatcc_json_parser_union_vector@@Base+0x33c>
   327c0:	mov	r4, r7
   327c4:	cmp	r4, r6
   327c8:	bne	32800 <flatcc_json_parser_union_vector@@Base+0x36c>
   327cc:	b	328c8 <flatcc_json_parser_union_vector@@Base+0x434>
   327d0:	bne	327e4 <flatcc_json_parser_union_vector@@Base+0x350>
   327d4:	mov	r4, r7
   327d8:	ldrb	r0, [r4, #1]!
   327dc:	cmp	r0, #32
   327e0:	bhi	327f8 <flatcc_json_parser_union_vector@@Base+0x364>
   327e4:	mov	r0, r5
   327e8:	mov	r1, r7
   327ec:	mov	r2, r6
   327f0:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   327f4:	mov	r4, r0
   327f8:	cmp	r4, r6
   327fc:	beq	328c8 <flatcc_json_parser_union_vector@@Base+0x434>
   32800:	ldrb	r0, [r4]
   32804:	cmp	r0, #44	; 0x2c
   32808:	bne	328d0 <flatcc_json_parser_union_vector@@Base+0x43c>
   3280c:	add	r1, r4, #1
   32810:	sub	r0, r6, r1
   32814:	cmp	r0, #2
   32818:	blt	32848 <flatcc_json_parser_union_vector@@Base+0x3b4>
   3281c:	ldrb	r0, [r1]
   32820:	cmp	r0, #32
   32824:	bls	32838 <flatcc_json_parser_union_vector@@Base+0x3a4>
   32828:	mov	r4, r1
   3282c:	cmp	r4, r6
   32830:	bne	32860 <flatcc_json_parser_union_vector@@Base+0x3cc>
   32834:	b	328fc <flatcc_json_parser_union_vector@@Base+0x468>
   32838:	bne	32848 <flatcc_json_parser_union_vector@@Base+0x3b4>
   3283c:	ldrb	r0, [r4, #2]!
   32840:	cmp	r0, #32
   32844:	bhi	32858 <flatcc_json_parser_union_vector@@Base+0x3c4>
   32848:	mov	r0, r5
   3284c:	mov	r2, r6
   32850:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   32854:	mov	r4, r0
   32858:	cmp	r4, r6
   3285c:	beq	328fc <flatcc_json_parser_union_vector@@Base+0x468>
   32860:	ldrb	r0, [r4]
   32864:	cmp	r0, #93	; 0x5d
   32868:	beq	328d8 <flatcc_json_parser_union_vector@@Base+0x444>
   3286c:	ldr	r0, [fp, #8]
   32870:	sub	sl, sl, #1
   32874:	adds	r0, r0, sl
   32878:	bne	32758 <flatcc_json_parser_union_vector@@Base+0x2c4>
   3287c:	ldr	r0, [r5, #24]
   32880:	cmp	r0, #0
   32884:	bne	32654 <flatcc_json_parser_union_vector@@Base+0x1c0>
   32888:	str	r4, [r5, #36]	; 0x24
   3288c:	mov	r0, #30
   32890:	add	r2, r4, #1
   32894:	b	32644 <flatcc_json_parser_union_vector@@Base+0x1b0>
   32898:	bne	328ac <flatcc_json_parser_union_vector@@Base+0x418>
   3289c:	ldrb	r0, [r7, #2]!
   328a0:	cmp	r0, #32
   328a4:	mov	r9, r7
   328a8:	bhi	32624 <flatcc_json_parser_union_vector@@Base+0x190>
   328ac:	mov	r0, r5
   328b0:	mov	r2, r6
   328b4:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   328b8:	mov	r9, r0
   328bc:	cmp	sl, #0
   328c0:	bne	3262c <flatcc_json_parser_union_vector@@Base+0x198>
   328c4:	b	32688 <flatcc_json_parser_union_vector@@Base+0x1f4>
   328c8:	mov	r9, r6
   328cc:	b	32974 <flatcc_json_parser_union_vector@@Base+0x4e0>
   328d0:	cmp	r0, #93	; 0x5d
   328d4:	bne	3291c <flatcc_json_parser_union_vector@@Base+0x488>
   328d8:	add	r1, r4, #1
   328dc:	sub	r0, r6, r1
   328e0:	cmp	r0, #2
   328e4:	blt	32964 <flatcc_json_parser_union_vector@@Base+0x4d0>
   328e8:	ldrb	r0, [r1]
   328ec:	cmp	r0, #32
   328f0:	bls	32950 <flatcc_json_parser_union_vector@@Base+0x4bc>
   328f4:	mov	r9, r1
   328f8:	b	32974 <flatcc_json_parser_union_vector@@Base+0x4e0>
   328fc:	ldr	r0, [r5, #24]
   32900:	mov	r9, r6
   32904:	cmp	r0, #0
   32908:	bne	32974 <flatcc_json_parser_union_vector@@Base+0x4e0>
   3290c:	str	r6, [r5, #36]	; 0x24
   32910:	ldr	r2, [sp, #4]
   32914:	mov	r0, #9
   32918:	b	32938 <flatcc_json_parser_union_vector@@Base+0x4a4>
   3291c:	ldr	r0, [r5, #24]
   32920:	mov	r9, r6
   32924:	cmp	r0, #0
   32928:	bne	32974 <flatcc_json_parser_union_vector@@Base+0x4e0>
   3292c:	str	r4, [r5, #36]	; 0x24
   32930:	mov	r0, #9
   32934:	add	r2, r4, #1
   32938:	ldr	r1, [r5, #4]
   3293c:	sub	r1, r2, r1
   32940:	mov	r9, r6
   32944:	str	r1, [r5, #20]
   32948:	str	r0, [r5, #24]
   3294c:	b	32974 <flatcc_json_parser_union_vector@@Base+0x4e0>
   32950:	bne	32964 <flatcc_json_parser_union_vector@@Base+0x4d0>
   32954:	ldrb	r0, [r4, #2]!
   32958:	cmp	r0, #32
   3295c:	mov	r9, r4
   32960:	bhi	32974 <flatcc_json_parser_union_vector@@Base+0x4e0>
   32964:	mov	r0, r5
   32968:	mov	r2, r6
   3296c:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   32970:	mov	r9, r0
   32974:	ldr	r0, [fp, #8]
   32978:	add	r0, r0, sl
   3297c:	cmp	r0, #1
   32980:	bne	3262c <flatcc_json_parser_union_vector@@Base+0x198>
   32984:	b	32688 <flatcc_json_parser_union_vector@@Base+0x1f4>

00032988 <flatcc_json_parser_union_type_vector@@Base>:
   32988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3298c:	add	fp, sp, #28
   32990:	sub	sp, sp, #28
   32994:	mov	r7, r1
   32998:	mov	r5, r0
   3299c:	ldr	r0, [r0]
   329a0:	ldr	r1, [fp, #12]
   329a4:	mov	r4, r3
   329a8:	mov	r8, r2
   329ac:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   329b0:	add	r0, r0, #8
   329b4:	add	r6, r4, r4, lsl #1
   329b8:	add	r4, r0, r6, lsl #3
   329bc:	mov	r0, r4
   329c0:	ldrb	r1, [r0, #12]!
   329c4:	cmp	r1, #0
   329c8:	beq	329e8 <flatcc_json_parser_union_type_vector@@Base+0x60>
   329cc:	ldr	r0, [r5, #24]
   329d0:	cmp	r0, #0
   329d4:	bne	32a38 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   329d8:	str	r7, [r5, #36]	; 0x24
   329dc:	mov	r0, #28
   329e0:	add	r2, r7, #1
   329e4:	b	32a28 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   329e8:	mov	r1, #1
   329ec:	mov	r2, #1
   329f0:	mvn	r3, #0
   329f4:	strb	r1, [r0]
   329f8:	mov	r1, #1
   329fc:	ldr	r0, [r5]
   32a00:	bl	2b840 <flatcc_builder_start_vector@@Base>
   32a04:	cmp	r0, #0
   32a08:	beq	32a44 <flatcc_json_parser_union_type_vector@@Base+0xbc>
   32a0c:	mov	sl, r7
   32a10:	ldr	r0, [r5, #24]
   32a14:	cmp	r0, #0
   32a18:	bne	32a38 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   32a1c:	str	sl, [r5, #36]	; 0x24
   32a20:	mov	r0, #33	; 0x21
   32a24:	add	r2, sl, #1
   32a28:	ldr	r1, [r5, #4]
   32a2c:	sub	r1, r2, r1
   32a30:	str	r1, [r5, #20]
   32a34:	str	r0, [r5, #24]
   32a38:	mov	r0, r8
   32a3c:	sub	sp, fp, #28
   32a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32a44:	cmp	r7, r8
   32a48:	beq	32a7c <flatcc_json_parser_union_type_vector@@Base+0xf4>
   32a4c:	ldrb	r0, [r7]
   32a50:	cmp	r0, #91	; 0x5b
   32a54:	bne	32a7c <flatcc_json_parser_union_type_vector@@Base+0xf4>
   32a58:	add	r1, r7, #1
   32a5c:	sub	r0, r8, r1
   32a60:	cmp	r0, #2
   32a64:	blt	32ac0 <flatcc_json_parser_union_type_vector@@Base+0x138>
   32a68:	ldrb	r0, [r1]
   32a6c:	cmp	r0, #32
   32a70:	bls	32ab0 <flatcc_json_parser_union_type_vector@@Base+0x128>
   32a74:	mov	r7, r1
   32a78:	b	32ad0 <flatcc_json_parser_union_type_vector@@Base+0x148>
   32a7c:	ldr	r0, [r5, #24]
   32a80:	cmp	r0, #0
   32a84:	mov	r0, r8
   32a88:	bne	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32a8c:	str	r7, [r5, #36]	; 0x24
   32a90:	mov	r0, #22
   32a94:	add	r2, r7, #1
   32a98:	ldr	r1, [r5, #4]
   32a9c:	sub	r1, r2, r1
   32aa0:	str	r1, [r5, #20]
   32aa4:	str	r0, [r5, #24]
   32aa8:	mov	r0, r8
   32aac:	b	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32ab0:	bne	32ac0 <flatcc_json_parser_union_type_vector@@Base+0x138>
   32ab4:	ldrb	r0, [r7, #2]!
   32ab8:	cmp	r0, #32
   32abc:	bhi	32ad0 <flatcc_json_parser_union_type_vector@@Base+0x148>
   32ac0:	mov	r0, r5
   32ac4:	mov	r2, r8
   32ac8:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   32acc:	mov	r7, r0
   32ad0:	cmp	r7, r8
   32ad4:	mov	sl, r8
   32ad8:	beq	32b20 <flatcc_json_parser_union_type_vector@@Base+0x198>
   32adc:	ldrb	r0, [r7]
   32ae0:	cmp	r0, #93	; 0x5d
   32ae4:	bne	32b1c <flatcc_json_parser_union_type_vector@@Base+0x194>
   32ae8:	add	r1, r7, #1
   32aec:	sub	r0, r8, r1
   32af0:	cmp	r0, #2
   32af4:	blt	32f48 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   32af8:	ldrb	r0, [r1]
   32afc:	cmp	r0, #32
   32b00:	bhi	32ec8 <flatcc_json_parser_union_type_vector@@Base+0x540>
   32b04:	bne	32f48 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   32b08:	ldrb	r0, [r7, #2]!
   32b0c:	cmp	r0, #32
   32b10:	mov	r0, r7
   32b14:	bls	32f48 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   32b18:	b	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32b1c:	mov	sl, r7
   32b20:	ldr	r0, [r5]
   32b24:	mov	r1, #1
   32b28:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   32b2c:	cmp	r0, #0
   32b30:	beq	32a10 <flatcc_json_parser_union_type_vector@@Base+0x88>
   32b34:	mov	r1, r0
   32b38:	add	r0, r8, #1
   32b3c:	str	r4, [sp, #16]
   32b40:	str	r0, [sp, #12]
   32b44:	mov	r9, #0
   32b48:	cmp	sl, r8
   32b4c:	mov	r4, r8
   32b50:	str	r1, [sp, #20]
   32b54:	strb	r9, [sp, #27]
   32b58:	beq	32d48 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   32b5c:	mov	r2, sl
   32b60:	mov	r9, #0
   32b64:	ldrb	ip, [r2], #1
   32b68:	cmp	ip, #45	; 0x2d
   32b6c:	movne	r2, sl
   32b70:	cmp	r2, r8
   32b74:	beq	32be0 <flatcc_json_parser_union_type_vector@@Base+0x258>
   32b78:	mov	r7, #0
   32b7c:	mov	r0, #0
   32b80:	mov	r4, #10
   32b84:	ldrb	r1, [r2]
   32b88:	sub	r3, r1, #48	; 0x30
   32b8c:	uxtb	r3, r3
   32b90:	cmp	r3, #9
   32b94:	bhi	32bf4 <flatcc_json_parser_union_type_vector@@Base+0x26c>
   32b98:	add	r3, r0, r0, lsl #2
   32b9c:	lsl	r3, r3, #1
   32ba0:	umlal	r1, r3, r7, r4
   32ba4:	subs	r1, r1, #48	; 0x30
   32ba8:	sbc	r3, r3, #0
   32bac:	subs	r7, r1, r7
   32bb0:	sbcs	r0, r3, r0
   32bb4:	bcc	32c60 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   32bb8:	add	r2, r2, #1
   32bbc:	mov	r7, r1
   32bc0:	mov	r0, r3
   32bc4:	cmp	r8, r2
   32bc8:	bne	32b84 <flatcc_json_parser_union_type_vector@@Base+0x1fc>
   32bcc:	mov	lr, #0
   32bd0:	mov	r2, r8
   32bd4:	mov	r7, r1
   32bd8:	mov	r0, r3
   32bdc:	b	32bf8 <flatcc_json_parser_union_type_vector@@Base+0x270>
   32be0:	mov	r2, r8
   32be4:	mov	r7, #0
   32be8:	mov	r0, #0
   32bec:	mov	lr, #0
   32bf0:	b	32bf8 <flatcc_json_parser_union_type_vector@@Base+0x270>
   32bf4:	mov	lr, #1
   32bf8:	cmp	r2, sl
   32bfc:	mov	r4, sl
   32c00:	beq	32d48 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   32c04:	cmp	lr, #0
   32c08:	beq	32c58 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   32c0c:	ldrb	r1, [r2]
   32c10:	cmp	r1, #46	; 0x2e
   32c14:	beq	32c24 <flatcc_json_parser_union_type_vector@@Base+0x29c>
   32c18:	cmp	r1, #101	; 0x65
   32c1c:	cmpne	r1, #69	; 0x45
   32c20:	bne	32c58 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   32c24:	ldr	r0, [r5, #24]
   32c28:	mov	r7, #0
   32c2c:	mov	r4, r8
   32c30:	cmp	r0, #0
   32c34:	mov	r0, #0
   32c38:	bne	32ca0 <flatcc_json_parser_union_type_vector@@Base+0x318>
   32c3c:	str	r2, [r5, #36]	; 0x24
   32c40:	add	r1, r2, #1
   32c44:	ldr	r0, [r5, #4]
   32c48:	sub	r0, r1, r0
   32c4c:	str	r0, [r5, #20]
   32c50:	mov	r0, #12
   32c54:	b	32c90 <flatcc_json_parser_union_type_vector@@Base+0x308>
   32c58:	mov	r4, r2
   32c5c:	b	32ca0 <flatcc_json_parser_union_type_vector@@Base+0x318>
   32c60:	ldr	r0, [r5, #24]
   32c64:	mov	r7, #0
   32c68:	mov	r4, r8
   32c6c:	cmp	r0, #0
   32c70:	mov	r0, #0
   32c74:	bne	32ca0 <flatcc_json_parser_union_type_vector@@Base+0x318>
   32c78:	str	r2, [r5, #36]	; 0x24
   32c7c:	add	r1, r2, #1
   32c80:	ldr	r0, [r5, #4]
   32c84:	sub	r0, r1, r0
   32c88:	str	r0, [r5, #20]
   32c8c:	mov	r0, #8
   32c90:	str	r0, [r5, #24]
   32c94:	mov	r7, #0
   32c98:	mov	r0, #0
   32c9c:	mov	r4, r8
   32ca0:	mov	r9, #0
   32ca4:	cmp	r4, sl
   32ca8:	beq	32cdc <flatcc_json_parser_union_type_vector@@Base+0x354>
   32cac:	cmp	ip, #45	; 0x2d
   32cb0:	bne	32cec <flatcc_json_parser_union_type_vector@@Base+0x364>
   32cb4:	ldr	r0, [r5, #24]
   32cb8:	cmp	r0, #0
   32cbc:	bne	32d04 <flatcc_json_parser_union_type_vector@@Base+0x37c>
   32cc0:	str	r4, [r5, #36]	; 0x24
   32cc4:	add	r1, r4, #1
   32cc8:	ldr	r0, [r5, #4]
   32ccc:	sub	r0, r1, r0
   32cd0:	str	r0, [r5, #20]
   32cd4:	mov	r0, #8
   32cd8:	b	32d40 <flatcc_json_parser_union_type_vector@@Base+0x3b8>
   32cdc:	mov	r4, sl
   32ce0:	cmp	sl, r4
   32ce4:	bne	32d84 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   32ce8:	b	32d50 <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   32cec:	subs	r1, r7, #256	; 0x100
   32cf0:	sbcs	r0, r0, #0
   32cf4:	bcc	32d14 <flatcc_json_parser_union_type_vector@@Base+0x38c>
   32cf8:	ldr	r0, [r5, #24]
   32cfc:	cmp	r0, #0
   32d00:	beq	32d28 <flatcc_json_parser_union_type_vector@@Base+0x3a0>
   32d04:	mov	r4, r8
   32d08:	cmp	sl, r4
   32d0c:	bne	32d84 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   32d10:	b	32d50 <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   32d14:	mov	r9, r7
   32d18:	strb	r7, [sp, #27]
   32d1c:	cmp	sl, r4
   32d20:	bne	32d84 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   32d24:	b	32d50 <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   32d28:	str	r4, [r5, #36]	; 0x24
   32d2c:	add	r1, r4, #1
   32d30:	ldr	r0, [r5, #4]
   32d34:	sub	r0, r1, r0
   32d38:	str	r0, [r5, #20]
   32d3c:	mov	r0, #7
   32d40:	str	r0, [r5, #24]
   32d44:	mov	r4, r8
   32d48:	cmp	sl, r4
   32d4c:	bne	32d84 <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   32d50:	ldr	r3, [fp, #16]
   32d54:	add	r0, sp, #27
   32d58:	mov	r1, sl
   32d5c:	mov	r2, r8
   32d60:	str	r0, [sp]
   32d64:	mov	r0, r5
   32d68:	bl	32244 <flatcc_json_parser_union_type@@Base+0x384>
   32d6c:	mov	r4, r0
   32d70:	cmp	r0, sl
   32d74:	beq	32f10 <flatcc_json_parser_union_type_vector@@Base+0x588>
   32d78:	cmp	r4, r8
   32d7c:	beq	32f10 <flatcc_json_parser_union_type_vector@@Base+0x588>
   32d80:	ldrb	r9, [sp, #27]
   32d84:	ldr	r1, [fp, #24]
   32d88:	uxtb	r0, r9
   32d8c:	blx	r1
   32d90:	cmp	r0, #0
   32d94:	bne	32dac <flatcc_json_parser_union_type_vector@@Base+0x424>
   32d98:	ldrb	r0, [r5, #8]
   32d9c:	tst	r0, #1
   32da0:	beq	32f18 <flatcc_json_parser_union_type_vector@@Base+0x590>
   32da4:	mov	r9, #0
   32da8:	strb	r9, [sp, #27]
   32dac:	ldr	r0, [sp, #20]
   32db0:	strb	r9, [r0]
   32db4:	sub	r0, r8, r4
   32db8:	cmp	r0, #2
   32dbc:	blt	32df0 <flatcc_json_parser_union_type_vector@@Base+0x468>
   32dc0:	ldrb	r0, [r4]
   32dc4:	cmp	r0, #32
   32dc8:	bls	32ddc <flatcc_json_parser_union_type_vector@@Base+0x454>
   32dcc:	mov	sl, r4
   32dd0:	cmp	sl, r8
   32dd4:	bne	32e0c <flatcc_json_parser_union_type_vector@@Base+0x484>
   32dd8:	b	32e98 <flatcc_json_parser_union_type_vector@@Base+0x510>
   32ddc:	bne	32df0 <flatcc_json_parser_union_type_vector@@Base+0x468>
   32de0:	mov	sl, r4
   32de4:	ldrb	r0, [sl, #1]!
   32de8:	cmp	r0, #32
   32dec:	bhi	32e04 <flatcc_json_parser_union_type_vector@@Base+0x47c>
   32df0:	mov	r0, r5
   32df4:	mov	r1, r4
   32df8:	mov	r2, r8
   32dfc:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   32e00:	mov	sl, r0
   32e04:	cmp	sl, r8
   32e08:	beq	32e98 <flatcc_json_parser_union_type_vector@@Base+0x510>
   32e0c:	ldrb	r0, [sl]
   32e10:	ldr	r4, [sp, #16]
   32e14:	cmp	r0, #44	; 0x2c
   32e18:	bne	32ea4 <flatcc_json_parser_union_type_vector@@Base+0x51c>
   32e1c:	add	r1, sl, #1
   32e20:	sub	r0, r8, r1
   32e24:	cmp	r0, #2
   32e28:	blt	32e58 <flatcc_json_parser_union_type_vector@@Base+0x4d0>
   32e2c:	ldrb	r0, [r1]
   32e30:	cmp	r0, #32
   32e34:	bls	32e48 <flatcc_json_parser_union_type_vector@@Base+0x4c0>
   32e38:	mov	sl, r1
   32e3c:	cmp	sl, r8
   32e40:	bne	32e70 <flatcc_json_parser_union_type_vector@@Base+0x4e8>
   32e44:	b	32ed0 <flatcc_json_parser_union_type_vector@@Base+0x548>
   32e48:	bne	32e58 <flatcc_json_parser_union_type_vector@@Base+0x4d0>
   32e4c:	ldrb	r0, [sl, #2]!
   32e50:	cmp	r0, #32
   32e54:	bhi	32e68 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   32e58:	mov	r0, r5
   32e5c:	mov	r2, r8
   32e60:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   32e64:	mov	sl, r0
   32e68:	cmp	sl, r8
   32e6c:	beq	32ed0 <flatcc_json_parser_union_type_vector@@Base+0x548>
   32e70:	ldrb	r0, [sl]
   32e74:	cmp	r0, #93	; 0x5d
   32e78:	beq	32eac <flatcc_json_parser_union_type_vector@@Base+0x524>
   32e7c:	ldr	r0, [r5]
   32e80:	mov	r1, #1
   32e84:	bl	2ac7c <flatcc_builder_extend_vector@@Base>
   32e88:	mov	r1, r0
   32e8c:	cmp	r0, #0
   32e90:	bne	32b44 <flatcc_json_parser_union_type_vector@@Base+0x1bc>
   32e94:	b	32a10 <flatcc_json_parser_union_type_vector@@Base+0x88>
   32e98:	ldr	r4, [sp, #16]
   32e9c:	mov	r0, r8
   32ea0:	b	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32ea4:	cmp	r0, #93	; 0x5d
   32ea8:	bne	32ef0 <flatcc_json_parser_union_type_vector@@Base+0x568>
   32eac:	add	r1, sl, #1
   32eb0:	sub	r0, r8, r1
   32eb4:	cmp	r0, #2
   32eb8:	blt	32f48 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   32ebc:	ldrb	r0, [r1]
   32ec0:	cmp	r0, #32
   32ec4:	bls	32f34 <flatcc_json_parser_union_type_vector@@Base+0x5ac>
   32ec8:	mov	r0, r1
   32ecc:	b	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32ed0:	ldr	r0, [r5, #24]
   32ed4:	cmp	r0, #0
   32ed8:	mov	r0, r8
   32edc:	bne	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32ee0:	str	r8, [r5, #36]	; 0x24
   32ee4:	ldr	r2, [sp, #12]
   32ee8:	mov	r0, #9
   32eec:	b	32a98 <flatcc_json_parser_union_type_vector@@Base+0x110>
   32ef0:	ldr	r0, [r5, #24]
   32ef4:	cmp	r0, #0
   32ef8:	mov	r0, r8
   32efc:	bne	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32f00:	str	sl, [r5, #36]	; 0x24
   32f04:	mov	r0, #9
   32f08:	add	r2, sl, #1
   32f0c:	b	32a98 <flatcc_json_parser_union_type_vector@@Base+0x110>
   32f10:	mov	sl, r4
   32f14:	b	32a10 <flatcc_json_parser_union_type_vector@@Base+0x88>
   32f18:	ldr	r0, [r5, #24]
   32f1c:	cmp	r0, #0
   32f20:	bne	32a38 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   32f24:	str	r4, [r5, #36]	; 0x24
   32f28:	mov	r0, #15
   32f2c:	add	r2, r4, #1
   32f30:	b	32a28 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   32f34:	bne	32f48 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   32f38:	ldrb	r0, [sl, #2]!
   32f3c:	cmp	r0, #32
   32f40:	mov	r0, sl
   32f44:	bhi	32f54 <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   32f48:	mov	r0, r5
   32f4c:	mov	r2, r8
   32f50:	bl	2f130 <flatcc_json_parser_space_ext@@Base>
   32f54:	mov	sl, r0
   32f58:	ldr	r0, [r5]
   32f5c:	bl	2cbbc <flatcc_builder_vector_count@@Base>
   32f60:	str	r0, [r4, #16]
   32f64:	mov	r7, r0
   32f68:	ldr	r0, [r5]
   32f6c:	mov	r1, r7
   32f70:	bl	29f40 <flatcc_builder_enter_user_frame@@Base>
   32f74:	mov	r9, r0
   32f78:	ldr	r0, [r5]
   32f7c:	mov	r1, r9
   32f80:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   32f84:	mov	r4, r0
   32f88:	ldr	r0, [r5]
   32f8c:	bl	2cbc8 <flatcc_builder_vector_edit@@Base>
   32f90:	mov	r1, r0
   32f94:	mov	r0, r4
   32f98:	mov	r2, r7
   32f9c:	bl	12aa8 <memcpy@plt>
   32fa0:	ldr	r0, [r5]
   32fa4:	bl	2cac0 <flatcc_builder_end_vector@@Base>
   32fa8:	cmp	r0, #0
   32fac:	beq	32a10 <flatcc_json_parser_union_type_vector@@Base+0x88>
   32fb0:	ldr	r1, [fp, #8]
   32fb4:	mov	r4, r0
   32fb8:	ldr	r0, [r5]
   32fbc:	sub	r1, r1, #1
   32fc0:	bl	2d03c <flatcc_builder_table_add_offset@@Base>
   32fc4:	cmp	r0, #0
   32fc8:	beq	32a10 <flatcc_json_parser_union_type_vector@@Base+0x88>
   32fcc:	str	r4, [r0]
   32fd0:	ldr	r1, [fp, #12]
   32fd4:	ldr	r0, [r5]
   32fd8:	bl	2a100 <flatcc_builder_get_user_frame_ptr@@Base>
   32fdc:	add	r2, r0, #8
   32fe0:	mov	r3, r2
   32fe4:	ldr	r1, [r3, r6, lsl #3]!
   32fe8:	str	r9, [r3, #20]
   32fec:	cmp	r1, #0
   32ff0:	ldr	r3, [r0, #4]
   32ff4:	beq	33058 <flatcc_json_parser_union_type_vector@@Base+0x6d0>
   32ff8:	cmp	r3, #0
   32ffc:	beq	33068 <flatcc_json_parser_union_type_vector@@Base+0x6e0>
   33000:	sub	r3, r3, #1
   33004:	ldr	ip, [fp, #20]
   33008:	str	r3, [r0, #4]
   3300c:	add	r0, r2, r6, lsl #3
   33010:	mov	r3, r9
   33014:	ldr	r2, [r0, #8]
   33018:	ldr	r6, [r5, #4]
   3301c:	ldr	r4, [r5, #16]
   33020:	str	r2, [r5, #16]
   33024:	mov	r2, r8
   33028:	ldr	r0, [r0, #4]
   3302c:	str	r0, [r5, #4]
   33030:	ldr	r0, [fp, #8]
   33034:	str	r7, [sp]
   33038:	stmib	sp, {r0, ip}
   3303c:	mov	r0, r5
   33040:	bl	32588 <flatcc_json_parser_union_vector@@Base+0xf4>
   33044:	cmp	r0, r8
   33048:	beq	32a38 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3304c:	str	r6, [r5, #4]
   33050:	str	r4, [r5, #16]
   33054:	b	33060 <flatcc_json_parser_union_type_vector@@Base+0x6d8>
   33058:	add	r1, r3, #1
   3305c:	str	r1, [r0, #4]
   33060:	mov	r8, sl
   33064:	b	32a38 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   33068:	ldr	r0, [pc, #24]	; 33088 <flatcc_json_parser_union_type_vector@@Base+0x700>
   3306c:	ldr	r1, [pc, #24]	; 3308c <flatcc_json_parser_union_type_vector@@Base+0x704>
   33070:	ldr	r3, [pc, #24]	; 33090 <flatcc_json_parser_union_type_vector@@Base+0x708>
   33074:	movw	r2, #1122	; 0x462
   33078:	add	r0, pc, r0
   3307c:	add	r1, pc, r1
   33080:	add	r3, pc, r3
   33084:	bl	12bbc <__assert_fail@plt>
   33088:	ldrdeq	r2, [r0], -r0
   3308c:	ldrdeq	r2, [r0], -fp
   33090:	andeq	r2, r0, r4, lsl #24

00033094 <flatcc_json_parser_table_as_root@@Base>:
   33094:	push	{r4, r5, r6, r7, fp, lr}
   33098:	add	fp, sp, #16
   3309c:	sub	sp, sp, #48	; 0x30
   330a0:	add	r5, sp, #4
   330a4:	cmp	r1, #0
   330a8:	mov	r6, r0
   330ac:	vmov.i32	q8, #0	; 0x00000000
   330b0:	add	r7, r2, r3
   330b4:	mov	r4, r2
   330b8:	movne	r5, r1
   330bc:	mov	r1, #1
   330c0:	add	r0, r5, #12
   330c4:	vst1.32	{d16-d17}, [r0]
   330c8:	add	r0, r5, #28
   330cc:	vst1.32	{d16-d17}, [r0]
   330d0:	ldr	r0, [fp, #8]
   330d4:	str	r6, [r5]
   330d8:	str	r2, [r5, #4]
   330dc:	str	r0, [r5, #8]
   330e0:	str	r1, [r5, #16]
   330e4:	mov	r1, #2
   330e8:	str	r2, [r5, #28]
   330ec:	str	r7, [r5, #32]
   330f0:	str	r2, [r5, #36]	; 0x24
   330f4:	mov	r2, #0
   330f8:	and	r3, r1, r0, lsr #1
   330fc:	ldr	r1, [fp, #12]
   33100:	mov	r0, r6
   33104:	bl	2a774 <flatcc_builder_start_buffer@@Base>
   33108:	mov	r1, r0
   3310c:	mvn	r0, #0
   33110:	cmp	r1, #0
   33114:	bne	3313c <flatcc_json_parser_table_as_root@@Base+0xa8>
   33118:	ldr	ip, [fp, #16]
   3311c:	mov	r3, sp
   33120:	mov	r0, r5
   33124:	mov	r1, r4
   33128:	mov	r2, r7
   3312c:	blx	ip
   33130:	ldr	r0, [r5, #24]
   33134:	cmp	r0, #0
   33138:	beq	33144 <flatcc_json_parser_table_as_root@@Base+0xb0>
   3313c:	sub	sp, fp, #16
   33140:	pop	{r4, r5, r6, r7, fp, pc}
   33144:	ldr	r1, [sp]
   33148:	mov	r0, r6
   3314c:	bl	2a974 <flatcc_builder_end_buffer@@Base>
   33150:	cmp	r0, #0
   33154:	mvn	r0, #0
   33158:	movne	r0, #0
   3315c:	strne	r4, [r5, #40]	; 0x28
   33160:	sub	sp, fp, #16
   33164:	pop	{r4, r5, r6, r7, fp, pc}

00033168 <flatcc_json_parser_struct_as_root@@Base>:
   33168:	push	{r4, r5, r6, r7, fp, lr}
   3316c:	add	fp, sp, #16
   33170:	sub	sp, sp, #48	; 0x30
   33174:	add	r5, sp, #4
   33178:	cmp	r1, #0
   3317c:	mov	r6, r0
   33180:	vmov.i32	q8, #0	; 0x00000000
   33184:	add	r7, r2, r3
   33188:	mov	r4, r2
   3318c:	movne	r5, r1
   33190:	mov	r1, #1
   33194:	add	r0, r5, #12
   33198:	vst1.32	{d16-d17}, [r0]
   3319c:	add	r0, r5, #28
   331a0:	vst1.32	{d16-d17}, [r0]
   331a4:	ldr	r0, [fp, #8]
   331a8:	str	r6, [r5]
   331ac:	str	r2, [r5, #4]
   331b0:	str	r0, [r5, #8]
   331b4:	str	r1, [r5, #16]
   331b8:	mov	r1, #2
   331bc:	str	r2, [r5, #28]
   331c0:	str	r7, [r5, #32]
   331c4:	str	r2, [r5, #36]	; 0x24
   331c8:	mov	r2, #0
   331cc:	and	r3, r1, r0, lsr #1
   331d0:	ldr	r1, [fp, #12]
   331d4:	mov	r0, r6
   331d8:	bl	2a774 <flatcc_builder_start_buffer@@Base>
   331dc:	mov	r1, r0
   331e0:	mvn	r0, #0
   331e4:	cmp	r1, #0
   331e8:	bne	33210 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   331ec:	ldr	ip, [fp, #16]
   331f0:	mov	r3, sp
   331f4:	mov	r0, r5
   331f8:	mov	r1, r4
   331fc:	mov	r2, r7
   33200:	blx	ip
   33204:	ldr	r0, [r5, #24]
   33208:	cmp	r0, #0
   3320c:	beq	33218 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   33210:	sub	sp, fp, #16
   33214:	pop	{r4, r5, r6, r7, fp, pc}
   33218:	ldr	r1, [sp]
   3321c:	mov	r0, r6
   33220:	bl	2a974 <flatcc_builder_end_buffer@@Base>
   33224:	cmp	r0, #0
   33228:	mvn	r0, #0
   3322c:	movne	r0, #0
   33230:	strne	r4, [r5, #40]	; 0x28
   33234:	sub	sp, fp, #16
   33238:	pop	{r4, r5, r6, r7, fp, pc}
   3323c:	eor	r1, r1, #-2147483648	; 0x80000000
   33240:	b	33248 <flatcc_json_parser_struct_as_root@@Base+0xe0>
   33244:	eor	r3, r3, #-2147483648	; 0x80000000
   33248:	push	{r4, r5, lr}
   3324c:	lsl	r4, r1, #1
   33250:	lsl	r5, r3, #1
   33254:	teq	r4, r5
   33258:	teqeq	r0, r2
   3325c:	orrsne	ip, r4, r0
   33260:	orrsne	ip, r5, r2
   33264:	mvnsne	ip, r4, asr #21
   33268:	mvnsne	ip, r5, asr #21
   3326c:	beq	33458 <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   33270:	lsr	r4, r4, #21
   33274:	rsbs	r5, r4, r5, lsr #21
   33278:	rsblt	r5, r5, #0
   3327c:	ble	3329c <flatcc_json_parser_struct_as_root@@Base+0x134>
   33280:	add	r4, r4, r5
   33284:	eor	r2, r0, r2
   33288:	eor	r3, r1, r3
   3328c:	eor	r0, r2, r0
   33290:	eor	r1, r3, r1
   33294:	eor	r2, r0, r2
   33298:	eor	r3, r1, r3
   3329c:	cmp	r5, #54	; 0x36
   332a0:	pophi	{r4, r5, pc}
   332a4:	tst	r1, #-2147483648	; 0x80000000
   332a8:	lsl	r1, r1, #12
   332ac:	mov	ip, #1048576	; 0x100000
   332b0:	orr	r1, ip, r1, lsr #12
   332b4:	beq	332c0 <flatcc_json_parser_struct_as_root@@Base+0x158>
   332b8:	rsbs	r0, r0, #0
   332bc:	rsc	r1, r1, #0
   332c0:	tst	r3, #-2147483648	; 0x80000000
   332c4:	lsl	r3, r3, #12
   332c8:	orr	r3, ip, r3, lsr #12
   332cc:	beq	332d8 <flatcc_json_parser_struct_as_root@@Base+0x170>
   332d0:	rsbs	r2, r2, #0
   332d4:	rsc	r3, r3, #0
   332d8:	teq	r4, r5
   332dc:	beq	33440 <flatcc_json_parser_struct_as_root@@Base+0x2d8>
   332e0:	sub	r4, r4, #1
   332e4:	rsbs	lr, r5, #32
   332e8:	blt	33304 <flatcc_json_parser_struct_as_root@@Base+0x19c>
   332ec:	lsl	ip, r2, lr
   332f0:	adds	r0, r0, r2, lsr r5
   332f4:	adc	r1, r1, #0
   332f8:	adds	r0, r0, r3, lsl lr
   332fc:	adcs	r1, r1, r3, asr r5
   33300:	b	33320 <flatcc_json_parser_struct_as_root@@Base+0x1b8>
   33304:	sub	r5, r5, #32
   33308:	add	lr, lr, #32
   3330c:	cmp	r2, #1
   33310:	lsl	ip, r3, lr
   33314:	orrcs	ip, ip, #2
   33318:	adds	r0, r0, r3, asr r5
   3331c:	adcs	r1, r1, r3, asr #31
   33320:	and	r5, r1, #-2147483648	; 0x80000000
   33324:	bpl	33334 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   33328:	rsbs	ip, ip, #0
   3332c:	rscs	r0, r0, #0
   33330:	rsc	r1, r1, #0
   33334:	cmp	r1, #1048576	; 0x100000
   33338:	bcc	33378 <flatcc_json_parser_struct_as_root@@Base+0x210>
   3333c:	cmp	r1, #2097152	; 0x200000
   33340:	bcc	33360 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   33344:	lsrs	r1, r1, #1
   33348:	rrxs	r0, r0
   3334c:	rrx	ip, ip
   33350:	add	r4, r4, #1
   33354:	lsl	r2, r4, #21
   33358:	cmn	r2, #4194304	; 0x400000
   3335c:	bcs	334b8 <flatcc_json_parser_struct_as_root@@Base+0x350>
   33360:	cmp	ip, #-2147483648	; 0x80000000
   33364:	lsrseq	ip, r0, #1
   33368:	adcs	r0, r0, #0
   3336c:	adc	r1, r1, r4, lsl #20
   33370:	orr	r1, r1, r5
   33374:	pop	{r4, r5, pc}
   33378:	lsls	ip, ip, #1
   3337c:	adcs	r0, r0, r0
   33380:	adc	r1, r1, r1
   33384:	tst	r1, #1048576	; 0x100000
   33388:	sub	r4, r4, #1
   3338c:	bne	33360 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   33390:	teq	r1, #0
   33394:	moveq	r1, r0
   33398:	moveq	r0, #0
   3339c:	clz	r3, r1
   333a0:	addeq	r3, r3, #32
   333a4:	sub	r3, r3, #11
   333a8:	subs	r2, r3, #32
   333ac:	bge	333d0 <flatcc_json_parser_struct_as_root@@Base+0x268>
   333b0:	adds	r2, r2, #12
   333b4:	ble	333cc <flatcc_json_parser_struct_as_root@@Base+0x264>
   333b8:	add	ip, r2, #20
   333bc:	rsb	r2, r2, #12
   333c0:	lsl	r0, r1, ip
   333c4:	lsr	r1, r1, r2
   333c8:	b	333e0 <flatcc_json_parser_struct_as_root@@Base+0x278>
   333cc:	add	r2, r2, #20
   333d0:	rsble	ip, r2, #32
   333d4:	lsl	r1, r1, r2
   333d8:	orrle	r1, r1, r0, lsr ip
   333dc:	lslle	r0, r0, r2
   333e0:	subs	r4, r4, r3
   333e4:	addge	r1, r1, r4, lsl #20
   333e8:	orrge	r1, r1, r5
   333ec:	popge	{r4, r5, pc}
   333f0:	mvn	r4, r4
   333f4:	subs	r4, r4, #31
   333f8:	bge	33434 <flatcc_json_parser_struct_as_root@@Base+0x2cc>
   333fc:	adds	r4, r4, #12
   33400:	bgt	3341c <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   33404:	add	r4, r4, #20
   33408:	rsb	r2, r4, #32
   3340c:	lsr	r0, r0, r4
   33410:	orr	r0, r0, r1, lsl r2
   33414:	orr	r1, r5, r1, lsr r4
   33418:	pop	{r4, r5, pc}
   3341c:	rsb	r4, r4, #12
   33420:	rsb	r2, r4, #32
   33424:	lsr	r0, r0, r2
   33428:	orr	r0, r0, r1, lsl r4
   3342c:	mov	r1, r5
   33430:	pop	{r4, r5, pc}
   33434:	lsr	r0, r1, r4
   33438:	mov	r1, r5
   3343c:	pop	{r4, r5, pc}
   33440:	teq	r4, #0
   33444:	eor	r3, r3, #1048576	; 0x100000
   33448:	eoreq	r1, r1, #1048576	; 0x100000
   3344c:	addeq	r4, r4, #1
   33450:	subne	r5, r5, #1
   33454:	b	332e0 <flatcc_json_parser_struct_as_root@@Base+0x178>
   33458:	mvns	ip, r4, asr #21
   3345c:	mvnsne	ip, r5, asr #21
   33460:	beq	334c8 <flatcc_json_parser_struct_as_root@@Base+0x360>
   33464:	teq	r4, r5
   33468:	teqeq	r0, r2
   3346c:	beq	33480 <flatcc_json_parser_struct_as_root@@Base+0x318>
   33470:	orrs	ip, r4, r0
   33474:	moveq	r1, r3
   33478:	moveq	r0, r2
   3347c:	pop	{r4, r5, pc}
   33480:	teq	r1, r3
   33484:	movne	r1, #0
   33488:	movne	r0, #0
   3348c:	popne	{r4, r5, pc}
   33490:	lsrs	ip, r4, #21
   33494:	bne	334a8 <flatcc_json_parser_struct_as_root@@Base+0x340>
   33498:	lsls	r0, r0, #1
   3349c:	adcs	r1, r1, r1
   334a0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   334a4:	pop	{r4, r5, pc}
   334a8:	adds	r4, r4, #4194304	; 0x400000
   334ac:	addcc	r1, r1, #1048576	; 0x100000
   334b0:	popcc	{r4, r5, pc}
   334b4:	and	r5, r1, #-2147483648	; 0x80000000
   334b8:	orr	r1, r5, #2130706432	; 0x7f000000
   334bc:	orr	r1, r1, #15728640	; 0xf00000
   334c0:	mov	r0, #0
   334c4:	pop	{r4, r5, pc}
   334c8:	mvns	ip, r4, asr #21
   334cc:	movne	r1, r3
   334d0:	movne	r0, r2
   334d4:	mvnseq	ip, r5, asr #21
   334d8:	movne	r3, r1
   334dc:	movne	r2, r0
   334e0:	orrs	r4, r0, r1, lsl #12
   334e4:	orrseq	r5, r2, r3, lsl #12
   334e8:	teqeq	r1, r3
   334ec:	orrne	r1, r1, #524288	; 0x80000
   334f0:	pop	{r4, r5, pc}
   334f4:	teq	r0, #0
   334f8:	moveq	r1, #0
   334fc:	bxeq	lr
   33500:	push	{r4, r5, lr}
   33504:	mov	r4, #1024	; 0x400
   33508:	add	r4, r4, #50	; 0x32
   3350c:	mov	r5, #0
   33510:	mov	r1, #0
   33514:	b	33390 <flatcc_json_parser_struct_as_root@@Base+0x228>
   33518:	teq	r0, #0
   3351c:	moveq	r1, #0
   33520:	bxeq	lr
   33524:	push	{r4, r5, lr}
   33528:	mov	r4, #1024	; 0x400
   3352c:	add	r4, r4, #50	; 0x32
   33530:	ands	r5, r0, #-2147483648	; 0x80000000
   33534:	rsbmi	r0, r0, #0
   33538:	mov	r1, #0
   3353c:	b	33390 <flatcc_json_parser_struct_as_root@@Base+0x228>
   33540:	lsls	r2, r0, #1
   33544:	asr	r1, r2, #3
   33548:	rrx	r1, r1
   3354c:	lsl	r0, r2, #28
   33550:	andsne	r3, r2, #-16777216	; 0xff000000
   33554:	teqne	r3, #-16777216	; 0xff000000
   33558:	eorne	r1, r1, #939524096	; 0x38000000
   3355c:	bxne	lr
   33560:	bics	r2, r2, #-16777216	; 0xff000000
   33564:	bxeq	lr
   33568:	teq	r3, #-16777216	; 0xff000000
   3356c:	orreq	r1, r1, #524288	; 0x80000
   33570:	bxeq	lr
   33574:	push	{r4, r5, lr}
   33578:	mov	r4, #896	; 0x380
   3357c:	and	r5, r1, #-2147483648	; 0x80000000
   33580:	bic	r1, r1, #-2147483648	; 0x80000000
   33584:	b	33390 <flatcc_json_parser_struct_as_root@@Base+0x228>
   33588:	orrs	r2, r0, r1
   3358c:	bxeq	lr
   33590:	push	{r4, r5, lr}
   33594:	mov	r5, #0
   33598:	b	335b8 <flatcc_json_parser_struct_as_root@@Base+0x450>
   3359c:	orrs	r2, r0, r1
   335a0:	bxeq	lr
   335a4:	push	{r4, r5, lr}
   335a8:	ands	r5, r1, #-2147483648	; 0x80000000
   335ac:	bpl	335b8 <flatcc_json_parser_struct_as_root@@Base+0x450>
   335b0:	rsbs	r0, r0, #0
   335b4:	rsc	r1, r1, #0
   335b8:	mov	r4, #1024	; 0x400
   335bc:	add	r4, r4, #50	; 0x32
   335c0:	lsrs	ip, r1, #22
   335c4:	beq	33334 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   335c8:	mov	r2, #3
   335cc:	lsrs	ip, ip, #3
   335d0:	addne	r2, r2, #3
   335d4:	lsrs	ip, ip, #3
   335d8:	addne	r2, r2, #3
   335dc:	add	r2, r2, ip, lsr #3
   335e0:	rsb	r3, r2, #32
   335e4:	lsl	ip, r0, r3
   335e8:	lsr	r0, r0, r2
   335ec:	orr	r0, r0, r1, lsl r3
   335f0:	lsr	r1, r1, r2
   335f4:	add	r4, r4, r2
   335f8:	b	33334 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   335fc:	eor	r0, r0, #-2147483648	; 0x80000000
   33600:	b	33608 <flatcc_json_parser_struct_as_root@@Base+0x4a0>
   33604:	eor	r1, r1, #-2147483648	; 0x80000000
   33608:	lsls	r2, r0, #1
   3360c:	lslsne	r3, r1, #1
   33610:	teqne	r2, r3
   33614:	mvnsne	ip, r2, asr #24
   33618:	mvnsne	ip, r3, asr #24
   3361c:	beq	33714 <flatcc_json_parser_struct_as_root@@Base+0x5ac>
   33620:	lsr	r2, r2, #24
   33624:	rsbs	r3, r2, r3, lsr #24
   33628:	addgt	r2, r2, r3
   3362c:	eorgt	r1, r0, r1
   33630:	eorgt	r0, r1, r0
   33634:	eorgt	r1, r0, r1
   33638:	rsblt	r3, r3, #0
   3363c:	cmp	r3, #25
   33640:	bxhi	lr
   33644:	tst	r0, #-2147483648	; 0x80000000
   33648:	orr	r0, r0, #8388608	; 0x800000
   3364c:	bic	r0, r0, #-16777216	; 0xff000000
   33650:	rsbne	r0, r0, #0
   33654:	tst	r1, #-2147483648	; 0x80000000
   33658:	orr	r1, r1, #8388608	; 0x800000
   3365c:	bic	r1, r1, #-16777216	; 0xff000000
   33660:	rsbne	r1, r1, #0
   33664:	teq	r2, r3
   33668:	beq	336fc <flatcc_json_parser_struct_as_root@@Base+0x594>
   3366c:	sub	r2, r2, #1
   33670:	adds	r0, r0, r1, asr r3
   33674:	rsb	r3, r3, #32
   33678:	lsl	r1, r1, r3
   3367c:	and	r3, r0, #-2147483648	; 0x80000000
   33680:	bpl	3368c <flatcc_json_parser_struct_as_root@@Base+0x524>
   33684:	rsbs	r1, r1, #0
   33688:	rsc	r0, r0, #0
   3368c:	cmp	r0, #8388608	; 0x800000
   33690:	bcc	336c4 <flatcc_json_parser_struct_as_root@@Base+0x55c>
   33694:	cmp	r0, #16777216	; 0x1000000
   33698:	bcc	336b0 <flatcc_json_parser_struct_as_root@@Base+0x548>
   3369c:	lsrs	r0, r0, #1
   336a0:	rrx	r1, r1
   336a4:	add	r2, r2, #1
   336a8:	cmp	r2, #254	; 0xfe
   336ac:	bcs	33768 <flatcc_json_parser_struct_as_root@@Base+0x600>
   336b0:	cmp	r1, #-2147483648	; 0x80000000
   336b4:	adc	r0, r0, r2, lsl #23
   336b8:	biceq	r0, r0, #1
   336bc:	orr	r0, r0, r3
   336c0:	bx	lr
   336c4:	lsls	r1, r1, #1
   336c8:	adc	r0, r0, r0
   336cc:	tst	r0, #8388608	; 0x800000
   336d0:	sub	r2, r2, #1
   336d4:	bne	336b0 <flatcc_json_parser_struct_as_root@@Base+0x548>
   336d8:	clz	ip, r0
   336dc:	sub	ip, ip, #8
   336e0:	subs	r2, r2, ip
   336e4:	lsl	r0, r0, ip
   336e8:	addge	r0, r0, r2, lsl #23
   336ec:	rsblt	r2, r2, #0
   336f0:	orrge	r0, r0, r3
   336f4:	orrlt	r0, r3, r0, lsr r2
   336f8:	bx	lr
   336fc:	teq	r2, #0
   33700:	eor	r1, r1, #8388608	; 0x800000
   33704:	eoreq	r0, r0, #8388608	; 0x800000
   33708:	addeq	r2, r2, #1
   3370c:	subne	r3, r3, #1
   33710:	b	3366c <flatcc_json_parser_struct_as_root@@Base+0x504>
   33714:	lsl	r3, r1, #1
   33718:	mvns	ip, r2, asr #24
   3371c:	mvnsne	ip, r3, asr #24
   33720:	beq	33774 <flatcc_json_parser_struct_as_root@@Base+0x60c>
   33724:	teq	r2, r3
   33728:	beq	33738 <flatcc_json_parser_struct_as_root@@Base+0x5d0>
   3372c:	teq	r2, #0
   33730:	moveq	r0, r1
   33734:	bx	lr
   33738:	teq	r0, r1
   3373c:	movne	r0, #0
   33740:	bxne	lr
   33744:	tst	r2, #-16777216	; 0xff000000
   33748:	bne	33758 <flatcc_json_parser_struct_as_root@@Base+0x5f0>
   3374c:	lsls	r0, r0, #1
   33750:	orrcs	r0, r0, #-2147483648	; 0x80000000
   33754:	bx	lr
   33758:	adds	r2, r2, #33554432	; 0x2000000
   3375c:	addcc	r0, r0, #8388608	; 0x800000
   33760:	bxcc	lr
   33764:	and	r3, r0, #-2147483648	; 0x80000000
   33768:	orr	r0, r3, #2130706432	; 0x7f000000
   3376c:	orr	r0, r0, #8388608	; 0x800000
   33770:	bx	lr
   33774:	mvns	r2, r2, asr #24
   33778:	movne	r0, r1
   3377c:	mvnseq	r3, r3, asr #24
   33780:	movne	r1, r0
   33784:	lsls	r2, r0, #9
   33788:	lslseq	r3, r1, #9
   3378c:	teqeq	r0, r1
   33790:	orrne	r0, r0, #4194304	; 0x400000
   33794:	bx	lr
   33798:	mov	r3, #0
   3379c:	b	337a8 <flatcc_json_parser_struct_as_root@@Base+0x640>
   337a0:	ands	r3, r0, #-2147483648	; 0x80000000
   337a4:	rsbmi	r0, r0, #0
   337a8:	movs	ip, r0
   337ac:	bxeq	lr
   337b0:	orr	r3, r3, #1258291200	; 0x4b000000
   337b4:	mov	r1, r0
   337b8:	mov	r0, #0
   337bc:	b	33800 <flatcc_json_parser_struct_as_root@@Base+0x698>
   337c0:	orrs	r2, r0, r1
   337c4:	bxeq	lr
   337c8:	mov	r3, #0
   337cc:	b	337e8 <flatcc_json_parser_struct_as_root@@Base+0x680>
   337d0:	orrs	r2, r0, r1
   337d4:	bxeq	lr
   337d8:	ands	r3, r1, #-2147483648	; 0x80000000
   337dc:	bpl	337e8 <flatcc_json_parser_struct_as_root@@Base+0x680>
   337e0:	rsbs	r0, r0, #0
   337e4:	rsc	r1, r1, #0
   337e8:	movs	ip, r1
   337ec:	moveq	ip, r0
   337f0:	moveq	r1, r0
   337f4:	moveq	r0, #0
   337f8:	orr	r3, r3, #1526726656	; 0x5b000000
   337fc:	subeq	r3, r3, #268435456	; 0x10000000
   33800:	sub	r3, r3, #8388608	; 0x800000
   33804:	clz	r2, ip
   33808:	subs	r2, r2, #8
   3380c:	sub	r3, r3, r2, lsl #23
   33810:	blt	33830 <flatcc_json_parser_struct_as_root@@Base+0x6c8>
   33814:	add	r3, r3, r1, lsl r2
   33818:	lsl	ip, r0, r2
   3381c:	rsb	r2, r2, #32
   33820:	cmp	ip, #-2147483648	; 0x80000000
   33824:	adc	r0, r3, r0, lsr r2
   33828:	biceq	r0, r0, #1
   3382c:	bx	lr
   33830:	add	r2, r2, #32
   33834:	lsl	ip, r1, r2
   33838:	rsb	r2, r2, #32
   3383c:	orrs	r0, r0, ip, lsl #1
   33840:	adc	r0, r3, r1, lsr r2
   33844:	biceq	r0, r0, ip, lsr #31
   33848:	bx	lr

0003384c <__libc_csu_init@@Base>:
   3384c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33850:	mov	r7, r0
   33854:	ldr	r6, [pc, #72]	; 338a4 <__libc_csu_init@@Base+0x58>
   33858:	ldr	r5, [pc, #72]	; 338a8 <__libc_csu_init@@Base+0x5c>
   3385c:	add	r6, pc, r6
   33860:	add	r5, pc, r5
   33864:	sub	r6, r6, r5
   33868:	mov	r8, r1
   3386c:	mov	r9, r2
   33870:	bl	12a70 <fopen@plt-0x20>
   33874:	asrs	r6, r6, #2
   33878:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3387c:	mov	r4, #0
   33880:	add	r4, r4, #1
   33884:	ldr	r3, [r5], #4
   33888:	mov	r2, r9
   3388c:	mov	r1, r8
   33890:	mov	r0, r7
   33894:	blx	r3
   33898:	cmp	r6, r4
   3389c:	bne	33880 <__libc_csu_init@@Base+0x34>
   338a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   338a4:	andeq	r3, r1, r8, lsl r6
   338a8:	andeq	r3, r1, r0, lsl r6

000338ac <__libc_csu_fini@@Base>:
   338ac:	bx	lr

Disassembly of section .fini:

000338b0 <.fini>:
   338b0:	push	{r3, lr}
   338b4:	pop	{r3, pc}
