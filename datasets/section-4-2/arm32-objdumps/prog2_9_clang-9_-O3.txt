
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010b04 <.init>:
   10b04:	push	{r3, lr}
   10b08:	bl	10c38 <_start@@Base+0x3c>
   10b0c:	pop	{r3, pc}

Disassembly of section .plt:

00010b10 <calloc@plt-0x14>:
   10b10:	push	{lr}		; (str lr, [sp, #-4]!)
   10b14:	ldr	lr, [pc, #4]	; 10b20 <calloc@plt-0x4>
   10b18:	add	lr, pc, lr
   10b1c:	ldr	pc, [lr, #8]!
   10b20:	andeq	r2, r1, r0, ror #9

00010b24 <calloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b30 <strcmp@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b3c <printf@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b48 <__isoc99_fscanf@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b54 <fopen@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b60 <fflush@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b6c <free@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #73728	; 0x12000
   10b74:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b78 <fgets@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #73728	; 0x12000
   10b80:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b84 <strdup@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #73728	; 0x12000
   10b8c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b90 <puts@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #73728	; 0x12000
   10b98:	ldr	pc, [ip, #1176]!	; 0x498

00010b9c <malloc@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #73728	; 0x12000
   10ba4:	ldr	pc, [ip, #1168]!	; 0x490

00010ba8 <__libc_start_main@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #73728	; 0x12000
   10bb0:	ldr	pc, [ip, #1160]!	; 0x488

00010bb4 <__gmon_start__@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #73728	; 0x12000
   10bbc:	ldr	pc, [ip, #1152]!	; 0x480

00010bc0 <feof@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #73728	; 0x12000
   10bc8:	ldr	pc, [ip, #1144]!	; 0x478

00010bcc <strlen@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #73728	; 0x12000
   10bd4:	ldr	pc, [ip, #1136]!	; 0x470

00010bd8 <putchar@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #73728	; 0x12000
   10be0:	ldr	pc, [ip, #1128]!	; 0x468

00010be4 <fclose@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #73728	; 0x12000
   10bec:	ldr	pc, [ip, #1120]!	; 0x460

00010bf0 <abort@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #73728	; 0x12000
   10bf8:	ldr	pc, [ip, #1112]!	; 0x458

Disassembly of section .text:

00010bfc <_start@@Base>:
   10bfc:	mov	fp, #0
   10c00:	mov	lr, #0
   10c04:	pop	{r1}		; (ldr r1, [sp], #4)
   10c08:	mov	r2, sp
   10c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c10:	push	{r0}		; (str r0, [sp, #-4]!)
   10c14:	ldr	ip, [pc, #16]	; 10c2c <_start@@Base+0x30>
   10c18:	push	{ip}		; (str ip, [sp, #-4]!)
   10c1c:	ldr	r0, [pc, #12]	; 10c30 <_start@@Base+0x34>
   10c20:	ldr	r3, [pc, #12]	; 10c34 <_start@@Base+0x38>
   10c24:	bl	10ba8 <__libc_start_main@plt>
   10c28:	bl	10bf0 <abort@plt>
   10c2c:	andeq	r2, r1, r8, lsl r3
   10c30:	andeq	r1, r1, r4, asr r2
   10c34:			; <UNDEFINED> instruction: 0x000122b8
   10c38:	ldr	r3, [pc, #20]	; 10c54 <_start@@Base+0x58>
   10c3c:	ldr	r2, [pc, #20]	; 10c58 <_start@@Base+0x5c>
   10c40:	add	r3, pc, r3
   10c44:	ldr	r2, [r3, r2]
   10c48:	cmp	r2, #0
   10c4c:	bxeq	lr
   10c50:	b	10bb4 <__gmon_start__@plt>
   10c54:			; <UNDEFINED> instruction: 0x000123b8
   10c58:	andeq	r0, r0, r4, asr r0
   10c5c:	ldr	r0, [pc, #24]	; 10c7c <_start@@Base+0x80>
   10c60:	ldr	r3, [pc, #24]	; 10c80 <_start@@Base+0x84>
   10c64:	cmp	r3, r0
   10c68:	bxeq	lr
   10c6c:	ldr	r3, [pc, #16]	; 10c84 <_start@@Base+0x88>
   10c70:	cmp	r3, #0
   10c74:	bxeq	lr
   10c78:	bx	r3
   10c7c:	andeq	r3, r2, r0, rrx
   10c80:	andeq	r3, r2, r0, rrx
   10c84:	andeq	r0, r0, r0
   10c88:	ldr	r0, [pc, #36]	; 10cb4 <_start@@Base+0xb8>
   10c8c:	ldr	r1, [pc, #36]	; 10cb8 <_start@@Base+0xbc>
   10c90:	sub	r1, r1, r0
   10c94:	asr	r1, r1, #2
   10c98:	add	r1, r1, r1, lsr #31
   10c9c:	asrs	r1, r1, #1
   10ca0:	bxeq	lr
   10ca4:	ldr	r3, [pc, #16]	; 10cbc <_start@@Base+0xc0>
   10ca8:	cmp	r3, #0
   10cac:	bxeq	lr
   10cb0:	bx	r3
   10cb4:	andeq	r3, r2, r0, rrx
   10cb8:	andeq	r3, r2, r0, rrx
   10cbc:	andeq	r0, r0, r0
   10cc0:	push	{r4, lr}
   10cc4:	ldr	r4, [pc, #24]	; 10ce4 <_start@@Base+0xe8>
   10cc8:	ldrb	r3, [r4]
   10ccc:	cmp	r3, #0
   10cd0:	popne	{r4, pc}
   10cd4:	bl	10c5c <_start@@Base+0x60>
   10cd8:	mov	r3, #1
   10cdc:	strb	r3, [r4]
   10ce0:	pop	{r4, pc}
   10ce4:	andeq	r3, r2, r4, rrx
   10ce8:	b	10c88 <_start@@Base+0x8c>

00010cec <fp_insere@@Base>:
   10cec:	push	{r4, r5, r6, sl, fp, lr}
   10cf0:	add	fp, sp, #16
   10cf4:	cmp	r0, #0
   10cf8:	beq	10d64 <fp_insere@@Base+0x78>
   10cfc:	ldm	r0, {r3, r6}
   10d00:	mov	r4, r0
   10d04:	mov	r0, #0
   10d08:	cmp	r3, r6
   10d0c:	beq	10dac <fp_insere@@Base+0xc0>
   10d10:	mov	r0, r2
   10d14:	bl	1207c <elemento_cria@@Base>
   10d18:	mov	r5, r0
   10d1c:	ldr	r0, [r4]
   10d20:	mov	r6, #0
   10d24:	cmp	r0, #1
   10d28:	blt	10d54 <fp_insere@@Base+0x68>
   10d2c:	ldr	r0, [r4, #8]
   10d30:	mov	r1, r5
   10d34:	ldr	r0, [r0, r6, lsl #2]
   10d38:	bl	120c4 <maior_que@@Base>
   10d3c:	cmp	r0, #0
   10d40:	beq	10d6c <fp_insere@@Base+0x80>
   10d44:	ldr	r0, [r4]
   10d48:	add	r6, r6, #1
   10d4c:	cmp	r6, r0
   10d50:	blt	10d2c <fp_insere@@Base+0x40>
   10d54:	ldr	r1, [r4, #8]
   10d58:	cmp	r0, r6
   10d5c:	bge	10d7c <fp_insere@@Base+0x90>
   10d60:	b	10d9c <fp_insere@@Base+0xb0>
   10d64:	mvn	r0, #0
   10d68:	pop	{r4, r5, r6, sl, fp, pc}
   10d6c:	ldr	r0, [r4]
   10d70:	ldr	r1, [r4, #8]
   10d74:	cmp	r0, r6
   10d78:	blt	10d9c <fp_insere@@Base+0xb0>
   10d7c:	mov	r2, r0
   10d80:	ldr	r3, [r1, r2, lsl #2]!
   10d84:	cmp	r2, r6
   10d88:	str	r3, [r1, #4]
   10d8c:	sub	r3, r2, #1
   10d90:	ldr	r1, [r4, #8]
   10d94:	mov	r2, r3
   10d98:	bgt	10d80 <fp_insere@@Base+0x94>
   10d9c:	add	r0, r0, #1
   10da0:	str	r5, [r1, r6, lsl #2]
   10da4:	str	r0, [r4]
   10da8:	mov	r0, #1
   10dac:	pop	{r4, r5, r6, sl, fp, pc}

00010db0 <fp_remove@@Base>:
   10db0:	push	{r4, r5, fp, lr}
   10db4:	add	fp, sp, #8
   10db8:	mov	r1, #0
   10dbc:	cmp	r0, #0
   10dc0:	beq	10e5c <fp_remove@@Base+0xac>
   10dc4:	ldr	r2, [r0]
   10dc8:	cmp	r2, #0
   10dcc:	beq	10e5c <fp_remove@@Base+0xac>
   10dd0:	ldr	r1, [r0, #8]
   10dd4:	cmp	r2, #1
   10dd8:	ldr	lr, [r1]
   10ddc:	blt	10e50 <fp_remove@@Base+0xa0>
   10de0:	ldr	r3, [r1, #4]
   10de4:	str	r3, [r1]
   10de8:	beq	10e50 <fp_remove@@Base+0xa0>
   10dec:	sub	r3, r2, #1
   10df0:	mov	r1, #1
   10df4:	cmp	r2, #2
   10df8:	and	ip, r3, #1
   10dfc:	beq	10e38 <fp_remove@@Base+0x88>
   10e00:	sub	r1, r3, ip
   10e04:	mov	r3, #0
   10e08:	ldr	r4, [r0, #8]
   10e0c:	add	r4, r4, r3, lsl #2
   10e10:	ldr	r5, [r4, #8]
   10e14:	str	r5, [r4, #4]
   10e18:	ldr	r4, [r0, #8]
   10e1c:	add	r4, r4, r3, lsl #2
   10e20:	add	r3, r3, #2
   10e24:	cmp	r1, r3
   10e28:	ldr	r5, [r4, #12]
   10e2c:	str	r5, [r4, #8]
   10e30:	bne	10e08 <fp_remove@@Base+0x58>
   10e34:	add	r1, r3, #1
   10e38:	cmp	ip, #0
   10e3c:	beq	10e50 <fp_remove@@Base+0xa0>
   10e40:	ldr	r3, [r0, #8]
   10e44:	add	r5, r3, r1, lsl #2
   10e48:	ldr	r5, [r5, #4]
   10e4c:	str	r5, [r3, r1, lsl #2]
   10e50:	sub	r1, r2, #1
   10e54:	str	r1, [r0]
   10e58:	ldr	r1, [lr, #4]
   10e5c:	mov	r0, r1
   10e60:	pop	{r4, r5, fp, pc}

00010e64 <fp_carrega@@Base>:
   10e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e68:	add	fp, sp, #28
   10e6c:	sub	sp, sp, #268	; 0x10c
   10e70:	mov	r2, r1
   10e74:	movw	r1, #9700	; 0x25e4
   10e78:	mov	r5, r0
   10e7c:	movt	r1, #1
   10e80:	mov	r0, r2
   10e84:	bl	10b54 <fopen@plt>
   10e88:	cmp	r0, #0
   10e8c:	beq	10fac <fp_carrega@@Base+0x148>
   10e90:	mov	r4, r0
   10e94:	bl	10bc0 <feof@plt>
   10e98:	cmp	r0, #0
   10e9c:	bne	11014 <fp_carrega@@Base+0x1b0>
   10ea0:	cmp	r5, #0
   10ea4:	beq	10fc0 <fp_carrega@@Base+0x15c>
   10ea8:	movw	r7, #9000	; 0x2328
   10eac:	add	r9, sp, #4
   10eb0:	add	r6, sp, #8
   10eb4:	mov	sl, #0
   10eb8:	movt	r7, #1
   10ebc:	b	10ee4 <fp_carrega@@Base+0x80>
   10ec0:	str	r7, [r1, r8, lsl #2]
   10ec4:	movw	r7, #9000	; 0x2328
   10ec8:	add	r0, r0, #1
   10ecc:	movt	r7, #1
   10ed0:	str	r0, [r5]
   10ed4:	mov	r0, r4
   10ed8:	bl	10bc0 <feof@plt>
   10edc:	cmp	r0, #0
   10ee0:	bne	11014 <fp_carrega@@Base+0x1b0>
   10ee4:	mov	r0, r4
   10ee8:	mov	r1, r7
   10eec:	mov	r2, r9
   10ef0:	bl	10b48 <__isoc99_fscanf@plt>
   10ef4:	mov	r0, r6
   10ef8:	mov	r1, #256	; 0x100
   10efc:	mov	r2, r4
   10f00:	bl	10b78 <fgets@plt>
   10f04:	mov	r0, r6
   10f08:	bl	10bcc <strlen@plt>
   10f0c:	add	r0, r0, r6
   10f10:	strb	sl, [r0, #-1]
   10f14:	ldm	r5, {r0, r1}
   10f18:	cmp	r0, r1
   10f1c:	beq	10ed4 <fp_carrega@@Base+0x70>
   10f20:	ldr	r0, [sp, #4]
   10f24:	mov	r1, r6
   10f28:	bl	1207c <elemento_cria@@Base>
   10f2c:	mov	r7, r0
   10f30:	ldr	r0, [r5]
   10f34:	mov	r8, #0
   10f38:	cmp	r0, #1
   10f3c:	blt	10f68 <fp_carrega@@Base+0x104>
   10f40:	ldr	r0, [r5, #8]
   10f44:	mov	r1, r7
   10f48:	ldr	r0, [r0, r8, lsl #2]
   10f4c:	bl	120c4 <maior_que@@Base>
   10f50:	cmp	r0, #0
   10f54:	beq	10f78 <fp_carrega@@Base+0x114>
   10f58:	ldr	r0, [r5]
   10f5c:	add	r8, r8, #1
   10f60:	cmp	r8, r0
   10f64:	blt	10f40 <fp_carrega@@Base+0xdc>
   10f68:	ldr	r1, [r5, #8]
   10f6c:	cmp	r0, r8
   10f70:	blt	10ec0 <fp_carrega@@Base+0x5c>
   10f74:	b	10f88 <fp_carrega@@Base+0x124>
   10f78:	ldr	r0, [r5]
   10f7c:	ldr	r1, [r5, #8]
   10f80:	cmp	r0, r8
   10f84:	blt	10ec0 <fp_carrega@@Base+0x5c>
   10f88:	mov	r2, r0
   10f8c:	ldr	r3, [r1, r2, lsl #2]!
   10f90:	cmp	r2, r8
   10f94:	str	r3, [r1, #4]
   10f98:	sub	r3, r2, #1
   10f9c:	ldr	r1, [r5, #8]
   10fa0:	mov	r2, r3
   10fa4:	bgt	10f8c <fp_carrega@@Base+0x128>
   10fa8:	b	10ec0 <fp_carrega@@Base+0x5c>
   10fac:	movw	r0, #9614	; 0x258e
   10fb0:	movt	r0, #1
   10fb4:	bl	10b90 <puts@plt>
   10fb8:	sub	sp, fp, #28
   10fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fc0:	movw	r8, #9000	; 0x2328
   10fc4:	add	r6, sp, #4
   10fc8:	add	r7, sp, #8
   10fcc:	mov	r5, #0
   10fd0:	movt	r8, #1
   10fd4:	mov	r0, r4
   10fd8:	mov	r1, r8
   10fdc:	mov	r2, r6
   10fe0:	bl	10b48 <__isoc99_fscanf@plt>
   10fe4:	mov	r0, r7
   10fe8:	mov	r1, #256	; 0x100
   10fec:	mov	r2, r4
   10ff0:	bl	10b78 <fgets@plt>
   10ff4:	mov	r0, r7
   10ff8:	bl	10bcc <strlen@plt>
   10ffc:	add	r0, r0, r7
   11000:	strb	r5, [r0, #-1]
   11004:	mov	r0, r4
   11008:	bl	10bc0 <feof@plt>
   1100c:	cmp	r0, #0
   11010:	beq	10fd4 <fp_carrega@@Base+0x170>
   11014:	mov	r0, r4
   11018:	bl	10be4 <fclose@plt>
   1101c:	sub	sp, fp, #28
   11020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011024 <heap_insere@@Base>:
   11024:	push	{r4, r5, r6, r7, fp, lr}
   11028:	add	fp, sp, #16
   1102c:	mov	r4, r0
   11030:	mov	r7, r1
   11034:	ldr	r0, [r0]
   11038:	mov	r5, #0
   1103c:	ldr	r1, [r4, #4]
   11040:	cmp	r0, r1
   11044:	beq	110dc <heap_insere@@Base+0xb8>
   11048:	mov	r0, r3
   1104c:	mov	r1, r2
   11050:	bl	1207c <elemento_cria@@Base>
   11054:	mov	r6, r0
   11058:	ldr	r0, [r4]
   1105c:	cmp	r0, #1
   11060:	blt	11098 <heap_insere@@Base+0x74>
   11064:	mov	r5, #0
   11068:	ldr	r0, [r4, #8]
   1106c:	mov	r1, r6
   11070:	ldr	r0, [r0, r5, lsl #2]
   11074:	blx	r7
   11078:	cmp	r0, #1
   1107c:	beq	110a4 <heap_insere@@Base+0x80>
   11080:	ldr	r0, [r4]
   11084:	add	r5, r5, #1
   11088:	cmp	r5, r0
   1108c:	blt	11068 <heap_insere@@Base+0x44>
   11090:	ldr	r0, [r4, #8]
   11094:	b	110b0 <heap_insere@@Base+0x8c>
   11098:	ldr	r0, [r4, #8]
   1109c:	mov	r5, #0
   110a0:	b	110cc <heap_insere@@Base+0xa8>
   110a4:	ldr	r0, [r4, #8]
   110a8:	cmp	r5, #0
   110ac:	beq	110cc <heap_insere@@Base+0xa8>
   110b0:	mov	r1, r5
   110b4:	ldr	r2, [r0, r1, lsl #2]!
   110b8:	sub	r1, r1, #1
   110bc:	cmp	r1, #0
   110c0:	str	r2, [r0, #4]
   110c4:	ldr	r0, [r4, #8]
   110c8:	bgt	110b4 <heap_insere@@Base+0x90>
   110cc:	str	r6, [r0, r5, lsl #2]
   110d0:	ldr	r0, [r4]
   110d4:	add	r0, r0, #1
   110d8:	str	r0, [r4]
   110dc:	mov	r0, r5
   110e0:	pop	{r4, r5, r6, r7, fp, pc}

000110e4 <heap_remove@@Base>:
   110e4:	mov	r0, #0
   110e8:	bx	lr

000110ec <heap_carrega@@Base>:
   110ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110f0:	add	fp, sp, #28
   110f4:	sub	sp, sp, #268	; 0x10c
   110f8:	mov	r4, r1
   110fc:	movw	r1, #9700	; 0x25e4
   11100:	mov	r5, r0
   11104:	mov	r0, r2
   11108:	movt	r1, #1
   1110c:	bl	10b54 <fopen@plt>
   11110:	cmp	r0, #0
   11114:	beq	11240 <heap_carrega@@Base+0x154>
   11118:	mov	r8, r0
   1111c:	bl	10bc0 <feof@plt>
   11120:	cmp	r0, #0
   11124:	bne	11230 <heap_carrega@@Base+0x144>
   11128:	movw	r9, #9000	; 0x2328
   1112c:	add	r6, sp, #4
   11130:	add	sl, sp, #8
   11134:	mov	r7, #0
   11138:	movt	r9, #1
   1113c:	b	11178 <heap_carrega@@Base+0x8c>
   11140:	ldr	r0, [r5, #8]
   11144:	mov	r9, #0
   11148:	str	r7, [r0, r9, lsl #2]
   1114c:	movw	r9, #9000	; 0x2328
   11150:	add	r6, sp, #4
   11154:	mov	r7, #0
   11158:	ldr	r0, [r5]
   1115c:	movt	r9, #1
   11160:	add	r0, r0, #1
   11164:	str	r0, [r5]
   11168:	mov	r0, r8
   1116c:	bl	10bc0 <feof@plt>
   11170:	cmp	r0, #0
   11174:	bne	11230 <heap_carrega@@Base+0x144>
   11178:	mov	r0, r8
   1117c:	mov	r1, r9
   11180:	mov	r2, r6
   11184:	bl	10b48 <__isoc99_fscanf@plt>
   11188:	mov	r0, sl
   1118c:	mov	r1, #256	; 0x100
   11190:	mov	r2, r8
   11194:	bl	10b78 <fgets@plt>
   11198:	mov	r0, sl
   1119c:	bl	10bcc <strlen@plt>
   111a0:	add	r0, r0, sl
   111a4:	strb	r7, [r0, #-1]
   111a8:	ldm	r5, {r0, r1}
   111ac:	cmp	r0, r1
   111b0:	beq	11168 <heap_carrega@@Base+0x7c>
   111b4:	ldr	r0, [sp, #4]
   111b8:	mov	r1, sl
   111bc:	bl	1207c <elemento_cria@@Base>
   111c0:	mov	r7, r0
   111c4:	ldr	r0, [r5]
   111c8:	cmp	r0, #1
   111cc:	blt	11140 <heap_carrega@@Base+0x54>
   111d0:	mov	r9, #0
   111d4:	ldr	r0, [r5, #8]
   111d8:	mov	r1, r7
   111dc:	ldr	r0, [r0, r9, lsl #2]
   111e0:	blx	r4
   111e4:	cmp	r0, #1
   111e8:	beq	11204 <heap_carrega@@Base+0x118>
   111ec:	ldr	r0, [r5]
   111f0:	add	r9, r9, #1
   111f4:	cmp	r9, r0
   111f8:	blt	111d4 <heap_carrega@@Base+0xe8>
   111fc:	ldr	r0, [r5, #8]
   11200:	b	11210 <heap_carrega@@Base+0x124>
   11204:	ldr	r0, [r5, #8]
   11208:	cmp	r9, #0
   1120c:	beq	11144 <heap_carrega@@Base+0x58>
   11210:	mov	r1, r9
   11214:	ldr	r2, [r0, r1, lsl #2]!
   11218:	sub	r1, r1, #1
   1121c:	cmp	r1, #0
   11220:	str	r2, [r0, #4]
   11224:	ldr	r0, [r5, #8]
   11228:	bgt	11214 <heap_carrega@@Base+0x128>
   1122c:	b	11148 <heap_carrega@@Base+0x5c>
   11230:	mov	r0, r8
   11234:	bl	10be4 <fclose@plt>
   11238:	sub	sp, fp, #28
   1123c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11240:	movw	r0, #9614	; 0x258e
   11244:	movt	r0, #1
   11248:	bl	10b90 <puts@plt>
   1124c:	sub	sp, fp, #28
   11250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011254 <main@@Base>:
   11254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11258:	add	fp, sp, #28
   1125c:	sub	sp, sp, #268	; 0x10c
   11260:	mov	r0, #42	; 0x2a
   11264:	bl	11fc4 <vetor_cria@@Base>
   11268:	mov	r4, r0
   1126c:	movw	r0, #9647	; 0x25af
   11270:	movt	r0, #1
   11274:	bl	10b90 <puts@plt>
   11278:	movw	r1, #9004	; 0x232c
   1127c:	mov	r0, r4
   11280:	movt	r1, #1
   11284:	bl	10e64 <fp_carrega@@Base>
   11288:	movw	r8, #12392	; 0x3068
   1128c:	movw	r0, #9014	; 0x2336
   11290:	movt	r8, #2
   11294:	movt	r0, #1
   11298:	ldr	r1, [r8]
   1129c:	bl	10b3c <printf@plt>
   112a0:	mov	r0, r4
   112a4:	bl	12198 <vetor_imprime@@Base>
   112a8:	ldr	r0, [r4]
   112ac:	cmp	r0, #42	; 0x2a
   112b0:	bne	114c4 <main@@Base+0x270>
   112b4:	cmp	r4, #0
   112b8:	beq	114d0 <main@@Base+0x27c>
   112bc:	ldr	r1, [r4, #8]
   112c0:	ldm	r1, {r0, r2}
   112c4:	str	r2, [r1]
   112c8:	ldr	r1, [r4, #8]
   112cc:	ldr	r2, [r1, #8]
   112d0:	str	r2, [r1, #4]
   112d4:	ldr	r1, [r4, #8]
   112d8:	ldr	r2, [r1, #12]
   112dc:	str	r2, [r1, #8]
   112e0:	ldr	r1, [r4, #8]
   112e4:	ldr	r2, [r1, #16]
   112e8:	str	r2, [r1, #12]
   112ec:	ldr	r1, [r4, #8]
   112f0:	ldr	r2, [r1, #20]
   112f4:	str	r2, [r1, #16]
   112f8:	ldr	r1, [r4, #8]
   112fc:	ldr	r2, [r1, #24]
   11300:	str	r2, [r1, #20]
   11304:	ldr	r1, [r4, #8]
   11308:	ldr	r2, [r1, #28]
   1130c:	str	r2, [r1, #24]
   11310:	ldr	r1, [r4, #8]
   11314:	ldr	r2, [r1, #32]
   11318:	str	r2, [r1, #28]
   1131c:	ldr	r1, [r4, #8]
   11320:	ldr	r2, [r1, #36]	; 0x24
   11324:	str	r2, [r1, #32]
   11328:	ldr	r1, [r4, #8]
   1132c:	ldr	r2, [r1, #40]	; 0x28
   11330:	str	r2, [r1, #36]	; 0x24
   11334:	ldr	r1, [r4, #8]
   11338:	ldr	r2, [r1, #44]	; 0x2c
   1133c:	str	r2, [r1, #40]	; 0x28
   11340:	ldr	r1, [r4, #8]
   11344:	ldr	r2, [r1, #48]	; 0x30
   11348:	str	r2, [r1, #44]	; 0x2c
   1134c:	ldr	r1, [r4, #8]
   11350:	ldr	r2, [r1, #52]	; 0x34
   11354:	str	r2, [r1, #48]	; 0x30
   11358:	ldr	r1, [r4, #8]
   1135c:	ldr	r2, [r1, #56]	; 0x38
   11360:	str	r2, [r1, #52]	; 0x34
   11364:	ldr	r1, [r4, #8]
   11368:	ldr	r2, [r1, #60]	; 0x3c
   1136c:	str	r2, [r1, #56]	; 0x38
   11370:	ldr	r1, [r4, #8]
   11374:	ldr	r2, [r1, #64]	; 0x40
   11378:	str	r2, [r1, #60]	; 0x3c
   1137c:	ldr	r1, [r4, #8]
   11380:	ldr	r2, [r1, #68]	; 0x44
   11384:	str	r2, [r1, #64]	; 0x40
   11388:	ldr	r1, [r4, #8]
   1138c:	ldr	r2, [r1, #72]	; 0x48
   11390:	str	r2, [r1, #68]	; 0x44
   11394:	ldr	r1, [r4, #8]
   11398:	ldr	r2, [r1, #76]	; 0x4c
   1139c:	str	r2, [r1, #72]	; 0x48
   113a0:	ldr	r1, [r4, #8]
   113a4:	ldr	r2, [r1, #80]	; 0x50
   113a8:	str	r2, [r1, #76]	; 0x4c
   113ac:	ldr	r1, [r4, #8]
   113b0:	ldr	r2, [r1, #84]	; 0x54
   113b4:	str	r2, [r1, #80]	; 0x50
   113b8:	ldr	r1, [r4, #8]
   113bc:	ldr	r2, [r1, #88]	; 0x58
   113c0:	str	r2, [r1, #84]	; 0x54
   113c4:	ldr	r1, [r4, #8]
   113c8:	ldr	r2, [r1, #92]	; 0x5c
   113cc:	str	r2, [r1, #88]	; 0x58
   113d0:	ldr	r1, [r4, #8]
   113d4:	ldr	r2, [r1, #96]	; 0x60
   113d8:	str	r2, [r1, #92]	; 0x5c
   113dc:	ldr	r1, [r4, #8]
   113e0:	ldr	r2, [r1, #100]	; 0x64
   113e4:	str	r2, [r1, #96]	; 0x60
   113e8:	ldr	r1, [r4, #8]
   113ec:	ldr	r2, [r1, #104]	; 0x68
   113f0:	str	r2, [r1, #100]	; 0x64
   113f4:	ldr	r1, [r4, #8]
   113f8:	ldr	r2, [r1, #108]	; 0x6c
   113fc:	str	r2, [r1, #104]	; 0x68
   11400:	ldr	r1, [r4, #8]
   11404:	ldr	r2, [r1, #112]	; 0x70
   11408:	str	r2, [r1, #108]	; 0x6c
   1140c:	ldr	r1, [r4, #8]
   11410:	ldr	r2, [r1, #116]	; 0x74
   11414:	str	r2, [r1, #112]	; 0x70
   11418:	ldr	r1, [r4, #8]
   1141c:	ldr	r2, [r1, #120]	; 0x78
   11420:	str	r2, [r1, #116]	; 0x74
   11424:	ldr	r1, [r4, #8]
   11428:	ldr	r2, [r1, #124]	; 0x7c
   1142c:	str	r2, [r1, #120]	; 0x78
   11430:	ldr	r1, [r4, #8]
   11434:	ldr	r2, [r1, #128]	; 0x80
   11438:	str	r2, [r1, #124]	; 0x7c
   1143c:	ldr	r1, [r4, #8]
   11440:	ldr	r2, [r1, #132]	; 0x84
   11444:	str	r2, [r1, #128]	; 0x80
   11448:	ldr	r1, [r4, #8]
   1144c:	ldr	r2, [r1, #136]	; 0x88
   11450:	str	r2, [r1, #132]	; 0x84
   11454:	ldr	r1, [r4, #8]
   11458:	ldr	r2, [r1, #140]	; 0x8c
   1145c:	str	r2, [r1, #136]	; 0x88
   11460:	ldr	r1, [r4, #8]
   11464:	ldr	r2, [r1, #144]	; 0x90
   11468:	str	r2, [r1, #140]	; 0x8c
   1146c:	ldr	r1, [r4, #8]
   11470:	ldr	r2, [r1, #148]	; 0x94
   11474:	str	r2, [r1, #144]	; 0x90
   11478:	ldr	r1, [r4, #8]
   1147c:	ldr	r2, [r1, #152]	; 0x98
   11480:	str	r2, [r1, #148]	; 0x94
   11484:	ldr	r1, [r4, #8]
   11488:	ldr	r2, [r1, #156]	; 0x9c
   1148c:	str	r2, [r1, #152]	; 0x98
   11490:	ldr	r1, [r4, #8]
   11494:	ldr	r2, [r1, #160]	; 0xa0
   11498:	str	r2, [r1, #156]	; 0x9c
   1149c:	ldr	r1, [r4, #8]
   114a0:	ldr	r2, [r1, #164]	; 0xa4
   114a4:	str	r2, [r1, #160]	; 0xa0
   114a8:	ldr	r1, [r4, #8]
   114ac:	ldr	r2, [r1, #168]	; 0xa8
   114b0:	str	r2, [r1, #164]	; 0xa4
   114b4:	mov	r1, #41	; 0x29
   114b8:	str	r1, [r4]
   114bc:	ldr	r1, [r0, #4]
   114c0:	b	114d4 <main@@Base+0x280>
   114c4:	movw	r0, #9865	; 0x2689
   114c8:	movt	r0, #1
   114cc:	b	11b00 <main@@Base+0x8ac>
   114d0:	mov	r1, #0
   114d4:	movw	r0, #9069	; 0x236d
   114d8:	movt	r0, #1
   114dc:	bl	10b30 <strcmp@plt>
   114e0:	cmp	r0, #0
   114e4:	beq	114f4 <main@@Base+0x2a0>
   114e8:	movw	r0, #9797	; 0x2645
   114ec:	movt	r0, #1
   114f0:	b	11b00 <main@@Base+0x8ac>
   114f4:	mov	r1, #0
   114f8:	cmp	r4, #0
   114fc:	str	r1, [r8]
   11500:	beq	115f0 <main@@Base+0x39c>
   11504:	ldr	r0, [r4]
   11508:	cmp	r0, #0
   1150c:	beq	11580 <main@@Base+0x32c>
   11510:	cmp	r0, #1
   11514:	blt	11574 <main@@Base+0x320>
   11518:	and	r2, r0, #1
   1151c:	mov	r1, #0
   11520:	beq	1155c <main@@Base+0x308>
   11524:	sub	r3, r0, r2
   11528:	mov	r1, #0
   1152c:	mov	r7, #4
   11530:	ldr	r6, [r4, #8]
   11534:	ldr	r5, [r6, r7]!
   11538:	str	r5, [r6, #-4]
   1153c:	ldr	r6, [r4, #8]
   11540:	add	r5, r6, r1, lsl #2
   11544:	add	r1, r1, #2
   11548:	cmp	r3, r1
   1154c:	ldr	r5, [r5, #8]
   11550:	str	r5, [r6, r7]
   11554:	add	r7, r7, #8
   11558:	bne	11530 <main@@Base+0x2dc>
   1155c:	cmp	r2, #0
   11560:	beq	11574 <main@@Base+0x320>
   11564:	ldr	r2, [r4, #8]
   11568:	add	r3, r2, r1, lsl #2
   1156c:	ldr	r3, [r3, #4]
   11570:	str	r3, [r2, r1, lsl #2]
   11574:	sub	r0, r0, #1
   11578:	str	r0, [r4]
   1157c:	ldr	r1, [r8]
   11580:	movw	r0, #9087	; 0x237f
   11584:	movt	r0, #1
   11588:	bl	10b3c <printf@plt>
   1158c:	mov	r1, #0
   11590:	str	r1, [r8]
   11594:	ldm	r4, {r0, r2}
   11598:	cmp	r0, r2
   1159c:	beq	11674 <main@@Base+0x420>
   115a0:	movw	r1, #9139	; 0x23b3
   115a4:	mov	r0, #99	; 0x63
   115a8:	movt	r1, #1
   115ac:	bl	1207c <elemento_cria@@Base>
   115b0:	mov	r5, r0
   115b4:	ldr	r0, [r4]
   115b8:	mov	r6, #0
   115bc:	cmp	r0, #1
   115c0:	blt	11638 <main@@Base+0x3e4>
   115c4:	ldr	r0, [r4, #8]
   115c8:	mov	r1, r5
   115cc:	ldr	r0, [r0, r6, lsl #2]
   115d0:	bl	120c4 <maior_que@@Base>
   115d4:	cmp	r0, #0
   115d8:	beq	11634 <main@@Base+0x3e0>
   115dc:	ldr	r0, [r4]
   115e0:	add	r6, r6, #1
   115e4:	cmp	r6, r0
   115e8:	blt	115c4 <main@@Base+0x370>
   115ec:	b	11638 <main@@Base+0x3e4>
   115f0:	movw	r0, #9087	; 0x237f
   115f4:	mov	r1, #0
   115f8:	mov	r5, #0
   115fc:	movt	r0, #1
   11600:	bl	10b3c <printf@plt>
   11604:	movw	r0, #9153	; 0x23c1
   11608:	mov	r1, #0
   1160c:	str	r5, [r8]
   11610:	movt	r0, #1
   11614:	bl	10b3c <printf@plt>
   11618:	movw	r0, #9224	; 0x2408
   1161c:	mov	r1, #0
   11620:	str	r5, [r8]
   11624:	movt	r0, #1
   11628:	bl	10b3c <printf@plt>
   1162c:	str	r5, [r8]
   11630:	b	118c8 <main@@Base+0x674>
   11634:	ldr	r0, [r4]
   11638:	ldr	r1, [r4, #8]
   1163c:	cmp	r0, r6
   11640:	blt	11664 <main@@Base+0x410>
   11644:	mov	r2, r0
   11648:	ldr	r3, [r1, r2, lsl #2]!
   1164c:	cmp	r2, r6
   11650:	str	r3, [r1, #4]
   11654:	sub	r3, r2, #1
   11658:	ldr	r1, [r4, #8]
   1165c:	mov	r2, r3
   11660:	bgt	11648 <main@@Base+0x3f4>
   11664:	add	r0, r0, #1
   11668:	str	r5, [r1, r6, lsl #2]
   1166c:	str	r0, [r4]
   11670:	ldr	r1, [r8]
   11674:	movw	r0, #9153	; 0x23c1
   11678:	movt	r0, #1
   1167c:	bl	10b3c <printf@plt>
   11680:	ldr	r0, [r4]
   11684:	cmp	r0, #0
   11688:	beq	116f8 <main@@Base+0x4a4>
   1168c:	cmp	r0, #1
   11690:	blt	116f0 <main@@Base+0x49c>
   11694:	and	r2, r0, #1
   11698:	mov	r1, #0
   1169c:	beq	116d8 <main@@Base+0x484>
   116a0:	sub	r3, r0, r2
   116a4:	mov	r1, #0
   116a8:	mov	r7, #4
   116ac:	ldr	r6, [r4, #8]
   116b0:	ldr	r5, [r6, r7]!
   116b4:	str	r5, [r6, #-4]
   116b8:	ldr	r6, [r4, #8]
   116bc:	add	r5, r6, r1, lsl #2
   116c0:	add	r1, r1, #2
   116c4:	cmp	r3, r1
   116c8:	ldr	r5, [r5, #8]
   116cc:	str	r5, [r6, r7]
   116d0:	add	r7, r7, #8
   116d4:	bne	116ac <main@@Base+0x458>
   116d8:	cmp	r2, #0
   116dc:	beq	116f0 <main@@Base+0x49c>
   116e0:	ldr	r2, [r4, #8]
   116e4:	add	r3, r2, r1, lsl #2
   116e8:	ldr	r3, [r3, #4]
   116ec:	str	r3, [r2, r1, lsl #2]
   116f0:	sub	r0, r0, #1
   116f4:	str	r0, [r4]
   116f8:	mov	r1, #0
   116fc:	str	r1, [r8]
   11700:	ldm	r4, {r0, r2}
   11704:	cmp	r0, r2
   11708:	beq	117a0 <main@@Base+0x54c>
   1170c:	movw	r1, #9139	; 0x23b3
   11710:	mov	r0, #0
   11714:	mov	r6, #0
   11718:	movt	r1, #1
   1171c:	bl	1207c <elemento_cria@@Base>
   11720:	mov	r5, r0
   11724:	ldr	r0, [r4]
   11728:	cmp	r0, #1
   1172c:	blt	11764 <main@@Base+0x510>
   11730:	mov	r6, #0
   11734:	ldr	r0, [r4, #8]
   11738:	mov	r1, r5
   1173c:	ldr	r0, [r0, r6, lsl #2]
   11740:	bl	120c4 <maior_que@@Base>
   11744:	cmp	r0, #0
   11748:	beq	11760 <main@@Base+0x50c>
   1174c:	ldr	r0, [r4]
   11750:	add	r6, r6, #1
   11754:	cmp	r6, r0
   11758:	blt	11734 <main@@Base+0x4e0>
   1175c:	b	11764 <main@@Base+0x510>
   11760:	ldr	r0, [r4]
   11764:	ldr	r1, [r4, #8]
   11768:	cmp	r0, r6
   1176c:	blt	11790 <main@@Base+0x53c>
   11770:	mov	r2, r0
   11774:	ldr	r3, [r1, r2, lsl #2]!
   11778:	cmp	r2, r6
   1177c:	str	r3, [r1, #4]
   11780:	sub	r3, r2, #1
   11784:	ldr	r1, [r4, #8]
   11788:	mov	r2, r3
   1178c:	bgt	11774 <main@@Base+0x520>
   11790:	add	r0, r0, #1
   11794:	str	r5, [r1, r6, lsl #2]
   11798:	str	r0, [r4]
   1179c:	ldr	r1, [r8]
   117a0:	movw	r0, #9224	; 0x2408
   117a4:	movt	r0, #1
   117a8:	bl	10b3c <printf@plt>
   117ac:	ldr	r0, [r4]
   117b0:	cmp	r0, #0
   117b4:	beq	11824 <main@@Base+0x5d0>
   117b8:	cmp	r0, #1
   117bc:	blt	1181c <main@@Base+0x5c8>
   117c0:	and	r2, r0, #1
   117c4:	mov	r1, #0
   117c8:	beq	11804 <main@@Base+0x5b0>
   117cc:	sub	r3, r0, r2
   117d0:	mov	r1, #0
   117d4:	mov	r7, #4
   117d8:	ldr	r6, [r4, #8]
   117dc:	ldr	r5, [r6, r7]!
   117e0:	str	r5, [r6, #-4]
   117e4:	ldr	r6, [r4, #8]
   117e8:	add	r5, r6, r1, lsl #2
   117ec:	add	r1, r1, #2
   117f0:	cmp	r3, r1
   117f4:	ldr	r5, [r5, #8]
   117f8:	str	r5, [r6, r7]
   117fc:	add	r7, r7, #8
   11800:	bne	117d8 <main@@Base+0x584>
   11804:	cmp	r2, #0
   11808:	beq	1181c <main@@Base+0x5c8>
   1180c:	ldr	r2, [r4, #8]
   11810:	add	r3, r2, r1, lsl #2
   11814:	ldr	r3, [r3, #4]
   11818:	str	r3, [r2, r1, lsl #2]
   1181c:	sub	r0, r0, #1
   11820:	str	r0, [r4]
   11824:	mov	r5, #0
   11828:	str	r5, [r8]
   1182c:	ldm	r4, {r0, r1}
   11830:	cmp	r0, r1
   11834:	beq	118c8 <main@@Base+0x674>
   11838:	movw	r1, #9139	; 0x23b3
   1183c:	mov	r0, #42	; 0x2a
   11840:	movt	r1, #1
   11844:	bl	1207c <elemento_cria@@Base>
   11848:	mov	r5, r0
   1184c:	ldr	r0, [r4]
   11850:	mov	r6, #0
   11854:	cmp	r0, #1
   11858:	blt	1188c <main@@Base+0x638>
   1185c:	ldr	r0, [r4, #8]
   11860:	mov	r1, r5
   11864:	ldr	r0, [r0, r6, lsl #2]
   11868:	bl	120c4 <maior_que@@Base>
   1186c:	cmp	r0, #0
   11870:	beq	11888 <main@@Base+0x634>
   11874:	ldr	r0, [r4]
   11878:	add	r6, r6, #1
   1187c:	cmp	r6, r0
   11880:	blt	1185c <main@@Base+0x608>
   11884:	b	1188c <main@@Base+0x638>
   11888:	ldr	r0, [r4]
   1188c:	ldr	r1, [r4, #8]
   11890:	cmp	r0, r6
   11894:	blt	118b8 <main@@Base+0x664>
   11898:	mov	r2, r0
   1189c:	ldr	r3, [r1, r2, lsl #2]!
   118a0:	cmp	r2, r6
   118a4:	str	r3, [r1, #4]
   118a8:	sub	r3, r2, #1
   118ac:	ldr	r1, [r4, #8]
   118b0:	mov	r2, r3
   118b4:	bgt	1189c <main@@Base+0x648>
   118b8:	add	r0, r0, #1
   118bc:	str	r5, [r1, r6, lsl #2]
   118c0:	str	r0, [r4]
   118c4:	ldr	r5, [r8]
   118c8:	movw	r0, #9295	; 0x244f
   118cc:	mov	r1, r5
   118d0:	movt	r0, #1
   118d4:	bl	10b3c <printf@plt>
   118d8:	movw	r0, #9702	; 0x25e6
   118dc:	movt	r0, #1
   118e0:	bl	10b90 <puts@plt>
   118e4:	mov	r0, #42	; 0x2a
   118e8:	bl	12020 <vetor_criaHeap@@Base>
   118ec:	movw	r1, #9700	; 0x25e4
   118f0:	mov	r4, r0
   118f4:	movw	r0, #9004	; 0x232c
   118f8:	movt	r0, #1
   118fc:	movt	r1, #1
   11900:	bl	10b54 <fopen@plt>
   11904:	cmp	r0, #0
   11908:	beq	11a34 <main@@Base+0x7e0>
   1190c:	mov	r9, r0
   11910:	bl	10bc0 <feof@plt>
   11914:	cmp	r0, #0
   11918:	bne	11a20 <main@@Base+0x7cc>
   1191c:	movw	r7, #9000	; 0x2328
   11920:	sub	r6, fp, #36	; 0x24
   11924:	add	sl, sp, #4
   11928:	mov	r5, #0
   1192c:	movt	r7, #1
   11930:	b	11964 <main@@Base+0x710>
   11934:	ldr	r0, [r4, #8]
   11938:	mov	r8, #0
   1193c:	str	r7, [r0, r8, lsl #2]
   11940:	mov	r7, r5
   11944:	mov	r5, #0
   11948:	ldr	r0, [r4]
   1194c:	add	r0, r0, #1
   11950:	str	r0, [r4]
   11954:	mov	r0, r9
   11958:	bl	10bc0 <feof@plt>
   1195c:	cmp	r0, #0
   11960:	bne	11a20 <main@@Base+0x7cc>
   11964:	mov	r0, r9
   11968:	mov	r1, r7
   1196c:	mov	r2, r6
   11970:	bl	10b48 <__isoc99_fscanf@plt>
   11974:	mov	r0, sl
   11978:	mov	r1, #256	; 0x100
   1197c:	mov	r2, r9
   11980:	bl	10b78 <fgets@plt>
   11984:	mov	r0, sl
   11988:	bl	10bcc <strlen@plt>
   1198c:	add	r0, r0, sl
   11990:	strb	r5, [r0, #-1]
   11994:	ldm	r4, {r0, r1}
   11998:	cmp	r0, r1
   1199c:	beq	11954 <main@@Base+0x700>
   119a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   119a4:	mov	r1, sl
   119a8:	mov	r5, r7
   119ac:	bl	1207c <elemento_cria@@Base>
   119b0:	mov	r7, r0
   119b4:	ldr	r0, [r4]
   119b8:	cmp	r0, #1
   119bc:	blt	11934 <main@@Base+0x6e0>
   119c0:	mov	r8, #0
   119c4:	ldr	r0, [r4, #8]
   119c8:	mov	r1, r7
   119cc:	ldr	r0, [r0, r8, lsl #2]
   119d0:	bl	120c4 <maior_que@@Base>
   119d4:	cmp	r0, #1
   119d8:	beq	119f4 <main@@Base+0x7a0>
   119dc:	ldr	r0, [r4]
   119e0:	add	r8, r8, #1
   119e4:	cmp	r8, r0
   119e8:	blt	119c4 <main@@Base+0x770>
   119ec:	ldr	r0, [r4, #8]
   119f0:	b	11a00 <main@@Base+0x7ac>
   119f4:	ldr	r0, [r4, #8]
   119f8:	cmp	r8, #0
   119fc:	beq	11938 <main@@Base+0x6e4>
   11a00:	mov	r1, r8
   11a04:	ldr	r2, [r0, r1, lsl #2]!
   11a08:	sub	r1, r1, #1
   11a0c:	cmp	r1, #0
   11a10:	str	r2, [r0, #4]
   11a14:	ldr	r0, [r4, #8]
   11a18:	bgt	11a04 <main@@Base+0x7b0>
   11a1c:	b	1193c <main@@Base+0x6e8>
   11a20:	mov	r0, r9
   11a24:	bl	10be4 <fclose@plt>
   11a28:	movw	r8, #12392	; 0x3068
   11a2c:	movt	r8, #2
   11a30:	b	11a40 <main@@Base+0x7ec>
   11a34:	movw	r0, #9614	; 0x258e
   11a38:	movt	r0, #1
   11a3c:	bl	10b90 <puts@plt>
   11a40:	ldr	r1, [r8]
   11a44:	movw	r0, #9365	; 0x2495
   11a48:	movt	r0, #1
   11a4c:	bl	10b3c <printf@plt>
   11a50:	mov	r0, r4
   11a54:	bl	12228 <vetor_imprimeHeap@@Base>
   11a58:	ldr	r0, [r4]
   11a5c:	cmp	r0, #42	; 0x2a
   11a60:	bne	11af8 <main@@Base+0x8a4>
   11a64:	movw	r0, #9069	; 0x236d
   11a68:	mov	r1, #0
   11a6c:	mov	r5, #0
   11a70:	movt	r0, #1
   11a74:	bl	10b30 <strcmp@plt>
   11a78:	cmp	r0, #0
   11a7c:	bne	114e8 <main@@Base+0x294>
   11a80:	movw	r0, #9420	; 0x24cc
   11a84:	mov	r1, #0
   11a88:	str	r5, [r8]
   11a8c:	movt	r0, #1
   11a90:	bl	10b3c <printf@plt>
   11a94:	str	r5, [r8]
   11a98:	ldm	r4, {r0, r1}
   11a9c:	cmp	r0, r1
   11aa0:	beq	11b60 <main@@Base+0x90c>
   11aa4:	movw	r1, #9139	; 0x23b3
   11aa8:	mov	r0, #99	; 0x63
   11aac:	movt	r1, #1
   11ab0:	bl	1207c <elemento_cria@@Base>
   11ab4:	mov	r5, r0
   11ab8:	ldr	r0, [r4]
   11abc:	cmp	r0, #1
   11ac0:	blt	11b14 <main@@Base+0x8c0>
   11ac4:	mov	r6, #0
   11ac8:	ldr	r0, [r4, #8]
   11acc:	mov	r1, r5
   11ad0:	ldr	r0, [r0, r6, lsl #2]
   11ad4:	bl	120c4 <maior_que@@Base>
   11ad8:	cmp	r0, #1
   11adc:	beq	11b1c <main@@Base+0x8c8>
   11ae0:	ldr	r0, [r4]
   11ae4:	add	r6, r6, #1
   11ae8:	cmp	r6, r0
   11aec:	blt	11ac8 <main@@Base+0x874>
   11af0:	ldr	r0, [r4, #8]
   11af4:	b	11b28 <main@@Base+0x8d4>
   11af8:	movw	r0, #9758	; 0x261e
   11afc:	movt	r0, #1
   11b00:	bl	10b90 <puts@plt>
   11b04:	mov	r4, #1
   11b08:	mov	r0, r4
   11b0c:	sub	sp, fp, #28
   11b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b14:	ldr	r0, [r4, #8]
   11b18:	b	11b48 <main@@Base+0x8f4>
   11b1c:	ldr	r0, [r4, #8]
   11b20:	cmp	r6, #0
   11b24:	beq	11b48 <main@@Base+0x8f4>
   11b28:	mov	r1, r6
   11b2c:	ldr	r2, [r0, r1, lsl #2]!
   11b30:	sub	r1, r1, #1
   11b34:	cmp	r1, #0
   11b38:	str	r2, [r0, #4]
   11b3c:	ldr	r0, [r4, #8]
   11b40:	bgt	11b2c <main@@Base+0x8d8>
   11b44:	b	11b4c <main@@Base+0x8f8>
   11b48:	mov	r6, #0
   11b4c:	str	r5, [r0, r6, lsl #2]
   11b50:	ldr	r0, [r4]
   11b54:	add	r0, r0, #1
   11b58:	str	r0, [r4]
   11b5c:	ldr	r5, [r8]
   11b60:	movw	r0, #9472	; 0x2500
   11b64:	mov	r1, r5
   11b68:	movt	r0, #1
   11b6c:	bl	10b3c <printf@plt>
   11b70:	mov	r5, #0
   11b74:	str	r5, [r8]
   11b78:	ldm	r4, {r0, r1}
   11b7c:	cmp	r0, r1
   11b80:	mov	r1, #0
   11b84:	beq	11c2c <main@@Base+0x9d8>
   11b88:	movw	r1, #9139	; 0x23b3
   11b8c:	mov	r0, #0
   11b90:	mov	r7, #0
   11b94:	movt	r1, #1
   11b98:	bl	1207c <elemento_cria@@Base>
   11b9c:	mov	r6, r0
   11ba0:	ldr	r0, [r4]
   11ba4:	cmp	r0, #1
   11ba8:	blt	11be0 <main@@Base+0x98c>
   11bac:	mov	r7, #0
   11bb0:	ldr	r0, [r4, #8]
   11bb4:	mov	r1, r6
   11bb8:	ldr	r0, [r0, r7, lsl #2]
   11bbc:	bl	120c4 <maior_que@@Base>
   11bc0:	cmp	r0, #1
   11bc4:	beq	11be8 <main@@Base+0x994>
   11bc8:	ldr	r0, [r4]
   11bcc:	add	r7, r7, #1
   11bd0:	cmp	r7, r0
   11bd4:	blt	11bb0 <main@@Base+0x95c>
   11bd8:	ldr	r0, [r4, #8]
   11bdc:	b	11bf4 <main@@Base+0x9a0>
   11be0:	ldr	r0, [r4, #8]
   11be4:	b	11c18 <main@@Base+0x9c4>
   11be8:	ldr	r0, [r4, #8]
   11bec:	cmp	r7, #0
   11bf0:	beq	11c14 <main@@Base+0x9c0>
   11bf4:	mov	r1, r7
   11bf8:	ldr	r2, [r0, r1, lsl #2]!
   11bfc:	sub	r1, r1, #1
   11c00:	cmp	r1, #0
   11c04:	str	r2, [r0, #4]
   11c08:	ldr	r0, [r4, #8]
   11c0c:	bgt	11bf8 <main@@Base+0x9a4>
   11c10:	b	11c18 <main@@Base+0x9c4>
   11c14:	mov	r7, #0
   11c18:	str	r6, [r0, r7, lsl #2]
   11c1c:	ldr	r0, [r4]
   11c20:	add	r0, r0, #1
   11c24:	str	r0, [r4]
   11c28:	ldr	r1, [r8]
   11c2c:	movw	r0, #9543	; 0x2547
   11c30:	movt	r0, #1
   11c34:	bl	10b3c <printf@plt>
   11c38:	str	r5, [r8]
   11c3c:	ldm	r4, {r0, r1}
   11c40:	cmp	r0, r1
   11c44:	beq	11ce8 <main@@Base+0xa94>
   11c48:	movw	r1, #9139	; 0x23b3
   11c4c:	mov	r0, #42	; 0x2a
   11c50:	movt	r1, #1
   11c54:	bl	1207c <elemento_cria@@Base>
   11c58:	mov	r5, r0
   11c5c:	ldr	r0, [r4]
   11c60:	cmp	r0, #1
   11c64:	blt	11c9c <main@@Base+0xa48>
   11c68:	mov	r6, #0
   11c6c:	ldr	r0, [r4, #8]
   11c70:	mov	r1, r5
   11c74:	ldr	r0, [r0, r6, lsl #2]
   11c78:	bl	120c4 <maior_que@@Base>
   11c7c:	cmp	r0, #1
   11c80:	beq	11ca4 <main@@Base+0xa50>
   11c84:	ldr	r0, [r4]
   11c88:	add	r6, r6, #1
   11c8c:	cmp	r6, r0
   11c90:	blt	11c6c <main@@Base+0xa18>
   11c94:	ldr	r0, [r4, #8]
   11c98:	b	11cb0 <main@@Base+0xa5c>
   11c9c:	ldr	r0, [r4, #8]
   11ca0:	b	11cd0 <main@@Base+0xa7c>
   11ca4:	ldr	r0, [r4, #8]
   11ca8:	cmp	r6, #0
   11cac:	beq	11cd0 <main@@Base+0xa7c>
   11cb0:	mov	r1, r6
   11cb4:	ldr	r2, [r0, r1, lsl #2]!
   11cb8:	sub	r1, r1, #1
   11cbc:	cmp	r1, #0
   11cc0:	str	r2, [r0, #4]
   11cc4:	ldr	r0, [r4, #8]
   11cc8:	bgt	11cb4 <main@@Base+0xa60>
   11ccc:	b	11cd4 <main@@Base+0xa80>
   11cd0:	mov	r6, #0
   11cd4:	str	r5, [r0, r6, lsl #2]
   11cd8:	ldr	r0, [r4]
   11cdc:	add	r0, r0, #1
   11ce0:	str	r0, [r4]
   11ce4:	ldr	r5, [r8]
   11ce8:	movw	r0, #9295	; 0x244f
   11cec:	mov	r1, r5
   11cf0:	movt	r0, #1
   11cf4:	bl	10b3c <printf@plt>
   11cf8:	mov	r0, #42	; 0x2a
   11cfc:	bl	12020 <vetor_criaHeap@@Base>
   11d00:	movw	r1, #9700	; 0x25e4
   11d04:	mov	r4, r0
   11d08:	movw	r0, #9004	; 0x232c
   11d0c:	movt	r0, #1
   11d10:	movt	r1, #1
   11d14:	bl	10b54 <fopen@plt>
   11d18:	cmp	r0, #0
   11d1c:	beq	11e48 <main@@Base+0xbf4>
   11d20:	mov	r9, r0
   11d24:	bl	10bc0 <feof@plt>
   11d28:	cmp	r0, #0
   11d2c:	bne	11e34 <main@@Base+0xbe0>
   11d30:	movw	r7, #9000	; 0x2328
   11d34:	sub	r6, fp, #36	; 0x24
   11d38:	add	sl, sp, #4
   11d3c:	mov	r5, #0
   11d40:	movt	r7, #1
   11d44:	b	11d78 <main@@Base+0xb24>
   11d48:	ldr	r0, [r4, #8]
   11d4c:	mov	r8, #0
   11d50:	str	r7, [r0, r8, lsl #2]
   11d54:	mov	r7, r5
   11d58:	mov	r5, #0
   11d5c:	ldr	r0, [r4]
   11d60:	add	r0, r0, #1
   11d64:	str	r0, [r4]
   11d68:	mov	r0, r9
   11d6c:	bl	10bc0 <feof@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11e34 <main@@Base+0xbe0>
   11d78:	mov	r0, r9
   11d7c:	mov	r1, r7
   11d80:	mov	r2, r6
   11d84:	bl	10b48 <__isoc99_fscanf@plt>
   11d88:	mov	r0, sl
   11d8c:	mov	r1, #256	; 0x100
   11d90:	mov	r2, r9
   11d94:	bl	10b78 <fgets@plt>
   11d98:	mov	r0, sl
   11d9c:	bl	10bcc <strlen@plt>
   11da0:	add	r0, r0, sl
   11da4:	strb	r5, [r0, #-1]
   11da8:	ldm	r4, {r0, r1}
   11dac:	cmp	r0, r1
   11db0:	beq	11d68 <main@@Base+0xb14>
   11db4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11db8:	mov	r1, sl
   11dbc:	mov	r5, r7
   11dc0:	bl	1207c <elemento_cria@@Base>
   11dc4:	mov	r7, r0
   11dc8:	ldr	r0, [r4]
   11dcc:	cmp	r0, #1
   11dd0:	blt	11d48 <main@@Base+0xaf4>
   11dd4:	mov	r8, #0
   11dd8:	ldr	r0, [r4, #8]
   11ddc:	mov	r1, r7
   11de0:	ldr	r0, [r0, r8, lsl #2]
   11de4:	bl	12130 <maior_que_HeapSort@@Base>
   11de8:	cmp	r0, #1
   11dec:	beq	11e08 <main@@Base+0xbb4>
   11df0:	ldr	r0, [r4]
   11df4:	add	r8, r8, #1
   11df8:	cmp	r8, r0
   11dfc:	blt	11dd8 <main@@Base+0xb84>
   11e00:	ldr	r0, [r4, #8]
   11e04:	b	11e14 <main@@Base+0xbc0>
   11e08:	ldr	r0, [r4, #8]
   11e0c:	cmp	r8, #0
   11e10:	beq	11d4c <main@@Base+0xaf8>
   11e14:	mov	r1, r8
   11e18:	ldr	r2, [r0, r1, lsl #2]!
   11e1c:	sub	r1, r1, #1
   11e20:	cmp	r1, #0
   11e24:	str	r2, [r0, #4]
   11e28:	ldr	r0, [r4, #8]
   11e2c:	bgt	11e18 <main@@Base+0xbc4>
   11e30:	b	11d50 <main@@Base+0xafc>
   11e34:	mov	r0, r9
   11e38:	bl	10be4 <fclose@plt>
   11e3c:	movw	r8, #12392	; 0x3068
   11e40:	movt	r8, #2
   11e44:	b	11e54 <main@@Base+0xc00>
   11e48:	movw	r0, #9614	; 0x258e
   11e4c:	movt	r0, #1
   11e50:	bl	10b90 <puts@plt>
   11e54:	ldr	r1, [r8]
   11e58:	movw	r0, #9365	; 0x2495
   11e5c:	movt	r0, #1
   11e60:	bl	10b3c <printf@plt>
   11e64:	mov	r0, #0
   11e68:	mov	r4, #0
   11e6c:	bl	10b90 <puts@plt>
   11e70:	mov	r0, #0
   11e74:	bl	10b90 <puts@plt>
   11e78:	mov	r0, #0
   11e7c:	bl	10b90 <puts@plt>
   11e80:	mov	r0, #0
   11e84:	bl	10b90 <puts@plt>
   11e88:	mov	r0, #0
   11e8c:	bl	10b90 <puts@plt>
   11e90:	mov	r0, #0
   11e94:	bl	10b90 <puts@plt>
   11e98:	mov	r0, #0
   11e9c:	bl	10b90 <puts@plt>
   11ea0:	mov	r0, #0
   11ea4:	bl	10b90 <puts@plt>
   11ea8:	mov	r0, #0
   11eac:	bl	10b90 <puts@plt>
   11eb0:	mov	r0, #0
   11eb4:	bl	10b90 <puts@plt>
   11eb8:	mov	r0, #0
   11ebc:	bl	10b90 <puts@plt>
   11ec0:	mov	r0, #0
   11ec4:	bl	10b90 <puts@plt>
   11ec8:	mov	r0, #0
   11ecc:	bl	10b90 <puts@plt>
   11ed0:	mov	r0, #0
   11ed4:	bl	10b90 <puts@plt>
   11ed8:	mov	r0, #0
   11edc:	bl	10b90 <puts@plt>
   11ee0:	mov	r0, #0
   11ee4:	bl	10b90 <puts@plt>
   11ee8:	mov	r0, #0
   11eec:	bl	10b90 <puts@plt>
   11ef0:	mov	r0, #0
   11ef4:	bl	10b90 <puts@plt>
   11ef8:	mov	r0, #0
   11efc:	bl	10b90 <puts@plt>
   11f00:	mov	r0, #0
   11f04:	bl	10b90 <puts@plt>
   11f08:	mov	r0, #0
   11f0c:	bl	10b90 <puts@plt>
   11f10:	mov	r0, #0
   11f14:	bl	10b90 <puts@plt>
   11f18:	mov	r0, #0
   11f1c:	bl	10b90 <puts@plt>
   11f20:	mov	r0, #0
   11f24:	bl	10b90 <puts@plt>
   11f28:	mov	r0, #0
   11f2c:	bl	10b90 <puts@plt>
   11f30:	mov	r0, #0
   11f34:	bl	10b90 <puts@plt>
   11f38:	mov	r0, #0
   11f3c:	bl	10b90 <puts@plt>
   11f40:	mov	r0, #0
   11f44:	bl	10b90 <puts@plt>
   11f48:	mov	r0, #0
   11f4c:	bl	10b90 <puts@plt>
   11f50:	mov	r0, #0
   11f54:	bl	10b90 <puts@plt>
   11f58:	mov	r0, #0
   11f5c:	bl	10b90 <puts@plt>
   11f60:	mov	r0, #0
   11f64:	bl	10b90 <puts@plt>
   11f68:	mov	r0, #0
   11f6c:	bl	10b90 <puts@plt>
   11f70:	mov	r0, #0
   11f74:	bl	10b90 <puts@plt>
   11f78:	mov	r0, #0
   11f7c:	bl	10b90 <puts@plt>
   11f80:	mov	r0, #0
   11f84:	bl	10b90 <puts@plt>
   11f88:	mov	r0, #0
   11f8c:	bl	10b90 <puts@plt>
   11f90:	mov	r0, #0
   11f94:	bl	10b90 <puts@plt>
   11f98:	mov	r0, #0
   11f9c:	bl	10b90 <puts@plt>
   11fa0:	mov	r0, #0
   11fa4:	bl	10b90 <puts@plt>
   11fa8:	mov	r0, #0
   11fac:	bl	10b90 <puts@plt>
   11fb0:	mov	r0, #0
   11fb4:	bl	10b90 <puts@plt>
   11fb8:	mov	r0, r4
   11fbc:	sub	sp, fp, #28
   11fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011fc4 <vetor_cria@@Base>:
   11fc4:	push	{r4, r5, fp, lr}
   11fc8:	add	fp, sp, #8
   11fcc:	mov	r5, r0
   11fd0:	mov	r0, #12
   11fd4:	bl	10b9c <malloc@plt>
   11fd8:	cmp	r0, #0
   11fdc:	beq	12014 <vetor_cria@@Base+0x50>
   11fe0:	mov	r4, r0
   11fe4:	mov	r0, #0
   11fe8:	mov	r1, #4
   11fec:	stm	r4, {r0, r5}
   11ff0:	mov	r0, r5
   11ff4:	bl	10b24 <calloc@plt>
   11ff8:	cmp	r0, #0
   11ffc:	str	r0, [r4, #8]
   12000:	beq	1200c <vetor_cria@@Base+0x48>
   12004:	mov	r0, r4
   12008:	pop	{r4, r5, fp, pc}
   1200c:	mov	r0, r4
   12010:	bl	10b6c <free@plt>
   12014:	mov	r4, #0
   12018:	mov	r0, r4
   1201c:	pop	{r4, r5, fp, pc}

00012020 <vetor_criaHeap@@Base>:
   12020:	push	{r4, r5, fp, lr}
   12024:	add	fp, sp, #8
   12028:	mov	r5, r0
   1202c:	mov	r0, #12
   12030:	bl	10b9c <malloc@plt>
   12034:	cmp	r0, #0
   12038:	beq	12070 <vetor_criaHeap@@Base+0x50>
   1203c:	mov	r4, r0
   12040:	mov	r0, #0
   12044:	mov	r1, #4
   12048:	stm	r4, {r0, r5}
   1204c:	add	r0, r5, #1
   12050:	bl	10b24 <calloc@plt>
   12054:	cmp	r0, #0
   12058:	str	r0, [r4, #8]
   1205c:	beq	12068 <vetor_criaHeap@@Base+0x48>
   12060:	mov	r0, r4
   12064:	pop	{r4, r5, fp, pc}
   12068:	mov	r0, r4
   1206c:	bl	10b6c <free@plt>
   12070:	mov	r4, #0
   12074:	mov	r0, r4
   12078:	pop	{r4, r5, fp, pc}

0001207c <elemento_cria@@Base>:
   1207c:	push	{r4, r5, r6, sl, fp, lr}
   12080:	add	fp, sp, #16
   12084:	mov	r5, r0
   12088:	mov	r0, #8
   1208c:	mov	r6, r1
   12090:	bl	10b9c <malloc@plt>
   12094:	cmp	r0, #0
   12098:	beq	120b8 <elemento_cria@@Base+0x3c>
   1209c:	mov	r4, r0
   120a0:	mov	r0, r6
   120a4:	bl	10b84 <strdup@plt>
   120a8:	str	r5, [r4]
   120ac:	str	r0, [r4, #4]
   120b0:	mov	r0, r4
   120b4:	pop	{r4, r5, r6, sl, fp, pc}
   120b8:	mov	r4, #0
   120bc:	mov	r0, r4
   120c0:	pop	{r4, r5, r6, sl, fp, pc}

000120c4 <maior_que@@Base>:
   120c4:	push	{r4, r5, fp, lr}
   120c8:	add	fp, sp, #8
   120cc:	cmp	r0, #0
   120d0:	movne	r5, r1
   120d4:	cmpne	r1, #0
   120d8:	bne	120f0 <maior_que@@Base+0x2c>
   120dc:	movw	r0, #9947	; 0x26db
   120e0:	movt	r0, #1
   120e4:	bl	10b90 <puts@plt>
   120e8:	mov	r0, #0
   120ec:	pop	{r4, r5, fp, pc}
   120f0:	mov	r4, r0
   120f4:	movw	r0, #12384	; 0x3060
   120f8:	movt	r0, #2
   120fc:	ldr	r0, [r0]
   12100:	bl	10b60 <fflush@plt>
   12104:	movw	r0, #12392	; 0x3068
   12108:	movt	r0, #2
   1210c:	ldr	r1, [r0]
   12110:	add	r1, r1, #1
   12114:	str	r1, [r0]
   12118:	mov	r0, #0
   1211c:	ldr	r1, [r5]
   12120:	ldr	r2, [r4]
   12124:	cmp	r2, r1
   12128:	movwgt	r0, #1
   1212c:	pop	{r4, r5, fp, pc}

00012130 <maior_que_HeapSort@@Base>:
   12130:	push	{r4, r5, fp, lr}
   12134:	add	fp, sp, #8
   12138:	cmp	r0, #0
   1213c:	movne	r5, r1
   12140:	cmpne	r1, #0
   12144:	bne	1215c <maior_que_HeapSort@@Base+0x2c>
   12148:	movw	r0, #9947	; 0x26db
   1214c:	movt	r0, #1
   12150:	bl	10b90 <puts@plt>
   12154:	mov	r0, #0
   12158:	pop	{r4, r5, fp, pc}
   1215c:	mov	r4, r0
   12160:	movw	r0, #12384	; 0x3060
   12164:	movt	r0, #2
   12168:	ldr	r0, [r0]
   1216c:	bl	10b60 <fflush@plt>
   12170:	movw	r0, #12392	; 0x3068
   12174:	movt	r0, #2
   12178:	ldr	r1, [r0]
   1217c:	add	r1, r1, #1
   12180:	str	r1, [r0]
   12184:	ldr	r1, [r5, #4]
   12188:	ldr	r0, [r4, #4]
   1218c:	bl	10b30 <strcmp@plt>
   12190:	lsr	r0, r0, #31
   12194:	pop	{r4, r5, fp, pc}

00012198 <vetor_imprime@@Base>:
   12198:	push	{r4, r5, r6, sl, fp, lr}
   1219c:	add	fp, sp, #16
   121a0:	mov	r4, r0
   121a4:	ldr	r0, [r0]
   121a8:	cmp	r0, #1
   121ac:	blt	12218 <vetor_imprime@@Base+0x80>
   121b0:	ldr	r0, [r4, #8]
   121b4:	ldr	r0, [r0]
   121b8:	ldr	r2, [r0]
   121bc:	ldr	r1, [r0, #4]
   121c0:	movw	r0, #9903	; 0x26af
   121c4:	movt	r0, #1
   121c8:	bl	10b3c <printf@plt>
   121cc:	ldr	r0, [r4]
   121d0:	cmp	r0, #2
   121d4:	blt	1220c <vetor_imprime@@Base+0x74>
   121d8:	movw	r5, #9932	; 0x26cc
   121dc:	mov	r6, #1
   121e0:	movt	r5, #1
   121e4:	ldr	r0, [r4, #8]
   121e8:	ldr	r0, [r0, r6, lsl #2]
   121ec:	ldr	r2, [r0]
   121f0:	ldr	r1, [r0, #4]
   121f4:	mov	r0, r5
   121f8:	bl	10b3c <printf@plt>
   121fc:	ldr	r0, [r4]
   12200:	add	r6, r6, #1
   12204:	cmp	r6, r0
   12208:	blt	121e4 <vetor_imprime@@Base+0x4c>
   1220c:	mov	r0, #10
   12210:	pop	{r4, r5, r6, sl, fp, lr}
   12214:	b	10bd8 <putchar@plt>
   12218:	movw	r0, #9958	; 0x26e6
   1221c:	movt	r0, #1
   12220:	pop	{r4, r5, r6, sl, fp, lr}
   12224:	b	10b90 <puts@plt>

00012228 <vetor_imprimeHeap@@Base>:
   12228:	push	{r4, r5, r6, sl, fp, lr}
   1222c:	add	fp, sp, #16
   12230:	mov	r4, r0
   12234:	ldr	r0, [r0]
   12238:	cmp	r0, #1
   1223c:	blt	122a8 <vetor_imprimeHeap@@Base+0x80>
   12240:	ldr	r0, [r4, #8]
   12244:	ldr	r0, [r0, #4]
   12248:	ldr	r2, [r0]
   1224c:	ldr	r1, [r0, #4]
   12250:	movw	r0, #9903	; 0x26af
   12254:	movt	r0, #1
   12258:	bl	10b3c <printf@plt>
   1225c:	ldr	r0, [r4]
   12260:	cmp	r0, #3
   12264:	blt	1229c <vetor_imprimeHeap@@Base+0x74>
   12268:	movw	r5, #9932	; 0x26cc
   1226c:	mov	r6, #2
   12270:	movt	r5, #1
   12274:	ldr	r0, [r4, #8]
   12278:	ldr	r0, [r0, r6, lsl #2]
   1227c:	ldr	r2, [r0]
   12280:	ldr	r1, [r0, #4]
   12284:	mov	r0, r5
   12288:	bl	10b3c <printf@plt>
   1228c:	ldr	r0, [r4]
   12290:	add	r6, r6, #1
   12294:	cmp	r6, r0
   12298:	blt	12274 <vetor_imprimeHeap@@Base+0x4c>
   1229c:	mov	r0, #10
   122a0:	pop	{r4, r5, r6, sl, fp, lr}
   122a4:	b	10bd8 <putchar@plt>
   122a8:	movw	r0, #9958	; 0x26e6
   122ac:	movt	r0, #1
   122b0:	pop	{r4, r5, r6, sl, fp, lr}
   122b4:	b	10b90 <puts@plt>

000122b8 <__libc_csu_init@@Base>:
   122b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   122bc:	mov	r7, r0
   122c0:	ldr	r6, [pc, #72]	; 12310 <__libc_csu_init@@Base+0x58>
   122c4:	ldr	r5, [pc, #72]	; 12314 <__libc_csu_init@@Base+0x5c>
   122c8:	add	r6, pc, r6
   122cc:	add	r5, pc, r5
   122d0:	sub	r6, r6, r5
   122d4:	mov	r8, r1
   122d8:	mov	r9, r2
   122dc:	bl	10b04 <calloc@plt-0x20>
   122e0:	asrs	r6, r6, #2
   122e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   122e8:	mov	r4, #0
   122ec:	add	r4, r4, #1
   122f0:	ldr	r3, [r5], #4
   122f4:	mov	r2, r9
   122f8:	mov	r1, r8
   122fc:	mov	r0, r7
   12300:	blx	r3
   12304:	cmp	r6, r4
   12308:	bne	122ec <__libc_csu_init@@Base+0x34>
   1230c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12310:	andeq	r0, r1, ip, lsr ip
   12314:	andeq	r0, r1, r4, lsr ip

00012318 <__libc_csu_fini@@Base>:
   12318:	bx	lr

Disassembly of section .fini:

0001231c <.fini>:
   1231c:	push	{r3, lr}
   12320:	pop	{r3, pc}
