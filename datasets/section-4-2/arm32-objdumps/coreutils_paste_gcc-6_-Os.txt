
../repos/coreutils/src/paste:     file format elf32-littlearm


Disassembly of section .init:

00010c34 <.init>:
   10c34:	push	{r3, lr}
   10c38:	bl	11250 <putchar_unlocked@plt+0x3b0>
   10c3c:	pop	{r3, pc}

Disassembly of section .plt:

00010c40 <calloc@plt-0x14>:
   10c40:	push	{lr}		; (str lr, [sp, #-4]!)
   10c44:	ldr	lr, [pc, #4]	; 10c50 <calloc@plt-0x4>
   10c48:	add	lr, pc, lr
   10c4c:	ldr	pc, [lr, #8]!
   10c50:			; <UNDEFINED> instruction: 0x000153b0

00010c54 <calloc@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c60 <fputs_unlocked@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #936]!	; 0x3a8

00010c6c <raise@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #928]!	; 0x3a0

00010c78 <strcmp@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #920]!	; 0x398

00010c84 <posix_fadvise64@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #912]!	; 0x390

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #904]!	; 0x388

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #896]!	; 0x380

00010ca8 <_exit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #888]!	; 0x378

00010cb4 <memcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #880]!	; 0x370

00010cc0 <mbsinit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #872]!	; 0x368

00010ccc <fwrite_unlocked@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #864]!	; 0x360

00010cd8 <memcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #856]!	; 0x358

00010ce4 <fputc_unlocked@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #848]!	; 0x350

00010cf0 <getc_unlocked@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #840]!	; 0x348

00010cfc <dcgettext@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #832]!	; 0x340

00010d08 <realloc@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #824]!	; 0x338

00010d14 <textdomain@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #816]!	; 0x330

00010d20 <iswprint@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #808]!	; 0x328

00010d2c <lseek64@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #800]!	; 0x320

00010d38 <__ctype_get_mb_cur_max@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #792]!	; 0x318

00010d44 <__fpending@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #784]!	; 0x310

00010d50 <ferror_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #776]!	; 0x308

00010d5c <mbrtowc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #768]!	; 0x300

00010d68 <error@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #760]!	; 0x2f8

00010d74 <malloc@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d80 <__libc_start_main@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #744]!	; 0x2e8

00010d8c <__freading@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #736]!	; 0x2e0

00010d98 <__gmon_start__@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #728]!	; 0x2d8

00010da4 <getopt_long@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #720]!	; 0x2d0

00010db0 <__ctype_b_loc@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dbc <exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc8 <strlen@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dd4 <__errno_location@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #688]!	; 0x2b0

00010de0 <__cxa_atexit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dec <memset@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #672]!	; 0x2a0

00010df8 <__printf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #664]!	; 0x298

00010e04 <fileno@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #656]!	; 0x290

00010e10 <__fprintf_chk@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #648]!	; 0x288

00010e1c <fclose@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #640]!	; 0x280

00010e28 <fseeko64@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #632]!	; 0x278

00010e34 <setlocale@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #624]!	; 0x270

00010e40 <strrchr@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #616]!	; 0x268

00010e4c <nl_langinfo@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #608]!	; 0x260

00010e58 <clearerr_unlocked@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #600]!	; 0x258

00010e64 <fopen64@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #592]!	; 0x250

00010e70 <bindtextdomain@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #584]!	; 0x248

00010e7c <fputs@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #576]!	; 0x240

00010e88 <strncmp@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #568]!	; 0x238

00010e94 <abort@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #560]!	; 0x230

00010ea0 <putchar_unlocked@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #552]!	; 0x228

Disassembly of section .text:

00010eac <.text>:
   10eac:	push	{r4, lr}
   10eb0:	bl	10dd4 <__errno_location@plt>
   10eb4:	mov	r2, #5
   10eb8:	ldr	r1, [pc, #24]	; 10ed8 <putchar_unlocked@plt+0x38>
   10ebc:	ldr	r4, [r0]
   10ec0:	mov	r0, #0
   10ec4:	bl	10cfc <dcgettext@plt>
   10ec8:	mov	r1, r4
   10ecc:	mov	r2, r0
   10ed0:	mov	r0, #1
   10ed4:	bl	10d68 <error@plt>
   10ed8:	andeq	r4, r1, r8, lsr r7
   10edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ee0:	mov	r6, r0
   10ee4:	sub	sp, sp, #28
   10ee8:	ldr	r0, [r1]
   10eec:	mov	r7, r1
   10ef0:	bl	11e9c <putchar_unlocked@plt+0xffc>
   10ef4:	ldr	r1, [pc, #700]	; 111b8 <putchar_unlocked@plt+0x318>
   10ef8:	mov	r0, #6
   10efc:	bl	10e34 <setlocale@plt>
   10f00:	ldr	r1, [pc, #692]	; 111bc <putchar_unlocked@plt+0x31c>
   10f04:	ldr	r0, [pc, #692]	; 111c0 <putchar_unlocked@plt+0x320>
   10f08:	bl	10e70 <bindtextdomain@plt>
   10f0c:	ldr	r4, [pc, #688]	; 111c4 <putchar_unlocked@plt+0x324>
   10f10:	ldr	r0, [pc, #680]	; 111c0 <putchar_unlocked@plt+0x320>
   10f14:	ldr	r5, [pc, #684]	; 111c8 <putchar_unlocked@plt+0x328>
   10f18:	ldr	r9, [pc, #684]	; 111cc <putchar_unlocked@plt+0x32c>
   10f1c:	ldr	sl, [pc, #684]	; 111d0 <putchar_unlocked@plt+0x330>
   10f20:	ldr	fp, [pc, #684]	; 111d4 <putchar_unlocked@plt+0x334>
   10f24:	bl	10d14 <textdomain@plt>
   10f28:	ldr	r0, [pc, #680]	; 111d8 <putchar_unlocked@plt+0x338>
   10f2c:	bl	1467c <putchar_unlocked@plt+0x37dc>
   10f30:	mov	r3, #0
   10f34:	strb	r3, [r4]
   10f38:	strb	r3, [r4, #12]
   10f3c:	mov	r8, #0
   10f40:	str	r8, [sp]
   10f44:	ldr	r3, [pc, #656]	; 111dc <putchar_unlocked@plt+0x33c>
   10f48:	ldr	r2, [pc, #656]	; 111e0 <putchar_unlocked@plt+0x340>
   10f4c:	mov	r1, r7
   10f50:	mov	r0, r6
   10f54:	bl	10da4 <getopt_long@plt>
   10f58:	cmn	r0, #1
   10f5c:	bne	10ff8 <putchar_unlocked@plt+0x158>
   10f60:	ldr	r2, [pc, #636]	; 111e4 <putchar_unlocked@plt+0x344>
   10f64:	mov	r0, r5
   10f68:	str	r2, [sp, #20]
   10f6c:	ldr	r3, [r2]
   10f70:	mov	r8, #11
   10f74:	subs	r6, r6, r3
   10f78:	moveq	r6, #1
   10f7c:	ldreq	r2, [pc, #612]	; 111e8 <putchar_unlocked@plt+0x348>
   10f80:	mov	r9, #10
   10f84:	streq	r2, [r7, r3, lsl #2]
   10f88:	bl	13e5c <putchar_unlocked@plt+0x2fbc>
   10f8c:	mov	sl, #0
   10f90:	mov	r2, r5
   10f94:	mov	r1, #12
   10f98:	mov	ip, #13
   10f9c:	mov	lr, #9
   10fa0:	mov	fp, #8
   10fa4:	str	r0, [r4, #4]
   10fa8:	ldrb	r3, [r2]
   10fac:	cmp	r3, #0
   10fb0:	bne	11090 <putchar_unlocked@plt+0x1f0>
   10fb4:	cmp	r3, #0
   10fb8:	str	r0, [r4, #8]
   10fbc:	beq	11140 <putchar_unlocked@plt+0x2a0>
   10fc0:	mov	r2, #5
   10fc4:	ldr	r1, [pc, #544]	; 111ec <putchar_unlocked@plt+0x34c>
   10fc8:	mov	r0, #0
   10fcc:	bl	10cfc <dcgettext@plt>
   10fd0:	mov	r2, r5
   10fd4:	mov	r1, #6
   10fd8:	mov	r4, r0
   10fdc:	mov	r0, #0
   10fe0:	bl	1338c <putchar_unlocked@plt+0x24ec>
   10fe4:	mov	r2, r4
   10fe8:	mov	r1, #0
   10fec:	mov	r3, r0
   10ff0:	mov	r0, #1
   10ff4:	bl	10d68 <error@plt>
   10ff8:	cmp	r0, #100	; 0x64
   10ffc:	beq	11038 <putchar_unlocked@plt+0x198>
   11000:	bgt	11020 <putchar_unlocked@plt+0x180>
   11004:	cmn	r0, #3
   11008:	beq	11058 <putchar_unlocked@plt+0x1b8>
   1100c:	cmn	r0, #2
   11010:	moveq	r0, r8
   11014:	beq	1101c <putchar_unlocked@plt+0x17c>
   11018:	mov	r0, #1
   1101c:	bl	118e8 <putchar_unlocked@plt+0xa48>
   11020:	cmp	r0, #115	; 0x73
   11024:	beq	1104c <putchar_unlocked@plt+0x1ac>
   11028:	cmp	r0, #122	; 0x7a
   1102c:	bne	11018 <putchar_unlocked@plt+0x178>
   11030:	strb	r8, [fp]
   11034:	b	10f3c <putchar_unlocked@plt+0x9c>
   11038:	ldr	r5, [r9]
   1103c:	ldrb	r3, [r5]
   11040:	cmp	r3, #0
   11044:	moveq	r5, sl
   11048:	b	10f3c <putchar_unlocked@plt+0x9c>
   1104c:	mov	r3, #1
   11050:	strb	r3, [r4, #12]
   11054:	b	10f3c <putchar_unlocked@plt+0x9c>
   11058:	ldr	r3, [pc, #400]	; 111f0 <putchar_unlocked@plt+0x350>
   1105c:	ldr	r0, [pc, #400]	; 111f4 <putchar_unlocked@plt+0x354>
   11060:	str	r3, [sp, #4]
   11064:	ldr	r3, [pc, #396]	; 111f8 <putchar_unlocked@plt+0x358>
   11068:	str	r8, [sp, #8]
   1106c:	str	r3, [sp]
   11070:	ldr	r3, [pc, #388]	; 111fc <putchar_unlocked@plt+0x35c>
   11074:	ldr	r0, [r0]
   11078:	ldr	r2, [pc, #384]	; 11200 <putchar_unlocked@plt+0x360>
   1107c:	ldr	r3, [r3]
   11080:	ldr	r1, [pc, #380]	; 11204 <putchar_unlocked@plt+0x364>
   11084:	bl	1391c <putchar_unlocked@plt+0x2a7c>
   11088:	mov	r0, r8
   1108c:	bl	10dbc <exit@plt>
   11090:	cmp	r3, #92	; 0x5c
   11094:	addne	r2, r2, #1
   11098:	strbne	r3, [r0]
   1109c:	bne	110e4 <putchar_unlocked@plt+0x244>
   110a0:	ldrb	r3, [r2, #1]
   110a4:	cmp	r3, #102	; 0x66
   110a8:	beq	11130 <putchar_unlocked@plt+0x290>
   110ac:	bhi	110ec <putchar_unlocked@plt+0x24c>
   110b0:	cmp	r3, #48	; 0x30
   110b4:	beq	11128 <putchar_unlocked@plt+0x288>
   110b8:	bhi	110cc <putchar_unlocked@plt+0x22c>
   110bc:	cmp	r3, #0
   110c0:	beq	11138 <putchar_unlocked@plt+0x298>
   110c4:	strb	r3, [r0]
   110c8:	b	110e0 <putchar_unlocked@plt+0x240>
   110cc:	cmp	r3, #92	; 0x5c
   110d0:	beq	110c4 <putchar_unlocked@plt+0x224>
   110d4:	cmp	r3, #98	; 0x62
   110d8:	strbeq	fp, [r0]
   110dc:	bne	110c4 <putchar_unlocked@plt+0x224>
   110e0:	add	r2, r2, #2
   110e4:	add	r0, r0, #1
   110e8:	b	10fa8 <putchar_unlocked@plt+0x108>
   110ec:	cmp	r3, #114	; 0x72
   110f0:	strbeq	ip, [r0]
   110f4:	beq	110e0 <putchar_unlocked@plt+0x240>
   110f8:	bhi	1110c <putchar_unlocked@plt+0x26c>
   110fc:	cmp	r3, #110	; 0x6e
   11100:	strbeq	r9, [r0]
   11104:	beq	110e0 <putchar_unlocked@plt+0x240>
   11108:	b	110c4 <putchar_unlocked@plt+0x224>
   1110c:	cmp	r3, #116	; 0x74
   11110:	strbeq	lr, [r0]
   11114:	beq	110e0 <putchar_unlocked@plt+0x240>
   11118:	cmp	r3, #118	; 0x76
   1111c:	strbeq	r8, [r0]
   11120:	beq	110e0 <putchar_unlocked@plt+0x240>
   11124:	b	110c4 <putchar_unlocked@plt+0x224>
   11128:	strb	sl, [r0]
   1112c:	b	110e0 <putchar_unlocked@plt+0x240>
   11130:	strb	r1, [r0]
   11134:	b	110e0 <putchar_unlocked@plt+0x240>
   11138:	mov	r3, #1
   1113c:	b	10fb4 <putchar_unlocked@plt+0x114>
   11140:	ldrb	r1, [r4, #12]
   11144:	ldr	r2, [pc, #188]	; 11208 <putchar_unlocked@plt+0x368>
   11148:	ldr	r3, [pc, #188]	; 1120c <putchar_unlocked@plt+0x36c>
   1114c:	cmp	r1, #0
   11150:	moveq	r3, r2
   11154:	ldr	r2, [sp, #20]
   11158:	mov	r0, r6
   1115c:	ldr	r1, [r2]
   11160:	add	r1, r7, r1, lsl #2
   11164:	blx	r3
   11168:	mov	r5, r0
   1116c:	ldr	r0, [r4, #4]
   11170:	bl	11db4 <putchar_unlocked@plt+0xf14>
   11174:	ldrb	r3, [r4]
   11178:	cmp	r3, #0
   1117c:	beq	111a8 <putchar_unlocked@plt+0x308>
   11180:	ldr	r3, [pc, #136]	; 11210 <putchar_unlocked@plt+0x370>
   11184:	ldr	r0, [r3]
   11188:	bl	11cbc <putchar_unlocked@plt+0xe1c>
   1118c:	cmn	r0, #1
   11190:	bne	111a8 <putchar_unlocked@plt+0x308>
   11194:	bl	10dd4 <__errno_location@plt>
   11198:	ldr	r2, [pc, #72]	; 111e8 <putchar_unlocked@plt+0x348>
   1119c:	ldr	r1, [r0]
   111a0:	mov	r0, #1
   111a4:	bl	10d68 <error@plt>
   111a8:	eor	r0, r5, #1
   111ac:	uxtb	r0, r0
   111b0:	add	sp, sp, #28
   111b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111b8:	andeq	r4, r1, r1, asr #21
   111bc:	andeq	r4, r1, r2, asr #21
   111c0:	andeq	r4, r1, sl, lsl sl
   111c4:	andeq	r6, r2, r8, asr r1
   111c8:	andeq	r4, r1, r0, asr #21
   111cc:	andeq	r6, r2, r0, asr r1
   111d0:			; <UNDEFINED> instruction: 0x00014abd
   111d4:	andeq	r6, r2, r0, ror #1
   111d8:	muleq	r1, ip, fp
   111dc:	ldrdeq	r4, [r1], -r8
   111e0:	strdeq	r4, [r1], -r9
   111e4:	andeq	r6, r2, r8, lsr r1
   111e8:	andeq	r4, r1, r8, lsl ip
   111ec:	strdeq	r4, [r1], -lr
   111f0:	ldrdeq	r4, [r1], -sl
   111f4:	andeq	r6, r2, ip, asr #2
   111f8:	andeq	r4, r1, sl, ror #21
   111fc:	andeq	r6, r2, r4, ror #1
   11200:	andeq	r4, r1, r6, lsl sl
   11204:	andeq	r4, r1, sp, asr r7
   11208:	andeq	r1, r1, r0, asr r3
   1120c:	andeq	r1, r1, ip, lsr r7
   11210:	andeq	r6, r2, r8, asr #2
   11214:	mov	fp, #0
   11218:	mov	lr, #0
   1121c:	pop	{r1}		; (ldr r1, [sp], #4)
   11220:	mov	r2, sp
   11224:	push	{r2}		; (str r2, [sp, #-4]!)
   11228:	push	{r0}		; (str r0, [sp, #-4]!)
   1122c:	ldr	ip, [pc, #16]	; 11244 <putchar_unlocked@plt+0x3a4>
   11230:	push	{ip}		; (str ip, [sp, #-4]!)
   11234:	ldr	r0, [pc, #12]	; 11248 <putchar_unlocked@plt+0x3a8>
   11238:	ldr	r3, [pc, #12]	; 1124c <putchar_unlocked@plt+0x3ac>
   1123c:	bl	10d80 <__libc_start_main@plt>
   11240:	bl	10e94 <abort@plt>
   11244:	andeq	r4, r1, r8, ror r6
   11248:	ldrdeq	r0, [r1], -ip
   1124c:	andeq	r4, r1, r8, lsl r6
   11250:	ldr	r3, [pc, #20]	; 1126c <putchar_unlocked@plt+0x3cc>
   11254:	ldr	r2, [pc, #20]	; 11270 <putchar_unlocked@plt+0x3d0>
   11258:	add	r3, pc, r3
   1125c:	ldr	r2, [r3, r2]
   11260:	cmp	r2, #0
   11264:	bxeq	lr
   11268:	b	10d98 <__gmon_start__@plt>
   1126c:	andeq	r4, r1, r0, lsr #27
   11270:	ldrdeq	r0, [r0], -r4
   11274:	ldr	r3, [pc, #28]	; 11298 <putchar_unlocked@plt+0x3f8>
   11278:	ldr	r0, [pc, #28]	; 1129c <putchar_unlocked@plt+0x3fc>
   1127c:	sub	r3, r3, r0
   11280:	cmp	r3, #6
   11284:	bxls	lr
   11288:	ldr	r3, [pc, #16]	; 112a0 <putchar_unlocked@plt+0x400>
   1128c:	cmp	r3, #0
   11290:	bxeq	lr
   11294:	bx	r3
   11298:	andeq	r6, r2, pc, lsr #2
   1129c:	andeq	r6, r2, ip, lsr #2
   112a0:	andeq	r0, r0, r0
   112a4:	ldr	r1, [pc, #36]	; 112d0 <putchar_unlocked@plt+0x430>
   112a8:	ldr	r0, [pc, #36]	; 112d4 <putchar_unlocked@plt+0x434>
   112ac:	sub	r1, r1, r0
   112b0:	asr	r1, r1, #2
   112b4:	add	r1, r1, r1, lsr #31
   112b8:	asrs	r1, r1, #1
   112bc:	bxeq	lr
   112c0:	ldr	r3, [pc, #16]	; 112d8 <putchar_unlocked@plt+0x438>
   112c4:	cmp	r3, #0
   112c8:	bxeq	lr
   112cc:	bx	r3
   112d0:	andeq	r6, r2, ip, lsr #2
   112d4:	andeq	r6, r2, ip, lsr #2
   112d8:	andeq	r0, r0, r0
   112dc:	push	{r4, lr}
   112e0:	ldr	r4, [pc, #24]	; 11300 <putchar_unlocked@plt+0x460>
   112e4:	ldrb	r3, [r4]
   112e8:	cmp	r3, #0
   112ec:	popne	{r4, pc}
   112f0:	bl	11274 <putchar_unlocked@plt+0x3d4>
   112f4:	mov	r3, #1
   112f8:	strb	r3, [r4]
   112fc:	pop	{r4, pc}
   11300:	andeq	r6, r2, r4, asr r1
   11304:	ldr	r0, [pc, #40]	; 11334 <putchar_unlocked@plt+0x494>
   11308:	ldr	r3, [r0]
   1130c:	cmp	r3, #0
   11310:	bne	11318 <putchar_unlocked@plt+0x478>
   11314:	b	112a4 <putchar_unlocked@plt+0x404>
   11318:	ldr	r3, [pc, #24]	; 11338 <putchar_unlocked@plt+0x498>
   1131c:	cmp	r3, #0
   11320:	beq	11314 <putchar_unlocked@plt+0x474>
   11324:	push	{r4, lr}
   11328:	blx	r3
   1132c:	pop	{r4, lr}
   11330:	b	112a4 <putchar_unlocked@plt+0x404>
   11334:	andeq	r5, r2, r4, lsl pc
   11338:	andeq	r0, r0, r0
   1133c:	push	{r4, lr}
   11340:	bl	10ea0 <putchar_unlocked@plt>
   11344:	cmp	r0, #0
   11348:	popge	{r4, pc}
   1134c:	bl	10eac <putchar_unlocked@plt+0xc>
   11350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11354:	sub	sp, sp, #36	; 0x24
   11358:	mov	sl, r0
   1135c:	add	r0, r0, #2
   11360:	str	r1, [sp, #28]
   11364:	bl	139e4 <putchar_unlocked@plt+0x2b44>
   11368:	mov	r1, #4
   1136c:	ldr	r6, [pc, #936]	; 1171c <putchar_unlocked@plt+0x87c>
   11370:	ldr	r7, [pc, #936]	; 11720 <putchar_unlocked@plt+0x880>
   11374:	ldr	r9, [pc, #936]	; 11724 <putchar_unlocked@plt+0x884>
   11378:	mov	r8, #0
   1137c:	str	r0, [sp, #8]
   11380:	add	r0, sl, #1
   11384:	bl	13abc <putchar_unlocked@plt+0x2c1c>
   11388:	ldr	r5, [sp, #28]
   1138c:	str	r8, [sp]
   11390:	mov	r4, r0
   11394:	str	r0, [sp, #20]
   11398:	ldr	r3, [sp]
   1139c:	cmp	r3, sl
   113a0:	bne	113dc <putchar_unlocked@plt+0x53c>
   113a4:	cmp	r8, #0
   113a8:	beq	11714 <putchar_unlocked@plt+0x874>
   113ac:	ldr	r3, [pc, #876]	; 11720 <putchar_unlocked@plt+0x880>
   113b0:	ldrb	r3, [r3]
   113b4:	cmp	r3, #0
   113b8:	beq	114bc <putchar_unlocked@plt+0x61c>
   113bc:	mov	r2, #5
   113c0:	ldr	r1, [pc, #864]	; 11728 <putchar_unlocked@plt+0x888>
   113c4:	mov	r0, #0
   113c8:	bl	10cfc <dcgettext@plt>
   113cc:	mov	r1, #0
   113d0:	mov	r2, r0
   113d4:	mov	r0, #1
   113d8:	bl	10d68 <error@plt>
   113dc:	str	r5, [sp, #4]
   113e0:	ldr	fp, [r5], #4
   113e4:	mov	r1, r6
   113e8:	mov	r0, fp
   113ec:	bl	10c78 <strcmp@plt>
   113f0:	cmp	r0, #0
   113f4:	bne	1141c <putchar_unlocked@plt+0x57c>
   113f8:	mov	r3, #1
   113fc:	strb	r3, [r7]
   11400:	ldr	r3, [r9]
   11404:	str	r3, [r4]
   11408:	ldr	r3, [sp]
   1140c:	add	r4, r4, #4
   11410:	add	r3, r3, #1
   11414:	str	r3, [sp]
   11418:	b	11398 <putchar_unlocked@plt+0x4f8>
   1141c:	mov	r0, fp
   11420:	ldr	r1, [pc, #772]	; 1172c <putchar_unlocked@plt+0x88c>
   11424:	bl	10e64 <fopen64@plt>
   11428:	cmp	r0, #0
   1142c:	mov	fp, r0
   11430:	str	r0, [r4]
   11434:	bne	11468 <putchar_unlocked@plt+0x5c8>
   11438:	bl	10dd4 <__errno_location@plt>
   1143c:	ldr	r3, [sp, #4]
   11440:	mov	r1, #3
   11444:	ldr	r2, [r3]
   11448:	ldr	r4, [r0]
   1144c:	mov	r0, fp
   11450:	bl	1338c <putchar_unlocked@plt+0x24ec>
   11454:	ldr	r2, [pc, #724]	; 11730 <putchar_unlocked@plt+0x890>
   11458:	mov	r1, r4
   1145c:	mov	r3, r0
   11460:	mov	r0, #1
   11464:	bl	10d68 <error@plt>
   11468:	bl	10e04 <fileno@plt>
   1146c:	mov	r1, #2
   11470:	cmp	r0, #0
   11474:	ldr	r0, [r4]
   11478:	moveq	r8, #1
   1147c:	bl	11c8c <putchar_unlocked@plt+0xdec>
   11480:	b	11408 <putchar_unlocked@plt+0x568>
   11484:	ldr	r3, [pc, #660]	; 11720 <putchar_unlocked@plt+0x880>
   11488:	mov	r7, #0
   1148c:	ldr	r9, [sp, #20]
   11490:	ldr	r6, [r3, #4]
   11494:	mov	r5, r7
   11498:	mov	fp, r3
   1149c:	str	r7, [sp, #4]
   114a0:	ldr	r3, [sp]
   114a4:	cmp	sl, #0
   114a8:	cmpne	r3, r7
   114ac:	movhi	r3, #1
   114b0:	movls	r3, #0
   114b4:	str	r3, [sp, #12]
   114b8:	bhi	114e0 <putchar_unlocked@plt+0x640>
   114bc:	cmp	sl, #0
   114c0:	bne	11484 <putchar_unlocked@plt+0x5e4>
   114c4:	ldr	r0, [sp, #20]
   114c8:	bl	11db4 <putchar_unlocked@plt+0xf14>
   114cc:	ldr	r0, [sp, #8]
   114d0:	bl	11db4 <putchar_unlocked@plt+0xf14>
   114d4:	mov	r0, r8
   114d8:	add	sp, sp, #36	; 0x24
   114dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114e0:	ldr	r0, [r9]
   114e4:	cmp	r0, #0
   114e8:	beq	11548 <putchar_unlocked@plt+0x6a8>
   114ec:	bl	10cf0 <getc_unlocked@plt>
   114f0:	mov	r4, r0
   114f4:	bl	10dd4 <__errno_location@plt>
   114f8:	cmp	r5, #0
   114fc:	cmnne	r4, #1
   11500:	ldr	r3, [r0]
   11504:	str	r0, [sp, #24]
   11508:	str	r3, [sp, #16]
   1150c:	beq	11534 <putchar_unlocked@plt+0x694>
   11510:	ldr	r3, [pc, #540]	; 11734 <putchar_unlocked@plt+0x894>
   11514:	mov	r2, r5
   11518:	mov	r1, #1
   1151c:	ldr	r3, [r3]
   11520:	ldr	r0, [sp, #8]
   11524:	bl	10ccc <fwrite_unlocked@plt>
   11528:	cmp	r5, r0
   1152c:	bne	11620 <putchar_unlocked@plt+0x780>
   11530:	mov	r5, #0
   11534:	mov	r3, #0
   11538:	cmn	r4, #1
   1153c:	bne	11624 <putchar_unlocked@plt+0x784>
   11540:	cmp	r3, #0
   11544:	bne	116a4 <putchar_unlocked@plt+0x804>
   11548:	ldr	r0, [r9]
   1154c:	cmp	r0, #0
   11550:	beq	115c0 <putchar_unlocked@plt+0x720>
   11554:	bl	10d50 <ferror_unlocked@plt>
   11558:	ldr	r3, [pc, #452]	; 11724 <putchar_unlocked@plt+0x884>
   1155c:	ldr	r4, [sp, #16]
   11560:	ldr	r3, [r3]
   11564:	cmp	r0, #0
   11568:	ldr	r0, [r9]
   1156c:	moveq	r4, #0
   11570:	cmp	r0, r3
   11574:	bne	1165c <putchar_unlocked@plt+0x7bc>
   11578:	bl	10e58 <clearerr_unlocked@plt>
   1157c:	cmp	r4, #0
   11580:	beq	115b0 <putchar_unlocked@plt+0x710>
   11584:	ldr	r3, [sp, #28]
   11588:	mov	r1, #3
   1158c:	mov	r0, #0
   11590:	ldr	r2, [r3, r7, lsl #2]
   11594:	bl	1338c <putchar_unlocked@plt+0x24ec>
   11598:	ldr	r2, [pc, #400]	; 11730 <putchar_unlocked@plt+0x890>
   1159c:	mov	r1, r4
   115a0:	mov	r8, #0
   115a4:	mov	r3, r0
   115a8:	mov	r0, #0
   115ac:	bl	10d68 <error@plt>
   115b0:	sub	sl, sl, #1
   115b4:	mov	r3, #0
   115b8:	str	r3, [r9]
   115bc:	str	r4, [sp, #16]
   115c0:	ldr	r2, [sp]
   115c4:	add	r3, r7, #1
   115c8:	cmp	r2, r3
   115cc:	bne	1167c <putchar_unlocked@plt+0x7dc>
   115d0:	ldr	r3, [sp, #4]
   115d4:	cmp	r3, #0
   115d8:	beq	11614 <putchar_unlocked@plt+0x774>
   115dc:	cmp	r5, #0
   115e0:	beq	11604 <putchar_unlocked@plt+0x764>
   115e4:	ldr	r3, [pc, #328]	; 11734 <putchar_unlocked@plt+0x894>
   115e8:	mov	r2, r5
   115ec:	mov	r1, #1
   115f0:	ldr	r3, [r3]
   115f4:	ldr	r0, [sp, #8]
   115f8:	bl	10ccc <fwrite_unlocked@plt>
   115fc:	cmp	r0, r5
   11600:	bne	11620 <putchar_unlocked@plt+0x780>
   11604:	ldr	r3, [pc, #300]	; 11738 <putchar_unlocked@plt+0x898>
   11608:	mov	r5, #0
   1160c:	ldrb	r0, [r3]
   11610:	bl	1133c <putchar_unlocked@plt+0x49c>
   11614:	add	r7, r7, #1
   11618:	add	r9, r9, #4
   1161c:	b	114a0 <putchar_unlocked@plt+0x600>
   11620:	bl	10eac <putchar_unlocked@plt+0xc>
   11624:	ldr	r3, [pc, #268]	; 11738 <putchar_unlocked@plt+0x898>
   11628:	ldrb	r3, [r3]
   1162c:	cmp	r4, r3
   11630:	beq	116a4 <putchar_unlocked@plt+0x804>
   11634:	uxtb	r0, r4
   11638:	bl	1133c <putchar_unlocked@plt+0x49c>
   1163c:	ldr	r0, [r9]
   11640:	bl	10cf0 <getc_unlocked@plt>
   11644:	ldr	r3, [sp, #24]
   11648:	ldr	r3, [r3]
   1164c:	str	r3, [sp, #16]
   11650:	ldr	r3, [sp, #12]
   11654:	mov	r4, r0
   11658:	b	11538 <putchar_unlocked@plt+0x698>
   1165c:	bl	11cbc <putchar_unlocked@plt+0xe1c>
   11660:	cmn	r0, #1
   11664:	bne	1157c <putchar_unlocked@plt+0x6dc>
   11668:	cmp	r4, #0
   1166c:	bne	11584 <putchar_unlocked@plt+0x6e4>
   11670:	bl	10dd4 <__errno_location@plt>
   11674:	ldr	r4, [r0]
   11678:	b	1157c <putchar_unlocked@plt+0x6dc>
   1167c:	ldrb	r3, [r6]
   11680:	add	r6, r6, #1
   11684:	cmp	r3, #0
   11688:	ldrne	r2, [sp, #8]
   1168c:	strbne	r3, [r2, r5]
   11690:	ldr	r3, [fp, #8]
   11694:	addne	r5, r5, #1
   11698:	cmp	r6, r3
   1169c:	ldreq	r6, [fp, #4]
   116a0:	b	11614 <putchar_unlocked@plt+0x774>
   116a4:	ldr	r2, [sp]
   116a8:	add	r3, r7, #1
   116ac:	cmp	r2, r3
   116b0:	beq	116fc <putchar_unlocked@plt+0x85c>
   116b4:	ldr	r3, [pc, #124]	; 11738 <putchar_unlocked@plt+0x898>
   116b8:	ldrb	r3, [r3]
   116bc:	cmp	r3, r4
   116c0:	cmnne	r4, #1
   116c4:	beq	116d0 <putchar_unlocked@plt+0x830>
   116c8:	uxtb	r0, r4
   116cc:	bl	1133c <putchar_unlocked@plt+0x49c>
   116d0:	ldrb	r0, [r6]
   116d4:	cmp	r0, #0
   116d8:	beq	116e0 <putchar_unlocked@plt+0x840>
   116dc:	bl	1133c <putchar_unlocked@plt+0x49c>
   116e0:	ldr	r3, [fp, #8]
   116e4:	add	r6, r6, #1
   116e8:	cmp	r6, r3
   116ec:	ldreq	r6, [fp, #4]
   116f0:	ldr	r3, [sp, #12]
   116f4:	str	r3, [sp, #4]
   116f8:	b	11614 <putchar_unlocked@plt+0x774>
   116fc:	cmn	r4, #1
   11700:	uxtbne	r0, r4
   11704:	ldreq	r3, [pc, #44]	; 11738 <putchar_unlocked@plt+0x898>
   11708:	ldrbeq	r0, [r3]
   1170c:	bl	1133c <putchar_unlocked@plt+0x49c>
   11710:	b	116f0 <putchar_unlocked@plt+0x850>
   11714:	mov	r8, #1
   11718:	b	114bc <putchar_unlocked@plt+0x61c>
   1171c:	andeq	r4, r1, r8, lsl ip
   11720:	andeq	r6, r2, r8, asr r1
   11724:	andeq	r6, r2, r8, asr #2
   11728:	andeq	r4, r1, r4, asr #14
   1172c:	andeq	r4, r1, r2, asr #14
   11730:	andeq	r4, r1, pc, lsr #22
   11734:	andeq	r6, r2, ip, asr #2
   11738:	andeq	r6, r2, r0, ror #1
   1173c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11740:	mov	r9, r0
   11744:	ldr	r7, [pc, #388]	; 118d0 <putchar_unlocked@plt+0xa30>
   11748:	sub	r6, r1, #4
   1174c:	mov	r8, #1
   11750:	cmp	r9, #0
   11754:	bne	11764 <putchar_unlocked@plt+0x8c4>
   11758:	mov	r0, r8
   1175c:	add	sp, sp, #12
   11760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11764:	ldr	r4, [r6, #4]!
   11768:	ldr	r1, [pc, #356]	; 118d4 <putchar_unlocked@plt+0xa34>
   1176c:	mov	r0, r4
   11770:	bl	10c78 <strcmp@plt>
   11774:	subs	r3, r0, #0
   11778:	str	r3, [sp, #4]
   1177c:	bne	1181c <putchar_unlocked@plt+0x97c>
   11780:	mov	r3, #1
   11784:	strb	r3, [r7]
   11788:	ldr	r3, [pc, #328]	; 118d8 <putchar_unlocked@plt+0xa38>
   1178c:	ldr	r4, [r3]
   11790:	mov	r0, r4
   11794:	ldr	r5, [r7, #4]
   11798:	bl	10cf0 <getc_unlocked@plt>
   1179c:	mov	fp, r0
   117a0:	bl	10dd4 <__errno_location@plt>
   117a4:	cmn	fp, #1
   117a8:	mov	sl, r0
   117ac:	ldreq	r5, [r0]
   117b0:	beq	117d4 <putchar_unlocked@plt+0x934>
   117b4:	mov	r0, r4
   117b8:	bl	10cf0 <getc_unlocked@plt>
   117bc:	cmn	r0, #1
   117c0:	str	r0, [sp]
   117c4:	bne	11870 <putchar_unlocked@plt+0x9d0>
   117c8:	uxtb	r0, fp
   117cc:	ldr	r5, [sl]
   117d0:	bl	1133c <putchar_unlocked@plt+0x49c>
   117d4:	ldr	r3, [pc, #256]	; 118dc <putchar_unlocked@plt+0xa3c>
   117d8:	ldrb	r0, [r3]
   117dc:	cmp	fp, r0
   117e0:	beq	117e8 <putchar_unlocked@plt+0x948>
   117e4:	bl	1133c <putchar_unlocked@plt+0x49c>
   117e8:	mov	r0, r4
   117ec:	bl	10d50 <ferror_unlocked@plt>
   117f0:	ldr	r3, [sp, #4]
   117f4:	cmp	r0, #0
   117f8:	moveq	r5, #0
   117fc:	cmp	r3, #0
   11800:	mov	r0, r4
   11804:	bne	118b4 <putchar_unlocked@plt+0xa14>
   11808:	bl	10e58 <clearerr_unlocked@plt>
   1180c:	cmp	r5, #0
   11810:	bne	11838 <putchar_unlocked@plt+0x998>
   11814:	sub	r9, r9, #1
   11818:	b	11750 <putchar_unlocked@plt+0x8b0>
   1181c:	mov	r0, r4
   11820:	ldr	r1, [pc, #184]	; 118e0 <putchar_unlocked@plt+0xa40>
   11824:	bl	10e64 <fopen64@plt>
   11828:	subs	r4, r0, #0
   1182c:	bne	11864 <putchar_unlocked@plt+0x9c4>
   11830:	bl	10dd4 <__errno_location@plt>
   11834:	ldr	r5, [r0]
   11838:	ldr	r2, [r6]
   1183c:	mov	r1, #3
   11840:	mov	r0, #0
   11844:	bl	1338c <putchar_unlocked@plt+0x24ec>
   11848:	ldr	r2, [pc, #148]	; 118e4 <putchar_unlocked@plt+0xa44>
   1184c:	mov	r1, r5
   11850:	mov	r8, #0
   11854:	mov	r3, r0
   11858:	mov	r0, #0
   1185c:	bl	10d68 <error@plt>
   11860:	b	11814 <putchar_unlocked@plt+0x974>
   11864:	mov	r1, #2
   11868:	bl	11c8c <putchar_unlocked@plt+0xdec>
   1186c:	b	11790 <putchar_unlocked@plt+0x8f0>
   11870:	ldr	r3, [pc, #100]	; 118dc <putchar_unlocked@plt+0xa3c>
   11874:	ldrb	r2, [r3]
   11878:	cmp	fp, r2
   1187c:	bne	118a8 <putchar_unlocked@plt+0xa08>
   11880:	ldrb	r0, [r5]
   11884:	cmp	r0, #0
   11888:	beq	11890 <putchar_unlocked@plt+0x9f0>
   1188c:	bl	1133c <putchar_unlocked@plt+0x49c>
   11890:	ldr	r3, [r7, #8]
   11894:	add	r5, r5, #1
   11898:	cmp	r5, r3
   1189c:	ldreq	r5, [r7, #4]
   118a0:	ldr	fp, [sp]
   118a4:	b	117b4 <putchar_unlocked@plt+0x914>
   118a8:	uxtb	r0, fp
   118ac:	bl	1133c <putchar_unlocked@plt+0x49c>
   118b0:	b	118a0 <putchar_unlocked@plt+0xa00>
   118b4:	bl	11cbc <putchar_unlocked@plt+0xe1c>
   118b8:	cmp	r0, #0
   118bc:	beq	1180c <putchar_unlocked@plt+0x96c>
   118c0:	cmp	r5, #0
   118c4:	bne	11838 <putchar_unlocked@plt+0x998>
   118c8:	ldr	r5, [sl]
   118cc:	b	1180c <putchar_unlocked@plt+0x96c>
   118d0:	andeq	r6, r2, r8, asr r1
   118d4:	andeq	r4, r1, r8, lsl ip
   118d8:	andeq	r6, r2, r8, asr #2
   118dc:	andeq	r6, r2, r0, ror #1
   118e0:	andeq	r4, r1, r2, asr #14
   118e4:	andeq	r4, r1, pc, lsr #22
   118e8:	subs	r5, r0, #0
   118ec:	push	{r7, lr}
   118f0:	sub	sp, sp, #56	; 0x38
   118f4:	ldr	r4, [pc, #548]	; 11b20 <putchar_unlocked@plt+0xc80>
   118f8:	beq	11930 <putchar_unlocked@plt+0xa90>
   118fc:	ldr	r3, [pc, #544]	; 11b24 <putchar_unlocked@plt+0xc84>
   11900:	mov	r2, #5
   11904:	ldr	r1, [pc, #540]	; 11b28 <putchar_unlocked@plt+0xc88>
   11908:	mov	r0, #0
   1190c:	ldr	r6, [r3]
   11910:	bl	10cfc <dcgettext@plt>
   11914:	ldr	r3, [r4]
   11918:	mov	r1, #1
   1191c:	mov	r2, r0
   11920:	mov	r0, r6
   11924:	bl	10e10 <__fprintf_chk@plt>
   11928:	mov	r0, r5
   1192c:	bl	10dbc <exit@plt>
   11930:	mov	r2, #5
   11934:	ldr	r1, [pc, #496]	; 11b2c <putchar_unlocked@plt+0xc8c>
   11938:	bl	10cfc <dcgettext@plt>
   1193c:	ldr	r2, [r4]
   11940:	ldr	r4, [pc, #488]	; 11b30 <putchar_unlocked@plt+0xc90>
   11944:	ldr	r8, [pc, #488]	; 11b34 <putchar_unlocked@plt+0xc94>
   11948:	mov	r6, r5
   1194c:	mov	r1, r0
   11950:	mov	r0, #1
   11954:	bl	10df8 <__printf_chk@plt>
   11958:	mov	r2, #5
   1195c:	ldr	r1, [pc, #468]	; 11b38 <putchar_unlocked@plt+0xc98>
   11960:	mov	r0, r5
   11964:	bl	10cfc <dcgettext@plt>
   11968:	ldr	r1, [r4]
   1196c:	bl	10c60 <fputs_unlocked@plt>
   11970:	mov	r2, #5
   11974:	ldr	r1, [pc, #448]	; 11b3c <putchar_unlocked@plt+0xc9c>
   11978:	mov	r0, r5
   1197c:	bl	10cfc <dcgettext@plt>
   11980:	ldr	r1, [r4]
   11984:	bl	10c60 <fputs_unlocked@plt>
   11988:	mov	r2, #5
   1198c:	ldr	r1, [pc, #428]	; 11b40 <putchar_unlocked@plt+0xca0>
   11990:	mov	r0, r5
   11994:	bl	10cfc <dcgettext@plt>
   11998:	ldr	r1, [r4]
   1199c:	bl	10c60 <fputs_unlocked@plt>
   119a0:	mov	r2, #5
   119a4:	ldr	r1, [pc, #408]	; 11b44 <putchar_unlocked@plt+0xca4>
   119a8:	mov	r0, r5
   119ac:	bl	10cfc <dcgettext@plt>
   119b0:	ldr	r1, [r4]
   119b4:	bl	10c60 <fputs_unlocked@plt>
   119b8:	mov	r2, #5
   119bc:	ldr	r1, [pc, #388]	; 11b48 <putchar_unlocked@plt+0xca8>
   119c0:	mov	r0, r5
   119c4:	bl	10cfc <dcgettext@plt>
   119c8:	ldr	r1, [r4]
   119cc:	bl	10c60 <fputs_unlocked@plt>
   119d0:	mov	r2, #5
   119d4:	ldr	r1, [pc, #368]	; 11b4c <putchar_unlocked@plt+0xcac>
   119d8:	mov	r0, r5
   119dc:	bl	10cfc <dcgettext@plt>
   119e0:	ldr	r1, [r4]
   119e4:	bl	10c60 <fputs_unlocked@plt>
   119e8:	mov	r2, #5
   119ec:	ldr	r1, [pc, #348]	; 11b50 <putchar_unlocked@plt+0xcb0>
   119f0:	mov	r0, r5
   119f4:	bl	10cfc <dcgettext@plt>
   119f8:	ldr	r1, [r4]
   119fc:	bl	10c60 <fputs_unlocked@plt>
   11a00:	ldr	lr, [pc, #332]	; 11b54 <putchar_unlocked@plt+0xcb4>
   11a04:	mov	ip, sp
   11a08:	ldm	lr!, {r0, r1, r2, r3}
   11a0c:	stmia	ip!, {r0, r1, r2, r3}
   11a10:	ldm	lr!, {r0, r1, r2, r3}
   11a14:	stmia	ip!, {r0, r1, r2, r3}
   11a18:	ldm	lr!, {r0, r1, r2, r3}
   11a1c:	stmia	ip!, {r0, r1, r2, r3}
   11a20:	ldm	lr, {r0, r1}
   11a24:	stm	ip, {r0, r1}
   11a28:	ldr	r1, [sp, r6]
   11a2c:	add	r7, sp, r6
   11a30:	cmp	r1, #0
   11a34:	bne	11ad8 <putchar_unlocked@plt+0xc38>
   11a38:	ldr	r6, [r7, #4]
   11a3c:	ldr	r7, [pc, #240]	; 11b34 <putchar_unlocked@plt+0xc94>
   11a40:	cmp	r6, #0
   11a44:	mov	r2, #5
   11a48:	ldr	r1, [pc, #264]	; 11b58 <putchar_unlocked@plt+0xcb8>
   11a4c:	mov	r0, #0
   11a50:	moveq	r6, r7
   11a54:	bl	10cfc <dcgettext@plt>
   11a58:	ldr	r3, [pc, #252]	; 11b5c <putchar_unlocked@plt+0xcbc>
   11a5c:	ldr	r2, [pc, #252]	; 11b60 <putchar_unlocked@plt+0xcc0>
   11a60:	mov	r1, r0
   11a64:	mov	r0, #1
   11a68:	bl	10df8 <__printf_chk@plt>
   11a6c:	mov	r1, #0
   11a70:	mov	r0, #5
   11a74:	bl	10e34 <setlocale@plt>
   11a78:	cmp	r0, #0
   11a7c:	bne	11af0 <putchar_unlocked@plt+0xc50>
   11a80:	mov	r2, #5
   11a84:	ldr	r1, [pc, #216]	; 11b64 <putchar_unlocked@plt+0xcc4>
   11a88:	mov	r0, #0
   11a8c:	bl	10cfc <dcgettext@plt>
   11a90:	ldr	r3, [pc, #156]	; 11b34 <putchar_unlocked@plt+0xc94>
   11a94:	ldr	r2, [pc, #192]	; 11b5c <putchar_unlocked@plt+0xcbc>
   11a98:	mov	r1, r0
   11a9c:	mov	r0, #1
   11aa0:	bl	10df8 <__printf_chk@plt>
   11aa4:	mov	r2, #5
   11aa8:	ldr	r1, [pc, #184]	; 11b68 <putchar_unlocked@plt+0xcc8>
   11aac:	mov	r0, #0
   11ab0:	bl	10cfc <dcgettext@plt>
   11ab4:	ldr	r2, [pc, #176]	; 11b6c <putchar_unlocked@plt+0xccc>
   11ab8:	cmp	r6, r7
   11abc:	ldr	r3, [pc, #172]	; 11b70 <putchar_unlocked@plt+0xcd0>
   11ac0:	moveq	r3, r2
   11ac4:	mov	r2, r6
   11ac8:	mov	r1, r0
   11acc:	mov	r0, #1
   11ad0:	bl	10df8 <__printf_chk@plt>
   11ad4:	b	11928 <putchar_unlocked@plt+0xa88>
   11ad8:	mov	r0, r8
   11adc:	bl	10c78 <strcmp@plt>
   11ae0:	add	r6, r6, #8
   11ae4:	cmp	r0, #0
   11ae8:	bne	11a28 <putchar_unlocked@plt+0xb88>
   11aec:	b	11a38 <putchar_unlocked@plt+0xb98>
   11af0:	mov	r2, #3
   11af4:	ldr	r1, [pc, #120]	; 11b74 <putchar_unlocked@plt+0xcd4>
   11af8:	bl	10e88 <strncmp@plt>
   11afc:	cmp	r0, #0
   11b00:	beq	11a80 <putchar_unlocked@plt+0xbe0>
   11b04:	mov	r2, #5
   11b08:	ldr	r1, [pc, #104]	; 11b78 <putchar_unlocked@plt+0xcd8>
   11b0c:	mov	r0, #0
   11b10:	bl	10cfc <dcgettext@plt>
   11b14:	ldr	r1, [r4]
   11b18:	bl	10c60 <fputs_unlocked@plt>
   11b1c:	b	11a80 <putchar_unlocked@plt+0xbe0>
   11b20:	andeq	r6, r2, r0, ror r1
   11b24:	andeq	r6, r2, r0, asr #2
   11b28:	andeq	r4, r1, r3, ror #14
   11b2c:	andeq	r4, r1, sl, lsl #15
   11b30:	andeq	r6, r2, ip, asr #2
   11b34:	andeq	r4, r1, sp, asr r7
   11b38:	andeq	r4, r1, fp, lsr #15
   11b3c:	andeq	r4, r1, r2, lsr #16
   11b40:	andeq	r4, r1, sl, asr r8
   11b44:	andeq	r4, r1, r5, lsr #17
   11b48:	andeq	r4, r1, r5, lsr r9
   11b4c:	andeq	r4, r1, r4, ror r9
   11b50:	andeq	r4, r1, r1, lsr #19
   11b54:	andeq	r4, r1, r0, lsr #13
   11b58:	ldrdeq	r4, [r1], -r7
   11b5c:	andeq	r4, r1, lr, ror #19
   11b60:	andeq	r4, r1, r6, lsl sl
   11b64:	andeq	r4, r1, pc, ror #20
   11b68:	andeq	r4, r1, sl, lsl #21
   11b6c:	andeq	r4, r1, lr, asr #22
   11b70:	andeq	r4, r1, r1, asr #21
   11b74:	andeq	r4, r1, r4, lsr #20
   11b78:	andeq	r4, r1, r8, lsr #20
   11b7c:	ldr	r3, [pc, #4]	; 11b88 <putchar_unlocked@plt+0xce8>
   11b80:	str	r0, [r3]
   11b84:	bx	lr
   11b88:	andeq	r6, r2, r8, ror #2
   11b8c:	ldr	r3, [pc, #4]	; 11b98 <putchar_unlocked@plt+0xcf8>
   11b90:	strb	r0, [r3, #4]
   11b94:	bx	lr
   11b98:	andeq	r6, r2, r8, ror #2
   11b9c:	ldr	r3, [pc, #192]	; 11c64 <putchar_unlocked@plt+0xdc4>
   11ba0:	push	{r0, r1, r4, r5, r6, lr}
   11ba4:	ldr	r0, [r3]
   11ba8:	bl	13f9c <putchar_unlocked@plt+0x30fc>
   11bac:	cmp	r0, #0
   11bb0:	beq	11c48 <putchar_unlocked@plt+0xda8>
   11bb4:	ldr	r3, [pc, #172]	; 11c68 <putchar_unlocked@plt+0xdc8>
   11bb8:	mov	r4, r3
   11bbc:	ldrb	r2, [r3, #4]
   11bc0:	cmp	r2, #0
   11bc4:	beq	11bd8 <putchar_unlocked@plt+0xd38>
   11bc8:	bl	10dd4 <__errno_location@plt>
   11bcc:	ldr	r3, [r0]
   11bd0:	cmp	r3, #32
   11bd4:	beq	11c48 <putchar_unlocked@plt+0xda8>
   11bd8:	mov	r2, #5
   11bdc:	ldr	r1, [pc, #136]	; 11c6c <putchar_unlocked@plt+0xdcc>
   11be0:	mov	r0, #0
   11be4:	bl	10cfc <dcgettext@plt>
   11be8:	ldr	r4, [r4]
   11bec:	cmp	r4, #0
   11bf0:	mov	r5, r0
   11bf4:	beq	11c2c <putchar_unlocked@plt+0xd8c>
   11bf8:	bl	10dd4 <__errno_location@plt>
   11bfc:	ldr	r6, [r0]
   11c00:	mov	r0, r4
   11c04:	bl	1337c <putchar_unlocked@plt+0x24dc>
   11c08:	str	r5, [sp]
   11c0c:	ldr	r2, [pc, #92]	; 11c70 <putchar_unlocked@plt+0xdd0>
   11c10:	mov	r1, r6
   11c14:	mov	r3, r0
   11c18:	mov	r0, #0
   11c1c:	bl	10d68 <error@plt>
   11c20:	ldr	r3, [pc, #76]	; 11c74 <putchar_unlocked@plt+0xdd4>
   11c24:	ldr	r0, [r3]
   11c28:	bl	10ca8 <_exit@plt>
   11c2c:	bl	10dd4 <__errno_location@plt>
   11c30:	mov	r3, r5
   11c34:	ldr	r2, [pc, #60]	; 11c78 <putchar_unlocked@plt+0xdd8>
   11c38:	ldr	r1, [r0]
   11c3c:	mov	r0, r4
   11c40:	bl	10d68 <error@plt>
   11c44:	b	11c20 <putchar_unlocked@plt+0xd80>
   11c48:	ldr	r3, [pc, #44]	; 11c7c <putchar_unlocked@plt+0xddc>
   11c4c:	ldr	r0, [r3]
   11c50:	bl	13f9c <putchar_unlocked@plt+0x30fc>
   11c54:	cmp	r0, #0
   11c58:	bne	11c20 <putchar_unlocked@plt+0xd80>
   11c5c:	add	sp, sp, #8
   11c60:	pop	{r4, r5, r6, pc}
   11c64:	andeq	r6, r2, ip, asr #2
   11c68:	andeq	r6, r2, r8, ror #2
   11c6c:	andeq	r4, r1, r8, lsr r7
   11c70:	andeq	r4, r1, pc, asr #23
   11c74:	andeq	r6, r2, r8, ror #1
   11c78:	andeq	r4, r1, pc, lsr #22
   11c7c:	andeq	r6, r2, r0, asr #2
   11c80:	push	{r4, r5}
   11c84:	pop	{r4, r5}
   11c88:	b	10c84 <posix_fadvise64@plt>
   11c8c:	cmp	r0, #0
   11c90:	bxeq	lr
   11c94:	push	{r0, r1, r2, r3, r4, lr}
   11c98:	mov	r4, r1
   11c9c:	bl	10e04 <fileno@plt>
   11ca0:	mov	r2, #0
   11ca4:	mov	r3, #0
   11ca8:	str	r4, [sp, #8]
   11cac:	strd	r2, [sp]
   11cb0:	bl	10c84 <posix_fadvise64@plt>
   11cb4:	add	sp, sp, #16
   11cb8:	pop	{r4, pc}
   11cbc:	push	{r0, r1, r2, r4, r5, lr}
   11cc0:	mov	r4, r0
   11cc4:	bl	10e04 <fileno@plt>
   11cc8:	cmp	r0, #0
   11ccc:	mov	r0, r4
   11cd0:	bge	11ce0 <putchar_unlocked@plt+0xe40>
   11cd4:	add	sp, sp, #12
   11cd8:	pop	{r4, r5, lr}
   11cdc:	b	10e1c <fclose@plt>
   11ce0:	bl	10d8c <__freading@plt>
   11ce4:	cmp	r0, #0
   11ce8:	bne	11d24 <putchar_unlocked@plt+0xe84>
   11cec:	mov	r0, r4
   11cf0:	bl	11d64 <putchar_unlocked@plt+0xec4>
   11cf4:	cmp	r0, #0
   11cf8:	bne	11d58 <putchar_unlocked@plt+0xeb8>
   11cfc:	mov	r5, #0
   11d00:	mov	r0, r4
   11d04:	bl	10e1c <fclose@plt>
   11d08:	cmp	r5, #0
   11d0c:	beq	11d1c <putchar_unlocked@plt+0xe7c>
   11d10:	bl	10dd4 <__errno_location@plt>
   11d14:	str	r5, [r0]
   11d18:	mvn	r0, #0
   11d1c:	add	sp, sp, #12
   11d20:	pop	{r4, r5, pc}
   11d24:	mov	r0, r4
   11d28:	bl	10e04 <fileno@plt>
   11d2c:	mov	r3, #1
   11d30:	str	r3, [sp]
   11d34:	mov	r2, #0
   11d38:	mov	r3, #0
   11d3c:	bl	10d2c <lseek64@plt>
   11d40:	mvn	r3, #0
   11d44:	mvn	r2, #0
   11d48:	cmp	r1, r3
   11d4c:	cmpeq	r0, r2
   11d50:	bne	11cec <putchar_unlocked@plt+0xe4c>
   11d54:	b	11cfc <putchar_unlocked@plt+0xe5c>
   11d58:	bl	10dd4 <__errno_location@plt>
   11d5c:	ldr	r5, [r0]
   11d60:	b	11d00 <putchar_unlocked@plt+0xe60>
   11d64:	push	{r0, r1, r4, lr}
   11d68:	subs	r4, r0, #0
   11d6c:	bne	11d80 <putchar_unlocked@plt+0xee0>
   11d70:	mov	r0, r4
   11d74:	add	sp, sp, #8
   11d78:	pop	{r4, lr}
   11d7c:	b	10c90 <fflush@plt>
   11d80:	bl	10d8c <__freading@plt>
   11d84:	cmp	r0, #0
   11d88:	beq	11d70 <putchar_unlocked@plt+0xed0>
   11d8c:	ldr	r3, [r4]
   11d90:	tst	r3, #256	; 0x100
   11d94:	beq	11d70 <putchar_unlocked@plt+0xed0>
   11d98:	mov	r3, #1
   11d9c:	str	r3, [sp]
   11da0:	mov	r2, #0
   11da4:	mov	r3, #0
   11da8:	mov	r0, r4
   11dac:	bl	11e08 <putchar_unlocked@plt+0xf68>
   11db0:	b	11d70 <putchar_unlocked@plt+0xed0>
   11db4:	push	{r0, r1, r2, r4, r5, lr}
   11db8:	mov	r5, r0
   11dbc:	bl	10dd4 <__errno_location@plt>
   11dc0:	ldr	r3, [r0]
   11dc4:	mov	r4, r0
   11dc8:	str	r3, [sp]
   11dcc:	str	r3, [sp, #4]
   11dd0:	mov	r3, #0
   11dd4:	str	r3, [r0]
   11dd8:	mov	r0, r5
   11ddc:	bl	10c9c <free@plt>
   11de0:	ldr	r3, [r4]
   11de4:	add	r2, sp, #8
   11de8:	cmp	r3, #0
   11dec:	moveq	r3, #4
   11df0:	movne	r3, #0
   11df4:	add	r3, r2, r3
   11df8:	ldr	r3, [r3, #-8]
   11dfc:	str	r3, [r4]
   11e00:	add	sp, sp, #12
   11e04:	pop	{r4, r5, pc}
   11e08:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11e0c:	mov	r4, r0
   11e10:	ldmib	r0, {ip, lr}
   11e14:	ldr	r8, [sp, #32]
   11e18:	cmp	lr, ip
   11e1c:	bne	11e88 <putchar_unlocked@plt+0xfe8>
   11e20:	ldr	lr, [r0, #20]
   11e24:	ldr	ip, [r0, #16]
   11e28:	cmp	lr, ip
   11e2c:	bne	11e88 <putchar_unlocked@plt+0xfe8>
   11e30:	ldr	r5, [r0, #36]	; 0x24
   11e34:	cmp	r5, #0
   11e38:	bne	11e88 <putchar_unlocked@plt+0xfe8>
   11e3c:	mov	r6, r2
   11e40:	mov	r7, r3
   11e44:	bl	10e04 <fileno@plt>
   11e48:	mov	r2, r6
   11e4c:	mov	r3, r7
   11e50:	str	r8, [sp]
   11e54:	bl	10d2c <lseek64@plt>
   11e58:	mvn	r3, #0
   11e5c:	mvn	r2, #0
   11e60:	cmp	r1, r3
   11e64:	cmpeq	r0, r2
   11e68:	mvneq	r0, #0
   11e6c:	ldrne	r3, [r4]
   11e70:	strdne	r0, [r4, #80]	; 0x50
   11e74:	movne	r0, r5
   11e78:	bicne	r3, r3, #16
   11e7c:	strne	r3, [r4]
   11e80:	add	sp, sp, #8
   11e84:	pop	{r4, r5, r6, r7, r8, pc}
   11e88:	str	r8, [sp, #32]
   11e8c:	mov	r0, r4
   11e90:	add	sp, sp, #8
   11e94:	pop	{r4, r5, r6, r7, r8, lr}
   11e98:	b	10e28 <fseeko64@plt>
   11e9c:	push	{r4, r5, r6, lr}
   11ea0:	subs	r5, r0, #0
   11ea4:	bne	11ebc <putchar_unlocked@plt+0x101c>
   11ea8:	ldr	r3, [pc, #124]	; 11f2c <putchar_unlocked@plt+0x108c>
   11eac:	ldr	r0, [pc, #124]	; 11f30 <putchar_unlocked@plt+0x1090>
   11eb0:	ldr	r1, [r3]
   11eb4:	bl	10e7c <fputs@plt>
   11eb8:	bl	10e94 <abort@plt>
   11ebc:	mov	r1, #47	; 0x2f
   11ec0:	bl	10e40 <strrchr@plt>
   11ec4:	cmp	r0, #0
   11ec8:	addne	r4, r0, #1
   11ecc:	moveq	r4, r5
   11ed0:	sub	r3, r4, r5
   11ed4:	cmp	r3, #6
   11ed8:	ble	11f18 <putchar_unlocked@plt+0x1078>
   11edc:	mov	r2, #7
   11ee0:	ldr	r1, [pc, #76]	; 11f34 <putchar_unlocked@plt+0x1094>
   11ee4:	sub	r0, r4, #7
   11ee8:	bl	10e88 <strncmp@plt>
   11eec:	cmp	r0, #0
   11ef0:	bne	11f18 <putchar_unlocked@plt+0x1078>
   11ef4:	mov	r2, #3
   11ef8:	ldr	r1, [pc, #56]	; 11f38 <putchar_unlocked@plt+0x1098>
   11efc:	mov	r0, r4
   11f00:	bl	10e88 <strncmp@plt>
   11f04:	cmp	r0, #0
   11f08:	movne	r5, r4
   11f0c:	ldreq	r3, [pc, #40]	; 11f3c <putchar_unlocked@plt+0x109c>
   11f10:	addeq	r5, r4, #3
   11f14:	streq	r5, [r3]
   11f18:	ldr	r3, [pc, #32]	; 11f40 <putchar_unlocked@plt+0x10a0>
   11f1c:	str	r5, [r3]
   11f20:	ldr	r3, [pc, #28]	; 11f44 <putchar_unlocked@plt+0x10a4>
   11f24:	str	r5, [r3]
   11f28:	pop	{r4, r5, r6, pc}
   11f2c:	andeq	r6, r2, r0, asr #2
   11f30:	ldrdeq	r4, [r1], -r6
   11f34:	andeq	r4, r1, lr, lsl #24
   11f38:	andeq	r4, r1, r6, lsl ip
   11f3c:	andeq	r6, r2, r0, lsr r1
   11f40:	andeq	r6, r2, r0, ror r1
   11f44:	andeq	r6, r2, r4, lsr r1
   11f48:	push	{r4, r5, r6, lr}
   11f4c:	mov	r2, #48	; 0x30
   11f50:	mov	r5, r1
   11f54:	mov	r1, #0
   11f58:	mov	r4, r0
   11f5c:	bl	10dec <memset@plt>
   11f60:	cmp	r5, #10
   11f64:	bne	11f6c <putchar_unlocked@plt+0x10cc>
   11f68:	bl	10e94 <abort@plt>
   11f6c:	str	r5, [r4]
   11f70:	mov	r0, r4
   11f74:	pop	{r4, r5, r6, pc}
   11f78:	push	{r4, r5, r6, lr}
   11f7c:	mov	r4, r0
   11f80:	mov	r5, r1
   11f84:	bl	1400c <putchar_unlocked@plt+0x316c>
   11f88:	ldrb	r3, [r0]
   11f8c:	bic	r3, r3, #32
   11f90:	cmp	r3, #85	; 0x55
   11f94:	bne	12004 <putchar_unlocked@plt+0x1164>
   11f98:	ldrb	r3, [r0, #1]
   11f9c:	bic	r3, r3, #32
   11fa0:	cmp	r3, #84	; 0x54
   11fa4:	bne	11fdc <putchar_unlocked@plt+0x113c>
   11fa8:	ldrb	r3, [r0, #2]
   11fac:	bic	r3, r3, #32
   11fb0:	cmp	r3, #70	; 0x46
   11fb4:	bne	11fdc <putchar_unlocked@plt+0x113c>
   11fb8:	ldrb	r3, [r0, #3]
   11fbc:	cmp	r3, #45	; 0x2d
   11fc0:	bne	11fdc <putchar_unlocked@plt+0x113c>
   11fc4:	ldrb	r3, [r0, #4]
   11fc8:	cmp	r3, #56	; 0x38
   11fcc:	bne	11fdc <putchar_unlocked@plt+0x113c>
   11fd0:	ldrb	r3, [r0, #5]
   11fd4:	cmp	r3, #0
   11fd8:	beq	11ff0 <putchar_unlocked@plt+0x1150>
   11fdc:	ldr	r1, [pc, #144]	; 12074 <putchar_unlocked@plt+0x11d4>
   11fe0:	ldr	r0, [pc, #144]	; 12078 <putchar_unlocked@plt+0x11d8>
   11fe4:	cmp	r5, #9
   11fe8:	movne	r0, r1
   11fec:	pop	{r4, r5, r6, pc}
   11ff0:	ldrb	r3, [r4]
   11ff4:	ldr	r1, [pc, #128]	; 1207c <putchar_unlocked@plt+0x11dc>
   11ff8:	ldr	r0, [pc, #128]	; 12080 <putchar_unlocked@plt+0x11e0>
   11ffc:	cmp	r3, #96	; 0x60
   12000:	b	11fe8 <putchar_unlocked@plt+0x1148>
   12004:	cmp	r3, #71	; 0x47
   12008:	bne	11fdc <putchar_unlocked@plt+0x113c>
   1200c:	ldrb	r3, [r0, #1]
   12010:	bic	r3, r3, #32
   12014:	cmp	r3, #66	; 0x42
   12018:	bne	11fdc <putchar_unlocked@plt+0x113c>
   1201c:	ldrb	r3, [r0, #2]
   12020:	cmp	r3, #49	; 0x31
   12024:	bne	11fdc <putchar_unlocked@plt+0x113c>
   12028:	ldrb	r3, [r0, #3]
   1202c:	cmp	r3, #56	; 0x38
   12030:	bne	11fdc <putchar_unlocked@plt+0x113c>
   12034:	ldrb	r3, [r0, #4]
   12038:	cmp	r3, #48	; 0x30
   1203c:	bne	11fdc <putchar_unlocked@plt+0x113c>
   12040:	ldrb	r3, [r0, #5]
   12044:	cmp	r3, #51	; 0x33
   12048:	bne	11fdc <putchar_unlocked@plt+0x113c>
   1204c:	ldrb	r3, [r0, #6]
   12050:	cmp	r3, #48	; 0x30
   12054:	bne	11fdc <putchar_unlocked@plt+0x113c>
   12058:	ldrb	r3, [r0, #7]
   1205c:	cmp	r3, #0
   12060:	bne	11fdc <putchar_unlocked@plt+0x113c>
   12064:	ldrb	r3, [r4]
   12068:	ldr	r1, [pc, #20]	; 12084 <putchar_unlocked@plt+0x11e4>
   1206c:	ldr	r0, [pc, #20]	; 12088 <putchar_unlocked@plt+0x11e8>
   12070:	b	11ffc <putchar_unlocked@plt+0x115c>
   12074:	andeq	r4, r1, r1, lsl #25
   12078:	andeq	r4, r1, pc, ror ip
   1207c:	andeq	r4, r1, r4, ror ip
   12080:	andeq	r4, r1, r0, ror ip
   12084:	andeq	r4, r1, ip, ror ip
   12088:	andeq	r4, r1, r8, ror ip
   1208c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12090:	sub	sp, sp, #108	; 0x6c
   12094:	mov	r8, r0
   12098:	str	r3, [sp, #36]	; 0x24
   1209c:	mov	r5, r1
   120a0:	str	r2, [sp, #44]	; 0x2c
   120a4:	ldr	sl, [sp, #144]	; 0x90
   120a8:	bl	10d38 <__ctype_get_mb_cur_max@plt>
   120ac:	ldr	r3, [sp, #148]	; 0x94
   120b0:	mov	r7, #0
   120b4:	str	r7, [sp, #48]	; 0x30
   120b8:	lsr	r6, r3, #1
   120bc:	and	r6, r6, #1
   120c0:	mov	r3, #1
   120c4:	str	r3, [sp, #72]	; 0x48
   120c8:	str	r7, [sp, #24]
   120cc:	str	r7, [sp, #32]
   120d0:	str	r7, [sp, #40]	; 0x28
   120d4:	str	r7, [sp, #60]	; 0x3c
   120d8:	str	r0, [sp, #76]	; 0x4c
   120dc:	cmp	sl, #10
   120e0:	ldrls	pc, [pc, sl, lsl #2]
   120e4:	b	12320 <putchar_unlocked@plt+0x1480>
   120e8:	andeq	r2, r1, r4, lsl r1
   120ec:	andeq	r2, r1, r8, lsr #27
   120f0:	andeq	r2, r1, ip, ror #5
   120f4:	andeq	r2, r1, r8, lsr r3
   120f8:	andeq	r2, r1, r8, asr #5
   120fc:	andeq	r2, r1, r0, lsr #2
   12100:	andeq	r2, r1, r8, lsl #27
   12104:	andeq	r2, r1, r4, lsr #6
   12108:	andeq	r2, r1, r8, lsl r2
   1210c:	andeq	r2, r1, r8, lsl r2
   12110:	andeq	r2, r1, r8, lsl r2
   12114:	mov	r6, #0
   12118:	mov	r4, #0
   1211c:	b	1214c <putchar_unlocked@plt+0x12ac>
   12120:	cmp	r6, #0
   12124:	bne	12348 <putchar_unlocked@plt+0x14a8>
   12128:	cmp	r5, #0
   1212c:	movne	r3, #34	; 0x22
   12130:	strbne	r3, [r8]
   12134:	mov	r3, #1
   12138:	str	r3, [sp, #24]
   1213c:	str	r3, [sp, #32]
   12140:	mov	r4, #1
   12144:	ldr	r3, [pc, #3172]	; 12db0 <putchar_unlocked@plt+0x1f10>
   12148:	str	r3, [sp, #40]	; 0x28
   1214c:	mov	r9, r5
   12150:	mov	r3, #0
   12154:	str	r7, [sp, #68]	; 0x44
   12158:	str	r3, [sp, #28]
   1215c:	ldr	r3, [sp, #36]	; 0x24
   12160:	cmn	r3, #1
   12164:	bne	12cf4 <putchar_unlocked@plt+0x1e54>
   12168:	ldr	r3, [sp, #44]	; 0x2c
   1216c:	ldr	r2, [sp, #28]
   12170:	ldrb	r3, [r3, r2]
   12174:	adds	r3, r3, #0
   12178:	movne	r3, #1
   1217c:	str	r3, [sp, #52]	; 0x34
   12180:	ldr	r3, [sp, #52]	; 0x34
   12184:	cmp	r3, #0
   12188:	bne	12370 <putchar_unlocked@plt+0x14d0>
   1218c:	sub	r2, sl, #2
   12190:	clz	r2, r2
   12194:	lsr	r2, r2, #5
   12198:	and	r3, r6, r2
   1219c:	cmp	r4, #0
   121a0:	movne	r3, #0
   121a4:	andeq	r3, r3, #1
   121a8:	cmp	r3, #0
   121ac:	bne	12538 <putchar_unlocked@plt+0x1698>
   121b0:	eor	r3, r6, #1
   121b4:	ands	r2, r2, r3
   121b8:	beq	12d2c <putchar_unlocked@plt+0x1e8c>
   121bc:	ldr	r3, [sp, #68]	; 0x44
   121c0:	cmp	r3, #0
   121c4:	beq	12d64 <putchar_unlocked@plt+0x1ec4>
   121c8:	ldr	r3, [sp, #72]	; 0x48
   121cc:	cmp	r3, #0
   121d0:	beq	12d08 <putchar_unlocked@plt+0x1e68>
   121d4:	ldr	r3, [sp, #160]	; 0xa0
   121d8:	ldr	r2, [sp, #44]	; 0x2c
   121dc:	str	r3, [sp, #16]
   121e0:	ldr	r3, [sp, #156]	; 0x9c
   121e4:	ldr	r1, [sp, #60]	; 0x3c
   121e8:	str	r3, [sp, #12]
   121ec:	ldr	r3, [sp, #152]	; 0x98
   121f0:	str	r3, [sp, #8]
   121f4:	ldr	r3, [sp, #148]	; 0x94
   121f8:	str	r3, [sp, #4]
   121fc:	mov	r3, #5
   12200:	str	r3, [sp]
   12204:	ldr	r3, [sp, #36]	; 0x24
   12208:	mov	r0, r8
   1220c:	bl	1208c <putchar_unlocked@plt+0x11ec>
   12210:	mov	r4, r0
   12214:	b	12d58 <putchar_unlocked@plt+0x1eb8>
   12218:	cmp	sl, #10
   1221c:	beq	12278 <putchar_unlocked@plt+0x13d8>
   12220:	ldr	r4, [pc, #2956]	; 12db4 <putchar_unlocked@plt+0x1f14>
   12224:	mov	r2, #5
   12228:	mov	r1, r4
   1222c:	mov	r0, #0
   12230:	bl	10cfc <dcgettext@plt>
   12234:	cmp	r0, r4
   12238:	str	r0, [sp, #156]	; 0x9c
   1223c:	bne	1224c <putchar_unlocked@plt+0x13ac>
   12240:	mov	r1, sl
   12244:	bl	11f78 <putchar_unlocked@plt+0x10d8>
   12248:	str	r0, [sp, #156]	; 0x9c
   1224c:	ldr	r4, [pc, #2916]	; 12db8 <putchar_unlocked@plt+0x1f18>
   12250:	mov	r2, #5
   12254:	mov	r1, r4
   12258:	mov	r0, #0
   1225c:	bl	10cfc <dcgettext@plt>
   12260:	cmp	r0, r4
   12264:	str	r0, [sp, #160]	; 0xa0
   12268:	bne	12278 <putchar_unlocked@plt+0x13d8>
   1226c:	mov	r1, sl
   12270:	bl	11f78 <putchar_unlocked@plt+0x10d8>
   12274:	str	r0, [sp, #160]	; 0xa0
   12278:	cmp	r6, #0
   1227c:	moveq	r4, r6
   12280:	beq	12298 <putchar_unlocked@plt+0x13f8>
   12284:	mov	r4, #0
   12288:	b	122a8 <putchar_unlocked@plt+0x1408>
   1228c:	cmp	r5, r4
   12290:	strbhi	r3, [r8, r4]
   12294:	add	r4, r4, #1
   12298:	ldr	r3, [sp, #156]	; 0x9c
   1229c:	ldrb	r3, [r3, r4]
   122a0:	cmp	r3, #0
   122a4:	bne	1228c <putchar_unlocked@plt+0x13ec>
   122a8:	ldr	r0, [sp, #160]	; 0xa0
   122ac:	bl	10dc8 <strlen@plt>
   122b0:	ldr	r3, [sp, #160]	; 0xa0
   122b4:	str	r3, [sp, #40]	; 0x28
   122b8:	mov	r3, #1
   122bc:	str	r3, [sp, #24]
   122c0:	str	r0, [sp, #32]
   122c4:	b	1214c <putchar_unlocked@plt+0x12ac>
   122c8:	mov	r3, #1
   122cc:	cmp	r6, #0
   122d0:	streq	r3, [sp, #24]
   122d4:	beq	122f4 <putchar_unlocked@plt+0x1454>
   122d8:	str	r3, [sp, #32]
   122dc:	ldr	r3, [pc, #2772]	; 12db8 <putchar_unlocked@plt+0x1f18>
   122e0:	mov	r4, #0
   122e4:	str	r3, [sp, #40]	; 0x28
   122e8:	b	12318 <putchar_unlocked@plt+0x1478>
   122ec:	cmp	r6, #0
   122f0:	bne	12360 <putchar_unlocked@plt+0x14c0>
   122f4:	cmp	r5, #0
   122f8:	movne	r3, #39	; 0x27
   122fc:	strbne	r3, [r8]
   12300:	mov	r3, #1
   12304:	str	r3, [sp, #32]
   12308:	mov	r6, #0
   1230c:	ldr	r3, [pc, #2724]	; 12db8 <putchar_unlocked@plt+0x1f18>
   12310:	mov	r4, #1
   12314:	str	r3, [sp, #40]	; 0x28
   12318:	mov	sl, #2
   1231c:	b	1214c <putchar_unlocked@plt+0x12ac>
   12320:	bl	10e94 <abort@plt>
   12324:	mov	r6, #0
   12328:	mov	r3, #1
   1232c:	str	r3, [sp, #24]
   12330:	mov	r4, r6
   12334:	b	1214c <putchar_unlocked@plt+0x12ac>
   12338:	mov	r6, #1
   1233c:	str	r6, [sp, #24]
   12340:	str	r6, [sp, #32]
   12344:	b	122dc <putchar_unlocked@plt+0x143c>
   12348:	mov	r3, #1
   1234c:	str	r3, [sp, #32]
   12350:	ldr	r3, [pc, #2648]	; 12db0 <putchar_unlocked@plt+0x1f10>
   12354:	str	r6, [sp, #24]
   12358:	str	r3, [sp, #40]	; 0x28
   1235c:	b	12118 <putchar_unlocked@plt+0x1278>
   12360:	mov	r3, #1
   12364:	str	r3, [sp, #32]
   12368:	ldr	r3, [pc, #2632]	; 12db8 <putchar_unlocked@plt+0x1f18>
   1236c:	b	12358 <putchar_unlocked@plt+0x14b8>
   12370:	ldr	r3, [sp, #32]
   12374:	ldr	fp, [sp, #24]
   12378:	cmp	sl, #2
   1237c:	moveq	fp, #0
   12380:	andne	fp, fp, #1
   12384:	adds	r5, r3, #0
   12388:	movne	r5, #1
   1238c:	ands	r3, r5, fp
   12390:	str	r3, [sp, #64]	; 0x40
   12394:	beq	12464 <putchar_unlocked@plt+0x15c4>
   12398:	ldr	r2, [sp, #32]
   1239c:	ldr	r3, [sp, #28]
   123a0:	add	r7, r3, r2
   123a4:	mov	r3, r2
   123a8:	ldr	r2, [sp, #36]	; 0x24
   123ac:	cmp	r3, #1
   123b0:	movls	r3, #0
   123b4:	movhi	r3, #1
   123b8:	cmn	r2, #1
   123bc:	movne	r3, #0
   123c0:	cmp	r3, #0
   123c4:	beq	123d4 <putchar_unlocked@plt+0x1534>
   123c8:	ldr	r0, [sp, #44]	; 0x2c
   123cc:	bl	10dc8 <strlen@plt>
   123d0:	str	r0, [sp, #36]	; 0x24
   123d4:	ldr	r3, [sp, #36]	; 0x24
   123d8:	cmp	r3, r7
   123dc:	bcc	1245c <putchar_unlocked@plt+0x15bc>
   123e0:	ldr	r3, [sp, #44]	; 0x2c
   123e4:	ldr	r0, [sp, #28]
   123e8:	ldr	r2, [sp, #32]
   123ec:	ldr	r1, [sp, #40]	; 0x28
   123f0:	add	r0, r3, r0
   123f4:	bl	10cd8 <memcmp@plt>
   123f8:	cmp	r0, #0
   123fc:	bne	1245c <putchar_unlocked@plt+0x15bc>
   12400:	cmp	r6, #0
   12404:	beq	12464 <putchar_unlocked@plt+0x15c4>
   12408:	str	r6, [sp, #24]
   1240c:	ldr	r3, [sp, #24]
   12410:	ldr	r2, [sp, #44]	; 0x2c
   12414:	cmp	sl, #2
   12418:	movne	r3, #0
   1241c:	andeq	r3, r3, #1
   12420:	cmp	r3, #0
   12424:	ldr	r3, [sp, #160]	; 0xa0
   12428:	movne	sl, #4
   1242c:	str	r3, [sp, #16]
   12430:	ldr	r3, [sp, #156]	; 0x9c
   12434:	str	sl, [sp]
   12438:	str	r3, [sp, #12]
   1243c:	mov	r3, #0
   12440:	str	r3, [sp, #8]
   12444:	ldr	r3, [sp, #148]	; 0x94
   12448:	mov	r1, r9
   1244c:	bic	r3, r3, #2
   12450:	str	r3, [sp, #4]
   12454:	ldr	r3, [sp, #36]	; 0x24
   12458:	b	12208 <putchar_unlocked@plt+0x1368>
   1245c:	mov	r3, #0
   12460:	str	r3, [sp, #64]	; 0x40
   12464:	ldr	r2, [sp, #28]
   12468:	ldr	r3, [sp, #44]	; 0x2c
   1246c:	add	r3, r3, r2
   12470:	str	r3, [sp, #80]	; 0x50
   12474:	ldr	r3, [sp, #44]	; 0x2c
   12478:	ldrb	r7, [r3, r2]
   1247c:	cmp	r7, #58	; 0x3a
   12480:	bhi	125e8 <putchar_unlocked@plt+0x1748>
   12484:	cmp	r7, #43	; 0x2b
   12488:	bcs	1263c <putchar_unlocked@plt+0x179c>
   1248c:	cmp	r7, #32
   12490:	beq	12694 <putchar_unlocked@plt+0x17f4>
   12494:	bhi	12540 <putchar_unlocked@plt+0x16a0>
   12498:	cmp	r7, #9
   1249c:	beq	12948 <putchar_unlocked@plt+0x1aa8>
   124a0:	bhi	12504 <putchar_unlocked@plt+0x1664>
   124a4:	cmp	r7, #7
   124a8:	beq	129f4 <putchar_unlocked@plt+0x1b54>
   124ac:	bhi	126b0 <putchar_unlocked@plt+0x1810>
   124b0:	cmp	r7, #0
   124b4:	beq	126cc <putchar_unlocked@plt+0x182c>
   124b8:	ldr	r3, [sp, #76]	; 0x4c
   124bc:	cmp	r3, #1
   124c0:	bne	12a38 <putchar_unlocked@plt+0x1b98>
   124c4:	bl	10db0 <__ctype_b_loc@plt>
   124c8:	sxth	r3, r7
   124cc:	lsl	r3, r3, #1
   124d0:	ldr	r2, [r0]
   124d4:	ldrh	r5, [r2, r3]
   124d8:	ldr	r3, [sp, #76]	; 0x4c
   124dc:	str	r3, [sp, #56]	; 0x38
   124e0:	lsr	r5, r5, #14
   124e4:	and	r5, r5, #1
   124e8:	ldr	r3, [sp, #24]
   124ec:	eor	fp, r5, #1
   124f0:	and	fp, fp, r3
   124f4:	ands	fp, fp, #255	; 0xff
   124f8:	beq	12880 <putchar_unlocked@plt+0x19e0>
   124fc:	mov	r5, #0
   12500:	b	12ae4 <putchar_unlocked@plt+0x1c44>
   12504:	cmp	r7, #11
   12508:	beq	12950 <putchar_unlocked@plt+0x1ab0>
   1250c:	bcc	129ec <putchar_unlocked@plt+0x1b4c>
   12510:	cmp	r7, #12
   12514:	beq	129fc <putchar_unlocked@plt+0x1b5c>
   12518:	cmp	r7, #13
   1251c:	moveq	r3, #114	; 0x72
   12520:	bne	124b8 <putchar_unlocked@plt+0x1618>
   12524:	cmp	sl, #2
   12528:	movne	r2, #0
   1252c:	andeq	r2, r6, #1
   12530:	cmp	r2, #0
   12534:	beq	126b4 <putchar_unlocked@plt+0x1814>
   12538:	mov	sl, #2
   1253c:	b	1240c <putchar_unlocked@plt+0x156c>
   12540:	cmp	r7, #37	; 0x25
   12544:	beq	1263c <putchar_unlocked@plt+0x179c>
   12548:	bhi	1255c <putchar_unlocked@plt+0x16bc>
   1254c:	cmp	r7, #35	; 0x23
   12550:	beq	12688 <putchar_unlocked@plt+0x17e8>
   12554:	mov	r5, #0
   12558:	b	12698 <putchar_unlocked@plt+0x17f8>
   1255c:	cmp	r7, #39	; 0x27
   12560:	bne	12554 <putchar_unlocked@plt+0x16b4>
   12564:	cmp	sl, #2
   12568:	ldrne	r5, [sp, #52]	; 0x34
   1256c:	movne	r3, r5
   12570:	strne	r3, [sp, #68]	; 0x44
   12574:	bne	12640 <putchar_unlocked@plt+0x17a0>
   12578:	cmp	r6, #0
   1257c:	bne	1240c <putchar_unlocked@plt+0x156c>
   12580:	ldr	r2, [sp, #60]	; 0x3c
   12584:	adds	r3, r9, #0
   12588:	movne	r3, #1
   1258c:	cmp	r2, #0
   12590:	movne	r3, #0
   12594:	cmp	r3, #0
   12598:	strne	r9, [sp, #60]	; 0x3c
   1259c:	movne	r9, #0
   125a0:	bne	125b0 <putchar_unlocked@plt+0x1710>
   125a4:	cmp	r9, r4
   125a8:	movhi	r3, #39	; 0x27
   125ac:	strbhi	r3, [r8, r4]
   125b0:	add	r3, r4, #1
   125b4:	cmp	r3, r9
   125b8:	movcc	r2, #92	; 0x5c
   125bc:	strbcc	r2, [r8, r3]
   125c0:	add	r3, r4, #2
   125c4:	cmp	r3, r9
   125c8:	ldr	r5, [sp, #52]	; 0x34
   125cc:	movcc	r2, #39	; 0x27
   125d0:	strbcc	r2, [r8, r3]
   125d4:	add	r4, r4, #3
   125d8:	mov	fp, r6
   125dc:	str	r5, [sp, #68]	; 0x44
   125e0:	str	r6, [sp, #48]	; 0x30
   125e4:	b	12880 <putchar_unlocked@plt+0x19e0>
   125e8:	cmp	r7, #94	; 0x5e
   125ec:	beq	12554 <putchar_unlocked@plt+0x16b4>
   125f0:	bhi	12648 <putchar_unlocked@plt+0x17a8>
   125f4:	cmp	r7, #90	; 0x5a
   125f8:	bhi	12630 <putchar_unlocked@plt+0x1790>
   125fc:	cmp	r7, #65	; 0x41
   12600:	bcs	1263c <putchar_unlocked@plt+0x179c>
   12604:	cmp	r7, #62	; 0x3e
   12608:	bls	12554 <putchar_unlocked@plt+0x16b4>
   1260c:	cmp	r7, #63	; 0x3f
   12610:	bne	124b8 <putchar_unlocked@plt+0x1618>
   12614:	cmp	sl, #2
   12618:	beq	127bc <putchar_unlocked@plt+0x191c>
   1261c:	cmp	sl, #5
   12620:	beq	127cc <putchar_unlocked@plt+0x192c>
   12624:	mov	fp, #0
   12628:	mov	r5, fp
   1262c:	b	12880 <putchar_unlocked@plt+0x19e0>
   12630:	cmp	r7, #92	; 0x5c
   12634:	beq	12958 <putchar_unlocked@plt+0x1ab8>
   12638:	bls	12554 <putchar_unlocked@plt+0x16b4>
   1263c:	ldr	r5, [sp, #52]	; 0x34
   12640:	mov	fp, #0
   12644:	b	12880 <putchar_unlocked@plt+0x19e0>
   12648:	cmp	r7, #122	; 0x7a
   1264c:	bhi	1266c <putchar_unlocked@plt+0x17cc>
   12650:	cmp	r7, #97	; 0x61
   12654:	bcs	1263c <putchar_unlocked@plt+0x179c>
   12658:	cmp	r7, #95	; 0x5f
   1265c:	beq	1263c <putchar_unlocked@plt+0x179c>
   12660:	cmp	r7, #96	; 0x60
   12664:	bne	124b8 <putchar_unlocked@plt+0x1618>
   12668:	b	12554 <putchar_unlocked@plt+0x16b4>
   1266c:	cmp	r7, #124	; 0x7c
   12670:	beq	12554 <putchar_unlocked@plt+0x16b4>
   12674:	bcc	12a04 <putchar_unlocked@plt+0x1b64>
   12678:	cmp	r7, #125	; 0x7d
   1267c:	beq	12a04 <putchar_unlocked@plt+0x1b64>
   12680:	cmp	r7, #126	; 0x7e
   12684:	bne	124b8 <putchar_unlocked@plt+0x1618>
   12688:	ldr	r3, [sp, #28]
   1268c:	cmp	r3, #0
   12690:	bne	127c4 <putchar_unlocked@plt+0x1924>
   12694:	ldr	r5, [sp, #52]	; 0x34
   12698:	cmp	sl, #2
   1269c:	movne	fp, #0
   126a0:	andeq	fp, r6, #1
   126a4:	cmp	fp, #0
   126a8:	beq	12880 <putchar_unlocked@plt+0x19e0>
   126ac:	b	12538 <putchar_unlocked@plt+0x1698>
   126b0:	mov	r3, #98	; 0x62
   126b4:	ldr	r2, [sp, #24]
   126b8:	cmp	r2, #0
   126bc:	beq	127c4 <putchar_unlocked@plt+0x1924>
   126c0:	mov	r7, r3
   126c4:	mov	r5, #0
   126c8:	b	128d8 <putchar_unlocked@plt+0x1a38>
   126cc:	ldr	r3, [sp, #24]
   126d0:	cmp	r3, #0
   126d4:	beq	127a0 <putchar_unlocked@plt+0x1900>
   126d8:	cmp	r6, #0
   126dc:	bne	12408 <putchar_unlocked@plt+0x1568>
   126e0:	ldr	r3, [sp, #48]	; 0x30
   126e4:	eor	r2, r3, #1
   126e8:	cmp	sl, #2
   126ec:	movne	r2, #0
   126f0:	andeq	r2, r2, #1
   126f4:	cmp	r2, #0
   126f8:	moveq	r3, r4
   126fc:	beq	12734 <putchar_unlocked@plt+0x1894>
   12700:	cmp	r9, r4
   12704:	movhi	r3, #39	; 0x27
   12708:	strbhi	r3, [r8, r4]
   1270c:	add	r3, r4, #1
   12710:	cmp	r9, r3
   12714:	movhi	r1, #36	; 0x24
   12718:	strbhi	r1, [r8, r3]
   1271c:	add	r3, r4, #2
   12720:	cmp	r9, r3
   12724:	movhi	r1, #39	; 0x27
   12728:	strbhi	r1, [r8, r3]
   1272c:	add	r3, r4, #3
   12730:	str	r2, [sp, #48]	; 0x30
   12734:	cmp	r9, r3
   12738:	movhi	r2, #92	; 0x5c
   1273c:	strbhi	r2, [r8, r3]
   12740:	cmp	fp, #0
   12744:	add	r4, r3, #1
   12748:	beq	12cd8 <putchar_unlocked@plt+0x1e38>
   1274c:	ldr	r2, [sp, #28]
   12750:	ldr	r1, [sp, #36]	; 0x24
   12754:	add	r2, r2, #1
   12758:	cmp	r1, r2
   1275c:	bls	12798 <putchar_unlocked@plt+0x18f8>
   12760:	ldr	r1, [sp, #44]	; 0x2c
   12764:	mov	r7, #48	; 0x30
   12768:	ldrb	r2, [r1, r2]
   1276c:	sub	r2, r2, #48	; 0x30
   12770:	cmp	r2, #9
   12774:	movhi	r5, r6
   12778:	bhi	12880 <putchar_unlocked@plt+0x19e0>
   1277c:	cmp	r9, r4
   12780:	add	r2, r3, #2
   12784:	strbhi	r7, [r8, r4]
   12788:	cmp	r9, r2
   1278c:	add	r4, r3, #3
   12790:	movhi	r1, #48	; 0x30
   12794:	strbhi	r1, [r8, r2]
   12798:	mov	r5, r6
   1279c:	b	12ce0 <putchar_unlocked@plt+0x1e40>
   127a0:	ldr	r3, [sp, #148]	; 0x94
   127a4:	tst	r3, #1
   127a8:	ldreq	r5, [sp, #24]
   127ac:	beq	12cec <putchar_unlocked@plt+0x1e4c>
   127b0:	ldr	r3, [sp, #28]
   127b4:	add	r3, r3, #1
   127b8:	b	12158 <putchar_unlocked@plt+0x12b8>
   127bc:	cmp	r6, #0
   127c0:	bne	1240c <putchar_unlocked@plt+0x156c>
   127c4:	mov	r5, #0
   127c8:	b	12640 <putchar_unlocked@plt+0x17a0>
   127cc:	ldr	r3, [sp, #148]	; 0x94
   127d0:	tst	r3, #4
   127d4:	beq	127c4 <putchar_unlocked@plt+0x1924>
   127d8:	ldr	r3, [sp, #28]
   127dc:	add	r2, r3, #2
   127e0:	ldr	r3, [sp, #36]	; 0x24
   127e4:	cmp	r3, r2
   127e8:	bls	127c4 <putchar_unlocked@plt+0x1924>
   127ec:	ldr	r3, [sp, #44]	; 0x2c
   127f0:	ldr	r1, [sp, #28]
   127f4:	add	r3, r3, r1
   127f8:	ldrb	r0, [r3, #1]
   127fc:	cmp	r0, #63	; 0x3f
   12800:	bne	127c4 <putchar_unlocked@plt+0x1924>
   12804:	ldr	r3, [sp, #44]	; 0x2c
   12808:	ldrb	r1, [r3, r2]
   1280c:	sub	r3, r1, #33	; 0x21
   12810:	uxtb	r3, r3
   12814:	cmp	r3, #29
   12818:	bhi	12ce8 <putchar_unlocked@plt+0x1e48>
   1281c:	mov	ip, #1
   12820:	ldr	r5, [pc, #1428]	; 12dbc <putchar_unlocked@plt+0x1f1c>
   12824:	ands	r5, r5, ip, lsl r3
   12828:	beq	12640 <putchar_unlocked@plt+0x17a0>
   1282c:	cmp	r6, #0
   12830:	bne	1240c <putchar_unlocked@plt+0x156c>
   12834:	add	r3, r4, #1
   12838:	cmp	r9, r4
   1283c:	strbhi	r0, [r8, r4]
   12840:	cmp	r9, r3
   12844:	movhi	r0, #34	; 0x22
   12848:	strbhi	r0, [r8, r3]
   1284c:	add	r3, r4, #2
   12850:	cmp	r9, r3
   12854:	movhi	r0, #34	; 0x22
   12858:	strbhi	r0, [r8, r3]
   1285c:	add	r3, r4, #3
   12860:	cmp	r9, r3
   12864:	add	r4, r4, #4
   12868:	mov	r5, r6
   1286c:	mov	fp, r6
   12870:	mov	r7, r1
   12874:	movhi	r0, #63	; 0x3f
   12878:	strbhi	r0, [r8, r3]
   1287c:	str	r2, [sp, #28]
   12880:	ldr	r3, [sp, #24]
   12884:	eor	r3, r3, #1
   12888:	cmp	sl, #2
   1288c:	orreq	r3, r3, #1
   12890:	eor	r3, r3, #1
   12894:	orr	r3, r6, r3
   12898:	tst	r3, #255	; 0xff
   1289c:	beq	128cc <putchar_unlocked@plt+0x1a2c>
   128a0:	ldr	r3, [sp, #152]	; 0x98
   128a4:	cmp	r3, #0
   128a8:	beq	128cc <putchar_unlocked@plt+0x1a2c>
   128ac:	lsr	r2, r7, #5
   128b0:	ldr	r1, [sp, #152]	; 0x98
   128b4:	uxtb	r2, r2
   128b8:	and	r3, r7, #31
   128bc:	ldr	r2, [r1, r2, lsl #2]
   128c0:	lsr	r3, r2, r3
   128c4:	tst	r3, #1
   128c8:	bne	128d8 <putchar_unlocked@plt+0x1a38>
   128cc:	ldr	r3, [sp, #64]	; 0x40
   128d0:	cmp	r3, #0
   128d4:	beq	12970 <putchar_unlocked@plt+0x1ad0>
   128d8:	cmp	r6, #0
   128dc:	bne	1240c <putchar_unlocked@plt+0x156c>
   128e0:	ldr	r3, [sp, #48]	; 0x30
   128e4:	eor	r3, r3, #1
   128e8:	cmp	sl, #2
   128ec:	movne	r3, #0
   128f0:	andeq	r3, r3, #1
   128f4:	cmp	r3, #0
   128f8:	beq	12930 <putchar_unlocked@plt+0x1a90>
   128fc:	cmp	r9, r4
   12900:	movhi	r2, #39	; 0x27
   12904:	strbhi	r2, [r8, r4]
   12908:	add	r2, r4, #1
   1290c:	cmp	r9, r2
   12910:	movhi	r1, #36	; 0x24
   12914:	strbhi	r1, [r8, r2]
   12918:	add	r2, r4, #2
   1291c:	cmp	r9, r2
   12920:	add	r4, r4, #3
   12924:	movhi	r1, #39	; 0x27
   12928:	strbhi	r1, [r8, r2]
   1292c:	str	r3, [sp, #48]	; 0x30
   12930:	cmp	r9, r4
   12934:	movhi	r3, #92	; 0x5c
   12938:	strbhi	r3, [r8, r4]
   1293c:	ldr	fp, [sp, #52]	; 0x34
   12940:	add	r4, r4, #1
   12944:	b	12970 <putchar_unlocked@plt+0x1ad0>
   12948:	mov	r3, #116	; 0x74
   1294c:	b	12524 <putchar_unlocked@plt+0x1684>
   12950:	mov	r3, #118	; 0x76
   12954:	b	126b4 <putchar_unlocked@plt+0x1814>
   12958:	cmp	sl, #2
   1295c:	bne	129cc <putchar_unlocked@plt+0x1b2c>
   12960:	cmp	r6, #0
   12964:	bne	1240c <putchar_unlocked@plt+0x156c>
   12968:	mov	r5, r6
   1296c:	mov	fp, r6
   12970:	ldr	r3, [sp, #48]	; 0x30
   12974:	eor	fp, fp, #1
   12978:	and	fp, fp, r3
   1297c:	tst	fp, #255	; 0xff
   12980:	beq	129ac <putchar_unlocked@plt+0x1b0c>
   12984:	cmp	r9, r4
   12988:	movhi	r3, #39	; 0x27
   1298c:	strbhi	r3, [r8, r4]
   12990:	add	r3, r4, #1
   12994:	cmp	r9, r3
   12998:	movhi	r2, #39	; 0x27
   1299c:	add	r4, r4, #2
   129a0:	strbhi	r2, [r8, r3]
   129a4:	mov	r3, #0
   129a8:	str	r3, [sp, #48]	; 0x30
   129ac:	cmp	r9, r4
   129b0:	strbhi	r7, [r8, r4]
   129b4:	ldr	r3, [sp, #72]	; 0x48
   129b8:	cmp	r5, #0
   129bc:	moveq	r3, #0
   129c0:	add	r4, r4, #1
   129c4:	str	r3, [sp, #72]	; 0x48
   129c8:	b	127b0 <putchar_unlocked@plt+0x1910>
   129cc:	ldr	r3, [sp, #24]
   129d0:	and	r3, r3, r6
   129d4:	tst	r5, r3
   129d8:	moveq	r3, r7
   129dc:	beq	12524 <putchar_unlocked@plt+0x1684>
   129e0:	mov	fp, #0
   129e4:	mov	r5, fp
   129e8:	b	12970 <putchar_unlocked@plt+0x1ad0>
   129ec:	mov	r3, #110	; 0x6e
   129f0:	b	12524 <putchar_unlocked@plt+0x1684>
   129f4:	mov	r3, #97	; 0x61
   129f8:	b	126b4 <putchar_unlocked@plt+0x1814>
   129fc:	mov	r3, #102	; 0x66
   12a00:	b	126b4 <putchar_unlocked@plt+0x1814>
   12a04:	ldr	r3, [sp, #36]	; 0x24
   12a08:	cmn	r3, #1
   12a0c:	bne	12a2c <putchar_unlocked@plt+0x1b8c>
   12a10:	ldr	r3, [sp, #44]	; 0x2c
   12a14:	ldrb	r3, [r3, #1]
   12a18:	adds	r3, r3, #0
   12a1c:	movne	r3, #1
   12a20:	cmp	r3, #0
   12a24:	bne	127c4 <putchar_unlocked@plt+0x1924>
   12a28:	b	12688 <putchar_unlocked@plt+0x17e8>
   12a2c:	ldr	r3, [sp, #36]	; 0x24
   12a30:	subs	r3, r3, #1
   12a34:	b	12a1c <putchar_unlocked@plt+0x1b7c>
   12a38:	mov	r3, #0
   12a3c:	str	r3, [sp, #96]	; 0x60
   12a40:	str	r3, [sp, #100]	; 0x64
   12a44:	ldr	r3, [sp, #36]	; 0x24
   12a48:	cmn	r3, #1
   12a4c:	bne	12a5c <putchar_unlocked@plt+0x1bbc>
   12a50:	ldr	r0, [sp, #44]	; 0x2c
   12a54:	bl	10dc8 <strlen@plt>
   12a58:	str	r0, [sp, #36]	; 0x24
   12a5c:	ldr	r5, [sp, #52]	; 0x34
   12a60:	mov	r3, #0
   12a64:	str	r3, [sp, #56]	; 0x38
   12a68:	ldr	r3, [sp, #28]
   12a6c:	ldr	r2, [sp, #56]	; 0x38
   12a70:	ldr	r1, [sp, #36]	; 0x24
   12a74:	add	r2, r3, r2
   12a78:	ldr	r3, [sp, #44]	; 0x2c
   12a7c:	add	r0, sp, #92	; 0x5c
   12a80:	add	fp, r3, r2
   12a84:	sub	r2, r1, r2
   12a88:	add	r3, sp, #96	; 0x60
   12a8c:	mov	r1, fp
   12a90:	bl	14040 <putchar_unlocked@plt+0x31a0>
   12a94:	subs	r2, r0, #0
   12a98:	beq	12ad8 <putchar_unlocked@plt+0x1c38>
   12a9c:	cmn	r2, #1
   12aa0:	beq	12cb0 <putchar_unlocked@plt+0x1e10>
   12aa4:	cmn	r2, #2
   12aa8:	bne	12c20 <putchar_unlocked@plt+0x1d80>
   12aac:	ldr	r2, [sp, #56]	; 0x38
   12ab0:	ldr	r3, [sp, #28]
   12ab4:	add	r3, r3, r2
   12ab8:	ldr	r2, [sp, #36]	; 0x24
   12abc:	cmp	r2, r3
   12ac0:	bls	12cb0 <putchar_unlocked@plt+0x1e10>
   12ac4:	ldr	r3, [sp, #80]	; 0x50
   12ac8:	ldr	r2, [sp, #56]	; 0x38
   12acc:	ldrb	r5, [r3, r2]
   12ad0:	cmp	r5, #0
   12ad4:	bne	12c10 <putchar_unlocked@plt+0x1d70>
   12ad8:	ldr	r3, [sp, #56]	; 0x38
   12adc:	cmp	r3, #1
   12ae0:	bls	124e8 <putchar_unlocked@plt+0x1648>
   12ae4:	ldr	r2, [sp, #56]	; 0x38
   12ae8:	ldr	r3, [sp, #28]
   12aec:	mov	fp, #0
   12af0:	add	r3, r3, r2
   12af4:	ldr	r2, [sp, #24]
   12af8:	str	r3, [sp, #52]	; 0x34
   12afc:	eor	r3, r5, #1
   12b00:	and	r3, r3, r2
   12b04:	mov	ip, #92	; 0x5c
   12b08:	uxtb	r3, r3
   12b0c:	mov	r2, #39	; 0x27
   12b10:	cmp	r3, #0
   12b14:	beq	12cb8 <putchar_unlocked@plt+0x1e18>
   12b18:	cmp	r6, #0
   12b1c:	bne	12408 <putchar_unlocked@plt+0x1568>
   12b20:	ldr	r1, [sp, #48]	; 0x30
   12b24:	eor	r1, r1, #1
   12b28:	cmp	sl, #2
   12b2c:	movne	r1, #0
   12b30:	andeq	r1, r1, #1
   12b34:	cmp	r1, #0
   12b38:	beq	12b68 <putchar_unlocked@plt+0x1cc8>
   12b3c:	add	r0, r4, #1
   12b40:	cmp	r9, r4
   12b44:	strbhi	r2, [r8, r4]
   12b48:	cmp	r9, r0
   12b4c:	movhi	lr, #36	; 0x24
   12b50:	strbhi	lr, [r8, r0]
   12b54:	add	r0, r4, #2
   12b58:	add	r4, r4, #3
   12b5c:	cmp	r9, r0
   12b60:	strbhi	r2, [r8, r0]
   12b64:	str	r1, [sp, #48]	; 0x30
   12b68:	add	r0, r4, #1
   12b6c:	cmp	r9, r4
   12b70:	strbhi	ip, [r8, r4]
   12b74:	cmp	r9, r0
   12b78:	lsrhi	r1, r7, #6
   12b7c:	addhi	r1, r1, #48	; 0x30
   12b80:	strbhi	r1, [r8, r0]
   12b84:	add	r0, r4, #2
   12b88:	cmp	r9, r0
   12b8c:	lsrhi	r1, r7, #3
   12b90:	and	r7, r7, #7
   12b94:	andhi	r1, r1, #7
   12b98:	add	r4, r4, #3
   12b9c:	add	r7, r7, #48	; 0x30
   12ba0:	mov	fp, r3
   12ba4:	addhi	r1, r1, #48	; 0x30
   12ba8:	strbhi	r1, [r8, r0]
   12bac:	ldr	r1, [sp, #28]
   12bb0:	ldr	r0, [sp, #52]	; 0x34
   12bb4:	add	r1, r1, #1
   12bb8:	cmp	r0, r1
   12bbc:	bls	12970 <putchar_unlocked@plt+0x1ad0>
   12bc0:	ldr	lr, [sp, #48]	; 0x30
   12bc4:	eor	r0, fp, #1
   12bc8:	and	r0, r0, lr
   12bcc:	tst	r0, #255	; 0xff
   12bd0:	beq	12bf4 <putchar_unlocked@plt+0x1d54>
   12bd4:	add	r0, r4, #1
   12bd8:	cmp	r9, r4
   12bdc:	strbhi	r2, [r8, r4]
   12be0:	cmp	r9, r0
   12be4:	add	r4, r4, #2
   12be8:	strbhi	r2, [r8, r0]
   12bec:	mov	r0, #0
   12bf0:	str	r0, [sp, #48]	; 0x30
   12bf4:	ldr	r0, [sp, #44]	; 0x2c
   12bf8:	cmp	r9, r4
   12bfc:	strbhi	r7, [r8, r4]
   12c00:	str	r1, [sp, #28]
   12c04:	add	r4, r4, #1
   12c08:	ldrb	r7, [r0, r1]
   12c0c:	b	12b10 <putchar_unlocked@plt+0x1c70>
   12c10:	ldr	r3, [sp, #56]	; 0x38
   12c14:	add	r3, r3, #1
   12c18:	str	r3, [sp, #56]	; 0x38
   12c1c:	b	12aac <putchar_unlocked@plt+0x1c0c>
   12c20:	cmp	sl, #2
   12c24:	movne	r3, #0
   12c28:	andeq	r3, r6, #1
   12c2c:	cmp	r3, #0
   12c30:	movne	r1, #1
   12c34:	bne	12c90 <putchar_unlocked@plt+0x1df0>
   12c38:	ldr	r0, [sp, #92]	; 0x5c
   12c3c:	str	r2, [sp, #84]	; 0x54
   12c40:	bl	10d20 <iswprint@plt>
   12c44:	ldr	r3, [sp, #56]	; 0x38
   12c48:	ldr	r2, [sp, #84]	; 0x54
   12c4c:	add	r3, r3, r2
   12c50:	str	r3, [sp, #56]	; 0x38
   12c54:	cmp	r0, #0
   12c58:	add	r0, sp, #96	; 0x60
   12c5c:	moveq	r5, #0
   12c60:	bl	10cc0 <mbsinit@plt>
   12c64:	cmp	r0, #0
   12c68:	beq	12a68 <putchar_unlocked@plt+0x1bc8>
   12c6c:	b	12ad8 <putchar_unlocked@plt+0x1c38>
   12c70:	ldrb	r3, [fp, r1]
   12c74:	cmp	r3, #94	; 0x5e
   12c78:	beq	12538 <putchar_unlocked@plt+0x1698>
   12c7c:	bhi	12c9c <putchar_unlocked@plt+0x1dfc>
   12c80:	sub	r3, r3, #91	; 0x5b
   12c84:	cmp	r3, #1
   12c88:	bls	12538 <putchar_unlocked@plt+0x1698>
   12c8c:	add	r1, r1, #1
   12c90:	cmp	r1, r2
   12c94:	bne	12c70 <putchar_unlocked@plt+0x1dd0>
   12c98:	b	12c38 <putchar_unlocked@plt+0x1d98>
   12c9c:	cmp	r3, #96	; 0x60
   12ca0:	beq	12538 <putchar_unlocked@plt+0x1698>
   12ca4:	cmp	r3, #124	; 0x7c
   12ca8:	bne	12c8c <putchar_unlocked@plt+0x1dec>
   12cac:	b	12538 <putchar_unlocked@plt+0x1698>
   12cb0:	mov	r5, #0
   12cb4:	b	12ad8 <putchar_unlocked@plt+0x1c38>
   12cb8:	ldr	r1, [sp, #64]	; 0x40
   12cbc:	cmp	r1, #0
   12cc0:	beq	12bac <putchar_unlocked@plt+0x1d0c>
   12cc4:	cmp	r9, r4
   12cc8:	strbhi	ip, [r8, r4]
   12ccc:	str	r3, [sp, #64]	; 0x40
   12cd0:	add	r4, r4, #1
   12cd4:	b	12bac <putchar_unlocked@plt+0x1d0c>
   12cd8:	mov	r5, fp
   12cdc:	ldr	fp, [sp, #24]
   12ce0:	mov	r7, #48	; 0x30
   12ce4:	b	12880 <putchar_unlocked@plt+0x19e0>
   12ce8:	mov	r5, #0
   12cec:	mov	fp, r5
   12cf0:	b	12880 <putchar_unlocked@plt+0x19e0>
   12cf4:	ldr	r3, [sp, #36]	; 0x24
   12cf8:	ldr	r2, [sp, #28]
   12cfc:	subs	r3, r3, r2
   12d00:	movne	r3, #1
   12d04:	b	1217c <putchar_unlocked@plt+0x12dc>
   12d08:	ldr	r3, [sp, #60]	; 0x3c
   12d0c:	clz	r7, r9
   12d10:	cmp	r3, #0
   12d14:	lsr	r7, r7, #5
   12d18:	moveq	r7, #0
   12d1c:	cmp	r7, #0
   12d20:	mov	r5, r3
   12d24:	bne	120dc <putchar_unlocked@plt+0x123c>
   12d28:	ldr	r3, [sp, #68]	; 0x44
   12d2c:	ldr	r2, [sp, #40]	; 0x28
   12d30:	cmp	r2, #0
   12d34:	moveq	r3, #0
   12d38:	andne	r3, r3, #1
   12d3c:	cmp	r3, #0
   12d40:	movne	r3, r2
   12d44:	subne	r2, r3, #1
   12d48:	bne	12d78 <putchar_unlocked@plt+0x1ed8>
   12d4c:	cmp	r9, r4
   12d50:	movhi	r3, #0
   12d54:	strbhi	r3, [r8, r4]
   12d58:	mov	r0, r4
   12d5c:	add	sp, sp, #108	; 0x6c
   12d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d64:	mov	r3, r2
   12d68:	b	12d2c <putchar_unlocked@plt+0x1e8c>
   12d6c:	cmp	r9, r4
   12d70:	strbhi	r3, [r8, r4]
   12d74:	add	r4, r4, #1
   12d78:	ldrb	r3, [r2, #1]!
   12d7c:	cmp	r3, #0
   12d80:	bne	12d6c <putchar_unlocked@plt+0x1ecc>
   12d84:	b	12d4c <putchar_unlocked@plt+0x1eac>
   12d88:	ldr	r3, [pc, #32]	; 12db0 <putchar_unlocked@plt+0x1f10>
   12d8c:	mov	r6, #1
   12d90:	str	r6, [sp, #24]
   12d94:	str	r6, [sp, #32]
   12d98:	str	r3, [sp, #40]	; 0x28
   12d9c:	mov	r4, #0
   12da0:	mov	sl, #5
   12da4:	b	1214c <putchar_unlocked@plt+0x12ac>
   12da8:	mov	r6, #1
   12dac:	b	12340 <putchar_unlocked@plt+0x14a0>
   12db0:	andeq	r4, r1, pc, ror ip
   12db4:	andeq	r4, r1, r3, lsl #25
   12db8:	andeq	r4, r1, r1, lsl #25
   12dbc:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc4:	sub	sp, sp, #52	; 0x34
   12dc8:	mov	r6, r0
   12dcc:	mov	r5, r3
   12dd0:	mov	r8, r1
   12dd4:	mov	r9, r2
   12dd8:	bl	10dd4 <__errno_location@plt>
   12ddc:	ldr	r7, [pc, #380]	; 12f60 <putchar_unlocked@plt+0x20c0>
   12de0:	cmn	r6, #-2147483647	; 0x80000001
   12de4:	ldr	r4, [r7]
   12de8:	ldr	r3, [r0]
   12dec:	str	r0, [sp, #24]
   12df0:	str	r3, [sp, #32]
   12df4:	movne	r3, #0
   12df8:	moveq	r3, #1
   12dfc:	orrs	r3, r3, r6, lsr #31
   12e00:	beq	12e08 <putchar_unlocked@plt+0x1f68>
   12e04:	bl	10e94 <abort@plt>
   12e08:	ldr	r2, [r7, #4]
   12e0c:	cmp	r6, r2
   12e10:	blt	12e80 <putchar_unlocked@plt+0x1fe0>
   12e14:	add	r1, sp, #48	; 0x30
   12e18:	add	sl, r7, #8
   12e1c:	str	r2, [r1, #-4]!
   12e20:	cmp	r4, sl
   12e24:	mov	r3, #8
   12e28:	sub	r2, r6, r2
   12e2c:	movne	r0, r4
   12e30:	str	r3, [sp]
   12e34:	add	r2, r2, #1
   12e38:	mvn	r3, #-2147483648	; 0x80000000
   12e3c:	moveq	r0, #0
   12e40:	bl	13b54 <putchar_unlocked@plt+0x2cb4>
   12e44:	cmp	r4, sl
   12e48:	ldr	r2, [sp, #44]	; 0x2c
   12e4c:	mov	fp, r0
   12e50:	str	r0, [r7]
   12e54:	ldmeq	r4, {r0, r1}
   12e58:	mov	r4, fp
   12e5c:	stmeq	fp, {r0, r1}
   12e60:	ldr	r0, [r7, #4]
   12e64:	mov	r1, #0
   12e68:	sub	r2, r2, r0
   12e6c:	add	r0, fp, r0, lsl #3
   12e70:	lsl	r2, r2, #3
   12e74:	bl	10dec <memset@plt>
   12e78:	ldr	r3, [sp, #44]	; 0x2c
   12e7c:	str	r3, [r7, #4]
   12e80:	ldr	r3, [r5, #4]
   12e84:	add	sl, r4, r6, lsl #3
   12e88:	orr	r3, r3, #1
   12e8c:	str	r3, [sp, #28]
   12e90:	add	r3, r5, #8
   12e94:	str	r3, [sp, #36]	; 0x24
   12e98:	ldr	r3, [r5, #44]	; 0x2c
   12e9c:	ldr	fp, [r4, r6, lsl #3]
   12ea0:	ldr	r7, [sl, #4]
   12ea4:	str	r3, [sp, #16]
   12ea8:	ldr	r3, [r5, #40]	; 0x28
   12eac:	mov	r2, r8
   12eb0:	str	r3, [sp, #12]
   12eb4:	add	r3, r5, #8
   12eb8:	str	r3, [sp, #8]
   12ebc:	ldr	r3, [sp, #28]
   12ec0:	mov	r1, fp
   12ec4:	str	r3, [sp, #4]
   12ec8:	ldr	r3, [r5]
   12ecc:	mov	r0, r7
   12ed0:	str	r3, [sp]
   12ed4:	mov	r3, r9
   12ed8:	bl	1208c <putchar_unlocked@plt+0x11ec>
   12edc:	cmp	fp, r0
   12ee0:	bhi	12f48 <putchar_unlocked@plt+0x20a8>
   12ee4:	ldr	r3, [pc, #120]	; 12f64 <putchar_unlocked@plt+0x20c4>
   12ee8:	add	fp, r0, #1
   12eec:	cmp	r7, r3
   12ef0:	str	fp, [r4, r6, lsl #3]
   12ef4:	beq	12f00 <putchar_unlocked@plt+0x2060>
   12ef8:	mov	r0, r7
   12efc:	bl	11db4 <putchar_unlocked@plt+0xf14>
   12f00:	mov	r0, fp
   12f04:	bl	13a0c <putchar_unlocked@plt+0x2b6c>
   12f08:	ldr	r3, [r5, #44]	; 0x2c
   12f0c:	mov	r2, r8
   12f10:	mov	r1, fp
   12f14:	str	r0, [sl, #4]
   12f18:	str	r3, [sp, #16]
   12f1c:	ldr	r3, [r5, #40]	; 0x28
   12f20:	mov	r7, r0
   12f24:	str	r3, [sp, #12]
   12f28:	add	r3, r5, #8
   12f2c:	str	r3, [sp, #8]
   12f30:	ldr	r3, [sp, #28]
   12f34:	str	r3, [sp, #4]
   12f38:	ldr	r3, [r5]
   12f3c:	str	r3, [sp]
   12f40:	mov	r3, r9
   12f44:	bl	1208c <putchar_unlocked@plt+0x11ec>
   12f48:	ldr	r3, [sp, #24]
   12f4c:	ldr	r2, [sp, #32]
   12f50:	mov	r0, r7
   12f54:	str	r2, [r3]
   12f58:	add	sp, sp, #52	; 0x34
   12f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f60:	andeq	r6, r2, ip, ror #1
   12f64:	andeq	r6, r2, r4, ror r1
   12f68:	push	{r4, r5, r6, lr}
   12f6c:	mov	r5, r0
   12f70:	bl	10dd4 <__errno_location@plt>
   12f74:	cmp	r5, #0
   12f78:	mov	r1, #48	; 0x30
   12f7c:	ldr	r6, [r0]
   12f80:	mov	r4, r0
   12f84:	ldr	r0, [pc, #12]	; 12f98 <putchar_unlocked@plt+0x20f8>
   12f88:	movne	r0, r5
   12f8c:	bl	13de8 <putchar_unlocked@plt+0x2f48>
   12f90:	str	r6, [r4]
   12f94:	pop	{r4, r5, r6, pc}
   12f98:	andeq	r6, r2, r4, ror r2
   12f9c:	ldr	r3, [pc, #12]	; 12fb0 <putchar_unlocked@plt+0x2110>
   12fa0:	cmp	r0, #0
   12fa4:	moveq	r0, r3
   12fa8:	ldr	r0, [r0]
   12fac:	bx	lr
   12fb0:	andeq	r6, r2, r4, ror r2
   12fb4:	ldr	r3, [pc, #12]	; 12fc8 <putchar_unlocked@plt+0x2128>
   12fb8:	cmp	r0, #0
   12fbc:	moveq	r0, r3
   12fc0:	str	r1, [r0]
   12fc4:	bx	lr
   12fc8:	andeq	r6, r2, r4, ror r2
   12fcc:	ldr	r3, [pc, #52]	; 13008 <putchar_unlocked@plt+0x2168>
   12fd0:	cmp	r0, #0
   12fd4:	moveq	r0, r3
   12fd8:	add	r3, r0, #8
   12fdc:	push	{lr}		; (str lr, [sp, #-4]!)
   12fe0:	lsr	lr, r1, #5
   12fe4:	and	r1, r1, #31
   12fe8:	ldr	ip, [r3, lr, lsl #2]
   12fec:	lsr	r0, ip, r1
   12ff0:	eor	r2, r2, r0
   12ff4:	and	r2, r2, #1
   12ff8:	and	r0, r0, #1
   12ffc:	eor	r1, ip, r2, lsl r1
   13000:	str	r1, [r3, lr, lsl #2]
   13004:	pop	{pc}		; (ldr pc, [sp], #4)
   13008:	andeq	r6, r2, r4, ror r2
   1300c:	ldr	r3, [pc, #16]	; 13024 <putchar_unlocked@plt+0x2184>
   13010:	cmp	r0, #0
   13014:	movne	r3, r0
   13018:	ldr	r0, [r3, #4]
   1301c:	str	r1, [r3, #4]
   13020:	bx	lr
   13024:	andeq	r6, r2, r4, ror r2
   13028:	ldr	r3, [pc, #44]	; 1305c <putchar_unlocked@plt+0x21bc>
   1302c:	cmp	r0, #0
   13030:	moveq	r0, r3
   13034:	mov	r3, #10
   13038:	cmp	r2, #0
   1303c:	cmpne	r1, #0
   13040:	str	r3, [r0]
   13044:	bne	13050 <putchar_unlocked@plt+0x21b0>
   13048:	push	{r4, lr}
   1304c:	bl	10e94 <abort@plt>
   13050:	str	r1, [r0, #40]	; 0x28
   13054:	str	r2, [r0, #44]	; 0x2c
   13058:	bx	lr
   1305c:	andeq	r6, r2, r4, ror r2
   13060:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13064:	sub	sp, sp, #24
   13068:	mov	sl, r3
   1306c:	ldr	r4, [sp, #56]	; 0x38
   13070:	ldr	r3, [pc, #100]	; 130dc <putchar_unlocked@plt+0x223c>
   13074:	cmp	r4, #0
   13078:	moveq	r4, r3
   1307c:	mov	r7, r0
   13080:	mov	r8, r1
   13084:	mov	r9, r2
   13088:	bl	10dd4 <__errno_location@plt>
   1308c:	ldr	r3, [r4, #44]	; 0x2c
   13090:	mov	r2, r9
   13094:	mov	r1, r8
   13098:	ldr	r6, [r0]
   1309c:	str	r3, [sp, #16]
   130a0:	ldr	r3, [r4, #40]	; 0x28
   130a4:	mov	r5, r0
   130a8:	str	r3, [sp, #12]
   130ac:	add	r3, r4, #8
   130b0:	str	r3, [sp, #8]
   130b4:	ldr	r3, [r4, #4]
   130b8:	mov	r0, r7
   130bc:	str	r3, [sp, #4]
   130c0:	ldr	r3, [r4]
   130c4:	str	r3, [sp]
   130c8:	mov	r3, sl
   130cc:	bl	1208c <putchar_unlocked@plt+0x11ec>
   130d0:	str	r6, [r5]
   130d4:	add	sp, sp, #24
   130d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130dc:	andeq	r6, r2, r4, ror r2
   130e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130e4:	cmp	r3, #0
   130e8:	sub	sp, sp, #44	; 0x2c
   130ec:	ldr	r4, [pc, #188]	; 131b0 <putchar_unlocked@plt+0x2310>
   130f0:	mov	r6, r2
   130f4:	movne	r4, r3
   130f8:	mov	sl, r1
   130fc:	mov	r9, r0
   13100:	bl	10dd4 <__errno_location@plt>
   13104:	ldr	r5, [r4, #4]
   13108:	add	fp, r4, #8
   1310c:	cmp	r6, #0
   13110:	orreq	r5, r5, #1
   13114:	mov	r1, #0
   13118:	mov	r2, r9
   1311c:	ldr	r3, [r0]
   13120:	mov	r8, r0
   13124:	str	r3, [sp, #28]
   13128:	ldr	r3, [r4, #44]	; 0x2c
   1312c:	mov	r0, r1
   13130:	str	r3, [sp, #16]
   13134:	ldr	r3, [r4, #40]	; 0x28
   13138:	stmib	sp, {r5, fp}
   1313c:	str	r3, [sp, #12]
   13140:	ldr	r3, [r4]
   13144:	str	r3, [sp]
   13148:	mov	r3, sl
   1314c:	bl	1208c <putchar_unlocked@plt+0x11ec>
   13150:	add	r1, r0, #1
   13154:	mov	r7, r0
   13158:	mov	r0, r1
   1315c:	str	r1, [sp, #36]	; 0x24
   13160:	bl	13a0c <putchar_unlocked@plt+0x2b6c>
   13164:	ldr	r3, [r4, #44]	; 0x2c
   13168:	mov	r2, r9
   1316c:	str	r3, [sp, #16]
   13170:	ldr	r3, [r4, #40]	; 0x28
   13174:	stmib	sp, {r5, fp}
   13178:	str	r3, [sp, #12]
   1317c:	ldr	r3, [r4]
   13180:	ldr	r1, [sp, #36]	; 0x24
   13184:	str	r3, [sp]
   13188:	mov	r3, sl
   1318c:	str	r0, [sp, #32]
   13190:	bl	1208c <putchar_unlocked@plt+0x11ec>
   13194:	ldr	r3, [sp, #28]
   13198:	cmp	r6, #0
   1319c:	str	r3, [r8]
   131a0:	ldr	r0, [sp, #32]
   131a4:	strne	r7, [r6]
   131a8:	add	sp, sp, #44	; 0x2c
   131ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131b0:	andeq	r6, r2, r4, ror r2
   131b4:	mov	r3, r2
   131b8:	mov	r2, #0
   131bc:	b	130e0 <putchar_unlocked@plt+0x2240>
   131c0:	push	{r4, r5, r6, r7, r8, lr}
   131c4:	mov	r6, #1
   131c8:	ldr	r4, [pc, #104]	; 13238 <putchar_unlocked@plt+0x2398>
   131cc:	ldr	r5, [r4]
   131d0:	add	r7, r5, #12
   131d4:	ldr	r3, [r4, #4]
   131d8:	add	r7, r7, #8
   131dc:	cmp	r6, r3
   131e0:	blt	13228 <putchar_unlocked@plt+0x2388>
   131e4:	ldr	r0, [r5, #4]
   131e8:	ldr	r6, [pc, #76]	; 1323c <putchar_unlocked@plt+0x239c>
   131ec:	cmp	r0, r6
   131f0:	beq	13204 <putchar_unlocked@plt+0x2364>
   131f4:	bl	11db4 <putchar_unlocked@plt+0xf14>
   131f8:	mov	r3, #256	; 0x100
   131fc:	str	r3, [r4, #8]
   13200:	str	r6, [r4, #12]
   13204:	ldr	r6, [pc, #52]	; 13240 <putchar_unlocked@plt+0x23a0>
   13208:	cmp	r5, r6
   1320c:	beq	1321c <putchar_unlocked@plt+0x237c>
   13210:	mov	r0, r5
   13214:	bl	11db4 <putchar_unlocked@plt+0xf14>
   13218:	str	r6, [r4]
   1321c:	mov	r3, #1
   13220:	str	r3, [r4, #4]
   13224:	pop	{r4, r5, r6, r7, r8, pc}
   13228:	ldr	r0, [r7, #-8]
   1322c:	bl	11db4 <putchar_unlocked@plt+0xf14>
   13230:	add	r6, r6, #1
   13234:	b	131d4 <putchar_unlocked@plt+0x2334>
   13238:	andeq	r6, r2, ip, ror #1
   1323c:	andeq	r6, r2, r4, ror r1
   13240:	strdeq	r6, [r2], -r4
   13244:	ldr	r3, [pc, #4]	; 13250 <putchar_unlocked@plt+0x23b0>
   13248:	mvn	r2, #0
   1324c:	b	12dc0 <putchar_unlocked@plt+0x1f20>
   13250:	andeq	r6, r2, r4, ror r2
   13254:	ldr	r3, [pc]	; 1325c <putchar_unlocked@plt+0x23bc>
   13258:	b	12dc0 <putchar_unlocked@plt+0x1f20>
   1325c:	andeq	r6, r2, r4, ror r2
   13260:	mov	r1, r0
   13264:	mov	r0, #0
   13268:	b	13244 <putchar_unlocked@plt+0x23a4>
   1326c:	mov	r2, r1
   13270:	mov	r1, r0
   13274:	mov	r0, #0
   13278:	b	13254 <putchar_unlocked@plt+0x23b4>
   1327c:	push	{r4, r5, lr}
   13280:	sub	sp, sp, #52	; 0x34
   13284:	mov	r5, r2
   13288:	mov	r4, r0
   1328c:	mov	r0, sp
   13290:	bl	11f48 <putchar_unlocked@plt+0x10a8>
   13294:	mov	r3, sp
   13298:	mvn	r2, #0
   1329c:	mov	r1, r5
   132a0:	mov	r0, r4
   132a4:	bl	12dc0 <putchar_unlocked@plt+0x1f20>
   132a8:	add	sp, sp, #52	; 0x34
   132ac:	pop	{r4, r5, pc}
   132b0:	push	{r4, r5, r6, lr}
   132b4:	sub	sp, sp, #48	; 0x30
   132b8:	mov	r5, r2
   132bc:	mov	r6, r3
   132c0:	mov	r4, r0
   132c4:	mov	r0, sp
   132c8:	bl	11f48 <putchar_unlocked@plt+0x10a8>
   132cc:	mov	r3, sp
   132d0:	mov	r2, r6
   132d4:	mov	r1, r5
   132d8:	mov	r0, r4
   132dc:	bl	12dc0 <putchar_unlocked@plt+0x1f20>
   132e0:	add	sp, sp, #48	; 0x30
   132e4:	pop	{r4, r5, r6, pc}
   132e8:	mov	r2, r1
   132ec:	mov	r1, r0
   132f0:	mov	r0, #0
   132f4:	b	1327c <putchar_unlocked@plt+0x23dc>
   132f8:	mov	r3, r2
   132fc:	mov	r2, r1
   13300:	mov	r1, r0
   13304:	mov	r0, #0
   13308:	b	132b0 <putchar_unlocked@plt+0x2410>
   1330c:	push	{r4, r5, r6, lr}
   13310:	mov	r4, r0
   13314:	ldr	lr, [pc, #80]	; 1336c <putchar_unlocked@plt+0x24cc>
   13318:	mov	r5, r1
   1331c:	mov	r6, r2
   13320:	ldm	lr!, {r0, r1, r2, r3}
   13324:	sub	sp, sp, #48	; 0x30
   13328:	mov	ip, sp
   1332c:	stmia	ip!, {r0, r1, r2, r3}
   13330:	ldm	lr!, {r0, r1, r2, r3}
   13334:	stmia	ip!, {r0, r1, r2, r3}
   13338:	ldm	lr, {r0, r1, r2, r3}
   1333c:	stm	ip, {r0, r1, r2, r3}
   13340:	mov	r1, r6
   13344:	mov	r2, #1
   13348:	mov	r0, sp
   1334c:	bl	12fcc <putchar_unlocked@plt+0x212c>
   13350:	mov	r3, sp
   13354:	mov	r2, r5
   13358:	mov	r1, r4
   1335c:	mov	r0, #0
   13360:	bl	12dc0 <putchar_unlocked@plt+0x1f20>
   13364:	add	sp, sp, #48	; 0x30
   13368:	pop	{r4, r5, r6, pc}
   1336c:	andeq	r6, r2, r4, ror r2
   13370:	mov	r2, r1
   13374:	mvn	r1, #0
   13378:	b	1330c <putchar_unlocked@plt+0x246c>
   1337c:	mov	r1, #58	; 0x3a
   13380:	b	13370 <putchar_unlocked@plt+0x24d0>
   13384:	mov	r2, #58	; 0x3a
   13388:	b	1330c <putchar_unlocked@plt+0x246c>
   1338c:	push	{r4, r5, lr}
   13390:	sub	sp, sp, #100	; 0x64
   13394:	mov	r4, r0
   13398:	mov	r0, sp
   1339c:	mov	r5, r2
   133a0:	bl	11f48 <putchar_unlocked@plt+0x10a8>
   133a4:	mov	ip, sp
   133a8:	add	lr, sp, #48	; 0x30
   133ac:	ldm	ip!, {r0, r1, r2, r3}
   133b0:	stmia	lr!, {r0, r1, r2, r3}
   133b4:	ldm	ip!, {r0, r1, r2, r3}
   133b8:	stmia	lr!, {r0, r1, r2, r3}
   133bc:	ldm	ip, {r0, r1, r2, r3}
   133c0:	stm	lr, {r0, r1, r2, r3}
   133c4:	mov	r2, #1
   133c8:	mov	r1, #58	; 0x3a
   133cc:	add	r0, sp, #48	; 0x30
   133d0:	bl	12fcc <putchar_unlocked@plt+0x212c>
   133d4:	add	r3, sp, #48	; 0x30
   133d8:	mvn	r2, #0
   133dc:	mov	r1, r5
   133e0:	mov	r0, r4
   133e4:	bl	12dc0 <putchar_unlocked@plt+0x1f20>
   133e8:	add	sp, sp, #100	; 0x64
   133ec:	pop	{r4, r5, pc}
   133f0:	push	{r4, r5, r6, r7, lr}
   133f4:	mov	r4, r0
   133f8:	ldr	lr, [pc, #84]	; 13454 <putchar_unlocked@plt+0x25b4>
   133fc:	mov	r6, r1
   13400:	mov	r7, r2
   13404:	mov	r5, r3
   13408:	ldm	lr!, {r0, r1, r2, r3}
   1340c:	sub	sp, sp, #52	; 0x34
   13410:	mov	ip, sp
   13414:	stmia	ip!, {r0, r1, r2, r3}
   13418:	ldm	lr!, {r0, r1, r2, r3}
   1341c:	stmia	ip!, {r0, r1, r2, r3}
   13420:	ldm	lr, {r0, r1, r2, r3}
   13424:	stm	ip, {r0, r1, r2, r3}
   13428:	mov	r2, r7
   1342c:	mov	r1, r6
   13430:	mov	r0, sp
   13434:	bl	13028 <putchar_unlocked@plt+0x2188>
   13438:	mov	r3, sp
   1343c:	ldr	r2, [sp, #72]	; 0x48
   13440:	mov	r1, r5
   13444:	mov	r0, r4
   13448:	bl	12dc0 <putchar_unlocked@plt+0x1f20>
   1344c:	add	sp, sp, #52	; 0x34
   13450:	pop	{r4, r5, r6, r7, pc}
   13454:	andeq	r6, r2, r4, ror r2
   13458:	mvn	ip, #0
   1345c:	push	{r0, r1, r2, lr}
   13460:	str	ip, [sp]
   13464:	bl	133f0 <putchar_unlocked@plt+0x2550>
   13468:	add	sp, sp, #12
   1346c:	pop	{pc}		; (ldr pc, [sp], #4)
   13470:	mov	r3, r2
   13474:	mov	r2, r1
   13478:	mov	r1, r0
   1347c:	mov	r0, #0
   13480:	b	13458 <putchar_unlocked@plt+0x25b8>
   13484:	push	{r0, r1, r2, lr}
   13488:	str	r3, [sp]
   1348c:	mov	r3, r2
   13490:	mov	r2, r1
   13494:	mov	r1, r0
   13498:	mov	r0, #0
   1349c:	bl	133f0 <putchar_unlocked@plt+0x2550>
   134a0:	add	sp, sp, #12
   134a4:	pop	{pc}		; (ldr pc, [sp], #4)
   134a8:	ldr	r3, [pc]	; 134b0 <putchar_unlocked@plt+0x2610>
   134ac:	b	12dc0 <putchar_unlocked@plt+0x1f20>
   134b0:	strdeq	r6, [r2], -ip
   134b4:	mov	r2, r1
   134b8:	mov	r1, r0
   134bc:	mov	r0, #0
   134c0:	b	134a8 <putchar_unlocked@plt+0x2608>
   134c4:	mvn	r2, #0
   134c8:	b	134a8 <putchar_unlocked@plt+0x2608>
   134cc:	mov	r1, r0
   134d0:	mov	r0, #0
   134d4:	b	134c4 <putchar_unlocked@plt+0x2624>
   134d8:	push	{r4, r5, r6, lr}
   134dc:	sub	sp, sp, #32
   134e0:	cmp	r1, #0
   134e4:	mov	r5, r0
   134e8:	ldr	r4, [sp, #48]	; 0x30
   134ec:	ldr	r6, [sp, #52]	; 0x34
   134f0:	beq	135a4 <putchar_unlocked@plt+0x2704>
   134f4:	stm	sp, {r2, r3}
   134f8:	mov	r3, r1
   134fc:	ldr	r2, [pc, #860]	; 13860 <putchar_unlocked@plt+0x29c0>
   13500:	mov	r1, #1
   13504:	bl	10e10 <__fprintf_chk@plt>
   13508:	mov	r2, #5
   1350c:	ldr	r1, [pc, #848]	; 13864 <putchar_unlocked@plt+0x29c4>
   13510:	mov	r0, #0
   13514:	bl	10cfc <dcgettext@plt>
   13518:	ldr	r3, [pc, #840]	; 13868 <putchar_unlocked@plt+0x29c8>
   1351c:	ldr	r2, [pc, #840]	; 1386c <putchar_unlocked@plt+0x29cc>
   13520:	str	r3, [sp]
   13524:	mov	r1, #1
   13528:	mov	r3, r0
   1352c:	mov	r0, r5
   13530:	bl	10e10 <__fprintf_chk@plt>
   13534:	mov	r1, r5
   13538:	mov	r0, #10
   1353c:	bl	10ce4 <fputc_unlocked@plt>
   13540:	mov	r2, #5
   13544:	ldr	r1, [pc, #804]	; 13870 <putchar_unlocked@plt+0x29d0>
   13548:	mov	r0, #0
   1354c:	bl	10cfc <dcgettext@plt>
   13550:	mov	r1, #1
   13554:	ldr	r3, [pc, #792]	; 13874 <putchar_unlocked@plt+0x29d4>
   13558:	mov	r2, r0
   1355c:	mov	r0, r5
   13560:	bl	10e10 <__fprintf_chk@plt>
   13564:	mov	r1, r5
   13568:	mov	r0, #10
   1356c:	bl	10ce4 <fputc_unlocked@plt>
   13570:	cmp	r6, #9
   13574:	ldrls	pc, [pc, r6, lsl #2]
   13578:	b	13854 <putchar_unlocked@plt+0x29b4>
   1357c:	muleq	r1, r4, r6
   13580:			; <UNDEFINED> instruction: 0x000135bc
   13584:	andeq	r3, r1, r8, ror #11
   13588:	andeq	r3, r1, ip, lsl r6
   1358c:	andeq	r3, r1, r8, asr r6
   13590:	muleq	r1, ip, r6
   13594:	andeq	r3, r1, r4, ror #13
   13598:	andeq	r3, r1, r4, lsr r7
   1359c:	andeq	r3, r1, ip, lsl #15
   135a0:	andeq	r3, r1, ip, ror #15
   135a4:	str	r3, [sp]
   135a8:	mov	r1, #1
   135ac:	mov	r3, r2
   135b0:	ldr	r2, [pc, #704]	; 13878 <putchar_unlocked@plt+0x29d8>
   135b4:	bl	10e10 <__fprintf_chk@plt>
   135b8:	b	13508 <putchar_unlocked@plt+0x2668>
   135bc:	mov	r2, #5
   135c0:	ldr	r1, [pc, #692]	; 1387c <putchar_unlocked@plt+0x29dc>
   135c4:	mov	r0, #0
   135c8:	bl	10cfc <dcgettext@plt>
   135cc:	ldr	r3, [r4]
   135d0:	mov	r1, #1
   135d4:	mov	r2, r0
   135d8:	mov	r0, r5
   135dc:	add	sp, sp, #32
   135e0:	pop	{r4, r5, r6, lr}
   135e4:	b	10e10 <__fprintf_chk@plt>
   135e8:	mov	r2, #5
   135ec:	ldr	r1, [pc, #652]	; 13880 <putchar_unlocked@plt+0x29e0>
   135f0:	mov	r0, #0
   135f4:	bl	10cfc <dcgettext@plt>
   135f8:	ldr	r3, [r4, #4]
   135fc:	mov	r1, #1
   13600:	str	r3, [sp, #48]	; 0x30
   13604:	ldr	r3, [r4]
   13608:	mov	r2, r0
   1360c:	mov	r0, r5
   13610:	add	sp, sp, #32
   13614:	pop	{r4, r5, r6, lr}
   13618:	b	10e10 <__fprintf_chk@plt>
   1361c:	mov	r2, #5
   13620:	ldr	r1, [pc, #604]	; 13884 <putchar_unlocked@plt+0x29e4>
   13624:	mov	r0, #0
   13628:	bl	10cfc <dcgettext@plt>
   1362c:	ldr	r3, [r4, #8]
   13630:	mov	r1, #1
   13634:	str	r3, [sp, #52]	; 0x34
   13638:	ldr	r3, [r4, #4]
   1363c:	str	r3, [sp, #48]	; 0x30
   13640:	ldr	r3, [r4]
   13644:	mov	r2, r0
   13648:	mov	r0, r5
   1364c:	add	sp, sp, #32
   13650:	pop	{r4, r5, r6, lr}
   13654:	b	10e10 <__fprintf_chk@plt>
   13658:	mov	r2, #5
   1365c:	ldr	r1, [pc, #548]	; 13888 <putchar_unlocked@plt+0x29e8>
   13660:	mov	r0, #0
   13664:	bl	10cfc <dcgettext@plt>
   13668:	ldr	r3, [r4, #12]
   1366c:	mov	r1, #1
   13670:	str	r3, [sp, #8]
   13674:	ldr	r3, [r4, #8]
   13678:	str	r3, [sp, #4]
   1367c:	ldr	r3, [r4, #4]
   13680:	str	r3, [sp]
   13684:	ldr	r3, [r4]
   13688:	mov	r2, r0
   1368c:	mov	r0, r5
   13690:	bl	10e10 <__fprintf_chk@plt>
   13694:	add	sp, sp, #32
   13698:	pop	{r4, r5, r6, pc}
   1369c:	mov	r2, #5
   136a0:	ldr	r1, [pc, #484]	; 1388c <putchar_unlocked@plt+0x29ec>
   136a4:	mov	r0, #0
   136a8:	bl	10cfc <dcgettext@plt>
   136ac:	ldr	r3, [r4, #16]
   136b0:	mov	r1, #1
   136b4:	str	r3, [sp, #12]
   136b8:	ldr	r3, [r4, #12]
   136bc:	str	r3, [sp, #8]
   136c0:	ldr	r3, [r4, #8]
   136c4:	str	r3, [sp, #4]
   136c8:	ldr	r3, [r4, #4]
   136cc:	str	r3, [sp]
   136d0:	ldr	r3, [r4]
   136d4:	mov	r2, r0
   136d8:	mov	r0, r5
   136dc:	bl	10e10 <__fprintf_chk@plt>
   136e0:	b	13694 <putchar_unlocked@plt+0x27f4>
   136e4:	mov	r2, #5
   136e8:	ldr	r1, [pc, #416]	; 13890 <putchar_unlocked@plt+0x29f0>
   136ec:	mov	r0, #0
   136f0:	bl	10cfc <dcgettext@plt>
   136f4:	ldr	r3, [r4, #20]
   136f8:	mov	r1, #1
   136fc:	str	r3, [sp, #16]
   13700:	ldr	r3, [r4, #16]
   13704:	str	r3, [sp, #12]
   13708:	ldr	r3, [r4, #12]
   1370c:	str	r3, [sp, #8]
   13710:	ldr	r3, [r4, #8]
   13714:	str	r3, [sp, #4]
   13718:	ldr	r3, [r4, #4]
   1371c:	str	r3, [sp]
   13720:	ldr	r3, [r4]
   13724:	mov	r2, r0
   13728:	mov	r0, r5
   1372c:	bl	10e10 <__fprintf_chk@plt>
   13730:	b	13694 <putchar_unlocked@plt+0x27f4>
   13734:	mov	r2, #5
   13738:	ldr	r1, [pc, #340]	; 13894 <putchar_unlocked@plt+0x29f4>
   1373c:	mov	r0, #0
   13740:	bl	10cfc <dcgettext@plt>
   13744:	ldr	r3, [r4, #24]
   13748:	mov	r1, #1
   1374c:	str	r3, [sp, #20]
   13750:	ldr	r3, [r4, #20]
   13754:	str	r3, [sp, #16]
   13758:	ldr	r3, [r4, #16]
   1375c:	str	r3, [sp, #12]
   13760:	ldr	r3, [r4, #12]
   13764:	str	r3, [sp, #8]
   13768:	ldr	r3, [r4, #8]
   1376c:	str	r3, [sp, #4]
   13770:	ldr	r3, [r4, #4]
   13774:	str	r3, [sp]
   13778:	ldr	r3, [r4]
   1377c:	mov	r2, r0
   13780:	mov	r0, r5
   13784:	bl	10e10 <__fprintf_chk@plt>
   13788:	b	13694 <putchar_unlocked@plt+0x27f4>
   1378c:	mov	r2, #5
   13790:	ldr	r1, [pc, #256]	; 13898 <putchar_unlocked@plt+0x29f8>
   13794:	mov	r0, #0
   13798:	bl	10cfc <dcgettext@plt>
   1379c:	ldr	r3, [r4, #28]
   137a0:	mov	r1, #1
   137a4:	str	r3, [sp, #24]
   137a8:	ldr	r3, [r4, #24]
   137ac:	str	r3, [sp, #20]
   137b0:	ldr	r3, [r4, #20]
   137b4:	str	r3, [sp, #16]
   137b8:	ldr	r3, [r4, #16]
   137bc:	str	r3, [sp, #12]
   137c0:	ldr	r3, [r4, #12]
   137c4:	str	r3, [sp, #8]
   137c8:	ldr	r3, [r4, #8]
   137cc:	str	r3, [sp, #4]
   137d0:	ldr	r3, [r4, #4]
   137d4:	str	r3, [sp]
   137d8:	ldr	r3, [r4]
   137dc:	mov	r2, r0
   137e0:	mov	r0, r5
   137e4:	bl	10e10 <__fprintf_chk@plt>
   137e8:	b	13694 <putchar_unlocked@plt+0x27f4>
   137ec:	ldr	r1, [pc, #168]	; 1389c <putchar_unlocked@plt+0x29fc>
   137f0:	mov	r2, #5
   137f4:	mov	r0, #0
   137f8:	bl	10cfc <dcgettext@plt>
   137fc:	ldr	r3, [r4, #32]
   13800:	mov	r1, #1
   13804:	str	r3, [sp, #28]
   13808:	ldr	r3, [r4, #28]
   1380c:	str	r3, [sp, #24]
   13810:	ldr	r3, [r4, #24]
   13814:	str	r3, [sp, #20]
   13818:	ldr	r3, [r4, #20]
   1381c:	str	r3, [sp, #16]
   13820:	ldr	r3, [r4, #16]
   13824:	str	r3, [sp, #12]
   13828:	ldr	r3, [r4, #12]
   1382c:	str	r3, [sp, #8]
   13830:	ldr	r3, [r4, #8]
   13834:	str	r3, [sp, #4]
   13838:	ldr	r3, [r4, #4]
   1383c:	str	r3, [sp]
   13840:	ldr	r3, [r4]
   13844:	mov	r2, r0
   13848:	mov	r0, r5
   1384c:	bl	10e10 <__fprintf_chk@plt>
   13850:	b	13694 <putchar_unlocked@plt+0x27f4>
   13854:	mov	r2, #5
   13858:	ldr	r1, [pc, #64]	; 138a0 <putchar_unlocked@plt+0x2a00>
   1385c:	b	137f4 <putchar_unlocked@plt+0x2954>
   13860:	ldrdeq	r4, [r1], -r3
   13864:	andeq	r4, r1, r6, ror #25
   13868:	andeq	r0, r0, r6, ror #15
   1386c:			; <UNDEFINED> instruction: 0x00014fb4
   13870:	andeq	r4, r1, sl, ror #25
   13874:	muleq	r1, r5, sp
   13878:	ldrdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   1387c:			; <UNDEFINED> instruction: 0x00014db7
   13880:	andeq	r4, r1, r7, asr #27
   13884:	ldrdeq	r4, [r1], -lr
   13888:	strdeq	r4, [r1], -sl
   1388c:	andeq	r4, r1, sl, lsl lr
   13890:	andeq	r4, r1, lr, lsr lr
   13894:	andeq	r4, r1, r6, ror #28
   13898:	muleq	r1, r2, lr
   1389c:	andeq	r4, r1, r2, asr #29
   138a0:	strdeq	r4, [r1], -r6
   138a4:	push	{r0, r1, r4, lr}
   138a8:	mov	ip, #0
   138ac:	ldr	lr, [sp, #16]
   138b0:	ldr	r4, [lr, ip, lsl #2]
   138b4:	cmp	r4, #0
   138b8:	bne	138d0 <putchar_unlocked@plt+0x2a30>
   138bc:	str	ip, [sp, #4]
   138c0:	str	lr, [sp]
   138c4:	bl	134d8 <putchar_unlocked@plt+0x2638>
   138c8:	add	sp, sp, #8
   138cc:	pop	{r4, pc}
   138d0:	add	ip, ip, #1
   138d4:	b	138b0 <putchar_unlocked@plt+0x2a10>
   138d8:	push	{r4, r5, lr}
   138dc:	sub	sp, sp, #52	; 0x34
   138e0:	mov	ip, #0
   138e4:	ldr	r5, [sp, #64]	; 0x40
   138e8:	add	lr, sp, #8
   138ec:	ldr	r4, [r5, ip, lsl #2]
   138f0:	cmp	r4, #0
   138f4:	str	r4, [lr, ip, lsl #2]
   138f8:	beq	13908 <putchar_unlocked@plt+0x2a68>
   138fc:	add	ip, ip, #1
   13900:	cmp	ip, #10
   13904:	bne	138ec <putchar_unlocked@plt+0x2a4c>
   13908:	str	ip, [sp, #4]
   1390c:	str	lr, [sp]
   13910:	bl	134d8 <putchar_unlocked@plt+0x2638>
   13914:	add	sp, sp, #52	; 0x34
   13918:	pop	{r4, r5, pc}
   1391c:	push	{r3}		; (str r3, [sp, #-4]!)
   13920:	push	{r0, r1, r2, r3, lr}
   13924:	add	r3, sp, #24
   13928:	str	r3, [sp, #12]
   1392c:	str	r3, [sp]
   13930:	ldr	r3, [sp, #20]
   13934:	bl	138d8 <putchar_unlocked@plt+0x2a38>
   13938:	add	sp, sp, #16
   1393c:	pop	{lr}		; (ldr lr, [sp], #4)
   13940:	add	sp, sp, #4
   13944:	bx	lr
   13948:	ldr	r3, [pc, #116]	; 139c4 <putchar_unlocked@plt+0x2b24>
   1394c:	push	{r4, lr}
   13950:	mov	r0, #10
   13954:	ldr	r1, [r3]
   13958:	bl	10ce4 <fputc_unlocked@plt>
   1395c:	mov	r2, #5
   13960:	ldr	r1, [pc, #96]	; 139c8 <putchar_unlocked@plt+0x2b28>
   13964:	mov	r0, #0
   13968:	bl	10cfc <dcgettext@plt>
   1396c:	ldr	r2, [pc, #88]	; 139cc <putchar_unlocked@plt+0x2b2c>
   13970:	mov	r1, r0
   13974:	mov	r0, #1
   13978:	bl	10df8 <__printf_chk@plt>
   1397c:	mov	r2, #5
   13980:	ldr	r1, [pc, #72]	; 139d0 <putchar_unlocked@plt+0x2b30>
   13984:	mov	r0, #0
   13988:	bl	10cfc <dcgettext@plt>
   1398c:	ldr	r3, [pc, #64]	; 139d4 <putchar_unlocked@plt+0x2b34>
   13990:	ldr	r2, [pc, #64]	; 139d8 <putchar_unlocked@plt+0x2b38>
   13994:	mov	r1, r0
   13998:	mov	r0, #1
   1399c:	bl	10df8 <__printf_chk@plt>
   139a0:	mov	r2, #5
   139a4:	ldr	r1, [pc, #48]	; 139dc <putchar_unlocked@plt+0x2b3c>
   139a8:	mov	r0, #0
   139ac:	bl	10cfc <dcgettext@plt>
   139b0:	ldr	r2, [pc, #40]	; 139e0 <putchar_unlocked@plt+0x2b40>
   139b4:	pop	{r4, lr}
   139b8:	mov	r1, r0
   139bc:	mov	r0, #1
   139c0:	b	10df8 <__printf_chk@plt>
   139c4:	andeq	r6, r2, ip, asr #2
   139c8:	andeq	r4, r1, r2, lsr pc
   139cc:	andeq	r4, r1, r6, asr #30
   139d0:	andeq	r4, r1, ip, asr pc
   139d4:	andeq	r4, r1, lr, ror #19
   139d8:	andeq	r4, r1, r6, lsl sl
   139dc:	andeq	r4, r1, r0, ror pc
   139e0:	muleq	r1, r7, pc	; <UNPREDICTABLE>
   139e4:	push	{r4, lr}
   139e8:	bl	13f00 <putchar_unlocked@plt+0x3060>
   139ec:	cmp	r0, #0
   139f0:	popne	{r4, pc}
   139f4:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   139f8:	push	{r4, lr}
   139fc:	bl	13f00 <putchar_unlocked@plt+0x3060>
   13a00:	cmp	r0, #0
   13a04:	popne	{r4, pc}
   13a08:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13a0c:	b	139e4 <putchar_unlocked@plt+0x2b44>
   13a10:	push	{r4, r5, r6, lr}
   13a14:	mov	r5, r0
   13a18:	mov	r4, r1
   13a1c:	bl	13f40 <putchar_unlocked@plt+0x30a0>
   13a20:	cmp	r0, #0
   13a24:	popne	{r4, r5, r6, pc}
   13a28:	adds	r4, r4, #0
   13a2c:	movne	r4, #1
   13a30:	cmp	r5, #0
   13a34:	orreq	r4, r4, #1
   13a38:	cmp	r4, #0
   13a3c:	popeq	{r4, r5, r6, pc}
   13a40:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13a44:	push	{r4, lr}
   13a48:	cmp	r1, #0
   13a4c:	orreq	r1, r1, #1
   13a50:	bl	13f40 <putchar_unlocked@plt+0x30a0>
   13a54:	cmp	r0, #0
   13a58:	popne	{r4, pc}
   13a5c:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13a60:	push	{r4, r5, r6, lr}
   13a64:	mov	r6, r0
   13a68:	mov	r5, r1
   13a6c:	mov	r4, r2
   13a70:	bl	14090 <putchar_unlocked@plt+0x31f0>
   13a74:	cmp	r0, #0
   13a78:	popne	{r4, r5, r6, pc}
   13a7c:	cmp	r6, #0
   13a80:	beq	13a90 <putchar_unlocked@plt+0x2bf0>
   13a84:	cmp	r5, #0
   13a88:	cmpne	r4, #0
   13a8c:	popeq	{r4, r5, r6, pc}
   13a90:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13a94:	b	13a60 <putchar_unlocked@plt+0x2bc0>
   13a98:	cmp	r2, #0
   13a9c:	cmpne	r1, #0
   13aa0:	moveq	r2, #1
   13aa4:	moveq	r1, r2
   13aa8:	push	{r4, lr}
   13aac:	bl	14090 <putchar_unlocked@plt+0x31f0>
   13ab0:	cmp	r0, #0
   13ab4:	popne	{r4, pc}
   13ab8:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13abc:	mov	r2, r1
   13ac0:	mov	r1, r0
   13ac4:	mov	r0, #0
   13ac8:	b	13a60 <putchar_unlocked@plt+0x2bc0>
   13acc:	mov	r2, r1
   13ad0:	mov	r1, r0
   13ad4:	mov	r0, #0
   13ad8:	b	13a98 <putchar_unlocked@plt+0x2bf8>
   13adc:	push	{r4, r5, r6, r7, r8, lr}
   13ae0:	subs	r7, r0, #0
   13ae4:	mov	r5, r1
   13ae8:	mov	r6, r2
   13aec:	ldr	r4, [r1]
   13af0:	bne	13b2c <putchar_unlocked@plt+0x2c8c>
   13af4:	cmp	r4, #0
   13af8:	bne	13b14 <putchar_unlocked@plt+0x2c74>
   13afc:	mov	r1, r2
   13b00:	mov	r0, #64	; 0x40
   13b04:	bl	141bc <putchar_unlocked@plt+0x331c>
   13b08:	cmp	r0, #0
   13b0c:	movne	r4, r0
   13b10:	addeq	r4, r0, #1
   13b14:	mov	r2, r6
   13b18:	mov	r1, r4
   13b1c:	mov	r0, r7
   13b20:	bl	13a60 <putchar_unlocked@plt+0x2bc0>
   13b24:	str	r4, [r5]
   13b28:	pop	{r4, r5, r6, r7, r8, pc}
   13b2c:	lsr	r2, r4, #1
   13b30:	add	r3, r2, #1
   13b34:	mvn	r3, r3
   13b38:	cmp	r4, r3
   13b3c:	addls	r4, r4, #1
   13b40:	addls	r4, r4, r2
   13b44:	bls	13b14 <putchar_unlocked@plt+0x2c74>
   13b48:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13b4c:	mov	r2, #1
   13b50:	b	13adc <putchar_unlocked@plt+0x2c3c>
   13b54:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b58:	mov	sl, r0
   13b5c:	ldr	r8, [r1]
   13b60:	mov	fp, r1
   13b64:	mov	r5, r2
   13b68:	asrs	r4, r8, #1
   13b6c:	mov	r9, r3
   13b70:	ldr	r7, [sp, #48]	; 0x30
   13b74:	bpl	13c10 <putchar_unlocked@plt+0x2d70>
   13b78:	rsb	r2, r4, #-2147483648	; 0x80000000
   13b7c:	cmp	r8, r2
   13b80:	movge	r2, #0
   13b84:	movlt	r2, #1
   13b88:	mvn	r3, r9
   13b8c:	cmp	r2, #0
   13b90:	lsr	r3, r3, #31
   13b94:	addeq	r4, r4, r8
   13b98:	mvnne	r4, #-2147483648	; 0x80000000
   13b9c:	mov	r0, r3
   13ba0:	cmp	r9, r4
   13ba4:	movge	r0, #0
   13ba8:	andlt	r0, r0, #1
   13bac:	cmp	r0, #0
   13bb0:	str	r3, [sp, #4]
   13bb4:	bne	13d84 <putchar_unlocked@plt+0x2ee4>
   13bb8:	cmp	r7, #0
   13bbc:	bge	13cd0 <putchar_unlocked@plt+0x2e30>
   13bc0:	cmp	r4, #0
   13bc4:	bge	13c28 <putchar_unlocked@plt+0x2d88>
   13bc8:	mov	r1, r7
   13bcc:	mvn	r0, #-2147483648	; 0x80000000
   13bd0:	bl	143c8 <putchar_unlocked@plt+0x3528>
   13bd4:	cmp	r0, r4
   13bd8:	movle	r0, #0
   13bdc:	movgt	r0, #1
   13be0:	cmp	r0, #0
   13be4:	mvnne	r6, #-2147483648	; 0x80000000
   13be8:	beq	13c38 <putchar_unlocked@plt+0x2d98>
   13bec:	mov	r1, r7
   13bf0:	mov	r0, r6
   13bf4:	bl	143c8 <putchar_unlocked@plt+0x3528>
   13bf8:	mov	r1, r7
   13bfc:	mov	r4, r0
   13c00:	mov	r0, r6
   13c04:	bl	145e8 <putchar_unlocked@plt+0x3748>
   13c08:	sub	r1, r6, r1
   13c0c:	b	13c48 <putchar_unlocked@plt+0x2da8>
   13c10:	mvn	r2, #-2147483648	; 0x80000000
   13c14:	sub	r2, r2, r4
   13c18:	cmp	r8, r2
   13c1c:	movle	r2, #0
   13c20:	movgt	r2, #1
   13c24:	b	13b88 <putchar_unlocked@plt+0x2ce8>
   13c28:	cmn	r7, #1
   13c2c:	movne	r1, r7
   13c30:	movne	r0, #-2147483648	; 0x80000000
   13c34:	bne	13d9c <putchar_unlocked@plt+0x2efc>
   13c38:	mul	r1, r7, r4
   13c3c:	cmp	r1, #63	; 0x3f
   13c40:	movle	r6, #64	; 0x40
   13c44:	ble	13bec <putchar_unlocked@plt+0x2d4c>
   13c48:	cmp	sl, #0
   13c4c:	sub	r2, r4, r8
   13c50:	streq	sl, [fp]
   13c54:	cmp	r2, r5
   13c58:	bge	13d2c <putchar_unlocked@plt+0x2e8c>
   13c5c:	cmp	r5, #0
   13c60:	bge	13cf8 <putchar_unlocked@plt+0x2e58>
   13c64:	rsb	r2, r5, #-2147483648	; 0x80000000
   13c68:	cmp	r8, r2
   13c6c:	movge	r2, #0
   13c70:	movlt	r2, #1
   13c74:	cmp	r2, #0
   13c78:	bne	13ccc <putchar_unlocked@plt+0x2e2c>
   13c7c:	ldr	r0, [sp, #4]
   13c80:	add	r5, r8, r5
   13c84:	cmp	r9, r5
   13c88:	movge	r0, #0
   13c8c:	andlt	r0, r0, #1
   13c90:	cmp	r0, #0
   13c94:	mov	r4, r5
   13c98:	bne	13ccc <putchar_unlocked@plt+0x2e2c>
   13c9c:	cmp	r7, #0
   13ca0:	bge	13d40 <putchar_unlocked@plt+0x2ea0>
   13ca4:	cmp	r5, #0
   13ca8:	bge	13d18 <putchar_unlocked@plt+0x2e78>
   13cac:	mov	r1, r7
   13cb0:	mvn	r0, #-2147483648	; 0x80000000
   13cb4:	bl	143c8 <putchar_unlocked@plt+0x3528>
   13cb8:	cmp	r5, r0
   13cbc:	movge	r0, #0
   13cc0:	movlt	r0, #1
   13cc4:	cmp	r0, #0
   13cc8:	beq	13d28 <putchar_unlocked@plt+0x2e88>
   13ccc:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13cd0:	beq	13c38 <putchar_unlocked@plt+0x2d98>
   13cd4:	cmp	r4, #0
   13cd8:	bge	13d94 <putchar_unlocked@plt+0x2ef4>
   13cdc:	cmn	r4, #1
   13ce0:	beq	13c38 <putchar_unlocked@plt+0x2d98>
   13ce4:	mov	r1, r4
   13ce8:	mov	r0, #-2147483648	; 0x80000000
   13cec:	bl	143c8 <putchar_unlocked@plt+0x3528>
   13cf0:	cmp	r7, r0
   13cf4:	b	13bd8 <putchar_unlocked@plt+0x2d38>
   13cf8:	cmp	r8, #0
   13cfc:	blt	13c7c <putchar_unlocked@plt+0x2ddc>
   13d00:	mvn	r2, #-2147483648	; 0x80000000
   13d04:	sub	r2, r2, r5
   13d08:	cmp	r8, r2
   13d0c:	movle	r2, #0
   13d10:	movgt	r2, #1
   13d14:	b	13c74 <putchar_unlocked@plt+0x2dd4>
   13d18:	cmn	r7, #1
   13d1c:	movne	r1, r7
   13d20:	movne	r0, #-2147483648	; 0x80000000
   13d24:	bne	13d78 <putchar_unlocked@plt+0x2ed8>
   13d28:	mul	r1, r5, r7
   13d2c:	mov	r0, sl
   13d30:	bl	13a10 <putchar_unlocked@plt+0x2b70>
   13d34:	str	r4, [fp]
   13d38:	add	sp, sp, #12
   13d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d40:	beq	13d28 <putchar_unlocked@plt+0x2e88>
   13d44:	cmp	r5, #0
   13d48:	movge	r1, r7
   13d4c:	mvnge	r0, #-2147483648	; 0x80000000
   13d50:	bge	13d78 <putchar_unlocked@plt+0x2ed8>
   13d54:	cmn	r5, #1
   13d58:	beq	13d28 <putchar_unlocked@plt+0x2e88>
   13d5c:	mov	r1, r5
   13d60:	mov	r0, #-2147483648	; 0x80000000
   13d64:	bl	143c8 <putchar_unlocked@plt+0x3528>
   13d68:	cmp	r7, r0
   13d6c:	movle	r0, #0
   13d70:	movgt	r0, #1
   13d74:	b	13cc4 <putchar_unlocked@plt+0x2e24>
   13d78:	bl	143c8 <putchar_unlocked@plt+0x3528>
   13d7c:	cmp	r5, r0
   13d80:	b	13d6c <putchar_unlocked@plt+0x2ecc>
   13d84:	cmp	r7, #0
   13d88:	mov	r4, r9
   13d8c:	blt	13c28 <putchar_unlocked@plt+0x2d88>
   13d90:	beq	13c38 <putchar_unlocked@plt+0x2d98>
   13d94:	mov	r1, r7
   13d98:	mvn	r0, #-2147483648	; 0x80000000
   13d9c:	bl	143c8 <putchar_unlocked@plt+0x3528>
   13da0:	cmp	r0, r4
   13da4:	movge	r0, #0
   13da8:	movlt	r0, #1
   13dac:	b	13be0 <putchar_unlocked@plt+0x2d40>
   13db0:	push	{r4, lr}
   13db4:	bl	13eb8 <putchar_unlocked@plt+0x3018>
   13db8:	cmp	r0, #0
   13dbc:	popne	{r4, pc}
   13dc0:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13dc4:	mov	r1, #1
   13dc8:	b	13db0 <putchar_unlocked@plt+0x2f10>
   13dcc:	push	{r4, lr}
   13dd0:	bl	13eb8 <putchar_unlocked@plt+0x3018>
   13dd4:	cmp	r0, #0
   13dd8:	popne	{r4, pc}
   13ddc:	bl	13e78 <putchar_unlocked@plt+0x2fd8>
   13de0:	mov	r1, #1
   13de4:	b	13dcc <putchar_unlocked@plt+0x2f2c>
   13de8:	push	{r4, r5, r6, lr}
   13dec:	mov	r4, r1
   13df0:	mov	r5, r0
   13df4:	mov	r0, r1
   13df8:	bl	139e4 <putchar_unlocked@plt+0x2b44>
   13dfc:	mov	r2, r4
   13e00:	mov	r1, r5
   13e04:	pop	{r4, r5, r6, lr}
   13e08:	b	10cb4 <memcpy@plt>
   13e0c:	push	{r4, r5, r6, lr}
   13e10:	mov	r4, r1
   13e14:	mov	r5, r0
   13e18:	mov	r0, r1
   13e1c:	bl	139f8 <putchar_unlocked@plt+0x2b58>
   13e20:	mov	r2, r4
   13e24:	mov	r1, r5
   13e28:	pop	{r4, r5, r6, lr}
   13e2c:	b	10cb4 <memcpy@plt>
   13e30:	push	{r4, r5, r6, lr}
   13e34:	mov	r5, r0
   13e38:	add	r0, r1, #1
   13e3c:	mov	r4, r1
   13e40:	bl	139f8 <putchar_unlocked@plt+0x2b58>
   13e44:	mov	r2, #0
   13e48:	mov	r1, r5
   13e4c:	strb	r2, [r0, r4]
   13e50:	mov	r2, r4
   13e54:	pop	{r4, r5, r6, lr}
   13e58:	b	10cb4 <memcpy@plt>
   13e5c:	push	{r4, lr}
   13e60:	mov	r4, r0
   13e64:	bl	10dc8 <strlen@plt>
   13e68:	add	r1, r0, #1
   13e6c:	mov	r0, r4
   13e70:	pop	{r4, lr}
   13e74:	b	13de8 <putchar_unlocked@plt+0x2f48>
   13e78:	ldr	r3, [pc, #44]	; 13eac <putchar_unlocked@plt+0x300c>
   13e7c:	push	{r4, lr}
   13e80:	mov	r2, #5
   13e84:	ldr	r1, [pc, #36]	; 13eb0 <putchar_unlocked@plt+0x3010>
   13e88:	mov	r0, #0
   13e8c:	ldr	r4, [r3]
   13e90:	bl	10cfc <dcgettext@plt>
   13e94:	ldr	r2, [pc, #24]	; 13eb4 <putchar_unlocked@plt+0x3014>
   13e98:	mov	r1, #0
   13e9c:	mov	r3, r0
   13ea0:	mov	r0, r4
   13ea4:	bl	10d68 <error@plt>
   13ea8:	bl	10e94 <abort@plt>
   13eac:	andeq	r6, r2, r8, ror #1
   13eb0:	andeq	r4, r1, r3, ror #31
   13eb4:	andeq	r4, r1, pc, lsr #22
   13eb8:	cmp	r1, #0
   13ebc:	cmpne	r0, #0
   13ec0:	moveq	r1, #1
   13ec4:	moveq	r0, r1
   13ec8:	umull	r2, r3, r0, r1
   13ecc:	adds	r3, r3, #0
   13ed0:	movne	r3, #1
   13ed4:	cmp	r2, #0
   13ed8:	blt	13ee8 <putchar_unlocked@plt+0x3048>
   13edc:	cmp	r3, #0
   13ee0:	bne	13ee8 <putchar_unlocked@plt+0x3048>
   13ee4:	b	10c54 <calloc@plt>
   13ee8:	push	{r4, lr}
   13eec:	bl	10dd4 <__errno_location@plt>
   13ef0:	mov	r3, #12
   13ef4:	str	r3, [r0]
   13ef8:	mov	r0, #0
   13efc:	pop	{r4, pc}
   13f00:	cmp	r0, #0
   13f04:	mov	r3, #0
   13f08:	moveq	r0, #1
   13f0c:	adds	r3, r3, #0
   13f10:	movne	r3, #1
   13f14:	cmp	r0, #0
   13f18:	blt	13f28 <putchar_unlocked@plt+0x3088>
   13f1c:	cmp	r3, #0
   13f20:	bne	13f28 <putchar_unlocked@plt+0x3088>
   13f24:	b	10d74 <malloc@plt>
   13f28:	push	{r4, lr}
   13f2c:	bl	10dd4 <__errno_location@plt>
   13f30:	mov	r3, #12
   13f34:	str	r3, [r0]
   13f38:	mov	r0, #0
   13f3c:	pop	{r4, pc}
   13f40:	cmp	r0, #0
   13f44:	push	{r4, lr}
   13f48:	mov	r4, r1
   13f4c:	bne	13f5c <putchar_unlocked@plt+0x30bc>
   13f50:	mov	r0, r1
   13f54:	pop	{r4, lr}
   13f58:	b	13f00 <putchar_unlocked@plt+0x3060>
   13f5c:	cmp	r1, #0
   13f60:	bne	13f70 <putchar_unlocked@plt+0x30d0>
   13f64:	bl	11db4 <putchar_unlocked@plt+0xf14>
   13f68:	mov	r0, #0
   13f6c:	pop	{r4, pc}
   13f70:	cmp	r1, #0
   13f74:	blt	13f84 <putchar_unlocked@plt+0x30e4>
   13f78:	mov	r3, #0
   13f7c:	cmp	r3, r3
   13f80:	beq	13f94 <putchar_unlocked@plt+0x30f4>
   13f84:	bl	10dd4 <__errno_location@plt>
   13f88:	mov	r3, #12
   13f8c:	str	r3, [r0]
   13f90:	b	13f68 <putchar_unlocked@plt+0x30c8>
   13f94:	pop	{r4, lr}
   13f98:	b	10d08 <realloc@plt>
   13f9c:	push	{r4, r5, r6, lr}
   13fa0:	mov	r4, r0
   13fa4:	bl	10d44 <__fpending@plt>
   13fa8:	mov	r5, r0
   13fac:	mov	r0, r4
   13fb0:	bl	10d50 <ferror_unlocked@plt>
   13fb4:	mov	r6, r0
   13fb8:	mov	r0, r4
   13fbc:	bl	11cbc <putchar_unlocked@plt+0xe1c>
   13fc0:	cmp	r6, #0
   13fc4:	mov	r4, r0
   13fc8:	bne	13ff4 <putchar_unlocked@plt+0x3154>
   13fcc:	cmp	r0, #0
   13fd0:	beq	13fec <putchar_unlocked@plt+0x314c>
   13fd4:	cmp	r5, #0
   13fd8:	bne	14004 <putchar_unlocked@plt+0x3164>
   13fdc:	bl	10dd4 <__errno_location@plt>
   13fe0:	ldr	r4, [r0]
   13fe4:	subs	r4, r4, #9
   13fe8:	mvnne	r4, #0
   13fec:	mov	r0, r4
   13ff0:	pop	{r4, r5, r6, pc}
   13ff4:	cmp	r0, #0
   13ff8:	bne	14004 <putchar_unlocked@plt+0x3164>
   13ffc:	bl	10dd4 <__errno_location@plt>
   14000:	str	r4, [r0]
   14004:	mvn	r4, #0
   14008:	b	13fec <putchar_unlocked@plt+0x314c>
   1400c:	push	{r4, lr}
   14010:	mov	r0, #14
   14014:	bl	10e4c <nl_langinfo@plt>
   14018:	ldr	r3, [pc, #24]	; 14038 <putchar_unlocked@plt+0x3198>
   1401c:	cmp	r0, #0
   14020:	moveq	r0, r3
   14024:	ldr	r3, [pc, #16]	; 1403c <putchar_unlocked@plt+0x319c>
   14028:	ldrb	r2, [r0]
   1402c:	cmp	r2, #0
   14030:	moveq	r0, r3
   14034:	pop	{r4, pc}
   14038:	andeq	r4, r1, r1, asr #21
   1403c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14040:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14044:	subs	r5, r0, #0
   14048:	addeq	r5, sp, #4
   1404c:	mov	r0, r5
   14050:	mov	r7, r2
   14054:	mov	r6, r1
   14058:	bl	10d5c <mbrtowc@plt>
   1405c:	cmp	r7, #0
   14060:	cmnne	r0, #3
   14064:	mov	r4, r0
   14068:	bls	14084 <putchar_unlocked@plt+0x31e4>
   1406c:	mov	r0, #0
   14070:	bl	140dc <putchar_unlocked@plt+0x323c>
   14074:	cmp	r0, #0
   14078:	moveq	r4, #1
   1407c:	ldrbeq	r3, [r6]
   14080:	streq	r3, [r5]
   14084:	mov	r0, r4
   14088:	add	sp, sp, #12
   1408c:	pop	{r4, r5, r6, r7, pc}
   14090:	push	{r4, r5, r6, lr}
   14094:	subs	r4, r2, #0
   14098:	mov	r6, r0
   1409c:	mov	r5, r1
   140a0:	beq	140b8 <putchar_unlocked@plt+0x3218>
   140a4:	mov	r1, r4
   140a8:	mvn	r0, #0
   140ac:	bl	141bc <putchar_unlocked@plt+0x331c>
   140b0:	cmp	r0, r5
   140b4:	bcc	140c8 <putchar_unlocked@plt+0x3228>
   140b8:	mul	r1, r5, r4
   140bc:	mov	r0, r6
   140c0:	pop	{r4, r5, r6, lr}
   140c4:	b	13f40 <putchar_unlocked@plt+0x30a0>
   140c8:	bl	10dd4 <__errno_location@plt>
   140cc:	mov	r3, #12
   140d0:	str	r3, [r0]
   140d4:	mov	r0, #0
   140d8:	pop	{r4, r5, r6, pc}
   140dc:	push	{lr}		; (str lr, [sp, #-4]!)
   140e0:	sub	sp, sp, #268	; 0x10c
   140e4:	ldr	r2, [pc, #64]	; 1412c <putchar_unlocked@plt+0x328c>
   140e8:	add	r1, sp, #4
   140ec:	bl	14138 <putchar_unlocked@plt+0x3298>
   140f0:	cmp	r0, #0
   140f4:	movne	r0, #0
   140f8:	bne	14124 <putchar_unlocked@plt+0x3284>
   140fc:	ldr	r1, [pc, #44]	; 14130 <putchar_unlocked@plt+0x3290>
   14100:	add	r0, sp, #4
   14104:	bl	10c78 <strcmp@plt>
   14108:	cmp	r0, #0
   1410c:	beq	14124 <putchar_unlocked@plt+0x3284>
   14110:	ldr	r1, [pc, #28]	; 14134 <putchar_unlocked@plt+0x3294>
   14114:	add	r0, sp, #4
   14118:	bl	10c78 <strcmp@plt>
   1411c:	adds	r0, r0, #0
   14120:	movne	r0, #1
   14124:	add	sp, sp, #268	; 0x10c
   14128:	pop	{pc}		; (ldr pc, [sp], #4)
   1412c:	andeq	r0, r0, r1, lsl #2
   14130:	strdeq	r4, [r1], -sl
   14134:	strdeq	r4, [r1], -ip
   14138:	push	{r4, r5, r6, lr}
   1413c:	mov	r5, r1
   14140:	mov	r1, #0
   14144:	mov	r4, r2
   14148:	bl	10e34 <setlocale@plt>
   1414c:	subs	r6, r0, #0
   14150:	bne	14164 <putchar_unlocked@plt+0x32c4>
   14154:	cmp	r4, #0
   14158:	strbne	r6, [r5]
   1415c:	mov	r0, #22
   14160:	pop	{r4, r5, r6, pc}
   14164:	bl	10dc8 <strlen@plt>
   14168:	cmp	r4, r0
   1416c:	bls	14188 <putchar_unlocked@plt+0x32e8>
   14170:	add	r2, r0, #1
   14174:	mov	r1, r6
   14178:	mov	r0, r5
   1417c:	bl	10cb4 <memcpy@plt>
   14180:	mov	r0, #0
   14184:	pop	{r4, r5, r6, pc}
   14188:	cmp	r4, #0
   1418c:	beq	141ac <putchar_unlocked@plt+0x330c>
   14190:	sub	r4, r4, #1
   14194:	mov	r2, r4
   14198:	mov	r1, r6
   1419c:	mov	r0, r5
   141a0:	bl	10cb4 <memcpy@plt>
   141a4:	mov	r3, #0
   141a8:	strb	r3, [r5, r4]
   141ac:	mov	r0, #34	; 0x22
   141b0:	pop	{r4, r5, r6, pc}
   141b4:	mov	r1, #0
   141b8:	b	10e34 <setlocale@plt>
   141bc:	subs	r2, r1, #1
   141c0:	bxeq	lr
   141c4:	bcc	1439c <putchar_unlocked@plt+0x34fc>
   141c8:	cmp	r0, r1
   141cc:	bls	14380 <putchar_unlocked@plt+0x34e0>
   141d0:	tst	r1, r2
   141d4:	beq	1438c <putchar_unlocked@plt+0x34ec>
   141d8:	clz	r3, r0
   141dc:	clz	r2, r1
   141e0:	sub	r3, r2, r3
   141e4:	rsbs	r3, r3, #31
   141e8:	addne	r3, r3, r3, lsl #1
   141ec:	mov	r2, #0
   141f0:	addne	pc, pc, r3, lsl #2
   141f4:	nop			; (mov r0, r0)
   141f8:	cmp	r0, r1, lsl #31
   141fc:	adc	r2, r2, r2
   14200:	subcs	r0, r0, r1, lsl #31
   14204:	cmp	r0, r1, lsl #30
   14208:	adc	r2, r2, r2
   1420c:	subcs	r0, r0, r1, lsl #30
   14210:	cmp	r0, r1, lsl #29
   14214:	adc	r2, r2, r2
   14218:	subcs	r0, r0, r1, lsl #29
   1421c:	cmp	r0, r1, lsl #28
   14220:	adc	r2, r2, r2
   14224:	subcs	r0, r0, r1, lsl #28
   14228:	cmp	r0, r1, lsl #27
   1422c:	adc	r2, r2, r2
   14230:	subcs	r0, r0, r1, lsl #27
   14234:	cmp	r0, r1, lsl #26
   14238:	adc	r2, r2, r2
   1423c:	subcs	r0, r0, r1, lsl #26
   14240:	cmp	r0, r1, lsl #25
   14244:	adc	r2, r2, r2
   14248:	subcs	r0, r0, r1, lsl #25
   1424c:	cmp	r0, r1, lsl #24
   14250:	adc	r2, r2, r2
   14254:	subcs	r0, r0, r1, lsl #24
   14258:	cmp	r0, r1, lsl #23
   1425c:	adc	r2, r2, r2
   14260:	subcs	r0, r0, r1, lsl #23
   14264:	cmp	r0, r1, lsl #22
   14268:	adc	r2, r2, r2
   1426c:	subcs	r0, r0, r1, lsl #22
   14270:	cmp	r0, r1, lsl #21
   14274:	adc	r2, r2, r2
   14278:	subcs	r0, r0, r1, lsl #21
   1427c:	cmp	r0, r1, lsl #20
   14280:	adc	r2, r2, r2
   14284:	subcs	r0, r0, r1, lsl #20
   14288:	cmp	r0, r1, lsl #19
   1428c:	adc	r2, r2, r2
   14290:	subcs	r0, r0, r1, lsl #19
   14294:	cmp	r0, r1, lsl #18
   14298:	adc	r2, r2, r2
   1429c:	subcs	r0, r0, r1, lsl #18
   142a0:	cmp	r0, r1, lsl #17
   142a4:	adc	r2, r2, r2
   142a8:	subcs	r0, r0, r1, lsl #17
   142ac:	cmp	r0, r1, lsl #16
   142b0:	adc	r2, r2, r2
   142b4:	subcs	r0, r0, r1, lsl #16
   142b8:	cmp	r0, r1, lsl #15
   142bc:	adc	r2, r2, r2
   142c0:	subcs	r0, r0, r1, lsl #15
   142c4:	cmp	r0, r1, lsl #14
   142c8:	adc	r2, r2, r2
   142cc:	subcs	r0, r0, r1, lsl #14
   142d0:	cmp	r0, r1, lsl #13
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #13
   142dc:	cmp	r0, r1, lsl #12
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #12
   142e8:	cmp	r0, r1, lsl #11
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #11
   142f4:	cmp	r0, r1, lsl #10
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #10
   14300:	cmp	r0, r1, lsl #9
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #9
   1430c:	cmp	r0, r1, lsl #8
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #8
   14318:	cmp	r0, r1, lsl #7
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #7
   14324:	cmp	r0, r1, lsl #6
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #6
   14330:	cmp	r0, r1, lsl #5
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #5
   1433c:	cmp	r0, r1, lsl #4
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #4
   14348:	cmp	r0, r1, lsl #3
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #3
   14354:	cmp	r0, r1, lsl #2
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #2
   14360:	cmp	r0, r1, lsl #1
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #1
   1436c:	cmp	r0, r1
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1
   14378:	mov	r0, r2
   1437c:	bx	lr
   14380:	moveq	r0, #1
   14384:	movne	r0, #0
   14388:	bx	lr
   1438c:	clz	r2, r1
   14390:	rsb	r2, r2, #31
   14394:	lsr	r0, r0, r2
   14398:	bx	lr
   1439c:	cmp	r0, #0
   143a0:	mvnne	r0, #0
   143a4:	b	14608 <putchar_unlocked@plt+0x3768>
   143a8:	cmp	r1, #0
   143ac:	beq	1439c <putchar_unlocked@plt+0x34fc>
   143b0:	push	{r0, r1, lr}
   143b4:	bl	141bc <putchar_unlocked@plt+0x331c>
   143b8:	pop	{r1, r2, lr}
   143bc:	mul	r3, r2, r0
   143c0:	sub	r1, r1, r3
   143c4:	bx	lr
   143c8:	cmp	r1, #0
   143cc:	beq	145d8 <putchar_unlocked@plt+0x3738>
   143d0:	eor	ip, r0, r1
   143d4:	rsbmi	r1, r1, #0
   143d8:	subs	r2, r1, #1
   143dc:	beq	145a4 <putchar_unlocked@plt+0x3704>
   143e0:	movs	r3, r0
   143e4:	rsbmi	r3, r0, #0
   143e8:	cmp	r3, r1
   143ec:	bls	145b0 <putchar_unlocked@plt+0x3710>
   143f0:	tst	r1, r2
   143f4:	beq	145c0 <putchar_unlocked@plt+0x3720>
   143f8:	clz	r2, r3
   143fc:	clz	r0, r1
   14400:	sub	r2, r0, r2
   14404:	rsbs	r2, r2, #31
   14408:	addne	r2, r2, r2, lsl #1
   1440c:	mov	r0, #0
   14410:	addne	pc, pc, r2, lsl #2
   14414:	nop			; (mov r0, r0)
   14418:	cmp	r3, r1, lsl #31
   1441c:	adc	r0, r0, r0
   14420:	subcs	r3, r3, r1, lsl #31
   14424:	cmp	r3, r1, lsl #30
   14428:	adc	r0, r0, r0
   1442c:	subcs	r3, r3, r1, lsl #30
   14430:	cmp	r3, r1, lsl #29
   14434:	adc	r0, r0, r0
   14438:	subcs	r3, r3, r1, lsl #29
   1443c:	cmp	r3, r1, lsl #28
   14440:	adc	r0, r0, r0
   14444:	subcs	r3, r3, r1, lsl #28
   14448:	cmp	r3, r1, lsl #27
   1444c:	adc	r0, r0, r0
   14450:	subcs	r3, r3, r1, lsl #27
   14454:	cmp	r3, r1, lsl #26
   14458:	adc	r0, r0, r0
   1445c:	subcs	r3, r3, r1, lsl #26
   14460:	cmp	r3, r1, lsl #25
   14464:	adc	r0, r0, r0
   14468:	subcs	r3, r3, r1, lsl #25
   1446c:	cmp	r3, r1, lsl #24
   14470:	adc	r0, r0, r0
   14474:	subcs	r3, r3, r1, lsl #24
   14478:	cmp	r3, r1, lsl #23
   1447c:	adc	r0, r0, r0
   14480:	subcs	r3, r3, r1, lsl #23
   14484:	cmp	r3, r1, lsl #22
   14488:	adc	r0, r0, r0
   1448c:	subcs	r3, r3, r1, lsl #22
   14490:	cmp	r3, r1, lsl #21
   14494:	adc	r0, r0, r0
   14498:	subcs	r3, r3, r1, lsl #21
   1449c:	cmp	r3, r1, lsl #20
   144a0:	adc	r0, r0, r0
   144a4:	subcs	r3, r3, r1, lsl #20
   144a8:	cmp	r3, r1, lsl #19
   144ac:	adc	r0, r0, r0
   144b0:	subcs	r3, r3, r1, lsl #19
   144b4:	cmp	r3, r1, lsl #18
   144b8:	adc	r0, r0, r0
   144bc:	subcs	r3, r3, r1, lsl #18
   144c0:	cmp	r3, r1, lsl #17
   144c4:	adc	r0, r0, r0
   144c8:	subcs	r3, r3, r1, lsl #17
   144cc:	cmp	r3, r1, lsl #16
   144d0:	adc	r0, r0, r0
   144d4:	subcs	r3, r3, r1, lsl #16
   144d8:	cmp	r3, r1, lsl #15
   144dc:	adc	r0, r0, r0
   144e0:	subcs	r3, r3, r1, lsl #15
   144e4:	cmp	r3, r1, lsl #14
   144e8:	adc	r0, r0, r0
   144ec:	subcs	r3, r3, r1, lsl #14
   144f0:	cmp	r3, r1, lsl #13
   144f4:	adc	r0, r0, r0
   144f8:	subcs	r3, r3, r1, lsl #13
   144fc:	cmp	r3, r1, lsl #12
   14500:	adc	r0, r0, r0
   14504:	subcs	r3, r3, r1, lsl #12
   14508:	cmp	r3, r1, lsl #11
   1450c:	adc	r0, r0, r0
   14510:	subcs	r3, r3, r1, lsl #11
   14514:	cmp	r3, r1, lsl #10
   14518:	adc	r0, r0, r0
   1451c:	subcs	r3, r3, r1, lsl #10
   14520:	cmp	r3, r1, lsl #9
   14524:	adc	r0, r0, r0
   14528:	subcs	r3, r3, r1, lsl #9
   1452c:	cmp	r3, r1, lsl #8
   14530:	adc	r0, r0, r0
   14534:	subcs	r3, r3, r1, lsl #8
   14538:	cmp	r3, r1, lsl #7
   1453c:	adc	r0, r0, r0
   14540:	subcs	r3, r3, r1, lsl #7
   14544:	cmp	r3, r1, lsl #6
   14548:	adc	r0, r0, r0
   1454c:	subcs	r3, r3, r1, lsl #6
   14550:	cmp	r3, r1, lsl #5
   14554:	adc	r0, r0, r0
   14558:	subcs	r3, r3, r1, lsl #5
   1455c:	cmp	r3, r1, lsl #4
   14560:	adc	r0, r0, r0
   14564:	subcs	r3, r3, r1, lsl #4
   14568:	cmp	r3, r1, lsl #3
   1456c:	adc	r0, r0, r0
   14570:	subcs	r3, r3, r1, lsl #3
   14574:	cmp	r3, r1, lsl #2
   14578:	adc	r0, r0, r0
   1457c:	subcs	r3, r3, r1, lsl #2
   14580:	cmp	r3, r1, lsl #1
   14584:	adc	r0, r0, r0
   14588:	subcs	r3, r3, r1, lsl #1
   1458c:	cmp	r3, r1
   14590:	adc	r0, r0, r0
   14594:	subcs	r3, r3, r1
   14598:	cmp	ip, #0
   1459c:	rsbmi	r0, r0, #0
   145a0:	bx	lr
   145a4:	teq	ip, r0
   145a8:	rsbmi	r0, r0, #0
   145ac:	bx	lr
   145b0:	movcc	r0, #0
   145b4:	asreq	r0, ip, #31
   145b8:	orreq	r0, r0, #1
   145bc:	bx	lr
   145c0:	clz	r2, r1
   145c4:	rsb	r2, r2, #31
   145c8:	cmp	ip, #0
   145cc:	lsr	r0, r3, r2
   145d0:	rsbmi	r0, r0, #0
   145d4:	bx	lr
   145d8:	cmp	r0, #0
   145dc:	mvngt	r0, #-2147483648	; 0x80000000
   145e0:	movlt	r0, #-2147483648	; 0x80000000
   145e4:	b	14608 <putchar_unlocked@plt+0x3768>
   145e8:	cmp	r1, #0
   145ec:	beq	145d8 <putchar_unlocked@plt+0x3738>
   145f0:	push	{r0, r1, lr}
   145f4:	bl	143d0 <putchar_unlocked@plt+0x3530>
   145f8:	pop	{r1, r2, lr}
   145fc:	mul	r3, r2, r0
   14600:	sub	r1, r1, r3
   14604:	bx	lr
   14608:	push	{r1, lr}
   1460c:	mov	r0, #8
   14610:	bl	10c6c <raise@plt>
   14614:	pop	{r1, pc}
   14618:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1461c:	mov	r7, r0
   14620:	ldr	r6, [pc, #72]	; 14670 <putchar_unlocked@plt+0x37d0>
   14624:	ldr	r5, [pc, #72]	; 14674 <putchar_unlocked@plt+0x37d4>
   14628:	add	r6, pc, r6
   1462c:	add	r5, pc, r5
   14630:	sub	r6, r6, r5
   14634:	mov	r8, r1
   14638:	mov	r9, r2
   1463c:	bl	10c34 <calloc@plt-0x20>
   14640:	asrs	r6, r6, #2
   14644:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14648:	mov	r4, #0
   1464c:	add	r4, r4, #1
   14650:	ldr	r3, [r5], #4
   14654:	mov	r2, r9
   14658:	mov	r1, r8
   1465c:	mov	r0, r7
   14660:	blx	r3
   14664:	cmp	r6, r4
   14668:	bne	1464c <putchar_unlocked@plt+0x37ac>
   1466c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14670:	andeq	r1, r1, r0, ror #17
   14674:	ldrdeq	r1, [r1], -r8
   14678:	bx	lr
   1467c:	ldr	r3, [pc, #12]	; 14690 <putchar_unlocked@plt+0x37f0>
   14680:	mov	r1, #0
   14684:	add	r3, pc, r3
   14688:	ldr	r2, [r3]
   1468c:	b	10de0 <__cxa_atexit@plt>
   14690:	andeq	r1, r1, r0, asr sl

Disassembly of section .fini:

00014694 <.fini>:
   14694:	push	{r3, lr}
   14698:	pop	{r3, pc}
