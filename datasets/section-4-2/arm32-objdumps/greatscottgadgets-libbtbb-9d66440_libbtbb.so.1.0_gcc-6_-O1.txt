
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000020e4 <.init>:
    20e4:	push	{r3, lr}
    20e8:	bl	2560 <__assert_fail@plt+0xc>
    20ec:	pop	{r3, pc}

Disassembly of section .plt:

000020f0 <calloc@plt-0x14>:
    20f0:	push	{lr}		; (str lr, [sp, #-4]!)
    20f4:	ldr	lr, [pc, #4]	; 2100 <calloc@plt-0x4>
    20f8:	add	lr, pc, lr
    20fc:	ldr	pc, [lr, #8]!
    2100:	andeq	r6, r2, r0, lsl #30

00002104 <calloc@plt>:
    2104:	add	ip, pc, #0, 12
    2108:	add	ip, ip, #155648	; 0x26000
    210c:	ldr	pc, [ip, #3840]!	; 0xf00

00002110 <raise@plt>:
    2110:	add	ip, pc, #0, 12
    2114:	add	ip, ip, #155648	; 0x26000
    2118:	ldr	pc, [ip, #3832]!	; 0xef8

0000211c <btbb_piconet_new@plt>:
    211c:	add	ip, pc, #0, 12
    2120:	add	ip, ip, #155648	; 0x26000
    2124:	ldr	pc, [ip, #3824]!	; 0xef0

00002128 <gen_hop_pattern@plt>:
    2128:	add	ip, pc, #0, 12
    212c:	add	ip, ip, #155648	; 0x26000
    2130:	ldr	pc, [ip, #3816]!	; 0xee8

00002134 <count_bits@plt>:
    2134:	add	ip, pc, #0, 12
    2138:	add	ip, ip, #155648	; 0x26000
    213c:	ldr	pc, [ip, #3808]!	; 0xee0

00002140 <__cxa_finalize@plt>:
    2140:	add	ip, pc, #0, 12
    2144:	add	ip, ip, #155648	; 0x26000
    2148:	ldr	pc, [ip, #3800]!	; 0xed8

0000214c <btbb_get_payload_packed@plt>:
    214c:	add	ip, pc, #0, 12
    2150:	add	ip, ip, #155648	; 0x26000
    2154:	ldr	pc, [ip, #3792]!	; 0xed0

00002158 <printf@plt>:
    2158:	add	ip, pc, #0, 12
    215c:	add	ip, ip, #155648	; 0x26000
    2160:	ldr	pc, [ip, #3784]!	; 0xec8

00002164 <fopen@plt>:
    2164:	add	ip, pc, #0, 12
    2168:	add	ip, ip, #155648	; 0x26000
    216c:	ldr	pc, [ip, #3776]!	; 0xec0

00002170 <lell_packet_is_data@plt>:
    2170:	add	ip, pc, #0, 12
    2174:	add	ip, ip, #155648	; 0x26000
    2178:	ldr	pc, [ip, #3768]!	; 0xeb8

0000217c <fflush@plt>:
    217c:	add	ip, pc, #0, 12
    2180:	add	ip, ip, #155648	; 0x26000
    2184:	ldr	pc, [ip, #3760]!	; 0xeb0

00002188 <btbb_packet_set_flag@plt>:
    2188:	add	ip, pc, #0, 12
    218c:	add	ip, ip, #155648	; 0x26000
    2190:	ldr	pc, [ip, #3752]!	; 0xea8

00002194 <pcapng_append_interface_option@plt>:
    2194:	add	ip, pc, #0, 12
    2198:	add	ip, ip, #155648	; 0x26000
    219c:	ldr	pc, [ip, #3744]!	; 0xea0

000021a0 <free@plt>:
    21a0:	add	ip, pc, #0, 12
    21a4:	add	ip, ip, #155648	; 0x26000
    21a8:	ldr	pc, [ip, #3736]!	; 0xe98

000021ac <btbb_packet_get_modulation@plt>:
    21ac:	add	ip, pc, #0, 12
    21b0:	add	ip, ip, #155648	; 0x26000
    21b4:	ldr	pc, [ip, #3728]!	; 0xe90

000021b8 <btbb_packet_get_ac_errors@plt>:
    21b8:	add	ip, pc, #0, 12
    21bc:	add	ip, ip, #155648	; 0x26000
    21c0:	ldr	pc, [ip, #3720]!	; 0xe88

000021c4 <memcpy@plt>:
    21c4:	add	ip, pc, #0, 12
    21c8:	add	ip, ip, #155648	; 0x26000
    21cc:	ldr	pc, [ip, #3712]!	; 0xe80

000021d0 <btbb_uap_from_header@plt>:
    21d0:	add	ip, pc, #0, 12
    21d4:	add	ip, ip, #155648	; 0x26000
    21d8:	ldr	pc, [ip, #3704]!	; 0xe78

000021dc <btbb_packet_get_flag@plt>:
    21dc:	add	ip, pc, #0, 12
    21e0:	add	ip, ip, #155648	; 0x26000
    21e4:	ldr	pc, [ip, #3696]!	; 0xe70

000021e8 <fhs@plt>:
    21e8:	add	ip, pc, #0, 12
    21ec:	add	ip, ip, #155648	; 0x26000
    21f0:	ldr	pc, [ip, #3688]!	; 0xe68

000021f4 <EV4@plt>:
    21f4:	add	ip, pc, #0, 12
    21f8:	add	ip, ip, #155648	; 0x26000
    21fc:	ldr	pc, [ip, #3680]!	; 0xe60

00002200 <btbb_piconet_get_uap@plt>:
    2200:	add	ip, pc, #0, 12
    2204:	add	ip, ip, #155648	; 0x26000
    2208:	ldr	pc, [ip, #3672]!	; 0xe58

0000220c <memcmp@plt>:
    220c:	add	ip, pc, #0, 12
    2210:	add	ip, ip, #155648	; 0x26000
    2214:	ldr	pc, [ip, #3664]!	; 0xe50

00002218 <lell_pcap_close@plt>:
    2218:	add	ip, pc, #0, 12
    221c:	add	ip, ip, #155648	; 0x26000
    2220:	ldr	pc, [ip, #3656]!	; 0xe48

00002224 <btbb_piconet_get_channel_seen@plt>:
    2224:	add	ip, pc, #0, 12
    2228:	add	ip, ip, #155648	; 0x26000
    222c:	ldr	pc, [ip, #3648]!	; 0xe40

00002230 <btbb_pcap_open@plt>:
    2230:	add	ip, pc, #0, 12
    2234:	add	ip, ip, #155648	; 0x26000
    2238:	ldr	pc, [ip, #3640]!	; 0xe38

0000223c <btbb_header_present@plt>:
    223c:	add	ip, pc, #0, 12
    2240:	add	ip, ip, #155648	; 0x26000
    2244:	ldr	pc, [ip, #3632]!	; 0xe30

00002248 <btbb_piconet_get_flag@plt>:
    2248:	add	ip, pc, #0, 12
    224c:	add	ip, ip, #155648	; 0x26000
    2250:	ldr	pc, [ip, #3624]!	; 0xe28

00002254 <pcapng_create@plt>:
    2254:	add	ip, pc, #0, 12
    2258:	add	ip, ip, #155648	; 0x26000
    225c:	ldr	pc, [ip, #3616]!	; 0xe20

00002260 <DM@plt>:
    2260:	add	ip, pc, #0, 12
    2264:	add	ip, ip, #155648	; 0x26000
    2268:	ldr	pc, [ip, #3608]!	; 0xe18

0000226c <btbb_piconet_set_flag@plt>:
    226c:	add	ip, pc, #0, 12
    2270:	add	ip, ip, #155648	; 0x26000
    2274:	ldr	pc, [ip, #3600]!	; 0xe10

00002278 <HV@plt>:
    2278:	add	ip, pc, #0, 12
    227c:	add	ip, ip, #155648	; 0x26000
    2280:	ldr	pc, [ip, #3592]!	; 0xe08

00002284 <perror@plt>:
    2284:	add	ip, pc, #0, 12
    2288:	add	ip, ip, #155648	; 0x26000
    228c:	ldr	pc, [ip, #3584]!	; 0xe00

00002290 <btbb_piconet_set_channel_seen@plt>:
    2290:	add	ip, pc, #0, 12
    2294:	add	ip, ip, #155648	; 0x26000
    2298:	ldr	pc, [ip, #3576]!	; 0xdf8

0000229c <perm_table_init@plt>:
    229c:	add	ip, pc, #0, 12
    22a0:	add	ip, ip, #155648	; 0x26000
    22a4:	ldr	pc, [ip, #3568]!	; 0xdf0

000022a8 <btbb_packet_set_uap@plt>:
    22a8:	add	ip, pc, #0, 12
    22ac:	add	ip, ip, #155648	; 0x26000
    22b0:	ldr	pc, [ip, #3560]!	; 0xde8

000022b4 <fwrite@plt>:
    22b4:	add	ip, pc, #0, 12
    22b8:	add	ip, ip, #155648	; 0x26000
    22bc:	ldr	pc, [ip, #3552]!	; 0xde0

000022c0 <btbb_gen_syncword@plt>:
    22c0:	add	ip, pc, #0, 12
    22c4:	add	ip, ip, #155648	; 0x26000
    22c8:	ldr	pc, [ip, #3544]!	; 0xdd8

000022cc <btbb_pcap_close@plt>:
    22cc:	add	ip, pc, #0, 12
    22d0:	add	ip, ip, #155648	; 0x26000
    22d4:	ldr	pc, [ip, #3536]!	; 0xdd0

000022d8 <crc_check@plt>:
    22d8:	add	ip, pc, #0, 12
    22dc:	add	ip, ip, #155648	; 0x26000
    22e0:	ldr	pc, [ip, #3528]!	; 0xdc8

000022e4 <btbb_decode@plt>:
    22e4:	add	ip, pc, #0, 12
    22e8:	add	ip, ip, #155648	; 0x26000
    22ec:	ldr	pc, [ip, #3520]!	; 0xdc0

000022f0 <btbb_winnow@plt>:
    22f0:	add	ip, pc, #0, 12
    22f4:	add	ip, ip, #155648	; 0x26000
    22f8:	ldr	pc, [ip, #3512]!	; 0xdb8

000022fc <lell_get_adv_type_str@plt>:
    22fc:	add	ip, pc, #0, 12
    2300:	add	ip, ip, #155648	; 0x26000
    2304:	ldr	pc, [ip, #3504]!	; 0xdb0

00002308 <get_hop_pattern@plt>:
    2308:	add	ip, pc, #0, 12
    230c:	add	ip, ip, #155648	; 0x26000
    2310:	ldr	pc, [ip, #3496]!	; 0xda8

00002314 <puts@plt>:
    2314:	add	ip, pc, #0, 12
    2318:	add	ip, ip, #155648	; 0x26000
    231c:	ldr	pc, [ip, #3488]!	; 0xda0

00002320 <malloc@plt>:
    2320:	add	ip, pc, #0, 12
    2324:	add	ip, ip, #155648	; 0x26000
    2328:	ldr	pc, [ip, #3480]!	; 0xd98

0000232c <try_hop@plt>:
    232c:	add	ip, pc, #0, 12
    2330:	add	ip, ip, #155648	; 0x26000
    2334:	ldr	pc, [ip, #3472]!	; 0xd90

00002338 <btbb_packet_new@plt>:
    2338:	add	ip, pc, #0, 12
    233c:	add	ip, ip, #155648	; 0x26000
    2340:	ldr	pc, [ip, #3464]!	; 0xd88

00002344 <btbb_pcap_dump@plt>:
    2344:	add	ip, pc, #0, 12
    2348:	add	ip, ip, #155648	; 0x26000
    234c:	ldr	pc, [ip, #3456]!	; 0xd80

00002350 <__gmon_start__@plt>:
    2350:	add	ip, pc, #0, 12
    2354:	add	ip, ip, #155648	; 0x26000
    2358:	ldr	pc, [ip, #3448]!	; 0xd78

0000235c <open@plt>:
    235c:	add	ip, pc, #0, 12
    2360:	add	ip, ip, #155648	; 0x26000
    2364:	ldr	pc, [ip, #3440]!	; 0xd70

00002368 <__ctype_b_loc@plt>:
    2368:	add	ip, pc, #0, 12
    236c:	add	ip, ip, #155648	; 0x26000
    2370:	ldr	pc, [ip, #3432]!	; 0xd68

00002374 <exit@plt>:
    2374:	add	ip, pc, #0, 12
    2378:	add	ip, ip, #155648	; 0x26000
    237c:	ldr	pc, [ip, #3424]!	; 0xd60

00002380 <btbb_packet_get_payload_length@plt>:
    2380:	add	ip, pc, #0, 12
    2384:	add	ip, ip, #155648	; 0x26000
    2388:	ldr	pc, [ip, #3416]!	; 0xd58

0000238c <strlen@plt>:
    238c:	add	ip, pc, #0, 12
    2390:	add	ip, ip, #155648	; 0x26000
    2394:	ldr	pc, [ip, #3408]!	; 0xd50

00002398 <btbb_decode_header@plt>:
    2398:	add	ip, pc, #0, 12
    239c:	add	ip, ip, #155648	; 0x26000
    23a0:	ldr	pc, [ip, #3400]!	; 0xd48

000023a4 <mmap@plt>:
    23a4:	add	ip, pc, #0, 12
    23a8:	add	ip, ip, #155648	; 0x26000
    23ac:	ldr	pc, [ip, #3392]!	; 0xd40

000023b0 <btbb_packet_get_header_packed@plt>:
    23b0:	add	ip, pc, #0, 12
    23b4:	add	ip, ip, #155648	; 0x26000
    23b8:	ldr	pc, [ip, #3384]!	; 0xd38

000023bc <lell_pcapng_record_connect_req@plt>:
    23bc:	add	ip, pc, #0, 12
    23c0:	add	ip, ip, #155648	; 0x26000
    23c4:	ldr	pc, [ip, #3376]!	; 0xd30

000023c8 <lell_get_channel_k@plt>:
    23c8:	add	ip, pc, #0, 12
    23cc:	add	ip, ip, #155648	; 0x26000
    23d0:	ldr	pc, [ip, #3368]!	; 0xd28

000023d4 <fprintf@plt>:
    23d4:	add	ip, pc, #0, 12
    23d8:	add	ip, ip, #155648	; 0x26000
    23dc:	ldr	pc, [ip, #3360]!	; 0xd20

000023e0 <getpagesize@plt>:
    23e0:	add	ip, pc, #0, 12
    23e4:	add	ip, ip, #155648	; 0x26000
    23e8:	ldr	pc, [ip, #3352]!	; 0xd18

000023ec <pcapng_append_packet@plt>:
    23ec:	add	ip, pc, #0, 12
    23f0:	add	ip, ip, #155648	; 0x26000
    23f4:	ldr	pc, [ip, #3344]!	; 0xd10

000023f8 <btbb_packet_get_transport@plt>:
    23f8:	add	ip, pc, #0, 12
    23fc:	add	ip, ip, #155648	; 0x26000
    2400:	ldr	pc, [ip, #3336]!	; 0xd08

00002404 <__errno_location@plt>:
    2404:	add	ip, pc, #0, 12
    2408:	add	ip, ip, #155648	; 0x26000
    240c:	ldr	pc, [ip, #3328]!	; 0xd00

00002410 <find_known_lap@plt>:
    2410:	add	ip, pc, #0, 12
    2414:	add	ip, ip, #155648	; 0x26000
    2418:	ldr	pc, [ip, #3320]!	; 0xcf8

0000241c <address_precalc@plt>:
    241c:	add	ip, pc, #0, 12
    2420:	add	ip, ip, #155648	; 0x26000
    2424:	ldr	pc, [ip, #3312]!	; 0xcf0

00002428 <memset@plt>:
    2428:	add	ip, pc, #0, 12
    242c:	add	ip, ip, #155648	; 0x26000
    2430:	ldr	pc, [ip, #3304]!	; 0xce8

00002434 <putchar@plt>:
    2434:	add	ip, pc, #0, 12
    2438:	add	ip, ip, #155648	; 0x26000
    243c:	ldr	pc, [ip, #3296]!	; 0xce0

00002440 <strncpy@plt>:
    2440:	add	ip, pc, #0, 12
    2444:	add	ip, ip, #155648	; 0x26000
    2448:	ldr	pc, [ip, #3288]!	; 0xcd8

0000244c <EV3@plt>:
    244c:	add	ip, pc, #0, 12
    2450:	add	ip, ip, #155648	; 0x26000
    2454:	ldr	pc, [ip, #3280]!	; 0xcd0

00002458 <btbb_packet_get_lap@plt>:
    2458:	add	ip, pc, #0, 12
    245c:	add	ip, ip, #155648	; 0x26000
    2460:	ldr	pc, [ip, #3272]!	; 0xcc8

00002464 <lell_packet_new@plt>:
    2464:	add	ip, pc, #0, 12
    2468:	add	ip, ip, #155648	; 0x26000
    246c:	ldr	pc, [ip, #3264]!	; 0xcc0

00002470 <bt_compidtostr@plt>:
    2470:	add	ip, pc, #0, 12
    2474:	add	ip, ip, #155648	; 0x26000
    2478:	ldr	pc, [ip, #3256]!	; 0xcb8

0000247c <write@plt>:
    247c:	add	ip, pc, #0, 12
    2480:	add	ip, ip, #155648	; 0x26000
    2484:	ldr	pc, [ip, #3248]!	; 0xcb0

00002488 <get_piconet@plt>:
    2488:	add	ip, pc, #0, 12
    248c:	add	ip, ip, #155648	; 0x26000
    2490:	ldr	pc, [ip, #3240]!	; 0xca8

00002494 <perm5@plt>:
    2494:	add	ip, pc, #0, 12
    2498:	add	ip, ip, #155648	; 0x26000
    249c:	ldr	pc, [ip, #3232]!	; 0xca0

000024a0 <fclose@plt>:
    24a0:	add	ip, pc, #0, 12
    24a4:	add	ip, ip, #155648	; 0x26000
    24a8:	ldr	pc, [ip, #3224]!	; 0xc98

000024ac <EV5@plt>:
    24ac:	add	ip, pc, #0, 12
    24b0:	add	ip, ip, #155648	; 0x26000
    24b4:	ldr	pc, [ip, #3216]!	; 0xc90

000024b8 <munmap@plt>:
    24b8:	add	ip, pc, #0, 12
    24bc:	add	ip, ip, #155648	; 0x26000
    24c0:	ldr	pc, [ip, #3208]!	; 0xc88

000024c4 <DH@plt>:
    24c4:	add	ip, pc, #0, 12
    24c8:	add	ip, ip, #155648	; 0x26000
    24cc:	ldr	pc, [ip, #3200]!	; 0xc80

000024d0 <btbb_packet_get_channel@plt>:
    24d0:	add	ip, pc, #0, 12
    24d4:	add	ip, ip, #155648	; 0x26000
    24d8:	ldr	pc, [ip, #3192]!	; 0xc78

000024dc <precalc@plt>:
    24dc:	add	ip, pc, #0, 12
    24e0:	add	ip, ip, #155648	; 0x26000
    24e4:	ldr	pc, [ip, #3184]!	; 0xc70

000024e8 <btbb_decode_payload@plt>:
    24e8:	add	ip, pc, #0, 12
    24ec:	add	ip, ip, #155648	; 0x26000
    24f0:	ldr	pc, [ip, #3176]!	; 0xc68

000024f4 <promiscuous_packet_search@plt>:
    24f4:	add	ip, pc, #0, 12
    24f8:	add	ip, ip, #155648	; 0x26000
    24fc:	ldr	pc, [ip, #3168]!	; 0xc60

00002500 <pcapng_close@plt>:
    2500:	add	ip, pc, #0, 12
    2504:	add	ip, ip, #155648	; 0x26000
    2508:	ldr	pc, [ip, #3160]!	; 0xc58

0000250c <btbb_print_packet@plt>:
    250c:	add	ip, pc, #0, 12
    2510:	add	ip, ip, #155648	; 0x26000
    2514:	ldr	pc, [ip, #3152]!	; 0xc50

00002518 <fast_perm@plt>:
    2518:	add	ip, pc, #0, 12
    251c:	add	ip, ip, #155648	; 0x26000
    2520:	ldr	pc, [ip, #3144]!	; 0xc48

00002524 <try_clock@plt>:
    2524:	add	ip, pc, #0, 12
    2528:	add	ip, ip, #155648	; 0x26000
    252c:	ldr	pc, [ip, #3136]!	; 0xc40

00002530 <btbb_init_hop_reversal@plt>:
    2530:	add	ip, pc, #0, 12
    2534:	add	ip, ip, #155648	; 0x26000
    2538:	ldr	pc, [ip, #3128]!	; 0xc38

0000253c <btbb_init_piconet@plt>:
    253c:	add	ip, pc, #0, 12
    2540:	add	ip, ip, #155648	; 0x26000
    2544:	ldr	pc, [ip, #3120]!	; 0xc30

00002548 <close@plt>:
    2548:	add	ip, pc, #0, 12
    254c:	add	ip, ip, #155648	; 0x26000
    2550:	ldr	pc, [ip, #3112]!	; 0xc28

00002554 <__assert_fail@plt>:
    2554:	add	ip, pc, #0, 12
    2558:	add	ip, ip, #155648	; 0x26000
    255c:	ldr	pc, [ip, #3104]!	; 0xc20

Disassembly of section .text:

00002560 <btbb_gen_syncword@@Base-0xb88>:
    2560:	ldr	r3, [pc, #20]	; 257c <__assert_fail@plt+0x28>
    2564:	ldr	r2, [pc, #20]	; 2580 <__assert_fail@plt+0x2c>
    2568:	add	r3, pc, r3
    256c:	ldr	r2, [r3, r2]
    2570:	cmp	r2, #0
    2574:	bxeq	lr
    2578:	b	2350 <__gmon_start__@plt>
    257c:	muleq	r2, r0, sl
    2580:	muleq	r0, r4, r1
    2584:	ldr	r3, [pc, #52]	; 25c0 <__assert_fail@plt+0x6c>
    2588:	ldr	r0, [pc, #52]	; 25c4 <__assert_fail@plt+0x70>
    258c:	add	r3, pc, r3
    2590:	add	r0, pc, r0
    2594:	add	r3, r3, #3
    2598:	sub	r3, r3, r0
    259c:	cmp	r3, #6
    25a0:	ldr	r3, [pc, #32]	; 25c8 <__assert_fail@plt+0x74>
    25a4:	add	r3, pc, r3
    25a8:	bxls	lr
    25ac:	ldr	r2, [pc, #24]	; 25cc <__assert_fail@plt+0x78>
    25b0:	ldr	r3, [r3, r2]
    25b4:	cmp	r3, #0
    25b8:	bxeq	lr
    25bc:	bx	r3
    25c0:	andeq	r6, r2, r8, lsl ip
    25c4:	andeq	r6, r2, r4, lsl ip
    25c8:	andeq	r6, r2, r4, asr sl
    25cc:	andeq	r0, r0, r4, lsl #3
    25d0:	ldr	r1, [pc, #56]	; 2610 <__assert_fail@plt+0xbc>
    25d4:	ldr	r0, [pc, #56]	; 2614 <__assert_fail@plt+0xc0>
    25d8:	add	r1, pc, r1
    25dc:	add	r0, pc, r0
    25e0:	sub	r1, r1, r0
    25e4:	ldr	r3, [pc, #44]	; 2618 <__assert_fail@plt+0xc4>
    25e8:	asr	r1, r1, #2
    25ec:	add	r3, pc, r3
    25f0:	add	r1, r1, r1, lsr #31
    25f4:	asrs	r1, r1, #1
    25f8:	bxeq	lr
    25fc:	ldr	r2, [pc, #24]	; 261c <__assert_fail@plt+0xc8>
    2600:	ldr	r3, [r3, r2]
    2604:	cmp	r3, #0
    2608:	bxeq	lr
    260c:	bx	r3
    2610:	andeq	r6, r2, ip, asr #23
    2614:	andeq	r6, r2, r8, asr #23
    2618:	andeq	r6, r2, ip, lsl #20
    261c:	andeq	r0, r0, r0, lsr #3
    2620:	ldr	r3, [pc, #76]	; 2674 <__assert_fail@plt+0x120>
    2624:	ldr	r2, [pc, #76]	; 2678 <__assert_fail@plt+0x124>
    2628:	add	r3, pc, r3
    262c:	add	r2, pc, r2
    2630:	ldrb	r3, [r3]
    2634:	cmp	r3, #0
    2638:	bxne	lr
    263c:	ldr	r3, [pc, #56]	; 267c <__assert_fail@plt+0x128>
    2640:	push	{r4, lr}
    2644:	ldr	r3, [r2, r3]
    2648:	cmp	r3, #0
    264c:	beq	265c <__assert_fail@plt+0x108>
    2650:	ldr	r3, [pc, #40]	; 2680 <__assert_fail@plt+0x12c>
    2654:	ldr	r0, [pc, r3]
    2658:	bl	2140 <__cxa_finalize@plt>
    265c:	bl	2584 <__assert_fail@plt+0x30>
    2660:	ldr	r3, [pc, #28]	; 2684 <__assert_fail@plt+0x130>
    2664:	mov	r2, #1
    2668:	add	r3, pc, r3
    266c:	strb	r2, [r3]
    2670:	pop	{r4, pc}
    2674:	andeq	r6, r2, ip, ror fp
    2678:	andeq	r6, r2, ip, asr #19
    267c:	andeq	r0, r0, r0, lsl #3
    2680:	andeq	r6, r2, r8, asr #22
    2684:	andeq	r6, r2, ip, lsr fp
    2688:	ldr	r0, [pc, #56]	; 26c8 <__assert_fail@plt+0x174>
    268c:	ldr	r3, [pc, #56]	; 26cc <__assert_fail@plt+0x178>
    2690:	add	r0, pc, r0
    2694:	ldr	r2, [r0]
    2698:	add	r3, pc, r3
    269c:	cmp	r2, #0
    26a0:	bne	26a8 <__assert_fail@plt+0x154>
    26a4:	b	25d0 <__assert_fail@plt+0x7c>
    26a8:	ldr	r2, [pc, #32]	; 26d0 <__assert_fail@plt+0x17c>
    26ac:	ldr	r3, [r3, r2]
    26b0:	cmp	r3, #0
    26b4:	beq	26a4 <__assert_fail@plt+0x150>
    26b8:	push	{r4, lr}
    26bc:	blx	r3
    26c0:	pop	{r4, lr}
    26c4:	b	25d0 <__assert_fail@plt+0x7c>
    26c8:	andeq	r6, r2, ip, ror r7
    26cc:	andeq	r6, r2, r0, ror #18
    26d0:	muleq	r0, r8, r1
    26d4:	andeq	r0, r0, r0
    26d8:	push	{r4, r5, r6, r7, lr}
    26dc:	mov	lr, r1
    26e0:	ldr	r3, [pc, #112]	; 2758 <__assert_fail@plt+0x204>
    26e4:	add	r3, pc, r3
    26e8:	lsr	r2, r1, #24
    26ec:	lsl	r2, r2, #3
    26f0:	ldrd	r6, [r3, r2]
    26f4:	eor	r6, r6, r0
    26f8:	add	r3, r3, #2048	; 0x800
    26fc:	mov	r5, #0
    2700:	and	r0, r1, #255	; 0xff
    2704:	lsl	r0, r0, #3
    2708:	ldrd	r2, [r3, r0]
    270c:	eor	r2, r2, r6
    2710:	eor	r3, r3, r7
    2714:	ldr	ip, [pc, #64]	; 275c <__assert_fail@plt+0x208>
    2718:	add	ip, pc, ip
    271c:	sub	r4, ip, #4080	; 0xff0
    2720:	lsr	r0, lr, #8
    2724:	and	r0, r0, #255	; 0xff
    2728:	add	r0, r4, r0, lsl #3
    272c:	ldrd	r0, [r0, #-8]
    2730:	eor	r2, r2, r0
    2734:	eor	r3, r3, r1
    2738:	sub	ip, ip, #2032	; 0x7f0
    273c:	lsr	r0, lr, #16
    2740:	and	r0, r0, #255	; 0xff
    2744:	add	ip, ip, r0, lsl #3
    2748:	ldrd	r0, [ip, #-8]
    274c:	eor	r0, r0, r2
    2750:	eor	r1, r1, r3
    2754:	pop	{r4, r5, r6, r7, pc}
    2758:	andeq	sp, r0, r4, lsl r7
    275c:	ldrdeq	pc, [r0], -r8
    2760:	cmp	r1, #0
    2764:	ble	2798 <__assert_fail@plt+0x244>
    2768:	push	{lr}		; (str lr, [sp, #-4]!)
    276c:	mov	lr, r0
    2770:	add	r1, r0, r1
    2774:	mov	r3, r0
    2778:	mov	r0, #0
    277c:	sub	r2, r3, lr
    2780:	ldrb	ip, [r3], #1
    2784:	orr	r0, r0, ip, lsl r2
    2788:	uxtb	r0, r0
    278c:	cmp	r3, r1
    2790:	bne	277c <__assert_fail@plt+0x228>
    2794:	pop	{pc}		; (ldr pc, [sp], #4)
    2798:	mov	r0, #0
    279c:	bx	lr
    27a0:	cmp	r1, #0
    27a4:	ble	27d8 <__assert_fail@plt+0x284>
    27a8:	push	{lr}		; (str lr, [sp, #-4]!)
    27ac:	mov	lr, r0
    27b0:	add	r1, r0, r1
    27b4:	mov	r3, r0
    27b8:	mov	r0, #0
    27bc:	sub	r2, r3, lr
    27c0:	ldrb	ip, [r3], #1
    27c4:	orr	r0, r0, ip, lsl r2
    27c8:	uxth	r0, r0
    27cc:	cmp	r3, r1
    27d0:	bne	27bc <__assert_fail@plt+0x268>
    27d4:	pop	{pc}		; (ldr pc, [sp], #4)
    27d8:	mov	r0, #0
    27dc:	bx	lr
    27e0:	lsl	r3, r0, #7
    27e4:	orr	r3, r3, r0, lsr #7
    27e8:	asr	r2, r0, #5
    27ec:	and	r2, r2, #2
    27f0:	orr	r3, r3, r2
    27f4:	asr	r2, r0, #3
    27f8:	and	r2, r2, #4
    27fc:	orr	r3, r3, r2
    2800:	asr	r2, r0, #1
    2804:	and	r2, r2, #8
    2808:	orr	r3, r3, r2
    280c:	lsl	r2, r0, #1
    2810:	and	r2, r2, #16
    2814:	orr	r3, r3, r2
    2818:	lsl	r2, r0, #3
    281c:	and	r2, r2, #32
    2820:	orr	r3, r3, r2
    2824:	lsl	r0, r0, #5
    2828:	and	r0, r0, #64	; 0x40
    282c:	orr	r0, r3, r0
    2830:	uxtb	r0, r0
    2834:	bx	lr
    2838:	push	{r4, r5, r6, lr}
    283c:	cmp	r2, #0
    2840:	ble	28bc <__assert_fail@plt+0x368>
    2844:	mov	r4, r1
    2848:	add	r1, r1, r2
    284c:	mov	r5, #0
    2850:	ldrb	ip, [r0]
    2854:	ldrb	lr, [r0, #2]
    2858:	orr	r6, ip, lr
    285c:	ldrb	r3, [r0, #1]
    2860:	and	r3, r3, r6
    2864:	and	ip, ip, lr
    2868:	orr	r3, r3, ip
    286c:	strb	r3, [r4], #1
    2870:	ldrb	ip, [r0]
    2874:	ldrb	lr, [r0, #1]
    2878:	ldrb	r6, [r0, #2]
    287c:	eor	r3, ip, lr
    2880:	eor	lr, lr, r6
    2884:	orr	r3, r3, lr
    2888:	eor	ip, ip, r6
    288c:	orr	r3, r3, ip
    2890:	add	r5, r5, r3
    2894:	add	r0, r0, #3
    2898:	cmp	r4, r1
    289c:	bne	2850 <__assert_fail@plt+0x2fc>
    28a0:	add	r3, r2, #3
    28a4:	cmp	r2, #0
    28a8:	movlt	r2, r3
    28ac:	cmp	r5, r2, asr #2
    28b0:	movlt	r0, #1
    28b4:	movge	r0, #0
    28b8:	pop	{r4, r5, r6, pc}
    28bc:	mov	r5, #0
    28c0:	b	28a0 <__assert_fail@plt+0x34c>
    28c4:	push	{r4, lr}
    28c8:	mov	r2, #9
    28cc:	tst	r1, #128	; 0x80
    28d0:	eorne	r1, r1, #101	; 0x65
    28d4:	asr	r3, r0, r2
    28d8:	eor	r3, r3, r1, lsr #7
    28dc:	and	r3, r3, #1
    28e0:	orr	r1, r3, r1, lsl #1
    28e4:	uxtb	r1, r1
    28e8:	sub	r2, r2, #1
    28ec:	cmn	r2, #1
    28f0:	bne	28cc <__assert_fail@plt+0x378>
    28f4:	mov	r0, r1
    28f8:	bl	27e0 <__assert_fail@plt+0x28c>
    28fc:	pop	{r4, pc}
    2900:	push	{r4, r5, r6, r7, r8, lr}
    2904:	mov	r7, r0
    2908:	add	r6, r0, #68	; 0x44
    290c:	ldr	r5, [r0, #64]	; 0x40
    2910:	sub	r5, r5, #2
    2914:	lsl	r5, r5, #3
    2918:	ldrb	r0, [r0, #9]
    291c:	bl	27e0 <__assert_fail@plt+0x28c>
    2920:	lsl	r0, r0, #8
    2924:	uxth	r4, r0
    2928:	cmp	r5, #0
    292c:	ble	2974 <__assert_fail@plt+0x420>
    2930:	mov	r3, #0
    2934:	ldrb	r0, [r6, r3]
    2938:	eor	r0, r0, r4
    293c:	lsr	r4, r4, #1
    2940:	orr	r4, r4, r0, lsl #15
    2944:	sxth	r4, r4
    2948:	lsr	r0, r4, #5
    294c:	and	r0, r0, #1024	; 0x400
    2950:	eor	r4, r4, r0
    2954:	lsr	r0, r4, #12
    2958:	and	r0, r0, #8
    295c:	eor	r4, r4, r0
    2960:	uxth	r4, r4
    2964:	add	r3, r3, #1
    2968:	uxth	r3, r3
    296c:	cmp	r5, r3
    2970:	bgt	2934 <__assert_fail@plt+0x3e0>
    2974:	add	r0, r5, #68	; 0x44
    2978:	mov	r1, #16
    297c:	add	r0, r7, r0
    2980:	bl	27a0 <__assert_fail@plt+0x24c>
    2984:	cmp	r0, r4
    2988:	movne	r0, #0
    298c:	moveq	r0, #1
    2990:	pop	{r4, r5, r6, r7, r8, pc}
    2994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2998:	sub	sp, sp, #52	; 0x34
    299c:	strd	r0, [sp, #24]
    29a0:	sub	r3, r3, #1
    29a4:	str	r3, [sp, #32]
    29a8:	cmp	r2, #57	; 0x39
    29ac:	bgt	2ea0 <__assert_fail@plt+0x94c>
    29b0:	mov	fp, r2
    29b4:	ldr	r3, [pc, #1260]	; 2ea8 <__assert_fail@plt+0x954>
    29b8:	add	r3, pc, r3
    29bc:	str	r3, [sp, #36]	; 0x24
    29c0:	ldr	r3, [pc, #1252]	; 2eac <__assert_fail@plt+0x958>
    29c4:	add	r3, pc, r3
    29c8:	str	r3, [sp, #40]	; 0x28
    29cc:	b	2e40 <__assert_fail@plt+0x8ec>
    29d0:	ldrd	r0, [sp, #88]	; 0x58
    29d4:	eor	r0, r0, r4
    29d8:	eor	r1, r1, r5
    29dc:	bl	26d8 <__assert_fail@plt+0x184>
    29e0:	mov	r6, r0
    29e4:	mov	r7, r1
    29e8:	mov	r0, #48	; 0x30
    29ec:	bl	2320 <malloc@plt>
    29f0:	mov	r9, r0
    29f4:	strd	r6, [r0]
    29f8:	strd	r4, [r0, #8]
    29fc:	mov	r3, #0
    2a00:	str	r3, [r0, #24]
    2a04:	str	r0, [r9, #36]	; 0x24
    2a08:	mov	r3, #8
    2a0c:	str	r3, [r0, #40]	; 0x28
    2a10:	ldr	r3, [sp, #36]	; 0x24
    2a14:	ldr	r3, [r3]
    2a18:	cmp	r3, #0
    2a1c:	beq	2c70 <__assert_fail@plt+0x71c>
    2a20:	ldr	r2, [r3, #16]
    2a24:	ldr	r2, [r2, #16]
    2a28:	str	r0, [r2, #8]
    2a2c:	ldr	r1, [r3, #16]
    2a30:	ldr	r2, [r1, #16]
    2a34:	ldr	r1, [r1, #20]
    2a38:	sub	r2, r2, r1
    2a3c:	str	r2, [r0, #20]
    2a40:	ldr	r3, [r3, #16]
    2a44:	add	r2, r0, #16
    2a48:	str	r2, [r3, #16]
    2a4c:	ldr	r3, [sp, #40]	; 0x28
    2a50:	ldr	r1, [r3]
    2a54:	ldr	r2, [r1, #16]
    2a58:	ldr	r3, [r2, #12]
    2a5c:	add	r3, r3, #1
    2a60:	str	r3, [r2, #12]
    2a64:	ldr	r3, [r1, #16]
    2a68:	str	r3, [r9, #16]
    2a6c:	ldrb	r3, [r9, #4]
    2a70:	add	r3, r3, #-1644167168	; 0x9e000000
    2a74:	add	r3, r3, #3620864	; 0x374000
    2a78:	add	r3, r3, #14720	; 0x3980
    2a7c:	add	r3, r3, #57	; 0x39
    2a80:	ldrb	r2, [r9, #7]
    2a84:	add	r3, r3, r2, lsl #24
    2a88:	ldrb	r2, [r9, #6]
    2a8c:	add	r3, r3, r2, lsl #16
    2a90:	ldrb	r2, [r9, #5]
    2a94:	add	r3, r3, r2, lsl #8
    2a98:	ldrb	r0, [r9, #3]
    2a9c:	ldrb	r2, [r9]
    2aa0:	add	r2, r2, #-1627389952	; 0x9f000000
    2aa4:	add	r2, r2, #4784128	; 0x490000
    2aa8:	add	r2, r2, #47616	; 0xba00
    2aac:	add	r2, r2, #194	; 0xc2
    2ab0:	add	r2, r2, r0, lsl #24
    2ab4:	ldrb	r0, [r9, #2]
    2ab8:	add	r2, r2, r0, lsl #16
    2abc:	ldrb	r0, [r9, #1]
    2ac0:	add	r2, r2, r0, lsl #8
    2ac4:	sub	r2, r2, r3
    2ac8:	ldr	ip, [pc, #992]	; 2eb0 <__assert_fail@plt+0x95c>
    2acc:	eor	ip, ip, r2
    2ad0:	add	r3, r3, #17825792	; 0x1100000
    2ad4:	add	r3, r3, #147456	; 0x24000
    2ad8:	add	r3, r3, #264	; 0x108
    2adc:	add	r3, r3, #1
    2ae0:	sub	r3, r3, ip
    2ae4:	eor	r3, r3, ip, lsl #8
    2ae8:	ldr	r0, [pc, #964]	; 2eb4 <__assert_fail@plt+0x960>
    2aec:	sub	r0, r0, ip
    2af0:	sub	r0, r0, r3
    2af4:	eor	r0, r0, r3, lsr #13
    2af8:	sub	r2, ip, r3
    2afc:	sub	r2, r2, r0
    2b00:	eor	r2, r2, r0, lsr #12
    2b04:	sub	r3, r3, r0
    2b08:	sub	r3, r3, r2
    2b0c:	eor	r3, r3, r2, lsl #16
    2b10:	sub	r0, r0, r2
    2b14:	sub	r0, r0, r3
    2b18:	eor	r0, r0, r3, lsr #5
    2b1c:	sub	ip, r2, r3
    2b20:	sub	ip, ip, r0
    2b24:	eor	ip, ip, r0, lsr #3
    2b28:	sub	r2, r3, r0
    2b2c:	sub	r2, r2, ip
    2b30:	eor	r2, r2, ip, lsl #10
    2b34:	sub	r3, r0, ip
    2b38:	sub	r3, r3, r2
    2b3c:	eor	r3, r3, r2, lsr #15
    2b40:	str	r3, [r9, #44]	; 0x2c
    2b44:	ldr	r0, [r1, #16]
    2b48:	ldr	r2, [r0, #4]
    2b4c:	sub	r2, r2, #1
    2b50:	and	r3, r3, r2
    2b54:	add	r3, r3, r3, lsl #1
    2b58:	lsl	ip, r3, #2
    2b5c:	ldr	r0, [r0]
    2b60:	add	r0, r0, ip
    2b64:	ldr	r2, [r0, #4]
    2b68:	add	r2, r2, #1
    2b6c:	str	r2, [r0, #4]
    2b70:	ldr	r2, [r1, #16]
    2b74:	ldr	r2, [r2]
    2b78:	ldr	r2, [r2, r3, lsl #2]
    2b7c:	str	r2, [r9, #32]
    2b80:	mov	r2, #0
    2b84:	str	r2, [r9, #28]
    2b88:	ldr	r2, [r1, #16]
    2b8c:	ldr	r2, [r2]
    2b90:	ldr	r2, [r2, r3, lsl #2]
    2b94:	cmp	r2, #0
    2b98:	addne	r0, r9, #16
    2b9c:	strne	r0, [r2, #12]
    2ba0:	ldr	r2, [r1, #16]
    2ba4:	ldr	r2, [r2]
    2ba8:	add	r0, r9, #16
    2bac:	str	r0, [r2, r3, lsl #2]
    2bb0:	ldr	r3, [r1, #16]
    2bb4:	ldr	r2, [r3]
    2bb8:	add	r2, r2, ip
    2bbc:	ldr	r3, [r2, #8]
    2bc0:	add	r3, r3, #1
    2bc4:	add	r3, r3, r3, lsl #2
    2bc8:	ldr	r2, [r2, #4]
    2bcc:	cmp	r2, r3, lsl #1
    2bd0:	bcc	2e34 <__assert_fail@plt+0x8e0>
    2bd4:	ldr	r4, [r9, #16]
    2bd8:	ldr	r3, [r4, #36]	; 0x24
    2bdc:	cmp	r3, #1
    2be0:	beq	2e34 <__assert_fail@plt+0x8e0>
    2be4:	ldr	r5, [r4, #4]
    2be8:	add	r5, r5, r5, lsl #1
    2bec:	lsl	r5, r5, #3
    2bf0:	mov	r0, r5
    2bf4:	bl	2320 <malloc@plt>
    2bf8:	subs	r6, r0, #0
    2bfc:	beq	2d04 <__assert_fail@plt+0x7b0>
    2c00:	mov	r2, r5
    2c04:	mov	r1, #0
    2c08:	mov	r0, r6
    2c0c:	bl	2428 <memset@plt>
    2c10:	ldr	r1, [r4, #12]
    2c14:	ldr	r3, [r4, #4]
    2c18:	lsl	r3, r3, #1
    2c1c:	sub	r3, r3, #1
    2c20:	tst	r3, r1
    2c24:	movne	r3, #1
    2c28:	moveq	r3, #0
    2c2c:	ldr	r2, [r4, #8]
    2c30:	add	r2, r2, #1
    2c34:	add	r3, r3, r1, lsr r2
    2c38:	str	r3, [r4, #24]
    2c3c:	ldr	r3, [r9, #16]
    2c40:	mov	r2, #0
    2c44:	str	r2, [r3, #28]
    2c48:	ldr	r3, [r9, #16]
    2c4c:	ldr	r2, [r3, #4]
    2c50:	cmp	r2, #0
    2c54:	beq	2dd0 <__assert_fail@plt+0x87c>
    2c58:	mov	r2, #0
    2c5c:	str	r2, [sp, #20]
    2c60:	mov	sl, r2
    2c64:	str	fp, [sp, #44]	; 0x2c
    2c68:	mov	fp, r2
    2c6c:	b	2db8 <__assert_fail@plt+0x864>
    2c70:	ldr	r3, [pc, #576]	; 2eb8 <__assert_fail@plt+0x964>
    2c74:	add	r3, pc, r3
    2c78:	str	r0, [r3]
    2c7c:	mov	r3, #0
    2c80:	str	r3, [r0, #20]
    2c84:	mov	r0, #44	; 0x2c
    2c88:	bl	2320 <malloc@plt>
    2c8c:	mov	r4, r0
    2c90:	str	r0, [r9, #16]
    2c94:	cmp	r0, #0
    2c98:	beq	2cf4 <__assert_fail@plt+0x7a0>
    2c9c:	mov	r2, #44	; 0x2c
    2ca0:	mov	r1, #0
    2ca4:	bl	2428 <memset@plt>
    2ca8:	add	r3, r9, #16
    2cac:	str	r3, [r4, #16]
    2cb0:	mov	r3, #32
    2cb4:	str	r3, [r4, #4]
    2cb8:	mov	r3, #5
    2cbc:	str	r3, [r4, #8]
    2cc0:	mov	r3, #16
    2cc4:	str	r3, [r4, #20]
    2cc8:	mov	r0, #384	; 0x180
    2ccc:	bl	2320 <malloc@plt>
    2cd0:	str	r0, [r4]
    2cd4:	cmp	r0, #0
    2cd8:	beq	2cfc <__assert_fail@plt+0x7a8>
    2cdc:	mov	r2, #384	; 0x180
    2ce0:	mov	r1, #0
    2ce4:	bl	2428 <memset@plt>
    2ce8:	ldr	r3, [pc, #460]	; 2ebc <__assert_fail@plt+0x968>
    2cec:	str	r3, [r4, #40]	; 0x28
    2cf0:	b	2a4c <__assert_fail@plt+0x4f8>
    2cf4:	mvn	r0, #0
    2cf8:	bl	2374 <exit@plt>
    2cfc:	mvn	r0, #0
    2d00:	bl	2374 <exit@plt>
    2d04:	mvn	r0, #0
    2d08:	bl	2374 <exit@plt>
    2d0c:	str	sl, [r5, #12]
    2d10:	ldr	r3, [r6, r4, lsl #2]
    2d14:	str	r3, [r5, #16]
    2d18:	ldr	r3, [r6, r4, lsl #2]
    2d1c:	cmp	r3, #0
    2d20:	strne	r5, [r3, #12]
    2d24:	str	r5, [r6, r4, lsl #2]
    2d28:	mov	r5, r7
    2d2c:	cmp	r7, #0
    2d30:	beq	2d94 <__assert_fail@plt+0x840>
    2d34:	ldr	r7, [r5, #16]
    2d38:	ldr	r2, [r9, #16]
    2d3c:	ldr	r4, [r2, #4]
    2d40:	lsl	r4, r4, #1
    2d44:	sub	r4, r4, #1
    2d48:	ldr	r3, [r5, #28]
    2d4c:	and	r4, r4, r3
    2d50:	add	r4, r4, r4, lsl #1
    2d54:	add	r8, r6, r4, lsl #2
    2d58:	ldr	r3, [r8, #4]
    2d5c:	add	r3, r3, #1
    2d60:	str	r3, [r8, #4]
    2d64:	ldr	r1, [r2, #24]
    2d68:	cmp	r3, r1
    2d6c:	bls	2d0c <__assert_fail@plt+0x7b8>
    2d70:	ldr	r3, [r2, #28]
    2d74:	add	r3, r3, #1
    2d78:	str	r3, [r2, #28]
    2d7c:	ldr	r3, [r9, #16]
    2d80:	ldr	r1, [r3, #24]
    2d84:	ldr	r0, [r8, #4]
    2d88:	bl	fa10 <lell_pcapng_close@@Base+0x24>
    2d8c:	str	r0, [r8, #8]
    2d90:	b	2d0c <__assert_fail@plt+0x7b8>
    2d94:	ldr	r3, [sp, #20]
    2d98:	add	r3, r3, #1
    2d9c:	mov	r1, r3
    2da0:	str	r3, [sp, #20]
    2da4:	ldr	r3, [r9, #16]
    2da8:	add	fp, fp, #12
    2dac:	ldr	r2, [r3, #4]
    2db0:	cmp	r1, r2
    2db4:	bcs	2dcc <__assert_fail@plt+0x878>
    2db8:	ldr	r3, [r3]
    2dbc:	ldr	r5, [r3, fp]
    2dc0:	cmp	r5, #0
    2dc4:	bne	2d34 <__assert_fail@plt+0x7e0>
    2dc8:	b	2d94 <__assert_fail@plt+0x840>
    2dcc:	ldr	fp, [sp, #44]	; 0x2c
    2dd0:	ldr	r0, [r3]
    2dd4:	bl	21a0 <free@plt>
    2dd8:	ldr	r2, [r9, #16]
    2ddc:	ldr	r3, [r2, #4]
    2de0:	lsl	r3, r3, #1
    2de4:	str	r3, [r2, #4]
    2de8:	ldr	r2, [r9, #16]
    2dec:	ldr	r3, [r2, #8]
    2df0:	add	r3, r3, #1
    2df4:	str	r3, [r2, #8]
    2df8:	ldr	r3, [r9, #16]
    2dfc:	str	r6, [r3]
    2e00:	ldr	r3, [r9, #16]
    2e04:	ldr	r1, [r3, #12]
    2e08:	ldr	r2, [r3, #28]
    2e0c:	cmp	r2, r1, lsr #1
    2e10:	ldrhi	r2, [r3, #32]
    2e14:	addhi	r2, r2, #1
    2e18:	movls	r2, #0
    2e1c:	str	r2, [r3, #32]
    2e20:	ldr	r3, [r9, #16]
    2e24:	ldr	r2, [r3, #32]
    2e28:	cmp	r2, #1
    2e2c:	movhi	r2, #1
    2e30:	strhi	r2, [r3, #36]	; 0x24
    2e34:	add	fp, fp, #1
    2e38:	cmp	fp, #58	; 0x3a
    2e3c:	beq	2ea0 <__assert_fail@plt+0x94c>
    2e40:	mov	r3, #1
    2e44:	sub	r1, fp, #32
    2e48:	rsb	r2, fp, #32
    2e4c:	mov	r0, #0
    2e50:	lsl	r1, r3, r1
    2e54:	orr	r2, r1, r3, lsr r2
    2e58:	str	r2, [sp, #12]
    2e5c:	lsl	r3, r3, fp
    2e60:	str	r3, [sp, #8]
    2e64:	ldrd	r4, [sp, #8]
    2e68:	ldrd	r2, [sp, #24]
    2e6c:	orr	r4, r4, r2
    2e70:	orr	r5, r5, r3
    2e74:	ldr	r1, [sp, #32]
    2e78:	cmp	r1, r0
    2e7c:	beq	29d0 <__assert_fail@plt+0x47c>
    2e80:	ldrd	r2, [sp, #88]	; 0x58
    2e84:	strd	r2, [sp]
    2e88:	mov	r3, r1
    2e8c:	add	r2, fp, #1
    2e90:	mov	r0, r4
    2e94:	mov	r1, r5
    2e98:	bl	2994 <__assert_fail@plt+0x440>
    2e9c:	b	2e34 <__assert_fail@plt+0x8e0>
    2ea0:	add	sp, sp, #52	; 0x34
    2ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ea8:	strdeq	r6, [r2], -r0
    2eac:	andeq	r6, r2, r4, ror #15
    2eb0:	andeq	pc, r7, sp, ror #14
    2eb4:	mcr2	14, 7, fp, cr13, cr7, {7}
    2eb8:	andeq	r6, r2, r4, lsr r5
    2ebc:	andsge	r1, r1, r1, ror #31
    2ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2ec4:	sub	sp, sp, #12
    2ec8:	mov	r5, r0
    2ecc:	mov	r9, r1
    2ed0:	ldr	r3, [pc, #520]	; 30e0 <__assert_fail@plt+0xb8c>
    2ed4:	smull	r3, r2, r3, r1
    2ed8:	asr	r3, r1, #31
    2edc:	rsb	r3, r3, r2, asr #2
    2ee0:	add	r3, r3, r3, lsl #2
    2ee4:	sub	r3, r1, r3, lsl #1
    2ee8:	tst	r3, #255	; 0xff
    2eec:	uxtbne	r3, r3
    2ef0:	rsbne	r3, r3, #10
    2ef4:	addne	r9, r1, r3
    2ef8:	mov	r0, r9
    2efc:	bl	2320 <malloc@plt>
    2f00:	str	r0, [sp, #4]
    2f04:	cmp	r9, #0
    2f08:	ble	30d4 <__assert_fail@plt+0xb80>
    2f0c:	sub	r6, r0, #1
    2f10:	mov	r7, #0
    2f14:	mov	fp, #10
    2f18:	ldr	sl, [pc, #452]	; 30e4 <__assert_fail@plt+0xb90>
    2f1c:	add	sl, pc, sl
    2f20:	mov	r8, r7
    2f24:	b	2f48 <__assert_fail@plt+0x9f4>
    2f28:	ldrb	r3, [r6, #1]
    2f2c:	eor	r3, r3, #1
    2f30:	strb	r3, [r6, #1]
    2f34:	add	r7, r7, #10
    2f38:	add	r5, r5, #15
    2f3c:	add	r6, r6, #10
    2f40:	cmp	r9, r7
    2f44:	ble	30d4 <__assert_fail@plt+0xb80>
    2f48:	sub	r3, r5, #1
    2f4c:	add	r0, r5, #9
    2f50:	mov	r2, r6
    2f54:	ldrb	r1, [r3, #1]!
    2f58:	strb	r1, [r2, #1]!
    2f5c:	cmp	r3, r0
    2f60:	bne	2f54 <__assert_fail@plt+0xa00>
    2f64:	mov	r1, fp
    2f68:	mov	r0, r5
    2f6c:	bl	27a0 <__assert_fail@plt+0x24c>
    2f70:	mov	r4, r0
    2f74:	mov	r1, #5
    2f78:	add	r0, r5, #10
    2f7c:	bl	2760 <__assert_fail@plt+0x20c>
    2f80:	add	r2, sl, #8
    2f84:	mov	ip, r8
    2f88:	mov	r3, r8
    2f8c:	asr	r1, r4, r3
    2f90:	tst	r1, #1
    2f94:	ldrhne	r1, [r2]
    2f98:	eorne	ip, ip, r1
    2f9c:	add	r3, r3, #1
    2fa0:	add	r2, r2, #2
    2fa4:	cmp	r3, #10
    2fa8:	bne	2f8c <__assert_fail@plt+0xa38>
    2fac:	eor	ip, r0, ip, lsr #10
    2fb0:	uxtb	ip, ip
    2fb4:	sub	r3, ip, #1
    2fb8:	tst	r3, ip
    2fbc:	beq	2f34 <__assert_fail@plt+0x9e0>
    2fc0:	sub	ip, ip, #7
    2fc4:	cmp	ip, #24
    2fc8:	addls	pc, pc, ip, lsl #2
    2fcc:	b	30c4 <__assert_fail@plt+0xb70>
    2fd0:	b	3044 <__assert_fail@plt+0xaf0>
    2fd4:	b	30c4 <__assert_fail@plt+0xb70>
    2fd8:	b	30c4 <__assert_fail@plt+0xb70>
    2fdc:	b	30c4 <__assert_fail@plt+0xb70>
    2fe0:	b	2f28 <__assert_fail@plt+0x9d4>
    2fe4:	b	30c4 <__assert_fail@plt+0xb70>
    2fe8:	b	3084 <__assert_fail@plt+0xb30>
    2fec:	b	3054 <__assert_fail@plt+0xb00>
    2ff0:	b	30c4 <__assert_fail@plt+0xb70>
    2ff4:	b	30c4 <__assert_fail@plt+0xb70>
    2ff8:	b	30c4 <__assert_fail@plt+0xb70>
    2ffc:	b	30c4 <__assert_fail@plt+0xb70>
    3000:	b	3074 <__assert_fail@plt+0xb20>
    3004:	b	30c4 <__assert_fail@plt+0xb70>
    3008:	b	30b4 <__assert_fail@plt+0xb60>
    300c:	b	3034 <__assert_fail@plt+0xae0>
    3010:	b	30c4 <__assert_fail@plt+0xb70>
    3014:	b	30c4 <__assert_fail@plt+0xb70>
    3018:	b	30c4 <__assert_fail@plt+0xb70>
    301c:	b	3094 <__assert_fail@plt+0xb40>
    3020:	b	30c4 <__assert_fail@plt+0xb70>
    3024:	b	3064 <__assert_fail@plt+0xb10>
    3028:	b	30c4 <__assert_fail@plt+0xb70>
    302c:	b	30c4 <__assert_fail@plt+0xb70>
    3030:	b	30a4 <__assert_fail@plt+0xb50>
    3034:	ldrb	r3, [r6, #2]
    3038:	eor	r3, r3, #1
    303c:	strb	r3, [r6, #2]
    3040:	b	2f34 <__assert_fail@plt+0x9e0>
    3044:	ldrb	r3, [r6, #3]
    3048:	eor	r3, r3, #1
    304c:	strb	r3, [r6, #3]
    3050:	b	2f34 <__assert_fail@plt+0x9e0>
    3054:	ldrb	r3, [r6, #4]
    3058:	eor	r3, r3, #1
    305c:	strb	r3, [r6, #4]
    3060:	b	2f34 <__assert_fail@plt+0x9e0>
    3064:	ldrb	r3, [r6, #5]
    3068:	eor	r3, r3, #1
    306c:	strb	r3, [r6, #5]
    3070:	b	2f34 <__assert_fail@plt+0x9e0>
    3074:	ldrb	r3, [r6, #6]
    3078:	eor	r3, r3, #1
    307c:	strb	r3, [r6, #6]
    3080:	b	2f34 <__assert_fail@plt+0x9e0>
    3084:	ldrb	r3, [r6, #7]
    3088:	eor	r3, r3, #1
    308c:	strb	r3, [r6, #7]
    3090:	b	2f34 <__assert_fail@plt+0x9e0>
    3094:	ldrb	r3, [r6, #8]
    3098:	eor	r3, r3, #1
    309c:	strb	r3, [r6, #8]
    30a0:	b	2f34 <__assert_fail@plt+0x9e0>
    30a4:	ldrb	r3, [r6, #9]
    30a8:	eor	r3, r3, #1
    30ac:	strb	r3, [r6, #9]
    30b0:	b	2f34 <__assert_fail@plt+0x9e0>
    30b4:	ldrb	r3, [r6, #10]
    30b8:	eor	r3, r3, #1
    30bc:	strb	r3, [r6, #10]
    30c0:	b	2f34 <__assert_fail@plt+0x9e0>
    30c4:	ldr	r0, [sp, #4]
    30c8:	bl	21a0 <free@plt>
    30cc:	mov	r3, #0
    30d0:	str	r3, [sp, #4]
    30d4:	ldr	r0, [sp, #4]
    30d8:	add	sp, sp, #12
    30dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    30e0:	strbtvs	r6, [r6], -r7, ror #12
    30e4:	ldrdeq	lr, [r0], -r4

000030e8 <btbb_gen_syncword@@Base>:
    30e8:	push	{r4, r5, lr}
    30ec:	mov	lr, r0
    30f0:	ldr	r2, [pc, #72]	; 3140 <btbb_gen_syncword@@Base+0x58>
    30f4:	add	r2, pc, r2
    30f8:	add	r2, r2, #32
    30fc:	add	r1, pc, #52	; 0x34
    3100:	ldrd	r0, [r1]
    3104:	mov	r3, #0
    3108:	mov	ip, #8388608	; 0x800000
    310c:	b	3120 <btbb_gen_syncword@@Base+0x38>
    3110:	add	r3, r3, #1
    3114:	add	r2, r2, #8
    3118:	cmp	r3, #24
    311c:	beq	3134 <btbb_gen_syncword@@Base+0x4c>
    3120:	ands	r4, lr, ip, asr r3
    3124:	ldrdne	r4, [r2]
    3128:	eorne	r0, r0, r4
    312c:	eorne	r1, r1, r5
    3130:	b	3110 <btbb_gen_syncword@@Base+0x28>
    3134:	pop	{r4, r5, pc}
    3138:			; <UNDEFINED> instruction: 0xc7820e7e
    313c:	andlt	r0, r0, r2
    3140:	strdeq	lr, [r0], -ip

00003144 <btbb_get_release@@Base>:
    3144:	ldr	r0, [pc, #4]	; 3150 <btbb_get_release@@Base+0xc>
    3148:	add	r0, pc, r0
    314c:	bx	lr
    3150:	ldrdeq	pc, [r0], -r8

00003154 <btbb_get_version@@Base>:
    3154:	ldr	r0, [pc, #4]	; 3160 <btbb_get_version@@Base+0xc>
    3158:	add	r0, pc, r0
    315c:	bx	lr
    3160:	ldrdeq	pc, [r0], -r4

00003164 <btbb_init@@Base>:
    3164:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3168:	sub	sp, sp, #8
    316c:	ldr	r3, [pc, #180]	; 3228 <btbb_init@@Base+0xc4>
    3170:	add	r3, pc, r3
    3174:	cmp	r0, #5
    3178:	bhi	319c <btbb_init@@Base+0x38>
    317c:	ldr	r3, [pc, #168]	; 322c <btbb_init@@Base+0xc8>
    3180:	add	r3, pc, r3
    3184:	ldr	r3, [r3]
    3188:	cmp	r3, #0
    318c:	movne	r0, #0
    3190:	beq	31c8 <btbb_init@@Base+0x64>
    3194:	add	sp, sp, #8
    3198:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    319c:	ldr	r2, [pc, #140]	; 3230 <btbb_init@@Base+0xcc>
    31a0:	ldr	r3, [r3, r2]
    31a4:	ldr	r2, [pc, #136]	; 3234 <btbb_init@@Base+0xd0>
    31a8:	add	r2, pc, r2
    31ac:	add	r2, r2, #224	; 0xe0
    31b0:	ldr	r1, [pc, #128]	; 3238 <btbb_init@@Base+0xd4>
    31b4:	add	r1, pc, r1
    31b8:	ldr	r0, [r3]
    31bc:	bl	23d4 <fprintf@plt>
    31c0:	mvn	r0, #0
    31c4:	b	3194 <btbb_init@@Base+0x30>
    31c8:	cmp	r0, #0
    31cc:	ble	3218 <btbb_init@@Base+0xb4>
    31d0:	add	r4, r0, #1
    31d4:	mov	r5, #1
    31d8:	add	r9, pc, #64	; 0x40
    31dc:	ldrd	r8, [r9]
    31e0:	mov	sl, #0
    31e4:	mov	r6, #0
    31e8:	mov	r7, #0
    31ec:	strd	r8, [sp]
    31f0:	mov	r3, r5
    31f4:	mov	r2, sl
    31f8:	mov	r0, r6
    31fc:	mov	r1, r7
    3200:	bl	2994 <__assert_fail@plt+0x440>
    3204:	add	r5, r5, #1
    3208:	cmp	r4, r5
    320c:	bne	31ec <btbb_init@@Base+0x88>
    3210:	mov	r0, #0
    3214:	b	3194 <btbb_init@@Base+0x30>
    3218:	mov	r0, #0
    321c:	b	3194 <btbb_init@@Base+0x30>
    3220:			; <UNDEFINED> instruction: 0xff614e1b
    3224:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    3228:	andeq	r5, r2, r8, lsl #29
    322c:	andeq	r6, r2, r8, lsr #32
    3230:	andeq	r0, r0, r8, lsl #3
    3234:	andeq	lr, r0, r8, asr #24
    3238:	andeq	pc, r0, ip, ror r2	; <UNPREDICTABLE>

0000323c <btbb_packet_new@@Base>:
    323c:	push	{r4, r5, r6, lr}
    3240:	ldr	r5, [pc, #72]	; 3290 <btbb_packet_new@@Base+0x54>
    3244:	add	r5, pc, r5
    3248:	mov	r1, #5952	; 0x1740
    324c:	mov	r0, #1
    3250:	bl	2104 <calloc@plt>
    3254:	subs	r4, r0, #0
    3258:	beq	326c <btbb_packet_new@@Base+0x30>
    325c:	mov	r3, #1
    3260:	str	r3, [r4]
    3264:	mov	r0, r4
    3268:	pop	{r4, r5, r6, pc}
    326c:	ldr	r3, [pc, #32]	; 3294 <btbb_packet_new@@Base+0x58>
    3270:	ldr	r3, [r5, r3]
    3274:	ldr	r3, [r3]
    3278:	mov	r2, #25
    327c:	mov	r1, #1
    3280:	ldr	r0, [pc, #16]	; 3298 <btbb_packet_new@@Base+0x5c>
    3284:	add	r0, pc, r0
    3288:	bl	22b4 <fwrite@plt>
    328c:	b	3264 <btbb_packet_new@@Base+0x28>
    3290:			; <UNDEFINED> instruction: 0x00025db4
    3294:	andeq	r0, r0, r8, lsl #3
    3298:	andeq	pc, r0, ip, asr #3

0000329c <btbb_packet_ref@@Base>:
    329c:	ldr	r3, [r0]
    32a0:	add	r3, r3, #1
    32a4:	str	r3, [r0]
    32a8:	bx	lr

000032ac <btbb_packet_unref@@Base>:
    32ac:	ldr	r3, [r0]
    32b0:	subs	r3, r3, #1
    32b4:	beq	32c0 <btbb_packet_unref@@Base+0x14>
    32b8:	str	r3, [r0]
    32bc:	bx	lr
    32c0:	push	{r4, lr}
    32c4:	bl	21a0 <free@plt>
    32c8:	pop	{r4, pc}

000032cc <btbb_packet_get_lap@@Base>:
    32cc:	ldr	r0, [r0, #12]
    32d0:	bx	lr

000032d4 <btbb_packet_get_uap@@Base>:
    32d4:	ldrb	r0, [r0, #9]
    32d8:	bx	lr

000032dc <btbb_packet_get_nap@@Base>:
    32dc:	ldrh	r0, [r0, #10]
    32e0:	bx	lr

000032e4 <btbb_packet_get_clkn@@Base>:
    32e4:	ldr	r0, [r0, #2816]	; 0xb00
    32e8:	bx	lr

000032ec <btbb_packet_get_channel@@Base>:
    32ec:	ldrb	r0, [r0, #8]
    32f0:	bx	lr

000032f4 <btbb_packet_set_modulation@@Base>:
    32f4:	strb	r1, [r0, #16]
    32f8:	bx	lr

000032fc <btbb_packet_get_modulation@@Base>:
    32fc:	ldrb	r0, [r0, #16]
    3300:	bx	lr

00003304 <btbb_packet_set_transport@@Base>:
    3304:	strb	r1, [r0, #17]
    3308:	bx	lr

0000330c <btbb_packet_get_transport@@Base>:
    330c:	ldrb	r0, [r0, #17]
    3310:	bx	lr

00003314 <btbb_packet_get_ac_errors@@Base>:
    3314:	ldrb	r0, [r0, #2820]	; 0xb04
    3318:	bx	lr

0000331c <promiscuous_packet_search@@Base>:
    331c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3320:	sub	sp, sp, #52	; 0x34
    3324:	mov	r6, r0
    3328:	mov	r8, r1
    332c:	str	r1, [sp, #8]
    3330:	str	r2, [sp, #36]	; 0x24
    3334:	str	r3, [sp, #24]
    3338:	mov	r1, #6
    333c:	add	r0, r0, #57	; 0x39
    3340:	bl	2760 <__assert_fail@plt+0x20c>
    3344:	cmp	r8, #0
    3348:	ble	341c <promiscuous_packet_search@@Base+0x100>
    334c:	lsl	r0, r0, #1
    3350:	uxtb	r7, r0
    3354:	ldr	r3, [pc, #748]	; 3648 <promiscuous_packet_search@@Base+0x32c>
    3358:	add	r3, pc, r3
    335c:	ldr	r3, [r3]
    3360:	str	r3, [sp, #32]
    3364:	add	lr, r6, #62	; 0x3e
    3368:	mov	r8, #0
    336c:	ldr	fp, [pc, #728]	; 364c <promiscuous_packet_search@@Base+0x330>
    3370:	add	fp, pc, fp
    3374:	ldr	r3, [pc, #724]	; 3650 <promiscuous_packet_search@@Base+0x334>
    3378:	add	r3, pc, r3
    337c:	add	r3, r3, #368	; 0x170
    3380:	str	r3, [sp, #28]
    3384:	add	r3, sp, #40	; 0x28
    3388:	str	r3, [sp, #12]
    338c:	strd	r4, [sp]
    3390:	b	3470 <promiscuous_packet_search@@Base+0x154>
    3394:	mov	r2, #8
    3398:	ldr	r1, [sp, #12]
    339c:	ldr	r0, [r6, #36]	; 0x24
    33a0:	bl	220c <memcmp@plt>
    33a4:	cmp	r0, #0
    33a8:	beq	3424 <promiscuous_packet_search@@Base+0x108>
    33ac:	ldr	r6, [r6, #32]
    33b0:	cmp	r6, #0
    33b4:	beq	33e0 <promiscuous_packet_search@@Base+0xc4>
    33b8:	ldr	r3, [r9, #20]
    33bc:	sub	r6, r6, r3
    33c0:	cmp	r6, #0
    33c4:	beq	33d8 <promiscuous_packet_search@@Base+0xbc>
    33c8:	ldr	r3, [r6, #40]	; 0x28
    33cc:	cmp	r3, #8
    33d0:	bne	33ac <promiscuous_packet_search@@Base+0x90>
    33d4:	b	3394 <promiscuous_packet_search@@Base+0x78>
    33d8:	strd	r4, [sp]
    33dc:	b	33e4 <promiscuous_packet_search@@Base+0xc8>
    33e0:	strd	r4, [sp]
    33e4:	ldr	r3, [sp, #88]	; 0x58
    33e8:	mvn	r2, #0
    33ec:	strb	r2, [r3]
    33f0:	b	3448 <promiscuous_packet_search@@Base+0x12c>
    33f4:	ldr	r3, [sp, #20]
    33f8:	lsr	r3, r3, #2
    33fc:	bic	r3, r3, #-16777216	; 0xff000000
    3400:	ldr	r2, [sp, #36]	; 0x24
    3404:	str	r3, [r2]
    3408:	b	3410 <promiscuous_packet_search@@Base+0xf4>
    340c:	mvn	r8, #0
    3410:	mov	r0, r8
    3414:	add	sp, sp, #52	; 0x34
    3418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    341c:	mvn	r8, #0
    3420:	b	3410 <promiscuous_packet_search@@Base+0xf4>
    3424:	strd	r4, [sp]
    3428:	ldrd	r0, [r6, #8]
    342c:	ldrd	r2, [sp, #16]
    3430:	eor	r2, r2, r0
    3434:	eor	r3, r3, r1
    3438:	strd	r2, [sp, #16]
    343c:	bl	fc68 <lell_pcapng_close@@Base+0x27c>
    3440:	ldr	r3, [sp, #88]	; 0x58
    3444:	strb	r0, [r3]
    3448:	ldr	r3, [sp, #88]	; 0x58
    344c:	ldrb	r3, [r3]
    3450:	ldr	r2, [sp, #24]
    3454:	cmp	r3, r2
    3458:	ble	33f4 <promiscuous_packet_search@@Base+0xd8>
    345c:	add	r8, r8, #1
    3460:	mov	lr, sl
    3464:	ldr	r3, [sp, #8]
    3468:	cmp	r3, r8
    346c:	beq	340c <promiscuous_packet_search@@Base+0xf0>
    3470:	add	sl, lr, #1
    3474:	ldrb	r3, [lr, #1]
    3478:	lsr	r7, r7, #1
    347c:	orr	r7, r7, r3, lsl #6
    3480:	uxtb	r7, r7
    3484:	add	r3, fp, r7
    3488:	ldrb	r3, [r3, #236]	; 0xec
    348c:	cmp	r3, #1
    3490:	bhi	345c <promiscuous_packet_search@@Base+0x140>
    3494:	sub	lr, lr, #63	; 0x3f
    3498:	mov	r0, #0
    349c:	mov	r1, #0
    34a0:	mov	ip, #0
    34a4:	ldrb	r2, [lr, #1]!
    34a8:	sub	r6, ip, #32
    34ac:	rsb	r3, ip, #32
    34b0:	mov	r5, #0
    34b4:	orr	r5, r5, r2, lsl r6
    34b8:	orr	r5, r5, r2, lsr r3
    34bc:	lsl	r4, r2, ip
    34c0:	orr	r0, r0, r4
    34c4:	orr	r1, r1, r5
    34c8:	add	ip, ip, #1
    34cc:	cmp	ip, #64	; 0x40
    34d0:	bne	34a4 <promiscuous_packet_search@@Base+0x188>
    34d4:	strd	r4, [sp]
    34d8:	lsr	r3, r1, #25
    34dc:	lsl	r3, r3, #3
    34e0:	bic	r1, r1, #-33554432	; 0xfe000000
    34e4:	ldr	r2, [sp, #28]
    34e8:	add	r2, r2, r3
    34ec:	ldrd	r2, [r2]
    34f0:	orr	r4, r0, r2
    34f4:	orr	r5, r1, r3
    34f8:	strd	r4, [sp, #16]
    34fc:	add	r1, pc, #316	; 0x13c
    3500:	ldrd	r0, [r1]
    3504:	eor	r0, r0, r4
    3508:	eor	r1, r1, r5
    350c:	bl	26d8 <__assert_fail@plt+0x184>
    3510:	ldr	r3, [sp, #88]	; 0x58
    3514:	mov	r2, #0
    3518:	strb	r2, [r3]
    351c:	orrs	r3, r0, r1
    3520:	beq	3448 <promiscuous_packet_search@@Base+0x12c>
    3524:	strd	r0, [sp, #40]	; 0x28
    3528:	ldr	ip, [sp, #32]
    352c:	cmp	ip, #0
    3530:	beq	33e4 <promiscuous_packet_search@@Base+0xc8>
    3534:	ldrb	r2, [sp, #44]	; 0x2c
    3538:	add	r2, r2, #-1644167168	; 0x9e000000
    353c:	add	r2, r2, #3620864	; 0x374000
    3540:	add	r2, r2, #14720	; 0x3980
    3544:	add	r2, r2, #57	; 0x39
    3548:	ldrb	r3, [sp, #47]	; 0x2f
    354c:	add	r2, r2, r3, lsl #24
    3550:	ldrb	r3, [sp, #46]	; 0x2e
    3554:	add	r2, r2, r3, lsl #16
    3558:	ldrb	r3, [sp, #45]	; 0x2d
    355c:	add	r2, r2, r3, lsl #8
    3560:	ldrb	r3, [sp, #40]	; 0x28
    3564:	add	r3, r3, #-1627389952	; 0x9f000000
    3568:	add	r3, r3, #4784128	; 0x490000
    356c:	add	r3, r3, #47616	; 0xba00
    3570:	add	r3, r3, #194	; 0xc2
    3574:	ldrb	r1, [sp, #43]	; 0x2b
    3578:	add	r3, r3, r1, lsl #24
    357c:	ldrb	r1, [sp, #42]	; 0x2a
    3580:	add	r3, r3, r1, lsl #16
    3584:	ldrb	r1, [sp, #41]	; 0x29
    3588:	add	r3, r3, r1, lsl #8
    358c:	sub	r3, r3, r2
    3590:	eor	r3, r3, #520192	; 0x7f000
    3594:	eor	r3, r3, #1888	; 0x760
    3598:	eor	r3, r3, #13
    359c:	add	r2, r2, #17825792	; 0x1100000
    35a0:	add	r2, r2, #147456	; 0x24000
    35a4:	add	r2, r2, #264	; 0x108
    35a8:	add	r2, r2, #1
    35ac:	sub	r2, r2, r3
    35b0:	eor	r2, r2, r3, lsl #8
    35b4:	ldr	r0, [pc, #152]	; 3654 <promiscuous_packet_search@@Base+0x338>
    35b8:	sub	r0, r0, r3
    35bc:	sub	r0, r0, r2
    35c0:	eor	r0, r0, r2, lsr #13
    35c4:	sub	r3, r3, r2
    35c8:	sub	r3, r3, r0
    35cc:	eor	r3, r3, r0, lsr #12
    35d0:	sub	r1, r2, r0
    35d4:	sub	r1, r1, r3
    35d8:	eor	r1, r1, r3, lsl #16
    35dc:	sub	r0, r0, r3
    35e0:	sub	r0, r0, r1
    35e4:	eor	r0, r0, r1, lsr #5
    35e8:	sub	r2, r3, r1
    35ec:	sub	r2, r2, r0
    35f0:	eor	r2, r2, r0, lsr #3
    35f4:	sub	r3, r1, r0
    35f8:	sub	r3, r3, r2
    35fc:	eor	r1, r3, r2, lsl #10
    3600:	sub	r3, r0, r2
    3604:	sub	r3, r3, r1
    3608:	ldr	r9, [ip, #16]
    360c:	eor	r3, r3, r1, lsr #15
    3610:	ldr	r2, [r9, #4]
    3614:	sub	r2, r2, #1
    3618:	and	r3, r3, r2
    361c:	ldr	r2, [r9]
    3620:	add	r3, r3, r3, lsl #1
    3624:	ldr	r6, [r2, r3, lsl #2]
    3628:	cmp	r6, #0
    362c:	beq	33e4 <promiscuous_packet_search@@Base+0xc8>
    3630:	ldr	r3, [r9, #20]
    3634:	sub	r6, r6, r3
    3638:	ldrd	r4, [sp]
    363c:	b	33c0 <promiscuous_packet_search@@Base+0xa4>
    3640:	bllt	ff318a38 <perm_table@@Base+0xff2ef874>
    3644:	orrhi	r8, r4, #9600	; 0x2580
    3648:	andeq	r5, r2, r0, asr lr
    364c:	andeq	lr, r0, r0, lsl #21
    3650:	andeq	lr, r0, r8, ror sl
    3654:	mcr2	14, 7, fp, cr13, cr7, {7}

00003658 <find_known_lap@@Base>:
    3658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    365c:	sub	sp, sp, #12
    3660:	mov	r8, r0
    3664:	mov	r7, r1
    3668:	mov	r9, r3
    366c:	ldr	sl, [sp, #48]	; 0x30
    3670:	mov	r0, r2
    3674:	bl	22c0 <btbb_gen_syncword@plt>
    3678:	strd	r0, [sp]
    367c:	cmp	r7, #0
    3680:	ble	3718 <find_known_lap@@Base+0xc0>
    3684:	mov	r6, #0
    3688:	b	36c0 <find_known_lap@@Base+0x68>
    368c:	ldrd	r2, [sp]
    3690:	eor	r2, r2, r0
    3694:	eor	r3, r3, r1
    3698:	mov	r0, r2
    369c:	mov	r1, r3
    36a0:	bl	fc68 <lell_pcapng_close@@Base+0x27c>
    36a4:	strb	r0, [sl]
    36a8:	uxtb	r0, r0
    36ac:	cmp	r0, r9
    36b0:	ble	370c <find_known_lap@@Base+0xb4>
    36b4:	add	r6, r6, #1
    36b8:	cmp	r7, r6
    36bc:	beq	3708 <find_known_lap@@Base+0xb0>
    36c0:	sub	lr, r6, #1
    36c4:	add	lr, r8, lr
    36c8:	mov	r0, #0
    36cc:	mov	r1, #0
    36d0:	mov	ip, #0
    36d4:	ldrb	r2, [lr, #1]!
    36d8:	sub	fp, ip, #32
    36dc:	rsb	r3, ip, #32
    36e0:	mov	r5, #0
    36e4:	orr	r5, r5, r2, lsl fp
    36e8:	orr	r5, r5, r2, lsr r3
    36ec:	lsl	r4, r2, ip
    36f0:	orr	r0, r0, r4
    36f4:	orr	r1, r1, r5
    36f8:	add	ip, ip, #1
    36fc:	cmp	ip, #64	; 0x40
    3700:	bne	36d4 <find_known_lap@@Base+0x7c>
    3704:	b	368c <find_known_lap@@Base+0x34>
    3708:	mvn	r6, #0
    370c:	mov	r0, r6
    3710:	add	sp, sp, #12
    3714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3718:	mvn	r6, #0
    371c:	b	370c <find_known_lap@@Base+0xb4>

00003720 <btbb_packet_set_data@@Base>:
    3720:	push	{r4, lr}
    3724:	ldr	ip, [pc, #76]	; 3778 <btbb_packet_set_data@@Base+0x58>
    3728:	cmp	r2, ip
    372c:	movge	r2, ip
    3730:	cmp	r2, #0
    3734:	ble	375c <btbb_packet_set_data@@Base+0x3c>
    3738:	sub	ip, r1, #1
    373c:	add	lr, r0, #2816	; 0xb00
    3740:	add	lr, lr, #7
    3744:	sub	r4, r2, #1
    3748:	add	r4, r1, r4
    374c:	ldrb	r1, [ip, #1]!
    3750:	strb	r1, [lr, #1]!
    3754:	cmp	ip, r4
    3758:	bne	374c <btbb_packet_set_data@@Base+0x2c>
    375c:	add	r1, r0, #2816	; 0xb00
    3760:	strh	r2, [r1, #6]
    3764:	strb	r3, [r0, #8]
    3768:	ldr	r3, [sp, #8]
    376c:	lsr	r3, r3, #1
    3770:	str	r3, [r0, #2816]	; 0xb00
    3774:	pop	{r4, pc}
    3778:	andeq	r0, r0, r5, lsr ip

0000377c <btbb_packet_set_flag@@Base>:
    377c:	mov	r3, #1
    3780:	lsl	r1, r3, r1
    3784:	ldr	r3, [r0, #4]
    3788:	cmp	r2, #0
    378c:	biceq	r1, r3, r1
    3790:	orrne	r1, r1, r3
    3794:	str	r1, [r0, #4]
    3798:	bx	lr

0000379c <btbb_packet_set_uap@@Base>:
    379c:	push	{r4, lr}
    37a0:	strb	r1, [r0, #9]
    37a4:	mov	r2, #1
    37a8:	mov	r1, #2
    37ac:	bl	2188 <btbb_packet_set_flag@plt>
    37b0:	pop	{r4, pc}

000037b4 <btbb_find_ac@@Base>:
    37b4:	push	{r4, r5, lr}
    37b8:	sub	sp, sp, #28
    37bc:	str	r2, [sp, #12]
    37c0:	ldr	r5, [sp, #40]	; 0x28
    37c4:	cmn	r2, #1
    37c8:	beq	3820 <btbb_find_ac@@Base+0x6c>
    37cc:	add	ip, sp, #23
    37d0:	str	ip, [sp]
    37d4:	bl	2410 <find_known_lap@plt>
    37d8:	mov	r4, r0
    37dc:	cmp	r4, #0
    37e0:	blt	3814 <btbb_find_ac@@Base+0x60>
    37e4:	ldr	r3, [r5]
    37e8:	cmp	r3, #0
    37ec:	beq	3838 <btbb_find_ac@@Base+0x84>
    37f0:	ldr	r0, [r5]
    37f4:	ldrb	r3, [sp, #23]
    37f8:	ldr	r2, [sp, #12]
    37fc:	str	r2, [r0, #12]
    3800:	strb	r3, [r0, #2820]	; 0xb04
    3804:	mov	r1, #0
    3808:	str	r1, [r0, #4]
    380c:	mov	r2, #1
    3810:	bl	2188 <btbb_packet_set_flag@plt>
    3814:	mov	r0, r4
    3818:	add	sp, sp, #28
    381c:	pop	{r4, r5, pc}
    3820:	add	r2, sp, #23
    3824:	str	r2, [sp]
    3828:	add	r2, sp, #12
    382c:	bl	24f4 <promiscuous_packet_search@plt>
    3830:	mov	r4, r0
    3834:	b	37dc <btbb_find_ac@@Base+0x28>
    3838:	bl	2338 <btbb_packet_new@plt>
    383c:	str	r0, [r5]
    3840:	b	37f0 <btbb_find_ac@@Base+0x3c>

00003844 <btbb_packet_get_flag@@Base>:
    3844:	ldr	r3, [r0, #4]
    3848:	mov	r2, #1
    384c:	ands	r3, r3, r2, lsl r1
    3850:	movne	r0, r2
    3854:	moveq	r0, #0
    3858:	bx	lr
    385c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3860:	ldr	r8, [sp, #44]	; 0x2c
    3864:	and	ip, r2, #63	; 0x3f
    3868:	ldr	r2, [pc, #164]	; 3914 <btbb_packet_get_flag@@Base+0xd0>
    386c:	add	r2, pc, r2
    3870:	add	r2, r2, ip
    3874:	ldrb	r2, [r2, #1392]	; 0x570
    3878:	ldr	ip, [sp, #40]	; 0x28
    387c:	add	r2, r2, ip
    3880:	ldr	r4, [pc, #144]	; 3918 <btbb_packet_get_flag@@Base+0xd4>
    3884:	smull	ip, r4, r4, r2
    3888:	add	ip, r4, r2
    388c:	asr	r4, r2, #31
    3890:	rsb	r4, r4, ip, asr #6
    3894:	rsb	r4, r4, r4, lsl #7
    3898:	sub	r4, r2, r4
    389c:	subs	r7, r3, #0
    38a0:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    38a4:	sub	r6, r1, #1
    38a8:	mov	r5, r0
    38ac:	add	r7, r0, r7
    38b0:	mov	sl, #0
    38b4:	ldr	fp, [pc, #96]	; 391c <btbb_packet_get_flag@@Base+0xd8>
    38b8:	add	fp, pc, fp
    38bc:	ldr	r9, [pc, #84]	; 3918 <btbb_packet_get_flag@@Base+0xd4>
    38c0:	mov	r1, sl
    38c4:	mov	r0, r8
    38c8:	bl	21dc <btbb_packet_get_flag@plt>
    38cc:	cmp	r0, #0
    38d0:	addne	r2, fp, r4
    38d4:	ldrbne	r3, [r5]
    38d8:	ldrbne	r2, [r2, #1456]	; 0x5b0
    38dc:	eorne	r3, r3, r2
    38e0:	ldrbeq	r3, [r5]
    38e4:	strb	r3, [r6, #1]!
    38e8:	add	r3, r4, #1
    38ec:	smull	r2, r4, r9, r3
    38f0:	add	r2, r4, r3
    38f4:	asr	r4, r3, #31
    38f8:	rsb	r4, r4, r2, asr #6
    38fc:	rsb	r4, r4, r4, lsl #7
    3900:	sub	r4, r3, r4
    3904:	add	r5, r5, #1
    3908:	cmp	r5, r7
    390c:	bne	38c0 <btbb_packet_get_flag@@Base+0x7c>
    3910:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3914:	andeq	lr, r0, r4, lsl #11
    3918:	tsthi	r2, r9, lsl #8
    391c:	andeq	lr, r0, r8, lsr r5
    3920:	push	{r4, r5, r6, r7, lr}
    3924:	sub	sp, sp, #12
    3928:	mov	r6, r1
    392c:	mov	r5, r2
    3930:	ldr	r4, [sp, #36]	; 0x24
    3934:	cmp	r2, #2
    3938:	beq	39a0 <btbb_packet_get_flag@@Base+0x15c>
    393c:	cmp	r3, #7
    3940:	movle	r0, #0
    3944:	ble	3aec <btbb_packet_get_flag@@Base+0x2a8>
    3948:	ldr	r2, [sp, #32]
    394c:	cmp	r2, #0
    3950:	beq	3a38 <btbb_packet_get_flag@@Base+0x1f4>
    3954:	cmp	r3, #14
    3958:	movle	r0, #0
    395c:	ble	3aec <btbb_packet_get_flag@@Base+0x2a8>
    3960:	mov	r1, #8
    3964:	bl	2ec0 <__assert_fail@plt+0x96c>
    3968:	subs	r7, r0, #0
    396c:	moveq	r0, #0
    3970:	beq	3aec <btbb_packet_get_flag@@Base+0x2a8>
    3974:	str	r4, [sp, #4]
    3978:	mov	r3, #18
    397c:	str	r3, [sp]
    3980:	mov	r3, #8
    3984:	mov	r2, r6
    3988:	add	r1, r4, #44	; 0x2c
    398c:	mov	r0, r7
    3990:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3994:	mov	r0, r7
    3998:	bl	21a0 <free@plt>
    399c:	b	3a54 <btbb_packet_get_flag@@Base+0x210>
    39a0:	cmp	r3, #15
    39a4:	movle	r0, #0
    39a8:	ble	3aec <btbb_packet_get_flag@@Base+0x2a8>
    39ac:	ldr	r2, [sp, #32]
    39b0:	cmp	r2, #0
    39b4:	beq	3a04 <btbb_packet_get_flag@@Base+0x1c0>
    39b8:	cmp	r3, #29
    39bc:	movle	r0, #0
    39c0:	ble	3aec <btbb_packet_get_flag@@Base+0x2a8>
    39c4:	mov	r1, #16
    39c8:	bl	2ec0 <__assert_fail@plt+0x96c>
    39cc:	subs	r7, r0, #0
    39d0:	moveq	r0, #0
    39d4:	beq	3aec <btbb_packet_get_flag@@Base+0x2a8>
    39d8:	str	r4, [sp, #4]
    39dc:	mov	r3, #18
    39e0:	str	r3, [sp]
    39e4:	mov	r3, #16
    39e8:	mov	r2, r6
    39ec:	add	r1, r4, #44	; 0x2c
    39f0:	mov	r0, r7
    39f4:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    39f8:	mov	r0, r7
    39fc:	bl	21a0 <free@plt>
    3a00:	b	3a20 <btbb_packet_get_flag@@Base+0x1dc>
    3a04:	str	r4, [sp, #4]
    3a08:	mov	r3, #18
    3a0c:	str	r3, [sp]
    3a10:	mov	r3, #16
    3a14:	mov	r2, r1
    3a18:	add	r1, r4, #44	; 0x2c
    3a1c:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3a20:	mov	r1, #10
    3a24:	add	r0, r4, #47	; 0x2f
    3a28:	bl	27a0 <__assert_fail@plt+0x24c>
    3a2c:	add	r0, r0, #4
    3a30:	str	r0, [r4, #64]	; 0x40
    3a34:	b	3a68 <btbb_packet_get_flag@@Base+0x224>
    3a38:	str	r4, [sp, #4]
    3a3c:	mov	r3, #18
    3a40:	str	r3, [sp]
    3a44:	mov	r3, #8
    3a48:	mov	r2, r1
    3a4c:	add	r1, r4, #44	; 0x2c
    3a50:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3a54:	mov	r1, #5
    3a58:	add	r0, r4, #47	; 0x2f
    3a5c:	bl	2760 <__assert_fail@plt+0x20c>
    3a60:	add	r0, r0, #3
    3a64:	str	r0, [r4, #64]	; 0x40
    3a68:	ldrb	r3, [r4, #18]
    3a6c:	sub	r3, r3, #3
    3a70:	cmp	r3, #12
    3a74:	addls	pc, pc, r3, lsl #2
    3a78:	b	3b24 <btbb_packet_get_flag@@Base+0x2e0>
    3a7c:	b	3ab0 <btbb_packet_get_flag@@Base+0x26c>
    3a80:	b	3af4 <btbb_packet_get_flag@@Base+0x2b0>
    3a84:	b	3b24 <btbb_packet_get_flag@@Base+0x2e0>
    3a88:	b	3b24 <btbb_packet_get_flag@@Base+0x2e0>
    3a8c:	b	3b24 <btbb_packet_get_flag@@Base+0x2e0>
    3a90:	b	3afc <btbb_packet_get_flag@@Base+0x2b8>
    3a94:	b	3b24 <btbb_packet_get_flag@@Base+0x2e0>
    3a98:	b	3b04 <btbb_packet_get_flag@@Base+0x2c0>
    3a9c:	b	3b0c <btbb_packet_get_flag@@Base+0x2c8>
    3aa0:	b	3b24 <btbb_packet_get_flag@@Base+0x2e0>
    3aa4:	b	3b24 <btbb_packet_get_flag@@Base+0x2e0>
    3aa8:	b	3b14 <btbb_packet_get_flag@@Base+0x2d0>
    3aac:	b	3b1c <btbb_packet_get_flag@@Base+0x2d8>
    3ab0:	mov	r2, #20
    3ab4:	ldr	r3, [r4, #64]	; 0x40
    3ab8:	cmp	r3, r2
    3abc:	movge	r3, r2
    3ac0:	str	r3, [r4, #64]	; 0x40
    3ac4:	mov	r1, #2
    3ac8:	add	r0, r4, #44	; 0x2c
    3acc:	bl	2760 <__assert_fail@plt+0x20c>
    3ad0:	strb	r0, [r4, #60]	; 0x3c
    3ad4:	mov	r1, #1
    3ad8:	add	r0, r4, #46	; 0x2e
    3adc:	bl	2760 <__assert_fail@plt+0x20c>
    3ae0:	strb	r0, [r4, #61]	; 0x3d
    3ae4:	str	r5, [r4, #40]	; 0x28
    3ae8:	mov	r0, #1
    3aec:	add	sp, sp, #12
    3af0:	pop	{r4, r5, r6, r7, pc}
    3af4:	mov	r2, #30
    3af8:	b	3ab4 <btbb_packet_get_flag@@Base+0x270>
    3afc:	mov	r2, #12
    3b00:	b	3ab4 <btbb_packet_get_flag@@Base+0x270>
    3b04:	mov	r2, #125	; 0x7d
    3b08:	b	3ab4 <btbb_packet_get_flag@@Base+0x270>
    3b0c:	mov	r2, #187	; 0xbb
    3b10:	b	3ab4 <btbb_packet_get_flag@@Base+0x270>
    3b14:	mov	r2, #228	; 0xe4
    3b18:	b	3ab4 <btbb_packet_get_flag@@Base+0x270>
    3b1c:	ldr	r2, [pc, #8]	; 3b2c <btbb_packet_get_flag@@Base+0x2e8>
    3b20:	b	3ab4 <btbb_packet_get_flag@@Base+0x270>
    3b24:	mov	r2, #0
    3b28:	b	3ab4 <btbb_packet_get_flag@@Base+0x270>
    3b2c:	andeq	r0, r0, r7, asr r1

00003b30 <btbb_get_symbols@@Base>:
    3b30:	add	r0, r0, #2816	; 0xb00
    3b34:	add	r0, r0, #8
    3b38:	bx	lr

00003b3c <btbb_packet_get_payload_length@@Base>:
    3b3c:	ldr	r0, [r0, #64]	; 0x40
    3b40:	bx	lr

00003b44 <btbb_get_payload@@Base>:
    3b44:	add	r0, r0, #68	; 0x44
    3b48:	bx	lr

00003b4c <btbb_get_payload_packed@@Base>:
    3b4c:	ldr	r3, [r0, #64]	; 0x40
    3b50:	cmp	r3, #0
    3b54:	ble	3b9c <btbb_get_payload_packed@@Base+0x50>
    3b58:	push	{r4, r5, r6, r7, r8, lr}
    3b5c:	mov	r7, r0
    3b60:	add	r5, r0, #68	; 0x44
    3b64:	sub	r6, r1, #1
    3b68:	mov	r4, #0
    3b6c:	mov	r8, #8
    3b70:	mov	r1, r8
    3b74:	mov	r0, r5
    3b78:	bl	2760 <__assert_fail@plt+0x20c>
    3b7c:	strb	r0, [r6, #1]!
    3b80:	add	r4, r4, #1
    3b84:	ldr	r3, [r7, #64]	; 0x40
    3b88:	add	r5, r5, #8
    3b8c:	cmp	r3, r4
    3b90:	bgt	3b70 <btbb_get_payload_packed@@Base+0x24>
    3b94:	mov	r0, r3
    3b98:	pop	{r4, r5, r6, r7, r8, pc}
    3b9c:	mov	r0, r3
    3ba0:	bx	lr

00003ba4 <btbb_packet_get_type@@Base>:
    3ba4:	ldrb	r0, [r0, #18]
    3ba8:	bx	lr

00003bac <btbb_packet_get_lt_addr@@Base>:
    3bac:	ldrb	r0, [r0, #19]
    3bb0:	bx	lr

00003bb4 <btbb_packet_get_header_flags@@Base>:
    3bb4:	ldrb	r0, [r0, #20]
    3bb8:	bx	lr

00003bbc <btbb_packet_get_hec@@Base>:
    3bbc:	ldrb	r0, [r0, #21]
    3bc0:	bx	lr

00003bc4 <btbb_packet_get_header_packed@@Base>:
    3bc4:	add	r2, r0, #21
    3bc8:	mov	r0, #0
    3bcc:	mov	r3, r0
    3bd0:	ldrb	r1, [r2, #1]!
    3bd4:	orr	r0, r0, r1, lsl r3
    3bd8:	add	r3, r3, #1
    3bdc:	cmp	r3, #18
    3be0:	bne	3bd0 <btbb_packet_get_header_packed@@Base+0xc>
    3be4:	bx	lr

00003be8 <fhs@@Base>:
    3be8:	push	{r4, r5, r6, r7, r8, r9, lr}
    3bec:	sub	sp, sp, #12
    3bf0:	add	r3, r1, #2816	; 0xb00
    3bf4:	ldrh	r3, [r3, #6]
    3bf8:	sub	r3, r3, #122	; 0x7a
    3bfc:	mov	r2, #20
    3c00:	str	r2, [r1, #64]	; 0x40
    3c04:	cmp	r3, #239	; 0xef
    3c08:	movle	r6, #1
    3c0c:	bgt	3c1c <fhs@@Base+0x34>
    3c10:	mov	r0, r6
    3c14:	add	sp, sp, #12
    3c18:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3c1c:	mov	r4, r1
    3c20:	mov	r5, r0
    3c24:	add	r0, r1, #2944	; 0xb80
    3c28:	mov	r1, #160	; 0xa0
    3c2c:	add	r0, r0, #2
    3c30:	bl	2ec0 <__assert_fail@plt+0x96c>
    3c34:	subs	r7, r0, #0
    3c38:	moveq	r6, #0
    3c3c:	beq	3c10 <fhs@@Base+0x28>
    3c40:	add	r8, r4, #68	; 0x44
    3c44:	ldr	r3, [r4, #64]	; 0x40
    3c48:	str	r4, [sp, #4]
    3c4c:	mov	r2, #18
    3c50:	str	r2, [sp]
    3c54:	lsl	r3, r3, #3
    3c58:	mov	r2, r5
    3c5c:	mov	r1, r8
    3c60:	mov	r0, r7
    3c64:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3c68:	mov	r0, r4
    3c6c:	bl	2900 <__assert_fail@plt+0x3ac>
    3c70:	cmp	r0, #0
    3c74:	moveq	r5, #32
    3c78:	moveq	r9, #18
    3c7c:	bne	3cc8 <fhs@@Base+0xe0>
    3c80:	ldr	r3, [r4, #64]	; 0x40
    3c84:	str	r4, [sp, #4]
    3c88:	str	r9, [sp]
    3c8c:	lsl	r3, r3, #3
    3c90:	mov	r2, r5
    3c94:	mov	r1, r8
    3c98:	mov	r0, r7
    3c9c:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3ca0:	mov	r0, r4
    3ca4:	bl	2900 <__assert_fail@plt+0x3ac>
    3ca8:	subs	r6, r0, #0
    3cac:	bne	3cd8 <fhs@@Base+0xf0>
    3cb0:	add	r5, r5, #1
    3cb4:	cmp	r5, #64	; 0x40
    3cb8:	bne	3c80 <fhs@@Base+0x98>
    3cbc:	mov	r0, r7
    3cc0:	bl	21a0 <free@plt>
    3cc4:	b	3c10 <fhs@@Base+0x28>
    3cc8:	mov	r0, r7
    3ccc:	bl	21a0 <free@plt>
    3cd0:	mov	r6, #1000	; 0x3e8
    3cd4:	b	3c10 <fhs@@Base+0x28>
    3cd8:	mov	r0, r7
    3cdc:	bl	21a0 <free@plt>
    3ce0:	mov	r6, #1000	; 0x3e8
    3ce4:	b	3c10 <fhs@@Base+0x28>

00003ce8 <DM@@Base>:
    3ce8:	push	{r4, r5, r6, r7, r8, lr}
    3cec:	sub	sp, sp, #8
    3cf0:	add	r5, r1, #2944	; 0xb80
    3cf4:	add	r5, r5, #2
    3cf8:	add	r3, r1, #2816	; 0xb00
    3cfc:	ldrh	ip, [r3, #6]
    3d00:	sub	r6, ip, #122	; 0x7a
    3d04:	ldrb	r3, [r1, #18]
    3d08:	sub	r3, r3, #3
    3d0c:	cmp	r3, #11
    3d10:	addls	pc, pc, r3, lsl #2
    3d14:	b	3e2c <DM@@Base+0x144>
    3d18:	b	3d78 <DM@@Base+0x90>
    3d1c:	b	3e2c <DM@@Base+0x144>
    3d20:	b	3e2c <DM@@Base+0x144>
    3d24:	b	3e2c <DM@@Base+0x144>
    3d28:	b	3e2c <DM@@Base+0x144>
    3d2c:	b	3d54 <DM@@Base+0x6c>
    3d30:	b	3e2c <DM@@Base+0x144>
    3d34:	b	3d48 <DM@@Base+0x60>
    3d38:	b	3e2c <DM@@Base+0x144>
    3d3c:	b	3e2c <DM@@Base+0x144>
    3d40:	b	3e2c <DM@@Base+0x144>
    3d44:	b	3d6c <DM@@Base+0x84>
    3d48:	mov	r7, #125	; 0x7d
    3d4c:	mov	r2, #2
    3d50:	b	3d80 <DM@@Base+0x98>
    3d54:	add	r5, r1, #3024	; 0xbd0
    3d58:	add	r5, r5, #2
    3d5c:	sub	r6, ip, #202	; 0xca
    3d60:	mov	r7, #12
    3d64:	mov	r2, #1
    3d68:	b	3d80 <DM@@Base+0x98>
    3d6c:	mov	r7, #228	; 0xe4
    3d70:	mov	r2, #2
    3d74:	b	3d80 <DM@@Base+0x98>
    3d78:	mov	r7, #20
    3d7c:	mov	r2, #1
    3d80:	mov	r4, r1
    3d84:	mov	r8, r0
    3d88:	str	r1, [sp, #4]
    3d8c:	mov	r3, #1
    3d90:	str	r3, [sp]
    3d94:	mov	r3, r6
    3d98:	mov	r1, r0
    3d9c:	mov	r0, r5
    3da0:	bl	3920 <btbb_packet_get_flag@@Base+0xdc>
    3da4:	cmp	r0, #0
    3da8:	beq	3dcc <DM@@Base+0xe4>
    3dac:	ldr	r3, [r4, #64]	; 0x40
    3db0:	cmp	r7, r3
    3db4:	movlt	r0, #1
    3db8:	blt	3dcc <DM@@Base+0xe4>
    3dbc:	lsl	r7, r3, #3
    3dc0:	cmp	r6, r7
    3dc4:	movlt	r0, #1
    3dc8:	bge	3dd4 <DM@@Base+0xec>
    3dcc:	add	sp, sp, #8
    3dd0:	pop	{r4, r5, r6, r7, r8, pc}
    3dd4:	mov	r1, r7
    3dd8:	mov	r0, r5
    3ddc:	bl	2ec0 <__assert_fail@plt+0x96c>
    3de0:	subs	r5, r0, #0
    3de4:	moveq	r0, #0
    3de8:	beq	3dcc <DM@@Base+0xe4>
    3dec:	str	r4, [sp, #4]
    3df0:	mov	r3, #18
    3df4:	str	r3, [sp]
    3df8:	mov	r3, r7
    3dfc:	mov	r2, r8
    3e00:	add	r1, r4, #68	; 0x44
    3e04:	mov	r0, r5
    3e08:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3e0c:	mov	r0, r5
    3e10:	bl	21a0 <free@plt>
    3e14:	mov	r0, r4
    3e18:	bl	2900 <__assert_fail@plt+0x3ac>
    3e1c:	cmp	r0, #0
    3e20:	movne	r0, #10
    3e24:	moveq	r0, #2
    3e28:	b	3dcc <DM@@Base+0xe4>
    3e2c:	mov	r0, #0
    3e30:	b	3dcc <DM@@Base+0xe4>

00003e34 <DH@@Base>:
    3e34:	push	{r4, r5, r6, r7, r8, lr}
    3e38:	sub	sp, sp, #8
    3e3c:	add	r6, r1, #2944	; 0xb80
    3e40:	add	r6, r6, #2
    3e44:	add	r3, r1, #2816	; 0xb00
    3e48:	ldrh	r5, [r3, #6]
    3e4c:	sub	r5, r5, #122	; 0x7a
    3e50:	ldrb	r3, [r1, #18]
    3e54:	sub	r3, r3, #4
    3e58:	cmp	r3, #11
    3e5c:	addls	pc, pc, r3, lsl #2
    3e60:	b	3f4c <DH@@Base+0x118>
    3e64:	b	3eac <DH@@Base+0x78>
    3e68:	b	3f4c <DH@@Base+0x118>
    3e6c:	b	3f4c <DH@@Base+0x118>
    3e70:	b	3f4c <DH@@Base+0x118>
    3e74:	b	3f4c <DH@@Base+0x118>
    3e78:	b	3eac <DH@@Base+0x78>
    3e7c:	b	3f4c <DH@@Base+0x118>
    3e80:	b	3e94 <DH@@Base+0x60>
    3e84:	b	3f4c <DH@@Base+0x118>
    3e88:	b	3f4c <DH@@Base+0x118>
    3e8c:	b	3f4c <DH@@Base+0x118>
    3e90:	b	3ea0 <DH@@Base+0x6c>
    3e94:	mov	r7, #187	; 0xbb
    3e98:	mov	r2, #2
    3e9c:	b	3eb4 <DH@@Base+0x80>
    3ea0:	ldr	r7, [pc, #172]	; 3f54 <DH@@Base+0x120>
    3ea4:	mov	r2, #2
    3ea8:	b	3eb4 <DH@@Base+0x80>
    3eac:	mov	r7, #30
    3eb0:	mov	r2, #1
    3eb4:	mov	r4, r1
    3eb8:	mov	r8, r0
    3ebc:	str	r1, [sp, #4]
    3ec0:	mov	r3, #0
    3ec4:	str	r3, [sp]
    3ec8:	mov	r3, r5
    3ecc:	mov	r1, r0
    3ed0:	mov	r0, r6
    3ed4:	bl	3920 <btbb_packet_get_flag@@Base+0xdc>
    3ed8:	cmp	r0, #0
    3edc:	beq	3f00 <DH@@Base+0xcc>
    3ee0:	ldr	r3, [r4, #64]	; 0x40
    3ee4:	cmp	r7, r3
    3ee8:	movlt	r0, #1
    3eec:	blt	3f00 <DH@@Base+0xcc>
    3ef0:	lsl	r3, r3, #3
    3ef4:	cmp	r5, r3
    3ef8:	movlt	r0, #1
    3efc:	bge	3f08 <DH@@Base+0xd4>
    3f00:	add	sp, sp, #8
    3f04:	pop	{r4, r5, r6, r7, r8, pc}
    3f08:	str	r4, [sp, #4]
    3f0c:	mov	r2, #18
    3f10:	str	r2, [sp]
    3f14:	mov	r2, r8
    3f18:	add	r1, r4, #68	; 0x44
    3f1c:	mov	r0, r6
    3f20:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3f24:	ldrb	r3, [r4, #18]
    3f28:	cmp	r3, #9
    3f2c:	moveq	r0, #2
    3f30:	beq	3f00 <DH@@Base+0xcc>
    3f34:	mov	r0, r4
    3f38:	bl	2900 <__assert_fail@plt+0x3ac>
    3f3c:	cmp	r0, #0
    3f40:	movne	r0, #10
    3f44:	moveq	r0, #2
    3f48:	b	3f00 <DH@@Base+0xcc>
    3f4c:	mov	r0, #0
    3f50:	b	3f00 <DH@@Base+0xcc>
    3f54:	andeq	r0, r0, r7, asr r1

00003f58 <EV3@@Base>:
    3f58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3f5c:	sub	sp, sp, #8
    3f60:	add	r3, r1, #2816	; 0xb00
    3f64:	ldrh	r5, [r3, #6]
    3f68:	sub	r5, r5, #122	; 0x7a
    3f6c:	mov	r3, #0
    3f70:	str	r3, [r1, #64]	; 0x40
    3f74:	cmp	r5, #7
    3f78:	ble	400c <EV3@@Base+0xb4>
    3f7c:	add	r6, r1, #2944	; 0xb80
    3f80:	add	r6, r6, #2
    3f84:	mov	r4, r1
    3f88:	mov	r7, r0
    3f8c:	mov	r1, r3
    3f90:	add	r9, r4, #68	; 0x44
    3f94:	mov	r8, #8
    3f98:	b	3fbc <EV3@@Base+0x64>
    3f9c:	add	r1, sl, #1
    3fa0:	str	r1, [r4, #64]	; 0x40
    3fa4:	cmp	r1, #31
    3fa8:	bgt	4000 <EV3@@Base+0xa8>
    3fac:	lsl	r1, r1, #3
    3fb0:	add	r3, r1, #8
    3fb4:	cmp	r5, r3
    3fb8:	blt	4014 <EV3@@Base+0xbc>
    3fbc:	str	r4, [sp, #4]
    3fc0:	add	r3, r1, #18
    3fc4:	str	r3, [sp]
    3fc8:	mov	r3, r8
    3fcc:	mov	r2, r7
    3fd0:	add	r1, r9, r1
    3fd4:	mov	r0, r6
    3fd8:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    3fdc:	ldr	sl, [r4, #64]	; 0x40
    3fe0:	cmp	sl, #2
    3fe4:	ble	3f9c <EV3@@Base+0x44>
    3fe8:	mov	r0, r4
    3fec:	bl	2900 <__assert_fail@plt+0x3ac>
    3ff0:	cmp	r0, #0
    3ff4:	beq	3f9c <EV3@@Base+0x44>
    3ff8:	mov	r0, #10
    3ffc:	b	4004 <EV3@@Base+0xac>
    4000:	mov	r0, #2
    4004:	add	sp, sp, #8
    4008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    400c:	mov	r0, #1
    4010:	b	4004 <EV3@@Base+0xac>
    4014:	mov	r0, #1
    4018:	b	4004 <EV3@@Base+0xac>

0000401c <EV4@@Base>:
    401c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4020:	sub	sp, sp, #20
    4024:	add	r3, r1, #2816	; 0xb00
    4028:	ldrh	r9, [r3, #6]
    402c:	sub	r9, r9, #122	; 0x7a
    4030:	mov	r3, #1
    4034:	str	r3, [r1, #64]	; 0x40
    4038:	cmp	r9, #14
    403c:	ble	410c <EV4@@Base+0xf0>
    4040:	add	sl, r1, #2944	; 0xb80
    4044:	add	sl, sl, #2
    4048:	mov	r6, r1
    404c:	str	r0, [sp, #12]
    4050:	mov	r8, #0
    4054:	mov	r7, r8
    4058:	ldr	fp, [pc, #200]	; 4128 <EV4@@Base+0x10c>
    405c:	mov	r1, #10
    4060:	add	r0, sl, r8
    4064:	bl	2ec0 <__assert_fail@plt+0x96c>
    4068:	subs	r4, r0, #0
    406c:	beq	40f4 <EV4@@Base+0xd8>
    4070:	add	r1, r7, #68	; 0x44
    4074:	str	r6, [sp, #4]
    4078:	add	r3, r7, #18
    407c:	str	r3, [sp]
    4080:	mov	r3, #10
    4084:	ldr	r2, [sp, #12]
    4088:	add	r1, r6, r1
    408c:	mov	r0, r4
    4090:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    4094:	mov	r0, r4
    4098:	bl	21a0 <free@plt>
    409c:	ldr	r5, [r6, #64]	; 0x40
    40a0:	lsl	r4, r5, #3
    40a4:	cmp	r4, r7
    40a8:	bgt	40d0 <EV4@@Base+0xb4>
    40ac:	mov	r0, r6
    40b0:	bl	2900 <__assert_fail@plt+0x3ac>
    40b4:	cmp	r0, #0
    40b8:	bne	411c <EV4@@Base+0x100>
    40bc:	add	r5, r5, #1
    40c0:	str	r5, [r6, #64]	; 0x40
    40c4:	add	r4, r4, #8
    40c8:	cmp	r4, r7
    40cc:	ble	40ac <EV4@@Base+0x90>
    40d0:	add	r7, r7, #10
    40d4:	cmp	r8, fp
    40d8:	beq	4104 <EV4@@Base+0xe8>
    40dc:	add	r3, r8, #15
    40e0:	add	r8, r8, #30
    40e4:	cmp	r9, r8
    40e8:	blt	4114 <EV4@@Base+0xf8>
    40ec:	mov	r8, r3
    40f0:	b	405c <EV4@@Base+0x40>
    40f4:	cmp	r8, #44	; 0x2c
    40f8:	movle	r0, #0
    40fc:	movgt	r0, #1
    4100:	b	4120 <EV4@@Base+0x104>
    4104:	mov	r0, #2
    4108:	b	4120 <EV4@@Base+0x104>
    410c:	mov	r0, #1
    4110:	b	4120 <EV4@@Base+0x104>
    4114:	mov	r0, #1
    4118:	b	4120 <EV4@@Base+0x104>
    411c:	mov	r0, #10
    4120:	add	sp, sp, #20
    4124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4128:	andeq	r0, r0, pc, lsr #11

0000412c <EV5@@Base>:
    412c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4130:	sub	sp, sp, #8
    4134:	add	r3, r1, #2816	; 0xb00
    4138:	ldrh	r5, [r3, #6]
    413c:	sub	r5, r5, #122	; 0x7a
    4140:	mov	r3, #0
    4144:	str	r3, [r1, #64]	; 0x40
    4148:	cmp	r5, #7
    414c:	ble	41e0 <EV5@@Base+0xb4>
    4150:	add	r6, r1, #2944	; 0xb80
    4154:	add	r6, r6, #2
    4158:	mov	r4, r1
    415c:	mov	r7, r0
    4160:	mov	r1, r3
    4164:	add	r9, r4, #68	; 0x44
    4168:	mov	r8, #8
    416c:	b	4190 <EV5@@Base+0x64>
    4170:	add	r1, sl, #1
    4174:	str	r1, [r4, #64]	; 0x40
    4178:	cmp	r1, #181	; 0xb5
    417c:	bgt	41d4 <EV5@@Base+0xa8>
    4180:	lsl	r1, r1, #3
    4184:	add	r3, r1, #8
    4188:	cmp	r5, r3
    418c:	blt	41e8 <EV5@@Base+0xbc>
    4190:	str	r4, [sp, #4]
    4194:	add	r3, r1, #18
    4198:	str	r3, [sp]
    419c:	mov	r3, r8
    41a0:	mov	r2, r7
    41a4:	add	r1, r9, r1
    41a8:	mov	r0, r6
    41ac:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    41b0:	ldr	sl, [r4, #64]	; 0x40
    41b4:	cmp	sl, #2
    41b8:	ble	4170 <EV5@@Base+0x44>
    41bc:	mov	r0, r4
    41c0:	bl	2900 <__assert_fail@plt+0x3ac>
    41c4:	cmp	r0, #0
    41c8:	beq	4170 <EV5@@Base+0x44>
    41cc:	mov	r0, #10
    41d0:	b	41d8 <EV5@@Base+0xac>
    41d4:	mov	r0, #2
    41d8:	add	sp, sp, #8
    41dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    41e0:	mov	r0, #1
    41e4:	b	41d8 <EV5@@Base+0xac>
    41e8:	mov	r0, #1
    41ec:	b	41d8 <EV5@@Base+0xac>

000041f0 <HV@@Base>:
    41f0:	add	r3, r1, #2816	; 0xb00
    41f4:	ldrh	r3, [r3, #6]
    41f8:	sub	r3, r3, #122	; 0x7a
    41fc:	mov	ip, #0
    4200:	str	ip, [r1, #40]	; 0x28
    4204:	cmp	r3, #239	; 0xef
    4208:	ble	424c <HV@@Base+0x5c>
    420c:	push	{r4, r5, r6, lr}
    4210:	sub	sp, sp, #88	; 0x58
    4214:	mov	r4, r1
    4218:	mov	r6, r0
    421c:	add	r3, r1, #2944	; 0xb80
    4220:	add	r5, r3, #2
    4224:	ldrb	r3, [r1, #18]
    4228:	cmp	r3, #6
    422c:	beq	42b4 <HV@@Base+0xc4>
    4230:	cmp	r3, #7
    4234:	beq	4318 <HV@@Base+0x128>
    4238:	cmp	r3, #5
    423c:	movne	r0, #2
    4240:	beq	4258 <HV@@Base+0x68>
    4244:	add	sp, sp, #88	; 0x58
    4248:	pop	{r4, r5, r6, pc}
    424c:	str	ip, [r1, #64]	; 0x40
    4250:	mov	r0, #1
    4254:	bx	lr
    4258:	mov	r2, #80	; 0x50
    425c:	add	r1, sp, #8
    4260:	mov	r0, r5
    4264:	bl	2838 <__assert_fail@plt+0x2e4>
    4268:	cmp	r0, #0
    426c:	beq	4244 <HV@@Base+0x54>
    4270:	mov	r3, #10
    4274:	str	r3, [r4, #64]	; 0x40
    4278:	mov	r2, #1
    427c:	mov	r1, #7
    4280:	mov	r0, r4
    4284:	bl	2188 <btbb_packet_set_flag@plt>
    4288:	ldr	r3, [r4, #64]	; 0x40
    428c:	str	r4, [sp, #4]
    4290:	mov	r2, #18
    4294:	str	r2, [sp]
    4298:	lsl	r3, r3, #3
    429c:	mov	r2, r6
    42a0:	add	r1, r4, #68	; 0x44
    42a4:	add	r0, sp, #8
    42a8:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    42ac:	mov	r0, #2
    42b0:	b	4244 <HV@@Base+0x54>
    42b4:	mov	r1, #160	; 0xa0
    42b8:	mov	r0, r5
    42bc:	bl	2ec0 <__assert_fail@plt+0x96c>
    42c0:	subs	r5, r0, #0
    42c4:	moveq	r0, #0
    42c8:	beq	4244 <HV@@Base+0x54>
    42cc:	mov	r3, #20
    42d0:	str	r3, [r4, #64]	; 0x40
    42d4:	mov	r2, #1
    42d8:	mov	r1, #7
    42dc:	mov	r0, r4
    42e0:	bl	2188 <btbb_packet_set_flag@plt>
    42e4:	ldr	r3, [r4, #64]	; 0x40
    42e8:	str	r4, [sp, #4]
    42ec:	mov	r2, #18
    42f0:	str	r2, [sp]
    42f4:	lsl	r3, r3, #3
    42f8:	mov	r2, r6
    42fc:	add	r1, r4, #68	; 0x44
    4300:	mov	r0, r5
    4304:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    4308:	mov	r0, r5
    430c:	bl	21a0 <free@plt>
    4310:	mov	r0, #2
    4314:	b	4244 <HV@@Base+0x54>
    4318:	mov	r3, #30
    431c:	str	r3, [r1, #64]	; 0x40
    4320:	mov	r2, #1
    4324:	mov	r1, #7
    4328:	mov	r0, r4
    432c:	bl	2188 <btbb_packet_set_flag@plt>
    4330:	ldr	r3, [r4, #64]	; 0x40
    4334:	str	r4, [sp, #4]
    4338:	mov	r2, #18
    433c:	str	r2, [sp]
    4340:	lsl	r3, r3, #3
    4344:	mov	r2, r6
    4348:	add	r1, r4, #68	; 0x44
    434c:	mov	r0, r5
    4350:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    4354:	mov	r0, #2
    4358:	b	4244 <HV@@Base+0x54>

0000435c <crc_check@@Base>:
    435c:	push	{r4, lr}
    4360:	mov	r4, r1
    4364:	ldrb	r3, [r1, #18]
    4368:	sub	r3, r3, #2
    436c:	cmp	r3, #13
    4370:	addls	pc, pc, r3, lsl #2
    4374:	b	440c <crc_check@@Base+0xb0>
    4378:	b	43b0 <crc_check@@Base+0x54>
    437c:	b	43dc <crc_check@@Base+0x80>
    4380:	b	43e4 <crc_check@@Base+0x88>
    4384:	b	4404 <crc_check@@Base+0xa8>
    4388:	b	440c <crc_check@@Base+0xb0>
    438c:	b	43ec <crc_check@@Base+0x90>
    4390:	b	43dc <crc_check@@Base+0x80>
    4394:	b	440c <crc_check@@Base+0xb0>
    4398:	b	43dc <crc_check@@Base+0x80>
    439c:	b	43e4 <crc_check@@Base+0x88>
    43a0:	b	43f4 <crc_check@@Base+0x98>
    43a4:	b	43fc <crc_check@@Base+0xa0>
    43a8:	b	43dc <crc_check@@Base+0x80>
    43ac:	b	43e4 <crc_check@@Base+0x88>
    43b0:	bl	21e8 <fhs@plt>
    43b4:	cmp	r0, #0
    43b8:	bne	4414 <crc_check@@Base+0xb8>
    43bc:	ldrb	r3, [r4, #18]
    43c0:	sub	r0, r3, #2
    43c4:	uxtb	r0, r0
    43c8:	cmp	r3, #5
    43cc:	cmpne	r0, #1
    43d0:	movhi	r0, #1
    43d4:	movls	r0, #0
    43d8:	pop	{r4, pc}
    43dc:	bl	2260 <DM@plt>
    43e0:	b	43b4 <crc_check@@Base+0x58>
    43e4:	bl	24c4 <DH@plt>
    43e8:	b	43b4 <crc_check@@Base+0x58>
    43ec:	bl	244c <EV3@plt>
    43f0:	b	43b4 <crc_check@@Base+0x58>
    43f4:	bl	21f4 <EV4@plt>
    43f8:	b	43b4 <crc_check@@Base+0x58>
    43fc:	bl	24ac <EV5@plt>
    4400:	b	43b4 <crc_check@@Base+0x58>
    4404:	bl	2278 <HV@plt>
    4408:	b	43b4 <crc_check@@Base+0x58>
    440c:	mov	r0, #1
    4410:	b	43b4 <crc_check@@Base+0x58>
    4414:	cmp	r0, #1
    4418:	pople	{r4, pc}
    441c:	ldrb	r3, [r4, #18]
    4420:	cmp	r3, #13
    4424:	cmpne	r3, #7
    4428:	moveq	r3, #1
    442c:	movne	r3, #0
    4430:	cmp	r3, #0
    4434:	movne	r0, #1
    4438:	pop	{r4, pc}

0000443c <try_clock@@Base>:
    443c:	push	{r4, r5, lr}
    4440:	sub	sp, sp, #52	; 0x34
    4444:	mov	r5, r0
    4448:	mov	r4, r1
    444c:	add	r0, r1, #2880	; 0xb40
    4450:	mov	r2, #18
    4454:	add	r1, sp, #28
    4458:	add	r0, r0, #12
    445c:	bl	2838 <__assert_fail@plt+0x2e4>
    4460:	cmp	r0, #0
    4464:	moveq	r5, #0
    4468:	bne	4478 <try_clock@@Base+0x3c>
    446c:	mov	r0, r5
    4470:	add	sp, sp, #52	; 0x34
    4474:	pop	{r4, r5, pc}
    4478:	str	r4, [sp, #4]
    447c:	mov	r3, #0
    4480:	str	r3, [sp]
    4484:	mov	r3, #18
    4488:	mov	r2, r5
    448c:	add	r5, sp, #8
    4490:	mov	r1, r5
    4494:	add	r0, sp, #28
    4498:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    449c:	mov	r1, #10
    44a0:	mov	r0, r5
    44a4:	bl	27a0 <__assert_fail@plt+0x24c>
    44a8:	mov	r5, r0
    44ac:	mov	r1, #8
    44b0:	add	r0, sp, #18
    44b4:	bl	2760 <__assert_fail@plt+0x20c>
    44b8:	mov	r1, r0
    44bc:	mov	r0, r5
    44c0:	bl	28c4 <__assert_fail@plt+0x370>
    44c4:	mov	r5, r0
    44c8:	strb	r0, [r4, #9]
    44cc:	mov	r1, #4
    44d0:	add	r0, sp, #11
    44d4:	bl	2760 <__assert_fail@plt+0x20c>
    44d8:	strb	r0, [r4, #18]
    44dc:	b	446c <try_clock@@Base+0x30>

000044e0 <btbb_decode_header@@Base>:
    44e0:	push	{r4, r5, r6, r7, lr}
    44e4:	sub	sp, sp, #36	; 0x24
    44e8:	mov	r4, r0
    44ec:	mov	r1, #4
    44f0:	bl	21dc <btbb_packet_get_flag@plt>
    44f4:	cmp	r0, #0
    44f8:	bne	4504 <btbb_decode_header@@Base+0x24>
    44fc:	add	sp, sp, #36	; 0x24
    4500:	pop	{r4, r5, r6, r7, pc}
    4504:	add	r0, r4, #2880	; 0xb40
    4508:	mov	r2, #18
    450c:	add	r1, sp, #12
    4510:	add	r0, r0, #12
    4514:	bl	2838 <__assert_fail@plt+0x2e4>
    4518:	cmp	r0, #0
    451c:	beq	44fc <btbb_decode_header@@Base+0x1c>
    4520:	add	r5, r4, #22
    4524:	str	r4, [sp, #4]
    4528:	mov	r3, #0
    452c:	str	r3, [sp]
    4530:	mov	r3, #18
    4534:	ldr	r2, [r4, #2816]	; 0xb00
    4538:	mov	r1, r5
    453c:	add	r0, sp, #12
    4540:	bl	385c <btbb_packet_get_flag@@Base+0x18>
    4544:	mov	r1, #10
    4548:	mov	r0, r5
    454c:	bl	27a0 <__assert_fail@plt+0x24c>
    4550:	mov	r7, r0
    4554:	mov	r1, #8
    4558:	add	r0, r4, #32
    455c:	bl	2760 <__assert_fail@plt+0x20c>
    4560:	mov	r6, r0
    4564:	mov	r1, r0
    4568:	mov	r0, r7
    456c:	bl	28c4 <__assert_fail@plt+0x370>
    4570:	ldrb	r3, [r4, #9]
    4574:	cmp	r3, r0
    4578:	movne	r0, #0
    457c:	bne	44fc <btbb_decode_header@@Base+0x1c>
    4580:	mov	r1, #3
    4584:	mov	r0, r5
    4588:	bl	2760 <__assert_fail@plt+0x20c>
    458c:	strb	r0, [r4, #19]
    4590:	mov	r1, #4
    4594:	add	r0, r4, #25
    4598:	bl	2760 <__assert_fail@plt+0x20c>
    459c:	strb	r0, [r4, #18]
    45a0:	mov	r1, #3
    45a4:	add	r0, r4, #29
    45a8:	bl	2760 <__assert_fail@plt+0x20c>
    45ac:	strb	r0, [r4, #20]
    45b0:	strb	r6, [r4, #21]
    45b4:	mov	r0, #1
    45b8:	b	44fc <btbb_decode_header@@Base+0x1c>

000045bc <btbb_decode_payload@@Base>:
    45bc:	push	{r4, r5, r6, lr}
    45c0:	mov	r4, r0
    45c4:	mov	r3, #0
    45c8:	str	r3, [r0, #40]	; 0x28
    45cc:	ldrb	r3, [r0, #18]
    45d0:	cmp	r3, #15
    45d4:	addls	pc, pc, r3, lsl #2
    45d8:	b	4780 <btbb_decode_payload@@Base+0x1c4>
    45dc:	b	461c <btbb_decode_payload@@Base+0x60>
    45e0:	b	4640 <btbb_decode_payload@@Base+0x84>
    45e4:	b	4650 <btbb_decode_payload@@Base+0x94>
    45e8:	b	4664 <btbb_decode_payload@@Base+0xa8>
    45ec:	b	4678 <btbb_decode_payload@@Base+0xbc>
    45f0:	b	468c <btbb_decode_payload@@Base+0xd0>
    45f4:	b	46a0 <btbb_decode_payload@@Base+0xe4>
    45f8:	b	46b4 <btbb_decode_payload@@Base+0xf8>
    45fc:	b	46e0 <btbb_decode_payload@@Base+0x124>
    4600:	b	46f4 <btbb_decode_payload@@Base+0x138>
    4604:	b	4708 <btbb_decode_payload@@Base+0x14c>
    4608:	b	471c <btbb_decode_payload@@Base+0x160>
    460c:	b	4730 <btbb_decode_payload@@Base+0x174>
    4610:	b	4744 <btbb_decode_payload@@Base+0x188>
    4614:	b	4758 <btbb_decode_payload@@Base+0x19c>
    4618:	b	476c <btbb_decode_payload@@Base+0x1b0>
    461c:	mov	r3, #0
    4620:	str	r3, [r0, #64]	; 0x40
    4624:	mov	r5, #1
    4628:	mov	r2, #1
    462c:	mov	r1, #7
    4630:	mov	r0, r4
    4634:	bl	2188 <btbb_packet_set_flag@plt>
    4638:	mov	r0, r5
    463c:	pop	{r4, r5, r6, pc}
    4640:	mov	r3, #0
    4644:	str	r3, [r0, #64]	; 0x40
    4648:	mov	r5, #1
    464c:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4650:	mov	r1, r0
    4654:	ldr	r0, [r0, #2816]	; 0xb00
    4658:	bl	21e8 <fhs@plt>
    465c:	mov	r5, r0
    4660:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4664:	mov	r1, r0
    4668:	ldr	r0, [r0, #2816]	; 0xb00
    466c:	bl	2260 <DM@plt>
    4670:	mov	r5, r0
    4674:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4678:	mov	r1, r0
    467c:	ldr	r0, [r0, #2816]	; 0xb00
    4680:	bl	24c4 <DH@plt>
    4684:	mov	r5, r0
    4688:	b	4628 <btbb_decode_payload@@Base+0x6c>
    468c:	mov	r1, r0
    4690:	ldr	r0, [r0, #2816]	; 0xb00
    4694:	bl	2278 <HV@plt>
    4698:	mov	r5, r0
    469c:	b	4628 <btbb_decode_payload@@Base+0x6c>
    46a0:	mov	r1, r0
    46a4:	ldr	r0, [r0, #2816]	; 0xb00
    46a8:	bl	2278 <HV@plt>
    46ac:	mov	r5, r0
    46b0:	b	4628 <btbb_decode_payload@@Base+0x6c>
    46b4:	mov	r1, r0
    46b8:	ldr	r0, [r0, #2816]	; 0xb00
    46bc:	bl	244c <EV3@plt>
    46c0:	mov	r5, r0
    46c4:	cmp	r0, #1
    46c8:	bgt	4628 <btbb_decode_payload@@Base+0x6c>
    46cc:	mov	r1, r4
    46d0:	ldr	r0, [r4, #2816]	; 0xb00
    46d4:	bl	2278 <HV@plt>
    46d8:	mov	r5, r0
    46dc:	b	4628 <btbb_decode_payload@@Base+0x6c>
    46e0:	mov	r1, r0
    46e4:	ldr	r0, [r0, #2816]	; 0xb00
    46e8:	bl	2260 <DM@plt>
    46ec:	mov	r5, r0
    46f0:	b	4628 <btbb_decode_payload@@Base+0x6c>
    46f4:	mov	r1, r0
    46f8:	ldr	r0, [r0, #2816]	; 0xb00
    46fc:	bl	24c4 <DH@plt>
    4700:	mov	r5, r0
    4704:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4708:	mov	r1, r0
    470c:	ldr	r0, [r0, #2816]	; 0xb00
    4710:	bl	2260 <DM@plt>
    4714:	mov	r5, r0
    4718:	b	4628 <btbb_decode_payload@@Base+0x6c>
    471c:	mov	r1, r0
    4720:	ldr	r0, [r0, #2816]	; 0xb00
    4724:	bl	24c4 <DH@plt>
    4728:	mov	r5, r0
    472c:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4730:	mov	r1, r0
    4734:	ldr	r0, [r0, #2816]	; 0xb00
    4738:	bl	21f4 <EV4@plt>
    473c:	mov	r5, r0
    4740:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4744:	mov	r1, r0
    4748:	ldr	r0, [r0, #2816]	; 0xb00
    474c:	bl	24ac <EV5@plt>
    4750:	mov	r5, r0
    4754:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4758:	mov	r1, r0
    475c:	ldr	r0, [r0, #2816]	; 0xb00
    4760:	bl	2260 <DM@plt>
    4764:	mov	r5, r0
    4768:	b	4628 <btbb_decode_payload@@Base+0x6c>
    476c:	mov	r1, r0
    4770:	ldr	r0, [r0, #2816]	; 0xb00
    4774:	bl	24c4 <DH@plt>
    4778:	mov	r5, r0
    477c:	b	4628 <btbb_decode_payload@@Base+0x6c>
    4780:	mov	r5, #0
    4784:	b	4628 <btbb_decode_payload@@Base+0x6c>

00004788 <btbb_print_packet@@Base>:
    4788:	push	{r4, r5, r6, r7, r8, lr}
    478c:	mov	r4, r0
    4790:	mov	r1, #7
    4794:	bl	21dc <btbb_packet_get_flag@plt>
    4798:	cmp	r0, #0
    479c:	popeq	{r4, r5, r6, r7, r8, pc}
    47a0:	ldrb	r2, [r4, #18]
    47a4:	ldr	r3, [pc, #204]	; 4878 <btbb_print_packet@@Base+0xf0>
    47a8:	add	r3, pc, r3
    47ac:	ldr	r1, [r3, r2, lsl #2]
    47b0:	ldr	r0, [pc, #196]	; 487c <btbb_print_packet@@Base+0xf4>
    47b4:	add	r0, pc, r0
    47b8:	bl	2158 <printf@plt>
    47bc:	ldr	r3, [r4, #40]	; 0x28
    47c0:	cmp	r3, #0
    47c4:	ble	4808 <btbb_print_packet@@Base+0x80>
    47c8:	ldrb	r1, [r4, #19]
    47cc:	ldr	r0, [pc, #172]	; 4880 <btbb_print_packet@@Base+0xf8>
    47d0:	add	r0, pc, r0
    47d4:	bl	2158 <printf@plt>
    47d8:	ldrb	r1, [r4, #60]	; 0x3c
    47dc:	ldr	r0, [pc, #160]	; 4884 <btbb_print_packet@@Base+0xfc>
    47e0:	add	r0, pc, r0
    47e4:	bl	2158 <printf@plt>
    47e8:	ldrb	r1, [r4, #61]	; 0x3d
    47ec:	ldr	r0, [pc, #148]	; 4888 <btbb_print_packet@@Base+0x100>
    47f0:	add	r0, pc, r0
    47f4:	bl	2158 <printf@plt>
    47f8:	ldr	r1, [r4, #64]	; 0x40
    47fc:	ldr	r0, [pc, #136]	; 488c <btbb_print_packet@@Base+0x104>
    4800:	add	r0, pc, r0
    4804:	bl	2158 <printf@plt>
    4808:	ldr	r3, [r4, #64]	; 0x40
    480c:	cmp	r3, #0
    4810:	popeq	{r4, r5, r6, r7, r8, pc}
    4814:	ldr	r0, [pc, #116]	; 4890 <btbb_print_packet@@Base+0x108>
    4818:	add	r0, pc, r0
    481c:	bl	2158 <printf@plt>
    4820:	ldr	r3, [r4, #64]	; 0x40
    4824:	cmp	r3, #0
    4828:	ble	486c <btbb_print_packet@@Base+0xe4>
    482c:	add	r6, r4, #68	; 0x44
    4830:	mov	r5, #0
    4834:	mov	r8, #8
    4838:	ldr	r7, [pc, #84]	; 4894 <btbb_print_packet@@Base+0x10c>
    483c:	add	r7, pc, r7
    4840:	mov	r1, r8
    4844:	mov	r0, r6
    4848:	bl	2760 <__assert_fail@plt+0x20c>
    484c:	mov	r1, r0
    4850:	mov	r0, r7
    4854:	bl	2158 <printf@plt>
    4858:	add	r5, r5, #1
    485c:	add	r6, r6, #8
    4860:	ldr	r3, [r4, #64]	; 0x40
    4864:	cmp	r3, r5
    4868:	bgt	4840 <btbb_print_packet@@Base+0xb8>
    486c:	mov	r0, #10
    4870:	bl	2434 <putchar@plt>
    4874:	pop	{r4, r5, r6, r7, r8, pc}
    4878:	andeq	r4, r2, r8, ror #12
    487c:			; <UNDEFINED> instruction: 0x0000dcb8
    4880:	andeq	sp, r0, r8, lsr #25
    4884:	andeq	sp, r0, r8, lsr #25
    4888:	andeq	sp, r0, r4, lsr #25
    488c:	andeq	sp, r0, r0, lsr #25
    4890:	andeq	sp, r0, r0, lsr #25
    4894:	strdeq	lr, [r0], -r0

00004898 <btbb_decode@@Base>:
    4898:	push	{r4, r5, r6, lr}
    489c:	mov	r4, r0
    48a0:	mov	r2, #0
    48a4:	mov	r1, #7
    48a8:	bl	2188 <btbb_packet_set_flag@plt>
    48ac:	mov	r0, r4
    48b0:	bl	2398 <btbb_decode_header@plt>
    48b4:	subs	r5, r0, #0
    48b8:	bne	48c4 <btbb_decode@@Base+0x2c>
    48bc:	mov	r0, r5
    48c0:	pop	{r4, r5, r6, pc}
    48c4:	mov	r0, r4
    48c8:	bl	24e8 <btbb_decode_payload@plt>
    48cc:	subs	r5, r0, #0
    48d0:	ble	48bc <btbb_decode@@Base+0x24>
    48d4:	ldr	r1, [r4, #2816]	; 0xb00
    48d8:	mov	r2, r5
    48dc:	and	r1, r1, #63	; 0x3f
    48e0:	ldr	r0, [pc, #16]	; 48f8 <btbb_decode@@Base+0x60>
    48e4:	add	r0, pc, r0
    48e8:	bl	2158 <printf@plt>
    48ec:	mov	r0, r4
    48f0:	bl	250c <btbb_print_packet@plt>
    48f4:	b	48bc <btbb_decode@@Base+0x24>
    48f8:	andeq	sp, r0, r0, ror #23

000048fc <tun_format@@Base>:
    48fc:	push	{r4, r5, r6, r7, r8, lr}
    4900:	mov	r4, r0
    4904:	ldr	r0, [r0, #64]	; 0x40
    4908:	add	r0, r0, #9
    490c:	bl	2320 <malloc@plt>
    4910:	mov	r7, r0
    4914:	ldr	r3, [r4, #2816]	; 0xb00
    4918:	strb	r3, [r0]
    491c:	lsr	r2, r3, #8
    4920:	strb	r2, [r0, #1]
    4924:	lsr	r2, r3, #16
    4928:	strb	r2, [r0, #2]
    492c:	lsr	r3, r3, #24
    4930:	strb	r3, [r0, #3]
    4934:	ldrb	r3, [r4, #8]
    4938:	strb	r3, [r0, #4]
    493c:	mov	r1, #5
    4940:	mov	r0, r4
    4944:	bl	21dc <btbb_packet_get_flag@plt>
    4948:	mov	r5, r0
    494c:	mov	r1, #1
    4950:	mov	r0, r4
    4954:	bl	21dc <btbb_packet_get_flag@plt>
    4958:	orr	r0, r5, r0, lsl #1
    495c:	strb	r0, [r7, #5]
    4960:	mov	r1, #7
    4964:	add	r0, r4, #22
    4968:	bl	2760 <__assert_fail@plt+0x20c>
    496c:	strb	r0, [r7, #6]
    4970:	mov	r1, #3
    4974:	add	r0, r4, #29
    4978:	bl	2760 <__assert_fail@plt+0x20c>
    497c:	strb	r0, [r7, #7]
    4980:	mov	r1, #8
    4984:	add	r0, r4, #32
    4988:	bl	2760 <__assert_fail@plt+0x20c>
    498c:	strb	r0, [r7, #8]
    4990:	ldr	r6, [r4, #64]	; 0x40
    4994:	cmp	r6, #0
    4998:	ble	49cc <tun_format@@Base+0xd0>
    499c:	add	r4, r4, #68	; 0x44
    49a0:	add	r5, r7, #8
    49a4:	add	r6, r6, #8
    49a8:	add	r6, r7, r6
    49ac:	mov	r8, #8
    49b0:	mov	r1, r8
    49b4:	mov	r0, r4
    49b8:	bl	2760 <__assert_fail@plt+0x20c>
    49bc:	strb	r0, [r5, #1]!
    49c0:	add	r4, r4, #8
    49c4:	cmp	r5, r6
    49c8:	bne	49b0 <tun_format@@Base+0xb4>
    49cc:	mov	r0, r7
    49d0:	pop	{r4, r5, r6, r7, r8, pc}

000049d4 <btbb_header_present@@Base>:
    49d4:	add	r3, r0, #2816	; 0xb00
    49d8:	ldrh	r3, [r3, #6]
    49dc:	cmp	r3, #121	; 0x79
    49e0:	bls	4a70 <btbb_header_present@@Base+0x9c>
    49e4:	push	{r4, lr}
    49e8:	ldrb	r3, [r0, #2887]	; 0xb47
    49ec:	clz	r1, r3
    49f0:	lsr	r1, r1, #5
    49f4:	ldrb	r2, [r0, #2888]	; 0xb48
    49f8:	eor	r4, r2, r1
    49fc:	ldrb	r2, [r0, #2889]	; 0xb49
    4a00:	eor	r2, r2, r3
    4a04:	add	r2, r4, r2
    4a08:	ldrb	r4, [r0, #2890]	; 0xb4a
    4a0c:	eor	r4, r4, r1
    4a10:	add	r4, r4, r2
    4a14:	ldrb	r2, [r0, #2891]	; 0xb4b
    4a18:	eor	r3, r3, r2
    4a1c:	add	r4, r3, r4
    4a20:	add	r3, r0, #2880	; 0xb40
    4a24:	add	r3, r3, #12
    4a28:	add	r0, r0, #2944	; 0xb80
    4a2c:	add	r0, r0, #2
    4a30:	ldrb	r1, [r3]
    4a34:	ldrb	ip, [r3, #1]
    4a38:	ldrb	lr, [r3, #2]
    4a3c:	eor	r2, r1, ip
    4a40:	eor	ip, ip, lr
    4a44:	orr	r2, r2, ip
    4a48:	eor	r1, r1, lr
    4a4c:	orr	r2, r2, r1
    4a50:	add	r4, r4, r2
    4a54:	add	r3, r3, #3
    4a58:	cmp	r3, r0
    4a5c:	bne	4a30 <btbb_header_present@@Base+0x5c>
    4a60:	cmp	r4, #4
    4a64:	movgt	r0, #0
    4a68:	movle	r0, #1
    4a6c:	pop	{r4, pc}
    4a70:	mov	r0, #0
    4a74:	bx	lr

00004a78 <lap_from_fhs@@Base>:
    4a78:	add	r2, r0, #101	; 0x65
    4a7c:	mov	r0, #0
    4a80:	mov	r3, r0
    4a84:	ldrb	r1, [r2, #1]!
    4a88:	orr	r0, r0, r1, lsl r3
    4a8c:	add	r3, r3, #1
    4a90:	cmp	r3, #24
    4a94:	bne	4a84 <lap_from_fhs@@Base+0xc>
    4a98:	bx	lr

00004a9c <uap_from_fhs@@Base>:
    4a9c:	push	{r4, lr}
    4aa0:	mov	r1, #8
    4aa4:	add	r0, r0, #132	; 0x84
    4aa8:	bl	2760 <__assert_fail@plt+0x20c>
    4aac:	pop	{r4, pc}

00004ab0 <nap_from_fhs@@Base>:
    4ab0:	push	{r4, lr}
    4ab4:	mov	r1, #16
    4ab8:	add	r0, r0, #140	; 0x8c
    4abc:	bl	27a0 <__assert_fail@plt+0x24c>
    4ac0:	pop	{r4, pc}

00004ac4 <clock_from_fhs@@Base>:
    4ac4:	add	r2, r0, #182	; 0xb6
    4ac8:	mov	r0, #0
    4acc:	mov	r3, r0
    4ad0:	ldrb	r1, [r2, #1]!
    4ad4:	orr	r0, r0, r1, lsl r3
    4ad8:	add	r3, r3, #1
    4adc:	cmp	r3, #26
    4ae0:	bne	4ad0 <clock_from_fhs@@Base+0xc>
    4ae4:	bx	lr

00004ae8 <count_bits@@Base>:
    4ae8:	subs	r3, r0, #0
    4aec:	beq	4b08 <count_bits@@Base+0x20>
    4af0:	mov	r0, #0
    4af4:	sub	r2, r3, #1
    4af8:	add	r0, r0, #1
    4afc:	ands	r3, r2, r3
    4b00:	bne	4af4 <count_bits@@Base+0xc>
    4b04:	bx	lr
    4b08:	mov	r0, #0
    4b0c:	bx	lr

00004b10 <btbb_piconet_new@@Base>:
    4b10:	push	{r4, lr}
    4b14:	ldr	r1, [pc, #16]	; 4b2c <btbb_piconet_new@@Base+0x1c>
    4b18:	mov	r0, #1
    4b1c:	bl	2104 <calloc@plt>
    4b20:	mov	r3, #1
    4b24:	str	r3, [r0]
    4b28:	pop	{r4, pc}
    4b2c:	andeq	r1, r0, ip, lsl r6

00004b30 <btbb_piconet_ref@@Base>:
    4b30:	ldr	r3, [r0]
    4b34:	add	r3, r3, #1
    4b38:	str	r3, [r0]
    4b3c:	bx	lr

00004b40 <btbb_piconet_unref@@Base>:
    4b40:	ldr	r3, [r0]
    4b44:	subs	r3, r3, #1
    4b48:	beq	4b54 <btbb_piconet_unref@@Base+0x14>
    4b4c:	str	r3, [r0]
    4b50:	bx	lr
    4b54:	push	{r4, lr}
    4b58:	bl	21a0 <free@plt>
    4b5c:	pop	{r4, pc}

00004b60 <btbb_init_survey@@Base>:
    4b60:	mov	r2, #1
    4b64:	ldr	r3, [pc, #12]	; 4b78 <btbb_init_survey@@Base+0x18>
    4b68:	add	r3, pc, r3
    4b6c:	str	r2, [r3]
    4b70:	mov	r0, #0
    4b74:	bx	lr
    4b78:	andeq	r4, r2, r4, asr #12

00004b7c <btbb_piconet_set_flag@@Base>:
    4b7c:	mov	r3, #1
    4b80:	lsl	r1, r3, r1
    4b84:	ldr	r3, [r0, #4]
    4b88:	cmp	r2, #0
    4b8c:	biceq	r1, r3, r1
    4b90:	orrne	r1, r1, r3
    4b94:	str	r1, [r0, #4]
    4b98:	bx	lr

00004b9c <btbb_init_piconet@@Base>:
    4b9c:	push	{r4, lr}
    4ba0:	str	r1, [r0, #24]
    4ba4:	mov	r2, #1
    4ba8:	mov	r1, #3
    4bac:	bl	226c <btbb_piconet_set_flag@plt>
    4bb0:	pop	{r4, pc}

00004bb4 <btbb_piconet_get_flag@@Base>:
    4bb4:	ldr	r3, [r0, #4]
    4bb8:	mov	r2, #1
    4bbc:	ands	r3, r3, r2, lsl r1
    4bc0:	movne	r0, r2
    4bc4:	moveq	r0, #0
    4bc8:	bx	lr
    4bcc:	push	{r4, lr}
    4bd0:	mov	r4, r0
    4bd4:	mov	r1, #9
    4bd8:	bl	2248 <btbb_piconet_get_flag@plt>
    4bdc:	cmp	r0, #0
    4be0:	bne	4c5c <btbb_piconet_get_flag@@Base+0xa8>
    4be4:	mov	r2, #0
    4be8:	mov	r1, #10
    4bec:	mov	r0, r4
    4bf0:	bl	226c <btbb_piconet_set_flag@plt>
    4bf4:	mov	r2, #0
    4bf8:	mov	r1, #9
    4bfc:	mov	r0, r4
    4c00:	bl	226c <btbb_piconet_set_flag@plt>
    4c04:	mov	r2, #0
    4c08:	mov	r1, #2
    4c0c:	mov	r0, r4
    4c10:	bl	226c <btbb_piconet_set_flag@plt>
    4c14:	mov	r2, #0
    4c18:	mov	r1, #4
    4c1c:	mov	r0, r4
    4c20:	bl	226c <btbb_piconet_set_flag@plt>
    4c24:	mov	r2, #0
    4c28:	mov	r1, #5
    4c2c:	mov	r0, r4
    4c30:	bl	226c <btbb_piconet_set_flag@plt>
    4c34:	mov	r3, #0
    4c38:	str	r3, [r4, #380]	; 0x17c
    4c3c:	mov	r1, #12
    4c40:	mov	r0, r4
    4c44:	bl	2248 <btbb_piconet_get_flag@plt>
    4c48:	mov	r2, r0
    4c4c:	mov	r1, #11
    4c50:	mov	r0, r4
    4c54:	bl	226c <btbb_piconet_set_flag@plt>
    4c58:	pop	{r4, pc}
    4c5c:	ldr	r0, [r4, #32]
    4c60:	bl	21a0 <free@plt>
    4c64:	mov	r3, #0
    4c68:	str	r3, [r4, #372]	; 0x174
    4c6c:	b	4be4 <btbb_piconet_get_flag@@Base+0x30>

00004c70 <btbb_piconet_set_uap@@Base>:
    4c70:	push	{r4, lr}
    4c74:	strb	r1, [r0, #28]
    4c78:	mov	r2, #1
    4c7c:	mov	r1, #2
    4c80:	bl	226c <btbb_piconet_set_flag@plt>
    4c84:	pop	{r4, pc}

00004c88 <btbb_piconet_get_uap@@Base>:
    4c88:	ldrb	r0, [r0, #28]
    4c8c:	bx	lr

00004c90 <btbb_piconet_get_lap@@Base>:
    4c90:	ldr	r0, [r0, #24]
    4c94:	bx	lr

00004c98 <btbb_piconet_get_nap@@Base>:
    4c98:	ldrh	r0, [r0, #30]
    4c9c:	bx	lr

00004ca0 <btbb_piconet_get_bdaddr@@Base>:
    4ca0:	mov	r2, #0
    4ca4:	ldrh	r3, [r0, #30]
    4ca8:	ldr	r1, [r0, #24]
    4cac:	orr	r2, r2, r1
    4cb0:	ldrb	r0, [r0, #28]
    4cb4:	lsl	r0, r0, #24
    4cb8:	orr	r2, r2, r0
    4cbc:	mov	r0, r2
    4cc0:	mov	r1, r3
    4cc4:	bx	lr

00004cc8 <btbb_piconet_get_clk_offset@@Base>:
    4cc8:	add	r0, r0, #4096	; 0x1000
    4ccc:	ldr	r0, [r0, #1552]	; 0x610
    4cd0:	bx	lr

00004cd4 <btbb_piconet_set_clk_offset@@Base>:
    4cd4:	add	r0, r0, #4096	; 0x1000
    4cd8:	str	r1, [r0, #1552]	; 0x610
    4cdc:	bx	lr

00004ce0 <btbb_piconet_get_afh_map@@Base>:
    4ce0:	add	r0, r0, #12
    4ce4:	bx	lr

00004ce8 <btbb_piconet_set_channel_seen@@Base>:
    4ce8:	lsr	r3, r1, #3
    4cec:	add	r2, r0, r3
    4cf0:	ldrb	ip, [r2, #12]
    4cf4:	and	r1, r1, #7
    4cf8:	asr	r2, ip, r1
    4cfc:	tst	r2, #1
    4d00:	addeq	r2, r0, r3
    4d04:	moveq	r3, #1
    4d08:	orreq	r1, ip, r3, lsl r1
    4d0c:	strbeq	r1, [r2, #12]
    4d10:	ldrbeq	r2, [r0, #22]
    4d14:	addeq	r2, r2, r3
    4d18:	strbeq	r2, [r0, #22]
    4d1c:	moveq	r0, r3
    4d20:	movne	r0, #0
    4d24:	bx	lr

00004d28 <btbb_piconet_clear_channel_seen@@Base>:
    4d28:	lsr	r3, r1, #3
    4d2c:	add	r2, r0, r3
    4d30:	ldrb	ip, [r2, #12]
    4d34:	and	r1, r1, #7
    4d38:	asr	r2, ip, r1
    4d3c:	tst	r2, #1
    4d40:	addne	r2, r0, r3
    4d44:	movne	r3, #1
    4d48:	bicne	r1, ip, r3, lsl r1
    4d4c:	strbne	r1, [r2, #12]
    4d50:	ldrbne	r2, [r0, #22]
    4d54:	subne	r2, r2, #1
    4d58:	strbne	r2, [r0, #22]
    4d5c:	movne	r0, r3
    4d60:	moveq	r0, #0
    4d64:	bx	lr

00004d68 <btbb_piconet_get_channel_seen@@Base>:
    4d68:	cmp	r1, #78	; 0x4e
    4d6c:	addls	r0, r0, r1, lsr #3
    4d70:	ldrbls	r0, [r0, #12]
    4d74:	andls	r1, r1, #7
    4d78:	asrls	r0, r0, r1
    4d7c:	andls	r0, r0, #1
    4d80:	movhi	r0, #1
    4d84:	bx	lr

00004d88 <precalc@@Base>:
    4d88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4d8c:	mov	r6, r0
    4d90:	add	r5, r0, #56	; 0x38
    4d94:	mov	r4, #0
    4d98:	mov	r9, r4
    4d9c:	mov	r8, #11
    4da0:	ldr	r7, [pc, #124]	; 4e24 <precalc@@Base+0x9c>
    4da4:	b	4dec <precalc@@Base+0x64>
    4da8:	smull	r3, sl, r7, r4
    4dac:	asr	r3, r4, #31
    4db0:	rsb	sl, r3, sl, asr #5
    4db4:	add	r3, sl, sl, lsl #2
    4db8:	rsb	sl, sl, r3, lsl #4
    4dbc:	sub	sl, r4, sl
    4dc0:	uxtb	r1, sl
    4dc4:	mov	r0, r6
    4dc8:	bl	2224 <btbb_piconet_get_channel_seen@plt>
    4dcc:	cmp	r0, #0
    4dd0:	addne	r3, r9, #14
    4dd4:	strne	sl, [r6, r3, lsl #2]
    4dd8:	addne	r9, r9, #1
    4ddc:	add	r4, r4, #2
    4de0:	add	r5, r5, #4
    4de4:	cmp	r4, #158	; 0x9e
    4de8:	beq	4e20 <precalc@@Base+0x98>
    4dec:	mov	r1, r8
    4df0:	mov	r0, r6
    4df4:	bl	2248 <btbb_piconet_get_flag@plt>
    4df8:	cmp	r0, #0
    4dfc:	bne	4da8 <precalc@@Base+0x20>
    4e00:	smull	r2, r3, r7, r4
    4e04:	asr	r2, r4, #31
    4e08:	rsb	r3, r2, r3, asr #5
    4e0c:	add	r2, r3, r3, lsl #2
    4e10:	rsb	r3, r3, r2, lsl #4
    4e14:	sub	r3, r4, r3
    4e18:	str	r3, [r5]
    4e1c:	b	4ddc <precalc@@Base+0x54>
    4e20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4e24:	sbfxvs	r3, r5, #20, #19

00004e28 <address_precalc@@Base>:
    4e28:	push	{r4, r5, lr}
    4e2c:	asr	r3, r0, #23
    4e30:	and	r3, r3, #31
    4e34:	str	r3, [r1, #44]	; 0x2c
    4e38:	asr	r3, r0, #19
    4e3c:	and	r3, r3, #15
    4e40:	str	r3, [r1, #36]	; 0x24
    4e44:	asr	r5, r0, #4
    4e48:	asr	r4, r0, #3
    4e4c:	asr	lr, r0, #2
    4e50:	asr	ip, r0, #1
    4e54:	and	r2, r5, #16
    4e58:	and	r3, r4, #8
    4e5c:	orr	r2, r2, r3
    4e60:	and	r3, lr, #4
    4e64:	add	r2, r2, r3
    4e68:	and	r3, ip, #2
    4e6c:	add	r2, r2, r3
    4e70:	and	r3, r0, #1
    4e74:	add	r2, r2, r3
    4e78:	str	r2, [r1, #48]	; 0x30
    4e7c:	lsl	r3, r0, #13
    4e80:	lsr	r3, r3, #23
    4e84:	str	r3, [r1, #52]	; 0x34
    4e88:	asr	r2, r0, #7
    4e8c:	and	r2, r2, #64	; 0x40
    4e90:	asr	r3, r0, #6
    4e94:	and	r3, r3, #32
    4e98:	orr	r2, r2, r3
    4e9c:	asr	r0, r0, #5
    4ea0:	and	r3, r0, #16
    4ea4:	add	r3, r2, r3
    4ea8:	and	r5, r5, #8
    4eac:	add	r3, r3, r5
    4eb0:	and	r4, r4, #4
    4eb4:	add	r3, r3, r4
    4eb8:	and	lr, lr, #2
    4ebc:	add	r3, r3, lr
    4ec0:	and	ip, ip, #1
    4ec4:	add	r3, r3, ip
    4ec8:	str	r3, [r1, #40]	; 0x28
    4ecc:	pop	{r4, r5, pc}

00004ed0 <perm5@@Base>:
    4ed0:	push	{r4, r5, r6, r7, lr}
    4ed4:	sub	sp, sp, #196	; 0xc4
    4ed8:	mov	r4, r0
    4edc:	mov	r5, r1
    4ee0:	mov	r6, r2
    4ee4:	ldr	ip, [pc, #308]	; 5020 <perm5@@Base+0x150>
    4ee8:	add	ip, pc, ip
    4eec:	add	lr, sp, #60	; 0x3c
    4ef0:	mov	r7, ip
    4ef4:	ldm	r7!, {r0, r1, r2, r3}
    4ef8:	stmia	lr!, {r0, r1, r2, r3}
    4efc:	ldm	r7!, {r0, r1, r2, r3}
    4f00:	stmia	lr!, {r0, r1, r2, r3}
    4f04:	ldm	r7!, {r0, r1, r2, r3}
    4f08:	stmia	lr!, {r0, r1, r2, r3}
    4f0c:	ldm	r7, {r0, r1}
    4f10:	stm	lr, {r0, r1}
    4f14:	add	lr, sp, #4
    4f18:	add	ip, ip, #56	; 0x38
    4f1c:	ldm	ip!, {r0, r1, r2, r3}
    4f20:	stmia	lr!, {r0, r1, r2, r3}
    4f24:	ldm	ip!, {r0, r1, r2, r3}
    4f28:	stmia	lr!, {r0, r1, r2, r3}
    4f2c:	ldm	ip!, {r0, r1, r2, r3}
    4f30:	stmia	lr!, {r0, r1, r2, r3}
    4f34:	ldm	ip, {r0, r1}
    4f38:	stm	lr, {r0, r1}
    4f3c:	add	r1, sp, #112	; 0x70
    4f40:	mov	r3, #0
    4f44:	asr	r2, r6, r3
    4f48:	and	r2, r2, #1
    4f4c:	str	r2, [r1, #4]!
    4f50:	add	r3, r3, #1
    4f54:	cmp	r3, #9
    4f58:	bne	4f44 <perm5@@Base+0x74>
    4f5c:	add	r1, sp, #152	; 0x98
    4f60:	mov	r3, #0
    4f64:	asr	r2, r5, r3
    4f68:	and	r2, r2, #1
    4f6c:	str	r2, [r1], #4
    4f70:	add	r3, r3, #1
    4f74:	cmp	r3, #5
    4f78:	bne	4f64 <perm5@@Base+0x94>
    4f7c:	mov	r3, #0
    4f80:	add	r1, sp, #172	; 0xac
    4f84:	asr	r2, r4, r3
    4f88:	and	r2, r2, #1
    4f8c:	str	r2, [r1, r3, lsl #2]
    4f90:	add	r3, r3, #1
    4f94:	cmp	r3, #5
    4f98:	bne	4f84 <perm5@@Base+0xb4>
    4f9c:	add	r3, sp, #172	; 0xac
    4fa0:	add	ip, sp, #116	; 0x74
    4fa4:	mov	r2, #13
    4fa8:	add	r6, sp, #60	; 0x3c
    4fac:	add	r5, sp, #4
    4fb0:	b	4fc0 <perm5@@Base+0xf0>
    4fb4:	sub	r2, r2, #1
    4fb8:	cmp	r3, ip
    4fbc:	beq	4ff8 <perm5@@Base+0x128>
    4fc0:	ldr	r1, [r3, #-4]!
    4fc4:	cmp	r1, #0
    4fc8:	beq	4fb4 <perm5@@Base+0xe4>
    4fcc:	ldr	r0, [r6, r2, lsl #2]
    4fd0:	add	r1, sp, #192	; 0xc0
    4fd4:	add	r0, r1, r0, lsl #2
    4fd8:	ldr	lr, [r0, #-20]	; 0xffffffec
    4fdc:	ldr	r1, [r5, r2, lsl #2]
    4fe0:	add	r4, sp, #192	; 0xc0
    4fe4:	add	r1, r4, r1, lsl #2
    4fe8:	ldr	r4, [r1, #-20]	; 0xffffffec
    4fec:	str	r4, [r0, #-20]	; 0xffffffec
    4ff0:	str	lr, [r1, #-20]	; 0xffffffec
    4ff4:	b	4fb4 <perm5@@Base+0xe4>
    4ff8:	mov	r0, #0
    4ffc:	mov	r3, r0
    5000:	add	r1, sp, #172	; 0xac
    5004:	ldr	r2, [r1, r3, lsl #2]
    5008:	add	r0, r0, r2, lsl r3
    500c:	add	r3, r3, #1
    5010:	cmp	r3, #5
    5014:	bne	5004 <perm5@@Base+0x134>
    5018:	add	sp, sp, #196	; 0xc4
    501c:	pop	{r4, r5, r6, r7, pc}
    5020:	andeq	sp, r0, r8, lsr #13

00005024 <perm_table_init@@Base>:
    5024:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5028:	ldr	r3, [pc, #104]	; 5098 <perm_table_init@@Base+0x74>
    502c:	add	r3, pc, r3
    5030:	ldr	r2, [pc, #100]	; 509c <perm_table_init@@Base+0x78>
    5034:	ldr	r9, [r3, r2]
    5038:	sub	r9, r9, #1
    503c:	mov	r7, #0
    5040:	b	508c <perm_table_init@@Base+0x68>
    5044:	mov	r5, r8
    5048:	mov	r4, #0
    504c:	mov	r2, r4
    5050:	mov	r1, r6
    5054:	mov	r0, r7
    5058:	bl	2494 <perm5@plt>
    505c:	strb	r0, [r5, #1]!
    5060:	add	r4, r4, #1
    5064:	cmp	r4, #512	; 0x200
    5068:	bne	504c <perm_table_init@@Base+0x28>
    506c:	add	r6, r6, #1
    5070:	add	r8, r8, #512	; 0x200
    5074:	cmp	r6, #32
    5078:	bne	5044 <perm_table_init@@Base+0x20>
    507c:	add	r7, r7, #1
    5080:	add	r9, r9, #16384	; 0x4000
    5084:	cmp	r7, #32
    5088:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    508c:	mov	r8, r9
    5090:	mov	r6, #0
    5094:	b	5044 <perm_table_init@@Base+0x20>
    5098:	andeq	r3, r2, ip, asr #31
    509c:	andeq	r0, r0, ip, lsl #3

000050a0 <fast_perm@@Base>:
    50a0:	push	{r4, r5, r6, r7, r8, lr}
    50a4:	mov	r7, r0
    50a8:	mov	r5, r1
    50ac:	mov	r6, r2
    50b0:	ldr	r4, [pc, #68]	; 50fc <fast_perm@@Base+0x5c>
    50b4:	add	r4, pc, r4
    50b8:	ldr	r3, [pc, #64]	; 5100 <fast_perm@@Base+0x60>
    50bc:	ldr	r3, [r4, r3]
    50c0:	ldr	r3, [r3]
    50c4:	cmp	r3, #0
    50c8:	beq	50e4 <fast_perm@@Base+0x44>
    50cc:	ldr	r3, [pc, #48]	; 5104 <fast_perm@@Base+0x64>
    50d0:	ldr	r1, [r4, r3]
    50d4:	add	r5, r5, r7, lsl #5
    50d8:	add	r1, r1, r5, lsl #9
    50dc:	ldrb	r0, [r1, r6]
    50e0:	pop	{r4, r5, r6, r7, r8, pc}
    50e4:	bl	229c <perm_table_init@plt>
    50e8:	ldr	r3, [pc, #16]	; 5100 <fast_perm@@Base+0x60>
    50ec:	ldr	r3, [r4, r3]
    50f0:	mov	r2, #1
    50f4:	str	r2, [r3]
    50f8:	b	50cc <fast_perm@@Base+0x2c>
    50fc:	andeq	r3, r2, r4, asr #30
    5100:	muleq	r0, r0, r1
    5104:	andeq	r0, r0, ip, lsl #3

00005108 <gen_hop_pattern@@Base>:
    5108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    510c:	sub	sp, sp, #76	; 0x4c
    5110:	mov	fp, r0
    5114:	ldr	r0, [pc, #792]	; 5434 <gen_hop_pattern@@Base+0x32c>
    5118:	add	r0, pc, r0
    511c:	bl	2314 <puts@plt>
    5120:	mov	r0, #134217728	; 0x8000000
    5124:	bl	2320 <malloc@plt>
    5128:	str	r0, [fp, #372]	; 0x174
    512c:	mov	r0, fp
    5130:	bl	24dc <precalc@plt>
    5134:	ldrb	r3, [fp, #28]
    5138:	ldr	r0, [fp, #24]
    513c:	orr	r0, r0, r3, lsl #24
    5140:	mov	r1, fp
    5144:	bic	r0, r0, #-268435456	; 0xf0000000
    5148:	bl	241c <address_precalc@plt>
    514c:	mov	r3, #0
    5150:	str	r3, [sp, #16]
    5154:	str	r3, [sp, #12]
    5158:	str	r3, [sp, #44]	; 0x2c
    515c:	ldr	sl, [pc, #724]	; 5438 <gen_hop_pattern@@Base+0x330>
    5160:	ldr	r3, [sp, #44]	; 0x2c
    5164:	lsl	r2, r3, #2
    5168:	str	r2, [sp, #68]	; 0x44
    516c:	str	r3, [sp, #64]	; 0x40
    5170:	mov	r3, #0
    5174:	str	r3, [sp, #56]	; 0x38
    5178:	ldr	r3, [fp, #44]	; 0x2c
    517c:	ldr	r2, [sp, #56]	; 0x38
    5180:	eor	r3, r2, r3
    5184:	str	r3, [sp, #40]	; 0x28
    5188:	ldr	r3, [sp, #68]	; 0x44
    518c:	str	r3, [sp, #48]	; 0x30
    5190:	ldr	r3, [sp, #64]	; 0x40
    5194:	str	r3, [sp, #60]	; 0x3c
    5198:	mov	r3, #0
    519c:	str	r3, [sp, #52]	; 0x34
    51a0:	b	53ac <gen_hop_pattern@@Base+0x2a4>
    51a4:	ldr	r2, [fp, #372]	; 0x174
    51a8:	ldr	r0, [fp, #40]	; 0x28
    51ac:	add	r5, r5, r0
    51b0:	ldr	r3, [sp, #12]
    51b4:	add	r5, r5, r3
    51b8:	umull	r1, r3, sl, r5
    51bc:	lsr	r3, r3, #6
    51c0:	add	r1, r3, r3, lsl #2
    51c4:	rsb	r3, r3, r1, lsl #4
    51c8:	sub	r5, r5, r3
    51cc:	add	r5, r5, #14
    51d0:	ldr	r3, [fp, r5, lsl #2]
    51d4:	strb	r3, [r2, r6]
    51d8:	b	5290 <gen_hop_pattern@@Base+0x188>
    51dc:	ldr	r2, [fp, #372]	; 0x174
    51e0:	add	r2, r2, r6
    51e4:	ldr	r0, [fp, #40]	; 0x28
    51e8:	add	r4, r4, r0
    51ec:	ldr	r3, [sp, #20]
    51f0:	add	r4, r4, r3
    51f4:	umull	r1, r3, sl, r4
    51f8:	lsr	r3, r3, #6
    51fc:	add	r1, r3, r3, lsl #2
    5200:	rsb	r3, r3, r1, lsl #4
    5204:	sub	r4, r4, r3
    5208:	add	r4, r4, #14
    520c:	ldr	r3, [fp, r4, lsl #2]
    5210:	strb	r3, [r2, #1]
    5214:	add	r6, r6, #2
    5218:	add	r7, r7, #1
    521c:	cmp	r6, r8
    5220:	beq	52e8 <gen_hop_pattern@@Base+0x1e0>
    5224:	asr	r4, r7, #31
    5228:	lsr	r3, r4, #27
    522c:	add	r4, r7, r3
    5230:	and	r4, r4, #31
    5234:	sub	r4, r4, r3
    5238:	ldr	r3, [fp, #36]	; 0x24
    523c:	eor	r4, r4, r3
    5240:	ldr	r2, [sp]
    5244:	ldr	r1, [sp, #4]
    5248:	mov	r0, r4
    524c:	bl	2518 <fast_perm@plt>
    5250:	mov	r5, r0
    5254:	mov	r1, #11
    5258:	mov	r0, fp
    525c:	bl	2248 <btbb_piconet_get_flag@plt>
    5260:	cmp	r0, #0
    5264:	beq	51a4 <gen_hop_pattern@@Base+0x9c>
    5268:	ldr	r9, [fp, #372]	; 0x174
    526c:	ldr	r0, [fp, #40]	; 0x28
    5270:	add	r0, r5, r0
    5274:	ldrb	r1, [fp, #22]
    5278:	ldr	r3, [sp, #16]
    527c:	add	r0, r0, r3
    5280:	bl	fbfc <lell_pcapng_close@@Base+0x210>
    5284:	add	r1, r1, #14
    5288:	ldr	r3, [fp, r1, lsl #2]
    528c:	strb	r3, [r9, r6]
    5290:	ldr	r2, [sp]
    5294:	ldr	r1, [sp, #8]
    5298:	mov	r0, r4
    529c:	bl	2518 <fast_perm@plt>
    52a0:	mov	r4, r0
    52a4:	mov	r1, #11
    52a8:	mov	r0, fp
    52ac:	bl	2248 <btbb_piconet_get_flag@plt>
    52b0:	cmp	r0, #0
    52b4:	beq	51dc <gen_hop_pattern@@Base+0xd4>
    52b8:	ldr	r5, [fp, #372]	; 0x174
    52bc:	add	r5, r5, r6
    52c0:	ldr	r0, [fp, #40]	; 0x28
    52c4:	add	r0, r4, r0
    52c8:	ldrb	r1, [fp, #22]
    52cc:	ldr	r3, [sp, #24]
    52d0:	add	r0, r0, r3
    52d4:	bl	fbfc <lell_pcapng_close@@Base+0x210>
    52d8:	add	r1, r1, #14
    52dc:	ldr	r3, [fp, r1, lsl #2]
    52e0:	strb	r3, [r5, #1]
    52e4:	b	5214 <gen_hop_pattern@@Base+0x10c>
    52e8:	ldr	r3, [sp, #28]
    52ec:	add	r3, r3, #64	; 0x40
    52f0:	str	r3, [sp, #28]
    52f4:	ldr	r3, [sp, #36]	; 0x24
    52f8:	add	r3, r3, #16
    52fc:	mov	r2, r3
    5300:	str	r3, [sp, #36]	; 0x24
    5304:	umull	r1, r3, sl, r3
    5308:	lsr	r3, r3, #6
    530c:	mov	r1, r3
    5310:	add	r3, r3, r3, lsl #2
    5314:	rsb	r3, r1, r3, lsl #4
    5318:	sub	r3, r2, r3
    531c:	str	r3, [sp, #12]
    5320:	ldrb	r1, [fp, #22]
    5324:	mov	r0, r3
    5328:	bl	fbfc <lell_pcapng_close@@Base+0x210>
    532c:	str	r1, [sp, #16]
    5330:	ldr	r3, [sp, #32]
    5334:	add	r3, r3, #1
    5338:	str	r3, [sp, #32]
    533c:	cmp	r3, #512	; 0x200
    5340:	beq	5380 <gen_hop_pattern@@Base+0x278>
    5344:	ldr	r3, [fp, #52]	; 0x34
    5348:	ldr	r2, [sp, #32]
    534c:	eor	r3, r2, r3
    5350:	str	r3, [sp]
    5354:	ldr	r7, [sp, #40]	; 0x28
    5358:	ldr	r3, [sp, #28]
    535c:	add	r8, r3, #64	; 0x40
    5360:	mov	r6, r3
    5364:	ldr	r3, [sp, #12]
    5368:	add	r3, r3, #32
    536c:	str	r3, [sp, #20]
    5370:	ldr	r3, [sp, #16]
    5374:	add	r3, r3, #32
    5378:	str	r3, [sp, #24]
    537c:	b	5224 <gen_hop_pattern@@Base+0x11c>
    5380:	ldr	r3, [sp, #48]	; 0x30
    5384:	add	r3, r3, #32768	; 0x8000
    5388:	str	r3, [sp, #48]	; 0x30
    538c:	ldr	r3, [sp, #60]	; 0x3c
    5390:	add	r3, r3, #8192	; 0x2000
    5394:	str	r3, [sp, #60]	; 0x3c
    5398:	ldr	r3, [sp, #52]	; 0x34
    539c:	add	r3, r3, #1
    53a0:	str	r3, [sp, #52]	; 0x34
    53a4:	cmp	r3, #32
    53a8:	beq	53e0 <gen_hop_pattern@@Base+0x2d8>
    53ac:	ldr	r3, [fp, #48]	; 0x30
    53b0:	ldr	r2, [sp, #52]	; 0x34
    53b4:	eor	r3, r2, r3
    53b8:	str	r3, [sp, #4]
    53bc:	eor	r3, r3, #31
    53c0:	str	r3, [sp, #8]
    53c4:	ldr	r3, [sp, #48]	; 0x30
    53c8:	str	r3, [sp, #28]
    53cc:	ldr	r3, [sp, #60]	; 0x3c
    53d0:	str	r3, [sp, #36]	; 0x24
    53d4:	mov	r3, #0
    53d8:	str	r3, [sp, #32]
    53dc:	b	5344 <gen_hop_pattern@@Base+0x23c>
    53e0:	ldr	r3, [sp, #68]	; 0x44
    53e4:	add	r3, r3, #1048576	; 0x100000
    53e8:	str	r3, [sp, #68]	; 0x44
    53ec:	ldr	r3, [sp, #64]	; 0x40
    53f0:	add	r3, r3, #262144	; 0x40000
    53f4:	str	r3, [sp, #64]	; 0x40
    53f8:	ldr	r3, [sp, #56]	; 0x38
    53fc:	add	r3, r3, #1
    5400:	str	r3, [sp, #56]	; 0x38
    5404:	cmp	r3, #32
    5408:	bne	5178 <gen_hop_pattern@@Base+0x70>
    540c:	ldr	r3, [sp, #44]	; 0x2c
    5410:	add	r3, r3, #8388608	; 0x800000
    5414:	str	r3, [sp, #44]	; 0x2c
    5418:	cmp	r3, #33554432	; 0x2000000
    541c:	bne	5160 <gen_hop_pattern@@Base+0x58>
    5420:	ldr	r0, [pc, #20]	; 543c <gen_hop_pattern@@Base+0x334>
    5424:	add	r0, pc, r0
    5428:	bl	2314 <puts@plt>
    542c:	add	sp, sp, #76	; 0x4c
    5430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5434:	andeq	sp, r0, r8, ror #9
    5438:	svcgt	0x006474a9
    543c:	andeq	sp, r0, r4, lsl #4

00005440 <get_hop_pattern@@Base>:
    5440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5444:	sub	sp, sp, #20
    5448:	mov	r8, r0
    544c:	mov	r1, #11
    5450:	bl	2248 <btbb_piconet_get_flag@plt>
    5454:	mov	r2, #0
    5458:	ldrb	r3, [r8, #22]
    545c:	ldr	r1, [r8, #24]
    5460:	orr	r6, r2, r1
    5464:	mov	r7, r3
    5468:	ldrb	r3, [r8, #28]
    546c:	lsl	r3, r3, #24
    5470:	orr	r6, r6, r3
    5474:	lsl	r5, r0, #7
    5478:	orr	r6, r6, r2
    547c:	orr	r7, r7, r5
    5480:	strd	r6, [sp, #8]
    5484:	ldr	r3, [pc, #1352]	; 59d4 <get_hop_pattern@@Base+0x594>
    5488:	add	r3, pc, r3
    548c:	ldr	r1, [r3, #4]
    5490:	cmp	r1, r2
    5494:	beq	55a4 <get_hop_pattern@@Base+0x164>
    5498:	ldrb	r2, [sp, #8]
    549c:	ldr	r3, [pc, #1332]	; 59d8 <get_hop_pattern@@Base+0x598>
    54a0:	add	r3, r2, r3
    54a4:	ldrb	r2, [sp, #11]
    54a8:	add	r3, r3, r2, lsl #24
    54ac:	ldrb	r2, [sp, #10]
    54b0:	add	r3, r3, r2, lsl #16
    54b4:	ldrb	r2, [sp, #9]
    54b8:	add	r3, r3, r2, lsl #8
    54bc:	ldr	r0, [pc, #1304]	; 59dc <get_hop_pattern@@Base+0x59c>
    54c0:	eor	r0, r0, r3
    54c4:	ldr	r2, [pc, #1300]	; 59e0 <get_hop_pattern@@Base+0x5a0>
    54c8:	sub	r2, r2, r0
    54cc:	eor	r2, r2, r0, lsl #8
    54d0:	ldr	r3, [pc, #1292]	; 59e4 <get_hop_pattern@@Base+0x5a4>
    54d4:	sub	r3, r3, r0
    54d8:	sub	r3, r3, r2
    54dc:	eor	r3, r3, r2, lsr #13
    54e0:	sub	r0, r0, r2
    54e4:	sub	r0, r0, r3
    54e8:	eor	r0, r0, r3, lsr #12
    54ec:	sub	r2, r2, r3
    54f0:	sub	r2, r2, r0
    54f4:	eor	r2, r2, r0, lsl #16
    54f8:	sub	r3, r3, r0
    54fc:	sub	r3, r3, r2
    5500:	eor	r3, r3, r2, lsr #5
    5504:	sub	r0, r0, r2
    5508:	sub	r0, r0, r3
    550c:	eor	r0, r0, r3, lsr #3
    5510:	sub	r2, r2, r3
    5514:	sub	r2, r2, r0
    5518:	eor	r2, r2, r0, lsl #10
    551c:	sub	r3, r3, r0
    5520:	sub	r3, r3, r2
    5524:	ldr	r5, [r1, #12]
    5528:	eor	r3, r3, r2, lsr #15
    552c:	ldr	r2, [r5, #4]
    5530:	sub	r2, r2, #1
    5534:	and	r3, r3, r2
    5538:	ldr	r2, [r5]
    553c:	add	r3, r3, r3, lsl #1
    5540:	ldr	r4, [r2, r3, lsl #2]
    5544:	cmp	r4, #0
    5548:	beq	55a4 <get_hop_pattern@@Base+0x164>
    554c:	ldr	r3, [r5, #20]
    5550:	sub	r4, r4, r3
    5554:	add	sl, sp, #8
    5558:	mov	r9, #4
    555c:	b	558c <get_hop_pattern@@Base+0x14c>
    5560:	mov	r2, r9
    5564:	mov	r1, sl
    5568:	ldr	r0, [r4, #32]
    556c:	bl	220c <memcmp@plt>
    5570:	cmp	r0, #0
    5574:	beq	59b8 <get_hop_pattern@@Base+0x578>
    5578:	ldr	r4, [r4, #28]
    557c:	cmp	r4, #0
    5580:	beq	55a4 <get_hop_pattern@@Base+0x164>
    5584:	ldr	r3, [r5, #20]
    5588:	sub	r4, r4, r3
    558c:	cmp	r4, #0
    5590:	beq	55a4 <get_hop_pattern@@Base+0x164>
    5594:	ldr	r3, [r4, #36]	; 0x24
    5598:	cmp	r3, #4
    559c:	bne	5578 <get_hop_pattern@@Base+0x138>
    55a0:	b	5560 <get_hop_pattern@@Base+0x120>
    55a4:	mov	r0, r8
    55a8:	bl	2128 <gen_hop_pattern@plt>
    55ac:	mov	r0, #48	; 0x30
    55b0:	bl	2320 <malloc@plt>
    55b4:	mov	r9, r0
    55b8:	strd	r6, [r0]
    55bc:	ldr	r3, [r8, #372]	; 0x174
    55c0:	str	r3, [r0, #8]
    55c4:	mov	r3, #0
    55c8:	str	r3, [r0, #20]
    55cc:	str	r0, [r9, #32]
    55d0:	mov	r3, #4
    55d4:	str	r3, [r0, #36]	; 0x24
    55d8:	ldr	r3, [pc, #1032]	; 59e8 <get_hop_pattern@@Base+0x5a8>
    55dc:	add	r3, pc, r3
    55e0:	ldr	r3, [r3, #4]
    55e4:	cmp	r3, #0
    55e8:	beq	57f4 <get_hop_pattern@@Base+0x3b4>
    55ec:	ldr	r2, [r3, #12]
    55f0:	ldr	r2, [r2, #16]
    55f4:	str	r0, [r2, #8]
    55f8:	ldr	r1, [r3, #12]
    55fc:	ldr	r2, [r1, #16]
    5600:	ldr	r1, [r1, #20]
    5604:	sub	r2, r2, r1
    5608:	str	r2, [r0, #16]
    560c:	ldr	r3, [r3, #12]
    5610:	add	r2, r0, #12
    5614:	str	r2, [r3, #16]
    5618:	ldr	r3, [pc, #972]	; 59ec <get_hop_pattern@@Base+0x5ac>
    561c:	add	r3, pc, r3
    5620:	ldr	r1, [r3, #4]
    5624:	ldr	r2, [r1, #12]
    5628:	ldr	r3, [r2, #12]
    562c:	add	r3, r3, #1
    5630:	str	r3, [r2, #12]
    5634:	ldr	r3, [r1, #12]
    5638:	str	r3, [r9, #12]
    563c:	ldrb	r2, [r9]
    5640:	ldr	r3, [pc, #912]	; 59d8 <get_hop_pattern@@Base+0x598>
    5644:	add	r3, r2, r3
    5648:	ldrb	r2, [r9, #3]
    564c:	add	r3, r3, r2, lsl #24
    5650:	ldrb	r2, [r9, #2]
    5654:	add	r3, r3, r2, lsl #16
    5658:	ldrb	r2, [r9, #1]
    565c:	add	r3, r3, r2, lsl #8
    5660:	ldr	r0, [pc, #884]	; 59dc <get_hop_pattern@@Base+0x59c>
    5664:	eor	r0, r0, r3
    5668:	ldr	r2, [pc, #880]	; 59e0 <get_hop_pattern@@Base+0x5a0>
    566c:	sub	r2, r2, r0
    5670:	eor	r2, r2, r0, lsl #8
    5674:	ldr	r3, [pc, #872]	; 59e4 <get_hop_pattern@@Base+0x5a4>
    5678:	sub	r3, r3, r0
    567c:	sub	r3, r3, r2
    5680:	eor	r3, r3, r2, lsr #13
    5684:	sub	r0, r0, r2
    5688:	sub	r0, r0, r3
    568c:	eor	r0, r0, r3, lsr #12
    5690:	sub	r2, r2, r3
    5694:	sub	r2, r2, r0
    5698:	eor	r2, r2, r0, lsl #16
    569c:	sub	r3, r3, r0
    56a0:	sub	r3, r3, r2
    56a4:	eor	r3, r3, r2, lsr #5
    56a8:	sub	r0, r0, r2
    56ac:	sub	r0, r0, r3
    56b0:	eor	r0, r0, r3, lsr #3
    56b4:	sub	r2, r2, r3
    56b8:	sub	r2, r2, r0
    56bc:	eor	r2, r2, r0, lsl #10
    56c0:	sub	r3, r3, r0
    56c4:	sub	r3, r3, r2
    56c8:	eor	r3, r3, r2, lsr #15
    56cc:	str	r3, [r9, #40]	; 0x28
    56d0:	ldr	r0, [r1, #12]
    56d4:	ldr	r2, [r0, #4]
    56d8:	sub	r2, r2, #1
    56dc:	and	r3, r3, r2
    56e0:	add	r3, r3, r3, lsl #1
    56e4:	lsl	r3, r3, #2
    56e8:	ldr	r2, [r0]
    56ec:	add	r2, r2, r3
    56f0:	ldr	r0, [r2, #4]
    56f4:	add	r0, r0, #1
    56f8:	str	r0, [r2, #4]
    56fc:	ldr	r2, [r1, #12]
    5700:	ldr	r2, [r2]
    5704:	ldr	r2, [r2, r3]
    5708:	str	r2, [r9, #28]
    570c:	mov	r2, #0
    5710:	str	r2, [r9, #24]
    5714:	ldr	r2, [r1, #12]
    5718:	ldr	r2, [r2]
    571c:	ldr	r2, [r2, r3]
    5720:	cmp	r2, #0
    5724:	addne	r0, r9, #12
    5728:	strne	r0, [r2, #12]
    572c:	ldr	r2, [r1, #12]
    5730:	ldr	r2, [r2]
    5734:	add	r0, r9, #12
    5738:	str	r0, [r2, r3]
    573c:	ldr	r2, [r1, #12]
    5740:	ldr	r2, [r2]
    5744:	add	r2, r2, r3
    5748:	ldr	r3, [r2, #8]
    574c:	add	r3, r3, #1
    5750:	add	r3, r3, r3, lsl #2
    5754:	ldr	r2, [r2, #4]
    5758:	cmp	r2, r3, lsl #1
    575c:	bcc	59cc <get_hop_pattern@@Base+0x58c>
    5760:	ldr	r4, [r9, #12]
    5764:	ldr	r3, [r4, #36]	; 0x24
    5768:	cmp	r3, #1
    576c:	beq	59cc <get_hop_pattern@@Base+0x58c>
    5770:	ldr	r5, [r4, #4]
    5774:	add	r5, r5, r5, lsl #1
    5778:	lsl	r5, r5, #3
    577c:	mov	r0, r5
    5780:	bl	2320 <malloc@plt>
    5784:	subs	r6, r0, #0
    5788:	beq	5888 <get_hop_pattern@@Base+0x448>
    578c:	mov	r2, r5
    5790:	mov	r1, #0
    5794:	mov	r0, r6
    5798:	bl	2428 <memset@plt>
    579c:	ldr	r1, [r4, #12]
    57a0:	ldr	r3, [r4, #4]
    57a4:	lsl	r3, r3, #1
    57a8:	sub	r3, r3, #1
    57ac:	tst	r3, r1
    57b0:	movne	r3, #1
    57b4:	moveq	r3, #0
    57b8:	ldr	r2, [r4, #8]
    57bc:	add	r2, r2, #1
    57c0:	add	r3, r3, r1, lsr r2
    57c4:	str	r3, [r4, #24]
    57c8:	ldr	r3, [r9, #12]
    57cc:	mov	r2, #0
    57d0:	str	r2, [r3, #28]
    57d4:	ldr	r3, [r9, #12]
    57d8:	ldr	r2, [r3, #4]
    57dc:	cmp	r2, #0
    57e0:	beq	5950 <get_hop_pattern@@Base+0x510>
    57e4:	mov	fp, #0
    57e8:	str	fp, [sp, #4]
    57ec:	mov	sl, fp
    57f0:	b	593c <get_hop_pattern@@Base+0x4fc>
    57f4:	ldr	r3, [pc, #500]	; 59f0 <get_hop_pattern@@Base+0x5b0>
    57f8:	add	r3, pc, r3
    57fc:	str	r0, [r3, #4]
    5800:	mov	r3, #0
    5804:	str	r3, [r0, #16]
    5808:	mov	r0, #44	; 0x2c
    580c:	bl	2320 <malloc@plt>
    5810:	mov	r4, r0
    5814:	str	r0, [r9, #12]
    5818:	cmp	r0, #0
    581c:	beq	5878 <get_hop_pattern@@Base+0x438>
    5820:	mov	r2, #44	; 0x2c
    5824:	mov	r1, #0
    5828:	bl	2428 <memset@plt>
    582c:	add	r3, r9, #12
    5830:	str	r3, [r4, #16]
    5834:	mov	r3, #32
    5838:	str	r3, [r4, #4]
    583c:	mov	r3, #5
    5840:	str	r3, [r4, #8]
    5844:	mov	r3, #12
    5848:	str	r3, [r4, #20]
    584c:	mov	r0, #384	; 0x180
    5850:	bl	2320 <malloc@plt>
    5854:	str	r0, [r4]
    5858:	cmp	r0, #0
    585c:	beq	5880 <get_hop_pattern@@Base+0x440>
    5860:	mov	r2, #384	; 0x180
    5864:	mov	r1, #0
    5868:	bl	2428 <memset@plt>
    586c:	ldr	r3, [pc, #384]	; 59f4 <get_hop_pattern@@Base+0x5b4>
    5870:	str	r3, [r4, #40]	; 0x28
    5874:	b	5618 <get_hop_pattern@@Base+0x1d8>
    5878:	mvn	r0, #0
    587c:	bl	2374 <exit@plt>
    5880:	mvn	r0, #0
    5884:	bl	2374 <exit@plt>
    5888:	mvn	r0, #0
    588c:	bl	2374 <exit@plt>
    5890:	str	sl, [r5, #12]
    5894:	ldr	r3, [r6, r4, lsl #2]
    5898:	str	r3, [r5, #16]
    589c:	ldr	r3, [r6, r4, lsl #2]
    58a0:	cmp	r3, #0
    58a4:	strne	r5, [r3, #12]
    58a8:	str	r5, [r6, r4, lsl #2]
    58ac:	mov	r5, r8
    58b0:	cmp	r8, #0
    58b4:	beq	5918 <get_hop_pattern@@Base+0x4d8>
    58b8:	ldr	r8, [r5, #16]
    58bc:	ldr	r2, [r9, #12]
    58c0:	ldr	r4, [r2, #4]
    58c4:	lsl	r4, r4, #1
    58c8:	sub	r4, r4, #1
    58cc:	ldr	r3, [r5, #28]
    58d0:	and	r4, r4, r3
    58d4:	add	r4, r4, r4, lsl #1
    58d8:	add	r7, r6, r4, lsl #2
    58dc:	ldr	r3, [r7, #4]
    58e0:	add	r3, r3, #1
    58e4:	str	r3, [r7, #4]
    58e8:	ldr	r1, [r2, #24]
    58ec:	cmp	r3, r1
    58f0:	bls	5890 <get_hop_pattern@@Base+0x450>
    58f4:	ldr	r3, [r2, #28]
    58f8:	add	r3, r3, #1
    58fc:	str	r3, [r2, #28]
    5900:	ldr	r3, [r9, #12]
    5904:	ldr	r1, [r3, #24]
    5908:	ldr	r0, [r7, #4]
    590c:	bl	fa10 <lell_pcapng_close@@Base+0x24>
    5910:	str	r0, [r7, #8]
    5914:	b	5890 <get_hop_pattern@@Base+0x450>
    5918:	ldr	r3, [sp, #4]
    591c:	add	r3, r3, #1
    5920:	mov	r1, r3
    5924:	str	r3, [sp, #4]
    5928:	ldr	r3, [r9, #12]
    592c:	add	fp, fp, #12
    5930:	ldr	r2, [r3, #4]
    5934:	cmp	r2, r1
    5938:	bls	5950 <get_hop_pattern@@Base+0x510>
    593c:	ldr	r3, [r3]
    5940:	ldr	r5, [r3, fp]
    5944:	cmp	r5, #0
    5948:	bne	58b8 <get_hop_pattern@@Base+0x478>
    594c:	b	5918 <get_hop_pattern@@Base+0x4d8>
    5950:	ldr	r0, [r3]
    5954:	bl	21a0 <free@plt>
    5958:	ldr	r2, [r9, #12]
    595c:	ldr	r3, [r2, #4]
    5960:	lsl	r3, r3, #1
    5964:	str	r3, [r2, #4]
    5968:	ldr	r2, [r9, #12]
    596c:	ldr	r3, [r2, #8]
    5970:	add	r3, r3, #1
    5974:	str	r3, [r2, #8]
    5978:	ldr	r3, [r9, #12]
    597c:	str	r6, [r3]
    5980:	ldr	r3, [r9, #12]
    5984:	ldr	r1, [r3, #12]
    5988:	ldr	r2, [r3, #28]
    598c:	cmp	r2, r1, lsr #1
    5990:	ldrhi	r2, [r3, #32]
    5994:	addhi	r2, r2, #1
    5998:	movls	r2, #0
    599c:	str	r2, [r3, #32]
    59a0:	ldr	r3, [r9, #12]
    59a4:	ldr	r2, [r3, #32]
    59a8:	cmp	r2, #1
    59ac:	movhi	r2, #1
    59b0:	strhi	r2, [r3, #36]	; 0x24
    59b4:	b	59cc <get_hop_pattern@@Base+0x58c>
    59b8:	ldr	r0, [pc, #56]	; 59f8 <get_hop_pattern@@Base+0x5b8>
    59bc:	add	r0, pc, r0
    59c0:	bl	2314 <puts@plt>
    59c4:	ldr	r3, [r4, #8]
    59c8:	str	r3, [r8, #372]	; 0x174
    59cc:	add	sp, sp, #20
    59d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    59d4:	andeq	r3, r2, r4, lsr #26
    59d8:	tsteq	r2, sp, lsl #2
    59dc:	andeq	pc, r7, sp, ror #14
    59e0:	svcls	0x0049bac6
    59e4:	mcr2	14, 7, fp, cr13, cr3, {7}
    59e8:	ldrdeq	r3, [r2], -r0
    59ec:	muleq	r2, r0, fp
    59f0:			; <UNDEFINED> instruction: 0x000239b4
    59f4:	andsge	r1, r1, r1, ror #31
    59f8:	andeq	ip, r0, ip, lsl #25

000059fc <btbb_piconet_set_afh_map@@Base>:
    59fc:	push	{r4, r5, r6, r7, r8, lr}
    5a00:	mov	r5, r0
    5a04:	mov	r3, #0
    5a08:	strb	r3, [r0, #22]
    5a0c:	sub	r6, r1, #1
    5a10:	add	r4, r0, #11
    5a14:	add	r7, r0, #21
    5a18:	ldrb	r0, [r6, #1]!
    5a1c:	strb	r0, [r4, #1]!
    5a20:	bl	2134 <count_bits@plt>
    5a24:	ldrb	r3, [r5, #22]
    5a28:	add	r0, r3, r0
    5a2c:	strb	r0, [r5, #22]
    5a30:	cmp	r4, r7
    5a34:	bne	5a18 <btbb_piconet_set_afh_map@@Base+0x1c>
    5a38:	mov	r1, #2
    5a3c:	mov	r0, r5
    5a40:	bl	2248 <btbb_piconet_get_flag@plt>
    5a44:	cmp	r0, #0
    5a48:	popeq	{r4, r5, r6, r7, r8, pc}
    5a4c:	mov	r0, r5
    5a50:	bl	2308 <get_hop_pattern@plt>
    5a54:	pop	{r4, r5, r6, r7, r8, pc}

00005a58 <single_hop@@Base>:
    5a58:	push	{r4, r5, r6, r7, r8, lr}
    5a5c:	mov	r5, r1
    5a60:	asr	r3, r0, #1
    5a64:	and	r3, r3, #1
    5a68:	lsl	r7, r3, #5
    5a6c:	asr	r4, r0, #3
    5a70:	bic	r4, r4, #-33554432	; 0xfe000000
    5a74:	bic	r4, r4, #15
    5a78:	ldr	r2, [r1, #52]	; 0x34
    5a7c:	eor	r2, r2, r0, asr #7
    5a80:	lsl	r2, r2, #23
    5a84:	ldr	ip, [r1, #48]	; 0x30
    5a88:	eor	ip, ip, r0, asr #16
    5a8c:	and	ip, ip, #31
    5a90:	sub	r1, r7, r3
    5a94:	ldr	r3, [r5, #44]	; 0x2c
    5a98:	eor	r3, r3, r0, asr #21
    5a9c:	add	r0, r3, r0, lsr #2
    5aa0:	and	r0, r0, #31
    5aa4:	ldr	r3, [r5, #36]	; 0x24
    5aa8:	lsr	r2, r2, #23
    5aac:	eor	r1, r1, ip
    5ab0:	eor	r0, r0, r3
    5ab4:	bl	2518 <fast_perm@plt>
    5ab8:	mov	r6, r0
    5abc:	mov	r1, #11
    5ac0:	mov	r0, r5
    5ac4:	bl	2248 <btbb_piconet_get_flag@plt>
    5ac8:	cmp	r0, #0
    5acc:	bne	5b1c <single_hop@@Base+0xc4>
    5ad0:	ldr	r3, [r5, #40]	; 0x28
    5ad4:	add	r6, r6, r3
    5ad8:	ldr	r3, [pc, #112]	; 5b50 <single_hop@@Base+0xf8>
    5adc:	umull	r1, r2, r3, r4
    5ae0:	lsr	r2, r2, #6
    5ae4:	add	r1, r2, r2, lsl #2
    5ae8:	rsb	r2, r2, r1, lsl #4
    5aec:	sub	r4, r4, r2
    5af0:	add	r7, r4, r7
    5af4:	add	r6, r6, r7
    5af8:	umull	r2, r3, r3, r6
    5afc:	lsr	r3, r3, #6
    5b00:	add	r2, r3, r3, lsl #2
    5b04:	rsb	r3, r3, r2, lsl #4
    5b08:	sub	r6, r6, r3
    5b0c:	add	r6, r6, #14
    5b10:	ldr	r0, [r5, r6, lsl #2]
    5b14:	uxtb	r0, r0
    5b18:	pop	{r4, r5, r6, r7, r8, pc}
    5b1c:	ldrb	r8, [r5, #22]
    5b20:	ldr	r3, [r5, #40]	; 0x28
    5b24:	add	r6, r6, r3
    5b28:	mov	r1, r8
    5b2c:	mov	r0, r4
    5b30:	bl	fbfc <lell_pcapng_close@@Base+0x210>
    5b34:	add	r0, r1, r7
    5b38:	mov	r1, r8
    5b3c:	add	r0, r6, r0
    5b40:	bl	fbfc <lell_pcapng_close@@Base+0x210>
    5b44:	add	r1, r1, #14
    5b48:	ldr	r0, [r5, r1, lsl #2]
    5b4c:	b	5b14 <single_hop@@Base+0xbc>
    5b50:	svcgt	0x006474a9

00005b54 <hop@@Base>:
    5b54:	ldr	r3, [r1, #372]	; 0x174
    5b58:	ldrb	r0, [r3, r0]
    5b5c:	bx	lr

00005b60 <btbb_init_hop_reversal@@Base>:
    5b60:	push	{r4, r5, r6, lr}
    5b64:	mov	r5, r0
    5b68:	mov	r4, r1
    5b6c:	mov	r0, r1
    5b70:	bl	2308 <get_hop_pattern@plt>
    5b74:	ldr	r3, [pc, #216]	; 5c54 <btbb_init_hop_reversal@@Base+0xf4>
    5b78:	ldr	r0, [pc, #216]	; 5c58 <btbb_init_hop_reversal@@Base+0xf8>
    5b7c:	cmp	r5, #0
    5b80:	moveq	r0, r3
    5b84:	lsl	r0, r0, #2
    5b88:	bl	2320 <malloc@plt>
    5b8c:	str	r0, [r4, #32]
    5b90:	add	r3, r4, #4096	; 0x1000
    5b94:	ldrb	r0, [r3, #552]	; 0x228
    5b98:	ldr	r1, [r3, #1552]	; 0x610
    5b9c:	ldr	r3, [r3, #1556]	; 0x614
    5ba0:	add	r1, r1, r3
    5ba4:	and	r1, r1, #63	; 0x3f
    5ba8:	mov	ip, #0
    5bac:	ldr	lr, [pc, #168]	; 5c5c <btbb_init_hop_reversal@@Base+0xfc>
    5bb0:	ldr	r3, [r4, #8]
    5bb4:	cmp	r3, #0
    5bb8:	ldr	r3, [r4, #372]	; 0x174
    5bbc:	ldrb	r3, [r3, r1]
    5bc0:	addne	r3, r3, #24
    5bc4:	smullne	r2, r6, lr, r3
    5bc8:	asrne	r2, r3, #31
    5bcc:	rsbne	r2, r2, r6, asr #3
    5bd0:	addne	r2, r2, r2, lsl #2
    5bd4:	addne	r2, r2, r2, lsl #2
    5bd8:	subne	r3, r3, r2
    5bdc:	addne	r3, r3, #26
    5be0:	uxtbne	r3, r3
    5be4:	cmp	r0, r3
    5be8:	ldreq	r3, [r4, #32]
    5bec:	streq	r1, [r3, ip, lsl #2]
    5bf0:	addeq	ip, ip, #1
    5bf4:	add	r1, r1, #64	; 0x40
    5bf8:	cmn	r1, #-134217727	; 0xf8000001
    5bfc:	ble	5bb0 <btbb_init_hop_reversal@@Base+0x50>
    5c00:	str	ip, [r4, #376]	; 0x178
    5c04:	mov	r6, #0
    5c08:	str	r6, [r4, #388]	; 0x184
    5c0c:	mov	r2, #1
    5c10:	mov	r1, #9
    5c14:	mov	r0, r4
    5c18:	bl	226c <btbb_piconet_set_flag@plt>
    5c1c:	mov	r2, r6
    5c20:	mov	r1, #5
    5c24:	mov	r0, r4
    5c28:	bl	226c <btbb_piconet_set_flag@plt>
    5c2c:	mov	r2, r5
    5c30:	mov	r1, #13
    5c34:	mov	r0, r4
    5c38:	bl	226c <btbb_piconet_set_flag@plt>
    5c3c:	ldr	r1, [r4, #376]	; 0x178
    5c40:	ldr	r0, [pc, #24]	; 5c60 <btbb_init_hop_reversal@@Base+0x100>
    5c44:	add	r0, pc, r0
    5c48:	bl	2158 <printf@plt>
    5c4c:	ldr	r0, [r4, #376]	; 0x178
    5c50:	pop	{r4, r5, r6, pc}
    5c54:	andeq	ip, r0, r4, ror #30
    5c58:	andeq	r8, r2, ip, asr pc
    5c5c:	mvnpl	r8, pc, lsl r5
    5c60:	andeq	ip, r0, r8, lsr #20

00005c64 <btbb_winnow@@Base>:
    5c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5c68:	sub	sp, sp, #12
    5c6c:	ldr	r3, [r0, #388]	; 0x184
    5c70:	ldr	r2, [r0, #380]	; 0x17c
    5c74:	cmp	r3, r2
    5c78:	ldrge	r5, [r0, #376]	; 0x178
    5c7c:	bge	5e24 <btbb_winnow@@Base+0x1c0>
    5c80:	mov	r4, r0
    5c84:	ldr	r8, [pc, #420]	; 5e30 <btbb_winnow@@Base+0x1cc>
    5c88:	mov	fp, #12
    5c8c:	ldr	r2, [pc, #416]	; 5e34 <btbb_winnow@@Base+0x1d0>
    5c90:	add	r2, pc, r2
    5c94:	str	r2, [sp, #4]
    5c98:	b	5cf4 <btbb_winnow@@Base+0x90>
    5c9c:	ldr	r2, [r4, #32]
    5ca0:	add	r1, r4, #4096	; 0x1000
    5ca4:	ldr	r0, [r2]
    5ca8:	ldr	r3, [r1, #1556]	; 0x614
    5cac:	lsl	r3, r3, #1
    5cb0:	rsb	r3, r3, r0, lsl #1
    5cb4:	str	r3, [r1, #1552]	; 0x610
    5cb8:	ldr	r1, [r2]
    5cbc:	ldr	r0, [pc, #372]	; 5e38 <btbb_winnow@@Base+0x1d4>
    5cc0:	add	r0, pc, r0
    5cc4:	bl	2158 <printf@plt>
    5cc8:	mov	r2, #1
    5ccc:	mov	r1, #5
    5cd0:	mov	r0, r4
    5cd4:	bl	226c <btbb_piconet_set_flag@plt>
    5cd8:	b	5e24 <btbb_winnow@@Base+0x1c0>
    5cdc:	ldr	r3, [r4, #388]	; 0x184
    5ce0:	add	r3, r3, #1
    5ce4:	str	r3, [r4, #388]	; 0x184
    5ce8:	ldr	r2, [r4, #380]	; 0x17c
    5cec:	cmp	r2, r3
    5cf0:	ble	5e24 <btbb_winnow@@Base+0x1c0>
    5cf4:	add	r2, r3, #162	; 0xa2
    5cf8:	ldr	r7, [r4, r2, lsl #2]
    5cfc:	add	r3, r4, r3
    5d00:	add	r3, r3, #4608	; 0x1200
    5d04:	ldrb	r6, [r3, #40]	; 0x28
    5d08:	ldr	r3, [r4, #376]	; 0x178
    5d0c:	cmp	r3, #0
    5d10:	ble	5e10 <btbb_winnow@@Base+0x1ac>
    5d14:	mov	r2, #0
    5d18:	mov	r5, r2
    5d1c:	mov	r1, r2
    5d20:	ldr	r3, [r4, #8]
    5d24:	cmp	r3, #0
    5d28:	ldr	r3, [r4, #32]
    5d2c:	ldr	r3, [r3, r2]
    5d30:	add	r3, r7, r3
    5d34:	bic	r3, r3, #-134217728	; 0xf8000000
    5d38:	ldr	r0, [r4, #372]	; 0x174
    5d3c:	ldrb	r3, [r0, r3]
    5d40:	addne	r3, r3, #24
    5d44:	smullne	r0, ip, r8, r3
    5d48:	asrne	r0, r3, #31
    5d4c:	rsbne	r0, r0, ip, asr #3
    5d50:	addne	r0, r0, r0, lsl #2
    5d54:	addne	r0, r0, r0, lsl #2
    5d58:	subne	r3, r3, r0
    5d5c:	addne	r3, r3, #26
    5d60:	uxtbne	r3, r3
    5d64:	cmp	r6, r3
    5d68:	ldreq	r3, [r4, #32]
    5d6c:	ldreq	r0, [r3, r2]
    5d70:	streq	r0, [r3, r5, lsl #2]
    5d74:	addeq	r5, r5, #1
    5d78:	add	r1, r1, #1
    5d7c:	add	r2, r2, #4
    5d80:	ldr	r3, [r4, #376]	; 0x178
    5d84:	cmp	r1, r3
    5d88:	blt	5d20 <btbb_winnow@@Base+0xbc>
    5d8c:	str	r5, [r4, #376]	; 0x178
    5d90:	cmp	r5, #1
    5d94:	beq	5c9c <btbb_winnow@@Base+0x38>
    5d98:	cmp	r5, #0
    5d9c:	beq	5e18 <btbb_winnow@@Base+0x1b4>
    5da0:	cmp	r5, #1
    5da4:	ble	5e24 <btbb_winnow@@Base+0x1c0>
    5da8:	ldr	r3, [r4, #380]	; 0x17c
    5dac:	cmp	r3, #0
    5db0:	ble	5cdc <btbb_winnow@@Base+0x78>
    5db4:	ldr	r2, [r4, #388]	; 0x184
    5db8:	sub	r3, r2, #1
    5dbc:	add	r2, r2, #161	; 0xa1
    5dc0:	ldr	r9, [r4, r2, lsl #2]
    5dc4:	add	r3, r4, r3
    5dc8:	add	r3, r3, #4608	; 0x1200
    5dcc:	ldrb	sl, [r3, #40]	; 0x28
    5dd0:	mov	r1, fp
    5dd4:	mov	r0, r4
    5dd8:	bl	2248 <btbb_piconet_get_flag@plt>
    5ddc:	cmp	r0, #0
    5de0:	bne	5cdc <btbb_winnow@@Base+0x78>
    5de4:	add	r9, r9, #1
    5de8:	cmp	r9, r7
    5dec:	cmpeq	r6, sl
    5df0:	bne	5cdc <btbb_winnow@@Base+0x78>
    5df4:	mov	r2, #1
    5df8:	mov	r1, fp
    5dfc:	mov	r0, r4
    5e00:	bl	226c <btbb_piconet_set_flag@plt>
    5e04:	ldr	r0, [sp, #4]
    5e08:	bl	2314 <puts@plt>
    5e0c:	b	5cdc <btbb_winnow@@Base+0x78>
    5e10:	mov	r3, #0
    5e14:	str	r3, [r4, #376]	; 0x178
    5e18:	mov	r0, r4
    5e1c:	bl	4bcc <btbb_piconet_get_flag@@Base+0x18>
    5e20:	mov	r5, #0
    5e24:	mov	r0, r5
    5e28:	add	sp, sp, #12
    5e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5e30:	mvnpl	r8, pc, lsl r5
    5e34:	andeq	ip, r0, r8, lsl sl
    5e38:	andeq	ip, r0, ip, asr #19

00005e3c <btbb_uap_from_header@@Base>:
    5e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5e40:	sub	sp, sp, #20
    5e44:	str	r0, [sp]
    5e48:	mov	r4, r1
    5e4c:	ldr	sl, [r0, #2816]	; 0xb00
    5e50:	mov	r1, #10
    5e54:	mov	r0, r4
    5e58:	bl	2248 <btbb_piconet_get_flag@plt>
    5e5c:	cmp	r0, #0
    5e60:	addeq	r3, r4, #4096	; 0x1000
    5e64:	streq	sl, [r3, #1556]	; 0x614
    5e68:	ldr	r5, [sp]
    5e6c:	ldrb	r1, [r5, #8]
    5e70:	mov	r0, r4
    5e74:	bl	2290 <btbb_piconet_set_channel_seen@plt>
    5e78:	ldr	r3, [r4, #380]	; 0x17c
    5e7c:	cmp	r3, #1000	; 0x3e8
    5e80:	bge	5ed8 <btbb_uap_from_header@@Base+0x9c>
    5e84:	add	r1, r3, #162	; 0xa2
    5e88:	add	r2, r4, #4096	; 0x1000
    5e8c:	ldr	r2, [r2, #1556]	; 0x614
    5e90:	sub	r2, sl, r2
    5e94:	str	r2, [r4, r1, lsl #2]
    5e98:	ldrb	r1, [r5, #8]
    5e9c:	add	r2, r4, r3
    5ea0:	add	r2, r2, #4608	; 0x1200
    5ea4:	strb	r1, [r2, #40]	; 0x28
    5ea8:	add	r3, r3, #1
    5eac:	str	r3, [r4, #380]	; 0x17c
    5eb0:	ldr	r3, [r4, #384]	; 0x180
    5eb4:	add	r3, r3, #1
    5eb8:	str	r3, [r4, #384]	; 0x180
    5ebc:	add	r7, r4, #392	; 0x188
    5ec0:	mov	r3, #0
    5ec4:	str	r3, [sp, #4]
    5ec8:	str	r3, [sp, #12]
    5ecc:	mov	r6, r3
    5ed0:	add	fp, r4, #4096	; 0x1000
    5ed4:	b	5f7c <btbb_uap_from_header@@Base+0x140>
    5ed8:	ldr	r0, [pc, #660]	; 6174 <btbb_uap_from_header@@Base+0x338>
    5edc:	add	r0, pc, r0
    5ee0:	bl	2314 <puts@plt>
    5ee4:	mov	r0, r4
    5ee8:	bl	4bcc <btbb_piconet_get_flag@@Base+0x18>
    5eec:	mov	r3, #0
    5ef0:	str	r3, [sp, #4]
    5ef4:	b	6074 <btbb_uap_from_header@@Base+0x238>
    5ef8:	mov	r1, #10
    5efc:	mov	r0, r4
    5f00:	bl	2248 <btbb_piconet_get_flag@plt>
    5f04:	cmp	r0, #0
    5f08:	bne	5f6c <btbb_uap_from_header@@Base+0x130>
    5f0c:	b	5f8c <btbb_uap_from_header@@Base+0x150>
    5f10:	ldr	r1, [sp]
    5f14:	mov	r0, r5
    5f18:	bl	22d8 <crc_check@plt>
    5f1c:	mov	r5, r0
    5f20:	mov	r1, #2
    5f24:	mov	r0, r4
    5f28:	bl	2248 <btbb_piconet_get_flag@plt>
    5f2c:	cmp	r0, #0
    5f30:	bne	5f58 <btbb_uap_from_header@@Base+0x11c>
    5f34:	add	r5, r5, #1
    5f38:	cmp	r5, #3
    5f3c:	addls	pc, pc, r5, lsl #2
    5f40:	b	6000 <btbb_uap_from_header@@Base+0x1c4>
    5f44:	b	5f64 <btbb_uap_from_header@@Base+0x128>
    5f48:	b	5f64 <btbb_uap_from_header@@Base+0x128>
    5f4c:	b	5fe8 <btbb_uap_from_header@@Base+0x1ac>
    5f50:	b	5fe8 <btbb_uap_from_header@@Base+0x1ac>
    5f54:	mvn	r5, #0
    5f58:	ldrb	r3, [r4, #28]
    5f5c:	cmp	r3, r8
    5f60:	beq	5f34 <btbb_uap_from_header@@Base+0xf8>
    5f64:	mvn	r3, #0
    5f68:	str	r3, [r9]
    5f6c:	add	r6, r6, #1
    5f70:	add	r7, r7, #4
    5f74:	cmp	r6, #64	; 0x40
    5f78:	beq	609c <btbb_uap_from_header@@Base+0x260>
    5f7c:	mov	r9, r7
    5f80:	ldr	r3, [r7]
    5f84:	cmp	r3, #0
    5f88:	blt	5ef8 <btbb_uap_from_header@@Base+0xbc>
    5f8c:	str	r6, [sp, #8]
    5f90:	ldr	r5, [fp, #1556]	; 0x614
    5f94:	sub	r5, sl, r5
    5f98:	add	r5, r5, r6
    5f9c:	and	r5, r5, #63	; 0x3f
    5fa0:	ldr	r1, [sp]
    5fa4:	mov	r0, r5
    5fa8:	bl	2524 <try_clock@plt>
    5fac:	mov	r8, r0
    5fb0:	mov	r1, #10
    5fb4:	mov	r0, r4
    5fb8:	bl	2248 <btbb_piconet_get_flag@plt>
    5fbc:	cmp	r0, #0
    5fc0:	beq	5f10 <btbb_uap_from_header@@Base+0xd4>
    5fc4:	ldr	r3, [r9]
    5fc8:	cmp	r8, r3
    5fcc:	beq	5f10 <btbb_uap_from_header@@Base+0xd4>
    5fd0:	mov	r1, #2
    5fd4:	mov	r0, r4
    5fd8:	bl	2248 <btbb_piconet_get_flag@plt>
    5fdc:	cmp	r0, #0
    5fe0:	bne	5f54 <btbb_uap_from_header@@Base+0x118>
    5fe4:	b	5f64 <btbb_uap_from_header@@Base+0x128>
    5fe8:	str	r8, [r9]
    5fec:	ldr	r3, [sp, #4]
    5ff0:	add	r3, r3, #1
    5ff4:	str	r3, [sp, #4]
    5ff8:	str	r6, [sp, #12]
    5ffc:	b	5f6c <btbb_uap_from_header@@Base+0x130>
    6000:	add	r2, r4, #4096	; 0x1000
    6004:	ldr	r3, [r2, #1556]	; 0x614
    6008:	ldr	r1, [sp, #8]
    600c:	sub	r3, r1, r3
    6010:	and	r3, r3, #63	; 0x3f
    6014:	str	r3, [r2, #1552]	; 0x610
    6018:	mov	r1, #2
    601c:	mov	r0, r4
    6020:	bl	2248 <btbb_piconet_get_flag@plt>
    6024:	cmp	r0, #0
    6028:	bne	6080 <btbb_uap_from_header@@Base+0x244>
    602c:	ldr	r2, [r4, #384]	; 0x180
    6030:	mov	r1, r8
    6034:	ldr	r0, [pc, #316]	; 6178 <btbb_uap_from_header@@Base+0x33c>
    6038:	add	r0, pc, r0
    603c:	bl	2158 <printf@plt>
    6040:	strb	r8, [r4, #28]
    6044:	mov	r2, #1
    6048:	mov	r1, #4
    604c:	mov	r0, r4
    6050:	bl	226c <btbb_piconet_set_flag@plt>
    6054:	mov	r2, #1
    6058:	mov	r1, #2
    605c:	mov	r0, r4
    6060:	bl	226c <btbb_piconet_set_flag@plt>
    6064:	mov	r3, #0
    6068:	str	r3, [r4, #384]	; 0x180
    606c:	mov	r3, #1
    6070:	str	r3, [sp, #4]
    6074:	ldr	r0, [sp, #4]
    6078:	add	sp, sp, #20
    607c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6080:	add	r3, r4, #4096	; 0x1000
    6084:	ldr	r2, [r4, #384]	; 0x180
    6088:	ldr	r1, [r3, #1552]	; 0x610
    608c:	ldr	r0, [pc, #232]	; 617c <btbb_uap_from_header@@Base+0x340>
    6090:	add	r0, pc, r0
    6094:	bl	2158 <printf@plt>
    6098:	b	6040 <btbb_uap_from_header@@Base+0x204>
    609c:	mov	r2, #1
    60a0:	mov	r1, #10
    60a4:	mov	r0, r4
    60a8:	bl	226c <btbb_piconet_set_flag@plt>
    60ac:	ldr	r3, [sp, #4]
    60b0:	cmp	r3, #1
    60b4:	beq	60d8 <btbb_uap_from_header@@Base+0x29c>
    60b8:	ldr	r3, [sp, #4]
    60bc:	cmp	r3, #0
    60c0:	movne	r3, #0
    60c4:	strne	r3, [sp, #4]
    60c8:	bne	6074 <btbb_uap_from_header@@Base+0x238>
    60cc:	mov	r0, r4
    60d0:	bl	4bcc <btbb_piconet_get_flag@@Base+0x18>
    60d4:	b	6074 <btbb_uap_from_header@@Base+0x238>
    60d8:	add	r2, r4, #4096	; 0x1000
    60dc:	ldr	r3, [r2, #1556]	; 0x614
    60e0:	ldr	r5, [sp, #12]
    60e4:	sub	r3, r5, r3
    60e8:	and	r3, r3, #63	; 0x3f
    60ec:	str	r3, [r2, #1552]	; 0x610
    60f0:	mov	r1, #2
    60f4:	mov	r0, r4
    60f8:	bl	2248 <btbb_piconet_get_flag@plt>
    60fc:	cmp	r0, #0
    6100:	bne	6158 <btbb_uap_from_header@@Base+0x31c>
    6104:	add	r3, r5, #98	; 0x62
    6108:	ldr	r2, [r4, #384]	; 0x180
    610c:	ldr	r1, [r4, r3, lsl #2]
    6110:	ldr	r0, [pc, #104]	; 6180 <btbb_uap_from_header@@Base+0x344>
    6114:	add	r0, pc, r0
    6118:	bl	2158 <printf@plt>
    611c:	ldr	r3, [sp, #12]
    6120:	add	r3, r3, #98	; 0x62
    6124:	ldr	r3, [r4, r3, lsl #2]
    6128:	strb	r3, [r4, #28]
    612c:	mov	r2, #1
    6130:	mov	r1, #4
    6134:	mov	r0, r4
    6138:	bl	226c <btbb_piconet_set_flag@plt>
    613c:	mov	r2, #1
    6140:	mov	r1, #2
    6144:	mov	r0, r4
    6148:	bl	226c <btbb_piconet_set_flag@plt>
    614c:	mov	r3, #0
    6150:	str	r3, [r4, #384]	; 0x180
    6154:	b	6074 <btbb_uap_from_header@@Base+0x238>
    6158:	add	r3, r4, #4096	; 0x1000
    615c:	ldr	r2, [r4, #384]	; 0x180
    6160:	ldr	r1, [r3, #1552]	; 0x610
    6164:	ldr	r0, [pc, #24]	; 6184 <btbb_uap_from_header@@Base+0x348>
    6168:	add	r0, pc, r0
    616c:	bl	2158 <printf@plt>
    6170:	b	611c <btbb_uap_from_header@@Base+0x2e0>
    6174:	strdeq	ip, [r0], -r0
    6178:			; <UNDEFINED> instruction: 0x0000c6bc
    617c:	muleq	r0, ip, r6
    6180:	andeq	ip, r0, r0, asr r6
    6184:	andeq	ip, r0, r8, lsr #12

00006188 <try_hop@@Base>:
    6188:	push	{r4, r5, r6, lr}
    618c:	mov	r5, r0
    6190:	mov	r4, r1
    6194:	ldrb	r6, [r1, #28]
    6198:	bl	22e4 <btbb_decode@plt>
    619c:	mov	r1, #9
    61a0:	mov	r0, r4
    61a4:	bl	2248 <btbb_piconet_get_flag@plt>
    61a8:	cmp	r0, #0
    61ac:	beq	625c <try_hop@@Base+0xd4>
    61b0:	ldr	r3, [r4, #380]	; 0x17c
    61b4:	add	r0, r3, #162	; 0xa2
    61b8:	add	r1, r4, #4096	; 0x1000
    61bc:	ldr	r2, [r5, #2816]	; 0xb00
    61c0:	ldr	r1, [r1, #1556]	; 0x614
    61c4:	sub	r2, r2, r1
    61c8:	str	r2, [r4, r0, lsl #2]
    61cc:	ldrb	r1, [r5, #8]
    61d0:	add	r2, r4, r3
    61d4:	add	r2, r2, #4608	; 0x1200
    61d8:	strb	r1, [r2, #40]	; 0x28
    61dc:	add	r3, r3, #1
    61e0:	str	r3, [r4, #380]	; 0x17c
    61e4:	ldr	r3, [r4, #384]	; 0x180
    61e8:	add	r3, r3, #1
    61ec:	str	r3, [r4, #384]	; 0x180
    61f0:	mov	r0, r4
    61f4:	bl	22f0 <btbb_winnow@plt>
    61f8:	mov	r1, #5
    61fc:	mov	r0, r4
    6200:	bl	2248 <btbb_piconet_get_flag@plt>
    6204:	cmp	r0, #0
    6208:	bne	6238 <try_hop@@Base+0xb0>
    620c:	mov	r1, #2
    6210:	mov	r0, r4
    6214:	bl	2248 <btbb_piconet_get_flag@plt>
    6218:	cmp	r0, #0
    621c:	popne	{r4, r5, r6, pc}
    6220:	mov	r2, #1
    6224:	mov	r1, #2
    6228:	mov	r0, r4
    622c:	bl	226c <btbb_piconet_set_flag@plt>
    6230:	strb	r6, [r4, #28]
    6234:	pop	{r4, r5, r6, pc}
    6238:	ldr	r0, [pc, #188]	; 62fc <try_hop@@Base+0x174>
    623c:	add	r0, pc, r0
    6240:	bl	2314 <puts@plt>
    6244:	add	r3, r4, #4096	; 0x1000
    6248:	ldr	r1, [r3, #1552]	; 0x610
    624c:	ldr	r0, [pc, #172]	; 6300 <try_hop@@Base+0x178>
    6250:	add	r0, pc, r0
    6254:	bl	2158 <printf@plt>
    6258:	b	620c <try_hop@@Base+0x84>
    625c:	mov	r1, #4
    6260:	mov	r0, r4
    6264:	bl	2248 <btbb_piconet_get_flag@plt>
    6268:	cmp	r0, #0
    626c:	beq	62b4 <try_hop@@Base+0x12c>
    6270:	mov	r1, r4
    6274:	mov	r0, r5
    6278:	bl	21d0 <btbb_uap_from_header@plt>
    627c:	mov	r1, #5
    6280:	mov	r0, r4
    6284:	bl	2248 <btbb_piconet_get_flag@plt>
    6288:	cmp	r0, #0
    628c:	beq	620c <try_hop@@Base+0x84>
    6290:	ldr	r0, [pc, #108]	; 6304 <try_hop@@Base+0x17c>
    6294:	add	r0, pc, r0
    6298:	bl	2314 <puts@plt>
    629c:	add	r3, r4, #4096	; 0x1000
    62a0:	ldr	r1, [r3, #1552]	; 0x610
    62a4:	ldr	r0, [pc, #92]	; 6308 <try_hop@@Base+0x180>
    62a8:	add	r0, pc, r0
    62ac:	bl	2158 <printf@plt>
    62b0:	b	620c <try_hop@@Base+0x84>
    62b4:	mov	r1, r4
    62b8:	mov	r0, r5
    62bc:	bl	21d0 <btbb_uap_from_header@plt>
    62c0:	cmp	r0, #0
    62c4:	beq	620c <try_hop@@Base+0x84>
    62c8:	ldrb	r3, [r4, #28]
    62cc:	cmp	r3, r6
    62d0:	beq	62e4 <try_hop@@Base+0x15c>
    62d4:	ldr	r0, [pc, #48]	; 630c <try_hop@@Base+0x184>
    62d8:	add	r0, pc, r0
    62dc:	bl	2314 <puts@plt>
    62e0:	b	620c <try_hop@@Base+0x84>
    62e4:	mov	r1, r4
    62e8:	mov	r0, #0
    62ec:	bl	2530 <btbb_init_hop_reversal@plt>
    62f0:	mov	r0, r4
    62f4:	bl	22f0 <btbb_winnow@plt>
    62f8:	b	620c <try_hop@@Base+0x84>
    62fc:	andeq	ip, r0, r0, lsl #11
    6300:	andeq	ip, r0, r8, ror r5
    6304:	andeq	ip, r0, r8, lsr #10
    6308:	andeq	ip, r0, r0, lsr #10
    630c:	andeq	ip, r0, r4, lsl #10

00006310 <btbb_print_afh_map@@Base>:
    6310:	push	{lr}		; (str lr, [sp, #-4]!)
    6314:	sub	sp, sp, #36	; 0x24
    6318:	ldrb	r3, [r0, #14]
    631c:	ldrb	r2, [r0, #13]
    6320:	ldrb	r1, [r0, #12]
    6324:	ldrb	ip, [r0, #21]
    6328:	str	ip, [sp, #24]
    632c:	ldrb	ip, [r0, #20]
    6330:	str	ip, [sp, #20]
    6334:	ldrb	ip, [r0, #19]
    6338:	str	ip, [sp, #16]
    633c:	ldrb	ip, [r0, #18]
    6340:	str	ip, [sp, #12]
    6344:	ldrb	ip, [r0, #17]
    6348:	str	ip, [sp, #8]
    634c:	ldrb	ip, [r0, #16]
    6350:	str	ip, [sp, #4]
    6354:	ldrb	r0, [r0, #15]
    6358:	str	r0, [sp]
    635c:	ldr	r0, [pc, #12]	; 6370 <btbb_print_afh_map@@Base+0x60>
    6360:	add	r0, pc, r0
    6364:	bl	2158 <printf@plt>
    6368:	add	sp, sp, #36	; 0x24
    636c:	pop	{pc}		; (ldr pc, [sp], #4)
    6370:	muleq	r0, r4, r4

00006374 <get_piconet@@Base>:
    6374:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6378:	sub	sp, sp, #20
    637c:	str	r0, [sp, #12]
    6380:	ldr	r3, [pc, #1364]	; 68dc <get_piconet@@Base+0x568>
    6384:	add	r3, pc, r3
    6388:	ldr	r1, [r3, #8]
    638c:	cmp	r1, #0
    6390:	beq	64a0 <get_piconet@@Base+0x12c>
    6394:	ldrb	r2, [sp, #12]
    6398:	ldr	r3, [pc, #1344]	; 68e0 <get_piconet@@Base+0x56c>
    639c:	add	r3, r2, r3
    63a0:	ldrb	r2, [sp, #15]
    63a4:	add	r3, r3, r2, lsl #24
    63a8:	ldrb	r2, [sp, #14]
    63ac:	add	r3, r3, r2, lsl #16
    63b0:	ldrb	r2, [sp, #13]
    63b4:	add	r3, r3, r2, lsl #8
    63b8:	ldr	r0, [pc, #1316]	; 68e4 <get_piconet@@Base+0x570>
    63bc:	eor	r0, r0, r3
    63c0:	ldr	r2, [pc, #1312]	; 68e8 <get_piconet@@Base+0x574>
    63c4:	sub	r2, r2, r0
    63c8:	eor	r2, r2, r0, lsl #8
    63cc:	ldr	r3, [pc, #1304]	; 68ec <get_piconet@@Base+0x578>
    63d0:	sub	r3, r3, r0
    63d4:	sub	r3, r3, r2
    63d8:	eor	r3, r3, r2, lsr #13
    63dc:	sub	r0, r0, r2
    63e0:	sub	r0, r0, r3
    63e4:	eor	r0, r0, r3, lsr #12
    63e8:	sub	r2, r2, r3
    63ec:	sub	r2, r2, r0
    63f0:	eor	r2, r2, r0, lsl #16
    63f4:	sub	r3, r3, r0
    63f8:	sub	r3, r3, r2
    63fc:	eor	r3, r3, r2, lsr #5
    6400:	sub	r0, r0, r2
    6404:	sub	r0, r0, r3
    6408:	eor	r0, r0, r3, lsr #3
    640c:	sub	r2, r2, r3
    6410:	sub	r2, r2, r0
    6414:	eor	r2, r2, r0, lsl #10
    6418:	sub	r3, r3, r0
    641c:	sub	r3, r3, r2
    6420:	ldr	r5, [r1, #8]
    6424:	eor	r3, r3, r2, lsr #15
    6428:	ldr	r2, [r5, #4]
    642c:	sub	r2, r2, #1
    6430:	and	r3, r3, r2
    6434:	ldr	r2, [r5]
    6438:	add	r3, r3, r3, lsl #1
    643c:	ldr	r4, [r2, r3, lsl #2]
    6440:	cmp	r4, #0
    6444:	beq	64a0 <get_piconet@@Base+0x12c>
    6448:	ldr	r3, [r5, #20]
    644c:	sub	r4, r4, r3
    6450:	add	r7, sp, #12
    6454:	mov	r6, #4
    6458:	b	6488 <get_piconet@@Base+0x114>
    645c:	mov	r2, r6
    6460:	mov	r1, r7
    6464:	ldr	r0, [r4, #28]
    6468:	bl	220c <memcmp@plt>
    646c:	cmp	r0, #0
    6470:	beq	68cc <get_piconet@@Base+0x558>
    6474:	ldr	r4, [r4, #24]
    6478:	cmp	r4, #0
    647c:	beq	64a0 <get_piconet@@Base+0x12c>
    6480:	ldr	r3, [r5, #20]
    6484:	sub	r4, r4, r3
    6488:	cmp	r4, #0
    648c:	beq	64a0 <get_piconet@@Base+0x12c>
    6490:	ldr	r3, [r4, #32]
    6494:	cmp	r3, #4
    6498:	bne	6474 <get_piconet@@Base+0x100>
    649c:	b	645c <get_piconet@@Base+0xe8>
    64a0:	bl	211c <btbb_piconet_new@plt>
    64a4:	mov	fp, r0
    64a8:	ldr	r4, [sp, #12]
    64ac:	mov	r1, r4
    64b0:	bl	253c <btbb_init_piconet@plt>
    64b4:	mov	r0, #40	; 0x28
    64b8:	bl	2320 <malloc@plt>
    64bc:	mov	r9, r0
    64c0:	str	r4, [r0]
    64c4:	str	fp, [r0, #4]
    64c8:	mov	r3, #0
    64cc:	str	r3, [r0, #16]
    64d0:	str	r0, [r9, #28]
    64d4:	mov	r3, #4
    64d8:	str	r3, [r0, #32]
    64dc:	ldr	r3, [pc, #1036]	; 68f0 <get_piconet@@Base+0x57c>
    64e0:	add	r3, pc, r3
    64e4:	ldr	r3, [r3, #8]
    64e8:	cmp	r3, #0
    64ec:	beq	66fc <get_piconet@@Base+0x388>
    64f0:	ldr	r2, [r3, #8]
    64f4:	ldr	r2, [r2, #16]
    64f8:	str	r0, [r2, #8]
    64fc:	ldr	r1, [r3, #8]
    6500:	ldr	r2, [r1, #16]
    6504:	ldr	r1, [r1, #20]
    6508:	sub	r2, r2, r1
    650c:	str	r2, [r0, #12]
    6510:	ldr	r3, [r3, #8]
    6514:	add	r2, r0, #8
    6518:	str	r2, [r3, #16]
    651c:	ldr	r3, [pc, #976]	; 68f4 <get_piconet@@Base+0x580>
    6520:	add	r3, pc, r3
    6524:	ldr	r1, [r3, #8]
    6528:	ldr	r2, [r1, #8]
    652c:	ldr	r3, [r2, #12]
    6530:	add	r3, r3, #1
    6534:	str	r3, [r2, #12]
    6538:	ldr	r3, [r1, #8]
    653c:	str	r3, [r9, #8]
    6540:	ldrb	r2, [r9]
    6544:	ldr	r3, [pc, #916]	; 68e0 <get_piconet@@Base+0x56c>
    6548:	add	r3, r2, r3
    654c:	ldrb	r2, [r9, #3]
    6550:	add	r3, r3, r2, lsl #24
    6554:	ldrb	r2, [r9, #2]
    6558:	add	r3, r3, r2, lsl #16
    655c:	ldrb	r2, [r9, #1]
    6560:	add	r3, r3, r2, lsl #8
    6564:	ldr	r0, [pc, #888]	; 68e4 <get_piconet@@Base+0x570>
    6568:	eor	r0, r0, r3
    656c:	ldr	r2, [pc, #884]	; 68e8 <get_piconet@@Base+0x574>
    6570:	sub	r2, r2, r0
    6574:	eor	r2, r2, r0, lsl #8
    6578:	ldr	r3, [pc, #876]	; 68ec <get_piconet@@Base+0x578>
    657c:	sub	r3, r3, r0
    6580:	sub	r3, r3, r2
    6584:	eor	r3, r3, r2, lsr #13
    6588:	sub	r0, r0, r2
    658c:	sub	r0, r0, r3
    6590:	eor	r0, r0, r3, lsr #12
    6594:	sub	r2, r2, r3
    6598:	sub	r2, r2, r0
    659c:	eor	r2, r2, r0, lsl #16
    65a0:	sub	r3, r3, r0
    65a4:	sub	r3, r3, r2
    65a8:	eor	r3, r3, r2, lsr #5
    65ac:	sub	r0, r0, r2
    65b0:	sub	r0, r0, r3
    65b4:	eor	r0, r0, r3, lsr #3
    65b8:	sub	r2, r2, r3
    65bc:	sub	r2, r2, r0
    65c0:	eor	r2, r2, r0, lsl #10
    65c4:	sub	r3, r3, r0
    65c8:	sub	r3, r3, r2
    65cc:	eor	r3, r3, r2, lsr #15
    65d0:	str	r3, [r9, #36]	; 0x24
    65d4:	ldr	r0, [r1, #8]
    65d8:	ldr	r2, [r0, #4]
    65dc:	sub	r2, r2, #1
    65e0:	and	r3, r3, r2
    65e4:	add	r3, r3, r3, lsl #1
    65e8:	lsl	r3, r3, #2
    65ec:	ldr	r2, [r0]
    65f0:	add	r2, r2, r3
    65f4:	ldr	r0, [r2, #4]
    65f8:	add	r0, r0, #1
    65fc:	str	r0, [r2, #4]
    6600:	ldr	r2, [r1, #8]
    6604:	ldr	r2, [r2]
    6608:	ldr	r2, [r2, r3]
    660c:	str	r2, [r9, #24]
    6610:	mov	r2, #0
    6614:	str	r2, [r9, #20]
    6618:	ldr	r2, [r1, #8]
    661c:	ldr	r2, [r2]
    6620:	ldr	r2, [r2, r3]
    6624:	cmp	r2, #0
    6628:	addne	r0, r9, #8
    662c:	strne	r0, [r2, #12]
    6630:	ldr	r2, [r1, #8]
    6634:	ldr	r2, [r2]
    6638:	add	r0, r9, #8
    663c:	str	r0, [r2, r3]
    6640:	ldr	r2, [r1, #8]
    6644:	ldr	r2, [r2]
    6648:	add	r2, r2, r3
    664c:	ldr	r3, [r2, #8]
    6650:	add	r3, r3, #1
    6654:	add	r3, r3, r3, lsl #2
    6658:	ldr	r2, [r2, #4]
    665c:	cmp	r2, r3, lsl #1
    6660:	bcc	68d0 <get_piconet@@Base+0x55c>
    6664:	ldr	r5, [r9, #8]
    6668:	ldr	r3, [r5, #36]	; 0x24
    666c:	cmp	r3, #1
    6670:	beq	68d0 <get_piconet@@Base+0x55c>
    6674:	ldr	r4, [r5, #4]
    6678:	add	r4, r4, r4, lsl #1
    667c:	lsl	r4, r4, #3
    6680:	mov	r0, r4
    6684:	bl	2320 <malloc@plt>
    6688:	subs	r6, r0, #0
    668c:	beq	6790 <get_piconet@@Base+0x41c>
    6690:	mov	r2, r4
    6694:	mov	r1, #0
    6698:	mov	r0, r6
    669c:	bl	2428 <memset@plt>
    66a0:	ldr	r1, [r5, #12]
    66a4:	ldr	r3, [r5, #4]
    66a8:	lsl	r3, r3, #1
    66ac:	sub	r3, r3, #1
    66b0:	tst	r3, r1
    66b4:	movne	r3, #1
    66b8:	moveq	r3, #0
    66bc:	ldr	r2, [r5, #8]
    66c0:	add	r2, r2, #1
    66c4:	add	r3, r3, r1, lsr r2
    66c8:	str	r3, [r5, #24]
    66cc:	ldr	r3, [r9, #8]
    66d0:	mov	r2, #0
    66d4:	str	r2, [r3, #28]
    66d8:	ldr	r3, [r9, #8]
    66dc:	ldr	r2, [r3, #4]
    66e0:	cmp	r2, #0
    66e4:	beq	6864 <get_piconet@@Base+0x4f0>
    66e8:	mov	r2, #0
    66ec:	str	r2, [sp, #4]
    66f0:	str	r2, [sp, #8]
    66f4:	mov	sl, r2
    66f8:	b	684c <get_piconet@@Base+0x4d8>
    66fc:	ldr	r3, [pc, #500]	; 68f8 <get_piconet@@Base+0x584>
    6700:	add	r3, pc, r3
    6704:	str	r0, [r3, #8]
    6708:	mov	r3, #0
    670c:	str	r3, [r0, #12]
    6710:	mov	r0, #44	; 0x2c
    6714:	bl	2320 <malloc@plt>
    6718:	mov	r4, r0
    671c:	str	r0, [r9, #8]
    6720:	cmp	r0, #0
    6724:	beq	6780 <get_piconet@@Base+0x40c>
    6728:	mov	r2, #44	; 0x2c
    672c:	mov	r1, #0
    6730:	bl	2428 <memset@plt>
    6734:	add	r3, r9, #8
    6738:	str	r3, [r4, #16]
    673c:	mov	r3, #32
    6740:	str	r3, [r4, #4]
    6744:	mov	r3, #5
    6748:	str	r3, [r4, #8]
    674c:	mov	r3, #8
    6750:	str	r3, [r4, #20]
    6754:	mov	r0, #384	; 0x180
    6758:	bl	2320 <malloc@plt>
    675c:	str	r0, [r4]
    6760:	cmp	r0, #0
    6764:	beq	6788 <get_piconet@@Base+0x414>
    6768:	mov	r2, #384	; 0x180
    676c:	mov	r1, #0
    6770:	bl	2428 <memset@plt>
    6774:	ldr	r3, [pc, #384]	; 68fc <get_piconet@@Base+0x588>
    6778:	str	r3, [r4, #40]	; 0x28
    677c:	b	651c <get_piconet@@Base+0x1a8>
    6780:	mvn	r0, #0
    6784:	bl	2374 <exit@plt>
    6788:	mvn	r0, #0
    678c:	bl	2374 <exit@plt>
    6790:	mvn	r0, #0
    6794:	bl	2374 <exit@plt>
    6798:	str	sl, [r5, #12]
    679c:	ldr	r3, [r6, r4, lsl #2]
    67a0:	str	r3, [r5, #16]
    67a4:	ldr	r3, [r6, r4, lsl #2]
    67a8:	cmp	r3, #0
    67ac:	strne	r5, [r3, #12]
    67b0:	str	r5, [r6, r4, lsl #2]
    67b4:	mov	r5, r8
    67b8:	cmp	r8, #0
    67bc:	beq	6820 <get_piconet@@Base+0x4ac>
    67c0:	ldr	r8, [r5, #16]
    67c4:	ldr	r2, [r9, #8]
    67c8:	ldr	r4, [r2, #4]
    67cc:	lsl	r4, r4, #1
    67d0:	sub	r4, r4, #1
    67d4:	ldr	r3, [r5, #28]
    67d8:	and	r4, r4, r3
    67dc:	add	r4, r4, r4, lsl #1
    67e0:	add	r7, r6, r4, lsl #2
    67e4:	ldr	r3, [r7, #4]
    67e8:	add	r3, r3, #1
    67ec:	str	r3, [r7, #4]
    67f0:	ldr	r1, [r2, #24]
    67f4:	cmp	r3, r1
    67f8:	bls	6798 <get_piconet@@Base+0x424>
    67fc:	ldr	r3, [r2, #28]
    6800:	add	r3, r3, #1
    6804:	str	r3, [r2, #28]
    6808:	ldr	r3, [r9, #8]
    680c:	ldr	r1, [r3, #24]
    6810:	ldr	r0, [r7, #4]
    6814:	bl	fa10 <lell_pcapng_close@@Base+0x24>
    6818:	str	r0, [r7, #8]
    681c:	b	6798 <get_piconet@@Base+0x424>
    6820:	ldr	r3, [sp, #8]
    6824:	add	r3, r3, #1
    6828:	mov	r1, r3
    682c:	str	r3, [sp, #8]
    6830:	ldr	r3, [r9, #8]
    6834:	ldr	r2, [sp, #4]
    6838:	add	r2, r2, #12
    683c:	str	r2, [sp, #4]
    6840:	ldr	r2, [r3, #4]
    6844:	cmp	r2, r1
    6848:	bls	6864 <get_piconet@@Base+0x4f0>
    684c:	ldr	r3, [r3]
    6850:	ldr	r2, [sp, #4]
    6854:	ldr	r5, [r3, r2]
    6858:	cmp	r5, #0
    685c:	bne	67c0 <get_piconet@@Base+0x44c>
    6860:	b	6820 <get_piconet@@Base+0x4ac>
    6864:	ldr	r0, [r3]
    6868:	bl	21a0 <free@plt>
    686c:	ldr	r2, [r9, #8]
    6870:	ldr	r3, [r2, #4]
    6874:	lsl	r3, r3, #1
    6878:	str	r3, [r2, #4]
    687c:	ldr	r2, [r9, #8]
    6880:	ldr	r3, [r2, #8]
    6884:	add	r3, r3, #1
    6888:	str	r3, [r2, #8]
    688c:	ldr	r3, [r9, #8]
    6890:	str	r6, [r3]
    6894:	ldr	r3, [r9, #8]
    6898:	ldr	r1, [r3, #12]
    689c:	ldr	r2, [r3, #28]
    68a0:	cmp	r2, r1, lsr #1
    68a4:	ldrhi	r2, [r3, #32]
    68a8:	addhi	r2, r2, #1
    68ac:	movls	r2, #0
    68b0:	str	r2, [r3, #32]
    68b4:	ldr	r3, [r9, #8]
    68b8:	ldr	r2, [r3, #32]
    68bc:	cmp	r2, #1
    68c0:	movhi	r2, #1
    68c4:	strhi	r2, [r3, #36]	; 0x24
    68c8:	b	68d0 <get_piconet@@Base+0x55c>
    68cc:	ldr	fp, [r4, #4]
    68d0:	mov	r0, fp
    68d4:	add	sp, sp, #20
    68d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    68dc:	andeq	r2, r2, r8, lsr #28
    68e0:	tsteq	r2, sp, lsl #2
    68e4:	andeq	pc, r7, sp, ror #14
    68e8:	svcls	0x0049bac6
    68ec:	mcr2	14, 7, fp, cr13, cr3, {7}
    68f0:	andeq	r2, r2, ip, asr #25
    68f4:	andeq	r2, r2, ip, lsl #25
    68f8:	andeq	r2, r2, ip, lsr #21
    68fc:	andsge	r1, r1, r1, ror #31

00006900 <btbb_next_survey_result@@Base>:
    6900:	push	{r4, lr}
    6904:	ldr	r3, [pc, #52]	; 6940 <btbb_next_survey_result@@Base+0x40>
    6908:	add	r3, pc, r3
    690c:	ldr	r0, [r3, #8]
    6910:	cmp	r0, #0
    6914:	beq	6938 <btbb_next_survey_result@@Base+0x38>
    6918:	ldr	r4, [r0, #4]
    691c:	ldr	r2, [r0, #16]
    6920:	ldr	r3, [pc, #28]	; 6944 <btbb_next_survey_result@@Base+0x44>
    6924:	add	r3, pc, r3
    6928:	str	r2, [r3, #8]
    692c:	bl	21a0 <free@plt>
    6930:	mov	r0, r4
    6934:	pop	{r4, pc}
    6938:	mov	r4, #0
    693c:	b	6930 <btbb_next_survey_result@@Base+0x30>
    6940:	andeq	r2, r2, r4, lsr #17
    6944:	andeq	r2, r2, r8, lsl #17

00006948 <btbb_process_packet@@Base>:
    6948:	push	{r4, r5, r6, r7, r8, lr}
    694c:	mov	r5, r0
    6950:	ldr	r3, [pc, #388]	; 6adc <btbb_process_packet@@Base+0x194>
    6954:	add	r3, pc, r3
    6958:	ldr	r7, [r3]
    695c:	cmp	r7, #0
    6960:	bne	699c <btbb_process_packet@@Base+0x54>
    6964:	mov	r4, r1
    6968:	cmp	r1, #0
    696c:	moveq	r6, r7
    6970:	beq	6994 <btbb_process_packet@@Base+0x4c>
    6974:	ldrb	r1, [r0, #8]
    6978:	mov	r0, r4
    697c:	bl	2290 <btbb_piconet_set_channel_seen@plt>
    6980:	mov	r1, #3
    6984:	mov	r0, r4
    6988:	bl	2248 <btbb_piconet_get_flag@plt>
    698c:	subs	r6, r0, #0
    6990:	bne	69e8 <btbb_process_packet@@Base+0xa0>
    6994:	mov	r0, r6
    6998:	pop	{r4, r5, r6, r7, r8, pc}
    699c:	bl	2458 <btbb_packet_get_lap@plt>
    69a0:	bl	2488 <get_piconet@plt>
    69a4:	mov	r4, r0
    69a8:	ldrb	r1, [r5, #8]
    69ac:	bl	2290 <btbb_piconet_set_channel_seen@plt>
    69b0:	mov	r0, r5
    69b4:	bl	223c <btbb_header_present@plt>
    69b8:	subs	r6, r0, #0
    69bc:	beq	6994 <btbb_process_packet@@Base+0x4c>
    69c0:	mov	r1, #2
    69c4:	mov	r0, r4
    69c8:	bl	2248 <btbb_piconet_get_flag@plt>
    69cc:	subs	r6, r0, #0
    69d0:	movne	r6, #0
    69d4:	bne	6994 <btbb_process_packet@@Base+0x4c>
    69d8:	mov	r1, r4
    69dc:	mov	r0, r5
    69e0:	bl	21d0 <btbb_uap_from_header@plt>
    69e4:	b	6994 <btbb_process_packet@@Base+0x4c>
    69e8:	mov	r0, r5
    69ec:	bl	223c <btbb_header_present@plt>
    69f0:	subs	r6, r0, #0
    69f4:	beq	6994 <btbb_process_packet@@Base+0x4c>
    69f8:	mov	r1, #14
    69fc:	mov	r0, r4
    6a00:	bl	2248 <btbb_piconet_get_flag@plt>
    6a04:	subs	r6, r0, #0
    6a08:	beq	6a70 <btbb_process_packet@@Base+0x128>
    6a0c:	mov	r0, r4
    6a10:	bl	2200 <btbb_piconet_get_uap@plt>
    6a14:	mov	r1, r0
    6a18:	mov	r0, r5
    6a1c:	bl	22a8 <btbb_packet_set_uap@plt>
    6a20:	mov	r2, #1
    6a24:	mov	r1, #4
    6a28:	mov	r0, r5
    6a2c:	bl	2188 <btbb_packet_set_flag@plt>
    6a30:	mov	r2, #1
    6a34:	mov	r1, #5
    6a38:	mov	r0, r5
    6a3c:	bl	2188 <btbb_packet_set_flag@plt>
    6a40:	mov	r0, r5
    6a44:	bl	22e4 <btbb_decode@plt>
    6a48:	subs	r6, r0, #0
    6a4c:	beq	6a60 <btbb_process_packet@@Base+0x118>
    6a50:	mov	r0, r5
    6a54:	bl	250c <btbb_print_packet@plt>
    6a58:	mov	r6, r7
    6a5c:	b	6994 <btbb_process_packet@@Base+0x4c>
    6a60:	ldr	r0, [pc, #120]	; 6ae0 <btbb_process_packet@@Base+0x198>
    6a64:	add	r0, pc, r0
    6a68:	bl	2314 <puts@plt>
    6a6c:	b	6994 <btbb_process_packet@@Base+0x4c>
    6a70:	mov	r0, r4
    6a74:	bl	2200 <btbb_piconet_get_uap@plt>
    6a78:	cmp	r0, #0
    6a7c:	beq	6acc <btbb_process_packet@@Base+0x184>
    6a80:	mov	r1, r4
    6a84:	mov	r0, r5
    6a88:	bl	232c <try_hop@plt>
    6a8c:	mov	r1, #4
    6a90:	mov	r0, r4
    6a94:	bl	2248 <btbb_piconet_get_flag@plt>
    6a98:	subs	r6, r0, #0
    6a9c:	beq	6994 <btbb_process_packet@@Base+0x4c>
    6aa0:	mov	r1, #5
    6aa4:	mov	r0, r4
    6aa8:	bl	2248 <btbb_piconet_get_flag@plt>
    6aac:	subs	r6, r0, #0
    6ab0:	beq	6994 <btbb_process_packet@@Base+0x4c>
    6ab4:	mov	r2, #1
    6ab8:	mov	r1, #14
    6abc:	mov	r0, r4
    6ac0:	bl	226c <btbb_piconet_set_flag@plt>
    6ac4:	mvn	r6, #0
    6ac8:	b	6994 <btbb_process_packet@@Base+0x4c>
    6acc:	mov	r1, r4
    6ad0:	mov	r0, r5
    6ad4:	bl	21d0 <btbb_uap_from_header@plt>
    6ad8:	b	6994 <btbb_process_packet@@Base+0x4c>
    6adc:	andeq	r2, r2, r8, asr r8
    6ae0:	andeq	fp, r0, r8, asr #27
    6ae4:	andeq	r0, r0, r0
    6ae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6aec:	sub	sp, sp, #580	; 0x244
    6af0:	mov	r4, r0
    6af4:	uxtb	r7, r0
    6af8:	ldr	r5, [pc, #1008]	; 6ef0 <btbb_process_packet@@Base+0x5a8>
    6afc:	add	r5, pc, r5
    6b00:	mov	r6, #256	; 0x100
    6b04:	mov	r2, r6
    6b08:	mov	r1, r5
    6b0c:	add	r0, sp, #320	; 0x140
    6b10:	bl	21c4 <memcpy@plt>
    6b14:	mov	r2, r6
    6b18:	add	r1, r5, r6
    6b1c:	add	r0, sp, #64	; 0x40
    6b20:	bl	21c4 <memcpy@plt>
    6b24:	tst	r4, #1
    6b28:	add	r3, sp, #576	; 0x240
    6b2c:	uxtab	r3, r3, r4
    6b30:	ldrbne	r0, [r3, #-512]	; 0xfffffe00
    6b34:	ldrbeq	r0, [r3, #-256]	; 0xffffff00
    6b38:	lsr	r3, r4, #8
    6b3c:	uxtb	r5, r3
    6b40:	tst	r4, #128	; 0x80
    6b44:	add	r2, sp, #576	; 0x240
    6b48:	uxtab	r2, r2, r3
    6b4c:	ldrbne	r6, [r2, #-512]	; 0xfffffe00
    6b50:	ldrbeq	r6, [r2, #-256]	; 0xffffff00
    6b54:	add	r0, r0, r6
    6b58:	lsr	r2, r4, #16
    6b5c:	uxtb	r9, r2
    6b60:	tst	r3, #128	; 0x80
    6b64:	add	r3, sp, #576	; 0x240
    6b68:	uxtab	r3, r3, r2
    6b6c:	ldrbne	r6, [r3, #-512]	; 0xfffffe00
    6b70:	ldrbeq	r6, [r3, #-256]	; 0xffffff00
    6b74:	add	r0, r6, r0
    6b78:	lsr	r3, r4, #24
    6b7c:	uxtb	r8, r3
    6b80:	tst	r2, #128	; 0x80
    6b84:	add	r2, sp, #576	; 0x240
    6b88:	add	r3, r2, r3
    6b8c:	ldrbne	r6, [r3, #-512]	; 0xfffffe00
    6b90:	ldrbeq	r6, [r3, #-256]	; 0xffffff00
    6b94:	add	r6, r6, r0
    6b98:	cmp	r6, #24
    6b9c:	subgt	r6, r6, #24
    6ba0:	movle	r6, #0
    6ba4:	mov	lr, sp
    6ba8:	ldr	ip, [pc, #836]	; 6ef4 <btbb_process_packet@@Base+0x5ac>
    6bac:	add	ip, pc, ip
    6bb0:	add	ip, ip, #512	; 0x200
    6bb4:	ldm	ip!, {r0, r1, r2, r3}
    6bb8:	stmia	lr!, {r0, r1, r2, r3}
    6bbc:	ldm	ip!, {r0, r1, r2, r3}
    6bc0:	stmia	lr!, {r0, r1, r2, r3}
    6bc4:	ldm	ip!, {r0, r1, r2, r3}
    6bc8:	stmia	lr!, {r0, r1, r2, r3}
    6bcc:	ldm	ip, {r0, r1, r2, r3}
    6bd0:	stm	lr, {r0, r1, r2, r3}
    6bd4:	add	r3, sp, #576	; 0x240
    6bd8:	add	r3, r3, r8, lsr #2
    6bdc:	ldrb	r0, [r3, #-576]	; 0xfffffdc0
    6be0:	rsb	r0, r0, #1
    6be4:	add	r6, r0, r6
    6be8:	cmp	r7, r5
    6bec:	cmpeq	r7, r9
    6bf0:	moveq	r0, #1
    6bf4:	movne	r0, #0
    6bf8:	cmp	r7, r8
    6bfc:	movne	r0, #0
    6c00:	andeq	r0, r0, #1
    6c04:	add	r0, r0, r6
    6c08:	ldr	r3, [pc, #744]	; 6ef8 <btbb_process_packet@@Base+0x5b0>
    6c0c:	cmp	r4, r3
    6c10:	moveq	r5, #1
    6c14:	movne	r5, #0
    6c18:	add	r5, r5, r0
    6c1c:	eor	r3, r3, r4
    6c20:	beq	6c74 <btbb_process_packet@@Base+0x32c>
    6c24:	mov	r0, #0
    6c28:	sub	r2, r3, #1
    6c2c:	add	r0, r0, #1
    6c30:	uxtb	r0, r0
    6c34:	ands	r3, r3, r2
    6c38:	bne	6c28 <btbb_process_packet@@Base+0x2e0>
    6c3c:	cmp	r0, #1
    6c40:	movne	r0, r5
    6c44:	addeq	r0, r5, #1
    6c48:	mov	r2, #0
    6c4c:	ldr	r1, [pc, #680]	; 6efc <btbb_process_packet@@Base+0x5b4>
    6c50:	ldr	r6, [pc, #680]	; 6f00 <btbb_process_packet@@Base+0x5b8>
    6c54:	ldr	r8, [pc, #680]	; 6f04 <btbb_process_packet@@Base+0x5bc>
    6c58:	ldr	fp, [pc, #680]	; 6f08 <btbb_process_packet@@Base+0x5c0>
    6c5c:	ldr	sl, [pc, #680]	; 6f0c <btbb_process_packet@@Base+0x5c4>
    6c60:	ldr	r9, [pc, #680]	; 6f10 <btbb_process_packet@@Base+0x5c8>
    6c64:	ldr	ip, [pc, #680]	; 6f14 <btbb_process_packet@@Base+0x5cc>
    6c68:	ldr	lr, [pc, #680]	; 6f18 <btbb_process_packet@@Base+0x5d0>
    6c6c:	ldr	r7, [pc, #680]	; 6f1c <btbb_process_packet@@Base+0x5d4>
    6c70:	b	6cc8 <btbb_process_packet@@Base+0x380>
    6c74:	mov	r0, #0
    6c78:	b	6c3c <btbb_process_packet@@Base+0x2f4>
    6c7c:	cmp	r3, ip
    6c80:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6c84:	cmp	r3, lr
    6c88:	bls	6d24 <btbb_process_packet@@Base+0x3dc>
    6c8c:	cmp	r3, r7
    6c90:	bhi	6db8 <btbb_process_packet@@Base+0x470>
    6c94:	ldr	r5, [pc, #644]	; 6f20 <btbb_process_packet@@Base+0x5d8>
    6c98:	cmp	r3, r5
    6c9c:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6ca0:	cmp	r3, #1024	; 0x400
    6ca4:	bhi	6d94 <btbb_process_packet@@Base+0x44c>
    6ca8:	cmp	r3, #1016	; 0x3f8
    6cac:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6cb0:	cmp	r3, #896	; 0x380
    6cb4:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6cb8:	add	r0, r0, #1
    6cbc:	add	r2, r2, #4
    6cc0:	cmp	r2, #24
    6cc4:	beq	6ee8 <btbb_process_packet@@Base+0x5a0>
    6cc8:	lsr	r3, r4, r2
    6ccc:	lsl	r3, r3, #20
    6cd0:	lsr	r3, r3, #20
    6cd4:	cmp	r3, r1
    6cd8:	bls	6c7c <btbb_process_packet@@Base+0x334>
    6cdc:	cmp	r3, #2944	; 0xb80
    6ce0:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6ce4:	bls	6df8 <btbb_process_packet@@Base+0x4b0>
    6ce8:	cmp	r3, r6
    6cec:	bhi	6ea0 <btbb_process_packet@@Base+0x558>
    6cf0:	cmp	r3, r8
    6cf4:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6cf8:	cmp	r3, #3200	; 0xc80
    6cfc:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6d00:	bls	6e8c <btbb_process_packet@@Base+0x544>
    6d04:	cmp	r3, fp
    6d08:	bcc	6cbc <btbb_process_packet@@Base+0x374>
    6d0c:	ldr	r5, [pc, #528]	; 6f24 <btbb_process_packet@@Base+0x5dc>
    6d10:	cmp	r3, r5
    6d14:	bls	6cb8 <btbb_process_packet@@Base+0x370>
    6d18:	cmp	r3, #3456	; 0xd80
    6d1c:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6d20:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6d24:	ldr	r5, [pc, #508]	; 6f28 <btbb_process_packet@@Base+0x5e0>
    6d28:	cmp	r3, r5
    6d2c:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6d30:	ldr	r5, [pc, #500]	; 6f2c <btbb_process_packet@@Base+0x5e4>
    6d34:	cmp	r3, r5
    6d38:	bls	6d58 <btbb_process_packet@@Base+0x410>
    6d3c:	cmp	r3, #512	; 0x200
    6d40:	bcs	6d78 <btbb_process_packet@@Base+0x430>
    6d44:	cmp	r3, #508	; 0x1fc
    6d48:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6d4c:	cmp	r3, #384	; 0x180
    6d50:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6d54:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6d58:	cmp	r3, #254	; 0xfe
    6d5c:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6d60:	cmp	r3, #31
    6d64:	bls	6cb8 <btbb_process_packet@@Base+0x370>
    6d68:	sub	r3, r3, #127	; 0x7f
    6d6c:	cmp	r3, #1
    6d70:	bhi	6cbc <btbb_process_packet@@Base+0x374>
    6d74:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6d78:	cmp	r3, #512	; 0x200
    6d7c:	bls	6cbc <btbb_process_packet@@Base+0x374>
    6d80:	cmp	r3, #516	; 0x204
    6d84:	bcc	6cb8 <btbb_process_packet@@Base+0x370>
    6d88:	cmp	r3, #640	; 0x280
    6d8c:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6d90:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6d94:	ldr	r5, [pc, #404]	; 6f30 <btbb_process_packet@@Base+0x5e8>
    6d98:	cmp	r3, r5
    6d9c:	bcc	6cbc <btbb_process_packet@@Base+0x374>
    6da0:	add	r5, r5, #5
    6da4:	cmp	r3, r5
    6da8:	bls	6cb8 <btbb_process_packet@@Base+0x370>
    6dac:	cmp	r3, #1152	; 0x480
    6db0:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6db4:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6db8:	cmp	r3, #1536	; 0x600
    6dbc:	bcs	6dd8 <btbb_process_packet@@Base+0x490>
    6dc0:	ldr	r5, [pc, #364]	; 6f34 <btbb_process_packet@@Base+0x5ec>
    6dc4:	cmp	r3, r5
    6dc8:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6dcc:	cmp	r3, #1408	; 0x580
    6dd0:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6dd4:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6dd8:	cmp	r3, #1536	; 0x600
    6ddc:	bls	6cbc <btbb_process_packet@@Base+0x374>
    6de0:	ldr	r5, [pc, #336]	; 6f38 <btbb_process_packet@@Base+0x5f0>
    6de4:	cmp	r3, r5
    6de8:	bls	6cb8 <btbb_process_packet@@Base+0x370>
    6dec:	cmp	r3, #1664	; 0x680
    6df0:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6df4:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6df8:	cmp	r3, #2432	; 0x980
    6dfc:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6e00:	bhi	6e44 <btbb_process_packet@@Base+0x4fc>
    6e04:	cmp	r3, r9
    6e08:	bhi	6e24 <btbb_process_packet@@Base+0x4dc>
    6e0c:	ldr	r5, [pc, #296]	; 6f3c <btbb_process_packet@@Base+0x5f4>
    6e10:	cmp	r3, r5
    6e14:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6e18:	cmp	r3, #1920	; 0x780
    6e1c:	bne	6cbc <btbb_process_packet@@Base+0x374>
    6e20:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6e24:	cmp	r3, #2176	; 0x880
    6e28:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6e2c:	bcc	6cbc <btbb_process_packet@@Base+0x374>
    6e30:	sub	r3, r3, #2288	; 0x8f0
    6e34:	sub	r3, r3, #14
    6e38:	cmp	r3, #3
    6e3c:	bhi	6cbc <btbb_process_packet@@Base+0x374>
    6e40:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6e44:	cmp	r3, sl
    6e48:	bhi	6e6c <btbb_process_packet@@Base+0x524>
    6e4c:	ldr	r5, [pc, #236]	; 6f40 <btbb_process_packet@@Base+0x5f8>
    6e50:	cmp	r3, r5
    6e54:	bcs	6cb8 <btbb_process_packet@@Base+0x370>
    6e58:	sub	r3, r3, #2544	; 0x9f0
    6e5c:	sub	r3, r3, #12
    6e60:	cmp	r3, #3
    6e64:	bhi	6cbc <btbb_process_packet@@Base+0x374>
    6e68:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6e6c:	cmp	r3, #2688	; 0xa80
    6e70:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6e74:	bcc	6cbc <btbb_process_packet@@Base+0x374>
    6e78:	sub	r3, r3, #2800	; 0xaf0
    6e7c:	sub	r3, r3, #14
    6e80:	cmp	r3, #3
    6e84:	bhi	6cbc <btbb_process_packet@@Base+0x374>
    6e88:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6e8c:	sub	r3, r3, #3056	; 0xbf0
    6e90:	sub	r3, r3, #8
    6e94:	cmp	r3, #15
    6e98:	bhi	6cbc <btbb_process_packet@@Base+0x374>
    6e9c:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6ea0:	cmp	r3, #3968	; 0xf80
    6ea4:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6ea8:	bhi	6ecc <btbb_process_packet@@Base+0x584>
    6eac:	cmp	r3, #3712	; 0xe80
    6eb0:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6eb4:	bcc	6cbc <btbb_process_packet@@Base+0x374>
    6eb8:	sub	r3, r3, #3824	; 0xef0
    6ebc:	sub	r3, r3, #14
    6ec0:	cmp	r3, #3
    6ec4:	bhi	6cbc <btbb_process_packet@@Base+0x374>
    6ec8:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6ecc:	cmp	r3, #4064	; 0xfe0
    6ed0:	beq	6cb8 <btbb_process_packet@@Base+0x370>
    6ed4:	bcc	6cbc <btbb_process_packet@@Base+0x374>
    6ed8:	sub	r3, r3, #4080	; 0xff0
    6edc:	cmp	r3, #15
    6ee0:	bhi	6cbc <btbb_process_packet@@Base+0x374>
    6ee4:	b	6cb8 <btbb_process_packet@@Base+0x370>
    6ee8:	add	sp, sp, #580	; 0x244
    6eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6ef0:	andeq	fp, r0, r8, asr #26
    6ef4:	muleq	r0, r8, ip
    6ef8:	mcrhi	14, 4, fp, cr9, cr6, {6}
    6efc:	andeq	r0, r0, r1, lsl #14
    6f00:	andeq	r0, r0, r3, lsl #28
    6f04:	strdeq	r0, [r0], -ip
    6f08:	strdeq	r0, [r0], -lr
    6f0c:	andeq	r0, r0, r3, lsl #20
    6f10:	andeq	r0, r0, pc, lsl #16
    6f14:	strdeq	r0, [r0], -lr
    6f18:	andeq	r0, r0, r1, lsl #6
    6f1c:	andeq	r0, r0, r1, lsl #10
    6f20:	strdeq	r0, [r0], -lr
    6f24:	andeq	r0, r0, r1, lsl #26
    6f28:	strdeq	r0, [r0], -lr
    6f2c:	andeq	r0, r0, r1, lsl #2
    6f30:	andeq	r0, r0, r2, lsl #8
    6f34:	strdeq	r0, [r0], -ip
    6f38:	andeq	r0, r0, r3, lsl #12
    6f3c:	strdeq	r0, [r0], -r4
    6f40:	andeq	r0, r0, r1, lsl #20
    6f44:	push	{r4, r5, r6, r7, r8, lr}
    6f48:	mov	r5, r1
    6f4c:	mov	r6, r2
    6f50:	mov	r7, r3
    6f54:	add	r3, r2, #5
    6f58:	add	r4, r1, r3
    6f5c:	ldrb	r2, [r1, r3]
    6f60:	mov	r1, r0
    6f64:	ldr	r0, [pc, #80]	; 6fbc <btbb_process_packet@@Base+0x674>
    6f68:	add	r0, pc, r0
    6f6c:	bl	2158 <printf@plt>
    6f70:	add	r5, r5, r6
    6f74:	ldr	r6, [pc, #68]	; 6fc0 <btbb_process_packet@@Base+0x678>
    6f78:	add	r6, pc, r6
    6f7c:	ldrb	r1, [r4, #-1]!
    6f80:	mov	r0, r6
    6f84:	bl	2158 <printf@plt>
    6f88:	cmp	r4, r5
    6f8c:	bne	6f7c <btbb_process_packet@@Base+0x634>
    6f90:	ldr	r1, [pc, #44]	; 6fc4 <btbb_process_packet@@Base+0x67c>
    6f94:	add	r1, pc, r1
    6f98:	cmp	r7, #0
    6f9c:	bne	6fb0 <btbb_process_packet@@Base+0x668>
    6fa0:	ldr	r0, [pc, #32]	; 6fc8 <btbb_process_packet@@Base+0x680>
    6fa4:	add	r0, pc, r0
    6fa8:	bl	2158 <printf@plt>
    6fac:	pop	{r4, r5, r6, r7, r8, pc}
    6fb0:	ldr	r1, [pc, #20]	; 6fcc <btbb_process_packet@@Base+0x684>
    6fb4:	add	r1, pc, r1
    6fb8:	b	6fa0 <btbb_process_packet@@Base+0x658>
    6fbc:	andeq	fp, r0, ip, lsr #22
    6fc0:	andeq	fp, r0, r8, lsr #22
    6fc4:	strdeq	fp, [r0], -r8
    6fc8:	andeq	fp, r0, r4, lsl #22
    6fcc:	ldrdeq	fp, [r0], -r0
    6fd0:	push	{r4, lr}
    6fd4:	add	r3, r1, r2
    6fd8:	ldrb	r3, [r3, #1]
    6fdc:	ldrb	r2, [r1, r2]
    6fe0:	orr	r2, r2, r3, lsl #8
    6fe4:	mov	r3, r2
    6fe8:	mov	r1, r0
    6fec:	ldr	r0, [pc, #8]	; 6ffc <btbb_process_packet@@Base+0x6b4>
    6ff0:	add	r0, pc, r0
    6ff4:	bl	2158 <printf@plt>
    6ff8:	pop	{r4, pc}
    6ffc:	andeq	fp, r0, r0, asr #21
    7000:	cmp	r1, #0
    7004:	bxle	lr
    7008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    700c:	vpush	{d8}
    7010:	sub	sp, sp, #52	; 0x34
    7014:	str	r1, [sp, #4]
    7018:	mov	fp, r0
    701c:	ldrb	r4, [r0]
    7020:	add	sl, r4, #1
    7024:	cmp	r1, sl
    7028:	blt	7080 <btbb_process_packet@@Base+0x738>
    702c:	cmp	r4, #0
    7030:	beq	70a8 <btbb_process_packet@@Base+0x760>
    7034:	mov	r5, #1
    7038:	mov	r6, #0
    703c:	ldr	r3, [pc, #868]	; 73a8 <btbb_process_packet@@Base+0xa60>
    7040:	add	r3, pc, r3
    7044:	str	r3, [sp, #12]
    7048:	ldr	r3, [pc, #860]	; 73ac <btbb_process_packet@@Base+0xa64>
    704c:	add	r3, pc, r3
    7050:	str	r3, [sp, #28]
    7054:	ldr	r3, [pc, #852]	; 73b0 <btbb_process_packet@@Base+0xa68>
    7058:	add	r3, pc, r3
    705c:	str	r3, [sp, #20]
    7060:	ldr	r3, [pc, #844]	; 73b4 <btbb_process_packet@@Base+0xa6c>
    7064:	add	r3, pc, r3
    7068:	str	r3, [sp, #16]
    706c:	ldr	r3, [pc, #836]	; 73b8 <btbb_process_packet@@Base+0xa70>
    7070:	add	r3, pc, r3
    7074:	str	r3, [sp, #24]
    7078:	vldr	d8, [pc, #800]	; 73a0 <btbb_process_packet@@Base+0xa58>
    707c:	b	72b4 <btbb_process_packet@@Base+0x96c>
    7080:	mov	r5, #1
    7084:	ldr	r3, [sp, #4]
    7088:	mov	r2, r4
    708c:	mov	r1, r5
    7090:	ldr	r0, [pc, #804]	; 73bc <btbb_process_packet@@Base+0xa74>
    7094:	add	r0, pc, r0
    7098:	bl	2158 <printf@plt>
    709c:	add	sp, sp, #52	; 0x34
    70a0:	vpop	{d8}
    70a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    70a8:	ldr	r0, [pc, #784]	; 73c0 <btbb_process_packet@@Base+0xa78>
    70ac:	add	r0, pc, r0
    70b0:	bl	2314 <puts@plt>
    70b4:	b	709c <btbb_process_packet@@Base+0x754>
    70b8:	cmp	r8, #2
    70bc:	beq	7328 <btbb_process_packet@@Base+0x9e0>
    70c0:	bls	7124 <btbb_process_packet@@Base+0x7dc>
    70c4:	cmp	r8, #3
    70c8:	beq	7380 <btbb_process_packet@@Base+0xa38>
    70cc:	cmp	r8, #6
    70d0:	bne	7720 <btbb_process_packet@@Base+0xdd8>
    70d4:	ldr	r0, [pc, #744]	; 73c4 <btbb_process_packet@@Base+0xa7c>
    70d8:	add	r0, pc, r0
    70dc:	bl	2314 <puts@plt>
    70e0:	sub	r1, r4, #1
    70e4:	tst	r1, #15
    70e8:	bne	754c <btbb_process_packet@@Base+0xc04>
    70ec:	cmp	r1, #0
    70f0:	ble	7280 <btbb_process_packet@@Base+0x938>
    70f4:	add	r3, fp, r6
    70f8:	ldrb	r3, [r3, #2]
    70fc:	strb	r3, [sp, #47]	; 0x2f
    7100:	add	r6, r6, #2
    7104:	add	r6, fp, r6
    7108:	sub	r4, r4, #1
    710c:	mov	r5, #0
    7110:	add	r9, sp, #36	; 0x24
    7114:	ldr	r3, [pc, #684]	; 73c8 <btbb_process_packet@@Base+0xa80>
    7118:	add	r3, pc, r3
    711c:	str	r3, [sp, #8]
    7120:	b	74e8 <btbb_process_packet@@Base+0xba0>
    7124:	cmp	r8, #1
    7128:	bne	7720 <btbb_process_packet@@Base+0xdd8>
    712c:	ldr	r0, [pc, #664]	; 73cc <btbb_process_packet@@Base+0xa84>
    7130:	add	r0, pc, r0
    7134:	bl	2314 <puts@plt>
    7138:	ldr	r0, [pc, #656]	; 73d0 <btbb_process_packet@@Base+0xa88>
    713c:	add	r0, pc, r0
    7140:	bl	2158 <printf@plt>
    7144:	mov	r5, #7
    7148:	add	r9, r9, #1
    714c:	add	r9, fp, r9
    7150:	ldr	r4, [pc, #636]	; 73d4 <btbb_process_packet@@Base+0xa8c>
    7154:	add	r4, pc, r4
    7158:	ldrb	r1, [r9]
    715c:	asr	r1, r1, r5
    7160:	and	r1, r1, #1
    7164:	mov	r0, r4
    7168:	bl	2158 <printf@plt>
    716c:	sub	r5, r5, #1
    7170:	cmn	r5, #1
    7174:	bne	7158 <btbb_process_packet@@Base+0x810>
    7178:	mov	r0, #10
    717c:	bl	2434 <putchar@plt>
    7180:	mov	r4, #0
    7184:	ldr	r6, [pc, #588]	; 73d8 <btbb_process_packet@@Base+0xa90>
    7188:	add	r6, pc, r6
    718c:	ldr	r5, [pc, #584]	; 73dc <btbb_process_packet@@Base+0xa94>
    7190:	add	r5, pc, r5
    7194:	b	7254 <btbb_process_packet@@Base+0x90c>
    7198:	cmp	r8, #22
    719c:	beq	7664 <btbb_process_packet@@Base+0xd1c>
    71a0:	cmp	r8, #255	; 0xff
    71a4:	bne	7720 <btbb_process_packet@@Base+0xdd8>
    71a8:	ldr	r0, [pc, #560]	; 73e0 <btbb_process_packet@@Base+0xa98>
    71ac:	add	r0, pc, r0
    71b0:	bl	2314 <puts@plt>
    71b4:	ldr	r0, [pc, #552]	; 73e4 <btbb_process_packet@@Base+0xa9c>
    71b8:	add	r0, pc, r0
    71bc:	bl	2158 <printf@plt>
    71c0:	sub	r1, r4, #1
    71c4:	cmp	r1, #1
    71c8:	ble	7710 <btbb_process_packet@@Base+0xdc8>
    71cc:	add	r3, fp, r5
    71d0:	ldrb	r0, [r3, #2]
    71d4:	ldrb	r3, [r3, #1]
    71d8:	orr	r0, r3, r0, lsl #8
    71dc:	bl	2470 <bt_compidtostr@plt>
    71e0:	mov	r1, r0
    71e4:	ldr	r0, [pc, #508]	; 73e8 <btbb_process_packet@@Base+0xaa0>
    71e8:	add	r0, pc, r0
    71ec:	bl	2158 <printf@plt>
    71f0:	ldr	r0, [pc, #500]	; 73ec <btbb_process_packet@@Base+0xaa4>
    71f4:	add	r0, pc, r0
    71f8:	bl	2158 <printf@plt>
    71fc:	ldr	r0, [pc, #492]	; 73f0 <btbb_process_packet@@Base+0xaa8>
    7200:	add	r0, pc, r0
    7204:	bl	2158 <printf@plt>
    7208:	cmp	r4, #3
    720c:	ble	723c <btbb_process_packet@@Base+0x8f4>
    7210:	add	r5, r5, #3
    7214:	add	r5, fp, r5
    7218:	add	r4, r4, r9
    721c:	add	r4, fp, r4
    7220:	ldr	r6, [pc, #460]	; 73f4 <btbb_process_packet@@Base+0xaac>
    7224:	add	r6, pc, r6
    7228:	ldrb	r1, [r5], #1
    722c:	mov	r0, r6
    7230:	bl	2158 <printf@plt>
    7234:	cmp	r5, r4
    7238:	bne	7228 <btbb_process_packet@@Base+0x8e0>
    723c:	mov	r0, #10
    7240:	bl	2434 <putchar@plt>
    7244:	b	7280 <btbb_process_packet@@Base+0x938>
    7248:	add	r4, r4, #1
    724c:	cmp	r4, #8
    7250:	beq	7278 <btbb_process_packet@@Base+0x930>
    7254:	ldrb	r3, [r9]
    7258:	asr	r3, r3, r4
    725c:	tst	r3, #1
    7260:	beq	7248 <btbb_process_packet@@Base+0x900>
    7264:	mov	r0, r6
    7268:	bl	2158 <printf@plt>
    726c:	ldr	r0, [r5, r4, lsl #2]
    7270:	bl	2314 <puts@plt>
    7274:	b	7248 <btbb_process_packet@@Base+0x900>
    7278:	mov	r0, #10
    727c:	bl	2434 <putchar@plt>
    7280:	ldr	r3, [sp, #4]
    7284:	cmp	r3, sl
    7288:	ble	709c <btbb_process_packet@@Base+0x754>
    728c:	ldrb	r4, [fp, sl]
    7290:	add	r5, sl, #1
    7294:	add	r3, r4, r5
    7298:	ldr	r2, [sp, #4]
    729c:	cmp	r2, r3
    72a0:	blt	7084 <btbb_process_packet@@Base+0x73c>
    72a4:	mov	r6, sl
    72a8:	cmp	r4, #0
    72ac:	beq	70a8 <btbb_process_packet@@Base+0x760>
    72b0:	mov	sl, r3
    72b4:	mov	r9, r5
    72b8:	add	r7, fp, r5
    72bc:	ldrb	r8, [fp, r5]
    72c0:	mov	r1, r8
    72c4:	ldr	r0, [sp, #12]
    72c8:	bl	2158 <printf@plt>
    72cc:	cmp	r8, #7
    72d0:	beq	7390 <btbb_process_packet@@Base+0xa48>
    72d4:	bls	70b8 <btbb_process_packet@@Base+0x770>
    72d8:	cmp	r8, #18
    72dc:	beq	75d8 <btbb_process_packet@@Base+0xc90>
    72e0:	bhi	7198 <btbb_process_packet@@Base+0x850>
    72e4:	cmp	r8, #9
    72e8:	beq	7558 <btbb_process_packet@@Base+0xc10>
    72ec:	cmp	r8, #10
    72f0:	bne	7720 <btbb_process_packet@@Base+0xdd8>
    72f4:	ldr	r0, [pc, #252]	; 73f8 <btbb_process_packet@@Base+0xab0>
    72f8:	add	r0, pc, r0
    72fc:	bl	2314 <puts@plt>
    7300:	ldr	r0, [pc, #244]	; 73fc <btbb_process_packet@@Base+0xab4>
    7304:	add	r0, pc, r0
    7308:	bl	2158 <printf@plt>
    730c:	cmp	r4, #2
    7310:	beq	75c0 <btbb_process_packet@@Base+0xc78>
    7314:	sub	r1, r4, #1
    7318:	ldr	r0, [pc, #224]	; 7400 <btbb_process_packet@@Base+0xab8>
    731c:	add	r0, pc, r0
    7320:	bl	2158 <printf@plt>
    7324:	b	7280 <btbb_process_packet@@Base+0x938>
    7328:	ldr	r0, [pc, #212]	; 7404 <btbb_process_packet@@Base+0xabc>
    732c:	add	r0, pc, r0
    7330:	bl	2314 <puts@plt>
    7334:	sub	r3, r4, #1
    7338:	tst	r3, #1
    733c:	bne	7280 <btbb_process_packet@@Base+0x938>
    7340:	cmp	r3, #0
    7344:	ble	7280 <btbb_process_packet@@Base+0x938>
    7348:	add	r5, fp, r6
    734c:	sub	r4, r4, #2
    7350:	bic	r4, r4, #1
    7354:	add	r6, r6, #2
    7358:	add	r4, r4, r6
    735c:	add	r4, fp, r4
    7360:	ldr	r6, [pc, #160]	; 7408 <btbb_process_packet@@Base+0xac0>
    7364:	add	r6, pc, r6
    7368:	ldrh	r1, [r5, #2]!
    736c:	mov	r0, r6
    7370:	bl	2158 <printf@plt>
    7374:	cmp	r4, r5
    7378:	bne	7368 <btbb_process_packet@@Base+0xa20>
    737c:	b	7280 <btbb_process_packet@@Base+0x938>
    7380:	ldr	r0, [pc, #132]	; 740c <btbb_process_packet@@Base+0xac4>
    7384:	add	r0, pc, r0
    7388:	bl	2314 <puts@plt>
    738c:	b	7334 <btbb_process_packet@@Base+0x9ec>
    7390:	ldr	r0, [pc, #120]	; 7410 <btbb_process_packet@@Base+0xac8>
    7394:	add	r0, pc, r0
    7398:	bl	2314 <puts@plt>
    739c:	b	70e0 <btbb_process_packet@@Base+0x798>
    73a0:	andeq	r0, r0, r0
    73a4:	svccc	0x00f40000
    73a8:	andeq	fp, r0, r0, ror #21
    73ac:			; <UNDEFINED> instruction: 0x0000bbb0
    73b0:	strdeq	fp, [r0], -r0
    73b4:	muleq	r0, r0, fp
    73b8:	andeq	fp, r0, r4, lsl #23
    73bc:	andeq	fp, r0, r0, lsr sl
    73c0:	andeq	fp, r0, r4, asr sl
    73c4:	ldrdeq	fp, [r0], -r4
    73c8:	ldrdeq	fp, [r0], -ip
    73cc:	andeq	fp, r0, r4, lsl #20
    73d0:	andeq	fp, r0, ip, lsl #20
    73d4:	andeq	fp, r0, ip, ror #19
    73d8:			; <UNDEFINED> instruction: 0x0000b9bc
    73dc:	andeq	r1, r2, r0, asr #25
    73e0:	andeq	fp, r0, ip, ror fp
    73e4:	muleq	r0, r0, r9
    73e8:	andeq	fp, r0, r0, ror #22
    73ec:	andeq	fp, r0, r4, asr r9
    73f0:	andeq	fp, r0, r8, asr fp
    73f4:	andeq	fp, r0, r8, lsl #18
    73f8:	andeq	fp, r0, r8, asr #18
    73fc:	andeq	fp, r0, r4, asr #16
    7400:	andeq	fp, r0, r0, asr #18
    7404:	andeq	fp, r0, r8, lsr #16
    7408:	andeq	fp, r0, r4, lsr r8
    740c:	strdeq	fp, [r0], -r8
    7410:	andeq	fp, r0, r4, asr #16
    7414:	andeq	fp, r0, ip, asr #13
    7418:	andeq	fp, r0, r0, ror #11
    741c:	andeq	fp, r0, r8, lsl #13
    7420:	andeq	fp, r0, r0, lsr #13
    7424:	andeq	fp, r0, r0, ror #10
    7428:			; <UNDEFINED> instruction: 0x0000b6b8
    742c:	andeq	fp, r0, r0, ror r6
    7430:	andeq	fp, r0, r4, asr r6
    7434:	andeq	fp, r0, r0, ror r6
    7438:	ldrdeq	fp, [r0], -r4
    743c:	andeq	fp, r0, ip, asr #12
    7440:	andeq	fp, r0, r8, lsr r6
    7444:	andeq	fp, r0, ip, asr #8
    7448:	andeq	fp, r0, r0, lsl #12
    744c:	strdeq	fp, [r0], -r0
    7450:	andeq	fp, r0, ip, lsl r4
    7454:	andeq	fp, r0, r0, ror #7
    7458:	mov	r0, #45	; 0x2d
    745c:	bl	2434 <putchar@plt>
    7460:	ldrb	r1, [sp, #36]	; 0x24
    7464:	ldr	r8, [sp, #24]
    7468:	mov	r0, r8
    746c:	bl	2158 <printf@plt>
    7470:	ldrb	r1, [sp, #37]	; 0x25
    7474:	mov	r0, r8
    7478:	bl	2158 <printf@plt>
    747c:	mov	r0, #45	; 0x2d
    7480:	bl	2434 <putchar@plt>
    7484:	ldrb	r1, [sp, #38]	; 0x26
    7488:	mov	r0, r8
    748c:	bl	2158 <printf@plt>
    7490:	ldrb	r1, [sp, #39]	; 0x27
    7494:	mov	r0, r8
    7498:	bl	2158 <printf@plt>
    749c:	mov	r0, #45	; 0x2d
    74a0:	bl	2434 <putchar@plt>
    74a4:	ldrb	r1, [sp, #40]	; 0x28
    74a8:	mov	r0, r8
    74ac:	bl	2158 <printf@plt>
    74b0:	add	r7, sp, #48	; 0x30
    74b4:	ldrb	r1, [r7, #-7]!
    74b8:	mov	r0, r8
    74bc:	bl	2158 <printf@plt>
    74c0:	mov	r0, #45	; 0x2d
    74c4:	bl	2434 <putchar@plt>
    74c8:	add	r8, sp, #47	; 0x2f
    74cc:	ldrb	r1, [r7, #1]!
    74d0:	ldr	r0, [sp, #8]
    74d4:	bl	2158 <printf@plt>
    74d8:	cmp	r7, r8
    74dc:	bne	74cc <btbb_process_packet@@Base+0xb84>
    74e0:	mov	r0, #10
    74e4:	bl	2434 <putchar@plt>
    74e8:	add	r5, r5, #1
    74ec:	cmp	r4, r5
    74f0:	beq	7280 <btbb_process_packet@@Base+0x938>
    74f4:	asr	r3, r5, #31
    74f8:	lsr	r2, r3, #28
    74fc:	add	r3, r5, r2
    7500:	and	r3, r3, #15
    7504:	sub	r3, r3, r2
    7508:	mvn	r3, r3
    750c:	ldrb	r2, [r6, #1]!
    7510:	add	r1, sp, #32
    7514:	add	r3, r3, #16
    7518:	strb	r2, [r1, r3]
    751c:	and	r3, r5, #15
    7520:	cmp	r3, #15
    7524:	bne	74e8 <btbb_process_packet@@Base+0xba0>
    7528:	ldr	r0, [sp, #20]
    752c:	bl	2158 <printf@plt>
    7530:	add	r7, sp, #32
    7534:	ldrb	r1, [r7], #1
    7538:	ldr	r0, [sp, #16]
    753c:	bl	2158 <printf@plt>
    7540:	cmp	r7, r9
    7544:	bne	7534 <btbb_process_packet@@Base+0xbec>
    7548:	b	7458 <btbb_process_packet@@Base+0xb10>
    754c:	ldr	r0, [sp, #28]
    7550:	bl	2158 <printf@plt>
    7554:	b	7280 <btbb_process_packet@@Base+0x938>
    7558:	ldr	r0, [pc, #-332]	; 7414 <btbb_process_packet@@Base+0xacc>
    755c:	add	r0, pc, r0
    7560:	bl	2314 <puts@plt>
    7564:	ldr	r0, [pc, #-340]	; 7418 <btbb_process_packet@@Base+0xad0>
    7568:	add	r0, pc, r0
    756c:	bl	2158 <printf@plt>
    7570:	cmp	r4, #1
    7574:	ble	75b4 <btbb_process_packet@@Base+0xc6c>
    7578:	bl	2368 <__ctype_b_loc@plt>
    757c:	mov	r5, r0
    7580:	add	r4, r4, r9
    7584:	sub	r4, r4, #1
    7588:	add	r4, fp, r4
    758c:	ldrb	r0, [r7, #1]!
    7590:	ldr	r2, [r5]
    7594:	lsl	r3, r0, #1
    7598:	ldrh	r3, [r2, r3]
    759c:	and	r3, r3, #16384	; 0x4000
    75a0:	cmp	r3, #0
    75a4:	moveq	r0, #46	; 0x2e
    75a8:	bl	2434 <putchar@plt>
    75ac:	cmp	r7, r4
    75b0:	bne	758c <btbb_process_packet@@Base+0xc44>
    75b4:	mov	r0, #10
    75b8:	bl	2434 <putchar@plt>
    75bc:	b	7280 <btbb_process_packet@@Base+0x938>
    75c0:	add	r9, fp, r5
    75c4:	ldrb	r1, [r9, #1]
    75c8:	ldr	r0, [pc, #-436]	; 741c <btbb_process_packet@@Base+0xad4>
    75cc:	add	r0, pc, r0
    75d0:	bl	2158 <printf@plt>
    75d4:	b	7280 <btbb_process_packet@@Base+0x938>
    75d8:	ldr	r0, [pc, #-448]	; 7420 <btbb_process_packet@@Base+0xad8>
    75dc:	add	r0, pc, r0
    75e0:	bl	2314 <puts@plt>
    75e4:	ldr	r0, [pc, #-456]	; 7424 <btbb_process_packet@@Base+0xadc>
    75e8:	add	r0, pc, r0
    75ec:	bl	2158 <printf@plt>
    75f0:	cmp	r4, #5
    75f4:	beq	760c <btbb_process_packet@@Base+0xcc4>
    75f8:	sub	r1, r4, #1
    75fc:	ldr	r0, [pc, #-476]	; 7428 <btbb_process_packet@@Base+0xae0>
    7600:	add	r0, pc, r0
    7604:	bl	2158 <printf@plt>
    7608:	b	7280 <btbb_process_packet@@Base+0x938>
    760c:	add	r9, fp, r5
    7610:	ldrb	r2, [r9, #2]
    7614:	ldrb	r3, [r9, #1]
    7618:	orr	r3, r3, r2, lsl #8
    761c:	vmov	s15, r3
    7620:	vcvt.f64.s32	d7, s15
    7624:	vmul.f64	d7, d7, d8
    7628:	vmov	r2, r3, d7
    762c:	ldr	r0, [pc, #-520]	; 742c <btbb_process_packet@@Base+0xae4>
    7630:	add	r0, pc, r0
    7634:	bl	2158 <printf@plt>
    7638:	ldrb	r2, [r9, #4]
    763c:	ldrb	r3, [r9, #3]
    7640:	orr	r3, r3, r2, lsl #8
    7644:	vmov	s15, r3
    7648:	vcvt.f64.s32	d7, s15
    764c:	vmul.f64	d7, d7, d8
    7650:	vmov	r2, r3, d7
    7654:	ldr	r0, [pc, #-556]	; 7430 <btbb_process_packet@@Base+0xae8>
    7658:	add	r0, pc, r0
    765c:	bl	2158 <printf@plt>
    7660:	b	7280 <btbb_process_packet@@Base+0x938>
    7664:	ldr	r0, [pc, #-568]	; 7434 <btbb_process_packet@@Base+0xaec>
    7668:	add	r0, pc, r0
    766c:	bl	2314 <puts@plt>
    7670:	ldr	r0, [pc, #-576]	; 7438 <btbb_process_packet@@Base+0xaf0>
    7674:	add	r0, pc, r0
    7678:	bl	2158 <printf@plt>
    767c:	sub	r6, r4, #1
    7680:	cmp	r6, #1
    7684:	ble	76fc <btbb_process_packet@@Base+0xdb4>
    7688:	add	r3, fp, r5
    768c:	ldrb	r1, [r3, #2]
    7690:	ldrb	r3, [r3, #1]
    7694:	orr	r1, r3, r1, lsl #8
    7698:	ldr	r0, [pc, #-612]	; 743c <btbb_process_packet@@Base+0xaf4>
    769c:	add	r0, pc, r0
    76a0:	bl	2158 <printf@plt>
    76a4:	cmp	r6, #2
    76a8:	bgt	76b8 <btbb_process_packet@@Base+0xd70>
    76ac:	mov	r0, #10
    76b0:	bl	2434 <putchar@plt>
    76b4:	b	7280 <btbb_process_packet@@Base+0x938>
    76b8:	ldr	r0, [pc, #-640]	; 7440 <btbb_process_packet@@Base+0xaf8>
    76bc:	add	r0, pc, r0
    76c0:	bl	2158 <printf@plt>
    76c4:	cmp	r4, #3
    76c8:	ble	76ac <btbb_process_packet@@Base+0xd64>
    76cc:	add	r5, r5, #3
    76d0:	add	r5, fp, r5
    76d4:	add	r4, r4, r9
    76d8:	add	r4, fp, r4
    76dc:	ldr	r6, [pc, #-672]	; 7444 <btbb_process_packet@@Base+0xafc>
    76e0:	add	r6, pc, r6
    76e4:	ldrb	r1, [r5], #1
    76e8:	mov	r0, r6
    76ec:	bl	2158 <printf@plt>
    76f0:	cmp	r5, r4
    76f4:	bne	76e4 <btbb_process_packet@@Base+0xd9c>
    76f8:	b	76ac <btbb_process_packet@@Base+0xd64>
    76fc:	mov	r1, r6
    7700:	ldr	r0, [pc, #-704]	; 7448 <btbb_process_packet@@Base+0xb00>
    7704:	add	r0, pc, r0
    7708:	bl	2158 <printf@plt>
    770c:	b	7280 <btbb_process_packet@@Base+0x938>
    7710:	ldr	r0, [pc, #-716]	; 744c <btbb_process_packet@@Base+0xb04>
    7714:	add	r0, pc, r0
    7718:	bl	2158 <printf@plt>
    771c:	b	7280 <btbb_process_packet@@Base+0x938>
    7720:	mov	r0, #10
    7724:	bl	2434 <putchar@plt>
    7728:	ldr	r0, [pc, #-736]	; 7450 <btbb_process_packet@@Base+0xb08>
    772c:	add	r0, pc, r0
    7730:	bl	2158 <printf@plt>
    7734:	cmp	r4, #1
    7738:	ble	7764 <btbb_process_packet@@Base+0xe1c>
    773c:	add	r4, r4, r9
    7740:	sub	r4, r4, #1
    7744:	add	r4, fp, r4
    7748:	ldr	r5, [pc, #-764]	; 7454 <btbb_process_packet@@Base+0xb0c>
    774c:	add	r5, pc, r5
    7750:	ldrb	r1, [r7, #1]!
    7754:	mov	r0, r5
    7758:	bl	2158 <printf@plt>
    775c:	cmp	r4, r7
    7760:	bne	7750 <btbb_process_packet@@Base+0xe08>
    7764:	mov	r0, #10
    7768:	bl	2434 <putchar@plt>
    776c:	b	7280 <btbb_process_packet@@Base+0x938>

00007770 <lell_packet_new@@Base>:
    7770:	push	{r4, lr}
    7774:	mov	r1, #104	; 0x68
    7778:	mov	r0, #1
    777c:	bl	2104 <calloc@plt>
    7780:	mov	r3, #1
    7784:	str	r3, [r0, #96]	; 0x60
    7788:	pop	{r4, pc}

0000778c <lell_packet_ref@@Base>:
    778c:	ldr	r3, [r0, #96]	; 0x60
    7790:	add	r3, r3, #1
    7794:	str	r3, [r0, #96]	; 0x60
    7798:	bx	lr

0000779c <lell_packet_unref@@Base>:
    779c:	ldr	r3, [r0, #96]	; 0x60
    77a0:	subs	r3, r3, #1
    77a4:	beq	77b0 <lell_packet_unref@@Base+0x14>
    77a8:	str	r3, [r0, #96]	; 0x60
    77ac:	bx	lr
    77b0:	push	{r4, lr}
    77b4:	bl	21a0 <free@plt>
    77b8:	pop	{r4, pc}

000077bc <lell_packet_is_data@@Base>:
    77bc:	ldrb	r0, [r0, #68]	; 0x44
    77c0:	cmp	r0, #36	; 0x24
    77c4:	movhi	r0, #0
    77c8:	movls	r0, #1
    77cc:	bx	lr

000077d0 <lell_allocate_and_decode@@Base>:
    77d0:	push	{r4, r5, r6, r7, r8, lr}
    77d4:	mov	r7, r0
    77d8:	mov	r5, r1
    77dc:	mov	r6, r2
    77e0:	mov	r4, r3
    77e4:	bl	2464 <lell_packet_new@plt>
    77e8:	str	r0, [r4]
    77ec:	mov	r3, r7
    77f0:	add	r7, r7, #64	; 0x40
    77f4:	ldr	lr, [r3]
    77f8:	ldr	ip, [r3, #4]
    77fc:	ldr	r1, [r3, #8]
    7800:	ldr	r2, [r3, #12]
    7804:	str	lr, [r0]
    7808:	str	ip, [r0, #4]
    780c:	str	r1, [r0, #8]
    7810:	str	r2, [r0, #12]
    7814:	add	r3, r3, #16
    7818:	add	r0, r0, #16
    781c:	cmp	r3, r7
    7820:	bne	77f4 <lell_allocate_and_decode@@Base+0x24>
    7824:	ldr	r2, [r4]
    7828:	ldr	r3, [pc, #492]	; 7a1c <lell_allocate_and_decode@@Base+0x24c>
    782c:	cmp	r5, r3
    7830:	moveq	r3, #37	; 0x25
    7834:	beq	788c <lell_allocate_and_decode@@Base+0xbc>
    7838:	add	r3, r3, #23
    783c:	cmp	r5, r3
    7840:	bls	7878 <lell_allocate_and_decode@@Base+0xa8>
    7844:	ldr	r3, [pc, #468]	; 7a20 <lell_allocate_and_decode@@Base+0x250>
    7848:	cmp	r5, r3
    784c:	moveq	r3, #38	; 0x26
    7850:	beq	788c <lell_allocate_and_decode@@Base+0xbc>
    7854:	cmp	r5, #2480	; 0x9b0
    7858:	subcc	r3, r5, #2416	; 0x970
    785c:	subcc	r3, r3, #12
    7860:	addcc	r3, r3, r3, lsr #31
    7864:	asrcc	r3, r3, #1
    7868:	addcc	r3, r3, #11
    786c:	uxtbcc	r3, r3
    7870:	movcs	r3, #39	; 0x27
    7874:	b	788c <lell_allocate_and_decode@@Base+0xbc>
    7878:	sub	r3, r5, #2400	; 0x960
    787c:	sub	r3, r3, #4
    7880:	add	r3, r3, r3, lsr #31
    7884:	asr	r3, r3, #1
    7888:	uxtb	r3, r3
    788c:	strb	r3, [r2, #68]	; 0x44
    7890:	ldr	r3, [r4]
    7894:	sub	r5, r5, #2400	; 0x960
    7898:	sub	r5, r5, #2
    789c:	add	r5, r5, r5, lsr #31
    78a0:	asr	r5, r5, #1
    78a4:	strb	r5, [r3, #69]	; 0x45
    78a8:	ldr	r3, [r4]
    78ac:	str	r6, [r3, #76]	; 0x4c
    78b0:	ldr	r3, [r4]
    78b4:	mov	r2, #0
    78b8:	str	r2, [r3, #64]	; 0x40
    78bc:	ldr	r3, [r4]
    78c0:	ldrb	r1, [r3]
    78c4:	ldr	r2, [r3, #64]	; 0x40
    78c8:	orr	r2, r2, r1
    78cc:	str	r2, [r3, #64]	; 0x40
    78d0:	ldr	r3, [r4]
    78d4:	ldrb	r1, [r3, #1]
    78d8:	ldr	r2, [r3, #64]	; 0x40
    78dc:	orr	r2, r2, r1, lsl #8
    78e0:	str	r2, [r3, #64]	; 0x40
    78e4:	ldr	r3, [r4]
    78e8:	ldrb	r1, [r3, #2]
    78ec:	ldr	r2, [r3, #64]	; 0x40
    78f0:	orr	r2, r2, r1, lsl #16
    78f4:	str	r2, [r3, #64]	; 0x40
    78f8:	ldr	r3, [r4]
    78fc:	ldrb	r1, [r3, #3]
    7900:	ldr	r2, [r3, #64]	; 0x40
    7904:	orr	r2, r2, r1, lsl #24
    7908:	str	r2, [r3, #64]	; 0x40
    790c:	ldr	r0, [r4]
    7910:	bl	2170 <lell_packet_is_data@plt>
    7914:	cmp	r0, #0
    7918:	bne	7998 <lell_allocate_and_decode@@Base+0x1c8>
    791c:	ldr	r2, [r4]
    7920:	ldrb	r3, [r2, #5]
    7924:	and	r3, r3, #63	; 0x3f
    7928:	str	r3, [r2, #72]	; 0x48
    792c:	ldr	r2, [r4]
    7930:	ldrb	r3, [r2, #4]
    7934:	and	r3, r3, #15
    7938:	strb	r3, [r2, #80]	; 0x50
    793c:	ldr	r2, [r4]
    7940:	ldrb	r3, [r2, #4]
    7944:	lsr	r3, r3, #6
    7948:	and	r3, r3, #1
    794c:	str	r3, [r2, #84]	; 0x54
    7950:	ldr	r2, [r4]
    7954:	ldrsb	r3, [r2, #4]
    7958:	lsr	r3, r3, #31
    795c:	str	r3, [r2, #88]	; 0x58
    7960:	ldr	r2, [r4]
    7964:	ldr	ip, [r2, #64]	; 0x40
    7968:	ldrb	r3, [r2, #100]	; 0x64
    796c:	bic	r3, r3, #1
    7970:	ldr	r1, [pc, #172]	; 7a24 <lell_allocate_and_decode@@Base+0x254>
    7974:	cmp	ip, r1
    7978:	orreq	r3, r3, #1
    797c:	strb	r3, [r2, #100]	; 0x64
    7980:	ldr	r1, [r4]
    7984:	ldrb	r3, [r1, #100]	; 0x64
    7988:	tst	r3, #1
    798c:	beq	79d8 <lell_allocate_and_decode@@Base+0x208>
    7990:	str	r0, [r1, #92]	; 0x5c
    7994:	pop	{r4, r5, r6, r7, r8, pc}
    7998:	ldr	r2, [r4]
    799c:	ldrb	r3, [r2, #5]
    79a0:	and	r3, r3, #31
    79a4:	str	r3, [r2, #72]	; 0x48
    79a8:	ldr	r5, [r4]
    79ac:	ldr	r0, [r5, #64]	; 0x40
    79b0:	bl	6ae8 <btbb_process_packet@@Base+0x1a0>
    79b4:	str	r0, [r5, #92]	; 0x5c
    79b8:	ldr	r2, [r4]
    79bc:	ldr	r1, [r2, #92]	; 0x5c
    79c0:	ldrb	r3, [r2, #100]	; 0x64
    79c4:	bic	r3, r3, #1
    79c8:	cmp	r1, #0
    79cc:	orreq	r3, r3, #1
    79d0:	strb	r3, [r2, #100]	; 0x64
    79d4:	pop	{r4, r5, r6, r7, r8, pc}
    79d8:	ldr	r0, [r1, #64]	; 0x40
    79dc:	ldr	r2, [pc, #64]	; 7a24 <lell_allocate_and_decode@@Base+0x254>
    79e0:	eor	r3, r0, r2
    79e4:	cmp	r0, r2
    79e8:	beq	7a14 <lell_allocate_and_decode@@Base+0x244>
    79ec:	mov	r0, #0
    79f0:	sub	r2, r3, #1
    79f4:	add	r0, r0, #1
    79f8:	uxtb	r0, r0
    79fc:	ands	r3, r3, r2
    7a00:	bne	79f0 <lell_allocate_and_decode@@Base+0x220>
    7a04:	cmp	r0, #1
    7a08:	moveq	r0, #1
    7a0c:	movne	r0, #32
    7a10:	b	7990 <lell_allocate_and_decode@@Base+0x1c0>
    7a14:	mov	r0, #32
    7a18:	b	7990 <lell_allocate_and_decode@@Base+0x1c0>
    7a1c:	andeq	r0, r0, r2, ror #18
    7a20:	andeq	r0, r0, sl, ror r9
    7a24:	mcrhi	14, 4, fp, cr9, cr6, {6}

00007a28 <lell_get_access_address@@Base>:
    7a28:	ldr	r0, [r0, #64]	; 0x40
    7a2c:	bx	lr

00007a30 <lell_get_access_address_offenses@@Base>:
    7a30:	ldr	r0, [r0, #92]	; 0x5c
    7a34:	bx	lr

00007a38 <lell_get_channel_index@@Base>:
    7a38:	ldrb	r0, [r0, #68]	; 0x44
    7a3c:	bx	lr

00007a40 <lell_get_channel_k@@Base>:
    7a40:	ldrb	r0, [r0, #69]	; 0x45
    7a44:	bx	lr

00007a48 <lell_get_adv_type_str@@Base>:
    7a48:	push	{r4, lr}
    7a4c:	mov	r4, r0
    7a50:	bl	2170 <lell_packet_is_data@plt>
    7a54:	cmp	r0, #0
    7a58:	bne	7a7c <lell_get_adv_type_str@@Base+0x34>
    7a5c:	ldrb	r3, [r4, #80]	; 0x50
    7a60:	cmp	r3, #6
    7a64:	bhi	7a84 <lell_get_adv_type_str@@Base+0x3c>
    7a68:	ldr	r2, [pc, #32]	; 7a90 <lell_get_adv_type_str@@Base+0x48>
    7a6c:	add	r2, pc, r2
    7a70:	add	r3, r2, r3, lsl #2
    7a74:	ldr	r0, [r3, #32]
    7a78:	pop	{r4, pc}
    7a7c:	mov	r0, #0
    7a80:	pop	{r4, pc}
    7a84:	ldr	r0, [pc, #8]	; 7a94 <lell_get_adv_type_str@@Base+0x4c>
    7a88:	add	r0, pc, r0
    7a8c:	pop	{r4, pc}
    7a90:	andeq	r1, r2, r4, ror #7
    7a94:	ldrdeq	fp, [r0], -r8

00007a98 <lell_print@@Base>:
    7a98:	push	{r4, r5, r6, r7, r8, lr}
    7a9c:	mov	r6, r0
    7aa0:	bl	2170 <lell_packet_is_data@plt>
    7aa4:	cmp	r0, #0
    7aa8:	beq	7c14 <lell_print@@Base+0x17c>
    7aac:	ldrb	r4, [r6, #4]
    7ab0:	and	r4, r4, #3
    7ab4:	ldr	r1, [r6, #64]	; 0x40
    7ab8:	ldrb	r3, [r6, #100]	; 0x64
    7abc:	ldr	r2, [pc, #1208]	; 7f7c <lell_print@@Base+0x4e4>
    7ac0:	add	r2, pc, r2
    7ac4:	tst	r3, #1
    7ac8:	ldrne	r2, [pc, #1200]	; 7f80 <lell_print@@Base+0x4e8>
    7acc:	addne	r2, pc, r2
    7ad0:	ldr	r3, [r6, #72]	; 0x48
    7ad4:	ldr	r0, [pc, #1192]	; 7f84 <lell_print@@Base+0x4ec>
    7ad8:	add	r0, pc, r0
    7adc:	bl	2158 <printf@plt>
    7ae0:	ldrb	r1, [r6, #68]	; 0x44
    7ae4:	ldr	r0, [pc, #1180]	; 7f88 <lell_print@@Base+0x4f0>
    7ae8:	add	r0, pc, r0
    7aec:	bl	2158 <printf@plt>
    7af0:	ldr	r3, [pc, #1172]	; 7f8c <lell_print@@Base+0x4f4>
    7af4:	add	r3, pc, r3
    7af8:	add	r3, r3, r4, lsl #2
    7afc:	ldr	r2, [r3, #60]	; 0x3c
    7b00:	mov	r1, r4
    7b04:	ldr	r0, [pc, #1156]	; 7f90 <lell_print@@Base+0x4f8>
    7b08:	add	r0, pc, r0
    7b0c:	bl	2158 <printf@plt>
    7b10:	ldrb	r1, [r6, #4]
    7b14:	lsr	r3, r1, #4
    7b18:	lsr	r2, r1, #3
    7b1c:	lsr	r1, r1, #2
    7b20:	and	r3, r3, #1
    7b24:	and	r2, r2, #1
    7b28:	and	r1, r1, #1
    7b2c:	ldr	r0, [pc, #1120]	; 7f94 <lell_print@@Base+0x4fc>
    7b30:	add	r0, pc, r0
    7b34:	bl	2158 <printf@plt>
    7b38:	cmp	r4, #3
    7b3c:	beq	7be4 <lell_print@@Base+0x14c>
    7b40:	mov	r0, #10
    7b44:	bl	2434 <putchar@plt>
    7b48:	ldr	r0, [pc, #1096]	; 7f98 <lell_print@@Base+0x500>
    7b4c:	add	r0, pc, r0
    7b50:	bl	2158 <printf@plt>
    7b54:	ldr	r3, [r6, #72]	; 0x48
    7b58:	add	r3, r3, #6
    7b5c:	cmp	r3, #6
    7b60:	ble	7b94 <lell_print@@Base+0xfc>
    7b64:	add	r5, r6, #5
    7b68:	mov	r4, #6
    7b6c:	ldr	r7, [pc, #1064]	; 7f9c <lell_print@@Base+0x504>
    7b70:	add	r7, pc, r7
    7b74:	ldrb	r1, [r5, #1]!
    7b78:	mov	r0, r7
    7b7c:	bl	2158 <printf@plt>
    7b80:	add	r4, r4, #1
    7b84:	ldr	r3, [r6, #72]	; 0x48
    7b88:	add	r3, r3, #6
    7b8c:	cmp	r3, r4
    7b90:	bgt	7b74 <lell_print@@Base+0xdc>
    7b94:	mov	r0, #10
    7b98:	bl	2434 <putchar@plt>
    7b9c:	ldr	r0, [pc, #1020]	; 7fa0 <lell_print@@Base+0x508>
    7ba0:	add	r0, pc, r0
    7ba4:	bl	2158 <printf@plt>
    7ba8:	mov	r4, #0
    7bac:	ldr	r5, [pc, #1008]	; 7fa4 <lell_print@@Base+0x50c>
    7bb0:	add	r5, pc, r5
    7bb4:	ldr	r2, [r6, #72]	; 0x48
    7bb8:	add	r3, r6, r4
    7bbc:	add	r3, r3, r2
    7bc0:	ldrb	r1, [r3, #6]
    7bc4:	mov	r0, r5
    7bc8:	bl	2158 <printf@plt>
    7bcc:	add	r4, r4, #1
    7bd0:	cmp	r4, #3
    7bd4:	bne	7bb4 <lell_print@@Base+0x11c>
    7bd8:	mov	r0, #10
    7bdc:	bl	2434 <putchar@plt>
    7be0:	pop	{r4, r5, r6, r7, r8, pc}
    7be4:	ldrb	r1, [r6, #6]
    7be8:	cmp	r1, #20
    7bec:	movlt	r2, r1
    7bf0:	movge	r2, #20
    7bf4:	ldr	r3, [pc, #940]	; 7fa8 <lell_print@@Base+0x510>
    7bf8:	add	r3, pc, r3
    7bfc:	add	r3, r3, r2, lsl #2
    7c00:	ldr	r2, [r3, #76]	; 0x4c
    7c04:	ldr	r0, [pc, #928]	; 7fac <lell_print@@Base+0x514>
    7c08:	add	r0, pc, r0
    7c0c:	bl	2158 <printf@plt>
    7c10:	b	7b40 <lell_print@@Base+0xa8>
    7c14:	ldr	r1, [r6, #64]	; 0x40
    7c18:	ldrb	r3, [r6, #100]	; 0x64
    7c1c:	ldr	r2, [pc, #908]	; 7fb0 <lell_print@@Base+0x518>
    7c20:	add	r2, pc, r2
    7c24:	tst	r3, #1
    7c28:	ldrne	r2, [pc, #900]	; 7fb4 <lell_print@@Base+0x51c>
    7c2c:	addne	r2, pc, r2
    7c30:	ldr	r3, [r6, #72]	; 0x48
    7c34:	ldr	r0, [pc, #892]	; 7fb8 <lell_print@@Base+0x520>
    7c38:	add	r0, pc, r0
    7c3c:	bl	2158 <printf@plt>
    7c40:	ldrb	r1, [r6, #68]	; 0x44
    7c44:	ldr	r0, [pc, #880]	; 7fbc <lell_print@@Base+0x524>
    7c48:	add	r0, pc, r0
    7c4c:	bl	2158 <printf@plt>
    7c50:	mov	r0, r6
    7c54:	bl	22fc <lell_get_adv_type_str@plt>
    7c58:	mov	r1, r0
    7c5c:	ldr	r0, [pc, #860]	; 7fc0 <lell_print@@Base+0x528>
    7c60:	add	r0, pc, r0
    7c64:	bl	2158 <printf@plt>
    7c68:	ldrb	r3, [r6, #80]	; 0x50
    7c6c:	cmp	r3, #6
    7c70:	addls	pc, pc, r3, lsl #2
    7c74:	b	7b40 <lell_print@@Base+0xa8>
    7c78:	b	7c94 <lell_print@@Base+0x1fc>
    7c7c:	b	7d24 <lell_print@@Base+0x28c>
    7c80:	b	7c94 <lell_print@@Base+0x1fc>
    7c84:	b	7d58 <lell_print@@Base+0x2c0>
    7c88:	b	7d8c <lell_print@@Base+0x2f4>
    7c8c:	b	7e0c <lell_print@@Base+0x374>
    7c90:	b	7c94 <lell_print@@Base+0x1fc>
    7c94:	ldr	r3, [r6, #84]	; 0x54
    7c98:	mov	r2, #6
    7c9c:	mov	r1, r6
    7ca0:	ldr	r0, [pc, #796]	; 7fc4 <lell_print@@Base+0x52c>
    7ca4:	add	r0, pc, r0
    7ca8:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7cac:	ldr	r3, [r6, #72]	; 0x48
    7cb0:	sub	r3, r3, #6
    7cb4:	cmp	r3, #0
    7cb8:	ble	7b40 <lell_print@@Base+0xa8>
    7cbc:	ldr	r0, [pc, #772]	; 7fc8 <lell_print@@Base+0x530>
    7cc0:	add	r0, pc, r0
    7cc4:	bl	2158 <printf@plt>
    7cc8:	ldr	r3, [r6, #72]	; 0x48
    7ccc:	sub	r3, r3, #6
    7cd0:	cmp	r3, #0
    7cd4:	ble	7d08 <lell_print@@Base+0x270>
    7cd8:	add	r5, r6, #11
    7cdc:	mov	r4, #0
    7ce0:	ldr	r7, [pc, #740]	; 7fcc <lell_print@@Base+0x534>
    7ce4:	add	r7, pc, r7
    7ce8:	ldrb	r1, [r5, #1]!
    7cec:	mov	r0, r7
    7cf0:	bl	2158 <printf@plt>
    7cf4:	add	r4, r4, #1
    7cf8:	ldr	r3, [r6, #72]	; 0x48
    7cfc:	sub	r3, r3, #6
    7d00:	cmp	r3, r4
    7d04:	bgt	7ce8 <lell_print@@Base+0x250>
    7d08:	mov	r0, #10
    7d0c:	bl	2434 <putchar@plt>
    7d10:	ldr	r1, [r6, #72]	; 0x48
    7d14:	sub	r1, r1, #6
    7d18:	add	r0, r6, #12
    7d1c:	bl	7000 <btbb_process_packet@@Base+0x6b8>
    7d20:	b	7b40 <lell_print@@Base+0xa8>
    7d24:	ldr	r3, [r6, #84]	; 0x54
    7d28:	mov	r2, #6
    7d2c:	mov	r1, r6
    7d30:	ldr	r0, [pc, #664]	; 7fd0 <lell_print@@Base+0x538>
    7d34:	add	r0, pc, r0
    7d38:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7d3c:	ldr	r3, [r6, #88]	; 0x58
    7d40:	mov	r2, #12
    7d44:	mov	r1, r6
    7d48:	ldr	r0, [pc, #644]	; 7fd4 <lell_print@@Base+0x53c>
    7d4c:	add	r0, pc, r0
    7d50:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7d54:	b	7b40 <lell_print@@Base+0xa8>
    7d58:	ldr	r3, [r6, #84]	; 0x54
    7d5c:	mov	r2, #6
    7d60:	mov	r1, r6
    7d64:	ldr	r0, [pc, #620]	; 7fd8 <lell_print@@Base+0x540>
    7d68:	add	r0, pc, r0
    7d6c:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7d70:	ldr	r3, [r6, #88]	; 0x58
    7d74:	mov	r2, #12
    7d78:	mov	r1, r6
    7d7c:	ldr	r0, [pc, #600]	; 7fdc <lell_print@@Base+0x544>
    7d80:	add	r0, pc, r0
    7d84:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7d88:	b	7b40 <lell_print@@Base+0xa8>
    7d8c:	ldr	r3, [r6, #84]	; 0x54
    7d90:	mov	r2, #6
    7d94:	mov	r1, r6
    7d98:	ldr	r0, [pc, #576]	; 7fe0 <lell_print@@Base+0x548>
    7d9c:	add	r0, pc, r0
    7da0:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7da4:	ldr	r0, [pc, #568]	; 7fe4 <lell_print@@Base+0x54c>
    7da8:	add	r0, pc, r0
    7dac:	bl	2158 <printf@plt>
    7db0:	ldr	r3, [r6, #72]	; 0x48
    7db4:	sub	r3, r3, #6
    7db8:	cmp	r3, #0
    7dbc:	ble	7df0 <lell_print@@Base+0x358>
    7dc0:	add	r5, r6, #11
    7dc4:	mov	r4, #0
    7dc8:	ldr	r7, [pc, #536]	; 7fe8 <lell_print@@Base+0x550>
    7dcc:	add	r7, pc, r7
    7dd0:	ldrb	r1, [r5, #1]!
    7dd4:	mov	r0, r7
    7dd8:	bl	2158 <printf@plt>
    7ddc:	add	r4, r4, #1
    7de0:	ldr	r3, [r6, #72]	; 0x48
    7de4:	sub	r3, r3, #6
    7de8:	cmp	r3, r4
    7dec:	bgt	7dd0 <lell_print@@Base+0x338>
    7df0:	mov	r0, #10
    7df4:	bl	2434 <putchar@plt>
    7df8:	ldr	r1, [r6, #72]	; 0x48
    7dfc:	sub	r1, r1, #6
    7e00:	add	r0, r6, #12
    7e04:	bl	7000 <btbb_process_packet@@Base+0x6b8>
    7e08:	b	7b40 <lell_print@@Base+0xa8>
    7e0c:	ldr	r3, [r6, #84]	; 0x54
    7e10:	mov	r2, #6
    7e14:	mov	r1, r6
    7e18:	ldr	r0, [pc, #460]	; 7fec <lell_print@@Base+0x554>
    7e1c:	add	r0, pc, r0
    7e20:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7e24:	ldr	r3, [r6, #88]	; 0x58
    7e28:	mov	r2, #12
    7e2c:	mov	r1, r6
    7e30:	ldr	r0, [pc, #440]	; 7ff0 <lell_print@@Base+0x558>
    7e34:	add	r0, pc, r0
    7e38:	bl	6f44 <btbb_process_packet@@Base+0x5fc>
    7e3c:	ldrb	r2, [r6, #21]
    7e40:	ldrb	r3, [r6, #20]
    7e44:	lsl	r3, r3, #16
    7e48:	orr	r3, r3, r2, lsl #24
    7e4c:	ldrb	r2, [r6, #18]
    7e50:	orr	r3, r3, r2
    7e54:	ldrb	r2, [r6, #19]
    7e58:	orr	r2, r3, r2, lsl #8
    7e5c:	ldr	r1, [pc, #400]	; 7ff4 <lell_print@@Base+0x55c>
    7e60:	add	r1, pc, r1
    7e64:	ldr	r0, [pc, #396]	; 7ff8 <lell_print@@Base+0x560>
    7e68:	add	r0, pc, r0
    7e6c:	bl	2158 <printf@plt>
    7e70:	ldrb	r2, [r6, #24]
    7e74:	ldrb	r3, [r6, #23]
    7e78:	lsl	r3, r3, #8
    7e7c:	orr	r3, r3, r2, lsl #16
    7e80:	ldrb	r2, [r6, #22]
    7e84:	orr	r2, r3, r2
    7e88:	ldr	r1, [pc, #364]	; 7ffc <lell_print@@Base+0x564>
    7e8c:	add	r1, pc, r1
    7e90:	ldr	r0, [pc, #360]	; 8000 <lell_print@@Base+0x568>
    7e94:	add	r0, pc, r0
    7e98:	bl	2158 <printf@plt>
    7e9c:	ldrb	r2, [r6, #25]
    7ea0:	mov	r3, r2
    7ea4:	ldr	r1, [pc, #344]	; 8004 <lell_print@@Base+0x56c>
    7ea8:	add	r1, pc, r1
    7eac:	ldr	r0, [pc, #340]	; 8008 <lell_print@@Base+0x570>
    7eb0:	add	r0, pc, r0
    7eb4:	bl	2158 <printf@plt>
    7eb8:	mov	r2, #26
    7ebc:	mov	r1, r6
    7ec0:	ldr	r0, [pc, #324]	; 800c <lell_print@@Base+0x574>
    7ec4:	add	r0, pc, r0
    7ec8:	bl	6fd0 <btbb_process_packet@@Base+0x688>
    7ecc:	mov	r2, #28
    7ed0:	mov	r1, r6
    7ed4:	ldr	r0, [pc, #308]	; 8010 <lell_print@@Base+0x578>
    7ed8:	add	r0, pc, r0
    7edc:	bl	6fd0 <btbb_process_packet@@Base+0x688>
    7ee0:	mov	r2, #30
    7ee4:	mov	r1, r6
    7ee8:	ldr	r0, [pc, #292]	; 8014 <lell_print@@Base+0x57c>
    7eec:	add	r0, pc, r0
    7ef0:	bl	6fd0 <btbb_process_packet@@Base+0x688>
    7ef4:	mov	r2, #32
    7ef8:	mov	r1, r6
    7efc:	ldr	r0, [pc, #276]	; 8018 <lell_print@@Base+0x580>
    7f00:	add	r0, pc, r0
    7f04:	bl	6fd0 <btbb_process_packet@@Base+0x688>
    7f08:	ldr	r0, [pc, #268]	; 801c <lell_print@@Base+0x584>
    7f0c:	add	r0, pc, r0
    7f10:	bl	2158 <printf@plt>
    7f14:	add	r4, r6, #34	; 0x22
    7f18:	add	r7, r6, #39	; 0x27
    7f1c:	ldr	r5, [pc, #252]	; 8020 <lell_print@@Base+0x588>
    7f20:	add	r5, pc, r5
    7f24:	ldrb	r1, [r4], #1
    7f28:	mov	r0, r5
    7f2c:	bl	2158 <printf@plt>
    7f30:	cmp	r4, r7
    7f34:	bne	7f24 <lell_print@@Base+0x48c>
    7f38:	mov	r0, #10
    7f3c:	bl	2434 <putchar@plt>
    7f40:	ldrb	r1, [r6, #39]	; 0x27
    7f44:	and	r1, r1, #31
    7f48:	ldr	r0, [pc, #212]	; 8024 <lell_print@@Base+0x58c>
    7f4c:	add	r0, pc, r0
    7f50:	bl	2158 <printf@plt>
    7f54:	ldrb	r1, [r6, #39]	; 0x27
    7f58:	lsr	r1, r1, #5
    7f5c:	ldr	r3, [pc, #196]	; 8028 <lell_print@@Base+0x590>
    7f60:	add	r3, pc, r3
    7f64:	add	r3, r3, r1, lsl #2
    7f68:	ldr	r2, [r3, #160]	; 0xa0
    7f6c:	ldr	r0, [pc, #184]	; 802c <lell_print@@Base+0x594>
    7f70:	add	r0, pc, r0
    7f74:	bl	2158 <printf@plt>
    7f78:	b	7b40 <lell_print@@Base+0xa8>
    7f7c:			; <UNDEFINED> instruction: 0x0000b2b0
    7f80:	muleq	r0, ip, r2
    7f84:	andeq	fp, r0, r0, lsr #5
    7f88:			; <UNDEFINED> instruction: 0x0000b2b4
    7f8c:	andeq	r1, r2, ip, asr r3
    7f90:	andeq	fp, r0, ip, lsr #5
    7f94:	muleq	r0, r8, r2
    7f98:	ldrdeq	fp, [r0], -r4
    7f9c:			; <UNDEFINED> instruction: 0x0000afbc
    7fa0:	andeq	fp, r0, ip, lsl #7
    7fa4:	andeq	sl, r0, ip, ror pc
    7fa8:	andeq	r1, r2, r8, asr r2
    7fac:	andeq	fp, r0, r0, ror #3
    7fb0:	andeq	fp, r0, r0, asr r1
    7fb4:	andeq	fp, r0, ip, lsr r1
    7fb8:	andeq	fp, r0, r8, asr #3
    7fbc:	andeq	fp, r0, r4, asr r1
    7fc0:	andeq	fp, r0, r8, asr #3
    7fc4:	muleq	r0, r4, r1
    7fc8:	andeq	fp, r0, r0, lsl #3
    7fcc:	andeq	sl, r0, r8, asr #28
    7fd0:	andeq	fp, r0, r4, lsl #2
    7fd4:	andeq	fp, r0, r4, lsl #2
    7fd8:	strdeq	fp, [r0], -r0
    7fdc:	strheq	fp, [r0], -r8
    7fe0:	muleq	r0, ip, r0
    7fe4:	strheq	fp, [r0], -r8
    7fe8:	andeq	sl, r0, r0, ror #26
    7fec:	andeq	fp, r0, r4, lsr r0
    7ff0:	andeq	fp, r0, r4
    7ff4:	andeq	fp, r0, r4, lsl r0
    7ff8:	andeq	fp, r0, r4, lsl r0
    7ffc:	strdeq	sl, [r0], -ip
    8000:	andeq	fp, r0, r0
    8004:	strdeq	sl, [r0], -r8
    8008:	strdeq	sl, [r0], -ip
    800c:	strdeq	sl, [r0], -ip
    8010:	strdeq	sl, [r0], -r4
    8014:	andeq	sl, r0, ip, ror #31
    8018:	andeq	sl, r0, r4, ror #31
    801c:	andeq	sl, r0, r4, ror #31
    8020:	andeq	sl, r0, ip, lsl #24
    8024:			; <UNDEFINED> instruction: 0x0000afb0
    8028:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
    802c:	muleq	r0, ip, pc	; <UNPREDICTABLE>

00008030 <bt_compidtostr@@Base>:
    8030:	ldr	r3, [pc, #3388]	; 8d74 <bt_compidtostr@@Base+0xd44>
    8034:	cmp	r0, r3
    8038:	beq	cd6c <bt_compidtostr@@Base+0x4d3c>
    803c:	cmp	r0, #520	; 0x208
    8040:	bcs	98d8 <bt_compidtostr@@Base+0x18a8>
    8044:	sub	r3, r3, #260	; 0x104
    8048:	cmp	r0, r3
    804c:	beq	bdd8 <bt_compidtostr@@Base+0x3da8>
    8050:	cmp	r0, #260	; 0x104
    8054:	bcs	8994 <bt_compidtostr@@Base+0x964>
    8058:	cmp	r0, #129	; 0x81
    805c:	beq	b940 <bt_compidtostr@@Base+0x3910>
    8060:	bhi	84f8 <bt_compidtostr@@Base+0x4c8>
    8064:	cmp	r0, #64	; 0x40
    8068:	beq	b6f4 <bt_compidtostr@@Base+0x36c4>
    806c:	bhi	82b4 <bt_compidtostr@@Base+0x284>
    8070:	cmp	r0, #31
    8074:	beq	b5c8 <bt_compidtostr@@Base+0x3598>
    8078:	bls	80c8 <bt_compidtostr@@Base+0x98>
    807c:	cmp	r0, #47	; 0x2f
    8080:	beq	b658 <bt_compidtostr@@Base+0x3628>
    8084:	bls	81dc <bt_compidtostr@@Base+0x1ac>
    8088:	cmp	r0, #55	; 0x37
    808c:	beq	b6a0 <bt_compidtostr@@Base+0x3670>
    8090:	bls	8260 <bt_compidtostr@@Base+0x230>
    8094:	cmp	r0, #59	; 0x3b
    8098:	beq	b6c4 <bt_compidtostr@@Base+0x3694>
    809c:	bls	829c <bt_compidtostr@@Base+0x26c>
    80a0:	cmp	r0, #61	; 0x3d
    80a4:	beq	b6dc <bt_compidtostr@@Base+0x36ac>
    80a8:	bcc	b6d0 <bt_compidtostr@@Base+0x36a0>
    80ac:	cmp	r0, #62	; 0x3e
    80b0:	beq	b6e8 <bt_compidtostr@@Base+0x36b8>
    80b4:	cmp	r0, #63	; 0x3f
    80b8:	bne	e330 <bt_compidtostr@@Base+0x6300>
    80bc:	ldr	r0, [pc, #3252]	; 8d78 <bt_compidtostr@@Base+0xd48>
    80c0:	add	r0, pc, r0
    80c4:	bx	lr
    80c8:	cmp	r0, #15
    80cc:	beq	b538 <bt_compidtostr@@Base+0x3508>
    80d0:	bhi	8158 <bt_compidtostr@@Base+0x128>
    80d4:	cmp	r0, #7
    80d8:	beq	b4f0 <bt_compidtostr@@Base+0x34c0>
    80dc:	bhi	811c <bt_compidtostr@@Base+0xec>
    80e0:	cmp	r0, #3
    80e4:	beq	b4cc <bt_compidtostr@@Base+0x349c>
    80e8:	bhi	8104 <bt_compidtostr@@Base+0xd4>
    80ec:	cmp	r0, #1
    80f0:	beq	b4b4 <bt_compidtostr@@Base+0x3484>
    80f4:	bhi	b4c0 <bt_compidtostr@@Base+0x3490>
    80f8:	ldr	r0, [pc, #3196]	; 8d7c <bt_compidtostr@@Base+0xd4c>
    80fc:	add	r0, pc, r0
    8100:	bx	lr
    8104:	cmp	r0, #5
    8108:	beq	b4d8 <bt_compidtostr@@Base+0x34a8>
    810c:	bhi	b4e4 <bt_compidtostr@@Base+0x34b4>
    8110:	ldr	r0, [pc, #3176]	; 8d80 <bt_compidtostr@@Base+0xd50>
    8114:	add	r0, pc, r0
    8118:	bx	lr
    811c:	cmp	r0, #11
    8120:	beq	b514 <bt_compidtostr@@Base+0x34e4>
    8124:	bhi	8140 <bt_compidtostr@@Base+0x110>
    8128:	cmp	r0, #9
    812c:	beq	b4fc <bt_compidtostr@@Base+0x34cc>
    8130:	bhi	b508 <bt_compidtostr@@Base+0x34d8>
    8134:	ldr	r0, [pc, #3144]	; 8d84 <bt_compidtostr@@Base+0xd54>
    8138:	add	r0, pc, r0
    813c:	bx	lr
    8140:	cmp	r0, #13
    8144:	beq	b520 <bt_compidtostr@@Base+0x34f0>
    8148:	bhi	b52c <bt_compidtostr@@Base+0x34fc>
    814c:	ldr	r0, [pc, #3124]	; 8d88 <bt_compidtostr@@Base+0xd58>
    8150:	add	r0, pc, r0
    8154:	bx	lr
    8158:	cmp	r0, #23
    815c:	beq	b580 <bt_compidtostr@@Base+0x3550>
    8160:	bhi	81a0 <bt_compidtostr@@Base+0x170>
    8164:	cmp	r0, #19
    8168:	beq	b55c <bt_compidtostr@@Base+0x352c>
    816c:	bhi	8188 <bt_compidtostr@@Base+0x158>
    8170:	cmp	r0, #17
    8174:	beq	b544 <bt_compidtostr@@Base+0x3514>
    8178:	bhi	b550 <bt_compidtostr@@Base+0x3520>
    817c:	ldr	r0, [pc, #3080]	; 8d8c <bt_compidtostr@@Base+0xd5c>
    8180:	add	r0, pc, r0
    8184:	bx	lr
    8188:	cmp	r0, #21
    818c:	beq	b568 <bt_compidtostr@@Base+0x3538>
    8190:	bhi	b574 <bt_compidtostr@@Base+0x3544>
    8194:	ldr	r0, [pc, #3060]	; 8d90 <bt_compidtostr@@Base+0xd60>
    8198:	add	r0, pc, r0
    819c:	bx	lr
    81a0:	cmp	r0, #27
    81a4:	beq	b5a4 <bt_compidtostr@@Base+0x3574>
    81a8:	bhi	81c4 <bt_compidtostr@@Base+0x194>
    81ac:	cmp	r0, #25
    81b0:	beq	b58c <bt_compidtostr@@Base+0x355c>
    81b4:	bhi	b598 <bt_compidtostr@@Base+0x3568>
    81b8:	ldr	r0, [pc, #3028]	; 8d94 <bt_compidtostr@@Base+0xd64>
    81bc:	add	r0, pc, r0
    81c0:	bx	lr
    81c4:	cmp	r0, #29
    81c8:	beq	b5b0 <bt_compidtostr@@Base+0x3580>
    81cc:	bhi	b5bc <bt_compidtostr@@Base+0x358c>
    81d0:	ldr	r0, [pc, #3008]	; 8d98 <bt_compidtostr@@Base+0xd68>
    81d4:	add	r0, pc, r0
    81d8:	bx	lr
    81dc:	cmp	r0, #39	; 0x27
    81e0:	beq	b610 <bt_compidtostr@@Base+0x35e0>
    81e4:	bhi	8224 <bt_compidtostr@@Base+0x1f4>
    81e8:	cmp	r0, #35	; 0x23
    81ec:	beq	b5ec <bt_compidtostr@@Base+0x35bc>
    81f0:	bhi	820c <bt_compidtostr@@Base+0x1dc>
    81f4:	cmp	r0, #33	; 0x21
    81f8:	beq	b5d4 <bt_compidtostr@@Base+0x35a4>
    81fc:	bhi	b5e0 <bt_compidtostr@@Base+0x35b0>
    8200:	ldr	r0, [pc, #2964]	; 8d9c <bt_compidtostr@@Base+0xd6c>
    8204:	add	r0, pc, r0
    8208:	bx	lr
    820c:	cmp	r0, #37	; 0x25
    8210:	beq	b5f8 <bt_compidtostr@@Base+0x35c8>
    8214:	bhi	b604 <bt_compidtostr@@Base+0x35d4>
    8218:	ldr	r0, [pc, #2944]	; 8da0 <bt_compidtostr@@Base+0xd70>
    821c:	add	r0, pc, r0
    8220:	bx	lr
    8224:	cmp	r0, #43	; 0x2b
    8228:	beq	b634 <bt_compidtostr@@Base+0x3604>
    822c:	bhi	8248 <bt_compidtostr@@Base+0x218>
    8230:	cmp	r0, #41	; 0x29
    8234:	beq	b61c <bt_compidtostr@@Base+0x35ec>
    8238:	bhi	b628 <bt_compidtostr@@Base+0x35f8>
    823c:	ldr	r0, [pc, #2912]	; 8da4 <bt_compidtostr@@Base+0xd74>
    8240:	add	r0, pc, r0
    8244:	bx	lr
    8248:	cmp	r0, #45	; 0x2d
    824c:	beq	b640 <bt_compidtostr@@Base+0x3610>
    8250:	bhi	b64c <bt_compidtostr@@Base+0x361c>
    8254:	ldr	r0, [pc, #2892]	; 8da8 <bt_compidtostr@@Base+0xd78>
    8258:	add	r0, pc, r0
    825c:	bx	lr
    8260:	cmp	r0, #51	; 0x33
    8264:	beq	b67c <bt_compidtostr@@Base+0x364c>
    8268:	bhi	8284 <bt_compidtostr@@Base+0x254>
    826c:	cmp	r0, #49	; 0x31
    8270:	beq	b664 <bt_compidtostr@@Base+0x3634>
    8274:	bhi	b670 <bt_compidtostr@@Base+0x3640>
    8278:	ldr	r0, [pc, #2860]	; 8dac <bt_compidtostr@@Base+0xd7c>
    827c:	add	r0, pc, r0
    8280:	bx	lr
    8284:	cmp	r0, #53	; 0x35
    8288:	beq	b688 <bt_compidtostr@@Base+0x3658>
    828c:	bhi	b694 <bt_compidtostr@@Base+0x3664>
    8290:	ldr	r0, [pc, #2840]	; 8db0 <bt_compidtostr@@Base+0xd80>
    8294:	add	r0, pc, r0
    8298:	bx	lr
    829c:	cmp	r0, #57	; 0x39
    82a0:	beq	b6ac <bt_compidtostr@@Base+0x367c>
    82a4:	bhi	b6b8 <bt_compidtostr@@Base+0x3688>
    82a8:	ldr	r0, [pc, #2820]	; 8db4 <bt_compidtostr@@Base+0xd84>
    82ac:	add	r0, pc, r0
    82b0:	bx	lr
    82b4:	cmp	r0, #96	; 0x60
    82b8:	beq	b814 <bt_compidtostr@@Base+0x37e4>
    82bc:	bls	830c <bt_compidtostr@@Base+0x2dc>
    82c0:	cmp	r0, #112	; 0x70
    82c4:	beq	b8a4 <bt_compidtostr@@Base+0x3874>
    82c8:	bls	8420 <bt_compidtostr@@Base+0x3f0>
    82cc:	cmp	r0, #120	; 0x78
    82d0:	beq	b8ec <bt_compidtostr@@Base+0x38bc>
    82d4:	bls	84a4 <bt_compidtostr@@Base+0x474>
    82d8:	cmp	r0, #124	; 0x7c
    82dc:	beq	b910 <bt_compidtostr@@Base+0x38e0>
    82e0:	bls	84e0 <bt_compidtostr@@Base+0x4b0>
    82e4:	cmp	r0, #126	; 0x7e
    82e8:	beq	b928 <bt_compidtostr@@Base+0x38f8>
    82ec:	bcc	b91c <bt_compidtostr@@Base+0x38ec>
    82f0:	cmp	r0, #127	; 0x7f
    82f4:	beq	b934 <bt_compidtostr@@Base+0x3904>
    82f8:	cmp	r0, #128	; 0x80
    82fc:	bne	e330 <bt_compidtostr@@Base+0x6300>
    8300:	ldr	r0, [pc, #2736]	; 8db8 <bt_compidtostr@@Base+0xd88>
    8304:	add	r0, pc, r0
    8308:	bx	lr
    830c:	cmp	r0, #80	; 0x50
    8310:	beq	b784 <bt_compidtostr@@Base+0x3754>
    8314:	bhi	839c <bt_compidtostr@@Base+0x36c>
    8318:	cmp	r0, #72	; 0x48
    831c:	beq	b73c <bt_compidtostr@@Base+0x370c>
    8320:	bhi	8360 <bt_compidtostr@@Base+0x330>
    8324:	cmp	r0, #68	; 0x44
    8328:	beq	b718 <bt_compidtostr@@Base+0x36e8>
    832c:	bhi	8348 <bt_compidtostr@@Base+0x318>
    8330:	cmp	r0, #66	; 0x42
    8334:	beq	b700 <bt_compidtostr@@Base+0x36d0>
    8338:	bhi	b70c <bt_compidtostr@@Base+0x36dc>
    833c:	ldr	r0, [pc, #2680]	; 8dbc <bt_compidtostr@@Base+0xd8c>
    8340:	add	r0, pc, r0
    8344:	bx	lr
    8348:	cmp	r0, #70	; 0x46
    834c:	beq	b724 <bt_compidtostr@@Base+0x36f4>
    8350:	bhi	b730 <bt_compidtostr@@Base+0x3700>
    8354:	ldr	r0, [pc, #2660]	; 8dc0 <bt_compidtostr@@Base+0xd90>
    8358:	add	r0, pc, r0
    835c:	bx	lr
    8360:	cmp	r0, #76	; 0x4c
    8364:	beq	b760 <bt_compidtostr@@Base+0x3730>
    8368:	bhi	8384 <bt_compidtostr@@Base+0x354>
    836c:	cmp	r0, #74	; 0x4a
    8370:	beq	b748 <bt_compidtostr@@Base+0x3718>
    8374:	bhi	b754 <bt_compidtostr@@Base+0x3724>
    8378:	ldr	r0, [pc, #2628]	; 8dc4 <bt_compidtostr@@Base+0xd94>
    837c:	add	r0, pc, r0
    8380:	bx	lr
    8384:	cmp	r0, #78	; 0x4e
    8388:	beq	b76c <bt_compidtostr@@Base+0x373c>
    838c:	bhi	b778 <bt_compidtostr@@Base+0x3748>
    8390:	ldr	r0, [pc, #2608]	; 8dc8 <bt_compidtostr@@Base+0xd98>
    8394:	add	r0, pc, r0
    8398:	bx	lr
    839c:	cmp	r0, #88	; 0x58
    83a0:	beq	b7cc <bt_compidtostr@@Base+0x379c>
    83a4:	bhi	83e4 <bt_compidtostr@@Base+0x3b4>
    83a8:	cmp	r0, #84	; 0x54
    83ac:	beq	b7a8 <bt_compidtostr@@Base+0x3778>
    83b0:	bhi	83cc <bt_compidtostr@@Base+0x39c>
    83b4:	cmp	r0, #82	; 0x52
    83b8:	beq	b790 <bt_compidtostr@@Base+0x3760>
    83bc:	bhi	b79c <bt_compidtostr@@Base+0x376c>
    83c0:	ldr	r0, [pc, #2564]	; 8dcc <bt_compidtostr@@Base+0xd9c>
    83c4:	add	r0, pc, r0
    83c8:	bx	lr
    83cc:	cmp	r0, #86	; 0x56
    83d0:	beq	b7b4 <bt_compidtostr@@Base+0x3784>
    83d4:	bhi	b7c0 <bt_compidtostr@@Base+0x3790>
    83d8:	ldr	r0, [pc, #2544]	; 8dd0 <bt_compidtostr@@Base+0xda0>
    83dc:	add	r0, pc, r0
    83e0:	bx	lr
    83e4:	cmp	r0, #92	; 0x5c
    83e8:	beq	b7f0 <bt_compidtostr@@Base+0x37c0>
    83ec:	bhi	8408 <bt_compidtostr@@Base+0x3d8>
    83f0:	cmp	r0, #90	; 0x5a
    83f4:	beq	b7d8 <bt_compidtostr@@Base+0x37a8>
    83f8:	bhi	b7e4 <bt_compidtostr@@Base+0x37b4>
    83fc:	ldr	r0, [pc, #2512]	; 8dd4 <bt_compidtostr@@Base+0xda4>
    8400:	add	r0, pc, r0
    8404:	bx	lr
    8408:	cmp	r0, #94	; 0x5e
    840c:	beq	b7fc <bt_compidtostr@@Base+0x37cc>
    8410:	bhi	b808 <bt_compidtostr@@Base+0x37d8>
    8414:	ldr	r0, [pc, #2492]	; 8dd8 <bt_compidtostr@@Base+0xda8>
    8418:	add	r0, pc, r0
    841c:	bx	lr
    8420:	cmp	r0, #104	; 0x68
    8424:	beq	b85c <bt_compidtostr@@Base+0x382c>
    8428:	bhi	8468 <bt_compidtostr@@Base+0x438>
    842c:	cmp	r0, #100	; 0x64
    8430:	beq	b838 <bt_compidtostr@@Base+0x3808>
    8434:	bhi	8450 <bt_compidtostr@@Base+0x420>
    8438:	cmp	r0, #98	; 0x62
    843c:	beq	b820 <bt_compidtostr@@Base+0x37f0>
    8440:	bhi	b82c <bt_compidtostr@@Base+0x37fc>
    8444:	ldr	r0, [pc, #2448]	; 8ddc <bt_compidtostr@@Base+0xdac>
    8448:	add	r0, pc, r0
    844c:	bx	lr
    8450:	cmp	r0, #102	; 0x66
    8454:	beq	b844 <bt_compidtostr@@Base+0x3814>
    8458:	bhi	b850 <bt_compidtostr@@Base+0x3820>
    845c:	ldr	r0, [pc, #2428]	; 8de0 <bt_compidtostr@@Base+0xdb0>
    8460:	add	r0, pc, r0
    8464:	bx	lr
    8468:	cmp	r0, #108	; 0x6c
    846c:	beq	b880 <bt_compidtostr@@Base+0x3850>
    8470:	bhi	848c <bt_compidtostr@@Base+0x45c>
    8474:	cmp	r0, #106	; 0x6a
    8478:	beq	b868 <bt_compidtostr@@Base+0x3838>
    847c:	bhi	b874 <bt_compidtostr@@Base+0x3844>
    8480:	ldr	r0, [pc, #2396]	; 8de4 <bt_compidtostr@@Base+0xdb4>
    8484:	add	r0, pc, r0
    8488:	bx	lr
    848c:	cmp	r0, #110	; 0x6e
    8490:	beq	b88c <bt_compidtostr@@Base+0x385c>
    8494:	bhi	b898 <bt_compidtostr@@Base+0x3868>
    8498:	ldr	r0, [pc, #2376]	; 8de8 <bt_compidtostr@@Base+0xdb8>
    849c:	add	r0, pc, r0
    84a0:	bx	lr
    84a4:	cmp	r0, #116	; 0x74
    84a8:	beq	b8c8 <bt_compidtostr@@Base+0x3898>
    84ac:	bhi	84c8 <bt_compidtostr@@Base+0x498>
    84b0:	cmp	r0, #114	; 0x72
    84b4:	beq	b8b0 <bt_compidtostr@@Base+0x3880>
    84b8:	bhi	b8bc <bt_compidtostr@@Base+0x388c>
    84bc:	ldr	r0, [pc, #2344]	; 8dec <bt_compidtostr@@Base+0xdbc>
    84c0:	add	r0, pc, r0
    84c4:	bx	lr
    84c8:	cmp	r0, #118	; 0x76
    84cc:	beq	b8d4 <bt_compidtostr@@Base+0x38a4>
    84d0:	bhi	b8e0 <bt_compidtostr@@Base+0x38b0>
    84d4:	ldr	r0, [pc, #2324]	; 8df0 <bt_compidtostr@@Base+0xdc0>
    84d8:	add	r0, pc, r0
    84dc:	bx	lr
    84e0:	cmp	r0, #122	; 0x7a
    84e4:	beq	b8f8 <bt_compidtostr@@Base+0x38c8>
    84e8:	bhi	b904 <bt_compidtostr@@Base+0x38d4>
    84ec:	ldr	r0, [pc, #2304]	; 8df4 <bt_compidtostr@@Base+0xdc4>
    84f0:	add	r0, pc, r0
    84f4:	bx	lr
    84f8:	cmp	r0, #194	; 0xc2
    84fc:	beq	bb8c <bt_compidtostr@@Base+0x3b5c>
    8500:	bhi	8748 <bt_compidtostr@@Base+0x718>
    8504:	cmp	r0, #161	; 0xa1
    8508:	beq	ba60 <bt_compidtostr@@Base+0x3a30>
    850c:	bls	855c <bt_compidtostr@@Base+0x52c>
    8510:	cmp	r0, #177	; 0xb1
    8514:	beq	baf0 <bt_compidtostr@@Base+0x3ac0>
    8518:	bls	8670 <bt_compidtostr@@Base+0x640>
    851c:	cmp	r0, #185	; 0xb9
    8520:	beq	bb38 <bt_compidtostr@@Base+0x3b08>
    8524:	bls	86f4 <bt_compidtostr@@Base+0x6c4>
    8528:	cmp	r0, #189	; 0xbd
    852c:	beq	bb5c <bt_compidtostr@@Base+0x3b2c>
    8530:	bls	8730 <bt_compidtostr@@Base+0x700>
    8534:	cmp	r0, #191	; 0xbf
    8538:	beq	bb74 <bt_compidtostr@@Base+0x3b44>
    853c:	bcc	bb68 <bt_compidtostr@@Base+0x3b38>
    8540:	cmp	r0, #192	; 0xc0
    8544:	beq	bb80 <bt_compidtostr@@Base+0x3b50>
    8548:	cmp	r0, #193	; 0xc1
    854c:	bne	e330 <bt_compidtostr@@Base+0x6300>
    8550:	ldr	r0, [pc, #2208]	; 8df8 <bt_compidtostr@@Base+0xdc8>
    8554:	add	r0, pc, r0
    8558:	bx	lr
    855c:	cmp	r0, #145	; 0x91
    8560:	beq	b9d0 <bt_compidtostr@@Base+0x39a0>
    8564:	bhi	85ec <bt_compidtostr@@Base+0x5bc>
    8568:	cmp	r0, #137	; 0x89
    856c:	beq	b988 <bt_compidtostr@@Base+0x3958>
    8570:	bhi	85b0 <bt_compidtostr@@Base+0x580>
    8574:	cmp	r0, #133	; 0x85
    8578:	beq	b964 <bt_compidtostr@@Base+0x3934>
    857c:	bhi	8598 <bt_compidtostr@@Base+0x568>
    8580:	cmp	r0, #131	; 0x83
    8584:	beq	b94c <bt_compidtostr@@Base+0x391c>
    8588:	bhi	b958 <bt_compidtostr@@Base+0x3928>
    858c:	ldr	r0, [pc, #2152]	; 8dfc <bt_compidtostr@@Base+0xdcc>
    8590:	add	r0, pc, r0
    8594:	bx	lr
    8598:	cmp	r0, #135	; 0x87
    859c:	beq	b970 <bt_compidtostr@@Base+0x3940>
    85a0:	bhi	b97c <bt_compidtostr@@Base+0x394c>
    85a4:	ldr	r0, [pc, #2132]	; 8e00 <bt_compidtostr@@Base+0xdd0>
    85a8:	add	r0, pc, r0
    85ac:	bx	lr
    85b0:	cmp	r0, #141	; 0x8d
    85b4:	beq	b9ac <bt_compidtostr@@Base+0x397c>
    85b8:	bhi	85d4 <bt_compidtostr@@Base+0x5a4>
    85bc:	cmp	r0, #139	; 0x8b
    85c0:	beq	b994 <bt_compidtostr@@Base+0x3964>
    85c4:	bhi	b9a0 <bt_compidtostr@@Base+0x3970>
    85c8:	ldr	r0, [pc, #2100]	; 8e04 <bt_compidtostr@@Base+0xdd4>
    85cc:	add	r0, pc, r0
    85d0:	bx	lr
    85d4:	cmp	r0, #143	; 0x8f
    85d8:	beq	b9b8 <bt_compidtostr@@Base+0x3988>
    85dc:	bhi	b9c4 <bt_compidtostr@@Base+0x3994>
    85e0:	ldr	r0, [pc, #2080]	; 8e08 <bt_compidtostr@@Base+0xdd8>
    85e4:	add	r0, pc, r0
    85e8:	bx	lr
    85ec:	cmp	r0, #153	; 0x99
    85f0:	beq	ba18 <bt_compidtostr@@Base+0x39e8>
    85f4:	bhi	8634 <bt_compidtostr@@Base+0x604>
    85f8:	cmp	r0, #149	; 0x95
    85fc:	beq	b9f4 <bt_compidtostr@@Base+0x39c4>
    8600:	bhi	861c <bt_compidtostr@@Base+0x5ec>
    8604:	cmp	r0, #147	; 0x93
    8608:	beq	b9dc <bt_compidtostr@@Base+0x39ac>
    860c:	bhi	b9e8 <bt_compidtostr@@Base+0x39b8>
    8610:	ldr	r0, [pc, #2036]	; 8e0c <bt_compidtostr@@Base+0xddc>
    8614:	add	r0, pc, r0
    8618:	bx	lr
    861c:	cmp	r0, #151	; 0x97
    8620:	beq	ba00 <bt_compidtostr@@Base+0x39d0>
    8624:	bhi	ba0c <bt_compidtostr@@Base+0x39dc>
    8628:	ldr	r0, [pc, #2016]	; 8e10 <bt_compidtostr@@Base+0xde0>
    862c:	add	r0, pc, r0
    8630:	bx	lr
    8634:	cmp	r0, #157	; 0x9d
    8638:	beq	ba3c <bt_compidtostr@@Base+0x3a0c>
    863c:	bhi	8658 <bt_compidtostr@@Base+0x628>
    8640:	cmp	r0, #155	; 0x9b
    8644:	beq	ba24 <bt_compidtostr@@Base+0x39f4>
    8648:	bhi	ba30 <bt_compidtostr@@Base+0x3a00>
    864c:	ldr	r0, [pc, #1984]	; 8e14 <bt_compidtostr@@Base+0xde4>
    8650:	add	r0, pc, r0
    8654:	bx	lr
    8658:	cmp	r0, #159	; 0x9f
    865c:	beq	ba48 <bt_compidtostr@@Base+0x3a18>
    8660:	bhi	ba54 <bt_compidtostr@@Base+0x3a24>
    8664:	ldr	r0, [pc, #1964]	; 8e18 <bt_compidtostr@@Base+0xde8>
    8668:	add	r0, pc, r0
    866c:	bx	lr
    8670:	cmp	r0, #169	; 0xa9
    8674:	beq	baa8 <bt_compidtostr@@Base+0x3a78>
    8678:	bhi	86b8 <bt_compidtostr@@Base+0x688>
    867c:	cmp	r0, #165	; 0xa5
    8680:	beq	ba84 <bt_compidtostr@@Base+0x3a54>
    8684:	bhi	86a0 <bt_compidtostr@@Base+0x670>
    8688:	cmp	r0, #163	; 0xa3
    868c:	beq	ba6c <bt_compidtostr@@Base+0x3a3c>
    8690:	bhi	ba78 <bt_compidtostr@@Base+0x3a48>
    8694:	ldr	r0, [pc, #1920]	; 8e1c <bt_compidtostr@@Base+0xdec>
    8698:	add	r0, pc, r0
    869c:	bx	lr
    86a0:	cmp	r0, #167	; 0xa7
    86a4:	beq	ba90 <bt_compidtostr@@Base+0x3a60>
    86a8:	bhi	ba9c <bt_compidtostr@@Base+0x3a6c>
    86ac:	ldr	r0, [pc, #1900]	; 8e20 <bt_compidtostr@@Base+0xdf0>
    86b0:	add	r0, pc, r0
    86b4:	bx	lr
    86b8:	cmp	r0, #173	; 0xad
    86bc:	beq	bacc <bt_compidtostr@@Base+0x3a9c>
    86c0:	bhi	86dc <bt_compidtostr@@Base+0x6ac>
    86c4:	cmp	r0, #171	; 0xab
    86c8:	beq	bab4 <bt_compidtostr@@Base+0x3a84>
    86cc:	bhi	bac0 <bt_compidtostr@@Base+0x3a90>
    86d0:	ldr	r0, [pc, #1868]	; 8e24 <bt_compidtostr@@Base+0xdf4>
    86d4:	add	r0, pc, r0
    86d8:	bx	lr
    86dc:	cmp	r0, #175	; 0xaf
    86e0:	beq	bad8 <bt_compidtostr@@Base+0x3aa8>
    86e4:	bhi	bae4 <bt_compidtostr@@Base+0x3ab4>
    86e8:	ldr	r0, [pc, #1848]	; 8e28 <bt_compidtostr@@Base+0xdf8>
    86ec:	add	r0, pc, r0
    86f0:	bx	lr
    86f4:	cmp	r0, #181	; 0xb5
    86f8:	beq	bb14 <bt_compidtostr@@Base+0x3ae4>
    86fc:	bhi	8718 <bt_compidtostr@@Base+0x6e8>
    8700:	cmp	r0, #179	; 0xb3
    8704:	beq	bafc <bt_compidtostr@@Base+0x3acc>
    8708:	bhi	bb08 <bt_compidtostr@@Base+0x3ad8>
    870c:	ldr	r0, [pc, #1816]	; 8e2c <bt_compidtostr@@Base+0xdfc>
    8710:	add	r0, pc, r0
    8714:	bx	lr
    8718:	cmp	r0, #183	; 0xb7
    871c:	beq	bb20 <bt_compidtostr@@Base+0x3af0>
    8720:	bhi	bb2c <bt_compidtostr@@Base+0x3afc>
    8724:	ldr	r0, [pc, #1796]	; 8e30 <bt_compidtostr@@Base+0xe00>
    8728:	add	r0, pc, r0
    872c:	bx	lr
    8730:	cmp	r0, #187	; 0xbb
    8734:	beq	bb44 <bt_compidtostr@@Base+0x3b14>
    8738:	bhi	bb50 <bt_compidtostr@@Base+0x3b20>
    873c:	ldr	r0, [pc, #1776]	; 8e34 <bt_compidtostr@@Base+0xe04>
    8740:	add	r0, pc, r0
    8744:	bx	lr
    8748:	cmp	r0, #226	; 0xe2
    874c:	beq	bcac <bt_compidtostr@@Base+0x3c7c>
    8750:	bls	87a8 <bt_compidtostr@@Base+0x778>
    8754:	cmp	r0, #242	; 0xf2
    8758:	beq	bd3c <bt_compidtostr@@Base+0x3d0c>
    875c:	bls	88bc <bt_compidtostr@@Base+0x88c>
    8760:	cmp	r0, #250	; 0xfa
    8764:	beq	bd84 <bt_compidtostr@@Base+0x3d54>
    8768:	bls	8940 <bt_compidtostr@@Base+0x910>
    876c:	cmp	r0, #254	; 0xfe
    8770:	beq	bda8 <bt_compidtostr@@Base+0x3d78>
    8774:	bls	897c <bt_compidtostr@@Base+0x94c>
    8778:	cmp	r0, #256	; 0x100
    877c:	beq	bdc0 <bt_compidtostr@@Base+0x3d90>
    8780:	bcc	bdb4 <bt_compidtostr@@Base+0x3d84>
    8784:	ldr	r3, [pc, #1708]	; 8e38 <bt_compidtostr@@Base+0xe08>
    8788:	cmp	r0, r3
    878c:	beq	bdcc <bt_compidtostr@@Base+0x3d9c>
    8790:	add	r3, r3, #1
    8794:	cmp	r0, r3
    8798:	bne	e330 <bt_compidtostr@@Base+0x6300>
    879c:	ldr	r0, [pc, #1688]	; 8e3c <bt_compidtostr@@Base+0xe0c>
    87a0:	add	r0, pc, r0
    87a4:	bx	lr
    87a8:	cmp	r0, #210	; 0xd2
    87ac:	beq	bc1c <bt_compidtostr@@Base+0x3bec>
    87b0:	bhi	8838 <bt_compidtostr@@Base+0x808>
    87b4:	cmp	r0, #202	; 0xca
    87b8:	beq	bbd4 <bt_compidtostr@@Base+0x3ba4>
    87bc:	bhi	87fc <bt_compidtostr@@Base+0x7cc>
    87c0:	cmp	r0, #198	; 0xc6
    87c4:	beq	bbb0 <bt_compidtostr@@Base+0x3b80>
    87c8:	bhi	87e4 <bt_compidtostr@@Base+0x7b4>
    87cc:	cmp	r0, #196	; 0xc4
    87d0:	beq	bb98 <bt_compidtostr@@Base+0x3b68>
    87d4:	bhi	bba4 <bt_compidtostr@@Base+0x3b74>
    87d8:	ldr	r0, [pc, #1632]	; 8e40 <bt_compidtostr@@Base+0xe10>
    87dc:	add	r0, pc, r0
    87e0:	bx	lr
    87e4:	cmp	r0, #200	; 0xc8
    87e8:	beq	bbbc <bt_compidtostr@@Base+0x3b8c>
    87ec:	bhi	bbc8 <bt_compidtostr@@Base+0x3b98>
    87f0:	ldr	r0, [pc, #1612]	; 8e44 <bt_compidtostr@@Base+0xe14>
    87f4:	add	r0, pc, r0
    87f8:	bx	lr
    87fc:	cmp	r0, #206	; 0xce
    8800:	beq	bbf8 <bt_compidtostr@@Base+0x3bc8>
    8804:	bhi	8820 <bt_compidtostr@@Base+0x7f0>
    8808:	cmp	r0, #204	; 0xcc
    880c:	beq	bbe0 <bt_compidtostr@@Base+0x3bb0>
    8810:	bhi	bbec <bt_compidtostr@@Base+0x3bbc>
    8814:	ldr	r0, [pc, #1580]	; 8e48 <bt_compidtostr@@Base+0xe18>
    8818:	add	r0, pc, r0
    881c:	bx	lr
    8820:	cmp	r0, #208	; 0xd0
    8824:	beq	bc04 <bt_compidtostr@@Base+0x3bd4>
    8828:	bhi	bc10 <bt_compidtostr@@Base+0x3be0>
    882c:	ldr	r0, [pc, #1560]	; 8e4c <bt_compidtostr@@Base+0xe1c>
    8830:	add	r0, pc, r0
    8834:	bx	lr
    8838:	cmp	r0, #218	; 0xda
    883c:	beq	bc64 <bt_compidtostr@@Base+0x3c34>
    8840:	bhi	8880 <bt_compidtostr@@Base+0x850>
    8844:	cmp	r0, #214	; 0xd6
    8848:	beq	bc40 <bt_compidtostr@@Base+0x3c10>
    884c:	bhi	8868 <bt_compidtostr@@Base+0x838>
    8850:	cmp	r0, #212	; 0xd4
    8854:	beq	bc28 <bt_compidtostr@@Base+0x3bf8>
    8858:	bhi	bc34 <bt_compidtostr@@Base+0x3c04>
    885c:	ldr	r0, [pc, #1516]	; 8e50 <bt_compidtostr@@Base+0xe20>
    8860:	add	r0, pc, r0
    8864:	bx	lr
    8868:	cmp	r0, #216	; 0xd8
    886c:	beq	bc4c <bt_compidtostr@@Base+0x3c1c>
    8870:	bhi	bc58 <bt_compidtostr@@Base+0x3c28>
    8874:	ldr	r0, [pc, #1496]	; 8e54 <bt_compidtostr@@Base+0xe24>
    8878:	add	r0, pc, r0
    887c:	bx	lr
    8880:	cmp	r0, #222	; 0xde
    8884:	beq	bc88 <bt_compidtostr@@Base+0x3c58>
    8888:	bhi	88a4 <bt_compidtostr@@Base+0x874>
    888c:	cmp	r0, #220	; 0xdc
    8890:	beq	bc70 <bt_compidtostr@@Base+0x3c40>
    8894:	bhi	bc7c <bt_compidtostr@@Base+0x3c4c>
    8898:	ldr	r0, [pc, #1464]	; 8e58 <bt_compidtostr@@Base+0xe28>
    889c:	add	r0, pc, r0
    88a0:	bx	lr
    88a4:	cmp	r0, #224	; 0xe0
    88a8:	beq	bc94 <bt_compidtostr@@Base+0x3c64>
    88ac:	bhi	bca0 <bt_compidtostr@@Base+0x3c70>
    88b0:	ldr	r0, [pc, #1444]	; 8e5c <bt_compidtostr@@Base+0xe2c>
    88b4:	add	r0, pc, r0
    88b8:	bx	lr
    88bc:	cmp	r0, #234	; 0xea
    88c0:	beq	bcf4 <bt_compidtostr@@Base+0x3cc4>
    88c4:	bhi	8904 <bt_compidtostr@@Base+0x8d4>
    88c8:	cmp	r0, #230	; 0xe6
    88cc:	beq	bcd0 <bt_compidtostr@@Base+0x3ca0>
    88d0:	bhi	88ec <bt_compidtostr@@Base+0x8bc>
    88d4:	cmp	r0, #228	; 0xe4
    88d8:	beq	bcb8 <bt_compidtostr@@Base+0x3c88>
    88dc:	bhi	bcc4 <bt_compidtostr@@Base+0x3c94>
    88e0:	ldr	r0, [pc, #1400]	; 8e60 <bt_compidtostr@@Base+0xe30>
    88e4:	add	r0, pc, r0
    88e8:	bx	lr
    88ec:	cmp	r0, #232	; 0xe8
    88f0:	beq	bcdc <bt_compidtostr@@Base+0x3cac>
    88f4:	bhi	bce8 <bt_compidtostr@@Base+0x3cb8>
    88f8:	ldr	r0, [pc, #1380]	; 8e64 <bt_compidtostr@@Base+0xe34>
    88fc:	add	r0, pc, r0
    8900:	bx	lr
    8904:	cmp	r0, #238	; 0xee
    8908:	beq	bd18 <bt_compidtostr@@Base+0x3ce8>
    890c:	bhi	8928 <bt_compidtostr@@Base+0x8f8>
    8910:	cmp	r0, #236	; 0xec
    8914:	beq	bd00 <bt_compidtostr@@Base+0x3cd0>
    8918:	bhi	bd0c <bt_compidtostr@@Base+0x3cdc>
    891c:	ldr	r0, [pc, #1348]	; 8e68 <bt_compidtostr@@Base+0xe38>
    8920:	add	r0, pc, r0
    8924:	bx	lr
    8928:	cmp	r0, #240	; 0xf0
    892c:	beq	bd24 <bt_compidtostr@@Base+0x3cf4>
    8930:	bhi	bd30 <bt_compidtostr@@Base+0x3d00>
    8934:	ldr	r0, [pc, #1328]	; 8e6c <bt_compidtostr@@Base+0xe3c>
    8938:	add	r0, pc, r0
    893c:	bx	lr
    8940:	cmp	r0, #246	; 0xf6
    8944:	beq	bd60 <bt_compidtostr@@Base+0x3d30>
    8948:	bhi	8964 <bt_compidtostr@@Base+0x934>
    894c:	cmp	r0, #244	; 0xf4
    8950:	beq	bd48 <bt_compidtostr@@Base+0x3d18>
    8954:	bhi	bd54 <bt_compidtostr@@Base+0x3d24>
    8958:	ldr	r0, [pc, #1296]	; 8e70 <bt_compidtostr@@Base+0xe40>
    895c:	add	r0, pc, r0
    8960:	bx	lr
    8964:	cmp	r0, #248	; 0xf8
    8968:	beq	bd6c <bt_compidtostr@@Base+0x3d3c>
    896c:	bhi	bd78 <bt_compidtostr@@Base+0x3d48>
    8970:	ldr	r0, [pc, #1276]	; 8e74 <bt_compidtostr@@Base+0xe44>
    8974:	add	r0, pc, r0
    8978:	bx	lr
    897c:	cmp	r0, #252	; 0xfc
    8980:	beq	bd90 <bt_compidtostr@@Base+0x3d60>
    8984:	bhi	bd9c <bt_compidtostr@@Base+0x3d6c>
    8988:	ldr	r0, [pc, #1256]	; 8e78 <bt_compidtostr@@Base+0xe48>
    898c:	add	r0, pc, r0
    8990:	bx	lr
    8994:	ldr	r3, [pc, #1248]	; 8e7c <bt_compidtostr@@Base+0xe4c>
    8998:	cmp	r0, r3
    899c:	beq	c270 <bt_compidtostr@@Base+0x4240>
    89a0:	bhi	9340 <bt_compidtostr@@Base+0x1310>
    89a4:	cmp	r0, #324	; 0x144
    89a8:	beq	c024 <bt_compidtostr@@Base+0x3ff4>
    89ac:	bhi	8cb8 <bt_compidtostr@@Base+0xc88>
    89b0:	sub	r3, r3, #98	; 0x62
    89b4:	cmp	r0, r3
    89b8:	beq	bef8 <bt_compidtostr@@Base+0x3ec8>
    89bc:	cmp	r0, #292	; 0x124
    89c0:	bcc	8a38 <bt_compidtostr@@Base+0xa08>
    89c4:	ldr	r3, [pc, #1204]	; 8e80 <bt_compidtostr@@Base+0xe50>
    89c8:	cmp	r0, r3
    89cc:	beq	bf88 <bt_compidtostr@@Base+0x3f58>
    89d0:	cmp	r0, #308	; 0x134
    89d4:	bcc	8ba4 <bt_compidtostr@@Base+0xb74>
    89d8:	ldr	r3, [pc, #1188]	; 8e84 <bt_compidtostr@@Base+0xe54>
    89dc:	cmp	r0, r3
    89e0:	beq	bfd0 <bt_compidtostr@@Base+0x3fa0>
    89e4:	cmp	r0, #316	; 0x13c
    89e8:	bcc	8c50 <bt_compidtostr@@Base+0xc20>
    89ec:	ldr	r3, [pc, #1172]	; 8e88 <bt_compidtostr@@Base+0xe58>
    89f0:	cmp	r0, r3
    89f4:	beq	bff4 <bt_compidtostr@@Base+0x3fc4>
    89f8:	cmp	r0, #320	; 0x140
    89fc:	bcc	8c9c <bt_compidtostr@@Base+0xc6c>
    8a00:	ldr	r3, [pc, #1156]	; 8e8c <bt_compidtostr@@Base+0xe5c>
    8a04:	cmp	r0, r3
    8a08:	beq	c00c <bt_compidtostr@@Base+0x3fdc>
    8a0c:	cmp	r0, #320	; 0x140
    8a10:	bls	c000 <bt_compidtostr@@Base+0x3fd0>
    8a14:	add	r3, r3, #1
    8a18:	cmp	r0, r3
    8a1c:	beq	c018 <bt_compidtostr@@Base+0x3fe8>
    8a20:	add	r3, r3, #1
    8a24:	cmp	r0, r3
    8a28:	bne	e330 <bt_compidtostr@@Base+0x6300>
    8a2c:	ldr	r0, [pc, #1116]	; 8e90 <bt_compidtostr@@Base+0xe60>
    8a30:	add	r0, pc, r0
    8a34:	bx	lr
    8a38:	sub	r3, r3, #16
    8a3c:	cmp	r0, r3
    8a40:	beq	be68 <bt_compidtostr@@Base+0x3e38>
    8a44:	cmp	r0, #276	; 0x114
    8a48:	bcs	8af8 <bt_compidtostr@@Base+0xac8>
    8a4c:	sub	r3, r3, #8
    8a50:	cmp	r0, r3
    8a54:	beq	be20 <bt_compidtostr@@Base+0x3df0>
    8a58:	cmp	r0, #268	; 0x10c
    8a5c:	bcs	8aac <bt_compidtostr@@Base+0xa7c>
    8a60:	sub	r3, r3, #4
    8a64:	cmp	r0, r3
    8a68:	beq	bdfc <bt_compidtostr@@Base+0x3dcc>
    8a6c:	cmp	r0, #264	; 0x108
    8a70:	bcs	8a90 <bt_compidtostr@@Base+0xa60>
    8a74:	sub	r3, r3, #2
    8a78:	cmp	r0, r3
    8a7c:	beq	bde4 <bt_compidtostr@@Base+0x3db4>
    8a80:	bhi	bdf0 <bt_compidtostr@@Base+0x3dc0>
    8a84:	ldr	r0, [pc, #1032]	; 8e94 <bt_compidtostr@@Base+0xe64>
    8a88:	add	r0, pc, r0
    8a8c:	bx	lr
    8a90:	ldr	r3, [pc, #1024]	; 8e98 <bt_compidtostr@@Base+0xe68>
    8a94:	cmp	r0, r3
    8a98:	beq	be08 <bt_compidtostr@@Base+0x3dd8>
    8a9c:	bhi	be14 <bt_compidtostr@@Base+0x3de4>
    8aa0:	ldr	r0, [pc, #1012]	; 8e9c <bt_compidtostr@@Base+0xe6c>
    8aa4:	add	r0, pc, r0
    8aa8:	bx	lr
    8aac:	ldr	r3, [pc, #1004]	; 8ea0 <bt_compidtostr@@Base+0xe70>
    8ab0:	cmp	r0, r3
    8ab4:	beq	be44 <bt_compidtostr@@Base+0x3e14>
    8ab8:	cmp	r0, #272	; 0x110
    8abc:	bcs	8adc <bt_compidtostr@@Base+0xaac>
    8ac0:	sub	r3, r3, #2
    8ac4:	cmp	r0, r3
    8ac8:	beq	be2c <bt_compidtostr@@Base+0x3dfc>
    8acc:	bhi	be38 <bt_compidtostr@@Base+0x3e08>
    8ad0:	ldr	r0, [pc, #972]	; 8ea4 <bt_compidtostr@@Base+0xe74>
    8ad4:	add	r0, pc, r0
    8ad8:	bx	lr
    8adc:	ldr	r3, [pc, #964]	; 8ea8 <bt_compidtostr@@Base+0xe78>
    8ae0:	cmp	r0, r3
    8ae4:	beq	be50 <bt_compidtostr@@Base+0x3e20>
    8ae8:	bhi	be5c <bt_compidtostr@@Base+0x3e2c>
    8aec:	ldr	r0, [pc, #952]	; 8eac <bt_compidtostr@@Base+0xe7c>
    8af0:	add	r0, pc, r0
    8af4:	bx	lr
    8af8:	ldr	r3, [pc, #944]	; 8eb0 <bt_compidtostr@@Base+0xe80>
    8afc:	cmp	r0, r3
    8b00:	beq	beb0 <bt_compidtostr@@Base+0x3e80>
    8b04:	cmp	r0, #284	; 0x11c
    8b08:	bcs	8b58 <bt_compidtostr@@Base+0xb28>
    8b0c:	sub	r3, r3, #4
    8b10:	cmp	r0, r3
    8b14:	beq	be8c <bt_compidtostr@@Base+0x3e5c>
    8b18:	cmp	r0, #280	; 0x118
    8b1c:	bcs	8b3c <bt_compidtostr@@Base+0xb0c>
    8b20:	sub	r3, r3, #2
    8b24:	cmp	r0, r3
    8b28:	beq	be74 <bt_compidtostr@@Base+0x3e44>
    8b2c:	bhi	be80 <bt_compidtostr@@Base+0x3e50>
    8b30:	ldr	r0, [pc, #892]	; 8eb4 <bt_compidtostr@@Base+0xe84>
    8b34:	add	r0, pc, r0
    8b38:	bx	lr
    8b3c:	ldr	r3, [pc, #884]	; 8eb8 <bt_compidtostr@@Base+0xe88>
    8b40:	cmp	r0, r3
    8b44:	beq	be98 <bt_compidtostr@@Base+0x3e68>
    8b48:	bhi	bea4 <bt_compidtostr@@Base+0x3e74>
    8b4c:	ldr	r0, [pc, #872]	; 8ebc <bt_compidtostr@@Base+0xe8c>
    8b50:	add	r0, pc, r0
    8b54:	bx	lr
    8b58:	ldr	r3, [pc, #864]	; 8ec0 <bt_compidtostr@@Base+0xe90>
    8b5c:	cmp	r0, r3
    8b60:	beq	bed4 <bt_compidtostr@@Base+0x3ea4>
    8b64:	cmp	r0, #288	; 0x120
    8b68:	bcs	8b88 <bt_compidtostr@@Base+0xb58>
    8b6c:	sub	r3, r3, #2
    8b70:	cmp	r0, r3
    8b74:	beq	bebc <bt_compidtostr@@Base+0x3e8c>
    8b78:	bhi	bec8 <bt_compidtostr@@Base+0x3e98>
    8b7c:	ldr	r0, [pc, #832]	; 8ec4 <bt_compidtostr@@Base+0xe94>
    8b80:	add	r0, pc, r0
    8b84:	bx	lr
    8b88:	ldr	r3, [pc, #824]	; 8ec8 <bt_compidtostr@@Base+0xe98>
    8b8c:	cmp	r0, r3
    8b90:	beq	bee0 <bt_compidtostr@@Base+0x3eb0>
    8b94:	bhi	beec <bt_compidtostr@@Base+0x3ebc>
    8b98:	ldr	r0, [pc, #812]	; 8ecc <bt_compidtostr@@Base+0xe9c>
    8b9c:	add	r0, pc, r0
    8ba0:	bx	lr
    8ba4:	sub	r3, r3, #8
    8ba8:	cmp	r0, r3
    8bac:	beq	bf40 <bt_compidtostr@@Base+0x3f10>
    8bb0:	cmp	r0, #300	; 0x12c
    8bb4:	bcs	8c04 <bt_compidtostr@@Base+0xbd4>
    8bb8:	sub	r3, r3, #4
    8bbc:	cmp	r0, r3
    8bc0:	beq	bf1c <bt_compidtostr@@Base+0x3eec>
    8bc4:	cmp	r0, #296	; 0x128
    8bc8:	bcs	8be8 <bt_compidtostr@@Base+0xbb8>
    8bcc:	sub	r3, r3, #2
    8bd0:	cmp	r0, r3
    8bd4:	beq	bf04 <bt_compidtostr@@Base+0x3ed4>
    8bd8:	bhi	bf10 <bt_compidtostr@@Base+0x3ee0>
    8bdc:	ldr	r0, [pc, #748]	; 8ed0 <bt_compidtostr@@Base+0xea0>
    8be0:	add	r0, pc, r0
    8be4:	bx	lr
    8be8:	ldr	r3, [pc, #740]	; 8ed4 <bt_compidtostr@@Base+0xea4>
    8bec:	cmp	r0, r3
    8bf0:	beq	bf28 <bt_compidtostr@@Base+0x3ef8>
    8bf4:	bhi	bf34 <bt_compidtostr@@Base+0x3f04>
    8bf8:	ldr	r0, [pc, #728]	; 8ed8 <bt_compidtostr@@Base+0xea8>
    8bfc:	add	r0, pc, r0
    8c00:	bx	lr
    8c04:	ldr	r3, [pc, #720]	; 8edc <bt_compidtostr@@Base+0xeac>
    8c08:	cmp	r0, r3
    8c0c:	beq	bf64 <bt_compidtostr@@Base+0x3f34>
    8c10:	cmp	r0, #304	; 0x130
    8c14:	bcs	8c34 <bt_compidtostr@@Base+0xc04>
    8c18:	sub	r3, r3, #2
    8c1c:	cmp	r0, r3
    8c20:	beq	bf4c <bt_compidtostr@@Base+0x3f1c>
    8c24:	bhi	bf58 <bt_compidtostr@@Base+0x3f28>
    8c28:	ldr	r0, [pc, #688]	; 8ee0 <bt_compidtostr@@Base+0xeb0>
    8c2c:	add	r0, pc, r0
    8c30:	bx	lr
    8c34:	ldr	r3, [pc, #680]	; 8ee4 <bt_compidtostr@@Base+0xeb4>
    8c38:	cmp	r0, r3
    8c3c:	beq	bf70 <bt_compidtostr@@Base+0x3f40>
    8c40:	bhi	bf7c <bt_compidtostr@@Base+0x3f4c>
    8c44:	ldr	r0, [pc, #668]	; 8ee8 <bt_compidtostr@@Base+0xeb8>
    8c48:	add	r0, pc, r0
    8c4c:	bx	lr
    8c50:	sub	r3, r3, #4
    8c54:	cmp	r0, r3
    8c58:	beq	bfac <bt_compidtostr@@Base+0x3f7c>
    8c5c:	cmp	r0, #312	; 0x138
    8c60:	bcs	8c80 <bt_compidtostr@@Base+0xc50>
    8c64:	sub	r3, r3, #2
    8c68:	cmp	r0, r3
    8c6c:	beq	bf94 <bt_compidtostr@@Base+0x3f64>
    8c70:	bhi	bfa0 <bt_compidtostr@@Base+0x3f70>
    8c74:	ldr	r0, [pc, #624]	; 8eec <bt_compidtostr@@Base+0xebc>
    8c78:	add	r0, pc, r0
    8c7c:	bx	lr
    8c80:	ldr	r3, [pc, #616]	; 8ef0 <bt_compidtostr@@Base+0xec0>
    8c84:	cmp	r0, r3
    8c88:	beq	bfb8 <bt_compidtostr@@Base+0x3f88>
    8c8c:	bhi	bfc4 <bt_compidtostr@@Base+0x3f94>
    8c90:	ldr	r0, [pc, #604]	; 8ef4 <bt_compidtostr@@Base+0xec4>
    8c94:	add	r0, pc, r0
    8c98:	bx	lr
    8c9c:	sub	r3, r3, #2
    8ca0:	cmp	r0, r3
    8ca4:	beq	bfdc <bt_compidtostr@@Base+0x3fac>
    8ca8:	bhi	bfe8 <bt_compidtostr@@Base+0x3fb8>
    8cac:	ldr	r0, [pc, #580]	; 8ef8 <bt_compidtostr@@Base+0xec8>
    8cb0:	add	r0, pc, r0
    8cb4:	bx	lr
    8cb8:	cmp	r0, #356	; 0x164
    8cbc:	beq	c144 <bt_compidtostr@@Base+0x4114>
    8cc0:	bls	8d18 <bt_compidtostr@@Base+0xce8>
    8cc4:	cmp	r0, #372	; 0x174
    8cc8:	beq	c1d4 <bt_compidtostr@@Base+0x41a4>
    8ccc:	bls	924c <bt_compidtostr@@Base+0x121c>
    8cd0:	cmp	r0, #380	; 0x17c
    8cd4:	beq	c21c <bt_compidtostr@@Base+0x41ec>
    8cd8:	bls	92e0 <bt_compidtostr@@Base+0x12b0>
    8cdc:	cmp	r0, #384	; 0x180
    8ce0:	beq	c240 <bt_compidtostr@@Base+0x4210>
    8ce4:	bls	9324 <bt_compidtostr@@Base+0x12f4>
    8ce8:	ldr	r3, [pc, #524]	; 8efc <bt_compidtostr@@Base+0xecc>
    8cec:	cmp	r0, r3
    8cf0:	beq	c258 <bt_compidtostr@@Base+0x4228>
    8cf4:	bcc	c24c <bt_compidtostr@@Base+0x421c>
    8cf8:	add	r3, r3, #1
    8cfc:	cmp	r0, r3
    8d00:	beq	c264 <bt_compidtostr@@Base+0x4234>
    8d04:	cmp	r0, #388	; 0x184
    8d08:	bne	e330 <bt_compidtostr@@Base+0x6300>
    8d0c:	ldr	r0, [pc, #492]	; 8f00 <bt_compidtostr@@Base+0xed0>
    8d10:	add	r0, pc, r0
    8d14:	bx	lr
    8d18:	cmp	r0, #340	; 0x154
    8d1c:	beq	c0b4 <bt_compidtostr@@Base+0x4084>
    8d20:	bhi	91b8 <bt_compidtostr@@Base+0x1188>
    8d24:	cmp	r0, #332	; 0x14c
    8d28:	beq	c06c <bt_compidtostr@@Base+0x403c>
    8d2c:	bhi	9174 <bt_compidtostr@@Base+0x1144>
    8d30:	cmp	r0, #328	; 0x148
    8d34:	beq	c048 <bt_compidtostr@@Base+0x4018>
    8d38:	bhi	8d58 <bt_compidtostr@@Base+0xd28>
    8d3c:	ldr	r3, [pc, #448]	; 8f04 <bt_compidtostr@@Base+0xed4>
    8d40:	cmp	r0, r3
    8d44:	beq	c030 <bt_compidtostr@@Base+0x4000>
    8d48:	bhi	c03c <bt_compidtostr@@Base+0x400c>
    8d4c:	ldr	r0, [pc, #436]	; 8f08 <bt_compidtostr@@Base+0xed8>
    8d50:	add	r0, pc, r0
    8d54:	bx	lr
    8d58:	ldr	r3, [pc, #428]	; 8f0c <bt_compidtostr@@Base+0xedc>
    8d5c:	cmp	r0, r3
    8d60:	beq	c054 <bt_compidtostr@@Base+0x4024>
    8d64:	bhi	c060 <bt_compidtostr@@Base+0x4030>
    8d68:	ldr	r0, [pc, #416]	; 8f10 <bt_compidtostr@@Base+0xee0>
    8d6c:	add	r0, pc, r0
    8d70:	bx	lr
    8d74:	andeq	r0, r0, r7, lsl #4
    8d78:	andeq	fp, r0, r4, lsl #15
    8d7c:	strdeq	fp, [r0], -r4
    8d80:	andeq	fp, r0, r8, lsr #4
    8d84:	andeq	fp, r0, r0, lsr r2
    8d88:	andeq	fp, r0, r8, ror #4
    8d8c:	andeq	fp, r0, ip, lsr #5
    8d90:	ldrdeq	fp, [r0], -r8
    8d94:	andeq	fp, r0, r4, lsl #6
    8d98:	andeq	fp, r0, ip, asr #6
    8d9c:	andeq	fp, r0, r8, asr r3
    8da0:	muleq	r0, r0, r3
    8da4:	andeq	fp, r0, ip, asr #7
    8da8:	strdeq	fp, [r0], -r8
    8dac:	andeq	fp, r0, r0, lsr r4
    8db0:	andeq	fp, r0, r4, ror #8
    8db4:	ldrdeq	fp, [r0], -r0
    8db8:	andeq	fp, r0, r8, lsl fp
    8dbc:	andeq	fp, r0, r0, lsr r5
    8dc0:	andeq	fp, r0, r4, lsl #11
    8dc4:			; <UNDEFINED> instruction: 0x0000b5bc
    8dc8:	andeq	fp, r0, r0, lsl #12
    8dcc:	andeq	fp, r0, r8, lsr #12
    8dd0:	andeq	fp, r0, r0, ror #12
    8dd4:	andeq	fp, r0, r8, lsr #13
    8dd8:	andeq	fp, r0, r4, lsl #14
    8ddc:	andeq	fp, r0, r4, lsr r7
    8de0:	andeq	fp, r0, r0, ror r7
    8de4:	muleq	r0, r4, r7
    8de8:	ldrdeq	fp, [r0], -r8
    8dec:	andeq	fp, r0, r4, lsl #16
    8df0:	andeq	fp, r0, r8, asr #16
    8df4:	andeq	fp, r0, ip, lsl #17
    8df8:	andeq	fp, r0, r8, ror #29
    8dfc:	andeq	fp, r0, r0, asr #17
    8e00:	andeq	fp, r0, ip, lsl #18
    8e04:	andeq	fp, r0, r8, lsr #18
    8e08:	muleq	r0, r8, r9
    8e0c:	strdeq	fp, [r0], -r8
    8e10:	andeq	fp, r0, ip, lsr sl
    8e14:	andeq	fp, r0, ip, ror sl
    8e18:	andeq	fp, r0, r0, asr #21
    8e1c:	andeq	fp, r0, ip, ror #21
    8e20:	andeq	fp, r0, r0, lsr #22
    8e24:	andeq	fp, r0, r0, asr fp
    8e28:	andeq	fp, r0, r0, lsr #23
    8e2c:	andeq	fp, r0, ip, asr #23
    8e30:	andeq	fp, r0, ip, lsl #24
    8e34:	andeq	fp, r0, r4, asr ip
    8e38:	andeq	r0, r0, r1, lsl #2
    8e3c:			; <UNDEFINED> instruction: 0x0000c1b4
    8e40:	muleq	r0, r8, ip
    8e44:	andeq	fp, r0, r4, asr #25
    8e48:	andeq	fp, r0, r8, asr #25
    8e4c:	andeq	fp, r0, r0, lsl #26
    8e50:	andeq	fp, r0, r4, lsr #26
    8e54:	andeq	fp, r0, r8, ror sp
    8e58:			; <UNDEFINED> instruction: 0x0000bdbc
    8e5c:	andeq	fp, r0, r8, ror #27
    8e60:	strdeq	fp, [r0], -r4
    8e64:	andeq	fp, r0, r0, lsr lr
    8e68:	andeq	fp, r0, ip, asr lr
    8e6c:	andeq	fp, r0, r8, lsr #29
    8e70:	strdeq	fp, [r0], -r8
    8e74:	andeq	fp, r0, r8, lsr #30
    8e78:	andeq	fp, r0, r8, asr pc
    8e7c:	andeq	r0, r0, r5, lsl #3
    8e80:	andeq	r0, r0, r3, lsr r1
    8e84:	andeq	r0, r0, fp, lsr r1
    8e88:	andeq	r0, r0, pc, lsr r1
    8e8c:	andeq	r0, r0, r1, asr #2
    8e90:	andeq	ip, r0, r8, ror r4
    8e94:	strdeq	fp, [r0], -r4
    8e98:	andeq	r0, r0, r9, lsl #2
    8e9c:	andeq	fp, r0, r0, ror #30
    8ea0:	andeq	r0, r0, pc, lsl #2
    8ea4:	andeq	fp, r0, r4, ror pc
    8ea8:	andeq	r0, r0, r1, lsl r1
    8eac:			; <UNDEFINED> instruction: 0x0000bfb0
    8eb0:	andeq	r0, r0, fp, lsl r1
    8eb4:	andeq	fp, r0, r4, asr #31
    8eb8:	andeq	r0, r0, r9, lsl r1
    8ebc:	andeq	fp, r0, r8, ror #31
    8ec0:	andeq	r0, r0, pc, lsl r1
    8ec4:	andeq	ip, r0, r0, lsl r0
    8ec8:	andeq	r0, r0, r1, lsr #2
    8ecc:	andeq	ip, r0, r8, lsr #32
    8ed0:	andeq	ip, r0, r8, lsr #32
    8ed4:	andeq	r0, r0, r9, lsr #2
    8ed8:	andeq	ip, r0, ip, asr #32
    8edc:	andeq	r0, r0, pc, lsr #2
    8ee0:	andeq	ip, r0, r0, ror r0
    8ee4:	andeq	r0, r0, r1, lsr r1
    8ee8:	andeq	ip, r0, r0, lsr #1
    8eec:	ldrdeq	ip, [r0], -r0
    8ef0:	andeq	r0, r0, r9, lsr r1
    8ef4:	andeq	ip, r0, r4, lsr #2
    8ef8:	andeq	ip, r0, r8, asr r1
    8efc:	andeq	r0, r0, r2, lsl #3
    8f00:	andeq	ip, r0, r8, lsl #13
    8f04:	andeq	r0, r0, r6, asr #2
    8f08:	andeq	ip, r0, r8, ror r1
    8f0c:	andeq	r0, r0, sl, asr #2
    8f10:	andeq	ip, r0, r0, lsr #3
    8f14:	andeq	r0, r0, lr, asr #2
    8f18:			; <UNDEFINED> instruction: 0x0000bdb8
    8f1c:	andeq	r0, r0, r2, asr r1
    8f20:	strdeq	fp, [r0], -r8
    8f24:	andeq	r0, r0, r6, asr r1
    8f28:	andeq	fp, r0, ip, lsl #28
    8f2c:	andeq	r0, r0, sl, asr r1
    8f30:	andeq	fp, r0, r8, asr #28
    8f34:	andeq	r0, r0, lr, asr r1
    8f38:	andeq	fp, r0, r8, ror #28
    8f3c:	andeq	r0, r0, r2, ror #2
    8f40:	muleq	r0, r0, lr
    8f44:	andeq	r0, r0, r6, ror #2
    8f48:	andeq	fp, r0, r0, asr #29
    8f4c:	andeq	r0, r0, sl, ror #2
    8f50:	andeq	fp, r0, ip, lsl #30
    8f54:	andeq	r0, r0, lr, ror #2
    8f58:	andeq	fp, r0, r0, lsr #30
    8f5c:	andeq	r0, r0, r2, ror r1
    8f60:	andeq	fp, r0, r8, asr #30
    8f64:	andeq	r0, r0, r6, ror r1
    8f68:	andeq	fp, r0, r4, lsl #31
    8f6c:	andeq	r0, r0, sl, ror r1
    8f70:			; <UNDEFINED> instruction: 0x0000bfb0
    8f74:	andeq	r0, r0, lr, ror r1
    8f78:	andeq	fp, r0, r0, ror #31
    8f7c:	andeq	r0, r0, r6, asr #3
    8f80:			; <UNDEFINED> instruction: 0x000001b5
    8f84:			; <UNDEFINED> instruction: 0x000001bd
    8f88:	andeq	r0, r0, r1, asr #3
    8f8c:	andeq	r0, r0, r3, asr #3
    8f90:	strdeq	ip, [r0], -r4
    8f94:	andeq	fp, r0, r8, lsr #31
    8f98:	andeq	r0, r0, fp, lsl #3
    8f9c:	ldrdeq	fp, [r0], -r8
    8fa0:	muleq	r0, r1, r1
    8fa4:	andeq	ip, r0, r0
    8fa8:	muleq	r0, r3, r1
    8fac:	andeq	ip, r0, r4, lsr r0
    8fb0:	muleq	r0, sp, r1
    8fb4:	andeq	ip, r0, r0, asr #32
    8fb8:	muleq	r0, fp, r1
    8fbc:	andeq	ip, r0, r4, lsl #1
    8fc0:	andeq	r0, r0, r1, lsr #3
    8fc4:	andeq	ip, r0, ip, lsr #1
    8fc8:	andeq	r0, r0, r3, lsr #3
    8fcc:	andeq	ip, r0, ip, asr #1
    8fd0:	ldrdeq	ip, [r0], -r8
    8fd4:	andeq	r0, r0, fp, lsr #3
    8fd8:	strdeq	ip, [r0], -r4
    8fdc:			; <UNDEFINED> instruction: 0x000001b1
    8fe0:	andeq	ip, r0, r4, lsr #2
    8fe4:			; <UNDEFINED> instruction: 0x000001b3
    8fe8:	andeq	ip, r0, r4, ror #2
    8fec:	andeq	ip, r0, r0, ror r1
    8ff0:			; <UNDEFINED> instruction: 0x000001bb
    8ff4:	muleq	r0, r8, r1
    8ff8:	ldrdeq	ip, [r0], -r4
    8ffc:	andeq	r0, r0, r6, ror #3
    9000:	strdeq	r0, [r0], -r6
    9004:	strdeq	r0, [r0], -lr
    9008:	andeq	r0, r0, r2, lsl #4
    900c:	andeq	r0, r0, r5, lsl #4
    9010:	andeq	ip, r0, r8, lsr #14
    9014:	andeq	ip, r0, r8, asr #3
    9018:	strdeq	ip, [r0], -r0
    901c:	ldrdeq	r0, [r0], -r2
    9020:	andeq	ip, r0, r4, lsr #4
    9024:	andeq	ip, r0, r4, asr #4
    9028:	ldrdeq	r0, [r0], -lr
    902c:	andeq	ip, r0, ip, asr #4
    9030:	muleq	r0, r0, r2
    9034:	andeq	r0, r0, r2, ror #3
    9038:	ldrdeq	ip, [r0], -r4
    903c:	strdeq	ip, [r0], -r8
    9040:	andeq	ip, r0, r8, lsl r3
    9044:	andeq	ip, r0, r8, asr #6
    9048:	strdeq	r0, [r0], -r2
    904c:	andeq	ip, r0, r4, ror r3
    9050:			; <UNDEFINED> instruction: 0x0000c3b4
    9054:	andeq	ip, r0, r0, ror #7
    9058:	andeq	ip, r0, r0, lsr r4
    905c:	andeq	ip, r0, r0, lsl #9
    9060:	andeq	r0, r0, fp, lsl #6
    9064:	andeq	r0, r0, r7, lsr r2
    9068:	andeq	r0, r0, pc, lsr r2
    906c:	andeq	r0, r0, r3, asr #4
    9070:	andeq	r0, r0, r5, asr #4
    9074:	andeq	ip, r0, ip, ror #18
    9078:	andeq	ip, r0, r0, lsr #8
    907c:	andeq	r0, r0, sp, lsl #4
    9080:	andeq	ip, r0, r4, asr r4
    9084:	andeq	r0, r0, r3, lsl r2
    9088:	andeq	ip, r0, r8, lsl #9
    908c:	andeq	r0, r0, r5, lsl r2
    9090:			; <UNDEFINED> instruction: 0x0000c4b4
    9094:	andeq	r0, r0, pc, lsl r2
    9098:	andeq	ip, r0, r0, asr #9
    909c:	andeq	r0, r0, sp, lsl r2
    90a0:	andeq	ip, r0, ip, ror #9
    90a4:	andeq	r0, r0, r3, lsr #4
    90a8:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    90ac:	andeq	r0, r0, r5, lsr #4
    90b0:	andeq	ip, r0, r8, lsr r5
    90b4:	andeq	ip, r0, r0, asr #10
    90b8:	andeq	r0, r0, sp, lsr #4
    90bc:	andeq	ip, r0, r8, ror r5
    90c0:	andeq	r0, r0, r3, lsr r2
    90c4:	andeq	ip, r0, r4, lsr #11
    90c8:	andeq	r0, r0, r5, lsr r2
    90cc:	andeq	ip, r0, ip, ror #11
    90d0:	andeq	ip, r0, r0, lsl r6
    90d4:	andeq	r0, r0, sp, lsr r2
    90d8:	andeq	ip, r0, r0, asr r6
    90dc:	andeq	ip, r0, ip, ror r6
    90e0:	andeq	r0, r0, r6, lsl #5
    90e4:	ldrdeq	ip, [r0], -r8
    90e8:	andeq	r0, r0, sl, asr #4
    90ec:	andeq	ip, r0, r4, ror r6
    90f0:	andeq	r0, r0, lr, asr #4
    90f4:	muleq	r0, r8, r6
    90f8:	andeq	r0, r0, r2, asr r2
    90fc:	andeq	ip, r0, r0, ror #13
    9100:	andeq	r0, r0, r6, asr r2
    9104:	andeq	ip, r0, r4, lsl #14
    9108:	andeq	r0, r0, sl, asr r2
    910c:	andeq	ip, r0, r0, lsr r7
    9110:	andeq	r0, r0, lr, asr r2
    9114:	andeq	ip, r0, r0, lsr #15
    9118:	andeq	r0, r0, r2, ror #4
    911c:	andeq	ip, r0, r8, asr #15
    9120:	andeq	r0, r0, r6, ror #4
    9124:	strdeq	ip, [r0], -r0
    9128:	andeq	r0, r0, sl, ror #4
    912c:	andeq	ip, r0, r0, lsl #16
    9130:	andeq	r0, r0, lr, ror #4
    9134:	andeq	ip, r0, r0, asr #16
    9138:	andeq	r0, r0, r2, ror r2
    913c:	andeq	ip, r0, r0, ror #16
    9140:	andeq	r0, r0, r6, ror r2
    9144:	andeq	ip, r0, r4, lsl #17
    9148:	andeq	r0, r0, sl, ror r2
    914c:	andeq	ip, r0, r8, lsr #17
    9150:	andeq	r0, r0, lr, ror r2
    9154:	ldrdeq	ip, [r0], -r8
    9158:	andeq	r0, r0, r2, lsl #5
    915c:	andeq	ip, r0, r0, lsr r9
    9160:	andeq	r0, r0, sl, asr #5
    9164:			; <UNDEFINED> instruction: 0x000002b9
    9168:	andeq	r0, r0, r1, asr #5
    916c:	andeq	r0, r0, r5, asr #5
    9170:	andeq	r0, r0, r7, asr #5
    9174:	cmp	r0, #336	; 0x150
    9178:	beq	c090 <bt_compidtostr@@Base+0x4060>
    917c:	bhi	919c <bt_compidtostr@@Base+0x116c>
    9180:	ldr	r3, [pc, #-628]	; 8f14 <bt_compidtostr@@Base+0xee4>
    9184:	cmp	r0, r3
    9188:	beq	c078 <bt_compidtostr@@Base+0x4048>
    918c:	bhi	c084 <bt_compidtostr@@Base+0x4054>
    9190:	ldr	r0, [pc, #-640]	; 8f18 <bt_compidtostr@@Base+0xee8>
    9194:	add	r0, pc, r0
    9198:	bx	lr
    919c:	ldr	r3, [pc, #-648]	; 8f1c <bt_compidtostr@@Base+0xeec>
    91a0:	cmp	r0, r3
    91a4:	beq	c09c <bt_compidtostr@@Base+0x406c>
    91a8:	bhi	c0a8 <bt_compidtostr@@Base+0x4078>
    91ac:	ldr	r0, [pc, #-660]	; 8f20 <bt_compidtostr@@Base+0xef0>
    91b0:	add	r0, pc, r0
    91b4:	bx	lr
    91b8:	cmp	r0, #348	; 0x15c
    91bc:	beq	c0fc <bt_compidtostr@@Base+0x40cc>
    91c0:	bhi	9208 <bt_compidtostr@@Base+0x11d8>
    91c4:	cmp	r0, #344	; 0x158
    91c8:	beq	c0d8 <bt_compidtostr@@Base+0x40a8>
    91cc:	bhi	91ec <bt_compidtostr@@Base+0x11bc>
    91d0:	ldr	r3, [pc, #-692]	; 8f24 <bt_compidtostr@@Base+0xef4>
    91d4:	cmp	r0, r3
    91d8:	beq	c0c0 <bt_compidtostr@@Base+0x4090>
    91dc:	bhi	c0cc <bt_compidtostr@@Base+0x409c>
    91e0:	ldr	r0, [pc, #-704]	; 8f28 <bt_compidtostr@@Base+0xef8>
    91e4:	add	r0, pc, r0
    91e8:	bx	lr
    91ec:	ldr	r3, [pc, #-712]	; 8f2c <bt_compidtostr@@Base+0xefc>
    91f0:	cmp	r0, r3
    91f4:	beq	c0e4 <bt_compidtostr@@Base+0x40b4>
    91f8:	bhi	c0f0 <bt_compidtostr@@Base+0x40c0>
    91fc:	ldr	r0, [pc, #-724]	; 8f30 <bt_compidtostr@@Base+0xf00>
    9200:	add	r0, pc, r0
    9204:	bx	lr
    9208:	cmp	r0, #352	; 0x160
    920c:	beq	c120 <bt_compidtostr@@Base+0x40f0>
    9210:	bhi	9230 <bt_compidtostr@@Base+0x1200>
    9214:	ldr	r3, [pc, #-744]	; 8f34 <bt_compidtostr@@Base+0xf04>
    9218:	cmp	r0, r3
    921c:	beq	c108 <bt_compidtostr@@Base+0x40d8>
    9220:	bhi	c114 <bt_compidtostr@@Base+0x40e4>
    9224:	ldr	r0, [pc, #-756]	; 8f38 <bt_compidtostr@@Base+0xf08>
    9228:	add	r0, pc, r0
    922c:	bx	lr
    9230:	ldr	r3, [pc, #-764]	; 8f3c <bt_compidtostr@@Base+0xf0c>
    9234:	cmp	r0, r3
    9238:	beq	c12c <bt_compidtostr@@Base+0x40fc>
    923c:	bhi	c138 <bt_compidtostr@@Base+0x4108>
    9240:	ldr	r0, [pc, #-776]	; 8f40 <bt_compidtostr@@Base+0xf10>
    9244:	add	r0, pc, r0
    9248:	bx	lr
    924c:	cmp	r0, #364	; 0x16c
    9250:	beq	c18c <bt_compidtostr@@Base+0x415c>
    9254:	bhi	929c <bt_compidtostr@@Base+0x126c>
    9258:	cmp	r0, #360	; 0x168
    925c:	beq	c168 <bt_compidtostr@@Base+0x4138>
    9260:	bhi	9280 <bt_compidtostr@@Base+0x1250>
    9264:	ldr	r3, [pc, #-808]	; 8f44 <bt_compidtostr@@Base+0xf14>
    9268:	cmp	r0, r3
    926c:	beq	c150 <bt_compidtostr@@Base+0x4120>
    9270:	bhi	c15c <bt_compidtostr@@Base+0x412c>
    9274:	ldr	r0, [pc, #-820]	; 8f48 <bt_compidtostr@@Base+0xf18>
    9278:	add	r0, pc, r0
    927c:	bx	lr
    9280:	ldr	r3, [pc, #-828]	; 8f4c <bt_compidtostr@@Base+0xf1c>
    9284:	cmp	r0, r3
    9288:	beq	c174 <bt_compidtostr@@Base+0x4144>
    928c:	bhi	c180 <bt_compidtostr@@Base+0x4150>
    9290:	ldr	r0, [pc, #-840]	; 8f50 <bt_compidtostr@@Base+0xf20>
    9294:	add	r0, pc, r0
    9298:	bx	lr
    929c:	cmp	r0, #368	; 0x170
    92a0:	beq	c1b0 <bt_compidtostr@@Base+0x4180>
    92a4:	bhi	92c4 <bt_compidtostr@@Base+0x1294>
    92a8:	ldr	r3, [pc, #-860]	; 8f54 <bt_compidtostr@@Base+0xf24>
    92ac:	cmp	r0, r3
    92b0:	beq	c198 <bt_compidtostr@@Base+0x4168>
    92b4:	bhi	c1a4 <bt_compidtostr@@Base+0x4174>
    92b8:	ldr	r0, [pc, #-872]	; 8f58 <bt_compidtostr@@Base+0xf28>
    92bc:	add	r0, pc, r0
    92c0:	bx	lr
    92c4:	ldr	r3, [pc, #-880]	; 8f5c <bt_compidtostr@@Base+0xf2c>
    92c8:	cmp	r0, r3
    92cc:	beq	c1bc <bt_compidtostr@@Base+0x418c>
    92d0:	bhi	c1c8 <bt_compidtostr@@Base+0x4198>
    92d4:	ldr	r0, [pc, #-892]	; 8f60 <bt_compidtostr@@Base+0xf30>
    92d8:	add	r0, pc, r0
    92dc:	bx	lr
    92e0:	cmp	r0, #376	; 0x178
    92e4:	beq	c1f8 <bt_compidtostr@@Base+0x41c8>
    92e8:	bhi	9308 <bt_compidtostr@@Base+0x12d8>
    92ec:	ldr	r3, [pc, #-912]	; 8f64 <bt_compidtostr@@Base+0xf34>
    92f0:	cmp	r0, r3
    92f4:	beq	c1e0 <bt_compidtostr@@Base+0x41b0>
    92f8:	bhi	c1ec <bt_compidtostr@@Base+0x41bc>
    92fc:	ldr	r0, [pc, #-924]	; 8f68 <bt_compidtostr@@Base+0xf38>
    9300:	add	r0, pc, r0
    9304:	bx	lr
    9308:	ldr	r3, [pc, #-932]	; 8f6c <bt_compidtostr@@Base+0xf3c>
    930c:	cmp	r0, r3
    9310:	beq	c204 <bt_compidtostr@@Base+0x41d4>
    9314:	bhi	c210 <bt_compidtostr@@Base+0x41e0>
    9318:	ldr	r0, [pc, #-944]	; 8f70 <bt_compidtostr@@Base+0xf40>
    931c:	add	r0, pc, r0
    9320:	bx	lr
    9324:	ldr	r3, [pc, #-952]	; 8f74 <bt_compidtostr@@Base+0xf44>
    9328:	cmp	r0, r3
    932c:	beq	c228 <bt_compidtostr@@Base+0x41f8>
    9330:	bhi	c234 <bt_compidtostr@@Base+0x4204>
    9334:	ldr	r0, [pc, #-964]	; 8f78 <bt_compidtostr@@Base+0xf48>
    9338:	add	r0, pc, r0
    933c:	bx	lr
    9340:	ldr	r3, [pc, #-972]	; 8f7c <bt_compidtostr@@Base+0xf4c>
    9344:	cmp	r0, r3
    9348:	beq	c4bc <bt_compidtostr@@Base+0x448c>
    934c:	bhi	9650 <bt_compidtostr@@Base+0x1620>
    9350:	sub	r3, r3, #33	; 0x21
    9354:	cmp	r0, r3
    9358:	beq	c390 <bt_compidtostr@@Base+0x4360>
    935c:	bls	93c0 <bt_compidtostr@@Base+0x1390>
    9360:	ldr	r3, [pc, #-1000]	; 8f80 <bt_compidtostr@@Base+0xf50>
    9364:	cmp	r0, r3
    9368:	beq	c420 <bt_compidtostr@@Base+0x43f0>
    936c:	bls	9530 <bt_compidtostr@@Base+0x1500>
    9370:	ldr	r3, [pc, #-1012]	; 8f84 <bt_compidtostr@@Base+0xf54>
    9374:	cmp	r0, r3
    9378:	beq	c468 <bt_compidtostr@@Base+0x4438>
    937c:	bls	95e0 <bt_compidtostr@@Base+0x15b0>
    9380:	ldr	r3, [pc, #-1024]	; 8f88 <bt_compidtostr@@Base+0xf58>
    9384:	cmp	r0, r3
    9388:	beq	c48c <bt_compidtostr@@Base+0x445c>
    938c:	bls	9630 <bt_compidtostr@@Base+0x1600>
    9390:	ldr	r3, [pc, #-1036]	; 8f8c <bt_compidtostr@@Base+0xf5c>
    9394:	cmp	r0, r3
    9398:	beq	c4a4 <bt_compidtostr@@Base+0x4474>
    939c:	bcc	c498 <bt_compidtostr@@Base+0x4468>
    93a0:	cmp	r0, #452	; 0x1c4
    93a4:	beq	c4b0 <bt_compidtostr@@Base+0x4480>
    93a8:	add	r3, r3, #2
    93ac:	cmp	r0, r3
    93b0:	bne	e330 <bt_compidtostr@@Base+0x6300>
    93b4:	ldr	r0, [pc, #-1068]	; 8f90 <bt_compidtostr@@Base+0xf60>
    93b8:	add	r0, pc, r0
    93bc:	bx	lr
    93c0:	sub	r3, r3, #16
    93c4:	cmp	r0, r3
    93c8:	beq	c300 <bt_compidtostr@@Base+0x42d0>
    93cc:	bhi	9480 <bt_compidtostr@@Base+0x1450>
    93d0:	sub	r3, r3, #8
    93d4:	cmp	r0, r3
    93d8:	beq	c2b8 <bt_compidtostr@@Base+0x4288>
    93dc:	bhi	9430 <bt_compidtostr@@Base+0x1400>
    93e0:	sub	r3, r3, #4
    93e4:	cmp	r0, r3
    93e8:	beq	c294 <bt_compidtostr@@Base+0x4264>
    93ec:	bhi	9410 <bt_compidtostr@@Base+0x13e0>
    93f0:	sub	r3, r3, #2
    93f4:	cmp	r0, r3
    93f8:	beq	c27c <bt_compidtostr@@Base+0x424c>
    93fc:	cmp	r0, #392	; 0x188
    9400:	bcs	c288 <bt_compidtostr@@Base+0x4258>
    9404:	ldr	r0, [pc, #-1144]	; 8f94 <bt_compidtostr@@Base+0xf64>
    9408:	add	r0, pc, r0
    940c:	bx	lr
    9410:	ldr	r3, [pc, #-1152]	; 8f98 <bt_compidtostr@@Base+0xf68>
    9414:	cmp	r0, r3
    9418:	beq	c2a0 <bt_compidtostr@@Base+0x4270>
    941c:	cmp	r0, #396	; 0x18c
    9420:	bcs	c2ac <bt_compidtostr@@Base+0x427c>
    9424:	ldr	r0, [pc, #-1168]	; 8f9c <bt_compidtostr@@Base+0xf6c>
    9428:	add	r0, pc, r0
    942c:	bx	lr
    9430:	ldr	r3, [pc, #-1176]	; 8fa0 <bt_compidtostr@@Base+0xf70>
    9434:	cmp	r0, r3
    9438:	beq	c2dc <bt_compidtostr@@Base+0x42ac>
    943c:	bhi	9460 <bt_compidtostr@@Base+0x1430>
    9440:	sub	r3, r3, #2
    9444:	cmp	r0, r3
    9448:	beq	c2c4 <bt_compidtostr@@Base+0x4294>
    944c:	cmp	r0, #400	; 0x190
    9450:	bcs	c2d0 <bt_compidtostr@@Base+0x42a0>
    9454:	ldr	r0, [pc, #-1208]	; 8fa4 <bt_compidtostr@@Base+0xf74>
    9458:	add	r0, pc, r0
    945c:	bx	lr
    9460:	ldr	r3, [pc, #-1216]	; 8fa8 <bt_compidtostr@@Base+0xf78>
    9464:	cmp	r0, r3
    9468:	beq	c2e8 <bt_compidtostr@@Base+0x42b8>
    946c:	cmp	r0, #404	; 0x194
    9470:	bcs	c2f4 <bt_compidtostr@@Base+0x42c4>
    9474:	ldr	r0, [pc, #-1232]	; 8fac <bt_compidtostr@@Base+0xf7c>
    9478:	add	r0, pc, r0
    947c:	bx	lr
    9480:	ldr	r3, [pc, #-1240]	; 8fb0 <bt_compidtostr@@Base+0xf80>
    9484:	cmp	r0, r3
    9488:	beq	c348 <bt_compidtostr@@Base+0x4318>
    948c:	bhi	94e0 <bt_compidtostr@@Base+0x14b0>
    9490:	sub	r3, r3, #4
    9494:	cmp	r0, r3
    9498:	beq	c324 <bt_compidtostr@@Base+0x42f4>
    949c:	bhi	94c0 <bt_compidtostr@@Base+0x1490>
    94a0:	sub	r3, r3, #2
    94a4:	cmp	r0, r3
    94a8:	beq	c30c <bt_compidtostr@@Base+0x42dc>
    94ac:	cmp	r0, #408	; 0x198
    94b0:	bcs	c318 <bt_compidtostr@@Base+0x42e8>
    94b4:	ldr	r0, [pc, #-1288]	; 8fb4 <bt_compidtostr@@Base+0xf84>
    94b8:	add	r0, pc, r0
    94bc:	bx	lr
    94c0:	ldr	r3, [pc, #-1296]	; 8fb8 <bt_compidtostr@@Base+0xf88>
    94c4:	cmp	r0, r3
    94c8:	beq	c330 <bt_compidtostr@@Base+0x4300>
    94cc:	cmp	r0, #412	; 0x19c
    94d0:	bcs	c33c <bt_compidtostr@@Base+0x430c>
    94d4:	ldr	r0, [pc, #-1312]	; 8fbc <bt_compidtostr@@Base+0xf8c>
    94d8:	add	r0, pc, r0
    94dc:	bx	lr
    94e0:	ldr	r3, [pc, #-1320]	; 8fc0 <bt_compidtostr@@Base+0xf90>
    94e4:	cmp	r0, r3
    94e8:	beq	c36c <bt_compidtostr@@Base+0x433c>
    94ec:	bhi	9510 <bt_compidtostr@@Base+0x14e0>
    94f0:	sub	r3, r3, #2
    94f4:	cmp	r0, r3
    94f8:	beq	c354 <bt_compidtostr@@Base+0x4324>
    94fc:	cmp	r0, #416	; 0x1a0
    9500:	bcs	c360 <bt_compidtostr@@Base+0x4330>
    9504:	ldr	r0, [pc, #-1352]	; 8fc4 <bt_compidtostr@@Base+0xf94>
    9508:	add	r0, pc, r0
    950c:	bx	lr
    9510:	ldr	r3, [pc, #-1360]	; 8fc8 <bt_compidtostr@@Base+0xf98>
    9514:	cmp	r0, r3
    9518:	beq	c378 <bt_compidtostr@@Base+0x4348>
    951c:	cmp	r0, #420	; 0x1a4
    9520:	bcs	c384 <bt_compidtostr@@Base+0x4354>
    9524:	ldr	r0, [pc, #-1376]	; 8fcc <bt_compidtostr@@Base+0xf9c>
    9528:	add	r0, pc, r0
    952c:	bx	lr
    9530:	sub	r3, r3, #8
    9534:	cmp	r0, r3
    9538:	beq	c3d8 <bt_compidtostr@@Base+0x43a8>
    953c:	bhi	9590 <bt_compidtostr@@Base+0x1560>
    9540:	sub	r3, r3, #4
    9544:	cmp	r0, r3
    9548:	beq	c3b4 <bt_compidtostr@@Base+0x4384>
    954c:	bhi	9570 <bt_compidtostr@@Base+0x1540>
    9550:	sub	r3, r3, #2
    9554:	cmp	r0, r3
    9558:	beq	c39c <bt_compidtostr@@Base+0x436c>
    955c:	cmp	r0, #424	; 0x1a8
    9560:	bcs	c3a8 <bt_compidtostr@@Base+0x4378>
    9564:	ldr	r0, [pc, #-1436]	; 8fd0 <bt_compidtostr@@Base+0xfa0>
    9568:	add	r0, pc, r0
    956c:	bx	lr
    9570:	ldr	r3, [pc, #-1444]	; 8fd4 <bt_compidtostr@@Base+0xfa4>
    9574:	cmp	r0, r3
    9578:	beq	c3c0 <bt_compidtostr@@Base+0x4390>
    957c:	cmp	r0, #428	; 0x1ac
    9580:	bcs	c3cc <bt_compidtostr@@Base+0x439c>
    9584:	ldr	r0, [pc, #-1460]	; 8fd8 <bt_compidtostr@@Base+0xfa8>
    9588:	add	r0, pc, r0
    958c:	bx	lr
    9590:	ldr	r3, [pc, #-1468]	; 8fdc <bt_compidtostr@@Base+0xfac>
    9594:	cmp	r0, r3
    9598:	beq	c3fc <bt_compidtostr@@Base+0x43cc>
    959c:	bhi	95c0 <bt_compidtostr@@Base+0x1590>
    95a0:	sub	r3, r3, #2
    95a4:	cmp	r0, r3
    95a8:	beq	c3e4 <bt_compidtostr@@Base+0x43b4>
    95ac:	cmp	r0, #432	; 0x1b0
    95b0:	bcs	c3f0 <bt_compidtostr@@Base+0x43c0>
    95b4:	ldr	r0, [pc, #-1500]	; 8fe0 <bt_compidtostr@@Base+0xfb0>
    95b8:	add	r0, pc, r0
    95bc:	bx	lr
    95c0:	ldr	r3, [pc, #-1508]	; 8fe4 <bt_compidtostr@@Base+0xfb4>
    95c4:	cmp	r0, r3
    95c8:	beq	c408 <bt_compidtostr@@Base+0x43d8>
    95cc:	cmp	r0, #436	; 0x1b4
    95d0:	bcs	c414 <bt_compidtostr@@Base+0x43e4>
    95d4:	ldr	r0, [pc, #-1524]	; 8fe8 <bt_compidtostr@@Base+0xfb8>
    95d8:	add	r0, pc, r0
    95dc:	bx	lr
    95e0:	sub	r3, r3, #4
    95e4:	cmp	r0, r3
    95e8:	beq	c444 <bt_compidtostr@@Base+0x4414>
    95ec:	bhi	9610 <bt_compidtostr@@Base+0x15e0>
    95f0:	sub	r3, r3, #2
    95f4:	cmp	r0, r3
    95f8:	beq	c42c <bt_compidtostr@@Base+0x43fc>
    95fc:	cmp	r0, #440	; 0x1b8
    9600:	bcs	c438 <bt_compidtostr@@Base+0x4408>
    9604:	ldr	r0, [pc, #-1568]	; 8fec <bt_compidtostr@@Base+0xfbc>
    9608:	add	r0, pc, r0
    960c:	bx	lr
    9610:	ldr	r3, [pc, #-1576]	; 8ff0 <bt_compidtostr@@Base+0xfc0>
    9614:	cmp	r0, r3
    9618:	beq	c450 <bt_compidtostr@@Base+0x4420>
    961c:	cmp	r0, #444	; 0x1bc
    9620:	bcs	c45c <bt_compidtostr@@Base+0x442c>
    9624:	ldr	r0, [pc, #-1592]	; 8ff4 <bt_compidtostr@@Base+0xfc4>
    9628:	add	r0, pc, r0
    962c:	bx	lr
    9630:	sub	r3, r3, #2
    9634:	cmp	r0, r3
    9638:	beq	c474 <bt_compidtostr@@Base+0x4444>
    963c:	cmp	r0, #448	; 0x1c0
    9640:	bcs	c480 <bt_compidtostr@@Base+0x4450>
    9644:	ldr	r0, [pc, #-1620]	; 8ff8 <bt_compidtostr@@Base+0xfc8>
    9648:	add	r0, pc, r0
    964c:	bx	lr
    9650:	ldr	r3, [pc, #-1628]	; 8ffc <bt_compidtostr@@Base+0xfcc>
    9654:	cmp	r0, r3
    9658:	beq	cc40 <bt_compidtostr@@Base+0x4c10>
    965c:	bls	96c0 <bt_compidtostr@@Base+0x1690>
    9660:	ldr	r3, [pc, #-1640]	; 9000 <bt_compidtostr@@Base+0xfd0>
    9664:	cmp	r0, r3
    9668:	beq	ccd0 <bt_compidtostr@@Base+0x4ca0>
    966c:	bls	97f0 <bt_compidtostr@@Base+0x17c0>
    9670:	ldr	r3, [pc, #-1652]	; 9004 <bt_compidtostr@@Base+0xfd4>
    9674:	cmp	r0, r3
    9678:	beq	cd18 <bt_compidtostr@@Base+0x4ce8>
    967c:	bls	9880 <bt_compidtostr@@Base+0x1850>
    9680:	ldr	r3, [pc, #-1664]	; 9008 <bt_compidtostr@@Base+0xfd8>
    9684:	cmp	r0, r3
    9688:	beq	cd3c <bt_compidtostr@@Base+0x4d0c>
    968c:	bls	98c0 <bt_compidtostr@@Base+0x1890>
    9690:	cmp	r0, #516	; 0x204
    9694:	beq	cd54 <bt_compidtostr@@Base+0x4d24>
    9698:	bcc	cd48 <bt_compidtostr@@Base+0x4d18>
    969c:	ldr	r3, [pc, #-1688]	; 900c <bt_compidtostr@@Base+0xfdc>
    96a0:	cmp	r0, r3
    96a4:	beq	cd60 <bt_compidtostr@@Base+0x4d30>
    96a8:	add	r3, r3, #1
    96ac:	cmp	r0, r3
    96b0:	bne	e330 <bt_compidtostr@@Base+0x6300>
    96b4:	ldr	r0, [pc, #-1708]	; 9010 <bt_compidtostr@@Base+0xfe0>
    96b8:	add	r0, pc, r0
    96bc:	bx	lr
    96c0:	sub	r3, r3, #16
    96c4:	cmp	r0, r3
    96c8:	beq	c54c <bt_compidtostr@@Base+0x451c>
    96cc:	bhi	9760 <bt_compidtostr@@Base+0x1730>
    96d0:	sub	r3, r3, #8
    96d4:	cmp	r0, r3
    96d8:	beq	c504 <bt_compidtostr@@Base+0x44d4>
    96dc:	bhi	9720 <bt_compidtostr@@Base+0x16f0>
    96e0:	sub	r3, r3, #4
    96e4:	cmp	r0, r3
    96e8:	beq	c4e0 <bt_compidtostr@@Base+0x44b0>
    96ec:	bhi	9708 <bt_compidtostr@@Base+0x16d8>
    96f0:	cmp	r0, #456	; 0x1c8
    96f4:	beq	c4c8 <bt_compidtostr@@Base+0x4498>
    96f8:	bhi	c4d4 <bt_compidtostr@@Base+0x44a4>
    96fc:	ldr	r0, [pc, #-1776]	; 9014 <bt_compidtostr@@Base+0xfe4>
    9700:	add	r0, pc, r0
    9704:	bx	lr
    9708:	cmp	r0, #460	; 0x1cc
    970c:	beq	c4ec <bt_compidtostr@@Base+0x44bc>
    9710:	bhi	c4f8 <bt_compidtostr@@Base+0x44c8>
    9714:	ldr	r0, [pc, #-1796]	; 9018 <bt_compidtostr@@Base+0xfe8>
    9718:	add	r0, pc, r0
    971c:	bx	lr
    9720:	ldr	r3, [pc, #-1804]	; 901c <bt_compidtostr@@Base+0xfec>
    9724:	cmp	r0, r3
    9728:	beq	c528 <bt_compidtostr@@Base+0x44f8>
    972c:	bhi	9748 <bt_compidtostr@@Base+0x1718>
    9730:	cmp	r0, #464	; 0x1d0
    9734:	beq	c510 <bt_compidtostr@@Base+0x44e0>
    9738:	bhi	c51c <bt_compidtostr@@Base+0x44ec>
    973c:	ldr	r0, [pc, #-1828]	; 9020 <bt_compidtostr@@Base+0xff0>
    9740:	add	r0, pc, r0
    9744:	bx	lr
    9748:	cmp	r0, #468	; 0x1d4
    974c:	beq	c534 <bt_compidtostr@@Base+0x4504>
    9750:	bhi	c540 <bt_compidtostr@@Base+0x4510>
    9754:	ldr	r0, [pc, #-1848]	; 9024 <bt_compidtostr@@Base+0xff4>
    9758:	add	r0, pc, r0
    975c:	bx	lr
    9760:	ldr	r3, [pc, #-1856]	; 9028 <bt_compidtostr@@Base+0xff8>
    9764:	cmp	r0, r3
    9768:	beq	c594 <bt_compidtostr@@Base+0x4564>
    976c:	bhi	97b0 <bt_compidtostr@@Base+0x1780>
    9770:	sub	r3, r3, #4
    9774:	cmp	r0, r3
    9778:	beq	c570 <bt_compidtostr@@Base+0x4540>
    977c:	bhi	9798 <bt_compidtostr@@Base+0x1768>
    9780:	cmp	r0, #472	; 0x1d8
    9784:	beq	c558 <bt_compidtostr@@Base+0x4528>
    9788:	bhi	c564 <bt_compidtostr@@Base+0x4534>
    978c:	ldr	r0, [pc, #-1896]	; 902c <bt_compidtostr@@Base+0xffc>
    9790:	add	r0, pc, r0
    9794:	bx	lr
    9798:	cmp	r0, #476	; 0x1dc
    979c:	beq	c57c <bt_compidtostr@@Base+0x454c>
    97a0:	bhi	c588 <bt_compidtostr@@Base+0x4558>
    97a4:	ldr	r0, [pc, #-1916]	; 9030 <bt_compidtostr@@Base+0x1000>
    97a8:	add	r0, pc, r0
    97ac:	bx	lr
    97b0:	ldr	r3, [pc, #-1924]	; 9034 <bt_compidtostr@@Base+0x1004>
    97b4:	cmp	r0, r3
    97b8:	beq	cc1c <bt_compidtostr@@Base+0x4bec>
    97bc:	bhi	97d8 <bt_compidtostr@@Base+0x17a8>
    97c0:	cmp	r0, #480	; 0x1e0
    97c4:	beq	c5a0 <bt_compidtostr@@Base+0x4570>
    97c8:	bhi	cc10 <bt_compidtostr@@Base+0x4be0>
    97cc:	ldr	r0, [pc, #-1948]	; 9038 <bt_compidtostr@@Base+0x1008>
    97d0:	add	r0, pc, r0
    97d4:	bx	lr
    97d8:	cmp	r0, #484	; 0x1e4
    97dc:	beq	cc28 <bt_compidtostr@@Base+0x4bf8>
    97e0:	bhi	cc34 <bt_compidtostr@@Base+0x4c04>
    97e4:	ldr	r0, [pc, #-1968]	; 903c <bt_compidtostr@@Base+0x100c>
    97e8:	add	r0, pc, r0
    97ec:	bx	lr
    97f0:	sub	r3, r3, #8
    97f4:	cmp	r0, r3
    97f8:	beq	cc88 <bt_compidtostr@@Base+0x4c58>
    97fc:	bhi	9840 <bt_compidtostr@@Base+0x1810>
    9800:	sub	r3, r3, #4
    9804:	cmp	r0, r3
    9808:	beq	cc64 <bt_compidtostr@@Base+0x4c34>
    980c:	bhi	9828 <bt_compidtostr@@Base+0x17f8>
    9810:	cmp	r0, #488	; 0x1e8
    9814:	beq	cc4c <bt_compidtostr@@Base+0x4c1c>
    9818:	bhi	cc58 <bt_compidtostr@@Base+0x4c28>
    981c:	ldr	r0, [pc, #-2020]	; 9040 <bt_compidtostr@@Base+0x1010>
    9820:	add	r0, pc, r0
    9824:	bx	lr
    9828:	cmp	r0, #492	; 0x1ec
    982c:	beq	cc70 <bt_compidtostr@@Base+0x4c40>
    9830:	bhi	cc7c <bt_compidtostr@@Base+0x4c4c>
    9834:	ldr	r0, [pc, #-2040]	; 9044 <bt_compidtostr@@Base+0x1014>
    9838:	add	r0, pc, r0
    983c:	bx	lr
    9840:	ldr	r3, [pc, #-2048]	; 9048 <bt_compidtostr@@Base+0x1018>
    9844:	cmp	r0, r3
    9848:	beq	ccac <bt_compidtostr@@Base+0x4c7c>
    984c:	bhi	9868 <bt_compidtostr@@Base+0x1838>
    9850:	cmp	r0, #496	; 0x1f0
    9854:	beq	cc94 <bt_compidtostr@@Base+0x4c64>
    9858:	bhi	cca0 <bt_compidtostr@@Base+0x4c70>
    985c:	ldr	r0, [pc, #-2072]	; 904c <bt_compidtostr@@Base+0x101c>
    9860:	add	r0, pc, r0
    9864:	bx	lr
    9868:	cmp	r0, #500	; 0x1f4
    986c:	beq	ccb8 <bt_compidtostr@@Base+0x4c88>
    9870:	bhi	ccc4 <bt_compidtostr@@Base+0x4c94>
    9874:	ldr	r0, [pc, #-2092]	; 9050 <bt_compidtostr@@Base+0x1020>
    9878:	add	r0, pc, r0
    987c:	bx	lr
    9880:	sub	r3, r3, #4
    9884:	cmp	r0, r3
    9888:	beq	ccf4 <bt_compidtostr@@Base+0x4cc4>
    988c:	bhi	98a8 <bt_compidtostr@@Base+0x1878>
    9890:	cmp	r0, #504	; 0x1f8
    9894:	beq	ccdc <bt_compidtostr@@Base+0x4cac>
    9898:	bhi	cce8 <bt_compidtostr@@Base+0x4cb8>
    989c:	ldr	r0, [pc, #-2128]	; 9054 <bt_compidtostr@@Base+0x1024>
    98a0:	add	r0, pc, r0
    98a4:	bx	lr
    98a8:	cmp	r0, #508	; 0x1fc
    98ac:	beq	cd00 <bt_compidtostr@@Base+0x4cd0>
    98b0:	bhi	cd0c <bt_compidtostr@@Base+0x4cdc>
    98b4:	ldr	r0, [pc, #-2148]	; 9058 <bt_compidtostr@@Base+0x1028>
    98b8:	add	r0, pc, r0
    98bc:	bx	lr
    98c0:	cmp	r0, #512	; 0x200
    98c4:	beq	cd24 <bt_compidtostr@@Base+0x4cf4>
    98c8:	bhi	cd30 <bt_compidtostr@@Base+0x4d00>
    98cc:	ldr	r0, [pc, #-2168]	; 905c <bt_compidtostr@@Base+0x102c>
    98d0:	add	r0, pc, r0
    98d4:	bx	lr
    98d8:	ldr	r3, [pc, #-2176]	; 9060 <bt_compidtostr@@Base+0x1030>
    98dc:	cmp	r0, r3
    98e0:	beq	d69c <bt_compidtostr@@Base+0x566c>
    98e4:	cmp	r0, #780	; 0x30c
    98e8:	bcs	a430 <bt_compidtostr@@Base+0x2400>
    98ec:	sub	r3, r3, #130	; 0x82
    98f0:	cmp	r0, r3
    98f4:	beq	d204 <bt_compidtostr@@Base+0x51d4>
    98f8:	bhi	9e98 <bt_compidtostr@@Base+0x1e68>
    98fc:	cmp	r0, #584	; 0x248
    9900:	beq	cfb8 <bt_compidtostr@@Base+0x4f88>
    9904:	bhi	9c10 <bt_compidtostr@@Base+0x1be0>
    9908:	sub	r3, r3, #98	; 0x62
    990c:	cmp	r0, r3
    9910:	beq	ce8c <bt_compidtostr@@Base+0x4e5c>
    9914:	cmp	r0, #552	; 0x228
    9918:	bcc	9990 <bt_compidtostr@@Base+0x1960>
    991c:	ldr	r3, [pc, #-2240]	; 9064 <bt_compidtostr@@Base+0x1034>
    9920:	cmp	r0, r3
    9924:	beq	cf1c <bt_compidtostr@@Base+0x4eec>
    9928:	cmp	r0, #568	; 0x238
    992c:	bcc	9afc <bt_compidtostr@@Base+0x1acc>
    9930:	ldr	r3, [pc, #-2256]	; 9068 <bt_compidtostr@@Base+0x1038>
    9934:	cmp	r0, r3
    9938:	beq	cf64 <bt_compidtostr@@Base+0x4f34>
    993c:	cmp	r0, #576	; 0x240
    9940:	bcc	9ba8 <bt_compidtostr@@Base+0x1b78>
    9944:	ldr	r3, [pc, #-2272]	; 906c <bt_compidtostr@@Base+0x103c>
    9948:	cmp	r0, r3
    994c:	beq	cf88 <bt_compidtostr@@Base+0x4f58>
    9950:	cmp	r0, #580	; 0x244
    9954:	bcc	9bf4 <bt_compidtostr@@Base+0x1bc4>
    9958:	ldr	r3, [pc, #-2288]	; 9070 <bt_compidtostr@@Base+0x1040>
    995c:	cmp	r0, r3
    9960:	beq	cfa0 <bt_compidtostr@@Base+0x4f70>
    9964:	cmp	r0, #580	; 0x244
    9968:	bls	cf94 <bt_compidtostr@@Base+0x4f64>
    996c:	add	r3, r3, #1
    9970:	cmp	r0, r3
    9974:	beq	cfac <bt_compidtostr@@Base+0x4f7c>
    9978:	add	r3, r3, #1
    997c:	cmp	r0, r3
    9980:	bne	e330 <bt_compidtostr@@Base+0x6300>
    9984:	ldr	r0, [pc, #-2328]	; 9074 <bt_compidtostr@@Base+0x1044>
    9988:	add	r0, pc, r0
    998c:	bx	lr
    9990:	sub	r3, r3, #16
    9994:	cmp	r0, r3
    9998:	beq	cdfc <bt_compidtostr@@Base+0x4dcc>
    999c:	cmp	r0, #536	; 0x218
    99a0:	bcs	9a50 <bt_compidtostr@@Base+0x1a20>
    99a4:	sub	r3, r3, #8
    99a8:	cmp	r0, r3
    99ac:	beq	cdb4 <bt_compidtostr@@Base+0x4d84>
    99b0:	cmp	r0, #528	; 0x210
    99b4:	bcs	9a04 <bt_compidtostr@@Base+0x19d4>
    99b8:	sub	r3, r3, #4
    99bc:	cmp	r0, r3
    99c0:	beq	cd90 <bt_compidtostr@@Base+0x4d60>
    99c4:	cmp	r0, #524	; 0x20c
    99c8:	bcs	99e8 <bt_compidtostr@@Base+0x19b8>
    99cc:	sub	r3, r3, #2
    99d0:	cmp	r0, r3
    99d4:	beq	cd78 <bt_compidtostr@@Base+0x4d48>
    99d8:	bhi	cd84 <bt_compidtostr@@Base+0x4d54>
    99dc:	ldr	r0, [pc, #-2412]	; 9078 <bt_compidtostr@@Base+0x1048>
    99e0:	add	r0, pc, r0
    99e4:	bx	lr
    99e8:	ldr	r3, [pc, #-2420]	; 907c <bt_compidtostr@@Base+0x104c>
    99ec:	cmp	r0, r3
    99f0:	beq	cd9c <bt_compidtostr@@Base+0x4d6c>
    99f4:	bhi	cda8 <bt_compidtostr@@Base+0x4d78>
    99f8:	ldr	r0, [pc, #-2432]	; 9080 <bt_compidtostr@@Base+0x1050>
    99fc:	add	r0, pc, r0
    9a00:	bx	lr
    9a04:	ldr	r3, [pc, #-2440]	; 9084 <bt_compidtostr@@Base+0x1054>
    9a08:	cmp	r0, r3
    9a0c:	beq	cdd8 <bt_compidtostr@@Base+0x4da8>
    9a10:	cmp	r0, #532	; 0x214
    9a14:	bcs	9a34 <bt_compidtostr@@Base+0x1a04>
    9a18:	sub	r3, r3, #2
    9a1c:	cmp	r0, r3
    9a20:	beq	cdc0 <bt_compidtostr@@Base+0x4d90>
    9a24:	bhi	cdcc <bt_compidtostr@@Base+0x4d9c>
    9a28:	ldr	r0, [pc, #-2472]	; 9088 <bt_compidtostr@@Base+0x1058>
    9a2c:	add	r0, pc, r0
    9a30:	bx	lr
    9a34:	ldr	r3, [pc, #-2480]	; 908c <bt_compidtostr@@Base+0x105c>
    9a38:	cmp	r0, r3
    9a3c:	beq	cde4 <bt_compidtostr@@Base+0x4db4>
    9a40:	bhi	cdf0 <bt_compidtostr@@Base+0x4dc0>
    9a44:	ldr	r0, [pc, #-2492]	; 9090 <bt_compidtostr@@Base+0x1060>
    9a48:	add	r0, pc, r0
    9a4c:	bx	lr
    9a50:	ldr	r3, [pc, #-2500]	; 9094 <bt_compidtostr@@Base+0x1064>
    9a54:	cmp	r0, r3
    9a58:	beq	ce44 <bt_compidtostr@@Base+0x4e14>
    9a5c:	cmp	r0, #544	; 0x220
    9a60:	bcs	9ab0 <bt_compidtostr@@Base+0x1a80>
    9a64:	sub	r3, r3, #4
    9a68:	cmp	r0, r3
    9a6c:	beq	ce20 <bt_compidtostr@@Base+0x4df0>
    9a70:	cmp	r0, #540	; 0x21c
    9a74:	bcs	9a94 <bt_compidtostr@@Base+0x1a64>
    9a78:	sub	r3, r3, #2
    9a7c:	cmp	r0, r3
    9a80:	beq	ce08 <bt_compidtostr@@Base+0x4dd8>
    9a84:	bhi	ce14 <bt_compidtostr@@Base+0x4de4>
    9a88:	ldr	r0, [pc, #-2552]	; 9098 <bt_compidtostr@@Base+0x1068>
    9a8c:	add	r0, pc, r0
    9a90:	bx	lr
    9a94:	ldr	r3, [pc, #-2560]	; 909c <bt_compidtostr@@Base+0x106c>
    9a98:	cmp	r0, r3
    9a9c:	beq	ce2c <bt_compidtostr@@Base+0x4dfc>
    9aa0:	bhi	ce38 <bt_compidtostr@@Base+0x4e08>
    9aa4:	ldr	r0, [pc, #-2572]	; 90a0 <bt_compidtostr@@Base+0x1070>
    9aa8:	add	r0, pc, r0
    9aac:	bx	lr
    9ab0:	ldr	r3, [pc, #-2580]	; 90a4 <bt_compidtostr@@Base+0x1074>
    9ab4:	cmp	r0, r3
    9ab8:	beq	ce68 <bt_compidtostr@@Base+0x4e38>
    9abc:	cmp	r0, #548	; 0x224
    9ac0:	bcs	9ae0 <bt_compidtostr@@Base+0x1ab0>
    9ac4:	sub	r3, r3, #2
    9ac8:	cmp	r0, r3
    9acc:	beq	ce50 <bt_compidtostr@@Base+0x4e20>
    9ad0:	bhi	ce5c <bt_compidtostr@@Base+0x4e2c>
    9ad4:	ldr	r0, [pc, #-2612]	; 90a8 <bt_compidtostr@@Base+0x1078>
    9ad8:	add	r0, pc, r0
    9adc:	bx	lr
    9ae0:	ldr	r3, [pc, #-2620]	; 90ac <bt_compidtostr@@Base+0x107c>
    9ae4:	cmp	r0, r3
    9ae8:	beq	ce74 <bt_compidtostr@@Base+0x4e44>
    9aec:	bhi	ce80 <bt_compidtostr@@Base+0x4e50>
    9af0:	ldr	r0, [pc, #-2632]	; 90b0 <bt_compidtostr@@Base+0x1080>
    9af4:	add	r0, pc, r0
    9af8:	bx	lr
    9afc:	sub	r3, r3, #8
    9b00:	cmp	r0, r3
    9b04:	beq	ced4 <bt_compidtostr@@Base+0x4ea4>
    9b08:	cmp	r0, #560	; 0x230
    9b0c:	bcs	9b5c <bt_compidtostr@@Base+0x1b2c>
    9b10:	sub	r3, r3, #4
    9b14:	cmp	r0, r3
    9b18:	beq	ceb0 <bt_compidtostr@@Base+0x4e80>
    9b1c:	cmp	r0, #556	; 0x22c
    9b20:	bcs	9b40 <bt_compidtostr@@Base+0x1b10>
    9b24:	sub	r3, r3, #2
    9b28:	cmp	r0, r3
    9b2c:	beq	ce98 <bt_compidtostr@@Base+0x4e68>
    9b30:	bhi	cea4 <bt_compidtostr@@Base+0x4e74>
    9b34:	ldr	r0, [pc, #-2696]	; 90b4 <bt_compidtostr@@Base+0x1084>
    9b38:	add	r0, pc, r0
    9b3c:	bx	lr
    9b40:	ldr	r3, [pc, #-2704]	; 90b8 <bt_compidtostr@@Base+0x1088>
    9b44:	cmp	r0, r3
    9b48:	beq	cebc <bt_compidtostr@@Base+0x4e8c>
    9b4c:	bhi	cec8 <bt_compidtostr@@Base+0x4e98>
    9b50:	ldr	r0, [pc, #-2716]	; 90bc <bt_compidtostr@@Base+0x108c>
    9b54:	add	r0, pc, r0
    9b58:	bx	lr
    9b5c:	ldr	r3, [pc, #-2724]	; 90c0 <bt_compidtostr@@Base+0x1090>
    9b60:	cmp	r0, r3
    9b64:	beq	cef8 <bt_compidtostr@@Base+0x4ec8>
    9b68:	cmp	r0, #564	; 0x234
    9b6c:	bcs	9b8c <bt_compidtostr@@Base+0x1b5c>
    9b70:	sub	r3, r3, #2
    9b74:	cmp	r0, r3
    9b78:	beq	cee0 <bt_compidtostr@@Base+0x4eb0>
    9b7c:	bhi	ceec <bt_compidtostr@@Base+0x4ebc>
    9b80:	ldr	r0, [pc, #-2756]	; 90c4 <bt_compidtostr@@Base+0x1094>
    9b84:	add	r0, pc, r0
    9b88:	bx	lr
    9b8c:	ldr	r3, [pc, #-2764]	; 90c8 <bt_compidtostr@@Base+0x1098>
    9b90:	cmp	r0, r3
    9b94:	beq	cf04 <bt_compidtostr@@Base+0x4ed4>
    9b98:	bhi	cf10 <bt_compidtostr@@Base+0x4ee0>
    9b9c:	ldr	r0, [pc, #-2776]	; 90cc <bt_compidtostr@@Base+0x109c>
    9ba0:	add	r0, pc, r0
    9ba4:	bx	lr
    9ba8:	sub	r3, r3, #4
    9bac:	cmp	r0, r3
    9bb0:	beq	cf40 <bt_compidtostr@@Base+0x4f10>
    9bb4:	cmp	r0, #572	; 0x23c
    9bb8:	bcs	9bd8 <bt_compidtostr@@Base+0x1ba8>
    9bbc:	sub	r3, r3, #2
    9bc0:	cmp	r0, r3
    9bc4:	beq	cf28 <bt_compidtostr@@Base+0x4ef8>
    9bc8:	bhi	cf34 <bt_compidtostr@@Base+0x4f04>
    9bcc:	ldr	r0, [pc, #-2820]	; 90d0 <bt_compidtostr@@Base+0x10a0>
    9bd0:	add	r0, pc, r0
    9bd4:	bx	lr
    9bd8:	ldr	r3, [pc, #-2828]	; 90d4 <bt_compidtostr@@Base+0x10a4>
    9bdc:	cmp	r0, r3
    9be0:	beq	cf4c <bt_compidtostr@@Base+0x4f1c>
    9be4:	bhi	cf58 <bt_compidtostr@@Base+0x4f28>
    9be8:	ldr	r0, [pc, #-2840]	; 90d8 <bt_compidtostr@@Base+0x10a8>
    9bec:	add	r0, pc, r0
    9bf0:	bx	lr
    9bf4:	sub	r3, r3, #2
    9bf8:	cmp	r0, r3
    9bfc:	beq	cf70 <bt_compidtostr@@Base+0x4f40>
    9c00:	bhi	cf7c <bt_compidtostr@@Base+0x4f4c>
    9c04:	ldr	r0, [pc, #-2864]	; 90dc <bt_compidtostr@@Base+0x10ac>
    9c08:	add	r0, pc, r0
    9c0c:	bx	lr
    9c10:	cmp	r0, #616	; 0x268
    9c14:	beq	d0d8 <bt_compidtostr@@Base+0x50a8>
    9c18:	bls	9c70 <bt_compidtostr@@Base+0x1c40>
    9c1c:	cmp	r0, #632	; 0x278
    9c20:	beq	d168 <bt_compidtostr@@Base+0x5138>
    9c24:	bls	9da4 <bt_compidtostr@@Base+0x1d74>
    9c28:	cmp	r0, #640	; 0x280
    9c2c:	beq	d1b0 <bt_compidtostr@@Base+0x5180>
    9c30:	bls	9e38 <bt_compidtostr@@Base+0x1e08>
    9c34:	cmp	r0, #644	; 0x284
    9c38:	beq	d1d4 <bt_compidtostr@@Base+0x51a4>
    9c3c:	bls	9e7c <bt_compidtostr@@Base+0x1e4c>
    9c40:	ldr	r3, [pc, #-2920]	; 90e0 <bt_compidtostr@@Base+0x10b0>
    9c44:	cmp	r0, r3
    9c48:	beq	d1ec <bt_compidtostr@@Base+0x51bc>
    9c4c:	bcc	d1e0 <bt_compidtostr@@Base+0x51b0>
    9c50:	add	r3, r3, #1
    9c54:	cmp	r0, r3
    9c58:	beq	d1f8 <bt_compidtostr@@Base+0x51c8>
    9c5c:	cmp	r0, #648	; 0x288
    9c60:	bne	e330 <bt_compidtostr@@Base+0x6300>
    9c64:	ldr	r0, [pc, #-2952]	; 90e4 <bt_compidtostr@@Base+0x10b4>
    9c68:	add	r0, pc, r0
    9c6c:	bx	lr
    9c70:	cmp	r0, #600	; 0x258
    9c74:	beq	d048 <bt_compidtostr@@Base+0x5018>
    9c78:	bhi	9d10 <bt_compidtostr@@Base+0x1ce0>
    9c7c:	cmp	r0, #592	; 0x250
    9c80:	beq	d000 <bt_compidtostr@@Base+0x4fd0>
    9c84:	bhi	9ccc <bt_compidtostr@@Base+0x1c9c>
    9c88:	cmp	r0, #588	; 0x24c
    9c8c:	beq	cfdc <bt_compidtostr@@Base+0x4fac>
    9c90:	bhi	9cb0 <bt_compidtostr@@Base+0x1c80>
    9c94:	ldr	r3, [pc, #-2996]	; 90e8 <bt_compidtostr@@Base+0x10b8>
    9c98:	cmp	r0, r3
    9c9c:	beq	cfc4 <bt_compidtostr@@Base+0x4f94>
    9ca0:	bhi	cfd0 <bt_compidtostr@@Base+0x4fa0>
    9ca4:	ldr	r0, [pc, #-3008]	; 90ec <bt_compidtostr@@Base+0x10bc>
    9ca8:	add	r0, pc, r0
    9cac:	bx	lr
    9cb0:	ldr	r3, [pc, #-3016]	; 90f0 <bt_compidtostr@@Base+0x10c0>
    9cb4:	cmp	r0, r3
    9cb8:	beq	cfe8 <bt_compidtostr@@Base+0x4fb8>
    9cbc:	bhi	cff4 <bt_compidtostr@@Base+0x4fc4>
    9cc0:	ldr	r0, [pc, #-3028]	; 90f4 <bt_compidtostr@@Base+0x10c4>
    9cc4:	add	r0, pc, r0
    9cc8:	bx	lr
    9ccc:	cmp	r0, #596	; 0x254
    9cd0:	beq	d024 <bt_compidtostr@@Base+0x4ff4>
    9cd4:	bhi	9cf4 <bt_compidtostr@@Base+0x1cc4>
    9cd8:	ldr	r3, [pc, #-3048]	; 90f8 <bt_compidtostr@@Base+0x10c8>
    9cdc:	cmp	r0, r3
    9ce0:	beq	d00c <bt_compidtostr@@Base+0x4fdc>
    9ce4:	bhi	d018 <bt_compidtostr@@Base+0x4fe8>
    9ce8:	ldr	r0, [pc, #-3060]	; 90fc <bt_compidtostr@@Base+0x10cc>
    9cec:	add	r0, pc, r0
    9cf0:	bx	lr
    9cf4:	ldr	r3, [pc, #-3068]	; 9100 <bt_compidtostr@@Base+0x10d0>
    9cf8:	cmp	r0, r3
    9cfc:	beq	d030 <bt_compidtostr@@Base+0x5000>
    9d00:	bhi	d03c <bt_compidtostr@@Base+0x500c>
    9d04:	ldr	r0, [pc, #-3080]	; 9104 <bt_compidtostr@@Base+0x10d4>
    9d08:	add	r0, pc, r0
    9d0c:	bx	lr
    9d10:	cmp	r0, #608	; 0x260
    9d14:	beq	d090 <bt_compidtostr@@Base+0x5060>
    9d18:	bhi	9d60 <bt_compidtostr@@Base+0x1d30>
    9d1c:	cmp	r0, #604	; 0x25c
    9d20:	beq	d06c <bt_compidtostr@@Base+0x503c>
    9d24:	bhi	9d44 <bt_compidtostr@@Base+0x1d14>
    9d28:	ldr	r3, [pc, #-3112]	; 9108 <bt_compidtostr@@Base+0x10d8>
    9d2c:	cmp	r0, r3
    9d30:	beq	d054 <bt_compidtostr@@Base+0x5024>
    9d34:	bhi	d060 <bt_compidtostr@@Base+0x5030>
    9d38:	ldr	r0, [pc, #-3124]	; 910c <bt_compidtostr@@Base+0x10dc>
    9d3c:	add	r0, pc, r0
    9d40:	bx	lr
    9d44:	ldr	r3, [pc, #-3132]	; 9110 <bt_compidtostr@@Base+0x10e0>
    9d48:	cmp	r0, r3
    9d4c:	beq	d078 <bt_compidtostr@@Base+0x5048>
    9d50:	bhi	d084 <bt_compidtostr@@Base+0x5054>
    9d54:	ldr	r0, [pc, #-3144]	; 9114 <bt_compidtostr@@Base+0x10e4>
    9d58:	add	r0, pc, r0
    9d5c:	bx	lr
    9d60:	cmp	r0, #612	; 0x264
    9d64:	beq	d0b4 <bt_compidtostr@@Base+0x5084>
    9d68:	bhi	9d88 <bt_compidtostr@@Base+0x1d58>
    9d6c:	ldr	r3, [pc, #-3164]	; 9118 <bt_compidtostr@@Base+0x10e8>
    9d70:	cmp	r0, r3
    9d74:	beq	d09c <bt_compidtostr@@Base+0x506c>
    9d78:	bhi	d0a8 <bt_compidtostr@@Base+0x5078>
    9d7c:	ldr	r0, [pc, #-3176]	; 911c <bt_compidtostr@@Base+0x10ec>
    9d80:	add	r0, pc, r0
    9d84:	bx	lr
    9d88:	ldr	r3, [pc, #-3184]	; 9120 <bt_compidtostr@@Base+0x10f0>
    9d8c:	cmp	r0, r3
    9d90:	beq	d0c0 <bt_compidtostr@@Base+0x5090>
    9d94:	bhi	d0cc <bt_compidtostr@@Base+0x509c>
    9d98:	ldr	r0, [pc, #-3196]	; 9124 <bt_compidtostr@@Base+0x10f4>
    9d9c:	add	r0, pc, r0
    9da0:	bx	lr
    9da4:	cmp	r0, #624	; 0x270
    9da8:	beq	d120 <bt_compidtostr@@Base+0x50f0>
    9dac:	bhi	9df4 <bt_compidtostr@@Base+0x1dc4>
    9db0:	cmp	r0, #620	; 0x26c
    9db4:	beq	d0fc <bt_compidtostr@@Base+0x50cc>
    9db8:	bhi	9dd8 <bt_compidtostr@@Base+0x1da8>
    9dbc:	ldr	r3, [pc, #-3228]	; 9128 <bt_compidtostr@@Base+0x10f8>
    9dc0:	cmp	r0, r3
    9dc4:	beq	d0e4 <bt_compidtostr@@Base+0x50b4>
    9dc8:	bhi	d0f0 <bt_compidtostr@@Base+0x50c0>
    9dcc:	ldr	r0, [pc, #-3240]	; 912c <bt_compidtostr@@Base+0x10fc>
    9dd0:	add	r0, pc, r0
    9dd4:	bx	lr
    9dd8:	ldr	r3, [pc, #-3248]	; 9130 <bt_compidtostr@@Base+0x1100>
    9ddc:	cmp	r0, r3
    9de0:	beq	d108 <bt_compidtostr@@Base+0x50d8>
    9de4:	bhi	d114 <bt_compidtostr@@Base+0x50e4>
    9de8:	ldr	r0, [pc, #-3260]	; 9134 <bt_compidtostr@@Base+0x1104>
    9dec:	add	r0, pc, r0
    9df0:	bx	lr
    9df4:	cmp	r0, #628	; 0x274
    9df8:	beq	d144 <bt_compidtostr@@Base+0x5114>
    9dfc:	bhi	9e1c <bt_compidtostr@@Base+0x1dec>
    9e00:	ldr	r3, [pc, #-3280]	; 9138 <bt_compidtostr@@Base+0x1108>
    9e04:	cmp	r0, r3
    9e08:	beq	d12c <bt_compidtostr@@Base+0x50fc>
    9e0c:	bhi	d138 <bt_compidtostr@@Base+0x5108>
    9e10:	ldr	r0, [pc, #-3292]	; 913c <bt_compidtostr@@Base+0x110c>
    9e14:	add	r0, pc, r0
    9e18:	bx	lr
    9e1c:	ldr	r3, [pc, #-3300]	; 9140 <bt_compidtostr@@Base+0x1110>
    9e20:	cmp	r0, r3
    9e24:	beq	d150 <bt_compidtostr@@Base+0x5120>
    9e28:	bhi	d15c <bt_compidtostr@@Base+0x512c>
    9e2c:	ldr	r0, [pc, #-3312]	; 9144 <bt_compidtostr@@Base+0x1114>
    9e30:	add	r0, pc, r0
    9e34:	bx	lr
    9e38:	cmp	r0, #636	; 0x27c
    9e3c:	beq	d18c <bt_compidtostr@@Base+0x515c>
    9e40:	bhi	9e60 <bt_compidtostr@@Base+0x1e30>
    9e44:	ldr	r3, [pc, #-3332]	; 9148 <bt_compidtostr@@Base+0x1118>
    9e48:	cmp	r0, r3
    9e4c:	beq	d174 <bt_compidtostr@@Base+0x5144>
    9e50:	bhi	d180 <bt_compidtostr@@Base+0x5150>
    9e54:	ldr	r0, [pc, #-3344]	; 914c <bt_compidtostr@@Base+0x111c>
    9e58:	add	r0, pc, r0
    9e5c:	bx	lr
    9e60:	ldr	r3, [pc, #-3352]	; 9150 <bt_compidtostr@@Base+0x1120>
    9e64:	cmp	r0, r3
    9e68:	beq	d198 <bt_compidtostr@@Base+0x5168>
    9e6c:	bhi	d1a4 <bt_compidtostr@@Base+0x5174>
    9e70:	ldr	r0, [pc, #-3364]	; 9154 <bt_compidtostr@@Base+0x1124>
    9e74:	add	r0, pc, r0
    9e78:	bx	lr
    9e7c:	ldr	r3, [pc, #-3372]	; 9158 <bt_compidtostr@@Base+0x1128>
    9e80:	cmp	r0, r3
    9e84:	beq	d1bc <bt_compidtostr@@Base+0x518c>
    9e88:	bhi	d1c8 <bt_compidtostr@@Base+0x5198>
    9e8c:	ldr	r0, [pc, #-3384]	; 915c <bt_compidtostr@@Base+0x112c>
    9e90:	add	r0, pc, r0
    9e94:	bx	lr
    9e98:	ldr	r3, [pc, #-3392]	; 9160 <bt_compidtostr@@Base+0x1130>
    9e9c:	cmp	r0, r3
    9ea0:	beq	d450 <bt_compidtostr@@Base+0x5420>
    9ea4:	bhi	a1a8 <bt_compidtostr@@Base+0x2178>
    9ea8:	sub	r3, r3, #33	; 0x21
    9eac:	cmp	r0, r3
    9eb0:	beq	d324 <bt_compidtostr@@Base+0x52f4>
    9eb4:	bls	9f18 <bt_compidtostr@@Base+0x1ee8>
    9eb8:	ldr	r3, [pc, #-3420]	; 9164 <bt_compidtostr@@Base+0x1134>
    9ebc:	cmp	r0, r3
    9ec0:	beq	d3b4 <bt_compidtostr@@Base+0x5384>
    9ec4:	bls	a088 <bt_compidtostr@@Base+0x2058>
    9ec8:	ldr	r3, [pc, #-3432]	; 9168 <bt_compidtostr@@Base+0x1138>
    9ecc:	cmp	r0, r3
    9ed0:	beq	d3fc <bt_compidtostr@@Base+0x53cc>
    9ed4:	bls	a138 <bt_compidtostr@@Base+0x2108>
    9ed8:	ldr	r3, [pc, #-3444]	; 916c <bt_compidtostr@@Base+0x113c>
    9edc:	cmp	r0, r3
    9ee0:	beq	d420 <bt_compidtostr@@Base+0x53f0>
    9ee4:	bls	a188 <bt_compidtostr@@Base+0x2158>
    9ee8:	ldr	r3, [pc, #-3456]	; 9170 <bt_compidtostr@@Base+0x1140>
    9eec:	cmp	r0, r3
    9ef0:	beq	d438 <bt_compidtostr@@Base+0x5408>
    9ef4:	bcc	d42c <bt_compidtostr@@Base+0x53fc>
    9ef8:	cmp	r0, #712	; 0x2c8
    9efc:	beq	d444 <bt_compidtostr@@Base+0x5414>
    9f00:	add	r3, r3, #2
    9f04:	cmp	r0, r3
    9f08:	bne	e330 <bt_compidtostr@@Base+0x6300>
    9f0c:	ldr	r0, [pc, #3432]	; ac7c <bt_compidtostr@@Base+0x2c4c>
    9f10:	add	r0, pc, r0
    9f14:	bx	lr
    9f18:	sub	r3, r3, #16
    9f1c:	cmp	r0, r3
    9f20:	beq	d294 <bt_compidtostr@@Base+0x5264>
    9f24:	bhi	9fd8 <bt_compidtostr@@Base+0x1fa8>
    9f28:	sub	r3, r3, #8
    9f2c:	cmp	r0, r3
    9f30:	beq	d24c <bt_compidtostr@@Base+0x521c>
    9f34:	bhi	9f88 <bt_compidtostr@@Base+0x1f58>
    9f38:	sub	r3, r3, #4
    9f3c:	cmp	r0, r3
    9f40:	beq	d228 <bt_compidtostr@@Base+0x51f8>
    9f44:	bhi	9f68 <bt_compidtostr@@Base+0x1f38>
    9f48:	sub	r3, r3, #2
    9f4c:	cmp	r0, r3
    9f50:	beq	d210 <bt_compidtostr@@Base+0x51e0>
    9f54:	cmp	r0, #652	; 0x28c
    9f58:	bcs	d21c <bt_compidtostr@@Base+0x51ec>
    9f5c:	ldr	r0, [pc, #3356]	; ac80 <bt_compidtostr@@Base+0x2c50>
    9f60:	add	r0, pc, r0
    9f64:	bx	lr
    9f68:	ldr	r3, [pc, #3348]	; ac84 <bt_compidtostr@@Base+0x2c54>
    9f6c:	cmp	r0, r3
    9f70:	beq	d234 <bt_compidtostr@@Base+0x5204>
    9f74:	cmp	r0, #656	; 0x290
    9f78:	bcs	d240 <bt_compidtostr@@Base+0x5210>
    9f7c:	ldr	r0, [pc, #3332]	; ac88 <bt_compidtostr@@Base+0x2c58>
    9f80:	add	r0, pc, r0
    9f84:	bx	lr
    9f88:	ldr	r3, [pc, #3324]	; ac8c <bt_compidtostr@@Base+0x2c5c>
    9f8c:	cmp	r0, r3
    9f90:	beq	d270 <bt_compidtostr@@Base+0x5240>
    9f94:	bhi	9fb8 <bt_compidtostr@@Base+0x1f88>
    9f98:	sub	r3, r3, #2
    9f9c:	cmp	r0, r3
    9fa0:	beq	d258 <bt_compidtostr@@Base+0x5228>
    9fa4:	cmp	r0, #660	; 0x294
    9fa8:	bcs	d264 <bt_compidtostr@@Base+0x5234>
    9fac:	ldr	r0, [pc, #3292]	; ac90 <bt_compidtostr@@Base+0x2c60>
    9fb0:	add	r0, pc, r0
    9fb4:	bx	lr
    9fb8:	ldr	r3, [pc, #3284]	; ac94 <bt_compidtostr@@Base+0x2c64>
    9fbc:	cmp	r0, r3
    9fc0:	beq	d27c <bt_compidtostr@@Base+0x524c>
    9fc4:	cmp	r0, #664	; 0x298
    9fc8:	bcs	d288 <bt_compidtostr@@Base+0x5258>
    9fcc:	ldr	r0, [pc, #3268]	; ac98 <bt_compidtostr@@Base+0x2c68>
    9fd0:	add	r0, pc, r0
    9fd4:	bx	lr
    9fd8:	ldr	r3, [pc, #3260]	; ac9c <bt_compidtostr@@Base+0x2c6c>
    9fdc:	cmp	r0, r3
    9fe0:	beq	d2dc <bt_compidtostr@@Base+0x52ac>
    9fe4:	bhi	a038 <bt_compidtostr@@Base+0x2008>
    9fe8:	sub	r3, r3, #4
    9fec:	cmp	r0, r3
    9ff0:	beq	d2b8 <bt_compidtostr@@Base+0x5288>
    9ff4:	bhi	a018 <bt_compidtostr@@Base+0x1fe8>
    9ff8:	sub	r3, r3, #2
    9ffc:	cmp	r0, r3
    a000:	beq	d2a0 <bt_compidtostr@@Base+0x5270>
    a004:	cmp	r0, #668	; 0x29c
    a008:	bcs	d2ac <bt_compidtostr@@Base+0x527c>
    a00c:	ldr	r0, [pc, #3212]	; aca0 <bt_compidtostr@@Base+0x2c70>
    a010:	add	r0, pc, r0
    a014:	bx	lr
    a018:	ldr	r3, [pc, #3204]	; aca4 <bt_compidtostr@@Base+0x2c74>
    a01c:	cmp	r0, r3
    a020:	beq	d2c4 <bt_compidtostr@@Base+0x5294>
    a024:	cmp	r0, #672	; 0x2a0
    a028:	bcs	d2d0 <bt_compidtostr@@Base+0x52a0>
    a02c:	ldr	r0, [pc, #3188]	; aca8 <bt_compidtostr@@Base+0x2c78>
    a030:	add	r0, pc, r0
    a034:	bx	lr
    a038:	ldr	r3, [pc, #3180]	; acac <bt_compidtostr@@Base+0x2c7c>
    a03c:	cmp	r0, r3
    a040:	beq	d300 <bt_compidtostr@@Base+0x52d0>
    a044:	bhi	a068 <bt_compidtostr@@Base+0x2038>
    a048:	sub	r3, r3, #2
    a04c:	cmp	r0, r3
    a050:	beq	d2e8 <bt_compidtostr@@Base+0x52b8>
    a054:	cmp	r0, #676	; 0x2a4
    a058:	bcs	d2f4 <bt_compidtostr@@Base+0x52c4>
    a05c:	ldr	r0, [pc, #3148]	; acb0 <bt_compidtostr@@Base+0x2c80>
    a060:	add	r0, pc, r0
    a064:	bx	lr
    a068:	ldr	r3, [pc, #3140]	; acb4 <bt_compidtostr@@Base+0x2c84>
    a06c:	cmp	r0, r3
    a070:	beq	d30c <bt_compidtostr@@Base+0x52dc>
    a074:	cmp	r0, #680	; 0x2a8
    a078:	bcs	d318 <bt_compidtostr@@Base+0x52e8>
    a07c:	ldr	r0, [pc, #3124]	; acb8 <bt_compidtostr@@Base+0x2c88>
    a080:	add	r0, pc, r0
    a084:	bx	lr
    a088:	sub	r3, r3, #8
    a08c:	cmp	r0, r3
    a090:	beq	d36c <bt_compidtostr@@Base+0x533c>
    a094:	bhi	a0e8 <bt_compidtostr@@Base+0x20b8>
    a098:	sub	r3, r3, #4
    a09c:	cmp	r0, r3
    a0a0:	beq	d348 <bt_compidtostr@@Base+0x5318>
    a0a4:	bhi	a0c8 <bt_compidtostr@@Base+0x2098>
    a0a8:	sub	r3, r3, #2
    a0ac:	cmp	r0, r3
    a0b0:	beq	d330 <bt_compidtostr@@Base+0x5300>
    a0b4:	cmp	r0, #684	; 0x2ac
    a0b8:	bcs	d33c <bt_compidtostr@@Base+0x530c>
    a0bc:	ldr	r0, [pc, #3064]	; acbc <bt_compidtostr@@Base+0x2c8c>
    a0c0:	add	r0, pc, r0
    a0c4:	bx	lr
    a0c8:	ldr	r3, [pc, #3056]	; acc0 <bt_compidtostr@@Base+0x2c90>
    a0cc:	cmp	r0, r3
    a0d0:	beq	d354 <bt_compidtostr@@Base+0x5324>
    a0d4:	cmp	r0, #688	; 0x2b0
    a0d8:	bcs	d360 <bt_compidtostr@@Base+0x5330>
    a0dc:	ldr	r0, [pc, #3040]	; acc4 <bt_compidtostr@@Base+0x2c94>
    a0e0:	add	r0, pc, r0
    a0e4:	bx	lr
    a0e8:	ldr	r3, [pc, #3032]	; acc8 <bt_compidtostr@@Base+0x2c98>
    a0ec:	cmp	r0, r3
    a0f0:	beq	d390 <bt_compidtostr@@Base+0x5360>
    a0f4:	bhi	a118 <bt_compidtostr@@Base+0x20e8>
    a0f8:	sub	r3, r3, #2
    a0fc:	cmp	r0, r3
    a100:	beq	d378 <bt_compidtostr@@Base+0x5348>
    a104:	cmp	r0, #692	; 0x2b4
    a108:	bcs	d384 <bt_compidtostr@@Base+0x5354>
    a10c:	ldr	r0, [pc, #3000]	; accc <bt_compidtostr@@Base+0x2c9c>
    a110:	add	r0, pc, r0
    a114:	bx	lr
    a118:	ldr	r3, [pc, #2992]	; acd0 <bt_compidtostr@@Base+0x2ca0>
    a11c:	cmp	r0, r3
    a120:	beq	d39c <bt_compidtostr@@Base+0x536c>
    a124:	cmp	r0, #696	; 0x2b8
    a128:	bcs	d3a8 <bt_compidtostr@@Base+0x5378>
    a12c:	ldr	r0, [pc, #2976]	; acd4 <bt_compidtostr@@Base+0x2ca4>
    a130:	add	r0, pc, r0
    a134:	bx	lr
    a138:	sub	r3, r3, #4
    a13c:	cmp	r0, r3
    a140:	beq	d3d8 <bt_compidtostr@@Base+0x53a8>
    a144:	bhi	a168 <bt_compidtostr@@Base+0x2138>
    a148:	sub	r3, r3, #2
    a14c:	cmp	r0, r3
    a150:	beq	d3c0 <bt_compidtostr@@Base+0x5390>
    a154:	cmp	r0, #700	; 0x2bc
    a158:	bcs	d3cc <bt_compidtostr@@Base+0x539c>
    a15c:	ldr	r0, [pc, #2932]	; acd8 <bt_compidtostr@@Base+0x2ca8>
    a160:	add	r0, pc, r0
    a164:	bx	lr
    a168:	ldr	r3, [pc, #2924]	; acdc <bt_compidtostr@@Base+0x2cac>
    a16c:	cmp	r0, r3
    a170:	beq	d3e4 <bt_compidtostr@@Base+0x53b4>
    a174:	cmp	r0, #704	; 0x2c0
    a178:	bcs	d3f0 <bt_compidtostr@@Base+0x53c0>
    a17c:	ldr	r0, [pc, #2908]	; ace0 <bt_compidtostr@@Base+0x2cb0>
    a180:	add	r0, pc, r0
    a184:	bx	lr
    a188:	sub	r3, r3, #2
    a18c:	cmp	r0, r3
    a190:	beq	d408 <bt_compidtostr@@Base+0x53d8>
    a194:	cmp	r0, #708	; 0x2c4
    a198:	bcs	d414 <bt_compidtostr@@Base+0x53e4>
    a19c:	ldr	r0, [pc, #2880]	; ace4 <bt_compidtostr@@Base+0x2cb4>
    a1a0:	add	r0, pc, r0
    a1a4:	bx	lr
    a1a8:	ldr	r3, [pc, #2872]	; ace8 <bt_compidtostr@@Base+0x2cb8>
    a1ac:	cmp	r0, r3
    a1b0:	beq	d570 <bt_compidtostr@@Base+0x5540>
    a1b4:	bls	a218 <bt_compidtostr@@Base+0x21e8>
    a1b8:	ldr	r3, [pc, #2860]	; acec <bt_compidtostr@@Base+0x2cbc>
    a1bc:	cmp	r0, r3
    a1c0:	beq	d600 <bt_compidtostr@@Base+0x55d0>
    a1c4:	bls	a348 <bt_compidtostr@@Base+0x2318>
    a1c8:	ldr	r3, [pc, #2848]	; acf0 <bt_compidtostr@@Base+0x2cc0>
    a1cc:	cmp	r0, r3
    a1d0:	beq	d648 <bt_compidtostr@@Base+0x5618>
    a1d4:	bls	a3d8 <bt_compidtostr@@Base+0x23a8>
    a1d8:	ldr	r3, [pc, #2836]	; acf4 <bt_compidtostr@@Base+0x2cc4>
    a1dc:	cmp	r0, r3
    a1e0:	beq	d66c <bt_compidtostr@@Base+0x563c>
    a1e4:	bls	a418 <bt_compidtostr@@Base+0x23e8>
    a1e8:	cmp	r0, #776	; 0x308
    a1ec:	beq	d684 <bt_compidtostr@@Base+0x5654>
    a1f0:	bcc	d678 <bt_compidtostr@@Base+0x5648>
    a1f4:	ldr	r3, [pc, #2812]	; acf8 <bt_compidtostr@@Base+0x2cc8>
    a1f8:	cmp	r0, r3
    a1fc:	beq	d690 <bt_compidtostr@@Base+0x5660>
    a200:	add	r3, r3, #1
    a204:	cmp	r0, r3
    a208:	bne	e330 <bt_compidtostr@@Base+0x6300>
    a20c:	ldr	r0, [pc, #2792]	; acfc <bt_compidtostr@@Base+0x2ccc>
    a210:	add	r0, pc, r0
    a214:	bx	lr
    a218:	sub	r3, r3, #16
    a21c:	cmp	r0, r3
    a220:	beq	d4e0 <bt_compidtostr@@Base+0x54b0>
    a224:	bhi	a2b8 <bt_compidtostr@@Base+0x2288>
    a228:	sub	r3, r3, #8
    a22c:	cmp	r0, r3
    a230:	beq	d498 <bt_compidtostr@@Base+0x5468>
    a234:	bhi	a278 <bt_compidtostr@@Base+0x2248>
    a238:	sub	r3, r3, #4
    a23c:	cmp	r0, r3
    a240:	beq	d474 <bt_compidtostr@@Base+0x5444>
    a244:	bhi	a260 <bt_compidtostr@@Base+0x2230>
    a248:	cmp	r0, #716	; 0x2cc
    a24c:	beq	d45c <bt_compidtostr@@Base+0x542c>
    a250:	bhi	d468 <bt_compidtostr@@Base+0x5438>
    a254:	ldr	r0, [pc, #2724]	; ad00 <bt_compidtostr@@Base+0x2cd0>
    a258:	add	r0, pc, r0
    a25c:	bx	lr
    a260:	cmp	r0, #720	; 0x2d0
    a264:	beq	d480 <bt_compidtostr@@Base+0x5450>
    a268:	bhi	d48c <bt_compidtostr@@Base+0x545c>
    a26c:	ldr	r0, [pc, #2704]	; ad04 <bt_compidtostr@@Base+0x2cd4>
    a270:	add	r0, pc, r0
    a274:	bx	lr
    a278:	ldr	r3, [pc, #2696]	; ad08 <bt_compidtostr@@Base+0x2cd8>
    a27c:	cmp	r0, r3
    a280:	beq	d4bc <bt_compidtostr@@Base+0x548c>
    a284:	bhi	a2a0 <bt_compidtostr@@Base+0x2270>
    a288:	cmp	r0, #724	; 0x2d4
    a28c:	beq	d4a4 <bt_compidtostr@@Base+0x5474>
    a290:	bhi	d4b0 <bt_compidtostr@@Base+0x5480>
    a294:	ldr	r0, [pc, #2672]	; ad0c <bt_compidtostr@@Base+0x2cdc>
    a298:	add	r0, pc, r0
    a29c:	bx	lr
    a2a0:	cmp	r0, #728	; 0x2d8
    a2a4:	beq	d4c8 <bt_compidtostr@@Base+0x5498>
    a2a8:	bhi	d4d4 <bt_compidtostr@@Base+0x54a4>
    a2ac:	ldr	r0, [pc, #2652]	; ad10 <bt_compidtostr@@Base+0x2ce0>
    a2b0:	add	r0, pc, r0
    a2b4:	bx	lr
    a2b8:	ldr	r3, [pc, #2644]	; ad14 <bt_compidtostr@@Base+0x2ce4>
    a2bc:	cmp	r0, r3
    a2c0:	beq	d528 <bt_compidtostr@@Base+0x54f8>
    a2c4:	bhi	a308 <bt_compidtostr@@Base+0x22d8>
    a2c8:	sub	r3, r3, #4
    a2cc:	cmp	r0, r3
    a2d0:	beq	d504 <bt_compidtostr@@Base+0x54d4>
    a2d4:	bhi	a2f0 <bt_compidtostr@@Base+0x22c0>
    a2d8:	cmp	r0, #732	; 0x2dc
    a2dc:	beq	d4ec <bt_compidtostr@@Base+0x54bc>
    a2e0:	bhi	d4f8 <bt_compidtostr@@Base+0x54c8>
    a2e4:	ldr	r0, [pc, #2604]	; ad18 <bt_compidtostr@@Base+0x2ce8>
    a2e8:	add	r0, pc, r0
    a2ec:	bx	lr
    a2f0:	cmp	r0, #736	; 0x2e0
    a2f4:	beq	d510 <bt_compidtostr@@Base+0x54e0>
    a2f8:	bhi	d51c <bt_compidtostr@@Base+0x54ec>
    a2fc:	ldr	r0, [pc, #2584]	; ad1c <bt_compidtostr@@Base+0x2cec>
    a300:	add	r0, pc, r0
    a304:	bx	lr
    a308:	ldr	r3, [pc, #2576]	; ad20 <bt_compidtostr@@Base+0x2cf0>
    a30c:	cmp	r0, r3
    a310:	beq	d54c <bt_compidtostr@@Base+0x551c>
    a314:	bhi	a330 <bt_compidtostr@@Base+0x2300>
    a318:	cmp	r0, #740	; 0x2e4
    a31c:	beq	d534 <bt_compidtostr@@Base+0x5504>
    a320:	bhi	d540 <bt_compidtostr@@Base+0x5510>
    a324:	ldr	r0, [pc, #2552]	; ad24 <bt_compidtostr@@Base+0x2cf4>
    a328:	add	r0, pc, r0
    a32c:	bx	lr
    a330:	cmp	r0, #744	; 0x2e8
    a334:	beq	d558 <bt_compidtostr@@Base+0x5528>
    a338:	bhi	d564 <bt_compidtostr@@Base+0x5534>
    a33c:	ldr	r0, [pc, #2532]	; ad28 <bt_compidtostr@@Base+0x2cf8>
    a340:	add	r0, pc, r0
    a344:	bx	lr
    a348:	sub	r3, r3, #8
    a34c:	cmp	r0, r3
    a350:	beq	d5b8 <bt_compidtostr@@Base+0x5588>
    a354:	bhi	a398 <bt_compidtostr@@Base+0x2368>
    a358:	sub	r3, r3, #4
    a35c:	cmp	r0, r3
    a360:	beq	d594 <bt_compidtostr@@Base+0x5564>
    a364:	bhi	a380 <bt_compidtostr@@Base+0x2350>
    a368:	cmp	r0, #748	; 0x2ec
    a36c:	beq	d57c <bt_compidtostr@@Base+0x554c>
    a370:	bhi	d588 <bt_compidtostr@@Base+0x5558>
    a374:	ldr	r0, [pc, #2480]	; ad2c <bt_compidtostr@@Base+0x2cfc>
    a378:	add	r0, pc, r0
    a37c:	bx	lr
    a380:	cmp	r0, #752	; 0x2f0
    a384:	beq	d5a0 <bt_compidtostr@@Base+0x5570>
    a388:	bhi	d5ac <bt_compidtostr@@Base+0x557c>
    a38c:	ldr	r0, [pc, #2460]	; ad30 <bt_compidtostr@@Base+0x2d00>
    a390:	add	r0, pc, r0
    a394:	bx	lr
    a398:	ldr	r3, [pc, #2452]	; ad34 <bt_compidtostr@@Base+0x2d04>
    a39c:	cmp	r0, r3
    a3a0:	beq	d5dc <bt_compidtostr@@Base+0x55ac>
    a3a4:	bhi	a3c0 <bt_compidtostr@@Base+0x2390>
    a3a8:	cmp	r0, #756	; 0x2f4
    a3ac:	beq	d5c4 <bt_compidtostr@@Base+0x5594>
    a3b0:	bhi	d5d0 <bt_compidtostr@@Base+0x55a0>
    a3b4:	ldr	r0, [pc, #2428]	; ad38 <bt_compidtostr@@Base+0x2d08>
    a3b8:	add	r0, pc, r0
    a3bc:	bx	lr
    a3c0:	cmp	r0, #760	; 0x2f8
    a3c4:	beq	d5e8 <bt_compidtostr@@Base+0x55b8>
    a3c8:	bhi	d5f4 <bt_compidtostr@@Base+0x55c4>
    a3cc:	ldr	r0, [pc, #2408]	; ad3c <bt_compidtostr@@Base+0x2d0c>
    a3d0:	add	r0, pc, r0
    a3d4:	bx	lr
    a3d8:	sub	r3, r3, #4
    a3dc:	cmp	r0, r3
    a3e0:	beq	d624 <bt_compidtostr@@Base+0x55f4>
    a3e4:	bhi	a400 <bt_compidtostr@@Base+0x23d0>
    a3e8:	cmp	r0, #764	; 0x2fc
    a3ec:	beq	d60c <bt_compidtostr@@Base+0x55dc>
    a3f0:	bhi	d618 <bt_compidtostr@@Base+0x55e8>
    a3f4:	ldr	r0, [pc, #2372]	; ad40 <bt_compidtostr@@Base+0x2d10>
    a3f8:	add	r0, pc, r0
    a3fc:	bx	lr
    a400:	cmp	r0, #768	; 0x300
    a404:	beq	d630 <bt_compidtostr@@Base+0x5600>
    a408:	bhi	d63c <bt_compidtostr@@Base+0x560c>
    a40c:	ldr	r0, [pc, #2352]	; ad44 <bt_compidtostr@@Base+0x2d14>
    a410:	add	r0, pc, r0
    a414:	bx	lr
    a418:	cmp	r0, #772	; 0x304
    a41c:	beq	d654 <bt_compidtostr@@Base+0x5624>
    a420:	bhi	d660 <bt_compidtostr@@Base+0x5630>
    a424:	ldr	r0, [pc, #2332]	; ad48 <bt_compidtostr@@Base+0x2d18>
    a428:	add	r0, pc, r0
    a42c:	bx	lr
    a430:	ldr	r3, [pc, #2324]	; ad4c <bt_compidtostr@@Base+0x2d1c>
    a434:	cmp	r0, r3
    a438:	beq	db34 <bt_compidtostr@@Base+0x5b04>
    a43c:	bhi	a9dc <bt_compidtostr@@Base+0x29ac>
    a440:	cmp	r0, #844	; 0x34c
    a444:	beq	d8e8 <bt_compidtostr@@Base+0x58b8>
    a448:	bhi	a754 <bt_compidtostr@@Base+0x2724>
    a44c:	sub	r3, r3, #98	; 0x62
    a450:	cmp	r0, r3
    a454:	beq	d7bc <bt_compidtostr@@Base+0x578c>
    a458:	cmp	r0, #812	; 0x32c
    a45c:	bcc	a4d4 <bt_compidtostr@@Base+0x24a4>
    a460:	ldr	r3, [pc, #2280]	; ad50 <bt_compidtostr@@Base+0x2d20>
    a464:	cmp	r0, r3
    a468:	beq	d84c <bt_compidtostr@@Base+0x581c>
    a46c:	cmp	r0, #828	; 0x33c
    a470:	bcc	a640 <bt_compidtostr@@Base+0x2610>
    a474:	ldr	r3, [pc, #2264]	; ad54 <bt_compidtostr@@Base+0x2d24>
    a478:	cmp	r0, r3
    a47c:	beq	d894 <bt_compidtostr@@Base+0x5864>
    a480:	cmp	r0, #836	; 0x344
    a484:	bcc	a6ec <bt_compidtostr@@Base+0x26bc>
    a488:	ldr	r3, [pc, #2248]	; ad58 <bt_compidtostr@@Base+0x2d28>
    a48c:	cmp	r0, r3
    a490:	beq	d8b8 <bt_compidtostr@@Base+0x5888>
    a494:	cmp	r0, #840	; 0x348
    a498:	bcc	a738 <bt_compidtostr@@Base+0x2708>
    a49c:	ldr	r3, [pc, #2232]	; ad5c <bt_compidtostr@@Base+0x2d2c>
    a4a0:	cmp	r0, r3
    a4a4:	beq	d8d0 <bt_compidtostr@@Base+0x58a0>
    a4a8:	cmp	r0, #840	; 0x348
    a4ac:	bls	d8c4 <bt_compidtostr@@Base+0x5894>
    a4b0:	add	r3, r3, #1
    a4b4:	cmp	r0, r3
    a4b8:	beq	d8dc <bt_compidtostr@@Base+0x58ac>
    a4bc:	add	r3, r3, #1
    a4c0:	cmp	r0, r3
    a4c4:	bne	e330 <bt_compidtostr@@Base+0x6300>
    a4c8:	ldr	r0, [pc, #2192]	; ad60 <bt_compidtostr@@Base+0x2d30>
    a4cc:	add	r0, pc, r0
    a4d0:	bx	lr
    a4d4:	sub	r3, r3, #16
    a4d8:	cmp	r0, r3
    a4dc:	beq	d72c <bt_compidtostr@@Base+0x56fc>
    a4e0:	cmp	r0, #796	; 0x31c
    a4e4:	bcs	a594 <bt_compidtostr@@Base+0x2564>
    a4e8:	sub	r3, r3, #8
    a4ec:	cmp	r0, r3
    a4f0:	beq	d6e4 <bt_compidtostr@@Base+0x56b4>
    a4f4:	cmp	r0, #788	; 0x314
    a4f8:	bcs	a548 <bt_compidtostr@@Base+0x2518>
    a4fc:	sub	r3, r3, #4
    a500:	cmp	r0, r3
    a504:	beq	d6c0 <bt_compidtostr@@Base+0x5690>
    a508:	cmp	r0, #784	; 0x310
    a50c:	bcs	a52c <bt_compidtostr@@Base+0x24fc>
    a510:	sub	r3, r3, #2
    a514:	cmp	r0, r3
    a518:	beq	d6a8 <bt_compidtostr@@Base+0x5678>
    a51c:	bhi	d6b4 <bt_compidtostr@@Base+0x5684>
    a520:	ldr	r0, [pc, #2108]	; ad64 <bt_compidtostr@@Base+0x2d34>
    a524:	add	r0, pc, r0
    a528:	bx	lr
    a52c:	ldr	r3, [pc, #2100]	; ad68 <bt_compidtostr@@Base+0x2d38>
    a530:	cmp	r0, r3
    a534:	beq	d6cc <bt_compidtostr@@Base+0x569c>
    a538:	bhi	d6d8 <bt_compidtostr@@Base+0x56a8>
    a53c:	ldr	r0, [pc, #2088]	; ad6c <bt_compidtostr@@Base+0x2d3c>
    a540:	add	r0, pc, r0
    a544:	bx	lr
    a548:	ldr	r3, [pc, #2080]	; ad70 <bt_compidtostr@@Base+0x2d40>
    a54c:	cmp	r0, r3
    a550:	beq	d708 <bt_compidtostr@@Base+0x56d8>
    a554:	cmp	r0, #792	; 0x318
    a558:	bcs	a578 <bt_compidtostr@@Base+0x2548>
    a55c:	sub	r3, r3, #2
    a560:	cmp	r0, r3
    a564:	beq	d6f0 <bt_compidtostr@@Base+0x56c0>
    a568:	bhi	d6fc <bt_compidtostr@@Base+0x56cc>
    a56c:	ldr	r0, [pc, #2048]	; ad74 <bt_compidtostr@@Base+0x2d44>
    a570:	add	r0, pc, r0
    a574:	bx	lr
    a578:	ldr	r3, [pc, #2040]	; ad78 <bt_compidtostr@@Base+0x2d48>
    a57c:	cmp	r0, r3
    a580:	beq	d714 <bt_compidtostr@@Base+0x56e4>
    a584:	bhi	d720 <bt_compidtostr@@Base+0x56f0>
    a588:	ldr	r0, [pc, #2028]	; ad7c <bt_compidtostr@@Base+0x2d4c>
    a58c:	add	r0, pc, r0
    a590:	bx	lr
    a594:	ldr	r3, [pc, #2020]	; ad80 <bt_compidtostr@@Base+0x2d50>
    a598:	cmp	r0, r3
    a59c:	beq	d774 <bt_compidtostr@@Base+0x5744>
    a5a0:	cmp	r0, #804	; 0x324
    a5a4:	bcs	a5f4 <bt_compidtostr@@Base+0x25c4>
    a5a8:	sub	r3, r3, #4
    a5ac:	cmp	r0, r3
    a5b0:	beq	d750 <bt_compidtostr@@Base+0x5720>
    a5b4:	cmp	r0, #800	; 0x320
    a5b8:	bcs	a5d8 <bt_compidtostr@@Base+0x25a8>
    a5bc:	sub	r3, r3, #2
    a5c0:	cmp	r0, r3
    a5c4:	beq	d738 <bt_compidtostr@@Base+0x5708>
    a5c8:	bhi	d744 <bt_compidtostr@@Base+0x5714>
    a5cc:	ldr	r0, [pc, #1968]	; ad84 <bt_compidtostr@@Base+0x2d54>
    a5d0:	add	r0, pc, r0
    a5d4:	bx	lr
    a5d8:	ldr	r3, [pc, #1960]	; ad88 <bt_compidtostr@@Base+0x2d58>
    a5dc:	cmp	r0, r3
    a5e0:	beq	d75c <bt_compidtostr@@Base+0x572c>
    a5e4:	bhi	d768 <bt_compidtostr@@Base+0x5738>
    a5e8:	ldr	r0, [pc, #1948]	; ad8c <bt_compidtostr@@Base+0x2d5c>
    a5ec:	add	r0, pc, r0
    a5f0:	bx	lr
    a5f4:	ldr	r3, [pc, #1940]	; ad90 <bt_compidtostr@@Base+0x2d60>
    a5f8:	cmp	r0, r3
    a5fc:	beq	d798 <bt_compidtostr@@Base+0x5768>
    a600:	cmp	r0, #808	; 0x328
    a604:	bcs	a624 <bt_compidtostr@@Base+0x25f4>
    a608:	sub	r3, r3, #2
    a60c:	cmp	r0, r3
    a610:	beq	d780 <bt_compidtostr@@Base+0x5750>
    a614:	bhi	d78c <bt_compidtostr@@Base+0x575c>
    a618:	ldr	r0, [pc, #1908]	; ad94 <bt_compidtostr@@Base+0x2d64>
    a61c:	add	r0, pc, r0
    a620:	bx	lr
    a624:	ldr	r3, [pc, #1900]	; ad98 <bt_compidtostr@@Base+0x2d68>
    a628:	cmp	r0, r3
    a62c:	beq	d7a4 <bt_compidtostr@@Base+0x5774>
    a630:	bhi	d7b0 <bt_compidtostr@@Base+0x5780>
    a634:	ldr	r0, [pc, #1888]	; ad9c <bt_compidtostr@@Base+0x2d6c>
    a638:	add	r0, pc, r0
    a63c:	bx	lr
    a640:	sub	r3, r3, #8
    a644:	cmp	r0, r3
    a648:	beq	d804 <bt_compidtostr@@Base+0x57d4>
    a64c:	cmp	r0, #820	; 0x334
    a650:	bcs	a6a0 <bt_compidtostr@@Base+0x2670>
    a654:	sub	r3, r3, #4
    a658:	cmp	r0, r3
    a65c:	beq	d7e0 <bt_compidtostr@@Base+0x57b0>
    a660:	cmp	r0, #816	; 0x330
    a664:	bcs	a684 <bt_compidtostr@@Base+0x2654>
    a668:	sub	r3, r3, #2
    a66c:	cmp	r0, r3
    a670:	beq	d7c8 <bt_compidtostr@@Base+0x5798>
    a674:	bhi	d7d4 <bt_compidtostr@@Base+0x57a4>
    a678:	ldr	r0, [pc, #1824]	; ada0 <bt_compidtostr@@Base+0x2d70>
    a67c:	add	r0, pc, r0
    a680:	bx	lr
    a684:	ldr	r3, [pc, #1816]	; ada4 <bt_compidtostr@@Base+0x2d74>
    a688:	cmp	r0, r3
    a68c:	beq	d7ec <bt_compidtostr@@Base+0x57bc>
    a690:	bhi	d7f8 <bt_compidtostr@@Base+0x57c8>
    a694:	ldr	r0, [pc, #1804]	; ada8 <bt_compidtostr@@Base+0x2d78>
    a698:	add	r0, pc, r0
    a69c:	bx	lr
    a6a0:	ldr	r3, [pc, #1796]	; adac <bt_compidtostr@@Base+0x2d7c>
    a6a4:	cmp	r0, r3
    a6a8:	beq	d828 <bt_compidtostr@@Base+0x57f8>
    a6ac:	cmp	r0, #824	; 0x338
    a6b0:	bcs	a6d0 <bt_compidtostr@@Base+0x26a0>
    a6b4:	sub	r3, r3, #2
    a6b8:	cmp	r0, r3
    a6bc:	beq	d810 <bt_compidtostr@@Base+0x57e0>
    a6c0:	bhi	d81c <bt_compidtostr@@Base+0x57ec>
    a6c4:	ldr	r0, [pc, #1764]	; adb0 <bt_compidtostr@@Base+0x2d80>
    a6c8:	add	r0, pc, r0
    a6cc:	bx	lr
    a6d0:	ldr	r3, [pc, #1756]	; adb4 <bt_compidtostr@@Base+0x2d84>
    a6d4:	cmp	r0, r3
    a6d8:	beq	d834 <bt_compidtostr@@Base+0x5804>
    a6dc:	bhi	d840 <bt_compidtostr@@Base+0x5810>
    a6e0:	ldr	r0, [pc, #1744]	; adb8 <bt_compidtostr@@Base+0x2d88>
    a6e4:	add	r0, pc, r0
    a6e8:	bx	lr
    a6ec:	sub	r3, r3, #4
    a6f0:	cmp	r0, r3
    a6f4:	beq	d870 <bt_compidtostr@@Base+0x5840>
    a6f8:	cmp	r0, #832	; 0x340
    a6fc:	bcs	a71c <bt_compidtostr@@Base+0x26ec>
    a700:	sub	r3, r3, #2
    a704:	cmp	r0, r3
    a708:	beq	d858 <bt_compidtostr@@Base+0x5828>
    a70c:	bhi	d864 <bt_compidtostr@@Base+0x5834>
    a710:	ldr	r0, [pc, #1700]	; adbc <bt_compidtostr@@Base+0x2d8c>
    a714:	add	r0, pc, r0
    a718:	bx	lr
    a71c:	ldr	r3, [pc, #1692]	; adc0 <bt_compidtostr@@Base+0x2d90>
    a720:	cmp	r0, r3
    a724:	beq	d87c <bt_compidtostr@@Base+0x584c>
    a728:	bhi	d888 <bt_compidtostr@@Base+0x5858>
    a72c:	ldr	r0, [pc, #1680]	; adc4 <bt_compidtostr@@Base+0x2d94>
    a730:	add	r0, pc, r0
    a734:	bx	lr
    a738:	sub	r3, r3, #2
    a73c:	cmp	r0, r3
    a740:	beq	d8a0 <bt_compidtostr@@Base+0x5870>
    a744:	bhi	d8ac <bt_compidtostr@@Base+0x587c>
    a748:	ldr	r0, [pc, #1656]	; adc8 <bt_compidtostr@@Base+0x2d98>
    a74c:	add	r0, pc, r0
    a750:	bx	lr
    a754:	cmp	r0, #876	; 0x36c
    a758:	beq	da08 <bt_compidtostr@@Base+0x59d8>
    a75c:	bls	a7b4 <bt_compidtostr@@Base+0x2784>
    a760:	cmp	r0, #892	; 0x37c
    a764:	beq	da98 <bt_compidtostr@@Base+0x5a68>
    a768:	bls	a8e8 <bt_compidtostr@@Base+0x28b8>
    a76c:	cmp	r0, #900	; 0x384
    a770:	beq	dae0 <bt_compidtostr@@Base+0x5ab0>
    a774:	bls	a97c <bt_compidtostr@@Base+0x294c>
    a778:	cmp	r0, #904	; 0x388
    a77c:	beq	db04 <bt_compidtostr@@Base+0x5ad4>
    a780:	bls	a9c0 <bt_compidtostr@@Base+0x2990>
    a784:	ldr	r3, [pc, #1600]	; adcc <bt_compidtostr@@Base+0x2d9c>
    a788:	cmp	r0, r3
    a78c:	beq	db1c <bt_compidtostr@@Base+0x5aec>
    a790:	bcc	db10 <bt_compidtostr@@Base+0x5ae0>
    a794:	add	r3, r3, #1
    a798:	cmp	r0, r3
    a79c:	beq	db28 <bt_compidtostr@@Base+0x5af8>
    a7a0:	cmp	r0, #908	; 0x38c
    a7a4:	bne	e330 <bt_compidtostr@@Base+0x6300>
    a7a8:	ldr	r0, [pc, #1568]	; add0 <bt_compidtostr@@Base+0x2da0>
    a7ac:	add	r0, pc, r0
    a7b0:	bx	lr
    a7b4:	cmp	r0, #860	; 0x35c
    a7b8:	beq	d978 <bt_compidtostr@@Base+0x5948>
    a7bc:	bhi	a854 <bt_compidtostr@@Base+0x2824>
    a7c0:	cmp	r0, #852	; 0x354
    a7c4:	beq	d930 <bt_compidtostr@@Base+0x5900>
    a7c8:	bhi	a810 <bt_compidtostr@@Base+0x27e0>
    a7cc:	cmp	r0, #848	; 0x350
    a7d0:	beq	d90c <bt_compidtostr@@Base+0x58dc>
    a7d4:	bhi	a7f4 <bt_compidtostr@@Base+0x27c4>
    a7d8:	ldr	r3, [pc, #1524]	; add4 <bt_compidtostr@@Base+0x2da4>
    a7dc:	cmp	r0, r3
    a7e0:	beq	d8f4 <bt_compidtostr@@Base+0x58c4>
    a7e4:	bhi	d900 <bt_compidtostr@@Base+0x58d0>
    a7e8:	ldr	r0, [pc, #1512]	; add8 <bt_compidtostr@@Base+0x2da8>
    a7ec:	add	r0, pc, r0
    a7f0:	bx	lr
    a7f4:	ldr	r3, [pc, #1504]	; addc <bt_compidtostr@@Base+0x2dac>
    a7f8:	cmp	r0, r3
    a7fc:	beq	d918 <bt_compidtostr@@Base+0x58e8>
    a800:	bhi	d924 <bt_compidtostr@@Base+0x58f4>
    a804:	ldr	r0, [pc, #1492]	; ade0 <bt_compidtostr@@Base+0x2db0>
    a808:	add	r0, pc, r0
    a80c:	bx	lr
    a810:	cmp	r0, #856	; 0x358
    a814:	beq	d954 <bt_compidtostr@@Base+0x5924>
    a818:	bhi	a838 <bt_compidtostr@@Base+0x2808>
    a81c:	ldr	r3, [pc, #1472]	; ade4 <bt_compidtostr@@Base+0x2db4>
    a820:	cmp	r0, r3
    a824:	beq	d93c <bt_compidtostr@@Base+0x590c>
    a828:	bhi	d948 <bt_compidtostr@@Base+0x5918>
    a82c:	ldr	r0, [pc, #1460]	; ade8 <bt_compidtostr@@Base+0x2db8>
    a830:	add	r0, pc, r0
    a834:	bx	lr
    a838:	ldr	r3, [pc, #1452]	; adec <bt_compidtostr@@Base+0x2dbc>
    a83c:	cmp	r0, r3
    a840:	beq	d960 <bt_compidtostr@@Base+0x5930>
    a844:	bhi	d96c <bt_compidtostr@@Base+0x593c>
    a848:	ldr	r0, [pc, #1440]	; adf0 <bt_compidtostr@@Base+0x2dc0>
    a84c:	add	r0, pc, r0
    a850:	bx	lr
    a854:	cmp	r0, #868	; 0x364
    a858:	beq	d9c0 <bt_compidtostr@@Base+0x5990>
    a85c:	bhi	a8a4 <bt_compidtostr@@Base+0x2874>
    a860:	cmp	r0, #864	; 0x360
    a864:	beq	d99c <bt_compidtostr@@Base+0x596c>
    a868:	bhi	a888 <bt_compidtostr@@Base+0x2858>
    a86c:	ldr	r3, [pc, #1408]	; adf4 <bt_compidtostr@@Base+0x2dc4>
    a870:	cmp	r0, r3
    a874:	beq	d984 <bt_compidtostr@@Base+0x5954>
    a878:	bhi	d990 <bt_compidtostr@@Base+0x5960>
    a87c:	ldr	r0, [pc, #1396]	; adf8 <bt_compidtostr@@Base+0x2dc8>
    a880:	add	r0, pc, r0
    a884:	bx	lr
    a888:	ldr	r3, [pc, #1388]	; adfc <bt_compidtostr@@Base+0x2dcc>
    a88c:	cmp	r0, r3
    a890:	beq	d9a8 <bt_compidtostr@@Base+0x5978>
    a894:	bhi	d9b4 <bt_compidtostr@@Base+0x5984>
    a898:	ldr	r0, [pc, #1376]	; ae00 <bt_compidtostr@@Base+0x2dd0>
    a89c:	add	r0, pc, r0
    a8a0:	bx	lr
    a8a4:	cmp	r0, #872	; 0x368
    a8a8:	beq	d9e4 <bt_compidtostr@@Base+0x59b4>
    a8ac:	bhi	a8cc <bt_compidtostr@@Base+0x289c>
    a8b0:	ldr	r3, [pc, #1356]	; ae04 <bt_compidtostr@@Base+0x2dd4>
    a8b4:	cmp	r0, r3
    a8b8:	beq	d9cc <bt_compidtostr@@Base+0x599c>
    a8bc:	bhi	d9d8 <bt_compidtostr@@Base+0x59a8>
    a8c0:	ldr	r0, [pc, #1344]	; ae08 <bt_compidtostr@@Base+0x2dd8>
    a8c4:	add	r0, pc, r0
    a8c8:	bx	lr
    a8cc:	ldr	r3, [pc, #1336]	; ae0c <bt_compidtostr@@Base+0x2ddc>
    a8d0:	cmp	r0, r3
    a8d4:	beq	d9f0 <bt_compidtostr@@Base+0x59c0>
    a8d8:	bhi	d9fc <bt_compidtostr@@Base+0x59cc>
    a8dc:	ldr	r0, [pc, #1324]	; ae10 <bt_compidtostr@@Base+0x2de0>
    a8e0:	add	r0, pc, r0
    a8e4:	bx	lr
    a8e8:	cmp	r0, #884	; 0x374
    a8ec:	beq	da50 <bt_compidtostr@@Base+0x5a20>
    a8f0:	bhi	a938 <bt_compidtostr@@Base+0x2908>
    a8f4:	cmp	r0, #880	; 0x370
    a8f8:	beq	da2c <bt_compidtostr@@Base+0x59fc>
    a8fc:	bhi	a91c <bt_compidtostr@@Base+0x28ec>
    a900:	ldr	r3, [pc, #1292]	; ae14 <bt_compidtostr@@Base+0x2de4>
    a904:	cmp	r0, r3
    a908:	beq	da14 <bt_compidtostr@@Base+0x59e4>
    a90c:	bhi	da20 <bt_compidtostr@@Base+0x59f0>
    a910:	ldr	r0, [pc, #1280]	; ae18 <bt_compidtostr@@Base+0x2de8>
    a914:	add	r0, pc, r0
    a918:	bx	lr
    a91c:	ldr	r3, [pc, #1272]	; ae1c <bt_compidtostr@@Base+0x2dec>
    a920:	cmp	r0, r3
    a924:	beq	da38 <bt_compidtostr@@Base+0x5a08>
    a928:	bhi	da44 <bt_compidtostr@@Base+0x5a14>
    a92c:	ldr	r0, [pc, #1260]	; ae20 <bt_compidtostr@@Base+0x2df0>
    a930:	add	r0, pc, r0
    a934:	bx	lr
    a938:	cmp	r0, #888	; 0x378
    a93c:	beq	da74 <bt_compidtostr@@Base+0x5a44>
    a940:	bhi	a960 <bt_compidtostr@@Base+0x2930>
    a944:	ldr	r3, [pc, #1240]	; ae24 <bt_compidtostr@@Base+0x2df4>
    a948:	cmp	r0, r3
    a94c:	beq	da5c <bt_compidtostr@@Base+0x5a2c>
    a950:	bhi	da68 <bt_compidtostr@@Base+0x5a38>
    a954:	ldr	r0, [pc, #1228]	; ae28 <bt_compidtostr@@Base+0x2df8>
    a958:	add	r0, pc, r0
    a95c:	bx	lr
    a960:	ldr	r3, [pc, #1220]	; ae2c <bt_compidtostr@@Base+0x2dfc>
    a964:	cmp	r0, r3
    a968:	beq	da80 <bt_compidtostr@@Base+0x5a50>
    a96c:	bhi	da8c <bt_compidtostr@@Base+0x5a5c>
    a970:	ldr	r0, [pc, #1208]	; ae30 <bt_compidtostr@@Base+0x2e00>
    a974:	add	r0, pc, r0
    a978:	bx	lr
    a97c:	cmp	r0, #896	; 0x380
    a980:	beq	dabc <bt_compidtostr@@Base+0x5a8c>
    a984:	bhi	a9a4 <bt_compidtostr@@Base+0x2974>
    a988:	ldr	r3, [pc, #1188]	; ae34 <bt_compidtostr@@Base+0x2e04>
    a98c:	cmp	r0, r3
    a990:	beq	daa4 <bt_compidtostr@@Base+0x5a74>
    a994:	bhi	dab0 <bt_compidtostr@@Base+0x5a80>
    a998:	ldr	r0, [pc, #1176]	; ae38 <bt_compidtostr@@Base+0x2e08>
    a99c:	add	r0, pc, r0
    a9a0:	bx	lr
    a9a4:	ldr	r3, [pc, #1168]	; ae3c <bt_compidtostr@@Base+0x2e0c>
    a9a8:	cmp	r0, r3
    a9ac:	beq	dac8 <bt_compidtostr@@Base+0x5a98>
    a9b0:	bhi	dad4 <bt_compidtostr@@Base+0x5aa4>
    a9b4:	ldr	r0, [pc, #1156]	; ae40 <bt_compidtostr@@Base+0x2e10>
    a9b8:	add	r0, pc, r0
    a9bc:	bx	lr
    a9c0:	ldr	r3, [pc, #1148]	; ae44 <bt_compidtostr@@Base+0x2e14>
    a9c4:	cmp	r0, r3
    a9c8:	beq	daec <bt_compidtostr@@Base+0x5abc>
    a9cc:	bhi	daf8 <bt_compidtostr@@Base+0x5ac8>
    a9d0:	ldr	r0, [pc, #1136]	; ae48 <bt_compidtostr@@Base+0x2e18>
    a9d4:	add	r0, pc, r0
    a9d8:	bx	lr
    a9dc:	ldr	r3, [pc, #1128]	; ae4c <bt_compidtostr@@Base+0x2e1c>
    a9e0:	cmp	r0, r3
    a9e4:	beq	dd80 <bt_compidtostr@@Base+0x5d50>
    a9e8:	bhi	b220 <bt_compidtostr@@Base+0x31f0>
    a9ec:	sub	r3, r3, #33	; 0x21
    a9f0:	cmp	r0, r3
    a9f4:	beq	dc54 <bt_compidtostr@@Base+0x5c24>
    a9f8:	bls	aa5c <bt_compidtostr@@Base+0x2a2c>
    a9fc:	ldr	r3, [pc, #1100]	; ae50 <bt_compidtostr@@Base+0x2e20>
    aa00:	cmp	r0, r3
    aa04:	beq	dce4 <bt_compidtostr@@Base+0x5cb4>
    aa08:	bls	abcc <bt_compidtostr@@Base+0x2b9c>
    aa0c:	ldr	r3, [pc, #1088]	; ae54 <bt_compidtostr@@Base+0x2e24>
    aa10:	cmp	r0, r3
    aa14:	beq	dd2c <bt_compidtostr@@Base+0x5cfc>
    aa18:	bls	b1b0 <bt_compidtostr@@Base+0x3180>
    aa1c:	ldr	r3, [pc, #1076]	; ae58 <bt_compidtostr@@Base+0x2e28>
    aa20:	cmp	r0, r3
    aa24:	beq	dd50 <bt_compidtostr@@Base+0x5d20>
    aa28:	bls	b200 <bt_compidtostr@@Base+0x31d0>
    aa2c:	ldr	r3, [pc, #1064]	; ae5c <bt_compidtostr@@Base+0x2e2c>
    aa30:	cmp	r0, r3
    aa34:	beq	dd68 <bt_compidtostr@@Base+0x5d38>
    aa38:	bcc	dd5c <bt_compidtostr@@Base+0x5d2c>
    aa3c:	cmp	r0, #972	; 0x3cc
    aa40:	beq	dd74 <bt_compidtostr@@Base+0x5d44>
    aa44:	add	r3, r3, #2
    aa48:	cmp	r0, r3
    aa4c:	bne	e330 <bt_compidtostr@@Base+0x6300>
    aa50:	ldr	r0, [pc, #1032]	; ae60 <bt_compidtostr@@Base+0x2e30>
    aa54:	add	r0, pc, r0
    aa58:	bx	lr
    aa5c:	sub	r3, r3, #16
    aa60:	cmp	r0, r3
    aa64:	beq	dbc4 <bt_compidtostr@@Base+0x5b94>
    aa68:	bhi	ab1c <bt_compidtostr@@Base+0x2aec>
    aa6c:	sub	r3, r3, #8
    aa70:	cmp	r0, r3
    aa74:	beq	db7c <bt_compidtostr@@Base+0x5b4c>
    aa78:	bhi	aacc <bt_compidtostr@@Base+0x2a9c>
    aa7c:	sub	r3, r3, #4
    aa80:	cmp	r0, r3
    aa84:	beq	db58 <bt_compidtostr@@Base+0x5b28>
    aa88:	bhi	aaac <bt_compidtostr@@Base+0x2a7c>
    aa8c:	sub	r3, r3, #2
    aa90:	cmp	r0, r3
    aa94:	beq	db40 <bt_compidtostr@@Base+0x5b10>
    aa98:	cmp	r0, #912	; 0x390
    aa9c:	bcs	db4c <bt_compidtostr@@Base+0x5b1c>
    aaa0:	ldr	r0, [pc, #956]	; ae64 <bt_compidtostr@@Base+0x2e34>
    aaa4:	add	r0, pc, r0
    aaa8:	bx	lr
    aaac:	ldr	r3, [pc, #948]	; ae68 <bt_compidtostr@@Base+0x2e38>
    aab0:	cmp	r0, r3
    aab4:	beq	db64 <bt_compidtostr@@Base+0x5b34>
    aab8:	cmp	r0, #916	; 0x394
    aabc:	bcs	db70 <bt_compidtostr@@Base+0x5b40>
    aac0:	ldr	r0, [pc, #932]	; ae6c <bt_compidtostr@@Base+0x2e3c>
    aac4:	add	r0, pc, r0
    aac8:	bx	lr
    aacc:	ldr	r3, [pc, #924]	; ae70 <bt_compidtostr@@Base+0x2e40>
    aad0:	cmp	r0, r3
    aad4:	beq	dba0 <bt_compidtostr@@Base+0x5b70>
    aad8:	bhi	aafc <bt_compidtostr@@Base+0x2acc>
    aadc:	sub	r3, r3, #2
    aae0:	cmp	r0, r3
    aae4:	beq	db88 <bt_compidtostr@@Base+0x5b58>
    aae8:	cmp	r0, #920	; 0x398
    aaec:	bcs	db94 <bt_compidtostr@@Base+0x5b64>
    aaf0:	ldr	r0, [pc, #892]	; ae74 <bt_compidtostr@@Base+0x2e44>
    aaf4:	add	r0, pc, r0
    aaf8:	bx	lr
    aafc:	ldr	r3, [pc, #884]	; ae78 <bt_compidtostr@@Base+0x2e48>
    ab00:	cmp	r0, r3
    ab04:	beq	dbac <bt_compidtostr@@Base+0x5b7c>
    ab08:	cmp	r0, #924	; 0x39c
    ab0c:	bcs	dbb8 <bt_compidtostr@@Base+0x5b88>
    ab10:	ldr	r0, [pc, #868]	; ae7c <bt_compidtostr@@Base+0x2e4c>
    ab14:	add	r0, pc, r0
    ab18:	bx	lr
    ab1c:	ldr	r3, [pc, #860]	; ae80 <bt_compidtostr@@Base+0x2e50>
    ab20:	cmp	r0, r3
    ab24:	beq	dc0c <bt_compidtostr@@Base+0x5bdc>
    ab28:	bhi	ab7c <bt_compidtostr@@Base+0x2b4c>
    ab2c:	sub	r3, r3, #4
    ab30:	cmp	r0, r3
    ab34:	beq	dbe8 <bt_compidtostr@@Base+0x5bb8>
    ab38:	bhi	ab5c <bt_compidtostr@@Base+0x2b2c>
    ab3c:	sub	r3, r3, #2
    ab40:	cmp	r0, r3
    ab44:	beq	dbd0 <bt_compidtostr@@Base+0x5ba0>
    ab48:	cmp	r0, #928	; 0x3a0
    ab4c:	bcs	dbdc <bt_compidtostr@@Base+0x5bac>
    ab50:	ldr	r0, [pc, #812]	; ae84 <bt_compidtostr@@Base+0x2e54>
    ab54:	add	r0, pc, r0
    ab58:	bx	lr
    ab5c:	ldr	r3, [pc, #804]	; ae88 <bt_compidtostr@@Base+0x2e58>
    ab60:	cmp	r0, r3
    ab64:	beq	dbf4 <bt_compidtostr@@Base+0x5bc4>
    ab68:	cmp	r0, #932	; 0x3a4
    ab6c:	bcs	dc00 <bt_compidtostr@@Base+0x5bd0>
    ab70:	ldr	r0, [pc, #788]	; ae8c <bt_compidtostr@@Base+0x2e5c>
    ab74:	add	r0, pc, r0
    ab78:	bx	lr
    ab7c:	ldr	r3, [pc, #780]	; ae90 <bt_compidtostr@@Base+0x2e60>
    ab80:	cmp	r0, r3
    ab84:	beq	dc30 <bt_compidtostr@@Base+0x5c00>
    ab88:	bhi	abac <bt_compidtostr@@Base+0x2b7c>
    ab8c:	sub	r3, r3, #2
    ab90:	cmp	r0, r3
    ab94:	beq	dc18 <bt_compidtostr@@Base+0x5be8>
    ab98:	cmp	r0, #936	; 0x3a8
    ab9c:	bcs	dc24 <bt_compidtostr@@Base+0x5bf4>
    aba0:	ldr	r0, [pc, #748]	; ae94 <bt_compidtostr@@Base+0x2e64>
    aba4:	add	r0, pc, r0
    aba8:	bx	lr
    abac:	ldr	r3, [pc, #740]	; ae98 <bt_compidtostr@@Base+0x2e68>
    abb0:	cmp	r0, r3
    abb4:	beq	dc3c <bt_compidtostr@@Base+0x5c0c>
    abb8:	cmp	r0, #940	; 0x3ac
    abbc:	bcs	dc48 <bt_compidtostr@@Base+0x5c18>
    abc0:	ldr	r0, [pc, #724]	; ae9c <bt_compidtostr@@Base+0x2e6c>
    abc4:	add	r0, pc, r0
    abc8:	bx	lr
    abcc:	sub	r3, r3, #8
    abd0:	cmp	r0, r3
    abd4:	beq	dc9c <bt_compidtostr@@Base+0x5c6c>
    abd8:	bhi	ac2c <bt_compidtostr@@Base+0x2bfc>
    abdc:	sub	r3, r3, #4
    abe0:	cmp	r0, r3
    abe4:	beq	dc78 <bt_compidtostr@@Base+0x5c48>
    abe8:	bhi	ac0c <bt_compidtostr@@Base+0x2bdc>
    abec:	sub	r3, r3, #2
    abf0:	cmp	r0, r3
    abf4:	beq	dc60 <bt_compidtostr@@Base+0x5c30>
    abf8:	cmp	r0, #944	; 0x3b0
    abfc:	bcs	dc6c <bt_compidtostr@@Base+0x5c3c>
    ac00:	ldr	r0, [pc, #664]	; aea0 <bt_compidtostr@@Base+0x2e70>
    ac04:	add	r0, pc, r0
    ac08:	bx	lr
    ac0c:	ldr	r3, [pc, #656]	; aea4 <bt_compidtostr@@Base+0x2e74>
    ac10:	cmp	r0, r3
    ac14:	beq	dc84 <bt_compidtostr@@Base+0x5c54>
    ac18:	cmp	r0, #948	; 0x3b4
    ac1c:	bcs	dc90 <bt_compidtostr@@Base+0x5c60>
    ac20:	ldr	r0, [pc, #640]	; aea8 <bt_compidtostr@@Base+0x2e78>
    ac24:	add	r0, pc, r0
    ac28:	bx	lr
    ac2c:	ldr	r3, [pc, #632]	; aeac <bt_compidtostr@@Base+0x2e7c>
    ac30:	cmp	r0, r3
    ac34:	beq	dcc0 <bt_compidtostr@@Base+0x5c90>
    ac38:	bhi	ac5c <bt_compidtostr@@Base+0x2c2c>
    ac3c:	sub	r3, r3, #2
    ac40:	cmp	r0, r3
    ac44:	beq	dca8 <bt_compidtostr@@Base+0x5c78>
    ac48:	cmp	r0, #952	; 0x3b8
    ac4c:	bcs	dcb4 <bt_compidtostr@@Base+0x5c84>
    ac50:	ldr	r0, [pc, #600]	; aeb0 <bt_compidtostr@@Base+0x2e80>
    ac54:	add	r0, pc, r0
    ac58:	bx	lr
    ac5c:	ldr	r3, [pc, #592]	; aeb4 <bt_compidtostr@@Base+0x2e84>
    ac60:	cmp	r0, r3
    ac64:	beq	dccc <bt_compidtostr@@Base+0x5c9c>
    ac68:	cmp	r0, #956	; 0x3bc
    ac6c:	bcs	dcd8 <bt_compidtostr@@Base+0x5ca8>
    ac70:	ldr	r0, [pc, #576]	; aeb8 <bt_compidtostr@@Base+0x2e88>
    ac74:	add	r0, pc, r0
    ac78:	bx	lr
    ac7c:	muleq	r0, r0, lr
    ac80:	andeq	ip, r0, r8, lsl #18
    ac84:	andeq	r0, r0, pc, lsl #5
    ac88:	andeq	ip, r0, ip, lsl r9
    ac8c:	muleq	r0, r5, r2
    ac90:	andeq	ip, r0, r4, lsr r9
    ac94:	muleq	r0, r7, r2
    ac98:	andeq	ip, r0, ip, asr #18
    ac9c:	andeq	r0, r0, r1, lsr #5
    aca0:	andeq	ip, r0, ip, asr #18
    aca4:	muleq	r0, pc, r2	; <UNPREDICTABLE>
    aca8:	andeq	ip, r0, r4, lsl #19
    acac:	andeq	r0, r0, r5, lsr #5
    acb0:			; <UNDEFINED> instruction: 0x0000c9b0
    acb4:	andeq	r0, r0, r7, lsr #5
    acb8:	strdeq	ip, [r0], -r8
    acbc:	andeq	ip, r0, r8, lsl #20
    acc0:	andeq	r0, r0, pc, lsr #5
    acc4:	andeq	ip, r0, r8, lsr sl
    acc8:			; <UNDEFINED> instruction: 0x000002b5
    accc:	andeq	ip, r0, ip, asr sl
    acd0:			; <UNDEFINED> instruction: 0x000002b7
    acd4:	andeq	ip, r0, ip, lsl #21
    acd8:			; <UNDEFINED> instruction: 0x0000cab0
    acdc:			; <UNDEFINED> instruction: 0x000002bf
    ace0:	ldrdeq	ip, [r0], -r4
    ace4:	andeq	ip, r0, r4, lsl fp
    ace8:	andeq	r0, r0, sl, ror #5
    acec:	strdeq	r0, [r0], -sl
    acf0:	andeq	r0, r0, r2, lsl #6
    acf4:	andeq	r0, r0, r6, lsl #6
    acf8:	andeq	r0, r0, r9, lsl #6
    acfc:	andeq	sp, r0, ip, lsl r1
    ad00:	andeq	ip, r0, ip, ror #22
    ad04:	andeq	ip, r0, r4, asr #23
    ad08:	ldrdeq	r0, [r0], -r6
    ad0c:	andeq	ip, r0, r4, asr #23
    ad10:	strdeq	ip, [r0], -r4
    ad14:	andeq	r0, r0, r2, ror #5
    ad18:	andeq	ip, r0, r8, lsl #24
    ad1c:	andeq	ip, r0, r4, ror #24
    ad20:	andeq	r0, r0, r6, ror #5
    ad24:	muleq	r0, r0, ip
    ad28:	strdeq	ip, [r0], -r0
    ad2c:	andeq	ip, r0, ip, lsl sp
    ad30:	andeq	ip, r0, r8, asr sp
    ad34:	strdeq	r0, [r0], -r6
    ad38:	andeq	ip, r0, ip, ror sp
    ad3c:	andeq	ip, r0, r8, lsr #27
    ad40:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    ad44:	andeq	ip, r0, r8, asr #28
    ad48:	andeq	ip, r0, r4, lsl #29
    ad4c:	andeq	r0, r0, sp, lsl #7
    ad50:	andeq	r0, r0, fp, lsr r3
    ad54:	andeq	r0, r0, r3, asr #6
    ad58:	andeq	r0, r0, r7, asr #6
    ad5c:	andeq	r0, r0, r9, asr #6
    ad60:	andeq	sp, r0, r0, lsl r3
    ad64:	andeq	ip, r0, r0, lsr lr
    ad68:	andeq	r0, r0, r1, lsl r3
    ad6c:	andeq	ip, r0, ip, asr #28
    ad70:	andeq	r0, r0, r7, lsl r3
    ad74:	andeq	ip, r0, r8, ror #28
    ad78:	andeq	r0, r0, r9, lsl r3
    ad7c:			; <UNDEFINED> instruction: 0x0000ceb4
    ad80:	andeq	r0, r0, r3, lsr #6
    ad84:			; <UNDEFINED> instruction: 0x0000ceb8
    ad88:	andeq	r0, r0, r1, lsr #6
    ad8c:	andeq	ip, r0, r4, ror #29
    ad90:	andeq	r0, r0, r7, lsr #6
    ad94:	andeq	ip, r0, r8, lsl #30
    ad98:	andeq	r0, r0, r9, lsr #6
    ad9c:	andeq	ip, r0, r8, asr #30
    ada0:	andeq	ip, r0, r0, asr #30
    ada4:	andeq	r0, r0, r1, lsr r3
    ada8:	andeq	ip, r0, r4, ror #30
    adac:	andeq	r0, r0, r7, lsr r3
    adb0:	andeq	ip, r0, ip, lsl #31
    adb4:	andeq	r0, r0, r9, lsr r3
    adb8:	andeq	ip, r0, ip, lsr #31
    adbc:			; <UNDEFINED> instruction: 0x0000cfb4
    adc0:	andeq	r0, r0, r1, asr #6
    adc4:	andeq	ip, r0, r4, ror #31
    adc8:	andeq	sp, r0, r8, lsr #32
    adcc:	andeq	r0, r0, sl, lsl #7
    add0:	andeq	sp, r0, r4, asr r5
    add4:	andeq	r0, r0, lr, asr #6
    add8:	andeq	sp, r0, r8, lsl r0
    addc:	andeq	r0, r0, r2, asr r3
    ade0:	andeq	sp, r0, ip, asr r0
    ade4:	andeq	r0, r0, r6, asr r3
    ade8:	muleq	r0, r8, r0
    adec:	andeq	r0, r0, sl, asr r3
    adf0:	andeq	sp, r0, ip, asr #1
    adf4:	andeq	r0, r0, lr, asr r3
    adf8:	strdeq	sp, [r0], -r0
    adfc:	andeq	r0, r0, r2, ror #6
    ae00:	andeq	sp, r0, r8, lsl #2
    ae04:	andeq	r0, r0, r6, ror #6
    ae08:	andeq	sp, r0, r8, lsr #2
    ae0c:	andeq	r0, r0, sl, ror #6
    ae10:	andeq	sp, r0, r0, ror r1
    ae14:	andeq	r0, r0, lr, ror #6
    ae18:	andeq	sp, r0, ip, ror r1
    ae1c:	andeq	r0, r0, r2, ror r3
    ae20:	andeq	sp, r0, r0, lsr #3
    ae24:	andeq	r0, r0, r6, ror r3
    ae28:			; <UNDEFINED> instruction: 0x0000d1b8
    ae2c:	andeq	r0, r0, sl, ror r3
    ae30:	strdeq	sp, [r0], -r0
    ae34:	andeq	r0, r0, lr, ror r3
    ae38:	andeq	sp, r0, r8, lsr #4
    ae3c:	andeq	r0, r0, r2, lsl #7
    ae40:	andeq	sp, r0, r0, asr r2
    ae44:	andeq	r0, r0, r6, lsl #7
    ae48:	andeq	sp, r0, r8, lsl #5
    ae4c:	andeq	r0, r0, lr, asr #7
    ae50:			; <UNDEFINED> instruction: 0x000003bd
    ae54:	andeq	r0, r0, r5, asr #7
    ae58:	andeq	r0, r0, r9, asr #7
    ae5c:	andeq	r0, r0, fp, asr #7
    ae60:			; <UNDEFINED> instruction: 0x0000d7b8
    ae64:	andeq	sp, r0, r4, ror r2
    ae68:	muleq	r0, r3, r3
    ae6c:	muleq	r0, r0, r2
    ae70:	muleq	r0, r9, r3
    ae74:	muleq	r0, ip, r2
    ae78:	muleq	r0, fp, r3
    ae7c:	andeq	sp, r0, r0, asr #5
    ae80:	andeq	r0, r0, r5, lsr #7
    ae84:	andeq	sp, r0, r4, ror #5
    ae88:	andeq	r0, r0, r3, lsr #7
    ae8c:	andeq	sp, r0, r4, lsl r3
    ae90:	andeq	r0, r0, r9, lsr #7
    ae94:	andeq	sp, r0, r0, asr r3
    ae98:	andeq	r0, r0, fp, lsr #7
    ae9c:	andeq	sp, r0, r8, ror #6
    aea0:	andeq	sp, r0, r4, ror #6
    aea4:			; <UNDEFINED> instruction: 0x000003b3
    aea8:	andeq	sp, r0, r4, lsr #7
    aeac:			; <UNDEFINED> instruction: 0x000003b9
    aeb0:	ldrdeq	sp, [r0], -r4
    aeb4:			; <UNDEFINED> instruction: 0x000003bb
    aeb8:	strdeq	sp, [r0], -r0
    aebc:	andeq	ip, r0, r8, ror #29
    aec0:	andeq	r0, r0, r3, asr #7
    aec4:	andeq	ip, r0, r8, lsr #30
    aec8:	andeq	ip, r0, r0, ror #30
    aecc:	andeq	r0, r0, lr, ror #7
    aed0:	strdeq	r0, [r0], -lr
    aed4:	andeq	r0, r0, r6, lsl #8
    aed8:	andeq	r0, r0, sl, lsl #8
    aedc:	andeq	r0, r0, ip, lsl #8
    aee0:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    aee4:	muleq	r0, r0, r4
    aee8:	andeq	ip, r0, r0, ror #30
    aeec:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    aef0:	ldrdeq	r0, [r0], -sl
    aef4:			; <UNDEFINED> instruction: 0x0000cfbc
    aef8:	andeq	ip, r0, r4, ror #31
    aefc:	andeq	r0, r0, r6, ror #7
    af00:	strdeq	ip, [r0], -r8
    af04:	andeq	sp, r0, ip, asr #32
    af08:	andeq	r0, r0, sl, ror #7
    af0c:	andeq	sp, r0, r0, rrx
    af10:	strheq	sp, [r0], -r8
    af14:	andeq	sp, r0, ip, asr #1
    af18:	andeq	sp, r0, r0, lsl #2
    af1c:	strdeq	r0, [r0], -sl
    af20:	andeq	sp, r0, r4, lsr #2
    af24:	andeq	sp, r0, r4, ror #2
    af28:	andeq	sp, r0, ip, ror r1
    af2c:	andeq	r0, r0, r4, lsl #8
    af30:	andeq	sp, r0, r8, asr #3
    af34:	strdeq	sp, [r0], -r8
    af38:	andeq	r7, r0, r8, asr lr
    af3c:	andeq	r7, r0, r0, ror #28
    af40:	andeq	r7, r0, r0, ror #28
    af44:	andeq	r7, r0, r0, ror lr
    af48:	andeq	r7, r0, ip, ror #28
    af4c:	andeq	r7, r0, ip, ror #28
    af50:	andeq	r7, r0, r4, ror lr
    af54:	andeq	r7, r0, r4, lsl #29
    af58:	muleq	r0, r0, lr
    af5c:	andeq	r7, r0, r4, lsr #29
    af60:			; <UNDEFINED> instruction: 0x00007eb0
    af64:	ldrdeq	r7, [r0], -r8
    af68:	strdeq	r7, [r0], -r8
    af6c:	strdeq	r7, [r0], -ip
    af70:	strdeq	r7, [r0], -ip
    af74:	andeq	r7, r0, r4, lsr #30
    af78:	andeq	r7, r0, r8, lsr #30
    af7c:	andeq	r7, r0, r0, lsr pc
    af80:	andeq	r7, r0, r4, asr #30
    af84:	andeq	r7, r0, r8, asr pc
    af88:	andeq	r7, r0, ip, asr pc
    af8c:	andeq	r7, r0, r4, lsl #31
    af90:	andeq	r7, r0, r4, lsl #31
    af94:	andeq	r7, r0, r4, lsl #31
    af98:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    af9c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    afa0:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    afa4:			; <UNDEFINED> instruction: 0x00007fb8
    afa8:	andeq	r7, r0, r4, ror #31
    afac:	andeq	r7, r0, r8, ror #31
    afb0:	andeq	r8, r0, r0
    afb4:	andeq	r8, r0, r0
    afb8:	andeq	r8, r0, r0, lsl r0
    afbc:	andeq	r8, r0, ip, lsr #32
    afc0:	andeq	r8, r0, r4, lsr r0
    afc4:	andeq	r8, r0, r8, lsr r0
    afc8:	andeq	r8, r0, r8, asr r0
    afcc:	andeq	r8, r0, ip, asr r0
    afd0:	andeq	r8, r0, ip, rrx
    afd4:	muleq	r0, ip, r0
    afd8:	andeq	r8, r0, ip, lsr #1
    afdc:	andeq	r8, r0, r0, asr #1
    afe0:	ldrdeq	r8, [r0], -r4
    afe4:	andeq	r8, r0, ip, ror #1
    afe8:	andeq	r8, r0, ip, lsl #2
    afec:	andeq	r8, r0, r4, lsl r1
    aff0:	andeq	r8, r0, ip, lsr r1
    aff4:	andeq	r8, r0, r0, asr #2
    aff8:	andeq	r8, r0, r0, ror #2
    affc:	muleq	r0, r8, r1
    b000:			; <UNDEFINED> instruction: 0x000081b0
    b004:			; <UNDEFINED> instruction: 0x000081b0
    b008:	ldrdeq	r8, [r0], -r4
    b00c:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b010:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b014:	andeq	r8, r0, r0, lsl #4
    b018:	andeq	r8, r0, r0, lsl r2
    b01c:	andeq	r8, r0, r4, lsr #4
    b020:	andeq	r8, r0, r4, asr #4
    b024:	andeq	r8, r0, ip, asr #4
    b028:	andeq	r8, r0, r4, asr r2
    b02c:	andeq	r8, r0, r4, ror r2
    b030:	andeq	r8, r0, r8, ror r2
    b034:	andeq	r8, r0, ip, ror r2
    b038:	muleq	r0, r8, r2
    b03c:			; <UNDEFINED> instruction: 0x000082b0
    b040:	andeq	r8, r0, ip, asr #5
    b044:	andeq	r8, r0, r8, ror #5
    b048:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b04c:	andeq	r8, r0, ip, lsl #6
    b050:	andeq	r8, r0, r0, asr #6
    b054:	andeq	r8, r0, ip, asr #6
    b058:	andeq	r8, r0, r0, asr r3
    b05c:	andeq	r8, r0, r0, ror r3
    b060:	andeq	r8, r0, r4, ror r3
    b064:	andeq	r8, r0, r8, ror r3
    b068:	andeq	r8, r0, r0, lsr #7
    b06c:	andeq	r8, r0, r4, lsr #7
    b070:	andeq	r8, r0, r8, lsr #7
    b074:	andeq	r8, r0, r4, asr #7
    b078:	andeq	r8, r0, r8, asr #7
    b07c:	ldrdeq	r8, [r0], -r0
    b080:	strdeq	r8, [r0], -r4
    b084:	andeq	r8, r0, ip, lsl #8
    b088:	andeq	r8, r0, ip, lsl #8
    b08c:	andeq	r8, r0, r0, lsr #8
    b090:	andeq	r8, r0, r0, asr #8
    b094:	andeq	r8, r0, r8, asr #8
    b098:	andeq	r8, r0, r8, ror #8
    b09c:	andeq	r8, r0, r8, ror r4
    b0a0:	andeq	r8, r0, r0, lsl #9
    b0a4:	andeq	r8, r0, ip, lsl #9
    b0a8:	muleq	r0, ip, r4
    b0ac:	andeq	r8, r0, r8, lsr #9
    b0b0:	andeq	r8, r0, ip, lsr #9
    b0b4:			; <UNDEFINED> instruction: 0x000084bc
    b0b8:	ldrdeq	r8, [r0], -r4
    b0bc:	strdeq	r8, [r0], -ip
    b0c0:	andeq	r8, r0, r0, lsr #10
    b0c4:	andeq	r8, r0, r0, lsr r5
    b0c8:	andeq	r8, r0, r8, lsr r5
    b0cc:	andeq	r8, r0, ip, asr #10
    b0d0:	andeq	r8, r0, ip, asr r5
    b0d4:	andeq	r8, r0, r8, asr r5
    b0d8:	andeq	r8, r0, r4, ror #10
    b0dc:	andeq	r8, r0, r8, ror r5
    b0e0:			; <UNDEFINED> instruction: 0x000085bc
    b0e4:	ldrdeq	r8, [r0], -r0
    b0e8:	andeq	r8, r0, r0, lsl #12
    b0ec:	andeq	r8, r0, r0, lsl r6
    b0f0:	andeq	r8, r0, r0, asr #12
    b0f4:	andeq	r8, r0, r0, asr r6
    b0f8:	andeq	r8, r0, ip, asr r6
    b0fc:	andeq	r8, r0, ip, ror r6
    b100:	andeq	r8, r0, r4, lsl #13
    b104:	andeq	r8, r0, r8, lsl #13
    b108:	andeq	r8, r0, ip, lsr #13
    b10c:	ldrdeq	r8, [r0], -r4
    b110:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b114:	strdeq	r8, [r0], -r0
    b118:	strdeq	r8, [r0], -r0
    b11c:	andeq	r8, r0, r8, lsl #14
    b120:	andeq	r8, r0, r0, lsr r7
    b124:	andeq	r8, r0, r4, lsr r7
    b128:	andeq	r8, r0, r4, lsr r7
    b12c:	andeq	r8, r0, r0, asr r7
    b130:	andeq	r8, r0, r8, asr r7
    b134:	andeq	r8, r0, r0, ror #14
    b138:	andeq	r8, r0, ip, ror r7
    b13c:	muleq	r0, r4, r7
    b140:	andeq	r8, r0, r0, lsr #15
    b144:	andeq	r8, r0, r0, asr #15
    b148:			; <UNDEFINED> instruction: 0x000087bc
    b14c:	andeq	r8, r0, ip, asr #15
    b150:	andeq	r8, r0, r8, ror #15
    b154:	strdeq	r8, [r0], -ip
    b158:	andeq	r8, r0, ip, lsl #16
    b15c:	andeq	r8, r0, r4, lsr #16
    b160:	andeq	r8, r0, r4, lsr #16
    b164:	andeq	r8, r0, r0, asr #16
    b168:	andeq	r8, r0, r8, ror #16
    b16c:	andeq	r8, r0, r8, ror r8
    b170:	andeq	r8, r0, ip, ror r8
    b174:	andeq	r8, r0, r4, lsl #17
    b178:	andeq	r8, r0, r8, lsl #17
    b17c:	muleq	r0, r8, r8
    b180:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b184:	andeq	r8, r0, r4, ror #17
    b188:	andeq	r8, r0, r8, ror #17
    b18c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b190:	andeq	r8, r0, r4, lsl #18
    b194:	andeq	r8, r0, r4, lsl #18
    b198:	andeq	r8, r0, r0, lsl #18
    b19c:	andeq	r8, r0, r8, lsl #18
    b1a0:	andeq	r8, r0, r0, lsl r9
    b1a4:	andeq	r8, r0, r0, lsr #18
    b1a8:	andeq	r8, r0, r4, lsr r9
    b1ac:	andeq	r8, r0, r8, lsr r9
    b1b0:	sub	r3, r3, #4
    b1b4:	cmp	r0, r3
    b1b8:	beq	dd08 <bt_compidtostr@@Base+0x5cd8>
    b1bc:	bhi	b1e0 <bt_compidtostr@@Base+0x31b0>
    b1c0:	sub	r3, r3, #2
    b1c4:	cmp	r0, r3
    b1c8:	beq	dcf0 <bt_compidtostr@@Base+0x5cc0>
    b1cc:	cmp	r0, #960	; 0x3c0
    b1d0:	bcs	dcfc <bt_compidtostr@@Base+0x5ccc>
    b1d4:	ldr	r0, [pc, #-800]	; aebc <bt_compidtostr@@Base+0x2e8c>
    b1d8:	add	r0, pc, r0
    b1dc:	bx	lr
    b1e0:	ldr	r3, [pc, #-808]	; aec0 <bt_compidtostr@@Base+0x2e90>
    b1e4:	cmp	r0, r3
    b1e8:	beq	dd14 <bt_compidtostr@@Base+0x5ce4>
    b1ec:	cmp	r0, #964	; 0x3c4
    b1f0:	bcs	dd20 <bt_compidtostr@@Base+0x5cf0>
    b1f4:	ldr	r0, [pc, #-824]	; aec4 <bt_compidtostr@@Base+0x2e94>
    b1f8:	add	r0, pc, r0
    b1fc:	bx	lr
    b200:	sub	r3, r3, #2
    b204:	cmp	r0, r3
    b208:	beq	dd38 <bt_compidtostr@@Base+0x5d08>
    b20c:	cmp	r0, #968	; 0x3c8
    b210:	bcs	dd44 <bt_compidtostr@@Base+0x5d14>
    b214:	ldr	r0, [pc, #-852]	; aec8 <bt_compidtostr@@Base+0x2e98>
    b218:	add	r0, pc, r0
    b21c:	bx	lr
    b220:	ldr	r3, [pc, #-860]	; aecc <bt_compidtostr@@Base+0x2e9c>
    b224:	cmp	r0, r3
    b228:	beq	dea0 <bt_compidtostr@@Base+0x5e70>
    b22c:	bls	b294 <bt_compidtostr@@Base+0x3264>
    b230:	ldr	r3, [pc, #-872]	; aed0 <bt_compidtostr@@Base+0x2ea0>
    b234:	cmp	r0, r3
    b238:	beq	df30 <bt_compidtostr@@Base+0x5f00>
    b23c:	bls	b3c4 <bt_compidtostr@@Base+0x3394>
    b240:	ldr	r3, [pc, #-884]	; aed4 <bt_compidtostr@@Base+0x2ea4>
    b244:	cmp	r0, r3
    b248:	beq	e2dc <bt_compidtostr@@Base+0x62ac>
    b24c:	bls	b454 <bt_compidtostr@@Base+0x3424>
    b250:	ldr	r3, [pc, #-896]	; aed8 <bt_compidtostr@@Base+0x2ea8>
    b254:	cmp	r0, r3
    b258:	beq	e300 <bt_compidtostr@@Base+0x62d0>
    b25c:	bls	b498 <bt_compidtostr@@Base+0x3468>
    b260:	ldr	r3, [pc, #-908]	; aedc <bt_compidtostr@@Base+0x2eac>
    b264:	cmp	r0, r3
    b268:	beq	e318 <bt_compidtostr@@Base+0x62e8>
    b26c:	bcc	e30c <bt_compidtostr@@Base+0x62dc>
    b270:	add	r3, r3, #1
    b274:	cmp	r0, r3
    b278:	beq	e324 <bt_compidtostr@@Base+0x62f4>
    b27c:	ldr	r3, [pc, #-932]	; aee0 <bt_compidtostr@@Base+0x2eb0>
    b280:	cmp	r0, r3
    b284:	bne	e330 <bt_compidtostr@@Base+0x6300>
    b288:	ldr	r0, [pc, #-940]	; aee4 <bt_compidtostr@@Base+0x2eb4>
    b28c:	add	r0, pc, r0
    b290:	bx	lr
    b294:	sub	r3, r3, #16
    b298:	cmp	r0, r3
    b29c:	beq	de10 <bt_compidtostr@@Base+0x5de0>
    b2a0:	bhi	b334 <bt_compidtostr@@Base+0x3304>
    b2a4:	sub	r3, r3, #8
    b2a8:	cmp	r0, r3
    b2ac:	beq	ddc8 <bt_compidtostr@@Base+0x5d98>
    b2b0:	bhi	b2f4 <bt_compidtostr@@Base+0x32c4>
    b2b4:	sub	r3, r3, #4
    b2b8:	cmp	r0, r3
    b2bc:	beq	dda4 <bt_compidtostr@@Base+0x5d74>
    b2c0:	bhi	b2dc <bt_compidtostr@@Base+0x32ac>
    b2c4:	cmp	r0, #976	; 0x3d0
    b2c8:	beq	dd8c <bt_compidtostr@@Base+0x5d5c>
    b2cc:	bhi	dd98 <bt_compidtostr@@Base+0x5d68>
    b2d0:	ldr	r0, [pc, #-1008]	; aee8 <bt_compidtostr@@Base+0x2eb8>
    b2d4:	add	r0, pc, r0
    b2d8:	bx	lr
    b2dc:	cmp	r0, #980	; 0x3d4
    b2e0:	beq	ddb0 <bt_compidtostr@@Base+0x5d80>
    b2e4:	bhi	ddbc <bt_compidtostr@@Base+0x5d8c>
    b2e8:	ldr	r0, [pc, #-1028]	; aeec <bt_compidtostr@@Base+0x2ebc>
    b2ec:	add	r0, pc, r0
    b2f0:	bx	lr
    b2f4:	ldr	r3, [pc, #-1036]	; aef0 <bt_compidtostr@@Base+0x2ec0>
    b2f8:	cmp	r0, r3
    b2fc:	beq	ddec <bt_compidtostr@@Base+0x5dbc>
    b300:	bhi	b31c <bt_compidtostr@@Base+0x32ec>
    b304:	cmp	r0, #984	; 0x3d8
    b308:	beq	ddd4 <bt_compidtostr@@Base+0x5da4>
    b30c:	bhi	dde0 <bt_compidtostr@@Base+0x5db0>
    b310:	ldr	r0, [pc, #-1060]	; aef4 <bt_compidtostr@@Base+0x2ec4>
    b314:	add	r0, pc, r0
    b318:	bx	lr
    b31c:	cmp	r0, #988	; 0x3dc
    b320:	beq	ddf8 <bt_compidtostr@@Base+0x5dc8>
    b324:	bhi	de04 <bt_compidtostr@@Base+0x5dd4>
    b328:	ldr	r0, [pc, #-1080]	; aef8 <bt_compidtostr@@Base+0x2ec8>
    b32c:	add	r0, pc, r0
    b330:	bx	lr
    b334:	ldr	r3, [pc, #-1088]	; aefc <bt_compidtostr@@Base+0x2ecc>
    b338:	cmp	r0, r3
    b33c:	beq	de58 <bt_compidtostr@@Base+0x5e28>
    b340:	bhi	b384 <bt_compidtostr@@Base+0x3354>
    b344:	sub	r3, r3, #4
    b348:	cmp	r0, r3
    b34c:	beq	de34 <bt_compidtostr@@Base+0x5e04>
    b350:	bhi	b36c <bt_compidtostr@@Base+0x333c>
    b354:	cmp	r0, #992	; 0x3e0
    b358:	beq	de1c <bt_compidtostr@@Base+0x5dec>
    b35c:	bhi	de28 <bt_compidtostr@@Base+0x5df8>
    b360:	ldr	r0, [pc, #-1128]	; af00 <bt_compidtostr@@Base+0x2ed0>
    b364:	add	r0, pc, r0
    b368:	bx	lr
    b36c:	cmp	r0, #996	; 0x3e4
    b370:	beq	de40 <bt_compidtostr@@Base+0x5e10>
    b374:	bhi	de4c <bt_compidtostr@@Base+0x5e1c>
    b378:	ldr	r0, [pc, #-1148]	; af04 <bt_compidtostr@@Base+0x2ed4>
    b37c:	add	r0, pc, r0
    b380:	bx	lr
    b384:	ldr	r3, [pc, #-1156]	; af08 <bt_compidtostr@@Base+0x2ed8>
    b388:	cmp	r0, r3
    b38c:	beq	de7c <bt_compidtostr@@Base+0x5e4c>
    b390:	bhi	b3ac <bt_compidtostr@@Base+0x337c>
    b394:	cmp	r0, #1000	; 0x3e8
    b398:	beq	de64 <bt_compidtostr@@Base+0x5e34>
    b39c:	bhi	de70 <bt_compidtostr@@Base+0x5e40>
    b3a0:	ldr	r0, [pc, #-1180]	; af0c <bt_compidtostr@@Base+0x2edc>
    b3a4:	add	r0, pc, r0
    b3a8:	bx	lr
    b3ac:	cmp	r0, #1004	; 0x3ec
    b3b0:	beq	de88 <bt_compidtostr@@Base+0x5e58>
    b3b4:	bhi	de94 <bt_compidtostr@@Base+0x5e64>
    b3b8:	ldr	r0, [pc, #-1200]	; af10 <bt_compidtostr@@Base+0x2ee0>
    b3bc:	add	r0, pc, r0
    b3c0:	bx	lr
    b3c4:	sub	r3, r3, #8
    b3c8:	cmp	r0, r3
    b3cc:	beq	dee8 <bt_compidtostr@@Base+0x5eb8>
    b3d0:	bhi	b414 <bt_compidtostr@@Base+0x33e4>
    b3d4:	sub	r3, r3, #4
    b3d8:	cmp	r0, r3
    b3dc:	beq	dec4 <bt_compidtostr@@Base+0x5e94>
    b3e0:	bhi	b3fc <bt_compidtostr@@Base+0x33cc>
    b3e4:	cmp	r0, #1008	; 0x3f0
    b3e8:	beq	deac <bt_compidtostr@@Base+0x5e7c>
    b3ec:	bhi	deb8 <bt_compidtostr@@Base+0x5e88>
    b3f0:	ldr	r0, [pc, #-1252]	; af14 <bt_compidtostr@@Base+0x2ee4>
    b3f4:	add	r0, pc, r0
    b3f8:	bx	lr
    b3fc:	cmp	r0, #1012	; 0x3f4
    b400:	beq	ded0 <bt_compidtostr@@Base+0x5ea0>
    b404:	bhi	dedc <bt_compidtostr@@Base+0x5eac>
    b408:	ldr	r0, [pc, #-1272]	; af18 <bt_compidtostr@@Base+0x2ee8>
    b40c:	add	r0, pc, r0
    b410:	bx	lr
    b414:	ldr	r3, [pc, #-1280]	; af1c <bt_compidtostr@@Base+0x2eec>
    b418:	cmp	r0, r3
    b41c:	beq	df0c <bt_compidtostr@@Base+0x5edc>
    b420:	bhi	b43c <bt_compidtostr@@Base+0x340c>
    b424:	cmp	r0, #1016	; 0x3f8
    b428:	beq	def4 <bt_compidtostr@@Base+0x5ec4>
    b42c:	bhi	df00 <bt_compidtostr@@Base+0x5ed0>
    b430:	ldr	r0, [pc, #-1304]	; af20 <bt_compidtostr@@Base+0x2ef0>
    b434:	add	r0, pc, r0
    b438:	bx	lr
    b43c:	cmp	r0, #1020	; 0x3fc
    b440:	beq	df18 <bt_compidtostr@@Base+0x5ee8>
    b444:	bhi	df24 <bt_compidtostr@@Base+0x5ef4>
    b448:	ldr	r0, [pc, #-1324]	; af24 <bt_compidtostr@@Base+0x2ef4>
    b44c:	add	r0, pc, r0
    b450:	bx	lr
    b454:	sub	r3, r3, #4
    b458:	cmp	r0, r3
    b45c:	beq	e2b8 <bt_compidtostr@@Base+0x6288>
    b460:	bhi	b47c <bt_compidtostr@@Base+0x344c>
    b464:	cmp	r0, #1024	; 0x400
    b468:	beq	e2a0 <bt_compidtostr@@Base+0x6270>
    b46c:	bhi	e2ac <bt_compidtostr@@Base+0x627c>
    b470:	ldr	r0, [pc, #-1360]	; af28 <bt_compidtostr@@Base+0x2ef8>
    b474:	add	r0, pc, r0
    b478:	bx	lr
    b47c:	ldr	r3, [pc, #-1368]	; af2c <bt_compidtostr@@Base+0x2efc>
    b480:	cmp	r0, r3
    b484:	beq	e2c4 <bt_compidtostr@@Base+0x6294>
    b488:	bhi	e2d0 <bt_compidtostr@@Base+0x62a0>
    b48c:	ldr	r0, [pc, #-1380]	; af30 <bt_compidtostr@@Base+0x2f00>
    b490:	add	r0, pc, r0
    b494:	bx	lr
    b498:	sub	r3, r3, #2
    b49c:	cmp	r0, r3
    b4a0:	beq	e2e8 <bt_compidtostr@@Base+0x62b8>
    b4a4:	bhi	e2f4 <bt_compidtostr@@Base+0x62c4>
    b4a8:	ldr	r0, [pc, #-1404]	; af34 <bt_compidtostr@@Base+0x2f04>
    b4ac:	add	r0, pc, r0
    b4b0:	bx	lr
    b4b4:	ldr	r0, [pc, #-1412]	; af38 <bt_compidtostr@@Base+0x2f08>
    b4b8:	add	r0, pc, r0
    b4bc:	bx	lr
    b4c0:	ldr	r0, [pc, #-1420]	; af3c <bt_compidtostr@@Base+0x2f0c>
    b4c4:	add	r0, pc, r0
    b4c8:	bx	lr
    b4cc:	ldr	r0, [pc, #-1428]	; af40 <bt_compidtostr@@Base+0x2f10>
    b4d0:	add	r0, pc, r0
    b4d4:	bx	lr
    b4d8:	ldr	r0, [pc, #-1436]	; af44 <bt_compidtostr@@Base+0x2f14>
    b4dc:	add	r0, pc, r0
    b4e0:	bx	lr
    b4e4:	ldr	r0, [pc, #-1444]	; af48 <bt_compidtostr@@Base+0x2f18>
    b4e8:	add	r0, pc, r0
    b4ec:	bx	lr
    b4f0:	ldr	r0, [pc, #-1452]	; af4c <bt_compidtostr@@Base+0x2f1c>
    b4f4:	add	r0, pc, r0
    b4f8:	bx	lr
    b4fc:	ldr	r0, [pc, #-1460]	; af50 <bt_compidtostr@@Base+0x2f20>
    b500:	add	r0, pc, r0
    b504:	bx	lr
    b508:	ldr	r0, [pc, #-1468]	; af54 <bt_compidtostr@@Base+0x2f24>
    b50c:	add	r0, pc, r0
    b510:	bx	lr
    b514:	ldr	r0, [pc, #-1476]	; af58 <bt_compidtostr@@Base+0x2f28>
    b518:	add	r0, pc, r0
    b51c:	bx	lr
    b520:	ldr	r0, [pc, #-1484]	; af5c <bt_compidtostr@@Base+0x2f2c>
    b524:	add	r0, pc, r0
    b528:	bx	lr
    b52c:	ldr	r0, [pc, #-1492]	; af60 <bt_compidtostr@@Base+0x2f30>
    b530:	add	r0, pc, r0
    b534:	bx	lr
    b538:	ldr	r0, [pc, #-1500]	; af64 <bt_compidtostr@@Base+0x2f34>
    b53c:	add	r0, pc, r0
    b540:	bx	lr
    b544:	ldr	r0, [pc, #-1508]	; af68 <bt_compidtostr@@Base+0x2f38>
    b548:	add	r0, pc, r0
    b54c:	bx	lr
    b550:	ldr	r0, [pc, #-1516]	; af6c <bt_compidtostr@@Base+0x2f3c>
    b554:	add	r0, pc, r0
    b558:	bx	lr
    b55c:	ldr	r0, [pc, #-1524]	; af70 <bt_compidtostr@@Base+0x2f40>
    b560:	add	r0, pc, r0
    b564:	bx	lr
    b568:	ldr	r0, [pc, #-1532]	; af74 <bt_compidtostr@@Base+0x2f44>
    b56c:	add	r0, pc, r0
    b570:	bx	lr
    b574:	ldr	r0, [pc, #-1540]	; af78 <bt_compidtostr@@Base+0x2f48>
    b578:	add	r0, pc, r0
    b57c:	bx	lr
    b580:	ldr	r0, [pc, #-1548]	; af7c <bt_compidtostr@@Base+0x2f4c>
    b584:	add	r0, pc, r0
    b588:	bx	lr
    b58c:	ldr	r0, [pc, #-1556]	; af80 <bt_compidtostr@@Base+0x2f50>
    b590:	add	r0, pc, r0
    b594:	bx	lr
    b598:	ldr	r0, [pc, #-1564]	; af84 <bt_compidtostr@@Base+0x2f54>
    b59c:	add	r0, pc, r0
    b5a0:	bx	lr
    b5a4:	ldr	r0, [pc, #-1572]	; af88 <bt_compidtostr@@Base+0x2f58>
    b5a8:	add	r0, pc, r0
    b5ac:	bx	lr
    b5b0:	ldr	r0, [pc, #-1580]	; af8c <bt_compidtostr@@Base+0x2f5c>
    b5b4:	add	r0, pc, r0
    b5b8:	bx	lr
    b5bc:	ldr	r0, [pc, #-1588]	; af90 <bt_compidtostr@@Base+0x2f60>
    b5c0:	add	r0, pc, r0
    b5c4:	bx	lr
    b5c8:	ldr	r0, [pc, #-1596]	; af94 <bt_compidtostr@@Base+0x2f64>
    b5cc:	add	r0, pc, r0
    b5d0:	bx	lr
    b5d4:	ldr	r0, [pc, #-1604]	; af98 <bt_compidtostr@@Base+0x2f68>
    b5d8:	add	r0, pc, r0
    b5dc:	bx	lr
    b5e0:	ldr	r0, [pc, #-1612]	; af9c <bt_compidtostr@@Base+0x2f6c>
    b5e4:	add	r0, pc, r0
    b5e8:	bx	lr
    b5ec:	ldr	r0, [pc, #-1620]	; afa0 <bt_compidtostr@@Base+0x2f70>
    b5f0:	add	r0, pc, r0
    b5f4:	bx	lr
    b5f8:	ldr	r0, [pc, #-1628]	; afa4 <bt_compidtostr@@Base+0x2f74>
    b5fc:	add	r0, pc, r0
    b600:	bx	lr
    b604:	ldr	r0, [pc, #-1636]	; afa8 <bt_compidtostr@@Base+0x2f78>
    b608:	add	r0, pc, r0
    b60c:	bx	lr
    b610:	ldr	r0, [pc, #-1644]	; afac <bt_compidtostr@@Base+0x2f7c>
    b614:	add	r0, pc, r0
    b618:	bx	lr
    b61c:	ldr	r0, [pc, #-1652]	; afb0 <bt_compidtostr@@Base+0x2f80>
    b620:	add	r0, pc, r0
    b624:	bx	lr
    b628:	ldr	r0, [pc, #-1660]	; afb4 <bt_compidtostr@@Base+0x2f84>
    b62c:	add	r0, pc, r0
    b630:	bx	lr
    b634:	ldr	r0, [pc, #-1668]	; afb8 <bt_compidtostr@@Base+0x2f88>
    b638:	add	r0, pc, r0
    b63c:	bx	lr
    b640:	ldr	r0, [pc, #-1676]	; afbc <bt_compidtostr@@Base+0x2f8c>
    b644:	add	r0, pc, r0
    b648:	bx	lr
    b64c:	ldr	r0, [pc, #-1684]	; afc0 <bt_compidtostr@@Base+0x2f90>
    b650:	add	r0, pc, r0
    b654:	bx	lr
    b658:	ldr	r0, [pc, #-1692]	; afc4 <bt_compidtostr@@Base+0x2f94>
    b65c:	add	r0, pc, r0
    b660:	bx	lr
    b664:	ldr	r0, [pc, #-1700]	; afc8 <bt_compidtostr@@Base+0x2f98>
    b668:	add	r0, pc, r0
    b66c:	bx	lr
    b670:	ldr	r0, [pc, #-1708]	; afcc <bt_compidtostr@@Base+0x2f9c>
    b674:	add	r0, pc, r0
    b678:	bx	lr
    b67c:	ldr	r0, [pc, #-1716]	; afd0 <bt_compidtostr@@Base+0x2fa0>
    b680:	add	r0, pc, r0
    b684:	bx	lr
    b688:	ldr	r0, [pc, #-1724]	; afd4 <bt_compidtostr@@Base+0x2fa4>
    b68c:	add	r0, pc, r0
    b690:	bx	lr
    b694:	ldr	r0, [pc, #-1732]	; afd8 <bt_compidtostr@@Base+0x2fa8>
    b698:	add	r0, pc, r0
    b69c:	bx	lr
    b6a0:	ldr	r0, [pc, #-1740]	; afdc <bt_compidtostr@@Base+0x2fac>
    b6a4:	add	r0, pc, r0
    b6a8:	bx	lr
    b6ac:	ldr	r0, [pc, #-1748]	; afe0 <bt_compidtostr@@Base+0x2fb0>
    b6b0:	add	r0, pc, r0
    b6b4:	bx	lr
    b6b8:	ldr	r0, [pc, #-1756]	; afe4 <bt_compidtostr@@Base+0x2fb4>
    b6bc:	add	r0, pc, r0
    b6c0:	bx	lr
    b6c4:	ldr	r0, [pc, #-1764]	; afe8 <bt_compidtostr@@Base+0x2fb8>
    b6c8:	add	r0, pc, r0
    b6cc:	bx	lr
    b6d0:	ldr	r0, [pc, #-1772]	; afec <bt_compidtostr@@Base+0x2fbc>
    b6d4:	add	r0, pc, r0
    b6d8:	bx	lr
    b6dc:	ldr	r0, [pc, #-1780]	; aff0 <bt_compidtostr@@Base+0x2fc0>
    b6e0:	add	r0, pc, r0
    b6e4:	bx	lr
    b6e8:	ldr	r0, [pc, #-1788]	; aff4 <bt_compidtostr@@Base+0x2fc4>
    b6ec:	add	r0, pc, r0
    b6f0:	bx	lr
    b6f4:	ldr	r0, [pc, #-1796]	; aff8 <bt_compidtostr@@Base+0x2fc8>
    b6f8:	add	r0, pc, r0
    b6fc:	bx	lr
    b700:	ldr	r0, [pc, #-1804]	; affc <bt_compidtostr@@Base+0x2fcc>
    b704:	add	r0, pc, r0
    b708:	bx	lr
    b70c:	ldr	r0, [pc, #-1812]	; b000 <bt_compidtostr@@Base+0x2fd0>
    b710:	add	r0, pc, r0
    b714:	bx	lr
    b718:	ldr	r0, [pc, #-1820]	; b004 <bt_compidtostr@@Base+0x2fd4>
    b71c:	add	r0, pc, r0
    b720:	bx	lr
    b724:	ldr	r0, [pc, #-1828]	; b008 <bt_compidtostr@@Base+0x2fd8>
    b728:	add	r0, pc, r0
    b72c:	bx	lr
    b730:	ldr	r0, [pc, #-1836]	; b00c <bt_compidtostr@@Base+0x2fdc>
    b734:	add	r0, pc, r0
    b738:	bx	lr
    b73c:	ldr	r0, [pc, #-1844]	; b010 <bt_compidtostr@@Base+0x2fe0>
    b740:	add	r0, pc, r0
    b744:	bx	lr
    b748:	ldr	r0, [pc, #-1852]	; b014 <bt_compidtostr@@Base+0x2fe4>
    b74c:	add	r0, pc, r0
    b750:	bx	lr
    b754:	ldr	r0, [pc, #-1860]	; b018 <bt_compidtostr@@Base+0x2fe8>
    b758:	add	r0, pc, r0
    b75c:	bx	lr
    b760:	ldr	r0, [pc, #-1868]	; b01c <bt_compidtostr@@Base+0x2fec>
    b764:	add	r0, pc, r0
    b768:	bx	lr
    b76c:	ldr	r0, [pc, #-1876]	; b020 <bt_compidtostr@@Base+0x2ff0>
    b770:	add	r0, pc, r0
    b774:	bx	lr
    b778:	ldr	r0, [pc, #-1884]	; b024 <bt_compidtostr@@Base+0x2ff4>
    b77c:	add	r0, pc, r0
    b780:	bx	lr
    b784:	ldr	r0, [pc, #-1892]	; b028 <bt_compidtostr@@Base+0x2ff8>
    b788:	add	r0, pc, r0
    b78c:	bx	lr
    b790:	ldr	r0, [pc, #-1900]	; b02c <bt_compidtostr@@Base+0x2ffc>
    b794:	add	r0, pc, r0
    b798:	bx	lr
    b79c:	ldr	r0, [pc, #-1908]	; b030 <bt_compidtostr@@Base+0x3000>
    b7a0:	add	r0, pc, r0
    b7a4:	bx	lr
    b7a8:	ldr	r0, [pc, #-1916]	; b034 <bt_compidtostr@@Base+0x3004>
    b7ac:	add	r0, pc, r0
    b7b0:	bx	lr
    b7b4:	ldr	r0, [pc, #-1924]	; b038 <bt_compidtostr@@Base+0x3008>
    b7b8:	add	r0, pc, r0
    b7bc:	bx	lr
    b7c0:	ldr	r0, [pc, #-1932]	; b03c <bt_compidtostr@@Base+0x300c>
    b7c4:	add	r0, pc, r0
    b7c8:	bx	lr
    b7cc:	ldr	r0, [pc, #-1940]	; b040 <bt_compidtostr@@Base+0x3010>
    b7d0:	add	r0, pc, r0
    b7d4:	bx	lr
    b7d8:	ldr	r0, [pc, #-1948]	; b044 <bt_compidtostr@@Base+0x3014>
    b7dc:	add	r0, pc, r0
    b7e0:	bx	lr
    b7e4:	ldr	r0, [pc, #-1956]	; b048 <bt_compidtostr@@Base+0x3018>
    b7e8:	add	r0, pc, r0
    b7ec:	bx	lr
    b7f0:	ldr	r0, [pc, #-1964]	; b04c <bt_compidtostr@@Base+0x301c>
    b7f4:	add	r0, pc, r0
    b7f8:	bx	lr
    b7fc:	ldr	r0, [pc, #-1972]	; b050 <bt_compidtostr@@Base+0x3020>
    b800:	add	r0, pc, r0
    b804:	bx	lr
    b808:	ldr	r0, [pc, #-1980]	; b054 <bt_compidtostr@@Base+0x3024>
    b80c:	add	r0, pc, r0
    b810:	bx	lr
    b814:	ldr	r0, [pc, #-1988]	; b058 <bt_compidtostr@@Base+0x3028>
    b818:	add	r0, pc, r0
    b81c:	bx	lr
    b820:	ldr	r0, [pc, #-1996]	; b05c <bt_compidtostr@@Base+0x302c>
    b824:	add	r0, pc, r0
    b828:	bx	lr
    b82c:	ldr	r0, [pc, #-2004]	; b060 <bt_compidtostr@@Base+0x3030>
    b830:	add	r0, pc, r0
    b834:	bx	lr
    b838:	ldr	r0, [pc, #-2012]	; b064 <bt_compidtostr@@Base+0x3034>
    b83c:	add	r0, pc, r0
    b840:	bx	lr
    b844:	ldr	r0, [pc, #-2020]	; b068 <bt_compidtostr@@Base+0x3038>
    b848:	add	r0, pc, r0
    b84c:	bx	lr
    b850:	ldr	r0, [pc, #-2028]	; b06c <bt_compidtostr@@Base+0x303c>
    b854:	add	r0, pc, r0
    b858:	bx	lr
    b85c:	ldr	r0, [pc, #-2036]	; b070 <bt_compidtostr@@Base+0x3040>
    b860:	add	r0, pc, r0
    b864:	bx	lr
    b868:	ldr	r0, [pc, #-2044]	; b074 <bt_compidtostr@@Base+0x3044>
    b86c:	add	r0, pc, r0
    b870:	bx	lr
    b874:	ldr	r0, [pc, #-2052]	; b078 <bt_compidtostr@@Base+0x3048>
    b878:	add	r0, pc, r0
    b87c:	bx	lr
    b880:	ldr	r0, [pc, #-2060]	; b07c <bt_compidtostr@@Base+0x304c>
    b884:	add	r0, pc, r0
    b888:	bx	lr
    b88c:	ldr	r0, [pc, #-2068]	; b080 <bt_compidtostr@@Base+0x3050>
    b890:	add	r0, pc, r0
    b894:	bx	lr
    b898:	ldr	r0, [pc, #-2076]	; b084 <bt_compidtostr@@Base+0x3054>
    b89c:	add	r0, pc, r0
    b8a0:	bx	lr
    b8a4:	ldr	r0, [pc, #-2084]	; b088 <bt_compidtostr@@Base+0x3058>
    b8a8:	add	r0, pc, r0
    b8ac:	bx	lr
    b8b0:	ldr	r0, [pc, #-2092]	; b08c <bt_compidtostr@@Base+0x305c>
    b8b4:	add	r0, pc, r0
    b8b8:	bx	lr
    b8bc:	ldr	r0, [pc, #-2100]	; b090 <bt_compidtostr@@Base+0x3060>
    b8c0:	add	r0, pc, r0
    b8c4:	bx	lr
    b8c8:	ldr	r0, [pc, #-2108]	; b094 <bt_compidtostr@@Base+0x3064>
    b8cc:	add	r0, pc, r0
    b8d0:	bx	lr
    b8d4:	ldr	r0, [pc, #-2116]	; b098 <bt_compidtostr@@Base+0x3068>
    b8d8:	add	r0, pc, r0
    b8dc:	bx	lr
    b8e0:	ldr	r0, [pc, #-2124]	; b09c <bt_compidtostr@@Base+0x306c>
    b8e4:	add	r0, pc, r0
    b8e8:	bx	lr
    b8ec:	ldr	r0, [pc, #-2132]	; b0a0 <bt_compidtostr@@Base+0x3070>
    b8f0:	add	r0, pc, r0
    b8f4:	bx	lr
    b8f8:	ldr	r0, [pc, #-2140]	; b0a4 <bt_compidtostr@@Base+0x3074>
    b8fc:	add	r0, pc, r0
    b900:	bx	lr
    b904:	ldr	r0, [pc, #-2148]	; b0a8 <bt_compidtostr@@Base+0x3078>
    b908:	add	r0, pc, r0
    b90c:	bx	lr
    b910:	ldr	r0, [pc, #-2156]	; b0ac <bt_compidtostr@@Base+0x307c>
    b914:	add	r0, pc, r0
    b918:	bx	lr
    b91c:	ldr	r0, [pc, #-2164]	; b0b0 <bt_compidtostr@@Base+0x3080>
    b920:	add	r0, pc, r0
    b924:	bx	lr
    b928:	ldr	r0, [pc, #-2172]	; b0b4 <bt_compidtostr@@Base+0x3084>
    b92c:	add	r0, pc, r0
    b930:	bx	lr
    b934:	ldr	r0, [pc, #-2180]	; b0b8 <bt_compidtostr@@Base+0x3088>
    b938:	add	r0, pc, r0
    b93c:	bx	lr
    b940:	ldr	r0, [pc, #-2188]	; b0bc <bt_compidtostr@@Base+0x308c>
    b944:	add	r0, pc, r0
    b948:	bx	lr
    b94c:	ldr	r0, [pc, #-2196]	; b0c0 <bt_compidtostr@@Base+0x3090>
    b950:	add	r0, pc, r0
    b954:	bx	lr
    b958:	ldr	r0, [pc, #-2204]	; b0c4 <bt_compidtostr@@Base+0x3094>
    b95c:	add	r0, pc, r0
    b960:	bx	lr
    b964:	ldr	r0, [pc, #-2212]	; b0c8 <bt_compidtostr@@Base+0x3098>
    b968:	add	r0, pc, r0
    b96c:	bx	lr
    b970:	ldr	r0, [pc, #-2220]	; b0cc <bt_compidtostr@@Base+0x309c>
    b974:	add	r0, pc, r0
    b978:	bx	lr
    b97c:	ldr	r0, [pc, #-2228]	; b0d0 <bt_compidtostr@@Base+0x30a0>
    b980:	add	r0, pc, r0
    b984:	bx	lr
    b988:	ldr	r0, [pc, #-2236]	; b0d4 <bt_compidtostr@@Base+0x30a4>
    b98c:	add	r0, pc, r0
    b990:	bx	lr
    b994:	ldr	r0, [pc, #-2244]	; b0d8 <bt_compidtostr@@Base+0x30a8>
    b998:	add	r0, pc, r0
    b99c:	bx	lr
    b9a0:	ldr	r0, [pc, #-2252]	; b0dc <bt_compidtostr@@Base+0x30ac>
    b9a4:	add	r0, pc, r0
    b9a8:	bx	lr
    b9ac:	ldr	r0, [pc, #-2260]	; b0e0 <bt_compidtostr@@Base+0x30b0>
    b9b0:	add	r0, pc, r0
    b9b4:	bx	lr
    b9b8:	ldr	r0, [pc, #-2268]	; b0e4 <bt_compidtostr@@Base+0x30b4>
    b9bc:	add	r0, pc, r0
    b9c0:	bx	lr
    b9c4:	ldr	r0, [pc, #-2276]	; b0e8 <bt_compidtostr@@Base+0x30b8>
    b9c8:	add	r0, pc, r0
    b9cc:	bx	lr
    b9d0:	ldr	r0, [pc, #-2284]	; b0ec <bt_compidtostr@@Base+0x30bc>
    b9d4:	add	r0, pc, r0
    b9d8:	bx	lr
    b9dc:	ldr	r0, [pc, #-2292]	; b0f0 <bt_compidtostr@@Base+0x30c0>
    b9e0:	add	r0, pc, r0
    b9e4:	bx	lr
    b9e8:	ldr	r0, [pc, #-2300]	; b0f4 <bt_compidtostr@@Base+0x30c4>
    b9ec:	add	r0, pc, r0
    b9f0:	bx	lr
    b9f4:	ldr	r0, [pc, #-2308]	; b0f8 <bt_compidtostr@@Base+0x30c8>
    b9f8:	add	r0, pc, r0
    b9fc:	bx	lr
    ba00:	ldr	r0, [pc, #-2316]	; b0fc <bt_compidtostr@@Base+0x30cc>
    ba04:	add	r0, pc, r0
    ba08:	bx	lr
    ba0c:	ldr	r0, [pc, #-2324]	; b100 <bt_compidtostr@@Base+0x30d0>
    ba10:	add	r0, pc, r0
    ba14:	bx	lr
    ba18:	ldr	r0, [pc, #-2332]	; b104 <bt_compidtostr@@Base+0x30d4>
    ba1c:	add	r0, pc, r0
    ba20:	bx	lr
    ba24:	ldr	r0, [pc, #-2340]	; b108 <bt_compidtostr@@Base+0x30d8>
    ba28:	add	r0, pc, r0
    ba2c:	bx	lr
    ba30:	ldr	r0, [pc, #-2348]	; b10c <bt_compidtostr@@Base+0x30dc>
    ba34:	add	r0, pc, r0
    ba38:	bx	lr
    ba3c:	ldr	r0, [pc, #-2356]	; b110 <bt_compidtostr@@Base+0x30e0>
    ba40:	add	r0, pc, r0
    ba44:	bx	lr
    ba48:	ldr	r0, [pc, #-2364]	; b114 <bt_compidtostr@@Base+0x30e4>
    ba4c:	add	r0, pc, r0
    ba50:	bx	lr
    ba54:	ldr	r0, [pc, #-2372]	; b118 <bt_compidtostr@@Base+0x30e8>
    ba58:	add	r0, pc, r0
    ba5c:	bx	lr
    ba60:	ldr	r0, [pc, #-2380]	; b11c <bt_compidtostr@@Base+0x30ec>
    ba64:	add	r0, pc, r0
    ba68:	bx	lr
    ba6c:	ldr	r0, [pc, #-2388]	; b120 <bt_compidtostr@@Base+0x30f0>
    ba70:	add	r0, pc, r0
    ba74:	bx	lr
    ba78:	ldr	r0, [pc, #-2396]	; b124 <bt_compidtostr@@Base+0x30f4>
    ba7c:	add	r0, pc, r0
    ba80:	bx	lr
    ba84:	ldr	r0, [pc, #-2404]	; b128 <bt_compidtostr@@Base+0x30f8>
    ba88:	add	r0, pc, r0
    ba8c:	bx	lr
    ba90:	ldr	r0, [pc, #-2412]	; b12c <bt_compidtostr@@Base+0x30fc>
    ba94:	add	r0, pc, r0
    ba98:	bx	lr
    ba9c:	ldr	r0, [pc, #-2420]	; b130 <bt_compidtostr@@Base+0x3100>
    baa0:	add	r0, pc, r0
    baa4:	bx	lr
    baa8:	ldr	r0, [pc, #-2428]	; b134 <bt_compidtostr@@Base+0x3104>
    baac:	add	r0, pc, r0
    bab0:	bx	lr
    bab4:	ldr	r0, [pc, #-2436]	; b138 <bt_compidtostr@@Base+0x3108>
    bab8:	add	r0, pc, r0
    babc:	bx	lr
    bac0:	ldr	r0, [pc, #-2444]	; b13c <bt_compidtostr@@Base+0x310c>
    bac4:	add	r0, pc, r0
    bac8:	bx	lr
    bacc:	ldr	r0, [pc, #-2452]	; b140 <bt_compidtostr@@Base+0x3110>
    bad0:	add	r0, pc, r0
    bad4:	bx	lr
    bad8:	ldr	r0, [pc, #-2460]	; b144 <bt_compidtostr@@Base+0x3114>
    badc:	add	r0, pc, r0
    bae0:	bx	lr
    bae4:	ldr	r0, [pc, #-2468]	; b148 <bt_compidtostr@@Base+0x3118>
    bae8:	add	r0, pc, r0
    baec:	bx	lr
    baf0:	ldr	r0, [pc, #-2476]	; b14c <bt_compidtostr@@Base+0x311c>
    baf4:	add	r0, pc, r0
    baf8:	bx	lr
    bafc:	ldr	r0, [pc, #-2484]	; b150 <bt_compidtostr@@Base+0x3120>
    bb00:	add	r0, pc, r0
    bb04:	bx	lr
    bb08:	ldr	r0, [pc, #-2492]	; b154 <bt_compidtostr@@Base+0x3124>
    bb0c:	add	r0, pc, r0
    bb10:	bx	lr
    bb14:	ldr	r0, [pc, #-2500]	; b158 <bt_compidtostr@@Base+0x3128>
    bb18:	add	r0, pc, r0
    bb1c:	bx	lr
    bb20:	ldr	r0, [pc, #-2508]	; b15c <bt_compidtostr@@Base+0x312c>
    bb24:	add	r0, pc, r0
    bb28:	bx	lr
    bb2c:	ldr	r0, [pc, #-2516]	; b160 <bt_compidtostr@@Base+0x3130>
    bb30:	add	r0, pc, r0
    bb34:	bx	lr
    bb38:	ldr	r0, [pc, #-2524]	; b164 <bt_compidtostr@@Base+0x3134>
    bb3c:	add	r0, pc, r0
    bb40:	bx	lr
    bb44:	ldr	r0, [pc, #-2532]	; b168 <bt_compidtostr@@Base+0x3138>
    bb48:	add	r0, pc, r0
    bb4c:	bx	lr
    bb50:	ldr	r0, [pc, #-2540]	; b16c <bt_compidtostr@@Base+0x313c>
    bb54:	add	r0, pc, r0
    bb58:	bx	lr
    bb5c:	ldr	r0, [pc, #-2548]	; b170 <bt_compidtostr@@Base+0x3140>
    bb60:	add	r0, pc, r0
    bb64:	bx	lr
    bb68:	ldr	r0, [pc, #-2556]	; b174 <bt_compidtostr@@Base+0x3144>
    bb6c:	add	r0, pc, r0
    bb70:	bx	lr
    bb74:	ldr	r0, [pc, #-2564]	; b178 <bt_compidtostr@@Base+0x3148>
    bb78:	add	r0, pc, r0
    bb7c:	bx	lr
    bb80:	ldr	r0, [pc, #-2572]	; b17c <bt_compidtostr@@Base+0x314c>
    bb84:	add	r0, pc, r0
    bb88:	bx	lr
    bb8c:	ldr	r0, [pc, #-2580]	; b180 <bt_compidtostr@@Base+0x3150>
    bb90:	add	r0, pc, r0
    bb94:	bx	lr
    bb98:	ldr	r0, [pc, #-2588]	; b184 <bt_compidtostr@@Base+0x3154>
    bb9c:	add	r0, pc, r0
    bba0:	bx	lr
    bba4:	ldr	r0, [pc, #-2596]	; b188 <bt_compidtostr@@Base+0x3158>
    bba8:	add	r0, pc, r0
    bbac:	bx	lr
    bbb0:	ldr	r0, [pc, #-2604]	; b18c <bt_compidtostr@@Base+0x315c>
    bbb4:	add	r0, pc, r0
    bbb8:	bx	lr
    bbbc:	ldr	r0, [pc, #-2612]	; b190 <bt_compidtostr@@Base+0x3160>
    bbc0:	add	r0, pc, r0
    bbc4:	bx	lr
    bbc8:	ldr	r0, [pc, #-2620]	; b194 <bt_compidtostr@@Base+0x3164>
    bbcc:	add	r0, pc, r0
    bbd0:	bx	lr
    bbd4:	ldr	r0, [pc, #-2628]	; b198 <bt_compidtostr@@Base+0x3168>
    bbd8:	add	r0, pc, r0
    bbdc:	bx	lr
    bbe0:	ldr	r0, [pc, #-2636]	; b19c <bt_compidtostr@@Base+0x316c>
    bbe4:	add	r0, pc, r0
    bbe8:	bx	lr
    bbec:	ldr	r0, [pc, #-2644]	; b1a0 <bt_compidtostr@@Base+0x3170>
    bbf0:	add	r0, pc, r0
    bbf4:	bx	lr
    bbf8:	ldr	r0, [pc, #-2652]	; b1a4 <bt_compidtostr@@Base+0x3174>
    bbfc:	add	r0, pc, r0
    bc00:	bx	lr
    bc04:	ldr	r0, [pc, #-2660]	; b1a8 <bt_compidtostr@@Base+0x3178>
    bc08:	add	r0, pc, r0
    bc0c:	bx	lr
    bc10:	ldr	r0, [pc, #-2668]	; b1ac <bt_compidtostr@@Base+0x317c>
    bc14:	add	r0, pc, r0
    bc18:	bx	lr
    bc1c:	ldr	r0, [pc, #2440]	; c5ac <bt_compidtostr@@Base+0x457c>
    bc20:	add	r0, pc, r0
    bc24:	bx	lr
    bc28:	ldr	r0, [pc, #2432]	; c5b0 <bt_compidtostr@@Base+0x4580>
    bc2c:	add	r0, pc, r0
    bc30:	bx	lr
    bc34:	ldr	r0, [pc, #2424]	; c5b4 <bt_compidtostr@@Base+0x4584>
    bc38:	add	r0, pc, r0
    bc3c:	bx	lr
    bc40:	ldr	r0, [pc, #2416]	; c5b8 <bt_compidtostr@@Base+0x4588>
    bc44:	add	r0, pc, r0
    bc48:	bx	lr
    bc4c:	ldr	r0, [pc, #2408]	; c5bc <bt_compidtostr@@Base+0x458c>
    bc50:	add	r0, pc, r0
    bc54:	bx	lr
    bc58:	ldr	r0, [pc, #2400]	; c5c0 <bt_compidtostr@@Base+0x4590>
    bc5c:	add	r0, pc, r0
    bc60:	bx	lr
    bc64:	ldr	r0, [pc, #2392]	; c5c4 <bt_compidtostr@@Base+0x4594>
    bc68:	add	r0, pc, r0
    bc6c:	bx	lr
    bc70:	ldr	r0, [pc, #2384]	; c5c8 <bt_compidtostr@@Base+0x4598>
    bc74:	add	r0, pc, r0
    bc78:	bx	lr
    bc7c:	ldr	r0, [pc, #2376]	; c5cc <bt_compidtostr@@Base+0x459c>
    bc80:	add	r0, pc, r0
    bc84:	bx	lr
    bc88:	ldr	r0, [pc, #2368]	; c5d0 <bt_compidtostr@@Base+0x45a0>
    bc8c:	add	r0, pc, r0
    bc90:	bx	lr
    bc94:	ldr	r0, [pc, #2360]	; c5d4 <bt_compidtostr@@Base+0x45a4>
    bc98:	add	r0, pc, r0
    bc9c:	bx	lr
    bca0:	ldr	r0, [pc, #2352]	; c5d8 <bt_compidtostr@@Base+0x45a8>
    bca4:	add	r0, pc, r0
    bca8:	bx	lr
    bcac:	ldr	r0, [pc, #2344]	; c5dc <bt_compidtostr@@Base+0x45ac>
    bcb0:	add	r0, pc, r0
    bcb4:	bx	lr
    bcb8:	ldr	r0, [pc, #2336]	; c5e0 <bt_compidtostr@@Base+0x45b0>
    bcbc:	add	r0, pc, r0
    bcc0:	bx	lr
    bcc4:	ldr	r0, [pc, #2328]	; c5e4 <bt_compidtostr@@Base+0x45b4>
    bcc8:	add	r0, pc, r0
    bccc:	bx	lr
    bcd0:	ldr	r0, [pc, #2320]	; c5e8 <bt_compidtostr@@Base+0x45b8>
    bcd4:	add	r0, pc, r0
    bcd8:	bx	lr
    bcdc:	ldr	r0, [pc, #2312]	; c5ec <bt_compidtostr@@Base+0x45bc>
    bce0:	add	r0, pc, r0
    bce4:	bx	lr
    bce8:	ldr	r0, [pc, #2304]	; c5f0 <bt_compidtostr@@Base+0x45c0>
    bcec:	add	r0, pc, r0
    bcf0:	bx	lr
    bcf4:	ldr	r0, [pc, #2296]	; c5f4 <bt_compidtostr@@Base+0x45c4>
    bcf8:	add	r0, pc, r0
    bcfc:	bx	lr
    bd00:	ldr	r0, [pc, #2288]	; c5f8 <bt_compidtostr@@Base+0x45c8>
    bd04:	add	r0, pc, r0
    bd08:	bx	lr
    bd0c:	ldr	r0, [pc, #2280]	; c5fc <bt_compidtostr@@Base+0x45cc>
    bd10:	add	r0, pc, r0
    bd14:	bx	lr
    bd18:	ldr	r0, [pc, #2272]	; c600 <bt_compidtostr@@Base+0x45d0>
    bd1c:	add	r0, pc, r0
    bd20:	bx	lr
    bd24:	ldr	r0, [pc, #2264]	; c604 <bt_compidtostr@@Base+0x45d4>
    bd28:	add	r0, pc, r0
    bd2c:	bx	lr
    bd30:	ldr	r0, [pc, #2256]	; c608 <bt_compidtostr@@Base+0x45d8>
    bd34:	add	r0, pc, r0
    bd38:	bx	lr
    bd3c:	ldr	r0, [pc, #2248]	; c60c <bt_compidtostr@@Base+0x45dc>
    bd40:	add	r0, pc, r0
    bd44:	bx	lr
    bd48:	ldr	r0, [pc, #2240]	; c610 <bt_compidtostr@@Base+0x45e0>
    bd4c:	add	r0, pc, r0
    bd50:	bx	lr
    bd54:	ldr	r0, [pc, #2232]	; c614 <bt_compidtostr@@Base+0x45e4>
    bd58:	add	r0, pc, r0
    bd5c:	bx	lr
    bd60:	ldr	r0, [pc, #2224]	; c618 <bt_compidtostr@@Base+0x45e8>
    bd64:	add	r0, pc, r0
    bd68:	bx	lr
    bd6c:	ldr	r0, [pc, #2216]	; c61c <bt_compidtostr@@Base+0x45ec>
    bd70:	add	r0, pc, r0
    bd74:	bx	lr
    bd78:	ldr	r0, [pc, #2208]	; c620 <bt_compidtostr@@Base+0x45f0>
    bd7c:	add	r0, pc, r0
    bd80:	bx	lr
    bd84:	ldr	r0, [pc, #2200]	; c624 <bt_compidtostr@@Base+0x45f4>
    bd88:	add	r0, pc, r0
    bd8c:	bx	lr
    bd90:	ldr	r0, [pc, #2192]	; c628 <bt_compidtostr@@Base+0x45f8>
    bd94:	add	r0, pc, r0
    bd98:	bx	lr
    bd9c:	ldr	r0, [pc, #2184]	; c62c <bt_compidtostr@@Base+0x45fc>
    bda0:	add	r0, pc, r0
    bda4:	bx	lr
    bda8:	ldr	r0, [pc, #2176]	; c630 <bt_compidtostr@@Base+0x4600>
    bdac:	add	r0, pc, r0
    bdb0:	bx	lr
    bdb4:	ldr	r0, [pc, #2168]	; c634 <bt_compidtostr@@Base+0x4604>
    bdb8:	add	r0, pc, r0
    bdbc:	bx	lr
    bdc0:	ldr	r0, [pc, #2160]	; c638 <bt_compidtostr@@Base+0x4608>
    bdc4:	add	r0, pc, r0
    bdc8:	bx	lr
    bdcc:	ldr	r0, [pc, #2152]	; c63c <bt_compidtostr@@Base+0x460c>
    bdd0:	add	r0, pc, r0
    bdd4:	bx	lr
    bdd8:	ldr	r0, [pc, #2144]	; c640 <bt_compidtostr@@Base+0x4610>
    bddc:	add	r0, pc, r0
    bde0:	bx	lr
    bde4:	ldr	r0, [pc, #2136]	; c644 <bt_compidtostr@@Base+0x4614>
    bde8:	add	r0, pc, r0
    bdec:	bx	lr
    bdf0:	ldr	r0, [pc, #2128]	; c648 <bt_compidtostr@@Base+0x4618>
    bdf4:	add	r0, pc, r0
    bdf8:	bx	lr
    bdfc:	ldr	r0, [pc, #2120]	; c64c <bt_compidtostr@@Base+0x461c>
    be00:	add	r0, pc, r0
    be04:	bx	lr
    be08:	ldr	r0, [pc, #2112]	; c650 <bt_compidtostr@@Base+0x4620>
    be0c:	add	r0, pc, r0
    be10:	bx	lr
    be14:	ldr	r0, [pc, #2104]	; c654 <bt_compidtostr@@Base+0x4624>
    be18:	add	r0, pc, r0
    be1c:	bx	lr
    be20:	ldr	r0, [pc, #2096]	; c658 <bt_compidtostr@@Base+0x4628>
    be24:	add	r0, pc, r0
    be28:	bx	lr
    be2c:	ldr	r0, [pc, #2088]	; c65c <bt_compidtostr@@Base+0x462c>
    be30:	add	r0, pc, r0
    be34:	bx	lr
    be38:	ldr	r0, [pc, #2080]	; c660 <bt_compidtostr@@Base+0x4630>
    be3c:	add	r0, pc, r0
    be40:	bx	lr
    be44:	ldr	r0, [pc, #2072]	; c664 <bt_compidtostr@@Base+0x4634>
    be48:	add	r0, pc, r0
    be4c:	bx	lr
    be50:	ldr	r0, [pc, #2064]	; c668 <bt_compidtostr@@Base+0x4638>
    be54:	add	r0, pc, r0
    be58:	bx	lr
    be5c:	ldr	r0, [pc, #2056]	; c66c <bt_compidtostr@@Base+0x463c>
    be60:	add	r0, pc, r0
    be64:	bx	lr
    be68:	ldr	r0, [pc, #2048]	; c670 <bt_compidtostr@@Base+0x4640>
    be6c:	add	r0, pc, r0
    be70:	bx	lr
    be74:	ldr	r0, [pc, #2040]	; c674 <bt_compidtostr@@Base+0x4644>
    be78:	add	r0, pc, r0
    be7c:	bx	lr
    be80:	ldr	r0, [pc, #2032]	; c678 <bt_compidtostr@@Base+0x4648>
    be84:	add	r0, pc, r0
    be88:	bx	lr
    be8c:	ldr	r0, [pc, #2024]	; c67c <bt_compidtostr@@Base+0x464c>
    be90:	add	r0, pc, r0
    be94:	bx	lr
    be98:	ldr	r0, [pc, #2016]	; c680 <bt_compidtostr@@Base+0x4650>
    be9c:	add	r0, pc, r0
    bea0:	bx	lr
    bea4:	ldr	r0, [pc, #2008]	; c684 <bt_compidtostr@@Base+0x4654>
    bea8:	add	r0, pc, r0
    beac:	bx	lr
    beb0:	ldr	r0, [pc, #2000]	; c688 <bt_compidtostr@@Base+0x4658>
    beb4:	add	r0, pc, r0
    beb8:	bx	lr
    bebc:	ldr	r0, [pc, #1992]	; c68c <bt_compidtostr@@Base+0x465c>
    bec0:	add	r0, pc, r0
    bec4:	bx	lr
    bec8:	ldr	r0, [pc, #1984]	; c690 <bt_compidtostr@@Base+0x4660>
    becc:	add	r0, pc, r0
    bed0:	bx	lr
    bed4:	ldr	r0, [pc, #1976]	; c694 <bt_compidtostr@@Base+0x4664>
    bed8:	add	r0, pc, r0
    bedc:	bx	lr
    bee0:	ldr	r0, [pc, #1968]	; c698 <bt_compidtostr@@Base+0x4668>
    bee4:	add	r0, pc, r0
    bee8:	bx	lr
    beec:	ldr	r0, [pc, #1960]	; c69c <bt_compidtostr@@Base+0x466c>
    bef0:	add	r0, pc, r0
    bef4:	bx	lr
    bef8:	ldr	r0, [pc, #1952]	; c6a0 <bt_compidtostr@@Base+0x4670>
    befc:	add	r0, pc, r0
    bf00:	bx	lr
    bf04:	ldr	r0, [pc, #1944]	; c6a4 <bt_compidtostr@@Base+0x4674>
    bf08:	add	r0, pc, r0
    bf0c:	bx	lr
    bf10:	ldr	r0, [pc, #1936]	; c6a8 <bt_compidtostr@@Base+0x4678>
    bf14:	add	r0, pc, r0
    bf18:	bx	lr
    bf1c:	ldr	r0, [pc, #1928]	; c6ac <bt_compidtostr@@Base+0x467c>
    bf20:	add	r0, pc, r0
    bf24:	bx	lr
    bf28:	ldr	r0, [pc, #1920]	; c6b0 <bt_compidtostr@@Base+0x4680>
    bf2c:	add	r0, pc, r0
    bf30:	bx	lr
    bf34:	ldr	r0, [pc, #1912]	; c6b4 <bt_compidtostr@@Base+0x4684>
    bf38:	add	r0, pc, r0
    bf3c:	bx	lr
    bf40:	ldr	r0, [pc, #1904]	; c6b8 <bt_compidtostr@@Base+0x4688>
    bf44:	add	r0, pc, r0
    bf48:	bx	lr
    bf4c:	ldr	r0, [pc, #1896]	; c6bc <bt_compidtostr@@Base+0x468c>
    bf50:	add	r0, pc, r0
    bf54:	bx	lr
    bf58:	ldr	r0, [pc, #1888]	; c6c0 <bt_compidtostr@@Base+0x4690>
    bf5c:	add	r0, pc, r0
    bf60:	bx	lr
    bf64:	ldr	r0, [pc, #1880]	; c6c4 <bt_compidtostr@@Base+0x4694>
    bf68:	add	r0, pc, r0
    bf6c:	bx	lr
    bf70:	ldr	r0, [pc, #1872]	; c6c8 <bt_compidtostr@@Base+0x4698>
    bf74:	add	r0, pc, r0
    bf78:	bx	lr
    bf7c:	ldr	r0, [pc, #1864]	; c6cc <bt_compidtostr@@Base+0x469c>
    bf80:	add	r0, pc, r0
    bf84:	bx	lr
    bf88:	ldr	r0, [pc, #1856]	; c6d0 <bt_compidtostr@@Base+0x46a0>
    bf8c:	add	r0, pc, r0
    bf90:	bx	lr
    bf94:	ldr	r0, [pc, #1848]	; c6d4 <bt_compidtostr@@Base+0x46a4>
    bf98:	add	r0, pc, r0
    bf9c:	bx	lr
    bfa0:	ldr	r0, [pc, #1840]	; c6d8 <bt_compidtostr@@Base+0x46a8>
    bfa4:	add	r0, pc, r0
    bfa8:	bx	lr
    bfac:	ldr	r0, [pc, #1832]	; c6dc <bt_compidtostr@@Base+0x46ac>
    bfb0:	add	r0, pc, r0
    bfb4:	bx	lr
    bfb8:	ldr	r0, [pc, #1824]	; c6e0 <bt_compidtostr@@Base+0x46b0>
    bfbc:	add	r0, pc, r0
    bfc0:	bx	lr
    bfc4:	ldr	r0, [pc, #1816]	; c6e4 <bt_compidtostr@@Base+0x46b4>
    bfc8:	add	r0, pc, r0
    bfcc:	bx	lr
    bfd0:	ldr	r0, [pc, #1808]	; c6e8 <bt_compidtostr@@Base+0x46b8>
    bfd4:	add	r0, pc, r0
    bfd8:	bx	lr
    bfdc:	ldr	r0, [pc, #1800]	; c6ec <bt_compidtostr@@Base+0x46bc>
    bfe0:	add	r0, pc, r0
    bfe4:	bx	lr
    bfe8:	ldr	r0, [pc, #1792]	; c6f0 <bt_compidtostr@@Base+0x46c0>
    bfec:	add	r0, pc, r0
    bff0:	bx	lr
    bff4:	ldr	r0, [pc, #1784]	; c6f4 <bt_compidtostr@@Base+0x46c4>
    bff8:	add	r0, pc, r0
    bffc:	bx	lr
    c000:	ldr	r0, [pc, #1776]	; c6f8 <bt_compidtostr@@Base+0x46c8>
    c004:	add	r0, pc, r0
    c008:	bx	lr
    c00c:	ldr	r0, [pc, #1768]	; c6fc <bt_compidtostr@@Base+0x46cc>
    c010:	add	r0, pc, r0
    c014:	bx	lr
    c018:	ldr	r0, [pc, #1760]	; c700 <bt_compidtostr@@Base+0x46d0>
    c01c:	add	r0, pc, r0
    c020:	bx	lr
    c024:	ldr	r0, [pc, #1752]	; c704 <bt_compidtostr@@Base+0x46d4>
    c028:	add	r0, pc, r0
    c02c:	bx	lr
    c030:	ldr	r0, [pc, #1744]	; c708 <bt_compidtostr@@Base+0x46d8>
    c034:	add	r0, pc, r0
    c038:	bx	lr
    c03c:	ldr	r0, [pc, #1736]	; c70c <bt_compidtostr@@Base+0x46dc>
    c040:	add	r0, pc, r0
    c044:	bx	lr
    c048:	ldr	r0, [pc, #1728]	; c710 <bt_compidtostr@@Base+0x46e0>
    c04c:	add	r0, pc, r0
    c050:	bx	lr
    c054:	ldr	r0, [pc, #1720]	; c714 <bt_compidtostr@@Base+0x46e4>
    c058:	add	r0, pc, r0
    c05c:	bx	lr
    c060:	ldr	r0, [pc, #1712]	; c718 <bt_compidtostr@@Base+0x46e8>
    c064:	add	r0, pc, r0
    c068:	bx	lr
    c06c:	ldr	r0, [pc, #1704]	; c71c <bt_compidtostr@@Base+0x46ec>
    c070:	add	r0, pc, r0
    c074:	bx	lr
    c078:	ldr	r0, [pc, #1696]	; c720 <bt_compidtostr@@Base+0x46f0>
    c07c:	add	r0, pc, r0
    c080:	bx	lr
    c084:	ldr	r0, [pc, #1688]	; c724 <bt_compidtostr@@Base+0x46f4>
    c088:	add	r0, pc, r0
    c08c:	bx	lr
    c090:	ldr	r0, [pc, #1680]	; c728 <bt_compidtostr@@Base+0x46f8>
    c094:	add	r0, pc, r0
    c098:	bx	lr
    c09c:	ldr	r0, [pc, #1672]	; c72c <bt_compidtostr@@Base+0x46fc>
    c0a0:	add	r0, pc, r0
    c0a4:	bx	lr
    c0a8:	ldr	r0, [pc, #1664]	; c730 <bt_compidtostr@@Base+0x4700>
    c0ac:	add	r0, pc, r0
    c0b0:	bx	lr
    c0b4:	ldr	r0, [pc, #1656]	; c734 <bt_compidtostr@@Base+0x4704>
    c0b8:	add	r0, pc, r0
    c0bc:	bx	lr
    c0c0:	ldr	r0, [pc, #1648]	; c738 <bt_compidtostr@@Base+0x4708>
    c0c4:	add	r0, pc, r0
    c0c8:	bx	lr
    c0cc:	ldr	r0, [pc, #1640]	; c73c <bt_compidtostr@@Base+0x470c>
    c0d0:	add	r0, pc, r0
    c0d4:	bx	lr
    c0d8:	ldr	r0, [pc, #1632]	; c740 <bt_compidtostr@@Base+0x4710>
    c0dc:	add	r0, pc, r0
    c0e0:	bx	lr
    c0e4:	ldr	r0, [pc, #1624]	; c744 <bt_compidtostr@@Base+0x4714>
    c0e8:	add	r0, pc, r0
    c0ec:	bx	lr
    c0f0:	ldr	r0, [pc, #1616]	; c748 <bt_compidtostr@@Base+0x4718>
    c0f4:	add	r0, pc, r0
    c0f8:	bx	lr
    c0fc:	ldr	r0, [pc, #1608]	; c74c <bt_compidtostr@@Base+0x471c>
    c100:	add	r0, pc, r0
    c104:	bx	lr
    c108:	ldr	r0, [pc, #1600]	; c750 <bt_compidtostr@@Base+0x4720>
    c10c:	add	r0, pc, r0
    c110:	bx	lr
    c114:	ldr	r0, [pc, #1592]	; c754 <bt_compidtostr@@Base+0x4724>
    c118:	add	r0, pc, r0
    c11c:	bx	lr
    c120:	ldr	r0, [pc, #1584]	; c758 <bt_compidtostr@@Base+0x4728>
    c124:	add	r0, pc, r0
    c128:	bx	lr
    c12c:	ldr	r0, [pc, #1576]	; c75c <bt_compidtostr@@Base+0x472c>
    c130:	add	r0, pc, r0
    c134:	bx	lr
    c138:	ldr	r0, [pc, #1568]	; c760 <bt_compidtostr@@Base+0x4730>
    c13c:	add	r0, pc, r0
    c140:	bx	lr
    c144:	ldr	r0, [pc, #1560]	; c764 <bt_compidtostr@@Base+0x4734>
    c148:	add	r0, pc, r0
    c14c:	bx	lr
    c150:	ldr	r0, [pc, #1552]	; c768 <bt_compidtostr@@Base+0x4738>
    c154:	add	r0, pc, r0
    c158:	bx	lr
    c15c:	ldr	r0, [pc, #1544]	; c76c <bt_compidtostr@@Base+0x473c>
    c160:	add	r0, pc, r0
    c164:	bx	lr
    c168:	ldr	r0, [pc, #1536]	; c770 <bt_compidtostr@@Base+0x4740>
    c16c:	add	r0, pc, r0
    c170:	bx	lr
    c174:	ldr	r0, [pc, #1528]	; c774 <bt_compidtostr@@Base+0x4744>
    c178:	add	r0, pc, r0
    c17c:	bx	lr
    c180:	ldr	r0, [pc, #1520]	; c778 <bt_compidtostr@@Base+0x4748>
    c184:	add	r0, pc, r0
    c188:	bx	lr
    c18c:	ldr	r0, [pc, #1512]	; c77c <bt_compidtostr@@Base+0x474c>
    c190:	add	r0, pc, r0
    c194:	bx	lr
    c198:	ldr	r0, [pc, #1504]	; c780 <bt_compidtostr@@Base+0x4750>
    c19c:	add	r0, pc, r0
    c1a0:	bx	lr
    c1a4:	ldr	r0, [pc, #1496]	; c784 <bt_compidtostr@@Base+0x4754>
    c1a8:	add	r0, pc, r0
    c1ac:	bx	lr
    c1b0:	ldr	r0, [pc, #1488]	; c788 <bt_compidtostr@@Base+0x4758>
    c1b4:	add	r0, pc, r0
    c1b8:	bx	lr
    c1bc:	ldr	r0, [pc, #1480]	; c78c <bt_compidtostr@@Base+0x475c>
    c1c0:	add	r0, pc, r0
    c1c4:	bx	lr
    c1c8:	ldr	r0, [pc, #1472]	; c790 <bt_compidtostr@@Base+0x4760>
    c1cc:	add	r0, pc, r0
    c1d0:	bx	lr
    c1d4:	ldr	r0, [pc, #1464]	; c794 <bt_compidtostr@@Base+0x4764>
    c1d8:	add	r0, pc, r0
    c1dc:	bx	lr
    c1e0:	ldr	r0, [pc, #1456]	; c798 <bt_compidtostr@@Base+0x4768>
    c1e4:	add	r0, pc, r0
    c1e8:	bx	lr
    c1ec:	ldr	r0, [pc, #1448]	; c79c <bt_compidtostr@@Base+0x476c>
    c1f0:	add	r0, pc, r0
    c1f4:	bx	lr
    c1f8:	ldr	r0, [pc, #1440]	; c7a0 <bt_compidtostr@@Base+0x4770>
    c1fc:	add	r0, pc, r0
    c200:	bx	lr
    c204:	ldr	r0, [pc, #1432]	; c7a4 <bt_compidtostr@@Base+0x4774>
    c208:	add	r0, pc, r0
    c20c:	bx	lr
    c210:	ldr	r0, [pc, #1424]	; c7a8 <bt_compidtostr@@Base+0x4778>
    c214:	add	r0, pc, r0
    c218:	bx	lr
    c21c:	ldr	r0, [pc, #1416]	; c7ac <bt_compidtostr@@Base+0x477c>
    c220:	add	r0, pc, r0
    c224:	bx	lr
    c228:	ldr	r0, [pc, #1408]	; c7b0 <bt_compidtostr@@Base+0x4780>
    c22c:	add	r0, pc, r0
    c230:	bx	lr
    c234:	ldr	r0, [pc, #1400]	; c7b4 <bt_compidtostr@@Base+0x4784>
    c238:	add	r0, pc, r0
    c23c:	bx	lr
    c240:	ldr	r0, [pc, #1392]	; c7b8 <bt_compidtostr@@Base+0x4788>
    c244:	add	r0, pc, r0
    c248:	bx	lr
    c24c:	ldr	r0, [pc, #1384]	; c7bc <bt_compidtostr@@Base+0x478c>
    c250:	add	r0, pc, r0
    c254:	bx	lr
    c258:	ldr	r0, [pc, #1376]	; c7c0 <bt_compidtostr@@Base+0x4790>
    c25c:	add	r0, pc, r0
    c260:	bx	lr
    c264:	ldr	r0, [pc, #1368]	; c7c4 <bt_compidtostr@@Base+0x4794>
    c268:	add	r0, pc, r0
    c26c:	bx	lr
    c270:	ldr	r0, [pc, #1360]	; c7c8 <bt_compidtostr@@Base+0x4798>
    c274:	add	r0, pc, r0
    c278:	bx	lr
    c27c:	ldr	r0, [pc, #1352]	; c7cc <bt_compidtostr@@Base+0x479c>
    c280:	add	r0, pc, r0
    c284:	bx	lr
    c288:	ldr	r0, [pc, #1344]	; c7d0 <bt_compidtostr@@Base+0x47a0>
    c28c:	add	r0, pc, r0
    c290:	bx	lr
    c294:	ldr	r0, [pc, #1336]	; c7d4 <bt_compidtostr@@Base+0x47a4>
    c298:	add	r0, pc, r0
    c29c:	bx	lr
    c2a0:	ldr	r0, [pc, #1328]	; c7d8 <bt_compidtostr@@Base+0x47a8>
    c2a4:	add	r0, pc, r0
    c2a8:	bx	lr
    c2ac:	ldr	r0, [pc, #1320]	; c7dc <bt_compidtostr@@Base+0x47ac>
    c2b0:	add	r0, pc, r0
    c2b4:	bx	lr
    c2b8:	ldr	r0, [pc, #1312]	; c7e0 <bt_compidtostr@@Base+0x47b0>
    c2bc:	add	r0, pc, r0
    c2c0:	bx	lr
    c2c4:	ldr	r0, [pc, #1304]	; c7e4 <bt_compidtostr@@Base+0x47b4>
    c2c8:	add	r0, pc, r0
    c2cc:	bx	lr
    c2d0:	ldr	r0, [pc, #1296]	; c7e8 <bt_compidtostr@@Base+0x47b8>
    c2d4:	add	r0, pc, r0
    c2d8:	bx	lr
    c2dc:	ldr	r0, [pc, #1288]	; c7ec <bt_compidtostr@@Base+0x47bc>
    c2e0:	add	r0, pc, r0
    c2e4:	bx	lr
    c2e8:	ldr	r0, [pc, #1280]	; c7f0 <bt_compidtostr@@Base+0x47c0>
    c2ec:	add	r0, pc, r0
    c2f0:	bx	lr
    c2f4:	ldr	r0, [pc, #1272]	; c7f4 <bt_compidtostr@@Base+0x47c4>
    c2f8:	add	r0, pc, r0
    c2fc:	bx	lr
    c300:	ldr	r0, [pc, #1264]	; c7f8 <bt_compidtostr@@Base+0x47c8>
    c304:	add	r0, pc, r0
    c308:	bx	lr
    c30c:	ldr	r0, [pc, #1256]	; c7fc <bt_compidtostr@@Base+0x47cc>
    c310:	add	r0, pc, r0
    c314:	bx	lr
    c318:	ldr	r0, [pc, #1248]	; c800 <bt_compidtostr@@Base+0x47d0>
    c31c:	add	r0, pc, r0
    c320:	bx	lr
    c324:	ldr	r0, [pc, #1240]	; c804 <bt_compidtostr@@Base+0x47d4>
    c328:	add	r0, pc, r0
    c32c:	bx	lr
    c330:	ldr	r0, [pc, #1232]	; c808 <bt_compidtostr@@Base+0x47d8>
    c334:	add	r0, pc, r0
    c338:	bx	lr
    c33c:	ldr	r0, [pc, #1224]	; c80c <bt_compidtostr@@Base+0x47dc>
    c340:	add	r0, pc, r0
    c344:	bx	lr
    c348:	ldr	r0, [pc, #1216]	; c810 <bt_compidtostr@@Base+0x47e0>
    c34c:	add	r0, pc, r0
    c350:	bx	lr
    c354:	ldr	r0, [pc, #1208]	; c814 <bt_compidtostr@@Base+0x47e4>
    c358:	add	r0, pc, r0
    c35c:	bx	lr
    c360:	ldr	r0, [pc, #1200]	; c818 <bt_compidtostr@@Base+0x47e8>
    c364:	add	r0, pc, r0
    c368:	bx	lr
    c36c:	ldr	r0, [pc, #1192]	; c81c <bt_compidtostr@@Base+0x47ec>
    c370:	add	r0, pc, r0
    c374:	bx	lr
    c378:	ldr	r0, [pc, #1184]	; c820 <bt_compidtostr@@Base+0x47f0>
    c37c:	add	r0, pc, r0
    c380:	bx	lr
    c384:	ldr	r0, [pc, #1176]	; c824 <bt_compidtostr@@Base+0x47f4>
    c388:	add	r0, pc, r0
    c38c:	bx	lr
    c390:	ldr	r0, [pc, #1168]	; c828 <bt_compidtostr@@Base+0x47f8>
    c394:	add	r0, pc, r0
    c398:	bx	lr
    c39c:	ldr	r0, [pc, #1160]	; c82c <bt_compidtostr@@Base+0x47fc>
    c3a0:	add	r0, pc, r0
    c3a4:	bx	lr
    c3a8:	ldr	r0, [pc, #1152]	; c830 <bt_compidtostr@@Base+0x4800>
    c3ac:	add	r0, pc, r0
    c3b0:	bx	lr
    c3b4:	ldr	r0, [pc, #1144]	; c834 <bt_compidtostr@@Base+0x4804>
    c3b8:	add	r0, pc, r0
    c3bc:	bx	lr
    c3c0:	ldr	r0, [pc, #1136]	; c838 <bt_compidtostr@@Base+0x4808>
    c3c4:	add	r0, pc, r0
    c3c8:	bx	lr
    c3cc:	ldr	r0, [pc, #1128]	; c83c <bt_compidtostr@@Base+0x480c>
    c3d0:	add	r0, pc, r0
    c3d4:	bx	lr
    c3d8:	ldr	r0, [pc, #1120]	; c840 <bt_compidtostr@@Base+0x4810>
    c3dc:	add	r0, pc, r0
    c3e0:	bx	lr
    c3e4:	ldr	r0, [pc, #1112]	; c844 <bt_compidtostr@@Base+0x4814>
    c3e8:	add	r0, pc, r0
    c3ec:	bx	lr
    c3f0:	ldr	r0, [pc, #1104]	; c848 <bt_compidtostr@@Base+0x4818>
    c3f4:	add	r0, pc, r0
    c3f8:	bx	lr
    c3fc:	ldr	r0, [pc, #1096]	; c84c <bt_compidtostr@@Base+0x481c>
    c400:	add	r0, pc, r0
    c404:	bx	lr
    c408:	ldr	r0, [pc, #1088]	; c850 <bt_compidtostr@@Base+0x4820>
    c40c:	add	r0, pc, r0
    c410:	bx	lr
    c414:	ldr	r0, [pc, #1080]	; c854 <bt_compidtostr@@Base+0x4824>
    c418:	add	r0, pc, r0
    c41c:	bx	lr
    c420:	ldr	r0, [pc, #1072]	; c858 <bt_compidtostr@@Base+0x4828>
    c424:	add	r0, pc, r0
    c428:	bx	lr
    c42c:	ldr	r0, [pc, #1064]	; c85c <bt_compidtostr@@Base+0x482c>
    c430:	add	r0, pc, r0
    c434:	bx	lr
    c438:	ldr	r0, [pc, #1056]	; c860 <bt_compidtostr@@Base+0x4830>
    c43c:	add	r0, pc, r0
    c440:	bx	lr
    c444:	ldr	r0, [pc, #1048]	; c864 <bt_compidtostr@@Base+0x4834>
    c448:	add	r0, pc, r0
    c44c:	bx	lr
    c450:	ldr	r0, [pc, #1040]	; c868 <bt_compidtostr@@Base+0x4838>
    c454:	add	r0, pc, r0
    c458:	bx	lr
    c45c:	ldr	r0, [pc, #1032]	; c86c <bt_compidtostr@@Base+0x483c>
    c460:	add	r0, pc, r0
    c464:	bx	lr
    c468:	ldr	r0, [pc, #1024]	; c870 <bt_compidtostr@@Base+0x4840>
    c46c:	add	r0, pc, r0
    c470:	bx	lr
    c474:	ldr	r0, [pc, #1016]	; c874 <bt_compidtostr@@Base+0x4844>
    c478:	add	r0, pc, r0
    c47c:	bx	lr
    c480:	ldr	r0, [pc, #1008]	; c878 <bt_compidtostr@@Base+0x4848>
    c484:	add	r0, pc, r0
    c488:	bx	lr
    c48c:	ldr	r0, [pc, #1000]	; c87c <bt_compidtostr@@Base+0x484c>
    c490:	add	r0, pc, r0
    c494:	bx	lr
    c498:	ldr	r0, [pc, #992]	; c880 <bt_compidtostr@@Base+0x4850>
    c49c:	add	r0, pc, r0
    c4a0:	bx	lr
    c4a4:	ldr	r0, [pc, #984]	; c884 <bt_compidtostr@@Base+0x4854>
    c4a8:	add	r0, pc, r0
    c4ac:	bx	lr
    c4b0:	ldr	r0, [pc, #976]	; c888 <bt_compidtostr@@Base+0x4858>
    c4b4:	add	r0, pc, r0
    c4b8:	bx	lr
    c4bc:	ldr	r0, [pc, #968]	; c88c <bt_compidtostr@@Base+0x485c>
    c4c0:	add	r0, pc, r0
    c4c4:	bx	lr
    c4c8:	ldr	r0, [pc, #960]	; c890 <bt_compidtostr@@Base+0x4860>
    c4cc:	add	r0, pc, r0
    c4d0:	bx	lr
    c4d4:	ldr	r0, [pc, #952]	; c894 <bt_compidtostr@@Base+0x4864>
    c4d8:	add	r0, pc, r0
    c4dc:	bx	lr
    c4e0:	ldr	r0, [pc, #944]	; c898 <bt_compidtostr@@Base+0x4868>
    c4e4:	add	r0, pc, r0
    c4e8:	bx	lr
    c4ec:	ldr	r0, [pc, #936]	; c89c <bt_compidtostr@@Base+0x486c>
    c4f0:	add	r0, pc, r0
    c4f4:	bx	lr
    c4f8:	ldr	r0, [pc, #928]	; c8a0 <bt_compidtostr@@Base+0x4870>
    c4fc:	add	r0, pc, r0
    c500:	bx	lr
    c504:	ldr	r0, [pc, #920]	; c8a4 <bt_compidtostr@@Base+0x4874>
    c508:	add	r0, pc, r0
    c50c:	bx	lr
    c510:	ldr	r0, [pc, #912]	; c8a8 <bt_compidtostr@@Base+0x4878>
    c514:	add	r0, pc, r0
    c518:	bx	lr
    c51c:	ldr	r0, [pc, #904]	; c8ac <bt_compidtostr@@Base+0x487c>
    c520:	add	r0, pc, r0
    c524:	bx	lr
    c528:	ldr	r0, [pc, #896]	; c8b0 <bt_compidtostr@@Base+0x4880>
    c52c:	add	r0, pc, r0
    c530:	bx	lr
    c534:	ldr	r0, [pc, #888]	; c8b4 <bt_compidtostr@@Base+0x4884>
    c538:	add	r0, pc, r0
    c53c:	bx	lr
    c540:	ldr	r0, [pc, #880]	; c8b8 <bt_compidtostr@@Base+0x4888>
    c544:	add	r0, pc, r0
    c548:	bx	lr
    c54c:	ldr	r0, [pc, #872]	; c8bc <bt_compidtostr@@Base+0x488c>
    c550:	add	r0, pc, r0
    c554:	bx	lr
    c558:	ldr	r0, [pc, #864]	; c8c0 <bt_compidtostr@@Base+0x4890>
    c55c:	add	r0, pc, r0
    c560:	bx	lr
    c564:	ldr	r0, [pc, #856]	; c8c4 <bt_compidtostr@@Base+0x4894>
    c568:	add	r0, pc, r0
    c56c:	bx	lr
    c570:	ldr	r0, [pc, #848]	; c8c8 <bt_compidtostr@@Base+0x4898>
    c574:	add	r0, pc, r0
    c578:	bx	lr
    c57c:	ldr	r0, [pc, #840]	; c8cc <bt_compidtostr@@Base+0x489c>
    c580:	add	r0, pc, r0
    c584:	bx	lr
    c588:	ldr	r0, [pc, #832]	; c8d0 <bt_compidtostr@@Base+0x48a0>
    c58c:	add	r0, pc, r0
    c590:	bx	lr
    c594:	ldr	r0, [pc, #824]	; c8d4 <bt_compidtostr@@Base+0x48a4>
    c598:	add	r0, pc, r0
    c59c:	bx	lr
    c5a0:	ldr	r0, [pc, #816]	; c8d8 <bt_compidtostr@@Base+0x48a8>
    c5a4:	add	r0, pc, r0
    c5a8:	bx	lr
    c5ac:	andeq	r8, r0, r8, asr #18
    c5b0:	andeq	r8, r0, r0, lsl #19
    c5b4:	andeq	r8, r0, r0, lsl #19
    c5b8:	muleq	r0, r4, r9
    c5bc:			; <UNDEFINED> instruction: 0x000089bc
    c5c0:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c5c4:	andeq	r8, r0, r4, ror #19
    c5c8:	strdeq	r8, [r0], -r4
    c5cc:	strdeq	r8, [r0], -ip
    c5d0:	andeq	r8, r0, r4, lsl #20
    c5d4:	andeq	r8, r0, ip, lsl sl
    c5d8:	andeq	r8, r0, r8, lsl sl
    c5dc:	andeq	r8, r0, r8, lsl sl
    c5e0:	andeq	r8, r0, r0, lsr sl
    c5e4:	andeq	r8, r0, r8, lsr sl
    c5e8:	andeq	r8, r0, ip, asr #20
    c5ec:	andeq	r8, r0, ip, asr sl
    c5f0:	andeq	r8, r0, r4, ror #20
    c5f4:	andeq	r8, r0, r8, ror #20
    c5f8:	muleq	r0, r0, sl
    c5fc:	muleq	r0, ip, sl
    c600:	andeq	r8, r0, r4, lsr #21
    c604:	andeq	r8, r0, ip, asr #21
    c608:	ldrdeq	r8, [r0], -r0
    c60c:	andeq	r8, r0, r0, ror #21
    c610:	andeq	r8, r0, ip, lsl fp
    c614:	andeq	r8, r0, r0, lsr #22
    c618:	andeq	r8, r0, r4, lsr #22
    c61c:	andeq	r8, r0, r4, asr #22
    c620:	andeq	r8, r0, ip, asr #22
    c624:	andeq	r8, r0, ip, asr #22
    c628:	andeq	r8, r0, r0, ror #22
    c62c:	andeq	r8, r0, r8, ror #22
    c630:	andeq	r7, r0, r4, lsl r3
    c634:	andeq	r8, r0, r4, ror #22
    c638:	andeq	r8, r0, ip, ror #22
    c63c:	andeq	r8, r0, r8, ror fp
    c640:	andeq	r8, r0, ip, lsl #23
    c644:			; <UNDEFINED> instruction: 0x00008bb4
    c648:	ldrdeq	r8, [r0], -r4
    c64c:	andeq	r8, r0, r8, ror #23
    c650:	andeq	r8, r0, r8, lsl ip
    c654:	andeq	r8, r0, r4, lsl ip
    c658:	andeq	r8, r0, r8, lsl ip
    c65c:	andeq	r8, r0, r0, lsr ip
    c660:	andeq	r8, r0, r8, lsr ip
    c664:	andeq	r8, r0, r4, lsr ip
    c668:	andeq	r8, r0, r4, ror #24
    c66c:	andeq	r8, r0, r8, ror #24
    c670:	andeq	r8, r0, r8, ror #24
    c674:	andeq	r8, r0, r8, lsl #25
    c678:	andeq	r8, r0, r8, lsl #25
    c67c:	muleq	r0, r0, ip
    c680:			; <UNDEFINED> instruction: 0x00008cb4
    c684:	andeq	r8, r0, r4, asr #25
    c688:	andeq	r8, r0, ip, asr #25
    c68c:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c690:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c694:	ldrdeq	r8, [r0], -ip
    c698:	andeq	r8, r0, ip, ror #25
    c69c:	strdeq	r8, [r0], -ip
    c6a0:	andeq	r8, r0, r0, lsl #26
    c6a4:	andeq	r8, r0, ip, lsl #26
    c6a8:	andeq	r8, r0, r8, lsl #26
    c6ac:	andeq	r8, r0, ip, lsl #26
    c6b0:	andeq	r8, r0, r0, lsr sp
    c6b4:	andeq	r8, r0, r8, lsr sp
    c6b8:	andeq	r8, r0, r0, asr sp
    c6bc:	andeq	r8, r0, r4, ror #26
    c6c0:	andeq	r8, r0, ip, ror #26
    c6c4:	andeq	r8, r0, ip, ror #26
    c6c8:	andeq	r8, r0, ip, lsl #27
    c6cc:	andeq	r8, r0, r4, lsr #27
    c6d0:	andeq	r8, r0, r4, lsr #27
    c6d4:	andeq	r8, r0, ip, asr #27
    c6d8:	ldrdeq	r8, [r0], -r0
    c6dc:	strdeq	r8, [r0], -r0
    c6e0:	andeq	r8, r0, r8, lsl #28
    c6e4:	andeq	r8, r0, r8, lsl lr
    c6e8:	andeq	r8, r0, r8, lsr #28
    c6ec:	andeq	r8, r0, r8, asr #28
    c6f0:	andeq	r8, r0, ip, asr #28
    c6f4:	andeq	r8, r0, ip, asr #28
    c6f8:	andeq	r8, r0, ip, asr lr
    c6fc:	andeq	r8, r0, r4, ror lr
    c700:	andeq	r8, r0, r8, ror lr
    c704:	muleq	r0, r0, lr
    c708:	andeq	r8, r0, r8, lsr #29
    c70c:	andeq	r8, r0, r4, lsr #29
    c710:	andeq	r8, r0, ip, lsr #29
    c714:	andeq	r8, r0, r4, asr #29
    c718:	andeq	r8, r0, ip, asr #29
    c71c:	andeq	r8, r0, ip, asr #29
    c720:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c724:	strdeq	r8, [r0], -ip
    c728:	andeq	r8, r0, r0, lsl #30
    c72c:	andeq	r8, r0, r0, lsl pc
    c730:	andeq	r8, r0, r4, lsr #30
    c734:	andeq	r8, r0, r4, lsr #30
    c738:	andeq	r8, r0, r4, lsr pc
    c73c:	andeq	r8, r0, r8, lsr pc
    c740:	andeq	r8, r0, ip, asr pc
    c744:	andeq	r8, r0, r0, ror pc
    c748:	andeq	r8, r0, r0, ror pc
    c74c:	andeq	r8, r0, r0, lsl #31
    c750:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    c754:	andeq	r8, r0, r4, lsr #31
    c758:	andeq	r8, r0, r8, lsr #31
    c75c:	andeq	r8, r0, ip, lsr #31
    c760:			; <UNDEFINED> instruction: 0x00008fb4
    c764:			; <UNDEFINED> instruction: 0x00008fbc
    c768:	andeq	r9, r0, r8, lsl r0
    c76c:	andeq	r9, r0, ip, lsl r0
    c770:	andeq	r9, r0, r4, lsr #32
    c774:	andeq	r9, r0, r4, lsr r0
    c778:	andeq	r9, r0, r4, asr #32
    c77c:	andeq	r9, r0, r0, asr #32
    c780:	andeq	r9, r0, r0, asr r0
    c784:	andeq	r9, r0, r0, asr r0
    c788:	andeq	r9, r0, r4, asr r0
    c78c:	andeq	r9, r0, ip, ror r0
    c790:	muleq	r0, r8, r0
    c794:	muleq	r0, ip, r0
    c798:	strheq	r9, [r0], -r4
    c79c:	strheq	r9, [r0], -r4
    c7a0:	strheq	r9, [r0], -r4
    c7a4:	andeq	r9, r0, r4, ror #1
    c7a8:	andeq	r9, r0, ip, ror #1
    c7ac:	andeq	r9, r0, ip, ror #1
    c7b0:	strdeq	r9, [r0], -r8
    c7b4:	strdeq	r9, [r0], -r8
    c7b8:	strdeq	r9, [r0], -r8
    c7bc:	andeq	r9, r0, r8, lsl #2
    c7c0:	andeq	r9, r0, ip, lsl r1
    c7c4:	andeq	r9, r0, r0, lsr #2
    c7c8:	andeq	r9, r0, ip, lsr #2
    c7cc:	andeq	r9, r0, r4, asr #2
    c7d0:	andeq	r9, r0, ip, asr #2
    c7d4:	andeq	r9, r0, ip, asr #2
    c7d8:	andeq	r9, r0, ip, ror r1
    c7dc:	andeq	r9, r0, r8, lsl #3
    c7e0:	andeq	r9, r0, r4, lsl #3
    c7e4:	andeq	r9, r0, r0, lsr #3
    c7e8:	andeq	r9, r0, r8, lsr #3
    c7ec:			; <UNDEFINED> instruction: 0x000091bc
    c7f0:	ldrdeq	r9, [r0], -r0
    c7f4:	ldrdeq	r9, [r0], -ip
    c7f8:	andeq	r9, r0, ip, ror #3
    c7fc:	strdeq	r9, [r0], -ip
    c800:	andeq	r9, r0, r0, lsl #4
    c804:	andeq	r9, r0, r0, lsr #4
    c808:	andeq	r9, r0, r0, asr r2
    c80c:	andeq	r9, r0, r4, asr r2
    c810:	andeq	r9, r0, ip, asr r2
    c814:	andeq	r9, r0, r4, ror #4
    c818:	andeq	r9, r0, r8, ror #4
    c81c:	andeq	r9, r0, ip, ror r2
    c820:	andeq	r9, r0, ip, lsl #5
    c824:	andeq	r9, r0, r8, lsl #5
    c828:	muleq	r0, r4, r2
    c82c:			; <UNDEFINED> instruction: 0x000092b0
    c830:			; <UNDEFINED> instruction: 0x000092bc
    c834:			; <UNDEFINED> instruction: 0x000092b8
    c838:	ldrdeq	r9, [r0], -r4
    c83c:	ldrdeq	r9, [r0], -r8
    c840:	andeq	r9, r0, r4, ror #5
    c844:	andeq	r9, r0, r8, lsl #6
    c848:	andeq	r9, r0, r8, lsl r3
    c84c:	andeq	r9, r0, r8, lsr #6
    c850:	andeq	r9, r0, ip, lsr r3
    c854:	andeq	r9, r0, ip, lsr r3
    c858:	andeq	r9, r0, r4, asr #6
    c85c:	andeq	r9, r0, ip, asr r3
    c860:	andeq	r9, r0, ip, ror #6
    c864:	andeq	r9, r0, ip, ror #6
    c868:	andeq	r9, r0, r0, lsl #7
    c86c:	muleq	r0, r8, r3
    c870:	muleq	r0, ip, r3
    c874:			; <UNDEFINED> instruction: 0x000093b8
    c878:	ldrdeq	r9, [r0], -r4
    c87c:	ldrdeq	r9, [r0], -r8
    c880:	ldrdeq	r9, [r0], -ip
    c884:	andeq	r9, r0, r4, ror #7
    c888:	andeq	r9, r0, r0, ror #7
    c88c:	strdeq	r9, [r0], -r8
    c890:	andeq	r9, r0, ip, lsl #8
    c894:	andeq	r9, r0, r4, lsl r4
    c898:	andeq	r9, r0, r0, lsl r4
    c89c:	andeq	r9, r0, r8, lsr #8
    c8a0:	andeq	r9, r0, ip, lsr #8
    c8a4:	andeq	r9, r0, r0, asr #8
    c8a8:	andeq	r9, r0, r4, asr r4
    c8ac:	andeq	r9, r0, r0, ror #8
    c8b0:	andeq	r9, r0, ip, asr r4
    c8b4:	andeq	r9, r0, r4, ror r4
    c8b8:	andeq	r9, r0, r8, ror r4
    c8bc:	andeq	r9, r0, r8, ror r4
    c8c0:	muleq	r0, r8, r4
    c8c4:	andeq	r9, r0, r0, lsr #9
    c8c8:	andeq	r9, r0, r8, lsr #9
    c8cc:	andeq	r9, r0, ip, asr #9
    c8d0:	ldrdeq	r9, [r0], -r0
    c8d4:	andeq	r9, r0, ip, ror #9
    c8d8:	andeq	r9, r0, r4, lsl r5
    c8dc:			; <UNDEFINED> instruction: 0x00008eb0
    c8e0:			; <UNDEFINED> instruction: 0x00008eb0
    c8e4:	andeq	r8, r0, r4, asr #29
    c8e8:	andeq	r8, r0, ip, asr #29
    c8ec:	ldrdeq	r8, [r0], -r4
    c8f0:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c8f4:	strdeq	r8, [r0], -r4
    c8f8:	strdeq	r8, [r0], -r4
    c8fc:	andeq	r8, r0, r8, lsl pc
    c900:	andeq	r8, r0, r4, lsr pc
    c904:	andeq	r8, r0, r8, lsr pc
    c908:	andeq	r8, r0, ip, asr pc
    c90c:	andeq	r8, r0, ip, asr pc
    c910:	andeq	r8, r0, r0, ror pc
    c914:	andeq	r8, r0, r8, lsl #31
    c918:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    c91c:	andeq	r8, r0, r0, lsr #31
    c920:			; <UNDEFINED> instruction: 0x00008fb4
    c924:	andeq	r8, r0, r0, ror #31
    c928:	andeq	r8, r0, r4, ror #31
    c92c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c930:	andeq	r9, r0, r0
    c934:	andeq	r9, r0, r8, lsl r0
    c938:	andeq	r9, r0, r8, asr #32
    c93c:	andeq	r9, r0, r4, rrx
    c940:	andeq	r9, r0, r4, rrx
    c944:	andeq	r9, r0, r4, rrx
    c948:	andeq	r9, r0, r4, rrx
    c94c:	andeq	r9, r0, r8, rrx
    c950:	andeq	r9, r0, r4, lsl #1
    c954:	muleq	r0, r4, r0
    c958:	muleq	r0, ip, r0
    c95c:	andeq	r9, r0, r0, lsr #1
    c960:	andeq	r9, r0, ip, asr #1
    c964:	ldrdeq	r9, [r0], -ip
    c968:	andeq	r9, r0, ip, ror #1
    c96c:	strdeq	r9, [r0], -r8
    c970:	andeq	r9, r0, ip, lsl #2
    c974:	andeq	r9, r0, r4, lsl r1
    c978:	andeq	r9, r0, r4, lsr r1
    c97c:	andeq	r9, r0, r0, asr #2
    c980:	andeq	r9, r0, ip, lsr r1
    c984:	andeq	r9, r0, ip, asr #2
    c988:	andeq	r9, r0, r0, asr r1
    c98c:	andeq	r9, r0, ip, asr r1
    c990:	andeq	r9, r0, r4, ror r1
    c994:	andeq	r9, r0, r0, ror r1
    c998:	andeq	r9, r0, r0, ror r1
    c99c:	muleq	r0, r4, r1
    c9a0:	andeq	r9, r0, r0, lsr #3
    c9a4:	andeq	r9, r0, r4, lsr #3
    c9a8:	andeq	r9, r0, r0, asr #3
    c9ac:	andeq	r9, r0, ip, asr #3
    c9b0:	ldrdeq	r9, [r0], -r0
    c9b4:	strdeq	r9, [r0], -r0
    c9b8:	strdeq	r9, [r0], -r8
    c9bc:	andeq	r9, r0, r8, lsl #4
    c9c0:	andeq	r9, r0, r4, lsr #4
    c9c4:	andeq	r9, r0, r0, lsr #4
    c9c8:	andeq	r9, r0, r0, lsr #4
    c9cc:	andeq	r9, r0, r4, ror #4
    c9d0:	andeq	r9, r0, r0, ror #4
    c9d4:	andeq	r9, r0, ip, ror #4
    c9d8:	andeq	r9, r0, ip, lsr #5
    c9dc:	andeq	r9, r0, ip, lsr #5
    c9e0:			; <UNDEFINED> instruction: 0x000092b0
    c9e4:	andeq	r9, r0, r0, asr #5
    c9e8:	andeq	r9, r0, r0, asr #5
    c9ec:	andeq	r9, r0, r8, asr #5
    c9f0:	strdeq	r9, [r0], -r8
    c9f4:	strdeq	r9, [r0], -ip
    c9f8:	andeq	r9, r0, r4, lsl #6
    c9fc:	andeq	r9, r0, r8, lsr #6
    ca00:	andeq	r9, r0, r8, lsr #6
    ca04:	andeq	r9, r0, r8, lsr #6
    ca08:	andeq	r9, r0, r8, lsr #6
    ca0c:	andeq	r9, r0, r8, lsr #6
    ca10:	andeq	r9, r0, ip, lsr #6
    ca14:	andeq	r9, r0, r8, asr #6
    ca18:	andeq	r9, r0, r8, ror #6
    ca1c:	andeq	r9, r0, r8, ror #6
    ca20:	andeq	r9, r0, r8, ror #6
    ca24:	andeq	r9, r0, r8, lsl #7
    ca28:	muleq	r0, ip, r3
    ca2c:			; <UNDEFINED> instruction: 0x000093b0
    ca30:	ldrdeq	r9, [r0], -r0
    ca34:	ldrdeq	r9, [r0], -r8
    ca38:	ldrdeq	r9, [r0], -r8
    ca3c:	strdeq	r9, [r0], -r8
    ca40:	andeq	r9, r0, r0, lsl #8
    ca44:	andeq	r9, r0, r4, lsl r4
    ca48:	andeq	r9, r0, ip, lsl r4
    ca4c:	andeq	r9, r0, r0, asr r4
    ca50:	andeq	r9, r0, r4, ror #8
    ca54:	muleq	r0, r8, r4
    ca58:	andeq	r9, r0, r0, lsr #9
    ca5c:	andeq	r9, r0, ip, lsr #9
    ca60:			; <UNDEFINED> instruction: 0x000094b4
    ca64:	andeq	r9, r0, r4, asr #9
    ca68:	andeq	r9, r0, r8, asr #9
    ca6c:	ldrdeq	r9, [r0], -r8
    ca70:	andeq	r9, r0, r8, ror #9
    ca74:	andeq	r9, r0, ip, ror #9
    ca78:	strdeq	r9, [r0], -ip
    ca7c:	strdeq	r9, [r0], -r8
    ca80:	andeq	r9, r0, r0, lsl r5
    ca84:	andeq	r9, r0, r0, lsr r5
    ca88:	andeq	r9, r0, r4, lsr r5
    ca8c:	andeq	r9, r0, ip, lsr r5
    ca90:	andeq	r9, r0, r0, asr r5
    ca94:	andeq	r9, r0, ip, asr r5
    ca98:	andeq	r9, r0, ip, asr r5
    ca9c:	andeq	r9, r0, r8, ror #10
    caa0:	andeq	r9, r0, ip, ror r5
    caa4:	andeq	r9, r0, ip, ror r5
    caa8:	andeq	r9, r0, ip, lsr #11
    caac:			; <UNDEFINED> instruction: 0x000095b0
    cab0:	andeq	r9, r0, ip, lsr #11
    cab4:	andeq	r9, r0, ip, ror #11
    cab8:	strdeq	r9, [r0], -r0
    cabc:	strdeq	r9, [r0], -r8
    cac0:	andeq	r9, r0, r8, lsl #12
    cac4:	andeq	r9, r0, r8, lsl #12
    cac8:	andeq	r9, r0, r4, lsl r6
    cacc:	andeq	r9, r0, ip, lsl r6
    cad0:	andeq	r9, r0, ip, lsr #12
    cad4:	andeq	r9, r0, r0, lsr r6
    cad8:	andeq	r9, r0, r4, asr r6
    cadc:	andeq	r9, r0, r0, ror #12
    cae0:	andeq	r9, r0, r4, ror #12
    cae4:	andeq	r9, r0, r8, ror #12
    cae8:	andeq	r9, r0, r4, ror r6
    caec:	andeq	r9, r0, r4, lsl #13
    caf0:	andeq	r9, r0, r4, lsl #13
    caf4:	muleq	r0, r8, r6
    caf8:	muleq	r0, r8, r6
    cafc:	muleq	r0, r8, r6
    cb00:	andeq	r9, r0, r4, lsr #13
    cb04:	andeq	r9, r0, r8, lsr #13
    cb08:	andeq	r9, r0, r8, lsr #13
    cb0c:	andeq	r9, r0, r8, asr #13
    cb10:	ldrdeq	r9, [r0], -r4
    cb14:	andeq	r9, r0, r4, ror #13
    cb18:	andeq	r9, r0, r0, lsl #14
    cb1c:	andeq	r9, r0, ip, lsl #14
    cb20:	andeq	r9, r0, r8, lsl r7
    cb24:	andeq	r9, r0, r0, lsr r7
    cb28:	andeq	r9, r0, ip, lsr #14
    cb2c:	andeq	r9, r0, r8, lsr r7
    cb30:	andeq	r9, r0, ip, ror r7
    cb34:	muleq	r0, r0, r7
    cb38:	muleq	r0, r4, r7
    cb3c:	andeq	r9, r0, r0, lsr #15
    cb40:	andeq	r9, r0, r4, lsr #15
    cb44:			; <UNDEFINED> instruction: 0x000097b8
    cb48:	ldrdeq	r9, [r0], -r4
    cb4c:	andeq	r9, r0, r0, ror #15
    cb50:	strdeq	r9, [r0], -r0
    cb54:	strdeq	r9, [r0], -ip
    cb58:	andeq	r9, r0, r0, lsl #16
    cb5c:	andeq	r9, r0, r4, lsl #16
    cb60:	andeq	r9, r0, r0, lsr r8
    cb64:	andeq	r9, r0, ip, lsr r8
    cb68:	andeq	r9, r0, r4, asr #16
    cb6c:	andeq	r9, r0, r8, ror #16
    cb70:	andeq	r9, r0, ip, ror #16
    cb74:	andeq	r9, r0, ip, ror #16
    cb78:	andeq	r9, r0, ip, lsl #17
    cb7c:	muleq	r0, ip, r8
    cb80:	andeq	r9, r0, r0, lsr #17
    cb84:	andeq	r9, r0, r0, asr #17
    cb88:	andeq	r9, r0, r0, ror #17
    cb8c:	andeq	r9, r0, ip, ror #17
    cb90:	andeq	r9, r0, r8, lsl r9
    cb94:	andeq	r9, r0, ip, lsl r9
    cb98:	andeq	r9, r0, r0, lsr r9
    cb9c:	andeq	r9, r0, ip, asr r9
    cba0:	andeq	r9, r0, r8, ror r9
    cba4:	andeq	r9, r0, r4, lsl #19
    cba8:	andeq	r9, r0, ip, lsl #19
    cbac:			; <UNDEFINED> instruction: 0x000099b8
    cbb0:			; <UNDEFINED> instruction: 0x000099b0
    cbb4:			; <UNDEFINED> instruction: 0x000099b4
    cbb8:	andeq	r9, r0, ip, asr #19
    cbbc:	andeq	r9, r0, ip, asr #19
    cbc0:	ldrdeq	r9, [r0], -r4
    cbc4:	strdeq	r9, [r0], -r4
    cbc8:	strdeq	r9, [r0], -r0
    cbcc:	andeq	r9, r0, r0, lsl #20
    cbd0:	andeq	r9, r0, ip, lsl sl
    cbd4:	andeq	r9, r0, ip, lsr #20
    cbd8:	andeq	r9, r0, r4, asr #20
    cbdc:	andeq	r9, r0, ip, ror #20
    cbe0:	andeq	r9, r0, r8, ror sl
    cbe4:	andeq	r9, r0, r0, lsl #21
    cbe8:	muleq	r0, ip, sl
    cbec:	andeq	r9, r0, r0, lsr #21
    cbf0:	ldrdeq	r9, [r0], -r8
    cbf4:	andeq	r9, r0, ip, ror #21
    cbf8:	strdeq	r9, [r0], -ip
    cbfc:	andeq	r9, r0, r0, lsl fp
    cc00:	andeq	r9, r0, r8, lsr #22
    cc04:	andeq	r9, r0, r0, lsr fp
    cc08:	andeq	r9, r0, r4, lsr fp
    cc0c:	andeq	r9, r0, ip, asr fp
    cc10:	ldr	r0, [pc, #-828]	; c8dc <bt_compidtostr@@Base+0x48ac>
    cc14:	add	r0, pc, r0
    cc18:	bx	lr
    cc1c:	ldr	r0, [pc, #-836]	; c8e0 <bt_compidtostr@@Base+0x48b0>
    cc20:	add	r0, pc, r0
    cc24:	bx	lr
    cc28:	ldr	r0, [pc, #-844]	; c8e4 <bt_compidtostr@@Base+0x48b4>
    cc2c:	add	r0, pc, r0
    cc30:	bx	lr
    cc34:	ldr	r0, [pc, #-852]	; c8e8 <bt_compidtostr@@Base+0x48b8>
    cc38:	add	r0, pc, r0
    cc3c:	bx	lr
    cc40:	ldr	r0, [pc, #-860]	; c8ec <bt_compidtostr@@Base+0x48bc>
    cc44:	add	r0, pc, r0
    cc48:	bx	lr
    cc4c:	ldr	r0, [pc, #-868]	; c8f0 <bt_compidtostr@@Base+0x48c0>
    cc50:	add	r0, pc, r0
    cc54:	bx	lr
    cc58:	ldr	r0, [pc, #-876]	; c8f4 <bt_compidtostr@@Base+0x48c4>
    cc5c:	add	r0, pc, r0
    cc60:	bx	lr
    cc64:	ldr	r0, [pc, #-884]	; c8f8 <bt_compidtostr@@Base+0x48c8>
    cc68:	add	r0, pc, r0
    cc6c:	bx	lr
    cc70:	ldr	r0, [pc, #-892]	; c8fc <bt_compidtostr@@Base+0x48cc>
    cc74:	add	r0, pc, r0
    cc78:	bx	lr
    cc7c:	ldr	r0, [pc, #-900]	; c900 <bt_compidtostr@@Base+0x48d0>
    cc80:	add	r0, pc, r0
    cc84:	bx	lr
    cc88:	ldr	r0, [pc, #-908]	; c904 <bt_compidtostr@@Base+0x48d4>
    cc8c:	add	r0, pc, r0
    cc90:	bx	lr
    cc94:	ldr	r0, [pc, #-916]	; c908 <bt_compidtostr@@Base+0x48d8>
    cc98:	add	r0, pc, r0
    cc9c:	bx	lr
    cca0:	ldr	r0, [pc, #-924]	; c90c <bt_compidtostr@@Base+0x48dc>
    cca4:	add	r0, pc, r0
    cca8:	bx	lr
    ccac:	ldr	r0, [pc, #-932]	; c910 <bt_compidtostr@@Base+0x48e0>
    ccb0:	add	r0, pc, r0
    ccb4:	bx	lr
    ccb8:	ldr	r0, [pc, #-940]	; c914 <bt_compidtostr@@Base+0x48e4>
    ccbc:	add	r0, pc, r0
    ccc0:	bx	lr
    ccc4:	ldr	r0, [pc, #-948]	; c918 <bt_compidtostr@@Base+0x48e8>
    ccc8:	add	r0, pc, r0
    cccc:	bx	lr
    ccd0:	ldr	r0, [pc, #-956]	; c91c <bt_compidtostr@@Base+0x48ec>
    ccd4:	add	r0, pc, r0
    ccd8:	bx	lr
    ccdc:	ldr	r0, [pc, #-964]	; c920 <bt_compidtostr@@Base+0x48f0>
    cce0:	add	r0, pc, r0
    cce4:	bx	lr
    cce8:	ldr	r0, [pc, #-972]	; c924 <bt_compidtostr@@Base+0x48f4>
    ccec:	add	r0, pc, r0
    ccf0:	bx	lr
    ccf4:	ldr	r0, [pc, #-980]	; c928 <bt_compidtostr@@Base+0x48f8>
    ccf8:	add	r0, pc, r0
    ccfc:	bx	lr
    cd00:	ldr	r0, [pc, #-988]	; c92c <bt_compidtostr@@Base+0x48fc>
    cd04:	add	r0, pc, r0
    cd08:	bx	lr
    cd0c:	ldr	r0, [pc, #-996]	; c930 <bt_compidtostr@@Base+0x4900>
    cd10:	add	r0, pc, r0
    cd14:	bx	lr
    cd18:	ldr	r0, [pc, #-1004]	; c934 <bt_compidtostr@@Base+0x4904>
    cd1c:	add	r0, pc, r0
    cd20:	bx	lr
    cd24:	ldr	r0, [pc, #-1012]	; c938 <bt_compidtostr@@Base+0x4908>
    cd28:	add	r0, pc, r0
    cd2c:	bx	lr
    cd30:	ldr	r0, [pc, #-1020]	; c93c <bt_compidtostr@@Base+0x490c>
    cd34:	add	r0, pc, r0
    cd38:	bx	lr
    cd3c:	ldr	r0, [pc, #-1028]	; c940 <bt_compidtostr@@Base+0x4910>
    cd40:	add	r0, pc, r0
    cd44:	bx	lr
    cd48:	ldr	r0, [pc, #-1036]	; c944 <bt_compidtostr@@Base+0x4914>
    cd4c:	add	r0, pc, r0
    cd50:	bx	lr
    cd54:	ldr	r0, [pc, #-1044]	; c948 <bt_compidtostr@@Base+0x4918>
    cd58:	add	r0, pc, r0
    cd5c:	bx	lr
    cd60:	ldr	r0, [pc, #-1052]	; c94c <bt_compidtostr@@Base+0x491c>
    cd64:	add	r0, pc, r0
    cd68:	bx	lr
    cd6c:	ldr	r0, [pc, #-1060]	; c950 <bt_compidtostr@@Base+0x4920>
    cd70:	add	r0, pc, r0
    cd74:	bx	lr
    cd78:	ldr	r0, [pc, #-1068]	; c954 <bt_compidtostr@@Base+0x4924>
    cd7c:	add	r0, pc, r0
    cd80:	bx	lr
    cd84:	ldr	r0, [pc, #-1076]	; c958 <bt_compidtostr@@Base+0x4928>
    cd88:	add	r0, pc, r0
    cd8c:	bx	lr
    cd90:	ldr	r0, [pc, #-1084]	; c95c <bt_compidtostr@@Base+0x492c>
    cd94:	add	r0, pc, r0
    cd98:	bx	lr
    cd9c:	ldr	r0, [pc, #-1092]	; c960 <bt_compidtostr@@Base+0x4930>
    cda0:	add	r0, pc, r0
    cda4:	bx	lr
    cda8:	ldr	r0, [pc, #-1100]	; c964 <bt_compidtostr@@Base+0x4934>
    cdac:	add	r0, pc, r0
    cdb0:	bx	lr
    cdb4:	ldr	r0, [pc, #-1108]	; c968 <bt_compidtostr@@Base+0x4938>
    cdb8:	add	r0, pc, r0
    cdbc:	bx	lr
    cdc0:	ldr	r0, [pc, #-1116]	; c96c <bt_compidtostr@@Base+0x493c>
    cdc4:	add	r0, pc, r0
    cdc8:	bx	lr
    cdcc:	ldr	r0, [pc, #-1124]	; c970 <bt_compidtostr@@Base+0x4940>
    cdd0:	add	r0, pc, r0
    cdd4:	bx	lr
    cdd8:	ldr	r0, [pc, #-1132]	; c974 <bt_compidtostr@@Base+0x4944>
    cddc:	add	r0, pc, r0
    cde0:	bx	lr
    cde4:	ldr	r0, [pc, #-1140]	; c978 <bt_compidtostr@@Base+0x4948>
    cde8:	add	r0, pc, r0
    cdec:	bx	lr
    cdf0:	ldr	r0, [pc, #-1148]	; c97c <bt_compidtostr@@Base+0x494c>
    cdf4:	add	r0, pc, r0
    cdf8:	bx	lr
    cdfc:	ldr	r0, [pc, #-1156]	; c980 <bt_compidtostr@@Base+0x4950>
    ce00:	add	r0, pc, r0
    ce04:	bx	lr
    ce08:	ldr	r0, [pc, #-1164]	; c984 <bt_compidtostr@@Base+0x4954>
    ce0c:	add	r0, pc, r0
    ce10:	bx	lr
    ce14:	ldr	r0, [pc, #-1172]	; c988 <bt_compidtostr@@Base+0x4958>
    ce18:	add	r0, pc, r0
    ce1c:	bx	lr
    ce20:	ldr	r0, [pc, #-1180]	; c98c <bt_compidtostr@@Base+0x495c>
    ce24:	add	r0, pc, r0
    ce28:	bx	lr
    ce2c:	ldr	r0, [pc, #-1188]	; c990 <bt_compidtostr@@Base+0x4960>
    ce30:	add	r0, pc, r0
    ce34:	bx	lr
    ce38:	ldr	r0, [pc, #-1196]	; c994 <bt_compidtostr@@Base+0x4964>
    ce3c:	add	r0, pc, r0
    ce40:	bx	lr
    ce44:	ldr	r0, [pc, #-1204]	; c998 <bt_compidtostr@@Base+0x4968>
    ce48:	add	r0, pc, r0
    ce4c:	bx	lr
    ce50:	ldr	r0, [pc, #-1212]	; c99c <bt_compidtostr@@Base+0x496c>
    ce54:	add	r0, pc, r0
    ce58:	bx	lr
    ce5c:	ldr	r0, [pc, #-1220]	; c9a0 <bt_compidtostr@@Base+0x4970>
    ce60:	add	r0, pc, r0
    ce64:	bx	lr
    ce68:	ldr	r0, [pc, #-1228]	; c9a4 <bt_compidtostr@@Base+0x4974>
    ce6c:	add	r0, pc, r0
    ce70:	bx	lr
    ce74:	ldr	r0, [pc, #-1236]	; c9a8 <bt_compidtostr@@Base+0x4978>
    ce78:	add	r0, pc, r0
    ce7c:	bx	lr
    ce80:	ldr	r0, [pc, #-1244]	; c9ac <bt_compidtostr@@Base+0x497c>
    ce84:	add	r0, pc, r0
    ce88:	bx	lr
    ce8c:	ldr	r0, [pc, #-1252]	; c9b0 <bt_compidtostr@@Base+0x4980>
    ce90:	add	r0, pc, r0
    ce94:	bx	lr
    ce98:	ldr	r0, [pc, #-1260]	; c9b4 <bt_compidtostr@@Base+0x4984>
    ce9c:	add	r0, pc, r0
    cea0:	bx	lr
    cea4:	ldr	r0, [pc, #-1268]	; c9b8 <bt_compidtostr@@Base+0x4988>
    cea8:	add	r0, pc, r0
    ceac:	bx	lr
    ceb0:	ldr	r0, [pc, #-1276]	; c9bc <bt_compidtostr@@Base+0x498c>
    ceb4:	add	r0, pc, r0
    ceb8:	bx	lr
    cebc:	ldr	r0, [pc, #-1284]	; c9c0 <bt_compidtostr@@Base+0x4990>
    cec0:	add	r0, pc, r0
    cec4:	bx	lr
    cec8:	ldr	r0, [pc, #-1292]	; c9c4 <bt_compidtostr@@Base+0x4994>
    cecc:	add	r0, pc, r0
    ced0:	bx	lr
    ced4:	ldr	r0, [pc, #-1300]	; c9c8 <bt_compidtostr@@Base+0x4998>
    ced8:	add	r0, pc, r0
    cedc:	bx	lr
    cee0:	ldr	r0, [pc, #-1308]	; c9cc <bt_compidtostr@@Base+0x499c>
    cee4:	add	r0, pc, r0
    cee8:	bx	lr
    ceec:	ldr	r0, [pc, #-1316]	; c9d0 <bt_compidtostr@@Base+0x49a0>
    cef0:	add	r0, pc, r0
    cef4:	bx	lr
    cef8:	ldr	r0, [pc, #-1324]	; c9d4 <bt_compidtostr@@Base+0x49a4>
    cefc:	add	r0, pc, r0
    cf00:	bx	lr
    cf04:	ldr	r0, [pc, #-1332]	; c9d8 <bt_compidtostr@@Base+0x49a8>
    cf08:	add	r0, pc, r0
    cf0c:	bx	lr
    cf10:	ldr	r0, [pc, #-1340]	; c9dc <bt_compidtostr@@Base+0x49ac>
    cf14:	add	r0, pc, r0
    cf18:	bx	lr
    cf1c:	ldr	r0, [pc, #-1348]	; c9e0 <bt_compidtostr@@Base+0x49b0>
    cf20:	add	r0, pc, r0
    cf24:	bx	lr
    cf28:	ldr	r0, [pc, #-1356]	; c9e4 <bt_compidtostr@@Base+0x49b4>
    cf2c:	add	r0, pc, r0
    cf30:	bx	lr
    cf34:	ldr	r0, [pc, #-1364]	; c9e8 <bt_compidtostr@@Base+0x49b8>
    cf38:	add	r0, pc, r0
    cf3c:	bx	lr
    cf40:	ldr	r0, [pc, #-1372]	; c9ec <bt_compidtostr@@Base+0x49bc>
    cf44:	add	r0, pc, r0
    cf48:	bx	lr
    cf4c:	ldr	r0, [pc, #-1380]	; c9f0 <bt_compidtostr@@Base+0x49c0>
    cf50:	add	r0, pc, r0
    cf54:	bx	lr
    cf58:	ldr	r0, [pc, #-1388]	; c9f4 <bt_compidtostr@@Base+0x49c4>
    cf5c:	add	r0, pc, r0
    cf60:	bx	lr
    cf64:	ldr	r0, [pc, #-1396]	; c9f8 <bt_compidtostr@@Base+0x49c8>
    cf68:	add	r0, pc, r0
    cf6c:	bx	lr
    cf70:	ldr	r0, [pc, #-1404]	; c9fc <bt_compidtostr@@Base+0x49cc>
    cf74:	add	r0, pc, r0
    cf78:	bx	lr
    cf7c:	ldr	r0, [pc, #-1412]	; ca00 <bt_compidtostr@@Base+0x49d0>
    cf80:	add	r0, pc, r0
    cf84:	bx	lr
    cf88:	ldr	r0, [pc, #-1420]	; ca04 <bt_compidtostr@@Base+0x49d4>
    cf8c:	add	r0, pc, r0
    cf90:	bx	lr
    cf94:	ldr	r0, [pc, #-1428]	; ca08 <bt_compidtostr@@Base+0x49d8>
    cf98:	add	r0, pc, r0
    cf9c:	bx	lr
    cfa0:	ldr	r0, [pc, #-1436]	; ca0c <bt_compidtostr@@Base+0x49dc>
    cfa4:	add	r0, pc, r0
    cfa8:	bx	lr
    cfac:	ldr	r0, [pc, #-1444]	; ca10 <bt_compidtostr@@Base+0x49e0>
    cfb0:	add	r0, pc, r0
    cfb4:	bx	lr
    cfb8:	ldr	r0, [pc, #-1452]	; ca14 <bt_compidtostr@@Base+0x49e4>
    cfbc:	add	r0, pc, r0
    cfc0:	bx	lr
    cfc4:	ldr	r0, [pc, #-1460]	; ca18 <bt_compidtostr@@Base+0x49e8>
    cfc8:	add	r0, pc, r0
    cfcc:	bx	lr
    cfd0:	ldr	r0, [pc, #-1468]	; ca1c <bt_compidtostr@@Base+0x49ec>
    cfd4:	add	r0, pc, r0
    cfd8:	bx	lr
    cfdc:	ldr	r0, [pc, #-1476]	; ca20 <bt_compidtostr@@Base+0x49f0>
    cfe0:	add	r0, pc, r0
    cfe4:	bx	lr
    cfe8:	ldr	r0, [pc, #-1484]	; ca24 <bt_compidtostr@@Base+0x49f4>
    cfec:	add	r0, pc, r0
    cff0:	bx	lr
    cff4:	ldr	r0, [pc, #-1492]	; ca28 <bt_compidtostr@@Base+0x49f8>
    cff8:	add	r0, pc, r0
    cffc:	bx	lr
    d000:	ldr	r0, [pc, #-1500]	; ca2c <bt_compidtostr@@Base+0x49fc>
    d004:	add	r0, pc, r0
    d008:	bx	lr
    d00c:	ldr	r0, [pc, #-1508]	; ca30 <bt_compidtostr@@Base+0x4a00>
    d010:	add	r0, pc, r0
    d014:	bx	lr
    d018:	ldr	r0, [pc, #-1516]	; ca34 <bt_compidtostr@@Base+0x4a04>
    d01c:	add	r0, pc, r0
    d020:	bx	lr
    d024:	ldr	r0, [pc, #-1524]	; ca38 <bt_compidtostr@@Base+0x4a08>
    d028:	add	r0, pc, r0
    d02c:	bx	lr
    d030:	ldr	r0, [pc, #-1532]	; ca3c <bt_compidtostr@@Base+0x4a0c>
    d034:	add	r0, pc, r0
    d038:	bx	lr
    d03c:	ldr	r0, [pc, #-1540]	; ca40 <bt_compidtostr@@Base+0x4a10>
    d040:	add	r0, pc, r0
    d044:	bx	lr
    d048:	ldr	r0, [pc, #-1548]	; ca44 <bt_compidtostr@@Base+0x4a14>
    d04c:	add	r0, pc, r0
    d050:	bx	lr
    d054:	ldr	r0, [pc, #-1556]	; ca48 <bt_compidtostr@@Base+0x4a18>
    d058:	add	r0, pc, r0
    d05c:	bx	lr
    d060:	ldr	r0, [pc, #-1564]	; ca4c <bt_compidtostr@@Base+0x4a1c>
    d064:	add	r0, pc, r0
    d068:	bx	lr
    d06c:	ldr	r0, [pc, #-1572]	; ca50 <bt_compidtostr@@Base+0x4a20>
    d070:	add	r0, pc, r0
    d074:	bx	lr
    d078:	ldr	r0, [pc, #-1580]	; ca54 <bt_compidtostr@@Base+0x4a24>
    d07c:	add	r0, pc, r0
    d080:	bx	lr
    d084:	ldr	r0, [pc, #-1588]	; ca58 <bt_compidtostr@@Base+0x4a28>
    d088:	add	r0, pc, r0
    d08c:	bx	lr
    d090:	ldr	r0, [pc, #-1596]	; ca5c <bt_compidtostr@@Base+0x4a2c>
    d094:	add	r0, pc, r0
    d098:	bx	lr
    d09c:	ldr	r0, [pc, #-1604]	; ca60 <bt_compidtostr@@Base+0x4a30>
    d0a0:	add	r0, pc, r0
    d0a4:	bx	lr
    d0a8:	ldr	r0, [pc, #-1612]	; ca64 <bt_compidtostr@@Base+0x4a34>
    d0ac:	add	r0, pc, r0
    d0b0:	bx	lr
    d0b4:	ldr	r0, [pc, #-1620]	; ca68 <bt_compidtostr@@Base+0x4a38>
    d0b8:	add	r0, pc, r0
    d0bc:	bx	lr
    d0c0:	ldr	r0, [pc, #-1628]	; ca6c <bt_compidtostr@@Base+0x4a3c>
    d0c4:	add	r0, pc, r0
    d0c8:	bx	lr
    d0cc:	ldr	r0, [pc, #-1636]	; ca70 <bt_compidtostr@@Base+0x4a40>
    d0d0:	add	r0, pc, r0
    d0d4:	bx	lr
    d0d8:	ldr	r0, [pc, #-1644]	; ca74 <bt_compidtostr@@Base+0x4a44>
    d0dc:	add	r0, pc, r0
    d0e0:	bx	lr
    d0e4:	ldr	r0, [pc, #-1652]	; ca78 <bt_compidtostr@@Base+0x4a48>
    d0e8:	add	r0, pc, r0
    d0ec:	bx	lr
    d0f0:	ldr	r0, [pc, #-1660]	; ca7c <bt_compidtostr@@Base+0x4a4c>
    d0f4:	add	r0, pc, r0
    d0f8:	bx	lr
    d0fc:	ldr	r0, [pc, #-1668]	; ca80 <bt_compidtostr@@Base+0x4a50>
    d100:	add	r0, pc, r0
    d104:	bx	lr
    d108:	ldr	r0, [pc, #-1676]	; ca84 <bt_compidtostr@@Base+0x4a54>
    d10c:	add	r0, pc, r0
    d110:	bx	lr
    d114:	ldr	r0, [pc, #-1684]	; ca88 <bt_compidtostr@@Base+0x4a58>
    d118:	add	r0, pc, r0
    d11c:	bx	lr
    d120:	ldr	r0, [pc, #-1692]	; ca8c <bt_compidtostr@@Base+0x4a5c>
    d124:	add	r0, pc, r0
    d128:	bx	lr
    d12c:	ldr	r0, [pc, #-1700]	; ca90 <bt_compidtostr@@Base+0x4a60>
    d130:	add	r0, pc, r0
    d134:	bx	lr
    d138:	ldr	r0, [pc, #-1708]	; ca94 <bt_compidtostr@@Base+0x4a64>
    d13c:	add	r0, pc, r0
    d140:	bx	lr
    d144:	ldr	r0, [pc, #-1716]	; ca98 <bt_compidtostr@@Base+0x4a68>
    d148:	add	r0, pc, r0
    d14c:	bx	lr
    d150:	ldr	r0, [pc, #-1724]	; ca9c <bt_compidtostr@@Base+0x4a6c>
    d154:	add	r0, pc, r0
    d158:	bx	lr
    d15c:	ldr	r0, [pc, #-1732]	; caa0 <bt_compidtostr@@Base+0x4a70>
    d160:	add	r0, pc, r0
    d164:	bx	lr
    d168:	ldr	r0, [pc, #-1740]	; caa4 <bt_compidtostr@@Base+0x4a74>
    d16c:	add	r0, pc, r0
    d170:	bx	lr
    d174:	ldr	r0, [pc, #-1748]	; caa8 <bt_compidtostr@@Base+0x4a78>
    d178:	add	r0, pc, r0
    d17c:	bx	lr
    d180:	ldr	r0, [pc, #-1756]	; caac <bt_compidtostr@@Base+0x4a7c>
    d184:	add	r0, pc, r0
    d188:	bx	lr
    d18c:	ldr	r0, [pc, #-1764]	; cab0 <bt_compidtostr@@Base+0x4a80>
    d190:	add	r0, pc, r0
    d194:	bx	lr
    d198:	ldr	r0, [pc, #-1772]	; cab4 <bt_compidtostr@@Base+0x4a84>
    d19c:	add	r0, pc, r0
    d1a0:	bx	lr
    d1a4:	ldr	r0, [pc, #-1780]	; cab8 <bt_compidtostr@@Base+0x4a88>
    d1a8:	add	r0, pc, r0
    d1ac:	bx	lr
    d1b0:	ldr	r0, [pc, #-1788]	; cabc <bt_compidtostr@@Base+0x4a8c>
    d1b4:	add	r0, pc, r0
    d1b8:	bx	lr
    d1bc:	ldr	r0, [pc, #-1796]	; cac0 <bt_compidtostr@@Base+0x4a90>
    d1c0:	add	r0, pc, r0
    d1c4:	bx	lr
    d1c8:	ldr	r0, [pc, #-1804]	; cac4 <bt_compidtostr@@Base+0x4a94>
    d1cc:	add	r0, pc, r0
    d1d0:	bx	lr
    d1d4:	ldr	r0, [pc, #-1812]	; cac8 <bt_compidtostr@@Base+0x4a98>
    d1d8:	add	r0, pc, r0
    d1dc:	bx	lr
    d1e0:	ldr	r0, [pc, #-1820]	; cacc <bt_compidtostr@@Base+0x4a9c>
    d1e4:	add	r0, pc, r0
    d1e8:	bx	lr
    d1ec:	ldr	r0, [pc, #-1828]	; cad0 <bt_compidtostr@@Base+0x4aa0>
    d1f0:	add	r0, pc, r0
    d1f4:	bx	lr
    d1f8:	ldr	r0, [pc, #-1836]	; cad4 <bt_compidtostr@@Base+0x4aa4>
    d1fc:	add	r0, pc, r0
    d200:	bx	lr
    d204:	ldr	r0, [pc, #-1844]	; cad8 <bt_compidtostr@@Base+0x4aa8>
    d208:	add	r0, pc, r0
    d20c:	bx	lr
    d210:	ldr	r0, [pc, #-1852]	; cadc <bt_compidtostr@@Base+0x4aac>
    d214:	add	r0, pc, r0
    d218:	bx	lr
    d21c:	ldr	r0, [pc, #-1860]	; cae0 <bt_compidtostr@@Base+0x4ab0>
    d220:	add	r0, pc, r0
    d224:	bx	lr
    d228:	ldr	r0, [pc, #-1868]	; cae4 <bt_compidtostr@@Base+0x4ab4>
    d22c:	add	r0, pc, r0
    d230:	bx	lr
    d234:	ldr	r0, [pc, #-1876]	; cae8 <bt_compidtostr@@Base+0x4ab8>
    d238:	add	r0, pc, r0
    d23c:	bx	lr
    d240:	ldr	r0, [pc, #-1884]	; caec <bt_compidtostr@@Base+0x4abc>
    d244:	add	r0, pc, r0
    d248:	bx	lr
    d24c:	ldr	r0, [pc, #-1892]	; caf0 <bt_compidtostr@@Base+0x4ac0>
    d250:	add	r0, pc, r0
    d254:	bx	lr
    d258:	ldr	r0, [pc, #-1900]	; caf4 <bt_compidtostr@@Base+0x4ac4>
    d25c:	add	r0, pc, r0
    d260:	bx	lr
    d264:	ldr	r0, [pc, #-1908]	; caf8 <bt_compidtostr@@Base+0x4ac8>
    d268:	add	r0, pc, r0
    d26c:	bx	lr
    d270:	ldr	r0, [pc, #-1916]	; cafc <bt_compidtostr@@Base+0x4acc>
    d274:	add	r0, pc, r0
    d278:	bx	lr
    d27c:	ldr	r0, [pc, #-1924]	; cb00 <bt_compidtostr@@Base+0x4ad0>
    d280:	add	r0, pc, r0
    d284:	bx	lr
    d288:	ldr	r0, [pc, #-1932]	; cb04 <bt_compidtostr@@Base+0x4ad4>
    d28c:	add	r0, pc, r0
    d290:	bx	lr
    d294:	ldr	r0, [pc, #-1940]	; cb08 <bt_compidtostr@@Base+0x4ad8>
    d298:	add	r0, pc, r0
    d29c:	bx	lr
    d2a0:	ldr	r0, [pc, #-1948]	; cb0c <bt_compidtostr@@Base+0x4adc>
    d2a4:	add	r0, pc, r0
    d2a8:	bx	lr
    d2ac:	ldr	r0, [pc, #-1956]	; cb10 <bt_compidtostr@@Base+0x4ae0>
    d2b0:	add	r0, pc, r0
    d2b4:	bx	lr
    d2b8:	ldr	r0, [pc, #-1964]	; cb14 <bt_compidtostr@@Base+0x4ae4>
    d2bc:	add	r0, pc, r0
    d2c0:	bx	lr
    d2c4:	ldr	r0, [pc, #-1972]	; cb18 <bt_compidtostr@@Base+0x4ae8>
    d2c8:	add	r0, pc, r0
    d2cc:	bx	lr
    d2d0:	ldr	r0, [pc, #-1980]	; cb1c <bt_compidtostr@@Base+0x4aec>
    d2d4:	add	r0, pc, r0
    d2d8:	bx	lr
    d2dc:	ldr	r0, [pc, #-1988]	; cb20 <bt_compidtostr@@Base+0x4af0>
    d2e0:	add	r0, pc, r0
    d2e4:	bx	lr
    d2e8:	ldr	r0, [pc, #-1996]	; cb24 <bt_compidtostr@@Base+0x4af4>
    d2ec:	add	r0, pc, r0
    d2f0:	bx	lr
    d2f4:	ldr	r0, [pc, #-2004]	; cb28 <bt_compidtostr@@Base+0x4af8>
    d2f8:	add	r0, pc, r0
    d2fc:	bx	lr
    d300:	ldr	r0, [pc, #-2012]	; cb2c <bt_compidtostr@@Base+0x4afc>
    d304:	add	r0, pc, r0
    d308:	bx	lr
    d30c:	ldr	r0, [pc, #-2020]	; cb30 <bt_compidtostr@@Base+0x4b00>
    d310:	add	r0, pc, r0
    d314:	bx	lr
    d318:	ldr	r0, [pc, #-2028]	; cb34 <bt_compidtostr@@Base+0x4b04>
    d31c:	add	r0, pc, r0
    d320:	bx	lr
    d324:	ldr	r0, [pc, #-2036]	; cb38 <bt_compidtostr@@Base+0x4b08>
    d328:	add	r0, pc, r0
    d32c:	bx	lr
    d330:	ldr	r0, [pc, #-2044]	; cb3c <bt_compidtostr@@Base+0x4b0c>
    d334:	add	r0, pc, r0
    d338:	bx	lr
    d33c:	ldr	r0, [pc, #-2052]	; cb40 <bt_compidtostr@@Base+0x4b10>
    d340:	add	r0, pc, r0
    d344:	bx	lr
    d348:	ldr	r0, [pc, #-2060]	; cb44 <bt_compidtostr@@Base+0x4b14>
    d34c:	add	r0, pc, r0
    d350:	bx	lr
    d354:	ldr	r0, [pc, #-2068]	; cb48 <bt_compidtostr@@Base+0x4b18>
    d358:	add	r0, pc, r0
    d35c:	bx	lr
    d360:	ldr	r0, [pc, #-2076]	; cb4c <bt_compidtostr@@Base+0x4b1c>
    d364:	add	r0, pc, r0
    d368:	bx	lr
    d36c:	ldr	r0, [pc, #-2084]	; cb50 <bt_compidtostr@@Base+0x4b20>
    d370:	add	r0, pc, r0
    d374:	bx	lr
    d378:	ldr	r0, [pc, #-2092]	; cb54 <bt_compidtostr@@Base+0x4b24>
    d37c:	add	r0, pc, r0
    d380:	bx	lr
    d384:	ldr	r0, [pc, #-2100]	; cb58 <bt_compidtostr@@Base+0x4b28>
    d388:	add	r0, pc, r0
    d38c:	bx	lr
    d390:	ldr	r0, [pc, #-2108]	; cb5c <bt_compidtostr@@Base+0x4b2c>
    d394:	add	r0, pc, r0
    d398:	bx	lr
    d39c:	ldr	r0, [pc, #-2116]	; cb60 <bt_compidtostr@@Base+0x4b30>
    d3a0:	add	r0, pc, r0
    d3a4:	bx	lr
    d3a8:	ldr	r0, [pc, #-2124]	; cb64 <bt_compidtostr@@Base+0x4b34>
    d3ac:	add	r0, pc, r0
    d3b0:	bx	lr
    d3b4:	ldr	r0, [pc, #-2132]	; cb68 <bt_compidtostr@@Base+0x4b38>
    d3b8:	add	r0, pc, r0
    d3bc:	bx	lr
    d3c0:	ldr	r0, [pc, #-2140]	; cb6c <bt_compidtostr@@Base+0x4b3c>
    d3c4:	add	r0, pc, r0
    d3c8:	bx	lr
    d3cc:	ldr	r0, [pc, #-2148]	; cb70 <bt_compidtostr@@Base+0x4b40>
    d3d0:	add	r0, pc, r0
    d3d4:	bx	lr
    d3d8:	ldr	r0, [pc, #-2156]	; cb74 <bt_compidtostr@@Base+0x4b44>
    d3dc:	add	r0, pc, r0
    d3e0:	bx	lr
    d3e4:	ldr	r0, [pc, #-2164]	; cb78 <bt_compidtostr@@Base+0x4b48>
    d3e8:	add	r0, pc, r0
    d3ec:	bx	lr
    d3f0:	ldr	r0, [pc, #-2172]	; cb7c <bt_compidtostr@@Base+0x4b4c>
    d3f4:	add	r0, pc, r0
    d3f8:	bx	lr
    d3fc:	ldr	r0, [pc, #-2180]	; cb80 <bt_compidtostr@@Base+0x4b50>
    d400:	add	r0, pc, r0
    d404:	bx	lr
    d408:	ldr	r0, [pc, #-2188]	; cb84 <bt_compidtostr@@Base+0x4b54>
    d40c:	add	r0, pc, r0
    d410:	bx	lr
    d414:	ldr	r0, [pc, #-2196]	; cb88 <bt_compidtostr@@Base+0x4b58>
    d418:	add	r0, pc, r0
    d41c:	bx	lr
    d420:	ldr	r0, [pc, #-2204]	; cb8c <bt_compidtostr@@Base+0x4b5c>
    d424:	add	r0, pc, r0
    d428:	bx	lr
    d42c:	ldr	r0, [pc, #-2212]	; cb90 <bt_compidtostr@@Base+0x4b60>
    d430:	add	r0, pc, r0
    d434:	bx	lr
    d438:	ldr	r0, [pc, #-2220]	; cb94 <bt_compidtostr@@Base+0x4b64>
    d43c:	add	r0, pc, r0
    d440:	bx	lr
    d444:	ldr	r0, [pc, #-2228]	; cb98 <bt_compidtostr@@Base+0x4b68>
    d448:	add	r0, pc, r0
    d44c:	bx	lr
    d450:	ldr	r0, [pc, #-2236]	; cb9c <bt_compidtostr@@Base+0x4b6c>
    d454:	add	r0, pc, r0
    d458:	bx	lr
    d45c:	ldr	r0, [pc, #-2244]	; cba0 <bt_compidtostr@@Base+0x4b70>
    d460:	add	r0, pc, r0
    d464:	bx	lr
    d468:	ldr	r0, [pc, #-2252]	; cba4 <bt_compidtostr@@Base+0x4b74>
    d46c:	add	r0, pc, r0
    d470:	bx	lr
    d474:	ldr	r0, [pc, #-2260]	; cba8 <bt_compidtostr@@Base+0x4b78>
    d478:	add	r0, pc, r0
    d47c:	bx	lr
    d480:	ldr	r0, [pc, #-2268]	; cbac <bt_compidtostr@@Base+0x4b7c>
    d484:	add	r0, pc, r0
    d488:	bx	lr
    d48c:	ldr	r0, [pc, #-2276]	; cbb0 <bt_compidtostr@@Base+0x4b80>
    d490:	add	r0, pc, r0
    d494:	bx	lr
    d498:	ldr	r0, [pc, #-2284]	; cbb4 <bt_compidtostr@@Base+0x4b84>
    d49c:	add	r0, pc, r0
    d4a0:	bx	lr
    d4a4:	ldr	r0, [pc, #-2292]	; cbb8 <bt_compidtostr@@Base+0x4b88>
    d4a8:	add	r0, pc, r0
    d4ac:	bx	lr
    d4b0:	ldr	r0, [pc, #-2300]	; cbbc <bt_compidtostr@@Base+0x4b8c>
    d4b4:	add	r0, pc, r0
    d4b8:	bx	lr
    d4bc:	ldr	r0, [pc, #-2308]	; cbc0 <bt_compidtostr@@Base+0x4b90>
    d4c0:	add	r0, pc, r0
    d4c4:	bx	lr
    d4c8:	ldr	r0, [pc, #-2316]	; cbc4 <bt_compidtostr@@Base+0x4b94>
    d4cc:	add	r0, pc, r0
    d4d0:	bx	lr
    d4d4:	ldr	r0, [pc, #-2324]	; cbc8 <bt_compidtostr@@Base+0x4b98>
    d4d8:	add	r0, pc, r0
    d4dc:	bx	lr
    d4e0:	ldr	r0, [pc, #-2332]	; cbcc <bt_compidtostr@@Base+0x4b9c>
    d4e4:	add	r0, pc, r0
    d4e8:	bx	lr
    d4ec:	ldr	r0, [pc, #-2340]	; cbd0 <bt_compidtostr@@Base+0x4ba0>
    d4f0:	add	r0, pc, r0
    d4f4:	bx	lr
    d4f8:	ldr	r0, [pc, #-2348]	; cbd4 <bt_compidtostr@@Base+0x4ba4>
    d4fc:	add	r0, pc, r0
    d500:	bx	lr
    d504:	ldr	r0, [pc, #-2356]	; cbd8 <bt_compidtostr@@Base+0x4ba8>
    d508:	add	r0, pc, r0
    d50c:	bx	lr
    d510:	ldr	r0, [pc, #-2364]	; cbdc <bt_compidtostr@@Base+0x4bac>
    d514:	add	r0, pc, r0
    d518:	bx	lr
    d51c:	ldr	r0, [pc, #-2372]	; cbe0 <bt_compidtostr@@Base+0x4bb0>
    d520:	add	r0, pc, r0
    d524:	bx	lr
    d528:	ldr	r0, [pc, #-2380]	; cbe4 <bt_compidtostr@@Base+0x4bb4>
    d52c:	add	r0, pc, r0
    d530:	bx	lr
    d534:	ldr	r0, [pc, #-2388]	; cbe8 <bt_compidtostr@@Base+0x4bb8>
    d538:	add	r0, pc, r0
    d53c:	bx	lr
    d540:	ldr	r0, [pc, #-2396]	; cbec <bt_compidtostr@@Base+0x4bbc>
    d544:	add	r0, pc, r0
    d548:	bx	lr
    d54c:	ldr	r0, [pc, #-2404]	; cbf0 <bt_compidtostr@@Base+0x4bc0>
    d550:	add	r0, pc, r0
    d554:	bx	lr
    d558:	ldr	r0, [pc, #-2412]	; cbf4 <bt_compidtostr@@Base+0x4bc4>
    d55c:	add	r0, pc, r0
    d560:	bx	lr
    d564:	ldr	r0, [pc, #-2420]	; cbf8 <bt_compidtostr@@Base+0x4bc8>
    d568:	add	r0, pc, r0
    d56c:	bx	lr
    d570:	ldr	r0, [pc, #-2428]	; cbfc <bt_compidtostr@@Base+0x4bcc>
    d574:	add	r0, pc, r0
    d578:	bx	lr
    d57c:	ldr	r0, [pc, #-2436]	; cc00 <bt_compidtostr@@Base+0x4bd0>
    d580:	add	r0, pc, r0
    d584:	bx	lr
    d588:	ldr	r0, [pc, #-2444]	; cc04 <bt_compidtostr@@Base+0x4bd4>
    d58c:	add	r0, pc, r0
    d590:	bx	lr
    d594:	ldr	r0, [pc, #-2452]	; cc08 <bt_compidtostr@@Base+0x4bd8>
    d598:	add	r0, pc, r0
    d59c:	bx	lr
    d5a0:	ldr	r0, [pc, #-2460]	; cc0c <bt_compidtostr@@Base+0x4bdc>
    d5a4:	add	r0, pc, r0
    d5a8:	bx	lr
    d5ac:	ldr	r0, [pc, #2440]	; df3c <bt_compidtostr@@Base+0x5f0c>
    d5b0:	add	r0, pc, r0
    d5b4:	bx	lr
    d5b8:	ldr	r0, [pc, #2432]	; df40 <bt_compidtostr@@Base+0x5f10>
    d5bc:	add	r0, pc, r0
    d5c0:	bx	lr
    d5c4:	ldr	r0, [pc, #2424]	; df44 <bt_compidtostr@@Base+0x5f14>
    d5c8:	add	r0, pc, r0
    d5cc:	bx	lr
    d5d0:	ldr	r0, [pc, #2416]	; df48 <bt_compidtostr@@Base+0x5f18>
    d5d4:	add	r0, pc, r0
    d5d8:	bx	lr
    d5dc:	ldr	r0, [pc, #2408]	; df4c <bt_compidtostr@@Base+0x5f1c>
    d5e0:	add	r0, pc, r0
    d5e4:	bx	lr
    d5e8:	ldr	r0, [pc, #2400]	; df50 <bt_compidtostr@@Base+0x5f20>
    d5ec:	add	r0, pc, r0
    d5f0:	bx	lr
    d5f4:	ldr	r0, [pc, #2392]	; df54 <bt_compidtostr@@Base+0x5f24>
    d5f8:	add	r0, pc, r0
    d5fc:	bx	lr
    d600:	ldr	r0, [pc, #2384]	; df58 <bt_compidtostr@@Base+0x5f28>
    d604:	add	r0, pc, r0
    d608:	bx	lr
    d60c:	ldr	r0, [pc, #2376]	; df5c <bt_compidtostr@@Base+0x5f2c>
    d610:	add	r0, pc, r0
    d614:	bx	lr
    d618:	ldr	r0, [pc, #2368]	; df60 <bt_compidtostr@@Base+0x5f30>
    d61c:	add	r0, pc, r0
    d620:	bx	lr
    d624:	ldr	r0, [pc, #2360]	; df64 <bt_compidtostr@@Base+0x5f34>
    d628:	add	r0, pc, r0
    d62c:	bx	lr
    d630:	ldr	r0, [pc, #2352]	; df68 <bt_compidtostr@@Base+0x5f38>
    d634:	add	r0, pc, r0
    d638:	bx	lr
    d63c:	ldr	r0, [pc, #2344]	; df6c <bt_compidtostr@@Base+0x5f3c>
    d640:	add	r0, pc, r0
    d644:	bx	lr
    d648:	ldr	r0, [pc, #2336]	; df70 <bt_compidtostr@@Base+0x5f40>
    d64c:	add	r0, pc, r0
    d650:	bx	lr
    d654:	ldr	r0, [pc, #2328]	; df74 <bt_compidtostr@@Base+0x5f44>
    d658:	add	r0, pc, r0
    d65c:	bx	lr
    d660:	ldr	r0, [pc, #2320]	; df78 <bt_compidtostr@@Base+0x5f48>
    d664:	add	r0, pc, r0
    d668:	bx	lr
    d66c:	ldr	r0, [pc, #2312]	; df7c <bt_compidtostr@@Base+0x5f4c>
    d670:	add	r0, pc, r0
    d674:	bx	lr
    d678:	ldr	r0, [pc, #2304]	; df80 <bt_compidtostr@@Base+0x5f50>
    d67c:	add	r0, pc, r0
    d680:	bx	lr
    d684:	ldr	r0, [pc, #2296]	; df84 <bt_compidtostr@@Base+0x5f54>
    d688:	add	r0, pc, r0
    d68c:	bx	lr
    d690:	ldr	r0, [pc, #2288]	; df88 <bt_compidtostr@@Base+0x5f58>
    d694:	add	r0, pc, r0
    d698:	bx	lr
    d69c:	ldr	r0, [pc, #2280]	; df8c <bt_compidtostr@@Base+0x5f5c>
    d6a0:	add	r0, pc, r0
    d6a4:	bx	lr
    d6a8:	ldr	r0, [pc, #2272]	; df90 <bt_compidtostr@@Base+0x5f60>
    d6ac:	add	r0, pc, r0
    d6b0:	bx	lr
    d6b4:	ldr	r0, [pc, #2264]	; df94 <bt_compidtostr@@Base+0x5f64>
    d6b8:	add	r0, pc, r0
    d6bc:	bx	lr
    d6c0:	ldr	r0, [pc, #2256]	; df98 <bt_compidtostr@@Base+0x5f68>
    d6c4:	add	r0, pc, r0
    d6c8:	bx	lr
    d6cc:	ldr	r0, [pc, #2248]	; df9c <bt_compidtostr@@Base+0x5f6c>
    d6d0:	add	r0, pc, r0
    d6d4:	bx	lr
    d6d8:	ldr	r0, [pc, #2240]	; dfa0 <bt_compidtostr@@Base+0x5f70>
    d6dc:	add	r0, pc, r0
    d6e0:	bx	lr
    d6e4:	ldr	r0, [pc, #2232]	; dfa4 <bt_compidtostr@@Base+0x5f74>
    d6e8:	add	r0, pc, r0
    d6ec:	bx	lr
    d6f0:	ldr	r0, [pc, #2224]	; dfa8 <bt_compidtostr@@Base+0x5f78>
    d6f4:	add	r0, pc, r0
    d6f8:	bx	lr
    d6fc:	ldr	r0, [pc, #2216]	; dfac <bt_compidtostr@@Base+0x5f7c>
    d700:	add	r0, pc, r0
    d704:	bx	lr
    d708:	ldr	r0, [pc, #2208]	; dfb0 <bt_compidtostr@@Base+0x5f80>
    d70c:	add	r0, pc, r0
    d710:	bx	lr
    d714:	ldr	r0, [pc, #2200]	; dfb4 <bt_compidtostr@@Base+0x5f84>
    d718:	add	r0, pc, r0
    d71c:	bx	lr
    d720:	ldr	r0, [pc, #2192]	; dfb8 <bt_compidtostr@@Base+0x5f88>
    d724:	add	r0, pc, r0
    d728:	bx	lr
    d72c:	ldr	r0, [pc, #2184]	; dfbc <bt_compidtostr@@Base+0x5f8c>
    d730:	add	r0, pc, r0
    d734:	bx	lr
    d738:	ldr	r0, [pc, #2176]	; dfc0 <bt_compidtostr@@Base+0x5f90>
    d73c:	add	r0, pc, r0
    d740:	bx	lr
    d744:	ldr	r0, [pc, #2168]	; dfc4 <bt_compidtostr@@Base+0x5f94>
    d748:	add	r0, pc, r0
    d74c:	bx	lr
    d750:	ldr	r0, [pc, #2160]	; dfc8 <bt_compidtostr@@Base+0x5f98>
    d754:	add	r0, pc, r0
    d758:	bx	lr
    d75c:	ldr	r0, [pc, #2152]	; dfcc <bt_compidtostr@@Base+0x5f9c>
    d760:	add	r0, pc, r0
    d764:	bx	lr
    d768:	ldr	r0, [pc, #2144]	; dfd0 <bt_compidtostr@@Base+0x5fa0>
    d76c:	add	r0, pc, r0
    d770:	bx	lr
    d774:	ldr	r0, [pc, #2136]	; dfd4 <bt_compidtostr@@Base+0x5fa4>
    d778:	add	r0, pc, r0
    d77c:	bx	lr
    d780:	ldr	r0, [pc, #2128]	; dfd8 <bt_compidtostr@@Base+0x5fa8>
    d784:	add	r0, pc, r0
    d788:	bx	lr
    d78c:	ldr	r0, [pc, #2120]	; dfdc <bt_compidtostr@@Base+0x5fac>
    d790:	add	r0, pc, r0
    d794:	bx	lr
    d798:	ldr	r0, [pc, #2112]	; dfe0 <bt_compidtostr@@Base+0x5fb0>
    d79c:	add	r0, pc, r0
    d7a0:	bx	lr
    d7a4:	ldr	r0, [pc, #2104]	; dfe4 <bt_compidtostr@@Base+0x5fb4>
    d7a8:	add	r0, pc, r0
    d7ac:	bx	lr
    d7b0:	ldr	r0, [pc, #2096]	; dfe8 <bt_compidtostr@@Base+0x5fb8>
    d7b4:	add	r0, pc, r0
    d7b8:	bx	lr
    d7bc:	ldr	r0, [pc, #2088]	; dfec <bt_compidtostr@@Base+0x5fbc>
    d7c0:	add	r0, pc, r0
    d7c4:	bx	lr
    d7c8:	ldr	r0, [pc, #2080]	; dff0 <bt_compidtostr@@Base+0x5fc0>
    d7cc:	add	r0, pc, r0
    d7d0:	bx	lr
    d7d4:	ldr	r0, [pc, #2072]	; dff4 <bt_compidtostr@@Base+0x5fc4>
    d7d8:	add	r0, pc, r0
    d7dc:	bx	lr
    d7e0:	ldr	r0, [pc, #2064]	; dff8 <bt_compidtostr@@Base+0x5fc8>
    d7e4:	add	r0, pc, r0
    d7e8:	bx	lr
    d7ec:	ldr	r0, [pc, #2056]	; dffc <bt_compidtostr@@Base+0x5fcc>
    d7f0:	add	r0, pc, r0
    d7f4:	bx	lr
    d7f8:	ldr	r0, [pc, #2048]	; e000 <bt_compidtostr@@Base+0x5fd0>
    d7fc:	add	r0, pc, r0
    d800:	bx	lr
    d804:	ldr	r0, [pc, #2040]	; e004 <bt_compidtostr@@Base+0x5fd4>
    d808:	add	r0, pc, r0
    d80c:	bx	lr
    d810:	ldr	r0, [pc, #2032]	; e008 <bt_compidtostr@@Base+0x5fd8>
    d814:	add	r0, pc, r0
    d818:	bx	lr
    d81c:	ldr	r0, [pc, #2024]	; e00c <bt_compidtostr@@Base+0x5fdc>
    d820:	add	r0, pc, r0
    d824:	bx	lr
    d828:	ldr	r0, [pc, #2016]	; e010 <bt_compidtostr@@Base+0x5fe0>
    d82c:	add	r0, pc, r0
    d830:	bx	lr
    d834:	ldr	r0, [pc, #2008]	; e014 <bt_compidtostr@@Base+0x5fe4>
    d838:	add	r0, pc, r0
    d83c:	bx	lr
    d840:	ldr	r0, [pc, #2000]	; e018 <bt_compidtostr@@Base+0x5fe8>
    d844:	add	r0, pc, r0
    d848:	bx	lr
    d84c:	ldr	r0, [pc, #1992]	; e01c <bt_compidtostr@@Base+0x5fec>
    d850:	add	r0, pc, r0
    d854:	bx	lr
    d858:	ldr	r0, [pc, #1984]	; e020 <bt_compidtostr@@Base+0x5ff0>
    d85c:	add	r0, pc, r0
    d860:	bx	lr
    d864:	ldr	r0, [pc, #1976]	; e024 <bt_compidtostr@@Base+0x5ff4>
    d868:	add	r0, pc, r0
    d86c:	bx	lr
    d870:	ldr	r0, [pc, #1968]	; e028 <bt_compidtostr@@Base+0x5ff8>
    d874:	add	r0, pc, r0
    d878:	bx	lr
    d87c:	ldr	r0, [pc, #1960]	; e02c <bt_compidtostr@@Base+0x5ffc>
    d880:	add	r0, pc, r0
    d884:	bx	lr
    d888:	ldr	r0, [pc, #1952]	; e030 <bt_compidtostr@@Base+0x6000>
    d88c:	add	r0, pc, r0
    d890:	bx	lr
    d894:	ldr	r0, [pc, #1944]	; e034 <bt_compidtostr@@Base+0x6004>
    d898:	add	r0, pc, r0
    d89c:	bx	lr
    d8a0:	ldr	r0, [pc, #1936]	; e038 <bt_compidtostr@@Base+0x6008>
    d8a4:	add	r0, pc, r0
    d8a8:	bx	lr
    d8ac:	ldr	r0, [pc, #1928]	; e03c <bt_compidtostr@@Base+0x600c>
    d8b0:	add	r0, pc, r0
    d8b4:	bx	lr
    d8b8:	ldr	r0, [pc, #1920]	; e040 <bt_compidtostr@@Base+0x6010>
    d8bc:	add	r0, pc, r0
    d8c0:	bx	lr
    d8c4:	ldr	r0, [pc, #1912]	; e044 <bt_compidtostr@@Base+0x6014>
    d8c8:	add	r0, pc, r0
    d8cc:	bx	lr
    d8d0:	ldr	r0, [pc, #1904]	; e048 <bt_compidtostr@@Base+0x6018>
    d8d4:	add	r0, pc, r0
    d8d8:	bx	lr
    d8dc:	ldr	r0, [pc, #1896]	; e04c <bt_compidtostr@@Base+0x601c>
    d8e0:	add	r0, pc, r0
    d8e4:	bx	lr
    d8e8:	ldr	r0, [pc, #1888]	; e050 <bt_compidtostr@@Base+0x6020>
    d8ec:	add	r0, pc, r0
    d8f0:	bx	lr
    d8f4:	ldr	r0, [pc, #1880]	; e054 <bt_compidtostr@@Base+0x6024>
    d8f8:	add	r0, pc, r0
    d8fc:	bx	lr
    d900:	ldr	r0, [pc, #1872]	; e058 <bt_compidtostr@@Base+0x6028>
    d904:	add	r0, pc, r0
    d908:	bx	lr
    d90c:	ldr	r0, [pc, #1864]	; e05c <bt_compidtostr@@Base+0x602c>
    d910:	add	r0, pc, r0
    d914:	bx	lr
    d918:	ldr	r0, [pc, #1856]	; e060 <bt_compidtostr@@Base+0x6030>
    d91c:	add	r0, pc, r0
    d920:	bx	lr
    d924:	ldr	r0, [pc, #1848]	; e064 <bt_compidtostr@@Base+0x6034>
    d928:	add	r0, pc, r0
    d92c:	bx	lr
    d930:	ldr	r0, [pc, #1840]	; e068 <bt_compidtostr@@Base+0x6038>
    d934:	add	r0, pc, r0
    d938:	bx	lr
    d93c:	ldr	r0, [pc, #1832]	; e06c <bt_compidtostr@@Base+0x603c>
    d940:	add	r0, pc, r0
    d944:	bx	lr
    d948:	ldr	r0, [pc, #1824]	; e070 <bt_compidtostr@@Base+0x6040>
    d94c:	add	r0, pc, r0
    d950:	bx	lr
    d954:	ldr	r0, [pc, #1816]	; e074 <bt_compidtostr@@Base+0x6044>
    d958:	add	r0, pc, r0
    d95c:	bx	lr
    d960:	ldr	r0, [pc, #1808]	; e078 <bt_compidtostr@@Base+0x6048>
    d964:	add	r0, pc, r0
    d968:	bx	lr
    d96c:	ldr	r0, [pc, #1800]	; e07c <bt_compidtostr@@Base+0x604c>
    d970:	add	r0, pc, r0
    d974:	bx	lr
    d978:	ldr	r0, [pc, #1792]	; e080 <bt_compidtostr@@Base+0x6050>
    d97c:	add	r0, pc, r0
    d980:	bx	lr
    d984:	ldr	r0, [pc, #1784]	; e084 <bt_compidtostr@@Base+0x6054>
    d988:	add	r0, pc, r0
    d98c:	bx	lr
    d990:	ldr	r0, [pc, #1776]	; e088 <bt_compidtostr@@Base+0x6058>
    d994:	add	r0, pc, r0
    d998:	bx	lr
    d99c:	ldr	r0, [pc, #1768]	; e08c <bt_compidtostr@@Base+0x605c>
    d9a0:	add	r0, pc, r0
    d9a4:	bx	lr
    d9a8:	ldr	r0, [pc, #1760]	; e090 <bt_compidtostr@@Base+0x6060>
    d9ac:	add	r0, pc, r0
    d9b0:	bx	lr
    d9b4:	ldr	r0, [pc, #1752]	; e094 <bt_compidtostr@@Base+0x6064>
    d9b8:	add	r0, pc, r0
    d9bc:	bx	lr
    d9c0:	ldr	r0, [pc, #1744]	; e098 <bt_compidtostr@@Base+0x6068>
    d9c4:	add	r0, pc, r0
    d9c8:	bx	lr
    d9cc:	ldr	r0, [pc, #1736]	; e09c <bt_compidtostr@@Base+0x606c>
    d9d0:	add	r0, pc, r0
    d9d4:	bx	lr
    d9d8:	ldr	r0, [pc, #1728]	; e0a0 <bt_compidtostr@@Base+0x6070>
    d9dc:	add	r0, pc, r0
    d9e0:	bx	lr
    d9e4:	ldr	r0, [pc, #1720]	; e0a4 <bt_compidtostr@@Base+0x6074>
    d9e8:	add	r0, pc, r0
    d9ec:	bx	lr
    d9f0:	ldr	r0, [pc, #1712]	; e0a8 <bt_compidtostr@@Base+0x6078>
    d9f4:	add	r0, pc, r0
    d9f8:	bx	lr
    d9fc:	ldr	r0, [pc, #1704]	; e0ac <bt_compidtostr@@Base+0x607c>
    da00:	add	r0, pc, r0
    da04:	bx	lr
    da08:	ldr	r0, [pc, #1696]	; e0b0 <bt_compidtostr@@Base+0x6080>
    da0c:	add	r0, pc, r0
    da10:	bx	lr
    da14:	ldr	r0, [pc, #1688]	; e0b4 <bt_compidtostr@@Base+0x6084>
    da18:	add	r0, pc, r0
    da1c:	bx	lr
    da20:	ldr	r0, [pc, #1680]	; e0b8 <bt_compidtostr@@Base+0x6088>
    da24:	add	r0, pc, r0
    da28:	bx	lr
    da2c:	ldr	r0, [pc, #1672]	; e0bc <bt_compidtostr@@Base+0x608c>
    da30:	add	r0, pc, r0
    da34:	bx	lr
    da38:	ldr	r0, [pc, #1664]	; e0c0 <bt_compidtostr@@Base+0x6090>
    da3c:	add	r0, pc, r0
    da40:	bx	lr
    da44:	ldr	r0, [pc, #1656]	; e0c4 <bt_compidtostr@@Base+0x6094>
    da48:	add	r0, pc, r0
    da4c:	bx	lr
    da50:	ldr	r0, [pc, #1648]	; e0c8 <bt_compidtostr@@Base+0x6098>
    da54:	add	r0, pc, r0
    da58:	bx	lr
    da5c:	ldr	r0, [pc, #1640]	; e0cc <bt_compidtostr@@Base+0x609c>
    da60:	add	r0, pc, r0
    da64:	bx	lr
    da68:	ldr	r0, [pc, #1632]	; e0d0 <bt_compidtostr@@Base+0x60a0>
    da6c:	add	r0, pc, r0
    da70:	bx	lr
    da74:	ldr	r0, [pc, #1624]	; e0d4 <bt_compidtostr@@Base+0x60a4>
    da78:	add	r0, pc, r0
    da7c:	bx	lr
    da80:	ldr	r0, [pc, #1616]	; e0d8 <bt_compidtostr@@Base+0x60a8>
    da84:	add	r0, pc, r0
    da88:	bx	lr
    da8c:	ldr	r0, [pc, #1608]	; e0dc <bt_compidtostr@@Base+0x60ac>
    da90:	add	r0, pc, r0
    da94:	bx	lr
    da98:	ldr	r0, [pc, #1600]	; e0e0 <bt_compidtostr@@Base+0x60b0>
    da9c:	add	r0, pc, r0
    daa0:	bx	lr
    daa4:	ldr	r0, [pc, #1592]	; e0e4 <bt_compidtostr@@Base+0x60b4>
    daa8:	add	r0, pc, r0
    daac:	bx	lr
    dab0:	ldr	r0, [pc, #1584]	; e0e8 <bt_compidtostr@@Base+0x60b8>
    dab4:	add	r0, pc, r0
    dab8:	bx	lr
    dabc:	ldr	r0, [pc, #1576]	; e0ec <bt_compidtostr@@Base+0x60bc>
    dac0:	add	r0, pc, r0
    dac4:	bx	lr
    dac8:	ldr	r0, [pc, #1568]	; e0f0 <bt_compidtostr@@Base+0x60c0>
    dacc:	add	r0, pc, r0
    dad0:	bx	lr
    dad4:	ldr	r0, [pc, #1560]	; e0f4 <bt_compidtostr@@Base+0x60c4>
    dad8:	add	r0, pc, r0
    dadc:	bx	lr
    dae0:	ldr	r0, [pc, #1552]	; e0f8 <bt_compidtostr@@Base+0x60c8>
    dae4:	add	r0, pc, r0
    dae8:	bx	lr
    daec:	ldr	r0, [pc, #1544]	; e0fc <bt_compidtostr@@Base+0x60cc>
    daf0:	add	r0, pc, r0
    daf4:	bx	lr
    daf8:	ldr	r0, [pc, #1536]	; e100 <bt_compidtostr@@Base+0x60d0>
    dafc:	add	r0, pc, r0
    db00:	bx	lr
    db04:	ldr	r0, [pc, #1528]	; e104 <bt_compidtostr@@Base+0x60d4>
    db08:	add	r0, pc, r0
    db0c:	bx	lr
    db10:	ldr	r0, [pc, #1520]	; e108 <bt_compidtostr@@Base+0x60d8>
    db14:	add	r0, pc, r0
    db18:	bx	lr
    db1c:	ldr	r0, [pc, #1512]	; e10c <bt_compidtostr@@Base+0x60dc>
    db20:	add	r0, pc, r0
    db24:	bx	lr
    db28:	ldr	r0, [pc, #1504]	; e110 <bt_compidtostr@@Base+0x60e0>
    db2c:	add	r0, pc, r0
    db30:	bx	lr
    db34:	ldr	r0, [pc, #1496]	; e114 <bt_compidtostr@@Base+0x60e4>
    db38:	add	r0, pc, r0
    db3c:	bx	lr
    db40:	ldr	r0, [pc, #1488]	; e118 <bt_compidtostr@@Base+0x60e8>
    db44:	add	r0, pc, r0
    db48:	bx	lr
    db4c:	ldr	r0, [pc, #1480]	; e11c <bt_compidtostr@@Base+0x60ec>
    db50:	add	r0, pc, r0
    db54:	bx	lr
    db58:	ldr	r0, [pc, #1472]	; e120 <bt_compidtostr@@Base+0x60f0>
    db5c:	add	r0, pc, r0
    db60:	bx	lr
    db64:	ldr	r0, [pc, #1464]	; e124 <bt_compidtostr@@Base+0x60f4>
    db68:	add	r0, pc, r0
    db6c:	bx	lr
    db70:	ldr	r0, [pc, #1456]	; e128 <bt_compidtostr@@Base+0x60f8>
    db74:	add	r0, pc, r0
    db78:	bx	lr
    db7c:	ldr	r0, [pc, #1448]	; e12c <bt_compidtostr@@Base+0x60fc>
    db80:	add	r0, pc, r0
    db84:	bx	lr
    db88:	ldr	r0, [pc, #1440]	; e130 <bt_compidtostr@@Base+0x6100>
    db8c:	add	r0, pc, r0
    db90:	bx	lr
    db94:	ldr	r0, [pc, #1432]	; e134 <bt_compidtostr@@Base+0x6104>
    db98:	add	r0, pc, r0
    db9c:	bx	lr
    dba0:	ldr	r0, [pc, #1424]	; e138 <bt_compidtostr@@Base+0x6108>
    dba4:	add	r0, pc, r0
    dba8:	bx	lr
    dbac:	ldr	r0, [pc, #1416]	; e13c <bt_compidtostr@@Base+0x610c>
    dbb0:	add	r0, pc, r0
    dbb4:	bx	lr
    dbb8:	ldr	r0, [pc, #1408]	; e140 <bt_compidtostr@@Base+0x6110>
    dbbc:	add	r0, pc, r0
    dbc0:	bx	lr
    dbc4:	ldr	r0, [pc, #1400]	; e144 <bt_compidtostr@@Base+0x6114>
    dbc8:	add	r0, pc, r0
    dbcc:	bx	lr
    dbd0:	ldr	r0, [pc, #1392]	; e148 <bt_compidtostr@@Base+0x6118>
    dbd4:	add	r0, pc, r0
    dbd8:	bx	lr
    dbdc:	ldr	r0, [pc, #1384]	; e14c <bt_compidtostr@@Base+0x611c>
    dbe0:	add	r0, pc, r0
    dbe4:	bx	lr
    dbe8:	ldr	r0, [pc, #1376]	; e150 <bt_compidtostr@@Base+0x6120>
    dbec:	add	r0, pc, r0
    dbf0:	bx	lr
    dbf4:	ldr	r0, [pc, #1368]	; e154 <bt_compidtostr@@Base+0x6124>
    dbf8:	add	r0, pc, r0
    dbfc:	bx	lr
    dc00:	ldr	r0, [pc, #1360]	; e158 <bt_compidtostr@@Base+0x6128>
    dc04:	add	r0, pc, r0
    dc08:	bx	lr
    dc0c:	ldr	r0, [pc, #1352]	; e15c <bt_compidtostr@@Base+0x612c>
    dc10:	add	r0, pc, r0
    dc14:	bx	lr
    dc18:	ldr	r0, [pc, #1344]	; e160 <bt_compidtostr@@Base+0x6130>
    dc1c:	add	r0, pc, r0
    dc20:	bx	lr
    dc24:	ldr	r0, [pc, #1336]	; e164 <bt_compidtostr@@Base+0x6134>
    dc28:	add	r0, pc, r0
    dc2c:	bx	lr
    dc30:	ldr	r0, [pc, #1328]	; e168 <bt_compidtostr@@Base+0x6138>
    dc34:	add	r0, pc, r0
    dc38:	bx	lr
    dc3c:	ldr	r0, [pc, #1320]	; e16c <bt_compidtostr@@Base+0x613c>
    dc40:	add	r0, pc, r0
    dc44:	bx	lr
    dc48:	ldr	r0, [pc, #1312]	; e170 <bt_compidtostr@@Base+0x6140>
    dc4c:	add	r0, pc, r0
    dc50:	bx	lr
    dc54:	ldr	r0, [pc, #1304]	; e174 <bt_compidtostr@@Base+0x6144>
    dc58:	add	r0, pc, r0
    dc5c:	bx	lr
    dc60:	ldr	r0, [pc, #1296]	; e178 <bt_compidtostr@@Base+0x6148>
    dc64:	add	r0, pc, r0
    dc68:	bx	lr
    dc6c:	ldr	r0, [pc, #1288]	; e17c <bt_compidtostr@@Base+0x614c>
    dc70:	add	r0, pc, r0
    dc74:	bx	lr
    dc78:	ldr	r0, [pc, #1280]	; e180 <bt_compidtostr@@Base+0x6150>
    dc7c:	add	r0, pc, r0
    dc80:	bx	lr
    dc84:	ldr	r0, [pc, #1272]	; e184 <bt_compidtostr@@Base+0x6154>
    dc88:	add	r0, pc, r0
    dc8c:	bx	lr
    dc90:	ldr	r0, [pc, #1264]	; e188 <bt_compidtostr@@Base+0x6158>
    dc94:	add	r0, pc, r0
    dc98:	bx	lr
    dc9c:	ldr	r0, [pc, #1256]	; e18c <bt_compidtostr@@Base+0x615c>
    dca0:	add	r0, pc, r0
    dca4:	bx	lr
    dca8:	ldr	r0, [pc, #1248]	; e190 <bt_compidtostr@@Base+0x6160>
    dcac:	add	r0, pc, r0
    dcb0:	bx	lr
    dcb4:	ldr	r0, [pc, #1240]	; e194 <bt_compidtostr@@Base+0x6164>
    dcb8:	add	r0, pc, r0
    dcbc:	bx	lr
    dcc0:	ldr	r0, [pc, #1232]	; e198 <bt_compidtostr@@Base+0x6168>
    dcc4:	add	r0, pc, r0
    dcc8:	bx	lr
    dccc:	ldr	r0, [pc, #1224]	; e19c <bt_compidtostr@@Base+0x616c>
    dcd0:	add	r0, pc, r0
    dcd4:	bx	lr
    dcd8:	ldr	r0, [pc, #1216]	; e1a0 <bt_compidtostr@@Base+0x6170>
    dcdc:	add	r0, pc, r0
    dce0:	bx	lr
    dce4:	ldr	r0, [pc, #1208]	; e1a4 <bt_compidtostr@@Base+0x6174>
    dce8:	add	r0, pc, r0
    dcec:	bx	lr
    dcf0:	ldr	r0, [pc, #1200]	; e1a8 <bt_compidtostr@@Base+0x6178>
    dcf4:	add	r0, pc, r0
    dcf8:	bx	lr
    dcfc:	ldr	r0, [pc, #1192]	; e1ac <bt_compidtostr@@Base+0x617c>
    dd00:	add	r0, pc, r0
    dd04:	bx	lr
    dd08:	ldr	r0, [pc, #1184]	; e1b0 <bt_compidtostr@@Base+0x6180>
    dd0c:	add	r0, pc, r0
    dd10:	bx	lr
    dd14:	ldr	r0, [pc, #1176]	; e1b4 <bt_compidtostr@@Base+0x6184>
    dd18:	add	r0, pc, r0
    dd1c:	bx	lr
    dd20:	ldr	r0, [pc, #1168]	; e1b8 <bt_compidtostr@@Base+0x6188>
    dd24:	add	r0, pc, r0
    dd28:	bx	lr
    dd2c:	ldr	r0, [pc, #1160]	; e1bc <bt_compidtostr@@Base+0x618c>
    dd30:	add	r0, pc, r0
    dd34:	bx	lr
    dd38:	ldr	r0, [pc, #1152]	; e1c0 <bt_compidtostr@@Base+0x6190>
    dd3c:	add	r0, pc, r0
    dd40:	bx	lr
    dd44:	ldr	r0, [pc, #1144]	; e1c4 <bt_compidtostr@@Base+0x6194>
    dd48:	add	r0, pc, r0
    dd4c:	bx	lr
    dd50:	ldr	r0, [pc, #1136]	; e1c8 <bt_compidtostr@@Base+0x6198>
    dd54:	add	r0, pc, r0
    dd58:	bx	lr
    dd5c:	ldr	r0, [pc, #1128]	; e1cc <bt_compidtostr@@Base+0x619c>
    dd60:	add	r0, pc, r0
    dd64:	bx	lr
    dd68:	ldr	r0, [pc, #1120]	; e1d0 <bt_compidtostr@@Base+0x61a0>
    dd6c:	add	r0, pc, r0
    dd70:	bx	lr
    dd74:	ldr	r0, [pc, #1112]	; e1d4 <bt_compidtostr@@Base+0x61a4>
    dd78:	add	r0, pc, r0
    dd7c:	bx	lr
    dd80:	ldr	r0, [pc, #1104]	; e1d8 <bt_compidtostr@@Base+0x61a8>
    dd84:	add	r0, pc, r0
    dd88:	bx	lr
    dd8c:	ldr	r0, [pc, #1096]	; e1dc <bt_compidtostr@@Base+0x61ac>
    dd90:	add	r0, pc, r0
    dd94:	bx	lr
    dd98:	ldr	r0, [pc, #1088]	; e1e0 <bt_compidtostr@@Base+0x61b0>
    dd9c:	add	r0, pc, r0
    dda0:	bx	lr
    dda4:	ldr	r0, [pc, #1080]	; e1e4 <bt_compidtostr@@Base+0x61b4>
    dda8:	add	r0, pc, r0
    ddac:	bx	lr
    ddb0:	ldr	r0, [pc, #1072]	; e1e8 <bt_compidtostr@@Base+0x61b8>
    ddb4:	add	r0, pc, r0
    ddb8:	bx	lr
    ddbc:	ldr	r0, [pc, #1064]	; e1ec <bt_compidtostr@@Base+0x61bc>
    ddc0:	add	r0, pc, r0
    ddc4:	bx	lr
    ddc8:	ldr	r0, [pc, #1056]	; e1f0 <bt_compidtostr@@Base+0x61c0>
    ddcc:	add	r0, pc, r0
    ddd0:	bx	lr
    ddd4:	ldr	r0, [pc, #1048]	; e1f4 <bt_compidtostr@@Base+0x61c4>
    ddd8:	add	r0, pc, r0
    dddc:	bx	lr
    dde0:	ldr	r0, [pc, #1040]	; e1f8 <bt_compidtostr@@Base+0x61c8>
    dde4:	add	r0, pc, r0
    dde8:	bx	lr
    ddec:	ldr	r0, [pc, #1032]	; e1fc <bt_compidtostr@@Base+0x61cc>
    ddf0:	add	r0, pc, r0
    ddf4:	bx	lr
    ddf8:	ldr	r0, [pc, #1024]	; e200 <bt_compidtostr@@Base+0x61d0>
    ddfc:	add	r0, pc, r0
    de00:	bx	lr
    de04:	ldr	r0, [pc, #1016]	; e204 <bt_compidtostr@@Base+0x61d4>
    de08:	add	r0, pc, r0
    de0c:	bx	lr
    de10:	ldr	r0, [pc, #1008]	; e208 <bt_compidtostr@@Base+0x61d8>
    de14:	add	r0, pc, r0
    de18:	bx	lr
    de1c:	ldr	r0, [pc, #1000]	; e20c <bt_compidtostr@@Base+0x61dc>
    de20:	add	r0, pc, r0
    de24:	bx	lr
    de28:	ldr	r0, [pc, #992]	; e210 <bt_compidtostr@@Base+0x61e0>
    de2c:	add	r0, pc, r0
    de30:	bx	lr
    de34:	ldr	r0, [pc, #984]	; e214 <bt_compidtostr@@Base+0x61e4>
    de38:	add	r0, pc, r0
    de3c:	bx	lr
    de40:	ldr	r0, [pc, #976]	; e218 <bt_compidtostr@@Base+0x61e8>
    de44:	add	r0, pc, r0
    de48:	bx	lr
    de4c:	ldr	r0, [pc, #968]	; e21c <bt_compidtostr@@Base+0x61ec>
    de50:	add	r0, pc, r0
    de54:	bx	lr
    de58:	ldr	r0, [pc, #960]	; e220 <bt_compidtostr@@Base+0x61f0>
    de5c:	add	r0, pc, r0
    de60:	bx	lr
    de64:	ldr	r0, [pc, #952]	; e224 <bt_compidtostr@@Base+0x61f4>
    de68:	add	r0, pc, r0
    de6c:	bx	lr
    de70:	ldr	r0, [pc, #944]	; e228 <bt_compidtostr@@Base+0x61f8>
    de74:	add	r0, pc, r0
    de78:	bx	lr
    de7c:	ldr	r0, [pc, #936]	; e22c <bt_compidtostr@@Base+0x61fc>
    de80:	add	r0, pc, r0
    de84:	bx	lr
    de88:	ldr	r0, [pc, #928]	; e230 <bt_compidtostr@@Base+0x6200>
    de8c:	add	r0, pc, r0
    de90:	bx	lr
    de94:	ldr	r0, [pc, #920]	; e234 <bt_compidtostr@@Base+0x6204>
    de98:	add	r0, pc, r0
    de9c:	bx	lr
    dea0:	ldr	r0, [pc, #912]	; e238 <bt_compidtostr@@Base+0x6208>
    dea4:	add	r0, pc, r0
    dea8:	bx	lr
    deac:	ldr	r0, [pc, #904]	; e23c <bt_compidtostr@@Base+0x620c>
    deb0:	add	r0, pc, r0
    deb4:	bx	lr
    deb8:	ldr	r0, [pc, #896]	; e240 <bt_compidtostr@@Base+0x6210>
    debc:	add	r0, pc, r0
    dec0:	bx	lr
    dec4:	ldr	r0, [pc, #888]	; e244 <bt_compidtostr@@Base+0x6214>
    dec8:	add	r0, pc, r0
    decc:	bx	lr
    ded0:	ldr	r0, [pc, #880]	; e248 <bt_compidtostr@@Base+0x6218>
    ded4:	add	r0, pc, r0
    ded8:	bx	lr
    dedc:	ldr	r0, [pc, #872]	; e24c <bt_compidtostr@@Base+0x621c>
    dee0:	add	r0, pc, r0
    dee4:	bx	lr
    dee8:	ldr	r0, [pc, #864]	; e250 <bt_compidtostr@@Base+0x6220>
    deec:	add	r0, pc, r0
    def0:	bx	lr
    def4:	ldr	r0, [pc, #856]	; e254 <bt_compidtostr@@Base+0x6224>
    def8:	add	r0, pc, r0
    defc:	bx	lr
    df00:	ldr	r0, [pc, #848]	; e258 <bt_compidtostr@@Base+0x6228>
    df04:	add	r0, pc, r0
    df08:	bx	lr
    df0c:	ldr	r0, [pc, #840]	; e25c <bt_compidtostr@@Base+0x622c>
    df10:	add	r0, pc, r0
    df14:	bx	lr
    df18:	ldr	r0, [pc, #832]	; e260 <bt_compidtostr@@Base+0x6230>
    df1c:	add	r0, pc, r0
    df20:	bx	lr
    df24:	ldr	r0, [pc, #824]	; e264 <bt_compidtostr@@Base+0x6234>
    df28:	add	r0, pc, r0
    df2c:	bx	lr
    df30:	ldr	r0, [pc, #816]	; e268 <bt_compidtostr@@Base+0x6238>
    df34:	add	r0, pc, r0
    df38:	bx	lr
    df3c:	andeq	r9, r0, r4, ror #22
    df40:	andeq	r9, r0, ip, ror #22
    df44:	andeq	r9, r0, ip, ror fp
    df48:	andeq	r9, r0, ip, ror fp
    df4c:	andeq	r9, r0, r4, lsl #23
    df50:	andeq	r9, r0, r4, lsr #23
    df54:	andeq	r9, r0, r8, lsr #23
    df58:			; <UNDEFINED> instruction: 0x00009bbc
    df5c:	andeq	r9, r0, r0, ror #23
    df60:	andeq	r9, r0, r0, lsl #24
    df64:	andeq	r9, r0, r4, lsl #24
    df68:	andeq	r9, r0, ip, lsr ip
    df6c:	andeq	r9, r0, r0, asr #24
    df70:	andeq	r9, r0, ip, asr #24
    df74:	andeq	r9, r0, r8, ror #24
    df78:	andeq	r9, r0, ip, ror #24
    df7c:	andeq	r9, r0, ip, ror #24
    df80:	andeq	r9, r0, r8, ror ip
    df84:	andeq	r9, r0, r8, lsl #25
    df88:	andeq	r9, r0, ip, lsl #25
    df8c:	muleq	r0, r4, ip
    df90:			; <UNDEFINED> instruction: 0x00009cb4
    df94:			; <UNDEFINED> instruction: 0x00009cb8
    df98:			; <UNDEFINED> instruction: 0x00009cb8
    df9c:	ldrdeq	r9, [r0], -r0
    dfa0:	ldrdeq	r9, [r0], -r0
    dfa4:	andeq	r9, r0, r0, ror #25
    dfa8:	strdeq	r9, [r0], -r8
    dfac:	andeq	r9, r0, r8, lsl #26
    dfb0:	andeq	r9, r0, r8, lsl sp
    dfb4:	andeq	r9, r0, r0, asr #26
    dfb8:	andeq	r9, r0, r8, asr #26
    dfbc:	andeq	r9, r0, r0, asr sp
    dfc0:	andeq	r9, r0, r4, ror #26
    dfc4:	andeq	r9, r0, r8, ror #26
    dfc8:	andeq	r9, r0, r8, ror #26
    dfcc:	andeq	r9, r0, ip, lsl #27
    dfd0:	andeq	r9, r0, ip, lsl #27
    dfd4:	muleq	r0, r4, sp
    dfd8:	andeq	r9, r0, ip, lsr #27
    dfdc:			; <UNDEFINED> instruction: 0x00009db4
    dfe0:	ldrdeq	r9, [r0], -r0
    dfe4:	andeq	r9, r0, r8, ror #27
    dfe8:	andeq	r9, r0, r8, ror #27
    dfec:	strdeq	r9, [r0], -r4
    dff0:	andeq	r9, r0, r4, lsl #28
    dff4:	andeq	r9, r0, ip, lsl #28
    dff8:	andeq	r9, r0, ip, lsl #28
    dffc:	andeq	r9, r0, r4, lsr #28
    e000:	andeq	r9, r0, r4, lsr lr
    e004:	andeq	r9, r0, r0, asr #28
    e008:	andeq	r9, r0, r0, asr lr
    e00c:	andeq	r9, r0, r4, asr lr
    e010:	andeq	r9, r0, r0, asr lr
    e014:	andeq	r9, r0, ip, asr #2
    e018:	andeq	r9, r0, r8, asr lr
    e01c:	andeq	r9, r0, r0, ror #28
    e020:	andeq	r9, r0, r8, ror lr
    e024:	andeq	r9, r0, r4, lsl #29
    e028:	andeq	r9, r0, r4, lsl #29
    e02c:	andeq	r9, r0, r4, lsr #29
    e030:			; <UNDEFINED> instruction: 0x00009eb4
    e034:			; <UNDEFINED> instruction: 0x00009ebc
    e038:	ldrdeq	r9, [r0], -ip
    e03c:	andeq	r9, r0, r4, ror #29
    e040:	strdeq	r9, [r0], -r4
    e044:	strdeq	r9, [r0], -ip
    e048:	strdeq	r9, [r0], -r8
    e04c:	strdeq	r9, [r0], -r4
    e050:	andeq	r9, r0, r0, lsl #30
    e054:	andeq	r9, r0, r8, lsr #30
    e058:	andeq	r9, r0, ip, lsr #30
    e05c:	andeq	r9, r0, ip, lsr pc
    e060:	andeq	r9, r0, r4, asr pc
    e064:	andeq	r9, r0, ip, ror #30
    e068:	andeq	r9, r0, ip, ror pc
    e06c:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    e070:	andeq	r9, r0, r8, lsr #31
    e074:			; <UNDEFINED> instruction: 0x00009fb0
    e078:	andeq	r9, r0, ip, asr #31
    e07c:	andeq	r9, r0, r0, ror #31
    e080:	andeq	r9, r0, r0, ror #31
    e084:	andeq	r9, r0, ip, ror #31
    e088:	strdeq	r9, [r0], -r4
    e08c:	strdeq	r9, [r0], -r0
    e090:	andeq	sl, r0, r8
    e094:	andeq	sl, r0, r0, lsl r0
    e098:	andeq	sl, r0, r0, lsl r0
    e09c:	andeq	sl, r0, r0, lsr r0
    e0a0:	andeq	sl, r0, r0, asr r0
    e0a4:	andeq	sl, r0, r8, asr r0
    e0a8:	andeq	sl, r0, r8, rrx
    e0ac:	andeq	sl, r0, r0, ror r0
    e0b0:	andeq	sl, r0, ip, ror r0
    e0b4:	andeq	sl, r0, r8, lsl #1
    e0b8:	andeq	sl, r0, ip, lsl #1
    e0bc:	andeq	sl, r0, ip, lsl #1
    e0c0:	muleq	r0, ip, r0
    e0c4:	andeq	sl, r0, r4, lsr #1
    e0c8:	andeq	sl, r0, r8, lsr #1
    e0cc:	strheq	sl, [r0], -ip
    e0d0:	ldrdeq	sl, [r0], -r8
    e0d4:	ldrdeq	sl, [r0], -r8
    e0d8:	andeq	sl, r0, ip, lsl #2
    e0dc:	andeq	sl, r0, r8, lsl #2
    e0e0:	andeq	sl, r0, r0, lsl r1
    e0e4:	andeq	sl, r0, ip, lsr #2
    e0e8:	andeq	sl, r0, r0, lsr r1
    e0ec:	andeq	sl, r0, r0, lsr r1
    e0f0:	andeq	sl, r0, r0, asr r1
    e0f4:	andeq	sl, r0, ip, asr r1
    e0f8:	andeq	sl, r0, r4, ror #2
    e0fc:	andeq	sl, r0, r0, lsr #3
    e100:	andeq	sl, r0, r4, lsr #3
    e104:	andeq	sl, r0, ip, lsr #3
    e108:			; <UNDEFINED> instruction: 0x0000a1b8
    e10c:	andeq	sl, r0, r4, asr #3
    e110:	andeq	sl, r0, ip, asr #3
    e114:	ldrdeq	sl, [r0], -r4
    e118:	andeq	sl, r0, r4, ror #3
    e11c:	andeq	sl, r0, r4, ror #3
    e120:	andeq	sl, r0, r8, ror #3
    e124:	strdeq	sl, [r0], -r0
    e128:	strdeq	sl, [r0], -r4
    e12c:	andeq	sl, r0, r4, lsl #4
    e130:	andeq	sl, r0, r0, lsl r2
    e134:	andeq	sl, r0, r4, lsl r2
    e138:	andeq	sl, r0, ip, lsl r2
    e13c:	andeq	sl, r0, ip, lsr #4
    e140:	andeq	sl, r0, r8, asr #4
    e144:	andeq	sl, r0, r0, asr r2
    e148:	andeq	sl, r0, r8, ror r2
    e14c:	andeq	sl, r0, r0, lsl #5
    e150:	andeq	sl, r0, ip, lsl #5
    e154:	andeq	sl, r0, r4, lsr #5
    e158:			; <UNDEFINED> instruction: 0x0000a2b8
    e15c:			; <UNDEFINED> instruction: 0x0000a2bc
    e160:	andeq	sl, r0, r4, ror #5
    e164:	andeq	sl, r0, r4, ror #5
    e168:	andeq	sl, r0, r8, ror #5
    e16c:	strdeq	sl, [r0], -ip
    e170:	andeq	sl, r0, ip, lsl #6
    e174:	andeq	sl, r0, ip, lsl #6
    e178:	andeq	sl, r0, r4, lsl r3
    e17c:	andeq	sl, r0, r8, lsr #6
    e180:	andeq	sl, r0, ip, lsr #6
    e184:	andeq	sl, r0, ip, asr r3
    e188:	andeq	sl, r0, r0, ror r3
    e18c:	andeq	sl, r0, r8, ror r3
    e190:	andeq	sl, r0, r4, lsl #7
    e194:	andeq	sl, r0, r4, lsl #7
    e198:	andeq	sl, r0, r8, lsl #7
    e19c:	andeq	sl, r0, r0, asr #7
    e1a0:	andeq	sl, r0, ip, asr #7
    e1a4:	ldrdeq	sl, [r0], -r0
    e1a8:	andeq	sl, r0, r4, ror #7
    e1ac:	strdeq	sl, [r0], -r0
    e1b0:	strdeq	sl, [r0], -r8
    e1b4:	andeq	sl, r0, r8, lsl r4
    e1b8:	andeq	sl, r0, r4, lsr #8
    e1bc:	andeq	sl, r0, r0, lsr r4
    e1c0:	andeq	sl, r0, r8, asr #8
    e1c4:	andeq	sl, r0, ip, asr r4
    e1c8:	andeq	sl, r0, r4, ror #8
    e1cc:	andeq	sl, r0, r8, ror #8
    e1d0:	andeq	sl, r0, ip, ror r4
    e1d4:	andeq	sl, r0, ip, ror r4
    e1d8:	andeq	sl, r0, r0, lsr #9
    e1dc:			; <UNDEFINED> instruction: 0x0000a4b0
    e1e0:			; <UNDEFINED> instruction: 0x0000a4b0
    e1e4:			; <UNDEFINED> instruction: 0x0000a4b4
    e1e8:	andeq	sl, r0, r0, ror #9
    e1ec:	andeq	sl, r0, r4, ror #9
    e1f0:	strdeq	sl, [r0], -r0
    e1f4:	andeq	sl, r0, r4, lsl #10
    e1f8:	andeq	sl, r0, r8, lsl #10
    e1fc:	andeq	sl, r0, r0, lsl r5
    e200:	andeq	sl, r0, r4, lsr #10
    e204:	andeq	sl, r0, r4, lsr #10
    e208:	andeq	sl, r0, r4, lsr r5
    e20c:	andeq	sl, r0, r4, asr r5
    e210:	andeq	sl, r0, r4, ror r5
    e214:	andeq	sl, r0, r4, lsl #11
    e218:	muleq	r0, r8, r5
    e21c:	muleq	r0, r8, r5
    e220:	muleq	r0, r4, r5
    e224:			; <UNDEFINED> instruction: 0x0000a5b4
    e228:	andeq	sl, r0, ip, asr #11
    e22c:	andeq	sl, r0, r8, ror #11
    e230:	strdeq	sl, [r0], -r8
    e234:	strdeq	sl, [r0], -ip
    e238:	andeq	sl, r0, r8, lsl #12
    e23c:	andeq	sl, r0, r4, lsr #12
    e240:	andeq	sl, r0, r0, lsr #12
    e244:	andeq	sl, r0, r0, lsr r6
    e248:	andeq	sl, r0, r8, asr #12
    e24c:	andeq	sl, r0, r4, asr r6
    e250:	andeq	sl, r0, r4, asr r6
    e254:	andeq	sl, r0, r0, ror r6
    e258:	andeq	sl, r0, r4, ror r6
    e25c:	andeq	sl, r0, r4, lsl #13
    e260:	andeq	sl, r0, r0, lsr #13
    e264:	andeq	sl, r0, r4, lsr #13
    e268:			; <UNDEFINED> instruction: 0x0000a6b0
    e26c:	andeq	sl, r0, r8, asr r3
    e270:	andeq	sl, r0, r8, ror #6
    e274:	andeq	sl, r0, r0, lsl #7
    e278:	andeq	sl, r0, r8, lsr #7
    e27c:	andeq	sl, r0, ip, lsr #7
    e280:			; <UNDEFINED> instruction: 0x0000a3bc
    e284:	andeq	sl, r0, r8, asr #7
    e288:	andeq	sl, r0, ip, asr #7
    e28c:	andeq	sl, r0, r8, asr #7
    e290:	andeq	sl, r0, r8, asr #7
    e294:	andeq	sl, r0, ip, asr #7
    e298:	ldrdeq	sl, [r0], -r4
    e29c:	strdeq	sl, [r0], -r8
    e2a0:	ldr	r0, [pc, #-60]	; e26c <bt_compidtostr@@Base+0x623c>
    e2a4:	add	r0, pc, r0
    e2a8:	bx	lr
    e2ac:	ldr	r0, [pc, #-68]	; e270 <bt_compidtostr@@Base+0x6240>
    e2b0:	add	r0, pc, r0
    e2b4:	bx	lr
    e2b8:	ldr	r0, [pc, #-76]	; e274 <bt_compidtostr@@Base+0x6244>
    e2bc:	add	r0, pc, r0
    e2c0:	bx	lr
    e2c4:	ldr	r0, [pc, #-84]	; e278 <bt_compidtostr@@Base+0x6248>
    e2c8:	add	r0, pc, r0
    e2cc:	bx	lr
    e2d0:	ldr	r0, [pc, #-92]	; e27c <bt_compidtostr@@Base+0x624c>
    e2d4:	add	r0, pc, r0
    e2d8:	bx	lr
    e2dc:	ldr	r0, [pc, #-100]	; e280 <bt_compidtostr@@Base+0x6250>
    e2e0:	add	r0, pc, r0
    e2e4:	bx	lr
    e2e8:	ldr	r0, [pc, #-108]	; e284 <bt_compidtostr@@Base+0x6254>
    e2ec:	add	r0, pc, r0
    e2f0:	bx	lr
    e2f4:	ldr	r0, [pc, #-116]	; e288 <bt_compidtostr@@Base+0x6258>
    e2f8:	add	r0, pc, r0
    e2fc:	bx	lr
    e300:	ldr	r0, [pc, #-124]	; e28c <bt_compidtostr@@Base+0x625c>
    e304:	add	r0, pc, r0
    e308:	bx	lr
    e30c:	ldr	r0, [pc, #-132]	; e290 <bt_compidtostr@@Base+0x6260>
    e310:	add	r0, pc, r0
    e314:	bx	lr
    e318:	ldr	r0, [pc, #-140]	; e294 <bt_compidtostr@@Base+0x6264>
    e31c:	add	r0, pc, r0
    e320:	bx	lr
    e324:	ldr	r0, [pc, #-148]	; e298 <bt_compidtostr@@Base+0x6268>
    e328:	add	r0, pc, r0
    e32c:	bx	lr
    e330:	ldr	r0, [pc, #-156]	; e29c <bt_compidtostr@@Base+0x626c>
    e334:	add	r0, pc, r0
    e338:	bx	lr
    e33c:	andeq	r0, r0, r0

0000e340 <btbb_pcap_open@@Base>:
    e340:	push	{r4, lr}
    e344:	sub	sp, sp, #24
    e348:	ldr	r3, [pc, #88]	; e3a8 <btbb_pcap_open@@Base+0x68>
    e34c:	str	r3, [sp]
    e350:	mov	r3, #2
    e354:	strh	r3, [sp, #4]
    e358:	mov	r3, #4
    e35c:	strh	r3, [sp, #6]
    e360:	mov	r3, #0
    e364:	str	r3, [sp, #8]
    e368:	str	r3, [sp, #12]
    e36c:	str	r2, [sp, #16]
    e370:	str	r1, [sp, #20]
    e374:	ldr	r1, [pc, #48]	; e3ac <btbb_pcap_open@@Base+0x6c>
    e378:	add	r1, pc, r1
    e37c:	bl	2164 <fopen@plt>
    e380:	subs	r4, r0, #0
    e384:	beq	e39c <btbb_pcap_open@@Base+0x5c>
    e388:	mov	r3, r4
    e38c:	mov	r2, #1
    e390:	mov	r1, #24
    e394:	mov	r0, sp
    e398:	bl	22b4 <fwrite@plt>
    e39c:	mov	r0, r4
    e3a0:	add	sp, sp, #24
    e3a4:	pop	{r4, pc}
    e3a8:			; <UNDEFINED> instruction: 0xa1b23c4d
    e3ac:	andeq	sl, r0, r4, asr #7

0000e3b0 <btbb_pcap_dump@@Base>:
    e3b0:	push	{r4, r5, r6, lr}
    e3b4:	mov	r5, r0
    e3b8:	mov	r4, r1
    e3bc:	mov	r6, r2
    e3c0:	mov	r3, r0
    e3c4:	mov	r2, #1
    e3c8:	mov	r1, #16
    e3cc:	mov	r0, r4
    e3d0:	bl	22b4 <fwrite@plt>
    e3d4:	ldrb	r1, [r4, #8]
    e3d8:	ldrb	r3, [r4, #9]
    e3dc:	orr	r1, r1, r3, lsl #8
    e3e0:	ldrb	r3, [r4, #10]
    e3e4:	orr	r1, r1, r3, lsl #16
    e3e8:	ldrb	r0, [r4, #11]
    e3ec:	mov	r3, r5
    e3f0:	mov	r2, #1
    e3f4:	orr	r1, r1, r0, lsl #24
    e3f8:	mov	r0, r6
    e3fc:	bl	22b4 <fwrite@plt>
    e400:	mov	r0, r5
    e404:	bl	217c <fflush@plt>
    e408:	pop	{r4, r5, r6, pc}

0000e40c <btbb_pcap_append_packet@@Base>:
    e40c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e410:	add	fp, sp, #32
    e414:	sub	sp, sp, #484	; 0x1e4
    e418:	ldrsb	r8, [fp, #4]
    e41c:	ldrsb	r7, [fp, #8]
    e420:	ldrb	r6, [fp, #16]
    e424:	cmp	r0, #0
    e428:	beq	e5d4 <btbb_pcap_append_packet@@Base+0x1c8>
    e42c:	ldr	r1, [r0]
    e430:	cmp	r1, #0
    e434:	beq	e5dc <btbb_pcap_append_packet@@Base+0x1d0>
    e438:	str	r0, [fp, #-512]	; 0xfffffe00
    e43c:	sub	r1, fp, #484	; 0x1e4
    e440:	strd	r2, [r1]
    e444:	str	sp, [fp, #-508]	; 0xfffffe04
    e448:	cmp	r7, r8
    e44c:	movlt	r5, #7
    e450:	movge	r5, #3
    e454:	ldr	r3, [fp, #12]
    e458:	cmn	r3, #1
    e45c:	movne	r3, #16
    e460:	moveq	r3, #0
    e464:	orr	r3, r5, r3
    e468:	cmp	r6, #255	; 0xff
    e46c:	movne	r5, #128	; 0x80
    e470:	moveq	r5, #0
    e474:	orr	r5, r5, r3
    e478:	ldr	r0, [fp, #20]
    e47c:	bl	2380 <btbb_packet_get_payload_length@plt>
    e480:	mov	r4, r0
    e484:	add	r3, r0, #7
    e488:	bic	r3, r3, #7
    e48c:	sub	sp, sp, r3
    e490:	str	sp, [fp, #-516]	; 0xfffffdfc
    e494:	mov	r1, sp
    e498:	ldr	r0, [fp, #20]
    e49c:	bl	214c <btbb_get_payload_packed@plt>
    e4a0:	cmp	r4, #400	; 0x190
    e4a4:	movcs	r4, #400	; 0x190
    e4a8:	ldr	r0, [fp, #20]
    e4ac:	bl	24d0 <btbb_packet_get_channel@plt>
    e4b0:	str	r0, [fp, #-492]	; 0xfffffe14
    e4b4:	ldr	r0, [fp, #20]
    e4b8:	bl	21b8 <btbb_packet_get_ac_errors@plt>
    e4bc:	str	r0, [fp, #-496]	; 0xfffffe10
    e4c0:	ldr	r0, [fp, #20]
    e4c4:	bl	23f8 <btbb_packet_get_transport@plt>
    e4c8:	str	r0, [fp, #-500]	; 0xfffffe0c
    e4cc:	ldr	r0, [fp, #20]
    e4d0:	bl	21ac <btbb_packet_get_modulation@plt>
    e4d4:	str	r0, [fp, #-504]	; 0xfffffe08
    e4d8:	ldr	r0, [fp, #20]
    e4dc:	bl	2458 <btbb_packet_get_lap@plt>
    e4e0:	str	r0, [fp, #-488]	; 0xfffffe18
    e4e4:	ldr	r0, [fp, #20]
    e4e8:	bl	23b0 <btbb_packet_get_header_packed@plt>
    e4ec:	mov	sl, r0
    e4f0:	add	r9, r4, #22
    e4f4:	add	r3, pc, #236	; 0xec
    e4f8:	ldrd	r2, [r3]
    e4fc:	sub	r1, fp, #484	; 0x1e4
    e500:	ldrd	r0, [r1]
    e504:	bl	fc1c <lell_pcapng_close@@Base+0x230>
    e508:	str	r0, [fp, #-476]	; 0xfffffe24
    e50c:	add	r3, pc, #212	; 0xd4
    e510:	ldrd	r2, [r3]
    e514:	sub	r1, fp, #484	; 0x1e4
    e518:	ldrd	r0, [r1]
    e51c:	bl	fc1c <lell_pcapng_close@@Base+0x230>
    e520:	str	r2, [fp, #-472]	; 0xfffffe28
    e524:	str	r9, [fp, #-468]	; 0xfffffe2c
    e528:	str	r9, [fp, #-464]	; 0xfffffe30
    e52c:	ldrb	r3, [fp, #-492]	; 0xfffffe14
    e530:	strb	r3, [fp, #-460]	; 0xfffffe34
    e534:	strb	r8, [fp, #-459]	; 0xfffffe35
    e538:	strb	r7, [fp, #-458]	; 0xfffffe36
    e53c:	ldrb	r3, [fp, #-496]	; 0xfffffe10
    e540:	strb	r3, [fp, #-457]	; 0xfffffe37
    e544:	ldr	r3, [fp, #-504]	; 0xfffffe08
    e548:	ldr	r2, [fp, #-500]	; 0xfffffe0c
    e54c:	orr	r3, r3, r2, lsl #4
    e550:	strb	r3, [fp, #-456]	; 0xfffffe38
    e554:	mov	r3, #0
    e558:	strb	r3, [fp, #-455]	; 0xfffffe39
    e55c:	sub	r2, fp, #476	; 0x1dc
    e560:	strh	r3, [r2, #22]
    e564:	ldr	r3, [fp, #-488]	; 0xfffffe18
    e568:	str	r3, [fp, #-452]	; 0xfffffe3c
    e56c:	ldr	r3, [fp, #12]
    e570:	bic	r3, r3, #-16777216	; 0xff000000
    e574:	orr	r6, r3, r6, lsl #24
    e578:	str	r6, [fp, #-448]	; 0xfffffe40
    e57c:	str	sl, [fp, #-444]	; 0xfffffe44
    e580:	strh	r5, [r2, #36]	; 0x24
    e584:	cmp	r4, #0
    e588:	subeq	r3, fp, #476	; 0x1dc
    e58c:	strheq	r5, [r3, #36]	; 0x24
    e590:	beq	e5b0 <btbb_pcap_append_packet@@Base+0x1a4>
    e594:	mov	r2, r4
    e598:	ldr	r1, [fp, #-516]	; 0xfffffdfc
    e59c:	sub	r4, fp, #476	; 0x1dc
    e5a0:	add	r0, r4, #38	; 0x26
    e5a4:	bl	21c4 <memcpy@plt>
    e5a8:	orr	r5, r5, #32
    e5ac:	strh	r5, [r4, #36]	; 0x24
    e5b0:	sub	r2, fp, #460	; 0x1cc
    e5b4:	sub	r1, fp, #476	; 0x1dc
    e5b8:	ldr	r3, [fp, #-512]	; 0xfffffe00
    e5bc:	ldr	r0, [r3]
    e5c0:	bl	2344 <btbb_pcap_dump@plt>
    e5c4:	ldr	sp, [fp, #-508]	; 0xfffffe04
    e5c8:	mov	r0, #0
    e5cc:	sub	sp, fp, #32
    e5d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e5d4:	mvn	r0, #0
    e5d8:	b	e5cc <btbb_pcap_append_packet@@Base+0x1c0>
    e5dc:	mvn	r0, #0
    e5e0:	b	e5cc <btbb_pcap_append_packet@@Base+0x1c0>
    e5e4:	nop			; (mov r0, r0)
    e5e8:	blcc	fe6c0df0 <perm_table@@Base+0xfe697c2c>
    e5ec:	andeq	r0, r0, r0

0000e5f0 <btbb_pcap_close@@Base>:
    e5f0:	push	{r4, lr}
    e5f4:	subs	r4, r0, #0
    e5f8:	beq	e61c <btbb_pcap_close@@Base+0x2c>
    e5fc:	ldr	r0, [r4]
    e600:	cmp	r0, #0
    e604:	beq	e60c <btbb_pcap_close@@Base+0x1c>
    e608:	bl	24a0 <fclose@plt>
    e60c:	mov	r0, r4
    e610:	bl	21a0 <free@plt>
    e614:	mov	r0, #0
    e618:	pop	{r4, pc}
    e61c:	mvn	r0, #0
    e620:	pop	{r4, pc}

0000e624 <btbb_pcap_create_file@@Base>:
    e624:	push	{r4, r5, r6, lr}
    e628:	mov	r5, r0
    e62c:	mov	r6, r1
    e630:	mov	r0, #4
    e634:	bl	2320 <malloc@plt>
    e638:	subs	r4, r0, #0
    e63c:	beq	e688 <btbb_pcap_create_file@@Base+0x64>
    e640:	mov	r3, #0
    e644:	str	r3, [r4]
    e648:	mov	r2, #400	; 0x190
    e64c:	mov	r1, #255	; 0xff
    e650:	mov	r0, r5
    e654:	bl	2230 <btbb_pcap_open@plt>
    e658:	str	r0, [r4]
    e65c:	cmp	r0, #0
    e660:	beq	e674 <btbb_pcap_create_file@@Base+0x50>
    e664:	str	r4, [r6]
    e668:	mov	r5, #0
    e66c:	mov	r0, r5
    e670:	pop	{r4, r5, r6, pc}
    e674:	ldr	r0, [pc, #28]	; e698 <btbb_pcap_create_file@@Base+0x74>
    e678:	add	r0, pc, r0
    e67c:	bl	2284 <perror@plt>
    e680:	mvn	r5, #1
    e684:	b	e68c <btbb_pcap_create_file@@Base+0x68>
    e688:	mvn	r5, #2
    e68c:	mov	r0, r4
    e690:	bl	22cc <btbb_pcap_close@plt>
    e694:	b	e66c <btbb_pcap_create_file@@Base+0x48>
    e698:	andeq	sl, r0, r8, asr #1

0000e69c <lell_pcap_append_packet@@Base>:
    e69c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e6a0:	sub	sp, sp, #308	; 0x134
    e6a4:	add	r1, sp, #344	; 0x158
    e6a8:	ldrsb	r9, [r1]
    e6ac:	add	r1, sp, #348	; 0x15c
    e6b0:	ldrsb	r8, [r1]
    e6b4:	ldr	r4, [sp, #356]	; 0x164
    e6b8:	cmp	r0, #0
    e6bc:	beq	e7ac <lell_pcap_append_packet@@Base+0x110>
    e6c0:	ldr	r1, [r0]
    e6c4:	cmp	r1, #0
    e6c8:	beq	e7b4 <lell_pcap_append_packet@@Base+0x118>
    e6cc:	ldr	r1, [r0, #4]
    e6d0:	cmp	r1, #256	; 0x100
    e6d4:	bne	e7bc <lell_pcap_append_packet@@Base+0x120>
    e6d8:	str	r0, [sp, #12]
    e6dc:	strd	r2, [sp]
    e6e0:	cmp	r8, r9
    e6e4:	movlt	r7, #39	; 0x27
    e6e8:	movge	r7, #35	; 0x23
    e6ec:	mov	r0, r4
    e6f0:	bl	2170 <lell_packet_is_data@plt>
    e6f4:	cmp	r0, #0
    e6f8:	moveq	r3, #16
    e6fc:	movne	r3, #0
    e700:	str	r3, [sp, #8]
    e704:	ldr	r6, [r4, #72]	; 0x48
    e708:	add	r5, r6, #9
    e70c:	ldrb	fp, [r4, #69]	; 0x45
    e710:	ldrb	sl, [r4, #92]	; 0x5c
    e714:	cmp	r5, #255	; 0xff
    e718:	movcs	r5, #255	; 0xff
    e71c:	add	r3, pc, #164	; 0xa4
    e720:	ldrd	r2, [r3]
    e724:	ldrd	r0, [sp]
    e728:	bl	fc1c <lell_pcapng_close@@Base+0x230>
    e72c:	str	r0, [sp, #20]
    e730:	add	r3, pc, #144	; 0x90
    e734:	ldrd	r2, [r3]
    e738:	ldrd	r0, [sp]
    e73c:	bl	fc1c <lell_pcapng_close@@Base+0x230>
    e740:	str	r2, [sp, #24]
    e744:	add	r6, r6, #19
    e748:	str	r6, [sp, #28]
    e74c:	add	r3, r5, #10
    e750:	str	r3, [sp, #32]
    e754:	strb	fp, [sp, #36]	; 0x24
    e758:	strb	r9, [sp, #37]	; 0x25
    e75c:	strb	r8, [sp, #38]	; 0x26
    e760:	strb	sl, [sp, #39]	; 0x27
    e764:	ldr	r3, [sp, #352]	; 0x160
    e768:	str	r3, [sp, #40]	; 0x28
    e76c:	ldr	r3, [sp, #8]
    e770:	orr	r7, r7, r3
    e774:	add	r6, sp, #20
    e778:	strh	r7, [sp, #44]	; 0x2c
    e77c:	mov	r2, r5
    e780:	mov	r1, r4
    e784:	add	r0, sp, #46	; 0x2e
    e788:	bl	21c4 <memcpy@plt>
    e78c:	add	r2, sp, #36	; 0x24
    e790:	mov	r1, r6
    e794:	ldr	r3, [sp, #12]
    e798:	ldr	r0, [r3]
    e79c:	bl	2344 <btbb_pcap_dump@plt>
    e7a0:	mov	r0, #0
    e7a4:	add	sp, sp, #308	; 0x134
    e7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e7ac:	mvn	r0, #0
    e7b0:	b	e7a4 <lell_pcap_append_packet@@Base+0x108>
    e7b4:	mvn	r0, #0
    e7b8:	b	e7a4 <lell_pcap_append_packet@@Base+0x108>
    e7bc:	mvn	r0, #0
    e7c0:	b	e7a4 <lell_pcap_append_packet@@Base+0x108>
    e7c4:	nop			; (mov r0, r0)
    e7c8:	blcc	fe6c0fd0 <perm_table@@Base+0xfe697e0c>
    e7cc:	andeq	r0, r0, r0

0000e7d0 <lell_pcap_append_ppi_packet@@Base>:
    e7d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    e7d4:	sub	sp, sp, #296	; 0x128
    e7d8:	ldr	r7, [sp, #348]	; 0x15c
    e7dc:	subs	r5, r0, #0
    e7e0:	beq	e91c <lell_pcap_append_ppi_packet@@Base+0x14c>
    e7e4:	ldr	r1, [r5]
    e7e8:	cmp	r1, #0
    e7ec:	beq	e924 <lell_pcap_append_ppi_packet@@Base+0x154>
    e7f0:	ldr	r1, [r5, #4]
    e7f4:	cmp	r1, #192	; 0xc0
    e7f8:	mvnne	r0, #0
    e7fc:	bne	e914 <lell_pcap_append_ppi_packet@@Base+0x144>
    e800:	mov	r8, r2
    e804:	mov	r9, r3
    e808:	mov	r0, r7
    e80c:	bl	23c8 <lell_get_channel_k@plt>
    e810:	mov	r4, r0
    e814:	ldr	sl, [r7, #72]	; 0x48
    e818:	add	r6, sl, #9
    e81c:	cmp	r6, #255	; 0xff
    e820:	movcs	r6, #255	; 0xff
    e824:	add	r3, pc, #260	; 0x104
    e828:	ldrd	r2, [r3]
    e82c:	mov	r0, r8
    e830:	mov	r1, r9
    e834:	bl	fc1c <lell_pcapng_close@@Base+0x230>
    e838:	str	r0, [sp]
    e83c:	add	r3, pc, #236	; 0xec
    e840:	ldrd	r2, [r3]
    e844:	mov	r0, r8
    e848:	mov	r1, r9
    e84c:	bl	fc1c <lell_pcapng_close@@Base+0x230>
    e850:	str	r2, [sp, #4]
    e854:	add	r3, r6, #24
    e858:	str	r3, [sp, #8]
    e85c:	add	sl, sl, #33	; 0x21
    e860:	str	sl, [sp, #12]
    e864:	mov	r9, #0
    e868:	strb	r9, [sp, #16]
    e86c:	strb	r9, [sp, #17]
    e870:	mov	r3, #24
    e874:	strh	r3, [sp, #18]
    e878:	mov	r3, #147	; 0x93
    e87c:	str	r3, [sp, #20]
    e880:	ldr	r3, [pc, #176]	; e938 <lell_pcap_append_ppi_packet@@Base+0x168>
    e884:	strh	r3, [sp, #24]
    e888:	mov	r3, #12
    e88c:	strh	r3, [sp, #26]
    e890:	ldrb	r3, [r5, #8]
    e894:	strb	r3, [sp, #28]
    e898:	add	r3, r4, #1200	; 0x4b0
    e89c:	add	r3, r3, #1
    e8a0:	lsl	r3, r3, #1
    e8a4:	uxth	r3, r3
    e8a8:	strb	r3, [sp, #29]
    e8ac:	lsr	r3, r3, #8
    e8b0:	strb	r3, [sp, #30]
    e8b4:	ldrb	r3, [sp, #328]	; 0x148
    e8b8:	strb	r3, [sp, #31]
    e8bc:	ldr	r3, [r7, #76]	; 0x4c
    e8c0:	str	r3, [sp, #32]
    e8c4:	add	r3, sp, #336	; 0x150
    e8c8:	ldrsb	r3, [r3]
    e8cc:	strb	r3, [sp, #36]	; 0x24
    e8d0:	add	r3, sp, #332	; 0x14c
    e8d4:	ldrsb	r3, [r3]
    e8d8:	strb	r3, [sp, #37]	; 0x25
    e8dc:	add	r3, sp, #340	; 0x154
    e8e0:	ldrsb	r3, [r3]
    e8e4:	strb	r3, [sp, #38]	; 0x26
    e8e8:	ldrb	r3, [sp, #344]	; 0x158
    e8ec:	strb	r3, [sp, #39]	; 0x27
    e8f0:	mov	r2, r6
    e8f4:	mov	r1, r7
    e8f8:	add	r0, sp, #40	; 0x28
    e8fc:	bl	21c4 <memcpy@plt>
    e900:	add	r2, sp, #16
    e904:	mov	r1, sp
    e908:	ldr	r0, [r5]
    e90c:	bl	2344 <btbb_pcap_dump@plt>
    e910:	mov	r0, r9
    e914:	add	sp, sp, #296	; 0x128
    e918:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    e91c:	mvn	r0, #0
    e920:	b	e914 <lell_pcap_append_ppi_packet@@Base+0x144>
    e924:	mvn	r0, #0
    e928:	b	e914 <lell_pcap_append_ppi_packet@@Base+0x144>
    e92c:	nop			; (mov r0, r0)
    e930:	blcc	fe6c1138 <perm_table@@Base+0xfe697f74>
    e934:	andeq	r0, r0, r0
    e938:	andeq	r7, r0, r6, lsr r5

0000e93c <lell_pcap_close@@Base>:
    e93c:	push	{r4, lr}
    e940:	subs	r4, r0, #0
    e944:	beq	e968 <lell_pcap_close@@Base+0x2c>
    e948:	ldr	r0, [r4]
    e94c:	cmp	r0, #0
    e950:	beq	e958 <lell_pcap_close@@Base+0x1c>
    e954:	bl	24a0 <fclose@plt>
    e958:	mov	r0, r4
    e95c:	bl	21a0 <free@plt>
    e960:	mov	r0, #0
    e964:	pop	{r4, pc}
    e968:	mvn	r0, #0
    e96c:	pop	{r4, pc}
    e970:	push	{r4, r5, r6, r7, r8, lr}
    e974:	mov	r6, r0
    e978:	mov	r5, r1
    e97c:	mov	r7, r2
    e980:	mov	r0, #12
    e984:	bl	2320 <malloc@plt>
    e988:	subs	r4, r0, #0
    e98c:	beq	e9d0 <lell_pcap_close@@Base+0x94>
    e990:	mov	r3, #0
    e994:	str	r3, [r4]
    e998:	str	r3, [r4, #4]
    e99c:	str	r3, [r4, #8]
    e9a0:	mov	r2, #400	; 0x190
    e9a4:	mov	r1, r5
    e9a8:	mov	r0, r6
    e9ac:	bl	2230 <btbb_pcap_open@plt>
    e9b0:	str	r0, [r4]
    e9b4:	cmp	r0, #0
    e9b8:	beq	e9d8 <lell_pcap_close@@Base+0x9c>
    e9bc:	str	r5, [r4, #4]
    e9c0:	str	r4, [r7]
    e9c4:	mov	r5, #0
    e9c8:	mov	r0, r5
    e9cc:	pop	{r4, r5, r6, r7, r8, pc}
    e9d0:	mvn	r5, #2
    e9d4:	b	e9dc <lell_pcap_close@@Base+0xa0>
    e9d8:	mvn	r5, #1
    e9dc:	mov	r0, r4
    e9e0:	bl	2218 <lell_pcap_close@plt>
    e9e4:	b	e9c8 <lell_pcap_close@@Base+0x8c>

0000e9e8 <lell_pcap_create_file@@Base>:
    e9e8:	push	{r4, lr}
    e9ec:	mov	r2, r1
    e9f0:	mov	r1, #256	; 0x100
    e9f4:	bl	e970 <lell_pcap_close@@Base+0x34>
    e9f8:	pop	{r4, pc}

0000e9fc <lell_pcap_ppi_create_file@@Base>:
    e9fc:	push	{r4, r5, r6, lr}
    ea00:	mov	r4, r1
    ea04:	mov	r5, r2
    ea08:	mov	r1, #192	; 0xc0
    ea0c:	bl	e970 <lell_pcap_close@@Base+0x34>
    ea10:	cmp	r0, #0
    ea14:	ldreq	r3, [r5]
    ea18:	strbeq	r4, [r3, #8]
    ea1c:	pop	{r4, r5, r6, pc}

0000ea20 <pcapng_append_section_option@@Base>:
    ea20:	cmp	r0, #0
    ea24:	beq	eabc <pcapng_append_section_option@@Base+0x9c>
    ea28:	ldr	r3, [r0]
    ea2c:	cmn	r3, #1
    ea30:	beq	eac4 <pcapng_append_section_option@@Base+0xa4>
    ea34:	ldr	r3, [r0, #4]
    ea38:	sub	r2, r3, #1
    ea3c:	cmn	r2, #3
    ea40:	bls	ea4c <pcapng_append_section_option@@Base+0x2c>
    ea44:	mov	r0, #5
    ea48:	bx	lr
    ea4c:	ldr	ip, [r0, #12]
    ea50:	cmp	r1, #0
    ea54:	cmpne	ip, #0
    ea58:	beq	eacc <pcapng_append_section_option@@Base+0xac>
    ea5c:	push	{r4, r5, r6, lr}
    ea60:	mov	r4, r0
    ea64:	ldrb	r5, [r1, #2]
    ea68:	ldrb	r2, [r1, #3]
    ea6c:	orr	r5, r5, r2, lsl #8
    ea70:	add	r2, r5, #4
    ea74:	add	r0, r3, ip
    ea78:	bl	21c4 <memcpy@plt>
    ea7c:	add	r3, r5, #7
    ea80:	bic	r3, r3, #3
    ea84:	ldr	r2, [r4, #12]
    ea88:	add	r3, r3, r2
    ea8c:	str	r3, [r4, #12]
    ea90:	ldr	r0, [r4, #4]
    ea94:	ldr	r1, [pc, #56]	; ead4 <pcapng_append_section_option@@Base+0xb4>
    ea98:	add	r1, pc, r1
    ea9c:	ldr	r2, [r4, #8]
    eaa0:	sub	r2, r2, #12
    eaa4:	sub	r2, r2, r3
    eaa8:	strh	r2, [r1, #2]
    eaac:	ldr	r2, [r1]
    eab0:	str	r2, [r0, r3]
    eab4:	mov	r0, #0
    eab8:	pop	{r4, r5, r6, pc}
    eabc:	mov	r0, #1
    eac0:	bx	lr
    eac4:	mov	r0, #1
    eac8:	bx	lr
    eacc:	mov	r0, #5
    ead0:	bx	lr
    ead4:	andeq	sl, r1, r8, lsl #14

0000ead8 <pcapng_append_interface_option@@Base>:
    ead8:	cmp	r0, #0
    eadc:	beq	eb74 <pcapng_append_interface_option@@Base+0x9c>
    eae0:	ldr	r3, [r0]
    eae4:	cmn	r3, #1
    eae8:	beq	eb7c <pcapng_append_interface_option@@Base+0xa4>
    eaec:	ldr	r3, [r0, #16]
    eaf0:	sub	r2, r3, #1
    eaf4:	cmn	r2, #3
    eaf8:	bls	eb04 <pcapng_append_interface_option@@Base+0x2c>
    eafc:	mov	r0, #5
    eb00:	bx	lr
    eb04:	ldr	ip, [r0, #24]
    eb08:	cmp	r1, #0
    eb0c:	cmpne	ip, #0
    eb10:	beq	eb84 <pcapng_append_interface_option@@Base+0xac>
    eb14:	push	{r4, r5, r6, lr}
    eb18:	mov	r4, r0
    eb1c:	ldrb	r5, [r1, #2]
    eb20:	ldrb	r2, [r1, #3]
    eb24:	orr	r5, r5, r2, lsl #8
    eb28:	add	r2, r5, #4
    eb2c:	add	r0, r3, ip
    eb30:	bl	21c4 <memcpy@plt>
    eb34:	add	r3, r5, #7
    eb38:	bic	r3, r3, #3
    eb3c:	ldr	r2, [r4, #24]
    eb40:	add	r3, r3, r2
    eb44:	str	r3, [r4, #24]
    eb48:	ldr	r0, [r4, #16]
    eb4c:	ldr	r1, [pc, #56]	; eb8c <pcapng_append_interface_option@@Base+0xb4>
    eb50:	add	r1, pc, r1
    eb54:	ldr	r2, [r4, #20]
    eb58:	sub	r2, r2, #12
    eb5c:	sub	r2, r2, r3
    eb60:	strh	r2, [r1, #2]
    eb64:	ldr	r2, [r1]
    eb68:	str	r2, [r0, r3]
    eb6c:	mov	r0, #0
    eb70:	pop	{r4, r5, r6, pc}
    eb74:	mov	r0, #1
    eb78:	bx	lr
    eb7c:	mov	r0, #1
    eb80:	bx	lr
    eb84:	mov	r0, #5
    eb88:	bx	lr
    eb8c:	andeq	sl, r1, r0, asr r6

0000eb90 <pcapng_append_packet@@Base>:
    eb90:	push	{r4, r5, r6, lr}
    eb94:	subs	r5, r0, #0
    eb98:	beq	ec58 <pcapng_append_packet@@Base+0xc8>
    eb9c:	ldr	r0, [r5]
    eba0:	cmn	r0, #1
    eba4:	beq	ec60 <pcapng_append_packet@@Base+0xd0>
    eba8:	ldrb	r4, [r1, #4]
    ebac:	ldrb	r3, [r1, #5]
    ebb0:	orr	r4, r4, r3, lsl #8
    ebb4:	ldrb	r3, [r1, #6]
    ebb8:	orr	r4, r4, r3, lsl #16
    ebbc:	ldrb	r3, [r1, #7]
    ebc0:	orr	r4, r4, r3, lsl #24
    ebc4:	mov	r2, r4
    ebc8:	bl	247c <write@plt>
    ebcc:	cmn	r0, #1
    ebd0:	beq	ec68 <pcapng_append_packet@@Base+0xd8>
    ebd4:	ldr	r3, [r5, #4]
    ebd8:	ldrb	r2, [r3, #16]
    ebdc:	ldrb	ip, [r3, #17]
    ebe0:	orr	r2, r2, ip, lsl #8
    ebe4:	ldrb	ip, [r3, #18]
    ebe8:	orr	r2, r2, ip, lsl #16
    ebec:	ldrb	ip, [r3, #19]
    ebf0:	orr	r0, r2, ip, lsl #24
    ebf4:	ldrb	r2, [r3, #20]
    ebf8:	ldrb	ip, [r3, #21]
    ebfc:	orr	r2, r2, ip, lsl #8
    ec00:	ldrb	ip, [r3, #22]
    ec04:	orr	r2, r2, ip, lsl #16
    ec08:	ldrb	ip, [r3, #23]
    ec0c:	orr	r1, r2, ip, lsl #24
    ec10:	adds	r0, r0, r4
    ec14:	adc	r1, r1, #0
    ec18:	strb	r0, [r3, #16]
    ec1c:	lsr	r2, r0, #8
    ec20:	strb	r2, [r3, #17]
    ec24:	lsr	r2, r0, #16
    ec28:	strb	r2, [r3, #18]
    ec2c:	lsr	r2, r0, #24
    ec30:	strb	r2, [r3, #19]
    ec34:	strb	r1, [r3, #20]
    ec38:	lsr	r2, r1, #8
    ec3c:	strb	r2, [r3, #21]
    ec40:	lsr	r2, r1, #16
    ec44:	strb	r2, [r3, #22]
    ec48:	lsr	r2, r1, #24
    ec4c:	strb	r2, [r3, #23]
    ec50:	mov	r0, #0
    ec54:	pop	{r4, r5, r6, pc}
    ec58:	mov	r0, #1
    ec5c:	pop	{r4, r5, r6, pc}
    ec60:	mov	r0, #1
    ec64:	pop	{r4, r5, r6, pc}
    ec68:	mov	r0, #0
    ec6c:	pop	{r4, r5, r6, pc}

0000ec70 <pcapng_close@@Base>:
    ec70:	push	{r4, lr}
    ec74:	mov	r4, r0
    ec78:	ldr	r0, [r0, #16]
    ec7c:	sub	r3, r0, #1
    ec80:	cmn	r3, #3
    ec84:	bls	ecb0 <pcapng_close@@Base+0x40>
    ec88:	ldr	r0, [r4, #4]
    ec8c:	sub	r3, r0, #1
    ec90:	cmn	r3, #3
    ec94:	bls	ecbc <pcapng_close@@Base+0x4c>
    ec98:	ldr	r0, [r4]
    ec9c:	cmn	r0, #1
    eca0:	beq	eca8 <pcapng_close@@Base+0x38>
    eca4:	bl	2548 <close@plt>
    eca8:	mov	r0, #0
    ecac:	pop	{r4, pc}
    ecb0:	ldr	r1, [r4, #20]
    ecb4:	bl	24b8 <munmap@plt>
    ecb8:	b	ec88 <pcapng_close@@Base+0x18>
    ecbc:	ldr	r1, [r4, #8]
    ecc0:	bl	24b8 <munmap@plt>
    ecc4:	b	ec98 <pcapng_close@@Base+0x28>

0000ecc8 <pcapng_create@@Base>:
    ecc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eccc:	sub	sp, sp, #44	; 0x2c
    ecd0:	mov	r4, r0
    ecd4:	mov	r5, r1
    ecd8:	mov	r9, r2
    ecdc:	str	r3, [sp, #12]
    ece0:	ldr	sl, [sp, #88]	; 0x58
    ece4:	bl	23e0 <getpagesize@plt>
    ece8:	str	r0, [sp, #8]
    ecec:	mov	r3, #0
    ecf0:	str	r3, [r4, #4]
    ecf4:	str	r3, [r4, #16]
    ecf8:	str	r3, [r4, #24]
    ecfc:	str	r3, [r4, #20]
    ed00:	str	r3, [r4, #12]
    ed04:	str	r3, [r4, #8]
    ed08:	mov	r2, #432	; 0x1b0
    ed0c:	mov	r1, #194	; 0xc2
    ed10:	mov	r0, r5
    ed14:	bl	235c <open@plt>
    ed18:	str	r0, [r4]
    ed1c:	cmn	r0, #1
    ed20:	beq	ed9c <pcapng_create@@Base+0xd4>
    ed24:	mov	ip, r0
    ed28:	add	lr, sp, #16
    ed2c:	ldr	r5, [pc, #1284]	; f238 <pcapng_create@@Base+0x570>
    ed30:	add	r5, pc, r5
    ed34:	ldm	r5!, {r0, r1, r2, r3}
    ed38:	stmia	lr!, {r0, r1, r2, r3}
    ed3c:	ldm	r5, {r0, r1}
    ed40:	stm	lr, {r0, r1}
    ed44:	mov	r2, #24
    ed48:	str	r2, [r4, #8]
    ed4c:	add	r1, sp, #16
    ed50:	mov	r0, ip
    ed54:	bl	247c <write@plt>
    ed58:	mov	r6, r0
    ed5c:	cmp	r9, #0
    ed60:	cmnne	r0, #1
    ed64:	beq	ee64 <pcapng_create@@Base+0x19c>
    ed68:	ldrb	r3, [r9]
    ed6c:	ldrb	r2, [r9, #1]
    ed70:	orrs	r3, r3, r2, lsl #8
    ed74:	beq	ee64 <pcapng_create@@Base+0x19c>
    ed78:	ldrb	r2, [r9, #2]
    ed7c:	ldrb	r3, [r9, #3]
    ed80:	orrs	r2, r2, r3, lsl #8
    ed84:	beq	ee64 <pcapng_create@@Base+0x19c>
    ed88:	ldr	r7, [pc, #1196]	; f23c <pcapng_create@@Base+0x574>
    ed8c:	add	r7, pc, r7
    ed90:	add	r7, r7, #24
    ed94:	mov	r8, #1
    ed98:	b	ee04 <pcapng_create@@Base+0x13c>
    ed9c:	bl	2404 <__errno_location@plt>
    eda0:	ldr	r3, [r0]
    eda4:	cmp	r3, #17
    eda8:	beq	efa4 <pcapng_create@@Base+0x2dc>
    edac:	mov	fp, #6
    edb0:	b	f20c <pcapng_create@@Base+0x544>
    edb4:	add	r2, fp, #4
    edb8:	ldr	r3, [r4, #8]
    edbc:	add	r3, r3, #4
    edc0:	add	fp, r3, fp
    edc4:	str	fp, [r4, #8]
    edc8:	adds	r3, r6, #1
    edcc:	movne	r3, #1
    edd0:	adds	r9, r9, r2
    edd4:	moveq	r3, #0
    edd8:	andne	r3, r3, #1
    eddc:	cmp	r3, #0
    ede0:	beq	ee64 <pcapng_create@@Base+0x19c>
    ede4:	ldrb	r3, [r9]
    ede8:	ldrb	r2, [r9, #1]
    edec:	orrs	r3, r3, r2, lsl #8
    edf0:	beq	ee64 <pcapng_create@@Base+0x19c>
    edf4:	ldrb	r2, [r9, #2]
    edf8:	ldrb	r3, [r9, #3]
    edfc:	orrs	r2, r2, r3, lsl #8
    ee00:	beq	ee64 <pcapng_create@@Base+0x19c>
    ee04:	add	fp, r2, #3
    ee08:	bic	fp, fp, #3
    ee0c:	sub	r5, fp, r2
    ee10:	add	r2, r2, #4
    ee14:	mov	r1, r9
    ee18:	ldr	r0, [r4]
    ee1c:	bl	247c <write@plt>
    ee20:	mov	r6, r0
    ee24:	cmp	r5, #0
    ee28:	cmnne	r0, #1
    ee2c:	beq	edb4 <pcapng_create@@Base+0xec>
    ee30:	mov	r2, r8
    ee34:	mov	r1, r7
    ee38:	ldr	r0, [r4]
    ee3c:	bl	247c <write@plt>
    ee40:	mov	r6, r0
    ee44:	subs	r5, r5, #1
    ee48:	movne	r2, #1
    ee4c:	moveq	r2, #0
    ee50:	adds	r3, r0, #1
    ee54:	movne	r3, #1
    ee58:	tst	r2, r3
    ee5c:	bne	ee30 <pcapng_create@@Base+0x168>
    ee60:	b	edb4 <pcapng_create@@Base+0xec>
    ee64:	ldr	r3, [r4, #8]
    ee68:	str	r3, [r4, #12]
    ee6c:	cmn	r6, #1
    ee70:	beq	edac <pcapng_create@@Base+0xe4>
    ee74:	mov	r5, r3
    ee78:	ldr	r3, [sp, #12]
    ee7c:	add	r0, r3, #3
    ee80:	add	r0, r0, r5
    ee84:	ldr	r7, [sp, #8]
    ee88:	mov	r1, r7
    ee8c:	add	r0, r0, r7
    ee90:	bl	fa10 <lell_pcapng_close@@Base+0x24>
    ee94:	mul	r0, r7, r0
    ee98:	str	r0, [r4, #8]
    ee9c:	subs	r5, r0, r5
    eea0:	beq	eee4 <pcapng_create@@Base+0x21c>
    eea4:	ldr	r7, [pc, #916]	; f240 <pcapng_create@@Base+0x578>
    eea8:	add	r7, pc, r7
    eeac:	add	r7, r7, #24
    eeb0:	mov	r8, #1
    eeb4:	mov	r2, r8
    eeb8:	mov	r1, r7
    eebc:	ldr	r0, [r4]
    eec0:	bl	247c <write@plt>
    eec4:	mov	r6, r0
    eec8:	subs	r5, r5, #1
    eecc:	movne	r2, #1
    eed0:	moveq	r2, #0
    eed4:	adds	r3, r0, #1
    eed8:	movne	r3, #1
    eedc:	tst	r2, r3
    eee0:	bne	eeb4 <pcapng_create@@Base+0x1ec>
    eee4:	mov	fp, #0
    eee8:	str	fp, [sp, #4]
    eeec:	ldr	r3, [r4]
    eef0:	str	r3, [sp]
    eef4:	mov	r3, #1
    eef8:	mov	r2, #3
    eefc:	ldr	r1, [r4, #8]
    ef00:	mov	r0, fp
    ef04:	bl	23a4 <mmap@plt>
    ef08:	str	r0, [r4, #4]
    ef0c:	cmp	fp, #0
    ef10:	bne	f20c <pcapng_create@@Base+0x544>
    ef14:	cmn	r6, #1
    ef18:	beq	f228 <pcapng_create@@Base+0x560>
    ef1c:	ldr	r3, [r4, #4]
    ef20:	cmn	r3, #1
    ef24:	beq	f230 <pcapng_create@@Base+0x568>
    ef28:	mov	r3, #0
    ef2c:	add	r1, sp, #16
    ef30:	str	r3, [r1, #4]
    ef34:	str	r3, [r1, #8]
    ef38:	mov	r3, #1
    ef3c:	str	r3, [sp, #16]
    ef40:	ldrh	r3, [sp, #80]	; 0x50
    ef44:	strh	r3, [sp, #24]
    ef48:	ldr	r3, [sp, #84]	; 0x54
    ef4c:	str	r3, [sp, #28]
    ef50:	mov	r2, #16
    ef54:	str	r2, [r4, #20]
    ef58:	ldr	r0, [r4]
    ef5c:	bl	247c <write@plt>
    ef60:	mov	r6, r0
    ef64:	cmp	sl, #0
    ef68:	cmnne	r0, #1
    ef6c:	beq	f060 <pcapng_create@@Base+0x398>
    ef70:	ldrb	r3, [sl]
    ef74:	ldrb	r2, [sl, #1]
    ef78:	orrs	r3, r3, r2, lsl #8
    ef7c:	beq	f060 <pcapng_create@@Base+0x398>
    ef80:	ldrb	r2, [sl, #2]
    ef84:	ldrb	r3, [sl, #3]
    ef88:	orrs	r2, r2, r3, lsl #8
    ef8c:	beq	f060 <pcapng_create@@Base+0x398>
    ef90:	ldr	r7, [pc, #684]	; f244 <pcapng_create@@Base+0x57c>
    ef94:	add	r7, pc, r7
    ef98:	add	r7, r7, #24
    ef9c:	mov	r8, #1
    efa0:	b	f000 <pcapng_create@@Base+0x338>
    efa4:	mvn	r6, #0
    efa8:	mov	fp, #6
    efac:	b	ef0c <pcapng_create@@Base+0x244>
    efb0:	add	r2, r9, #4
    efb4:	ldr	r3, [r4, #20]
    efb8:	add	r3, r3, #4
    efbc:	add	r9, r3, r9
    efc0:	str	r9, [r4, #20]
    efc4:	adds	r3, r6, #1
    efc8:	movne	r3, #1
    efcc:	adds	sl, sl, r2
    efd0:	moveq	r3, #0
    efd4:	andne	r3, r3, #1
    efd8:	cmp	r3, #0
    efdc:	beq	f060 <pcapng_create@@Base+0x398>
    efe0:	ldrb	r3, [sl]
    efe4:	ldrb	r2, [sl, #1]
    efe8:	orrs	r3, r3, r2, lsl #8
    efec:	beq	f060 <pcapng_create@@Base+0x398>
    eff0:	ldrb	r2, [sl, #2]
    eff4:	ldrb	r3, [sl, #3]
    eff8:	orrs	r2, r2, r3, lsl #8
    effc:	beq	f060 <pcapng_create@@Base+0x398>
    f000:	add	r9, r2, #3
    f004:	bic	r9, r9, #3
    f008:	sub	r5, r9, r2
    f00c:	add	r2, r2, #4
    f010:	mov	r1, sl
    f014:	ldr	r0, [r4]
    f018:	bl	247c <write@plt>
    f01c:	mov	r6, r0
    f020:	cmp	r5, #0
    f024:	cmnne	r0, #1
    f028:	beq	efb0 <pcapng_create@@Base+0x2e8>
    f02c:	mov	r2, r8
    f030:	mov	r1, r7
    f034:	ldr	r0, [r4]
    f038:	bl	247c <write@plt>
    f03c:	mov	r6, r0
    f040:	subs	r5, r5, #1
    f044:	movne	r2, #1
    f048:	moveq	r2, #0
    f04c:	adds	r3, r0, #1
    f050:	movne	r3, #1
    f054:	tst	r2, r3
    f058:	bne	f02c <pcapng_create@@Base+0x364>
    f05c:	b	efb0 <pcapng_create@@Base+0x2e8>
    f060:	ldr	r5, [r4, #20]
    f064:	str	r5, [r4, #24]
    f068:	cmn	r6, #1
    f06c:	beq	edac <pcapng_create@@Base+0xe4>
    f070:	ldr	r0, [sp, #92]	; 0x5c
    f074:	add	r0, r0, #3
    f078:	add	r0, r0, r5
    f07c:	ldr	r7, [sp, #8]
    f080:	mov	r1, r7
    f084:	add	r0, r0, r7
    f088:	bl	fa10 <lell_pcapng_close@@Base+0x24>
    f08c:	mul	r0, r7, r0
    f090:	str	r0, [r4, #20]
    f094:	subs	r5, r0, r5
    f098:	beq	f0dc <pcapng_create@@Base+0x414>
    f09c:	ldr	r7, [pc, #420]	; f248 <pcapng_create@@Base+0x580>
    f0a0:	add	r7, pc, r7
    f0a4:	add	r7, r7, #24
    f0a8:	mov	r8, #1
    f0ac:	mov	r2, r8
    f0b0:	mov	r1, r7
    f0b4:	ldr	r0, [r4]
    f0b8:	bl	247c <write@plt>
    f0bc:	mov	r6, r0
    f0c0:	subs	r5, r5, #1
    f0c4:	movne	r2, #1
    f0c8:	moveq	r2, #0
    f0cc:	adds	r3, r0, #1
    f0d0:	movne	r3, #1
    f0d4:	tst	r2, r3
    f0d8:	bne	f0ac <pcapng_create@@Base+0x3e4>
    f0dc:	ldr	r3, [r4, #8]
    f0e0:	str	r3, [sp, #4]
    f0e4:	ldr	r3, [r4]
    f0e8:	str	r3, [sp]
    f0ec:	mov	r3, #1
    f0f0:	mov	r2, #3
    f0f4:	ldr	r1, [r4, #20]
    f0f8:	mov	r0, #0
    f0fc:	bl	23a4 <mmap@plt>
    f100:	str	r0, [r4, #16]
    f104:	cmn	r6, #1
    f108:	beq	f208 <pcapng_create@@Base+0x540>
    f10c:	cmn	r0, #1
    f110:	beq	f220 <pcapng_create@@Base+0x558>
    f114:	ldr	r1, [r4, #12]
    f118:	ldr	r0, [r4, #4]
    f11c:	ldr	r2, [pc, #296]	; f24c <pcapng_create@@Base+0x584>
    f120:	add	r2, pc, r2
    f124:	ldr	r3, [r4, #8]
    f128:	sub	r3, r3, #12
    f12c:	sub	r3, r3, r1
    f130:	strh	r3, [r2, #2]
    f134:	ldr	r3, [r2]
    f138:	str	r3, [r0, r1]
    f13c:	ldr	r0, [r4, #4]
    f140:	ldr	r3, [r4, #8]
    f144:	mov	r1, #0
    f148:	strb	r3, [r0, #4]
    f14c:	lsr	ip, r3, #8
    f150:	strb	ip, [r0, #5]
    f154:	lsr	ip, r3, #16
    f158:	strb	ip, [r0, #6]
    f15c:	lsr	r3, r3, #24
    f160:	strb	r3, [r0, #7]
    f164:	ldr	r0, [r4, #8]
    f168:	bic	ip, r0, #3
    f16c:	ldr	r3, [r4, #4]
    f170:	add	r3, r3, ip
    f174:	str	r0, [r3, #-4]
    f178:	ldr	r0, [r4, #24]
    f17c:	ldr	r3, [r4, #20]
    f180:	sub	r3, r3, #12
    f184:	sub	r3, r3, r0
    f188:	strh	r3, [r2, #2]
    f18c:	ldr	r2, [r2]
    f190:	ldr	r3, [r4, #16]
    f194:	str	r2, [r3, r0]
    f198:	ldr	r2, [r4, #16]
    f19c:	ldr	r3, [r4, #20]
    f1a0:	strb	r3, [r2, #4]
    f1a4:	lsr	r0, r3, #8
    f1a8:	strb	r0, [r2, #5]
    f1ac:	lsr	r0, r3, #16
    f1b0:	strb	r0, [r2, #6]
    f1b4:	lsr	r3, r3, #24
    f1b8:	strb	r3, [r2, #7]
    f1bc:	ldr	r2, [r4, #20]
    f1c0:	bic	r0, r2, #3
    f1c4:	ldr	r3, [r4, #16]
    f1c8:	add	r3, r3, r0
    f1cc:	str	r2, [r3, #-4]
    f1d0:	ldr	r3, [r4, #4]
    f1d4:	ldr	r2, [r4, #20]
    f1d8:	strb	r2, [r3, #16]
    f1dc:	lsr	r0, r2, #8
    f1e0:	strb	r0, [r3, #17]
    f1e4:	lsr	r0, r2, #16
    f1e8:	strb	r0, [r3, #18]
    f1ec:	lsr	r2, r2, #24
    f1f0:	strb	r2, [r3, #19]
    f1f4:	strb	r1, [r3, #20]
    f1f8:	strb	r1, [r3, #21]
    f1fc:	strb	r1, [r3, #22]
    f200:	strb	r1, [r3, #23]
    f204:	b	f214 <pcapng_create@@Base+0x54c>
    f208:	mov	fp, #6
    f20c:	mov	r0, r4
    f210:	bl	2500 <pcapng_close@plt>
    f214:	mov	r0, fp
    f218:	add	sp, sp, #44	; 0x2c
    f21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f220:	mov	fp, #7
    f224:	b	f20c <pcapng_create@@Base+0x544>
    f228:	mov	fp, #6
    f22c:	b	f20c <pcapng_create@@Base+0x544>
    f230:	mov	fp, #7
    f234:	b	f20c <pcapng_create@@Base+0x544>
    f238:	andeq	r9, r0, ip, lsl sl
    f23c:	andeq	r9, r0, r0, asr #19
    f240:	andeq	r9, r0, r4, lsr #17
    f244:			; <UNDEFINED> instruction: 0x000097b8
    f248:	andeq	r9, r0, ip, lsr #13
    f24c:	andeq	sl, r1, r0, lsl #1
    f250:	push	{r4, lr}
    f254:	sub	sp, sp, #8
    f258:	mov	ip, r0
    f25c:	mov	r0, #0
    f260:	mov	lr, #1
    f264:	b	f280 <pcapng_create@@Base+0x5b8>
    f268:	cmp	r3, #9
    f26c:	addne	r2, r2, #3
    f270:	bicne	r3, r2, #3
    f274:	addne	r3, r3, #4
    f278:	addne	r1, r1, r3
    f27c:	moveq	r0, lr
    f280:	eor	r3, r0, #1
    f284:	cmp	r1, #0
    f288:	moveq	r3, #0
    f28c:	andne	r3, r3, #1
    f290:	cmp	r3, #0
    f294:	beq	f2b8 <pcapng_create@@Base+0x5f0>
    f298:	ldrb	r3, [r1]
    f29c:	ldrb	r2, [r1, #1]
    f2a0:	orrs	r3, r3, r2, lsl #8
    f2a4:	beq	f2b8 <pcapng_create@@Base+0x5f0>
    f2a8:	ldrb	r2, [r1, #2]
    f2ac:	ldrb	r4, [r1, #3]
    f2b0:	orrs	r2, r2, r4, lsl #8
    f2b4:	bne	f268 <pcapng_create@@Base+0x5a0>
    f2b8:	cmp	r0, #0
    f2bc:	movne	r0, #0
    f2c0:	beq	f2cc <pcapng_create@@Base+0x604>
    f2c4:	add	sp, sp, #8
    f2c8:	pop	{r4, pc}
    f2cc:	ldr	r3, [pc, #28]	; f2f0 <pcapng_create@@Base+0x628>
    f2d0:	add	r3, pc, r3
    f2d4:	ldm	r3, {r0, r1}
    f2d8:	str	r0, [sp]
    f2dc:	strb	r1, [sp, #4]
    f2e0:	mov	r1, sp
    f2e4:	mov	r0, ip
    f2e8:	bl	2194 <pcapng_append_interface_option@plt>
    f2ec:	b	f2c4 <pcapng_create@@Base+0x5fc>
    f2f0:	muleq	r0, r8, r4

0000f2f4 <btbb_pcapng_create_file@@Base>:
    f2f4:	push	{r4, r5, r6, r7, r8, r9, lr}
    f2f8:	sub	sp, sp, #292	; 0x124
    f2fc:	mov	r8, r0
    f300:	mov	r9, r1
    f304:	mov	r7, r2
    f308:	ldr	r5, [pc, #252]	; f40c <btbb_pcapng_create_file@@Base+0x118>
    f30c:	add	r5, pc, r5
    f310:	mov	r0, #28
    f314:	bl	2320 <malloc@plt>
    f318:	subs	r6, r0, #0
    f31c:	beq	f404 <btbb_pcapng_create_file@@Base+0x110>
    f320:	mov	r2, #260	; 0x104
    f324:	mov	r1, #0
    f328:	add	r4, sp, #28
    f32c:	mov	r0, r4
    f330:	bl	2428 <memset@plt>
    f334:	mov	r3, #3
    f338:	strh	r3, [r4]
    f33c:	cmp	r9, #0
    f340:	moveq	r4, #0
    f344:	beq	f374 <btbb_pcapng_create_file@@Base+0x80>
    f348:	mov	r2, #256	; 0x100
    f34c:	mov	r1, r9
    f350:	add	r4, sp, #32
    f354:	mov	r0, r4
    f358:	bl	2440 <strncpy@plt>
    f35c:	mov	r3, #0
    f360:	strb	r3, [sp, #287]	; 0x11f
    f364:	mov	r0, r4
    f368:	bl	238c <strlen@plt>
    f36c:	add	r4, sp, #28
    f370:	strh	r0, [r4, #2]
    f374:	bl	23e0 <getpagesize@plt>
    f378:	mov	r3, r0
    f37c:	ldr	r2, [pc, #140]	; f410 <btbb_pcapng_create_file@@Base+0x11c>
    f380:	ldr	r2, [r5, r2]
    f384:	str	r2, [sp, #20]
    f388:	str	r0, [sp, #12]
    f38c:	str	r4, [sp, #8]
    f390:	mov	r2, #400	; 0x190
    f394:	str	r2, [sp, #4]
    f398:	mov	r2, #255	; 0xff
    f39c:	str	r2, [sp]
    f3a0:	ldr	r2, [sp, #20]
    f3a4:	mov	r1, r8
    f3a8:	mov	r0, r6
    f3ac:	bl	2254 <pcapng_create@plt>
    f3b0:	subs	r5, r0, #0
    f3b4:	beq	f3d8 <btbb_pcapng_create_file@@Base+0xe4>
    f3b8:	rsb	r5, r5, #0
    f3bc:	cmp	r5, #0
    f3c0:	bne	f3f8 <btbb_pcapng_create_file@@Base+0x104>
    f3c4:	str	r6, [r7]
    f3c8:	mov	r5, #0
    f3cc:	mov	r0, r5
    f3d0:	add	sp, sp, #292	; 0x124
    f3d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f3d8:	mov	r1, r4
    f3dc:	mov	r0, r6
    f3e0:	bl	f250 <pcapng_create@@Base+0x588>
    f3e4:	subs	r5, r0, #0
    f3e8:	beq	f3c4 <btbb_pcapng_create_file@@Base+0xd0>
    f3ec:	mov	r0, r6
    f3f0:	bl	2500 <pcapng_close@plt>
    f3f4:	b	f3b8 <btbb_pcapng_create_file@@Base+0xc4>
    f3f8:	mov	r0, r6
    f3fc:	bl	21a0 <free@plt>
    f400:	b	f3cc <btbb_pcapng_create_file@@Base+0xd8>
    f404:	mvn	r5, #4
    f408:	b	f3cc <btbb_pcapng_create_file@@Base+0xd8>
    f40c:	andeq	r9, r1, ip, ror #25
    f410:	muleq	r0, ip, r1

0000f414 <btbb_pcapng_append_packet@@Base>:
    f414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f418:	add	fp, sp, #32
    f41c:	sub	sp, sp, #492	; 0x1ec
    f420:	str	r0, [fp, #-520]	; 0xfffffdf8
    f424:	str	r2, [fp, #-512]	; 0xfffffe00
    f428:	str	r3, [fp, #-516]	; 0xfffffdfc
    f42c:	ldrsb	r9, [fp, #4]
    f430:	ldrsb	r8, [fp, #8]
    f434:	ldrb	r7, [fp, #16]
    f438:	cmp	r8, r9
    f43c:	movlt	r6, #7
    f440:	movge	r6, #3
    f444:	ldr	r1, [fp, #12]
    f448:	cmn	r1, #1
    f44c:	movne	r3, #16
    f450:	moveq	r3, #0
    f454:	orr	r3, r6, r3
    f458:	cmp	r7, #255	; 0xff
    f45c:	movne	r6, #128	; 0x80
    f460:	moveq	r6, #0
    f464:	orr	r6, r6, r3
    f468:	ldr	r0, [fp, #20]
    f46c:	bl	2380 <btbb_packet_get_payload_length@plt>
    f470:	mov	r4, r0
    f474:	add	r3, r0, #7
    f478:	bic	r3, r3, #7
    f47c:	sub	sp, sp, r3
    f480:	str	sp, [fp, #-524]	; 0xfffffdf4
    f484:	mov	r1, sp
    f488:	ldr	r0, [fp, #20]
    f48c:	bl	214c <btbb_get_payload_packed@plt>
    f490:	cmp	r4, #400	; 0x190
    f494:	movge	r4, #400	; 0x190
    f498:	ldr	r0, [fp, #20]
    f49c:	bl	24d0 <btbb_packet_get_channel@plt>
    f4a0:	str	r0, [fp, #-496]	; 0xfffffe10
    f4a4:	ldr	r0, [fp, #20]
    f4a8:	bl	21b8 <btbb_packet_get_ac_errors@plt>
    f4ac:	str	r0, [fp, #-500]	; 0xfffffe0c
    f4b0:	ldr	r0, [fp, #20]
    f4b4:	bl	23f8 <btbb_packet_get_transport@plt>
    f4b8:	str	r0, [fp, #-504]	; 0xfffffe08
    f4bc:	ldr	r0, [fp, #20]
    f4c0:	bl	21ac <btbb_packet_get_modulation@plt>
    f4c4:	str	r0, [fp, #-508]	; 0xfffffe04
    f4c8:	ldr	r0, [fp, #20]
    f4cc:	bl	2458 <btbb_packet_get_lap@plt>
    f4d0:	mov	sl, r0
    f4d4:	ldr	r0, [fp, #20]
    f4d8:	bl	23b0 <btbb_packet_get_header_packed@plt>
    f4dc:	add	r2, r4, #22
    f4e0:	add	r5, r4, #61	; 0x3d
    f4e4:	bic	r5, r5, #3
    f4e8:	mov	r3, #6
    f4ec:	str	r3, [fp, #-488]	; 0xfffffe18
    f4f0:	str	r5, [fp, #-484]	; 0xfffffe1c
    f4f4:	mov	r3, #0
    f4f8:	str	r3, [fp, #-480]	; 0xfffffe20
    f4fc:	ldr	r1, [fp, #-516]	; 0xfffffdfc
    f500:	str	r1, [fp, #-476]	; 0xfffffe24
    f504:	ldr	r1, [fp, #-512]	; 0xfffffe00
    f508:	str	r1, [fp, #-472]	; 0xfffffe28
    f50c:	str	r2, [fp, #-468]	; 0xfffffe2c
    f510:	str	r2, [fp, #-464]	; 0xfffffe30
    f514:	ldrb	r2, [fp, #-496]	; 0xfffffe10
    f518:	strb	r2, [fp, #-460]	; 0xfffffe34
    f51c:	strb	r9, [fp, #-459]	; 0xfffffe35
    f520:	strb	r8, [fp, #-458]	; 0xfffffe36
    f524:	ldrb	r2, [fp, #-500]	; 0xfffffe0c
    f528:	strb	r2, [fp, #-457]	; 0xfffffe37
    f52c:	ldr	r2, [fp, #-508]	; 0xfffffe04
    f530:	ldr	r1, [fp, #-504]	; 0xfffffe08
    f534:	orr	r2, r2, r1, lsl #4
    f538:	strb	r2, [fp, #-456]	; 0xfffffe38
    f53c:	strb	r3, [fp, #-455]	; 0xfffffe39
    f540:	sub	r2, fp, #488	; 0x1e8
    f544:	strh	r3, [r2, #34]	; 0x22
    f548:	str	sl, [fp, #-452]	; 0xfffffe3c
    f54c:	ldr	r3, [fp, #12]
    f550:	bic	r3, r3, #-16777216	; 0xff000000
    f554:	orr	r7, r3, r7, lsl #24
    f558:	str	r7, [fp, #-448]	; 0xfffffe40
    f55c:	str	r0, [fp, #-444]	; 0xfffffe44
    f560:	strh	r6, [r2, #48]	; 0x30
    f564:	cmp	r4, #0
    f568:	beq	f5b8 <btbb_pcapng_append_packet@@Base+0x1a4>
    f56c:	cmp	r4, #400	; 0x190
    f570:	bhi	f594 <btbb_pcapng_append_packet@@Base+0x180>
    f574:	mov	r2, r4
    f578:	ldr	r1, [fp, #-524]	; 0xfffffdf4
    f57c:	sub	r4, fp, #488	; 0x1e8
    f580:	add	r0, r4, #50	; 0x32
    f584:	bl	21c4 <memcpy@plt>
    f588:	orr	r6, r6, #32
    f58c:	strh	r6, [r4, #48]	; 0x30
    f590:	b	f5c0 <btbb_pcapng_append_packet@@Base+0x1ac>
    f594:	ldr	r3, [pc, #80]	; f5ec <btbb_pcapng_append_packet@@Base+0x1d8>
    f598:	add	r3, pc, r3
    f59c:	add	r3, r3, #8
    f5a0:	mov	r2, #221	; 0xdd
    f5a4:	ldr	r1, [pc, #68]	; f5f0 <btbb_pcapng_append_packet@@Base+0x1dc>
    f5a8:	add	r1, pc, r1
    f5ac:	ldr	r0, [pc, #64]	; f5f4 <btbb_pcapng_append_packet@@Base+0x1e0>
    f5b0:	add	r0, pc, r0
    f5b4:	bl	2554 <__assert_fail@plt>
    f5b8:	sub	r3, fp, #488	; 0x1e8
    f5bc:	strh	r6, [r3, #48]	; 0x30
    f5c0:	sub	r3, fp, #36	; 0x24
    f5c4:	add	r3, r3, r5
    f5c8:	mov	r2, #0
    f5cc:	str	r2, [r3, #-460]	; 0xfffffe34
    f5d0:	str	r5, [r3, #-456]	; 0xfffffe38
    f5d4:	sub	r1, fp, #488	; 0x1e8
    f5d8:	ldr	r0, [fp, #-520]	; 0xfffffdf8
    f5dc:	bl	23ec <pcapng_append_packet@plt>
    f5e0:	rsb	r0, r0, #0
    f5e4:	sub	sp, fp, #32
    f5e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f5ec:	ldrdeq	r9, [r0], -r0
    f5f0:	andeq	r9, r0, r4, lsl r2
    f5f4:	andeq	r9, r0, ip, asr r2

0000f5f8 <btbb_pcapng_record_bdaddr@@Base>:
    f5f8:	push	{lr}		; (str lr, [sp, #-4]!)
    f5fc:	sub	sp, sp, #20
    f600:	ldr	r1, [pc, #84]	; f65c <btbb_pcapng_record_bdaddr@@Base+0x64>
    f604:	strh	r1, [sp, #4]
    f608:	mov	r1, #12
    f60c:	strh	r1, [sp, #6]
    f610:	strb	r2, [sp, #8]
    f614:	lsr	r1, r2, #8
    f618:	strb	r1, [sp, #9]
    f61c:	lsr	r1, r2, #16
    f620:	strb	r1, [sp, #10]
    f624:	lsr	r2, r2, #24
    f628:	strb	r2, [sp, #11]
    f62c:	strb	r3, [sp, #12]
    f630:	lsr	r3, r3, #8
    f634:	strb	r3, [sp, #13]
    f638:	ldrb	r3, [sp, #24]
    f63c:	strb	r3, [sp, #14]
    f640:	ldrb	r3, [sp, #28]
    f644:	strb	r3, [sp, #15]
    f648:	add	r1, sp, #4
    f64c:	bl	2194 <pcapng_append_interface_option@plt>
    f650:	rsb	r0, r0, #0
    f654:	add	sp, sp, #20
    f658:	pop	{pc}		; (ldr pc, [sp], #4)
    f65c:			; <UNDEFINED> instruction: 0xffffd340

0000f660 <btbb_pcapng_record_btclock@@Base>:
    f660:	push	{lr}		; (str lr, [sp, #-4]!)
    f664:	sub	sp, sp, #28
    f668:	ldr	r3, [pc, #64]	; f6b0 <btbb_pcapng_record_btclock@@Base+0x50>
    f66c:	strh	r3, [sp]
    f670:	mov	r3, #24
    f674:	strh	r3, [sp, #2]
    f678:	ldr	r3, [sp, #32]
    f67c:	str	r3, [sp, #4]
    f680:	ldr	r3, [sp, #36]	; 0x24
    f684:	str	r3, [sp, #8]
    f688:	str	r2, [sp, #12]
    f68c:	ldr	r3, [sp, #40]	; 0x28
    f690:	str	r3, [sp, #16]
    f694:	ldr	r3, [sp, #44]	; 0x2c
    f698:	str	r3, [sp, #20]
    f69c:	mov	r1, sp
    f6a0:	bl	2194 <pcapng_append_interface_option@plt>
    f6a4:	rsb	r0, r0, #0
    f6a8:	add	sp, sp, #28
    f6ac:	pop	{pc}		; (ldr pc, [sp], #4)
    f6b0:			; <UNDEFINED> instruction: 0xffffd341

0000f6b4 <btbb_pcapng_close@@Base>:
    f6b4:	push	{r4, lr}
    f6b8:	mov	r4, r0
    f6bc:	bl	2500 <pcapng_close@plt>
    f6c0:	cmp	r4, #0
    f6c4:	beq	f6d0 <btbb_pcapng_close@@Base+0x1c>
    f6c8:	mov	r0, r4
    f6cc:	bl	21a0 <free@plt>
    f6d0:	mvn	r0, #0
    f6d4:	pop	{r4, pc}

0000f6d8 <lell_pcapng_create_file@@Base>:
    f6d8:	push	{r4, r5, r6, r7, r8, r9, lr}
    f6dc:	sub	sp, sp, #292	; 0x124
    f6e0:	mov	r8, r0
    f6e4:	mov	r9, r1
    f6e8:	mov	r7, r2
    f6ec:	ldr	r5, [pc, #252]	; f7f0 <lell_pcapng_create_file@@Base+0x118>
    f6f0:	add	r5, pc, r5
    f6f4:	mov	r0, #28
    f6f8:	bl	2320 <malloc@plt>
    f6fc:	subs	r6, r0, #0
    f700:	beq	f7e8 <lell_pcapng_create_file@@Base+0x110>
    f704:	mov	r2, #260	; 0x104
    f708:	mov	r1, #0
    f70c:	add	r4, sp, #28
    f710:	mov	r0, r4
    f714:	bl	2428 <memset@plt>
    f718:	mov	r3, #3
    f71c:	strh	r3, [r4]
    f720:	cmp	r9, #0
    f724:	moveq	r4, #0
    f728:	beq	f758 <lell_pcapng_create_file@@Base+0x80>
    f72c:	mov	r2, #256	; 0x100
    f730:	mov	r1, r9
    f734:	add	r4, sp, #32
    f738:	mov	r0, r4
    f73c:	bl	2440 <strncpy@plt>
    f740:	mov	r3, #0
    f744:	strb	r3, [sp, #287]	; 0x11f
    f748:	mov	r0, r4
    f74c:	bl	238c <strlen@plt>
    f750:	add	r4, sp, #28
    f754:	strh	r0, [r4, #2]
    f758:	bl	23e0 <getpagesize@plt>
    f75c:	mov	r3, r0
    f760:	ldr	r2, [pc, #140]	; f7f4 <lell_pcapng_create_file@@Base+0x11c>
    f764:	ldr	r2, [r5, r2]
    f768:	str	r2, [sp, #20]
    f76c:	str	r0, [sp, #12]
    f770:	str	r4, [sp, #8]
    f774:	mov	r2, #64	; 0x40
    f778:	str	r2, [sp, #4]
    f77c:	mov	r2, #256	; 0x100
    f780:	str	r2, [sp]
    f784:	ldr	r2, [sp, #20]
    f788:	mov	r1, r8
    f78c:	mov	r0, r6
    f790:	bl	2254 <pcapng_create@plt>
    f794:	subs	r5, r0, #0
    f798:	beq	f7bc <lell_pcapng_create_file@@Base+0xe4>
    f79c:	rsb	r5, r5, #0
    f7a0:	cmp	r5, #0
    f7a4:	bne	f7dc <lell_pcapng_create_file@@Base+0x104>
    f7a8:	str	r6, [r7]
    f7ac:	mov	r5, #0
    f7b0:	mov	r0, r5
    f7b4:	add	sp, sp, #292	; 0x124
    f7b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f7bc:	mov	r1, r4
    f7c0:	mov	r0, r6
    f7c4:	bl	f250 <pcapng_create@@Base+0x588>
    f7c8:	subs	r5, r0, #0
    f7cc:	beq	f7a8 <lell_pcapng_create_file@@Base+0xd0>
    f7d0:	mov	r0, r6
    f7d4:	bl	2500 <pcapng_close@plt>
    f7d8:	b	f79c <lell_pcapng_create_file@@Base+0xc4>
    f7dc:	mov	r0, r6
    f7e0:	bl	21a0 <free@plt>
    f7e4:	b	f7b0 <lell_pcapng_create_file@@Base+0xd8>
    f7e8:	mvn	r5, #4
    f7ec:	b	f7b0 <lell_pcapng_create_file@@Base+0xd8>
    f7f0:	andeq	r9, r1, r8, lsl #18
    f7f4:	muleq	r0, ip, r1

0000f7f8 <lell_pcapng_record_connect_req@@Base>:
    f7f8:	push	{r4, r5, r6, r7, r8, lr}
    f7fc:	sub	sp, sp, #48	; 0x30
    f800:	mov	r7, r0
    f804:	mov	r8, r2
    f808:	mov	r6, r3
    f80c:	ldr	r4, [sp, #72]	; 0x48
    f810:	mov	r5, #46	; 0x2e
    f814:	mov	r2, r5
    f818:	mov	r1, #0
    f81c:	mov	r0, sp
    f820:	bl	2428 <memset@plt>
    f824:	ldr	r3, [pc, #96]	; f88c <lell_pcapng_record_connect_req@@Base+0x94>
    f828:	strh	r3, [sp]
    f82c:	strh	r5, [sp, #2]
    f830:	str	r8, [sp, #4]
    f834:	str	r6, [sp, #8]
    f838:	mov	ip, r4
    f83c:	add	r5, sp, #12
    f840:	add	r4, r4, #32
    f844:	mov	lr, r5
    f848:	ldr	r0, [ip]
    f84c:	ldr	r1, [ip, #4]
    f850:	ldr	r2, [ip, #8]
    f854:	ldr	r3, [ip, #12]
    f858:	stmia	lr!, {r0, r1, r2, r3}
    f85c:	add	ip, ip, #16
    f860:	mov	r5, lr
    f864:	cmp	ip, r4
    f868:	bne	f844 <lell_pcapng_record_connect_req@@Base+0x4c>
    f86c:	ldrh	r3, [ip]
    f870:	strh	r3, [lr]
    f874:	mov	r1, sp
    f878:	mov	r0, r7
    f87c:	bl	2194 <pcapng_append_interface_option@plt>
    f880:	rsb	r0, r0, #0
    f884:	add	sp, sp, #48	; 0x30
    f888:	pop	{r4, r5, r6, r7, r8, pc}
    f88c:			; <UNDEFINED> instruction: 0xffffd380

0000f890 <lell_pcapng_append_packet@@Base>:
    f890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f894:	sub	sp, sp, #316	; 0x13c
    f898:	mov	r8, r0
    f89c:	mov	sl, r2
    f8a0:	mov	r9, r3
    f8a4:	add	r3, sp, #352	; 0x160
    f8a8:	ldrsb	r7, [r3]
    f8ac:	add	r3, sp, #356	; 0x164
    f8b0:	ldrsb	r6, [r3]
    f8b4:	ldr	r5, [sp, #364]	; 0x16c
    f8b8:	cmp	r6, r7
    f8bc:	movlt	r4, #39	; 0x27
    f8c0:	movge	r4, #35	; 0x23
    f8c4:	mov	r0, r5
    f8c8:	bl	2170 <lell_packet_is_data@plt>
    f8cc:	cmp	r0, #0
    f8d0:	moveq	r0, #16
    f8d4:	movne	r0, #0
    f8d8:	orr	r0, r4, r0
    f8dc:	ldr	r3, [r5, #72]	; 0x48
    f8e0:	add	r2, r3, #9
    f8e4:	ldrb	lr, [r5, #69]	; 0x45
    f8e8:	ldrb	ip, [r5, #92]	; 0x5c
    f8ec:	cmp	r2, #255	; 0xff
    f8f0:	bhi	f984 <lell_pcapng_append_packet@@Base+0xf4>
    f8f4:	add	r1, r3, #19
    f8f8:	add	r3, r3, #58	; 0x3a
    f8fc:	bic	r4, r3, #3
    f900:	mov	r3, #6
    f904:	str	r3, [sp, #8]
    f908:	str	r4, [sp, #12]
    f90c:	mov	fp, #0
    f910:	str	fp, [sp, #16]
    f914:	str	r9, [sp, #20]
    f918:	str	sl, [sp, #24]
    f91c:	str	r1, [sp, #28]
    f920:	str	r1, [sp, #32]
    f924:	strb	lr, [sp, #36]	; 0x24
    f928:	strb	r7, [sp, #37]	; 0x25
    f92c:	strb	r6, [sp, #38]	; 0x26
    f930:	strb	ip, [sp, #39]	; 0x27
    f934:	ldr	r3, [sp, #360]	; 0x168
    f938:	str	r3, [sp, #40]	; 0x28
    f93c:	add	r6, sp, #8
    f940:	strh	r0, [sp, #44]	; 0x2c
    f944:	mov	r1, r5
    f948:	add	r0, sp, #46	; 0x2e
    f94c:	bl	21c4 <memcpy@plt>
    f950:	add	r3, sp, #312	; 0x138
    f954:	add	r3, r3, r4
    f958:	str	fp, [r3, #-312]	; 0xfffffec8
    f95c:	str	r4, [r3, #-308]	; 0xfffffecc
    f960:	mov	r1, r6
    f964:	mov	r0, r8
    f968:	bl	23ec <pcapng_append_packet@plt>
    f96c:	rsb	r4, r0, #0
    f970:	cmp	r4, fp
    f974:	beq	f9a8 <lell_pcapng_append_packet@@Base+0x118>
    f978:	mov	r0, r4
    f97c:	add	sp, sp, #316	; 0x13c
    f980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f984:	ldr	r3, [pc, #80]	; f9dc <lell_pcapng_append_packet@@Base+0x14c>
    f988:	add	r3, pc, r3
    f98c:	add	r3, r3, #40	; 0x28
    f990:	ldr	r2, [pc, #72]	; f9e0 <lell_pcapng_append_packet@@Base+0x150>
    f994:	ldr	r1, [pc, #72]	; f9e4 <lell_pcapng_append_packet@@Base+0x154>
    f998:	add	r1, pc, r1
    f99c:	ldr	r0, [pc, #68]	; f9e8 <lell_pcapng_append_packet@@Base+0x158>
    f9a0:	add	r0, pc, r0
    f9a4:	bl	2554 <__assert_fail@plt>
    f9a8:	mov	r0, r5
    f9ac:	bl	2170 <lell_packet_is_data@plt>
    f9b0:	cmp	r0, fp
    f9b4:	bne	f978 <lell_pcapng_append_packet@@Base+0xe8>
    f9b8:	ldrb	r3, [r5, #80]	; 0x50
    f9bc:	cmp	r3, #5
    f9c0:	bne	f978 <lell_pcapng_append_packet@@Base+0xe8>
    f9c4:	str	r5, [sp]
    f9c8:	mov	r2, sl
    f9cc:	mov	r3, r9
    f9d0:	mov	r0, r8
    f9d4:	bl	23bc <lell_pcapng_record_connect_req@plt>
    f9d8:	b	f978 <lell_pcapng_append_packet@@Base+0xe8>
    f9dc:	andeq	r8, r0, r0, ror #27
    f9e0:			; <UNDEFINED> instruction: 0x000001b9
    f9e4:	andeq	r8, r0, r4, lsr #28
    f9e8:	andeq	r8, r0, r4, lsr #29

0000f9ec <lell_pcapng_close@@Base>:
    f9ec:	push	{r4, lr}
    f9f0:	mov	r4, r0
    f9f4:	bl	2500 <pcapng_close@plt>
    f9f8:	cmp	r4, #0
    f9fc:	beq	fa08 <lell_pcapng_close@@Base+0x1c>
    fa00:	mov	r0, r4
    fa04:	bl	21a0 <free@plt>
    fa08:	mvn	r0, #0
    fa0c:	pop	{r4, pc}
    fa10:	subs	r2, r1, #1
    fa14:	bxeq	lr
    fa18:	bcc	fbf0 <lell_pcapng_close@@Base+0x204>
    fa1c:	cmp	r0, r1
    fa20:	bls	fbd4 <lell_pcapng_close@@Base+0x1e8>
    fa24:	tst	r1, r2
    fa28:	beq	fbe0 <lell_pcapng_close@@Base+0x1f4>
    fa2c:	clz	r3, r0
    fa30:	clz	r2, r1
    fa34:	sub	r3, r2, r3
    fa38:	rsbs	r3, r3, #31
    fa3c:	addne	r3, r3, r3, lsl #1
    fa40:	mov	r2, #0
    fa44:	addne	pc, pc, r3, lsl #2
    fa48:	nop			; (mov r0, r0)
    fa4c:	cmp	r0, r1, lsl #31
    fa50:	adc	r2, r2, r2
    fa54:	subcs	r0, r0, r1, lsl #31
    fa58:	cmp	r0, r1, lsl #30
    fa5c:	adc	r2, r2, r2
    fa60:	subcs	r0, r0, r1, lsl #30
    fa64:	cmp	r0, r1, lsl #29
    fa68:	adc	r2, r2, r2
    fa6c:	subcs	r0, r0, r1, lsl #29
    fa70:	cmp	r0, r1, lsl #28
    fa74:	adc	r2, r2, r2
    fa78:	subcs	r0, r0, r1, lsl #28
    fa7c:	cmp	r0, r1, lsl #27
    fa80:	adc	r2, r2, r2
    fa84:	subcs	r0, r0, r1, lsl #27
    fa88:	cmp	r0, r1, lsl #26
    fa8c:	adc	r2, r2, r2
    fa90:	subcs	r0, r0, r1, lsl #26
    fa94:	cmp	r0, r1, lsl #25
    fa98:	adc	r2, r2, r2
    fa9c:	subcs	r0, r0, r1, lsl #25
    faa0:	cmp	r0, r1, lsl #24
    faa4:	adc	r2, r2, r2
    faa8:	subcs	r0, r0, r1, lsl #24
    faac:	cmp	r0, r1, lsl #23
    fab0:	adc	r2, r2, r2
    fab4:	subcs	r0, r0, r1, lsl #23
    fab8:	cmp	r0, r1, lsl #22
    fabc:	adc	r2, r2, r2
    fac0:	subcs	r0, r0, r1, lsl #22
    fac4:	cmp	r0, r1, lsl #21
    fac8:	adc	r2, r2, r2
    facc:	subcs	r0, r0, r1, lsl #21
    fad0:	cmp	r0, r1, lsl #20
    fad4:	adc	r2, r2, r2
    fad8:	subcs	r0, r0, r1, lsl #20
    fadc:	cmp	r0, r1, lsl #19
    fae0:	adc	r2, r2, r2
    fae4:	subcs	r0, r0, r1, lsl #19
    fae8:	cmp	r0, r1, lsl #18
    faec:	adc	r2, r2, r2
    faf0:	subcs	r0, r0, r1, lsl #18
    faf4:	cmp	r0, r1, lsl #17
    faf8:	adc	r2, r2, r2
    fafc:	subcs	r0, r0, r1, lsl #17
    fb00:	cmp	r0, r1, lsl #16
    fb04:	adc	r2, r2, r2
    fb08:	subcs	r0, r0, r1, lsl #16
    fb0c:	cmp	r0, r1, lsl #15
    fb10:	adc	r2, r2, r2
    fb14:	subcs	r0, r0, r1, lsl #15
    fb18:	cmp	r0, r1, lsl #14
    fb1c:	adc	r2, r2, r2
    fb20:	subcs	r0, r0, r1, lsl #14
    fb24:	cmp	r0, r1, lsl #13
    fb28:	adc	r2, r2, r2
    fb2c:	subcs	r0, r0, r1, lsl #13
    fb30:	cmp	r0, r1, lsl #12
    fb34:	adc	r2, r2, r2
    fb38:	subcs	r0, r0, r1, lsl #12
    fb3c:	cmp	r0, r1, lsl #11
    fb40:	adc	r2, r2, r2
    fb44:	subcs	r0, r0, r1, lsl #11
    fb48:	cmp	r0, r1, lsl #10
    fb4c:	adc	r2, r2, r2
    fb50:	subcs	r0, r0, r1, lsl #10
    fb54:	cmp	r0, r1, lsl #9
    fb58:	adc	r2, r2, r2
    fb5c:	subcs	r0, r0, r1, lsl #9
    fb60:	cmp	r0, r1, lsl #8
    fb64:	adc	r2, r2, r2
    fb68:	subcs	r0, r0, r1, lsl #8
    fb6c:	cmp	r0, r1, lsl #7
    fb70:	adc	r2, r2, r2
    fb74:	subcs	r0, r0, r1, lsl #7
    fb78:	cmp	r0, r1, lsl #6
    fb7c:	adc	r2, r2, r2
    fb80:	subcs	r0, r0, r1, lsl #6
    fb84:	cmp	r0, r1, lsl #5
    fb88:	adc	r2, r2, r2
    fb8c:	subcs	r0, r0, r1, lsl #5
    fb90:	cmp	r0, r1, lsl #4
    fb94:	adc	r2, r2, r2
    fb98:	subcs	r0, r0, r1, lsl #4
    fb9c:	cmp	r0, r1, lsl #3
    fba0:	adc	r2, r2, r2
    fba4:	subcs	r0, r0, r1, lsl #3
    fba8:	cmp	r0, r1, lsl #2
    fbac:	adc	r2, r2, r2
    fbb0:	subcs	r0, r0, r1, lsl #2
    fbb4:	cmp	r0, r1, lsl #1
    fbb8:	adc	r2, r2, r2
    fbbc:	subcs	r0, r0, r1, lsl #1
    fbc0:	cmp	r0, r1
    fbc4:	adc	r2, r2, r2
    fbc8:	subcs	r0, r0, r1
    fbcc:	mov	r0, r2
    fbd0:	bx	lr
    fbd4:	moveq	r0, #1
    fbd8:	movne	r0, #0
    fbdc:	bx	lr
    fbe0:	clz	r2, r1
    fbe4:	rsb	r2, r2, #31
    fbe8:	lsr	r0, r0, r2
    fbec:	bx	lr
    fbf0:	cmp	r0, #0
    fbf4:	mvnne	r0, #0
    fbf8:	b	fc58 <lell_pcapng_close@@Base+0x26c>
    fbfc:	cmp	r1, #0
    fc00:	beq	fbf0 <lell_pcapng_close@@Base+0x204>
    fc04:	push	{r0, r1, lr}
    fc08:	bl	fa10 <lell_pcapng_close@@Base+0x24>
    fc0c:	pop	{r1, r2, lr}
    fc10:	mul	r3, r2, r0
    fc14:	sub	r1, r1, r3
    fc18:	bx	lr
    fc1c:	cmp	r3, #0
    fc20:	cmpeq	r2, #0
    fc24:	bne	fc3c <lell_pcapng_close@@Base+0x250>
    fc28:	cmp	r1, #0
    fc2c:	cmpeq	r0, #0
    fc30:	mvnne	r1, #0
    fc34:	mvnne	r0, #0
    fc38:	b	fc58 <lell_pcapng_close@@Base+0x26c>
    fc3c:	sub	sp, sp, #8
    fc40:	push	{sp, lr}
    fc44:	bl	fccc <lell_pcapng_close@@Base+0x2e0>
    fc48:	ldr	lr, [sp, #4]
    fc4c:	add	sp, sp, #8
    fc50:	pop	{r2, r3}
    fc54:	bx	lr
    fc58:	push	{r1, lr}
    fc5c:	mov	r0, #8
    fc60:	bl	2110 <raise@plt>
    fc64:	pop	{r1, pc}
    fc68:	ldr	ip, [pc, #80]	; fcc0 <lell_pcapng_close@@Base+0x2d4>
    fc6c:	ldr	r2, [pc, #80]	; fcc4 <lell_pcapng_close@@Base+0x2d8>
    fc70:	and	r3, ip, r0, lsr #1
    fc74:	and	ip, ip, r1, lsr #1
    fc78:	sub	ip, r1, ip
    fc7c:	sub	r0, r0, r3
    fc80:	and	r3, r0, r2
    fc84:	and	r1, ip, r2
    fc88:	and	r0, r2, r0, lsr #2
    fc8c:	and	r2, r2, ip, lsr #2
    fc90:	add	r3, r3, r0
    fc94:	add	r1, r1, r2
    fc98:	ldr	r0, [pc, #40]	; fcc8 <lell_pcapng_close@@Base+0x2dc>
    fc9c:	add	r1, r1, r1, lsr #4
    fca0:	add	r3, r3, r3, lsr #4
    fca4:	and	r3, r3, r0
    fca8:	and	r0, r0, r1
    fcac:	add	r0, r0, r3
    fcb0:	add	r0, r0, r0, lsl #8
    fcb4:	add	r0, r0, r0, lsl #16
    fcb8:	lsr	r0, r0, #24
    fcbc:	bx	lr
    fcc0:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
    fcc4:	teqcc	r3, #-872415232	; 0xcc000000
    fcc8:	svceq	0x000f0f0f
    fccc:	cmp	r1, r3
    fcd0:	push	{r4, r5, r6, r7, r8, r9, lr}
    fcd4:	cmpeq	r0, r2
    fcd8:	mov	r4, r0
    fcdc:	mov	r5, r1
    fce0:	ldr	r9, [sp, #28]
    fce4:	movcc	r0, #0
    fce8:	movcc	r1, #0
    fcec:	bcc	fde4 <lell_pcapng_close@@Base+0x3f8>
    fcf0:	cmp	r3, #0
    fcf4:	clzeq	ip, r2
    fcf8:	clzne	ip, r3
    fcfc:	addeq	ip, ip, #32
    fd00:	cmp	r5, #0
    fd04:	clzeq	r1, r4
    fd08:	addeq	r1, r1, #32
    fd0c:	clzne	r1, r5
    fd10:	sub	ip, ip, r1
    fd14:	sub	lr, ip, #32
    fd18:	lsl	r7, r3, ip
    fd1c:	rsb	r8, ip, #32
    fd20:	orr	r7, r7, r2, lsl lr
    fd24:	orr	r7, r7, r2, lsr r8
    fd28:	lsl	r6, r2, ip
    fd2c:	cmp	r5, r7
    fd30:	cmpeq	r4, r6
    fd34:	movcc	r0, #0
    fd38:	movcc	r1, #0
    fd3c:	bcc	fd58 <lell_pcapng_close@@Base+0x36c>
    fd40:	mov	r3, #1
    fd44:	subs	r4, r4, r6
    fd48:	lsl	r1, r3, lr
    fd4c:	lsl	r0, r3, ip
    fd50:	orr	r1, r1, r3, lsr r8
    fd54:	sbc	r5, r5, r7
    fd58:	cmp	ip, #0
    fd5c:	beq	fde4 <lell_pcapng_close@@Base+0x3f8>
    fd60:	lsrs	r3, r7, #1
    fd64:	rrx	r2, r6
    fd68:	mov	r6, ip
    fd6c:	b	fd90 <lell_pcapng_close@@Base+0x3a4>
    fd70:	subs	r4, r4, r2
    fd74:	sbc	r5, r5, r3
    fd78:	adds	r4, r4, r4
    fd7c:	adc	r5, r5, r5
    fd80:	adds	r4, r4, #1
    fd84:	adc	r5, r5, #0
    fd88:	subs	r6, r6, #1
    fd8c:	beq	fdac <lell_pcapng_close@@Base+0x3c0>
    fd90:	cmp	r5, r3
    fd94:	cmpeq	r4, r2
    fd98:	bcs	fd70 <lell_pcapng_close@@Base+0x384>
    fd9c:	adds	r4, r4, r4
    fda0:	adc	r5, r5, r5
    fda4:	subs	r6, r6, #1
    fda8:	bne	fd90 <lell_pcapng_close@@Base+0x3a4>
    fdac:	lsr	r6, r4, ip
    fdb0:	lsr	r7, r5, ip
    fdb4:	orr	r6, r6, r5, lsl r8
    fdb8:	adds	r2, r0, r4
    fdbc:	orr	r6, r6, r5, lsr lr
    fdc0:	adc	r3, r1, r5
    fdc4:	lsl	r1, r7, ip
    fdc8:	orr	r1, r1, r6, lsl lr
    fdcc:	lsl	r0, r6, ip
    fdd0:	orr	r1, r1, r6, lsr r8
    fdd4:	subs	r0, r2, r0
    fdd8:	mov	r4, r6
    fddc:	mov	r5, r7
    fde0:	sbc	r1, r3, r1
    fde4:	cmp	r9, #0
    fde8:	popeq	{r4, r5, r6, r7, r8, r9, pc}
    fdec:	strd	r4, [r9]
    fdf0:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

0000fdf4 <.fini>:
    fdf4:	push	{r3, lr}
    fdf8:	pop	{r3, pc}
