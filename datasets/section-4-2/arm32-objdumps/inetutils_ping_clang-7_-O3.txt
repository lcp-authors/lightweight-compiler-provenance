
../repos/inetutils/ping/ping:     file format elf32-littlearm


Disassembly of section .init:

0001130c <.init>:
   1130c:	push	{r3, lr}
   11310:	bl	116cc <__assert_fail@plt+0x4c>
   11314:	pop	{r3, pc}

Disassembly of section .plt:

00011318 <calloc@plt-0x14>:
   11318:	push	{lr}		; (str lr, [sp, #-4]!)
   1131c:	ldr	lr, [pc, #4]	; 11328 <calloc@plt-0x4>
   11320:	add	lr, pc, lr
   11324:	ldr	pc, [lr, #8]!
   11328:	ldrdeq	sp, [r1], -r8

0001132c <calloc@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #118784	; 0x1d000
   11334:	ldr	pc, [ip, #3288]!	; 0xcd8

00011338 <fputs_unlocked@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #118784	; 0x1d000
   11340:	ldr	pc, [ip, #3280]!	; 0xcd0

00011344 <strcmp@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #118784	; 0x1d000
   1134c:	ldr	pc, [ip, #3272]!	; 0xcc8

00011350 <strtol@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #118784	; 0x1d000
   11358:	ldr	pc, [ip, #3264]!	; 0xcc0

0001135c <setsockopt@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #118784	; 0x1d000
   11364:	ldr	pc, [ip, #3256]!	; 0xcb8

00011368 <printf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #118784	; 0x1d000
   11370:	ldr	pc, [ip, #3248]!	; 0xcb0

00011374 <getprotobyname@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #118784	; 0x1d000
   1137c:	ldr	pc, [ip, #3240]!	; 0xca8

00011380 <fflush@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #118784	; 0x1d000
   11388:	ldr	pc, [ip, #3232]!	; 0xca0

0001138c <getuid@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #118784	; 0x1d000
   11394:	ldr	pc, [ip, #3224]!	; 0xc98

00011398 <memmove@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #118784	; 0x1d000
   113a0:	ldr	pc, [ip, #3216]!	; 0xc90

000113a4 <strchrnul@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #118784	; 0x1d000
   113ac:	ldr	pc, [ip, #3208]!	; 0xc88

000113b0 <free@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #118784	; 0x1d000
   113b8:	ldr	pc, [ip, #3200]!	; 0xc80

000113bc <gai_strerror@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #118784	; 0x1d000
   113c4:	ldr	pc, [ip, #3192]!	; 0xc78

000113c8 <strndup@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #118784	; 0x1d000
   113d0:	ldr	pc, [ip, #3184]!	; 0xc70

000113d4 <memcpy@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #118784	; 0x1d000
   113dc:	ldr	pc, [ip, #3176]!	; 0xc68

000113e0 <signal@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #118784	; 0x1d000
   113e8:	ldr	pc, [ip, #3168]!	; 0xc60

000113ec <fwrite_unlocked@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #118784	; 0x1d000
   113f4:	ldr	pc, [ip, #3160]!	; 0xc58

000113f8 <memcmp@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #118784	; 0x1d000
   11400:	ldr	pc, [ip, #3152]!	; 0xc50

00011404 <inet_ntoa@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #118784	; 0x1d000
   1140c:	ldr	pc, [ip, #3144]!	; 0xc48

00011410 <select@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #118784	; 0x1d000
   11418:	ldr	pc, [ip, #3136]!	; 0xc40

0001141c <sleep@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #118784	; 0x1d000
   11424:	ldr	pc, [ip, #3128]!	; 0xc38

00011428 <gethostbyaddr@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #118784	; 0x1d000
   11430:	ldr	pc, [ip, #3120]!	; 0xc30

00011434 <recvfrom@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #118784	; 0x1d000
   1143c:	ldr	pc, [ip, #3112]!	; 0xc28

00011440 <strdup@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #118784	; 0x1d000
   11448:	ldr	pc, [ip, #3104]!	; 0xc20

0001144c <realloc@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #118784	; 0x1d000
   11454:	ldr	pc, [ip, #3096]!	; 0xc18

00011458 <strcasecmp@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #118784	; 0x1d000
   11460:	ldr	pc, [ip, #3088]!	; 0xc10

00011464 <funlockfile@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #118784	; 0x1d000
   1146c:	ldr	pc, [ip, #3080]!	; 0xc08

00011470 <fwrite@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #118784	; 0x1d000
   11478:	ldr	pc, [ip, #3072]!	; 0xc00

0001147c <gettimeofday@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #118784	; 0x1d000
   11484:	ldr	pc, [ip, #3064]!	; 0xbf8

00011488 <error@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #118784	; 0x1d000
   11490:	ldr	pc, [ip, #3056]!	; 0xbf0

00011494 <getenv@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #118784	; 0x1d000
   1149c:	ldr	pc, [ip, #3048]!	; 0xbe8

000114a0 <puts@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #118784	; 0x1d000
   114a8:	ldr	pc, [ip, #3040]!	; 0xbe0

000114ac <malloc@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #118784	; 0x1d000
   114b4:	ldr	pc, [ip, #3032]!	; 0xbd8

000114b8 <__libc_start_main@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #118784	; 0x1d000
   114c0:	ldr	pc, [ip, #3024]!	; 0xbd0

000114c4 <strerror@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #118784	; 0x1d000
   114cc:	ldr	pc, [ip, #3016]!	; 0xbc8

000114d0 <__ctype_tolower_loc@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #118784	; 0x1d000
   114d8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114dc <__gmon_start__@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #118784	; 0x1d000
   114e4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114e8 <__ctype_b_loc@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #118784	; 0x1d000
   114f0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114f4 <getpid@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #118784	; 0x1d000
   114fc:	ldr	pc, [ip, #2984]!	; 0xba8

00011500 <exit@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #118784	; 0x1d000
   11508:	ldr	pc, [ip, #2976]!	; 0xba0

0001150c <strtoul@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #118784	; 0x1d000
   11514:	ldr	pc, [ip, #2968]!	; 0xb98

00011518 <strlen@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #118784	; 0x1d000
   11520:	ldr	pc, [ip, #2960]!	; 0xb90

00011524 <strchr@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #118784	; 0x1d000
   1152c:	ldr	pc, [ip, #2952]!	; 0xb88

00011530 <fprintf@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #118784	; 0x1d000
   11538:	ldr	pc, [ip, #2944]!	; 0xb80

0001153c <__errno_location@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #118784	; 0x1d000
   11544:	ldr	pc, [ip, #2936]!	; 0xb78

00011548 <snprintf@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #118784	; 0x1d000
   11550:	ldr	pc, [ip, #2928]!	; 0xb70

00011554 <strerror_r@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #118784	; 0x1d000
   1155c:	ldr	pc, [ip, #2920]!	; 0xb68

00011560 <setvbuf@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #118784	; 0x1d000
   11568:	ldr	pc, [ip, #2912]!	; 0xb60

0001156c <memset@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #118784	; 0x1d000
   11574:	ldr	pc, [ip, #2904]!	; 0xb58

00011578 <putchar@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #118784	; 0x1d000
   11580:	ldr	pc, [ip, #2896]!	; 0xb50

00011584 <strtod@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #118784	; 0x1d000
   1158c:	ldr	pc, [ip, #2888]!	; 0xb48

00011590 <memchr@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #118784	; 0x1d000
   11598:	ldr	pc, [ip, #2880]!	; 0xb40

0001159c <sendto@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #118784	; 0x1d000
   115a4:	ldr	pc, [ip, #2872]!	; 0xb38

000115a8 <__overflow@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #118784	; 0x1d000
   115b0:	ldr	pc, [ip, #2864]!	; 0xb30

000115b4 <setlocale@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #118784	; 0x1d000
   115bc:	ldr	pc, [ip, #2856]!	; 0xb28

000115c0 <getnameinfo@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #118784	; 0x1d000
   115c8:	ldr	pc, [ip, #2848]!	; 0xb20

000115cc <strrchr@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #118784	; 0x1d000
   115d4:	ldr	pc, [ip, #2840]!	; 0xb18

000115d8 <vfprintf@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #118784	; 0x1d000
   115e0:	ldr	pc, [ip, #2832]!	; 0xb10

000115e4 <fputc@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #118784	; 0x1d000
   115ec:	ldr	pc, [ip, #2824]!	; 0xb08

000115f0 <setuid@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #118784	; 0x1d000
   115f8:	ldr	pc, [ip, #2816]!	; 0xb00

000115fc <sscanf@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #118784	; 0x1d000
   11604:	ldr	pc, [ip, #2808]!	; 0xaf8

00011608 <putc@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #118784	; 0x1d000
   11610:	ldr	pc, [ip, #2800]!	; 0xaf0

00011614 <flockfile@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #118784	; 0x1d000
   1161c:	ldr	pc, [ip, #2792]!	; 0xae8

00011620 <vsnprintf@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #118784	; 0x1d000
   11628:	ldr	pc, [ip, #2784]!	; 0xae0

0001162c <qsort@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #118784	; 0x1d000
   11634:	ldr	pc, [ip, #2776]!	; 0xad8

00011638 <freeaddrinfo@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #118784	; 0x1d000
   11640:	ldr	pc, [ip, #2768]!	; 0xad0

00011644 <getaddrinfo@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #118784	; 0x1d000
   1164c:	ldr	pc, [ip, #2760]!	; 0xac8

00011650 <socket@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #118784	; 0x1d000
   11658:	ldr	pc, [ip, #2752]!	; 0xac0

0001165c <strncmp@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #118784	; 0x1d000
   11664:	ldr	pc, [ip, #2744]!	; 0xab8

00011668 <abort@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #118784	; 0x1d000
   11670:	ldr	pc, [ip, #2736]!	; 0xab0

00011674 <close@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #118784	; 0x1d000
   1167c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011680 <__assert_fail@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #118784	; 0x1d000
   11688:	ldr	pc, [ip, #2720]!	; 0xaa0

Disassembly of section .text:

00011690 <argp_help@@Base-0x3a68>:
   11690:	mov	fp, #0
   11694:	mov	lr, #0
   11698:	pop	{r1}		; (ldr r1, [sp], #4)
   1169c:	mov	r2, sp
   116a0:	push	{r2}		; (str r2, [sp, #-4]!)
   116a4:	push	{r0}		; (str r0, [sp, #-4]!)
   116a8:	ldr	ip, [pc, #16]	; 116c0 <__assert_fail@plt+0x40>
   116ac:	push	{ip}		; (str ip, [sp, #-4]!)
   116b0:	ldr	r0, [pc, #12]	; 116c4 <__assert_fail@plt+0x44>
   116b4:	ldr	r3, [pc, #12]	; 116c8 <__assert_fail@plt+0x48>
   116b8:	bl	114b8 <__libc_start_main@plt>
   116bc:	bl	11668 <abort@plt>
   116c0:	strdeq	ip, [r1], -r8
   116c4:	andeq	r1, r1, r0, lsl #15
   116c8:	muleq	r1, r8, r6
   116cc:	ldr	r3, [pc, #20]	; 116e8 <__assert_fail@plt+0x68>
   116d0:	ldr	r2, [pc, #20]	; 116ec <__assert_fail@plt+0x6c>
   116d4:	add	r3, pc, r3
   116d8:	ldr	r2, [r3, r2]
   116dc:	cmp	r2, #0
   116e0:	bxeq	lr
   116e4:	b	114dc <__gmon_start__@plt>
   116e8:	andeq	sp, r1, r4, lsr #18
   116ec:	andeq	r0, r0, ip, lsr #2
   116f0:	ldr	r0, [pc, #24]	; 11710 <__assert_fail@plt+0x90>
   116f4:	ldr	r3, [pc, #24]	; 11714 <__assert_fail@plt+0x94>
   116f8:	cmp	r3, r0
   116fc:	bxeq	lr
   11700:	ldr	r3, [pc, #16]	; 11718 <__assert_fail@plt+0x98>
   11704:	cmp	r3, #0
   11708:	bxeq	lr
   1170c:	bx	r3
   11710:	andeq	pc, r2, ip, lsr #12
   11714:	andeq	pc, r2, ip, lsr #12
   11718:	andeq	r0, r0, r0
   1171c:	ldr	r0, [pc, #36]	; 11748 <__assert_fail@plt+0xc8>
   11720:	ldr	r1, [pc, #36]	; 1174c <__assert_fail@plt+0xcc>
   11724:	sub	r1, r1, r0
   11728:	asr	r1, r1, #2
   1172c:	add	r1, r1, r1, lsr #31
   11730:	asrs	r1, r1, #1
   11734:	bxeq	lr
   11738:	ldr	r3, [pc, #16]	; 11750 <__assert_fail@plt+0xd0>
   1173c:	cmp	r3, #0
   11740:	bxeq	lr
   11744:	bx	r3
   11748:	andeq	pc, r2, ip, lsr #12
   1174c:	andeq	pc, r2, ip, lsr #12
   11750:	andeq	r0, r0, r0
   11754:	push	{r4, lr}
   11758:	ldr	r4, [pc, #24]	; 11778 <__assert_fail@plt+0xf8>
   1175c:	ldrb	r3, [r4]
   11760:	cmp	r3, #0
   11764:	popne	{r4, pc}
   11768:	bl	116f0 <__assert_fail@plt+0x70>
   1176c:	mov	r3, #1
   11770:	strb	r3, [r4]
   11774:	pop	{r4, pc}
   11778:	andeq	pc, r2, r0, asr #12
   1177c:	b	1171c <__assert_fail@plt+0x9c>
   11780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11784:	add	fp, sp, #28
   11788:	sub	sp, sp, #20
   1178c:	mov	r4, #1
   11790:	mov	r7, r0
   11794:	mov	r9, r1
   11798:	str	r4, [sp, #12]
   1179c:	ldr	r0, [r1]
   117a0:	bl	19ee4 <argp_parse@@Base+0x14a0>
   117a4:	movw	r1, #56973	; 0xde8d
   117a8:	mov	r0, #6
   117ac:	movt	r1, #1
   117b0:	bl	115b4 <setlocale@plt>
   117b4:	bl	1138c <getuid@plt>
   117b8:	cmp	r0, #0
   117bc:	movw	r1, #51105	; 0xc7a1
   117c0:	movw	sl, #62400	; 0xf3c0
   117c4:	movweq	r0, #62400	; 0xf3c0
   117c8:	movt	r1, #1
   117cc:	movt	sl, #2
   117d0:	movteq	r0, #2
   117d4:	strbeq	r4, [r0]
   117d8:	movw	r0, #63192	; 0xf6d8
   117dc:	movt	r0, #2
   117e0:	str	r1, [r0]
   117e4:	movw	r0, #51129	; 0xc7b9
   117e8:	add	r1, sl, #44	; 0x2c
   117ec:	movt	r0, #1
   117f0:	bl	19d00 <argp_parse@@Base+0x12bc>
   117f4:	mov	r0, #0
   117f8:	add	r1, sp, #16
   117fc:	mov	r2, r9
   11800:	mov	r3, #0
   11804:	str	r1, [sp]
   11808:	str	r0, [sp, #4]
   1180c:	add	r0, sl, #52	; 0x34
   11810:	mov	r1, r7
   11814:	bl	18a44 <argp_parse@@Base>
   11818:	bl	114f4 <getpid@plt>
   1181c:	mov	r1, r0
   11820:	mov	r0, #8
   11824:	bl	1476c <__assert_fail@plt+0x30ec>
   11828:	movw	r8, #63180	; 0xf6cc
   1182c:	cmp	r0, #0
   11830:	movt	r8, #2
   11834:	str	r0, [r8]
   11838:	beq	11a08 <__assert_fail@plt+0x388>
   1183c:	add	r2, sp, #12
   11840:	mov	r1, #6
   11844:	mov	r3, #4
   11848:	bl	12f0c <__assert_fail@plt+0x188c>
   1184c:	bl	1138c <getuid@plt>
   11850:	bl	115f0 <setuid@plt>
   11854:	cmp	r0, #0
   11858:	beq	11874 <__assert_fail@plt+0x1f4>
   1185c:	bl	1153c <__errno_location@plt>
   11860:	ldr	r1, [r0]
   11864:	movw	r2, #51134	; 0xc7be
   11868:	mov	r0, #1
   1186c:	movt	r2, #1
   11870:	bl	11488 <error@plt>
   11874:	movw	r0, #63036	; 0xf63c
   11878:	mov	r1, #0
   1187c:	mov	r2, #1
   11880:	mov	r3, #0
   11884:	movt	r0, #2
   11888:	ldr	r0, [r0]
   1188c:	bl	11560 <setvbuf@plt>
   11890:	ldr	r1, [sl, #8]
   11894:	ldr	r4, [sp, #16]
   11898:	cmp	r1, #0
   1189c:	beq	118a8 <__assert_fail@plt+0x228>
   118a0:	ldr	r0, [r8]
   118a4:	bl	12f04 <__assert_fail@plt+0x1884>
   118a8:	movw	r0, #63176	; 0xf6c8
   118ac:	movt	r0, #2
   118b0:	ldr	r1, [r0]
   118b4:	cmp	r1, #0
   118b8:	beq	118cc <__assert_fail@plt+0x24c>
   118bc:	ldr	r0, [r8]
   118c0:	add	r2, sp, #12
   118c4:	mov	r3, #4
   118c8:	bl	12f0c <__assert_fail@plt+0x188c>
   118cc:	movw	r0, #63172	; 0xf6c4
   118d0:	movt	r0, #2
   118d4:	ldrb	r0, [r0]
   118d8:	tst	r0, #2
   118dc:	beq	118f4 <__assert_fail@plt+0x274>
   118e0:	movw	r0, #63188	; 0xf6d4
   118e4:	movt	r0, #2
   118e8:	ldr	r1, [r0]
   118ec:	ldr	r0, [r8]
   118f0:	bl	12f40 <__assert_fail@plt+0x18c0>
   118f4:	ldr	r0, [sl, #24]
   118f8:	cmp	r0, #1
   118fc:	blt	11940 <__assert_fail@plt+0x2c0>
   11900:	ldr	r0, [r8]
   11904:	mov	r1, #4
   11908:	add	r3, sl, #24
   1190c:	mov	r2, #2
   11910:	ldr	r0, [r0]
   11914:	str	r1, [sp]
   11918:	mov	r1, #0
   1191c:	bl	1135c <setsockopt@plt>
   11920:	cmn	r0, #1
   11924:	bgt	11940 <__assert_fail@plt+0x2c0>
   11928:	bl	1153c <__errno_location@plt>
   1192c:	ldr	r1, [r0]
   11930:	movw	r2, #51141	; 0xc7c5
   11934:	mov	r0, #0
   11938:	movt	r2, #1
   1193c:	bl	11488 <error@plt>
   11940:	ldr	r0, [sl, #20]
   11944:	sub	r5, r7, r4
   11948:	cmp	r0, #0
   1194c:	blt	11990 <__assert_fail@plt+0x310>
   11950:	ldr	r0, [r8]
   11954:	mov	r1, #4
   11958:	add	r3, sl, #20
   1195c:	mov	r2, #1
   11960:	ldr	r0, [r0]
   11964:	str	r1, [sp]
   11968:	mov	r1, #0
   1196c:	bl	1135c <setsockopt@plt>
   11970:	cmn	r0, #1
   11974:	bgt	11990 <__assert_fail@plt+0x310>
   11978:	bl	1153c <__errno_location@plt>
   1197c:	ldr	r1, [r0]
   11980:	movw	r2, #51160	; 0xc7d8
   11984:	mov	r0, #0
   11988:	movt	r2, #1
   1198c:	bl	11488 <error@plt>
   11990:	movw	r0, #63164	; 0xf6bc
   11994:	ldr	r1, [sl, #4]
   11998:	movt	r0, #2
   1199c:	ldr	r0, [r0]
   119a0:	bl	12b4c <__assert_fail@plt+0x14cc>
   119a4:	cmp	r5, #0
   119a8:	beq	119e0 <__assert_fail@plt+0x360>
   119ac:	add	r6, r9, r4, lsl #2
   119b0:	sub	r7, r4, r7
   119b4:	mov	r4, #0
   119b8:	ldr	r0, [r6], #4
   119bc:	ldr	r1, [sl, #36]	; 0x24
   119c0:	blx	r1
   119c4:	mov	r5, r0
   119c8:	ldr	r0, [r8]
   119cc:	bl	14930 <__assert_fail@plt+0x32b0>
   119d0:	orr	r4, r5, r4
   119d4:	adds	r7, r7, #1
   119d8:	bne	119b8 <__assert_fail@plt+0x338>
   119dc:	b	119e4 <__assert_fail@plt+0x364>
   119e0:	mov	r4, #0
   119e4:	ldr	r0, [r8]
   119e8:	bl	19df4 <argp_parse@@Base+0x13b0>
   119ec:	movw	r0, #63168	; 0xf6c0
   119f0:	movt	r0, #2
   119f4:	ldr	r0, [r0]
   119f8:	bl	19df4 <argp_parse@@Base+0x13b0>
   119fc:	mov	r0, r4
   11a00:	sub	sp, fp, #28
   11a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a08:	mov	r0, #1
   11a0c:	bl	11500 <exit@plt>
   11a10:	push	{r4, r5, fp, lr}
   11a14:	add	fp, sp, #8
   11a18:	movw	r1, #51179	; 0xc7eb
   11a1c:	mov	r4, r0
   11a20:	movt	r1, #1
   11a24:	bl	11458 <strcasecmp@plt>
   11a28:	cmp	r0, #0
   11a2c:	beq	11aa4 <__assert_fail@plt+0x424>
   11a30:	movw	r1, #52318	; 0xcc5e
   11a34:	mov	r0, r4
   11a38:	movt	r1, #1
   11a3c:	bl	11458 <strcasecmp@plt>
   11a40:	cmp	r0, #0
   11a44:	beq	11ab4 <__assert_fail@plt+0x434>
   11a48:	movw	r1, #51504	; 0xc930
   11a4c:	mov	r0, r4
   11a50:	movt	r1, #1
   11a54:	bl	11458 <strcasecmp@plt>
   11a58:	movw	r5, #17416	; 0x4408
   11a5c:	cmp	r0, #0
   11a60:	movt	r5, #1
   11a64:	beq	11a9c <__assert_fail@plt+0x41c>
   11a68:	movw	r1, #51184	; 0xc7f0
   11a6c:	mov	r0, r4
   11a70:	movt	r1, #1
   11a74:	bl	11458 <strcasecmp@plt>
   11a78:	cmp	r0, #0
   11a7c:	beq	11a9c <__assert_fail@plt+0x41c>
   11a80:	movw	r2, #51189	; 0xc7f5
   11a84:	mov	r0, #1
   11a88:	mov	r1, #0
   11a8c:	mov	r3, r4
   11a90:	mov	r5, #0
   11a94:	movt	r2, #1
   11a98:	bl	11488 <error@plt>
   11a9c:	mov	r0, r5
   11aa0:	pop	{r4, r5, fp, pc}
   11aa4:	movw	r5, #12864	; 0x3240
   11aa8:	movt	r5, #1
   11aac:	mov	r0, r5
   11ab0:	pop	{r4, r5, fp, pc}
   11ab4:	movw	r5, #17772	; 0x456c
   11ab8:	movt	r5, #1
   11abc:	mov	r0, r5
   11ac0:	pop	{r4, r5, fp, pc}
   11ac4:	movw	r0, #62400	; 0xf3c0
   11ac8:	mov	r1, #1
   11acc:	movt	r0, #2
   11ad0:	str	r1, [r0, #40]	; 0x28
   11ad4:	bx	lr
   11ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11adc:	add	fp, sp, #28
   11ae0:	sub	sp, sp, #4
   11ae4:	vpush	{d8-d9}
   11ae8:	sub	sp, sp, #216	; 0xd8
   11aec:	mov	r7, r1
   11af0:	movw	r1, #6852	; 0x1ac4
   11af4:	mov	sl, r0
   11af8:	mov	r0, #2
   11afc:	movt	r1, #1
   11b00:	bl	113e0 <signal@plt>
   11b04:	movw	r8, #62400	; 0xf3c0
   11b08:	ldr	r4, [sl]
   11b0c:	mov	r6, #0
   11b10:	movt	r8, #2
   11b14:	str	r6, [sp, #60]	; 0x3c
   11b18:	str	r6, [sp, #56]	; 0x38
   11b1c:	str	r6, [sp, #76]	; 0x4c
   11b20:	str	r6, [sp, #72]	; 0x48
   11b24:	ldr	r0, [r8, #16]
   11b28:	cmp	r0, #0
   11b2c:	beq	11b48 <__assert_fail@plt+0x4c8>
   11b30:	mov	r0, sl
   11b34:	bl	11f18 <__assert_fail@plt+0x898>
   11b38:	ldr	r0, [r8, #16]
   11b3c:	add	r6, r6, #1
   11b40:	cmp	r6, r0
   11b44:	bcc	11b30 <__assert_fail@plt+0x4b0>
   11b48:	movw	r0, #63172	; 0xf6c4
   11b4c:	str	r7, [sp, #12]
   11b50:	movt	r0, #2
   11b54:	ldrb	r0, [r0]
   11b58:	tst	r0, #1
   11b5c:	bne	11b84 <__assert_fail@plt+0x504>
   11b60:	ldr	r0, [sl, #20]
   11b64:	movw	r1, #19923	; 0x4dd3
   11b68:	movt	r1, #4194	; 0x1062
   11b6c:	umull	r1, r2, r0, r1
   11b70:	lsr	r5, r2, #6
   11b74:	mov	r1, #1000	; 0x3e8
   11b78:	mls	r0, r5, r1, r0
   11b7c:	mul	r0, r0, r1
   11b80:	b	11b8c <__assert_fail@plt+0x50c>
   11b84:	movw	r0, #10000	; 0x2710
   11b88:	mov	r5, #0
   11b8c:	str	r0, [sp, #52]	; 0x34
   11b90:	add	r0, sp, #64	; 0x40
   11b94:	mov	r1, #0
   11b98:	bl	1147c <gettimeofday@plt>
   11b9c:	mov	r0, sl
   11ba0:	bl	11f18 <__assert_fail@plt+0x898>
   11ba4:	ldr	r0, [r8, #40]	; 0x28
   11ba8:	cmp	r0, #0
   11bac:	bne	11eec <__assert_fail@plt+0x86c>
   11bb0:	add	r0, r4, #1
   11bb4:	movw	r1, #16960	; 0x4240
   11bb8:	add	r9, sp, #80	; 0x50
   11bbc:	vmov.i32	q4, #0	; 0x00000000
   11bc0:	str	r0, [sp, #48]	; 0x30
   11bc4:	ldr	r0, [sp, #52]	; 0x34
   11bc8:	movt	r1, #15
   11bcc:	sub	r7, r1, #1
   11bd0:	mov	r4, r1
   11bd4:	mov	r2, r0
   11bd8:	add	r0, r0, r1
   11bdc:	str	r0, [sp, #20]
   11be0:	sub	r0, r7, r2
   11be4:	str	r0, [sp, #16]
   11be8:	add	r0, sl, #12
   11bec:	str	r0, [sp, #28]
   11bf0:	add	r0, r9, #96	; 0x60
   11bf4:	str	r0, [sp, #44]	; 0x2c
   11bf8:	add	r0, r9, #80	; 0x50
   11bfc:	str	r0, [sp, #40]	; 0x28
   11c00:	add	r0, r9, #64	; 0x40
   11c04:	str	r0, [sp, #36]	; 0x24
   11c08:	mov	r0, #0
   11c0c:	str	r0, [sp, #32]
   11c10:	mov	r0, #0
   11c14:	str	r0, [sp, #8]
   11c18:	mov	r0, #0
   11c1c:	str	r0, [sp, #24]
   11c20:	mov	r0, r9
   11c24:	mov	r1, #112	; 0x70
   11c28:	mov	r3, #1
   11c2c:	vst1.64	{d8-d9}, [r0], r1
   11c30:	vst1.64	{d8-d9}, [r0]
   11c34:	ldr	r0, [sp, #44]	; 0x2c
   11c38:	vst1.64	{d8-d9}, [r0]
   11c3c:	ldr	r0, [sp, #40]	; 0x28
   11c40:	vst1.64	{d8-d9}, [r0]
   11c44:	ldr	r0, [sp, #36]	; 0x24
   11c48:	vst1.64	{d8-d9}, [r0]
   11c4c:	add	r0, r9, #48	; 0x30
   11c50:	vst1.64	{d8-d9}, [r0]
   11c54:	add	r0, r9, #32
   11c58:	vst1.64	{d8-d9}, [r0]
   11c5c:	add	r0, r9, #16
   11c60:	vst1.64	{d8-d9}, [r0]
   11c64:	ldr	r0, [sl]
   11c68:	asr	r1, r0, #31
   11c6c:	add	r1, r0, r1, lsr #27
   11c70:	and	r0, r0, #31
   11c74:	asr	r1, r1, #5
   11c78:	ldr	r2, [r9, r1, lsl #2]
   11c7c:	orr	r0, r2, r3, lsl r0
   11c80:	str	r0, [r9, r1, lsl #2]
   11c84:	add	r0, sp, #56	; 0x38
   11c88:	mov	r1, #0
   11c8c:	bl	1147c <gettimeofday@plt>
   11c90:	ldr	r0, [sp, #64]	; 0x40
   11c94:	ldr	r1, [sp, #56]	; 0x38
   11c98:	ldr	r2, [sp, #68]	; 0x44
   11c9c:	ldr	r3, [sp, #60]	; 0x3c
   11ca0:	add	r0, r0, r5
   11ca4:	sub	r0, r0, r1
   11ca8:	ldr	r1, [sp, #52]	; 0x34
   11cac:	str	r0, [sp, #72]	; 0x48
   11cb0:	add	r1, r2, r1
   11cb4:	sub	r1, r1, r3
   11cb8:	cmn	r1, #1
   11cbc:	str	r1, [sp, #76]	; 0x4c
   11cc0:	ble	11db8 <__assert_fail@plt+0x738>
   11cc4:	cmp	r1, r7
   11cc8:	ble	11d18 <__assert_fail@plt+0x698>
   11ccc:	movw	r6, #31616	; 0x7b80
   11cd0:	mvn	r3, r1
   11cd4:	add	r2, r1, r4
   11cd8:	movt	r6, #65505	; 0xffe1
   11cdc:	cmp	r3, r6
   11ce0:	movle	r3, r6
   11ce4:	add	r2, r2, r3
   11ce8:	movw	r3, #56963	; 0xde83
   11cec:	movt	r3, #17179	; 0x431b
   11cf0:	umull	r2, r3, r2, r3
   11cf4:	add	r0, r0, r3, lsr #18
   11cf8:	lsr	r2, r3, #18
   11cfc:	movw	r3, #48576	; 0xbdc0
   11d00:	movt	r3, #65520	; 0xfff0
   11d04:	add	r0, r0, #1
   11d08:	add	r1, r1, r3
   11d0c:	str	r0, [sp, #72]	; 0x48
   11d10:	mla	r1, r2, r3, r1
   11d14:	str	r1, [sp, #76]	; 0x4c
   11d18:	cmn	r0, #1
   11d1c:	mov	r1, r9
   11d20:	mov	r2, #0
   11d24:	mov	r3, #0
   11d28:	movle	r0, #0
   11d2c:	strle	r0, [sp, #72]	; 0x48
   11d30:	strle	r0, [sp, #76]	; 0x4c
   11d34:	add	r0, sp, #72	; 0x48
   11d38:	str	r0, [sp]
   11d3c:	ldr	r0, [sp, #48]	; 0x30
   11d40:	bl	11410 <select@plt>
   11d44:	cmn	r0, #1
   11d48:	ble	11e28 <__assert_fail@plt+0x7a8>
   11d4c:	cmp	r0, #1
   11d50:	bne	11e58 <__assert_fail@plt+0x7d8>
   11d54:	mov	r0, sl
   11d58:	bl	14abc <__assert_fail@plt+0x343c>
   11d5c:	cmp	r0, #0
   11d60:	ldr	r0, [sp, #32]
   11d64:	addeq	r0, r0, #1
   11d68:	str	r0, [sp, #32]
   11d6c:	ldr	r0, [sp, #24]
   11d70:	cmp	r0, #0
   11d74:	bne	11d8c <__assert_fail@plt+0x70c>
   11d78:	add	r6, sp, #56	; 0x38
   11d7c:	mov	r1, #0
   11d80:	mov	r0, r6
   11d84:	bl	1147c <gettimeofday@plt>
   11d88:	str	r6, [sp, #24]
   11d8c:	ldr	r1, [r8, #28]
   11d90:	ldr	r0, [sp, #28]
   11d94:	bl	12f88 <__assert_fail@plt+0x1908>
   11d98:	cmp	r0, #0
   11d9c:	bne	11eec <__assert_fail@plt+0x86c>
   11da0:	ldr	r0, [sl, #8]
   11da4:	ldr	r1, [sp, #32]
   11da8:	sub	r0, r0, #1
   11dac:	cmp	r0, r1
   11db0:	bcs	11e48 <__assert_fail@plt+0x7c8>
   11db4:	b	11eec <__assert_fail@plt+0x86c>
   11db8:	movw	r6, #48576	; 0xbdc0
   11dbc:	mov	ip, r5
   11dc0:	movt	r6, #65520	; 0xfff0
   11dc4:	cmp	r1, r6
   11dc8:	movle	r1, r6
   11dcc:	mov	r6, r4
   11dd0:	mov	r4, r7
   11dd4:	ldr	r7, [sp, #16]
   11dd8:	add	r7, r7, r3
   11ddc:	add	r1, r7, r1
   11de0:	movw	r7, #56963	; 0xde83
   11de4:	sub	r1, r1, r2
   11de8:	movt	r7, #17179	; 0x431b
   11dec:	umull	r1, r7, r1, r7
   11df0:	mvn	r1, r7, lsr #18
   11df4:	add	r0, r0, r1
   11df8:	lsr	r1, r7, #18
   11dfc:	ldr	r7, [sp, #20]
   11e00:	str	r0, [sp, #72]	; 0x48
   11e04:	add	r2, r7, r2
   11e08:	mov	r7, r4
   11e0c:	mov	r4, r6
   11e10:	mla	r1, r1, r6, r2
   11e14:	sub	r1, r1, r3
   11e18:	str	r1, [sp, #76]	; 0x4c
   11e1c:	cmp	r1, r7
   11e20:	bgt	11ccc <__assert_fail@plt+0x64c>
   11e24:	b	11d18 <__assert_fail@plt+0x698>
   11e28:	bl	1153c <__errno_location@plt>
   11e2c:	ldr	r1, [r0]
   11e30:	cmp	r1, #4
   11e34:	beq	11e48 <__assert_fail@plt+0x7c8>
   11e38:	movw	r2, #51217	; 0xc811
   11e3c:	mov	r0, #1
   11e40:	movt	r2, #1
   11e44:	bl	11488 <error@plt>
   11e48:	ldr	r0, [r8, #40]	; 0x28
   11e4c:	cmp	r0, #0
   11e50:	beq	11c20 <__assert_fail@plt+0x5a0>
   11e54:	b	11eec <__assert_fail@plt+0x86c>
   11e58:	ldr	r0, [sl, #8]
   11e5c:	cmp	r0, #0
   11e60:	beq	11e70 <__assert_fail@plt+0x7f0>
   11e64:	ldr	r1, [sl, #112]	; 0x70
   11e68:	cmp	r1, r0
   11e6c:	bcs	11ebc <__assert_fail@plt+0x83c>
   11e70:	mov	r0, sl
   11e74:	bl	11f18 <__assert_fail@plt+0x898>
   11e78:	movw	r0, #63172	; 0xf6c4
   11e7c:	movt	r0, #2
   11e80:	ldr	r0, [r0]
   11e84:	and	r0, r0, #9
   11e88:	cmp	r0, #1
   11e8c:	bne	11ea4 <__assert_fail@plt+0x824>
   11e90:	movw	r0, #63036	; 0xf63c
   11e94:	movt	r0, #2
   11e98:	ldr	r1, [r0]
   11e9c:	mov	r0, #46	; 0x2e
   11ea0:	bl	11608 <putc@plt>
   11ea4:	ldr	r1, [r8, #28]
   11ea8:	ldr	r0, [sp, #28]
   11eac:	bl	12f88 <__assert_fail@plt+0x1908>
   11eb0:	cmp	r0, #0
   11eb4:	beq	11ed4 <__assert_fail@plt+0x854>
   11eb8:	b	11eec <__assert_fail@plt+0x86c>
   11ebc:	ldr	r0, [sp, #8]
   11ec0:	cmp	r0, #0
   11ec4:	bne	11eec <__assert_fail@plt+0x86c>
   11ec8:	ldr	r5, [r8, #32]
   11ecc:	mov	r0, #1
   11ed0:	str	r0, [sp, #8]
   11ed4:	add	r0, sp, #64	; 0x40
   11ed8:	mov	r1, #0
   11edc:	bl	1147c <gettimeofday@plt>
   11ee0:	ldr	r0, [r8, #40]	; 0x28
   11ee4:	cmp	r0, #0
   11ee8:	beq	11c20 <__assert_fail@plt+0x5a0>
   11eec:	mov	r0, sl
   11ef0:	bl	12f48 <__assert_fail@plt+0x18c8>
   11ef4:	ldr	r1, [sp, #12]
   11ef8:	mov	r0, #0
   11efc:	cmp	r1, #0
   11f00:	beq	11f08 <__assert_fail@plt+0x888>
   11f04:	blx	r1
   11f08:	sub	sp, fp, #48	; 0x30
   11f0c:	vpop	{d8-d9}
   11f10:	add	sp, sp, #4
   11f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f18:	push	{r4, r5, r6, r7, fp, lr}
   11f1c:	add	fp, sp, #16
   11f20:	sub	sp, sp, #16
   11f24:	movw	r7, #62400	; 0xf3c0
   11f28:	mov	r4, r0
   11f2c:	mov	r5, #0
   11f30:	movt	r7, #2
   11f34:	ldr	r0, [r7, #12]
   11f38:	cmp	r0, #8
   11f3c:	bcc	11f70 <__assert_fail@plt+0x8f0>
   11f40:	add	r6, sp, #8
   11f44:	mov	r1, #0
   11f48:	mov	r5, #0
   11f4c:	mov	r0, r6
   11f50:	bl	1147c <gettimeofday@plt>
   11f54:	mov	r0, r4
   11f58:	mov	r1, r6
   11f5c:	mov	r2, #0
   11f60:	mov	r3, #8
   11f64:	str	r5, [sp]
   11f68:	mov	r5, #8
   11f6c:	bl	12e50 <__assert_fail@plt+0x17d0>
   11f70:	movw	r0, #63168	; 0xf6c0
   11f74:	movt	r0, #2
   11f78:	ldr	r1, [r0]
   11f7c:	cmp	r1, #0
   11f80:	beq	11fa4 <__assert_fail@plt+0x924>
   11f84:	ldr	r0, [r7, #12]
   11f88:	mov	r2, #0
   11f8c:	str	r2, [sp]
   11f90:	mov	r2, r5
   11f94:	subs	r3, r0, r5
   11f98:	movls	r3, r0
   11f9c:	mov	r0, r4
   11fa0:	bl	12e50 <__assert_fail@plt+0x17d0>
   11fa4:	mov	r0, r4
   11fa8:	bl	1494c <__assert_fail@plt+0x32cc>
   11fac:	cmn	r0, #1
   11fb0:	ble	11fbc <__assert_fail@plt+0x93c>
   11fb4:	sub	sp, fp, #16
   11fb8:	pop	{r4, r5, r6, r7, fp, pc}
   11fbc:	bl	1153c <__errno_location@plt>
   11fc0:	ldr	r1, [r0]
   11fc4:	movw	r2, #52578	; 0xcd62
   11fc8:	mov	r0, #1
   11fcc:	movt	r2, #1
   11fd0:	bl	11488 <error@plt>
   11fd4:	sub	sp, fp, #16
   11fd8:	pop	{r4, r5, r6, r7, fp, pc}
   11fdc:	push	{r4, r5, fp, lr}
   11fe0:	add	fp, sp, #8
   11fe4:	movw	r4, #63036	; 0xf63c
   11fe8:	movt	r4, #2
   11fec:	ldr	r0, [r4]
   11ff0:	bl	11380 <fflush@plt>
   11ff4:	movw	r5, #63180	; 0xf6cc
   11ff8:	movt	r5, #2
   11ffc:	ldr	r0, [r5]
   12000:	ldr	r1, [r0, #52]	; 0x34
   12004:	movw	r0, #51231	; 0xc81f
   12008:	movt	r0, #1
   1200c:	bl	11368 <printf@plt>
   12010:	ldr	r0, [r5]
   12014:	ldr	r1, [r0, #112]	; 0x70
   12018:	movw	r0, #51259	; 0xc83b
   1201c:	movt	r0, #1
   12020:	bl	11368 <printf@plt>
   12024:	ldr	r0, [r5]
   12028:	ldr	r1, [r0, #116]	; 0x74
   1202c:	movw	r0, #51285	; 0xc855
   12030:	movt	r0, #1
   12034:	bl	11368 <printf@plt>
   12038:	ldr	r0, [r5]
   1203c:	ldr	r1, [r0, #120]	; 0x78
   12040:	cmp	r1, #0
   12044:	beq	12058 <__assert_fail@plt+0x9d8>
   12048:	movw	r0, #51308	; 0xc86c
   1204c:	movt	r0, #1
   12050:	bl	11368 <printf@plt>
   12054:	ldr	r0, [r5]
   12058:	ldr	r1, [r0, #112]	; 0x70
   1205c:	cmp	r1, #0
   12060:	beq	1209c <__assert_fail@plt+0xa1c>
   12064:	ldr	r0, [r0, #116]	; 0x74
   12068:	cmp	r1, r0
   1206c:	bcs	12080 <__assert_fail@plt+0xa00>
   12070:	movw	r0, #51326	; 0xc87e
   12074:	movt	r0, #1
   12078:	bl	11368 <printf@plt>
   1207c:	b	1209c <__assert_fail@plt+0xa1c>
   12080:	sub	r0, r1, r0
   12084:	mov	r2, #100	; 0x64
   12088:	mul	r0, r0, r2
   1208c:	udiv	r1, r0, r1
   12090:	movw	r0, #51366	; 0xc8a6
   12094:	movt	r0, #1
   12098:	bl	11368 <printf@plt>
   1209c:	ldr	r1, [r4]
   120a0:	mov	r0, #10
   120a4:	bl	11608 <putc@plt>
   120a8:	mov	r0, #0
   120ac:	pop	{r4, r5, fp, pc}
   120b0:	push	{r4, r5, r6, sl, fp, lr}
   120b4:	add	fp, sp, #16
   120b8:	vpush	{d8}
   120bc:	sub	sp, sp, #8
   120c0:	mov	r4, r1
   120c4:	sub	r1, r0, #82	; 0x52
   120c8:	mov	r6, r2
   120cc:	mov	r5, #7
   120d0:	cmp	r1, #179	; 0xb3
   120d4:	bhi	123cc <__assert_fail@plt+0xd4c>
   120d8:	add	r0, pc, #0
   120dc:	ldr	pc, [r0, r1, lsl #2]
   120e0:			; <UNDEFINED> instruction: 0x000123b8
   120e4:	muleq	r1, r8, r5
   120e8:	strdeq	r2, [r1], -ip
   120ec:	muleq	r1, r8, r5
   120f0:	muleq	r1, r8, r5
   120f4:	andeq	r2, r1, ip, lsr #8
   120f8:	muleq	r1, r8, r5
   120fc:	muleq	r1, r8, r5
   12100:	muleq	r1, r8, r5
   12104:	muleq	r1, r8, r5
   12108:	muleq	r1, r8, r5
   1210c:	muleq	r1, r8, r5
   12110:	muleq	r1, r8, r5
   12114:	muleq	r1, r8, r5
   12118:	muleq	r1, r8, r5
   1211c:	muleq	r1, r8, r5
   12120:	muleq	r1, r8, r5
   12124:	andeq	r2, r1, ip, asr r4
   12128:	andeq	r2, r1, ip, lsl #9
   1212c:	muleq	r1, r8, r5
   12130:	muleq	r1, r8, r4
   12134:	muleq	r1, r8, r5
   12138:	muleq	r1, r8, r5
   1213c:	andeq	r2, r1, ip, lsr #9
   12140:	muleq	r1, r8, r5
   12144:	muleq	r1, r8, r5
   12148:	andeq	r2, r1, r4, asr #10
   1214c:	muleq	r1, r8, r5
   12150:	andeq	r2, r1, r8, lsr #11
   12154:	muleq	r1, r8, r5
   12158:			; <UNDEFINED> instruction: 0x000125bc
   1215c:	strdeq	r2, [r1], -ip
   12160:	andeq	r2, r1, r0, lsl r6
   12164:	andeq	r2, r1, r4, lsr #12
   12168:	andeq	r2, r1, r4, asr r6
   1216c:	muleq	r1, r8, r5
   12170:	ldrdeq	r2, [r1], -ip
   12174:	strdeq	r2, [r1], -r0
   12178:	muleq	r1, r8, r5
   1217c:	muleq	r1, r8, r5
   12180:	muleq	r1, r8, r5
   12184:	muleq	r1, r8, r5
   12188:	muleq	r1, r8, r5
   1218c:	muleq	r1, r8, r5
   12190:	muleq	r1, r8, r5
   12194:	muleq	r1, r8, r5
   12198:	muleq	r1, r8, r5
   1219c:	muleq	r1, r8, r5
   121a0:	muleq	r1, r8, r5
   121a4:	muleq	r1, r8, r5
   121a8:	muleq	r1, r8, r5
   121ac:	muleq	r1, r8, r5
   121b0:	muleq	r1, r8, r5
   121b4:	muleq	r1, r8, r5
   121b8:	muleq	r1, r8, r5
   121bc:	muleq	r1, r8, r5
   121c0:	muleq	r1, r8, r5
   121c4:	muleq	r1, r8, r5
   121c8:	muleq	r1, r8, r5
   121cc:	muleq	r1, r8, r5
   121d0:	muleq	r1, r8, r5
   121d4:	muleq	r1, r8, r5
   121d8:	muleq	r1, r8, r5
   121dc:	muleq	r1, r8, r5
   121e0:	muleq	r1, r8, r5
   121e4:	muleq	r1, r8, r5
   121e8:	muleq	r1, r8, r5
   121ec:	muleq	r1, r8, r5
   121f0:	muleq	r1, r8, r5
   121f4:	muleq	r1, r8, r5
   121f8:	muleq	r1, r8, r5
   121fc:	muleq	r1, r8, r5
   12200:	muleq	r1, r8, r5
   12204:	muleq	r1, r8, r5
   12208:	muleq	r1, r8, r5
   1220c:	muleq	r1, r8, r5
   12210:	muleq	r1, r8, r5
   12214:	muleq	r1, r8, r5
   12218:	muleq	r1, r8, r5
   1221c:	muleq	r1, r8, r5
   12220:	muleq	r1, r8, r5
   12224:	muleq	r1, r8, r5
   12228:	muleq	r1, r8, r5
   1222c:	muleq	r1, r8, r5
   12230:	muleq	r1, r8, r5
   12234:	muleq	r1, r8, r5
   12238:	muleq	r1, r8, r5
   1223c:	muleq	r1, r8, r5
   12240:	muleq	r1, r8, r5
   12244:	muleq	r1, r8, r5
   12248:	muleq	r1, r8, r5
   1224c:	muleq	r1, r8, r5
   12250:	muleq	r1, r8, r5
   12254:	muleq	r1, r8, r5
   12258:	muleq	r1, r8, r5
   1225c:	muleq	r1, r8, r5
   12260:	muleq	r1, r8, r5
   12264:	muleq	r1, r8, r5
   12268:	muleq	r1, r8, r5
   1226c:	muleq	r1, r8, r5
   12270:	muleq	r1, r8, r5
   12274:	muleq	r1, r8, r5
   12278:	muleq	r1, r8, r5
   1227c:	muleq	r1, r8, r5
   12280:	muleq	r1, r8, r5
   12284:	muleq	r1, r8, r5
   12288:	muleq	r1, r8, r5
   1228c:	muleq	r1, r8, r5
   12290:	muleq	r1, r8, r5
   12294:	muleq	r1, r8, r5
   12298:	muleq	r1, r8, r5
   1229c:	muleq	r1, r8, r5
   122a0:	muleq	r1, r8, r5
   122a4:	muleq	r1, r8, r5
   122a8:	muleq	r1, r8, r5
   122ac:	muleq	r1, r8, r5
   122b0:	muleq	r1, r8, r5
   122b4:	muleq	r1, r8, r5
   122b8:	muleq	r1, r8, r5
   122bc:	muleq	r1, r8, r5
   122c0:	muleq	r1, r8, r5
   122c4:	muleq	r1, r8, r5
   122c8:	muleq	r1, r8, r5
   122cc:	muleq	r1, r8, r5
   122d0:	muleq	r1, r8, r5
   122d4:	muleq	r1, r8, r5
   122d8:	muleq	r1, r8, r5
   122dc:	muleq	r1, r8, r5
   122e0:	muleq	r1, r8, r5
   122e4:	muleq	r1, r8, r5
   122e8:	muleq	r1, r8, r5
   122ec:	muleq	r1, r8, r5
   122f0:	muleq	r1, r8, r5
   122f4:	muleq	r1, r8, r5
   122f8:	muleq	r1, r8, r5
   122fc:	muleq	r1, r8, r5
   12300:	muleq	r1, r8, r5
   12304:	muleq	r1, r8, r5
   12308:	muleq	r1, r8, r5
   1230c:	muleq	r1, r8, r5
   12310:	muleq	r1, r8, r5
   12314:	muleq	r1, r8, r5
   12318:	muleq	r1, r8, r5
   1231c:	muleq	r1, r8, r5
   12320:	muleq	r1, r8, r5
   12324:	muleq	r1, r8, r5
   12328:	muleq	r1, r8, r5
   1232c:	muleq	r1, r8, r5
   12330:	muleq	r1, r8, r5
   12334:	muleq	r1, r8, r5
   12338:	muleq	r1, r8, r5
   1233c:	muleq	r1, r8, r5
   12340:	muleq	r1, r8, r5
   12344:	muleq	r1, r8, r5
   12348:	muleq	r1, r8, r5
   1234c:	muleq	r1, r8, r5
   12350:	muleq	r1, r8, r5
   12354:	muleq	r1, r8, r5
   12358:	muleq	r1, r8, r5
   1235c:	muleq	r1, r8, r5
   12360:	muleq	r1, r8, r5
   12364:	muleq	r1, r8, r5
   12368:	muleq	r1, r8, r5
   1236c:	muleq	r1, r8, r5
   12370:	muleq	r1, r8, r5
   12374:	muleq	r1, r8, r5
   12378:	muleq	r1, r8, r5
   1237c:	muleq	r1, r8, r5
   12380:	muleq	r1, r8, r5
   12384:	muleq	r1, r8, r5
   12388:	muleq	r1, r8, r5
   1238c:	muleq	r1, r8, r5
   12390:	muleq	r1, r8, r5
   12394:	muleq	r1, r8, r5
   12398:	andeq	r2, r1, r0, lsr #14
   1239c:	andeq	r2, r1, ip, lsr #15
   123a0:	andeq	r2, r1, r8, lsr r8
   123a4:	andeq	r2, r1, r4, asr #17
   123a8:	andeq	r2, r1, ip, ror #18
   123ac:	muleq	r1, ip, r9
   123b0:	andeq	r0, r0, r0
   123b4:	addmi	r4, pc, r0
   123b8:	movw	r0, #63172	; 0xf6c4
   123bc:	movt	r0, #2
   123c0:	ldr	r1, [r0]
   123c4:	orr	r1, r1, #16
   123c8:	b	12a78 <__assert_fail@plt+0x13f8>
   123cc:	movw	r1, #2
   123d0:	movt	r1, #256	; 0x100
   123d4:	cmp	r0, r1
   123d8:	bne	12598 <__assert_fail@plt+0xf18>
   123dc:	movw	r1, #52512	; 0xcd20
   123e0:	mov	r0, r6
   123e4:	movt	r1, #1
   123e8:	bl	168b8 <argp_error@@Base>
   123ec:	mov	r0, r5
   123f0:	sub	sp, fp, #24
   123f4:	vpop	{d8}
   123f8:	pop	{r4, r5, r6, sl, fp, pc}
   123fc:	mov	r0, r4
   12400:	mov	r1, #255	; 0xff
   12404:	mov	r2, #1
   12408:	bl	12a90 <__assert_fail@plt+0x1410>
   1240c:	movw	r1, #62400	; 0xf3c0
   12410:	mov	r5, #0
   12414:	movt	r1, #2
   12418:	str	r0, [r1, #20]
   1241c:	mov	r0, r5
   12420:	sub	sp, fp, #24
   12424:	vpop	{d8}
   12428:	pop	{r4, r5, r6, sl, fp, pc}
   1242c:	mov	r0, r4
   12430:	mvn	r1, #-2147483648	; 0x80000000
   12434:	mov	r2, #0
   12438:	mov	r5, #0
   1243c:	bl	12a90 <__assert_fail@plt+0x1410>
   12440:	movw	r1, #62400	; 0xf3c0
   12444:	movt	r1, #2
   12448:	str	r0, [r1, #32]
   1244c:	mov	r0, r5
   12450:	sub	sp, fp, #24
   12454:	vpop	{d8}
   12458:	pop	{r4, r5, r6, sl, fp, pc}
   1245c:	mov	r0, r4
   12460:	mov	r1, #0
   12464:	mov	r2, #1
   12468:	mov	r5, #0
   1246c:	bl	12a90 <__assert_fail@plt+0x1410>
   12470:	movw	r1, #62400	; 0xf3c0
   12474:	movt	r1, #2
   12478:	str	r0, [r1, #8]
   1247c:	mov	r0, r5
   12480:	sub	sp, fp, #24
   12484:	vpop	{d8}
   12488:	pop	{r4, r5, r6, sl, fp, pc}
   1248c:	movw	r0, #63176	; 0xf6c8
   12490:	movt	r0, #2
   12494:	b	124a0 <__assert_fail@plt+0xe20>
   12498:	movw	r0, #63172	; 0xf6c4
   1249c:	movt	r0, #2
   124a0:	ldr	r1, [r0]
   124a4:	orr	r1, r1, #1
   124a8:	b	12a78 <__assert_fail@plt+0x13f8>
   124ac:	add	r1, sp, #4
   124b0:	mov	r0, r4
   124b4:	bl	11584 <strtod@plt>
   124b8:	ldr	r3, [sp, #4]
   124bc:	vmov.f64	d8, d0
   124c0:	ldrb	r0, [r3]
   124c4:	cmp	r0, #0
   124c8:	beq	124e0 <__assert_fail@plt+0xe60>
   124cc:	movw	r1, #52427	; 0xcccb
   124d0:	mov	r0, r6
   124d4:	mov	r2, r4
   124d8:	movt	r1, #1
   124dc:	bl	168b8 <argp_error@@Base>
   124e0:	vldr	d16, [pc, #-312]	; 123b0 <__assert_fail@plt+0xd30>
   124e4:	movw	r0, #63188	; 0xf6d4
   124e8:	mov	r5, #0
   124ec:	movt	r0, #2
   124f0:	vmul.f64	d16, d8, d16
   124f4:	vcvt.u32.f64	s0, d16
   124f8:	vcvt.u32.f64	s2, d16
   124fc:	vstr	s0, [r0]
   12500:	movw	r0, #63172	; 0xf6c4
   12504:	movt	r0, #2
   12508:	ldr	r1, [r0]
   1250c:	orr	r1, r1, #2
   12510:	str	r1, [r0]
   12514:	vmov	r0, s2
   12518:	cmp	r0, #199	; 0xc7
   1251c:	bhi	12598 <__assert_fail@plt+0xf18>
   12520:	movw	r0, #62400	; 0xf3c0
   12524:	movt	r0, #2
   12528:	ldrb	r0, [r0]
   1252c:	cmp	r0, #0
   12530:	bne	12598 <__assert_fail@plt+0xf18>
   12534:	movw	r2, #52458	; 0xccea
   12538:	mov	r5, #0
   1253c:	movt	r2, #1
   12540:	b	12588 <__assert_fail@plt+0xf08>
   12544:	add	r1, sp, #4
   12548:	mov	r0, r4
   1254c:	mov	r2, #0
   12550:	mov	r5, #0
   12554:	bl	1150c <strtoul@plt>
   12558:	movw	r1, #62400	; 0xf3c0
   1255c:	cmp	r0, #0
   12560:	movt	r1, #2
   12564:	str	r0, [r1, #16]
   12568:	blt	1257c <__assert_fail@plt+0xefc>
   1256c:	ldr	r0, [sp, #4]
   12570:	ldrb	r0, [r0]
   12574:	cmp	r0, #0
   12578:	beq	12598 <__assert_fail@plt+0xf18>
   1257c:	movw	r2, #52485	; 0xcd05
   12580:	mov	r5, #0
   12584:	movt	r2, #1
   12588:	mov	r0, #1
   1258c:	mov	r1, #0
   12590:	mov	r3, r4
   12594:	bl	11488 <error@plt>
   12598:	mov	r0, r5
   1259c:	sub	sp, fp, #24
   125a0:	vpop	{d8}
   125a4:	pop	{r4, r5, r6, sl, fp, pc}
   125a8:	movw	r0, #63172	; 0xf6c4
   125ac:	movt	r0, #2
   125b0:	ldr	r1, [r0]
   125b4:	orr	r1, r1, #4
   125b8:	b	12a78 <__assert_fail@plt+0x13f8>
   125bc:	movw	r0, #62400	; 0xf3c0
   125c0:	movw	r5, #63041	; 0xf641
   125c4:	movt	r0, #2
   125c8:	movt	r5, #2
   125cc:	add	r1, r0, #4
   125d0:	mov	r0, r4
   125d4:	mov	r2, r5
   125d8:	bl	12c08 <__assert_fail@plt+0x1588>
   125dc:	movw	r0, #63164	; 0xf6bc
   125e0:	movt	r0, #2
   125e4:	str	r5, [r0]
   125e8:	mov	r5, #0
   125ec:	mov	r0, r5
   125f0:	sub	sp, fp, #24
   125f4:	vpop	{d8}
   125f8:	pop	{r4, r5, r6, sl, fp, pc}
   125fc:	movw	r0, #63172	; 0xf6c4
   12600:	movt	r0, #2
   12604:	ldr	r1, [r0]
   12608:	orr	r1, r1, #8
   1260c:	b	12a78 <__assert_fail@plt+0x13f8>
   12610:	movw	r0, #63176	; 0xf6c8
   12614:	movt	r0, #2
   12618:	ldr	r1, [r0]
   1261c:	orr	r1, r1, #5
   12620:	b	12a78 <__assert_fail@plt+0x13f8>
   12624:	mov	r0, r4
   12628:	movw	r1, #65399	; 0xff77
   1262c:	mov	r2, #1
   12630:	bl	12a90 <__assert_fail@plt+0x1410>
   12634:	movw	r1, #62400	; 0xf3c0
   12638:	mov	r5, #0
   1263c:	movt	r1, #2
   12640:	str	r0, [r1, #12]
   12644:	mov	r0, r5
   12648:	sub	sp, fp, #24
   1264c:	vpop	{d8}
   12650:	pop	{r4, r5, r6, sl, fp, pc}
   12654:	movw	r1, #51179	; 0xc7eb
   12658:	mov	r0, r4
   1265c:	movt	r1, #1
   12660:	bl	11458 <strcasecmp@plt>
   12664:	cmp	r0, #0
   12668:	beq	12a28 <__assert_fail@plt+0x13a8>
   1266c:	movw	r1, #52318	; 0xcc5e
   12670:	mov	r0, r4
   12674:	movt	r1, #1
   12678:	bl	11458 <strcasecmp@plt>
   1267c:	cmp	r0, #0
   12680:	beq	12a3c <__assert_fail@plt+0x13bc>
   12684:	movw	r1, #51504	; 0xc930
   12688:	mov	r0, r4
   1268c:	movt	r1, #1
   12690:	bl	11458 <strcasecmp@plt>
   12694:	movw	r5, #17416	; 0x4408
   12698:	cmp	r0, #0
   1269c:	movt	r5, #1
   126a0:	beq	12a44 <__assert_fail@plt+0x13c4>
   126a4:	movw	r1, #51184	; 0xc7f0
   126a8:	mov	r0, r4
   126ac:	movt	r1, #1
   126b0:	bl	11458 <strcasecmp@plt>
   126b4:	cmp	r0, #0
   126b8:	beq	12a44 <__assert_fail@plt+0x13c4>
   126bc:	movw	r2, #51189	; 0xc7f5
   126c0:	mov	r0, #1
   126c4:	mov	r1, #0
   126c8:	mov	r3, r4
   126cc:	mov	r5, #0
   126d0:	movt	r2, #1
   126d4:	bl	11488 <error@plt>
   126d8:	b	12a44 <__assert_fail@plt+0x13c4>
   126dc:	movw	r0, #63172	; 0xf6c4
   126e0:	movt	r0, #2
   126e4:	ldr	r1, [r0]
   126e8:	orr	r1, r1, #32
   126ec:	b	12a78 <__assert_fail@plt+0x13f8>
   126f0:	mov	r0, r4
   126f4:	mvn	r1, #-2147483648	; 0x80000000
   126f8:	mov	r2, #0
   126fc:	mov	r5, #0
   12700:	bl	12a90 <__assert_fail@plt+0x1410>
   12704:	movw	r1, #62400	; 0xf3c0
   12708:	movt	r1, #2
   1270c:	str	r0, [r1, #28]
   12710:	mov	r0, r5
   12714:	sub	sp, fp, #24
   12718:	vpop	{d8}
   1271c:	pop	{r4, r5, r6, sl, fp, pc}
   12720:	movw	r0, #51179	; 0xc7eb
   12724:	movt	r0, #1
   12728:	mov	r1, r0
   1272c:	bl	11458 <strcasecmp@plt>
   12730:	cmp	r0, #0
   12734:	beq	12960 <__assert_fail@plt+0x12e0>
   12738:	movw	r0, #51179	; 0xc7eb
   1273c:	movw	r1, #52318	; 0xcc5e
   12740:	movt	r0, #1
   12744:	movt	r1, #1
   12748:	bl	11458 <strcasecmp@plt>
   1274c:	cmp	r0, #0
   12750:	beq	12a00 <__assert_fail@plt+0x1380>
   12754:	movw	r0, #51179	; 0xc7eb
   12758:	movw	r1, #51504	; 0xc930
   1275c:	movt	r0, #1
   12760:	movt	r1, #1
   12764:	bl	11458 <strcasecmp@plt>
   12768:	movw	r4, #17416	; 0x4408
   1276c:	cmp	r0, #0
   12770:	movt	r4, #1
   12774:	beq	12a08 <__assert_fail@plt+0x1388>
   12778:	movw	r0, #51179	; 0xc7eb
   1277c:	movw	r1, #51184	; 0xc7f0
   12780:	movt	r0, #1
   12784:	movt	r1, #1
   12788:	bl	11458 <strcasecmp@plt>
   1278c:	cmp	r0, #0
   12790:	beq	12a08 <__assert_fail@plt+0x1388>
   12794:	movw	r2, #51189	; 0xc7f5
   12798:	movw	r3, #51179	; 0xc7eb
   1279c:	mov	r4, #0
   127a0:	movt	r2, #1
   127a4:	movt	r3, #1
   127a8:	b	12950 <__assert_fail@plt+0x12d0>
   127ac:	movw	r0, #51504	; 0xc930
   127b0:	movw	r1, #51179	; 0xc7eb
   127b4:	movt	r0, #1
   127b8:	movt	r1, #1
   127bc:	bl	11458 <strcasecmp@plt>
   127c0:	cmp	r0, #0
   127c4:	beq	12960 <__assert_fail@plt+0x12e0>
   127c8:	movw	r0, #51504	; 0xc930
   127cc:	movw	r1, #52318	; 0xcc5e
   127d0:	movt	r0, #1
   127d4:	movt	r1, #1
   127d8:	bl	11458 <strcasecmp@plt>
   127dc:	cmp	r0, #0
   127e0:	beq	12a00 <__assert_fail@plt+0x1380>
   127e4:	movw	r0, #51504	; 0xc930
   127e8:	movt	r0, #1
   127ec:	mov	r1, r0
   127f0:	bl	11458 <strcasecmp@plt>
   127f4:	movw	r4, #17416	; 0x4408
   127f8:	cmp	r0, #0
   127fc:	movt	r4, #1
   12800:	beq	12a08 <__assert_fail@plt+0x1388>
   12804:	movw	r0, #51504	; 0xc930
   12808:	movw	r1, #51184	; 0xc7f0
   1280c:	movt	r0, #1
   12810:	movt	r1, #1
   12814:	bl	11458 <strcasecmp@plt>
   12818:	cmp	r0, #0
   1281c:	beq	12a08 <__assert_fail@plt+0x1388>
   12820:	movw	r2, #51189	; 0xc7f5
   12824:	movw	r3, #51504	; 0xc930
   12828:	mov	r4, #0
   1282c:	movt	r2, #1
   12830:	movt	r3, #1
   12834:	b	12950 <__assert_fail@plt+0x12d0>
   12838:	movw	r0, #52318	; 0xcc5e
   1283c:	movw	r1, #51179	; 0xc7eb
   12840:	movt	r0, #1
   12844:	movt	r1, #1
   12848:	bl	11458 <strcasecmp@plt>
   1284c:	cmp	r0, #0
   12850:	beq	12960 <__assert_fail@plt+0x12e0>
   12854:	movw	r0, #52318	; 0xcc5e
   12858:	movt	r0, #1
   1285c:	mov	r1, r0
   12860:	bl	11458 <strcasecmp@plt>
   12864:	cmp	r0, #0
   12868:	beq	12a00 <__assert_fail@plt+0x1380>
   1286c:	movw	r0, #52318	; 0xcc5e
   12870:	movw	r1, #51504	; 0xc930
   12874:	movt	r0, #1
   12878:	movt	r1, #1
   1287c:	bl	11458 <strcasecmp@plt>
   12880:	movw	r4, #17416	; 0x4408
   12884:	cmp	r0, #0
   12888:	movt	r4, #1
   1288c:	beq	12a08 <__assert_fail@plt+0x1388>
   12890:	movw	r0, #52318	; 0xcc5e
   12894:	movw	r1, #51184	; 0xc7f0
   12898:	movt	r0, #1
   1289c:	movt	r1, #1
   128a0:	bl	11458 <strcasecmp@plt>
   128a4:	cmp	r0, #0
   128a8:	beq	12a08 <__assert_fail@plt+0x1388>
   128ac:	movw	r2, #51189	; 0xc7f5
   128b0:	movw	r3, #52318	; 0xcc5e
   128b4:	mov	r4, #0
   128b8:	movt	r2, #1
   128bc:	movt	r3, #1
   128c0:	b	12950 <__assert_fail@plt+0x12d0>
   128c4:	movw	r0, #51568	; 0xc970
   128c8:	movw	r1, #51179	; 0xc7eb
   128cc:	movt	r0, #1
   128d0:	movt	r1, #1
   128d4:	bl	11458 <strcasecmp@plt>
   128d8:	cmp	r0, #0
   128dc:	beq	12960 <__assert_fail@plt+0x12e0>
   128e0:	movw	r0, #51568	; 0xc970
   128e4:	movw	r1, #52318	; 0xcc5e
   128e8:	movt	r0, #1
   128ec:	movt	r1, #1
   128f0:	bl	11458 <strcasecmp@plt>
   128f4:	cmp	r0, #0
   128f8:	beq	12a00 <__assert_fail@plt+0x1380>
   128fc:	movw	r0, #51568	; 0xc970
   12900:	movw	r1, #51504	; 0xc930
   12904:	movt	r0, #1
   12908:	movt	r1, #1
   1290c:	bl	11458 <strcasecmp@plt>
   12910:	movw	r4, #17416	; 0x4408
   12914:	cmp	r0, #0
   12918:	movt	r4, #1
   1291c:	beq	12a08 <__assert_fail@plt+0x1388>
   12920:	movw	r0, #51568	; 0xc970
   12924:	movw	r1, #51184	; 0xc7f0
   12928:	movt	r0, #1
   1292c:	movt	r1, #1
   12930:	bl	11458 <strcasecmp@plt>
   12934:	cmp	r0, #0
   12938:	beq	12a08 <__assert_fail@plt+0x1388>
   1293c:	movw	r2, #51189	; 0xc7f5
   12940:	movw	r3, #51568	; 0xc970
   12944:	mov	r4, #0
   12948:	movt	r2, #1
   1294c:	movt	r3, #1
   12950:	mov	r0, #1
   12954:	mov	r1, #0
   12958:	bl	11488 <error@plt>
   1295c:	b	12a08 <__assert_fail@plt+0x1388>
   12960:	movw	r4, #12864	; 0x3240
   12964:	movt	r4, #1
   12968:	b	12a08 <__assert_fail@plt+0x1388>
   1296c:	mov	r0, r4
   12970:	mov	r1, #255	; 0xff
   12974:	mov	r2, #0
   12978:	mov	r5, #0
   1297c:	bl	12a90 <__assert_fail@plt+0x1410>
   12980:	movw	r1, #62400	; 0xf3c0
   12984:	movt	r1, #2
   12988:	str	r0, [r1, #24]
   1298c:	mov	r0, r5
   12990:	sub	sp, fp, #24
   12994:	vpop	{d8}
   12998:	pop	{r4, r5, r6, sl, fp, pc}
   1299c:	movw	r0, #63172	; 0xf6c4
   129a0:	movt	r0, #2
   129a4:	ldr	r1, [r0]
   129a8:	orr	r1, r1, #64	; 0x40
   129ac:	str	r1, [r0]
   129b0:	movw	r1, #52533	; 0xcd35
   129b4:	mov	r0, r4
   129b8:	movt	r1, #1
   129bc:	bl	11458 <strcasecmp@plt>
   129c0:	cmp	r0, #0
   129c4:	beq	12a34 <__assert_fail@plt+0x13b4>
   129c8:	movw	r1, #52540	; 0xcd3c
   129cc:	mov	r0, r4
   129d0:	movt	r1, #1
   129d4:	bl	11458 <strcasecmp@plt>
   129d8:	cmp	r0, #0
   129dc:	beq	12a64 <__assert_fail@plt+0x13e4>
   129e0:	movw	r2, #52547	; 0xcd43
   129e4:	mov	r0, #1
   129e8:	mov	r1, #0
   129ec:	mov	r3, r4
   129f0:	mov	r5, #0
   129f4:	movt	r2, #1
   129f8:	bl	11488 <error@plt>
   129fc:	b	12a68 <__assert_fail@plt+0x13e8>
   12a00:	movw	r4, #17772	; 0x456c
   12a04:	movt	r4, #1
   12a08:	movw	r0, #62400	; 0xf3c0
   12a0c:	mov	r5, #0
   12a10:	movt	r0, #2
   12a14:	str	r4, [r0, #36]	; 0x24
   12a18:	mov	r0, r5
   12a1c:	sub	sp, fp, #24
   12a20:	vpop	{d8}
   12a24:	pop	{r4, r5, r6, sl, fp, pc}
   12a28:	movw	r5, #12864	; 0x3240
   12a2c:	movt	r5, #1
   12a30:	b	12a44 <__assert_fail@plt+0x13c4>
   12a34:	mov	r5, #1
   12a38:	b	12a68 <__assert_fail@plt+0x13e8>
   12a3c:	movw	r5, #17772	; 0x456c
   12a40:	movt	r5, #1
   12a44:	movw	r0, #62400	; 0xf3c0
   12a48:	movt	r0, #2
   12a4c:	str	r5, [r0, #36]	; 0x24
   12a50:	mov	r5, #0
   12a54:	mov	r0, r5
   12a58:	sub	sp, fp, #24
   12a5c:	vpop	{d8}
   12a60:	pop	{r4, r5, r6, sl, fp, pc}
   12a64:	mov	r5, #2
   12a68:	movw	r0, #63184	; 0xf6d0
   12a6c:	movt	r0, #2
   12a70:	ldr	r1, [r0]
   12a74:	orr	r1, r1, r5
   12a78:	str	r1, [r0]
   12a7c:	mov	r5, #0
   12a80:	mov	r0, r5
   12a84:	sub	sp, fp, #24
   12a88:	vpop	{d8}
   12a8c:	pop	{r4, r5, r6, sl, fp, pc}
   12a90:	push	{r4, r5, r6, r7, fp, lr}
   12a94:	add	fp, sp, #16
   12a98:	sub	sp, sp, #8
   12a9c:	mov	r7, r2
   12aa0:	mov	r6, r1
   12aa4:	add	r1, sp, #4
   12aa8:	mov	r2, #0
   12aac:	mov	r4, r0
   12ab0:	bl	1150c <strtoul@plt>
   12ab4:	mov	r5, r0
   12ab8:	ldr	r0, [sp, #4]
   12abc:	ldrb	r1, [r0]
   12ac0:	cmp	r1, #0
   12ac4:	beq	12ae4 <__assert_fail@plt+0x1464>
   12ac8:	movw	r2, #52427	; 0xcccb
   12acc:	str	r0, [sp]
   12ad0:	mov	r0, #1
   12ad4:	mov	r1, #0
   12ad8:	mov	r3, r4
   12adc:	movt	r2, #1
   12ae0:	bl	11488 <error@plt>
   12ae4:	orrs	r0, r5, r7
   12ae8:	beq	12b04 <__assert_fail@plt+0x1484>
   12aec:	cmp	r6, #0
   12af0:	cmpne	r5, r6
   12af4:	bhi	12b28 <__assert_fail@plt+0x14a8>
   12af8:	mov	r0, r5
   12afc:	sub	sp, fp, #16
   12b00:	pop	{r4, r5, r6, r7, fp, pc}
   12b04:	movw	r2, #52458	; 0xccea
   12b08:	mov	r0, #1
   12b0c:	mov	r1, #0
   12b10:	mov	r3, r4
   12b14:	movt	r2, #1
   12b18:	bl	11488 <error@plt>
   12b1c:	cmp	r6, #0
   12b20:	cmpne	r5, r6
   12b24:	bls	12af8 <__assert_fail@plt+0x1478>
   12b28:	movw	r2, #52593	; 0xcd71
   12b2c:	mov	r0, #1
   12b30:	mov	r1, #0
   12b34:	mov	r3, r4
   12b38:	movt	r2, #1
   12b3c:	bl	11488 <error@plt>
   12b40:	mov	r0, r5
   12b44:	sub	sp, fp, #16
   12b48:	pop	{r4, r5, r6, r7, fp, pc}
   12b4c:	push	{r4, r5, r6, r7, fp, lr}
   12b50:	add	fp, sp, #16
   12b54:	movw	r7, #62412	; 0xf3cc
   12b58:	mov	r5, r0
   12b5c:	movt	r7, #2
   12b60:	ldr	r0, [r7]
   12b64:	cmp	r0, #0
   12b68:	beq	12c04 <__assert_fail@plt+0x1584>
   12b6c:	mov	r4, r1
   12b70:	bl	1a5a0 <argp_parse@@Base+0x1b5c>
   12b74:	ldr	r2, [r7]
   12b78:	movw	ip, #63168	; 0xf6c0
   12b7c:	cmp	r5, #0
   12b80:	movt	ip, #2
   12b84:	str	r0, [ip]
   12b88:	beq	12bcc <__assert_fail@plt+0x154c>
   12b8c:	cmp	r2, #1
   12b90:	blt	12c04 <__assert_fail@plt+0x1584>
   12b94:	mov	r2, #0
   12b98:	mov	r3, #0
   12b9c:	add	r1, r3, #1
   12ba0:	ldrb	r3, [r5, r3]
   12ba4:	ldr	r6, [ip]
   12ba8:	cmp	r1, r4
   12bac:	movcs	r1, r2
   12bb0:	strb	r3, [r0], #1
   12bb4:	ldr	r3, [r7]
   12bb8:	add	r3, r6, r3
   12bbc:	cmp	r0, r3
   12bc0:	mov	r3, r1
   12bc4:	bcc	12b9c <__assert_fail@plt+0x151c>
   12bc8:	b	12c04 <__assert_fail@plt+0x1584>
   12bcc:	cmp	r2, #0
   12bd0:	beq	12c04 <__assert_fail@plt+0x1584>
   12bd4:	mov	r2, #0
   12bd8:	strb	r2, [r0]
   12bdc:	ldr	r0, [r7]
   12be0:	cmp	r0, #2
   12be4:	popcc	{r4, r5, r6, r7, fp, pc}
   12be8:	mov	r0, #1
   12bec:	ldr	r1, [ip]
   12bf0:	strb	r0, [r1, r0]
   12bf4:	add	r0, r0, #1
   12bf8:	ldr	r1, [r7]
   12bfc:	cmp	r0, r1
   12c00:	bcc	12bec <__assert_fail@plt+0x156c>
   12c04:	pop	{r4, r5, r6, r7, fp, pc}
   12c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c0c:	add	fp, sp, #28
   12c10:	sub	sp, sp, #12
   12c14:	mov	r6, r0
   12c18:	ldrb	r0, [r0]
   12c1c:	mov	r4, r1
   12c20:	cmp	r0, #0
   12c24:	beq	12ca4 <__assert_fail@plt+0x1624>
   12c28:	movw	r8, #52618	; 0xcd8a
   12c2c:	mov	r5, r2
   12c30:	mov	sl, #0
   12c34:	add	r9, sp, #8
   12c38:	add	r7, sp, #4
   12c3c:	movt	r8, #1
   12c40:	ldr	r0, [r4]
   12c44:	cmp	sl, r0
   12c48:	bge	12c98 <__assert_fail@plt+0x1618>
   12c4c:	mov	r0, r6
   12c50:	mov	r1, r8
   12c54:	mov	r2, r9
   12c58:	mov	r3, r7
   12c5c:	bl	115fc <sscanf@plt>
   12c60:	cmp	r0, #1
   12c64:	beq	12c80 <__assert_fail@plt+0x1600>
   12c68:	movw	r2, #52624	; 0xcd90
   12c6c:	mov	r0, #1
   12c70:	mov	r1, #0
   12c74:	mov	r3, r6
   12c78:	movt	r2, #1
   12c7c:	bl	11488 <error@plt>
   12c80:	ldmib	sp, {r0, r1}
   12c84:	strb	r1, [r5, sl]
   12c88:	add	sl, sl, #1
   12c8c:	ldrb	r0, [r6, r0]!
   12c90:	cmp	r0, #0
   12c94:	bne	12c40 <__assert_fail@plt+0x15c0>
   12c98:	str	sl, [r4]
   12c9c:	sub	sp, fp, #28
   12ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ca4:	mov	sl, #0
   12ca8:	str	sl, [r4]
   12cac:	sub	sp, fp, #28
   12cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cb4:	ldr	r3, [r1, #4]
   12cb8:	ldr	r2, [r0, #4]
   12cbc:	ldr	ip, [r0]
   12cc0:	sub	r3, r2, r3
   12cc4:	cmn	r3, #1
   12cc8:	str	r3, [r0, #4]
   12ccc:	ble	12ce0 <__assert_fail@plt+0x1660>
   12cd0:	ldr	r1, [r1]
   12cd4:	sub	r1, ip, r1
   12cd8:	str	r1, [r0]
   12cdc:	bx	lr
   12ce0:	add	r2, r3, #576	; 0x240
   12ce4:	sub	ip, ip, #1
   12ce8:	add	r2, r2, #999424	; 0xf4000
   12cec:	str	ip, [r0]
   12cf0:	str	r2, [r0, #4]
   12cf4:	ldr	r1, [r1]
   12cf8:	sub	r1, ip, r1
   12cfc:	str	r1, [r0]
   12d00:	bx	lr
   12d04:	vcmpe.f64	d0, #0.0
   12d08:	vneg.f64	d16, d0
   12d0c:	vmrs	APSR_nzcv, fpscr
   12d10:	vmovmi.f64	d0, d16
   12d14:	bx	lr
   12d18:	vcmpe.f64	d0, #0.0
   12d1c:	vmov.i32	d16, #0	; 0x00000000
   12d20:	vmrs	APSR_nzcv, fpscr
   12d24:	vcmpepl.f64	d0, d1
   12d28:	vmrspl	APSR_nzcv, fpscr
   12d2c:	bmi	12d68 <__assert_fail@plt+0x16e8>
   12d30:	vmov.f64	d17, #96	; 0x3f000000  0.5
   12d34:	vmul.f64	d18, d0, d17
   12d38:	vdiv.f64	d16, d0, d18
   12d3c:	vadd.f64	d16, d18, d16
   12d40:	vmul.f64	d16, d16, d17
   12d44:	vsub.f64	d18, d16, d18
   12d48:	vcmpe.f64	d18, #0.0
   12d4c:	vneg.f64	d19, d18
   12d50:	vmrs	APSR_nzcv, fpscr
   12d54:	vmovmi.f64	d18, d19
   12d58:	vcmpe.f64	d18, d1
   12d5c:	vmov.f64	d18, d16
   12d60:	vmrs	APSR_nzcv, fpscr
   12d64:	bgt	12d38 <__assert_fail@plt+0x16b8>
   12d68:	vorr	d0, d16, d16
   12d6c:	bx	lr
   12d70:	mov	r1, #1
   12d74:	eor	r0, r1, r0, lsr #31
   12d78:	bx	lr
   12d7c:	push	{r4, sl, fp, lr}
   12d80:	add	fp, sp, #8
   12d84:	mov	r4, r0
   12d88:	bic	r3, r2, #-2147483648	; 0x80000000
   12d8c:	cmp	r2, #0
   12d90:	blt	12dac <__assert_fail@plt+0x172c>
   12d94:	movw	r2, #52791	; 0xce37
   12d98:	movt	r2, #1
   12d9c:	mov	r0, r4
   12da0:	bl	11548 <snprintf@plt>
   12da4:	mov	r0, r4
   12da8:	pop	{r4, sl, fp, pc}
   12dac:	movw	r2, #52649	; 0xcda9
   12db0:	movt	r2, #1
   12db4:	mov	r0, r4
   12db8:	bl	11548 <snprintf@plt>
   12dbc:	mov	r0, r4
   12dc0:	pop	{r4, sl, fp, pc}
   12dc4:	push	{r4, r5, fp, lr}
   12dc8:	add	fp, sp, #8
   12dcc:	mov	r4, r0
   12dd0:	ldr	r0, [r0, #80]	; 0x50
   12dd4:	cmp	r0, #0
   12dd8:	bne	12e00 <__assert_fail@plt+0x1780>
   12ddc:	cmp	r1, #0
   12de0:	ldr	r1, [r4, #56]	; 0x38
   12de4:	mov	r0, #80	; 0x50
   12de8:	movwne	r0, #8
   12dec:	add	r0, r1, r0
   12df0:	bl	1ab84 <argp_parse@@Base+0x2140>
   12df4:	cmp	r0, #0
   12df8:	str	r0, [r4, #80]	; 0x50
   12dfc:	beq	12e44 <__assert_fail@plt+0x17c4>
   12e00:	ldr	r0, [r4, #76]	; 0x4c
   12e04:	mov	r5, #0
   12e08:	cmp	r0, #0
   12e0c:	beq	12e18 <__assert_fail@plt+0x1798>
   12e10:	mov	r0, r5
   12e14:	pop	{r4, r5, fp, pc}
   12e18:	ldr	r0, [r4, #72]	; 0x48
   12e1c:	bl	1ab84 <argp_parse@@Base+0x2140>
   12e20:	cmp	r0, #0
   12e24:	str	r0, [r4, #76]	; 0x4c
   12e28:	beq	12e44 <__assert_fail@plt+0x17c4>
   12e2c:	ldr	r2, [r4, #72]	; 0x48
   12e30:	mov	r1, #0
   12e34:	mov	r5, #0
   12e38:	bl	1156c <memset@plt>
   12e3c:	mov	r0, r5
   12e40:	pop	{r4, r5, fp, pc}
   12e44:	mvn	r5, #0
   12e48:	mov	r0, r5
   12e4c:	pop	{r4, r5, fp, pc}
   12e50:	push	{r4, r5, r6, r7, fp, lr}
   12e54:	add	fp, sp, #16
   12e58:	mov	r7, r0
   12e5c:	ldr	r0, [r0, #80]	; 0x50
   12e60:	mov	r4, r3
   12e64:	mov	r6, r2
   12e68:	mov	r5, r1
   12e6c:	cmp	r0, #0
   12e70:	bne	12e9c <__assert_fail@plt+0x181c>
   12e74:	ldr	r0, [fp, #8]
   12e78:	mov	r1, #80	; 0x50
   12e7c:	cmp	r0, #0
   12e80:	ldr	r0, [r7, #56]	; 0x38
   12e84:	movwne	r1, #8
   12e88:	add	r0, r0, r1
   12e8c:	bl	1ab84 <argp_parse@@Base+0x2140>
   12e90:	cmp	r0, #0
   12e94:	str	r0, [r7, #80]	; 0x50
   12e98:	beq	12efc <__assert_fail@plt+0x187c>
   12e9c:	ldr	r0, [r7, #76]	; 0x4c
   12ea0:	cmp	r0, #0
   12ea4:	bne	12ec8 <__assert_fail@plt+0x1848>
   12ea8:	ldr	r0, [r7, #72]	; 0x48
   12eac:	bl	1ab84 <argp_parse@@Base+0x2140>
   12eb0:	cmp	r0, #0
   12eb4:	str	r0, [r7, #76]	; 0x4c
   12eb8:	beq	12efc <__assert_fail@plt+0x187c>
   12ebc:	ldr	r2, [r7, #72]	; 0x48
   12ec0:	mov	r1, #0
   12ec4:	bl	1156c <memset@plt>
   12ec8:	ldr	r2, [r7, #56]	; 0x38
   12ecc:	add	r1, r4, r6
   12ed0:	mvn	r0, #0
   12ed4:	cmp	r2, r1
   12ed8:	popcc	{r4, r5, r6, r7, fp, pc}
   12edc:	ldr	r0, [r7, #80]	; 0x50
   12ee0:	mov	r1, r5
   12ee4:	mov	r2, r4
   12ee8:	add	r0, r0, r6
   12eec:	add	r0, r0, #8
   12ef0:	bl	113d4 <memcpy@plt>
   12ef4:	mov	r0, #0
   12ef8:	pop	{r4, r5, r6, r7, fp, pc}
   12efc:	mvn	r0, #0
   12f00:	pop	{r4, r5, r6, r7, fp, pc}
   12f04:	str	r1, [r0, #8]
   12f08:	bx	lr
   12f0c:	push	{fp, lr}
   12f10:	mov	fp, sp
   12f14:	sub	sp, sp, #8
   12f18:	str	r2, [sp, #4]
   12f1c:	mov	ip, r1
   12f20:	mov	r1, #1
   12f24:	ldr	r0, [r0]
   12f28:	str	r3, [sp]
   12f2c:	add	r3, sp, #4
   12f30:	mov	r2, ip
   12f34:	bl	1135c <setsockopt@plt>
   12f38:	mov	sp, fp
   12f3c:	pop	{fp, pc}
   12f40:	str	r1, [r0, #20]
   12f44:	bx	lr
   12f48:	push	{r4, sl, fp, lr}
   12f4c:	add	fp, sp, #8
   12f50:	mov	r4, r0
   12f54:	ldr	r0, [r0, #80]	; 0x50
   12f58:	cmp	r0, #0
   12f5c:	beq	12f6c <__assert_fail@plt+0x18ec>
   12f60:	bl	19df4 <argp_parse@@Base+0x13b0>
   12f64:	mov	r0, #0
   12f68:	str	r0, [r4, #80]	; 0x50
   12f6c:	ldr	r0, [r4, #76]	; 0x4c
   12f70:	cmp	r0, #0
   12f74:	popeq	{r4, sl, fp, pc}
   12f78:	bl	19df4 <argp_parse@@Base+0x13b0>
   12f7c:	mov	r0, #0
   12f80:	str	r0, [r4, #76]	; 0x4c
   12f84:	pop	{r4, sl, fp, pc}
   12f88:	push	{r4, r5, fp, lr}
   12f8c:	add	fp, sp, #8
   12f90:	sub	sp, sp, #8
   12f94:	mov	r4, r1
   12f98:	mov	r5, r0
   12f9c:	mov	r0, sp
   12fa0:	mov	r1, #0
   12fa4:	bl	1147c <gettimeofday@plt>
   12fa8:	cmn	r4, #1
   12fac:	beq	12ffc <__assert_fail@plt+0x197c>
   12fb0:	ldr	r1, [r5, #4]
   12fb4:	ldm	sp, {r0, r2}
   12fb8:	sub	r1, r2, r1
   12fbc:	cmn	r1, #1
   12fc0:	str	r1, [sp, #4]
   12fc4:	bgt	12fdc <__assert_fail@plt+0x195c>
   12fc8:	add	r1, r1, #576	; 0x240
   12fcc:	sub	r0, r0, #1
   12fd0:	add	r1, r1, #999424	; 0xf4000
   12fd4:	str	r1, [sp, #4]
   12fd8:	str	r0, [sp]
   12fdc:	ldr	r1, [r5]
   12fe0:	sub	r1, r0, r1
   12fe4:	mov	r0, #1
   12fe8:	cmp	r1, r4
   12fec:	str	r1, [sp]
   12ff0:	movlt	r0, #0
   12ff4:	sub	sp, fp, #8
   12ff8:	pop	{r4, r5, fp, pc}
   12ffc:	mov	r0, #0
   13000:	sub	sp, fp, #8
   13004:	pop	{r4, r5, fp, pc}
   13008:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1300c:	add	fp, sp, #24
   13010:	sub	sp, sp, #320	; 0x140
   13014:	mov	r5, r1
   13018:	mov	r1, #0
   1301c:	mov	r6, r0
   13020:	mov	r0, #1
   13024:	sub	r4, fp, #70	; 0x46
   13028:	mov	r3, #46	; 0x2e
   1302c:	str	r0, [sp, #8]
   13030:	str	r1, [sp]
   13034:	str	r1, [sp, #4]
   13038:	mov	r0, r6
   1303c:	mov	r1, r5
   13040:	mov	r2, r4
   13044:	bl	115c0 <getnameinfo@plt>
   13048:	cmp	r0, #0
   1304c:	bne	130fc <__assert_fail@plt+0x1a7c>
   13050:	movw	r0, #63172	; 0xf6c4
   13054:	movt	r0, #2
   13058:	ldrb	r0, [r0]
   1305c:	tst	r0, #4
   13060:	bne	13094 <__assert_fail@plt+0x1a14>
   13064:	mov	r1, #0
   13068:	mov	r0, #40	; 0x28
   1306c:	add	r2, sp, #18
   13070:	mov	r3, #256	; 0x100
   13074:	str	r0, [sp, #8]
   13078:	str	r1, [sp]
   1307c:	str	r1, [sp, #4]
   13080:	mov	r0, r6
   13084:	mov	r1, r5
   13088:	bl	115c0 <getnameinfo@plt>
   1308c:	cmp	r0, #0
   13090:	beq	130ac <__assert_fail@plt+0x1a2c>
   13094:	sub	r0, fp, #70	; 0x46
   13098:	bl	1aac0 <argp_parse@@Base+0x207c>
   1309c:	mov	r5, r0
   130a0:	mov	r0, r5
   130a4:	sub	sp, fp, #24
   130a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130ac:	mov	r0, r4
   130b0:	bl	11518 <strlen@plt>
   130b4:	add	r6, sp, #18
   130b8:	mov	r5, r0
   130bc:	mov	r0, r6
   130c0:	bl	11518 <strlen@plt>
   130c4:	add	r0, r5, r0
   130c8:	add	r7, r0, #4
   130cc:	mov	r0, r7
   130d0:	bl	1a5a0 <argp_parse@@Base+0x1b5c>
   130d4:	movw	r2, #52685	; 0xcdcd
   130d8:	mov	r1, r7
   130dc:	mov	r3, r6
   130e0:	mov	r5, r0
   130e4:	str	r4, [sp]
   130e8:	movt	r2, #1
   130ec:	bl	11548 <snprintf@plt>
   130f0:	mov	r0, r5
   130f4:	sub	sp, fp, #24
   130f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130fc:	cmn	r0, #11
   13100:	bne	13114 <__assert_fail@plt+0x1a94>
   13104:	bl	1153c <__errno_location@plt>
   13108:	ldr	r0, [r0]
   1310c:	bl	114c4 <strerror@plt>
   13110:	b	13118 <__assert_fail@plt+0x1a98>
   13114:	bl	113bc <gai_strerror@plt>
   13118:	mov	r2, r0
   1311c:	movw	r0, #63032	; 0xf638
   13120:	movw	r1, #52654	; 0xcdae
   13124:	movt	r0, #2
   13128:	movt	r1, #1
   1312c:	ldr	r0, [r0]
   13130:	bl	11530 <fprintf@plt>
   13134:	movw	r0, #52677	; 0xcdc5
   13138:	movt	r0, #1
   1313c:	b	13098 <__assert_fail@plt+0x1a18>
   13140:	push	{r4, r5, r6, r7, fp, lr}
   13144:	add	fp, sp, #16
   13148:	sub	sp, sp, #8
   1314c:	movw	r1, #63172	; 0xf6c4
   13150:	str	r0, [sp, #4]
   13154:	movt	r1, #2
   13158:	ldrb	r1, [r1]
   1315c:	tst	r1, #4
   13160:	bne	131b4 <__assert_fail@plt+0x1b34>
   13164:	add	r0, sp, #4
   13168:	mov	r1, #4
   1316c:	mov	r2, #2
   13170:	bl	11428 <gethostbyaddr@plt>
   13174:	mov	r5, r0
   13178:	ldr	r0, [sp, #4]
   1317c:	bl	11404 <inet_ntoa@plt>
   13180:	mov	r4, r0
   13184:	cmp	r5, #0
   13188:	beq	131c4 <__assert_fail@plt+0x1b44>
   1318c:	mov	r0, r4
   13190:	bl	11518 <strlen@plt>
   13194:	mov	r6, r0
   13198:	ldr	r0, [r5]
   1319c:	cmp	r0, #0
   131a0:	beq	131dc <__assert_fail@plt+0x1b5c>
   131a4:	bl	11518 <strlen@plt>
   131a8:	add	r0, r6, r0
   131ac:	add	r7, r0, #5
   131b0:	b	131e0 <__assert_fail@plt+0x1b60>
   131b4:	bl	11404 <inet_ntoa@plt>
   131b8:	sub	sp, fp, #16
   131bc:	pop	{r4, r5, r6, r7, fp, lr}
   131c0:	b	1aac0 <argp_parse@@Base+0x207c>
   131c4:	mov	r0, r4
   131c8:	bl	1aac0 <argp_parse@@Base+0x207c>
   131cc:	mov	r6, r0
   131d0:	mov	r0, r6
   131d4:	sub	sp, fp, #16
   131d8:	pop	{r4, r5, r6, r7, fp, pc}
   131dc:	add	r7, r6, #1
   131e0:	mov	r0, r7
   131e4:	bl	1a5a0 <argp_parse@@Base+0x1b5c>
   131e8:	ldr	r3, [r5]
   131ec:	mov	r6, r0
   131f0:	cmp	r3, #0
   131f4:	beq	1321c <__assert_fail@plt+0x1b9c>
   131f8:	movw	r2, #52685	; 0xcdcd
   131fc:	str	r4, [sp]
   13200:	mov	r0, r6
   13204:	mov	r1, r7
   13208:	movt	r2, #1
   1320c:	bl	11548 <snprintf@plt>
   13210:	mov	r0, r6
   13214:	sub	sp, fp, #16
   13218:	pop	{r4, r5, r6, r7, fp, pc}
   1321c:	movw	r2, #53919	; 0xd29f
   13220:	mov	r0, r6
   13224:	mov	r1, r7
   13228:	mov	r3, r4
   1322c:	movt	r2, #1
   13230:	bl	11548 <snprintf@plt>
   13234:	mov	r0, r6
   13238:	sub	sp, fp, #16
   1323c:	pop	{r4, r5, r6, r7, fp, pc}
   13240:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13244:	add	fp, sp, #24
   13248:	sub	sp, sp, #80	; 0x50
   1324c:	movw	r7, #63172	; 0xf6c4
   13250:	mov	r4, r0
   13254:	movt	r7, #2
   13258:	ldr	r0, [r7]
   1325c:	and	r0, r0, #3
   13260:	cmp	r0, #3
   13264:	bne	1327c <__assert_fail@plt+0x1bfc>
   13268:	movw	r2, #52693	; 0xcdd5
   1326c:	mov	r0, #1
   13270:	mov	r1, #0
   13274:	movt	r2, #1
   13278:	bl	11488 <error@plt>
   1327c:	add	r5, sp, #8
   13280:	vmov.i32	q8, #0	; 0x00000000
   13284:	movw	r6, #63180	; 0xf6cc
   13288:	mov	r1, #8
   1328c:	add	r0, r5, #8
   13290:	movt	r6, #2
   13294:	vst1.64	{d16-d17}, [r0]
   13298:	mov	r0, #0
   1329c:	str	r0, [sp, #36]	; 0x24
   132a0:	str	r0, [sp, #32]
   132a4:	movw	r0, #52580	; 0xcd64
   132a8:	movt	r0, #16845	; 0x41cd
   132ac:	str	r0, [sp, #12]
   132b0:	movw	r0, #0
   132b4:	movt	r0, #65408	; 0xff80
   132b8:	str	r0, [sp, #8]
   132bc:	ldr	r0, [r6]
   132c0:	bl	14944 <__assert_fail@plt+0x32c4>
   132c4:	movw	r8, #62412	; 0xf3cc
   132c8:	ldr	r0, [r6]
   132cc:	movt	r8, #2
   132d0:	ldr	r1, [r8]
   132d4:	bl	14d2c <__assert_fail@plt+0x36ac>
   132d8:	ldr	r0, [r6]
   132dc:	movw	r1, #13496	; 0x34b8
   132e0:	mov	r2, r5
   132e4:	movt	r1, #1
   132e8:	bl	14d20 <__assert_fail@plt+0x36a0>
   132ec:	ldr	r0, [r6]
   132f0:	mov	r1, r4
   132f4:	bl	14d34 <__assert_fail@plt+0x36b4>
   132f8:	cmp	r0, #0
   132fc:	beq	13314 <__assert_fail@plt+0x1c94>
   13300:	movw	r2, #52724	; 0xcdf4
   13304:	mov	r0, #1
   13308:	mov	r1, #0
   1330c:	movt	r2, #1
   13310:	bl	11488 <error@plt>
   13314:	ldr	r0, [r7]
   13318:	tst	r0, #16
   1331c:	bne	13374 <__assert_fail@plt+0x1cf4>
   13320:	tst	r0, #64	; 0x40
   13324:	beq	1342c <__assert_fail@plt+0x1dac>
   13328:	movw	r0, #63184	; 0xf6d0
   1332c:	movt	r0, #2
   13330:	ldr	r1, [r0]
   13334:	mov	r0, #3
   13338:	tst	r1, #4
   1333c:	moveq	r0, #1
   13340:	tsteq	r1, #2
   13344:	beq	133b0 <__assert_fail@plt+0x1d30>
   13348:	add	r1, sp, #40	; 0x28
   1334c:	vmov.i32	q8, #0	; 0x00000000
   13350:	add	r2, r1, #17
   13354:	add	r1, r1, #1
   13358:	vst1.8	{d16-d17}, [r1]
   1335c:	mov	r1, #0
   13360:	vst1.8	{d16-d17}, [r2]
   13364:	str	r1, [sp, #76]	; 0x4c
   13368:	str	r1, [sp, #72]	; 0x48
   1336c:	mov	r1, #36	; 0x24
   13370:	b	133d8 <__assert_fail@plt+0x1d58>
   13374:	add	r3, sp, #40	; 0x28
   13378:	vmov.i32	q8, #0	; 0x00000000
   1337c:	mov	r1, #40	; 0x28
   13380:	add	r0, r3, #19
   13384:	vst1.8	{d16-d17}, [r0]
   13388:	add	r0, r3, #3
   1338c:	vst1.8	{d16-d17}, [r0]
   13390:	mov	r0, #0
   13394:	str	r0, [sp, #76]	; 0x4c
   13398:	str	r0, [sp, #72]	; 0x48
   1339c:	movw	r0, #9991	; 0x2707
   133a0:	strh	r0, [sp, #40]	; 0x28
   133a4:	mov	r0, #4
   133a8:	strb	r0, [sp, #42]	; 0x2a
   133ac:	b	133f4 <__assert_fail@plt+0x1d74>
   133b0:	add	r0, sp, #40	; 0x28
   133b4:	vmov.i32	q8, #0	; 0x00000000
   133b8:	add	r1, r0, #17
   133bc:	add	r0, r0, #1
   133c0:	vst1.8	{d16-d17}, [r1]
   133c4:	vst1.8	{d16-d17}, [r0]
   133c8:	mov	r0, #0
   133cc:	mov	r1, #40	; 0x28
   133d0:	str	r0, [sp, #76]	; 0x4c
   133d4:	str	r0, [sp, #72]	; 0x48
   133d8:	mov	r2, #68	; 0x44
   133dc:	strb	r1, [sp, #41]	; 0x29
   133e0:	add	r3, sp, #40	; 0x28
   133e4:	strb	r2, [sp, #40]	; 0x28
   133e8:	mov	r2, #5
   133ec:	strb	r2, [sp, #42]	; 0x2a
   133f0:	strb	r0, [sp, #43]	; 0x2b
   133f4:	ldr	r0, [r6]
   133f8:	ldr	r0, [r0]
   133fc:	str	r1, [sp]
   13400:	mov	r1, #0
   13404:	mov	r2, #4
   13408:	bl	1135c <setsockopt@plt>
   1340c:	cmn	r0, #1
   13410:	bgt	1342c <__assert_fail@plt+0x1dac>
   13414:	bl	1153c <__errno_location@plt>
   13418:	ldr	r1, [r0]
   1341c:	movw	r2, #52737	; 0xce01
   13420:	mov	r0, #1
   13424:	movt	r2, #1
   13428:	bl	11488 <error@plt>
   1342c:	ldr	r1, [r6]
   13430:	ldr	r0, [r1, #28]
   13434:	ldr	r4, [r1, #52]	; 0x34
   13438:	bl	11404 <inet_ntoa@plt>
   1343c:	ldr	r3, [r8]
   13440:	mov	r2, r0
   13444:	movw	r0, #52748	; 0xce0c
   13448:	mov	r1, r4
   1344c:	movt	r0, #1
   13450:	bl	11368 <printf@plt>
   13454:	ldrb	r0, [r7]
   13458:	tst	r0, #32
   1345c:	beq	13478 <__assert_fail@plt+0x1df8>
   13460:	ldr	r0, [r6]
   13464:	ldr	r1, [r0, #60]	; 0x3c
   13468:	movw	r0, #52777	; 0xce29
   1346c:	movt	r0, #1
   13470:	mov	r2, r1
   13474:	bl	11368 <printf@plt>
   13478:	movw	r0, #63036	; 0xf63c
   1347c:	movt	r0, #2
   13480:	ldr	r1, [r0]
   13484:	mov	r0, #10
   13488:	bl	11608 <putc@plt>
   1348c:	ldr	r0, [r6]
   13490:	movw	r1, #13600	; 0x3520
   13494:	movt	r1, #1
   13498:	bl	11ad8 <__assert_fail@plt+0x458>
   1349c:	mov	r4, r0
   134a0:	ldr	r0, [r6]
   134a4:	ldr	r0, [r0, #52]	; 0x34
   134a8:	bl	19df4 <argp_parse@@Base+0x13b0>
   134ac:	mov	r0, r4
   134b0:	sub	sp, fp, #24
   134b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134b8:	push	{fp, lr}
   134bc:	mov	fp, sp
   134c0:	sub	sp, sp, #16
   134c4:	ldr	ip, [fp, #16]
   134c8:	ldr	r2, [fp, #12]
   134cc:	ldr	lr, [fp, #8]
   134d0:	cmp	r0, #2
   134d4:	bcs	134fc <__assert_fail@plt+0x1e7c>
   134d8:	sub	r0, r0, #1
   134dc:	str	lr, [sp]
   134e0:	stmib	sp, {r2, ip}
   134e4:	clz	r0, r0
   134e8:	lsr	r0, r0, #5
   134ec:	bl	135d8 <__assert_fail@plt+0x1f58>
   134f0:	mov	r0, #0
   134f4:	mov	sp, fp
   134f8:	pop	{fp, pc}
   134fc:	bne	13510 <__assert_fail@plt+0x1e90>
   13500:	mov	r0, r3
   13504:	mov	r1, lr
   13508:	mov	r3, ip
   1350c:	bl	14254 <__assert_fail@plt+0x2bd4>
   13510:	mov	r0, #0
   13514:	mov	sp, fp
   13518:	pop	{fp, pc}
   1351c:	nop	{0}
   13520:	push	{r4, sl, fp, lr}
   13524:	add	fp, sp, #8
   13528:	vpush	{d8-d10}
   1352c:	sub	sp, sp, #24
   13530:	bl	11fdc <__assert_fail@plt+0x95c>
   13534:	movw	r4, #63180	; 0xf6cc
   13538:	movt	r4, #2
   1353c:	ldr	r1, [r4]
   13540:	ldr	r0, [r1, #116]	; 0x74
   13544:	cmp	r0, #0
   13548:	beq	135b8 <__assert_fail@plt+0x1f38>
   1354c:	movw	r2, #62412	; 0xf3cc
   13550:	movt	r2, #2
   13554:	ldr	r2, [r2]
   13558:	cmp	r2, #8
   1355c:	bcc	135b8 <__assert_fail@plt+0x1f38>
   13560:	ldr	r2, [r1, #68]	; 0x44
   13564:	ldr	r1, [r1, #120]	; 0x78
   13568:	vldr	d1, [pc, #96]	; 135d0 <__assert_fail@plt+0x1f50>
   1356c:	vldmia	r2, {d8-d9}
   13570:	vldr	d16, [r2, #16]
   13574:	vldr	d17, [r2, #24]
   13578:	add	r0, r1, r0
   1357c:	vmov	s0, r0
   13580:	vcvt.f64.u32	d18, s0
   13584:	vdiv.f64	d10, d16, d18
   13588:	vdiv.f64	d0, d17, d18
   1358c:	vmls.f64	d0, d10, d10
   13590:	bl	12d18 <__assert_fail@plt+0x1698>
   13594:	movw	r0, #54033	; 0xd311
   13598:	vmov	r2, r3, d8
   1359c:	vstr	d10, [sp]
   135a0:	vstr	d9, [sp, #8]
   135a4:	vstr	d0, [sp, #16]
   135a8:	movt	r0, #1
   135ac:	bl	11368 <printf@plt>
   135b0:	ldr	r0, [r4]
   135b4:	ldr	r0, [r0, #116]	; 0x74
   135b8:	clz	r0, r0
   135bc:	lsr	r0, r0, #5
   135c0:	sub	sp, fp, #32
   135c4:	vpop	{d8-d10}
   135c8:	pop	{r4, sl, fp, pc}
   135cc:	nop	{0}
   135d0:	rscsle	sl, r1, #252, 18	; 0x3f0000
   135d4:	svccc	0x0040624d
   135d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135dc:	add	fp, sp, #28
   135e0:	sub	sp, sp, #4
   135e4:	vpush	{d8}
   135e8:	sub	sp, sp, #48	; 0x30
   135ec:	mov	r7, r1
   135f0:	mov	r8, r0
   135f4:	add	r0, sp, #24
   135f8:	mov	r1, #0
   135fc:	mov	r9, r3
   13600:	mov	r4, #0
   13604:	bl	1147c <gettimeofday@plt>
   13608:	ldr	r0, [fp, #8]
   1360c:	mov	r1, #60	; 0x3c
   13610:	ldr	r5, [fp, #12]
   13614:	vmov.i32	d8, #0	; 0x00000000
   13618:	ldrb	r0, [r0]
   1361c:	and	sl, r1, r0, lsl #2
   13620:	ldr	r0, [fp, #16]
   13624:	sub	r6, r0, sl
   13628:	bic	r0, r6, #7
   1362c:	cmp	r0, #8
   13630:	beq	136a8 <__assert_fail@plt+0x2028>
   13634:	ldr	r0, [r5, #8]
   13638:	ldr	r1, [r5, #12]
   1363c:	str	r1, [sp, #36]	; 0x24
   13640:	str	r0, [sp, #32]
   13644:	add	r0, sp, #24
   13648:	add	r1, sp, #32
   1364c:	bl	12cb4 <__assert_fail@plt+0x1634>
   13650:	vldr	s2, [sp, #28]
   13654:	vldr	s0, [sp, #24]
   13658:	vldr	d16, [pc, #992]	; 13a40 <__assert_fail@plt+0x23c0>
   1365c:	vldr	d17, [r7]
   13660:	vldr	d18, [r7, #16]
   13664:	vldr	d19, [r7, #24]
   13668:	mov	r4, #1
   1366c:	vcvt.f64.s32	d20, s2
   13670:	vcvt.f64.s32	d21, s0
   13674:	vdiv.f64	d8, d20, d16
   13678:	vmla.f64	d8, d21, d16
   1367c:	vcmpe.f64	d8, d17
   13680:	vadd.f64	d16, d18, d8
   13684:	vmla.f64	d19, d8, d8
   13688:	vmrs	APSR_nzcv, fpscr
   1368c:	vstr	d16, [r7, #16]
   13690:	vstr	d19, [r7, #24]
   13694:	vstrmi	d8, [r7]
   13698:	vldr	d16, [r7, #8]
   1369c:	vcmpe.f64	d8, d16
   136a0:	vmrs	APSR_nzcv, fpscr
   136a4:	vstrgt	d8, [r7, #8]
   136a8:	movw	r7, #63172	; 0xf6c4
   136ac:	movt	r7, #2
   136b0:	ldr	r0, [r7]
   136b4:	tst	r0, #8
   136b8:	bne	13c44 <__assert_fail@plt+0x25c4>
   136bc:	tst	r0, #1
   136c0:	bne	13c1c <__assert_fail@plt+0x259c>
   136c4:	ldr	r0, [r9, #4]
   136c8:	bl	11404 <inet_ntoa@plt>
   136cc:	mov	r2, r0
   136d0:	ldrh	r0, [r5, #6]
   136d4:	mov	r1, r6
   136d8:	rev16	r3, r0
   136dc:	movw	r0, #52794	; 0xce3a
   136e0:	movt	r0, #1
   136e4:	bl	11368 <printf@plt>
   136e8:	ldr	r0, [fp, #8]
   136ec:	ldrb	r1, [r0, #8]
   136f0:	movw	r0, #52824	; 0xce58
   136f4:	movt	r0, #1
   136f8:	bl	11368 <printf@plt>
   136fc:	cmp	r4, #0
   13700:	beq	13714 <__assert_fail@plt+0x2094>
   13704:	movw	r0, #52832	; 0xce60
   13708:	vmov	r2, r3, d8
   1370c:	movt	r0, #1
   13710:	bl	11368 <printf@plt>
   13714:	cmp	r8, #0
   13718:	beq	13728 <__assert_fail@plt+0x20a8>
   1371c:	movw	r0, #52846	; 0xce6e
   13720:	movt	r0, #1
   13724:	bl	11368 <printf@plt>
   13728:	cmp	sl, #21
   1372c:	bcc	13c30 <__assert_fail@plt+0x25b0>
   13730:	ldr	r0, [fp, #8]
   13734:	mov	r8, #0
   13738:	add	r4, r0, #20
   1373c:	add	r0, r0, #24
   13740:	str	r0, [sp, #4]
   13744:	mov	r0, r4
   13748:	str	r4, [sp, #20]
   1374c:	ldrb	r1, [r4, r8]
   13750:	cmp	r1, #67	; 0x43
   13754:	ble	13848 <__assert_fail@plt+0x21c8>
   13758:	cmp	r1, #68	; 0x44
   1375c:	beq	13880 <__assert_fail@plt+0x2200>
   13760:	cmp	r1, #137	; 0x89
   13764:	cmpne	r1, #131	; 0x83
   13768:	bne	138d0 <__assert_fail@plt+0x2250>
   1376c:	movw	r0, #53900	; 0xd28c
   13770:	cmp	r1, #131	; 0x83
   13774:	mov	r1, #83	; 0x53
   13778:	movweq	r1, #76	; 0x4c
   1377c:	movt	r0, #1
   13780:	bl	11368 <printf@plt>
   13784:	add	r0, r4, r8
   13788:	ldrb	r6, [r0, #1]
   1378c:	cmp	r6, #5
   13790:	bcc	138a8 <__assert_fail@plt+0x2228>
   13794:	ldr	r0, [fp, #8]
   13798:	mov	r7, #0
   1379c:	add	r9, r0, r8
   137a0:	mvn	r0, r6
   137a4:	cmn	r0, #9
   137a8:	mvnls	r0, #8
   137ac:	add	r0, r6, r0
   137b0:	add	r0, r0, #4
   137b4:	bic	r0, r0, #3
   137b8:	str	r0, [sp, #16]
   137bc:	b	137d8 <__assert_fail@plt+0x2158>
   137c0:	movw	r0, #63036	; 0xf63c
   137c4:	movt	r0, #2
   137c8:	ldr	r1, [r0]
   137cc:	mov	r0, #10
   137d0:	bl	11608 <putc@plt>
   137d4:	sub	r7, r7, #4
   137d8:	sub	r0, r9, r7
   137dc:	add	r5, r6, r7
   137e0:	ldr	r0, [r0, #23]
   137e4:	rev	r0, r0
   137e8:	cmp	r0, #0
   137ec:	beq	13820 <__assert_fail@plt+0x21a0>
   137f0:	rev	r0, r0
   137f4:	bl	13140 <__assert_fail@plt+0x1ac0>
   137f8:	mov	r4, r0
   137fc:	movw	r0, #53918	; 0xd29e
   13800:	movt	r0, #1
   13804:	mov	r1, r4
   13808:	bl	11368 <printf@plt>
   1380c:	mov	r0, r4
   13810:	bl	19df4 <argp_parse@@Base+0x13b0>
   13814:	cmp	r5, #9
   13818:	bge	137c0 <__assert_fail@plt+0x2140>
   1381c:	b	13834 <__assert_fail@plt+0x21b4>
   13820:	movw	r0, #53909	; 0xd295
   13824:	movt	r0, #1
   13828:	bl	11368 <printf@plt>
   1382c:	cmp	r5, #9
   13830:	bge	137c0 <__assert_fail@plt+0x2140>
   13834:	ldr	r1, [sp, #16]
   13838:	sub	r0, sl, #6
   1383c:	sub	r9, r0, r1
   13840:	add	r0, r8, r1
   13844:	b	13ae4 <__assert_fail@plt+0x2464>
   13848:	cmp	r1, #1
   1384c:	beq	138b4 <__assert_fail@plt+0x2234>
   13850:	cmp	r1, #7
   13854:	bne	138c8 <__assert_fail@plt+0x2248>
   13858:	add	r5, r8, #2
   1385c:	ldrb	r0, [r0, #1]
   13860:	sub	r9, sl, #2
   13864:	ldrb	r7, [r4, r5]!
   13868:	cmp	r7, r0
   1386c:	movhi	r7, r0
   13870:	cmp	r7, #5
   13874:	bcs	138e4 <__assert_fail@plt+0x2264>
   13878:	mov	r8, r5
   1387c:	b	13ae8 <__assert_fail@plt+0x2468>
   13880:	add	r1, r8, #2
   13884:	ldrb	r2, [r0, #1]
   13888:	ldrb	r6, [r4, r1]
   1388c:	cmp	r6, r2
   13890:	movhi	r6, r2
   13894:	cmp	r2, #9
   13898:	bcs	13924 <__assert_fail@plt+0x22a4>
   1389c:	sub	r9, sl, #2
   138a0:	mov	r8, r1
   138a4:	b	13af4 <__assert_fail@plt+0x2474>
   138a8:	add	r8, r8, #2
   138ac:	sub	r9, sl, #2
   138b0:	b	13af4 <__assert_fail@plt+0x2474>
   138b4:	movw	r0, #54009	; 0xd2f9
   138b8:	movt	r0, #1
   138bc:	bl	11368 <printf@plt>
   138c0:	mov	r9, sl
   138c4:	b	13af4 <__assert_fail@plt+0x2474>
   138c8:	cmp	r1, #0
   138cc:	beq	13c30 <__assert_fail@plt+0x25b0>
   138d0:	movw	r0, #54014	; 0xd2fe
   138d4:	movt	r0, #1
   138d8:	bl	11368 <printf@plt>
   138dc:	mov	r9, sl
   138e0:	b	13af4 <__assert_fail@plt+0x2474>
   138e4:	cmp	r8, #0
   138e8:	sub	r6, r7, #4
   138ec:	movweq	r0, #63060	; 0xf654
   138f0:	movteq	r0, #2
   138f4:	ldreq	r0, [r0]
   138f8:	cmpeq	r6, r0
   138fc:	beq	13bc0 <__assert_fail@plt+0x2540>
   13900:	cmp	r7, #43	; 0x2b
   13904:	bhi	13a10 <__assert_fail@plt+0x2390>
   13908:	movw	r0, #63060	; 0xf654
   1390c:	mov	r1, r4
   13910:	mov	r2, r6
   13914:	movt	r0, #2
   13918:	str	r6, [r0], #4
   1391c:	bl	11398 <memmove@plt>
   13920:	b	13a20 <__assert_fail@plt+0x23a0>
   13924:	ldrb	r4, [r0, #3]
   13928:	movw	r0, #53963	; 0xd2cb
   1392c:	movt	r0, #1
   13930:	bl	11368 <printf@plt>
   13934:	cmp	r6, #9
   13938:	mov	r0, r6
   1393c:	str	r4, [sp, #16]
   13940:	movls	r0, #9
   13944:	tst	r4, #15
   13948:	sub	r0, r0, #6
   1394c:	bic	r0, r0, #3
   13950:	str	r0, [sp, #12]
   13954:	sub	r0, sl, #8
   13958:	str	r0, [sp, #8]
   1395c:	beq	13b0c <__assert_fail@plt+0x248c>
   13960:	ldr	r0, [sp, #4]
   13964:	mov	r9, #0
   13968:	add	sl, sp, #32
   1396c:	add	r5, r0, r8
   13970:	ldr	r0, [r5, r9]
   13974:	add	r1, r9, #5
   13978:	tst	r1, #4
   1397c:	bne	139d8 <__assert_fail@plt+0x2358>
   13980:	rev	r2, r0
   13984:	mov	r0, sl
   13988:	mov	r1, #16
   1398c:	bl	12d7c <__assert_fail@plt+0x16fc>
   13990:	mov	r1, r0
   13994:	movw	r0, #53968	; 0xd2d0
   13998:	movt	r0, #1
   1399c:	bl	11368 <printf@plt>
   139a0:	ldrb	r0, [r7]
   139a4:	tst	r0, #32
   139a8:	beq	139c0 <__assert_fail@plt+0x2340>
   139ac:	ldr	r0, [r5, r9]
   139b0:	rev	r1, r0
   139b4:	movw	r0, #53975	; 0xd2d7
   139b8:	movt	r0, #1
   139bc:	bl	11368 <printf@plt>
   139c0:	movw	r0, #63036	; 0xf63c
   139c4:	movt	r0, #2
   139c8:	ldr	r1, [r0]
   139cc:	mov	r0, #10
   139d0:	bl	11608 <putc@plt>
   139d4:	b	139f8 <__assert_fail@plt+0x2378>
   139d8:	bl	13140 <__assert_fail@plt+0x1ac0>
   139dc:	mov	r4, r0
   139e0:	movw	r0, #53918	; 0xd29e
   139e4:	movt	r0, #1
   139e8:	mov	r1, r4
   139ec:	bl	11368 <printf@plt>
   139f0:	mov	r0, r4
   139f4:	bl	19df4 <argp_parse@@Base+0x13b0>
   139f8:	add	r1, r9, #9
   139fc:	add	r0, r9, #4
   13a00:	cmp	r1, r6
   13a04:	mov	r9, r0
   13a08:	bcc	13970 <__assert_fail@plt+0x22f0>
   13a0c:	b	13b88 <__assert_fail@plt+0x2508>
   13a10:	movw	r1, #63060	; 0xf654
   13a14:	mov	r0, #0
   13a18:	movt	r1, #2
   13a1c:	str	r0, [r1]
   13a20:	movw	r0, #53937	; 0xd2b1
   13a24:	movt	r0, #1
   13a28:	bl	11368 <printf@plt>
   13a2c:	ldr	r0, [fp, #8]
   13a30:	mov	r7, #0
   13a34:	add	r5, r0, r8
   13a38:	b	13a64 <__assert_fail@plt+0x23e4>
   13a3c:	nop	{0}
   13a40:	andeq	r0, r0, r0
   13a44:	addmi	r4, pc, r0
   13a48:	movw	r0, #63036	; 0xf63c
   13a4c:	sub	r6, r6, #4
   13a50:	movt	r0, #2
   13a54:	ldr	r1, [r0]
   13a58:	mov	r0, #10
   13a5c:	bl	11608 <putc@plt>
   13a60:	mov	r7, r4
   13a64:	add	r0, r5, r7
   13a68:	ldr	r0, [r0, #23]
   13a6c:	rev	r0, r0
   13a70:	cmp	r0, #0
   13a74:	beq	13ab4 <__assert_fail@plt+0x2434>
   13a78:	rev	r0, r0
   13a7c:	bl	13140 <__assert_fail@plt+0x1ac0>
   13a80:	mov	r4, r0
   13a84:	movw	r0, #53918	; 0xd29e
   13a88:	movt	r0, #1
   13a8c:	mov	r1, r4
   13a90:	bl	11368 <printf@plt>
   13a94:	mov	r0, r4
   13a98:	bl	19df4 <argp_parse@@Base+0x13b0>
   13a9c:	cmp	r6, #5
   13aa0:	blt	13ad8 <__assert_fail@plt+0x2458>
   13aa4:	add	r4, r7, #4
   13aa8:	cmp	r4, #40	; 0x28
   13aac:	bcc	13a48 <__assert_fail@plt+0x23c8>
   13ab0:	b	13acc <__assert_fail@plt+0x244c>
   13ab4:	movw	r0, #53909	; 0xd295
   13ab8:	movt	r0, #1
   13abc:	bl	11368 <printf@plt>
   13ac0:	cmp	r6, #5
   13ac4:	bge	13aa4 <__assert_fail@plt+0x2424>
   13ac8:	b	13ad8 <__assert_fail@plt+0x2458>
   13acc:	movw	r0, #53943	; 0xd2b7
   13ad0:	movt	r0, #1
   13ad4:	bl	11368 <printf@plt>
   13ad8:	sub	r0, sl, #6
   13adc:	sub	r9, r0, r7
   13ae0:	add	r0, r8, r7
   13ae4:	add	r8, r0, #6
   13ae8:	ldr	r4, [sp, #20]
   13aec:	movw	r7, #63172	; 0xf6c4
   13af0:	movt	r7, #2
   13af4:	add	r8, r8, #1
   13af8:	sub	sl, r9, #1
   13afc:	cmp	r9, #21
   13b00:	add	r0, r4, r8
   13b04:	bgt	1374c <__assert_fail@plt+0x20cc>
   13b08:	b	13c30 <__assert_fail@plt+0x25b0>
   13b0c:	ldr	r0, [sp, #4]
   13b10:	mov	r5, #0
   13b14:	add	r9, sp, #32
   13b18:	add	r4, r0, r8
   13b1c:	ldr	r0, [r4, r5]
   13b20:	mov	r1, #16
   13b24:	rev	r2, r0
   13b28:	mov	r0, r9
   13b2c:	bl	12d7c <__assert_fail@plt+0x16fc>
   13b30:	mov	r1, r0
   13b34:	movw	r0, #53968	; 0xd2d0
   13b38:	movt	r0, #1
   13b3c:	bl	11368 <printf@plt>
   13b40:	ldrb	r0, [r7]
   13b44:	tst	r0, #32
   13b48:	beq	13b60 <__assert_fail@plt+0x24e0>
   13b4c:	ldr	r0, [r4, r5]
   13b50:	rev	r1, r0
   13b54:	movw	r0, #53975	; 0xd2d7
   13b58:	movt	r0, #1
   13b5c:	bl	11368 <printf@plt>
   13b60:	movw	r0, #63036	; 0xf63c
   13b64:	movt	r0, #2
   13b68:	ldr	r1, [r0]
   13b6c:	mov	r0, #10
   13b70:	bl	11608 <putc@plt>
   13b74:	add	r1, r5, #9
   13b78:	add	r0, r5, #4
   13b7c:	cmp	r1, r6
   13b80:	mov	r5, r0
   13b84:	bcc	13b1c <__assert_fail@plt+0x249c>
   13b88:	ldr	r0, [sp, #12]
   13b8c:	ldr	r1, [sp, #8]
   13b90:	ldr	r4, [sp, #20]
   13b94:	sub	r9, r1, r0
   13b98:	add	r0, r8, r0
   13b9c:	add	r8, r0, #8
   13ba0:	ldr	r0, [sp, #16]
   13ba4:	tst	r0, #240	; 0xf0
   13ba8:	beq	13af4 <__assert_fail@plt+0x2474>
   13bac:	lsr	r1, r0, #4
   13bb0:	movw	r0, #53985	; 0xd2e1
   13bb4:	movt	r0, #1
   13bb8:	bl	11368 <printf@plt>
   13bbc:	b	13af4 <__assert_fail@plt+0x2474>
   13bc0:	movw	r0, #63060	; 0xf654
   13bc4:	mov	r2, r6
   13bc8:	movt	r0, #2
   13bcc:	add	r1, r0, #4
   13bd0:	mov	r0, r4
   13bd4:	bl	113f8 <memcmp@plt>
   13bd8:	cmp	r0, #0
   13bdc:	bne	13900 <__assert_fail@plt+0x2280>
   13be0:	movw	r0, #63172	; 0xf6c4
   13be4:	movt	r0, #2
   13be8:	ldrb	r0, [r0]
   13bec:	tst	r0, #1
   13bf0:	bne	13900 <__assert_fail@plt+0x2280>
   13bf4:	movw	r0, #53922	; 0xd2a2
   13bf8:	movt	r0, #1
   13bfc:	bl	11368 <printf@plt>
   13c00:	sub	r0, r7, #1
   13c04:	asr	r1, r0, #31
   13c08:	add	r0, r0, r1, lsr #30
   13c0c:	bic	r0, r0, #3
   13c10:	add	r8, r0, r5
   13c14:	sub	r9, r9, r0
   13c18:	b	13ae8 <__assert_fail@plt+0x2468>
   13c1c:	movw	r0, #63036	; 0xf63c
   13c20:	movt	r0, #2
   13c24:	ldr	r1, [r0]
   13c28:	mov	r0, #8
   13c2c:	b	13c40 <__assert_fail@plt+0x25c0>
   13c30:	movw	r0, #63036	; 0xf63c
   13c34:	movt	r0, #2
   13c38:	ldr	r1, [r0]
   13c3c:	mov	r0, #10
   13c40:	bl	11608 <putc@plt>
   13c44:	mov	r0, #0
   13c48:	sub	sp, fp, #40	; 0x28
   13c4c:	vpop	{d8}
   13c50:	add	sp, sp, #4
   13c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c5c:	add	fp, sp, #28
   13c60:	sub	sp, sp, #4
   13c64:	mov	r4, r0
   13c68:	mov	sl, r0
   13c6c:	mov	r1, #60	; 0x3c
   13c70:	ldrb	r0, [r4, #8]!
   13c74:	and	r7, r1, r0, lsl #2
   13c78:	movw	r0, #63172	; 0xf6c4
   13c7c:	movt	r0, #2
   13c80:	ldrb	r0, [r0]
   13c84:	tst	r0, #32
   13c88:	beq	13e04 <__assert_fail@plt+0x2784>
   13c8c:	movw	r0, #53758	; 0xd1fe
   13c90:	movt	r0, #1
   13c94:	bl	11368 <printf@plt>
   13c98:	ldrb	r1, [r4]
   13c9c:	movw	r5, #53773	; 0xd20d
   13ca0:	movw	r8, #56973	; 0xde8d
   13ca4:	movt	r5, #1
   13ca8:	movt	r8, #1
   13cac:	mov	r0, r5
   13cb0:	mov	r2, r8
   13cb4:	bl	11368 <printf@plt>
   13cb8:	ldrb	r1, [r4, #1]
   13cbc:	movw	r9, #53771	; 0xd20b
   13cc0:	mov	r0, r5
   13cc4:	movt	r9, #1
   13cc8:	mov	r2, r9
   13ccc:	bl	11368 <printf@plt>
   13cd0:	ldrb	r1, [r4, #2]
   13cd4:	mov	r0, r5
   13cd8:	mov	r2, r8
   13cdc:	bl	11368 <printf@plt>
   13ce0:	ldrb	r1, [r4, #3]
   13ce4:	mov	r0, r5
   13ce8:	mov	r2, r9
   13cec:	bl	11368 <printf@plt>
   13cf0:	ldrb	r1, [r4, #4]
   13cf4:	mov	r0, r5
   13cf8:	mov	r2, r8
   13cfc:	bl	11368 <printf@plt>
   13d00:	ldrb	r1, [r4, #5]
   13d04:	mov	r0, r5
   13d08:	mov	r2, r9
   13d0c:	bl	11368 <printf@plt>
   13d10:	ldrb	r1, [r4, #6]
   13d14:	mov	r0, r5
   13d18:	mov	r2, r8
   13d1c:	bl	11368 <printf@plt>
   13d20:	ldrb	r1, [r4, #7]
   13d24:	mov	r0, r5
   13d28:	mov	r2, r9
   13d2c:	bl	11368 <printf@plt>
   13d30:	ldrb	r1, [r4, #8]
   13d34:	mov	r0, r5
   13d38:	mov	r2, r8
   13d3c:	bl	11368 <printf@plt>
   13d40:	ldrb	r1, [r4, #9]
   13d44:	mov	r0, r5
   13d48:	mov	r2, r9
   13d4c:	bl	11368 <printf@plt>
   13d50:	ldrb	r1, [r4, #10]
   13d54:	mov	r0, r5
   13d58:	mov	r2, r8
   13d5c:	bl	11368 <printf@plt>
   13d60:	ldrb	r1, [r4, #11]
   13d64:	mov	r0, r5
   13d68:	mov	r2, r9
   13d6c:	bl	11368 <printf@plt>
   13d70:	ldrb	r1, [r4, #12]
   13d74:	mov	r0, r5
   13d78:	mov	r2, r8
   13d7c:	bl	11368 <printf@plt>
   13d80:	ldrb	r1, [r4, #13]
   13d84:	mov	r0, r5
   13d88:	mov	r2, r9
   13d8c:	bl	11368 <printf@plt>
   13d90:	ldrb	r1, [r4, #14]
   13d94:	mov	r0, r5
   13d98:	mov	r2, r8
   13d9c:	bl	11368 <printf@plt>
   13da0:	ldrb	r1, [r4, #15]
   13da4:	mov	r0, r5
   13da8:	mov	r2, r9
   13dac:	bl	11368 <printf@plt>
   13db0:	ldrb	r1, [r4, #16]
   13db4:	mov	r0, r5
   13db8:	mov	r2, r8
   13dbc:	bl	11368 <printf@plt>
   13dc0:	ldrb	r1, [r4, #17]
   13dc4:	mov	r0, r5
   13dc8:	mov	r2, r9
   13dcc:	bl	11368 <printf@plt>
   13dd0:	ldrb	r1, [r4, #18]
   13dd4:	mov	r0, r5
   13dd8:	mov	r2, r8
   13ddc:	bl	11368 <printf@plt>
   13de0:	ldrb	r1, [r4, #19]
   13de4:	mov	r0, r5
   13de8:	mov	r2, r9
   13dec:	bl	11368 <printf@plt>
   13df0:	movw	r0, #63036	; 0xf63c
   13df4:	movt	r0, #2
   13df8:	ldr	r1, [r0]
   13dfc:	mov	r0, #10
   13e00:	bl	11608 <putc@plt>
   13e04:	movw	r0, #54096	; 0xd350
   13e08:	movt	r0, #1
   13e0c:	bl	114a0 <puts@plt>
   13e10:	ldrb	r0, [sl, #8]
   13e14:	ldrb	r3, [sl, #9]
   13e18:	lsr	r1, r0, #4
   13e1c:	and	r2, r0, #15
   13e20:	movw	r0, #53780	; 0xd214
   13e24:	movt	r0, #1
   13e28:	bl	11368 <printf@plt>
   13e2c:	ldrh	r1, [sl, #10]
   13e30:	rev	r0, r1
   13e34:	cmp	r1, #8192	; 0x2000
   13e38:	rorhi	r1, r0, #16
   13e3c:	ldrh	r0, [sl, #12]
   13e40:	rev16	r2, r0
   13e44:	movw	r0, #53796	; 0xd224
   13e48:	movt	r0, #1
   13e4c:	bl	11368 <printf@plt>
   13e50:	ldrh	r0, [sl, #14]
   13e54:	rev	r0, r0
   13e58:	lsr	r1, r0, #29
   13e5c:	ubfx	r2, r0, #16, #13
   13e60:	movw	r0, #53807	; 0xd22f
   13e64:	movt	r0, #1
   13e68:	bl	11368 <printf@plt>
   13e6c:	ldrh	r0, [sl, #18]
   13e70:	ldrb	r1, [sl, #16]
   13e74:	ldrb	r2, [sl, #17]
   13e78:	rev16	r3, r0
   13e7c:	movw	r0, #53819	; 0xd23b
   13e80:	movt	r0, #1
   13e84:	bl	11368 <printf@plt>
   13e88:	ldr	r0, [sl, #20]
   13e8c:	bl	11404 <inet_ntoa@plt>
   13e90:	movw	r5, #53837	; 0xd24d
   13e94:	mov	r1, r0
   13e98:	movt	r5, #1
   13e9c:	mov	r0, r5
   13ea0:	bl	11368 <printf@plt>
   13ea4:	ldr	r0, [sl, #24]
   13ea8:	bl	11404 <inet_ntoa@plt>
   13eac:	mov	r1, r0
   13eb0:	mov	r0, r5
   13eb4:	bl	11368 <printf@plt>
   13eb8:	cmp	r7, #21
   13ebc:	bcc	13ee4 <__assert_fail@plt+0x2864>
   13ec0:	movw	r5, #53791	; 0xd21f
   13ec4:	add	r6, r4, #20
   13ec8:	movt	r5, #1
   13ecc:	ldrb	r1, [r6], #1
   13ed0:	mov	r0, r5
   13ed4:	bl	11368 <printf@plt>
   13ed8:	sub	r7, r7, #1
   13edc:	cmp	r7, #20
   13ee0:	bhi	13ecc <__assert_fail@plt+0x284c>
   13ee4:	movw	r5, #63036	; 0xf63c
   13ee8:	mov	r0, #10
   13eec:	movt	r5, #2
   13ef0:	ldr	r1, [r5]
   13ef4:	bl	11608 <putc@plt>
   13ef8:	ldrb	r1, [sl, #8]
   13efc:	ldrb	r0, [sl, #17]
   13f00:	mov	r2, #60	; 0x3c
   13f04:	and	r1, r2, r1, lsl #2
   13f08:	cmp	r0, #1
   13f0c:	add	r7, r4, r1
   13f10:	beq	13f80 <__assert_fail@plt+0x2900>
   13f14:	cmp	r0, #17
   13f18:	beq	13f54 <__assert_fail@plt+0x28d4>
   13f1c:	cmp	r0, #6
   13f20:	subne	sp, fp, #28
   13f24:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f28:	ldrb	r0, [r7]
   13f2c:	ldrb	r1, [r7, #1]
   13f30:	ldrb	r2, [r7, #2]
   13f34:	ldrb	r3, [r7, #3]
   13f38:	orr	r1, r1, r0, lsl #8
   13f3c:	movw	r0, #53362	; 0xd072
   13f40:	orr	r2, r3, r2, lsl #8
   13f44:	movt	r0, #1
   13f48:	sub	sp, fp, #28
   13f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f50:	b	11368 <printf@plt>
   13f54:	ldrb	r0, [r7]
   13f58:	ldrb	r1, [r7, #1]
   13f5c:	ldrb	r2, [r7, #2]
   13f60:	ldrb	r3, [r7, #3]
   13f64:	orr	r1, r1, r0, lsl #8
   13f68:	movw	r0, #53403	; 0xd09b
   13f6c:	orr	r2, r3, r2, lsl #8
   13f70:	movt	r0, #1
   13f74:	sub	sp, fp, #28
   13f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f7c:	b	11368 <printf@plt>
   13f80:	ldrh	r0, [sl, #10]
   13f84:	ldrb	r4, [r7]
   13f88:	ldrb	r2, [r7, #1]
   13f8c:	rev	r0, r0
   13f90:	rsb	r3, r1, r0, lsr #16
   13f94:	movw	r0, #53444	; 0xd0c4
   13f98:	mov	r1, r4
   13f9c:	movt	r0, #1
   13fa0:	bl	11368 <printf@plt>
   13fa4:	orr	r0, r4, #8
   13fa8:	cmp	r0, #8
   13fac:	bne	13fd4 <__assert_fail@plt+0x2954>
   13fb0:	ldrb	r0, [r7, #4]
   13fb4:	ldrb	r1, [r7, #5]
   13fb8:	ldrb	r2, [r7, #6]
   13fbc:	ldrb	r3, [r7, #7]
   13fc0:	orr	r1, r1, r0, lsl #8
   13fc4:	movw	r0, #53476	; 0xd0e4
   13fc8:	orr	r2, r3, r2, lsl #8
   13fcc:	movt	r0, #1
   13fd0:	bl	11368 <printf@plt>
   13fd4:	ldr	r1, [r5]
   13fd8:	mov	r0, #10
   13fdc:	sub	sp, fp, #28
   13fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fe4:	b	11608 <putc@plt>
   13fe8:	push	{r4, sl, fp, lr}
   13fec:	add	fp, sp, #8
   13ff0:	movw	r3, #62480	; 0xf410
   13ff4:	mov	r4, r0
   13ff8:	movt	r3, #2
   13ffc:	ldrb	lr, [r4]
   14000:	ldrb	r2, [r4, #1]
   14004:	ldr	r0, [r3]
   14008:	cmp	r0, lr
   1400c:	ldreq	r0, [r3, #4]
   14010:	cmpeq	r0, r2
   14014:	beq	141ec <__assert_fail@plt+0x2b6c>
   14018:	movw	ip, #62480	; 0xf410
   1401c:	movt	ip, #2
   14020:	mov	r3, ip
   14024:	ldr	r0, [r3, #12]!
   14028:	cmp	r0, lr
   1402c:	ldreq	r0, [r3, #4]
   14030:	cmpeq	r0, r2
   14034:	beq	141ec <__assert_fail@plt+0x2b6c>
   14038:	mov	r3, ip
   1403c:	ldr	r0, [r3, #24]!
   14040:	cmp	r0, lr
   14044:	ldreq	r0, [r3, #4]
   14048:	cmpeq	r0, r2
   1404c:	beq	141ec <__assert_fail@plt+0x2b6c>
   14050:	mov	r3, ip
   14054:	ldr	r0, [r3, #36]!	; 0x24
   14058:	cmp	r0, lr
   1405c:	ldreq	r0, [r3, #4]
   14060:	cmpeq	r0, r2
   14064:	beq	141ec <__assert_fail@plt+0x2b6c>
   14068:	mov	r3, ip
   1406c:	ldr	r0, [r3, #48]!	; 0x30
   14070:	cmp	r0, lr
   14074:	ldreq	r0, [r3, #4]
   14078:	cmpeq	r0, r2
   1407c:	beq	141ec <__assert_fail@plt+0x2b6c>
   14080:	mov	r3, ip
   14084:	ldr	r0, [r3, #60]!	; 0x3c
   14088:	cmp	r0, lr
   1408c:	ldreq	r0, [r3, #4]
   14090:	cmpeq	r0, r2
   14094:	beq	141ec <__assert_fail@plt+0x2b6c>
   14098:	mov	r3, ip
   1409c:	ldr	r0, [r3, #72]!	; 0x48
   140a0:	cmp	r0, lr
   140a4:	ldreq	r0, [r3, #4]
   140a8:	cmpeq	r0, r2
   140ac:	beq	141ec <__assert_fail@plt+0x2b6c>
   140b0:	mov	r3, ip
   140b4:	ldr	r0, [r3, #84]!	; 0x54
   140b8:	cmp	r0, lr
   140bc:	ldreq	r0, [r3, #4]
   140c0:	cmpeq	r0, r2
   140c4:	beq	141ec <__assert_fail@plt+0x2b6c>
   140c8:	mov	r3, ip
   140cc:	ldr	r0, [r3, #96]!	; 0x60
   140d0:	cmp	r0, lr
   140d4:	ldreq	r0, [r3, #4]
   140d8:	cmpeq	r0, r2
   140dc:	beq	141ec <__assert_fail@plt+0x2b6c>
   140e0:	mov	r3, ip
   140e4:	ldr	r0, [r3, #108]!	; 0x6c
   140e8:	cmp	r0, lr
   140ec:	ldreq	r0, [r3, #4]
   140f0:	cmpeq	r0, r2
   140f4:	beq	141ec <__assert_fail@plt+0x2b6c>
   140f8:	mov	r3, ip
   140fc:	ldr	r0, [r3, #120]!	; 0x78
   14100:	cmp	r0, lr
   14104:	ldreq	r0, [r3, #4]
   14108:	cmpeq	r0, r2
   1410c:	beq	141ec <__assert_fail@plt+0x2b6c>
   14110:	mov	r3, ip
   14114:	ldr	r0, [r3, #132]!	; 0x84
   14118:	cmp	r0, lr
   1411c:	ldreq	r0, [r3, #4]
   14120:	cmpeq	r0, r2
   14124:	beq	141ec <__assert_fail@plt+0x2b6c>
   14128:	mov	r3, ip
   1412c:	ldr	r0, [r3, #144]!	; 0x90
   14130:	cmp	r0, lr
   14134:	ldreq	r0, [r3, #4]
   14138:	cmpeq	r0, r2
   1413c:	beq	141ec <__assert_fail@plt+0x2b6c>
   14140:	mov	r3, ip
   14144:	ldr	r0, [r3, #156]!	; 0x9c
   14148:	cmp	r0, lr
   1414c:	ldreq	r0, [r3, #4]
   14150:	cmpeq	r0, r2
   14154:	beq	141ec <__assert_fail@plt+0x2b6c>
   14158:	mov	r3, ip
   1415c:	ldr	r0, [r3, #168]!	; 0xa8
   14160:	cmp	r0, lr
   14164:	ldreq	r0, [r3, #4]
   14168:	cmpeq	r0, r2
   1416c:	beq	141ec <__assert_fail@plt+0x2b6c>
   14170:	mov	r3, ip
   14174:	ldr	r0, [r3, #180]!	; 0xb4
   14178:	cmp	r0, lr
   1417c:	ldreq	r0, [r3, #4]
   14180:	cmpeq	r0, r2
   14184:	beq	141ec <__assert_fail@plt+0x2b6c>
   14188:	mov	r3, ip
   1418c:	ldr	r0, [r3, #192]!	; 0xc0
   14190:	cmp	r0, lr
   14194:	ldreq	r0, [r3, #4]
   14198:	cmpeq	r0, r2
   1419c:	beq	141ec <__assert_fail@plt+0x2b6c>
   141a0:	mov	r3, ip
   141a4:	ldr	r0, [r3, #204]!	; 0xcc
   141a8:	cmp	r0, lr
   141ac:	ldreq	r0, [r3, #4]
   141b0:	cmpeq	r0, r2
   141b4:	beq	141ec <__assert_fail@plt+0x2b6c>
   141b8:	mov	r3, ip
   141bc:	ldr	r0, [r3, #216]!	; 0xd8
   141c0:	cmp	r0, lr
   141c4:	ldreq	r0, [r3, #4]
   141c8:	cmpeq	r0, r2
   141cc:	beq	141ec <__assert_fail@plt+0x2b6c>
   141d0:	ldr	r0, [ip, #228]!	; 0xe4
   141d4:	cmp	r0, lr
   141d8:	bne	14214 <__assert_fail@plt+0x2b94>
   141dc:	ldr	r0, [ip, #4]
   141e0:	mov	r3, ip
   141e4:	cmp	r0, r2
   141e8:	bne	14214 <__assert_fail@plt+0x2b94>
   141ec:	ldr	r0, [r3, #8]
   141f0:	bl	114a0 <puts@plt>
   141f4:	movw	r0, #63172	; 0xf6c4
   141f8:	movt	r0, #2
   141fc:	ldrb	r0, [r0]
   14200:	tst	r0, #32
   14204:	popeq	{r4, sl, fp, pc}
   14208:	mov	r0, r4
   1420c:	pop	{r4, sl, fp, lr}
   14210:	b	13c58 <__assert_fail@plt+0x25d8>
   14214:	movw	r0, #53842	; 0xd252
   14218:	movt	r0, #1
   1421c:	bl	11368 <printf@plt>
   14220:	b	141f4 <__assert_fail@plt+0x2b74>
   14224:	push	{r4, sl, fp, lr}
   14228:	add	fp, sp, #8
   1422c:	mov	r4, r0
   14230:	ldr	r0, [r0, #4]
   14234:	bl	11404 <inet_ntoa@plt>
   14238:	mov	r1, r0
   1423c:	movw	r0, #53864	; 0xd268
   14240:	movt	r0, #1
   14244:	bl	11368 <printf@plt>
   14248:	mov	r0, r4
   1424c:	pop	{r4, sl, fp, lr}
   14250:	b	13c58 <__assert_fail@plt+0x25d8>
   14254:	push	{r4, r5, r6, r7, fp, lr}
   14258:	add	fp, sp, #16
   1425c:	mov	r4, r2
   14260:	movw	r2, #63172	; 0xf6c4
   14264:	ldrb	r1, [r1]
   14268:	mov	r5, r3
   1426c:	movt	r2, #2
   14270:	ldrb	r2, [r2]
   14274:	tst	r2, #32
   14278:	bne	14298 <__assert_fail@plt+0x2c18>
   1427c:	movw	r3, #63180	; 0xf6cc
   14280:	ldr	r2, [r4, #24]
   14284:	movt	r3, #2
   14288:	ldr	r3, [r3]
   1428c:	ldr	r3, [r3, #28]
   14290:	cmp	r2, r3
   14294:	popne	{r4, r5, r6, r7, fp, pc}
   14298:	mov	r2, #60	; 0x3c
   1429c:	and	r7, r2, r1, lsl #2
   142a0:	mov	r1, #16
   142a4:	bl	13008 <__assert_fail@plt+0x1988>
   142a8:	mov	r6, r0
   142ac:	movw	r0, #53720	; 0xd1d8
   142b0:	sub	r1, r5, r7
   142b4:	movt	r0, #1
   142b8:	mov	r2, r6
   142bc:	bl	11368 <printf@plt>
   142c0:	mov	r0, r6
   142c4:	bl	19df4 <argp_parse@@Base+0x13b0>
   142c8:	movw	r5, #62720	; 0xf500
   142cc:	ldrb	r1, [r4]
   142d0:	movt	r5, #2
   142d4:	ldr	r0, [r5]
   142d8:	cmp	r0, r1
   142dc:	beq	143c8 <__assert_fail@plt+0x2d48>
   142e0:	movw	r0, #62720	; 0xf500
   142e4:	movt	r0, #2
   142e8:	mov	r5, r0
   142ec:	ldr	r2, [r5, #16]!
   142f0:	cmp	r2, r1
   142f4:	beq	143c8 <__assert_fail@plt+0x2d48>
   142f8:	mov	r5, r0
   142fc:	ldr	r2, [r5, #32]!
   14300:	cmp	r2, r1
   14304:	beq	143c8 <__assert_fail@plt+0x2d48>
   14308:	mov	r5, r0
   1430c:	ldr	r2, [r5, #48]!	; 0x30
   14310:	cmp	r2, r1
   14314:	beq	143c8 <__assert_fail@plt+0x2d48>
   14318:	mov	r5, r0
   1431c:	ldr	r2, [r5, #64]!	; 0x40
   14320:	cmp	r2, r1
   14324:	beq	143c8 <__assert_fail@plt+0x2d48>
   14328:	mov	r5, r0
   1432c:	ldr	r2, [r5, #80]!	; 0x50
   14330:	cmp	r2, r1
   14334:	beq	143c8 <__assert_fail@plt+0x2d48>
   14338:	mov	r5, r0
   1433c:	ldr	r2, [r5, #96]!	; 0x60
   14340:	cmp	r2, r1
   14344:	beq	143c8 <__assert_fail@plt+0x2d48>
   14348:	mov	r5, r0
   1434c:	ldr	r2, [r5, #112]!	; 0x70
   14350:	cmp	r2, r1
   14354:	beq	143c8 <__assert_fail@plt+0x2d48>
   14358:	mov	r5, r0
   1435c:	ldr	r2, [r5, #128]!	; 0x80
   14360:	cmp	r2, r1
   14364:	beq	143c8 <__assert_fail@plt+0x2d48>
   14368:	mov	r5, r0
   1436c:	ldr	r2, [r5, #144]!	; 0x90
   14370:	cmp	r2, r1
   14374:	beq	143c8 <__assert_fail@plt+0x2d48>
   14378:	mov	r5, r0
   1437c:	ldr	r2, [r5, #160]!	; 0xa0
   14380:	cmp	r2, r1
   14384:	beq	143c8 <__assert_fail@plt+0x2d48>
   14388:	mov	r5, r0
   1438c:	ldr	r2, [r5, #176]!	; 0xb0
   14390:	cmp	r2, r1
   14394:	beq	143c8 <__assert_fail@plt+0x2d48>
   14398:	mov	r5, r0
   1439c:	ldr	r2, [r5, #192]!	; 0xc0
   143a0:	cmp	r2, r1
   143a4:	beq	143c8 <__assert_fail@plt+0x2d48>
   143a8:	mov	r5, r0
   143ac:	ldr	r2, [r5, #208]!	; 0xd0
   143b0:	cmp	r2, r1
   143b4:	beq	143c8 <__assert_fail@plt+0x2d48>
   143b8:	ldr	r2, [r0, #224]!	; 0xe0
   143bc:	cmp	r2, r1
   143c0:	mov	r5, r0
   143c4:	bne	143f8 <__assert_fail@plt+0x2d78>
   143c8:	ldr	r0, [r5, #4]
   143cc:	cmp	r0, #0
   143d0:	beq	143d8 <__assert_fail@plt+0x2d58>
   143d4:	bl	114a0 <puts@plt>
   143d8:	ldr	r2, [r5, #8]
   143dc:	cmp	r2, #0
   143e0:	beq	143f4 <__assert_fail@plt+0x2d74>
   143e4:	ldr	r1, [r5, #12]
   143e8:	mov	r0, r4
   143ec:	pop	{r4, r5, r6, r7, fp, lr}
   143f0:	bx	r2
   143f4:	pop	{r4, r5, r6, r7, fp, pc}
   143f8:	movw	r0, #53739	; 0xd1eb
   143fc:	movt	r0, #1
   14400:	pop	{r4, r5, r6, r7, fp, lr}
   14404:	b	11368 <printf@plt>
   14408:	push	{r4, r5, fp, lr}
   1440c:	add	fp, sp, #8
   14410:	movw	r5, #63180	; 0xf6cc
   14414:	mov	r4, r0
   14418:	mov	r1, #17
   1441c:	movt	r5, #2
   14420:	ldr	r0, [r5]
   14424:	bl	14944 <__assert_fail@plt+0x32c4>
   14428:	ldr	r0, [r5]
   1442c:	movw	r1, #17588	; 0x44b4
   14430:	mov	r2, #0
   14434:	movt	r1, #1
   14438:	bl	14d20 <__assert_fail@plt+0x36a0>
   1443c:	ldr	r0, [r5]
   14440:	mov	r1, #12
   14444:	bl	14d2c <__assert_fail@plt+0x36ac>
   14448:	ldr	r0, [r5]
   1444c:	mov	r1, #1
   14450:	bl	12f04 <__assert_fail@plt+0x1884>
   14454:	ldr	r0, [r5]
   14458:	mov	r1, r4
   1445c:	bl	14d34 <__assert_fail@plt+0x36b4>
   14460:	cmp	r0, #0
   14464:	beq	1447c <__assert_fail@plt+0x2dfc>
   14468:	movw	r2, #52724	; 0xcdf4
   1446c:	mov	r0, #1
   14470:	mov	r1, #0
   14474:	movt	r2, #1
   14478:	bl	11488 <error@plt>
   1447c:	ldr	r1, [r5]
   14480:	ldr	r0, [r1, #28]
   14484:	ldr	r4, [r1, #52]	; 0x34
   14488:	bl	11404 <inet_ntoa@plt>
   1448c:	mov	r2, r0
   14490:	movw	r0, #54160	; 0xd390
   14494:	mov	r1, r4
   14498:	movt	r0, #1
   1449c:	bl	11368 <printf@plt>
   144a0:	ldr	r0, [r5]
   144a4:	movw	r1, #17756	; 0x455c
   144a8:	movt	r1, #1
   144ac:	pop	{r4, r5, fp, lr}
   144b0:	b	11ad8 <__assert_fail@plt+0x458>
   144b4:	push	{r4, r5, r6, sl, fp, lr}
   144b8:	add	fp, sp, #16
   144bc:	ldr	r5, [fp, #16]
   144c0:	ldr	r4, [fp, #12]
   144c4:	cmp	r0, #2
   144c8:	bcs	14534 <__assert_fail@plt+0x2eb4>
   144cc:	mov	r6, r0
   144d0:	ldr	r0, [r3, #4]
   144d4:	bl	11404 <inet_ntoa@plt>
   144d8:	mov	r2, r0
   144dc:	ldrh	r0, [r4, #6]
   144e0:	mov	r1, r5
   144e4:	rev16	r3, r0
   144e8:	movw	r0, #52794	; 0xce3a
   144ec:	movt	r0, #1
   144f0:	bl	11368 <printf@plt>
   144f4:	cmp	r6, #1
   144f8:	bne	14508 <__assert_fail@plt+0x2e88>
   144fc:	movw	r0, #52846	; 0xce6e
   14500:	movt	r0, #1
   14504:	bl	11368 <printf@plt>
   14508:	mov	r0, #10
   1450c:	bl	11578 <putchar@plt>
   14510:	ldr	r0, [r4, #8]
   14514:	bl	11404 <inet_ntoa@plt>
   14518:	mov	r1, r0
   1451c:	movw	r0, #54204	; 0xd3bc
   14520:	movt	r0, #1
   14524:	bl	11368 <printf@plt>
   14528:	mov	r0, #10
   1452c:	bl	11578 <putchar@plt>
   14530:	b	14554 <__assert_fail@plt+0x2ed4>
   14534:	bne	14554 <__assert_fail@plt+0x2ed4>
   14538:	ldr	r1, [fp, #8]
   1453c:	mov	r0, r3
   14540:	mov	r2, r4
   14544:	mov	r3, r5
   14548:	bl	14254 <__assert_fail@plt+0x2bd4>
   1454c:	mov	r0, #0
   14550:	pop	{r4, r5, r6, sl, fp, pc}
   14554:	mov	r0, #0
   14558:	pop	{r4, r5, r6, sl, fp, pc}
   1455c:	mov	r0, #0
   14560:	bx	lr
   14564:	mov	r0, #0
   14568:	bx	lr
   1456c:	push	{r4, r5, fp, lr}
   14570:	add	fp, sp, #8
   14574:	movw	r5, #63180	; 0xf6cc
   14578:	mov	r4, r0
   1457c:	mov	r1, #13
   14580:	movt	r5, #2
   14584:	ldr	r0, [r5]
   14588:	bl	14944 <__assert_fail@plt+0x32c4>
   1458c:	ldr	r0, [r5]
   14590:	movw	r1, #17932	; 0x460c
   14594:	mov	r2, #0
   14598:	movt	r1, #1
   1459c:	bl	14d20 <__assert_fail@plt+0x36a0>
   145a0:	ldr	r0, [r5]
   145a4:	mov	r1, #20
   145a8:	bl	14d2c <__assert_fail@plt+0x36ac>
   145ac:	ldr	r0, [r5]
   145b0:	mov	r1, r4
   145b4:	bl	14d34 <__assert_fail@plt+0x36b4>
   145b8:	cmp	r0, #0
   145bc:	beq	145d4 <__assert_fail@plt+0x2f54>
   145c0:	movw	r2, #52724	; 0xcdf4
   145c4:	mov	r0, #1
   145c8:	mov	r1, #0
   145cc:	movt	r2, #1
   145d0:	bl	11488 <error@plt>
   145d4:	ldr	r1, [r5]
   145d8:	ldr	r0, [r1, #28]
   145dc:	ldr	r4, [r1, #52]	; 0x34
   145e0:	bl	11404 <inet_ntoa@plt>
   145e4:	mov	r2, r0
   145e8:	movw	r0, #54219	; 0xd3cb
   145ec:	mov	r1, r4
   145f0:	movt	r0, #1
   145f4:	bl	11368 <printf@plt>
   145f8:	ldr	r0, [r5]
   145fc:	movw	r1, #18280	; 0x4768
   14600:	movt	r1, #1
   14604:	pop	{r4, r5, fp, lr}
   14608:	b	11ad8 <__assert_fail@plt+0x458>
   1460c:	push	{r4, r5, r6, sl, fp, lr}
   14610:	add	fp, sp, #16
   14614:	sub	sp, sp, #16
   14618:	ldr	r5, [fp, #16]
   1461c:	ldr	r4, [fp, #12]
   14620:	cmp	r0, #2
   14624:	bcs	14744 <__assert_fail@plt+0x30c4>
   14628:	mov	r6, r0
   1462c:	ldr	r0, [r3, #4]
   14630:	bl	11404 <inet_ntoa@plt>
   14634:	mov	r2, r0
   14638:	ldrh	r0, [r4, #6]
   1463c:	mov	r1, r5
   14640:	rev16	r3, r0
   14644:	movw	r0, #52794	; 0xce3a
   14648:	movt	r0, #1
   1464c:	bl	11368 <printf@plt>
   14650:	cmp	r6, #1
   14654:	bne	14664 <__assert_fail@plt+0x2fe4>
   14658:	movw	r0, #52846	; 0xce6e
   1465c:	movt	r0, #1
   14660:	bl	11368 <printf@plt>
   14664:	mov	r0, #10
   14668:	bl	11578 <putchar@plt>
   1466c:	ldr	r0, [r4, #8]
   14670:	mov	r5, sp
   14674:	mov	r1, #16
   14678:	rev	r2, r0
   1467c:	mov	r0, r5
   14680:	bl	12d7c <__assert_fail@plt+0x16fc>
   14684:	mov	r1, r0
   14688:	movw	r0, #54261	; 0xd3f5
   1468c:	movt	r0, #1
   14690:	bl	11368 <printf@plt>
   14694:	ldr	r0, [r4, #12]
   14698:	mov	r1, #16
   1469c:	rev	r2, r0
   146a0:	mov	r0, r5
   146a4:	bl	12d7c <__assert_fail@plt+0x16fc>
   146a8:	mov	r1, r0
   146ac:	movw	r0, #54278	; 0xd406
   146b0:	movt	r0, #1
   146b4:	bl	11368 <printf@plt>
   146b8:	ldr	r0, [r4, #16]
   146bc:	mov	r1, #16
   146c0:	rev	r2, r0
   146c4:	mov	r0, r5
   146c8:	bl	12d7c <__assert_fail@plt+0x16fc>
   146cc:	mov	r1, r0
   146d0:	movw	r0, #54295	; 0xd417
   146d4:	movt	r0, #1
   146d8:	bl	11368 <printf@plt>
   146dc:	movw	r0, #63172	; 0xf6c4
   146e0:	movt	r0, #2
   146e4:	ldrb	r0, [r0]
   146e8:	tst	r0, #32
   146ec:	beq	1475c <__assert_fail@plt+0x30dc>
   146f0:	ldr	r0, [r4, #8]
   146f4:	rev	r0, r0
   146f8:	bl	12d70 <__assert_fail@plt+0x16f0>
   146fc:	cmp	r0, #0
   14700:	beq	1475c <__assert_fail@plt+0x30dc>
   14704:	ldr	r0, [r4, #8]
   14708:	rev	r0, r0
   1470c:	bl	12d70 <__assert_fail@plt+0x16f0>
   14710:	cmp	r0, #0
   14714:	beq	1475c <__assert_fail@plt+0x30dc>
   14718:	ldr	r0, [r4, #8]
   1471c:	ldr	r1, [r4, #16]
   14720:	rev	r0, r0
   14724:	rev	r1, r1
   14728:	sub	r1, r1, r0
   1472c:	movw	r0, #54312	; 0xd428
   14730:	movt	r0, #1
   14734:	bl	11368 <printf@plt>
   14738:	mov	r0, #0
   1473c:	sub	sp, fp, #16
   14740:	pop	{r4, r5, r6, sl, fp, pc}
   14744:	bne	1475c <__assert_fail@plt+0x30dc>
   14748:	ldr	r1, [fp, #8]
   1474c:	mov	r0, r3
   14750:	mov	r2, r4
   14754:	mov	r3, r5
   14758:	bl	14254 <__assert_fail@plt+0x2bd4>
   1475c:	mov	r0, #0
   14760:	sub	sp, fp, #16
   14764:	pop	{r4, r5, r6, sl, fp, pc}
   14768:	b	11fdc <__assert_fail@plt+0x95c>
   1476c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14770:	add	fp, sp, #24
   14774:	mov	r9, r0
   14778:	movw	r0, #54332	; 0xd43c
   1477c:	mov	r8, r1
   14780:	movt	r0, #1
   14784:	bl	11374 <getprotobyname@plt>
   14788:	cmp	r0, #0
   1478c:	beq	148a0 <__assert_fail@plt+0x3220>
   14790:	ldr	r2, [r0, #8]
   14794:	mov	r7, r0
   14798:	mov	r0, #2
   1479c:	mov	r1, #3
   147a0:	bl	11650 <socket@plt>
   147a4:	mov	r4, r0
   147a8:	cmn	r0, #1
   147ac:	bgt	14804 <__assert_fail@plt+0x3184>
   147b0:	bl	1153c <__errno_location@plt>
   147b4:	mov	r5, r0
   147b8:	ldr	r0, [r0]
   147bc:	cmp	r0, #13
   147c0:	movne	r6, #0
   147c4:	cmpne	r0, #1
   147c8:	bne	14888 <__assert_fail@plt+0x3208>
   147cc:	mov	r0, #0
   147d0:	mov	r1, #2
   147d4:	str	r0, [r5]
   147d8:	mov	r0, #2
   147dc:	ldr	r2, [r7, #8]
   147e0:	bl	11650 <socket@plt>
   147e4:	cmn	r0, #1
   147e8:	ble	148cc <__assert_fail@plt+0x324c>
   147ec:	mov	r4, r0
   147f0:	movw	r0, #63104	; 0xf680
   147f4:	movt	r0, #2
   147f8:	ldr	r1, [r0]
   147fc:	add	r1, r1, #1
   14800:	str	r1, [r0]
   14804:	mov	r0, #124	; 0x7c
   14808:	bl	1ab84 <argp_parse@@Base+0x2140>
   1480c:	mov	r6, r0
   14810:	cmp	r0, #0
   14814:	beq	14890 <__assert_fail@plt+0x3210>
   14818:	vmov.i32	q8, #0	; 0x00000000
   1481c:	add	r1, r6, #44	; 0x2c
   14820:	add	r0, r6, #12
   14824:	uxth	r2, r8
   14828:	vst1.32	{d16-d17}, [r1]
   1482c:	add	r1, r6, #60	; 0x3c
   14830:	vst1.32	{d16-d17}, [r0]
   14834:	vst1.32	{d16-d17}, [r1]
   14838:	mov	r1, #0
   1483c:	stm	r6, {r4, r9}
   14840:	str	r1, [r6, #8]
   14844:	add	r1, r6, #108	; 0x6c
   14848:	vst1.32	{d16-d17}, [r1]
   1484c:	add	r1, r6, #92	; 0x5c
   14850:	vst1.32	{d16-d17}, [r1]
   14854:	add	r1, r6, #76	; 0x4c
   14858:	vst1.32	{d16-d17}, [r1]
   1485c:	add	r1, r6, #28
   14860:	vst1.32	{d16-d17}, [r1]
   14864:	mov	r1, #1000	; 0x3e8
   14868:	str	r1, [r6, #20]
   1486c:	mov	r1, #28
   14870:	str	r1, [r6, #56]	; 0x38
   14874:	mov	r1, #128	; 0x80
   14878:	str	r2, [r6, #60]	; 0x3c
   1487c:	str	r1, [r6, #72]	; 0x48
   14880:	mov	r1, #0
   14884:	bl	1147c <gettimeofday@plt>
   14888:	mov	r0, r6
   1488c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14890:	mov	r0, r4
   14894:	bl	11674 <close@plt>
   14898:	mov	r0, r6
   1489c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   148a0:	movw	r0, #63032	; 0xf638
   148a4:	mov	r1, #29
   148a8:	movt	r0, #2
   148ac:	ldr	r3, [r0]
   148b0:	movw	r0, #54337	; 0xd441
   148b4:	movt	r0, #1
   148b8:	mov	r2, #1
   148bc:	bl	11470 <fwrite@plt>
   148c0:	mov	r6, #0
   148c4:	mov	r0, r6
   148c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   148cc:	ldr	r0, [r5]
   148d0:	cmp	r0, #1
   148d4:	cmpne	r0, #93	; 0x5d
   148d8:	bne	148f8 <__assert_fail@plt+0x3278>
   148dc:	movw	r0, #63032	; 0xf638
   148e0:	mov	r1, #41	; 0x29
   148e4:	movt	r0, #2
   148e8:	ldr	r3, [r0]
   148ec:	movw	r0, #54367	; 0xd45f
   148f0:	movt	r0, #1
   148f4:	b	148b8 <__assert_fail@plt+0x3238>
   148f8:	cmp	r0, #13
   148fc:	beq	148dc <__assert_fail@plt+0x325c>
   14900:	movw	r1, #63032	; 0xf638
   14904:	movt	r1, #2
   14908:	ldr	r4, [r1]
   1490c:	bl	114c4 <strerror@plt>
   14910:	movw	r1, #54409	; 0xd489
   14914:	mov	r2, r0
   14918:	mov	r0, r4
   1491c:	movt	r1, #1
   14920:	bl	11530 <fprintf@plt>
   14924:	mov	r6, #0
   14928:	mov	r0, r6
   1492c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14930:	mov	r1, #0
   14934:	str	r1, [r0, #112]	; 0x70
   14938:	str	r1, [r0, #116]	; 0x74
   1493c:	str	r1, [r0, #120]	; 0x78
   14940:	bx	lr
   14944:	str	r1, [r0, #4]
   14948:	bx	lr
   1494c:	push	{r4, r5, r6, r7, fp, lr}
   14950:	add	fp, sp, #16
   14954:	sub	sp, sp, #8
   14958:	mov	r1, #0
   1495c:	mov	r4, r0
   14960:	bl	12dc4 <__assert_fail@plt+0x1744>
   14964:	mvn	r5, #0
   14968:	cmp	r0, #0
   1496c:	bne	14ab0 <__assert_fail@plt+0x3430>
   14970:	ldr	r0, [r4, #4]
   14974:	sub	r0, r0, #13
   14978:	cmp	r0, #6
   1497c:	bcs	14994 <__assert_fail@plt+0x3314>
   14980:	uxtb	r1, r0
   14984:	mov	r2, #51	; 0x33
   14988:	mov	r3, #1
   1498c:	tst	r3, r2, lsr r1
   14990:	bne	149a0 <__assert_fail@plt+0x3320>
   14994:	ldr	r0, [r4, #56]	; 0x38
   14998:	add	r7, r0, #8
   1499c:	b	149ac <__assert_fail@plt+0x332c>
   149a0:	movw	r1, #54528	; 0xd500
   149a4:	movt	r1, #1
   149a8:	ldr	r7, [r1, r0, lsl #2]
   149ac:	ldr	r0, [r4, #72]	; 0x48
   149b0:	ldr	r2, [r4, #112]	; 0x70
   149b4:	ldr	r1, [r4, #76]	; 0x4c
   149b8:	mov	r6, #1
   149bc:	lsl	r0, r0, #3
   149c0:	udiv	r3, r2, r0
   149c4:	mls	r0, r3, r0, r2
   149c8:	ldrb	r2, [r1, r0, asr #3]
   149cc:	and	r3, r0, #7
   149d0:	bic	r2, r2, r6, lsl r3
   149d4:	strb	r2, [r1, r0, asr #3]
   149d8:	ldr	r2, [r4, #4]
   149dc:	cmp	r2, #17
   149e0:	beq	14a0c <__assert_fail@plt+0x338c>
   149e4:	cmp	r2, #13
   149e8:	beq	14a24 <__assert_fail@plt+0x33a4>
   149ec:	cmp	r2, #8
   149f0:	bne	14a3c <__assert_fail@plt+0x33bc>
   149f4:	ldr	r2, [r4, #60]	; 0x3c
   149f8:	ldr	r0, [r4, #80]	; 0x50
   149fc:	ldr	r3, [r4, #112]	; 0x70
   14a00:	mov	r1, r7
   14a04:	bl	14e88 <__assert_fail@plt+0x3808>
   14a08:	b	14a54 <__assert_fail@plt+0x33d4>
   14a0c:	ldr	r2, [r4, #60]	; 0x3c
   14a10:	ldr	r0, [r4, #80]	; 0x50
   14a14:	ldr	r3, [r4, #112]	; 0x70
   14a18:	mov	r1, r7
   14a1c:	bl	14fd8 <__assert_fail@plt+0x3958>
   14a20:	b	14a54 <__assert_fail@plt+0x33d4>
   14a24:	ldr	r2, [r4, #60]	; 0x3c
   14a28:	ldr	r0, [r4, #80]	; 0x50
   14a2c:	ldr	r3, [r4, #112]	; 0x70
   14a30:	mov	r1, r7
   14a34:	bl	14f28 <__assert_fail@plt+0x38a8>
   14a38:	b	14a54 <__assert_fail@plt+0x33d4>
   14a3c:	ldr	r1, [r4, #112]	; 0x70
   14a40:	ldr	r3, [r4, #60]	; 0x3c
   14a44:	ldr	r0, [r4, #80]	; 0x50
   14a48:	str	r1, [sp]
   14a4c:	mov	r1, r7
   14a50:	bl	14ddc <__assert_fail@plt+0x375c>
   14a54:	ldr	r0, [r4]
   14a58:	ldr	r1, [r4, #80]	; 0x50
   14a5c:	mov	r2, #16
   14a60:	add	r3, r4, #24
   14a64:	str	r3, [sp]
   14a68:	str	r2, [sp, #4]
   14a6c:	mov	r2, r7
   14a70:	mov	r3, #0
   14a74:	bl	1159c <sendto@plt>
   14a78:	cmp	r0, #0
   14a7c:	blt	14ab0 <__assert_fail@plt+0x3430>
   14a80:	mov	r3, r0
   14a84:	ldr	r0, [r4, #112]	; 0x70
   14a88:	cmp	r3, r7
   14a8c:	add	r0, r0, #1
   14a90:	str	r0, [r4, #112]	; 0x70
   14a94:	beq	14aac <__assert_fail@plt+0x342c>
   14a98:	ldr	r1, [r4, #52]	; 0x34
   14a9c:	movw	r0, #54419	; 0xd493
   14aa0:	mov	r2, r7
   14aa4:	movt	r0, #1
   14aa8:	bl	11368 <printf@plt>
   14aac:	mov	r5, #0
   14ab0:	mov	r0, r5
   14ab4:	sub	sp, fp, #16
   14ab8:	pop	{r4, r5, r6, r7, fp, pc}
   14abc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ac0:	add	fp, sp, #24
   14ac4:	sub	sp, sp, #24
   14ac8:	mov	r4, r0
   14acc:	mov	r0, #16
   14ad0:	add	r3, sp, #20
   14ad4:	str	r0, [sp, #20]
   14ad8:	add	r8, r4, #84	; 0x54
   14adc:	ldr	r2, [r4, #56]	; 0x38
   14ae0:	ldr	r0, [r4]
   14ae4:	ldr	r1, [r4, #80]	; 0x50
   14ae8:	str	r3, [sp, #4]
   14aec:	mov	r3, #0
   14af0:	str	r8, [sp]
   14af4:	add	r2, r2, #80	; 0x50
   14af8:	bl	11434 <recvfrom@plt>
   14afc:	mvn	r7, #0
   14b00:	cmp	r0, #0
   14b04:	blt	14ca8 <__assert_fail@plt+0x3628>
   14b08:	mov	r6, r0
   14b0c:	ldr	r0, [r4, #80]	; 0x50
   14b10:	add	r2, sp, #12
   14b14:	add	r3, sp, #16
   14b18:	mov	r1, r6
   14b1c:	bl	14e2c <__assert_fail@plt+0x37ac>
   14b20:	cmn	r0, #1
   14b24:	ble	14cb4 <__assert_fail@plt+0x3634>
   14b28:	ldr	r2, [sp, #16]
   14b2c:	ldrb	r1, [r2]
   14b30:	cmp	r1, #18
   14b34:	bhi	14bf4 <__assert_fail@plt+0x3574>
   14b38:	movw	r5, #8448	; 0x2100
   14b3c:	mov	r3, #1
   14b40:	movt	r5, #2
   14b44:	tst	r5, r3, lsl r1
   14b48:	bne	14ca8 <__assert_fail@plt+0x3628>
   14b4c:	movw	r5, #16385	; 0x4001
   14b50:	movt	r5, #4
   14b54:	tst	r5, r3, lsl r1
   14b58:	beq	14bf4 <__assert_fail@plt+0x3574>
   14b5c:	ldrh	r3, [r2, #4]!
   14b60:	ldr	r1, [r4, #60]	; 0x3c
   14b64:	rev	r3, r3
   14b68:	cmp	r1, r3, lsr #16
   14b6c:	beq	14b84 <__assert_fail@plt+0x3504>
   14b70:	movw	r1, #63104	; 0xf680
   14b74:	movt	r1, #2
   14b78:	ldr	r1, [r1]
   14b7c:	cmp	r1, #0
   14b80:	beq	14ca8 <__assert_fail@plt+0x3628>
   14b84:	cmp	r0, #0
   14b88:	bne	14cec <__assert_fail@plt+0x366c>
   14b8c:	ldr	r3, [r4, #116]	; 0x74
   14b90:	ldr	r0, [r4, #72]	; 0x48
   14b94:	ldr	ip, [r4, #76]	; 0x4c
   14b98:	add	r1, r3, #1
   14b9c:	lsl	r0, r0, #3
   14ba0:	str	r1, [r4, #116]	; 0x74
   14ba4:	ldrh	r1, [r2, #2]
   14ba8:	rev	r1, r1
   14bac:	lsr	r2, r1, #16
   14bb0:	sdiv	r2, r2, r0
   14bb4:	mul	r0, r2, r0
   14bb8:	rsb	r2, r0, r1, lsr #16
   14bbc:	mov	r0, #1
   14bc0:	ldrb	r7, [ip, r2, lsr #3]
   14bc4:	and	r1, r2, #7
   14bc8:	tst	r7, r0, lsl r1
   14bcc:	beq	14c68 <__assert_fail@plt+0x35e8>
   14bd0:	str	r3, [r4, #116]	; 0x74
   14bd4:	ldr	r1, [r4, #120]	; 0x78
   14bd8:	add	r1, r1, #1
   14bdc:	str	r1, [r4, #120]	; 0x78
   14be0:	ldr	ip, [r4, #64]	; 0x40
   14be4:	mov	r7, #0
   14be8:	cmp	ip, #0
   14bec:	bne	14c8c <__assert_fail@plt+0x360c>
   14bf0:	b	14ca8 <__assert_fail@plt+0x3628>
   14bf4:	ldr	r0, [r4, #28]
   14bf8:	ldr	r1, [r2, #24]
   14bfc:	cmp	r1, r0
   14c00:	bne	14ca8 <__assert_fail@plt+0x3628>
   14c04:	ldrb	r0, [r2, #17]
   14c08:	cmp	r0, #1
   14c0c:	ldrbeq	r0, [r2, #28]
   14c10:	cmpeq	r0, #8
   14c14:	bne	14ca8 <__assert_fail@plt+0x3628>
   14c18:	movw	r0, #63104	; 0xf680
   14c1c:	movt	r0, #2
   14c20:	ldr	r0, [r0]
   14c24:	cmp	r0, #0
   14c28:	bne	14c40 <__assert_fail@plt+0x35c0>
   14c2c:	ldrh	r1, [r2, #32]
   14c30:	ldr	r0, [r4, #60]	; 0x3c
   14c34:	rev16	r1, r1
   14c38:	cmp	r0, r1
   14c3c:	bne	14ca8 <__assert_fail@plt+0x3628>
   14c40:	ldr	ip, [r4, #64]	; 0x40
   14c44:	mov	r7, #0
   14c48:	cmp	ip, #0
   14c4c:	beq	14ca8 <__assert_fail@plt+0x3628>
   14c50:	ldr	r0, [sp, #12]
   14c54:	ldr	r1, [r4, #68]	; 0x44
   14c58:	stm	sp, {r0, r2, r6}
   14c5c:	add	r2, r4, #24
   14c60:	mov	r0, #2
   14c64:	b	14ca0 <__assert_fail@plt+0x3620>
   14c68:	lsl	r0, r0, r1
   14c6c:	lsr	r1, r2, #3
   14c70:	orr	r0, r7, r0
   14c74:	strb	r0, [ip, r1]
   14c78:	mov	r0, #0
   14c7c:	ldr	ip, [r4, #64]	; 0x40
   14c80:	mov	r7, #0
   14c84:	cmp	ip, #0
   14c88:	beq	14ca8 <__assert_fail@plt+0x3628>
   14c8c:	ldr	r2, [sp, #12]
   14c90:	ldr	r3, [sp, #16]
   14c94:	ldr	r1, [r4, #68]	; 0x44
   14c98:	stm	sp, {r2, r3, r6}
   14c9c:	add	r2, r4, #24
   14ca0:	mov	r3, r8
   14ca4:	blx	ip
   14ca8:	mov	r0, r7
   14cac:	sub	sp, fp, #24
   14cb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cb4:	movw	r0, #63032	; 0xf638
   14cb8:	movt	r0, #2
   14cbc:	ldr	r5, [r0]
   14cc0:	ldr	r0, [r4, #88]	; 0x58
   14cc4:	bl	11404 <inet_ntoa@plt>
   14cc8:	movw	r1, #54452	; 0xd4b4
   14ccc:	mov	r3, r0
   14cd0:	mov	r0, r5
   14cd4:	mov	r2, r6
   14cd8:	movt	r1, #1
   14cdc:	bl	11530 <fprintf@plt>
   14ce0:	mov	r0, r7
   14ce4:	sub	sp, fp, #24
   14ce8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cec:	movw	r0, #63032	; 0xf638
   14cf0:	movt	r0, #2
   14cf4:	ldr	r7, [r0]
   14cf8:	ldr	r0, [r4, #88]	; 0x58
   14cfc:	bl	11404 <inet_ntoa@plt>
   14d00:	movw	r1, #54489	; 0xd4d9
   14d04:	mov	r2, r0
   14d08:	mov	r0, r7
   14d0c:	movt	r1, #1
   14d10:	bl	11530 <fprintf@plt>
   14d14:	ldr	r0, [sp, #16]
   14d18:	add	r2, r0, #4
   14d1c:	b	14b8c <__assert_fail@plt+0x350c>
   14d20:	str	r1, [r0, #64]	; 0x40
   14d24:	str	r2, [r0, #68]	; 0x44
   14d28:	bx	lr
   14d2c:	str	r1, [r0, #56]	; 0x38
   14d30:	bx	lr
   14d34:	push	{r4, r5, r6, sl, fp, lr}
   14d38:	add	fp, sp, #16
   14d3c:	sub	sp, sp, #40	; 0x28
   14d40:	add	r2, sp, #8
   14d44:	mov	r4, r0
   14d48:	vmov.i32	q8, #0	; 0x00000000
   14d4c:	mov	r5, r1
   14d50:	add	r3, sp, #4
   14d54:	add	r0, r2, #8
   14d58:	vst1.64	{d16-d17}, [r0]
   14d5c:	mov	r0, #0
   14d60:	str	r0, [sp, #36]	; 0x24
   14d64:	str	r0, [sp, #32]
   14d68:	mov	r0, #2
   14d6c:	str	r0, [sp, #12]
   14d70:	mov	r0, #194	; 0xc2
   14d74:	str	r0, [sp, #8]
   14d78:	mov	r0, r1
   14d7c:	mov	r1, #0
   14d80:	bl	11644 <getaddrinfo@plt>
   14d84:	cmp	r0, #0
   14d88:	beq	14da0 <__assert_fail@plt+0x3720>
   14d8c:	mov	r0, #0
   14d90:	bl	19df4 <argp_parse@@Base+0x13b0>
   14d94:	mov	r0, #1
   14d98:	sub	sp, fp, #16
   14d9c:	pop	{r4, r5, r6, sl, fp, pc}
   14da0:	ldr	r6, [sp, #4]
   14da4:	add	r0, r4, #24
   14da8:	ldr	r2, [r6, #16]
   14dac:	ldr	r1, [r6, #20]
   14db0:	bl	113d4 <memcpy@plt>
   14db4:	ldr	r0, [r6, #24]
   14db8:	cmp	r0, #0
   14dbc:	moveq	r0, r5
   14dc0:	bl	11440 <strdup@plt>
   14dc4:	str	r0, [r4, #52]	; 0x34
   14dc8:	ldr	r0, [sp, #4]
   14dcc:	bl	11638 <freeaddrinfo@plt>
   14dd0:	mov	r0, #0
   14dd4:	sub	sp, fp, #16
   14dd8:	pop	{r4, r5, r6, sl, fp, pc}
   14ddc:	push	{r4, r5, fp, lr}
   14de0:	add	fp, sp, #8
   14de4:	mvn	r4, #0
   14de8:	cmp	r1, #8
   14dec:	bcc	14e24 <__assert_fail@plt+0x37a4>
   14df0:	mov	r5, r0
   14df4:	ldr	r0, [fp, #8]
   14df8:	mov	r4, #0
   14dfc:	strb	r4, [r5, #1]
   14e00:	strb	r2, [r5]
   14e04:	strh	r4, [r5, #2]
   14e08:	rev16	r0, r0
   14e0c:	strh	r0, [r5, #6]
   14e10:	rev16	r0, r3
   14e14:	strh	r0, [r5, #4]
   14e18:	mov	r0, r5
   14e1c:	bl	15018 <__assert_fail@plt+0x3998>
   14e20:	strh	r0, [r5, #2]
   14e24:	mov	r0, r4
   14e28:	pop	{r4, r5, fp, pc}
   14e2c:	push	{r4, r5, fp, lr}
   14e30:	add	fp, sp, #8
   14e34:	ldrb	ip, [r0]
   14e38:	mov	r4, #60	; 0x3c
   14e3c:	and	lr, r4, ip, lsl #2
   14e40:	mvn	ip, #0
   14e44:	add	r4, lr, #8
   14e48:	cmp	r4, r1
   14e4c:	bhi	14e80 <__assert_fail@plt+0x3800>
   14e50:	add	r4, r0, lr
   14e54:	str	r0, [r2]
   14e58:	mov	r0, #0
   14e5c:	sub	r1, r1, lr
   14e60:	str	r4, [r3]
   14e64:	ldrh	r5, [r4, #2]
   14e68:	strh	r0, [r4, #2]
   14e6c:	mov	r0, r4
   14e70:	bl	15018 <__assert_fail@plt+0x3998>
   14e74:	subs	ip, r0, r5
   14e78:	strh	r0, [r4, #2]
   14e7c:	movwne	ip, #1
   14e80:	mov	r0, ip
   14e84:	pop	{r4, r5, fp, pc}
   14e88:	push	{r4, sl, fp, lr}
   14e8c:	add	fp, sp, #8
   14e90:	mov	r4, r0
   14e94:	mvn	r0, #0
   14e98:	cmp	r1, #8
   14e9c:	popcc	{r4, sl, fp, pc}
   14ea0:	mov	r0, #8
   14ea4:	str	r0, [r4]
   14ea8:	rev16	r0, r3
   14eac:	strh	r0, [r4, #6]
   14eb0:	rev16	r0, r2
   14eb4:	strh	r0, [r4, #4]
   14eb8:	mov	r0, r4
   14ebc:	bl	15018 <__assert_fail@plt+0x3998>
   14ec0:	strh	r0, [r4, #2]
   14ec4:	mov	r0, #0
   14ec8:	pop	{r4, sl, fp, pc}
   14ecc:	push	{r4, r5, fp, lr}
   14ed0:	add	fp, sp, #8
   14ed4:	ldrb	ip, [r0]
   14ed8:	mov	r4, #60	; 0x3c
   14edc:	and	lr, r4, ip, lsl #2
   14ee0:	mvn	ip, #0
   14ee4:	add	r4, lr, #8
   14ee8:	cmp	r4, r1
   14eec:	bhi	14f20 <__assert_fail@plt+0x38a0>
   14ef0:	add	r4, r0, lr
   14ef4:	str	r0, [r2]
   14ef8:	mov	r0, #0
   14efc:	sub	r1, r1, lr
   14f00:	str	r4, [r3]
   14f04:	ldrh	r5, [r4, #2]
   14f08:	strh	r0, [r4, #2]
   14f0c:	mov	r0, r4
   14f10:	bl	15018 <__assert_fail@plt+0x3998>
   14f14:	subs	ip, r0, r5
   14f18:	strh	r0, [r4, #2]
   14f1c:	movwne	ip, #1
   14f20:	mov	r0, ip
   14f24:	pop	{r4, r5, fp, pc}
   14f28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f2c:	add	fp, sp, #24
   14f30:	sub	sp, sp, #16
   14f34:	mvn	r5, #0
   14f38:	cmp	r1, #20
   14f3c:	bcc	14fcc <__assert_fail@plt+0x394c>
   14f40:	mov	r6, r1
   14f44:	mov	r4, r0
   14f48:	add	r0, sp, #8
   14f4c:	mov	r1, #0
   14f50:	mov	r7, r3
   14f54:	mov	r8, r2
   14f58:	mov	r5, #0
   14f5c:	bl	1147c <gettimeofday@plt>
   14f60:	ldr	r1, [sp, #12]
   14f64:	movw	r2, #19923	; 0x4dd3
   14f68:	ldr	r0, [sp, #8]
   14f6c:	movt	r2, #4194	; 0x1062
   14f70:	smmul	r1, r1, r2
   14f74:	asr	r2, r1, #6
   14f78:	add	r1, r2, r1, lsr #31
   14f7c:	movw	r2, #17671	; 0x4507
   14f80:	movt	r2, #49710	; 0xc22e
   14f84:	smmla	r2, r0, r2, r0
   14f88:	asr	r3, r2, #16
   14f8c:	add	r2, r3, r2, lsr #31
   14f90:	movw	r3, #675	; 0x2a3
   14f94:	mul	r2, r2, r3
   14f98:	mov	r3, r8
   14f9c:	sub	r0, r0, r2, lsl #7
   14fa0:	mov	r2, #1000	; 0x3e8
   14fa4:	mla	r0, r0, r2, r1
   14fa8:	mov	r1, r6
   14fac:	mov	r2, #13
   14fb0:	rev	r0, r0
   14fb4:	str	r0, [r4, #8]
   14fb8:	str	r0, [r4, #12]
   14fbc:	str	r0, [r4, #16]
   14fc0:	mov	r0, r4
   14fc4:	str	r7, [sp]
   14fc8:	bl	14ddc <__assert_fail@plt+0x375c>
   14fcc:	mov	r0, r5
   14fd0:	sub	sp, fp, #24
   14fd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fd8:	push	{r4, sl, fp, lr}
   14fdc:	add	fp, sp, #8
   14fe0:	sub	sp, sp, #8
   14fe4:	mvn	r4, #0
   14fe8:	cmp	r1, #12
   14fec:	bcc	1500c <__assert_fail@plt+0x398c>
   14ff0:	mov	ip, r2
   14ff4:	mov	r4, #0
   14ff8:	mov	r2, #17
   14ffc:	str	r4, [r0, #8]
   15000:	str	r3, [sp]
   15004:	mov	r3, ip
   15008:	bl	14ddc <__assert_fail@plt+0x375c>
   1500c:	mov	r0, r4
   15010:	sub	sp, fp, #8
   15014:	pop	{r4, sl, fp, pc}
   15018:	mov	r3, #0
   1501c:	cmp	r1, #2
   15020:	blt	150d4 <__assert_fail@plt+0x3a54>
   15024:	push	{r4, r5, fp, lr}
   15028:	add	fp, sp, #8
   1502c:	mvn	r2, r1
   15030:	mov	r3, #1
   15034:	sub	lr, r1, #2
   15038:	cmn	r2, #4
   1503c:	mvnle	r2, #3
   15040:	add	r2, r2, r1
   15044:	add	r2, r2, #2
   15048:	add	r3, r3, r2, lsr #1
   1504c:	bic	r2, r2, #1
   15050:	add	ip, r0, r2
   15054:	cmp	r3, #4
   15058:	bcs	15068 <__assert_fail@plt+0x39e8>
   1505c:	mov	r3, #0
   15060:	mov	r4, r0
   15064:	b	150b0 <__assert_fail@plt+0x3a30>
   15068:	and	r5, r3, #3
   1506c:	vmov.i32	q8, #0	; 0x00000000
   15070:	add	r1, r1, r5, lsl #1
   15074:	sub	r3, r3, r5
   15078:	sub	r1, r1, #2
   1507c:	add	r4, r0, r3, lsl #1
   15080:	sub	r1, r1, r2
   15084:	vld1.16	{d18}, [r0]!
   15088:	subs	r3, r3, #4
   1508c:	vaddw.u16	q8, q8, d18
   15090:	bne	15084 <__assert_fail@plt+0x3a04>
   15094:	vext.8	q9, q8, q8, #8
   15098:	cmp	r5, #0
   1509c:	vadd.i32	q8, q8, q9
   150a0:	vdup.32	q9, d16[1]
   150a4:	vadd.i32	q8, q8, q9
   150a8:	vmov.32	r3, d16[0]
   150ac:	beq	150c8 <__assert_fail@plt+0x3a48>
   150b0:	add	r0, r1, #2
   150b4:	ldrh	r1, [r4], #2
   150b8:	sub	r0, r0, #2
   150bc:	cmp	r0, #3
   150c0:	add	r3, r3, r1
   150c4:	bgt	150b4 <__assert_fail@plt+0x3a34>
   150c8:	add	r0, ip, #2
   150cc:	sub	r1, lr, r2
   150d0:	pop	{r4, r5, fp, lr}
   150d4:	cmp	r1, #1
   150d8:	ldrbeq	r0, [r0]
   150dc:	addeq	r3, r3, r0
   150e0:	asr	r0, r3, #16
   150e4:	uxtah	r0, r0, r3
   150e8:	add	r0, r0, r0, lsr #16
   150ec:	mvn	r0, r0
   150f0:	uxth	r0, r0
   150f4:	bx	lr

000150f8 <argp_help@@Base>:
   150f8:	push	{fp, lr}
   150fc:	mov	fp, sp
   15100:	sub	sp, sp, #8
   15104:	mov	ip, r2
   15108:	mov	r2, r1
   1510c:	str	r3, [sp]
   15110:	mov	r1, #0
   15114:	mov	r3, ip
   15118:	bl	15124 <argp_help@@Base+0x2c>
   1511c:	mov	sp, fp
   15120:	pop	{fp, pc}
   15124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15128:	add	fp, sp, #28
   1512c:	sub	sp, sp, #108	; 0x6c
   15130:	cmp	r2, #0
   15134:	str	r1, [fp, #-96]	; 0xffffffa0
   15138:	str	r0, [fp, #-104]	; 0xffffff98
   1513c:	beq	16660 <argp_help@@Base+0x1568>
   15140:	ldr	r0, [fp, #8]
   15144:	mov	r6, r3
   15148:	mov	r4, r2
   1514c:	str	r0, [fp, #-92]	; 0xffffffa4
   15150:	mov	r0, r2
   15154:	bl	11614 <flockfile@plt>
   15158:	movw	r9, #62960	; 0xf5f0
   1515c:	str	r6, [fp, #-128]	; 0xffffff80
   15160:	movt	r9, #2
   15164:	ldr	r0, [r9, #36]	; 0x24
   15168:	cmp	r0, #0
   1516c:	bne	15730 <argp_help@@Base+0x638>
   15170:	movw	r0, #54673	; 0xd591
   15174:	movt	r0, #1
   15178:	bl	11494 <getenv@plt>
   1517c:	mov	r8, r0
   15180:	mov	r0, #32
   15184:	mov	r1, r9
   15188:	add	r3, r9, #16
   1518c:	sub	r2, fp, #88	; 0x58
   15190:	vld1.64	{d16-d17}, [r1], r0
   15194:	vld1.64	{d18-d19}, [r3]
   15198:	add	r7, r2, #16
   1519c:	cmp	r8, #0
   151a0:	vldr	d20, [r1]
   151a4:	mov	r1, r2
   151a8:	vst1.64	{d18-d19}, [r7]
   151ac:	vst1.64	{d16-d17}, [r1], r0
   151b0:	vstr	d20, [r1]
   151b4:	beq	15730 <argp_help@@Base+0x638>
   151b8:	ldrb	r5, [r8]
   151bc:	str	r7, [fp, #-112]	; 0xffffff90
   151c0:	str	r3, [fp, #-108]	; 0xffffff94
   151c4:	str	r4, [fp, #-132]	; 0xffffff7c
   151c8:	cmp	r5, #0
   151cc:	beq	1562c <argp_help@@Base+0x534>
   151d0:	bl	114e8 <__ctype_b_loc@plt>
   151d4:	movw	r7, #55336	; 0xd828
   151d8:	str	r0, [fp, #-100]	; 0xffffff9c
   151dc:	movt	r7, #1
   151e0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   151e4:	uxtb	r1, r5
   151e8:	ldr	r0, [r0]
   151ec:	add	r1, r0, r1, lsl #1
   151f0:	ldrh	r1, [r1]
   151f4:	tst	r1, #8192	; 0x2000
   151f8:	beq	15210 <argp_help@@Base+0x118>
   151fc:	ldrb	r5, [r8, #1]!
   15200:	add	r1, r0, r5, lsl #1
   15204:	ldrh	r1, [r1]
   15208:	tst	r1, #8192	; 0x2000
   1520c:	bne	151fc <argp_help@@Base+0x104>
   15210:	tst	r1, #1024	; 0x400
   15214:	beq	155e8 <argp_help@@Base+0x4f0>
   15218:	mov	r3, r5
   1521c:	mov	r2, r8
   15220:	b	15228 <argp_help@@Base+0x130>
   15224:	ldrb	r3, [r2, #1]!
   15228:	uxtb	r6, r3
   1522c:	add	r1, r0, r6, lsl #1
   15230:	ldrh	r1, [r1]
   15234:	tst	r1, #8
   15238:	bne	15224 <argp_help@@Base+0x12c>
   1523c:	cmp	r6, #95	; 0x5f
   15240:	cmpne	r6, #45	; 0x2d
   15244:	beq	15224 <argp_help@@Base+0x12c>
   15248:	tst	r1, #8192	; 0x2000
   1524c:	mov	r4, r2
   15250:	beq	1526c <argp_help@@Base+0x174>
   15254:	mov	r4, r2
   15258:	ldrb	r3, [r4, #1]!
   1525c:	add	r1, r0, r3, lsl #1
   15260:	ldrh	r1, [r1]
   15264:	tst	r1, #8192	; 0x2000
   15268:	bne	15258 <argp_help@@Base+0x160>
   1526c:	sub	r9, r2, r8
   15270:	uxtb	r2, r3
   15274:	cmp	r2, #0
   15278:	cmpne	r2, #44	; 0x2c
   1527c:	bne	152ec <argp_help@@Base+0x1f4>
   15280:	uxtb	r0, r5
   15284:	mov	r6, #1
   15288:	cmp	r0, #110	; 0x6e
   1528c:	bne	152d4 <argp_help@@Base+0x1dc>
   15290:	ldrb	r0, [r8, #1]
   15294:	mov	r6, #1
   15298:	cmp	r0, #111	; 0x6f
   1529c:	bne	152d4 <argp_help@@Base+0x1dc>
   152a0:	ldrb	r0, [r8, #2]
   152a4:	mov	r6, #1
   152a8:	cmp	r0, #45	; 0x2d
   152ac:	bne	152d4 <argp_help@@Base+0x1dc>
   152b0:	sub	r9, r9, #3
   152b4:	add	r8, r8, #3
   152b8:	mov	sl, #0
   152bc:	mov	r6, #1
   152c0:	mov	r0, r7
   152c4:	bl	11518 <strlen@plt>
   152c8:	cmp	r0, r9
   152cc:	beq	15390 <argp_help@@Base+0x298>
   152d0:	b	153ac <argp_help@@Base+0x2b4>
   152d4:	mov	sl, #1
   152d8:	mov	r0, r7
   152dc:	bl	11518 <strlen@plt>
   152e0:	cmp	r0, r9
   152e4:	beq	15390 <argp_help@@Base+0x298>
   152e8:	b	153ac <argp_help@@Base+0x2b4>
   152ec:	cmp	r2, #61	; 0x3d
   152f0:	bne	15308 <argp_help@@Base+0x210>
   152f4:	ldrb	r1, [r4, #1]!
   152f8:	add	r1, r0, r1, lsl #1
   152fc:	ldrh	r1, [r1]
   15300:	tst	r1, #8192	; 0x2000
   15304:	bne	152f4 <argp_help@@Base+0x1fc>
   15308:	mov	r6, #0
   1530c:	tst	r1, #2048	; 0x800
   15310:	bne	1532c <argp_help@@Base+0x234>
   15314:	mov	sl, #0
   15318:	mov	r0, r7
   1531c:	bl	11518 <strlen@plt>
   15320:	cmp	r0, r9
   15324:	beq	15390 <argp_help@@Base+0x298>
   15328:	b	153ac <argp_help@@Base+0x2b4>
   1532c:	mov	r0, r4
   15330:	mov	r1, #0
   15334:	mov	r2, #10
   15338:	bl	11350 <strtol@plt>
   1533c:	mov	sl, r0
   15340:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15344:	sub	r4, r4, #1
   15348:	ldr	r0, [r0]
   1534c:	ldrb	r1, [r4, #1]!
   15350:	add	r1, r0, r1, lsl #1
   15354:	ldrh	r1, [r1]
   15358:	tst	r1, #2048	; 0x800
   1535c:	bne	1534c <argp_help@@Base+0x254>
   15360:	mov	r6, #0
   15364:	tst	r1, #8192	; 0x2000
   15368:	beq	15380 <argp_help@@Base+0x288>
   1536c:	ldrb	r1, [r4, #1]!
   15370:	add	r1, r0, r1, lsl #1
   15374:	ldrb	r1, [r1, #1]
   15378:	tst	r1, #32
   1537c:	bne	1536c <argp_help@@Base+0x274>
   15380:	mov	r0, r7
   15384:	bl	11518 <strlen@plt>
   15388:	cmp	r0, r9
   1538c:	bne	153ac <argp_help@@Base+0x2b4>
   15390:	mov	r0, r8
   15394:	mov	r1, r7
   15398:	mov	r2, r9
   1539c:	bl	1165c <strncmp@plt>
   153a0:	cmp	r0, #0
   153a4:	mov	r5, r7
   153a8:	beq	1552c <argp_help@@Base+0x434>
   153ac:	add	r5, r7, #16
   153b0:	mov	r0, r5
   153b4:	bl	11518 <strlen@plt>
   153b8:	cmp	r0, r9
   153bc:	bne	153d8 <argp_help@@Base+0x2e0>
   153c0:	mov	r0, r8
   153c4:	mov	r1, r5
   153c8:	mov	r2, r9
   153cc:	bl	1165c <strncmp@plt>
   153d0:	cmp	r0, #0
   153d4:	beq	1552c <argp_help@@Base+0x434>
   153d8:	add	r5, r7, #32
   153dc:	mov	r0, r5
   153e0:	bl	11518 <strlen@plt>
   153e4:	cmp	r0, r9
   153e8:	bne	15404 <argp_help@@Base+0x30c>
   153ec:	mov	r0, r8
   153f0:	mov	r1, r5
   153f4:	mov	r2, r9
   153f8:	bl	1165c <strncmp@plt>
   153fc:	cmp	r0, #0
   15400:	beq	1552c <argp_help@@Base+0x434>
   15404:	add	r5, r7, #48	; 0x30
   15408:	mov	r0, r5
   1540c:	bl	11518 <strlen@plt>
   15410:	cmp	r0, r9
   15414:	bne	15430 <argp_help@@Base+0x338>
   15418:	mov	r0, r8
   1541c:	mov	r1, r5
   15420:	mov	r2, r9
   15424:	bl	1165c <strncmp@plt>
   15428:	cmp	r0, #0
   1542c:	beq	1552c <argp_help@@Base+0x434>
   15430:	add	r5, r7, #64	; 0x40
   15434:	mov	r0, r5
   15438:	bl	11518 <strlen@plt>
   1543c:	cmp	r0, r9
   15440:	bne	1545c <argp_help@@Base+0x364>
   15444:	mov	r0, r8
   15448:	mov	r1, r5
   1544c:	mov	r2, r9
   15450:	bl	1165c <strncmp@plt>
   15454:	cmp	r0, #0
   15458:	beq	1552c <argp_help@@Base+0x434>
   1545c:	add	r5, r7, #80	; 0x50
   15460:	mov	r0, r5
   15464:	bl	11518 <strlen@plt>
   15468:	cmp	r0, r9
   1546c:	bne	15488 <argp_help@@Base+0x390>
   15470:	mov	r0, r8
   15474:	mov	r1, r5
   15478:	mov	r2, r9
   1547c:	bl	1165c <strncmp@plt>
   15480:	cmp	r0, #0
   15484:	beq	1552c <argp_help@@Base+0x434>
   15488:	add	r5, r7, #96	; 0x60
   1548c:	mov	r0, r5
   15490:	bl	11518 <strlen@plt>
   15494:	cmp	r0, r9
   15498:	bne	154b4 <argp_help@@Base+0x3bc>
   1549c:	mov	r0, r8
   154a0:	mov	r1, r5
   154a4:	mov	r2, r9
   154a8:	bl	1165c <strncmp@plt>
   154ac:	cmp	r0, #0
   154b0:	beq	1552c <argp_help@@Base+0x434>
   154b4:	add	r5, r7, #112	; 0x70
   154b8:	mov	r0, r5
   154bc:	bl	11518 <strlen@plt>
   154c0:	cmp	r0, r9
   154c4:	bne	154e0 <argp_help@@Base+0x3e8>
   154c8:	mov	r0, r8
   154cc:	mov	r1, r5
   154d0:	mov	r2, r9
   154d4:	bl	1165c <strncmp@plt>
   154d8:	cmp	r0, #0
   154dc:	beq	1552c <argp_help@@Base+0x434>
   154e0:	add	r5, r7, #128	; 0x80
   154e4:	mov	r0, r5
   154e8:	bl	11518 <strlen@plt>
   154ec:	cmp	r0, r9
   154f0:	bne	1550c <argp_help@@Base+0x414>
   154f4:	mov	r0, r8
   154f8:	mov	r1, r5
   154fc:	mov	r2, r9
   15500:	bl	1165c <strncmp@plt>
   15504:	cmp	r0, #0
   15508:	beq	1552c <argp_help@@Base+0x434>
   1550c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15510:	ldr	r6, [fp, #-128]	; 0xffffff80
   15514:	cmp	r0, #0
   15518:	sub	sp, sp, #8
   1551c:	beq	155c0 <argp_help@@Base+0x4c8>
   15520:	str	r9, [sp]
   15524:	str	r8, [sp, #4]
   15528:	b	155cc <argp_help@@Base+0x4d4>
   1552c:	cmp	r6, #0
   15530:	beq	15540 <argp_help@@Base+0x448>
   15534:	ldrb	r0, [r5, #14]
   15538:	cmp	r0, #0
   1553c:	beq	15578 <argp_help@@Base+0x480>
   15540:	ldrb	r0, [r5, #15]
   15544:	ldr	r6, [fp, #-128]	; 0xffffff80
   15548:	sub	r1, fp, #88	; 0x58
   1554c:	str	sl, [r1, r0]
   15550:	mov	r8, r4
   15554:	movw	r9, #62960	; 0xf5f0
   15558:	ldrb	r0, [r8], #1
   1555c:	movt	r9, #2
   15560:	cmp	r0, #44	; 0x2c
   15564:	movne	r8, r4
   15568:	ldrb	r5, [r8]
   1556c:	cmp	r5, #0
   15570:	bne	151e0 <argp_help@@Base+0xe8>
   15574:	b	1562c <argp_help@@Base+0x534>
   15578:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1557c:	sub	sp, sp, #8
   15580:	cmp	r0, #0
   15584:	beq	15594 <argp_help@@Base+0x49c>
   15588:	str	r9, [sp]
   1558c:	str	r8, [sp, #4]
   15590:	b	155a0 <argp_help@@Base+0x4a8>
   15594:	str	r9, [sp]
   15598:	str	r8, [sp, #4]
   1559c:	mov	r0, #0
   155a0:	movw	r3, #54687	; 0xd59f
   155a4:	mov	r1, #0
   155a8:	mov	r2, #0
   155ac:	movt	r3, #1
   155b0:	bl	16a2c <argp_failure@@Base>
   155b4:	add	sp, sp, #8
   155b8:	ldr	r6, [fp, #-128]	; 0xffffff80
   155bc:	b	15550 <argp_help@@Base+0x458>
   155c0:	str	r9, [sp]
   155c4:	str	r8, [sp, #4]
   155c8:	mov	r0, #0
   155cc:	movw	r3, #54734	; 0xd5ce
   155d0:	mov	r1, #0
   155d4:	mov	r2, #0
   155d8:	movt	r3, #1
   155dc:	bl	16a2c <argp_failure@@Base>
   155e0:	add	sp, sp, #8
   155e4:	b	15550 <argp_help@@Base+0x458>
   155e8:	tst	r5, #255	; 0xff
   155ec:	beq	1562c <argp_help@@Base+0x534>
   155f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   155f4:	sub	sp, sp, #8
   155f8:	cmp	r0, #0
   155fc:	beq	1560c <argp_help@@Base+0x514>
   15600:	movw	r3, #54772	; 0xd5f4
   15604:	str	r8, [sp]
   15608:	b	15618 <argp_help@@Base+0x520>
   1560c:	movw	r3, #54772	; 0xd5f4
   15610:	str	r8, [sp]
   15614:	mov	r0, #0
   15618:	movt	r3, #1
   1561c:	mov	r1, #0
   15620:	mov	r2, #0
   15624:	bl	16a2c <argp_failure@@Base>
   15628:	add	sp, sp, #8
   1562c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15630:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15634:	movw	r0, #55336	; 0xd828
   15638:	movt	r0, #1
   1563c:	cmp	r2, r1
   15640:	bge	156c4 <argp_help@@Base+0x5cc>
   15644:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15648:	cmp	r2, r1
   1564c:	bge	156cc <argp_help@@Base+0x5d4>
   15650:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15654:	cmp	r2, r1
   15658:	bge	156d4 <argp_help@@Base+0x5dc>
   1565c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15660:	cmp	r2, r1
   15664:	bge	156dc <argp_help@@Base+0x5e4>
   15668:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1566c:	cmp	r2, r1
   15670:	bge	156e4 <argp_help@@Base+0x5ec>
   15674:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15678:	ldr	r4, [fp, #-132]	; 0xffffff7c
   1567c:	cmp	r2, r1
   15680:	bge	167f4 <argp_help@@Base+0x16fc>
   15684:	ldr	r0, [fp, #-112]	; 0xffffff90
   15688:	sub	r1, fp, #88	; 0x58
   1568c:	mov	r2, r1
   15690:	mov	r1, r9
   15694:	vld1.64	{d16-d17}, [r0]
   15698:	mov	r0, #32
   1569c:	vld1.64	{d18-d19}, [r2], r0
   156a0:	ldr	r0, [fp, #-108]	; 0xffffff94
   156a4:	vst1.64	{d16-d17}, [r0]
   156a8:	mov	r0, #36	; 0x24
   156ac:	vst1.64	{d18-d19}, [r1], r0
   156b0:	mov	r0, #1
   156b4:	str	r0, [r1]
   156b8:	ldr	r0, [r2]
   156bc:	str	r0, [r9, #32]
   156c0:	b	15730 <argp_help@@Base+0x638>
   156c4:	add	r2, r0, #32
   156c8:	b	156e8 <argp_help@@Base+0x5f0>
   156cc:	add	r2, r0, #48	; 0x30
   156d0:	b	156e8 <argp_help@@Base+0x5f0>
   156d4:	add	r2, r0, #64	; 0x40
   156d8:	b	156e8 <argp_help@@Base+0x5f0>
   156dc:	add	r2, r0, #80	; 0x50
   156e0:	b	156e8 <argp_help@@Base+0x5f0>
   156e4:	add	r2, r0, #96	; 0x60
   156e8:	ldr	r4, [fp, #-132]	; 0xffffff7c
   156ec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   156f0:	sub	sp, sp, #8
   156f4:	movw	r1, #54853	; 0xd645
   156f8:	cmp	r0, #0
   156fc:	movt	r1, #1
   15700:	beq	15710 <argp_help@@Base+0x618>
   15704:	movw	r3, #54801	; 0xd611
   15708:	stm	sp, {r1, r2}
   1570c:	b	1571c <argp_help@@Base+0x624>
   15710:	movw	r3, #54801	; 0xd611
   15714:	stm	sp, {r1, r2}
   15718:	mov	r0, #0
   1571c:	movt	r3, #1
   15720:	mov	r1, #0
   15724:	mov	r2, #0
   15728:	bl	16a2c <argp_failure@@Base>
   1572c:	add	sp, sp, #8
   15730:	ldr	r2, [r9, #32]
   15734:	mov	r0, r4
   15738:	mov	r1, #0
   1573c:	mov	r3, #0
   15740:	mov	r5, #0
   15744:	bl	1ac08 <argp_parse@@Base+0x21c4>
   15748:	cmp	r0, #0
   1574c:	beq	157ec <argp_help@@Base+0x6f4>
   15750:	mov	sl, r0
   15754:	tst	r6, #11
   15758:	str	r4, [fp, #-132]	; 0xffffff7c
   1575c:	beq	158c8 <argp_help@@Base+0x7d0>
   15760:	ldr	r0, [fp, #-104]	; 0xffffff98
   15764:	mov	r1, #0
   15768:	bl	16c70 <argp_failure@@Base+0x244>
   1576c:	ldr	r9, [r0, #4]
   15770:	mov	r5, r0
   15774:	cmp	r9, #0
   15778:	beq	16668 <argp_help@@Base+0x1570>
   1577c:	ldr	r6, [r5]
   15780:	movw	r4, #54573	; 0xd52d
   15784:	str	r5, [fp, #-108]	; 0xffffff94
   15788:	mov	r5, r9
   1578c:	movt	r4, #1
   15790:	str	r6, [fp, #-100]	; 0xffffff9c
   15794:	ldr	r7, [r6, #4]
   15798:	cmp	r7, #0
   1579c:	beq	157dc <argp_help@@Base+0x6e4>
   157a0:	ldr	r0, [r6]
   157a4:	add	r8, r0, #12
   157a8:	ldr	r0, [r8, #-12]
   157ac:	cmp	r0, #0
   157b0:	beq	157d0 <argp_help@@Base+0x6d8>
   157b4:	ldrb	r1, [r8]
   157b8:	tst	r1, #2
   157bc:	bne	157d0 <argp_help@@Base+0x6d8>
   157c0:	mov	r1, r4
   157c4:	bl	11344 <strcmp@plt>
   157c8:	cmp	r0, #0
   157cc:	beq	157fc <argp_help@@Base+0x704>
   157d0:	subs	r7, r7, #1
   157d4:	add	r8, r8, #24
   157d8:	bne	157a8 <argp_help@@Base+0x6b0>
   157dc:	subs	r5, r5, #1
   157e0:	add	r6, r6, #28
   157e4:	bne	15794 <argp_help@@Base+0x69c>
   157e8:	b	15808 <argp_help@@Base+0x710>
   157ec:	mov	r0, r4
   157f0:	sub	sp, fp, #28
   157f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157f8:	b	11464 <funlockfile@plt>
   157fc:	cmp	r6, #0
   15800:	mvnne	r0, #0
   15804:	strne	r0, [r6, #12]
   15808:	ldr	r6, [fp, #-100]	; 0xffffff9c
   1580c:	movw	r4, #55920	; 0xda70
   15810:	mov	r8, r9
   15814:	movt	r4, #1
   15818:	ldr	r7, [r6, #4]
   1581c:	cmp	r7, #0
   15820:	beq	15860 <argp_help@@Base+0x768>
   15824:	ldr	r0, [r6]
   15828:	add	r5, r0, #12
   1582c:	ldr	r0, [r5, #-12]
   15830:	cmp	r0, #0
   15834:	beq	15854 <argp_help@@Base+0x75c>
   15838:	ldrb	r1, [r5]
   1583c:	tst	r1, #2
   15840:	bne	15854 <argp_help@@Base+0x75c>
   15844:	mov	r1, r4
   15848:	bl	11344 <strcmp@plt>
   1584c:	cmp	r0, #0
   15850:	beq	15870 <argp_help@@Base+0x778>
   15854:	subs	r7, r7, #1
   15858:	add	r5, r5, #24
   1585c:	bne	1582c <argp_help@@Base+0x734>
   15860:	subs	r8, r8, #1
   15864:	add	r6, r6, #28
   15868:	bne	15818 <argp_help@@Base+0x720>
   1586c:	b	1587c <argp_help@@Base+0x784>
   15870:	cmp	r6, #0
   15874:	mvnne	r0, #0
   15878:	strne	r0, [r6, #12]
   1587c:	cmp	r9, #0
   15880:	beq	158b8 <argp_help@@Base+0x7c0>
   15884:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15888:	mov	r1, #0
   1588c:	add	r0, r0, #24
   15890:	str	r1, [r0], #28
   15894:	add	r1, r1, #1
   15898:	cmp	r9, r1
   1589c:	bne	15890 <argp_help@@Base+0x798>
   158a0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   158a4:	movw	r3, #32716	; 0x7fcc
   158a8:	mov	r1, r9
   158ac:	mov	r2, #28
   158b0:	movt	r3, #1
   158b4:	bl	1162c <qsort@plt>
   158b8:	ldr	r6, [fp, #-128]	; 0xffffff80
   158bc:	ldr	r5, [fp, #-108]	; 0xffffff94
   158c0:	movw	r9, #62960	; 0xf5f0
   158c4:	movt	r9, #2
   158c8:	tst	r6, #3
   158cc:	str	r5, [fp, #-108]	; 0xffffff94
   158d0:	beq	1667c <argp_help@@Base+0x1584>
   158d4:	ldr	r1, [fp, #-104]	; 0xffffff98
   158d8:	ldr	r0, [r1, #8]
   158dc:	ldr	r1, [r1, #16]
   158e0:	bl	173c8 <argp_failure@@Base+0x99c>
   158e4:	mov	r2, r0
   158e8:	add	r0, r0, #7
   158ec:	bic	r0, r0, #7
   158f0:	sub	r0, sp, r0
   158f4:	mov	sp, r0
   158f8:	mov	r1, #0
   158fc:	str	r0, [fp, #-100]	; 0xffffff9c
   15900:	bl	1156c <memset@plt>
   15904:	mov	r7, #1
   15908:	ldr	r1, [sl, #24]
   1590c:	ldr	r2, [sl, #28]
   15910:	ldr	r0, [sl, #16]
   15914:	mov	r5, r6
   15918:	ldr	r6, [r9, #28]
   1591c:	sub	r1, r2, r1
   15920:	cmp	r1, r0
   15924:	bls	15930 <argp_help@@Base+0x838>
   15928:	mov	r0, sl
   1592c:	bl	1accc <argp_parse@@Base+0x2288>
   15930:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15934:	ldr	r4, [sl, #12]
   15938:	movw	r1, #54578	; 0xd532
   1593c:	str	r6, [sl, #12]
   15940:	tst	r7, #1
   15944:	movt	r1, #1
   15948:	str	r0, [fp, #-88]	; 0xffffffa8
   1594c:	mov	r0, sl
   15950:	beq	15960 <argp_help@@Base+0x868>
   15954:	movw	r2, #54584	; 0xd538
   15958:	movt	r2, #1
   1595c:	b	15968 <argp_help@@Base+0x870>
   15960:	movw	r2, #54591	; 0xd53f
   15964:	movt	r2, #1
   15968:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1596c:	bl	1b360 <argp_parse@@Base+0x291c>
   15970:	ldr	r1, [sl, #24]
   15974:	ldr	r2, [sl, #28]
   15978:	ldr	r0, [sl, #16]
   1597c:	ldr	r6, [r9, #28]
   15980:	sub	r1, r2, r1
   15984:	cmp	r1, r0
   15988:	bls	15994 <argp_help@@Base+0x89c>
   1598c:	mov	r0, sl
   15990:	bl	1accc <argp_parse@@Base+0x2288>
   15994:	ldr	r8, [sl, #4]
   15998:	str	r6, [sl, #4]
   1599c:	mov	r6, r5
   159a0:	tst	r5, #2
   159a4:	bne	159bc <argp_help@@Base+0x8c4>
   159a8:	ldr	r0, [fp, #-108]	; 0xffffff94
   159ac:	mov	r1, sl
   159b0:	bl	17440 <argp_failure@@Base+0xa14>
   159b4:	orr	r6, r6, #2
   159b8:	b	15a20 <argp_help@@Base+0x928>
   159bc:	ldr	r0, [fp, #-108]	; 0xffffff94
   159c0:	ldr	r0, [r0, #4]
   159c4:	cmp	r0, #0
   159c8:	beq	15a20 <argp_help@@Base+0x928>
   159cc:	ldr	r0, [sl, #28]
   159d0:	ldr	r1, [sl, #32]
   159d4:	add	r2, r0, #12
   159d8:	cmp	r2, r1
   159dc:	bls	159f8 <argp_help@@Base+0x900>
   159e0:	mov	r0, sl
   159e4:	mov	r1, #12
   159e8:	bl	1b274 <argp_parse@@Base+0x2830>
   159ec:	cmp	r0, #0
   159f0:	beq	15a20 <argp_help@@Base+0x928>
   159f4:	ldr	r0, [sl, #28]
   159f8:	movw	r1, #55320	; 0xd818
   159fc:	movt	r1, #1
   15a00:	vldr	d16, [r1]
   15a04:	movw	r1, #11822	; 0x2e2e
   15a08:	movt	r1, #23854	; 0x5d2e
   15a0c:	str	r1, [r0, #8]
   15a10:	vst1.8	{d16}, [r0]
   15a14:	ldr	r0, [sl, #28]
   15a18:	add	r0, r0, #12
   15a1c:	str	r0, [sl, #28]
   15a20:	sub	sp, sp, #8
   15a24:	str	sl, [sp]
   15a28:	sub	r2, fp, #88	; 0x58
   15a2c:	mov	r3, #1
   15a30:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a34:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15a38:	bl	177fc <argp_failure@@Base+0xdd0>
   15a3c:	add	sp, sp, #8
   15a40:	mov	r9, r0
   15a44:	ldr	r2, [sl, #24]
   15a48:	ldr	r0, [sl, #28]
   15a4c:	ldr	r1, [sl, #16]
   15a50:	sub	r2, r0, r2
   15a54:	cmp	r2, r1
   15a58:	bls	15a94 <argp_help@@Base+0x99c>
   15a5c:	mov	r0, sl
   15a60:	bl	1accc <argp_parse@@Base+0x2288>
   15a64:	ldr	r2, [sl, #24]
   15a68:	ldr	r0, [sl, #28]
   15a6c:	ldr	r1, [sl, #16]
   15a70:	sub	r2, r0, r2
   15a74:	cmp	r2, r1
   15a78:	str	r4, [sl, #12]
   15a7c:	bhi	15aa0 <argp_help@@Base+0x9a8>
   15a80:	str	r8, [sl, #4]
   15a84:	ldr	r1, [sl, #32]
   15a88:	cmp	r0, r1
   15a8c:	bcs	15abc <argp_help@@Base+0x9c4>
   15a90:	b	15ad4 <argp_help@@Base+0x9dc>
   15a94:	cmp	r2, r1
   15a98:	str	r4, [sl, #12]
   15a9c:	bls	15a80 <argp_help@@Base+0x988>
   15aa0:	mov	r0, sl
   15aa4:	bl	1accc <argp_parse@@Base+0x2288>
   15aa8:	ldr	r0, [sl, #28]
   15aac:	str	r8, [sl, #4]
   15ab0:	ldr	r1, [sl, #32]
   15ab4:	cmp	r0, r1
   15ab8:	bcc	15ad4 <argp_help@@Base+0x9dc>
   15abc:	mov	r0, sl
   15ac0:	mov	r1, #1
   15ac4:	bl	1b274 <argp_parse@@Base+0x2830>
   15ac8:	cmp	r0, #0
   15acc:	beq	15ae4 <argp_help@@Base+0x9ec>
   15ad0:	ldr	r0, [sl, #28]
   15ad4:	add	r1, r0, #1
   15ad8:	str	r1, [sl, #28]
   15adc:	mov	r1, #10
   15ae0:	strb	r1, [r0]
   15ae4:	cmp	r9, #0
   15ae8:	movw	r9, #62960	; 0xf5f0
   15aec:	mov	r7, #0
   15af0:	movt	r9, #2
   15af4:	bne	15908 <argp_help@@Base+0x810>
   15af8:	mov	r5, #1
   15afc:	tst	r6, #16
   15b00:	beq	15b2c <argp_help@@Base+0xa34>
   15b04:	sub	sp, sp, #8
   15b08:	mov	r0, #1
   15b0c:	mov	r2, #0
   15b10:	mov	r3, #0
   15b14:	stm	sp, {r0, sl}
   15b18:	ldr	r0, [fp, #-104]	; 0xffffff98
   15b1c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15b20:	bl	17adc <argp_failure@@Base+0x10b0>
   15b24:	add	sp, sp, #8
   15b28:	orr	r5, r0, r5
   15b2c:	tst	r6, #4
   15b30:	bne	16540 <argp_help@@Base+0x1448>
   15b34:	tst	r6, #8
   15b38:	beq	16564 <argp_help@@Base+0x146c>
   15b3c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b40:	ldr	r1, [r0, #4]
   15b44:	cmp	r1, #0
   15b48:	beq	16564 <argp_help@@Base+0x146c>
   15b4c:	str	r6, [fp, #-128]	; 0xffffff80
   15b50:	cmp	r5, #0
   15b54:	ldr	r4, [fp, #-108]	; 0xffffff94
   15b58:	beq	15b98 <argp_help@@Base+0xaa0>
   15b5c:	ldr	r0, [sl, #28]
   15b60:	ldr	r1, [sl, #32]
   15b64:	cmp	r0, r1
   15b68:	bcc	15b84 <argp_help@@Base+0xa8c>
   15b6c:	mov	r0, sl
   15b70:	mov	r1, #1
   15b74:	bl	1b274 <argp_parse@@Base+0x2830>
   15b78:	cmp	r0, #0
   15b7c:	beq	15b94 <argp_help@@Base+0xa9c>
   15b80:	ldr	r0, [sl, #28]
   15b84:	add	r1, r0, #1
   15b88:	str	r1, [sl, #28]
   15b8c:	mov	r1, #10
   15b90:	strb	r1, [r0]
   15b94:	ldr	r1, [r4, #4]
   15b98:	ldr	r5, [r4]
   15b9c:	mov	r0, #0
   15ba0:	cmp	r1, #0
   15ba4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ba8:	str	r0, [fp, #-48]	; 0xffffffd0
   15bac:	str	r0, [fp, #-40]	; 0xffffffd8
   15bb0:	beq	1652c <argp_help@@Base+0x1434>
   15bb4:	add	r0, sl, #28
   15bb8:	str	r0, [fp, #-100]	; 0xffffff9c
   15bbc:	ldr	r0, [r5, #8]
   15bc0:	str	r1, [fp, #-116]	; 0xffffff8c
   15bc4:	ldr	r1, [sl, #24]
   15bc8:	ldr	r2, [sl, #28]
   15bcc:	ldr	r4, [r5]
   15bd0:	str	r0, [fp, #-92]	; 0xffffffa4
   15bd4:	ldr	r0, [sl, #16]
   15bd8:	sub	r1, r2, r1
   15bdc:	cmp	r1, r0
   15be0:	bls	15bec <argp_help@@Base+0xaf4>
   15be4:	mov	r0, sl
   15be8:	bl	1accc <argp_parse@@Base+0x2288>
   15bec:	mov	r7, #0
   15bf0:	sub	r0, fp, #48	; 0x30
   15bf4:	ldr	r2, [sl, #4]
   15bf8:	ldr	r1, [sl, #12]
   15bfc:	mov	r8, r4
   15c00:	str	r7, [sl, #4]
   15c04:	str	sl, [fp, #-84]	; 0xffffffac
   15c08:	str	r5, [fp, #-88]	; 0xffffffa8
   15c0c:	str	r0, [fp, #-80]	; 0xffffffb0
   15c10:	mov	r0, #1
   15c14:	str	r0, [fp, #-76]	; 0xffffffb4
   15c18:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15c1c:	str	r1, [fp, #-120]	; 0xffffff88
   15c20:	str	r2, [fp, #-124]	; 0xffffff84
   15c24:	str	r0, [fp, #-72]	; 0xffffffb8
   15c28:	ldrb	r0, [r4, #12]
   15c2c:	tst	r0, #8
   15c30:	bne	15c70 <argp_help@@Base+0xb78>
   15c34:	ldr	r0, [r5, #4]
   15c38:	cmp	r0, #0
   15c3c:	beq	15c70 <argp_help@@Base+0xb78>
   15c40:	add	r1, r4, #12
   15c44:	ldr	r2, [r1, #-12]
   15c48:	cmp	r2, #0
   15c4c:	beq	15c5c <argp_help@@Base+0xb64>
   15c50:	ldrb	r2, [r1]
   15c54:	tst	r2, #2
   15c58:	beq	15c6c <argp_help@@Base+0xb74>
   15c5c:	add	r1, r1, #24
   15c60:	subs	r0, r0, #1
   15c64:	bne	15c44 <argp_help@@Base+0xb4c>
   15c68:	b	15c70 <argp_help@@Base+0xb78>
   15c6c:	mov	r7, #1
   15c70:	ldr	r1, [sl, #24]
   15c74:	ldr	r2, [sl, #28]
   15c78:	ldr	r0, [sl, #16]
   15c7c:	ldr	r4, [r9, #8]
   15c80:	sub	r1, r2, r1
   15c84:	cmp	r1, r0
   15c88:	bls	15c94 <argp_help@@Base+0xb9c>
   15c8c:	mov	r0, sl
   15c90:	bl	1accc <argp_parse@@Base+0x2288>
   15c94:	str	r4, [sl, #12]
   15c98:	mov	r4, r8
   15c9c:	str	r5, [fp, #-112]	; 0xffffff90
   15ca0:	ldr	r6, [r5, #4]
   15ca4:	cmp	r6, #0
   15ca8:	beq	15f88 <argp_help@@Base+0xe90>
   15cac:	cmp	r7, #0
   15cb0:	beq	15e38 <argp_help@@Base+0xd40>
   15cb4:	add	r7, r4, #12
   15cb8:	ldr	r5, [r7]
   15cbc:	tst	r5, #8
   15cc0:	bne	15cf0 <argp_help@@Base+0xbf8>
   15cc4:	ldr	r4, [r7, #-8]
   15cc8:	sub	r0, r4, #1
   15ccc:	cmp	r0, #254	; 0xfe
   15cd0:	bhi	15d00 <argp_help@@Base+0xc08>
   15cd4:	bl	114e8 <__ctype_b_loc@plt>
   15cd8:	ldr	r0, [r0]
   15cdc:	add	r0, r0, r4, lsl #1
   15ce0:	ldrb	r0, [r0, #1]
   15ce4:	tst	r0, #64	; 0x40
   15ce8:	bne	15d14 <argp_help@@Base+0xc1c>
   15cec:	mov	r4, r8
   15cf0:	add	r7, r7, #24
   15cf4:	subs	r6, r6, #1
   15cf8:	bne	15cb8 <argp_help@@Base+0xbc0>
   15cfc:	b	15f88 <argp_help@@Base+0xe90>
   15d00:	mov	r4, r8
   15d04:	add	r7, r7, #24
   15d08:	subs	r6, r6, #1
   15d0c:	bne	15cb8 <argp_help@@Base+0xbc0>
   15d10:	b	15f88 <argp_help@@Base+0xe90>
   15d14:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15d18:	ldrb	r0, [r0]
   15d1c:	cmp	r4, r0
   15d20:	bne	15dfc <argp_help@@Base+0xd04>
   15d24:	tst	r5, #2
   15d28:	mov	r4, r8
   15d2c:	bne	15e1c <argp_help@@Base+0xd24>
   15d30:	ldr	r0, [r9, #8]
   15d34:	sub	r1, fp, #88	; 0x58
   15d38:	bl	18590 <argp_failure@@Base+0x1b64>
   15d3c:	ldr	r0, [sl, #28]
   15d40:	ldr	r1, [sl, #32]
   15d44:	cmp	r0, r1
   15d48:	bcc	15d68 <argp_help@@Base+0xc70>
   15d4c:	mov	r0, sl
   15d50:	mov	r1, #1
   15d54:	bl	1b274 <argp_parse@@Base+0x2830>
   15d58:	cmp	r0, #0
   15d5c:	beq	15d7c <argp_help@@Base+0xc84>
   15d60:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15d64:	ldr	r0, [r0]
   15d68:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15d6c:	add	r1, r0, #1
   15d70:	str	r1, [r2]
   15d74:	mov	r1, #45	; 0x2d
   15d78:	strb	r1, [r0]
   15d7c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15d80:	ldr	r0, [sl, #28]
   15d84:	ldr	r1, [sl, #32]
   15d88:	ldrb	r5, [r2]
   15d8c:	cmp	r0, r1
   15d90:	bcc	15db0 <argp_help@@Base+0xcb8>
   15d94:	mov	r0, sl
   15d98:	mov	r1, #1
   15d9c:	bl	1b274 <argp_parse@@Base+0x2830>
   15da0:	cmp	r0, #0
   15da4:	beq	15dc0 <argp_help@@Base+0xcc8>
   15da8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15dac:	ldr	r0, [r0]
   15db0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15db4:	add	r1, r0, #1
   15db8:	str	r1, [r2]
   15dbc:	strb	r5, [r0]
   15dc0:	ldr	r0, [r9]
   15dc4:	ldr	r2, [r4, #8]
   15dc8:	cmp	r0, #0
   15dcc:	beq	15e10 <argp_help@@Base+0xd18>
   15dd0:	cmp	r2, #0
   15dd4:	beq	15e1c <argp_help@@Base+0xd24>
   15dd8:	ldrb	r0, [r4, #12]
   15ddc:	tst	r0, #1
   15de0:	mov	r0, sl
   15de4:	movweq	r1, #54797	; 0xd60d
   15de8:	movteq	r1, #1
   15dec:	movwne	r1, #55293	; 0xd7fd
   15df0:	movtne	r1, #1
   15df4:	bl	1b360 <argp_parse@@Base+0x291c>
   15df8:	b	15e1c <argp_help@@Base+0xd24>
   15dfc:	mov	r4, r8
   15e00:	add	r7, r7, #24
   15e04:	subs	r6, r6, #1
   15e08:	bne	15cb8 <argp_help@@Base+0xbc0>
   15e0c:	b	15f88 <argp_help@@Base+0xe90>
   15e10:	cmp	r2, #0
   15e14:	movne	r0, #1
   15e18:	strne	r0, [fp, #-40]	; 0xffffffd8
   15e1c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15e20:	add	r0, r0, #1
   15e24:	str	r0, [fp, #-92]	; 0xffffffa4
   15e28:	add	r7, r7, #24
   15e2c:	subs	r6, r6, #1
   15e30:	bne	15cb8 <argp_help@@Base+0xbc0>
   15e34:	b	15f88 <argp_help@@Base+0xe90>
   15e38:	add	r7, r4, #12
   15e3c:	ldr	r5, [r7]
   15e40:	tst	r5, #8
   15e44:	bne	15f50 <argp_help@@Base+0xe58>
   15e48:	ldr	r9, [r7, #-8]
   15e4c:	sub	r0, r9, #1
   15e50:	cmp	r0, #254	; 0xfe
   15e54:	bhi	15f48 <argp_help@@Base+0xe50>
   15e58:	bl	114e8 <__ctype_b_loc@plt>
   15e5c:	ldr	r0, [r0]
   15e60:	add	r0, r0, r9, lsl #1
   15e64:	ldrb	r0, [r0, #1]
   15e68:	tst	r0, #64	; 0x40
   15e6c:	beq	15f48 <argp_help@@Base+0xe50>
   15e70:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15e74:	ldrb	r0, [r0]
   15e78:	cmp	r9, r0
   15e7c:	bne	15f48 <argp_help@@Base+0xe50>
   15e80:	movw	r9, #62960	; 0xf5f0
   15e84:	tst	r5, #2
   15e88:	movt	r9, #2
   15e8c:	bne	15f70 <argp_help@@Base+0xe78>
   15e90:	ldr	r0, [r9, #8]
   15e94:	sub	r1, fp, #88	; 0x58
   15e98:	bl	18590 <argp_failure@@Base+0x1b64>
   15e9c:	ldr	r0, [sl, #28]
   15ea0:	ldr	r1, [sl, #32]
   15ea4:	cmp	r0, r1
   15ea8:	bcc	15ec8 <argp_help@@Base+0xdd0>
   15eac:	mov	r0, sl
   15eb0:	mov	r1, #1
   15eb4:	bl	1b274 <argp_parse@@Base+0x2830>
   15eb8:	cmp	r0, #0
   15ebc:	beq	15edc <argp_help@@Base+0xde4>
   15ec0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15ec4:	ldr	r0, [r0]
   15ec8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15ecc:	add	r1, r0, #1
   15ed0:	str	r1, [r2]
   15ed4:	mov	r1, #45	; 0x2d
   15ed8:	strb	r1, [r0]
   15edc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15ee0:	ldr	r0, [sl, #28]
   15ee4:	ldr	r1, [sl, #32]
   15ee8:	ldrb	r5, [r2]
   15eec:	cmp	r0, r1
   15ef0:	bcc	15f10 <argp_help@@Base+0xe18>
   15ef4:	mov	r0, sl
   15ef8:	mov	r1, #1
   15efc:	bl	1b274 <argp_parse@@Base+0x2830>
   15f00:	cmp	r0, #0
   15f04:	beq	15f20 <argp_help@@Base+0xe28>
   15f08:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15f0c:	ldr	r0, [r0]
   15f10:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15f14:	add	r1, r0, #1
   15f18:	str	r1, [r2]
   15f1c:	strb	r5, [r0]
   15f20:	ldr	r2, [r4, #8]
   15f24:	cmp	r2, #0
   15f28:	beq	15f70 <argp_help@@Base+0xe78>
   15f2c:	ldrb	r0, [r4, #12]
   15f30:	tst	r0, #1
   15f34:	bne	15f60 <argp_help@@Base+0xe68>
   15f38:	movw	r1, #54797	; 0xd60d
   15f3c:	mov	r0, sl
   15f40:	movt	r1, #1
   15f44:	b	15f6c <argp_help@@Base+0xe74>
   15f48:	movw	r9, #62960	; 0xf5f0
   15f4c:	movt	r9, #2
   15f50:	add	r7, r7, #24
   15f54:	subs	r6, r6, #1
   15f58:	bne	15e3c <argp_help@@Base+0xd44>
   15f5c:	b	15f88 <argp_help@@Base+0xe90>
   15f60:	movw	r1, #55293	; 0xd7fd
   15f64:	mov	r0, sl
   15f68:	movt	r1, #1
   15f6c:	bl	1b360 <argp_parse@@Base+0x291c>
   15f70:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15f74:	add	r0, r0, #1
   15f78:	str	r0, [fp, #-92]	; 0xffffffa4
   15f7c:	add	r7, r7, #24
   15f80:	subs	r6, r6, #1
   15f84:	bne	15e3c <argp_help@@Base+0xd44>
   15f88:	ldrb	r0, [r4, #12]
   15f8c:	tst	r0, #8
   15f90:	bne	16054 <argp_help@@Base+0xf5c>
   15f94:	ldr	r1, [sl, #24]
   15f98:	ldr	r2, [sl, #28]
   15f9c:	ldr	r0, [sl, #16]
   15fa0:	ldr	r4, [r9, #12]
   15fa4:	sub	r1, r2, r1
   15fa8:	cmp	r1, r0
   15fac:	bls	15fb8 <argp_help@@Base+0xec0>
   15fb0:	mov	r0, sl
   15fb4:	bl	1accc <argp_parse@@Base+0x2288>
   15fb8:	ldr	r0, [fp, #-112]	; 0xffffff90
   15fbc:	str	r4, [sl, #12]
   15fc0:	mov	r4, r8
   15fc4:	ldr	r5, [r0, #4]
   15fc8:	cmp	r5, #0
   15fcc:	beq	16128 <argp_help@@Base+0x1030>
   15fd0:	add	r6, r4, #12
   15fd4:	ldr	r0, [r6, #-12]
   15fd8:	cmp	r0, #0
   15fdc:	beq	16044 <argp_help@@Base+0xf4c>
   15fe0:	ldrb	r0, [r6]
   15fe4:	tst	r0, #2
   15fe8:	bne	16044 <argp_help@@Base+0xf4c>
   15fec:	ldr	r0, [r9, #12]
   15ff0:	sub	r1, fp, #88	; 0x58
   15ff4:	bl	18590 <argp_failure@@Base+0x1b64>
   15ff8:	ldr	r2, [r6, #-12]
   15ffc:	movw	r1, #55298	; 0xd802
   16000:	mov	r0, sl
   16004:	movt	r1, #1
   16008:	bl	1b360 <argp_parse@@Base+0x291c>
   1600c:	ldr	r2, [r4, #8]
   16010:	cmp	r2, #0
   16014:	beq	16044 <argp_help@@Base+0xf4c>
   16018:	ldrb	r0, [r4, #12]
   1601c:	tst	r0, #1
   16020:	bne	16034 <argp_help@@Base+0xf3c>
   16024:	movw	r1, #55303	; 0xd807
   16028:	mov	r0, sl
   1602c:	movt	r1, #1
   16030:	b	16040 <argp_help@@Base+0xf48>
   16034:	movw	r1, #55307	; 0xd80b
   16038:	mov	r0, sl
   1603c:	movt	r1, #1
   16040:	bl	1b360 <argp_parse@@Base+0x291c>
   16044:	add	r6, r6, #24
   16048:	subs	r5, r5, #1
   1604c:	bne	15fd4 <argp_help@@Base+0xedc>
   16050:	b	16128 <argp_help@@Base+0x1030>
   16054:	ldr	r1, [sl, #24]
   16058:	ldr	r2, [sl, #28]
   1605c:	ldr	r0, [sl, #16]
   16060:	ldr	r4, [r9, #16]
   16064:	sub	r1, r2, r1
   16068:	cmp	r1, r0
   1606c:	bls	16078 <argp_help@@Base+0xf80>
   16070:	mov	r0, sl
   16074:	bl	1accc <argp_parse@@Base+0x2288>
   16078:	ldr	r0, [fp, #-112]	; 0xffffff90
   1607c:	str	r4, [sl, #12]
   16080:	mov	r4, r8
   16084:	ldr	r6, [r0, #4]
   16088:	cmp	r6, #0
   1608c:	beq	16128 <argp_help@@Base+0x1030>
   16090:	add	r8, r4, #12
   16094:	ldr	r0, [r8, #-12]
   16098:	cmp	r0, #0
   1609c:	beq	1611c <argp_help@@Base+0x1024>
   160a0:	ldrb	r0, [r8]
   160a4:	tst	r0, #2
   160a8:	bne	1611c <argp_help@@Base+0x1024>
   160ac:	ldr	r0, [r9, #16]
   160b0:	sub	r1, fp, #88	; 0x58
   160b4:	bl	18590 <argp_failure@@Base+0x1b64>
   160b8:	ldr	r5, [r8, #-12]
   160bc:	mov	r0, r5
   160c0:	bl	11518 <strlen@plt>
   160c4:	cmp	r0, #0
   160c8:	beq	1611c <argp_help@@Base+0x1024>
   160cc:	mov	r7, r0
   160d0:	ldr	r0, [sl, #28]
   160d4:	ldr	r1, [sl, #32]
   160d8:	add	r2, r0, r7
   160dc:	cmp	r2, r1
   160e0:	bls	16100 <argp_help@@Base+0x1008>
   160e4:	mov	r0, sl
   160e8:	mov	r1, r7
   160ec:	bl	1b274 <argp_parse@@Base+0x2830>
   160f0:	cmp	r0, #0
   160f4:	beq	1611c <argp_help@@Base+0x1024>
   160f8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   160fc:	ldr	r0, [r0]
   16100:	mov	r1, r5
   16104:	mov	r2, r7
   16108:	bl	113d4 <memcpy@plt>
   1610c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16110:	ldr	r0, [r1]
   16114:	add	r0, r0, r7
   16118:	str	r0, [r1]
   1611c:	add	r8, r8, #24
   16120:	subs	r6, r6, #1
   16124:	bne	16094 <argp_help@@Base+0xf9c>
   16128:	ldr	r1, [sl, #24]
   1612c:	ldr	r2, [sl, #28]
   16130:	ldr	r0, [sl, #16]
   16134:	sub	r1, r2, r1
   16138:	cmp	r1, r0
   1613c:	bls	16148 <argp_help@@Base+0x1050>
   16140:	mov	r0, sl
   16144:	bl	1accc <argp_parse@@Base+0x2288>
   16148:	mov	r0, #0
   1614c:	ldr	r5, [fp, #-112]	; 0xffffff90
   16150:	str	r0, [sl, #4]
   16154:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16158:	cmp	r0, #0
   1615c:	beq	161b8 <argp_help@@Base+0x10c0>
   16160:	ldrb	r0, [r4, #12]
   16164:	mov	r6, r4
   16168:	tst	r0, #8
   1616c:	bne	16198 <argp_help@@Base+0x10a0>
   16170:	ldr	r4, [r6, #4]
   16174:	sub	r0, r4, #1
   16178:	cmp	r0, #254	; 0xfe
   1617c:	bhi	16198 <argp_help@@Base+0x10a0>
   16180:	bl	114e8 <__ctype_b_loc@plt>
   16184:	ldr	r0, [r0]
   16188:	add	r0, r0, r4, lsl #1
   1618c:	ldrb	r0, [r0, #1]
   16190:	tst	r0, #64	; 0x40
   16194:	bne	164b8 <argp_help@@Base+0x13c0>
   16198:	ldr	r0, [r6]
   1619c:	cmp	r0, #0
   161a0:	bne	164b8 <argp_help@@Base+0x13c0>
   161a4:	ldr	r1, [r5, #20]
   161a8:	ldr	r0, [r6, #16]
   161ac:	sub	r2, fp, #88	; 0x58
   161b0:	bl	18798 <argp_failure@@Base+0x1d6c>
   161b4:	b	164b4 <argp_help@@Base+0x13bc>
   161b8:	ldr	r6, [r5, #20]
   161bc:	ldr	r5, [r4, #16]
   161c0:	cmp	r6, #0
   161c4:	mov	r8, r5
   161c8:	beq	16204 <argp_help@@Base+0x110c>
   161cc:	ldr	r0, [r6, #20]
   161d0:	mov	r8, r5
   161d4:	cmp	r0, #0
   161d8:	beq	16204 <argp_help@@Base+0x110c>
   161dc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   161e0:	ldr	r7, [r4, #4]
   161e4:	mov	r0, r6
   161e8:	bl	19714 <argp_parse@@Base+0xcd0>
   161ec:	ldr	r3, [r6, #20]
   161f0:	mov	r2, r0
   161f4:	mov	r0, r7
   161f8:	mov	r1, r5
   161fc:	blx	r3
   16200:	mov	r8, r0
   16204:	cmp	r8, #0
   16208:	beq	16448 <argp_help@@Base+0x1350>
   1620c:	ldrb	r0, [r8]
   16210:	cmp	r0, #0
   16214:	beq	16438 <argp_help@@Base+0x1340>
   16218:	ldr	r1, [sl, #24]
   1621c:	ldr	r2, [sl, #28]
   16220:	ldr	r0, [sl, #16]
   16224:	str	r5, [fp, #-92]	; 0xffffffa4
   16228:	sub	r1, r2, r1
   1622c:	cmp	r1, r0
   16230:	bls	1624c <argp_help@@Base+0x1154>
   16234:	mov	r0, sl
   16238:	bl	1accc <argp_parse@@Base+0x2288>
   1623c:	ldr	r1, [sl, #24]
   16240:	ldr	r2, [sl, #28]
   16244:	ldr	r0, [sl, #16]
   16248:	sub	r1, r2, r1
   1624c:	ldr	r5, [r9, #20]
   16250:	ldr	r4, [sl, #20]
   16254:	cmp	r1, r0
   16258:	mov	r6, r5
   1625c:	bls	1627c <argp_help@@Base+0x1184>
   16260:	mov	r0, sl
   16264:	bl	1accc <argp_parse@@Base+0x2288>
   16268:	ldr	r1, [sl, #24]
   1626c:	ldr	r2, [sl, #28]
   16270:	ldr	r6, [r9, #20]
   16274:	ldr	r0, [sl, #16]
   16278:	sub	r1, r2, r1
   1627c:	str	r5, [sl, #4]
   16280:	bic	r7, r4, r4, asr #31
   16284:	cmp	r1, r0
   16288:	mov	r5, r6
   1628c:	bls	1629c <argp_help@@Base+0x11a4>
   16290:	mov	r0, sl
   16294:	bl	1accc <argp_parse@@Base+0x2288>
   16298:	ldr	r5, [r9, #20]
   1629c:	add	r0, r5, #3
   162a0:	str	r6, [sl, #12]
   162a4:	cmp	r7, r0
   162a8:	bls	162f0 <argp_help@@Base+0x11f8>
   162ac:	ldr	r0, [sl, #28]
   162b0:	ldr	r1, [sl, #32]
   162b4:	cmp	r0, r1
   162b8:	bcc	162d8 <argp_help@@Base+0x11e0>
   162bc:	mov	r0, sl
   162c0:	mov	r1, #1
   162c4:	bl	1b274 <argp_parse@@Base+0x2830>
   162c8:	cmp	r0, #0
   162cc:	beq	163d4 <argp_help@@Base+0x12dc>
   162d0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   162d4:	ldr	r0, [r0]
   162d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   162dc:	add	r1, r0, #1
   162e0:	str	r1, [r2]
   162e4:	mov	r1, #10
   162e8:	strb	r1, [r0]
   162ec:	b	163d4 <argp_help@@Base+0x12dc>
   162f0:	cmp	r7, r5
   162f4:	bcs	16384 <argp_help@@Base+0x128c>
   162f8:	ldr	r1, [sl, #24]
   162fc:	ldr	r2, [sl, #28]
   16300:	ldr	r0, [sl, #16]
   16304:	sub	r1, r2, r1
   16308:	cmp	r1, r0
   1630c:	bls	16318 <argp_help@@Base+0x1220>
   16310:	mov	r0, sl
   16314:	bl	1accc <argp_parse@@Base+0x2288>
   16318:	ldr	r0, [sl, #20]
   1631c:	bic	r0, r0, r0, asr #31
   16320:	sub	r1, r5, r0
   16324:	cmp	r1, #1
   16328:	blt	163d4 <argp_help@@Base+0x12dc>
   1632c:	add	r1, r5, #1
   16330:	sub	r6, r1, r0
   16334:	ldr	r0, [sl, #28]
   16338:	ldr	r1, [sl, #32]
   1633c:	cmp	r0, r1
   16340:	bcc	16360 <argp_help@@Base+0x1268>
   16344:	mov	r0, sl
   16348:	mov	r1, #1
   1634c:	bl	1b274 <argp_parse@@Base+0x2830>
   16350:	cmp	r0, #0
   16354:	beq	16374 <argp_help@@Base+0x127c>
   16358:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1635c:	ldr	r0, [r0]
   16360:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16364:	add	r1, r0, #1
   16368:	str	r1, [r2]
   1636c:	mov	r1, #32
   16370:	strb	r1, [r0]
   16374:	sub	r6, r6, #1
   16378:	cmp	r6, #1
   1637c:	bgt	16334 <argp_help@@Base+0x123c>
   16380:	b	163d4 <argp_help@@Base+0x12dc>
   16384:	ldr	r0, [sl, #28]
   16388:	ldr	r1, [sl, #32]
   1638c:	add	r2, r0, #3
   16390:	cmp	r2, r1
   16394:	bls	163b4 <argp_help@@Base+0x12bc>
   16398:	mov	r0, sl
   1639c:	mov	r1, #3
   163a0:	bl	1b274 <argp_parse@@Base+0x2830>
   163a4:	cmp	r0, #0
   163a8:	beq	163d4 <argp_help@@Base+0x12dc>
   163ac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   163b0:	ldr	r0, [r0]
   163b4:	mov	r1, #32
   163b8:	strb	r1, [r0, #2]
   163bc:	movw	r1, #8224	; 0x2020
   163c0:	strh	r1, [r0]
   163c4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   163c8:	ldr	r0, [r1]
   163cc:	add	r0, r0, #3
   163d0:	str	r0, [r1]
   163d4:	mov	r0, r8
   163d8:	bl	11518 <strlen@plt>
   163dc:	ldr	r5, [fp, #-92]	; 0xffffffa4
   163e0:	cmp	r0, #0
   163e4:	beq	16438 <argp_help@@Base+0x1340>
   163e8:	mov	r6, r0
   163ec:	ldr	r0, [sl, #28]
   163f0:	ldr	r1, [sl, #32]
   163f4:	add	r2, r0, r6
   163f8:	cmp	r2, r1
   163fc:	bls	1641c <argp_help@@Base+0x1324>
   16400:	mov	r0, sl
   16404:	mov	r1, r6
   16408:	bl	1b274 <argp_parse@@Base+0x2830>
   1640c:	cmp	r0, #0
   16410:	beq	16438 <argp_help@@Base+0x1340>
   16414:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16418:	ldr	r0, [r0]
   1641c:	mov	r1, r8
   16420:	mov	r2, r6
   16424:	bl	113d4 <memcpy@plt>
   16428:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1642c:	ldr	r0, [r1]
   16430:	add	r0, r0, r6
   16434:	str	r0, [r1]
   16438:	cmp	r8, r5
   1643c:	beq	16448 <argp_help@@Base+0x1350>
   16440:	mov	r0, r8
   16444:	bl	19df4 <argp_parse@@Base+0x13b0>
   16448:	ldr	r2, [sl, #24]
   1644c:	ldr	r0, [sl, #28]
   16450:	ldr	r1, [sl, #16]
   16454:	sub	r2, r0, r2
   16458:	cmp	r2, r1
   1645c:	bls	1646c <argp_help@@Base+0x1374>
   16460:	mov	r0, sl
   16464:	bl	1accc <argp_parse@@Base+0x2288>
   16468:	ldr	r0, [sl, #28]
   1646c:	mov	r1, #0
   16470:	ldr	r5, [fp, #-112]	; 0xffffff90
   16474:	str	r1, [sl, #4]
   16478:	ldr	r1, [sl, #32]
   1647c:	cmp	r0, r1
   16480:	bcc	164a0 <argp_help@@Base+0x13a8>
   16484:	mov	r0, sl
   16488:	mov	r1, #1
   1648c:	bl	1b274 <argp_parse@@Base+0x2830>
   16490:	cmp	r0, #0
   16494:	beq	164b4 <argp_help@@Base+0x13bc>
   16498:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1649c:	ldr	r0, [r0]
   164a0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   164a4:	add	r1, r0, #1
   164a8:	str	r1, [r2]
   164ac:	mov	r1, #10
   164b0:	strb	r1, [r0]
   164b4:	str	r5, [fp, #-48]	; 0xffffffd0
   164b8:	ldr	r1, [sl, #24]
   164bc:	ldr	r2, [sl, #28]
   164c0:	ldr	r0, [sl, #16]
   164c4:	sub	r1, r2, r1
   164c8:	cmp	r1, r0
   164cc:	bls	164e8 <argp_help@@Base+0x13f0>
   164d0:	mov	r0, sl
   164d4:	bl	1accc <argp_parse@@Base+0x2288>
   164d8:	ldr	r1, [sl, #24]
   164dc:	ldr	r2, [sl, #28]
   164e0:	ldr	r0, [sl, #16]
   164e4:	sub	r1, r2, r1
   164e8:	ldr	r2, [fp, #-124]	; 0xffffff84
   164ec:	cmp	r1, r0
   164f0:	str	r2, [sl, #4]
   164f4:	bls	16500 <argp_help@@Base+0x1408>
   164f8:	mov	r0, sl
   164fc:	bl	1accc <argp_parse@@Base+0x2288>
   16500:	ldr	r1, [fp, #-116]	; 0xffffff8c
   16504:	ldr	r0, [fp, #-120]	; 0xffffff88
   16508:	add	r5, r5, #28
   1650c:	subs	r1, r1, #1
   16510:	str	r0, [sl, #12]
   16514:	bne	15bbc <argp_help@@Base+0xac4>
   16518:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1651c:	cmp	r0, #0
   16520:	ldrne	r0, [r9, #4]
   16524:	cmpne	r0, #0
   16528:	bne	1668c <argp_help@@Base+0x1594>
   1652c:	ldr	r6, [fp, #-128]	; 0xffffff80
   16530:	mov	r5, #1
   16534:	tst	r6, #32
   16538:	bne	1656c <argp_help@@Base+0x1474>
   1653c:	b	16594 <argp_help@@Base+0x149c>
   16540:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16544:	movw	r1, #54598	; 0xd546
   16548:	mov	r0, sl
   1654c:	movt	r1, #1
   16550:	mov	r3, r2
   16554:	bl	1b360 <argp_parse@@Base+0x291c>
   16558:	mov	r5, #1
   1655c:	tst	r6, #8
   16560:	bne	15b3c <argp_help@@Base+0xa44>
   16564:	tst	r6, #32
   16568:	beq	16594 <argp_help@@Base+0x149c>
   1656c:	sub	sp, sp, #8
   16570:	mov	r0, #0
   16574:	mov	r2, #1
   16578:	mov	r3, r5
   1657c:	stm	sp, {r0, sl}
   16580:	ldr	r0, [fp, #-104]	; 0xffffff98
   16584:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16588:	bl	17adc <argp_failure@@Base+0x10b0>
   1658c:	add	sp, sp, #8
   16590:	orr	r5, r0, r5
   16594:	tst	r6, #64	; 0x40
   16598:	movwne	r6, #63192	; 0xf6d8
   1659c:	movtne	r6, #2
   165a0:	ldrne	r0, [r6]
   165a4:	cmpne	r0, #0
   165a8:	beq	16600 <argp_help@@Base+0x1508>
   165ac:	cmp	r5, #0
   165b0:	beq	165ec <argp_help@@Base+0x14f4>
   165b4:	ldr	r0, [sl, #28]
   165b8:	ldr	r1, [sl, #32]
   165bc:	cmp	r0, r1
   165c0:	bcc	165dc <argp_help@@Base+0x14e4>
   165c4:	mov	r0, sl
   165c8:	mov	r1, #1
   165cc:	bl	1b274 <argp_parse@@Base+0x2830>
   165d0:	cmp	r0, #0
   165d4:	beq	165ec <argp_help@@Base+0x14f4>
   165d8:	ldr	r0, [sl, #28]
   165dc:	add	r1, r0, #1
   165e0:	str	r1, [sl, #28]
   165e4:	mov	r1, #10
   165e8:	strb	r1, [r0]
   165ec:	ldr	r2, [r6]
   165f0:	movw	r1, #54653	; 0xd57d
   165f4:	mov	r0, sl
   165f8:	movt	r1, #1
   165fc:	bl	1b360 <argp_parse@@Base+0x291c>
   16600:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16604:	bl	11464 <funlockfile@plt>
   16608:	ldr	r5, [fp, #-108]	; 0xffffff94
   1660c:	cmp	r5, #0
   16610:	beq	16658 <argp_help@@Base+0x1560>
   16614:	ldr	r0, [r5, #12]
   16618:	cmp	r0, #0
   1661c:	beq	16634 <argp_help@@Base+0x153c>
   16620:	ldr	r4, [r0, #24]
   16624:	bl	19df4 <argp_parse@@Base+0x13b0>
   16628:	cmp	r4, #0
   1662c:	mov	r0, r4
   16630:	bne	16620 <argp_help@@Base+0x1528>
   16634:	ldr	r0, [r5, #4]
   16638:	cmp	r0, #0
   1663c:	beq	16650 <argp_help@@Base+0x1558>
   16640:	ldr	r0, [r5]
   16644:	bl	19df4 <argp_parse@@Base+0x13b0>
   16648:	ldr	r0, [r5, #8]
   1664c:	bl	19df4 <argp_parse@@Base+0x13b0>
   16650:	mov	r0, r5
   16654:	bl	19df4 <argp_parse@@Base+0x13b0>
   16658:	mov	r0, sl
   1665c:	bl	1ac88 <argp_parse@@Base+0x2244>
   16660:	sub	sp, fp, #28
   16664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16668:	movw	r9, #62960	; 0xf5f0
   1666c:	movt	r9, #2
   16670:	tst	r6, #3
   16674:	str	r5, [fp, #-108]	; 0xffffff94
   16678:	bne	158d4 <argp_help@@Base+0x7dc>
   1667c:	mov	r5, #0
   16680:	tst	r6, #16
   16684:	bne	15b04 <argp_help@@Base+0xa0c>
   16688:	b	15b2c <argp_help@@Base+0xa34>
   1668c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16690:	movw	r5, #55177	; 0xd789
   16694:	movt	r5, #1
   16698:	cmp	r0, #0
   1669c:	beq	166b4 <argp_help@@Base+0x15bc>
   166a0:	ldr	r6, [r0]
   166a4:	cmp	r6, #0
   166a8:	ldrne	r0, [r6, #20]
   166ac:	cmpne	r0, #0
   166b0:	bne	167bc <argp_help@@Base+0x16c4>
   166b4:	ldrb	r0, [r5]
   166b8:	cmp	r0, #0
   166bc:	beq	167a0 <argp_help@@Base+0x16a8>
   166c0:	ldr	r0, [sl, #28]
   166c4:	ldr	r1, [sl, #32]
   166c8:	cmp	r0, r1
   166cc:	bcc	166ec <argp_help@@Base+0x15f4>
   166d0:	mov	r0, sl
   166d4:	mov	r1, #1
   166d8:	bl	1b274 <argp_parse@@Base+0x2830>
   166dc:	cmp	r0, #0
   166e0:	beq	16700 <argp_help@@Base+0x1608>
   166e4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   166e8:	ldr	r0, [r0]
   166ec:	ldr	r2, [fp, #-100]	; 0xffffff9c
   166f0:	add	r1, r0, #1
   166f4:	str	r1, [r2]
   166f8:	mov	r1, #10
   166fc:	strb	r1, [r0]
   16700:	mov	r0, r5
   16704:	bl	11518 <strlen@plt>
   16708:	cmp	r0, #0
   1670c:	beq	16760 <argp_help@@Base+0x1668>
   16710:	mov	r6, r0
   16714:	ldr	r0, [sl, #28]
   16718:	ldr	r1, [sl, #32]
   1671c:	add	r2, r0, r6
   16720:	cmp	r2, r1
   16724:	bls	16744 <argp_help@@Base+0x164c>
   16728:	mov	r0, sl
   1672c:	mov	r1, r6
   16730:	bl	1b274 <argp_parse@@Base+0x2830>
   16734:	cmp	r0, #0
   16738:	beq	16760 <argp_help@@Base+0x1668>
   1673c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16740:	ldr	r0, [r0]
   16744:	mov	r1, r5
   16748:	mov	r2, r6
   1674c:	bl	113d4 <memcpy@plt>
   16750:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16754:	ldr	r0, [r1]
   16758:	add	r0, r0, r6
   1675c:	str	r0, [r1]
   16760:	ldr	r0, [sl, #28]
   16764:	ldr	r1, [sl, #32]
   16768:	cmp	r0, r1
   1676c:	bcc	1678c <argp_help@@Base+0x1694>
   16770:	mov	r0, sl
   16774:	mov	r1, #1
   16778:	bl	1b274 <argp_parse@@Base+0x2830>
   1677c:	cmp	r0, #0
   16780:	beq	167a0 <argp_help@@Base+0x16a8>
   16784:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16788:	ldr	r0, [r0]
   1678c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16790:	add	r1, r0, #1
   16794:	str	r1, [r2]
   16798:	mov	r1, #10
   1679c:	strb	r1, [r0]
   167a0:	movw	r0, #55177	; 0xd789
   167a4:	movt	r0, #1
   167a8:	cmp	r5, r0
   167ac:	beq	1652c <argp_help@@Base+0x1434>
   167b0:	mov	r0, r5
   167b4:	bl	19df4 <argp_parse@@Base+0x13b0>
   167b8:	b	1652c <argp_help@@Base+0x1434>
   167bc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   167c0:	mov	r0, r6
   167c4:	bl	19714 <argp_parse@@Base+0xcd0>
   167c8:	ldr	r3, [r6, #20]
   167cc:	movw	r1, #55177	; 0xd789
   167d0:	mov	r2, r0
   167d4:	movw	r0, #5
   167d8:	movt	r0, #512	; 0x200
   167dc:	movt	r1, #1
   167e0:	blx	r3
   167e4:	mov	r5, r0
   167e8:	cmp	r0, #0
   167ec:	bne	166b4 <argp_help@@Base+0x15bc>
   167f0:	b	1652c <argp_help@@Base+0x1434>
   167f4:	add	r2, r0, #112	; 0x70
   167f8:	b	156ec <argp_help@@Base+0x5f4>

000167fc <argp_state_help@@Base>:
   167fc:	push	{r4, r5, fp, lr}
   16800:	add	fp, sp, #8
   16804:	sub	sp, sp, #8
   16808:	mov	r4, r2
   1680c:	mov	r2, r1
   16810:	cmp	r0, #0
   16814:	beq	16860 <argp_state_help@@Base+0x64>
   16818:	cmp	r2, #0
   1681c:	beq	16898 <argp_state_help@@Base+0x9c>
   16820:	ldr	r1, [r0, #16]
   16824:	mov	r5, r0
   16828:	ands	r0, r1, #2
   1682c:	bne	16898 <argp_state_help@@Base+0x9c>
   16830:	ldr	r3, [r5, #40]	; 0x28
   16834:	ldr	r0, [r5]
   16838:	and	r1, r1, #64	; 0x40
   1683c:	orr	r4, r4, r1, lsl #1
   16840:	mov	r1, r5
   16844:	str	r3, [sp]
   16848:	mov	r3, r4
   1684c:	bl	15124 <argp_help@@Base+0x2c>
   16850:	ldrb	r0, [r5, #16]
   16854:	tst	r0, #32
   16858:	beq	16888 <argp_state_help@@Base+0x8c>
   1685c:	b	16898 <argp_state_help@@Base+0x9c>
   16860:	cmp	r2, #0
   16864:	beq	16898 <argp_state_help@@Base+0x9c>
   16868:	movw	r0, #63024	; 0xf630
   1686c:	mov	r1, #0
   16870:	mov	r3, r4
   16874:	movt	r0, #2
   16878:	ldr	r0, [r0]
   1687c:	str	r0, [sp]
   16880:	mov	r0, #0
   16884:	bl	15124 <argp_help@@Base+0x2c>
   16888:	tst	r4, #256	; 0x100
   1688c:	bne	168a0 <argp_state_help@@Base+0xa4>
   16890:	tst	r4, #512	; 0x200
   16894:	bne	168b0 <argp_state_help@@Base+0xb4>
   16898:	sub	sp, fp, #8
   1689c:	pop	{r4, r5, fp, pc}
   168a0:	movw	r0, #63000	; 0xf618
   168a4:	movt	r0, #2
   168a8:	ldr	r0, [r0]
   168ac:	bl	11500 <exit@plt>
   168b0:	mov	r0, #0
   168b4:	bl	11500 <exit@plt>

000168b8 <argp_error@@Base>:
   168b8:	sub	sp, sp, #8
   168bc:	push	{r4, r5, r6, r7, fp, lr}
   168c0:	add	fp, sp, #16
   168c4:	sub	sp, sp, #8
   168c8:	mov	r6, r1
   168cc:	mov	r4, r0
   168d0:	cmp	r0, #0
   168d4:	str	r3, [fp, #12]
   168d8:	str	r2, [fp, #8]
   168dc:	beq	1690c <argp_error@@Base+0x54>
   168e0:	ldrb	r0, [r4, #16]
   168e4:	tst	r0, #2
   168e8:	bne	168fc <argp_error@@Base+0x44>
   168ec:	add	r0, r4, #44	; 0x2c
   168f0:	ldr	r5, [r0]
   168f4:	cmp	r5, #0
   168f8:	bne	16920 <argp_error@@Base+0x68>
   168fc:	sub	sp, fp, #16
   16900:	pop	{r4, r5, r6, r7, fp, lr}
   16904:	add	sp, sp, #8
   16908:	bx	lr
   1690c:	movw	r0, #63032	; 0xf638
   16910:	movt	r0, #2
   16914:	ldr	r5, [r0]
   16918:	cmp	r5, #0
   1691c:	beq	168fc <argp_error@@Base+0x44>
   16920:	mov	r0, r5
   16924:	bl	11614 <flockfile@plt>
   16928:	add	r0, fp, #8
   1692c:	cmp	r4, #0
   16930:	str	r0, [sp, #4]
   16934:	beq	16940 <argp_error@@Base+0x88>
   16938:	ldr	r0, [r4, #40]	; 0x28
   1693c:	b	1694c <argp_error@@Base+0x94>
   16940:	movw	r0, #63024	; 0xf630
   16944:	movt	r0, #2
   16948:	ldr	r0, [r0]
   1694c:	mov	r1, r5
   16950:	bl	11338 <fputs_unlocked@plt>
   16954:	mov	r7, r5
   16958:	ldr	r0, [r7, #20]!
   1695c:	ldr	r1, [r7, #4]
   16960:	cmp	r0, r1
   16964:	bcs	169f0 <argp_error@@Base+0x138>
   16968:	add	r1, r0, #1
   1696c:	str	r1, [r7]
   16970:	mov	r1, #58	; 0x3a
   16974:	strb	r1, [r0]
   16978:	ldr	r0, [r5, #20]
   1697c:	ldr	r1, [r5, #24]
   16980:	cmp	r0, r1
   16984:	bcs	16a0c <argp_error@@Base+0x154>
   16988:	add	r1, r0, #1
   1698c:	str	r1, [r7]
   16990:	mov	r1, #32
   16994:	strb	r1, [r0]
   16998:	ldr	r2, [sp, #4]
   1699c:	mov	r0, r5
   169a0:	mov	r1, r6
   169a4:	bl	115d8 <vfprintf@plt>
   169a8:	ldr	r0, [r5, #20]
   169ac:	ldr	r1, [r5, #24]
   169b0:	cmp	r0, r1
   169b4:	bcs	16a1c <argp_error@@Base+0x164>
   169b8:	add	r1, r0, #1
   169bc:	str	r1, [r7]
   169c0:	mov	r1, #10
   169c4:	strb	r1, [r0]
   169c8:	mov	r0, r4
   169cc:	mov	r1, r5
   169d0:	mov	r2, #260	; 0x104
   169d4:	bl	167fc <argp_state_help@@Base>
   169d8:	mov	r0, r5
   169dc:	bl	11464 <funlockfile@plt>
   169e0:	sub	sp, fp, #16
   169e4:	pop	{r4, r5, r6, r7, fp, lr}
   169e8:	add	sp, sp, #8
   169ec:	bx	lr
   169f0:	mov	r0, r5
   169f4:	mov	r1, #58	; 0x3a
   169f8:	bl	115a8 <__overflow@plt>
   169fc:	ldr	r0, [r5, #20]
   16a00:	ldr	r1, [r5, #24]
   16a04:	cmp	r0, r1
   16a08:	bcc	16988 <argp_error@@Base+0xd0>
   16a0c:	mov	r0, r5
   16a10:	mov	r1, #32
   16a14:	bl	115a8 <__overflow@plt>
   16a18:	b	16998 <argp_error@@Base+0xe0>
   16a1c:	mov	r0, r5
   16a20:	mov	r1, #10
   16a24:	bl	115a8 <__overflow@plt>
   16a28:	b	169c8 <argp_error@@Base+0x110>

00016a2c <argp_failure@@Base>:
   16a2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16a30:	add	fp, sp, #24
   16a34:	sub	sp, sp, #200	; 0xc8
   16a38:	mov	r4, r3
   16a3c:	mov	r9, r2
   16a40:	mov	r8, r1
   16a44:	mov	r5, r0
   16a48:	cmp	r0, #0
   16a4c:	beq	16a70 <argp_failure@@Base+0x44>
   16a50:	ldrb	r0, [r5, #16]
   16a54:	tst	r0, #2
   16a58:	bne	16c10 <argp_failure@@Base+0x1e4>
   16a5c:	add	r0, r5, #44	; 0x2c
   16a60:	ldr	r6, [r0]
   16a64:	cmp	r6, #0
   16a68:	bne	16a84 <argp_failure@@Base+0x58>
   16a6c:	b	16c10 <argp_failure@@Base+0x1e4>
   16a70:	movw	r0, #63032	; 0xf638
   16a74:	movt	r0, #2
   16a78:	ldr	r6, [r0]
   16a7c:	cmp	r6, #0
   16a80:	beq	16c10 <argp_failure@@Base+0x1e4>
   16a84:	mov	r0, r6
   16a88:	bl	11614 <flockfile@plt>
   16a8c:	movw	r0, #63024	; 0xf630
   16a90:	cmp	r5, #0
   16a94:	mov	r1, r6
   16a98:	movt	r0, #2
   16a9c:	addne	r0, r5, #40	; 0x28
   16aa0:	ldr	r0, [r0]
   16aa4:	bl	11338 <fputs_unlocked@plt>
   16aa8:	cmp	r4, #0
   16aac:	beq	16b08 <argp_failure@@Base+0xdc>
   16ab0:	add	r0, fp, #8
   16ab4:	str	r0, [sp]
   16ab8:	ldr	r0, [r6, #20]
   16abc:	ldr	r1, [r6, #24]
   16ac0:	cmp	r0, r1
   16ac4:	bcs	16c18 <argp_failure@@Base+0x1ec>
   16ac8:	add	r1, r0, #1
   16acc:	str	r1, [r6, #20]
   16ad0:	mov	r1, #58	; 0x3a
   16ad4:	strb	r1, [r0]
   16ad8:	ldr	r0, [r6, #20]
   16adc:	ldr	r1, [r6, #24]
   16ae0:	cmp	r0, r1
   16ae4:	bcs	16c34 <argp_failure@@Base+0x208>
   16ae8:	add	r1, r0, #1
   16aec:	str	r1, [r6, #20]
   16af0:	mov	r1, #32
   16af4:	strb	r1, [r0]
   16af8:	ldr	r2, [sp]
   16afc:	mov	r0, r6
   16b00:	mov	r1, r4
   16b04:	bl	115d8 <vfprintf@plt>
   16b08:	cmp	r9, #0
   16b0c:	beq	16bdc <argp_failure@@Base+0x1b0>
   16b10:	mov	r4, r6
   16b14:	ldr	r0, [r4, #20]!
   16b18:	mov	r7, r4
   16b1c:	ldr	r1, [r7, #4]!
   16b20:	cmp	r0, r1
   16b24:	bcs	16c44 <argp_failure@@Base+0x218>
   16b28:	add	r1, r0, #1
   16b2c:	str	r1, [r4]
   16b30:	mov	r1, #58	; 0x3a
   16b34:	strb	r1, [r0]
   16b38:	ldr	r0, [r4]
   16b3c:	ldr	r1, [r7]
   16b40:	cmp	r0, r1
   16b44:	bcs	16c60 <argp_failure@@Base+0x234>
   16b48:	add	r1, r0, #1
   16b4c:	str	r1, [r4]
   16b50:	mov	r1, #32
   16b54:	strb	r1, [r0]
   16b58:	mov	r1, sp
   16b5c:	mov	r0, r9
   16b60:	mov	r2, #200	; 0xc8
   16b64:	bl	11554 <strerror_r@plt>
   16b68:	cmp	r0, #0
   16b6c:	bne	16b8c <argp_failure@@Base+0x160>
   16b70:	mov	r0, r9
   16b74:	bl	114c4 <strerror@plt>
   16b78:	mov	r1, r0
   16b7c:	movw	r0, #54552	; 0xd518
   16b80:	movt	r0, #1
   16b84:	cmp	r1, #0
   16b88:	movne	r0, r1
   16b8c:	mov	r1, r6
   16b90:	bl	11338 <fputs_unlocked@plt>
   16b94:	ldr	r0, [r4]
   16b98:	ldr	r1, [r7]
   16b9c:	cmp	r0, r1
   16ba0:	bcs	16bf4 <argp_failure@@Base+0x1c8>
   16ba4:	add	r1, r0, #1
   16ba8:	str	r1, [r4]
   16bac:	mov	r1, #10
   16bb0:	strb	r1, [r0]
   16bb4:	mov	r0, r6
   16bb8:	bl	11464 <funlockfile@plt>
   16bbc:	cmp	r8, #0
   16bc0:	beq	16c10 <argp_failure@@Base+0x1e4>
   16bc4:	cmp	r5, #0
   16bc8:	ldrbne	r0, [r5, #16]
   16bcc:	tstne	r0, #32
   16bd0:	bne	16c10 <argp_failure@@Base+0x1e4>
   16bd4:	mov	r0, r8
   16bd8:	bl	11500 <exit@plt>
   16bdc:	add	r7, r6, #24
   16be0:	add	r4, r6, #20
   16be4:	ldr	r0, [r4]
   16be8:	ldr	r1, [r7]
   16bec:	cmp	r0, r1
   16bf0:	bcc	16ba4 <argp_failure@@Base+0x178>
   16bf4:	mov	r0, r6
   16bf8:	mov	r1, #10
   16bfc:	bl	115a8 <__overflow@plt>
   16c00:	mov	r0, r6
   16c04:	bl	11464 <funlockfile@plt>
   16c08:	cmp	r8, #0
   16c0c:	bne	16bc4 <argp_failure@@Base+0x198>
   16c10:	sub	sp, fp, #24
   16c14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16c18:	mov	r0, r6
   16c1c:	mov	r1, #58	; 0x3a
   16c20:	bl	115a8 <__overflow@plt>
   16c24:	ldr	r0, [r6, #20]
   16c28:	ldr	r1, [r6, #24]
   16c2c:	cmp	r0, r1
   16c30:	bcc	16ae8 <argp_failure@@Base+0xbc>
   16c34:	mov	r0, r6
   16c38:	mov	r1, #32
   16c3c:	bl	115a8 <__overflow@plt>
   16c40:	b	16af8 <argp_failure@@Base+0xcc>
   16c44:	mov	r0, r6
   16c48:	mov	r1, #58	; 0x3a
   16c4c:	bl	115a8 <__overflow@plt>
   16c50:	ldr	r0, [r4]
   16c54:	ldr	r1, [r7]
   16c58:	cmp	r0, r1
   16c5c:	bcc	16b48 <argp_failure@@Base+0x11c>
   16c60:	mov	r0, r6
   16c64:	mov	r1, #32
   16c68:	bl	115a8 <__overflow@plt>
   16c6c:	b	16b58 <argp_failure@@Base+0x12c>
   16c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c74:	add	fp, sp, #28
   16c78:	sub	sp, sp, #52	; 0x34
   16c7c:	ldr	r4, [r0]
   16c80:	ldr	r7, [r0, #16]
   16c84:	mov	r8, r0
   16c88:	mov	r0, #16
   16c8c:	mov	sl, r1
   16c90:	bl	1ab84 <argp_parse@@Base+0x2140>
   16c94:	cmp	r0, #0
   16c98:	beq	17348 <argp_failure@@Base+0x91c>
   16c9c:	mov	r9, r0
   16ca0:	mov	r0, #0
   16ca4:	cmp	r4, #0
   16ca8:	str	r8, [sp, #40]	; 0x28
   16cac:	mov	r1, r9
   16cb0:	str	r9, [fp, #-32]	; 0xffffffe0
   16cb4:	str	r0, [r1, #12]!
   16cb8:	str	r1, [sp, #28]
   16cbc:	str	r0, [r1, #-8]
   16cc0:	beq	16f30 <argp_failure@@Base+0x504>
   16cc4:	ldrb	r0, [r4, #12]
   16cc8:	str	r7, [sp, #16]
   16ccc:	tst	r0, #4
   16cd0:	bne	17368 <argp_failure@@Base+0x93c>
   16cd4:	add	r7, r4, #12
   16cd8:	mov	r6, #0
   16cdc:	mov	r8, #0
   16ce0:	ldr	r5, [r7, #-8]
   16ce4:	cmp	r5, #0
   16ce8:	bne	16d24 <argp_failure@@Base+0x2f8>
   16cec:	b	16d00 <argp_failure@@Base+0x2d4>
   16cf0:	add	r7, r7, #24
   16cf4:	ldr	r5, [r7, #-8]
   16cf8:	cmp	r5, #0
   16cfc:	bne	16d24 <argp_failure@@Base+0x2f8>
   16d00:	ldr	r0, [r7, #-12]
   16d04:	cmp	r0, #0
   16d08:	bne	16d24 <argp_failure@@Base+0x2f8>
   16d0c:	ldr	r0, [r7, #4]
   16d10:	cmp	r0, #0
   16d14:	bne	16d24 <argp_failure@@Base+0x2f8>
   16d18:	ldr	r0, [r7, #8]
   16d1c:	cmp	r0, #0
   16d20:	beq	16d64 <argp_failure@@Base+0x338>
   16d24:	ldr	r0, [r7]
   16d28:	sub	r1, r5, #1
   16d2c:	tst	r0, #4
   16d30:	addeq	r6, r6, #1
   16d34:	streq	r6, [r9, #4]
   16d38:	cmp	r1, #254	; 0xfe
   16d3c:	bhi	16cf0 <argp_failure@@Base+0x2c4>
   16d40:	ands	r0, r0, #8
   16d44:	bne	16cf0 <argp_failure@@Base+0x2c4>
   16d48:	bl	114e8 <__ctype_b_loc@plt>
   16d4c:	ldr	r0, [r0]
   16d50:	add	r0, r0, r5, lsl #1
   16d54:	ldrb	r0, [r0, #1]
   16d58:	tst	r0, #64	; 0x40
   16d5c:	addne	r8, r8, #1
   16d60:	b	16cf0 <argp_failure@@Base+0x2c4>
   16d64:	rsb	r0, r6, r6, lsl #3
   16d68:	lsl	r0, r0, #2
   16d6c:	bl	1ab84 <argp_parse@@Base+0x2140>
   16d70:	mov	r7, r0
   16d74:	str	r0, [r9]
   16d78:	add	r0, r8, #1
   16d7c:	bl	1ab84 <argp_parse@@Base+0x2140>
   16d80:	cmp	r7, #0
   16d84:	str	r0, [r9, #8]
   16d88:	movne	r5, r0
   16d8c:	cmpne	r0, #0
   16d90:	bne	16db4 <argp_failure@@Base+0x388>
   16d94:	movw	r0, #54957	; 0xd6ad
   16d98:	movw	r1, #54865	; 0xd651
   16d9c:	movw	r3, #54877	; 0xd65d
   16da0:	movw	r2, #474	; 0x1da
   16da4:	movt	r0, #1
   16da8:	movt	r1, #1
   16dac:	movt	r3, #1
   16db0:	bl	11680 <__assert_fail@plt>
   16db4:	movw	r0, #37450	; 0x924a
   16db8:	movt	r0, #2340	; 0x924
   16dbc:	cmp	r6, r0
   16dc0:	bcs	17388 <argp_failure@@Base+0x95c>
   16dc4:	mov	r8, #0
   16dc8:	mov	r0, #0
   16dcc:	ldr	r1, [r4, #4]
   16dd0:	cmp	r1, #0
   16dd4:	bne	16e18 <argp_failure@@Base+0x3ec>
   16dd8:	b	16df4 <argp_failure@@Base+0x3c8>
   16ddc:	mov	r4, r0
   16de0:	add	r7, r7, #28
   16de4:	mov	r0, r9
   16de8:	ldr	r1, [r4, #4]
   16dec:	cmp	r1, #0
   16df0:	bne	16e18 <argp_failure@@Base+0x3ec>
   16df4:	ldr	r2, [r4]
   16df8:	cmp	r2, #0
   16dfc:	bne	16e18 <argp_failure@@Base+0x3ec>
   16e00:	ldr	r2, [r4, #16]
   16e04:	cmp	r2, #0
   16e08:	bne	16e18 <argp_failure@@Base+0x3ec>
   16e0c:	ldr	r2, [r4, #20]
   16e10:	cmp	r2, #0
   16e14:	beq	16f1c <argp_failure@@Base+0x4f0>
   16e18:	stm	r7, {r4, r8}
   16e1c:	str	r5, [r7, #8]
   16e20:	ldr	r9, [r4, #20]
   16e24:	cmp	r9, #0
   16e28:	bne	16e44 <argp_failure@@Base+0x418>
   16e2c:	ldr	r2, [r4]
   16e30:	cmp	r2, #0
   16e34:	bne	16e40 <argp_failure@@Base+0x414>
   16e38:	cmp	r1, #0
   16e3c:	addeq	r0, r0, #1
   16e40:	mov	r9, r0
   16e44:	ldr	r0, [sp, #40]	; 0x28
   16e48:	mov	r1, #0
   16e4c:	str	r9, [r7, #12]
   16e50:	str	sl, [r7, #16]
   16e54:	str	r0, [r7, #20]
   16e58:	b	16e64 <argp_failure@@Base+0x438>
   16e5c:	ldr	r1, [r7, #4]
   16e60:	mov	r4, r0
   16e64:	add	r0, r1, #1
   16e68:	str	r0, [r7, #4]
   16e6c:	ldrb	r0, [r4, #12]
   16e70:	tst	r0, #8
   16e74:	bne	16ec0 <argp_failure@@Base+0x494>
   16e78:	ldr	r6, [r4, #4]
   16e7c:	sub	r0, r6, #1
   16e80:	cmp	r0, #254	; 0xfe
   16e84:	bhi	16ec0 <argp_failure@@Base+0x494>
   16e88:	bl	114e8 <__ctype_b_loc@plt>
   16e8c:	ldr	r0, [r0]
   16e90:	add	r0, r0, r6, lsl #1
   16e94:	ldrb	r0, [r0, #1]
   16e98:	tst	r0, #64	; 0x40
   16e9c:	beq	16ec0 <argp_failure@@Base+0x494>
   16ea0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ea4:	ldr	r0, [r0, #8]
   16ea8:	cmp	r0, r5
   16eac:	bcs	16ef8 <argp_failure@@Base+0x4cc>
   16eb0:	ldrb	r1, [r0], #1
   16eb4:	uxtb	r2, r6
   16eb8:	cmp	r1, r2
   16ebc:	bne	16ea8 <argp_failure@@Base+0x47c>
   16ec0:	ldr	r1, [r4, #28]
   16ec4:	add	r0, r4, #24
   16ec8:	cmp	r1, #0
   16ecc:	bne	16f0c <argp_failure@@Base+0x4e0>
   16ed0:	ldr	r1, [r0]
   16ed4:	cmp	r1, #0
   16ed8:	bne	16f0c <argp_failure@@Base+0x4e0>
   16edc:	ldr	r1, [r4, #40]	; 0x28
   16ee0:	cmp	r1, #0
   16ee4:	bne	16f0c <argp_failure@@Base+0x4e0>
   16ee8:	ldr	r1, [r4, #44]	; 0x2c
   16eec:	cmp	r1, #0
   16ef0:	bne	16f0c <argp_failure@@Base+0x4e0>
   16ef4:	b	16ddc <argp_failure@@Base+0x3b0>
   16ef8:	strb	r6, [r5], #1
   16efc:	ldr	r1, [r4, #28]
   16f00:	add	r0, r4, #24
   16f04:	cmp	r1, #0
   16f08:	beq	16ed0 <argp_failure@@Base+0x4a4>
   16f0c:	ldrb	r1, [r4, #36]	; 0x24
   16f10:	tst	r1, #4
   16f14:	bne	16e5c <argp_failure@@Base+0x430>
   16f18:	b	16ddc <argp_failure@@Base+0x3b0>
   16f1c:	ldr	r8, [sp, #40]	; 0x28
   16f20:	ldr	r7, [sp, #16]
   16f24:	ldr	r9, [fp, #-32]	; 0xffffffe0
   16f28:	mov	r0, #0
   16f2c:	strb	r0, [r5]
   16f30:	cmp	r7, #0
   16f34:	ldrne	r0, [r7]
   16f38:	cmpne	r0, #0
   16f3c:	bne	16f4c <argp_failure@@Base+0x520>
   16f40:	mov	r0, r9
   16f44:	sub	sp, fp, #28
   16f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f4c:	str	sl, [sp, #4]
   16f50:	ldr	r4, [r7, #12]
   16f54:	cmp	r4, #0
   16f58:	beq	16f64 <argp_failure@@Base+0x538>
   16f5c:	ldr	r5, [r7, #8]
   16f60:	b	16f74 <argp_failure@@Base+0x548>
   16f64:	ldr	r5, [r7, #8]
   16f68:	mov	r1, sl
   16f6c:	cmp	r5, #0
   16f70:	beq	16fc4 <argp_failure@@Base+0x598>
   16f74:	ldr	r6, [r8, #16]
   16f78:	mov	r0, #28
   16f7c:	bl	1ab84 <argp_parse@@Base+0x2140>
   16f80:	mov	r1, r0
   16f84:	cmp	r0, #0
   16f88:	beq	16fc4 <argp_failure@@Base+0x598>
   16f8c:	sub	r0, r7, r6
   16f90:	str	r5, [r1]
   16f94:	cmp	sl, #0
   16f98:	asr	r0, r0, #4
   16f9c:	stmib	r1, {r0, r4, sl}
   16fa0:	str	r8, [r1, #16]
   16fa4:	ldr	r3, [sp, #28]
   16fa8:	ldrne	r0, [sl, #20]
   16fac:	ldr	r2, [r3]
   16fb0:	addne	r0, r0, #1
   16fb4:	str	r1, [r3]
   16fb8:	moveq	r0, #0
   16fbc:	str	r0, [r1, #20]
   16fc0:	str	r2, [r1, #24]
   16fc4:	ldr	r0, [r7]
   16fc8:	bl	16c70 <argp_failure@@Base+0x244>
   16fcc:	ldr	r1, [sp, #28]
   16fd0:	mov	r6, r0
   16fd4:	ldr	r2, [r1]
   16fd8:	mov	r0, r1
   16fdc:	add	r1, r2, #24
   16fe0:	cmp	r2, #0
   16fe4:	bne	16fd4 <argp_failure@@Base+0x5a8>
   16fe8:	ldr	r1, [r6, #12]
   16fec:	str	r1, [r0]
   16ff0:	mov	r0, #0
   16ff4:	str	r0, [r6, #12]
   16ff8:	ldr	r0, [r6, #4]
   16ffc:	cmp	r0, #0
   17000:	beq	17310 <argp_failure@@Base+0x8e4>
   17004:	ldr	r4, [r9, #4]
   17008:	cmp	r4, #0
   1700c:	beq	171d0 <argp_failure@@Base+0x7a4>
   17010:	add	r0, r4, r0
   17014:	str	r7, [sp, #16]
   17018:	str	r0, [sp, #20]
   1701c:	rsb	r0, r0, r0, lsl #3
   17020:	lsl	r0, r0, #2
   17024:	bl	1ab84 <argp_parse@@Base+0x2140>
   17028:	ldr	r8, [r9, #8]
   1702c:	mov	r5, r0
   17030:	mov	r0, r8
   17034:	bl	11518 <strlen@plt>
   17038:	mov	r7, r0
   1703c:	ldr	r0, [r6, #8]
   17040:	bl	11518 <strlen@plt>
   17044:	add	r0, r7, r0
   17048:	str	r7, [fp, #-36]	; 0xffffffdc
   1704c:	add	r0, r0, #1
   17050:	bl	1ab84 <argp_parse@@Base+0x2140>
   17054:	cmp	r5, #0
   17058:	str	r5, [sp, #24]
   1705c:	cmpne	r0, #0
   17060:	beq	17328 <argp_failure@@Base+0x8fc>
   17064:	ldr	r1, [sp, #20]
   17068:	str	r0, [sp, #36]	; 0x24
   1706c:	movw	r0, #37450	; 0x924a
   17070:	movt	r0, #2340	; 0x924
   17074:	cmp	r1, r0
   17078:	bcs	173a8 <argp_failure@@Base+0x97c>
   1707c:	ldr	r7, [sp, #24]
   17080:	ldr	r1, [r9]
   17084:	rsb	r5, r4, r4, lsl #3
   17088:	lsl	r2, r5, #2
   1708c:	str	r2, [sp, #8]
   17090:	mov	r0, r7
   17094:	bl	113d4 <memcpy@plt>
   17098:	ldm	r6, {r1, r2}
   1709c:	add	r0, r7, r5, lsl #2
   170a0:	rsb	r2, r2, r2, lsl #3
   170a4:	lsl	r2, r2, #2
   170a8:	bl	113d4 <memcpy@plt>
   170ac:	ldr	r5, [sp, #36]	; 0x24
   170b0:	ldr	sl, [fp, #-36]	; 0xffffffdc
   170b4:	mov	r1, r8
   170b8:	mov	r0, r5
   170bc:	mov	r2, sl
   170c0:	bl	113d4 <memcpy@plt>
   170c4:	add	r0, r7, #8
   170c8:	ldr	r1, [r0]
   170cc:	subs	r4, r4, #1
   170d0:	sub	r1, r1, r8
   170d4:	add	r1, r5, r1
   170d8:	str	r1, [r0], #28
   170dc:	bne	170c8 <argp_failure@@Base+0x69c>
   170e0:	ldr	r0, [r6, #4]
   170e4:	add	r8, r5, sl
   170e8:	str	r6, [sp, #12]
   170ec:	cmp	r0, #0
   170f0:	beq	171ec <argp_failure@@Base+0x7c0>
   170f4:	str	r0, [sp, #32]
   170f8:	ldr	r0, [sp, #24]
   170fc:	ldr	r1, [sp, #8]
   17100:	add	r0, r0, r1
   17104:	mov	r1, sl
   17108:	ldr	sl, [r6, #8]
   1710c:	cmp	r1, #0
   17110:	ble	171f4 <argp_failure@@Base+0x7c8>
   17114:	str	r8, [fp, #-36]	; 0xffffffdc
   17118:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1711c:	str	r1, [r0, #8]
   17120:	ldr	r6, [r0, #4]
   17124:	cmp	r6, #0
   17128:	beq	171ac <argp_failure@@Base+0x780>
   1712c:	ldr	r9, [r0]
   17130:	mov	r7, r0
   17134:	ldrb	r0, [r9, #12]
   17138:	tst	r0, #8
   1713c:	bne	1719c <argp_failure@@Base+0x770>
   17140:	ldr	r5, [r9, #4]
   17144:	sub	r0, r5, #1
   17148:	cmp	r0, #254	; 0xfe
   1714c:	bhi	1719c <argp_failure@@Base+0x770>
   17150:	ldrb	r4, [sl]
   17154:	bl	114e8 <__ctype_b_loc@plt>
   17158:	cmp	r5, r4
   1715c:	bne	1719c <argp_failure@@Base+0x770>
   17160:	ldr	r0, [r0]
   17164:	add	r0, r0, r5, lsl #1
   17168:	ldrh	r0, [r0]
   1716c:	ands	r0, r0, #16384	; 0x4000
   17170:	ldr	r0, [sp, #36]	; 0x24
   17174:	beq	1719c <argp_failure@@Base+0x770>
   17178:	ldrb	r1, [r0], #1
   1717c:	cmp	r1, r4
   17180:	beq	17198 <argp_failure@@Base+0x76c>
   17184:	cmp	r0, r8
   17188:	bcc	17178 <argp_failure@@Base+0x74c>
   1718c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17190:	strb	r4, [r0], #1
   17194:	str	r0, [fp, #-36]	; 0xffffffdc
   17198:	add	sl, sl, #1
   1719c:	subs	r6, r6, #1
   171a0:	add	r9, r9, #24
   171a4:	bne	17134 <argp_failure@@Base+0x708>
   171a8:	b	171b0 <argp_failure@@Base+0x784>
   171ac:	mov	r7, r0
   171b0:	ldr	r0, [sp, #32]
   171b4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   171b8:	subs	r0, r0, #1
   171bc:	str	r0, [sp, #32]
   171c0:	mov	r0, r7
   171c4:	add	r0, r7, #28
   171c8:	bne	17118 <argp_failure@@Base+0x6ec>
   171cc:	b	17290 <argp_failure@@Base+0x864>
   171d0:	ldr	r1, [r6]
   171d4:	ldr	r2, [r6, #8]
   171d8:	str	r1, [r9]
   171dc:	stmib	r9, {r0, r2}
   171e0:	mov	r0, #0
   171e4:	str	r0, [r6, #4]
   171e8:	b	17310 <argp_failure@@Base+0x8e4>
   171ec:	str	r8, [fp, #-36]	; 0xffffffdc
   171f0:	b	17290 <argp_failure@@Base+0x864>
   171f4:	str	r8, [fp, #-36]	; 0xffffffdc
   171f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   171fc:	str	r1, [r0, #8]
   17200:	ldr	r6, [r0, #4]
   17204:	cmp	r6, #0
   17208:	beq	17274 <argp_failure@@Base+0x848>
   1720c:	mov	r8, r0
   17210:	ldr	r0, [r0]
   17214:	add	r4, r0, #12
   17218:	ldrb	r0, [r4]
   1721c:	tst	r0, #8
   17220:	bne	17264 <argp_failure@@Base+0x838>
   17224:	ldr	r7, [r4, #-8]
   17228:	sub	r0, r7, #1
   1722c:	cmp	r0, #254	; 0xfe
   17230:	bhi	17264 <argp_failure@@Base+0x838>
   17234:	ldrb	r5, [sl]
   17238:	bl	114e8 <__ctype_b_loc@plt>
   1723c:	cmp	r7, r5
   17240:	bne	17264 <argp_failure@@Base+0x838>
   17244:	ldr	r0, [r0]
   17248:	add	r0, r0, r7, lsl #1
   1724c:	ldrh	r0, [r0]
   17250:	ands	r0, r0, #16384	; 0x4000
   17254:	ldrne	r0, [fp, #-36]	; 0xffffffdc
   17258:	addne	sl, sl, #1
   1725c:	strbne	r5, [r0], #1
   17260:	strne	r0, [fp, #-36]	; 0xffffffdc
   17264:	add	r4, r4, #24
   17268:	subs	r6, r6, #1
   1726c:	bne	17218 <argp_failure@@Base+0x7ec>
   17270:	b	17278 <argp_failure@@Base+0x84c>
   17274:	mov	r8, r0
   17278:	ldr	r0, [sp, #32]
   1727c:	subs	r0, r0, #1
   17280:	str	r0, [sp, #32]
   17284:	mov	r0, r8
   17288:	add	r0, r8, #28
   1728c:	bne	171f8 <argp_failure@@Base+0x7cc>
   17290:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17294:	mov	r0, #0
   17298:	strb	r0, [r1]
   1729c:	ldr	r0, [r9]
   172a0:	bl	19df4 <argp_parse@@Base+0x13b0>
   172a4:	ldr	r0, [r9, #8]
   172a8:	bl	19df4 <argp_parse@@Base+0x13b0>
   172ac:	ldr	r0, [sp, #24]
   172b0:	ldr	r6, [sp, #12]
   172b4:	str	r0, [r9]
   172b8:	ldr	r0, [sp, #20]
   172bc:	str	r0, [r9, #4]
   172c0:	ldr	r0, [sp, #36]	; 0x24
   172c4:	str	r0, [r9, #8]
   172c8:	ldr	r0, [r6, #12]
   172cc:	cmp	r0, #0
   172d0:	beq	172e8 <argp_failure@@Base+0x8bc>
   172d4:	ldr	r4, [r0, #24]
   172d8:	bl	19df4 <argp_parse@@Base+0x13b0>
   172dc:	cmp	r4, #0
   172e0:	mov	r0, r4
   172e4:	bne	172d4 <argp_failure@@Base+0x8a8>
   172e8:	ldr	r0, [r6, #4]
   172ec:	ldr	sl, [sp, #4]
   172f0:	ldr	r8, [sp, #40]	; 0x28
   172f4:	ldr	r7, [sp, #16]
   172f8:	cmp	r0, #0
   172fc:	beq	17310 <argp_failure@@Base+0x8e4>
   17300:	ldr	r0, [r6]
   17304:	bl	19df4 <argp_parse@@Base+0x13b0>
   17308:	ldr	r0, [r6, #8]
   1730c:	bl	19df4 <argp_parse@@Base+0x13b0>
   17310:	mov	r0, r6
   17314:	bl	19df4 <argp_parse@@Base+0x13b0>
   17318:	ldr	r0, [r7, #16]!
   1731c:	cmp	r0, #0
   17320:	bne	16f50 <argp_failure@@Base+0x524>
   17324:	b	16f40 <argp_failure@@Base+0x514>
   17328:	movw	r0, #55049	; 0xd709
   1732c:	movw	r1, #54865	; 0xd651
   17330:	movw	r3, #55074	; 0xd722
   17334:	movw	r2, #970	; 0x3ca
   17338:	movt	r0, #1
   1733c:	movt	r1, #1
   17340:	movt	r3, #1
   17344:	bl	11680 <__assert_fail@plt>
   17348:	movw	r0, #54861	; 0xd64d
   1734c:	movw	r1, #54865	; 0xd651
   17350:	movw	r3, #54877	; 0xd65d
   17354:	movw	r2, #450	; 0x1c2
   17358:	movt	r0, #1
   1735c:	movt	r1, #1
   17360:	movt	r3, #1
   17364:	bl	11680 <__assert_fail@plt>
   17368:	movw	r0, #54941	; 0xd69d
   1736c:	movw	r1, #54865	; 0xd651
   17370:	movw	r3, #54877	; 0xd65d
   17374:	mov	r2, #460	; 0x1cc
   17378:	movt	r0, #1
   1737c:	movt	r1, #1
   17380:	movt	r3, #1
   17384:	bl	11680 <__assert_fail@plt>
   17388:	movw	r0, #54992	; 0xd6d0
   1738c:	movw	r1, #54865	; 0xd651
   17390:	movw	r3, #54877	; 0xd65d
   17394:	mov	r2, #476	; 0x1dc
   17398:	movt	r0, #1
   1739c:	movt	r1, #1
   173a0:	movt	r3, #1
   173a4:	bl	11680 <__assert_fail@plt>
   173a8:	movw	r0, #54997	; 0xd6d5
   173ac:	movw	r1, #54865	; 0xd651
   173b0:	movw	r3, #55074	; 0xd722
   173b4:	mov	r2, #972	; 0x3cc
   173b8:	movt	r0, #1
   173bc:	movt	r1, #1
   173c0:	movt	r3, #1
   173c4:	bl	11680 <__assert_fail@plt>
   173c8:	push	{r4, r5, fp, lr}
   173cc:	add	fp, sp, #8
   173d0:	mov	r5, r1
   173d4:	cmp	r0, #0
   173d8:	beq	17404 <argp_failure@@Base+0x9d8>
   173dc:	mov	r1, #10
   173e0:	bl	11524 <strchr@plt>
   173e4:	mov	r4, r0
   173e8:	cmp	r0, #0
   173ec:	movwne	r4, #1
   173f0:	cmp	r5, #0
   173f4:	ldrne	r1, [r5]
   173f8:	cmpne	r1, #0
   173fc:	beq	17438 <argp_failure@@Base+0xa0c>
   17400:	b	17418 <argp_failure@@Base+0x9ec>
   17404:	mov	r4, #0
   17408:	cmp	r5, #0
   1740c:	ldrne	r1, [r5]
   17410:	cmpne	r1, #0
   17414:	beq	17438 <argp_failure@@Base+0xa0c>
   17418:	add	r5, r5, #16
   1741c:	ldr	r0, [r1, #8]
   17420:	ldr	r1, [r1, #16]
   17424:	bl	173c8 <argp_failure@@Base+0x99c>
   17428:	ldr	r1, [r5], #16
   1742c:	add	r4, r0, r4
   17430:	cmp	r1, #0
   17434:	bne	1741c <argp_failure@@Base+0x9f0>
   17438:	mov	r0, r4
   1743c:	pop	{r4, r5, fp, pc}
   17440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17444:	add	fp, sp, #28
   17448:	sub	sp, sp, #28
   1744c:	ldr	r4, [r0, #4]
   17450:	str	r1, [fp, #-40]	; 0xffffffd8
   17454:	cmp	r4, #0
   17458:	beq	177f4 <argp_failure@@Base+0xdc8>
   1745c:	mov	r5, r0
   17460:	ldr	r0, [r0, #8]
   17464:	bl	11518 <strlen@plt>
   17468:	add	r0, r0, #8
   1746c:	bic	r0, r0, #7
   17470:	sub	r0, sp, r0
   17474:	mov	sp, r0
   17478:	ldr	r7, [r5]
   1747c:	str	r0, [fp, #-52]	; 0xffffffcc
   17480:	str	r0, [fp, #-48]	; 0xffffffd0
   17484:	str	r5, [fp, #-44]	; 0xffffffd4
   17488:	ldr	r6, [r7, #4]
   1748c:	str	r4, [fp, #-36]	; 0xffffffdc
   17490:	cmp	r6, #0
   17494:	beq	17538 <argp_failure@@Base+0xb0c>
   17498:	ldr	r4, [r7]
   1749c:	ldr	r5, [r7, #8]
   174a0:	mov	sl, r4
   174a4:	b	174d0 <argp_failure@@Base+0xaa4>
   174a8:	ldr	r0, [r4, #8]
   174ac:	cmp	r0, #0
   174b0:	bne	17528 <argp_failure@@Base+0xafc>
   174b4:	ldr	r0, [r4, #12]
   174b8:	orr	r0, r0, r8
   174bc:	tst	r0, #16
   174c0:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   174c4:	strbeq	r9, [r0], #1
   174c8:	streq	r0, [fp, #-48]	; 0xffffffd0
   174cc:	b	17528 <argp_failure@@Base+0xafc>
   174d0:	ldr	r8, [sl, #12]
   174d4:	tst	r8, #8
   174d8:	bne	1752c <argp_failure@@Base+0xb00>
   174dc:	ldr	r9, [sl, #4]
   174e0:	sub	r0, r9, #1
   174e4:	cmp	r0, #254	; 0xfe
   174e8:	bhi	1752c <argp_failure@@Base+0xb00>
   174ec:	bl	114e8 <__ctype_b_loc@plt>
   174f0:	ldr	r0, [r0]
   174f4:	add	r0, r0, r9, lsl #1
   174f8:	ldrb	r0, [r0, #1]
   174fc:	tst	r0, #64	; 0x40
   17500:	beq	1752c <argp_failure@@Base+0xb00>
   17504:	ldrb	r0, [r5]
   17508:	cmp	r9, r0
   1750c:	bne	1752c <argp_failure@@Base+0xb00>
   17510:	tst	r8, #4
   17514:	moveq	r4, sl
   17518:	tst	r8, #2
   1751c:	ldreq	r0, [sl, #8]
   17520:	cmpeq	r0, #0
   17524:	beq	174a8 <argp_failure@@Base+0xa7c>
   17528:	add	r5, r5, #1
   1752c:	subs	r6, r6, #1
   17530:	add	sl, sl, #24
   17534:	bne	174d0 <argp_failure@@Base+0xaa4>
   17538:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1753c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   17540:	add	r7, r7, #28
   17544:	subs	r4, r4, #1
   17548:	bne	17488 <argp_failure@@Base+0xa5c>
   1754c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17550:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17554:	cmp	r1, r2
   17558:	bls	17574 <argp_failure@@Base+0xb48>
   1755c:	mov	r0, #0
   17560:	strb	r0, [r1]
   17564:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17568:	movw	r1, #55118	; 0xd74e
   1756c:	movt	r1, #1
   17570:	bl	1b360 <argp_parse@@Base+0x291c>
   17574:	ldr	r5, [r6, #4]
   17578:	cmp	r5, #0
   1757c:	beq	177f4 <argp_failure@@Base+0xdc8>
   17580:	ldr	r8, [r6]
   17584:	ldr	r9, [r8, #4]
   17588:	cmp	r9, #0
   1758c:	beq	17720 <argp_failure@@Base+0xcf4>
   17590:	ldr	sl, [r8]
   17594:	ldr	r4, [r8, #8]
   17598:	str	sl, [fp, #-36]	; 0xffffffdc
   1759c:	ldr	r6, [sl, #12]
   175a0:	tst	r6, #8
   175a4:	bne	17714 <argp_failure@@Base+0xce8>
   175a8:	ldr	r7, [sl, #4]
   175ac:	sub	r0, r7, #1
   175b0:	cmp	r0, #254	; 0xfe
   175b4:	bhi	17714 <argp_failure@@Base+0xce8>
   175b8:	bl	114e8 <__ctype_b_loc@plt>
   175bc:	ldr	r0, [r0]
   175c0:	add	r0, r0, r7, lsl #1
   175c4:	ldrb	r0, [r0, #1]
   175c8:	tst	r0, #64	; 0x40
   175cc:	beq	17714 <argp_failure@@Base+0xce8>
   175d0:	ldrb	r0, [r4]
   175d4:	cmp	r7, r0
   175d8:	bne	17714 <argp_failure@@Base+0xce8>
   175dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   175e0:	tst	r6, #4
   175e4:	moveq	r0, sl
   175e8:	tst	r6, #2
   175ec:	str	r0, [fp, #-36]	; 0xffffffdc
   175f0:	bne	17710 <argp_failure@@Base+0xce4>
   175f4:	ldr	r3, [sl, #8]
   175f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   175fc:	cmp	r3, #0
   17600:	ldr	r0, [r0, #12]
   17604:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   17608:	orr	r0, r0, r6
   1760c:	ldreq	r3, [r1, #8]
   17610:	tst	r0, #16
   17614:	bne	17710 <argp_failure@@Base+0xce4>
   17618:	cmp	r3, #0
   1761c:	beq	17710 <argp_failure@@Base+0xce4>
   17620:	tst	r0, #1
   17624:	bne	176b0 <argp_failure@@Base+0xc84>
   17628:	mov	r0, r3
   1762c:	str	r3, [fp, #-48]	; 0xffffffd0
   17630:	bl	11518 <strlen@plt>
   17634:	ldr	r7, [fp, #-40]	; 0xffffffd8
   17638:	add	r6, r0, #6
   1763c:	ldr	r2, [r7, #24]
   17640:	ldr	r0, [r7, #28]
   17644:	ldr	r1, [r7, #16]
   17648:	sub	r2, r0, r2
   1764c:	cmp	r2, r1
   17650:	bls	17660 <argp_failure@@Base+0xc34>
   17654:	mov	r0, r7
   17658:	bl	1accc <argp_parse@@Base+0x2288>
   1765c:	ldr	r0, [r7, #28]
   17660:	ldr	r3, [r7, #20]
   17664:	ldr	r2, [r7, #8]
   17668:	ldr	r1, [r7, #32]
   1766c:	cmp	r3, #0
   17670:	addgt	r6, r6, r3
   17674:	cmp	r6, r2
   17678:	bcs	176c4 <argp_failure@@Base+0xc98>
   1767c:	ldr	r6, [fp, #-48]	; 0xffffffd0
   17680:	cmp	r0, r1
   17684:	bcc	176a0 <argp_failure@@Base+0xc74>
   17688:	mov	r0, r7
   1768c:	mov	r1, #1
   17690:	bl	1b274 <argp_parse@@Base+0x2830>
   17694:	cmp	r0, #0
   17698:	beq	176f8 <argp_failure@@Base+0xccc>
   1769c:	ldr	r0, [r7, #28]
   176a0:	add	r1, r0, #1
   176a4:	str	r1, [r7, #28]
   176a8:	mov	r1, #32
   176ac:	b	176f4 <argp_failure@@Base+0xcc8>
   176b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   176b4:	movw	r1, #55125	; 0xd755
   176b8:	mov	r2, r7
   176bc:	movt	r1, #1
   176c0:	b	1770c <argp_failure@@Base+0xce0>
   176c4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   176c8:	cmp	r0, r1
   176cc:	bcc	176e8 <argp_failure@@Base+0xcbc>
   176d0:	mov	r0, r7
   176d4:	mov	r1, #1
   176d8:	bl	1b274 <argp_parse@@Base+0x2830>
   176dc:	cmp	r0, #0
   176e0:	beq	176f8 <argp_failure@@Base+0xccc>
   176e4:	ldr	r0, [r7, #28]
   176e8:	add	r1, r0, #1
   176ec:	str	r1, [r7, #28]
   176f0:	mov	r1, #10
   176f4:	strb	r1, [r0]
   176f8:	ldr	r2, [sl, #4]
   176fc:	movw	r1, #55136	; 0xd760
   17700:	mov	r0, r7
   17704:	mov	r3, r6
   17708:	movt	r1, #1
   1770c:	bl	1b360 <argp_parse@@Base+0x291c>
   17710:	add	r4, r4, #1
   17714:	subs	r9, r9, #1
   17718:	add	sl, sl, #24
   1771c:	bne	1759c <argp_failure@@Base+0xb70>
   17720:	subs	r5, r5, #1
   17724:	add	r8, r8, #28
   17728:	bne	17584 <argp_failure@@Base+0xb58>
   1772c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17730:	ldr	r4, [r0, #4]
   17734:	cmp	r4, #0
   17738:	beq	177f4 <argp_failure@@Base+0xdc8>
   1773c:	ldr	r6, [r0]
   17740:	movw	sl, #55169	; 0xd781
   17744:	movw	r9, #55145	; 0xd769
   17748:	movt	sl, #1
   1774c:	movt	r9, #1
   17750:	ldr	r7, [r6, #4]
   17754:	cmp	r7, #0
   17758:	beq	177e8 <argp_failure@@Base+0xdbc>
   1775c:	ldr	r8, [r6]
   17760:	mov	r5, r8
   17764:	ldr	r2, [r5]
   17768:	cmp	r2, #0
   1776c:	beq	177c0 <argp_failure@@Base+0xd94>
   17770:	ldr	r0, [r5, #12]
   17774:	tst	r0, #4
   17778:	moveq	r8, r5
   1777c:	tst	r0, #2
   17780:	bne	177c0 <argp_failure@@Base+0xd94>
   17784:	ldr	r3, [r5, #8]
   17788:	ldr	r1, [r8, #12]
   1778c:	cmp	r3, #0
   17790:	orr	r0, r1, r0
   17794:	ldreq	r3, [r8, #8]
   17798:	tst	r0, #16
   1779c:	bne	177c0 <argp_failure@@Base+0xd94>
   177a0:	cmp	r3, #0
   177a4:	beq	177d0 <argp_failure@@Base+0xda4>
   177a8:	tst	r0, #1
   177ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177b0:	movne	r1, r9
   177b4:	movweq	r1, #55158	; 0xd776
   177b8:	movteq	r1, #1
   177bc:	bl	1b360 <argp_parse@@Base+0x291c>
   177c0:	subs	r7, r7, #1
   177c4:	add	r5, r5, #24
   177c8:	bne	17764 <argp_failure@@Base+0xd38>
   177cc:	b	177e8 <argp_failure@@Base+0xdbc>
   177d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177d4:	mov	r1, sl
   177d8:	bl	1b360 <argp_parse@@Base+0x291c>
   177dc:	subs	r7, r7, #1
   177e0:	add	r5, r5, #24
   177e4:	bne	17764 <argp_failure@@Base+0xd38>
   177e8:	subs	r4, r4, #1
   177ec:	add	r6, r6, #28
   177f0:	bne	17750 <argp_failure@@Base+0xd24>
   177f4:	sub	sp, fp, #28
   177f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17800:	add	fp, sp, #28
   17804:	sub	sp, sp, #28
   17808:	ldr	r6, [r0, #8]
   1780c:	ldr	r5, [r0, #16]
   17810:	ldr	sl, [r2]
   17814:	mov	r4, r3
   17818:	mov	r9, r2
   1781c:	mov	r8, r1
   17820:	mov	r7, r0
   17824:	cmp	r0, #0
   17828:	mov	r0, r6
   1782c:	beq	17864 <argp_failure@@Base+0xe38>
   17830:	ldr	r0, [r7, #20]
   17834:	cmp	r0, #0
   17838:	mov	r0, r6
   1783c:	beq	17864 <argp_failure@@Base+0xe38>
   17840:	mov	r0, r7
   17844:	mov	r1, r8
   17848:	bl	19714 <argp_parse@@Base+0xcd0>
   1784c:	ldr	r3, [r7, #20]
   17850:	mov	r2, r0
   17854:	movw	r0, #6
   17858:	mov	r1, r6
   1785c:	movt	r0, #512	; 0x200
   17860:	blx	r3
   17864:	cmp	r0, #0
   17868:	str	sl, [sp, #24]
   1786c:	beq	178cc <argp_failure@@Base+0xea0>
   17870:	mov	r1, #10
   17874:	mov	sl, r0
   17878:	bl	113a4 <strchrnul@plt>
   1787c:	mov	r7, r0
   17880:	ldrb	r0, [r0]
   17884:	cmp	r0, #0
   17888:	add	r0, sp, #12
   1788c:	stm	r0, {r5, r6, sl}
   17890:	beq	178e8 <argp_failure@@Base+0xebc>
   17894:	ldr	r0, [sp, #24]
   17898:	ldrb	r6, [r0]
   1789c:	cmp	r6, #0
   178a0:	beq	178f0 <argp_failure@@Base+0xec4>
   178a4:	mov	r5, #0
   178a8:	add	sl, r7, #1
   178ac:	mov	r1, #10
   178b0:	mov	r0, sl
   178b4:	bl	113a4 <strchrnul@plt>
   178b8:	add	r5, r5, #1
   178bc:	mov	r7, r0
   178c0:	cmp	r5, r6
   178c4:	bcc	178a8 <argp_failure@@Base+0xe7c>
   178c8:	b	178f4 <argp_failure@@Base+0xec8>
   178cc:	mov	r7, #0
   178d0:	mov	sl, #0
   178d4:	cmp	r5, #0
   178d8:	ldrne	r0, [r5]
   178dc:	cmpne	r0, #0
   178e0:	beq	17a34 <argp_failure@@Base+0x1008>
   178e4:	b	17a50 <argp_failure@@Base+0x1024>
   178e8:	mov	r0, #0
   178ec:	b	17904 <argp_failure@@Base+0xed8>
   178f0:	ldr	sl, [sp, #20]
   178f4:	ldr	r0, [r9]
   178f8:	add	r0, r0, #1
   178fc:	str	r0, [r9]
   17900:	mov	r0, #1
   17904:	ldr	r5, [fp, #8]
   17908:	str	r0, [sp, #8]
   1790c:	add	r0, r7, #1
   17910:	sub	r6, r0, sl
   17914:	ldr	r2, [r5, #24]
   17918:	ldr	r0, [r5, #28]
   1791c:	ldr	r1, [r5, #16]
   17920:	sub	r2, r0, r2
   17924:	cmp	r2, r1
   17928:	bls	17938 <argp_failure@@Base+0xf0c>
   1792c:	mov	r0, r5
   17930:	bl	1accc <argp_parse@@Base+0x2288>
   17934:	ldr	r0, [r5, #28]
   17938:	ldr	r3, [r5, #20]
   1793c:	ldr	r2, [r5, #8]
   17940:	ldr	r1, [r5, #32]
   17944:	cmp	r3, #0
   17948:	addgt	r6, r6, r3
   1794c:	cmp	r6, r2
   17950:	bcs	17984 <argp_failure@@Base+0xf58>
   17954:	cmp	r0, r1
   17958:	bcc	17974 <argp_failure@@Base+0xf48>
   1795c:	mov	r0, r5
   17960:	mov	r1, #1
   17964:	bl	1b274 <argp_parse@@Base+0x2830>
   17968:	cmp	r0, #0
   1796c:	beq	179b4 <argp_failure@@Base+0xf88>
   17970:	ldr	r0, [r5, #28]
   17974:	add	r1, r0, #1
   17978:	str	r1, [r5, #28]
   1797c:	mov	r1, #32
   17980:	b	179b0 <argp_failure@@Base+0xf84>
   17984:	cmp	r0, r1
   17988:	bcc	179a4 <argp_failure@@Base+0xf78>
   1798c:	mov	r0, r5
   17990:	mov	r1, #1
   17994:	bl	1b274 <argp_parse@@Base+0x2830>
   17998:	cmp	r0, #0
   1799c:	beq	179b4 <argp_failure@@Base+0xf88>
   179a0:	ldr	r0, [r5, #28]
   179a4:	add	r1, r0, #1
   179a8:	str	r1, [r5, #28]
   179ac:	mov	r1, #10
   179b0:	strb	r1, [r0]
   179b4:	mov	r6, r5
   179b8:	sub	r5, r7, sl
   179bc:	ldr	r0, [r6, #28]
   179c0:	ldr	r1, [r6, #32]
   179c4:	add	r2, r0, r5
   179c8:	cmp	r2, r1
   179cc:	bls	179ec <argp_failure@@Base+0xfc0>
   179d0:	mov	r0, r6
   179d4:	mov	r1, r5
   179d8:	bl	1b274 <argp_parse@@Base+0x2830>
   179dc:	cmp	r0, #0
   179e0:	beq	17a04 <argp_failure@@Base+0xfd8>
   179e4:	ldr	r6, [fp, #8]
   179e8:	ldr	r0, [r6, #28]
   179ec:	mov	r1, sl
   179f0:	mov	r2, r5
   179f4:	bl	113d4 <memcpy@plt>
   179f8:	ldr	r0, [r6, #28]
   179fc:	add	r0, r0, r5
   17a00:	str	r0, [r6, #28]
   17a04:	ldr	r0, [sp, #16]
   17a08:	ldr	r1, [sp, #20]
   17a0c:	cmp	r1, r0
   17a10:	beq	17a1c <argp_failure@@Base+0xff0>
   17a14:	mov	r0, r1
   17a18:	bl	19df4 <argp_parse@@Base+0x13b0>
   17a1c:	ldr	r5, [sp, #12]
   17a20:	ldr	sl, [sp, #8]
   17a24:	cmp	r5, #0
   17a28:	ldrne	r0, [r5]
   17a2c:	cmpne	r0, #0
   17a30:	bne	17a50 <argp_failure@@Base+0x1024>
   17a34:	cmp	sl, #0
   17a38:	cmpne	r4, #0
   17a3c:	bne	17a90 <argp_failure@@Base+0x1064>
   17a40:	clz	r0, r4
   17a44:	lsr	r0, r0, #5
   17a48:	sub	sp, fp, #28
   17a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a50:	add	r6, r5, #16
   17a54:	ldr	r5, [fp, #8]
   17a58:	mov	r1, r8
   17a5c:	mov	r2, r9
   17a60:	mov	r3, r4
   17a64:	str	r5, [sp]
   17a68:	bl	177fc <argp_failure@@Base+0xdd0>
   17a6c:	clz	r1, r0
   17a70:	ldr	r0, [r6], #16
   17a74:	lsr	r4, r1, #5
   17a78:	cmp	r0, #0
   17a7c:	bne	17a58 <argp_failure@@Base+0x102c>
   17a80:	lsr	r4, r1, #5
   17a84:	cmp	sl, #0
   17a88:	cmpne	r4, #0
   17a8c:	beq	17a40 <argp_failure@@Base+0x1014>
   17a90:	ldr	r2, [sp, #24]
   17a94:	ldrb	r1, [r7]
   17a98:	ldrb	r0, [r2]
   17a9c:	cmp	r1, #0
   17aa0:	beq	17ac0 <argp_failure@@Base+0x1094>
   17aa4:	add	r0, r0, #1
   17aa8:	mov	r4, #0
   17aac:	strb	r0, [r2]
   17ab0:	clz	r0, r4
   17ab4:	lsr	r0, r0, #5
   17ab8:	sub	sp, fp, #28
   17abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ac0:	cmp	r0, #0
   17ac4:	movne	r0, #0
   17ac8:	strbne	r0, [r2]
   17acc:	clz	r0, r4
   17ad0:	lsr	r0, r0, #5
   17ad4:	sub	sp, fp, #28
   17ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17adc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ae0:	add	fp, sp, #28
   17ae4:	sub	sp, sp, #28
   17ae8:	ldr	r4, [r0, #12]
   17aec:	mov	r5, r0
   17af0:	ldr	r0, [r0, #16]
   17af4:	mov	r8, r2
   17af8:	mov	r6, #0
   17afc:	str	r3, [sp, #20]
   17b00:	str	r1, [sp, #24]
   17b04:	cmp	r4, #0
   17b08:	str	r0, [sp, #16]
   17b0c:	beq	17b48 <argp_failure@@Base+0x111c>
   17b10:	mov	r0, r4
   17b14:	mov	r1, #11
   17b18:	bl	11524 <strchr@plt>
   17b1c:	cmp	r0, #0
   17b20:	mov	r9, r0
   17b24:	mov	r7, r0
   17b28:	subne	r9, r9, r4
   17b2c:	cmp	r8, #0
   17b30:	movne	r9, #0
   17b34:	cmp	r0, #0
   17b38:	addne	r7, r7, #1
   17b3c:	cmp	r8, #0
   17b40:	moveq	r7, r4
   17b44:	b	17b50 <argp_failure@@Base+0x1124>
   17b48:	mov	r9, #0
   17b4c:	mov	r7, #0
   17b50:	ldr	r0, [r5, #20]
   17b54:	movw	r4, #1
   17b58:	movt	r4, #512	; 0x200
   17b5c:	cmp	r0, #0
   17b60:	beq	17c68 <argp_failure@@Base+0x123c>
   17b64:	cmp	r9, #0
   17b68:	beq	17b7c <argp_failure@@Base+0x1150>
   17b6c:	mov	r0, r7
   17b70:	mov	r1, r9
   17b74:	bl	113c8 <strndup@plt>
   17b78:	mov	r7, r0
   17b7c:	ldr	r1, [sp, #24]
   17b80:	mov	r0, r5
   17b84:	bl	19714 <argp_parse@@Base+0xcd0>
   17b88:	ldr	r3, [r5, #20]
   17b8c:	mov	r6, r0
   17b90:	cmp	r8, #0
   17b94:	mov	r0, r4
   17b98:	mov	r1, r7
   17b9c:	addne	r0, r0, #1
   17ba0:	mov	r2, r6
   17ba4:	blx	r3
   17ba8:	mov	r1, r0
   17bac:	cmp	r1, #0
   17bb0:	beq	17c74 <argp_failure@@Base+0x1248>
   17bb4:	ldr	r0, [sp, #20]
   17bb8:	str	r1, [sp, #12]
   17bbc:	cmp	r0, #0
   17bc0:	beq	17c08 <argp_failure@@Base+0x11dc>
   17bc4:	ldr	r0, [fp, #12]
   17bc8:	ldr	r2, [r0, #28]
   17bcc:	ldr	r1, [r0, #32]
   17bd0:	cmp	r2, r1
   17bd4:	bcc	17bf4 <argp_failure@@Base+0x11c8>
   17bd8:	mov	r1, #1
   17bdc:	bl	1b274 <argp_parse@@Base+0x2830>
   17be0:	ldr	r1, [sp, #12]
   17be4:	cmp	r0, #0
   17be8:	beq	17c08 <argp_failure@@Base+0x11dc>
   17bec:	ldr	r0, [fp, #12]
   17bf0:	ldr	r2, [r0, #28]
   17bf4:	add	r1, r2, #1
   17bf8:	str	r1, [r0, #28]
   17bfc:	mov	r1, #10
   17c00:	strb	r1, [r2]
   17c04:	ldr	r1, [sp, #12]
   17c08:	cmp	r9, #0
   17c0c:	str	r6, [sp, #8]
   17c10:	beq	17c84 <argp_failure@@Base+0x1258>
   17c14:	cmp	r1, r7
   17c18:	bne	17c84 <argp_failure@@Base+0x1258>
   17c1c:	ldr	r6, [fp, #12]
   17c20:	ldr	r0, [r6, #28]!
   17c24:	ldr	r2, [r6, #4]
   17c28:	add	r1, r0, r9
   17c2c:	cmp	r1, r2
   17c30:	bls	17c4c <argp_failure@@Base+0x1220>
   17c34:	ldr	r0, [fp, #12]
   17c38:	mov	r1, r9
   17c3c:	bl	1b274 <argp_parse@@Base+0x2830>
   17c40:	cmp	r0, #0
   17c44:	beq	17fc4 <argp_failure@@Base+0x1598>
   17c48:	ldr	r0, [r6]
   17c4c:	mov	r1, r7
   17c50:	mov	r2, r9
   17c54:	mov	sl, r4
   17c58:	bl	113d4 <memcpy@plt>
   17c5c:	ldr	r0, [r6]
   17c60:	add	r0, r0, r9
   17c64:	b	17ce4 <argp_failure@@Base+0x12b8>
   17c68:	mov	r1, r7
   17c6c:	cmp	r1, #0
   17c70:	bne	17bb4 <argp_failure@@Base+0x1188>
   17c74:	mov	sl, #0
   17c78:	cmp	r9, #0
   17c7c:	bne	17d84 <argp_failure@@Base+0x1358>
   17c80:	b	17d94 <argp_failure@@Base+0x1368>
   17c84:	mov	r0, r1
   17c88:	mov	sl, r4
   17c8c:	bl	11518 <strlen@plt>
   17c90:	ldr	r1, [fp, #12]
   17c94:	cmp	r0, #0
   17c98:	add	r6, r1, #28
   17c9c:	beq	17ce8 <argp_failure@@Base+0x12bc>
   17ca0:	mov	r4, r0
   17ca4:	ldr	r0, [r1, #28]
   17ca8:	ldr	r1, [r1, #32]
   17cac:	add	r2, r0, r4
   17cb0:	cmp	r2, r1
   17cb4:	bls	17cd0 <argp_failure@@Base+0x12a4>
   17cb8:	ldr	r0, [fp, #12]
   17cbc:	mov	r1, r4
   17cc0:	bl	1b274 <argp_parse@@Base+0x2830>
   17cc4:	cmp	r0, #0
   17cc8:	beq	17ce8 <argp_failure@@Base+0x12bc>
   17ccc:	ldr	r0, [r6]
   17cd0:	ldr	r1, [sp, #12]
   17cd4:	mov	r2, r4
   17cd8:	bl	113d4 <memcpy@plt>
   17cdc:	ldr	r0, [r6]
   17ce0:	add	r0, r0, r4
   17ce4:	str	r0, [r6]
   17ce8:	ldr	r4, [fp, #12]
   17cec:	ldr	r2, [r6]
   17cf0:	ldr	r1, [r4, #24]
   17cf4:	ldr	r0, [r4, #16]
   17cf8:	sub	r1, r2, r1
   17cfc:	cmp	r1, r0
   17d00:	bls	17d0c <argp_failure@@Base+0x12e0>
   17d04:	mov	r0, r4
   17d08:	bl	1accc <argp_parse@@Base+0x2288>
   17d0c:	ldr	r1, [r4, #20]
   17d10:	ldr	r0, [r4, #4]
   17d14:	mov	r4, sl
   17d18:	bic	r1, r1, r1, asr #31
   17d1c:	cmp	r1, r0
   17d20:	bls	17d64 <argp_failure@@Base+0x1338>
   17d24:	ldr	r0, [fp, #12]
   17d28:	mov	r1, r0
   17d2c:	ldr	r0, [r0, #28]
   17d30:	ldr	r1, [r1, #32]
   17d34:	cmp	r0, r1
   17d38:	bcc	17d54 <argp_failure@@Base+0x1328>
   17d3c:	ldr	r0, [fp, #12]
   17d40:	mov	r1, #1
   17d44:	bl	1b274 <argp_parse@@Base+0x2830>
   17d48:	cmp	r0, #0
   17d4c:	beq	17d64 <argp_failure@@Base+0x1338>
   17d50:	ldr	r0, [r6]
   17d54:	add	r1, r0, #1
   17d58:	str	r1, [r6]
   17d5c:	mov	r1, #10
   17d60:	strb	r1, [r0]
   17d64:	ldr	r0, [sp, #12]
   17d68:	mov	sl, #1
   17d6c:	cmp	r0, r7
   17d70:	beq	17d78 <argp_failure@@Base+0x134c>
   17d74:	bl	19df4 <argp_parse@@Base+0x13b0>
   17d78:	ldr	r6, [sp, #8]
   17d7c:	cmp	r9, #0
   17d80:	beq	17d94 <argp_failure@@Base+0x1368>
   17d84:	cmp	r7, #0
   17d88:	ldrne	r0, [r5, #20]
   17d8c:	cmpne	r0, #0
   17d90:	bne	17e28 <argp_failure@@Base+0x13fc>
   17d94:	ldr	r9, [fp, #12]
   17d98:	cmp	r8, #0
   17d9c:	beq	17e3c <argp_failure@@Base+0x1410>
   17da0:	ldr	r3, [r5, #20]
   17da4:	cmp	r3, #0
   17da8:	beq	17e3c <argp_failure@@Base+0x1410>
   17dac:	add	r0, r4, #3
   17db0:	mov	r1, #0
   17db4:	mov	r2, r6
   17db8:	blx	r3
   17dbc:	cmp	r0, #0
   17dc0:	beq	17e3c <argp_failure@@Base+0x1410>
   17dc4:	mov	r6, r0
   17dc8:	ldr	r0, [sp, #20]
   17dcc:	ldr	r5, [sp, #24]
   17dd0:	orrs	r0, sl, r0
   17dd4:	beq	17ee4 <argp_failure@@Base+0x14b8>
   17dd8:	mov	r7, r9
   17ddc:	ldr	r0, [r7, #28]!
   17de0:	ldr	r1, [r7, #4]
   17de4:	cmp	r0, r1
   17de8:	bcc	17e04 <argp_failure@@Base+0x13d8>
   17dec:	mov	r0, r9
   17df0:	mov	r1, #1
   17df4:	bl	1b274 <argp_parse@@Base+0x2830>
   17df8:	cmp	r0, #0
   17dfc:	beq	17e14 <argp_failure@@Base+0x13e8>
   17e00:	ldr	r0, [r7]
   17e04:	add	r1, r0, #1
   17e08:	str	r1, [r7]
   17e0c:	mov	r1, #10
   17e10:	strb	r1, [r0]
   17e14:	mov	r0, r6
   17e18:	bl	11518 <strlen@plt>
   17e1c:	cmp	r0, #0
   17e20:	bne	17ef8 <argp_failure@@Base+0x14cc>
   17e24:	b	17f40 <argp_failure@@Base+0x1514>
   17e28:	mov	r0, r7
   17e2c:	bl	19df4 <argp_parse@@Base+0x13b0>
   17e30:	ldr	r9, [fp, #12]
   17e34:	cmp	r8, #0
   17e38:	bne	17da0 <argp_failure@@Base+0x1374>
   17e3c:	ldr	r5, [sp, #24]
   17e40:	ldr	r1, [sp, #16]
   17e44:	cmp	r1, #0
   17e48:	ldrne	r0, [r1]
   17e4c:	cmpne	r0, #0
   17e50:	bne	17e60 <argp_failure@@Base+0x1434>
   17e54:	mov	r0, sl
   17e58:	sub	sp, fp, #28
   17e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e60:	ldr	r4, [fp, #8]
   17e64:	cmp	r4, #0
   17e68:	beq	17eac <argp_failure@@Base+0x1480>
   17e6c:	ldr	r7, [sp, #20]
   17e70:	add	r6, r1, #16
   17e74:	cmp	r7, #0
   17e78:	movwne	r7, #1
   17e7c:	cmp	sl, #0
   17e80:	bne	17e54 <argp_failure@@Base+0x1428>
   17e84:	mov	r1, r5
   17e88:	mov	r2, r8
   17e8c:	mov	r3, r7
   17e90:	stm	sp, {r4, r9}
   17e94:	bl	17adc <argp_failure@@Base+0x10b0>
   17e98:	mov	sl, r0
   17e9c:	ldr	r0, [r6], #16
   17ea0:	cmp	r0, #0
   17ea4:	bne	17e7c <argp_failure@@Base+0x1450>
   17ea8:	b	17e54 <argp_failure@@Base+0x1428>
   17eac:	ldr	r7, [sp, #20]
   17eb0:	add	r4, r1, #16
   17eb4:	mov	r6, #0
   17eb8:	orrs	r3, sl, r7
   17ebc:	mov	r1, r5
   17ec0:	mov	r2, r8
   17ec4:	stm	sp, {r6, r9}
   17ec8:	movwne	r3, #1
   17ecc:	bl	17adc <argp_failure@@Base+0x10b0>
   17ed0:	orr	sl, r0, sl
   17ed4:	ldr	r0, [r4], #16
   17ed8:	cmp	r0, #0
   17edc:	bne	17eb8 <argp_failure@@Base+0x148c>
   17ee0:	b	17e54 <argp_failure@@Base+0x1428>
   17ee4:	mov	r0, r6
   17ee8:	bl	11518 <strlen@plt>
   17eec:	add	r7, r9, #28
   17ef0:	cmp	r0, #0
   17ef4:	beq	17f40 <argp_failure@@Base+0x1514>
   17ef8:	mov	r4, r0
   17efc:	ldr	r0, [r9, #28]
   17f00:	ldr	r1, [r9, #32]
   17f04:	add	r2, r0, r4
   17f08:	cmp	r2, r1
   17f0c:	bls	17f28 <argp_failure@@Base+0x14fc>
   17f10:	mov	r0, r9
   17f14:	mov	r1, r4
   17f18:	bl	1b274 <argp_parse@@Base+0x2830>
   17f1c:	cmp	r0, #0
   17f20:	beq	17f40 <argp_failure@@Base+0x1514>
   17f24:	ldr	r0, [r7]
   17f28:	mov	r1, r6
   17f2c:	mov	r2, r4
   17f30:	bl	113d4 <memcpy@plt>
   17f34:	ldr	r0, [r7]
   17f38:	add	r0, r0, r4
   17f3c:	str	r0, [r7]
   17f40:	mov	r0, r6
   17f44:	bl	19df4 <argp_parse@@Base+0x13b0>
   17f48:	ldr	r1, [r9, #24]
   17f4c:	ldr	r2, [r7]
   17f50:	ldr	r0, [r9, #16]
   17f54:	sub	r1, r2, r1
   17f58:	cmp	r1, r0
   17f5c:	bls	17f68 <argp_failure@@Base+0x153c>
   17f60:	mov	r0, r9
   17f64:	bl	1accc <argp_parse@@Base+0x2288>
   17f68:	ldr	r1, [r9, #20]
   17f6c:	ldr	r0, [r9, #4]
   17f70:	mov	sl, #1
   17f74:	bic	r1, r1, r1, asr #31
   17f78:	cmp	r1, r0
   17f7c:	bls	17e40 <argp_failure@@Base+0x1414>
   17f80:	ldr	r0, [r9, #28]
   17f84:	ldr	r1, [r9, #32]
   17f88:	cmp	r0, r1
   17f8c:	bcc	17fac <argp_failure@@Base+0x1580>
   17f90:	mov	r0, r9
   17f94:	mov	r1, #1
   17f98:	mov	sl, #1
   17f9c:	bl	1b274 <argp_parse@@Base+0x2830>
   17fa0:	cmp	r0, #0
   17fa4:	beq	17e40 <argp_failure@@Base+0x1414>
   17fa8:	ldr	r0, [r7]
   17fac:	add	r1, r0, #1
   17fb0:	mov	sl, #1
   17fb4:	str	r1, [r7]
   17fb8:	mov	r1, #10
   17fbc:	strb	r1, [r0]
   17fc0:	b	17e40 <argp_failure@@Base+0x1414>
   17fc4:	mov	sl, r4
   17fc8:	b	17ce8 <argp_failure@@Base+0x12bc>
   17fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fd0:	add	fp, sp, #28
   17fd4:	sub	sp, sp, #28
   17fd8:	mov	r7, r0
   17fdc:	ldr	r0, [r0, #16]
   17fe0:	mov	r5, r1
   17fe4:	cmp	r0, #0
   17fe8:	beq	18030 <argp_failure@@Base+0x1604>
   17fec:	mov	r2, r0
   17ff0:	mov	r1, r2
   17ff4:	ldr	r2, [r2, #12]
   17ff8:	cmp	r2, #0
   17ffc:	bne	17ff0 <argp_failure@@Base+0x15c4>
   18000:	add	r2, r1, #8
   18004:	ldr	r1, [r5, #16]
   18008:	ldr	r3, [r2]
   1800c:	cmp	r1, #0
   18010:	beq	18044 <argp_failure@@Base+0x1618>
   18014:	mov	r2, r1
   18018:	mov	r6, r2
   1801c:	ldr	r2, [r2, #12]
   18020:	cmp	r2, #0
   18024:	bne	18018 <argp_failure@@Base+0x15ec>
   18028:	add	r2, r6, #8
   1802c:	b	18048 <argp_failure@@Base+0x161c>
   18030:	add	r2, r7, #12
   18034:	ldr	r1, [r5, #16]
   18038:	ldr	r3, [r2]
   1803c:	cmp	r1, #0
   18040:	bne	18014 <argp_failure@@Base+0x15e8>
   18044:	add	r2, r5, #12
   18048:	ldr	r6, [r2]
   1804c:	orr	r4, r6, r3
   18050:	sub	r2, r3, r6
   18054:	cmn	r4, #1
   18058:	mov	r4, r2
   1805c:	suble	r4, r6, r3
   18060:	and	r3, r6, r3
   18064:	cmp	r3, #0
   18068:	movlt	r4, r2
   1806c:	cmp	r4, #0
   18070:	bne	18090 <argp_failure@@Base+0x1664>
   18074:	cmp	r0, #0
   18078:	mov	r4, r0
   1807c:	movwne	r4, #1
   18080:	cmp	r1, #0
   18084:	subne	r4, r4, #1
   18088:	cmp	r4, #0
   1808c:	beq	1809c <argp_failure@@Base+0x1670>
   18090:	mov	r0, r4
   18094:	sub	sp, fp, #28
   18098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1809c:	cmp	r0, #0
   180a0:	beq	18120 <argp_failure@@Base+0x16f4>
   180a4:	ldr	r3, [r1, #20]
   180a8:	ldr	r2, [r0, #20]
   180ac:	cmp	r2, r3
   180b0:	ble	180e0 <argp_failure@@Base+0x16b4>
   180b4:	ldr	r0, [r0, #12]
   180b8:	ldr	r2, [r0, #20]
   180bc:	cmp	r2, r3
   180c0:	bgt	180b4 <argp_failure@@Base+0x1688>
   180c4:	bl	18528 <argp_failure@@Base+0x1afc>
   180c8:	mov	r4, r0
   180cc:	cmp	r0, #0
   180d0:	movweq	r4, #1
   180d4:	mov	r0, r4
   180d8:	sub	sp, fp, #28
   180dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180e0:	bge	18110 <argp_failure@@Base+0x16e4>
   180e4:	ldr	r1, [r1, #12]
   180e8:	ldr	r3, [r1, #20]
   180ec:	cmp	r2, r3
   180f0:	blt	180e4 <argp_failure@@Base+0x16b8>
   180f4:	bl	18528 <argp_failure@@Base+0x1afc>
   180f8:	mov	r4, r0
   180fc:	cmp	r0, #0
   18100:	mvneq	r4, #0
   18104:	mov	r0, r4
   18108:	sub	sp, fp, #28
   1810c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18110:	bl	18528 <argp_failure@@Base+0x1afc>
   18114:	mov	r4, r0
   18118:	cmp	r0, #0
   1811c:	bne	18090 <argp_failure@@Base+0x1664>
   18120:	ldr	r0, [r7, #12]
   18124:	ldr	r1, [r5, #12]
   18128:	orr	r2, r1, r0
   1812c:	sub	r3, r0, r1
   18130:	cmn	r2, #1
   18134:	mov	r4, r3
   18138:	suble	r4, r1, r0
   1813c:	and	r0, r1, r0
   18140:	cmp	r0, #0
   18144:	movlt	r4, r3
   18148:	cmp	r4, #0
   1814c:	bne	18090 <argp_failure@@Base+0x1664>
   18150:	ldr	r4, [r7, #4]
   18154:	ldr	sl, [r7]
   18158:	mov	r9, #0
   1815c:	cmp	r4, #0
   18160:	beq	18194 <argp_failure@@Base+0x1768>
   18164:	add	r0, sl, #12
   18168:	mov	r1, r4
   1816c:	ldr	r9, [r0, #-12]
   18170:	cmp	r9, #0
   18174:	beq	18184 <argp_failure@@Base+0x1758>
   18178:	ldrb	r2, [r0]
   1817c:	tst	r2, #2
   18180:	beq	18194 <argp_failure@@Base+0x1768>
   18184:	add	r0, r0, #24
   18188:	subs	r1, r1, #1
   1818c:	bne	1816c <argp_failure@@Base+0x1740>
   18190:	mov	r9, #0
   18194:	ldr	r3, [r5, #4]
   18198:	ldr	ip, [r5]
   1819c:	cmp	r3, #0
   181a0:	beq	181d0 <argp_failure@@Base+0x17a4>
   181a4:	add	r0, ip, #12
   181a8:	mov	r1, r3
   181ac:	ldr	r6, [r0, #-12]
   181b0:	cmp	r6, #0
   181b4:	beq	181c4 <argp_failure@@Base+0x1798>
   181b8:	ldrb	r2, [r0]
   181bc:	tst	r2, #2
   181c0:	beq	181d4 <argp_failure@@Base+0x17a8>
   181c4:	add	r0, r0, #24
   181c8:	subs	r1, r1, #1
   181cc:	bne	181ac <argp_failure@@Base+0x1780>
   181d0:	mov	r6, #0
   181d4:	ldr	r1, [sl, #12]
   181d8:	mov	r8, #0
   181dc:	cmp	r9, #0
   181e0:	str	r4, [sp, #12]
   181e4:	str	r3, [sp, #16]
   181e8:	str	sl, [sp, #8]
   181ec:	str	r1, [sp, #24]
   181f0:	beq	18268 <argp_failure@@Base+0x183c>
   181f4:	ands	r0, r1, #8
   181f8:	beq	18268 <argp_failure@@Base+0x183c>
   181fc:	str	ip, [sp, #20]
   18200:	bl	114e8 <__ctype_b_loc@plt>
   18204:	ldrb	r1, [r9]
   18208:	ldr	r0, [r0]
   1820c:	add	r2, r0, r1, lsl #1
   18210:	ldrb	r2, [r2, #1]
   18214:	tst	r2, #32
   18218:	beq	18230 <argp_failure@@Base+0x1804>
   1821c:	ldrb	r1, [r9, #1]!
   18220:	add	r2, r0, r1, lsl #1
   18224:	ldrb	r2, [r2, #1]
   18228:	tst	r2, #32
   1822c:	bne	1821c <argp_failure@@Base+0x17f0>
   18230:	ldr	ip, [sp, #20]
   18234:	subs	r4, r1, #45	; 0x2d
   18238:	movwne	r4, #1
   1823c:	cmp	r1, #0
   18240:	beq	18260 <argp_failure@@Base+0x1834>
   18244:	uxtb	r1, r1
   18248:	ldrb	r1, [r0, r1, lsl #1]
   1824c:	tst	r1, #8
   18250:	bne	18260 <argp_failure@@Base+0x1834>
   18254:	ldrb	r1, [r9, #1]!
   18258:	cmp	r1, #0
   1825c:	bne	18244 <argp_failure@@Base+0x1818>
   18260:	ldr	r1, [sp, #24]
   18264:	b	1826c <argp_failure@@Base+0x1840>
   18268:	mov	r4, #0
   1826c:	ldr	r0, [ip, #12]
   18270:	cmp	r6, #0
   18274:	str	r0, [sp, #4]
   18278:	andsne	r0, r0, #8
   1827c:	beq	182e8 <argp_failure@@Base+0x18bc>
   18280:	mov	sl, ip
   18284:	bl	114e8 <__ctype_b_loc@plt>
   18288:	ldrb	r1, [r6]
   1828c:	ldr	r0, [r0]
   18290:	add	r2, r0, r1, lsl #1
   18294:	ldrb	r2, [r2, #1]
   18298:	tst	r2, #32
   1829c:	beq	182b4 <argp_failure@@Base+0x1888>
   182a0:	ldrb	r1, [r6, #1]!
   182a4:	add	r2, r0, r1, lsl #1
   182a8:	ldrb	r2, [r2, #1]
   182ac:	tst	r2, #32
   182b0:	bne	182a0 <argp_failure@@Base+0x1874>
   182b4:	subs	r8, r1, #45	; 0x2d
   182b8:	mov	ip, sl
   182bc:	movwne	r8, #1
   182c0:	cmp	r1, #0
   182c4:	beq	182e4 <argp_failure@@Base+0x18b8>
   182c8:	uxtb	r1, r1
   182cc:	ldrb	r1, [r0, r1, lsl #1]
   182d0:	tst	r1, #8
   182d4:	bne	182e4 <argp_failure@@Base+0x18b8>
   182d8:	ldrb	r1, [r6, #1]!
   182dc:	cmp	r1, #0
   182e0:	bne	182c8 <argp_failure@@Base+0x189c>
   182e4:	ldr	r1, [sp, #24]
   182e8:	subs	r4, r4, r8
   182ec:	bne	18090 <argp_failure@@Base+0x1664>
   182f0:	ldr	r0, [sp, #12]
   182f4:	mov	r2, #0
   182f8:	str	ip, [sp, #20]
   182fc:	cmp	r0, #0
   18300:	beq	18398 <argp_failure@@Base+0x196c>
   18304:	rsb	sl, r0, #1
   18308:	ldr	r0, [sp, #8]
   1830c:	ldr	r4, [r7, #8]
   18310:	add	r8, r0, #36	; 0x24
   18314:	tst	r1, #8
   18318:	beq	18340 <argp_failure@@Base+0x1914>
   1831c:	mov	r2, #0
   18320:	cmp	sl, #0
   18324:	beq	18398 <argp_failure@@Base+0x196c>
   18328:	cmp	r2, #0
   1832c:	bne	18398 <argp_failure@@Base+0x196c>
   18330:	ldr	r1, [r8], #24
   18334:	add	sl, sl, #1
   18338:	tst	r1, #8
   1833c:	bne	1831c <argp_failure@@Base+0x18f0>
   18340:	ldr	r7, [r8, #-32]	; 0xffffffe0
   18344:	sub	r0, r7, #1
   18348:	cmp	r0, #254	; 0xfe
   1834c:	bhi	1831c <argp_failure@@Base+0x18f0>
   18350:	str	r1, [sp, #24]
   18354:	bl	114e8 <__ctype_b_loc@plt>
   18358:	ldr	r0, [r0]
   1835c:	add	r0, r0, r7, lsl #1
   18360:	ldrb	r0, [r0, #1]
   18364:	tst	r0, #64	; 0x40
   18368:	beq	1831c <argp_failure@@Base+0x18f0>
   1836c:	ldrb	r0, [r4]
   18370:	mov	r2, r7
   18374:	cmp	r7, r0
   18378:	bne	1831c <argp_failure@@Base+0x18f0>
   1837c:	ldr	r0, [sp, #24]
   18380:	add	r4, r4, #1
   18384:	tst	r0, #2
   18388:	mov	r0, #0
   1838c:	movne	r2, r0
   18390:	cmp	sl, #0
   18394:	bne	18328 <argp_failure@@Base+0x18fc>
   18398:	ldr	r0, [sp, #16]
   1839c:	mov	sl, #0
   183a0:	mov	r1, r2
   183a4:	str	r2, [sp, #24]
   183a8:	cmp	r0, #0
   183ac:	beq	18450 <argp_failure@@Base+0x1a24>
   183b0:	rsb	r7, r0, #1
   183b4:	ldr	r0, [sp, #20]
   183b8:	ldr	r5, [r5, #8]
   183bc:	ldr	r4, [sp, #4]
   183c0:	add	r8, r0, #36	; 0x24
   183c4:	tst	r4, #8
   183c8:	beq	183e8 <argp_failure@@Base+0x19bc>
   183cc:	b	1843c <argp_failure@@Base+0x1a10>
   183d0:	ldr	r2, [sp, #24]
   183d4:	b	1843c <argp_failure@@Base+0x1a10>
   183d8:	ldr	r4, [r8], #24
   183dc:	add	r7, r7, #1
   183e0:	tst	r4, #8
   183e4:	bne	1843c <argp_failure@@Base+0x1a10>
   183e8:	ldr	sl, [r8, #-32]	; 0xffffffe0
   183ec:	sub	r0, sl, #1
   183f0:	cmp	r0, #254	; 0xfe
   183f4:	bhi	1843c <argp_failure@@Base+0x1a10>
   183f8:	bl	114e8 <__ctype_b_loc@plt>
   183fc:	ldr	r0, [r0]
   18400:	add	r0, r0, sl, lsl #1
   18404:	ldrb	r0, [r0, #1]
   18408:	tst	r0, #64	; 0x40
   1840c:	beq	183d0 <argp_failure@@Base+0x19a4>
   18410:	ldrb	r0, [r5]
   18414:	ldr	r2, [sp, #24]
   18418:	cmp	sl, r0
   1841c:	bne	1843c <argp_failure@@Base+0x1a10>
   18420:	tst	r4, #2
   18424:	mov	r0, #0
   18428:	add	r5, r5, #1
   1842c:	movne	sl, r0
   18430:	cmp	r7, #0
   18434:	bne	18448 <argp_failure@@Base+0x1a1c>
   18438:	b	18450 <argp_failure@@Base+0x1a24>
   1843c:	mov	sl, #0
   18440:	cmp	r7, #0
   18444:	beq	18450 <argp_failure@@Base+0x1a24>
   18448:	cmp	sl, #0
   1844c:	beq	183d8 <argp_failure@@Base+0x19ac>
   18450:	tst	r2, #255	; 0xff
   18454:	mov	r5, r2
   18458:	bne	18468 <argp_failure@@Base+0x1a3c>
   1845c:	cmp	r9, #0
   18460:	ldrbne	r5, [r9]
   18464:	moveq	r5, #0
   18468:	tst	sl, #255	; 0xff
   1846c:	mov	r7, sl
   18470:	bne	18480 <argp_failure@@Base+0x1a54>
   18474:	cmp	r6, #0
   18478:	ldrbne	r7, [r6]
   1847c:	moveq	r7, #0
   18480:	bl	114d0 <__ctype_tolower_loc@plt>
   18484:	ldr	r2, [r0]
   18488:	uxtb	r0, r7
   1848c:	uxtb	r1, r5
   18490:	ldr	r3, [r2, r0, lsl #2]
   18494:	ldr	r2, [r2, r1, lsl #2]
   18498:	subs	r4, r2, r3
   1849c:	subseq	r4, r0, r1
   184a0:	bne	18090 <argp_failure@@Base+0x1664>
   184a4:	ldr	r0, [sp, #24]
   184a8:	uxtb	r4, r0
   184ac:	cmp	r4, #0
   184b0:	movwne	r4, #1
   184b4:	tst	sl, #255	; 0xff
   184b8:	subne	r4, r4, #1
   184bc:	cmp	r4, #0
   184c0:	bne	18090 <argp_failure@@Base+0x1664>
   184c4:	ldr	r0, [sp, #24]
   184c8:	tst	r0, #255	; 0xff
   184cc:	beq	184e0 <argp_failure@@Base+0x1ab4>
   184d0:	mov	r4, #0
   184d4:	mov	r0, r4
   184d8:	sub	sp, fp, #28
   184dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184e0:	cmp	r9, #0
   184e4:	mov	r4, r9
   184e8:	movwne	r4, #1
   184ec:	cmp	r6, #0
   184f0:	subne	r4, r4, #1
   184f4:	cmp	r4, #0
   184f8:	bne	18090 <argp_failure@@Base+0x1664>
   184fc:	cmp	r9, #0
   18500:	beq	184d0 <argp_failure@@Base+0x1aa4>
   18504:	mov	r0, r9
   18508:	mov	r1, r6
   1850c:	bl	11458 <strcasecmp@plt>
   18510:	mov	r4, r0
   18514:	cmp	r0, #0
   18518:	moveq	r4, #0
   1851c:	mov	r0, r4
   18520:	sub	sp, fp, #28
   18524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18528:	push	{r4, r5, fp, lr}
   1852c:	add	fp, sp, #8
   18530:	mov	r4, r1
   18534:	mov	r5, r0
   18538:	ldr	r1, [r1, #12]
   1853c:	ldr	r0, [r0, #12]
   18540:	cmp	r0, r1
   18544:	beq	18554 <argp_failure@@Base+0x1b28>
   18548:	bl	18528 <argp_failure@@Base+0x1afc>
   1854c:	cmp	r0, #0
   18550:	popne	{r4, r5, fp, pc}
   18554:	ldr	r1, [r5, #8]
   18558:	ldr	r2, [r4, #8]
   1855c:	orr	r0, r2, r1
   18560:	sub	r3, r1, r2
   18564:	cmn	r0, #1
   18568:	mov	r0, r3
   1856c:	suble	r0, r2, r1
   18570:	and	r1, r2, r1
   18574:	cmp	r1, #0
   18578:	movlt	r0, r3
   1857c:	cmp	r0, #0
   18580:	ldreq	r0, [r5, #4]
   18584:	ldreq	r1, [r4, #4]
   18588:	subeq	r0, r1, r0
   1858c:	pop	{r4, r5, fp, pc}
   18590:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18594:	add	fp, sp, #24
   18598:	mov	r8, r0
   1859c:	ldr	r0, [r1, #12]
   185a0:	mov	r5, r1
   185a4:	cmp	r0, #0
   185a8:	beq	185f8 <argp_failure@@Base+0x1bcc>
   185ac:	ldr	r1, [r5, #8]
   185b0:	ldr	r0, [r5]
   185b4:	ldr	r4, [r1]
   185b8:	ldr	r7, [r0, #16]
   185bc:	cmp	r4, #0
   185c0:	ldrne	r1, [r1, #4]
   185c4:	cmpne	r1, #0
   185c8:	bne	186c4 <argp_failure@@Base+0x1c98>
   185cc:	cmp	r7, #0
   185d0:	beq	185e8 <argp_failure@@Base+0x1bbc>
   185d4:	ldr	r0, [r7]
   185d8:	cmp	r0, #0
   185dc:	ldrbne	r1, [r0]
   185e0:	cmpne	r1, #0
   185e4:	bne	1871c <argp_failure@@Base+0x1cf0>
   185e8:	mov	r0, #0
   185ec:	str	r0, [r5, #12]
   185f0:	add	r5, r5, #4
   185f4:	b	1863c <argp_failure@@Base+0x1c10>
   185f8:	ldr	r6, [r5, #4]!
   185fc:	ldr	r0, [r6, #28]
   18600:	ldr	r1, [r6, #32]
   18604:	add	r2, r0, #2
   18608:	cmp	r2, r1
   1860c:	bls	18628 <argp_failure@@Base+0x1bfc>
   18610:	mov	r0, r6
   18614:	mov	r1, #2
   18618:	bl	1b274 <argp_parse@@Base+0x2830>
   1861c:	cmp	r0, #0
   18620:	beq	1863c <argp_failure@@Base+0x1c10>
   18624:	ldr	r0, [r6, #28]
   18628:	movw	r1, #8236	; 0x202c
   1862c:	strh	r1, [r0]
   18630:	ldr	r0, [r6, #28]
   18634:	add	r0, r0, #2
   18638:	str	r0, [r6, #28]
   1863c:	ldr	r5, [r5]
   18640:	ldr	r1, [r5, #24]
   18644:	ldr	r2, [r5, #28]
   18648:	ldr	r0, [r5, #16]
   1864c:	sub	r1, r2, r1
   18650:	cmp	r1, r0
   18654:	bls	18660 <argp_failure@@Base+0x1c34>
   18658:	mov	r0, r5
   1865c:	bl	1accc <argp_parse@@Base+0x2288>
   18660:	ldr	r0, [r5, #20]
   18664:	bic	r0, r0, r0, asr #31
   18668:	sub	r1, r8, r0
   1866c:	cmp	r1, #1
   18670:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   18674:	add	r1, r8, #1
   18678:	mov	r6, #32
   1867c:	sub	r4, r1, r0
   18680:	ldr	r0, [r5, #28]
   18684:	ldr	r1, [r5, #32]
   18688:	cmp	r0, r1
   1868c:	bcc	186a8 <argp_failure@@Base+0x1c7c>
   18690:	mov	r0, r5
   18694:	mov	r1, #1
   18698:	bl	1b274 <argp_parse@@Base+0x2830>
   1869c:	cmp	r0, #0
   186a0:	beq	186b4 <argp_failure@@Base+0x1c88>
   186a4:	ldr	r0, [r5, #28]
   186a8:	add	r1, r0, #1
   186ac:	str	r1, [r5, #28]
   186b0:	strb	r6, [r0]
   186b4:	sub	r4, r4, #1
   186b8:	cmp	r4, #1
   186bc:	bgt	18680 <argp_failure@@Base+0x1c54>
   186c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   186c4:	ldr	r1, [r4, #12]
   186c8:	ldr	r0, [r0, #12]
   186cc:	cmp	r0, r1
   186d0:	beq	185cc <argp_failure@@Base+0x1ba0>
   186d4:	ldr	r6, [r5, #4]
   186d8:	ldr	r0, [r6, #28]
   186dc:	ldr	r1, [r6, #32]
   186e0:	cmp	r0, r1
   186e4:	bcc	18700 <argp_failure@@Base+0x1cd4>
   186e8:	mov	r0, r6
   186ec:	mov	r1, #1
   186f0:	bl	1b274 <argp_parse@@Base+0x2830>
   186f4:	cmp	r0, #0
   186f8:	beq	185cc <argp_failure@@Base+0x1ba0>
   186fc:	ldr	r0, [r6, #28]
   18700:	add	r1, r0, #1
   18704:	str	r1, [r6, #28]
   18708:	mov	r1, #10
   1870c:	strb	r1, [r0]
   18710:	cmp	r7, #0
   18714:	bne	185d4 <argp_failure@@Base+0x1ba8>
   18718:	b	185e8 <argp_failure@@Base+0x1bbc>
   1871c:	cmp	r4, #0
   18720:	beq	18758 <argp_failure@@Base+0x1d2c>
   18724:	ldr	r1, [r4, #16]
   18728:	cmp	r1, r7
   1872c:	beq	185e8 <argp_failure@@Base+0x1bbc>
   18730:	cmp	r1, #0
   18734:	beq	1874c <argp_failure@@Base+0x1d20>
   18738:	ldr	r1, [r1, #12]
   1873c:	cmp	r1, r7
   18740:	cmpne	r1, #0
   18744:	bne	18738 <argp_failure@@Base+0x1d0c>
   18748:	b	18750 <argp_failure@@Base+0x1d24>
   1874c:	mov	r1, #0
   18750:	cmp	r1, r7
   18754:	beq	185e8 <argp_failure@@Base+0x1bbc>
   18758:	ldr	r1, [r5, #4]
   1875c:	mov	r2, r5
   18760:	ldr	r4, [r1, #12]
   18764:	ldr	r1, [r7, #16]
   18768:	bl	18798 <argp_failure@@Base+0x1d6c>
   1876c:	ldr	r6, [r5, #4]
   18770:	ldr	r1, [r6, #24]
   18774:	ldr	r2, [r6, #28]
   18778:	ldr	r0, [r6, #16]
   1877c:	sub	r1, r2, r1
   18780:	cmp	r1, r0
   18784:	bls	18790 <argp_failure@@Base+0x1d64>
   18788:	mov	r0, r6
   1878c:	bl	1accc <argp_parse@@Base+0x2288>
   18790:	str	r4, [r6, #12]
   18794:	b	185e8 <argp_failure@@Base+0x1bbc>
   18798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1879c:	add	fp, sp, #28
   187a0:	sub	sp, sp, #4
   187a4:	mov	r9, r2
   187a8:	mov	r8, r0
   187ac:	cmp	r1, #0
   187b0:	mov	r6, r0
   187b4:	beq	187f4 <argp_failure@@Base+0x1dc8>
   187b8:	ldr	r0, [r1, #20]
   187bc:	mov	r4, r1
   187c0:	mov	r6, r8
   187c4:	cmp	r0, #0
   187c8:	beq	187f4 <argp_failure@@Base+0x1dc8>
   187cc:	ldr	r1, [r9, #16]
   187d0:	mov	r0, r4
   187d4:	bl	19714 <argp_parse@@Base+0xcd0>
   187d8:	ldr	r3, [r4, #20]
   187dc:	mov	r2, r0
   187e0:	movw	r0, #3
   187e4:	mov	r1, r8
   187e8:	movt	r0, #512	; 0x200
   187ec:	blx	r3
   187f0:	mov	r6, r0
   187f4:	cmp	r6, #0
   187f8:	beq	18a28 <argp_failure@@Base+0x1ffc>
   187fc:	ldrb	r0, [r6]
   18800:	cmp	r0, #0
   18804:	beq	18a1c <argp_failure@@Base+0x1ff0>
   18808:	ldr	r0, [r9, #8]
   1880c:	ldr	r0, [r0]
   18810:	cmp	r0, #0
   18814:	beq	18854 <argp_failure@@Base+0x1e28>
   18818:	ldr	r4, [r9, #4]
   1881c:	ldr	r0, [r4, #28]
   18820:	ldr	r1, [r4, #32]
   18824:	cmp	r0, r1
   18828:	bcc	18844 <argp_failure@@Base+0x1e18>
   1882c:	mov	r0, r4
   18830:	mov	r1, #1
   18834:	bl	1b274 <argp_parse@@Base+0x2830>
   18838:	cmp	r0, #0
   1883c:	beq	18854 <argp_failure@@Base+0x1e28>
   18840:	ldr	r0, [r4, #28]
   18844:	add	r1, r0, #1
   18848:	str	r1, [r4, #28]
   1884c:	mov	r1, #10
   18850:	strb	r1, [r0]
   18854:	ldr	r7, [r9, #4]
   18858:	movw	sl, #62960	; 0xf5f0
   1885c:	movt	sl, #2
   18860:	ldr	r4, [sl, #24]
   18864:	ldr	r1, [r7, #24]
   18868:	ldr	r2, [r7, #28]
   1886c:	ldr	r0, [r7, #16]
   18870:	sub	r1, r2, r1
   18874:	cmp	r1, r0
   18878:	bls	18884 <argp_failure@@Base+0x1e58>
   1887c:	mov	r0, r7
   18880:	bl	1accc <argp_parse@@Base+0x2288>
   18884:	ldr	r0, [r7, #20]
   18888:	bic	r0, r0, r0, asr #31
   1888c:	sub	r1, r4, r0
   18890:	cmp	r1, #1
   18894:	blt	188e4 <argp_failure@@Base+0x1eb8>
   18898:	add	r1, r4, #1
   1889c:	mov	r5, #32
   188a0:	sub	r4, r1, r0
   188a4:	ldr	r0, [r7, #28]
   188a8:	ldr	r1, [r7, #32]
   188ac:	cmp	r0, r1
   188b0:	bcc	188cc <argp_failure@@Base+0x1ea0>
   188b4:	mov	r0, r7
   188b8:	mov	r1, #1
   188bc:	bl	1b274 <argp_parse@@Base+0x2830>
   188c0:	cmp	r0, #0
   188c4:	beq	188d8 <argp_failure@@Base+0x1eac>
   188c8:	ldr	r0, [r7, #28]
   188cc:	add	r1, r0, #1
   188d0:	str	r1, [r7, #28]
   188d4:	strb	r5, [r0]
   188d8:	sub	r4, r4, #1
   188dc:	cmp	r4, #1
   188e0:	bgt	188a4 <argp_failure@@Base+0x1e78>
   188e4:	ldr	r4, [r9, #4]
   188e8:	ldr	r5, [sl, #24]
   188ec:	ldr	r1, [r4, #24]
   188f0:	ldr	r2, [r4, #28]
   188f4:	ldr	r0, [r4, #16]
   188f8:	mov	r7, r4
   188fc:	sub	r1, r2, r1
   18900:	mov	r2, sl
   18904:	mov	sl, r5
   18908:	cmp	r1, r0
   1890c:	bls	18934 <argp_failure@@Base+0x1f08>
   18910:	mov	r0, r4
   18914:	mov	r7, r2
   18918:	bl	1accc <argp_parse@@Base+0x2288>
   1891c:	ldr	sl, [r7, #24]
   18920:	ldr	r7, [r9, #4]
   18924:	ldr	r1, [r7, #24]
   18928:	ldr	r2, [r7, #28]
   1892c:	ldr	r0, [r7, #16]
   18930:	sub	r1, r2, r1
   18934:	str	r5, [r4, #4]
   18938:	cmp	r1, r0
   1893c:	mov	r5, r7
   18940:	bls	18950 <argp_failure@@Base+0x1f24>
   18944:	mov	r0, r7
   18948:	bl	1accc <argp_parse@@Base+0x2288>
   1894c:	ldr	r5, [r9, #4]
   18950:	mov	r0, r6
   18954:	str	sl, [r7, #12]
   18958:	bl	11518 <strlen@plt>
   1895c:	cmp	r0, #0
   18960:	beq	189ac <argp_failure@@Base+0x1f80>
   18964:	mov	r4, r0
   18968:	ldr	r0, [r5, #28]
   1896c:	ldr	r1, [r5, #32]
   18970:	add	r2, r0, r4
   18974:	cmp	r2, r1
   18978:	bls	18994 <argp_failure@@Base+0x1f68>
   1897c:	mov	r0, r5
   18980:	mov	r1, r4
   18984:	bl	1b274 <argp_parse@@Base+0x2830>
   18988:	cmp	r0, #0
   1898c:	beq	189ac <argp_failure@@Base+0x1f80>
   18990:	ldr	r0, [r5, #28]
   18994:	mov	r1, r6
   18998:	mov	r2, r4
   1899c:	bl	113d4 <memcpy@plt>
   189a0:	ldr	r0, [r5, #28]
   189a4:	add	r0, r0, r4
   189a8:	str	r0, [r5, #28]
   189ac:	ldr	r4, [r9, #4]
   189b0:	mov	r5, r4
   189b4:	ldr	r2, [r4, #24]
   189b8:	ldr	r0, [r4, #16]
   189bc:	ldr	r1, [r5, #28]!
   189c0:	sub	r2, r1, r2
   189c4:	cmp	r2, r0
   189c8:	mov	r0, r4
   189cc:	bls	189e4 <argp_failure@@Base+0x1fb8>
   189d0:	mov	r0, r4
   189d4:	bl	1accc <argp_parse@@Base+0x2288>
   189d8:	ldr	r0, [r9, #4]
   189dc:	mov	r5, r0
   189e0:	ldr	r1, [r5, #28]!
   189e4:	mov	r2, #0
   189e8:	str	r2, [r4, #4]
   189ec:	ldr	r2, [r0, #32]
   189f0:	cmp	r1, r2
   189f4:	bcc	18a0c <argp_failure@@Base+0x1fe0>
   189f8:	mov	r1, #1
   189fc:	bl	1b274 <argp_parse@@Base+0x2830>
   18a00:	cmp	r0, #0
   18a04:	beq	18a1c <argp_failure@@Base+0x1ff0>
   18a08:	ldr	r1, [r5]
   18a0c:	add	r0, r1, #1
   18a10:	str	r0, [r5]
   18a14:	mov	r0, #10
   18a18:	strb	r0, [r1]
   18a1c:	ldr	r0, [r9, #8]
   18a20:	mov	r1, #1
   18a24:	str	r1, [r0, #4]
   18a28:	cmp	r6, r8
   18a2c:	subeq	sp, fp, #28
   18a30:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a34:	mov	r0, r6
   18a38:	sub	sp, fp, #28
   18a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a40:	b	19df4 <argp_parse@@Base+0x13b0>

00018a44 <argp_parse@@Base>:
   18a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a48:	add	fp, sp, #28
   18a4c:	sub	sp, sp, #212	; 0xd4
   18a50:	mov	r5, r3
   18a54:	mov	r6, r2
   18a58:	mov	r7, r1
   18a5c:	mov	r4, r0
   18a60:	tst	r3, #1
   18a64:	bne	18a94 <argp_parse@@Base+0x50>
   18a68:	movw	r0, #63028	; 0xf634
   18a6c:	movw	r8, #63024	; 0xf630
   18a70:	movt	r0, #2
   18a74:	movt	r8, #2
   18a78:	ldr	r1, [r0]
   18a7c:	cmp	r1, #0
   18a80:	ldreq	r1, [r6]
   18a84:	streq	r1, [r0]
   18a88:	ldr	r0, [r8]
   18a8c:	cmp	r0, #0
   18a90:	beq	18b48 <argp_parse@@Base+0x104>
   18a94:	tst	r5, #16
   18a98:	str	r6, [fp, #-228]	; 0xffffff1c
   18a9c:	bne	18b60 <argp_parse@@Base+0x11c>
   18aa0:	mov	r1, sp
   18aa4:	sub	r3, r1, #64	; 0x40
   18aa8:	mov	sp, r3
   18aac:	mov	r2, sp
   18ab0:	sub	r0, r2, #32
   18ab4:	mov	sp, r0
   18ab8:	vmov.i32	q8, #0	; 0x00000000
   18abc:	sub	r2, r2, #20
   18ac0:	cmp	r4, #0
   18ac4:	vst1.32	{d16-d17}, [r2]
   18ac8:	mov	r2, r0
   18acc:	vst1.64	{d16-d17}, [r2]!
   18ad0:	str	r3, [r2]
   18ad4:	sub	r2, r1, #32
   18ad8:	sub	r1, r1, #48	; 0x30
   18adc:	vst1.64	{d16-d17}, [r2]
   18ae0:	vst1.64	{d16-d17}, [r1]
   18ae4:	mov	r1, #48	; 0x30
   18ae8:	mov	r2, r3
   18aec:	vst1.64	{d16-d17}, [r2], r1
   18af0:	vst1.64	{d16-d17}, [r2]
   18af4:	movw	r2, #55480	; 0xd8b8
   18af8:	strne	r4, [r3], #16
   18afc:	movt	r2, #1
   18b00:	mov	r1, r3
   18b04:	str	r2, [r1], #16
   18b08:	movw	r2, #63196	; 0xf6dc
   18b0c:	movt	r2, #2
   18b10:	ldr	r2, [r2]
   18b14:	cmp	r2, #0
   18b18:	movweq	r2, #63112	; 0xf688
   18b1c:	movteq	r2, #2
   18b20:	ldreq	r2, [r2]
   18b24:	cmpeq	r2, #0
   18b28:	beq	18b3c <argp_parse@@Base+0xf8>
   18b2c:	movw	r2, #55508	; 0xd8d4
   18b30:	mov	r3, r1
   18b34:	movt	r2, #1
   18b38:	str	r2, [r1]
   18b3c:	mov	r1, #0
   18b40:	str	r1, [r3, #16]
   18b44:	b	18b64 <argp_parse@@Base+0x120>
   18b48:	ldr	r0, [r6]
   18b4c:	bl	19d5c <argp_parse@@Base+0x1318>
   18b50:	str	r0, [r8]
   18b54:	tst	r5, #16
   18b58:	str	r6, [fp, #-228]	; 0xffffff1c
   18b5c:	beq	18aa0 <argp_parse@@Base+0x5c>
   18b60:	mov	r0, r4
   18b64:	sub	r9, fp, #96	; 0x60
   18b68:	str	r7, [fp, #-232]	; 0xffffff18
   18b6c:	vmov.i32	q8, #0	; 0x00000000
   18b70:	mov	r7, #12
   18b74:	mov	r4, #0
   18b78:	cmp	r0, #0
   18b7c:	str	r5, [fp, #-224]	; 0xffffff20
   18b80:	str	r0, [fp, #-236]	; 0xffffff14
   18b84:	mov	r1, r9
   18b88:	vst1.64	{d16-d17}, [r1], r7
   18b8c:	vst1.32	{d16-d17}, [r1]
   18b90:	mov	r1, #1
   18b94:	bic	r3, r1, r5, lsr #2
   18b98:	str	r3, [fp, #-64]	; 0xffffffc0
   18b9c:	str	r4, [fp, #-60]	; 0xffffffc4
   18ba0:	str	r4, [fp, #-56]	; 0xffffffc8
   18ba4:	str	r4, [fp, #-52]	; 0xffffffcc
   18ba8:	beq	18be0 <argp_parse@@Base+0x19c>
   18bac:	sub	r1, fp, #64	; 0x40
   18bb0:	bl	1992c <argp_parse@@Base+0xee8>
   18bb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18bb8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18bbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18bc0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18bc4:	mov	r6, #16
   18bc8:	add	r1, r6, r1, lsl #4
   18bcc:	add	r2, r2, r2, lsl #3
   18bd0:	mov	r6, #36	; 0x24
   18bd4:	lsl	r4, r0, #2
   18bd8:	add	r8, r6, r2, lsl #2
   18bdc:	b	18be8 <argp_parse@@Base+0x1a4>
   18be0:	mov	r8, #36	; 0x24
   18be4:	mov	r1, #16
   18be8:	add	r5, r8, r4
   18bec:	add	sl, r5, r1
   18bf0:	add	r0, r3, sl
   18bf4:	add	r0, r0, #1
   18bf8:	bl	1ab84 <argp_parse@@Base+0x2140>
   18bfc:	cmp	r0, #0
   18c00:	str	r0, [fp, #-100]	; 0xffffff9c
   18c04:	beq	1969c <argp_parse@@Base+0xc58>
   18c08:	mov	r6, r0
   18c0c:	mov	r0, #12
   18c10:	sub	r1, fp, #220	; 0xdc
   18c14:	mov	r2, r4
   18c18:	vld1.64	{d16-d17}, [r9], r0
   18c1c:	add	r0, r1, #20
   18c20:	add	r7, r6, r8
   18c24:	add	r8, r6, r5
   18c28:	add	r5, r6, sl
   18c2c:	vld1.32	{d18-d19}, [r9]
   18c30:	vst1.32	{d16-d17}, [r0]
   18c34:	add	r0, r1, #32
   18c38:	mov	r9, r1
   18c3c:	mov	r1, #0
   18c40:	vst1.32	{d18-d19}, [r0]
   18c44:	mov	r0, #1
   18c48:	str	r6, [fp, #-172]	; 0xffffff54
   18c4c:	str	r0, [fp, #-208]	; 0xffffff30
   18c50:	str	r0, [fp, #-204]	; 0xffffff34
   18c54:	mov	r0, r7
   18c58:	str	r7, [fp, #-164]	; 0xffffff5c
   18c5c:	str	r8, [fp, #-212]	; 0xffffff2c
   18c60:	str	r5, [fp, #-216]	; 0xffffff28
   18c64:	bl	1156c <memset@plt>
   18c68:	str	r5, [fp, #-44]	; 0xffffffd4
   18c6c:	str	r9, [fp, #-48]	; 0xffffffd0
   18c70:	ldr	r9, [fp, #-224]	; 0xffffff20
   18c74:	mov	r0, #45	; 0x2d
   18c78:	str	r8, [fp, #-40]	; 0xffffffd8
   18c7c:	str	r7, [fp, #-36]	; 0xffffffdc
   18c80:	tst	r9, #8
   18c84:	moveq	r0, #43	; 0x2b
   18c88:	tsteq	r9, #4
   18c8c:	beq	192b4 <argp_parse@@Base+0x870>
   18c90:	add	r1, r5, #1
   18c94:	strb	r0, [r5]
   18c98:	str	r1, [fp, #-44]	; 0xffffffd4
   18c9c:	ldr	r0, [fp, #-236]	; 0xffffff14
   18ca0:	ldr	sl, [fp, #-228]	; 0xffffff1c
   18ca4:	mov	r5, #0
   18ca8:	strb	r5, [r1]
   18cac:	str	r5, [r8]
   18cb0:	cmp	r0, #0
   18cb4:	str	r0, [fp, #-220]	; 0xffffff24
   18cb8:	beq	18cf0 <argp_parse@@Base+0x2ac>
   18cbc:	sub	sp, sp, #8
   18cc0:	sub	r1, fp, #48	; 0x30
   18cc4:	mov	r2, #0
   18cc8:	mov	r3, r6
   18ccc:	str	r1, [sp]
   18cd0:	mov	r1, #0
   18cd4:	bl	19a14 <argp_parse@@Base+0xfd0>
   18cd8:	add	sp, sp, #8
   18cdc:	str	r0, [fp, #-168]	; 0xffffff58
   18ce0:	mov	r6, r0
   18ce4:	ldr	r5, [fp, #-220]	; 0xffffff24
   18ce8:	ldr	r4, [fp, #-172]	; 0xffffff54
   18cec:	b	18cf8 <argp_parse@@Base+0x2b4>
   18cf0:	mov	r4, r6
   18cf4:	str	r6, [fp, #-168]	; 0xffffff58
   18cf8:	ldr	r3, [fp, #-232]	; 0xffffff18
   18cfc:	sub	r1, fp, #220	; 0xdc
   18d00:	mov	r7, #0
   18d04:	vmov.i32	q8, #0	; 0x00000000
   18d08:	mov	r0, #1
   18d0c:	mov	r8, sl
   18d10:	cmp	r4, r6
   18d14:	mov	r2, r1
   18d18:	add	r1, r1, #84	; 0x54
   18d1c:	str	r7, [fp, #-116]	; 0xffffff8c
   18d20:	str	r7, [fp, #-120]	; 0xffffff88
   18d24:	vst1.32	{d16-d17}, [r1]
   18d28:	str	r5, [fp, #-156]	; 0xffffff64
   18d2c:	str	r3, [fp, #-152]	; 0xffffff68
   18d30:	str	sl, [fp, #-148]	; 0xffffff6c
   18d34:	str	r9, [fp, #-140]	; 0xffffff74
   18d38:	str	r7, [fp, #-144]	; 0xffffff70
   18d3c:	str	r2, [fp, #-104]	; 0xffffff98
   18d40:	str	r0, [fp, #-160]	; 0xffffff60
   18d44:	movw	r0, #63032	; 0xf638
   18d48:	add	sl, r2, #64	; 0x40
   18d4c:	movt	r0, #2
   18d50:	ldr	r0, [r0]
   18d54:	str	r0, [fp, #-112]	; 0xffffff90
   18d58:	movw	r0, #63036	; 0xf63c
   18d5c:	movt	r0, #2
   18d60:	ldr	r0, [r0]
   18d64:	str	r0, [fp, #-108]	; 0xffffff94
   18d68:	bcs	18e5c <argp_parse@@Base+0x418>
   18d6c:	ldr	r0, [fp, #12]
   18d70:	str	r0, [r4, #24]
   18d74:	cmp	r7, #7
   18d78:	cmpne	r7, #0
   18d7c:	bne	1969c <argp_parse@@Base+0xc58>
   18d80:	ldr	r0, [r4, #16]
   18d84:	cmp	r0, #0
   18d88:	ldrne	r1, [r4, #20]
   18d8c:	ldrne	r0, [r0, #28]
   18d90:	ldrne	r0, [r0, r1, lsl #2]
   18d94:	strne	r0, [r4, #24]
   18d98:	ldr	r3, [r4]
   18d9c:	cmp	r3, #0
   18da0:	beq	18e00 <argp_parse@@Base+0x3bc>
   18da4:	add	r0, r4, #28
   18da8:	ldr	r1, [r4, #32]
   18dac:	mov	r2, sl
   18db0:	str	r1, [fp, #-120]	; 0xffffff88
   18db4:	ldr	r1, [r4, #24]
   18db8:	str	r1, [fp, #-128]	; 0xffffff80
   18dbc:	mov	r1, #0
   18dc0:	ldr	r0, [r0]
   18dc4:	str	r0, [fp, #-124]	; 0xffffff84
   18dc8:	ldr	r0, [r4, #12]
   18dcc:	str	r0, [fp, #-136]	; 0xffffff78
   18dd0:	movw	r0, #6
   18dd4:	movt	r0, #256	; 0x100
   18dd8:	sub	r0, r0, #3
   18ddc:	blx	r3
   18de0:	mov	r7, r0
   18de4:	ldr	r0, [fp, #-120]	; 0xffffff88
   18de8:	str	r0, [r4, #32]
   18dec:	ldr	r0, [fp, #-168]	; 0xffffff58
   18df0:	add	r4, r4, #36	; 0x24
   18df4:	cmp	r4, r0
   18df8:	bcc	18d74 <argp_parse@@Base+0x330>
   18dfc:	b	18e50 <argp_parse@@Base+0x40c>
   18e00:	ldr	r0, [r4, #4]
   18e04:	mov	r7, #7
   18e08:	ldr	r0, [r0, #16]
   18e0c:	cmp	r0, #0
   18e10:	ldrne	r0, [r0]
   18e14:	cmpne	r0, #0
   18e18:	bne	18e30 <argp_parse@@Base+0x3ec>
   18e1c:	ldr	r0, [fp, #-168]	; 0xffffff58
   18e20:	add	r4, r4, #36	; 0x24
   18e24:	cmp	r4, r0
   18e28:	bcc	18d74 <argp_parse@@Base+0x330>
   18e2c:	b	18e50 <argp_parse@@Base+0x40c>
   18e30:	mov	r0, r4
   18e34:	ldr	r2, [r4, #24]
   18e38:	ldr	r1, [r0, #28]!
   18e3c:	str	r2, [r1]
   18e40:	ldr	r3, [r4]
   18e44:	cmp	r3, #0
   18e48:	bne	18da8 <argp_parse@@Base+0x364>
   18e4c:	b	18e1c <argp_parse@@Base+0x3d8>
   18e50:	cmp	r7, #7
   18e54:	cmpne	r7, #0
   18e58:	bne	1969c <argp_parse@@Base+0xc58>
   18e5c:	ldr	r0, [fp, #-140]	; 0xffffff74
   18e60:	tst	r0, #2
   18e64:	bne	18e90 <argp_parse@@Base+0x44c>
   18e68:	mov	r0, #1
   18e6c:	str	r0, [fp, #-204]	; 0xffffff34
   18e70:	ldr	r0, [fp, #-148]	; 0xffffff6c
   18e74:	cmp	r0, r8
   18e78:	bne	18ec4 <argp_parse@@Base+0x480>
   18e7c:	ldr	r0, [r8]
   18e80:	cmp	r0, #0
   18e84:	beq	18ec4 <argp_parse@@Base+0x480>
   18e88:	bl	19d5c <argp_parse@@Base+0x1318>
   18e8c:	b	18ed0 <argp_parse@@Base+0x48c>
   18e90:	mov	r1, #0
   18e94:	tst	r0, #1
   18e98:	str	r1, [fp, #-204]	; 0xffffff34
   18e9c:	beq	18eb8 <argp_parse@@Base+0x474>
   18ea0:	ldr	r0, [fp, #-152]	; 0xffffff68
   18ea4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18ea8:	sub	r1, r1, #4
   18eac:	add	r0, r0, #1
   18eb0:	str	r1, [fp, #-148]	; 0xffffff6c
   18eb4:	str	r0, [fp, #-152]	; 0xffffff68
   18eb8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   18ebc:	cmp	r0, r8
   18ec0:	beq	18e7c <argp_parse@@Base+0x438>
   18ec4:	movw	r0, #63024	; 0xf630
   18ec8:	movt	r0, #2
   18ecc:	ldr	r0, [r0]
   18ed0:	str	r0, [fp, #-116]	; 0xffffff8c
   18ed4:	sub	r0, fp, #220	; 0xdc
   18ed8:	mov	r8, #0
   18edc:	add	r6, r0, #12
   18ee0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18ee4:	cmp	r0, #0
   18ee8:	beq	18efc <argp_parse@@Base+0x4b8>
   18eec:	ldr	r9, [fp, #-144]	; 0xffffff70
   18ef0:	cmp	r9, r0
   18ef4:	bge	18fb0 <argp_parse@@Base+0x56c>
   18ef8:	str	r8, [fp, #-132]	; 0xffffff7c
   18efc:	ldr	r0, [fp, #-160]	; 0xffffff60
   18f00:	ldr	r9, [fp, #-144]	; 0xffffff70
   18f04:	cmp	r0, #0
   18f08:	beq	18fb0 <argp_parse@@Base+0x56c>
   18f0c:	mvn	r0, #0
   18f10:	str	r0, [fp, #-200]	; 0xffffff38
   18f14:	str	r9, [fp, #-208]	; 0xffffff30
   18f18:	ldr	r2, [fp, #-216]	; 0xffffff28
   18f1c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   18f20:	ldr	r0, [fp, #-152]	; 0xffffff68
   18f24:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18f28:	ldrb	r7, [fp, #-140]	; 0xffffff74
   18f2c:	sub	sp, sp, #8
   18f30:	tst	r7, #64	; 0x40
   18f34:	bne	18f48 <argp_parse@@Base+0x504>
   18f38:	str	r8, [sp]
   18f3c:	str	r6, [sp, #4]
   18f40:	bl	19e48 <argp_parse@@Base+0x1404>
   18f44:	b	18f54 <argp_parse@@Base+0x510>
   18f48:	str	r8, [sp]
   18f4c:	str	r6, [sp, #4]
   18f50:	bl	19eac <argp_parse@@Base+0x1468>
   18f54:	add	sp, sp, #8
   18f58:	ldr	r9, [fp, #-208]	; 0xffffff30
   18f5c:	mov	r7, r0
   18f60:	cmn	r0, #1
   18f64:	str	r9, [fp, #-144]	; 0xffffff70
   18f68:	beq	18f84 <argp_parse@@Base+0x540>
   18f6c:	cmp	r7, #63	; 0x3f
   18f70:	beq	19160 <argp_parse@@Base+0x71c>
   18f74:	cmp	r7, #1
   18f78:	bne	19170 <argp_parse@@Base+0x72c>
   18f7c:	ldr	r7, [fp, #-196]	; 0xffffff3c
   18f80:	b	18fe8 <argp_parse@@Base+0x5a4>
   18f84:	cmp	r9, #2
   18f88:	str	r8, [fp, #-160]	; 0xffffff60
   18f8c:	blt	18fb0 <argp_parse@@Base+0x56c>
   18f90:	ldr	r0, [fp, #-148]	; 0xffffff6c
   18f94:	movw	r1, #55963	; 0xda9b
   18f98:	movt	r1, #1
   18f9c:	add	r0, r0, r9, lsl #2
   18fa0:	ldr	r0, [r0, #-4]
   18fa4:	bl	11344 <strcmp@plt>
   18fa8:	cmp	r0, #0
   18fac:	streq	r9, [fp, #-132]	; 0xffffff7c
   18fb0:	ldr	r2, [fp, #-152]	; 0xffffff68
   18fb4:	mov	r1, #1
   18fb8:	mov	r0, #7
   18fbc:	cmp	r9, r2
   18fc0:	bge	192d8 <argp_parse@@Base+0x894>
   18fc4:	ldrb	r2, [fp, #-140]	; 0xffffff74
   18fc8:	tst	r2, #4
   18fcc:	bne	192d8 <argp_parse@@Base+0x894>
   18fd0:	add	r0, r9, #1
   18fd4:	str	r0, [fp, #-144]	; 0xffffff70
   18fd8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18fdc:	ldr	r7, [r1, r9, lsl #2]
   18fe0:	mov	r9, r0
   18fe4:	str	r7, [fp, #-196]	; 0xffffff3c
   18fe8:	sub	r0, r9, #1
   18fec:	str	r0, [fp, #-144]	; 0xffffff70
   18ff0:	ldr	r1, [fp, #-172]	; 0xffffff54
   18ff4:	ldr	r2, [fp, #-168]	; 0xffffff58
   18ff8:	cmp	r1, r2
   18ffc:	bcs	192bc <argp_parse@@Base+0x878>
   19000:	add	r4, r1, #24
   19004:	b	19010 <argp_parse@@Base+0x5cc>
   19008:	ldr	r0, [fp, #-144]	; 0xffffff70
   1900c:	add	r4, r4, #36	; 0x24
   19010:	add	r1, r0, #1
   19014:	str	r1, [fp, #-144]	; 0xffffff70
   19018:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1901c:	cmp	r3, #0
   19020:	beq	190c0 <argp_parse@@Base+0x67c>
   19024:	ldr	r0, [r4, #8]
   19028:	mov	r1, r7
   1902c:	mov	r2, sl
   19030:	mov	r5, #0
   19034:	str	r0, [fp, #-120]	; 0xffffff88
   19038:	ldr	r0, [r4]
   1903c:	str	r0, [fp, #-128]	; 0xffffff80
   19040:	ldr	r0, [r4, #4]
   19044:	str	r0, [fp, #-124]	; 0xffffff84
   19048:	ldr	r0, [r4, #-12]
   1904c:	str	r0, [fp, #-136]	; 0xffffff78
   19050:	mov	r0, #0
   19054:	blx	r3
   19058:	ldr	r1, [fp, #-120]	; 0xffffff88
   1905c:	cmp	r0, #7
   19060:	str	r1, [r4, #8]
   19064:	bne	190e8 <argp_parse@@Base+0x6a4>
   19068:	ldr	r0, [fp, #-144]	; 0xffffff70
   1906c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19070:	sub	r0, r0, #1
   19074:	cmp	r3, #0
   19078:	str	r0, [fp, #-144]	; 0xffffff70
   1907c:	beq	190c4 <argp_parse@@Base+0x680>
   19080:	ldr	r0, [r4]
   19084:	mov	r1, #0
   19088:	mov	r2, sl
   1908c:	str	r0, [fp, #-128]	; 0xffffff80
   19090:	ldr	r0, [r4, #4]
   19094:	str	r0, [fp, #-124]	; 0xffffff84
   19098:	ldr	r0, [r4, #-12]
   1909c:	str	r0, [fp, #-136]	; 0xffffff78
   190a0:	movw	r0, #6
   190a4:	movt	r0, #256	; 0x100
   190a8:	blx	r3
   190ac:	ldr	r1, [fp, #-120]	; 0xffffff88
   190b0:	str	r1, [r4, #8]
   190b4:	cmp	r0, #7
   190b8:	beq	190d0 <argp_parse@@Base+0x68c>
   190bc:	b	190e0 <argp_parse@@Base+0x69c>
   190c0:	str	r0, [fp, #-144]	; 0xffffff70
   190c4:	mov	r0, #7
   190c8:	cmp	r0, #7
   190cc:	bne	190e0 <argp_parse@@Base+0x69c>
   190d0:	ldr	r2, [fp, #-168]	; 0xffffff58
   190d4:	add	r1, r4, #12
   190d8:	cmp	r1, r2
   190dc:	bcc	19008 <argp_parse@@Base+0x5c4>
   190e0:	movw	r5, #6
   190e4:	movt	r5, #256	; 0x100
   190e8:	cmp	r0, #0
   190ec:	beq	19104 <argp_parse@@Base+0x6c0>
   190f0:	cmp	r0, #7
   190f4:	beq	192bc <argp_parse@@Base+0x878>
   190f8:	cmp	r0, #0
   190fc:	beq	18ee0 <argp_parse@@Base+0x49c>
   19100:	b	19510 <argp_parse@@Base+0xacc>
   19104:	movw	r0, #6
   19108:	movt	r0, #256	; 0x100
   1910c:	cmp	r5, r0
   19110:	ldreq	r0, [fp, #-152]	; 0xffffff68
   19114:	streq	r0, [fp, #-144]	; 0xffffff70
   19118:	ldrne	r0, [fp, #-144]	; 0xffffff70
   1911c:	cmp	r0, r9
   19120:	bge	1913c <argp_parse@@Base+0x6f8>
   19124:	mov	r0, #1
   19128:	str	r0, [fp, #-160]	; 0xffffff60
   1912c:	mov	r0, #0
   19130:	cmp	r0, #0
   19134:	beq	18ee0 <argp_parse@@Base+0x49c>
   19138:	b	19510 <argp_parse@@Base+0xacc>
   1913c:	rsb	r1, r9, #1
   19140:	add	r0, r1, r0
   19144:	ldr	r1, [r4, #-12]
   19148:	add	r0, r0, r1
   1914c:	str	r0, [r4, #-12]
   19150:	mov	r0, #0
   19154:	cmp	r0, #0
   19158:	beq	18ee0 <argp_parse@@Base+0x49c>
   1915c:	b	19510 <argp_parse@@Base+0xacc>
   19160:	ldr	r0, [fp, #-200]	; 0xffffff38
   19164:	cmn	r0, #1
   19168:	beq	191e8 <argp_parse@@Base+0x7a4>
   1916c:	b	196dc <argp_parse@@Base+0xc98>
   19170:	cmp	r8, r7, asr #24
   19174:	beq	191e8 <argp_parse@@Base+0x7a4>
   19178:	ldr	r1, [fp, #-172]	; 0xffffff54
   1917c:	asr	r0, r7, #24
   19180:	sub	r0, r0, #1
   19184:	add	r0, r0, r0, lsl #3
   19188:	ldr	r3, [r1, r0, lsl #2]
   1918c:	cmp	r3, #0
   19190:	beq	196a8 <argp_parse@@Base+0xc64>
   19194:	add	r4, r1, r0, lsl #2
   19198:	tst	r7, #8388608	; 0x800000
   1919c:	mov	r2, sl
   191a0:	ldr	r0, [r4, #32]!
   191a4:	str	r0, [fp, #-120]	; 0xffffff88
   191a8:	ldr	r0, [r4, #-8]
   191ac:	str	r0, [fp, #-128]	; 0xffffff80
   191b0:	ldr	r0, [r4, #-4]
   191b4:	str	r0, [fp, #-124]	; 0xffffff84
   191b8:	ldr	r0, [r4, #-20]	; 0xffffffec
   191bc:	str	r0, [fp, #-136]	; 0xffffff78
   191c0:	bic	r0, r7, #-16777216	; 0xff000000
   191c4:	ldr	r1, [fp, #-196]	; 0xffffff3c
   191c8:	orrne	r0, r0, #-16777216	; 0xff000000
   191cc:	blx	r3
   191d0:	mov	r1, #0
   191d4:	ldr	r2, [fp, #-120]	; 0xffffff88
   191d8:	cmp	r0, #7
   191dc:	str	r2, [r4]
   191e0:	bne	190f8 <argp_parse@@Base+0x6b4>
   191e4:	b	19288 <argp_parse@@Base+0x844>
   191e8:	ldr	r0, [fp, #-216]	; 0xffffff28
   191ec:	mov	r1, r7
   191f0:	bl	11524 <strchr@plt>
   191f4:	cmp	r0, #0
   191f8:	beq	19290 <argp_parse@@Base+0x84c>
   191fc:	ldr	r1, [fp, #-172]	; 0xffffff54
   19200:	ldr	r2, [fp, #-168]	; 0xffffff58
   19204:	cmp	r1, r2
   19208:	bcs	19290 <argp_parse@@Base+0x84c>
   1920c:	add	r1, r1, #24
   19210:	ldr	r3, [r1, #-16]
   19214:	cmp	r3, r0
   19218:	bhi	19234 <argp_parse@@Base+0x7f0>
   1921c:	add	r3, r1, #36	; 0x24
   19220:	add	r1, r1, #12
   19224:	cmp	r1, r2
   19228:	mov	r1, r3
   1922c:	bcc	19210 <argp_parse@@Base+0x7cc>
   19230:	b	19290 <argp_parse@@Base+0x84c>
   19234:	ldr	r3, [r1, #-24]	; 0xffffffe8
   19238:	cmp	r3, #0
   1923c:	beq	19290 <argp_parse@@Base+0x84c>
   19240:	mov	r4, r1
   19244:	mov	r2, sl
   19248:	ldr	r0, [r4, #8]!
   1924c:	str	r0, [fp, #-120]	; 0xffffff88
   19250:	ldr	r0, [r1]
   19254:	str	r0, [fp, #-128]	; 0xffffff80
   19258:	ldr	r0, [r1, #4]
   1925c:	str	r0, [fp, #-124]	; 0xffffff84
   19260:	ldr	r0, [r1, #-12]
   19264:	str	r0, [fp, #-136]	; 0xffffff78
   19268:	mov	r0, r7
   1926c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   19270:	blx	r3
   19274:	mov	r1, #1
   19278:	ldr	r2, [fp, #-120]	; 0xffffff88
   1927c:	cmp	r0, #7
   19280:	str	r2, [r4]
   19284:	bne	190f8 <argp_parse@@Base+0x6b4>
   19288:	cmp	r1, #0
   1928c:	beq	196a8 <argp_parse@@Base+0xc64>
   19290:	movw	r1, #55966	; 0xda9e
   19294:	movw	r3, #55704	; 0xd998
   19298:	mov	r0, sl
   1929c:	mov	r2, r7
   192a0:	movt	r1, #1
   192a4:	movt	r3, #1
   192a8:	bl	168b8 <argp_error@@Base>
   192ac:	mov	r0, #0
   192b0:	b	192c4 <argp_parse@@Base+0x880>
   192b4:	mov	r1, r5
   192b8:	b	18c9c <argp_parse@@Base+0x258>
   192bc:	mov	r7, #1
   192c0:	mov	r0, #1
   192c4:	add	r1, r7, #1
   192c8:	clz	r1, r1
   192cc:	lsr	r1, r1, #5
   192d0:	orr	r1, r1, r0
   192d4:	mov	r0, #7
   192d8:	subs	r7, r0, #7
   192dc:	movne	r7, r0
   192e0:	cmp	r1, #0
   192e4:	moveq	r7, r0
   192e8:	cmp	r7, #0
   192ec:	beq	1939c <argp_parse@@Base+0x958>
   192f0:	cmp	r7, #0
   192f4:	beq	19560 <argp_parse@@Base+0xb1c>
   192f8:	cmp	r7, #7
   192fc:	bne	19314 <argp_parse@@Base+0x8d0>
   19300:	ldr	r1, [fp, #-112]	; 0xffffff90
   19304:	mov	r0, sl
   19308:	mov	r2, #260	; 0x104
   1930c:	bl	167fc <argp_state_help@@Base>
   19310:	mov	r7, #7
   19314:	ldr	r4, [fp, #-172]	; 0xffffff54
   19318:	ldr	r0, [fp, #-168]	; 0xffffff58
   1931c:	cmp	r4, r0
   19320:	bcs	1961c <argp_parse@@Base+0xbd8>
   19324:	movw	r1, #6
   19328:	movt	r1, #256	; 0x100
   1932c:	sub	r6, r1, #1
   19330:	ldr	r3, [r4]
   19334:	cmp	r3, #0
   19338:	beq	19378 <argp_parse@@Base+0x934>
   1933c:	ldr	r0, [r4, #32]
   19340:	mov	r1, #0
   19344:	mov	r2, sl
   19348:	str	r0, [fp, #-120]	; 0xffffff88
   1934c:	ldr	r0, [r4, #24]
   19350:	str	r0, [fp, #-128]	; 0xffffff80
   19354:	ldr	r0, [r4, #28]
   19358:	str	r0, [fp, #-124]	; 0xffffff84
   1935c:	ldr	r0, [r4, #12]
   19360:	str	r0, [fp, #-136]	; 0xffffff78
   19364:	mov	r0, r6
   19368:	blx	r3
   1936c:	ldr	r0, [fp, #-120]	; 0xffffff88
   19370:	str	r0, [r4, #32]
   19374:	ldr	r0, [fp, #-168]	; 0xffffff58
   19378:	add	r4, r4, #36	; 0x24
   1937c:	cmp	r4, r0
   19380:	bcc	19330 <argp_parse@@Base+0x8ec>
   19384:	ldr	r4, [fp, #-172]	; 0xffffff54
   19388:	ldr	r0, [fp, #-168]	; 0xffffff58
   1938c:	sub	r6, r0, #36	; 0x24
   19390:	cmp	r6, r4
   19394:	bcs	1962c <argp_parse@@Base+0xbe8>
   19398:	b	1968c <argp_parse@@Base+0xc48>
   1939c:	ldr	r1, [fp, #-152]	; 0xffffff68
   193a0:	ldr	r0, [fp, #-144]	; 0xffffff70
   193a4:	cmp	r0, r1
   193a8:	bne	194fc <argp_parse@@Base+0xab8>
   193ac:	ldr	r4, [fp, #-172]	; 0xffffff54
   193b0:	ldr	r1, [fp, #-168]	; 0xffffff58
   193b4:	mov	r0, #0
   193b8:	cmp	r4, r1
   193bc:	bcs	19464 <argp_parse@@Base+0xa20>
   193c0:	movw	r0, #6
   193c4:	mov	r7, #0
   193c8:	movt	r0, #256	; 0x100
   193cc:	sub	r6, r0, #4
   193d0:	mov	r0, #0
   193d4:	cmp	r0, #7
   193d8:	cmpne	r0, #0
   193dc:	bne	19460 <argp_parse@@Base+0xa1c>
   193e0:	ldr	r2, [r4, #12]
   193e4:	cmp	r2, #0
   193e8:	beq	193fc <argp_parse@@Base+0x9b8>
   193ec:	add	r4, r4, #36	; 0x24
   193f0:	cmp	r4, r1
   193f4:	bcc	193d4 <argp_parse@@Base+0x990>
   193f8:	b	19460 <argp_parse@@Base+0xa1c>
   193fc:	ldr	r3, [r4]
   19400:	cmp	r3, #0
   19404:	beq	19450 <argp_parse@@Base+0xa0c>
   19408:	ldr	r0, [r4, #32]
   1940c:	mov	r1, #0
   19410:	mov	r2, sl
   19414:	str	r0, [fp, #-120]	; 0xffffff88
   19418:	ldr	r0, [r4, #24]
   1941c:	str	r0, [fp, #-128]	; 0xffffff80
   19420:	ldr	r0, [r4, #28]
   19424:	str	r7, [fp, #-136]	; 0xffffff78
   19428:	str	r0, [fp, #-124]	; 0xffffff84
   1942c:	mov	r0, r6
   19430:	blx	r3
   19434:	ldr	r1, [fp, #-120]	; 0xffffff88
   19438:	str	r1, [r4, #32]
   1943c:	ldr	r1, [fp, #-168]	; 0xffffff58
   19440:	add	r4, r4, #36	; 0x24
   19444:	cmp	r4, r1
   19448:	bcc	193d4 <argp_parse@@Base+0x990>
   1944c:	b	19460 <argp_parse@@Base+0xa1c>
   19450:	mov	r0, #7
   19454:	add	r4, r4, #36	; 0x24
   19458:	cmp	r4, r1
   1945c:	bcc	193d4 <argp_parse@@Base+0x990>
   19460:	ldr	r4, [fp, #-172]	; 0xffffff54
   19464:	sub	r7, r1, #36	; 0x24
   19468:	cmp	r7, r4
   1946c:	bcc	194f0 <argp_parse@@Base+0xaac>
   19470:	movw	r1, #6
   19474:	movt	r1, #256	; 0x100
   19478:	sub	r6, r1, #5
   1947c:	cmp	r0, #7
   19480:	cmpne	r0, #0
   19484:	bne	19544 <argp_parse@@Base+0xb00>
   19488:	ldr	r3, [r7]
   1948c:	cmp	r3, #0
   19490:	beq	194e0 <argp_parse@@Base+0xa9c>
   19494:	ldr	r0, [r7, #32]
   19498:	mov	r1, #0
   1949c:	mov	r2, sl
   194a0:	str	r0, [fp, #-120]	; 0xffffff88
   194a4:	ldr	r0, [r7, #24]
   194a8:	str	r0, [fp, #-128]	; 0xffffff80
   194ac:	ldr	r0, [r7, #28]
   194b0:	str	r0, [fp, #-124]	; 0xffffff84
   194b4:	ldr	r0, [r7, #12]
   194b8:	str	r0, [fp, #-136]	; 0xffffff78
   194bc:	mov	r0, r6
   194c0:	blx	r3
   194c4:	ldr	r1, [fp, #-120]	; 0xffffff88
   194c8:	str	r1, [r7, #32]
   194cc:	ldr	r4, [fp, #-172]	; 0xffffff54
   194d0:	sub	r7, r7, #36	; 0x24
   194d4:	cmp	r7, r4
   194d8:	bcs	1947c <argp_parse@@Base+0xa38>
   194dc:	b	194f0 <argp_parse@@Base+0xaac>
   194e0:	mov	r0, #7
   194e4:	sub	r7, r7, #36	; 0x24
   194e8:	cmp	r7, r4
   194ec:	bcs	1947c <argp_parse@@Base+0xa38>
   194f0:	subs	r7, r0, #7
   194f4:	movne	r7, r0
   194f8:	b	19548 <argp_parse@@Base+0xb04>
   194fc:	ldr	r1, [fp, #8]
   19500:	cmp	r1, #0
   19504:	beq	19518 <argp_parse@@Base+0xad4>
   19508:	str	r0, [r1]
   1950c:	b	19560 <argp_parse@@Base+0xb1c>
   19510:	mov	r1, #0
   19514:	b	192d8 <argp_parse@@Base+0x894>
   19518:	ldrb	r0, [fp, #-140]	; 0xffffff74
   1951c:	tst	r0, #2
   19520:	bne	19300 <argp_parse@@Base+0x8bc>
   19524:	ldr	r0, [fp, #-112]	; 0xffffff90
   19528:	cmp	r0, #0
   1952c:	beq	19300 <argp_parse@@Base+0x8bc>
   19530:	ldr	r2, [fp, #-116]	; 0xffffff8c
   19534:	movw	r1, #55987	; 0xdab3
   19538:	movt	r1, #1
   1953c:	bl	11530 <fprintf@plt>
   19540:	b	19300 <argp_parse@@Base+0x8bc>
   19544:	mov	r7, r0
   19548:	ldr	r1, [fp, #8]
   1954c:	cmp	r1, #0
   19550:	ldrne	r0, [fp, #-144]	; 0xffffff70
   19554:	strne	r0, [r1]
   19558:	cmp	r7, #0
   1955c:	bne	192f8 <argp_parse@@Base+0x8b4>
   19560:	ldr	r0, [fp, #-168]	; 0xffffff58
   19564:	ldr	r4, [fp, #-172]	; 0xffffff54
   19568:	mov	r7, #0
   1956c:	sub	r5, r0, #36	; 0x24
   19570:	cmp	r5, r4
   19574:	bcc	1961c <argp_parse@@Base+0xbd8>
   19578:	movw	r1, #6
   1957c:	mov	r0, #0
   19580:	movt	r1, #256	; 0x100
   19584:	sub	r6, r1, #2
   19588:	cmp	r0, #7
   1958c:	cmpne	r0, #0
   19590:	bne	19618 <argp_parse@@Base+0xbd4>
   19594:	ldr	r3, [r5]
   19598:	cmp	r3, #0
   1959c:	beq	195ec <argp_parse@@Base+0xba8>
   195a0:	ldr	r0, [r5, #32]
   195a4:	mov	r1, #0
   195a8:	mov	r2, sl
   195ac:	str	r0, [fp, #-120]	; 0xffffff88
   195b0:	ldr	r0, [r5, #24]
   195b4:	str	r0, [fp, #-128]	; 0xffffff80
   195b8:	ldr	r0, [r5, #28]
   195bc:	str	r0, [fp, #-124]	; 0xffffff84
   195c0:	ldr	r0, [r5, #12]
   195c4:	str	r0, [fp, #-136]	; 0xffffff78
   195c8:	mov	r0, r6
   195cc:	blx	r3
   195d0:	ldr	r1, [fp, #-120]	; 0xffffff88
   195d4:	str	r1, [r5, #32]
   195d8:	ldr	r4, [fp, #-172]	; 0xffffff54
   195dc:	sub	r5, r5, #36	; 0x24
   195e0:	cmp	r5, r4
   195e4:	bcs	19588 <argp_parse@@Base+0xb44>
   195e8:	b	195fc <argp_parse@@Base+0xbb8>
   195ec:	mov	r0, #7
   195f0:	sub	r5, r5, #36	; 0x24
   195f4:	cmp	r5, r4
   195f8:	bcs	19588 <argp_parse@@Base+0xb44>
   195fc:	subs	r7, r0, #7
   19600:	movne	r7, r0
   19604:	ldr	r0, [fp, #-168]	; 0xffffff58
   19608:	sub	r6, r0, #36	; 0x24
   1960c:	cmp	r6, r4
   19610:	bcs	1962c <argp_parse@@Base+0xbe8>
   19614:	b	1968c <argp_parse@@Base+0xc48>
   19618:	mov	r7, r0
   1961c:	ldr	r0, [fp, #-168]	; 0xffffff58
   19620:	sub	r6, r0, #36	; 0x24
   19624:	cmp	r6, r4
   19628:	bcc	1968c <argp_parse@@Base+0xc48>
   1962c:	movw	r0, #6
   19630:	movt	r0, #256	; 0x100
   19634:	add	r5, r0, #1
   19638:	ldr	r3, [r6]
   1963c:	cmp	r3, #0
   19640:	beq	19680 <argp_parse@@Base+0xc3c>
   19644:	ldr	r0, [r6, #32]
   19648:	mov	r1, #0
   1964c:	mov	r2, sl
   19650:	str	r0, [fp, #-120]	; 0xffffff88
   19654:	ldr	r0, [r6, #24]
   19658:	str	r0, [fp, #-128]	; 0xffffff80
   1965c:	ldr	r0, [r6, #28]
   19660:	str	r0, [fp, #-124]	; 0xffffff84
   19664:	ldr	r0, [r6, #12]
   19668:	str	r0, [fp, #-136]	; 0xffffff78
   1966c:	mov	r0, r5
   19670:	blx	r3
   19674:	ldr	r0, [fp, #-120]	; 0xffffff88
   19678:	str	r0, [r6, #32]
   1967c:	ldr	r4, [fp, #-172]	; 0xffffff54
   19680:	sub	r6, r6, #36	; 0x24
   19684:	cmp	r6, r4
   19688:	bcs	19638 <argp_parse@@Base+0xbf4>
   1968c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19690:	bl	19df4 <argp_parse@@Base+0x13b0>
   19694:	cmp	r7, #7
   19698:	movweq	r7, #22
   1969c:	mov	r0, r7
   196a0:	sub	sp, fp, #28
   196a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196a8:	ldr	r0, [fp, #-212]	; 0xffffff2c
   196ac:	ldr	r1, [r0, #12]
   196b0:	cmp	r1, r7
   196b4:	beq	196e4 <argp_parse@@Base+0xca0>
   196b8:	ldr	r1, [r0]
   196bc:	cmp	r1, #0
   196c0:	beq	196e4 <argp_parse@@Base+0xca0>
   196c4:	add	r1, r0, #16
   196c8:	ldr	r0, [r0, #28]
   196cc:	cmp	r0, r7
   196d0:	mov	r0, r1
   196d4:	bne	196b8 <argp_parse@@Base+0xc74>
   196d8:	b	196e8 <argp_parse@@Base+0xca4>
   196dc:	mov	r1, #0
   196e0:	b	192d4 <argp_parse@@Base+0x890>
   196e4:	mov	r1, r0
   196e8:	ldr	r0, [r1]
   196ec:	movw	r2, #55983	; 0xdaaf
   196f0:	movw	r1, #55974	; 0xdaa6
   196f4:	movw	r3, #55704	; 0xd998
   196f8:	movt	r2, #1
   196fc:	movt	r1, #1
   19700:	movt	r3, #1
   19704:	cmp	r0, #0
   19708:	movne	r2, r0
   1970c:	mov	r0, sl
   19710:	b	192a8 <argp_parse@@Base+0x864>
   19714:	mov	ip, r0
   19718:	mov	r0, #0
   1971c:	cmp	r1, #0
   19720:	beq	19750 <argp_parse@@Base+0xd0c>
   19724:	ldr	r3, [r1, #52]	; 0x34
   19728:	ldr	r1, [r3, #48]	; 0x30
   1972c:	ldr	r3, [r3, #52]	; 0x34
   19730:	b	19738 <argp_parse@@Base+0xcf4>
   19734:	add	r1, r1, #36	; 0x24
   19738:	cmp	r1, r3
   1973c:	bxcs	lr
   19740:	ldr	r2, [r1, #4]
   19744:	cmp	r2, ip
   19748:	bne	19734 <argp_parse@@Base+0xcf0>
   1974c:	ldr	r0, [r1, #24]
   19750:	bx	lr
   19754:	push	{r4, r5, r6, sl, fp, lr}
   19758:	add	fp, sp, #16
   1975c:	mov	r5, r2
   19760:	mov	r6, r1
   19764:	mov	r4, #7
   19768:	cmn	r0, #3
   1976c:	bgt	1979c <argp_parse@@Base+0xd58>
   19770:	cmn	r0, #4
   19774:	beq	197c8 <argp_parse@@Base+0xd84>
   19778:	cmn	r0, #3
   1977c:	bne	19820 <argp_parse@@Base+0xddc>
   19780:	ldr	r1, [r5, #48]	; 0x30
   19784:	mov	r0, r5
   19788:	movw	r2, #513	; 0x201
   1978c:	bl	167fc <argp_state_help@@Base>
   19790:	mov	r4, #0
   19794:	mov	r0, r4
   19798:	pop	{r4, r5, r6, sl, fp, pc}
   1979c:	cmn	r0, #2
   197a0:	beq	19828 <argp_parse@@Base+0xde4>
   197a4:	cmp	r0, #63	; 0x3f
   197a8:	bne	19820 <argp_parse@@Base+0xddc>
   197ac:	ldr	r1, [r5, #48]	; 0x30
   197b0:	mov	r0, r5
   197b4:	movw	r2, #634	; 0x27a
   197b8:	bl	167fc <argp_state_help@@Base>
   197bc:	mov	r4, #0
   197c0:	mov	r0, r4
   197c4:	pop	{r4, r5, r6, sl, fp, pc}
   197c8:	movw	r0, #55901	; 0xda5d
   197cc:	cmp	r6, #0
   197d0:	mov	r1, #0
   197d4:	mov	r2, #10
   197d8:	mov	r4, #0
   197dc:	movt	r0, #1
   197e0:	movne	r0, r6
   197e4:	bl	11350 <strtol@plt>
   197e8:	movw	r5, #63108	; 0xf684
   197ec:	movt	r5, #2
   197f0:	str	r0, [r5]
   197f4:	ldr	r0, [r5]
   197f8:	subs	r0, r0, #1
   197fc:	str	r0, [r5]
   19800:	blt	19820 <argp_parse@@Base+0xddc>
   19804:	mov	r0, #1
   19808:	bl	1141c <sleep@plt>
   1980c:	ldr	r0, [r5]
   19810:	sub	r1, r0, #1
   19814:	cmp	r0, #0
   19818:	str	r1, [r5]
   1981c:	bgt	19804 <argp_parse@@Base+0xdc0>
   19820:	mov	r0, r4
   19824:	pop	{r4, r5, r6, sl, fp, pc}
   19828:	movw	r0, #63028	; 0xf634
   1982c:	movt	r0, #2
   19830:	str	r6, [r0]
   19834:	mov	r0, r6
   19838:	bl	19d5c <argp_parse@@Base+0x1318>
   1983c:	movw	r1, #63024	; 0xf630
   19840:	str	r0, [r5, #40]	; 0x28
   19844:	mov	r4, #0
   19848:	movt	r1, #2
   1984c:	str	r0, [r1]
   19850:	ldr	r0, [r5, #16]
   19854:	and	r0, r0, #3
   19858:	cmp	r0, #1
   1985c:	ldreq	r0, [r5, #8]
   19860:	streq	r6, [r0]
   19864:	moveq	r0, r4
   19868:	popeq	{r4, r5, r6, sl, fp, pc}
   1986c:	mov	r0, r4
   19870:	pop	{r4, r5, r6, sl, fp, pc}
   19874:	push	{r4, sl, fp, lr}
   19878:	add	fp, sp, #8
   1987c:	mov	r1, r0
   19880:	mov	r0, #7
   19884:	cmp	r1, #86	; 0x56
   19888:	popne	{r4, sl, fp, pc}
   1988c:	movw	r0, #63112	; 0xf688
   19890:	mov	r4, r2
   19894:	movt	r0, #2
   19898:	ldr	r2, [r0]
   1989c:	cmp	r2, #0
   198a0:	beq	198c4 <argp_parse@@Base+0xe80>
   198a4:	ldr	r0, [r4, #48]	; 0x30
   198a8:	mov	r1, r4
   198ac:	blx	r2
   198b0:	ldrb	r1, [r4, #16]
   198b4:	mov	r0, #0
   198b8:	tst	r1, #32
   198bc:	beq	198f8 <argp_parse@@Base+0xeb4>
   198c0:	pop	{r4, sl, fp, pc}
   198c4:	movw	r0, #63196	; 0xf6dc
   198c8:	movt	r0, #2
   198cc:	ldr	r2, [r0]
   198d0:	cmp	r2, #0
   198d4:	beq	19900 <argp_parse@@Base+0xebc>
   198d8:	ldr	r0, [r4, #48]	; 0x30
   198dc:	movw	r1, #56114	; 0xdb32
   198e0:	movt	r1, #1
   198e4:	bl	11530 <fprintf@plt>
   198e8:	ldrb	r1, [r4, #16]
   198ec:	mov	r0, #0
   198f0:	tst	r1, #32
   198f4:	bne	198c0 <argp_parse@@Base+0xe7c>
   198f8:	mov	r0, #0
   198fc:	bl	11500 <exit@plt>
   19900:	movw	r1, #53919	; 0xd29f
   19904:	movw	r2, #55928	; 0xda78
   19908:	mov	r0, r4
   1990c:	movt	r1, #1
   19910:	movt	r2, #1
   19914:	bl	168b8 <argp_error@@Base>
   19918:	ldrb	r1, [r4, #16]
   1991c:	mov	r0, #0
   19920:	tst	r1, #32
   19924:	bne	198c0 <argp_parse@@Base+0xe7c>
   19928:	b	198f8 <argp_parse@@Base+0xeb4>
   1992c:	push	{r4, r5, fp, lr}
   19930:	add	fp, sp, #8
   19934:	ldr	r2, [r0]
   19938:	ldr	ip, [r0, #16]
   1993c:	mov	r4, r1
   19940:	cmp	r2, #0
   19944:	beq	199bc <argp_parse@@Base+0xf78>
   19948:	ldr	r0, [r4, #8]
   1994c:	mov	r3, #0
   19950:	add	r0, r0, #1
   19954:	str	r0, [r4, #8]
   19958:	mov	r0, #0
   1995c:	add	r5, r2, r3, lsl #3
   19960:	ldr	r1, [r5, #4]
   19964:	cmp	r1, #0
   19968:	beq	19984 <argp_parse@@Base+0xf40>
   1996c:	add	r3, r3, #3
   19970:	add	r0, r0, #1
   19974:	add	r5, r2, r3, lsl #3
   19978:	ldr	r1, [r5, #4]
   1997c:	cmp	r1, #0
   19980:	bne	1996c <argp_parse@@Base+0xf28>
   19984:	ldr	r1, [r2, r3, lsl #3]
   19988:	cmp	r1, #0
   1998c:	bne	1996c <argp_parse@@Base+0xf28>
   19990:	ldr	r1, [r5, #16]
   19994:	cmp	r1, #0
   19998:	bne	1996c <argp_parse@@Base+0xf28>
   1999c:	ldr	r1, [r5, #20]
   199a0:	cmp	r1, #0
   199a4:	bne	1996c <argp_parse@@Base+0xf28>
   199a8:	ldr	r1, [r4]
   199ac:	mov	r2, r4
   199b0:	add	r1, r1, r3
   199b4:	str	r1, [r2], #4
   199b8:	b	199d0 <argp_parse@@Base+0xf8c>
   199bc:	ldr	r0, [r0, #4]
   199c0:	cmp	r0, #0
   199c4:	beq	199dc <argp_parse@@Base+0xf98>
   199c8:	add	r2, r4, #8
   199cc:	mov	r0, #1
   199d0:	ldr	r1, [r2]
   199d4:	add	r0, r1, r0
   199d8:	str	r0, [r2]
   199dc:	cmp	ip, #0
   199e0:	ldrne	r0, [ip]
   199e4:	cmpne	r0, #0
   199e8:	beq	19a10 <argp_parse@@Base+0xfcc>
   199ec:	add	r5, ip, #16
   199f0:	mov	r1, r4
   199f4:	bl	1992c <argp_parse@@Base+0xee8>
   199f8:	ldr	r0, [r4, #12]
   199fc:	add	r0, r0, #1
   19a00:	str	r0, [r4, #12]
   19a04:	ldr	r0, [r5], #16
   19a08:	cmp	r0, #0
   19a0c:	bne	199f0 <argp_parse@@Base+0xfac>
   19a10:	pop	{r4, r5, fp, pc}
   19a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a18:	add	fp, sp, #28
   19a1c:	sub	sp, sp, #28
   19a20:	ldr	r7, [r0]
   19a24:	mov	r6, r3
   19a28:	mov	r3, r1
   19a2c:	ldr	r5, [r0, #16]
   19a30:	ldr	r1, [fp, #8]
   19a34:	cmp	r7, #0
   19a38:	beq	19c20 <argp_parse@@Base+0x11dc>
   19a3c:	str	r0, [sp, #8]
   19a40:	add	r0, sp, #16
   19a44:	add	r8, r1, #4
   19a48:	mov	r9, r7
   19a4c:	str	r3, [sp, #12]
   19a50:	stm	r0, {r2, r5, r6}
   19a54:	ldr	r4, [r9, #4]
   19a58:	cmp	r4, #0
   19a5c:	bne	19a98 <argp_parse@@Base+0x1054>
   19a60:	b	19a74 <argp_parse@@Base+0x1030>
   19a64:	add	r9, r9, #24
   19a68:	ldr	r4, [r9, #4]
   19a6c:	cmp	r4, #0
   19a70:	bne	19a98 <argp_parse@@Base+0x1054>
   19a74:	ldr	r0, [r9]
   19a78:	cmp	r0, #0
   19a7c:	bne	19a98 <argp_parse@@Base+0x1054>
   19a80:	ldr	r0, [r9, #16]
   19a84:	cmp	r0, #0
   19a88:	bne	19a98 <argp_parse@@Base+0x1054>
   19a8c:	ldr	r0, [r9, #20]
   19a90:	cmp	r0, #0
   19a94:	beq	19c08 <argp_parse@@Base+0x11c4>
   19a98:	ldr	r0, [r9, #12]
   19a9c:	mov	r5, #0
   19aa0:	tst	r0, #4
   19aa4:	moveq	r7, r9
   19aa8:	ldrb	r1, [r7, #12]
   19aac:	tst	r1, #8
   19ab0:	bne	19a64 <argp_parse@@Base+0x1020>
   19ab4:	sub	r1, r4, #1
   19ab8:	cmp	r1, #254	; 0xfe
   19abc:	bhi	19b38 <argp_parse@@Base+0x10f4>
   19ac0:	ands	r0, r0, #8
   19ac4:	bne	19b38 <argp_parse@@Base+0x10f4>
   19ac8:	bl	114e8 <__ctype_b_loc@plt>
   19acc:	ldr	r0, [r0]
   19ad0:	add	r0, r0, r4, lsl #1
   19ad4:	ldrb	r0, [r0, #1]
   19ad8:	tst	r0, #64	; 0x40
   19adc:	beq	19b38 <argp_parse@@Base+0x10f4>
   19ae0:	ldr	r0, [r8]
   19ae4:	add	r1, r0, #1
   19ae8:	str	r1, [r8]
   19aec:	strb	r4, [r0]
   19af0:	ldr	r0, [r7, #8]
   19af4:	cmp	r0, #0
   19af8:	beq	19b30 <argp_parse@@Base+0x10ec>
   19afc:	ldr	r0, [r8]
   19b00:	add	r1, r0, #1
   19b04:	str	r1, [r8]
   19b08:	mov	r1, #58	; 0x3a
   19b0c:	strb	r1, [r0]
   19b10:	ldrb	r0, [r7, #12]
   19b14:	tst	r0, #1
   19b18:	beq	19b30 <argp_parse@@Base+0x10ec>
   19b1c:	ldr	r0, [r8]
   19b20:	add	r1, r0, #1
   19b24:	str	r1, [r8]
   19b28:	mov	r1, #58	; 0x3a
   19b2c:	strb	r1, [r0]
   19b30:	ldr	r0, [r8]
   19b34:	strb	r5, [r0]
   19b38:	ldr	r5, [r9]
   19b3c:	cmp	r5, #0
   19b40:	beq	19a64 <argp_parse@@Base+0x1020>
   19b44:	ldr	r0, [fp, #8]
   19b48:	ldr	r4, [r0]
   19b4c:	ldr	sl, [r4, #8]
   19b50:	ldr	r0, [sl]
   19b54:	cmp	r0, #0
   19b58:	beq	19b8c <argp_parse@@Base+0x1148>
   19b5c:	mov	r6, sl
   19b60:	mov	r1, r5
   19b64:	bl	11344 <strcmp@plt>
   19b68:	cmp	r0, #0
   19b6c:	beq	19b80 <argp_parse@@Base+0x113c>
   19b70:	ldr	r0, [r6, #16]!
   19b74:	cmp	r0, #0
   19b78:	bne	19b60 <argp_parse@@Base+0x111c>
   19b7c:	b	19b8c <argp_parse@@Base+0x1148>
   19b80:	sub	r0, r6, sl
   19b84:	cmn	r0, #1
   19b88:	bgt	19a64 <argp_parse@@Base+0x1020>
   19b8c:	ldr	r6, [fp, #8]
   19b90:	ldr	r0, [r6, #8]
   19b94:	str	r5, [r0]
   19b98:	ldr	r1, [r7, #8]
   19b9c:	cmp	r1, #0
   19ba0:	beq	19bb8 <argp_parse@@Base+0x1174>
   19ba4:	ldrb	r1, [r7, #12]
   19ba8:	tst	r1, #1
   19bac:	mov	r1, #2
   19bb0:	movweq	r1, #1
   19bb4:	b	19bbc <argp_parse@@Base+0x1178>
   19bb8:	mov	r1, #0
   19bbc:	mov	r5, #0
   19bc0:	stmib	r0, {r1, r5}
   19bc4:	ldr	r1, [r9, #4]
   19bc8:	ldr	r3, [sp, #24]
   19bcc:	ldr	r2, [r4, #48]	; 0x30
   19bd0:	cmp	r1, #0
   19bd4:	sub	r2, r3, r2
   19bd8:	mov	r3, #956301312	; 0x39000000
   19bdc:	ldreq	r1, [r7, #4]
   19be0:	lsr	r2, r2, #2
   19be4:	mul	r2, r2, r3
   19be8:	add	r2, r2, #16777216	; 0x1000000
   19bec:	bic	r1, r1, #-16777216	; 0xff000000
   19bf0:	orr	r1, r2, r1
   19bf4:	str	r1, [r0, #12]
   19bf8:	add	r1, r0, #16
   19bfc:	str	r1, [r6, #8]
   19c00:	str	r5, [r0, #16]
   19c04:	b	19a64 <argp_parse@@Base+0x1020>
   19c08:	ldr	r0, [sp, #8]
   19c0c:	add	r6, sp, #16
   19c10:	ldr	r7, [r0, #4]
   19c14:	ldm	r6, {r2, r5, r6}
   19c18:	ldr	r3, [sp, #12]
   19c1c:	b	19c34 <argp_parse@@Base+0x11f0>
   19c20:	ldr	r7, [r0, #4]
   19c24:	cmp	r7, #0
   19c28:	beq	19cdc <argp_parse@@Base+0x1298>
   19c2c:	ldr	r1, [fp, #8]
   19c30:	add	r8, r1, #4
   19c34:	str	r0, [r6, #4]
   19c38:	str	r7, [r6]
   19c3c:	mov	r0, #0
   19c40:	cmp	r5, #0
   19c44:	ldr	r1, [r8]
   19c48:	str	r0, [r6, #12]
   19c4c:	str	r3, [r6, #16]
   19c50:	str	r2, [r6, #20]
   19c54:	str	r0, [r6, #24]
   19c58:	str	r0, [r6, #32]
   19c5c:	str	r0, [r6, #28]
   19c60:	str	r1, [r6, #8]
   19c64:	beq	19c94 <argp_parse@@Base+0x1250>
   19c68:	ldr	r1, [r5, r0, lsl #2]
   19c6c:	add	r0, r0, #4
   19c70:	cmp	r1, #0
   19c74:	bne	19c68 <argp_parse@@Base+0x1224>
   19c78:	ldr	r1, [fp, #8]
   19c7c:	mov	r2, r1
   19c80:	ldr	r1, [r1, #12]
   19c84:	add	r0, r1, r0
   19c88:	str	r1, [r6, #28]
   19c8c:	sub	r0, r0, #4
   19c90:	str	r0, [r2, #12]
   19c94:	add	r3, r6, #36	; 0x24
   19c98:	cmp	r5, #0
   19c9c:	ldrne	r0, [r5]
   19ca0:	cmpne	r0, #0
   19ca4:	beq	19cf4 <argp_parse@@Base+0x12b0>
   19ca8:	ldr	r7, [fp, #8]
   19cac:	add	r4, r5, #16
   19cb0:	mov	r5, #0
   19cb4:	mov	r1, r6
   19cb8:	mov	r2, r5
   19cbc:	str	r7, [sp]
   19cc0:	bl	19a14 <argp_parse@@Base+0xfd0>
   19cc4:	mov	r3, r0
   19cc8:	ldr	r0, [r4, r5, lsl #4]
   19ccc:	add	r5, r5, #1
   19cd0:	cmp	r0, #0
   19cd4:	bne	19cb4 <argp_parse@@Base+0x1270>
   19cd8:	b	19cf4 <argp_parse@@Base+0x12b0>
   19cdc:	mov	r3, r6
   19ce0:	mov	r6, #0
   19ce4:	cmp	r5, #0
   19ce8:	ldrne	r0, [r5]
   19cec:	cmpne	r0, #0
   19cf0:	bne	19ca8 <argp_parse@@Base+0x1264>
   19cf4:	mov	r0, r3
   19cf8:	sub	sp, fp, #28
   19cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d00:	movw	r2, #63116	; 0xf68c
   19d04:	movw	ip, #63112	; 0xf688
   19d08:	movw	r3, #40228	; 0x9d24
   19d0c:	movt	r2, #2
   19d10:	movt	ip, #2
   19d14:	movt	r3, #1
   19d18:	str	r3, [ip]
   19d1c:	stm	r2, {r0, r1}
   19d20:	bx	lr
   19d24:	push	{fp, lr}
   19d28:	mov	fp, sp
   19d2c:	sub	sp, sp, #8
   19d30:	movw	r2, #63116	; 0xf68c
   19d34:	movw	r3, #56025	; 0xdad9
   19d38:	movt	r2, #2
   19d3c:	movt	r3, #1
   19d40:	ldm	r2, {r1, r2}
   19d44:	str	r2, [sp]
   19d48:	movw	r2, #56011	; 0xdacb
   19d4c:	movt	r2, #1
   19d50:	bl	1a25c <argp_parse@@Base+0x1818>
   19d54:	mov	sp, fp
   19d58:	pop	{fp, pc}
   19d5c:	sub	r0, r0, #1
   19d60:	ldrb	r3, [r0, #1]!
   19d64:	cmp	r3, #47	; 0x2f
   19d68:	beq	19d60 <argp_parse@@Base+0x131c>
   19d6c:	mov	r2, #0
   19d70:	mov	r1, r0
   19d74:	uxtb	r3, r3
   19d78:	cmp	r3, #47	; 0x2f
   19d7c:	beq	19da4 <argp_parse@@Base+0x1360>
   19d80:	cmp	r3, #0
   19d84:	bxeq	lr
   19d88:	tst	r2, #1
   19d8c:	mov	r2, #0
   19d90:	movne	r0, r1
   19d94:	ldrb	r3, [r1, #1]!
   19d98:	uxtb	r3, r3
   19d9c:	cmp	r3, #47	; 0x2f
   19da0:	bne	19d80 <argp_parse@@Base+0x133c>
   19da4:	ldrb	r3, [r1, #1]!
   19da8:	mov	r2, #1
   19dac:	uxtb	r3, r3
   19db0:	cmp	r3, #47	; 0x2f
   19db4:	bne	19d80 <argp_parse@@Base+0x133c>
   19db8:	b	19da4 <argp_parse@@Base+0x1360>
   19dbc:	push	{r4, sl, fp, lr}
   19dc0:	add	fp, sp, #8
   19dc4:	mov	r4, r0
   19dc8:	bl	11518 <strlen@plt>
   19dcc:	mov	r1, r0
   19dd0:	sub	r2, r4, #1
   19dd4:	mov	r0, r1
   19dd8:	cmp	r1, #2
   19ddc:	popcc	{r4, sl, fp, pc}
   19de0:	ldrb	r3, [r2, r0]
   19de4:	sub	r1, r0, #1
   19de8:	cmp	r3, #47	; 0x2f
   19dec:	beq	19dd4 <argp_parse@@Base+0x1390>
   19df0:	pop	{r4, sl, fp, pc}
   19df4:	push	{r4, r5, r6, sl, fp, lr}
   19df8:	add	fp, sp, #16
   19dfc:	mov	r4, r0
   19e00:	bl	1153c <__errno_location@plt>
   19e04:	ldr	r6, [r0]
   19e08:	mov	r5, r0
   19e0c:	mov	r0, r4
   19e10:	bl	113b0 <free@plt>
   19e14:	str	r6, [r5]
   19e18:	pop	{r4, r5, r6, sl, fp, pc}
   19e1c:	push	{fp, lr}
   19e20:	mov	fp, sp
   19e24:	sub	sp, sp, #16
   19e28:	mov	ip, #0
   19e2c:	str	ip, [sp, #8]
   19e30:	str	ip, [sp, #4]
   19e34:	ldr	ip, [fp, #8]
   19e38:	str	ip, [sp]
   19e3c:	bl	1c588 <argp_parse@@Base+0x3b44>
   19e40:	mov	sp, fp
   19e44:	pop	{fp, pc}
   19e48:	push	{fp, lr}
   19e4c:	mov	fp, sp
   19e50:	sub	sp, sp, #16
   19e54:	mov	ip, #0
   19e58:	str	ip, [sp, #12]
   19e5c:	str	ip, [sp, #4]
   19e60:	ldr	ip, [fp, #12]
   19e64:	str	ip, [sp, #8]
   19e68:	ldr	ip, [fp, #8]
   19e6c:	str	ip, [sp]
   19e70:	bl	1b3f4 <argp_parse@@Base+0x29b0>
   19e74:	mov	sp, fp
   19e78:	pop	{fp, pc}
   19e7c:	push	{fp, lr}
   19e80:	mov	fp, sp
   19e84:	sub	sp, sp, #16
   19e88:	mov	ip, #0
   19e8c:	str	ip, [sp, #8]
   19e90:	mov	ip, #1
   19e94:	str	ip, [sp, #4]
   19e98:	ldr	ip, [fp, #8]
   19e9c:	str	ip, [sp]
   19ea0:	bl	1c588 <argp_parse@@Base+0x3b44>
   19ea4:	mov	sp, fp
   19ea8:	pop	{fp, pc}
   19eac:	push	{fp, lr}
   19eb0:	mov	fp, sp
   19eb4:	sub	sp, sp, #16
   19eb8:	mov	ip, #0
   19ebc:	str	ip, [sp, #12]
   19ec0:	mov	ip, #1
   19ec4:	str	ip, [sp, #4]
   19ec8:	ldr	ip, [fp, #12]
   19ecc:	str	ip, [sp, #8]
   19ed0:	ldr	ip, [fp, #8]
   19ed4:	str	ip, [sp]
   19ed8:	bl	1b3f4 <argp_parse@@Base+0x29b0>
   19edc:	mov	sp, fp
   19ee0:	pop	{fp, pc}
   19ee4:	push	{r4, r5, fp, lr}
   19ee8:	add	fp, sp, #8
   19eec:	cmp	r0, #0
   19ef0:	beq	19f84 <argp_parse@@Base+0x1540>
   19ef4:	mov	r1, #47	; 0x2f
   19ef8:	mov	r4, r0
   19efc:	bl	115cc <strrchr@plt>
   19f00:	cmp	r0, #0
   19f04:	mov	r5, r4
   19f08:	addne	r5, r0, #1
   19f0c:	sub	r0, r5, r4
   19f10:	cmp	r0, #7
   19f14:	blt	19f68 <argp_parse@@Base+0x1524>
   19f18:	movw	r1, #56094	; 0xdb1e
   19f1c:	sub	r0, r5, #7
   19f20:	mov	r2, #7
   19f24:	movt	r1, #1
   19f28:	bl	1165c <strncmp@plt>
   19f2c:	cmp	r0, #0
   19f30:	bne	19f68 <argp_parse@@Base+0x1524>
   19f34:	movw	r1, #56102	; 0xdb26
   19f38:	mov	r0, r5
   19f3c:	mov	r2, #3
   19f40:	movt	r1, #1
   19f44:	bl	1165c <strncmp@plt>
   19f48:	cmp	r0, #0
   19f4c:	beq	19f58 <argp_parse@@Base+0x1514>
   19f50:	mov	r4, r5
   19f54:	b	19f68 <argp_parse@@Base+0x1524>
   19f58:	movw	r0, #63024	; 0xf630
   19f5c:	add	r4, r5, #3
   19f60:	movt	r0, #2
   19f64:	str	r4, [r0]
   19f68:	movw	r0, #63028	; 0xf634
   19f6c:	movt	r0, #2
   19f70:	str	r4, [r0]
   19f74:	movw	r0, #63124	; 0xf694
   19f78:	movt	r0, #2
   19f7c:	str	r4, [r0]
   19f80:	pop	{r4, r5, fp, pc}
   19f84:	movw	r0, #63032	; 0xf638
   19f88:	mov	r1, #55	; 0x37
   19f8c:	mov	r2, #1
   19f90:	movt	r0, #2
   19f94:	ldr	r3, [r0]
   19f98:	movw	r0, #56038	; 0xdae6
   19f9c:	movt	r0, #1
   19fa0:	bl	11470 <fwrite@plt>
   19fa4:	bl	11668 <abort@plt>
   19fa8:	push	{r4, r5, r6, r7, fp, lr}
   19fac:	add	fp, sp, #16
   19fb0:	sub	sp, sp, #32
   19fb4:	ldr	r7, [fp, #12]
   19fb8:	ldr	r6, [fp, #8]
   19fbc:	mov	r4, r2
   19fc0:	mov	r5, r0
   19fc4:	cmp	r1, #0
   19fc8:	beq	19fe8 <argp_parse@@Base+0x15a4>
   19fcc:	mov	r2, r1
   19fd0:	movw	r1, #56106	; 0xdb2a
   19fd4:	str	r3, [sp]
   19fd8:	mov	r0, r5
   19fdc:	mov	r3, r4
   19fe0:	movt	r1, #1
   19fe4:	b	19ff8 <argp_parse@@Base+0x15b4>
   19fe8:	movw	r1, #56118	; 0xdb36
   19fec:	mov	r0, r5
   19ff0:	mov	r2, r4
   19ff4:	movt	r1, #1
   19ff8:	bl	11530 <fprintf@plt>
   19ffc:	movw	r1, #56882	; 0xde32
   1a000:	movw	r2, #56125	; 0xdb3d
   1a004:	mov	r0, r5
   1a008:	movw	r3, #2022	; 0x7e6
   1a00c:	movt	r1, #1
   1a010:	movt	r2, #1
   1a014:	bl	11530 <fprintf@plt>
   1a018:	mov	r0, #10
   1a01c:	mov	r1, r5
   1a020:	bl	115e4 <fputc@plt>
   1a024:	movw	r1, #56129	; 0xdb41
   1a028:	movw	r2, #56300	; 0xdbec
   1a02c:	mov	r0, r5
   1a030:	movt	r1, #1
   1a034:	movt	r2, #1
   1a038:	bl	11530 <fprintf@plt>
   1a03c:	mov	r0, #10
   1a040:	mov	r1, r5
   1a044:	bl	115e4 <fputc@plt>
   1a048:	cmp	r7, #9
   1a04c:	bhi	1a088 <argp_parse@@Base+0x1644>
   1a050:	add	r0, pc, #0
   1a054:	ldr	pc, [r0, r7, lsl #2]
   1a058:	andeq	sl, r1, r0, lsl #1
   1a05c:	andeq	sl, r1, r8, asr #1
   1a060:	andeq	sl, r1, r4, ror #1
   1a064:	andeq	sl, r1, r0, lsl #2
   1a068:	andeq	sl, r1, r4, lsr #2
   1a06c:	andeq	sl, r1, ip, asr #2
   1a070:	andeq	sl, r1, r4, ror r1
   1a074:	andeq	sl, r1, r4, lsr #3
   1a078:	andeq	sl, r1, ip, lsl r2
   1a07c:	ldrdeq	sl, [r1], -ip
   1a080:	sub	sp, fp, #16
   1a084:	pop	{r4, r5, r6, r7, fp, pc}
   1a088:	add	r7, r6, #8
   1a08c:	ldm	r6, {r2, r3}
   1a090:	add	lr, r6, #20
   1a094:	ldm	r7, {r0, r1, r7}
   1a098:	ldm	lr, {r4, ip, lr}
   1a09c:	ldr	r6, [r6, #32]
   1a0a0:	stm	sp, {r0, r1, r7}
   1a0a4:	movw	r1, #56653	; 0xdd4d
   1a0a8:	add	r0, sp, #12
   1a0ac:	stm	r0, {r4, ip, lr}
   1a0b0:	str	r6, [sp, #24]
   1a0b4:	movt	r1, #1
   1a0b8:	mov	r0, r5
   1a0bc:	bl	11530 <fprintf@plt>
   1a0c0:	sub	sp, fp, #16
   1a0c4:	pop	{r4, r5, r6, r7, fp, pc}
   1a0c8:	ldr	r2, [r6]
   1a0cc:	movw	r1, #56334	; 0xdc0e
   1a0d0:	mov	r0, r5
   1a0d4:	movt	r1, #1
   1a0d8:	sub	sp, fp, #16
   1a0dc:	pop	{r4, r5, r6, r7, fp, lr}
   1a0e0:	b	11530 <fprintf@plt>
   1a0e4:	ldm	r6, {r2, r3}
   1a0e8:	movw	r1, #56350	; 0xdc1e
   1a0ec:	mov	r0, r5
   1a0f0:	movt	r1, #1
   1a0f4:	sub	sp, fp, #16
   1a0f8:	pop	{r4, r5, r6, r7, fp, lr}
   1a0fc:	b	11530 <fprintf@plt>
   1a100:	ldm	r6, {r2, r3}
   1a104:	ldr	r0, [r6, #8]
   1a108:	movw	r1, #56373	; 0xdc35
   1a10c:	movt	r1, #1
   1a110:	str	r0, [sp]
   1a114:	mov	r0, r5
   1a118:	bl	11530 <fprintf@plt>
   1a11c:	sub	sp, fp, #16
   1a120:	pop	{r4, r5, r6, r7, fp, pc}
   1a124:	ldm	r6, {r2, r3}
   1a128:	ldr	r0, [r6, #8]
   1a12c:	ldr	r1, [r6, #12]
   1a130:	stm	sp, {r0, r1}
   1a134:	movw	r1, #56401	; 0xdc51
   1a138:	movt	r1, #1
   1a13c:	mov	r0, r5
   1a140:	bl	11530 <fprintf@plt>
   1a144:	sub	sp, fp, #16
   1a148:	pop	{r4, r5, r6, r7, fp, pc}
   1a14c:	add	r7, r6, #8
   1a150:	ldm	r6, {r2, r3}
   1a154:	ldm	r7, {r0, r1, r7}
   1a158:	stm	sp, {r0, r1, r7}
   1a15c:	movw	r1, #56433	; 0xdc71
   1a160:	movt	r1, #1
   1a164:	mov	r0, r5
   1a168:	bl	11530 <fprintf@plt>
   1a16c:	sub	sp, fp, #16
   1a170:	pop	{r4, r5, r6, r7, fp, pc}
   1a174:	add	r7, r6, #8
   1a178:	ldm	r6, {r2, r3}
   1a17c:	ldm	r7, {r0, r1, r7}
   1a180:	ldr	r6, [r6, #20]
   1a184:	stm	sp, {r0, r1, r7}
   1a188:	movw	r1, #56469	; 0xdc95
   1a18c:	str	r6, [sp, #12]
   1a190:	movt	r1, #1
   1a194:	mov	r0, r5
   1a198:	bl	11530 <fprintf@plt>
   1a19c:	sub	sp, fp, #16
   1a1a0:	pop	{r4, r5, r6, r7, fp, pc}
   1a1a4:	add	r7, r6, #8
   1a1a8:	ldm	r6, {r2, r3}
   1a1ac:	ldm	r7, {r0, r1, r7}
   1a1b0:	ldr	r4, [r6, #20]
   1a1b4:	ldr	r6, [r6, #24]
   1a1b8:	stm	sp, {r0, r1, r7}
   1a1bc:	movw	r1, #56509	; 0xdcbd
   1a1c0:	str	r4, [sp, #12]
   1a1c4:	str	r6, [sp, #16]
   1a1c8:	movt	r1, #1
   1a1cc:	mov	r0, r5
   1a1d0:	bl	11530 <fprintf@plt>
   1a1d4:	sub	sp, fp, #16
   1a1d8:	pop	{r4, r5, r6, r7, fp, pc}
   1a1dc:	add	r7, r6, #8
   1a1e0:	ldm	r6, {r2, r3}
   1a1e4:	add	lr, r6, #20
   1a1e8:	ldm	r7, {r0, r1, r7}
   1a1ec:	ldm	lr, {r4, ip, lr}
   1a1f0:	ldr	r6, [r6, #32]
   1a1f4:	stm	sp, {r0, r1, r7}
   1a1f8:	movw	r1, #56601	; 0xdd19
   1a1fc:	add	r0, sp, #12
   1a200:	stm	r0, {r4, ip, lr}
   1a204:	str	r6, [sp, #24]
   1a208:	movt	r1, #1
   1a20c:	mov	r0, r5
   1a210:	bl	11530 <fprintf@plt>
   1a214:	sub	sp, fp, #16
   1a218:	pop	{r4, r5, r6, r7, fp, pc}
   1a21c:	add	r7, r6, #8
   1a220:	ldm	r6, {r2, r3}
   1a224:	ldm	r7, {r0, r1, r7}
   1a228:	ldr	r4, [r6, #20]
   1a22c:	ldr	ip, [r6, #24]
   1a230:	ldr	r6, [r6, #28]
   1a234:	stm	sp, {r0, r1, r7}
   1a238:	movw	r1, #56553	; 0xdce9
   1a23c:	str	r4, [sp, #12]
   1a240:	str	ip, [sp, #16]
   1a244:	str	r6, [sp, #20]
   1a248:	movt	r1, #1
   1a24c:	mov	r0, r5
   1a250:	bl	11530 <fprintf@plt>
   1a254:	sub	sp, fp, #16
   1a258:	pop	{r4, r5, r6, r7, fp, pc}
   1a25c:	push	{r4, sl, fp, lr}
   1a260:	add	fp, sp, #8
   1a264:	sub	sp, sp, #8
   1a268:	ldr	ip, [fp, #8]
   1a26c:	mov	lr, #0
   1a270:	ldr	r4, [ip, lr, lsl #2]
   1a274:	add	lr, lr, #1
   1a278:	cmp	r4, #0
   1a27c:	bne	1a270 <argp_parse@@Base+0x182c>
   1a280:	sub	r4, lr, #1
   1a284:	str	ip, [sp]
   1a288:	str	r4, [sp, #4]
   1a28c:	bl	19fa8 <argp_parse@@Base+0x1564>
   1a290:	sub	sp, fp, #8
   1a294:	pop	{r4, sl, fp, pc}
   1a298:	push	{fp, lr}
   1a29c:	mov	fp, sp
   1a2a0:	sub	sp, sp, #48	; 0x30
   1a2a4:	ldr	ip, [fp, #8]
   1a2a8:	ldr	lr, [ip]
   1a2ac:	cmp	lr, #0
   1a2b0:	str	lr, [sp, #8]
   1a2b4:	beq	1a350 <argp_parse@@Base+0x190c>
   1a2b8:	ldr	lr, [ip, #4]
   1a2bc:	cmp	lr, #0
   1a2c0:	str	lr, [sp, #12]
   1a2c4:	beq	1a358 <argp_parse@@Base+0x1914>
   1a2c8:	ldr	lr, [ip, #8]
   1a2cc:	cmp	lr, #0
   1a2d0:	str	lr, [sp, #16]
   1a2d4:	beq	1a360 <argp_parse@@Base+0x191c>
   1a2d8:	ldr	lr, [ip, #12]
   1a2dc:	cmp	lr, #0
   1a2e0:	str	lr, [sp, #20]
   1a2e4:	beq	1a368 <argp_parse@@Base+0x1924>
   1a2e8:	ldr	lr, [ip, #16]
   1a2ec:	cmp	lr, #0
   1a2f0:	str	lr, [sp, #24]
   1a2f4:	beq	1a370 <argp_parse@@Base+0x192c>
   1a2f8:	ldr	lr, [ip, #20]
   1a2fc:	cmp	lr, #0
   1a300:	str	lr, [sp, #28]
   1a304:	beq	1a378 <argp_parse@@Base+0x1934>
   1a308:	ldr	lr, [ip, #24]
   1a30c:	cmp	lr, #0
   1a310:	str	lr, [sp, #32]
   1a314:	beq	1a380 <argp_parse@@Base+0x193c>
   1a318:	ldr	lr, [ip, #28]
   1a31c:	cmp	lr, #0
   1a320:	str	lr, [sp, #36]	; 0x24
   1a324:	beq	1a388 <argp_parse@@Base+0x1944>
   1a328:	ldr	lr, [ip, #32]
   1a32c:	cmp	lr, #0
   1a330:	str	lr, [sp, #40]	; 0x28
   1a334:	beq	1a390 <argp_parse@@Base+0x194c>
   1a338:	ldr	lr, [ip, #36]	; 0x24
   1a33c:	mov	ip, #10
   1a340:	cmp	lr, #0
   1a344:	str	lr, [sp, #44]	; 0x2c
   1a348:	movweq	ip, #9
   1a34c:	b	1a394 <argp_parse@@Base+0x1950>
   1a350:	mov	ip, #0
   1a354:	b	1a394 <argp_parse@@Base+0x1950>
   1a358:	mov	ip, #1
   1a35c:	b	1a394 <argp_parse@@Base+0x1950>
   1a360:	mov	ip, #2
   1a364:	b	1a394 <argp_parse@@Base+0x1950>
   1a368:	mov	ip, #3
   1a36c:	b	1a394 <argp_parse@@Base+0x1950>
   1a370:	mov	ip, #4
   1a374:	b	1a394 <argp_parse@@Base+0x1950>
   1a378:	mov	ip, #5
   1a37c:	b	1a394 <argp_parse@@Base+0x1950>
   1a380:	mov	ip, #6
   1a384:	b	1a394 <argp_parse@@Base+0x1950>
   1a388:	mov	ip, #7
   1a38c:	b	1a394 <argp_parse@@Base+0x1950>
   1a390:	mov	ip, #8
   1a394:	add	lr, sp, #8
   1a398:	str	ip, [sp, #4]
   1a39c:	str	lr, [sp]
   1a3a0:	bl	19fa8 <argp_parse@@Base+0x1564>
   1a3a4:	mov	sp, fp
   1a3a8:	pop	{fp, pc}
   1a3ac:	push	{fp, lr}
   1a3b0:	mov	fp, sp
   1a3b4:	sub	sp, sp, #56	; 0x38
   1a3b8:	add	ip, fp, #8
   1a3bc:	str	ip, [sp, #12]
   1a3c0:	ldr	lr, [fp, #8]
   1a3c4:	cmp	lr, #0
   1a3c8:	str	lr, [sp, #16]
   1a3cc:	beq	1a468 <argp_parse@@Base+0x1a24>
   1a3d0:	ldr	lr, [ip, #4]
   1a3d4:	cmp	lr, #0
   1a3d8:	str	lr, [sp, #20]
   1a3dc:	beq	1a470 <argp_parse@@Base+0x1a2c>
   1a3e0:	ldr	lr, [ip, #8]
   1a3e4:	cmp	lr, #0
   1a3e8:	str	lr, [sp, #24]
   1a3ec:	beq	1a478 <argp_parse@@Base+0x1a34>
   1a3f0:	ldr	lr, [ip, #12]
   1a3f4:	cmp	lr, #0
   1a3f8:	str	lr, [sp, #28]
   1a3fc:	beq	1a480 <argp_parse@@Base+0x1a3c>
   1a400:	ldr	lr, [ip, #16]
   1a404:	cmp	lr, #0
   1a408:	str	lr, [sp, #32]
   1a40c:	beq	1a488 <argp_parse@@Base+0x1a44>
   1a410:	ldr	lr, [ip, #20]
   1a414:	cmp	lr, #0
   1a418:	str	lr, [sp, #36]	; 0x24
   1a41c:	beq	1a490 <argp_parse@@Base+0x1a4c>
   1a420:	ldr	lr, [ip, #24]
   1a424:	cmp	lr, #0
   1a428:	str	lr, [sp, #40]	; 0x28
   1a42c:	beq	1a498 <argp_parse@@Base+0x1a54>
   1a430:	ldr	lr, [ip, #28]
   1a434:	cmp	lr, #0
   1a438:	str	lr, [sp, #44]	; 0x2c
   1a43c:	beq	1a4a0 <argp_parse@@Base+0x1a5c>
   1a440:	ldr	lr, [ip, #32]
   1a444:	cmp	lr, #0
   1a448:	str	lr, [sp, #48]	; 0x30
   1a44c:	beq	1a4a8 <argp_parse@@Base+0x1a64>
   1a450:	ldr	lr, [ip, #36]	; 0x24
   1a454:	mov	ip, #10
   1a458:	cmp	lr, #0
   1a45c:	str	lr, [sp, #52]	; 0x34
   1a460:	movweq	ip, #9
   1a464:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a468:	mov	ip, #0
   1a46c:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a470:	mov	ip, #1
   1a474:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a478:	mov	ip, #2
   1a47c:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a480:	mov	ip, #3
   1a484:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a488:	mov	ip, #4
   1a48c:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a490:	mov	ip, #5
   1a494:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a498:	mov	ip, #6
   1a49c:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a4a0:	mov	ip, #7
   1a4a4:	b	1a4ac <argp_parse@@Base+0x1a68>
   1a4a8:	mov	ip, #8
   1a4ac:	add	lr, sp, #16
   1a4b0:	str	ip, [sp, #4]
   1a4b4:	str	lr, [sp]
   1a4b8:	bl	19fa8 <argp_parse@@Base+0x1564>
   1a4bc:	mov	sp, fp
   1a4c0:	pop	{fp, pc}
   1a4c4:	push	{fp, lr}
   1a4c8:	mov	fp, sp
   1a4cc:	movw	r0, #63036	; 0xf63c
   1a4d0:	movt	r0, #2
   1a4d4:	ldr	r1, [r0]
   1a4d8:	mov	r0, #10
   1a4dc:	bl	115e4 <fputc@plt>
   1a4e0:	movw	r0, #56713	; 0xdd89
   1a4e4:	movw	r1, #56733	; 0xdd9d
   1a4e8:	movt	r0, #1
   1a4ec:	movt	r1, #1
   1a4f0:	bl	11368 <printf@plt>
   1a4f4:	movw	r0, #56755	; 0xddb3
   1a4f8:	movw	r1, #56011	; 0xdacb
   1a4fc:	movw	r2, #56775	; 0xddc7
   1a500:	movt	r0, #1
   1a504:	movt	r1, #1
   1a508:	movt	r2, #1
   1a50c:	bl	11368 <printf@plt>
   1a510:	movw	r0, #56814	; 0xddee
   1a514:	movw	r1, #56853	; 0xde15
   1a518:	movt	r0, #1
   1a51c:	movt	r1, #1
   1a520:	pop	{fp, lr}
   1a524:	b	11368 <printf@plt>
   1a528:	push	{r4, r5, r6, sl, fp, lr}
   1a52c:	add	fp, sp, #16
   1a530:	mov	r4, r2
   1a534:	mov	r5, r1
   1a538:	mov	r6, r0
   1a53c:	bl	1c65c <argp_parse@@Base+0x3c18>
   1a540:	cmp	r0, #0
   1a544:	popne	{r4, r5, r6, sl, fp, pc}
   1a548:	cmp	r6, #0
   1a54c:	beq	1a560 <argp_parse@@Base+0x1b1c>
   1a550:	cmp	r5, #0
   1a554:	cmpne	r4, #0
   1a558:	bne	1a560 <argp_parse@@Base+0x1b1c>
   1a55c:	pop	{r4, r5, r6, sl, fp, pc}
   1a560:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a564:	push	{r4, r5, r6, sl, fp, lr}
   1a568:	add	fp, sp, #16
   1a56c:	mov	r4, r2
   1a570:	mov	r5, r1
   1a574:	mov	r6, r0
   1a578:	bl	1c65c <argp_parse@@Base+0x3c18>
   1a57c:	cmp	r0, #0
   1a580:	popne	{r4, r5, r6, sl, fp, pc}
   1a584:	cmp	r6, #0
   1a588:	beq	1a59c <argp_parse@@Base+0x1b58>
   1a58c:	cmp	r5, #0
   1a590:	cmpne	r4, #0
   1a594:	bne	1a59c <argp_parse@@Base+0x1b58>
   1a598:	pop	{r4, r5, r6, sl, fp, pc}
   1a59c:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a5a0:	push	{fp, lr}
   1a5a4:	mov	fp, sp
   1a5a8:	bl	1ab84 <argp_parse@@Base+0x2140>
   1a5ac:	cmp	r0, #0
   1a5b0:	popne	{fp, pc}
   1a5b4:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a5b8:	push	{fp, lr}
   1a5bc:	mov	fp, sp
   1a5c0:	bl	1ab84 <argp_parse@@Base+0x2140>
   1a5c4:	cmp	r0, #0
   1a5c8:	popne	{fp, pc}
   1a5cc:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a5d0:	push	{fp, lr}
   1a5d4:	mov	fp, sp
   1a5d8:	bl	1ab84 <argp_parse@@Base+0x2140>
   1a5dc:	cmp	r0, #0
   1a5e0:	popne	{fp, pc}
   1a5e4:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a5e8:	push	{r4, r5, fp, lr}
   1a5ec:	add	fp, sp, #8
   1a5f0:	mov	r4, r1
   1a5f4:	mov	r5, r0
   1a5f8:	bl	1abb4 <argp_parse@@Base+0x2170>
   1a5fc:	cmp	r0, #0
   1a600:	popne	{r4, r5, fp, pc}
   1a604:	cmp	r5, #0
   1a608:	beq	1a618 <argp_parse@@Base+0x1bd4>
   1a60c:	cmp	r4, #0
   1a610:	bne	1a618 <argp_parse@@Base+0x1bd4>
   1a614:	pop	{r4, r5, fp, pc}
   1a618:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a61c:	push	{fp, lr}
   1a620:	mov	fp, sp
   1a624:	cmp	r1, #0
   1a628:	orreq	r1, r1, #1
   1a62c:	bl	1abb4 <argp_parse@@Base+0x2170>
   1a630:	cmp	r0, #0
   1a634:	popne	{fp, pc}
   1a638:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a63c:	push	{fp, lr}
   1a640:	mov	fp, sp
   1a644:	clz	r3, r2
   1a648:	lsr	ip, r3, #5
   1a64c:	clz	r3, r1
   1a650:	lsr	r3, r3, #5
   1a654:	orrs	r3, r3, ip
   1a658:	movwne	r1, #1
   1a65c:	movwne	r2, #1
   1a660:	bl	1c65c <argp_parse@@Base+0x3c18>
   1a664:	cmp	r0, #0
   1a668:	popne	{fp, pc}
   1a66c:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a670:	push	{fp, lr}
   1a674:	mov	fp, sp
   1a678:	mov	r2, r1
   1a67c:	mov	r1, r0
   1a680:	mov	r0, #0
   1a684:	bl	1c65c <argp_parse@@Base+0x3c18>
   1a688:	cmp	r0, #0
   1a68c:	popne	{fp, pc}
   1a690:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a694:	push	{fp, lr}
   1a698:	mov	fp, sp
   1a69c:	mov	r2, r1
   1a6a0:	mov	r1, r0
   1a6a4:	clz	r0, r2
   1a6a8:	clz	r3, r1
   1a6ac:	lsr	r0, r0, #5
   1a6b0:	lsr	r3, r3, #5
   1a6b4:	orrs	r0, r3, r0
   1a6b8:	movwne	r1, #1
   1a6bc:	movwne	r2, #1
   1a6c0:	mov	r0, #0
   1a6c4:	bl	1c65c <argp_parse@@Base+0x3c18>
   1a6c8:	cmp	r0, #0
   1a6cc:	popne	{fp, pc}
   1a6d0:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a6d4:	push	{r4, r5, r6, sl, fp, lr}
   1a6d8:	add	fp, sp, #16
   1a6dc:	ldr	r5, [r1]
   1a6e0:	mov	r4, r1
   1a6e4:	mov	r6, r0
   1a6e8:	cmp	r0, #0
   1a6ec:	beq	1a704 <argp_parse@@Base+0x1cc0>
   1a6f0:	mov	r0, #1
   1a6f4:	add	r0, r0, r5, lsr #1
   1a6f8:	adds	r5, r5, r0
   1a6fc:	bcc	1a70c <argp_parse@@Base+0x1cc8>
   1a700:	b	1a748 <argp_parse@@Base+0x1d04>
   1a704:	cmp	r5, #0
   1a708:	movweq	r5, #64	; 0x40
   1a70c:	mov	r0, r6
   1a710:	mov	r1, r5
   1a714:	mov	r2, #1
   1a718:	bl	1c65c <argp_parse@@Base+0x3c18>
   1a71c:	cmp	r5, #0
   1a720:	mov	r1, r5
   1a724:	movwne	r1, #1
   1a728:	cmp	r0, #0
   1a72c:	bne	1a740 <argp_parse@@Base+0x1cfc>
   1a730:	clz	r2, r6
   1a734:	lsr	r2, r2, #5
   1a738:	orrs	r1, r2, r1
   1a73c:	bne	1a748 <argp_parse@@Base+0x1d04>
   1a740:	str	r5, [r4]
   1a744:	pop	{r4, r5, r6, sl, fp, pc}
   1a748:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a74c:	push	{r4, r5, r6, r7, fp, lr}
   1a750:	add	fp, sp, #16
   1a754:	ldr	r5, [r1]
   1a758:	mov	r6, r2
   1a75c:	mov	r4, r1
   1a760:	mov	r7, r0
   1a764:	cmp	r0, #0
   1a768:	beq	1a780 <argp_parse@@Base+0x1d3c>
   1a76c:	mov	r0, #1
   1a770:	add	r0, r0, r5, lsr #1
   1a774:	adds	r5, r5, r0
   1a778:	bcc	1a798 <argp_parse@@Base+0x1d54>
   1a77c:	b	1a7cc <argp_parse@@Base+0x1d88>
   1a780:	cmp	r5, #0
   1a784:	bne	1a798 <argp_parse@@Base+0x1d54>
   1a788:	mov	r0, #64	; 0x40
   1a78c:	cmp	r6, #64	; 0x40
   1a790:	udiv	r5, r0, r6
   1a794:	addhi	r5, r5, #1
   1a798:	mov	r0, r7
   1a79c:	mov	r1, r5
   1a7a0:	mov	r2, r6
   1a7a4:	bl	1c65c <argp_parse@@Base+0x3c18>
   1a7a8:	cmp	r0, #0
   1a7ac:	bne	1a7c4 <argp_parse@@Base+0x1d80>
   1a7b0:	cmp	r7, #0
   1a7b4:	beq	1a7cc <argp_parse@@Base+0x1d88>
   1a7b8:	cmp	r6, #0
   1a7bc:	cmpne	r5, #0
   1a7c0:	bne	1a7cc <argp_parse@@Base+0x1d88>
   1a7c4:	str	r5, [r4]
   1a7c8:	pop	{r4, r5, r6, r7, fp, pc}
   1a7cc:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a7d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a7d4:	add	fp, sp, #24
   1a7d8:	mov	r8, r1
   1a7dc:	ldr	r1, [r1]
   1a7e0:	mov	r5, r0
   1a7e4:	add	r0, r1, r1, asr #1
   1a7e8:	cmp	r0, r1
   1a7ec:	mvnvs	r0, #-2147483648	; 0x80000000
   1a7f0:	cmp	r0, r3
   1a7f4:	mov	r7, r0
   1a7f8:	movgt	r7, r3
   1a7fc:	cmn	r3, #1
   1a800:	movle	r7, r0
   1a804:	ldr	r0, [fp, #8]
   1a808:	cmn	r0, #1
   1a80c:	ble	1a834 <argp_parse@@Base+0x1df0>
   1a810:	cmp	r0, #0
   1a814:	beq	1a888 <argp_parse@@Base+0x1e44>
   1a818:	cmn	r7, #1
   1a81c:	ble	1a85c <argp_parse@@Base+0x1e18>
   1a820:	mvn	r4, #-2147483648	; 0x80000000
   1a824:	udiv	r6, r4, r0
   1a828:	cmp	r6, r7
   1a82c:	bge	1a888 <argp_parse@@Base+0x1e44>
   1a830:	b	1a898 <argp_parse@@Base+0x1e54>
   1a834:	cmn	r7, #1
   1a838:	ble	1a878 <argp_parse@@Base+0x1e34>
   1a83c:	cmn	r0, #1
   1a840:	beq	1a888 <argp_parse@@Base+0x1e44>
   1a844:	mov	r6, #-2147483648	; 0x80000000
   1a848:	mvn	r4, #-2147483648	; 0x80000000
   1a84c:	sdiv	r6, r6, r0
   1a850:	cmp	r6, r7
   1a854:	bge	1a888 <argp_parse@@Base+0x1e44>
   1a858:	b	1a898 <argp_parse@@Base+0x1e54>
   1a85c:	beq	1a888 <argp_parse@@Base+0x1e44>
   1a860:	mov	r6, #-2147483648	; 0x80000000
   1a864:	mvn	r4, #-2147483648	; 0x80000000
   1a868:	sdiv	r6, r6, r7
   1a86c:	cmp	r6, r0
   1a870:	bge	1a888 <argp_parse@@Base+0x1e44>
   1a874:	b	1a898 <argp_parse@@Base+0x1e54>
   1a878:	mvn	r4, #-2147483648	; 0x80000000
   1a87c:	sdiv	r6, r4, r0
   1a880:	cmp	r7, r6
   1a884:	blt	1a898 <argp_parse@@Base+0x1e54>
   1a888:	mul	r6, r7, r0
   1a88c:	mov	r4, #64	; 0x40
   1a890:	cmp	r6, #63	; 0x3f
   1a894:	bgt	1a8a0 <argp_parse@@Base+0x1e5c>
   1a898:	sdiv	r7, r4, r0
   1a89c:	mul	r6, r7, r0
   1a8a0:	cmp	r5, #0
   1a8a4:	moveq	r4, #0
   1a8a8:	streq	r4, [r8]
   1a8ac:	sub	r4, r7, r1
   1a8b0:	cmp	r4, r2
   1a8b4:	bge	1a960 <argp_parse@@Base+0x1f1c>
   1a8b8:	add	r7, r1, r2
   1a8bc:	mov	r6, #0
   1a8c0:	mov	r2, #0
   1a8c4:	cmp	r7, r3
   1a8c8:	movwgt	r6, #1
   1a8cc:	cmn	r3, #1
   1a8d0:	movwgt	r2, #1
   1a8d4:	cmp	r7, r1
   1a8d8:	bvs	1a994 <argp_parse@@Base+0x1f50>
   1a8dc:	ands	r1, r2, r6
   1a8e0:	bne	1a994 <argp_parse@@Base+0x1f50>
   1a8e4:	cmn	r0, #1
   1a8e8:	ble	1a910 <argp_parse@@Base+0x1ecc>
   1a8ec:	cmp	r0, #0
   1a8f0:	beq	1a95c <argp_parse@@Base+0x1f18>
   1a8f4:	cmn	r7, #1
   1a8f8:	ble	1a934 <argp_parse@@Base+0x1ef0>
   1a8fc:	mvn	r1, #-2147483648	; 0x80000000
   1a900:	udiv	r1, r1, r0
   1a904:	cmp	r1, r7
   1a908:	bge	1a95c <argp_parse@@Base+0x1f18>
   1a90c:	b	1a994 <argp_parse@@Base+0x1f50>
   1a910:	cmn	r7, #1
   1a914:	ble	1a94c <argp_parse@@Base+0x1f08>
   1a918:	cmn	r0, #1
   1a91c:	beq	1a95c <argp_parse@@Base+0x1f18>
   1a920:	mov	r1, #-2147483648	; 0x80000000
   1a924:	sdiv	r1, r1, r0
   1a928:	cmp	r1, r7
   1a92c:	bge	1a95c <argp_parse@@Base+0x1f18>
   1a930:	b	1a994 <argp_parse@@Base+0x1f50>
   1a934:	beq	1a95c <argp_parse@@Base+0x1f18>
   1a938:	mov	r1, #-2147483648	; 0x80000000
   1a93c:	sdiv	r1, r1, r7
   1a940:	cmp	r1, r0
   1a944:	bge	1a95c <argp_parse@@Base+0x1f18>
   1a948:	b	1a994 <argp_parse@@Base+0x1f50>
   1a94c:	mvn	r1, #-2147483648	; 0x80000000
   1a950:	sdiv	r1, r1, r0
   1a954:	cmp	r7, r1
   1a958:	blt	1a994 <argp_parse@@Base+0x1f50>
   1a95c:	mul	r6, r7, r0
   1a960:	mov	r0, r5
   1a964:	mov	r1, r6
   1a968:	bl	1abb4 <argp_parse@@Base+0x2170>
   1a96c:	cmp	r6, #0
   1a970:	movwne	r6, #1
   1a974:	cmp	r0, #0
   1a978:	bne	1a98c <argp_parse@@Base+0x1f48>
   1a97c:	clz	r1, r5
   1a980:	lsr	r1, r1, #5
   1a984:	orrs	r1, r1, r6
   1a988:	bne	1a994 <argp_parse@@Base+0x1f50>
   1a98c:	str	r7, [r8]
   1a990:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a994:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a998:	push	{fp, lr}
   1a99c:	mov	fp, sp
   1a9a0:	mov	r1, #1
   1a9a4:	bl	1ab30 <argp_parse@@Base+0x20ec>
   1a9a8:	cmp	r0, #0
   1a9ac:	popne	{fp, pc}
   1a9b0:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a9b4:	push	{fp, lr}
   1a9b8:	mov	fp, sp
   1a9bc:	bl	1ab30 <argp_parse@@Base+0x20ec>
   1a9c0:	cmp	r0, #0
   1a9c4:	popne	{fp, pc}
   1a9c8:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a9cc:	push	{fp, lr}
   1a9d0:	mov	fp, sp
   1a9d4:	mov	r1, #1
   1a9d8:	bl	1ab30 <argp_parse@@Base+0x20ec>
   1a9dc:	cmp	r0, #0
   1a9e0:	popne	{fp, pc}
   1a9e4:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1a9e8:	push	{fp, lr}
   1a9ec:	mov	fp, sp
   1a9f0:	bl	1ab30 <argp_parse@@Base+0x20ec>
   1a9f4:	cmp	r0, #0
   1a9f8:	popne	{fp, pc}
   1a9fc:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1aa00:	push	{r4, r5, r6, sl, fp, lr}
   1aa04:	add	fp, sp, #16
   1aa08:	mov	r5, r0
   1aa0c:	mov	r0, r1
   1aa10:	mov	r4, r1
   1aa14:	bl	1ab84 <argp_parse@@Base+0x2140>
   1aa18:	cmp	r0, #0
   1aa1c:	beq	1aa38 <argp_parse@@Base+0x1ff4>
   1aa20:	mov	r1, r5
   1aa24:	mov	r2, r4
   1aa28:	mov	r6, r0
   1aa2c:	bl	113d4 <memcpy@plt>
   1aa30:	mov	r0, r6
   1aa34:	pop	{r4, r5, r6, sl, fp, pc}
   1aa38:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1aa3c:	push	{r4, r5, r6, sl, fp, lr}
   1aa40:	add	fp, sp, #16
   1aa44:	mov	r5, r0
   1aa48:	mov	r0, r1
   1aa4c:	mov	r4, r1
   1aa50:	bl	1ab84 <argp_parse@@Base+0x2140>
   1aa54:	cmp	r0, #0
   1aa58:	beq	1aa74 <argp_parse@@Base+0x2030>
   1aa5c:	mov	r1, r5
   1aa60:	mov	r2, r4
   1aa64:	mov	r6, r0
   1aa68:	bl	113d4 <memcpy@plt>
   1aa6c:	mov	r0, r6
   1aa70:	pop	{r4, r5, r6, sl, fp, pc}
   1aa74:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1aa78:	push	{r4, r5, r6, sl, fp, lr}
   1aa7c:	add	fp, sp, #16
   1aa80:	mov	r5, r0
   1aa84:	add	r0, r1, #1
   1aa88:	mov	r4, r1
   1aa8c:	bl	1ab84 <argp_parse@@Base+0x2140>
   1aa90:	cmp	r0, #0
   1aa94:	beq	1aabc <argp_parse@@Base+0x2078>
   1aa98:	mov	r6, r0
   1aa9c:	mov	r0, #0
   1aaa0:	mov	r1, r5
   1aaa4:	mov	r2, r4
   1aaa8:	strb	r0, [r6, r4]
   1aaac:	mov	r0, r6
   1aab0:	bl	113d4 <memcpy@plt>
   1aab4:	mov	r0, r6
   1aab8:	pop	{r4, r5, r6, sl, fp, pc}
   1aabc:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1aac0:	push	{r4, r5, r6, sl, fp, lr}
   1aac4:	add	fp, sp, #16
   1aac8:	mov	r4, r0
   1aacc:	bl	11518 <strlen@plt>
   1aad0:	add	r5, r0, #1
   1aad4:	mov	r0, r5
   1aad8:	bl	1ab84 <argp_parse@@Base+0x2140>
   1aadc:	cmp	r0, #0
   1aae0:	beq	1aafc <argp_parse@@Base+0x20b8>
   1aae4:	mov	r1, r4
   1aae8:	mov	r2, r5
   1aaec:	mov	r6, r0
   1aaf0:	bl	113d4 <memcpy@plt>
   1aaf4:	mov	r0, r6
   1aaf8:	pop	{r4, r5, r6, sl, fp, pc}
   1aafc:	bl	1ab00 <argp_parse@@Base+0x20bc>
   1ab00:	push	{fp, lr}
   1ab04:	mov	fp, sp
   1ab08:	movw	r0, #63004	; 0xf61c
   1ab0c:	movw	r2, #53919	; 0xd29f
   1ab10:	movw	r3, #56929	; 0xde61
   1ab14:	mov	r1, #0
   1ab18:	movt	r0, #2
   1ab1c:	movt	r2, #1
   1ab20:	movt	r3, #1
   1ab24:	ldr	r0, [r0]
   1ab28:	bl	11488 <error@plt>
   1ab2c:	bl	11668 <abort@plt>
   1ab30:	clz	r2, r1
   1ab34:	clz	r3, r0
   1ab38:	lsr	r2, r2, #5
   1ab3c:	lsr	r3, r3, #5
   1ab40:	orrs	r2, r3, r2
   1ab44:	movwne	r1, #1
   1ab48:	movwne	r0, #1
   1ab4c:	cmp	r1, #0
   1ab50:	beq	1ab80 <argp_parse@@Base+0x213c>
   1ab54:	mvn	r2, #-2147483648	; 0x80000000
   1ab58:	udiv	r2, r2, r1
   1ab5c:	cmp	r2, r0
   1ab60:	bcs	1ab80 <argp_parse@@Base+0x213c>
   1ab64:	push	{fp, lr}
   1ab68:	mov	fp, sp
   1ab6c:	bl	1153c <__errno_location@plt>
   1ab70:	mov	r1, #12
   1ab74:	str	r1, [r0]
   1ab78:	mov	r0, #0
   1ab7c:	pop	{fp, pc}
   1ab80:	b	1132c <calloc@plt>
   1ab84:	cmp	r0, #0
   1ab88:	movweq	r0, #1
   1ab8c:	cmn	r0, #1
   1ab90:	ble	1ab98 <argp_parse@@Base+0x2154>
   1ab94:	b	114ac <malloc@plt>
   1ab98:	push	{fp, lr}
   1ab9c:	mov	fp, sp
   1aba0:	bl	1153c <__errno_location@plt>
   1aba4:	mov	r1, #12
   1aba8:	str	r1, [r0]
   1abac:	mov	r0, #0
   1abb0:	pop	{fp, pc}
   1abb4:	push	{fp, lr}
   1abb8:	mov	fp, sp
   1abbc:	cmp	r0, #0
   1abc0:	beq	1abdc <argp_parse@@Base+0x2198>
   1abc4:	cmp	r1, #0
   1abc8:	beq	1abe8 <argp_parse@@Base+0x21a4>
   1abcc:	cmn	r1, #1
   1abd0:	ble	1abf4 <argp_parse@@Base+0x21b0>
   1abd4:	pop	{fp, lr}
   1abd8:	b	1144c <realloc@plt>
   1abdc:	mov	r0, r1
   1abe0:	pop	{fp, lr}
   1abe4:	b	1ab84 <argp_parse@@Base+0x2140>
   1abe8:	bl	19df4 <argp_parse@@Base+0x13b0>
   1abec:	mov	r0, #0
   1abf0:	pop	{fp, pc}
   1abf4:	bl	1153c <__errno_location@plt>
   1abf8:	mov	r1, #12
   1abfc:	str	r1, [r0]
   1ac00:	mov	r0, #0
   1ac04:	pop	{fp, pc}
   1ac08:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ac0c:	add	fp, sp, #24
   1ac10:	mov	r5, r0
   1ac14:	mov	r0, #36	; 0x24
   1ac18:	mov	r8, r3
   1ac1c:	mov	r6, r2
   1ac20:	mov	r7, r1
   1ac24:	bl	1ab84 <argp_parse@@Base+0x2140>
   1ac28:	mov	r4, r0
   1ac2c:	cmp	r0, #0
   1ac30:	beq	1ac6c <argp_parse@@Base+0x2228>
   1ac34:	mov	r0, #0
   1ac38:	stm	r4, {r5, r7}
   1ac3c:	str	r6, [r4, #8]
   1ac40:	str	r8, [r4, #12]
   1ac44:	str	r0, [r4, #16]
   1ac48:	str	r0, [r4, #20]
   1ac4c:	mov	r0, #200	; 0xc8
   1ac50:	bl	1ab84 <argp_parse@@Base+0x2140>
   1ac54:	cmp	r0, #0
   1ac58:	str	r0, [r4, #24]
   1ac5c:	beq	1ac74 <argp_parse@@Base+0x2230>
   1ac60:	add	r1, r0, #200	; 0xc8
   1ac64:	str	r0, [r4, #28]
   1ac68:	str	r1, [r4, #32]
   1ac6c:	mov	r0, r4
   1ac70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ac74:	mov	r0, r4
   1ac78:	bl	19df4 <argp_parse@@Base+0x13b0>
   1ac7c:	mov	r4, #0
   1ac80:	mov	r0, r4
   1ac84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ac88:	push	{r4, sl, fp, lr}
   1ac8c:	add	fp, sp, #8
   1ac90:	mov	r4, r0
   1ac94:	bl	1accc <argp_parse@@Base+0x2288>
   1ac98:	ldr	r0, [r4, #24]
   1ac9c:	ldr	r1, [r4, #28]
   1aca0:	cmp	r1, r0
   1aca4:	bls	1acbc <argp_parse@@Base+0x2278>
   1aca8:	ldr	r3, [r4]
   1acac:	sub	r2, r1, r0
   1acb0:	mov	r1, #1
   1acb4:	bl	113ec <fwrite_unlocked@plt>
   1acb8:	ldr	r0, [r4, #24]
   1acbc:	bl	19df4 <argp_parse@@Base+0x13b0>
   1acc0:	mov	r0, r4
   1acc4:	pop	{r4, sl, fp, lr}
   1acc8:	b	19df4 <argp_parse@@Base+0x13b0>
   1accc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1acd0:	add	fp, sp, #28
   1acd4:	sub	sp, sp, #12
   1acd8:	mov	r8, r0
   1acdc:	ldr	r0, [r0, #16]
   1ace0:	ldr	r1, [r8, #24]
   1ace4:	ldr	ip, [r8, #28]
   1ace8:	add	sl, r1, r0
   1acec:	cmp	sl, ip
   1acf0:	bcs	1b260 <argp_parse@@Base+0x281c>
   1acf4:	ldr	r6, [r8, #20]
   1acf8:	mov	r3, #32
   1acfc:	cmp	r6, #0
   1ad00:	beq	1ad0c <argp_parse@@Base+0x22c8>
   1ad04:	mov	r9, sl
   1ad08:	b	1adac <argp_parse@@Base+0x2368>
   1ad0c:	ldr	r6, [r8, #4]
   1ad10:	cmp	r6, #0
   1ad14:	beq	1afb0 <argp_parse@@Base+0x256c>
   1ad18:	ldr	r1, [r8, #32]
   1ad1c:	add	r0, ip, r6
   1ad20:	mov	r5, r6
   1ad24:	cmp	r0, r1
   1ad28:	bcs	1ad60 <argp_parse@@Base+0x231c>
   1ad2c:	add	r9, sl, r6
   1ad30:	sub	r2, ip, sl
   1ad34:	mov	r1, sl
   1ad38:	mov	r0, r9
   1ad3c:	bl	11398 <memmove@plt>
   1ad40:	ldr	r0, [r8, #28]
   1ad44:	mov	r1, #32
   1ad48:	mov	r2, r6
   1ad4c:	add	r0, r0, r6
   1ad50:	str	r0, [r8, #28]
   1ad54:	mov	r0, sl
   1ad58:	bl	1156c <memset@plt>
   1ad5c:	b	1ada4 <argp_parse@@Base+0x2360>
   1ad60:	ldr	r0, [r8]
   1ad64:	ldr	r1, [r0, #20]
   1ad68:	ldr	r2, [r0, #24]
   1ad6c:	cmp	r1, r2
   1ad70:	bcs	1ad8c <argp_parse@@Base+0x2348>
   1ad74:	add	r2, r1, #1
   1ad78:	str	r2, [r0, #20]
   1ad7c:	strb	r3, [r1]
   1ad80:	subs	r5, r5, #1
   1ad84:	bne	1ad60 <argp_parse@@Base+0x231c>
   1ad88:	b	1ada0 <argp_parse@@Base+0x235c>
   1ad8c:	mov	r1, #32
   1ad90:	bl	115a8 <__overflow@plt>
   1ad94:	mov	r3, #32
   1ad98:	subs	r5, r5, #1
   1ad9c:	bne	1ad60 <argp_parse@@Base+0x231c>
   1ada0:	mov	r9, sl
   1ada4:	str	r6, [r8, #20]
   1ada8:	ldr	ip, [r8, #28]
   1adac:	sub	r4, ip, r9
   1adb0:	mov	r0, r9
   1adb4:	mov	r1, #10
   1adb8:	str	ip, [sp, #8]
   1adbc:	mov	r2, r4
   1adc0:	bl	11590 <memchr@plt>
   1adc4:	cmn	r6, #1
   1adc8:	mov	r7, r0
   1adcc:	movle	r6, #0
   1add0:	strle	r6, [r8, #20]
   1add4:	cmp	r7, #0
   1add8:	beq	1ae10 <argp_parse@@Base+0x23cc>
   1addc:	ldr	r5, [r8, #8]
   1ade0:	ldr	ip, [sp, #8]
   1ade4:	sub	r0, r7, r9
   1ade8:	mov	r3, #32
   1adec:	add	r0, r0, r6
   1adf0:	cmp	r0, r5
   1adf4:	bge	1ae2c <argp_parse@@Base+0x23e8>
   1adf8:	mov	r6, #0
   1adfc:	add	sl, r7, #1
   1ae00:	str	r6, [r8, #20]
   1ae04:	cmp	sl, ip
   1ae08:	bcc	1acfc <argp_parse@@Base+0x22b8>
   1ae0c:	b	1b260 <argp_parse@@Base+0x281c>
   1ae10:	ldr	ip, [sp, #8]
   1ae14:	ldr	r5, [r8, #8]
   1ae18:	add	r0, r6, r4
   1ae1c:	mov	r3, #32
   1ae20:	cmp	r0, r5
   1ae24:	mov	r7, ip
   1ae28:	bcc	1b240 <argp_parse@@Base+0x27fc>
   1ae2c:	ldr	r0, [r8, #12]
   1ae30:	str	r4, [sp, #4]
   1ae34:	cmn	r0, #1
   1ae38:	ble	1ae98 <argp_parse@@Base+0x2454>
   1ae3c:	sub	sl, r5, r6
   1ae40:	mov	r4, r0
   1ae44:	mov	r1, #0
   1ae48:	add	r6, r9, sl
   1ae4c:	cmp	sl, #0
   1ae50:	blt	1aef0 <argp_parse@@Base+0x24ac>
   1ae54:	bl	114e8 <__ctype_b_loc@plt>
   1ae58:	ldr	r1, [r0]
   1ae5c:	mov	r0, r6
   1ae60:	ldrb	r2, [r0]
   1ae64:	ldrb	r2, [r1, r2, lsl #1]
   1ae68:	tst	r2, #1
   1ae6c:	bne	1afb8 <argp_parse@@Base+0x2574>
   1ae70:	sub	r0, r0, #1
   1ae74:	cmp	r0, r9
   1ae78:	bcs	1ae60 <argp_parse@@Base+0x241c>
   1ae7c:	ldr	ip, [sp, #8]
   1ae80:	mov	r3, #32
   1ae84:	mov	r1, #0
   1ae88:	add	r5, r0, #1
   1ae8c:	cmp	r5, r9
   1ae90:	bhi	1af00 <argp_parse@@Base+0x24bc>
   1ae94:	b	1afd0 <argp_parse@@Base+0x258c>
   1ae98:	sub	sl, r5, #1
   1ae9c:	cmp	r7, ip
   1aea0:	bcs	1b248 <argp_parse@@Base+0x2804>
   1aea4:	sub	r0, sl, r6
   1aea8:	sub	r2, ip, r7
   1aeac:	mov	r1, r7
   1aeb0:	add	r0, r9, r0
   1aeb4:	bl	11398 <memmove@plt>
   1aeb8:	ldr	r0, [r8, #20]
   1aebc:	ldr	r1, [r8, #28]
   1aec0:	mov	r6, #0
   1aec4:	mov	r3, #32
   1aec8:	str	r6, [r8, #20]
   1aecc:	sub	r0, sl, r0
   1aed0:	add	sl, r9, r5
   1aed4:	add	r0, r9, r0
   1aed8:	sub	r0, r7, r0
   1aedc:	add	ip, r1, r0
   1aee0:	str	ip, [r8, #28]
   1aee4:	cmp	sl, ip
   1aee8:	bcc	1acfc <argp_parse@@Base+0x22b8>
   1aeec:	b	1b260 <argp_parse@@Base+0x281c>
   1aef0:	mov	r0, r6
   1aef4:	add	r5, r0, #1
   1aef8:	cmp	r5, r9
   1aefc:	bls	1afd0 <argp_parse@@Base+0x258c>
   1af00:	cmp	r1, #0
   1af04:	beq	1b0dc <argp_parse@@Base+0x2698>
   1af08:	sub	r1, r0, #1
   1af0c:	mov	r7, r4
   1af10:	mov	r6, r1
   1af14:	cmp	r1, r9
   1af18:	bcc	1af38 <argp_parse@@Base+0x24f4>
   1af1c:	bl	114e8 <__ctype_b_loc@plt>
   1af20:	mov	r1, r6
   1af24:	ldr	r0, [r0]
   1af28:	ldrb	r2, [r1], #-1
   1af2c:	ldrb	r0, [r0, r2, lsl #1]
   1af30:	tst	r0, #1
   1af34:	bne	1af10 <argp_parse@@Base+0x24cc>
   1af38:	ldr	ip, [sp, #8]
   1af3c:	add	r6, r6, #1
   1af40:	mov	r3, #32
   1af44:	add	r0, ip, #1
   1af48:	cmp	r5, r0
   1af4c:	bne	1b044 <argp_parse@@Base+0x2600>
   1af50:	cmp	ip, r5
   1af54:	bls	1b114 <argp_parse@@Base+0x26d0>
   1af58:	ldr	r0, [r8, #32]
   1af5c:	sub	r1, r0, r6
   1af60:	cmp	r1, r7
   1af64:	bgt	1b114 <argp_parse@@Base+0x26d0>
   1af68:	sub	r0, r0, ip
   1af6c:	add	r1, r7, #1
   1af70:	cmp	r0, r1
   1af74:	ble	1b070 <argp_parse@@Base+0x262c>
   1af78:	sub	r4, ip, r5
   1af7c:	add	sl, r6, #1
   1af80:	mov	r1, r5
   1af84:	add	r0, sl, r7
   1af88:	mov	r2, r4
   1af8c:	bl	11398 <memmove@plt>
   1af90:	ldr	r0, [r8, #12]
   1af94:	mov	r1, #10
   1af98:	mov	r3, #32
   1af9c:	strb	r1, [r6]
   1afa0:	add	r5, sl, r0
   1afa4:	add	r0, r5, r4
   1afa8:	sub	r0, r0, r9
   1afac:	b	1b0c4 <argp_parse@@Base+0x2680>
   1afb0:	mov	r6, #0
   1afb4:	b	1ad04 <argp_parse@@Base+0x22c0>
   1afb8:	ldr	ip, [sp, #8]
   1afbc:	mov	r1, #1
   1afc0:	mov	r3, #32
   1afc4:	add	r5, r0, #1
   1afc8:	cmp	r5, r9
   1afcc:	bhi	1af00 <argp_parse@@Base+0x24bc>
   1afd0:	cmp	r6, r7
   1afd4:	bcs	1b008 <argp_parse@@Base+0x25c4>
   1afd8:	add	r0, r9, sl
   1afdc:	add	r1, r0, #1
   1afe0:	mov	r6, r1
   1afe4:	cmp	r1, r7
   1afe8:	bcs	1b008 <argp_parse@@Base+0x25c4>
   1afec:	bl	114e8 <__ctype_b_loc@plt>
   1aff0:	mov	r1, r6
   1aff4:	ldr	r0, [r0]
   1aff8:	ldrb	r2, [r1], #1
   1affc:	ldrb	r0, [r0, r2, lsl #1]
   1b000:	tst	r0, #1
   1b004:	beq	1afe0 <argp_parse@@Base+0x259c>
   1b008:	cmp	r6, r7
   1b00c:	beq	1b0f4 <argp_parse@@Base+0x26b0>
   1b010:	bl	114e8 <__ctype_b_loc@plt>
   1b014:	ldr	r0, [r0]
   1b018:	mov	r5, r6
   1b01c:	ldrb	r1, [r5, #1]!
   1b020:	ldrb	r1, [r0, r1, lsl #1]
   1b024:	tst	r1, #1
   1b028:	bne	1b01c <argp_parse@@Base+0x25d8>
   1b02c:	ldr	ip, [sp, #8]
   1b030:	mov	r3, #32
   1b034:	mov	r7, r4
   1b038:	add	r0, ip, #1
   1b03c:	cmp	r5, r0
   1b040:	beq	1af50 <argp_parse@@Base+0x250c>
   1b044:	add	sl, r6, #1
   1b048:	cmp	ip, r5
   1b04c:	bls	1b118 <argp_parse@@Base+0x26d4>
   1b050:	sub	r0, r5, sl
   1b054:	cmp	r0, r7
   1b058:	bge	1b118 <argp_parse@@Base+0x26d4>
   1b05c:	ldr	r0, [r8, #32]
   1b060:	sub	r0, r0, ip
   1b064:	add	r1, r7, #1
   1b068:	cmp	r0, r1
   1b06c:	bgt	1af78 <argp_parse@@Base+0x2534>
   1b070:	ldr	r0, [r8, #24]
   1b074:	cmp	r6, r0
   1b078:	bls	1b094 <argp_parse@@Base+0x2650>
   1b07c:	ldr	r3, [r8]
   1b080:	sub	r2, r6, r0
   1b084:	mov	r1, #1
   1b088:	bl	113ec <fwrite_unlocked@plt>
   1b08c:	ldr	ip, [sp, #8]
   1b090:	mov	r3, #32
   1b094:	ldr	r0, [r8]
   1b098:	ldr	r1, [r0, #20]
   1b09c:	ldr	r2, [r0, #24]
   1b0a0:	cmp	r1, r2
   1b0a4:	bcs	1b22c <argp_parse@@Base+0x27e8>
   1b0a8:	add	r2, r1, #1
   1b0ac:	str	r2, [r0, #20]
   1b0b0:	mov	r0, #10
   1b0b4:	strb	r0, [r1]
   1b0b8:	ldr	sl, [r8, #24]
   1b0bc:	sub	r0, ip, sl
   1b0c0:	mov	r9, sl
   1b0c4:	str	r0, [sp, #4]
   1b0c8:	ldr	r6, [r8, #12]
   1b0cc:	sub	r0, r5, sl
   1b0d0:	cmp	r0, r6
   1b0d4:	blt	1b130 <argp_parse@@Base+0x26ec>
   1b0d8:	b	1b1b4 <argp_parse@@Base+0x2770>
   1b0dc:	mov	r6, r5
   1b0e0:	mov	r7, r4
   1b0e4:	add	r0, ip, #1
   1b0e8:	cmp	r5, r0
   1b0ec:	bne	1b044 <argp_parse@@Base+0x2600>
   1b0f0:	b	1af50 <argp_parse@@Base+0x250c>
   1b0f4:	ldr	ip, [sp, #8]
   1b0f8:	mov	r6, #0
   1b0fc:	add	sl, r7, #1
   1b100:	mov	r3, #32
   1b104:	str	r6, [r8, #20]
   1b108:	cmp	sl, ip
   1b10c:	bcc	1acfc <argp_parse@@Base+0x22b8>
   1b110:	b	1b260 <argp_parse@@Base+0x281c>
   1b114:	add	sl, r6, #1
   1b118:	mov	r0, #10
   1b11c:	strb	r0, [r6]
   1b120:	ldr	r6, [r8, #12]
   1b124:	sub	r0, r5, sl
   1b128:	cmp	r0, r6
   1b12c:	bge	1b1b4 <argp_parse@@Base+0x2770>
   1b130:	ldr	r0, [sp, #4]
   1b134:	add	r0, r9, r0
   1b138:	add	r0, r0, #1
   1b13c:	cmp	r5, r0
   1b140:	bne	1b154 <argp_parse@@Base+0x2710>
   1b144:	ldr	r0, [r8, #32]
   1b148:	sub	r0, r0, r5
   1b14c:	cmp	r0, r6
   1b150:	bge	1b1b4 <argp_parse@@Base+0x2770>
   1b154:	cmp	r6, #1
   1b158:	blt	1b1d8 <argp_parse@@Base+0x2794>
   1b15c:	mov	r7, #0
   1b160:	ldr	r0, [r8]
   1b164:	ldr	r1, [r0, #20]
   1b168:	ldr	r2, [r0, #24]
   1b16c:	cmp	r1, r2
   1b170:	bcs	1b194 <argp_parse@@Base+0x2750>
   1b174:	add	r2, r1, #1
   1b178:	str	r2, [r0, #20]
   1b17c:	strb	r3, [r1]
   1b180:	ldr	r6, [r8, #12]
   1b184:	add	r7, r7, #1
   1b188:	cmp	r7, r6
   1b18c:	blt	1b160 <argp_parse@@Base+0x271c>
   1b190:	b	1b1d8 <argp_parse@@Base+0x2794>
   1b194:	mov	r1, #32
   1b198:	bl	115a8 <__overflow@plt>
   1b19c:	mov	r3, #32
   1b1a0:	ldr	r6, [r8, #12]
   1b1a4:	add	r7, r7, #1
   1b1a8:	cmp	r7, r6
   1b1ac:	blt	1b160 <argp_parse@@Base+0x271c>
   1b1b0:	b	1b1d8 <argp_parse@@Base+0x2794>
   1b1b4:	cmp	r6, #1
   1b1b8:	blt	1b1d8 <argp_parse@@Base+0x2794>
   1b1bc:	mov	r0, #0
   1b1c0:	strb	r3, [sl, r0]
   1b1c4:	add	r0, r0, #1
   1b1c8:	ldr	r6, [r8, #12]
   1b1cc:	cmp	r0, r6
   1b1d0:	blt	1b1c0 <argp_parse@@Base+0x277c>
   1b1d4:	add	sl, sl, r0
   1b1d8:	cmp	sl, r5
   1b1dc:	bcs	1b200 <argp_parse@@Base+0x27bc>
   1b1e0:	ldr	r0, [sp, #4]
   1b1e4:	mov	r1, r5
   1b1e8:	add	r0, r9, r0
   1b1ec:	sub	r2, r0, r5
   1b1f0:	mov	r0, sl
   1b1f4:	bl	11398 <memmove@plt>
   1b1f8:	ldr	r6, [r8, #12]
   1b1fc:	mov	r3, #32
   1b200:	ldr	r0, [sp, #4]
   1b204:	cmp	r6, #0
   1b208:	mvneq	r6, #0
   1b20c:	str	r6, [r8, #20]
   1b210:	sub	r0, r0, r5
   1b214:	add	r0, r0, r9
   1b218:	add	ip, sl, r0
   1b21c:	str	ip, [r8, #28]
   1b220:	cmp	sl, ip
   1b224:	bcc	1acfc <argp_parse@@Base+0x22b8>
   1b228:	b	1b260 <argp_parse@@Base+0x281c>
   1b22c:	mov	r1, #10
   1b230:	bl	115a8 <__overflow@plt>
   1b234:	ldr	ip, [sp, #8]
   1b238:	mov	r3, #32
   1b23c:	b	1b0b8 <argp_parse@@Base+0x2674>
   1b240:	str	r0, [r8, #20]
   1b244:	b	1b260 <argp_parse@@Base+0x281c>
   1b248:	ldr	r0, [sp, #4]
   1b24c:	add	r0, r6, r0
   1b250:	str	r0, [r8, #20]
   1b254:	sub	r0, sl, r0
   1b258:	add	ip, ip, r0
   1b25c:	str	ip, [r8, #28]
   1b260:	ldr	r0, [r8, #24]
   1b264:	sub	r0, ip, r0
   1b268:	str	r0, [r8, #16]
   1b26c:	sub	sp, fp, #28
   1b270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b274:	push	{r4, r5, r6, sl, fp, lr}
   1b278:	add	fp, sp, #16
   1b27c:	mov	r4, r0
   1b280:	mov	r6, r1
   1b284:	ldr	r0, [r0, #28]
   1b288:	mov	r5, #1
   1b28c:	ldr	r1, [r4, #32]
   1b290:	sub	r0, r1, r0
   1b294:	cmp	r0, r6
   1b298:	bcs	1b358 <argp_parse@@Base+0x2914>
   1b29c:	mov	r0, r4
   1b2a0:	bl	1accc <argp_parse@@Base+0x2288>
   1b2a4:	ldr	r0, [r4, #24]
   1b2a8:	ldr	r1, [r4, #28]
   1b2ac:	ldr	r3, [r4]
   1b2b0:	mov	r5, #1
   1b2b4:	sub	r2, r1, r0
   1b2b8:	mov	r1, #1
   1b2bc:	bl	113ec <fwrite_unlocked@plt>
   1b2c0:	mov	r1, r0
   1b2c4:	ldr	r0, [r4, #24]
   1b2c8:	ldr	r2, [r4, #28]
   1b2cc:	sub	r3, r2, r0
   1b2d0:	cmp	r1, r3
   1b2d4:	bne	1b324 <argp_parse@@Base+0x28e0>
   1b2d8:	mov	r1, #0
   1b2dc:	str	r1, [r4, #16]
   1b2e0:	str	r0, [r4, #28]
   1b2e4:	ldr	r1, [r4, #32]
   1b2e8:	sub	r1, r1, r0
   1b2ec:	cmp	r1, r6
   1b2f0:	bcs	1b358 <argp_parse@@Base+0x2914>
   1b2f4:	adds	r6, r1, r6
   1b2f8:	bcs	1b348 <argp_parse@@Base+0x2904>
   1b2fc:	mov	r1, r6
   1b300:	bl	1abb4 <argp_parse@@Base+0x2170>
   1b304:	cmp	r0, #0
   1b308:	beq	1b348 <argp_parse@@Base+0x2904>
   1b30c:	str	r0, [r4, #24]
   1b310:	add	r1, r0, r6
   1b314:	str	r0, [r4, #28]
   1b318:	mov	r0, r5
   1b31c:	str	r1, [r4, #32]
   1b320:	pop	{r4, r5, r6, sl, fp, pc}
   1b324:	sub	r2, r2, r1
   1b328:	str	r2, [r4, #28]
   1b32c:	sub	r2, r2, r0
   1b330:	ldr	r3, [r4, #16]
   1b334:	sub	r3, r3, r1
   1b338:	add	r1, r0, r1
   1b33c:	str	r3, [r4, #16]
   1b340:	bl	11398 <memmove@plt>
   1b344:	b	1b354 <argp_parse@@Base+0x2910>
   1b348:	bl	1153c <__errno_location@plt>
   1b34c:	mov	r1, #12
   1b350:	str	r1, [r0]
   1b354:	mov	r5, #0
   1b358:	mov	r0, r5
   1b35c:	pop	{r4, r5, r6, sl, fp, pc}
   1b360:	sub	sp, sp, #8
   1b364:	push	{r4, r5, r6, r7, fp, lr}
   1b368:	add	fp, sp, #16
   1b36c:	sub	sp, sp, #8
   1b370:	mov	r5, r1
   1b374:	mov	r4, r0
   1b378:	mov	r1, #150	; 0x96
   1b37c:	add	r6, fp, #8
   1b380:	str	r3, [fp, #12]
   1b384:	str	r2, [fp, #8]
   1b388:	mov	r0, r4
   1b38c:	bl	1b274 <argp_parse@@Base+0x2830>
   1b390:	cmp	r0, #0
   1b394:	beq	1b3e0 <argp_parse@@Base+0x299c>
   1b398:	str	r6, [sp, #4]
   1b39c:	mov	r2, r5
   1b3a0:	mov	r3, r6
   1b3a4:	ldr	r0, [r4, #28]
   1b3a8:	ldr	r1, [r4, #32]
   1b3ac:	sub	r7, r1, r0
   1b3b0:	mov	r1, r7
   1b3b4:	bl	11620 <vsnprintf@plt>
   1b3b8:	add	r1, r0, #1
   1b3bc:	cmp	r0, r7
   1b3c0:	bcs	1b388 <argp_parse@@Base+0x2944>
   1b3c4:	ldr	r1, [r4, #28]
   1b3c8:	add	r1, r1, r0
   1b3cc:	str	r1, [r4, #28]
   1b3d0:	sub	sp, fp, #16
   1b3d4:	pop	{r4, r5, r6, r7, fp, lr}
   1b3d8:	add	sp, sp, #8
   1b3dc:	bx	lr
   1b3e0:	mvn	r0, #0
   1b3e4:	sub	sp, fp, #16
   1b3e8:	pop	{r4, r5, r6, r7, fp, lr}
   1b3ec:	add	sp, sp, #8
   1b3f0:	bx	lr
   1b3f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b3f8:	add	fp, sp, #28
   1b3fc:	sub	sp, sp, #68	; 0x44
   1b400:	mvn	r6, #0
   1b404:	cmp	r0, #1
   1b408:	blt	1bb74 <argp_parse@@Base+0x3130>
   1b40c:	mov	r7, r2
   1b410:	ldr	r2, [fp, #16]
   1b414:	mov	r5, r3
   1b418:	mov	r3, r0
   1b41c:	mov	sl, r1
   1b420:	mov	r0, #0
   1b424:	ldr	r9, [r2]
   1b428:	ldr	r6, [r2, #4]
   1b42c:	str	r0, [r2, #12]
   1b430:	cmp	r9, #0
   1b434:	beq	1b458 <argp_parse@@Base+0x2a14>
   1b438:	ldr	r0, [r2, #16]
   1b43c:	cmp	r0, #0
   1b440:	beq	1b460 <argp_parse@@Base+0x2a1c>
   1b444:	ldrb	r0, [r7]
   1b448:	cmp	r0, #45	; 0x2d
   1b44c:	cmpne	r0, #43	; 0x2b
   1b450:	addeq	r7, r7, #1
   1b454:	b	1b4d4 <argp_parse@@Base+0x2a90>
   1b458:	mov	r9, #1
   1b45c:	str	r9, [r2]
   1b460:	mov	r0, #0
   1b464:	str	r9, [r2, #28]
   1b468:	str	r9, [r2, #32]
   1b46c:	str	r0, [r2, #20]
   1b470:	ldrb	r1, [r7]
   1b474:	cmp	r1, #43	; 0x2b
   1b478:	beq	1b488 <argp_parse@@Base+0x2a44>
   1b47c:	cmp	r1, #45	; 0x2d
   1b480:	bne	1b494 <argp_parse@@Base+0x2a50>
   1b484:	mov	r0, #2
   1b488:	str	r0, [r2, #24]
   1b48c:	add	r7, r7, #1
   1b490:	b	1b4cc <argp_parse@@Base+0x2a88>
   1b494:	ldr	r0, [fp, #20]
   1b498:	cmp	r0, #0
   1b49c:	bne	1b4c4 <argp_parse@@Base+0x2a80>
   1b4a0:	movw	r0, #57019	; 0xdebb
   1b4a4:	mov	r8, r2
   1b4a8:	mov	r4, r3
   1b4ac:	movt	r0, #1
   1b4b0:	bl	11494 <getenv@plt>
   1b4b4:	mov	r3, r4
   1b4b8:	mov	r2, r8
   1b4bc:	cmp	r0, #0
   1b4c0:	beq	1bb80 <argp_parse@@Base+0x313c>
   1b4c4:	mov	r0, #0
   1b4c8:	str	r0, [r2, #24]
   1b4cc:	mov	r0, #1
   1b4d0:	str	r0, [r2, #16]
   1b4d4:	ldrb	r0, [r7]
   1b4d8:	ldr	r4, [r2, #20]
   1b4dc:	str	r5, [sp, #48]	; 0x30
   1b4e0:	subs	r0, r0, #58	; 0x3a
   1b4e4:	movne	r0, r6
   1b4e8:	cmp	r4, #0
   1b4ec:	str	r0, [fp, #-44]	; 0xffffffd4
   1b4f0:	ldrbne	r0, [r4]
   1b4f4:	cmpne	r0, #0
   1b4f8:	bne	1b590 <argp_parse@@Base+0x2b4c>
   1b4fc:	mov	r4, r2
   1b500:	mov	r6, r2
   1b504:	str	r7, [sp, #32]
   1b508:	ldr	r1, [r4, #32]!
   1b50c:	cmp	r1, r9
   1b510:	mov	r8, r1
   1b514:	strgt	r9, [r4]
   1b518:	movgt	r8, r9
   1b51c:	ldr	r5, [r6, #28]!
   1b520:	cmp	r5, r9
   1b524:	strgt	r9, [r6]
   1b528:	movgt	r5, r9
   1b52c:	ldr	r7, [r2, #24]
   1b530:	cmp	r7, #1
   1b534:	bne	1b874 <argp_parse@@Base+0x2e30>
   1b538:	cmp	r5, r8
   1b53c:	cmpne	r8, r9
   1b540:	bne	1b658 <argp_parse@@Base+0x2c14>
   1b544:	cmp	r8, r9
   1b548:	mov	r1, r6
   1b54c:	mov	r0, r9
   1b550:	bne	1b858 <argp_parse@@Base+0x2e14>
   1b554:	mov	r8, r9
   1b558:	cmp	r9, r3
   1b55c:	bge	1b86c <argp_parse@@Base+0x2e28>
   1b560:	ldr	r0, [sl, r8, lsl #2]
   1b564:	ldrb	r1, [r0]
   1b568:	cmp	r1, #45	; 0x2d
   1b56c:	bne	1b57c <argp_parse@@Base+0x2b38>
   1b570:	ldrb	r0, [r0, #1]
   1b574:	cmp	r0, #0
   1b578:	bne	1b86c <argp_parse@@Base+0x2e28>
   1b57c:	add	r8, r8, #1
   1b580:	cmp	r8, r3
   1b584:	str	r8, [r2]
   1b588:	blt	1b560 <argp_parse@@Base+0x2b1c>
   1b58c:	b	1b86c <argp_parse@@Base+0x2e28>
   1b590:	str	r3, [fp, #-40]	; 0xffffffd8
   1b594:	add	r8, r4, #1
   1b598:	mov	r0, r7
   1b59c:	mov	r5, r2
   1b5a0:	str	r8, [r2, #20]
   1b5a4:	ldrb	r6, [r4]
   1b5a8:	mov	r1, r6
   1b5ac:	bl	11524 <strchr@plt>
   1b5b0:	ldrb	r1, [r4, #1]
   1b5b4:	mov	r3, r5
   1b5b8:	cmp	r1, #0
   1b5bc:	orr	r1, r6, #1
   1b5c0:	addeq	r9, r9, #1
   1b5c4:	streq	r9, [r5]
   1b5c8:	cmp	r1, #59	; 0x3b
   1b5cc:	cmpne	r0, #0
   1b5d0:	bne	1b5f4 <argp_parse@@Base+0x2bb0>
   1b5d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b5d8:	cmp	r0, #0
   1b5dc:	bne	1bc40 <argp_parse@@Base+0x31fc>
   1b5e0:	str	r6, [r3, #8]
   1b5e4:	mov	r6, #63	; 0x3f
   1b5e8:	mov	r0, r6
   1b5ec:	sub	sp, fp, #28
   1b5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5f4:	ldrb	r2, [r0]
   1b5f8:	ldrb	r1, [r0, #1]
   1b5fc:	cmp	r2, #87	; 0x57
   1b600:	bne	1b95c <argp_parse@@Base+0x2f18>
   1b604:	ldr	r2, [sp, #48]	; 0x30
   1b608:	cmp	r2, #0
   1b60c:	beq	1b95c <argp_parse@@Base+0x2f18>
   1b610:	cmp	r1, #59	; 0x3b
   1b614:	bne	1b95c <argp_parse@@Base+0x2f18>
   1b618:	ldrb	r0, [r8]
   1b61c:	cmp	r0, #0
   1b620:	bne	1bc70 <argp_parse@@Base+0x322c>
   1b624:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b628:	cmp	r9, r0
   1b62c:	bne	1bc6c <argp_parse@@Base+0x3228>
   1b630:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b634:	cmp	r0, #0
   1b638:	bne	1bd00 <argp_parse@@Base+0x32bc>
   1b63c:	str	r6, [r3, #8]
   1b640:	ldrb	r6, [r7]
   1b644:	cmp	r6, #58	; 0x3a
   1b648:	movwne	r6, #63	; 0x3f
   1b64c:	mov	r0, r6
   1b650:	sub	sp, fp, #28
   1b654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b658:	cmp	r9, r8
   1b65c:	str	r7, [sp, #20]
   1b660:	str	r6, [sp, #24]
   1b664:	str	r5, [sp, #36]	; 0x24
   1b668:	str	r4, [sp, #28]
   1b66c:	str	r3, [fp, #-40]	; 0xffffffd8
   1b670:	ble	1b830 <argp_parse@@Base+0x2dec>
   1b674:	ldr	r0, [sp, #36]	; 0x24
   1b678:	cmp	r0, r8
   1b67c:	bge	1b830 <argp_parse@@Base+0x2dec>
   1b680:	add	r0, sl, r8, lsl #2
   1b684:	mvn	r1, r1
   1b688:	ldr	r2, [sp, #36]	; 0x24
   1b68c:	mov	r3, r9
   1b690:	str	r0, [fp, #-32]	; 0xffffffe0
   1b694:	mvn	r0, r9
   1b698:	cmp	r0, r1
   1b69c:	movgt	r1, r0
   1b6a0:	add	r0, r1, #1
   1b6a4:	str	r1, [fp, #-36]	; 0xffffffdc
   1b6a8:	str	r0, [sp, #44]	; 0x2c
   1b6ac:	add	r0, sl, #4
   1b6b0:	str	r0, [sp, #40]	; 0x28
   1b6b4:	sub	ip, r8, r2
   1b6b8:	sub	r7, r3, r8
   1b6bc:	cmp	r7, ip
   1b6c0:	ble	1b77c <argp_parse@@Base+0x2d38>
   1b6c4:	sub	r4, r3, ip
   1b6c8:	cmp	ip, #1
   1b6cc:	blt	1b768 <argp_parse@@Base+0x2d24>
   1b6d0:	mov	r7, #0
   1b6d4:	cmp	ip, #4
   1b6d8:	bcc	1b730 <argp_parse@@Base+0x2cec>
   1b6dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b6e0:	ldr	r1, [sp, #40]	; 0x28
   1b6e4:	add	lr, sl, r2, lsl #2
   1b6e8:	add	r0, r0, r3
   1b6ec:	add	r0, r0, r2
   1b6f0:	add	r0, r1, r0, lsl #2
   1b6f4:	add	r1, sl, r3, lsl #2
   1b6f8:	cmp	lr, r1
   1b6fc:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   1b700:	cmpcc	r0, r1
   1b704:	bcc	1b730 <argp_parse@@Base+0x2cec>
   1b708:	bic	r7, ip, #3
   1b70c:	mov	r1, r7
   1b710:	vld1.32	{d16-d17}, [r0]
   1b714:	vld1.32	{d18-d19}, [lr]
   1b718:	subs	r1, r1, #4
   1b71c:	vst1.32	{d16-d17}, [lr]!
   1b720:	vst1.32	{d18-d19}, [r0]!
   1b724:	bne	1b710 <argp_parse@@Base+0x2ccc>
   1b728:	cmp	ip, r7
   1b72c:	beq	1b768 <argp_parse@@Base+0x2d24>
   1b730:	add	r0, sl, r3, lsl #2
   1b734:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b738:	add	r1, r7, r2
   1b73c:	add	r1, sl, r1, lsl #2
   1b740:	add	r3, r3, r7
   1b744:	add	r3, r3, r2
   1b748:	add	r7, r0, r3, lsl #2
   1b74c:	ldr	r5, [r1]
   1b750:	add	r3, r3, #1
   1b754:	ldr	r6, [r7, #4]
   1b758:	cmn	r3, #1
   1b75c:	str	r6, [r1], #4
   1b760:	str	r5, [r7, #4]
   1b764:	bne	1b748 <argp_parse@@Base+0x2d04>
   1b768:	mov	r3, r4
   1b76c:	cmp	r3, r8
   1b770:	cmpgt	r8, r2
   1b774:	bgt	1b6b4 <argp_parse@@Base+0x2c70>
   1b778:	b	1b830 <argp_parse@@Base+0x2dec>
   1b77c:	cmp	r7, #1
   1b780:	blt	1b820 <argp_parse@@Base+0x2ddc>
   1b784:	mov	r4, #0
   1b788:	cmp	r7, #3
   1b78c:	bls	1b7ec <argp_parse@@Base+0x2da8>
   1b790:	add	r1, sl, r3, lsl #2
   1b794:	add	r0, sl, r2, lsl #2
   1b798:	cmp	r0, r1
   1b79c:	bcs	1b7c0 <argp_parse@@Base+0x2d7c>
   1b7a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b7a4:	ldr	r6, [sp, #40]	; 0x28
   1b7a8:	add	r1, r1, r3
   1b7ac:	add	r1, r1, r2
   1b7b0:	add	r1, r6, r1, lsl #2
   1b7b4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b7b8:	cmp	r6, r1
   1b7bc:	bcc	1b7ec <argp_parse@@Base+0x2da8>
   1b7c0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b7c4:	bic	r4, r7, #3
   1b7c8:	mov	r1, r4
   1b7cc:	vld1.32	{d16-d17}, [r6]
   1b7d0:	vld1.32	{d18-d19}, [r0]
   1b7d4:	subs	r1, r1, #4
   1b7d8:	vst1.32	{d16-d17}, [r0]!
   1b7dc:	vst1.32	{d18-d19}, [r6]!
   1b7e0:	bne	1b7cc <argp_parse@@Base+0x2d88>
   1b7e4:	cmp	r7, r4
   1b7e8:	beq	1b820 <argp_parse@@Base+0x2ddc>
   1b7ec:	ldr	r1, [sp, #44]	; 0x2c
   1b7f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b7f4:	add	r6, r4, r2
   1b7f8:	add	r1, r1, r3
   1b7fc:	add	r0, r0, r4, lsl #2
   1b800:	sub	r1, r1, r4
   1b804:	add	r4, sl, r6, lsl #2
   1b808:	ldr	r6, [r4]
   1b80c:	ldr	r5, [r0]
   1b810:	subs	r1, r1, #1
   1b814:	str	r5, [r4], #4
   1b818:	str	r6, [r0], #4
   1b81c:	bne	1b808 <argp_parse@@Base+0x2dc4>
   1b820:	add	r2, r7, r2
   1b824:	cmp	r3, r8
   1b828:	cmpgt	r8, r2
   1b82c:	bgt	1b6b4 <argp_parse@@Base+0x2c70>
   1b830:	ldr	r0, [sp, #36]	; 0x24
   1b834:	ldr	r4, [sp, #28]
   1b838:	ldr	r6, [sp, #24]
   1b83c:	ldr	r2, [fp, #16]
   1b840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b844:	ldr	r7, [sp, #20]
   1b848:	add	r0, r0, r9
   1b84c:	mov	r1, r4
   1b850:	sub	r0, r0, r8
   1b854:	str	r0, [r6]
   1b858:	mov	r5, r0
   1b85c:	str	r9, [r1]
   1b860:	mov	r8, r9
   1b864:	cmp	r9, r3
   1b868:	blt	1b560 <argp_parse@@Base+0x2b1c>
   1b86c:	mov	r9, r8
   1b870:	str	r8, [r4]
   1b874:	cmp	r9, r3
   1b878:	beq	1bb68 <argp_parse@@Base+0x3124>
   1b87c:	ldr	r0, [sl, r9, lsl #2]
   1b880:	movw	r1, #55963	; 0xda9b
   1b884:	str	r3, [fp, #-40]	; 0xffffffd8
   1b888:	movt	r1, #1
   1b88c:	bl	11344 <strcmp@plt>
   1b890:	cmp	r0, #0
   1b894:	beq	1b92c <argp_parse@@Base+0x2ee8>
   1b898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b89c:	ldr	r2, [fp, #16]
   1b8a0:	cmp	r9, r3
   1b8a4:	beq	1bb68 <argp_parse@@Base+0x3124>
   1b8a8:	ldr	r0, [sl, r9, lsl #2]
   1b8ac:	mvn	r6, #0
   1b8b0:	ldrb	r1, [r0]
   1b8b4:	cmp	r1, #45	; 0x2d
   1b8b8:	bne	1b984 <argp_parse@@Base+0x2f40>
   1b8bc:	mov	r4, r0
   1b8c0:	ldrb	r1, [r4, #1]!
   1b8c4:	cmp	r1, #0
   1b8c8:	beq	1b984 <argp_parse@@Base+0x2f40>
   1b8cc:	ldr	r6, [sp, #48]	; 0x30
   1b8d0:	cmp	r6, #0
   1b8d4:	beq	1bba0 <argp_parse@@Base+0x315c>
   1b8d8:	ldr	r5, [fp, #12]
   1b8dc:	ldr	r7, [sp, #32]
   1b8e0:	cmp	r1, #45	; 0x2d
   1b8e4:	bne	1bba8 <argp_parse@@Base+0x3164>
   1b8e8:	add	r0, r0, #2
   1b8ec:	mov	r1, sl
   1b8f0:	str	r0, [r2, #20]
   1b8f4:	ldr	r0, [fp, #8]
   1b8f8:	stm	sp, {r0, r5}
   1b8fc:	str	r2, [sp, #8]
   1b900:	mov	r2, r7
   1b904:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b908:	str	r0, [sp, #12]
   1b90c:	movw	r0, #55963	; 0xda9b
   1b910:	movt	r0, #1
   1b914:	str	r0, [sp, #16]
   1b918:	mov	r0, r3
   1b91c:	mov	r3, r6
   1b920:	bl	1bd58 <argp_parse@@Base+0x3314>
   1b924:	sub	sp, fp, #28
   1b928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b92c:	ldr	r2, [fp, #16]
   1b930:	add	r3, r9, #1
   1b934:	cmp	r5, r8
   1b938:	cmpne	r8, r3
   1b93c:	str	r3, [r2]
   1b940:	bne	1b9a4 <argp_parse@@Base+0x2f60>
   1b944:	cmp	r5, r8
   1b948:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1b94c:	mov	r1, r6
   1b950:	mov	r0, r3
   1b954:	beq	1bb58 <argp_parse@@Base+0x3114>
   1b958:	b	1bb60 <argp_parse@@Base+0x311c>
   1b95c:	cmp	r1, #58	; 0x3a
   1b960:	bne	1bb74 <argp_parse@@Base+0x3130>
   1b964:	ldrb	r0, [r0, #2]
   1b968:	ldrb	r1, [r8]
   1b96c:	cmp	r0, #58	; 0x3a
   1b970:	bne	1bb88 <argp_parse@@Base+0x3144>
   1b974:	cmp	r1, #0
   1b978:	bne	1bb90 <argp_parse@@Base+0x314c>
   1b97c:	mov	r0, #0
   1b980:	b	1bcc8 <argp_parse@@Base+0x3284>
   1b984:	cmp	r7, #0
   1b988:	strne	r0, [r2, #12]
   1b98c:	addne	r0, r9, #1
   1b990:	movne	r6, #1
   1b994:	strne	r0, [r2]
   1b998:	mov	r0, r6
   1b99c:	sub	sp, fp, #28
   1b9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9a4:	cmp	r9, r8
   1b9a8:	str	r3, [fp, #-36]	; 0xffffffdc
   1b9ac:	str	r6, [sp, #24]
   1b9b0:	str	r5, [sp, #36]	; 0x24
   1b9b4:	str	r4, [sp, #28]
   1b9b8:	blt	1bb34 <argp_parse@@Base+0x30f0>
   1b9bc:	ldr	r0, [sp, #36]	; 0x24
   1b9c0:	cmp	r0, r8
   1b9c4:	bge	1bb34 <argp_parse@@Base+0x30f0>
   1b9c8:	sub	r0, sl, r8, lsl #2
   1b9cc:	ldr	r7, [sp, #36]	; 0x24
   1b9d0:	add	r9, sl, r8, lsl #2
   1b9d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b9d8:	rsb	r0, r8, #0
   1b9dc:	str	r0, [fp, #-32]	; 0xffffffe0
   1b9e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9e4:	sub	r4, r8, r7
   1b9e8:	sub	r3, r0, r8
   1b9ec:	cmp	r3, r4
   1b9f0:	ble	1ba90 <argp_parse@@Base+0x304c>
   1b9f4:	sub	r3, r0, r4
   1b9f8:	cmp	r4, #1
   1b9fc:	blt	1ba7c <argp_parse@@Base+0x3038>
   1ba00:	mov	r1, #0
   1ba04:	cmp	r4, #4
   1ba08:	bcc	1ba4c <argp_parse@@Base+0x3008>
   1ba0c:	add	r2, sl, r0, lsl #2
   1ba10:	add	lr, sl, r7, lsl #2
   1ba14:	add	ip, sl, r3, lsl #2
   1ba18:	cmp	lr, r2
   1ba1c:	cmpcc	ip, r9
   1ba20:	bcc	1ba4c <argp_parse@@Base+0x3008>
   1ba24:	bic	r1, r4, #3
   1ba28:	mov	r2, r1
   1ba2c:	vld1.32	{d16-d17}, [ip]
   1ba30:	vld1.32	{d18-d19}, [lr]
   1ba34:	subs	r2, r2, #4
   1ba38:	vst1.32	{d16-d17}, [lr]!
   1ba3c:	vst1.32	{d18-d19}, [ip]!
   1ba40:	bne	1ba2c <argp_parse@@Base+0x2fe8>
   1ba44:	cmp	r4, r1
   1ba48:	beq	1ba7c <argp_parse@@Base+0x3038>
   1ba4c:	add	r0, r7, r0
   1ba50:	sub	r2, r8, r1
   1ba54:	add	r1, r1, r7
   1ba58:	add	r1, sl, r1, lsl #2
   1ba5c:	add	r0, sl, r0, lsl #2
   1ba60:	ldr	r6, [r0, -r2, lsl #2]
   1ba64:	ldr	r5, [r1]
   1ba68:	str	r6, [r1], #4
   1ba6c:	str	r5, [r0, -r2, lsl #2]
   1ba70:	sub	r2, r2, #1
   1ba74:	cmp	r7, r2
   1ba78:	bne	1ba60 <argp_parse@@Base+0x301c>
   1ba7c:	mov	r0, r3
   1ba80:	cmp	r0, r8
   1ba84:	cmpgt	r8, r7
   1ba88:	bgt	1b9e4 <argp_parse@@Base+0x2fa0>
   1ba8c:	b	1bb34 <argp_parse@@Base+0x30f0>
   1ba90:	cmp	r3, #1
   1ba94:	blt	1bb24 <argp_parse@@Base+0x30e0>
   1ba98:	mov	r4, #0
   1ba9c:	cmp	r3, #3
   1baa0:	bls	1baf0 <argp_parse@@Base+0x30ac>
   1baa4:	add	r2, sl, r0, lsl #2
   1baa8:	add	r1, sl, r7, lsl #2
   1baac:	cmp	r1, r2
   1bab0:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   1bab4:	addcc	r2, r7, r0
   1bab8:	addcc	r2, r6, r2, lsl #2
   1babc:	cmpcc	r9, r2
   1bac0:	bcc	1baf0 <argp_parse@@Base+0x30ac>
   1bac4:	bic	r4, r3, #3
   1bac8:	mov	r6, r9
   1bacc:	mov	r2, r4
   1bad0:	vld1.32	{d16-d17}, [r6]
   1bad4:	vld1.32	{d18-d19}, [r1]
   1bad8:	subs	r2, r2, #4
   1badc:	vst1.32	{d16-d17}, [r1]!
   1bae0:	vst1.32	{d18-d19}, [r6]!
   1bae4:	bne	1bad0 <argp_parse@@Base+0x308c>
   1bae8:	cmp	r3, r4
   1baec:	beq	1bb24 <argp_parse@@Base+0x30e0>
   1baf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1baf4:	add	r2, r4, r7
   1baf8:	add	r6, r8, r4
   1bafc:	add	r2, sl, r2, lsl #2
   1bb00:	add	r1, r1, r0
   1bb04:	sub	r1, r1, r4
   1bb08:	add	r4, sl, r6, lsl #2
   1bb0c:	ldr	r6, [r2]
   1bb10:	ldr	r5, [r4]
   1bb14:	subs	r1, r1, #1
   1bb18:	str	r5, [r2], #4
   1bb1c:	str	r6, [r4], #4
   1bb20:	bne	1bb0c <argp_parse@@Base+0x30c8>
   1bb24:	add	r7, r3, r7
   1bb28:	cmp	r0, r8
   1bb2c:	cmpgt	r8, r7
   1bb30:	bgt	1b9e4 <argp_parse@@Base+0x2fa0>
   1bb34:	ldr	r0, [sp, #36]	; 0x24
   1bb38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb3c:	ldr	r1, [sp, #24]
   1bb40:	ldr	r2, [fp, #16]
   1bb44:	add	r0, r0, r3
   1bb48:	sub	r0, r0, r8
   1bb4c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1bb50:	str	r0, [r1]
   1bb54:	ldr	r1, [sp, #28]
   1bb58:	mov	r5, r0
   1bb5c:	str	r3, [r1]
   1bb60:	str	r8, [r2]
   1bb64:	str	r8, [r2, #32]
   1bb68:	cmp	r5, r8
   1bb6c:	mvn	r6, #0
   1bb70:	strne	r5, [r2]
   1bb74:	mov	r0, r6
   1bb78:	sub	sp, fp, #28
   1bb7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb80:	mov	r0, #1
   1bb84:	b	1b4c8 <argp_parse@@Base+0x2a84>
   1bb88:	cmp	r1, #0
   1bb8c:	beq	1bc14 <argp_parse@@Base+0x31d0>
   1bb90:	add	r0, r9, #1
   1bb94:	str	r8, [r3, #12]
   1bb98:	str	r0, [r3]
   1bb9c:	b	1bccc <argp_parse@@Base+0x3288>
   1bba0:	ldr	r7, [sp, #32]
   1bba4:	b	1bcf8 <argp_parse@@Base+0x32b4>
   1bba8:	cmp	r5, #0
   1bbac:	beq	1bcf8 <argp_parse@@Base+0x32b4>
   1bbb0:	ldrb	r0, [r0, #2]
   1bbb4:	cmp	r0, #0
   1bbb8:	beq	1bce0 <argp_parse@@Base+0x329c>
   1bbbc:	ldr	r1, [fp, #8]
   1bbc0:	str	r4, [r2, #20]
   1bbc4:	movw	r0, #55964	; 0xda9c
   1bbc8:	movt	r0, #1
   1bbcc:	stm	sp, {r1, r5}
   1bbd0:	str	r2, [sp, #8]
   1bbd4:	str	r0, [sp, #16]
   1bbd8:	mov	r0, r3
   1bbdc:	mov	r2, r7
   1bbe0:	mov	r3, r6
   1bbe4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bbe8:	str	r1, [sp, #12]
   1bbec:	mov	r1, sl
   1bbf0:	bl	1bd58 <argp_parse@@Base+0x3314>
   1bbf4:	ldr	r2, [fp, #16]
   1bbf8:	mov	r6, r0
   1bbfc:	cmn	r0, #1
   1bc00:	bne	1bb74 <argp_parse@@Base+0x3130>
   1bc04:	ldr	r9, [r2]
   1bc08:	ldr	r0, [sl, r9, lsl #2]
   1bc0c:	add	r4, r0, #1
   1bc10:	b	1bcf8 <argp_parse@@Base+0x32b4>
   1bc14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc18:	cmp	r9, r0
   1bc1c:	bne	1bcbc <argp_parse@@Base+0x3278>
   1bc20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bc24:	cmp	r0, #0
   1bc28:	bne	1bd2c <argp_parse@@Base+0x32e8>
   1bc2c:	str	r6, [r3, #8]
   1bc30:	ldrb	r6, [r7]
   1bc34:	cmp	r6, #58	; 0x3a
   1bc38:	movwne	r6, #63	; 0x3f
   1bc3c:	b	1bccc <argp_parse@@Base+0x3288>
   1bc40:	movw	r0, #63032	; 0xf638
   1bc44:	ldr	r2, [sl]
   1bc48:	movw	r1, #56946	; 0xde72
   1bc4c:	mov	r4, r3
   1bc50:	mov	r3, r6
   1bc54:	movt	r0, #2
   1bc58:	movt	r1, #1
   1bc5c:	ldr	r0, [r0]
   1bc60:	bl	11530 <fprintf@plt>
   1bc64:	mov	r3, r4
   1bc68:	b	1b5e0 <argp_parse@@Base+0x2b9c>
   1bc6c:	ldr	r8, [sl, r9, lsl #2]
   1bc70:	ldr	r2, [fp, #8]
   1bc74:	mov	r0, #0
   1bc78:	str	r8, [r3, #12]
   1bc7c:	movw	r1, #57015	; 0xdeb7
   1bc80:	str	r0, [r3, #12]
   1bc84:	str	r8, [r3, #20]
   1bc88:	movt	r1, #1
   1bc8c:	str	r2, [sp]
   1bc90:	stmib	sp, {r0, r3}
   1bc94:	str	r1, [sp, #16]
   1bc98:	mov	r1, sl
   1bc9c:	mov	r2, r7
   1bca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bca4:	ldr	r3, [sp, #48]	; 0x30
   1bca8:	str	r0, [sp, #12]
   1bcac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bcb0:	bl	1bd58 <argp_parse@@Base+0x3314>
   1bcb4:	sub	sp, fp, #28
   1bcb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bcbc:	add	r0, r9, #1
   1bcc0:	str	r0, [r3]
   1bcc4:	ldr	r0, [sl, r9, lsl #2]
   1bcc8:	str	r0, [r3, #12]
   1bccc:	mov	r0, #0
   1bcd0:	str	r0, [r3, #20]
   1bcd4:	mov	r0, r6
   1bcd8:	sub	sp, fp, #28
   1bcdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bce0:	mov	r0, r7
   1bce4:	bl	11524 <strchr@plt>
   1bce8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bcec:	ldr	r2, [fp, #16]
   1bcf0:	cmp	r0, #0
   1bcf4:	beq	1bbbc <argp_parse@@Base+0x3178>
   1bcf8:	str	r4, [r2, #20]
   1bcfc:	b	1b594 <argp_parse@@Base+0x2b50>
   1bd00:	movw	r0, #63032	; 0xf638
   1bd04:	ldr	r2, [sl]
   1bd08:	movw	r1, #56974	; 0xde8e
   1bd0c:	mov	r4, r3
   1bd10:	mov	r3, r6
   1bd14:	movt	r0, #2
   1bd18:	movt	r1, #1
   1bd1c:	ldr	r0, [r0]
   1bd20:	bl	11530 <fprintf@plt>
   1bd24:	mov	r3, r4
   1bd28:	b	1b63c <argp_parse@@Base+0x2bf8>
   1bd2c:	movw	r0, #63032	; 0xf638
   1bd30:	ldr	r2, [sl]
   1bd34:	movw	r1, #56974	; 0xde8e
   1bd38:	mov	r4, r3
   1bd3c:	mov	r3, r6
   1bd40:	movt	r0, #2
   1bd44:	movt	r1, #1
   1bd48:	ldr	r0, [r0]
   1bd4c:	bl	11530 <fprintf@plt>
   1bd50:	mov	r3, r4
   1bd54:	b	1bc2c <argp_parse@@Base+0x31e8>
   1bd58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd5c:	add	fp, sp, #28
   1bd60:	sub	sp, sp, #44	; 0x2c
   1bd64:	str	r0, [sp, #8]
   1bd68:	ldr	r0, [fp, #16]
   1bd6c:	str	r2, [sp, #12]
   1bd70:	str	r1, [sp, #16]
   1bd74:	ldr	r8, [r0, #20]
   1bd78:	mov	r9, r8
   1bd7c:	ldrb	r0, [r9]
   1bd80:	cmp	r0, #0
   1bd84:	cmpne	r0, #61	; 0x3d
   1bd88:	beq	1bda0 <argp_parse@@Base+0x335c>
   1bd8c:	add	r9, r9, #1
   1bd90:	ldrb	r0, [r9]
   1bd94:	cmp	r0, #0
   1bd98:	cmpne	r0, #61	; 0x3d
   1bd9c:	bne	1bd8c <argp_parse@@Base+0x3348>
   1bda0:	ldr	sl, [r3]
   1bda4:	mvn	r0, #0
   1bda8:	str	r0, [sp, #24]
   1bdac:	cmp	sl, #0
   1bdb0:	beq	1bf54 <argp_parse@@Base+0x3510>
   1bdb4:	sub	r0, r9, r8
   1bdb8:	mov	r4, #0
   1bdbc:	mov	r6, sl
   1bdc0:	mov	r7, r3
   1bdc4:	str	r3, [sp, #28]
   1bdc8:	str	r0, [fp, #-32]	; 0xffffffe0
   1bdcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bdd0:	mov	r0, r6
   1bdd4:	mov	r1, r8
   1bdd8:	bl	1165c <strncmp@plt>
   1bddc:	cmp	r0, #0
   1bde0:	bne	1bdf8 <argp_parse@@Base+0x33b4>
   1bde4:	mov	r0, r6
   1bde8:	bl	11518 <strlen@plt>
   1bdec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bdf0:	cmp	r1, r0
   1bdf4:	beq	1bf70 <argp_parse@@Base+0x352c>
   1bdf8:	ldr	r6, [r7, #16]!
   1bdfc:	add	r4, r4, #1
   1be00:	cmp	r6, #0
   1be04:	bne	1bdcc <argp_parse@@Base+0x3388>
   1be08:	cmp	sl, #0
   1be0c:	beq	1bf78 <argp_parse@@Base+0x3534>
   1be10:	ldr	r0, [fp, #12]
   1be14:	cmp	r0, #0
   1be18:	beq	1bff8 <argp_parse@@Base+0x35b4>
   1be1c:	ldr	r0, [fp, #20]
   1be20:	cmp	r0, #0
   1be24:	beq	1c31c <argp_parse@@Base+0x38d8>
   1be28:	mov	r0, #0
   1be2c:	ldr	r6, [sp, #28]
   1be30:	mov	r5, #0
   1be34:	mov	r7, #0
   1be38:	str	r0, [sp, #32]
   1be3c:	mvn	r0, #0
   1be40:	str	r0, [sp, #24]
   1be44:	mov	r0, #0
   1be48:	str	r0, [sp, #4]
   1be4c:	mov	r0, #0
   1be50:	str	r0, [sp, #20]
   1be54:	b	1be68 <argp_parse@@Base+0x3424>
   1be58:	ldr	r0, [fp, #16]
   1be5c:	add	r1, r1, #1
   1be60:	mov	r5, r1
   1be64:	ldr	r8, [r0, #20]
   1be68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1be6c:	mov	r0, sl
   1be70:	mov	r1, r8
   1be74:	bl	1165c <strncmp@plt>
   1be78:	cmp	r0, #0
   1be7c:	beq	1be94 <argp_parse@@Base+0x3450>
   1be80:	mov	r1, r5
   1be84:	ldr	sl, [r6, #16]!
   1be88:	cmp	sl, #0
   1be8c:	bne	1be58 <argp_parse@@Base+0x3414>
   1be90:	b	1c1b0 <argp_parse@@Base+0x376c>
   1be94:	cmp	r7, #0
   1be98:	beq	1bf14 <argp_parse@@Base+0x34d0>
   1be9c:	ldr	r0, [sp, #32]
   1bea0:	mov	r1, r5
   1bea4:	cmp	r0, #0
   1bea8:	bne	1be84 <argp_parse@@Base+0x3440>
   1beac:	ldr	r8, [sp, #20]
   1beb0:	cmp	r8, #0
   1beb4:	bne	1bef0 <argp_parse@@Base+0x34ac>
   1beb8:	mov	r0, r4
   1bebc:	bl	1ab84 <argp_parse@@Base+0x2140>
   1bec0:	cmp	r0, #0
   1bec4:	beq	1bf30 <argp_parse@@Base+0x34ec>
   1bec8:	mov	r1, #0
   1becc:	mov	r2, r4
   1bed0:	mov	r8, r0
   1bed4:	bl	1156c <memset@plt>
   1bed8:	ldr	r0, [sp, #24]
   1bedc:	mov	r1, #1
   1bee0:	mov	r2, #1
   1bee4:	str	r1, [sp, #4]
   1bee8:	mov	r1, r5
   1beec:	strb	r2, [r8, r0]
   1bef0:	mov	r0, #1
   1bef4:	str	r8, [sp, #20]
   1bef8:	strb	r0, [r8, r1]
   1befc:	mov	r0, #0
   1bf00:	str	r0, [sp, #32]
   1bf04:	ldr	sl, [r6, #16]!
   1bf08:	cmp	sl, #0
   1bf0c:	bne	1be58 <argp_parse@@Base+0x3414>
   1bf10:	b	1c1b0 <argp_parse@@Base+0x376c>
   1bf14:	mov	r7, r6
   1bf18:	mov	r1, r5
   1bf1c:	str	r5, [sp, #24]
   1bf20:	ldr	sl, [r6, #16]!
   1bf24:	cmp	sl, #0
   1bf28:	bne	1be58 <argp_parse@@Base+0x3414>
   1bf2c:	b	1c1b0 <argp_parse@@Base+0x376c>
   1bf30:	mov	r0, #1
   1bf34:	mov	r1, r5
   1bf38:	str	r0, [sp, #32]
   1bf3c:	mov	r0, #0
   1bf40:	str	r0, [sp, #20]
   1bf44:	ldr	sl, [r6, #16]!
   1bf48:	cmp	sl, #0
   1bf4c:	bne	1be58 <argp_parse@@Base+0x3414>
   1bf50:	b	1c1b0 <argp_parse@@Base+0x376c>
   1bf54:	mov	r0, #0
   1bf58:	mov	r4, #0
   1bf5c:	mov	r7, #0
   1bf60:	mov	r1, #0
   1bf64:	mov	r8, #0
   1bf68:	mov	r6, r3
   1bf6c:	b	1bf8c <argp_parse@@Base+0x3548>
   1bf70:	str	r4, [sp, #24]
   1bf74:	b	1c1d4 <argp_parse@@Base+0x3790>
   1bf78:	ldr	r6, [sp, #28]
   1bf7c:	mov	r0, #0
   1bf80:	mov	r7, #0
   1bf84:	mov	r1, #0
   1bf88:	mov	r8, #0
   1bf8c:	str	r0, [sp, #32]
   1bf90:	cmp	r1, #0
   1bf94:	ldreq	r0, [sp, #32]
   1bf98:	cmpeq	r0, #0
   1bf9c:	beq	1c1cc <argp_parse@@Base+0x3788>
   1bfa0:	ldr	r0, [fp, #20]
   1bfa4:	cmp	r0, #0
   1bfa8:	bne	1c3fc <argp_parse@@Base+0x39b8>
   1bfac:	cmp	r8, #0
   1bfb0:	beq	1bfbc <argp_parse@@Base+0x3578>
   1bfb4:	mov	r0, r1
   1bfb8:	bl	19df4 <argp_parse@@Base+0x13b0>
   1bfbc:	ldr	r0, [fp, #16]
   1bfc0:	ldr	r4, [r0, #20]
   1bfc4:	mov	r5, r0
   1bfc8:	mov	r0, r4
   1bfcc:	bl	11518 <strlen@plt>
   1bfd0:	mov	r1, #0
   1bfd4:	add	r0, r4, r0
   1bfd8:	str	r1, [r5, #8]
   1bfdc:	str	r0, [r5, #20]
   1bfe0:	ldr	r0, [r5]
   1bfe4:	add	r0, r0, #1
   1bfe8:	str	r0, [r5]
   1bfec:	mov	r0, #63	; 0x3f
   1bff0:	sub	sp, fp, #28
   1bff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bff8:	mov	r0, #0
   1bffc:	mov	r6, #0
   1c000:	mov	r7, #0
   1c004:	str	r0, [sp, #36]	; 0x24
   1c008:	mvn	r0, #0
   1c00c:	str	r0, [sp, #24]
   1c010:	mov	r0, #0
   1c014:	str	r0, [sp, #32]
   1c018:	mov	r0, #0
   1c01c:	str	r0, [sp, #4]
   1c020:	mov	r0, #0
   1c024:	str	r0, [sp, #20]
   1c028:	b	1c040 <argp_parse@@Base+0x35fc>
   1c02c:	ldr	r0, [fp, #16]
   1c030:	add	r3, r3, #16
   1c034:	add	r6, r6, #1
   1c038:	str	r3, [sp, #36]	; 0x24
   1c03c:	ldr	r8, [r0, #20]
   1c040:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c044:	mov	r0, sl
   1c048:	mov	r1, r8
   1c04c:	bl	1165c <strncmp@plt>
   1c050:	cmp	r0, #0
   1c054:	beq	1c074 <argp_parse@@Base+0x3630>
   1c058:	ldr	r5, [sp, #28]
   1c05c:	ldr	r3, [sp, #36]	; 0x24
   1c060:	add	r0, r5, r6, lsl #4
   1c064:	ldr	sl, [r0, #16]
   1c068:	cmp	sl, #0
   1c06c:	bne	1c02c <argp_parse@@Base+0x35e8>
   1c070:	b	1c1b0 <argp_parse@@Base+0x376c>
   1c074:	ldr	r5, [sp, #28]
   1c078:	ldr	r3, [sp, #36]	; 0x24
   1c07c:	cmp	r7, #0
   1c080:	add	r0, r5, r3
   1c084:	beq	1c11c <argp_parse@@Base+0x36d8>
   1c088:	ldr	r1, [r0, #4]
   1c08c:	ldr	r2, [r7, #4]
   1c090:	cmp	r2, r1
   1c094:	bne	1c0a8 <argp_parse@@Base+0x3664>
   1c098:	ldr	r1, [r0, #8]
   1c09c:	ldr	r2, [r7, #8]
   1c0a0:	cmp	r2, r1
   1c0a4:	beq	1c138 <argp_parse@@Base+0x36f4>
   1c0a8:	ldr	r0, [sp, #32]
   1c0ac:	cmp	r0, #0
   1c0b0:	bne	1c060 <argp_parse@@Base+0x361c>
   1c0b4:	ldr	r0, [fp, #20]
   1c0b8:	cmp	r0, #0
   1c0bc:	beq	1c158 <argp_parse@@Base+0x3714>
   1c0c0:	ldr	r8, [sp, #20]
   1c0c4:	mov	r0, #0
   1c0c8:	str	r0, [sp, #32]
   1c0cc:	cmp	r8, #0
   1c0d0:	bne	1c16c <argp_parse@@Base+0x3728>
   1c0d4:	mov	r0, r4
   1c0d8:	bl	1ab84 <argp_parse@@Base+0x2140>
   1c0dc:	cmp	r0, #0
   1c0e0:	beq	1c18c <argp_parse@@Base+0x3748>
   1c0e4:	mov	r8, r0
   1c0e8:	mov	r0, #0
   1c0ec:	mov	r1, #0
   1c0f0:	mov	r2, r4
   1c0f4:	str	r0, [sp, #32]
   1c0f8:	mov	r0, r8
   1c0fc:	bl	1156c <memset@plt>
   1c100:	ldr	r3, [sp, #36]	; 0x24
   1c104:	ldr	r0, [sp, #24]
   1c108:	mov	r2, #1
   1c10c:	mov	r1, #1
   1c110:	str	r1, [sp, #4]
   1c114:	strb	r2, [r8, r0]
   1c118:	b	1c16c <argp_parse@@Base+0x3728>
   1c11c:	mov	r7, r0
   1c120:	str	r6, [sp, #24]
   1c124:	add	r0, r5, r6, lsl #4
   1c128:	ldr	sl, [r0, #16]
   1c12c:	cmp	sl, #0
   1c130:	bne	1c02c <argp_parse@@Base+0x35e8>
   1c134:	b	1c1b0 <argp_parse@@Base+0x376c>
   1c138:	ldr	r1, [sp, #32]
   1c13c:	cmp	r1, #0
   1c140:	bne	1c060 <argp_parse@@Base+0x361c>
   1c144:	ldr	r0, [r0, #12]
   1c148:	ldr	r1, [r7, #12]
   1c14c:	cmp	r1, r0
   1c150:	bne	1c0b4 <argp_parse@@Base+0x3670>
   1c154:	b	1c060 <argp_parse@@Base+0x361c>
   1c158:	ldr	r8, [sp, #20]
   1c15c:	mov	r0, #1
   1c160:	str	r0, [sp, #32]
   1c164:	cmp	r8, #0
   1c168:	beq	1c198 <argp_parse@@Base+0x3754>
   1c16c:	mov	r0, #1
   1c170:	str	r8, [sp, #20]
   1c174:	strb	r0, [r8, r6]
   1c178:	add	r0, r5, r6, lsl #4
   1c17c:	ldr	sl, [r0, #16]
   1c180:	cmp	sl, #0
   1c184:	bne	1c02c <argp_parse@@Base+0x35e8>
   1c188:	b	1c1b0 <argp_parse@@Base+0x376c>
   1c18c:	ldr	r3, [sp, #36]	; 0x24
   1c190:	mov	r0, #1
   1c194:	str	r0, [sp, #32]
   1c198:	mov	r0, #0
   1c19c:	str	r0, [sp, #20]
   1c1a0:	add	r0, r5, r6, lsl #4
   1c1a4:	ldr	sl, [r0, #16]
   1c1a8:	cmp	sl, #0
   1c1ac:	bne	1c02c <argp_parse@@Base+0x35e8>
   1c1b0:	ldr	r6, [sp, #28]
   1c1b4:	ldr	r1, [sp, #20]
   1c1b8:	ldr	r8, [sp, #4]
   1c1bc:	cmp	r1, #0
   1c1c0:	ldreq	r0, [sp, #32]
   1c1c4:	cmpeq	r0, #0
   1c1c8:	bne	1bfa0 <argp_parse@@Base+0x355c>
   1c1cc:	cmp	r7, #0
   1c1d0:	beq	1c278 <argp_parse@@Base+0x3834>
   1c1d4:	ldr	r1, [fp, #16]
   1c1d8:	mov	r0, #0
   1c1dc:	str	r0, [r1, #20]
   1c1e0:	mov	r2, r1
   1c1e4:	ldr	r1, [r1]
   1c1e8:	add	r0, r1, #1
   1c1ec:	str	r0, [r2]
   1c1f0:	ldrb	r3, [r9]
   1c1f4:	ldr	r2, [r7, #4]
   1c1f8:	cmp	r3, #0
   1c1fc:	beq	1c218 <argp_parse@@Base+0x37d4>
   1c200:	cmp	r2, #0
   1c204:	beq	1c2f8 <argp_parse@@Base+0x38b4>
   1c208:	ldr	r1, [fp, #16]
   1c20c:	add	r0, r9, #1
   1c210:	str	r0, [r1, #12]
   1c214:	b	1c244 <argp_parse@@Base+0x3800>
   1c218:	cmp	r2, #1
   1c21c:	bne	1c244 <argp_parse@@Base+0x3800>
   1c220:	ldr	r2, [sp, #8]
   1c224:	cmp	r0, r2
   1c228:	bge	1c3cc <argp_parse@@Base+0x3988>
   1c22c:	ldr	r2, [fp, #16]
   1c230:	add	r1, r1, #2
   1c234:	str	r1, [r2]
   1c238:	ldr	r1, [sp, #16]
   1c23c:	ldr	r0, [r1, r0, lsl #2]
   1c240:	str	r0, [r2, #12]
   1c244:	ldr	r0, [fp, #8]
   1c248:	cmp	r0, #0
   1c24c:	ldrne	r1, [sp, #24]
   1c250:	strne	r1, [r0]
   1c254:	ldr	r1, [r7, #8]
   1c258:	ldr	r0, [r7, #12]
   1c25c:	cmp	r1, #0
   1c260:	strne	r0, [r1]
   1c264:	movne	r0, #0
   1c268:	subne	sp, fp, #28
   1c26c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c270:	sub	sp, fp, #28
   1c274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c278:	ldr	r0, [fp, #12]
   1c27c:	cmp	r0, #0
   1c280:	beq	1c2c4 <argp_parse@@Base+0x3880>
   1c284:	ldr	r0, [fp, #16]
   1c288:	ldr	r1, [sp, #16]
   1c28c:	ldr	r0, [r0]
   1c290:	ldr	r0, [r1, r0, lsl #2]
   1c294:	ldrb	r0, [r0, #1]
   1c298:	cmp	r0, #45	; 0x2d
   1c29c:	beq	1c2c4 <argp_parse@@Base+0x3880>
   1c2a0:	ldr	r0, [fp, #16]
   1c2a4:	ldr	r0, [r0, #20]
   1c2a8:	ldrb	r1, [r0]
   1c2ac:	ldr	r0, [sp, #12]
   1c2b0:	bl	11524 <strchr@plt>
   1c2b4:	mov	r1, r0
   1c2b8:	mvn	r0, #0
   1c2bc:	cmp	r1, #0
   1c2c0:	bne	1c3f4 <argp_parse@@Base+0x39b0>
   1c2c4:	ldr	r0, [fp, #20]
   1c2c8:	cmp	r0, #0
   1c2cc:	bne	1c4f4 <argp_parse@@Base+0x3ab0>
   1c2d0:	ldr	r1, [fp, #16]
   1c2d4:	mov	r0, #0
   1c2d8:	str	r0, [r1, #20]
   1c2dc:	str	r0, [r1, #8]
   1c2e0:	ldr	r0, [r1]
   1c2e4:	add	r0, r0, #1
   1c2e8:	str	r0, [r1]
   1c2ec:	mov	r0, #63	; 0x3f
   1c2f0:	sub	sp, fp, #28
   1c2f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2f8:	ldr	r0, [fp, #20]
   1c2fc:	cmp	r0, #0
   1c300:	bne	1c528 <argp_parse@@Base+0x3ae4>
   1c304:	ldr	r0, [r7, #12]
   1c308:	ldr	r1, [fp, #16]
   1c30c:	str	r0, [r1, #8]
   1c310:	mov	r0, #63	; 0x3f
   1c314:	sub	sp, fp, #28
   1c318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c31c:	ldr	r5, [sp, #28]
   1c320:	mov	r0, #0
   1c324:	mov	r6, #0
   1c328:	mov	r7, #0
   1c32c:	str	r0, [sp, #32]
   1c330:	mvn	r0, #0
   1c334:	str	r0, [sp, #24]
   1c338:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c33c:	mov	r0, sl
   1c340:	mov	r1, r8
   1c344:	bl	1165c <strncmp@plt>
   1c348:	cmp	r0, #0
   1c34c:	beq	1c364 <argp_parse@@Base+0x3920>
   1c350:	ldr	sl, [r5, #16]!
   1c354:	add	r6, r6, #1
   1c358:	cmp	sl, #0
   1c35c:	bne	1c338 <argp_parse@@Base+0x38f4>
   1c360:	b	1c3ac <argp_parse@@Base+0x3968>
   1c364:	cmp	r7, #0
   1c368:	beq	1c390 <argp_parse@@Base+0x394c>
   1c36c:	ldr	r0, [sp, #32]
   1c370:	cmp	r0, #0
   1c374:	movweq	r0, #1
   1c378:	str	r0, [sp, #32]
   1c37c:	ldr	sl, [r5, #16]!
   1c380:	add	r6, r6, #1
   1c384:	cmp	sl, #0
   1c388:	bne	1c338 <argp_parse@@Base+0x38f4>
   1c38c:	b	1c3ac <argp_parse@@Base+0x3968>
   1c390:	mov	r7, r5
   1c394:	mov	r0, r6
   1c398:	str	r6, [sp, #24]
   1c39c:	ldr	sl, [r5, #16]!
   1c3a0:	add	r6, r6, #1
   1c3a4:	cmp	sl, #0
   1c3a8:	bne	1c338 <argp_parse@@Base+0x38f4>
   1c3ac:	ldr	r6, [sp, #28]
   1c3b0:	mov	r1, #0
   1c3b4:	mov	r8, #0
   1c3b8:	cmp	r1, #0
   1c3bc:	ldreq	r0, [sp, #32]
   1c3c0:	cmpeq	r0, #0
   1c3c4:	bne	1bfa0 <argp_parse@@Base+0x355c>
   1c3c8:	b	1c1cc <argp_parse@@Base+0x3788>
   1c3cc:	ldr	r0, [fp, #20]
   1c3d0:	cmp	r0, #0
   1c3d4:	bne	1c558 <argp_parse@@Base+0x3b14>
   1c3d8:	ldr	r0, [r7, #12]
   1c3dc:	ldr	r1, [fp, #16]
   1c3e0:	str	r0, [r1, #8]
   1c3e4:	ldr	r0, [sp, #12]
   1c3e8:	ldrb	r0, [r0]
   1c3ec:	cmp	r0, #58	; 0x3a
   1c3f0:	movwne	r0, #63	; 0x3f
   1c3f4:	sub	sp, fp, #28
   1c3f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3fc:	movw	sl, #63032	; 0xf638
   1c400:	mov	r9, r1
   1c404:	ldr	r1, [sp, #32]
   1c408:	movt	sl, #2
   1c40c:	ldr	r0, [sl]
   1c410:	cmp	r1, #0
   1c414:	beq	1c44c <argp_parse@@Base+0x3a08>
   1c418:	ldr	r1, [sp, #16]
   1c41c:	ldr	r3, [fp, #24]
   1c420:	ldr	r2, [r1]
   1c424:	ldr	r1, [fp, #16]
   1c428:	ldr	r1, [r1, #20]
   1c42c:	str	r1, [sp]
   1c430:	movw	r1, #57035	; 0xdecb
   1c434:	movt	r1, #1
   1c438:	bl	11530 <fprintf@plt>
   1c43c:	mov	r1, r9
   1c440:	cmp	r8, #0
   1c444:	bne	1bfb4 <argp_parse@@Base+0x3570>
   1c448:	b	1bfbc <argp_parse@@Base+0x3578>
   1c44c:	bl	11614 <flockfile@plt>
   1c450:	ldr	r1, [fp, #16]
   1c454:	ldr	r0, [sp, #16]
   1c458:	ldr	r5, [fp, #24]
   1c45c:	ldr	r1, [r1, #20]
   1c460:	ldr	r2, [r0]
   1c464:	ldr	r0, [sl]
   1c468:	mov	r3, r5
   1c46c:	str	r1, [sp]
   1c470:	movw	r1, #57067	; 0xdeeb
   1c474:	movt	r1, #1
   1c478:	bl	11530 <fprintf@plt>
   1c47c:	cmp	r4, #0
   1c480:	beq	1c4d0 <argp_parse@@Base+0x3a8c>
   1c484:	mov	r7, r9
   1c488:	ldrb	r0, [r7]
   1c48c:	cmp	r0, #0
   1c490:	bne	1c4a8 <argp_parse@@Base+0x3a64>
   1c494:	add	r6, r6, #16
   1c498:	add	r7, r7, #1
   1c49c:	subs	r4, r4, #1
   1c4a0:	bne	1c488 <argp_parse@@Base+0x3a44>
   1c4a4:	b	1c4d0 <argp_parse@@Base+0x3a8c>
   1c4a8:	ldr	r3, [r6]
   1c4ac:	ldr	r0, [sl]
   1c4b0:	movw	r1, #57114	; 0xdf1a
   1c4b4:	mov	r2, r5
   1c4b8:	movt	r1, #1
   1c4bc:	bl	11530 <fprintf@plt>
   1c4c0:	add	r6, r6, #16
   1c4c4:	add	r7, r7, #1
   1c4c8:	subs	r4, r4, #1
   1c4cc:	bne	1c488 <argp_parse@@Base+0x3a44>
   1c4d0:	ldr	r1, [sl]
   1c4d4:	mov	r0, #10
   1c4d8:	bl	115e4 <fputc@plt>
   1c4dc:	ldr	r0, [sl]
   1c4e0:	bl	11464 <funlockfile@plt>
   1c4e4:	mov	r1, r9
   1c4e8:	cmp	r8, #0
   1c4ec:	bne	1bfb4 <argp_parse@@Base+0x3570>
   1c4f0:	b	1bfbc <argp_parse@@Base+0x3578>
   1c4f4:	ldr	r1, [fp, #16]
   1c4f8:	ldr	r0, [sp, #16]
   1c4fc:	ldr	r3, [fp, #24]
   1c500:	ldr	r2, [r0]
   1c504:	movw	r0, #63032	; 0xf638
   1c508:	ldr	r1, [r1, #20]
   1c50c:	movt	r0, #2
   1c510:	ldr	r0, [r0]
   1c514:	str	r1, [sp]
   1c518:	movw	r1, #57122	; 0xdf22
   1c51c:	movt	r1, #1
   1c520:	bl	11530 <fprintf@plt>
   1c524:	b	1c2d0 <argp_parse@@Base+0x388c>
   1c528:	ldr	r0, [sp, #16]
   1c52c:	ldr	r1, [r7]
   1c530:	ldr	r3, [fp, #24]
   1c534:	ldr	r2, [r0]
   1c538:	movw	r0, #63032	; 0xf638
   1c53c:	str	r1, [sp]
   1c540:	movw	r1, #57154	; 0xdf42
   1c544:	movt	r0, #2
   1c548:	movt	r1, #1
   1c54c:	ldr	r0, [r0]
   1c550:	bl	11530 <fprintf@plt>
   1c554:	b	1c304 <argp_parse@@Base+0x38c0>
   1c558:	ldr	r0, [sp, #16]
   1c55c:	ldr	r1, [r7]
   1c560:	ldr	r3, [fp, #24]
   1c564:	ldr	r2, [r0]
   1c568:	movw	r0, #63032	; 0xf638
   1c56c:	str	r1, [sp]
   1c570:	movw	r1, #57199	; 0xdf6f
   1c574:	movt	r0, #2
   1c578:	movt	r1, #1
   1c57c:	ldr	r0, [r0]
   1c580:	bl	11530 <fprintf@plt>
   1c584:	b	1c3d8 <argp_parse@@Base+0x3994>
   1c588:	push	{r4, r5, r6, r7, fp, lr}
   1c58c:	add	fp, sp, #16
   1c590:	sub	sp, sp, #16
   1c594:	movw	r6, #63008	; 0xf620
   1c598:	movw	r7, #63128	; 0xf698
   1c59c:	movt	r6, #2
   1c5a0:	movt	r7, #2
   1c5a4:	ldm	r6, {r4, r5}
   1c5a8:	stm	r7, {r4, r5}
   1c5ac:	ldr	r5, [fp, #16]
   1c5b0:	str	r7, [sp, #8]
   1c5b4:	str	r5, [sp, #12]
   1c5b8:	ldr	r5, [fp, #12]
   1c5bc:	str	r5, [sp, #4]
   1c5c0:	ldr	r5, [fp, #8]
   1c5c4:	str	r5, [sp]
   1c5c8:	bl	1b3f4 <argp_parse@@Base+0x29b0>
   1c5cc:	ldr	r1, [r7]
   1c5d0:	ldr	r2, [r7, #8]
   1c5d4:	ldr	r3, [r7, #12]
   1c5d8:	str	r1, [r6]
   1c5dc:	movw	r1, #63200	; 0xf6e0
   1c5e0:	str	r2, [r6, #8]
   1c5e4:	movt	r1, #2
   1c5e8:	str	r3, [r1]
   1c5ec:	sub	sp, fp, #16
   1c5f0:	pop	{r4, r5, r6, r7, fp, pc}
   1c5f4:	push	{r4, r5, r6, sl, fp, lr}
   1c5f8:	add	fp, sp, #16
   1c5fc:	sub	sp, sp, #16
   1c600:	movw	r5, #63008	; 0xf620
   1c604:	movw	r6, #63128	; 0xf698
   1c608:	movt	r5, #2
   1c60c:	movt	r6, #2
   1c610:	ldm	r5, {r3, r4}
   1c614:	stm	r6, {r3, r4}
   1c618:	mov	r4, #0
   1c61c:	mov	r3, #1
   1c620:	str	r4, [sp]
   1c624:	stmib	sp, {r4, r6}
   1c628:	str	r3, [sp, #12]
   1c62c:	mov	r3, #0
   1c630:	bl	1b3f4 <argp_parse@@Base+0x29b0>
   1c634:	ldr	r1, [r6]
   1c638:	ldr	r2, [r6, #8]
   1c63c:	ldr	r3, [r6, #12]
   1c640:	str	r1, [r5]
   1c644:	movw	r1, #63200	; 0xf6e0
   1c648:	str	r2, [r5, #8]
   1c64c:	movt	r1, #2
   1c650:	str	r3, [r1]
   1c654:	sub	sp, fp, #16
   1c658:	pop	{r4, r5, r6, sl, fp, pc}
   1c65c:	cmp	r2, #0
   1c660:	beq	1c690 <argp_parse@@Base+0x3c4c>
   1c664:	mvn	r3, #0
   1c668:	udiv	r3, r3, r2
   1c66c:	cmp	r3, r1
   1c670:	bcs	1c690 <argp_parse@@Base+0x3c4c>
   1c674:	push	{fp, lr}
   1c678:	mov	fp, sp
   1c67c:	bl	1153c <__errno_location@plt>
   1c680:	mov	r1, #12
   1c684:	str	r1, [r0]
   1c688:	mov	r0, #0
   1c68c:	pop	{fp, pc}
   1c690:	mul	r1, r2, r1
   1c694:	b	1abb4 <argp_parse@@Base+0x2170>
   1c698:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c69c:	mov	r7, r0
   1c6a0:	ldr	r6, [pc, #72]	; 1c6f0 <argp_parse@@Base+0x3cac>
   1c6a4:	ldr	r5, [pc, #72]	; 1c6f4 <argp_parse@@Base+0x3cb0>
   1c6a8:	add	r6, pc, r6
   1c6ac:	add	r5, pc, r5
   1c6b0:	sub	r6, r6, r5
   1c6b4:	mov	r8, r1
   1c6b8:	mov	r9, r2
   1c6bc:	bl	1130c <calloc@plt-0x20>
   1c6c0:	asrs	r6, r6, #2
   1c6c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c6c8:	mov	r4, #0
   1c6cc:	add	r4, r4, #1
   1c6d0:	ldr	r3, [r5], #4
   1c6d4:	mov	r2, r9
   1c6d8:	mov	r1, r8
   1c6dc:	mov	r0, r7
   1c6e0:	blx	r3
   1c6e4:	cmp	r6, r4
   1c6e8:	bne	1c6cc <argp_parse@@Base+0x3c88>
   1c6ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c6f0:	andeq	r2, r1, ip, asr r8
   1c6f4:	andeq	r2, r1, r4, asr r8
   1c6f8:	bx	lr

Disassembly of section .fini:

0001c6fc <.fini>:
   1c6fc:	push	{r3, lr}
   1c700:	pop	{r3, pc}
