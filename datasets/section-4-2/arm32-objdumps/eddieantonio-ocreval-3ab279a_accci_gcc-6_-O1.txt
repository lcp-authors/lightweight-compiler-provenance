
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

0001094c <.init>:
   1094c:	push	{r3, lr}
   10950:	bl	10b34 <getc@plt+0x48>
   10954:	pop	{r3, pc}

Disassembly of section .plt:

00010958 <calloc@plt-0x14>:
   10958:	push	{lr}		; (str lr, [sp, #-4]!)
   1095c:	ldr	lr, [pc, #4]	; 10968 <calloc@plt-0x4>
   10960:	add	lr, pc, lr
   10964:	ldr	pc, [lr, #8]!
   10968:	muleq	r1, r8, r6

0001096c <calloc@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #77824	; 0x13000
   10974:	ldr	pc, [ip, #1688]!	; 0x698

00010978 <strcmp@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #77824	; 0x13000
   10980:	ldr	pc, [ip, #1680]!	; 0x690

00010984 <printf@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #77824	; 0x13000
   1098c:	ldr	pc, [ip, #1672]!	; 0x688

00010990 <fopen@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #77824	; 0x13000
   10998:	ldr	pc, [ip, #1664]!	; 0x680

0001099c <free@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #77824	; 0x13000
   109a4:	ldr	pc, [ip, #1656]!	; 0x678

000109a8 <utf8proc_get_property@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #77824	; 0x13000
   109b0:	ldr	pc, [ip, #1648]!	; 0x670

000109b4 <fgets@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #77824	; 0x13000
   109bc:	ldr	pc, [ip, #1640]!	; 0x668

000109c0 <utf8proc_encode_char@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #77824	; 0x13000
   109c8:	ldr	pc, [ip, #1632]!	; 0x660

000109cc <strdup@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #77824	; 0x13000
   109d4:	ldr	pc, [ip, #1624]!	; 0x658

000109d8 <rewind@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #77824	; 0x13000
   109e0:	ldr	pc, [ip, #1616]!	; 0x650

000109e4 <unlink@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #77824	; 0x13000
   109ec:	ldr	pc, [ip, #1608]!	; 0x648

000109f0 <utf8proc_tolower@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #77824	; 0x13000
   109f8:	ldr	pc, [ip, #1600]!	; 0x640

000109fc <__xstat@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #77824	; 0x13000
   10a04:	ldr	pc, [ip, #1592]!	; 0x638

00010a08 <fwrite@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #77824	; 0x13000
   10a10:	ldr	pc, [ip, #1584]!	; 0x630

00010a14 <fread@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #77824	; 0x13000
   10a1c:	ldr	pc, [ip, #1576]!	; 0x628

00010a20 <utf8proc_iterate@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #77824	; 0x13000
   10a28:	ldr	pc, [ip, #1568]!	; 0x620

00010a2c <__libc_start_main@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #77824	; 0x13000
   10a34:	ldr	pc, [ip, #1560]!	; 0x618

00010a38 <__sysv_signal@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #77824	; 0x13000
   10a40:	ldr	pc, [ip, #1552]!	; 0x610

00010a44 <__gmon_start__@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #77824	; 0x13000
   10a4c:	ldr	pc, [ip, #1544]!	; 0x608

00010a50 <getpid@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #77824	; 0x13000
   10a58:	ldr	pc, [ip, #1536]!	; 0x600

00010a5c <exit@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #77824	; 0x13000
   10a64:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a68 <utf8proc_category@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #77824	; 0x13000
   10a70:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a74 <strlen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #77824	; 0x13000
   10a7c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a80 <fprintf@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #77824	; 0x13000
   10a88:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a8c <sqrt@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #77824	; 0x13000
   10a94:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a98 <__isoc99_sscanf@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #77824	; 0x13000
   10aa0:	ldr	pc, [ip, #1488]!	; 0x5d0

00010aa4 <fclose@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #77824	; 0x13000
   10aac:	ldr	pc, [ip, #1480]!	; 0x5c8

00010ab0 <sprintf@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #77824	; 0x13000
   10ab8:	ldr	pc, [ip, #1472]!	; 0x5c0

00010abc <utf8proc_errmsg@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #77824	; 0x13000
   10ac4:	ldr	pc, [ip, #1464]!	; 0x5b8

00010ac8 <fputs@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #77824	; 0x13000
   10ad0:	ldr	pc, [ip, #1456]!	; 0x5b0

00010ad4 <strncmp@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #77824	; 0x13000
   10adc:	ldr	pc, [ip, #1448]!	; 0x5a8

00010ae0 <abort@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #77824	; 0x13000
   10ae8:	ldr	pc, [ip, #1440]!	; 0x5a0

00010aec <getc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #77824	; 0x13000
   10af4:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00010af8 <error@@Base-0x163c>:
   10af8:	mov	fp, #0
   10afc:	mov	lr, #0
   10b00:	pop	{r1}		; (ldr r1, [sp], #4)
   10b04:	mov	r2, sp
   10b08:	push	{r2}		; (str r2, [sp, #-4]!)
   10b0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b10:	ldr	ip, [pc, #16]	; 10b28 <getc@plt+0x3c>
   10b14:	push	{ip}		; (str ip, [sp, #-4]!)
   10b18:	ldr	r0, [pc, #12]	; 10b2c <getc@plt+0x40>
   10b1c:	ldr	r3, [pc, #12]	; 10b30 <getc@plt+0x44>
   10b20:	bl	10a2c <__libc_start_main@plt>
   10b24:	bl	10ae0 <abort@plt>
   10b28:	andeq	r2, r1, r8, lsr #26
   10b2c:	andeq	r0, r1, r8, lsr #26
   10b30:	andeq	r2, r1, r8, asr #25
   10b34:	ldr	r3, [pc, #20]	; 10b50 <getc@plt+0x64>
   10b38:	ldr	r2, [pc, #20]	; 10b54 <getc@plt+0x68>
   10b3c:	add	r3, pc, r3
   10b40:	ldr	r2, [r3, r2]
   10b44:	cmp	r2, #0
   10b48:	bxeq	lr
   10b4c:	b	10a44 <__gmon_start__@plt>
   10b50:			; <UNDEFINED> instruction: 0x000134bc
   10b54:	muleq	r0, r0, r0
   10b58:	ldr	r3, [pc, #28]	; 10b7c <getc@plt+0x90>
   10b5c:	ldr	r0, [pc, #28]	; 10b80 <getc@plt+0x94>
   10b60:	sub	r3, r3, r0
   10b64:	cmp	r3, #6
   10b68:	bxls	lr
   10b6c:	ldr	r3, [pc, #16]	; 10b84 <getc@plt+0x98>
   10b70:	cmp	r3, #0
   10b74:	bxeq	lr
   10b78:	bx	r3
   10b7c:	andeq	r4, r2, r7, lsr #1
   10b80:	andeq	r4, r2, r4, lsr #1
   10b84:	andeq	r0, r0, r0
   10b88:	ldr	r1, [pc, #36]	; 10bb4 <getc@plt+0xc8>
   10b8c:	ldr	r0, [pc, #36]	; 10bb8 <getc@plt+0xcc>
   10b90:	sub	r1, r1, r0
   10b94:	asr	r1, r1, #2
   10b98:	add	r1, r1, r1, lsr #31
   10b9c:	asrs	r1, r1, #1
   10ba0:	bxeq	lr
   10ba4:	ldr	r3, [pc, #16]	; 10bbc <getc@plt+0xd0>
   10ba8:	cmp	r3, #0
   10bac:	bxeq	lr
   10bb0:	bx	r3
   10bb4:	andeq	r4, r2, r4, lsr #1
   10bb8:	andeq	r4, r2, r4, lsr #1
   10bbc:	andeq	r0, r0, r0
   10bc0:	push	{r4, lr}
   10bc4:	ldr	r4, [pc, #24]	; 10be4 <getc@plt+0xf8>
   10bc8:	ldrb	r3, [r4]
   10bcc:	cmp	r3, #0
   10bd0:	popne	{r4, pc}
   10bd4:	bl	10b58 <getc@plt+0x6c>
   10bd8:	mov	r3, #1
   10bdc:	strb	r3, [r4]
   10be0:	pop	{r4, pc}
   10be4:	strheq	r4, [r2], -r8
   10be8:	ldr	r0, [pc, #40]	; 10c18 <getc@plt+0x12c>
   10bec:	ldr	r3, [r0]
   10bf0:	cmp	r3, #0
   10bf4:	bne	10bfc <getc@plt+0x110>
   10bf8:	b	10b88 <getc@plt+0x9c>
   10bfc:	ldr	r3, [pc, #24]	; 10c1c <getc@plt+0x130>
   10c00:	cmp	r3, #0
   10c04:	beq	10bf8 <getc@plt+0x10c>
   10c08:	push	{r4, lr}
   10c0c:	blx	r3
   10c10:	pop	{r4, lr}
   10c14:	b	10b88 <getc@plt+0x9c>
   10c18:	andeq	r3, r2, r4, lsl #28
   10c1c:	andeq	r0, r0, r0
   10c20:	push	{r4, r5, r6, lr}
   10c24:	ldr	r4, [pc, #44]	; 10c58 <getc@plt+0x16c>
   10c28:	ldr	r5, [r4]
   10c2c:	ldr	r6, [r4, #4]
   10c30:	mov	r1, r0
   10c34:	mov	r0, r4
   10c38:	bl	11114 <getc@plt+0x628>
   10c3c:	ldr	r2, [r4, #4]
   10c40:	ldr	r1, [r4]
   10c44:	sub	r2, r2, r6
   10c48:	sub	r1, r1, r5
   10c4c:	ldr	r0, [pc, #8]	; 10c5c <getc@plt+0x170>
   10c50:	bl	11898 <getc@plt+0xdac>
   10c54:	pop	{r4, r5, r6, pc}
   10c58:	andseq	r4, r3, r0, lsr r5
   10c5c:			; <UNDEFINED> instruction: 0x009b6cf0
   10c60:	push	{r4, lr}
   10c64:	sub	sp, sp, #32
   10c68:	ldr	r4, [pc, #152]	; 10d08 <getc@plt+0x21c>
   10c6c:	add	r2, sp, #16
   10c70:	add	r1, sp, #24
   10c74:	mov	r0, r4
   10c78:	bl	118e4 <getc@plt+0xdf8>
   10c7c:	ldr	r1, [r4, #12]
   10c80:	ldr	r0, [pc, #132]	; 10d0c <getc@plt+0x220>
   10c84:	bl	10984 <printf@plt>
   10c88:	ldr	r4, [pc, #128]	; 10d10 <getc@plt+0x224>
   10c8c:	ldr	r1, [r4]
   10c90:	ldr	r0, [pc, #124]	; 10d14 <getc@plt+0x228>
   10c94:	bl	10984 <printf@plt>
   10c98:	ldr	r1, [r4, #4]
   10c9c:	ldr	r0, [pc, #116]	; 10d18 <getc@plt+0x22c>
   10ca0:	bl	10984 <printf@plt>
   10ca4:	ldr	r2, [r4]
   10ca8:	ldr	r3, [r4, #4]
   10cac:	sub	r3, r2, r3
   10cb0:	vmov	s14, r3
   10cb4:	vcvt.f64.s32	d7, s14
   10cb8:	vldr	d6, [pc, #64]	; 10d00 <getc@plt+0x214>
   10cbc:	vmul.f64	d7, d7, d6
   10cc0:	vmov	s13, r2
   10cc4:	vcvt.f64.s32	d6, s13
   10cc8:	vdiv.f64	d5, d7, d6
   10ccc:	vmov	r2, r3, d5
   10cd0:	ldr	r0, [pc, #68]	; 10d1c <getc@plt+0x230>
   10cd4:	bl	10984 <printf@plt>
   10cd8:	ldr	r3, [pc, #64]	; 10d20 <getc@plt+0x234>
   10cdc:	str	r3, [sp, #8]
   10ce0:	ldrd	r2, [sp, #16]
   10ce4:	strd	r2, [sp]
   10ce8:	ldrd	r2, [sp, #24]
   10cec:	ldr	r0, [pc, #48]	; 10d24 <getc@plt+0x238>
   10cf0:	bl	10984 <printf@plt>
   10cf4:	add	sp, sp, #32
   10cf8:	pop	{r4, pc}
   10cfc:	nop			; (mov r0, r0)
   10d00:	andeq	r0, r0, r0
   10d04:	subsmi	r0, r9, r0
   10d08:			; <UNDEFINED> instruction: 0x009b6cf0
   10d0c:	andeq	r2, r1, r8, lsr sp
   10d10:	andseq	r4, r3, r0, lsr r5
   10d14:	andeq	r2, r1, r0, asr sp
   10d18:	andeq	r2, r1, r4, ror #26
   10d1c:	andeq	r2, r1, r4, ror sp
   10d20:	andeq	r2, r1, r0, lsr #27
   10d24:	andeq	r2, r1, r8, lsl #27
   10d28:	push	{r4, r5, lr}
   10d2c:	sub	sp, sp, #12
   10d30:	add	ip, sp, #8
   10d34:	str	r0, [ip, #-4]!
   10d38:	mov	r5, r1
   10d3c:	mov	r3, #0
   10d40:	ldr	r2, [pc, #72]	; 10d90 <getc@plt+0x2a4>
   10d44:	mov	r0, ip
   10d48:	bl	12274 <error@@Base+0x140>
   10d4c:	ldr	r3, [sp, #4]
   10d50:	cmp	r3, #1
   10d54:	ble	10d88 <getc@plt+0x29c>
   10d58:	cmp	r3, #0
   10d5c:	subgt	r5, r5, #4
   10d60:	movgt	r4, #0
   10d64:	ble	10d80 <getc@plt+0x294>
   10d68:	ldr	r0, [r5, #4]!
   10d6c:	bl	10c20 <getc@plt+0x134>
   10d70:	add	r4, r4, #1
   10d74:	ldr	r3, [sp, #4]
   10d78:	cmp	r3, r4
   10d7c:	bgt	10d68 <getc@plt+0x27c>
   10d80:	bl	10c60 <getc@plt+0x174>
   10d84:	bl	120dc <getc@plt+0x15f0>
   10d88:	ldr	r0, [pc, #4]	; 10d94 <getc@plt+0x2a8>
   10d8c:	bl	12134 <error@@Base>
   10d90:	ldrdeq	r2, [r1], -r4
   10d94:	andeq	r2, r1, r8, lsl #28
   10d98:	push	{r4, lr}
   10d9c:	mov	r2, r0
   10da0:	mov	r1, #99	; 0x63
   10da4:	ldr	r0, [pc, #12]	; 10db8 <getc@plt+0x2cc>
   10da8:	bl	109b4 <fgets@plt>
   10dac:	adds	r0, r0, #0
   10db0:	movne	r0, #1
   10db4:	pop	{r4, pc}
   10db8:	strheq	r4, [r2], -ip
   10dbc:	push	{r4, r5, r6, lr}
   10dc0:	mov	r4, r1
   10dc4:	mov	r5, r2
   10dc8:	bl	10d98 <getc@plt+0x2ac>
   10dcc:	cmp	r0, #0
   10dd0:	popeq	{r4, r5, r6, pc}
   10dd4:	mov	r2, r4
   10dd8:	ldr	r1, [pc, #32]	; 10e00 <getc@plt+0x314>
   10ddc:	ldr	r0, [pc, #32]	; 10e04 <getc@plt+0x318>
   10de0:	bl	10a98 <__isoc99_sscanf@plt>
   10de4:	cmp	r0, #1
   10de8:	ldreq	r3, [r5]
   10dec:	ldreq	r2, [r4]
   10df0:	addeq	r3, r3, r2
   10df4:	streq	r3, [r5]
   10df8:	movne	r0, #0
   10dfc:	pop	{r4, r5, r6, pc}
   10e00:	andeq	r2, r1, ip, lsr #28
   10e04:	strheq	r4, [r2], -ip
   10e08:	push	{r4, lr}
   10e0c:	sub	sp, sp, #24
   10e10:	mov	r4, r1
   10e14:	bl	10d98 <getc@plt+0x2ac>
   10e18:	cmp	r0, #0
   10e1c:	bne	10e28 <getc@plt+0x33c>
   10e20:	add	sp, sp, #24
   10e24:	pop	{r4, pc}
   10e28:	add	r3, sp, #20
   10e2c:	str	r3, [sp, #4]
   10e30:	add	r3, sp, #16
   10e34:	str	r3, [sp]
   10e38:	add	r3, sp, #12
   10e3c:	add	r2, sp, #8
   10e40:	ldr	r1, [pc, #88]	; 10ea0 <getc@plt+0x3b4>
   10e44:	ldr	r0, [pc, #88]	; 10ea4 <getc@plt+0x3b8>
   10e48:	bl	10a98 <__isoc99_sscanf@plt>
   10e4c:	cmp	r0, #4
   10e50:	movne	r0, #0
   10e54:	bne	10e20 <getc@plt+0x334>
   10e58:	ldr	r3, [r4]
   10e5c:	ldr	r2, [sp, #8]
   10e60:	add	r3, r3, r2
   10e64:	str	r3, [r4]
   10e68:	ldr	r3, [r4, #4]
   10e6c:	ldr	r2, [sp, #12]
   10e70:	add	r3, r3, r2
   10e74:	str	r3, [r4, #4]
   10e78:	ldr	r3, [r4, #8]
   10e7c:	ldr	r2, [sp, #16]
   10e80:	add	r3, r3, r2
   10e84:	str	r3, [r4, #8]
   10e88:	ldr	r3, [r4, #12]
   10e8c:	ldr	r2, [sp, #20]
   10e90:	add	r3, r3, r2
   10e94:	str	r3, [r4, #12]
   10e98:	mov	r0, #1
   10e9c:	b	10e20 <getc@plt+0x334>
   10ea0:	andeq	r2, r1, r0, lsr #28
   10ea4:	strheq	r4, [r2], -ip
   10ea8:	push	{lr}		; (str lr, [sp, #-4]!)
   10eac:	sub	sp, sp, #20
   10eb0:	ldr	r3, [r1, #4]
   10eb4:	ldr	ip, [r1]
   10eb8:	str	r2, [sp, #8]
   10ebc:	ldr	r2, [r1, #12]
   10ec0:	str	r2, [sp, #4]
   10ec4:	ldr	r2, [r1, #8]
   10ec8:	str	r2, [sp]
   10ecc:	mov	r2, ip
   10ed0:	ldr	r1, [pc, #8]	; 10ee0 <getc@plt+0x3f4>
   10ed4:	bl	10a80 <fprintf@plt>
   10ed8:	add	sp, sp, #20
   10edc:	pop	{pc}		; (ldr pc, [sp], #4)
   10ee0:	andeq	r2, r1, r0, lsr lr
   10ee4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ee8:	sub	sp, sp, #12
   10eec:	str	r1, [sp, #4]
   10ef0:	cmp	r2, #0
   10ef4:	beq	10f28 <getc@plt+0x43c>
   10ef8:	vldr	s15, [sp, #4]
   10efc:	vcvt.f64.s32	d7, s15
   10f00:	vldr	d6, [pc, #56]	; 10f40 <getc@plt+0x454>
   10f04:	vmul.f64	d7, d7, d6
   10f08:	vmov	s13, r2
   10f0c:	vcvt.f64.s32	d6, s13
   10f10:	vdiv.f64	d5, d7, d6
   10f14:	vmov	r2, r3, d5
   10f18:	ldr	r1, [pc, #40]	; 10f48 <getc@plt+0x45c>
   10f1c:	bl	10a80 <fprintf@plt>
   10f20:	add	sp, sp, #12
   10f24:	pop	{pc}		; (ldr pc, [sp], #4)
   10f28:	mov	r3, r0
   10f2c:	mov	r2, #8
   10f30:	mov	r1, #1
   10f34:	ldr	r0, [pc, #16]	; 10f4c <getc@plt+0x460>
   10f38:	bl	10a08 <fwrite@plt>
   10f3c:	b	10f20 <getc@plt+0x434>
   10f40:	andeq	r0, r0, r0
   10f44:	subsmi	r0, r9, r0
   10f48:	andeq	r2, r1, r8, asr lr
   10f4c:	andeq	r2, r1, ip, asr #28
   10f50:	ldr	r2, [r0, #12]
   10f54:	ldr	r3, [r1, #12]
   10f58:	cmp	r2, r3
   10f5c:	beq	10f68 <getc@plt+0x47c>
   10f60:	sub	r0, r3, r2
   10f64:	bx	lr
   10f68:	ldr	r2, [r0, #16]
   10f6c:	ldr	r3, [r1, #16]
   10f70:	cmp	r2, r3
   10f74:	beq	10f80 <getc@plt+0x494>
   10f78:	sub	r0, r3, r2
   10f7c:	bx	lr
   10f80:	push	{r4, lr}
   10f84:	ldr	r1, [r1, #8]
   10f88:	ldr	r0, [r0, #8]
   10f8c:	bl	11f84 <getc@plt+0x1498>
   10f90:	pop	{r4, pc}
   10f94:	push	{r4, r5, r6, r7, lr}
   10f98:	sub	sp, sp, #20
   10f9c:	mov	r5, r0
   10fa0:	mov	r4, r1
   10fa4:	mov	r6, r2
   10fa8:	mov	r7, r3
   10fac:	ldr	r3, [r1, #4]
   10fb0:	ldr	r2, [r1]
   10fb4:	ldr	r1, [pc, #96]	; 1101c <getc@plt+0x530>
   10fb8:	bl	10a80 <fprintf@plt>
   10fbc:	ldr	r3, [r4]
   10fc0:	ldr	r1, [r4, #4]
   10fc4:	mov	r2, r3
   10fc8:	sub	r1, r3, r1
   10fcc:	mov	r0, r5
   10fd0:	bl	10ee4 <getc@plt+0x3f8>
   10fd4:	cmp	r6, #0
   10fd8:	beq	10ff4 <getc@plt+0x508>
   10fdc:	mov	r2, r6
   10fe0:	ldr	r1, [pc, #56]	; 11020 <getc@plt+0x534>
   10fe4:	mov	r0, r5
   10fe8:	bl	10a80 <fprintf@plt>
   10fec:	add	sp, sp, #20
   10ff0:	pop	{r4, r5, r6, r7, pc}
   10ff4:	mov	r3, #1
   10ff8:	add	r2, sp, #4
   10ffc:	mov	r1, r7
   11000:	mov	r0, #0
   11004:	bl	128bc <error@@Base+0x788>
   11008:	add	r2, sp, #4
   1100c:	ldr	r1, [pc, #16]	; 11024 <getc@plt+0x538>
   11010:	mov	r0, r5
   11014:	bl	10a80 <fprintf@plt>
   11018:	b	10fec <getc@plt+0x500>
   1101c:	andeq	r2, r1, r0, ror #28
   11020:	andeq	r2, r1, r0, lsl pc
   11024:	andeq	r2, r1, ip, ror #28
   11028:	push	{r4, r5, r6, r7, r8, lr}
   1102c:	mov	r4, r0
   11030:	mov	r7, r1
   11034:	mov	r6, r2
   11038:	mov	r5, r3
   1103c:	mov	r0, r1
   11040:	bl	11e48 <getc@plt+0x135c>
   11044:	add	r0, r4, r0, lsl #3
   11048:	ldr	r3, [r0, #68]	; 0x44
   1104c:	add	r3, r3, r6
   11050:	str	r3, [r0, #68]	; 0x44
   11054:	ldr	r3, [r0, #72]	; 0x48
   11058:	add	r3, r3, r5
   1105c:	str	r3, [r0, #72]	; 0x48
   11060:	ldr	r3, [r4, #2116]	; 0x844
   11064:	add	r3, r3, r6
   11068:	str	r3, [r4, #2116]	; 0x844
   1106c:	ldr	r3, [r4, #2120]	; 0x848
   11070:	add	r3, r3, r5
   11074:	str	r3, [r4, #2120]	; 0x848
   11078:	add	r4, r4, r7, lsl #3
   1107c:	add	r4, r4, #8192	; 0x2000
   11080:	ldr	r2, [r4, #1988]	; 0x7c4
   11084:	add	r2, r2, r6
   11088:	str	r2, [r4, #1988]	; 0x7c4
   1108c:	ldr	r3, [r4, #1992]	; 0x7c8
   11090:	add	r3, r3, r5
   11094:	str	r3, [r4, #1992]	; 0x7c8
   11098:	pop	{r4, r5, r6, r7, r8, pc}
   1109c:	push	{r4, r5, r6, r7, r8, lr}
   110a0:	mov	r7, r1
   110a4:	mov	r6, r2
   110a8:	mov	r5, r3
   110ac:	add	r0, r0, #2112	; 0x840
   110b0:	add	r4, r0, #12
   110b4:	mov	r0, r4
   110b8:	bl	11b7c <getc@plt+0x1090>
   110bc:	cmp	r0, #0
   110c0:	beq	110e0 <getc@plt+0x5f4>
   110c4:	ldr	r2, [r0, #12]
   110c8:	add	r2, r2, r6
   110cc:	str	r2, [r0, #12]
   110d0:	ldr	r3, [r0, #16]
   110d4:	add	r3, r3, r5
   110d8:	str	r3, [r0, #16]
   110dc:	pop	{r4, r5, r6, r7, r8, pc}
   110e0:	mov	r1, #20
   110e4:	mov	r0, #1
   110e8:	bl	12170 <error@@Base+0x3c>
   110ec:	mov	r8, r0
   110f0:	mov	r0, r7
   110f4:	bl	109cc <strdup@plt>
   110f8:	str	r0, [r8, #8]
   110fc:	str	r6, [r8, #12]
   11100:	str	r5, [r8, #16]
   11104:	mov	r1, r8
   11108:	mov	r0, r4
   1110c:	bl	11bc4 <getc@plt+0x10d8>
   11110:	pop	{r4, r5, r6, r7, r8, pc}
   11114:	push	{r4, r5, r6, r7, r8, r9, lr}
   11118:	sub	sp, sp, #28
   1111c:	mov	r5, r0
   11120:	mov	r6, r1
   11124:	ldr	r1, [pc, #716]	; 113f8 <getc@plt+0x90c>
   11128:	mov	r0, r6
   1112c:	bl	12208 <error@@Base+0xd4>
   11130:	mov	r4, r0
   11134:	bl	10d98 <getc@plt+0x2ac>
   11138:	cmp	r0, #0
   1113c:	beq	113e4 <getc@plt+0x8f8>
   11140:	mov	r2, #40	; 0x28
   11144:	ldr	r1, [pc, #688]	; 113fc <getc@plt+0x910>
   11148:	ldr	r0, [pc, #688]	; 11400 <getc@plt+0x914>
   1114c:	bl	10ad4 <strncmp@plt>
   11150:	cmp	r0, #0
   11154:	bne	113e4 <getc@plt+0x8f8>
   11158:	mov	r0, r4
   1115c:	bl	10d98 <getc@plt+0x2ac>
   11160:	cmp	r0, #0
   11164:	beq	113e4 <getc@plt+0x8f8>
   11168:	ldr	r1, [pc, #660]	; 11404 <getc@plt+0x918>
   1116c:	ldr	r0, [pc, #652]	; 11400 <getc@plt+0x914>
   11170:	bl	10978 <strcmp@plt>
   11174:	cmp	r0, #0
   11178:	bne	113e4 <getc@plt+0x8f8>
   1117c:	mov	r2, r5
   11180:	add	r1, sp, #20
   11184:	mov	r0, r4
   11188:	bl	10dbc <getc@plt+0x2d0>
   1118c:	cmp	r0, #0
   11190:	beq	113e4 <getc@plt+0x8f8>
   11194:	add	r2, r5, #4
   11198:	add	r1, sp, #16
   1119c:	mov	r0, r4
   111a0:	bl	10dbc <getc@plt+0x2d0>
   111a4:	cmp	r0, #0
   111a8:	beq	113e4 <getc@plt+0x8f8>
   111ac:	mov	r0, r4
   111b0:	bl	10d98 <getc@plt+0x2ac>
   111b4:	cmp	r0, #0
   111b8:	beq	113e4 <getc@plt+0x8f8>
   111bc:	mov	r0, r4
   111c0:	bl	10d98 <getc@plt+0x2ac>
   111c4:	cmp	r0, #0
   111c8:	beq	113e4 <getc@plt+0x8f8>
   111cc:	add	r2, r5, #8
   111d0:	add	r1, sp, #12
   111d4:	mov	r0, r4
   111d8:	bl	10dbc <getc@plt+0x2d0>
   111dc:	cmp	r0, #0
   111e0:	beq	113e4 <getc@plt+0x8f8>
   111e4:	add	r2, r5, #12
   111e8:	add	r1, sp, #12
   111ec:	mov	r0, r4
   111f0:	bl	10dbc <getc@plt+0x2d0>
   111f4:	cmp	r0, #0
   111f8:	beq	113e4 <getc@plt+0x8f8>
   111fc:	add	r2, r5, #16
   11200:	add	r1, sp, #12
   11204:	mov	r0, r4
   11208:	bl	10dbc <getc@plt+0x2d0>
   1120c:	cmp	r0, #0
   11210:	beq	113e4 <getc@plt+0x8f8>
   11214:	mov	r0, r4
   11218:	bl	10d98 <getc@plt+0x2ac>
   1121c:	cmp	r0, #0
   11220:	beq	113e4 <getc@plt+0x8f8>
   11224:	mov	r0, r4
   11228:	bl	10d98 <getc@plt+0x2ac>
   1122c:	cmp	r0, #0
   11230:	beq	113e4 <getc@plt+0x8f8>
   11234:	mov	r0, r4
   11238:	bl	10d98 <getc@plt+0x2ac>
   1123c:	cmp	r0, #0
   11240:	beq	113e4 <getc@plt+0x8f8>
   11244:	mov	r0, r4
   11248:	bl	10d98 <getc@plt+0x2ac>
   1124c:	cmp	r0, #0
   11250:	beq	113e4 <getc@plt+0x8f8>
   11254:	add	r1, r5, #20
   11258:	mov	r0, r4
   1125c:	bl	10e08 <getc@plt+0x31c>
   11260:	cmp	r0, #0
   11264:	beq	113e4 <getc@plt+0x8f8>
   11268:	add	r1, r5, #36	; 0x24
   1126c:	mov	r0, r4
   11270:	bl	10e08 <getc@plt+0x31c>
   11274:	cmp	r0, #0
   11278:	beq	113e4 <getc@plt+0x8f8>
   1127c:	add	r1, r5, #52	; 0x34
   11280:	mov	r0, r4
   11284:	bl	10e08 <getc@plt+0x31c>
   11288:	cmp	r0, #0
   1128c:	beq	113e4 <getc@plt+0x8f8>
   11290:	mov	r0, r4
   11294:	bl	10d98 <getc@plt+0x2ac>
   11298:	cmp	r0, #0
   1129c:	beq	113e4 <getc@plt+0x8f8>
   112a0:	ldr	r6, [pc, #344]	; 11400 <getc@plt+0x914>
   112a4:	mov	r0, r4
   112a8:	bl	10d98 <getc@plt+0x2ac>
   112ac:	cmp	r0, #0
   112b0:	beq	112c0 <getc@plt+0x7d4>
   112b4:	ldrb	r3, [r6]
   112b8:	cmp	r3, #10
   112bc:	bne	112a4 <getc@plt+0x7b8>
   112c0:	ldr	r3, [sp, #16]
   112c4:	cmp	r3, #0
   112c8:	ble	1132c <getc@plt+0x840>
   112cc:	mov	r0, r4
   112d0:	bl	10d98 <getc@plt+0x2ac>
   112d4:	cmp	r0, #0
   112d8:	beq	1132c <getc@plt+0x840>
   112dc:	ldr	r8, [pc, #292]	; 11408 <getc@plt+0x91c>
   112e0:	ldr	r7, [pc, #280]	; 11400 <getc@plt+0x914>
   112e4:	add	r6, r7, #20
   112e8:	b	1131c <getc@plt+0x830>
   112ec:	add	r3, sp, #8
   112f0:	add	r2, sp, #12
   112f4:	mov	r1, r8
   112f8:	mov	r0, r7
   112fc:	bl	10a98 <__isoc99_sscanf@plt>
   11300:	cmp	r0, #2
   11304:	bne	1132c <getc@plt+0x840>
   11308:	ldr	r3, [sp, #8]
   1130c:	ldr	r2, [sp, #12]
   11310:	mov	r1, r6
   11314:	mov	r0, r5
   11318:	bl	1109c <getc@plt+0x5b0>
   1131c:	mov	r0, r4
   11320:	bl	10d98 <getc@plt+0x2ac>
   11324:	cmp	r0, #0
   11328:	bne	112ec <getc@plt+0x800>
   1132c:	ldr	r3, [sp, #20]
   11330:	cmp	r3, #0
   11334:	ble	113d4 <getc@plt+0x8e8>
   11338:	mov	r0, r4
   1133c:	bl	10d98 <getc@plt+0x2ac>
   11340:	cmp	r0, #0
   11344:	beq	113d4 <getc@plt+0x8e8>
   11348:	ldr	r7, [pc, #184]	; 11408 <getc@plt+0x91c>
   1134c:	ldr	r6, [pc, #172]	; 11400 <getc@plt+0x914>
   11350:	ldr	r9, [pc, #180]	; 1140c <getc@plt+0x920>
   11354:	add	r8, r6, #31
   11358:	b	113c4 <getc@plt+0x8d8>
   1135c:	ldrb	r3, [r6, #30]
   11360:	str	r3, [sp, #4]
   11364:	b	113b0 <getc@plt+0x8c4>
   11368:	add	r3, sp, #8
   1136c:	add	r2, sp, #12
   11370:	mov	r1, r7
   11374:	mov	r0, r6
   11378:	bl	10a98 <__isoc99_sscanf@plt>
   1137c:	cmp	r0, #2
   11380:	bne	113d4 <getc@plt+0x8e8>
   11384:	ldrb	r3, [r6, #31]
   11388:	cmp	r3, #125	; 0x7d
   1138c:	beq	1135c <getc@plt+0x870>
   11390:	cmp	r3, #92	; 0x5c
   11394:	moveq	r3, #10
   11398:	streq	r3, [sp, #4]
   1139c:	beq	113b0 <getc@plt+0x8c4>
   113a0:	add	r2, sp, #4
   113a4:	mov	r1, r9
   113a8:	mov	r0, r8
   113ac:	bl	10a98 <__isoc99_sscanf@plt>
   113b0:	ldr	r3, [sp, #8]
   113b4:	ldr	r2, [sp, #12]
   113b8:	ldr	r1, [sp, #4]
   113bc:	mov	r0, r5
   113c0:	bl	11028 <getc@plt+0x53c>
   113c4:	mov	r0, r4
   113c8:	bl	10d98 <getc@plt+0x2ac>
   113cc:	cmp	r0, #0
   113d0:	bne	11368 <getc@plt+0x87c>
   113d4:	mov	r0, r4
   113d8:	bl	12000 <getc@plt+0x1514>
   113dc:	add	sp, sp, #28
   113e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   113e4:	ldr	r1, [pc, #36]	; 11410 <getc@plt+0x924>
   113e8:	cmp	r6, #0
   113ec:	movne	r1, r6
   113f0:	ldr	r0, [pc, #28]	; 11414 <getc@plt+0x928>
   113f4:	bl	121c0 <error@@Base+0x8c>
   113f8:	andeq	r2, r1, r0, lsl #29
   113fc:	andeq	r2, r1, r4, lsl #29
   11400:	strheq	r4, [r2], -ip
   11404:			; <UNDEFINED> instruction: 0x00012eb0
   11408:	andeq	r2, r1, r8, lsr #28
   1140c:	ldrdeq	r2, [r1], -ip
   11410:	andeq	r2, r1, r8, ror lr
   11414:	andeq	r2, r1, r0, ror #29
   11418:	push	{r4, r5, r6, r7, r8, lr}
   1141c:	sub	sp, sp, #8
   11420:	mov	r6, r0
   11424:	mov	r0, r1
   11428:	ldr	r1, [pc, #668]	; 116cc <getc@plt+0xbe0>
   1142c:	bl	12208 <error@@Base+0xd4>
   11430:	mov	r7, r0
   11434:	ldr	r3, [pc, #660]	; 116d0 <getc@plt+0xbe4>
   11438:	ldr	r2, [pc, #660]	; 116d4 <getc@plt+0xbe8>
   1143c:	ldr	r1, [pc, #660]	; 116d8 <getc@plt+0xbec>
   11440:	bl	10a80 <fprintf@plt>
   11444:	ldr	r4, [pc, #656]	; 116dc <getc@plt+0xbf0>
   11448:	ldr	r3, [pc, #656]	; 116e0 <getc@plt+0xbf4>
   1144c:	ldr	r2, [r6]
   11450:	mov	r1, r4
   11454:	mov	r0, r7
   11458:	bl	10a80 <fprintf@plt>
   1145c:	ldr	r3, [pc, #640]	; 116e4 <getc@plt+0xbf8>
   11460:	ldr	r2, [r6, #4]
   11464:	mov	r1, r4
   11468:	mov	r0, r7
   1146c:	bl	10a80 <fprintf@plt>
   11470:	ldr	r3, [r6]
   11474:	ldr	r1, [r6, #4]
   11478:	mov	r2, r3
   1147c:	sub	r1, r3, r1
   11480:	mov	r0, r7
   11484:	bl	10ee4 <getc@plt+0x3f8>
   11488:	ldr	r1, [pc, #600]	; 116e8 <getc@plt+0xbfc>
   1148c:	mov	r0, r7
   11490:	bl	10a80 <fprintf@plt>
   11494:	ldr	r3, [pc, #592]	; 116ec <getc@plt+0xc00>
   11498:	ldr	r2, [r6, #8]
   1149c:	mov	r1, r4
   114a0:	mov	r0, r7
   114a4:	bl	10a80 <fprintf@plt>
   114a8:	ldr	r3, [pc, #576]	; 116f0 <getc@plt+0xc04>
   114ac:	ldr	r2, [r6, #12]
   114b0:	mov	r1, r4
   114b4:	mov	r0, r7
   114b8:	bl	10a80 <fprintf@plt>
   114bc:	ldr	r3, [pc, #560]	; 116f4 <getc@plt+0xc08>
   114c0:	ldr	r2, [r6, #16]
   114c4:	mov	r1, r4
   114c8:	mov	r0, r7
   114cc:	bl	10a80 <fprintf@plt>
   114d0:	ldr	r1, [r6, #8]
   114d4:	ldr	r3, [r6, #12]
   114d8:	ldr	r2, [r6]
   114dc:	add	r1, r1, r3
   114e0:	mov	r0, r7
   114e4:	bl	10ee4 <getc@plt+0x3f8>
   114e8:	ldr	r1, [pc, #520]	; 116f8 <getc@plt+0xc0c>
   114ec:	mov	r0, r7
   114f0:	bl	10a80 <fprintf@plt>
   114f4:	ldr	r3, [r6]
   114f8:	ldr	r1, [r6, #48]	; 0x30
   114fc:	mov	r2, r3
   11500:	sub	r1, r3, r1
   11504:	mov	r0, r7
   11508:	bl	10ee4 <getc@plt+0x3f8>
   1150c:	ldr	r1, [pc, #488]	; 116fc <getc@plt+0xc10>
   11510:	mov	r0, r7
   11514:	bl	10a80 <fprintf@plt>
   11518:	mov	r3, r7
   1151c:	mov	r2, #37	; 0x25
   11520:	mov	r1, #1
   11524:	ldr	r0, [pc, #468]	; 11700 <getc@plt+0xc14>
   11528:	bl	10a08 <fwrite@plt>
   1152c:	ldr	r2, [pc, #464]	; 11704 <getc@plt+0xc18>
   11530:	add	r1, r6, #20
   11534:	mov	r0, r7
   11538:	bl	10ea8 <getc@plt+0x3bc>
   1153c:	ldr	r2, [pc, #452]	; 11708 <getc@plt+0xc1c>
   11540:	add	r1, r6, #36	; 0x24
   11544:	mov	r0, r7
   11548:	bl	10ea8 <getc@plt+0x3bc>
   1154c:	ldr	r2, [pc, #440]	; 1170c <getc@plt+0xc20>
   11550:	add	r1, r6, #52	; 0x34
   11554:	mov	r0, r7
   11558:	bl	10ea8 <getc@plt+0x3bc>
   1155c:	ldr	r1, [pc, #428]	; 11710 <getc@plt+0xc24>
   11560:	mov	r0, r7
   11564:	bl	10a80 <fprintf@plt>
   11568:	add	r5, r6, #68	; 0x44
   1156c:	mov	r4, #0
   11570:	mov	r8, r4
   11574:	b	11588 <getc@plt+0xa9c>
   11578:	add	r4, r4, #1
   1157c:	add	r5, r5, #8
   11580:	cmp	r4, #256	; 0x100
   11584:	beq	115b4 <getc@plt+0xac8>
   11588:	ldr	r3, [r5]
   1158c:	cmp	r3, #0
   11590:	ble	11578 <getc@plt+0xa8c>
   11594:	mov	r0, r4
   11598:	bl	11e7c <getc@plt+0x1390>
   1159c:	mov	r3, r8
   115a0:	mov	r2, r0
   115a4:	mov	r1, r5
   115a8:	mov	r0, r7
   115ac:	bl	10f94 <getc@plt+0x4a8>
   115b0:	b	11578 <getc@plt+0xa8c>
   115b4:	add	r1, r6, #2112	; 0x840
   115b8:	mov	r3, #0
   115bc:	ldr	r2, [pc, #328]	; 1170c <getc@plt+0xc20>
   115c0:	add	r1, r1, #4
   115c4:	mov	r0, r7
   115c8:	bl	10f94 <getc@plt+0x4a8>
   115cc:	ldr	r3, [r6, #4]
   115d0:	cmp	r3, #0
   115d4:	ble	11658 <getc@plt+0xb6c>
   115d8:	add	r0, r6, #2112	; 0x840
   115dc:	add	r0, r0, #12
   115e0:	bl	11c6c <getc@plt+0x1180>
   115e4:	add	r4, r6, #8192	; 0x2000
   115e8:	ldr	r2, [pc, #292]	; 11714 <getc@plt+0xc28>
   115ec:	ldr	r1, [r4, #1980]	; 0x7bc
   115f0:	ldr	r0, [r4, #1984]	; 0x7c0
   115f4:	bl	11868 <getc@plt+0xd7c>
   115f8:	mov	r3, r7
   115fc:	mov	r2, #39	; 0x27
   11600:	mov	r1, #1
   11604:	ldr	r0, [pc, #268]	; 11718 <getc@plt+0xc2c>
   11608:	bl	10a08 <fwrite@plt>
   1160c:	ldr	r3, [r4, #1984]	; 0x7c0
   11610:	cmp	r3, #0
   11614:	ble	11658 <getc@plt+0xb6c>
   11618:	mov	r4, #0
   1161c:	add	r5, r6, #8192	; 0x2000
   11620:	ldr	r8, [pc, #244]	; 1171c <getc@plt+0xc30>
   11624:	ldr	r3, [r5, #1980]	; 0x7bc
   11628:	ldr	r1, [r3, r4, lsl #2]
   1162c:	ldr	r3, [r1, #16]
   11630:	ldr	r2, [r1, #12]
   11634:	ldr	r1, [r1, #8]
   11638:	str	r1, [sp]
   1163c:	mov	r1, r8
   11640:	mov	r0, r7
   11644:	bl	10a80 <fprintf@plt>
   11648:	add	r4, r4, #1
   1164c:	ldr	r3, [r5, #1984]	; 0x7c0
   11650:	cmp	r3, r4
   11654:	bgt	11624 <getc@plt+0xb38>
   11658:	ldr	r3, [r6]
   1165c:	cmp	r3, #0
   11660:	ble	116bc <getc@plt+0xbd0>
   11664:	ldr	r1, [pc, #164]	; 11710 <getc@plt+0xc24>
   11668:	mov	r0, r7
   1166c:	bl	10a80 <fprintf@plt>
   11670:	add	r4, r6, #10176	; 0x27c0
   11674:	add	r4, r4, #4
   11678:	mov	r5, #0
   1167c:	mov	r8, r5
   11680:	ldr	r6, [pc, #152]	; 11720 <getc@plt+0xc34>
   11684:	b	11698 <getc@plt+0xbac>
   11688:	add	r5, r5, #1
   1168c:	add	r4, r4, #8
   11690:	cmp	r5, r6
   11694:	beq	116bc <getc@plt+0xbd0>
   11698:	ldr	r3, [r4]
   1169c:	cmp	r3, #0
   116a0:	ble	11688 <getc@plt+0xb9c>
   116a4:	mov	r3, r5
   116a8:	mov	r2, r8
   116ac:	mov	r1, r4
   116b0:	mov	r0, r7
   116b4:	bl	10f94 <getc@plt+0x4a8>
   116b8:	b	11688 <getc@plt+0xb9c>
   116bc:	mov	r0, r7
   116c0:	bl	12000 <getc@plt+0x1514>
   116c4:	add	sp, sp, #8
   116c8:	pop	{r4, r5, r6, r7, r8, pc}
   116cc:	strdeq	r2, [r1], -r4
   116d0:			; <UNDEFINED> instruction: 0x00012eb0
   116d4:	andeq	r2, r1, r4, lsl #29
   116d8:	strdeq	r2, [r1], -r8
   116dc:	andeq	r2, r1, ip, lsl #30
   116e0:	andeq	r2, r1, r0, lsl #30
   116e4:	andeq	r2, r1, r8, lsl pc
   116e8:	andeq	r2, r1, r0, lsr #30
   116ec:	andeq	r2, r1, r0, lsr pc
   116f0:	andeq	r2, r1, r4, asr #30
   116f4:	andeq	r2, r1, r4, asr pc
   116f8:	andeq	r2, r1, r0, ror #30
   116fc:	andeq	r2, r1, r8, ror pc
   11700:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11704:	andeq	r2, r1, r0, asr #31
   11708:	andeq	r2, r1, r8, asr #31
   1170c:	ldrdeq	r2, [r1], -r4
   11710:	ldrdeq	r2, [r1], -ip
   11714:	andeq	r0, r1, r0, asr pc
   11718:	strdeq	r2, [r1], -ip
   1171c:	andeq	r3, r1, r4, lsr #32
   11720:			; <UNDEFINED> instruction: 0x0010ffff
   11724:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11728:	mov	sl, r0
   1172c:	mov	r9, r1
   11730:	ldr	r3, [pc, #300]	; 11864 <getc@plt+0xd78>
   11734:	ldr	r3, [r3]
   11738:	ldr	r8, [r3, r0, lsl #2]
   1173c:	cmp	r0, r1
   11740:	movge	r3, r1
   11744:	movge	r4, r0
   11748:	bge	11828 <getc@plt+0xd3c>
   1174c:	mov	r4, r0
   11750:	mov	r3, r1
   11754:	ldr	r6, [pc, #264]	; 11864 <getc@plt+0xd78>
   11758:	b	117dc <getc@plt+0xcf0>
   1175c:	mov	r5, r3
   11760:	cmp	r4, r5
   11764:	beq	11820 <getc@plt+0xd34>
   11768:	ldr	r2, [r6]
   1176c:	add	r3, r4, #1
   11770:	lsl	r7, r4, #2
   11774:	ldr	r1, [r2, r5, lsl #2]
   11778:	str	r1, [r2, r4, lsl #2]
   1177c:	cmp	r3, r5
   11780:	movge	r4, r3
   11784:	bge	117bc <getc@plt+0xcd0>
   11788:	add	r7, r7, #4
   1178c:	mov	r4, r3
   11790:	ldr	r2, [r6]
   11794:	ldr	r3, [r6, #4]
   11798:	ldr	r1, [r2, r7]
   1179c:	mov	r0, r8
   117a0:	blx	r3
   117a4:	cmp	r0, #0
   117a8:	ble	117bc <getc@plt+0xcd0>
   117ac:	add	r4, r4, #1
   117b0:	add	r7, r7, #4
   117b4:	cmp	r4, r5
   117b8:	blt	11790 <getc@plt+0xca4>
   117bc:	cmp	r4, r5
   117c0:	beq	11824 <getc@plt+0xd38>
   117c4:	ldr	r2, [r6]
   117c8:	sub	r3, r5, #1
   117cc:	ldr	r1, [r2, r4, lsl #2]
   117d0:	str	r1, [r2, r5, lsl #2]
   117d4:	cmp	r3, r4
   117d8:	ble	11828 <getc@plt+0xd3c>
   117dc:	cmp	r3, r4
   117e0:	ble	1175c <getc@plt+0xc70>
   117e4:	lsl	r7, r3, #2
   117e8:	mov	r5, r3
   117ec:	ldr	r2, [r6]
   117f0:	ldr	r3, [r6, #4]
   117f4:	ldr	r1, [r2, r7]
   117f8:	mov	r0, r8
   117fc:	blx	r3
   11800:	cmp	r0, #0
   11804:	bge	11760 <getc@plt+0xc74>
   11808:	sub	r5, r5, #1
   1180c:	sub	r7, r7, #4
   11810:	cmp	r5, r4
   11814:	bne	117ec <getc@plt+0xd00>
   11818:	mov	r4, r5
   1181c:	b	117bc <getc@plt+0xcd0>
   11820:	mov	r4, r5
   11824:	mov	r3, r4
   11828:	ldr	r2, [pc, #52]	; 11864 <getc@plt+0xd78>
   1182c:	ldr	r2, [r2]
   11830:	str	r8, [r2, r3, lsl #2]
   11834:	sub	r1, r3, #1
   11838:	cmp	sl, r1
   1183c:	blt	11858 <getc@plt+0xd6c>
   11840:	add	r0, r4, #1
   11844:	cmp	r9, r0
   11848:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   1184c:	mov	r1, r9
   11850:	bl	11724 <getc@plt+0xc38>
   11854:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11858:	mov	r0, sl
   1185c:	bl	11724 <getc@plt+0xc38>
   11860:	b	11840 <getc@plt+0xd54>
   11864:	andeq	r4, r2, r0, lsr #2
   11868:	cmp	r0, #1
   1186c:	bxle	lr
   11870:	push	{r4, lr}
   11874:	ldr	r3, [pc, #20]	; 11890 <getc@plt+0xda4>
   11878:	str	r1, [r3]
   1187c:	str	r2, [r3, #4]
   11880:	sub	r1, r0, #1
   11884:	mov	r0, #0
   11888:	bl	11724 <getc@plt+0xc38>
   1188c:	pop	{r4, pc}
   11890:	andeq	r4, r2, r0, lsr #2
   11894:	andeq	r0, r0, r0
   11898:	push	{r4, r5, r6, lr}
   1189c:	mov	r4, r0
   118a0:	mov	r6, r1
   118a4:	mov	r5, r2
   118a8:	mov	r1, #32
   118ac:	mov	r0, #1
   118b0:	bl	12170 <error@@Base+0x3c>
   118b4:	str	r6, [r0, #8]
   118b8:	str	r5, [r0, #12]
   118bc:	ldr	r1, [r4, #24]
   118c0:	add	r1, r1, r6
   118c4:	str	r1, [r4, #24]
   118c8:	ldr	r2, [r4, #28]
   118cc:	add	r2, r2, r5
   118d0:	str	r2, [r4, #28]
   118d4:	mov	r1, r0
   118d8:	mov	r0, r4
   118dc:	bl	12b80 <error@@Base+0xa4c>
   118e0:	pop	{r4, r5, r6, pc}
   118e4:	push	{r4, r5, r6, lr}
   118e8:	vpush	{d8}
   118ec:	mov	r6, r2
   118f0:	ldr	r2, [r0]
   118f4:	cmp	r2, #0
   118f8:	beq	11a54 <getc@plt+0xf68>
   118fc:	mov	r4, r0
   11900:	mov	r5, r1
   11904:	mov	r3, r2
   11908:	mov	r0, #0
   1190c:	ldr	r1, [r3, #8]
   11910:	cmp	r1, #0
   11914:	addgt	r0, r0, #1
   11918:	ldr	r3, [r3, #4]
   1191c:	cmp	r3, #0
   11920:	bne	1190c <getc@plt+0xe20>
   11924:	cmp	r0, #1
   11928:	ble	11a54 <getc@plt+0xf68>
   1192c:	ldr	r3, [r4, #28]
   11930:	ldr	r1, [r4, #24]
   11934:	sub	r3, r1, r3
   11938:	vmov	s14, r3
   1193c:	vcvt.f64.s32	d7, s14
   11940:	vldr	d6, [pc, #392]	; 11ad0 <getc@plt+0xfe4>
   11944:	vmul.f64	d7, d7, d6
   11948:	vmov	s13, r1
   1194c:	vcvt.f64.s32	d6, s13
   11950:	vdiv.f64	d1, d7, d6
   11954:	vstr	d1, [r4, #32]
   11958:	vldr	s15, [r4, #12]
   1195c:	vcvt.f64.s32	d2, s15
   11960:	vmul.f64	d1, d1, d2
   11964:	vldr	d4, [pc, #364]	; 11ad8 <getc@plt+0xfec>
   11968:	vldr	d0, [pc, #352]	; 11ad0 <getc@plt+0xfe4>
   1196c:	vmov	r3, s15
   11970:	sub	r3, r3, #1
   11974:	vmov	s6, r3
   11978:	vcvt.f64.s32	d3, s6
   1197c:	ldr	r1, [r4, #24]
   11980:	ldr	r3, [r2, #8]
   11984:	sub	r1, r1, r3
   11988:	ldr	r3, [r4, #28]
   1198c:	ldr	r0, [r2, #12]
   11990:	sub	r3, r3, r0
   11994:	sub	r3, r1, r3
   11998:	vmov	s14, r3
   1199c:	vcvt.f64.s32	d7, s14
   119a0:	vmul.f64	d7, d7, d0
   119a4:	vmov	s13, r1
   119a8:	vcvt.f64.s32	d6, s13
   119ac:	vdiv.f64	d5, d7, d6
   119b0:	vstr	d5, [r2, #16]
   119b4:	vmov.f64	d7, d1
   119b8:	vmls.f64	d7, d3, d5
   119bc:	vstr	d7, [r2, #24]
   119c0:	vadd.f64	d4, d4, d5
   119c4:	ldr	r2, [r2, #4]
   119c8:	cmp	r2, #0
   119cc:	bne	1197c <getc@plt+0xe90>
   119d0:	vmul.f64	d4, d3, d4
   119d4:	vdiv.f64	d7, d4, d2
   119d8:	vsub.f64	d1, d1, d7
   119dc:	vstr	d1, [r4, #40]	; 0x28
   119e0:	ldr	r3, [r4]
   119e4:	cmp	r3, #0
   119e8:	beq	11a5c <getc@plt+0xf70>
   119ec:	vldr	d6, [pc, #228]	; 11ad8 <getc@plt+0xfec>
   119f0:	vldr	d7, [r3, #24]
   119f4:	vsub.f64	d7, d7, d1
   119f8:	vmla.f64	d6, d7, d7
   119fc:	ldr	r3, [r3, #4]
   11a00:	cmp	r3, #0
   11a04:	bne	119f0 <getc@plt+0xf04>
   11a08:	vdiv.f64	d7, d6, d3
   11a0c:	vdiv.f64	d0, d7, d2
   11a10:	vsqrt.f64	d8, d0
   11a14:	vcmp.f64	d0, #0.0
   11a18:	vmrs	APSR_nzcv, fpscr
   11a1c:	bmi	11a64 <getc@plt+0xf78>
   11a20:	vldr	d7, [pc, #184]	; 11ae0 <getc@plt+0xff4>
   11a24:	vmul.f64	d7, d8, d7
   11a28:	vldr	d6, [r4, #40]	; 0x28
   11a2c:	vsub.f64	d6, d6, d7
   11a30:	vldr	d5, [pc, #152]	; 11ad0 <getc@plt+0xfe4>
   11a34:	vcmpe.f64	d6, d5
   11a38:	vmrs	APSR_nzcv, fpscr
   11a3c:	bgt	11a7c <getc@plt+0xf90>
   11a40:	vcmpe.f64	d6, #0.0
   11a44:	vmrs	APSR_nzcv, fpscr
   11a48:	bpl	11a6c <getc@plt+0xf80>
   11a4c:	vldr	d6, [pc, #132]	; 11ad8 <getc@plt+0xfec>
   11a50:	b	11a80 <getc@plt+0xf94>
   11a54:	ldr	r0, [pc, #140]	; 11ae8 <getc@plt+0xffc>
   11a58:	bl	12134 <error@@Base>
   11a5c:	vldr	d6, [pc, #116]	; 11ad8 <getc@plt+0xfec>
   11a60:	b	11a08 <getc@plt+0xf1c>
   11a64:	bl	10a8c <sqrt@plt>
   11a68:	b	11a20 <getc@plt+0xf34>
   11a6c:	vcmp.f64	d6, d5
   11a70:	vmrs	APSR_nzcv, fpscr
   11a74:	vmovgt.f64	d6, d5
   11a78:	b	11a80 <getc@plt+0xf94>
   11a7c:	vldr	d6, [pc, #76]	; 11ad0 <getc@plt+0xfe4>
   11a80:	vstr	d6, [r5]
   11a84:	vldr	d6, [r4, #40]	; 0x28
   11a88:	vadd.f64	d7, d7, d6
   11a8c:	vldr	d6, [pc, #60]	; 11ad0 <getc@plt+0xfe4>
   11a90:	vcmpe.f64	d7, d6
   11a94:	vmrs	APSR_nzcv, fpscr
   11a98:	bgt	11abc <getc@plt+0xfd0>
   11a9c:	vcmpe.f64	d7, #0.0
   11aa0:	vmrs	APSR_nzcv, fpscr
   11aa4:	vldrmi	d7, [pc, #44]	; 11ad8 <getc@plt+0xfec>
   11aa8:	bmi	11ac0 <getc@plt+0xfd4>
   11aac:	vcmp.f64	d7, d6
   11ab0:	vmrs	APSR_nzcv, fpscr
   11ab4:	vmovgt.f64	d7, d6
   11ab8:	b	11ac0 <getc@plt+0xfd4>
   11abc:	vldr	d7, [pc, #12]	; 11ad0 <getc@plt+0xfe4>
   11ac0:	vstr	d7, [r6]
   11ac4:	vpop	{d8}
   11ac8:	pop	{r4, r5, r6, pc}
   11acc:	nop			; (mov r0, r0)
   11ad0:	andeq	r0, r0, r0
   11ad4:	subsmi	r0, r9, r0
	...
   11ae0:			; <UNDEFINED> instruction: 0xf5c28f5c
   11ae4:	svccc	0x00ff5c28
   11ae8:	andeq	r3, r1, r4, lsr r0
   11aec:	ldrb	r3, [r0]
   11af0:	cmp	r3, #0
   11af4:	beq	11b34 <getc@plt+0x1048>
   11af8:	mov	r2, #0
   11afc:	add	r2, r2, r3
   11b00:	ldrb	r3, [r0, #1]!
   11b04:	cmp	r3, #0
   11b08:	bne	11afc <getc@plt+0x1010>
   11b0c:	ldr	r0, [pc, #40]	; 11b3c <getc@plt+0x1050>
   11b10:	smull	r3, r0, r0, r2
   11b14:	add	r3, r0, r2
   11b18:	asr	r0, r2, #31
   11b1c:	rsb	r0, r0, r3, asr #8
   11b20:	rsb	r3, r0, r0, lsl #6
   11b24:	rsb	r0, r0, r3, lsl #3
   11b28:	sub	r0, r2, r0
   11b2c:	sxth	r0, r0
   11b30:	bx	lr
   11b34:	mov	r2, #0
   11b38:	b	11b0c <getc@plt+0x1020>
   11b3c:	subhi	r4, sl, #1552	; 0x610
   11b40:	push	{r4, r5, r6, lr}
   11b44:	mov	r6, r0
   11b48:	mov	r4, r0
   11b4c:	add	r5, r0, #8000	; 0x1f40
   11b50:	add	r5, r5, #48	; 0x30
   11b54:	mov	r0, r4
   11b58:	bl	12b50 <error@@Base+0xa1c>
   11b5c:	add	r4, r4, #16
   11b60:	cmp	r4, r5
   11b64:	bne	11b54 <getc@plt+0x1068>
   11b68:	add	r6, r6, #4096	; 0x1000
   11b6c:	mov	r3, #0
   11b70:	str	r3, [r6, #3952]	; 0xf70
   11b74:	str	r3, [r6, #3956]	; 0xf74
   11b78:	pop	{r4, r5, r6, pc}
   11b7c:	push	{r4, r5, r6, lr}
   11b80:	mov	r4, r0
   11b84:	mov	r5, r1
   11b88:	mov	r0, r1
   11b8c:	bl	11aec <getc@plt+0x1000>
   11b90:	ldr	r4, [r4, r0, lsl #4]
   11b94:	cmp	r4, #0
   11b98:	beq	11bbc <getc@plt+0x10d0>
   11b9c:	ldr	r1, [r4, #8]
   11ba0:	mov	r0, r5
   11ba4:	bl	10978 <strcmp@plt>
   11ba8:	cmp	r0, #0
   11bac:	beq	11bbc <getc@plt+0x10d0>
   11bb0:	ldr	r4, [r4, #4]
   11bb4:	cmp	r4, #0
   11bb8:	bne	11b9c <getc@plt+0x10b0>
   11bbc:	mov	r0, r4
   11bc0:	pop	{r4, r5, r6, pc}
   11bc4:	push	{r4, r5, r6, lr}
   11bc8:	mov	r4, r0
   11bcc:	mov	r5, r1
   11bd0:	ldr	r0, [r1, #8]
   11bd4:	bl	11aec <getc@plt+0x1000>
   11bd8:	mov	r1, r5
   11bdc:	add	r0, r4, r0, lsl #4
   11be0:	bl	12b68 <error@@Base+0xa34>
   11be4:	add	r3, r4, #4096	; 0x1000
   11be8:	ldr	r0, [r3, #3952]	; 0xf70
   11bec:	cmp	r0, #0
   11bf0:	beq	11c04 <getc@plt+0x1118>
   11bf4:	bl	1099c <free@plt>
   11bf8:	add	r3, r4, #4096	; 0x1000
   11bfc:	mov	r2, #0
   11c00:	str	r2, [r3, #3952]	; 0xf70
   11c04:	add	r4, r4, #4096	; 0x1000
   11c08:	ldr	r3, [r4, #3956]	; 0xf74
   11c0c:	add	r3, r3, #1
   11c10:	str	r3, [r4, #3956]	; 0xf74
   11c14:	pop	{r4, r5, r6, pc}
   11c18:	push	{r4, r5, r6, lr}
   11c1c:	mov	r4, r0
   11c20:	mov	r5, r1
   11c24:	ldr	r0, [r1, #8]
   11c28:	bl	11aec <getc@plt+0x1000>
   11c2c:	mov	r1, r5
   11c30:	add	r0, r4, r0, lsl #4
   11c34:	bl	12bc4 <error@@Base+0xa90>
   11c38:	add	r3, r4, #4096	; 0x1000
   11c3c:	ldr	r0, [r3, #3952]	; 0xf70
   11c40:	cmp	r0, #0
   11c44:	beq	11c58 <getc@plt+0x116c>
   11c48:	bl	1099c <free@plt>
   11c4c:	add	r3, r4, #4096	; 0x1000
   11c50:	mov	r2, #0
   11c54:	str	r2, [r3, #3952]	; 0xf70
   11c58:	add	r4, r4, #4096	; 0x1000
   11c5c:	ldr	r3, [r4, #3956]	; 0xf74
   11c60:	sub	r3, r3, #1
   11c64:	str	r3, [r4, #3956]	; 0xf74
   11c68:	pop	{r4, r5, r6, pc}
   11c6c:	add	r3, r0, #4096	; 0x1000
   11c70:	ldr	r3, [r3, #3952]	; 0xf70
   11c74:	cmp	r3, #0
   11c78:	bxne	lr
   11c7c:	add	r3, r0, #4096	; 0x1000
   11c80:	ldr	r3, [r3, #3956]	; 0xf74
   11c84:	cmp	r3, #0
   11c88:	bxeq	lr
   11c8c:	push	{r4, r5, r6, lr}
   11c90:	mov	r4, r0
   11c94:	mov	r1, #4
   11c98:	mov	r0, r3
   11c9c:	bl	12170 <error@@Base+0x3c>
   11ca0:	add	r3, r4, #4096	; 0x1000
   11ca4:	str	r0, [r3, #3952]	; 0xf70
   11ca8:	mov	r1, #0
   11cac:	mov	lr, r1
   11cb0:	mov	ip, r3
   11cb4:	ldr	r5, [pc, #64]	; 11cfc <getc@plt+0x1210>
   11cb8:	b	11cc8 <getc@plt+0x11dc>
   11cbc:	add	lr, lr, #1
   11cc0:	cmp	lr, r5
   11cc4:	beq	11cf8 <getc@plt+0x120c>
   11cc8:	ldr	r3, [r4, lr, lsl #4]
   11ccc:	cmp	r3, #0
   11cd0:	beq	11cbc <getc@plt+0x11d0>
   11cd4:	lsl	r2, r1, #2
   11cd8:	add	r1, r1, #1
   11cdc:	ldr	r0, [ip, #3952]	; 0xf70
   11ce0:	str	r3, [r0, r2]
   11ce4:	ldr	r3, [r3, #4]
   11ce8:	add	r2, r2, #4
   11cec:	cmp	r3, #0
   11cf0:	bne	11cd8 <getc@plt+0x11ec>
   11cf4:	b	11cbc <getc@plt+0x11d0>
   11cf8:	pop	{r4, r5, r6, pc}
   11cfc:	strdeq	r0, [r0], -r7
   11d00:	push	{r4, r5, r6, r7, r8, lr}
   11d04:	mov	r7, r0
   11d08:	mov	r6, r1
   11d0c:	mov	r4, r0
   11d10:	add	r5, r0, #8000	; 0x1f40
   11d14:	add	r5, r5, #48	; 0x30
   11d18:	mov	r1, r6
   11d1c:	mov	r0, r4
   11d20:	bl	12c8c <error@@Base+0xb58>
   11d24:	add	r4, r4, #16
   11d28:	cmp	r4, r5
   11d2c:	bne	11d18 <getc@plt+0x122c>
   11d30:	add	r3, r7, #4096	; 0x1000
   11d34:	ldr	r0, [r3, #3952]	; 0xf70
   11d38:	cmp	r0, #0
   11d3c:	beq	11d50 <getc@plt+0x1264>
   11d40:	bl	1099c <free@plt>
   11d44:	add	r3, r7, #4096	; 0x1000
   11d48:	mov	r2, #0
   11d4c:	str	r2, [r3, #3952]	; 0xf70
   11d50:	add	r7, r7, #4096	; 0x1000
   11d54:	mov	r3, #0
   11d58:	str	r3, [r7, #3956]	; 0xf74
   11d5c:	pop	{r4, r5, r6, r7, r8, pc}
   11d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d64:	sub	sp, sp, #12
   11d68:	ldr	r8, [pc, #204]	; 11e3c <getc@plt+0x1350>
   11d6c:	add	fp, r8, #1088	; 0x440
   11d70:	add	fp, fp, #4
   11d74:	ldr	sl, [pc, #196]	; 11e40 <getc@plt+0x1354>
   11d78:	add	r3, sl, #1024	; 0x400
   11d7c:	add	r3, r3, #4
   11d80:	str	r3, [sp, #4]
   11d84:	b	11dd0 <getc@plt+0x12e4>
   11d88:	mov	r4, #0
   11d8c:	cmp	r9, r4
   11d90:	beq	11e0c <getc@plt+0x1320>
   11d94:	ldr	r2, [r8]
   11d98:	mov	r3, r2
   11d9c:	ldr	r1, [r8, #4]
   11da0:	cmp	r2, r1
   11da4:	bhi	11dc4 <getc@plt+0x12d8>
   11da8:	sub	r2, r2, #1
   11dac:	ldr	r0, [sp, #4]
   11db0:	add	r2, r0, r2
   11db4:	strb	r4, [r2, #1]!
   11db8:	add	r3, r3, #1
   11dbc:	cmp	r1, r3
   11dc0:	bcs	11db4 <getc@plt+0x12c8>
   11dc4:	add	r8, r8, #12
   11dc8:	cmp	r8, fp
   11dcc:	beq	11e34 <getc@plt+0x1348>
   11dd0:	ldrsh	r9, [sl]
   11dd4:	mov	r7, r9
   11dd8:	cmp	r9, #0
   11ddc:	ble	11d88 <getc@plt+0x129c>
   11de0:	ldr	r6, [r8, #8]
   11de4:	mov	r5, sl
   11de8:	mov	r4, #0
   11dec:	ldr	r1, [r5, #4]!
   11df0:	mov	r0, r6
   11df4:	bl	10978 <strcmp@plt>
   11df8:	cmp	r0, #0
   11dfc:	beq	11d8c <getc@plt+0x12a0>
   11e00:	add	r4, r4, #1
   11e04:	cmp	r4, r7
   11e08:	bne	11dec <getc@plt+0x1300>
   11e0c:	cmp	r9, #256	; 0x100
   11e10:	beq	11e2c <getc@plt+0x1340>
   11e14:	add	r3, r9, #1
   11e18:	strh	r3, [sl]
   11e1c:	add	r9, sl, r9, lsl #2
   11e20:	ldr	r3, [r8, #8]
   11e24:	str	r3, [r9, #4]
   11e28:	b	11d94 <getc@plt+0x12a8>
   11e2c:	ldr	r0, [pc, #16]	; 11e44 <getc@plt+0x1358>
   11e30:	bl	12134 <error@@Base>
   11e34:	add	sp, sp, #12
   11e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e3c:	andeq	r3, r1, ip, asr #32
   11e40:	andeq	r4, r2, r8, lsr #2
   11e44:	muleq	r1, r0, r4
   11e48:	push	{r4, lr}
   11e4c:	mov	r4, r0
   11e50:	ldr	r3, [pc, #32]	; 11e78 <getc@plt+0x138c>
   11e54:	ldrsh	r3, [r3]
   11e58:	cmp	r3, #0
   11e5c:	beq	11e70 <getc@plt+0x1384>
   11e60:	ldr	r0, [pc, #16]	; 11e78 <getc@plt+0x138c>
   11e64:	add	r0, r0, r4
   11e68:	ldrb	r0, [r0, #1028]	; 0x404
   11e6c:	pop	{r4, pc}
   11e70:	bl	11d60 <getc@plt+0x1274>
   11e74:	b	11e60 <getc@plt+0x1374>
   11e78:	andeq	r4, r2, r8, lsr #2
   11e7c:	push	{r4, lr}
   11e80:	uxtb	r4, r0
   11e84:	ldr	r3, [pc, #56]	; 11ec4 <getc@plt+0x13d8>
   11e88:	ldrsh	r3, [r3]
   11e8c:	cmp	r3, #0
   11e90:	beq	11eb4 <getc@plt+0x13c8>
   11e94:	ldr	r3, [pc, #40]	; 11ec4 <getc@plt+0x13d8>
   11e98:	ldrsh	r3, [r3]
   11e9c:	cmp	r4, r3
   11ea0:	bge	11ebc <getc@plt+0x13d0>
   11ea4:	ldr	r0, [pc, #24]	; 11ec4 <getc@plt+0x13d8>
   11ea8:	add	r0, r0, r4, lsl #2
   11eac:	ldr	r0, [r0, #4]
   11eb0:	pop	{r4, pc}
   11eb4:	bl	11d60 <getc@plt+0x1274>
   11eb8:	b	11e94 <getc@plt+0x13a8>
   11ebc:	ldr	r0, [pc, #4]	; 11ec8 <getc@plt+0x13dc>
   11ec0:	bl	12134 <error@@Base>
   11ec4:	andeq	r4, r2, r8, lsr #2
   11ec8:	andeq	r3, r1, ip, lsr #9
   11ecc:	push	{r4, r5, lr}
   11ed0:	sub	sp, sp, #116	; 0x74
   11ed4:	mov	r5, r0
   11ed8:	ldr	r3, [pc, #44]	; 11f0c <getc@plt+0x1420>
   11edc:	ldr	r4, [r3]
   11ee0:	bl	10a50 <getpid@plt>
   11ee4:	str	r5, [sp]
   11ee8:	mov	r3, r0
   11eec:	mov	r2, r4
   11ef0:	ldr	r1, [pc, #24]	; 11f10 <getc@plt+0x1424>
   11ef4:	add	r0, sp, #12
   11ef8:	bl	10ab0 <sprintf@plt>
   11efc:	add	r0, sp, #12
   11f00:	bl	109cc <strdup@plt>
   11f04:	add	sp, sp, #116	; 0x74
   11f08:	pop	{r4, r5, pc}
   11f0c:	addseq	r6, fp, r4, lsr #26
   11f10:	strdeq	r3, [r1], -ip
   11f14:	push	{r7, lr}
   11f18:	mov	r7, r0
   11f1c:	ldr	r3, [pc, #88]	; 11f7c <getc@plt+0x1490>
   11f20:	ldr	r3, [r3]
   11f24:	cmp	r3, #0
   11f28:	beq	11f30 <getc@plt+0x1444>
   11f2c:	blx	r3
   11f30:	ldr	r3, [pc, #72]	; 11f80 <getc@plt+0x1494>
   11f34:	ldrsh	r3, [r3]
   11f38:	cmp	r3, #0
   11f3c:	ble	11f74 <getc@plt+0x1488>
   11f40:	mov	r4, #1
   11f44:	ldr	r6, [pc, #52]	; 11f80 <getc@plt+0x1494>
   11f48:	mov	r0, r4
   11f4c:	bl	11ecc <getc@plt+0x13e0>
   11f50:	mov	r5, r0
   11f54:	bl	109e4 <unlink@plt>
   11f58:	mov	r0, r5
   11f5c:	bl	1099c <free@plt>
   11f60:	add	r4, r4, #1
   11f64:	sxth	r4, r4
   11f68:	ldrsh	r3, [r6]
   11f6c:	cmp	r3, r4
   11f70:	bge	11f48 <getc@plt+0x145c>
   11f74:	mov	r0, r7
   11f78:	bl	10a5c <exit@plt>
   11f7c:	addseq	r6, fp, r8, lsr #26
   11f80:	andseq	r4, r3, ip, lsr #10
   11f84:	push	{r4, lr}
   11f88:	ldrb	r3, [r0]
   11f8c:	cmp	r3, #0
   11f90:	beq	11fdc <getc@plt+0x14f0>
   11f94:	ldrb	r2, [r1]
   11f98:	cmp	r2, r3
   11f9c:	bne	11ff8 <getc@plt+0x150c>
   11fa0:	mov	ip, r1
   11fa4:	mov	r2, #0
   11fa8:	add	r2, r2, #1
   11fac:	mov	r4, r2
   11fb0:	ldrb	r3, [r0, #1]!
   11fb4:	cmp	r3, #0
   11fb8:	beq	11fe0 <getc@plt+0x14f4>
   11fbc:	ldrb	lr, [ip, #1]!
   11fc0:	cmp	lr, r3
   11fc4:	beq	11fa8 <getc@plt+0x14bc>
   11fc8:	ldrb	r2, [r1, r4]
   11fcc:	cmp	r2, r3
   11fd0:	mvnhi	r0, #0
   11fd4:	movls	r0, #1
   11fd8:	pop	{r4, pc}
   11fdc:	mov	r4, #0
   11fe0:	ldrb	r3, [r1, r4]
   11fe4:	cmp	r3, #0
   11fe8:	movne	r3, #0
   11fec:	bne	11fc8 <getc@plt+0x14dc>
   11ff0:	mov	r0, #0
   11ff4:	pop	{r4, pc}
   11ff8:	mov	r4, #0
   11ffc:	b	11fc8 <getc@plt+0x14dc>
   12000:	ldr	r3, [pc, #36]	; 1202c <getc@plt+0x1540>
   12004:	ldr	r3, [r3]
   12008:	cmp	r3, r0
   1200c:	bxeq	lr
   12010:	ldr	r3, [pc, #24]	; 12030 <getc@plt+0x1544>
   12014:	ldr	r3, [r3]
   12018:	cmp	r0, r3
   1201c:	bxeq	lr
   12020:	push	{r4, lr}
   12024:	bl	10aa4 <fclose@plt>
   12028:	pop	{r4, pc}
   1202c:	strheq	r4, [r2], -r0
   12030:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   12034:	push	{lr}		; (str lr, [sp, #-4]!)
   12038:	sub	sp, sp, #92	; 0x5c
   1203c:	mov	r2, sp
   12040:	mov	r1, r0
   12044:	mov	r0, #3
   12048:	bl	109fc <__xstat@plt>
   1204c:	clz	r0, r0
   12050:	lsr	r0, r0, #5
   12054:	add	sp, sp, #92	; 0x5c
   12058:	pop	{pc}		; (ldr pc, [sp], #4)
   1205c:	push	{r4, lr}
   12060:	ldr	r3, [pc, #32]	; 12088 <getc@plt+0x159c>
   12064:	ldrh	r0, [r3]
   12068:	add	r0, r0, #1
   1206c:	sxth	r0, r0
   12070:	strh	r0, [r3]
   12074:	bl	11ecc <getc@plt+0x13e0>
   12078:	mov	r4, r0
   1207c:	bl	109e4 <unlink@plt>
   12080:	mov	r0, r4
   12084:	pop	{r4, pc}
   12088:	andseq	r4, r3, ip, lsr #10
   1208c:	push	{r4, lr}
   12090:	mov	r4, r0
   12094:	bl	10a74 <strlen@plt>
   12098:	sub	r0, r0, #1
   1209c:	sxth	r0, r0
   120a0:	cmp	r0, #0
   120a4:	blt	120d0 <getc@plt+0x15e4>
   120a8:	ldrb	r3, [r4, r0]
   120ac:	cmp	r3, #47	; 0x2f
   120b0:	beq	120d0 <getc@plt+0x15e4>
   120b4:	sub	r0, r0, #1
   120b8:	sxth	r0, r0
   120bc:	cmp	r0, #0
   120c0:	blt	120d0 <getc@plt+0x15e4>
   120c4:	ldrb	r3, [r4, r0]
   120c8:	cmp	r3, #47	; 0x2f
   120cc:	bne	120b4 <getc@plt+0x15c8>
   120d0:	add	r0, r0, #1
   120d4:	add	r0, r4, r0
   120d8:	pop	{r4, pc}
   120dc:	push	{r4, lr}
   120e0:	mov	r0, #0
   120e4:	bl	11f14 <getc@plt+0x1428>
   120e8:	push	{r4, lr}
   120ec:	ldr	r2, [pc, #48]	; 12124 <getc@plt+0x1638>
   120f0:	ldr	r2, [r2]
   120f4:	cmp	r2, #0
   120f8:	beq	12104 <getc@plt+0x1618>
   120fc:	blx	r2
   12100:	bl	120dc <getc@plt+0x15f0>
   12104:	mov	r3, r0
   12108:	ldr	r2, [pc, #24]	; 12128 <getc@plt+0x163c>
   1210c:	ldr	r2, [r2]
   12110:	ldr	r1, [pc, #20]	; 1212c <getc@plt+0x1640>
   12114:	ldr	r0, [pc, #20]	; 12130 <getc@plt+0x1644>
   12118:	ldr	r0, [r0]
   1211c:	bl	10a80 <fprintf@plt>
   12120:	b	12100 <getc@plt+0x1614>
   12124:	addseq	r6, fp, r0, lsr #26
   12128:	addseq	r6, fp, r4, lsr #26
   1212c:	andeq	r3, r1, ip, lsl #22
   12130:	andeq	r4, r2, r8, lsr #1

00012134 <error@@Base>:
   12134:	push	{r4, lr}
   12138:	mov	r3, r0
   1213c:	ldr	r2, [pc, #28]	; 12160 <error@@Base+0x2c>
   12140:	ldr	r2, [r2]
   12144:	ldr	r1, [pc, #24]	; 12164 <error@@Base+0x30>
   12148:	ldr	r0, [pc, #24]	; 12168 <error@@Base+0x34>
   1214c:	ldr	r0, [r0]
   12150:	bl	10a80 <fprintf@plt>
   12154:	ldr	r3, [pc, #16]	; 1216c <error@@Base+0x38>
   12158:	ldr	r0, [r3]
   1215c:	bl	11f14 <getc@plt+0x1428>
   12160:	addseq	r6, fp, r4, lsr #26
   12164:	andeq	r3, r1, ip, lsl fp
   12168:	andeq	r4, r2, r8, lsr #1
   1216c:	muleq	r2, ip, r0
   12170:	push	{r4, lr}
   12174:	bl	1096c <calloc@plt>
   12178:	cmp	r0, #0
   1217c:	popne	{r4, pc}
   12180:	ldr	r0, [pc]	; 12188 <error@@Base+0x54>
   12184:	bl	12134 <error@@Base>
   12188:	andeq	r3, r1, r4, lsr #22
   1218c:	ldr	r3, [pc, #36]	; 121b8 <error@@Base+0x84>
   12190:	ldrb	r3, [r3, #2]
   12194:	cmp	r3, #0
   12198:	beq	121a0 <error@@Base+0x6c>
   1219c:	bx	lr
   121a0:	push	{r4, lr}
   121a4:	mov	r2, #1
   121a8:	ldr	r3, [pc, #8]	; 121b8 <error@@Base+0x84>
   121ac:	strb	r2, [r3, #2]
   121b0:	ldr	r0, [pc, #4]	; 121bc <error@@Base+0x88>
   121b4:	bl	12134 <error@@Base>
   121b8:	andseq	r4, r3, ip, lsr #10
   121bc:	andeq	r3, r1, r0, asr #22
   121c0:	push	{lr}		; (str lr, [sp, #-4]!)
   121c4:	sub	sp, sp, #12
   121c8:	ldr	r3, [pc, #40]	; 121f8 <error@@Base+0xc4>
   121cc:	ldr	r2, [r3]
   121d0:	ldr	r3, [pc, #36]	; 121fc <error@@Base+0xc8>
   121d4:	ldr	ip, [r3]
   121d8:	str	r1, [sp]
   121dc:	mov	r3, r0
   121e0:	ldr	r1, [pc, #24]	; 12200 <error@@Base+0xcc>
   121e4:	mov	r0, ip
   121e8:	bl	10a80 <fprintf@plt>
   121ec:	ldr	r3, [pc, #16]	; 12204 <error@@Base+0xd0>
   121f0:	ldr	r0, [r3]
   121f4:	bl	11f14 <getc@plt+0x1428>
   121f8:	addseq	r6, fp, r4, lsr #26
   121fc:	andeq	r4, r2, r8, lsr #1
   12200:	andeq	r3, r1, r0, asr fp
   12204:	muleq	r2, ip, r0
   12208:	push	{r4, r5, r6, lr}
   1220c:	subs	r5, r0, #0
   12210:	beq	12240 <error@@Base+0x10c>
   12214:	mov	r4, r1
   12218:	mov	r0, r5
   1221c:	bl	10990 <fopen@plt>
   12220:	cmp	r0, #0
   12224:	popne	{r4, r5, r6, pc}
   12228:	ldrb	r3, [r4]
   1222c:	cmp	r3, #119	; 0x77
   12230:	beq	12258 <error@@Base+0x124>
   12234:	mov	r1, r5
   12238:	ldr	r0, [pc, #36]	; 12264 <error@@Base+0x130>
   1223c:	bl	121c0 <error@@Base+0x8c>
   12240:	ldrb	r3, [r1]
   12244:	cmp	r3, #114	; 0x72
   12248:	ldreq	r3, [pc, #24]	; 12268 <error@@Base+0x134>
   1224c:	ldrne	r3, [pc, #24]	; 1226c <error@@Base+0x138>
   12250:	ldr	r0, [r3]
   12254:	pop	{r4, r5, r6, pc}
   12258:	mov	r1, r5
   1225c:	ldr	r0, [pc, #12]	; 12270 <error@@Base+0x13c>
   12260:	bl	121c0 <error@@Base+0x8c>
   12264:	andeq	r3, r1, r8, ror fp
   12268:	strheq	r4, [r2], -r0
   1226c:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   12270:	andeq	r3, r1, r0, ror #22
   12274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12278:	sub	sp, sp, #20
   1227c:	mov	r5, r0
   12280:	str	r0, [sp, #8]
   12284:	mov	sl, r1
   12288:	str	r2, [sp, #12]
   1228c:	mov	r6, r3
   12290:	ldr	r0, [r1]
   12294:	bl	1208c <getc@plt+0x15a0>
   12298:	ldr	r3, [pc, #468]	; 12474 <error@@Base+0x340>
   1229c:	str	r0, [r3]
   122a0:	ldr	r4, [pc, #464]	; 12478 <error@@Base+0x344>
   122a4:	mov	r1, r4
   122a8:	mov	r0, #2
   122ac:	bl	10a38 <__sysv_signal@plt>
   122b0:	mov	r1, r4
   122b4:	mov	r0, #15
   122b8:	bl	10a38 <__sysv_signal@plt>
   122bc:	ldr	r8, [r5]
   122c0:	cmp	r8, #1
   122c4:	beq	122e4 <error@@Base+0x1b0>
   122c8:	movle	r7, #0
   122cc:	ble	122f8 <error@@Base+0x1c4>
   122d0:	mov	r7, #0
   122d4:	mov	r3, #1
   122d8:	str	r3, [sp, #4]
   122dc:	mov	r4, r3
   122e0:	b	12390 <error@@Base+0x25c>
   122e4:	ldr	r3, [pc, #400]	; 1247c <error@@Base+0x348>
   122e8:	ldrb	r3, [r3, #4]
   122ec:	cmp	r3, #0
   122f0:	moveq	r7, #0
   122f4:	bne	12308 <error@@Base+0x1d4>
   122f8:	ldr	r3, [sp, #8]
   122fc:	str	r7, [r3]
   12300:	add	sp, sp, #20
   12304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12308:	ldr	r0, [sp, #12]
   1230c:	bl	120e8 <getc@plt+0x15fc>
   12310:	ldr	r0, [sp, #12]
   12314:	bl	120e8 <getc@plt+0x15fc>
   12318:	mov	r1, r6
   1231c:	b	12424 <error@@Base+0x2f0>
   12320:	ldr	r3, [r1, #8]
   12324:	cmp	r3, #0
   12328:	beq	12350 <error@@Base+0x21c>
   1232c:	ldrb	r2, [r5, #2]
   12330:	cmp	r2, #0
   12334:	bne	12350 <error@@Base+0x21c>
   12338:	ldrb	r2, [r3]
   1233c:	cmp	r2, #0
   12340:	bne	1235c <error@@Base+0x228>
   12344:	mov	r2, #1
   12348:	strb	r2, [r3]
   1234c:	b	12374 <error@@Base+0x240>
   12350:	mov	r1, r5
   12354:	ldr	r0, [pc, #292]	; 12480 <error@@Base+0x34c>
   12358:	bl	121c0 <error@@Base+0x8c>
   1235c:	mov	r1, r5
   12360:	ldr	r0, [pc, #284]	; 12484 <error@@Base+0x350>
   12364:	bl	121c0 <error@@Base+0x8c>
   12368:	add	r3, r7, #1
   1236c:	str	r5, [sl, r7, lsl #2]
   12370:	sxth	r7, r3
   12374:	add	r4, r4, #1
   12378:	sxth	r4, r4
   1237c:	str	r4, [sp, #4]
   12380:	ldr	r3, [sp, #8]
   12384:	ldr	r8, [r3]
   12388:	cmp	r4, r8
   1238c:	bge	122f8 <error@@Base+0x1c4>
   12390:	lsl	fp, r4, #2
   12394:	ldr	r5, [sl, r4, lsl #2]
   12398:	ldrb	r3, [r5]
   1239c:	cmp	r3, #45	; 0x2d
   123a0:	bne	12368 <error@@Base+0x234>
   123a4:	ldrb	r9, [r5, #1]
   123a8:	cmp	r9, #0
   123ac:	beq	12368 <error@@Base+0x234>
   123b0:	mov	r0, r5
   123b4:	bl	10a74 <strlen@plt>
   123b8:	mov	r2, r0
   123bc:	mov	r1, r5
   123c0:	ldr	r0, [pc, #192]	; 12488 <error@@Base+0x354>
   123c4:	bl	10ad4 <strncmp@plt>
   123c8:	cmp	r0, #0
   123cc:	beq	12310 <error@@Base+0x1dc>
   123d0:	ldr	r3, [sp, #4]
   123d4:	add	r3, r3, #1
   123d8:	cmp	r3, r8
   123dc:	addlt	r3, sl, fp
   123e0:	ldrlt	r0, [r3, #4]
   123e4:	movge	r0, #0
   123e8:	cmp	r6, #0
   123ec:	beq	12350 <error@@Base+0x21c>
   123f0:	ldrb	r2, [r6]
   123f4:	cmp	r9, r2
   123f8:	cmpne	r2, #0
   123fc:	beq	12318 <error@@Base+0x1e4>
   12400:	mov	r3, #0
   12404:	add	r3, r3, #1
   12408:	sxth	r3, r3
   1240c:	add	r2, r3, r3, lsl #1
   12410:	add	r1, r6, r2, lsl #2
   12414:	ldrb	r2, [r6, r2, lsl #2]
   12418:	cmp	r9, r2
   1241c:	cmpne	r2, #0
   12420:	bne	12404 <error@@Base+0x2d0>
   12424:	cmp	r2, #0
   12428:	beq	12350 <error@@Base+0x21c>
   1242c:	ldr	r3, [r1, #4]
   12430:	cmp	r3, #0
   12434:	beq	12320 <error@@Base+0x1ec>
   12438:	ldrb	r2, [r5, #2]
   1243c:	cmp	r2, #0
   12440:	cmpeq	r0, #0
   12444:	beq	12320 <error@@Base+0x1ec>
   12448:	ldr	r1, [r3]
   1244c:	cmp	r1, #0
   12450:	bne	1235c <error@@Base+0x228>
   12454:	cmp	r2, #0
   12458:	addne	r0, r5, #2
   1245c:	str	r0, [r3]
   12460:	ldrb	r3, [r5, #2]
   12464:	cmp	r3, #0
   12468:	addeq	r4, r4, #1
   1246c:	sxtheq	r4, r4
   12470:	b	12374 <error@@Base+0x240>
   12474:	addseq	r6, fp, r4, lsr #26
   12478:	andeq	r2, r1, ip, lsl #3
   1247c:	muleq	r2, ip, r0
   12480:	muleq	r1, r4, fp
   12484:	andeq	r3, r1, r4, lsr #23
   12488:	andeq	r3, r1, ip, lsl #23
   1248c:	push	{lr}		; (str lr, [sp, #-4]!)
   12490:	sub	sp, sp, #12
   12494:	ldr	r3, [pc, #36]	; 124c0 <error@@Base+0x38c>
   12498:	ldr	r2, [r3]
   1249c:	ldr	r3, [pc, #32]	; 124c4 <error@@Base+0x390>
   124a0:	ldr	ip, [r3]
   124a4:	str	r1, [sp]
   124a8:	mov	r3, r0
   124ac:	ldr	r1, [pc, #20]	; 124c8 <error@@Base+0x394>
   124b0:	mov	r0, ip
   124b4:	bl	10a80 <fprintf@plt>
   124b8:	add	sp, sp, #12
   124bc:	pop	{pc}		; (ldr pc, [sp], #4)
   124c0:	addseq	r6, fp, r4, lsr #26
   124c4:	andeq	r4, r2, r8, lsr #1
   124c8:	andeq	r3, r1, r0, asr fp
   124cc:	push	{r4, r5, r6, lr}
   124d0:	mov	r4, r0
   124d4:	mov	r5, r2
   124d8:	uxtb	r6, r1
   124dc:	mov	r1, #16
   124e0:	mov	r0, #1
   124e4:	bl	12170 <error@@Base+0x3c>
   124e8:	mov	r1, r0
   124ec:	strb	r6, [r0, #8]
   124f0:	str	r5, [r0, #12]
   124f4:	mov	r0, r4
   124f8:	bl	12b80 <error@@Base+0xa4c>
   124fc:	pop	{r4, r5, r6, pc}
   12500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12504:	sub	sp, sp, #116	; 0x74
   12508:	str	r0, [sp]
   1250c:	mov	sl, r2
   12510:	ldrb	r3, [r2]
   12514:	mov	r0, r1
   12518:	adds	r2, r3, #0
   1251c:	movne	r2, #1
   12520:	cmp	r1, #0
   12524:	movne	r2, #0
   12528:	cmp	r2, #0
   1252c:	bne	12590 <error@@Base+0x45c>
   12530:	ldr	r3, [sp]
   12534:	ldr	r3, [r3, #4]
   12538:	str	r3, [sp, #4]
   1253c:	ldr	r1, [pc, #820]	; 12878 <error@@Base+0x744>
   12540:	bl	12208 <error@@Base+0xd4>
   12544:	mov	r6, r0
   12548:	ldrb	r3, [sl]
   1254c:	cmp	r3, #0
   12550:	bne	1259c <error@@Base+0x468>
   12554:	ldrb	r8, [sl, #1]
   12558:	ldr	fp, [sl, #4]
   1255c:	cmp	fp, #0
   12560:	moveq	fp, #94	; 0x5e
   12564:	mov	r0, r6
   12568:	bl	10aec <getc@plt>
   1256c:	cmn	r0, #1
   12570:	beq	126dc <error@@Base+0x5a8>
   12574:	ldr	r3, [pc, #768]	; 1287c <error@@Base+0x748>
   12578:	ldrsb	r4, [r3, r0]
   1257c:	cmp	r4, #0
   12580:	ble	12634 <error@@Base+0x500>
   12584:	mov	r7, #0
   12588:	mov	r9, r3
   1258c:	b	1267c <error@@Base+0x548>
   12590:	ldr	r1, [pc, #744]	; 12880 <error@@Base+0x74c>
   12594:	ldr	r0, [pc, #744]	; 12884 <error@@Base+0x750>
   12598:	bl	121c0 <error@@Base+0x8c>
   1259c:	mov	r2, r0
   125a0:	mov	r1, #99	; 0x63
   125a4:	add	r0, sp, #12
   125a8:	bl	109b4 <fgets@plt>
   125ac:	cmp	r0, #0
   125b0:	beq	125cc <error@@Base+0x498>
   125b4:	mov	r2, #51	; 0x33
   125b8:	ldr	r1, [pc, #712]	; 12888 <error@@Base+0x754>
   125bc:	add	r0, sp, #12
   125c0:	bl	10ad4 <strncmp@plt>
   125c4:	cmp	r0, #0
   125c8:	beq	125e0 <error@@Base+0x4ac>
   125cc:	mov	r0, r6
   125d0:	bl	109d8 <rewind@plt>
   125d4:	mov	r3, #0
   125d8:	strb	r3, [sl, #11]
   125dc:	b	12554 <error@@Base+0x420>
   125e0:	mov	r4, #0
   125e4:	mov	r5, #99	; 0x63
   125e8:	ldr	r7, [pc, #668]	; 1288c <error@@Base+0x758>
   125ec:	mov	r2, r6
   125f0:	mov	r1, r5
   125f4:	add	r0, sp, #12
   125f8:	bl	109b4 <fgets@plt>
   125fc:	cmp	r0, #0
   12600:	beq	1262c <error@@Base+0x4f8>
   12604:	mov	r1, r7
   12608:	add	r0, sp, #12
   1260c:	bl	10978 <strcmp@plt>
   12610:	cmp	r0, #0
   12614:	addeq	r4, r4, #1
   12618:	sxtheq	r4, r4
   1261c:	cmp	r4, #1
   12620:	ble	125ec <error@@Base+0x4b8>
   12624:	mov	r3, #1
   12628:	b	125d8 <error@@Base+0x4a4>
   1262c:	mov	r3, #1
   12630:	b	125d8 <error@@Base+0x4a4>
   12634:	ldr	r0, [pc, #596]	; 12890 <error@@Base+0x75c>
   12638:	bl	12134 <error@@Base>
   1263c:	ldr	r0, [pc, #592]	; 12894 <error@@Base+0x760>
   12640:	bl	12134 <error@@Base>
   12644:	bl	10abc <utf8proc_errmsg@plt>
   12648:	bl	12134 <error@@Base>
   1264c:	ldr	r2, [sp, #12]
   12650:	mov	r1, r7
   12654:	ldr	r0, [sp]
   12658:	bl	124cc <error@@Base+0x398>
   1265c:	mov	r7, #0
   12660:	mov	r0, r6
   12664:	bl	10aec <getc@plt>
   12668:	cmn	r0, #1
   1266c:	beq	126dc <error@@Base+0x5a8>
   12670:	ldrsb	r4, [r9, r0]
   12674:	cmp	r4, #0
   12678:	ble	12634 <error@@Base+0x500>
   1267c:	strb	r0, [sp, #8]
   12680:	cmp	r4, #1
   12684:	ble	126a8 <error@@Base+0x574>
   12688:	sub	r5, r4, #1
   1268c:	mov	r3, r6
   12690:	mov	r2, r5
   12694:	mov	r1, #1
   12698:	add	r0, sp, #9
   1269c:	bl	10a14 <fread@plt>
   126a0:	cmp	r5, r0
   126a4:	bne	1263c <error@@Base+0x508>
   126a8:	add	r2, sp, #12
   126ac:	mov	r1, #4
   126b0:	add	r0, sp, #8
   126b4:	bl	10a20 <utf8proc_iterate@plt>
   126b8:	cmp	r0, r4
   126bc:	bne	12644 <error@@Base+0x510>
   126c0:	cmp	r8, #0
   126c4:	beq	1264c <error@@Base+0x518>
   126c8:	ldr	r3, [sp, #12]
   126cc:	cmp	fp, r3
   126d0:	moveq	r7, #1
   126d4:	bne	1264c <error@@Base+0x518>
   126d8:	b	12660 <error@@Base+0x52c>
   126dc:	mov	r0, r6
   126e0:	bl	12000 <getc@plt+0x1514>
   126e4:	ldrb	r3, [sl, #9]
   126e8:	cmp	r3, #0
   126ec:	beq	12830 <error@@Base+0x6fc>
   126f0:	ldr	r3, [sp, #4]
   126f4:	cmp	r3, #0
   126f8:	ldrne	r6, [r3, #4]
   126fc:	ldreq	r3, [sp]
   12700:	ldreq	r6, [r3]
   12704:	cmp	r6, #0
   12708:	beq	12830 <error@@Base+0x6fc>
   1270c:	mov	r5, r6
   12710:	mov	r7, #32
   12714:	mov	r9, #1
   12718:	mov	r8, #0
   1271c:	b	12750 <error@@Base+0x61c>
   12720:	cmp	r4, #160	; 0xa0
   12724:	beq	12740 <error@@Base+0x60c>
   12728:	ldrsh	r3, [r0]
   1272c:	sub	r3, r3, #23
   12730:	cmp	r3, #2
   12734:	bhi	12744 <error@@Base+0x610>
   12738:	mov	r3, r9
   1273c:	b	12780 <error@@Base+0x64c>
   12740:	str	r7, [r5, #12]
   12744:	ldr	r5, [r5, #4]
   12748:	cmp	r5, #0
   1274c:	beq	127c4 <error@@Base+0x690>
   12750:	ldr	r4, [r5, #12]
   12754:	mov	r0, r4
   12758:	bl	109a8 <utf8proc_get_property@plt>
   1275c:	cmp	r4, #13
   12760:	bhi	12720 <error@@Base+0x5ec>
   12764:	cmp	r4, #11
   12768:	bcs	12740 <error@@Base+0x60c>
   1276c:	cmp	r4, #9
   12770:	beq	12740 <error@@Base+0x60c>
   12774:	cmp	r4, #10
   12778:	moveq	r3, r8
   1277c:	bne	12728 <error@@Base+0x5f4>
   12780:	cmp	r3, #0
   12784:	beq	12744 <error@@Base+0x610>
   12788:	b	12740 <error@@Base+0x60c>
   1278c:	eor	r2, r5, #1
   12790:	cmp	r4, #0
   12794:	orreq	r2, r2, #1
   12798:	cmp	r2, #0
   1279c:	bne	127ec <error@@Base+0x6b8>
   127a0:	ldr	r2, [r4, #12]
   127a4:	cmp	r2, #32
   127a8:	cmpne	r2, #10
   127ac:	beq	127ec <error@@Base+0x6b8>
   127b0:	subs	r5, r3, #10
   127b4:	movne	r5, #1
   127b8:	mov	r6, r4
   127bc:	cmp	r4, #0
   127c0:	beq	12830 <error@@Base+0x6fc>
   127c4:	ldr	r4, [r6, #4]
   127c8:	ldr	r3, [r6, #12]
   127cc:	cmp	r3, #32
   127d0:	beq	1278c <error@@Base+0x658>
   127d4:	eor	r2, r5, #1
   127d8:	cmp	r3, #10
   127dc:	movne	r2, #0
   127e0:	andeq	r2, r2, #1
   127e4:	cmp	r2, #0
   127e8:	beq	127b0 <error@@Base+0x67c>
   127ec:	cmp	r4, #0
   127f0:	moveq	r3, #0
   127f4:	andne	r3, r5, #1
   127f8:	cmp	r3, #0
   127fc:	beq	12818 <error@@Base+0x6e4>
   12800:	ldr	r3, [r4, #12]
   12804:	cmp	r3, #32
   12808:	ldrbeq	r3, [r4, #8]
   1280c:	ldrbeq	r2, [r6, #8]
   12810:	orreq	r3, r3, r2
   12814:	strbeq	r3, [r4, #8]
   12818:	mov	r1, r6
   1281c:	ldr	r0, [sp]
   12820:	bl	12bc4 <error@@Base+0xa90>
   12824:	mov	r0, r6
   12828:	bl	1099c <free@plt>
   1282c:	b	127b8 <error@@Base+0x684>
   12830:	ldrb	r3, [sl, #10]
   12834:	cmp	r3, #0
   12838:	beq	12870 <error@@Base+0x73c>
   1283c:	ldr	r3, [sp, #4]
   12840:	cmp	r3, #0
   12844:	ldrne	r4, [r3, #4]
   12848:	ldreq	r3, [sp]
   1284c:	ldreq	r4, [r3]
   12850:	cmp	r4, #0
   12854:	beq	12870 <error@@Base+0x73c>
   12858:	ldr	r0, [r4, #12]
   1285c:	bl	109f0 <utf8proc_tolower@plt>
   12860:	str	r0, [r4, #12]
   12864:	ldr	r4, [r4, #4]
   12868:	cmp	r4, #0
   1286c:	bne	12858 <error@@Base+0x724>
   12870:	add	sp, sp, #116	; 0x74
   12874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12878:	andeq	r2, r1, r0, lsl #29
   1287c:	andeq	r3, r2, r8, lsl #28
   12880:			; <UNDEFINED> instruction: 0x00013bb8
   12884:	andeq	r3, r1, r4, asr #23
   12888:	ldrdeq	r3, [r1], -r4
   1288c:	andeq	r3, r1, ip, lsl #24
   12890:	andeq	r3, r1, r4, asr #24
   12894:	andeq	r3, r1, ip, asr ip
   12898:	push	{r4, lr}
   1289c:	bl	109c0 <utf8proc_encode_char@plt>
   128a0:	cmp	r0, #0
   128a4:	ble	128b0 <error@@Base+0x77c>
   128a8:	sxtb	r0, r0
   128ac:	pop	{r4, pc}
   128b0:	ldr	r0, [pc]	; 128b8 <error@@Base+0x784>
   128b4:	bl	12134 <error@@Base>
   128b8:	andeq	r3, r1, r4, ror ip
   128bc:	push	{r4, r5, r6, r7, r8, lr}
   128c0:	mov	r4, r1
   128c4:	mov	r6, r2
   128c8:	uxtb	r0, r0
   128cc:	uxtb	r7, r3
   128d0:	cmp	r0, #0
   128d4:	moveq	r5, #0
   128d8:	bne	1292c <error@@Base+0x7f8>
   128dc:	cmp	r4, #10
   128e0:	beq	12940 <error@@Base+0x80c>
   128e4:	mov	r0, r4
   128e8:	bl	109a8 <utf8proc_get_property@plt>
   128ec:	cmp	r4, #32
   128f0:	beq	1295c <error@@Base+0x828>
   128f4:	ldrsh	r3, [r0]
   128f8:	cmp	r3, #1
   128fc:	blt	12910 <error@@Base+0x7dc>
   12900:	cmp	r3, #22
   12904:	ble	1295c <error@@Base+0x828>
   12908:	cmp	r3, #29
   1290c:	beq	1295c <error@@Base+0x828>
   12910:	cmp	r4, #255	; 0xff
   12914:	mov	r2, r4
   12918:	ldrls	r1, [pc, #136]	; 129a8 <error@@Base+0x874>
   1291c:	ldrhi	r1, [pc, #136]	; 129ac <error@@Base+0x878>
   12920:	add	r0, r6, r5
   12924:	bl	10ab0 <sprintf@plt>
   12928:	pop	{r4, r5, r6, r7, r8, pc}
   1292c:	mov	r1, r2
   12930:	mov	r0, #94	; 0x5e
   12934:	bl	12898 <error@@Base+0x764>
   12938:	sxth	r5, r0
   1293c:	b	128dc <error@@Base+0x7a8>
   12940:	ldr	r3, [pc, #104]	; 129b0 <error@@Base+0x87c>
   12944:	ldr	r1, [pc, #104]	; 129b4 <error@@Base+0x880>
   12948:	cmp	r7, #0
   1294c:	moveq	r1, r3
   12950:	add	r0, r6, r5
   12954:	bl	10ab0 <sprintf@plt>
   12958:	pop	{r4, r5, r6, r7, r8, pc}
   1295c:	mov	r0, r4
   12960:	bl	10a68 <utf8proc_category@plt>
   12964:	sub	r0, r0, #6
   12968:	cmp	r0, #2
   1296c:	bls	12990 <error@@Base+0x85c>
   12970:	add	r1, r6, r5
   12974:	mov	r0, r4
   12978:	bl	12898 <error@@Base+0x764>
   1297c:	add	r0, r0, r5
   12980:	sxth	r0, r0
   12984:	mov	r3, #0
   12988:	strb	r3, [r6, r0]
   1298c:	pop	{r4, r5, r6, r7, r8, pc}
   12990:	add	r1, r6, r5
   12994:	ldr	r0, [pc, #28]	; 129b8 <error@@Base+0x884>
   12998:	bl	12898 <error@@Base+0x764>
   1299c:	add	r5, r0, r5
   129a0:	sxth	r5, r5
   129a4:	b	12970 <error@@Base+0x83c>
   129a8:	muleq	r1, r4, ip
   129ac:	muleq	r1, ip, ip
   129b0:	andeq	r2, r1, r8, asr #28
   129b4:	andeq	r3, r1, ip, lsl #25
   129b8:	andeq	r2, r0, ip, asr #11
   129bc:	push	{r4, r5, r6, r7, lr}
   129c0:	sub	sp, sp, #20
   129c4:	mov	r7, r0
   129c8:	mov	r0, r1
   129cc:	mov	r4, r2
   129d0:	ldr	r1, [pc, #160]	; 12a78 <error@@Base+0x944>
   129d4:	bl	12208 <error@@Base+0xd4>
   129d8:	mov	r5, r0
   129dc:	cmp	r4, #0
   129e0:	beq	12a2c <error@@Base+0x8f8>
   129e4:	mov	r3, r0
   129e8:	mov	r2, #55	; 0x37
   129ec:	mov	r1, #1
   129f0:	ldr	r0, [pc, #132]	; 12a7c <error@@Base+0x948>
   129f4:	bl	10a08 <fwrite@plt>
   129f8:	ldr	r6, [pc, #128]	; 12a80 <error@@Base+0x94c>
   129fc:	mov	r3, r5
   12a00:	mov	r2, #55	; 0x37
   12a04:	mov	r1, #1
   12a08:	mov	r0, r6
   12a0c:	bl	10a08 <fwrite@plt>
   12a10:	mov	r0, r5
   12a14:	blx	r4
   12a18:	mov	r3, r5
   12a1c:	mov	r2, #55	; 0x37
   12a20:	mov	r1, #1
   12a24:	mov	r0, r6
   12a28:	bl	10a08 <fwrite@plt>
   12a2c:	ldr	r4, [r7]
   12a30:	cmp	r4, #0
   12a34:	beq	12a68 <error@@Base+0x934>
   12a38:	mov	r6, #0
   12a3c:	mov	r3, r6
   12a40:	add	r2, sp, #4
   12a44:	ldr	r1, [r4, #12]
   12a48:	ldrb	r0, [r4, #8]
   12a4c:	bl	128bc <error@@Base+0x788>
   12a50:	mov	r1, r5
   12a54:	add	r0, sp, #4
   12a58:	bl	10ac8 <fputs@plt>
   12a5c:	ldr	r4, [r4, #4]
   12a60:	cmp	r4, #0
   12a64:	bne	12a3c <error@@Base+0x908>
   12a68:	mov	r0, r5
   12a6c:	bl	12000 <getc@plt+0x1514>
   12a70:	add	sp, sp, #20
   12a74:	pop	{r4, r5, r6, r7, pc}
   12a78:	strdeq	r2, [r1], -r4
   12a7c:	ldrdeq	r3, [r1], -r4
   12a80:	andeq	r3, r1, ip, lsl #24
   12a84:	push	{r4, r5, r6, r7, r8, lr}
   12a88:	sub	sp, sp, #8
   12a8c:	mov	r3, #0
   12a90:	str	r3, [sp, #4]
   12a94:	ldrb	r3, [r1]
   12a98:	cmp	r3, #0
   12a9c:	beq	12aec <error@@Base+0x9b8>
   12aa0:	mov	r6, r0
   12aa4:	mov	r4, r1
   12aa8:	mvn	r5, #0
   12aac:	mov	r7, #0
   12ab0:	add	r2, sp, #4
   12ab4:	mov	r1, r5
   12ab8:	mov	r0, r4
   12abc:	bl	10a20 <utf8proc_iterate@plt>
   12ac0:	subs	r8, r0, #0
   12ac4:	ble	12af4 <error@@Base+0x9c0>
   12ac8:	ldr	r2, [sp, #4]
   12acc:	mov	r1, r7
   12ad0:	mov	r0, r6
   12ad4:	bl	124cc <error@@Base+0x398>
   12ad8:	ldrb	r3, [r4, r8]!
   12adc:	cmp	r3, #0
   12ae0:	bne	12ab0 <error@@Base+0x97c>
   12ae4:	mov	r0, #1
   12ae8:	b	12af8 <error@@Base+0x9c4>
   12aec:	mov	r0, #1
   12af0:	b	12af8 <error@@Base+0x9c4>
   12af4:	mov	r0, #0
   12af8:	add	sp, sp, #8
   12afc:	pop	{r4, r5, r6, r7, r8, pc}
   12b00:	push	{r4, lr}
   12b04:	mov	r4, r0
   12b08:	str	r1, [r2]
   12b0c:	str	r3, [r2, #4]
   12b10:	cmp	r1, #0
   12b14:	strne	r2, [r1, #4]
   12b18:	streq	r2, [r0]
   12b1c:	cmp	r3, #0
   12b20:	strne	r2, [r3]
   12b24:	streq	r2, [r0, #4]
   12b28:	ldr	r0, [r0, #8]
   12b2c:	cmp	r0, #0
   12b30:	beq	12b40 <error@@Base+0xa0c>
   12b34:	bl	1099c <free@plt>
   12b38:	mov	r3, #0
   12b3c:	str	r3, [r4, #8]
   12b40:	ldr	r3, [r4, #12]
   12b44:	add	r3, r3, #1
   12b48:	str	r3, [r4, #12]
   12b4c:	pop	{r4, pc}
   12b50:	mov	r3, #0
   12b54:	str	r3, [r0, #4]
   12b58:	str	r3, [r0]
   12b5c:	str	r3, [r0, #8]
   12b60:	str	r3, [r0, #12]
   12b64:	bx	lr
   12b68:	push	{r4, lr}
   12b6c:	ldr	r3, [r0]
   12b70:	mov	r2, r1
   12b74:	mov	r1, #0
   12b78:	bl	12b00 <error@@Base+0x9cc>
   12b7c:	pop	{r4, pc}
   12b80:	push	{r4, lr}
   12b84:	mov	r3, #0
   12b88:	mov	r2, r1
   12b8c:	ldr	r1, [r0, #4]
   12b90:	bl	12b00 <error@@Base+0x9cc>
   12b94:	pop	{r4, pc}
   12b98:	push	{r4, lr}
   12b9c:	mov	ip, r2
   12ba0:	mov	r3, r2
   12ba4:	mov	r2, r1
   12ba8:	ldr	r1, [ip]
   12bac:	bl	12b00 <error@@Base+0x9cc>
   12bb0:	pop	{r4, pc}
   12bb4:	push	{r4, lr}
   12bb8:	ldr	r3, [r1, #4]
   12bbc:	bl	12b00 <error@@Base+0x9cc>
   12bc0:	pop	{r4, pc}
   12bc4:	push	{r4, lr}
   12bc8:	mov	r4, r0
   12bcc:	ldr	r3, [r1]
   12bd0:	cmp	r3, #0
   12bd4:	ldrne	r2, [r1, #4]
   12bd8:	strne	r2, [r3, #4]
   12bdc:	ldreq	r3, [r1, #4]
   12be0:	streq	r3, [r0]
   12be4:	ldr	r3, [r1, #4]
   12be8:	cmp	r3, #0
   12bec:	ldrne	r2, [r1]
   12bf0:	strne	r2, [r3]
   12bf4:	ldreq	r3, [r1]
   12bf8:	streq	r3, [r0, #4]
   12bfc:	mov	r3, #0
   12c00:	str	r3, [r1, #4]
   12c04:	str	r3, [r1]
   12c08:	ldr	r0, [r0, #8]
   12c0c:	cmp	r0, r3
   12c10:	beq	12c20 <error@@Base+0xaec>
   12c14:	bl	1099c <free@plt>
   12c18:	mov	r3, #0
   12c1c:	str	r3, [r4, #8]
   12c20:	ldr	r3, [r4, #12]
   12c24:	sub	r3, r3, #1
   12c28:	str	r3, [r4, #12]
   12c2c:	pop	{r4, pc}
   12c30:	ldr	r3, [r0, #8]
   12c34:	cmp	r3, #0
   12c38:	bxne	lr
   12c3c:	ldr	r3, [r0, #12]
   12c40:	cmp	r3, #0
   12c44:	bxeq	lr
   12c48:	push	{r4, lr}
   12c4c:	mov	r4, r0
   12c50:	mov	r1, #4
   12c54:	mov	r0, r3
   12c58:	bl	12170 <error@@Base+0x3c>
   12c5c:	str	r0, [r4, #8]
   12c60:	ldr	r3, [r4]
   12c64:	cmp	r3, #0
   12c68:	popeq	{r4, pc}
   12c6c:	mov	r2, #0
   12c70:	ldr	r1, [r4, #8]
   12c74:	str	r3, [r1, r2]
   12c78:	ldr	r3, [r3, #4]
   12c7c:	add	r2, r2, #4
   12c80:	cmp	r3, #0
   12c84:	bne	12c70 <error@@Base+0xb3c>
   12c88:	pop	{r4, pc}
   12c8c:	push	{r4, r5, r6, lr}
   12c90:	mov	r5, r0
   12c94:	mov	r6, r1
   12c98:	ldr	r4, [r0]
   12c9c:	cmp	r4, #0
   12ca0:	popeq	{r4, r5, r6, pc}
   12ca4:	mov	r1, r4
   12ca8:	mov	r0, r5
   12cac:	bl	12bc4 <error@@Base+0xa90>
   12cb0:	mov	r0, r4
   12cb4:	blx	r6
   12cb8:	ldr	r4, [r5]
   12cbc:	cmp	r4, #0
   12cc0:	bne	12ca4 <error@@Base+0xb70>
   12cc4:	pop	{r4, r5, r6, pc}
   12cc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ccc:	mov	r7, r0
   12cd0:	ldr	r6, [pc, #72]	; 12d20 <error@@Base+0xbec>
   12cd4:	ldr	r5, [pc, #72]	; 12d24 <error@@Base+0xbf0>
   12cd8:	add	r6, pc, r6
   12cdc:	add	r5, pc, r5
   12ce0:	sub	r6, r6, r5
   12ce4:	mov	r8, r1
   12ce8:	mov	r9, r2
   12cec:	bl	1094c <calloc@plt-0x20>
   12cf0:	asrs	r6, r6, #2
   12cf4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12cf8:	mov	r4, #0
   12cfc:	add	r4, r4, #1
   12d00:	ldr	r3, [r5], #4
   12d04:	mov	r2, r9
   12d08:	mov	r1, r8
   12d0c:	mov	r0, r7
   12d10:	blx	r3
   12d14:	cmp	r6, r4
   12d18:	bne	12cfc <error@@Base+0xbc8>
   12d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d20:	andeq	r1, r1, r0, lsr #2
   12d24:	andeq	r1, r1, r8, lsl r1
   12d28:	bx	lr

Disassembly of section .fini:

00012d2c <.fini>:
   12d2c:	push	{r3, lr}
   12d30:	pop	{r3, pc}
