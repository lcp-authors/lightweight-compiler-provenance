
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010c2c <.init>:
   10c2c:	push	{r3, lr}
   10c30:	bl	10d6c <_start@@Base+0x3c>
   10c34:	pop	{r3, pc}

Disassembly of section .plt:

00010c38 <calloc@plt-0x14>:
   10c38:	push	{lr}		; (str lr, [sp, #-4]!)
   10c3c:	ldr	lr, [pc, #4]	; 10c48 <calloc@plt-0x4>
   10c40:	add	lr, pc, lr
   10c44:	ldr	pc, [lr, #8]!
   10c48:			; <UNDEFINED> instruction: 0x000123b8

00010c4c <calloc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #73728	; 0x12000
   10c54:	ldr	pc, [ip, #952]!	; 0x3b8

00010c58 <raise@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #73728	; 0x12000
   10c60:	ldr	pc, [ip, #944]!	; 0x3b0

00010c64 <strcmp@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #73728	; 0x12000
   10c6c:	ldr	pc, [ip, #936]!	; 0x3a8

00010c70 <strtol@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #928]!	; 0x3a0

00010c7c <printf@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #920]!	; 0x398

00010c88 <__isoc99_fscanf@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #912]!	; 0x390

00010c94 <fopen@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #904]!	; 0x388

00010ca0 <free@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #896]!	; 0x380

00010cac <realloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #888]!	; 0x378

00010cb8 <strcpy@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #880]!	; 0x370

00010cc4 <puts@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #872]!	; 0x368

00010cd0 <malloc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #864]!	; 0x360

00010cdc <__libc_start_main@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #856]!	; 0x358

00010ce8 <__gmon_start__@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #848]!	; 0x350

00010cf4 <strlen@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #840]!	; 0x348

00010d00 <putchar@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #832]!	; 0x340

00010d0c <fclose@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #73728	; 0x12000
   10d14:	ldr	pc, [ip, #824]!	; 0x338

00010d18 <sprintf@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #73728	; 0x12000
   10d20:	ldr	pc, [ip, #816]!	; 0x330

00010d24 <abort@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #73728	; 0x12000
   10d2c:	ldr	pc, [ip, #808]!	; 0x328

Disassembly of section .text:

00010d30 <_start@@Base>:
   10d30:	mov	fp, #0
   10d34:	mov	lr, #0
   10d38:	pop	{r1}		; (ldr r1, [sp], #4)
   10d3c:	mov	r2, sp
   10d40:	push	{r2}		; (str r2, [sp, #-4]!)
   10d44:	push	{r0}		; (str r0, [sp, #-4]!)
   10d48:	ldr	ip, [pc, #16]	; 10d60 <_start@@Base+0x30>
   10d4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d50:	ldr	r0, [pc, #12]	; 10d64 <_start@@Base+0x34>
   10d54:	ldr	r3, [pc, #12]	; 10d68 <_start@@Base+0x38>
   10d58:	bl	10cdc <__libc_start_main@plt>
   10d5c:	bl	10d24 <abort@plt>
   10d60:	strdeq	r2, [r1], -r0
   10d64:	andeq	r1, r1, ip, lsr r0
   10d68:	muleq	r1, r0, r5
   10d6c:	ldr	r3, [pc, #20]	; 10d88 <_start@@Base+0x58>
   10d70:	ldr	r2, [pc, #20]	; 10d8c <_start@@Base+0x5c>
   10d74:	add	r3, pc, r3
   10d78:	ldr	r2, [r3, r2]
   10d7c:	cmp	r2, #0
   10d80:	bxeq	lr
   10d84:	b	10ce8 <__gmon_start__@plt>
   10d88:	andeq	r2, r1, r4, lsl #5
   10d8c:	andeq	r0, r0, r8, asr r0
   10d90:	ldr	r3, [pc, #28]	; 10db4 <_start@@Base+0x84>
   10d94:	ldr	r0, [pc, #28]	; 10db8 <_start@@Base+0x88>
   10d98:	sub	r3, r3, r0
   10d9c:	cmp	r3, #6
   10da0:	bxls	lr
   10da4:	ldr	r3, [pc, #16]	; 10dbc <_start@@Base+0x8c>
   10da8:	cmp	r3, #0
   10dac:	bxeq	lr
   10db0:	bx	r3
   10db4:	andeq	r3, r2, r7, rrx
   10db8:	andeq	r3, r2, r4, rrx
   10dbc:	andeq	r0, r0, r0
   10dc0:	ldr	r1, [pc, #36]	; 10dec <_start@@Base+0xbc>
   10dc4:	ldr	r0, [pc, #36]	; 10df0 <_start@@Base+0xc0>
   10dc8:	sub	r1, r1, r0
   10dcc:	asr	r1, r1, #2
   10dd0:	add	r1, r1, r1, lsr #31
   10dd4:	asrs	r1, r1, #1
   10dd8:	bxeq	lr
   10ddc:	ldr	r3, [pc, #16]	; 10df4 <_start@@Base+0xc4>
   10de0:	cmp	r3, #0
   10de4:	bxeq	lr
   10de8:	bx	r3
   10dec:	andeq	r3, r2, r4, rrx
   10df0:	andeq	r3, r2, r4, rrx
   10df4:	andeq	r0, r0, r0
   10df8:	push	{r4, lr}
   10dfc:	ldr	r4, [pc, #24]	; 10e1c <_start@@Base+0xec>
   10e00:	ldrb	r3, [r4]
   10e04:	cmp	r3, #0
   10e08:	popne	{r4, pc}
   10e0c:	bl	10d90 <_start@@Base+0x60>
   10e10:	mov	r3, #1
   10e14:	strb	r3, [r4]
   10e18:	pop	{r4, pc}
   10e1c:	andeq	r3, r2, r4, rrx
   10e20:	ldr	r0, [pc, #40]	; 10e50 <_start@@Base+0x120>
   10e24:	ldr	r3, [r0]
   10e28:	cmp	r3, #0
   10e2c:	bne	10e34 <_start@@Base+0x104>
   10e30:	b	10dc0 <_start@@Base+0x90>
   10e34:	ldr	r3, [pc, #24]	; 10e54 <_start@@Base+0x124>
   10e38:	cmp	r3, #0
   10e3c:	beq	10e30 <_start@@Base+0x100>
   10e40:	push	{r4, lr}
   10e44:	blx	r3
   10e48:	pop	{r4, lr}
   10e4c:	b	10dc0 <_start@@Base+0x90>
   10e50:	andeq	r2, r2, r4, lsl pc
   10e54:	andeq	r0, r0, r0

00010e58 <descobre_caminho@@Base>:
   10e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e5c:	sub	sp, sp, #20
   10e60:	mov	r9, r0
   10e64:	mov	r4, r1
   10e68:	str	r2, [sp, #4]
   10e6c:	mov	fp, r3
   10e70:	bl	11dec <lista_nova@@Base>
   10e74:	mov	r5, r0
   10e78:	add	r3, sp, #12
   10e7c:	mov	r2, fp
   10e80:	mov	r1, r4
   10e84:	mov	r0, r9
   10e88:	bl	117ec <grafo_bfs@@Base>
   10e8c:	mov	sl, r0
   10e90:	ldr	r3, [sp, #12]
   10e94:	cmp	r3, #0
   10e98:	ble	10edc <descobre_caminho@@Base+0x84>
   10e9c:	sub	r6, r0, #4
   10ea0:	mov	r4, #0
   10ea4:	ldr	r8, [pc, #176]	; 10f5c <descobre_caminho@@Base+0x104>
   10ea8:	mvn	r7, #0
   10eac:	ldr	r2, [r6, #4]!
   10eb0:	mov	r1, r8
   10eb4:	add	r0, sp, #8
   10eb8:	bl	10d18 <sprintf@plt>
   10ebc:	mov	r2, r7
   10ec0:	add	r1, sp, #8
   10ec4:	mov	r0, r5
   10ec8:	bl	11f48 <lista_insere@@Base>
   10ecc:	add	r4, r4, #1
   10ed0:	ldr	r3, [sp, #12]
   10ed4:	cmp	r3, r4
   10ed8:	bgt	10eac <descobre_caminho@@Base+0x54>
   10edc:	add	r3, sp, #12
   10ee0:	ldr	r2, [sp, #4]
   10ee4:	mov	r1, fp
   10ee8:	mov	r0, r9
   10eec:	bl	117ec <grafo_bfs@@Base>
   10ef0:	mov	r9, r0
   10ef4:	ldr	r3, [sp, #12]
   10ef8:	cmp	r3, #1
   10efc:	ble	10f40 <descobre_caminho@@Base+0xe8>
   10f00:	mov	r6, r0
   10f04:	mov	r4, #1
   10f08:	ldr	r8, [pc, #76]	; 10f5c <descobre_caminho@@Base+0x104>
   10f0c:	mvn	r7, #0
   10f10:	ldr	r2, [r6, #4]!
   10f14:	mov	r1, r8
   10f18:	add	r0, sp, #8
   10f1c:	bl	10d18 <sprintf@plt>
   10f20:	mov	r2, r7
   10f24:	add	r1, sp, #8
   10f28:	mov	r0, r5
   10f2c:	bl	11f48 <lista_insere@@Base>
   10f30:	add	r4, r4, #1
   10f34:	ldr	r3, [sp, #12]
   10f38:	cmp	r3, r4
   10f3c:	bgt	10f10 <descobre_caminho@@Base+0xb8>
   10f40:	mov	r0, r9
   10f44:	bl	10ca0 <free@plt>
   10f48:	mov	r0, sl
   10f4c:	bl	10ca0 <free@plt>
   10f50:	mov	r0, r5
   10f54:	add	sp, sp, #20
   10f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f5c:	andeq	r2, r1, r0, lsl #12

00010f60 <simula_acontecimentos@@Base>:
   10f60:	cmp	r2, #20
   10f64:	ble	10f70 <simula_acontecimentos@@Base+0x10>
   10f68:	mov	r0, #0
   10f6c:	bx	lr
   10f70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f74:	sub	sp, sp, #24
   10f78:	mov	r5, r2
   10f7c:	mov	r8, r1
   10f80:	mov	r6, r0
   10f84:	mov	r0, r2
   10f88:	bl	119ac <heap_nova@@Base>
   10f8c:	mov	r7, r0
   10f90:	cmp	r5, #0
   10f94:	ble	11024 <simula_acontecimentos@@Base+0xc4>
   10f98:	mov	r4, #0
   10f9c:	mov	sl, #10
   10fa0:	mov	r9, r4
   10fa4:	mov	r1, r4
   10fa8:	mov	r0, r6
   10fac:	bl	11e64 <lista_elemento@@Base>
   10fb0:	mov	r1, r0
   10fb4:	add	r0, sp, #4
   10fb8:	bl	10cb8 <strcpy@plt>
   10fbc:	mov	r1, r4
   10fc0:	mov	r0, r8
   10fc4:	bl	11e64 <lista_elemento@@Base>
   10fc8:	mov	r2, sl
   10fcc:	mov	r1, r9
   10fd0:	bl	10c70 <strtol@plt>
   10fd4:	mov	r2, r0
   10fd8:	add	r1, sp, #4
   10fdc:	mov	r0, r7
   10fe0:	bl	11be8 <heap_insere@@Base>
   10fe4:	add	r4, r4, #1
   10fe8:	cmp	r5, r4
   10fec:	bne	10fa4 <simula_acontecimentos@@Base+0x44>
   10ff0:	mov	r6, #0
   10ff4:	mov	r5, r6
   10ff8:	ldr	r8, [pc, #56]	; 11038 <simula_acontecimentos@@Base+0xd8>
   10ffc:	add	r5, r5, #1
   11000:	ldr	r3, [r7, #8]
   11004:	ldr	r3, [r3, r6]
   11008:	ldr	r2, [r3, #4]
   1100c:	mov	r1, r5
   11010:	mov	r0, r8
   11014:	bl	10c7c <printf@plt>
   11018:	add	r6, r6, #4
   1101c:	cmp	r4, r5
   11020:	bne	10ffc <simula_acontecimentos@@Base+0x9c>
   11024:	mov	r0, r7
   11028:	bl	11a00 <heap_apaga@@Base>
   1102c:	mov	r0, #1
   11030:	add	sp, sp, #24
   11034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11038:	andeq	r2, r1, r4, lsl #12

0001103c <main@@Base>:
   1103c:	push	{r4, r5, r6, r7, r8, lr}
   11040:	sub	sp, sp, #32
   11044:	ldr	r0, [pc, #500]	; 11240 <main@@Base+0x204>
   11048:	bl	10cc4 <puts@plt>
   1104c:	mov	r1, #1
   11050:	mov	r0, #8
   11054:	bl	11288 <grafo_novo@@Base>
   11058:	mov	r6, r0
   1105c:	mov	r2, #3
   11060:	mov	r1, #1
   11064:	bl	114ec <grafo_adiciona@@Base>
   11068:	mov	r2, #3
   1106c:	mov	r1, #2
   11070:	mov	r0, r6
   11074:	bl	114ec <grafo_adiciona@@Base>
   11078:	mov	r2, #4
   1107c:	mov	r1, #2
   11080:	mov	r0, r6
   11084:	bl	114ec <grafo_adiciona@@Base>
   11088:	mov	r2, #5
   1108c:	mov	r1, #2
   11090:	mov	r0, r6
   11094:	bl	114ec <grafo_adiciona@@Base>
   11098:	mov	r2, #2
   1109c:	mov	r1, #3
   110a0:	mov	r0, r6
   110a4:	bl	114ec <grafo_adiciona@@Base>
   110a8:	mov	r2, #4
   110ac:	mov	r1, #3
   110b0:	mov	r0, r6
   110b4:	bl	114ec <grafo_adiciona@@Base>
   110b8:	mov	r2, #6
   110bc:	mov	r1, #4
   110c0:	mov	r0, r6
   110c4:	bl	114ec <grafo_adiciona@@Base>
   110c8:	mov	r2, #7
   110cc:	mov	r1, #4
   110d0:	mov	r0, r6
   110d4:	bl	114ec <grafo_adiciona@@Base>
   110d8:	mov	r2, #4
   110dc:	mov	r1, #5
   110e0:	mov	r0, r6
   110e4:	bl	114ec <grafo_adiciona@@Base>
   110e8:	mov	r2, #6
   110ec:	mov	r1, #5
   110f0:	mov	r0, r6
   110f4:	bl	114ec <grafo_adiciona@@Base>
   110f8:	mov	r2, #7
   110fc:	mov	r1, #5
   11100:	mov	r0, r6
   11104:	bl	114ec <grafo_adiciona@@Base>
   11108:	mov	r2, #7
   1110c:	mov	r1, #6
   11110:	mov	r0, r6
   11114:	bl	114ec <grafo_adiciona@@Base>
   11118:	mov	r3, #5
   1111c:	mov	r2, #7
   11120:	mov	r1, #1
   11124:	mov	r0, r6
   11128:	bl	10e58 <descobre_caminho@@Base>
   1112c:	mov	r5, r0
   11130:	ldr	r0, [pc, #268]	; 11244 <main@@Base+0x208>
   11134:	bl	10c7c <printf@plt>
   11138:	mov	r4, #0
   1113c:	ldr	r7, [pc, #260]	; 11248 <main@@Base+0x20c>
   11140:	b	11160 <main@@Base+0x124>
   11144:	mov	r1, r4
   11148:	mov	r0, r5
   1114c:	bl	11e64 <lista_elemento@@Base>
   11150:	mov	r1, r0
   11154:	mov	r0, r7
   11158:	bl	10c7c <printf@plt>
   1115c:	add	r4, r4, #1
   11160:	mov	r0, r5
   11164:	bl	11e54 <lista_tamanho@@Base>
   11168:	cmp	r4, r0
   1116c:	blt	11144 <main@@Base+0x108>
   11170:	ldr	r0, [pc, #212]	; 1124c <main@@Base+0x210>
   11174:	bl	10cc4 <puts@plt>
   11178:	mov	r0, r6
   1117c:	bl	112dc <grafo_apaga@@Base>
   11180:	mov	r0, r5
   11184:	bl	11e0c <lista_apaga@@Base>
   11188:	ldr	r0, [pc, #192]	; 11250 <main@@Base+0x214>
   1118c:	bl	10cc4 <puts@plt>
   11190:	ldr	r1, [pc, #188]	; 11254 <main@@Base+0x218>
   11194:	ldr	r0, [pc, #188]	; 11258 <main@@Base+0x21c>
   11198:	bl	10c94 <fopen@plt>
   1119c:	mov	r5, r0
   111a0:	bl	11dec <lista_nova@@Base>
   111a4:	mov	r7, r0
   111a8:	bl	11dec <lista_nova@@Base>
   111ac:	mov	r6, r0
   111b0:	ldr	r8, [pc, #164]	; 1125c <main@@Base+0x220>
   111b4:	mvn	r4, #0
   111b8:	b	111dc <main@@Base+0x1a0>
   111bc:	mov	r2, r4
   111c0:	add	r1, sp, #8
   111c4:	mov	r0, r7
   111c8:	bl	11f48 <lista_insere@@Base>
   111cc:	mov	r2, r4
   111d0:	mov	r1, sp
   111d4:	mov	r0, r6
   111d8:	bl	11f48 <lista_insere@@Base>
   111dc:	mov	r3, sp
   111e0:	add	r2, sp, #8
   111e4:	mov	r1, r8
   111e8:	mov	r0, r5
   111ec:	bl	10c88 <__isoc99_fscanf@plt>
   111f0:	cmp	r0, #2
   111f4:	beq	111bc <main@@Base+0x180>
   111f8:	mov	r2, #4
   111fc:	mov	r1, r6
   11200:	mov	r0, r7
   11204:	bl	10f60 <simula_acontecimentos@@Base>
   11208:	cmp	r0, #0
   1120c:	beq	11234 <main@@Base+0x1f8>
   11210:	mov	r0, r7
   11214:	bl	11e0c <lista_apaga@@Base>
   11218:	mov	r0, r6
   1121c:	bl	11e0c <lista_apaga@@Base>
   11220:	mov	r0, r5
   11224:	bl	10d0c <fclose@plt>
   11228:	mov	r0, #0
   1122c:	add	sp, sp, #32
   11230:	pop	{r4, r5, r6, r7, r8, pc}
   11234:	ldr	r0, [pc, #36]	; 11260 <main@@Base+0x224>
   11238:	bl	10cc4 <puts@plt>
   1123c:	b	11210 <main@@Base+0x1d4>
   11240:	andeq	r2, r1, ip, lsl #12
   11244:	andeq	r2, r1, r0, lsr #12
   11248:	andeq	r2, r1, r0, ror #12
   1124c:	andeq	r2, r1, r4, ror #12
   11250:	andeq	r2, r1, r8, ror #12
   11254:	andeq	r2, r1, ip, ror r6
   11258:	andeq	r2, r1, r0, lsl #13
   1125c:	andeq	r2, r1, ip, lsl #13
   11260:	muleq	r1, r4, r6

00011264 <cria_no@@Base>:
   11264:	push	{r4, lr}
   11268:	mov	r4, r0
   1126c:	mov	r0, #8
   11270:	bl	10cd0 <malloc@plt>
   11274:	cmp	r0, #0
   11278:	strne	r4, [r0]
   1127c:	movne	r3, #0
   11280:	strne	r3, [r0, #4]
   11284:	pop	{r4, pc}

00011288 <grafo_novo@@Base>:
   11288:	push	{r4, r5, r6, lr}
   1128c:	mov	r5, r0
   11290:	mov	r6, r1
   11294:	mov	r0, #12
   11298:	bl	10cd0 <malloc@plt>
   1129c:	subs	r4, r0, #0
   112a0:	beq	112c4 <grafo_novo@@Base+0x3c>
   112a4:	str	r5, [r4, #4]
   112a8:	str	r6, [r4]
   112ac:	mov	r1, #8
   112b0:	mov	r0, r5
   112b4:	bl	10c4c <calloc@plt>
   112b8:	str	r0, [r4, #8]
   112bc:	cmp	r0, #0
   112c0:	beq	112cc <grafo_novo@@Base+0x44>
   112c4:	mov	r0, r4
   112c8:	pop	{r4, r5, r6, pc}
   112cc:	mov	r0, r4
   112d0:	bl	10ca0 <free@plt>
   112d4:	mov	r4, #0
   112d8:	b	112c4 <grafo_novo@@Base+0x3c>

000112dc <grafo_apaga@@Base>:
   112dc:	push	{r4, r5, r6, lr}
   112e0:	subs	r4, r0, #0
   112e4:	popeq	{r4, r5, r6, pc}
   112e8:	ldr	r3, [r4, #8]
   112ec:	cmp	r3, #0
   112f0:	beq	1130c <grafo_apaga@@Base+0x30>
   112f4:	ldr	r3, [r4, #4]
   112f8:	cmp	r3, #0
   112fc:	movgt	r6, #0
   11300:	bgt	11348 <grafo_apaga@@Base+0x6c>
   11304:	ldr	r0, [r4, #8]
   11308:	bl	10ca0 <free@plt>
   1130c:	mov	r0, r4
   11310:	bl	10ca0 <free@plt>
   11314:	pop	{r4, r5, r6, pc}
   11318:	ldr	r2, [r0, #4]
   1131c:	str	r2, [r3, #4]
   11320:	bl	10ca0 <free@plt>
   11324:	ldr	r3, [r4, #8]
   11328:	add	r3, r3, r5
   1132c:	ldr	r0, [r3, #4]
   11330:	cmp	r0, #0
   11334:	bne	11318 <grafo_apaga@@Base+0x3c>
   11338:	add	r6, r6, #1
   1133c:	ldr	r3, [r4, #4]
   11340:	cmp	r3, r6
   11344:	ble	11304 <grafo_apaga@@Base+0x28>
   11348:	lsl	r5, r6, #3
   1134c:	ldr	r3, [r4, #8]
   11350:	add	r3, r3, r5
   11354:	ldr	r0, [r3, #4]
   11358:	cmp	r0, #0
   1135c:	bne	11318 <grafo_apaga@@Base+0x3c>
   11360:	b	11338 <grafo_apaga@@Base+0x5c>

00011364 <grafo_remove@@Base>:
   11364:	push	{r4, r5, r6, lr}
   11368:	subs	r6, r0, #0
   1136c:	popeq	{r4, r5, r6, pc}
   11370:	ldr	r3, [r6, #8]
   11374:	add	r3, r3, r1, lsl #3
   11378:	ldr	ip, [r3, #4]
   1137c:	cmp	ip, #0
   11380:	popeq	{r4, r5, r6, pc}
   11384:	mov	r4, r2
   11388:	mov	r5, r1
   1138c:	ldr	r2, [ip]
   11390:	cmp	r2, r4
   11394:	beq	113d0 <grafo_remove@@Base+0x6c>
   11398:	ldr	r3, [ip, #4]
   1139c:	cmp	r3, #0
   113a0:	beq	113f8 <grafo_remove@@Base+0x94>
   113a4:	ldr	r2, [r3]
   113a8:	cmp	r4, r2
   113ac:	beq	113e4 <grafo_remove@@Base+0x80>
   113b0:	ldr	r0, [r3, #4]
   113b4:	cmp	r0, #0
   113b8:	beq	113f8 <grafo_remove@@Base+0x94>
   113bc:	ldr	ip, [r0]
   113c0:	cmp	r4, ip
   113c4:	beq	113ec <grafo_remove@@Base+0x88>
   113c8:	mov	r3, r0
   113cc:	b	113b0 <grafo_remove@@Base+0x4c>
   113d0:	ldr	r2, [ip, #4]
   113d4:	str	r2, [r3, #4]
   113d8:	mov	r0, ip
   113dc:	bl	10ca0 <free@plt>
   113e0:	b	113f8 <grafo_remove@@Base+0x94>
   113e4:	mov	r0, r3
   113e8:	mov	r3, ip
   113ec:	ldr	r2, [r0, #4]
   113f0:	str	r2, [r3, #4]
   113f4:	bl	10ca0 <free@plt>
   113f8:	ldr	r3, [r6]
   113fc:	cmp	r3, #0
   11400:	popne	{r4, r5, r6, pc}
   11404:	ldr	r3, [r6, #8]
   11408:	add	r4, r3, r4, lsl #3
   1140c:	ldr	r2, [r4, #4]
   11410:	ldr	r3, [r2]
   11414:	cmp	r5, r3
   11418:	beq	11454 <grafo_remove@@Base+0xf0>
   1141c:	ldr	r3, [r2, #4]
   11420:	cmp	r3, #0
   11424:	popeq	{r4, r5, r6, pc}
   11428:	ldr	r1, [r3]
   1142c:	cmp	r5, r1
   11430:	beq	11468 <grafo_remove@@Base+0x104>
   11434:	ldr	r0, [r3, #4]
   11438:	cmp	r0, #0
   1143c:	beq	11480 <grafo_remove@@Base+0x11c>
   11440:	ldr	r2, [r0]
   11444:	cmp	r5, r2
   11448:	beq	11470 <grafo_remove@@Base+0x10c>
   1144c:	mov	r3, r0
   11450:	b	11434 <grafo_remove@@Base+0xd0>
   11454:	ldr	r3, [r2, #4]
   11458:	str	r3, [r4, #4]
   1145c:	mov	r0, r2
   11460:	bl	10ca0 <free@plt>
   11464:	pop	{r4, r5, r6, pc}
   11468:	mov	r0, r3
   1146c:	mov	r3, r2
   11470:	ldr	r2, [r0, #4]
   11474:	str	r2, [r3, #4]
   11478:	bl	10ca0 <free@plt>
   1147c:	pop	{r4, r5, r6, pc}
   11480:	pop	{r4, r5, r6, pc}

00011484 <grafo_existe@@Base>:
   11484:	cmp	r0, #0
   11488:	beq	114d4 <grafo_existe@@Base+0x50>
   1148c:	ldr	r3, [r0, #8]
   11490:	add	r1, r3, r1, lsl #3
   11494:	ldr	r3, [r1, #4]
   11498:	cmp	r3, #0
   1149c:	beq	114dc <grafo_existe@@Base+0x58>
   114a0:	ldr	r1, [r3]
   114a4:	cmp	r2, r1
   114a8:	beq	114e4 <grafo_existe@@Base+0x60>
   114ac:	ldr	r3, [r3, #4]
   114b0:	cmp	r3, #0
   114b4:	beq	114cc <grafo_existe@@Base+0x48>
   114b8:	ldr	r1, [r3]
   114bc:	cmp	r1, r2
   114c0:	bne	114ac <grafo_existe@@Base+0x28>
   114c4:	mov	r0, #1
   114c8:	bx	lr
   114cc:	mov	r0, #0
   114d0:	bx	lr
   114d4:	mov	r0, #0
   114d8:	bx	lr
   114dc:	mov	r0, #0
   114e0:	bx	lr
   114e4:	mov	r0, #1
   114e8:	bx	lr

000114ec <grafo_adiciona@@Base>:
   114ec:	push	{r4, r5, r6, lr}
   114f0:	subs	r4, r0, #0
   114f4:	popeq	{r4, r5, r6, pc}
   114f8:	mov	r6, r2
   114fc:	mov	r5, r1
   11500:	mov	r0, r4
   11504:	bl	11484 <grafo_existe@@Base>
   11508:	cmp	r0, #0
   1150c:	popne	{r4, r5, r6, pc}
   11510:	mov	r0, r6
   11514:	bl	11264 <cria_no@@Base>
   11518:	lsl	r3, r5, #3
   1151c:	ldr	r2, [r4, #8]
   11520:	add	r2, r2, r3
   11524:	ldr	r2, [r2, #4]
   11528:	str	r2, [r0, #4]
   1152c:	ldr	r2, [r4, #8]
   11530:	add	r3, r2, r3
   11534:	str	r0, [r3, #4]
   11538:	ldr	r2, [r4, #8]
   1153c:	ldr	r3, [r2, r5, lsl #3]
   11540:	add	r3, r3, #1
   11544:	str	r3, [r2, r5, lsl #3]
   11548:	ldr	r3, [r4]
   1154c:	cmp	r3, #0
   11550:	popne	{r4, r5, r6, pc}
   11554:	mov	r0, r5
   11558:	bl	11264 <cria_no@@Base>
   1155c:	lsl	r1, r6, #3
   11560:	ldr	r2, [r4, #8]
   11564:	add	r2, r2, r1
   11568:	ldr	r3, [r2, #4]
   1156c:	str	r3, [r0, #4]
   11570:	ldr	r3, [r4, #8]
   11574:	add	r3, r3, r1
   11578:	str	r0, [r3, #4]
   1157c:	ldr	r2, [r4, #8]
   11580:	ldr	r3, [r2, r6, lsl #3]
   11584:	add	r3, r3, #1
   11588:	str	r3, [r2, r6, lsl #3]
   1158c:	pop	{r4, r5, r6, pc}

00011590 <grafo_imprime@@Base>:
   11590:	ldr	r3, [r0, #4]
   11594:	cmp	r3, #0
   11598:	bxle	lr
   1159c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115a0:	mov	r7, r0
   115a4:	mov	r6, #0
   115a8:	ldr	r9, [pc, #124]	; 1162c <grafo_imprime@@Base+0x9c>
   115ac:	ldr	sl, [pc, #124]	; 11630 <grafo_imprime@@Base+0xa0>
   115b0:	ldr	r5, [pc, #124]	; 11634 <grafo_imprime@@Base+0xa4>
   115b4:	mov	r8, #10
   115b8:	b	115d4 <grafo_imprime@@Base+0x44>
   115bc:	mov	r0, r8
   115c0:	bl	10d00 <putchar@plt>
   115c4:	add	r6, r6, #1
   115c8:	ldr	r3, [r7, #4]
   115cc:	cmp	r3, r6
   115d0:	ble	11628 <grafo_imprime@@Base+0x98>
   115d4:	ldr	r3, [r7, #8]
   115d8:	add	r3, r3, r6, lsl #3
   115dc:	ldr	r4, [r3, #4]
   115e0:	mov	r1, r6
   115e4:	mov	r0, r9
   115e8:	bl	10c7c <printf@plt>
   115ec:	cmp	r4, #0
   115f0:	beq	115bc <grafo_imprime@@Base+0x2c>
   115f4:	ldr	r1, [r4]
   115f8:	mov	r0, sl
   115fc:	bl	10c7c <printf@plt>
   11600:	ldr	r4, [r4, #4]
   11604:	cmp	r4, #0
   11608:	beq	115bc <grafo_imprime@@Base+0x2c>
   1160c:	ldr	r1, [r4]
   11610:	mov	r0, r5
   11614:	bl	10c7c <printf@plt>
   11618:	ldr	r4, [r4, #4]
   1161c:	cmp	r4, #0
   11620:	bne	1160c <grafo_imprime@@Base+0x7c>
   11624:	b	115bc <grafo_imprime@@Base+0x2c>
   11628:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1162c:			; <UNDEFINED> instruction: 0x000126b0
   11630:	andeq	r2, r1, r0, lsl #12
   11634:			; <UNDEFINED> instruction: 0x000126b8

00011638 <dfs_helper@@Base>:
   11638:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1163c:	sub	sp, sp, #8
   11640:	ldr	r8, [sp, #40]	; 0x28
   11644:	ldr	sl, [r8, r1, lsl #2]
   11648:	cmp	sl, #0
   1164c:	movne	sl, #0
   11650:	bne	116e0 <dfs_helper@@Base+0xa8>
   11654:	str	r3, [r8, r1, lsl #2]
   11658:	cmp	r1, r2
   1165c:	moveq	sl, r3
   11660:	beq	116e0 <dfs_helper@@Base+0xa8>
   11664:	mov	r9, r2
   11668:	mov	r6, r1
   1166c:	mov	r5, r0
   11670:	ldr	r2, [r0, #4]
   11674:	cmp	r2, #0
   11678:	ble	116d8 <dfs_helper@@Base+0xa0>
   1167c:	mov	r4, sl
   11680:	add	r7, r3, #1
   11684:	b	11698 <dfs_helper@@Base+0x60>
   11688:	add	r4, r4, #1
   1168c:	ldr	r3, [r5, #4]
   11690:	cmp	r3, r4
   11694:	ble	116d8 <dfs_helper@@Base+0xa0>
   11698:	mov	r2, r4
   1169c:	mov	r1, r6
   116a0:	mov	r0, r5
   116a4:	bl	11484 <grafo_existe@@Base>
   116a8:	cmp	r0, #0
   116ac:	beq	11688 <dfs_helper@@Base+0x50>
   116b0:	str	r8, [sp]
   116b4:	mov	r3, r7
   116b8:	mov	r2, r9
   116bc:	mov	r1, r4
   116c0:	mov	r0, r5
   116c4:	bl	11638 <dfs_helper@@Base>
   116c8:	cmp	r0, #0
   116cc:	beq	11688 <dfs_helper@@Base+0x50>
   116d0:	mov	sl, r0
   116d4:	b	116e0 <dfs_helper@@Base+0xa8>
   116d8:	mov	r3, #0
   116dc:	str	r3, [r8, r6, lsl #2]
   116e0:	mov	r0, sl
   116e4:	add	sp, sp, #8
   116e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000116ec <grafo_dfs@@Base>:
   116ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   116f0:	sub	sp, sp, #12
   116f4:	subs	r8, r0, #0
   116f8:	beq	117e4 <grafo_dfs@@Base+0xf8>
   116fc:	mov	r6, r3
   11700:	mov	r7, r2
   11704:	mov	r5, r1
   11708:	mov	r1, #4
   1170c:	ldr	r0, [r8, #4]
   11710:	bl	10c4c <calloc@plt>
   11714:	mov	r4, r0
   11718:	str	r0, [sp]
   1171c:	mov	r3, #1
   11720:	mov	r2, r7
   11724:	mov	r1, r5
   11728:	mov	r0, r8
   1172c:	bl	11638 <dfs_helper@@Base>
   11730:	subs	r5, r0, #0
   11734:	beq	11764 <grafo_dfs@@Base+0x78>
   11738:	mov	r1, #4
   1173c:	mov	r0, r5
   11740:	bl	10c4c <calloc@plt>
   11744:	mov	r7, r0
   11748:	cmp	r5, #0
   1174c:	ble	117cc <grafo_dfs@@Base+0xe0>
   11750:	ldr	ip, [r8, #4]
   11754:	mov	r8, r0
   11758:	add	r9, r5, #1
   1175c:	mov	lr, #1
   11760:	b	11790 <grafo_dfs@@Base+0xa4>
   11764:	mov	r0, r4
   11768:	bl	10ca0 <free@plt>
   1176c:	mov	r7, #0
   11770:	str	r7, [r6]
   11774:	b	117d8 <grafo_dfs@@Base+0xec>
   11778:	mov	r2, #0
   1177c:	str	r2, [r8]
   11780:	add	lr, lr, #1
   11784:	add	r8, r8, #4
   11788:	cmp	lr, r9
   1178c:	beq	117cc <grafo_dfs@@Base+0xe0>
   11790:	cmp	ip, #0
   11794:	ble	11780 <grafo_dfs@@Base+0x94>
   11798:	mov	r3, lr
   1179c:	ldr	r2, [r4]
   117a0:	cmp	r2, lr
   117a4:	beq	11778 <grafo_dfs@@Base+0x8c>
   117a8:	mov	r1, r4
   117ac:	mov	r2, #0
   117b0:	add	r2, r2, #1
   117b4:	cmp	r2, ip
   117b8:	beq	11780 <grafo_dfs@@Base+0x94>
   117bc:	ldr	r0, [r1, #4]!
   117c0:	cmp	r0, r3
   117c4:	bne	117b0 <grafo_dfs@@Base+0xc4>
   117c8:	b	1177c <grafo_dfs@@Base+0x90>
   117cc:	str	r5, [r6]
   117d0:	mov	r0, r4
   117d4:	bl	10ca0 <free@plt>
   117d8:	mov	r0, r7
   117dc:	add	sp, sp, #12
   117e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   117e4:	mov	r7, #0
   117e8:	b	117d8 <grafo_dfs@@Base+0xec>

000117ec <grafo_bfs@@Base>:
   117ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117f0:	sub	sp, sp, #20
   117f4:	str	r3, [sp, #8]
   117f8:	subs	r3, r0, #0
   117fc:	beq	1198c <grafo_bfs@@Base+0x1a0>
   11800:	mov	r4, r1
   11804:	mov	r8, r2
   11808:	mov	r7, r3
   1180c:	ldr	r6, [r3, #4]
   11810:	mov	r1, #4
   11814:	mov	r0, r6
   11818:	bl	10c4c <calloc@plt>
   1181c:	mov	r5, r0
   11820:	str	r0, [sp]
   11824:	mov	r1, #4
   11828:	mov	r0, r6
   1182c:	bl	10c4c <calloc@plt>
   11830:	mov	fp, r0
   11834:	cmp	r6, #0
   11838:	ble	11854 <grafo_bfs@@Base+0x68>
   1183c:	mov	r3, r5
   11840:	add	r1, r5, r6, lsl #2
   11844:	mvn	r2, #0
   11848:	str	r2, [r3], #4
   1184c:	cmp	r3, r1
   11850:	bne	11848 <grafo_bfs@@Base+0x5c>
   11854:	ldr	r3, [sp]
   11858:	str	r4, [r3, r4, lsl #2]
   1185c:	str	r4, [fp]
   11860:	mov	r9, #1
   11864:	mov	sl, #0
   11868:	str	r8, [sp, #12]
   1186c:	mov	r8, r7
   11870:	b	118cc <grafo_bfs@@Base+0xe0>
   11874:	add	r4, r4, #1
   11878:	add	r5, r5, #4
   1187c:	cmp	r6, r4
   11880:	beq	118c4 <grafo_bfs@@Base+0xd8>
   11884:	mov	r2, r4
   11888:	mov	r1, r7
   1188c:	mov	r0, r8
   11890:	bl	11484 <grafo_existe@@Base>
   11894:	cmp	r0, #0
   11898:	beq	11874 <grafo_bfs@@Base+0x88>
   1189c:	ldr	r3, [r5]
   118a0:	cmn	r3, #1
   118a4:	bne	11874 <grafo_bfs@@Base+0x88>
   118a8:	str	r7, [r5]
   118ac:	str	r4, [fp, r9, lsl #2]
   118b0:	mov	r1, r6
   118b4:	add	r0, r9, #1
   118b8:	bl	12560 <lista_inverte@@Base+0x274>
   118bc:	mov	r9, r1
   118c0:	b	11874 <grafo_bfs@@Base+0x88>
   118c4:	cmp	sl, r9
   118c8:	beq	118f4 <grafo_bfs@@Base+0x108>
   118cc:	ldr	r7, [fp, sl, lsl #2]
   118d0:	mov	r1, r6
   118d4:	add	r0, sl, #1
   118d8:	bl	12560 <lista_inverte@@Base+0x274>
   118dc:	mov	sl, r1
   118e0:	cmp	r6, #0
   118e4:	ble	118c4 <grafo_bfs@@Base+0xd8>
   118e8:	ldr	r5, [sp]
   118ec:	mov	r4, #0
   118f0:	b	11884 <grafo_bfs@@Base+0x98>
   118f4:	ldr	r8, [sp, #12]
   118f8:	ldr	r1, [sp]
   118fc:	ldr	r3, [r1, r8, lsl #2]
   11900:	cmp	r3, #0
   11904:	movlt	r4, #0
   11908:	blt	11968 <grafo_bfs@@Base+0x17c>
   1190c:	cmp	r8, r3
   11910:	beq	11998 <grafo_bfs@@Base+0x1ac>
   11914:	mov	r4, #1
   11918:	b	11920 <grafo_bfs@@Base+0x134>
   1191c:	mov	r3, r2
   11920:	add	r4, r4, #1
   11924:	ldr	r2, [r1, r3, lsl #2]
   11928:	cmp	r2, r3
   1192c:	bne	1191c <grafo_bfs@@Base+0x130>
   11930:	lsl	r0, r4, #2
   11934:	bl	10cd0 <malloc@plt>
   11938:	str	r0, [sp, #4]
   1193c:	cmp	r4, #0
   11940:	ble	11968 <grafo_bfs@@Base+0x17c>
   11944:	ldr	r3, [sp, #4]
   11948:	add	r2, r3, r4, lsl #2
   1194c:	mov	r3, #0
   11950:	ldr	r1, [sp]
   11954:	str	r8, [r2, #-4]!
   11958:	ldr	r8, [r1, r8, lsl #2]
   1195c:	add	r3, r3, #1
   11960:	cmp	r3, r4
   11964:	blt	11954 <grafo_bfs@@Base+0x168>
   11968:	mov	r0, fp
   1196c:	bl	10ca0 <free@plt>
   11970:	ldr	r0, [sp]
   11974:	bl	10ca0 <free@plt>
   11978:	ldr	r3, [sp, #8]
   1197c:	str	r4, [r3]
   11980:	ldr	r0, [sp, #4]
   11984:	add	sp, sp, #20
   11988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1198c:	mov	r3, #0
   11990:	str	r3, [sp, #4]
   11994:	b	11980 <grafo_bfs@@Base+0x194>
   11998:	mov	r0, #4
   1199c:	bl	10cd0 <malloc@plt>
   119a0:	str	r0, [sp, #4]
   119a4:	mov	r4, #1
   119a8:	b	11944 <grafo_bfs@@Base+0x158>

000119ac <heap_nova@@Base>:
   119ac:	push	{r4, r5, r6, lr}
   119b0:	mov	r5, r0
   119b4:	mov	r0, #12
   119b8:	bl	10cd0 <malloc@plt>
   119bc:	subs	r4, r0, #0
   119c0:	beq	119e8 <heap_nova@@Base+0x3c>
   119c4:	mov	r3, #0
   119c8:	str	r3, [r4]
   119cc:	str	r5, [r4, #4]
   119d0:	mov	r1, #4
   119d4:	mov	r0, r5
   119d8:	bl	10c4c <calloc@plt>
   119dc:	str	r0, [r4, #8]
   119e0:	cmp	r0, #0
   119e4:	beq	119f0 <heap_nova@@Base+0x44>
   119e8:	mov	r0, r4
   119ec:	pop	{r4, r5, r6, pc}
   119f0:	mov	r0, r4
   119f4:	bl	10ca0 <free@plt>
   119f8:	mov	r4, #0
   119fc:	b	119e8 <heap_nova@@Base+0x3c>

00011a00 <heap_apaga@@Base>:
   11a00:	push	{r4, r5, r6, lr}
   11a04:	subs	r5, r0, #0
   11a08:	popeq	{r4, r5, r6, pc}
   11a0c:	ldr	r3, [r5]
   11a10:	cmp	r3, #0
   11a14:	ble	11a54 <heap_apaga@@Base+0x54>
   11a18:	mov	r4, #0
   11a1c:	mov	r6, r4
   11a20:	ldr	r3, [r5, #8]
   11a24:	ldr	r3, [r3, r4, lsl #2]
   11a28:	ldr	r0, [r3, #4]
   11a2c:	bl	10ca0 <free@plt>
   11a30:	ldr	r3, [r5, #8]
   11a34:	ldr	r0, [r3, r4, lsl #2]
   11a38:	bl	10ca0 <free@plt>
   11a3c:	ldr	r3, [r5, #8]
   11a40:	str	r6, [r3, r4, lsl #2]
   11a44:	add	r4, r4, #1
   11a48:	ldr	r3, [r5]
   11a4c:	cmp	r3, r4
   11a50:	bgt	11a20 <heap_apaga@@Base+0x20>
   11a54:	ldr	r0, [r5, #8]
   11a58:	bl	10ca0 <free@plt>
   11a5c:	mov	r0, r5
   11a60:	bl	10ca0 <free@plt>
   11a64:	pop	{r4, r5, r6, pc}

00011a68 <elemento_cria@@Base>:
   11a68:	push	{r4, r5, r6, lr}
   11a6c:	mov	r6, r0
   11a70:	mov	r5, r1
   11a74:	mov	r0, #8
   11a78:	bl	10cd0 <malloc@plt>
   11a7c:	subs	r4, r0, #0
   11a80:	beq	11ab0 <elemento_cria@@Base+0x48>
   11a84:	mov	r0, r5
   11a88:	bl	10cf4 <strlen@plt>
   11a8c:	mov	r1, #1
   11a90:	add	r0, r0, r1
   11a94:	bl	10c4c <calloc@plt>
   11a98:	str	r0, [r4, #4]
   11a9c:	cmp	r0, #0
   11aa0:	beq	11ab8 <elemento_cria@@Base+0x50>
   11aa4:	mov	r1, r5
   11aa8:	bl	10cb8 <strcpy@plt>
   11aac:	str	r6, [r4]
   11ab0:	mov	r0, r4
   11ab4:	pop	{r4, r5, r6, pc}
   11ab8:	mov	r0, r4
   11abc:	bl	10ca0 <free@plt>
   11ac0:	mov	r4, #0
   11ac4:	b	11ab0 <elemento_cria@@Base+0x48>

00011ac8 <mostraHeap@@Base>:
   11ac8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11acc:	ldr	r3, [r0]
   11ad0:	cmp	r3, r1
   11ad4:	ble	11ba8 <mostraHeap@@Base+0xe0>
   11ad8:	mov	r8, r0
   11adc:	mov	r7, r1
   11ae0:	cmp	r1, #0
   11ae4:	ble	11b74 <mostraHeap@@Base+0xac>
   11ae8:	mov	r3, r1
   11aec:	mov	r5, #0
   11af0:	sub	r3, r3, #1
   11af4:	add	r3, r3, r3, lsr #31
   11af8:	asr	r3, r3, #1
   11afc:	add	r5, r5, #1
   11b00:	cmp	r3, #0
   11b04:	bgt	11af0 <mostraHeap@@Base+0x28>
   11b08:	lsl	r1, r7, #1
   11b0c:	add	r1, r1, #1
   11b10:	mov	r0, r8
   11b14:	bl	11ac8 <mostraHeap@@Base>
   11b18:	add	r6, r5, r5, lsl #1
   11b1c:	cmp	r6, #0
   11b20:	ble	11b40 <mostraHeap@@Base+0x78>
   11b24:	mov	r4, #0
   11b28:	ldr	r9, [pc, #132]	; 11bb4 <mostraHeap@@Base+0xec>
   11b2c:	mov	r0, r9
   11b30:	bl	10c7c <printf@plt>
   11b34:	add	r4, r4, #1
   11b38:	cmp	r4, r6
   11b3c:	bne	11b2c <mostraHeap@@Base+0x64>
   11b40:	ldr	r3, [r8, #8]
   11b44:	ldr	r3, [r3, r7, lsl #2]
   11b48:	ldr	r2, [r3]
   11b4c:	ldr	r1, [r3, #4]
   11b50:	ldr	r0, [pc, #96]	; 11bb8 <mostraHeap@@Base+0xf0>
   11b54:	bl	10c7c <printf@plt>
   11b58:	add	r1, r7, #1
   11b5c:	lsl	r1, r1, #1
   11b60:	mov	r0, r8
   11b64:	bl	11ac8 <mostraHeap@@Base>
   11b68:	cmp	r5, #0
   11b6c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b70:	b	11ba8 <mostraHeap@@Base+0xe0>
   11b74:	lsl	r1, r1, #1
   11b78:	add	r1, r1, #1
   11b7c:	bl	11ac8 <mostraHeap@@Base>
   11b80:	ldr	r3, [r8, #8]
   11b84:	ldr	r3, [r3, r7, lsl #2]
   11b88:	ldr	r2, [r3]
   11b8c:	ldr	r1, [r3, #4]
   11b90:	ldr	r0, [pc, #32]	; 11bb8 <mostraHeap@@Base+0xf0>
   11b94:	bl	10c7c <printf@plt>
   11b98:	add	r1, r7, #1
   11b9c:	lsl	r1, r1, #1
   11ba0:	mov	r0, r8
   11ba4:	bl	11ac8 <mostraHeap@@Base>
   11ba8:	mov	r0, #10
   11bac:	bl	10d00 <putchar@plt>
   11bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb4:	andeq	r2, r1, r0, asr #13
   11bb8:	andeq	r2, r1, r8, asr #13

00011bbc <menor_que@@Base>:
   11bbc:	cmp	r1, #0
   11bc0:	cmpne	r0, #0
   11bc4:	beq	11be0 <menor_que@@Base+0x24>
   11bc8:	ldr	r0, [r0]
   11bcc:	ldr	r3, [r1]
   11bd0:	cmp	r0, r3
   11bd4:	movge	r0, #0
   11bd8:	movlt	r0, #1
   11bdc:	bx	lr
   11be0:	mov	r0, #0
   11be4:	bx	lr

00011be8 <heap_insere@@Base>:
   11be8:	ldr	ip, [r0]
   11bec:	ldr	r3, [r0, #4]
   11bf0:	cmp	ip, r3
   11bf4:	blt	11c00 <heap_insere@@Base+0x18>
   11bf8:	mov	r0, #0
   11bfc:	bx	lr
   11c00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c04:	mov	r6, r0
   11c08:	mov	r0, r2
   11c0c:	bl	11a68 <elemento_cria@@Base>
   11c10:	cmp	r0, #0
   11c14:	beq	11c94 <heap_insere@@Base+0xac>
   11c18:	ldr	r4, [r6]
   11c1c:	ldr	r3, [r6, #8]
   11c20:	str	r0, [r3, r4, lsl #2]
   11c24:	ldr	r3, [r6]
   11c28:	add	r3, r3, #1
   11c2c:	str	r3, [r6]
   11c30:	cmp	r4, #0
   11c34:	beq	11c84 <heap_insere@@Base+0x9c>
   11c38:	ldr	r5, [r6, #8]
   11c3c:	lsl	r9, r4, #2
   11c40:	ldr	r7, [r5, r4, lsl #2]
   11c44:	sub	r4, r4, #1
   11c48:	add	r4, r4, r4, lsr #31
   11c4c:	asr	r4, r4, #1
   11c50:	ldr	r8, [r5, r4, lsl #2]
   11c54:	mov	r1, r8
   11c58:	mov	r0, r7
   11c5c:	bl	11bbc <menor_que@@Base>
   11c60:	cmp	r0, #0
   11c64:	beq	11c8c <heap_insere@@Base+0xa4>
   11c68:	str	r7, [r5, r4, lsl #2]
   11c6c:	ldr	r3, [r6, #8]
   11c70:	str	r8, [r3, r9]
   11c74:	cmp	r4, #0
   11c78:	bne	11c38 <heap_insere@@Base+0x50>
   11c7c:	mov	r0, #1
   11c80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c84:	mov	r0, #1
   11c88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c8c:	mov	r0, #1
   11c90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c94:	mov	r0, #0
   11c98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011c9c <heap_remove@@Base>:
   11c9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ca0:	subs	r7, r0, #0
   11ca4:	beq	11d7c <heap_remove@@Base+0xe0>
   11ca8:	ldr	r3, [r7]
   11cac:	cmp	r3, #0
   11cb0:	ble	11d84 <heap_remove@@Base+0xe8>
   11cb4:	ldr	r3, [r7, #8]
   11cb8:	ldr	r0, [r3]
   11cbc:	ldr	r9, [r0, #4]
   11cc0:	bl	10ca0 <free@plt>
   11cc4:	ldr	r3, [r7]
   11cc8:	sub	r3, r3, #1
   11ccc:	str	r3, [r7]
   11cd0:	ldr	r2, [r7, #8]
   11cd4:	ldr	r3, [r2, r3, lsl #2]
   11cd8:	str	r3, [r2]
   11cdc:	ldr	r2, [r7]
   11ce0:	ldr	r3, [r7, #8]
   11ce4:	mov	r1, #0
   11ce8:	str	r1, [r3, r2, lsl #2]
   11cec:	ldr	r3, [r7]
   11cf0:	cmp	r3, #1
   11cf4:	ble	11d88 <heap_remove@@Base+0xec>
   11cf8:	mov	r5, #1
   11cfc:	mov	r6, r1
   11d00:	b	11d48 <heap_remove@@Base+0xac>
   11d04:	ldr	r5, [r7, #8]
   11d08:	ldr	r8, [r5, r4, lsl #2]
   11d0c:	ldr	sl, [r5, r6, lsl #2]
   11d10:	mov	r1, sl
   11d14:	mov	r0, r8
   11d18:	bl	11bbc <menor_que@@Base>
   11d1c:	cmp	r0, #0
   11d20:	beq	11d88 <heap_remove@@Base+0xec>
   11d24:	str	sl, [r5, r4, lsl #2]
   11d28:	ldr	r3, [r7, #8]
   11d2c:	str	r8, [r3, r6, lsl #2]
   11d30:	lsl	r5, r4, #1
   11d34:	add	r5, r5, #1
   11d38:	ldr	r3, [r7]
   11d3c:	mov	r6, r4
   11d40:	cmp	r5, r3
   11d44:	bge	11d88 <heap_remove@@Base+0xec>
   11d48:	add	r4, r6, #1
   11d4c:	lsl	r4, r4, #1
   11d50:	cmp	r4, r3
   11d54:	movge	r4, r5
   11d58:	bge	11d04 <heap_remove@@Base+0x68>
   11d5c:	ldr	r3, [r7, #8]
   11d60:	add	r3, r3, r6, lsl #3
   11d64:	ldr	r1, [r3, #4]
   11d68:	ldr	r0, [r3, #8]
   11d6c:	bl	11bbc <menor_que@@Base>
   11d70:	cmp	r0, #0
   11d74:	moveq	r4, r5
   11d78:	b	11d04 <heap_remove@@Base+0x68>
   11d7c:	mov	r9, #0
   11d80:	b	11d88 <heap_remove@@Base+0xec>
   11d84:	mov	r9, #0
   11d88:	mov	r0, r9
   11d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011d90 <novo_str@@Base>:
   11d90:	push	{r4, r5, r6, lr}
   11d94:	mov	r5, r0
   11d98:	mov	r0, #8
   11d9c:	bl	10cd0 <malloc@plt>
   11da0:	subs	r4, r0, #0
   11da4:	beq	11dd4 <novo_str@@Base+0x44>
   11da8:	mov	r0, r5
   11dac:	bl	10cf4 <strlen@plt>
   11db0:	add	r0, r0, #1
   11db4:	bl	10cd0 <malloc@plt>
   11db8:	str	r0, [r4]
   11dbc:	cmp	r0, #0
   11dc0:	beq	11ddc <novo_str@@Base+0x4c>
   11dc4:	mov	r1, r5
   11dc8:	bl	10cb8 <strcpy@plt>
   11dcc:	mov	r3, #0
   11dd0:	str	r3, [r4, #4]
   11dd4:	mov	r0, r4
   11dd8:	pop	{r4, r5, r6, pc}
   11ddc:	mov	r0, r4
   11de0:	bl	10ca0 <free@plt>
   11de4:	mov	r4, #0
   11de8:	b	11dd4 <novo_str@@Base+0x44>

00011dec <lista_nova@@Base>:
   11dec:	push	{r4, lr}
   11df0:	mov	r0, #8
   11df4:	bl	10cd0 <malloc@plt>
   11df8:	cmp	r0, #0
   11dfc:	movne	r3, #0
   11e00:	strne	r3, [r0]
   11e04:	strne	r3, [r0, #4]
   11e08:	pop	{r4, pc}

00011e0c <lista_apaga@@Base>:
   11e0c:	push	{r4, r5, r6, lr}
   11e10:	subs	r5, r0, #0
   11e14:	popeq	{r4, r5, r6, pc}
   11e18:	ldr	r4, [r5]
   11e1c:	cmp	r4, #0
   11e20:	beq	11e48 <lista_apaga@@Base+0x3c>
   11e24:	ldr	r3, [r4, #4]
   11e28:	str	r3, [r5]
   11e2c:	ldr	r0, [r4]
   11e30:	bl	10ca0 <free@plt>
   11e34:	mov	r0, r4
   11e38:	bl	10ca0 <free@plt>
   11e3c:	ldr	r4, [r5]
   11e40:	cmp	r4, #0
   11e44:	bne	11e24 <lista_apaga@@Base+0x18>
   11e48:	mov	r0, r5
   11e4c:	bl	10ca0 <free@plt>
   11e50:	pop	{r4, r5, r6, pc}

00011e54 <lista_tamanho@@Base>:
   11e54:	cmp	r0, #0
   11e58:	ldrne	r0, [r0, #4]
   11e5c:	mvneq	r0, #0
   11e60:	bx	lr

00011e64 <lista_elemento@@Base>:
   11e64:	mov	r3, r0
   11e68:	clz	r0, r0
   11e6c:	lsr	r0, r0, #5
   11e70:	orrs	r2, r0, r1, lsr #31
   11e74:	bne	11eb0 <lista_elemento@@Base+0x4c>
   11e78:	ldr	r3, [r3]
   11e7c:	cmp	r3, #0
   11e80:	cmpne	r1, #0
   11e84:	ble	11ea0 <lista_elemento@@Base+0x3c>
   11e88:	mov	r2, #0
   11e8c:	ldr	r3, [r3, #4]
   11e90:	add	r2, r2, #1
   11e94:	cmp	r3, #0
   11e98:	cmpne	r1, r2
   11e9c:	bgt	11e8c <lista_elemento@@Base+0x28>
   11ea0:	cmp	r3, #0
   11ea4:	beq	11eb8 <lista_elemento@@Base+0x54>
   11ea8:	ldr	r0, [r3]
   11eac:	bx	lr
   11eb0:	mov	r0, #0
   11eb4:	bx	lr
   11eb8:	mov	r0, #0
   11ebc:	bx	lr

00011ec0 <lista_atribui@@Base>:
   11ec0:	mov	r3, r0
   11ec4:	clz	r0, r0
   11ec8:	lsr	r0, r0, #5
   11ecc:	orrs	r0, r0, r1, lsr #31
   11ed0:	bne	11f38 <lista_atribui@@Base+0x78>
   11ed4:	push	{r4, r5, r6, lr}
   11ed8:	ldr	r4, [r3]
   11edc:	cmp	r4, #0
   11ee0:	cmpne	r1, #0
   11ee4:	ble	11f00 <lista_atribui@@Base+0x40>
   11ee8:	mov	r3, #0
   11eec:	ldr	r4, [r4, #4]
   11ef0:	add	r3, r3, #1
   11ef4:	cmp	r4, #0
   11ef8:	cmpne	r1, r3
   11efc:	bgt	11eec <lista_atribui@@Base+0x2c>
   11f00:	cmp	r4, #0
   11f04:	beq	11f40 <lista_atribui@@Base+0x80>
   11f08:	mov	r6, r2
   11f0c:	mov	r5, r1
   11f10:	mov	r0, r2
   11f14:	bl	10cf4 <strlen@plt>
   11f18:	add	r1, r0, #1
   11f1c:	ldr	r0, [r4]
   11f20:	bl	10cac <realloc@plt>
   11f24:	str	r0, [r4]
   11f28:	mov	r1, r6
   11f2c:	bl	10cb8 <strcpy@plt>
   11f30:	mov	r0, r5
   11f34:	pop	{r4, r5, r6, pc}
   11f38:	mvn	r0, #0
   11f3c:	bx	lr
   11f40:	mvn	r0, #0
   11f44:	pop	{r4, r5, r6, pc}

00011f48 <lista_insere@@Base>:
   11f48:	cmn	r2, #1
   11f4c:	movge	r3, #0
   11f50:	movlt	r3, #1
   11f54:	cmp	r0, #0
   11f58:	orreq	r3, r3, #1
   11f5c:	cmp	r3, #0
   11f60:	bne	12018 <lista_insere@@Base+0xd0>
   11f64:	push	{r4, r5, r6, lr}
   11f68:	mov	r6, r0
   11f6c:	mov	r5, r2
   11f70:	mov	r0, r1
   11f74:	cmp	r2, #0
   11f78:	beq	12038 <lista_insere@@Base+0xf0>
   11f7c:	ldr	r3, [r6, #4]
   11f80:	cmp	r2, r3
   11f84:	bge	12020 <lista_insere@@Base+0xd8>
   11f88:	ldr	r4, [r6]
   11f8c:	bl	11d90 <novo_str@@Base>
   11f90:	cmp	r0, #0
   11f94:	beq	12028 <lista_insere@@Base+0xe0>
   11f98:	ldr	r3, [r6, #4]
   11f9c:	add	r3, r3, #1
   11fa0:	str	r3, [r6, #4]
   11fa4:	cmn	r5, #1
   11fa8:	beq	11fe8 <lista_insere@@Base+0xa0>
   11fac:	sub	r2, r5, #1
   11fb0:	cmp	r4, #0
   11fb4:	cmpne	r2, #0
   11fb8:	ble	11fd4 <lista_insere@@Base+0x8c>
   11fbc:	mov	r3, #0
   11fc0:	ldr	r4, [r4, #4]
   11fc4:	add	r3, r3, #1
   11fc8:	cmp	r4, #0
   11fcc:	cmpne	r3, r2
   11fd0:	blt	11fc0 <lista_insere@@Base+0x78>
   11fd4:	ldr	r3, [r4, #4]
   11fd8:	str	r3, [r0, #4]
   11fdc:	str	r0, [r4, #4]
   11fe0:	mov	r0, r5
   11fe4:	pop	{r4, r5, r6, pc}
   11fe8:	cmp	r4, #0
   11fec:	streq	r0, [r6]
   11ff0:	bne	11ffc <lista_insere@@Base+0xb4>
   11ff4:	b	1200c <lista_insere@@Base+0xc4>
   11ff8:	mov	r4, r3
   11ffc:	ldr	r3, [r4, #4]
   12000:	cmp	r3, #0
   12004:	bne	11ff8 <lista_insere@@Base+0xb0>
   12008:	str	r0, [r4, #4]
   1200c:	ldr	r5, [r6, #4]
   12010:	sub	r0, r5, #1
   12014:	pop	{r4, r5, r6, pc}
   12018:	mvn	r0, #0
   1201c:	bx	lr
   12020:	mvn	r0, #0
   12024:	pop	{r4, r5, r6, pc}
   12028:	mvn	r0, #0
   1202c:	pop	{r4, r5, r6, pc}
   12030:	mvn	r0, #0
   12034:	pop	{r4, r5, r6, pc}
   12038:	ldr	r4, [r6]
   1203c:	bl	11d90 <novo_str@@Base>
   12040:	cmp	r0, #0
   12044:	beq	12030 <lista_insere@@Base+0xe8>
   12048:	ldr	r3, [r6, #4]
   1204c:	add	r3, r3, #1
   12050:	str	r3, [r6, #4]
   12054:	str	r4, [r0, #4]
   12058:	str	r0, [r6]
   1205c:	mov	r0, r5
   12060:	pop	{r4, r5, r6, pc}

00012064 <lista_remove@@Base>:
   12064:	mov	r3, r0
   12068:	clz	r0, r0
   1206c:	lsr	r0, r0, #5
   12070:	orrs	r2, r0, r1, lsr #31
   12074:	bne	12128 <lista_remove@@Base+0xc4>
   12078:	ldr	r2, [r3, #4]
   1207c:	cmp	r1, r2
   12080:	bge	12130 <lista_remove@@Base+0xcc>
   12084:	push	{r4, r5, r6, lr}
   12088:	mov	r0, r3
   1208c:	mov	r5, r1
   12090:	ldr	r6, [r3]
   12094:	sub	r2, r2, #1
   12098:	str	r2, [r3, #4]
   1209c:	cmp	r1, #0
   120a0:	beq	120c0 <lista_remove@@Base+0x5c>
   120a4:	ble	12120 <lista_remove@@Base+0xbc>
   120a8:	ldr	r4, [r6, #4]
   120ac:	cmp	r4, #0
   120b0:	moveq	r4, r6
   120b4:	beq	12100 <lista_remove@@Base+0x9c>
   120b8:	mov	r3, #0
   120bc:	b	120e8 <lista_remove@@Base+0x84>
   120c0:	ldr	r3, [r6, #4]
   120c4:	str	r3, [r0]
   120c8:	ldr	r0, [r6]
   120cc:	bl	10ca0 <free@plt>
   120d0:	mov	r0, r6
   120d4:	bl	10ca0 <free@plt>
   120d8:	mov	r0, r5
   120dc:	pop	{r4, r5, r6, pc}
   120e0:	mov	r6, r4
   120e4:	mov	r4, r2
   120e8:	add	r3, r3, #1
   120ec:	cmp	r5, r3
   120f0:	beq	12100 <lista_remove@@Base+0x9c>
   120f4:	ldr	r2, [r4, #4]
   120f8:	cmp	r2, #0
   120fc:	bne	120e0 <lista_remove@@Base+0x7c>
   12100:	ldr	r3, [r4, #4]
   12104:	str	r3, [r6, #4]
   12108:	ldr	r0, [r4]
   1210c:	bl	10ca0 <free@plt>
   12110:	mov	r0, r4
   12114:	bl	10ca0 <free@plt>
   12118:	mov	r0, #0
   1211c:	pop	{r4, r5, r6, pc}
   12120:	mov	r4, r6
   12124:	b	12100 <lista_remove@@Base+0x9c>
   12128:	mvn	r0, #0
   1212c:	bx	lr
   12130:	mvn	r0, #0
   12134:	bx	lr

00012138 <lista_pesquisa@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, lr}
   1213c:	cmp	r0, #0
   12140:	beq	1219c <lista_pesquisa@@Base+0x64>
   12144:	ldr	r4, [r0]
   12148:	cmp	r4, #0
   1214c:	beq	121a4 <lista_pesquisa@@Base+0x6c>
   12150:	mov	r7, r2
   12154:	mov	r6, r1
   12158:	mvn	r8, #0
   1215c:	mov	r5, #0
   12160:	b	12174 <lista_pesquisa@@Base+0x3c>
   12164:	ldr	r4, [r4, #4]
   12168:	add	r5, r5, #1
   1216c:	cmp	r4, #0
   12170:	beq	121b0 <lista_pesquisa@@Base+0x78>
   12174:	mov	r1, r6
   12178:	ldr	r0, [r4]
   1217c:	bl	10c64 <strcmp@plt>
   12180:	cmp	r0, #0
   12184:	bne	12164 <lista_pesquisa@@Base+0x2c>
   12188:	cmp	r7, #0
   1218c:	beq	121ac <lista_pesquisa@@Base+0x74>
   12190:	cmn	r7, #1
   12194:	moveq	r8, r5
   12198:	b	12164 <lista_pesquisa@@Base+0x2c>
   1219c:	mvn	r8, #0
   121a0:	b	121b0 <lista_pesquisa@@Base+0x78>
   121a4:	mvn	r8, #0
   121a8:	b	121b0 <lista_pesquisa@@Base+0x78>
   121ac:	mov	r8, r5
   121b0:	mov	r0, r8
   121b4:	pop	{r4, r5, r6, r7, r8, pc}

000121b8 <lista_ordena@@Base>:
   121b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121bc:	subs	r9, r0, #0
   121c0:	beq	12260 <lista_ordena@@Base+0xa8>
   121c4:	ldr	r8, [r9]
   121c8:	ldr	r7, [r8, #4]
   121cc:	cmp	r7, #0
   121d0:	bne	121fc <lista_ordena@@Base+0x44>
   121d4:	mov	r0, #0
   121d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121dc:	str	r4, [r7, #4]
   121e0:	ldr	r3, [r9]
   121e4:	cmp	r3, r4
   121e8:	streq	r7, [r9]
   121ec:	strne	r7, [r6, #4]
   121f0:	ldr	r7, [r8, #4]
   121f4:	cmp	r7, #0
   121f8:	beq	12258 <lista_ordena@@Base+0xa0>
   121fc:	ldr	r1, [r7]
   12200:	ldr	r0, [r8]
   12204:	bl	10c64 <strcmp@plt>
   12208:	cmp	r0, #0
   1220c:	ble	12250 <lista_ordena@@Base+0x98>
   12210:	ldr	r3, [r7, #4]
   12214:	str	r3, [r8, #4]
   12218:	ldr	r4, [r9]
   1221c:	ldr	r3, [r7, #4]
   12220:	cmp	r3, r8
   12224:	beq	121f0 <lista_ordena@@Base+0x38>
   12228:	ldr	r5, [r7]
   1222c:	mov	r6, r4
   12230:	mov	r1, r5
   12234:	ldr	r0, [r4]
   12238:	bl	10c64 <strcmp@plt>
   1223c:	cmp	r0, #0
   12240:	bgt	121dc <lista_ordena@@Base+0x24>
   12244:	mov	r6, r4
   12248:	ldr	r4, [r4, #4]
   1224c:	b	12230 <lista_ordena@@Base+0x78>
   12250:	ldr	r8, [r8, #4]
   12254:	b	121f0 <lista_ordena@@Base+0x38>
   12258:	mov	r0, #0
   1225c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12260:	mvn	r0, #0
   12264:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012268 <lista_compara@@Base>:
   12268:	cmp	r1, #0
   1226c:	cmpne	r0, #0
   12270:	beq	122dc <lista_compara@@Base+0x74>
   12274:	mov	r2, r0
   12278:	mov	r3, r1
   1227c:	ldr	r0, [r0, #4]
   12280:	ldr	r1, [r1, #4]
   12284:	cmp	r0, r1
   12288:	beq	12294 <lista_compara@@Base+0x2c>
   1228c:	mov	r0, #0
   12290:	bx	lr
   12294:	push	{r4, r5, r6, lr}
   12298:	ldr	r4, [r2]
   1229c:	ldr	r5, [r3]
   122a0:	cmp	r4, #0
   122a4:	beq	122cc <lista_compara@@Base+0x64>
   122a8:	ldr	r1, [r5]
   122ac:	ldr	r0, [r4]
   122b0:	bl	10c64 <strcmp@plt>
   122b4:	cmp	r0, #0
   122b8:	bne	122e4 <lista_compara@@Base+0x7c>
   122bc:	ldr	r4, [r4, #4]
   122c0:	ldr	r5, [r5, #4]
   122c4:	cmp	r4, #0
   122c8:	bne	122a8 <lista_compara@@Base+0x40>
   122cc:	cmp	r5, #0
   122d0:	mvnne	r0, #0
   122d4:	moveq	r0, #1
   122d8:	pop	{r4, r5, r6, pc}
   122dc:	mvn	r0, #0
   122e0:	bx	lr
   122e4:	mov	r0, #0
   122e8:	pop	{r4, r5, r6, pc}

000122ec <lista_inverte@@Base>:
   122ec:	push	{r4, r5, r6, lr}
   122f0:	subs	r4, r0, #0
   122f4:	beq	12338 <lista_inverte@@Base+0x4c>
   122f8:	bl	11dec <lista_nova@@Base>
   122fc:	subs	r5, r0, #0
   12300:	beq	12330 <lista_inverte@@Base+0x44>
   12304:	ldr	r4, [r4]
   12308:	cmp	r4, #0
   1230c:	beq	12330 <lista_inverte@@Base+0x44>
   12310:	mov	r6, #0
   12314:	mov	r2, r6
   12318:	ldr	r1, [r4]
   1231c:	mov	r0, r5
   12320:	bl	11f48 <lista_insere@@Base>
   12324:	ldr	r4, [r4, #4]
   12328:	cmp	r4, #0
   1232c:	bne	12314 <lista_inverte@@Base+0x28>
   12330:	mov	r0, r5
   12334:	pop	{r4, r5, r6, pc}
   12338:	mov	r5, r4
   1233c:	b	12330 <lista_inverte@@Base+0x44>
   12340:	cmp	r1, #0
   12344:	beq	12550 <lista_inverte@@Base+0x264>
   12348:	eor	ip, r0, r1
   1234c:	rsbmi	r1, r1, #0
   12350:	subs	r2, r1, #1
   12354:	beq	1251c <lista_inverte@@Base+0x230>
   12358:	movs	r3, r0
   1235c:	rsbmi	r3, r0, #0
   12360:	cmp	r3, r1
   12364:	bls	12528 <lista_inverte@@Base+0x23c>
   12368:	tst	r1, r2
   1236c:	beq	12538 <lista_inverte@@Base+0x24c>
   12370:	clz	r2, r3
   12374:	clz	r0, r1
   12378:	sub	r2, r0, r2
   1237c:	rsbs	r2, r2, #31
   12380:	addne	r2, r2, r2, lsl #1
   12384:	mov	r0, #0
   12388:	addne	pc, pc, r2, lsl #2
   1238c:	nop			; (mov r0, r0)
   12390:	cmp	r3, r1, lsl #31
   12394:	adc	r0, r0, r0
   12398:	subcs	r3, r3, r1, lsl #31
   1239c:	cmp	r3, r1, lsl #30
   123a0:	adc	r0, r0, r0
   123a4:	subcs	r3, r3, r1, lsl #30
   123a8:	cmp	r3, r1, lsl #29
   123ac:	adc	r0, r0, r0
   123b0:	subcs	r3, r3, r1, lsl #29
   123b4:	cmp	r3, r1, lsl #28
   123b8:	adc	r0, r0, r0
   123bc:	subcs	r3, r3, r1, lsl #28
   123c0:	cmp	r3, r1, lsl #27
   123c4:	adc	r0, r0, r0
   123c8:	subcs	r3, r3, r1, lsl #27
   123cc:	cmp	r3, r1, lsl #26
   123d0:	adc	r0, r0, r0
   123d4:	subcs	r3, r3, r1, lsl #26
   123d8:	cmp	r3, r1, lsl #25
   123dc:	adc	r0, r0, r0
   123e0:	subcs	r3, r3, r1, lsl #25
   123e4:	cmp	r3, r1, lsl #24
   123e8:	adc	r0, r0, r0
   123ec:	subcs	r3, r3, r1, lsl #24
   123f0:	cmp	r3, r1, lsl #23
   123f4:	adc	r0, r0, r0
   123f8:	subcs	r3, r3, r1, lsl #23
   123fc:	cmp	r3, r1, lsl #22
   12400:	adc	r0, r0, r0
   12404:	subcs	r3, r3, r1, lsl #22
   12408:	cmp	r3, r1, lsl #21
   1240c:	adc	r0, r0, r0
   12410:	subcs	r3, r3, r1, lsl #21
   12414:	cmp	r3, r1, lsl #20
   12418:	adc	r0, r0, r0
   1241c:	subcs	r3, r3, r1, lsl #20
   12420:	cmp	r3, r1, lsl #19
   12424:	adc	r0, r0, r0
   12428:	subcs	r3, r3, r1, lsl #19
   1242c:	cmp	r3, r1, lsl #18
   12430:	adc	r0, r0, r0
   12434:	subcs	r3, r3, r1, lsl #18
   12438:	cmp	r3, r1, lsl #17
   1243c:	adc	r0, r0, r0
   12440:	subcs	r3, r3, r1, lsl #17
   12444:	cmp	r3, r1, lsl #16
   12448:	adc	r0, r0, r0
   1244c:	subcs	r3, r3, r1, lsl #16
   12450:	cmp	r3, r1, lsl #15
   12454:	adc	r0, r0, r0
   12458:	subcs	r3, r3, r1, lsl #15
   1245c:	cmp	r3, r1, lsl #14
   12460:	adc	r0, r0, r0
   12464:	subcs	r3, r3, r1, lsl #14
   12468:	cmp	r3, r1, lsl #13
   1246c:	adc	r0, r0, r0
   12470:	subcs	r3, r3, r1, lsl #13
   12474:	cmp	r3, r1, lsl #12
   12478:	adc	r0, r0, r0
   1247c:	subcs	r3, r3, r1, lsl #12
   12480:	cmp	r3, r1, lsl #11
   12484:	adc	r0, r0, r0
   12488:	subcs	r3, r3, r1, lsl #11
   1248c:	cmp	r3, r1, lsl #10
   12490:	adc	r0, r0, r0
   12494:	subcs	r3, r3, r1, lsl #10
   12498:	cmp	r3, r1, lsl #9
   1249c:	adc	r0, r0, r0
   124a0:	subcs	r3, r3, r1, lsl #9
   124a4:	cmp	r3, r1, lsl #8
   124a8:	adc	r0, r0, r0
   124ac:	subcs	r3, r3, r1, lsl #8
   124b0:	cmp	r3, r1, lsl #7
   124b4:	adc	r0, r0, r0
   124b8:	subcs	r3, r3, r1, lsl #7
   124bc:	cmp	r3, r1, lsl #6
   124c0:	adc	r0, r0, r0
   124c4:	subcs	r3, r3, r1, lsl #6
   124c8:	cmp	r3, r1, lsl #5
   124cc:	adc	r0, r0, r0
   124d0:	subcs	r3, r3, r1, lsl #5
   124d4:	cmp	r3, r1, lsl #4
   124d8:	adc	r0, r0, r0
   124dc:	subcs	r3, r3, r1, lsl #4
   124e0:	cmp	r3, r1, lsl #3
   124e4:	adc	r0, r0, r0
   124e8:	subcs	r3, r3, r1, lsl #3
   124ec:	cmp	r3, r1, lsl #2
   124f0:	adc	r0, r0, r0
   124f4:	subcs	r3, r3, r1, lsl #2
   124f8:	cmp	r3, r1, lsl #1
   124fc:	adc	r0, r0, r0
   12500:	subcs	r3, r3, r1, lsl #1
   12504:	cmp	r3, r1
   12508:	adc	r0, r0, r0
   1250c:	subcs	r3, r3, r1
   12510:	cmp	ip, #0
   12514:	rsbmi	r0, r0, #0
   12518:	bx	lr
   1251c:	teq	ip, r0
   12520:	rsbmi	r0, r0, #0
   12524:	bx	lr
   12528:	movcc	r0, #0
   1252c:	asreq	r0, ip, #31
   12530:	orreq	r0, r0, #1
   12534:	bx	lr
   12538:	clz	r2, r1
   1253c:	rsb	r2, r2, #31
   12540:	cmp	ip, #0
   12544:	lsr	r0, r3, r2
   12548:	rsbmi	r0, r0, #0
   1254c:	bx	lr
   12550:	cmp	r0, #0
   12554:	mvngt	r0, #-2147483648	; 0x80000000
   12558:	movlt	r0, #-2147483648	; 0x80000000
   1255c:	b	12580 <lista_inverte@@Base+0x294>
   12560:	cmp	r1, #0
   12564:	beq	12550 <lista_inverte@@Base+0x264>
   12568:	push	{r0, r1, lr}
   1256c:	bl	12348 <lista_inverte@@Base+0x5c>
   12570:	pop	{r1, r2, lr}
   12574:	mul	r3, r2, r0
   12578:	sub	r1, r1, r3
   1257c:	bx	lr
   12580:	push	{r1, lr}
   12584:	mov	r0, #8
   12588:	bl	10c58 <raise@plt>
   1258c:	pop	{r1, pc}

00012590 <__libc_csu_init@@Base>:
   12590:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12594:	mov	r7, r0
   12598:	ldr	r6, [pc, #72]	; 125e8 <__libc_csu_init@@Base+0x58>
   1259c:	ldr	r5, [pc, #72]	; 125ec <__libc_csu_init@@Base+0x5c>
   125a0:	add	r6, pc, r6
   125a4:	add	r5, pc, r5
   125a8:	sub	r6, r6, r5
   125ac:	mov	r8, r1
   125b0:	mov	r9, r2
   125b4:	bl	10c2c <calloc@plt-0x20>
   125b8:	asrs	r6, r6, #2
   125bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   125c0:	mov	r4, #0
   125c4:	add	r4, r4, #1
   125c8:	ldr	r3, [r5], #4
   125cc:	mov	r2, r9
   125d0:	mov	r1, r8
   125d4:	mov	r0, r7
   125d8:	blx	r3
   125dc:	cmp	r6, r4
   125e0:	bne	125c4 <__libc_csu_init@@Base+0x34>
   125e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   125e8:	andeq	r0, r1, r8, ror #18
   125ec:	andeq	r0, r1, r0, ror #18

000125f0 <__libc_csu_fini@@Base>:
   125f0:	bx	lr

Disassembly of section .fini:

000125f4 <.fini>:
   125f4:	push	{r3, lr}
   125f8:	pop	{r3, pc}
