
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

0001082c <.init>:
   1082c:	push	{r3, lr}
   10830:	bl	109b4 <abort@plt+0x48>
   10834:	pop	{r3, pc}

Disassembly of section .plt:

00010838 <calloc@plt-0x14>:
   10838:	push	{lr}		; (str lr, [sp, #-4]!)
   1083c:	ldr	lr, [pc, #4]	; 10848 <calloc@plt-0x4>
   10840:	add	lr, pc, lr
   10844:	ldr	pc, [lr, #8]!
   10848:			; <UNDEFINED> instruction: 0x000127b8

0001084c <calloc@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #1976]!	; 0x7b8

00010858 <strcmp@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #1968]!	; 0x7b0

00010864 <strtol@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #1960]!	; 0x7a8

00010870 <printf@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1952]!	; 0x7a0

0001087c <fopen@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1944]!	; 0x798

00010888 <free@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1936]!	; 0x790

00010894 <fgets@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1928]!	; 0x788

000108a0 <strdup@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1920]!	; 0x780

000108ac <unlink@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1912]!	; 0x778

000108b8 <__xstat@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1904]!	; 0x770

000108c4 <fwrite@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1896]!	; 0x768

000108d0 <__libc_start_main@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1888]!	; 0x760

000108dc <__sysv_signal@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #73728	; 0x12000
   108e4:	ldr	pc, [ip, #1880]!	; 0x758

000108e8 <__gmon_start__@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #73728	; 0x12000
   108f0:	ldr	pc, [ip, #1872]!	; 0x750

000108f4 <getpid@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #73728	; 0x12000
   108fc:	ldr	pc, [ip, #1864]!	; 0x748

00010900 <exit@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #73728	; 0x12000
   10908:	ldr	pc, [ip, #1856]!	; 0x740

0001090c <strlen@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #73728	; 0x12000
   10914:	ldr	pc, [ip, #1848]!	; 0x738

00010918 <fprintf@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #73728	; 0x12000
   10920:	ldr	pc, [ip, #1840]!	; 0x730

00010924 <sqrt@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #73728	; 0x12000
   1092c:	ldr	pc, [ip, #1832]!	; 0x728

00010930 <__isoc99_sscanf@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #73728	; 0x12000
   10938:	ldr	pc, [ip, #1824]!	; 0x720

0001093c <fclose@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #73728	; 0x12000
   10944:	ldr	pc, [ip, #1816]!	; 0x718

00010948 <fputc@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #73728	; 0x12000
   10950:	ldr	pc, [ip, #1808]!	; 0x710

00010954 <sprintf@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #73728	; 0x12000
   1095c:	ldr	pc, [ip, #1800]!	; 0x708

00010960 <strncmp@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #73728	; 0x12000
   10968:	ldr	pc, [ip, #1792]!	; 0x700

0001096c <abort@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #73728	; 0x12000
   10974:	ldr	pc, [ip, #1784]!	; 0x6f8

Disassembly of section .text:

00010978 <error@@Base-0x1824>:
   10978:	mov	fp, #0
   1097c:	mov	lr, #0
   10980:	pop	{r1}		; (ldr r1, [sp], #4)
   10984:	mov	r2, sp
   10988:	push	{r2}		; (str r2, [sp, #-4]!)
   1098c:	push	{r0}		; (str r0, [sp, #-4]!)
   10990:	ldr	ip, [pc, #16]	; 109a8 <abort@plt+0x3c>
   10994:	push	{ip}		; (str ip, [sp, #-4]!)
   10998:	ldr	r0, [pc, #12]	; 109ac <abort@plt+0x40>
   1099c:	ldr	r3, [pc, #12]	; 109b0 <abort@plt+0x44>
   109a0:	bl	108d0 <__libc_start_main@plt>
   109a4:	bl	1096c <abort@plt>
   109a8:	andeq	r2, r1, ip, ror r7
   109ac:	andeq	r0, r1, r0, ror fp
   109b0:	andeq	r2, r1, ip, lsl r7
   109b4:	ldr	r3, [pc, #20]	; 109d0 <abort@plt+0x64>
   109b8:	ldr	r2, [pc, #20]	; 109d4 <abort@plt+0x68>
   109bc:	add	r3, pc, r3
   109c0:	ldr	r2, [r3, r2]
   109c4:	cmp	r2, #0
   109c8:	bxeq	lr
   109cc:	b	108e8 <__gmon_start__@plt>
   109d0:	andeq	r2, r1, ip, lsr r6
   109d4:	andeq	r0, r0, r0, ror r0
   109d8:	ldr	r0, [pc, #24]	; 109f8 <abort@plt+0x8c>
   109dc:	ldr	r3, [pc, #24]	; 109fc <abort@plt+0x90>
   109e0:	cmp	r3, r0
   109e4:	bxeq	lr
   109e8:	ldr	r3, [pc, #16]	; 10a00 <abort@plt+0x94>
   109ec:	cmp	r3, #0
   109f0:	bxeq	lr
   109f4:	bx	r3
   109f8:	andeq	r3, r2, r4, lsl #1
   109fc:	andeq	r3, r2, r4, lsl #1
   10a00:	andeq	r0, r0, r0
   10a04:	ldr	r0, [pc, #36]	; 10a30 <abort@plt+0xc4>
   10a08:	ldr	r1, [pc, #36]	; 10a34 <abort@plt+0xc8>
   10a0c:	sub	r1, r1, r0
   10a10:	asr	r1, r1, #2
   10a14:	add	r1, r1, r1, lsr #31
   10a18:	asrs	r1, r1, #1
   10a1c:	bxeq	lr
   10a20:	ldr	r3, [pc, #16]	; 10a38 <abort@plt+0xcc>
   10a24:	cmp	r3, #0
   10a28:	bxeq	lr
   10a2c:	bx	r3
   10a30:	andeq	r3, r2, r4, lsl #1
   10a34:	andeq	r3, r2, r4, lsl #1
   10a38:	andeq	r0, r0, r0
   10a3c:	push	{r4, lr}
   10a40:	ldr	r4, [pc, #24]	; 10a60 <abort@plt+0xf4>
   10a44:	ldrb	r3, [r4]
   10a48:	cmp	r3, #0
   10a4c:	popne	{r4, pc}
   10a50:	bl	109d8 <abort@plt+0x6c>
   10a54:	mov	r3, #1
   10a58:	strb	r3, [r4]
   10a5c:	pop	{r4, pc}
   10a60:	muleq	r2, r8, r0
   10a64:	b	10a04 <abort@plt+0x98>
   10a68:	push	{r4, r5, r6, sl, fp, lr}
   10a6c:	add	fp, sp, #16
   10a70:	movw	r4, #12560	; 0x3110
   10a74:	mov	r1, r0
   10a78:	movt	r4, #2
   10a7c:	ldm	r4, {r5, r6}
   10a80:	mov	r0, r4
   10a84:	bl	10eb8 <abort@plt+0x54c>
   10a88:	ldm	r4, {r0, r2}
   10a8c:	sub	r1, r0, r5
   10a90:	movw	r0, #29664	; 0x73e0
   10a94:	sub	r2, r2, r6
   10a98:	movt	r0, #2
   10a9c:	pop	{r4, r5, r6, sl, fp, lr}
   10aa0:	b	10c08 <abort@plt+0x29c>
   10aa4:	nop	{0}
   10aa8:	push	{r4, sl, fp, lr}
   10aac:	add	fp, sp, #8
   10ab0:	sub	sp, sp, #32
   10ab4:	movw	r4, #29664	; 0x73e0
   10ab8:	sub	r1, fp, #16
   10abc:	add	r2, sp, #16
   10ac0:	movt	r4, #2
   10ac4:	mov	r0, r4
   10ac8:	bl	10c58 <abort@plt+0x2ec>
   10acc:	ldr	r1, [r4, #12]
   10ad0:	movw	r0, #10124	; 0x278c
   10ad4:	movt	r0, #1
   10ad8:	bl	10870 <printf@plt>
   10adc:	movw	r4, #12560	; 0x3110
   10ae0:	movw	r0, #10146	; 0x27a2
   10ae4:	movt	r4, #2
   10ae8:	movt	r0, #1
   10aec:	ldr	r1, [r4]
   10af0:	bl	10870 <printf@plt>
   10af4:	ldr	r1, [r4, #4]
   10af8:	movw	r0, #10161	; 0x27b1
   10afc:	movt	r0, #1
   10b00:	bl	10870 <printf@plt>
   10b04:	ldm	r4, {r0, r1}
   10b08:	vldr	d16, [pc, #88]	; 10b68 <abort@plt+0x1fc>
   10b0c:	sub	r1, r0, r1
   10b10:	vmov	s2, r0
   10b14:	movw	r0, #10184	; 0x27c8
   10b18:	vmov	s0, r1
   10b1c:	movt	r0, #1
   10b20:	vcvt.f64.s32	d17, s0
   10b24:	vcvt.f64.s32	d18, s2
   10b28:	vmul.f64	d16, d17, d16
   10b2c:	vdiv.f64	d16, d16, d18
   10b30:	vmov	r2, r3, d16
   10b34:	bl	10870 <printf@plt>
   10b38:	vldr	d16, [fp, #-16]
   10b3c:	movw	r0, #10225	; 0x27f1
   10b40:	vldr	d17, [sp, #16]
   10b44:	movt	r0, #1
   10b48:	str	r0, [sp, #8]
   10b4c:	movw	r0, #10204	; 0x27dc
   10b50:	movt	r0, #1
   10b54:	vmov	r2, r3, d16
   10b58:	vstr	d17, [sp]
   10b5c:	bl	10870 <printf@plt>
   10b60:	sub	sp, fp, #8
   10b64:	pop	{r4, sl, fp, pc}
   10b68:	andeq	r0, r0, r0
   10b6c:	subsmi	r0, r9, r0
   10b70:	push	{fp, lr}
   10b74:	mov	fp, sp
   10b78:	sub	sp, sp, #8
   10b7c:	movw	r2, #10274	; 0x2822
   10b80:	str	r0, [sp, #4]
   10b84:	add	r0, sp, #4
   10b88:	mov	r3, #0
   10b8c:	mov	r9, r1
   10b90:	mov	r7, #0
   10b94:	movt	r2, #1
   10b98:	bl	11ea0 <abort@plt+0x1534>
   10b9c:	ldr	r0, [sp, #4]
   10ba0:	cmp	r0, #2
   10ba4:	blt	10bf8 <abort@plt+0x28c>
   10ba8:	movw	r5, #12560	; 0x3110
   10bac:	movw	r8, #29664	; 0x73e0
   10bb0:	movt	r5, #2
   10bb4:	movt	r8, #2
   10bb8:	ldr	r1, [r9, r7, lsl #2]
   10bbc:	ldr	r6, [r5]
   10bc0:	ldr	r4, [r5, #4]
   10bc4:	mov	r0, r5
   10bc8:	bl	10eb8 <abort@plt+0x54c>
   10bcc:	ldm	r5, {r0, r2}
   10bd0:	sub	r1, r0, r6
   10bd4:	sub	r2, r2, r4
   10bd8:	mov	r0, r8
   10bdc:	bl	10c08 <abort@plt+0x29c>
   10be0:	ldr	r0, [sp, #4]
   10be4:	add	r7, r7, #1
   10be8:	cmp	r7, r0
   10bec:	blt	10bb8 <abort@plt+0x24c>
   10bf0:	bl	10aa8 <abort@plt+0x13c>
   10bf4:	bl	1215c <abort@plt+0x17f0>
   10bf8:	movw	r0, #10322	; 0x2852
   10bfc:	movt	r0, #1
   10c00:	bl	1219c <error@@Base>
   10c04:	andeq	r0, r0, r0
   10c08:	push	{r4, r5, r6, sl, fp, lr}
   10c0c:	add	fp, sp, #16
   10c10:	mov	r6, r1
   10c14:	mov	r4, r0
   10c18:	mov	r0, #1
   10c1c:	mov	r1, #32
   10c20:	mov	r5, r2
   10c24:	bl	11c90 <abort@plt+0x1324>
   10c28:	mov	r1, r0
   10c2c:	str	r6, [r1, #8]
   10c30:	str	r5, [r1, #12]
   10c34:	ldr	r0, [r4, #24]
   10c38:	ldr	r3, [r4, #28]
   10c3c:	add	r2, r0, r6
   10c40:	add	r3, r3, r5
   10c44:	mov	r0, r4
   10c48:	strd	r2, [r4, #24]
   10c4c:	pop	{r4, r5, r6, sl, fp, lr}
   10c50:	b	123d0 <error@@Base+0x234>
   10c54:	nop	{0}
   10c58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10c5c:	add	fp, sp, #24
   10c60:	vpush	{d8}
   10c64:	mov	r5, r0
   10c68:	ldr	r0, [r0]
   10c6c:	cmp	r0, #0
   10c70:	beq	10e1c <abort@plt+0x4b0>
   10c74:	mov	r8, r2
   10c78:	mov	r9, r1
   10c7c:	mov	r1, #0
   10c80:	mov	r2, r0
   10c84:	ldr	r3, [r2, #4]
   10c88:	ldr	r2, [r2, #8]
   10c8c:	cmp	r2, #0
   10c90:	mov	r2, r3
   10c94:	addgt	r1, r1, #1
   10c98:	cmp	r3, #0
   10c9c:	bne	10c84 <abort@plt+0x318>
   10ca0:	cmp	r1, #1
   10ca4:	bls	10e1c <abort@plt+0x4b0>
   10ca8:	ldrd	r2, [r5, #24]
   10cac:	ldr	r1, [r5, #12]
   10cb0:	vldr	d8, [pc, #368]	; 10e28 <abort@plt+0x4bc>
   10cb4:	vmov.i32	d19, #0	; 0x00000000
   10cb8:	sub	r4, r2, r3
   10cbc:	vmov	s2, r2
   10cc0:	vmov	s0, r4
   10cc4:	sub	r4, r1, #1
   10cc8:	vcvt.f64.s32	d16, s0
   10ccc:	vmov	s0, r1
   10cd0:	vcvt.f64.s32	d17, s2
   10cd4:	mov	r1, r0
   10cd8:	vmul.f64	d18, d16, d8
   10cdc:	vcvt.f64.s32	d16, s0
   10ce0:	vmov	s0, r4
   10ce4:	vdiv.f64	d20, d18, d17
   10ce8:	vcvt.f64.s32	d17, s0
   10cec:	vmul.f64	d18, d20, d16
   10cf0:	vstr	d20, [r5, #32]
   10cf4:	ldmib	r1, {r4, r7}
   10cf8:	ldr	r6, [r1, #12]
   10cfc:	sub	r7, r2, r7
   10d00:	sub	r6, r6, r3
   10d04:	cmp	r4, #0
   10d08:	add	r6, r6, r7
   10d0c:	vmov	s2, r7
   10d10:	vmov	s0, r6
   10d14:	vcvt.f64.s32	d20, s0
   10d18:	vcvt.f64.s32	d21, s2
   10d1c:	vmul.f64	d20, d20, d8
   10d20:	vdiv.f64	d20, d20, d21
   10d24:	vmov.f64	d21, d18
   10d28:	vmls.f64	d21, d20, d17
   10d2c:	vstr	d20, [r1, #16]
   10d30:	vadd.f64	d19, d19, d20
   10d34:	vstr	d21, [r1, #24]
   10d38:	mov	r1, r4
   10d3c:	bne	10cf4 <abort@plt+0x388>
   10d40:	vmul.f64	d19, d19, d17
   10d44:	vdiv.f64	d19, d19, d16
   10d48:	vsub.f64	d19, d18, d19
   10d4c:	vmov.i32	d18, #0	; 0x00000000
   10d50:	vstr	d19, [r5, #40]	; 0x28
   10d54:	vldr	d20, [r0, #24]
   10d58:	ldr	r0, [r0, #4]
   10d5c:	vsub.f64	d20, d20, d19
   10d60:	cmp	r0, #0
   10d64:	vmla.f64	d18, d20, d20
   10d68:	bne	10d54 <abort@plt+0x3e8>
   10d6c:	vdiv.f64	d17, d18, d17
   10d70:	vdiv.f64	d16, d17, d16
   10d74:	vsqrt.f64	d0, d16
   10d78:	vcmpe.f64	d0, d0
   10d7c:	vmrs	APSR_nzcv, fpscr
   10d80:	bvc	10d8c <abort@plt+0x420>
   10d84:	vmov.f64	d0, d16
   10d88:	bl	10924 <sqrt@plt>
   10d8c:	vldr	d16, [pc, #156]	; 10e30 <abort@plt+0x4c4>
   10d90:	vldr	d17, [r5, #40]	; 0x28
   10d94:	vmov.i32	d18, #0	; 0x00000000
   10d98:	vmov.f64	d20, d8
   10d9c:	vmul.f64	d16, d0, d16
   10da0:	vsub.f64	d17, d17, d16
   10da4:	vcmpe.f64	d17, d8
   10da8:	vmrs	APSR_nzcv, fpscr
   10dac:	vcmpe.f64	d17, #0.0
   10db0:	vselgt.f64	d19, d8, d18
   10db4:	vmrs	APSR_nzcv, fpscr
   10db8:	vcmpe.f64	d17, d8
   10dbc:	vmovmi.f64	d20, d19
   10dc0:	vmrs	APSR_nzcv, fpscr
   10dc4:	vcmpe.f64	d17, #0.0
   10dc8:	vselgt.f64	d19, d20, d17
   10dcc:	vmrs	APSR_nzcv, fpscr
   10dd0:	vmovmi.f64	d19, d20
   10dd4:	vstr	d19, [r9]
   10dd8:	vldr	d17, [r5, #40]	; 0x28
   10ddc:	vadd.f64	d16, d16, d17
   10de0:	vcmpe.f64	d16, d8
   10de4:	vmrs	APSR_nzcv, fpscr
   10de8:	vcmpe.f64	d16, #0.0
   10dec:	vselgt.f64	d17, d8, d18
   10df0:	vmrs	APSR_nzcv, fpscr
   10df4:	vcmpe.f64	d16, d8
   10df8:	vmovmi.f64	d8, d17
   10dfc:	vmrs	APSR_nzcv, fpscr
   10e00:	vcmpe.f64	d16, #0.0
   10e04:	vselgt.f64	d17, d8, d16
   10e08:	vmrs	APSR_nzcv, fpscr
   10e0c:	vmovmi.f64	d17, d8
   10e10:	vstr	d17, [r8]
   10e14:	vpop	{d8}
   10e18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10e1c:	movw	r0, #10345	; 0x2869
   10e20:	movt	r0, #1
   10e24:	bl	1219c <error@@Base>
   10e28:	andeq	r0, r0, r0
   10e2c:	subsmi	r0, r9, r0
   10e30:			; <UNDEFINED> instruction: 0xf5c28f5c
   10e34:	svccc	0x00ff5c28
   10e38:	ldm	r0, {r3, ip}
   10e3c:	add	r1, r3, r1
   10e40:	add	r2, ip, r2
   10e44:	stm	r0, {r1, r2}
   10e48:	bx	lr
   10e4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e50:	add	fp, sp, #24
   10e54:	mov	r8, r3
   10e58:	mov	r5, r2
   10e5c:	mov	r4, r1
   10e60:	mov	r6, r0
   10e64:	bl	11a04 <abort@plt+0x1098>
   10e68:	mov	r7, r0
   10e6c:	cmp	r0, #0
   10e70:	bne	10e9c <abort@plt+0x530>
   10e74:	mov	r0, #1
   10e78:	mov	r1, #20
   10e7c:	bl	11c90 <abort@plt+0x1324>
   10e80:	mov	r7, r0
   10e84:	mov	r0, r4
   10e88:	bl	108a0 <strdup@plt>
   10e8c:	str	r0, [r7, #8]
   10e90:	mov	r0, r6
   10e94:	mov	r1, r7
   10e98:	bl	11a94 <abort@plt+0x1128>
   10e9c:	ldr	r0, [r7, #12]
   10ea0:	ldr	r1, [r7, #16]
   10ea4:	add	r0, r0, r5
   10ea8:	add	r1, r1, r8
   10eac:	str	r0, [r7, #12]
   10eb0:	str	r1, [r7, #16]
   10eb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10eb8:	push	{r4, r5, r6, r7, fp, lr}
   10ebc:	add	fp, sp, #16
   10ec0:	sub	sp, sp, #8
   10ec4:	mov	r6, r1
   10ec8:	movw	r1, #10369	; 0x2881
   10ecc:	mov	r5, r0
   10ed0:	movt	r1, #1
   10ed4:	mov	r0, r6
   10ed8:	bl	11d2c <abort@plt+0x13c0>
   10edc:	mov	r4, r0
   10ee0:	movw	r0, #12441	; 0x3099
   10ee4:	mov	r1, #99	; 0x63
   10ee8:	movt	r0, #2
   10eec:	mov	r2, r4
   10ef0:	bl	10894 <fgets@plt>
   10ef4:	cmp	r0, #0
   10ef8:	beq	1109c <abort@plt+0x730>
   10efc:	movw	r0, #12441	; 0x3099
   10f00:	movw	r1, #10371	; 0x2883
   10f04:	mov	r2, #45	; 0x2d
   10f08:	movt	r0, #2
   10f0c:	movt	r1, #1
   10f10:	bl	10960 <strncmp@plt>
   10f14:	cmp	r0, #0
   10f18:	bne	1109c <abort@plt+0x730>
   10f1c:	movw	r0, #12441	; 0x3099
   10f20:	mov	r1, #99	; 0x63
   10f24:	mov	r2, r4
   10f28:	movt	r0, #2
   10f2c:	bl	10894 <fgets@plt>
   10f30:	cmp	r0, #0
   10f34:	beq	1109c <abort@plt+0x730>
   10f38:	movw	r0, #12441	; 0x3099
   10f3c:	movw	r1, #10419	; 0x28b3
   10f40:	movt	r0, #2
   10f44:	movt	r1, #1
   10f48:	bl	10858 <strcmp@plt>
   10f4c:	cmp	r0, #0
   10f50:	bne	1109c <abort@plt+0x730>
   10f54:	movw	r0, #12441	; 0x3099
   10f58:	mov	r1, #99	; 0x63
   10f5c:	mov	r2, r4
   10f60:	movt	r0, #2
   10f64:	bl	10894 <fgets@plt>
   10f68:	cmp	r0, #0
   10f6c:	beq	1109c <abort@plt+0x730>
   10f70:	movw	r0, #12441	; 0x3099
   10f74:	movw	r1, #10587	; 0x295b
   10f78:	add	r2, sp, #4
   10f7c:	movt	r0, #2
   10f80:	movt	r1, #1
   10f84:	bl	10930 <__isoc99_sscanf@plt>
   10f88:	cmp	r0, #1
   10f8c:	bne	1109c <abort@plt+0x730>
   10f90:	movw	r0, #12441	; 0x3099
   10f94:	mov	r1, #99	; 0x63
   10f98:	mov	r2, r4
   10f9c:	movt	r0, #2
   10fa0:	bl	10894 <fgets@plt>
   10fa4:	cmp	r0, #0
   10fa8:	beq	1109c <abort@plt+0x730>
   10fac:	movw	r0, #12441	; 0x3099
   10fb0:	movw	r1, #10587	; 0x295b
   10fb4:	mov	r2, sp
   10fb8:	movt	r0, #2
   10fbc:	movt	r1, #1
   10fc0:	bl	10930 <__isoc99_sscanf@plt>
   10fc4:	cmp	r0, #1
   10fc8:	bne	1109c <abort@plt+0x730>
   10fcc:	movw	r0, #12441	; 0x3099
   10fd0:	mov	r1, #99	; 0x63
   10fd4:	mov	r2, r4
   10fd8:	movt	r0, #2
   10fdc:	bl	10894 <fgets@plt>
   10fe0:	cmp	r0, #0
   10fe4:	beq	1109c <abort@plt+0x730>
   10fe8:	movw	r0, #12441	; 0x3099
   10fec:	mov	r1, #99	; 0x63
   10ff0:	mov	r2, r4
   10ff4:	movt	r0, #2
   10ff8:	bl	10894 <fgets@plt>
   10ffc:	cmp	r0, #0
   11000:	beq	1109c <abort@plt+0x730>
   11004:	ldm	r5, {r0, r1}
   11008:	ldr	r2, [sp, #4]
   1100c:	add	r0, r0, r2
   11010:	ldr	r2, [sp]
   11014:	add	r1, r1, r2
   11018:	stm	r5, {r0, r1}
   1101c:	add	r1, r5, #8
   11020:	mov	r0, r4
   11024:	bl	110b8 <abort@plt+0x74c>
   11028:	mov	r7, r0
   1102c:	add	r1, r5, #416	; 0x1a0
   11030:	mov	r0, r4
   11034:	bl	110b8 <abort@plt+0x74c>
   11038:	mov	r6, r0
   1103c:	add	r1, r5, #824	; 0x338
   11040:	mov	r0, r4
   11044:	bl	110b8 <abort@plt+0x74c>
   11048:	ldr	r0, [sp, #4]
   1104c:	cmp	r0, #1
   11050:	blt	1108c <abort@plt+0x720>
   11054:	add	r1, r5, #920	; 0x398
   11058:	mov	r0, r4
   1105c:	bl	110b8 <abort@plt+0x74c>
   11060:	cmp	r7, #1
   11064:	blt	11074 <abort@plt+0x708>
   11068:	add	r1, r5, #992	; 0x3e0
   1106c:	mov	r0, r4
   11070:	bl	111dc <abort@plt+0x870>
   11074:	cmp	r6, #1
   11078:	blt	1108c <abort@plt+0x720>
   1107c:	movw	r0, #9048	; 0x2358
   11080:	add	r1, r5, r0
   11084:	mov	r0, r4
   11088:	bl	111dc <abort@plt+0x870>
   1108c:	mov	r0, r4
   11090:	bl	11da4 <abort@plt+0x1438>
   11094:	sub	sp, fp, #16
   11098:	pop	{r4, r5, r6, r7, fp, pc}
   1109c:	movw	r1, #10485	; 0x28f5
   110a0:	movw	r0, #10467	; 0x28e3
   110a4:	cmp	r6, #0
   110a8:	movt	r1, #1
   110ac:	movt	r0, #1
   110b0:	movne	r1, r6
   110b4:	bl	121dc <error@@Base+0x40>
   110b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110bc:	add	fp, sp, #28
   110c0:	sub	sp, sp, #12
   110c4:	mov	r5, r0
   110c8:	movw	r0, #12441	; 0x3099
   110cc:	mov	r4, r1
   110d0:	mov	r1, #99	; 0x63
   110d4:	movt	r0, #2
   110d8:	mov	r2, r5
   110dc:	bl	10894 <fgets@plt>
   110e0:	mov	r6, #0
   110e4:	cmp	r0, #0
   110e8:	beq	111d0 <abort@plt+0x864>
   110ec:	movw	r0, #12441	; 0x3099
   110f0:	mov	r1, #99	; 0x63
   110f4:	mov	r2, r5
   110f8:	movt	r0, #2
   110fc:	bl	10894 <fgets@plt>
   11100:	cmp	r0, #0
   11104:	beq	111d0 <abort@plt+0x864>
   11108:	movw	r7, #12441	; 0x3099
   1110c:	mov	r1, #99	; 0x63
   11110:	mov	r2, r5
   11114:	movt	r7, #2
   11118:	mov	r0, r7
   1111c:	bl	10894 <fgets@plt>
   11120:	cmp	r0, #0
   11124:	beq	111d0 <abort@plt+0x864>
   11128:	mov	r6, #0
   1112c:	add	r9, sp, #8
   11130:	add	sl, sp, #4
   11134:	add	r8, r7, #29
   11138:	movw	r1, #10583	; 0x2957
   1113c:	mov	r0, r7
   11140:	mov	r2, r9
   11144:	mov	r3, sl
   11148:	movt	r1, #1
   1114c:	bl	10930 <__isoc99_sscanf@plt>
   11150:	cmp	r0, #2
   11154:	bne	111d0 <abort@plt+0x864>
   11158:	mov	r0, r8
   1115c:	mov	r1, #0
   11160:	mov	r2, #10
   11164:	bl	10864 <strtol@plt>
   11168:	cmp	r0, #0
   1116c:	beq	11178 <abort@plt+0x80c>
   11170:	ldr	r1, [sp, #8]
   11174:	b	11198 <abort@plt+0x82c>
   11178:	movw	r1, #10575	; 0x294f
   1117c:	mov	r0, r8
   11180:	movt	r1, #1
   11184:	bl	10858 <strcmp@plt>
   11188:	ldr	r1, [sp, #8]
   1118c:	cmp	r0, #0
   11190:	movwne	r0, #11
   11194:	moveq	r6, r1
   11198:	mov	r2, r4
   1119c:	ldr	r0, [r2, r0, lsl #3]!
   111a0:	add	r0, r0, r1
   111a4:	ldr	r1, [sp, #4]
   111a8:	str	r0, [r2]
   111ac:	ldr	r0, [r2, #4]
   111b0:	add	r0, r0, r1
   111b4:	mov	r1, #99	; 0x63
   111b8:	str	r0, [r2, #4]
   111bc:	mov	r0, r7
   111c0:	mov	r2, r5
   111c4:	bl	10894 <fgets@plt>
   111c8:	cmp	r0, #0
   111cc:	bne	11138 <abort@plt+0x7cc>
   111d0:	mov	r0, r6
   111d4:	sub	sp, fp, #28
   111d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111e0:	add	fp, sp, #28
   111e4:	sub	sp, sp, #12
   111e8:	mov	r5, r0
   111ec:	movw	r0, #12441	; 0x3099
   111f0:	mov	r4, r1
   111f4:	mov	r1, #99	; 0x63
   111f8:	movt	r0, #2
   111fc:	mov	r2, r5
   11200:	bl	10894 <fgets@plt>
   11204:	cmp	r0, #0
   11208:	beq	112f8 <abort@plt+0x98c>
   1120c:	movw	r0, #12441	; 0x3099
   11210:	mov	r1, #99	; 0x63
   11214:	mov	r2, r5
   11218:	movt	r0, #2
   1121c:	bl	10894 <fgets@plt>
   11220:	cmp	r0, #0
   11224:	beq	112f8 <abort@plt+0x98c>
   11228:	movw	r6, #12441	; 0x3099
   1122c:	mov	r1, #99	; 0x63
   11230:	mov	r2, r5
   11234:	movt	r6, #2
   11238:	mov	r0, r6
   1123c:	bl	10894 <fgets@plt>
   11240:	cmp	r0, #0
   11244:	beq	112f8 <abort@plt+0x98c>
   11248:	add	r7, r6, #29
   1124c:	movw	r1, #10583	; 0x2957
   11250:	mov	r0, r6
   11254:	add	r2, sp, #8
   11258:	add	r3, sp, #4
   1125c:	movt	r1, #1
   11260:	bl	10930 <__isoc99_sscanf@plt>
   11264:	cmp	r0, #2
   11268:	bne	112f8 <abort@plt+0x98c>
   1126c:	mov	r0, r6
   11270:	bl	1090c <strlen@plt>
   11274:	ldr	r9, [sp, #8]
   11278:	ldr	sl, [sp, #4]
   1127c:	add	r0, r6, r0
   11280:	mov	r1, #0
   11284:	strb	r1, [r0, #-1]
   11288:	mov	r0, r4
   1128c:	mov	r1, r7
   11290:	bl	11a04 <abort@plt+0x1098>
   11294:	mov	r8, r0
   11298:	cmp	r0, #0
   1129c:	bne	112c8 <abort@plt+0x95c>
   112a0:	mov	r0, #1
   112a4:	mov	r1, #20
   112a8:	bl	11c90 <abort@plt+0x1324>
   112ac:	mov	r8, r0
   112b0:	mov	r0, r7
   112b4:	bl	108a0 <strdup@plt>
   112b8:	str	r0, [r8, #8]
   112bc:	mov	r0, r4
   112c0:	mov	r1, r8
   112c4:	bl	11a94 <abort@plt+0x1128>
   112c8:	ldr	r0, [r8, #12]
   112cc:	ldr	r1, [r8, #16]
   112d0:	mov	r2, r5
   112d4:	add	r0, r0, r9
   112d8:	add	r1, r1, sl
   112dc:	str	r0, [r8, #12]
   112e0:	str	r1, [r8, #16]
   112e4:	mov	r0, r6
   112e8:	mov	r1, #99	; 0x63
   112ec:	bl	10894 <fgets@plt>
   112f0:	cmp	r0, #0
   112f4:	bne	1124c <abort@plt+0x8e0>
   112f8:	sub	sp, fp, #28
   112fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11300:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11304:	add	fp, sp, #24
   11308:	sub	sp, sp, #8
   1130c:	mov	r2, r1
   11310:	movw	r1, #10491	; 0x28fb
   11314:	mov	r5, r0
   11318:	movt	r1, #1
   1131c:	mov	r0, r2
   11320:	bl	11d2c <abort@plt+0x13c0>
   11324:	movw	r1, #10493	; 0x28fd
   11328:	movw	r2, #10371	; 0x2883
   1132c:	movw	r3, #10419	; 0x28b3
   11330:	mov	r4, r0
   11334:	movt	r1, #1
   11338:	movt	r2, #1
   1133c:	movt	r3, #1
   11340:	bl	10918 <fprintf@plt>
   11344:	ldr	r2, [r5]
   11348:	movw	r1, #10498	; 0x2902
   1134c:	mov	r0, r4
   11350:	movt	r1, #1
   11354:	bl	10918 <fprintf@plt>
   11358:	ldr	r2, [r5, #4]
   1135c:	movw	r1, #10512	; 0x2910
   11360:	mov	r0, r4
   11364:	movt	r1, #1
   11368:	bl	10918 <fprintf@plt>
   1136c:	ldr	r0, [r5]
   11370:	cmp	r0, #0
   11374:	beq	113b4 <abort@plt+0xa48>
   11378:	ldr	r1, [r5, #4]
   1137c:	vldr	d16, [pc, #332]	; 114d0 <abort@plt+0xb64>
   11380:	vmov	s2, r0
   11384:	sub	r1, r0, r1
   11388:	mov	r0, r4
   1138c:	vmov	s0, r1
   11390:	movw	r1, #10600	; 0x2968
   11394:	vcvt.f64.s32	d17, s0
   11398:	vcvt.f64.s32	d18, s2
   1139c:	movt	r1, #1
   113a0:	vmul.f64	d16, d17, d16
   113a4:	vdiv.f64	d16, d16, d18
   113a8:	vmov	r2, r3, d16
   113ac:	bl	10918 <fprintf@plt>
   113b0:	b	113cc <abort@plt+0xa60>
   113b4:	movw	r0, #10591	; 0x295f
   113b8:	mov	r1, #8
   113bc:	mov	r2, #1
   113c0:	mov	r3, r4
   113c4:	movt	r0, #1
   113c8:	bl	108c4 <fwrite@plt>
   113cc:	movw	r0, #10191	; 0x27cf
   113d0:	mov	r1, #12
   113d4:	mov	r2, #1
   113d8:	mov	r3, r4
   113dc:	mov	r7, #1
   113e0:	movt	r0, #1
   113e4:	bl	108c4 <fwrite@plt>
   113e8:	movw	r3, #10534	; 0x2926
   113ec:	mov	r8, #0
   113f0:	add	r1, r5, #8
   113f4:	mov	r0, r4
   113f8:	mov	r2, #50	; 0x32
   113fc:	str	r7, [sp, #4]
   11400:	movt	r3, #1
   11404:	str	r8, [sp]
   11408:	bl	114d8 <abort@plt+0xb6c>
   1140c:	movw	r3, #10553	; 0x2939
   11410:	add	r6, r5, #416	; 0x1a0
   11414:	mov	r0, r4
   11418:	mov	r2, #50	; 0x32
   1141c:	str	r8, [sp]
   11420:	str	r7, [sp, #4]
   11424:	movt	r3, #1
   11428:	mov	r1, r6
   1142c:	bl	114d8 <abort@plt+0xb6c>
   11430:	movw	r3, #10544	; 0x2930
   11434:	add	r1, r5, #824	; 0x338
   11438:	mov	r0, r4
   1143c:	mov	r2, #10
   11440:	str	r7, [sp]
   11444:	str	r7, [sp, #4]
   11448:	movt	r3, #1
   1144c:	bl	114d8 <abort@plt+0xb6c>
   11450:	ldr	r0, [r5]
   11454:	cmp	r0, #1
   11458:	blt	114c0 <abort@plt+0xb54>
   1145c:	movw	r3, #10567	; 0x2947
   11460:	add	r1, r5, #920	; 0x398
   11464:	mov	r0, r4
   11468:	mov	r2, #8
   1146c:	str	r8, [sp]
   11470:	str	r8, [sp, #4]
   11474:	movt	r3, #1
   11478:	bl	114d8 <abort@plt+0xb6c>
   1147c:	ldr	r0, [r5, #8]
   11480:	cmp	r0, #1
   11484:	blt	1149c <abort@plt+0xb30>
   11488:	movw	r2, #10534	; 0x2926
   1148c:	add	r1, r5, #992	; 0x3e0
   11490:	mov	r0, r4
   11494:	movt	r2, #1
   11498:	bl	11838 <abort@plt+0xecc>
   1149c:	ldr	r0, [r6]
   114a0:	cmp	r0, #1
   114a4:	blt	114c0 <abort@plt+0xb54>
   114a8:	movw	r2, #10553	; 0x2939
   114ac:	movw	r0, #9048	; 0x2358
   114b0:	add	r1, r5, r0
   114b4:	movt	r2, #1
   114b8:	mov	r0, r4
   114bc:	bl	11838 <abort@plt+0xecc>
   114c0:	mov	r0, r4
   114c4:	sub	sp, fp, #24
   114c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   114cc:	b	11da4 <abort@plt+0x1438>
   114d0:	andeq	r0, r0, r0
   114d4:	subsmi	r0, r9, r0
   114d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114dc:	add	fp, sp, #28
   114e0:	sub	sp, sp, #4
   114e4:	vpush	{d8}
   114e8:	sub	sp, sp, #8
   114ec:	mov	r5, r1
   114f0:	movw	r1, #10606	; 0x296e
   114f4:	mov	r8, r2
   114f8:	mov	r2, r3
   114fc:	mov	r4, r0
   11500:	movt	r1, #1
   11504:	bl	10918 <fprintf@plt>
   11508:	movw	r0, #10654	; 0x299e
   1150c:	mov	r1, #26
   11510:	mov	r2, #1
   11514:	mov	r3, r4
   11518:	mov	r7, #1
   1151c:	movt	r0, #1
   11520:	bl	108c4 <fwrite@plt>
   11524:	movw	r0, #10681	; 0x29b9
   11528:	mov	r1, #3
   1152c:	mov	r2, #1
   11530:	mov	r3, r4
   11534:	movt	r0, #1
   11538:	bl	108c4 <fwrite@plt>
   1153c:	ldrb	r1, [fp, #8]
   11540:	movw	r0, #10611	; 0x2973
   11544:	movw	r2, #10618	; 0x297a
   11548:	movt	r0, #1
   1154c:	movt	r2, #1
   11550:	cmp	r1, #0
   11554:	str	r1, [sp]
   11558:	movw	r1, #10607	; 0x296f
   1155c:	movne	r2, r0
   11560:	movt	r1, #1
   11564:	mov	r0, r4
   11568:	bl	10918 <fprintf@plt>
   1156c:	ldr	r1, [fp, #12]
   11570:	lsl	r0, r8, #16
   11574:	sxth	r6, r8
   11578:	cmp	r0, #65536	; 0x10000
   1157c:	str	r1, [sp, #4]
   11580:	blt	11668 <abort@plt+0xcfc>
   11584:	vldr	d8, [pc, #676]	; 11830 <abort@plt+0xec4>
   11588:	movw	sl, #10625	; 0x2981
   1158c:	mov	r8, #1
   11590:	movt	sl, #1
   11594:	mov	r0, r5
   11598:	ldr	r2, [r0, r7, lsl #3]!
   1159c:	cmp	r2, #1
   115a0:	blt	11658 <abort@plt+0xcec>
   115a4:	cmp	r0, #0
   115a8:	beq	11608 <abort@plt+0xc9c>
   115ac:	add	r9, r5, r7, lsl #3
   115b0:	movw	r1, #10643	; 0x2993
   115b4:	mov	r0, r4
   115b8:	ldr	r3, [r9, #4]!
   115bc:	movt	r1, #1
   115c0:	bl	10918 <fprintf@plt>
   115c4:	ldr	r0, [r5, r7, lsl #3]
   115c8:	cmp	r0, #0
   115cc:	beq	11618 <abort@plt+0xcac>
   115d0:	ldr	r1, [r9]
   115d4:	vmov	s2, r0
   115d8:	sub	r1, r0, r1
   115dc:	mov	r0, r4
   115e0:	vmov	s0, r1
   115e4:	movw	r1, #10600	; 0x2968
   115e8:	vcvt.f64.s32	d16, s0
   115ec:	vcvt.f64.s32	d17, s2
   115f0:	movt	r1, #1
   115f4:	vmul.f64	d16, d16, d8
   115f8:	vdiv.f64	d16, d16, d17
   115fc:	vmov	r2, r3, d16
   11600:	bl	10918 <fprintf@plt>
   11604:	b	11630 <abort@plt+0xcc4>
   11608:	movw	r0, #10654	; 0x299e
   1160c:	mov	r1, #26
   11610:	movt	r0, #1
   11614:	b	11624 <abort@plt+0xcb8>
   11618:	movw	r0, #10591	; 0x295f
   1161c:	mov	r1, #8
   11620:	movt	r0, #1
   11624:	mov	r2, #1
   11628:	mov	r3, r4
   1162c:	bl	108c4 <fwrite@plt>
   11630:	movw	r0, #10681	; 0x29b9
   11634:	mov	r1, #3
   11638:	mov	r2, #1
   1163c:	mov	r3, r4
   11640:	movt	r0, #1
   11644:	bl	108c4 <fwrite@plt>
   11648:	mov	r0, r4
   1164c:	mov	r1, sl
   11650:	mov	r2, r7
   11654:	bl	10918 <fprintf@plt>
   11658:	add	r8, r8, #1
   1165c:	sxth	r7, r8
   11660:	cmp	r6, r7
   11664:	bge	11594 <abort@plt+0xc28>
   11668:	ldr	r0, [sp]
   1166c:	cmp	r0, #0
   11670:	beq	11744 <abort@plt+0xdd8>
   11674:	add	r7, r6, #1
   11678:	mov	r0, r5
   1167c:	ldr	r2, [r0, r7, lsl #3]!
   11680:	cmp	r2, #1
   11684:	blt	11744 <abort@plt+0xdd8>
   11688:	cmp	r0, #0
   1168c:	beq	116f0 <abort@plt+0xd84>
   11690:	add	r8, r5, r7, lsl #3
   11694:	movw	r1, #10643	; 0x2993
   11698:	mov	r0, r4
   1169c:	ldr	r3, [r8, #4]!
   116a0:	movt	r1, #1
   116a4:	bl	10918 <fprintf@plt>
   116a8:	ldr	r0, [r5, r7, lsl #3]
   116ac:	cmp	r0, #0
   116b0:	beq	11700 <abort@plt+0xd94>
   116b4:	ldr	r1, [r8]
   116b8:	vldr	d16, [pc, #368]	; 11830 <abort@plt+0xec4>
   116bc:	vmov	s2, r0
   116c0:	sub	r1, r0, r1
   116c4:	mov	r0, r4
   116c8:	vmov	s0, r1
   116cc:	movw	r1, #10600	; 0x2968
   116d0:	vcvt.f64.s32	d17, s0
   116d4:	vcvt.f64.s32	d18, s2
   116d8:	movt	r1, #1
   116dc:	vmul.f64	d16, d17, d16
   116e0:	vdiv.f64	d16, d16, d18
   116e4:	vmov	r2, r3, d16
   116e8:	bl	10918 <fprintf@plt>
   116ec:	b	11718 <abort@plt+0xdac>
   116f0:	movw	r0, #10654	; 0x299e
   116f4:	mov	r1, #26
   116f8:	movt	r0, #1
   116fc:	b	1170c <abort@plt+0xda0>
   11700:	movw	r0, #10591	; 0x295f
   11704:	mov	r1, #8
   11708:	movt	r0, #1
   1170c:	mov	r2, #1
   11710:	mov	r3, r4
   11714:	bl	108c4 <fwrite@plt>
   11718:	movw	r0, #10681	; 0x29b9
   1171c:	mov	r1, #3
   11720:	mov	r2, #1
   11724:	mov	r3, r4
   11728:	movt	r0, #1
   1172c:	bl	108c4 <fwrite@plt>
   11730:	movw	r1, #10634	; 0x298a
   11734:	mov	r0, r4
   11738:	mov	r2, r6
   1173c:	movt	r1, #1
   11740:	bl	10918 <fprintf@plt>
   11744:	ldr	r0, [sp, #4]
   11748:	tst	r0, #255	; 0xff
   1174c:	beq	117b4 <abort@plt+0xe48>
   11750:	cmp	r5, #0
   11754:	beq	117c4 <abort@plt+0xe58>
   11758:	ldm	r5, {r2, r3}
   1175c:	movw	r1, #10643	; 0x2993
   11760:	mov	r0, r4
   11764:	movt	r1, #1
   11768:	bl	10918 <fprintf@plt>
   1176c:	ldr	r0, [r5]
   11770:	cmp	r0, #0
   11774:	beq	117d4 <abort@plt+0xe68>
   11778:	ldr	r1, [r5, #4]
   1177c:	vldr	d16, [pc, #172]	; 11830 <abort@plt+0xec4>
   11780:	vmov	s2, r0
   11784:	sub	r1, r0, r1
   11788:	mov	r0, r4
   1178c:	vmov	s0, r1
   11790:	movw	r1, #10600	; 0x2968
   11794:	vcvt.f64.s32	d17, s0
   11798:	vcvt.f64.s32	d18, s2
   1179c:	movt	r1, #1
   117a0:	vmul.f64	d16, d17, d16
   117a4:	vdiv.f64	d16, d16, d18
   117a8:	vmov	r2, r3, d16
   117ac:	bl	10918 <fprintf@plt>
   117b0:	b	117ec <abort@plt+0xe80>
   117b4:	sub	sp, fp, #40	; 0x28
   117b8:	vpop	{d8}
   117bc:	add	sp, sp, #4
   117c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117c4:	movw	r0, #10654	; 0x299e
   117c8:	mov	r1, #26
   117cc:	movt	r0, #1
   117d0:	b	117e0 <abort@plt+0xe74>
   117d4:	movw	r0, #10591	; 0x295f
   117d8:	mov	r1, #8
   117dc:	movt	r0, #1
   117e0:	mov	r2, #1
   117e4:	mov	r3, r4
   117e8:	bl	108c4 <fwrite@plt>
   117ec:	movw	r0, #10681	; 0x29b9
   117f0:	mov	r1, #3
   117f4:	mov	r2, #1
   117f8:	mov	r3, r4
   117fc:	movt	r0, #1
   11800:	bl	108c4 <fwrite@plt>
   11804:	movw	r0, #10575	; 0x294f
   11808:	mov	r1, #7
   1180c:	mov	r2, #1
   11810:	mov	r3, r4
   11814:	movt	r0, #1
   11818:	sub	sp, fp, #40	; 0x28
   1181c:	vpop	{d8}
   11820:	add	sp, sp, #4
   11824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11828:	b	108c4 <fwrite@plt>
   1182c:	nop	{0}
   11830:	andeq	r0, r0, r0
   11834:	subsmi	r0, r9, r0
   11838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1183c:	add	fp, sp, #28
   11840:	sub	sp, sp, #4
   11844:	vpush	{d8}
   11848:	mov	r5, r0
   1184c:	mov	r0, r1
   11850:	mov	r6, r2
   11854:	mov	r8, r1
   11858:	bl	11bb4 <abort@plt+0x1248>
   1185c:	movw	r0, #8052	; 0x1f74
   11860:	movw	r2, #6584	; 0x19b8
   11864:	ldr	r0, [r8, r0]!
   11868:	movt	r2, #1
   1186c:	mov	r4, r8
   11870:	ldr	r1, [r4, #-4]!
   11874:	bl	12614 <error@@Base+0x478>
   11878:	movw	r1, #10606	; 0x296e
   1187c:	mov	r0, r5
   11880:	mov	r2, r6
   11884:	movt	r1, #1
   11888:	bl	10918 <fprintf@plt>
   1188c:	movw	r0, #10654	; 0x299e
   11890:	mov	r1, #26
   11894:	mov	r2, #1
   11898:	mov	r3, r5
   1189c:	movt	r0, #1
   118a0:	bl	108c4 <fwrite@plt>
   118a4:	movw	r0, #10681	; 0x29b9
   118a8:	mov	r1, #3
   118ac:	mov	r2, #1
   118b0:	mov	r3, r5
   118b4:	movt	r0, #1
   118b8:	bl	108c4 <fwrite@plt>
   118bc:	mov	r0, #10
   118c0:	mov	r1, r5
   118c4:	bl	10948 <fputc@plt>
   118c8:	ldr	r0, [r8]
   118cc:	cmp	r0, #1
   118d0:	blt	119a4 <abort@plt+0x1038>
   118d4:	vldr	d8, [pc, #212]	; 119b0 <abort@plt+0x1044>
   118d8:	movw	r7, #10681	; 0x29b9
   118dc:	movw	r6, #10607	; 0x296f
   118e0:	mov	sl, #0
   118e4:	movt	r7, #1
   118e8:	movt	r6, #1
   118ec:	ldr	r0, [r4]
   118f0:	movw	r1, #10643	; 0x2993
   118f4:	movt	r1, #1
   118f8:	ldr	r9, [r0, sl, lsl #2]
   118fc:	mov	r0, r5
   11900:	ldr	r2, [r9, #12]
   11904:	ldr	r3, [r9, #16]
   11908:	bl	10918 <fprintf@plt>
   1190c:	ldr	r0, [r9, #12]
   11910:	cmp	r0, #0
   11914:	beq	11950 <abort@plt+0xfe4>
   11918:	ldr	r1, [r9, #16]
   1191c:	vmov	s2, r0
   11920:	sub	r1, r0, r1
   11924:	mov	r0, r5
   11928:	vmov	s0, r1
   1192c:	movw	r1, #10600	; 0x2968
   11930:	vcvt.f64.s32	d16, s0
   11934:	vcvt.f64.s32	d17, s2
   11938:	movt	r1, #1
   1193c:	vmul.f64	d16, d16, d8
   11940:	vdiv.f64	d16, d16, d17
   11944:	vmov	r2, r3, d16
   11948:	bl	10918 <fprintf@plt>
   1194c:	b	11968 <abort@plt+0xffc>
   11950:	movw	r0, #10591	; 0x295f
   11954:	mov	r1, #8
   11958:	mov	r2, #1
   1195c:	mov	r3, r5
   11960:	movt	r0, #1
   11964:	bl	108c4 <fwrite@plt>
   11968:	mov	r0, r7
   1196c:	mov	r1, #3
   11970:	mov	r2, #1
   11974:	mov	r3, r5
   11978:	bl	108c4 <fwrite@plt>
   1197c:	ldr	r0, [r4]
   11980:	mov	r1, r6
   11984:	ldr	r0, [r0, sl, lsl #2]
   11988:	ldr	r2, [r0, #8]
   1198c:	mov	r0, r5
   11990:	bl	10918 <fprintf@plt>
   11994:	ldr	r0, [r8]
   11998:	add	sl, sl, #1
   1199c:	cmp	sl, r0
   119a0:	blt	118ec <abort@plt+0xf80>
   119a4:	vpop	{d8}
   119a8:	add	sp, sp, #4
   119ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119b0:	andeq	r0, r0, r0
   119b4:	subsmi	r0, r9, r0
   119b8:	ldr	r1, [r1, #8]
   119bc:	ldr	r0, [r0, #8]
   119c0:	b	11cb0 <abort@plt+0x1344>
   119c4:	push	{r4, r5, r6, sl, fp, lr}
   119c8:	add	fp, sp, #16
   119cc:	mov	r4, r0
   119d0:	movw	r6, #503	; 0x1f7
   119d4:	mov	r5, r0
   119d8:	mov	r0, r5
   119dc:	bl	12374 <error@@Base+0x1d8>
   119e0:	subs	r6, r6, #1
   119e4:	add	r5, r5, #16
   119e8:	bne	119d8 <abort@plt+0x106c>
   119ec:	movw	r0, #8052	; 0x1f74
   119f0:	mov	r1, #0
   119f4:	str	r1, [r4, r0]
   119f8:	movw	r0, #8048	; 0x1f70
   119fc:	str	r1, [r4, r0]
   11a00:	pop	{r4, r5, r6, sl, fp, pc}
   11a04:	push	{r4, r5, r6, sl, fp, lr}
   11a08:	add	fp, sp, #16
   11a0c:	mov	r5, r1
   11a10:	ldrb	r1, [r1]
   11a14:	mov	r4, #0
   11a18:	mov	r2, #0
   11a1c:	cmp	r1, #0
   11a20:	beq	11a54 <abort@plt+0x10e8>
   11a24:	add	r3, r5, #1
   11a28:	mov	r2, #0
   11a2c:	uxtab	r2, r2, r1
   11a30:	ldrb	r1, [r3], #1
   11a34:	cmp	r1, #0
   11a38:	bne	11a2c <abort@plt+0x10c0>
   11a3c:	movw	r1, #20065	; 0x4e61
   11a40:	movt	r1, #33354	; 0x824a
   11a44:	umull	r1, r3, r2, r1
   11a48:	lsr	r1, r3, #8
   11a4c:	movw	r3, #503	; 0x1f7
   11a50:	mls	r2, r1, r3, r2
   11a54:	ldr	r6, [r0, r2, lsl #4]
   11a58:	cmp	r6, #0
   11a5c:	bne	11a74 <abort@plt+0x1108>
   11a60:	mov	r0, r4
   11a64:	pop	{r4, r5, r6, sl, fp, pc}
   11a68:	ldr	r6, [r6, #4]
   11a6c:	cmp	r6, #0
   11a70:	beq	11a60 <abort@plt+0x10f4>
   11a74:	ldr	r1, [r6, #8]
   11a78:	mov	r0, r5
   11a7c:	bl	10858 <strcmp@plt>
   11a80:	cmp	r0, #0
   11a84:	bne	11a68 <abort@plt+0x10fc>
   11a88:	mov	r4, r6
   11a8c:	mov	r0, r4
   11a90:	pop	{r4, r5, r6, sl, fp, pc}
   11a94:	push	{r4, r5, fp, lr}
   11a98:	add	fp, sp, #8
   11a9c:	mov	r4, r0
   11aa0:	ldr	r0, [r1, #8]
   11aa4:	ldrb	r2, [r0]
   11aa8:	cmp	r2, #0
   11aac:	beq	11ae4 <abort@plt+0x1178>
   11ab0:	add	r3, r0, #1
   11ab4:	mov	r0, #0
   11ab8:	uxtab	r0, r0, r2
   11abc:	ldrb	r2, [r3], #1
   11ac0:	cmp	r2, #0
   11ac4:	bne	11ab8 <abort@plt+0x114c>
   11ac8:	movw	r2, #20065	; 0x4e61
   11acc:	movt	r2, #33354	; 0x824a
   11ad0:	umull	r2, r3, r0, r2
   11ad4:	lsr	r2, r3, #8
   11ad8:	movw	r3, #503	; 0x1f7
   11adc:	mls	r0, r2, r3, r0
   11ae0:	b	11ae8 <abort@plt+0x117c>
   11ae4:	mov	r0, #0
   11ae8:	add	r0, r4, r0, lsl #4
   11aec:	bl	12380 <error@@Base+0x1e4>
   11af0:	movw	r0, #8048	; 0x1f70
   11af4:	mov	r5, r4
   11af8:	ldr	r0, [r5, r0]!
   11afc:	cmp	r0, #0
   11b00:	beq	11b10 <abort@plt+0x11a4>
   11b04:	bl	10888 <free@plt>
   11b08:	mov	r0, #0
   11b0c:	str	r0, [r5]
   11b10:	movw	r0, #8052	; 0x1f74
   11b14:	ldr	r0, [r4, r0]!
   11b18:	add	r0, r0, #1
   11b1c:	str	r0, [r4]
   11b20:	pop	{r4, r5, fp, pc}
   11b24:	push	{r4, r5, fp, lr}
   11b28:	add	fp, sp, #8
   11b2c:	mov	r4, r0
   11b30:	ldr	r0, [r1, #8]
   11b34:	ldrb	r2, [r0]
   11b38:	cmp	r2, #0
   11b3c:	beq	11b74 <abort@plt+0x1208>
   11b40:	add	r3, r0, #1
   11b44:	mov	r0, #0
   11b48:	uxtab	r0, r0, r2
   11b4c:	ldrb	r2, [r3], #1
   11b50:	cmp	r2, #0
   11b54:	bne	11b48 <abort@plt+0x11dc>
   11b58:	movw	r2, #20065	; 0x4e61
   11b5c:	movt	r2, #33354	; 0x824a
   11b60:	umull	r2, r3, r0, r2
   11b64:	lsr	r2, r3, #8
   11b68:	movw	r3, #503	; 0x1f7
   11b6c:	mls	r0, r2, r3, r0
   11b70:	b	11b78 <abort@plt+0x120c>
   11b74:	mov	r0, #0
   11b78:	add	r0, r4, r0, lsl #4
   11b7c:	bl	124c8 <error@@Base+0x32c>
   11b80:	movw	r0, #8048	; 0x1f70
   11b84:	mov	r5, r4
   11b88:	ldr	r0, [r5, r0]!
   11b8c:	cmp	r0, #0
   11b90:	beq	11ba0 <abort@plt+0x1234>
   11b94:	bl	10888 <free@plt>
   11b98:	mov	r0, #0
   11b9c:	str	r0, [r5]
   11ba0:	movw	r0, #8052	; 0x1f74
   11ba4:	ldr	r0, [r4, r0]!
   11ba8:	sub	r0, r0, #1
   11bac:	str	r0, [r4]
   11bb0:	pop	{r4, r5, fp, pc}
   11bb4:	push	{r4, r5, fp, lr}
   11bb8:	add	fp, sp, #8
   11bbc:	mov	r4, r0
   11bc0:	movw	r0, #8048	; 0x1f70
   11bc4:	mov	r5, r4
   11bc8:	ldr	r0, [r5, r0]!
   11bcc:	cmp	r0, #0
   11bd0:	bne	11c2c <abort@plt+0x12c0>
   11bd4:	movw	r0, #8052	; 0x1f74
   11bd8:	ldr	r0, [r4, r0]
   11bdc:	cmp	r0, #0
   11be0:	popeq	{r4, r5, fp, pc}
   11be4:	mov	r1, #4
   11be8:	bl	11c90 <abort@plt+0x1324>
   11bec:	str	r0, [r5]
   11bf0:	mov	r0, #0
   11bf4:	movw	ip, #503	; 0x1f7
   11bf8:	mov	r2, #0
   11bfc:	ldr	r3, [r4, r2, lsl #4]
   11c00:	cmp	r3, #0
   11c04:	beq	11c20 <abort@plt+0x12b4>
   11c08:	ldr	r1, [r5]
   11c0c:	str	r3, [r1, r0, lsl #2]
   11c10:	add	r0, r0, #1
   11c14:	ldr	r3, [r3, #4]
   11c18:	cmp	r3, #0
   11c1c:	bne	11c08 <abort@plt+0x129c>
   11c20:	add	r2, r2, #1
   11c24:	cmp	r2, ip
   11c28:	bne	11bfc <abort@plt+0x1290>
   11c2c:	pop	{r4, r5, fp, pc}
   11c30:	push	{r4, r5, r6, r7, fp, lr}
   11c34:	add	fp, sp, #16
   11c38:	mov	r5, r1
   11c3c:	mov	r4, r0
   11c40:	movw	r7, #503	; 0x1f7
   11c44:	mov	r6, r0
   11c48:	mov	r0, r6
   11c4c:	mov	r1, r5
   11c50:	bl	12594 <error@@Base+0x3f8>
   11c54:	subs	r7, r7, #1
   11c58:	add	r6, r6, #16
   11c5c:	bne	11c48 <abort@plt+0x12dc>
   11c60:	movw	r0, #8048	; 0x1f70
   11c64:	mov	r5, r4
   11c68:	ldr	r0, [r5, r0]!
   11c6c:	cmp	r0, #0
   11c70:	beq	11c80 <abort@plt+0x1314>
   11c74:	bl	10888 <free@plt>
   11c78:	mov	r0, #0
   11c7c:	str	r0, [r5]
   11c80:	movw	r0, #8052	; 0x1f74
   11c84:	mov	r1, #0
   11c88:	str	r1, [r4, r0]
   11c8c:	pop	{r4, r5, r6, r7, fp, pc}
   11c90:	push	{fp, lr}
   11c94:	mov	fp, sp
   11c98:	bl	1084c <calloc@plt>
   11c9c:	cmp	r0, #0
   11ca0:	popne	{fp, pc}
   11ca4:	movw	r0, #10685	; 0x29bd
   11ca8:	movt	r0, #1
   11cac:	bl	1219c <error@@Base>
   11cb0:	push	{r4, r5, r6, sl, fp, lr}
   11cb4:	add	fp, sp, #16
   11cb8:	ldrb	r3, [r0]
   11cbc:	ldrb	ip, [r1]
   11cc0:	mov	r2, r0
   11cc4:	mov	r0, #0
   11cc8:	cmp	r3, #0
   11ccc:	beq	11d04 <abort@plt+0x1398>
   11cd0:	add	r6, r2, #1
   11cd4:	add	lr, r1, #1
   11cd8:	mov	r2, #0
   11cdc:	uxtb	r4, ip
   11ce0:	uxtb	r5, r3
   11ce4:	cmp	r5, r4
   11ce8:	bne	11d14 <abort@plt+0x13a8>
   11cec:	ldrb	r3, [r6, r2]
   11cf0:	ldrb	ip, [lr, r2]
   11cf4:	add	r2, r2, #1
   11cf8:	cmp	r3, #0
   11cfc:	bne	11cdc <abort@plt+0x1370>
   11d00:	b	11d08 <abort@plt+0x139c>
   11d04:	mov	r2, #0
   11d08:	cmp	ip, #0
   11d0c:	popeq	{r4, r5, r6, sl, fp, pc}
   11d10:	mov	r3, #0
   11d14:	ldrb	r1, [r1, r2]
   11d18:	uxtb	r2, r3
   11d1c:	mov	r0, #1
   11d20:	cmp	r2, r1
   11d24:	mvncc	r0, #0
   11d28:	pop	{r4, r5, r6, sl, fp, pc}
   11d2c:	push	{r4, r5, fp, lr}
   11d30:	add	fp, sp, #8
   11d34:	mov	r5, r1
   11d38:	cmp	r0, #0
   11d3c:	beq	11d70 <abort@plt+0x1404>
   11d40:	mov	r1, r5
   11d44:	mov	r4, r0
   11d48:	bl	1087c <fopen@plt>
   11d4c:	cmp	r0, #0
   11d50:	popne	{r4, r5, fp, pc}
   11d54:	ldrb	r0, [r5]
   11d58:	cmp	r0, #119	; 0x77
   11d5c:	bne	11d94 <abort@plt+0x1428>
   11d60:	movw	r0, #10711	; 0x29d7
   11d64:	mov	r1, r4
   11d68:	movt	r0, #1
   11d6c:	bl	121dc <error@@Base+0x40>
   11d70:	ldrb	r0, [r5]
   11d74:	movw	r1, #12432	; 0x3090
   11d78:	movw	r2, #12436	; 0x3094
   11d7c:	movt	r1, #2
   11d80:	movt	r2, #2
   11d84:	cmp	r0, #114	; 0x72
   11d88:	moveq	r2, r1
   11d8c:	ldr	r0, [r2]
   11d90:	pop	{r4, r5, fp, pc}
   11d94:	movw	r0, #10733	; 0x29ed
   11d98:	mov	r1, r4
   11d9c:	movt	r0, #1
   11da0:	bl	121dc <error@@Base+0x40>
   11da4:	movw	r1, #12432	; 0x3090
   11da8:	movt	r1, #2
   11dac:	ldr	r1, [r1]
   11db0:	cmp	r1, r0
   11db4:	movwne	r1, #12436	; 0x3094
   11db8:	movtne	r1, #2
   11dbc:	ldrne	r1, [r1]
   11dc0:	cmpne	r1, r0
   11dc4:	bxeq	lr
   11dc8:	b	1093c <fclose@plt>
   11dcc:	push	{fp, lr}
   11dd0:	mov	fp, sp
   11dd4:	sub	sp, sp, #88	; 0x58
   11dd8:	mov	r1, r0
   11ddc:	mov	r2, sp
   11de0:	mov	r0, #3
   11de4:	bl	108b8 <__xstat@plt>
   11de8:	clz	r0, r0
   11dec:	lsr	r0, r0, #5
   11df0:	mov	sp, fp
   11df4:	pop	{fp, pc}
   11df8:	push	{r4, r5, fp, lr}
   11dfc:	add	fp, sp, #8
   11e00:	sub	sp, sp, #104	; 0x68
   11e04:	movw	r0, #12542	; 0x30fe
   11e08:	movt	r0, #2
   11e0c:	ldrh	r1, [r0]
   11e10:	add	r5, r1, #1
   11e14:	strh	r5, [r0]
   11e18:	movw	r0, #29716	; 0x7414
   11e1c:	movt	r0, #2
   11e20:	ldr	r4, [r0]
   11e24:	bl	108f4 <getpid@plt>
   11e28:	movw	r1, #10774	; 0x2a16
   11e2c:	mov	r3, r0
   11e30:	sxth	r0, r5
   11e34:	add	r5, sp, #4
   11e38:	mov	r2, r4
   11e3c:	str	r0, [sp]
   11e40:	movt	r1, #1
   11e44:	mov	r0, r5
   11e48:	bl	10954 <sprintf@plt>
   11e4c:	mov	r0, r5
   11e50:	bl	108a0 <strdup@plt>
   11e54:	mov	r4, r0
   11e58:	bl	108ac <unlink@plt>
   11e5c:	mov	r0, r4
   11e60:	sub	sp, fp, #8
   11e64:	pop	{r4, r5, fp, pc}
   11e68:	push	{r4, sl, fp, lr}
   11e6c:	add	fp, sp, #8
   11e70:	mov	r4, r0
   11e74:	bl	1090c <strlen@plt>
   11e78:	sub	r0, r0, #1
   11e7c:	sxth	r0, r0
   11e80:	cmp	r0, #0
   11e84:	blt	11e94 <abort@plt+0x1528>
   11e88:	ldrb	r1, [r4, r0]
   11e8c:	cmp	r1, #47	; 0x2f
   11e90:	bne	11e78 <abort@plt+0x150c>
   11e94:	add	r0, r4, r0
   11e98:	add	r0, r0, #1
   11e9c:	pop	{r4, sl, fp, pc}
   11ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ea4:	add	fp, sp, #28
   11ea8:	sub	sp, sp, #12
   11eac:	ldr	r4, [r1]
   11eb0:	str	r0, [sp, #8]
   11eb4:	mov	r7, r3
   11eb8:	str	r2, [sp]
   11ebc:	str	r1, [sp, #4]
   11ec0:	mov	r0, r4
   11ec4:	bl	1090c <strlen@plt>
   11ec8:	sub	r0, r0, #1
   11ecc:	sxth	r0, r0
   11ed0:	cmp	r0, #0
   11ed4:	blt	11ee4 <abort@plt+0x1578>
   11ed8:	ldrb	r1, [r4, r0]
   11edc:	cmp	r1, #47	; 0x2f
   11ee0:	bne	11ec8 <abort@plt+0x155c>
   11ee4:	add	r0, r4, r0
   11ee8:	movw	r1, #29716	; 0x7414
   11eec:	movw	r4, #8804	; 0x2264
   11ef0:	add	r0, r0, #1
   11ef4:	movt	r1, #2
   11ef8:	movt	r4, #1
   11efc:	str	r0, [r1]
   11f00:	mov	r0, #2
   11f04:	mov	r1, r4
   11f08:	bl	108dc <__sysv_signal@plt>
   11f0c:	mov	r0, #15
   11f10:	mov	r1, r4
   11f14:	bl	108dc <__sysv_signal@plt>
   11f18:	ldr	r0, [sp, #8]
   11f1c:	ldr	r6, [r0]
   11f20:	cmp	r6, #1
   11f24:	bne	11f3c <abort@plt+0x15d0>
   11f28:	movw	r0, #12412	; 0x307c
   11f2c:	movt	r0, #2
   11f30:	ldrb	r0, [r0]
   11f34:	cmp	r0, #0
   11f38:	bne	12144 <abort@plt+0x17d8>
   11f3c:	ldr	ip, [sp, #4]
   11f40:	mov	r8, #0
   11f44:	cmp	r6, #2
   11f48:	blt	120fc <abort@plt+0x1790>
   11f4c:	cmp	r7, #0
   11f50:	beq	120b8 <abort@plt+0x174c>
   11f54:	mov	r8, #0
   11f58:	mov	r5, #1
   11f5c:	mov	r9, #1
   11f60:	ldr	r4, [ip, r5, lsl #2]
   11f64:	ldrb	r0, [r4]
   11f68:	cmp	r0, #45	; 0x2d
   11f6c:	bne	12050 <abort@plt+0x16e4>
   11f70:	ldrb	sl, [r4, #1]
   11f74:	cmp	sl, #0
   11f78:	beq	12050 <abort@plt+0x16e4>
   11f7c:	mov	r0, r4
   11f80:	bl	1090c <strlen@plt>
   11f84:	mov	r2, r0
   11f88:	movw	r0, #10803	; 0x2a33
   11f8c:	mov	r1, r4
   11f90:	movt	r0, #1
   11f94:	bl	10960 <strncmp@plt>
   11f98:	cmp	r0, #0
   11f9c:	beq	12144 <abort@plt+0x17d8>
   11fa0:	ldr	ip, [sp, #4]
   11fa4:	add	r1, r5, #1
   11fa8:	mov	r0, #0
   11fac:	ldrb	r2, [r7]
   11fb0:	cmp	r1, r6
   11fb4:	ldrlt	r0, [ip, r1, lsl #2]
   11fb8:	cmp	r2, #0
   11fbc:	beq	1214c <abort@plt+0x17e0>
   11fc0:	mov	r1, #0
   11fc4:	cmp	sl, r2
   11fc8:	beq	11ff0 <abort@plt+0x1684>
   11fcc:	mov	r2, #1
   11fd0:	sxth	r1, r2
   11fd4:	add	r3, r1, r1, lsl #1
   11fd8:	ldrb	r3, [r7, r3, lsl #2]
   11fdc:	cmp	r3, #0
   11fe0:	beq	1214c <abort@plt+0x17e0>
   11fe4:	add	r2, r2, #1
   11fe8:	cmp	sl, r3
   11fec:	bne	11fd0 <abort@plt+0x1664>
   11ff0:	add	r1, r1, r1, lsl #1
   11ff4:	add	r3, r7, r1, lsl #2
   11ff8:	ldr	r1, [r3, #4]
   11ffc:	cmp	r1, #0
   12000:	beq	12070 <abort@plt+0x1704>
   12004:	mov	r2, r4
   12008:	cmp	r0, #0
   1200c:	ldrb	r5, [r2, #2]!
   12010:	cmpeq	r5, #0
   12014:	beq	12070 <abort@plt+0x1704>
   12018:	ldr	r3, [r1]
   1201c:	cmp	r3, #0
   12020:	bne	12110 <abort@plt+0x17a4>
   12024:	cmp	r5, #0
   12028:	movne	r0, r2
   1202c:	str	r0, [r1]
   12030:	ldrb	r0, [r2]
   12034:	cmp	r0, #0
   12038:	addeq	r9, r9, #1
   1203c:	add	r9, r9, #1
   12040:	sxth	r5, r9
   12044:	cmp	r6, r5
   12048:	bgt	11f60 <abort@plt+0x15f4>
   1204c:	b	120fc <abort@plt+0x1790>
   12050:	sxth	r0, r8
   12054:	add	r8, r8, #1
   12058:	str	r4, [ip, r0, lsl #2]
   1205c:	add	r9, r9, #1
   12060:	sxth	r5, r9
   12064:	cmp	r6, r5
   12068:	bgt	11f60 <abort@plt+0x15f4>
   1206c:	b	120fc <abort@plt+0x1790>
   12070:	ldr	r0, [r3, #8]
   12074:	cmp	r0, #0
   12078:	beq	1214c <abort@plt+0x17e0>
   1207c:	ldrb	r1, [r4, #2]
   12080:	cmp	r1, #0
   12084:	bne	1214c <abort@plt+0x17e0>
   12088:	ldrb	r1, [r0]
   1208c:	cmp	r1, #0
   12090:	bne	12110 <abort@plt+0x17a4>
   12094:	mov	r1, #1
   12098:	strb	r1, [r0]
   1209c:	ldr	r0, [sp, #8]
   120a0:	ldr	r6, [r0]
   120a4:	add	r9, r9, #1
   120a8:	sxth	r5, r9
   120ac:	cmp	r6, r5
   120b0:	bgt	11f60 <abort@plt+0x15f4>
   120b4:	b	120fc <abort@plt+0x1790>
   120b8:	mov	r1, #1
   120bc:	mov	r8, #0
   120c0:	mov	r0, #1
   120c4:	ldr	r4, [ip, r1, lsl #2]
   120c8:	ldrb	r1, [r4]
   120cc:	cmp	r1, #45	; 0x2d
   120d0:	bne	120e0 <abort@plt+0x1774>
   120d4:	ldrb	r1, [r4, #1]
   120d8:	cmp	r1, #0
   120dc:	bne	12120 <abort@plt+0x17b4>
   120e0:	sxth	r1, r8
   120e4:	add	r0, r0, #1
   120e8:	add	r8, r8, #1
   120ec:	str	r4, [ip, r1, lsl #2]
   120f0:	sxth	r1, r0
   120f4:	cmp	r6, r1
   120f8:	bgt	120c4 <abort@plt+0x1758>
   120fc:	ldr	r1, [sp, #8]
   12100:	sxth	r0, r8
   12104:	str	r0, [r1]
   12108:	sub	sp, fp, #28
   1210c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12110:	movw	r0, #10839	; 0x2a57
   12114:	mov	r1, r4
   12118:	movt	r0, #1
   1211c:	bl	121dc <error@@Base+0x40>
   12120:	mov	r0, r4
   12124:	bl	1090c <strlen@plt>
   12128:	mov	r2, r0
   1212c:	movw	r0, #10803	; 0x2a33
   12130:	mov	r1, r4
   12134:	movt	r0, #1
   12138:	bl	10960 <strncmp@plt>
   1213c:	cmp	r0, #0
   12140:	bne	1214c <abort@plt+0x17e0>
   12144:	ldr	r0, [sp]
   12148:	bl	12294 <error@@Base+0xf8>
   1214c:	movw	r0, #10824	; 0x2a48
   12150:	mov	r1, r4
   12154:	movt	r0, #1
   12158:	bl	121dc <error@@Base+0x40>
   1215c:	push	{fp, lr}
   12160:	mov	fp, sp
   12164:	mov	r0, #0
   12168:	bl	1216c <abort@plt+0x1800>
   1216c:	push	{fp, lr}
   12170:	mov	fp, sp
   12174:	mov	r4, r0
   12178:	movw	r0, #29720	; 0x7418
   1217c:	movt	r0, #2
   12180:	ldr	r0, [r0]
   12184:	cmp	r0, #0
   12188:	beq	12190 <abort@plt+0x1824>
   1218c:	blx	r0
   12190:	bl	122e4 <error@@Base+0x148>
   12194:	mov	r0, r4
   12198:	bl	10900 <exit@plt>

0001219c <error@@Base>:
   1219c:	push	{fp, lr}
   121a0:	mov	fp, sp
   121a4:	mov	r3, r0
   121a8:	movw	r0, #29716	; 0x7414
   121ac:	movw	r1, #10753	; 0x2a01
   121b0:	movt	r0, #2
   121b4:	movt	r1, #1
   121b8:	ldr	r2, [r0]
   121bc:	movw	r0, #12424	; 0x3088
   121c0:	movt	r0, #2
   121c4:	ldr	r0, [r0]
   121c8:	bl	10918 <fprintf@plt>
   121cc:	movw	r0, #12416	; 0x3080
   121d0:	movt	r0, #2
   121d4:	ldr	r0, [r0]
   121d8:	bl	1216c <abort@plt+0x1800>
   121dc:	push	{fp, lr}
   121e0:	mov	fp, sp
   121e4:	sub	sp, sp, #8
   121e8:	mov	r3, r0
   121ec:	movw	r0, #29716	; 0x7414
   121f0:	str	r1, [sp]
   121f4:	movw	r1, #10761	; 0x2a09
   121f8:	movt	r0, #2
   121fc:	movt	r1, #1
   12200:	ldr	r2, [r0]
   12204:	movw	r0, #12424	; 0x3088
   12208:	movt	r0, #2
   1220c:	ldr	r0, [r0]
   12210:	bl	10918 <fprintf@plt>
   12214:	movw	r0, #12416	; 0x3080
   12218:	movt	r0, #2
   1221c:	ldr	r0, [r0]
   12220:	bl	1216c <abort@plt+0x1800>
   12224:	push	{fp, lr}
   12228:	mov	fp, sp
   1222c:	sub	sp, sp, #8
   12230:	mov	r3, r0
   12234:	movw	r0, #29716	; 0x7414
   12238:	str	r1, [sp]
   1223c:	movw	r1, #10761	; 0x2a09
   12240:	movt	r0, #2
   12244:	movt	r1, #1
   12248:	ldr	r2, [r0]
   1224c:	movw	r0, #12424	; 0x3088
   12250:	movt	r0, #2
   12254:	ldr	r0, [r0]
   12258:	bl	10918 <fprintf@plt>
   1225c:	mov	sp, fp
   12260:	pop	{fp, pc}
   12264:	movw	r0, #12544	; 0x3100
   12268:	movt	r0, #2
   1226c:	ldrb	r1, [r0]
   12270:	cmp	r1, #1
   12274:	bxeq	lr
   12278:	push	{fp, lr}
   1227c:	mov	fp, sp
   12280:	mov	r1, #1
   12284:	strb	r1, [r0]
   12288:	movw	r0, #10788	; 0x2a24
   1228c:	movt	r0, #1
   12290:	bl	1219c <error@@Base>
   12294:	push	{fp, lr}
   12298:	mov	fp, sp
   1229c:	mov	r3, r0
   122a0:	movw	r0, #29712	; 0x7410
   122a4:	movt	r0, #2
   122a8:	ldr	r0, [r0]
   122ac:	cmp	r0, #0
   122b0:	bne	122dc <error@@Base+0x140>
   122b4:	movw	r0, #29716	; 0x7414
   122b8:	movw	r1, #10809	; 0x2a39
   122bc:	movt	r0, #2
   122c0:	movt	r1, #1
   122c4:	ldr	r2, [r0]
   122c8:	movw	r0, #12424	; 0x3088
   122cc:	movt	r0, #2
   122d0:	ldr	r0, [r0]
   122d4:	bl	10918 <fprintf@plt>
   122d8:	bl	1215c <abort@plt+0x17f0>
   122dc:	blx	r0
   122e0:	bl	1215c <abort@plt+0x17f0>
   122e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   122e8:	add	fp, sp, #24
   122ec:	sub	sp, sp, #104	; 0x68
   122f0:	movw	r8, #12542	; 0x30fe
   122f4:	movt	r8, #2
   122f8:	ldrsh	r0, [r8]
   122fc:	cmp	r0, #1
   12300:	blt	1236c <error@@Base+0x1d0>
   12304:	movw	r9, #29716	; 0x7414
   12308:	movw	r5, #10774	; 0x2a16
   1230c:	mov	r7, #1
   12310:	add	r4, sp, #4
   12314:	movt	r9, #2
   12318:	movt	r5, #1
   1231c:	ldr	r6, [r9]
   12320:	bl	108f4 <getpid@plt>
   12324:	mov	r3, r0
   12328:	sxth	r0, r7
   1232c:	mov	r1, r5
   12330:	mov	r2, r6
   12334:	str	r0, [sp]
   12338:	mov	r0, r4
   1233c:	bl	10954 <sprintf@plt>
   12340:	mov	r0, r4
   12344:	bl	108a0 <strdup@plt>
   12348:	mov	r6, r0
   1234c:	bl	108ac <unlink@plt>
   12350:	mov	r0, r6
   12354:	bl	10888 <free@plt>
   12358:	add	r0, r7, #1
   1235c:	sxth	r7, r0
   12360:	ldrsh	r0, [r8]
   12364:	cmp	r7, r0
   12368:	ble	1231c <error@@Base+0x180>
   1236c:	sub	sp, fp, #24
   12370:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12374:	vmov.i32	q8, #0	; 0x00000000
   12378:	vst1.32	{d16-d17}, [r0]
   1237c:	bx	lr
   12380:	push	{r4, r5, fp, lr}
   12384:	add	fp, sp, #8
   12388:	mov	r4, r0
   1238c:	ldr	r0, [r0]
   12390:	mov	r5, #0
   12394:	str	r5, [r1]
   12398:	cmp	r0, #0
   1239c:	str	r0, [r1, #4]
   123a0:	str	r1, [r4]
   123a4:	addeq	r0, r4, #4
   123a8:	str	r1, [r0]
   123ac:	ldr	r0, [r4, #8]
   123b0:	cmp	r0, #0
   123b4:	beq	123c0 <error@@Base+0x224>
   123b8:	bl	10888 <free@plt>
   123bc:	str	r5, [r4, #8]
   123c0:	ldr	r0, [r4, #12]
   123c4:	add	r0, r0, #1
   123c8:	str	r0, [r4, #12]
   123cc:	pop	{r4, r5, fp, pc}
   123d0:	push	{r4, r5, fp, lr}
   123d4:	add	fp, sp, #8
   123d8:	mov	r4, r0
   123dc:	ldr	r0, [r0, #4]
   123e0:	mov	r5, #0
   123e4:	mov	r2, r4
   123e8:	cmp	r0, #0
   123ec:	stm	r1, {r0, r5}
   123f0:	addne	r2, r0, #4
   123f4:	str	r1, [r2]
   123f8:	str	r1, [r4, #4]
   123fc:	ldr	r0, [r4, #8]
   12400:	cmp	r0, #0
   12404:	beq	12410 <error@@Base+0x274>
   12408:	bl	10888 <free@plt>
   1240c:	str	r5, [r4, #8]
   12410:	ldr	r0, [r4, #12]
   12414:	add	r0, r0, #1
   12418:	str	r0, [r4, #12]
   1241c:	pop	{r4, r5, fp, pc}
   12420:	push	{r4, sl, fp, lr}
   12424:	add	fp, sp, #8
   12428:	mov	r4, r0
   1242c:	ldr	r0, [r2]
   12430:	mov	r3, r4
   12434:	cmp	r0, #0
   12438:	stm	r1, {r0, r2}
   1243c:	addne	r3, r0, #4
   12440:	str	r1, [r3]
   12444:	str	r1, [r2]
   12448:	ldr	r0, [r4, #8]
   1244c:	cmp	r0, #0
   12450:	beq	12460 <error@@Base+0x2c4>
   12454:	bl	10888 <free@plt>
   12458:	mov	r0, #0
   1245c:	str	r0, [r4, #8]
   12460:	ldr	r0, [r4, #12]
   12464:	add	r0, r0, #1
   12468:	str	r0, [r4, #12]
   1246c:	pop	{r4, sl, fp, pc}
   12470:	push	{r4, sl, fp, lr}
   12474:	add	fp, sp, #8
   12478:	mov	r4, r0
   1247c:	mov	r0, r1
   12480:	cmp	r1, #0
   12484:	ldr	r3, [r0, #4]!
   12488:	moveq	r0, r4
   1248c:	cmp	r3, #0
   12490:	stm	r2, {r1, r3}
   12494:	addeq	r3, r4, #4
   12498:	str	r2, [r0]
   1249c:	str	r2, [r3]
   124a0:	ldr	r0, [r4, #8]
   124a4:	cmp	r0, #0
   124a8:	beq	124b8 <error@@Base+0x31c>
   124ac:	bl	10888 <free@plt>
   124b0:	mov	r0, #0
   124b4:	str	r0, [r4, #8]
   124b8:	ldr	r0, [r4, #12]
   124bc:	add	r0, r0, #1
   124c0:	str	r0, [r4, #12]
   124c4:	pop	{r4, sl, fp, pc}
   124c8:	push	{r4, r5, fp, lr}
   124cc:	add	fp, sp, #8
   124d0:	mov	r4, r0
   124d4:	ldm	r1, {r0, r2}
   124d8:	mov	r5, #0
   124dc:	cmp	r0, #0
   124e0:	streq	r2, [r4]
   124e4:	strne	r2, [r0, #4]
   124e8:	ldrne	r2, [r1, #4]
   124ec:	cmp	r2, #0
   124f0:	addeq	r2, r4, #4
   124f4:	str	r0, [r2]
   124f8:	str	r5, [r1]
   124fc:	str	r5, [r1, #4]
   12500:	ldr	r0, [r4, #8]
   12504:	cmp	r0, #0
   12508:	beq	12514 <error@@Base+0x378>
   1250c:	bl	10888 <free@plt>
   12510:	str	r5, [r4, #8]
   12514:	ldr	r0, [r4, #12]
   12518:	sub	r0, r0, #1
   1251c:	str	r0, [r4, #12]
   12520:	pop	{r4, r5, fp, pc}
   12524:	push	{r4, sl, fp, lr}
   12528:	add	fp, sp, #8
   1252c:	mov	r4, r0
   12530:	ldr	r0, [r0, #8]
   12534:	cmp	r0, #0
   12538:	beq	12540 <error@@Base+0x3a4>
   1253c:	pop	{r4, sl, fp, pc}
   12540:	ldr	r0, [r4, #12]
   12544:	cmp	r0, #0
   12548:	beq	1253c <error@@Base+0x3a0>
   1254c:	mov	r1, #4
   12550:	bl	11c90 <abort@plt+0x1324>
   12554:	str	r0, [r4, #8]
   12558:	ldr	r1, [r4]
   1255c:	cmp	r1, #0
   12560:	beq	1253c <error@@Base+0x3a0>
   12564:	str	r1, [r0]
   12568:	ldr	r0, [r1, #4]
   1256c:	cmp	r0, #0
   12570:	popeq	{r4, sl, fp, pc}
   12574:	mov	r1, #4
   12578:	ldr	r2, [r4, #8]
   1257c:	str	r0, [r2, r1]
   12580:	add	r1, r1, #4
   12584:	ldr	r0, [r0, #4]
   12588:	cmp	r0, #0
   1258c:	bne	12578 <error@@Base+0x3dc>
   12590:	b	1253c <error@@Base+0x3a0>
   12594:	push	{r4, r5, r6, r7, fp, lr}
   12598:	add	fp, sp, #16
   1259c:	ldr	r6, [r0]
   125a0:	cmp	r6, #0
   125a4:	popeq	{r4, r5, r6, r7, fp, pc}
   125a8:	mov	r4, r1
   125ac:	mov	r5, r0
   125b0:	mov	r7, #0
   125b4:	ldm	r6, {r0, r1}
   125b8:	cmp	r0, #0
   125bc:	streq	r1, [r5]
   125c0:	strne	r1, [r0, #4]
   125c4:	ldrne	r1, [r6, #4]
   125c8:	cmp	r1, #0
   125cc:	addeq	r1, r5, #4
   125d0:	str	r0, [r1]
   125d4:	str	r7, [r6]
   125d8:	str	r7, [r6, #4]
   125dc:	ldr	r0, [r5, #8]
   125e0:	cmp	r0, #0
   125e4:	beq	125f0 <error@@Base+0x454>
   125e8:	bl	10888 <free@plt>
   125ec:	str	r7, [r5, #8]
   125f0:	ldr	r0, [r5, #12]
   125f4:	sub	r0, r0, #1
   125f8:	str	r0, [r5, #12]
   125fc:	mov	r0, r6
   12600:	blx	r4
   12604:	ldr	r6, [r5]
   12608:	cmp	r6, #0
   1260c:	bne	125b4 <error@@Base+0x418>
   12610:	pop	{r4, r5, r6, r7, fp, pc}
   12614:	cmp	r0, #2
   12618:	bxlt	lr
   1261c:	movw	r3, #12548	; 0x3104
   12620:	movt	r3, #2
   12624:	stm	r3, {r1, r2}
   12628:	sub	r1, r0, #1
   1262c:	mov	r0, #0
   12630:	b	12634 <error@@Base+0x498>
   12634:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12638:	add	fp, sp, #24
   1263c:	movw	r7, #12548	; 0x3104
   12640:	mov	r8, r1
   12644:	mov	r9, r0
   12648:	movt	r7, #2
   1264c:	b	12670 <error@@Base+0x4d4>
   12650:	sub	r1, r4, #1
   12654:	str	r6, [r0, r4, lsl #2]
   12658:	cmp	r1, r9
   1265c:	movgt	r0, r9
   12660:	blgt	12634 <error@@Base+0x498>
   12664:	add	r9, r5, #1
   12668:	cmp	r9, r8
   1266c:	popge	{r4, r5, r6, r7, r8, r9, fp, pc}
   12670:	ldr	r0, [r7]
   12674:	cmp	r9, r8
   12678:	mov	r4, r8
   1267c:	mov	r5, r9
   12680:	ldr	r6, [r0, r9, lsl #2]
   12684:	bge	12650 <error@@Base+0x4b4>
   12688:	mov	r5, r9
   1268c:	mov	r4, r8
   12690:	cmp	r5, r4
   12694:	blt	126a8 <error@@Base+0x50c>
   12698:	b	126c0 <error@@Base+0x524>
   1269c:	sub	r4, r4, #1
   126a0:	cmp	r5, r4
   126a4:	bge	126c0 <error@@Base+0x524>
   126a8:	ldm	r7, {r0, r2}
   126ac:	ldr	r1, [r0, r4, lsl #2]
   126b0:	mov	r0, r6
   126b4:	blx	r2
   126b8:	cmn	r0, #1
   126bc:	ble	1269c <error@@Base+0x500>
   126c0:	cmp	r5, r4
   126c4:	beq	126d8 <error@@Base+0x53c>
   126c8:	ldr	r0, [r7]
   126cc:	ldr	r1, [r0, r4, lsl #2]
   126d0:	str	r1, [r0, r5, lsl #2]
   126d4:	add	r5, r5, #1
   126d8:	cmp	r5, r4
   126dc:	bge	126f8 <error@@Base+0x55c>
   126e0:	ldm	r7, {r0, r2}
   126e4:	ldr	r1, [r0, r5, lsl #2]
   126e8:	mov	r0, r6
   126ec:	blx	r2
   126f0:	cmp	r0, #1
   126f4:	bge	126d4 <error@@Base+0x538>
   126f8:	cmp	r5, r4
   126fc:	ldrne	r0, [r7]
   12700:	ldrne	r1, [r0, r5, lsl #2]
   12704:	strne	r1, [r0, r4, lsl #2]
   12708:	subne	r4, r4, #1
   1270c:	cmp	r5, r4
   12710:	blt	126a0 <error@@Base+0x504>
   12714:	ldr	r0, [r7]
   12718:	b	12650 <error@@Base+0x4b4>
   1271c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12720:	mov	r7, r0
   12724:	ldr	r6, [pc, #72]	; 12774 <error@@Base+0x5d8>
   12728:	ldr	r5, [pc, #72]	; 12778 <error@@Base+0x5dc>
   1272c:	add	r6, pc, r6
   12730:	add	r5, pc, r5
   12734:	sub	r6, r6, r5
   12738:	mov	r8, r1
   1273c:	mov	r9, r2
   12740:	bl	1082c <calloc@plt-0x20>
   12744:	asrs	r6, r6, #2
   12748:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1274c:	mov	r4, #0
   12750:	add	r4, r4, #1
   12754:	ldr	r3, [r5], #4
   12758:	mov	r2, r9
   1275c:	mov	r1, r8
   12760:	mov	r0, r7
   12764:	blx	r3
   12768:	cmp	r6, r4
   1276c:	bne	12750 <error@@Base+0x5b4>
   12770:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12774:	andeq	r0, r1, r8, asr #15
   12778:	andeq	r0, r1, r0, asr #15
   1277c:	bx	lr

Disassembly of section .fini:

00012780 <.fini>:
   12780:	push	{r3, lr}
   12784:	pop	{r3, pc}
