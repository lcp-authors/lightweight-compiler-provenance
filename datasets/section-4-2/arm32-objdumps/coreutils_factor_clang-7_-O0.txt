
../repos/coreutils/src/factor:     file format elf32-littlearm


Disassembly of section .init:

0001107c <.init>:
   1107c:	push	{r3, lr}
   11080:	bl	113cc <__assert_fail@plt+0x48>
   11084:	pop	{r3, pc}

Disassembly of section .plt:

00011088 <calloc@plt-0x14>:
   11088:	push	{lr}		; (str lr, [sp, #-4]!)
   1108c:	ldr	lr, [pc, #4]	; 11098 <calloc@plt-0x4>
   11090:	add	lr, pc, lr
   11094:	ldr	pc, [lr, #8]!
   11098:	andeq	r8, r3, r8, ror #30

0001109c <calloc@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #56, 20	; 0x38000
   110a4:	ldr	pc, [ip, #3944]!	; 0xf68

000110a8 <fputs_unlocked@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #56, 20	; 0x38000
   110b0:	ldr	pc, [ip, #3936]!	; 0xf60

000110b4 <raise@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #56, 20	; 0x38000
   110bc:	ldr	pc, [ip, #3928]!	; 0xf58

000110c0 <iconv_close@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #56, 20	; 0x38000
   110c8:	ldr	pc, [ip, #3920]!	; 0xf50

000110cc <iconv@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #56, 20	; 0x38000
   110d4:	ldr	pc, [ip, #3912]!	; 0xf48

000110d8 <strcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #56, 20	; 0x38000
   110e0:	ldr	pc, [ip, #3904]!	; 0xf40

000110e4 <printf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #56, 20	; 0x38000
   110ec:	ldr	pc, [ip, #3896]!	; 0xf38

000110f0 <fflush@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #56, 20	; 0x38000
   110f8:	ldr	pc, [ip, #3888]!	; 0xf30

000110fc <wcwidth@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #56, 20	; 0x38000
   11104:	ldr	pc, [ip, #3880]!	; 0xf28

00011108 <memmove@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #56, 20	; 0x38000
   11110:	ldr	pc, [ip, #3872]!	; 0xf20

00011114 <free@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #56, 20	; 0x38000
   1111c:	ldr	pc, [ip, #3864]!	; 0xf18

00011120 <_exit@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #56, 20	; 0x38000
   11128:	ldr	pc, [ip, #3856]!	; 0xf10

0001112c <memcpy@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #56, 20	; 0x38000
   11134:	ldr	pc, [ip, #3848]!	; 0xf08

00011138 <mbsinit@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #56, 20	; 0x38000
   11140:	ldr	pc, [ip, #3840]!	; 0xf00

00011144 <memcmp@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #56, 20	; 0x38000
   1114c:	ldr	pc, [ip, #3832]!	; 0xef8

00011150 <getc_unlocked@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #56, 20	; 0x38000
   11158:	ldr	pc, [ip, #3824]!	; 0xef0

0001115c <strdup@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #56, 20	; 0x38000
   11164:	ldr	pc, [ip, #3816]!	; 0xee8

00011168 <realloc@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #56, 20	; 0x38000
   11170:	ldr	pc, [ip, #3808]!	; 0xee0

00011174 <textdomain@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #56, 20	; 0x38000
   1117c:	ldr	pc, [ip, #3800]!	; 0xed8

00011180 <iswcntrl@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #56, 20	; 0x38000
   11188:	ldr	pc, [ip, #3792]!	; 0xed0

0001118c <fflush_unlocked@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #56, 20	; 0x38000
   11194:	ldr	pc, [ip, #3784]!	; 0xec8

00011198 <iswprint@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #56, 20	; 0x38000
   111a0:	ldr	pc, [ip, #3776]!	; 0xec0

000111a4 <fwrite@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #56, 20	; 0x38000
   111ac:	ldr	pc, [ip, #3768]!	; 0xeb8

000111b0 <lseek64@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #56, 20	; 0x38000
   111b8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111bc <__ctype_get_mb_cur_max@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #56, 20	; 0x38000
   111c4:	ldr	pc, [ip, #3752]!	; 0xea8

000111c8 <__fpending@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #56, 20	; 0x38000
   111d0:	ldr	pc, [ip, #3744]!	; 0xea0

000111d4 <ferror_unlocked@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #56, 20	; 0x38000
   111dc:	ldr	pc, [ip, #3736]!	; 0xe98

000111e0 <mbrtowc@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #56, 20	; 0x38000
   111e8:	ldr	pc, [ip, #3728]!	; 0xe90

000111ec <error@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #56, 20	; 0x38000
   111f4:	ldr	pc, [ip, #3720]!	; 0xe88

000111f8 <malloc@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #56, 20	; 0x38000
   11200:	ldr	pc, [ip, #3712]!	; 0xe80

00011204 <iconv_open@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #56, 20	; 0x38000
   1120c:	ldr	pc, [ip, #3704]!	; 0xe78

00011210 <__libc_start_main@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #56, 20	; 0x38000
   11218:	ldr	pc, [ip, #3696]!	; 0xe70

0001121c <__freading@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #56, 20	; 0x38000
   11224:	ldr	pc, [ip, #3688]!	; 0xe68

00011228 <__gmon_start__@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #56, 20	; 0x38000
   11230:	ldr	pc, [ip, #3680]!	; 0xe60

00011234 <getopt_long@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #56, 20	; 0x38000
   1123c:	ldr	pc, [ip, #3672]!	; 0xe58

00011240 <__ctype_b_loc@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #56, 20	; 0x38000
   11248:	ldr	pc, [ip, #3664]!	; 0xe50

0001124c <exit@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #56, 20	; 0x38000
   11254:	ldr	pc, [ip, #3656]!	; 0xe48

00011258 <iswspace@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #56, 20	; 0x38000
   11260:	ldr	pc, [ip, #3648]!	; 0xe40

00011264 <gettext@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #56, 20	; 0x38000
   1126c:	ldr	pc, [ip, #3640]!	; 0xe38

00011270 <strlen@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #56, 20	; 0x38000
   11278:	ldr	pc, [ip, #3632]!	; 0xe30

0001127c <strchr@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #56, 20	; 0x38000
   11284:	ldr	pc, [ip, #3624]!	; 0xe28

00011288 <fprintf@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #56, 20	; 0x38000
   11290:	ldr	pc, [ip, #3616]!	; 0xe20

00011294 <__errno_location@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #56, 20	; 0x38000
   1129c:	ldr	pc, [ip, #3608]!	; 0xe18

000112a0 <iswalnum@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #56, 20	; 0x38000
   112a8:	ldr	pc, [ip, #3600]!	; 0xe10

000112ac <__cxa_atexit@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #56, 20	; 0x38000
   112b4:	ldr	pc, [ip, #3592]!	; 0xe08

000112b8 <memset@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #56, 20	; 0x38000
   112c0:	ldr	pc, [ip, #3584]!	; 0xe00

000112c4 <write@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #56, 20	; 0x38000
   112cc:	ldr	pc, [ip, #3576]!	; 0xdf8

000112d0 <fileno@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #56, 20	; 0x38000
   112d8:	ldr	pc, [ip, #3568]!	; 0xdf0

000112dc <memchr@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #56, 20	; 0x38000
   112e4:	ldr	pc, [ip, #3560]!	; 0xde8

000112e8 <fclose@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #56, 20	; 0x38000
   112f0:	ldr	pc, [ip, #3552]!	; 0xde0

000112f4 <strnlen@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #56, 20	; 0x38000
   112fc:	ldr	pc, [ip, #3544]!	; 0xdd8

00011300 <fseeko64@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #56, 20	; 0x38000
   11308:	ldr	pc, [ip, #3536]!	; 0xdd0

0001130c <setlocale@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #56, 20	; 0x38000
   11314:	ldr	pc, [ip, #3528]!	; 0xdc8

00011318 <strrchr@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #56, 20	; 0x38000
   11320:	ldr	pc, [ip, #3520]!	; 0xdc0

00011324 <nl_langinfo@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #56, 20	; 0x38000
   1132c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011330 <sprintf@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #56, 20	; 0x38000
   11338:	ldr	pc, [ip, #3504]!	; 0xdb0

0001133c <bindtextdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #56, 20	; 0x38000
   11344:	ldr	pc, [ip, #3496]!	; 0xda8

00011348 <isatty@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #56, 20	; 0x38000
   11350:	ldr	pc, [ip, #3488]!	; 0xda0

00011354 <fputs@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #56, 20	; 0x38000
   1135c:	ldr	pc, [ip, #3480]!	; 0xd98

00011360 <strncmp@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #56, 20	; 0x38000
   11368:	ldr	pc, [ip, #3472]!	; 0xd90

0001136c <abort@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #56, 20	; 0x38000
   11374:	ldr	pc, [ip, #3464]!	; 0xd88

00011378 <putchar_unlocked@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #56, 20	; 0x38000
   11380:	ldr	pc, [ip, #3456]!	; 0xd80

00011384 <__assert_fail@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #56, 20	; 0x38000
   1138c:	ldr	pc, [ip, #3448]!	; 0xd78

Disassembly of section .text:

00011390 <.text>:
   11390:	mov	fp, #0
   11394:	mov	lr, #0
   11398:	pop	{r1}		; (ldr r1, [sp], #4)
   1139c:	mov	r2, sp
   113a0:	push	{r2}		; (str r2, [sp, #-4]!)
   113a4:	push	{r0}		; (str r0, [sp, #-4]!)
   113a8:	ldr	ip, [pc, #16]	; 113c0 <__assert_fail@plt+0x3c>
   113ac:	push	{ip}		; (str ip, [sp, #-4]!)
   113b0:	ldr	r0, [pc, #12]	; 113c4 <__assert_fail@plt+0x40>
   113b4:	ldr	r3, [pc, #12]	; 113c8 <__assert_fail@plt+0x44>
   113b8:	bl	11210 <__libc_start_main@plt>
   113bc:	bl	1136c <abort@plt>
   113c0:	andeq	r4, r3, r8, lsl r0
   113c4:	andeq	r1, r1, r4, asr #14
   113c8:			; <UNDEFINED> instruction: 0x00033fb8
   113cc:	ldr	r3, [pc, #20]	; 113e8 <__assert_fail@plt+0x64>
   113d0:	ldr	r2, [pc, #20]	; 113ec <__assert_fail@plt+0x68>
   113d4:	add	r3, pc, r3
   113d8:	ldr	r2, [r3, r2]
   113dc:	cmp	r2, #0
   113e0:	bxeq	lr
   113e4:	b	11228 <__gmon_start__@plt>
   113e8:	andeq	r8, r3, r4, lsr #24
   113ec:	andeq	r0, r0, r8, lsl #2
   113f0:	ldr	r0, [pc, #24]	; 11410 <__assert_fail@plt+0x8c>
   113f4:	ldr	r3, [pc, #24]	; 11414 <__assert_fail@plt+0x90>
   113f8:	cmp	r3, r0
   113fc:	bxeq	lr
   11400:	ldr	r3, [pc, #16]	; 11418 <__assert_fail@plt+0x94>
   11404:	cmp	r3, #0
   11408:	bxeq	lr
   1140c:	bx	r3
   11410:	andeq	sl, r4, r0, ror r1
   11414:	andeq	sl, r4, r0, ror r1
   11418:	andeq	r0, r0, r0
   1141c:	ldr	r0, [pc, #36]	; 11448 <__assert_fail@plt+0xc4>
   11420:	ldr	r1, [pc, #36]	; 1144c <__assert_fail@plt+0xc8>
   11424:	sub	r1, r1, r0
   11428:	asr	r1, r1, #2
   1142c:	add	r1, r1, r1, lsr #31
   11430:	asrs	r1, r1, #1
   11434:	bxeq	lr
   11438:	ldr	r3, [pc, #16]	; 11450 <__assert_fail@plt+0xcc>
   1143c:	cmp	r3, #0
   11440:	bxeq	lr
   11444:	bx	r3
   11448:	andeq	sl, r4, r0, ror r1
   1144c:	andeq	sl, r4, r0, ror r1
   11450:	andeq	r0, r0, r0
   11454:	push	{r4, lr}
   11458:	ldr	r4, [pc, #24]	; 11478 <__assert_fail@plt+0xf4>
   1145c:	ldrb	r3, [r4]
   11460:	cmp	r3, #0
   11464:	popne	{r4, pc}
   11468:	bl	113f0 <__assert_fail@plt+0x6c>
   1146c:	mov	r3, #1
   11470:	strb	r3, [r4]
   11474:	pop	{r4, pc}
   11478:	muleq	r4, r0, r1
   1147c:	b	1141c <__assert_fail@plt+0x98>
   11480:	push	{fp, lr}
   11484:	mov	fp, sp
   11488:	sub	sp, sp, #32
   1148c:	str	r0, [fp, #-4]
   11490:	ldr	r0, [fp, #-4]
   11494:	cmp	r0, #0
   11498:	beq	114e8 <__assert_fail@plt+0x164>
   1149c:	b	114a0 <__assert_fail@plt+0x11c>
   114a0:	movw	r0, #41344	; 0xa180
   114a4:	movt	r0, #4
   114a8:	ldr	r0, [r0]
   114ac:	movw	r1, #16452	; 0x4044
   114b0:	movt	r1, #3
   114b4:	str	r0, [fp, #-8]
   114b8:	mov	r0, r1
   114bc:	bl	11264 <gettext@plt>
   114c0:	movw	r1, #41384	; 0xa1a8
   114c4:	movt	r1, #4
   114c8:	ldr	r2, [r1]
   114cc:	ldr	r1, [fp, #-8]
   114d0:	str	r0, [fp, #-12]
   114d4:	mov	r0, r1
   114d8:	ldr	r1, [fp, #-12]
   114dc:	bl	11288 <fprintf@plt>
   114e0:	str	r0, [sp, #16]
   114e4:	b	11588 <__assert_fail@plt+0x204>
   114e8:	movw	r0, #16491	; 0x406b
   114ec:	movt	r0, #3
   114f0:	bl	11264 <gettext@plt>
   114f4:	movw	lr, #41384	; 0xa1a8
   114f8:	movt	lr, #4
   114fc:	ldr	r1, [lr]
   11500:	ldr	r2, [lr]
   11504:	bl	110e4 <printf@plt>
   11508:	movw	r1, #16531	; 0x4093
   1150c:	movt	r1, #3
   11510:	str	r0, [sp, #12]
   11514:	mov	r0, r1
   11518:	bl	11264 <gettext@plt>
   1151c:	movw	r1, #41356	; 0xa18c
   11520:	movt	r1, #4
   11524:	ldr	r1, [r1]
   11528:	bl	110a8 <fputs_unlocked@plt>
   1152c:	movw	r1, #16666	; 0x411a
   11530:	movt	r1, #3
   11534:	str	r0, [sp, #8]
   11538:	mov	r0, r1
   1153c:	bl	11264 <gettext@plt>
   11540:	movw	r1, #41356	; 0xa18c
   11544:	movt	r1, #4
   11548:	ldr	r1, [r1]
   1154c:	bl	110a8 <fputs_unlocked@plt>
   11550:	movw	r1, #16711	; 0x4147
   11554:	movt	r1, #3
   11558:	str	r0, [sp, #4]
   1155c:	mov	r0, r1
   11560:	bl	11264 <gettext@plt>
   11564:	movw	r1, #41356	; 0xa18c
   11568:	movt	r1, #4
   1156c:	ldr	r1, [r1]
   11570:	bl	110a8 <fputs_unlocked@plt>
   11574:	movw	r1, #16765	; 0x417d
   11578:	movt	r1, #3
   1157c:	str	r0, [sp]
   11580:	mov	r0, r1
   11584:	bl	11590 <__assert_fail@plt+0x20c>
   11588:	ldr	r0, [fp, #-4]
   1158c:	bl	1124c <exit@plt>
   11590:	push	{fp, lr}
   11594:	mov	fp, sp
   11598:	sub	sp, sp, #96	; 0x60
   1159c:	add	r1, sp, #36	; 0x24
   115a0:	movw	r2, #18216	; 0x4728
   115a4:	movt	r2, #3
   115a8:	str	r0, [fp, #-4]
   115ac:	mov	r0, r1
   115b0:	str	r1, [sp, #20]
   115b4:	mov	r1, r2
   115b8:	movw	r2, #56	; 0x38
   115bc:	bl	1112c <memcpy@plt>
   115c0:	ldr	r0, [fp, #-4]
   115c4:	str	r0, [sp, #32]
   115c8:	ldr	r0, [sp, #20]
   115cc:	str	r0, [sp, #28]
   115d0:	ldr	r0, [sp, #28]
   115d4:	ldr	r0, [r0]
   115d8:	movw	r1, #0
   115dc:	cmp	r0, r1
   115e0:	movw	r0, #0
   115e4:	str	r0, [sp, #16]
   115e8:	beq	11614 <__assert_fail@plt+0x290>
   115ec:	ldr	r0, [fp, #-4]
   115f0:	ldr	r1, [sp, #28]
   115f4:	ldr	r1, [r1]
   115f8:	bl	110d8 <strcmp@plt>
   115fc:	cmp	r0, #0
   11600:	movw	r0, #0
   11604:	moveq	r0, #1
   11608:	mvn	r1, #0
   1160c:	eor	r0, r0, r1
   11610:	str	r0, [sp, #16]
   11614:	ldr	r0, [sp, #16]
   11618:	tst	r0, #1
   1161c:	beq	11630 <__assert_fail@plt+0x2ac>
   11620:	ldr	r0, [sp, #28]
   11624:	add	r0, r0, #8
   11628:	str	r0, [sp, #28]
   1162c:	b	115d0 <__assert_fail@plt+0x24c>
   11630:	ldr	r0, [sp, #28]
   11634:	ldr	r0, [r0, #4]
   11638:	movw	r1, #0
   1163c:	cmp	r0, r1
   11640:	beq	11650 <__assert_fail@plt+0x2cc>
   11644:	ldr	r0, [sp, #28]
   11648:	ldr	r0, [r0, #4]
   1164c:	str	r0, [sp, #32]
   11650:	movw	r0, #16980	; 0x4254
   11654:	movt	r0, #3
   11658:	bl	11264 <gettext@plt>
   1165c:	movw	r1, #16796	; 0x419c
   11660:	movt	r1, #3
   11664:	movw	r2, #17003	; 0x426b
   11668:	movt	r2, #3
   1166c:	bl	110e4 <printf@plt>
   11670:	movw	r1, #5
   11674:	str	r0, [sp, #12]
   11678:	mov	r0, r1
   1167c:	movw	r1, #0
   11680:	bl	1130c <setlocale@plt>
   11684:	str	r0, [sp, #24]
   11688:	ldr	r0, [sp, #24]
   1168c:	movw	r1, #0
   11690:	cmp	r0, r1
   11694:	beq	116d4 <__assert_fail@plt+0x350>
   11698:	ldr	r0, [sp, #24]
   1169c:	movw	r1, #17043	; 0x4293
   116a0:	movt	r1, #3
   116a4:	movw	r2, #3
   116a8:	bl	11360 <strncmp@plt>
   116ac:	cmp	r0, #0
   116b0:	beq	116d4 <__assert_fail@plt+0x350>
   116b4:	movw	r0, #17047	; 0x4297
   116b8:	movt	r0, #3
   116bc:	bl	11264 <gettext@plt>
   116c0:	movw	lr, #41356	; 0xa18c
   116c4:	movt	lr, #4
   116c8:	ldr	r1, [lr]
   116cc:	bl	110a8 <fputs_unlocked@plt>
   116d0:	str	r0, [sp, #8]
   116d4:	movw	r0, #17118	; 0x42de
   116d8:	movt	r0, #3
   116dc:	bl	11264 <gettext@plt>
   116e0:	ldr	r2, [fp, #-4]
   116e4:	movw	r1, #17003	; 0x426b
   116e8:	movt	r1, #3
   116ec:	bl	110e4 <printf@plt>
   116f0:	movw	r1, #17145	; 0x42f9
   116f4:	movt	r1, #3
   116f8:	str	r0, [sp, #4]
   116fc:	mov	r0, r1
   11700:	bl	11264 <gettext@plt>
   11704:	ldr	r1, [sp, #32]
   11708:	ldr	r2, [sp, #32]
   1170c:	ldr	lr, [fp, #-4]
   11710:	cmp	r2, lr
   11714:	movw	r2, #0
   11718:	moveq	r2, #1
   1171c:	tst	r2, #1
   11720:	movw	r2, #16665	; 0x4119
   11724:	movt	r2, #3
   11728:	movw	lr, #16913	; 0x4211
   1172c:	movt	lr, #3
   11730:	movne	r2, lr
   11734:	bl	110e4 <printf@plt>
   11738:	str	r0, [sp]
   1173c:	mov	sp, fp
   11740:	pop	{fp, pc}
   11744:	push	{r4, sl, fp, lr}
   11748:	add	fp, sp, #8
   1174c:	sub	sp, sp, #80	; 0x50
   11750:	movw	r2, #0
   11754:	str	r2, [fp, #-12]
   11758:	str	r0, [fp, #-16]
   1175c:	str	r1, [fp, #-20]	; 0xffffffec
   11760:	ldr	r0, [fp, #-20]	; 0xffffffec
   11764:	ldr	r0, [r0]
   11768:	bl	282f0 <__assert_fail@plt+0x16f6c>
   1176c:	movw	r0, #6
   11770:	movw	r1, #16665	; 0x4119
   11774:	movt	r1, #3
   11778:	bl	1130c <setlocale@plt>
   1177c:	movw	r1, #16800	; 0x41a0
   11780:	movt	r1, #3
   11784:	str	r0, [fp, #-36]	; 0xffffffdc
   11788:	mov	r0, r1
   1178c:	movw	r1, #16772	; 0x4184
   11790:	movt	r1, #3
   11794:	bl	1133c <bindtextdomain@plt>
   11798:	movw	r1, #16800	; 0x41a0
   1179c:	movt	r1, #3
   117a0:	str	r0, [fp, #-40]	; 0xffffffd8
   117a4:	mov	r0, r1
   117a8:	bl	11174 <textdomain@plt>
   117ac:	str	r0, [sp, #44]	; 0x2c
   117b0:	bl	119ac <__assert_fail@plt+0x628>
   117b4:	movw	r0, #44560	; 0xae10
   117b8:	movt	r0, #1
   117bc:	bl	3401c <__assert_fail@plt+0x22c98>
   117c0:	movw	r1, #6640	; 0x19f0
   117c4:	movt	r1, #1
   117c8:	str	r0, [sp, #40]	; 0x28
   117cc:	mov	r0, r1
   117d0:	bl	3401c <__assert_fail@plt+0x22c98>
   117d4:	str	r0, [sp, #36]	; 0x24
   117d8:	ldr	r0, [fp, #-16]
   117dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   117e0:	movw	r2, #16665	; 0x4119
   117e4:	movt	r2, #3
   117e8:	movw	r3, #18152	; 0x46e8
   117ec:	movt	r3, #3
   117f0:	movw	ip, #0
   117f4:	str	ip, [sp]
   117f8:	bl	11234 <getopt_long@plt>
   117fc:	str	r0, [fp, #-24]	; 0xffffffe8
   11800:	cmn	r0, #1
   11804:	beq	11908 <__assert_fail@plt+0x584>
   11808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1180c:	cmn	r0, #3
   11810:	str	r0, [sp, #32]
   11814:	beq	11858 <__assert_fail@plt+0x4d4>
   11818:	b	1181c <__assert_fail@plt+0x498>
   1181c:	ldr	r0, [sp, #32]
   11820:	cmn	r0, #2
   11824:	beq	11850 <__assert_fail@plt+0x4cc>
   11828:	b	1182c <__assert_fail@plt+0x4a8>
   1182c:	ldr	r0, [sp, #32]
   11830:	cmp	r0, #256	; 0x100
   11834:	bne	118fc <__assert_fail@plt+0x578>
   11838:	b	1183c <__assert_fail@plt+0x4b8>
   1183c:	movw	r0, #41364	; 0xa194
   11840:	movt	r0, #4
   11844:	movw	r1, #1
   11848:	strb	r1, [r0]
   1184c:	b	11904 <__assert_fail@plt+0x580>
   11850:	movw	r0, #0
   11854:	bl	11480 <__assert_fail@plt+0xfc>
   11858:	movw	r0, #41356	; 0xa18c
   1185c:	movt	r0, #4
   11860:	ldr	r0, [r0]
   11864:	movw	r1, #41244	; 0xa11c
   11868:	movt	r1, #4
   1186c:	ldr	r3, [r1]
   11870:	movw	r1, #16821	; 0x41b5
   11874:	movt	r1, #3
   11878:	str	r0, [sp, #28]
   1187c:	mov	r0, r1
   11880:	movw	r1, #16839	; 0x41c7
   11884:	movt	r1, #3
   11888:	str	r3, [sp, #24]
   1188c:	bl	289ec <__assert_fail@plt+0x17668>
   11890:	movw	r1, #16858	; 0x41da
   11894:	movt	r1, #3
   11898:	str	r0, [sp, #20]
   1189c:	mov	r0, r1
   118a0:	movw	r1, #16871	; 0x41e7
   118a4:	movt	r1, #3
   118a8:	bl	289ec <__assert_fail@plt+0x17668>
   118ac:	ldr	r1, [sp, #28]
   118b0:	str	r0, [sp, #16]
   118b4:	mov	r0, r1
   118b8:	movw	r1, #16765	; 0x417d
   118bc:	movt	r1, #3
   118c0:	movw	r2, #16796	; 0x419c
   118c4:	movt	r2, #3
   118c8:	ldr	r3, [sp, #24]
   118cc:	movw	lr, #16810	; 0x41aa
   118d0:	movt	lr, #3
   118d4:	str	lr, [sp]
   118d8:	ldr	lr, [sp, #20]
   118dc:	str	lr, [sp, #4]
   118e0:	ldr	ip, [sp, #16]
   118e4:	str	ip, [sp, #8]
   118e8:	movw	r4, #0
   118ec:	str	r4, [sp, #12]
   118f0:	bl	2c514 <__assert_fail@plt+0x1b190>
   118f4:	movw	r0, #0
   118f8:	bl	1124c <exit@plt>
   118fc:	movw	r0, #1
   11900:	bl	11480 <__assert_fail@plt+0xfc>
   11904:	b	117d8 <__assert_fail@plt+0x454>
   11908:	ldr	r0, [fp, #-16]
   1190c:	movw	r1, #41336	; 0xa178
   11910:	movt	r1, #4
   11914:	ldr	r1, [r1]
   11918:	cmp	r0, r1
   1191c:	bgt	11930 <__assert_fail@plt+0x5ac>
   11920:	bl	11a80 <__assert_fail@plt+0x6fc>
   11924:	and	r0, r0, #1
   11928:	strb	r0, [fp, #-25]	; 0xffffffe7
   1192c:	b	11994 <__assert_fail@plt+0x610>
   11930:	movw	r0, #1
   11934:	strb	r0, [fp, #-25]	; 0xffffffe7
   11938:	movw	r0, #41336	; 0xa178
   1193c:	movt	r0, #4
   11940:	ldr	r0, [r0]
   11944:	str	r0, [fp, #-32]	; 0xffffffe0
   11948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1194c:	ldr	r1, [fp, #-16]
   11950:	cmp	r0, r1
   11954:	bge	11990 <__assert_fail@plt+0x60c>
   11958:	ldr	r0, [fp, #-20]	; 0xffffffec
   1195c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11960:	add	r0, r0, r1, lsl #2
   11964:	ldr	r0, [r0]
   11968:	bl	11b18 <__assert_fail@plt+0x794>
   1196c:	tst	r0, #1
   11970:	bne	1197c <__assert_fail@plt+0x5f8>
   11974:	movw	r0, #0
   11978:	strb	r0, [fp, #-25]	; 0xffffffe7
   1197c:	b	11980 <__assert_fail@plt+0x5fc>
   11980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11984:	add	r0, r0, #1
   11988:	str	r0, [fp, #-32]	; 0xffffffe0
   1198c:	b	11948 <__assert_fail@plt+0x5c4>
   11990:	b	11994 <__assert_fail@plt+0x610>
   11994:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11998:	tst	r0, #1
   1199c:	movw	r0, #0
   119a0:	moveq	r0, #1
   119a4:	sub	sp, fp, #8
   119a8:	pop	{r4, sl, fp, pc}
   119ac:	push	{fp, lr}
   119b0:	mov	fp, sp
   119b4:	movw	r0, #41368	; 0xa198
   119b8:	movt	r0, #4
   119bc:	ldr	r0, [r0]
   119c0:	movw	r1, #0
   119c4:	cmp	r0, r1
   119c8:	beq	119d0 <__assert_fail@plt+0x64c>
   119cc:	b	119ec <__assert_fail@plt+0x668>
   119d0:	movw	r0, #1024	; 0x400
   119d4:	bl	2c6a4 <__assert_fail@plt+0x1b320>
   119d8:	movw	lr, #41368	; 0xa198
   119dc:	movt	lr, #4
   119e0:	str	r0, [lr]
   119e4:	ldr	r0, [lr]
   119e8:	str	r0, [lr, #4]
   119ec:	pop	{fp, pc}
   119f0:	push	{fp, lr}
   119f4:	mov	fp, sp
   119f8:	sub	sp, sp, #16
   119fc:	movw	r0, #41368	; 0xa198
   11a00:	movt	r0, #4
   11a04:	ldr	r1, [r0, #4]
   11a08:	ldr	r2, [r0]
   11a0c:	sub	r1, r1, r2
   11a10:	str	r1, [fp, #-4]
   11a14:	ldr	r1, [r0]
   11a18:	ldr	r2, [fp, #-4]
   11a1c:	movw	r0, #1
   11a20:	bl	1af70 <__assert_fail@plt+0x9bec>
   11a24:	ldr	r1, [fp, #-4]
   11a28:	cmp	r0, r1
   11a2c:	beq	11a68 <__assert_fail@plt+0x6e4>
   11a30:	bl	11294 <__errno_location@plt>
   11a34:	ldr	r1, [r0]
   11a38:	movw	r0, #17196	; 0x432c
   11a3c:	movt	r0, #3
   11a40:	str	r1, [sp, #8]
   11a44:	bl	11264 <gettext@plt>
   11a48:	movw	r1, #1
   11a4c:	str	r0, [sp, #4]
   11a50:	mov	r0, r1
   11a54:	ldr	r1, [sp, #8]
   11a58:	movw	r2, #30569	; 0x7769
   11a5c:	movt	r2, #3
   11a60:	ldr	r3, [sp, #4]
   11a64:	bl	111ec <error@plt>
   11a68:	movw	r0, #41368	; 0xa198
   11a6c:	movt	r0, #4
   11a70:	ldr	r1, [r0]
   11a74:	str	r1, [r0, #4]
   11a78:	mov	sp, fp
   11a7c:	pop	{fp, pc}
   11a80:	push	{fp, lr}
   11a84:	mov	fp, sp
   11a88:	sub	sp, sp, #16
   11a8c:	movw	r0, #1
   11a90:	strb	r0, [fp, #-1]
   11a94:	add	r0, sp, #4
   11a98:	bl	2b3cc <__assert_fail@plt+0x1a048>
   11a9c:	movw	r0, #41352	; 0xa188
   11aa0:	movt	r0, #4
   11aa4:	ldr	r0, [r0]
   11aa8:	movw	r1, #17228	; 0x434c
   11aac:	movt	r1, #3
   11ab0:	movw	r2, #3
   11ab4:	add	r3, sp, #4
   11ab8:	bl	2b3f0 <__assert_fail@plt+0x1a06c>
   11abc:	str	r0, [sp]
   11ac0:	ldr	r0, [sp]
   11ac4:	cmn	r0, #1
   11ac8:	bne	11ad0 <__assert_fail@plt+0x74c>
   11acc:	b	11b00 <__assert_fail@plt+0x77c>
   11ad0:	ldr	r0, [sp, #8]
   11ad4:	bl	11b18 <__assert_fail@plt+0x794>
   11ad8:	and	r0, r0, #1
   11adc:	ldrb	lr, [fp, #-1]
   11ae0:	and	lr, lr, #1
   11ae4:	and	r0, lr, r0
   11ae8:	cmp	r0, #0
   11aec:	movw	r0, #0
   11af0:	movne	r0, #1
   11af4:	and	r0, r0, #1
   11af8:	strb	r0, [fp, #-1]
   11afc:	b	11a9c <__assert_fail@plt+0x718>
   11b00:	ldr	r0, [sp, #8]
   11b04:	bl	1af30 <__assert_fail@plt+0x9bac>
   11b08:	ldrb	r0, [fp, #-1]
   11b0c:	and	r0, r0, #1
   11b10:	mov	sp, fp
   11b14:	pop	{fp, pc}
   11b18:	push	{fp, lr}
   11b1c:	mov	fp, sp
   11b20:	sub	sp, sp, #120	; 0x78
   11b24:	str	r0, [fp, #-8]
   11b28:	ldr	r0, [fp, #-8]
   11b2c:	str	r0, [fp, #-12]
   11b30:	ldr	r0, [fp, #-12]
   11b34:	ldrb	r0, [r0]
   11b38:	cmp	r0, #32
   11b3c:	bne	11b50 <__assert_fail@plt+0x7cc>
   11b40:	ldr	r0, [fp, #-12]
   11b44:	add	r0, r0, #1
   11b48:	str	r0, [fp, #-12]
   11b4c:	b	11b30 <__assert_fail@plt+0x7ac>
   11b50:	ldr	r0, [fp, #-12]
   11b54:	mov	r1, r0
   11b58:	ldrb	r2, [r1], #1
   11b5c:	cmp	r2, #43	; 0x2b
   11b60:	moveq	r0, r1
   11b64:	str	r0, [fp, #-12]
   11b68:	ldr	r2, [fp, #-12]
   11b6c:	sub	r0, fp, #24
   11b70:	sub	r1, fp, #32
   11b74:	bl	11dd8 <__assert_fail@plt+0xa54>
   11b78:	str	r0, [fp, #-36]	; 0xffffffdc
   11b7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b80:	cmp	r0, #0
   11b84:	str	r0, [sp, #48]	; 0x30
   11b88:	beq	11ba0 <__assert_fail@plt+0x81c>
   11b8c:	b	11b90 <__assert_fail@plt+0x80c>
   11b90:	ldr	r0, [sp, #48]	; 0x30
   11b94:	cmp	r0, #1
   11b98:	beq	11c14 <__assert_fail@plt+0x890>
   11b9c:	b	11c18 <__assert_fail@plt+0x894>
   11ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ba4:	bic	r1, r0, #-2147483648	; 0x80000000
   11ba8:	teq	r1, r0
   11bac:	bne	11c10 <__assert_fail@plt+0x88c>
   11bb0:	b	11bb4 <__assert_fail@plt+0x830>
   11bb4:	b	11bb8 <__assert_fail@plt+0x834>
   11bb8:	movw	r0, #41364	; 0xa194
   11bbc:	movt	r0, #4
   11bc0:	ldrb	r0, [r0]
   11bc4:	tst	r0, #1
   11bc8:	beq	11be8 <__assert_fail@plt+0x864>
   11bcc:	movw	r0, #41344	; 0xa180
   11bd0:	movt	r0, #4
   11bd4:	ldr	r0, [r0]
   11bd8:	movw	r1, #17232	; 0x4350
   11bdc:	movt	r1, #3
   11be0:	bl	11288 <fprintf@plt>
   11be4:	str	r0, [sp, #44]	; 0x2c
   11be8:	b	11bec <__assert_fail@plt+0x868>
   11bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   11bf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11bfc:	bl	12044 <__assert_fail@plt+0xcc0>
   11c00:	movw	r0, #1
   11c04:	and	r0, r0, #1
   11c08:	strb	r0, [fp, #-1]
   11c0c:	b	11dc8 <__assert_fail@plt+0xa44>
   11c10:	b	11c60 <__assert_fail@plt+0x8dc>
   11c14:	b	11c60 <__assert_fail@plt+0x8dc>
   11c18:	movw	r0, #17269	; 0x4375
   11c1c:	movt	r0, #3
   11c20:	bl	11264 <gettext@plt>
   11c24:	ldr	lr, [fp, #-8]
   11c28:	str	r0, [sp, #40]	; 0x28
   11c2c:	mov	r0, lr
   11c30:	bl	2b294 <__assert_fail@plt+0x19f10>
   11c34:	movw	lr, #0
   11c38:	str	r0, [sp, #36]	; 0x24
   11c3c:	mov	r0, lr
   11c40:	mov	r1, lr
   11c44:	ldr	r2, [sp, #40]	; 0x28
   11c48:	ldr	r3, [sp, #36]	; 0x24
   11c4c:	bl	111ec <error@plt>
   11c50:	movw	r0, #0
   11c54:	and	r0, r0, #1
   11c58:	strb	r0, [fp, #-1]
   11c5c:	b	11dc8 <__assert_fail@plt+0xa44>
   11c60:	b	11c64 <__assert_fail@plt+0x8e0>
   11c64:	movw	r0, #41364	; 0xa194
   11c68:	movt	r0, #4
   11c6c:	ldrb	r0, [r0]
   11c70:	tst	r0, #1
   11c74:	beq	11c94 <__assert_fail@plt+0x910>
   11c78:	movw	r0, #41344	; 0xa180
   11c7c:	movt	r0, #4
   11c80:	ldr	r0, [r0]
   11c84:	movw	r1, #17304	; 0x4398
   11c88:	movt	r1, #3
   11c8c:	bl	11288 <fprintf@plt>
   11c90:	str	r0, [sp, #32]
   11c94:	b	11c98 <__assert_fail@plt+0x914>
   11c98:	sub	r0, fp, #48	; 0x30
   11c9c:	ldr	r1, [fp, #-12]
   11ca0:	movw	r2, #10
   11ca4:	bl	26058 <__assert_fail@plt+0x14cd4>
   11ca8:	sub	r2, fp, #48	; 0x30
   11cac:	movw	r1, #41356	; 0xa18c
   11cb0:	movt	r1, #4
   11cb4:	ldr	r1, [r1]
   11cb8:	str	r0, [sp, #28]
   11cbc:	mov	r0, r1
   11cc0:	movw	r1, #10
   11cc4:	bl	26090 <__assert_fail@plt+0x14d0c>
   11cc8:	movw	r1, #58	; 0x3a
   11ccc:	str	r0, [sp, #24]
   11cd0:	mov	r0, r1
   11cd4:	bl	11378 <putchar_unlocked@plt>
   11cd8:	sub	r1, fp, #48	; 0x30
   11cdc:	str	r0, [sp, #20]
   11ce0:	mov	r0, r1
   11ce4:	add	r1, sp, #60	; 0x3c
   11ce8:	bl	12174 <__assert_fail@plt+0xdf0>
   11cec:	movw	r0, #0
   11cf0:	str	r0, [sp, #56]	; 0x38
   11cf4:	ldr	r0, [sp, #56]	; 0x38
   11cf8:	ldr	r1, [sp, #68]	; 0x44
   11cfc:	cmp	r0, r1
   11d00:	bcs	11d88 <__assert_fail@plt+0xa04>
   11d04:	movw	r0, #0
   11d08:	str	r0, [sp, #52]	; 0x34
   11d0c:	ldr	r0, [sp, #52]	; 0x34
   11d10:	ldr	r1, [sp, #64]	; 0x40
   11d14:	ldr	r2, [sp, #56]	; 0x38
   11d18:	add	r1, r1, r2, lsl #2
   11d1c:	ldr	r1, [r1]
   11d20:	cmp	r0, r1
   11d24:	bcs	11d74 <__assert_fail@plt+0x9f0>
   11d28:	movw	r0, #32
   11d2c:	bl	11378 <putchar_unlocked@plt>
   11d30:	movw	lr, #41356	; 0xa18c
   11d34:	movt	lr, #4
   11d38:	ldr	lr, [lr]
   11d3c:	ldr	r1, [sp, #60]	; 0x3c
   11d40:	ldr	r2, [sp, #56]	; 0x38
   11d44:	movw	r3, #12
   11d48:	mul	r2, r2, r3
   11d4c:	add	r2, r1, r2
   11d50:	str	r0, [sp, #16]
   11d54:	mov	r0, lr
   11d58:	movw	r1, #10
   11d5c:	bl	26090 <__assert_fail@plt+0x14d0c>
   11d60:	str	r0, [sp, #12]
   11d64:	ldr	r0, [sp, #52]	; 0x34
   11d68:	add	r0, r0, #1
   11d6c:	str	r0, [sp, #52]	; 0x34
   11d70:	b	11d0c <__assert_fail@plt+0x988>
   11d74:	b	11d78 <__assert_fail@plt+0x9f4>
   11d78:	ldr	r0, [sp, #56]	; 0x38
   11d7c:	add	r0, r0, #1
   11d80:	str	r0, [sp, #56]	; 0x38
   11d84:	b	11cf4 <__assert_fail@plt+0x970>
   11d88:	add	r0, sp, #60	; 0x3c
   11d8c:	bl	12238 <__assert_fail@plt+0xeb4>
   11d90:	sub	r0, fp, #48	; 0x30
   11d94:	bl	1d7ec <__assert_fail@plt+0xc468>
   11d98:	movw	r0, #10
   11d9c:	bl	11378 <putchar_unlocked@plt>
   11da0:	movw	lr, #41356	; 0xa18c
   11da4:	movt	lr, #4
   11da8:	ldr	lr, [lr]
   11dac:	str	r0, [sp, #8]
   11db0:	mov	r0, lr
   11db4:	bl	1118c <fflush_unlocked@plt>
   11db8:	movw	lr, #1
   11dbc:	and	lr, lr, #1
   11dc0:	strb	lr, [fp, #-1]
   11dc4:	str	r0, [sp, #4]
   11dc8:	ldrb	r0, [fp, #-1]
   11dcc:	and	r0, r0, #1
   11dd0:	mov	sp, fp
   11dd4:	pop	{fp, pc}
   11dd8:	push	{r4, sl, fp, lr}
   11ddc:	add	fp, sp, #8
   11de0:	sub	sp, sp, #80	; 0x50
   11de4:	str	r0, [fp, #-12]
   11de8:	str	r1, [fp, #-16]
   11dec:	str	r2, [fp, #-20]	; 0xffffffec
   11df0:	mov	r0, #0
   11df4:	str	r0, [fp, #-28]	; 0xffffffe4
   11df8:	str	r0, [fp, #-32]	; 0xffffffe0
   11dfc:	str	r0, [fp, #-36]	; 0xffffffdc
   11e00:	str	r0, [fp, #-40]	; 0xffffffd8
   11e04:	movw	r0, #4
   11e08:	str	r0, [sp, #44]	; 0x2c
   11e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e10:	str	r0, [sp, #40]	; 0x28
   11e14:	ldr	r0, [sp, #40]	; 0x28
   11e18:	add	r1, r0, #1
   11e1c:	str	r1, [sp, #40]	; 0x28
   11e20:	ldrb	r0, [r0]
   11e24:	str	r0, [sp, #36]	; 0x24
   11e28:	ldr	r0, [sp, #36]	; 0x24
   11e2c:	cmp	r0, #0
   11e30:	bne	11e38 <__assert_fail@plt+0xab4>
   11e34:	b	11e74 <__assert_fail@plt+0xaf0>
   11e38:	ldr	r0, [sp, #36]	; 0x24
   11e3c:	sub	r0, r0, #48	; 0x30
   11e40:	cmp	r0, #9
   11e44:	movw	r0, #0
   11e48:	movls	r0, #1
   11e4c:	mvn	r1, #0
   11e50:	eor	r0, r0, r1
   11e54:	tst	r0, #1
   11e58:	beq	11e68 <__assert_fail@plt+0xae4>
   11e5c:	movw	r0, #4
   11e60:	str	r0, [sp, #44]	; 0x2c
   11e64:	b	11e74 <__assert_fail@plt+0xaf0>
   11e68:	movw	r0, #0
   11e6c:	str	r0, [sp, #44]	; 0x2c
   11e70:	b	11e14 <__assert_fail@plt+0xa90>
   11e74:	b	11e78 <__assert_fail@plt+0xaf4>
   11e78:	ldr	r0, [sp, #44]	; 0x2c
   11e7c:	cmp	r0, #0
   11e80:	bne	12010 <__assert_fail@plt+0xc8c>
   11e84:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e88:	add	r1, r0, #1
   11e8c:	str	r1, [fp, #-20]	; 0xffffffec
   11e90:	ldrb	r0, [r0]
   11e94:	str	r0, [sp, #32]
   11e98:	ldr	r0, [sp, #32]
   11e9c:	cmp	r0, #0
   11ea0:	bne	11ea8 <__assert_fail@plt+0xb24>
   11ea4:	b	12010 <__assert_fail@plt+0xc8c>
   11ea8:	ldr	r0, [sp, #32]
   11eac:	sub	r0, r0, #48	; 0x30
   11eb0:	str	r0, [sp, #32]
   11eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11eb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11ebc:	movw	r2, #39322	; 0x999a
   11ec0:	movt	r2, #39321	; 0x9999
   11ec4:	subs	r0, r0, r2
   11ec8:	movw	r2, #39321	; 0x9999
   11ecc:	movt	r2, #6553	; 0x1999
   11ed0:	sbcs	r1, r1, r2
   11ed4:	str	r0, [sp, #28]
   11ed8:	str	r1, [sp, #24]
   11edc:	bcc	11ef0 <__assert_fail@plt+0xb6c>
   11ee0:	b	11ee4 <__assert_fail@plt+0xb60>
   11ee4:	movw	r0, #1
   11ee8:	str	r0, [sp, #44]	; 0x2c
   11eec:	b	12010 <__assert_fail@plt+0xc8c>
   11ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11ef8:	mov	r2, #10
   11efc:	umull	r0, r3, r0, r2
   11f00:	add	r1, r1, r1, lsl #2
   11f04:	add	r1, r3, r1, lsl #1
   11f08:	str	r0, [fp, #-32]	; 0xffffffe0
   11f0c:	str	r1, [fp, #-28]	; 0xffffffe4
   11f10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11f14:	lsr	r1, r0, #29
   11f18:	add	r0, r1, r0, lsr #31
   11f1c:	str	r0, [fp, #-24]	; 0xffffffe8
   11f20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11f28:	umull	r3, ip, r0, r2
   11f2c:	add	lr, r1, r1, lsl #2
   11f30:	add	ip, ip, lr, lsl #1
   11f34:	lsl	r1, r1, #1
   11f38:	orr	r1, r1, r0, lsr #31
   11f3c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11f40:	add	r4, lr, #1
   11f44:	subs	r0, r3, r0, lsl #1
   11f48:	sbcs	r1, ip, r1
   11f4c:	movcc	lr, r4
   11f50:	str	lr, [fp, #-24]	; 0xffffffe8
   11f54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11f58:	ldr	ip, [fp, #-36]	; 0xffffffdc
   11f5c:	umull	r2, r3, r3, r2
   11f60:	add	ip, ip, ip, lsl #2
   11f64:	add	r3, r3, ip, lsl #1
   11f68:	str	r2, [fp, #-40]	; 0xffffffd8
   11f6c:	str	r3, [fp, #-36]	; 0xffffffdc
   11f70:	ldr	r2, [sp, #32]
   11f74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11f78:	ldr	ip, [fp, #-36]	; 0xffffffdc
   11f7c:	adds	r2, r3, r2
   11f80:	adc	r3, ip, #0
   11f84:	str	r2, [fp, #-40]	; 0xffffffd8
   11f88:	str	r3, [fp, #-36]	; 0xffffffdc
   11f8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11f90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f94:	ldr	ip, [sp, #32]
   11f98:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11f9c:	add	r4, lr, #1
   11fa0:	subs	r2, r2, ip
   11fa4:	sbcs	r3, r3, #0
   11fa8:	movcc	lr, r4
   11fac:	str	lr, [fp, #-24]	; 0xffffffe8
   11fb0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   11fb4:	ldr	lr, [fp, #-32]	; 0xffffffe0
   11fb8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   11fbc:	adds	ip, lr, ip
   11fc0:	adc	lr, r4, #0
   11fc4:	str	ip, [fp, #-32]	; 0xffffffe0
   11fc8:	str	lr, [fp, #-28]	; 0xffffffe4
   11fcc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   11fd0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   11fd4:	ldr	r4, [fp, #-24]	; 0xffffffe8
   11fd8:	subs	ip, ip, r4
   11fdc:	sbcs	lr, lr, #0
   11fe0:	str	r0, [sp, #20]
   11fe4:	str	r1, [sp, #16]
   11fe8:	str	r3, [sp, #12]
   11fec:	str	r2, [sp, #8]
   11ff0:	str	ip, [sp, #4]
   11ff4:	str	lr, [sp]
   11ff8:	bcs	1200c <__assert_fail@plt+0xc88>
   11ffc:	b	12000 <__assert_fail@plt+0xc7c>
   12000:	movw	r0, #1
   12004:	str	r0, [sp, #44]	; 0x2c
   12008:	b	12010 <__assert_fail@plt+0xc8c>
   1200c:	b	11e78 <__assert_fail@plt+0xaf4>
   12010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12014:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12018:	ldr	r2, [fp, #-12]
   1201c:	str	r1, [r2, #4]
   12020:	str	r0, [r2]
   12024:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12028:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1202c:	ldr	r2, [fp, #-16]
   12030:	str	r1, [r2, #4]
   12034:	str	r0, [r2]
   12038:	ldr	r0, [sp, #44]	; 0x2c
   1203c:	sub	sp, fp, #8
   12040:	pop	{r4, sl, fp, pc}
   12044:	push	{r4, r5, fp, lr}
   12048:	add	fp, sp, #8
   1204c:	sub	sp, sp, #288	; 0x120
   12050:	str	r0, [fp, #-16]
   12054:	str	r1, [fp, #-12]
   12058:	str	r3, [fp, #-20]	; 0xffffffec
   1205c:	str	r2, [fp, #-24]	; 0xffffffe8
   12060:	ldr	r0, [fp, #-16]
   12064:	ldr	r1, [fp, #-12]
   12068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1206c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12070:	bl	122b0 <__assert_fail@plt+0xf2c>
   12074:	mov	r0, #58	; 0x3a
   12078:	bl	125bc <__assert_fail@plt+0x1238>
   1207c:	ldr	r0, [fp, #-16]
   12080:	ldr	r1, [fp, #-12]
   12084:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12088:	ldr	r3, [fp, #-20]	; 0xffffffec
   1208c:	mov	lr, sp
   12090:	add	ip, sp, #16
   12094:	str	ip, [lr]
   12098:	bl	12744 <__assert_fail@plt+0x13c0>
   1209c:	movw	r0, #0
   120a0:	str	r0, [sp, #12]
   120a4:	ldr	r0, [sp, #12]
   120a8:	ldrb	r1, [sp, #266]	; 0x10a
   120ac:	cmp	r0, r1
   120b0:	bcs	1212c <__assert_fail@plt+0xda8>
   120b4:	movw	r0, #0
   120b8:	str	r0, [sp, #8]
   120bc:	ldr	r0, [sp, #8]
   120c0:	add	r1, sp, #16
   120c4:	add	r1, r1, #224	; 0xe0
   120c8:	ldr	r2, [sp, #12]
   120cc:	add	r1, r1, r2
   120d0:	ldrb	r1, [r1]
   120d4:	cmp	r0, r1
   120d8:	bcs	12118 <__assert_fail@plt+0xd94>
   120dc:	mov	r0, #32
   120e0:	bl	125bc <__assert_fail@plt+0x1238>
   120e4:	ldr	r0, [sp, #12]
   120e8:	add	lr, sp, #16
   120ec:	add	r0, lr, r0, lsl #3
   120f0:	ldr	r2, [r0, #16]
   120f4:	ldr	r3, [r0, #20]
   120f8:	mov	r0, #0
   120fc:	str	r0, [sp, #4]
   12100:	ldr	r1, [sp, #4]
   12104:	bl	122b0 <__assert_fail@plt+0xf2c>
   12108:	ldr	r0, [sp, #8]
   1210c:	add	r0, r0, #1
   12110:	str	r0, [sp, #8]
   12114:	b	120bc <__assert_fail@plt+0xd38>
   12118:	b	1211c <__assert_fail@plt+0xd98>
   1211c:	ldr	r0, [sp, #12]
   12120:	add	r0, r0, #1
   12124:	str	r0, [sp, #12]
   12128:	b	120a4 <__assert_fail@plt+0xd20>
   1212c:	ldr	r0, [sp, #24]
   12130:	ldr	r1, [sp, #28]
   12134:	orr	r0, r0, r1
   12138:	cmp	r0, #0
   1213c:	beq	12160 <__assert_fail@plt+0xddc>
   12140:	b	12144 <__assert_fail@plt+0xdc0>
   12144:	mov	r0, #32
   12148:	bl	125bc <__assert_fail@plt+0x1238>
   1214c:	ldr	r2, [sp, #16]
   12150:	ldr	r3, [sp, #20]
   12154:	ldr	r0, [sp, #24]
   12158:	ldr	r1, [sp, #28]
   1215c:	bl	122b0 <__assert_fail@plt+0xf2c>
   12160:	movw	r0, #10
   12164:	and	r0, r0, #255	; 0xff
   12168:	bl	125bc <__assert_fail@plt+0x1238>
   1216c:	sub	sp, fp, #8
   12170:	pop	{r4, r5, fp, pc}
   12174:	push	{fp, lr}
   12178:	mov	fp, sp
   1217c:	sub	sp, sp, #16
   12180:	str	r0, [fp, #-4]
   12184:	str	r1, [sp, #8]
   12188:	ldr	r0, [sp, #8]
   1218c:	bl	1a0d0 <__assert_fail@plt+0x8d4c>
   12190:	ldr	r0, [fp, #-4]
   12194:	bl	1eb2c <__assert_fail@plt+0xd7a8>
   12198:	cmp	r0, #0
   1219c:	beq	12230 <__assert_fail@plt+0xeac>
   121a0:	ldr	r0, [fp, #-4]
   121a4:	ldr	r1, [sp, #8]
   121a8:	bl	1a0fc <__assert_fail@plt+0x8d78>
   121ac:	ldr	r0, [fp, #-4]
   121b0:	movw	r1, #1
   121b4:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   121b8:	cmp	r0, #0
   121bc:	beq	1222c <__assert_fail@plt+0xea8>
   121c0:	b	121c4 <__assert_fail@plt+0xe40>
   121c4:	movw	r0, #41364	; 0xa194
   121c8:	movt	r0, #4
   121cc:	ldrb	r0, [r0]
   121d0:	tst	r0, #1
   121d4:	beq	121f4 <__assert_fail@plt+0xe70>
   121d8:	movw	r0, #41344	; 0xa180
   121dc:	movt	r0, #4
   121e0:	ldr	r0, [r0]
   121e4:	movw	r1, #18049	; 0x4681
   121e8:	movt	r1, #3
   121ec:	bl	11288 <fprintf@plt>
   121f0:	str	r0, [sp, #4]
   121f4:	b	121f8 <__assert_fail@plt+0xe74>
   121f8:	ldr	r0, [fp, #-4]
   121fc:	bl	1a250 <__assert_fail@plt+0x8ecc>
   12200:	tst	r0, #1
   12204:	beq	12218 <__assert_fail@plt+0xe94>
   12208:	ldr	r0, [sp, #8]
   1220c:	ldr	r1, [fp, #-4]
   12210:	bl	1a5a4 <__assert_fail@plt+0x9220>
   12214:	b	12228 <__assert_fail@plt+0xea4>
   12218:	ldr	r0, [fp, #-4]
   1221c:	ldr	r2, [sp, #8]
   12220:	movw	r1, #1
   12224:	bl	1a79c <__assert_fail@plt+0x9418>
   12228:	b	1222c <__assert_fail@plt+0xea8>
   1222c:	b	12230 <__assert_fail@plt+0xeac>
   12230:	mov	sp, fp
   12234:	pop	{fp, pc}
   12238:	push	{fp, lr}
   1223c:	mov	fp, sp
   12240:	sub	sp, sp, #8
   12244:	str	r0, [sp, #4]
   12248:	movw	r0, #0
   1224c:	str	r0, [sp]
   12250:	ldr	r0, [sp]
   12254:	ldr	r1, [sp, #4]
   12258:	ldr	r1, [r1, #8]
   1225c:	cmp	r0, r1
   12260:	bcs	12290 <__assert_fail@plt+0xf0c>
   12264:	ldr	r0, [sp, #4]
   12268:	ldr	r0, [r0]
   1226c:	ldr	r1, [sp]
   12270:	movw	r2, #12
   12274:	mul	r1, r1, r2
   12278:	add	r0, r0, r1
   1227c:	bl	1d7ec <__assert_fail@plt+0xc468>
   12280:	ldr	r0, [sp]
   12284:	add	r0, r0, #1
   12288:	str	r0, [sp]
   1228c:	b	12250 <__assert_fail@plt+0xecc>
   12290:	ldr	r0, [sp, #4]
   12294:	ldr	r0, [r0]
   12298:	bl	1af30 <__assert_fail@plt+0x9bac>
   1229c:	ldr	r0, [sp, #4]
   122a0:	ldr	r0, [r0, #4]
   122a4:	bl	1af30 <__assert_fail@plt+0x9bac>
   122a8:	mov	sp, fp
   122ac:	pop	{fp, pc}
   122b0:	push	{fp, lr}
   122b4:	mov	fp, sp
   122b8:	sub	sp, sp, #136	; 0x88
   122bc:	str	r0, [fp, #-8]
   122c0:	str	r1, [fp, #-4]
   122c4:	str	r3, [fp, #-12]
   122c8:	str	r2, [fp, #-16]
   122cc:	ldr	r0, [fp, #-8]
   122d0:	ldr	r1, [fp, #-4]
   122d4:	orr	r0, r0, r1
   122d8:	cmp	r0, #0
   122dc:	bne	122f8 <__assert_fail@plt+0xf74>
   122e0:	b	122e4 <__assert_fail@plt+0xf60>
   122e4:	ldr	r0, [fp, #-16]
   122e8:	ldr	r1, [fp, #-12]
   122ec:	mov	r2, #0
   122f0:	bl	128d4 <__assert_fail@plt+0x1550>
   122f4:	b	125b4 <__assert_fail@plt+0x1230>
   122f8:	ldr	r0, [fp, #-8]
   122fc:	ldr	r1, [fp, #-4]
   12300:	movw	r2, #51712	; 0xca00
   12304:	movt	r2, #15258	; 0x3b9a
   12308:	mov	r3, #0
   1230c:	str	r2, [sp, #44]	; 0x2c
   12310:	str	r3, [sp, #40]	; 0x28
   12314:	bl	33e44 <__assert_fail@plt+0x22ac0>
   12318:	str	r1, [fp, #-20]	; 0xffffffec
   1231c:	str	r0, [fp, #-24]	; 0xffffffe8
   12320:	ldr	r0, [fp, #-8]
   12324:	ldr	r1, [fp, #-4]
   12328:	ldr	r2, [sp, #44]	; 0x2c
   1232c:	ldr	r3, [sp, #40]	; 0x28
   12330:	bl	33e44 <__assert_fail@plt+0x22ac0>
   12334:	str	r3, [fp, #-28]	; 0xffffffe4
   12338:	str	r2, [fp, #-32]	; 0xffffffe0
   1233c:	str	r0, [sp, #36]	; 0x24
   12340:	str	r1, [sp, #32]
   12344:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1234c:	movw	r2, #51711	; 0xc9ff
   12350:	movt	r2, #15258	; 0x3b9a
   12354:	subs	r0, r2, r0
   12358:	rscs	r1, r1, #0
   1235c:	str	r0, [sp, #28]
   12360:	str	r1, [sp, #24]
   12364:	bcc	12370 <__assert_fail@plt+0xfec>
   12368:	b	1236c <__assert_fail@plt+0xfe8>
   1236c:	b	12390 <__assert_fail@plt+0x100c>
   12370:	movw	r0, #17344	; 0x43c0
   12374:	movt	r0, #3
   12378:	movw	r1, #17363	; 0x43d3
   1237c:	movt	r1, #3
   12380:	movw	r2, #2438	; 0x986
   12384:	movw	r3, #17376	; 0x43e0
   12388:	movt	r3, #3
   1238c:	bl	11384 <__assert_fail@plt>
   12390:	mov	r0, #0
   12394:	str	r0, [fp, #-36]	; 0xffffffdc
   12398:	movw	r1, #51712	; 0xca00
   1239c:	movt	r1, #15258	; 0x3b9a
   123a0:	str	r1, [fp, #-40]	; 0xffffffd8
   123a4:	str	r0, [fp, #-44]	; 0xffffffd4
   123a8:	str	r0, [fp, #-48]	; 0xffffffd0
   123ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   123b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   123b4:	str	r2, [fp, #-60]	; 0xffffffc4
   123b8:	str	r1, [fp, #-64]	; 0xffffffc0
   123bc:	ldr	r1, [fp, #-16]
   123c0:	ldr	r2, [fp, #-12]
   123c4:	str	r2, [sp, #68]	; 0x44
   123c8:	str	r1, [sp, #64]	; 0x40
   123cc:	str	r0, [fp, #-52]	; 0xffffffcc
   123d0:	str	r0, [fp, #-56]	; 0xffffffc8
   123d4:	movw	r0, #64	; 0x40
   123d8:	str	r0, [sp, #60]	; 0x3c
   123dc:	ldr	r0, [sp, #60]	; 0x3c
   123e0:	cmp	r0, #0
   123e4:	bls	12570 <__assert_fail@plt+0x11ec>
   123e8:	b	123ec <__assert_fail@plt+0x1068>
   123ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   123f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   123f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   123f8:	lsrs	r2, r2, #1
   123fc:	rrx	r1, r1
   12400:	orr	r0, r2, r0, lsl #31
   12404:	str	r1, [fp, #-48]	; 0xffffffd0
   12408:	str	r0, [fp, #-44]	; 0xffffffd4
   1240c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12410:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12414:	lsrs	r1, r1, #1
   12418:	rrx	r0, r0
   1241c:	str	r1, [fp, #-36]	; 0xffffffdc
   12420:	str	r0, [fp, #-40]	; 0xffffffd8
   12424:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12428:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1242c:	lsl	r1, r1, #1
   12430:	orr	r1, r1, r0, lsr #31
   12434:	lsl	r0, r0, #1
   12438:	str	r0, [fp, #-56]	; 0xffffffc8
   1243c:	str	r1, [fp, #-52]	; 0xffffffcc
   12440:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12444:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12448:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1244c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12450:	subs	r0, r2, r0
   12454:	sbcs	r1, r3, r1
   12458:	str	r0, [sp, #20]
   1245c:	str	r1, [sp, #16]
   12460:	bcc	124b8 <__assert_fail@plt+0x1134>
   12464:	b	12468 <__assert_fail@plt+0x10e4>
   12468:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1246c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12470:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12474:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12478:	eor	r1, r1, r3
   1247c:	eor	r0, r0, r2
   12480:	orr	r0, r0, r1
   12484:	cmp	r0, #0
   12488:	bne	12558 <__assert_fail@plt+0x11d4>
   1248c:	b	12490 <__assert_fail@plt+0x110c>
   12490:	ldr	r0, [sp, #64]	; 0x40
   12494:	ldr	r1, [sp, #68]	; 0x44
   12498:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1249c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124a0:	subs	r0, r0, r2
   124a4:	sbcs	r1, r1, r3
   124a8:	str	r0, [sp, #12]
   124ac:	str	r1, [sp, #8]
   124b0:	bcc	12558 <__assert_fail@plt+0x11d4>
   124b4:	b	124b8 <__assert_fail@plt+0x1134>
   124b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   124bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   124c0:	adds	r0, r0, #1
   124c4:	adc	r1, r1, #0
   124c8:	str	r0, [fp, #-56]	; 0xffffffc8
   124cc:	str	r1, [fp, #-52]	; 0xffffffcc
   124d0:	ldr	r0, [sp, #64]	; 0x40
   124d4:	ldr	r1, [sp, #68]	; 0x44
   124d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   124dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124e0:	subs	r0, r0, r2
   124e4:	sbcs	r1, r1, r3
   124e8:	mov	r2, #0
   124ec:	mov	r3, r2
   124f0:	movwcc	r3, #1
   124f4:	str	r2, [sp, #52]	; 0x34
   124f8:	str	r3, [sp, #48]	; 0x30
   124fc:	ldr	r2, [sp, #64]	; 0x40
   12500:	ldr	r3, [sp, #68]	; 0x44
   12504:	ldr	ip, [fp, #-48]	; 0xffffffd0
   12508:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1250c:	subs	r2, r2, ip
   12510:	sbc	r3, r3, lr
   12514:	str	r2, [sp, #64]	; 0x40
   12518:	str	r3, [sp, #68]	; 0x44
   1251c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12520:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12524:	ldr	ip, [fp, #-40]	; 0xffffffd8
   12528:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1252c:	subs	r2, r2, ip
   12530:	sbc	r3, r3, lr
   12534:	ldr	ip, [sp, #48]	; 0x30
   12538:	ldr	lr, [sp, #52]	; 0x34
   1253c:	subs	r2, r2, ip
   12540:	sbc	r3, r3, lr
   12544:	str	r2, [fp, #-64]	; 0xffffffc0
   12548:	str	r3, [fp, #-60]	; 0xffffffc4
   1254c:	str	r0, [sp, #4]
   12550:	str	r1, [sp]
   12554:	b	12558 <__assert_fail@plt+0x11d4>
   12558:	b	1255c <__assert_fail@plt+0x11d8>
   1255c:	ldr	r0, [sp, #60]	; 0x3c
   12560:	mvn	r1, #0
   12564:	add	r0, r0, r1
   12568:	str	r0, [sp, #60]	; 0x3c
   1256c:	b	123dc <__assert_fail@plt+0x1058>
   12570:	ldr	r0, [sp, #64]	; 0x40
   12574:	ldr	r1, [sp, #68]	; 0x44
   12578:	str	r1, [fp, #-28]	; 0xffffffe4
   1257c:	str	r0, [fp, #-32]	; 0xffffffe0
   12580:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12584:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12588:	str	r1, [fp, #-12]
   1258c:	str	r0, [fp, #-16]
   12590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12594:	ldr	r1, [fp, #-20]	; 0xffffffec
   12598:	ldr	r2, [fp, #-16]
   1259c:	ldr	r3, [fp, #-12]
   125a0:	bl	122b0 <__assert_fail@plt+0xf2c>
   125a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   125ac:	mov	r2, #9
   125b0:	bl	128d4 <__assert_fail@plt+0x1550>
   125b4:	mov	sp, fp
   125b8:	pop	{fp, pc}
   125bc:	push	{fp, lr}
   125c0:	mov	fp, sp
   125c4:	sub	sp, sp, #24
   125c8:	strb	r0, [fp, #-1]
   125cc:	ldrb	r0, [fp, #-1]
   125d0:	movw	r1, #41368	; 0xa198
   125d4:	movt	r1, #4
   125d8:	ldr	r2, [r1, #4]
   125dc:	add	r3, r2, #1
   125e0:	str	r3, [r1, #4]
   125e4:	strb	r0, [r2]
   125e8:	ldrb	r0, [fp, #-1]
   125ec:	cmp	r0, #10
   125f0:	bne	1273c <__assert_fail@plt+0x13b8>
   125f4:	movw	r0, #41368	; 0xa198
   125f8:	movt	r0, #4
   125fc:	ldr	r1, [r0, #4]
   12600:	ldr	r0, [r0]
   12604:	sub	r0, r1, r0
   12608:	str	r0, [fp, #-8]
   1260c:	movw	r0, #41236	; 0xa114
   12610:	movt	r0, #4
   12614:	ldr	r0, [r0]
   12618:	cmn	r0, #1
   1261c:	bne	12664 <__assert_fail@plt+0x12e0>
   12620:	movw	r0, #0
   12624:	bl	11348 <isatty@plt>
   12628:	cmp	r0, #0
   1262c:	movw	r0, #1
   12630:	str	r0, [sp, #4]
   12634:	bne	12650 <__assert_fail@plt+0x12cc>
   12638:	movw	r0, #1
   1263c:	bl	11348 <isatty@plt>
   12640:	cmp	r0, #0
   12644:	movw	r0, #0
   12648:	movne	r0, #1
   1264c:	str	r0, [sp, #4]
   12650:	ldr	r0, [sp, #4]
   12654:	and	r0, r0, #1
   12658:	movw	r1, #41236	; 0xa114
   1265c:	movt	r1, #4
   12660:	str	r0, [r1]
   12664:	movw	r0, #41236	; 0xa114
   12668:	movt	r0, #4
   1266c:	ldr	r0, [r0]
   12670:	cmp	r0, #0
   12674:	beq	12680 <__assert_fail@plt+0x12fc>
   12678:	bl	119f0 <__assert_fail@plt+0x66c>
   1267c:	b	12738 <__assert_fail@plt+0x13b4>
   12680:	ldr	r0, [fp, #-8]
   12684:	cmp	r0, #512	; 0x200
   12688:	bcc	12734 <__assert_fail@plt+0x13b0>
   1268c:	movw	r0, #41368	; 0xa198
   12690:	movt	r0, #4
   12694:	ldr	r1, [r0, #4]
   12698:	str	r1, [sp, #12]
   1269c:	ldr	r0, [r0]
   126a0:	add	r0, r0, #512	; 0x200
   126a4:	str	r0, [sp, #8]
   126a8:	ldr	r0, [sp, #8]
   126ac:	mvn	r1, #0
   126b0:	add	r2, r0, r1
   126b4:	str	r2, [sp, #8]
   126b8:	add	r0, r0, r1
   126bc:	ldrb	r0, [r0]
   126c0:	cmp	r0, #10
   126c4:	beq	126cc <__assert_fail@plt+0x1348>
   126c8:	b	126a8 <__assert_fail@plt+0x1324>
   126cc:	ldr	r0, [sp, #8]
   126d0:	add	r0, r0, #1
   126d4:	str	r0, [sp, #8]
   126d8:	ldr	r0, [sp, #8]
   126dc:	movw	r1, #41368	; 0xa198
   126e0:	movt	r1, #4
   126e4:	str	r0, [r1, #4]
   126e8:	bl	119f0 <__assert_fail@plt+0x66c>
   126ec:	movw	r0, #41368	; 0xa198
   126f0:	movt	r0, #4
   126f4:	ldr	r1, [r0]
   126f8:	ldr	lr, [sp, #8]
   126fc:	ldr	r2, [sp, #12]
   12700:	ldr	r3, [sp, #8]
   12704:	sub	r2, r2, r3
   12708:	str	r0, [sp]
   1270c:	mov	r0, r1
   12710:	mov	r1, lr
   12714:	bl	1112c <memcpy@plt>
   12718:	ldr	r0, [sp]
   1271c:	ldr	r1, [r0]
   12720:	ldr	r2, [sp, #12]
   12724:	ldr	r3, [sp, #8]
   12728:	sub	r2, r2, r3
   1272c:	add	r1, r1, r2
   12730:	str	r1, [r0, #4]
   12734:	b	12738 <__assert_fail@plt+0x13b4>
   12738:	b	1273c <__assert_fail@plt+0x13b8>
   1273c:	mov	sp, fp
   12740:	pop	{fp, pc}
   12744:	push	{fp, lr}
   12748:	mov	fp, sp
   1274c:	sub	sp, sp, #48	; 0x30
   12750:	ldr	ip, [fp, #8]
   12754:	str	r0, [fp, #-8]
   12758:	str	r1, [fp, #-4]
   1275c:	str	r3, [fp, #-12]
   12760:	str	r2, [fp, #-16]
   12764:	ldr	r0, [fp, #8]
   12768:	mov	r1, #0
   1276c:	strb	r1, [r0, #250]	; 0xfa
   12770:	ldr	r0, [fp, #8]
   12774:	str	r1, [r0, #12]
   12778:	str	r1, [r0, #8]
   1277c:	ldr	r0, [fp, #-8]
   12780:	ldr	r1, [fp, #-4]
   12784:	orr	r0, r0, r1
   12788:	cmp	r0, #0
   1278c:	str	ip, [fp, #-20]	; 0xffffffec
   12790:	bne	127bc <__assert_fail@plt+0x1438>
   12794:	b	12798 <__assert_fail@plt+0x1414>
   12798:	ldr	r0, [fp, #-16]
   1279c:	ldr	r1, [fp, #-12]
   127a0:	rsbs	r0, r0, #1
   127a4:	rscs	r1, r1, #0
   127a8:	str	r0, [sp, #24]
   127ac:	str	r1, [sp, #20]
   127b0:	bcc	127bc <__assert_fail@plt+0x1438>
   127b4:	b	127b8 <__assert_fail@plt+0x1434>
   127b8:	b	128cc <__assert_fail@plt+0x1548>
   127bc:	ldr	r2, [fp, #-8]
   127c0:	ldr	r3, [fp, #-4]
   127c4:	ldr	r0, [fp, #-16]
   127c8:	ldr	r1, [fp, #-12]
   127cc:	ldr	ip, [fp, #8]
   127d0:	mov	lr, sp
   127d4:	str	ip, [lr, #8]
   127d8:	str	r1, [lr, #4]
   127dc:	str	r0, [lr]
   127e0:	sub	r0, fp, #8
   127e4:	bl	129a8 <__assert_fail@plt+0x1624>
   127e8:	str	r1, [fp, #-12]
   127ec:	str	r0, [fp, #-16]
   127f0:	ldr	r0, [fp, #-8]
   127f4:	ldr	r1, [fp, #-4]
   127f8:	orr	r0, r0, r1
   127fc:	cmp	r0, #0
   12800:	bne	1282c <__assert_fail@plt+0x14a8>
   12804:	b	12808 <__assert_fail@plt+0x1484>
   12808:	ldr	r0, [fp, #-16]
   1280c:	ldr	r1, [fp, #-12]
   12810:	rsbs	r0, r0, #1
   12814:	rscs	r1, r1, #0
   12818:	str	r0, [sp, #16]
   1281c:	str	r1, [sp, #12]
   12820:	bcc	1282c <__assert_fail@plt+0x14a8>
   12824:	b	12828 <__assert_fail@plt+0x14a4>
   12828:	b	128cc <__assert_fail@plt+0x1548>
   1282c:	ldr	r0, [fp, #-8]
   12830:	ldr	r1, [fp, #-4]
   12834:	ldr	r2, [fp, #-16]
   12838:	ldr	r3, [fp, #-12]
   1283c:	bl	13484 <__assert_fail@plt+0x2100>
   12840:	tst	r0, #1
   12844:	beq	12870 <__assert_fail@plt+0x14ec>
   12848:	ldr	r0, [fp, #8]
   1284c:	ldr	r2, [fp, #-8]
   12850:	ldr	r3, [fp, #-4]
   12854:	ldr	r1, [fp, #-16]
   12858:	ldr	ip, [fp, #-12]
   1285c:	mov	lr, sp
   12860:	str	ip, [lr, #4]
   12864:	str	r1, [lr]
   12868:	bl	14604 <__assert_fail@plt+0x3280>
   1286c:	b	128cc <__assert_fail@plt+0x1548>
   12870:	ldr	r0, [fp, #-8]
   12874:	ldr	r1, [fp, #-4]
   12878:	orr	r0, r0, r1
   1287c:	cmp	r0, #0
   12880:	bne	128a0 <__assert_fail@plt+0x151c>
   12884:	b	12888 <__assert_fail@plt+0x1504>
   12888:	ldr	r0, [fp, #-16]
   1288c:	ldr	r1, [fp, #-12]
   12890:	ldr	r3, [fp, #8]
   12894:	mov	r2, #1
   12898:	bl	146d4 <__assert_fail@plt+0x3350>
   1289c:	b	128c8 <__assert_fail@plt+0x1544>
   128a0:	ldr	r0, [fp, #-8]
   128a4:	ldr	r1, [fp, #-4]
   128a8:	ldr	r2, [fp, #-16]
   128ac:	ldr	r3, [fp, #-12]
   128b0:	ldr	ip, [fp, #8]
   128b4:	mov	lr, sp
   128b8:	str	ip, [lr, #4]
   128bc:	mov	ip, #1
   128c0:	str	ip, [lr]
   128c4:	bl	15180 <__assert_fail@plt+0x3dfc>
   128c8:	b	128cc <__assert_fail@plt+0x1548>
   128cc:	mov	sp, fp
   128d0:	pop	{fp, pc}
   128d4:	push	{fp, lr}
   128d8:	mov	fp, sp
   128dc:	sub	sp, sp, #56	; 0x38
   128e0:	add	r3, sp, #23
   128e4:	str	r0, [fp, #-8]
   128e8:	str	r1, [fp, #-4]
   128ec:	str	r2, [fp, #-12]
   128f0:	ldr	r0, [fp, #-8]
   128f4:	ldr	r1, [fp, #-4]
   128f8:	mov	r2, r3
   128fc:	bl	1b024 <__assert_fail@plt+0x9ca0>
   12900:	add	r1, sp, #23
   12904:	str	r0, [sp, #16]
   12908:	ldr	r0, [sp, #16]
   1290c:	sub	r0, r0, r1
   12910:	movw	r1, #21
   12914:	sub	r0, r1, r0
   12918:	sub	r0, r0, #1
   1291c:	str	r0, [sp, #12]
   12920:	ldr	r0, [sp, #12]
   12924:	str	r0, [sp, #8]
   12928:	ldr	r0, [sp, #8]
   1292c:	ldr	r1, [fp, #-12]
   12930:	cmp	r0, r1
   12934:	bcs	12964 <__assert_fail@plt+0x15e0>
   12938:	movw	r0, #41368	; 0xa198
   1293c:	movt	r0, #4
   12940:	ldr	r1, [r0, #4]
   12944:	add	r2, r1, #1
   12948:	str	r2, [r0, #4]
   1294c:	movw	r0, #48	; 0x30
   12950:	strb	r0, [r1]
   12954:	ldr	r0, [sp, #8]
   12958:	add	r0, r0, #1
   1295c:	str	r0, [sp, #8]
   12960:	b	12928 <__assert_fail@plt+0x15a4>
   12964:	movw	r0, #41368	; 0xa198
   12968:	movt	r0, #4
   1296c:	ldr	r1, [r0, #4]
   12970:	ldr	r2, [sp, #16]
   12974:	ldr	r3, [sp, #12]
   12978:	str	r0, [sp, #4]
   1297c:	mov	r0, r1
   12980:	mov	r1, r2
   12984:	mov	r2, r3
   12988:	bl	1112c <memcpy@plt>
   1298c:	ldr	r0, [sp, #12]
   12990:	ldr	r1, [sp, #4]
   12994:	ldr	r2, [r1, #4]
   12998:	add	r0, r2, r0
   1299c:	str	r0, [r1, #4]
   129a0:	mov	sp, fp
   129a4:	pop	{fp, pc}
   129a8:	push	{r4, sl, fp, lr}
   129ac:	add	fp, sp, #8
   129b0:	sub	sp, sp, #304	; 0x130
   129b4:	ldr	r1, [fp, #12]
   129b8:	ldr	ip, [fp, #8]
   129bc:	ldr	lr, [fp, #16]
   129c0:	str	r0, [fp, #-12]
   129c4:	str	r3, [fp, #-20]	; 0xffffffec
   129c8:	str	r2, [fp, #-24]	; 0xffffffe8
   129cc:	str	r1, [fp, #-28]	; 0xffffffe4
   129d0:	str	ip, [fp, #-32]	; 0xffffffe0
   129d4:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   129d8:	tst	r0, #1
   129dc:	str	lr, [sp, #112]	; 0x70
   129e0:	bne	12bd4 <__assert_fail@plt+0x1850>
   129e4:	b	129e8 <__assert_fail@plt+0x1664>
   129e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129f0:	orr	r0, r0, r1
   129f4:	cmp	r0, #0
   129f8:	bne	12ab0 <__assert_fail@plt+0x172c>
   129fc:	b	12a00 <__assert_fail@plt+0x167c>
   12a00:	b	12a04 <__assert_fail@plt+0x1680>
   12a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a08:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a0c:	str	r1, [fp, #-44]	; 0xffffffd4
   12a10:	str	r0, [fp, #-48]	; 0xffffffd0
   12a14:	movw	r0, #0
   12a18:	str	r0, [fp, #-52]	; 0xffffffcc
   12a1c:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   12a20:	tst	r0, #1
   12a24:	bne	12a54 <__assert_fail@plt+0x16d0>
   12a28:	b	12a2c <__assert_fail@plt+0x16a8>
   12a2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a34:	lsrs	r1, r1, #1
   12a38:	rrx	r0, r0
   12a3c:	str	r1, [fp, #-44]	; 0xffffffd4
   12a40:	str	r0, [fp, #-48]	; 0xffffffd0
   12a44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a48:	add	r0, r0, #1
   12a4c:	str	r0, [fp, #-52]	; 0xffffffcc
   12a50:	b	12a1c <__assert_fail@plt+0x1698>
   12a54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a58:	str	r0, [fp, #-36]	; 0xffffffdc
   12a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a60:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12a68:	lsr	r0, r0, r2
   12a6c:	rsb	r3, r2, #32
   12a70:	orr	r0, r0, r1, lsl r3
   12a74:	sub	r3, r2, #32
   12a78:	cmp	r3, #0
   12a7c:	lsrge	r0, r1, r3
   12a80:	lsr	r1, r1, r2
   12a84:	cmp	r3, #0
   12a88:	movwge	r1, #0
   12a8c:	str	r1, [fp, #-28]	; 0xffffffe4
   12a90:	str	r0, [fp, #-32]	; 0xffffffe0
   12a94:	mov	r0, #0
   12a98:	str	r0, [fp, #-20]	; 0xffffffec
   12a9c:	str	r0, [fp, #-24]	; 0xffffffe8
   12aa0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12aa4:	add	r0, r0, #64	; 0x40
   12aa8:	str	r0, [fp, #-36]	; 0xffffffdc
   12aac:	b	12bb8 <__assert_fail@plt+0x1834>
   12ab0:	b	12ab4 <__assert_fail@plt+0x1730>
   12ab4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ab8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12abc:	str	r1, [fp, #-60]	; 0xffffffc4
   12ac0:	str	r0, [fp, #-64]	; 0xffffffc0
   12ac4:	movw	r0, #0
   12ac8:	str	r0, [fp, #-68]	; 0xffffffbc
   12acc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12ad0:	tst	r0, #1
   12ad4:	bne	12b04 <__assert_fail@plt+0x1780>
   12ad8:	b	12adc <__assert_fail@plt+0x1758>
   12adc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ae0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12ae4:	lsrs	r1, r1, #1
   12ae8:	rrx	r0, r0
   12aec:	str	r1, [fp, #-60]	; 0xffffffc4
   12af0:	str	r0, [fp, #-64]	; 0xffffffc0
   12af4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12af8:	add	r0, r0, #1
   12afc:	str	r0, [fp, #-68]	; 0xffffffbc
   12b00:	b	12acc <__assert_fail@plt+0x1748>
   12b04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b08:	str	r0, [fp, #-36]	; 0xffffffdc
   12b0c:	b	12b10 <__assert_fail@plt+0x178c>
   12b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b14:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12b1c:	rsb	r3, r2, #64	; 0x40
   12b20:	lsl	ip, r0, r3
   12b24:	rsb	lr, r2, #32
   12b28:	cmp	lr, #0
   12b2c:	movwge	ip, #0
   12b30:	rsb	r4, r3, #32
   12b34:	lsr	r4, r0, r4
   12b38:	orr	r1, r4, r1, lsl r3
   12b3c:	cmp	lr, #0
   12b40:	lslge	r1, r0, lr
   12b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b4c:	lsr	r0, r0, r2
   12b50:	orr	r0, r0, r3, lsl lr
   12b54:	sub	lr, r2, #32
   12b58:	cmp	lr, #0
   12b5c:	lsrge	r0, r3, lr
   12b60:	lsr	r2, r3, r2
   12b64:	cmp	lr, #0
   12b68:	movwge	r2, #0
   12b6c:	orr	r1, r1, r2
   12b70:	orr	r0, ip, r0
   12b74:	str	r0, [fp, #-32]	; 0xffffffe0
   12b78:	str	r1, [fp, #-28]	; 0xffffffe4
   12b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12b88:	lsr	r0, r0, r2
   12b8c:	rsb	r3, r2, #32
   12b90:	orr	r0, r0, r1, lsl r3
   12b94:	sub	r3, r2, #32
   12b98:	cmp	r3, #0
   12b9c:	lsrge	r0, r1, r3
   12ba0:	lsr	r1, r1, r2
   12ba4:	cmp	r3, #0
   12ba8:	movwge	r1, #0
   12bac:	str	r1, [fp, #-20]	; 0xffffffec
   12bb0:	str	r0, [fp, #-24]	; 0xffffffe8
   12bb4:	b	12bb8 <__assert_fail@plt+0x1834>
   12bb8:	ldr	r0, [fp, #16]
   12bbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12bc0:	mov	r2, sp
   12bc4:	str	r1, [r2]
   12bc8:	mov	r2, #2
   12bcc:	mov	r3, #0
   12bd0:	bl	16958 <__assert_fail@plt+0x55d4>
   12bd4:	mov	r0, #0
   12bd8:	str	r0, [fp, #-76]	; 0xffffffb4
   12bdc:	mov	r0, #3
   12be0:	str	r0, [fp, #-80]	; 0xffffffb0
   12be4:	movw	r0, #0
   12be8:	str	r0, [fp, #-84]	; 0xffffffac
   12bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12bf4:	orr	r0, r0, r1
   12bf8:	mov	r1, #0
   12bfc:	cmp	r0, #0
   12c00:	str	r1, [sp, #108]	; 0x6c
   12c04:	beq	12c20 <__assert_fail@plt+0x189c>
   12c08:	b	12c0c <__assert_fail@plt+0x1888>
   12c0c:	ldr	r0, [fp, #-84]	; 0xffffffac
   12c10:	cmp	r0, #668	; 0x29c
   12c14:	movw	r0, #0
   12c18:	movcc	r0, #1
   12c1c:	str	r0, [sp, #108]	; 0x6c
   12c20:	ldr	r0, [sp, #108]	; 0x6c
   12c24:	tst	r0, #1
   12c28:	beq	12ebc <__assert_fail@plt+0x1b38>
   12c2c:	b	12c30 <__assert_fail@plt+0x18ac>
   12c30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c38:	ldr	r2, [fp, #-84]	; 0xffffffac
   12c3c:	movw	r3, #18272	; 0x4760
   12c40:	movt	r3, #3
   12c44:	ldr	r2, [r3, r2, lsl #4]!
   12c48:	ldr	r3, [r3, #4]
   12c4c:	umull	ip, lr, r0, r2
   12c50:	mla	r0, r0, r3, lr
   12c54:	mla	r0, r1, r2, r0
   12c58:	str	ip, [fp, #-104]	; 0xffffff98
   12c5c:	str	r0, [fp, #-100]	; 0xffffff9c
   12c60:	ldr	r0, [fp, #-104]	; 0xffffff98
   12c64:	ldr	r1, [fp, #-100]	; 0xffffff9c
   12c68:	str	r1, [sp, #140]	; 0x8c
   12c6c:	str	r0, [sp, #136]	; 0x88
   12c70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12c74:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12c78:	str	r1, [sp, #132]	; 0x84
   12c7c:	str	r0, [sp, #128]	; 0x80
   12c80:	ldr	r0, [sp, #136]	; 0x88
   12c84:	str	r0, [sp, #156]	; 0x9c
   12c88:	ldr	r0, [sp, #140]	; 0x8c
   12c8c:	str	r0, [sp, #148]	; 0x94
   12c90:	ldr	r0, [sp, #128]	; 0x80
   12c94:	str	r0, [sp, #152]	; 0x98
   12c98:	ldr	r0, [sp, #132]	; 0x84
   12c9c:	str	r0, [sp, #144]	; 0x90
   12ca0:	ldr	r0, [sp, #156]	; 0x9c
   12ca4:	ldr	r1, [sp, #152]	; 0x98
   12ca8:	umull	r0, r1, r0, r1
   12cac:	str	r1, [fp, #-124]	; 0xffffff84
   12cb0:	str	r0, [fp, #-128]	; 0xffffff80
   12cb4:	ldr	r0, [sp, #156]	; 0x9c
   12cb8:	ldr	r1, [sp, #144]	; 0x90
   12cbc:	umull	r0, r1, r0, r1
   12cc0:	str	r1, [fp, #-132]	; 0xffffff7c
   12cc4:	str	r0, [fp, #-136]	; 0xffffff78
   12cc8:	ldr	r0, [sp, #148]	; 0x94
   12ccc:	ldr	r1, [sp, #152]	; 0x98
   12cd0:	umull	r0, r1, r0, r1
   12cd4:	str	r1, [fp, #-140]	; 0xffffff74
   12cd8:	str	r0, [fp, #-144]	; 0xffffff70
   12cdc:	ldr	r0, [sp, #148]	; 0x94
   12ce0:	ldr	r1, [sp, #144]	; 0x90
   12ce4:	umull	r0, r1, r0, r1
   12ce8:	str	r1, [fp, #-148]	; 0xffffff6c
   12cec:	str	r0, [fp, #-152]	; 0xffffff68
   12cf0:	ldr	r0, [fp, #-124]	; 0xffffff84
   12cf4:	ldr	r1, [fp, #-136]	; 0xffffff78
   12cf8:	ldr	r2, [fp, #-132]	; 0xffffff7c
   12cfc:	adds	r0, r1, r0
   12d00:	adc	r1, r2, #0
   12d04:	str	r0, [fp, #-136]	; 0xffffff78
   12d08:	str	r1, [fp, #-132]	; 0xffffff7c
   12d0c:	ldr	r0, [fp, #-144]	; 0xffffff70
   12d10:	ldr	r1, [fp, #-140]	; 0xffffff74
   12d14:	ldr	r2, [fp, #-136]	; 0xffffff78
   12d18:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12d1c:	adds	r0, r2, r0
   12d20:	adc	r1, r3, r1
   12d24:	str	r0, [fp, #-136]	; 0xffffff78
   12d28:	str	r1, [fp, #-132]	; 0xffffff7c
   12d2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   12d30:	ldr	r1, [fp, #-132]	; 0xffffff7c
   12d34:	ldr	r2, [fp, #-144]	; 0xffffff70
   12d38:	ldr	r3, [fp, #-140]	; 0xffffff74
   12d3c:	subs	r0, r0, r2
   12d40:	sbcs	r1, r1, r3
   12d44:	str	r0, [sp, #104]	; 0x68
   12d48:	str	r1, [sp, #100]	; 0x64
   12d4c:	bcs	12d60 <__assert_fail@plt+0x19dc>
   12d50:	b	12d54 <__assert_fail@plt+0x19d0>
   12d54:	ldr	r0, [fp, #-148]	; 0xffffff6c
   12d58:	add	r0, r0, #1
   12d5c:	str	r0, [fp, #-148]	; 0xffffff6c
   12d60:	ldr	r0, [fp, #-152]	; 0xffffff68
   12d64:	ldr	r1, [fp, #-148]	; 0xffffff6c
   12d68:	ldr	r2, [fp, #-132]	; 0xffffff7c
   12d6c:	adds	r0, r0, r2
   12d70:	adc	r1, r1, #0
   12d74:	str	r0, [fp, #-112]	; 0xffffff90
   12d78:	str	r1, [fp, #-108]	; 0xffffff94
   12d7c:	ldr	r0, [fp, #-136]	; 0xffffff78
   12d80:	ldr	r1, [fp, #-128]	; 0xffffff80
   12d84:	str	r0, [fp, #-116]	; 0xffffff8c
   12d88:	str	r1, [fp, #-120]	; 0xffffff88
   12d8c:	ldr	r0, [fp, #-112]	; 0xffffff90
   12d90:	ldr	r1, [fp, #-108]	; 0xffffff94
   12d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d9c:	subs	r0, r2, r0
   12da0:	sbcs	r1, r3, r1
   12da4:	str	r0, [sp, #96]	; 0x60
   12da8:	str	r1, [sp, #92]	; 0x5c
   12dac:	bcs	12db8 <__assert_fail@plt+0x1a34>
   12db0:	b	12db4 <__assert_fail@plt+0x1a30>
   12db4:	b	12e80 <__assert_fail@plt+0x1afc>
   12db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12dc0:	ldr	r2, [fp, #-112]	; 0xffffff90
   12dc4:	ldr	r3, [fp, #-108]	; 0xffffff94
   12dc8:	subs	r0, r0, r2
   12dcc:	sbc	r1, r1, r3
   12dd0:	str	r0, [fp, #-112]	; 0xffffff90
   12dd4:	str	r1, [fp, #-108]	; 0xffffff94
   12dd8:	ldr	r0, [fp, #-112]	; 0xffffff90
   12ddc:	ldr	r1, [fp, #-108]	; 0xffffff94
   12de0:	ldr	r2, [fp, #-84]	; 0xffffffac
   12de4:	movw	r3, #18272	; 0x4760
   12de8:	movt	r3, #3
   12dec:	mov	ip, r3
   12df0:	ldr	r2, [ip, r2, lsl #4]!
   12df4:	ldr	ip, [ip, #4]
   12df8:	umull	lr, r4, r0, r2
   12dfc:	mla	r0, r0, ip, r4
   12e00:	mla	r0, r1, r2, r0
   12e04:	str	lr, [fp, #-96]	; 0xffffffa0
   12e08:	str	r0, [fp, #-92]	; 0xffffffa4
   12e0c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12e10:	ldr	r1, [fp, #-92]	; 0xffffffa4
   12e14:	ldr	r2, [fp, #-84]	; 0xffffffac
   12e18:	add	r2, r3, r2, lsl #4
   12e1c:	ldr	r3, [r2, #8]
   12e20:	ldr	r2, [r2, #12]
   12e24:	subs	r0, r3, r0
   12e28:	sbcs	r1, r2, r1
   12e2c:	str	r0, [sp, #88]	; 0x58
   12e30:	str	r1, [sp, #84]	; 0x54
   12e34:	bcs	12e40 <__assert_fail@plt+0x1abc>
   12e38:	b	12e3c <__assert_fail@plt+0x1ab8>
   12e3c:	b	12e80 <__assert_fail@plt+0x1afc>
   12e40:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12e44:	ldr	r1, [fp, #-92]	; 0xffffffa4
   12e48:	str	r1, [fp, #-20]	; 0xffffffec
   12e4c:	str	r0, [fp, #-24]	; 0xffffffe8
   12e50:	ldr	r0, [fp, #-104]	; 0xffffff98
   12e54:	ldr	r1, [fp, #-100]	; 0xffffff9c
   12e58:	str	r1, [fp, #-28]	; 0xffffffe4
   12e5c:	str	r0, [fp, #-32]	; 0xffffffe0
   12e60:	ldr	r0, [fp, #16]
   12e64:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12e68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12e6c:	mov	r1, sp
   12e70:	mov	ip, #1
   12e74:	str	ip, [r1]
   12e78:	bl	16958 <__assert_fail@plt+0x55d4>
   12e7c:	b	12c30 <__assert_fail@plt+0x18ac>
   12e80:	ldr	r0, [fp, #-84]	; 0xffffffac
   12e84:	movw	r1, #29072	; 0x7190
   12e88:	movt	r1, #3
   12e8c:	add	r0, r1, r0
   12e90:	ldrb	r0, [r0, #1]
   12e94:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12e98:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12e9c:	adds	r0, r1, r0
   12ea0:	adc	r1, r2, #0
   12ea4:	str	r0, [fp, #-80]	; 0xffffffb0
   12ea8:	str	r1, [fp, #-76]	; 0xffffffb4
   12eac:	ldr	r0, [fp, #-84]	; 0xffffffac
   12eb0:	add	r0, r0, #1
   12eb4:	str	r0, [fp, #-84]	; 0xffffffac
   12eb8:	b	12bec <__assert_fail@plt+0x1868>
   12ebc:	ldr	r0, [fp, #-12]
   12ec0:	movw	r1, #0
   12ec4:	cmp	r0, r1
   12ec8:	beq	12ee0 <__assert_fail@plt+0x1b5c>
   12ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ed4:	ldr	r2, [fp, #-12]
   12ed8:	str	r1, [r2, #4]
   12edc:	str	r0, [r2]
   12ee0:	b	12ee4 <__assert_fail@plt+0x1b60>
   12ee4:	ldr	r0, [fp, #-84]	; 0xffffffac
   12ee8:	cmp	r0, #668	; 0x29c
   12eec:	bcs	13474 <__assert_fail@plt+0x20f0>
   12ef0:	ldr	r0, [fp, #-84]	; 0xffffffac
   12ef4:	movw	r1, #18272	; 0x4760
   12ef8:	movt	r1, #3
   12efc:	add	r0, r1, r0, lsl #4
   12f00:	str	r0, [sp, #116]	; 0x74
   12f04:	b	12f08 <__assert_fail@plt+0x1b84>
   12f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f10:	ldr	r2, [sp, #116]	; 0x74
   12f14:	ldr	r3, [r2]
   12f18:	ldr	r2, [r2, #4]
   12f1c:	umull	ip, lr, r0, r3
   12f20:	mla	r0, r0, r2, lr
   12f24:	mla	r0, r1, r3, r0
   12f28:	str	ip, [sp, #120]	; 0x78
   12f2c:	str	r0, [sp, #124]	; 0x7c
   12f30:	ldr	r0, [sp, #120]	; 0x78
   12f34:	ldr	r1, [sp, #124]	; 0x7c
   12f38:	ldr	r2, [sp, #116]	; 0x74
   12f3c:	ldr	r3, [r2, #8]
   12f40:	ldr	r2, [r2, #12]
   12f44:	subs	r0, r3, r0
   12f48:	sbcs	r1, r2, r1
   12f4c:	str	r0, [sp, #80]	; 0x50
   12f50:	str	r1, [sp, #76]	; 0x4c
   12f54:	bcs	12f60 <__assert_fail@plt+0x1bdc>
   12f58:	b	12f5c <__assert_fail@plt+0x1bd8>
   12f5c:	b	12f9c <__assert_fail@plt+0x1c18>
   12f60:	ldr	r0, [sp, #120]	; 0x78
   12f64:	ldr	r1, [sp, #124]	; 0x7c
   12f68:	str	r1, [fp, #-28]	; 0xffffffe4
   12f6c:	str	r0, [fp, #-32]	; 0xffffffe0
   12f70:	ldr	r0, [fp, #16]
   12f74:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12f78:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12f7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   12f80:	add	r1, r1, #1
   12f84:	mov	ip, sp
   12f88:	mov	lr, #0
   12f8c:	str	lr, [ip, #4]
   12f90:	str	r1, [ip]
   12f94:	bl	16b0c <__assert_fail@plt+0x5788>
   12f98:	b	12f08 <__assert_fail@plt+0x1b84>
   12f9c:	b	12fa0 <__assert_fail@plt+0x1c1c>
   12fa0:	b	12fa4 <__assert_fail@plt+0x1c20>
   12fa4:	b	12fa8 <__assert_fail@plt+0x1c24>
   12fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fb0:	ldr	r2, [sp, #116]	; 0x74
   12fb4:	ldr	r3, [r2, #16]
   12fb8:	ldr	r2, [r2, #20]
   12fbc:	umull	ip, lr, r0, r3
   12fc0:	mla	r0, r0, r2, lr
   12fc4:	mla	r0, r1, r3, r0
   12fc8:	str	ip, [sp, #120]	; 0x78
   12fcc:	str	r0, [sp, #124]	; 0x7c
   12fd0:	ldr	r0, [sp, #120]	; 0x78
   12fd4:	ldr	r1, [sp, #124]	; 0x7c
   12fd8:	ldr	r2, [sp, #116]	; 0x74
   12fdc:	ldr	r3, [r2, #24]
   12fe0:	ldr	r2, [r2, #28]
   12fe4:	subs	r0, r3, r0
   12fe8:	sbcs	r1, r2, r1
   12fec:	str	r0, [sp, #72]	; 0x48
   12ff0:	str	r1, [sp, #68]	; 0x44
   12ff4:	bcs	13000 <__assert_fail@plt+0x1c7c>
   12ff8:	b	12ffc <__assert_fail@plt+0x1c78>
   12ffc:	b	1303c <__assert_fail@plt+0x1cb8>
   13000:	ldr	r0, [sp, #120]	; 0x78
   13004:	ldr	r1, [sp, #124]	; 0x7c
   13008:	str	r1, [fp, #-28]	; 0xffffffe4
   1300c:	str	r0, [fp, #-32]	; 0xffffffe0
   13010:	ldr	r0, [fp, #16]
   13014:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13018:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1301c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13020:	add	r1, r1, #1
   13024:	mov	ip, sp
   13028:	mov	lr, #1
   1302c:	str	lr, [ip, #4]
   13030:	str	r1, [ip]
   13034:	bl	16b0c <__assert_fail@plt+0x5788>
   13038:	b	12fa8 <__assert_fail@plt+0x1c24>
   1303c:	b	13040 <__assert_fail@plt+0x1cbc>
   13040:	b	13044 <__assert_fail@plt+0x1cc0>
   13044:	b	13048 <__assert_fail@plt+0x1cc4>
   13048:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1304c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13050:	ldr	r2, [sp, #116]	; 0x74
   13054:	ldr	r3, [r2, #32]
   13058:	ldr	r2, [r2, #36]	; 0x24
   1305c:	umull	ip, lr, r0, r3
   13060:	mla	r0, r0, r2, lr
   13064:	mla	r0, r1, r3, r0
   13068:	str	ip, [sp, #120]	; 0x78
   1306c:	str	r0, [sp, #124]	; 0x7c
   13070:	ldr	r0, [sp, #120]	; 0x78
   13074:	ldr	r1, [sp, #124]	; 0x7c
   13078:	ldr	r2, [sp, #116]	; 0x74
   1307c:	ldr	r3, [r2, #40]	; 0x28
   13080:	ldr	r2, [r2, #44]	; 0x2c
   13084:	subs	r0, r3, r0
   13088:	sbcs	r1, r2, r1
   1308c:	str	r0, [sp, #64]	; 0x40
   13090:	str	r1, [sp, #60]	; 0x3c
   13094:	bcs	130a0 <__assert_fail@plt+0x1d1c>
   13098:	b	1309c <__assert_fail@plt+0x1d18>
   1309c:	b	130dc <__assert_fail@plt+0x1d58>
   130a0:	ldr	r0, [sp, #120]	; 0x78
   130a4:	ldr	r1, [sp, #124]	; 0x7c
   130a8:	str	r1, [fp, #-28]	; 0xffffffe4
   130ac:	str	r0, [fp, #-32]	; 0xffffffe0
   130b0:	ldr	r0, [fp, #16]
   130b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   130b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   130bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   130c0:	add	r1, r1, #1
   130c4:	mov	ip, sp
   130c8:	mov	lr, #2
   130cc:	str	lr, [ip, #4]
   130d0:	str	r1, [ip]
   130d4:	bl	16b0c <__assert_fail@plt+0x5788>
   130d8:	b	13048 <__assert_fail@plt+0x1cc4>
   130dc:	b	130e0 <__assert_fail@plt+0x1d5c>
   130e0:	b	130e4 <__assert_fail@plt+0x1d60>
   130e4:	b	130e8 <__assert_fail@plt+0x1d64>
   130e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130f0:	ldr	r2, [sp, #116]	; 0x74
   130f4:	ldr	r3, [r2, #48]	; 0x30
   130f8:	ldr	r2, [r2, #52]	; 0x34
   130fc:	umull	ip, lr, r0, r3
   13100:	mla	r0, r0, r2, lr
   13104:	mla	r0, r1, r3, r0
   13108:	str	ip, [sp, #120]	; 0x78
   1310c:	str	r0, [sp, #124]	; 0x7c
   13110:	ldr	r0, [sp, #120]	; 0x78
   13114:	ldr	r1, [sp, #124]	; 0x7c
   13118:	ldr	r2, [sp, #116]	; 0x74
   1311c:	ldr	r3, [r2, #56]	; 0x38
   13120:	ldr	r2, [r2, #60]	; 0x3c
   13124:	subs	r0, r3, r0
   13128:	sbcs	r1, r2, r1
   1312c:	str	r0, [sp, #56]	; 0x38
   13130:	str	r1, [sp, #52]	; 0x34
   13134:	bcs	13140 <__assert_fail@plt+0x1dbc>
   13138:	b	1313c <__assert_fail@plt+0x1db8>
   1313c:	b	1317c <__assert_fail@plt+0x1df8>
   13140:	ldr	r0, [sp, #120]	; 0x78
   13144:	ldr	r1, [sp, #124]	; 0x7c
   13148:	str	r1, [fp, #-28]	; 0xffffffe4
   1314c:	str	r0, [fp, #-32]	; 0xffffffe0
   13150:	ldr	r0, [fp, #16]
   13154:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13158:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1315c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13160:	add	r1, r1, #1
   13164:	mov	ip, sp
   13168:	mov	lr, #3
   1316c:	str	lr, [ip, #4]
   13170:	str	r1, [ip]
   13174:	bl	16b0c <__assert_fail@plt+0x5788>
   13178:	b	130e8 <__assert_fail@plt+0x1d64>
   1317c:	b	13180 <__assert_fail@plt+0x1dfc>
   13180:	b	13184 <__assert_fail@plt+0x1e00>
   13184:	b	13188 <__assert_fail@plt+0x1e04>
   13188:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1318c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13190:	ldr	r2, [sp, #116]	; 0x74
   13194:	ldr	r3, [r2, #64]	; 0x40
   13198:	ldr	r2, [r2, #68]	; 0x44
   1319c:	umull	ip, lr, r0, r3
   131a0:	mla	r0, r0, r2, lr
   131a4:	mla	r0, r1, r3, r0
   131a8:	str	ip, [sp, #120]	; 0x78
   131ac:	str	r0, [sp, #124]	; 0x7c
   131b0:	ldr	r0, [sp, #120]	; 0x78
   131b4:	ldr	r1, [sp, #124]	; 0x7c
   131b8:	ldr	r2, [sp, #116]	; 0x74
   131bc:	ldr	r3, [r2, #72]	; 0x48
   131c0:	ldr	r2, [r2, #76]	; 0x4c
   131c4:	subs	r0, r3, r0
   131c8:	sbcs	r1, r2, r1
   131cc:	str	r0, [sp, #48]	; 0x30
   131d0:	str	r1, [sp, #44]	; 0x2c
   131d4:	bcs	131e0 <__assert_fail@plt+0x1e5c>
   131d8:	b	131dc <__assert_fail@plt+0x1e58>
   131dc:	b	1321c <__assert_fail@plt+0x1e98>
   131e0:	ldr	r0, [sp, #120]	; 0x78
   131e4:	ldr	r1, [sp, #124]	; 0x7c
   131e8:	str	r1, [fp, #-28]	; 0xffffffe4
   131ec:	str	r0, [fp, #-32]	; 0xffffffe0
   131f0:	ldr	r0, [fp, #16]
   131f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   131f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   131fc:	ldr	r1, [fp, #-84]	; 0xffffffac
   13200:	add	r1, r1, #1
   13204:	mov	ip, sp
   13208:	mov	lr, #4
   1320c:	str	lr, [ip, #4]
   13210:	str	r1, [ip]
   13214:	bl	16b0c <__assert_fail@plt+0x5788>
   13218:	b	13188 <__assert_fail@plt+0x1e04>
   1321c:	b	13220 <__assert_fail@plt+0x1e9c>
   13220:	b	13224 <__assert_fail@plt+0x1ea0>
   13224:	b	13228 <__assert_fail@plt+0x1ea4>
   13228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1322c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13230:	ldr	r2, [sp, #116]	; 0x74
   13234:	ldr	r3, [r2, #80]	; 0x50
   13238:	ldr	r2, [r2, #84]	; 0x54
   1323c:	umull	ip, lr, r0, r3
   13240:	mla	r0, r0, r2, lr
   13244:	mla	r0, r1, r3, r0
   13248:	str	ip, [sp, #120]	; 0x78
   1324c:	str	r0, [sp, #124]	; 0x7c
   13250:	ldr	r0, [sp, #120]	; 0x78
   13254:	ldr	r1, [sp, #124]	; 0x7c
   13258:	ldr	r2, [sp, #116]	; 0x74
   1325c:	ldr	r3, [r2, #88]	; 0x58
   13260:	ldr	r2, [r2, #92]	; 0x5c
   13264:	subs	r0, r3, r0
   13268:	sbcs	r1, r2, r1
   1326c:	str	r0, [sp, #40]	; 0x28
   13270:	str	r1, [sp, #36]	; 0x24
   13274:	bcs	13280 <__assert_fail@plt+0x1efc>
   13278:	b	1327c <__assert_fail@plt+0x1ef8>
   1327c:	b	132bc <__assert_fail@plt+0x1f38>
   13280:	ldr	r0, [sp, #120]	; 0x78
   13284:	ldr	r1, [sp, #124]	; 0x7c
   13288:	str	r1, [fp, #-28]	; 0xffffffe4
   1328c:	str	r0, [fp, #-32]	; 0xffffffe0
   13290:	ldr	r0, [fp, #16]
   13294:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13298:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1329c:	ldr	r1, [fp, #-84]	; 0xffffffac
   132a0:	add	r1, r1, #1
   132a4:	mov	ip, sp
   132a8:	mov	lr, #5
   132ac:	str	lr, [ip, #4]
   132b0:	str	r1, [ip]
   132b4:	bl	16b0c <__assert_fail@plt+0x5788>
   132b8:	b	13228 <__assert_fail@plt+0x1ea4>
   132bc:	b	132c0 <__assert_fail@plt+0x1f3c>
   132c0:	b	132c4 <__assert_fail@plt+0x1f40>
   132c4:	b	132c8 <__assert_fail@plt+0x1f44>
   132c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132d0:	ldr	r2, [sp, #116]	; 0x74
   132d4:	ldr	r3, [r2, #96]	; 0x60
   132d8:	ldr	r2, [r2, #100]	; 0x64
   132dc:	umull	ip, lr, r0, r3
   132e0:	mla	r0, r0, r2, lr
   132e4:	mla	r0, r1, r3, r0
   132e8:	str	ip, [sp, #120]	; 0x78
   132ec:	str	r0, [sp, #124]	; 0x7c
   132f0:	ldr	r0, [sp, #120]	; 0x78
   132f4:	ldr	r1, [sp, #124]	; 0x7c
   132f8:	ldr	r2, [sp, #116]	; 0x74
   132fc:	ldr	r3, [r2, #104]	; 0x68
   13300:	ldr	r2, [r2, #108]	; 0x6c
   13304:	subs	r0, r3, r0
   13308:	sbcs	r1, r2, r1
   1330c:	str	r0, [sp, #32]
   13310:	str	r1, [sp, #28]
   13314:	bcs	13320 <__assert_fail@plt+0x1f9c>
   13318:	b	1331c <__assert_fail@plt+0x1f98>
   1331c:	b	1335c <__assert_fail@plt+0x1fd8>
   13320:	ldr	r0, [sp, #120]	; 0x78
   13324:	ldr	r1, [sp, #124]	; 0x7c
   13328:	str	r1, [fp, #-28]	; 0xffffffe4
   1332c:	str	r0, [fp, #-32]	; 0xffffffe0
   13330:	ldr	r0, [fp, #16]
   13334:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13338:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1333c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13340:	add	r1, r1, #1
   13344:	mov	ip, sp
   13348:	mov	lr, #6
   1334c:	str	lr, [ip, #4]
   13350:	str	r1, [ip]
   13354:	bl	16b0c <__assert_fail@plt+0x5788>
   13358:	b	132c8 <__assert_fail@plt+0x1f44>
   1335c:	b	13360 <__assert_fail@plt+0x1fdc>
   13360:	b	13364 <__assert_fail@plt+0x1fe0>
   13364:	b	13368 <__assert_fail@plt+0x1fe4>
   13368:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1336c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13370:	ldr	r2, [sp, #116]	; 0x74
   13374:	ldr	r3, [r2, #112]	; 0x70
   13378:	ldr	r2, [r2, #116]	; 0x74
   1337c:	umull	ip, lr, r0, r3
   13380:	mla	r0, r0, r2, lr
   13384:	mla	r0, r1, r3, r0
   13388:	str	ip, [sp, #120]	; 0x78
   1338c:	str	r0, [sp, #124]	; 0x7c
   13390:	ldr	r0, [sp, #120]	; 0x78
   13394:	ldr	r1, [sp, #124]	; 0x7c
   13398:	ldr	r2, [sp, #116]	; 0x74
   1339c:	ldr	r3, [r2, #120]	; 0x78
   133a0:	ldr	r2, [r2, #124]	; 0x7c
   133a4:	subs	r0, r3, r0
   133a8:	sbcs	r1, r2, r1
   133ac:	str	r0, [sp, #24]
   133b0:	str	r1, [sp, #20]
   133b4:	bcs	133c0 <__assert_fail@plt+0x203c>
   133b8:	b	133bc <__assert_fail@plt+0x2038>
   133bc:	b	133fc <__assert_fail@plt+0x2078>
   133c0:	ldr	r0, [sp, #120]	; 0x78
   133c4:	ldr	r1, [sp, #124]	; 0x7c
   133c8:	str	r1, [fp, #-28]	; 0xffffffe4
   133cc:	str	r0, [fp, #-32]	; 0xffffffe0
   133d0:	ldr	r0, [fp, #16]
   133d4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   133d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   133dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   133e0:	add	r1, r1, #1
   133e4:	mov	ip, sp
   133e8:	mov	lr, #7
   133ec:	str	lr, [ip, #4]
   133f0:	str	r1, [ip]
   133f4:	bl	16b0c <__assert_fail@plt+0x5788>
   133f8:	b	13368 <__assert_fail@plt+0x1fe4>
   133fc:	b	13400 <__assert_fail@plt+0x207c>
   13400:	ldr	r0, [fp, #-84]	; 0xffffffac
   13404:	movw	r1, #29747	; 0x7433
   13408:	movt	r1, #3
   1340c:	ldrb	r0, [r1, r0]
   13410:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13414:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13418:	adds	r0, r1, r0
   1341c:	adc	r1, r2, #0
   13420:	str	r0, [fp, #-80]	; 0xffffffb0
   13424:	str	r1, [fp, #-76]	; 0xffffffb4
   13428:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1342c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13430:	umull	r2, r3, r0, r0
   13434:	mla	r3, r0, r1, r3
   13438:	mla	r0, r0, r1, r3
   1343c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13444:	subs	r1, r1, r2
   13448:	sbcs	r0, r3, r0
   1344c:	str	r1, [sp, #16]
   13450:	str	r0, [sp, #12]
   13454:	bcs	13460 <__assert_fail@plt+0x20dc>
   13458:	b	1345c <__assert_fail@plt+0x20d8>
   1345c:	b	13474 <__assert_fail@plt+0x20f0>
   13460:	b	13464 <__assert_fail@plt+0x20e0>
   13464:	ldr	r0, [fp, #-84]	; 0xffffffac
   13468:	add	r0, r0, #8
   1346c:	str	r0, [fp, #-84]	; 0xffffffac
   13470:	b	12ee4 <__assert_fail@plt+0x1b60>
   13474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1347c:	sub	sp, fp, #8
   13480:	pop	{r4, sl, fp, pc}
   13484:	push	{r4, r5, r6, sl, fp, lr}
   13488:	add	fp, sp, #16
   1348c:	sub	sp, sp, #856	; 0x358
   13490:	str	r0, [fp, #-32]	; 0xffffffe0
   13494:	str	r1, [fp, #-28]	; 0xffffffe4
   13498:	str	r3, [fp, #-36]	; 0xffffffdc
   1349c:	str	r2, [fp, #-40]	; 0xffffffd8
   134a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134a8:	orr	r0, r0, r1
   134ac:	cmp	r0, #0
   134b0:	bne	134d0 <__assert_fail@plt+0x214c>
   134b4:	b	134b8 <__assert_fail@plt+0x2134>
   134b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   134bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   134c0:	bl	16bb0 <__assert_fail@plt+0x582c>
   134c4:	and	r0, r0, #1
   134c8:	strb	r0, [fp, #-17]	; 0xffffffef
   134cc:	b	145f4 <__assert_fail@plt+0x3270>
   134d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   134dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   134e0:	orr	r2, r2, r3
   134e4:	subs	r3, r0, #1
   134e8:	sbc	ip, r1, #0
   134ec:	cmp	r2, #0
   134f0:	moveq	r0, r3
   134f4:	cmp	r2, #0
   134f8:	moveq	r1, ip
   134fc:	str	r0, [fp, #-64]	; 0xffffffc0
   13500:	str	r1, [fp, #-60]	; 0xffffffc4
   13504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13508:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1350c:	subs	r0, r0, #1
   13510:	sbc	r1, r1, #0
   13514:	str	r0, [fp, #-72]	; 0xffffffb8
   13518:	str	r1, [fp, #-68]	; 0xffffffbc
   1351c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13520:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13524:	orr	r0, r0, r1
   13528:	cmp	r0, #0
   1352c:	bne	135e4 <__assert_fail@plt+0x2260>
   13530:	b	13534 <__assert_fail@plt+0x21b0>
   13534:	b	13538 <__assert_fail@plt+0x21b4>
   13538:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1353c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13540:	str	r1, [fp, #-396]	; 0xfffffe74
   13544:	str	r0, [fp, #-400]	; 0xfffffe70
   13548:	movw	r0, #0
   1354c:	str	r0, [fp, #-404]	; 0xfffffe6c
   13550:	ldrb	r0, [fp, #-400]	; 0xfffffe70
   13554:	tst	r0, #1
   13558:	bne	13588 <__assert_fail@plt+0x2204>
   1355c:	b	13560 <__assert_fail@plt+0x21dc>
   13560:	ldr	r0, [fp, #-400]	; 0xfffffe70
   13564:	ldr	r1, [fp, #-396]	; 0xfffffe74
   13568:	lsrs	r1, r1, #1
   1356c:	rrx	r0, r0
   13570:	str	r1, [fp, #-396]	; 0xfffffe74
   13574:	str	r0, [fp, #-400]	; 0xfffffe70
   13578:	ldr	r0, [fp, #-404]	; 0xfffffe6c
   1357c:	add	r0, r0, #1
   13580:	str	r0, [fp, #-404]	; 0xfffffe6c
   13584:	b	13550 <__assert_fail@plt+0x21cc>
   13588:	ldr	r0, [fp, #-404]	; 0xfffffe6c
   1358c:	str	r0, [fp, #-132]	; 0xffffff7c
   13590:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13594:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13598:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1359c:	lsr	r0, r0, r2
   135a0:	rsb	r3, r2, #32
   135a4:	orr	r0, r0, r1, lsl r3
   135a8:	sub	r3, r2, #32
   135ac:	cmp	r3, #0
   135b0:	lsrge	r0, r1, r3
   135b4:	lsr	r1, r1, r2
   135b8:	cmp	r3, #0
   135bc:	movwge	r1, #0
   135c0:	str	r1, [fp, #-52]	; 0xffffffcc
   135c4:	str	r0, [fp, #-56]	; 0xffffffc8
   135c8:	mov	r0, #0
   135cc:	str	r0, [fp, #-44]	; 0xffffffd4
   135d0:	str	r0, [fp, #-48]	; 0xffffffd0
   135d4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   135d8:	add	r0, r0, #64	; 0x40
   135dc:	str	r0, [fp, #-132]	; 0xffffff7c
   135e0:	b	136ec <__assert_fail@plt+0x2368>
   135e4:	b	135e8 <__assert_fail@plt+0x2264>
   135e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   135ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   135f0:	str	r1, [fp, #-412]	; 0xfffffe64
   135f4:	str	r0, [fp, #-416]	; 0xfffffe60
   135f8:	movw	r0, #0
   135fc:	str	r0, [fp, #-420]	; 0xfffffe5c
   13600:	ldrb	r0, [fp, #-416]	; 0xfffffe60
   13604:	tst	r0, #1
   13608:	bne	13638 <__assert_fail@plt+0x22b4>
   1360c:	b	13610 <__assert_fail@plt+0x228c>
   13610:	ldr	r0, [fp, #-416]	; 0xfffffe60
   13614:	ldr	r1, [fp, #-412]	; 0xfffffe64
   13618:	lsrs	r1, r1, #1
   1361c:	rrx	r0, r0
   13620:	str	r1, [fp, #-412]	; 0xfffffe64
   13624:	str	r0, [fp, #-416]	; 0xfffffe60
   13628:	ldr	r0, [fp, #-420]	; 0xfffffe5c
   1362c:	add	r0, r0, #1
   13630:	str	r0, [fp, #-420]	; 0xfffffe5c
   13634:	b	13600 <__assert_fail@plt+0x227c>
   13638:	ldr	r0, [fp, #-420]	; 0xfffffe5c
   1363c:	str	r0, [fp, #-132]	; 0xffffff7c
   13640:	b	13644 <__assert_fail@plt+0x22c0>
   13644:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13648:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1364c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13650:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13654:	ldr	ip, [fp, #-132]	; 0xffffff7c
   13658:	rsb	lr, ip, #64	; 0x40
   1365c:	lsl	r4, r2, lr
   13660:	rsb	r5, ip, #32
   13664:	cmp	r5, #0
   13668:	movwge	r4, #0
   1366c:	rsb	r6, lr, #32
   13670:	lsr	r6, r2, r6
   13674:	orr	r3, r6, r3, lsl lr
   13678:	cmp	r5, #0
   1367c:	lslge	r3, r2, r5
   13680:	lsr	r0, r0, ip
   13684:	orr	r0, r0, r1, lsl r5
   13688:	sub	r2, ip, #32
   1368c:	cmp	r2, #0
   13690:	lsrge	r0, r1, r2
   13694:	lsr	r1, r1, ip
   13698:	cmp	r2, #0
   1369c:	movwge	r1, #0
   136a0:	orr	r1, r3, r1
   136a4:	orr	r0, r4, r0
   136a8:	str	r0, [fp, #-56]	; 0xffffffc8
   136ac:	str	r1, [fp, #-52]	; 0xffffffcc
   136b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   136b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   136b8:	ldr	r2, [fp, #-132]	; 0xffffff7c
   136bc:	lsr	r0, r0, r2
   136c0:	rsb	r3, r2, #32
   136c4:	orr	r0, r0, r1, lsl r3
   136c8:	sub	r3, r2, #32
   136cc:	cmp	r3, #0
   136d0:	lsrge	r0, r1, r3
   136d4:	lsr	r1, r1, r2
   136d8:	cmp	r3, #0
   136dc:	movwge	r1, #0
   136e0:	str	r1, [fp, #-44]	; 0xffffffd4
   136e4:	str	r0, [fp, #-48]	; 0xffffffd0
   136e8:	b	136ec <__assert_fail@plt+0x2368>
   136ec:	mov	r0, #0
   136f0:	str	r0, [fp, #-428]	; 0xfffffe54
   136f4:	mov	r0, #2
   136f8:	str	r0, [fp, #-432]	; 0xfffffe50
   136fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13700:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13704:	str	r1, [sp, #436]	; 0x1b4
   13708:	str	r0, [sp, #432]	; 0x1b0
   1370c:	ldr	r0, [sp, #432]	; 0x1b0
   13710:	ldr	r1, [sp, #436]	; 0x1b4
   13714:	lsrs	r1, r1, #1
   13718:	rrx	r0, r0
   1371c:	and	r0, r0, #127	; 0x7f
   13720:	movw	r2, #30422	; 0x76d6
   13724:	movt	r2, #3
   13728:	ldrb	r0, [r2, r0]
   1372c:	mov	r2, #0
   13730:	str	r2, [sp, #428]	; 0x1ac
   13734:	str	r0, [sp, #424]	; 0x1a8
   13738:	ldr	r0, [sp, #424]	; 0x1a8
   1373c:	ldr	r2, [sp, #428]	; 0x1ac
   13740:	lsl	r3, r2, #1
   13744:	orr	r3, r3, r0, lsr #31
   13748:	umull	ip, lr, r0, r0
   1374c:	mla	lr, r0, r2, lr
   13750:	mla	r2, r0, r2, lr
   13754:	ldr	lr, [sp, #432]	; 0x1b0
   13758:	ldr	r4, [sp, #436]	; 0x1b4
   1375c:	umull	r5, r6, ip, lr
   13760:	mla	ip, ip, r4, r6
   13764:	mla	r2, r2, lr, ip
   13768:	rsbs	r0, r5, r0, lsl #1
   1376c:	sbc	r2, r3, r2
   13770:	str	r0, [sp, #424]	; 0x1a8
   13774:	str	r2, [sp, #428]	; 0x1ac
   13778:	ldr	r0, [sp, #424]	; 0x1a8
   1377c:	ldr	r2, [sp, #428]	; 0x1ac
   13780:	lsl	r3, r2, #1
   13784:	orr	r3, r3, r0, lsr #31
   13788:	umull	ip, lr, r0, r0
   1378c:	mla	lr, r0, r2, lr
   13790:	mla	r2, r0, r2, lr
   13794:	ldr	lr, [sp, #432]	; 0x1b0
   13798:	ldr	r4, [sp, #436]	; 0x1b4
   1379c:	umull	r5, r6, ip, lr
   137a0:	mla	ip, ip, r4, r6
   137a4:	mla	r2, r2, lr, ip
   137a8:	rsbs	r0, r5, r0, lsl #1
   137ac:	sbc	r2, r3, r2
   137b0:	str	r0, [sp, #424]	; 0x1a8
   137b4:	str	r2, [sp, #428]	; 0x1ac
   137b8:	ldr	r0, [sp, #424]	; 0x1a8
   137bc:	ldr	r2, [sp, #428]	; 0x1ac
   137c0:	lsl	r3, r2, #1
   137c4:	orr	r3, r3, r0, lsr #31
   137c8:	umull	ip, lr, r0, r0
   137cc:	mla	lr, r0, r2, lr
   137d0:	mla	r2, r0, r2, lr
   137d4:	ldr	lr, [sp, #432]	; 0x1b0
   137d8:	ldr	r4, [sp, #436]	; 0x1b4
   137dc:	umull	r5, r6, ip, lr
   137e0:	mla	ip, ip, r4, r6
   137e4:	mla	r2, r2, lr, ip
   137e8:	rsbs	r0, r5, r0, lsl #1
   137ec:	sbc	r2, r3, r2
   137f0:	str	r0, [sp, #424]	; 0x1a8
   137f4:	str	r2, [sp, #428]	; 0x1ac
   137f8:	ldr	r0, [sp, #424]	; 0x1a8
   137fc:	ldr	r2, [sp, #428]	; 0x1ac
   13800:	str	r2, [fp, #-124]	; 0xffffff84
   13804:	str	r0, [fp, #-128]	; 0xffffff80
   13808:	str	r1, [sp, #156]	; 0x9c
   1380c:	b	13810 <__assert_fail@plt+0x248c>
   13810:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13814:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13818:	subs	r0, r0, #2
   1381c:	sbcs	r1, r1, #0
   13820:	str	r0, [sp, #152]	; 0x98
   13824:	str	r1, [sp, #148]	; 0x94
   13828:	bcc	13858 <__assert_fail@plt+0x24d4>
   1382c:	b	13830 <__assert_fail@plt+0x24ac>
   13830:	mov	r0, #0
   13834:	str	r0, [sp, #420]	; 0x1a4
   13838:	mov	r1, #1
   1383c:	str	r1, [sp, #416]	; 0x1a0
   13840:	str	r0, [sp, #412]	; 0x19c
   13844:	str	r0, [sp, #408]	; 0x198
   13848:	str	r0, [sp, #404]	; 0x194
   1384c:	mov	r0, #64	; 0x40
   13850:	str	r0, [sp, #400]	; 0x190
   13854:	b	1387c <__assert_fail@plt+0x24f8>
   13858:	mov	r0, #0
   1385c:	str	r0, [sp, #420]	; 0x1a4
   13860:	str	r0, [sp, #416]	; 0x1a0
   13864:	str	r0, [sp, #412]	; 0x19c
   13868:	mov	r1, #1
   1386c:	str	r1, [sp, #408]	; 0x198
   13870:	str	r0, [sp, #404]	; 0x194
   13874:	mov	r0, #128	; 0x80
   13878:	str	r0, [sp, #400]	; 0x190
   1387c:	b	13880 <__assert_fail@plt+0x24fc>
   13880:	ldr	r0, [sp, #400]	; 0x190
   13884:	ldr	r1, [sp, #404]	; 0x194
   13888:	subs	r2, r0, #1
   1388c:	sbc	r3, r1, #0
   13890:	str	r2, [sp, #400]	; 0x190
   13894:	str	r3, [sp, #404]	; 0x194
   13898:	orr	r0, r0, r1
   1389c:	cmp	r0, #0
   138a0:	beq	139f4 <__assert_fail@plt+0x2670>
   138a4:	b	138a8 <__assert_fail@plt+0x2524>
   138a8:	b	138ac <__assert_fail@plt+0x2528>
   138ac:	ldr	r0, [sp, #416]	; 0x1a0
   138b0:	ldr	r1, [sp, #420]	; 0x1a4
   138b4:	lsl	r1, r1, #1
   138b8:	orr	r1, r1, r0, lsr #31
   138bc:	lsl	r0, r0, #1
   138c0:	ldr	r2, [sp, #412]	; 0x19c
   138c4:	orr	r0, r0, r2, lsr #31
   138c8:	str	r1, [sp, #420]	; 0x1a4
   138cc:	str	r0, [sp, #416]	; 0x1a0
   138d0:	ldr	r0, [sp, #408]	; 0x198
   138d4:	ldr	r1, [sp, #412]	; 0x19c
   138d8:	lsl	r1, r1, #1
   138dc:	orr	r1, r1, r0, lsr #31
   138e0:	lsl	r0, r0, #1
   138e4:	str	r0, [sp, #408]	; 0x198
   138e8:	str	r1, [sp, #412]	; 0x19c
   138ec:	ldr	r0, [sp, #416]	; 0x1a0
   138f0:	ldr	r1, [sp, #420]	; 0x1a4
   138f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   138f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   138fc:	subs	r0, r2, r0
   13900:	sbcs	r1, r3, r1
   13904:	str	r0, [sp, #144]	; 0x90
   13908:	str	r1, [sp, #140]	; 0x8c
   1390c:	bcc	13964 <__assert_fail@plt+0x25e0>
   13910:	b	13914 <__assert_fail@plt+0x2590>
   13914:	ldr	r0, [sp, #416]	; 0x1a0
   13918:	ldr	r1, [sp, #420]	; 0x1a4
   1391c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13920:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13924:	eor	r1, r1, r3
   13928:	eor	r0, r0, r2
   1392c:	orr	r0, r0, r1
   13930:	cmp	r0, #0
   13934:	bne	139f0 <__assert_fail@plt+0x266c>
   13938:	b	1393c <__assert_fail@plt+0x25b8>
   1393c:	ldr	r0, [sp, #408]	; 0x198
   13940:	ldr	r1, [sp, #412]	; 0x19c
   13944:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13948:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1394c:	subs	r0, r0, r2
   13950:	sbcs	r1, r1, r3
   13954:	str	r0, [sp, #136]	; 0x88
   13958:	str	r1, [sp, #132]	; 0x84
   1395c:	bcc	139f0 <__assert_fail@plt+0x266c>
   13960:	b	13964 <__assert_fail@plt+0x25e0>
   13964:	b	13968 <__assert_fail@plt+0x25e4>
   13968:	ldr	r0, [sp, #408]	; 0x198
   1396c:	ldr	r1, [sp, #412]	; 0x19c
   13970:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13974:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13978:	subs	r0, r0, r2
   1397c:	sbcs	r1, r1, r3
   13980:	mov	r2, #0
   13984:	mov	r3, r2
   13988:	movwcc	r3, #1
   1398c:	str	r2, [sp, #396]	; 0x18c
   13990:	str	r3, [sp, #392]	; 0x188
   13994:	ldr	r2, [sp, #408]	; 0x198
   13998:	ldr	r3, [sp, #412]	; 0x19c
   1399c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   139a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   139a4:	subs	r2, r2, ip
   139a8:	sbc	r3, r3, lr
   139ac:	str	r2, [sp, #408]	; 0x198
   139b0:	str	r3, [sp, #412]	; 0x19c
   139b4:	ldr	r2, [sp, #416]	; 0x1a0
   139b8:	ldr	r3, [sp, #420]	; 0x1a4
   139bc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   139c0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   139c4:	subs	r2, r2, ip
   139c8:	sbc	r3, r3, lr
   139cc:	ldr	ip, [sp, #392]	; 0x188
   139d0:	ldr	lr, [sp, #396]	; 0x18c
   139d4:	subs	r2, r2, ip
   139d8:	sbc	r3, r3, lr
   139dc:	str	r2, [sp, #416]	; 0x1a0
   139e0:	str	r3, [sp, #420]	; 0x1a4
   139e4:	str	r0, [sp, #128]	; 0x80
   139e8:	str	r1, [sp, #124]	; 0x7c
   139ec:	b	139f0 <__assert_fail@plt+0x266c>
   139f0:	b	13880 <__assert_fail@plt+0x24fc>
   139f4:	ldr	r0, [sp, #416]	; 0x1a0
   139f8:	ldr	r1, [sp, #420]	; 0x1a4
   139fc:	str	r1, [fp, #-92]	; 0xffffffa4
   13a00:	str	r0, [fp, #-96]	; 0xffffffa0
   13a04:	ldr	r0, [sp, #408]	; 0x198
   13a08:	ldr	r1, [sp, #412]	; 0x19c
   13a0c:	str	r1, [fp, #-100]	; 0xffffff9c
   13a10:	str	r0, [fp, #-104]	; 0xffffff98
   13a14:	b	13a18 <__assert_fail@plt+0x2694>
   13a18:	b	13a1c <__assert_fail@plt+0x2698>
   13a1c:	ldr	r0, [fp, #-104]	; 0xffffff98
   13a20:	ldr	r1, [fp, #-100]	; 0xffffff9c
   13a24:	adds	r0, r0, r0
   13a28:	adc	r1, r1, r1
   13a2c:	str	r0, [sp, #384]	; 0x180
   13a30:	str	r1, [sp, #388]	; 0x184
   13a34:	ldr	r0, [fp, #-104]	; 0xffffff98
   13a38:	ldr	r1, [fp, #-100]	; 0xffffff9c
   13a3c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13a40:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13a44:	adds	r2, r2, r2
   13a48:	adc	r3, r3, r3
   13a4c:	ldr	ip, [sp, #384]	; 0x180
   13a50:	ldr	lr, [sp, #388]	; 0x184
   13a54:	subs	r0, ip, r0
   13a58:	sbcs	r1, lr, r1
   13a5c:	mov	ip, #0
   13a60:	movwcc	ip, #1
   13a64:	adds	lr, r2, #1
   13a68:	adc	r4, r3, #0
   13a6c:	cmp	ip, #0
   13a70:	movne	r3, r4
   13a74:	cmp	ip, #0
   13a78:	movne	r2, lr
   13a7c:	str	r3, [fp, #-76]	; 0xffffffb4
   13a80:	str	r2, [fp, #-80]	; 0xffffffb0
   13a84:	ldr	r2, [sp, #384]	; 0x180
   13a88:	ldr	r3, [sp, #388]	; 0x184
   13a8c:	str	r3, [fp, #-84]	; 0xffffffac
   13a90:	str	r2, [fp, #-88]	; 0xffffffa8
   13a94:	str	r0, [sp, #120]	; 0x78
   13a98:	str	r1, [sp, #116]	; 0x74
   13a9c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13aa0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13aa4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13aa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13aac:	subs	r0, r2, r0
   13ab0:	sbcs	r1, r3, r1
   13ab4:	str	r0, [sp, #112]	; 0x70
   13ab8:	str	r1, [sp, #108]	; 0x6c
   13abc:	bcc	13b14 <__assert_fail@plt+0x2790>
   13ac0:	b	13ac4 <__assert_fail@plt+0x2740>
   13ac4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13ac8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13acc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ad4:	eor	r1, r1, r3
   13ad8:	eor	r0, r0, r2
   13adc:	orr	r0, r0, r1
   13ae0:	cmp	r0, #0
   13ae4:	bne	13ba0 <__assert_fail@plt+0x281c>
   13ae8:	b	13aec <__assert_fail@plt+0x2768>
   13aec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13af0:	ldr	r1, [fp, #-84]	; 0xffffffac
   13af4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13af8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13afc:	subs	r0, r0, r2
   13b00:	sbcs	r1, r1, r3
   13b04:	str	r0, [sp, #104]	; 0x68
   13b08:	str	r1, [sp, #100]	; 0x64
   13b0c:	bcc	13ba0 <__assert_fail@plt+0x281c>
   13b10:	b	13b14 <__assert_fail@plt+0x2790>
   13b14:	b	13b18 <__assert_fail@plt+0x2794>
   13b18:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b1c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13b20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13b24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13b28:	subs	r0, r0, r2
   13b2c:	sbcs	r1, r1, r3
   13b30:	mov	r2, #0
   13b34:	mov	r3, r2
   13b38:	movwcc	r3, #1
   13b3c:	str	r2, [sp, #380]	; 0x17c
   13b40:	str	r3, [sp, #376]	; 0x178
   13b44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13b48:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b4c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   13b50:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13b54:	subs	r2, r2, ip
   13b58:	sbc	r3, r3, lr
   13b5c:	str	r2, [fp, #-88]	; 0xffffffa8
   13b60:	str	r3, [fp, #-84]	; 0xffffffac
   13b64:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13b68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13b6c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13b70:	ldr	lr, [fp, #-28]	; 0xffffffe4
   13b74:	subs	r2, r2, ip
   13b78:	sbc	r3, r3, lr
   13b7c:	ldr	ip, [sp, #376]	; 0x178
   13b80:	ldr	lr, [sp, #380]	; 0x17c
   13b84:	subs	r2, r2, ip
   13b88:	sbc	r3, r3, lr
   13b8c:	str	r2, [fp, #-80]	; 0xffffffb0
   13b90:	str	r3, [fp, #-76]	; 0xffffffb4
   13b94:	str	r0, [sp, #96]	; 0x60
   13b98:	str	r1, [sp, #92]	; 0x5c
   13b9c:	b	13ba0 <__assert_fail@plt+0x281c>
   13ba0:	b	13ba4 <__assert_fail@plt+0x2820>
   13ba4:	sub	r0, fp, #104	; 0x68
   13ba8:	sub	r1, fp, #56	; 0x38
   13bac:	sub	r2, fp, #88	; 0x58
   13bb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13bb4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13bb8:	str	ip, [fp, #-116]	; 0xffffff8c
   13bbc:	str	r3, [fp, #-120]	; 0xffffff88
   13bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bc4:	ldr	ip, [fp, #-28]	; 0xffffffe4
   13bc8:	str	ip, [fp, #-108]	; 0xffffff94
   13bcc:	str	r3, [fp, #-112]	; 0xffffff90
   13bd0:	sub	r3, fp, #120	; 0x78
   13bd4:	ldr	ip, [fp, #-128]	; 0xffffff80
   13bd8:	ldr	lr, [fp, #-124]	; 0xffffff84
   13bdc:	ldr	r4, [fp, #-132]	; 0xffffff7c
   13be0:	mov	r5, sp
   13be4:	str	r0, [r5, #12]
   13be8:	str	r4, [r5, #8]
   13bec:	str	r1, [r5, #4]
   13bf0:	str	r2, [r5]
   13bf4:	mov	r0, r3
   13bf8:	mov	r2, ip
   13bfc:	mov	r3, lr
   13c00:	bl	17728 <__assert_fail@plt+0x63a4>
   13c04:	tst	r0, #1
   13c08:	bne	13c1c <__assert_fail@plt+0x2898>
   13c0c:	movw	r0, #0
   13c10:	and	r0, r0, #1
   13c14:	strb	r0, [fp, #-17]	; 0xffffffef
   13c18:	b	145f4 <__assert_fail@plt+0x3270>
   13c1c:	movw	r0, #41240	; 0xa118
   13c20:	movt	r0, #4
   13c24:	ldrb	r0, [r0]
   13c28:	tst	r0, #1
   13c2c:	beq	13c50 <__assert_fail@plt+0x28cc>
   13c30:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13c34:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13c38:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13c3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13c40:	mov	ip, sp
   13c44:	sub	lr, fp, #392	; 0x188
   13c48:	str	lr, [ip]
   13c4c:	bl	12744 <__assert_fail@plt+0x13c0>
   13c50:	movw	r0, #0
   13c54:	str	r0, [sp, #372]	; 0x174
   13c58:	ldr	r0, [sp, #372]	; 0x174
   13c5c:	cmp	r0, #668	; 0x29c
   13c60:	bcs	145cc <__assert_fail@plt+0x3248>
   13c64:	movw	r0, #41240	; 0xa118
   13c68:	movt	r0, #4
   13c6c:	ldrb	r0, [r0]
   13c70:	tst	r0, #1
   13c74:	beq	142f0 <__assert_fail@plt+0x2f6c>
   13c78:	mov	r0, #1
   13c7c:	strb	r0, [sp, #371]	; 0x173
   13c80:	ldr	r0, [fp, #-384]	; 0xfffffe80
   13c84:	ldr	r1, [fp, #-380]	; 0xfffffe84
   13c88:	orr	r0, r0, r1
   13c8c:	cmp	r0, #0
   13c90:	beq	13e7c <__assert_fail@plt+0x2af8>
   13c94:	b	13c98 <__assert_fail@plt+0x2914>
   13c98:	b	13c9c <__assert_fail@plt+0x2918>
   13c9c:	ldr	r0, [fp, #-392]	; 0xfffffe78
   13ca0:	ldr	r1, [fp, #-388]	; 0xfffffe7c
   13ca4:	str	r1, [sp, #324]	; 0x144
   13ca8:	str	r0, [sp, #320]	; 0x140
   13cac:	ldr	r0, [sp, #320]	; 0x140
   13cb0:	ldr	r1, [sp, #324]	; 0x144
   13cb4:	lsrs	r1, r1, #1
   13cb8:	rrx	r0, r0
   13cbc:	and	r0, r0, #127	; 0x7f
   13cc0:	movw	r2, #30422	; 0x76d6
   13cc4:	movt	r2, #3
   13cc8:	ldrb	r0, [r2, r0]
   13ccc:	mov	r2, #0
   13cd0:	str	r2, [sp, #316]	; 0x13c
   13cd4:	str	r0, [sp, #312]	; 0x138
   13cd8:	ldr	r0, [sp, #312]	; 0x138
   13cdc:	ldr	r2, [sp, #316]	; 0x13c
   13ce0:	lsl	r3, r2, #1
   13ce4:	orr	r3, r3, r0, lsr #31
   13ce8:	umull	ip, lr, r0, r0
   13cec:	mla	lr, r0, r2, lr
   13cf0:	mla	r2, r0, r2, lr
   13cf4:	ldr	lr, [sp, #320]	; 0x140
   13cf8:	ldr	r4, [sp, #324]	; 0x144
   13cfc:	umull	r5, r6, ip, lr
   13d00:	mla	ip, ip, r4, r6
   13d04:	mla	r2, r2, lr, ip
   13d08:	rsbs	r0, r5, r0, lsl #1
   13d0c:	sbc	r2, r3, r2
   13d10:	str	r0, [sp, #312]	; 0x138
   13d14:	str	r2, [sp, #316]	; 0x13c
   13d18:	ldr	r0, [sp, #312]	; 0x138
   13d1c:	ldr	r2, [sp, #316]	; 0x13c
   13d20:	lsl	r3, r2, #1
   13d24:	orr	r3, r3, r0, lsr #31
   13d28:	umull	ip, lr, r0, r0
   13d2c:	mla	lr, r0, r2, lr
   13d30:	mla	r2, r0, r2, lr
   13d34:	ldr	lr, [sp, #320]	; 0x140
   13d38:	ldr	r4, [sp, #324]	; 0x144
   13d3c:	umull	r5, r6, ip, lr
   13d40:	mla	ip, ip, r4, r6
   13d44:	mla	r2, r2, lr, ip
   13d48:	rsbs	r0, r5, r0, lsl #1
   13d4c:	sbc	r2, r3, r2
   13d50:	str	r0, [sp, #312]	; 0x138
   13d54:	str	r2, [sp, #316]	; 0x13c
   13d58:	ldr	r0, [sp, #312]	; 0x138
   13d5c:	ldr	r2, [sp, #316]	; 0x13c
   13d60:	lsl	r3, r2, #1
   13d64:	orr	r3, r3, r0, lsr #31
   13d68:	umull	ip, lr, r0, r0
   13d6c:	mla	lr, r0, r2, lr
   13d70:	mla	r2, r0, r2, lr
   13d74:	ldr	lr, [sp, #320]	; 0x140
   13d78:	ldr	r4, [sp, #324]	; 0x144
   13d7c:	umull	r5, r6, ip, lr
   13d80:	mla	ip, ip, r4, r6
   13d84:	mla	r2, r2, lr, ip
   13d88:	rsbs	r0, r5, r0, lsl #1
   13d8c:	sbc	r2, r3, r2
   13d90:	str	r0, [sp, #312]	; 0x138
   13d94:	str	r2, [sp, #316]	; 0x13c
   13d98:	ldr	r0, [sp, #312]	; 0x138
   13d9c:	ldr	r2, [sp, #316]	; 0x13c
   13da0:	str	r2, [sp, #332]	; 0x14c
   13da4:	str	r0, [sp, #328]	; 0x148
   13da8:	str	r1, [sp, #88]	; 0x58
   13dac:	ldr	r0, [sp, #328]	; 0x148
   13db0:	ldr	r1, [sp, #332]	; 0x14c
   13db4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13db8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13dbc:	umull	ip, lr, r0, r2
   13dc0:	mla	r0, r0, r3, lr
   13dc4:	mla	r0, r1, r2, r0
   13dc8:	str	ip, [sp, #352]	; 0x160
   13dcc:	str	r0, [sp, #356]	; 0x164
   13dd0:	mov	r0, #0
   13dd4:	str	r0, [sp, #364]	; 0x16c
   13dd8:	str	r0, [sp, #360]	; 0x168
   13ddc:	add	r0, sp, #336	; 0x150
   13de0:	add	r0, r0, #8
   13de4:	ldr	r1, [fp, #-128]	; 0xffffff80
   13de8:	ldr	r2, [fp, #-124]	; 0xffffff84
   13dec:	mov	r3, sp
   13df0:	sub	ip, fp, #104	; 0x68
   13df4:	str	ip, [r3, #8]
   13df8:	str	r2, [r3, #4]
   13dfc:	str	r1, [r3]
   13e00:	sub	r1, fp, #88	; 0x58
   13e04:	add	r2, sp, #352	; 0x160
   13e08:	sub	r3, fp, #120	; 0x78
   13e0c:	bl	17ac0 <__assert_fail@plt+0x673c>
   13e10:	str	r1, [sp, #340]	; 0x154
   13e14:	str	r0, [sp, #336]	; 0x150
   13e18:	ldr	r0, [sp, #336]	; 0x150
   13e1c:	ldr	r1, [sp, #340]	; 0x154
   13e20:	ldr	r2, [fp, #-104]	; 0xffffff98
   13e24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13e28:	eor	r1, r1, r3
   13e2c:	eor	r0, r0, r2
   13e30:	orr	r0, r0, r1
   13e34:	mov	r1, #1
   13e38:	cmp	r0, #0
   13e3c:	str	r1, [sp, #84]	; 0x54
   13e40:	bne	13e70 <__assert_fail@plt+0x2aec>
   13e44:	b	13e48 <__assert_fail@plt+0x2ac4>
   13e48:	ldr	r0, [sp, #344]	; 0x158
   13e4c:	ldr	r1, [sp, #348]	; 0x15c
   13e50:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13e54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13e58:	eor	r1, r1, r3
   13e5c:	eor	r0, r0, r2
   13e60:	orr	r0, r0, r1
   13e64:	cmp	r0, #0
   13e68:	movwne	r0, #1
   13e6c:	str	r0, [sp, #84]	; 0x54
   13e70:	ldr	r0, [sp, #84]	; 0x54
   13e74:	and	r0, r0, #1
   13e78:	strb	r0, [sp, #371]	; 0x173
   13e7c:	movw	r0, #0
   13e80:	str	r0, [sp, #308]	; 0x134
   13e84:	ldr	r0, [sp, #308]	; 0x134
   13e88:	ldrb	r1, [fp, #-142]	; 0xffffff72
   13e8c:	cmp	r0, r1
   13e90:	movw	r0, #0
   13e94:	str	r0, [sp, #80]	; 0x50
   13e98:	bcs	13ea4 <__assert_fail@plt+0x2b20>
   13e9c:	ldrb	r0, [sp, #371]	; 0x173
   13ea0:	str	r0, [sp, #80]	; 0x50
   13ea4:	ldr	r0, [sp, #80]	; 0x50
   13ea8:	tst	r0, #1
   13eac:	beq	142ec <__assert_fail@plt+0x2f68>
   13eb0:	ldr	r0, [sp, #308]	; 0x134
   13eb4:	sub	r1, fp, #392	; 0x188
   13eb8:	add	r0, r1, r0, lsl #3
   13ebc:	ldr	r1, [r0, #16]
   13ec0:	ldr	r0, [r0, #20]
   13ec4:	eor	r1, r1, #2
   13ec8:	orr	r0, r1, r0
   13ecc:	cmp	r0, #0
   13ed0:	bne	13f18 <__assert_fail@plt+0x2b94>
   13ed4:	b	13ed8 <__assert_fail@plt+0x2b54>
   13ed8:	b	13edc <__assert_fail@plt+0x2b58>
   13edc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13ee0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13ee4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13ee8:	lsrs	r1, r1, #1
   13eec:	rrx	r0, r0
   13ef0:	orr	r1, r1, r2, lsl #31
   13ef4:	str	r0, [sp, #352]	; 0x160
   13ef8:	str	r1, [sp, #356]	; 0x164
   13efc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13f00:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13f04:	lsrs	r1, r1, #1
   13f08:	rrx	r0, r0
   13f0c:	str	r1, [sp, #364]	; 0x16c
   13f10:	str	r0, [sp, #360]	; 0x168
   13f14:	b	1423c <__assert_fail@plt+0x2eb8>
   13f18:	b	13f1c <__assert_fail@plt+0x2b98>
   13f1c:	b	13f20 <__assert_fail@plt+0x2b9c>
   13f20:	ldr	r0, [sp, #308]	; 0x134
   13f24:	sub	r1, fp, #392	; 0x188
   13f28:	add	r0, r1, r0, lsl #3
   13f2c:	ldr	r1, [r0, #16]
   13f30:	ldr	r0, [r0, #20]
   13f34:	str	r0, [sp, #284]	; 0x11c
   13f38:	str	r1, [sp, #280]	; 0x118
   13f3c:	ldr	r0, [sp, #280]	; 0x118
   13f40:	ldr	r1, [sp, #284]	; 0x11c
   13f44:	lsrs	r1, r1, #1
   13f48:	rrx	r0, r0
   13f4c:	and	r0, r0, #127	; 0x7f
   13f50:	movw	r2, #30422	; 0x76d6
   13f54:	movt	r2, #3
   13f58:	ldrb	r0, [r2, r0]
   13f5c:	mov	r2, #0
   13f60:	str	r2, [sp, #276]	; 0x114
   13f64:	str	r0, [sp, #272]	; 0x110
   13f68:	ldr	r0, [sp, #272]	; 0x110
   13f6c:	ldr	r2, [sp, #276]	; 0x114
   13f70:	lsl	r3, r2, #1
   13f74:	orr	r3, r3, r0, lsr #31
   13f78:	umull	ip, lr, r0, r0
   13f7c:	mla	lr, r0, r2, lr
   13f80:	mla	r2, r0, r2, lr
   13f84:	ldr	lr, [sp, #280]	; 0x118
   13f88:	ldr	r4, [sp, #284]	; 0x11c
   13f8c:	umull	r5, r6, ip, lr
   13f90:	mla	ip, ip, r4, r6
   13f94:	mla	r2, r2, lr, ip
   13f98:	rsbs	r0, r5, r0, lsl #1
   13f9c:	sbc	r2, r3, r2
   13fa0:	str	r0, [sp, #272]	; 0x110
   13fa4:	str	r2, [sp, #276]	; 0x114
   13fa8:	ldr	r0, [sp, #272]	; 0x110
   13fac:	ldr	r2, [sp, #276]	; 0x114
   13fb0:	lsl	r3, r2, #1
   13fb4:	orr	r3, r3, r0, lsr #31
   13fb8:	umull	ip, lr, r0, r0
   13fbc:	mla	lr, r0, r2, lr
   13fc0:	mla	r2, r0, r2, lr
   13fc4:	ldr	lr, [sp, #280]	; 0x118
   13fc8:	ldr	r4, [sp, #284]	; 0x11c
   13fcc:	umull	r5, r6, ip, lr
   13fd0:	mla	ip, ip, r4, r6
   13fd4:	mla	r2, r2, lr, ip
   13fd8:	rsbs	r0, r5, r0, lsl #1
   13fdc:	sbc	r2, r3, r2
   13fe0:	str	r0, [sp, #272]	; 0x110
   13fe4:	str	r2, [sp, #276]	; 0x114
   13fe8:	ldr	r0, [sp, #272]	; 0x110
   13fec:	ldr	r2, [sp, #276]	; 0x114
   13ff0:	lsl	r3, r2, #1
   13ff4:	orr	r3, r3, r0, lsr #31
   13ff8:	umull	ip, lr, r0, r0
   13ffc:	mla	lr, r0, r2, lr
   14000:	mla	r2, r0, r2, lr
   14004:	ldr	lr, [sp, #280]	; 0x118
   14008:	ldr	r4, [sp, #284]	; 0x11c
   1400c:	umull	r5, r6, ip, lr
   14010:	mla	ip, ip, r4, r6
   14014:	mla	r2, r2, lr, ip
   14018:	rsbs	r0, r5, r0, lsl #1
   1401c:	sbc	r2, r3, r2
   14020:	str	r0, [sp, #272]	; 0x110
   14024:	str	r2, [sp, #276]	; 0x114
   14028:	ldr	r0, [sp, #272]	; 0x110
   1402c:	ldr	r2, [sp, #276]	; 0x114
   14030:	str	r2, [sp, #300]	; 0x12c
   14034:	str	r0, [sp, #296]	; 0x128
   14038:	str	r1, [sp, #76]	; 0x4c
   1403c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14040:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14044:	ldr	r2, [sp, #296]	; 0x128
   14048:	ldr	r3, [sp, #300]	; 0x12c
   1404c:	umull	ip, lr, r0, r2
   14050:	mla	r0, r0, r3, lr
   14054:	mla	r0, r1, r2, r0
   14058:	str	ip, [sp, #288]	; 0x120
   1405c:	str	r0, [sp, #292]	; 0x124
   14060:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14064:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14068:	ldr	r2, [sp, #308]	; 0x134
   1406c:	sub	r3, fp, #392	; 0x188
   14070:	add	r2, r3, r2, lsl #3
   14074:	ldr	r3, [r2, #16]
   14078:	ldr	r2, [r2, #20]
   1407c:	subs	r0, r0, r3
   14080:	sbcs	r1, r1, r2
   14084:	str	r0, [sp, #72]	; 0x48
   14088:	str	r1, [sp, #68]	; 0x44
   1408c:	bcc	14218 <__assert_fail@plt+0x2e94>
   14090:	b	14094 <__assert_fail@plt+0x2d10>
   14094:	b	14098 <__assert_fail@plt+0x2d14>
   14098:	ldr	r0, [sp, #288]	; 0x120
   1409c:	ldr	r1, [sp, #292]	; 0x124
   140a0:	str	r1, [sp, #204]	; 0xcc
   140a4:	str	r0, [sp, #200]	; 0xc8
   140a8:	ldr	r0, [sp, #308]	; 0x134
   140ac:	sub	r1, fp, #392	; 0x188
   140b0:	add	r0, r1, r0, lsl #3
   140b4:	ldr	r1, [r0, #16]
   140b8:	ldr	r0, [r0, #20]
   140bc:	str	r0, [sp, #196]	; 0xc4
   140c0:	str	r1, [sp, #192]	; 0xc0
   140c4:	ldr	r0, [sp, #200]	; 0xc8
   140c8:	str	r0, [sp, #220]	; 0xdc
   140cc:	ldr	r0, [sp, #204]	; 0xcc
   140d0:	str	r0, [sp, #212]	; 0xd4
   140d4:	ldr	r0, [sp, #192]	; 0xc0
   140d8:	str	r0, [sp, #216]	; 0xd8
   140dc:	ldr	r0, [sp, #196]	; 0xc4
   140e0:	str	r0, [sp, #208]	; 0xd0
   140e4:	ldr	r0, [sp, #220]	; 0xdc
   140e8:	ldr	r1, [sp, #216]	; 0xd8
   140ec:	umull	r0, r1, r0, r1
   140f0:	str	r1, [sp, #252]	; 0xfc
   140f4:	str	r0, [sp, #248]	; 0xf8
   140f8:	ldr	r0, [sp, #220]	; 0xdc
   140fc:	ldr	r1, [sp, #208]	; 0xd0
   14100:	umull	r0, r1, r0, r1
   14104:	str	r1, [sp, #244]	; 0xf4
   14108:	str	r0, [sp, #240]	; 0xf0
   1410c:	ldr	r0, [sp, #212]	; 0xd4
   14110:	ldr	r1, [sp, #216]	; 0xd8
   14114:	umull	r0, r1, r0, r1
   14118:	str	r1, [sp, #236]	; 0xec
   1411c:	str	r0, [sp, #232]	; 0xe8
   14120:	ldr	r0, [sp, #212]	; 0xd4
   14124:	ldr	r1, [sp, #208]	; 0xd0
   14128:	umull	r0, r1, r0, r1
   1412c:	str	r1, [sp, #228]	; 0xe4
   14130:	str	r0, [sp, #224]	; 0xe0
   14134:	ldr	r0, [sp, #252]	; 0xfc
   14138:	ldr	r1, [sp, #240]	; 0xf0
   1413c:	ldr	r2, [sp, #244]	; 0xf4
   14140:	adds	r0, r1, r0
   14144:	adc	r1, r2, #0
   14148:	str	r0, [sp, #240]	; 0xf0
   1414c:	str	r1, [sp, #244]	; 0xf4
   14150:	ldr	r0, [sp, #232]	; 0xe8
   14154:	ldr	r1, [sp, #236]	; 0xec
   14158:	ldr	r2, [sp, #240]	; 0xf0
   1415c:	ldr	r3, [sp, #244]	; 0xf4
   14160:	adds	r0, r2, r0
   14164:	adc	r1, r3, r1
   14168:	str	r0, [sp, #240]	; 0xf0
   1416c:	str	r1, [sp, #244]	; 0xf4
   14170:	ldr	r0, [sp, #240]	; 0xf0
   14174:	ldr	r1, [sp, #244]	; 0xf4
   14178:	ldr	r2, [sp, #232]	; 0xe8
   1417c:	ldr	r3, [sp, #236]	; 0xec
   14180:	subs	r0, r0, r2
   14184:	sbcs	r1, r1, r3
   14188:	str	r0, [sp, #64]	; 0x40
   1418c:	str	r1, [sp, #60]	; 0x3c
   14190:	bcs	141a4 <__assert_fail@plt+0x2e20>
   14194:	b	14198 <__assert_fail@plt+0x2e14>
   14198:	ldr	r0, [sp, #228]	; 0xe4
   1419c:	add	r0, r0, #1
   141a0:	str	r0, [sp, #228]	; 0xe4
   141a4:	ldr	r0, [sp, #224]	; 0xe0
   141a8:	ldr	r1, [sp, #228]	; 0xe4
   141ac:	ldr	r2, [sp, #244]	; 0xf4
   141b0:	adds	r0, r0, r2
   141b4:	adc	r1, r1, #0
   141b8:	str	r0, [sp, #264]	; 0x108
   141bc:	str	r1, [sp, #268]	; 0x10c
   141c0:	ldr	r0, [sp, #240]	; 0xf0
   141c4:	ldr	r1, [sp, #248]	; 0xf8
   141c8:	str	r0, [sp, #260]	; 0x104
   141cc:	str	r1, [sp, #256]	; 0x100
   141d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   141d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   141d8:	ldr	r2, [sp, #264]	; 0x108
   141dc:	ldr	r3, [sp, #268]	; 0x10c
   141e0:	subs	r0, r0, r2
   141e4:	sbc	r1, r1, r3
   141e8:	ldr	r2, [sp, #296]	; 0x128
   141ec:	ldr	r3, [sp, #300]	; 0x12c
   141f0:	umull	ip, lr, r0, r2
   141f4:	mla	r0, r0, r3, lr
   141f8:	mla	r0, r1, r2, r0
   141fc:	str	ip, [sp, #360]	; 0x168
   14200:	str	r0, [sp, #364]	; 0x16c
   14204:	ldr	r0, [sp, #288]	; 0x120
   14208:	ldr	r1, [sp, #292]	; 0x124
   1420c:	str	r1, [sp, #356]	; 0x164
   14210:	str	r0, [sp, #352]	; 0x160
   14214:	b	14234 <__assert_fail@plt+0x2eb0>
   14218:	ldr	r0, [sp, #288]	; 0x120
   1421c:	ldr	r1, [sp, #292]	; 0x124
   14220:	str	r1, [sp, #356]	; 0x164
   14224:	str	r0, [sp, #352]	; 0x160
   14228:	mov	r0, #0
   1422c:	str	r0, [sp, #364]	; 0x16c
   14230:	str	r0, [sp, #360]	; 0x168
   14234:	b	14238 <__assert_fail@plt+0x2eb4>
   14238:	b	1423c <__assert_fail@plt+0x2eb8>
   1423c:	add	r0, sp, #336	; 0x150
   14240:	add	r0, r0, #8
   14244:	ldr	r1, [fp, #-128]	; 0xffffff80
   14248:	ldr	r2, [fp, #-124]	; 0xffffff84
   1424c:	mov	r3, sp
   14250:	sub	ip, fp, #104	; 0x68
   14254:	str	ip, [r3, #8]
   14258:	str	r2, [r3, #4]
   1425c:	str	r1, [r3]
   14260:	sub	r1, fp, #88	; 0x58
   14264:	add	r2, sp, #352	; 0x160
   14268:	sub	r3, fp, #120	; 0x78
   1426c:	bl	17ac0 <__assert_fail@plt+0x673c>
   14270:	str	r1, [sp, #340]	; 0x154
   14274:	str	r0, [sp, #336]	; 0x150
   14278:	ldr	r0, [sp, #336]	; 0x150
   1427c:	ldr	r1, [sp, #340]	; 0x154
   14280:	ldr	r2, [fp, #-104]	; 0xffffff98
   14284:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14288:	eor	r1, r1, r3
   1428c:	eor	r0, r0, r2
   14290:	orr	r0, r0, r1
   14294:	mov	r1, #1
   14298:	cmp	r0, #0
   1429c:	str	r1, [sp, #56]	; 0x38
   142a0:	bne	142d0 <__assert_fail@plt+0x2f4c>
   142a4:	b	142a8 <__assert_fail@plt+0x2f24>
   142a8:	ldr	r0, [sp, #344]	; 0x158
   142ac:	ldr	r1, [sp, #348]	; 0x15c
   142b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   142b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   142b8:	eor	r1, r1, r3
   142bc:	eor	r0, r0, r2
   142c0:	orr	r0, r0, r1
   142c4:	cmp	r0, #0
   142c8:	movwne	r0, #1
   142cc:	str	r0, [sp, #56]	; 0x38
   142d0:	ldr	r0, [sp, #56]	; 0x38
   142d4:	and	r0, r0, #1
   142d8:	strb	r0, [sp, #371]	; 0x173
   142dc:	ldr	r0, [sp, #308]	; 0x134
   142e0:	add	r0, r0, #1
   142e4:	str	r0, [sp, #308]	; 0x134
   142e8:	b	13e84 <__assert_fail@plt+0x2b00>
   142ec:	b	14308 <__assert_fail@plt+0x2f84>
   142f0:	ldr	r0, [sp, #372]	; 0x174
   142f4:	cmp	r0, #24
   142f8:	movw	r0, #0
   142fc:	moveq	r0, #1
   14300:	and	r0, r0, #1
   14304:	strb	r0, [sp, #371]	; 0x173
   14308:	ldrb	r0, [sp, #371]	; 0x173
   1430c:	tst	r0, #1
   14310:	beq	14324 <__assert_fail@plt+0x2fa0>
   14314:	movw	r0, #1
   14318:	and	r0, r0, #1
   1431c:	strb	r0, [fp, #-17]	; 0xffffffef
   14320:	b	145f4 <__assert_fail@plt+0x3270>
   14324:	ldr	r0, [sp, #372]	; 0x174
   14328:	movw	r1, #29072	; 0x7190
   1432c:	movt	r1, #3
   14330:	ldrb	r0, [r1, r0]
   14334:	ldr	r1, [fp, #-432]	; 0xfffffe50
   14338:	ldr	r2, [fp, #-428]	; 0xfffffe54
   1433c:	adds	r0, r1, r0
   14340:	adc	r1, r2, #0
   14344:	str	r0, [fp, #-432]	; 0xfffffe50
   14348:	str	r1, [fp, #-428]	; 0xfffffe54
   1434c:	ldr	r0, [fp, #-432]	; 0xfffffe50
   14350:	ldr	r1, [fp, #-428]	; 0xfffffe54
   14354:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14358:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1435c:	subs	r0, r0, r2
   14360:	sbcs	r1, r1, r3
   14364:	str	r0, [sp, #52]	; 0x34
   14368:	str	r1, [sp, #48]	; 0x30
   1436c:	bcs	143a0 <__assert_fail@plt+0x301c>
   14370:	b	14374 <__assert_fail@plt+0x2ff0>
   14374:	ldr	r0, [fp, #-432]	; 0xfffffe50
   14378:	ldr	r1, [fp, #-428]	; 0xfffffe54
   1437c:	str	r1, [sp, #188]	; 0xbc
   14380:	str	r0, [sp, #184]	; 0xb8
   14384:	mov	r0, #0
   14388:	str	r0, [sp, #180]	; 0xb4
   1438c:	str	r0, [sp, #176]	; 0xb0
   14390:	str	r0, [sp, #172]	; 0xac
   14394:	mov	r0, #64	; 0x40
   14398:	str	r0, [sp, #168]	; 0xa8
   1439c:	b	143c8 <__assert_fail@plt+0x3044>
   143a0:	mov	r0, #0
   143a4:	str	r0, [sp, #188]	; 0xbc
   143a8:	str	r0, [sp, #184]	; 0xb8
   143ac:	ldr	r1, [fp, #-432]	; 0xfffffe50
   143b0:	ldr	r2, [fp, #-428]	; 0xfffffe54
   143b4:	str	r2, [sp, #180]	; 0xb4
   143b8:	str	r1, [sp, #176]	; 0xb0
   143bc:	str	r0, [sp, #172]	; 0xac
   143c0:	mov	r0, #128	; 0x80
   143c4:	str	r0, [sp, #168]	; 0xa8
   143c8:	b	143cc <__assert_fail@plt+0x3048>
   143cc:	ldr	r0, [sp, #168]	; 0xa8
   143d0:	ldr	r1, [sp, #172]	; 0xac
   143d4:	subs	r2, r0, #1
   143d8:	sbc	r3, r1, #0
   143dc:	str	r2, [sp, #168]	; 0xa8
   143e0:	str	r3, [sp, #172]	; 0xac
   143e4:	orr	r0, r0, r1
   143e8:	cmp	r0, #0
   143ec:	beq	14540 <__assert_fail@plt+0x31bc>
   143f0:	b	143f4 <__assert_fail@plt+0x3070>
   143f4:	b	143f8 <__assert_fail@plt+0x3074>
   143f8:	ldr	r0, [sp, #184]	; 0xb8
   143fc:	ldr	r1, [sp, #188]	; 0xbc
   14400:	lsl	r1, r1, #1
   14404:	orr	r1, r1, r0, lsr #31
   14408:	lsl	r0, r0, #1
   1440c:	ldr	r2, [sp, #180]	; 0xb4
   14410:	orr	r0, r0, r2, lsr #31
   14414:	str	r1, [sp, #188]	; 0xbc
   14418:	str	r0, [sp, #184]	; 0xb8
   1441c:	ldr	r0, [sp, #176]	; 0xb0
   14420:	ldr	r1, [sp, #180]	; 0xb4
   14424:	lsl	r1, r1, #1
   14428:	orr	r1, r1, r0, lsr #31
   1442c:	lsl	r0, r0, #1
   14430:	str	r0, [sp, #176]	; 0xb0
   14434:	str	r1, [sp, #180]	; 0xb4
   14438:	ldr	r0, [sp, #184]	; 0xb8
   1443c:	ldr	r1, [sp, #188]	; 0xbc
   14440:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14444:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14448:	subs	r0, r2, r0
   1444c:	sbcs	r1, r3, r1
   14450:	str	r0, [sp, #44]	; 0x2c
   14454:	str	r1, [sp, #40]	; 0x28
   14458:	bcc	144b0 <__assert_fail@plt+0x312c>
   1445c:	b	14460 <__assert_fail@plt+0x30dc>
   14460:	ldr	r0, [sp, #184]	; 0xb8
   14464:	ldr	r1, [sp, #188]	; 0xbc
   14468:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1446c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14470:	eor	r1, r1, r3
   14474:	eor	r0, r0, r2
   14478:	orr	r0, r0, r1
   1447c:	cmp	r0, #0
   14480:	bne	1453c <__assert_fail@plt+0x31b8>
   14484:	b	14488 <__assert_fail@plt+0x3104>
   14488:	ldr	r0, [sp, #176]	; 0xb0
   1448c:	ldr	r1, [sp, #180]	; 0xb4
   14490:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14498:	subs	r0, r0, r2
   1449c:	sbcs	r1, r1, r3
   144a0:	str	r0, [sp, #36]	; 0x24
   144a4:	str	r1, [sp, #32]
   144a8:	bcc	1453c <__assert_fail@plt+0x31b8>
   144ac:	b	144b0 <__assert_fail@plt+0x312c>
   144b0:	b	144b4 <__assert_fail@plt+0x3130>
   144b4:	ldr	r0, [sp, #176]	; 0xb0
   144b8:	ldr	r1, [sp, #180]	; 0xb4
   144bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   144c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   144c4:	subs	r0, r0, r2
   144c8:	sbcs	r1, r1, r3
   144cc:	mov	r2, #0
   144d0:	mov	r3, r2
   144d4:	movwcc	r3, #1
   144d8:	str	r2, [sp, #164]	; 0xa4
   144dc:	str	r3, [sp, #160]	; 0xa0
   144e0:	ldr	r2, [sp, #176]	; 0xb0
   144e4:	ldr	r3, [sp, #180]	; 0xb4
   144e8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   144ec:	ldr	lr, [fp, #-36]	; 0xffffffdc
   144f0:	subs	r2, r2, ip
   144f4:	sbc	r3, r3, lr
   144f8:	str	r2, [sp, #176]	; 0xb0
   144fc:	str	r3, [sp, #180]	; 0xb4
   14500:	ldr	r2, [sp, #184]	; 0xb8
   14504:	ldr	r3, [sp, #188]	; 0xbc
   14508:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1450c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14510:	subs	r2, r2, ip
   14514:	sbc	r3, r3, lr
   14518:	ldr	ip, [sp, #160]	; 0xa0
   1451c:	ldr	lr, [sp, #164]	; 0xa4
   14520:	subs	r2, r2, ip
   14524:	sbc	r3, r3, lr
   14528:	str	r2, [sp, #184]	; 0xb8
   1452c:	str	r3, [sp, #188]	; 0xbc
   14530:	str	r0, [sp, #28]
   14534:	str	r1, [sp, #24]
   14538:	b	1453c <__assert_fail@plt+0x31b8>
   1453c:	b	143cc <__assert_fail@plt+0x3048>
   14540:	ldr	r0, [sp, #184]	; 0xb8
   14544:	ldr	r1, [sp, #188]	; 0xbc
   14548:	str	r1, [fp, #-76]	; 0xffffffb4
   1454c:	str	r0, [fp, #-80]	; 0xffffffb0
   14550:	ldr	r0, [sp, #176]	; 0xb0
   14554:	ldr	r1, [sp, #180]	; 0xb4
   14558:	str	r1, [fp, #-84]	; 0xffffffac
   1455c:	str	r0, [fp, #-88]	; 0xffffffa8
   14560:	sub	r0, fp, #104	; 0x68
   14564:	sub	r1, fp, #56	; 0x38
   14568:	sub	r2, fp, #88	; 0x58
   1456c:	sub	r3, fp, #120	; 0x78
   14570:	ldr	ip, [fp, #-128]	; 0xffffff80
   14574:	ldr	lr, [fp, #-124]	; 0xffffff84
   14578:	ldr	r4, [fp, #-132]	; 0xffffff7c
   1457c:	mov	r5, sp
   14580:	str	r0, [r5, #12]
   14584:	str	r4, [r5, #8]
   14588:	str	r1, [r5, #4]
   1458c:	str	r2, [r5]
   14590:	mov	r0, r3
   14594:	mov	r2, ip
   14598:	mov	r3, lr
   1459c:	bl	17728 <__assert_fail@plt+0x63a4>
   145a0:	tst	r0, #1
   145a4:	bne	145b8 <__assert_fail@plt+0x3234>
   145a8:	movw	r0, #0
   145ac:	and	r0, r0, #1
   145b0:	strb	r0, [fp, #-17]	; 0xffffffef
   145b4:	b	145f4 <__assert_fail@plt+0x3270>
   145b8:	b	145bc <__assert_fail@plt+0x3238>
   145bc:	ldr	r0, [sp, #372]	; 0x174
   145c0:	add	r0, r0, #1
   145c4:	str	r0, [sp, #372]	; 0x174
   145c8:	b	13c58 <__assert_fail@plt+0x28d4>
   145cc:	movw	r0, #17419	; 0x440b
   145d0:	movt	r0, #3
   145d4:	bl	11264 <gettext@plt>
   145d8:	movw	lr, #0
   145dc:	str	r0, [sp, #20]
   145e0:	mov	r0, lr
   145e4:	mov	r1, lr
   145e8:	ldr	r2, [sp, #20]
   145ec:	bl	111ec <error@plt>
   145f0:	bl	1136c <abort@plt>
   145f4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   145f8:	and	r0, r0, #1
   145fc:	sub	sp, fp, #16
   14600:	pop	{r4, r5, r6, sl, fp, pc}
   14604:	push	{fp, lr}
   14608:	mov	fp, sp
   1460c:	sub	sp, sp, #32
   14610:	ldr	r1, [fp, #12]
   14614:	ldr	ip, [fp, #8]
   14618:	str	r0, [fp, #-4]
   1461c:	str	r3, [sp, #20]
   14620:	str	r2, [sp, #16]
   14624:	str	r1, [sp, #12]
   14628:	str	ip, [sp, #8]
   1462c:	ldr	r0, [sp, #16]
   14630:	ldr	r1, [sp, #20]
   14634:	orr	r0, r0, r1
   14638:	cmp	r0, #0
   1463c:	beq	146b0 <__assert_fail@plt+0x332c>
   14640:	b	14644 <__assert_fail@plt+0x32c0>
   14644:	ldr	r0, [fp, #-4]
   14648:	ldr	r1, [r0, #8]
   1464c:	ldr	r0, [r0, #12]
   14650:	orr	r0, r1, r0
   14654:	cmp	r0, #0
   14658:	bne	14664 <__assert_fail@plt+0x32e0>
   1465c:	b	14660 <__assert_fail@plt+0x32dc>
   14660:	b	14684 <__assert_fail@plt+0x3300>
   14664:	movw	r0, #17717	; 0x4535
   14668:	movt	r0, #3
   1466c:	movw	r1, #17363	; 0x43d3
   14670:	movt	r1, #3
   14674:	movw	r2, #558	; 0x22e
   14678:	movw	r3, #17741	; 0x454d
   1467c:	movt	r3, #3
   14680:	bl	11384 <__assert_fail@plt>
   14684:	ldr	r0, [sp, #8]
   14688:	ldr	r1, [sp, #12]
   1468c:	ldr	r2, [fp, #-4]
   14690:	str	r1, [r2, #4]
   14694:	str	r0, [r2]
   14698:	ldr	r0, [sp, #16]
   1469c:	ldr	r1, [sp, #20]
   146a0:	ldr	r2, [fp, #-4]
   146a4:	str	r1, [r2, #12]
   146a8:	str	r0, [r2, #8]
   146ac:	b	146cc <__assert_fail@plt+0x3348>
   146b0:	ldr	r0, [fp, #-4]
   146b4:	ldr	r2, [sp, #8]
   146b8:	ldr	r3, [sp, #12]
   146bc:	mov	r1, sp
   146c0:	mov	ip, #1
   146c4:	str	ip, [r1]
   146c8:	bl	16958 <__assert_fail@plt+0x55d4>
   146cc:	mov	sp, fp
   146d0:	pop	{fp, pc}
   146d4:	push	{r4, r5, r6, sl, fp, lr}
   146d8:	add	fp, sp, #16
   146dc:	sub	sp, sp, #376	; 0x178
   146e0:	str	r0, [fp, #-24]	; 0xffffffe8
   146e4:	str	r1, [fp, #-20]	; 0xffffffec
   146e8:	str	r2, [fp, #-28]	; 0xffffffe4
   146ec:	str	r3, [fp, #-32]	; 0xffffffe0
   146f0:	movw	r0, #1
   146f4:	str	r0, [fp, #-92]	; 0xffffffa4
   146f8:	str	r0, [fp, #-96]	; 0xffffffa0
   146fc:	b	14700 <__assert_fail@plt+0x337c>
   14700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14704:	ldr	r1, [fp, #-20]	; 0xffffffec
   14708:	subs	r0, r0, #2
   1470c:	sbcs	r1, r1, #0
   14710:	str	r0, [sp, #156]	; 0x9c
   14714:	str	r1, [sp, #152]	; 0x98
   14718:	bcc	14724 <__assert_fail@plt+0x33a0>
   1471c:	b	14720 <__assert_fail@plt+0x339c>
   14720:	b	14744 <__assert_fail@plt+0x33c0>
   14724:	movw	r0, #17469	; 0x443d
   14728:	movt	r0, #3
   1472c:	movw	r1, #17363	; 0x43d3
   14730:	movt	r1, #3
   14734:	movw	r2, #1466	; 0x5ba
   14738:	movw	r3, #17806	; 0x458e
   1473c:	movt	r3, #3
   14740:	bl	11384 <__assert_fail@plt>
   14744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14748:	ldr	r1, [fp, #-20]	; 0xffffffec
   1474c:	str	r1, [fp, #-108]	; 0xffffff94
   14750:	str	r0, [fp, #-112]	; 0xffffff90
   14754:	mov	r0, #0
   14758:	str	r0, [fp, #-116]	; 0xffffff8c
   1475c:	str	r0, [fp, #-120]	; 0xffffff88
   14760:	str	r0, [fp, #-132]	; 0xffffff7c
   14764:	mov	r1, #1
   14768:	str	r1, [fp, #-136]	; 0xffffff78
   1476c:	str	r0, [fp, #-140]	; 0xffffff74
   14770:	str	r0, [fp, #-144]	; 0xffffff70
   14774:	str	r0, [fp, #-124]	; 0xffffff84
   14778:	str	r0, [fp, #-128]	; 0xffffff80
   1477c:	movw	r0, #64	; 0x40
   14780:	str	r0, [fp, #-148]	; 0xffffff6c
   14784:	ldr	r0, [fp, #-148]	; 0xffffff6c
   14788:	cmp	r0, #0
   1478c:	bls	14918 <__assert_fail@plt+0x3594>
   14790:	b	14794 <__assert_fail@plt+0x3410>
   14794:	ldr	r0, [fp, #-112]	; 0xffffff90
   14798:	ldr	r1, [fp, #-120]	; 0xffffff88
   1479c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   147a0:	lsrs	r2, r2, #1
   147a4:	rrx	r1, r1
   147a8:	orr	r0, r2, r0, lsl #31
   147ac:	str	r1, [fp, #-120]	; 0xffffff88
   147b0:	str	r0, [fp, #-116]	; 0xffffff8c
   147b4:	ldr	r0, [fp, #-112]	; 0xffffff90
   147b8:	ldr	r1, [fp, #-108]	; 0xffffff94
   147bc:	lsrs	r1, r1, #1
   147c0:	rrx	r0, r0
   147c4:	str	r1, [fp, #-108]	; 0xffffff94
   147c8:	str	r0, [fp, #-112]	; 0xffffff90
   147cc:	ldr	r0, [fp, #-128]	; 0xffffff80
   147d0:	ldr	r1, [fp, #-124]	; 0xffffff84
   147d4:	lsl	r1, r1, #1
   147d8:	orr	r1, r1, r0, lsr #31
   147dc:	lsl	r0, r0, #1
   147e0:	str	r0, [fp, #-128]	; 0xffffff80
   147e4:	str	r1, [fp, #-124]	; 0xffffff84
   147e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   147ec:	ldr	r1, [fp, #-132]	; 0xffffff7c
   147f0:	ldr	r2, [fp, #-112]	; 0xffffff90
   147f4:	ldr	r3, [fp, #-108]	; 0xffffff94
   147f8:	subs	r0, r2, r0
   147fc:	sbcs	r1, r3, r1
   14800:	str	r0, [sp, #148]	; 0x94
   14804:	str	r1, [sp, #144]	; 0x90
   14808:	bcc	14860 <__assert_fail@plt+0x34dc>
   1480c:	b	14810 <__assert_fail@plt+0x348c>
   14810:	ldr	r0, [fp, #-136]	; 0xffffff78
   14814:	ldr	r1, [fp, #-132]	; 0xffffff7c
   14818:	ldr	r2, [fp, #-112]	; 0xffffff90
   1481c:	ldr	r3, [fp, #-108]	; 0xffffff94
   14820:	eor	r1, r1, r3
   14824:	eor	r0, r0, r2
   14828:	orr	r0, r0, r1
   1482c:	cmp	r0, #0
   14830:	bne	14900 <__assert_fail@plt+0x357c>
   14834:	b	14838 <__assert_fail@plt+0x34b4>
   14838:	ldr	r0, [fp, #-144]	; 0xffffff70
   1483c:	ldr	r1, [fp, #-140]	; 0xffffff74
   14840:	ldr	r2, [fp, #-120]	; 0xffffff88
   14844:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14848:	subs	r0, r0, r2
   1484c:	sbcs	r1, r1, r3
   14850:	str	r0, [sp, #140]	; 0x8c
   14854:	str	r1, [sp, #136]	; 0x88
   14858:	bcc	14900 <__assert_fail@plt+0x357c>
   1485c:	b	14860 <__assert_fail@plt+0x34dc>
   14860:	ldr	r0, [fp, #-128]	; 0xffffff80
   14864:	ldr	r1, [fp, #-124]	; 0xffffff84
   14868:	adds	r0, r0, #1
   1486c:	adc	r1, r1, #0
   14870:	str	r0, [fp, #-128]	; 0xffffff80
   14874:	str	r1, [fp, #-124]	; 0xffffff84
   14878:	ldr	r0, [fp, #-144]	; 0xffffff70
   1487c:	ldr	r1, [fp, #-140]	; 0xffffff74
   14880:	ldr	r2, [fp, #-120]	; 0xffffff88
   14884:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14888:	subs	r0, r0, r2
   1488c:	sbcs	r1, r1, r3
   14890:	mov	r2, #0
   14894:	mov	r3, r2
   14898:	movwcc	r3, #1
   1489c:	str	r2, [fp, #-156]	; 0xffffff64
   148a0:	str	r3, [fp, #-160]	; 0xffffff60
   148a4:	ldr	r2, [fp, #-144]	; 0xffffff70
   148a8:	ldr	r3, [fp, #-140]	; 0xffffff74
   148ac:	ldr	ip, [fp, #-120]	; 0xffffff88
   148b0:	ldr	lr, [fp, #-116]	; 0xffffff8c
   148b4:	subs	r2, r2, ip
   148b8:	sbc	r3, r3, lr
   148bc:	str	r2, [fp, #-144]	; 0xffffff70
   148c0:	str	r3, [fp, #-140]	; 0xffffff74
   148c4:	ldr	r2, [fp, #-136]	; 0xffffff78
   148c8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   148cc:	ldr	ip, [fp, #-112]	; 0xffffff90
   148d0:	ldr	lr, [fp, #-108]	; 0xffffff94
   148d4:	subs	r2, r2, ip
   148d8:	sbc	r3, r3, lr
   148dc:	ldr	ip, [fp, #-160]	; 0xffffff60
   148e0:	ldr	lr, [fp, #-156]	; 0xffffff64
   148e4:	subs	r2, r2, ip
   148e8:	sbc	r3, r3, lr
   148ec:	str	r2, [fp, #-136]	; 0xffffff78
   148f0:	str	r3, [fp, #-132]	; 0xffffff7c
   148f4:	str	r0, [sp, #132]	; 0x84
   148f8:	str	r1, [sp, #128]	; 0x80
   148fc:	b	14900 <__assert_fail@plt+0x357c>
   14900:	b	14904 <__assert_fail@plt+0x3580>
   14904:	ldr	r0, [fp, #-148]	; 0xffffff6c
   14908:	mvn	r1, #0
   1490c:	add	r0, r0, r1
   14910:	str	r0, [fp, #-148]	; 0xffffff6c
   14914:	b	14784 <__assert_fail@plt+0x3400>
   14918:	ldr	r0, [fp, #-144]	; 0xffffff70
   1491c:	ldr	r1, [fp, #-140]	; 0xffffff74
   14920:	str	r1, [fp, #-60]	; 0xffffffc4
   14924:	str	r0, [fp, #-64]	; 0xffffffc0
   14928:	ldr	r0, [fp, #-128]	; 0xffffff80
   1492c:	ldr	r1, [fp, #-124]	; 0xffffff84
   14930:	str	r1, [fp, #-100]	; 0xffffff9c
   14934:	str	r0, [fp, #-104]	; 0xffffff98
   14938:	b	1493c <__assert_fail@plt+0x35b8>
   1493c:	b	14940 <__assert_fail@plt+0x35bc>
   14940:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14944:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14948:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1494c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14950:	subs	r2, r2, r0
   14954:	sbc	r3, r3, r1
   14958:	subs	r0, r0, r2
   1495c:	sbcs	r1, r1, r3
   14960:	mov	r2, #0
   14964:	movwcc	r2, #1
   14968:	cmp	r2, #0
   1496c:	mvnne	r2, #0
   14970:	str	r2, [fp, #-164]	; 0xffffff5c
   14974:	str	r2, [fp, #-168]	; 0xffffff58
   14978:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1497c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14980:	ldr	ip, [fp, #-168]	; 0xffffff58
   14984:	ldr	lr, [fp, #-164]	; 0xffffff5c
   14988:	and	lr, r3, lr
   1498c:	and	ip, r2, ip
   14990:	ldr	r4, [fp, #-64]	; 0xffffffc0
   14994:	ldr	r5, [fp, #-60]	; 0xffffffc4
   14998:	adds	ip, ip, r4
   1499c:	adc	lr, lr, r5
   149a0:	subs	r2, r4, r2
   149a4:	sbc	r3, r5, r3
   149a8:	adds	r2, ip, r2
   149ac:	adc	r3, lr, r3
   149b0:	str	r2, [fp, #-40]	; 0xffffffd8
   149b4:	str	r3, [fp, #-36]	; 0xffffffdc
   149b8:	str	r0, [sp, #124]	; 0x7c
   149bc:	str	r1, [sp, #120]	; 0x78
   149c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   149c8:	str	r1, [fp, #-44]	; 0xffffffd4
   149cc:	str	r0, [fp, #-48]	; 0xffffffd0
   149d0:	str	r1, [fp, #-52]	; 0xffffffcc
   149d4:	str	r0, [fp, #-56]	; 0xffffffc8
   149d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   149e0:	eor	r0, r0, #1
   149e4:	orr	r0, r0, r1
   149e8:	cmp	r0, #0
   149ec:	beq	15178 <__assert_fail@plt+0x3df4>
   149f0:	b	149f4 <__assert_fail@plt+0x3670>
   149f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   149f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   149fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a00:	subs	r0, r0, r1
   14a04:	rscs	r1, r2, #0
   14a08:	str	r0, [sp, #116]	; 0x74
   14a0c:	str	r1, [sp, #112]	; 0x70
   14a10:	bcs	14a1c <__assert_fail@plt+0x3698>
   14a14:	b	14a18 <__assert_fail@plt+0x3694>
   14a18:	b	14a3c <__assert_fail@plt+0x36b8>
   14a1c:	movw	r0, #17880	; 0x45d8
   14a20:	movt	r0, #3
   14a24:	movw	r1, #17363	; 0x43d3
   14a28:	movt	r1, #3
   14a2c:	movw	r2, #1472	; 0x5c0
   14a30:	movw	r3, #17806	; 0x458e
   14a34:	movt	r3, #3
   14a38:	bl	11384 <__assert_fail@plt>
   14a3c:	b	14a40 <__assert_fail@plt+0x36bc>
   14a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a44:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a48:	str	r1, [fp, #-172]	; 0xffffff54
   14a4c:	str	r0, [fp, #-176]	; 0xffffff50
   14a50:	ldr	r0, [fp, #-176]	; 0xffffff50
   14a54:	ldr	r1, [fp, #-172]	; 0xffffff54
   14a58:	lsrs	r1, r1, #1
   14a5c:	rrx	r0, r0
   14a60:	and	r0, r0, #127	; 0x7f
   14a64:	movw	r2, #30422	; 0x76d6
   14a68:	movt	r2, #3
   14a6c:	ldrb	r0, [r2, r0]
   14a70:	mov	r2, #0
   14a74:	str	r2, [fp, #-180]	; 0xffffff4c
   14a78:	str	r0, [fp, #-184]	; 0xffffff48
   14a7c:	ldr	r0, [fp, #-184]	; 0xffffff48
   14a80:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14a84:	lsl	r3, r2, #1
   14a88:	orr	r3, r3, r0, lsr #31
   14a8c:	umull	ip, lr, r0, r0
   14a90:	mla	lr, r0, r2, lr
   14a94:	mla	r2, r0, r2, lr
   14a98:	ldr	lr, [fp, #-176]	; 0xffffff50
   14a9c:	ldr	r4, [fp, #-172]	; 0xffffff54
   14aa0:	umull	r5, r6, ip, lr
   14aa4:	mla	ip, ip, r4, r6
   14aa8:	mla	r2, r2, lr, ip
   14aac:	rsbs	r0, r5, r0, lsl #1
   14ab0:	sbc	r2, r3, r2
   14ab4:	str	r0, [fp, #-184]	; 0xffffff48
   14ab8:	str	r2, [fp, #-180]	; 0xffffff4c
   14abc:	ldr	r0, [fp, #-184]	; 0xffffff48
   14ac0:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14ac4:	lsl	r3, r2, #1
   14ac8:	orr	r3, r3, r0, lsr #31
   14acc:	umull	ip, lr, r0, r0
   14ad0:	mla	lr, r0, r2, lr
   14ad4:	mla	r2, r0, r2, lr
   14ad8:	ldr	lr, [fp, #-176]	; 0xffffff50
   14adc:	ldr	r4, [fp, #-172]	; 0xffffff54
   14ae0:	umull	r5, r6, ip, lr
   14ae4:	mla	ip, ip, r4, r6
   14ae8:	mla	r2, r2, lr, ip
   14aec:	rsbs	r0, r5, r0, lsl #1
   14af0:	sbc	r2, r3, r2
   14af4:	str	r0, [fp, #-184]	; 0xffffff48
   14af8:	str	r2, [fp, #-180]	; 0xffffff4c
   14afc:	ldr	r0, [fp, #-184]	; 0xffffff48
   14b00:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14b04:	lsl	r3, r2, #1
   14b08:	orr	r3, r3, r0, lsr #31
   14b0c:	umull	ip, lr, r0, r0
   14b10:	mla	lr, r0, r2, lr
   14b14:	mla	r2, r0, r2, lr
   14b18:	ldr	lr, [fp, #-176]	; 0xffffff50
   14b1c:	ldr	r4, [fp, #-172]	; 0xffffff54
   14b20:	umull	r5, r6, ip, lr
   14b24:	mla	ip, ip, r4, r6
   14b28:	mla	r2, r2, lr, ip
   14b2c:	rsbs	r0, r5, r0, lsl #1
   14b30:	sbc	r2, r3, r2
   14b34:	str	r0, [fp, #-184]	; 0xffffff48
   14b38:	str	r2, [fp, #-180]	; 0xffffff4c
   14b3c:	ldr	r0, [fp, #-184]	; 0xffffff48
   14b40:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14b44:	str	r2, [fp, #-76]	; 0xffffffb4
   14b48:	str	r0, [fp, #-80]	; 0xffffffb0
   14b4c:	str	r1, [sp, #108]	; 0x6c
   14b50:	b	14b54 <__assert_fail@plt+0x37d0>
   14b54:	b	14b58 <__assert_fail@plt+0x37d4>
   14b58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b68:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14b6c:	ldr	lr, [fp, #-76]	; 0xffffffb4
   14b70:	mov	r4, sp
   14b74:	str	lr, [r4, #12]
   14b78:	str	ip, [r4, #8]
   14b7c:	str	r3, [r4, #4]
   14b80:	str	r2, [r4]
   14b84:	str	r0, [sp, #104]	; 0x68
   14b88:	str	r1, [sp, #100]	; 0x64
   14b8c:	ldr	r2, [sp, #104]	; 0x68
   14b90:	ldr	r3, [sp, #100]	; 0x64
   14b94:	bl	18250 <__assert_fail@plt+0x6ecc>
   14b98:	str	r1, [fp, #-36]	; 0xffffffdc
   14b9c:	str	r0, [fp, #-40]	; 0xffffffd8
   14ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ba4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bb0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14bb4:	subs	r2, r2, ip
   14bb8:	sbc	r3, r3, #0
   14bbc:	subs	r0, r0, r2
   14bc0:	sbcs	r1, r1, r3
   14bc4:	mov	r2, #0
   14bc8:	movwcc	r2, #1
   14bcc:	cmp	r2, #0
   14bd0:	mvnne	r2, #0
   14bd4:	str	r2, [fp, #-188]	; 0xffffff44
   14bd8:	str	r2, [fp, #-192]	; 0xffffff40
   14bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14be4:	ldr	ip, [fp, #-192]	; 0xffffff40
   14be8:	ldr	lr, [fp, #-188]	; 0xffffff44
   14bec:	and	lr, r3, lr
   14bf0:	and	ip, r2, ip
   14bf4:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14bf8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14bfc:	adds	ip, ip, r4
   14c00:	adc	lr, lr, r5
   14c04:	ldr	r4, [fp, #-28]	; 0xffffffe4
   14c08:	subs	r2, r4, r2
   14c0c:	rsc	r3, r3, #0
   14c10:	adds	r2, ip, r2
   14c14:	adc	r3, lr, r3
   14c18:	str	r2, [fp, #-40]	; 0xffffffd8
   14c1c:	str	r3, [fp, #-36]	; 0xffffffdc
   14c20:	str	r0, [sp, #96]	; 0x60
   14c24:	str	r1, [sp, #92]	; 0x5c
   14c28:	b	14c2c <__assert_fail@plt+0x38a8>
   14c2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14c38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c3c:	subs	r0, r0, r2
   14c40:	sbcs	r1, r1, r3
   14c44:	mov	r2, #0
   14c48:	movwcc	r2, #1
   14c4c:	cmp	r2, #0
   14c50:	mvnne	r2, #0
   14c54:	str	r2, [sp, #196]	; 0xc4
   14c58:	str	r2, [sp, #192]	; 0xc0
   14c5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c64:	ldr	ip, [sp, #192]	; 0xc0
   14c68:	ldr	lr, [sp, #196]	; 0xc4
   14c6c:	and	r3, r3, lr
   14c70:	and	r2, r2, ip
   14c74:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14c78:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14c7c:	adds	r2, r2, ip
   14c80:	adc	r3, r3, lr
   14c84:	ldr	ip, [fp, #-40]	; 0xffffffd8
   14c88:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14c8c:	subs	r2, r2, ip
   14c90:	sbc	r3, r3, lr
   14c94:	str	r2, [fp, #-72]	; 0xffffffb8
   14c98:	str	r3, [fp, #-68]	; 0xffffffbc
   14c9c:	str	r0, [sp, #88]	; 0x58
   14ca0:	str	r1, [sp, #84]	; 0x54
   14ca4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14ca8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14cac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14cb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14cb4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14cb8:	ldr	lr, [fp, #-20]	; 0xffffffec
   14cbc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14cc0:	ldr	r5, [fp, #-76]	; 0xffffffb4
   14cc4:	mov	r6, sp
   14cc8:	str	r5, [r6, #12]
   14ccc:	str	r4, [r6, #8]
   14cd0:	str	lr, [r6, #4]
   14cd4:	str	ip, [r6]
   14cd8:	bl	18250 <__assert_fail@plt+0x6ecc>
   14cdc:	str	r1, [fp, #-60]	; 0xffffffc4
   14ce0:	str	r0, [fp, #-64]	; 0xffffffc0
   14ce4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14ce8:	and	r0, r0, #31
   14cec:	cmp	r0, #1
   14cf0:	bne	14d30 <__assert_fail@plt+0x39ac>
   14cf4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14cf8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d04:	bl	19658 <__assert_fail@plt+0x82d4>
   14d08:	eor	r0, r0, #1
   14d0c:	orr	r0, r0, r1
   14d10:	cmp	r0, #0
   14d14:	beq	14d20 <__assert_fail@plt+0x399c>
   14d18:	b	14d1c <__assert_fail@plt+0x3998>
   14d1c:	b	14e80 <__assert_fail@plt+0x3afc>
   14d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d28:	str	r1, [fp, #-52]	; 0xffffffcc
   14d2c:	str	r0, [fp, #-56]	; 0xffffffc8
   14d30:	b	14d34 <__assert_fail@plt+0x39b0>
   14d34:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14d38:	mvn	r1, #0
   14d3c:	add	r0, r0, r1
   14d40:	str	r0, [fp, #-92]	; 0xffffffa4
   14d44:	cmp	r0, #0
   14d48:	bne	14b58 <__assert_fail@plt+0x37d4>
   14d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d54:	str	r1, [fp, #-44]	; 0xffffffd4
   14d58:	str	r0, [fp, #-48]	; 0xffffffd0
   14d5c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14d60:	str	r0, [fp, #-92]	; 0xffffffa4
   14d64:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14d68:	lsl	r0, r0, #1
   14d6c:	str	r0, [fp, #-96]	; 0xffffffa0
   14d70:	movw	r0, #0
   14d74:	str	r0, [sp, #188]	; 0xbc
   14d78:	ldr	r0, [sp, #188]	; 0xbc
   14d7c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14d80:	cmp	r0, r1
   14d84:	bcs	14e6c <__assert_fail@plt+0x3ae8>
   14d88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d94:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d98:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14d9c:	ldr	lr, [fp, #-76]	; 0xffffffb4
   14da0:	mov	r4, sp
   14da4:	str	lr, [r4, #12]
   14da8:	str	ip, [r4, #8]
   14dac:	str	r3, [r4, #4]
   14db0:	str	r2, [r4]
   14db4:	str	r0, [sp, #80]	; 0x50
   14db8:	str	r1, [sp, #76]	; 0x4c
   14dbc:	ldr	r2, [sp, #80]	; 0x50
   14dc0:	ldr	r3, [sp, #76]	; 0x4c
   14dc4:	bl	18250 <__assert_fail@plt+0x6ecc>
   14dc8:	str	r1, [fp, #-36]	; 0xffffffdc
   14dcc:	str	r0, [fp, #-40]	; 0xffffffd8
   14dd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14dd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14dd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14de0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14de4:	subs	r2, r2, ip
   14de8:	sbc	r3, r3, #0
   14dec:	subs	r0, r0, r2
   14df0:	sbcs	r1, r1, r3
   14df4:	mov	r2, #0
   14df8:	movwcc	r2, #1
   14dfc:	cmp	r2, #0
   14e00:	mvnne	r2, #0
   14e04:	str	r2, [sp, #180]	; 0xb4
   14e08:	str	r2, [sp, #176]	; 0xb0
   14e0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e14:	ldr	ip, [sp, #176]	; 0xb0
   14e18:	ldr	lr, [sp, #180]	; 0xb4
   14e1c:	and	lr, r3, lr
   14e20:	and	ip, r2, ip
   14e24:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14e28:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14e2c:	adds	ip, ip, r4
   14e30:	adc	lr, lr, r5
   14e34:	ldr	r4, [fp, #-28]	; 0xffffffe4
   14e38:	subs	r2, r4, r2
   14e3c:	rsc	r3, r3, #0
   14e40:	adds	r2, ip, r2
   14e44:	adc	r3, lr, r3
   14e48:	str	r2, [fp, #-40]	; 0xffffffd8
   14e4c:	str	r3, [fp, #-36]	; 0xffffffdc
   14e50:	str	r0, [sp, #72]	; 0x48
   14e54:	str	r1, [sp, #68]	; 0x44
   14e58:	b	14e5c <__assert_fail@plt+0x3ad8>
   14e5c:	ldr	r0, [sp, #188]	; 0xbc
   14e60:	add	r0, r0, #1
   14e64:	str	r0, [sp, #188]	; 0xbc
   14e68:	b	14d78 <__assert_fail@plt+0x39f4>
   14e6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e74:	str	r1, [fp, #-52]	; 0xffffffcc
   14e78:	str	r0, [fp, #-56]	; 0xffffffc8
   14e7c:	b	14b54 <__assert_fail@plt+0x37d0>
   14e80:	b	14e84 <__assert_fail@plt+0x3b00>
   14e84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14e88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14e8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e90:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e94:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14e98:	ldr	lr, [fp, #-76]	; 0xffffffb4
   14e9c:	mov	r4, sp
   14ea0:	str	lr, [r4, #12]
   14ea4:	str	ip, [r4, #8]
   14ea8:	str	r3, [r4, #4]
   14eac:	str	r2, [r4]
   14eb0:	str	r0, [sp, #64]	; 0x40
   14eb4:	str	r1, [sp, #60]	; 0x3c
   14eb8:	ldr	r2, [sp, #64]	; 0x40
   14ebc:	ldr	r3, [sp, #60]	; 0x3c
   14ec0:	bl	18250 <__assert_fail@plt+0x6ecc>
   14ec4:	str	r1, [fp, #-52]	; 0xffffffcc
   14ec8:	str	r0, [fp, #-56]	; 0xffffffc8
   14ecc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14ed0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14ed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14edc:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14ee0:	subs	r2, r2, ip
   14ee4:	sbc	r3, r3, #0
   14ee8:	subs	r0, r0, r2
   14eec:	sbcs	r1, r1, r3
   14ef0:	mov	r2, #0
   14ef4:	movwcc	r2, #1
   14ef8:	cmp	r2, #0
   14efc:	mvnne	r2, #0
   14f00:	str	r2, [sp, #172]	; 0xac
   14f04:	str	r2, [sp, #168]	; 0xa8
   14f08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f10:	ldr	ip, [sp, #168]	; 0xa8
   14f14:	ldr	lr, [sp, #172]	; 0xac
   14f18:	and	lr, r3, lr
   14f1c:	and	ip, r2, ip
   14f20:	ldr	r4, [fp, #-56]	; 0xffffffc8
   14f24:	ldr	r5, [fp, #-52]	; 0xffffffcc
   14f28:	adds	ip, ip, r4
   14f2c:	adc	lr, lr, r5
   14f30:	ldr	r4, [fp, #-28]	; 0xffffffe4
   14f34:	subs	r2, r4, r2
   14f38:	rsc	r3, r3, #0
   14f3c:	adds	r2, ip, r2
   14f40:	adc	r3, lr, r3
   14f44:	str	r2, [fp, #-56]	; 0xffffffc8
   14f48:	str	r3, [fp, #-52]	; 0xffffffcc
   14f4c:	str	r0, [sp, #56]	; 0x38
   14f50:	str	r1, [sp, #52]	; 0x34
   14f54:	b	14f58 <__assert_fail@plt+0x3bd4>
   14f58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14f5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14f68:	subs	r0, r0, r2
   14f6c:	sbcs	r1, r1, r3
   14f70:	mov	r2, #0
   14f74:	movwcc	r2, #1
   14f78:	cmp	r2, #0
   14f7c:	mvnne	r2, #0
   14f80:	str	r2, [sp, #164]	; 0xa4
   14f84:	str	r2, [sp, #160]	; 0xa0
   14f88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f90:	ldr	ip, [sp, #160]	; 0xa0
   14f94:	ldr	lr, [sp, #164]	; 0xa4
   14f98:	and	r3, r3, lr
   14f9c:	and	r2, r2, ip
   14fa0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14fa4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14fa8:	adds	r2, r2, ip
   14fac:	adc	r3, r3, lr
   14fb0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   14fb4:	ldr	lr, [fp, #-52]	; 0xffffffcc
   14fb8:	subs	r2, r2, ip
   14fbc:	sbc	r3, r3, lr
   14fc0:	str	r2, [fp, #-72]	; 0xffffffb8
   14fc4:	str	r3, [fp, #-68]	; 0xffffffbc
   14fc8:	str	r0, [sp, #48]	; 0x30
   14fcc:	str	r1, [sp, #44]	; 0x2c
   14fd0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14fd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14fd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fe0:	bl	19658 <__assert_fail@plt+0x82d4>
   14fe4:	str	r1, [fp, #-84]	; 0xffffffac
   14fe8:	str	r0, [fp, #-88]	; 0xffffffa8
   14fec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14ff0:	ldr	r1, [fp, #-84]	; 0xffffffac
   14ff4:	eor	r0, r0, #1
   14ff8:	orr	r0, r0, r1
   14ffc:	cmp	r0, #0
   15000:	beq	14e84 <__assert_fail@plt+0x3b00>
   15004:	b	15008 <__assert_fail@plt+0x3c84>
   15008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1500c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15010:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15014:	ldr	r3, [fp, #-84]	; 0xffffffac
   15018:	eor	r1, r1, r3
   1501c:	eor	r0, r0, r2
   15020:	orr	r0, r0, r1
   15024:	cmp	r0, #0
   15028:	bne	1504c <__assert_fail@plt+0x3cc8>
   1502c:	b	15030 <__assert_fail@plt+0x3cac>
   15030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15034:	ldr	r1, [fp, #-20]	; 0xffffffec
   15038:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1503c:	add	r2, r2, #1
   15040:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15044:	bl	146d4 <__assert_fail@plt+0x3350>
   15048:	b	15178 <__assert_fail@plt+0x3df4>
   1504c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15050:	ldr	r1, [fp, #-20]	; 0xffffffec
   15054:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15058:	ldr	r3, [fp, #-84]	; 0xffffffac
   1505c:	bl	33e44 <__assert_fail@plt+0x22ac0>
   15060:	str	r1, [fp, #-20]	; 0xffffffec
   15064:	str	r0, [fp, #-24]	; 0xffffffe8
   15068:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1506c:	ldr	r1, [fp, #-84]	; 0xffffffac
   15070:	bl	16bb0 <__assert_fail@plt+0x582c>
   15074:	tst	r0, #1
   15078:	bne	15098 <__assert_fail@plt+0x3d14>
   1507c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15080:	ldr	r1, [fp, #-84]	; 0xffffffac
   15084:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15088:	add	r2, r2, #1
   1508c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15090:	bl	146d4 <__assert_fail@plt+0x3350>
   15094:	b	150b4 <__assert_fail@plt+0x3d30>
   15098:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1509c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   150a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   150a4:	mov	r1, sp
   150a8:	mov	ip, #1
   150ac:	str	ip, [r1]
   150b0:	bl	16958 <__assert_fail@plt+0x55d4>
   150b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   150bc:	bl	16bb0 <__assert_fail@plt+0x582c>
   150c0:	tst	r0, #1
   150c4:	beq	150e8 <__assert_fail@plt+0x3d64>
   150c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   150d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   150d4:	mov	r1, sp
   150d8:	mov	ip, #1
   150dc:	str	ip, [r1]
   150e0:	bl	16958 <__assert_fail@plt+0x55d4>
   150e4:	b	15178 <__assert_fail@plt+0x3df4>
   150e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   150f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   150f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   150f8:	bl	33e44 <__assert_fail@plt+0x22ac0>
   150fc:	str	r3, [fp, #-36]	; 0xffffffdc
   15100:	str	r2, [fp, #-40]	; 0xffffffd8
   15104:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15108:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1510c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15110:	ldr	ip, [fp, #-20]	; 0xffffffec
   15114:	str	r0, [sp, #40]	; 0x28
   15118:	mov	r0, r2
   1511c:	str	r1, [sp, #36]	; 0x24
   15120:	mov	r1, r3
   15124:	mov	r2, lr
   15128:	mov	r3, ip
   1512c:	bl	33e44 <__assert_fail@plt+0x22ac0>
   15130:	str	r3, [fp, #-44]	; 0xffffffd4
   15134:	str	r2, [fp, #-48]	; 0xffffffd0
   15138:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1513c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15140:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15144:	ldr	lr, [fp, #-20]	; 0xffffffec
   15148:	str	r0, [sp, #32]
   1514c:	mov	r0, r2
   15150:	str	r1, [sp, #28]
   15154:	mov	r1, r3
   15158:	mov	r2, ip
   1515c:	mov	r3, lr
   15160:	bl	33e44 <__assert_fail@plt+0x22ac0>
   15164:	str	r3, [fp, #-52]	; 0xffffffcc
   15168:	str	r2, [fp, #-56]	; 0xffffffc8
   1516c:	str	r0, [sp, #24]
   15170:	str	r1, [sp, #20]
   15174:	b	149d8 <__assert_fail@plt+0x3654>
   15178:	sub	sp, fp, #16
   1517c:	pop	{r4, r5, r6, sl, fp, pc}
   15180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15184:	add	fp, sp, #28
   15188:	sub	sp, sp, #740	; 0x2e4
   1518c:	ldr	ip, [fp, #12]
   15190:	ldr	lr, [fp, #8]
   15194:	str	r0, [fp, #-40]	; 0xffffffd8
   15198:	str	r1, [fp, #-36]	; 0xffffffdc
   1519c:	str	r3, [fp, #-44]	; 0xffffffd4
   151a0:	str	r2, [fp, #-48]	; 0xffffffd0
   151a4:	movw	r0, #1
   151a8:	str	r0, [fp, #-164]	; 0xffffff5c
   151ac:	str	r0, [fp, #-168]	; 0xffffff58
   151b0:	str	ip, [sp, #308]	; 0x134
   151b4:	str	lr, [sp, #304]	; 0x130
   151b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   151c0:	subs	r0, r0, #2
   151c4:	sbcs	r1, r1, #0
   151c8:	str	r0, [sp, #300]	; 0x12c
   151cc:	str	r1, [sp, #296]	; 0x128
   151d0:	bcc	15200 <__assert_fail@plt+0x3e7c>
   151d4:	b	151d8 <__assert_fail@plt+0x3e54>
   151d8:	mov	r0, #0
   151dc:	str	r0, [fp, #-172]	; 0xffffff54
   151e0:	mov	r1, #1
   151e4:	str	r1, [fp, #-176]	; 0xffffff50
   151e8:	str	r0, [fp, #-180]	; 0xffffff4c
   151ec:	str	r0, [fp, #-184]	; 0xffffff48
   151f0:	str	r0, [fp, #-188]	; 0xffffff44
   151f4:	mov	r0, #64	; 0x40
   151f8:	str	r0, [fp, #-192]	; 0xffffff40
   151fc:	b	15224 <__assert_fail@plt+0x3ea0>
   15200:	mov	r0, #0
   15204:	str	r0, [fp, #-172]	; 0xffffff54
   15208:	str	r0, [fp, #-176]	; 0xffffff50
   1520c:	str	r0, [fp, #-180]	; 0xffffff4c
   15210:	mov	r1, #1
   15214:	str	r1, [fp, #-184]	; 0xffffff48
   15218:	str	r0, [fp, #-188]	; 0xffffff44
   1521c:	mov	r0, #128	; 0x80
   15220:	str	r0, [fp, #-192]	; 0xffffff40
   15224:	b	15228 <__assert_fail@plt+0x3ea4>
   15228:	ldr	r0, [fp, #-192]	; 0xffffff40
   1522c:	ldr	r1, [fp, #-188]	; 0xffffff44
   15230:	subs	r2, r0, #1
   15234:	sbc	r3, r1, #0
   15238:	str	r2, [fp, #-192]	; 0xffffff40
   1523c:	str	r3, [fp, #-188]	; 0xffffff44
   15240:	orr	r0, r0, r1
   15244:	cmp	r0, #0
   15248:	beq	1539c <__assert_fail@plt+0x4018>
   1524c:	b	15250 <__assert_fail@plt+0x3ecc>
   15250:	b	15254 <__assert_fail@plt+0x3ed0>
   15254:	ldr	r0, [fp, #-176]	; 0xffffff50
   15258:	ldr	r1, [fp, #-172]	; 0xffffff54
   1525c:	lsl	r1, r1, #1
   15260:	orr	r1, r1, r0, lsr #31
   15264:	lsl	r0, r0, #1
   15268:	ldr	r2, [fp, #-180]	; 0xffffff4c
   1526c:	orr	r0, r0, r2, lsr #31
   15270:	str	r1, [fp, #-172]	; 0xffffff54
   15274:	str	r0, [fp, #-176]	; 0xffffff50
   15278:	ldr	r0, [fp, #-184]	; 0xffffff48
   1527c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15280:	lsl	r1, r1, #1
   15284:	orr	r1, r1, r0, lsr #31
   15288:	lsl	r0, r0, #1
   1528c:	str	r0, [fp, #-184]	; 0xffffff48
   15290:	str	r1, [fp, #-180]	; 0xffffff4c
   15294:	ldr	r0, [fp, #-176]	; 0xffffff50
   15298:	ldr	r1, [fp, #-172]	; 0xffffff54
   1529c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   152a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   152a4:	subs	r0, r2, r0
   152a8:	sbcs	r1, r3, r1
   152ac:	str	r0, [sp, #292]	; 0x124
   152b0:	str	r1, [sp, #288]	; 0x120
   152b4:	bcc	1530c <__assert_fail@plt+0x3f88>
   152b8:	b	152bc <__assert_fail@plt+0x3f38>
   152bc:	ldr	r0, [fp, #-176]	; 0xffffff50
   152c0:	ldr	r1, [fp, #-172]	; 0xffffff54
   152c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   152c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   152cc:	eor	r1, r1, r3
   152d0:	eor	r0, r0, r2
   152d4:	orr	r0, r0, r1
   152d8:	cmp	r0, #0
   152dc:	bne	15398 <__assert_fail@plt+0x4014>
   152e0:	b	152e4 <__assert_fail@plt+0x3f60>
   152e4:	ldr	r0, [fp, #-184]	; 0xffffff48
   152e8:	ldr	r1, [fp, #-180]	; 0xffffff4c
   152ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   152f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152f4:	subs	r0, r0, r2
   152f8:	sbcs	r1, r1, r3
   152fc:	str	r0, [sp, #284]	; 0x11c
   15300:	str	r1, [sp, #280]	; 0x118
   15304:	bcc	15398 <__assert_fail@plt+0x4014>
   15308:	b	1530c <__assert_fail@plt+0x3f88>
   1530c:	b	15310 <__assert_fail@plt+0x3f8c>
   15310:	ldr	r0, [fp, #-184]	; 0xffffff48
   15314:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15318:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1531c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15320:	subs	r0, r0, r2
   15324:	sbcs	r1, r1, r3
   15328:	mov	r2, #0
   1532c:	mov	r3, r2
   15330:	movwcc	r3, #1
   15334:	str	r2, [fp, #-196]	; 0xffffff3c
   15338:	str	r3, [fp, #-200]	; 0xffffff38
   1533c:	ldr	r2, [fp, #-184]	; 0xffffff48
   15340:	ldr	r3, [fp, #-180]	; 0xffffff4c
   15344:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15348:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1534c:	subs	r2, r2, ip
   15350:	sbc	r3, r3, lr
   15354:	str	r2, [fp, #-184]	; 0xffffff48
   15358:	str	r3, [fp, #-180]	; 0xffffff4c
   1535c:	ldr	r2, [fp, #-176]	; 0xffffff50
   15360:	ldr	r3, [fp, #-172]	; 0xffffff54
   15364:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15368:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1536c:	subs	r2, r2, ip
   15370:	sbc	r3, r3, lr
   15374:	ldr	ip, [fp, #-200]	; 0xffffff38
   15378:	ldr	lr, [fp, #-196]	; 0xffffff3c
   1537c:	subs	r2, r2, ip
   15380:	sbc	r3, r3, lr
   15384:	str	r2, [fp, #-176]	; 0xffffff50
   15388:	str	r3, [fp, #-172]	; 0xffffff54
   1538c:	str	r0, [sp, #276]	; 0x114
   15390:	str	r1, [sp, #272]	; 0x110
   15394:	b	15398 <__assert_fail@plt+0x4014>
   15398:	b	15228 <__assert_fail@plt+0x3ea4>
   1539c:	ldr	r0, [fp, #-176]	; 0xffffff50
   153a0:	ldr	r1, [fp, #-172]	; 0xffffff54
   153a4:	str	r1, [fp, #-100]	; 0xffffff9c
   153a8:	str	r0, [fp, #-104]	; 0xffffff98
   153ac:	ldr	r0, [fp, #-184]	; 0xffffff48
   153b0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   153b4:	str	r1, [fp, #-108]	; 0xffffff94
   153b8:	str	r0, [fp, #-112]	; 0xffffff90
   153bc:	b	153c0 <__assert_fail@plt+0x403c>
   153c0:	b	153c4 <__assert_fail@plt+0x4040>
   153c4:	ldr	r0, [fp, #-112]	; 0xffffff90
   153c8:	ldr	r1, [fp, #-108]	; 0xffffff94
   153cc:	adds	r0, r0, r0
   153d0:	adc	r1, r1, r1
   153d4:	str	r0, [fp, #-208]	; 0xffffff30
   153d8:	str	r1, [fp, #-204]	; 0xffffff34
   153dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   153e0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   153e4:	adds	r0, r0, r0
   153e8:	adc	r1, r1, r1
   153ec:	ldr	r2, [fp, #-208]	; 0xffffff30
   153f0:	ldr	r3, [fp, #-204]	; 0xffffff34
   153f4:	ldr	ip, [fp, #-112]	; 0xffffff90
   153f8:	ldr	lr, [fp, #-108]	; 0xffffff94
   153fc:	subs	r2, r2, ip
   15400:	sbcs	r3, r3, lr
   15404:	mov	ip, #0
   15408:	movwcc	ip, #1
   1540c:	adds	lr, r0, #1
   15410:	adc	r4, r1, #0
   15414:	cmp	ip, #0
   15418:	movne	r1, r4
   1541c:	cmp	ip, #0
   15420:	movne	r0, lr
   15424:	str	r1, [fp, #-52]	; 0xffffffcc
   15428:	str	r0, [fp, #-56]	; 0xffffffc8
   1542c:	ldr	r0, [fp, #-208]	; 0xffffff30
   15430:	ldr	r1, [fp, #-204]	; 0xffffff34
   15434:	str	r1, [fp, #-60]	; 0xffffffc4
   15438:	str	r0, [fp, #-64]	; 0xffffffc0
   1543c:	str	r2, [sp, #268]	; 0x10c
   15440:	str	r3, [sp, #264]	; 0x108
   15444:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15448:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1544c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15450:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15454:	subs	r0, r2, r0
   15458:	sbcs	r1, r3, r1
   1545c:	str	r0, [sp, #260]	; 0x104
   15460:	str	r1, [sp, #256]	; 0x100
   15464:	bcc	154bc <__assert_fail@plt+0x4138>
   15468:	b	1546c <__assert_fail@plt+0x40e8>
   1546c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15470:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15474:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15478:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1547c:	eor	r1, r1, r3
   15480:	eor	r0, r0, r2
   15484:	orr	r0, r0, r1
   15488:	cmp	r0, #0
   1548c:	bne	15548 <__assert_fail@plt+0x41c4>
   15490:	b	15494 <__assert_fail@plt+0x4110>
   15494:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15498:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1549c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   154a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154a4:	subs	r0, r0, r2
   154a8:	sbcs	r1, r1, r3
   154ac:	str	r0, [sp, #252]	; 0xfc
   154b0:	str	r1, [sp, #248]	; 0xf8
   154b4:	bcc	15548 <__assert_fail@plt+0x41c4>
   154b8:	b	154bc <__assert_fail@plt+0x4138>
   154bc:	b	154c0 <__assert_fail@plt+0x413c>
   154c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   154c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   154c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   154cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154d0:	subs	r0, r0, r2
   154d4:	sbcs	r1, r1, r3
   154d8:	mov	r2, #0
   154dc:	mov	r3, r2
   154e0:	movwcc	r3, #1
   154e4:	str	r2, [fp, #-212]	; 0xffffff2c
   154e8:	str	r3, [fp, #-216]	; 0xffffff28
   154ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   154f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   154f4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   154f8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   154fc:	subs	r2, r2, ip
   15500:	sbc	r3, r3, lr
   15504:	str	r2, [fp, #-64]	; 0xffffffc0
   15508:	str	r3, [fp, #-60]	; 0xffffffc4
   1550c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15510:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15514:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15518:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1551c:	subs	r2, r2, ip
   15520:	sbc	r3, r3, lr
   15524:	ldr	ip, [fp, #-216]	; 0xffffff28
   15528:	ldr	lr, [fp, #-212]	; 0xffffff2c
   1552c:	subs	r2, r2, ip
   15530:	sbc	r3, r3, lr
   15534:	str	r2, [fp, #-56]	; 0xffffffc8
   15538:	str	r3, [fp, #-52]	; 0xffffffcc
   1553c:	str	r0, [sp, #244]	; 0xf4
   15540:	str	r1, [sp, #240]	; 0xf0
   15544:	b	15548 <__assert_fail@plt+0x41c4>
   15548:	b	1554c <__assert_fail@plt+0x41c8>
   1554c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15550:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15554:	str	r1, [fp, #-68]	; 0xffffffbc
   15558:	str	r0, [fp, #-72]	; 0xffffffb8
   1555c:	str	r1, [fp, #-84]	; 0xffffffac
   15560:	str	r0, [fp, #-88]	; 0xffffffa8
   15564:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15568:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1556c:	str	r1, [fp, #-76]	; 0xffffffb4
   15570:	str	r0, [fp, #-80]	; 0xffffffb0
   15574:	str	r1, [fp, #-92]	; 0xffffffa4
   15578:	str	r0, [fp, #-96]	; 0xffffffa0
   1557c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15580:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15584:	orr	r0, r0, r1
   15588:	mov	r1, #1
   1558c:	cmp	r0, #0
   15590:	str	r1, [sp, #236]	; 0xec
   15594:	bne	155b8 <__assert_fail@plt+0x4234>
   15598:	b	1559c <__assert_fail@plt+0x4218>
   1559c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155a4:	eor	r0, r0, #1
   155a8:	orr	r0, r0, r1
   155ac:	cmp	r0, #0
   155b0:	movwne	r0, #1
   155b4:	str	r0, [sp, #236]	; 0xec
   155b8:	ldr	r0, [sp, #236]	; 0xec
   155bc:	tst	r0, #1
   155c0:	beq	16950 <__assert_fail@plt+0x55cc>
   155c4:	b	155c8 <__assert_fail@plt+0x4244>
   155c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155d0:	str	r1, [fp, #-220]	; 0xffffff24
   155d4:	str	r0, [fp, #-224]	; 0xffffff20
   155d8:	ldr	r0, [fp, #-224]	; 0xffffff20
   155dc:	ldr	r1, [fp, #-220]	; 0xffffff24
   155e0:	lsrs	r1, r1, #1
   155e4:	rrx	r0, r0
   155e8:	and	r0, r0, #127	; 0x7f
   155ec:	movw	r2, #30422	; 0x76d6
   155f0:	movt	r2, #3
   155f4:	ldrb	r0, [r2, r0]
   155f8:	mov	r2, #0
   155fc:	str	r2, [fp, #-228]	; 0xffffff1c
   15600:	str	r0, [fp, #-232]	; 0xffffff18
   15604:	ldr	r0, [fp, #-232]	; 0xffffff18
   15608:	ldr	r2, [fp, #-228]	; 0xffffff1c
   1560c:	lsl	r3, r2, #1
   15610:	orr	r3, r3, r0, lsr #31
   15614:	umull	ip, lr, r0, r0
   15618:	mla	lr, r0, r2, lr
   1561c:	mla	r2, r0, r2, lr
   15620:	ldr	lr, [fp, #-224]	; 0xffffff20
   15624:	ldr	r4, [fp, #-220]	; 0xffffff24
   15628:	umull	r5, r6, ip, lr
   1562c:	mla	ip, ip, r4, r6
   15630:	mla	r2, r2, lr, ip
   15634:	rsbs	r0, r5, r0, lsl #1
   15638:	sbc	r2, r3, r2
   1563c:	str	r0, [fp, #-232]	; 0xffffff18
   15640:	str	r2, [fp, #-228]	; 0xffffff1c
   15644:	ldr	r0, [fp, #-232]	; 0xffffff18
   15648:	ldr	r2, [fp, #-228]	; 0xffffff1c
   1564c:	lsl	r3, r2, #1
   15650:	orr	r3, r3, r0, lsr #31
   15654:	umull	ip, lr, r0, r0
   15658:	mla	lr, r0, r2, lr
   1565c:	mla	r2, r0, r2, lr
   15660:	ldr	lr, [fp, #-224]	; 0xffffff20
   15664:	ldr	r4, [fp, #-220]	; 0xffffff24
   15668:	umull	r5, r6, ip, lr
   1566c:	mla	ip, ip, r4, r6
   15670:	mla	r2, r2, lr, ip
   15674:	rsbs	r0, r5, r0, lsl #1
   15678:	sbc	r2, r3, r2
   1567c:	str	r0, [fp, #-232]	; 0xffffff18
   15680:	str	r2, [fp, #-228]	; 0xffffff1c
   15684:	ldr	r0, [fp, #-232]	; 0xffffff18
   15688:	ldr	r2, [fp, #-228]	; 0xffffff1c
   1568c:	lsl	r3, r2, #1
   15690:	orr	r3, r3, r0, lsr #31
   15694:	umull	ip, lr, r0, r0
   15698:	mla	lr, r0, r2, lr
   1569c:	mla	r2, r0, r2, lr
   156a0:	ldr	lr, [fp, #-224]	; 0xffffff20
   156a4:	ldr	r4, [fp, #-220]	; 0xffffff24
   156a8:	umull	r5, r6, ip, lr
   156ac:	mla	ip, ip, r4, r6
   156b0:	mla	r2, r2, lr, ip
   156b4:	rsbs	r0, r5, r0, lsl #1
   156b8:	sbc	r2, r3, r2
   156bc:	str	r0, [fp, #-232]	; 0xffffff18
   156c0:	str	r2, [fp, #-228]	; 0xffffff1c
   156c4:	ldr	r0, [fp, #-232]	; 0xffffff18
   156c8:	ldr	r2, [fp, #-228]	; 0xffffff1c
   156cc:	str	r2, [fp, #-132]	; 0xffffff7c
   156d0:	str	r0, [fp, #-136]	; 0xffffff78
   156d4:	str	r1, [sp, #232]	; 0xe8
   156d8:	b	156dc <__assert_fail@plt+0x4358>
   156dc:	b	156e0 <__assert_fail@plt+0x435c>
   156e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   156e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   156e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   156ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   156f0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   156f4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   156f8:	ldr	r4, [fp, #-48]	; 0xffffffd0
   156fc:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15700:	ldr	r6, [fp, #-136]	; 0xffffff78
   15704:	ldr	r7, [fp, #-132]	; 0xffffff7c
   15708:	mov	r8, sp
   1570c:	str	r7, [r8, #44]	; 0x2c
   15710:	str	r6, [r8, #40]	; 0x28
   15714:	str	r5, [r8, #36]	; 0x24
   15718:	str	r4, [r8, #32]
   1571c:	str	lr, [r8, #28]
   15720:	str	ip, [r8, #24]
   15724:	str	r3, [r8, #20]
   15728:	str	r2, [r8, #16]
   1572c:	str	r1, [r8, #12]
   15730:	str	r0, [r8, #8]
   15734:	str	r3, [r8, #4]
   15738:	str	r2, [r8]
   1573c:	sub	r2, fp, #160	; 0xa0
   15740:	str	r0, [sp, #228]	; 0xe4
   15744:	mov	r0, r2
   15748:	ldr	r2, [sp, #228]	; 0xe4
   1574c:	mov	r3, r1
   15750:	bl	18580 <__assert_fail@plt+0x71fc>
   15754:	str	r1, [fp, #-60]	; 0xffffffc4
   15758:	str	r0, [fp, #-64]	; 0xffffffc0
   1575c:	ldr	r0, [fp, #-160]	; 0xffffff60
   15760:	ldr	r1, [fp, #-156]	; 0xffffff64
   15764:	str	r1, [fp, #-52]	; 0xffffffcc
   15768:	str	r0, [fp, #-56]	; 0xffffffc8
   1576c:	b	15770 <__assert_fail@plt+0x43ec>
   15770:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15774:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15778:	ldr	r2, [fp, #8]
   1577c:	adds	r0, r0, r2
   15780:	adc	r1, r1, #0
   15784:	str	r0, [fp, #-240]	; 0xffffff10
   15788:	str	r1, [fp, #-236]	; 0xffffff14
   1578c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15790:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15794:	ldr	r2, [fp, #-240]	; 0xffffff10
   15798:	ldr	r3, [fp, #-236]	; 0xffffff14
   1579c:	ldr	ip, [fp, #-64]	; 0xffffffc0
   157a0:	ldr	lr, [fp, #-60]	; 0xffffffc4
   157a4:	subs	r2, r2, ip
   157a8:	sbcs	r3, r3, lr
   157ac:	mov	ip, #0
   157b0:	movwcc	ip, #1
   157b4:	adds	lr, r0, #1
   157b8:	adc	r4, r1, #0
   157bc:	cmp	ip, #0
   157c0:	movne	r1, r4
   157c4:	cmp	ip, #0
   157c8:	movne	r0, lr
   157cc:	str	r1, [fp, #-52]	; 0xffffffcc
   157d0:	str	r0, [fp, #-56]	; 0xffffffc8
   157d4:	ldr	r0, [fp, #-240]	; 0xffffff10
   157d8:	ldr	r1, [fp, #-236]	; 0xffffff14
   157dc:	str	r1, [fp, #-60]	; 0xffffffc4
   157e0:	str	r0, [fp, #-64]	; 0xffffffc0
   157e4:	str	r2, [sp, #224]	; 0xe0
   157e8:	str	r3, [sp, #220]	; 0xdc
   157ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   157f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   157f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   157f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   157fc:	subs	r0, r2, r0
   15800:	sbcs	r1, r3, r1
   15804:	str	r0, [sp, #216]	; 0xd8
   15808:	str	r1, [sp, #212]	; 0xd4
   1580c:	bcc	15864 <__assert_fail@plt+0x44e0>
   15810:	b	15814 <__assert_fail@plt+0x4490>
   15814:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15818:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1581c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15820:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15824:	eor	r1, r1, r3
   15828:	eor	r0, r0, r2
   1582c:	orr	r0, r0, r1
   15830:	cmp	r0, #0
   15834:	bne	158f0 <__assert_fail@plt+0x456c>
   15838:	b	1583c <__assert_fail@plt+0x44b8>
   1583c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15840:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15844:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15848:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1584c:	subs	r0, r0, r2
   15850:	sbcs	r1, r1, r3
   15854:	str	r0, [sp, #208]	; 0xd0
   15858:	str	r1, [sp, #204]	; 0xcc
   1585c:	bcc	158f0 <__assert_fail@plt+0x456c>
   15860:	b	15864 <__assert_fail@plt+0x44e0>
   15864:	b	15868 <__assert_fail@plt+0x44e4>
   15868:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1586c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15870:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15874:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15878:	subs	r0, r0, r2
   1587c:	sbcs	r1, r1, r3
   15880:	mov	r2, #0
   15884:	mov	r3, r2
   15888:	movwcc	r3, #1
   1588c:	str	r2, [fp, #-244]	; 0xffffff0c
   15890:	str	r3, [fp, #-248]	; 0xffffff08
   15894:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15898:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1589c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   158a0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   158a4:	subs	r2, r2, ip
   158a8:	sbc	r3, r3, lr
   158ac:	str	r2, [fp, #-64]	; 0xffffffc0
   158b0:	str	r3, [fp, #-60]	; 0xffffffc4
   158b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   158b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   158bc:	ldr	ip, [fp, #-40]	; 0xffffffd8
   158c0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   158c4:	subs	r2, r2, ip
   158c8:	sbc	r3, r3, lr
   158cc:	ldr	ip, [fp, #-248]	; 0xffffff08
   158d0:	ldr	lr, [fp, #-244]	; 0xffffff0c
   158d4:	subs	r2, r2, ip
   158d8:	sbc	r3, r3, lr
   158dc:	str	r2, [fp, #-56]	; 0xffffffc8
   158e0:	str	r3, [fp, #-52]	; 0xffffffcc
   158e4:	str	r0, [sp, #200]	; 0xc8
   158e8:	str	r1, [sp, #196]	; 0xc4
   158ec:	b	158f0 <__assert_fail@plt+0x456c>
   158f0:	b	158f4 <__assert_fail@plt+0x4570>
   158f4:	b	158f8 <__assert_fail@plt+0x4574>
   158f8:	b	158fc <__assert_fail@plt+0x4578>
   158fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15900:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15904:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15908:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1590c:	subs	r0, r0, r2
   15910:	sbcs	r1, r1, r3
   15914:	mov	r2, #0
   15918:	mov	r3, r2
   1591c:	movwcc	r3, #1
   15920:	str	r2, [fp, #-252]	; 0xffffff04
   15924:	str	r3, [fp, #-256]	; 0xffffff00
   15928:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1592c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15930:	ldr	ip, [fp, #-64]	; 0xffffffc0
   15934:	ldr	lr, [fp, #-60]	; 0xffffffc4
   15938:	subs	r2, r2, ip
   1593c:	sbc	r3, r3, lr
   15940:	str	r2, [fp, #-128]	; 0xffffff80
   15944:	str	r3, [fp, #-124]	; 0xffffff84
   15948:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1594c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15950:	ldr	ip, [fp, #-56]	; 0xffffffc8
   15954:	ldr	lr, [fp, #-52]	; 0xffffffcc
   15958:	subs	r2, r2, ip
   1595c:	sbc	r3, r3, lr
   15960:	ldr	ip, [fp, #-256]	; 0xffffff00
   15964:	ldr	lr, [fp, #-252]	; 0xffffff04
   15968:	subs	r2, r2, ip
   1596c:	sbc	r3, r3, lr
   15970:	str	r2, [fp, #-120]	; 0xffffff88
   15974:	str	r3, [fp, #-116]	; 0xffffff8c
   15978:	str	r0, [sp, #192]	; 0xc0
   1597c:	str	r1, [sp, #188]	; 0xbc
   15980:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15984:	cmn	r0, #1
   15988:	bgt	15a28 <__assert_fail@plt+0x46a4>
   1598c:	b	15990 <__assert_fail@plt+0x460c>
   15990:	b	15994 <__assert_fail@plt+0x4610>
   15994:	ldr	r0, [fp, #-128]	; 0xffffff80
   15998:	ldr	r1, [fp, #-124]	; 0xffffff84
   1599c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   159a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   159a4:	adds	r0, r0, r2
   159a8:	adc	r1, r1, r3
   159ac:	str	r0, [fp, #-264]	; 0xfffffef8
   159b0:	str	r1, [fp, #-260]	; 0xfffffefc
   159b4:	ldr	r0, [fp, #-120]	; 0xffffff88
   159b8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   159bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   159c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   159c4:	adds	r0, r0, r2
   159c8:	adc	r1, r1, r3
   159cc:	ldr	r2, [fp, #-264]	; 0xfffffef8
   159d0:	ldr	r3, [fp, #-260]	; 0xfffffefc
   159d4:	ldr	ip, [fp, #-128]	; 0xffffff80
   159d8:	ldr	lr, [fp, #-124]	; 0xffffff84
   159dc:	subs	r2, r2, ip
   159e0:	sbcs	r3, r3, lr
   159e4:	mov	ip, #0
   159e8:	movwcc	ip, #1
   159ec:	adds	lr, r0, #1
   159f0:	adc	r4, r1, #0
   159f4:	cmp	ip, #0
   159f8:	movne	r0, lr
   159fc:	cmp	ip, #0
   15a00:	movne	r1, r4
   15a04:	str	r1, [fp, #-116]	; 0xffffff8c
   15a08:	str	r0, [fp, #-120]	; 0xffffff88
   15a0c:	ldr	r0, [fp, #-264]	; 0xfffffef8
   15a10:	ldr	r1, [fp, #-260]	; 0xfffffefc
   15a14:	str	r1, [fp, #-124]	; 0xffffff84
   15a18:	str	r0, [fp, #-128]	; 0xffffff80
   15a1c:	str	r3, [sp, #184]	; 0xb8
   15a20:	str	r2, [sp, #180]	; 0xb4
   15a24:	b	15a28 <__assert_fail@plt+0x46a4>
   15a28:	b	15a2c <__assert_fail@plt+0x46a8>
   15a2c:	ldr	r2, [fp, #-104]	; 0xffffff98
   15a30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15a34:	ldr	r0, [fp, #-112]	; 0xffffff90
   15a38:	ldr	r1, [fp, #-108]	; 0xffffff94
   15a3c:	ldr	ip, [fp, #-120]	; 0xffffff88
   15a40:	ldr	lr, [fp, #-116]	; 0xffffff8c
   15a44:	ldr	r4, [fp, #-128]	; 0xffffff80
   15a48:	ldr	r5, [fp, #-124]	; 0xffffff84
   15a4c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   15a50:	ldr	r7, [fp, #-36]	; 0xffffffdc
   15a54:	ldr	r8, [fp, #-48]	; 0xffffffd0
   15a58:	ldr	r9, [fp, #-44]	; 0xffffffd4
   15a5c:	ldr	sl, [fp, #-136]	; 0xffffff78
   15a60:	str	r0, [sp, #176]	; 0xb0
   15a64:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15a68:	str	r0, [sp, #172]	; 0xac
   15a6c:	mov	r0, sp
   15a70:	str	r0, [sp, #168]	; 0xa8
   15a74:	ldr	r0, [sp, #172]	; 0xac
   15a78:	str	r1, [sp, #164]	; 0xa4
   15a7c:	ldr	r1, [sp, #168]	; 0xa8
   15a80:	str	r0, [r1, #44]	; 0x2c
   15a84:	str	sl, [r1, #40]	; 0x28
   15a88:	str	r9, [r1, #36]	; 0x24
   15a8c:	str	r8, [r1, #32]
   15a90:	str	r7, [r1, #28]
   15a94:	str	r6, [r1, #24]
   15a98:	str	r5, [r1, #20]
   15a9c:	str	r4, [r1, #16]
   15aa0:	str	lr, [r1, #12]
   15aa4:	str	ip, [r1, #8]
   15aa8:	ldr	r0, [sp, #164]	; 0xa4
   15aac:	str	r0, [r1, #4]
   15ab0:	ldr	r0, [sp, #176]	; 0xb0
   15ab4:	str	r0, [r1]
   15ab8:	sub	r0, fp, #160	; 0xa0
   15abc:	bl	18580 <__assert_fail@plt+0x71fc>
   15ac0:	str	r1, [fp, #-108]	; 0xffffff94
   15ac4:	str	r0, [fp, #-112]	; 0xffffff90
   15ac8:	ldr	r0, [fp, #-160]	; 0xffffff60
   15acc:	ldr	r1, [fp, #-156]	; 0xffffff64
   15ad0:	str	r1, [fp, #-100]	; 0xffffff9c
   15ad4:	str	r0, [fp, #-104]	; 0xffffff98
   15ad8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   15adc:	and	r0, r0, #31
   15ae0:	cmp	r0, #1
   15ae4:	bne	15b8c <__assert_fail@plt+0x4808>
   15ae8:	ldr	r2, [fp, #-104]	; 0xffffff98
   15aec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15af0:	ldr	r0, [fp, #-112]	; 0xffffff90
   15af4:	ldr	r1, [fp, #-108]	; 0xffffff94
   15af8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15afc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15b00:	ldr	r4, [fp, #-48]	; 0xffffffd0
   15b04:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15b08:	mov	r6, sp
   15b0c:	str	r5, [r6, #20]
   15b10:	str	r4, [r6, #16]
   15b14:	str	lr, [r6, #12]
   15b18:	str	ip, [r6, #8]
   15b1c:	str	r1, [r6, #4]
   15b20:	str	r0, [r6]
   15b24:	sub	r0, fp, #144	; 0x90
   15b28:	bl	19810 <__assert_fail@plt+0x848c>
   15b2c:	str	r1, [fp, #-148]	; 0xffffff6c
   15b30:	str	r0, [fp, #-152]	; 0xffffff68
   15b34:	ldr	r0, [fp, #-144]	; 0xffffff70
   15b38:	ldr	r1, [fp, #-140]	; 0xffffff74
   15b3c:	orr	r0, r0, r1
   15b40:	cmp	r0, #0
   15b44:	bne	15b68 <__assert_fail@plt+0x47e4>
   15b48:	b	15b4c <__assert_fail@plt+0x47c8>
   15b4c:	ldr	r0, [fp, #-152]	; 0xffffff68
   15b50:	ldr	r1, [fp, #-148]	; 0xffffff6c
   15b54:	eor	r0, r0, #1
   15b58:	orr	r0, r0, r1
   15b5c:	cmp	r0, #0
   15b60:	beq	15b6c <__assert_fail@plt+0x47e8>
   15b64:	b	15b68 <__assert_fail@plt+0x47e4>
   15b68:	b	15e40 <__assert_fail@plt+0x4abc>
   15b6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b70:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b74:	str	r1, [fp, #-84]	; 0xffffffac
   15b78:	str	r0, [fp, #-88]	; 0xffffffa8
   15b7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15b80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15b84:	str	r1, [fp, #-92]	; 0xffffffa4
   15b88:	str	r0, [fp, #-96]	; 0xffffffa0
   15b8c:	b	15b90 <__assert_fail@plt+0x480c>
   15b90:	ldr	r0, [fp, #-164]	; 0xffffff5c
   15b94:	mvn	r1, #0
   15b98:	add	r0, r0, r1
   15b9c:	str	r0, [fp, #-164]	; 0xffffff5c
   15ba0:	cmp	r0, #0
   15ba4:	bne	156e0 <__assert_fail@plt+0x435c>
   15ba8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15bb0:	str	r1, [fp, #-68]	; 0xffffffbc
   15bb4:	str	r0, [fp, #-72]	; 0xffffffb8
   15bb8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15bbc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15bc0:	str	r1, [fp, #-76]	; 0xffffffb4
   15bc4:	str	r0, [fp, #-80]	; 0xffffffb0
   15bc8:	ldr	r0, [fp, #-168]	; 0xffffff58
   15bcc:	str	r0, [fp, #-164]	; 0xffffff5c
   15bd0:	ldr	r0, [fp, #-168]	; 0xffffff58
   15bd4:	lsl	r0, r0, #1
   15bd8:	str	r0, [fp, #-168]	; 0xffffff58
   15bdc:	movw	r0, #0
   15be0:	str	r0, [fp, #-268]	; 0xfffffef4
   15be4:	ldr	r0, [fp, #-268]	; 0xfffffef4
   15be8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   15bec:	cmp	r0, r1
   15bf0:	bcs	15e1c <__assert_fail@plt+0x4a98>
   15bf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bf8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15bfc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15c00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15c04:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15c08:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15c0c:	ldr	r4, [fp, #-48]	; 0xffffffd0
   15c10:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15c14:	ldr	r6, [fp, #-136]	; 0xffffff78
   15c18:	ldr	r7, [fp, #-132]	; 0xffffff7c
   15c1c:	mov	r8, sp
   15c20:	str	r7, [r8, #44]	; 0x2c
   15c24:	str	r6, [r8, #40]	; 0x28
   15c28:	str	r5, [r8, #36]	; 0x24
   15c2c:	str	r4, [r8, #32]
   15c30:	str	lr, [r8, #28]
   15c34:	str	ip, [r8, #24]
   15c38:	str	r3, [r8, #20]
   15c3c:	str	r2, [r8, #16]
   15c40:	str	r1, [r8, #12]
   15c44:	str	r0, [r8, #8]
   15c48:	str	r3, [r8, #4]
   15c4c:	str	r2, [r8]
   15c50:	sub	r2, fp, #160	; 0xa0
   15c54:	str	r0, [sp, #160]	; 0xa0
   15c58:	mov	r0, r2
   15c5c:	ldr	r2, [sp, #160]	; 0xa0
   15c60:	mov	r3, r1
   15c64:	bl	18580 <__assert_fail@plt+0x71fc>
   15c68:	str	r1, [fp, #-60]	; 0xffffffc4
   15c6c:	str	r0, [fp, #-64]	; 0xffffffc0
   15c70:	ldr	r0, [fp, #-160]	; 0xffffff60
   15c74:	ldr	r1, [fp, #-156]	; 0xffffff64
   15c78:	str	r1, [fp, #-52]	; 0xffffffcc
   15c7c:	str	r0, [fp, #-56]	; 0xffffffc8
   15c80:	b	15c84 <__assert_fail@plt+0x4900>
   15c84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15c88:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15c8c:	ldr	r2, [fp, #8]
   15c90:	adds	r0, r0, r2
   15c94:	adc	r1, r1, #0
   15c98:	str	r0, [fp, #-280]	; 0xfffffee8
   15c9c:	str	r1, [fp, #-276]	; 0xfffffeec
   15ca0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ca4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ca8:	ldr	r2, [fp, #-280]	; 0xfffffee8
   15cac:	ldr	r3, [fp, #-276]	; 0xfffffeec
   15cb0:	ldr	ip, [fp, #-64]	; 0xffffffc0
   15cb4:	ldr	lr, [fp, #-60]	; 0xffffffc4
   15cb8:	subs	r2, r2, ip
   15cbc:	sbcs	r3, r3, lr
   15cc0:	mov	ip, #0
   15cc4:	movwcc	ip, #1
   15cc8:	adds	lr, r0, #1
   15ccc:	adc	r4, r1, #0
   15cd0:	cmp	ip, #0
   15cd4:	movne	r1, r4
   15cd8:	cmp	ip, #0
   15cdc:	movne	r0, lr
   15ce0:	str	r1, [fp, #-52]	; 0xffffffcc
   15ce4:	str	r0, [fp, #-56]	; 0xffffffc8
   15ce8:	ldr	r0, [fp, #-280]	; 0xfffffee8
   15cec:	ldr	r1, [fp, #-276]	; 0xfffffeec
   15cf0:	str	r1, [fp, #-60]	; 0xffffffc4
   15cf4:	str	r0, [fp, #-64]	; 0xffffffc0
   15cf8:	str	r2, [sp, #156]	; 0x9c
   15cfc:	str	r3, [sp, #152]	; 0x98
   15d00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15d0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d10:	subs	r0, r2, r0
   15d14:	sbcs	r1, r3, r1
   15d18:	str	r0, [sp, #148]	; 0x94
   15d1c:	str	r1, [sp, #144]	; 0x90
   15d20:	bcc	15d78 <__assert_fail@plt+0x49f4>
   15d24:	b	15d28 <__assert_fail@plt+0x49a4>
   15d28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15d34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d38:	eor	r1, r1, r3
   15d3c:	eor	r0, r0, r2
   15d40:	orr	r0, r0, r1
   15d44:	cmp	r0, #0
   15d48:	bne	15e04 <__assert_fail@plt+0x4a80>
   15d4c:	b	15d50 <__assert_fail@plt+0x49cc>
   15d50:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15d54:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15d58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15d5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d60:	subs	r0, r0, r2
   15d64:	sbcs	r1, r1, r3
   15d68:	str	r0, [sp, #140]	; 0x8c
   15d6c:	str	r1, [sp, #136]	; 0x88
   15d70:	bcc	15e04 <__assert_fail@plt+0x4a80>
   15d74:	b	15d78 <__assert_fail@plt+0x49f4>
   15d78:	b	15d7c <__assert_fail@plt+0x49f8>
   15d7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15d80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15d84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d8c:	subs	r0, r0, r2
   15d90:	sbcs	r1, r1, r3
   15d94:	mov	r2, #0
   15d98:	mov	r3, r2
   15d9c:	movwcc	r3, #1
   15da0:	str	r2, [fp, #-284]	; 0xfffffee4
   15da4:	str	r3, [fp, #-288]	; 0xfffffee0
   15da8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15dac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15db0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15db4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15db8:	subs	r2, r2, ip
   15dbc:	sbc	r3, r3, lr
   15dc0:	str	r2, [fp, #-64]	; 0xffffffc0
   15dc4:	str	r3, [fp, #-60]	; 0xffffffc4
   15dc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15dcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15dd0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15dd4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15dd8:	subs	r2, r2, ip
   15ddc:	sbc	r3, r3, lr
   15de0:	ldr	ip, [fp, #-288]	; 0xfffffee0
   15de4:	ldr	lr, [fp, #-284]	; 0xfffffee4
   15de8:	subs	r2, r2, ip
   15dec:	sbc	r3, r3, lr
   15df0:	str	r2, [fp, #-56]	; 0xffffffc8
   15df4:	str	r3, [fp, #-52]	; 0xffffffcc
   15df8:	str	r0, [sp, #132]	; 0x84
   15dfc:	str	r1, [sp, #128]	; 0x80
   15e00:	b	15e04 <__assert_fail@plt+0x4a80>
   15e04:	b	15e08 <__assert_fail@plt+0x4a84>
   15e08:	b	15e0c <__assert_fail@plt+0x4a88>
   15e0c:	ldr	r0, [fp, #-268]	; 0xfffffef4
   15e10:	add	r0, r0, #1
   15e14:	str	r0, [fp, #-268]	; 0xfffffef4
   15e18:	b	15be4 <__assert_fail@plt+0x4860>
   15e1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15e20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e24:	str	r1, [fp, #-84]	; 0xffffffac
   15e28:	str	r0, [fp, #-88]	; 0xffffffa8
   15e2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15e30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15e34:	str	r1, [fp, #-92]	; 0xffffffa4
   15e38:	str	r0, [fp, #-96]	; 0xffffffa0
   15e3c:	b	156dc <__assert_fail@plt+0x4358>
   15e40:	b	15e44 <__assert_fail@plt+0x4ac0>
   15e44:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15e48:	ldr	r1, [fp, #-84]	; 0xffffffac
   15e4c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15e50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e54:	ldr	ip, [fp, #-40]	; 0xffffffd8
   15e58:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15e5c:	ldr	r4, [fp, #-48]	; 0xffffffd0
   15e60:	ldr	r5, [fp, #-44]	; 0xffffffd4
   15e64:	ldr	r6, [fp, #-136]	; 0xffffff78
   15e68:	ldr	r7, [fp, #-132]	; 0xffffff7c
   15e6c:	mov	r8, sp
   15e70:	str	r7, [r8, #44]	; 0x2c
   15e74:	str	r6, [r8, #40]	; 0x28
   15e78:	str	r5, [r8, #36]	; 0x24
   15e7c:	str	r4, [r8, #32]
   15e80:	str	lr, [r8, #28]
   15e84:	str	ip, [r8, #24]
   15e88:	str	r3, [r8, #20]
   15e8c:	str	r2, [r8, #16]
   15e90:	str	r1, [r8, #12]
   15e94:	str	r0, [r8, #8]
   15e98:	str	r3, [r8, #4]
   15e9c:	str	r2, [r8]
   15ea0:	sub	r2, fp, #160	; 0xa0
   15ea4:	str	r0, [sp, #124]	; 0x7c
   15ea8:	mov	r0, r2
   15eac:	ldr	r2, [sp, #124]	; 0x7c
   15eb0:	mov	r3, r1
   15eb4:	bl	18580 <__assert_fail@plt+0x71fc>
   15eb8:	str	r1, [fp, #-92]	; 0xffffffa4
   15ebc:	str	r0, [fp, #-96]	; 0xffffffa0
   15ec0:	ldr	r0, [fp, #-160]	; 0xffffff60
   15ec4:	ldr	r1, [fp, #-156]	; 0xffffff64
   15ec8:	str	r1, [fp, #-84]	; 0xffffffac
   15ecc:	str	r0, [fp, #-88]	; 0xffffffa8
   15ed0:	b	15ed4 <__assert_fail@plt+0x4b50>
   15ed4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15ed8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15edc:	ldr	r2, [fp, #8]
   15ee0:	adds	r0, r0, r2
   15ee4:	adc	r1, r1, #0
   15ee8:	str	r0, [fp, #-296]	; 0xfffffed8
   15eec:	str	r1, [fp, #-292]	; 0xfffffedc
   15ef0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15ef4:	ldr	r1, [fp, #-84]	; 0xffffffac
   15ef8:	ldr	r2, [fp, #-296]	; 0xfffffed8
   15efc:	ldr	r3, [fp, #-292]	; 0xfffffedc
   15f00:	ldr	ip, [fp, #-96]	; 0xffffffa0
   15f04:	ldr	lr, [fp, #-92]	; 0xffffffa4
   15f08:	subs	r2, r2, ip
   15f0c:	sbcs	r3, r3, lr
   15f10:	mov	ip, #0
   15f14:	movwcc	ip, #1
   15f18:	adds	lr, r0, #1
   15f1c:	adc	r4, r1, #0
   15f20:	cmp	ip, #0
   15f24:	movne	r1, r4
   15f28:	cmp	ip, #0
   15f2c:	movne	r0, lr
   15f30:	str	r1, [fp, #-84]	; 0xffffffac
   15f34:	str	r0, [fp, #-88]	; 0xffffffa8
   15f38:	ldr	r0, [fp, #-296]	; 0xfffffed8
   15f3c:	ldr	r1, [fp, #-292]	; 0xfffffedc
   15f40:	str	r1, [fp, #-92]	; 0xffffffa4
   15f44:	str	r0, [fp, #-96]	; 0xffffffa0
   15f48:	str	r2, [sp, #120]	; 0x78
   15f4c:	str	r3, [sp, #116]	; 0x74
   15f50:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15f54:	ldr	r1, [fp, #-84]	; 0xffffffac
   15f58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f60:	subs	r0, r2, r0
   15f64:	sbcs	r1, r3, r1
   15f68:	str	r0, [sp, #112]	; 0x70
   15f6c:	str	r1, [sp, #108]	; 0x6c
   15f70:	bcc	15fc8 <__assert_fail@plt+0x4c44>
   15f74:	b	15f78 <__assert_fail@plt+0x4bf4>
   15f78:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15f7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   15f80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f88:	eor	r1, r1, r3
   15f8c:	eor	r0, r0, r2
   15f90:	orr	r0, r0, r1
   15f94:	cmp	r0, #0
   15f98:	bne	16054 <__assert_fail@plt+0x4cd0>
   15f9c:	b	15fa0 <__assert_fail@plt+0x4c1c>
   15fa0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15fa4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15fa8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15fb0:	subs	r0, r0, r2
   15fb4:	sbcs	r1, r1, r3
   15fb8:	str	r0, [sp, #104]	; 0x68
   15fbc:	str	r1, [sp, #100]	; 0x64
   15fc0:	bcc	16054 <__assert_fail@plt+0x4cd0>
   15fc4:	b	15fc8 <__assert_fail@plt+0x4c44>
   15fc8:	b	15fcc <__assert_fail@plt+0x4c48>
   15fcc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15fd0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15fd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15fd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15fdc:	subs	r0, r0, r2
   15fe0:	sbcs	r1, r1, r3
   15fe4:	mov	r2, #0
   15fe8:	mov	r3, r2
   15fec:	movwcc	r3, #1
   15ff0:	str	r2, [fp, #-300]	; 0xfffffed4
   15ff4:	str	r3, [fp, #-304]	; 0xfffffed0
   15ff8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15ffc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16000:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16004:	ldr	lr, [fp, #-44]	; 0xffffffd4
   16008:	subs	r2, r2, ip
   1600c:	sbc	r3, r3, lr
   16010:	str	r2, [fp, #-96]	; 0xffffffa0
   16014:	str	r3, [fp, #-92]	; 0xffffffa4
   16018:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1601c:	ldr	r3, [fp, #-84]	; 0xffffffac
   16020:	ldr	ip, [fp, #-40]	; 0xffffffd8
   16024:	ldr	lr, [fp, #-36]	; 0xffffffdc
   16028:	subs	r2, r2, ip
   1602c:	sbc	r3, r3, lr
   16030:	ldr	ip, [fp, #-304]	; 0xfffffed0
   16034:	ldr	lr, [fp, #-300]	; 0xfffffed4
   16038:	subs	r2, r2, ip
   1603c:	sbc	r3, r3, lr
   16040:	str	r2, [fp, #-88]	; 0xffffffa8
   16044:	str	r3, [fp, #-84]	; 0xffffffac
   16048:	str	r0, [sp, #96]	; 0x60
   1604c:	str	r1, [sp, #92]	; 0x5c
   16050:	b	16054 <__assert_fail@plt+0x4cd0>
   16054:	b	16058 <__assert_fail@plt+0x4cd4>
   16058:	b	1605c <__assert_fail@plt+0x4cd8>
   1605c:	b	16060 <__assert_fail@plt+0x4cdc>
   16060:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16064:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16068:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1606c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16070:	subs	r0, r0, r2
   16074:	sbcs	r1, r1, r3
   16078:	mov	r2, #0
   1607c:	mov	r3, r2
   16080:	movwcc	r3, #1
   16084:	str	r2, [fp, #-308]	; 0xfffffecc
   16088:	str	r3, [fp, #-312]	; 0xfffffec8
   1608c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16090:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16094:	ldr	ip, [fp, #-96]	; 0xffffffa0
   16098:	ldr	lr, [fp, #-92]	; 0xffffffa4
   1609c:	subs	r2, r2, ip
   160a0:	sbc	r3, r3, lr
   160a4:	str	r2, [fp, #-128]	; 0xffffff80
   160a8:	str	r3, [fp, #-124]	; 0xffffff84
   160ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   160b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   160b4:	ldr	ip, [fp, #-88]	; 0xffffffa8
   160b8:	ldr	lr, [fp, #-84]	; 0xffffffac
   160bc:	subs	r2, r2, ip
   160c0:	sbc	r3, r3, lr
   160c4:	ldr	ip, [fp, #-312]	; 0xfffffec8
   160c8:	ldr	lr, [fp, #-308]	; 0xfffffecc
   160cc:	subs	r2, r2, ip
   160d0:	sbc	r3, r3, lr
   160d4:	str	r2, [fp, #-120]	; 0xffffff88
   160d8:	str	r3, [fp, #-116]	; 0xffffff8c
   160dc:	str	r0, [sp, #88]	; 0x58
   160e0:	str	r1, [sp, #84]	; 0x54
   160e4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   160e8:	cmn	r0, #1
   160ec:	bgt	1618c <__assert_fail@plt+0x4e08>
   160f0:	b	160f4 <__assert_fail@plt+0x4d70>
   160f4:	b	160f8 <__assert_fail@plt+0x4d74>
   160f8:	ldr	r0, [fp, #-128]	; 0xffffff80
   160fc:	ldr	r1, [fp, #-124]	; 0xffffff84
   16100:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16104:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16108:	adds	r0, r0, r2
   1610c:	adc	r1, r1, r3
   16110:	str	r0, [fp, #-320]	; 0xfffffec0
   16114:	str	r1, [fp, #-316]	; 0xfffffec4
   16118:	ldr	r0, [fp, #-120]	; 0xffffff88
   1611c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   16120:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16124:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16128:	adds	r0, r0, r2
   1612c:	adc	r1, r1, r3
   16130:	ldr	r2, [fp, #-320]	; 0xfffffec0
   16134:	ldr	r3, [fp, #-316]	; 0xfffffec4
   16138:	ldr	ip, [fp, #-128]	; 0xffffff80
   1613c:	ldr	lr, [fp, #-124]	; 0xffffff84
   16140:	subs	r2, r2, ip
   16144:	sbcs	r3, r3, lr
   16148:	mov	ip, #0
   1614c:	movwcc	ip, #1
   16150:	adds	lr, r0, #1
   16154:	adc	r4, r1, #0
   16158:	cmp	ip, #0
   1615c:	movne	r0, lr
   16160:	cmp	ip, #0
   16164:	movne	r1, r4
   16168:	str	r1, [fp, #-116]	; 0xffffff8c
   1616c:	str	r0, [fp, #-120]	; 0xffffff88
   16170:	ldr	r0, [fp, #-320]	; 0xfffffec0
   16174:	ldr	r1, [fp, #-316]	; 0xfffffec4
   16178:	str	r1, [fp, #-124]	; 0xffffff84
   1617c:	str	r0, [fp, #-128]	; 0xffffff80
   16180:	str	r3, [sp, #80]	; 0x50
   16184:	str	r2, [sp, #76]	; 0x4c
   16188:	b	1618c <__assert_fail@plt+0x4e08>
   1618c:	b	16190 <__assert_fail@plt+0x4e0c>
   16190:	ldr	r2, [fp, #-120]	; 0xffffff88
   16194:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16198:	ldr	r0, [fp, #-128]	; 0xffffff80
   1619c:	ldr	r1, [fp, #-124]	; 0xffffff84
   161a0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   161a4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   161a8:	ldr	r4, [fp, #-48]	; 0xffffffd0
   161ac:	ldr	r5, [fp, #-44]	; 0xffffffd4
   161b0:	mov	r6, sp
   161b4:	str	r5, [r6, #20]
   161b8:	str	r4, [r6, #16]
   161bc:	str	lr, [r6, #12]
   161c0:	str	ip, [r6, #8]
   161c4:	str	r1, [r6, #4]
   161c8:	str	r0, [r6]
   161cc:	sub	r0, fp, #144	; 0x90
   161d0:	bl	19810 <__assert_fail@plt+0x848c>
   161d4:	str	r1, [fp, #-148]	; 0xffffff6c
   161d8:	str	r0, [fp, #-152]	; 0xffffff68
   161dc:	ldr	r0, [fp, #-144]	; 0xffffff70
   161e0:	ldr	r1, [fp, #-140]	; 0xffffff74
   161e4:	orr	r0, r0, r1
   161e8:	mov	r1, #0
   161ec:	cmp	r0, #0
   161f0:	str	r1, [sp, #72]	; 0x48
   161f4:	bne	16218 <__assert_fail@plt+0x4e94>
   161f8:	b	161fc <__assert_fail@plt+0x4e78>
   161fc:	ldr	r0, [fp, #-152]	; 0xffffff68
   16200:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16204:	eor	r0, r0, #1
   16208:	orr	r0, r0, r1
   1620c:	clz	r0, r0
   16210:	lsr	r0, r0, #5
   16214:	str	r0, [sp, #72]	; 0x48
   16218:	ldr	r0, [sp, #72]	; 0x48
   1621c:	tst	r0, #1
   16220:	bne	15e44 <__assert_fail@plt+0x4ac0>
   16224:	ldr	r0, [fp, #-144]	; 0xffffff70
   16228:	ldr	r1, [fp, #-140]	; 0xffffff74
   1622c:	orr	r0, r0, r1
   16230:	cmp	r0, #0
   16234:	bne	16588 <__assert_fail@plt+0x5204>
   16238:	b	1623c <__assert_fail@plt+0x4eb8>
   1623c:	b	16240 <__assert_fail@plt+0x4ebc>
   16240:	b	16244 <__assert_fail@plt+0x4ec0>
   16244:	ldr	r0, [fp, #-152]	; 0xffffff68
   16248:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1624c:	str	r1, [fp, #-340]	; 0xfffffeac
   16250:	str	r0, [fp, #-344]	; 0xfffffea8
   16254:	ldr	r0, [fp, #-344]	; 0xfffffea8
   16258:	ldr	r1, [fp, #-340]	; 0xfffffeac
   1625c:	lsrs	r1, r1, #1
   16260:	rrx	r0, r0
   16264:	and	r0, r0, #127	; 0x7f
   16268:	movw	r2, #30422	; 0x76d6
   1626c:	movt	r2, #3
   16270:	ldrb	r0, [r2, r0]
   16274:	mov	r2, #0
   16278:	str	r2, [fp, #-348]	; 0xfffffea4
   1627c:	str	r0, [fp, #-352]	; 0xfffffea0
   16280:	ldr	r0, [fp, #-352]	; 0xfffffea0
   16284:	ldr	r2, [fp, #-348]	; 0xfffffea4
   16288:	lsl	r3, r2, #1
   1628c:	orr	r3, r3, r0, lsr #31
   16290:	umull	ip, lr, r0, r0
   16294:	mla	lr, r0, r2, lr
   16298:	mla	r2, r0, r2, lr
   1629c:	ldr	lr, [fp, #-344]	; 0xfffffea8
   162a0:	ldr	r4, [fp, #-340]	; 0xfffffeac
   162a4:	umull	r5, r6, ip, lr
   162a8:	mla	ip, ip, r4, r6
   162ac:	mla	r2, r2, lr, ip
   162b0:	rsbs	r0, r5, r0, lsl #1
   162b4:	sbc	r2, r3, r2
   162b8:	str	r0, [fp, #-352]	; 0xfffffea0
   162bc:	str	r2, [fp, #-348]	; 0xfffffea4
   162c0:	ldr	r0, [fp, #-352]	; 0xfffffea0
   162c4:	ldr	r2, [fp, #-348]	; 0xfffffea4
   162c8:	lsl	r3, r2, #1
   162cc:	orr	r3, r3, r0, lsr #31
   162d0:	umull	ip, lr, r0, r0
   162d4:	mla	lr, r0, r2, lr
   162d8:	mla	r2, r0, r2, lr
   162dc:	ldr	lr, [fp, #-344]	; 0xfffffea8
   162e0:	ldr	r4, [fp, #-340]	; 0xfffffeac
   162e4:	umull	r5, r6, ip, lr
   162e8:	mla	ip, ip, r4, r6
   162ec:	mla	r2, r2, lr, ip
   162f0:	rsbs	r0, r5, r0, lsl #1
   162f4:	sbc	r2, r3, r2
   162f8:	str	r0, [fp, #-352]	; 0xfffffea0
   162fc:	str	r2, [fp, #-348]	; 0xfffffea4
   16300:	ldr	r0, [fp, #-352]	; 0xfffffea0
   16304:	ldr	r2, [fp, #-348]	; 0xfffffea4
   16308:	lsl	r3, r2, #1
   1630c:	orr	r3, r3, r0, lsr #31
   16310:	umull	ip, lr, r0, r0
   16314:	mla	lr, r0, r2, lr
   16318:	mla	r2, r0, r2, lr
   1631c:	ldr	lr, [fp, #-344]	; 0xfffffea8
   16320:	ldr	r4, [fp, #-340]	; 0xfffffeac
   16324:	umull	r5, r6, ip, lr
   16328:	mla	ip, ip, r4, r6
   1632c:	mla	r2, r2, lr, ip
   16330:	rsbs	r0, r5, r0, lsl #1
   16334:	sbc	r2, r3, r2
   16338:	str	r0, [fp, #-352]	; 0xfffffea0
   1633c:	str	r2, [fp, #-348]	; 0xfffffea4
   16340:	ldr	r0, [fp, #-352]	; 0xfffffea0
   16344:	ldr	r2, [fp, #-348]	; 0xfffffea4
   16348:	str	r2, [fp, #-324]	; 0xfffffebc
   1634c:	str	r0, [fp, #-328]	; 0xfffffeb8
   16350:	str	r1, [sp, #68]	; 0x44
   16354:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16358:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1635c:	ldr	r2, [fp, #-328]	; 0xfffffeb8
   16360:	ldr	r3, [fp, #-324]	; 0xfffffebc
   16364:	umull	ip, lr, r0, r2
   16368:	mla	r0, r0, r3, lr
   1636c:	mla	r0, r1, r2, r0
   16370:	str	ip, [fp, #-336]	; 0xfffffeb0
   16374:	str	r0, [fp, #-332]	; 0xfffffeb4
   16378:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1637c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16380:	ldr	r2, [fp, #-152]	; 0xffffff68
   16384:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16388:	subs	r0, r0, r2
   1638c:	sbcs	r1, r1, r3
   16390:	str	r0, [sp, #64]	; 0x40
   16394:	str	r1, [sp, #60]	; 0x3c
   16398:	bcc	16518 <__assert_fail@plt+0x5194>
   1639c:	b	163a0 <__assert_fail@plt+0x501c>
   163a0:	b	163a4 <__assert_fail@plt+0x5020>
   163a4:	ldr	r0, [fp, #-336]	; 0xfffffeb0
   163a8:	ldr	r1, [fp, #-332]	; 0xfffffeb4
   163ac:	str	r1, [sp, #348]	; 0x15c
   163b0:	str	r0, [sp, #344]	; 0x158
   163b4:	ldr	r0, [fp, #-152]	; 0xffffff68
   163b8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   163bc:	str	r1, [sp, #340]	; 0x154
   163c0:	str	r0, [sp, #336]	; 0x150
   163c4:	ldr	r0, [sp, #344]	; 0x158
   163c8:	str	r0, [sp, #364]	; 0x16c
   163cc:	ldr	r0, [sp, #348]	; 0x15c
   163d0:	str	r0, [sp, #356]	; 0x164
   163d4:	ldr	r0, [sp, #336]	; 0x150
   163d8:	str	r0, [sp, #360]	; 0x168
   163dc:	ldr	r0, [sp, #340]	; 0x154
   163e0:	str	r0, [sp, #352]	; 0x160
   163e4:	ldr	r0, [sp, #364]	; 0x16c
   163e8:	ldr	r1, [sp, #360]	; 0x168
   163ec:	umull	r0, r1, r0, r1
   163f0:	str	r1, [fp, #-372]	; 0xfffffe8c
   163f4:	str	r0, [fp, #-376]	; 0xfffffe88
   163f8:	ldr	r0, [sp, #364]	; 0x16c
   163fc:	ldr	r1, [sp, #352]	; 0x160
   16400:	umull	r0, r1, r0, r1
   16404:	str	r1, [sp, #388]	; 0x184
   16408:	str	r0, [sp, #384]	; 0x180
   1640c:	ldr	r0, [sp, #356]	; 0x164
   16410:	ldr	r1, [sp, #360]	; 0x168
   16414:	umull	r0, r1, r0, r1
   16418:	str	r1, [sp, #380]	; 0x17c
   1641c:	str	r0, [sp, #376]	; 0x178
   16420:	ldr	r0, [sp, #356]	; 0x164
   16424:	ldr	r1, [sp, #352]	; 0x160
   16428:	umull	r0, r1, r0, r1
   1642c:	str	r1, [sp, #372]	; 0x174
   16430:	str	r0, [sp, #368]	; 0x170
   16434:	ldr	r0, [fp, #-372]	; 0xfffffe8c
   16438:	ldr	r1, [sp, #384]	; 0x180
   1643c:	ldr	r2, [sp, #388]	; 0x184
   16440:	adds	r0, r1, r0
   16444:	adc	r1, r2, #0
   16448:	str	r0, [sp, #384]	; 0x180
   1644c:	str	r1, [sp, #388]	; 0x184
   16450:	ldr	r0, [sp, #376]	; 0x178
   16454:	ldr	r1, [sp, #380]	; 0x17c
   16458:	ldr	r2, [sp, #384]	; 0x180
   1645c:	ldr	r3, [sp, #388]	; 0x184
   16460:	adds	r0, r2, r0
   16464:	adc	r1, r3, r1
   16468:	str	r0, [sp, #384]	; 0x180
   1646c:	str	r1, [sp, #388]	; 0x184
   16470:	ldr	r0, [sp, #384]	; 0x180
   16474:	ldr	r1, [sp, #388]	; 0x184
   16478:	ldr	r2, [sp, #376]	; 0x178
   1647c:	ldr	r3, [sp, #380]	; 0x17c
   16480:	subs	r0, r0, r2
   16484:	sbcs	r1, r1, r3
   16488:	str	r0, [sp, #56]	; 0x38
   1648c:	str	r1, [sp, #52]	; 0x34
   16490:	bcs	164a4 <__assert_fail@plt+0x5120>
   16494:	b	16498 <__assert_fail@plt+0x5114>
   16498:	ldr	r0, [sp, #372]	; 0x174
   1649c:	add	r0, r0, #1
   164a0:	str	r0, [sp, #372]	; 0x174
   164a4:	ldr	r0, [sp, #368]	; 0x170
   164a8:	ldr	r1, [sp, #372]	; 0x174
   164ac:	ldr	r2, [sp, #388]	; 0x184
   164b0:	adds	r0, r0, r2
   164b4:	adc	r1, r1, #0
   164b8:	str	r0, [fp, #-360]	; 0xfffffe98
   164bc:	str	r1, [fp, #-356]	; 0xfffffe9c
   164c0:	ldr	r0, [sp, #384]	; 0x180
   164c4:	ldr	r1, [fp, #-376]	; 0xfffffe88
   164c8:	str	r0, [fp, #-364]	; 0xfffffe94
   164cc:	str	r1, [fp, #-368]	; 0xfffffe90
   164d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   164d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   164d8:	ldr	r2, [fp, #-360]	; 0xfffffe98
   164dc:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   164e0:	subs	r0, r0, r2
   164e4:	sbc	r1, r1, r3
   164e8:	ldr	r2, [fp, #-328]	; 0xfffffeb8
   164ec:	ldr	r3, [fp, #-324]	; 0xfffffebc
   164f0:	umull	ip, lr, r0, r2
   164f4:	mla	r0, r0, r3, lr
   164f8:	mla	r0, r1, r2, r0
   164fc:	str	ip, [fp, #-40]	; 0xffffffd8
   16500:	str	r0, [fp, #-36]	; 0xffffffdc
   16504:	ldr	r0, [fp, #-336]	; 0xfffffeb0
   16508:	ldr	r1, [fp, #-332]	; 0xfffffeb4
   1650c:	str	r1, [fp, #-44]	; 0xffffffd4
   16510:	str	r0, [fp, #-48]	; 0xffffffd0
   16514:	b	16534 <__assert_fail@plt+0x51b0>
   16518:	ldr	r0, [fp, #-336]	; 0xfffffeb0
   1651c:	ldr	r1, [fp, #-332]	; 0xfffffeb4
   16520:	str	r1, [fp, #-44]	; 0xffffffd4
   16524:	str	r0, [fp, #-48]	; 0xffffffd0
   16528:	mov	r0, #0
   1652c:	str	r0, [fp, #-36]	; 0xffffffdc
   16530:	str	r0, [fp, #-40]	; 0xffffffd8
   16534:	b	16538 <__assert_fail@plt+0x51b4>
   16538:	ldr	r0, [fp, #-152]	; 0xffffff68
   1653c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16540:	bl	16bb0 <__assert_fail@plt+0x582c>
   16544:	tst	r0, #1
   16548:	bne	16568 <__assert_fail@plt+0x51e4>
   1654c:	ldr	r0, [fp, #-152]	; 0xffffff68
   16550:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16554:	ldr	r2, [fp, #8]
   16558:	add	r2, r2, #1
   1655c:	ldr	r3, [fp, #12]
   16560:	bl	146d4 <__assert_fail@plt+0x3350>
   16564:	b	16584 <__assert_fail@plt+0x5200>
   16568:	ldr	r0, [fp, #12]
   1656c:	ldr	r2, [fp, #-152]	; 0xffffff68
   16570:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16574:	mov	r1, sp
   16578:	mov	ip, #1
   1657c:	str	ip, [r1]
   16580:	bl	16958 <__assert_fail@plt+0x55d4>
   16584:	b	167c0 <__assert_fail@plt+0x543c>
   16588:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1658c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16590:	ldr	r2, [fp, #-144]	; 0xffffff70
   16594:	ldr	r3, [fp, #-140]	; 0xffffff74
   16598:	eor	r1, r1, r3
   1659c:	eor	r0, r0, r2
   165a0:	orr	r0, r0, r1
   165a4:	cmp	r0, #0
   165a8:	bne	16608 <__assert_fail@plt+0x5284>
   165ac:	b	165b0 <__assert_fail@plt+0x522c>
   165b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   165b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165b8:	ldr	r2, [fp, #-152]	; 0xffffff68
   165bc:	ldr	r3, [fp, #-148]	; 0xffffff6c
   165c0:	eor	r1, r1, r3
   165c4:	eor	r0, r0, r2
   165c8:	orr	r0, r0, r1
   165cc:	cmp	r0, #0
   165d0:	bne	16608 <__assert_fail@plt+0x5284>
   165d4:	b	165d8 <__assert_fail@plt+0x5254>
   165d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   165e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   165e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   165e8:	ldr	ip, [fp, #8]
   165ec:	add	ip, ip, #1
   165f0:	ldr	lr, [fp, #12]
   165f4:	mov	r4, sp
   165f8:	str	lr, [r4, #4]
   165fc:	str	ip, [r4]
   16600:	bl	15180 <__assert_fail@plt+0x3dfc>
   16604:	b	16950 <__assert_fail@plt+0x55cc>
   16608:	b	1660c <__assert_fail@plt+0x5288>
   1660c:	ldr	r0, [fp, #-152]	; 0xffffff68
   16610:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16614:	str	r1, [sp, #324]	; 0x144
   16618:	str	r0, [sp, #320]	; 0x140
   1661c:	ldr	r0, [sp, #320]	; 0x140
   16620:	ldr	r1, [sp, #324]	; 0x144
   16624:	lsrs	r1, r1, #1
   16628:	rrx	r0, r0
   1662c:	and	r0, r0, #127	; 0x7f
   16630:	movw	r2, #30422	; 0x76d6
   16634:	movt	r2, #3
   16638:	ldrb	r0, [r2, r0]
   1663c:	mov	r2, #0
   16640:	str	r2, [sp, #316]	; 0x13c
   16644:	str	r0, [sp, #312]	; 0x138
   16648:	ldr	r0, [sp, #312]	; 0x138
   1664c:	ldr	r2, [sp, #316]	; 0x13c
   16650:	lsl	r3, r2, #1
   16654:	orr	r3, r3, r0, lsr #31
   16658:	umull	ip, lr, r0, r0
   1665c:	mla	lr, r0, r2, lr
   16660:	mla	r2, r0, r2, lr
   16664:	ldr	lr, [sp, #320]	; 0x140
   16668:	ldr	r4, [sp, #324]	; 0x144
   1666c:	umull	r5, r6, ip, lr
   16670:	mla	ip, ip, r4, r6
   16674:	mla	r2, r2, lr, ip
   16678:	rsbs	r0, r5, r0, lsl #1
   1667c:	sbc	r2, r3, r2
   16680:	str	r0, [sp, #312]	; 0x138
   16684:	str	r2, [sp, #316]	; 0x13c
   16688:	ldr	r0, [sp, #312]	; 0x138
   1668c:	ldr	r2, [sp, #316]	; 0x13c
   16690:	lsl	r3, r2, #1
   16694:	orr	r3, r3, r0, lsr #31
   16698:	umull	ip, lr, r0, r0
   1669c:	mla	lr, r0, r2, lr
   166a0:	mla	r2, r0, r2, lr
   166a4:	ldr	lr, [sp, #320]	; 0x140
   166a8:	ldr	r4, [sp, #324]	; 0x144
   166ac:	umull	r5, r6, ip, lr
   166b0:	mla	ip, ip, r4, r6
   166b4:	mla	r2, r2, lr, ip
   166b8:	rsbs	r0, r5, r0, lsl #1
   166bc:	sbc	r2, r3, r2
   166c0:	str	r0, [sp, #312]	; 0x138
   166c4:	str	r2, [sp, #316]	; 0x13c
   166c8:	ldr	r0, [sp, #312]	; 0x138
   166cc:	ldr	r2, [sp, #316]	; 0x13c
   166d0:	lsl	r3, r2, #1
   166d4:	orr	r3, r3, r0, lsr #31
   166d8:	umull	ip, lr, r0, r0
   166dc:	mla	lr, r0, r2, lr
   166e0:	mla	r2, r0, r2, lr
   166e4:	ldr	lr, [sp, #320]	; 0x140
   166e8:	ldr	r4, [sp, #324]	; 0x144
   166ec:	umull	r5, r6, ip, lr
   166f0:	mla	ip, ip, r4, r6
   166f4:	mla	r2, r2, lr, ip
   166f8:	rsbs	r0, r5, r0, lsl #1
   166fc:	sbc	r2, r3, r2
   16700:	str	r0, [sp, #312]	; 0x138
   16704:	str	r2, [sp, #316]	; 0x13c
   16708:	ldr	r0, [sp, #312]	; 0x138
   1670c:	ldr	r2, [sp, #316]	; 0x13c
   16710:	str	r2, [sp, #332]	; 0x14c
   16714:	str	r0, [sp, #328]	; 0x148
   16718:	str	r1, [sp, #48]	; 0x30
   1671c:	ldr	r0, [sp, #328]	; 0x148
   16720:	ldr	r1, [sp, #332]	; 0x14c
   16724:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16728:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1672c:	umull	ip, lr, r0, r2
   16730:	mla	r0, r0, r3, lr
   16734:	mla	r0, r1, r2, r0
   16738:	str	ip, [fp, #-48]	; 0xffffffd0
   1673c:	str	r0, [fp, #-44]	; 0xffffffd4
   16740:	mov	r0, #0
   16744:	str	r0, [fp, #-36]	; 0xffffffdc
   16748:	str	r0, [fp, #-40]	; 0xffffffd8
   1674c:	ldr	r0, [fp, #-144]	; 0xffffff70
   16750:	ldr	r1, [fp, #-140]	; 0xffffff74
   16754:	ldr	r2, [fp, #-152]	; 0xffffff68
   16758:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1675c:	bl	13484 <__assert_fail@plt+0x2100>
   16760:	tst	r0, #1
   16764:	bne	16798 <__assert_fail@plt+0x5414>
   16768:	ldr	r0, [fp, #-144]	; 0xffffff70
   1676c:	ldr	r1, [fp, #-140]	; 0xffffff74
   16770:	ldr	r2, [fp, #-152]	; 0xffffff68
   16774:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16778:	ldr	ip, [fp, #8]
   1677c:	add	ip, ip, #1
   16780:	ldr	lr, [fp, #12]
   16784:	mov	r4, sp
   16788:	str	lr, [r4, #4]
   1678c:	str	ip, [r4]
   16790:	bl	15180 <__assert_fail@plt+0x3dfc>
   16794:	b	167bc <__assert_fail@plt+0x5438>
   16798:	ldr	r0, [fp, #12]
   1679c:	ldr	r2, [fp, #-144]	; 0xffffff70
   167a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   167a4:	ldr	r1, [fp, #-152]	; 0xffffff68
   167a8:	ldr	ip, [fp, #-148]	; 0xffffff6c
   167ac:	mov	lr, sp
   167b0:	str	ip, [lr, #4]
   167b4:	str	r1, [lr]
   167b8:	bl	14604 <__assert_fail@plt+0x3280>
   167bc:	b	167c0 <__assert_fail@plt+0x543c>
   167c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   167c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   167c8:	orr	r0, r0, r1
   167cc:	cmp	r0, #0
   167d0:	bne	16824 <__assert_fail@plt+0x54a0>
   167d4:	b	167d8 <__assert_fail@plt+0x5454>
   167d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   167e0:	bl	16bb0 <__assert_fail@plt+0x582c>
   167e4:	tst	r0, #1
   167e8:	beq	1680c <__assert_fail@plt+0x5488>
   167ec:	ldr	r0, [fp, #12]
   167f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   167f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   167f8:	mov	r1, sp
   167fc:	mov	ip, #1
   16800:	str	ip, [r1]
   16804:	bl	16958 <__assert_fail@plt+0x55d4>
   16808:	b	16950 <__assert_fail@plt+0x55cc>
   1680c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16814:	ldr	r2, [fp, #8]
   16818:	ldr	r3, [fp, #12]
   1681c:	bl	146d4 <__assert_fail@plt+0x3350>
   16820:	b	16950 <__assert_fail@plt+0x55cc>
   16824:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16828:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1682c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16834:	bl	13484 <__assert_fail@plt+0x2100>
   16838:	tst	r0, #1
   1683c:	beq	16868 <__assert_fail@plt+0x54e4>
   16840:	ldr	r0, [fp, #12]
   16844:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16848:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1684c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16850:	ldr	ip, [fp, #-44]	; 0xffffffd4
   16854:	mov	lr, sp
   16858:	str	ip, [lr, #4]
   1685c:	str	r1, [lr]
   16860:	bl	14604 <__assert_fail@plt+0x3280>
   16864:	b	16950 <__assert_fail@plt+0x55cc>
   16868:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1686c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16870:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16874:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16878:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1687c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   16880:	ldr	r4, [fp, #-48]	; 0xffffffd0
   16884:	ldr	r5, [fp, #-44]	; 0xffffffd4
   16888:	mov	r6, sp
   1688c:	str	r5, [r6, #20]
   16890:	str	r4, [r6, #16]
   16894:	str	lr, [r6, #12]
   16898:	str	ip, [r6, #8]
   1689c:	str	r1, [r6, #4]
   168a0:	str	r0, [r6]
   168a4:	sub	r0, fp, #56	; 0x38
   168a8:	bl	19c7c <__assert_fail@plt+0x88f8>
   168ac:	str	r1, [fp, #-60]	; 0xffffffc4
   168b0:	str	r0, [fp, #-64]	; 0xffffffc0
   168b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   168b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   168bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   168c0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   168c4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   168c8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   168cc:	ldr	r4, [fp, #-48]	; 0xffffffd0
   168d0:	ldr	r5, [fp, #-44]	; 0xffffffd4
   168d4:	mov	r6, sp
   168d8:	str	r5, [r6, #20]
   168dc:	str	r4, [r6, #16]
   168e0:	str	lr, [r6, #12]
   168e4:	str	ip, [r6, #8]
   168e8:	str	r1, [r6, #4]
   168ec:	str	r0, [r6]
   168f0:	sub	r0, fp, #72	; 0x48
   168f4:	bl	19c7c <__assert_fail@plt+0x88f8>
   168f8:	str	r1, [fp, #-76]	; 0xffffffb4
   168fc:	str	r0, [fp, #-80]	; 0xffffffb0
   16900:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16904:	ldr	r3, [fp, #-84]	; 0xffffffac
   16908:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1690c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16910:	ldr	ip, [fp, #-40]	; 0xffffffd8
   16914:	ldr	lr, [fp, #-36]	; 0xffffffdc
   16918:	ldr	r4, [fp, #-48]	; 0xffffffd0
   1691c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   16920:	mov	r6, sp
   16924:	str	r5, [r6, #20]
   16928:	str	r4, [r6, #16]
   1692c:	str	lr, [r6, #12]
   16930:	str	ip, [r6, #8]
   16934:	str	r1, [r6, #4]
   16938:	str	r0, [r6]
   1693c:	sub	r0, fp, #88	; 0x58
   16940:	bl	19c7c <__assert_fail@plt+0x88f8>
   16944:	str	r1, [fp, #-92]	; 0xffffffa4
   16948:	str	r0, [fp, #-96]	; 0xffffffa0
   1694c:	b	1557c <__assert_fail@plt+0x41f8>
   16950:	sub	sp, fp, #28
   16954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16958:	sub	sp, sp, #48	; 0x30
   1695c:	ldr	r1, [sp, #48]	; 0x30
   16960:	str	r0, [sp, #44]	; 0x2c
   16964:	str	r3, [sp, #36]	; 0x24
   16968:	str	r2, [sp, #32]
   1696c:	ldr	r0, [sp, #44]	; 0x2c
   16970:	ldrb	r0, [r0, #250]	; 0xfa
   16974:	str	r0, [sp, #28]
   16978:	ldr	r0, [sp, #44]	; 0x2c
   1697c:	add	r0, r0, #16
   16980:	str	r0, [sp, #24]
   16984:	ldr	r0, [sp, #44]	; 0x2c
   16988:	add	r0, r0, #224	; 0xe0
   1698c:	str	r0, [sp, #20]
   16990:	ldr	r0, [sp, #28]
   16994:	sub	r0, r0, #1
   16998:	str	r0, [sp, #16]
   1699c:	str	r1, [sp, #8]
   169a0:	ldr	r0, [sp, #16]
   169a4:	cmp	r0, #0
   169a8:	blt	169f8 <__assert_fail@plt+0x5674>
   169ac:	ldr	r0, [sp, #24]
   169b0:	ldr	r1, [sp, #16]
   169b4:	ldr	r1, [r0, r1, lsl #3]!
   169b8:	ldr	r0, [r0, #4]
   169bc:	ldr	r2, [sp, #32]
   169c0:	ldr	r3, [sp, #36]	; 0x24
   169c4:	subs	r1, r2, r1
   169c8:	sbcs	r0, r3, r0
   169cc:	str	r1, [sp, #4]
   169d0:	str	r0, [sp]
   169d4:	bcc	169e0 <__assert_fail@plt+0x565c>
   169d8:	b	169dc <__assert_fail@plt+0x5658>
   169dc:	b	169f8 <__assert_fail@plt+0x5674>
   169e0:	b	169e4 <__assert_fail@plt+0x5660>
   169e4:	ldr	r0, [sp, #16]
   169e8:	mvn	r1, #0
   169ec:	add	r0, r0, r1
   169f0:	str	r0, [sp, #16]
   169f4:	b	169a0 <__assert_fail@plt+0x561c>
   169f8:	ldr	r0, [sp, #16]
   169fc:	cmp	r0, #0
   16a00:	blt	16a34 <__assert_fail@plt+0x56b0>
   16a04:	ldr	r0, [sp, #24]
   16a08:	ldr	r1, [sp, #16]
   16a0c:	ldr	r1, [r0, r1, lsl #3]!
   16a10:	ldr	r0, [r0, #4]
   16a14:	ldr	r2, [sp, #32]
   16a18:	ldr	r3, [sp, #36]	; 0x24
   16a1c:	eor	r1, r1, r2
   16a20:	eor	r0, r0, r3
   16a24:	orr	r0, r1, r0
   16a28:	cmp	r0, #0
   16a2c:	beq	16ae8 <__assert_fail@plt+0x5764>
   16a30:	b	16a34 <__assert_fail@plt+0x56b0>
   16a34:	ldr	r0, [sp, #28]
   16a38:	sub	r0, r0, #1
   16a3c:	str	r0, [sp, #12]
   16a40:	ldr	r0, [sp, #12]
   16a44:	ldr	r1, [sp, #16]
   16a48:	cmp	r0, r1
   16a4c:	ble	16aa0 <__assert_fail@plt+0x571c>
   16a50:	ldr	r0, [sp, #24]
   16a54:	ldr	r1, [sp, #12]
   16a58:	ldr	r1, [r0, r1, lsl #3]!
   16a5c:	ldr	r2, [r0, #4]
   16a60:	str	r2, [r0, #12]
   16a64:	str	r1, [r0, #8]
   16a68:	ldr	r0, [sp, #20]
   16a6c:	ldr	r1, [sp, #12]
   16a70:	add	r0, r0, r1
   16a74:	ldrb	r0, [r0]
   16a78:	ldr	r1, [sp, #20]
   16a7c:	ldr	r2, [sp, #12]
   16a80:	add	r2, r2, #1
   16a84:	add	r1, r1, r2
   16a88:	strb	r0, [r1]
   16a8c:	ldr	r0, [sp, #12]
   16a90:	mvn	r1, #0
   16a94:	add	r0, r0, r1
   16a98:	str	r0, [sp, #12]
   16a9c:	b	16a40 <__assert_fail@plt+0x56bc>
   16aa0:	ldr	r0, [sp, #32]
   16aa4:	ldr	r1, [sp, #36]	; 0x24
   16aa8:	ldr	r2, [sp, #24]
   16aac:	ldr	r3, [sp, #16]
   16ab0:	add	r2, r2, r3, lsl #3
   16ab4:	str	r1, [r2, #12]
   16ab8:	str	r0, [r2, #8]
   16abc:	ldr	r0, [sp, #48]	; 0x30
   16ac0:	ldr	r1, [sp, #20]
   16ac4:	ldr	r2, [sp, #16]
   16ac8:	add	r2, r2, #1
   16acc:	add	r1, r1, r2
   16ad0:	strb	r0, [r1]
   16ad4:	ldr	r0, [sp, #28]
   16ad8:	add	r0, r0, #1
   16adc:	ldr	r1, [sp, #44]	; 0x2c
   16ae0:	strb	r0, [r1, #250]	; 0xfa
   16ae4:	b	16b04 <__assert_fail@plt+0x5780>
   16ae8:	ldr	r0, [sp, #48]	; 0x30
   16aec:	ldr	r1, [sp, #20]
   16af0:	ldr	r2, [sp, #16]
   16af4:	add	r1, r1, r2
   16af8:	ldrb	r2, [r1]
   16afc:	add	r0, r2, r0
   16b00:	strb	r0, [r1]
   16b04:	add	sp, sp, #48	; 0x30
   16b08:	bx	lr
   16b0c:	push	{fp, lr}
   16b10:	mov	fp, sp
   16b14:	sub	sp, sp, #32
   16b18:	ldr	r1, [fp, #12]
   16b1c:	ldr	ip, [fp, #8]
   16b20:	str	r0, [fp, #-4]
   16b24:	str	r3, [sp, #20]
   16b28:	str	r2, [sp, #16]
   16b2c:	movw	r0, #0
   16b30:	str	r0, [sp, #12]
   16b34:	str	ip, [sp, #8]
   16b38:	str	r1, [sp, #4]
   16b3c:	ldr	r0, [sp, #12]
   16b40:	ldr	r1, [fp, #12]
   16b44:	cmp	r0, r1
   16b48:	bcs	16b8c <__assert_fail@plt+0x5808>
   16b4c:	ldr	r0, [fp, #8]
   16b50:	ldr	r1, [sp, #12]
   16b54:	add	r0, r0, r1
   16b58:	movw	r1, #29072	; 0x7190
   16b5c:	movt	r1, #3
   16b60:	ldrb	r0, [r1, r0]
   16b64:	ldr	r1, [sp, #16]
   16b68:	ldr	r2, [sp, #20]
   16b6c:	adds	r0, r1, r0
   16b70:	adc	r1, r2, #0
   16b74:	str	r0, [sp, #16]
   16b78:	str	r1, [sp, #20]
   16b7c:	ldr	r0, [sp, #12]
   16b80:	add	r0, r0, #1
   16b84:	str	r0, [sp, #12]
   16b88:	b	16b3c <__assert_fail@plt+0x57b8>
   16b8c:	ldr	r0, [fp, #-4]
   16b90:	ldr	r2, [sp, #16]
   16b94:	ldr	r3, [sp, #20]
   16b98:	mov	r1, sp
   16b9c:	mov	ip, #1
   16ba0:	str	ip, [r1]
   16ba4:	bl	16958 <__assert_fail@plt+0x55d4>
   16ba8:	mov	sp, fp
   16bac:	pop	{fp, pc}
   16bb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16bb4:	add	fp, sp, #24
   16bb8:	sub	sp, sp, #736	; 0x2e0
   16bbc:	str	r0, [fp, #-40]	; 0xffffffd8
   16bc0:	str	r1, [fp, #-36]	; 0xffffffdc
   16bc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16bcc:	rsbs	r0, r0, #1
   16bd0:	rscs	r1, r1, #0
   16bd4:	str	r0, [sp, #172]	; 0xac
   16bd8:	str	r1, [sp, #168]	; 0xa8
   16bdc:	bcc	16bf4 <__assert_fail@plt+0x5870>
   16be0:	b	16be4 <__assert_fail@plt+0x5860>
   16be4:	movw	r0, #0
   16be8:	and	r0, r0, #1
   16bec:	strb	r0, [fp, #-29]	; 0xffffffe3
   16bf0:	b	17718 <__assert_fail@plt+0x6394>
   16bf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16bfc:	movw	r2, #60792	; 0xed78
   16c00:	movt	r2, #381	; 0x17d
   16c04:	subs	r0, r2, r0
   16c08:	rscs	r1, r1, #0
   16c0c:	str	r0, [sp, #164]	; 0xa4
   16c10:	str	r1, [sp, #160]	; 0xa0
   16c14:	bcc	16c2c <__assert_fail@plt+0x58a8>
   16c18:	b	16c1c <__assert_fail@plt+0x5898>
   16c1c:	movw	r0, #1
   16c20:	and	r0, r0, #1
   16c24:	strb	r0, [fp, #-29]	; 0xffffffe3
   16c28:	b	17718 <__assert_fail@plt+0x6394>
   16c2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16c34:	subs	r0, r0, #1
   16c38:	sbc	r1, r1, #0
   16c3c:	str	r0, [fp, #-336]	; 0xfffffeb0
   16c40:	str	r1, [fp, #-332]	; 0xfffffeb4
   16c44:	movw	r0, #0
   16c48:	str	r0, [fp, #-44]	; 0xffffffd4
   16c4c:	ldrb	r0, [fp, #-336]	; 0xfffffeb0
   16c50:	tst	r0, #1
   16c54:	bne	16c84 <__assert_fail@plt+0x5900>
   16c58:	b	16c5c <__assert_fail@plt+0x58d8>
   16c5c:	ldr	r0, [fp, #-336]	; 0xfffffeb0
   16c60:	ldr	r1, [fp, #-332]	; 0xfffffeb4
   16c64:	lsrs	r1, r1, #1
   16c68:	rrx	r0, r0
   16c6c:	str	r1, [fp, #-332]	; 0xfffffeb4
   16c70:	str	r0, [fp, #-336]	; 0xfffffeb0
   16c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16c78:	add	r0, r0, #1
   16c7c:	str	r0, [fp, #-44]	; 0xffffffd4
   16c80:	b	16c4c <__assert_fail@plt+0x58c8>
   16c84:	mov	r0, #0
   16c88:	str	r0, [fp, #-340]	; 0xfffffeac
   16c8c:	mov	r0, #2
   16c90:	str	r0, [fp, #-344]	; 0xfffffea8
   16c94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16c9c:	str	r1, [fp, #-348]	; 0xfffffea4
   16ca0:	str	r0, [fp, #-352]	; 0xfffffea0
   16ca4:	ldr	r0, [fp, #-352]	; 0xfffffea0
   16ca8:	ldr	r1, [fp, #-348]	; 0xfffffea4
   16cac:	lsrs	r1, r1, #1
   16cb0:	rrx	r0, r0
   16cb4:	and	r0, r0, #127	; 0x7f
   16cb8:	movw	r2, #30422	; 0x76d6
   16cbc:	movt	r2, #3
   16cc0:	ldrb	r0, [r2, r0]
   16cc4:	mov	r2, #0
   16cc8:	str	r2, [fp, #-356]	; 0xfffffe9c
   16ccc:	str	r0, [fp, #-360]	; 0xfffffe98
   16cd0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16cd4:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   16cd8:	lsl	r3, r2, #1
   16cdc:	orr	r3, r3, r0, lsr #31
   16ce0:	umull	ip, lr, r0, r0
   16ce4:	mla	lr, r0, r2, lr
   16ce8:	mla	r2, r0, r2, lr
   16cec:	ldr	lr, [fp, #-352]	; 0xfffffea0
   16cf0:	ldr	r4, [fp, #-348]	; 0xfffffea4
   16cf4:	umull	r5, r6, ip, lr
   16cf8:	mla	ip, ip, r4, r6
   16cfc:	mla	r2, r2, lr, ip
   16d00:	rsbs	r0, r5, r0, lsl #1
   16d04:	sbc	r2, r3, r2
   16d08:	str	r0, [fp, #-360]	; 0xfffffe98
   16d0c:	str	r2, [fp, #-356]	; 0xfffffe9c
   16d10:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16d14:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   16d18:	lsl	r3, r2, #1
   16d1c:	orr	r3, r3, r0, lsr #31
   16d20:	umull	ip, lr, r0, r0
   16d24:	mla	lr, r0, r2, lr
   16d28:	mla	r2, r0, r2, lr
   16d2c:	ldr	lr, [fp, #-352]	; 0xfffffea0
   16d30:	ldr	r4, [fp, #-348]	; 0xfffffea4
   16d34:	umull	r5, r6, ip, lr
   16d38:	mla	ip, ip, r4, r6
   16d3c:	mla	r2, r2, lr, ip
   16d40:	rsbs	r0, r5, r0, lsl #1
   16d44:	sbc	r2, r3, r2
   16d48:	str	r0, [fp, #-360]	; 0xfffffe98
   16d4c:	str	r2, [fp, #-356]	; 0xfffffe9c
   16d50:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16d54:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   16d58:	lsl	r3, r2, #1
   16d5c:	orr	r3, r3, r0, lsr #31
   16d60:	umull	ip, lr, r0, r0
   16d64:	mla	lr, r0, r2, lr
   16d68:	mla	r2, r0, r2, lr
   16d6c:	ldr	lr, [fp, #-352]	; 0xfffffea0
   16d70:	ldr	r4, [fp, #-348]	; 0xfffffea4
   16d74:	umull	r5, r6, ip, lr
   16d78:	mla	ip, ip, r4, r6
   16d7c:	mla	r2, r2, lr, ip
   16d80:	rsbs	r0, r5, r0, lsl #1
   16d84:	sbc	r2, r3, r2
   16d88:	str	r0, [fp, #-360]	; 0xfffffe98
   16d8c:	str	r2, [fp, #-356]	; 0xfffffe9c
   16d90:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16d94:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   16d98:	str	r2, [fp, #-68]	; 0xffffffbc
   16d9c:	str	r0, [fp, #-72]	; 0xffffffb8
   16da0:	str	r1, [sp, #156]	; 0x9c
   16da4:	b	16da8 <__assert_fail@plt+0x5a24>
   16da8:	b	16dac <__assert_fail@plt+0x5a28>
   16dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16db0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16db4:	subs	r0, r0, #2
   16db8:	sbcs	r1, r1, #0
   16dbc:	str	r0, [sp, #152]	; 0x98
   16dc0:	str	r1, [sp, #148]	; 0x94
   16dc4:	bcc	16dd0 <__assert_fail@plt+0x5a4c>
   16dc8:	b	16dcc <__assert_fail@plt+0x5a48>
   16dcc:	b	16df0 <__assert_fail@plt+0x5a6c>
   16dd0:	movw	r0, #17469	; 0x443d
   16dd4:	movt	r0, #3
   16dd8:	movw	r1, #17363	; 0x43d3
   16ddc:	movt	r1, #3
   16de0:	movw	r2, #1214	; 0x4be
   16de4:	movw	r3, #17479	; 0x4447
   16de8:	movt	r3, #3
   16dec:	bl	11384 <__assert_fail@plt>
   16df0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16df4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16df8:	str	r1, [fp, #-372]	; 0xfffffe8c
   16dfc:	str	r0, [fp, #-376]	; 0xfffffe88
   16e00:	mov	r0, #0
   16e04:	str	r0, [sp, #380]	; 0x17c
   16e08:	str	r0, [sp, #376]	; 0x178
   16e0c:	str	r0, [sp, #364]	; 0x16c
   16e10:	mov	r1, #1
   16e14:	str	r1, [sp, #360]	; 0x168
   16e18:	str	r0, [sp, #356]	; 0x164
   16e1c:	str	r0, [sp, #352]	; 0x160
   16e20:	str	r0, [sp, #372]	; 0x174
   16e24:	str	r0, [sp, #368]	; 0x170
   16e28:	movw	r0, #64	; 0x40
   16e2c:	str	r0, [sp, #348]	; 0x15c
   16e30:	ldr	r0, [sp, #348]	; 0x15c
   16e34:	cmp	r0, #0
   16e38:	bls	16fc4 <__assert_fail@plt+0x5c40>
   16e3c:	b	16e40 <__assert_fail@plt+0x5abc>
   16e40:	ldr	r0, [fp, #-376]	; 0xfffffe88
   16e44:	ldr	r1, [sp, #376]	; 0x178
   16e48:	ldr	r2, [sp, #380]	; 0x17c
   16e4c:	lsrs	r2, r2, #1
   16e50:	rrx	r1, r1
   16e54:	orr	r0, r2, r0, lsl #31
   16e58:	str	r1, [sp, #376]	; 0x178
   16e5c:	str	r0, [sp, #380]	; 0x17c
   16e60:	ldr	r0, [fp, #-376]	; 0xfffffe88
   16e64:	ldr	r1, [fp, #-372]	; 0xfffffe8c
   16e68:	lsrs	r1, r1, #1
   16e6c:	rrx	r0, r0
   16e70:	str	r1, [fp, #-372]	; 0xfffffe8c
   16e74:	str	r0, [fp, #-376]	; 0xfffffe88
   16e78:	ldr	r0, [sp, #368]	; 0x170
   16e7c:	ldr	r1, [sp, #372]	; 0x174
   16e80:	lsl	r1, r1, #1
   16e84:	orr	r1, r1, r0, lsr #31
   16e88:	lsl	r0, r0, #1
   16e8c:	str	r0, [sp, #368]	; 0x170
   16e90:	str	r1, [sp, #372]	; 0x174
   16e94:	ldr	r0, [sp, #360]	; 0x168
   16e98:	ldr	r1, [sp, #364]	; 0x16c
   16e9c:	ldr	r2, [fp, #-376]	; 0xfffffe88
   16ea0:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   16ea4:	subs	r0, r2, r0
   16ea8:	sbcs	r1, r3, r1
   16eac:	str	r0, [sp, #144]	; 0x90
   16eb0:	str	r1, [sp, #140]	; 0x8c
   16eb4:	bcc	16f0c <__assert_fail@plt+0x5b88>
   16eb8:	b	16ebc <__assert_fail@plt+0x5b38>
   16ebc:	ldr	r0, [sp, #360]	; 0x168
   16ec0:	ldr	r1, [sp, #364]	; 0x16c
   16ec4:	ldr	r2, [fp, #-376]	; 0xfffffe88
   16ec8:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   16ecc:	eor	r1, r1, r3
   16ed0:	eor	r0, r0, r2
   16ed4:	orr	r0, r0, r1
   16ed8:	cmp	r0, #0
   16edc:	bne	16fac <__assert_fail@plt+0x5c28>
   16ee0:	b	16ee4 <__assert_fail@plt+0x5b60>
   16ee4:	ldr	r0, [sp, #352]	; 0x160
   16ee8:	ldr	r1, [sp, #356]	; 0x164
   16eec:	ldr	r2, [sp, #376]	; 0x178
   16ef0:	ldr	r3, [sp, #380]	; 0x17c
   16ef4:	subs	r0, r0, r2
   16ef8:	sbcs	r1, r1, r3
   16efc:	str	r0, [sp, #136]	; 0x88
   16f00:	str	r1, [sp, #132]	; 0x84
   16f04:	bcc	16fac <__assert_fail@plt+0x5c28>
   16f08:	b	16f0c <__assert_fail@plt+0x5b88>
   16f0c:	ldr	r0, [sp, #368]	; 0x170
   16f10:	ldr	r1, [sp, #372]	; 0x174
   16f14:	adds	r0, r0, #1
   16f18:	adc	r1, r1, #0
   16f1c:	str	r0, [sp, #368]	; 0x170
   16f20:	str	r1, [sp, #372]	; 0x174
   16f24:	ldr	r0, [sp, #352]	; 0x160
   16f28:	ldr	r1, [sp, #356]	; 0x164
   16f2c:	ldr	r2, [sp, #376]	; 0x178
   16f30:	ldr	r3, [sp, #380]	; 0x17c
   16f34:	subs	r0, r0, r2
   16f38:	sbcs	r1, r1, r3
   16f3c:	mov	r2, #0
   16f40:	mov	r3, r2
   16f44:	movwcc	r3, #1
   16f48:	str	r2, [sp, #340]	; 0x154
   16f4c:	str	r3, [sp, #336]	; 0x150
   16f50:	ldr	r2, [sp, #352]	; 0x160
   16f54:	ldr	r3, [sp, #356]	; 0x164
   16f58:	ldr	ip, [sp, #376]	; 0x178
   16f5c:	ldr	lr, [sp, #380]	; 0x17c
   16f60:	subs	r2, r2, ip
   16f64:	sbc	r3, r3, lr
   16f68:	str	r2, [sp, #352]	; 0x160
   16f6c:	str	r3, [sp, #356]	; 0x164
   16f70:	ldr	r2, [sp, #360]	; 0x168
   16f74:	ldr	r3, [sp, #364]	; 0x16c
   16f78:	ldr	ip, [fp, #-376]	; 0xfffffe88
   16f7c:	ldr	lr, [fp, #-372]	; 0xfffffe8c
   16f80:	subs	r2, r2, ip
   16f84:	sbc	r3, r3, lr
   16f88:	ldr	ip, [sp, #336]	; 0x150
   16f8c:	ldr	lr, [sp, #340]	; 0x154
   16f90:	subs	r2, r2, ip
   16f94:	sbc	r3, r3, lr
   16f98:	str	r2, [sp, #360]	; 0x168
   16f9c:	str	r3, [sp, #364]	; 0x16c
   16fa0:	str	r0, [sp, #128]	; 0x80
   16fa4:	str	r1, [sp, #124]	; 0x7c
   16fa8:	b	16fac <__assert_fail@plt+0x5c28>
   16fac:	b	16fb0 <__assert_fail@plt+0x5c2c>
   16fb0:	ldr	r0, [sp, #348]	; 0x15c
   16fb4:	mvn	r1, #0
   16fb8:	add	r0, r0, r1
   16fbc:	str	r0, [sp, #348]	; 0x15c
   16fc0:	b	16e30 <__assert_fail@plt+0x5aac>
   16fc4:	ldr	r0, [sp, #352]	; 0x160
   16fc8:	ldr	r1, [sp, #356]	; 0x164
   16fcc:	str	r1, [fp, #-60]	; 0xffffffc4
   16fd0:	str	r0, [fp, #-64]	; 0xffffffc0
   16fd4:	ldr	r0, [sp, #368]	; 0x170
   16fd8:	ldr	r1, [sp, #372]	; 0x174
   16fdc:	str	r1, [fp, #-364]	; 0xfffffe94
   16fe0:	str	r0, [fp, #-368]	; 0xfffffe90
   16fe4:	b	16fe8 <__assert_fail@plt+0x5c64>
   16fe8:	b	16fec <__assert_fail@plt+0x5c68>
   16fec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16ff0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16ff4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16ff8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16ffc:	subs	r2, r2, r0
   17000:	sbc	r3, r3, r1
   17004:	subs	r0, r0, r2
   17008:	sbcs	r1, r1, r3
   1700c:	mov	r2, #0
   17010:	movwcc	r2, #1
   17014:	cmp	r2, #0
   17018:	mvnne	r2, #0
   1701c:	str	r2, [sp, #332]	; 0x14c
   17020:	str	r2, [sp, #328]	; 0x148
   17024:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17028:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1702c:	ldr	ip, [sp, #328]	; 0x148
   17030:	ldr	lr, [sp, #332]	; 0x14c
   17034:	and	lr, r3, lr
   17038:	and	ip, r2, ip
   1703c:	ldr	r4, [fp, #-64]	; 0xffffffc0
   17040:	ldr	r5, [fp, #-60]	; 0xffffffc4
   17044:	adds	ip, ip, r4
   17048:	adc	lr, lr, r5
   1704c:	subs	r2, r4, r2
   17050:	sbc	r3, r5, r3
   17054:	adds	r2, ip, r2
   17058:	adc	r3, lr, r3
   1705c:	str	r2, [fp, #-56]	; 0xffffffc8
   17060:	str	r3, [fp, #-52]	; 0xffffffcc
   17064:	str	r0, [sp, #120]	; 0x78
   17068:	str	r1, [sp, #116]	; 0x74
   1706c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17070:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17074:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17078:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1707c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   17080:	ldr	lr, [fp, #-52]	; 0xffffffcc
   17084:	ldr	r4, [fp, #-336]	; 0xfffffeb0
   17088:	ldr	r5, [fp, #-332]	; 0xfffffeb4
   1708c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   17090:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17094:	ldr	r8, [fp, #-60]	; 0xffffffc4
   17098:	mov	r9, sp
   1709c:	str	r8, [r9, #28]
   170a0:	str	r7, [r9, #24]
   170a4:	str	r6, [r9, #16]
   170a8:	str	r5, [r9, #12]
   170ac:	str	r4, [r9, #8]
   170b0:	str	lr, [r9, #4]
   170b4:	str	ip, [r9]
   170b8:	bl	17ed0 <__assert_fail@plt+0x6b4c>
   170bc:	tst	r0, #1
   170c0:	bne	170d4 <__assert_fail@plt+0x5d50>
   170c4:	movw	r0, #0
   170c8:	and	r0, r0, #1
   170cc:	strb	r0, [fp, #-29]	; 0xffffffe3
   170d0:	b	17718 <__assert_fail@plt+0x6394>
   170d4:	movw	r0, #41240	; 0xa118
   170d8:	movt	r0, #4
   170dc:	ldrb	r0, [r0]
   170e0:	tst	r0, #1
   170e4:	beq	17114 <__assert_fail@plt+0x5d90>
   170e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   170ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   170f0:	subs	r2, r0, #1
   170f4:	sbc	r3, r1, #0
   170f8:	mov	r0, sp
   170fc:	sub	r1, fp, #328	; 0x148
   17100:	str	r1, [r0]
   17104:	mov	r0, #0
   17108:	str	r0, [sp, #112]	; 0x70
   1710c:	ldr	r1, [sp, #112]	; 0x70
   17110:	bl	12744 <__assert_fail@plt+0x13c0>
   17114:	movw	r0, #0
   17118:	str	r0, [sp, #324]	; 0x144
   1711c:	ldr	r0, [sp, #324]	; 0x144
   17120:	cmp	r0, #668	; 0x29c
   17124:	bcs	176f0 <__assert_fail@plt+0x636c>
   17128:	movw	r0, #41240	; 0xa118
   1712c:	movt	r0, #4
   17130:	ldrb	r0, [r0]
   17134:	tst	r0, #1
   17138:	beq	17258 <__assert_fail@plt+0x5ed4>
   1713c:	movw	r0, #1
   17140:	strb	r0, [fp, #-45]	; 0xffffffd3
   17144:	movw	r0, #0
   17148:	str	r0, [sp, #320]	; 0x140
   1714c:	ldr	r0, [sp, #320]	; 0x140
   17150:	ldrb	r1, [fp, #-78]	; 0xffffffb2
   17154:	cmp	r0, r1
   17158:	movw	r0, #0
   1715c:	str	r0, [sp, #108]	; 0x6c
   17160:	bcs	1716c <__assert_fail@plt+0x5de8>
   17164:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17168:	str	r0, [sp, #108]	; 0x6c
   1716c:	ldr	r0, [sp, #108]	; 0x6c
   17170:	tst	r0, #1
   17174:	beq	17254 <__assert_fail@plt+0x5ed0>
   17178:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1717c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17180:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17184:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17188:	subs	ip, r2, #1
   1718c:	sbc	lr, r3, #0
   17190:	ldr	r4, [sp, #320]	; 0x140
   17194:	sub	r5, fp, #328	; 0x148
   17198:	add	r4, r5, r4, lsl #3
   1719c:	ldr	r5, [r4, #16]
   171a0:	ldr	r4, [r4, #20]
   171a4:	str	r0, [sp, #104]	; 0x68
   171a8:	mov	r0, ip
   171ac:	str	r1, [sp, #100]	; 0x64
   171b0:	mov	r1, lr
   171b4:	str	r2, [sp, #96]	; 0x60
   171b8:	mov	r2, r5
   171bc:	str	r3, [sp, #92]	; 0x5c
   171c0:	mov	r3, r4
   171c4:	bl	33e44 <__assert_fail@plt+0x22ac0>
   171c8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   171cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   171d0:	ldr	ip, [fp, #-64]	; 0xffffffc0
   171d4:	ldr	lr, [fp, #-60]	; 0xffffffc4
   171d8:	mov	r4, sp
   171dc:	str	lr, [r4, #20]
   171e0:	str	ip, [r4, #16]
   171e4:	str	r3, [r4, #12]
   171e8:	str	r2, [r4, #8]
   171ec:	ldr	r2, [sp, #92]	; 0x5c
   171f0:	str	r2, [r4, #4]
   171f4:	ldr	r3, [sp, #96]	; 0x60
   171f8:	str	r3, [r4]
   171fc:	ldr	ip, [sp, #104]	; 0x68
   17200:	str	r0, [sp, #88]	; 0x58
   17204:	mov	r0, ip
   17208:	ldr	lr, [sp, #100]	; 0x64
   1720c:	str	r1, [sp, #84]	; 0x54
   17210:	mov	r1, lr
   17214:	ldr	r2, [sp, #88]	; 0x58
   17218:	ldr	r3, [sp, #84]	; 0x54
   1721c:	bl	180f4 <__assert_fail@plt+0x6d70>
   17220:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17224:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17228:	eor	r1, r1, r3
   1722c:	eor	r0, r0, r2
   17230:	orr	r0, r0, r1
   17234:	cmp	r0, #0
   17238:	movwne	r0, #1
   1723c:	and	r0, r0, #1
   17240:	strb	r0, [fp, #-45]	; 0xffffffd3
   17244:	ldr	r0, [sp, #320]	; 0x140
   17248:	add	r0, r0, #1
   1724c:	str	r0, [sp, #320]	; 0x140
   17250:	b	1714c <__assert_fail@plt+0x5dc8>
   17254:	b	17270 <__assert_fail@plt+0x5eec>
   17258:	ldr	r0, [sp, #324]	; 0x144
   1725c:	cmp	r0, #24
   17260:	movw	r0, #0
   17264:	moveq	r0, #1
   17268:	and	r0, r0, #1
   1726c:	strb	r0, [fp, #-45]	; 0xffffffd3
   17270:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17274:	tst	r0, #1
   17278:	beq	1728c <__assert_fail@plt+0x5f08>
   1727c:	movw	r0, #1
   17280:	and	r0, r0, #1
   17284:	strb	r0, [fp, #-29]	; 0xffffffe3
   17288:	b	17718 <__assert_fail@plt+0x6394>
   1728c:	ldr	r0, [sp, #324]	; 0x144
   17290:	movw	r1, #29072	; 0x7190
   17294:	movt	r1, #3
   17298:	ldrb	r0, [r1, r0]
   1729c:	ldr	r1, [fp, #-344]	; 0xfffffea8
   172a0:	ldr	r2, [fp, #-340]	; 0xfffffeac
   172a4:	adds	r0, r1, r0
   172a8:	adc	r1, r2, #0
   172ac:	str	r0, [fp, #-344]	; 0xfffffea8
   172b0:	str	r1, [fp, #-340]	; 0xfffffeac
   172b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   172b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   172bc:	str	r1, [sp, #252]	; 0xfc
   172c0:	str	r0, [sp, #248]	; 0xf8
   172c4:	ldr	r0, [fp, #-344]	; 0xfffffea8
   172c8:	ldr	r1, [fp, #-340]	; 0xfffffeac
   172cc:	str	r1, [sp, #244]	; 0xf4
   172d0:	str	r0, [sp, #240]	; 0xf0
   172d4:	ldr	r0, [sp, #248]	; 0xf8
   172d8:	str	r0, [sp, #268]	; 0x10c
   172dc:	ldr	r0, [sp, #252]	; 0xfc
   172e0:	str	r0, [sp, #260]	; 0x104
   172e4:	ldr	r0, [sp, #240]	; 0xf0
   172e8:	str	r0, [sp, #264]	; 0x108
   172ec:	ldr	r0, [sp, #244]	; 0xf4
   172f0:	str	r0, [sp, #256]	; 0x100
   172f4:	ldr	r0, [sp, #268]	; 0x10c
   172f8:	ldr	r1, [sp, #264]	; 0x108
   172fc:	umull	r0, r1, r0, r1
   17300:	str	r1, [sp, #300]	; 0x12c
   17304:	str	r0, [sp, #296]	; 0x128
   17308:	ldr	r0, [sp, #268]	; 0x10c
   1730c:	ldr	r1, [sp, #256]	; 0x100
   17310:	umull	r0, r1, r0, r1
   17314:	str	r1, [sp, #292]	; 0x124
   17318:	str	r0, [sp, #288]	; 0x120
   1731c:	ldr	r0, [sp, #260]	; 0x104
   17320:	ldr	r1, [sp, #264]	; 0x108
   17324:	umull	r0, r1, r0, r1
   17328:	str	r1, [sp, #284]	; 0x11c
   1732c:	str	r0, [sp, #280]	; 0x118
   17330:	ldr	r0, [sp, #260]	; 0x104
   17334:	ldr	r1, [sp, #256]	; 0x100
   17338:	umull	r0, r1, r0, r1
   1733c:	str	r1, [sp, #276]	; 0x114
   17340:	str	r0, [sp, #272]	; 0x110
   17344:	ldr	r0, [sp, #300]	; 0x12c
   17348:	ldr	r1, [sp, #288]	; 0x120
   1734c:	ldr	r2, [sp, #292]	; 0x124
   17350:	adds	r0, r1, r0
   17354:	adc	r1, r2, #0
   17358:	str	r0, [sp, #288]	; 0x120
   1735c:	str	r1, [sp, #292]	; 0x124
   17360:	ldr	r0, [sp, #280]	; 0x118
   17364:	ldr	r1, [sp, #284]	; 0x11c
   17368:	ldr	r2, [sp, #288]	; 0x120
   1736c:	ldr	r3, [sp, #292]	; 0x124
   17370:	adds	r0, r2, r0
   17374:	adc	r1, r3, r1
   17378:	str	r0, [sp, #288]	; 0x120
   1737c:	str	r1, [sp, #292]	; 0x124
   17380:	ldr	r0, [sp, #288]	; 0x120
   17384:	ldr	r1, [sp, #292]	; 0x124
   17388:	ldr	r2, [sp, #280]	; 0x118
   1738c:	ldr	r3, [sp, #284]	; 0x11c
   17390:	subs	r0, r0, r2
   17394:	sbcs	r1, r1, r3
   17398:	str	r0, [sp, #80]	; 0x50
   1739c:	str	r1, [sp, #76]	; 0x4c
   173a0:	bcs	173b4 <__assert_fail@plt+0x6030>
   173a4:	b	173a8 <__assert_fail@plt+0x6024>
   173a8:	ldr	r0, [sp, #276]	; 0x114
   173ac:	add	r0, r0, #1
   173b0:	str	r0, [sp, #276]	; 0x114
   173b4:	ldr	r0, [sp, #272]	; 0x110
   173b8:	ldr	r1, [sp, #276]	; 0x114
   173bc:	ldr	r2, [sp, #292]	; 0x124
   173c0:	adds	r0, r0, r2
   173c4:	adc	r1, r1, #0
   173c8:	str	r0, [sp, #312]	; 0x138
   173cc:	str	r1, [sp, #316]	; 0x13c
   173d0:	ldr	r0, [sp, #288]	; 0x120
   173d4:	ldr	r1, [sp, #296]	; 0x128
   173d8:	str	r0, [sp, #308]	; 0x134
   173dc:	str	r1, [sp, #304]	; 0x130
   173e0:	ldr	r0, [sp, #312]	; 0x138
   173e4:	ldr	r1, [sp, #316]	; 0x13c
   173e8:	orr	r0, r0, r1
   173ec:	cmp	r0, #0
   173f0:	bne	17420 <__assert_fail@plt+0x609c>
   173f4:	b	173f8 <__assert_fail@plt+0x6074>
   173f8:	ldr	r0, [sp, #304]	; 0x130
   173fc:	ldr	r1, [sp, #308]	; 0x134
   17400:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17404:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17408:	bl	33e44 <__assert_fail@plt+0x22ac0>
   1740c:	str	r3, [fp, #-52]	; 0xffffffcc
   17410:	str	r2, [fp, #-56]	; 0xffffffc8
   17414:	str	r0, [sp, #72]	; 0x48
   17418:	str	r1, [sp, #68]	; 0x44
   1741c:	b	17674 <__assert_fail@plt+0x62f0>
   17420:	b	17424 <__assert_fail@plt+0x60a0>
   17424:	ldr	r0, [sp, #312]	; 0x138
   17428:	ldr	r1, [sp, #316]	; 0x13c
   1742c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17434:	subs	r0, r0, r2
   17438:	sbcs	r1, r1, r3
   1743c:	str	r0, [sp, #64]	; 0x40
   17440:	str	r1, [sp, #60]	; 0x3c
   17444:	bcs	17450 <__assert_fail@plt+0x60cc>
   17448:	b	1744c <__assert_fail@plt+0x60c8>
   1744c:	b	17470 <__assert_fail@plt+0x60ec>
   17450:	movw	r0, #17504	; 0x4460
   17454:	movt	r0, #3
   17458:	movw	r1, #17363	; 0x43d3
   1745c:	movt	r1, #3
   17460:	movw	r2, #1262	; 0x4ee
   17464:	movw	r3, #17479	; 0x4447
   17468:	movt	r3, #3
   1746c:	bl	11384 <__assert_fail@plt>
   17470:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17474:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17478:	str	r1, [sp, #228]	; 0xe4
   1747c:	str	r0, [sp, #224]	; 0xe0
   17480:	mov	r0, #0
   17484:	str	r0, [sp, #220]	; 0xdc
   17488:	str	r0, [sp, #216]	; 0xd8
   1748c:	ldr	r1, [sp, #312]	; 0x138
   17490:	ldr	r2, [sp, #316]	; 0x13c
   17494:	str	r2, [sp, #204]	; 0xcc
   17498:	str	r1, [sp, #200]	; 0xc8
   1749c:	ldr	r1, [sp, #304]	; 0x130
   174a0:	ldr	r2, [sp, #308]	; 0x134
   174a4:	str	r2, [sp, #196]	; 0xc4
   174a8:	str	r1, [sp, #192]	; 0xc0
   174ac:	str	r0, [sp, #212]	; 0xd4
   174b0:	str	r0, [sp, #208]	; 0xd0
   174b4:	movw	r0, #64	; 0x40
   174b8:	str	r0, [sp, #188]	; 0xbc
   174bc:	ldr	r0, [sp, #188]	; 0xbc
   174c0:	cmp	r0, #0
   174c4:	bls	17650 <__assert_fail@plt+0x62cc>
   174c8:	b	174cc <__assert_fail@plt+0x6148>
   174cc:	ldr	r0, [sp, #224]	; 0xe0
   174d0:	ldr	r1, [sp, #216]	; 0xd8
   174d4:	ldr	r2, [sp, #220]	; 0xdc
   174d8:	lsrs	r2, r2, #1
   174dc:	rrx	r1, r1
   174e0:	orr	r0, r2, r0, lsl #31
   174e4:	str	r1, [sp, #216]	; 0xd8
   174e8:	str	r0, [sp, #220]	; 0xdc
   174ec:	ldr	r0, [sp, #224]	; 0xe0
   174f0:	ldr	r1, [sp, #228]	; 0xe4
   174f4:	lsrs	r1, r1, #1
   174f8:	rrx	r0, r0
   174fc:	str	r1, [sp, #228]	; 0xe4
   17500:	str	r0, [sp, #224]	; 0xe0
   17504:	ldr	r0, [sp, #208]	; 0xd0
   17508:	ldr	r1, [sp, #212]	; 0xd4
   1750c:	lsl	r1, r1, #1
   17510:	orr	r1, r1, r0, lsr #31
   17514:	lsl	r0, r0, #1
   17518:	str	r0, [sp, #208]	; 0xd0
   1751c:	str	r1, [sp, #212]	; 0xd4
   17520:	ldr	r0, [sp, #200]	; 0xc8
   17524:	ldr	r1, [sp, #204]	; 0xcc
   17528:	ldr	r2, [sp, #224]	; 0xe0
   1752c:	ldr	r3, [sp, #228]	; 0xe4
   17530:	subs	r0, r2, r0
   17534:	sbcs	r1, r3, r1
   17538:	str	r0, [sp, #56]	; 0x38
   1753c:	str	r1, [sp, #52]	; 0x34
   17540:	bcc	17598 <__assert_fail@plt+0x6214>
   17544:	b	17548 <__assert_fail@plt+0x61c4>
   17548:	ldr	r0, [sp, #200]	; 0xc8
   1754c:	ldr	r1, [sp, #204]	; 0xcc
   17550:	ldr	r2, [sp, #224]	; 0xe0
   17554:	ldr	r3, [sp, #228]	; 0xe4
   17558:	eor	r1, r1, r3
   1755c:	eor	r0, r0, r2
   17560:	orr	r0, r0, r1
   17564:	cmp	r0, #0
   17568:	bne	17638 <__assert_fail@plt+0x62b4>
   1756c:	b	17570 <__assert_fail@plt+0x61ec>
   17570:	ldr	r0, [sp, #192]	; 0xc0
   17574:	ldr	r1, [sp, #196]	; 0xc4
   17578:	ldr	r2, [sp, #216]	; 0xd8
   1757c:	ldr	r3, [sp, #220]	; 0xdc
   17580:	subs	r0, r0, r2
   17584:	sbcs	r1, r1, r3
   17588:	str	r0, [sp, #48]	; 0x30
   1758c:	str	r1, [sp, #44]	; 0x2c
   17590:	bcc	17638 <__assert_fail@plt+0x62b4>
   17594:	b	17598 <__assert_fail@plt+0x6214>
   17598:	ldr	r0, [sp, #208]	; 0xd0
   1759c:	ldr	r1, [sp, #212]	; 0xd4
   175a0:	adds	r0, r0, #1
   175a4:	adc	r1, r1, #0
   175a8:	str	r0, [sp, #208]	; 0xd0
   175ac:	str	r1, [sp, #212]	; 0xd4
   175b0:	ldr	r0, [sp, #192]	; 0xc0
   175b4:	ldr	r1, [sp, #196]	; 0xc4
   175b8:	ldr	r2, [sp, #216]	; 0xd8
   175bc:	ldr	r3, [sp, #220]	; 0xdc
   175c0:	subs	r0, r0, r2
   175c4:	sbcs	r1, r1, r3
   175c8:	mov	r2, #0
   175cc:	mov	r3, r2
   175d0:	movwcc	r3, #1
   175d4:	str	r2, [sp, #180]	; 0xb4
   175d8:	str	r3, [sp, #176]	; 0xb0
   175dc:	ldr	r2, [sp, #192]	; 0xc0
   175e0:	ldr	r3, [sp, #196]	; 0xc4
   175e4:	ldr	ip, [sp, #216]	; 0xd8
   175e8:	ldr	lr, [sp, #220]	; 0xdc
   175ec:	subs	r2, r2, ip
   175f0:	sbc	r3, r3, lr
   175f4:	str	r2, [sp, #192]	; 0xc0
   175f8:	str	r3, [sp, #196]	; 0xc4
   175fc:	ldr	r2, [sp, #200]	; 0xc8
   17600:	ldr	r3, [sp, #204]	; 0xcc
   17604:	ldr	ip, [sp, #224]	; 0xe0
   17608:	ldr	lr, [sp, #228]	; 0xe4
   1760c:	subs	r2, r2, ip
   17610:	sbc	r3, r3, lr
   17614:	ldr	ip, [sp, #176]	; 0xb0
   17618:	ldr	lr, [sp, #180]	; 0xb4
   1761c:	subs	r2, r2, ip
   17620:	sbc	r3, r3, lr
   17624:	str	r2, [sp, #200]	; 0xc8
   17628:	str	r3, [sp, #204]	; 0xcc
   1762c:	str	r0, [sp, #40]	; 0x28
   17630:	str	r1, [sp, #36]	; 0x24
   17634:	b	17638 <__assert_fail@plt+0x62b4>
   17638:	b	1763c <__assert_fail@plt+0x62b8>
   1763c:	ldr	r0, [sp, #188]	; 0xbc
   17640:	mvn	r1, #0
   17644:	add	r0, r0, r1
   17648:	str	r0, [sp, #188]	; 0xbc
   1764c:	b	174bc <__assert_fail@plt+0x6138>
   17650:	ldr	r0, [sp, #192]	; 0xc0
   17654:	ldr	r1, [sp, #196]	; 0xc4
   17658:	str	r1, [fp, #-52]	; 0xffffffcc
   1765c:	str	r0, [fp, #-56]	; 0xffffffc8
   17660:	ldr	r0, [sp, #208]	; 0xd0
   17664:	ldr	r1, [sp, #212]	; 0xd4
   17668:	str	r1, [sp, #236]	; 0xec
   1766c:	str	r0, [sp, #232]	; 0xe8
   17670:	b	17674 <__assert_fail@plt+0x62f0>
   17674:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17678:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1767c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17680:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17684:	ldr	ip, [fp, #-56]	; 0xffffffc8
   17688:	ldr	lr, [fp, #-52]	; 0xffffffcc
   1768c:	ldr	r4, [fp, #-336]	; 0xfffffeb0
   17690:	ldr	r5, [fp, #-332]	; 0xfffffeb4
   17694:	ldr	r6, [fp, #-44]	; 0xffffffd4
   17698:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1769c:	ldr	r8, [fp, #-60]	; 0xffffffc4
   176a0:	mov	r9, sp
   176a4:	str	r8, [r9, #28]
   176a8:	str	r7, [r9, #24]
   176ac:	str	r6, [r9, #16]
   176b0:	str	r5, [r9, #12]
   176b4:	str	r4, [r9, #8]
   176b8:	str	lr, [r9, #4]
   176bc:	str	ip, [r9]
   176c0:	bl	17ed0 <__assert_fail@plt+0x6b4c>
   176c4:	tst	r0, #1
   176c8:	bne	176dc <__assert_fail@plt+0x6358>
   176cc:	movw	r0, #0
   176d0:	and	r0, r0, #1
   176d4:	strb	r0, [fp, #-29]	; 0xffffffe3
   176d8:	b	17718 <__assert_fail@plt+0x6394>
   176dc:	b	176e0 <__assert_fail@plt+0x635c>
   176e0:	ldr	r0, [sp, #324]	; 0x144
   176e4:	add	r0, r0, #1
   176e8:	str	r0, [sp, #324]	; 0x144
   176ec:	b	1711c <__assert_fail@plt+0x5d98>
   176f0:	movw	r0, #17419	; 0x440b
   176f4:	movt	r0, #3
   176f8:	bl	11264 <gettext@plt>
   176fc:	movw	lr, #0
   17700:	str	r0, [sp, #32]
   17704:	mov	r0, lr
   17708:	mov	r1, lr
   1770c:	ldr	r2, [sp, #32]
   17710:	bl	111ec <error@plt>
   17714:	bl	1136c <abort@plt>
   17718:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1771c:	and	r0, r0, #1
   17720:	sub	sp, fp, #24
   17724:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17728:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1772c:	add	fp, sp, #24
   17730:	sub	sp, sp, #152	; 0x98
   17734:	ldr	r1, [fp, #20]
   17738:	ldr	ip, [fp, #16]
   1773c:	ldr	lr, [fp, #12]
   17740:	ldr	r4, [fp, #8]
   17744:	str	r0, [fp, #-32]	; 0xffffffe0
   17748:	str	r3, [fp, #-36]	; 0xffffffdc
   1774c:	str	r2, [fp, #-40]	; 0xffffffd8
   17750:	ldr	r0, [fp, #8]
   17754:	ldr	r2, [fp, #12]
   17758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1775c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   17760:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17764:	ldr	r7, [fp, #20]
   17768:	mov	r8, sp
   1776c:	str	r7, [r8, #8]
   17770:	str	r6, [r8, #4]
   17774:	str	r5, [r8]
   17778:	sub	r5, fp, #80	; 0x50
   1777c:	str	r0, [sp, #80]	; 0x50
   17780:	mov	r0, r5
   17784:	ldr	r5, [sp, #80]	; 0x50
   17788:	str	r1, [sp, #76]	; 0x4c
   1778c:	mov	r1, r5
   17790:	str	r4, [sp, #72]	; 0x48
   17794:	str	lr, [sp, #68]	; 0x44
   17798:	str	ip, [sp, #64]	; 0x40
   1779c:	bl	17ac0 <__assert_fail@plt+0x673c>
   177a0:	str	r1, [fp, #-52]	; 0xffffffcc
   177a4:	str	r0, [fp, #-56]	; 0xffffffc8
   177a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   177ac:	ldr	r1, [fp, #-76]	; 0xffffffb4
   177b0:	str	r1, [fp, #-44]	; 0xffffffd4
   177b4:	str	r0, [fp, #-48]	; 0xffffffd0
   177b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   177bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   177c0:	ldr	r2, [fp, #20]
   177c4:	ldr	r3, [r2]
   177c8:	ldr	r2, [r2, #4]
   177cc:	eor	r1, r1, r2
   177d0:	eor	r0, r0, r3
   177d4:	orr	r0, r0, r1
   177d8:	cmp	r0, #0
   177dc:	bne	17820 <__assert_fail@plt+0x649c>
   177e0:	b	177e4 <__assert_fail@plt+0x6460>
   177e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   177e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   177ec:	ldr	r2, [fp, #20]
   177f0:	ldr	r3, [r2, #8]
   177f4:	ldr	r2, [r2, #12]
   177f8:	eor	r1, r1, r2
   177fc:	eor	r0, r0, r3
   17800:	orr	r0, r0, r1
   17804:	cmp	r0, #0
   17808:	bne	17820 <__assert_fail@plt+0x649c>
   1780c:	b	17810 <__assert_fail@plt+0x648c>
   17810:	movw	r0, #1
   17814:	and	r0, r0, #1
   17818:	strb	r0, [fp, #-25]	; 0xffffffe7
   1781c:	b	17ab0 <__assert_fail@plt+0x672c>
   17820:	b	17824 <__assert_fail@plt+0x64a0>
   17824:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17828:	ldr	r1, [r0]
   1782c:	ldr	r0, [r0, #4]
   17830:	ldr	r2, [fp, #20]
   17834:	ldr	r3, [r2]
   17838:	ldr	r2, [r2, #4]
   1783c:	subs	r1, r1, r3
   17840:	sbcs	r0, r0, r2
   17844:	mov	r2, #0
   17848:	mov	r3, r2
   1784c:	movwcc	r3, #1
   17850:	str	r2, [sp, #92]	; 0x5c
   17854:	str	r3, [sp, #88]	; 0x58
   17858:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1785c:	ldr	r3, [r2]
   17860:	ldr	r2, [r2, #4]
   17864:	ldr	ip, [fp, #20]
   17868:	ldr	lr, [ip]
   1786c:	ldr	ip, [ip, #4]
   17870:	subs	r3, r3, lr
   17874:	sbc	r2, r2, ip
   17878:	str	r3, [fp, #-72]	; 0xffffffb8
   1787c:	str	r2, [fp, #-68]	; 0xffffffbc
   17880:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17884:	ldr	r3, [r2, #8]
   17888:	ldr	r2, [r2, #12]
   1788c:	ldr	ip, [fp, #20]
   17890:	ldr	lr, [ip, #8]
   17894:	ldr	ip, [ip, #12]
   17898:	subs	r3, r3, lr
   1789c:	sbc	r2, r2, ip
   178a0:	ldr	ip, [sp, #88]	; 0x58
   178a4:	ldr	lr, [sp, #92]	; 0x5c
   178a8:	subs	r3, r3, ip
   178ac:	sbc	r2, r2, lr
   178b0:	str	r3, [fp, #-64]	; 0xffffffc0
   178b4:	str	r2, [fp, #-60]	; 0xffffffc4
   178b8:	str	r1, [sp, #60]	; 0x3c
   178bc:	str	r0, [sp, #56]	; 0x38
   178c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   178c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   178c8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   178cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   178d0:	eor	r1, r1, r3
   178d4:	eor	r0, r0, r2
   178d8:	orr	r0, r0, r1
   178dc:	cmp	r0, #0
   178e0:	bne	17920 <__assert_fail@plt+0x659c>
   178e4:	b	178e8 <__assert_fail@plt+0x6564>
   178e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   178ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   178f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   178f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   178f8:	eor	r1, r1, r3
   178fc:	eor	r0, r0, r2
   17900:	orr	r0, r0, r1
   17904:	cmp	r0, #0
   17908:	bne	17920 <__assert_fail@plt+0x659c>
   1790c:	b	17910 <__assert_fail@plt+0x658c>
   17910:	movw	r0, #1
   17914:	and	r0, r0, #1
   17918:	strb	r0, [fp, #-25]	; 0xffffffe7
   1791c:	b	17ab0 <__assert_fail@plt+0x672c>
   17920:	movw	r0, #1
   17924:	str	r0, [sp, #84]	; 0x54
   17928:	ldr	r0, [sp, #84]	; 0x54
   1792c:	ldr	r1, [fp, #16]
   17930:	cmp	r0, r1
   17934:	bcs	17aa4 <__assert_fail@plt+0x6720>
   17938:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1793c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17940:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17944:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17948:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1794c:	ldr	lr, [ip]
   17950:	ldr	r4, [ip, #4]
   17954:	ldr	r5, [ip, #8]
   17958:	ldr	ip, [ip, #12]
   1795c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   17960:	ldr	r7, [fp, #-36]	; 0xffffffdc
   17964:	mov	r8, sp
   17968:	str	r7, [r8, #44]	; 0x2c
   1796c:	str	r6, [r8, #40]	; 0x28
   17970:	str	r4, [r8, #36]	; 0x24
   17974:	str	lr, [r8, #32]
   17978:	str	ip, [r8, #28]
   1797c:	str	r5, [r8, #24]
   17980:	str	r3, [r8, #20]
   17984:	str	r2, [r8, #16]
   17988:	str	r1, [r8, #12]
   1798c:	str	r0, [r8, #8]
   17990:	str	r3, [r8, #4]
   17994:	str	r2, [r8]
   17998:	sub	r2, fp, #80	; 0x50
   1799c:	str	r0, [sp, #52]	; 0x34
   179a0:	mov	r0, r2
   179a4:	ldr	r2, [sp, #52]	; 0x34
   179a8:	mov	r3, r1
   179ac:	bl	18580 <__assert_fail@plt+0x71fc>
   179b0:	str	r1, [fp, #-52]	; 0xffffffcc
   179b4:	str	r0, [fp, #-56]	; 0xffffffc8
   179b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   179bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   179c0:	str	r1, [fp, #-44]	; 0xffffffd4
   179c4:	str	r0, [fp, #-48]	; 0xffffffd0
   179c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   179cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   179d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   179d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   179d8:	eor	r1, r1, r3
   179dc:	eor	r0, r0, r2
   179e0:	orr	r0, r0, r1
   179e4:	cmp	r0, #0
   179e8:	bne	17a28 <__assert_fail@plt+0x66a4>
   179ec:	b	179f0 <__assert_fail@plt+0x666c>
   179f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   179f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   179f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   179fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17a00:	eor	r1, r1, r3
   17a04:	eor	r0, r0, r2
   17a08:	orr	r0, r0, r1
   17a0c:	cmp	r0, #0
   17a10:	bne	17a28 <__assert_fail@plt+0x66a4>
   17a14:	b	17a18 <__assert_fail@plt+0x6694>
   17a18:	movw	r0, #1
   17a1c:	and	r0, r0, #1
   17a20:	strb	r0, [fp, #-25]	; 0xffffffe7
   17a24:	b	17ab0 <__assert_fail@plt+0x672c>
   17a28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17a2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17a30:	ldr	r2, [fp, #20]
   17a34:	ldr	r3, [r2]
   17a38:	ldr	r2, [r2, #4]
   17a3c:	eor	r1, r1, r2
   17a40:	eor	r0, r0, r3
   17a44:	orr	r0, r0, r1
   17a48:	cmp	r0, #0
   17a4c:	bne	17a90 <__assert_fail@plt+0x670c>
   17a50:	b	17a54 <__assert_fail@plt+0x66d0>
   17a54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17a58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17a5c:	ldr	r2, [fp, #20]
   17a60:	ldr	r3, [r2, #8]
   17a64:	ldr	r2, [r2, #12]
   17a68:	eor	r1, r1, r2
   17a6c:	eor	r0, r0, r3
   17a70:	orr	r0, r0, r1
   17a74:	cmp	r0, #0
   17a78:	bne	17a90 <__assert_fail@plt+0x670c>
   17a7c:	b	17a80 <__assert_fail@plt+0x66fc>
   17a80:	movw	r0, #0
   17a84:	and	r0, r0, #1
   17a88:	strb	r0, [fp, #-25]	; 0xffffffe7
   17a8c:	b	17ab0 <__assert_fail@plt+0x672c>
   17a90:	b	17a94 <__assert_fail@plt+0x6710>
   17a94:	ldr	r0, [sp, #84]	; 0x54
   17a98:	add	r0, r0, #1
   17a9c:	str	r0, [sp, #84]	; 0x54
   17aa0:	b	17928 <__assert_fail@plt+0x65a4>
   17aa4:	movw	r0, #0
   17aa8:	and	r0, r0, #1
   17aac:	strb	r0, [fp, #-25]	; 0xffffffe7
   17ab0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   17ab4:	and	r0, r0, #1
   17ab8:	sub	sp, fp, #24
   17abc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ac4:	add	fp, sp, #28
   17ac8:	sub	sp, sp, #196	; 0xc4
   17acc:	ldr	ip, [fp, #12]
   17ad0:	ldr	lr, [fp, #8]
   17ad4:	ldr	r4, [fp, #16]
   17ad8:	str	r0, [fp, #-32]	; 0xffffffe0
   17adc:	str	r1, [fp, #-36]	; 0xffffffdc
   17ae0:	str	r2, [fp, #-40]	; 0xffffffd8
   17ae4:	str	r3, [fp, #-44]	; 0xffffffd4
   17ae8:	str	ip, [fp, #-52]	; 0xffffffcc
   17aec:	str	lr, [fp, #-56]	; 0xffffffc8
   17af0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17af4:	ldr	r1, [r0]
   17af8:	ldr	r0, [r0, #4]
   17afc:	str	r0, [fp, #-84]	; 0xffffffac
   17b00:	str	r1, [fp, #-88]	; 0xffffffa8
   17b04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b08:	ldr	r1, [r0, #8]
   17b0c:	ldr	r0, [r0, #12]
   17b10:	str	r0, [fp, #-76]	; 0xffffffb4
   17b14:	str	r1, [fp, #-80]	; 0xffffffb0
   17b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b1c:	ldr	r1, [r0]
   17b20:	ldr	r0, [r0, #4]
   17b24:	str	r0, [fp, #-100]	; 0xffffff9c
   17b28:	str	r1, [fp, #-104]	; 0xffffff98
   17b2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b30:	ldr	r1, [r0, #8]
   17b34:	ldr	r0, [r0, #12]
   17b38:	str	r0, [fp, #-92]	; 0xffffffa4
   17b3c:	str	r1, [fp, #-96]	; 0xffffffa0
   17b40:	ldr	r0, [fp, #16]
   17b44:	ldr	r1, [r0]
   17b48:	ldr	r0, [r0, #4]
   17b4c:	str	r0, [fp, #-68]	; 0xffffffbc
   17b50:	str	r1, [fp, #-72]	; 0xffffffb8
   17b54:	ldr	r0, [fp, #16]
   17b58:	ldr	r1, [r0, #8]
   17b5c:	ldr	r0, [r0, #12]
   17b60:	str	r0, [fp, #-60]	; 0xffffffc4
   17b64:	str	r1, [fp, #-64]	; 0xffffffc0
   17b68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b6c:	ldr	r1, [r0]
   17b70:	ldr	r0, [r0, #4]
   17b74:	str	r0, [sp, #108]	; 0x6c
   17b78:	str	r1, [sp, #104]	; 0x68
   17b7c:	movw	r0, #64	; 0x40
   17b80:	str	r0, [fp, #-108]	; 0xffffff94
   17b84:	str	r4, [sp, #100]	; 0x64
   17b88:	ldr	r0, [fp, #-108]	; 0xffffff94
   17b8c:	cmp	r0, #0
   17b90:	bls	17d10 <__assert_fail@plt+0x698c>
   17b94:	ldrb	r0, [sp, #104]	; 0x68
   17b98:	tst	r0, #1
   17b9c:	beq	17c5c <__assert_fail@plt+0x68d8>
   17ba0:	b	17ba4 <__assert_fail@plt+0x6820>
   17ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ba8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17bac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17bb0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17bb4:	ldr	ip, [fp, #-68]	; 0xffffffbc
   17bb8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   17bbc:	ldr	r4, [fp, #-76]	; 0xffffffb4
   17bc0:	ldr	r5, [fp, #-88]	; 0xffffffa8
   17bc4:	ldr	r6, [fp, #-84]	; 0xffffffac
   17bc8:	ldr	r7, [fp, #-96]	; 0xffffffa0
   17bcc:	ldr	r8, [fp, #-92]	; 0xffffffa4
   17bd0:	ldr	r9, [fp, #-104]	; 0xffffff98
   17bd4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   17bd8:	str	r0, [sp, #96]	; 0x60
   17bdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17be0:	str	r0, [sp, #92]	; 0x5c
   17be4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17be8:	str	r0, [sp, #88]	; 0x58
   17bec:	mov	r0, sp
   17bf0:	str	r0, [sp, #84]	; 0x54
   17bf4:	ldr	r0, [sp, #88]	; 0x58
   17bf8:	str	r1, [sp, #80]	; 0x50
   17bfc:	ldr	r1, [sp, #84]	; 0x54
   17c00:	str	r0, [r1, #44]	; 0x2c
   17c04:	ldr	r0, [sp, #92]	; 0x5c
   17c08:	str	r0, [r1, #40]	; 0x28
   17c0c:	str	sl, [r1, #36]	; 0x24
   17c10:	str	r9, [r1, #32]
   17c14:	str	r8, [r1, #28]
   17c18:	str	r7, [r1, #24]
   17c1c:	str	r6, [r1, #20]
   17c20:	str	r5, [r1, #16]
   17c24:	str	r4, [r1, #12]
   17c28:	str	lr, [r1, #8]
   17c2c:	str	ip, [r1, #4]
   17c30:	ldr	r0, [sp, #80]	; 0x50
   17c34:	str	r0, [r1]
   17c38:	ldr	r0, [sp, #96]	; 0x60
   17c3c:	bl	18580 <__assert_fail@plt+0x71fc>
   17c40:	str	r1, [fp, #-68]	; 0xffffffbc
   17c44:	str	r0, [fp, #-72]	; 0xffffffb8
   17c48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c4c:	ldr	r1, [r0]
   17c50:	ldr	r0, [r0, #4]
   17c54:	str	r0, [fp, #-60]	; 0xffffffc4
   17c58:	str	r1, [fp, #-64]	; 0xffffffc0
   17c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c60:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17c64:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17c68:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17c6c:	ldr	ip, [fp, #-84]	; 0xffffffac
   17c70:	ldr	lr, [fp, #-96]	; 0xffffffa0
   17c74:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17c78:	ldr	r5, [fp, #-104]	; 0xffffff98
   17c7c:	ldr	r6, [fp, #-100]	; 0xffffff9c
   17c80:	ldr	r7, [fp, #-56]	; 0xffffffc8
   17c84:	ldr	r8, [fp, #-52]	; 0xffffffcc
   17c88:	mov	r9, sp
   17c8c:	str	r8, [r9, #44]	; 0x2c
   17c90:	str	r7, [r9, #40]	; 0x28
   17c94:	str	r6, [r9, #36]	; 0x24
   17c98:	str	r5, [r9, #32]
   17c9c:	str	r4, [r9, #28]
   17ca0:	str	lr, [r9, #24]
   17ca4:	str	ip, [r9, #20]
   17ca8:	str	r3, [r9, #16]
   17cac:	str	r2, [r9, #12]
   17cb0:	str	r1, [r9, #8]
   17cb4:	str	ip, [r9, #4]
   17cb8:	str	r3, [r9]
   17cbc:	str	r2, [sp, #76]	; 0x4c
   17cc0:	mov	r2, r1
   17cc4:	ldr	r3, [sp, #76]	; 0x4c
   17cc8:	bl	18580 <__assert_fail@plt+0x71fc>
   17ccc:	str	r1, [fp, #-84]	; 0xffffffac
   17cd0:	str	r0, [fp, #-88]	; 0xffffffa8
   17cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17cd8:	ldr	r1, [r0]
   17cdc:	ldr	r0, [r0, #4]
   17ce0:	str	r0, [fp, #-76]	; 0xffffffb4
   17ce4:	str	r1, [fp, #-80]	; 0xffffffb0
   17ce8:	ldr	r0, [fp, #-108]	; 0xffffff94
   17cec:	sub	r0, r0, #1
   17cf0:	str	r0, [fp, #-108]	; 0xffffff94
   17cf4:	ldr	r0, [sp, #104]	; 0x68
   17cf8:	ldr	r1, [sp, #108]	; 0x6c
   17cfc:	lsrs	r1, r1, #1
   17d00:	rrx	r0, r0
   17d04:	str	r1, [sp, #108]	; 0x6c
   17d08:	str	r0, [sp, #104]	; 0x68
   17d0c:	b	17b88 <__assert_fail@plt+0x6804>
   17d10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d14:	ldr	r1, [r0, #8]
   17d18:	ldr	r0, [r0, #12]
   17d1c:	str	r0, [sp, #108]	; 0x6c
   17d20:	str	r1, [sp, #104]	; 0x68
   17d24:	ldr	r0, [sp, #104]	; 0x68
   17d28:	ldr	r1, [sp, #108]	; 0x6c
   17d2c:	orr	r0, r0, r1
   17d30:	cmp	r0, #0
   17d34:	beq	17eac <__assert_fail@plt+0x6b28>
   17d38:	b	17d3c <__assert_fail@plt+0x69b8>
   17d3c:	ldrb	r0, [sp, #104]	; 0x68
   17d40:	tst	r0, #1
   17d44:	beq	17e04 <__assert_fail@plt+0x6a80>
   17d48:	b	17d4c <__assert_fail@plt+0x69c8>
   17d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d50:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17d54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d58:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17d5c:	ldr	ip, [fp, #-68]	; 0xffffffbc
   17d60:	ldr	lr, [fp, #-80]	; 0xffffffb0
   17d64:	ldr	r4, [fp, #-76]	; 0xffffffb4
   17d68:	ldr	r5, [fp, #-88]	; 0xffffffa8
   17d6c:	ldr	r6, [fp, #-84]	; 0xffffffac
   17d70:	ldr	r7, [fp, #-96]	; 0xffffffa0
   17d74:	ldr	r8, [fp, #-92]	; 0xffffffa4
   17d78:	ldr	r9, [fp, #-104]	; 0xffffff98
   17d7c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   17d80:	str	r0, [sp, #72]	; 0x48
   17d84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17d88:	str	r0, [sp, #68]	; 0x44
   17d8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17d90:	str	r0, [sp, #64]	; 0x40
   17d94:	mov	r0, sp
   17d98:	str	r0, [sp, #60]	; 0x3c
   17d9c:	ldr	r0, [sp, #64]	; 0x40
   17da0:	str	r1, [sp, #56]	; 0x38
   17da4:	ldr	r1, [sp, #60]	; 0x3c
   17da8:	str	r0, [r1, #44]	; 0x2c
   17dac:	ldr	r0, [sp, #68]	; 0x44
   17db0:	str	r0, [r1, #40]	; 0x28
   17db4:	str	sl, [r1, #36]	; 0x24
   17db8:	str	r9, [r1, #32]
   17dbc:	str	r8, [r1, #28]
   17dc0:	str	r7, [r1, #24]
   17dc4:	str	r6, [r1, #20]
   17dc8:	str	r5, [r1, #16]
   17dcc:	str	r4, [r1, #12]
   17dd0:	str	lr, [r1, #8]
   17dd4:	str	ip, [r1, #4]
   17dd8:	ldr	r0, [sp, #56]	; 0x38
   17ddc:	str	r0, [r1]
   17de0:	ldr	r0, [sp, #72]	; 0x48
   17de4:	bl	18580 <__assert_fail@plt+0x71fc>
   17de8:	str	r1, [fp, #-68]	; 0xffffffbc
   17dec:	str	r0, [fp, #-72]	; 0xffffffb8
   17df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17df4:	ldr	r1, [r0]
   17df8:	ldr	r0, [r0, #4]
   17dfc:	str	r0, [fp, #-60]	; 0xffffffc4
   17e00:	str	r1, [fp, #-64]	; 0xffffffc0
   17e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e08:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17e0c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17e10:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17e14:	ldr	ip, [fp, #-84]	; 0xffffffac
   17e18:	ldr	lr, [fp, #-96]	; 0xffffffa0
   17e1c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17e20:	ldr	r5, [fp, #-104]	; 0xffffff98
   17e24:	ldr	r6, [fp, #-100]	; 0xffffff9c
   17e28:	ldr	r7, [fp, #-56]	; 0xffffffc8
   17e2c:	ldr	r8, [fp, #-52]	; 0xffffffcc
   17e30:	mov	r9, sp
   17e34:	str	r8, [r9, #44]	; 0x2c
   17e38:	str	r7, [r9, #40]	; 0x28
   17e3c:	str	r6, [r9, #36]	; 0x24
   17e40:	str	r5, [r9, #32]
   17e44:	str	r4, [r9, #28]
   17e48:	str	lr, [r9, #24]
   17e4c:	str	ip, [r9, #20]
   17e50:	str	r3, [r9, #16]
   17e54:	str	r2, [r9, #12]
   17e58:	str	r1, [r9, #8]
   17e5c:	str	ip, [r9, #4]
   17e60:	str	r3, [r9]
   17e64:	str	r2, [sp, #52]	; 0x34
   17e68:	mov	r2, r1
   17e6c:	ldr	r3, [sp, #52]	; 0x34
   17e70:	bl	18580 <__assert_fail@plt+0x71fc>
   17e74:	str	r1, [fp, #-84]	; 0xffffffac
   17e78:	str	r0, [fp, #-88]	; 0xffffffa8
   17e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e80:	ldr	r1, [r0]
   17e84:	ldr	r0, [r0, #4]
   17e88:	str	r0, [fp, #-76]	; 0xffffffb4
   17e8c:	str	r1, [fp, #-80]	; 0xffffffb0
   17e90:	ldr	r0, [sp, #104]	; 0x68
   17e94:	ldr	r1, [sp, #108]	; 0x6c
   17e98:	lsrs	r1, r1, #1
   17e9c:	rrx	r0, r0
   17ea0:	str	r1, [sp, #108]	; 0x6c
   17ea4:	str	r0, [sp, #104]	; 0x68
   17ea8:	b	17d24 <__assert_fail@plt+0x69a0>
   17eac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17eb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17eb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17eb8:	str	r1, [r2, #4]
   17ebc:	str	r0, [r2]
   17ec0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17ec4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17ec8:	sub	sp, fp, #28
   17ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ed0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17ed4:	add	fp, sp, #24
   17ed8:	sub	sp, sp, #104	; 0x68
   17edc:	ldr	ip, [fp, #36]	; 0x24
   17ee0:	ldr	lr, [fp, #32]
   17ee4:	ldr	r4, [fp, #20]
   17ee8:	ldr	r5, [fp, #16]
   17eec:	ldr	r6, [fp, #12]
   17ef0:	ldr	r7, [fp, #8]
   17ef4:	ldr	r8, [fp, #24]
   17ef8:	str	r0, [fp, #-40]	; 0xffffffd8
   17efc:	str	r1, [fp, #-36]	; 0xffffffdc
   17f00:	str	r3, [fp, #-44]	; 0xffffffd4
   17f04:	str	r2, [fp, #-48]	; 0xffffffd0
   17f08:	str	r6, [fp, #-52]	; 0xffffffcc
   17f0c:	str	r7, [fp, #-56]	; 0xffffffc8
   17f10:	str	r4, [sp, #68]	; 0x44
   17f14:	str	r5, [sp, #64]	; 0x40
   17f18:	str	ip, [sp, #60]	; 0x3c
   17f1c:	str	lr, [sp, #56]	; 0x38
   17f20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17f24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17f28:	ldr	r2, [sp, #64]	; 0x40
   17f2c:	ldr	r3, [sp, #68]	; 0x44
   17f30:	ldr	ip, [fp, #-40]	; 0xffffffd8
   17f34:	ldr	lr, [fp, #-36]	; 0xffffffdc
   17f38:	ldr	r4, [fp, #-48]	; 0xffffffd0
   17f3c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   17f40:	ldr	r6, [sp, #56]	; 0x38
   17f44:	ldr	r7, [sp, #60]	; 0x3c
   17f48:	mov	r9, sp
   17f4c:	str	r7, [r9, #20]
   17f50:	str	r6, [r9, #16]
   17f54:	str	r5, [r9, #12]
   17f58:	str	r4, [r9, #8]
   17f5c:	str	lr, [r9, #4]
   17f60:	str	ip, [r9]
   17f64:	str	r8, [sp, #32]
   17f68:	bl	180f4 <__assert_fail@plt+0x6d70>
   17f6c:	str	r1, [sp, #52]	; 0x34
   17f70:	str	r0, [sp, #48]	; 0x30
   17f74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17f78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17f7c:	ldr	r2, [sp, #56]	; 0x38
   17f80:	ldr	r3, [sp, #60]	; 0x3c
   17f84:	subs	r0, r0, r2
   17f88:	sbc	r1, r1, r3
   17f8c:	str	r0, [sp, #40]	; 0x28
   17f90:	str	r1, [sp, #44]	; 0x2c
   17f94:	ldr	r0, [sp, #48]	; 0x30
   17f98:	ldr	r1, [sp, #52]	; 0x34
   17f9c:	ldr	r2, [sp, #56]	; 0x38
   17fa0:	ldr	r3, [sp, #60]	; 0x3c
   17fa4:	eor	r1, r1, r3
   17fa8:	eor	r0, r0, r2
   17fac:	orr	r0, r0, r1
   17fb0:	cmp	r0, #0
   17fb4:	beq	17fe4 <__assert_fail@plt+0x6c60>
   17fb8:	b	17fbc <__assert_fail@plt+0x6c38>
   17fbc:	ldr	r0, [sp, #48]	; 0x30
   17fc0:	ldr	r1, [sp, #52]	; 0x34
   17fc4:	ldr	r2, [sp, #40]	; 0x28
   17fc8:	ldr	r3, [sp, #44]	; 0x2c
   17fcc:	eor	r1, r1, r3
   17fd0:	eor	r0, r0, r2
   17fd4:	orr	r0, r0, r1
   17fd8:	cmp	r0, #0
   17fdc:	bne	17ff4 <__assert_fail@plt+0x6c70>
   17fe0:	b	17fe4 <__assert_fail@plt+0x6c60>
   17fe4:	movw	r0, #1
   17fe8:	and	r0, r0, #1
   17fec:	strb	r0, [fp, #-25]	; 0xffffffe7
   17ff0:	b	180e4 <__assert_fail@plt+0x6d60>
   17ff4:	movw	r0, #1
   17ff8:	str	r0, [sp, #36]	; 0x24
   17ffc:	ldr	r0, [sp, #36]	; 0x24
   18000:	ldr	r1, [fp, #24]
   18004:	cmp	r0, r1
   18008:	bcs	180d8 <__assert_fail@plt+0x6d54>
   1800c:	ldr	r0, [sp, #48]	; 0x30
   18010:	ldr	r1, [sp, #52]	; 0x34
   18014:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18018:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1801c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   18020:	ldr	lr, [fp, #-44]	; 0xffffffd4
   18024:	mov	r4, sp
   18028:	str	lr, [r4, #12]
   1802c:	str	ip, [r4, #8]
   18030:	str	r3, [r4, #4]
   18034:	str	r2, [r4]
   18038:	str	r0, [sp, #28]
   1803c:	str	r1, [sp, #24]
   18040:	ldr	r2, [sp, #28]
   18044:	ldr	r3, [sp, #24]
   18048:	bl	18250 <__assert_fail@plt+0x6ecc>
   1804c:	str	r1, [sp, #52]	; 0x34
   18050:	str	r0, [sp, #48]	; 0x30
   18054:	ldr	r0, [sp, #48]	; 0x30
   18058:	ldr	r1, [sp, #52]	; 0x34
   1805c:	ldr	r2, [sp, #40]	; 0x28
   18060:	ldr	r3, [sp, #44]	; 0x2c
   18064:	eor	r1, r1, r3
   18068:	eor	r0, r0, r2
   1806c:	orr	r0, r0, r1
   18070:	cmp	r0, #0
   18074:	bne	1808c <__assert_fail@plt+0x6d08>
   18078:	b	1807c <__assert_fail@plt+0x6cf8>
   1807c:	movw	r0, #1
   18080:	and	r0, r0, #1
   18084:	strb	r0, [fp, #-25]	; 0xffffffe7
   18088:	b	180e4 <__assert_fail@plt+0x6d60>
   1808c:	ldr	r0, [sp, #48]	; 0x30
   18090:	ldr	r1, [sp, #52]	; 0x34
   18094:	ldr	r2, [sp, #56]	; 0x38
   18098:	ldr	r3, [sp, #60]	; 0x3c
   1809c:	eor	r1, r1, r3
   180a0:	eor	r0, r0, r2
   180a4:	orr	r0, r0, r1
   180a8:	cmp	r0, #0
   180ac:	bne	180c4 <__assert_fail@plt+0x6d40>
   180b0:	b	180b4 <__assert_fail@plt+0x6d30>
   180b4:	movw	r0, #0
   180b8:	and	r0, r0, #1
   180bc:	strb	r0, [fp, #-25]	; 0xffffffe7
   180c0:	b	180e4 <__assert_fail@plt+0x6d60>
   180c4:	b	180c8 <__assert_fail@plt+0x6d44>
   180c8:	ldr	r0, [sp, #36]	; 0x24
   180cc:	add	r0, r0, #1
   180d0:	str	r0, [sp, #36]	; 0x24
   180d4:	b	17ffc <__assert_fail@plt+0x6c78>
   180d8:	movw	r0, #0
   180dc:	and	r0, r0, #1
   180e0:	strb	r0, [fp, #-25]	; 0xffffffe7
   180e4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   180e8:	and	r0, r0, #1
   180ec:	sub	sp, fp, #24
   180f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   180f4:	push	{r4, r5, r6, r7, fp, lr}
   180f8:	add	fp, sp, #16
   180fc:	sub	sp, sp, #72	; 0x48
   18100:	ldr	ip, [fp, #28]
   18104:	ldr	lr, [fp, #24]
   18108:	ldr	r4, [fp, #20]
   1810c:	ldr	r5, [fp, #16]
   18110:	ldr	r6, [fp, #12]
   18114:	ldr	r7, [fp, #8]
   18118:	str	r0, [fp, #-24]	; 0xffffffe8
   1811c:	str	r1, [fp, #-20]	; 0xffffffec
   18120:	str	r3, [fp, #-28]	; 0xffffffe4
   18124:	str	r2, [fp, #-32]	; 0xffffffe0
   18128:	str	r6, [fp, #-36]	; 0xffffffdc
   1812c:	str	r7, [fp, #-40]	; 0xffffffd8
   18130:	str	r4, [sp, #44]	; 0x2c
   18134:	str	r5, [sp, #40]	; 0x28
   18138:	str	ip, [sp, #36]	; 0x24
   1813c:	str	lr, [sp, #32]
   18140:	ldr	r0, [sp, #32]
   18144:	ldr	r1, [sp, #36]	; 0x24
   18148:	str	r1, [sp, #28]
   1814c:	str	r0, [sp, #24]
   18150:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   18154:	tst	r0, #1
   18158:	beq	18170 <__assert_fail@plt+0x6dec>
   1815c:	b	18160 <__assert_fail@plt+0x6ddc>
   18160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18164:	ldr	r1, [fp, #-20]	; 0xffffffec
   18168:	str	r1, [sp, #28]
   1816c:	str	r0, [sp, #24]
   18170:	b	18174 <__assert_fail@plt+0x6df0>
   18174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18178:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1817c:	orr	r0, r0, r1
   18180:	cmp	r0, #0
   18184:	beq	18240 <__assert_fail@plt+0x6ebc>
   18188:	b	1818c <__assert_fail@plt+0x6e08>
   1818c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18190:	ldr	r1, [fp, #-20]	; 0xffffffec
   18194:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18198:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1819c:	ldr	ip, [sp, #40]	; 0x28
   181a0:	ldr	lr, [sp, #44]	; 0x2c
   181a4:	mov	r4, sp
   181a8:	str	lr, [r4, #12]
   181ac:	str	ip, [r4, #8]
   181b0:	str	r3, [r4, #4]
   181b4:	str	r2, [r4]
   181b8:	str	r0, [sp, #20]
   181bc:	str	r1, [sp, #16]
   181c0:	ldr	r2, [sp, #20]
   181c4:	ldr	r3, [sp, #16]
   181c8:	bl	18250 <__assert_fail@plt+0x6ecc>
   181cc:	str	r1, [fp, #-20]	; 0xffffffec
   181d0:	str	r0, [fp, #-24]	; 0xffffffe8
   181d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   181d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   181dc:	lsrs	r1, r1, #1
   181e0:	rrx	r0, r0
   181e4:	str	r1, [fp, #-28]	; 0xffffffe4
   181e8:	str	r0, [fp, #-32]	; 0xffffffe0
   181ec:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   181f0:	tst	r0, #1
   181f4:	beq	1823c <__assert_fail@plt+0x6eb8>
   181f8:	b	181fc <__assert_fail@plt+0x6e78>
   181fc:	ldr	r0, [sp, #24]
   18200:	ldr	r1, [sp, #28]
   18204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1820c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   18210:	ldr	lr, [fp, #-36]	; 0xffffffdc
   18214:	ldr	r4, [sp, #40]	; 0x28
   18218:	ldr	r5, [sp, #44]	; 0x2c
   1821c:	mov	r6, sp
   18220:	str	r5, [r6, #12]
   18224:	str	r4, [r6, #8]
   18228:	str	lr, [r6, #4]
   1822c:	str	ip, [r6]
   18230:	bl	18250 <__assert_fail@plt+0x6ecc>
   18234:	str	r1, [sp, #28]
   18238:	str	r0, [sp, #24]
   1823c:	b	18174 <__assert_fail@plt+0x6df0>
   18240:	ldr	r0, [sp, #24]
   18244:	ldr	r1, [sp, #28]
   18248:	sub	sp, fp, #16
   1824c:	pop	{r4, r5, r6, r7, fp, pc}
   18250:	push	{r4, r5, fp, lr}
   18254:	add	fp, sp, #8
   18258:	sub	sp, sp, #232	; 0xe8
   1825c:	ldr	ip, [fp, #20]
   18260:	ldr	lr, [fp, #16]
   18264:	ldr	r4, [fp, #12]
   18268:	ldr	r5, [fp, #8]
   1826c:	str	r0, [fp, #-16]
   18270:	str	r1, [fp, #-12]
   18274:	str	r3, [fp, #-20]	; 0xffffffec
   18278:	str	r2, [fp, #-24]	; 0xffffffe8
   1827c:	str	r4, [fp, #-28]	; 0xffffffe4
   18280:	str	r5, [fp, #-32]	; 0xffffffe0
   18284:	str	ip, [fp, #-36]	; 0xffffffdc
   18288:	str	lr, [fp, #-40]	; 0xffffffd8
   1828c:	ldr	r0, [fp, #-16]
   18290:	ldr	r1, [fp, #-12]
   18294:	str	r1, [sp, #100]	; 0x64
   18298:	str	r0, [sp, #96]	; 0x60
   1829c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   182a4:	str	r1, [sp, #92]	; 0x5c
   182a8:	str	r0, [sp, #88]	; 0x58
   182ac:	ldr	r0, [sp, #96]	; 0x60
   182b0:	str	r0, [sp, #116]	; 0x74
   182b4:	ldr	r0, [sp, #100]	; 0x64
   182b8:	str	r0, [sp, #108]	; 0x6c
   182bc:	ldr	r0, [sp, #88]	; 0x58
   182c0:	str	r0, [sp, #112]	; 0x70
   182c4:	ldr	r0, [sp, #92]	; 0x5c
   182c8:	str	r0, [sp, #104]	; 0x68
   182cc:	ldr	r0, [sp, #116]	; 0x74
   182d0:	ldr	r1, [sp, #112]	; 0x70
   182d4:	umull	r0, r1, r0, r1
   182d8:	str	r1, [fp, #-92]	; 0xffffffa4
   182dc:	str	r0, [fp, #-96]	; 0xffffffa0
   182e0:	ldr	r0, [sp, #116]	; 0x74
   182e4:	ldr	r1, [sp, #104]	; 0x68
   182e8:	umull	r0, r1, r0, r1
   182ec:	str	r1, [fp, #-100]	; 0xffffff9c
   182f0:	str	r0, [fp, #-104]	; 0xffffff98
   182f4:	ldr	r0, [sp, #108]	; 0x6c
   182f8:	ldr	r1, [sp, #112]	; 0x70
   182fc:	umull	r0, r1, r0, r1
   18300:	str	r1, [fp, #-108]	; 0xffffff94
   18304:	str	r0, [fp, #-112]	; 0xffffff90
   18308:	ldr	r0, [sp, #108]	; 0x6c
   1830c:	ldr	r1, [sp, #104]	; 0x68
   18310:	umull	r0, r1, r0, r1
   18314:	str	r1, [sp, #124]	; 0x7c
   18318:	str	r0, [sp, #120]	; 0x78
   1831c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18320:	ldr	r1, [fp, #-104]	; 0xffffff98
   18324:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18328:	adds	r0, r1, r0
   1832c:	adc	r1, r2, #0
   18330:	str	r0, [fp, #-104]	; 0xffffff98
   18334:	str	r1, [fp, #-100]	; 0xffffff9c
   18338:	ldr	r0, [fp, #-112]	; 0xffffff90
   1833c:	ldr	r1, [fp, #-108]	; 0xffffff94
   18340:	ldr	r2, [fp, #-104]	; 0xffffff98
   18344:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18348:	adds	r0, r2, r0
   1834c:	adc	r1, r3, r1
   18350:	str	r0, [fp, #-104]	; 0xffffff98
   18354:	str	r1, [fp, #-100]	; 0xffffff9c
   18358:	ldr	r0, [fp, #-104]	; 0xffffff98
   1835c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18360:	ldr	r2, [fp, #-112]	; 0xffffff90
   18364:	ldr	r3, [fp, #-108]	; 0xffffff94
   18368:	subs	r0, r0, r2
   1836c:	sbcs	r1, r1, r3
   18370:	str	r0, [sp, #20]
   18374:	str	r1, [sp, #16]
   18378:	bcs	1838c <__assert_fail@plt+0x7008>
   1837c:	b	18380 <__assert_fail@plt+0x6ffc>
   18380:	ldr	r0, [sp, #124]	; 0x7c
   18384:	add	r0, r0, #1
   18388:	str	r0, [sp, #124]	; 0x7c
   1838c:	ldr	r0, [sp, #120]	; 0x78
   18390:	ldr	r1, [sp, #124]	; 0x7c
   18394:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18398:	adds	r0, r0, r2
   1839c:	adc	r1, r1, #0
   183a0:	str	r0, [fp, #-48]	; 0xffffffd0
   183a4:	str	r1, [fp, #-44]	; 0xffffffd4
   183a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   183ac:	ldr	r1, [fp, #-96]	; 0xffffffa0
   183b0:	str	r0, [fp, #-52]	; 0xffffffcc
   183b4:	str	r1, [fp, #-56]	; 0xffffffc8
   183b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   183bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   183c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   183c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   183c8:	umull	ip, lr, r0, r2
   183cc:	mla	r0, r0, r3, lr
   183d0:	mla	r0, r1, r2, r0
   183d4:	str	ip, [fp, #-64]	; 0xffffffc0
   183d8:	str	r0, [fp, #-60]	; 0xffffffc4
   183dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   183e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   183e4:	str	r1, [sp, #36]	; 0x24
   183e8:	str	r0, [sp, #32]
   183ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   183f4:	str	r1, [sp, #28]
   183f8:	str	r0, [sp, #24]
   183fc:	ldr	r0, [sp, #32]
   18400:	str	r0, [sp, #52]	; 0x34
   18404:	ldr	r0, [sp, #36]	; 0x24
   18408:	str	r0, [sp, #44]	; 0x2c
   1840c:	ldr	r0, [sp, #24]
   18410:	str	r0, [sp, #48]	; 0x30
   18414:	ldr	r0, [sp, #28]
   18418:	str	r0, [sp, #40]	; 0x28
   1841c:	ldr	r0, [sp, #52]	; 0x34
   18420:	ldr	r1, [sp, #48]	; 0x30
   18424:	umull	r0, r1, r0, r1
   18428:	str	r1, [sp, #84]	; 0x54
   1842c:	str	r0, [sp, #80]	; 0x50
   18430:	ldr	r0, [sp, #52]	; 0x34
   18434:	ldr	r1, [sp, #40]	; 0x28
   18438:	umull	r0, r1, r0, r1
   1843c:	str	r1, [sp, #76]	; 0x4c
   18440:	str	r0, [sp, #72]	; 0x48
   18444:	ldr	r0, [sp, #44]	; 0x2c
   18448:	ldr	r1, [sp, #48]	; 0x30
   1844c:	umull	r0, r1, r0, r1
   18450:	str	r1, [sp, #68]	; 0x44
   18454:	str	r0, [sp, #64]	; 0x40
   18458:	ldr	r0, [sp, #44]	; 0x2c
   1845c:	ldr	r1, [sp, #40]	; 0x28
   18460:	umull	r0, r1, r0, r1
   18464:	str	r1, [sp, #60]	; 0x3c
   18468:	str	r0, [sp, #56]	; 0x38
   1846c:	ldr	r0, [sp, #84]	; 0x54
   18470:	ldr	r1, [sp, #72]	; 0x48
   18474:	ldr	r2, [sp, #76]	; 0x4c
   18478:	adds	r0, r1, r0
   1847c:	adc	r1, r2, #0
   18480:	str	r0, [sp, #72]	; 0x48
   18484:	str	r1, [sp, #76]	; 0x4c
   18488:	ldr	r0, [sp, #64]	; 0x40
   1848c:	ldr	r1, [sp, #68]	; 0x44
   18490:	ldr	r2, [sp, #72]	; 0x48
   18494:	ldr	r3, [sp, #76]	; 0x4c
   18498:	adds	r0, r2, r0
   1849c:	adc	r1, r3, r1
   184a0:	str	r0, [sp, #72]	; 0x48
   184a4:	str	r1, [sp, #76]	; 0x4c
   184a8:	ldr	r0, [sp, #72]	; 0x48
   184ac:	ldr	r1, [sp, #76]	; 0x4c
   184b0:	ldr	r2, [sp, #64]	; 0x40
   184b4:	ldr	r3, [sp, #68]	; 0x44
   184b8:	subs	r0, r0, r2
   184bc:	sbcs	r1, r1, r3
   184c0:	str	r0, [sp, #12]
   184c4:	str	r1, [sp, #8]
   184c8:	bcs	184dc <__assert_fail@plt+0x7158>
   184cc:	b	184d0 <__assert_fail@plt+0x714c>
   184d0:	ldr	r0, [sp, #60]	; 0x3c
   184d4:	add	r0, r0, #1
   184d8:	str	r0, [sp, #60]	; 0x3c
   184dc:	ldr	r0, [sp, #56]	; 0x38
   184e0:	ldr	r1, [sp, #60]	; 0x3c
   184e4:	ldr	r2, [sp, #76]	; 0x4c
   184e8:	adds	r0, r0, r2
   184ec:	adc	r1, r1, #0
   184f0:	str	r0, [fp, #-72]	; 0xffffffb8
   184f4:	str	r1, [fp, #-68]	; 0xffffffbc
   184f8:	ldr	r0, [sp, #72]	; 0x48
   184fc:	ldr	r1, [sp, #80]	; 0x50
   18500:	str	r0, [fp, #-84]	; 0xffffffac
   18504:	str	r1, [fp, #-88]	; 0xffffffa8
   18508:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1850c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18510:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18514:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18518:	subs	r0, r0, r2
   1851c:	sbc	r1, r1, r3
   18520:	str	r0, [fp, #-80]	; 0xffffffb0
   18524:	str	r1, [fp, #-76]	; 0xffffffb4
   18528:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1852c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18530:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18534:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18538:	subs	r0, r0, r2
   1853c:	sbcs	r1, r1, r3
   18540:	str	r0, [sp, #4]
   18544:	str	r1, [sp]
   18548:	bcs	18570 <__assert_fail@plt+0x71ec>
   1854c:	b	18550 <__assert_fail@plt+0x71cc>
   18550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18554:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18558:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1855c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   18560:	adds	r0, r2, r0
   18564:	adc	r1, r3, r1
   18568:	str	r0, [fp, #-80]	; 0xffffffb0
   1856c:	str	r1, [fp, #-76]	; 0xffffffb4
   18570:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18574:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18578:	sub	sp, fp, #8
   1857c:	pop	{r4, r5, fp, pc}
   18580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18584:	add	fp, sp, #28
   18588:	sub	sp, sp, #884	; 0x374
   1858c:	ldr	r1, [fp, #52]	; 0x34
   18590:	ldr	ip, [fp, #48]	; 0x30
   18594:	ldr	lr, [fp, #44]	; 0x2c
   18598:	ldr	r4, [fp, #40]	; 0x28
   1859c:	ldr	r5, [fp, #36]	; 0x24
   185a0:	ldr	r6, [fp, #32]
   185a4:	ldr	r7, [fp, #28]
   185a8:	ldr	r8, [fp, #24]
   185ac:	ldr	r9, [fp, #20]
   185b0:	ldr	sl, [fp, #16]
   185b4:	str	r0, [sp, #164]	; 0xa4
   185b8:	ldr	r0, [fp, #12]
   185bc:	str	r0, [sp, #160]	; 0xa0
   185c0:	ldr	r0, [fp, #8]
   185c4:	str	r0, [sp, #156]	; 0x9c
   185c8:	ldr	r0, [sp, #164]	; 0xa4
   185cc:	str	r0, [fp, #-32]	; 0xffffffe0
   185d0:	str	r3, [fp, #-36]	; 0xffffffdc
   185d4:	str	r2, [fp, #-40]	; 0xffffffd8
   185d8:	ldr	r0, [sp, #160]	; 0xa0
   185dc:	str	r0, [fp, #-44]	; 0xffffffd4
   185e0:	ldr	r2, [sp, #156]	; 0x9c
   185e4:	str	r2, [fp, #-48]	; 0xffffffd0
   185e8:	str	r9, [fp, #-52]	; 0xffffffcc
   185ec:	str	sl, [fp, #-56]	; 0xffffffc8
   185f0:	str	r7, [fp, #-60]	; 0xffffffc4
   185f4:	str	r8, [fp, #-64]	; 0xffffffc0
   185f8:	str	r5, [fp, #-68]	; 0xffffffbc
   185fc:	str	r6, [fp, #-72]	; 0xffffffb8
   18600:	str	lr, [fp, #-76]	; 0xffffffb4
   18604:	str	r4, [fp, #-80]	; 0xffffffb0
   18608:	str	r1, [fp, #-84]	; 0xffffffac
   1860c:	str	ip, [fp, #-88]	; 0xffffffa8
   18610:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18614:	ldr	r3, [fp, #-84]	; 0xffffffac
   18618:	rsbs	r1, r1, #0
   1861c:	rsc	r3, r3, #0
   18620:	str	r1, [fp, #-88]	; 0xffffffa8
   18624:	str	r3, [fp, #-84]	; 0xffffffac
   18628:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1862c:	mov	r3, #0
   18630:	cmp	r3, r1, lsr #31
   18634:	bne	18640 <__assert_fail@plt+0x72bc>
   18638:	b	1863c <__assert_fail@plt+0x72b8>
   1863c:	b	18660 <__assert_fail@plt+0x72dc>
   18640:	movw	r0, #17515	; 0x446b
   18644:	movt	r0, #3
   18648:	movw	r1, #17363	; 0x43d3
   1864c:	movt	r1, #3
   18650:	movw	r2, #993	; 0x3e1
   18654:	movw	r3, #17546	; 0x448a
   18658:	movt	r3, #3
   1865c:	bl	11384 <__assert_fail@plt>
   18660:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18664:	mov	r1, #0
   18668:	cmp	r1, r0, lsr #31
   1866c:	bne	18678 <__assert_fail@plt+0x72f4>
   18670:	b	18674 <__assert_fail@plt+0x72f0>
   18674:	b	18698 <__assert_fail@plt+0x7314>
   18678:	movw	r0, #17655	; 0x44f7
   1867c:	movt	r0, #3
   18680:	movw	r1, #17363	; 0x43d3
   18684:	movt	r1, #3
   18688:	movw	r2, #994	; 0x3e2
   1868c:	movw	r3, #17546	; 0x448a
   18690:	movt	r3, #3
   18694:	bl	11384 <__assert_fail@plt>
   18698:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1869c:	mov	r1, #0
   186a0:	cmp	r1, r0, lsr #31
   186a4:	bne	186b0 <__assert_fail@plt+0x732c>
   186a8:	b	186ac <__assert_fail@plt+0x7328>
   186ac:	b	186d0 <__assert_fail@plt+0x734c>
   186b0:	movw	r0, #17686	; 0x4516
   186b4:	movt	r0, #3
   186b8:	movw	r1, #17363	; 0x43d3
   186bc:	movt	r1, #3
   186c0:	movw	r2, #995	; 0x3e3
   186c4:	movw	r3, #17546	; 0x448a
   186c8:	movt	r3, #3
   186cc:	bl	11384 <__assert_fail@plt>
   186d0:	b	186d4 <__assert_fail@plt+0x7350>
   186d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   186d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   186dc:	str	r1, [fp, #-212]	; 0xffffff2c
   186e0:	str	r0, [fp, #-216]	; 0xffffff28
   186e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   186e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   186ec:	str	r1, [fp, #-220]	; 0xffffff24
   186f0:	str	r0, [fp, #-224]	; 0xffffff20
   186f4:	ldr	r0, [fp, #-216]	; 0xffffff28
   186f8:	str	r0, [fp, #-196]	; 0xffffff3c
   186fc:	ldr	r0, [fp, #-212]	; 0xffffff2c
   18700:	str	r0, [fp, #-204]	; 0xffffff34
   18704:	ldr	r0, [fp, #-224]	; 0xffffff20
   18708:	str	r0, [fp, #-200]	; 0xffffff38
   1870c:	ldr	r0, [fp, #-220]	; 0xffffff24
   18710:	str	r0, [fp, #-208]	; 0xffffff30
   18714:	ldr	r0, [fp, #-196]	; 0xffffff3c
   18718:	ldr	r1, [fp, #-200]	; 0xffffff38
   1871c:	umull	r0, r1, r0, r1
   18720:	str	r1, [fp, #-164]	; 0xffffff5c
   18724:	str	r0, [fp, #-168]	; 0xffffff58
   18728:	ldr	r0, [fp, #-196]	; 0xffffff3c
   1872c:	ldr	r1, [fp, #-208]	; 0xffffff30
   18730:	umull	r0, r1, r0, r1
   18734:	str	r1, [fp, #-172]	; 0xffffff54
   18738:	str	r0, [fp, #-176]	; 0xffffff50
   1873c:	ldr	r0, [fp, #-204]	; 0xffffff34
   18740:	ldr	r1, [fp, #-200]	; 0xffffff38
   18744:	umull	r0, r1, r0, r1
   18748:	str	r1, [fp, #-180]	; 0xffffff4c
   1874c:	str	r0, [fp, #-184]	; 0xffffff48
   18750:	ldr	r0, [fp, #-204]	; 0xffffff34
   18754:	ldr	r1, [fp, #-208]	; 0xffffff30
   18758:	umull	r0, r1, r0, r1
   1875c:	str	r1, [fp, #-188]	; 0xffffff44
   18760:	str	r0, [fp, #-192]	; 0xffffff40
   18764:	ldr	r0, [fp, #-164]	; 0xffffff5c
   18768:	ldr	r1, [fp, #-176]	; 0xffffff50
   1876c:	ldr	r2, [fp, #-172]	; 0xffffff54
   18770:	adds	r0, r1, r0
   18774:	adc	r1, r2, #0
   18778:	str	r0, [fp, #-176]	; 0xffffff50
   1877c:	str	r1, [fp, #-172]	; 0xffffff54
   18780:	ldr	r0, [fp, #-184]	; 0xffffff48
   18784:	ldr	r1, [fp, #-180]	; 0xffffff4c
   18788:	ldr	r2, [fp, #-176]	; 0xffffff50
   1878c:	ldr	r3, [fp, #-172]	; 0xffffff54
   18790:	adds	r0, r2, r0
   18794:	adc	r1, r3, r1
   18798:	str	r0, [fp, #-176]	; 0xffffff50
   1879c:	str	r1, [fp, #-172]	; 0xffffff54
   187a0:	ldr	r0, [fp, #-176]	; 0xffffff50
   187a4:	ldr	r1, [fp, #-172]	; 0xffffff54
   187a8:	ldr	r2, [fp, #-184]	; 0xffffff48
   187ac:	ldr	r3, [fp, #-180]	; 0xffffff4c
   187b0:	subs	r0, r0, r2
   187b4:	sbcs	r1, r1, r3
   187b8:	str	r0, [sp, #152]	; 0x98
   187bc:	str	r1, [sp, #148]	; 0x94
   187c0:	bcs	187d4 <__assert_fail@plt+0x7450>
   187c4:	b	187c8 <__assert_fail@plt+0x7444>
   187c8:	ldr	r0, [fp, #-188]	; 0xffffff44
   187cc:	add	r0, r0, #1
   187d0:	str	r0, [fp, #-188]	; 0xffffff44
   187d4:	ldr	r0, [fp, #-192]	; 0xffffff40
   187d8:	ldr	r1, [fp, #-188]	; 0xffffff44
   187dc:	ldr	r2, [fp, #-172]	; 0xffffff54
   187e0:	adds	r0, r0, r2
   187e4:	adc	r1, r1, #0
   187e8:	str	r0, [fp, #-128]	; 0xffffff80
   187ec:	str	r1, [fp, #-124]	; 0xffffff84
   187f0:	ldr	r0, [fp, #-176]	; 0xffffff50
   187f4:	ldr	r1, [fp, #-168]	; 0xffffff58
   187f8:	str	r0, [fp, #-132]	; 0xffffff7c
   187fc:	str	r1, [fp, #-136]	; 0xffffff78
   18800:	b	18804 <__assert_fail@plt+0x7480>
   18804:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18808:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1880c:	str	r1, [fp, #-276]	; 0xfffffeec
   18810:	str	r0, [fp, #-280]	; 0xfffffee8
   18814:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18818:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1881c:	str	r1, [fp, #-284]	; 0xfffffee4
   18820:	str	r0, [fp, #-288]	; 0xfffffee0
   18824:	ldr	r0, [fp, #-280]	; 0xfffffee8
   18828:	str	r0, [fp, #-260]	; 0xfffffefc
   1882c:	ldr	r0, [fp, #-276]	; 0xfffffeec
   18830:	str	r0, [fp, #-268]	; 0xfffffef4
   18834:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18838:	str	r0, [fp, #-264]	; 0xfffffef8
   1883c:	ldr	r0, [fp, #-284]	; 0xfffffee4
   18840:	str	r0, [fp, #-272]	; 0xfffffef0
   18844:	ldr	r0, [fp, #-260]	; 0xfffffefc
   18848:	ldr	r1, [fp, #-264]	; 0xfffffef8
   1884c:	umull	r0, r1, r0, r1
   18850:	str	r1, [fp, #-228]	; 0xffffff1c
   18854:	str	r0, [fp, #-232]	; 0xffffff18
   18858:	ldr	r0, [fp, #-260]	; 0xfffffefc
   1885c:	ldr	r1, [fp, #-272]	; 0xfffffef0
   18860:	umull	r0, r1, r0, r1
   18864:	str	r1, [fp, #-236]	; 0xffffff14
   18868:	str	r0, [fp, #-240]	; 0xffffff10
   1886c:	ldr	r0, [fp, #-268]	; 0xfffffef4
   18870:	ldr	r1, [fp, #-264]	; 0xfffffef8
   18874:	umull	r0, r1, r0, r1
   18878:	str	r1, [fp, #-244]	; 0xffffff0c
   1887c:	str	r0, [fp, #-248]	; 0xffffff08
   18880:	ldr	r0, [fp, #-268]	; 0xfffffef4
   18884:	ldr	r1, [fp, #-272]	; 0xfffffef0
   18888:	umull	r0, r1, r0, r1
   1888c:	str	r1, [fp, #-252]	; 0xffffff04
   18890:	str	r0, [fp, #-256]	; 0xffffff00
   18894:	ldr	r0, [fp, #-228]	; 0xffffff1c
   18898:	ldr	r1, [fp, #-240]	; 0xffffff10
   1889c:	ldr	r2, [fp, #-236]	; 0xffffff14
   188a0:	adds	r0, r1, r0
   188a4:	adc	r1, r2, #0
   188a8:	str	r0, [fp, #-240]	; 0xffffff10
   188ac:	str	r1, [fp, #-236]	; 0xffffff14
   188b0:	ldr	r0, [fp, #-248]	; 0xffffff08
   188b4:	ldr	r1, [fp, #-244]	; 0xffffff0c
   188b8:	ldr	r2, [fp, #-240]	; 0xffffff10
   188bc:	ldr	r3, [fp, #-236]	; 0xffffff14
   188c0:	adds	r0, r2, r0
   188c4:	adc	r1, r3, r1
   188c8:	str	r0, [fp, #-240]	; 0xffffff10
   188cc:	str	r1, [fp, #-236]	; 0xffffff14
   188d0:	ldr	r0, [fp, #-240]	; 0xffffff10
   188d4:	ldr	r1, [fp, #-236]	; 0xffffff14
   188d8:	ldr	r2, [fp, #-248]	; 0xffffff08
   188dc:	ldr	r3, [fp, #-244]	; 0xffffff0c
   188e0:	subs	r0, r0, r2
   188e4:	sbcs	r1, r1, r3
   188e8:	str	r0, [sp, #144]	; 0x90
   188ec:	str	r1, [sp, #140]	; 0x8c
   188f0:	bcs	18904 <__assert_fail@plt+0x7580>
   188f4:	b	188f8 <__assert_fail@plt+0x7574>
   188f8:	ldr	r0, [fp, #-252]	; 0xffffff04
   188fc:	add	r0, r0, #1
   18900:	str	r0, [fp, #-252]	; 0xffffff04
   18904:	ldr	r0, [fp, #-256]	; 0xffffff00
   18908:	ldr	r1, [fp, #-252]	; 0xffffff04
   1890c:	ldr	r2, [fp, #-236]	; 0xffffff14
   18910:	adds	r0, r0, r2
   18914:	adc	r1, r1, #0
   18918:	str	r0, [fp, #-96]	; 0xffffffa0
   1891c:	str	r1, [fp, #-92]	; 0xffffffa4
   18920:	ldr	r0, [fp, #-240]	; 0xffffff10
   18924:	ldr	r1, [fp, #-232]	; 0xffffff18
   18928:	str	r0, [fp, #-100]	; 0xffffff9c
   1892c:	str	r1, [fp, #-104]	; 0xffffff98
   18930:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18934:	ldr	r1, [fp, #-84]	; 0xffffffac
   18938:	ldr	r2, [fp, #-136]	; 0xffffff78
   1893c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   18940:	umull	ip, lr, r0, r2
   18944:	mla	r0, r0, r3, lr
   18948:	mla	r0, r1, r2, r0
   1894c:	str	ip, [fp, #-112]	; 0xffffff90
   18950:	str	r0, [fp, #-108]	; 0xffffff94
   18954:	ldr	r0, [fp, #-112]	; 0xffffff90
   18958:	ldr	r1, [fp, #-108]	; 0xffffff94
   1895c:	str	r1, [fp, #-340]	; 0xfffffeac
   18960:	str	r0, [fp, #-344]	; 0xfffffea8
   18964:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18968:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1896c:	str	r1, [fp, #-348]	; 0xfffffea4
   18970:	str	r0, [fp, #-352]	; 0xfffffea0
   18974:	ldr	r0, [fp, #-344]	; 0xfffffea8
   18978:	str	r0, [fp, #-324]	; 0xfffffebc
   1897c:	ldr	r0, [fp, #-340]	; 0xfffffeac
   18980:	str	r0, [fp, #-332]	; 0xfffffeb4
   18984:	ldr	r0, [fp, #-352]	; 0xfffffea0
   18988:	str	r0, [fp, #-328]	; 0xfffffeb8
   1898c:	ldr	r0, [fp, #-348]	; 0xfffffea4
   18990:	str	r0, [fp, #-336]	; 0xfffffeb0
   18994:	ldr	r0, [fp, #-324]	; 0xfffffebc
   18998:	ldr	r1, [fp, #-328]	; 0xfffffeb8
   1899c:	umull	r0, r1, r0, r1
   189a0:	str	r1, [fp, #-292]	; 0xfffffedc
   189a4:	str	r0, [fp, #-296]	; 0xfffffed8
   189a8:	ldr	r0, [fp, #-324]	; 0xfffffebc
   189ac:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   189b0:	umull	r0, r1, r0, r1
   189b4:	str	r1, [fp, #-300]	; 0xfffffed4
   189b8:	str	r0, [fp, #-304]	; 0xfffffed0
   189bc:	ldr	r0, [fp, #-332]	; 0xfffffeb4
   189c0:	ldr	r1, [fp, #-328]	; 0xfffffeb8
   189c4:	umull	r0, r1, r0, r1
   189c8:	str	r1, [fp, #-308]	; 0xfffffecc
   189cc:	str	r0, [fp, #-312]	; 0xfffffec8
   189d0:	ldr	r0, [fp, #-332]	; 0xfffffeb4
   189d4:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   189d8:	umull	r0, r1, r0, r1
   189dc:	str	r1, [fp, #-316]	; 0xfffffec4
   189e0:	str	r0, [fp, #-320]	; 0xfffffec0
   189e4:	ldr	r0, [fp, #-292]	; 0xfffffedc
   189e8:	ldr	r1, [fp, #-304]	; 0xfffffed0
   189ec:	ldr	r2, [fp, #-300]	; 0xfffffed4
   189f0:	adds	r0, r1, r0
   189f4:	adc	r1, r2, #0
   189f8:	str	r0, [fp, #-304]	; 0xfffffed0
   189fc:	str	r1, [fp, #-300]	; 0xfffffed4
   18a00:	ldr	r0, [fp, #-312]	; 0xfffffec8
   18a04:	ldr	r1, [fp, #-308]	; 0xfffffecc
   18a08:	ldr	r2, [fp, #-304]	; 0xfffffed0
   18a0c:	ldr	r3, [fp, #-300]	; 0xfffffed4
   18a10:	adds	r0, r2, r0
   18a14:	adc	r1, r3, r1
   18a18:	str	r0, [fp, #-304]	; 0xfffffed0
   18a1c:	str	r1, [fp, #-300]	; 0xfffffed4
   18a20:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18a24:	ldr	r1, [fp, #-300]	; 0xfffffed4
   18a28:	ldr	r2, [fp, #-312]	; 0xfffffec8
   18a2c:	ldr	r3, [fp, #-308]	; 0xfffffecc
   18a30:	subs	r0, r0, r2
   18a34:	sbcs	r1, r1, r3
   18a38:	str	r0, [sp, #136]	; 0x88
   18a3c:	str	r1, [sp, #132]	; 0x84
   18a40:	bcs	18a54 <__assert_fail@plt+0x76d0>
   18a44:	b	18a48 <__assert_fail@plt+0x76c4>
   18a48:	ldr	r0, [fp, #-316]	; 0xfffffec4
   18a4c:	add	r0, r0, #1
   18a50:	str	r0, [fp, #-316]	; 0xfffffec4
   18a54:	ldr	r0, [fp, #-320]	; 0xfffffec0
   18a58:	ldr	r1, [fp, #-316]	; 0xfffffec4
   18a5c:	ldr	r2, [fp, #-300]	; 0xfffffed4
   18a60:	adds	r0, r0, r2
   18a64:	adc	r1, r1, #0
   18a68:	str	r0, [fp, #-120]	; 0xffffff88
   18a6c:	str	r1, [fp, #-116]	; 0xffffff8c
   18a70:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18a74:	ldr	r1, [fp, #-296]	; 0xfffffed8
   18a78:	str	r0, [fp, #-156]	; 0xffffff64
   18a7c:	str	r1, [fp, #-160]	; 0xffffff60
   18a80:	b	18a84 <__assert_fail@plt+0x7700>
   18a84:	ldr	r0, [fp, #-112]	; 0xffffff90
   18a88:	ldr	r1, [fp, #-108]	; 0xffffff94
   18a8c:	str	r1, [fp, #-404]	; 0xfffffe6c
   18a90:	str	r0, [fp, #-408]	; 0xfffffe68
   18a94:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18a98:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18a9c:	str	r1, [fp, #-412]	; 0xfffffe64
   18aa0:	str	r0, [fp, #-416]	; 0xfffffe60
   18aa4:	ldr	r0, [fp, #-408]	; 0xfffffe68
   18aa8:	str	r0, [fp, #-388]	; 0xfffffe7c
   18aac:	ldr	r0, [fp, #-404]	; 0xfffffe6c
   18ab0:	str	r0, [fp, #-396]	; 0xfffffe74
   18ab4:	ldr	r0, [fp, #-416]	; 0xfffffe60
   18ab8:	str	r0, [fp, #-392]	; 0xfffffe78
   18abc:	ldr	r0, [fp, #-412]	; 0xfffffe64
   18ac0:	str	r0, [fp, #-400]	; 0xfffffe70
   18ac4:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   18ac8:	ldr	r1, [fp, #-392]	; 0xfffffe78
   18acc:	umull	r0, r1, r0, r1
   18ad0:	str	r1, [fp, #-356]	; 0xfffffe9c
   18ad4:	str	r0, [fp, #-360]	; 0xfffffe98
   18ad8:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   18adc:	ldr	r1, [fp, #-400]	; 0xfffffe70
   18ae0:	umull	r0, r1, r0, r1
   18ae4:	str	r1, [fp, #-364]	; 0xfffffe94
   18ae8:	str	r0, [fp, #-368]	; 0xfffffe90
   18aec:	ldr	r0, [fp, #-396]	; 0xfffffe74
   18af0:	ldr	r1, [fp, #-392]	; 0xfffffe78
   18af4:	umull	r0, r1, r0, r1
   18af8:	str	r1, [fp, #-372]	; 0xfffffe8c
   18afc:	str	r0, [fp, #-376]	; 0xfffffe88
   18b00:	ldr	r0, [fp, #-396]	; 0xfffffe74
   18b04:	ldr	r1, [fp, #-400]	; 0xfffffe70
   18b08:	umull	r0, r1, r0, r1
   18b0c:	str	r1, [fp, #-380]	; 0xfffffe84
   18b10:	str	r0, [fp, #-384]	; 0xfffffe80
   18b14:	ldr	r0, [fp, #-356]	; 0xfffffe9c
   18b18:	ldr	r1, [fp, #-368]	; 0xfffffe90
   18b1c:	ldr	r2, [fp, #-364]	; 0xfffffe94
   18b20:	adds	r0, r1, r0
   18b24:	adc	r1, r2, #0
   18b28:	str	r0, [fp, #-368]	; 0xfffffe90
   18b2c:	str	r1, [fp, #-364]	; 0xfffffe94
   18b30:	ldr	r0, [fp, #-376]	; 0xfffffe88
   18b34:	ldr	r1, [fp, #-372]	; 0xfffffe8c
   18b38:	ldr	r2, [fp, #-368]	; 0xfffffe90
   18b3c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   18b40:	adds	r0, r2, r0
   18b44:	adc	r1, r3, r1
   18b48:	str	r0, [fp, #-368]	; 0xfffffe90
   18b4c:	str	r1, [fp, #-364]	; 0xfffffe94
   18b50:	ldr	r0, [fp, #-368]	; 0xfffffe90
   18b54:	ldr	r1, [fp, #-364]	; 0xfffffe94
   18b58:	ldr	r2, [fp, #-376]	; 0xfffffe88
   18b5c:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   18b60:	subs	r0, r0, r2
   18b64:	sbcs	r1, r1, r3
   18b68:	str	r0, [sp, #128]	; 0x80
   18b6c:	str	r1, [sp, #124]	; 0x7c
   18b70:	bcs	18b84 <__assert_fail@plt+0x7800>
   18b74:	b	18b78 <__assert_fail@plt+0x77f4>
   18b78:	ldr	r0, [fp, #-380]	; 0xfffffe84
   18b7c:	add	r0, r0, #1
   18b80:	str	r0, [fp, #-380]	; 0xfffffe84
   18b84:	ldr	r0, [fp, #-384]	; 0xfffffe80
   18b88:	ldr	r1, [fp, #-380]	; 0xfffffe84
   18b8c:	ldr	r2, [fp, #-364]	; 0xfffffe94
   18b90:	adds	r0, r0, r2
   18b94:	adc	r1, r1, #0
   18b98:	str	r0, [fp, #-144]	; 0xffffff70
   18b9c:	str	r1, [fp, #-140]	; 0xffffff74
   18ba0:	ldr	r0, [fp, #-368]	; 0xfffffe90
   18ba4:	ldr	r1, [fp, #-360]	; 0xfffffe98
   18ba8:	str	r0, [fp, #-148]	; 0xffffff6c
   18bac:	str	r1, [fp, #-152]	; 0xffffff68
   18bb0:	ldr	r0, [fp, #-136]	; 0xffffff78
   18bb4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18bb8:	orr	r0, r0, r1
   18bbc:	ldr	r1, [fp, #-104]	; 0xffffff98
   18bc0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18bc4:	adds	r3, r1, #1
   18bc8:	adc	ip, r2, #0
   18bcc:	cmp	r0, #0
   18bd0:	movne	r1, r3
   18bd4:	cmp	r0, #0
   18bd8:	movne	r2, ip
   18bdc:	str	r1, [fp, #-104]	; 0xffffff98
   18be0:	str	r2, [fp, #-100]	; 0xffffff9c
   18be4:	ldr	r0, [fp, #-104]	; 0xffffff98
   18be8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18bec:	ldr	r2, [fp, #-120]	; 0xffffff88
   18bf0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18bf4:	adds	r0, r0, r2
   18bf8:	adc	r1, r1, r3
   18bfc:	str	r0, [fp, #-424]	; 0xfffffe58
   18c00:	str	r1, [fp, #-420]	; 0xfffffe5c
   18c04:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18c08:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18c0c:	ldr	r2, [fp, #-424]	; 0xfffffe58
   18c10:	ldr	r3, [fp, #-420]	; 0xfffffe5c
   18c14:	ldr	ip, [fp, #-104]	; 0xffffff98
   18c18:	ldr	lr, [fp, #-100]	; 0xffffff9c
   18c1c:	subs	r2, r2, ip
   18c20:	sbcs	r3, r3, lr
   18c24:	mov	ip, #0
   18c28:	movwcc	ip, #1
   18c2c:	adds	lr, r0, #1
   18c30:	adc	r4, r1, #0
   18c34:	cmp	ip, #0
   18c38:	movne	r1, r4
   18c3c:	cmp	ip, #0
   18c40:	movne	r0, lr
   18c44:	str	r1, [fp, #-92]	; 0xffffffa4
   18c48:	str	r0, [fp, #-96]	; 0xffffffa0
   18c4c:	ldr	r0, [fp, #-424]	; 0xfffffe58
   18c50:	ldr	r1, [fp, #-420]	; 0xfffffe5c
   18c54:	str	r1, [fp, #-100]	; 0xffffff9c
   18c58:	str	r0, [fp, #-104]	; 0xffffff98
   18c5c:	str	r2, [sp, #120]	; 0x78
   18c60:	str	r3, [sp, #116]	; 0x74
   18c64:	b	18c68 <__assert_fail@plt+0x78e4>
   18c68:	ldr	r0, [fp, #-104]	; 0xffffff98
   18c6c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18c70:	ldr	r2, [fp, #-128]	; 0xffffff80
   18c74:	ldr	r3, [fp, #-124]	; 0xffffff84
   18c78:	adds	r0, r0, r2
   18c7c:	adc	r1, r1, r3
   18c80:	str	r0, [fp, #-432]	; 0xfffffe50
   18c84:	str	r1, [fp, #-428]	; 0xfffffe54
   18c88:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18c8c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18c90:	ldr	r2, [fp, #-432]	; 0xfffffe50
   18c94:	ldr	r3, [fp, #-428]	; 0xfffffe54
   18c98:	ldr	ip, [fp, #-104]	; 0xffffff98
   18c9c:	ldr	lr, [fp, #-100]	; 0xffffff9c
   18ca0:	subs	r2, r2, ip
   18ca4:	sbcs	r3, r3, lr
   18ca8:	mov	ip, #0
   18cac:	movwcc	ip, #1
   18cb0:	adds	lr, r0, #1
   18cb4:	adc	r4, r1, #0
   18cb8:	cmp	ip, #0
   18cbc:	movne	r1, r4
   18cc0:	cmp	ip, #0
   18cc4:	movne	r0, lr
   18cc8:	str	r1, [fp, #-92]	; 0xffffffa4
   18ccc:	str	r0, [fp, #-96]	; 0xffffffa0
   18cd0:	ldr	r0, [fp, #-432]	; 0xfffffe50
   18cd4:	ldr	r1, [fp, #-428]	; 0xfffffe54
   18cd8:	str	r1, [fp, #-100]	; 0xffffff9c
   18cdc:	str	r0, [fp, #-104]	; 0xffffff98
   18ce0:	str	r2, [sp, #112]	; 0x70
   18ce4:	str	r3, [sp, #108]	; 0x6c
   18ce8:	b	18cec <__assert_fail@plt+0x7968>
   18cec:	ldr	r0, [fp, #-104]	; 0xffffff98
   18cf0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18cf4:	ldr	r2, [fp, #-152]	; 0xffffff68
   18cf8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   18cfc:	adds	r0, r0, r2
   18d00:	adc	r1, r1, r3
   18d04:	str	r0, [fp, #-440]	; 0xfffffe48
   18d08:	str	r1, [fp, #-436]	; 0xfffffe4c
   18d0c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18d10:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18d14:	ldr	r2, [fp, #-144]	; 0xffffff70
   18d18:	ldr	r3, [fp, #-140]	; 0xffffff74
   18d1c:	adds	r0, r0, r2
   18d20:	adc	r1, r1, r3
   18d24:	ldr	r2, [fp, #-440]	; 0xfffffe48
   18d28:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   18d2c:	ldr	ip, [fp, #-104]	; 0xffffff98
   18d30:	ldr	lr, [fp, #-100]	; 0xffffff9c
   18d34:	subs	r2, r2, ip
   18d38:	sbcs	r3, r3, lr
   18d3c:	mov	ip, #0
   18d40:	movwcc	ip, #1
   18d44:	adds	lr, r0, #1
   18d48:	adc	r4, r1, #0
   18d4c:	cmp	ip, #0
   18d50:	movne	r0, lr
   18d54:	cmp	ip, #0
   18d58:	movne	r1, r4
   18d5c:	str	r1, [fp, #-92]	; 0xffffffa4
   18d60:	str	r0, [fp, #-96]	; 0xffffffa0
   18d64:	ldr	r0, [fp, #-440]	; 0xfffffe48
   18d68:	ldr	r1, [fp, #-436]	; 0xfffffe4c
   18d6c:	str	r1, [fp, #-100]	; 0xffffff9c
   18d70:	str	r0, [fp, #-104]	; 0xffffff98
   18d74:	str	r3, [sp, #104]	; 0x68
   18d78:	str	r2, [sp, #100]	; 0x64
   18d7c:	b	18d80 <__assert_fail@plt+0x79fc>
   18d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18d84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d88:	str	r1, [sp, #420]	; 0x1a4
   18d8c:	str	r0, [sp, #416]	; 0x1a0
   18d90:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18d94:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18d98:	str	r1, [sp, #412]	; 0x19c
   18d9c:	str	r0, [sp, #408]	; 0x198
   18da0:	ldr	r0, [sp, #416]	; 0x1a0
   18da4:	str	r0, [sp, #436]	; 0x1b4
   18da8:	ldr	r0, [sp, #420]	; 0x1a4
   18dac:	str	r0, [sp, #428]	; 0x1ac
   18db0:	ldr	r0, [sp, #408]	; 0x198
   18db4:	str	r0, [sp, #432]	; 0x1b0
   18db8:	ldr	r0, [sp, #412]	; 0x19c
   18dbc:	str	r0, [sp, #424]	; 0x1a8
   18dc0:	ldr	r0, [sp, #436]	; 0x1b4
   18dc4:	ldr	r1, [sp, #432]	; 0x1b0
   18dc8:	umull	r0, r1, r0, r1
   18dcc:	str	r1, [fp, #-444]	; 0xfffffe44
   18dd0:	str	r0, [fp, #-448]	; 0xfffffe40
   18dd4:	ldr	r0, [sp, #436]	; 0x1b4
   18dd8:	ldr	r1, [sp, #424]	; 0x1a8
   18ddc:	umull	r0, r1, r0, r1
   18de0:	str	r1, [sp, #460]	; 0x1cc
   18de4:	str	r0, [sp, #456]	; 0x1c8
   18de8:	ldr	r0, [sp, #428]	; 0x1ac
   18dec:	ldr	r1, [sp, #432]	; 0x1b0
   18df0:	umull	r0, r1, r0, r1
   18df4:	str	r1, [sp, #452]	; 0x1c4
   18df8:	str	r0, [sp, #448]	; 0x1c0
   18dfc:	ldr	r0, [sp, #428]	; 0x1ac
   18e00:	ldr	r1, [sp, #424]	; 0x1a8
   18e04:	umull	r0, r1, r0, r1
   18e08:	str	r1, [sp, #444]	; 0x1bc
   18e0c:	str	r0, [sp, #440]	; 0x1b8
   18e10:	ldr	r0, [fp, #-444]	; 0xfffffe44
   18e14:	ldr	r1, [sp, #456]	; 0x1c8
   18e18:	ldr	r2, [sp, #460]	; 0x1cc
   18e1c:	adds	r0, r1, r0
   18e20:	adc	r1, r2, #0
   18e24:	str	r0, [sp, #456]	; 0x1c8
   18e28:	str	r1, [sp, #460]	; 0x1cc
   18e2c:	ldr	r0, [sp, #448]	; 0x1c0
   18e30:	ldr	r1, [sp, #452]	; 0x1c4
   18e34:	ldr	r2, [sp, #456]	; 0x1c8
   18e38:	ldr	r3, [sp, #460]	; 0x1cc
   18e3c:	adds	r0, r2, r0
   18e40:	adc	r1, r3, r1
   18e44:	str	r0, [sp, #456]	; 0x1c8
   18e48:	str	r1, [sp, #460]	; 0x1cc
   18e4c:	ldr	r0, [sp, #456]	; 0x1c8
   18e50:	ldr	r1, [sp, #460]	; 0x1cc
   18e54:	ldr	r2, [sp, #448]	; 0x1c0
   18e58:	ldr	r3, [sp, #452]	; 0x1c4
   18e5c:	subs	r0, r0, r2
   18e60:	sbcs	r1, r1, r3
   18e64:	str	r0, [sp, #96]	; 0x60
   18e68:	str	r1, [sp, #92]	; 0x5c
   18e6c:	bcs	18e80 <__assert_fail@plt+0x7afc>
   18e70:	b	18e74 <__assert_fail@plt+0x7af0>
   18e74:	ldr	r0, [sp, #444]	; 0x1bc
   18e78:	add	r0, r0, #1
   18e7c:	str	r0, [sp, #444]	; 0x1bc
   18e80:	ldr	r0, [sp, #440]	; 0x1b8
   18e84:	ldr	r1, [sp, #444]	; 0x1bc
   18e88:	ldr	r2, [sp, #460]	; 0x1cc
   18e8c:	adds	r0, r0, r2
   18e90:	adc	r1, r1, #0
   18e94:	str	r0, [fp, #-128]	; 0xffffff80
   18e98:	str	r1, [fp, #-124]	; 0xffffff84
   18e9c:	ldr	r0, [sp, #456]	; 0x1c8
   18ea0:	ldr	r1, [fp, #-448]	; 0xfffffe40
   18ea4:	str	r0, [fp, #-132]	; 0xffffff7c
   18ea8:	str	r1, [fp, #-136]	; 0xffffff78
   18eac:	b	18eb0 <__assert_fail@plt+0x7b2c>
   18eb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18eb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18eb8:	str	r1, [sp, #356]	; 0x164
   18ebc:	str	r0, [sp, #352]	; 0x160
   18ec0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18ec4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18ec8:	str	r1, [sp, #348]	; 0x15c
   18ecc:	str	r0, [sp, #344]	; 0x158
   18ed0:	ldr	r0, [sp, #352]	; 0x160
   18ed4:	str	r0, [sp, #372]	; 0x174
   18ed8:	ldr	r0, [sp, #356]	; 0x164
   18edc:	str	r0, [sp, #364]	; 0x16c
   18ee0:	ldr	r0, [sp, #344]	; 0x158
   18ee4:	str	r0, [sp, #368]	; 0x170
   18ee8:	ldr	r0, [sp, #348]	; 0x15c
   18eec:	str	r0, [sp, #360]	; 0x168
   18ef0:	ldr	r0, [sp, #372]	; 0x174
   18ef4:	ldr	r1, [sp, #368]	; 0x170
   18ef8:	umull	r0, r1, r0, r1
   18efc:	str	r1, [sp, #404]	; 0x194
   18f00:	str	r0, [sp, #400]	; 0x190
   18f04:	ldr	r0, [sp, #372]	; 0x174
   18f08:	ldr	r1, [sp, #360]	; 0x168
   18f0c:	umull	r0, r1, r0, r1
   18f10:	str	r1, [sp, #396]	; 0x18c
   18f14:	str	r0, [sp, #392]	; 0x188
   18f18:	ldr	r0, [sp, #364]	; 0x16c
   18f1c:	ldr	r1, [sp, #368]	; 0x170
   18f20:	umull	r0, r1, r0, r1
   18f24:	str	r1, [sp, #388]	; 0x184
   18f28:	str	r0, [sp, #384]	; 0x180
   18f2c:	ldr	r0, [sp, #364]	; 0x16c
   18f30:	ldr	r1, [sp, #360]	; 0x168
   18f34:	umull	r0, r1, r0, r1
   18f38:	str	r1, [sp, #380]	; 0x17c
   18f3c:	str	r0, [sp, #376]	; 0x178
   18f40:	ldr	r0, [sp, #404]	; 0x194
   18f44:	ldr	r1, [sp, #392]	; 0x188
   18f48:	ldr	r2, [sp, #396]	; 0x18c
   18f4c:	adds	r0, r1, r0
   18f50:	adc	r1, r2, #0
   18f54:	str	r0, [sp, #392]	; 0x188
   18f58:	str	r1, [sp, #396]	; 0x18c
   18f5c:	ldr	r0, [sp, #384]	; 0x180
   18f60:	ldr	r1, [sp, #388]	; 0x184
   18f64:	ldr	r2, [sp, #392]	; 0x188
   18f68:	ldr	r3, [sp, #396]	; 0x18c
   18f6c:	adds	r0, r2, r0
   18f70:	adc	r1, r3, r1
   18f74:	str	r0, [sp, #392]	; 0x188
   18f78:	str	r1, [sp, #396]	; 0x18c
   18f7c:	ldr	r0, [sp, #392]	; 0x188
   18f80:	ldr	r1, [sp, #396]	; 0x18c
   18f84:	ldr	r2, [sp, #384]	; 0x180
   18f88:	ldr	r3, [sp, #388]	; 0x184
   18f8c:	subs	r0, r0, r2
   18f90:	sbcs	r1, r1, r3
   18f94:	str	r0, [sp, #88]	; 0x58
   18f98:	str	r1, [sp, #84]	; 0x54
   18f9c:	bcs	18fb0 <__assert_fail@plt+0x7c2c>
   18fa0:	b	18fa4 <__assert_fail@plt+0x7c20>
   18fa4:	ldr	r0, [sp, #380]	; 0x17c
   18fa8:	add	r0, r0, #1
   18fac:	str	r0, [sp, #380]	; 0x17c
   18fb0:	ldr	r0, [sp, #376]	; 0x178
   18fb4:	ldr	r1, [sp, #380]	; 0x17c
   18fb8:	ldr	r2, [sp, #396]	; 0x18c
   18fbc:	adds	r0, r0, r2
   18fc0:	adc	r1, r1, #0
   18fc4:	str	r0, [fp, #-144]	; 0xffffff70
   18fc8:	str	r1, [fp, #-140]	; 0xffffff74
   18fcc:	ldr	r0, [sp, #392]	; 0x188
   18fd0:	ldr	r1, [sp, #400]	; 0x190
   18fd4:	str	r0, [fp, #-148]	; 0xffffff6c
   18fd8:	str	r1, [fp, #-152]	; 0xffffff68
   18fdc:	b	18fe0 <__assert_fail@plt+0x7c5c>
   18fe0:	ldr	r0, [fp, #-136]	; 0xffffff78
   18fe4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18fe8:	ldr	r2, [fp, #-104]	; 0xffffff98
   18fec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18ff0:	adds	r0, r0, r2
   18ff4:	adc	r1, r1, r3
   18ff8:	str	r0, [sp, #336]	; 0x150
   18ffc:	str	r1, [sp, #340]	; 0x154
   19000:	ldr	r0, [fp, #-128]	; 0xffffff80
   19004:	ldr	r1, [fp, #-124]	; 0xffffff84
   19008:	ldr	r2, [sp, #336]	; 0x150
   1900c:	ldr	r3, [sp, #340]	; 0x154
   19010:	ldr	ip, [fp, #-136]	; 0xffffff78
   19014:	ldr	lr, [fp, #-132]	; 0xffffff7c
   19018:	subs	r2, r2, ip
   1901c:	sbcs	r3, r3, lr
   19020:	mov	ip, #0
   19024:	movwcc	ip, #1
   19028:	adds	lr, r0, #1
   1902c:	adc	r4, r1, #0
   19030:	cmp	ip, #0
   19034:	movne	r1, r4
   19038:	cmp	ip, #0
   1903c:	movne	r0, lr
   19040:	str	r1, [fp, #-124]	; 0xffffff84
   19044:	str	r0, [fp, #-128]	; 0xffffff80
   19048:	ldr	r0, [sp, #336]	; 0x150
   1904c:	ldr	r1, [sp, #340]	; 0x154
   19050:	str	r1, [fp, #-132]	; 0xffffff7c
   19054:	str	r0, [fp, #-136]	; 0xffffff78
   19058:	str	r2, [sp, #80]	; 0x50
   1905c:	str	r3, [sp, #76]	; 0x4c
   19060:	ldr	r0, [fp, #-88]	; 0xffffffa8
   19064:	ldr	r1, [fp, #-84]	; 0xffffffac
   19068:	ldr	r2, [fp, #-136]	; 0xffffff78
   1906c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   19070:	umull	ip, lr, r0, r2
   19074:	mla	r0, r0, r3, lr
   19078:	mla	r0, r1, r2, r0
   1907c:	str	ip, [fp, #-112]	; 0xffffff90
   19080:	str	r0, [fp, #-108]	; 0xffffff94
   19084:	ldr	r0, [fp, #-152]	; 0xffffff68
   19088:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1908c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19090:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19094:	adds	r0, r0, r2
   19098:	adc	r1, r1, r3
   1909c:	str	r0, [sp, #328]	; 0x148
   190a0:	str	r1, [sp, #332]	; 0x14c
   190a4:	ldr	r0, [fp, #-144]	; 0xffffff70
   190a8:	ldr	r1, [fp, #-140]	; 0xffffff74
   190ac:	ldr	r2, [sp, #328]	; 0x148
   190b0:	ldr	r3, [sp, #332]	; 0x14c
   190b4:	ldr	ip, [fp, #-152]	; 0xffffff68
   190b8:	ldr	lr, [fp, #-148]	; 0xffffff6c
   190bc:	subs	r2, r2, ip
   190c0:	sbcs	r3, r3, lr
   190c4:	mov	ip, #0
   190c8:	movwcc	ip, #1
   190cc:	adds	lr, r0, #1
   190d0:	adc	r4, r1, #0
   190d4:	cmp	ip, #0
   190d8:	movne	r1, r4
   190dc:	cmp	ip, #0
   190e0:	movne	r0, lr
   190e4:	str	r1, [fp, #-92]	; 0xffffffa4
   190e8:	str	r0, [fp, #-96]	; 0xffffffa0
   190ec:	ldr	r0, [sp, #328]	; 0x148
   190f0:	ldr	r1, [sp, #332]	; 0x14c
   190f4:	str	r1, [fp, #-100]	; 0xffffff9c
   190f8:	str	r0, [fp, #-104]	; 0xffffff98
   190fc:	str	r2, [sp, #72]	; 0x48
   19100:	str	r3, [sp, #68]	; 0x44
   19104:	b	19108 <__assert_fail@plt+0x7d84>
   19108:	ldr	r0, [fp, #-112]	; 0xffffff90
   1910c:	ldr	r1, [fp, #-108]	; 0xffffff94
   19110:	str	r1, [sp, #276]	; 0x114
   19114:	str	r0, [sp, #272]	; 0x110
   19118:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1911c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19120:	str	r1, [sp, #268]	; 0x10c
   19124:	str	r0, [sp, #264]	; 0x108
   19128:	ldr	r0, [sp, #272]	; 0x110
   1912c:	str	r0, [sp, #292]	; 0x124
   19130:	ldr	r0, [sp, #276]	; 0x114
   19134:	str	r0, [sp, #284]	; 0x11c
   19138:	ldr	r0, [sp, #264]	; 0x108
   1913c:	str	r0, [sp, #288]	; 0x120
   19140:	ldr	r0, [sp, #268]	; 0x10c
   19144:	str	r0, [sp, #280]	; 0x118
   19148:	ldr	r0, [sp, #292]	; 0x124
   1914c:	ldr	r1, [sp, #288]	; 0x120
   19150:	umull	r0, r1, r0, r1
   19154:	str	r1, [sp, #324]	; 0x144
   19158:	str	r0, [sp, #320]	; 0x140
   1915c:	ldr	r0, [sp, #292]	; 0x124
   19160:	ldr	r1, [sp, #280]	; 0x118
   19164:	umull	r0, r1, r0, r1
   19168:	str	r1, [sp, #316]	; 0x13c
   1916c:	str	r0, [sp, #312]	; 0x138
   19170:	ldr	r0, [sp, #284]	; 0x11c
   19174:	ldr	r1, [sp, #288]	; 0x120
   19178:	umull	r0, r1, r0, r1
   1917c:	str	r1, [sp, #308]	; 0x134
   19180:	str	r0, [sp, #304]	; 0x130
   19184:	ldr	r0, [sp, #284]	; 0x11c
   19188:	ldr	r1, [sp, #280]	; 0x118
   1918c:	umull	r0, r1, r0, r1
   19190:	str	r1, [sp, #300]	; 0x12c
   19194:	str	r0, [sp, #296]	; 0x128
   19198:	ldr	r0, [sp, #324]	; 0x144
   1919c:	ldr	r1, [sp, #312]	; 0x138
   191a0:	ldr	r2, [sp, #316]	; 0x13c
   191a4:	adds	r0, r1, r0
   191a8:	adc	r1, r2, #0
   191ac:	str	r0, [sp, #312]	; 0x138
   191b0:	str	r1, [sp, #316]	; 0x13c
   191b4:	ldr	r0, [sp, #304]	; 0x130
   191b8:	ldr	r1, [sp, #308]	; 0x134
   191bc:	ldr	r2, [sp, #312]	; 0x138
   191c0:	ldr	r3, [sp, #316]	; 0x13c
   191c4:	adds	r0, r2, r0
   191c8:	adc	r1, r3, r1
   191cc:	str	r0, [sp, #312]	; 0x138
   191d0:	str	r1, [sp, #316]	; 0x13c
   191d4:	ldr	r0, [sp, #312]	; 0x138
   191d8:	ldr	r1, [sp, #316]	; 0x13c
   191dc:	ldr	r2, [sp, #304]	; 0x130
   191e0:	ldr	r3, [sp, #308]	; 0x134
   191e4:	subs	r0, r0, r2
   191e8:	sbcs	r1, r1, r3
   191ec:	str	r0, [sp, #64]	; 0x40
   191f0:	str	r1, [sp, #60]	; 0x3c
   191f4:	bcs	19208 <__assert_fail@plt+0x7e84>
   191f8:	b	191fc <__assert_fail@plt+0x7e78>
   191fc:	ldr	r0, [sp, #300]	; 0x12c
   19200:	add	r0, r0, #1
   19204:	str	r0, [sp, #300]	; 0x12c
   19208:	ldr	r0, [sp, #296]	; 0x128
   1920c:	ldr	r1, [sp, #300]	; 0x12c
   19210:	ldr	r2, [sp, #316]	; 0x13c
   19214:	adds	r0, r0, r2
   19218:	adc	r1, r1, #0
   1921c:	str	r0, [fp, #-120]	; 0xffffff88
   19220:	str	r1, [fp, #-116]	; 0xffffff8c
   19224:	ldr	r0, [sp, #312]	; 0x138
   19228:	ldr	r1, [sp, #320]	; 0x140
   1922c:	str	r0, [fp, #-156]	; 0xffffff64
   19230:	str	r1, [fp, #-160]	; 0xffffff60
   19234:	b	19238 <__assert_fail@plt+0x7eb4>
   19238:	ldr	r0, [fp, #-112]	; 0xffffff90
   1923c:	ldr	r1, [fp, #-108]	; 0xffffff94
   19240:	str	r1, [sp, #212]	; 0xd4
   19244:	str	r0, [sp, #208]	; 0xd0
   19248:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1924c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19250:	str	r1, [sp, #204]	; 0xcc
   19254:	str	r0, [sp, #200]	; 0xc8
   19258:	ldr	r0, [sp, #208]	; 0xd0
   1925c:	str	r0, [sp, #228]	; 0xe4
   19260:	ldr	r0, [sp, #212]	; 0xd4
   19264:	str	r0, [sp, #220]	; 0xdc
   19268:	ldr	r0, [sp, #200]	; 0xc8
   1926c:	str	r0, [sp, #224]	; 0xe0
   19270:	ldr	r0, [sp, #204]	; 0xcc
   19274:	str	r0, [sp, #216]	; 0xd8
   19278:	ldr	r0, [sp, #228]	; 0xe4
   1927c:	ldr	r1, [sp, #224]	; 0xe0
   19280:	umull	r0, r1, r0, r1
   19284:	str	r1, [sp, #260]	; 0x104
   19288:	str	r0, [sp, #256]	; 0x100
   1928c:	ldr	r0, [sp, #228]	; 0xe4
   19290:	ldr	r1, [sp, #216]	; 0xd8
   19294:	umull	r0, r1, r0, r1
   19298:	str	r1, [sp, #252]	; 0xfc
   1929c:	str	r0, [sp, #248]	; 0xf8
   192a0:	ldr	r0, [sp, #220]	; 0xdc
   192a4:	ldr	r1, [sp, #224]	; 0xe0
   192a8:	umull	r0, r1, r0, r1
   192ac:	str	r1, [sp, #244]	; 0xf4
   192b0:	str	r0, [sp, #240]	; 0xf0
   192b4:	ldr	r0, [sp, #220]	; 0xdc
   192b8:	ldr	r1, [sp, #216]	; 0xd8
   192bc:	umull	r0, r1, r0, r1
   192c0:	str	r1, [sp, #236]	; 0xec
   192c4:	str	r0, [sp, #232]	; 0xe8
   192c8:	ldr	r0, [sp, #260]	; 0x104
   192cc:	ldr	r1, [sp, #248]	; 0xf8
   192d0:	ldr	r2, [sp, #252]	; 0xfc
   192d4:	adds	r0, r1, r0
   192d8:	adc	r1, r2, #0
   192dc:	str	r0, [sp, #248]	; 0xf8
   192e0:	str	r1, [sp, #252]	; 0xfc
   192e4:	ldr	r0, [sp, #240]	; 0xf0
   192e8:	ldr	r1, [sp, #244]	; 0xf4
   192ec:	ldr	r2, [sp, #248]	; 0xf8
   192f0:	ldr	r3, [sp, #252]	; 0xfc
   192f4:	adds	r0, r2, r0
   192f8:	adc	r1, r3, r1
   192fc:	str	r0, [sp, #248]	; 0xf8
   19300:	str	r1, [sp, #252]	; 0xfc
   19304:	ldr	r0, [sp, #248]	; 0xf8
   19308:	ldr	r1, [sp, #252]	; 0xfc
   1930c:	ldr	r2, [sp, #240]	; 0xf0
   19310:	ldr	r3, [sp, #244]	; 0xf4
   19314:	subs	r0, r0, r2
   19318:	sbcs	r1, r1, r3
   1931c:	str	r0, [sp, #56]	; 0x38
   19320:	str	r1, [sp, #52]	; 0x34
   19324:	bcs	19338 <__assert_fail@plt+0x7fb4>
   19328:	b	1932c <__assert_fail@plt+0x7fa8>
   1932c:	ldr	r0, [sp, #236]	; 0xec
   19330:	add	r0, r0, #1
   19334:	str	r0, [sp, #236]	; 0xec
   19338:	ldr	r0, [sp, #232]	; 0xe8
   1933c:	ldr	r1, [sp, #236]	; 0xec
   19340:	ldr	r2, [sp, #252]	; 0xfc
   19344:	adds	r0, r0, r2
   19348:	adc	r1, r1, #0
   1934c:	str	r0, [fp, #-144]	; 0xffffff70
   19350:	str	r1, [fp, #-140]	; 0xffffff74
   19354:	ldr	r0, [sp, #248]	; 0xf8
   19358:	ldr	r1, [sp, #256]	; 0x100
   1935c:	str	r0, [fp, #-148]	; 0xffffff6c
   19360:	str	r1, [fp, #-152]	; 0xffffff68
   19364:	ldr	r0, [fp, #-136]	; 0xffffff78
   19368:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1936c:	orr	r0, r0, r1
   19370:	ldr	r1, [fp, #-104]	; 0xffffff98
   19374:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19378:	adds	r3, r1, #1
   1937c:	adc	ip, r2, #0
   19380:	cmp	r0, #0
   19384:	movne	r1, r3
   19388:	cmp	r0, #0
   1938c:	movne	r2, ip
   19390:	str	r1, [fp, #-104]	; 0xffffff98
   19394:	str	r2, [fp, #-100]	; 0xffffff9c
   19398:	ldr	r0, [fp, #-104]	; 0xffffff98
   1939c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   193a0:	ldr	r2, [fp, #-120]	; 0xffffff88
   193a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   193a8:	adds	r0, r0, r2
   193ac:	adc	r1, r1, r3
   193b0:	str	r0, [sp, #192]	; 0xc0
   193b4:	str	r1, [sp, #196]	; 0xc4
   193b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   193bc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   193c0:	ldr	r2, [sp, #192]	; 0xc0
   193c4:	ldr	r3, [sp, #196]	; 0xc4
   193c8:	ldr	ip, [fp, #-104]	; 0xffffff98
   193cc:	ldr	lr, [fp, #-100]	; 0xffffff9c
   193d0:	subs	r2, r2, ip
   193d4:	sbcs	r3, r3, lr
   193d8:	mov	ip, #0
   193dc:	movwcc	ip, #1
   193e0:	adds	lr, r0, #1
   193e4:	adc	r4, r1, #0
   193e8:	cmp	ip, #0
   193ec:	movne	r1, r4
   193f0:	cmp	ip, #0
   193f4:	movne	r0, lr
   193f8:	str	r1, [fp, #-92]	; 0xffffffa4
   193fc:	str	r0, [fp, #-96]	; 0xffffffa0
   19400:	ldr	r0, [sp, #192]	; 0xc0
   19404:	ldr	r1, [sp, #196]	; 0xc4
   19408:	str	r1, [fp, #-100]	; 0xffffff9c
   1940c:	str	r0, [fp, #-104]	; 0xffffff98
   19410:	str	r2, [sp, #48]	; 0x30
   19414:	str	r3, [sp, #44]	; 0x2c
   19418:	b	1941c <__assert_fail@plt+0x8098>
   1941c:	ldr	r0, [fp, #-104]	; 0xffffff98
   19420:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19424:	ldr	r2, [fp, #-128]	; 0xffffff80
   19428:	ldr	r3, [fp, #-124]	; 0xffffff84
   1942c:	adds	r0, r0, r2
   19430:	adc	r1, r1, r3
   19434:	str	r0, [sp, #184]	; 0xb8
   19438:	str	r1, [sp, #188]	; 0xbc
   1943c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19440:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19444:	ldr	r2, [sp, #184]	; 0xb8
   19448:	ldr	r3, [sp, #188]	; 0xbc
   1944c:	ldr	ip, [fp, #-104]	; 0xffffff98
   19450:	ldr	lr, [fp, #-100]	; 0xffffff9c
   19454:	subs	r2, r2, ip
   19458:	sbcs	r3, r3, lr
   1945c:	mov	ip, #0
   19460:	movwcc	ip, #1
   19464:	adds	lr, r0, #1
   19468:	adc	r4, r1, #0
   1946c:	cmp	ip, #0
   19470:	movne	r1, r4
   19474:	cmp	ip, #0
   19478:	movne	r0, lr
   1947c:	str	r1, [fp, #-92]	; 0xffffffa4
   19480:	str	r0, [fp, #-96]	; 0xffffffa0
   19484:	ldr	r0, [sp, #184]	; 0xb8
   19488:	ldr	r1, [sp, #188]	; 0xbc
   1948c:	str	r1, [fp, #-100]	; 0xffffff9c
   19490:	str	r0, [fp, #-104]	; 0xffffff98
   19494:	str	r2, [sp, #40]	; 0x28
   19498:	str	r3, [sp, #36]	; 0x24
   1949c:	b	194a0 <__assert_fail@plt+0x811c>
   194a0:	ldr	r0, [fp, #-104]	; 0xffffff98
   194a4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   194a8:	ldr	r2, [fp, #-152]	; 0xffffff68
   194ac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   194b0:	adds	r0, r0, r2
   194b4:	adc	r1, r1, r3
   194b8:	str	r0, [sp, #176]	; 0xb0
   194bc:	str	r1, [sp, #180]	; 0xb4
   194c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   194c4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   194c8:	ldr	r2, [fp, #-144]	; 0xffffff70
   194cc:	ldr	r3, [fp, #-140]	; 0xffffff74
   194d0:	adds	r0, r0, r2
   194d4:	adc	r1, r1, r3
   194d8:	ldr	r2, [sp, #176]	; 0xb0
   194dc:	ldr	r3, [sp, #180]	; 0xb4
   194e0:	ldr	ip, [fp, #-104]	; 0xffffff98
   194e4:	ldr	lr, [fp, #-100]	; 0xffffff9c
   194e8:	subs	r2, r2, ip
   194ec:	sbcs	r3, r3, lr
   194f0:	mov	ip, #0
   194f4:	movwcc	ip, #1
   194f8:	adds	lr, r0, #1
   194fc:	adc	r4, r1, #0
   19500:	cmp	ip, #0
   19504:	movne	r0, lr
   19508:	cmp	ip, #0
   1950c:	movne	r1, r4
   19510:	str	r1, [fp, #-92]	; 0xffffffa4
   19514:	str	r0, [fp, #-96]	; 0xffffffa0
   19518:	ldr	r0, [sp, #176]	; 0xb0
   1951c:	ldr	r1, [sp, #180]	; 0xb4
   19520:	str	r1, [fp, #-100]	; 0xffffff9c
   19524:	str	r0, [fp, #-104]	; 0xffffff98
   19528:	str	r3, [sp, #32]
   1952c:	str	r2, [sp, #28]
   19530:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19534:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19538:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1953c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19540:	subs	r0, r2, r0
   19544:	sbcs	r1, r3, r1
   19548:	str	r0, [sp, #24]
   1954c:	str	r1, [sp, #20]
   19550:	bcc	195a8 <__assert_fail@plt+0x8224>
   19554:	b	19558 <__assert_fail@plt+0x81d4>
   19558:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1955c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   19560:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19564:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19568:	eor	r1, r1, r3
   1956c:	eor	r0, r0, r2
   19570:	orr	r0, r0, r1
   19574:	cmp	r0, #0
   19578:	bne	19634 <__assert_fail@plt+0x82b0>
   1957c:	b	19580 <__assert_fail@plt+0x81fc>
   19580:	ldr	r0, [fp, #-104]	; 0xffffff98
   19584:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19588:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1958c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19590:	subs	r0, r0, r2
   19594:	sbcs	r1, r1, r3
   19598:	str	r0, [sp, #16]
   1959c:	str	r1, [sp, #12]
   195a0:	bcc	19634 <__assert_fail@plt+0x82b0>
   195a4:	b	195a8 <__assert_fail@plt+0x8224>
   195a8:	b	195ac <__assert_fail@plt+0x8228>
   195ac:	ldr	r0, [fp, #-104]	; 0xffffff98
   195b0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   195b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   195b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   195bc:	subs	r0, r0, r2
   195c0:	sbcs	r1, r1, r3
   195c4:	mov	r2, #0
   195c8:	mov	r3, r2
   195cc:	movwcc	r3, #1
   195d0:	str	r2, [sp, #172]	; 0xac
   195d4:	str	r3, [sp, #168]	; 0xa8
   195d8:	ldr	r2, [fp, #-104]	; 0xffffff98
   195dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   195e0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   195e4:	ldr	lr, [fp, #-76]	; 0xffffffb4
   195e8:	subs	r2, r2, ip
   195ec:	sbc	r3, r3, lr
   195f0:	str	r2, [fp, #-104]	; 0xffffff98
   195f4:	str	r3, [fp, #-100]	; 0xffffff9c
   195f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   195fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19600:	ldr	ip, [fp, #-72]	; 0xffffffb8
   19604:	ldr	lr, [fp, #-68]	; 0xffffffbc
   19608:	subs	r2, r2, ip
   1960c:	sbc	r3, r3, lr
   19610:	ldr	ip, [sp, #168]	; 0xa8
   19614:	ldr	lr, [sp, #172]	; 0xac
   19618:	subs	r2, r2, ip
   1961c:	sbc	r3, r3, lr
   19620:	str	r2, [fp, #-96]	; 0xffffffa0
   19624:	str	r3, [fp, #-92]	; 0xffffffa4
   19628:	str	r0, [sp, #8]
   1962c:	str	r1, [sp, #4]
   19630:	b	19634 <__assert_fail@plt+0x82b0>
   19634:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19638:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1963c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19640:	str	r1, [r2, #4]
   19644:	str	r0, [r2]
   19648:	ldr	r0, [fp, #-104]	; 0xffffff98
   1964c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19650:	sub	sp, fp, #28
   19654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19658:	sub	sp, sp, #48	; 0x30
   1965c:	str	r0, [sp, #32]
   19660:	str	r1, [sp, #36]	; 0x24
   19664:	str	r3, [sp, #28]
   19668:	str	r2, [sp, #24]
   1966c:	ldrb	r0, [sp, #24]
   19670:	tst	r0, #1
   19674:	bne	196ac <__assert_fail@plt+0x8328>
   19678:	b	1967c <__assert_fail@plt+0x82f8>
   1967c:	ldr	r0, [sp, #24]
   19680:	ldr	r1, [sp, #28]
   19684:	str	r1, [sp, #20]
   19688:	str	r0, [sp, #16]
   1968c:	ldr	r0, [sp, #32]
   19690:	ldr	r1, [sp, #36]	; 0x24
   19694:	str	r1, [sp, #28]
   19698:	str	r0, [sp, #24]
   1969c:	ldr	r0, [sp, #16]
   196a0:	ldr	r1, [sp, #20]
   196a4:	str	r1, [sp, #36]	; 0x24
   196a8:	str	r0, [sp, #32]
   196ac:	ldr	r0, [sp, #32]
   196b0:	ldr	r1, [sp, #36]	; 0x24
   196b4:	orr	r0, r0, r1
   196b8:	cmp	r0, #0
   196bc:	bne	196d8 <__assert_fail@plt+0x8354>
   196c0:	b	196c4 <__assert_fail@plt+0x8340>
   196c4:	ldr	r0, [sp, #24]
   196c8:	ldr	r1, [sp, #28]
   196cc:	str	r1, [sp, #44]	; 0x2c
   196d0:	str	r0, [sp, #40]	; 0x28
   196d4:	b	19800 <__assert_fail@plt+0x847c>
   196d8:	ldr	r0, [sp, #24]
   196dc:	ldr	r1, [sp, #28]
   196e0:	lsrs	r1, r1, #1
   196e4:	rrx	r0, r0
   196e8:	str	r1, [sp, #28]
   196ec:	str	r0, [sp, #24]
   196f0:	b	196f4 <__assert_fail@plt+0x8370>
   196f4:	ldrb	r0, [sp, #32]
   196f8:	tst	r0, #1
   196fc:	bne	19720 <__assert_fail@plt+0x839c>
   19700:	b	19704 <__assert_fail@plt+0x8380>
   19704:	ldr	r0, [sp, #32]
   19708:	ldr	r1, [sp, #36]	; 0x24
   1970c:	lsrs	r1, r1, #1
   19710:	rrx	r0, r0
   19714:	str	r1, [sp, #36]	; 0x24
   19718:	str	r0, [sp, #32]
   1971c:	b	196f4 <__assert_fail@plt+0x8370>
   19720:	ldr	r0, [sp, #32]
   19724:	ldr	r1, [sp, #36]	; 0x24
   19728:	lsrs	r1, r1, #1
   1972c:	rrx	r0, r0
   19730:	str	r1, [sp, #36]	; 0x24
   19734:	str	r0, [sp, #32]
   19738:	ldr	r0, [sp, #32]
   1973c:	ldr	r1, [sp, #36]	; 0x24
   19740:	ldr	r2, [sp, #24]
   19744:	ldr	r3, [sp, #28]
   19748:	subs	r0, r0, r2
   1974c:	sbc	r1, r1, r3
   19750:	str	r0, [sp, #8]
   19754:	str	r1, [sp, #12]
   19758:	ldr	r0, [sp, #8]
   1975c:	ldr	r1, [sp, #12]
   19760:	orr	r0, r0, r1
   19764:	cmp	r0, #0
   19768:	bne	19794 <__assert_fail@plt+0x8410>
   1976c:	b	19770 <__assert_fail@plt+0x83ec>
   19770:	ldr	r0, [sp, #32]
   19774:	ldr	r1, [sp, #36]	; 0x24
   19778:	lsl	r1, r1, #1
   1977c:	orr	r1, r1, r0, lsr #31
   19780:	mov	r2, #1
   19784:	orr	r0, r2, r0, lsl #1
   19788:	str	r0, [sp, #40]	; 0x28
   1978c:	str	r1, [sp, #44]	; 0x2c
   19790:	b	19800 <__assert_fail@plt+0x847c>
   19794:	ldr	r0, [sp, #12]
   19798:	asr	r0, r0, #31
   1979c:	str	r0, [sp, #4]
   197a0:	str	r0, [sp]
   197a4:	ldr	r0, [sp]
   197a8:	ldr	r1, [sp, #4]
   197ac:	ldr	r2, [sp, #8]
   197b0:	ldr	r3, [sp, #12]
   197b4:	and	r1, r1, r3
   197b8:	and	r0, r0, r2
   197bc:	ldr	r2, [sp, #24]
   197c0:	ldr	r3, [sp, #28]
   197c4:	adds	r0, r2, r0
   197c8:	adc	r1, r3, r1
   197cc:	str	r0, [sp, #24]
   197d0:	str	r1, [sp, #28]
   197d4:	ldr	r0, [sp, #8]
   197d8:	ldr	r1, [sp, #12]
   197dc:	ldr	r2, [sp]
   197e0:	ldr	r3, [sp, #4]
   197e4:	eor	r1, r1, r3
   197e8:	eor	r0, r0, r2
   197ec:	subs	r0, r0, r2
   197f0:	sbc	r1, r1, r3
   197f4:	str	r0, [sp, #32]
   197f8:	str	r1, [sp, #36]	; 0x24
   197fc:	b	196f0 <__assert_fail@plt+0x836c>
   19800:	ldr	r0, [sp, #40]	; 0x28
   19804:	ldr	r1, [sp, #44]	; 0x2c
   19808:	add	sp, sp, #48	; 0x30
   1980c:	bx	lr
   19810:	push	{r4, r5, r6, sl, fp, lr}
   19814:	add	fp, sp, #16
   19818:	sub	sp, sp, #112	; 0x70
   1981c:	ldr	r1, [fp, #28]
   19820:	ldr	ip, [fp, #24]
   19824:	ldr	lr, [fp, #20]
   19828:	ldr	r4, [fp, #16]
   1982c:	ldr	r5, [fp, #12]
   19830:	ldr	r6, [fp, #8]
   19834:	str	r0, [fp, #-28]	; 0xffffffe4
   19838:	str	r3, [fp, #-36]	; 0xffffffdc
   1983c:	str	r2, [fp, #-40]	; 0xffffffd8
   19840:	str	r5, [fp, #-44]	; 0xffffffd4
   19844:	str	r6, [fp, #-48]	; 0xffffffd0
   19848:	str	lr, [fp, #-52]	; 0xffffffcc
   1984c:	str	r4, [fp, #-56]	; 0xffffffc8
   19850:	str	r1, [sp, #68]	; 0x44
   19854:	str	ip, [sp, #64]	; 0x40
   19858:	ldrb	r0, [sp, #64]	; 0x40
   1985c:	tst	r0, #1
   19860:	beq	1986c <__assert_fail@plt+0x84e8>
   19864:	b	19868 <__assert_fail@plt+0x84e4>
   19868:	b	1988c <__assert_fail@plt+0x8508>
   1986c:	movw	r0, #17886	; 0x45de
   19870:	movt	r0, #3
   19874:	movw	r1, #17363	; 0x43d3
   19878:	movt	r1, #3
   1987c:	movw	r2, #476	; 0x1dc
   19880:	movw	r3, #17893	; 0x45e5
   19884:	movt	r3, #3
   19888:	bl	11384 <__assert_fail@plt>
   1988c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19890:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19894:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19898:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1989c:	orr	r1, r1, r3
   198a0:	orr	r0, r0, r2
   198a4:	orr	r0, r0, r1
   198a8:	cmp	r0, #0
   198ac:	bne	198dc <__assert_fail@plt+0x8558>
   198b0:	b	198b4 <__assert_fail@plt+0x8530>
   198b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   198b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   198bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   198c0:	str	r1, [r2, #4]
   198c4:	str	r0, [r2]
   198c8:	ldr	r0, [sp, #64]	; 0x40
   198cc:	ldr	r1, [sp, #68]	; 0x44
   198d0:	str	r1, [fp, #-20]	; 0xffffffec
   198d4:	str	r0, [fp, #-24]	; 0xffffffe8
   198d8:	b	19c6c <__assert_fail@plt+0x88e8>
   198dc:	b	198e0 <__assert_fail@plt+0x855c>
   198e0:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   198e4:	tst	r0, #1
   198e8:	bne	19930 <__assert_fail@plt+0x85ac>
   198ec:	b	198f0 <__assert_fail@plt+0x856c>
   198f0:	b	198f4 <__assert_fail@plt+0x8570>
   198f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   198f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   198fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19900:	lsrs	r2, r2, #1
   19904:	rrx	r1, r1
   19908:	orr	r0, r2, r0, lsl #31
   1990c:	str	r1, [fp, #-48]	; 0xffffffd0
   19910:	str	r0, [fp, #-44]	; 0xffffffd4
   19914:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19918:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1991c:	lsrs	r1, r1, #1
   19920:	rrx	r0, r0
   19924:	str	r1, [fp, #-36]	; 0xffffffdc
   19928:	str	r0, [fp, #-40]	; 0xffffffd8
   1992c:	b	198e0 <__assert_fail@plt+0x855c>
   19930:	b	19934 <__assert_fail@plt+0x85b0>
   19934:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19938:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1993c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19940:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19944:	orr	r1, r1, r3
   19948:	orr	r0, r0, r2
   1994c:	orr	r0, r0, r1
   19950:	cmp	r0, #0
   19954:	bne	1998c <__assert_fail@plt+0x8608>
   19958:	b	1995c <__assert_fail@plt+0x85d8>
   1995c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19960:	mov	r1, #0
   19964:	str	r1, [r0, #4]
   19968:	str	r1, [r0]
   1996c:	ldr	r0, [sp, #64]	; 0x40
   19970:	ldr	r1, [sp, #68]	; 0x44
   19974:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19978:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1997c:	bl	19658 <__assert_fail@plt+0x82d4>
   19980:	str	r1, [fp, #-20]	; 0xffffffec
   19984:	str	r0, [fp, #-24]	; 0xffffffe8
   19988:	b	19c6c <__assert_fail@plt+0x88e8>
   1998c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19990:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19994:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19998:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1999c:	subs	r0, r2, r0
   199a0:	sbcs	r1, r3, r1
   199a4:	str	r0, [sp, #44]	; 0x2c
   199a8:	str	r1, [sp, #40]	; 0x28
   199ac:	bcc	19a04 <__assert_fail@plt+0x8680>
   199b0:	b	199b4 <__assert_fail@plt+0x8630>
   199b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   199bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   199c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   199c4:	eor	r1, r1, r3
   199c8:	eor	r0, r0, r2
   199cc:	orr	r0, r0, r1
   199d0:	cmp	r0, #0
   199d4:	bne	19ae4 <__assert_fail@plt+0x8760>
   199d8:	b	199dc <__assert_fail@plt+0x8658>
   199dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   199e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199e4:	ldr	r2, [sp, #64]	; 0x40
   199e8:	ldr	r3, [sp, #68]	; 0x44
   199ec:	subs	r0, r2, r0
   199f0:	sbcs	r1, r3, r1
   199f4:	str	r0, [sp, #36]	; 0x24
   199f8:	str	r1, [sp, #32]
   199fc:	bcs	19ae4 <__assert_fail@plt+0x8760>
   19a00:	b	19a04 <__assert_fail@plt+0x8680>
   19a04:	b	19a08 <__assert_fail@plt+0x8684>
   19a08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19a0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a10:	ldr	r2, [sp, #64]	; 0x40
   19a14:	ldr	r3, [sp, #68]	; 0x44
   19a18:	subs	r0, r0, r2
   19a1c:	sbcs	r1, r1, r3
   19a20:	mov	r2, #0
   19a24:	mov	r3, r2
   19a28:	movwcc	r3, #1
   19a2c:	str	r2, [sp, #60]	; 0x3c
   19a30:	str	r3, [sp, #56]	; 0x38
   19a34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19a38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19a3c:	ldr	ip, [sp, #64]	; 0x40
   19a40:	ldr	lr, [sp, #68]	; 0x44
   19a44:	subs	r2, r2, ip
   19a48:	sbc	r3, r3, lr
   19a4c:	str	r2, [fp, #-48]	; 0xffffffd0
   19a50:	str	r3, [fp, #-44]	; 0xffffffd4
   19a54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19a5c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   19a60:	ldr	lr, [fp, #-52]	; 0xffffffcc
   19a64:	subs	r2, r2, ip
   19a68:	sbc	r3, r3, lr
   19a6c:	ldr	ip, [sp, #56]	; 0x38
   19a70:	ldr	lr, [sp, #60]	; 0x3c
   19a74:	subs	r2, r2, ip
   19a78:	sbc	r3, r3, lr
   19a7c:	str	r2, [fp, #-40]	; 0xffffffd8
   19a80:	str	r3, [fp, #-36]	; 0xffffffdc
   19a84:	str	r0, [sp, #28]
   19a88:	str	r1, [sp, #24]
   19a8c:	b	19a90 <__assert_fail@plt+0x870c>
   19a90:	b	19a94 <__assert_fail@plt+0x8710>
   19a94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19a98:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19a9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19aa0:	lsrs	r2, r2, #1
   19aa4:	rrx	r1, r1
   19aa8:	orr	r0, r2, r0, lsl #31
   19aac:	str	r1, [fp, #-48]	; 0xffffffd0
   19ab0:	str	r0, [fp, #-44]	; 0xffffffd4
   19ab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19abc:	lsrs	r1, r1, #1
   19ac0:	rrx	r0, r0
   19ac4:	str	r1, [fp, #-36]	; 0xffffffdc
   19ac8:	str	r0, [fp, #-40]	; 0xffffffd8
   19acc:	b	19ad0 <__assert_fail@plt+0x874c>
   19ad0:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   19ad4:	tst	r0, #1
   19ad8:	beq	19a90 <__assert_fail@plt+0x870c>
   19adc:	b	19ae0 <__assert_fail@plt+0x875c>
   19ae0:	b	19c44 <__assert_fail@plt+0x88c0>
   19ae4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ae8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19aec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19af0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19af4:	subs	r0, r2, r0
   19af8:	sbcs	r1, r3, r1
   19afc:	str	r0, [sp, #20]
   19b00:	str	r1, [sp, #16]
   19b04:	bcc	19b5c <__assert_fail@plt+0x87d8>
   19b08:	b	19b0c <__assert_fail@plt+0x8788>
   19b0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19b14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19b18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19b1c:	eor	r1, r1, r3
   19b20:	eor	r0, r0, r2
   19b24:	orr	r0, r0, r1
   19b28:	cmp	r0, #0
   19b2c:	bne	19c3c <__assert_fail@plt+0x88b8>
   19b30:	b	19b34 <__assert_fail@plt+0x87b0>
   19b34:	ldr	r0, [sp, #64]	; 0x40
   19b38:	ldr	r1, [sp, #68]	; 0x44
   19b3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19b40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19b44:	subs	r0, r2, r0
   19b48:	sbcs	r1, r3, r1
   19b4c:	str	r0, [sp, #12]
   19b50:	str	r1, [sp, #8]
   19b54:	bcs	19c3c <__assert_fail@plt+0x88b8>
   19b58:	b	19b5c <__assert_fail@plt+0x87d8>
   19b5c:	b	19b60 <__assert_fail@plt+0x87dc>
   19b60:	ldr	r0, [sp, #64]	; 0x40
   19b64:	ldr	r1, [sp, #68]	; 0x44
   19b68:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19b6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19b70:	subs	r0, r0, r2
   19b74:	sbcs	r1, r1, r3
   19b78:	mov	r2, #0
   19b7c:	mov	r3, r2
   19b80:	movwcc	r3, #1
   19b84:	str	r2, [sp, #52]	; 0x34
   19b88:	str	r3, [sp, #48]	; 0x30
   19b8c:	ldr	r2, [sp, #64]	; 0x40
   19b90:	ldr	r3, [sp, #68]	; 0x44
   19b94:	ldr	ip, [fp, #-48]	; 0xffffffd0
   19b98:	ldr	lr, [fp, #-44]	; 0xffffffd4
   19b9c:	subs	r2, r2, ip
   19ba0:	sbc	r3, r3, lr
   19ba4:	str	r2, [sp, #64]	; 0x40
   19ba8:	str	r3, [sp, #68]	; 0x44
   19bac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19bb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19bb4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   19bb8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19bbc:	subs	r2, r2, ip
   19bc0:	sbc	r3, r3, lr
   19bc4:	ldr	ip, [sp, #48]	; 0x30
   19bc8:	ldr	lr, [sp, #52]	; 0x34
   19bcc:	subs	r2, r2, ip
   19bd0:	sbc	r3, r3, lr
   19bd4:	str	r2, [fp, #-56]	; 0xffffffc8
   19bd8:	str	r3, [fp, #-52]	; 0xffffffcc
   19bdc:	str	r0, [sp, #4]
   19be0:	str	r1, [sp]
   19be4:	b	19be8 <__assert_fail@plt+0x8864>
   19be8:	b	19bec <__assert_fail@plt+0x8868>
   19bec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19bf0:	ldr	r1, [sp, #64]	; 0x40
   19bf4:	ldr	r2, [sp, #68]	; 0x44
   19bf8:	lsrs	r2, r2, #1
   19bfc:	rrx	r1, r1
   19c00:	orr	r0, r2, r0, lsl #31
   19c04:	str	r1, [sp, #64]	; 0x40
   19c08:	str	r0, [sp, #68]	; 0x44
   19c0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19c10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19c14:	lsrs	r1, r1, #1
   19c18:	rrx	r0, r0
   19c1c:	str	r1, [fp, #-52]	; 0xffffffcc
   19c20:	str	r0, [fp, #-56]	; 0xffffffc8
   19c24:	b	19c28 <__assert_fail@plt+0x88a4>
   19c28:	ldrb	r0, [sp, #64]	; 0x40
   19c2c:	tst	r0, #1
   19c30:	beq	19be8 <__assert_fail@plt+0x8864>
   19c34:	b	19c38 <__assert_fail@plt+0x88b4>
   19c38:	b	19c40 <__assert_fail@plt+0x88bc>
   19c3c:	b	19c48 <__assert_fail@plt+0x88c4>
   19c40:	b	19c44 <__assert_fail@plt+0x88c0>
   19c44:	b	19934 <__assert_fail@plt+0x85b0>
   19c48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19c50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19c54:	str	r1, [r2, #4]
   19c58:	str	r0, [r2]
   19c5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19c60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c64:	str	r1, [fp, #-20]	; 0xffffffec
   19c68:	str	r0, [fp, #-24]	; 0xffffffe8
   19c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c70:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c74:	sub	sp, fp, #16
   19c78:	pop	{r4, r5, r6, sl, fp, pc}
   19c7c:	push	{r4, r5, r6, sl, fp, lr}
   19c80:	add	fp, sp, #16
   19c84:	sub	sp, sp, #128	; 0x80
   19c88:	ldr	r1, [fp, #28]
   19c8c:	ldr	ip, [fp, #24]
   19c90:	ldr	lr, [fp, #20]
   19c94:	ldr	r4, [fp, #16]
   19c98:	ldr	r5, [fp, #12]
   19c9c:	ldr	r6, [fp, #8]
   19ca0:	str	r0, [fp, #-28]	; 0xffffffe4
   19ca4:	str	r3, [fp, #-36]	; 0xffffffdc
   19ca8:	str	r2, [fp, #-40]	; 0xffffffd8
   19cac:	str	r5, [fp, #-44]	; 0xffffffd4
   19cb0:	str	r6, [fp, #-48]	; 0xffffffd0
   19cb4:	str	lr, [fp, #-52]	; 0xffffffcc
   19cb8:	str	r4, [fp, #-56]	; 0xffffffc8
   19cbc:	str	r1, [fp, #-60]	; 0xffffffc4
   19cc0:	str	ip, [fp, #-64]	; 0xffffffc0
   19cc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19cc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ccc:	orr	r0, r0, r1
   19cd0:	cmp	r0, #0
   19cd4:	beq	19ce0 <__assert_fail@plt+0x895c>
   19cd8:	b	19cdc <__assert_fail@plt+0x8958>
   19cdc:	b	19d00 <__assert_fail@plt+0x897c>
   19ce0:	movw	r0, #17969	; 0x4631
   19ce4:	movt	r0, #3
   19ce8:	movw	r1, #17363	; 0x43d3
   19cec:	movt	r1, #3
   19cf0:	movw	r2, #411	; 0x19b
   19cf4:	movw	r3, #17977	; 0x4639
   19cf8:	movt	r3, #3
   19cfc:	bl	11384 <__assert_fail@plt>
   19d00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19d08:	orr	r0, r0, r1
   19d0c:	cmp	r0, #0
   19d10:	bne	19d3c <__assert_fail@plt+0x89b8>
   19d14:	b	19d18 <__assert_fail@plt+0x8994>
   19d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19d1c:	mov	r1, #0
   19d20:	str	r1, [r0, #4]
   19d24:	str	r1, [r0]
   19d28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19d30:	str	r1, [fp, #-20]	; 0xffffffec
   19d34:	str	r0, [fp, #-24]	; 0xffffffe8
   19d38:	b	1a0c0 <__assert_fail@plt+0x8d3c>
   19d3c:	b	19d40 <__assert_fail@plt+0x89bc>
   19d40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19d48:	str	r1, [sp, #68]	; 0x44
   19d4c:	str	r0, [sp, #64]	; 0x40
   19d50:	movw	r0, #0
   19d54:	str	r0, [sp, #60]	; 0x3c
   19d58:	ldrb	r0, [sp, #71]	; 0x47
   19d5c:	cmp	r0, #0
   19d60:	bne	19d94 <__assert_fail@plt+0x8a10>
   19d64:	b	19d68 <__assert_fail@plt+0x89e4>
   19d68:	ldr	r0, [sp, #64]	; 0x40
   19d6c:	ldr	r1, [sp, #68]	; 0x44
   19d70:	lsl	r1, r1, #8
   19d74:	orr	r1, r1, r0, lsr #24
   19d78:	lsl	r0, r0, #8
   19d7c:	str	r0, [sp, #64]	; 0x40
   19d80:	str	r1, [sp, #68]	; 0x44
   19d84:	ldr	r0, [sp, #60]	; 0x3c
   19d88:	add	r0, r0, #8
   19d8c:	str	r0, [sp, #60]	; 0x3c
   19d90:	b	19d58 <__assert_fail@plt+0x89d4>
   19d94:	b	19d98 <__assert_fail@plt+0x8a14>
   19d98:	ldr	r0, [sp, #68]	; 0x44
   19d9c:	cmp	r0, #0
   19da0:	blt	19dd4 <__assert_fail@plt+0x8a50>
   19da4:	b	19da8 <__assert_fail@plt+0x8a24>
   19da8:	ldr	r0, [sp, #64]	; 0x40
   19dac:	ldr	r1, [sp, #68]	; 0x44
   19db0:	lsl	r1, r1, #1
   19db4:	orr	r1, r1, r0, lsr #31
   19db8:	lsl	r0, r0, #1
   19dbc:	str	r0, [sp, #64]	; 0x40
   19dc0:	str	r1, [sp, #68]	; 0x44
   19dc4:	ldr	r0, [sp, #60]	; 0x3c
   19dc8:	add	r0, r0, #1
   19dcc:	str	r0, [sp, #60]	; 0x3c
   19dd0:	b	19d98 <__assert_fail@plt+0x8a14>
   19dd4:	ldr	r0, [sp, #60]	; 0x3c
   19dd8:	str	r0, [fp, #-68]	; 0xffffffbc
   19ddc:	b	19de0 <__assert_fail@plt+0x8a5c>
   19de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19de4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19de8:	str	r1, [sp, #52]	; 0x34
   19dec:	str	r0, [sp, #48]	; 0x30
   19df0:	movw	r0, #0
   19df4:	str	r0, [sp, #44]	; 0x2c
   19df8:	ldrb	r0, [sp, #55]	; 0x37
   19dfc:	cmp	r0, #0
   19e00:	bne	19e34 <__assert_fail@plt+0x8ab0>
   19e04:	b	19e08 <__assert_fail@plt+0x8a84>
   19e08:	ldr	r0, [sp, #48]	; 0x30
   19e0c:	ldr	r1, [sp, #52]	; 0x34
   19e10:	lsl	r1, r1, #8
   19e14:	orr	r1, r1, r0, lsr #24
   19e18:	lsl	r0, r0, #8
   19e1c:	str	r0, [sp, #48]	; 0x30
   19e20:	str	r1, [sp, #52]	; 0x34
   19e24:	ldr	r0, [sp, #44]	; 0x2c
   19e28:	add	r0, r0, #8
   19e2c:	str	r0, [sp, #44]	; 0x2c
   19e30:	b	19df8 <__assert_fail@plt+0x8a74>
   19e34:	b	19e38 <__assert_fail@plt+0x8ab4>
   19e38:	ldr	r0, [sp, #52]	; 0x34
   19e3c:	cmp	r0, #0
   19e40:	blt	19e74 <__assert_fail@plt+0x8af0>
   19e44:	b	19e48 <__assert_fail@plt+0x8ac4>
   19e48:	ldr	r0, [sp, #48]	; 0x30
   19e4c:	ldr	r1, [sp, #52]	; 0x34
   19e50:	lsl	r1, r1, #1
   19e54:	orr	r1, r1, r0, lsr #31
   19e58:	lsl	r0, r0, #1
   19e5c:	str	r0, [sp, #48]	; 0x30
   19e60:	str	r1, [sp, #52]	; 0x34
   19e64:	ldr	r0, [sp, #44]	; 0x2c
   19e68:	add	r0, r0, #1
   19e6c:	str	r0, [sp, #44]	; 0x2c
   19e70:	b	19e38 <__assert_fail@plt+0x8ab4>
   19e74:	ldr	r0, [sp, #44]	; 0x2c
   19e78:	str	r0, [sp, #72]	; 0x48
   19e7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19e80:	ldr	r1, [sp, #72]	; 0x48
   19e84:	sub	r0, r0, r1
   19e88:	str	r0, [sp, #40]	; 0x28
   19e8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19e90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19e94:	ldr	r2, [sp, #40]	; 0x28
   19e98:	rsb	r3, r2, #32
   19e9c:	lsr	ip, r0, r3
   19ea0:	orr	r1, ip, r1, lsl r2
   19ea4:	sub	ip, r2, #32
   19ea8:	cmp	ip, #0
   19eac:	lslge	r1, r0, ip
   19eb0:	lsl	r0, r0, r2
   19eb4:	cmp	ip, #0
   19eb8:	movwge	r0, #0
   19ebc:	ldr	ip, [fp, #-64]	; 0xffffffc0
   19ec0:	ldr	lr, [fp, #-60]	; 0xffffffc4
   19ec4:	rsb	r2, r2, #64	; 0x40
   19ec8:	lsr	r4, lr, r2
   19ecc:	cmp	r3, #0
   19ed0:	movwge	r4, #0
   19ed4:	lsr	ip, ip, r2
   19ed8:	rsb	r2, r2, #32
   19edc:	orr	r2, ip, lr, lsl r2
   19ee0:	cmp	r3, #0
   19ee4:	lsrge	r2, lr, r3
   19ee8:	orr	r0, r0, r2
   19eec:	orr	r1, r1, r4
   19ef0:	str	r1, [fp, #-52]	; 0xffffffcc
   19ef4:	str	r0, [fp, #-56]	; 0xffffffc8
   19ef8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19efc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19f00:	ldr	r2, [sp, #40]	; 0x28
   19f04:	rsb	r3, r2, #32
   19f08:	lsr	r3, r0, r3
   19f0c:	orr	r1, r3, r1, lsl r2
   19f10:	sub	r3, r2, #32
   19f14:	cmp	r3, #0
   19f18:	lslge	r1, r0, r3
   19f1c:	lsl	r0, r0, r2
   19f20:	cmp	r3, #0
   19f24:	movwge	r0, #0
   19f28:	str	r0, [fp, #-64]	; 0xffffffc0
   19f2c:	str	r1, [fp, #-60]	; 0xffffffc4
   19f30:	movw	r0, #0
   19f34:	str	r0, [sp, #36]	; 0x24
   19f38:	ldr	r0, [sp, #36]	; 0x24
   19f3c:	ldr	r1, [sp, #40]	; 0x28
   19f40:	cmp	r0, r1
   19f44:	bge	1a09c <__assert_fail@plt+0x8d18>
   19f48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19f54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19f58:	subs	r0, r2, r0
   19f5c:	sbcs	r1, r3, r1
   19f60:	str	r0, [sp, #20]
   19f64:	str	r1, [sp, #16]
   19f68:	bcc	19fc0 <__assert_fail@plt+0x8c3c>
   19f6c:	b	19f70 <__assert_fail@plt+0x8bec>
   19f70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19f7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19f80:	eor	r1, r1, r3
   19f84:	eor	r0, r0, r2
   19f88:	orr	r0, r0, r1
   19f8c:	cmp	r0, #0
   19f90:	bne	1a04c <__assert_fail@plt+0x8cc8>
   19f94:	b	19f98 <__assert_fail@plt+0x8c14>
   19f98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19f9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fa0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19fa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19fa8:	subs	r0, r0, r2
   19fac:	sbcs	r1, r1, r3
   19fb0:	str	r0, [sp, #12]
   19fb4:	str	r1, [sp, #8]
   19fb8:	bcc	1a04c <__assert_fail@plt+0x8cc8>
   19fbc:	b	19fc0 <__assert_fail@plt+0x8c3c>
   19fc0:	b	19fc4 <__assert_fail@plt+0x8c40>
   19fc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19fc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fcc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19fd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19fd4:	subs	r0, r0, r2
   19fd8:	sbcs	r1, r1, r3
   19fdc:	mov	r2, #0
   19fe0:	mov	r3, r2
   19fe4:	movwcc	r3, #1
   19fe8:	str	r2, [sp, #28]
   19fec:	str	r3, [sp, #24]
   19ff0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19ff4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19ff8:	ldr	ip, [fp, #-64]	; 0xffffffc0
   19ffc:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1a000:	subs	r2, r2, ip
   1a004:	sbc	r3, r3, lr
   1a008:	str	r2, [fp, #-48]	; 0xffffffd0
   1a00c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a010:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a014:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a018:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1a01c:	ldr	lr, [fp, #-52]	; 0xffffffcc
   1a020:	subs	r2, r2, ip
   1a024:	sbc	r3, r3, lr
   1a028:	ldr	ip, [sp, #24]
   1a02c:	ldr	lr, [sp, #28]
   1a030:	subs	r2, r2, ip
   1a034:	sbc	r3, r3, lr
   1a038:	str	r2, [fp, #-40]	; 0xffffffd8
   1a03c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a040:	str	r0, [sp, #4]
   1a044:	str	r1, [sp]
   1a048:	b	1a04c <__assert_fail@plt+0x8cc8>
   1a04c:	b	1a050 <__assert_fail@plt+0x8ccc>
   1a050:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a054:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a058:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a05c:	lsrs	r2, r2, #1
   1a060:	rrx	r1, r1
   1a064:	orr	r0, r2, r0, lsl #31
   1a068:	str	r1, [fp, #-64]	; 0xffffffc0
   1a06c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a070:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a074:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a078:	lsrs	r1, r1, #1
   1a07c:	rrx	r0, r0
   1a080:	str	r1, [fp, #-52]	; 0xffffffcc
   1a084:	str	r0, [fp, #-56]	; 0xffffffc8
   1a088:	b	1a08c <__assert_fail@plt+0x8d08>
   1a08c:	ldr	r0, [sp, #36]	; 0x24
   1a090:	add	r0, r0, #1
   1a094:	str	r0, [sp, #36]	; 0x24
   1a098:	b	19f38 <__assert_fail@plt+0x8bb4>
   1a09c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a0a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a0a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a0a8:	str	r1, [r2, #4]
   1a0ac:	str	r0, [r2]
   1a0b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a0b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a0b8:	str	r1, [fp, #-20]	; 0xffffffec
   1a0bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a0c8:	sub	sp, fp, #16
   1a0cc:	pop	{r4, r5, r6, sl, fp, pc}
   1a0d0:	sub	sp, sp, #4
   1a0d4:	str	r0, [sp]
   1a0d8:	ldr	r0, [sp]
   1a0dc:	movw	r1, #0
   1a0e0:	str	r1, [r0]
   1a0e4:	ldr	r0, [sp]
   1a0e8:	str	r1, [r0, #4]
   1a0ec:	ldr	r0, [sp]
   1a0f0:	str	r1, [r0, #8]
   1a0f4:	add	sp, sp, #4
   1a0f8:	bx	lr
   1a0fc:	push	{fp, lr}
   1a100:	mov	fp, sp
   1a104:	sub	sp, sp, #40	; 0x28
   1a108:	str	r0, [fp, #-4]
   1a10c:	str	r1, [fp, #-8]
   1a110:	movw	r0, #41364	; 0xa194
   1a114:	movt	r0, #4
   1a118:	ldrb	r0, [r0]
   1a11c:	tst	r0, #1
   1a120:	beq	1a140 <__assert_fail@plt+0x8dbc>
   1a124:	movw	r0, #41344	; 0xa180
   1a128:	movt	r0, #4
   1a12c:	ldr	r0, [r0]
   1a130:	movw	r1, #18069	; 0x4695
   1a134:	movt	r1, #3
   1a138:	bl	11288 <fprintf@plt>
   1a13c:	str	r0, [sp, #8]
   1a140:	b	1a144 <__assert_fail@plt+0x8dc0>
   1a144:	add	r0, sp, #20
   1a148:	bl	1d714 <__assert_fail@plt+0xc390>
   1a14c:	ldr	r0, [fp, #-4]
   1a150:	movw	r1, #0
   1a154:	bl	24f4c <__assert_fail@plt+0x13bc8>
   1a158:	str	r0, [sp, #16]
   1a15c:	ldr	r0, [fp, #-4]
   1a160:	ldr	r1, [fp, #-4]
   1a164:	ldr	r2, [sp, #16]
   1a168:	bl	20444 <__assert_fail@plt+0xf0c0>
   1a16c:	ldr	r0, [sp, #16]
   1a170:	cmp	r0, #0
   1a174:	beq	1a198 <__assert_fail@plt+0x8e14>
   1a178:	ldr	r0, [fp, #-8]
   1a17c:	movw	r1, #2
   1a180:	bl	1abec <__assert_fail@plt+0x9868>
   1a184:	ldr	r0, [sp, #16]
   1a188:	mvn	r1, #0
   1a18c:	add	r0, r0, r1
   1a190:	str	r0, [sp, #16]
   1a194:	b	1a16c <__assert_fail@plt+0x8de8>
   1a198:	movw	r0, #3
   1a19c:	str	r0, [sp, #16]
   1a1a0:	movw	r0, #1
   1a1a4:	str	r0, [sp, #12]
   1a1a8:	ldr	r0, [sp, #12]
   1a1ac:	cmp	r0, #668	; 0x29c
   1a1b0:	bhi	1a240 <__assert_fail@plt+0x8ebc>
   1a1b4:	ldr	r0, [fp, #-4]
   1a1b8:	ldr	r1, [sp, #16]
   1a1bc:	bl	20e3c <__assert_fail@plt+0xfab8>
   1a1c0:	cmp	r0, #0
   1a1c4:	bne	1a214 <__assert_fail@plt+0x8e90>
   1a1c8:	ldr	r0, [sp, #12]
   1a1cc:	add	r1, r0, #1
   1a1d0:	str	r1, [sp, #12]
   1a1d4:	movw	r1, #29072	; 0x7190
   1a1d8:	movt	r1, #3
   1a1dc:	add	r0, r1, r0
   1a1e0:	ldrb	r0, [r0]
   1a1e4:	ldr	r1, [sp, #16]
   1a1e8:	add	r0, r1, r0
   1a1ec:	str	r0, [sp, #16]
   1a1f0:	ldr	r0, [fp, #-4]
   1a1f4:	ldr	r1, [sp, #16]
   1a1f8:	ldr	r2, [sp, #16]
   1a1fc:	mul	r1, r1, r2
   1a200:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1a204:	cmp	r0, #0
   1a208:	bge	1a210 <__assert_fail@plt+0x8e8c>
   1a20c:	b	1a240 <__assert_fail@plt+0x8ebc>
   1a210:	b	1a23c <__assert_fail@plt+0x8eb8>
   1a214:	ldr	r0, [fp, #-4]
   1a218:	ldr	r1, [fp, #-4]
   1a21c:	ldr	r2, [sp, #16]
   1a220:	bl	20be0 <__assert_fail@plt+0xf85c>
   1a224:	ldr	r1, [fp, #-8]
   1a228:	ldr	r2, [sp, #16]
   1a22c:	str	r0, [sp, #4]
   1a230:	mov	r0, r1
   1a234:	mov	r1, r2
   1a238:	bl	1abec <__assert_fail@plt+0x9868>
   1a23c:	b	1a1a8 <__assert_fail@plt+0x8e24>
   1a240:	add	r0, sp, #20
   1a244:	bl	1d7ec <__assert_fail@plt+0xc468>
   1a248:	mov	sp, fp
   1a24c:	pop	{fp, pc}
   1a250:	push	{fp, lr}
   1a254:	mov	fp, sp
   1a258:	sub	sp, sp, #128	; 0x80
   1a25c:	str	r0, [fp, #-8]
   1a260:	ldr	r0, [fp, #-8]
   1a264:	movw	r1, #1
   1a268:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1a26c:	cmp	r0, #0
   1a270:	bgt	1a284 <__assert_fail@plt+0x8f00>
   1a274:	movw	r0, #0
   1a278:	and	r0, r0, #1
   1a27c:	strb	r0, [fp, #-1]
   1a280:	b	1a590 <__assert_fail@plt+0x920c>
   1a284:	ldr	r1, [pc, #788]	; 1a5a0 <__assert_fail@plt+0x921c>
   1a288:	ldr	r0, [fp, #-8]
   1a28c:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1a290:	cmp	r0, #0
   1a294:	bge	1a2a8 <__assert_fail@plt+0x8f24>
   1a298:	movw	r0, #1
   1a29c:	and	r0, r0, #1
   1a2a0:	strb	r0, [fp, #-1]
   1a2a4:	b	1a590 <__assert_fail@plt+0x920c>
   1a2a8:	sub	r0, fp, #60	; 0x3c
   1a2ac:	sub	r3, fp, #48	; 0x30
   1a2b0:	sub	r2, fp, #36	; 0x24
   1a2b4:	sub	r1, fp, #24
   1a2b8:	movw	ip, #55060	; 0xd714
   1a2bc:	movt	ip, #1
   1a2c0:	str	r0, [sp, #40]	; 0x28
   1a2c4:	mov	r0, ip
   1a2c8:	ldr	ip, [sp, #40]	; 0x28
   1a2cc:	str	ip, [sp]
   1a2d0:	movw	lr, #0
   1a2d4:	str	lr, [sp, #4]
   1a2d8:	bl	1ac2c <__assert_fail@plt+0x98a8>
   1a2dc:	sub	r0, fp, #48	; 0x30
   1a2e0:	ldr	r1, [fp, #-8]
   1a2e4:	movw	r2, #1
   1a2e8:	bl	1efe0 <__assert_fail@plt+0xdc5c>
   1a2ec:	sub	r0, fp, #48	; 0x30
   1a2f0:	movw	r1, #0
   1a2f4:	bl	24f4c <__assert_fail@plt+0x13bc8>
   1a2f8:	sub	r1, fp, #48	; 0x30
   1a2fc:	sub	r2, fp, #24
   1a300:	str	r0, [sp, #52]	; 0x34
   1a304:	ldr	r0, [sp, #52]	; 0x34
   1a308:	str	r0, [sp, #36]	; 0x24
   1a30c:	mov	r0, r2
   1a310:	ldr	r2, [sp, #36]	; 0x24
   1a314:	bl	20478 <__assert_fail@plt+0xf0f4>
   1a318:	sub	r0, fp, #36	; 0x24
   1a31c:	movw	r1, #2
   1a320:	bl	1d90c <__assert_fail@plt+0xc588>
   1a324:	sub	r0, fp, #24
   1a328:	sub	r3, fp, #60	; 0x3c
   1a32c:	sub	r2, fp, #36	; 0x24
   1a330:	sub	r1, fp, #48	; 0x30
   1a334:	ldr	ip, [fp, #-8]
   1a338:	ldr	lr, [sp, #52]	; 0x34
   1a33c:	str	r0, [sp, #32]
   1a340:	mov	r0, ip
   1a344:	ldr	ip, [sp, #32]
   1a348:	str	ip, [sp]
   1a34c:	str	lr, [sp, #4]
   1a350:	bl	1acac <__assert_fail@plt+0x9928>
   1a354:	tst	r0, #1
   1a358:	bne	1a368 <__assert_fail@plt+0x8fe4>
   1a35c:	movw	r0, #0
   1a360:	strb	r0, [fp, #-9]
   1a364:	b	1a550 <__assert_fail@plt+0x91cc>
   1a368:	movw	r0, #41240	; 0xa118
   1a36c:	movt	r0, #4
   1a370:	ldrb	r0, [r0]
   1a374:	tst	r0, #1
   1a378:	beq	1a394 <__assert_fail@plt+0x9010>
   1a37c:	sub	r1, fp, #48	; 0x30
   1a380:	sub	r0, fp, #60	; 0x3c
   1a384:	bl	1da84 <__assert_fail@plt+0xc700>
   1a388:	sub	r0, fp, #60	; 0x3c
   1a38c:	add	r1, sp, #56	; 0x38
   1a390:	bl	12174 <__assert_fail@plt+0xdf0>
   1a394:	movw	r0, #0
   1a398:	str	r0, [sp, #48]	; 0x30
   1a39c:	ldr	r0, [sp, #48]	; 0x30
   1a3a0:	cmp	r0, #668	; 0x29c
   1a3a4:	bcs	1a508 <__assert_fail@plt+0x9184>
   1a3a8:	movw	r0, #41240	; 0xa118
   1a3ac:	movt	r0, #4
   1a3b0:	ldrb	r0, [r0]
   1a3b4:	tst	r0, #1
   1a3b8:	beq	1a464 <__assert_fail@plt+0x90e0>
   1a3bc:	movw	r0, #1
   1a3c0:	strb	r0, [fp, #-9]
   1a3c4:	movw	r0, #0
   1a3c8:	str	r0, [sp, #44]	; 0x2c
   1a3cc:	ldr	r0, [sp, #44]	; 0x2c
   1a3d0:	ldr	r1, [sp, #64]	; 0x40
   1a3d4:	cmp	r0, r1
   1a3d8:	movw	r0, #0
   1a3dc:	str	r0, [sp, #28]
   1a3e0:	bcs	1a3ec <__assert_fail@plt+0x9068>
   1a3e4:	ldrb	r0, [fp, #-9]
   1a3e8:	str	r0, [sp, #28]
   1a3ec:	ldr	r0, [sp, #28]
   1a3f0:	tst	r0, #1
   1a3f4:	beq	1a460 <__assert_fail@plt+0x90dc>
   1a3f8:	sub	r1, fp, #48	; 0x30
   1a3fc:	sub	r0, fp, #60	; 0x3c
   1a400:	ldr	r2, [sp, #56]	; 0x38
   1a404:	ldr	r3, [sp, #44]	; 0x2c
   1a408:	movw	ip, #12
   1a40c:	mul	r3, r3, ip
   1a410:	add	r2, r2, r3
   1a414:	bl	208ac <__assert_fail@plt+0xf528>
   1a418:	sub	r0, fp, #60	; 0x3c
   1a41c:	sub	r1, fp, #36	; 0x24
   1a420:	ldr	r3, [fp, #-8]
   1a424:	str	r0, [sp, #24]
   1a428:	ldr	r2, [sp, #24]
   1a42c:	bl	21e30 <__assert_fail@plt+0x10aac>
   1a430:	sub	r0, fp, #60	; 0x3c
   1a434:	movw	r1, #1
   1a438:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1a43c:	cmp	r0, #0
   1a440:	movw	r0, #0
   1a444:	movne	r0, #1
   1a448:	and	r0, r0, #1
   1a44c:	strb	r0, [fp, #-9]
   1a450:	ldr	r0, [sp, #44]	; 0x2c
   1a454:	add	r0, r0, #1
   1a458:	str	r0, [sp, #44]	; 0x2c
   1a45c:	b	1a3cc <__assert_fail@plt+0x9048>
   1a460:	b	1a47c <__assert_fail@plt+0x90f8>
   1a464:	ldr	r0, [sp, #48]	; 0x30
   1a468:	cmp	r0, #24
   1a46c:	movw	r0, #0
   1a470:	moveq	r0, #1
   1a474:	and	r0, r0, #1
   1a478:	strb	r0, [fp, #-9]
   1a47c:	ldrb	r0, [fp, #-9]
   1a480:	tst	r0, #1
   1a484:	beq	1a48c <__assert_fail@plt+0x9108>
   1a488:	b	1a530 <__assert_fail@plt+0x91ac>
   1a48c:	sub	r0, fp, #36	; 0x24
   1a490:	ldr	r1, [sp, #48]	; 0x30
   1a494:	movw	r2, #29072	; 0x7190
   1a498:	movt	r2, #3
   1a49c:	add	r1, r2, r1
   1a4a0:	ldrb	r2, [r1]
   1a4a4:	str	r0, [sp, #20]
   1a4a8:	ldr	r1, [sp, #20]
   1a4ac:	bl	1eef8 <__assert_fail@plt+0xdb74>
   1a4b0:	sub	r0, fp, #24
   1a4b4:	sub	r3, fp, #60	; 0x3c
   1a4b8:	sub	r2, fp, #36	; 0x24
   1a4bc:	sub	r1, fp, #48	; 0x30
   1a4c0:	ldr	lr, [fp, #-8]
   1a4c4:	ldr	ip, [sp, #52]	; 0x34
   1a4c8:	str	r0, [sp, #16]
   1a4cc:	mov	r0, lr
   1a4d0:	ldr	lr, [sp, #16]
   1a4d4:	str	lr, [sp]
   1a4d8:	str	ip, [sp, #4]
   1a4dc:	bl	1acac <__assert_fail@plt+0x9928>
   1a4e0:	tst	r0, #1
   1a4e4:	bne	1a4f4 <__assert_fail@plt+0x9170>
   1a4e8:	movw	r0, #0
   1a4ec:	strb	r0, [fp, #-9]
   1a4f0:	b	1a530 <__assert_fail@plt+0x91ac>
   1a4f4:	b	1a4f8 <__assert_fail@plt+0x9174>
   1a4f8:	ldr	r0, [sp, #48]	; 0x30
   1a4fc:	add	r0, r0, #1
   1a500:	str	r0, [sp, #48]	; 0x30
   1a504:	b	1a39c <__assert_fail@plt+0x9018>
   1a508:	movw	r0, #17419	; 0x440b
   1a50c:	movt	r0, #3
   1a510:	bl	11264 <gettext@plt>
   1a514:	movw	lr, #0
   1a518:	str	r0, [sp, #12]
   1a51c:	mov	r0, lr
   1a520:	mov	r1, lr
   1a524:	ldr	r2, [sp, #12]
   1a528:	bl	111ec <error@plt>
   1a52c:	bl	1136c <abort@plt>
   1a530:	movw	r0, #41240	; 0xa118
   1a534:	movt	r0, #4
   1a538:	ldrb	r0, [r0]
   1a53c:	tst	r0, #1
   1a540:	beq	1a54c <__assert_fail@plt+0x91c8>
   1a544:	add	r0, sp, #56	; 0x38
   1a548:	bl	12238 <__assert_fail@plt+0xeb4>
   1a54c:	b	1a550 <__assert_fail@plt+0x91cc>
   1a550:	sub	r0, fp, #60	; 0x3c
   1a554:	sub	r3, fp, #48	; 0x30
   1a558:	sub	r2, fp, #36	; 0x24
   1a55c:	sub	r1, fp, #24
   1a560:	movw	ip, #55276	; 0xd7ec
   1a564:	movt	ip, #1
   1a568:	str	r0, [sp, #8]
   1a56c:	mov	r0, ip
   1a570:	ldr	ip, [sp, #8]
   1a574:	str	ip, [sp]
   1a578:	movw	lr, #0
   1a57c:	str	lr, [sp, #4]
   1a580:	bl	1ac2c <__assert_fail@plt+0x98a8>
   1a584:	ldrb	r0, [fp, #-9]
   1a588:	and	r0, r0, #1
   1a58c:	strb	r0, [fp, #-1]
   1a590:	ldrb	r0, [fp, #-1]
   1a594:	and	r0, r0, #1
   1a598:	mov	sp, fp
   1a59c:	pop	{fp, pc}
   1a5a0:	cmneq	sp, r9, ror sp
   1a5a4:	push	{fp, lr}
   1a5a8:	mov	fp, sp
   1a5ac:	sub	sp, sp, #32
   1a5b0:	str	r0, [fp, #-4]
   1a5b4:	str	r1, [fp, #-8]
   1a5b8:	ldr	r0, [fp, #-4]
   1a5bc:	ldr	r0, [r0, #8]
   1a5c0:	str	r0, [fp, #-12]
   1a5c4:	ldr	r0, [fp, #-4]
   1a5c8:	ldr	r0, [r0]
   1a5cc:	str	r0, [sp, #16]
   1a5d0:	ldr	r0, [fp, #-4]
   1a5d4:	ldr	r0, [r0, #4]
   1a5d8:	str	r0, [sp, #12]
   1a5dc:	ldr	r0, [fp, #-12]
   1a5e0:	sub	r0, r0, #1
   1a5e4:	str	r0, [sp, #8]
   1a5e8:	ldr	r0, [sp, #8]
   1a5ec:	cmp	r0, #0
   1a5f0:	blt	1a634 <__assert_fail@plt+0x92b0>
   1a5f4:	ldr	r0, [sp, #16]
   1a5f8:	ldr	r1, [sp, #8]
   1a5fc:	movw	r2, #12
   1a600:	mul	r1, r1, r2
   1a604:	add	r0, r0, r1
   1a608:	ldr	r1, [fp, #-8]
   1a60c:	bl	1ebc4 <__assert_fail@plt+0xd840>
   1a610:	cmp	r0, #0
   1a614:	bgt	1a61c <__assert_fail@plt+0x9298>
   1a618:	b	1a634 <__assert_fail@plt+0x92b0>
   1a61c:	b	1a620 <__assert_fail@plt+0x929c>
   1a620:	ldr	r0, [sp, #8]
   1a624:	mvn	r1, #0
   1a628:	add	r0, r0, r1
   1a62c:	str	r0, [sp, #8]
   1a630:	b	1a5e8 <__assert_fail@plt+0x9264>
   1a634:	ldr	r0, [sp, #8]
   1a638:	cmp	r0, #0
   1a63c:	blt	1a664 <__assert_fail@plt+0x92e0>
   1a640:	ldr	r0, [sp, #16]
   1a644:	ldr	r1, [sp, #8]
   1a648:	movw	r2, #12
   1a64c:	mul	r1, r1, r2
   1a650:	add	r0, r0, r1
   1a654:	ldr	r1, [fp, #-8]
   1a658:	bl	1ebc4 <__assert_fail@plt+0xd840>
   1a65c:	cmp	r0, #0
   1a660:	beq	1a77c <__assert_fail@plt+0x93f8>
   1a664:	ldr	r0, [sp, #16]
   1a668:	ldr	r1, [fp, #-12]
   1a66c:	add	r1, r1, r1, lsl #1
   1a670:	mov	r2, #12
   1a674:	add	r1, r2, r1, lsl #2
   1a678:	bl	2c73c <__assert_fail@plt+0x1b3b8>
   1a67c:	str	r0, [sp, #16]
   1a680:	ldr	r0, [sp, #12]
   1a684:	ldr	r1, [fp, #-12]
   1a688:	add	r1, r1, #1
   1a68c:	lsl	r1, r1, #2
   1a690:	bl	2c73c <__assert_fail@plt+0x1b3b8>
   1a694:	str	r0, [sp, #12]
   1a698:	ldr	r0, [sp, #16]
   1a69c:	ldr	r1, [fp, #-12]
   1a6a0:	movw	r2, #12
   1a6a4:	mul	r1, r1, r2
   1a6a8:	add	r0, r0, r1
   1a6ac:	bl	1d714 <__assert_fail@plt+0xc390>
   1a6b0:	ldr	r0, [fp, #-12]
   1a6b4:	sub	r0, r0, #1
   1a6b8:	str	r0, [sp, #4]
   1a6bc:	ldr	r0, [sp, #4]
   1a6c0:	ldr	r1, [sp, #8]
   1a6c4:	cmp	r0, r1
   1a6c8:	ble	1a71c <__assert_fail@plt+0x9398>
   1a6cc:	ldr	r0, [sp, #16]
   1a6d0:	ldr	r1, [sp, #4]
   1a6d4:	add	r1, r1, r1, lsl #1
   1a6d8:	add	r0, r0, r1, lsl #2
   1a6dc:	add	r1, r0, #12
   1a6e0:	str	r0, [sp]
   1a6e4:	mov	r0, r1
   1a6e8:	ldr	r1, [sp]
   1a6ec:	bl	1da84 <__assert_fail@plt+0xc700>
   1a6f0:	ldr	r0, [sp, #12]
   1a6f4:	ldr	r1, [sp, #4]
   1a6f8:	ldr	lr, [r0, r1, lsl #2]
   1a6fc:	add	r1, r1, #1
   1a700:	add	r0, r0, r1, lsl #2
   1a704:	str	lr, [r0]
   1a708:	ldr	r0, [sp, #4]
   1a70c:	mvn	r1, #0
   1a710:	add	r0, r0, r1
   1a714:	str	r0, [sp, #4]
   1a718:	b	1a6bc <__assert_fail@plt+0x9338>
   1a71c:	ldr	r0, [sp, #16]
   1a720:	ldr	r1, [sp, #8]
   1a724:	add	r1, r1, r1, lsl #1
   1a728:	add	r0, r0, r1, lsl #2
   1a72c:	add	r0, r0, #12
   1a730:	ldr	r1, [fp, #-8]
   1a734:	bl	1da84 <__assert_fail@plt+0xc700>
   1a738:	ldr	r0, [sp, #12]
   1a73c:	ldr	r1, [sp, #8]
   1a740:	add	r1, r1, #1
   1a744:	add	r0, r0, r1, lsl #2
   1a748:	movw	r1, #1
   1a74c:	str	r1, [r0]
   1a750:	ldr	r0, [sp, #16]
   1a754:	ldr	r1, [fp, #-4]
   1a758:	str	r0, [r1]
   1a75c:	ldr	r0, [sp, #12]
   1a760:	ldr	r1, [fp, #-4]
   1a764:	str	r0, [r1, #4]
   1a768:	ldr	r0, [fp, #-12]
   1a76c:	add	r0, r0, #1
   1a770:	ldr	r1, [fp, #-4]
   1a774:	str	r0, [r1, #8]
   1a778:	b	1a794 <__assert_fail@plt+0x9410>
   1a77c:	ldr	r0, [sp, #12]
   1a780:	ldr	r1, [sp, #8]
   1a784:	add	r0, r0, r1, lsl #2
   1a788:	ldr	r1, [r0]
   1a78c:	add	r1, r1, #1
   1a790:	str	r1, [r0]
   1a794:	mov	sp, fp
   1a798:	pop	{fp, pc}
   1a79c:	push	{r4, r5, fp, lr}
   1a7a0:	add	fp, sp, #8
   1a7a4:	sub	sp, sp, #216	; 0xd8
   1a7a8:	str	r0, [fp, #-12]
   1a7ac:	str	r1, [fp, #-16]
   1a7b0:	str	r2, [fp, #-20]	; 0xffffffec
   1a7b4:	movw	r0, #41364	; 0xa194
   1a7b8:	movt	r0, #4
   1a7bc:	ldrb	r0, [r0]
   1a7c0:	tst	r0, #1
   1a7c4:	beq	1a7e8 <__assert_fail@plt+0x9464>
   1a7c8:	movw	r0, #41344	; 0xa180
   1a7cc:	movt	r0, #4
   1a7d0:	ldr	r0, [r0]
   1a7d4:	ldr	r2, [fp, #-16]
   1a7d8:	movw	r1, #18087	; 0x46a7
   1a7dc:	movt	r1, #3
   1a7e0:	bl	11288 <fprintf@plt>
   1a7e4:	str	r0, [sp, #100]	; 0x64
   1a7e8:	b	1a7ec <__assert_fail@plt+0x9468>
   1a7ec:	movw	r0, #55060	; 0xd714
   1a7f0:	movt	r0, #1
   1a7f4:	sub	r1, fp, #80	; 0x50
   1a7f8:	sub	r2, fp, #92	; 0x5c
   1a7fc:	mov	r3, #0
   1a800:	str	r3, [sp, #96]	; 0x60
   1a804:	bl	1ac2c <__assert_fail@plt+0x98a8>
   1a808:	sub	r0, fp, #56	; 0x38
   1a80c:	mov	r1, #2
   1a810:	str	r1, [sp, #92]	; 0x5c
   1a814:	bl	1db4c <__assert_fail@plt+0xc7c8>
   1a818:	sub	r0, fp, #32
   1a81c:	ldr	r1, [sp, #92]	; 0x5c
   1a820:	bl	1db4c <__assert_fail@plt+0xc7c8>
   1a824:	sub	r0, fp, #44	; 0x2c
   1a828:	ldr	r1, [sp, #92]	; 0x5c
   1a82c:	bl	1db4c <__assert_fail@plt+0xc7c8>
   1a830:	sub	r0, fp, #68	; 0x44
   1a834:	mov	r1, #1
   1a838:	str	r1, [sp, #88]	; 0x58
   1a83c:	bl	1db7c <__assert_fail@plt+0xc7f8>
   1a840:	ldr	r0, [sp, #96]	; 0x60
   1a844:	str	r0, [fp, #-100]	; 0xffffff9c
   1a848:	ldr	r1, [sp, #88]	; 0x58
   1a84c:	str	r1, [fp, #-104]	; 0xffffff98
   1a850:	str	r0, [sp, #116]	; 0x74
   1a854:	str	r1, [sp, #112]	; 0x70
   1a858:	ldr	r0, [fp, #-12]
   1a85c:	movw	r1, #1
   1a860:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1a864:	cmp	r0, #0
   1a868:	beq	1ab88 <__assert_fail@plt+0x9804>
   1a86c:	b	1a870 <__assert_fail@plt+0x94ec>
   1a870:	b	1a874 <__assert_fail@plt+0x94f0>
   1a874:	sub	r0, fp, #80	; 0x50
   1a878:	sub	r1, fp, #32
   1a87c:	str	r0, [sp, #84]	; 0x54
   1a880:	str	r1, [sp, #80]	; 0x50
   1a884:	ldr	r2, [sp, #80]	; 0x50
   1a888:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1a88c:	ldr	r2, [fp, #-12]
   1a890:	ldr	r0, [sp, #80]	; 0x50
   1a894:	ldr	r1, [sp, #84]	; 0x54
   1a898:	bl	20154 <__assert_fail@plt+0xedd0>
   1a89c:	ldr	r2, [fp, #-16]
   1a8a0:	ldr	r0, [sp, #80]	; 0x50
   1a8a4:	ldr	r1, [sp, #80]	; 0x50
   1a8a8:	bl	1eef8 <__assert_fail@plt+0xdb74>
   1a8ac:	sub	r1, fp, #44	; 0x2c
   1a8b0:	ldr	r0, [sp, #84]	; 0x54
   1a8b4:	ldr	r2, [sp, #80]	; 0x50
   1a8b8:	bl	1f408 <__assert_fail@plt+0xe084>
   1a8bc:	sub	r0, fp, #92	; 0x5c
   1a8c0:	sub	r1, fp, #68	; 0x44
   1a8c4:	str	r0, [sp, #76]	; 0x4c
   1a8c8:	str	r1, [sp, #72]	; 0x48
   1a8cc:	ldr	r2, [sp, #84]	; 0x54
   1a8d0:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1a8d4:	ldr	r2, [fp, #-12]
   1a8d8:	ldr	r0, [sp, #72]	; 0x48
   1a8dc:	ldr	r1, [sp, #76]	; 0x4c
   1a8e0:	bl	20154 <__assert_fail@plt+0xedd0>
   1a8e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a8e8:	and	r0, r0, #31
   1a8ec:	teq	r0, #1
   1a8f0:	bne	1a92c <__assert_fail@plt+0x95a8>
   1a8f4:	b	1a8f8 <__assert_fail@plt+0x9574>
   1a8f8:	sub	r1, fp, #68	; 0x44
   1a8fc:	sub	r0, fp, #80	; 0x50
   1a900:	ldr	r2, [fp, #-12]
   1a904:	bl	20f0c <__assert_fail@plt+0xfb88>
   1a908:	sub	r0, fp, #80	; 0x50
   1a90c:	movw	r1, #1
   1a910:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1a914:	cmp	r0, #0
   1a918:	beq	1a920 <__assert_fail@plt+0x959c>
   1a91c:	b	1aa30 <__assert_fail@plt+0x96ac>
   1a920:	sub	r1, fp, #32
   1a924:	sub	r0, fp, #56	; 0x38
   1a928:	bl	1da84 <__assert_fail@plt+0xc700>
   1a92c:	b	1a930 <__assert_fail@plt+0x95ac>
   1a930:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a934:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a938:	subs	r0, r0, #1
   1a93c:	sbc	r1, r1, #0
   1a940:	str	r0, [fp, #-104]	; 0xffffff98
   1a944:	str	r1, [fp, #-100]	; 0xffffff9c
   1a948:	orr	r0, r0, r1
   1a94c:	cmp	r0, #0
   1a950:	bne	1a874 <__assert_fail@plt+0x94f0>
   1a954:	b	1a958 <__assert_fail@plt+0x95d4>
   1a958:	sub	r0, fp, #44	; 0x2c
   1a95c:	sub	r1, fp, #32
   1a960:	bl	1da84 <__assert_fail@plt+0xc700>
   1a964:	ldr	r0, [sp, #112]	; 0x70
   1a968:	ldr	r1, [sp, #116]	; 0x74
   1a96c:	str	r1, [fp, #-100]	; 0xffffff9c
   1a970:	str	r0, [fp, #-104]	; 0xffffff98
   1a974:	ldr	r0, [sp, #112]	; 0x70
   1a978:	ldr	r1, [sp, #116]	; 0x74
   1a97c:	lsl	r1, r1, #1
   1a980:	orr	r1, r1, r0, lsr #31
   1a984:	lsl	r0, r0, #1
   1a988:	str	r0, [sp, #112]	; 0x70
   1a98c:	str	r1, [sp, #116]	; 0x74
   1a990:	mov	r0, #0
   1a994:	str	r0, [sp, #108]	; 0x6c
   1a998:	str	r0, [sp, #104]	; 0x68
   1a99c:	ldr	r0, [sp, #104]	; 0x68
   1a9a0:	ldr	r1, [sp, #108]	; 0x6c
   1a9a4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1a9a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a9ac:	subs	r0, r0, r2
   1a9b0:	sbcs	r1, r1, r3
   1a9b4:	str	r0, [sp, #68]	; 0x44
   1a9b8:	str	r1, [sp, #64]	; 0x40
   1a9bc:	bcs	1aa20 <__assert_fail@plt+0x969c>
   1a9c0:	b	1a9c4 <__assert_fail@plt+0x9640>
   1a9c4:	sub	r0, fp, #32
   1a9c8:	sub	r1, fp, #80	; 0x50
   1a9cc:	str	r0, [sp, #60]	; 0x3c
   1a9d0:	mov	r0, r1
   1a9d4:	ldr	r1, [sp, #60]	; 0x3c
   1a9d8:	ldr	r2, [sp, #60]	; 0x3c
   1a9dc:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1a9e0:	sub	r1, fp, #80	; 0x50
   1a9e4:	sub	r0, fp, #32
   1a9e8:	ldr	r2, [fp, #-12]
   1a9ec:	bl	20154 <__assert_fail@plt+0xedd0>
   1a9f0:	sub	r0, fp, #32
   1a9f4:	ldr	r2, [fp, #-16]
   1a9f8:	str	r0, [sp, #56]	; 0x38
   1a9fc:	ldr	r1, [sp, #56]	; 0x38
   1aa00:	bl	1eef8 <__assert_fail@plt+0xdb74>
   1aa04:	ldr	r0, [sp, #104]	; 0x68
   1aa08:	ldr	r1, [sp, #108]	; 0x6c
   1aa0c:	adds	r0, r0, #1
   1aa10:	adc	r1, r1, #0
   1aa14:	str	r0, [sp, #104]	; 0x68
   1aa18:	str	r1, [sp, #108]	; 0x6c
   1aa1c:	b	1a99c <__assert_fail@plt+0x9618>
   1aa20:	sub	r1, fp, #32
   1aa24:	sub	r0, fp, #56	; 0x38
   1aa28:	bl	1da84 <__assert_fail@plt+0xc700>
   1aa2c:	b	1a870 <__assert_fail@plt+0x94ec>
   1aa30:	b	1aa34 <__assert_fail@plt+0x96b0>
   1aa34:	sub	r0, fp, #56	; 0x38
   1aa38:	sub	r1, fp, #80	; 0x50
   1aa3c:	str	r0, [sp, #52]	; 0x34
   1aa40:	mov	r0, r1
   1aa44:	ldr	r1, [sp, #52]	; 0x34
   1aa48:	ldr	r2, [sp, #52]	; 0x34
   1aa4c:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1aa50:	sub	r1, fp, #80	; 0x50
   1aa54:	sub	r0, fp, #56	; 0x38
   1aa58:	ldr	r2, [fp, #-12]
   1aa5c:	bl	20154 <__assert_fail@plt+0xedd0>
   1aa60:	sub	r0, fp, #56	; 0x38
   1aa64:	ldr	r2, [fp, #-16]
   1aa68:	str	r0, [sp, #48]	; 0x30
   1aa6c:	ldr	r1, [sp, #48]	; 0x30
   1aa70:	bl	1eef8 <__assert_fail@plt+0xdb74>
   1aa74:	sub	r2, fp, #56	; 0x38
   1aa78:	sub	r1, fp, #44	; 0x2c
   1aa7c:	sub	r0, fp, #80	; 0x50
   1aa80:	bl	1f408 <__assert_fail@plt+0xe084>
   1aa84:	sub	r0, fp, #80	; 0x50
   1aa88:	ldr	r2, [fp, #-12]
   1aa8c:	str	r0, [sp, #44]	; 0x2c
   1aa90:	ldr	r1, [sp, #44]	; 0x2c
   1aa94:	bl	20f0c <__assert_fail@plt+0xfb88>
   1aa98:	sub	r0, fp, #80	; 0x50
   1aa9c:	movw	r1, #1
   1aaa0:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1aaa4:	cmp	r0, #0
   1aaa8:	beq	1aa34 <__assert_fail@plt+0x96b0>
   1aaac:	sub	r2, fp, #80	; 0x50
   1aab0:	ldr	r0, [fp, #-12]
   1aab4:	ldr	r1, [fp, #-12]
   1aab8:	bl	208ac <__assert_fail@plt+0xf528>
   1aabc:	sub	r0, fp, #80	; 0x50
   1aac0:	bl	1a250 <__assert_fail@plt+0x8ecc>
   1aac4:	tst	r0, #1
   1aac8:	bne	1ab1c <__assert_fail@plt+0x9798>
   1aacc:	b	1aad0 <__assert_fail@plt+0x974c>
   1aad0:	movw	r0, #41364	; 0xa194
   1aad4:	movt	r0, #4
   1aad8:	ldrb	r0, [r0]
   1aadc:	tst	r0, #1
   1aae0:	beq	1ab00 <__assert_fail@plt+0x977c>
   1aae4:	movw	r0, #41344	; 0xa180
   1aae8:	movt	r0, #4
   1aaec:	ldr	r0, [r0]
   1aaf0:	movw	r1, #18108	; 0x46bc
   1aaf4:	movt	r1, #3
   1aaf8:	bl	11288 <fprintf@plt>
   1aafc:	str	r0, [sp, #40]	; 0x28
   1ab00:	b	1ab04 <__assert_fail@plt+0x9780>
   1ab04:	sub	r0, fp, #80	; 0x50
   1ab08:	ldr	r1, [fp, #-16]
   1ab0c:	add	r1, r1, #1
   1ab10:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ab14:	bl	1a79c <__assert_fail@plt+0x9418>
   1ab18:	b	1ab28 <__assert_fail@plt+0x97a4>
   1ab1c:	sub	r1, fp, #80	; 0x50
   1ab20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab24:	bl	1a5a4 <__assert_fail@plt+0x9220>
   1ab28:	ldr	r0, [fp, #-12]
   1ab2c:	bl	1a250 <__assert_fail@plt+0x8ecc>
   1ab30:	tst	r0, #1
   1ab34:	beq	1ab48 <__assert_fail@plt+0x97c4>
   1ab38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab3c:	ldr	r1, [fp, #-12]
   1ab40:	bl	1a5a4 <__assert_fail@plt+0x9220>
   1ab44:	b	1ab88 <__assert_fail@plt+0x9804>
   1ab48:	sub	r0, fp, #32
   1ab4c:	ldr	r2, [fp, #-12]
   1ab50:	str	r0, [sp, #36]	; 0x24
   1ab54:	ldr	r1, [sp, #36]	; 0x24
   1ab58:	bl	20154 <__assert_fail@plt+0xedd0>
   1ab5c:	sub	r0, fp, #44	; 0x2c
   1ab60:	ldr	r2, [fp, #-12]
   1ab64:	str	r0, [sp, #32]
   1ab68:	ldr	r1, [sp, #32]
   1ab6c:	bl	20154 <__assert_fail@plt+0xedd0>
   1ab70:	sub	r0, fp, #56	; 0x38
   1ab74:	ldr	r2, [fp, #-12]
   1ab78:	str	r0, [sp, #28]
   1ab7c:	ldr	r1, [sp, #28]
   1ab80:	bl	20154 <__assert_fail@plt+0xedd0>
   1ab84:	b	1a858 <__assert_fail@plt+0x94d4>
   1ab88:	sub	r0, fp, #56	; 0x38
   1ab8c:	sub	r1, fp, #32
   1ab90:	sub	r2, fp, #44	; 0x2c
   1ab94:	sub	r3, fp, #80	; 0x50
   1ab98:	sub	ip, fp, #92	; 0x5c
   1ab9c:	sub	lr, fp, #68	; 0x44
   1aba0:	movw	r4, #55276	; 0xd7ec
   1aba4:	movt	r4, #1
   1aba8:	str	r0, [sp, #24]
   1abac:	mov	r0, r4
   1abb0:	str	r1, [sp, #20]
   1abb4:	mov	r1, lr
   1abb8:	str	r2, [sp, #16]
   1abbc:	mov	r2, ip
   1abc0:	ldr	ip, [sp, #16]
   1abc4:	str	ip, [sp]
   1abc8:	ldr	lr, [sp, #20]
   1abcc:	str	lr, [sp, #4]
   1abd0:	ldr	r4, [sp, #24]
   1abd4:	str	r4, [sp, #8]
   1abd8:	movw	r5, #0
   1abdc:	str	r5, [sp, #12]
   1abe0:	bl	1ac2c <__assert_fail@plt+0x98a8>
   1abe4:	sub	sp, fp, #8
   1abe8:	pop	{r4, r5, fp, pc}
   1abec:	push	{fp, lr}
   1abf0:	mov	fp, sp
   1abf4:	sub	sp, sp, #24
   1abf8:	add	r2, sp, #4
   1abfc:	str	r0, [fp, #-4]
   1ac00:	str	r1, [fp, #-8]
   1ac04:	ldr	r1, [fp, #-8]
   1ac08:	mov	r0, r2
   1ac0c:	bl	1db7c <__assert_fail@plt+0xc7f8>
   1ac10:	add	r1, sp, #4
   1ac14:	ldr	r0, [fp, #-4]
   1ac18:	bl	1a5a4 <__assert_fail@plt+0x9220>
   1ac1c:	add	r0, sp, #4
   1ac20:	bl	1d7ec <__assert_fail@plt+0xc468>
   1ac24:	mov	sp, fp
   1ac28:	pop	{fp, pc}
   1ac2c:	sub	sp, sp, #12
   1ac30:	push	{fp, lr}
   1ac34:	mov	fp, sp
   1ac38:	sub	sp, sp, #20
   1ac3c:	str	r3, [fp, #16]
   1ac40:	str	r2, [fp, #12]
   1ac44:	str	r1, [fp, #8]
   1ac48:	str	r0, [fp, #-4]
   1ac4c:	sub	r0, fp, #8
   1ac50:	add	r1, fp, #8
   1ac54:	str	r1, [r0]
   1ac58:	ldr	r0, [fp, #-8]
   1ac5c:	add	r1, r0, #4
   1ac60:	str	r1, [fp, #-8]
   1ac64:	ldr	r0, [r0]
   1ac68:	str	r0, [sp, #8]
   1ac6c:	movw	r1, #0
   1ac70:	cmp	r0, r1
   1ac74:	beq	1ac94 <__assert_fail@plt+0x9910>
   1ac78:	ldr	r0, [fp, #-4]
   1ac7c:	ldr	r1, [sp, #8]
   1ac80:	str	r0, [sp, #4]
   1ac84:	mov	r0, r1
   1ac88:	ldr	r1, [sp, #4]
   1ac8c:	blx	r1
   1ac90:	b	1ac58 <__assert_fail@plt+0x98d4>
   1ac94:	sub	r0, fp, #8
   1ac98:	str	r0, [sp]
   1ac9c:	mov	sp, fp
   1aca0:	pop	{fp, lr}
   1aca4:	add	sp, sp, #12
   1aca8:	bx	lr
   1acac:	push	{fp, lr}
   1acb0:	mov	fp, sp
   1acb4:	sub	sp, sp, #32
   1acb8:	ldr	ip, [fp, #12]
   1acbc:	ldr	lr, [fp, #8]
   1acc0:	str	r0, [fp, #-8]
   1acc4:	str	r1, [fp, #-12]
   1acc8:	str	r2, [sp, #16]
   1accc:	str	r3, [sp, #12]
   1acd0:	ldr	r0, [sp, #12]
   1acd4:	ldr	r1, [sp, #16]
   1acd8:	ldr	r2, [fp, #8]
   1acdc:	ldr	r3, [fp, #-8]
   1ace0:	str	lr, [sp, #4]
   1ace4:	str	ip, [sp]
   1ace8:	bl	21e30 <__assert_fail@plt+0x10aac>
   1acec:	ldr	r0, [sp, #12]
   1acf0:	movw	r1, #1
   1acf4:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1acf8:	cmp	r0, #0
   1acfc:	beq	1ad14 <__assert_fail@plt+0x9990>
   1ad00:	ldr	r0, [sp, #12]
   1ad04:	ldr	r1, [fp, #-12]
   1ad08:	bl	1ebc4 <__assert_fail@plt+0xd840>
   1ad0c:	cmp	r0, #0
   1ad10:	bne	1ad24 <__assert_fail@plt+0x99a0>
   1ad14:	movw	r0, #1
   1ad18:	and	r0, r0, #1
   1ad1c:	strb	r0, [fp, #-1]
   1ad20:	b	1adb8 <__assert_fail@plt+0x9a34>
   1ad24:	movw	r0, #1
   1ad28:	str	r0, [sp, #8]
   1ad2c:	ldr	r0, [sp, #8]
   1ad30:	ldr	r1, [fp, #12]
   1ad34:	cmp	r0, r1
   1ad38:	bcs	1adac <__assert_fail@plt+0x9a28>
   1ad3c:	ldr	r0, [sp, #12]
   1ad40:	ldr	r1, [sp, #12]
   1ad44:	ldr	r3, [fp, #-8]
   1ad48:	movw	r2, #2
   1ad4c:	bl	22750 <__assert_fail@plt+0x113cc>
   1ad50:	ldr	r0, [sp, #12]
   1ad54:	ldr	r1, [fp, #-12]
   1ad58:	bl	1ebc4 <__assert_fail@plt+0xd840>
   1ad5c:	cmp	r0, #0
   1ad60:	bne	1ad74 <__assert_fail@plt+0x99f0>
   1ad64:	movw	r0, #1
   1ad68:	and	r0, r0, #1
   1ad6c:	strb	r0, [fp, #-1]
   1ad70:	b	1adb8 <__assert_fail@plt+0x9a34>
   1ad74:	ldr	r0, [sp, #12]
   1ad78:	movw	r1, #1
   1ad7c:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1ad80:	cmp	r0, #0
   1ad84:	bne	1ad98 <__assert_fail@plt+0x9a14>
   1ad88:	movw	r0, #0
   1ad8c:	and	r0, r0, #1
   1ad90:	strb	r0, [fp, #-1]
   1ad94:	b	1adb8 <__assert_fail@plt+0x9a34>
   1ad98:	b	1ad9c <__assert_fail@plt+0x9a18>
   1ad9c:	ldr	r0, [sp, #8]
   1ada0:	add	r0, r0, #1
   1ada4:	str	r0, [sp, #8]
   1ada8:	b	1ad2c <__assert_fail@plt+0x99a8>
   1adac:	movw	r0, #0
   1adb0:	and	r0, r0, #1
   1adb4:	strb	r0, [fp, #-1]
   1adb8:	ldrb	r0, [fp, #-1]
   1adbc:	and	r0, r0, #1
   1adc0:	mov	sp, fp
   1adc4:	pop	{fp, pc}
   1adc8:	sub	sp, sp, #4
   1adcc:	str	r0, [sp]
   1add0:	ldr	r0, [sp]
   1add4:	movw	r1, #41376	; 0xa1a0
   1add8:	movt	r1, #4
   1addc:	str	r0, [r1]
   1ade0:	add	sp, sp, #4
   1ade4:	bx	lr
   1ade8:	sub	sp, sp, #4
   1adec:	and	r0, r0, #1
   1adf0:	strb	r0, [sp, #3]
   1adf4:	ldrb	r0, [sp, #3]
   1adf8:	and	r0, r0, #1
   1adfc:	movw	r1, #41380	; 0xa1a4
   1ae00:	movt	r1, #4
   1ae04:	strb	r0, [r1]
   1ae08:	add	sp, sp, #4
   1ae0c:	bx	lr
   1ae10:	push	{fp, lr}
   1ae14:	mov	fp, sp
   1ae18:	sub	sp, sp, #24
   1ae1c:	movw	r0, #41356	; 0xa18c
   1ae20:	movt	r0, #4
   1ae24:	ldr	r0, [r0]
   1ae28:	bl	2f858 <__assert_fail@plt+0x1e4d4>
   1ae2c:	cmp	r0, #0
   1ae30:	beq	1af00 <__assert_fail@plt+0x9b7c>
   1ae34:	movw	r0, #41380	; 0xa1a4
   1ae38:	movt	r0, #4
   1ae3c:	ldrb	r0, [r0]
   1ae40:	tst	r0, #1
   1ae44:	beq	1ae58 <__assert_fail@plt+0x9ad4>
   1ae48:	bl	11294 <__errno_location@plt>
   1ae4c:	ldr	r0, [r0]
   1ae50:	cmp	r0, #32
   1ae54:	beq	1af00 <__assert_fail@plt+0x9b7c>
   1ae58:	movw	r0, #17196	; 0x432c
   1ae5c:	movt	r0, #3
   1ae60:	bl	11264 <gettext@plt>
   1ae64:	str	r0, [fp, #-4]
   1ae68:	movw	r0, #41376	; 0xa1a0
   1ae6c:	movt	r0, #4
   1ae70:	ldr	r0, [r0]
   1ae74:	movw	lr, #0
   1ae78:	cmp	r0, lr
   1ae7c:	beq	1aed4 <__assert_fail@plt+0x9b50>
   1ae80:	bl	11294 <__errno_location@plt>
   1ae84:	ldr	r1, [r0]
   1ae88:	movw	r0, #41376	; 0xa1a0
   1ae8c:	movt	r0, #4
   1ae90:	ldr	r0, [r0]
   1ae94:	str	r1, [fp, #-8]
   1ae98:	bl	2aff8 <__assert_fail@plt+0x19c74>
   1ae9c:	ldr	r1, [fp, #-4]
   1aea0:	movw	lr, #0
   1aea4:	str	r0, [sp, #12]
   1aea8:	mov	r0, lr
   1aeac:	ldr	lr, [fp, #-8]
   1aeb0:	str	r1, [sp, #8]
   1aeb4:	mov	r1, lr
   1aeb8:	movw	r2, #30565	; 0x7765
   1aebc:	movt	r2, #3
   1aec0:	ldr	r3, [sp, #12]
   1aec4:	ldr	ip, [sp, #8]
   1aec8:	str	ip, [sp]
   1aecc:	bl	111ec <error@plt>
   1aed0:	b	1aef0 <__assert_fail@plt+0x9b6c>
   1aed4:	bl	11294 <__errno_location@plt>
   1aed8:	ldr	r1, [r0]
   1aedc:	ldr	r3, [fp, #-4]
   1aee0:	movw	r0, #0
   1aee4:	movw	r2, #30569	; 0x7769
   1aee8:	movt	r2, #3
   1aeec:	bl	111ec <error@plt>
   1aef0:	movw	r0, #41248	; 0xa120
   1aef4:	movt	r0, #4
   1aef8:	ldr	r0, [r0]
   1aefc:	bl	11120 <_exit@plt>
   1af00:	movw	r0, #41344	; 0xa180
   1af04:	movt	r0, #4
   1af08:	ldr	r0, [r0]
   1af0c:	bl	2f858 <__assert_fail@plt+0x1e4d4>
   1af10:	cmp	r0, #0
   1af14:	beq	1af28 <__assert_fail@plt+0x9ba4>
   1af18:	movw	r0, #41248	; 0xa120
   1af1c:	movt	r0, #4
   1af20:	ldr	r0, [r0]
   1af24:	bl	11120 <_exit@plt>
   1af28:	mov	sp, fp
   1af2c:	pop	{fp, pc}
   1af30:	push	{fp, lr}
   1af34:	mov	fp, sp
   1af38:	sub	sp, sp, #16
   1af3c:	str	r0, [fp, #-4]
   1af40:	bl	11294 <__errno_location@plt>
   1af44:	ldr	r0, [r0]
   1af48:	str	r0, [sp, #8]
   1af4c:	ldr	r0, [fp, #-4]
   1af50:	bl	11114 <free@plt>
   1af54:	ldr	r0, [sp, #8]
   1af58:	str	r0, [sp, #4]
   1af5c:	bl	11294 <__errno_location@plt>
   1af60:	ldr	lr, [sp, #4]
   1af64:	str	lr, [r0]
   1af68:	mov	sp, fp
   1af6c:	pop	{fp, pc}
   1af70:	push	{fp, lr}
   1af74:	mov	fp, sp
   1af78:	sub	sp, sp, #24
   1af7c:	str	r0, [fp, #-4]
   1af80:	str	r1, [fp, #-8]
   1af84:	str	r2, [sp, #12]
   1af88:	movw	r0, #0
   1af8c:	str	r0, [sp, #8]
   1af90:	ldr	r0, [fp, #-8]
   1af94:	str	r0, [sp, #4]
   1af98:	ldr	r0, [sp, #12]
   1af9c:	cmp	r0, #0
   1afa0:	bls	1b018 <__assert_fail@plt+0x9c94>
   1afa4:	ldr	r0, [fp, #-4]
   1afa8:	ldr	r1, [sp, #4]
   1afac:	ldr	r2, [sp, #12]
   1afb0:	bl	2b83c <__assert_fail@plt+0x1a4b8>
   1afb4:	str	r0, [sp]
   1afb8:	ldr	r0, [sp]
   1afbc:	cmn	r0, #1
   1afc0:	bne	1afc8 <__assert_fail@plt+0x9c44>
   1afc4:	b	1b018 <__assert_fail@plt+0x9c94>
   1afc8:	ldr	r0, [sp]
   1afcc:	cmp	r0, #0
   1afd0:	bne	1afe4 <__assert_fail@plt+0x9c60>
   1afd4:	bl	11294 <__errno_location@plt>
   1afd8:	movw	lr, #28
   1afdc:	str	lr, [r0]
   1afe0:	b	1b018 <__assert_fail@plt+0x9c94>
   1afe4:	ldr	r0, [sp]
   1afe8:	ldr	r1, [sp, #8]
   1afec:	add	r0, r1, r0
   1aff0:	str	r0, [sp, #8]
   1aff4:	ldr	r0, [sp]
   1aff8:	ldr	r1, [sp, #4]
   1affc:	add	r0, r1, r0
   1b000:	str	r0, [sp, #4]
   1b004:	ldr	r0, [sp]
   1b008:	ldr	r1, [sp, #12]
   1b00c:	sub	r0, r1, r0
   1b010:	str	r0, [sp, #12]
   1b014:	b	1af98 <__assert_fail@plt+0x9c14>
   1b018:	ldr	r0, [sp, #8]
   1b01c:	mov	sp, fp
   1b020:	pop	{fp, pc}
   1b024:	push	{fp, lr}
   1b028:	mov	fp, sp
   1b02c:	sub	sp, sp, #32
   1b030:	str	r0, [fp, #-8]
   1b034:	str	r1, [fp, #-4]
   1b038:	str	r2, [fp, #-12]
   1b03c:	ldr	r0, [fp, #-12]
   1b040:	add	r0, r0, #20
   1b044:	str	r0, [sp, #16]
   1b048:	ldr	r0, [sp, #16]
   1b04c:	mov	r1, #0
   1b050:	strb	r1, [r0]
   1b054:	mov	r0, #1
   1b058:	cmp	r0, #0
   1b05c:	bne	1b0ec <__assert_fail@plt+0x9d68>
   1b060:	b	1b064 <__assert_fail@plt+0x9ce0>
   1b064:	b	1b068 <__assert_fail@plt+0x9ce4>
   1b068:	ldr	r0, [fp, #-8]
   1b06c:	ldr	r1, [fp, #-4]
   1b070:	mov	r2, #10
   1b074:	mov	r3, #0
   1b078:	bl	33e44 <__assert_fail@plt+0x22ac0>
   1b07c:	rsb	r2, r2, #48	; 0x30
   1b080:	ldr	r3, [sp, #16]
   1b084:	mvn	lr, #0
   1b088:	add	ip, r3, lr
   1b08c:	str	ip, [sp, #16]
   1b090:	add	r3, r3, lr
   1b094:	strb	r2, [r3]
   1b098:	str	r0, [sp, #12]
   1b09c:	str	r1, [sp, #8]
   1b0a0:	ldr	r0, [fp, #-8]
   1b0a4:	ldr	r1, [fp, #-4]
   1b0a8:	mov	r2, #10
   1b0ac:	mov	r3, #0
   1b0b0:	bl	33e44 <__assert_fail@plt+0x22ac0>
   1b0b4:	str	r1, [fp, #-4]
   1b0b8:	str	r0, [fp, #-8]
   1b0bc:	orr	r0, r0, r1
   1b0c0:	cmp	r0, #0
   1b0c4:	bne	1b068 <__assert_fail@plt+0x9ce4>
   1b0c8:	b	1b0cc <__assert_fail@plt+0x9d48>
   1b0cc:	ldr	r0, [sp, #16]
   1b0d0:	mvn	r1, #0
   1b0d4:	add	r2, r0, r1
   1b0d8:	str	r2, [sp, #16]
   1b0dc:	add	r0, r0, r1
   1b0e0:	movw	r1, #45	; 0x2d
   1b0e4:	strb	r1, [r0]
   1b0e8:	b	1b158 <__assert_fail@plt+0x9dd4>
   1b0ec:	b	1b0f0 <__assert_fail@plt+0x9d6c>
   1b0f0:	ldr	r0, [fp, #-8]
   1b0f4:	ldr	r1, [fp, #-4]
   1b0f8:	mov	r2, #10
   1b0fc:	mov	r3, #0
   1b100:	bl	33e44 <__assert_fail@plt+0x22ac0>
   1b104:	orr	r2, r2, #48	; 0x30
   1b108:	ldr	r3, [sp, #16]
   1b10c:	mvn	lr, #0
   1b110:	add	ip, r3, lr
   1b114:	str	ip, [sp, #16]
   1b118:	add	r3, r3, lr
   1b11c:	strb	r2, [r3]
   1b120:	str	r0, [sp, #4]
   1b124:	str	r1, [sp]
   1b128:	ldr	r0, [fp, #-8]
   1b12c:	ldr	r1, [fp, #-4]
   1b130:	mov	r2, #10
   1b134:	mov	r3, #0
   1b138:	bl	33e44 <__assert_fail@plt+0x22ac0>
   1b13c:	str	r1, [fp, #-4]
   1b140:	str	r0, [fp, #-8]
   1b144:	orr	r0, r0, r1
   1b148:	cmp	r0, #0
   1b14c:	bne	1b0f0 <__assert_fail@plt+0x9d6c>
   1b150:	b	1b154 <__assert_fail@plt+0x9dd0>
   1b154:	b	1b158 <__assert_fail@plt+0x9dd4>
   1b158:	ldr	r0, [sp, #16]
   1b15c:	mov	sp, fp
   1b160:	pop	{fp, pc}
   1b164:	andeq	r0, r0, r0
   1b168:	sub	sp, sp, #12
   1b16c:	str	r0, [sp, #8]
   1b170:	str	r1, [sp, #4]
   1b174:	str	r2, [sp]
   1b178:	ldr	r0, [sp, #8]
   1b17c:	movw	r1, #0
   1b180:	cmp	r0, r1
   1b184:	beq	1b19c <__assert_fail@plt+0x9e18>
   1b188:	movw	r0, #41252	; 0xa124
   1b18c:	movt	r0, #4
   1b190:	ldr	r0, [r0]
   1b194:	ldr	r1, [sp, #8]
   1b198:	str	r0, [r1]
   1b19c:	ldr	r0, [sp, #4]
   1b1a0:	movw	r1, #0
   1b1a4:	cmp	r0, r1
   1b1a8:	beq	1b1c0 <__assert_fail@plt+0x9e3c>
   1b1ac:	movw	r0, #41256	; 0xa128
   1b1b0:	movt	r0, #4
   1b1b4:	ldr	r0, [r0]
   1b1b8:	ldr	r1, [sp, #4]
   1b1bc:	str	r0, [r1]
   1b1c0:	ldr	r0, [sp]
   1b1c4:	movw	r1, #0
   1b1c8:	cmp	r0, r1
   1b1cc:	beq	1b1e4 <__assert_fail@plt+0x9e60>
   1b1d0:	movw	r0, #41260	; 0xa12c
   1b1d4:	movt	r0, #4
   1b1d8:	ldr	r0, [r0]
   1b1dc:	ldr	r1, [sp]
   1b1e0:	str	r0, [r1]
   1b1e4:	add	sp, sp, #12
   1b1e8:	bx	lr
   1b1ec:	sub	sp, sp, #12
   1b1f0:	str	r0, [sp, #8]
   1b1f4:	str	r1, [sp, #4]
   1b1f8:	str	r2, [sp]
   1b1fc:	ldr	r0, [sp, #8]
   1b200:	movw	r1, #0
   1b204:	cmp	r0, r1
   1b208:	bne	1b218 <__assert_fail@plt+0x9e94>
   1b20c:	movw	r0, #45704	; 0xb288
   1b210:	movt	r0, #1
   1b214:	str	r0, [sp, #8]
   1b218:	ldr	r0, [sp, #4]
   1b21c:	movw	r1, #0
   1b220:	cmp	r0, r1
   1b224:	bne	1b234 <__assert_fail@plt+0x9eb0>
   1b228:	movw	r0, #45820	; 0xb2fc
   1b22c:	movt	r0, #1
   1b230:	str	r0, [sp, #4]
   1b234:	ldr	r0, [sp]
   1b238:	movw	r1, #0
   1b23c:	cmp	r0, r1
   1b240:	bne	1b250 <__assert_fail@plt+0x9ecc>
   1b244:	movw	r0, #45900	; 0xb34c
   1b248:	movt	r0, #1
   1b24c:	str	r0, [sp]
   1b250:	ldr	r0, [sp, #8]
   1b254:	movw	r1, #41252	; 0xa124
   1b258:	movt	r1, #4
   1b25c:	str	r0, [r1]
   1b260:	ldr	r0, [sp, #4]
   1b264:	movw	r1, #41256	; 0xa128
   1b268:	movt	r1, #4
   1b26c:	str	r0, [r1]
   1b270:	ldr	r0, [sp]
   1b274:	movw	r1, #41260	; 0xa12c
   1b278:	movt	r1, #4
   1b27c:	str	r0, [r1]
   1b280:	add	sp, sp, #12
   1b284:	bx	lr
   1b288:	push	{fp, lr}
   1b28c:	mov	fp, sp
   1b290:	sub	sp, sp, #8
   1b294:	str	r0, [sp, #4]
   1b298:	ldr	r0, [sp, #4]
   1b29c:	cmp	r0, #0
   1b2a0:	bls	1b2a8 <__assert_fail@plt+0x9f24>
   1b2a4:	b	1b2c8 <__assert_fail@plt+0x9f44>
   1b2a8:	movw	r0, #34148	; 0x8564
   1b2ac:	movt	r0, #3
   1b2b0:	movw	r1, #30584	; 0x7778
   1b2b4:	movt	r1, #3
   1b2b8:	movw	r2, #291	; 0x123
   1b2bc:	movw	r3, #33278	; 0x81fe
   1b2c0:	movt	r3, #3
   1b2c4:	bl	11384 <__assert_fail@plt>
   1b2c8:	ldr	r0, [sp, #4]
   1b2cc:	bl	2f68c <__assert_fail@plt+0x1e308>
   1b2d0:	str	r0, [sp]
   1b2d4:	ldr	r0, [sp]
   1b2d8:	movw	lr, #0
   1b2dc:	cmp	r0, lr
   1b2e0:	bne	1b2f0 <__assert_fail@plt+0x9f6c>
   1b2e4:	movw	r0, #33310	; 0x821e
   1b2e8:	movt	r0, #3
   1b2ec:	bl	2226c <__assert_fail@plt+0x10ee8>
   1b2f0:	ldr	r0, [sp]
   1b2f4:	mov	sp, fp
   1b2f8:	pop	{fp, pc}
   1b2fc:	push	{fp, lr}
   1b300:	mov	fp, sp
   1b304:	sub	sp, sp, #16
   1b308:	str	r0, [fp, #-4]
   1b30c:	str	r1, [sp, #8]
   1b310:	str	r2, [sp, #4]
   1b314:	ldr	r0, [fp, #-4]
   1b318:	ldr	r1, [sp, #4]
   1b31c:	bl	2f6fc <__assert_fail@plt+0x1e378>
   1b320:	str	r0, [sp]
   1b324:	ldr	r0, [sp]
   1b328:	movw	r1, #0
   1b32c:	cmp	r0, r1
   1b330:	bne	1b340 <__assert_fail@plt+0x9fbc>
   1b334:	movw	r0, #33355	; 0x824b
   1b338:	movt	r0, #3
   1b33c:	bl	2226c <__assert_fail@plt+0x10ee8>
   1b340:	ldr	r0, [sp]
   1b344:	mov	sp, fp
   1b348:	pop	{fp, pc}
   1b34c:	push	{fp, lr}
   1b350:	mov	fp, sp
   1b354:	sub	sp, sp, #8
   1b358:	str	r0, [sp, #4]
   1b35c:	str	r1, [sp]
   1b360:	ldr	r0, [sp, #4]
   1b364:	bl	1af30 <__assert_fail@plt+0x9bac>
   1b368:	mov	sp, fp
   1b36c:	pop	{fp, pc}
   1b370:	sub	sp, sp, #16
   1b374:	str	r0, [sp, #12]
   1b378:	str	r1, [sp, #8]
   1b37c:	str	r2, [sp, #4]
   1b380:	movw	r0, #0
   1b384:	str	r0, [sp]
   1b388:	ldr	r0, [sp]
   1b38c:	ldr	r1, [sp, #4]
   1b390:	cmp	r0, r1
   1b394:	bge	1b3c0 <__assert_fail@plt+0xa03c>
   1b398:	ldr	r0, [sp, #8]
   1b39c:	ldr	r1, [sp]
   1b3a0:	ldr	r0, [r0, r1, lsl #2]
   1b3a4:	ldr	r2, [sp, #12]
   1b3a8:	add	r1, r2, r1, lsl #2
   1b3ac:	str	r0, [r1]
   1b3b0:	ldr	r0, [sp]
   1b3b4:	add	r0, r0, #1
   1b3b8:	str	r0, [sp]
   1b3bc:	b	1b388 <__assert_fail@plt+0xa004>
   1b3c0:	add	sp, sp, #16
   1b3c4:	bx	lr
   1b3c8:	sub	sp, sp, #12
   1b3cc:	str	r0, [sp, #8]
   1b3d0:	str	r1, [sp, #4]
   1b3d4:	str	r2, [sp]
   1b3d8:	ldr	r0, [sp]
   1b3dc:	mvn	r1, #0
   1b3e0:	add	r0, r0, r1
   1b3e4:	str	r0, [sp]
   1b3e8:	cmp	r0, #0
   1b3ec:	blt	1b40c <__assert_fail@plt+0xa088>
   1b3f0:	ldr	r0, [sp, #4]
   1b3f4:	ldr	r1, [sp]
   1b3f8:	ldr	r0, [r0, r1, lsl #2]
   1b3fc:	ldr	r2, [sp, #8]
   1b400:	add	r1, r2, r1, lsl #2
   1b404:	str	r0, [r1]
   1b408:	b	1b3d8 <__assert_fail@plt+0xa054>
   1b40c:	add	sp, sp, #12
   1b410:	bx	lr
   1b414:	sub	sp, sp, #16
   1b418:	str	r0, [sp, #8]
   1b41c:	str	r1, [sp, #4]
   1b420:	str	r2, [sp]
   1b424:	ldr	r0, [sp]
   1b428:	mvn	r1, #0
   1b42c:	add	r0, r0, r1
   1b430:	str	r0, [sp]
   1b434:	cmp	r0, #0
   1b438:	blt	1b498 <__assert_fail@plt+0xa114>
   1b43c:	ldr	r0, [sp, #8]
   1b440:	ldr	r1, [sp]
   1b444:	ldr	r0, [r0, r1, lsl #2]
   1b448:	ldr	r2, [sp, #4]
   1b44c:	add	r1, r2, r1, lsl #2
   1b450:	ldr	r1, [r1]
   1b454:	cmp	r0, r1
   1b458:	beq	1b494 <__assert_fail@plt+0xa110>
   1b45c:	ldr	r0, [sp, #8]
   1b460:	ldr	r1, [sp]
   1b464:	ldr	r0, [r0, r1, lsl #2]
   1b468:	ldr	r2, [sp, #4]
   1b46c:	add	r1, r2, r1, lsl #2
   1b470:	ldr	r1, [r1]
   1b474:	cmp	r0, r1
   1b478:	movw	r0, #0
   1b47c:	movhi	r0, #1
   1b480:	tst	r0, #1
   1b484:	movw	r0, #1
   1b488:	mvneq	r0, #0
   1b48c:	str	r0, [sp, #12]
   1b490:	b	1b4a0 <__assert_fail@plt+0xa11c>
   1b494:	b	1b424 <__assert_fail@plt+0xa0a0>
   1b498:	movw	r0, #0
   1b49c:	str	r0, [sp, #12]
   1b4a0:	ldr	r0, [sp, #12]
   1b4a4:	add	sp, sp, #16
   1b4a8:	bx	lr
   1b4ac:	push	{fp, lr}
   1b4b0:	mov	fp, sp
   1b4b4:	sub	sp, sp, #8
   1b4b8:	str	r0, [sp, #4]
   1b4bc:	str	r1, [sp]
   1b4c0:	ldr	r0, [sp, #4]
   1b4c4:	ldr	r1, [sp]
   1b4c8:	bl	1b4e4 <__assert_fail@plt+0xa160>
   1b4cc:	cmp	r0, #0
   1b4d0:	movw	r0, #0
   1b4d4:	moveq	r0, #1
   1b4d8:	and	r0, r0, #1
   1b4dc:	mov	sp, fp
   1b4e0:	pop	{fp, pc}
   1b4e4:	sub	sp, sp, #12
   1b4e8:	str	r0, [sp, #8]
   1b4ec:	str	r1, [sp, #4]
   1b4f0:	ldr	r0, [sp, #4]
   1b4f4:	cmp	r0, #0
   1b4f8:	movw	r0, #0
   1b4fc:	str	r0, [sp]
   1b500:	ble	1b528 <__assert_fail@plt+0xa1a4>
   1b504:	ldr	r0, [sp, #8]
   1b508:	ldr	r1, [sp, #4]
   1b50c:	sub	r1, r1, #1
   1b510:	add	r0, r0, r1, lsl #2
   1b514:	ldr	r0, [r0]
   1b518:	cmp	r0, #0
   1b51c:	movw	r0, #0
   1b520:	moveq	r0, #1
   1b524:	str	r0, [sp]
   1b528:	ldr	r0, [sp]
   1b52c:	tst	r0, #1
   1b530:	beq	1b548 <__assert_fail@plt+0xa1c4>
   1b534:	ldr	r0, [sp, #4]
   1b538:	mvn	r1, #0
   1b53c:	add	r0, r0, r1
   1b540:	str	r0, [sp, #4]
   1b544:	b	1b4f0 <__assert_fail@plt+0xa16c>
   1b548:	ldr	r0, [sp, #4]
   1b54c:	add	sp, sp, #12
   1b550:	bx	lr
   1b554:	sub	sp, sp, #8
   1b558:	str	r0, [sp, #4]
   1b55c:	str	r1, [sp]
   1b560:	ldr	r0, [sp]
   1b564:	mvn	r1, #0
   1b568:	add	r0, r0, r1
   1b56c:	str	r0, [sp]
   1b570:	cmp	r0, #0
   1b574:	blt	1b590 <__assert_fail@plt+0xa20c>
   1b578:	ldr	r0, [sp, #4]
   1b57c:	ldr	r1, [sp]
   1b580:	add	r0, r0, r1, lsl #2
   1b584:	movw	r1, #0
   1b588:	str	r1, [r0]
   1b58c:	b	1b560 <__assert_fail@plt+0xa1dc>
   1b590:	add	sp, sp, #8
   1b594:	bx	lr
   1b598:	push	{fp, lr}
   1b59c:	mov	fp, sp
   1b5a0:	sub	sp, sp, #24
   1b5a4:	str	r0, [fp, #-4]
   1b5a8:	str	r1, [fp, #-8]
   1b5ac:	str	r2, [sp, #12]
   1b5b0:	str	r3, [sp, #8]
   1b5b4:	ldr	r0, [sp, #12]
   1b5b8:	cmp	r0, #0
   1b5bc:	ble	1b5c4 <__assert_fail@plt+0xa240>
   1b5c0:	b	1b5e4 <__assert_fail@plt+0xa260>
   1b5c4:	movw	r0, #33965	; 0x84ad
   1b5c8:	movt	r0, #3
   1b5cc:	movw	r1, #30584	; 0x7778
   1b5d0:	movt	r1, #3
   1b5d4:	movw	r2, #442	; 0x1ba
   1b5d8:	movw	r3, #30601	; 0x7789
   1b5dc:	movt	r3, #3
   1b5e0:	bl	11384 <__assert_fail@plt>
   1b5e4:	movw	r0, #0
   1b5e8:	str	r0, [sp, #4]
   1b5ec:	ldr	r0, [fp, #-8]
   1b5f0:	ldr	r1, [sp, #4]
   1b5f4:	ldr	r0, [r0, r1, lsl #2]
   1b5f8:	ldr	r1, [sp, #8]
   1b5fc:	add	r0, r0, r1
   1b600:	str	r0, [sp]
   1b604:	ldr	r0, [sp]
   1b608:	ldr	r1, [sp, #8]
   1b60c:	mov	r2, #0
   1b610:	cmp	r0, r1
   1b614:	movwcc	r2, #1
   1b618:	str	r2, [sp, #8]
   1b61c:	ldr	r0, [sp]
   1b620:	ldr	r1, [fp, #-4]
   1b624:	ldr	r2, [sp, #4]
   1b628:	add	r1, r1, r2, lsl #2
   1b62c:	str	r0, [r1]
   1b630:	ldr	r0, [sp, #4]
   1b634:	add	r0, r0, #1
   1b638:	str	r0, [sp, #4]
   1b63c:	ldr	r1, [sp, #12]
   1b640:	cmp	r0, r1
   1b644:	blt	1b5ec <__assert_fail@plt+0xa268>
   1b648:	ldr	r0, [sp, #8]
   1b64c:	mov	sp, fp
   1b650:	pop	{fp, pc}
   1b654:	sub	sp, sp, #36	; 0x24
   1b658:	str	r0, [sp, #32]
   1b65c:	str	r1, [sp, #28]
   1b660:	str	r2, [sp, #24]
   1b664:	str	r3, [sp, #20]
   1b668:	movw	r0, #0
   1b66c:	str	r0, [sp, #16]
   1b670:	str	r0, [sp, #12]
   1b674:	ldr	r0, [sp, #16]
   1b678:	ldr	r1, [sp, #20]
   1b67c:	cmp	r0, r1
   1b680:	bge	1b71c <__assert_fail@plt+0xa398>
   1b684:	ldr	r0, [sp, #28]
   1b688:	ldr	r1, [sp, #16]
   1b68c:	ldr	r0, [r0, r1, lsl #2]
   1b690:	str	r0, [sp, #8]
   1b694:	ldr	r0, [sp, #24]
   1b698:	ldr	r1, [sp, #16]
   1b69c:	ldr	r0, [r0, r1, lsl #2]
   1b6a0:	str	r0, [sp, #4]
   1b6a4:	ldr	r0, [sp, #8]
   1b6a8:	ldr	r1, [sp, #12]
   1b6ac:	add	r0, r0, r1
   1b6b0:	str	r0, [sp]
   1b6b4:	ldr	r0, [sp]
   1b6b8:	ldr	r1, [sp, #12]
   1b6bc:	mov	r2, #0
   1b6c0:	cmp	r0, r1
   1b6c4:	movwcc	r2, #1
   1b6c8:	str	r2, [sp, #12]
   1b6cc:	ldr	r0, [sp, #4]
   1b6d0:	ldr	r1, [sp]
   1b6d4:	add	r0, r1, r0
   1b6d8:	str	r0, [sp]
   1b6dc:	ldr	r0, [sp]
   1b6e0:	ldr	r1, [sp, #4]
   1b6e4:	ldr	r2, [sp, #12]
   1b6e8:	add	r3, r2, #1
   1b6ec:	cmp	r0, r1
   1b6f0:	movcc	r2, r3
   1b6f4:	str	r2, [sp, #12]
   1b6f8:	ldr	r0, [sp]
   1b6fc:	ldr	r1, [sp, #32]
   1b700:	ldr	r2, [sp, #16]
   1b704:	add	r1, r1, r2, lsl #2
   1b708:	str	r0, [r1]
   1b70c:	ldr	r0, [sp, #16]
   1b710:	add	r0, r0, #1
   1b714:	str	r0, [sp, #16]
   1b718:	b	1b674 <__assert_fail@plt+0xa2f0>
   1b71c:	ldr	r0, [sp, #12]
   1b720:	add	sp, sp, #36	; 0x24
   1b724:	bx	lr
   1b728:	push	{fp, lr}
   1b72c:	mov	fp, sp
   1b730:	sub	sp, sp, #24
   1b734:	ldr	ip, [fp, #8]
   1b738:	str	r0, [fp, #-4]
   1b73c:	str	r1, [fp, #-8]
   1b740:	str	r2, [sp, #12]
   1b744:	str	r3, [sp, #8]
   1b748:	ldr	r0, [sp, #12]
   1b74c:	ldr	r1, [fp, #8]
   1b750:	cmp	r0, r1
   1b754:	str	ip, [sp]
   1b758:	blt	1b760 <__assert_fail@plt+0xa3dc>
   1b75c:	b	1b780 <__assert_fail@plt+0xa3fc>
   1b760:	movw	r0, #30662	; 0x77c6
   1b764:	movt	r0, #3
   1b768:	movw	r1, #30584	; 0x7778
   1b76c:	movt	r1, #3
   1b770:	movw	r2, #480	; 0x1e0
   1b774:	movw	r3, #30671	; 0x77cf
   1b778:	movt	r3, #3
   1b77c:	bl	11384 <__assert_fail@plt>
   1b780:	ldr	r0, [fp, #-4]
   1b784:	ldr	r1, [fp, #-8]
   1b788:	ldr	r2, [sp, #8]
   1b78c:	ldr	r3, [fp, #8]
   1b790:	bl	1b654 <__assert_fail@plt+0xa2d0>
   1b794:	str	r0, [sp, #4]
   1b798:	ldr	r0, [sp, #12]
   1b79c:	ldr	r1, [fp, #8]
   1b7a0:	cmp	r0, r1
   1b7a4:	ble	1b7d4 <__assert_fail@plt+0xa450>
   1b7a8:	ldr	r0, [fp, #-4]
   1b7ac:	ldr	r1, [fp, #8]
   1b7b0:	add	r0, r0, r1, lsl #2
   1b7b4:	ldr	r2, [fp, #-8]
   1b7b8:	add	r1, r2, r1, lsl #2
   1b7bc:	ldr	r2, [sp, #12]
   1b7c0:	ldr	r3, [fp, #8]
   1b7c4:	sub	r2, r2, r3
   1b7c8:	ldr	r3, [sp, #4]
   1b7cc:	bl	1b598 <__assert_fail@plt+0xa214>
   1b7d0:	str	r0, [sp, #4]
   1b7d4:	ldr	r0, [sp, #4]
   1b7d8:	mov	sp, fp
   1b7dc:	pop	{fp, pc}
   1b7e0:	push	{fp, lr}
   1b7e4:	mov	fp, sp
   1b7e8:	sub	sp, sp, #32
   1b7ec:	str	r0, [fp, #-4]
   1b7f0:	str	r1, [fp, #-8]
   1b7f4:	str	r2, [fp, #-12]
   1b7f8:	str	r3, [sp, #16]
   1b7fc:	ldr	r0, [fp, #-12]
   1b800:	cmp	r0, #0
   1b804:	ble	1b80c <__assert_fail@plt+0xa488>
   1b808:	b	1b82c <__assert_fail@plt+0xa4a8>
   1b80c:	movw	r0, #33965	; 0x84ad
   1b810:	movt	r0, #3
   1b814:	movw	r1, #30584	; 0x7778
   1b818:	movt	r1, #3
   1b81c:	movw	r2, #493	; 0x1ed
   1b820:	movw	r3, #30741	; 0x7815
   1b824:	movt	r3, #3
   1b828:	bl	11384 <__assert_fail@plt>
   1b82c:	movw	r0, #0
   1b830:	str	r0, [sp, #12]
   1b834:	ldr	r0, [fp, #-8]
   1b838:	ldr	r1, [sp, #12]
   1b83c:	ldr	r0, [r0, r1, lsl #2]
   1b840:	str	r0, [sp, #8]
   1b844:	ldr	r0, [sp, #8]
   1b848:	ldr	r1, [sp, #16]
   1b84c:	mov	r2, #0
   1b850:	cmp	r0, r1
   1b854:	movwcc	r2, #1
   1b858:	str	r2, [sp, #4]
   1b85c:	ldr	r0, [sp, #8]
   1b860:	ldr	r1, [sp, #16]
   1b864:	sub	r0, r0, r1
   1b868:	ldr	r1, [fp, #-4]
   1b86c:	ldr	r2, [sp, #12]
   1b870:	add	r1, r1, r2, lsl #2
   1b874:	str	r0, [r1]
   1b878:	ldr	r0, [sp, #4]
   1b87c:	str	r0, [sp, #16]
   1b880:	ldr	r0, [sp, #12]
   1b884:	add	r0, r0, #1
   1b888:	str	r0, [sp, #12]
   1b88c:	ldr	r1, [fp, #-12]
   1b890:	cmp	r0, r1
   1b894:	blt	1b834 <__assert_fail@plt+0xa4b0>
   1b898:	ldr	r0, [sp, #16]
   1b89c:	mov	sp, fp
   1b8a0:	pop	{fp, pc}
   1b8a4:	sub	sp, sp, #32
   1b8a8:	str	r0, [sp, #28]
   1b8ac:	str	r1, [sp, #24]
   1b8b0:	str	r2, [sp, #20]
   1b8b4:	str	r3, [sp, #16]
   1b8b8:	movw	r0, #0
   1b8bc:	str	r0, [sp, #12]
   1b8c0:	str	r0, [sp, #8]
   1b8c4:	ldr	r0, [sp, #12]
   1b8c8:	ldr	r1, [sp, #16]
   1b8cc:	cmp	r0, r1
   1b8d0:	bge	1b964 <__assert_fail@plt+0xa5e0>
   1b8d4:	ldr	r0, [sp, #24]
   1b8d8:	ldr	r1, [sp, #12]
   1b8dc:	ldr	r0, [r0, r1, lsl #2]
   1b8e0:	str	r0, [sp, #4]
   1b8e4:	ldr	r0, [sp, #20]
   1b8e8:	ldr	r1, [sp, #12]
   1b8ec:	ldr	r0, [r0, r1, lsl #2]
   1b8f0:	str	r0, [sp]
   1b8f4:	ldr	r0, [sp, #8]
   1b8f8:	ldr	r1, [sp]
   1b8fc:	add	r0, r1, r0
   1b900:	str	r0, [sp]
   1b904:	ldr	r0, [sp]
   1b908:	ldr	r1, [sp, #8]
   1b90c:	mov	r2, #0
   1b910:	cmp	r0, r1
   1b914:	movwcc	r2, #1
   1b918:	str	r2, [sp, #8]
   1b91c:	ldr	r0, [sp, #4]
   1b920:	ldr	r1, [sp]
   1b924:	ldr	r2, [sp, #8]
   1b928:	add	r3, r2, #1
   1b92c:	cmp	r0, r1
   1b930:	movcc	r2, r3
   1b934:	str	r2, [sp, #8]
   1b938:	ldr	r0, [sp, #4]
   1b93c:	ldr	r1, [sp]
   1b940:	sub	r0, r0, r1
   1b944:	ldr	r1, [sp, #28]
   1b948:	ldr	r2, [sp, #12]
   1b94c:	add	r1, r1, r2, lsl #2
   1b950:	str	r0, [r1]
   1b954:	ldr	r0, [sp, #12]
   1b958:	add	r0, r0, #1
   1b95c:	str	r0, [sp, #12]
   1b960:	b	1b8c4 <__assert_fail@plt+0xa540>
   1b964:	ldr	r0, [sp, #8]
   1b968:	add	sp, sp, #32
   1b96c:	bx	lr
   1b970:	push	{fp, lr}
   1b974:	mov	fp, sp
   1b978:	sub	sp, sp, #24
   1b97c:	ldr	ip, [fp, #8]
   1b980:	str	r0, [fp, #-4]
   1b984:	str	r1, [fp, #-8]
   1b988:	str	r2, [sp, #12]
   1b98c:	str	r3, [sp, #8]
   1b990:	ldr	r0, [sp, #12]
   1b994:	ldr	r1, [fp, #8]
   1b998:	cmp	r0, r1
   1b99c:	str	ip, [sp]
   1b9a0:	blt	1b9a8 <__assert_fail@plt+0xa624>
   1b9a4:	b	1b9c8 <__assert_fail@plt+0xa644>
   1b9a8:	movw	r0, #30662	; 0x77c6
   1b9ac:	movt	r0, #3
   1b9b0:	movw	r1, #30584	; 0x7778
   1b9b4:	movt	r1, #3
   1b9b8:	movw	r2, #532	; 0x214
   1b9bc:	movw	r3, #30802	; 0x7852
   1b9c0:	movt	r3, #3
   1b9c4:	bl	11384 <__assert_fail@plt>
   1b9c8:	ldr	r0, [fp, #-4]
   1b9cc:	ldr	r1, [fp, #-8]
   1b9d0:	ldr	r2, [sp, #8]
   1b9d4:	ldr	r3, [fp, #8]
   1b9d8:	bl	1b8a4 <__assert_fail@plt+0xa520>
   1b9dc:	str	r0, [sp, #4]
   1b9e0:	ldr	r0, [sp, #12]
   1b9e4:	ldr	r1, [fp, #8]
   1b9e8:	cmp	r0, r1
   1b9ec:	ble	1ba1c <__assert_fail@plt+0xa698>
   1b9f0:	ldr	r0, [fp, #-4]
   1b9f4:	ldr	r1, [fp, #8]
   1b9f8:	add	r0, r0, r1, lsl #2
   1b9fc:	ldr	r2, [fp, #-8]
   1ba00:	add	r1, r2, r1, lsl #2
   1ba04:	ldr	r2, [sp, #12]
   1ba08:	ldr	r3, [fp, #8]
   1ba0c:	sub	r2, r2, r3
   1ba10:	ldr	r3, [sp, #4]
   1ba14:	bl	1b7e0 <__assert_fail@plt+0xa45c>
   1ba18:	str	r0, [sp, #4]
   1ba1c:	ldr	r0, [sp, #4]
   1ba20:	mov	sp, fp
   1ba24:	pop	{fp, pc}
   1ba28:	push	{fp, lr}
   1ba2c:	mov	fp, sp
   1ba30:	sub	sp, sp, #80	; 0x50
   1ba34:	str	r0, [fp, #-4]
   1ba38:	str	r1, [fp, #-8]
   1ba3c:	str	r2, [fp, #-12]
   1ba40:	str	r3, [fp, #-16]
   1ba44:	ldr	r0, [fp, #-12]
   1ba48:	cmp	r0, #1
   1ba4c:	blt	1ba54 <__assert_fail@plt+0xa6d0>
   1ba50:	b	1ba74 <__assert_fail@plt+0xa6f0>
   1ba54:	movw	r0, #31141	; 0x79a5
   1ba58:	movt	r0, #3
   1ba5c:	movw	r1, #30584	; 0x7778
   1ba60:	movt	r1, #3
   1ba64:	movw	r2, #545	; 0x221
   1ba68:	movw	r3, #30872	; 0x7898
   1ba6c:	movt	r3, #3
   1ba70:	bl	11384 <__assert_fail@plt>
   1ba74:	movw	r0, #0
   1ba78:	str	r0, [fp, #-24]	; 0xffffffe8
   1ba7c:	ldr	r0, [fp, #-8]
   1ba80:	add	r1, r0, #4
   1ba84:	str	r1, [fp, #-8]
   1ba88:	ldr	r0, [r0]
   1ba8c:	str	r0, [fp, #-20]	; 0xffffffec
   1ba90:	movw	r0, #32
   1ba94:	str	r0, [fp, #-36]	; 0xffffffdc
   1ba98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba9c:	str	r0, [sp, #8]
   1baa0:	ldr	r0, [fp, #-16]
   1baa4:	str	r0, [sp, #4]
   1baa8:	ldr	r0, [sp, #8]
   1baac:	movw	r1, #65535	; 0xffff
   1bab0:	and	r0, r0, r1
   1bab4:	str	r0, [sp, #24]
   1bab8:	ldr	r0, [sp, #8]
   1babc:	lsr	r0, r0, #16
   1bac0:	str	r0, [sp, #16]
   1bac4:	ldr	r0, [sp, #4]
   1bac8:	and	r0, r0, r1
   1bacc:	str	r0, [sp, #20]
   1bad0:	ldr	r0, [sp, #4]
   1bad4:	lsr	r0, r0, #16
   1bad8:	str	r0, [sp, #12]
   1badc:	ldr	r0, [sp, #24]
   1bae0:	ldr	r1, [sp, #20]
   1bae4:	mul	r0, r0, r1
   1bae8:	str	r0, [sp, #40]	; 0x28
   1baec:	ldr	r0, [sp, #24]
   1baf0:	ldr	r1, [sp, #12]
   1baf4:	mul	r0, r0, r1
   1baf8:	str	r0, [sp, #36]	; 0x24
   1bafc:	ldr	r0, [sp, #16]
   1bb00:	ldr	r1, [sp, #20]
   1bb04:	mul	r0, r0, r1
   1bb08:	str	r0, [sp, #32]
   1bb0c:	ldr	r0, [sp, #16]
   1bb10:	ldr	r1, [sp, #12]
   1bb14:	mul	r0, r0, r1
   1bb18:	str	r0, [sp, #28]
   1bb1c:	ldr	r0, [sp, #40]	; 0x28
   1bb20:	lsr	r0, r0, #16
   1bb24:	ldr	r1, [sp, #36]	; 0x24
   1bb28:	add	r0, r1, r0
   1bb2c:	str	r0, [sp, #36]	; 0x24
   1bb30:	ldr	r0, [sp, #32]
   1bb34:	ldr	r1, [sp, #36]	; 0x24
   1bb38:	add	r0, r1, r0
   1bb3c:	str	r0, [sp, #36]	; 0x24
   1bb40:	ldr	r0, [sp, #36]	; 0x24
   1bb44:	ldr	r1, [sp, #32]
   1bb48:	cmp	r0, r1
   1bb4c:	bcs	1bb5c <__assert_fail@plt+0xa7d8>
   1bb50:	ldr	r0, [sp, #28]
   1bb54:	add	r0, r0, #65536	; 0x10000
   1bb58:	str	r0, [sp, #28]
   1bb5c:	ldr	r0, [sp, #28]
   1bb60:	ldr	r1, [sp, #36]	; 0x24
   1bb64:	lsr	r1, r1, #16
   1bb68:	add	r0, r0, r1
   1bb6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb70:	ldr	r0, [sp, #36]	; 0x24
   1bb74:	lsl	r0, r0, #16
   1bb78:	ldr	r1, [sp, #40]	; 0x28
   1bb7c:	movw	r2, #65535	; 0xffff
   1bb80:	and	r1, r1, r2
   1bb84:	add	r0, r0, r1
   1bb88:	str	r0, [fp, #-32]	; 0xffffffe0
   1bb8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bb94:	add	r0, r1, r0
   1bb98:	str	r0, [fp, #-32]	; 0xffffffe0
   1bb9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bba4:	cmp	r0, r1
   1bba8:	movw	r0, #0
   1bbac:	movcc	r0, #1
   1bbb0:	and	r0, r0, #1
   1bbb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bbb8:	add	r0, r0, r1
   1bbbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1bbc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bbc4:	ldr	r1, [fp, #-4]
   1bbc8:	add	r2, r1, #4
   1bbcc:	str	r2, [fp, #-4]
   1bbd0:	str	r0, [r1]
   1bbd4:	ldr	r0, [fp, #-12]
   1bbd8:	mvn	r1, #0
   1bbdc:	add	r0, r0, r1
   1bbe0:	str	r0, [fp, #-12]
   1bbe4:	cmp	r0, #0
   1bbe8:	bne	1ba7c <__assert_fail@plt+0xa6f8>
   1bbec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bbf0:	mov	sp, fp
   1bbf4:	pop	{fp, pc}
   1bbf8:	push	{fp, lr}
   1bbfc:	mov	fp, sp
   1bc00:	sub	sp, sp, #80	; 0x50
   1bc04:	str	r0, [fp, #-4]
   1bc08:	str	r1, [fp, #-8]
   1bc0c:	str	r2, [fp, #-12]
   1bc10:	str	r3, [fp, #-16]
   1bc14:	ldr	r0, [fp, #-12]
   1bc18:	cmp	r0, #1
   1bc1c:	blt	1bc24 <__assert_fail@plt+0xa8a0>
   1bc20:	b	1bc44 <__assert_fail@plt+0xa8c0>
   1bc24:	movw	r0, #31141	; 0x79a5
   1bc28:	movt	r0, #3
   1bc2c:	movw	r1, #30584	; 0x7778
   1bc30:	movt	r1, #3
   1bc34:	movw	r2, #568	; 0x238
   1bc38:	movw	r3, #30933	; 0x78d5
   1bc3c:	movt	r3, #3
   1bc40:	bl	11384 <__assert_fail@plt>
   1bc44:	movw	r0, #0
   1bc48:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc4c:	ldr	r0, [fp, #-8]
   1bc50:	add	r1, r0, #4
   1bc54:	str	r1, [fp, #-8]
   1bc58:	ldr	r0, [r0]
   1bc5c:	str	r0, [fp, #-20]	; 0xffffffec
   1bc60:	movw	r0, #32
   1bc64:	str	r0, [sp, #40]	; 0x28
   1bc68:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc6c:	str	r0, [sp, #4]
   1bc70:	ldr	r0, [fp, #-16]
   1bc74:	str	r0, [sp]
   1bc78:	ldr	r0, [sp, #4]
   1bc7c:	movw	r1, #65535	; 0xffff
   1bc80:	and	r0, r0, r1
   1bc84:	str	r0, [sp, #20]
   1bc88:	ldr	r0, [sp, #4]
   1bc8c:	lsr	r0, r0, #16
   1bc90:	str	r0, [sp, #12]
   1bc94:	ldr	r0, [sp]
   1bc98:	and	r0, r0, r1
   1bc9c:	str	r0, [sp, #16]
   1bca0:	ldr	r0, [sp]
   1bca4:	lsr	r0, r0, #16
   1bca8:	str	r0, [sp, #8]
   1bcac:	ldr	r0, [sp, #20]
   1bcb0:	ldr	r1, [sp, #16]
   1bcb4:	mul	r0, r0, r1
   1bcb8:	str	r0, [sp, #36]	; 0x24
   1bcbc:	ldr	r0, [sp, #20]
   1bcc0:	ldr	r1, [sp, #8]
   1bcc4:	mul	r0, r0, r1
   1bcc8:	str	r0, [sp, #32]
   1bccc:	ldr	r0, [sp, #12]
   1bcd0:	ldr	r1, [sp, #16]
   1bcd4:	mul	r0, r0, r1
   1bcd8:	str	r0, [sp, #28]
   1bcdc:	ldr	r0, [sp, #12]
   1bce0:	ldr	r1, [sp, #8]
   1bce4:	mul	r0, r0, r1
   1bce8:	str	r0, [sp, #24]
   1bcec:	ldr	r0, [sp, #36]	; 0x24
   1bcf0:	lsr	r0, r0, #16
   1bcf4:	ldr	r1, [sp, #32]
   1bcf8:	add	r0, r1, r0
   1bcfc:	str	r0, [sp, #32]
   1bd00:	ldr	r0, [sp, #28]
   1bd04:	ldr	r1, [sp, #32]
   1bd08:	add	r0, r1, r0
   1bd0c:	str	r0, [sp, #32]
   1bd10:	ldr	r0, [sp, #32]
   1bd14:	ldr	r1, [sp, #28]
   1bd18:	cmp	r0, r1
   1bd1c:	bcs	1bd2c <__assert_fail@plt+0xa9a8>
   1bd20:	ldr	r0, [sp, #24]
   1bd24:	add	r0, r0, #65536	; 0x10000
   1bd28:	str	r0, [sp, #24]
   1bd2c:	ldr	r0, [sp, #24]
   1bd30:	ldr	r1, [sp, #32]
   1bd34:	lsr	r1, r1, #16
   1bd38:	add	r0, r0, r1
   1bd3c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bd40:	ldr	r0, [sp, #32]
   1bd44:	lsl	r0, r0, #16
   1bd48:	ldr	r1, [sp, #36]	; 0x24
   1bd4c:	movw	r2, #65535	; 0xffff
   1bd50:	and	r1, r1, r2
   1bd54:	add	r0, r0, r1
   1bd58:	str	r0, [fp, #-32]	; 0xffffffe0
   1bd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bd64:	add	r0, r1, r0
   1bd68:	str	r0, [fp, #-32]	; 0xffffffe0
   1bd6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd74:	cmp	r0, r1
   1bd78:	movw	r0, #0
   1bd7c:	movcc	r0, #1
   1bd80:	and	r0, r0, #1
   1bd84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bd88:	add	r0, r0, r1
   1bd8c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd90:	ldr	r0, [fp, #-4]
   1bd94:	ldr	r0, [r0]
   1bd98:	str	r0, [fp, #-36]	; 0xffffffdc
   1bd9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bda0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bda4:	add	r0, r0, r1
   1bda8:	str	r0, [fp, #-32]	; 0xffffffe0
   1bdac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bdb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bdb4:	cmp	r0, r1
   1bdb8:	movw	r0, #0
   1bdbc:	movcc	r0, #1
   1bdc0:	and	r0, r0, #1
   1bdc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bdc8:	add	r0, r1, r0
   1bdcc:	str	r0, [fp, #-24]	; 0xffffffe8
   1bdd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bdd4:	ldr	r1, [fp, #-4]
   1bdd8:	add	r2, r1, #4
   1bddc:	str	r2, [fp, #-4]
   1bde0:	str	r0, [r1]
   1bde4:	ldr	r0, [fp, #-12]
   1bde8:	mvn	r1, #0
   1bdec:	add	r0, r0, r1
   1bdf0:	str	r0, [fp, #-12]
   1bdf4:	cmp	r0, #0
   1bdf8:	bne	1bc4c <__assert_fail@plt+0xa8c8>
   1bdfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be00:	mov	sp, fp
   1be04:	pop	{fp, pc}
   1be08:	push	{fp, lr}
   1be0c:	mov	fp, sp
   1be10:	sub	sp, sp, #80	; 0x50
   1be14:	str	r0, [fp, #-4]
   1be18:	str	r1, [fp, #-8]
   1be1c:	str	r2, [fp, #-12]
   1be20:	str	r3, [fp, #-16]
   1be24:	ldr	r0, [fp, #-12]
   1be28:	cmp	r0, #1
   1be2c:	blt	1be34 <__assert_fail@plt+0xaab0>
   1be30:	b	1be54 <__assert_fail@plt+0xaad0>
   1be34:	movw	r0, #31141	; 0x79a5
   1be38:	movt	r0, #3
   1be3c:	movw	r1, #30584	; 0x7778
   1be40:	movt	r1, #3
   1be44:	movw	r2, #594	; 0x252
   1be48:	movw	r3, #30997	; 0x7915
   1be4c:	movt	r3, #3
   1be50:	bl	11384 <__assert_fail@plt>
   1be54:	movw	r0, #0
   1be58:	str	r0, [fp, #-24]	; 0xffffffe8
   1be5c:	ldr	r0, [fp, #-8]
   1be60:	add	r1, r0, #4
   1be64:	str	r1, [fp, #-8]
   1be68:	ldr	r0, [r0]
   1be6c:	str	r0, [fp, #-20]	; 0xffffffec
   1be70:	movw	r0, #32
   1be74:	str	r0, [sp, #40]	; 0x28
   1be78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be7c:	str	r0, [sp, #4]
   1be80:	ldr	r0, [fp, #-16]
   1be84:	str	r0, [sp]
   1be88:	ldr	r0, [sp, #4]
   1be8c:	movw	r1, #65535	; 0xffff
   1be90:	and	r0, r0, r1
   1be94:	str	r0, [sp, #20]
   1be98:	ldr	r0, [sp, #4]
   1be9c:	lsr	r0, r0, #16
   1bea0:	str	r0, [sp, #12]
   1bea4:	ldr	r0, [sp]
   1bea8:	and	r0, r0, r1
   1beac:	str	r0, [sp, #16]
   1beb0:	ldr	r0, [sp]
   1beb4:	lsr	r0, r0, #16
   1beb8:	str	r0, [sp, #8]
   1bebc:	ldr	r0, [sp, #20]
   1bec0:	ldr	r1, [sp, #16]
   1bec4:	mul	r0, r0, r1
   1bec8:	str	r0, [sp, #36]	; 0x24
   1becc:	ldr	r0, [sp, #20]
   1bed0:	ldr	r1, [sp, #8]
   1bed4:	mul	r0, r0, r1
   1bed8:	str	r0, [sp, #32]
   1bedc:	ldr	r0, [sp, #12]
   1bee0:	ldr	r1, [sp, #16]
   1bee4:	mul	r0, r0, r1
   1bee8:	str	r0, [sp, #28]
   1beec:	ldr	r0, [sp, #12]
   1bef0:	ldr	r1, [sp, #8]
   1bef4:	mul	r0, r0, r1
   1bef8:	str	r0, [sp, #24]
   1befc:	ldr	r0, [sp, #36]	; 0x24
   1bf00:	lsr	r0, r0, #16
   1bf04:	ldr	r1, [sp, #32]
   1bf08:	add	r0, r1, r0
   1bf0c:	str	r0, [sp, #32]
   1bf10:	ldr	r0, [sp, #28]
   1bf14:	ldr	r1, [sp, #32]
   1bf18:	add	r0, r1, r0
   1bf1c:	str	r0, [sp, #32]
   1bf20:	ldr	r0, [sp, #32]
   1bf24:	ldr	r1, [sp, #28]
   1bf28:	cmp	r0, r1
   1bf2c:	bcs	1bf3c <__assert_fail@plt+0xabb8>
   1bf30:	ldr	r0, [sp, #24]
   1bf34:	add	r0, r0, #65536	; 0x10000
   1bf38:	str	r0, [sp, #24]
   1bf3c:	ldr	r0, [sp, #24]
   1bf40:	ldr	r1, [sp, #32]
   1bf44:	lsr	r1, r1, #16
   1bf48:	add	r0, r0, r1
   1bf4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bf50:	ldr	r0, [sp, #32]
   1bf54:	lsl	r0, r0, #16
   1bf58:	ldr	r1, [sp, #36]	; 0x24
   1bf5c:	movw	r2, #65535	; 0xffff
   1bf60:	and	r1, r1, r2
   1bf64:	add	r0, r0, r1
   1bf68:	str	r0, [fp, #-32]	; 0xffffffe0
   1bf6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bf74:	add	r0, r1, r0
   1bf78:	str	r0, [fp, #-32]	; 0xffffffe0
   1bf7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf84:	cmp	r0, r1
   1bf88:	movw	r0, #0
   1bf8c:	movcc	r0, #1
   1bf90:	and	r0, r0, #1
   1bf94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bf98:	add	r0, r0, r1
   1bf9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bfa0:	ldr	r0, [fp, #-4]
   1bfa4:	ldr	r0, [r0]
   1bfa8:	str	r0, [fp, #-36]	; 0xffffffdc
   1bfac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bfb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bfb4:	sub	r0, r0, r1
   1bfb8:	str	r0, [fp, #-32]	; 0xffffffe0
   1bfbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bfc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bfc4:	cmp	r0, r1
   1bfc8:	movw	r0, #0
   1bfcc:	movhi	r0, #1
   1bfd0:	and	r0, r0, #1
   1bfd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bfd8:	add	r0, r1, r0
   1bfdc:	str	r0, [fp, #-24]	; 0xffffffe8
   1bfe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bfe4:	ldr	r1, [fp, #-4]
   1bfe8:	add	r2, r1, #4
   1bfec:	str	r2, [fp, #-4]
   1bff0:	str	r0, [r1]
   1bff4:	ldr	r0, [fp, #-12]
   1bff8:	mvn	r1, #0
   1bffc:	add	r0, r0, r1
   1c000:	str	r0, [fp, #-12]
   1c004:	cmp	r0, #0
   1c008:	bne	1be5c <__assert_fail@plt+0xaad8>
   1c00c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c010:	mov	sp, fp
   1c014:	pop	{fp, pc}
   1c018:	push	{fp, lr}
   1c01c:	mov	fp, sp
   1c020:	sub	sp, sp, #24
   1c024:	ldr	ip, [fp, #8]
   1c028:	str	r0, [fp, #-4]
   1c02c:	str	r1, [fp, #-8]
   1c030:	str	r2, [sp, #12]
   1c034:	str	r3, [sp, #8]
   1c038:	ldr	r0, [sp, #12]
   1c03c:	ldr	r1, [fp, #8]
   1c040:	cmp	r0, r1
   1c044:	str	ip, [sp, #4]
   1c048:	blt	1c050 <__assert_fail@plt+0xaccc>
   1c04c:	b	1c070 <__assert_fail@plt+0xacec>
   1c050:	movw	r0, #31061	; 0x7955
   1c054:	movt	r0, #3
   1c058:	movw	r1, #30584	; 0x7778
   1c05c:	movt	r1, #3
   1c060:	movw	r2, #618	; 0x26a
   1c064:	movw	r3, #31070	; 0x795e
   1c068:	movt	r3, #3
   1c06c:	bl	11384 <__assert_fail@plt>
   1c070:	ldr	r0, [fp, #8]
   1c074:	cmp	r0, #1
   1c078:	blt	1c080 <__assert_fail@plt+0xacfc>
   1c07c:	b	1c0a0 <__assert_fail@plt+0xad1c>
   1c080:	movw	r0, #31140	; 0x79a4
   1c084:	movt	r0, #3
   1c088:	movw	r1, #30584	; 0x7778
   1c08c:	movt	r1, #3
   1c090:	movw	r2, #619	; 0x26b
   1c094:	movw	r3, #31070	; 0x795e
   1c098:	movt	r3, #3
   1c09c:	bl	11384 <__assert_fail@plt>
   1c0a0:	ldr	r0, [fp, #-4]
   1c0a4:	ldr	r1, [sp, #12]
   1c0a8:	ldr	r2, [fp, #8]
   1c0ac:	add	r1, r1, r2
   1c0b0:	add	r0, r0, r1, lsl #2
   1c0b4:	ldr	r1, [fp, #-8]
   1c0b8:	cmp	r0, r1
   1c0bc:	bls	1c0d8 <__assert_fail@plt+0xad54>
   1c0c0:	ldr	r0, [fp, #-8]
   1c0c4:	ldr	r1, [sp, #12]
   1c0c8:	add	r0, r0, r1, lsl #2
   1c0cc:	ldr	r1, [fp, #-4]
   1c0d0:	cmp	r0, r1
   1c0d4:	bhi	1c0dc <__assert_fail@plt+0xad58>
   1c0d8:	b	1c0fc <__assert_fail@plt+0xad78>
   1c0dc:	movw	r0, #31148	; 0x79ac
   1c0e0:	movt	r0, #3
   1c0e4:	movw	r1, #30584	; 0x7778
   1c0e8:	movt	r1, #3
   1c0ec:	movw	r2, #620	; 0x26c
   1c0f0:	movw	r3, #31070	; 0x795e
   1c0f4:	movt	r3, #3
   1c0f8:	bl	11384 <__assert_fail@plt>
   1c0fc:	ldr	r0, [fp, #-4]
   1c100:	ldr	r1, [sp, #12]
   1c104:	ldr	r2, [fp, #8]
   1c108:	add	r1, r1, r2
   1c10c:	add	r0, r0, r1, lsl #2
   1c110:	ldr	r1, [sp, #8]
   1c114:	cmp	r0, r1
   1c118:	bls	1c134 <__assert_fail@plt+0xadb0>
   1c11c:	ldr	r0, [sp, #8]
   1c120:	ldr	r1, [fp, #8]
   1c124:	add	r0, r0, r1, lsl #2
   1c128:	ldr	r1, [fp, #-4]
   1c12c:	cmp	r0, r1
   1c130:	bhi	1c138 <__assert_fail@plt+0xadb4>
   1c134:	b	1c158 <__assert_fail@plt+0xadd4>
   1c138:	movw	r0, #31188	; 0x79d4
   1c13c:	movt	r0, #3
   1c140:	movw	r1, #30584	; 0x7778
   1c144:	movt	r1, #3
   1c148:	movw	r2, #621	; 0x26d
   1c14c:	movw	r3, #31070	; 0x795e
   1c150:	movt	r3, #3
   1c154:	bl	11384 <__assert_fail@plt>
   1c158:	ldr	r0, [fp, #-4]
   1c15c:	ldr	r1, [fp, #-8]
   1c160:	ldr	r2, [sp, #12]
   1c164:	ldr	r3, [sp, #8]
   1c168:	ldr	r3, [r3]
   1c16c:	bl	1ba28 <__assert_fail@plt+0xa6a4>
   1c170:	ldr	r1, [fp, #-4]
   1c174:	ldr	r2, [sp, #12]
   1c178:	add	r1, r1, r2, lsl #2
   1c17c:	str	r0, [r1]
   1c180:	ldr	r0, [fp, #8]
   1c184:	mvn	r1, #0
   1c188:	add	r0, r0, r1
   1c18c:	str	r0, [fp, #8]
   1c190:	cmp	r0, #1
   1c194:	blt	1c1dc <__assert_fail@plt+0xae58>
   1c198:	ldr	r0, [fp, #-4]
   1c19c:	add	r0, r0, #4
   1c1a0:	str	r0, [fp, #-4]
   1c1a4:	ldr	r0, [sp, #8]
   1c1a8:	add	r0, r0, #4
   1c1ac:	str	r0, [sp, #8]
   1c1b0:	ldr	r0, [fp, #-4]
   1c1b4:	ldr	r1, [fp, #-8]
   1c1b8:	ldr	r2, [sp, #12]
   1c1bc:	ldr	r3, [sp, #8]
   1c1c0:	ldr	r3, [r3]
   1c1c4:	bl	1bbf8 <__assert_fail@plt+0xa874>
   1c1c8:	ldr	r1, [fp, #-4]
   1c1cc:	ldr	r2, [sp, #12]
   1c1d0:	add	r1, r1, r2, lsl #2
   1c1d4:	str	r0, [r1]
   1c1d8:	b	1c180 <__assert_fail@plt+0xadfc>
   1c1dc:	ldr	r0, [fp, #-4]
   1c1e0:	ldr	r1, [sp, #12]
   1c1e4:	add	r0, r0, r1, lsl #2
   1c1e8:	ldr	r0, [r0]
   1c1ec:	mov	sp, fp
   1c1f0:	pop	{fp, pc}
   1c1f4:	push	{fp, lr}
   1c1f8:	mov	fp, sp
   1c1fc:	sub	sp, sp, #24
   1c200:	str	r0, [fp, #-4]
   1c204:	str	r1, [fp, #-8]
   1c208:	str	r2, [sp, #12]
   1c20c:	str	r3, [sp, #8]
   1c210:	ldr	r0, [fp, #-4]
   1c214:	ldr	r1, [fp, #-8]
   1c218:	ldr	r2, [sp, #8]
   1c21c:	ldr	r3, [sp, #12]
   1c220:	ldr	ip, [sp, #8]
   1c224:	str	ip, [sp]
   1c228:	bl	1c018 <__assert_fail@plt+0xac94>
   1c22c:	str	r0, [sp, #4]
   1c230:	mov	sp, fp
   1c234:	pop	{fp, pc}
   1c238:	push	{fp, lr}
   1c23c:	mov	fp, sp
   1c240:	sub	sp, sp, #24
   1c244:	str	r0, [fp, #-4]
   1c248:	str	r1, [fp, #-8]
   1c24c:	str	r2, [sp, #12]
   1c250:	ldr	r0, [fp, #-4]
   1c254:	ldr	r1, [fp, #-8]
   1c258:	ldr	r2, [sp, #12]
   1c25c:	ldr	r3, [fp, #-8]
   1c260:	ldr	ip, [sp, #12]
   1c264:	str	ip, [sp]
   1c268:	bl	1c018 <__assert_fail@plt+0xac94>
   1c26c:	str	r0, [sp, #8]
   1c270:	mov	sp, fp
   1c274:	pop	{fp, pc}
   1c278:	push	{fp, lr}
   1c27c:	mov	fp, sp
   1c280:	sub	sp, sp, #32
   1c284:	str	r0, [fp, #-4]
   1c288:	str	r1, [fp, #-8]
   1c28c:	str	r2, [fp, #-12]
   1c290:	str	r3, [sp, #16]
   1c294:	ldr	r0, [fp, #-12]
   1c298:	cmp	r0, #1
   1c29c:	blt	1c2a4 <__assert_fail@plt+0xaf20>
   1c2a0:	b	1c2c4 <__assert_fail@plt+0xaf40>
   1c2a4:	movw	r0, #31141	; 0x79a5
   1c2a8:	movt	r0, #3
   1c2ac:	movw	r1, #30584	; 0x7778
   1c2b0:	movt	r1, #3
   1c2b4:	movw	r2, #659	; 0x293
   1c2b8:	movw	r3, #31228	; 0x79fc
   1c2bc:	movt	r3, #3
   1c2c0:	bl	11384 <__assert_fail@plt>
   1c2c4:	ldr	r0, [sp, #16]
   1c2c8:	cmp	r0, #1
   1c2cc:	bcc	1c2d4 <__assert_fail@plt+0xaf50>
   1c2d0:	b	1c2f4 <__assert_fail@plt+0xaf70>
   1c2d4:	movw	r0, #31293	; 0x7a3d
   1c2d8:	movt	r0, #3
   1c2dc:	movw	r1, #30584	; 0x7778
   1c2e0:	movt	r1, #3
   1c2e4:	movw	r2, #660	; 0x294
   1c2e8:	movw	r3, #31228	; 0x79fc
   1c2ec:	movt	r3, #3
   1c2f0:	bl	11384 <__assert_fail@plt>
   1c2f4:	ldr	r0, [sp, #16]
   1c2f8:	cmp	r0, #32
   1c2fc:	bcs	1c304 <__assert_fail@plt+0xaf80>
   1c300:	b	1c324 <__assert_fail@plt+0xafa0>
   1c304:	movw	r0, #31302	; 0x7a46
   1c308:	movt	r0, #3
   1c30c:	movw	r1, #30584	; 0x7778
   1c310:	movt	r1, #3
   1c314:	movw	r2, #661	; 0x295
   1c318:	movw	r3, #31228	; 0x79fc
   1c31c:	movt	r3, #3
   1c320:	bl	11384 <__assert_fail@plt>
   1c324:	ldr	r0, [fp, #-12]
   1c328:	ldr	r1, [fp, #-8]
   1c32c:	add	r0, r1, r0, lsl #2
   1c330:	str	r0, [fp, #-8]
   1c334:	ldr	r0, [fp, #-12]
   1c338:	ldr	r1, [fp, #-4]
   1c33c:	add	r0, r1, r0, lsl #2
   1c340:	str	r0, [fp, #-4]
   1c344:	ldr	r0, [sp, #16]
   1c348:	movw	r1, #32
   1c34c:	sub	r0, r1, r0
   1c350:	str	r0, [sp, #4]
   1c354:	ldr	r0, [fp, #-8]
   1c358:	mvn	r1, #3
   1c35c:	add	r2, r0, r1
   1c360:	str	r2, [fp, #-8]
   1c364:	add	r0, r0, r1
   1c368:	ldr	r0, [r0]
   1c36c:	str	r0, [sp, #8]
   1c370:	ldr	r0, [sp, #8]
   1c374:	ldr	r1, [sp, #4]
   1c378:	lsr	r0, r0, r1
   1c37c:	str	r0, [sp]
   1c380:	ldr	r0, [sp, #8]
   1c384:	ldr	r1, [sp, #16]
   1c388:	lsl	r0, r0, r1
   1c38c:	str	r0, [sp, #12]
   1c390:	ldr	r0, [fp, #-12]
   1c394:	mvn	r1, #0
   1c398:	add	r0, r0, r1
   1c39c:	str	r0, [fp, #-12]
   1c3a0:	cmp	r0, #0
   1c3a4:	beq	1c400 <__assert_fail@plt+0xb07c>
   1c3a8:	ldr	r0, [fp, #-8]
   1c3ac:	mvn	r1, #3
   1c3b0:	add	r2, r0, r1
   1c3b4:	str	r2, [fp, #-8]
   1c3b8:	add	r0, r0, r1
   1c3bc:	ldr	r0, [r0]
   1c3c0:	str	r0, [sp, #8]
   1c3c4:	ldr	r0, [sp, #12]
   1c3c8:	ldr	r2, [sp, #8]
   1c3cc:	ldr	r3, [sp, #4]
   1c3d0:	lsr	r2, r2, r3
   1c3d4:	orr	r0, r0, r2
   1c3d8:	ldr	r2, [fp, #-4]
   1c3dc:	add	r3, r2, r1
   1c3e0:	str	r3, [fp, #-4]
   1c3e4:	add	r1, r2, r1
   1c3e8:	str	r0, [r1]
   1c3ec:	ldr	r0, [sp, #8]
   1c3f0:	ldr	r1, [sp, #16]
   1c3f4:	lsl	r0, r0, r1
   1c3f8:	str	r0, [sp, #12]
   1c3fc:	b	1c390 <__assert_fail@plt+0xb00c>
   1c400:	ldr	r0, [sp, #12]
   1c404:	ldr	r1, [fp, #-4]
   1c408:	mvn	r2, #3
   1c40c:	add	r3, r1, r2
   1c410:	str	r3, [fp, #-4]
   1c414:	add	r1, r1, r2
   1c418:	str	r0, [r1]
   1c41c:	ldr	r0, [sp]
   1c420:	mov	sp, fp
   1c424:	pop	{fp, pc}
   1c428:	push	{fp, lr}
   1c42c:	mov	fp, sp
   1c430:	sub	sp, sp, #32
   1c434:	str	r0, [fp, #-4]
   1c438:	str	r1, [fp, #-8]
   1c43c:	str	r2, [fp, #-12]
   1c440:	str	r3, [sp, #16]
   1c444:	ldr	r0, [fp, #-12]
   1c448:	cmp	r0, #1
   1c44c:	blt	1c454 <__assert_fail@plt+0xb0d0>
   1c450:	b	1c474 <__assert_fail@plt+0xb0f0>
   1c454:	movw	r0, #31141	; 0x79a5
   1c458:	movt	r0, #3
   1c45c:	movw	r1, #30584	; 0x7778
   1c460:	movt	r1, #3
   1c464:	movw	r2, #689	; 0x2b1
   1c468:	movw	r3, #31322	; 0x7a5a
   1c46c:	movt	r3, #3
   1c470:	bl	11384 <__assert_fail@plt>
   1c474:	ldr	r0, [sp, #16]
   1c478:	cmp	r0, #1
   1c47c:	bcc	1c484 <__assert_fail@plt+0xb100>
   1c480:	b	1c4a4 <__assert_fail@plt+0xb120>
   1c484:	movw	r0, #31293	; 0x7a3d
   1c488:	movt	r0, #3
   1c48c:	movw	r1, #30584	; 0x7778
   1c490:	movt	r1, #3
   1c494:	movw	r2, #690	; 0x2b2
   1c498:	movw	r3, #31322	; 0x7a5a
   1c49c:	movt	r3, #3
   1c4a0:	bl	11384 <__assert_fail@plt>
   1c4a4:	ldr	r0, [sp, #16]
   1c4a8:	cmp	r0, #32
   1c4ac:	bcs	1c4b4 <__assert_fail@plt+0xb130>
   1c4b0:	b	1c4d4 <__assert_fail@plt+0xb150>
   1c4b4:	movw	r0, #31302	; 0x7a46
   1c4b8:	movt	r0, #3
   1c4bc:	movw	r1, #30584	; 0x7778
   1c4c0:	movt	r1, #3
   1c4c4:	movw	r2, #691	; 0x2b3
   1c4c8:	movw	r3, #31322	; 0x7a5a
   1c4cc:	movt	r3, #3
   1c4d0:	bl	11384 <__assert_fail@plt>
   1c4d4:	ldr	r0, [sp, #16]
   1c4d8:	movw	r1, #32
   1c4dc:	sub	r0, r1, r0
   1c4e0:	str	r0, [sp, #4]
   1c4e4:	ldr	r0, [fp, #-8]
   1c4e8:	add	r1, r0, #4
   1c4ec:	str	r1, [fp, #-8]
   1c4f0:	ldr	r0, [r0]
   1c4f4:	str	r0, [sp, #12]
   1c4f8:	ldr	r0, [sp, #12]
   1c4fc:	ldr	r1, [sp, #4]
   1c500:	lsl	r0, r0, r1
   1c504:	str	r0, [sp]
   1c508:	ldr	r0, [sp, #12]
   1c50c:	ldr	r1, [sp, #16]
   1c510:	lsr	r0, r0, r1
   1c514:	str	r0, [sp, #8]
   1c518:	ldr	r0, [fp, #-12]
   1c51c:	mvn	r1, #0
   1c520:	add	r0, r0, r1
   1c524:	str	r0, [fp, #-12]
   1c528:	cmp	r0, #0
   1c52c:	beq	1c57c <__assert_fail@plt+0xb1f8>
   1c530:	ldr	r0, [fp, #-8]
   1c534:	add	r1, r0, #4
   1c538:	str	r1, [fp, #-8]
   1c53c:	ldr	r0, [r0]
   1c540:	str	r0, [sp, #12]
   1c544:	ldr	r0, [sp, #8]
   1c548:	ldr	r1, [sp, #12]
   1c54c:	ldr	r2, [sp, #4]
   1c550:	lsl	r1, r1, r2
   1c554:	orr	r0, r0, r1
   1c558:	ldr	r1, [fp, #-4]
   1c55c:	add	r2, r1, #4
   1c560:	str	r2, [fp, #-4]
   1c564:	str	r0, [r1]
   1c568:	ldr	r0, [sp, #12]
   1c56c:	ldr	r1, [sp, #16]
   1c570:	lsr	r0, r0, r1
   1c574:	str	r0, [sp, #8]
   1c578:	b	1c518 <__assert_fail@plt+0xb194>
   1c57c:	ldr	r0, [sp, #8]
   1c580:	ldr	r1, [fp, #-4]
   1c584:	str	r0, [r1]
   1c588:	ldr	r0, [sp]
   1c58c:	mov	sp, fp
   1c590:	pop	{fp, pc}
   1c594:	push	{fp, lr}
   1c598:	mov	fp, sp
   1c59c:	sub	sp, sp, #16
   1c5a0:	str	r0, [fp, #-4]
   1c5a4:	str	r1, [sp, #8]
   1c5a8:	ldr	r0, [sp, #8]
   1c5ac:	lsr	r0, r0, #5
   1c5b0:	str	r0, [sp, #4]
   1c5b4:	ldr	r0, [fp, #-4]
   1c5b8:	ldr	r1, [sp, #4]
   1c5bc:	add	r0, r0, r1, lsl #2
   1c5c0:	ldr	r0, [r0]
   1c5c4:	ldr	r1, [sp, #8]
   1c5c8:	and	r1, r1, #31
   1c5cc:	mvn	r2, #0
   1c5d0:	lsl	r1, r2, r1
   1c5d4:	and	r0, r0, r1
   1c5d8:	ldr	r1, [sp, #4]
   1c5dc:	ldr	r2, [fp, #-4]
   1c5e0:	ldr	r3, [sp, #4]
   1c5e4:	movw	ip, #0
   1c5e8:	str	ip, [sp]
   1c5ec:	bl	1c5f8 <__assert_fail@plt+0xb274>
   1c5f0:	mov	sp, fp
   1c5f4:	pop	{fp, pc}
   1c5f8:	push	{fp, lr}
   1c5fc:	mov	fp, sp
   1c600:	sub	sp, sp, #56	; 0x38
   1c604:	ldr	ip, [fp, #8]
   1c608:	str	r0, [fp, #-8]
   1c60c:	str	r1, [fp, #-12]
   1c610:	str	r2, [fp, #-16]
   1c614:	str	r3, [fp, #-20]	; 0xffffffec
   1c618:	ldr	r0, [fp, #8]
   1c61c:	cmp	r0, #0
   1c620:	str	ip, [sp, #8]
   1c624:	beq	1c634 <__assert_fail@plt+0xb2b0>
   1c628:	ldr	r0, [fp, #8]
   1c62c:	cmn	r0, #1
   1c630:	bne	1c638 <__assert_fail@plt+0xb2b4>
   1c634:	b	1c658 <__assert_fail@plt+0xb2d4>
   1c638:	movw	r0, #33402	; 0x827a
   1c63c:	movt	r0, #3
   1c640:	movw	r1, #30584	; 0x7778
   1c644:	movt	r1, #3
   1c648:	movw	r2, #715	; 0x2cb
   1c64c:	movw	r3, #33432	; 0x8298
   1c650:	movt	r3, #3
   1c654:	bl	11384 <__assert_fail@plt>
   1c658:	ldr	r0, [fp, #-12]
   1c65c:	movw	r1, #0
   1c660:	cmp	r1, r0
   1c664:	bgt	1c67c <__assert_fail@plt+0xb2f8>
   1c668:	ldr	r0, [fp, #-12]
   1c66c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c670:	cmp	r0, r1
   1c674:	bgt	1c67c <__assert_fail@plt+0xb2f8>
   1c678:	b	1c69c <__assert_fail@plt+0xb318>
   1c67c:	movw	r0, #33515	; 0x82eb
   1c680:	movt	r0, #3
   1c684:	movw	r1, #30584	; 0x7778
   1c688:	movt	r1, #3
   1c68c:	movw	r2, #716	; 0x2cc
   1c690:	movw	r3, #33432	; 0x8298
   1c694:	movt	r3, #3
   1c698:	bl	11384 <__assert_fail@plt>
   1c69c:	b	1c6a0 <__assert_fail@plt+0xb31c>
   1c6a0:	ldr	r0, [fp, #-8]
   1c6a4:	cmp	r0, #0
   1c6a8:	bne	1c718 <__assert_fail@plt+0xb394>
   1c6ac:	ldr	r0, [fp, #-12]
   1c6b0:	add	r0, r0, #1
   1c6b4:	str	r0, [fp, #-12]
   1c6b8:	ldr	r0, [fp, #-12]
   1c6bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c6c0:	cmp	r0, r1
   1c6c4:	bne	1c6f8 <__assert_fail@plt+0xb374>
   1c6c8:	ldr	r0, [fp, #8]
   1c6cc:	cmp	r0, #0
   1c6d0:	bne	1c6e0 <__assert_fail@plt+0xb35c>
   1c6d4:	mvn	r0, #0
   1c6d8:	str	r0, [sp, #4]
   1c6dc:	b	1c6ec <__assert_fail@plt+0xb368>
   1c6e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6e4:	lsl	r0, r0, #5
   1c6e8:	str	r0, [sp, #4]
   1c6ec:	ldr	r0, [sp, #4]
   1c6f0:	str	r0, [fp, #-4]
   1c6f4:	b	1c7f4 <__assert_fail@plt+0xb470>
   1c6f8:	ldr	r0, [fp, #8]
   1c6fc:	ldr	r1, [fp, #-16]
   1c700:	ldr	r2, [fp, #-12]
   1c704:	add	r1, r1, r2, lsl #2
   1c708:	ldr	r1, [r1]
   1c70c:	eor	r0, r0, r1
   1c710:	str	r0, [fp, #-8]
   1c714:	b	1c6a0 <__assert_fail@plt+0xb31c>
   1c718:	b	1c71c <__assert_fail@plt+0xb398>
   1c71c:	ldr	r0, [fp, #-8]
   1c720:	str	r0, [sp, #28]
   1c724:	movw	r0, #0
   1c728:	str	r0, [sp, #24]
   1c72c:	ldr	r0, [sp, #28]
   1c730:	ldr	r1, [sp, #28]
   1c734:	movw	r2, #0
   1c738:	sub	r1, r2, r1
   1c73c:	and	r0, r0, r1
   1c740:	str	r0, [sp, #20]
   1c744:	str	r2, [sp, #16]
   1c748:	movw	r0, #8
   1c74c:	str	r0, [sp, #12]
   1c750:	ldr	r0, [sp, #12]
   1c754:	movw	r1, #32
   1c758:	cmp	r1, r0
   1c75c:	bls	1c798 <__assert_fail@plt+0xb414>
   1c760:	b	1c764 <__assert_fail@plt+0xb3e0>
   1c764:	ldr	r0, [sp, #20]
   1c768:	and	r0, r0, #-16777216	; 0xff000000
   1c76c:	cmp	r0, #0
   1c770:	bne	1c794 <__assert_fail@plt+0xb410>
   1c774:	ldr	r0, [sp, #12]
   1c778:	ldr	r1, [sp, #20]
   1c77c:	lsl	r0, r1, r0
   1c780:	str	r0, [sp, #20]
   1c784:	ldr	r0, [sp, #16]
   1c788:	add	r0, r0, #8
   1c78c:	str	r0, [sp, #16]
   1c790:	b	1c764 <__assert_fail@plt+0xb3e0>
   1c794:	b	1c798 <__assert_fail@plt+0xb414>
   1c798:	b	1c79c <__assert_fail@plt+0xb418>
   1c79c:	ldr	r0, [sp, #20]
   1c7a0:	and	r0, r0, #-2147483648	; 0x80000000
   1c7a4:	cmp	r0, #0
   1c7a8:	bne	1c7c8 <__assert_fail@plt+0xb444>
   1c7ac:	ldr	r0, [sp, #20]
   1c7b0:	lsl	r0, r0, #1
   1c7b4:	str	r0, [sp, #20]
   1c7b8:	ldr	r0, [sp, #16]
   1c7bc:	add	r0, r0, #1
   1c7c0:	str	r0, [sp, #16]
   1c7c4:	b	1c79c <__assert_fail@plt+0xb418>
   1c7c8:	ldr	r0, [sp, #16]
   1c7cc:	str	r0, [sp, #24]
   1c7d0:	ldr	r0, [sp, #24]
   1c7d4:	movw	r1, #31
   1c7d8:	sub	r0, r1, r0
   1c7dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7e0:	ldr	r0, [fp, #-12]
   1c7e4:	lsl	r0, r0, #5
   1c7e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c7ec:	add	r0, r0, r1
   1c7f0:	str	r0, [fp, #-4]
   1c7f4:	ldr	r0, [fp, #-4]
   1c7f8:	mov	sp, fp
   1c7fc:	pop	{fp, pc}
   1c800:	push	{fp, lr}
   1c804:	mov	fp, sp
   1c808:	sub	sp, sp, #24
   1c80c:	str	r0, [fp, #-4]
   1c810:	str	r1, [fp, #-8]
   1c814:	ldr	r0, [fp, #-8]
   1c818:	lsr	r0, r0, #5
   1c81c:	str	r0, [sp, #12]
   1c820:	ldr	r0, [fp, #-4]
   1c824:	ldr	r1, [sp, #12]
   1c828:	add	r0, r0, r1, lsl #2
   1c82c:	ldr	r0, [r0]
   1c830:	mvn	r1, #0
   1c834:	eor	r0, r0, r1
   1c838:	ldr	r2, [fp, #-8]
   1c83c:	and	r2, r2, #31
   1c840:	lsl	r2, r1, r2
   1c844:	and	r0, r0, r2
   1c848:	ldr	r2, [sp, #12]
   1c84c:	ldr	r3, [fp, #-4]
   1c850:	ldr	ip, [sp, #12]
   1c854:	str	r1, [sp, #8]
   1c858:	mov	r1, r2
   1c85c:	mov	r2, r3
   1c860:	mov	r3, ip
   1c864:	ldr	ip, [sp, #8]
   1c868:	str	ip, [sp]
   1c86c:	bl	1c5f8 <__assert_fail@plt+0xb274>
   1c870:	mov	sp, fp
   1c874:	pop	{fp, pc}
   1c878:	sub	sp, sp, #12
   1c87c:	str	r0, [sp, #8]
   1c880:	str	r1, [sp, #4]
   1c884:	str	r2, [sp]
   1c888:	ldr	r0, [sp]
   1c88c:	mvn	r1, #0
   1c890:	add	r0, r0, r1
   1c894:	str	r0, [sp]
   1c898:	cmp	r0, #0
   1c89c:	blt	1c8cc <__assert_fail@plt+0xb548>
   1c8a0:	ldr	r0, [sp, #4]
   1c8a4:	add	r1, r0, #4
   1c8a8:	str	r1, [sp, #4]
   1c8ac:	ldr	r0, [r0]
   1c8b0:	mvn	r1, #0
   1c8b4:	eor	r0, r0, r1
   1c8b8:	ldr	r1, [sp, #8]
   1c8bc:	add	r2, r1, #4
   1c8c0:	str	r2, [sp, #8]
   1c8c4:	str	r0, [r1]
   1c8c8:	b	1c888 <__assert_fail@plt+0xb504>
   1c8cc:	add	sp, sp, #12
   1c8d0:	bx	lr
   1c8d4:	push	{fp, lr}
   1c8d8:	mov	fp, sp
   1c8dc:	sub	sp, sp, #16
   1c8e0:	str	r0, [sp, #8]
   1c8e4:	str	r1, [sp, #4]
   1c8e8:	str	r2, [sp]
   1c8ec:	ldr	r0, [sp, #4]
   1c8f0:	ldr	r0, [r0]
   1c8f4:	cmp	r0, #0
   1c8f8:	bne	1c948 <__assert_fail@plt+0xb5c4>
   1c8fc:	ldr	r0, [sp, #8]
   1c900:	movw	r1, #0
   1c904:	str	r1, [r0]
   1c908:	ldr	r0, [sp]
   1c90c:	mvn	r1, #0
   1c910:	add	r0, r0, r1
   1c914:	str	r0, [sp]
   1c918:	cmp	r0, #0
   1c91c:	bne	1c92c <__assert_fail@plt+0xb5a8>
   1c920:	movw	r0, #0
   1c924:	str	r0, [fp, #-4]
   1c928:	b	1c994 <__assert_fail@plt+0xb610>
   1c92c:	ldr	r0, [sp, #4]
   1c930:	add	r0, r0, #4
   1c934:	str	r0, [sp, #4]
   1c938:	ldr	r0, [sp, #8]
   1c93c:	add	r0, r0, #4
   1c940:	str	r0, [sp, #8]
   1c944:	b	1c8ec <__assert_fail@plt+0xb568>
   1c948:	ldr	r0, [sp, #4]
   1c94c:	ldr	r0, [r0]
   1c950:	movw	r1, #0
   1c954:	sub	r0, r1, r0
   1c958:	ldr	r1, [sp, #8]
   1c95c:	str	r0, [r1]
   1c960:	ldr	r0, [sp, #8]
   1c964:	add	r0, r0, #4
   1c968:	str	r0, [sp, #8]
   1c96c:	ldr	r1, [sp, #4]
   1c970:	add	r1, r1, #4
   1c974:	str	r1, [sp, #4]
   1c978:	ldr	r2, [sp]
   1c97c:	mvn	r3, #0
   1c980:	add	r2, r2, r3
   1c984:	str	r2, [sp]
   1c988:	bl	1c878 <__assert_fail@plt+0xb4f4>
   1c98c:	movw	r0, #1
   1c990:	str	r0, [fp, #-4]
   1c994:	ldr	r0, [fp, #-4]
   1c998:	mov	sp, fp
   1c99c:	pop	{fp, pc}
   1c9a0:	sub	sp, sp, #88	; 0x58
   1c9a4:	str	r0, [sp, #84]	; 0x54
   1c9a8:	str	r1, [sp, #80]	; 0x50
   1c9ac:	ldr	r0, [sp, #84]	; 0x54
   1c9b0:	movw	r1, #65535	; 0xffff
   1c9b4:	and	r0, r0, r1
   1c9b8:	str	r0, [sp, #60]	; 0x3c
   1c9bc:	ldr	r0, [sp, #84]	; 0x54
   1c9c0:	lsr	r0, r0, #16
   1c9c4:	str	r0, [sp, #56]	; 0x38
   1c9c8:	ldr	r0, [sp, #84]	; 0x54
   1c9cc:	mvn	r2, #0
   1c9d0:	eor	r0, r0, r2
   1c9d4:	ldr	r3, [sp, #56]	; 0x38
   1c9d8:	udiv	r0, r0, r3
   1c9dc:	str	r0, [sp, #52]	; 0x34
   1c9e0:	ldr	r0, [sp, #84]	; 0x54
   1c9e4:	eor	r0, r0, r2
   1c9e8:	ldr	r2, [sp, #52]	; 0x34
   1c9ec:	ldr	r3, [sp, #56]	; 0x38
   1c9f0:	mul	r2, r2, r3
   1c9f4:	sub	r0, r0, r2
   1c9f8:	lsl	r0, r0, #16
   1c9fc:	orr	r0, r0, r1
   1ca00:	str	r0, [sp, #76]	; 0x4c
   1ca04:	ldr	r0, [sp, #52]	; 0x34
   1ca08:	ldr	r1, [sp, #60]	; 0x3c
   1ca0c:	mul	r0, r0, r1
   1ca10:	str	r0, [sp, #68]	; 0x44
   1ca14:	ldr	r0, [sp, #76]	; 0x4c
   1ca18:	ldr	r1, [sp, #68]	; 0x44
   1ca1c:	cmp	r0, r1
   1ca20:	bcs	1ca8c <__assert_fail@plt+0xb708>
   1ca24:	ldr	r0, [sp, #52]	; 0x34
   1ca28:	mvn	r1, #0
   1ca2c:	add	r0, r0, r1
   1ca30:	str	r0, [sp, #52]	; 0x34
   1ca34:	ldr	r0, [sp, #84]	; 0x54
   1ca38:	ldr	r1, [sp, #76]	; 0x4c
   1ca3c:	add	r0, r1, r0
   1ca40:	str	r0, [sp, #76]	; 0x4c
   1ca44:	ldr	r0, [sp, #76]	; 0x4c
   1ca48:	ldr	r1, [sp, #84]	; 0x54
   1ca4c:	cmp	r0, r1
   1ca50:	bcc	1ca88 <__assert_fail@plt+0xb704>
   1ca54:	ldr	r0, [sp, #76]	; 0x4c
   1ca58:	ldr	r1, [sp, #68]	; 0x44
   1ca5c:	cmp	r0, r1
   1ca60:	bcs	1ca84 <__assert_fail@plt+0xb700>
   1ca64:	ldr	r0, [sp, #52]	; 0x34
   1ca68:	mvn	r1, #0
   1ca6c:	add	r0, r0, r1
   1ca70:	str	r0, [sp, #52]	; 0x34
   1ca74:	ldr	r0, [sp, #84]	; 0x54
   1ca78:	ldr	r1, [sp, #76]	; 0x4c
   1ca7c:	add	r0, r1, r0
   1ca80:	str	r0, [sp, #76]	; 0x4c
   1ca84:	b	1ca88 <__assert_fail@plt+0xb704>
   1ca88:	b	1ca8c <__assert_fail@plt+0xb708>
   1ca8c:	ldr	r0, [sp, #68]	; 0x44
   1ca90:	ldr	r1, [sp, #76]	; 0x4c
   1ca94:	sub	r0, r1, r0
   1ca98:	str	r0, [sp, #76]	; 0x4c
   1ca9c:	ldr	r0, [sp, #76]	; 0x4c
   1caa0:	lsr	r0, r0, #16
   1caa4:	ldr	r1, [sp, #52]	; 0x34
   1caa8:	mul	r0, r0, r1
   1caac:	ldr	r1, [sp, #76]	; 0x4c
   1cab0:	add	r0, r0, r1
   1cab4:	str	r0, [sp, #68]	; 0x44
   1cab8:	ldr	r0, [sp, #68]	; 0x44
   1cabc:	lsr	r0, r0, #16
   1cac0:	add	r0, r0, #1
   1cac4:	str	r0, [sp, #64]	; 0x40
   1cac8:	ldr	r0, [sp, #76]	; 0x4c
   1cacc:	lsl	r0, r0, #16
   1cad0:	movw	r1, #65535	; 0xffff
   1cad4:	add	r0, r0, r1
   1cad8:	ldr	r1, [sp, #64]	; 0x40
   1cadc:	ldr	r2, [sp, #84]	; 0x54
   1cae0:	mul	r1, r1, r2
   1cae4:	sub	r0, r0, r1
   1cae8:	str	r0, [sp, #76]	; 0x4c
   1caec:	ldr	r0, [sp, #76]	; 0x4c
   1caf0:	ldr	r1, [sp, #68]	; 0x44
   1caf4:	lsl	r1, r1, #16
   1caf8:	mvn	r2, #0
   1cafc:	and	r1, r1, r2
   1cb00:	cmp	r0, r1
   1cb04:	bcc	1cb28 <__assert_fail@plt+0xb7a4>
   1cb08:	ldr	r0, [sp, #64]	; 0x40
   1cb0c:	mvn	r1, #0
   1cb10:	add	r0, r0, r1
   1cb14:	str	r0, [sp, #64]	; 0x40
   1cb18:	ldr	r0, [sp, #84]	; 0x54
   1cb1c:	ldr	r1, [sp, #76]	; 0x4c
   1cb20:	add	r0, r1, r0
   1cb24:	str	r0, [sp, #76]	; 0x4c
   1cb28:	ldr	r0, [sp, #52]	; 0x34
   1cb2c:	lsl	r0, r0, #16
   1cb30:	ldr	r1, [sp, #64]	; 0x40
   1cb34:	add	r0, r0, r1
   1cb38:	str	r0, [sp, #72]	; 0x48
   1cb3c:	ldr	r0, [sp, #76]	; 0x4c
   1cb40:	ldr	r1, [sp, #84]	; 0x54
   1cb44:	cmp	r0, r1
   1cb48:	bcc	1cb68 <__assert_fail@plt+0xb7e4>
   1cb4c:	ldr	r0, [sp, #72]	; 0x48
   1cb50:	add	r0, r0, #1
   1cb54:	str	r0, [sp, #72]	; 0x48
   1cb58:	ldr	r0, [sp, #84]	; 0x54
   1cb5c:	ldr	r1, [sp, #76]	; 0x4c
   1cb60:	sub	r0, r1, r0
   1cb64:	str	r0, [sp, #76]	; 0x4c
   1cb68:	ldr	r0, [sp, #80]	; 0x50
   1cb6c:	cmp	r0, #0
   1cb70:	bls	1cd84 <__assert_fail@plt+0xba00>
   1cb74:	ldr	r0, [sp, #76]	; 0x4c
   1cb78:	mvn	r1, #0
   1cb7c:	eor	r0, r0, r1
   1cb80:	str	r0, [sp, #76]	; 0x4c
   1cb84:	ldr	r0, [sp, #80]	; 0x50
   1cb88:	ldr	r1, [sp, #76]	; 0x4c
   1cb8c:	add	r0, r1, r0
   1cb90:	str	r0, [sp, #76]	; 0x4c
   1cb94:	ldr	r0, [sp, #76]	; 0x4c
   1cb98:	ldr	r1, [sp, #80]	; 0x50
   1cb9c:	cmp	r0, r1
   1cba0:	bcs	1cbf4 <__assert_fail@plt+0xb870>
   1cba4:	ldr	r0, [sp, #72]	; 0x48
   1cba8:	mvn	r1, #0
   1cbac:	add	r0, r0, r1
   1cbb0:	str	r0, [sp, #72]	; 0x48
   1cbb4:	ldr	r0, [sp, #76]	; 0x4c
   1cbb8:	ldr	r1, [sp, #84]	; 0x54
   1cbbc:	cmp	r0, r1
   1cbc0:	bcc	1cbe4 <__assert_fail@plt+0xb860>
   1cbc4:	ldr	r0, [sp, #72]	; 0x48
   1cbc8:	mvn	r1, #0
   1cbcc:	add	r0, r0, r1
   1cbd0:	str	r0, [sp, #72]	; 0x48
   1cbd4:	ldr	r0, [sp, #84]	; 0x54
   1cbd8:	ldr	r1, [sp, #76]	; 0x4c
   1cbdc:	sub	r0, r1, r0
   1cbe0:	str	r0, [sp, #76]	; 0x4c
   1cbe4:	ldr	r0, [sp, #84]	; 0x54
   1cbe8:	ldr	r1, [sp, #76]	; 0x4c
   1cbec:	sub	r0, r1, r0
   1cbf0:	str	r0, [sp, #76]	; 0x4c
   1cbf4:	b	1cbf8 <__assert_fail@plt+0xb874>
   1cbf8:	movw	r0, #32
   1cbfc:	str	r0, [sp, #40]	; 0x28
   1cc00:	ldr	r0, [sp, #80]	; 0x50
   1cc04:	str	r0, [sp, #4]
   1cc08:	ldr	r0, [sp, #72]	; 0x48
   1cc0c:	str	r0, [sp]
   1cc10:	ldr	r0, [sp, #4]
   1cc14:	movw	r1, #65535	; 0xffff
   1cc18:	and	r0, r0, r1
   1cc1c:	str	r0, [sp, #20]
   1cc20:	ldr	r0, [sp, #4]
   1cc24:	lsr	r0, r0, #16
   1cc28:	str	r0, [sp, #12]
   1cc2c:	ldr	r0, [sp]
   1cc30:	and	r0, r0, r1
   1cc34:	str	r0, [sp, #16]
   1cc38:	ldr	r0, [sp]
   1cc3c:	lsr	r0, r0, #16
   1cc40:	str	r0, [sp, #8]
   1cc44:	ldr	r0, [sp, #20]
   1cc48:	ldr	r1, [sp, #16]
   1cc4c:	mul	r0, r0, r1
   1cc50:	str	r0, [sp, #36]	; 0x24
   1cc54:	ldr	r0, [sp, #20]
   1cc58:	ldr	r1, [sp, #8]
   1cc5c:	mul	r0, r0, r1
   1cc60:	str	r0, [sp, #32]
   1cc64:	ldr	r0, [sp, #12]
   1cc68:	ldr	r1, [sp, #16]
   1cc6c:	mul	r0, r0, r1
   1cc70:	str	r0, [sp, #28]
   1cc74:	ldr	r0, [sp, #12]
   1cc78:	ldr	r1, [sp, #8]
   1cc7c:	mul	r0, r0, r1
   1cc80:	str	r0, [sp, #24]
   1cc84:	ldr	r0, [sp, #36]	; 0x24
   1cc88:	lsr	r0, r0, #16
   1cc8c:	ldr	r1, [sp, #32]
   1cc90:	add	r0, r1, r0
   1cc94:	str	r0, [sp, #32]
   1cc98:	ldr	r0, [sp, #28]
   1cc9c:	ldr	r1, [sp, #32]
   1cca0:	add	r0, r1, r0
   1cca4:	str	r0, [sp, #32]
   1cca8:	ldr	r0, [sp, #32]
   1ccac:	ldr	r1, [sp, #28]
   1ccb0:	cmp	r0, r1
   1ccb4:	bcs	1ccc4 <__assert_fail@plt+0xb940>
   1ccb8:	ldr	r0, [sp, #24]
   1ccbc:	add	r0, r0, #65536	; 0x10000
   1ccc0:	str	r0, [sp, #24]
   1ccc4:	ldr	r0, [sp, #24]
   1ccc8:	ldr	r1, [sp, #32]
   1cccc:	lsr	r1, r1, #16
   1ccd0:	add	r0, r0, r1
   1ccd4:	str	r0, [sp, #48]	; 0x30
   1ccd8:	ldr	r0, [sp, #32]
   1ccdc:	lsl	r0, r0, #16
   1cce0:	ldr	r1, [sp, #36]	; 0x24
   1cce4:	movw	r2, #65535	; 0xffff
   1cce8:	and	r1, r1, r2
   1ccec:	add	r0, r0, r1
   1ccf0:	str	r0, [sp, #44]	; 0x2c
   1ccf4:	ldr	r0, [sp, #48]	; 0x30
   1ccf8:	ldr	r1, [sp, #76]	; 0x4c
   1ccfc:	add	r0, r1, r0
   1cd00:	str	r0, [sp, #76]	; 0x4c
   1cd04:	ldr	r0, [sp, #76]	; 0x4c
   1cd08:	ldr	r1, [sp, #48]	; 0x30
   1cd0c:	cmp	r0, r1
   1cd10:	bcs	1cd80 <__assert_fail@plt+0xb9fc>
   1cd14:	ldr	r0, [sp, #72]	; 0x48
   1cd18:	mvn	r1, #0
   1cd1c:	add	r0, r0, r1
   1cd20:	str	r0, [sp, #72]	; 0x48
   1cd24:	ldr	r0, [sp, #76]	; 0x4c
   1cd28:	ldr	r1, [sp, #84]	; 0x54
   1cd2c:	cmp	r0, r1
   1cd30:	movw	r0, #0
   1cd34:	movhi	r0, #1
   1cd38:	and	r0, r0, #1
   1cd3c:	ldr	r1, [sp, #76]	; 0x4c
   1cd40:	ldr	r2, [sp, #84]	; 0x54
   1cd44:	cmp	r1, r2
   1cd48:	movw	r1, #0
   1cd4c:	moveq	r1, #1
   1cd50:	and	r1, r1, #1
   1cd54:	ldr	r2, [sp, #44]	; 0x2c
   1cd58:	ldr	r3, [sp, #80]	; 0x50
   1cd5c:	cmp	r2, r3
   1cd60:	movw	r2, #0
   1cd64:	movhi	r2, #1
   1cd68:	and	r2, r2, #1
   1cd6c:	and	r1, r1, r2
   1cd70:	orr	r0, r0, r1
   1cd74:	ldr	r1, [sp, #72]	; 0x48
   1cd78:	sub	r0, r1, r0
   1cd7c:	str	r0, [sp, #72]	; 0x48
   1cd80:	b	1cd84 <__assert_fail@plt+0xba00>
   1cd84:	ldr	r0, [sp, #72]	; 0x48
   1cd88:	add	sp, sp, #88	; 0x58
   1cd8c:	bx	lr
   1cd90:	push	{fp, lr}
   1cd94:	mov	fp, sp
   1cd98:	sub	sp, sp, #40	; 0x28
   1cd9c:	str	r0, [fp, #-8]
   1cda0:	str	r1, [fp, #-12]
   1cda4:	str	r2, [fp, #-16]
   1cda8:	str	r3, [sp, #20]
   1cdac:	ldr	r0, [sp, #20]
   1cdb0:	cmp	r0, #0
   1cdb4:	ble	1cdbc <__assert_fail@plt+0xba38>
   1cdb8:	b	1cddc <__assert_fail@plt+0xba58>
   1cdbc:	movw	r0, #31387	; 0x7a9b
   1cdc0:	movt	r0, #3
   1cdc4:	movw	r1, #30584	; 0x7778
   1cdc8:	movt	r1, #3
   1cdcc:	movw	r2, #1316	; 0x524
   1cdd0:	movw	r3, #31394	; 0x7aa2
   1cdd4:	movt	r3, #3
   1cdd8:	bl	11384 <__assert_fail@plt>
   1cddc:	ldr	r0, [fp, #-16]
   1cde0:	ldr	r1, [sp, #20]
   1cde4:	sub	r1, r1, #1
   1cde8:	add	r0, r0, r1, lsl #2
   1cdec:	ldr	r0, [r0]
   1cdf0:	cmp	r0, #0
   1cdf4:	bls	1cdfc <__assert_fail@plt+0xba78>
   1cdf8:	b	1ce1c <__assert_fail@plt+0xba98>
   1cdfc:	movw	r0, #31454	; 0x7ade
   1ce00:	movt	r0, #3
   1ce04:	movw	r1, #30584	; 0x7778
   1ce08:	movt	r1, #3
   1ce0c:	movw	r2, #1317	; 0x525
   1ce10:	movw	r3, #31394	; 0x7aa2
   1ce14:	movt	r3, #3
   1ce18:	bl	11384 <__assert_fail@plt>
   1ce1c:	ldr	r0, [fp, #-12]
   1ce20:	bl	1ce88 <__assert_fail@plt+0xbb04>
   1ce24:	str	r0, [sp, #16]
   1ce28:	ldr	r0, [sp, #16]
   1ce2c:	cmp	r0, #0
   1ce30:	beq	1ce50 <__assert_fail@plt+0xbacc>
   1ce34:	ldr	r0, [fp, #-8]
   1ce38:	ldr	r1, [sp, #16]
   1ce3c:	ldr	r2, [fp, #-16]
   1ce40:	ldr	r3, [sp, #20]
   1ce44:	bl	1cf88 <__assert_fail@plt+0xbc04>
   1ce48:	str	r0, [fp, #-4]
   1ce4c:	b	1ce7c <__assert_fail@plt+0xbaf8>
   1ce50:	ldr	r1, [fp, #-12]
   1ce54:	add	r0, sp, #8
   1ce58:	bl	1d0d8 <__assert_fail@plt+0xbd54>
   1ce5c:	ldr	r0, [fp, #-8]
   1ce60:	ldr	r1, [fp, #-12]
   1ce64:	ldr	r3, [fp, #-16]
   1ce68:	ldr	lr, [sp, #20]
   1ce6c:	add	r2, sp, #8
   1ce70:	str	lr, [sp]
   1ce74:	bl	1d154 <__assert_fail@plt+0xbdd0>
   1ce78:	str	r0, [fp, #-4]
   1ce7c:	ldr	r0, [fp, #-4]
   1ce80:	mov	sp, fp
   1ce84:	pop	{fp, pc}
   1ce88:	sub	sp, sp, #12
   1ce8c:	str	r0, [sp, #4]
   1ce90:	ldr	r0, [sp, #4]
   1ce94:	cmp	r0, #2
   1ce98:	str	r0, [sp]
   1ce9c:	beq	1cf14 <__assert_fail@plt+0xbb90>
   1cea0:	b	1cea4 <__assert_fail@plt+0xbb20>
   1cea4:	ldr	r0, [sp]
   1cea8:	cmp	r0, #4
   1ceac:	beq	1cf20 <__assert_fail@plt+0xbb9c>
   1ceb0:	b	1ceb4 <__assert_fail@plt+0xbb30>
   1ceb4:	ldr	r0, [sp]
   1ceb8:	cmp	r0, #8
   1cebc:	beq	1cf2c <__assert_fail@plt+0xbba8>
   1cec0:	b	1cec4 <__assert_fail@plt+0xbb40>
   1cec4:	ldr	r0, [sp]
   1cec8:	cmp	r0, #16
   1cecc:	beq	1cf38 <__assert_fail@plt+0xbbb4>
   1ced0:	b	1ced4 <__assert_fail@plt+0xbb50>
   1ced4:	ldr	r0, [sp]
   1ced8:	cmp	r0, #32
   1cedc:	beq	1cf44 <__assert_fail@plt+0xbbc0>
   1cee0:	b	1cee4 <__assert_fail@plt+0xbb60>
   1cee4:	ldr	r0, [sp]
   1cee8:	cmp	r0, #64	; 0x40
   1ceec:	beq	1cf50 <__assert_fail@plt+0xbbcc>
   1cef0:	b	1cef4 <__assert_fail@plt+0xbb70>
   1cef4:	ldr	r0, [sp]
   1cef8:	cmp	r0, #128	; 0x80
   1cefc:	beq	1cf5c <__assert_fail@plt+0xbbd8>
   1cf00:	b	1cf04 <__assert_fail@plt+0xbb80>
   1cf04:	ldr	r0, [sp]
   1cf08:	cmp	r0, #256	; 0x100
   1cf0c:	beq	1cf68 <__assert_fail@plt+0xbbe4>
   1cf10:	b	1cf74 <__assert_fail@plt+0xbbf0>
   1cf14:	movw	r0, #1
   1cf18:	str	r0, [sp, #8]
   1cf1c:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf20:	movw	r0, #2
   1cf24:	str	r0, [sp, #8]
   1cf28:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf2c:	movw	r0, #3
   1cf30:	str	r0, [sp, #8]
   1cf34:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf38:	movw	r0, #4
   1cf3c:	str	r0, [sp, #8]
   1cf40:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf44:	movw	r0, #5
   1cf48:	str	r0, [sp, #8]
   1cf4c:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf50:	movw	r0, #6
   1cf54:	str	r0, [sp, #8]
   1cf58:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf5c:	movw	r0, #7
   1cf60:	str	r0, [sp, #8]
   1cf64:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf68:	movw	r0, #8
   1cf6c:	str	r0, [sp, #8]
   1cf70:	b	1cf7c <__assert_fail@plt+0xbbf8>
   1cf74:	movw	r0, #0
   1cf78:	str	r0, [sp, #8]
   1cf7c:	ldr	r0, [sp, #8]
   1cf80:	add	sp, sp, #12
   1cf84:	bx	lr
   1cf88:	push	{fp, lr}
   1cf8c:	mov	fp, sp
   1cf90:	sub	sp, sp, #48	; 0x30
   1cf94:	str	r0, [fp, #-4]
   1cf98:	str	r1, [fp, #-8]
   1cf9c:	str	r2, [fp, #-12]
   1cfa0:	str	r3, [fp, #-16]
   1cfa4:	ldr	r0, [fp, #-16]
   1cfa8:	sub	r0, r0, #1
   1cfac:	lsl	r1, r0, #5
   1cfb0:	ldr	r2, [fp, #-12]
   1cfb4:	add	r0, r2, r0, lsl #2
   1cfb8:	ldr	r0, [r0]
   1cfbc:	str	r1, [sp, #4]
   1cfc0:	bl	25208 <__assert_fail@plt+0x13e84>
   1cfc4:	ldr	r1, [sp, #4]
   1cfc8:	add	r0, r1, r0
   1cfcc:	ldr	r1, [fp, #-8]
   1cfd0:	add	r0, r0, r1
   1cfd4:	sub	r0, r0, #1
   1cfd8:	ldr	r1, [fp, #-8]
   1cfdc:	udiv	r0, r0, r1
   1cfe0:	str	r0, [sp, #24]
   1cfe4:	ldr	r0, [fp, #-8]
   1cfe8:	movw	r1, #1
   1cfec:	lsl	r0, r1, r0
   1cff0:	sub	r0, r0, #1
   1cff4:	strb	r0, [fp, #-17]	; 0xffffffef
   1cff8:	movw	r0, #0
   1cffc:	str	r0, [sp, #16]
   1d000:	ldr	r1, [sp, #24]
   1d004:	str	r1, [sp, #20]
   1d008:	str	r0, [sp, #12]
   1d00c:	ldr	r0, [sp, #20]
   1d010:	mvn	r1, #0
   1d014:	add	r1, r0, r1
   1d018:	str	r1, [sp, #20]
   1d01c:	cmp	r0, #0
   1d020:	bls	1d0cc <__assert_fail@plt+0xbd48>
   1d024:	ldr	r0, [fp, #-12]
   1d028:	ldr	r1, [sp, #16]
   1d02c:	add	r0, r0, r1, lsl #2
   1d030:	ldr	r0, [r0]
   1d034:	ldr	r1, [sp, #12]
   1d038:	lsr	r0, r0, r1
   1d03c:	strb	r0, [sp, #11]
   1d040:	ldr	r0, [fp, #-8]
   1d044:	ldr	r1, [sp, #12]
   1d048:	add	r0, r1, r0
   1d04c:	str	r0, [sp, #12]
   1d050:	ldr	r0, [sp, #12]
   1d054:	cmp	r0, #32
   1d058:	bcc	1d0ac <__assert_fail@plt+0xbd28>
   1d05c:	ldr	r0, [sp, #16]
   1d060:	add	r0, r0, #1
   1d064:	str	r0, [sp, #16]
   1d068:	ldr	r1, [fp, #-16]
   1d06c:	cmp	r0, r1
   1d070:	bge	1d0ac <__assert_fail@plt+0xbd28>
   1d074:	ldr	r0, [sp, #12]
   1d078:	sub	r0, r0, #32
   1d07c:	str	r0, [sp, #12]
   1d080:	ldr	r0, [fp, #-12]
   1d084:	ldr	r1, [sp, #16]
   1d088:	add	r0, r0, r1, lsl #2
   1d08c:	ldr	r0, [r0]
   1d090:	ldr	r1, [fp, #-8]
   1d094:	ldr	r2, [sp, #12]
   1d098:	sub	r1, r1, r2
   1d09c:	lsl	r0, r0, r1
   1d0a0:	ldrb	r1, [sp, #11]
   1d0a4:	orr	r0, r1, r0
   1d0a8:	strb	r0, [sp, #11]
   1d0ac:	ldrb	r0, [sp, #11]
   1d0b0:	ldrb	r1, [fp, #-17]	; 0xffffffef
   1d0b4:	and	r0, r0, r1
   1d0b8:	ldr	r1, [fp, #-4]
   1d0bc:	ldr	r2, [sp, #20]
   1d0c0:	add	r1, r1, r2
   1d0c4:	strb	r0, [r1]
   1d0c8:	b	1d00c <__assert_fail@plt+0xbc88>
   1d0cc:	ldr	r0, [sp, #24]
   1d0d0:	mov	sp, fp
   1d0d4:	pop	{fp, pc}
   1d0d8:	sub	sp, sp, #20
   1d0dc:	str	r0, [sp, #16]
   1d0e0:	str	r1, [sp, #12]
   1d0e4:	ldr	r0, [sp, #12]
   1d0e8:	mvn	r1, #0
   1d0ec:	udiv	r0, r1, r0
   1d0f0:	str	r0, [sp, #8]
   1d0f4:	movw	r0, #1
   1d0f8:	str	r0, [sp]
   1d0fc:	ldr	r0, [sp, #12]
   1d100:	str	r0, [sp, #4]
   1d104:	ldr	r0, [sp, #4]
   1d108:	ldr	r1, [sp, #8]
   1d10c:	cmp	r0, r1
   1d110:	bhi	1d134 <__assert_fail@plt+0xbdb0>
   1d114:	ldr	r0, [sp, #12]
   1d118:	ldr	r1, [sp, #4]
   1d11c:	mul	r0, r1, r0
   1d120:	str	r0, [sp, #4]
   1d124:	ldr	r0, [sp]
   1d128:	add	r0, r0, #1
   1d12c:	str	r0, [sp]
   1d130:	b	1d104 <__assert_fail@plt+0xbd80>
   1d134:	ldr	r0, [sp]
   1d138:	ldr	r1, [sp, #16]
   1d13c:	str	r0, [r1]
   1d140:	ldr	r0, [sp, #4]
   1d144:	ldr	r1, [sp, #16]
   1d148:	str	r0, [r1, #4]
   1d14c:	add	sp, sp, #20
   1d150:	bx	lr
   1d154:	push	{fp, lr}
   1d158:	mov	fp, sp
   1d15c:	sub	sp, sp, #80	; 0x50
   1d160:	ldr	ip, [fp, #8]
   1d164:	str	r0, [fp, #-4]
   1d168:	str	r1, [fp, #-8]
   1d16c:	str	r2, [fp, #-12]
   1d170:	str	r3, [fp, #-16]
   1d174:	ldr	r1, [fp, #-8]
   1d178:	sub	r0, fp, #32
   1d17c:	str	ip, [sp, #8]
   1d180:	bl	252f8 <__assert_fail@plt+0x13f74>
   1d184:	movw	r0, #0
   1d188:	str	r0, [fp, #-36]	; 0xffffffdc
   1d18c:	ldr	r0, [fp, #8]
   1d190:	cmp	r0, #1
   1d194:	ble	1d274 <__assert_fail@plt+0xbef0>
   1d198:	ldr	r0, [fp, #-12]
   1d19c:	ldr	r1, [r0, #4]
   1d1a0:	add	r0, sp, #24
   1d1a4:	bl	252f8 <__assert_fail@plt+0x13f74>
   1d1a8:	ldr	r0, [fp, #-16]
   1d1ac:	ldr	r2, [fp, #8]
   1d1b0:	add	r3, sp, #24
   1d1b4:	str	r0, [sp, #4]
   1d1b8:	ldr	r1, [sp, #4]
   1d1bc:	bl	25418 <__assert_fail@plt+0x14094>
   1d1c0:	str	r0, [sp, #20]
   1d1c4:	ldr	r0, [fp, #-16]
   1d1c8:	ldr	r1, [fp, #8]
   1d1cc:	sub	r1, r1, #1
   1d1d0:	add	r0, r0, r1, lsl #2
   1d1d4:	ldr	r0, [r0]
   1d1d8:	cmp	r0, #0
   1d1dc:	movw	r0, #0
   1d1e0:	moveq	r0, #1
   1d1e4:	and	r0, r0, #1
   1d1e8:	ldr	r1, [fp, #8]
   1d1ec:	sub	r0, r1, r0
   1d1f0:	str	r0, [fp, #8]
   1d1f4:	ldr	r0, [fp, #-4]
   1d1f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d1fc:	add	r0, r0, r1
   1d200:	ldr	r1, [sp, #20]
   1d204:	sub	r2, fp, #32
   1d208:	bl	26930 <__assert_fail@plt+0x155ac>
   1d20c:	str	r0, [sp, #16]
   1d210:	ldr	r0, [sp, #16]
   1d214:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d218:	add	r0, r1, r0
   1d21c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d220:	ldr	r0, [sp, #16]
   1d224:	ldr	r1, [fp, #-12]
   1d228:	ldr	r1, [r1]
   1d22c:	cmp	r0, r1
   1d230:	bcs	1d260 <__assert_fail@plt+0xbedc>
   1d234:	ldr	r0, [fp, #-4]
   1d238:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d23c:	add	r2, r1, #1
   1d240:	str	r2, [fp, #-36]	; 0xffffffdc
   1d244:	add	r0, r0, r1
   1d248:	movw	r1, #0
   1d24c:	strb	r1, [r0]
   1d250:	ldr	r0, [sp, #16]
   1d254:	add	r0, r0, #1
   1d258:	str	r0, [sp, #16]
   1d25c:	b	1d220 <__assert_fail@plt+0xbe9c>
   1d260:	b	1d264 <__assert_fail@plt+0xbee0>
   1d264:	ldr	r0, [fp, #8]
   1d268:	cmp	r0, #1
   1d26c:	bgt	1d1a8 <__assert_fail@plt+0xbe24>
   1d270:	b	1d274 <__assert_fail@plt+0xbef0>
   1d274:	ldr	r0, [fp, #-4]
   1d278:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d27c:	add	r0, r0, r1
   1d280:	ldr	r1, [fp, #-16]
   1d284:	ldr	r1, [r1]
   1d288:	sub	r2, fp, #32
   1d28c:	bl	26930 <__assert_fail@plt+0x155ac>
   1d290:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d294:	add	r0, r1, r0
   1d298:	str	r0, [fp, #-36]	; 0xffffffdc
   1d29c:	movw	r0, #0
   1d2a0:	str	r0, [sp, #40]	; 0x28
   1d2a4:	ldr	r0, [sp, #40]	; 0x28
   1d2a8:	lsl	r0, r0, #1
   1d2ac:	add	r0, r0, #1
   1d2b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d2b4:	cmp	r0, r1
   1d2b8:	bcs	1d32c <__assert_fail@plt+0xbfa8>
   1d2bc:	ldr	r0, [fp, #-4]
   1d2c0:	ldr	r1, [sp, #40]	; 0x28
   1d2c4:	add	r0, r0, r1
   1d2c8:	ldrb	r0, [r0]
   1d2cc:	strb	r0, [sp, #15]
   1d2d0:	ldr	r0, [fp, #-4]
   1d2d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d2d8:	ldr	r2, [sp, #40]	; 0x28
   1d2dc:	sub	r1, r1, r2
   1d2e0:	sub	r1, r1, #1
   1d2e4:	add	r0, r0, r1
   1d2e8:	ldrb	r0, [r0]
   1d2ec:	ldr	r1, [fp, #-4]
   1d2f0:	ldr	r2, [sp, #40]	; 0x28
   1d2f4:	add	r1, r1, r2
   1d2f8:	strb	r0, [r1]
   1d2fc:	ldrb	r0, [sp, #15]
   1d300:	ldr	r1, [fp, #-4]
   1d304:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d308:	ldr	r3, [sp, #40]	; 0x28
   1d30c:	sub	r2, r2, r3
   1d310:	sub	r2, r2, #1
   1d314:	add	r1, r1, r2
   1d318:	strb	r0, [r1]
   1d31c:	ldr	r0, [sp, #40]	; 0x28
   1d320:	add	r0, r0, #1
   1d324:	str	r0, [sp, #40]	; 0x28
   1d328:	b	1d2a4 <__assert_fail@plt+0xbf20>
   1d32c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d330:	mov	sp, fp
   1d334:	pop	{fp, pc}
   1d338:	push	{fp, lr}
   1d33c:	mov	fp, sp
   1d340:	sub	sp, sp, #40	; 0x28
   1d344:	str	r0, [fp, #-8]
   1d348:	str	r1, [fp, #-12]
   1d34c:	str	r2, [fp, #-16]
   1d350:	str	r3, [sp, #20]
   1d354:	ldr	r0, [fp, #-16]
   1d358:	cmp	r0, #0
   1d35c:	bne	1d36c <__assert_fail@plt+0xbfe8>
   1d360:	movw	r0, #0
   1d364:	str	r0, [fp, #-4]
   1d368:	b	1d3cc <__assert_fail@plt+0xc048>
   1d36c:	ldr	r0, [sp, #20]
   1d370:	bl	1ce88 <__assert_fail@plt+0xbb04>
   1d374:	str	r0, [sp, #16]
   1d378:	ldr	r0, [sp, #16]
   1d37c:	cmp	r0, #0
   1d380:	beq	1d3a0 <__assert_fail@plt+0xc01c>
   1d384:	ldr	r0, [fp, #-8]
   1d388:	ldr	r1, [fp, #-12]
   1d38c:	ldr	r2, [fp, #-16]
   1d390:	ldr	r3, [sp, #16]
   1d394:	bl	1d3d8 <__assert_fail@plt+0xc054>
   1d398:	str	r0, [fp, #-4]
   1d39c:	b	1d3cc <__assert_fail@plt+0xc048>
   1d3a0:	ldr	r1, [sp, #20]
   1d3a4:	add	r0, sp, #8
   1d3a8:	bl	1d0d8 <__assert_fail@plt+0xbd54>
   1d3ac:	ldr	r0, [fp, #-8]
   1d3b0:	ldr	r1, [fp, #-12]
   1d3b4:	ldr	r2, [fp, #-16]
   1d3b8:	ldr	r3, [sp, #20]
   1d3bc:	add	lr, sp, #8
   1d3c0:	str	lr, [sp]
   1d3c4:	bl	1d4f4 <__assert_fail@plt+0xc170>
   1d3c8:	str	r0, [fp, #-4]
   1d3cc:	ldr	r0, [fp, #-4]
   1d3d0:	mov	sp, fp
   1d3d4:	pop	{fp, pc}
   1d3d8:	push	{fp, lr}
   1d3dc:	mov	fp, sp
   1d3e0:	sub	sp, sp, #32
   1d3e4:	str	r0, [fp, #-4]
   1d3e8:	str	r1, [fp, #-8]
   1d3ec:	str	r2, [fp, #-12]
   1d3f0:	str	r3, [sp, #16]
   1d3f4:	movw	r0, #0
   1d3f8:	str	r0, [sp, #8]
   1d3fc:	str	r0, [sp, #12]
   1d400:	str	r0, [sp, #4]
   1d404:	ldr	r0, [fp, #-12]
   1d408:	mvn	r1, #0
   1d40c:	add	r1, r0, r1
   1d410:	str	r1, [fp, #-12]
   1d414:	cmp	r0, #0
   1d418:	bls	1d4ac <__assert_fail@plt+0xc128>
   1d41c:	ldr	r0, [fp, #-8]
   1d420:	ldr	r1, [fp, #-12]
   1d424:	add	r0, r0, r1
   1d428:	ldrb	r0, [r0]
   1d42c:	ldr	r1, [sp, #4]
   1d430:	lsl	r0, r0, r1
   1d434:	ldr	r1, [sp, #8]
   1d438:	orr	r0, r1, r0
   1d43c:	str	r0, [sp, #8]
   1d440:	ldr	r0, [sp, #16]
   1d444:	ldr	r1, [sp, #4]
   1d448:	add	r0, r1, r0
   1d44c:	str	r0, [sp, #4]
   1d450:	ldr	r0, [sp, #4]
   1d454:	cmp	r0, #32
   1d458:	bcc	1d4a8 <__assert_fail@plt+0xc124>
   1d45c:	ldr	r0, [sp, #4]
   1d460:	sub	r0, r0, #32
   1d464:	str	r0, [sp, #4]
   1d468:	ldr	r0, [sp, #8]
   1d46c:	ldr	r1, [fp, #-4]
   1d470:	ldr	r2, [sp, #12]
   1d474:	add	r3, r2, #1
   1d478:	str	r3, [sp, #12]
   1d47c:	add	r1, r1, r2, lsl #2
   1d480:	str	r0, [r1]
   1d484:	ldr	r0, [fp, #-8]
   1d488:	ldr	r1, [fp, #-12]
   1d48c:	add	r0, r0, r1
   1d490:	ldrb	r0, [r0]
   1d494:	ldr	r1, [sp, #16]
   1d498:	ldr	r2, [sp, #4]
   1d49c:	sub	r1, r1, r2
   1d4a0:	lsr	r0, r0, r1
   1d4a4:	str	r0, [sp, #8]
   1d4a8:	b	1d404 <__assert_fail@plt+0xc080>
   1d4ac:	ldr	r0, [sp, #8]
   1d4b0:	cmp	r0, #0
   1d4b4:	beq	1d4d8 <__assert_fail@plt+0xc154>
   1d4b8:	ldr	r0, [sp, #8]
   1d4bc:	ldr	r1, [fp, #-4]
   1d4c0:	ldr	r2, [sp, #12]
   1d4c4:	add	r3, r2, #1
   1d4c8:	str	r3, [sp, #12]
   1d4cc:	add	r1, r1, r2, lsl #2
   1d4d0:	str	r0, [r1]
   1d4d4:	b	1d4e8 <__assert_fail@plt+0xc164>
   1d4d8:	ldr	r0, [fp, #-4]
   1d4dc:	ldr	r1, [sp, #12]
   1d4e0:	bl	1b4e4 <__assert_fail@plt+0xa160>
   1d4e4:	str	r0, [sp, #12]
   1d4e8:	ldr	r0, [sp, #12]
   1d4ec:	mov	sp, fp
   1d4f0:	pop	{fp, pc}
   1d4f4:	push	{fp, lr}
   1d4f8:	mov	fp, sp
   1d4fc:	sub	sp, sp, #40	; 0x28
   1d500:	ldr	ip, [fp, #8]
   1d504:	str	r0, [fp, #-4]
   1d508:	str	r1, [fp, #-8]
   1d50c:	str	r2, [fp, #-12]
   1d510:	str	r3, [fp, #-16]
   1d514:	ldr	r0, [fp, #-12]
   1d518:	cmp	r0, #0
   1d51c:	str	ip, [sp]
   1d520:	bls	1d528 <__assert_fail@plt+0xc1a4>
   1d524:	b	1d548 <__assert_fail@plt+0xc1c4>
   1d528:	movw	r0, #33676	; 0x838c
   1d52c:	movt	r0, #3
   1d530:	movw	r1, #30584	; 0x7778
   1d534:	movt	r1, #3
   1d538:	movw	r2, #1370	; 0x55a
   1d53c:	movw	r3, #33683	; 0x8393
   1d540:	movt	r3, #3
   1d544:	bl	11384 <__assert_fail@plt>
   1d548:	ldr	r0, [fp, #-12]
   1d54c:	sub	r0, r0, #1
   1d550:	ldr	r1, [fp, #8]
   1d554:	ldr	r1, [r1]
   1d558:	udiv	r2, r0, r1
   1d55c:	mls	r0, r2, r1, r0
   1d560:	add	r0, r0, #1
   1d564:	str	r0, [sp, #12]
   1d568:	movw	r0, #0
   1d56c:	str	r0, [sp, #8]
   1d570:	ldr	r0, [fp, #-8]
   1d574:	ldr	r1, [sp, #8]
   1d578:	add	r2, r1, #1
   1d57c:	str	r2, [sp, #8]
   1d580:	add	r0, r0, r1
   1d584:	ldrb	r0, [r0]
   1d588:	str	r0, [sp, #16]
   1d58c:	ldr	r0, [sp, #12]
   1d590:	mvn	r1, #0
   1d594:	add	r0, r0, r1
   1d598:	str	r0, [sp, #12]
   1d59c:	cmp	r0, #0
   1d5a0:	beq	1d5d4 <__assert_fail@plt+0xc250>
   1d5a4:	ldr	r0, [sp, #16]
   1d5a8:	ldr	r1, [fp, #-16]
   1d5ac:	mul	r0, r0, r1
   1d5b0:	ldr	r1, [fp, #-8]
   1d5b4:	ldr	r2, [sp, #8]
   1d5b8:	add	r3, r2, #1
   1d5bc:	str	r3, [sp, #8]
   1d5c0:	add	r1, r1, r2
   1d5c4:	ldrb	r1, [r1]
   1d5c8:	add	r0, r0, r1
   1d5cc:	str	r0, [sp, #16]
   1d5d0:	b	1d58c <__assert_fail@plt+0xc208>
   1d5d4:	ldr	r0, [sp, #16]
   1d5d8:	ldr	r1, [fp, #-4]
   1d5dc:	str	r0, [r1]
   1d5e0:	movw	r0, #1
   1d5e4:	str	r0, [sp, #20]
   1d5e8:	ldr	r0, [sp, #8]
   1d5ec:	ldr	r1, [fp, #-12]
   1d5f0:	cmp	r0, r1
   1d5f4:	bcs	1d6d4 <__assert_fail@plt+0xc350>
   1d5f8:	ldr	r0, [fp, #-8]
   1d5fc:	ldr	r1, [sp, #8]
   1d600:	add	r2, r1, #1
   1d604:	str	r2, [sp, #8]
   1d608:	add	r0, r0, r1
   1d60c:	ldrb	r0, [r0]
   1d610:	str	r0, [sp, #16]
   1d614:	movw	r0, #1
   1d618:	str	r0, [sp, #12]
   1d61c:	ldr	r0, [sp, #12]
   1d620:	ldr	r1, [fp, #8]
   1d624:	ldr	r1, [r1]
   1d628:	cmp	r0, r1
   1d62c:	bcs	1d66c <__assert_fail@plt+0xc2e8>
   1d630:	ldr	r0, [sp, #16]
   1d634:	ldr	r1, [fp, #-16]
   1d638:	mul	r0, r0, r1
   1d63c:	ldr	r1, [fp, #-8]
   1d640:	ldr	r2, [sp, #8]
   1d644:	add	r3, r2, #1
   1d648:	str	r3, [sp, #8]
   1d64c:	add	r1, r1, r2
   1d650:	ldrb	r1, [r1]
   1d654:	add	r0, r0, r1
   1d658:	str	r0, [sp, #16]
   1d65c:	ldr	r0, [sp, #12]
   1d660:	add	r0, r0, #1
   1d664:	str	r0, [sp, #12]
   1d668:	b	1d61c <__assert_fail@plt+0xc298>
   1d66c:	ldr	r0, [fp, #-4]
   1d670:	ldr	r1, [fp, #-4]
   1d674:	ldr	r2, [sp, #20]
   1d678:	ldr	r3, [fp, #8]
   1d67c:	ldr	r3, [r3, #4]
   1d680:	bl	1ba28 <__assert_fail@plt+0xa6a4>
   1d684:	str	r0, [sp, #4]
   1d688:	ldr	r0, [fp, #-4]
   1d68c:	ldr	r1, [fp, #-4]
   1d690:	ldr	r2, [sp, #20]
   1d694:	ldr	r3, [sp, #16]
   1d698:	bl	1b598 <__assert_fail@plt+0xa214>
   1d69c:	ldr	r1, [sp, #4]
   1d6a0:	add	r0, r1, r0
   1d6a4:	str	r0, [sp, #4]
   1d6a8:	ldr	r0, [sp, #4]
   1d6ac:	cmp	r0, #0
   1d6b0:	bls	1d6d0 <__assert_fail@plt+0xc34c>
   1d6b4:	ldr	r0, [sp, #4]
   1d6b8:	ldr	r1, [fp, #-4]
   1d6bc:	ldr	r2, [sp, #20]
   1d6c0:	add	r3, r2, #1
   1d6c4:	str	r3, [sp, #20]
   1d6c8:	add	r1, r1, r2, lsl #2
   1d6cc:	str	r0, [r1]
   1d6d0:	b	1d5e8 <__assert_fail@plt+0xc264>
   1d6d4:	ldr	r0, [sp, #8]
   1d6d8:	ldr	r1, [fp, #-12]
   1d6dc:	cmp	r0, r1
   1d6e0:	bne	1d6e8 <__assert_fail@plt+0xc364>
   1d6e4:	b	1d708 <__assert_fail@plt+0xc384>
   1d6e8:	movw	r0, #33791	; 0x83ff
   1d6ec:	movt	r0, #3
   1d6f0:	movw	r1, #30584	; 0x7778
   1d6f4:	movt	r1, #3
   1d6f8:	movw	r2, #1394	; 0x572
   1d6fc:	movw	r3, #33683	; 0x8393
   1d700:	movt	r3, #3
   1d704:	bl	11384 <__assert_fail@plt>
   1d708:	ldr	r0, [sp, #20]
   1d70c:	mov	sp, fp
   1d710:	pop	{fp, pc}
   1d714:	sub	sp, sp, #4
   1d718:	str	r0, [sp]
   1d71c:	ldr	r0, [sp]
   1d720:	movw	r1, #0
   1d724:	str	r1, [r0]
   1d728:	ldr	r0, [sp]
   1d72c:	str	r1, [r0, #4]
   1d730:	ldr	r0, [sp]
   1d734:	movw	r1, #30576	; 0x7770
   1d738:	movt	r1, #3
   1d73c:	str	r1, [r0, #8]
   1d740:	add	sp, sp, #4
   1d744:	bx	lr
   1d748:	push	{fp, lr}
   1d74c:	mov	fp, sp
   1d750:	sub	sp, sp, #16
   1d754:	str	r0, [fp, #-4]
   1d758:	str	r1, [sp, #8]
   1d75c:	ldr	r0, [sp, #8]
   1d760:	sub	r1, r0, #1
   1d764:	cmp	r0, #0
   1d768:	movne	r0, r1
   1d76c:	str	r0, [sp, #8]
   1d770:	ldr	r0, [sp, #8]
   1d774:	lsr	r0, r0, #5
   1d778:	add	r0, r0, #1
   1d77c:	str	r0, [sp, #4]
   1d780:	ldr	r0, [sp, #4]
   1d784:	ldr	r1, [fp, #-4]
   1d788:	str	r0, [r1]
   1d78c:	ldr	r0, [fp, #-4]
   1d790:	movw	r1, #0
   1d794:	str	r1, [r0, #4]
   1d798:	ldr	r0, [sp, #4]
   1d79c:	bl	1d7b0 <__assert_fail@plt+0xc42c>
   1d7a0:	ldr	r1, [fp, #-4]
   1d7a4:	str	r0, [r1, #8]
   1d7a8:	mov	sp, fp
   1d7ac:	pop	{fp, pc}
   1d7b0:	push	{fp, lr}
   1d7b4:	mov	fp, sp
   1d7b8:	sub	sp, sp, #8
   1d7bc:	str	r0, [sp, #4]
   1d7c0:	movw	r0, #41252	; 0xa124
   1d7c4:	movt	r0, #4
   1d7c8:	ldr	r0, [r0]
   1d7cc:	ldr	r1, [sp, #4]
   1d7d0:	lsl	r1, r1, #2
   1d7d4:	str	r0, [sp]
   1d7d8:	mov	r0, r1
   1d7dc:	ldr	r1, [sp]
   1d7e0:	blx	r1
   1d7e4:	mov	sp, fp
   1d7e8:	pop	{fp, pc}
   1d7ec:	push	{fp, lr}
   1d7f0:	mov	fp, sp
   1d7f4:	sub	sp, sp, #8
   1d7f8:	str	r0, [sp, #4]
   1d7fc:	ldr	r0, [sp, #4]
   1d800:	ldr	r0, [r0]
   1d804:	cmp	r0, #0
   1d808:	beq	1d820 <__assert_fail@plt+0xc49c>
   1d80c:	ldr	r0, [sp, #4]
   1d810:	ldr	r0, [r0, #8]
   1d814:	ldr	r1, [sp, #4]
   1d818:	ldr	r1, [r1]
   1d81c:	bl	1d828 <__assert_fail@plt+0xc4a4>
   1d820:	mov	sp, fp
   1d824:	pop	{fp, pc}
   1d828:	push	{fp, lr}
   1d82c:	mov	fp, sp
   1d830:	sub	sp, sp, #16
   1d834:	str	r0, [fp, #-4]
   1d838:	str	r1, [sp, #8]
   1d83c:	movw	r0, #41260	; 0xa12c
   1d840:	movt	r0, #4
   1d844:	ldr	r0, [r0]
   1d848:	ldr	r1, [fp, #-4]
   1d84c:	ldr	r2, [sp, #8]
   1d850:	lsl	r2, r2, #2
   1d854:	str	r0, [sp, #4]
   1d858:	mov	r0, r1
   1d85c:	mov	r1, r2
   1d860:	ldr	r2, [sp, #4]
   1d864:	blx	r2
   1d868:	mov	sp, fp
   1d86c:	pop	{fp, pc}
   1d870:	push	{fp, lr}
   1d874:	mov	fp, sp
   1d878:	sub	sp, sp, #16
   1d87c:	str	r0, [fp, #-4]
   1d880:	str	r1, [sp, #8]
   1d884:	ldr	r0, [sp, #8]
   1d888:	cmp	r0, #0
   1d88c:	blt	1d8a0 <__assert_fail@plt+0xc51c>
   1d890:	ldr	r0, [fp, #-4]
   1d894:	ldr	r1, [sp, #8]
   1d898:	bl	1d90c <__assert_fail@plt+0xc588>
   1d89c:	b	1d904 <__assert_fail@plt+0xc580>
   1d8a0:	ldr	r0, [fp, #-4]
   1d8a4:	mvn	r1, #0
   1d8a8:	str	r1, [r0, #4]
   1d8ac:	ldr	r0, [sp, #8]
   1d8b0:	add	r0, r0, #1
   1d8b4:	sub	r0, r0, #1
   1d8b8:	movw	r1, #0
   1d8bc:	sub	r0, r1, r0
   1d8c0:	ldr	r1, [fp, #-4]
   1d8c4:	ldr	r1, [r1]
   1d8c8:	movw	r2, #1
   1d8cc:	cmp	r2, r1
   1d8d0:	str	r0, [sp, #4]
   1d8d4:	ble	1d8ec <__assert_fail@plt+0xc568>
   1d8d8:	ldr	r0, [fp, #-4]
   1d8dc:	movw	r1, #1
   1d8e0:	bl	1d994 <__assert_fail@plt+0xc610>
   1d8e4:	str	r0, [sp]
   1d8e8:	b	1d8f8 <__assert_fail@plt+0xc574>
   1d8ec:	ldr	r0, [fp, #-4]
   1d8f0:	ldr	r0, [r0, #8]
   1d8f4:	str	r0, [sp]
   1d8f8:	ldr	r0, [sp]
   1d8fc:	ldr	r1, [sp, #4]
   1d900:	str	r1, [r0]
   1d904:	mov	sp, fp
   1d908:	pop	{fp, pc}
   1d90c:	push	{fp, lr}
   1d910:	mov	fp, sp
   1d914:	sub	sp, sp, #16
   1d918:	str	r0, [fp, #-4]
   1d91c:	str	r1, [sp, #8]
   1d920:	ldr	r0, [sp, #8]
   1d924:	cmp	r0, #0
   1d928:	bls	1d980 <__assert_fail@plt+0xc5fc>
   1d92c:	ldr	r0, [fp, #-4]
   1d930:	movw	r1, #1
   1d934:	str	r1, [r0, #4]
   1d938:	ldr	r0, [sp, #8]
   1d93c:	ldr	r2, [fp, #-4]
   1d940:	ldr	r2, [r2]
   1d944:	cmp	r1, r2
   1d948:	str	r0, [sp, #4]
   1d94c:	ble	1d964 <__assert_fail@plt+0xc5e0>
   1d950:	ldr	r0, [fp, #-4]
   1d954:	movw	r1, #1
   1d958:	bl	1d994 <__assert_fail@plt+0xc610>
   1d95c:	str	r0, [sp]
   1d960:	b	1d970 <__assert_fail@plt+0xc5ec>
   1d964:	ldr	r0, [fp, #-4]
   1d968:	ldr	r0, [r0, #8]
   1d96c:	str	r0, [sp]
   1d970:	ldr	r0, [sp]
   1d974:	ldr	r1, [sp, #4]
   1d978:	str	r1, [r0]
   1d97c:	b	1d98c <__assert_fail@plt+0xc608>
   1d980:	ldr	r0, [fp, #-4]
   1d984:	movw	r1, #0
   1d988:	str	r1, [r0, #4]
   1d98c:	mov	sp, fp
   1d990:	pop	{fp, pc}
   1d994:	push	{fp, lr}
   1d998:	mov	fp, sp
   1d99c:	sub	sp, sp, #16
   1d9a0:	str	r0, [fp, #-4]
   1d9a4:	str	r1, [sp, #8]
   1d9a8:	ldr	r0, [sp, #8]
   1d9ac:	cmp	r0, #1
   1d9b0:	ble	1d9c0 <__assert_fail@plt+0xc63c>
   1d9b4:	ldr	r0, [sp, #8]
   1d9b8:	str	r0, [sp, #4]
   1d9bc:	b	1d9cc <__assert_fail@plt+0xc648>
   1d9c0:	movw	r0, #1
   1d9c4:	str	r0, [sp, #4]
   1d9c8:	b	1d9cc <__assert_fail@plt+0xc648>
   1d9cc:	ldr	r0, [sp, #4]
   1d9d0:	str	r0, [sp, #8]
   1d9d4:	ldr	r0, [fp, #-4]
   1d9d8:	ldr	r0, [r0]
   1d9dc:	cmp	r0, #0
   1d9e0:	beq	1da08 <__assert_fail@plt+0xc684>
   1d9e4:	ldr	r0, [fp, #-4]
   1d9e8:	ldr	r0, [r0, #8]
   1d9ec:	ldr	r1, [fp, #-4]
   1d9f0:	ldr	r1, [r1]
   1d9f4:	ldr	r2, [sp, #8]
   1d9f8:	bl	26c1c <__assert_fail@plt+0x15898>
   1d9fc:	ldr	r1, [fp, #-4]
   1da00:	str	r0, [r1, #8]
   1da04:	b	1da18 <__assert_fail@plt+0xc694>
   1da08:	ldr	r0, [sp, #8]
   1da0c:	bl	1d7b0 <__assert_fail@plt+0xc42c>
   1da10:	ldr	lr, [fp, #-4]
   1da14:	str	r0, [lr, #8]
   1da18:	ldr	r0, [sp, #8]
   1da1c:	ldr	r1, [fp, #-4]
   1da20:	str	r0, [r1]
   1da24:	ldr	r0, [fp, #-4]
   1da28:	ldr	r0, [r0, #4]
   1da2c:	cmp	r0, #0
   1da30:	blt	1da44 <__assert_fail@plt+0xc6c0>
   1da34:	ldr	r0, [fp, #-4]
   1da38:	ldr	r0, [r0, #4]
   1da3c:	str	r0, [sp]
   1da40:	b	1da58 <__assert_fail@plt+0xc6d4>
   1da44:	ldr	r0, [fp, #-4]
   1da48:	ldr	r0, [r0, #4]
   1da4c:	movw	r1, #0
   1da50:	sub	r0, r1, r0
   1da54:	str	r0, [sp]
   1da58:	ldr	r0, [sp]
   1da5c:	ldr	r1, [sp, #8]
   1da60:	cmp	r0, r1
   1da64:	ble	1da74 <__assert_fail@plt+0xc6f0>
   1da68:	ldr	r0, [fp, #-4]
   1da6c:	movw	r1, #0
   1da70:	str	r1, [r0, #4]
   1da74:	ldr	r0, [fp, #-4]
   1da78:	ldr	r0, [r0, #8]
   1da7c:	mov	sp, fp
   1da80:	pop	{fp, pc}
   1da84:	push	{fp, lr}
   1da88:	mov	fp, sp
   1da8c:	sub	sp, sp, #24
   1da90:	str	r0, [fp, #-4]
   1da94:	str	r1, [fp, #-8]
   1da98:	ldr	r0, [fp, #-4]
   1da9c:	ldr	r1, [fp, #-8]
   1daa0:	cmp	r0, r1
   1daa4:	beq	1db44 <__assert_fail@plt+0xc7c0>
   1daa8:	ldr	r0, [fp, #-8]
   1daac:	ldr	r0, [r0, #4]
   1dab0:	cmp	r0, #0
   1dab4:	blt	1dac8 <__assert_fail@plt+0xc744>
   1dab8:	ldr	r0, [fp, #-8]
   1dabc:	ldr	r0, [r0, #4]
   1dac0:	str	r0, [sp, #4]
   1dac4:	b	1dadc <__assert_fail@plt+0xc758>
   1dac8:	ldr	r0, [fp, #-8]
   1dacc:	ldr	r0, [r0, #4]
   1dad0:	movw	r1, #0
   1dad4:	sub	r0, r1, r0
   1dad8:	str	r0, [sp, #4]
   1dadc:	ldr	r0, [sp, #4]
   1dae0:	str	r0, [sp, #12]
   1dae4:	ldr	r0, [sp, #12]
   1dae8:	ldr	r1, [fp, #-4]
   1daec:	ldr	r1, [r1]
   1daf0:	cmp	r0, r1
   1daf4:	ble	1db0c <__assert_fail@plt+0xc788>
   1daf8:	ldr	r0, [fp, #-4]
   1dafc:	ldr	r1, [sp, #12]
   1db00:	bl	1d994 <__assert_fail@plt+0xc610>
   1db04:	str	r0, [sp]
   1db08:	b	1db18 <__assert_fail@plt+0xc794>
   1db0c:	ldr	r0, [fp, #-4]
   1db10:	ldr	r0, [r0, #8]
   1db14:	str	r0, [sp]
   1db18:	ldr	r0, [sp]
   1db1c:	str	r0, [sp, #8]
   1db20:	ldr	r0, [sp, #8]
   1db24:	ldr	r1, [fp, #-8]
   1db28:	ldr	r1, [r1, #8]
   1db2c:	ldr	r2, [sp, #12]
   1db30:	bl	1b370 <__assert_fail@plt+0x9fec>
   1db34:	ldr	r0, [fp, #-8]
   1db38:	ldr	r0, [r0, #4]
   1db3c:	ldr	r1, [fp, #-4]
   1db40:	str	r0, [r1, #4]
   1db44:	mov	sp, fp
   1db48:	pop	{fp, pc}
   1db4c:	push	{fp, lr}
   1db50:	mov	fp, sp
   1db54:	sub	sp, sp, #8
   1db58:	str	r0, [sp, #4]
   1db5c:	str	r1, [sp]
   1db60:	ldr	r0, [sp, #4]
   1db64:	bl	1d714 <__assert_fail@plt+0xc390>
   1db68:	ldr	r0, [sp, #4]
   1db6c:	ldr	r1, [sp]
   1db70:	bl	1d870 <__assert_fail@plt+0xc4ec>
   1db74:	mov	sp, fp
   1db78:	pop	{fp, pc}
   1db7c:	push	{fp, lr}
   1db80:	mov	fp, sp
   1db84:	sub	sp, sp, #8
   1db88:	str	r0, [sp, #4]
   1db8c:	str	r1, [sp]
   1db90:	ldr	r0, [sp, #4]
   1db94:	bl	1d714 <__assert_fail@plt+0xc390>
   1db98:	ldr	r0, [sp, #4]
   1db9c:	ldr	r1, [sp]
   1dba0:	bl	1d90c <__assert_fail@plt+0xc588>
   1dba4:	mov	sp, fp
   1dba8:	pop	{fp, pc}
   1dbac:	push	{fp, lr}
   1dbb0:	mov	fp, sp
   1dbb4:	sub	sp, sp, #8
   1dbb8:	str	r0, [sp, #4]
   1dbbc:	str	r1, [sp]
   1dbc0:	ldr	r0, [sp, #4]
   1dbc4:	bl	1d714 <__assert_fail@plt+0xc390>
   1dbc8:	ldr	r0, [sp, #4]
   1dbcc:	ldr	r1, [sp]
   1dbd0:	bl	1da84 <__assert_fail@plt+0xc700>
   1dbd4:	mov	sp, fp
   1dbd8:	pop	{fp, pc}
   1dbdc:	push	{fp, lr}
   1dbe0:	mov	fp, sp
   1dbe4:	sub	sp, sp, #8
   1dbe8:	ldr	r1, [pc, #68]	; 1dc34 <__assert_fail@plt+0xc8b0>
   1dbec:	str	r0, [sp, #4]
   1dbf0:	ldr	r0, [sp, #4]
   1dbf4:	bl	1dc3c <__assert_fail@plt+0xc8b8>
   1dbf8:	cmp	r0, #0
   1dbfc:	movw	r0, #0
   1dc00:	str	r0, [sp]
   1dc04:	bgt	1dc24 <__assert_fail@plt+0xc8a0>
   1dc08:	ldr	r1, [pc, #40]	; 1dc38 <__assert_fail@plt+0xc8b4>
   1dc0c:	ldr	r0, [sp, #4]
   1dc10:	bl	1dc3c <__assert_fail@plt+0xc8b8>
   1dc14:	cmp	r0, #0
   1dc18:	movw	r0, #0
   1dc1c:	movge	r0, #1
   1dc20:	str	r0, [sp]
   1dc24:	ldr	r0, [sp]
   1dc28:	and	r0, r0, #1
   1dc2c:	mov	sp, fp
   1dc30:	pop	{fp, pc}
   1dc34:	svcvc	0x00ffffff
   1dc38:	andhi	r0, r0, r0
   1dc3c:	push	{fp, lr}
   1dc40:	mov	fp, sp
   1dc44:	sub	sp, sp, #16
   1dc48:	str	r0, [sp, #8]
   1dc4c:	str	r1, [sp, #4]
   1dc50:	ldr	r0, [sp, #8]
   1dc54:	ldr	r0, [r0, #4]
   1dc58:	str	r0, [sp]
   1dc5c:	ldr	r0, [sp, #4]
   1dc60:	cmp	r0, #0
   1dc64:	blt	1dc7c <__assert_fail@plt+0xc8f8>
   1dc68:	ldr	r0, [sp, #8]
   1dc6c:	ldr	r1, [sp, #4]
   1dc70:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   1dc74:	str	r0, [fp, #-4]
   1dc78:	b	1dcbc <__assert_fail@plt+0xc938>
   1dc7c:	ldr	r0, [sp]
   1dc80:	cmp	r0, #0
   1dc84:	blt	1dc94 <__assert_fail@plt+0xc910>
   1dc88:	movw	r0, #1
   1dc8c:	str	r0, [fp, #-4]
   1dc90:	b	1dcbc <__assert_fail@plt+0xc938>
   1dc94:	ldr	r0, [sp, #8]
   1dc98:	ldr	r1, [sp, #4]
   1dc9c:	add	r1, r1, #1
   1dca0:	sub	r1, r1, #1
   1dca4:	movw	r2, #0
   1dca8:	sub	r1, r2, r1
   1dcac:	bl	1de68 <__assert_fail@plt+0xcae4>
   1dcb0:	movw	r1, #0
   1dcb4:	sub	r0, r1, r0
   1dcb8:	str	r0, [fp, #-4]
   1dcbc:	ldr	r0, [fp, #-4]
   1dcc0:	mov	sp, fp
   1dcc4:	pop	{fp, pc}
   1dcc8:	push	{fp, lr}
   1dccc:	mov	fp, sp
   1dcd0:	sub	sp, sp, #16
   1dcd4:	str	r0, [fp, #-4]
   1dcd8:	ldr	r0, [fp, #-4]
   1dcdc:	ldr	r0, [r0, #4]
   1dce0:	str	r0, [sp, #8]
   1dce4:	ldr	r0, [sp, #8]
   1dce8:	cmp	r0, #0
   1dcec:	movw	r0, #0
   1dcf0:	str	r0, [sp, #4]
   1dcf4:	blt	1dd18 <__assert_fail@plt+0xc994>
   1dcf8:	ldr	r0, [fp, #-4]
   1dcfc:	ldr	r0, [r0, #8]
   1dd00:	ldr	r1, [sp, #8]
   1dd04:	bl	1dd28 <__assert_fail@plt+0xc9a4>
   1dd08:	cmp	r0, #0
   1dd0c:	movw	r0, #0
   1dd10:	movne	r0, #1
   1dd14:	str	r0, [sp, #4]
   1dd18:	ldr	r0, [sp, #4]
   1dd1c:	and	r0, r0, #1
   1dd20:	mov	sp, fp
   1dd24:	pop	{fp, pc}
   1dd28:	sub	sp, sp, #24
   1dd2c:	str	r0, [sp, #20]
   1dd30:	str	r1, [sp, #16]
   1dd34:	movw	r0, #1
   1dd38:	str	r0, [sp, #12]
   1dd3c:	movw	r0, #0
   1dd40:	str	r0, [sp, #8]
   1dd44:	ldr	r0, [sp, #16]
   1dd48:	ldr	r1, [sp, #12]
   1dd4c:	cmp	r0, r1
   1dd50:	movw	r0, #1
   1dd54:	str	r0, [sp, #4]
   1dd58:	ble	1dda4 <__assert_fail@plt+0xca20>
   1dd5c:	ldr	r0, [sp, #20]
   1dd60:	ldr	r1, [sp, #12]
   1dd64:	add	r0, r0, r1, lsl #2
   1dd68:	ldr	r0, [r0]
   1dd6c:	ldr	r1, [sp, #8]
   1dd70:	cmp	r0, r1
   1dd74:	movw	r0, #0
   1dd78:	str	r0, [sp]
   1dd7c:	bcs	1dd9c <__assert_fail@plt+0xca18>
   1dd80:	ldr	r0, [sp, #16]
   1dd84:	ldr	r1, [sp, #12]
   1dd88:	add	r1, r1, #1
   1dd8c:	cmp	r0, r1
   1dd90:	movw	r0, #0
   1dd94:	moveq	r0, #1
   1dd98:	str	r0, [sp]
   1dd9c:	ldr	r0, [sp]
   1dda0:	str	r0, [sp, #4]
   1dda4:	ldr	r0, [sp, #4]
   1dda8:	and	r0, r0, #1
   1ddac:	add	sp, sp, #24
   1ddb0:	bx	lr
   1ddb4:	push	{fp, lr}
   1ddb8:	mov	fp, sp
   1ddbc:	sub	sp, sp, #8
   1ddc0:	ldr	r1, [pc, #68]	; 1de0c <__assert_fail@plt+0xca88>
   1ddc4:	str	r0, [sp, #4]
   1ddc8:	ldr	r0, [sp, #4]
   1ddcc:	bl	1dc3c <__assert_fail@plt+0xc8b8>
   1ddd0:	cmp	r0, #0
   1ddd4:	movw	r0, #0
   1ddd8:	str	r0, [sp]
   1dddc:	bgt	1ddfc <__assert_fail@plt+0xca78>
   1dde0:	ldr	r1, [pc, #40]	; 1de10 <__assert_fail@plt+0xca8c>
   1dde4:	ldr	r0, [sp, #4]
   1dde8:	bl	1dc3c <__assert_fail@plt+0xc8b8>
   1ddec:	cmp	r0, #0
   1ddf0:	movw	r0, #0
   1ddf4:	movge	r0, #1
   1ddf8:	str	r0, [sp]
   1ddfc:	ldr	r0, [sp]
   1de00:	and	r0, r0, #1
   1de04:	mov	sp, fp
   1de08:	pop	{fp, pc}
   1de0c:	svcvc	0x00ffffff
   1de10:	andhi	r0, r0, r0
   1de14:	push	{fp, lr}
   1de18:	mov	fp, sp
   1de1c:	sub	sp, sp, #8
   1de20:	str	r0, [sp, #4]
   1de24:	ldr	r0, [sp, #4]
   1de28:	ldr	r0, [r0, #4]
   1de2c:	cmp	r0, #0
   1de30:	movw	r0, #0
   1de34:	str	r0, [sp]
   1de38:	blt	1de58 <__assert_fail@plt+0xcad4>
   1de3c:	ldr	r0, [sp, #4]
   1de40:	mvn	r1, #0
   1de44:	bl	1de68 <__assert_fail@plt+0xcae4>
   1de48:	cmp	r0, #0
   1de4c:	movw	r0, #0
   1de50:	movle	r0, #1
   1de54:	str	r0, [sp]
   1de58:	ldr	r0, [sp]
   1de5c:	and	r0, r0, #1
   1de60:	mov	sp, fp
   1de64:	pop	{fp, pc}
   1de68:	push	{fp, lr}
   1de6c:	mov	fp, sp
   1de70:	sub	sp, sp, #24
   1de74:	str	r0, [fp, #-8]
   1de78:	str	r1, [sp, #12]
   1de7c:	ldr	r0, [fp, #-8]
   1de80:	ldr	r0, [r0, #4]
   1de84:	cmp	r0, #0
   1de88:	blt	1de9c <__assert_fail@plt+0xcb18>
   1de8c:	ldr	r0, [fp, #-8]
   1de90:	ldr	r0, [r0, #4]
   1de94:	str	r0, [sp]
   1de98:	b	1deb0 <__assert_fail@plt+0xcb2c>
   1de9c:	ldr	r0, [fp, #-8]
   1dea0:	ldr	r0, [r0, #4]
   1dea4:	movw	r1, #0
   1dea8:	sub	r0, r1, r0
   1deac:	str	r0, [sp]
   1deb0:	ldr	r0, [sp]
   1deb4:	str	r0, [sp, #8]
   1deb8:	ldr	r0, [fp, #-8]
   1debc:	ldr	r0, [r0, #8]
   1dec0:	ldr	r1, [sp, #8]
   1dec4:	bl	1dd28 <__assert_fail@plt+0xc9a4>
   1dec8:	cmp	r0, #0
   1decc:	bne	1dedc <__assert_fail@plt+0xcb58>
   1ded0:	movw	r0, #1
   1ded4:	str	r0, [fp, #-4]
   1ded8:	b	1df20 <__assert_fail@plt+0xcb9c>
   1dedc:	ldr	r0, [fp, #-8]
   1dee0:	bl	1e05c <__assert_fail@plt+0xccd8>
   1dee4:	str	r0, [sp, #4]
   1dee8:	ldr	r0, [sp, #4]
   1deec:	ldr	lr, [sp, #12]
   1def0:	cmp	r0, lr
   1def4:	movw	r0, #0
   1def8:	movhi	r0, #1
   1defc:	and	r0, r0, #1
   1df00:	ldr	lr, [sp, #4]
   1df04:	ldr	r1, [sp, #12]
   1df08:	cmp	lr, r1
   1df0c:	movw	r1, #0
   1df10:	movcc	r1, #1
   1df14:	and	r1, r1, #1
   1df18:	sub	r0, r0, r1
   1df1c:	str	r0, [fp, #-4]
   1df20:	ldr	r0, [fp, #-4]
   1df24:	mov	sp, fp
   1df28:	pop	{fp, pc}
   1df2c:	push	{fp, lr}
   1df30:	mov	fp, sp
   1df34:	sub	sp, sp, #8
   1df38:	str	r0, [sp, #4]
   1df3c:	ldr	r0, [sp, #4]
   1df40:	movw	r1, #32767	; 0x7fff
   1df44:	bl	1dc3c <__assert_fail@plt+0xc8b8>
   1df48:	cmp	r0, #0
   1df4c:	movw	r0, #0
   1df50:	str	r0, [sp]
   1df54:	bgt	1df74 <__assert_fail@plt+0xcbf0>
   1df58:	ldr	r1, [pc, #36]	; 1df84 <__assert_fail@plt+0xcc00>
   1df5c:	ldr	r0, [sp, #4]
   1df60:	bl	1dc3c <__assert_fail@plt+0xc8b8>
   1df64:	cmp	r0, #0
   1df68:	movw	r0, #0
   1df6c:	movge	r0, #1
   1df70:	str	r0, [sp]
   1df74:	ldr	r0, [sp]
   1df78:	and	r0, r0, #1
   1df7c:	mov	sp, fp
   1df80:	pop	{fp, pc}
   1df84:			; <UNDEFINED> instruction: 0xffff8000
   1df88:	push	{fp, lr}
   1df8c:	mov	fp, sp
   1df90:	sub	sp, sp, #8
   1df94:	str	r0, [sp, #4]
   1df98:	ldr	r0, [sp, #4]
   1df9c:	ldr	r0, [r0, #4]
   1dfa0:	cmp	r0, #0
   1dfa4:	movw	r0, #0
   1dfa8:	str	r0, [sp]
   1dfac:	blt	1dfcc <__assert_fail@plt+0xcc48>
   1dfb0:	ldr	r0, [sp, #4]
   1dfb4:	movw	r1, #65535	; 0xffff
   1dfb8:	bl	1de68 <__assert_fail@plt+0xcae4>
   1dfbc:	cmp	r0, #0
   1dfc0:	movw	r0, #0
   1dfc4:	movle	r0, #1
   1dfc8:	str	r0, [sp]
   1dfcc:	ldr	r0, [sp]
   1dfd0:	and	r0, r0, #1
   1dfd4:	mov	sp, fp
   1dfd8:	pop	{fp, pc}
   1dfdc:	push	{fp, lr}
   1dfe0:	mov	fp, sp
   1dfe4:	sub	sp, sp, #16
   1dfe8:	str	r0, [sp, #8]
   1dfec:	ldr	r0, [sp, #8]
   1dff0:	bl	1e05c <__assert_fail@plt+0xccd8>
   1dff4:	str	r0, [sp, #4]
   1dff8:	movw	r0, #1
   1dffc:	str	r0, [sp]
   1e000:	ldr	r0, [sp, #8]
   1e004:	ldr	r0, [r0, #4]
   1e008:	cmp	r0, #0
   1e00c:	bge	1e03c <__assert_fail@plt+0xccb8>
   1e010:	ldr	r0, [pc, #64]	; 1e058 <__assert_fail@plt+0xccd4>
   1e014:	ldr	r1, [sp]
   1e018:	movw	r2, #0
   1e01c:	sub	r1, r2, r1
   1e020:	ldr	r2, [sp, #4]
   1e024:	ldr	r3, [sp]
   1e028:	sub	r2, r2, r3
   1e02c:	and	r0, r2, r0
   1e030:	sub	r0, r1, r0
   1e034:	str	r0, [fp, #-4]
   1e038:	b	1e04c <__assert_fail@plt+0xccc8>
   1e03c:	ldr	r0, [pc, #20]	; 1e058 <__assert_fail@plt+0xccd4>
   1e040:	ldr	r1, [sp, #4]
   1e044:	and	r0, r1, r0
   1e048:	str	r0, [fp, #-4]
   1e04c:	ldr	r0, [fp, #-4]
   1e050:	mov	sp, fp
   1e054:	pop	{fp, pc}
   1e058:	svcvc	0x00ffffff
   1e05c:	sub	sp, sp, #8
   1e060:	str	r0, [sp, #4]
   1e064:	ldr	r0, [sp, #4]
   1e068:	ldr	r0, [r0, #4]
   1e06c:	cmp	r0, #0
   1e070:	bne	1e080 <__assert_fail@plt+0xccfc>
   1e074:	movw	r0, #0
   1e078:	str	r0, [sp]
   1e07c:	b	1e090 <__assert_fail@plt+0xcd0c>
   1e080:	ldr	r0, [sp, #4]
   1e084:	ldr	r0, [r0, #8]
   1e088:	ldr	r0, [r0]
   1e08c:	str	r0, [sp]
   1e090:	ldr	r0, [sp]
   1e094:	add	sp, sp, #8
   1e098:	bx	lr
   1e09c:	sub	sp, sp, #8
   1e0a0:	str	r0, [sp, #4]
   1e0a4:	ldr	r0, [sp, #4]
   1e0a8:	ldr	r0, [r0, #4]
   1e0ac:	cmp	r0, #0
   1e0b0:	blt	1e0c4 <__assert_fail@plt+0xcd40>
   1e0b4:	ldr	r0, [sp, #4]
   1e0b8:	ldr	r0, [r0, #4]
   1e0bc:	str	r0, [sp]
   1e0c0:	b	1e0d8 <__assert_fail@plt+0xcd54>
   1e0c4:	ldr	r0, [sp, #4]
   1e0c8:	ldr	r0, [r0, #4]
   1e0cc:	movw	r1, #0
   1e0d0:	sub	r0, r1, r0
   1e0d4:	str	r0, [sp]
   1e0d8:	ldr	r0, [sp]
   1e0dc:	add	sp, sp, #8
   1e0e0:	bx	lr
   1e0e4:	sub	sp, sp, #20
   1e0e8:	str	r0, [sp, #12]
   1e0ec:	str	r1, [sp, #8]
   1e0f0:	ldr	r0, [sp, #8]
   1e0f4:	cmp	r0, #0
   1e0f8:	blt	1e164 <__assert_fail@plt+0xcde0>
   1e0fc:	ldr	r0, [sp, #8]
   1e100:	ldr	r1, [sp, #12]
   1e104:	ldr	r1, [r1, #4]
   1e108:	cmp	r1, #0
   1e10c:	str	r0, [sp, #4]
   1e110:	blt	1e124 <__assert_fail@plt+0xcda0>
   1e114:	ldr	r0, [sp, #12]
   1e118:	ldr	r0, [r0, #4]
   1e11c:	str	r0, [sp]
   1e120:	b	1e138 <__assert_fail@plt+0xcdb4>
   1e124:	ldr	r0, [sp, #12]
   1e128:	ldr	r0, [r0, #4]
   1e12c:	movw	r1, #0
   1e130:	sub	r0, r1, r0
   1e134:	str	r0, [sp]
   1e138:	ldr	r0, [sp]
   1e13c:	ldr	r1, [sp, #4]
   1e140:	cmp	r1, r0
   1e144:	bge	1e164 <__assert_fail@plt+0xcde0>
   1e148:	ldr	r0, [sp, #12]
   1e14c:	ldr	r0, [r0, #8]
   1e150:	ldr	r1, [sp, #8]
   1e154:	add	r0, r0, r1, lsl #2
   1e158:	ldr	r0, [r0]
   1e15c:	str	r0, [sp, #16]
   1e160:	b	1e16c <__assert_fail@plt+0xcde8>
   1e164:	movw	r0, #0
   1e168:	str	r0, [sp, #16]
   1e16c:	ldr	r0, [sp, #16]
   1e170:	add	sp, sp, #20
   1e174:	bx	lr
   1e178:	push	{fp, lr}
   1e17c:	mov	fp, sp
   1e180:	sub	sp, sp, #16
   1e184:	str	r0, [fp, #-4]
   1e188:	str	r1, [sp, #8]
   1e18c:	ldr	r0, [fp, #-4]
   1e190:	ldr	r1, [sp, #8]
   1e194:	sub	r2, r1, #1
   1e198:	cmp	r1, #0
   1e19c:	movne	r1, r2
   1e1a0:	lsr	r1, r1, #5
   1e1a4:	add	r1, r1, #1
   1e1a8:	bl	1d994 <__assert_fail@plt+0xc610>
   1e1ac:	str	r0, [sp, #4]
   1e1b0:	mov	sp, fp
   1e1b4:	pop	{fp, pc}
   1e1b8:	sub	sp, sp, #4
   1e1bc:	str	r0, [sp]
   1e1c0:	ldr	r0, [sp]
   1e1c4:	ldr	r0, [r0, #8]
   1e1c8:	add	sp, sp, #4
   1e1cc:	bx	lr
   1e1d0:	push	{fp, lr}
   1e1d4:	mov	fp, sp
   1e1d8:	sub	sp, sp, #16
   1e1dc:	str	r0, [fp, #-4]
   1e1e0:	str	r1, [sp, #8]
   1e1e4:	ldr	r0, [sp, #8]
   1e1e8:	cmp	r0, #0
   1e1ec:	ble	1e1f4 <__assert_fail@plt+0xce70>
   1e1f0:	b	1e214 <__assert_fail@plt+0xce90>
   1e1f4:	movw	r0, #33965	; 0x84ad
   1e1f8:	movt	r0, #3
   1e1fc:	movw	r1, #30584	; 0x7778
   1e200:	movt	r1, #3
   1e204:	movw	r2, #1663	; 0x67f
   1e208:	movw	r3, #31467	; 0x7aeb
   1e20c:	movt	r3, #3
   1e210:	bl	11384 <__assert_fail@plt>
   1e214:	ldr	r0, [sp, #8]
   1e218:	ldr	r1, [fp, #-4]
   1e21c:	ldr	r1, [r1]
   1e220:	cmp	r0, r1
   1e224:	ble	1e23c <__assert_fail@plt+0xceb8>
   1e228:	ldr	r0, [fp, #-4]
   1e22c:	ldr	r1, [sp, #8]
   1e230:	bl	1d994 <__assert_fail@plt+0xc610>
   1e234:	str	r0, [sp, #4]
   1e238:	b	1e248 <__assert_fail@plt+0xcec4>
   1e23c:	ldr	r0, [fp, #-4]
   1e240:	ldr	r0, [r0, #8]
   1e244:	str	r0, [sp, #4]
   1e248:	ldr	r0, [sp, #4]
   1e24c:	mov	sp, fp
   1e250:	pop	{fp, pc}
   1e254:	push	{fp, lr}
   1e258:	mov	fp, sp
   1e25c:	sub	sp, sp, #8
   1e260:	str	r0, [sp, #4]
   1e264:	str	r1, [sp]
   1e268:	ldr	r0, [sp, #4]
   1e26c:	ldr	r1, [sp]
   1e270:	bl	1e1d0 <__assert_fail@plt+0xce4c>
   1e274:	mov	sp, fp
   1e278:	pop	{fp, pc}
   1e27c:	push	{fp, lr}
   1e280:	mov	fp, sp
   1e284:	sub	sp, sp, #32
   1e288:	str	r0, [fp, #-4]
   1e28c:	str	r1, [fp, #-8]
   1e290:	ldr	r0, [fp, #-4]
   1e294:	ldr	r0, [r0, #8]
   1e298:	ldr	r1, [fp, #-8]
   1e29c:	cmp	r1, #0
   1e2a0:	str	r0, [sp, #16]
   1e2a4:	blt	1e2b4 <__assert_fail@plt+0xcf30>
   1e2a8:	ldr	r0, [fp, #-8]
   1e2ac:	str	r0, [sp, #12]
   1e2b0:	b	1e2c4 <__assert_fail@plt+0xcf40>
   1e2b4:	ldr	r0, [fp, #-8]
   1e2b8:	movw	r1, #0
   1e2bc:	sub	r0, r1, r0
   1e2c0:	str	r0, [sp, #12]
   1e2c4:	ldr	r0, [sp, #12]
   1e2c8:	ldr	r1, [sp, #16]
   1e2cc:	str	r0, [sp, #8]
   1e2d0:	mov	r0, r1
   1e2d4:	ldr	r1, [sp, #8]
   1e2d8:	bl	1b4e4 <__assert_fail@plt+0xa160>
   1e2dc:	str	r0, [fp, #-12]
   1e2e0:	ldr	r0, [fp, #-8]
   1e2e4:	cmp	r0, #0
   1e2e8:	bge	1e300 <__assert_fail@plt+0xcf7c>
   1e2ec:	ldr	r0, [fp, #-12]
   1e2f0:	movw	r1, #0
   1e2f4:	sub	r0, r1, r0
   1e2f8:	str	r0, [sp, #4]
   1e2fc:	b	1e308 <__assert_fail@plt+0xcf84>
   1e300:	ldr	r0, [fp, #-12]
   1e304:	str	r0, [sp, #4]
   1e308:	ldr	r0, [sp, #4]
   1e30c:	ldr	r1, [fp, #-4]
   1e310:	str	r0, [r1, #4]
   1e314:	mov	sp, fp
   1e318:	pop	{fp, pc}
   1e31c:	push	{fp, lr}
   1e320:	mov	fp, sp
   1e324:	sub	sp, sp, #16
   1e328:	str	r0, [fp, #-4]
   1e32c:	str	r1, [sp, #8]
   1e330:	str	r2, [sp, #4]
   1e334:	ldr	r0, [fp, #-4]
   1e338:	ldr	r1, [sp, #8]
   1e33c:	ldr	r2, [sp, #4]
   1e340:	bl	1e368 <__assert_fail@plt+0xcfe4>
   1e344:	ldr	r1, [fp, #-4]
   1e348:	ldr	r2, [sp, #4]
   1e34c:	str	r0, [sp]
   1e350:	mov	r0, r1
   1e354:	mov	r1, r2
   1e358:	bl	1e27c <__assert_fail@plt+0xcef8>
   1e35c:	ldr	r0, [fp, #-4]
   1e360:	mov	sp, fp
   1e364:	pop	{fp, pc}
   1e368:	sub	sp, sp, #12
   1e36c:	str	r0, [sp, #8]
   1e370:	str	r1, [sp, #4]
   1e374:	str	r2, [sp]
   1e378:	ldr	r0, [sp, #8]
   1e37c:	movw	r1, #0
   1e380:	str	r1, [r0]
   1e384:	ldr	r0, [sp, #4]
   1e388:	ldr	r1, [sp, #8]
   1e38c:	str	r0, [r1, #8]
   1e390:	ldr	r0, [sp]
   1e394:	ldr	r1, [sp, #8]
   1e398:	str	r0, [r1, #4]
   1e39c:	ldr	r0, [sp, #8]
   1e3a0:	add	sp, sp, #12
   1e3a4:	bx	lr
   1e3a8:	push	{fp, lr}
   1e3ac:	mov	fp, sp
   1e3b0:	sub	sp, sp, #64	; 0x40
   1e3b4:	str	r0, [fp, #-4]
   1e3b8:	vstr	d0, [fp, #-16]
   1e3bc:	vldr	d0, [fp, #-16]
   1e3c0:	vldr	d16, [fp, #-16]
   1e3c4:	vcmp.f64	d0, d16
   1e3c8:	vmrs	APSR_nzcv, fpscr
   1e3cc:	bne	1e3ec <__assert_fail@plt+0xd068>
   1e3d0:	vldr	d16, [fp, #-16]
   1e3d4:	vldr	d17, [fp, #-16]
   1e3d8:	vmov.f64	d18, #96	; 0x3f000000  0.5
   1e3dc:	vmul.f64	d17, d17, d18
   1e3e0:	vcmp.f64	d16, d17
   1e3e4:	vmrs	APSR_nzcv, fpscr
   1e3e8:	bne	1e3fc <__assert_fail@plt+0xd078>
   1e3ec:	ldr	r0, [fp, #-4]
   1e3f0:	movw	r1, #0
   1e3f4:	str	r1, [r0, #4]
   1e3f8:	b	1e638 <__assert_fail@plt+0xd2b4>
   1e3fc:	vldr	d16, [fp, #-16]
   1e400:	vcmpe.f64	d16, #0.0
   1e404:	vmrs	APSR_nzcv, fpscr
   1e408:	movw	r0, #0
   1e40c:	movmi	r0, #1
   1e410:	and	r0, r0, #1
   1e414:	str	r0, [fp, #-20]	; 0xffffffec
   1e418:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e41c:	cmp	r0, #0
   1e420:	beq	1e430 <__assert_fail@plt+0xd0ac>
   1e424:	vldr	d16, [fp, #-16]
   1e428:	vneg.f64	d16, d16
   1e42c:	vstr	d16, [fp, #-16]
   1e430:	vldr	d16, [fp, #-16]
   1e434:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e438:	vcmpe.f64	d16, d17
   1e43c:	vmrs	APSR_nzcv, fpscr
   1e440:	bpl	1e454 <__assert_fail@plt+0xd0d0>
   1e444:	ldr	r0, [fp, #-4]
   1e448:	movw	r1, #0
   1e44c:	str	r1, [r0, #4]
   1e450:	b	1e638 <__assert_fail@plt+0xd2b4>
   1e454:	vldr	d16, [pc, #484]	; 1e640 <__assert_fail@plt+0xd2bc>
   1e458:	vstr	d16, [sp, #24]
   1e45c:	vldr	d16, [sp, #24]
   1e460:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e464:	vdiv.f64	d16, d17, d16
   1e468:	vstr	d16, [sp, #16]
   1e46c:	movw	r0, #1
   1e470:	str	r0, [fp, #-28]	; 0xffffffe4
   1e474:	vldr	d16, [fp, #-16]
   1e478:	vldr	d17, [sp, #24]
   1e47c:	vcmpe.f64	d16, d17
   1e480:	vmrs	APSR_nzcv, fpscr
   1e484:	blt	1e4a8 <__assert_fail@plt+0xd124>
   1e488:	vldr	d16, [sp, #16]
   1e48c:	vldr	d17, [fp, #-16]
   1e490:	vmul.f64	d16, d17, d16
   1e494:	vstr	d16, [fp, #-16]
   1e498:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e49c:	add	r0, r0, #1
   1e4a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4a4:	b	1e474 <__assert_fail@plt+0xd0f0>
   1e4a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e4ac:	ldr	r1, [fp, #-4]
   1e4b0:	ldr	r1, [r1]
   1e4b4:	cmp	r0, r1
   1e4b8:	ble	1e4d0 <__assert_fail@plt+0xd14c>
   1e4bc:	ldr	r0, [fp, #-4]
   1e4c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e4c4:	bl	1d994 <__assert_fail@plt+0xc610>
   1e4c8:	str	r0, [sp, #8]
   1e4cc:	b	1e4dc <__assert_fail@plt+0xd158>
   1e4d0:	ldr	r0, [fp, #-4]
   1e4d4:	ldr	r0, [r0, #8]
   1e4d8:	str	r0, [sp, #8]
   1e4dc:	ldr	r0, [sp, #8]
   1e4e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e4e4:	vldr	d16, [fp, #-16]
   1e4e8:	vcvt.u32.f64	s0, d16
   1e4ec:	vmov	r0, s0
   1e4f0:	str	r0, [sp, #12]
   1e4f4:	ldr	r0, [sp, #12]
   1e4f8:	vmov	s0, r0
   1e4fc:	vcvt.f64.u32	d16, s0
   1e500:	vldr	d17, [fp, #-16]
   1e504:	vsub.f64	d16, d17, d16
   1e508:	vstr	d16, [fp, #-16]
   1e50c:	vldr	d16, [fp, #-16]
   1e510:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e514:	vcmpe.f64	d16, d17
   1e518:	vmrs	APSR_nzcv, fpscr
   1e51c:	bpl	1e524 <__assert_fail@plt+0xd1a0>
   1e520:	b	1e544 <__assert_fail@plt+0xd1c0>
   1e524:	movw	r0, #31518	; 0x7b1e
   1e528:	movt	r0, #3
   1e52c:	movw	r1, #30584	; 0x7778
   1e530:	movt	r1, #3
   1e534:	movw	r2, #1736	; 0x6c8
   1e538:	movw	r3, #31526	; 0x7b26
   1e53c:	movt	r3, #3
   1e540:	bl	11384 <__assert_fail@plt>
   1e544:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e548:	sub	r0, r0, #1
   1e54c:	str	r0, [sp, #32]
   1e550:	ldr	r0, [sp, #12]
   1e554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e558:	ldr	r2, [sp, #32]
   1e55c:	add	r1, r1, r2, lsl #2
   1e560:	str	r0, [r1]
   1e564:	ldr	r0, [sp, #32]
   1e568:	mvn	r1, #0
   1e56c:	add	r0, r0, r1
   1e570:	str	r0, [sp, #32]
   1e574:	cmp	r0, #0
   1e578:	blt	1e604 <__assert_fail@plt+0xd280>
   1e57c:	vldr	d16, [sp, #24]
   1e580:	vldr	d17, [fp, #-16]
   1e584:	vmul.f64	d16, d16, d17
   1e588:	vstr	d16, [fp, #-16]
   1e58c:	vldr	d16, [fp, #-16]
   1e590:	vcvt.u32.f64	s0, d16
   1e594:	vmov	r0, s0
   1e598:	str	r0, [sp, #12]
   1e59c:	ldr	r0, [sp, #12]
   1e5a0:	vmov	s0, r0
   1e5a4:	vcvt.f64.u32	d16, s0
   1e5a8:	vldr	d17, [fp, #-16]
   1e5ac:	vsub.f64	d16, d17, d16
   1e5b0:	vstr	d16, [fp, #-16]
   1e5b4:	vldr	d16, [fp, #-16]
   1e5b8:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e5bc:	vcmpe.f64	d16, d17
   1e5c0:	vmrs	APSR_nzcv, fpscr
   1e5c4:	bpl	1e5cc <__assert_fail@plt+0xd248>
   1e5c8:	b	1e5ec <__assert_fail@plt+0xd268>
   1e5cc:	movw	r0, #31518	; 0x7b1e
   1e5d0:	movt	r0, #3
   1e5d4:	movw	r1, #30584	; 0x7778
   1e5d8:	movt	r1, #3
   1e5dc:	movw	r2, #1744	; 0x6d0
   1e5e0:	movw	r3, #31526	; 0x7b26
   1e5e4:	movt	r3, #3
   1e5e8:	bl	11384 <__assert_fail@plt>
   1e5ec:	ldr	r0, [sp, #12]
   1e5f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5f4:	ldr	r2, [sp, #32]
   1e5f8:	add	r1, r1, r2, lsl #2
   1e5fc:	str	r0, [r1]
   1e600:	b	1e564 <__assert_fail@plt+0xd1e0>
   1e604:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e608:	cmp	r0, #0
   1e60c:	beq	1e624 <__assert_fail@plt+0xd2a0>
   1e610:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e614:	movw	r1, #0
   1e618:	sub	r0, r1, r0
   1e61c:	str	r0, [sp, #4]
   1e620:	b	1e62c <__assert_fail@plt+0xd2a8>
   1e624:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e628:	str	r0, [sp, #4]
   1e62c:	ldr	r0, [sp, #4]
   1e630:	ldr	r1, [fp, #-4]
   1e634:	str	r0, [r1, #4]
   1e638:	mov	sp, fp
   1e63c:	pop	{fp, pc}
   1e640:	andeq	r0, r0, r0
   1e644:	mvnsmi	r0, r0
   1e648:	push	{fp, lr}
   1e64c:	mov	fp, sp
   1e650:	sub	sp, sp, #16
   1e654:	str	r0, [fp, #-4]
   1e658:	vstr	d0, [sp]
   1e65c:	ldr	r0, [fp, #-4]
   1e660:	bl	1d714 <__assert_fail@plt+0xc390>
   1e664:	ldr	r0, [fp, #-4]
   1e668:	vldr	d0, [sp]
   1e66c:	bl	1e3a8 <__assert_fail@plt+0xd024>
   1e670:	mov	sp, fp
   1e674:	pop	{fp, pc}
   1e678:	sub	sp, sp, #56	; 0x38
   1e67c:	vldr	d16, [pc, #556]	; 1e8b0 <__assert_fail@plt+0xd52c>
   1e680:	str	r0, [sp, #44]	; 0x2c
   1e684:	vstr	d16, [sp, #16]
   1e688:	ldr	r0, [sp, #44]	; 0x2c
   1e68c:	ldr	r0, [r0, #4]
   1e690:	cmp	r0, #0
   1e694:	blt	1e6a8 <__assert_fail@plt+0xd324>
   1e698:	ldr	r0, [sp, #44]	; 0x2c
   1e69c:	ldr	r0, [r0, #4]
   1e6a0:	str	r0, [sp]
   1e6a4:	b	1e6bc <__assert_fail@plt+0xd338>
   1e6a8:	ldr	r0, [sp, #44]	; 0x2c
   1e6ac:	ldr	r0, [r0, #4]
   1e6b0:	movw	r1, #0
   1e6b4:	sub	r0, r1, r0
   1e6b8:	str	r0, [sp]
   1e6bc:	ldr	r0, [sp]
   1e6c0:	str	r0, [sp, #32]
   1e6c4:	ldr	r0, [sp, #32]
   1e6c8:	cmp	r0, #0
   1e6cc:	bne	1e6dc <__assert_fail@plt+0xd358>
   1e6d0:	vldr	d16, [pc, #480]	; 1e8b8 <__assert_fail@plt+0xd534>
   1e6d4:	vstr	d16, [sp, #48]	; 0x30
   1e6d8:	b	1e8a4 <__assert_fail@plt+0xd520>
   1e6dc:	ldr	r0, [sp, #44]	; 0x2c
   1e6e0:	ldr	r0, [r0, #8]
   1e6e4:	ldr	r1, [sp, #32]
   1e6e8:	sub	r1, r1, #1
   1e6ec:	str	r1, [sp, #32]
   1e6f0:	add	r0, r0, r1, lsl #2
   1e6f4:	ldr	r0, [r0]
   1e6f8:	str	r0, [sp, #36]	; 0x24
   1e6fc:	ldr	r0, [sp, #36]	; 0x24
   1e700:	str	r0, [sp, #12]
   1e704:	movw	r0, #0
   1e708:	str	r0, [sp, #8]
   1e70c:	movw	r0, #8
   1e710:	str	r0, [sp, #4]
   1e714:	ldr	r0, [sp, #4]
   1e718:	movw	r1, #32
   1e71c:	cmp	r1, r0
   1e720:	bls	1e75c <__assert_fail@plt+0xd3d8>
   1e724:	b	1e728 <__assert_fail@plt+0xd3a4>
   1e728:	ldr	r0, [sp, #12]
   1e72c:	and	r0, r0, #-16777216	; 0xff000000
   1e730:	cmp	r0, #0
   1e734:	bne	1e758 <__assert_fail@plt+0xd3d4>
   1e738:	ldr	r0, [sp, #4]
   1e73c:	ldr	r1, [sp, #12]
   1e740:	lsl	r0, r1, r0
   1e744:	str	r0, [sp, #12]
   1e748:	ldr	r0, [sp, #8]
   1e74c:	add	r0, r0, #8
   1e750:	str	r0, [sp, #8]
   1e754:	b	1e728 <__assert_fail@plt+0xd3a4>
   1e758:	b	1e75c <__assert_fail@plt+0xd3d8>
   1e75c:	b	1e760 <__assert_fail@plt+0xd3dc>
   1e760:	ldr	r0, [sp, #12]
   1e764:	and	r0, r0, #-2147483648	; 0x80000000
   1e768:	cmp	r0, #0
   1e76c:	bne	1e78c <__assert_fail@plt+0xd408>
   1e770:	ldr	r0, [sp, #12]
   1e774:	lsl	r0, r0, #1
   1e778:	str	r0, [sp, #12]
   1e77c:	ldr	r0, [sp, #8]
   1e780:	add	r0, r0, #1
   1e784:	str	r0, [sp, #8]
   1e788:	b	1e760 <__assert_fail@plt+0xd3dc>
   1e78c:	ldr	r0, [sp, #8]
   1e790:	str	r0, [sp, #40]	; 0x28
   1e794:	ldr	r0, [sp, #40]	; 0x28
   1e798:	add	r0, r0, #53	; 0x35
   1e79c:	sub	r0, r0, #32
   1e7a0:	str	r0, [sp, #40]	; 0x28
   1e7a4:	ldr	r0, [sp, #40]	; 0x28
   1e7a8:	cmp	r0, #0
   1e7ac:	bge	1e7d0 <__assert_fail@plt+0xd44c>
   1e7b0:	ldr	r0, [sp, #40]	; 0x28
   1e7b4:	movw	r1, #0
   1e7b8:	sub	r0, r1, r0
   1e7bc:	mvn	r1, #0
   1e7c0:	lsl	r0, r1, r0
   1e7c4:	ldr	r1, [sp, #36]	; 0x24
   1e7c8:	and	r0, r1, r0
   1e7cc:	str	r0, [sp, #36]	; 0x24
   1e7d0:	ldr	r0, [sp, #36]	; 0x24
   1e7d4:	vmov	s0, r0
   1e7d8:	vcvt.f64.u32	d16, s0
   1e7dc:	vstr	d16, [sp, #24]
   1e7e0:	ldr	r0, [sp, #32]
   1e7e4:	mvn	r1, #0
   1e7e8:	add	r0, r0, r1
   1e7ec:	str	r0, [sp, #32]
   1e7f0:	cmp	r0, #0
   1e7f4:	blt	1e880 <__assert_fail@plt+0xd4fc>
   1e7f8:	vldr	d16, [sp, #16]
   1e7fc:	vldr	d17, [sp, #24]
   1e800:	vmul.f64	d16, d16, d17
   1e804:	vstr	d16, [sp, #24]
   1e808:	ldr	r0, [sp, #40]	; 0x28
   1e80c:	cmp	r0, #0
   1e810:	ble	1e87c <__assert_fail@plt+0xd4f8>
   1e814:	ldr	r0, [sp, #44]	; 0x2c
   1e818:	ldr	r0, [r0, #8]
   1e81c:	ldr	r1, [sp, #32]
   1e820:	add	r0, r0, r1, lsl #2
   1e824:	ldr	r0, [r0]
   1e828:	str	r0, [sp, #36]	; 0x24
   1e82c:	ldr	r0, [sp, #40]	; 0x28
   1e830:	sub	r0, r0, #32
   1e834:	str	r0, [sp, #40]	; 0x28
   1e838:	ldr	r0, [sp, #40]	; 0x28
   1e83c:	cmp	r0, #0
   1e840:	bge	1e864 <__assert_fail@plt+0xd4e0>
   1e844:	ldr	r0, [sp, #40]	; 0x28
   1e848:	movw	r1, #0
   1e84c:	sub	r0, r1, r0
   1e850:	mvn	r1, #0
   1e854:	lsl	r0, r1, r0
   1e858:	ldr	r1, [sp, #36]	; 0x24
   1e85c:	and	r0, r1, r0
   1e860:	str	r0, [sp, #36]	; 0x24
   1e864:	ldr	r0, [sp, #36]	; 0x24
   1e868:	vmov	s0, r0
   1e86c:	vcvt.f64.u32	d16, s0
   1e870:	vldr	d17, [sp, #24]
   1e874:	vadd.f64	d16, d17, d16
   1e878:	vstr	d16, [sp, #24]
   1e87c:	b	1e7e0 <__assert_fail@plt+0xd45c>
   1e880:	ldr	r0, [sp, #44]	; 0x2c
   1e884:	ldr	r0, [r0, #4]
   1e888:	cmp	r0, #0
   1e88c:	bge	1e89c <__assert_fail@plt+0xd518>
   1e890:	vldr	d16, [sp, #24]
   1e894:	vneg.f64	d16, d16
   1e898:	vstr	d16, [sp, #24]
   1e89c:	vldr	d16, [sp, #24]
   1e8a0:	vstr	d16, [sp, #48]	; 0x30
   1e8a4:	vldr	d0, [sp, #48]	; 0x30
   1e8a8:	add	sp, sp, #56	; 0x38
   1e8ac:	bx	lr
   1e8b0:	andeq	r0, r0, r0
   1e8b4:	mvnsmi	r0, r0
	...
   1e8c0:	sub	sp, sp, #72	; 0x48
   1e8c4:	str	r0, [sp, #64]	; 0x40
   1e8c8:	vstr	d0, [sp, #56]	; 0x38
   1e8cc:	ldr	r0, [sp, #64]	; 0x40
   1e8d0:	ldr	r0, [r0, #4]
   1e8d4:	str	r0, [sp, #52]	; 0x34
   1e8d8:	vldr	d0, [sp, #56]	; 0x38
   1e8dc:	vcmpe.f64	d0, #0.0
   1e8e0:	vmrs	APSR_nzcv, fpscr
   1e8e4:	blt	1e8f4 <__assert_fail@plt+0xd570>
   1e8e8:	vldr	d16, [sp, #56]	; 0x38
   1e8ec:	vstr	d16, [sp, #8]
   1e8f0:	b	1e900 <__assert_fail@plt+0xd57c>
   1e8f4:	vldr	d16, [sp, #56]	; 0x38
   1e8f8:	vneg.f64	d16, d16
   1e8fc:	vstr	d16, [sp, #8]
   1e900:	vldr	d16, [sp, #8]
   1e904:	vstr	d16, [sp, #56]	; 0x38
   1e908:	ldr	r0, [sp, #52]	; 0x34
   1e90c:	cmp	r0, #0
   1e910:	beq	1ea5c <__assert_fail@plt+0xd6d8>
   1e914:	ldr	r0, [sp, #52]	; 0x34
   1e918:	cmp	r0, #0
   1e91c:	blt	1e92c <__assert_fail@plt+0xd5a8>
   1e920:	ldr	r0, [sp, #52]	; 0x34
   1e924:	str	r0, [sp, #4]
   1e928:	b	1e93c <__assert_fail@plt+0xd5b8>
   1e92c:	ldr	r0, [sp, #52]	; 0x34
   1e930:	movw	r1, #0
   1e934:	sub	r0, r1, r0
   1e938:	str	r0, [sp, #4]
   1e93c:	ldr	r0, [sp, #4]
   1e940:	vldr	d16, [pc, #328]	; 1ea90 <__assert_fail@plt+0xd70c>
   1e944:	str	r0, [sp, #52]	; 0x34
   1e948:	vstr	d16, [sp, #40]	; 0x28
   1e94c:	vldr	d16, [sp, #40]	; 0x28
   1e950:	vmov.f64	d17, #112	; 0x3f800000  1.0
   1e954:	vdiv.f64	d16, d17, d16
   1e958:	vstr	d16, [sp, #32]
   1e95c:	movw	r0, #1
   1e960:	str	r0, [sp, #28]
   1e964:	ldr	r0, [sp, #28]
   1e968:	ldr	r1, [sp, #52]	; 0x34
   1e96c:	cmp	r0, r1
   1e970:	bge	1e994 <__assert_fail@plt+0xd610>
   1e974:	vldr	d16, [sp, #32]
   1e978:	vldr	d17, [sp, #56]	; 0x38
   1e97c:	vmul.f64	d16, d17, d16
   1e980:	vstr	d16, [sp, #56]	; 0x38
   1e984:	ldr	r0, [sp, #28]
   1e988:	add	r0, r0, #1
   1e98c:	str	r0, [sp, #28]
   1e990:	b	1e964 <__assert_fail@plt+0xd5e0>
   1e994:	vldr	d16, [sp, #56]	; 0x38
   1e998:	vldr	d17, [sp, #40]	; 0x28
   1e99c:	vcmpe.f64	d16, d17
   1e9a0:	vmrs	APSR_nzcv, fpscr
   1e9a4:	blt	1e9b4 <__assert_fail@plt+0xd630>
   1e9a8:	mvn	r0, #0
   1e9ac:	str	r0, [sp, #68]	; 0x44
   1e9b0:	b	1ea80 <__assert_fail@plt+0xd6fc>
   1e9b4:	ldr	r0, [sp, #52]	; 0x34
   1e9b8:	str	r0, [sp, #28]
   1e9bc:	ldr	r0, [sp, #28]
   1e9c0:	mvn	r1, #0
   1e9c4:	add	r1, r0, r1
   1e9c8:	str	r1, [sp, #28]
   1e9cc:	cmp	r0, #0
   1e9d0:	ble	1ea58 <__assert_fail@plt+0xd6d4>
   1e9d4:	vldr	d16, [sp, #56]	; 0x38
   1e9d8:	vcvt.u32.f64	s0, d16
   1e9dc:	vstr	s0, [sp, #24]
   1e9e0:	ldr	r0, [sp, #64]	; 0x40
   1e9e4:	ldr	r0, [r0, #8]
   1e9e8:	ldr	r1, [sp, #28]
   1e9ec:	add	r0, r0, r1, lsl #2
   1e9f0:	ldr	r0, [r0]
   1e9f4:	str	r0, [sp, #20]
   1e9f8:	ldr	r0, [sp, #20]
   1e9fc:	ldr	r1, [sp, #24]
   1ea00:	cmp	r0, r1
   1ea04:	bls	1ea14 <__assert_fail@plt+0xd690>
   1ea08:	movw	r0, #1
   1ea0c:	str	r0, [sp, #68]	; 0x44
   1ea10:	b	1ea80 <__assert_fail@plt+0xd6fc>
   1ea14:	ldr	r0, [sp, #20]
   1ea18:	ldr	r1, [sp, #24]
   1ea1c:	cmp	r0, r1
   1ea20:	bcs	1ea30 <__assert_fail@plt+0xd6ac>
   1ea24:	mvn	r0, #0
   1ea28:	str	r0, [sp, #68]	; 0x44
   1ea2c:	b	1ea80 <__assert_fail@plt+0xd6fc>
   1ea30:	b	1ea34 <__assert_fail@plt+0xd6b0>
   1ea34:	vldr	d16, [sp, #40]	; 0x28
   1ea38:	vldr	d17, [sp, #56]	; 0x38
   1ea3c:	ldr	r0, [sp, #24]
   1ea40:	vmov	s0, r0
   1ea44:	vcvt.f64.u32	d18, s0
   1ea48:	vsub.f64	d17, d17, d18
   1ea4c:	vmul.f64	d16, d16, d17
   1ea50:	vstr	d16, [sp, #56]	; 0x38
   1ea54:	b	1e9bc <__assert_fail@plt+0xd638>
   1ea58:	b	1ea5c <__assert_fail@plt+0xd6d8>
   1ea5c:	vldr	d16, [sp, #56]	; 0x38
   1ea60:	vcmpe.f64	d16, #0.0
   1ea64:	vmrs	APSR_nzcv, fpscr
   1ea68:	movw	r0, #0
   1ea6c:	movgt	r0, #1
   1ea70:	and	r0, r0, #1
   1ea74:	movw	r1, #0
   1ea78:	sub	r0, r1, r0
   1ea7c:	str	r0, [sp, #68]	; 0x44
   1ea80:	ldr	r0, [sp, #68]	; 0x44
   1ea84:	add	sp, sp, #72	; 0x48
   1ea88:	bx	lr
   1ea8c:	nop	{0}
   1ea90:	andeq	r0, r0, r0
   1ea94:	mvnsmi	r0, r0
   1ea98:	push	{fp, lr}
   1ea9c:	mov	fp, sp
   1eaa0:	sub	sp, sp, #16
   1eaa4:	str	r0, [sp, #8]
   1eaa8:	vstr	d0, [sp]
   1eaac:	ldr	r0, [sp, #8]
   1eab0:	ldr	r0, [r0, #4]
   1eab4:	cmp	r0, #0
   1eab8:	bge	1eaf4 <__assert_fail@plt+0xd770>
   1eabc:	vldr	d16, [sp]
   1eac0:	vcmpe.f64	d16, #0.0
   1eac4:	vmrs	APSR_nzcv, fpscr
   1eac8:	blt	1ead8 <__assert_fail@plt+0xd754>
   1eacc:	mvn	r0, #0
   1ead0:	str	r0, [fp, #-4]
   1ead4:	b	1eb20 <__assert_fail@plt+0xd79c>
   1ead8:	ldr	r0, [sp, #8]
   1eadc:	vldr	d0, [sp]
   1eae0:	bl	1e8c0 <__assert_fail@plt+0xd53c>
   1eae4:	movw	lr, #0
   1eae8:	sub	r0, lr, r0
   1eaec:	str	r0, [fp, #-4]
   1eaf0:	b	1eb20 <__assert_fail@plt+0xd79c>
   1eaf4:	vldr	d16, [sp]
   1eaf8:	vcmpe.f64	d16, #0.0
   1eafc:	vmrs	APSR_nzcv, fpscr
   1eb00:	bpl	1eb10 <__assert_fail@plt+0xd78c>
   1eb04:	movw	r0, #1
   1eb08:	str	r0, [fp, #-4]
   1eb0c:	b	1eb20 <__assert_fail@plt+0xd79c>
   1eb10:	ldr	r0, [sp, #8]
   1eb14:	vldr	d0, [sp]
   1eb18:	bl	1e8c0 <__assert_fail@plt+0xd53c>
   1eb1c:	str	r0, [fp, #-4]
   1eb20:	ldr	r0, [fp, #-4]
   1eb24:	mov	sp, fp
   1eb28:	pop	{fp, pc}
   1eb2c:	sub	sp, sp, #4
   1eb30:	str	r0, [sp]
   1eb34:	ldr	r0, [sp]
   1eb38:	ldr	r0, [r0, #4]
   1eb3c:	cmp	r0, #0
   1eb40:	movw	r0, #0
   1eb44:	movgt	r0, #1
   1eb48:	and	r0, r0, #1
   1eb4c:	ldr	r1, [sp]
   1eb50:	ldr	r1, [r1, #4]
   1eb54:	cmp	r1, #0
   1eb58:	movw	r1, #0
   1eb5c:	movlt	r1, #1
   1eb60:	and	r1, r1, #1
   1eb64:	sub	r0, r0, r1
   1eb68:	add	sp, sp, #4
   1eb6c:	bx	lr
   1eb70:	push	{fp, lr}
   1eb74:	mov	fp, sp
   1eb78:	sub	sp, sp, #16
   1eb7c:	str	r0, [sp, #8]
   1eb80:	str	r1, [sp, #4]
   1eb84:	ldr	r0, [sp, #8]
   1eb88:	ldr	r0, [r0, #4]
   1eb8c:	str	r0, [sp]
   1eb90:	ldr	r0, [sp]
   1eb94:	cmp	r0, #0
   1eb98:	bge	1eba8 <__assert_fail@plt+0xd824>
   1eb9c:	mvn	r0, #0
   1eba0:	str	r0, [fp, #-4]
   1eba4:	b	1ebb8 <__assert_fail@plt+0xd834>
   1eba8:	ldr	r0, [sp, #8]
   1ebac:	ldr	r1, [sp, #4]
   1ebb0:	bl	1de68 <__assert_fail@plt+0xcae4>
   1ebb4:	str	r0, [fp, #-4]
   1ebb8:	ldr	r0, [fp, #-4]
   1ebbc:	mov	sp, fp
   1ebc0:	pop	{fp, pc}
   1ebc4:	push	{fp, lr}
   1ebc8:	mov	fp, sp
   1ebcc:	sub	sp, sp, #24
   1ebd0:	str	r0, [fp, #-8]
   1ebd4:	str	r1, [sp, #12]
   1ebd8:	ldr	r0, [fp, #-8]
   1ebdc:	ldr	r0, [r0, #4]
   1ebe0:	str	r0, [sp, #8]
   1ebe4:	ldr	r0, [sp, #12]
   1ebe8:	ldr	r0, [r0, #4]
   1ebec:	str	r0, [sp, #4]
   1ebf0:	ldr	r0, [sp, #8]
   1ebf4:	ldr	r1, [sp, #4]
   1ebf8:	cmp	r0, r1
   1ebfc:	beq	1ec28 <__assert_fail@plt+0xd8a4>
   1ec00:	ldr	r0, [sp, #8]
   1ec04:	ldr	r1, [sp, #4]
   1ec08:	cmp	r0, r1
   1ec0c:	movw	r0, #0
   1ec10:	movlt	r0, #1
   1ec14:	tst	r0, #1
   1ec18:	mvn	r0, #0
   1ec1c:	moveq	r0, #1
   1ec20:	str	r0, [fp, #-4]
   1ec24:	b	1ec78 <__assert_fail@plt+0xd8f4>
   1ec28:	ldr	r0, [sp, #8]
   1ec2c:	cmp	r0, #0
   1ec30:	blt	1ec54 <__assert_fail@plt+0xd8d0>
   1ec34:	ldr	r0, [fp, #-8]
   1ec38:	ldr	r0, [r0, #8]
   1ec3c:	ldr	r1, [sp, #12]
   1ec40:	ldr	r1, [r1, #8]
   1ec44:	ldr	r2, [sp, #8]
   1ec48:	bl	1b414 <__assert_fail@plt+0xa090>
   1ec4c:	str	r0, [fp, #-4]
   1ec50:	b	1ec78 <__assert_fail@plt+0xd8f4>
   1ec54:	ldr	r0, [sp, #12]
   1ec58:	ldr	r0, [r0, #8]
   1ec5c:	ldr	r1, [fp, #-8]
   1ec60:	ldr	r1, [r1, #8]
   1ec64:	ldr	r2, [sp, #8]
   1ec68:	movw	r3, #0
   1ec6c:	sub	r2, r3, r2
   1ec70:	bl	1b414 <__assert_fail@plt+0xa090>
   1ec74:	str	r0, [fp, #-4]
   1ec78:	ldr	r0, [fp, #-4]
   1ec7c:	mov	sp, fp
   1ec80:	pop	{fp, pc}
   1ec84:	push	{fp, lr}
   1ec88:	mov	fp, sp
   1ec8c:	sub	sp, sp, #32
   1ec90:	str	r0, [fp, #-4]
   1ec94:	str	r1, [fp, #-8]
   1ec98:	ldr	r0, [fp, #-4]
   1ec9c:	ldr	r0, [r0, #8]
   1eca0:	ldr	r1, [fp, #-4]
   1eca4:	ldr	r1, [r1, #4]
   1eca8:	cmp	r1, #0
   1ecac:	str	r0, [fp, #-12]
   1ecb0:	blt	1ecc4 <__assert_fail@plt+0xd940>
   1ecb4:	ldr	r0, [fp, #-4]
   1ecb8:	ldr	r0, [r0, #4]
   1ecbc:	str	r0, [sp, #16]
   1ecc0:	b	1ecd8 <__assert_fail@plt+0xd954>
   1ecc4:	ldr	r0, [fp, #-4]
   1ecc8:	ldr	r0, [r0, #4]
   1eccc:	movw	r1, #0
   1ecd0:	sub	r0, r1, r0
   1ecd4:	str	r0, [sp, #16]
   1ecd8:	ldr	r0, [sp, #16]
   1ecdc:	ldr	r1, [fp, #-8]
   1ece0:	ldr	r2, [r1, #8]
   1ece4:	ldr	r1, [fp, #-8]
   1ece8:	ldr	r1, [r1, #4]
   1ecec:	cmp	r1, #0
   1ecf0:	str	r0, [sp, #12]
   1ecf4:	str	r2, [sp, #8]
   1ecf8:	blt	1ed0c <__assert_fail@plt+0xd988>
   1ecfc:	ldr	r0, [fp, #-8]
   1ed00:	ldr	r0, [r0, #4]
   1ed04:	str	r0, [sp, #4]
   1ed08:	b	1ed20 <__assert_fail@plt+0xd99c>
   1ed0c:	ldr	r0, [fp, #-8]
   1ed10:	ldr	r0, [r0, #4]
   1ed14:	movw	r1, #0
   1ed18:	sub	r0, r1, r0
   1ed1c:	str	r0, [sp, #4]
   1ed20:	ldr	r0, [sp, #4]
   1ed24:	ldr	r1, [fp, #-12]
   1ed28:	str	r0, [sp]
   1ed2c:	mov	r0, r1
   1ed30:	ldr	r1, [sp, #12]
   1ed34:	ldr	r2, [sp, #8]
   1ed38:	ldr	r3, [sp]
   1ed3c:	bl	1ed48 <__assert_fail@plt+0xd9c4>
   1ed40:	mov	sp, fp
   1ed44:	pop	{fp, pc}
   1ed48:	push	{fp, lr}
   1ed4c:	mov	fp, sp
   1ed50:	sub	sp, sp, #24
   1ed54:	str	r0, [fp, #-8]
   1ed58:	str	r1, [sp, #12]
   1ed5c:	str	r2, [sp, #8]
   1ed60:	str	r3, [sp, #4]
   1ed64:	ldr	r0, [sp, #12]
   1ed68:	ldr	r1, [sp, #4]
   1ed6c:	cmp	r0, r1
   1ed70:	beq	1ed9c <__assert_fail@plt+0xda18>
   1ed74:	ldr	r0, [sp, #12]
   1ed78:	ldr	r1, [sp, #4]
   1ed7c:	cmp	r0, r1
   1ed80:	movw	r0, #0
   1ed84:	movlt	r0, #1
   1ed88:	tst	r0, #1
   1ed8c:	mvn	r0, #0
   1ed90:	moveq	r0, #1
   1ed94:	str	r0, [fp, #-4]
   1ed98:	b	1edb0 <__assert_fail@plt+0xda2c>
   1ed9c:	ldr	r0, [fp, #-8]
   1eda0:	ldr	r1, [sp, #8]
   1eda4:	ldr	r2, [sp, #12]
   1eda8:	bl	1b414 <__assert_fail@plt+0xa090>
   1edac:	str	r0, [fp, #-4]
   1edb0:	ldr	r0, [fp, #-4]
   1edb4:	mov	sp, fp
   1edb8:	pop	{fp, pc}
   1edbc:	push	{fp, lr}
   1edc0:	mov	fp, sp
   1edc4:	sub	sp, sp, #16
   1edc8:	str	r0, [fp, #-4]
   1edcc:	str	r1, [sp, #8]
   1edd0:	ldr	r0, [fp, #-4]
   1edd4:	ldr	r1, [sp, #8]
   1edd8:	bl	1da84 <__assert_fail@plt+0xc700>
   1eddc:	ldr	r0, [fp, #-4]
   1ede0:	ldr	r0, [r0, #4]
   1ede4:	cmp	r0, #0
   1ede8:	blt	1edfc <__assert_fail@plt+0xda78>
   1edec:	ldr	r0, [fp, #-4]
   1edf0:	ldr	r0, [r0, #4]
   1edf4:	str	r0, [sp, #4]
   1edf8:	b	1ee10 <__assert_fail@plt+0xda8c>
   1edfc:	ldr	r0, [fp, #-4]
   1ee00:	ldr	r0, [r0, #4]
   1ee04:	movw	r1, #0
   1ee08:	sub	r0, r1, r0
   1ee0c:	str	r0, [sp, #4]
   1ee10:	ldr	r0, [sp, #4]
   1ee14:	ldr	r1, [fp, #-4]
   1ee18:	str	r0, [r1, #4]
   1ee1c:	mov	sp, fp
   1ee20:	pop	{fp, pc}
   1ee24:	push	{fp, lr}
   1ee28:	mov	fp, sp
   1ee2c:	sub	sp, sp, #8
   1ee30:	str	r0, [sp, #4]
   1ee34:	str	r1, [sp]
   1ee38:	ldr	r0, [sp, #4]
   1ee3c:	ldr	r1, [sp]
   1ee40:	bl	1da84 <__assert_fail@plt+0xc700>
   1ee44:	ldr	r0, [sp, #4]
   1ee48:	ldr	r0, [r0, #4]
   1ee4c:	movw	r1, #0
   1ee50:	sub	r0, r1, r0
   1ee54:	ldr	r1, [sp, #4]
   1ee58:	str	r0, [r1, #4]
   1ee5c:	mov	sp, fp
   1ee60:	pop	{fp, pc}
   1ee64:	sub	sp, sp, #20
   1ee68:	str	r0, [sp, #16]
   1ee6c:	str	r1, [sp, #12]
   1ee70:	ldr	r0, [sp, #16]
   1ee74:	ldr	r0, [r0, #4]
   1ee78:	str	r0, [sp, #8]
   1ee7c:	ldr	r0, [sp, #12]
   1ee80:	ldr	r0, [r0, #4]
   1ee84:	ldr	r1, [sp, #16]
   1ee88:	str	r0, [r1, #4]
   1ee8c:	ldr	r0, [sp, #8]
   1ee90:	ldr	r1, [sp, #12]
   1ee94:	str	r0, [r1, #4]
   1ee98:	b	1ee9c <__assert_fail@plt+0xdb18>
   1ee9c:	ldr	r0, [sp, #16]
   1eea0:	ldr	r0, [r0]
   1eea4:	str	r0, [sp, #4]
   1eea8:	ldr	r0, [sp, #12]
   1eeac:	ldr	r0, [r0]
   1eeb0:	ldr	r1, [sp, #16]
   1eeb4:	str	r0, [r1]
   1eeb8:	ldr	r0, [sp, #4]
   1eebc:	ldr	r1, [sp, #12]
   1eec0:	str	r0, [r1]
   1eec4:	b	1eec8 <__assert_fail@plt+0xdb44>
   1eec8:	ldr	r0, [sp, #16]
   1eecc:	ldr	r0, [r0, #8]
   1eed0:	str	r0, [sp]
   1eed4:	ldr	r0, [sp, #12]
   1eed8:	ldr	r0, [r0, #8]
   1eedc:	ldr	r1, [sp, #16]
   1eee0:	str	r0, [r1, #8]
   1eee4:	ldr	r0, [sp]
   1eee8:	ldr	r1, [sp, #12]
   1eeec:	str	r0, [r1, #8]
   1eef0:	add	sp, sp, #20
   1eef4:	bx	lr
   1eef8:	push	{fp, lr}
   1eefc:	mov	fp, sp
   1ef00:	sub	sp, sp, #24
   1ef04:	mov	r3, sp
   1ef08:	str	r0, [fp, #-4]
   1ef0c:	str	r1, [fp, #-8]
   1ef10:	str	r2, [sp, #12]
   1ef14:	ldr	r1, [sp, #12]
   1ef18:	mov	r0, r3
   1ef1c:	bl	1db7c <__assert_fail@plt+0xc7f8>
   1ef20:	mov	r2, sp
   1ef24:	ldr	r0, [fp, #-4]
   1ef28:	ldr	r1, [fp, #-8]
   1ef2c:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   1ef30:	mov	r0, sp
   1ef34:	bl	1d7ec <__assert_fail@plt+0xc468>
   1ef38:	mov	sp, fp
   1ef3c:	pop	{fp, pc}
   1ef40:	push	{fp, lr}
   1ef44:	mov	fp, sp
   1ef48:	sub	sp, sp, #24
   1ef4c:	str	r0, [fp, #-4]
   1ef50:	str	r1, [fp, #-8]
   1ef54:	str	r2, [sp, #12]
   1ef58:	ldr	r0, [fp, #-8]
   1ef5c:	ldr	r0, [r0, #4]
   1ef60:	ldr	r1, [sp, #12]
   1ef64:	ldr	r1, [r1, #4]
   1ef68:	eor	r0, r0, r1
   1ef6c:	cmp	r0, #0
   1ef70:	blt	1ef8c <__assert_fail@plt+0xdc08>
   1ef74:	ldr	r0, [fp, #-4]
   1ef78:	ldr	r1, [fp, #-8]
   1ef7c:	ldr	r2, [sp, #12]
   1ef80:	bl	1f058 <__assert_fail@plt+0xdcd4>
   1ef84:	str	r0, [sp, #8]
   1ef88:	b	1efa0 <__assert_fail@plt+0xdc1c>
   1ef8c:	ldr	r0, [fp, #-4]
   1ef90:	ldr	r1, [fp, #-8]
   1ef94:	ldr	r2, [sp, #12]
   1ef98:	bl	1f1cc <__assert_fail@plt+0xde48>
   1ef9c:	str	r0, [sp, #8]
   1efa0:	ldr	r0, [fp, #-8]
   1efa4:	ldr	r0, [r0, #4]
   1efa8:	cmp	r0, #0
   1efac:	blt	1efbc <__assert_fail@plt+0xdc38>
   1efb0:	ldr	r0, [sp, #8]
   1efb4:	str	r0, [sp, #4]
   1efb8:	b	1efcc <__assert_fail@plt+0xdc48>
   1efbc:	ldr	r0, [sp, #8]
   1efc0:	movw	r1, #0
   1efc4:	sub	r0, r1, r0
   1efc8:	str	r0, [sp, #4]
   1efcc:	ldr	r0, [sp, #4]
   1efd0:	ldr	r1, [fp, #-4]
   1efd4:	str	r0, [r1, #4]
   1efd8:	mov	sp, fp
   1efdc:	pop	{fp, pc}
   1efe0:	push	{fp, lr}
   1efe4:	mov	fp, sp
   1efe8:	sub	sp, sp, #16
   1efec:	str	r0, [fp, #-4]
   1eff0:	str	r1, [sp, #8]
   1eff4:	str	r2, [sp, #4]
   1eff8:	ldr	r0, [fp, #-4]
   1effc:	ldr	r1, [sp, #4]
   1f000:	ldr	r2, [sp, #8]
   1f004:	bl	1f01c <__assert_fail@plt+0xdc98>
   1f008:	ldr	r0, [fp, #-4]
   1f00c:	ldr	r1, [fp, #-4]
   1f010:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   1f014:	mov	sp, fp
   1f018:	pop	{fp, pc}
   1f01c:	push	{fp, lr}
   1f020:	mov	fp, sp
   1f024:	sub	sp, sp, #16
   1f028:	str	r0, [fp, #-4]
   1f02c:	str	r1, [sp, #8]
   1f030:	str	r2, [sp, #4]
   1f034:	ldr	r0, [fp, #-4]
   1f038:	ldr	r1, [sp, #4]
   1f03c:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   1f040:	ldr	r0, [fp, #-4]
   1f044:	ldr	r1, [fp, #-4]
   1f048:	ldr	r2, [sp, #8]
   1f04c:	bl	1eef8 <__assert_fail@plt+0xdb74>
   1f050:	mov	sp, fp
   1f054:	pop	{fp, pc}
   1f058:	push	{fp, lr}
   1f05c:	mov	fp, sp
   1f060:	sub	sp, sp, #56	; 0x38
   1f064:	str	r0, [fp, #-4]
   1f068:	str	r1, [fp, #-8]
   1f06c:	str	r2, [fp, #-12]
   1f070:	ldr	r0, [fp, #-8]
   1f074:	ldr	r0, [r0, #4]
   1f078:	cmp	r0, #0
   1f07c:	blt	1f090 <__assert_fail@plt+0xdd0c>
   1f080:	ldr	r0, [fp, #-8]
   1f084:	ldr	r0, [r0, #4]
   1f088:	str	r0, [sp, #16]
   1f08c:	b	1f0a4 <__assert_fail@plt+0xdd20>
   1f090:	ldr	r0, [fp, #-8]
   1f094:	ldr	r0, [r0, #4]
   1f098:	movw	r1, #0
   1f09c:	sub	r0, r1, r0
   1f0a0:	str	r0, [sp, #16]
   1f0a4:	ldr	r0, [sp, #16]
   1f0a8:	str	r0, [fp, #-16]
   1f0ac:	ldr	r0, [fp, #-12]
   1f0b0:	ldr	r0, [r0, #4]
   1f0b4:	cmp	r0, #0
   1f0b8:	blt	1f0cc <__assert_fail@plt+0xdd48>
   1f0bc:	ldr	r0, [fp, #-12]
   1f0c0:	ldr	r0, [r0, #4]
   1f0c4:	str	r0, [sp, #12]
   1f0c8:	b	1f0e0 <__assert_fail@plt+0xdd5c>
   1f0cc:	ldr	r0, [fp, #-12]
   1f0d0:	ldr	r0, [r0, #4]
   1f0d4:	movw	r1, #0
   1f0d8:	sub	r0, r1, r0
   1f0dc:	str	r0, [sp, #12]
   1f0e0:	ldr	r0, [sp, #12]
   1f0e4:	str	r0, [fp, #-20]	; 0xffffffec
   1f0e8:	ldr	r0, [fp, #-16]
   1f0ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f0f0:	cmp	r0, r1
   1f0f4:	bge	1f134 <__assert_fail@plt+0xddb0>
   1f0f8:	b	1f0fc <__assert_fail@plt+0xdd78>
   1f0fc:	ldr	r0, [fp, #-8]
   1f100:	str	r0, [sp, #24]
   1f104:	ldr	r0, [fp, #-12]
   1f108:	str	r0, [fp, #-8]
   1f10c:	ldr	r0, [sp, #24]
   1f110:	str	r0, [fp, #-12]
   1f114:	b	1f118 <__assert_fail@plt+0xdd94>
   1f118:	ldr	r0, [fp, #-16]
   1f11c:	str	r0, [sp, #20]
   1f120:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f124:	str	r0, [fp, #-16]
   1f128:	ldr	r0, [sp, #20]
   1f12c:	str	r0, [fp, #-20]	; 0xffffffec
   1f130:	b	1f134 <__assert_fail@plt+0xddb0>
   1f134:	ldr	r0, [fp, #-16]
   1f138:	add	r0, r0, #1
   1f13c:	ldr	r1, [fp, #-4]
   1f140:	ldr	r1, [r1]
   1f144:	cmp	r0, r1
   1f148:	ble	1f164 <__assert_fail@plt+0xdde0>
   1f14c:	ldr	r0, [fp, #-4]
   1f150:	ldr	r1, [fp, #-16]
   1f154:	add	r1, r1, #1
   1f158:	bl	1d994 <__assert_fail@plt+0xc610>
   1f15c:	str	r0, [sp, #8]
   1f160:	b	1f170 <__assert_fail@plt+0xddec>
   1f164:	ldr	r0, [fp, #-4]
   1f168:	ldr	r0, [r0, #8]
   1f16c:	str	r0, [sp, #8]
   1f170:	ldr	r0, [sp, #8]
   1f174:	str	r0, [fp, #-24]	; 0xffffffe8
   1f178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f17c:	ldr	r1, [fp, #-8]
   1f180:	ldr	r1, [r1, #8]
   1f184:	ldr	r2, [fp, #-16]
   1f188:	ldr	r3, [fp, #-12]
   1f18c:	ldr	r3, [r3, #8]
   1f190:	ldr	ip, [fp, #-20]	; 0xffffffec
   1f194:	mov	lr, sp
   1f198:	str	ip, [lr]
   1f19c:	bl	1b728 <__assert_fail@plt+0xa3a4>
   1f1a0:	str	r0, [sp, #28]
   1f1a4:	ldr	r0, [sp, #28]
   1f1a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1ac:	ldr	r2, [fp, #-16]
   1f1b0:	add	r1, r1, r2, lsl #2
   1f1b4:	str	r0, [r1]
   1f1b8:	ldr	r0, [fp, #-16]
   1f1bc:	ldr	r1, [sp, #28]
   1f1c0:	add	r0, r0, r1
   1f1c4:	mov	sp, fp
   1f1c8:	pop	{fp, pc}
   1f1cc:	push	{fp, lr}
   1f1d0:	mov	fp, sp
   1f1d4:	sub	sp, sp, #64	; 0x40
   1f1d8:	str	r0, [fp, #-8]
   1f1dc:	str	r1, [fp, #-12]
   1f1e0:	str	r2, [fp, #-16]
   1f1e4:	ldr	r0, [fp, #-12]
   1f1e8:	ldr	r0, [r0, #4]
   1f1ec:	cmp	r0, #0
   1f1f0:	blt	1f204 <__assert_fail@plt+0xde80>
   1f1f4:	ldr	r0, [fp, #-12]
   1f1f8:	ldr	r0, [r0, #4]
   1f1fc:	str	r0, [sp, #20]
   1f200:	b	1f218 <__assert_fail@plt+0xde94>
   1f204:	ldr	r0, [fp, #-12]
   1f208:	ldr	r0, [r0, #4]
   1f20c:	movw	r1, #0
   1f210:	sub	r0, r1, r0
   1f214:	str	r0, [sp, #20]
   1f218:	ldr	r0, [sp, #20]
   1f21c:	str	r0, [fp, #-20]	; 0xffffffec
   1f220:	ldr	r0, [fp, #-16]
   1f224:	ldr	r0, [r0, #4]
   1f228:	cmp	r0, #0
   1f22c:	blt	1f240 <__assert_fail@plt+0xdebc>
   1f230:	ldr	r0, [fp, #-16]
   1f234:	ldr	r0, [r0, #4]
   1f238:	str	r0, [sp, #16]
   1f23c:	b	1f254 <__assert_fail@plt+0xded0>
   1f240:	ldr	r0, [fp, #-16]
   1f244:	ldr	r0, [r0, #4]
   1f248:	movw	r1, #0
   1f24c:	sub	r0, r1, r0
   1f250:	str	r0, [sp, #16]
   1f254:	ldr	r0, [sp, #16]
   1f258:	str	r0, [fp, #-24]	; 0xffffffe8
   1f25c:	ldr	r0, [fp, #-12]
   1f260:	ldr	r0, [r0, #8]
   1f264:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f268:	ldr	r2, [fp, #-16]
   1f26c:	ldr	r2, [r2, #8]
   1f270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f274:	bl	1ed48 <__assert_fail@plt+0xd9c4>
   1f278:	str	r0, [fp, #-28]	; 0xffffffe4
   1f27c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f280:	cmp	r0, #0
   1f284:	ble	1f334 <__assert_fail@plt+0xdfb0>
   1f288:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f28c:	ldr	r1, [fp, #-8]
   1f290:	ldr	r1, [r1]
   1f294:	cmp	r0, r1
   1f298:	ble	1f2b0 <__assert_fail@plt+0xdf2c>
   1f29c:	ldr	r0, [fp, #-8]
   1f2a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f2a4:	bl	1d994 <__assert_fail@plt+0xc610>
   1f2a8:	str	r0, [sp, #12]
   1f2ac:	b	1f2bc <__assert_fail@plt+0xdf38>
   1f2b0:	ldr	r0, [fp, #-8]
   1f2b4:	ldr	r0, [r0, #8]
   1f2b8:	str	r0, [sp, #12]
   1f2bc:	ldr	r0, [sp, #12]
   1f2c0:	str	r0, [sp, #32]
   1f2c4:	ldr	r0, [sp, #32]
   1f2c8:	ldr	r1, [fp, #-12]
   1f2cc:	ldr	r1, [r1, #8]
   1f2d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f2d4:	ldr	r3, [fp, #-16]
   1f2d8:	ldr	r3, [r3, #8]
   1f2dc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1f2e0:	str	ip, [sp]
   1f2e4:	bl	1b970 <__assert_fail@plt+0xa5ec>
   1f2e8:	str	r0, [sp, #28]
   1f2ec:	ldr	r0, [sp, #28]
   1f2f0:	cmp	r0, #0
   1f2f4:	bne	1f2fc <__assert_fail@plt+0xdf78>
   1f2f8:	b	1f31c <__assert_fail@plt+0xdf98>
   1f2fc:	movw	r0, #31565	; 0x7b4d
   1f300:	movt	r0, #3
   1f304:	movw	r1, #30584	; 0x7778
   1f308:	movt	r1, #3
   1f30c:	movw	r2, #2006	; 0x7d6
   1f310:	movw	r3, #33854	; 0x843e
   1f314:	movt	r3, #3
   1f318:	bl	11384 <__assert_fail@plt>
   1f31c:	b	1f320 <__assert_fail@plt+0xdf9c>
   1f320:	ldr	r0, [sp, #32]
   1f324:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f328:	bl	1b4e4 <__assert_fail@plt+0xa160>
   1f32c:	str	r0, [fp, #-4]
   1f330:	b	1f3fc <__assert_fail@plt+0xe078>
   1f334:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f338:	cmp	r0, #0
   1f33c:	bge	1f3f4 <__assert_fail@plt+0xe070>
   1f340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f344:	ldr	r1, [fp, #-8]
   1f348:	ldr	r1, [r1]
   1f34c:	cmp	r0, r1
   1f350:	ble	1f368 <__assert_fail@plt+0xdfe4>
   1f354:	ldr	r0, [fp, #-8]
   1f358:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f35c:	bl	1d994 <__assert_fail@plt+0xc610>
   1f360:	str	r0, [sp, #8]
   1f364:	b	1f374 <__assert_fail@plt+0xdff0>
   1f368:	ldr	r0, [fp, #-8]
   1f36c:	ldr	r0, [r0, #8]
   1f370:	str	r0, [sp, #8]
   1f374:	ldr	r0, [sp, #8]
   1f378:	str	r0, [sp, #32]
   1f37c:	ldr	r0, [sp, #32]
   1f380:	ldr	r1, [fp, #-16]
   1f384:	ldr	r1, [r1, #8]
   1f388:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f38c:	ldr	r3, [fp, #-12]
   1f390:	ldr	r3, [r3, #8]
   1f394:	ldr	ip, [fp, #-20]	; 0xffffffec
   1f398:	str	ip, [sp]
   1f39c:	bl	1b970 <__assert_fail@plt+0xa5ec>
   1f3a0:	str	r0, [sp, #24]
   1f3a4:	ldr	r0, [sp, #24]
   1f3a8:	cmp	r0, #0
   1f3ac:	bne	1f3b4 <__assert_fail@plt+0xe030>
   1f3b0:	b	1f3d4 <__assert_fail@plt+0xe050>
   1f3b4:	movw	r0, #31565	; 0x7b4d
   1f3b8:	movt	r0, #3
   1f3bc:	movw	r1, #30584	; 0x7778
   1f3c0:	movt	r1, #3
   1f3c4:	movw	r2, #2012	; 0x7dc
   1f3c8:	movw	r3, #33854	; 0x843e
   1f3cc:	movt	r3, #3
   1f3d0:	bl	11384 <__assert_fail@plt>
   1f3d4:	b	1f3d8 <__assert_fail@plt+0xe054>
   1f3d8:	ldr	r0, [sp, #32]
   1f3dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f3e0:	bl	1b4e4 <__assert_fail@plt+0xa160>
   1f3e4:	movw	r1, #0
   1f3e8:	sub	r0, r1, r0
   1f3ec:	str	r0, [fp, #-4]
   1f3f0:	b	1f3fc <__assert_fail@plt+0xe078>
   1f3f4:	movw	r0, #0
   1f3f8:	str	r0, [fp, #-4]
   1f3fc:	ldr	r0, [fp, #-4]
   1f400:	mov	sp, fp
   1f404:	pop	{fp, pc}
   1f408:	push	{fp, lr}
   1f40c:	mov	fp, sp
   1f410:	sub	sp, sp, #24
   1f414:	str	r0, [fp, #-4]
   1f418:	str	r1, [fp, #-8]
   1f41c:	str	r2, [sp, #12]
   1f420:	ldr	r0, [fp, #-8]
   1f424:	ldr	r0, [r0, #4]
   1f428:	ldr	r1, [sp, #12]
   1f42c:	ldr	r1, [r1, #4]
   1f430:	eor	r0, r0, r1
   1f434:	cmp	r0, #0
   1f438:	blt	1f454 <__assert_fail@plt+0xe0d0>
   1f43c:	ldr	r0, [fp, #-4]
   1f440:	ldr	r1, [fp, #-8]
   1f444:	ldr	r2, [sp, #12]
   1f448:	bl	1f1cc <__assert_fail@plt+0xde48>
   1f44c:	str	r0, [sp, #8]
   1f450:	b	1f468 <__assert_fail@plt+0xe0e4>
   1f454:	ldr	r0, [fp, #-4]
   1f458:	ldr	r1, [fp, #-8]
   1f45c:	ldr	r2, [sp, #12]
   1f460:	bl	1f058 <__assert_fail@plt+0xdcd4>
   1f464:	str	r0, [sp, #8]
   1f468:	ldr	r0, [fp, #-8]
   1f46c:	ldr	r0, [r0, #4]
   1f470:	cmp	r0, #0
   1f474:	blt	1f484 <__assert_fail@plt+0xe100>
   1f478:	ldr	r0, [sp, #8]
   1f47c:	str	r0, [sp, #4]
   1f480:	b	1f494 <__assert_fail@plt+0xe110>
   1f484:	ldr	r0, [sp, #8]
   1f488:	movw	r1, #0
   1f48c:	sub	r0, r1, r0
   1f490:	str	r0, [sp, #4]
   1f494:	ldr	r0, [sp, #4]
   1f498:	ldr	r1, [fp, #-4]
   1f49c:	str	r0, [r1, #4]
   1f4a0:	mov	sp, fp
   1f4a4:	pop	{fp, pc}
   1f4a8:	push	{fp, lr}
   1f4ac:	mov	fp, sp
   1f4b0:	sub	sp, sp, #16
   1f4b4:	str	r0, [fp, #-4]
   1f4b8:	str	r1, [sp, #8]
   1f4bc:	str	r2, [sp, #4]
   1f4c0:	ldr	r0, [sp, #4]
   1f4c4:	cmp	r0, #0
   1f4c8:	bge	1f4fc <__assert_fail@plt+0xe178>
   1f4cc:	ldr	r0, [fp, #-4]
   1f4d0:	ldr	r1, [sp, #8]
   1f4d4:	ldr	r2, [sp, #4]
   1f4d8:	add	r2, r2, #1
   1f4dc:	sub	r2, r2, #1
   1f4e0:	movw	r3, #0
   1f4e4:	sub	r2, r3, r2
   1f4e8:	bl	1f514 <__assert_fail@plt+0xe190>
   1f4ec:	ldr	r0, [fp, #-4]
   1f4f0:	ldr	r1, [fp, #-4]
   1f4f4:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   1f4f8:	b	1f50c <__assert_fail@plt+0xe188>
   1f4fc:	ldr	r0, [fp, #-4]
   1f500:	ldr	r1, [sp, #8]
   1f504:	ldr	r2, [sp, #4]
   1f508:	bl	1f514 <__assert_fail@plt+0xe190>
   1f50c:	mov	sp, fp
   1f510:	pop	{fp, pc}
   1f514:	push	{fp, lr}
   1f518:	mov	fp, sp
   1f51c:	sub	sp, sp, #24
   1f520:	mov	r3, sp
   1f524:	str	r0, [fp, #-4]
   1f528:	str	r1, [fp, #-8]
   1f52c:	str	r2, [sp, #12]
   1f530:	ldr	r1, [sp, #12]
   1f534:	mov	r0, r3
   1f538:	bl	1db7c <__assert_fail@plt+0xc7f8>
   1f53c:	mov	r2, sp
   1f540:	ldr	r0, [fp, #-4]
   1f544:	ldr	r1, [fp, #-8]
   1f548:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1f54c:	mov	r0, sp
   1f550:	bl	1d7ec <__assert_fail@plt+0xc468>
   1f554:	mov	sp, fp
   1f558:	pop	{fp, pc}
   1f55c:	push	{fp, lr}
   1f560:	mov	fp, sp
   1f564:	sub	sp, sp, #72	; 0x48
   1f568:	str	r0, [fp, #-4]
   1f56c:	str	r1, [fp, #-8]
   1f570:	str	r2, [fp, #-12]
   1f574:	ldr	r0, [fp, #-8]
   1f578:	ldr	r0, [r0, #4]
   1f57c:	str	r0, [fp, #-20]	; 0xffffffec
   1f580:	ldr	r0, [fp, #-12]
   1f584:	ldr	r0, [r0, #4]
   1f588:	str	r0, [fp, #-24]	; 0xffffffe8
   1f58c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f590:	cmp	r0, #0
   1f594:	beq	1f5a4 <__assert_fail@plt+0xe220>
   1f598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f59c:	cmp	r0, #0
   1f5a0:	bne	1f5b4 <__assert_fail@plt+0xe230>
   1f5a4:	ldr	r0, [fp, #-4]
   1f5a8:	movw	r1, #0
   1f5ac:	str	r1, [r0, #4]
   1f5b0:	b	1f73c <__assert_fail@plt+0xe3b8>
   1f5b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f5b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f5bc:	eor	r0, r0, r1
   1f5c0:	cmp	r0, #0
   1f5c4:	movw	r0, #0
   1f5c8:	movlt	r0, #1
   1f5cc:	and	r0, r0, #1
   1f5d0:	str	r0, [fp, #-16]
   1f5d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f5d8:	cmp	r0, #0
   1f5dc:	blt	1f5ec <__assert_fail@plt+0xe268>
   1f5e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f5e4:	str	r0, [sp, #24]
   1f5e8:	b	1f5fc <__assert_fail@plt+0xe278>
   1f5ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f5f0:	movw	r1, #0
   1f5f4:	sub	r0, r1, r0
   1f5f8:	str	r0, [sp, #24]
   1f5fc:	ldr	r0, [sp, #24]
   1f600:	str	r0, [fp, #-20]	; 0xffffffec
   1f604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f608:	cmp	r0, #0
   1f60c:	blt	1f61c <__assert_fail@plt+0xe298>
   1f610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f614:	str	r0, [sp, #20]
   1f618:	b	1f62c <__assert_fail@plt+0xe2a8>
   1f61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f620:	movw	r1, #0
   1f624:	sub	r0, r1, r0
   1f628:	str	r0, [sp, #20]
   1f62c:	ldr	r0, [sp, #20]
   1f630:	str	r0, [fp, #-24]	; 0xffffffe8
   1f634:	add	r0, sp, #32
   1f638:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f63c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f640:	add	r1, r1, r2
   1f644:	lsl	r1, r1, #5
   1f648:	bl	1d748 <__assert_fail@plt+0xc3c4>
   1f64c:	ldr	r0, [sp, #40]	; 0x28
   1f650:	str	r0, [sp, #28]
   1f654:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f65c:	cmp	r0, r1
   1f660:	blt	1f690 <__assert_fail@plt+0xe30c>
   1f664:	ldr	r0, [sp, #28]
   1f668:	ldr	r1, [fp, #-8]
   1f66c:	ldr	r1, [r1, #8]
   1f670:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f674:	ldr	r3, [fp, #-12]
   1f678:	ldr	r3, [r3, #8]
   1f67c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1f680:	str	ip, [sp]
   1f684:	bl	1c018 <__assert_fail@plt+0xac94>
   1f688:	str	r0, [sp, #16]
   1f68c:	b	1f6b8 <__assert_fail@plt+0xe334>
   1f690:	ldr	r0, [sp, #28]
   1f694:	ldr	r1, [fp, #-12]
   1f698:	ldr	r1, [r1, #8]
   1f69c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f6a0:	ldr	r3, [fp, #-8]
   1f6a4:	ldr	r3, [r3, #8]
   1f6a8:	ldr	ip, [fp, #-20]	; 0xffffffec
   1f6ac:	str	ip, [sp]
   1f6b0:	bl	1c018 <__assert_fail@plt+0xac94>
   1f6b4:	str	r0, [sp, #12]
   1f6b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f6c0:	add	r0, r0, r1
   1f6c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6c8:	ldr	r0, [sp, #28]
   1f6cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f6d0:	sub	r1, r1, #1
   1f6d4:	add	r0, r0, r1, lsl #2
   1f6d8:	ldr	r0, [r0]
   1f6dc:	cmp	r0, #0
   1f6e0:	movw	r0, #0
   1f6e4:	moveq	r0, #1
   1f6e8:	and	r0, r0, #1
   1f6ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f6f0:	sub	r0, r1, r0
   1f6f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6f8:	ldr	r0, [fp, #-16]
   1f6fc:	cmp	r0, #0
   1f700:	beq	1f718 <__assert_fail@plt+0xe394>
   1f704:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f708:	movw	r1, #0
   1f70c:	sub	r0, r1, r0
   1f710:	str	r0, [sp, #8]
   1f714:	b	1f720 <__assert_fail@plt+0xe39c>
   1f718:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f71c:	str	r0, [sp, #8]
   1f720:	ldr	r0, [sp, #8]
   1f724:	add	r1, sp, #32
   1f728:	str	r0, [sp, #36]	; 0x24
   1f72c:	ldr	r0, [fp, #-4]
   1f730:	bl	1ee64 <__assert_fail@plt+0xdae0>
   1f734:	add	r0, sp, #32
   1f738:	bl	1d7ec <__assert_fail@plt+0xc468>
   1f73c:	mov	sp, fp
   1f740:	pop	{fp, pc}
   1f744:	push	{fp, lr}
   1f748:	mov	fp, sp
   1f74c:	sub	sp, sp, #48	; 0x30
   1f750:	str	r0, [fp, #-4]
   1f754:	str	r1, [fp, #-8]
   1f758:	str	r2, [fp, #-12]
   1f75c:	ldr	r0, [fp, #-8]
   1f760:	ldr	r0, [r0, #4]
   1f764:	cmp	r0, #0
   1f768:	blt	1f77c <__assert_fail@plt+0xe3f8>
   1f76c:	ldr	r0, [fp, #-8]
   1f770:	ldr	r0, [r0, #4]
   1f774:	str	r0, [sp, #8]
   1f778:	b	1f790 <__assert_fail@plt+0xe40c>
   1f77c:	ldr	r0, [fp, #-8]
   1f780:	ldr	r0, [r0, #4]
   1f784:	movw	r1, #0
   1f788:	sub	r0, r1, r0
   1f78c:	str	r0, [sp, #8]
   1f790:	ldr	r0, [sp, #8]
   1f794:	str	r0, [fp, #-16]
   1f798:	ldr	r0, [fp, #-16]
   1f79c:	cmp	r0, #0
   1f7a0:	bne	1f7b4 <__assert_fail@plt+0xe430>
   1f7a4:	ldr	r0, [fp, #-4]
   1f7a8:	movw	r1, #0
   1f7ac:	str	r1, [r0, #4]
   1f7b0:	b	1f8fc <__assert_fail@plt+0xe578>
   1f7b4:	ldr	r0, [fp, #-12]
   1f7b8:	lsr	r0, r0, #5
   1f7bc:	str	r0, [sp, #24]
   1f7c0:	ldr	r0, [fp, #-12]
   1f7c4:	and	r0, r0, #31
   1f7c8:	str	r0, [sp, #20]
   1f7cc:	ldr	r0, [fp, #-16]
   1f7d0:	ldr	r1, [sp, #24]
   1f7d4:	add	r0, r0, r1
   1f7d8:	ldr	r1, [sp, #20]
   1f7dc:	cmp	r1, #0
   1f7e0:	movw	r1, #0
   1f7e4:	movhi	r1, #1
   1f7e8:	and	r1, r1, #1
   1f7ec:	add	r0, r0, r1
   1f7f0:	str	r0, [fp, #-20]	; 0xffffffec
   1f7f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f7f8:	ldr	r1, [fp, #-4]
   1f7fc:	ldr	r1, [r1]
   1f800:	cmp	r0, r1
   1f804:	ble	1f81c <__assert_fail@plt+0xe498>
   1f808:	ldr	r0, [fp, #-4]
   1f80c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f810:	bl	1d994 <__assert_fail@plt+0xc610>
   1f814:	str	r0, [sp, #4]
   1f818:	b	1f828 <__assert_fail@plt+0xe4a4>
   1f81c:	ldr	r0, [fp, #-4]
   1f820:	ldr	r0, [r0, #8]
   1f824:	str	r0, [sp, #4]
   1f828:	ldr	r0, [sp, #4]
   1f82c:	str	r0, [sp, #16]
   1f830:	ldr	r0, [sp, #20]
   1f834:	cmp	r0, #0
   1f838:	bls	1f89c <__assert_fail@plt+0xe518>
   1f83c:	ldr	r0, [sp, #16]
   1f840:	ldr	r1, [sp, #24]
   1f844:	add	r0, r0, r1, lsl #2
   1f848:	ldr	r1, [fp, #-8]
   1f84c:	ldr	r1, [r1, #8]
   1f850:	ldr	r2, [fp, #-16]
   1f854:	ldr	r3, [sp, #20]
   1f858:	bl	1c278 <__assert_fail@plt+0xaef4>
   1f85c:	str	r0, [sp, #12]
   1f860:	ldr	r0, [sp, #12]
   1f864:	ldr	r1, [sp, #16]
   1f868:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f86c:	sub	r2, r2, #1
   1f870:	add	r1, r1, r2, lsl #2
   1f874:	str	r0, [r1]
   1f878:	ldr	r0, [sp, #12]
   1f87c:	cmp	r0, #0
   1f880:	movw	r0, #0
   1f884:	moveq	r0, #1
   1f888:	and	r0, r0, #1
   1f88c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f890:	sub	r0, r1, r0
   1f894:	str	r0, [fp, #-20]	; 0xffffffec
   1f898:	b	1f8b8 <__assert_fail@plt+0xe534>
   1f89c:	ldr	r0, [sp, #16]
   1f8a0:	ldr	r1, [sp, #24]
   1f8a4:	add	r0, r0, r1, lsl #2
   1f8a8:	ldr	r1, [fp, #-8]
   1f8ac:	ldr	r1, [r1, #8]
   1f8b0:	ldr	r2, [fp, #-16]
   1f8b4:	bl	1b3c8 <__assert_fail@plt+0xa044>
   1f8b8:	ldr	r0, [sp, #16]
   1f8bc:	ldr	r1, [sp, #24]
   1f8c0:	bl	1b554 <__assert_fail@plt+0xa1d0>
   1f8c4:	ldr	r0, [fp, #-8]
   1f8c8:	ldr	r0, [r0, #4]
   1f8cc:	cmp	r0, #0
   1f8d0:	bge	1f8e8 <__assert_fail@plt+0xe564>
   1f8d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f8d8:	movw	r1, #0
   1f8dc:	sub	r0, r1, r0
   1f8e0:	str	r0, [sp]
   1f8e4:	b	1f8f0 <__assert_fail@plt+0xe56c>
   1f8e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f8ec:	str	r0, [sp]
   1f8f0:	ldr	r0, [sp]
   1f8f4:	ldr	r1, [fp, #-4]
   1f8f8:	str	r0, [r1, #4]
   1f8fc:	mov	sp, fp
   1f900:	pop	{fp, pc}
   1f904:	push	{fp, lr}
   1f908:	mov	fp, sp
   1f90c:	sub	sp, sp, #32
   1f910:	add	r3, sp, #8
   1f914:	str	r0, [fp, #-4]
   1f918:	str	r1, [fp, #-8]
   1f91c:	str	r2, [fp, #-12]
   1f920:	ldr	r1, [fp, #-12]
   1f924:	mov	r0, r3
   1f928:	bl	1db7c <__assert_fail@plt+0xc7f8>
   1f92c:	add	r0, sp, #8
   1f930:	ldr	r1, [fp, #-8]
   1f934:	str	r0, [sp, #4]
   1f938:	ldr	r2, [sp, #4]
   1f93c:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1f940:	add	r2, sp, #8
   1f944:	ldr	r0, [fp, #-4]
   1f948:	ldr	r1, [fp, #-4]
   1f94c:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   1f950:	add	r0, sp, #8
   1f954:	bl	1d7ec <__assert_fail@plt+0xc468>
   1f958:	mov	sp, fp
   1f95c:	pop	{fp, pc}
   1f960:	push	{fp, lr}
   1f964:	mov	fp, sp
   1f968:	sub	sp, sp, #32
   1f96c:	add	r3, sp, #8
   1f970:	str	r0, [fp, #-4]
   1f974:	str	r1, [fp, #-8]
   1f978:	str	r2, [fp, #-12]
   1f97c:	ldr	r1, [fp, #-12]
   1f980:	mov	r0, r3
   1f984:	bl	1db7c <__assert_fail@plt+0xc7f8>
   1f988:	add	r0, sp, #8
   1f98c:	ldr	r1, [fp, #-8]
   1f990:	str	r0, [sp, #4]
   1f994:	ldr	r2, [sp, #4]
   1f998:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1f99c:	add	r2, sp, #8
   1f9a0:	ldr	r0, [fp, #-4]
   1f9a4:	ldr	r1, [fp, #-4]
   1f9a8:	bl	1f408 <__assert_fail@plt+0xe084>
   1f9ac:	add	r0, sp, #8
   1f9b0:	bl	1d7ec <__assert_fail@plt+0xc468>
   1f9b4:	mov	sp, fp
   1f9b8:	pop	{fp, pc}
   1f9bc:	push	{fp, lr}
   1f9c0:	mov	fp, sp
   1f9c4:	sub	sp, sp, #24
   1f9c8:	mov	r3, sp
   1f9cc:	str	r0, [fp, #-4]
   1f9d0:	str	r1, [fp, #-8]
   1f9d4:	str	r2, [sp, #12]
   1f9d8:	mov	r0, r3
   1f9dc:	bl	1d714 <__assert_fail@plt+0xc390>
   1f9e0:	mov	r0, sp
   1f9e4:	ldr	r1, [fp, #-8]
   1f9e8:	ldr	r2, [sp, #12]
   1f9ec:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1f9f0:	mov	r2, sp
   1f9f4:	ldr	r0, [fp, #-4]
   1f9f8:	ldr	r1, [fp, #-4]
   1f9fc:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   1fa00:	mov	r0, sp
   1fa04:	bl	1d7ec <__assert_fail@plt+0xc468>
   1fa08:	mov	sp, fp
   1fa0c:	pop	{fp, pc}
   1fa10:	push	{fp, lr}
   1fa14:	mov	fp, sp
   1fa18:	sub	sp, sp, #24
   1fa1c:	mov	r3, sp
   1fa20:	str	r0, [fp, #-4]
   1fa24:	str	r1, [fp, #-8]
   1fa28:	str	r2, [sp, #12]
   1fa2c:	mov	r0, r3
   1fa30:	bl	1d714 <__assert_fail@plt+0xc390>
   1fa34:	mov	r0, sp
   1fa38:	ldr	r1, [fp, #-8]
   1fa3c:	ldr	r2, [sp, #12]
   1fa40:	bl	1f55c <__assert_fail@plt+0xe1d8>
   1fa44:	mov	r2, sp
   1fa48:	ldr	r0, [fp, #-4]
   1fa4c:	ldr	r1, [fp, #-4]
   1fa50:	bl	1f408 <__assert_fail@plt+0xe084>
   1fa54:	mov	r0, sp
   1fa58:	bl	1d7ec <__assert_fail@plt+0xc468>
   1fa5c:	mov	sp, fp
   1fa60:	pop	{fp, pc}
   1fa64:	push	{fp, lr}
   1fa68:	mov	fp, sp
   1fa6c:	sub	sp, sp, #24
   1fa70:	str	r0, [fp, #-4]
   1fa74:	str	r1, [fp, #-8]
   1fa78:	str	r2, [sp, #12]
   1fa7c:	str	r3, [sp, #8]
   1fa80:	ldr	r0, [fp, #-4]
   1fa84:	ldr	r1, [fp, #-8]
   1fa88:	ldr	r2, [sp, #12]
   1fa8c:	ldr	r3, [sp, #8]
   1fa90:	movw	ip, #1
   1fa94:	str	ip, [sp]
   1fa98:	bl	1faa8 <__assert_fail@plt+0xe724>
   1fa9c:	str	r0, [sp, #4]
   1faa0:	mov	sp, fp
   1faa4:	pop	{fp, pc}
   1faa8:	push	{fp, lr}
   1faac:	mov	fp, sp
   1fab0:	sub	sp, sp, #120	; 0x78
   1fab4:	ldr	ip, [fp, #8]
   1fab8:	str	r0, [fp, #-8]
   1fabc:	str	r1, [fp, #-12]
   1fac0:	str	r2, [fp, #-16]
   1fac4:	str	r3, [fp, #-20]	; 0xffffffec
   1fac8:	ldr	r0, [fp, #-16]
   1facc:	ldr	r0, [r0, #4]
   1fad0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fad8:	ldr	r0, [r0, #4]
   1fadc:	str	r0, [fp, #-28]	; 0xffffffe4
   1fae0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fae4:	cmp	r0, #0
   1fae8:	str	ip, [sp, #36]	; 0x24
   1faec:	bne	1fafc <__assert_fail@plt+0xe778>
   1faf0:	movw	r0, #33936	; 0x8490
   1faf4:	movt	r0, #3
   1faf8:	bl	2226c <__assert_fail@plt+0x10ee8>
   1fafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb00:	cmp	r0, #0
   1fb04:	bne	1fb4c <__assert_fail@plt+0xe7c8>
   1fb08:	ldr	r0, [fp, #-8]
   1fb0c:	movw	r1, #0
   1fb10:	cmp	r0, r1
   1fb14:	beq	1fb24 <__assert_fail@plt+0xe7a0>
   1fb18:	ldr	r0, [fp, #-8]
   1fb1c:	movw	r1, #0
   1fb20:	str	r1, [r0, #4]
   1fb24:	ldr	r0, [fp, #-12]
   1fb28:	movw	r1, #0
   1fb2c:	cmp	r0, r1
   1fb30:	beq	1fb40 <__assert_fail@plt+0xe7bc>
   1fb34:	ldr	r0, [fp, #-12]
   1fb38:	movw	r1, #0
   1fb3c:	str	r1, [r0, #4]
   1fb40:	movw	r0, #0
   1fb44:	str	r0, [fp, #-4]
   1fb48:	b	1ff38 <__assert_fail@plt+0xebb4>
   1fb4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb50:	cmp	r0, #0
   1fb54:	blt	1fb64 <__assert_fail@plt+0xe7e0>
   1fb58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb5c:	str	r0, [sp, #32]
   1fb60:	b	1fb74 <__assert_fail@plt+0xe7f0>
   1fb64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb68:	movw	r1, #0
   1fb6c:	sub	r0, r1, r0
   1fb70:	str	r0, [sp, #32]
   1fb74:	ldr	r0, [sp, #32]
   1fb78:	str	r0, [fp, #-32]	; 0xffffffe0
   1fb7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb80:	cmp	r0, #0
   1fb84:	blt	1fb94 <__assert_fail@plt+0xe810>
   1fb88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb8c:	str	r0, [sp, #28]
   1fb90:	b	1fba4 <__assert_fail@plt+0xe820>
   1fb94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb98:	movw	r1, #0
   1fb9c:	sub	r0, r1, r0
   1fba0:	str	r0, [sp, #28]
   1fba4:	ldr	r0, [sp, #28]
   1fba8:	str	r0, [fp, #-36]	; 0xffffffdc
   1fbac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fbb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fbb4:	eor	r0, r0, r1
   1fbb8:	str	r0, [fp, #-40]	; 0xffffffd8
   1fbbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fbc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fbc4:	cmp	r0, r1
   1fbc8:	bge	1fcc8 <__assert_fail@plt+0xe944>
   1fbcc:	ldr	r0, [fp, #8]
   1fbd0:	cmp	r0, #1
   1fbd4:	bne	1fc24 <__assert_fail@plt+0xe8a0>
   1fbd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fbdc:	cmp	r0, #0
   1fbe0:	blt	1fc24 <__assert_fail@plt+0xe8a0>
   1fbe4:	ldr	r0, [fp, #-12]
   1fbe8:	movw	r1, #0
   1fbec:	cmp	r0, r1
   1fbf0:	beq	1fc04 <__assert_fail@plt+0xe880>
   1fbf4:	ldr	r0, [fp, #-12]
   1fbf8:	ldr	r1, [fp, #-16]
   1fbfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc00:	bl	1f408 <__assert_fail@plt+0xe084>
   1fc04:	ldr	r0, [fp, #-8]
   1fc08:	movw	r1, #0
   1fc0c:	cmp	r0, r1
   1fc10:	beq	1fc20 <__assert_fail@plt+0xe89c>
   1fc14:	ldr	r0, [fp, #-8]
   1fc18:	movw	r1, #1
   1fc1c:	bl	1d90c <__assert_fail@plt+0xc588>
   1fc20:	b	1fcbc <__assert_fail@plt+0xe938>
   1fc24:	ldr	r0, [fp, #8]
   1fc28:	cmp	r0, #0
   1fc2c:	bne	1fc7c <__assert_fail@plt+0xe8f8>
   1fc30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fc34:	cmp	r0, #0
   1fc38:	bge	1fc7c <__assert_fail@plt+0xe8f8>
   1fc3c:	ldr	r0, [fp, #-12]
   1fc40:	movw	r1, #0
   1fc44:	cmp	r0, r1
   1fc48:	beq	1fc5c <__assert_fail@plt+0xe8d8>
   1fc4c:	ldr	r0, [fp, #-12]
   1fc50:	ldr	r1, [fp, #-16]
   1fc54:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc58:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   1fc5c:	ldr	r0, [fp, #-8]
   1fc60:	movw	r1, #0
   1fc64:	cmp	r0, r1
   1fc68:	beq	1fc78 <__assert_fail@plt+0xe8f4>
   1fc6c:	ldr	r0, [fp, #-8]
   1fc70:	mvn	r1, #0
   1fc74:	bl	1d870 <__assert_fail@plt+0xc4ec>
   1fc78:	b	1fcb8 <__assert_fail@plt+0xe934>
   1fc7c:	ldr	r0, [fp, #-12]
   1fc80:	movw	r1, #0
   1fc84:	cmp	r0, r1
   1fc88:	beq	1fc98 <__assert_fail@plt+0xe914>
   1fc8c:	ldr	r0, [fp, #-12]
   1fc90:	ldr	r1, [fp, #-16]
   1fc94:	bl	1da84 <__assert_fail@plt+0xc700>
   1fc98:	ldr	r0, [fp, #-8]
   1fc9c:	movw	r1, #0
   1fca0:	cmp	r0, r1
   1fca4:	beq	1fcb4 <__assert_fail@plt+0xe930>
   1fca8:	ldr	r0, [fp, #-8]
   1fcac:	movw	r1, #0
   1fcb0:	str	r1, [r0, #4]
   1fcb4:	b	1fcb8 <__assert_fail@plt+0xe934>
   1fcb8:	b	1fcbc <__assert_fail@plt+0xe938>
   1fcbc:	movw	r0, #1
   1fcc0:	str	r0, [fp, #-4]
   1fcc4:	b	1ff38 <__assert_fail@plt+0xebb4>
   1fcc8:	add	r0, sp, #40	; 0x28
   1fccc:	ldr	r1, [fp, #-16]
   1fcd0:	bl	1dbac <__assert_fail@plt+0xc828>
   1fcd4:	ldr	r0, [sp, #48]	; 0x30
   1fcd8:	str	r0, [fp, #-44]	; 0xffffffd4
   1fcdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fce0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fce4:	sub	r0, r0, r1
   1fce8:	add	r0, r0, #1
   1fcec:	str	r0, [fp, #-52]	; 0xffffffcc
   1fcf0:	ldr	r0, [fp, #-8]
   1fcf4:	movw	r1, #0
   1fcf8:	cmp	r0, r1
   1fcfc:	beq	1fd1c <__assert_fail@plt+0xe998>
   1fd00:	add	r0, sp, #52	; 0x34
   1fd04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fd08:	lsl	r1, r1, #5
   1fd0c:	bl	1d748 <__assert_fail@plt+0xc3c4>
   1fd10:	ldr	r0, [sp, #60]	; 0x3c
   1fd14:	str	r0, [fp, #-48]	; 0xffffffd0
   1fd18:	b	1fd24 <__assert_fail@plt+0xe9a0>
   1fd1c:	movw	r0, #0
   1fd20:	str	r0, [fp, #-48]	; 0xffffffd0
   1fd24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fd28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fd2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd34:	ldr	r3, [r3, #8]
   1fd38:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1fd3c:	str	ip, [sp]
   1fd40:	bl	26ca4 <__assert_fail@plt+0x15920>
   1fd44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fd48:	movw	r1, #0
   1fd4c:	cmp	r0, r1
   1fd50:	beq	1fdb4 <__assert_fail@plt+0xea30>
   1fd54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fd58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fd5c:	sub	r1, r1, #1
   1fd60:	add	r0, r0, r1, lsl #2
   1fd64:	ldr	r0, [r0]
   1fd68:	cmp	r0, #0
   1fd6c:	movw	r0, #0
   1fd70:	moveq	r0, #1
   1fd74:	and	r0, r0, #1
   1fd78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fd7c:	sub	r0, r1, r0
   1fd80:	str	r0, [fp, #-52]	; 0xffffffcc
   1fd84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fd88:	cmp	r0, #0
   1fd8c:	bge	1fda4 <__assert_fail@plt+0xea20>
   1fd90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fd94:	movw	r1, #0
   1fd98:	sub	r0, r1, r0
   1fd9c:	str	r0, [sp, #24]
   1fda0:	b	1fdac <__assert_fail@plt+0xea28>
   1fda4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fda8:	str	r0, [sp, #24]
   1fdac:	ldr	r0, [sp, #24]
   1fdb0:	str	r0, [sp, #56]	; 0x38
   1fdb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fdb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fdbc:	bl	1b4e4 <__assert_fail@plt+0xa160>
   1fdc0:	str	r0, [fp, #-56]	; 0xffffffc8
   1fdc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fdc8:	cmp	r0, #0
   1fdcc:	bge	1fde4 <__assert_fail@plt+0xea60>
   1fdd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fdd4:	movw	r1, #0
   1fdd8:	sub	r0, r1, r0
   1fddc:	str	r0, [sp, #20]
   1fde0:	b	1fdec <__assert_fail@plt+0xea68>
   1fde4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fde8:	str	r0, [sp, #20]
   1fdec:	ldr	r0, [sp, #20]
   1fdf0:	str	r0, [sp, #44]	; 0x2c
   1fdf4:	ldr	r0, [fp, #8]
   1fdf8:	cmp	r0, #0
   1fdfc:	bne	1fe64 <__assert_fail@plt+0xeae0>
   1fe00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fe04:	cmp	r0, #0
   1fe08:	bge	1fe64 <__assert_fail@plt+0xeae0>
   1fe0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fe10:	cmp	r0, #0
   1fe14:	beq	1fe64 <__assert_fail@plt+0xeae0>
   1fe18:	ldr	r0, [fp, #-8]
   1fe1c:	movw	r1, #0
   1fe20:	cmp	r0, r1
   1fe24:	beq	1fe3c <__assert_fail@plt+0xeab8>
   1fe28:	add	r0, sp, #52	; 0x34
   1fe2c:	str	r0, [sp, #16]
   1fe30:	ldr	r1, [sp, #16]
   1fe34:	movw	r2, #1
   1fe38:	bl	1efe0 <__assert_fail@plt+0xdc5c>
   1fe3c:	ldr	r0, [fp, #-12]
   1fe40:	movw	r1, #0
   1fe44:	cmp	r0, r1
   1fe48:	beq	1fe60 <__assert_fail@plt+0xeadc>
   1fe4c:	add	r0, sp, #40	; 0x28
   1fe50:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fe54:	str	r0, [sp, #12]
   1fe58:	ldr	r1, [sp, #12]
   1fe5c:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   1fe60:	b	1fed8 <__assert_fail@plt+0xeb54>
   1fe64:	ldr	r0, [fp, #8]
   1fe68:	cmp	r0, #1
   1fe6c:	bne	1fed4 <__assert_fail@plt+0xeb50>
   1fe70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fe74:	cmp	r0, #0
   1fe78:	blt	1fed4 <__assert_fail@plt+0xeb50>
   1fe7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fe80:	cmp	r0, #0
   1fe84:	beq	1fed4 <__assert_fail@plt+0xeb50>
   1fe88:	ldr	r0, [fp, #-8]
   1fe8c:	movw	r1, #0
   1fe90:	cmp	r0, r1
   1fe94:	beq	1feac <__assert_fail@plt+0xeb28>
   1fe98:	add	r0, sp, #52	; 0x34
   1fe9c:	str	r0, [sp, #8]
   1fea0:	ldr	r1, [sp, #8]
   1fea4:	movw	r2, #1
   1fea8:	bl	1eef8 <__assert_fail@plt+0xdb74>
   1feac:	ldr	r0, [fp, #-12]
   1feb0:	movw	r1, #0
   1feb4:	cmp	r0, r1
   1feb8:	beq	1fed0 <__assert_fail@plt+0xeb4c>
   1febc:	add	r0, sp, #40	; 0x28
   1fec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fec4:	str	r0, [sp, #4]
   1fec8:	ldr	r1, [sp, #4]
   1fecc:	bl	1f408 <__assert_fail@plt+0xe084>
   1fed0:	b	1fed4 <__assert_fail@plt+0xeb50>
   1fed4:	b	1fed8 <__assert_fail@plt+0xeb54>
   1fed8:	ldr	r0, [fp, #-8]
   1fedc:	movw	r1, #0
   1fee0:	cmp	r0, r1
   1fee4:	beq	1fefc <__assert_fail@plt+0xeb78>
   1fee8:	add	r0, sp, #52	; 0x34
   1feec:	ldr	r1, [fp, #-8]
   1fef0:	bl	1ee64 <__assert_fail@plt+0xdae0>
   1fef4:	add	r0, sp, #52	; 0x34
   1fef8:	bl	1d7ec <__assert_fail@plt+0xc468>
   1fefc:	ldr	r0, [fp, #-12]
   1ff00:	movw	r1, #0
   1ff04:	cmp	r0, r1
   1ff08:	beq	1ff18 <__assert_fail@plt+0xeb94>
   1ff0c:	add	r0, sp, #40	; 0x28
   1ff10:	ldr	r1, [fp, #-12]
   1ff14:	bl	1ee64 <__assert_fail@plt+0xdae0>
   1ff18:	add	r0, sp, #40	; 0x28
   1ff1c:	bl	1d7ec <__assert_fail@plt+0xc468>
   1ff20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ff24:	cmp	r0, #0
   1ff28:	movw	r0, #0
   1ff2c:	movne	r0, #1
   1ff30:	and	r0, r0, #1
   1ff34:	str	r0, [fp, #-4]
   1ff38:	ldr	r0, [fp, #-4]
   1ff3c:	mov	sp, fp
   1ff40:	pop	{fp, pc}
   1ff44:	push	{fp, lr}
   1ff48:	mov	fp, sp
   1ff4c:	sub	sp, sp, #24
   1ff50:	str	r0, [fp, #-4]
   1ff54:	str	r1, [fp, #-8]
   1ff58:	str	r2, [sp, #12]
   1ff5c:	str	r3, [sp, #8]
   1ff60:	ldr	r0, [fp, #-4]
   1ff64:	ldr	r1, [fp, #-8]
   1ff68:	ldr	r2, [sp, #12]
   1ff6c:	ldr	r3, [sp, #8]
   1ff70:	movw	ip, #0
   1ff74:	str	ip, [sp]
   1ff78:	bl	1faa8 <__assert_fail@plt+0xe724>
   1ff7c:	str	r0, [sp, #4]
   1ff80:	mov	sp, fp
   1ff84:	pop	{fp, pc}
   1ff88:	push	{fp, lr}
   1ff8c:	mov	fp, sp
   1ff90:	sub	sp, sp, #24
   1ff94:	str	r0, [fp, #-4]
   1ff98:	str	r1, [fp, #-8]
   1ff9c:	str	r2, [sp, #12]
   1ffa0:	str	r3, [sp, #8]
   1ffa4:	ldr	r0, [fp, #-4]
   1ffa8:	ldr	r1, [fp, #-8]
   1ffac:	ldr	r2, [sp, #12]
   1ffb0:	ldr	r3, [sp, #8]
   1ffb4:	movw	ip, #2
   1ffb8:	str	ip, [sp]
   1ffbc:	bl	1faa8 <__assert_fail@plt+0xe724>
   1ffc0:	str	r0, [sp, #4]
   1ffc4:	mov	sp, fp
   1ffc8:	pop	{fp, pc}
   1ffcc:	push	{fp, lr}
   1ffd0:	mov	fp, sp
   1ffd4:	sub	sp, sp, #24
   1ffd8:	str	r0, [fp, #-4]
   1ffdc:	str	r1, [fp, #-8]
   1ffe0:	str	r2, [sp, #12]
   1ffe4:	ldr	r0, [fp, #-4]
   1ffe8:	ldr	r2, [fp, #-8]
   1ffec:	ldr	r3, [sp, #12]
   1fff0:	movw	r1, #0
   1fff4:	movw	ip, #1
   1fff8:	str	ip, [sp]
   1fffc:	bl	1faa8 <__assert_fail@plt+0xe724>
   20000:	str	r0, [sp, #8]
   20004:	mov	sp, fp
   20008:	pop	{fp, pc}
   2000c:	push	{fp, lr}
   20010:	mov	fp, sp
   20014:	sub	sp, sp, #24
   20018:	str	r0, [fp, #-4]
   2001c:	str	r1, [fp, #-8]
   20020:	str	r2, [sp, #12]
   20024:	ldr	r0, [fp, #-4]
   20028:	ldr	r2, [fp, #-8]
   2002c:	ldr	r3, [sp, #12]
   20030:	movw	r1, #0
   20034:	str	r1, [sp, #8]
   20038:	ldr	ip, [sp, #8]
   2003c:	str	ip, [sp]
   20040:	bl	1faa8 <__assert_fail@plt+0xe724>
   20044:	str	r0, [sp, #4]
   20048:	mov	sp, fp
   2004c:	pop	{fp, pc}
   20050:	push	{fp, lr}
   20054:	mov	fp, sp
   20058:	sub	sp, sp, #24
   2005c:	str	r0, [fp, #-4]
   20060:	str	r1, [fp, #-8]
   20064:	str	r2, [sp, #12]
   20068:	ldr	r0, [fp, #-4]
   2006c:	ldr	r2, [fp, #-8]
   20070:	ldr	r3, [sp, #12]
   20074:	movw	r1, #0
   20078:	movw	ip, #2
   2007c:	str	ip, [sp]
   20080:	bl	1faa8 <__assert_fail@plt+0xe724>
   20084:	str	r0, [sp, #8]
   20088:	mov	sp, fp
   2008c:	pop	{fp, pc}
   20090:	push	{fp, lr}
   20094:	mov	fp, sp
   20098:	sub	sp, sp, #24
   2009c:	str	r0, [fp, #-4]
   200a0:	str	r1, [fp, #-8]
   200a4:	str	r2, [sp, #12]
   200a8:	ldr	r1, [fp, #-4]
   200ac:	ldr	r2, [fp, #-8]
   200b0:	ldr	r3, [sp, #12]
   200b4:	movw	r0, #0
   200b8:	movw	ip, #1
   200bc:	str	ip, [sp]
   200c0:	bl	1faa8 <__assert_fail@plt+0xe724>
   200c4:	str	r0, [sp, #8]
   200c8:	mov	sp, fp
   200cc:	pop	{fp, pc}
   200d0:	push	{fp, lr}
   200d4:	mov	fp, sp
   200d8:	sub	sp, sp, #24
   200dc:	str	r0, [fp, #-4]
   200e0:	str	r1, [fp, #-8]
   200e4:	str	r2, [sp, #12]
   200e8:	ldr	r1, [fp, #-4]
   200ec:	ldr	r2, [fp, #-8]
   200f0:	ldr	r3, [sp, #12]
   200f4:	movw	r0, #0
   200f8:	str	r0, [sp, #8]
   200fc:	ldr	ip, [sp, #8]
   20100:	str	ip, [sp]
   20104:	bl	1faa8 <__assert_fail@plt+0xe724>
   20108:	str	r0, [sp, #4]
   2010c:	mov	sp, fp
   20110:	pop	{fp, pc}
   20114:	push	{fp, lr}
   20118:	mov	fp, sp
   2011c:	sub	sp, sp, #24
   20120:	str	r0, [fp, #-4]
   20124:	str	r1, [fp, #-8]
   20128:	str	r2, [sp, #12]
   2012c:	ldr	r1, [fp, #-4]
   20130:	ldr	r2, [fp, #-8]
   20134:	ldr	r3, [sp, #12]
   20138:	movw	r0, #0
   2013c:	movw	ip, #2
   20140:	str	ip, [sp]
   20144:	bl	1faa8 <__assert_fail@plt+0xe724>
   20148:	str	r0, [sp, #8]
   2014c:	mov	sp, fp
   20150:	pop	{fp, pc}
   20154:	push	{fp, lr}
   20158:	mov	fp, sp
   2015c:	sub	sp, sp, #24
   20160:	str	r0, [fp, #-4]
   20164:	str	r1, [fp, #-8]
   20168:	str	r2, [sp, #12]
   2016c:	ldr	r1, [fp, #-4]
   20170:	ldr	r2, [fp, #-8]
   20174:	ldr	r3, [sp, #12]
   20178:	ldr	r0, [sp, #12]
   2017c:	ldr	r0, [r0, #4]
   20180:	cmp	r0, #0
   20184:	movw	r0, #0
   20188:	movge	r0, #1
   2018c:	tst	r0, #1
   20190:	movw	r0, #0
   20194:	mov	ip, r0
   20198:	moveq	ip, #1
   2019c:	str	ip, [sp]
   201a0:	bl	1faa8 <__assert_fail@plt+0xe724>
   201a4:	str	r0, [sp, #8]
   201a8:	mov	sp, fp
   201ac:	pop	{fp, pc}
   201b0:	push	{fp, lr}
   201b4:	mov	fp, sp
   201b8:	sub	sp, sp, #16
   201bc:	str	r0, [fp, #-4]
   201c0:	str	r1, [sp, #8]
   201c4:	str	r2, [sp, #4]
   201c8:	ldr	r0, [fp, #-4]
   201cc:	ldr	r1, [sp, #8]
   201d0:	ldr	r2, [sp, #4]
   201d4:	movw	r3, #1
   201d8:	bl	201e4 <__assert_fail@plt+0xee60>
   201dc:	mov	sp, fp
   201e0:	pop	{fp, pc}
   201e4:	push	{fp, lr}
   201e8:	mov	fp, sp
   201ec:	sub	sp, sp, #56	; 0x38
   201f0:	str	r0, [fp, #-4]
   201f4:	str	r1, [fp, #-8]
   201f8:	str	r2, [fp, #-12]
   201fc:	str	r3, [fp, #-16]
   20200:	ldr	r0, [fp, #-8]
   20204:	ldr	r0, [r0, #4]
   20208:	str	r0, [fp, #-20]	; 0xffffffec
   2020c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20210:	cmp	r0, #0
   20214:	bne	20228 <__assert_fail@plt+0xeea4>
   20218:	ldr	r0, [fp, #-4]
   2021c:	movw	r1, #0
   20220:	str	r1, [r0, #4]
   20224:	b	2043c <__assert_fail@plt+0xf0b8>
   20228:	ldr	r0, [fp, #-12]
   2022c:	lsr	r0, r0, #5
   20230:	str	r0, [sp, #28]
   20234:	ldr	r0, [fp, #-20]	; 0xffffffec
   20238:	cmp	r0, #0
   2023c:	blt	2024c <__assert_fail@plt+0xeec8>
   20240:	ldr	r0, [fp, #-20]	; 0xffffffec
   20244:	str	r0, [sp, #16]
   20248:	b	2025c <__assert_fail@plt+0xeed8>
   2024c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20250:	movw	r1, #0
   20254:	sub	r0, r1, r0
   20258:	str	r0, [sp, #16]
   2025c:	ldr	r0, [sp, #16]
   20260:	ldr	r1, [sp, #28]
   20264:	sub	r0, r0, r1
   20268:	str	r0, [fp, #-24]	; 0xffffffe8
   2026c:	ldr	r0, [fp, #-12]
   20270:	and	r0, r0, #31
   20274:	str	r0, [fp, #-12]
   20278:	ldr	r0, [fp, #-16]
   2027c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20280:	cmp	r1, #0
   20284:	movw	r1, #0
   20288:	movgt	r1, #1
   2028c:	tst	r1, #1
   20290:	movw	r1, #1
   20294:	moveq	r1, #0
   20298:	cmp	r0, r1
   2029c:	bne	2031c <__assert_fail@plt+0xef98>
   202a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   202a4:	cmp	r0, #0
   202a8:	movw	r0, #1
   202ac:	str	r0, [sp, #12]
   202b0:	ble	2030c <__assert_fail@plt+0xef88>
   202b4:	ldr	r0, [fp, #-8]
   202b8:	ldr	r0, [r0, #8]
   202bc:	ldr	r1, [sp, #28]
   202c0:	bl	1b4ac <__assert_fail@plt+0xa128>
   202c4:	cmp	r0, #0
   202c8:	movw	r0, #1
   202cc:	str	r0, [sp, #12]
   202d0:	beq	2030c <__assert_fail@plt+0xef88>
   202d4:	ldr	r0, [fp, #-8]
   202d8:	ldr	r0, [r0, #8]
   202dc:	ldr	r1, [sp, #28]
   202e0:	add	r0, r0, r1, lsl #2
   202e4:	ldr	r0, [r0]
   202e8:	ldr	r1, [fp, #-12]
   202ec:	movw	r2, #1
   202f0:	lsl	r1, r2, r1
   202f4:	sub	r1, r1, #1
   202f8:	and	r0, r0, r1
   202fc:	cmp	r0, #0
   20300:	movw	r0, #0
   20304:	movne	r0, #1
   20308:	str	r0, [sp, #12]
   2030c:	ldr	r0, [sp, #12]
   20310:	and	r0, r0, #1
   20314:	str	r0, [sp, #20]
   20318:	b	20324 <__assert_fail@plt+0xefa0>
   2031c:	movw	r0, #0
   20320:	str	r0, [sp, #20]
   20324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20328:	cmp	r0, #0
   2032c:	bgt	2033c <__assert_fail@plt+0xefb8>
   20330:	movw	r0, #0
   20334:	str	r0, [fp, #-24]	; 0xffffffe8
   20338:	b	203fc <__assert_fail@plt+0xf078>
   2033c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20340:	ldr	r1, [fp, #-4]
   20344:	ldr	r1, [r1]
   20348:	cmp	r0, r1
   2034c:	ble	20364 <__assert_fail@plt+0xefe0>
   20350:	ldr	r0, [fp, #-4]
   20354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20358:	bl	1d994 <__assert_fail@plt+0xc610>
   2035c:	str	r0, [sp, #8]
   20360:	b	20370 <__assert_fail@plt+0xefec>
   20364:	ldr	r0, [fp, #-4]
   20368:	ldr	r0, [r0, #8]
   2036c:	str	r0, [sp, #8]
   20370:	ldr	r0, [sp, #8]
   20374:	str	r0, [sp, #24]
   20378:	ldr	r0, [fp, #-12]
   2037c:	cmp	r0, #0
   20380:	beq	203dc <__assert_fail@plt+0xf058>
   20384:	ldr	r0, [sp, #24]
   20388:	ldr	r1, [fp, #-8]
   2038c:	ldr	r1, [r1, #8]
   20390:	ldr	r2, [sp, #28]
   20394:	add	r1, r1, r2, lsl #2
   20398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2039c:	ldr	r3, [fp, #-12]
   203a0:	bl	1c428 <__assert_fail@plt+0xb0a4>
   203a4:	ldr	r1, [sp, #24]
   203a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   203ac:	sub	r2, r2, #1
   203b0:	add	r1, r1, r2, lsl #2
   203b4:	ldr	r1, [r1]
   203b8:	cmp	r1, #0
   203bc:	movw	r1, #0
   203c0:	moveq	r1, #1
   203c4:	and	r1, r1, #1
   203c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   203cc:	sub	r1, r2, r1
   203d0:	str	r1, [fp, #-24]	; 0xffffffe8
   203d4:	str	r0, [sp, #4]
   203d8:	b	203f8 <__assert_fail@plt+0xf074>
   203dc:	ldr	r0, [sp, #24]
   203e0:	ldr	r1, [fp, #-8]
   203e4:	ldr	r1, [r1, #8]
   203e8:	ldr	r2, [sp, #28]
   203ec:	add	r1, r1, r2, lsl #2
   203f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   203f4:	bl	1b370 <__assert_fail@plt+0x9fec>
   203f8:	b	203fc <__assert_fail@plt+0xf078>
   203fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20400:	ldr	r1, [fp, #-4]
   20404:	str	r0, [r1, #4]
   20408:	ldr	r0, [sp, #20]
   2040c:	cmp	r0, #0
   20410:	beq	20424 <__assert_fail@plt+0xf0a0>
   20414:	ldr	r0, [fp, #-4]
   20418:	ldr	r1, [fp, #-4]
   2041c:	movw	r2, #1
   20420:	bl	1eef8 <__assert_fail@plt+0xdb74>
   20424:	ldr	r0, [fp, #-20]	; 0xffffffec
   20428:	cmp	r0, #0
   2042c:	bge	2043c <__assert_fail@plt+0xf0b8>
   20430:	ldr	r0, [fp, #-4]
   20434:	ldr	r1, [fp, #-4]
   20438:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   2043c:	mov	sp, fp
   20440:	pop	{fp, pc}
   20444:	push	{fp, lr}
   20448:	mov	fp, sp
   2044c:	sub	sp, sp, #16
   20450:	str	r0, [fp, #-4]
   20454:	str	r1, [sp, #8]
   20458:	str	r2, [sp, #4]
   2045c:	ldr	r0, [fp, #-4]
   20460:	ldr	r1, [sp, #8]
   20464:	ldr	r2, [sp, #4]
   20468:	movw	r3, #0
   2046c:	bl	201e4 <__assert_fail@plt+0xee60>
   20470:	mov	sp, fp
   20474:	pop	{fp, pc}
   20478:	push	{fp, lr}
   2047c:	mov	fp, sp
   20480:	sub	sp, sp, #16
   20484:	str	r0, [fp, #-4]
   20488:	str	r1, [sp, #8]
   2048c:	str	r2, [sp, #4]
   20490:	ldr	r0, [fp, #-4]
   20494:	ldr	r1, [sp, #8]
   20498:	ldr	r2, [sp, #4]
   2049c:	movw	r3, #2
   204a0:	bl	201e4 <__assert_fail@plt+0xee60>
   204a4:	mov	sp, fp
   204a8:	pop	{fp, pc}
   204ac:	push	{fp, lr}
   204b0:	mov	fp, sp
   204b4:	sub	sp, sp, #16
   204b8:	str	r0, [fp, #-4]
   204bc:	str	r1, [sp, #8]
   204c0:	str	r2, [sp, #4]
   204c4:	ldr	r0, [fp, #-4]
   204c8:	ldr	r1, [sp, #8]
   204cc:	ldr	r2, [sp, #4]
   204d0:	movw	r3, #1
   204d4:	bl	204e0 <__assert_fail@plt+0xf15c>
   204d8:	mov	sp, fp
   204dc:	pop	{fp, pc}
   204e0:	push	{fp, lr}
   204e4:	mov	fp, sp
   204e8:	sub	sp, sp, #64	; 0x40
   204ec:	str	r0, [fp, #-4]
   204f0:	str	r1, [fp, #-8]
   204f4:	str	r2, [fp, #-12]
   204f8:	str	r3, [fp, #-16]
   204fc:	ldr	r0, [fp, #-8]
   20500:	ldr	r0, [r0, #4]
   20504:	str	r0, [fp, #-20]	; 0xffffffec
   20508:	ldr	r0, [fp, #-20]	; 0xffffffec
   2050c:	cmp	r0, #0
   20510:	beq	20520 <__assert_fail@plt+0xf19c>
   20514:	ldr	r0, [fp, #-12]
   20518:	cmp	r0, #0
   2051c:	bne	20530 <__assert_fail@plt+0xf1ac>
   20520:	ldr	r0, [fp, #-4]
   20524:	movw	r1, #0
   20528:	str	r1, [r0, #4]
   2052c:	b	2083c <__assert_fail@plt+0xf4b8>
   20530:	ldr	r0, [fp, #-12]
   20534:	add	r0, r0, #31
   20538:	lsr	r0, r0, #5
   2053c:	str	r0, [fp, #-28]	; 0xffffffe4
   20540:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20544:	cmp	r0, #0
   20548:	ble	20550 <__assert_fail@plt+0xf1cc>
   2054c:	b	20570 <__assert_fail@plt+0xf1ec>
   20550:	movw	r0, #32896	; 0x8080
   20554:	movt	r0, #3
   20558:	movw	r1, #30584	; 0x7778
   2055c:	movt	r1, #3
   20560:	movw	r2, #2427	; 0x97b
   20564:	movw	r3, #34045	; 0x84fd
   20568:	movt	r3, #3
   2056c:	bl	11384 <__assert_fail@plt>
   20570:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20574:	ldr	r1, [fp, #-4]
   20578:	ldr	r1, [r1]
   2057c:	cmp	r0, r1
   20580:	ble	20598 <__assert_fail@plt+0xf214>
   20584:	ldr	r0, [fp, #-4]
   20588:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2058c:	bl	1d994 <__assert_fail@plt+0xc610>
   20590:	str	r0, [sp, #16]
   20594:	b	205a4 <__assert_fail@plt+0xf220>
   20598:	ldr	r0, [fp, #-4]
   2059c:	ldr	r0, [r0, #8]
   205a0:	str	r0, [sp, #16]
   205a4:	ldr	r0, [sp, #16]
   205a8:	str	r0, [sp, #32]
   205ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   205b0:	cmp	r0, #0
   205b4:	blt	205c4 <__assert_fail@plt+0xf240>
   205b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   205bc:	str	r0, [sp, #12]
   205c0:	b	205d4 <__assert_fail@plt+0xf250>
   205c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   205c8:	movw	r1, #0
   205cc:	sub	r0, r1, r0
   205d0:	str	r0, [sp, #12]
   205d4:	ldr	r0, [sp, #12]
   205d8:	str	r0, [fp, #-24]	; 0xffffffe8
   205dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   205e0:	lsl	r0, r0, #5
   205e4:	ldr	r1, [fp, #-12]
   205e8:	sub	r0, r0, r1
   205ec:	mvn	r1, #0
   205f0:	lsr	r0, r1, r0
   205f4:	str	r0, [sp, #28]
   205f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   205fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20600:	cmp	r0, r1
   20604:	ble	20734 <__assert_fail@plt+0xf3b0>
   20608:	ldr	r0, [fp, #-16]
   2060c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20610:	cmp	r1, #0
   20614:	movw	r1, #0
   20618:	movgt	r1, #1
   2061c:	tst	r1, #1
   20620:	movw	r1, #1
   20624:	moveq	r1, #0
   20628:	cmp	r0, r1
   2062c:	bne	20704 <__assert_fail@plt+0xf380>
   20630:	b	20634 <__assert_fail@plt+0xf2b0>
   20634:	ldr	r0, [sp, #32]
   20638:	ldr	r1, [fp, #-8]
   2063c:	ldr	r1, [r1, #8]
   20640:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20644:	bl	1c8d4 <__assert_fail@plt+0xb550>
   20648:	cmp	r0, #0
   2064c:	movw	r0, #0
   20650:	movne	r0, #1
   20654:	mvn	r1, #0
   20658:	eor	r0, r0, r1
   2065c:	and	r0, r0, #1
   20660:	str	r0, [sp, #20]
   20664:	ldr	r0, [sp, #20]
   20668:	cmp	r0, #0
   2066c:	bne	20674 <__assert_fail@plt+0xf2f0>
   20670:	b	20694 <__assert_fail@plt+0xf310>
   20674:	movw	r0, #31565	; 0x7b4d
   20678:	movt	r0, #3
   2067c:	movw	r1, #30584	; 0x7778
   20680:	movt	r1, #3
   20684:	movw	r2, #2443	; 0x98b
   20688:	movw	r3, #34045	; 0x84fd
   2068c:	movt	r3, #3
   20690:	bl	11384 <__assert_fail@plt>
   20694:	b	20698 <__assert_fail@plt+0xf314>
   20698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2069c:	str	r0, [sp, #24]
   206a0:	ldr	r0, [sp, #24]
   206a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   206a8:	sub	r1, r1, #1
   206ac:	cmp	r0, r1
   206b0:	bge	206d8 <__assert_fail@plt+0xf354>
   206b4:	ldr	r0, [sp, #32]
   206b8:	ldr	r1, [sp, #24]
   206bc:	add	r0, r0, r1, lsl #2
   206c0:	mvn	r1, #0
   206c4:	str	r1, [r0]
   206c8:	ldr	r0, [sp, #24]
   206cc:	add	r0, r0, #1
   206d0:	str	r0, [sp, #24]
   206d4:	b	206a0 <__assert_fail@plt+0xf31c>
   206d8:	ldr	r0, [sp, #28]
   206dc:	ldr	r1, [sp, #32]
   206e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   206e4:	sub	r2, r2, #1
   206e8:	add	r1, r1, r2, lsl #2
   206ec:	str	r0, [r1]
   206f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   206f4:	movw	r1, #0
   206f8:	sub	r0, r1, r0
   206fc:	str	r0, [fp, #-20]	; 0xffffffec
   20700:	b	20730 <__assert_fail@plt+0xf3ac>
   20704:	ldr	r0, [fp, #-4]
   20708:	ldr	r1, [fp, #-8]
   2070c:	cmp	r0, r1
   20710:	beq	20728 <__assert_fail@plt+0xf3a4>
   20714:	ldr	r0, [sp, #32]
   20718:	ldr	r1, [fp, #-8]
   2071c:	ldr	r1, [r1, #8]
   20720:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20724:	bl	1b370 <__assert_fail@plt+0x9fec>
   20728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2072c:	str	r0, [fp, #-28]	; 0xffffffe4
   20730:	b	207f8 <__assert_fail@plt+0xf474>
   20734:	ldr	r0, [fp, #-4]
   20738:	ldr	r1, [fp, #-8]
   2073c:	cmp	r0, r1
   20740:	beq	2075c <__assert_fail@plt+0xf3d8>
   20744:	ldr	r0, [sp, #32]
   20748:	ldr	r1, [fp, #-8]
   2074c:	ldr	r1, [r1, #8]
   20750:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20754:	sub	r2, r2, #1
   20758:	bl	1b370 <__assert_fail@plt+0x9fec>
   2075c:	ldr	r0, [fp, #-8]
   20760:	ldr	r0, [r0, #8]
   20764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20768:	sub	r1, r1, #1
   2076c:	ldr	r0, [r0, r1, lsl #2]
   20770:	ldr	r2, [sp, #28]
   20774:	and	r0, r0, r2
   20778:	ldr	r2, [sp, #32]
   2077c:	add	r1, r2, r1, lsl #2
   20780:	str	r0, [r1]
   20784:	ldr	r0, [fp, #-16]
   20788:	ldr	r1, [fp, #-20]	; 0xffffffec
   2078c:	cmp	r1, #0
   20790:	movw	r1, #0
   20794:	movgt	r1, #1
   20798:	tst	r1, #1
   2079c:	movw	r1, #1
   207a0:	moveq	r1, #0
   207a4:	cmp	r0, r1
   207a8:	bne	207f4 <__assert_fail@plt+0xf470>
   207ac:	ldr	r0, [sp, #32]
   207b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   207b4:	str	r0, [sp, #8]
   207b8:	ldr	r1, [sp, #8]
   207bc:	bl	1c8d4 <__assert_fail@plt+0xb550>
   207c0:	ldr	r1, [sp, #28]
   207c4:	ldr	r2, [sp, #32]
   207c8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   207cc:	sub	lr, lr, #1
   207d0:	add	r2, r2, lr, lsl #2
   207d4:	ldr	lr, [r2]
   207d8:	and	r1, lr, r1
   207dc:	str	r1, [r2]
   207e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   207e4:	movw	r2, #0
   207e8:	sub	r1, r2, r1
   207ec:	str	r1, [fp, #-20]	; 0xffffffec
   207f0:	str	r0, [sp, #4]
   207f4:	b	207f8 <__assert_fail@plt+0xf474>
   207f8:	ldr	r0, [sp, #32]
   207fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20800:	bl	1b4e4 <__assert_fail@plt+0xa160>
   20804:	str	r0, [fp, #-28]	; 0xffffffe4
   20808:	ldr	r0, [fp, #-20]	; 0xffffffec
   2080c:	cmp	r0, #0
   20810:	bge	20828 <__assert_fail@plt+0xf4a4>
   20814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20818:	movw	r1, #0
   2081c:	sub	r0, r1, r0
   20820:	str	r0, [sp]
   20824:	b	20830 <__assert_fail@plt+0xf4ac>
   20828:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2082c:	str	r0, [sp]
   20830:	ldr	r0, [sp]
   20834:	ldr	r1, [fp, #-4]
   20838:	str	r0, [r1, #4]
   2083c:	mov	sp, fp
   20840:	pop	{fp, pc}
   20844:	push	{fp, lr}
   20848:	mov	fp, sp
   2084c:	sub	sp, sp, #16
   20850:	str	r0, [fp, #-4]
   20854:	str	r1, [sp, #8]
   20858:	str	r2, [sp, #4]
   2085c:	ldr	r0, [fp, #-4]
   20860:	ldr	r1, [sp, #8]
   20864:	ldr	r2, [sp, #4]
   20868:	movw	r3, #0
   2086c:	bl	204e0 <__assert_fail@plt+0xf15c>
   20870:	mov	sp, fp
   20874:	pop	{fp, pc}
   20878:	push	{fp, lr}
   2087c:	mov	fp, sp
   20880:	sub	sp, sp, #16
   20884:	str	r0, [fp, #-4]
   20888:	str	r1, [sp, #8]
   2088c:	str	r2, [sp, #4]
   20890:	ldr	r0, [fp, #-4]
   20894:	ldr	r1, [sp, #8]
   20898:	ldr	r2, [sp, #4]
   2089c:	movw	r3, #2
   208a0:	bl	204e0 <__assert_fail@plt+0xf15c>
   208a4:	mov	sp, fp
   208a8:	pop	{fp, pc}
   208ac:	push	{fp, lr}
   208b0:	mov	fp, sp
   208b4:	sub	sp, sp, #24
   208b8:	str	r0, [fp, #-4]
   208bc:	str	r1, [fp, #-8]
   208c0:	str	r2, [sp, #12]
   208c4:	ldr	r0, [fp, #-4]
   208c8:	ldr	r2, [fp, #-8]
   208cc:	ldr	r3, [sp, #12]
   208d0:	movw	r1, #0
   208d4:	movw	ip, #2
   208d8:	str	ip, [sp]
   208dc:	bl	1faa8 <__assert_fail@plt+0xe724>
   208e0:	str	r0, [sp, #8]
   208e4:	ldr	r0, [sp, #8]
   208e8:	cmp	r0, #0
   208ec:	bne	208f4 <__assert_fail@plt+0xf570>
   208f0:	b	20914 <__assert_fail@plt+0xf590>
   208f4:	movw	r0, #31565	; 0x7b4d
   208f8:	movt	r0, #3
   208fc:	movw	r1, #30584	; 0x7778
   20900:	movt	r1, #3
   20904:	movw	r2, #2521	; 0x9d9
   20908:	movw	r3, #31575	; 0x7b57
   2090c:	movt	r3, #3
   20910:	bl	11384 <__assert_fail@plt>
   20914:	b	20918 <__assert_fail@plt+0xf594>
   20918:	mov	sp, fp
   2091c:	pop	{fp, pc}
   20920:	push	{fp, lr}
   20924:	mov	fp, sp
   20928:	sub	sp, sp, #16
   2092c:	str	r0, [fp, #-4]
   20930:	str	r1, [sp, #8]
   20934:	ldr	r2, [fp, #-4]
   20938:	ldr	r3, [sp, #8]
   2093c:	movw	r0, #0
   20940:	str	r0, [sp, #4]
   20944:	ldr	r1, [sp, #4]
   20948:	movw	ip, #2
   2094c:	str	ip, [sp]
   20950:	bl	1faa8 <__assert_fail@plt+0xe724>
   20954:	cmp	r0, #0
   20958:	movw	r0, #0
   2095c:	moveq	r0, #1
   20960:	and	r0, r0, #1
   20964:	mov	sp, fp
   20968:	pop	{fp, pc}
   2096c:	push	{fp, lr}
   20970:	mov	fp, sp
   20974:	sub	sp, sp, #32
   20978:	str	r0, [fp, #-8]
   2097c:	str	r1, [fp, #-12]
   20980:	str	r2, [sp, #16]
   20984:	ldr	r0, [sp, #16]
   20988:	bl	1eb2c <__assert_fail@plt+0xd7a8>
   2098c:	cmp	r0, #0
   20990:	bne	209b8 <__assert_fail@plt+0xf634>
   20994:	ldr	r0, [fp, #-8]
   20998:	ldr	r1, [fp, #-12]
   2099c:	bl	1ebc4 <__assert_fail@plt+0xd840>
   209a0:	cmp	r0, #0
   209a4:	movw	r0, #0
   209a8:	moveq	r0, #1
   209ac:	and	r0, r0, #1
   209b0:	str	r0, [fp, #-4]
   209b4:	b	209f4 <__assert_fail@plt+0xf670>
   209b8:	add	r0, sp, #4
   209bc:	bl	1d714 <__assert_fail@plt+0xc390>
   209c0:	add	r0, sp, #4
   209c4:	ldr	r1, [fp, #-8]
   209c8:	ldr	r2, [fp, #-12]
   209cc:	bl	1f408 <__assert_fail@plt+0xe084>
   209d0:	add	r0, sp, #4
   209d4:	ldr	r1, [sp, #16]
   209d8:	bl	20920 <__assert_fail@plt+0xf59c>
   209dc:	add	r1, sp, #4
   209e0:	str	r0, [sp]
   209e4:	mov	r0, r1
   209e8:	bl	1d7ec <__assert_fail@plt+0xc468>
   209ec:	ldr	r0, [sp]
   209f0:	str	r0, [fp, #-4]
   209f4:	ldr	r0, [fp, #-4]
   209f8:	mov	sp, fp
   209fc:	pop	{fp, pc}
   20a00:	push	{fp, lr}
   20a04:	mov	fp, sp
   20a08:	sub	sp, sp, #24
   20a0c:	str	r0, [fp, #-4]
   20a10:	str	r1, [fp, #-8]
   20a14:	str	r2, [sp, #12]
   20a18:	str	r3, [sp, #8]
   20a1c:	ldr	r0, [fp, #-4]
   20a20:	ldr	r1, [fp, #-8]
   20a24:	ldr	r2, [sp, #12]
   20a28:	ldr	r3, [sp, #8]
   20a2c:	movw	ip, #1
   20a30:	str	ip, [sp]
   20a34:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20a38:	mov	sp, fp
   20a3c:	pop	{fp, pc}
   20a40:	push	{fp, lr}
   20a44:	mov	fp, sp
   20a48:	sub	sp, sp, #56	; 0x38
   20a4c:	ldr	ip, [fp, #8]
   20a50:	add	lr, sp, #24
   20a54:	str	r0, [fp, #-4]
   20a58:	str	r1, [fp, #-8]
   20a5c:	str	r2, [fp, #-12]
   20a60:	str	r3, [fp, #-16]
   20a64:	mov	r0, lr
   20a68:	str	ip, [sp, #8]
   20a6c:	bl	1d714 <__assert_fail@plt+0xc390>
   20a70:	add	r0, sp, #12
   20a74:	ldr	r1, [fp, #-16]
   20a78:	bl	1db7c <__assert_fail@plt+0xc7f8>
   20a7c:	add	r3, sp, #12
   20a80:	add	r1, sp, #24
   20a84:	ldr	r0, [fp, #-4]
   20a88:	ldr	r2, [fp, #-12]
   20a8c:	ldr	ip, [fp, #8]
   20a90:	str	ip, [sp]
   20a94:	bl	1faa8 <__assert_fail@plt+0xe724>
   20a98:	add	r1, sp, #12
   20a9c:	str	r0, [sp, #4]
   20aa0:	mov	r0, r1
   20aa4:	bl	1d7ec <__assert_fail@plt+0xc468>
   20aa8:	add	r0, sp, #24
   20aac:	bl	1e05c <__assert_fail@plt+0xccd8>
   20ab0:	str	r0, [fp, #-20]	; 0xffffffec
   20ab4:	ldr	r0, [fp, #-8]
   20ab8:	movw	r1, #0
   20abc:	cmp	r0, r1
   20ac0:	beq	20ad0 <__assert_fail@plt+0xf74c>
   20ac4:	add	r1, sp, #24
   20ac8:	ldr	r0, [fp, #-8]
   20acc:	bl	1ee64 <__assert_fail@plt+0xdae0>
   20ad0:	add	r0, sp, #24
   20ad4:	bl	1d7ec <__assert_fail@plt+0xc468>
   20ad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   20adc:	mov	sp, fp
   20ae0:	pop	{fp, pc}
   20ae4:	push	{fp, lr}
   20ae8:	mov	fp, sp
   20aec:	sub	sp, sp, #24
   20af0:	str	r0, [fp, #-4]
   20af4:	str	r1, [fp, #-8]
   20af8:	str	r2, [sp, #12]
   20afc:	str	r3, [sp, #8]
   20b00:	ldr	r0, [fp, #-4]
   20b04:	ldr	r1, [fp, #-8]
   20b08:	ldr	r2, [sp, #12]
   20b0c:	ldr	r3, [sp, #8]
   20b10:	movw	ip, #0
   20b14:	str	ip, [sp]
   20b18:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20b1c:	mov	sp, fp
   20b20:	pop	{fp, pc}
   20b24:	push	{fp, lr}
   20b28:	mov	fp, sp
   20b2c:	sub	sp, sp, #24
   20b30:	str	r0, [fp, #-4]
   20b34:	str	r1, [fp, #-8]
   20b38:	str	r2, [sp, #12]
   20b3c:	str	r3, [sp, #8]
   20b40:	ldr	r0, [fp, #-4]
   20b44:	ldr	r1, [fp, #-8]
   20b48:	ldr	r2, [sp, #12]
   20b4c:	ldr	r3, [sp, #8]
   20b50:	movw	ip, #2
   20b54:	str	ip, [sp]
   20b58:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20b5c:	mov	sp, fp
   20b60:	pop	{fp, pc}
   20b64:	push	{fp, lr}
   20b68:	mov	fp, sp
   20b6c:	sub	sp, sp, #16
   20b70:	str	r0, [fp, #-4]
   20b74:	str	r1, [sp, #8]
   20b78:	str	r2, [sp, #4]
   20b7c:	ldr	r0, [fp, #-4]
   20b80:	ldr	r2, [sp, #8]
   20b84:	ldr	r3, [sp, #4]
   20b88:	movw	r1, #0
   20b8c:	movw	ip, #1
   20b90:	str	ip, [sp]
   20b94:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20b98:	mov	sp, fp
   20b9c:	pop	{fp, pc}
   20ba0:	push	{fp, lr}
   20ba4:	mov	fp, sp
   20ba8:	sub	sp, sp, #24
   20bac:	str	r0, [fp, #-4]
   20bb0:	str	r1, [fp, #-8]
   20bb4:	str	r2, [sp, #12]
   20bb8:	ldr	r0, [fp, #-4]
   20bbc:	ldr	r2, [fp, #-8]
   20bc0:	ldr	r3, [sp, #12]
   20bc4:	movw	r1, #0
   20bc8:	str	r1, [sp, #8]
   20bcc:	ldr	ip, [sp, #8]
   20bd0:	str	ip, [sp]
   20bd4:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20bd8:	mov	sp, fp
   20bdc:	pop	{fp, pc}
   20be0:	push	{fp, lr}
   20be4:	mov	fp, sp
   20be8:	sub	sp, sp, #16
   20bec:	str	r0, [fp, #-4]
   20bf0:	str	r1, [sp, #8]
   20bf4:	str	r2, [sp, #4]
   20bf8:	ldr	r0, [fp, #-4]
   20bfc:	ldr	r2, [sp, #8]
   20c00:	ldr	r3, [sp, #4]
   20c04:	movw	r1, #0
   20c08:	movw	ip, #2
   20c0c:	str	ip, [sp]
   20c10:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20c14:	mov	sp, fp
   20c18:	pop	{fp, pc}
   20c1c:	push	{fp, lr}
   20c20:	mov	fp, sp
   20c24:	sub	sp, sp, #16
   20c28:	str	r0, [fp, #-4]
   20c2c:	str	r1, [sp, #8]
   20c30:	str	r2, [sp, #4]
   20c34:	ldr	r1, [fp, #-4]
   20c38:	ldr	r2, [sp, #8]
   20c3c:	ldr	r3, [sp, #4]
   20c40:	movw	r0, #0
   20c44:	movw	ip, #1
   20c48:	str	ip, [sp]
   20c4c:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20c50:	mov	sp, fp
   20c54:	pop	{fp, pc}
   20c58:	push	{fp, lr}
   20c5c:	mov	fp, sp
   20c60:	sub	sp, sp, #24
   20c64:	str	r0, [fp, #-4]
   20c68:	str	r1, [fp, #-8]
   20c6c:	str	r2, [sp, #12]
   20c70:	ldr	r1, [fp, #-4]
   20c74:	ldr	r2, [fp, #-8]
   20c78:	ldr	r3, [sp, #12]
   20c7c:	movw	r0, #0
   20c80:	str	r0, [sp, #8]
   20c84:	ldr	ip, [sp, #8]
   20c88:	str	ip, [sp]
   20c8c:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20c90:	mov	sp, fp
   20c94:	pop	{fp, pc}
   20c98:	push	{fp, lr}
   20c9c:	mov	fp, sp
   20ca0:	sub	sp, sp, #16
   20ca4:	str	r0, [fp, #-4]
   20ca8:	str	r1, [sp, #8]
   20cac:	str	r2, [sp, #4]
   20cb0:	ldr	r1, [fp, #-4]
   20cb4:	ldr	r2, [sp, #8]
   20cb8:	ldr	r3, [sp, #4]
   20cbc:	movw	r0, #0
   20cc0:	movw	ip, #2
   20cc4:	str	ip, [sp]
   20cc8:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20ccc:	mov	sp, fp
   20cd0:	pop	{fp, pc}
   20cd4:	push	{fp, lr}
   20cd8:	mov	fp, sp
   20cdc:	sub	sp, sp, #16
   20ce0:	str	r0, [fp, #-4]
   20ce4:	str	r1, [sp, #8]
   20ce8:	ldr	r2, [fp, #-4]
   20cec:	ldr	r3, [sp, #8]
   20cf0:	movw	r0, #0
   20cf4:	str	r0, [sp, #4]
   20cf8:	ldr	r1, [sp, #4]
   20cfc:	movw	ip, #1
   20d00:	str	ip, [sp]
   20d04:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20d08:	mov	sp, fp
   20d0c:	pop	{fp, pc}
   20d10:	push	{fp, lr}
   20d14:	mov	fp, sp
   20d18:	sub	sp, sp, #16
   20d1c:	str	r0, [fp, #-4]
   20d20:	str	r1, [sp, #8]
   20d24:	ldr	r2, [fp, #-4]
   20d28:	ldr	r3, [sp, #8]
   20d2c:	movw	r0, #0
   20d30:	str	r0, [sp, #4]
   20d34:	ldr	r1, [sp, #4]
   20d38:	ldr	ip, [sp, #4]
   20d3c:	str	ip, [sp]
   20d40:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20d44:	mov	sp, fp
   20d48:	pop	{fp, pc}
   20d4c:	push	{fp, lr}
   20d50:	mov	fp, sp
   20d54:	sub	sp, sp, #16
   20d58:	str	r0, [fp, #-4]
   20d5c:	str	r1, [sp, #8]
   20d60:	ldr	r2, [fp, #-4]
   20d64:	ldr	r3, [sp, #8]
   20d68:	movw	r0, #0
   20d6c:	str	r0, [sp, #4]
   20d70:	ldr	r1, [sp, #4]
   20d74:	movw	ip, #2
   20d78:	str	ip, [sp]
   20d7c:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20d80:	mov	sp, fp
   20d84:	pop	{fp, pc}
   20d88:	push	{fp, lr}
   20d8c:	mov	fp, sp
   20d90:	sub	sp, sp, #24
   20d94:	str	r0, [fp, #-4]
   20d98:	str	r1, [fp, #-8]
   20d9c:	str	r2, [sp, #12]
   20da0:	ldr	r1, [fp, #-4]
   20da4:	ldr	r2, [fp, #-8]
   20da8:	ldr	r3, [sp, #12]
   20dac:	movw	r0, #0
   20db0:	str	r0, [sp, #8]
   20db4:	ldr	ip, [sp, #8]
   20db8:	str	ip, [sp]
   20dbc:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20dc0:	mov	sp, fp
   20dc4:	pop	{fp, pc}
   20dc8:	push	{fp, lr}
   20dcc:	mov	fp, sp
   20dd0:	sub	sp, sp, #24
   20dd4:	str	r0, [fp, #-4]
   20dd8:	str	r1, [fp, #-8]
   20ddc:	str	r2, [sp, #12]
   20de0:	ldr	r0, [fp, #-4]
   20de4:	ldr	r2, [fp, #-8]
   20de8:	ldr	r3, [sp, #12]
   20dec:	movw	r1, #0
   20df0:	movw	ip, #2
   20df4:	str	ip, [sp]
   20df8:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20dfc:	str	r0, [sp, #8]
   20e00:	ldr	r0, [sp, #8]
   20e04:	cmp	r0, #0
   20e08:	bne	20e10 <__assert_fail@plt+0xfa8c>
   20e0c:	b	20e30 <__assert_fail@plt+0xfaac>
   20e10:	movw	r0, #31565	; 0x7b4d
   20e14:	movt	r0, #3
   20e18:	movw	r1, #30584	; 0x7778
   20e1c:	movt	r1, #3
   20e20:	movw	r2, #2647	; 0xa57
   20e24:	movw	r3, #31653	; 0x7ba5
   20e28:	movt	r3, #3
   20e2c:	bl	11384 <__assert_fail@plt>
   20e30:	b	20e34 <__assert_fail@plt+0xfab0>
   20e34:	mov	sp, fp
   20e38:	pop	{fp, pc}
   20e3c:	push	{fp, lr}
   20e40:	mov	fp, sp
   20e44:	sub	sp, sp, #16
   20e48:	str	r0, [fp, #-4]
   20e4c:	str	r1, [sp, #8]
   20e50:	ldr	r2, [fp, #-4]
   20e54:	ldr	r3, [sp, #8]
   20e58:	movw	r0, #0
   20e5c:	str	r0, [sp, #4]
   20e60:	ldr	r1, [sp, #4]
   20e64:	movw	ip, #2
   20e68:	str	ip, [sp]
   20e6c:	bl	20a40 <__assert_fail@plt+0xf6bc>
   20e70:	cmp	r0, #0
   20e74:	movw	r0, #0
   20e78:	moveq	r0, #1
   20e7c:	and	r0, r0, #1
   20e80:	mov	sp, fp
   20e84:	pop	{fp, pc}
   20e88:	push	{fp, lr}
   20e8c:	mov	fp, sp
   20e90:	sub	sp, sp, #32
   20e94:	add	r3, sp, #8
   20e98:	str	r0, [fp, #-4]
   20e9c:	str	r1, [fp, #-8]
   20ea0:	str	r2, [fp, #-12]
   20ea4:	ldr	r1, [fp, #-12]
   20ea8:	mov	r0, r3
   20eac:	bl	1db7c <__assert_fail@plt+0xc7f8>
   20eb0:	add	r0, sp, #8
   20eb4:	ldr	r1, [fp, #-8]
   20eb8:	str	r0, [sp, #4]
   20ebc:	ldr	r2, [sp, #4]
   20ec0:	bl	20f0c <__assert_fail@plt+0xfb88>
   20ec4:	ldr	r0, [fp, #-12]
   20ec8:	cmp	r0, #0
   20ecc:	bls	20edc <__assert_fail@plt+0xfb58>
   20ed0:	add	r0, sp, #8
   20ed4:	bl	1e05c <__assert_fail@plt+0xccd8>
   20ed8:	str	r0, [fp, #-12]
   20edc:	ldr	r0, [fp, #-4]
   20ee0:	movw	r1, #0
   20ee4:	cmp	r0, r1
   20ee8:	beq	20ef8 <__assert_fail@plt+0xfb74>
   20eec:	add	r0, sp, #8
   20ef0:	ldr	r1, [fp, #-4]
   20ef4:	bl	1ee64 <__assert_fail@plt+0xdae0>
   20ef8:	add	r0, sp, #8
   20efc:	bl	1d7ec <__assert_fail@plt+0xc468>
   20f00:	ldr	r0, [fp, #-12]
   20f04:	mov	sp, fp
   20f08:	pop	{fp, pc}
   20f0c:	push	{fp, lr}
   20f10:	mov	fp, sp
   20f14:	sub	sp, sp, #88	; 0x58
   20f18:	str	r0, [fp, #-4]
   20f1c:	str	r1, [fp, #-8]
   20f20:	str	r2, [fp, #-12]
   20f24:	ldr	r0, [fp, #-8]
   20f28:	ldr	r0, [r0, #4]
   20f2c:	cmp	r0, #0
   20f30:	bne	20f44 <__assert_fail@plt+0xfbc0>
   20f34:	ldr	r0, [fp, #-4]
   20f38:	ldr	r1, [fp, #-12]
   20f3c:	bl	1edbc <__assert_fail@plt+0xda38>
   20f40:	b	21158 <__assert_fail@plt+0xfdd4>
   20f44:	ldr	r0, [fp, #-12]
   20f48:	ldr	r0, [r0, #4]
   20f4c:	cmp	r0, #0
   20f50:	bne	20f64 <__assert_fail@plt+0xfbe0>
   20f54:	ldr	r0, [fp, #-4]
   20f58:	ldr	r1, [fp, #-8]
   20f5c:	bl	1edbc <__assert_fail@plt+0xda38>
   20f60:	b	21158 <__assert_fail@plt+0xfdd4>
   20f64:	sub	r0, fp, #24
   20f68:	bl	1d714 <__assert_fail@plt+0xc390>
   20f6c:	sub	r0, fp, #36	; 0x24
   20f70:	bl	1d714 <__assert_fail@plt+0xc390>
   20f74:	sub	r0, fp, #24
   20f78:	ldr	r1, [fp, #-8]
   20f7c:	bl	1edbc <__assert_fail@plt+0xda38>
   20f80:	sub	r0, fp, #24
   20f84:	bl	21160 <__assert_fail@plt+0xfddc>
   20f88:	sub	r1, fp, #36	; 0x24
   20f8c:	str	r0, [fp, #-40]	; 0xffffffd8
   20f90:	ldr	r0, [fp, #-12]
   20f94:	str	r0, [sp, #28]
   20f98:	mov	r0, r1
   20f9c:	ldr	r1, [sp, #28]
   20fa0:	bl	1edbc <__assert_fail@plt+0xda38>
   20fa4:	sub	r0, fp, #36	; 0x24
   20fa8:	bl	21160 <__assert_fail@plt+0xfddc>
   20fac:	str	r0, [sp, #44]	; 0x2c
   20fb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20fb4:	ldr	r1, [sp, #44]	; 0x2c
   20fb8:	cmp	r0, r1
   20fbc:	bcs	20fcc <__assert_fail@plt+0xfc48>
   20fc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20fc4:	str	r0, [sp, #24]
   20fc8:	b	20fd4 <__assert_fail@plt+0xfc50>
   20fcc:	ldr	r0, [sp, #44]	; 0x2c
   20fd0:	str	r0, [sp, #24]
   20fd4:	ldr	r0, [sp, #24]
   20fd8:	str	r0, [sp, #40]	; 0x28
   20fdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   20fe0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20fe4:	cmp	r0, r1
   20fe8:	bge	20ff8 <__assert_fail@plt+0xfc74>
   20fec:	sub	r1, fp, #36	; 0x24
   20ff0:	sub	r0, fp, #24
   20ff4:	bl	1ee64 <__assert_fail@plt+0xdae0>
   20ff8:	sub	r2, fp, #36	; 0x24
   20ffc:	sub	r0, fp, #24
   21000:	str	r0, [sp, #20]
   21004:	ldr	r1, [sp, #20]
   21008:	bl	20114 <__assert_fail@plt+0xed90>
   2100c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21010:	cmp	r0, #0
   21014:	bne	21028 <__assert_fail@plt+0xfca4>
   21018:	sub	r1, fp, #36	; 0x24
   2101c:	ldr	r0, [fp, #-4]
   21020:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21024:	b	21138 <__assert_fail@plt+0xfdb4>
   21028:	b	2102c <__assert_fail@plt+0xfca8>
   2102c:	sub	r0, fp, #24
   21030:	bl	21160 <__assert_fail@plt+0xfddc>
   21034:	sub	r1, fp, #36	; 0x24
   21038:	sub	lr, fp, #24
   2103c:	str	r0, [sp, #16]
   21040:	mov	r0, lr
   21044:	bl	1ebc4 <__assert_fail@plt+0xd840>
   21048:	str	r0, [sp, #36]	; 0x24
   2104c:	ldr	r0, [sp, #36]	; 0x24
   21050:	cmp	r0, #0
   21054:	bne	21068 <__assert_fail@plt+0xfce4>
   21058:	sub	r1, fp, #24
   2105c:	ldr	r0, [fp, #-4]
   21060:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21064:	b	21134 <__assert_fail@plt+0xfdb0>
   21068:	ldr	r0, [sp, #36]	; 0x24
   2106c:	cmp	r0, #0
   21070:	bge	21080 <__assert_fail@plt+0xfcfc>
   21074:	sub	r1, fp, #36	; 0x24
   21078:	sub	r0, fp, #24
   2107c:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21084:	cmp	r0, #1
   21088:	bne	2111c <__assert_fail@plt+0xfd98>
   2108c:	sub	r2, fp, #36	; 0x24
   21090:	sub	r0, fp, #24
   21094:	str	r0, [sp, #12]
   21098:	ldr	r1, [sp, #12]
   2109c:	bl	20114 <__assert_fail@plt+0xed90>
   210a0:	ldr	r0, [fp, #-4]
   210a4:	ldr	r0, [r0]
   210a8:	movw	r1, #1
   210ac:	cmp	r1, r0
   210b0:	ble	210c8 <__assert_fail@plt+0xfd44>
   210b4:	ldr	r0, [fp, #-4]
   210b8:	movw	r1, #1
   210bc:	bl	1d994 <__assert_fail@plt+0xc610>
   210c0:	str	r0, [sp, #8]
   210c4:	b	210d4 <__assert_fail@plt+0xfd50>
   210c8:	ldr	r0, [fp, #-4]
   210cc:	ldr	r0, [r0, #8]
   210d0:	str	r0, [sp, #8]
   210d4:	ldr	r0, [sp, #8]
   210d8:	str	r0, [sp, #32]
   210dc:	ldr	r0, [fp, #-16]
   210e0:	ldr	r0, [r0]
   210e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   210e8:	ldr	r1, [r1]
   210ec:	bl	211d4 <__assert_fail@plt+0xfe50>
   210f0:	ldr	r1, [sp, #32]
   210f4:	str	r0, [r1]
   210f8:	ldr	r0, [sp, #32]
   210fc:	ldr	r0, [r0]
   21100:	cmp	r0, #0
   21104:	movw	r0, #0
   21108:	movne	r0, #1
   2110c:	and	r0, r0, #1
   21110:	ldr	r1, [fp, #-4]
   21114:	str	r0, [r1, #4]
   21118:	b	21134 <__assert_fail@plt+0xfdb0>
   2111c:	sub	r2, fp, #36	; 0x24
   21120:	sub	r0, fp, #24
   21124:	str	r0, [sp, #4]
   21128:	ldr	r1, [sp, #4]
   2112c:	bl	1f408 <__assert_fail@plt+0xe084>
   21130:	b	2102c <__assert_fail@plt+0xfca8>
   21134:	b	21138 <__assert_fail@plt+0xfdb4>
   21138:	sub	r0, fp, #24
   2113c:	bl	1d7ec <__assert_fail@plt+0xc468>
   21140:	sub	r0, fp, #36	; 0x24
   21144:	bl	1d7ec <__assert_fail@plt+0xc468>
   21148:	ldr	r0, [fp, #-4]
   2114c:	ldr	r1, [fp, #-4]
   21150:	ldr	r2, [sp, #40]	; 0x28
   21154:	bl	1f744 <__assert_fail@plt+0xe3c0>
   21158:	mov	sp, fp
   2115c:	pop	{fp, pc}
   21160:	push	{fp, lr}
   21164:	mov	fp, sp
   21168:	sub	sp, sp, #8
   2116c:	str	r0, [sp, #4]
   21170:	ldr	r0, [sp, #4]
   21174:	ldr	r0, [r0, #4]
   21178:	cmp	r0, #0
   2117c:	ble	21184 <__assert_fail@plt+0xfe00>
   21180:	b	211a4 <__assert_fail@plt+0xfe20>
   21184:	movw	r0, #34141	; 0x855d
   21188:	movt	r0, #3
   2118c:	movw	r1, #30584	; 0x7778
   21190:	movt	r1, #3
   21194:	movw	r2, #2723	; 0xaa3
   21198:	movw	r3, #34157	; 0x856d
   2119c:	movt	r3, #3
   211a0:	bl	11384 <__assert_fail@plt>
   211a4:	ldr	r0, [sp, #4]
   211a8:	ldr	r0, [r0, #8]
   211ac:	movw	r1, #0
   211b0:	bl	1c594 <__assert_fail@plt+0xb210>
   211b4:	str	r0, [sp]
   211b8:	ldr	r0, [sp, #4]
   211bc:	ldr	r1, [sp, #4]
   211c0:	ldr	r2, [sp]
   211c4:	bl	20478 <__assert_fail@plt+0xf0f4>
   211c8:	ldr	r0, [sp]
   211cc:	mov	sp, fp
   211d0:	pop	{fp, pc}
   211d4:	push	{fp, lr}
   211d8:	mov	fp, sp
   211dc:	sub	sp, sp, #40	; 0x28
   211e0:	str	r0, [fp, #-8]
   211e4:	str	r1, [fp, #-12]
   211e8:	ldr	r0, [fp, #-8]
   211ec:	ldr	r1, [fp, #-12]
   211f0:	orr	r0, r0, r1
   211f4:	cmp	r0, #0
   211f8:	bls	21200 <__assert_fail@plt+0xfe7c>
   211fc:	b	21220 <__assert_fail@plt+0xfe9c>
   21200:	movw	r0, #34198	; 0x8596
   21204:	movt	r0, #3
   21208:	movw	r1, #30584	; 0x7778
   2120c:	movt	r1, #3
   21210:	movw	r2, #2663	; 0xa67
   21214:	movw	r3, #34210	; 0x85a2
   21218:	movt	r3, #3
   2121c:	bl	11384 <__assert_fail@plt>
   21220:	ldr	r0, [fp, #-8]
   21224:	cmp	r0, #0
   21228:	bne	21238 <__assert_fail@plt+0xfeb4>
   2122c:	ldr	r0, [fp, #-12]
   21230:	str	r0, [fp, #-4]
   21234:	b	21430 <__assert_fail@plt+0x100ac>
   21238:	ldr	r0, [fp, #-12]
   2123c:	cmp	r0, #0
   21240:	bne	21250 <__assert_fail@plt+0xfecc>
   21244:	ldr	r0, [fp, #-8]
   21248:	str	r0, [fp, #-4]
   2124c:	b	21430 <__assert_fail@plt+0x100ac>
   21250:	b	21254 <__assert_fail@plt+0xfed0>
   21254:	b	21258 <__assert_fail@plt+0xfed4>
   21258:	ldr	r0, [fp, #-8]
   2125c:	ldr	r1, [fp, #-12]
   21260:	orr	r0, r0, r1
   21264:	str	r0, [sp, #20]
   21268:	movw	r0, #0
   2126c:	str	r0, [sp, #16]
   21270:	ldr	r0, [sp, #20]
   21274:	ldr	r1, [sp, #20]
   21278:	movw	r2, #0
   2127c:	sub	r1, r2, r1
   21280:	and	r0, r0, r1
   21284:	str	r0, [sp, #12]
   21288:	str	r2, [sp, #8]
   2128c:	movw	r0, #8
   21290:	str	r0, [sp, #4]
   21294:	ldr	r0, [sp, #4]
   21298:	movw	r1, #32
   2129c:	cmp	r1, r0
   212a0:	bls	212dc <__assert_fail@plt+0xff58>
   212a4:	b	212a8 <__assert_fail@plt+0xff24>
   212a8:	ldr	r0, [sp, #12]
   212ac:	and	r0, r0, #-16777216	; 0xff000000
   212b0:	cmp	r0, #0
   212b4:	bne	212d8 <__assert_fail@plt+0xff54>
   212b8:	ldr	r0, [sp, #4]
   212bc:	ldr	r1, [sp, #12]
   212c0:	lsl	r0, r1, r0
   212c4:	str	r0, [sp, #12]
   212c8:	ldr	r0, [sp, #8]
   212cc:	add	r0, r0, #8
   212d0:	str	r0, [sp, #8]
   212d4:	b	212a8 <__assert_fail@plt+0xff24>
   212d8:	b	212dc <__assert_fail@plt+0xff58>
   212dc:	b	212e0 <__assert_fail@plt+0xff5c>
   212e0:	ldr	r0, [sp, #12]
   212e4:	and	r0, r0, #-2147483648	; 0x80000000
   212e8:	cmp	r0, #0
   212ec:	bne	2130c <__assert_fail@plt+0xff88>
   212f0:	ldr	r0, [sp, #12]
   212f4:	lsl	r0, r0, #1
   212f8:	str	r0, [sp, #12]
   212fc:	ldr	r0, [sp, #8]
   21300:	add	r0, r0, #1
   21304:	str	r0, [sp, #8]
   21308:	b	212e0 <__assert_fail@plt+0xff5c>
   2130c:	ldr	r0, [sp, #8]
   21310:	str	r0, [sp, #16]
   21314:	ldr	r0, [sp, #16]
   21318:	movw	r1, #31
   2131c:	sub	r0, r1, r0
   21320:	str	r0, [fp, #-16]
   21324:	ldr	r0, [fp, #-16]
   21328:	ldr	r1, [fp, #-8]
   2132c:	lsr	r0, r1, r0
   21330:	str	r0, [fp, #-8]
   21334:	ldr	r0, [fp, #-16]
   21338:	ldr	r1, [fp, #-12]
   2133c:	lsr	r0, r1, r0
   21340:	str	r0, [fp, #-12]
   21344:	ldr	r0, [fp, #-8]
   21348:	and	r0, r0, #1
   2134c:	cmp	r0, #0
   21350:	bne	21374 <__assert_fail@plt+0xfff0>
   21354:	b	21358 <__assert_fail@plt+0xffd4>
   21358:	ldr	r0, [fp, #-8]
   2135c:	str	r0, [sp]
   21360:	ldr	r0, [fp, #-12]
   21364:	str	r0, [fp, #-8]
   21368:	ldr	r0, [sp]
   2136c:	str	r0, [fp, #-12]
   21370:	b	21374 <__assert_fail@plt+0xfff0>
   21374:	b	21378 <__assert_fail@plt+0xfff4>
   21378:	ldr	r0, [fp, #-12]
   2137c:	and	r0, r0, #1
   21380:	cmp	r0, #0
   21384:	bne	21398 <__assert_fail@plt+0x10014>
   21388:	ldr	r0, [fp, #-12]
   2138c:	lsr	r0, r0, #1
   21390:	str	r0, [fp, #-12]
   21394:	b	21378 <__assert_fail@plt+0xfff4>
   21398:	b	2139c <__assert_fail@plt+0x10018>
   2139c:	ldr	r0, [fp, #-8]
   213a0:	ldr	r1, [fp, #-12]
   213a4:	cmp	r0, r1
   213a8:	beq	21420 <__assert_fail@plt+0x1009c>
   213ac:	ldr	r0, [fp, #-8]
   213b0:	ldr	r1, [fp, #-12]
   213b4:	cmp	r0, r1
   213b8:	bls	213ec <__assert_fail@plt+0x10068>
   213bc:	ldr	r0, [fp, #-12]
   213c0:	ldr	r1, [fp, #-8]
   213c4:	sub	r0, r1, r0
   213c8:	str	r0, [fp, #-8]
   213cc:	ldr	r0, [fp, #-8]
   213d0:	lsr	r0, r0, #1
   213d4:	str	r0, [fp, #-8]
   213d8:	ldr	r0, [fp, #-8]
   213dc:	and	r0, r0, #1
   213e0:	cmp	r0, #0
   213e4:	beq	213cc <__assert_fail@plt+0x10048>
   213e8:	b	2141c <__assert_fail@plt+0x10098>
   213ec:	ldr	r0, [fp, #-8]
   213f0:	ldr	r1, [fp, #-12]
   213f4:	sub	r0, r1, r0
   213f8:	str	r0, [fp, #-12]
   213fc:	ldr	r0, [fp, #-12]
   21400:	lsr	r0, r0, #1
   21404:	str	r0, [fp, #-12]
   21408:	ldr	r0, [fp, #-12]
   2140c:	and	r0, r0, #1
   21410:	cmp	r0, #0
   21414:	beq	213fc <__assert_fail@plt+0x10078>
   21418:	b	2141c <__assert_fail@plt+0x10098>
   2141c:	b	2139c <__assert_fail@plt+0x10018>
   21420:	ldr	r0, [fp, #-8]
   21424:	ldr	r1, [fp, #-16]
   21428:	lsl	r0, r0, r1
   2142c:	str	r0, [fp, #-4]
   21430:	ldr	r0, [fp, #-4]
   21434:	mov	sp, fp
   21438:	pop	{fp, pc}
   2143c:	push	{fp, lr}
   21440:	mov	fp, sp
   21444:	sub	sp, sp, #232	; 0xe8
   21448:	ldr	ip, [fp, #8]
   2144c:	str	r0, [fp, #-4]
   21450:	str	r1, [fp, #-8]
   21454:	str	r2, [fp, #-12]
   21458:	str	r3, [fp, #-16]
   2145c:	ldr	r0, [fp, #-16]
   21460:	ldr	r0, [r0, #4]
   21464:	cmp	r0, #0
   21468:	str	ip, [sp, #96]	; 0x60
   2146c:	bne	214c4 <__assert_fail@plt+0x10140>
   21470:	ldr	r0, [fp, #8]
   21474:	bl	1eb2c <__assert_fail@plt+0xd7a8>
   21478:	str	r0, [fp, #-108]	; 0xffffff94
   2147c:	ldr	r0, [fp, #-4]
   21480:	ldr	r1, [fp, #8]
   21484:	bl	1edbc <__assert_fail@plt+0xda38>
   21488:	ldr	r0, [fp, #-8]
   2148c:	movw	r1, #0
   21490:	cmp	r0, r1
   21494:	beq	214a4 <__assert_fail@plt+0x10120>
   21498:	ldr	r0, [fp, #-8]
   2149c:	movw	r1, #0
   214a0:	str	r1, [r0, #4]
   214a4:	ldr	r0, [fp, #-12]
   214a8:	movw	r1, #0
   214ac:	cmp	r0, r1
   214b0:	beq	214c0 <__assert_fail@plt+0x1013c>
   214b4:	ldr	r0, [fp, #-12]
   214b8:	ldr	r1, [fp, #-108]	; 0xffffff94
   214bc:	bl	1d870 <__assert_fail@plt+0xc4ec>
   214c0:	b	21a9c <__assert_fail@plt+0x10718>
   214c4:	ldr	r0, [fp, #8]
   214c8:	ldr	r0, [r0, #4]
   214cc:	cmp	r0, #0
   214d0:	bne	21528 <__assert_fail@plt+0x101a4>
   214d4:	ldr	r0, [fp, #-16]
   214d8:	bl	1eb2c <__assert_fail@plt+0xd7a8>
   214dc:	str	r0, [fp, #-112]	; 0xffffff90
   214e0:	ldr	r0, [fp, #-4]
   214e4:	ldr	r1, [fp, #-16]
   214e8:	bl	1edbc <__assert_fail@plt+0xda38>
   214ec:	ldr	r0, [fp, #-8]
   214f0:	movw	r1, #0
   214f4:	cmp	r0, r1
   214f8:	beq	21508 <__assert_fail@plt+0x10184>
   214fc:	ldr	r0, [fp, #-8]
   21500:	ldr	r1, [fp, #-112]	; 0xffffff90
   21504:	bl	1d870 <__assert_fail@plt+0xc4ec>
   21508:	ldr	r0, [fp, #-12]
   2150c:	movw	r1, #0
   21510:	cmp	r0, r1
   21514:	beq	21524 <__assert_fail@plt+0x101a0>
   21518:	ldr	r0, [fp, #-12]
   2151c:	movw	r1, #0
   21520:	str	r1, [r0, #4]
   21524:	b	21a9c <__assert_fail@plt+0x10718>
   21528:	sub	r0, fp, #28
   2152c:	bl	1d714 <__assert_fail@plt+0xc390>
   21530:	sub	r0, fp, #40	; 0x28
   21534:	bl	1d714 <__assert_fail@plt+0xc390>
   21538:	sub	r0, fp, #52	; 0x34
   2153c:	bl	1d714 <__assert_fail@plt+0xc390>
   21540:	sub	r0, fp, #64	; 0x40
   21544:	bl	1d714 <__assert_fail@plt+0xc390>
   21548:	sub	r0, fp, #76	; 0x4c
   2154c:	bl	1d714 <__assert_fail@plt+0xc390>
   21550:	sub	r0, fp, #88	; 0x58
   21554:	bl	1d714 <__assert_fail@plt+0xc390>
   21558:	sub	r0, fp, #28
   2155c:	ldr	r1, [fp, #-16]
   21560:	bl	1edbc <__assert_fail@plt+0xda38>
   21564:	sub	r0, fp, #28
   21568:	bl	21160 <__assert_fail@plt+0xfddc>
   2156c:	sub	r1, fp, #40	; 0x28
   21570:	str	r0, [fp, #-92]	; 0xffffffa4
   21574:	ldr	r0, [fp, #8]
   21578:	str	r0, [sp, #92]	; 0x5c
   2157c:	mov	r0, r1
   21580:	ldr	r1, [sp, #92]	; 0x5c
   21584:	bl	1edbc <__assert_fail@plt+0xda38>
   21588:	sub	r0, fp, #40	; 0x28
   2158c:	bl	21160 <__assert_fail@plt+0xfddc>
   21590:	str	r0, [fp, #-96]	; 0xffffffa0
   21594:	ldr	r0, [fp, #-92]	; 0xffffffa4
   21598:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2159c:	cmp	r0, r1
   215a0:	bcs	215b0 <__assert_fail@plt+0x1022c>
   215a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   215a8:	str	r0, [sp, #88]	; 0x58
   215ac:	b	215b8 <__assert_fail@plt+0x10234>
   215b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   215b4:	str	r0, [sp, #88]	; 0x58
   215b8:	ldr	r0, [sp, #88]	; 0x58
   215bc:	str	r0, [fp, #-100]	; 0xffffff9c
   215c0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   215c4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   215c8:	sub	r0, r1, r0
   215cc:	str	r0, [fp, #-92]	; 0xffffffa4
   215d0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   215d4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   215d8:	sub	r0, r1, r0
   215dc:	str	r0, [fp, #-96]	; 0xffffffa0
   215e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   215e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   215e8:	cmp	r0, r1
   215ec:	bge	21650 <__assert_fail@plt+0x102cc>
   215f0:	sub	r1, fp, #40	; 0x28
   215f4:	sub	r0, fp, #28
   215f8:	bl	1ee64 <__assert_fail@plt+0xdae0>
   215fc:	ldr	r0, [fp, #-16]
   21600:	str	r0, [sp, #116]	; 0x74
   21604:	ldr	r0, [fp, #8]
   21608:	str	r0, [fp, #-16]
   2160c:	ldr	r0, [sp, #116]	; 0x74
   21610:	str	r0, [fp, #8]
   21614:	b	21618 <__assert_fail@plt+0x10294>
   21618:	ldr	r0, [fp, #-8]
   2161c:	str	r0, [sp, #112]	; 0x70
   21620:	ldr	r0, [fp, #-12]
   21624:	str	r0, [fp, #-8]
   21628:	ldr	r0, [sp, #112]	; 0x70
   2162c:	str	r0, [fp, #-12]
   21630:	b	21634 <__assert_fail@plt+0x102b0>
   21634:	ldr	r0, [fp, #-92]	; 0xffffffa4
   21638:	str	r0, [sp, #108]	; 0x6c
   2163c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   21640:	str	r0, [fp, #-92]	; 0xffffffa4
   21644:	ldr	r0, [sp, #108]	; 0x6c
   21648:	str	r0, [fp, #-96]	; 0xffffffa0
   2164c:	b	21650 <__assert_fail@plt+0x102cc>
   21650:	sub	r3, fp, #40	; 0x28
   21654:	sub	r0, fp, #28
   21658:	sub	r1, fp, #88	; 0x58
   2165c:	str	r0, [sp, #84]	; 0x54
   21660:	mov	r0, r1
   21664:	ldr	r1, [sp, #84]	; 0x54
   21668:	ldr	r2, [sp, #84]	; 0x54
   2166c:	bl	1ff88 <__assert_fail@plt+0xec04>
   21670:	sub	r0, fp, #88	; 0x58
   21674:	ldr	r2, [fp, #-92]	; 0xffffffa4
   21678:	str	r0, [sp, #80]	; 0x50
   2167c:	ldr	r1, [sp, #80]	; 0x50
   21680:	bl	1f744 <__assert_fail@plt+0xe3c0>
   21684:	sub	r0, fp, #64	; 0x40
   21688:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2168c:	bl	21aa4 <__assert_fail@plt+0x10720>
   21690:	ldr	r0, [fp, #-92]	; 0xffffffa4
   21694:	ldr	r1, [fp, #-96]	; 0xffffffa0
   21698:	add	r0, r0, r1
   2169c:	str	r0, [fp, #-104]	; 0xffffff98
   216a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   216a4:	cmp	r0, #0
   216a8:	ble	21800 <__assert_fail@plt+0x1047c>
   216ac:	sub	r0, fp, #28
   216b0:	bl	21160 <__assert_fail@plt+0xfddc>
   216b4:	sub	lr, fp, #76	; 0x4c
   216b8:	str	r0, [sp, #104]	; 0x68
   216bc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   216c0:	ldr	r1, [sp, #104]	; 0x68
   216c4:	add	r1, r0, r1
   216c8:	mov	r0, lr
   216cc:	bl	21aa4 <__assert_fail@plt+0x10720>
   216d0:	ldr	r0, [sp, #104]	; 0x68
   216d4:	ldr	r1, [fp, #-104]	; 0xffffff98
   216d8:	add	r0, r1, r0
   216dc:	str	r0, [fp, #-104]	; 0xffffff98
   216e0:	sub	r1, fp, #40	; 0x28
   216e4:	sub	r0, fp, #28
   216e8:	bl	1ebc4 <__assert_fail@plt+0xd840>
   216ec:	str	r0, [sp, #100]	; 0x64
   216f0:	ldr	r0, [sp, #100]	; 0x64
   216f4:	cmp	r0, #0
   216f8:	bne	21700 <__assert_fail@plt+0x1037c>
   216fc:	b	217fc <__assert_fail@plt+0x10478>
   21700:	ldr	r0, [sp, #100]	; 0x64
   21704:	cmp	r0, #0
   21708:	bge	2177c <__assert_fail@plt+0x103f8>
   2170c:	sub	r2, fp, #28
   21710:	sub	r0, fp, #40	; 0x28
   21714:	str	r0, [sp, #76]	; 0x4c
   21718:	ldr	r1, [sp, #76]	; 0x4c
   2171c:	bl	1f408 <__assert_fail@plt+0xe084>
   21720:	sub	r2, fp, #88	; 0x58
   21724:	sub	r0, fp, #76	; 0x4c
   21728:	str	r0, [sp, #72]	; 0x48
   2172c:	ldr	r1, [sp, #72]	; 0x48
   21730:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   21734:	sub	r2, fp, #64	; 0x40
   21738:	sub	r0, fp, #52	; 0x34
   2173c:	str	r0, [sp, #68]	; 0x44
   21740:	ldr	r1, [sp, #68]	; 0x44
   21744:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   21748:	sub	r0, fp, #40	; 0x28
   2174c:	bl	21160 <__assert_fail@plt+0xfddc>
   21750:	sub	r1, fp, #88	; 0x58
   21754:	str	r0, [sp, #104]	; 0x68
   21758:	ldr	r2, [sp, #104]	; 0x68
   2175c:	mov	r0, r1
   21760:	bl	1f744 <__assert_fail@plt+0xe3c0>
   21764:	sub	r0, fp, #64	; 0x40
   21768:	ldr	r2, [sp, #104]	; 0x68
   2176c:	str	r0, [sp, #64]	; 0x40
   21770:	ldr	r1, [sp, #64]	; 0x40
   21774:	bl	1f744 <__assert_fail@plt+0xe3c0>
   21778:	b	217e8 <__assert_fail@plt+0x10464>
   2177c:	sub	r2, fp, #40	; 0x28
   21780:	sub	r0, fp, #28
   21784:	str	r0, [sp, #60]	; 0x3c
   21788:	ldr	r1, [sp, #60]	; 0x3c
   2178c:	bl	1f408 <__assert_fail@plt+0xe084>
   21790:	sub	r0, fp, #88	; 0x58
   21794:	sub	r1, fp, #76	; 0x4c
   21798:	str	r0, [sp, #56]	; 0x38
   2179c:	ldr	r2, [sp, #56]	; 0x38
   217a0:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   217a4:	sub	r0, fp, #64	; 0x40
   217a8:	sub	r1, fp, #52	; 0x34
   217ac:	str	r0, [sp, #52]	; 0x34
   217b0:	ldr	r2, [sp, #52]	; 0x34
   217b4:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   217b8:	sub	r0, fp, #28
   217bc:	bl	21160 <__assert_fail@plt+0xfddc>
   217c0:	sub	r1, fp, #76	; 0x4c
   217c4:	str	r0, [sp, #104]	; 0x68
   217c8:	ldr	r2, [sp, #104]	; 0x68
   217cc:	mov	r0, r1
   217d0:	bl	1f744 <__assert_fail@plt+0xe3c0>
   217d4:	sub	r0, fp, #52	; 0x34
   217d8:	ldr	r2, [sp, #104]	; 0x68
   217dc:	str	r0, [sp, #48]	; 0x30
   217e0:	ldr	r1, [sp, #48]	; 0x30
   217e4:	bl	1f744 <__assert_fail@plt+0xe3c0>
   217e8:	ldr	r0, [sp, #104]	; 0x68
   217ec:	ldr	r1, [fp, #-104]	; 0xffffff98
   217f0:	add	r0, r1, r0
   217f4:	str	r0, [fp, #-104]	; 0xffffff98
   217f8:	b	216e0 <__assert_fail@plt+0x1035c>
   217fc:	b	2180c <__assert_fail@plt+0x10488>
   21800:	sub	r0, fp, #76	; 0x4c
   21804:	ldr	r1, [fp, #-92]	; 0xffffffa4
   21808:	bl	21aa4 <__assert_fail@plt+0x10720>
   2180c:	sub	r0, fp, #40	; 0x28
   21810:	ldr	r2, [fp, #-100]	; 0xffffff9c
   21814:	str	r0, [sp, #44]	; 0x2c
   21818:	ldr	r1, [sp, #44]	; 0x2c
   2181c:	bl	1f744 <__assert_fail@plt+0xe3c0>
   21820:	sub	r0, fp, #52	; 0x34
   21824:	str	r0, [sp, #40]	; 0x28
   21828:	ldr	r1, [sp, #40]	; 0x28
   2182c:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   21830:	sub	r2, fp, #40	; 0x28
   21834:	sub	r0, fp, #64	; 0x40
   21838:	ldr	r1, [fp, #8]
   2183c:	bl	208ac <__assert_fail@plt+0xf528>
   21840:	sub	r0, fp, #64	; 0x40
   21844:	str	r0, [sp, #36]	; 0x24
   21848:	ldr	r1, [sp, #36]	; 0x24
   2184c:	bl	1edbc <__assert_fail@plt+0xda38>
   21850:	sub	r2, fp, #40	; 0x28
   21854:	sub	r0, fp, #88	; 0x58
   21858:	ldr	r1, [fp, #-16]
   2185c:	bl	208ac <__assert_fail@plt+0xf528>
   21860:	sub	r0, fp, #88	; 0x58
   21864:	str	r0, [sp, #32]
   21868:	ldr	r1, [sp, #32]
   2186c:	bl	1edbc <__assert_fail@plt+0xda38>
   21870:	ldr	r0, [fp, #-104]	; 0xffffff98
   21874:	mvn	r1, #0
   21878:	add	r1, r0, r1
   2187c:	str	r1, [fp, #-104]	; 0xffffff98
   21880:	cmp	r0, #0
   21884:	bls	219a0 <__assert_fail@plt+0x1061c>
   21888:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2188c:	cmp	r0, #0
   21890:	movw	r0, #0
   21894:	movne	r0, #1
   21898:	and	r0, r0, #1
   2189c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   218a0:	ldr	r1, [r1]
   218a4:	and	r0, r0, r1
   218a8:	cmp	r0, #0
   218ac:	bne	218d8 <__assert_fail@plt+0x10554>
   218b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   218b4:	cmp	r0, #0
   218b8:	movw	r0, #0
   218bc:	movne	r0, #1
   218c0:	and	r0, r0, #1
   218c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   218c8:	ldr	r1, [r1]
   218cc:	and	r0, r0, r1
   218d0:	cmp	r0, #0
   218d4:	beq	21900 <__assert_fail@plt+0x1057c>
   218d8:	sub	r2, fp, #64	; 0x40
   218dc:	sub	r0, fp, #52	; 0x34
   218e0:	str	r0, [sp, #28]
   218e4:	ldr	r1, [sp, #28]
   218e8:	bl	1f408 <__assert_fail@plt+0xe084>
   218ec:	sub	r2, fp, #88	; 0x58
   218f0:	sub	r0, fp, #76	; 0x4c
   218f4:	str	r0, [sp, #24]
   218f8:	ldr	r1, [sp, #24]
   218fc:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   21900:	ldr	r0, [fp, #-72]	; 0xffffffb8
   21904:	cmp	r0, #0
   21908:	movw	r0, #0
   2190c:	movne	r0, #1
   21910:	and	r0, r0, #1
   21914:	ldr	r1, [fp, #-68]	; 0xffffffbc
   21918:	ldr	r1, [r1]
   2191c:	and	r0, r0, r1
   21920:	cmp	r0, #0
   21924:	bne	21954 <__assert_fail@plt+0x105d0>
   21928:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2192c:	cmp	r0, #0
   21930:	movw	r0, #0
   21934:	movne	r0, #1
   21938:	and	r0, r0, #1
   2193c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21940:	ldr	r1, [r1]
   21944:	and	r0, r0, r1
   21948:	cmp	r0, #0
   2194c:	bne	21954 <__assert_fail@plt+0x105d0>
   21950:	b	21974 <__assert_fail@plt+0x105f0>
   21954:	movw	r0, #31727	; 0x7bef
   21958:	movt	r0, #3
   2195c:	movw	r1, #30584	; 0x7778
   21960:	movt	r1, #3
   21964:	movw	r2, #2950	; 0xb86
   21968:	movw	r3, #31762	; 0x7c12
   2196c:	movt	r3, #3
   21970:	bl	11384 <__assert_fail@plt>
   21974:	sub	r0, fp, #52	; 0x34
   21978:	str	r0, [sp, #20]
   2197c:	ldr	r1, [sp, #20]
   21980:	movw	r2, #1
   21984:	bl	20478 <__assert_fail@plt+0xf0f4>
   21988:	sub	r0, fp, #76	; 0x4c
   2198c:	str	r0, [sp, #16]
   21990:	ldr	r1, [sp, #16]
   21994:	movw	r2, #1
   21998:	bl	20478 <__assert_fail@plt+0xf0f4>
   2199c:	b	21870 <__assert_fail@plt+0x104ec>
   219a0:	sub	r0, fp, #64	; 0x40
   219a4:	sub	r1, fp, #52	; 0x34
   219a8:	str	r0, [sp, #12]
   219ac:	ldr	r2, [sp, #12]
   219b0:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   219b4:	sub	r1, fp, #64	; 0x40
   219b8:	sub	r0, fp, #52	; 0x34
   219bc:	bl	1ec84 <__assert_fail@plt+0xd900>
   219c0:	cmp	r0, #0
   219c4:	ble	219e8 <__assert_fail@plt+0x10664>
   219c8:	sub	r1, fp, #64	; 0x40
   219cc:	sub	r0, fp, #52	; 0x34
   219d0:	bl	1ee64 <__assert_fail@plt+0xdae0>
   219d4:	sub	r2, fp, #88	; 0x58
   219d8:	sub	r0, fp, #76	; 0x4c
   219dc:	str	r0, [sp, #8]
   219e0:	ldr	r1, [sp, #8]
   219e4:	bl	1f408 <__assert_fail@plt+0xe084>
   219e8:	ldr	r0, [fp, #-16]
   219ec:	ldr	r0, [r0, #4]
   219f0:	cmp	r0, #0
   219f4:	bge	21a08 <__assert_fail@plt+0x10684>
   219f8:	sub	r0, fp, #52	; 0x34
   219fc:	str	r0, [sp, #4]
   21a00:	ldr	r1, [sp, #4]
   21a04:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   21a08:	ldr	r0, [fp, #8]
   21a0c:	ldr	r0, [r0, #4]
   21a10:	cmp	r0, #0
   21a14:	bge	21a28 <__assert_fail@plt+0x106a4>
   21a18:	sub	r0, fp, #76	; 0x4c
   21a1c:	str	r0, [sp]
   21a20:	ldr	r1, [sp]
   21a24:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   21a28:	sub	r1, fp, #40	; 0x28
   21a2c:	ldr	r0, [fp, #-4]
   21a30:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21a34:	ldr	r0, [fp, #-8]
   21a38:	movw	r1, #0
   21a3c:	cmp	r0, r1
   21a40:	beq	21a50 <__assert_fail@plt+0x106cc>
   21a44:	sub	r1, fp, #52	; 0x34
   21a48:	ldr	r0, [fp, #-8]
   21a4c:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21a50:	ldr	r0, [fp, #-12]
   21a54:	movw	r1, #0
   21a58:	cmp	r0, r1
   21a5c:	beq	21a6c <__assert_fail@plt+0x106e8>
   21a60:	sub	r1, fp, #76	; 0x4c
   21a64:	ldr	r0, [fp, #-12]
   21a68:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21a6c:	sub	r0, fp, #28
   21a70:	bl	1d7ec <__assert_fail@plt+0xc468>
   21a74:	sub	r0, fp, #40	; 0x28
   21a78:	bl	1d7ec <__assert_fail@plt+0xc468>
   21a7c:	sub	r0, fp, #52	; 0x34
   21a80:	bl	1d7ec <__assert_fail@plt+0xc468>
   21a84:	sub	r0, fp, #64	; 0x40
   21a88:	bl	1d7ec <__assert_fail@plt+0xc468>
   21a8c:	sub	r0, fp, #76	; 0x4c
   21a90:	bl	1d7ec <__assert_fail@plt+0xc468>
   21a94:	sub	r0, fp, #88	; 0x58
   21a98:	bl	1d7ec <__assert_fail@plt+0xc468>
   21a9c:	mov	sp, fp
   21aa0:	pop	{fp, pc}
   21aa4:	push	{fp, lr}
   21aa8:	mov	fp, sp
   21aac:	sub	sp, sp, #8
   21ab0:	str	r0, [sp, #4]
   21ab4:	str	r1, [sp]
   21ab8:	ldr	r0, [sp, #4]
   21abc:	ldr	r1, [sp]
   21ac0:	bl	238e4 <__assert_fail@plt+0x12560>
   21ac4:	cmp	r0, #0
   21ac8:	bne	21afc <__assert_fail@plt+0x10778>
   21acc:	ldr	r0, [sp, #4]
   21ad0:	ldr	r0, [r0, #4]
   21ad4:	cmp	r0, #0
   21ad8:	blt	21aec <__assert_fail@plt+0x10768>
   21adc:	ldr	r0, [sp, #4]
   21ae0:	ldr	r1, [sp]
   21ae4:	bl	23a44 <__assert_fail@plt+0x126c0>
   21ae8:	b	21af8 <__assert_fail@plt+0x10774>
   21aec:	ldr	r0, [sp, #4]
   21af0:	ldr	r1, [sp]
   21af4:	bl	23c58 <__assert_fail@plt+0x128d4>
   21af8:	b	21afc <__assert_fail@plt+0x10778>
   21afc:	mov	sp, fp
   21b00:	pop	{fp, pc}
   21b04:	push	{fp, lr}
   21b08:	mov	fp, sp
   21b0c:	sub	sp, sp, #32
   21b10:	str	r0, [fp, #-4]
   21b14:	str	r1, [fp, #-8]
   21b18:	str	r2, [fp, #-12]
   21b1c:	ldr	r0, [fp, #-8]
   21b20:	ldr	r0, [r0, #4]
   21b24:	cmp	r0, #0
   21b28:	beq	21b3c <__assert_fail@plt+0x107b8>
   21b2c:	ldr	r0, [fp, #-12]
   21b30:	ldr	r0, [r0, #4]
   21b34:	cmp	r0, #0
   21b38:	bne	21b4c <__assert_fail@plt+0x107c8>
   21b3c:	ldr	r0, [fp, #-4]
   21b40:	movw	r1, #0
   21b44:	str	r1, [r0, #4]
   21b48:	b	21b9c <__assert_fail@plt+0x10818>
   21b4c:	add	r0, sp, #8
   21b50:	bl	1d714 <__assert_fail@plt+0xc390>
   21b54:	add	r0, sp, #8
   21b58:	ldr	r1, [fp, #-8]
   21b5c:	ldr	r2, [fp, #-12]
   21b60:	bl	20f0c <__assert_fail@plt+0xfb88>
   21b64:	add	r0, sp, #8
   21b68:	ldr	r1, [fp, #-8]
   21b6c:	str	r0, [sp, #4]
   21b70:	ldr	r2, [sp, #4]
   21b74:	bl	208ac <__assert_fail@plt+0xf528>
   21b78:	add	r1, sp, #8
   21b7c:	ldr	r0, [fp, #-4]
   21b80:	ldr	r2, [fp, #-12]
   21b84:	bl	1f55c <__assert_fail@plt+0xe1d8>
   21b88:	add	r0, sp, #8
   21b8c:	bl	1d7ec <__assert_fail@plt+0xc468>
   21b90:	ldr	r0, [fp, #-4]
   21b94:	ldr	r1, [fp, #-4]
   21b98:	bl	1edbc <__assert_fail@plt+0xda38>
   21b9c:	mov	sp, fp
   21ba0:	pop	{fp, pc}
   21ba4:	push	{fp, lr}
   21ba8:	mov	fp, sp
   21bac:	sub	sp, sp, #16
   21bb0:	str	r0, [fp, #-4]
   21bb4:	str	r1, [sp, #8]
   21bb8:	str	r2, [sp, #4]
   21bbc:	ldr	r0, [sp, #4]
   21bc0:	cmp	r0, #0
   21bc4:	beq	21bd8 <__assert_fail@plt+0x10854>
   21bc8:	ldr	r0, [sp, #8]
   21bcc:	ldr	r0, [r0, #4]
   21bd0:	cmp	r0, #0
   21bd4:	bne	21be8 <__assert_fail@plt+0x10864>
   21bd8:	ldr	r0, [fp, #-4]
   21bdc:	movw	r1, #0
   21be0:	str	r1, [r0, #4]
   21be4:	b	21c20 <__assert_fail@plt+0x1089c>
   21be8:	ldr	r1, [sp, #8]
   21bec:	ldr	r2, [sp, #4]
   21bf0:	movw	r0, #0
   21bf4:	bl	20e88 <__assert_fail@plt+0xfb04>
   21bf8:	ldr	r1, [sp, #4]
   21bfc:	udiv	r0, r1, r0
   21c00:	str	r0, [sp, #4]
   21c04:	ldr	r0, [fp, #-4]
   21c08:	ldr	r1, [sp, #8]
   21c0c:	ldr	r2, [sp, #4]
   21c10:	bl	1f514 <__assert_fail@plt+0xe190>
   21c14:	ldr	r0, [fp, #-4]
   21c18:	ldr	r1, [fp, #-4]
   21c1c:	bl	1edbc <__assert_fail@plt+0xda38>
   21c20:	mov	sp, fp
   21c24:	pop	{fp, pc}
   21c28:	push	{fp, lr}
   21c2c:	mov	fp, sp
   21c30:	sub	sp, sp, #56	; 0x38
   21c34:	str	r0, [fp, #-8]
   21c38:	str	r1, [fp, #-12]
   21c3c:	str	r2, [fp, #-16]
   21c40:	ldr	r0, [fp, #-12]
   21c44:	ldr	r0, [r0, #4]
   21c48:	cmp	r0, #0
   21c4c:	beq	21c64 <__assert_fail@plt+0x108e0>
   21c50:	ldr	r0, [fp, #-16]
   21c54:	movw	r1, #1
   21c58:	bl	1de68 <__assert_fail@plt+0xcae4>
   21c5c:	cmp	r0, #0
   21c60:	bgt	21c70 <__assert_fail@plt+0x108ec>
   21c64:	movw	r0, #0
   21c68:	str	r0, [fp, #-4]
   21c6c:	b	21d38 <__assert_fail@plt+0x109b4>
   21c70:	add	r0, sp, #28
   21c74:	bl	1d714 <__assert_fail@plt+0xc390>
   21c78:	add	r0, sp, #16
   21c7c:	bl	1d714 <__assert_fail@plt+0xc390>
   21c80:	add	r1, sp, #16
   21c84:	add	r0, sp, #28
   21c88:	ldr	r3, [fp, #-12]
   21c8c:	ldr	lr, [fp, #-16]
   21c90:	movw	r2, #0
   21c94:	str	lr, [sp]
   21c98:	bl	2143c <__assert_fail@plt+0x100b8>
   21c9c:	add	r0, sp, #28
   21ca0:	movw	r1, #1
   21ca4:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   21ca8:	cmp	r0, #0
   21cac:	movw	r0, #0
   21cb0:	moveq	r0, #1
   21cb4:	and	r0, r0, #1
   21cb8:	str	r0, [sp, #12]
   21cbc:	ldr	r0, [sp, #12]
   21cc0:	cmp	r0, #0
   21cc4:	beq	21d20 <__assert_fail@plt+0x1099c>
   21cc8:	ldr	r0, [sp, #20]
   21ccc:	cmp	r0, #0
   21cd0:	bge	21d14 <__assert_fail@plt+0x10990>
   21cd4:	ldr	r0, [fp, #-16]
   21cd8:	ldr	r0, [r0, #4]
   21cdc:	cmp	r0, #0
   21ce0:	blt	21cfc <__assert_fail@plt+0x10978>
   21ce4:	add	r0, sp, #16
   21ce8:	ldr	r2, [fp, #-16]
   21cec:	str	r0, [sp, #8]
   21cf0:	ldr	r1, [sp, #8]
   21cf4:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   21cf8:	b	21d10 <__assert_fail@plt+0x1098c>
   21cfc:	add	r0, sp, #16
   21d00:	ldr	r2, [fp, #-16]
   21d04:	str	r0, [sp, #4]
   21d08:	ldr	r1, [sp, #4]
   21d0c:	bl	1f408 <__assert_fail@plt+0xe084>
   21d10:	b	21d14 <__assert_fail@plt+0x10990>
   21d14:	add	r1, sp, #16
   21d18:	ldr	r0, [fp, #-8]
   21d1c:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21d20:	add	r0, sp, #28
   21d24:	bl	1d7ec <__assert_fail@plt+0xc468>
   21d28:	add	r0, sp, #16
   21d2c:	bl	1d7ec <__assert_fail@plt+0xc468>
   21d30:	ldr	r0, [sp, #12]
   21d34:	str	r0, [fp, #-4]
   21d38:	ldr	r0, [fp, #-4]
   21d3c:	mov	sp, fp
   21d40:	pop	{fp, pc}
   21d44:	push	{fp, lr}
   21d48:	mov	fp, sp
   21d4c:	sub	sp, sp, #40	; 0x28
   21d50:	add	r3, sp, #12
   21d54:	str	r0, [fp, #-4]
   21d58:	str	r1, [fp, #-8]
   21d5c:	str	r2, [fp, #-12]
   21d60:	mov	r0, r3
   21d64:	movw	r1, #1
   21d68:	bl	1db7c <__assert_fail@plt+0xc7f8>
   21d6c:	ldr	r0, [pc, #112]	; 21de4 <__assert_fail@plt+0x10a60>
   21d70:	str	r0, [fp, #-16]
   21d74:	add	r0, sp, #12
   21d78:	str	r0, [sp, #8]
   21d7c:	ldr	r1, [sp, #8]
   21d80:	ldr	r2, [sp, #8]
   21d84:	bl	1f55c <__assert_fail@plt+0xe1d8>
   21d88:	ldr	r0, [fp, #-12]
   21d8c:	ldr	r1, [fp, #-16]
   21d90:	and	r0, r0, r1
   21d94:	cmp	r0, #0
   21d98:	beq	21db0 <__assert_fail@plt+0x10a2c>
   21d9c:	add	r0, sp, #12
   21da0:	ldr	r2, [fp, #-8]
   21da4:	str	r0, [sp, #4]
   21da8:	ldr	r1, [sp, #4]
   21dac:	bl	1f55c <__assert_fail@plt+0xe1d8>
   21db0:	ldr	r0, [fp, #-16]
   21db4:	lsr	r0, r0, #1
   21db8:	str	r0, [fp, #-16]
   21dbc:	ldr	r0, [fp, #-16]
   21dc0:	cmp	r0, #0
   21dc4:	bhi	21d74 <__assert_fail@plt+0x109f0>
   21dc8:	add	r1, sp, #12
   21dcc:	ldr	r0, [fp, #-4]
   21dd0:	bl	1ee64 <__assert_fail@plt+0xdae0>
   21dd4:	add	r0, sp, #12
   21dd8:	bl	1d7ec <__assert_fail@plt+0xc468>
   21ddc:	mov	sp, fp
   21de0:	pop	{fp, pc}
   21de4:	andhi	r0, r0, r0
   21de8:	push	{fp, lr}
   21dec:	mov	fp, sp
   21df0:	sub	sp, sp, #24
   21df4:	mov	r3, sp
   21df8:	str	r0, [fp, #-4]
   21dfc:	str	r1, [fp, #-8]
   21e00:	str	r2, [sp, #12]
   21e04:	ldr	r1, [fp, #-8]
   21e08:	mov	r0, r3
   21e0c:	bl	1db7c <__assert_fail@plt+0xc7f8>
   21e10:	mov	r1, sp
   21e14:	ldr	r0, [fp, #-4]
   21e18:	ldr	r2, [sp, #12]
   21e1c:	bl	21d44 <__assert_fail@plt+0x109c0>
   21e20:	mov	r0, sp
   21e24:	bl	1d7ec <__assert_fail@plt+0xc468>
   21e28:	mov	sp, fp
   21e2c:	pop	{fp, pc}
   21e30:	push	{fp, lr}
   21e34:	mov	fp, sp
   21e38:	sub	sp, sp, #144	; 0x90
   21e3c:	str	r0, [fp, #-4]
   21e40:	str	r1, [fp, #-8]
   21e44:	str	r2, [fp, #-12]
   21e48:	str	r3, [fp, #-16]
   21e4c:	movw	r0, #0
   21e50:	str	r0, [sp, #68]	; 0x44
   21e54:	ldr	r0, [fp, #-12]
   21e58:	ldr	r0, [r0, #4]
   21e5c:	cmp	r0, #0
   21e60:	blt	21e74 <__assert_fail@plt+0x10af0>
   21e64:	ldr	r0, [fp, #-12]
   21e68:	ldr	r0, [r0, #4]
   21e6c:	str	r0, [sp, #40]	; 0x28
   21e70:	b	21e88 <__assert_fail@plt+0x10b04>
   21e74:	ldr	r0, [fp, #-12]
   21e78:	ldr	r0, [r0, #4]
   21e7c:	movw	r1, #0
   21e80:	sub	r0, r1, r0
   21e84:	str	r0, [sp, #40]	; 0x28
   21e88:	ldr	r0, [sp, #40]	; 0x28
   21e8c:	str	r0, [fp, #-44]	; 0xffffffd4
   21e90:	ldr	r0, [fp, #-16]
   21e94:	ldr	r0, [r0, #4]
   21e98:	cmp	r0, #0
   21e9c:	blt	21eb0 <__assert_fail@plt+0x10b2c>
   21ea0:	ldr	r0, [fp, #-16]
   21ea4:	ldr	r0, [r0, #4]
   21ea8:	str	r0, [sp, #36]	; 0x24
   21eac:	b	21ec4 <__assert_fail@plt+0x10b40>
   21eb0:	ldr	r0, [fp, #-16]
   21eb4:	ldr	r0, [r0, #4]
   21eb8:	movw	r1, #0
   21ebc:	sub	r0, r1, r0
   21ec0:	str	r0, [sp, #36]	; 0x24
   21ec4:	ldr	r0, [sp, #36]	; 0x24
   21ec8:	str	r0, [fp, #-48]	; 0xffffffd0
   21ecc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21ed0:	cmp	r0, #0
   21ed4:	bne	21ee4 <__assert_fail@plt+0x10b60>
   21ed8:	movw	r0, #31870	; 0x7c7e
   21edc:	movt	r0, #3
   21ee0:	bl	2226c <__assert_fail@plt+0x10ee8>
   21ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21ee8:	cmp	r0, #0
   21eec:	bne	21f00 <__assert_fail@plt+0x10b7c>
   21ef0:	ldr	r0, [fp, #-4]
   21ef4:	movw	r1, #1
   21ef8:	bl	1d90c <__assert_fail@plt+0xc588>
   21efc:	b	22260 <__assert_fail@plt+0x10edc>
   21f00:	ldr	r0, [fp, #-16]
   21f04:	ldr	r0, [r0, #8]
   21f08:	str	r0, [fp, #-52]	; 0xffffffcc
   21f0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21f10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21f14:	sub	r0, fp, #68	; 0x44
   21f18:	bl	222a0 <__assert_fail@plt+0x10f1c>
   21f1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   21f20:	str	r0, [sp, #72]	; 0x48
   21f24:	ldr	r0, [sp, #72]	; 0x48
   21f28:	cmp	r0, #0
   21f2c:	bls	21f98 <__assert_fail@plt+0x10c14>
   21f30:	movw	r0, #0
   21f34:	str	r0, [fp, #-68]	; 0xffffffbc
   21f38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21f3c:	bl	1d7b0 <__assert_fail@plt+0xc42c>
   21f40:	str	r0, [sp, #68]	; 0x44
   21f44:	ldr	r0, [sp, #68]	; 0x44
   21f48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21f4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21f50:	ldr	r3, [sp, #72]	; 0x48
   21f54:	bl	1c278 <__assert_fail@plt+0xaef4>
   21f58:	str	r0, [sp, #64]	; 0x40
   21f5c:	ldr	r0, [sp, #64]	; 0x40
   21f60:	cmp	r0, #0
   21f64:	bne	21f6c <__assert_fail@plt+0x10be8>
   21f68:	b	21f8c <__assert_fail@plt+0x10c08>
   21f6c:	movw	r0, #31565	; 0x7b4d
   21f70:	movt	r0, #3
   21f74:	movw	r1, #30584	; 0x7778
   21f78:	movt	r1, #3
   21f7c:	movw	r2, #3116	; 0xc2c
   21f80:	movw	r3, #31893	; 0x7c95
   21f84:	movt	r3, #3
   21f88:	bl	11384 <__assert_fail@plt>
   21f8c:	b	21f90 <__assert_fail@plt+0x10c0c>
   21f90:	ldr	r0, [sp, #68]	; 0x44
   21f94:	str	r0, [fp, #-52]	; 0xffffffcc
   21f98:	sub	r0, fp, #40	; 0x28
   21f9c:	bl	1d714 <__assert_fail@plt+0xc390>
   21fa0:	ldr	r0, [fp, #-12]
   21fa4:	ldr	r0, [r0, #4]
   21fa8:	cmp	r0, #0
   21fac:	bge	21fd8 <__assert_fail@plt+0x10c54>
   21fb0:	sub	r0, fp, #40	; 0x28
   21fb4:	ldr	r1, [fp, #-8]
   21fb8:	ldr	r2, [fp, #-16]
   21fbc:	bl	21c28 <__assert_fail@plt+0x108a4>
   21fc0:	cmp	r0, #0
   21fc4:	bne	21fd4 <__assert_fail@plt+0x10c50>
   21fc8:	movw	r0, #31989	; 0x7cf5
   21fcc:	movt	r0, #3
   21fd0:	bl	2226c <__assert_fail@plt+0x10ee8>
   21fd4:	b	220e4 <__assert_fail@plt+0x10d60>
   21fd8:	sub	r0, fp, #40	; 0x28
   21fdc:	ldr	r1, [fp, #-8]
   21fe0:	bl	1edbc <__assert_fail@plt+0xda38>
   21fe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21fe8:	str	r0, [sp, #60]	; 0x3c
   21fec:	ldr	r0, [sp, #60]	; 0x3c
   21ff0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21ff4:	cmp	r0, r1
   21ff8:	blt	22034 <__assert_fail@plt+0x10cb0>
   21ffc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22000:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22004:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22008:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2200c:	movw	ip, #0
   22010:	str	r0, [sp, #32]
   22014:	mov	r0, ip
   22018:	ldr	ip, [sp, #32]
   2201c:	str	ip, [sp]
   22020:	sub	lr, fp, #68	; 0x44
   22024:	str	lr, [sp, #4]
   22028:	bl	224cc <__assert_fail@plt+0x11148>
   2202c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22030:	str	r0, [sp, #60]	; 0x3c
   22034:	ldr	r0, [fp, #-8]
   22038:	ldr	r0, [r0, #4]
   2203c:	cmp	r0, #0
   22040:	bge	220d4 <__assert_fail@plt+0x10d50>
   22044:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22048:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2204c:	cmp	r0, r1
   22050:	ble	22068 <__assert_fail@plt+0x10ce4>
   22054:	sub	r0, fp, #40	; 0x28
   22058:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2205c:	bl	1d994 <__assert_fail@plt+0xc610>
   22060:	str	r0, [sp, #28]
   22064:	b	22070 <__assert_fail@plt+0x10cec>
   22068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2206c:	str	r0, [sp, #28]
   22070:	ldr	r0, [sp, #28]
   22074:	str	r0, [sp, #56]	; 0x38
   22078:	ldr	r0, [sp, #56]	; 0x38
   2207c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   22080:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22084:	ldr	r3, [sp, #56]	; 0x38
   22088:	ldr	ip, [sp, #60]	; 0x3c
   2208c:	str	ip, [sp]
   22090:	bl	1b970 <__assert_fail@plt+0xa5ec>
   22094:	str	r0, [sp, #52]	; 0x34
   22098:	ldr	r0, [sp, #52]	; 0x34
   2209c:	cmp	r0, #0
   220a0:	bne	220a8 <__assert_fail@plt+0x10d24>
   220a4:	b	220c8 <__assert_fail@plt+0x10d44>
   220a8:	movw	r0, #31565	; 0x7b4d
   220ac:	movt	r0, #3
   220b0:	movw	r1, #30584	; 0x7778
   220b4:	movt	r1, #3
   220b8:	movw	r2, #3145	; 0xc49
   220bc:	movw	r3, #31893	; 0x7c95
   220c0:	movt	r3, #3
   220c4:	bl	11384 <__assert_fail@plt>
   220c8:	b	220cc <__assert_fail@plt+0x10d48>
   220cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   220d0:	str	r0, [sp, #60]	; 0x3c
   220d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   220d8:	ldr	r1, [sp, #60]	; 0x3c
   220dc:	bl	1b4e4 <__assert_fail@plt+0xa160>
   220e0:	str	r0, [fp, #-36]	; 0xffffffdc
   220e4:	sub	r0, fp, #28
   220e8:	movw	r1, #1
   220ec:	bl	1db7c <__assert_fail@plt+0xc7f8>
   220f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   220f4:	mvn	r1, #0
   220f8:	add	r0, r0, r1
   220fc:	str	r0, [fp, #-44]	; 0xffffffd4
   22100:	cmp	r0, #0
   22104:	blt	221d0 <__assert_fail@plt+0x10e4c>
   22108:	ldr	r0, [pc, #344]	; 22268 <__assert_fail@plt+0x10ee4>
   2210c:	ldr	r1, [fp, #-12]
   22110:	ldr	r1, [r1, #8]
   22114:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22118:	add	r1, r1, r2, lsl #2
   2211c:	ldr	r1, [r1]
   22120:	str	r1, [sp, #48]	; 0x30
   22124:	str	r0, [sp, #44]	; 0x2c
   22128:	sub	r0, fp, #28
   2212c:	str	r0, [sp, #24]
   22130:	ldr	r1, [sp, #24]
   22134:	ldr	r2, [sp, #24]
   22138:	bl	1f55c <__assert_fail@plt+0xe1d8>
   2213c:	ldr	r0, [sp, #48]	; 0x30
   22140:	ldr	r1, [sp, #44]	; 0x2c
   22144:	and	r0, r0, r1
   22148:	cmp	r0, #0
   2214c:	beq	22164 <__assert_fail@plt+0x10de0>
   22150:	sub	r2, fp, #40	; 0x28
   22154:	sub	r0, fp, #28
   22158:	str	r0, [sp, #20]
   2215c:	ldr	r1, [sp, #20]
   22160:	bl	1f55c <__assert_fail@plt+0xe1d8>
   22164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22168:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2216c:	cmp	r0, r1
   22170:	ble	221b4 <__assert_fail@plt+0x10e30>
   22174:	ldr	r1, [fp, #-20]	; 0xffffffec
   22178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2217c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22180:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22184:	movw	ip, #0
   22188:	str	r0, [sp, #16]
   2218c:	mov	r0, ip
   22190:	ldr	ip, [sp, #16]
   22194:	str	ip, [sp]
   22198:	sub	lr, fp, #68	; 0x44
   2219c:	str	lr, [sp, #4]
   221a0:	bl	224cc <__assert_fail@plt+0x11148>
   221a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   221a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   221ac:	bl	1b4e4 <__assert_fail@plt+0xa160>
   221b0:	str	r0, [fp, #-24]	; 0xffffffe8
   221b4:	ldr	r0, [sp, #44]	; 0x2c
   221b8:	lsr	r0, r0, #1
   221bc:	str	r0, [sp, #44]	; 0x2c
   221c0:	ldr	r0, [sp, #44]	; 0x2c
   221c4:	cmp	r0, #0
   221c8:	bhi	22128 <__assert_fail@plt+0x10da4>
   221cc:	b	220f0 <__assert_fail@plt+0x10d6c>
   221d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   221d8:	cmp	r0, r1
   221dc:	blt	22228 <__assert_fail@plt+0x10ea4>
   221e0:	ldr	r0, [sp, #72]	; 0x48
   221e4:	str	r0, [fp, #-68]	; 0xffffffbc
   221e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   221ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   221f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   221f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   221f8:	movw	ip, #0
   221fc:	str	r0, [sp, #12]
   22200:	mov	r0, ip
   22204:	ldr	ip, [sp, #12]
   22208:	str	ip, [sp]
   2220c:	sub	lr, fp, #68	; 0x44
   22210:	str	lr, [sp, #4]
   22214:	bl	224cc <__assert_fail@plt+0x11148>
   22218:	ldr	r0, [fp, #-20]	; 0xffffffec
   2221c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22220:	bl	1b4e4 <__assert_fail@plt+0xa160>
   22224:	str	r0, [fp, #-24]	; 0xffffffe8
   22228:	ldr	r0, [sp, #68]	; 0x44
   2222c:	movw	r1, #0
   22230:	cmp	r0, r1
   22234:	beq	22244 <__assert_fail@plt+0x10ec0>
   22238:	ldr	r0, [sp, #68]	; 0x44
   2223c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22240:	bl	1d828 <__assert_fail@plt+0xc4a4>
   22244:	sub	r1, fp, #28
   22248:	ldr	r0, [fp, #-4]
   2224c:	bl	1ee64 <__assert_fail@plt+0xdae0>
   22250:	sub	r0, fp, #28
   22254:	bl	1d7ec <__assert_fail@plt+0xc468>
   22258:	sub	r0, fp, #40	; 0x28
   2225c:	bl	1d7ec <__assert_fail@plt+0xc468>
   22260:	mov	sp, fp
   22264:	pop	{fp, pc}
   22268:	andhi	r0, r0, r0
   2226c:	push	{fp, lr}
   22270:	mov	fp, sp
   22274:	sub	sp, sp, #8
   22278:	str	r0, [sp, #4]
   2227c:	movw	r0, #41344	; 0xa180
   22280:	movt	r0, #4
   22284:	ldr	r0, [r0]
   22288:	ldr	r2, [sp, #4]
   2228c:	movw	r1, #35748	; 0x8ba4
   22290:	movt	r1, #3
   22294:	bl	11288 <fprintf@plt>
   22298:	str	r0, [sp]
   2229c:	bl	1136c <abort@plt>
   222a0:	push	{fp, lr}
   222a4:	mov	fp, sp
   222a8:	sub	sp, sp, #40	; 0x28
   222ac:	str	r0, [fp, #-4]
   222b0:	str	r1, [fp, #-8]
   222b4:	str	r2, [fp, #-12]
   222b8:	ldr	r0, [fp, #-12]
   222bc:	cmp	r0, #0
   222c0:	ble	222c8 <__assert_fail@plt+0x10f44>
   222c4:	b	222e8 <__assert_fail@plt+0x10f64>
   222c8:	movw	r0, #33964	; 0x84ac
   222cc:	movt	r0, #3
   222d0:	movw	r1, #30584	; 0x7778
   222d4:	movt	r1, #3
   222d8:	movw	r2, #932	; 0x3a4
   222dc:	movw	r3, #34253	; 0x85cd
   222e0:	movt	r3, #3
   222e4:	bl	11384 <__assert_fail@plt>
   222e8:	ldr	r0, [fp, #-12]
   222ec:	cmp	r0, #1
   222f0:	bne	22308 <__assert_fail@plt+0x10f84>
   222f4:	ldr	r0, [fp, #-4]
   222f8:	ldr	r1, [fp, #-8]
   222fc:	ldr	r1, [r1]
   22300:	bl	252f8 <__assert_fail@plt+0x13f74>
   22304:	b	224c4 <__assert_fail@plt+0x11140>
   22308:	ldr	r0, [fp, #-12]
   2230c:	cmp	r0, #2
   22310:	bne	22330 <__assert_fail@plt+0x10fac>
   22314:	ldr	r0, [fp, #-4]
   22318:	ldr	r1, [fp, #-8]
   2231c:	ldr	r1, [r1, #4]
   22320:	ldr	r2, [fp, #-8]
   22324:	ldr	r2, [r2]
   22328:	bl	26e04 <__assert_fail@plt+0x15a80>
   2232c:	b	224c0 <__assert_fail@plt+0x1113c>
   22330:	ldr	r0, [fp, #-8]
   22334:	ldr	r1, [fp, #-12]
   22338:	add	r0, r0, r1, lsl #2
   2233c:	ldr	r0, [r0, #-4]
   22340:	str	r0, [sp, #20]
   22344:	ldr	r0, [fp, #-8]
   22348:	ldr	r1, [fp, #-12]
   2234c:	sub	r1, r1, #2
   22350:	add	r0, r0, r1, lsl #2
   22354:	ldr	r0, [r0]
   22358:	str	r0, [sp, #16]
   2235c:	ldr	r0, [sp, #20]
   22360:	cmp	r0, #0
   22364:	bls	2236c <__assert_fail@plt+0x10fe8>
   22368:	b	2238c <__assert_fail@plt+0x11008>
   2236c:	movw	r0, #34324	; 0x8614
   22370:	movt	r0, #3
   22374:	movw	r1, #30584	; 0x7778
   22378:	movt	r1, #3
   2237c:	movw	r2, #945	; 0x3b1
   22380:	movw	r3, #34253	; 0x85cd
   22384:	movt	r3, #3
   22388:	bl	11384 <__assert_fail@plt>
   2238c:	b	22390 <__assert_fail@plt+0x1100c>
   22390:	ldr	r0, [sp, #20]
   22394:	str	r0, [sp, #12]
   22398:	movw	r0, #0
   2239c:	str	r0, [sp, #8]
   223a0:	movw	r0, #8
   223a4:	str	r0, [sp, #4]
   223a8:	ldr	r0, [sp, #4]
   223ac:	movw	r1, #32
   223b0:	cmp	r1, r0
   223b4:	bls	223f0 <__assert_fail@plt+0x1106c>
   223b8:	b	223bc <__assert_fail@plt+0x11038>
   223bc:	ldr	r0, [sp, #12]
   223c0:	and	r0, r0, #-16777216	; 0xff000000
   223c4:	cmp	r0, #0
   223c8:	bne	223ec <__assert_fail@plt+0x11068>
   223cc:	ldr	r0, [sp, #4]
   223d0:	ldr	r1, [sp, #12]
   223d4:	lsl	r0, r1, r0
   223d8:	str	r0, [sp, #12]
   223dc:	ldr	r0, [sp, #8]
   223e0:	add	r0, r0, #8
   223e4:	str	r0, [sp, #8]
   223e8:	b	223bc <__assert_fail@plt+0x11038>
   223ec:	b	223f0 <__assert_fail@plt+0x1106c>
   223f0:	b	223f4 <__assert_fail@plt+0x11070>
   223f4:	ldr	r0, [sp, #12]
   223f8:	and	r0, r0, #-2147483648	; 0x80000000
   223fc:	cmp	r0, #0
   22400:	bne	22420 <__assert_fail@plt+0x1109c>
   22404:	ldr	r0, [sp, #12]
   22408:	lsl	r0, r0, #1
   2240c:	str	r0, [sp, #12]
   22410:	ldr	r0, [sp, #8]
   22414:	add	r0, r0, #1
   22418:	str	r0, [sp, #8]
   2241c:	b	223f4 <__assert_fail@plt+0x11070>
   22420:	ldr	r0, [sp, #8]
   22424:	str	r0, [fp, #-16]
   22428:	ldr	r0, [fp, #-16]
   2242c:	ldr	r1, [fp, #-4]
   22430:	str	r0, [r1]
   22434:	ldr	r0, [fp, #-16]
   22438:	cmp	r0, #0
   2243c:	bls	22494 <__assert_fail@plt+0x11110>
   22440:	ldr	r0, [sp, #20]
   22444:	ldr	r1, [fp, #-16]
   22448:	lsl	r0, r0, r1
   2244c:	ldr	r2, [sp, #16]
   22450:	rsb	r1, r1, #32
   22454:	orr	r0, r0, r2, lsr r1
   22458:	str	r0, [sp, #20]
   2245c:	ldr	r0, [sp, #16]
   22460:	ldr	r1, [fp, #-16]
   22464:	lsl	r0, r0, r1
   22468:	ldr	r1, [fp, #-8]
   2246c:	ldr	r2, [fp, #-12]
   22470:	sub	r2, r2, #3
   22474:	add	r1, r1, r2, lsl #2
   22478:	ldr	r1, [r1]
   2247c:	ldr	r2, [fp, #-16]
   22480:	movw	r3, #32
   22484:	sub	r2, r3, r2
   22488:	lsr	r1, r1, r2
   2248c:	orr	r0, r0, r1
   22490:	str	r0, [sp, #16]
   22494:	ldr	r0, [sp, #20]
   22498:	ldr	r1, [fp, #-4]
   2249c:	str	r0, [r1, #4]
   224a0:	ldr	r0, [sp, #16]
   224a4:	ldr	r1, [fp, #-4]
   224a8:	str	r0, [r1, #8]
   224ac:	ldr	r0, [sp, #20]
   224b0:	ldr	r1, [sp, #16]
   224b4:	bl	1c9a0 <__assert_fail@plt+0xb61c>
   224b8:	ldr	r1, [fp, #-4]
   224bc:	str	r0, [r1, #12]
   224c0:	b	224c4 <__assert_fail@plt+0x11140>
   224c4:	mov	sp, fp
   224c8:	pop	{fp, pc}
   224cc:	push	{r4, sl, fp, lr}
   224d0:	add	fp, sp, #8
   224d4:	sub	sp, sp, #48	; 0x30
   224d8:	ldr	ip, [fp, #12]
   224dc:	ldr	lr, [fp, #8]
   224e0:	str	r0, [fp, #-12]
   224e4:	str	r1, [fp, #-16]
   224e8:	str	r2, [fp, #-20]	; 0xffffffec
   224ec:	str	r3, [fp, #-24]	; 0xffffffe8
   224f0:	ldr	r0, [fp, #8]
   224f4:	cmp	r0, #0
   224f8:	str	lr, [sp, #16]
   224fc:	str	ip, [sp, #12]
   22500:	ble	22508 <__assert_fail@plt+0x11184>
   22504:	b	22528 <__assert_fail@plt+0x111a4>
   22508:	movw	r0, #33964	; 0x84ac
   2250c:	movt	r0, #3
   22510:	movw	r1, #30584	; 0x7778
   22514:	movt	r1, #3
   22518:	movw	r2, #1113	; 0x459
   2251c:	movw	r3, #34404	; 0x8664
   22520:	movt	r3, #3
   22524:	bl	11384 <__assert_fail@plt>
   22528:	ldr	r0, [fp, #-20]	; 0xffffffec
   2252c:	ldr	r1, [fp, #8]
   22530:	cmp	r0, r1
   22534:	blt	2253c <__assert_fail@plt+0x111b8>
   22538:	b	2255c <__assert_fail@plt+0x111d8>
   2253c:	movw	r0, #34036	; 0x84f4
   22540:	movt	r0, #3
   22544:	movw	r1, #30584	; 0x7778
   22548:	movt	r1, #3
   2254c:	movw	r2, #1114	; 0x45a
   22550:	movw	r3, #34404	; 0x8664
   22554:	movt	r3, #3
   22558:	bl	11384 <__assert_fail@plt>
   2255c:	ldr	r0, [fp, #8]
   22560:	cmp	r0, #1
   22564:	bne	22588 <__assert_fail@plt+0x11204>
   22568:	ldr	r0, [fp, #-12]
   2256c:	ldr	r1, [fp, #-16]
   22570:	ldr	r2, [fp, #-20]	; 0xffffffec
   22574:	ldr	r3, [fp, #12]
   22578:	bl	25418 <__assert_fail@plt+0x14094>
   2257c:	ldr	r1, [fp, #-16]
   22580:	str	r0, [r1]
   22584:	b	22748 <__assert_fail@plt+0x113c4>
   22588:	ldr	r0, [fp, #8]
   2258c:	cmp	r0, #2
   22590:	bne	225ac <__assert_fail@plt+0x11228>
   22594:	ldr	r0, [fp, #-12]
   22598:	ldr	r1, [fp, #-16]
   2259c:	ldr	r2, [fp, #-20]	; 0xffffffec
   225a0:	ldr	r3, [fp, #12]
   225a4:	bl	26f6c <__assert_fail@plt+0x15be8>
   225a8:	b	22744 <__assert_fail@plt+0x113c0>
   225ac:	ldr	r0, [fp, #12]
   225b0:	ldr	r0, [r0, #4]
   225b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   225b8:	ldr	r2, [fp, #8]
   225bc:	sub	r2, r2, #1
   225c0:	add	r1, r1, r2, lsl #2
   225c4:	ldr	r1, [r1]
   225c8:	cmp	r0, r1
   225cc:	bne	225d4 <__assert_fail@plt+0x11250>
   225d0:	b	225f4 <__assert_fail@plt+0x11270>
   225d4:	movw	r0, #34508	; 0x86cc
   225d8:	movt	r0, #3
   225dc:	movw	r1, #30584	; 0x7778
   225e0:	movt	r1, #3
   225e4:	movw	r2, #1125	; 0x465
   225e8:	movw	r3, #34404	; 0x8664
   225ec:	movt	r3, #3
   225f0:	bl	11384 <__assert_fail@plt>
   225f4:	ldr	r0, [fp, #12]
   225f8:	ldr	r0, [r0, #8]
   225fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22600:	ldr	r2, [fp, #8]
   22604:	sub	r2, r2, #2
   22608:	add	r1, r1, r2, lsl #2
   2260c:	ldr	r1, [r1]
   22610:	cmp	r0, r1
   22614:	bne	2261c <__assert_fail@plt+0x11298>
   22618:	b	2263c <__assert_fail@plt+0x112b8>
   2261c:	movw	r0, #34528	; 0x86e0
   22620:	movt	r0, #3
   22624:	movw	r1, #30584	; 0x7778
   22628:	movt	r1, #3
   2262c:	movw	r2, #1126	; 0x466
   22630:	movw	r3, #34404	; 0x8664
   22634:	movt	r3, #3
   22638:	bl	11384 <__assert_fail@plt>
   2263c:	ldr	r0, [fp, #12]
   22640:	ldr	r0, [r0, #4]
   22644:	and	r0, r0, #-2147483648	; 0x80000000
   22648:	cmp	r0, #0
   2264c:	beq	22654 <__assert_fail@plt+0x112d0>
   22650:	b	22674 <__assert_fail@plt+0x112f0>
   22654:	movw	r0, #34548	; 0x86f4
   22658:	movt	r0, #3
   2265c:	movw	r1, #30584	; 0x7778
   22660:	movt	r1, #3
   22664:	movw	r2, #1127	; 0x467
   22668:	movw	r3, #34404	; 0x8664
   2266c:	movt	r3, #3
   22670:	bl	11384 <__assert_fail@plt>
   22674:	ldr	r0, [fp, #12]
   22678:	ldr	r0, [r0]
   2267c:	str	r0, [sp, #24]
   22680:	ldr	r0, [sp, #24]
   22684:	cmp	r0, #0
   22688:	bls	226a8 <__assert_fail@plt+0x11324>
   2268c:	ldr	r0, [fp, #-16]
   22690:	ldr	r1, [fp, #-16]
   22694:	ldr	r2, [fp, #-20]	; 0xffffffec
   22698:	ldr	r3, [sp, #24]
   2269c:	bl	1c278 <__assert_fail@plt+0xaef4>
   226a0:	str	r0, [sp, #28]
   226a4:	b	226b0 <__assert_fail@plt+0x1132c>
   226a8:	movw	r0, #0
   226ac:	str	r0, [sp, #28]
   226b0:	ldr	r0, [fp, #-12]
   226b4:	ldr	r1, [fp, #-16]
   226b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   226bc:	ldr	r3, [sp, #28]
   226c0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   226c4:	ldr	lr, [fp, #8]
   226c8:	ldr	r4, [fp, #12]
   226cc:	ldr	r4, [r4, #12]
   226d0:	str	ip, [sp]
   226d4:	str	lr, [sp, #4]
   226d8:	str	r4, [sp, #8]
   226dc:	bl	27548 <__assert_fail@plt+0x161c4>
   226e0:	ldr	r0, [sp, #24]
   226e4:	cmp	r0, #0
   226e8:	bls	22740 <__assert_fail@plt+0x113bc>
   226ec:	b	226f0 <__assert_fail@plt+0x1136c>
   226f0:	ldr	r0, [fp, #-16]
   226f4:	ldr	r1, [fp, #-16]
   226f8:	ldr	r2, [fp, #8]
   226fc:	ldr	r3, [sp, #24]
   22700:	bl	1c428 <__assert_fail@plt+0xb0a4>
   22704:	str	r0, [sp, #20]
   22708:	ldr	r0, [sp, #20]
   2270c:	cmp	r0, #0
   22710:	bne	22718 <__assert_fail@plt+0x11394>
   22714:	b	22738 <__assert_fail@plt+0x113b4>
   22718:	movw	r0, #31565	; 0x7b4d
   2271c:	movt	r0, #3
   22720:	movw	r1, #30584	; 0x7778
   22724:	movt	r1, #3
   22728:	movw	r2, #1138	; 0x472
   2272c:	movw	r3, #34404	; 0x8664
   22730:	movt	r3, #3
   22734:	bl	11384 <__assert_fail@plt>
   22738:	b	2273c <__assert_fail@plt+0x113b8>
   2273c:	b	22740 <__assert_fail@plt+0x113bc>
   22740:	b	22744 <__assert_fail@plt+0x113c0>
   22744:	b	22748 <__assert_fail@plt+0x113c4>
   22748:	sub	sp, fp, #8
   2274c:	pop	{r4, sl, fp, pc}
   22750:	push	{fp, lr}
   22754:	mov	fp, sp
   22758:	sub	sp, sp, #32
   2275c:	add	ip, sp, #4
   22760:	str	r0, [fp, #-4]
   22764:	str	r1, [fp, #-8]
   22768:	str	r2, [fp, #-12]
   2276c:	str	r3, [sp, #16]
   22770:	ldr	r1, [fp, #-12]
   22774:	mov	r0, ip
   22778:	bl	1db7c <__assert_fail@plt+0xc7f8>
   2277c:	add	r2, sp, #4
   22780:	ldr	r0, [fp, #-4]
   22784:	ldr	r1, [fp, #-8]
   22788:	ldr	r3, [sp, #16]
   2278c:	bl	21e30 <__assert_fail@plt+0x10aac>
   22790:	add	r0, sp, #4
   22794:	bl	1d7ec <__assert_fail@plt+0xc468>
   22798:	mov	sp, fp
   2279c:	pop	{fp, pc}
   227a0:	push	{fp, lr}
   227a4:	mov	fp, sp
   227a8:	sub	sp, sp, #96	; 0x60
   227ac:	str	r0, [fp, #-4]
   227b0:	str	r1, [fp, #-8]
   227b4:	str	r2, [fp, #-12]
   227b8:	str	r3, [fp, #-16]
   227bc:	ldr	r0, [fp, #-12]
   227c0:	ldr	r0, [r0, #4]
   227c4:	cmp	r0, #0
   227c8:	movw	r0, #0
   227cc:	movlt	r0, #1
   227d0:	and	r0, r0, #1
   227d4:	str	r0, [fp, #-20]	; 0xffffffec
   227d8:	ldr	r0, [fp, #-16]
   227dc:	mvn	r1, #0
   227e0:	eor	r0, r0, r1
   227e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   227e8:	and	r0, r0, r1
   227ec:	cmp	r0, #0
   227f0:	beq	22800 <__assert_fail@plt+0x1147c>
   227f4:	movw	r0, #32042	; 0x7d2a
   227f8:	movt	r0, #3
   227fc:	bl	2226c <__assert_fail@plt+0x10ee8>
   22800:	ldr	r0, [fp, #-16]
   22804:	cmp	r0, #0
   22808:	bne	22818 <__assert_fail@plt+0x11494>
   2280c:	movw	r0, #32090	; 0x7d5a
   22810:	movt	r0, #3
   22814:	bl	2226c <__assert_fail@plt+0x10ee8>
   22818:	ldr	r0, [fp, #-12]
   2281c:	movw	r1, #1
   22820:	bl	1de68 <__assert_fail@plt+0xcae4>
   22824:	cmp	r0, #0
   22828:	bgt	22868 <__assert_fail@plt+0x114e4>
   2282c:	ldr	r0, [fp, #-4]
   22830:	movw	r1, #0
   22834:	cmp	r0, r1
   22838:	beq	22848 <__assert_fail@plt+0x114c4>
   2283c:	ldr	r0, [fp, #-4]
   22840:	ldr	r1, [fp, #-12]
   22844:	bl	1da84 <__assert_fail@plt+0xc700>
   22848:	ldr	r0, [fp, #-8]
   2284c:	movw	r1, #0
   22850:	cmp	r0, r1
   22854:	beq	22864 <__assert_fail@plt+0x114e0>
   22858:	ldr	r0, [fp, #-8]
   2285c:	movw	r1, #0
   22860:	str	r1, [r0, #4]
   22864:	b	22a30 <__assert_fail@plt+0x116ac>
   22868:	add	r0, sp, #48	; 0x30
   2286c:	bl	1d714 <__assert_fail@plt+0xc390>
   22870:	sub	r0, fp, #36	; 0x24
   22874:	bl	1d714 <__assert_fail@plt+0xc390>
   22878:	ldr	r0, [fp, #-12]
   2287c:	movw	r1, #2
   22880:	bl	22a38 <__assert_fail@plt+0x116b4>
   22884:	sub	r1, fp, #36	; 0x24
   22888:	sub	r0, r0, #1
   2288c:	ldr	lr, [fp, #-16]
   22890:	udiv	r0, r0, lr
   22894:	add	r0, r0, #1
   22898:	str	r0, [fp, #-24]	; 0xffffffe8
   2289c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   228a0:	str	r0, [sp, #32]
   228a4:	mov	r0, r1
   228a8:	ldr	r1, [sp, #32]
   228ac:	bl	21aa4 <__assert_fail@plt+0x10720>
   228b0:	ldr	r0, [fp, #-16]
   228b4:	cmp	r0, #2
   228b8:	bne	2291c <__assert_fail@plt+0x11598>
   228bc:	b	228c0 <__assert_fail@plt+0x1153c>
   228c0:	sub	r1, fp, #36	; 0x24
   228c4:	add	r0, sp, #48	; 0x30
   228c8:	bl	1ee64 <__assert_fail@plt+0xdae0>
   228cc:	add	r2, sp, #48	; 0x30
   228d0:	sub	r0, fp, #36	; 0x24
   228d4:	ldr	r1, [fp, #-12]
   228d8:	bl	20050 <__assert_fail@plt+0xeccc>
   228dc:	add	r2, sp, #48	; 0x30
   228e0:	sub	r0, fp, #36	; 0x24
   228e4:	str	r0, [sp, #28]
   228e8:	ldr	r1, [sp, #28]
   228ec:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   228f0:	sub	r0, fp, #36	; 0x24
   228f4:	str	r0, [sp, #24]
   228f8:	ldr	r1, [sp, #24]
   228fc:	movw	r2, #1
   22900:	bl	20478 <__assert_fail@plt+0xf0f4>
   22904:	add	r1, sp, #48	; 0x30
   22908:	sub	r0, fp, #36	; 0x24
   2290c:	bl	1ec84 <__assert_fail@plt+0xd900>
   22910:	cmp	r0, #0
   22914:	blt	228c0 <__assert_fail@plt+0x1153c>
   22918:	b	229d4 <__assert_fail@plt+0x11650>
   2291c:	add	r0, sp, #36	; 0x24
   22920:	bl	1d714 <__assert_fail@plt+0xc390>
   22924:	ldr	r0, [fp, #-20]	; 0xffffffec
   22928:	cmp	r0, #0
   2292c:	beq	22940 <__assert_fail@plt+0x115bc>
   22930:	sub	r0, fp, #36	; 0x24
   22934:	str	r0, [sp, #20]
   22938:	ldr	r1, [sp, #20]
   2293c:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   22940:	b	22944 <__assert_fail@plt+0x115c0>
   22944:	sub	r1, fp, #36	; 0x24
   22948:	add	r0, sp, #48	; 0x30
   2294c:	bl	1ee64 <__assert_fail@plt+0xdae0>
   22950:	add	r1, sp, #48	; 0x30
   22954:	sub	r0, fp, #36	; 0x24
   22958:	ldr	lr, [fp, #-16]
   2295c:	sub	r2, lr, #1
   22960:	bl	21d44 <__assert_fail@plt+0x109c0>
   22964:	sub	r0, fp, #36	; 0x24
   22968:	ldr	r1, [fp, #-12]
   2296c:	str	r0, [sp, #16]
   22970:	ldr	r2, [sp, #16]
   22974:	bl	20050 <__assert_fail@plt+0xeccc>
   22978:	add	r1, sp, #48	; 0x30
   2297c:	add	r0, sp, #36	; 0x24
   22980:	ldr	r2, [fp, #-16]
   22984:	sub	r2, r2, #1
   22988:	bl	1f514 <__assert_fail@plt+0xe190>
   2298c:	add	r2, sp, #36	; 0x24
   22990:	sub	r0, fp, #36	; 0x24
   22994:	str	r0, [sp, #12]
   22998:	ldr	r1, [sp, #12]
   2299c:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   229a0:	sub	r0, fp, #36	; 0x24
   229a4:	ldr	r2, [fp, #-16]
   229a8:	str	r0, [sp, #8]
   229ac:	ldr	r1, [sp, #8]
   229b0:	bl	20be0 <__assert_fail@plt+0xf85c>
   229b4:	str	r0, [sp, #4]
   229b8:	add	r1, sp, #48	; 0x30
   229bc:	sub	r0, fp, #36	; 0x24
   229c0:	bl	1ec84 <__assert_fail@plt+0xd900>
   229c4:	cmp	r0, #0
   229c8:	blt	22944 <__assert_fail@plt+0x115c0>
   229cc:	add	r0, sp, #36	; 0x24
   229d0:	bl	1d7ec <__assert_fail@plt+0xc468>
   229d4:	ldr	r0, [fp, #-8]
   229d8:	movw	r1, #0
   229dc:	cmp	r0, r1
   229e0:	beq	22a04 <__assert_fail@plt+0x11680>
   229e4:	add	r1, sp, #48	; 0x30
   229e8:	sub	r0, fp, #36	; 0x24
   229ec:	ldr	r2, [fp, #-16]
   229f0:	bl	21d44 <__assert_fail@plt+0x109c0>
   229f4:	sub	r2, fp, #36	; 0x24
   229f8:	ldr	r0, [fp, #-8]
   229fc:	ldr	r1, [fp, #-12]
   22a00:	bl	1f408 <__assert_fail@plt+0xe084>
   22a04:	ldr	r0, [fp, #-4]
   22a08:	movw	r1, #0
   22a0c:	cmp	r0, r1
   22a10:	beq	22a20 <__assert_fail@plt+0x1169c>
   22a14:	add	r1, sp, #48	; 0x30
   22a18:	ldr	r0, [fp, #-4]
   22a1c:	bl	1ee64 <__assert_fail@plt+0xdae0>
   22a20:	add	r0, sp, #48	; 0x30
   22a24:	bl	1d7ec <__assert_fail@plt+0xc468>
   22a28:	sub	r0, fp, #36	; 0x24
   22a2c:	bl	1d7ec <__assert_fail@plt+0xc468>
   22a30:	mov	sp, fp
   22a34:	pop	{fp, pc}
   22a38:	push	{fp, lr}
   22a3c:	mov	fp, sp
   22a40:	sub	sp, sp, #72	; 0x48
   22a44:	str	r0, [fp, #-8]
   22a48:	str	r1, [fp, #-12]
   22a4c:	ldr	r0, [fp, #-12]
   22a50:	cmp	r0, #2
   22a54:	blt	22a5c <__assert_fail@plt+0x116d8>
   22a58:	b	22a7c <__assert_fail@plt+0x116f8>
   22a5c:	movw	r0, #32636	; 0x7f7c
   22a60:	movt	r0, #3
   22a64:	movw	r1, #30584	; 0x7778
   22a68:	movt	r1, #3
   22a6c:	movw	r2, #4191	; 0x105f
   22a70:	movw	r3, #32646	; 0x7f86
   22a74:	movt	r3, #3
   22a78:	bl	11384 <__assert_fail@plt>
   22a7c:	ldr	r0, [fp, #-12]
   22a80:	cmp	r0, #62	; 0x3e
   22a84:	bgt	22a8c <__assert_fail@plt+0x11708>
   22a88:	b	22aac <__assert_fail@plt+0x11728>
   22a8c:	movw	r0, #32695	; 0x7fb7
   22a90:	movt	r0, #3
   22a94:	movw	r1, #30584	; 0x7778
   22a98:	movt	r1, #3
   22a9c:	movw	r2, #4192	; 0x1060
   22aa0:	movw	r3, #32646	; 0x7f86
   22aa4:	movt	r3, #3
   22aa8:	bl	11384 <__assert_fail@plt>
   22aac:	ldr	r0, [fp, #-8]
   22ab0:	ldr	r0, [r0, #4]
   22ab4:	cmp	r0, #0
   22ab8:	blt	22acc <__assert_fail@plt+0x11748>
   22abc:	ldr	r0, [fp, #-8]
   22ac0:	ldr	r0, [r0, #4]
   22ac4:	str	r0, [sp, #16]
   22ac8:	b	22ae0 <__assert_fail@plt+0x1175c>
   22acc:	ldr	r0, [fp, #-8]
   22ad0:	ldr	r0, [r0, #4]
   22ad4:	movw	r1, #0
   22ad8:	sub	r0, r1, r0
   22adc:	str	r0, [sp, #16]
   22ae0:	ldr	r0, [sp, #16]
   22ae4:	str	r0, [fp, #-16]
   22ae8:	ldr	r0, [fp, #-16]
   22aec:	cmp	r0, #0
   22af0:	bne	22b00 <__assert_fail@plt+0x1177c>
   22af4:	movw	r0, #1
   22af8:	str	r0, [fp, #-4]
   22afc:	b	22ce8 <__assert_fail@plt+0x11964>
   22b00:	ldr	r0, [fp, #-8]
   22b04:	ldr	r0, [r0, #8]
   22b08:	str	r0, [fp, #-24]	; 0xffffffe8
   22b0c:	ldr	r0, [fp, #-16]
   22b10:	sub	r0, r0, #1
   22b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22b18:	ldr	r1, [r1, r0, lsl #2]
   22b1c:	str	r0, [sp, #12]
   22b20:	mov	r0, r1
   22b24:	bl	25208 <__assert_fail@plt+0x13e84>
   22b28:	ldr	r1, [sp, #12]
   22b2c:	add	r0, r0, r1, lsl #5
   22b30:	str	r0, [fp, #-32]	; 0xffffffe0
   22b34:	ldr	r0, [fp, #-12]
   22b38:	sub	r0, r0, #2
   22b3c:	cmp	r0, #30
   22b40:	str	r0, [sp, #8]
   22b44:	bhi	22c38 <__assert_fail@plt+0x118b4>
   22b48:	add	r0, pc, #8
   22b4c:	ldr	r1, [sp, #8]
   22b50:	ldr	r0, [r0, r1, lsl #2]
   22b54:	mov	pc, r0
   22b58:	ldrdeq	r2, [r2], -r4
   22b5c:	andeq	r2, r2, r8, lsr ip
   22b60:	andeq	r2, r2, r0, ror #23
   22b64:	andeq	r2, r2, r8, lsr ip
   22b68:	andeq	r2, r2, r8, lsr ip
   22b6c:	andeq	r2, r2, r8, lsr ip
   22b70:	strdeq	r2, [r2], -r4
   22b74:	andeq	r2, r2, r8, lsr ip
   22b78:	andeq	r2, r2, r8, lsr ip
   22b7c:	andeq	r2, r2, r8, lsr ip
   22b80:	andeq	r2, r2, r8, lsr ip
   22b84:	andeq	r2, r2, r8, lsr ip
   22b88:	andeq	r2, r2, r8, lsr ip
   22b8c:	andeq	r2, r2, r8, lsr ip
   22b90:	andeq	r2, r2, ip, lsl #24
   22b94:	andeq	r2, r2, r8, lsr ip
   22b98:	andeq	r2, r2, r8, lsr ip
   22b9c:	andeq	r2, r2, r8, lsr ip
   22ba0:	andeq	r2, r2, r8, lsr ip
   22ba4:	andeq	r2, r2, r8, lsr ip
   22ba8:	andeq	r2, r2, r8, lsr ip
   22bac:	andeq	r2, r2, r8, lsr ip
   22bb0:	andeq	r2, r2, r8, lsr ip
   22bb4:	andeq	r2, r2, r8, lsr ip
   22bb8:	andeq	r2, r2, r8, lsr ip
   22bbc:	andeq	r2, r2, r8, lsr ip
   22bc0:	andeq	r2, r2, r8, lsr ip
   22bc4:	andeq	r2, r2, r8, lsr ip
   22bc8:	andeq	r2, r2, r8, lsr ip
   22bcc:	andeq	r2, r2, r8, lsr ip
   22bd0:	andeq	r2, r2, r0, lsr #24
   22bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22bd8:	str	r0, [fp, #-4]
   22bdc:	b	22ce8 <__assert_fail@plt+0x11964>
   22be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22be4:	add	r0, r0, #1
   22be8:	lsr	r0, r0, #1
   22bec:	str	r0, [fp, #-4]
   22bf0:	b	22ce8 <__assert_fail@plt+0x11964>
   22bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22bf8:	add	r0, r0, #2
   22bfc:	movw	r1, #3
   22c00:	udiv	r0, r0, r1
   22c04:	str	r0, [fp, #-4]
   22c08:	b	22ce8 <__assert_fail@plt+0x11964>
   22c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22c10:	add	r0, r0, #3
   22c14:	lsr	r0, r0, #2
   22c18:	str	r0, [fp, #-4]
   22c1c:	b	22ce8 <__assert_fail@plt+0x11964>
   22c20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22c24:	add	r0, r0, #4
   22c28:	movw	r1, #5
   22c2c:	udiv	r0, r0, r1
   22c30:	str	r0, [fp, #-4]
   22c34:	b	22ce8 <__assert_fail@plt+0x11964>
   22c38:	ldr	r0, [fp, #-16]
   22c3c:	bl	1d7b0 <__assert_fail@plt+0xc42c>
   22c40:	str	r0, [fp, #-28]	; 0xffffffe4
   22c44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22c48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22c4c:	ldr	r2, [fp, #-16]
   22c50:	bl	1b370 <__assert_fail@plt+0x9fec>
   22c54:	ldr	r1, [fp, #-12]
   22c58:	add	r0, sp, #24
   22c5c:	bl	252f8 <__assert_fail@plt+0x13f74>
   22c60:	ldr	r0, [fp, #-16]
   22c64:	str	r0, [fp, #-20]	; 0xffffffec
   22c68:	movw	r0, #0
   22c6c:	str	r0, [sp, #20]
   22c70:	ldr	r0, [sp, #20]
   22c74:	add	r0, r0, #1
   22c78:	str	r0, [sp, #20]
   22c7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22c80:	ldr	r2, [fp, #-20]	; 0xffffffec
   22c84:	add	r3, sp, #24
   22c88:	str	r0, [sp, #4]
   22c8c:	ldr	r1, [sp, #4]
   22c90:	bl	25418 <__assert_fail@plt+0x14094>
   22c94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22c98:	ldr	r2, [fp, #-20]	; 0xffffffec
   22c9c:	sub	r2, r2, #1
   22ca0:	add	r1, r1, r2, lsl #2
   22ca4:	ldr	r1, [r1]
   22ca8:	cmp	r1, #0
   22cac:	movw	r1, #0
   22cb0:	moveq	r1, #1
   22cb4:	and	r1, r1, #1
   22cb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   22cbc:	sub	r1, r2, r1
   22cc0:	str	r1, [fp, #-20]	; 0xffffffec
   22cc4:	str	r0, [sp]
   22cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   22ccc:	cmp	r0, #0
   22cd0:	bgt	22c70 <__assert_fail@plt+0x118ec>
   22cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22cd8:	ldr	r1, [fp, #-16]
   22cdc:	bl	1d828 <__assert_fail@plt+0xc4a4>
   22ce0:	ldr	r0, [sp, #20]
   22ce4:	str	r0, [fp, #-4]
   22ce8:	ldr	r0, [fp, #-4]
   22cec:	mov	sp, fp
   22cf0:	pop	{fp, pc}
   22cf4:	push	{fp, lr}
   22cf8:	mov	fp, sp
   22cfc:	sub	sp, sp, #32
   22d00:	add	r3, sp, #4
   22d04:	str	r0, [fp, #-4]
   22d08:	str	r1, [fp, #-8]
   22d0c:	str	r2, [fp, #-12]
   22d10:	mov	r0, r3
   22d14:	bl	1d714 <__assert_fail@plt+0xc390>
   22d18:	add	r1, sp, #4
   22d1c:	ldr	r0, [fp, #-4]
   22d20:	ldr	r2, [fp, #-8]
   22d24:	ldr	r3, [fp, #-12]
   22d28:	bl	227a0 <__assert_fail@plt+0x1141c>
   22d2c:	add	r0, sp, #4
   22d30:	ldr	r1, [sp, #8]
   22d34:	cmp	r1, #0
   22d38:	movw	r1, #0
   22d3c:	moveq	r1, #1
   22d40:	and	r1, r1, #1
   22d44:	str	r1, [sp, #16]
   22d48:	bl	1d7ec <__assert_fail@plt+0xc468>
   22d4c:	ldr	r0, [sp, #16]
   22d50:	mov	sp, fp
   22d54:	pop	{fp, pc}
   22d58:	push	{fp, lr}
   22d5c:	mov	fp, sp
   22d60:	sub	sp, sp, #16
   22d64:	str	r0, [fp, #-4]
   22d68:	str	r1, [sp, #8]
   22d6c:	str	r2, [sp, #4]
   22d70:	ldr	r0, [fp, #-4]
   22d74:	ldr	r1, [sp, #8]
   22d78:	ldr	r2, [sp, #4]
   22d7c:	movw	r3, #2
   22d80:	bl	227a0 <__assert_fail@plt+0x1141c>
   22d84:	mov	sp, fp
   22d88:	pop	{fp, pc}
   22d8c:	push	{fp, lr}
   22d90:	mov	fp, sp
   22d94:	sub	sp, sp, #8
   22d98:	str	r0, [sp, #4]
   22d9c:	str	r1, [sp]
   22da0:	ldr	r0, [sp, #4]
   22da4:	ldr	r2, [sp]
   22da8:	movw	r1, #0
   22dac:	movw	r3, #2
   22db0:	bl	227a0 <__assert_fail@plt+0x1141c>
   22db4:	mov	sp, fp
   22db8:	pop	{fp, pc}
   22dbc:	push	{fp, lr}
   22dc0:	mov	fp, sp
   22dc4:	sub	sp, sp, #8
   22dc8:	str	r0, [sp]
   22dcc:	ldr	r0, [sp]
   22dd0:	ldr	r0, [r0, #4]
   22dd4:	cmp	r0, #0
   22dd8:	bgt	22dfc <__assert_fail@plt+0x11a78>
   22ddc:	ldr	r0, [sp]
   22de0:	ldr	r0, [r0, #4]
   22de4:	cmp	r0, #0
   22de8:	movw	r0, #0
   22dec:	moveq	r0, #1
   22df0:	and	r0, r0, #1
   22df4:	str	r0, [sp, #4]
   22df8:	b	22e10 <__assert_fail@plt+0x11a8c>
   22dfc:	ldr	r1, [sp]
   22e00:	movw	r0, #0
   22e04:	movw	r2, #2
   22e08:	bl	22cf4 <__assert_fail@plt+0x11970>
   22e0c:	str	r0, [sp, #4]
   22e10:	ldr	r0, [sp, #4]
   22e14:	mov	sp, fp
   22e18:	pop	{fp, pc}
   22e1c:	push	{fp, lr}
   22e20:	mov	fp, sp
   22e24:	sub	sp, sp, #24
   22e28:	str	r0, [fp, #-4]
   22e2c:	str	r1, [fp, #-8]
   22e30:	ldr	r0, [fp, #-8]
   22e34:	cmp	r0, #0
   22e38:	ble	22e40 <__assert_fail@plt+0x11abc>
   22e3c:	b	22e60 <__assert_fail@plt+0x11adc>
   22e40:	movw	r0, #33965	; 0x84ad
   22e44:	movt	r0, #3
   22e48:	movw	r1, #30584	; 0x7778
   22e4c:	movt	r1, #3
   22e50:	movw	r2, #3302	; 0xce6
   22e54:	movw	r3, #32116	; 0x7d74
   22e58:	movt	r3, #3
   22e5c:	bl	11384 <__assert_fail@plt>
   22e60:	ldr	r0, [fp, #-4]
   22e64:	ldr	r1, [fp, #-8]
   22e68:	sub	r1, r1, #1
   22e6c:	add	r0, r0, r1, lsl #2
   22e70:	ldr	r0, [r0]
   22e74:	cmp	r0, #0
   22e78:	beq	22e80 <__assert_fail@plt+0x11afc>
   22e7c:	b	22ea0 <__assert_fail@plt+0x11b1c>
   22e80:	movw	r0, #32163	; 0x7da3
   22e84:	movt	r0, #3
   22e88:	movw	r1, #30584	; 0x7778
   22e8c:	movt	r1, #3
   22e90:	movw	r2, #3303	; 0xce7
   22e94:	movw	r3, #32116	; 0x7d74
   22e98:	movt	r3, #3
   22e9c:	bl	11384 <__assert_fail@plt>
   22ea0:	add	r0, sp, #4
   22ea4:	ldr	r1, [fp, #-4]
   22ea8:	ldr	r2, [fp, #-8]
   22eac:	bl	1e368 <__assert_fail@plt+0xcfe4>
   22eb0:	movw	r1, #0
   22eb4:	str	r0, [sp]
   22eb8:	mov	r0, r1
   22ebc:	ldr	r1, [sp]
   22ec0:	movw	r2, #2
   22ec4:	bl	22cf4 <__assert_fail@plt+0x11970>
   22ec8:	mov	sp, fp
   22ecc:	pop	{fp, pc}
   22ed0:	push	{fp, lr}
   22ed4:	mov	fp, sp
   22ed8:	sub	sp, sp, #72	; 0x48
   22edc:	str	r0, [fp, #-4]
   22ee0:	str	r1, [fp, #-8]
   22ee4:	str	r2, [fp, #-12]
   22ee8:	str	r3, [fp, #-16]
   22eec:	ldr	r0, [fp, #-16]
   22ef0:	cmp	r0, #0
   22ef4:	ble	22efc <__assert_fail@plt+0x11b78>
   22ef8:	b	22f1c <__assert_fail@plt+0x11b98>
   22efc:	movw	r0, #33965	; 0x84ad
   22f00:	movt	r0, #3
   22f04:	movw	r1, #30584	; 0x7778
   22f08:	movt	r1, #3
   22f0c:	movw	r2, #3313	; 0xcf1
   22f10:	movw	r3, #32176	; 0x7db0
   22f14:	movt	r3, #3
   22f18:	bl	11384 <__assert_fail@plt>
   22f1c:	ldr	r0, [fp, #-12]
   22f20:	ldr	r1, [fp, #-16]
   22f24:	sub	r1, r1, #1
   22f28:	add	r0, r0, r1, lsl #2
   22f2c:	ldr	r0, [r0]
   22f30:	cmp	r0, #0
   22f34:	beq	22f3c <__assert_fail@plt+0x11bb8>
   22f38:	b	22f5c <__assert_fail@plt+0x11bd8>
   22f3c:	movw	r0, #32163	; 0x7da3
   22f40:	movt	r0, #3
   22f44:	movw	r1, #30584	; 0x7778
   22f48:	movt	r1, #3
   22f4c:	movw	r2, #3314	; 0xcf2
   22f50:	movw	r3, #32176	; 0x7db0
   22f54:	movt	r3, #3
   22f58:	bl	11384 <__assert_fail@plt>
   22f5c:	add	r0, sp, #32
   22f60:	bl	1d714 <__assert_fail@plt+0xc390>
   22f64:	sub	r0, fp, #28
   22f68:	bl	1d714 <__assert_fail@plt+0xc390>
   22f6c:	add	r0, sp, #20
   22f70:	add	r1, sp, #32
   22f74:	sub	lr, fp, #28
   22f78:	ldr	r2, [fp, #-12]
   22f7c:	ldr	r3, [fp, #-16]
   22f80:	str	r1, [sp, #12]
   22f84:	mov	r1, r2
   22f88:	mov	r2, r3
   22f8c:	str	lr, [sp, #8]
   22f90:	bl	1e368 <__assert_fail@plt+0xcfe4>
   22f94:	ldr	r1, [sp, #8]
   22f98:	str	r0, [sp, #4]
   22f9c:	mov	r0, r1
   22fa0:	ldr	r1, [sp, #12]
   22fa4:	ldr	r2, [sp, #4]
   22fa8:	movw	r3, #2
   22fac:	bl	227a0 <__assert_fail@plt+0x1141c>
   22fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22fb4:	ldr	r1, [fp, #-16]
   22fb8:	add	r1, r1, #1
   22fbc:	movw	r2, #2
   22fc0:	sdiv	r1, r1, r2
   22fc4:	cmp	r0, r1
   22fc8:	bne	22fd0 <__assert_fail@plt+0x11c4c>
   22fcc:	b	22ff0 <__assert_fail@plt+0x11c6c>
   22fd0:	movw	r0, #32236	; 0x7dec
   22fd4:	movt	r0, #3
   22fd8:	movw	r1, #30584	; 0x7778
   22fdc:	movt	r1, #3
   22fe0:	movw	r2, #3320	; 0xcf8
   22fe4:	movw	r3, #32176	; 0x7db0
   22fe8:	movt	r3, #3
   22fec:	bl	11384 <__assert_fail@plt>
   22ff0:	ldr	r0, [fp, #-4]
   22ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   22ff8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22ffc:	bl	1b3c8 <__assert_fail@plt+0xa044>
   23000:	sub	r0, fp, #28
   23004:	bl	1d7ec <__assert_fail@plt+0xc468>
   23008:	ldr	r0, [sp, #36]	; 0x24
   2300c:	str	r0, [sp, #16]
   23010:	ldr	r0, [fp, #-8]
   23014:	movw	r1, #0
   23018:	cmp	r0, r1
   2301c:	beq	23030 <__assert_fail@plt+0x11cac>
   23020:	ldr	r0, [fp, #-8]
   23024:	ldr	r1, [sp, #40]	; 0x28
   23028:	ldr	r2, [sp, #16]
   2302c:	bl	1b3c8 <__assert_fail@plt+0xa044>
   23030:	add	r0, sp, #32
   23034:	bl	1d7ec <__assert_fail@plt+0xc468>
   23038:	ldr	r0, [sp, #16]
   2303c:	mov	sp, fp
   23040:	pop	{fp, pc}
   23044:	push	{fp, lr}
   23048:	mov	fp, sp
   2304c:	sub	sp, sp, #16
   23050:	str	r0, [fp, #-4]
   23054:	str	r1, [sp, #8]
   23058:	str	r2, [sp, #4]
   2305c:	ldr	r0, [fp, #-4]
   23060:	ldr	r1, [sp, #8]
   23064:	ldr	r2, [sp, #8]
   23068:	cmp	r2, #0
   2306c:	movw	r2, #0
   23070:	moveq	r2, #1
   23074:	and	r2, r2, #1
   23078:	add	r1, r1, r2
   2307c:	bl	1d90c <__assert_fail@plt+0xc588>
   23080:	ldr	r0, [sp, #4]
   23084:	add	r0, r0, #1
   23088:	cmp	r0, #2
   2308c:	bcs	23094 <__assert_fail@plt+0x11d10>
   23090:	b	230cc <__assert_fail@plt+0x11d48>
   23094:	b	23098 <__assert_fail@plt+0x11d14>
   23098:	ldr	r0, [sp, #8]
   2309c:	ldr	r1, [sp, #4]
   230a0:	add	r1, r1, #1
   230a4:	cmp	r0, r1
   230a8:	bls	230cc <__assert_fail@plt+0x11d48>
   230ac:	ldr	r0, [fp, #-4]
   230b0:	ldr	r1, [fp, #-4]
   230b4:	ldr	r2, [sp, #4]
   230b8:	ldr	r3, [sp, #8]
   230bc:	sub	r2, r3, r2
   230c0:	str	r2, [sp, #8]
   230c4:	bl	1f514 <__assert_fail@plt+0xe190>
   230c8:	b	23098 <__assert_fail@plt+0x11d14>
   230cc:	mov	sp, fp
   230d0:	pop	{fp, pc}
   230d4:	push	{fp, lr}
   230d8:	mov	fp, sp
   230dc:	sub	sp, sp, #8
   230e0:	str	r0, [sp, #4]
   230e4:	str	r1, [sp]
   230e8:	ldr	r0, [sp, #4]
   230ec:	ldr	r1, [sp]
   230f0:	movw	r2, #2
   230f4:	bl	23044 <__assert_fail@plt+0x11cc0>
   230f8:	mov	sp, fp
   230fc:	pop	{fp, pc}
   23100:	push	{fp, lr}
   23104:	mov	fp, sp
   23108:	sub	sp, sp, #8
   2310c:	str	r0, [sp, #4]
   23110:	str	r1, [sp]
   23114:	ldr	r0, [sp, #4]
   23118:	ldr	r1, [sp]
   2311c:	movw	r2, #1
   23120:	bl	23044 <__assert_fail@plt+0x11cc0>
   23124:	mov	sp, fp
   23128:	pop	{fp, pc}
   2312c:	push	{fp, lr}
   23130:	mov	fp, sp
   23134:	sub	sp, sp, #32
   23138:	str	r0, [fp, #-4]
   2313c:	str	r1, [fp, #-8]
   23140:	str	r2, [fp, #-12]
   23144:	ldr	r0, [fp, #-4]
   23148:	ldr	r1, [fp, #-12]
   2314c:	ldr	r2, [fp, #-8]
   23150:	cmp	r1, r2
   23154:	movw	r1, #0
   23158:	movls	r1, #1
   2315c:	and	r1, r1, #1
   23160:	bl	1d90c <__assert_fail@plt+0xc588>
   23164:	ldr	r0, [fp, #-12]
   23168:	ldr	r1, [fp, #-8]
   2316c:	lsr	r1, r1, #1
   23170:	cmp	r0, r1
   23174:	bls	231b0 <__assert_fail@plt+0x11e2c>
   23178:	ldr	r0, [fp, #-12]
   2317c:	ldr	r1, [fp, #-8]
   23180:	cmp	r0, r1
   23184:	bhi	2319c <__assert_fail@plt+0x11e18>
   23188:	ldr	r0, [fp, #-8]
   2318c:	ldr	r1, [fp, #-12]
   23190:	sub	r0, r0, r1
   23194:	str	r0, [sp, #4]
   23198:	b	231a8 <__assert_fail@plt+0x11e24>
   2319c:	movw	r0, #0
   231a0:	str	r0, [sp, #4]
   231a4:	b	231a8 <__assert_fail@plt+0x11e24>
   231a8:	ldr	r0, [sp, #4]
   231ac:	str	r0, [fp, #-12]
   231b0:	add	r0, sp, #8
   231b4:	bl	1d714 <__assert_fail@plt+0xc390>
   231b8:	add	r0, sp, #8
   231bc:	ldr	r1, [fp, #-12]
   231c0:	bl	23100 <__assert_fail@plt+0x11d7c>
   231c4:	ldr	r0, [fp, #-12]
   231c8:	cmp	r0, #0
   231cc:	bls	23200 <__assert_fail@plt+0x11e7c>
   231d0:	ldr	r0, [fp, #-4]
   231d4:	ldr	r1, [fp, #-4]
   231d8:	ldr	r2, [fp, #-8]
   231dc:	mvn	r3, #0
   231e0:	add	r3, r2, r3
   231e4:	str	r3, [fp, #-8]
   231e8:	bl	1f514 <__assert_fail@plt+0xe190>
   231ec:	ldr	r0, [fp, #-12]
   231f0:	mvn	r1, #0
   231f4:	add	r0, r0, r1
   231f8:	str	r0, [fp, #-12]
   231fc:	b	231c4 <__assert_fail@plt+0x11e40>
   23200:	add	r2, sp, #8
   23204:	ldr	r0, [fp, #-4]
   23208:	ldr	r1, [fp, #-4]
   2320c:	bl	208ac <__assert_fail@plt+0xf528>
   23210:	add	r0, sp, #8
   23214:	bl	1d7ec <__assert_fail@plt+0xc468>
   23218:	mov	sp, fp
   2321c:	pop	{fp, pc}
   23220:	push	{fp, lr}
   23224:	mov	fp, sp
   23228:	sub	sp, sp, #72	; 0x48
   2322c:	str	r0, [fp, #-8]
   23230:	str	r1, [fp, #-12]
   23234:	ldr	r0, [fp, #-8]
   23238:	ldr	r0, [r0, #4]
   2323c:	cmp	r0, #0
   23240:	movw	r0, #0
   23244:	movne	r0, #1
   23248:	and	r0, r0, #1
   2324c:	ldr	r1, [fp, #-8]
   23250:	ldr	r1, [r1, #8]
   23254:	ldr	r1, [r1]
   23258:	and	r0, r0, r1
   2325c:	cmp	r0, #0
   23260:	bne	23290 <__assert_fail@plt+0x11f0c>
   23264:	ldr	r0, [fp, #-8]
   23268:	movw	r1, #2
   2326c:	bl	1de68 <__assert_fail@plt+0xcae4>
   23270:	cmp	r0, #0
   23274:	movw	r0, #0
   23278:	moveq	r0, #1
   2327c:	tst	r0, #1
   23280:	movw	r0, #2
   23284:	moveq	r0, #0
   23288:	str	r0, [fp, #-4]
   2328c:	b	234e4 <__assert_fail@plt+0x12160>
   23290:	ldr	r0, [fp, #-8]
   23294:	ldr	r0, [r0, #4]
   23298:	cmp	r0, #0
   2329c:	beq	232a4 <__assert_fail@plt+0x11f20>
   232a0:	b	232c4 <__assert_fail@plt+0x11f40>
   232a4:	movw	r0, #32259	; 0x7e03
   232a8:	movt	r0, #3
   232ac:	movw	r1, #30584	; 0x7778
   232b0:	movt	r1, #3
   232b4:	movw	r2, #3590	; 0xe06
   232b8:	movw	r3, #32276	; 0x7e14
   232bc:	movt	r3, #3
   232c0:	bl	11384 <__assert_fail@plt>
   232c4:	ldr	r0, [fp, #-8]
   232c8:	movw	r1, #64	; 0x40
   232cc:	bl	1de68 <__assert_fail@plt+0xcae4>
   232d0:	cmp	r0, #0
   232d4:	bge	232fc <__assert_fail@plt+0x11f78>
   232d8:	ldr	r0, [pc, #532]	; 234f4 <__assert_fail@plt+0x12170>
   232dc:	ldr	r1, [fp, #-8]
   232e0:	ldr	r1, [r1, #8]
   232e4:	ldr	r1, [r1]
   232e8:	lsr	r1, r1, #1
   232ec:	lsr	r0, r0, r1
   232f0:	and	r0, r0, #2
   232f4:	str	r0, [fp, #-4]
   232f8:	b	234e4 <__assert_fail@plt+0x12160>
   232fc:	ldr	r2, [pc, #492]	; 234f0 <__assert_fail@plt+0x1216c>
   23300:	ldr	r1, [fp, #-8]
   23304:	movw	r0, #0
   23308:	bl	20e88 <__assert_fail@plt+0xfb04>
   2330c:	cmp	r0, #1
   23310:	beq	23320 <__assert_fail@plt+0x11f9c>
   23314:	movw	r0, #0
   23318:	str	r0, [fp, #-4]
   2331c:	b	234e4 <__assert_fail@plt+0x12160>
   23320:	ldr	r0, [fp, #-8]
   23324:	movw	r1, #961	; 0x3c1
   23328:	bl	1de68 <__assert_fail@plt+0xcae4>
   2332c:	cmp	r0, #0
   23330:	bge	23340 <__assert_fail@plt+0x11fbc>
   23334:	movw	r0, #2
   23338:	str	r0, [fp, #-4]
   2333c:	b	234e4 <__assert_fail@plt+0x12160>
   23340:	sub	r0, fp, #24
   23344:	bl	1d714 <__assert_fail@plt+0xc390>
   23348:	add	r0, sp, #36	; 0x24
   2334c:	bl	1d714 <__assert_fail@plt+0xc390>
   23350:	sub	r0, fp, #24
   23354:	ldr	r1, [fp, #-8]
   23358:	bl	1edbc <__assert_fail@plt+0xda38>
   2335c:	ldr	r0, [fp, #-16]
   23360:	ldr	r1, [r0]
   23364:	sub	r1, r1, #1
   23368:	str	r1, [r0]
   2336c:	ldr	r0, [fp, #-16]
   23370:	movw	r1, #0
   23374:	bl	1c594 <__assert_fail@plt+0xb210>
   23378:	sub	r1, fp, #24
   2337c:	add	lr, sp, #36	; 0x24
   23380:	str	r0, [sp, #20]
   23384:	ldr	r2, [sp, #20]
   23388:	mov	r0, lr
   2338c:	bl	20478 <__assert_fail@plt+0xf0f4>
   23390:	add	r0, sp, #24
   23394:	movw	r1, #2
   23398:	bl	1db7c <__assert_fail@plt+0xc7f8>
   2339c:	add	r3, sp, #36	; 0x24
   233a0:	add	r2, sp, #24
   233a4:	sub	r1, fp, #24
   233a8:	ldr	r0, [fp, #-8]
   233ac:	ldr	lr, [sp, #20]
   233b0:	str	lr, [sp]
   233b4:	bl	234f8 <__assert_fail@plt+0x12174>
   233b8:	cmp	r0, #0
   233bc:	movw	r0, #0
   233c0:	str	r0, [sp, #8]
   233c4:	beq	233e4 <__assert_fail@plt+0x12060>
   233c8:	add	r1, sp, #24
   233cc:	ldr	r0, [fp, #-8]
   233d0:	bl	235fc <__assert_fail@plt+0x12278>
   233d4:	cmp	r0, #0
   233d8:	movw	r0, #0
   233dc:	movne	r0, #1
   233e0:	str	r0, [sp, #8]
   233e4:	ldr	r0, [sp, #8]
   233e8:	and	r0, r0, #1
   233ec:	str	r0, [sp, #16]
   233f0:	ldr	r0, [fp, #-12]
   233f4:	sub	r0, r0, #24
   233f8:	str	r0, [fp, #-12]
   233fc:	movw	r0, #0
   23400:	str	r0, [sp, #12]
   23404:	ldr	r0, [sp, #16]
   23408:	ldr	r1, [sp, #12]
   2340c:	ldr	r2, [fp, #-12]
   23410:	cmp	r1, r2
   23414:	movw	r1, #0
   23418:	movlt	r1, #1
   2341c:	and	r1, r1, #1
   23420:	and	r0, r0, r1
   23424:	cmp	r0, #0
   23428:	beq	234c4 <__assert_fail@plt+0x12140>
   2342c:	add	r0, sp, #24
   23430:	ldr	r1, [sp, #12]
   23434:	ldr	r2, [sp, #12]
   23438:	mul	r1, r1, r2
   2343c:	ldr	r2, [sp, #12]
   23440:	add	r1, r1, r2
   23444:	add	r1, r1, #41	; 0x29
   23448:	bl	1d90c <__assert_fail@plt+0xc588>
   2344c:	sub	r1, fp, #24
   23450:	add	r0, sp, #24
   23454:	bl	1ebc4 <__assert_fail@plt+0xd840>
   23458:	cmp	r0, #0
   2345c:	blt	23494 <__assert_fail@plt+0x12110>
   23460:	ldr	r0, [sp, #12]
   23464:	cmp	r0, #30
   23468:	blt	23470 <__assert_fail@plt+0x120ec>
   2346c:	b	23490 <__assert_fail@plt+0x1210c>
   23470:	movw	r0, #32326	; 0x7e46
   23474:	movt	r0, #3
   23478:	movw	r1, #30584	; 0x7778
   2347c:	movt	r1, #3
   23480:	movw	r2, #3629	; 0xe2d
   23484:	movw	r3, #32276	; 0x7e14
   23488:	movt	r3, #3
   2348c:	bl	11384 <__assert_fail@plt>
   23490:	b	234c4 <__assert_fail@plt+0x12140>
   23494:	add	r3, sp, #36	; 0x24
   23498:	add	r2, sp, #24
   2349c:	sub	r1, fp, #24
   234a0:	ldr	r0, [fp, #-8]
   234a4:	ldr	ip, [sp, #20]
   234a8:	str	ip, [sp]
   234ac:	bl	234f8 <__assert_fail@plt+0x12174>
   234b0:	str	r0, [sp, #16]
   234b4:	ldr	r0, [sp, #12]
   234b8:	add	r0, r0, #1
   234bc:	str	r0, [sp, #12]
   234c0:	b	23404 <__assert_fail@plt+0x12080>
   234c4:	sub	r0, fp, #24
   234c8:	bl	1d7ec <__assert_fail@plt+0xc468>
   234cc:	add	r0, sp, #36	; 0x24
   234d0:	bl	1d7ec <__assert_fail@plt+0xc468>
   234d4:	add	r0, sp, #24
   234d8:	bl	1d7ec <__assert_fail@plt+0xc468>
   234dc:	ldr	r0, [sp, #16]
   234e0:	str	r0, [fp, #-4]
   234e4:	ldr	r0, [fp, #-4]
   234e8:	mov	sp, fp
   234ec:	pop	{fp, pc}
   234f0:	smullgt	sp, pc, r7, r7	; <UNPREDICTABLE>
   234f4:	stmdbgt	r9!, {r2, r3, r4, r6, r7, r9, sl, ip, pc}^
   234f8:	push	{fp, lr}
   234fc:	mov	fp, sp
   23500:	sub	sp, sp, #24
   23504:	ldr	ip, [fp, #8]
   23508:	str	r0, [fp, #-8]
   2350c:	str	r1, [sp, #12]
   23510:	str	r2, [sp, #8]
   23514:	str	r3, [sp, #4]
   23518:	ldr	r0, [fp, #8]
   2351c:	cmp	r0, #0
   23520:	str	ip, [sp]
   23524:	bls	2352c <__assert_fail@plt+0x121a8>
   23528:	b	2354c <__assert_fail@plt+0x121c8>
   2352c:	movw	r0, #34855	; 0x8827
   23530:	movt	r0, #3
   23534:	movw	r1, #30584	; 0x7778
   23538:	movt	r1, #3
   2353c:	movw	r2, #3550	; 0xdde
   23540:	movw	r3, #34861	; 0x882d
   23544:	movt	r3, #3
   23548:	bl	11384 <__assert_fail@plt>
   2354c:	ldr	r0, [sp, #8]
   23550:	ldr	r1, [sp, #8]
   23554:	ldr	r2, [sp, #4]
   23558:	ldr	r3, [fp, #-8]
   2355c:	bl	21e30 <__assert_fail@plt+0x10aac>
   23560:	ldr	r0, [sp, #8]
   23564:	movw	r1, #1
   23568:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   2356c:	cmp	r0, #0
   23570:	beq	23588 <__assert_fail@plt+0x12204>
   23574:	ldr	r0, [sp, #8]
   23578:	ldr	r1, [sp, #12]
   2357c:	bl	1ebc4 <__assert_fail@plt+0xd840>
   23580:	cmp	r0, #0
   23584:	bne	23594 <__assert_fail@plt+0x12210>
   23588:	movw	r0, #1
   2358c:	str	r0, [fp, #-4]
   23590:	b	235f0 <__assert_fail@plt+0x1226c>
   23594:	b	23598 <__assert_fail@plt+0x12214>
   23598:	ldr	r0, [fp, #8]
   2359c:	mvn	r1, #0
   235a0:	add	r0, r0, r1
   235a4:	str	r0, [fp, #8]
   235a8:	cmp	r0, #0
   235ac:	bls	235e8 <__assert_fail@plt+0x12264>
   235b0:	ldr	r0, [sp, #8]
   235b4:	ldr	r1, [sp, #8]
   235b8:	ldr	r3, [fp, #-8]
   235bc:	movw	r2, #2
   235c0:	bl	22750 <__assert_fail@plt+0x113cc>
   235c4:	ldr	r0, [sp, #8]
   235c8:	ldr	r1, [sp, #12]
   235cc:	bl	1ebc4 <__assert_fail@plt+0xd840>
   235d0:	cmp	r0, #0
   235d4:	bne	235e4 <__assert_fail@plt+0x12260>
   235d8:	movw	r0, #1
   235dc:	str	r0, [fp, #-4]
   235e0:	b	235f0 <__assert_fail@plt+0x1226c>
   235e4:	b	23598 <__assert_fail@plt+0x12214>
   235e8:	movw	r0, #0
   235ec:	str	r0, [fp, #-4]
   235f0:	ldr	r0, [fp, #-4]
   235f4:	mov	sp, fp
   235f8:	pop	{fp, pc}
   235fc:	push	{fp, lr}
   23600:	mov	fp, sp
   23604:	sub	sp, sp, #104	; 0x68
   23608:	sub	r2, fp, #40	; 0x28
   2360c:	str	r0, [fp, #-8]
   23610:	str	r1, [fp, #-12]
   23614:	ldr	r0, [fp, #-8]
   23618:	ldr	r1, [r0, #8]
   2361c:	ldr	r0, [fp, #-8]
   23620:	ldr	r0, [r0, #4]
   23624:	cmp	r0, #0
   23628:	str	r2, [sp, #44]	; 0x2c
   2362c:	str	r1, [sp, #40]	; 0x28
   23630:	blt	23644 <__assert_fail@plt+0x122c0>
   23634:	ldr	r0, [fp, #-8]
   23638:	ldr	r0, [r0, #4]
   2363c:	str	r0, [sp, #36]	; 0x24
   23640:	b	23658 <__assert_fail@plt+0x122d4>
   23644:	ldr	r0, [fp, #-8]
   23648:	ldr	r0, [r0, #4]
   2364c:	movw	r1, #0
   23650:	sub	r0, r1, r0
   23654:	str	r0, [sp, #36]	; 0x24
   23658:	ldr	r0, [sp, #36]	; 0x24
   2365c:	ldr	r1, [sp, #44]	; 0x2c
   23660:	str	r0, [sp, #32]
   23664:	mov	r0, r1
   23668:	ldr	r1, [sp, #40]	; 0x28
   2366c:	ldr	r2, [sp, #32]
   23670:	bl	1e368 <__assert_fail@plt+0xcfe4>
   23674:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23678:	cmp	r1, #0
   2367c:	movw	r1, #0
   23680:	movne	r1, #1
   23684:	and	r1, r1, #1
   23688:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2368c:	ldr	r2, [r2]
   23690:	and	r1, r1, r2
   23694:	cmp	r1, #0
   23698:	str	r0, [sp, #28]
   2369c:	beq	236a4 <__assert_fail@plt+0x12320>
   236a0:	b	236c4 <__assert_fail@plt+0x12340>
   236a4:	movw	r0, #34976	; 0x88a0
   236a8:	movt	r0, #3
   236ac:	movw	r1, #30584	; 0x7778
   236b0:	movt	r1, #3
   236b4:	movw	r2, #3504	; 0xdb0
   236b8:	movw	r3, #34990	; 0x88ae
   236bc:	movt	r3, #3
   236c0:	bl	11384 <__assert_fail@plt>
   236c4:	sub	r1, fp, #40	; 0x28
   236c8:	ldr	r0, [fp, #-12]
   236cc:	movw	r2, #2
   236d0:	bl	22cf4 <__assert_fail@plt+0x11970>
   236d4:	cmp	r0, #0
   236d8:	beq	236e8 <__assert_fail@plt+0x12364>
   236dc:	movw	r0, #0
   236e0:	str	r0, [fp, #-4]
   236e4:	b	238d8 <__assert_fail@plt+0x12554>
   236e8:	ldr	r0, [fp, #-12]
   236ec:	ldr	r0, [r0, #4]
   236f0:	cmp	r0, #1
   236f4:	bne	23710 <__assert_fail@plt+0x1238c>
   236f8:	ldr	r0, [fp, #-12]
   236fc:	ldr	r0, [r0, #8]
   23700:	ldr	r0, [r0]
   23704:	sub	r0, r0, #1
   23708:	str	r0, [sp, #24]
   2370c:	b	2371c <__assert_fail@plt+0x12398>
   23710:	mvn	r0, #0
   23714:	str	r0, [sp, #24]
   23718:	b	2371c <__assert_fail@plt+0x12398>
   2371c:	ldr	r0, [sp, #24]
   23720:	str	r0, [fp, #-44]	; 0xffffffd4
   23724:	movw	r0, #3
   23728:	str	r0, [fp, #-48]	; 0xffffffd0
   2372c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23730:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23734:	cmp	r0, r1
   23738:	bcc	2375c <__assert_fail@plt+0x123d8>
   2373c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23740:	cmn	r0, #1
   23744:	movw	r0, #0
   23748:	movne	r0, #1
   2374c:	and	r0, r0, #1
   23750:	add	r0, r0, #1
   23754:	str	r0, [fp, #-4]
   23758:	b	238d8 <__assert_fail@plt+0x12554>
   2375c:	sub	r0, fp, #40	; 0x28
   23760:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23764:	add	r1, r1, #2
   23768:	str	r1, [fp, #-48]	; 0xffffffd0
   2376c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   23770:	bl	20d4c <__assert_fail@plt+0xf9c8>
   23774:	str	r0, [sp, #48]	; 0x30
   23778:	ldr	r0, [sp, #48]	; 0x30
   2377c:	cmp	r0, #0
   23780:	bne	23790 <__assert_fail@plt+0x1240c>
   23784:	movw	r0, #0
   23788:	str	r0, [fp, #-4]
   2378c:	b	238d8 <__assert_fail@plt+0x12554>
   23790:	b	23794 <__assert_fail@plt+0x12410>
   23794:	ldr	r0, [sp, #48]	; 0x30
   23798:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2379c:	bl	27c74 <__assert_fail@plt+0x168f0>
   237a0:	cmp	r0, #1
   237a4:	beq	2372c <__assert_fail@plt+0x123a8>
   237a8:	sub	r0, fp, #28
   237ac:	bl	1d714 <__assert_fail@plt+0xc390>
   237b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237b4:	ldr	r0, [r0]
   237b8:	mvn	lr, #0
   237bc:	eor	r0, r0, lr
   237c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   237c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   237c8:	movw	r1, #0
   237cc:	str	lr, [sp]
   237d0:	bl	1c5f8 <__assert_fail@plt+0xb274>
   237d4:	str	r0, [fp, #-16]
   237d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   237dc:	and	r0, r0, #2
   237e0:	cmp	r0, #0
   237e4:	beq	237fc <__assert_fail@plt+0x12478>
   237e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   237ec:	lsr	r0, r0, #2
   237f0:	add	r0, r0, #1
   237f4:	str	r0, [sp, #20]
   237f8:	b	23810 <__assert_fail@plt+0x1248c>
   237fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23800:	lsr	r0, r0, #2
   23804:	movw	r1, #0
   23808:	sub	r0, r1, r0
   2380c:	str	r0, [sp, #20]
   23810:	ldr	r0, [sp, #20]
   23814:	sub	r1, fp, #40	; 0x28
   23818:	sub	r2, fp, #28
   2381c:	str	r0, [sp, #52]	; 0x34
   23820:	ldr	r0, [fp, #-12]
   23824:	ldr	r3, [sp, #52]	; 0x34
   23828:	ldr	ip, [fp, #-16]
   2382c:	str	r0, [sp, #16]
   23830:	mov	r0, r2
   23834:	ldr	r2, [sp, #16]
   23838:	str	r1, [sp, #12]
   2383c:	mov	r1, r2
   23840:	mov	r2, r3
   23844:	mov	r3, ip
   23848:	ldr	ip, [sp, #12]
   2384c:	str	ip, [sp]
   23850:	bl	27fa0 <__assert_fail@plt+0x16c1c>
   23854:	cmp	r0, #0
   23858:	bne	238b8 <__assert_fail@plt+0x12534>
   2385c:	b	23860 <__assert_fail@plt+0x124dc>
   23860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23864:	cmp	r0, #0
   23868:	movw	r0, #0
   2386c:	str	r0, [sp, #8]
   23870:	beq	23894 <__assert_fail@plt+0x12510>
   23874:	ldr	r0, [fp, #-16]
   23878:	mvn	r1, #0
   2387c:	add	r0, r0, r1
   23880:	str	r0, [fp, #-16]
   23884:	cmp	r0, #0
   23888:	movw	r0, #0
   2388c:	movne	r0, #1
   23890:	str	r0, [sp, #8]
   23894:	ldr	r0, [sp, #8]
   23898:	tst	r0, #1
   2389c:	beq	238b4 <__assert_fail@plt+0x12530>
   238a0:	sub	r2, fp, #40	; 0x28
   238a4:	sub	r0, fp, #28
   238a8:	ldr	r1, [fp, #-12]
   238ac:	bl	28280 <__assert_fail@plt+0x16efc>
   238b0:	b	23860 <__assert_fail@plt+0x124dc>
   238b4:	b	238b8 <__assert_fail@plt+0x12534>
   238b8:	sub	r0, fp, #28
   238bc:	bl	1d7ec <__assert_fail@plt+0xc468>
   238c0:	ldr	r0, [fp, #-16]
   238c4:	cmp	r0, #0
   238c8:	movw	r0, #0
   238cc:	movne	r0, #1
   238d0:	and	r0, r0, #1
   238d4:	str	r0, [fp, #-4]
   238d8:	ldr	r0, [fp, #-4]
   238dc:	mov	sp, fp
   238e0:	pop	{fp, pc}
   238e4:	sub	sp, sp, #40	; 0x28
   238e8:	str	r0, [sp, #32]
   238ec:	str	r1, [sp, #28]
   238f0:	ldr	r0, [sp, #32]
   238f4:	ldr	r0, [r0, #4]
   238f8:	str	r0, [sp, #16]
   238fc:	ldr	r0, [sp, #16]
   23900:	cmp	r0, #0
   23904:	blt	23914 <__assert_fail@plt+0x12590>
   23908:	ldr	r0, [sp, #16]
   2390c:	str	r0, [sp]
   23910:	b	23924 <__assert_fail@plt+0x125a0>
   23914:	ldr	r0, [sp, #16]
   23918:	movw	r1, #0
   2391c:	sub	r0, r1, r0
   23920:	str	r0, [sp]
   23924:	ldr	r0, [sp]
   23928:	str	r0, [sp, #12]
   2392c:	ldr	r0, [sp, #28]
   23930:	lsr	r0, r0, #5
   23934:	str	r0, [sp, #24]
   23938:	ldr	r0, [sp, #24]
   2393c:	ldr	r1, [sp, #12]
   23940:	cmp	r0, r1
   23944:	blt	23964 <__assert_fail@plt+0x125e0>
   23948:	ldr	r0, [sp, #16]
   2394c:	cmp	r0, #0
   23950:	movw	r0, #0
   23954:	movlt	r0, #1
   23958:	and	r0, r0, #1
   2395c:	str	r0, [sp, #36]	; 0x24
   23960:	b	23a38 <__assert_fail@plt+0x126b4>
   23964:	ldr	r0, [sp, #28]
   23968:	and	r0, r0, #31
   2396c:	str	r0, [sp, #20]
   23970:	ldr	r0, [sp, #32]
   23974:	ldr	r0, [r0, #8]
   23978:	ldr	r1, [sp, #24]
   2397c:	add	r0, r0, r1, lsl #2
   23980:	ldr	r0, [r0]
   23984:	str	r0, [sp, #8]
   23988:	ldr	r0, [sp, #8]
   2398c:	ldr	r1, [sp, #20]
   23990:	lsr	r0, r0, r1
   23994:	and	r0, r0, #1
   23998:	str	r0, [sp, #4]
   2399c:	ldr	r0, [sp, #16]
   239a0:	cmp	r0, #0
   239a4:	bge	23a30 <__assert_fail@plt+0x126ac>
   239a8:	ldr	r0, [sp, #20]
   239ac:	cmp	r0, #0
   239b0:	bls	239e0 <__assert_fail@plt+0x1265c>
   239b4:	ldr	r0, [sp, #8]
   239b8:	ldr	r1, [sp, #20]
   239bc:	movw	r2, #32
   239c0:	sub	r1, r2, r1
   239c4:	lsl	r0, r0, r1
   239c8:	cmp	r0, #0
   239cc:	bls	239e0 <__assert_fail@plt+0x1265c>
   239d0:	ldr	r0, [sp, #4]
   239d4:	eor	r0, r0, #1
   239d8:	str	r0, [sp, #36]	; 0x24
   239dc:	b	23a38 <__assert_fail@plt+0x126b4>
   239e0:	b	239e4 <__assert_fail@plt+0x12660>
   239e4:	ldr	r0, [sp, #24]
   239e8:	mvn	r1, #0
   239ec:	add	r0, r0, r1
   239f0:	str	r0, [sp, #24]
   239f4:	cmp	r0, #0
   239f8:	blt	23a2c <__assert_fail@plt+0x126a8>
   239fc:	ldr	r0, [sp, #32]
   23a00:	ldr	r0, [r0, #8]
   23a04:	ldr	r1, [sp, #24]
   23a08:	add	r0, r0, r1, lsl #2
   23a0c:	ldr	r0, [r0]
   23a10:	cmp	r0, #0
   23a14:	bls	23a28 <__assert_fail@plt+0x126a4>
   23a18:	ldr	r0, [sp, #4]
   23a1c:	eor	r0, r0, #1
   23a20:	str	r0, [sp, #36]	; 0x24
   23a24:	b	23a38 <__assert_fail@plt+0x126b4>
   23a28:	b	239e4 <__assert_fail@plt+0x12660>
   23a2c:	b	23a30 <__assert_fail@plt+0x126ac>
   23a30:	ldr	r0, [sp, #4]
   23a34:	str	r0, [sp, #36]	; 0x24
   23a38:	ldr	r0, [sp, #36]	; 0x24
   23a3c:	add	sp, sp, #40	; 0x28
   23a40:	bx	lr
   23a44:	push	{fp, lr}
   23a48:	mov	fp, sp
   23a4c:	sub	sp, sp, #56	; 0x38
   23a50:	str	r0, [fp, #-4]
   23a54:	str	r1, [fp, #-8]
   23a58:	ldr	r0, [fp, #-4]
   23a5c:	ldr	r0, [r0, #4]
   23a60:	cmp	r0, #0
   23a64:	blt	23a78 <__assert_fail@plt+0x126f4>
   23a68:	ldr	r0, [fp, #-4]
   23a6c:	ldr	r0, [r0, #4]
   23a70:	str	r0, [sp, #20]
   23a74:	b	23a8c <__assert_fail@plt+0x12708>
   23a78:	ldr	r0, [fp, #-4]
   23a7c:	ldr	r0, [r0, #4]
   23a80:	movw	r1, #0
   23a84:	sub	r0, r1, r0
   23a88:	str	r0, [sp, #20]
   23a8c:	ldr	r0, [sp, #20]
   23a90:	str	r0, [fp, #-12]
   23a94:	ldr	r0, [fp, #-8]
   23a98:	lsr	r0, r0, #5
   23a9c:	str	r0, [fp, #-16]
   23aa0:	ldr	r0, [fp, #-8]
   23aa4:	and	r0, r0, #31
   23aa8:	movw	r1, #1
   23aac:	lsl	r0, r1, r0
   23ab0:	str	r0, [fp, #-20]	; 0xffffffec
   23ab4:	ldr	r0, [fp, #-16]
   23ab8:	ldr	r1, [fp, #-12]
   23abc:	cmp	r0, r1
   23ac0:	blt	23b68 <__assert_fail@plt+0x127e4>
   23ac4:	ldr	r0, [fp, #-16]
   23ac8:	add	r0, r0, #1
   23acc:	ldr	r1, [fp, #-4]
   23ad0:	ldr	r1, [r1]
   23ad4:	cmp	r0, r1
   23ad8:	ble	23af4 <__assert_fail@plt+0x12770>
   23adc:	ldr	r0, [fp, #-4]
   23ae0:	ldr	r1, [fp, #-16]
   23ae4:	add	r1, r1, #1
   23ae8:	bl	1d994 <__assert_fail@plt+0xc610>
   23aec:	str	r0, [sp, #16]
   23af0:	b	23b00 <__assert_fail@plt+0x1277c>
   23af4:	ldr	r0, [fp, #-4]
   23af8:	ldr	r0, [r0, #8]
   23afc:	str	r0, [sp, #16]
   23b00:	ldr	r0, [sp, #16]
   23b04:	str	r0, [fp, #-24]	; 0xffffffe8
   23b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23b10:	ldr	r2, [fp, #-16]
   23b14:	add	r1, r1, r2, lsl #2
   23b18:	str	r0, [r1]
   23b1c:	ldr	r0, [fp, #-12]
   23b20:	str	r0, [sp, #28]
   23b24:	ldr	r0, [sp, #28]
   23b28:	ldr	r1, [fp, #-16]
   23b2c:	cmp	r0, r1
   23b30:	bge	23b58 <__assert_fail@plt+0x127d4>
   23b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23b38:	ldr	r1, [sp, #28]
   23b3c:	add	r0, r0, r1, lsl #2
   23b40:	movw	r1, #0
   23b44:	str	r1, [r0]
   23b48:	ldr	r0, [sp, #28]
   23b4c:	add	r0, r0, #1
   23b50:	str	r0, [sp, #28]
   23b54:	b	23b24 <__assert_fail@plt+0x127a0>
   23b58:	ldr	r0, [fp, #-16]
   23b5c:	add	r0, r0, #1
   23b60:	str	r0, [fp, #-12]
   23b64:	b	23c18 <__assert_fail@plt+0x12894>
   23b68:	ldr	r0, [fp, #-4]
   23b6c:	ldr	r0, [r0, #8]
   23b70:	str	r0, [fp, #-24]	; 0xffffffe8
   23b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23b78:	ldr	r1, [fp, #-16]
   23b7c:	add	r0, r0, r1, lsl #2
   23b80:	mov	r1, r0
   23b84:	ldr	r2, [fp, #-12]
   23b88:	ldr	r3, [fp, #-16]
   23b8c:	sub	r2, r2, r3
   23b90:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b94:	str	r0, [sp, #12]
   23b98:	mov	r0, r1
   23b9c:	ldr	r1, [sp, #12]
   23ba0:	bl	1b598 <__assert_fail@plt+0xa214>
   23ba4:	str	r0, [sp, #24]
   23ba8:	ldr	r0, [sp, #24]
   23bac:	cmp	r0, #0
   23bb0:	bls	23c14 <__assert_fail@plt+0x12890>
   23bb4:	ldr	r0, [fp, #-12]
   23bb8:	add	r0, r0, #1
   23bbc:	ldr	r1, [fp, #-4]
   23bc0:	ldr	r1, [r1]
   23bc4:	cmp	r0, r1
   23bc8:	ble	23be4 <__assert_fail@plt+0x12860>
   23bcc:	ldr	r0, [fp, #-4]
   23bd0:	ldr	r1, [fp, #-12]
   23bd4:	add	r1, r1, #1
   23bd8:	bl	1d994 <__assert_fail@plt+0xc610>
   23bdc:	str	r0, [sp, #8]
   23be0:	b	23bf0 <__assert_fail@plt+0x1286c>
   23be4:	ldr	r0, [fp, #-4]
   23be8:	ldr	r0, [r0, #8]
   23bec:	str	r0, [sp, #8]
   23bf0:	ldr	r0, [sp, #8]
   23bf4:	str	r0, [fp, #-24]	; 0xffffffe8
   23bf8:	ldr	r0, [sp, #24]
   23bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23c00:	ldr	r2, [fp, #-12]
   23c04:	add	r3, r2, #1
   23c08:	str	r3, [fp, #-12]
   23c0c:	add	r1, r1, r2, lsl #2
   23c10:	str	r0, [r1]
   23c14:	b	23c18 <__assert_fail@plt+0x12894>
   23c18:	ldr	r0, [fp, #-4]
   23c1c:	ldr	r0, [r0, #4]
   23c20:	cmp	r0, #0
   23c24:	bge	23c3c <__assert_fail@plt+0x128b8>
   23c28:	ldr	r0, [fp, #-12]
   23c2c:	movw	r1, #0
   23c30:	sub	r0, r1, r0
   23c34:	str	r0, [sp, #4]
   23c38:	b	23c44 <__assert_fail@plt+0x128c0>
   23c3c:	ldr	r0, [fp, #-12]
   23c40:	str	r0, [sp, #4]
   23c44:	ldr	r0, [sp, #4]
   23c48:	ldr	r1, [fp, #-4]
   23c4c:	str	r0, [r1, #4]
   23c50:	mov	sp, fp
   23c54:	pop	{fp, pc}
   23c58:	push	{fp, lr}
   23c5c:	mov	fp, sp
   23c60:	sub	sp, sp, #40	; 0x28
   23c64:	str	r0, [fp, #-4]
   23c68:	str	r1, [fp, #-8]
   23c6c:	ldr	r0, [fp, #-4]
   23c70:	ldr	r0, [r0, #4]
   23c74:	cmp	r0, #0
   23c78:	blt	23c8c <__assert_fail@plt+0x12908>
   23c7c:	ldr	r0, [fp, #-4]
   23c80:	ldr	r0, [r0, #4]
   23c84:	str	r0, [sp, #8]
   23c88:	b	23ca0 <__assert_fail@plt+0x1291c>
   23c8c:	ldr	r0, [fp, #-4]
   23c90:	ldr	r0, [r0, #4]
   23c94:	movw	r1, #0
   23c98:	sub	r0, r1, r0
   23c9c:	str	r0, [sp, #8]
   23ca0:	ldr	r0, [sp, #8]
   23ca4:	str	r0, [fp, #-12]
   23ca8:	ldr	r0, [fp, #-4]
   23cac:	ldr	r0, [r0, #8]
   23cb0:	str	r0, [sp, #20]
   23cb4:	ldr	r0, [fp, #-8]
   23cb8:	lsr	r0, r0, #5
   23cbc:	str	r0, [fp, #-16]
   23cc0:	ldr	r0, [fp, #-8]
   23cc4:	and	r0, r0, #31
   23cc8:	movw	r1, #1
   23ccc:	lsl	r0, r1, r0
   23cd0:	str	r0, [sp, #16]
   23cd4:	ldr	r0, [fp, #-16]
   23cd8:	ldr	r1, [fp, #-12]
   23cdc:	cmp	r0, r1
   23ce0:	bge	23ce8 <__assert_fail@plt+0x12964>
   23ce4:	b	23d08 <__assert_fail@plt+0x12984>
   23ce8:	movw	r0, #35270	; 0x89c6
   23cec:	movt	r0, #3
   23cf0:	movw	r1, #30584	; 0x7778
   23cf4:	movt	r1, #3
   23cf8:	movw	r2, #3753	; 0xea9
   23cfc:	movw	r3, #35286	; 0x89d6
   23d00:	movt	r3, #3
   23d04:	bl	11384 <__assert_fail@plt>
   23d08:	b	23d0c <__assert_fail@plt+0x12988>
   23d0c:	ldr	r0, [sp, #20]
   23d10:	ldr	r1, [fp, #-16]
   23d14:	add	r0, r0, r1, lsl #2
   23d18:	mov	r1, r0
   23d1c:	ldr	r2, [fp, #-12]
   23d20:	ldr	r3, [fp, #-16]
   23d24:	sub	r2, r2, r3
   23d28:	ldr	r3, [sp, #16]
   23d2c:	str	r0, [sp, #4]
   23d30:	mov	r0, r1
   23d34:	ldr	r1, [sp, #4]
   23d38:	bl	1b7e0 <__assert_fail@plt+0xa45c>
   23d3c:	str	r0, [sp, #12]
   23d40:	ldr	r0, [sp, #12]
   23d44:	cmp	r0, #0
   23d48:	bne	23d50 <__assert_fail@plt+0x129cc>
   23d4c:	b	23d70 <__assert_fail@plt+0x129ec>
   23d50:	movw	r0, #31565	; 0x7b4d
   23d54:	movt	r0, #3
   23d58:	movw	r1, #30584	; 0x7778
   23d5c:	movt	r1, #3
   23d60:	movw	r2, #3756	; 0xeac
   23d64:	movw	r3, #35286	; 0x89d6
   23d68:	movt	r3, #3
   23d6c:	bl	11384 <__assert_fail@plt>
   23d70:	b	23d74 <__assert_fail@plt+0x129f0>
   23d74:	ldr	r0, [sp, #20]
   23d78:	ldr	r1, [fp, #-12]
   23d7c:	bl	1b4e4 <__assert_fail@plt+0xa160>
   23d80:	str	r0, [fp, #-12]
   23d84:	ldr	r0, [fp, #-4]
   23d88:	ldr	r0, [r0, #4]
   23d8c:	cmp	r0, #0
   23d90:	bge	23da8 <__assert_fail@plt+0x12a24>
   23d94:	ldr	r0, [fp, #-12]
   23d98:	movw	r1, #0
   23d9c:	sub	r0, r1, r0
   23da0:	str	r0, [sp]
   23da4:	b	23db0 <__assert_fail@plt+0x12a2c>
   23da8:	ldr	r0, [fp, #-12]
   23dac:	str	r0, [sp]
   23db0:	ldr	r0, [sp]
   23db4:	ldr	r1, [fp, #-4]
   23db8:	str	r0, [r1, #4]
   23dbc:	mov	sp, fp
   23dc0:	pop	{fp, pc}
   23dc4:	push	{fp, lr}
   23dc8:	mov	fp, sp
   23dcc:	sub	sp, sp, #8
   23dd0:	str	r0, [sp, #4]
   23dd4:	str	r1, [sp]
   23dd8:	ldr	r0, [sp, #4]
   23ddc:	ldr	r1, [sp]
   23de0:	bl	238e4 <__assert_fail@plt+0x12560>
   23de4:	cmp	r0, #0
   23de8:	beq	23e1c <__assert_fail@plt+0x12a98>
   23dec:	ldr	r0, [sp, #4]
   23df0:	ldr	r0, [r0, #4]
   23df4:	cmp	r0, #0
   23df8:	blt	23e0c <__assert_fail@plt+0x12a88>
   23dfc:	ldr	r0, [sp, #4]
   23e00:	ldr	r1, [sp]
   23e04:	bl	23c58 <__assert_fail@plt+0x128d4>
   23e08:	b	23e18 <__assert_fail@plt+0x12a94>
   23e0c:	ldr	r0, [sp, #4]
   23e10:	ldr	r1, [sp]
   23e14:	bl	23a44 <__assert_fail@plt+0x126c0>
   23e18:	b	23e1c <__assert_fail@plt+0x12a98>
   23e1c:	mov	sp, fp
   23e20:	pop	{fp, pc}
   23e24:	push	{fp, lr}
   23e28:	mov	fp, sp
   23e2c:	sub	sp, sp, #8
   23e30:	str	r0, [sp, #4]
   23e34:	str	r1, [sp]
   23e38:	ldr	r0, [sp, #4]
   23e3c:	ldr	r1, [sp]
   23e40:	bl	238e4 <__assert_fail@plt+0x12560>
   23e44:	ldr	r1, [sp, #4]
   23e48:	ldr	r1, [r1, #4]
   23e4c:	cmp	r1, #0
   23e50:	movw	r1, #0
   23e54:	movlt	r1, #1
   23e58:	and	r1, r1, #1
   23e5c:	eor	r0, r0, r1
   23e60:	cmp	r0, #0
   23e64:	beq	23e78 <__assert_fail@plt+0x12af4>
   23e68:	ldr	r0, [sp, #4]
   23e6c:	ldr	r1, [sp]
   23e70:	bl	23c58 <__assert_fail@plt+0x128d4>
   23e74:	b	23e84 <__assert_fail@plt+0x12b00>
   23e78:	ldr	r0, [sp, #4]
   23e7c:	ldr	r1, [sp]
   23e80:	bl	23a44 <__assert_fail@plt+0x126c0>
   23e84:	mov	sp, fp
   23e88:	pop	{fp, pc}
   23e8c:	push	{fp, lr}
   23e90:	mov	fp, sp
   23e94:	sub	sp, sp, #8
   23e98:	str	r0, [sp, #4]
   23e9c:	str	r1, [sp]
   23ea0:	ldr	r0, [sp, #4]
   23ea4:	ldr	r1, [sp]
   23ea8:	movw	r2, #1
   23eac:	bl	1eef8 <__assert_fail@plt+0xdb74>
   23eb0:	ldr	r0, [sp, #4]
   23eb4:	ldr	r1, [sp, #4]
   23eb8:	bl	1ee24 <__assert_fail@plt+0xdaa0>
   23ebc:	mov	sp, fp
   23ec0:	pop	{fp, pc}
   23ec4:	push	{fp, lr}
   23ec8:	mov	fp, sp
   23ecc:	sub	sp, sp, #104	; 0x68
   23ed0:	str	r0, [fp, #-4]
   23ed4:	str	r1, [fp, #-8]
   23ed8:	str	r2, [fp, #-12]
   23edc:	ldr	r0, [fp, #-8]
   23ee0:	ldr	r0, [r0, #4]
   23ee4:	cmp	r0, #0
   23ee8:	blt	23efc <__assert_fail@plt+0x12b78>
   23eec:	ldr	r0, [fp, #-8]
   23ef0:	ldr	r0, [r0, #4]
   23ef4:	str	r0, [sp, #16]
   23ef8:	b	23f10 <__assert_fail@plt+0x12b8c>
   23efc:	ldr	r0, [fp, #-8]
   23f00:	ldr	r0, [r0, #4]
   23f04:	movw	r1, #0
   23f08:	sub	r0, r1, r0
   23f0c:	str	r0, [sp, #16]
   23f10:	ldr	r0, [sp, #16]
   23f14:	str	r0, [fp, #-16]
   23f18:	ldr	r0, [fp, #-12]
   23f1c:	ldr	r0, [r0, #4]
   23f20:	cmp	r0, #0
   23f24:	blt	23f38 <__assert_fail@plt+0x12bb4>
   23f28:	ldr	r0, [fp, #-12]
   23f2c:	ldr	r0, [r0, #4]
   23f30:	str	r0, [sp, #12]
   23f34:	b	23f4c <__assert_fail@plt+0x12bc8>
   23f38:	ldr	r0, [fp, #-12]
   23f3c:	ldr	r0, [r0, #4]
   23f40:	movw	r1, #0
   23f44:	sub	r0, r1, r0
   23f48:	str	r0, [sp, #12]
   23f4c:	ldr	r0, [sp, #12]
   23f50:	str	r0, [fp, #-20]	; 0xffffffec
   23f54:	ldr	r0, [fp, #-16]
   23f58:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f5c:	cmp	r0, r1
   23f60:	bge	23fa0 <__assert_fail@plt+0x12c1c>
   23f64:	b	23f68 <__assert_fail@plt+0x12be4>
   23f68:	ldr	r0, [fp, #-8]
   23f6c:	str	r0, [sp, #24]
   23f70:	ldr	r0, [fp, #-12]
   23f74:	str	r0, [fp, #-8]
   23f78:	ldr	r0, [sp, #24]
   23f7c:	str	r0, [fp, #-12]
   23f80:	b	23f84 <__assert_fail@plt+0x12c00>
   23f84:	ldr	r0, [fp, #-16]
   23f88:	str	r0, [sp, #20]
   23f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f90:	str	r0, [fp, #-16]
   23f94:	ldr	r0, [sp, #20]
   23f98:	str	r0, [fp, #-20]	; 0xffffffec
   23f9c:	b	23fa0 <__assert_fail@plt+0x12c1c>
   23fa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   23fa4:	cmp	r0, #0
   23fa8:	bne	23fbc <__assert_fail@plt+0x12c38>
   23fac:	ldr	r0, [fp, #-4]
   23fb0:	movw	r1, #0
   23fb4:	str	r1, [r0, #4]
   23fb8:	b	242dc <__assert_fail@plt+0x12f58>
   23fbc:	ldr	r0, [fp, #-8]
   23fc0:	ldr	r0, [r0, #4]
   23fc4:	cmp	r0, #0
   23fc8:	movw	r0, #0
   23fcc:	movlt	r0, #1
   23fd0:	and	r0, r0, #1
   23fd4:	str	r0, [sp, #48]	; 0x30
   23fd8:	ldr	r0, [fp, #-12]
   23fdc:	ldr	r0, [r0, #4]
   23fe0:	cmp	r0, #0
   23fe4:	movw	r0, #0
   23fe8:	movlt	r0, #1
   23fec:	and	r0, r0, #1
   23ff0:	str	r0, [sp, #44]	; 0x2c
   23ff4:	ldr	r0, [sp, #48]	; 0x30
   23ff8:	ldr	r1, [sp, #44]	; 0x2c
   23ffc:	and	r0, r0, r1
   24000:	str	r0, [sp, #40]	; 0x28
   24004:	ldr	r0, [sp, #48]	; 0x30
   24008:	movw	r1, #0
   2400c:	sub	r0, r1, r0
   24010:	str	r0, [fp, #-44]	; 0xffffffd4
   24014:	ldr	r0, [sp, #44]	; 0x2c
   24018:	sub	r0, r1, r0
   2401c:	str	r0, [fp, #-48]	; 0xffffffd0
   24020:	ldr	r0, [sp, #40]	; 0x28
   24024:	sub	r0, r1, r0
   24028:	str	r0, [sp, #52]	; 0x34
   2402c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24030:	cmp	r0, #0
   24034:	beq	24044 <__assert_fail@plt+0x12cc0>
   24038:	ldr	r0, [fp, #-16]
   2403c:	str	r0, [sp, #8]
   24040:	b	2404c <__assert_fail@plt+0x12cc8>
   24044:	ldr	r0, [fp, #-20]	; 0xffffffec
   24048:	str	r0, [sp, #8]
   2404c:	ldr	r0, [sp, #8]
   24050:	str	r0, [fp, #-24]	; 0xffffffe8
   24054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24058:	ldr	r1, [sp, #40]	; 0x28
   2405c:	add	r0, r0, r1
   24060:	ldr	r1, [fp, #-4]
   24064:	ldr	r1, [r1]
   24068:	cmp	r0, r1
   2406c:	ble	2408c <__assert_fail@plt+0x12d08>
   24070:	ldr	r0, [fp, #-4]
   24074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24078:	ldr	r2, [sp, #40]	; 0x28
   2407c:	add	r1, r1, r2
   24080:	bl	1d994 <__assert_fail@plt+0xc610>
   24084:	str	r0, [sp, #4]
   24088:	b	24098 <__assert_fail@plt+0x12d14>
   2408c:	ldr	r0, [fp, #-4]
   24090:	ldr	r0, [r0, #8]
   24094:	str	r0, [sp, #4]
   24098:	ldr	r0, [sp, #4]
   2409c:	str	r0, [fp, #-40]	; 0xffffffd8
   240a0:	ldr	r0, [fp, #-8]
   240a4:	ldr	r0, [r0, #8]
   240a8:	str	r0, [fp, #-32]	; 0xffffffe0
   240ac:	ldr	r0, [fp, #-12]
   240b0:	ldr	r0, [r0, #8]
   240b4:	str	r0, [fp, #-36]	; 0xffffffdc
   240b8:	movw	r0, #0
   240bc:	str	r0, [fp, #-28]	; 0xffffffe4
   240c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   240c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   240c8:	ldr	r0, [r0, r1, lsl #2]
   240cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   240d0:	eor	r0, r0, r1
   240d4:	ldr	r1, [sp, #48]	; 0x30
   240d8:	add	r0, r0, r1
   240dc:	str	r0, [sp, #36]	; 0x24
   240e0:	ldr	r0, [sp, #36]	; 0x24
   240e4:	ldr	r1, [sp, #48]	; 0x30
   240e8:	mov	r2, #0
   240ec:	cmp	r0, r1
   240f0:	mov	r0, r2
   240f4:	movwcc	r0, #1
   240f8:	str	r0, [sp, #48]	; 0x30
   240fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24104:	ldr	r0, [r0, r1, lsl #2]
   24108:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2410c:	eor	r0, r0, r1
   24110:	ldr	r1, [sp, #44]	; 0x2c
   24114:	add	r0, r0, r1
   24118:	str	r0, [sp, #32]
   2411c:	ldr	r0, [sp, #32]
   24120:	ldr	r1, [sp, #44]	; 0x2c
   24124:	cmp	r0, r1
   24128:	mov	r0, r2
   2412c:	movwcc	r0, #1
   24130:	str	r0, [sp, #44]	; 0x2c
   24134:	ldr	r0, [sp, #36]	; 0x24
   24138:	ldr	r1, [sp, #32]
   2413c:	and	r0, r0, r1
   24140:	ldr	r1, [sp, #52]	; 0x34
   24144:	eor	r0, r0, r1
   24148:	ldr	r1, [sp, #40]	; 0x28
   2414c:	add	r0, r0, r1
   24150:	str	r0, [sp, #28]
   24154:	ldr	r0, [sp, #28]
   24158:	ldr	r1, [sp, #40]	; 0x28
   2415c:	cmp	r0, r1
   24160:	movwcc	r2, #1
   24164:	str	r2, [sp, #40]	; 0x28
   24168:	ldr	r0, [sp, #28]
   2416c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24170:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24174:	add	r1, r1, r2, lsl #2
   24178:	str	r0, [r1]
   2417c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24180:	add	r0, r0, #1
   24184:	str	r0, [fp, #-28]	; 0xffffffe4
   24188:	ldr	r1, [fp, #-20]	; 0xffffffec
   2418c:	cmp	r0, r1
   24190:	blt	240c0 <__assert_fail@plt+0x12d3c>
   24194:	ldr	r0, [sp, #44]	; 0x2c
   24198:	cmp	r0, #0
   2419c:	bne	241a4 <__assert_fail@plt+0x12e20>
   241a0:	b	241c4 <__assert_fail@plt+0x12e40>
   241a4:	movw	r0, #32334	; 0x7e4e
   241a8:	movt	r0, #3
   241ac:	movw	r1, #30584	; 0x7778
   241b0:	movt	r1, #3
   241b4:	movw	r2, #3854	; 0xf0e
   241b8:	movw	r3, #32342	; 0x7e56
   241bc:	movt	r3, #3
   241c0:	bl	11384 <__assert_fail@plt>
   241c4:	b	241c8 <__assert_fail@plt+0x12e44>
   241c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   241cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   241d0:	cmp	r0, r1
   241d4:	bge	2426c <__assert_fail@plt+0x12ee8>
   241d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   241dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   241e0:	ldr	r0, [r0, r1, lsl #2]
   241e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   241e8:	eor	r0, r0, r1
   241ec:	ldr	r1, [sp, #48]	; 0x30
   241f0:	add	r0, r0, r1
   241f4:	str	r0, [sp, #36]	; 0x24
   241f8:	ldr	r0, [sp, #36]	; 0x24
   241fc:	ldr	r1, [sp, #48]	; 0x30
   24200:	mov	r2, #0
   24204:	cmp	r0, r1
   24208:	mov	r0, r2
   2420c:	movwcc	r0, #1
   24210:	str	r0, [sp, #48]	; 0x30
   24214:	ldr	r0, [sp, #36]	; 0x24
   24218:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2421c:	and	r0, r0, r1
   24220:	ldr	r1, [sp, #52]	; 0x34
   24224:	eor	r0, r0, r1
   24228:	ldr	r1, [sp, #40]	; 0x28
   2422c:	add	r0, r0, r1
   24230:	str	r0, [sp, #28]
   24234:	ldr	r0, [sp, #28]
   24238:	ldr	r1, [sp, #40]	; 0x28
   2423c:	cmp	r0, r1
   24240:	movwcc	r2, #1
   24244:	str	r2, [sp, #40]	; 0x28
   24248:	ldr	r0, [sp, #28]
   2424c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24250:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24254:	add	r1, r1, r2, lsl #2
   24258:	str	r0, [r1]
   2425c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24260:	add	r0, r0, #1
   24264:	str	r0, [fp, #-28]	; 0xffffffe4
   24268:	b	241c8 <__assert_fail@plt+0x12e44>
   2426c:	ldr	r0, [sp, #40]	; 0x28
   24270:	cmp	r0, #0
   24274:	beq	24298 <__assert_fail@plt+0x12f14>
   24278:	ldr	r0, [sp, #40]	; 0x28
   2427c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24280:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24284:	add	r3, r2, #1
   24288:	str	r3, [fp, #-24]	; 0xffffffe8
   2428c:	add	r1, r1, r2, lsl #2
   24290:	str	r0, [r1]
   24294:	b	242a8 <__assert_fail@plt+0x12f24>
   24298:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2429c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   242a0:	bl	1b4e4 <__assert_fail@plt+0xa160>
   242a4:	str	r0, [fp, #-24]	; 0xffffffe8
   242a8:	ldr	r0, [sp, #52]	; 0x34
   242ac:	cmp	r0, #0
   242b0:	beq	242c8 <__assert_fail@plt+0x12f44>
   242b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   242b8:	movw	r1, #0
   242bc:	sub	r0, r1, r0
   242c0:	str	r0, [sp]
   242c4:	b	242d0 <__assert_fail@plt+0x12f4c>
   242c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   242cc:	str	r0, [sp]
   242d0:	ldr	r0, [sp]
   242d4:	ldr	r1, [fp, #-4]
   242d8:	str	r0, [r1, #4]
   242dc:	mov	sp, fp
   242e0:	pop	{fp, pc}
   242e4:	push	{fp, lr}
   242e8:	mov	fp, sp
   242ec:	sub	sp, sp, #104	; 0x68
   242f0:	str	r0, [fp, #-4]
   242f4:	str	r1, [fp, #-8]
   242f8:	str	r2, [fp, #-12]
   242fc:	ldr	r0, [fp, #-8]
   24300:	ldr	r0, [r0, #4]
   24304:	cmp	r0, #0
   24308:	blt	2431c <__assert_fail@plt+0x12f98>
   2430c:	ldr	r0, [fp, #-8]
   24310:	ldr	r0, [r0, #4]
   24314:	str	r0, [sp, #16]
   24318:	b	24330 <__assert_fail@plt+0x12fac>
   2431c:	ldr	r0, [fp, #-8]
   24320:	ldr	r0, [r0, #4]
   24324:	movw	r1, #0
   24328:	sub	r0, r1, r0
   2432c:	str	r0, [sp, #16]
   24330:	ldr	r0, [sp, #16]
   24334:	str	r0, [fp, #-16]
   24338:	ldr	r0, [fp, #-12]
   2433c:	ldr	r0, [r0, #4]
   24340:	cmp	r0, #0
   24344:	blt	24358 <__assert_fail@plt+0x12fd4>
   24348:	ldr	r0, [fp, #-12]
   2434c:	ldr	r0, [r0, #4]
   24350:	str	r0, [sp, #12]
   24354:	b	2436c <__assert_fail@plt+0x12fe8>
   24358:	ldr	r0, [fp, #-12]
   2435c:	ldr	r0, [r0, #4]
   24360:	movw	r1, #0
   24364:	sub	r0, r1, r0
   24368:	str	r0, [sp, #12]
   2436c:	ldr	r0, [sp, #12]
   24370:	str	r0, [fp, #-20]	; 0xffffffec
   24374:	ldr	r0, [fp, #-16]
   24378:	ldr	r1, [fp, #-20]	; 0xffffffec
   2437c:	cmp	r0, r1
   24380:	bge	243c0 <__assert_fail@plt+0x1303c>
   24384:	b	24388 <__assert_fail@plt+0x13004>
   24388:	ldr	r0, [fp, #-8]
   2438c:	str	r0, [sp, #24]
   24390:	ldr	r0, [fp, #-12]
   24394:	str	r0, [fp, #-8]
   24398:	ldr	r0, [sp, #24]
   2439c:	str	r0, [fp, #-12]
   243a0:	b	243a4 <__assert_fail@plt+0x13020>
   243a4:	ldr	r0, [fp, #-16]
   243a8:	str	r0, [sp, #20]
   243ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   243b0:	str	r0, [fp, #-16]
   243b4:	ldr	r0, [sp, #20]
   243b8:	str	r0, [fp, #-20]	; 0xffffffec
   243bc:	b	243c0 <__assert_fail@plt+0x1303c>
   243c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   243c4:	cmp	r0, #0
   243c8:	bne	243dc <__assert_fail@plt+0x13058>
   243cc:	ldr	r0, [fp, #-4]
   243d0:	ldr	r1, [fp, #-8]
   243d4:	bl	1da84 <__assert_fail@plt+0xc700>
   243d8:	b	246fc <__assert_fail@plt+0x13378>
   243dc:	ldr	r0, [fp, #-8]
   243e0:	ldr	r0, [r0, #4]
   243e4:	cmp	r0, #0
   243e8:	movw	r0, #0
   243ec:	movlt	r0, #1
   243f0:	and	r0, r0, #1
   243f4:	str	r0, [sp, #48]	; 0x30
   243f8:	ldr	r0, [fp, #-12]
   243fc:	ldr	r0, [r0, #4]
   24400:	cmp	r0, #0
   24404:	movw	r0, #0
   24408:	movlt	r0, #1
   2440c:	and	r0, r0, #1
   24410:	str	r0, [sp, #44]	; 0x2c
   24414:	ldr	r0, [sp, #48]	; 0x30
   24418:	ldr	r1, [sp, #44]	; 0x2c
   2441c:	orr	r0, r0, r1
   24420:	str	r0, [sp, #40]	; 0x28
   24424:	ldr	r0, [sp, #48]	; 0x30
   24428:	movw	r1, #0
   2442c:	sub	r0, r1, r0
   24430:	str	r0, [fp, #-44]	; 0xffffffd4
   24434:	ldr	r0, [sp, #44]	; 0x2c
   24438:	sub	r0, r1, r0
   2443c:	str	r0, [fp, #-48]	; 0xffffffd0
   24440:	ldr	r0, [sp, #40]	; 0x28
   24444:	sub	r0, r1, r0
   24448:	str	r0, [sp, #52]	; 0x34
   2444c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24450:	cmp	r0, #0
   24454:	beq	24464 <__assert_fail@plt+0x130e0>
   24458:	ldr	r0, [fp, #-20]	; 0xffffffec
   2445c:	str	r0, [sp, #8]
   24460:	b	2446c <__assert_fail@plt+0x130e8>
   24464:	ldr	r0, [fp, #-16]
   24468:	str	r0, [sp, #8]
   2446c:	ldr	r0, [sp, #8]
   24470:	str	r0, [fp, #-24]	; 0xffffffe8
   24474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24478:	ldr	r1, [sp, #40]	; 0x28
   2447c:	add	r0, r0, r1
   24480:	ldr	r1, [fp, #-4]
   24484:	ldr	r1, [r1]
   24488:	cmp	r0, r1
   2448c:	ble	244ac <__assert_fail@plt+0x13128>
   24490:	ldr	r0, [fp, #-4]
   24494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24498:	ldr	r2, [sp, #40]	; 0x28
   2449c:	add	r1, r1, r2
   244a0:	bl	1d994 <__assert_fail@plt+0xc610>
   244a4:	str	r0, [sp, #4]
   244a8:	b	244b8 <__assert_fail@plt+0x13134>
   244ac:	ldr	r0, [fp, #-4]
   244b0:	ldr	r0, [r0, #8]
   244b4:	str	r0, [sp, #4]
   244b8:	ldr	r0, [sp, #4]
   244bc:	str	r0, [fp, #-40]	; 0xffffffd8
   244c0:	ldr	r0, [fp, #-8]
   244c4:	ldr	r0, [r0, #8]
   244c8:	str	r0, [fp, #-32]	; 0xffffffe0
   244cc:	ldr	r0, [fp, #-12]
   244d0:	ldr	r0, [r0, #8]
   244d4:	str	r0, [fp, #-36]	; 0xffffffdc
   244d8:	movw	r0, #0
   244dc:	str	r0, [fp, #-28]	; 0xffffffe4
   244e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   244e8:	ldr	r0, [r0, r1, lsl #2]
   244ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   244f0:	eor	r0, r0, r1
   244f4:	ldr	r1, [sp, #48]	; 0x30
   244f8:	add	r0, r0, r1
   244fc:	str	r0, [sp, #36]	; 0x24
   24500:	ldr	r0, [sp, #36]	; 0x24
   24504:	ldr	r1, [sp, #48]	; 0x30
   24508:	mov	r2, #0
   2450c:	cmp	r0, r1
   24510:	mov	r0, r2
   24514:	movwcc	r0, #1
   24518:	str	r0, [sp, #48]	; 0x30
   2451c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24520:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24524:	ldr	r0, [r0, r1, lsl #2]
   24528:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2452c:	eor	r0, r0, r1
   24530:	ldr	r1, [sp, #44]	; 0x2c
   24534:	add	r0, r0, r1
   24538:	str	r0, [sp, #32]
   2453c:	ldr	r0, [sp, #32]
   24540:	ldr	r1, [sp, #44]	; 0x2c
   24544:	cmp	r0, r1
   24548:	mov	r0, r2
   2454c:	movwcc	r0, #1
   24550:	str	r0, [sp, #44]	; 0x2c
   24554:	ldr	r0, [sp, #36]	; 0x24
   24558:	ldr	r1, [sp, #32]
   2455c:	orr	r0, r0, r1
   24560:	ldr	r1, [sp, #52]	; 0x34
   24564:	eor	r0, r0, r1
   24568:	ldr	r1, [sp, #40]	; 0x28
   2456c:	add	r0, r0, r1
   24570:	str	r0, [sp, #28]
   24574:	ldr	r0, [sp, #28]
   24578:	ldr	r1, [sp, #40]	; 0x28
   2457c:	cmp	r0, r1
   24580:	movwcc	r2, #1
   24584:	str	r2, [sp, #40]	; 0x28
   24588:	ldr	r0, [sp, #28]
   2458c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24590:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24594:	add	r1, r1, r2, lsl #2
   24598:	str	r0, [r1]
   2459c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   245a0:	add	r0, r0, #1
   245a4:	str	r0, [fp, #-28]	; 0xffffffe4
   245a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   245ac:	cmp	r0, r1
   245b0:	blt	244e0 <__assert_fail@plt+0x1315c>
   245b4:	ldr	r0, [sp, #44]	; 0x2c
   245b8:	cmp	r0, #0
   245bc:	bne	245c4 <__assert_fail@plt+0x13240>
   245c0:	b	245e4 <__assert_fail@plt+0x13260>
   245c4:	movw	r0, #32334	; 0x7e4e
   245c8:	movt	r0, #3
   245cc:	movw	r1, #30584	; 0x7778
   245d0:	movt	r1, #3
   245d4:	movw	r2, #3927	; 0xf57
   245d8:	movw	r3, #32415	; 0x7e9f
   245dc:	movt	r3, #3
   245e0:	bl	11384 <__assert_fail@plt>
   245e4:	b	245e8 <__assert_fail@plt+0x13264>
   245e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   245ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   245f0:	cmp	r0, r1
   245f4:	bge	2468c <__assert_fail@plt+0x13308>
   245f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   245fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24600:	ldr	r0, [r0, r1, lsl #2]
   24604:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24608:	eor	r0, r0, r1
   2460c:	ldr	r1, [sp, #48]	; 0x30
   24610:	add	r0, r0, r1
   24614:	str	r0, [sp, #36]	; 0x24
   24618:	ldr	r0, [sp, #36]	; 0x24
   2461c:	ldr	r1, [sp, #48]	; 0x30
   24620:	mov	r2, #0
   24624:	cmp	r0, r1
   24628:	mov	r0, r2
   2462c:	movwcc	r0, #1
   24630:	str	r0, [sp, #48]	; 0x30
   24634:	ldr	r0, [sp, #36]	; 0x24
   24638:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2463c:	orr	r0, r0, r1
   24640:	ldr	r1, [sp, #52]	; 0x34
   24644:	eor	r0, r0, r1
   24648:	ldr	r1, [sp, #40]	; 0x28
   2464c:	add	r0, r0, r1
   24650:	str	r0, [sp, #28]
   24654:	ldr	r0, [sp, #28]
   24658:	ldr	r1, [sp, #40]	; 0x28
   2465c:	cmp	r0, r1
   24660:	movwcc	r2, #1
   24664:	str	r2, [sp, #40]	; 0x28
   24668:	ldr	r0, [sp, #28]
   2466c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24670:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24674:	add	r1, r1, r2, lsl #2
   24678:	str	r0, [r1]
   2467c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24680:	add	r0, r0, #1
   24684:	str	r0, [fp, #-28]	; 0xffffffe4
   24688:	b	245e8 <__assert_fail@plt+0x13264>
   2468c:	ldr	r0, [sp, #40]	; 0x28
   24690:	cmp	r0, #0
   24694:	beq	246b8 <__assert_fail@plt+0x13334>
   24698:	ldr	r0, [sp, #40]	; 0x28
   2469c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   246a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   246a4:	add	r3, r2, #1
   246a8:	str	r3, [fp, #-24]	; 0xffffffe8
   246ac:	add	r1, r1, r2, lsl #2
   246b0:	str	r0, [r1]
   246b4:	b	246c8 <__assert_fail@plt+0x13344>
   246b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   246bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   246c0:	bl	1b4e4 <__assert_fail@plt+0xa160>
   246c4:	str	r0, [fp, #-24]	; 0xffffffe8
   246c8:	ldr	r0, [sp, #52]	; 0x34
   246cc:	cmp	r0, #0
   246d0:	beq	246e8 <__assert_fail@plt+0x13364>
   246d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   246d8:	movw	r1, #0
   246dc:	sub	r0, r1, r0
   246e0:	str	r0, [sp]
   246e4:	b	246f0 <__assert_fail@plt+0x1336c>
   246e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   246ec:	str	r0, [sp]
   246f0:	ldr	r0, [sp]
   246f4:	ldr	r1, [fp, #-4]
   246f8:	str	r0, [r1, #4]
   246fc:	mov	sp, fp
   24700:	pop	{fp, pc}
   24704:	push	{fp, lr}
   24708:	mov	fp, sp
   2470c:	sub	sp, sp, #96	; 0x60
   24710:	str	r0, [fp, #-4]
   24714:	str	r1, [fp, #-8]
   24718:	str	r2, [fp, #-12]
   2471c:	ldr	r0, [fp, #-8]
   24720:	ldr	r0, [r0, #4]
   24724:	cmp	r0, #0
   24728:	blt	2473c <__assert_fail@plt+0x133b8>
   2472c:	ldr	r0, [fp, #-8]
   24730:	ldr	r0, [r0, #4]
   24734:	str	r0, [sp, #12]
   24738:	b	24750 <__assert_fail@plt+0x133cc>
   2473c:	ldr	r0, [fp, #-8]
   24740:	ldr	r0, [r0, #4]
   24744:	movw	r1, #0
   24748:	sub	r0, r1, r0
   2474c:	str	r0, [sp, #12]
   24750:	ldr	r0, [sp, #12]
   24754:	str	r0, [fp, #-16]
   24758:	ldr	r0, [fp, #-12]
   2475c:	ldr	r0, [r0, #4]
   24760:	cmp	r0, #0
   24764:	blt	24778 <__assert_fail@plt+0x133f4>
   24768:	ldr	r0, [fp, #-12]
   2476c:	ldr	r0, [r0, #4]
   24770:	str	r0, [sp, #8]
   24774:	b	2478c <__assert_fail@plt+0x13408>
   24778:	ldr	r0, [fp, #-12]
   2477c:	ldr	r0, [r0, #4]
   24780:	movw	r1, #0
   24784:	sub	r0, r1, r0
   24788:	str	r0, [sp, #8]
   2478c:	ldr	r0, [sp, #8]
   24790:	str	r0, [fp, #-20]	; 0xffffffec
   24794:	ldr	r0, [fp, #-16]
   24798:	ldr	r1, [fp, #-20]	; 0xffffffec
   2479c:	cmp	r0, r1
   247a0:	bge	247e0 <__assert_fail@plt+0x1345c>
   247a4:	b	247a8 <__assert_fail@plt+0x13424>
   247a8:	ldr	r0, [fp, #-8]
   247ac:	str	r0, [sp, #20]
   247b0:	ldr	r0, [fp, #-12]
   247b4:	str	r0, [fp, #-8]
   247b8:	ldr	r0, [sp, #20]
   247bc:	str	r0, [fp, #-12]
   247c0:	b	247c4 <__assert_fail@plt+0x13440>
   247c4:	ldr	r0, [fp, #-16]
   247c8:	str	r0, [sp, #16]
   247cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   247d0:	str	r0, [fp, #-16]
   247d4:	ldr	r0, [sp, #16]
   247d8:	str	r0, [fp, #-20]	; 0xffffffec
   247dc:	b	247e0 <__assert_fail@plt+0x1345c>
   247e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   247e4:	cmp	r0, #0
   247e8:	bne	247fc <__assert_fail@plt+0x13478>
   247ec:	ldr	r0, [fp, #-4]
   247f0:	ldr	r1, [fp, #-8]
   247f4:	bl	1da84 <__assert_fail@plt+0xc700>
   247f8:	b	24aec <__assert_fail@plt+0x13768>
   247fc:	ldr	r0, [fp, #-8]
   24800:	ldr	r0, [r0, #4]
   24804:	cmp	r0, #0
   24808:	movw	r0, #0
   2480c:	movlt	r0, #1
   24810:	and	r0, r0, #1
   24814:	str	r0, [sp, #44]	; 0x2c
   24818:	ldr	r0, [fp, #-12]
   2481c:	ldr	r0, [r0, #4]
   24820:	cmp	r0, #0
   24824:	movw	r0, #0
   24828:	movlt	r0, #1
   2482c:	and	r0, r0, #1
   24830:	str	r0, [sp, #40]	; 0x28
   24834:	ldr	r0, [sp, #44]	; 0x2c
   24838:	ldr	r1, [sp, #40]	; 0x28
   2483c:	eor	r0, r0, r1
   24840:	str	r0, [sp, #36]	; 0x24
   24844:	ldr	r0, [sp, #44]	; 0x2c
   24848:	movw	r1, #0
   2484c:	sub	r0, r1, r0
   24850:	str	r0, [fp, #-40]	; 0xffffffd8
   24854:	ldr	r0, [sp, #40]	; 0x28
   24858:	sub	r0, r1, r0
   2485c:	str	r0, [fp, #-44]	; 0xffffffd4
   24860:	ldr	r0, [sp, #36]	; 0x24
   24864:	sub	r0, r1, r0
   24868:	str	r0, [sp, #48]	; 0x30
   2486c:	ldr	r0, [fp, #-16]
   24870:	ldr	r1, [sp, #36]	; 0x24
   24874:	add	r0, r0, r1
   24878:	ldr	r1, [fp, #-4]
   2487c:	ldr	r1, [r1]
   24880:	cmp	r0, r1
   24884:	ble	248a4 <__assert_fail@plt+0x13520>
   24888:	ldr	r0, [fp, #-4]
   2488c:	ldr	r1, [fp, #-16]
   24890:	ldr	r2, [sp, #36]	; 0x24
   24894:	add	r1, r1, r2
   24898:	bl	1d994 <__assert_fail@plt+0xc610>
   2489c:	str	r0, [sp, #4]
   248a0:	b	248b0 <__assert_fail@plt+0x1352c>
   248a4:	ldr	r0, [fp, #-4]
   248a8:	ldr	r0, [r0, #8]
   248ac:	str	r0, [sp, #4]
   248b0:	ldr	r0, [sp, #4]
   248b4:	str	r0, [fp, #-36]	; 0xffffffdc
   248b8:	ldr	r0, [fp, #-8]
   248bc:	ldr	r0, [r0, #8]
   248c0:	str	r0, [fp, #-28]	; 0xffffffe4
   248c4:	ldr	r0, [fp, #-12]
   248c8:	ldr	r0, [r0, #8]
   248cc:	str	r0, [fp, #-32]	; 0xffffffe0
   248d0:	movw	r0, #0
   248d4:	str	r0, [fp, #-24]	; 0xffffffe8
   248d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   248dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   248e0:	ldr	r0, [r0, r1, lsl #2]
   248e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   248e8:	eor	r0, r0, r1
   248ec:	ldr	r1, [sp, #44]	; 0x2c
   248f0:	add	r0, r0, r1
   248f4:	str	r0, [sp, #32]
   248f8:	ldr	r0, [sp, #32]
   248fc:	ldr	r1, [sp, #44]	; 0x2c
   24900:	mov	r2, #0
   24904:	cmp	r0, r1
   24908:	mov	r0, r2
   2490c:	movwcc	r0, #1
   24910:	str	r0, [sp, #44]	; 0x2c
   24914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2491c:	ldr	r0, [r0, r1, lsl #2]
   24920:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24924:	eor	r0, r0, r1
   24928:	ldr	r1, [sp, #40]	; 0x28
   2492c:	add	r0, r0, r1
   24930:	str	r0, [sp, #28]
   24934:	ldr	r0, [sp, #28]
   24938:	ldr	r1, [sp, #40]	; 0x28
   2493c:	cmp	r0, r1
   24940:	mov	r0, r2
   24944:	movwcc	r0, #1
   24948:	str	r0, [sp, #40]	; 0x28
   2494c:	ldr	r0, [sp, #32]
   24950:	ldr	r1, [sp, #28]
   24954:	eor	r0, r0, r1
   24958:	ldr	r1, [sp, #48]	; 0x30
   2495c:	eor	r0, r0, r1
   24960:	ldr	r1, [sp, #36]	; 0x24
   24964:	add	r0, r0, r1
   24968:	str	r0, [sp, #24]
   2496c:	ldr	r0, [sp, #24]
   24970:	ldr	r1, [sp, #36]	; 0x24
   24974:	cmp	r0, r1
   24978:	movwcc	r2, #1
   2497c:	str	r2, [sp, #36]	; 0x24
   24980:	ldr	r0, [sp, #24]
   24984:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2498c:	add	r1, r1, r2, lsl #2
   24990:	str	r0, [r1]
   24994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24998:	add	r0, r0, #1
   2499c:	str	r0, [fp, #-24]	; 0xffffffe8
   249a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   249a4:	cmp	r0, r1
   249a8:	blt	248d8 <__assert_fail@plt+0x13554>
   249ac:	ldr	r0, [sp, #40]	; 0x28
   249b0:	cmp	r0, #0
   249b4:	bne	249bc <__assert_fail@plt+0x13638>
   249b8:	b	249dc <__assert_fail@plt+0x13658>
   249bc:	movw	r0, #32334	; 0x7e4e
   249c0:	movt	r0, #3
   249c4:	movw	r1, #30584	; 0x7778
   249c8:	movt	r1, #3
   249cc:	movw	r2, #3996	; 0xf9c
   249d0:	movw	r3, #32488	; 0x7ee8
   249d4:	movt	r3, #3
   249d8:	bl	11384 <__assert_fail@plt>
   249dc:	b	249e0 <__assert_fail@plt+0x1365c>
   249e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   249e4:	ldr	r1, [fp, #-16]
   249e8:	cmp	r0, r1
   249ec:	bge	24a7c <__assert_fail@plt+0x136f8>
   249f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   249f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   249f8:	ldr	r0, [r0, r1, lsl #2]
   249fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24a00:	eor	r0, r0, r1
   24a04:	ldr	r1, [sp, #44]	; 0x2c
   24a08:	add	r0, r0, r1
   24a0c:	str	r0, [sp, #32]
   24a10:	ldr	r0, [sp, #32]
   24a14:	ldr	r1, [sp, #44]	; 0x2c
   24a18:	mov	r2, #0
   24a1c:	cmp	r0, r1
   24a20:	mov	r0, r2
   24a24:	movwcc	r0, #1
   24a28:	str	r0, [sp, #44]	; 0x2c
   24a2c:	ldr	r0, [sp, #32]
   24a30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24a34:	eor	r0, r0, r1
   24a38:	ldr	r1, [sp, #36]	; 0x24
   24a3c:	add	r0, r0, r1
   24a40:	str	r0, [sp, #24]
   24a44:	ldr	r0, [sp, #24]
   24a48:	ldr	r1, [sp, #36]	; 0x24
   24a4c:	cmp	r0, r1
   24a50:	movwcc	r2, #1
   24a54:	str	r2, [sp, #36]	; 0x24
   24a58:	ldr	r0, [sp, #24]
   24a5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24a60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24a64:	add	r1, r1, r2, lsl #2
   24a68:	str	r0, [r1]
   24a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24a70:	add	r0, r0, #1
   24a74:	str	r0, [fp, #-24]	; 0xffffffe8
   24a78:	b	249e0 <__assert_fail@plt+0x1365c>
   24a7c:	ldr	r0, [sp, #36]	; 0x24
   24a80:	cmp	r0, #0
   24a84:	beq	24aa8 <__assert_fail@plt+0x13724>
   24a88:	ldr	r0, [sp, #36]	; 0x24
   24a8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24a90:	ldr	r2, [fp, #-16]
   24a94:	add	r3, r2, #1
   24a98:	str	r3, [fp, #-16]
   24a9c:	add	r1, r1, r2, lsl #2
   24aa0:	str	r0, [r1]
   24aa4:	b	24ab8 <__assert_fail@plt+0x13734>
   24aa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24aac:	ldr	r1, [fp, #-16]
   24ab0:	bl	1b4e4 <__assert_fail@plt+0xa160>
   24ab4:	str	r0, [fp, #-16]
   24ab8:	ldr	r0, [sp, #48]	; 0x30
   24abc:	cmp	r0, #0
   24ac0:	beq	24ad8 <__assert_fail@plt+0x13754>
   24ac4:	ldr	r0, [fp, #-16]
   24ac8:	movw	r1, #0
   24acc:	sub	r0, r1, r0
   24ad0:	str	r0, [sp]
   24ad4:	b	24ae0 <__assert_fail@plt+0x1375c>
   24ad8:	ldr	r0, [fp, #-16]
   24adc:	str	r0, [sp]
   24ae0:	ldr	r0, [sp]
   24ae4:	ldr	r1, [fp, #-4]
   24ae8:	str	r0, [r1, #4]
   24aec:	mov	sp, fp
   24af0:	pop	{fp, pc}
   24af4:	push	{fp, lr}
   24af8:	mov	fp, sp
   24afc:	sub	sp, sp, #16
   24b00:	str	r0, [fp, #-4]
   24b04:	str	r1, [sp, #8]
   24b08:	movw	r0, #0
   24b0c:	str	r0, [sp]
   24b10:	str	r0, [sp, #4]
   24b14:	ldr	r0, [sp, #4]
   24b18:	ldr	r1, [sp, #8]
   24b1c:	cmp	r0, r1
   24b20:	bge	24b54 <__assert_fail@plt+0x137d0>
   24b24:	ldr	r0, [fp, #-4]
   24b28:	ldr	r1, [sp, #4]
   24b2c:	add	r0, r0, r1, lsl #2
   24b30:	ldr	r0, [r0]
   24b34:	bl	24b60 <__assert_fail@plt+0x137dc>
   24b38:	ldr	r1, [sp]
   24b3c:	add	r0, r1, r0
   24b40:	str	r0, [sp]
   24b44:	ldr	r0, [sp, #4]
   24b48:	add	r0, r0, #1
   24b4c:	str	r0, [sp, #4]
   24b50:	b	24b14 <__assert_fail@plt+0x13790>
   24b54:	ldr	r0, [sp]
   24b58:	mov	sp, fp
   24b5c:	pop	{fp, pc}
   24b60:	sub	sp, sp, #16
   24b64:	str	r0, [sp, #12]
   24b68:	movw	r0, #16
   24b6c:	str	r0, [sp, #4]
   24b70:	movw	r0, #0
   24b74:	str	r0, [sp, #8]
   24b78:	ldr	r0, [sp, #12]
   24b7c:	cmp	r0, #0
   24b80:	bls	24c30 <__assert_fail@plt+0x138ac>
   24b84:	ldr	r0, [sp, #12]
   24b88:	ldr	r1, [sp, #12]
   24b8c:	lsr	r1, r1, #1
   24b90:	movw	r2, #21845	; 0x5555
   24b94:	and	r1, r1, r2
   24b98:	sub	r0, r0, r1
   24b9c:	str	r0, [sp]
   24ba0:	ldr	r0, [sp]
   24ba4:	lsr	r0, r0, #2
   24ba8:	movw	r1, #13107	; 0x3333
   24bac:	and	r0, r0, r1
   24bb0:	ldr	r2, [sp]
   24bb4:	and	r1, r2, r1
   24bb8:	add	r0, r0, r1
   24bbc:	str	r0, [sp]
   24bc0:	ldr	r0, [sp]
   24bc4:	lsr	r0, r0, #4
   24bc8:	ldr	r1, [sp]
   24bcc:	add	r0, r0, r1
   24bd0:	str	r0, [sp]
   24bd4:	ldr	r0, [sp]
   24bd8:	lsr	r0, r0, #8
   24bdc:	and	r0, r0, #15
   24be0:	ldr	r1, [sp]
   24be4:	and	r1, r1, #15
   24be8:	add	r0, r0, r1
   24bec:	str	r0, [sp]
   24bf0:	ldr	r0, [sp]
   24bf4:	ldr	r1, [sp, #8]
   24bf8:	add	r0, r1, r0
   24bfc:	str	r0, [sp, #8]
   24c00:	ldr	r0, [sp, #4]
   24c04:	movw	r1, #32
   24c08:	cmp	r1, r0
   24c0c:	bls	24c24 <__assert_fail@plt+0x138a0>
   24c10:	ldr	r0, [sp, #4]
   24c14:	ldr	r1, [sp, #12]
   24c18:	lsr	r0, r1, r0
   24c1c:	str	r0, [sp, #12]
   24c20:	b	24c2c <__assert_fail@plt+0x138a8>
   24c24:	movw	r0, #0
   24c28:	str	r0, [sp, #12]
   24c2c:	b	24b78 <__assert_fail@plt+0x137f4>
   24c30:	ldr	r0, [sp, #8]
   24c34:	add	sp, sp, #16
   24c38:	bx	lr
   24c3c:	push	{fp, lr}
   24c40:	mov	fp, sp
   24c44:	sub	sp, sp, #16
   24c48:	str	r0, [sp, #8]
   24c4c:	ldr	r0, [sp, #8]
   24c50:	ldr	r0, [r0, #4]
   24c54:	str	r0, [sp, #4]
   24c58:	ldr	r0, [sp, #4]
   24c5c:	cmp	r0, #0
   24c60:	bge	24c70 <__assert_fail@plt+0x138ec>
   24c64:	mvn	r0, #0
   24c68:	str	r0, [fp, #-4]
   24c6c:	b	24c84 <__assert_fail@plt+0x13900>
   24c70:	ldr	r0, [sp, #8]
   24c74:	ldr	r0, [r0, #8]
   24c78:	ldr	r1, [sp, #4]
   24c7c:	bl	24af4 <__assert_fail@plt+0x13770>
   24c80:	str	r0, [fp, #-4]
   24c84:	ldr	r0, [fp, #-4]
   24c88:	mov	sp, fp
   24c8c:	pop	{fp, pc}
   24c90:	push	{fp, lr}
   24c94:	mov	fp, sp
   24c98:	sub	sp, sp, #64	; 0x40
   24c9c:	str	r0, [fp, #-8]
   24ca0:	str	r1, [fp, #-12]
   24ca4:	ldr	r0, [fp, #-8]
   24ca8:	ldr	r0, [r0, #4]
   24cac:	str	r0, [fp, #-16]
   24cb0:	ldr	r0, [fp, #-12]
   24cb4:	ldr	r0, [r0, #4]
   24cb8:	str	r0, [fp, #-20]	; 0xffffffec
   24cbc:	ldr	r0, [fp, #-16]
   24cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   24cc4:	eor	r0, r0, r1
   24cc8:	cmp	r0, #0
   24ccc:	bge	24cdc <__assert_fail@plt+0x13958>
   24cd0:	mvn	r0, #0
   24cd4:	str	r0, [fp, #-4]
   24cd8:	b	24f40 <__assert_fail@plt+0x13bbc>
   24cdc:	ldr	r0, [fp, #-16]
   24ce0:	cmp	r0, #0
   24ce4:	movw	r0, #0
   24ce8:	movlt	r0, #1
   24cec:	and	r0, r0, #1
   24cf0:	str	r0, [sp, #32]
   24cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   24cf8:	movw	r1, #0
   24cfc:	sub	r0, r1, r0
   24d00:	str	r0, [sp, #20]
   24d04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24d08:	cmp	r0, #0
   24d0c:	beq	24d5c <__assert_fail@plt+0x139d8>
   24d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   24d14:	cmp	r0, #0
   24d18:	bge	24d20 <__assert_fail@plt+0x1399c>
   24d1c:	b	24d40 <__assert_fail@plt+0x139bc>
   24d20:	movw	r0, #32561	; 0x7f31
   24d24:	movt	r0, #3
   24d28:	movw	r1, #30584	; 0x7778
   24d2c:	movt	r1, #3
   24d30:	movw	r2, #4079	; 0xfef
   24d34:	movw	r3, #32568	; 0x7f38
   24d38:	movt	r3, #3
   24d3c:	bl	11384 <__assert_fail@plt>
   24d40:	ldr	r0, [fp, #-16]
   24d44:	movw	r1, #0
   24d48:	sub	r0, r1, r0
   24d4c:	str	r0, [fp, #-16]
   24d50:	ldr	r0, [fp, #-20]	; 0xffffffec
   24d54:	sub	r0, r1, r0
   24d58:	str	r0, [fp, #-20]	; 0xffffffec
   24d5c:	ldr	r0, [fp, #-8]
   24d60:	ldr	r0, [r0, #8]
   24d64:	str	r0, [sp, #16]
   24d68:	ldr	r0, [fp, #-12]
   24d6c:	ldr	r0, [r0, #8]
   24d70:	str	r0, [sp, #12]
   24d74:	ldr	r0, [fp, #-16]
   24d78:	ldr	r1, [fp, #-20]	; 0xffffffec
   24d7c:	cmp	r0, r1
   24d80:	bge	24dc8 <__assert_fail@plt+0x13a44>
   24d84:	b	24d88 <__assert_fail@plt+0x13a04>
   24d88:	b	24d8c <__assert_fail@plt+0x13a08>
   24d8c:	ldr	r0, [sp, #16]
   24d90:	str	r0, [sp, #4]
   24d94:	ldr	r0, [sp, #12]
   24d98:	str	r0, [sp, #16]
   24d9c:	ldr	r0, [sp, #4]
   24da0:	str	r0, [sp, #12]
   24da4:	b	24da8 <__assert_fail@plt+0x13a24>
   24da8:	ldr	r0, [fp, #-16]
   24dac:	str	r0, [sp]
   24db0:	ldr	r0, [fp, #-20]	; 0xffffffec
   24db4:	str	r0, [fp, #-16]
   24db8:	ldr	r0, [sp]
   24dbc:	str	r0, [fp, #-20]	; 0xffffffec
   24dc0:	b	24dc4 <__assert_fail@plt+0x13a40>
   24dc4:	b	24dc8 <__assert_fail@plt+0x13a44>
   24dc8:	movw	r0, #0
   24dcc:	str	r0, [fp, #-24]	; 0xffffffe8
   24dd0:	str	r0, [sp, #8]
   24dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24dd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   24ddc:	cmp	r0, r1
   24de0:	bge	24e88 <__assert_fail@plt+0x13b04>
   24de4:	ldr	r0, [sp, #16]
   24de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24dec:	ldr	r0, [r0, r1, lsl #2]
   24df0:	ldr	r1, [sp, #20]
   24df4:	eor	r0, r0, r1
   24df8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24dfc:	add	r0, r0, r1
   24e00:	str	r0, [sp, #28]
   24e04:	ldr	r0, [sp, #28]
   24e08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24e0c:	mov	r2, #0
   24e10:	cmp	r0, r1
   24e14:	movwcc	r2, #1
   24e18:	str	r2, [fp, #-28]	; 0xffffffe4
   24e1c:	ldr	r0, [sp, #12]
   24e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24e24:	add	r0, r0, r1, lsl #2
   24e28:	ldr	r0, [r0]
   24e2c:	ldr	r1, [sp, #20]
   24e30:	eor	r0, r0, r1
   24e34:	ldr	r1, [sp, #32]
   24e38:	add	r0, r0, r1
   24e3c:	str	r0, [sp, #24]
   24e40:	ldr	r0, [sp, #24]
   24e44:	ldr	r1, [sp, #32]
   24e48:	cmp	r0, r1
   24e4c:	movw	r0, #0
   24e50:	movcc	r0, #1
   24e54:	and	r0, r0, #1
   24e58:	str	r0, [sp, #32]
   24e5c:	ldr	r0, [sp, #28]
   24e60:	ldr	r1, [sp, #24]
   24e64:	eor	r0, r0, r1
   24e68:	bl	24b60 <__assert_fail@plt+0x137dc>
   24e6c:	ldr	r1, [sp, #8]
   24e70:	add	r0, r1, r0
   24e74:	str	r0, [sp, #8]
   24e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24e7c:	add	r0, r0, #1
   24e80:	str	r0, [fp, #-24]	; 0xffffffe8
   24e84:	b	24dd4 <__assert_fail@plt+0x13a50>
   24e88:	ldr	r0, [sp, #32]
   24e8c:	cmp	r0, #0
   24e90:	bne	24e98 <__assert_fail@plt+0x13b14>
   24e94:	b	24eb8 <__assert_fail@plt+0x13b34>
   24e98:	movw	r0, #32334	; 0x7e4e
   24e9c:	movt	r0, #3
   24ea0:	movw	r1, #30584	; 0x7778
   24ea4:	movt	r1, #3
   24ea8:	movw	r2, #4100	; 0x1004
   24eac:	movw	r3, #32568	; 0x7f38
   24eb0:	movt	r3, #3
   24eb4:	bl	11384 <__assert_fail@plt>
   24eb8:	b	24ebc <__assert_fail@plt+0x13b38>
   24ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24ec0:	ldr	r1, [fp, #-16]
   24ec4:	cmp	r0, r1
   24ec8:	bge	24f38 <__assert_fail@plt+0x13bb4>
   24ecc:	ldr	r0, [sp, #16]
   24ed0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24ed4:	add	r0, r0, r1, lsl #2
   24ed8:	ldr	r0, [r0]
   24edc:	ldr	r1, [sp, #20]
   24ee0:	eor	r0, r0, r1
   24ee4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24ee8:	add	r0, r0, r1
   24eec:	str	r0, [sp, #28]
   24ef0:	ldr	r0, [sp, #28]
   24ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24ef8:	cmp	r0, r1
   24efc:	movw	r0, #0
   24f00:	movcc	r0, #1
   24f04:	and	r0, r0, #1
   24f08:	str	r0, [fp, #-28]	; 0xffffffe4
   24f0c:	ldr	r0, [sp, #28]
   24f10:	ldr	r1, [sp, #20]
   24f14:	eor	r0, r0, r1
   24f18:	bl	24b60 <__assert_fail@plt+0x137dc>
   24f1c:	ldr	r1, [sp, #8]
   24f20:	add	r0, r1, r0
   24f24:	str	r0, [sp, #8]
   24f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24f2c:	add	r0, r0, #1
   24f30:	str	r0, [fp, #-24]	; 0xffffffe8
   24f34:	b	24ebc <__assert_fail@plt+0x13b38>
   24f38:	ldr	r0, [sp, #8]
   24f3c:	str	r0, [fp, #-4]
   24f40:	ldr	r0, [fp, #-4]
   24f44:	mov	sp, fp
   24f48:	pop	{fp, pc}
   24f4c:	push	{fp, lr}
   24f50:	mov	fp, sp
   24f54:	sub	sp, sp, #48	; 0x30
   24f58:	str	r0, [fp, #-8]
   24f5c:	str	r1, [fp, #-12]
   24f60:	ldr	r0, [fp, #-8]
   24f64:	ldr	r0, [r0, #4]
   24f68:	str	r0, [fp, #-20]	; 0xffffffec
   24f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24f70:	cmp	r0, #0
   24f74:	blt	24f84 <__assert_fail@plt+0x13c00>
   24f78:	ldr	r0, [fp, #-20]	; 0xffffffec
   24f7c:	str	r0, [sp, #8]
   24f80:	b	24f94 <__assert_fail@plt+0x13c10>
   24f84:	ldr	r0, [fp, #-20]	; 0xffffffec
   24f88:	movw	r1, #0
   24f8c:	sub	r0, r1, r0
   24f90:	str	r0, [sp, #8]
   24f94:	ldr	r0, [sp, #8]
   24f98:	str	r0, [sp, #24]
   24f9c:	ldr	r0, [fp, #-12]
   24fa0:	lsr	r0, r0, #5
   24fa4:	str	r0, [sp, #20]
   24fa8:	ldr	r0, [sp, #20]
   24fac:	ldr	r1, [sp, #24]
   24fb0:	cmp	r0, r1
   24fb4:	blt	24fe4 <__assert_fail@plt+0x13c60>
   24fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   24fbc:	cmp	r0, #0
   24fc0:	blt	24fd0 <__assert_fail@plt+0x13c4c>
   24fc4:	mvn	r0, #0
   24fc8:	str	r0, [sp, #4]
   24fcc:	b	24fd8 <__assert_fail@plt+0x13c54>
   24fd0:	ldr	r0, [fp, #-12]
   24fd4:	str	r0, [sp, #4]
   24fd8:	ldr	r0, [sp, #4]
   24fdc:	str	r0, [fp, #-4]
   24fe0:	b	250ac <__assert_fail@plt+0x13d28>
   24fe4:	ldr	r0, [fp, #-8]
   24fe8:	ldr	r0, [r0, #8]
   24fec:	str	r0, [fp, #-16]
   24ff0:	mov	r0, #0
   24ff4:	str	r0, [sp, #12]
   24ff8:	ldr	r0, [fp, #-16]
   24ffc:	ldr	r1, [sp, #20]
   25000:	add	r0, r0, r1, lsl #2
   25004:	ldr	r0, [r0]
   25008:	str	r0, [sp, #16]
   2500c:	ldr	r0, [fp, #-12]
   25010:	cmp	r0, #0
   25014:	beq	2508c <__assert_fail@plt+0x13d08>
   25018:	ldr	r0, [fp, #-20]	; 0xffffffec
   2501c:	cmp	r0, #0
   25020:	bge	25070 <__assert_fail@plt+0x13cec>
   25024:	ldr	r0, [fp, #-16]
   25028:	ldr	r1, [sp, #20]
   2502c:	bl	1b4ac <__assert_fail@plt+0xa128>
   25030:	str	r0, [sp, #12]
   25034:	ldr	r0, [sp, #16]
   25038:	mvn	r1, #0
   2503c:	eor	r0, r0, r1
   25040:	ldr	r1, [sp, #12]
   25044:	add	r0, r0, r1
   25048:	str	r0, [sp, #16]
   2504c:	ldr	r0, [sp, #16]
   25050:	ldr	r1, [sp, #12]
   25054:	cmp	r0, r1
   25058:	movw	r0, #0
   2505c:	movcs	r0, #1
   25060:	and	r0, r0, #1
   25064:	movw	r1, #0
   25068:	sub	r0, r1, r0
   2506c:	str	r0, [sp, #12]
   25070:	ldr	r0, [fp, #-12]
   25074:	and	r0, r0, #31
   25078:	mvn	r1, #0
   2507c:	lsl	r0, r1, r0
   25080:	ldr	r1, [sp, #16]
   25084:	and	r0, r1, r0
   25088:	str	r0, [sp, #16]
   2508c:	ldr	r0, [sp, #16]
   25090:	ldr	r1, [sp, #20]
   25094:	ldr	r2, [fp, #-16]
   25098:	ldr	r3, [sp, #24]
   2509c:	ldr	ip, [sp, #12]
   250a0:	str	ip, [sp]
   250a4:	bl	1c5f8 <__assert_fail@plt+0xb274>
   250a8:	str	r0, [fp, #-4]
   250ac:	ldr	r0, [fp, #-4]
   250b0:	mov	sp, fp
   250b4:	pop	{fp, pc}
   250b8:	push	{fp, lr}
   250bc:	mov	fp, sp
   250c0:	sub	sp, sp, #48	; 0x30
   250c4:	str	r0, [fp, #-8]
   250c8:	str	r1, [fp, #-12]
   250cc:	ldr	r0, [fp, #-8]
   250d0:	ldr	r0, [r0, #4]
   250d4:	str	r0, [fp, #-20]	; 0xffffffec
   250d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   250dc:	cmp	r0, #0
   250e0:	movw	r0, #0
   250e4:	movge	r0, #1
   250e8:	and	r0, r0, #1
   250ec:	movw	r1, #0
   250f0:	sub	r0, r1, r0
   250f4:	str	r0, [sp, #12]
   250f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   250fc:	cmp	r0, #0
   25100:	blt	25110 <__assert_fail@plt+0x13d8c>
   25104:	ldr	r0, [fp, #-20]	; 0xffffffec
   25108:	str	r0, [sp, #8]
   2510c:	b	25120 <__assert_fail@plt+0x13d9c>
   25110:	ldr	r0, [fp, #-20]	; 0xffffffec
   25114:	movw	r1, #0
   25118:	sub	r0, r1, r0
   2511c:	str	r0, [sp, #8]
   25120:	ldr	r0, [sp, #8]
   25124:	str	r0, [sp, #24]
   25128:	ldr	r0, [fp, #-12]
   2512c:	lsr	r0, r0, #5
   25130:	str	r0, [sp, #20]
   25134:	ldr	r0, [sp, #20]
   25138:	ldr	r1, [sp, #24]
   2513c:	cmp	r0, r1
   25140:	blt	25174 <__assert_fail@plt+0x13df0>
   25144:	ldr	r0, [sp, #12]
   25148:	cmp	r0, #0
   2514c:	beq	2515c <__assert_fail@plt+0x13dd8>
   25150:	ldr	r0, [fp, #-12]
   25154:	str	r0, [sp, #4]
   25158:	b	25168 <__assert_fail@plt+0x13de4>
   2515c:	mvn	r0, #0
   25160:	str	r0, [sp, #4]
   25164:	b	25168 <__assert_fail@plt+0x13de4>
   25168:	ldr	r0, [sp, #4]
   2516c:	str	r0, [fp, #-4]
   25170:	b	251fc <__assert_fail@plt+0x13e78>
   25174:	ldr	r0, [fp, #-8]
   25178:	ldr	r0, [r0, #8]
   2517c:	str	r0, [fp, #-16]
   25180:	ldr	r0, [fp, #-16]
   25184:	ldr	r1, [sp, #20]
   25188:	add	r0, r0, r1, lsl #2
   2518c:	ldr	r0, [r0]
   25190:	ldr	r1, [sp, #12]
   25194:	eor	r0, r0, r1
   25198:	str	r0, [sp, #16]
   2519c:	ldr	r0, [sp, #12]
   251a0:	cmp	r0, #0
   251a4:	bne	251c0 <__assert_fail@plt+0x13e3c>
   251a8:	ldr	r0, [fp, #-16]
   251ac:	ldr	r1, [sp, #20]
   251b0:	bl	1b4ac <__assert_fail@plt+0xa128>
   251b4:	ldr	r1, [sp, #16]
   251b8:	sub	r0, r1, r0
   251bc:	str	r0, [sp, #16]
   251c0:	ldr	r0, [fp, #-12]
   251c4:	and	r0, r0, #31
   251c8:	mvn	r1, #0
   251cc:	lsl	r0, r1, r0
   251d0:	ldr	r1, [sp, #16]
   251d4:	and	r0, r1, r0
   251d8:	str	r0, [sp, #16]
   251dc:	ldr	r0, [sp, #16]
   251e0:	ldr	r1, [sp, #20]
   251e4:	ldr	r2, [fp, #-16]
   251e8:	ldr	r3, [sp, #24]
   251ec:	ldr	ip, [sp, #12]
   251f0:	str	ip, [sp]
   251f4:	bl	1c5f8 <__assert_fail@plt+0xb274>
   251f8:	str	r0, [fp, #-4]
   251fc:	ldr	r0, [fp, #-4]
   25200:	mov	sp, fp
   25204:	pop	{fp, pc}
   25208:	push	{fp, lr}
   2520c:	mov	fp, sp
   25210:	sub	sp, sp, #24
   25214:	str	r0, [fp, #-4]
   25218:	ldr	r0, [fp, #-4]
   2521c:	cmp	r0, #0
   25220:	bls	25228 <__assert_fail@plt+0x13ea4>
   25224:	b	25248 <__assert_fail@plt+0x13ec4>
   25228:	movw	r0, #35336	; 0x8a08
   2522c:	movt	r0, #3
   25230:	movw	r1, #30584	; 0x7778
   25234:	movt	r1, #3
   25238:	movw	r2, #1210	; 0x4ba
   2523c:	movw	r3, #35342	; 0x8a0e
   25240:	movt	r3, #3
   25244:	bl	11384 <__assert_fail@plt>
   25248:	b	2524c <__assert_fail@plt+0x13ec8>
   2524c:	ldr	r0, [fp, #-4]
   25250:	str	r0, [sp, #12]
   25254:	movw	r0, #0
   25258:	str	r0, [sp, #8]
   2525c:	movw	r0, #8
   25260:	str	r0, [sp, #4]
   25264:	ldr	r0, [sp, #4]
   25268:	movw	r1, #32
   2526c:	cmp	r1, r0
   25270:	bls	252ac <__assert_fail@plt+0x13f28>
   25274:	b	25278 <__assert_fail@plt+0x13ef4>
   25278:	ldr	r0, [sp, #12]
   2527c:	and	r0, r0, #-16777216	; 0xff000000
   25280:	cmp	r0, #0
   25284:	bne	252a8 <__assert_fail@plt+0x13f24>
   25288:	ldr	r0, [sp, #4]
   2528c:	ldr	r1, [sp, #12]
   25290:	lsl	r0, r1, r0
   25294:	str	r0, [sp, #12]
   25298:	ldr	r0, [sp, #8]
   2529c:	add	r0, r0, #8
   252a0:	str	r0, [sp, #8]
   252a4:	b	25278 <__assert_fail@plt+0x13ef4>
   252a8:	b	252ac <__assert_fail@plt+0x13f28>
   252ac:	b	252b0 <__assert_fail@plt+0x13f2c>
   252b0:	ldr	r0, [sp, #12]
   252b4:	and	r0, r0, #-2147483648	; 0x80000000
   252b8:	cmp	r0, #0
   252bc:	bne	252dc <__assert_fail@plt+0x13f58>
   252c0:	ldr	r0, [sp, #12]
   252c4:	lsl	r0, r0, #1
   252c8:	str	r0, [sp, #12]
   252cc:	ldr	r0, [sp, #8]
   252d0:	add	r0, r0, #1
   252d4:	str	r0, [sp, #8]
   252d8:	b	252b0 <__assert_fail@plt+0x13f2c>
   252dc:	ldr	r0, [sp, #8]
   252e0:	str	r0, [fp, #-8]
   252e4:	ldr	r0, [fp, #-8]
   252e8:	movw	r1, #32
   252ec:	sub	r0, r1, r0
   252f0:	mov	sp, fp
   252f4:	pop	{fp, pc}
   252f8:	push	{fp, lr}
   252fc:	mov	fp, sp
   25300:	sub	sp, sp, #24
   25304:	str	r0, [fp, #-4]
   25308:	str	r1, [fp, #-8]
   2530c:	ldr	r0, [fp, #-8]
   25310:	cmp	r0, #0
   25314:	bls	2531c <__assert_fail@plt+0x13f98>
   25318:	b	2533c <__assert_fail@plt+0x13fb8>
   2531c:	movw	r0, #35389	; 0x8a3d
   25320:	movt	r0, #3
   25324:	movw	r1, #30584	; 0x7778
   25328:	movt	r1, #3
   2532c:	movw	r2, #902	; 0x386
   25330:	movw	r3, #35395	; 0x8a43
   25334:	movt	r3, #3
   25338:	bl	11384 <__assert_fail@plt>
   2533c:	b	25340 <__assert_fail@plt+0x13fbc>
   25340:	ldr	r0, [fp, #-8]
   25344:	str	r0, [sp, #8]
   25348:	movw	r0, #0
   2534c:	str	r0, [sp, #4]
   25350:	movw	r0, #8
   25354:	str	r0, [sp]
   25358:	ldr	r0, [sp]
   2535c:	movw	r1, #32
   25360:	cmp	r1, r0
   25364:	bls	253a0 <__assert_fail@plt+0x1401c>
   25368:	b	2536c <__assert_fail@plt+0x13fe8>
   2536c:	ldr	r0, [sp, #8]
   25370:	and	r0, r0, #-16777216	; 0xff000000
   25374:	cmp	r0, #0
   25378:	bne	2539c <__assert_fail@plt+0x14018>
   2537c:	ldr	r0, [sp]
   25380:	ldr	r1, [sp, #8]
   25384:	lsl	r0, r1, r0
   25388:	str	r0, [sp, #8]
   2538c:	ldr	r0, [sp, #4]
   25390:	add	r0, r0, #8
   25394:	str	r0, [sp, #4]
   25398:	b	2536c <__assert_fail@plt+0x13fe8>
   2539c:	b	253a0 <__assert_fail@plt+0x1401c>
   253a0:	b	253a4 <__assert_fail@plt+0x14020>
   253a4:	ldr	r0, [sp, #8]
   253a8:	and	r0, r0, #-2147483648	; 0x80000000
   253ac:	cmp	r0, #0
   253b0:	bne	253d0 <__assert_fail@plt+0x1404c>
   253b4:	ldr	r0, [sp, #8]
   253b8:	lsl	r0, r0, #1
   253bc:	str	r0, [sp, #8]
   253c0:	ldr	r0, [sp, #4]
   253c4:	add	r0, r0, #1
   253c8:	str	r0, [sp, #4]
   253cc:	b	253a4 <__assert_fail@plt+0x14020>
   253d0:	ldr	r0, [sp, #4]
   253d4:	str	r0, [sp, #12]
   253d8:	ldr	r0, [sp, #12]
   253dc:	ldr	r1, [fp, #-4]
   253e0:	str	r0, [r1]
   253e4:	ldr	r0, [fp, #-8]
   253e8:	ldr	r1, [sp, #12]
   253ec:	lsl	r0, r0, r1
   253f0:	ldr	r1, [fp, #-4]
   253f4:	str	r0, [r1, #4]
   253f8:	ldr	r0, [fp, #-4]
   253fc:	ldr	r0, [r0, #4]
   25400:	movw	r1, #0
   25404:	bl	1c9a0 <__assert_fail@plt+0xb61c>
   25408:	ldr	r1, [fp, #-4]
   2540c:	str	r0, [r1, #12]
   25410:	mov	sp, fp
   25414:	pop	{fp, pc}
   25418:	push	{fp, lr}
   2541c:	mov	fp, sp
   25420:	sub	sp, sp, #104	; 0x68
   25424:	str	r0, [fp, #-4]
   25428:	str	r1, [fp, #-8]
   2542c:	str	r2, [fp, #-12]
   25430:	str	r3, [fp, #-16]
   25434:	movw	r0, #0
   25438:	str	r0, [fp, #-32]	; 0xffffffe0
   2543c:	str	r0, [fp, #-36]	; 0xffffffdc
   25440:	ldr	r0, [fp, #-16]
   25444:	ldr	r0, [r0]
   25448:	cmp	r0, #0
   2544c:	bls	254a4 <__assert_fail@plt+0x14120>
   25450:	ldr	r0, [fp, #-4]
   25454:	str	r0, [fp, #-32]	; 0xffffffe0
   25458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2545c:	movw	r1, #0
   25460:	cmp	r0, r1
   25464:	bne	2547c <__assert_fail@plt+0x140f8>
   25468:	ldr	r0, [fp, #-12]
   2546c:	str	r0, [fp, #-36]	; 0xffffffdc
   25470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25474:	bl	1d7b0 <__assert_fail@plt+0xc42c>
   25478:	str	r0, [fp, #-32]	; 0xffffffe0
   2547c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25480:	ldr	r1, [fp, #-8]
   25484:	ldr	r2, [fp, #-12]
   25488:	ldr	r3, [fp, #-16]
   2548c:	ldr	r3, [r3]
   25490:	bl	1c278 <__assert_fail@plt+0xaef4>
   25494:	str	r0, [fp, #-28]	; 0xffffffe4
   25498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2549c:	str	r0, [fp, #-8]
   254a0:	b	254ac <__assert_fail@plt+0x14128>
   254a4:	movw	r0, #0
   254a8:	str	r0, [fp, #-28]	; 0xffffffe4
   254ac:	ldr	r0, [fp, #-16]
   254b0:	ldr	r0, [r0, #4]
   254b4:	str	r0, [fp, #-20]	; 0xffffffec
   254b8:	ldr	r0, [fp, #-16]
   254bc:	ldr	r0, [r0, #12]
   254c0:	str	r0, [fp, #-24]	; 0xffffffe8
   254c4:	ldr	r0, [fp, #-12]
   254c8:	mvn	r1, #0
   254cc:	add	r0, r0, r1
   254d0:	str	r0, [fp, #-12]
   254d4:	cmp	r0, #0
   254d8:	blt	2570c <__assert_fail@plt+0x14388>
   254dc:	b	254e0 <__assert_fail@plt+0x1415c>
   254e0:	b	254e4 <__assert_fail@plt+0x14160>
   254e4:	movw	r0, #32
   254e8:	str	r0, [sp, #44]	; 0x2c
   254ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   254f0:	str	r0, [sp, #8]
   254f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   254f8:	str	r0, [sp, #4]
   254fc:	ldr	r0, [sp, #8]
   25500:	movw	r1, #65535	; 0xffff
   25504:	and	r0, r0, r1
   25508:	str	r0, [sp, #24]
   2550c:	ldr	r0, [sp, #8]
   25510:	lsr	r0, r0, #16
   25514:	str	r0, [sp, #16]
   25518:	ldr	r0, [sp, #4]
   2551c:	and	r0, r0, r1
   25520:	str	r0, [sp, #20]
   25524:	ldr	r0, [sp, #4]
   25528:	lsr	r0, r0, #16
   2552c:	str	r0, [sp, #12]
   25530:	ldr	r0, [sp, #24]
   25534:	ldr	r1, [sp, #20]
   25538:	mul	r0, r0, r1
   2553c:	str	r0, [sp, #40]	; 0x28
   25540:	ldr	r0, [sp, #24]
   25544:	ldr	r1, [sp, #12]
   25548:	mul	r0, r0, r1
   2554c:	str	r0, [sp, #36]	; 0x24
   25550:	ldr	r0, [sp, #16]
   25554:	ldr	r1, [sp, #20]
   25558:	mul	r0, r0, r1
   2555c:	str	r0, [sp, #32]
   25560:	ldr	r0, [sp, #16]
   25564:	ldr	r1, [sp, #12]
   25568:	mul	r0, r0, r1
   2556c:	str	r0, [sp, #28]
   25570:	ldr	r0, [sp, #40]	; 0x28
   25574:	lsr	r0, r0, #16
   25578:	ldr	r1, [sp, #36]	; 0x24
   2557c:	add	r0, r1, r0
   25580:	str	r0, [sp, #36]	; 0x24
   25584:	ldr	r0, [sp, #32]
   25588:	ldr	r1, [sp, #36]	; 0x24
   2558c:	add	r0, r1, r0
   25590:	str	r0, [sp, #36]	; 0x24
   25594:	ldr	r0, [sp, #36]	; 0x24
   25598:	ldr	r1, [sp, #32]
   2559c:	cmp	r0, r1
   255a0:	bcs	255b0 <__assert_fail@plt+0x1422c>
   255a4:	ldr	r0, [sp, #28]
   255a8:	add	r0, r0, #65536	; 0x10000
   255ac:	str	r0, [sp, #28]
   255b0:	ldr	r0, [sp, #28]
   255b4:	ldr	r1, [sp, #36]	; 0x24
   255b8:	lsr	r1, r1, #16
   255bc:	add	r0, r0, r1
   255c0:	str	r0, [fp, #-44]	; 0xffffffd4
   255c4:	ldr	r0, [sp, #36]	; 0x24
   255c8:	lsl	r0, r0, #16
   255cc:	ldr	r1, [sp, #40]	; 0x28
   255d0:	movw	r2, #65535	; 0xffff
   255d4:	and	r1, r1, r2
   255d8:	add	r0, r0, r1
   255dc:	str	r0, [fp, #-48]	; 0xffffffd0
   255e0:	b	255e4 <__assert_fail@plt+0x14260>
   255e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   255e8:	ldr	r1, [fp, #-8]
   255ec:	ldr	r2, [fp, #-12]
   255f0:	add	r1, r1, r2, lsl #2
   255f4:	ldr	r1, [r1]
   255f8:	add	r0, r0, r1
   255fc:	str	r0, [sp]
   25600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25604:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25608:	add	r1, r1, #1
   2560c:	add	r0, r0, r1
   25610:	ldr	r1, [sp]
   25614:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25618:	cmp	r1, r2
   2561c:	movw	r1, #0
   25620:	movcc	r1, #1
   25624:	and	r1, r1, #1
   25628:	add	r0, r0, r1
   2562c:	str	r0, [fp, #-44]	; 0xffffffd4
   25630:	ldr	r0, [sp]
   25634:	str	r0, [fp, #-48]	; 0xffffffd0
   25638:	ldr	r0, [fp, #-8]
   2563c:	ldr	r1, [fp, #-12]
   25640:	add	r0, r0, r1, lsl #2
   25644:	ldr	r0, [r0]
   25648:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2564c:	ldr	r2, [fp, #-20]	; 0xffffffec
   25650:	mul	r1, r1, r2
   25654:	sub	r0, r0, r1
   25658:	str	r0, [sp, #52]	; 0x34
   2565c:	ldr	r0, [sp, #52]	; 0x34
   25660:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25664:	cmp	r0, r1
   25668:	movw	r0, #0
   2566c:	movhi	r0, #1
   25670:	and	r0, r0, #1
   25674:	movw	r1, #0
   25678:	sub	r0, r1, r0
   2567c:	str	r0, [sp, #48]	; 0x30
   25680:	ldr	r0, [sp, #48]	; 0x30
   25684:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25688:	add	r0, r1, r0
   2568c:	str	r0, [fp, #-44]	; 0xffffffd4
   25690:	ldr	r0, [sp, #48]	; 0x30
   25694:	ldr	r1, [fp, #-20]	; 0xffffffec
   25698:	and	r0, r0, r1
   2569c:	ldr	r1, [sp, #52]	; 0x34
   256a0:	add	r0, r1, r0
   256a4:	str	r0, [sp, #52]	; 0x34
   256a8:	ldr	r0, [sp, #52]	; 0x34
   256ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   256b0:	cmp	r0, r1
   256b4:	bcc	256d4 <__assert_fail@plt+0x14350>
   256b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   256bc:	ldr	r1, [sp, #52]	; 0x34
   256c0:	sub	r0, r1, r0
   256c4:	str	r0, [sp, #52]	; 0x34
   256c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   256cc:	add	r0, r0, #1
   256d0:	str	r0, [fp, #-44]	; 0xffffffd4
   256d4:	ldr	r0, [sp, #52]	; 0x34
   256d8:	str	r0, [fp, #-28]	; 0xffffffe4
   256dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   256e0:	str	r0, [fp, #-40]	; 0xffffffd8
   256e4:	ldr	r0, [fp, #-4]
   256e8:	movw	r1, #0
   256ec:	cmp	r0, r1
   256f0:	beq	25708 <__assert_fail@plt+0x14384>
   256f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   256f8:	ldr	r1, [fp, #-4]
   256fc:	ldr	r2, [fp, #-12]
   25700:	add	r1, r1, r2, lsl #2
   25704:	str	r0, [r1]
   25708:	b	254c4 <__assert_fail@plt+0x14140>
   2570c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25710:	cmp	r0, #0
   25714:	beq	25724 <__assert_fail@plt+0x143a0>
   25718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2571c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25720:	bl	1d828 <__assert_fail@plt+0xc4a4>
   25724:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25728:	ldr	r1, [fp, #-16]
   2572c:	ldr	r1, [r1]
   25730:	lsr	r0, r0, r1
   25734:	mov	sp, fp
   25738:	pop	{fp, pc}
   2573c:	push	{fp, lr}
   25740:	mov	fp, sp
   25744:	sub	sp, sp, #80	; 0x50
   25748:	str	r0, [fp, #-8]
   2574c:	str	r1, [fp, #-12]
   25750:	str	r2, [fp, #-16]
   25754:	movw	r0, #32706	; 0x7fc2
   25758:	movt	r0, #3
   2575c:	str	r0, [fp, #-24]	; 0xffffffe8
   25760:	ldr	r0, [fp, #-12]
   25764:	cmp	r0, #1
   25768:	ble	257a8 <__assert_fail@plt+0x14424>
   2576c:	ldr	r0, [fp, #-12]
   25770:	cmp	r0, #36	; 0x24
   25774:	bgt	25788 <__assert_fail@plt+0x14404>
   25778:	movw	r0, #32769	; 0x8001
   2577c:	movt	r0, #3
   25780:	str	r0, [fp, #-24]	; 0xffffffe8
   25784:	b	257a4 <__assert_fail@plt+0x14420>
   25788:	ldr	r0, [fp, #-12]
   2578c:	cmp	r0, #62	; 0x3e
   25790:	ble	257a0 <__assert_fail@plt+0x1441c>
   25794:	movw	r0, #0
   25798:	str	r0, [fp, #-4]
   2579c:	b	25a84 <__assert_fail@plt+0x14700>
   257a0:	b	257a4 <__assert_fail@plt+0x14420>
   257a4:	b	257f0 <__assert_fail@plt+0x1446c>
   257a8:	ldr	r0, [fp, #-12]
   257ac:	cmn	r0, #1
   257b0:	blt	257c0 <__assert_fail@plt+0x1443c>
   257b4:	movw	r0, #10
   257b8:	str	r0, [fp, #-12]
   257bc:	b	257ec <__assert_fail@plt+0x14468>
   257c0:	ldr	r0, [fp, #-12]
   257c4:	movw	r1, #0
   257c8:	sub	r0, r1, r0
   257cc:	str	r0, [fp, #-12]
   257d0:	ldr	r0, [fp, #-12]
   257d4:	cmp	r0, #36	; 0x24
   257d8:	ble	257e8 <__assert_fail@plt+0x14464>
   257dc:	movw	r0, #0
   257e0:	str	r0, [fp, #-4]
   257e4:	b	25a84 <__assert_fail@plt+0x14700>
   257e8:	b	257ec <__assert_fail@plt+0x14468>
   257ec:	b	257f0 <__assert_fail@plt+0x1446c>
   257f0:	ldr	r0, [fp, #-16]
   257f4:	ldr	r1, [fp, #-12]
   257f8:	bl	22a38 <__assert_fail@plt+0x116b4>
   257fc:	add	r0, r0, #1
   25800:	str	r0, [fp, #-36]	; 0xffffffdc
   25804:	ldr	r0, [fp, #-8]
   25808:	movw	r1, #0
   2580c:	cmp	r0, r1
   25810:	bne	25848 <__assert_fail@plt+0x144c4>
   25814:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25818:	add	r0, r0, #1
   2581c:	str	r0, [sp, #40]	; 0x28
   25820:	movw	r0, #41252	; 0xa124
   25824:	movt	r0, #4
   25828:	ldr	r0, [r0]
   2582c:	ldr	r1, [sp, #40]	; 0x28
   25830:	str	r0, [sp, #24]
   25834:	mov	r0, r1
   25838:	ldr	r1, [sp, #24]
   2583c:	blx	r1
   25840:	str	r0, [fp, #-8]
   25844:	b	25850 <__assert_fail@plt+0x144cc>
   25848:	movw	r0, #0
   2584c:	str	r0, [sp, #40]	; 0x28
   25850:	ldr	r0, [fp, #-16]
   25854:	ldr	r0, [r0, #4]
   25858:	cmp	r0, #0
   2585c:	blt	25870 <__assert_fail@plt+0x144ec>
   25860:	ldr	r0, [fp, #-16]
   25864:	ldr	r0, [r0, #4]
   25868:	str	r0, [sp, #20]
   2586c:	b	25884 <__assert_fail@plt+0x14500>
   25870:	ldr	r0, [fp, #-16]
   25874:	ldr	r0, [r0, #4]
   25878:	movw	r1, #0
   2587c:	sub	r0, r1, r0
   25880:	str	r0, [sp, #20]
   25884:	ldr	r0, [sp, #20]
   25888:	str	r0, [fp, #-28]	; 0xffffffe4
   2588c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25890:	cmp	r0, #0
   25894:	bne	258b0 <__assert_fail@plt+0x1452c>
   25898:	ldr	r0, [fp, #-8]
   2589c:	movw	r1, #48	; 0x30
   258a0:	strb	r1, [r0]
   258a4:	movw	r0, #1
   258a8:	str	r0, [fp, #-36]	; 0xffffffdc
   258ac:	b	25a10 <__assert_fail@plt+0x1468c>
   258b0:	movw	r0, #0
   258b4:	str	r0, [fp, #-32]	; 0xffffffe0
   258b8:	ldr	r0, [fp, #-16]
   258bc:	ldr	r0, [r0, #4]
   258c0:	cmp	r0, #0
   258c4:	bge	258e4 <__assert_fail@plt+0x14560>
   258c8:	ldr	r0, [fp, #-8]
   258cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   258d0:	add	r2, r1, #1
   258d4:	str	r2, [fp, #-32]	; 0xffffffe0
   258d8:	add	r0, r0, r1
   258dc:	movw	r1, #45	; 0x2d
   258e0:	strb	r1, [r0]
   258e4:	ldr	r0, [fp, #-12]
   258e8:	bl	1ce88 <__assert_fail@plt+0xbb04>
   258ec:	str	r0, [fp, #-20]	; 0xffffffec
   258f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   258f4:	cmp	r0, #0
   258f8:	beq	25944 <__assert_fail@plt+0x145c0>
   258fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25900:	ldr	r1, [fp, #-8]
   25904:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25908:	add	r1, r1, r2
   2590c:	ldr	r2, [fp, #-20]	; 0xffffffec
   25910:	ldr	r3, [fp, #-16]
   25914:	ldr	r3, [r3, #8]
   25918:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2591c:	str	r0, [sp, #16]
   25920:	mov	r0, r1
   25924:	mov	r1, r2
   25928:	mov	r2, r3
   2592c:	mov	r3, ip
   25930:	bl	1cf88 <__assert_fail@plt+0xbc04>
   25934:	ldr	r1, [sp, #16]
   25938:	add	r0, r1, r0
   2593c:	str	r0, [fp, #-36]	; 0xffffffdc
   25940:	b	259bc <__assert_fail@plt+0x14638>
   25944:	ldr	r1, [fp, #-12]
   25948:	add	r0, sp, #32
   2594c:	bl	1d0d8 <__assert_fail@plt+0xbd54>
   25950:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25954:	bl	1d7b0 <__assert_fail@plt+0xc42c>
   25958:	str	r0, [sp, #28]
   2595c:	ldr	r0, [sp, #28]
   25960:	ldr	r1, [fp, #-16]
   25964:	ldr	r1, [r1, #8]
   25968:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2596c:	bl	1b370 <__assert_fail@plt+0x9fec>
   25970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25974:	ldr	r1, [fp, #-8]
   25978:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2597c:	add	r1, r1, r2
   25980:	ldr	r2, [fp, #-12]
   25984:	ldr	r3, [sp, #28]
   25988:	ldr	lr, [fp, #-28]	; 0xffffffe4
   2598c:	str	r0, [sp, #12]
   25990:	mov	r0, r1
   25994:	mov	r1, r2
   25998:	add	r2, sp, #32
   2599c:	str	lr, [sp]
   259a0:	bl	1d154 <__assert_fail@plt+0xbdd0>
   259a4:	ldr	r1, [sp, #12]
   259a8:	add	r0, r1, r0
   259ac:	str	r0, [fp, #-36]	; 0xffffffdc
   259b0:	ldr	r0, [sp, #28]
   259b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   259b8:	bl	1d828 <__assert_fail@plt+0xc4a4>
   259bc:	b	259c0 <__assert_fail@plt+0x1463c>
   259c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   259c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   259c8:	cmp	r0, r1
   259cc:	bcs	25a0c <__assert_fail@plt+0x14688>
   259d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   259d4:	ldr	r1, [fp, #-8]
   259d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   259dc:	add	r1, r1, r2
   259e0:	ldrb	r1, [r1]
   259e4:	add	r0, r0, r1
   259e8:	ldrb	r0, [r0]
   259ec:	ldr	r1, [fp, #-8]
   259f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   259f4:	add	r1, r1, r2
   259f8:	strb	r0, [r1]
   259fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25a00:	add	r0, r0, #1
   25a04:	str	r0, [fp, #-32]	; 0xffffffe0
   25a08:	b	259c0 <__assert_fail@plt+0x1463c>
   25a0c:	b	25a10 <__assert_fail@plt+0x1468c>
   25a10:	ldr	r0, [fp, #-8]
   25a14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25a18:	add	r0, r0, r1
   25a1c:	movw	r1, #0
   25a20:	strb	r1, [r0]
   25a24:	ldr	r0, [sp, #40]	; 0x28
   25a28:	cmp	r0, #0
   25a2c:	beq	25a7c <__assert_fail@plt+0x146f8>
   25a30:	ldr	r0, [sp, #40]	; 0x28
   25a34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25a38:	add	r1, r1, #1
   25a3c:	cmp	r0, r1
   25a40:	beq	25a7c <__assert_fail@plt+0x146f8>
   25a44:	movw	r0, #41256	; 0xa128
   25a48:	movt	r0, #4
   25a4c:	ldr	r0, [r0]
   25a50:	ldr	r1, [fp, #-8]
   25a54:	ldr	r2, [sp, #40]	; 0x28
   25a58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25a5c:	add	r3, r3, #1
   25a60:	str	r0, [sp, #8]
   25a64:	mov	r0, r1
   25a68:	mov	r1, r2
   25a6c:	mov	r2, r3
   25a70:	ldr	r3, [sp, #8]
   25a74:	blx	r3
   25a78:	str	r0, [fp, #-8]
   25a7c:	ldr	r0, [fp, #-8]
   25a80:	str	r0, [fp, #-4]
   25a84:	ldr	r0, [fp, #-4]
   25a88:	mov	sp, fp
   25a8c:	pop	{fp, pc}
   25a90:	push	{fp, lr}
   25a94:	mov	fp, sp
   25a98:	sub	sp, sp, #104	; 0x68
   25a9c:	str	r0, [fp, #-8]
   25aa0:	str	r1, [fp, #-12]
   25aa4:	str	r2, [fp, #-16]
   25aa8:	ldr	r0, [fp, #-16]
   25aac:	cmp	r0, #0
   25ab0:	beq	25acc <__assert_fail@plt+0x14748>
   25ab4:	ldr	r0, [fp, #-16]
   25ab8:	cmp	r0, #2
   25abc:	blt	25ad0 <__assert_fail@plt+0x1474c>
   25ac0:	ldr	r0, [fp, #-16]
   25ac4:	cmp	r0, #62	; 0x3e
   25ac8:	bgt	25ad0 <__assert_fail@plt+0x1474c>
   25acc:	b	25af0 <__assert_fail@plt+0x1476c>
   25ad0:	movw	r0, #32806	; 0x8026
   25ad4:	movt	r0, #3
   25ad8:	movw	r1, #30584	; 0x7778
   25adc:	movt	r1, #3
   25ae0:	movw	r2, #4320	; 0x10e0
   25ae4:	movw	r3, #32845	; 0x804d
   25ae8:	movt	r3, #3
   25aec:	bl	11384 <__assert_fail@plt>
   25af0:	b	25af4 <__assert_fail@plt+0x14770>
   25af4:	bl	11240 <__ctype_b_loc@plt>
   25af8:	ldr	r0, [r0]
   25afc:	ldr	lr, [fp, #-12]
   25b00:	ldrb	lr, [lr]
   25b04:	mov	r1, lr
   25b08:	add	r0, r0, lr, lsl #1
   25b0c:	ldrh	r0, [r0]
   25b10:	and	r0, r0, #8192	; 0x2000
   25b14:	cmp	r0, #0
   25b18:	str	r1, [sp, #36]	; 0x24
   25b1c:	beq	25b30 <__assert_fail@plt+0x147ac>
   25b20:	ldr	r0, [fp, #-12]
   25b24:	add	r0, r0, #1
   25b28:	str	r0, [fp, #-12]
   25b2c:	b	25af4 <__assert_fail@plt+0x14770>
   25b30:	ldr	r0, [fp, #-12]
   25b34:	ldrb	r0, [r0]
   25b38:	cmp	r0, #45	; 0x2d
   25b3c:	movw	r0, #0
   25b40:	moveq	r0, #1
   25b44:	and	r0, r0, #1
   25b48:	str	r0, [fp, #-48]	; 0xffffffd0
   25b4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25b50:	ldr	r1, [fp, #-12]
   25b54:	add	r0, r1, r0
   25b58:	str	r0, [fp, #-12]
   25b5c:	ldr	r0, [fp, #-16]
   25b60:	cmp	r0, #0
   25b64:	bne	25c04 <__assert_fail@plt+0x14880>
   25b68:	ldr	r0, [fp, #-12]
   25b6c:	ldrb	r0, [r0]
   25b70:	cmp	r0, #48	; 0x30
   25b74:	bne	25bf8 <__assert_fail@plt+0x14874>
   25b78:	ldr	r0, [fp, #-12]
   25b7c:	ldrb	r0, [r0, #1]
   25b80:	cmp	r0, #120	; 0x78
   25b84:	beq	25b98 <__assert_fail@plt+0x14814>
   25b88:	ldr	r0, [fp, #-12]
   25b8c:	ldrb	r0, [r0, #1]
   25b90:	cmp	r0, #88	; 0x58
   25b94:	bne	25bb0 <__assert_fail@plt+0x1482c>
   25b98:	movw	r0, #16
   25b9c:	str	r0, [fp, #-16]
   25ba0:	ldr	r0, [fp, #-12]
   25ba4:	add	r0, r0, #2
   25ba8:	str	r0, [fp, #-12]
   25bac:	b	25bf4 <__assert_fail@plt+0x14870>
   25bb0:	ldr	r0, [fp, #-12]
   25bb4:	ldrb	r0, [r0, #1]
   25bb8:	cmp	r0, #98	; 0x62
   25bbc:	beq	25bd0 <__assert_fail@plt+0x1484c>
   25bc0:	ldr	r0, [fp, #-12]
   25bc4:	ldrb	r0, [r0, #1]
   25bc8:	cmp	r0, #66	; 0x42
   25bcc:	bne	25be8 <__assert_fail@plt+0x14864>
   25bd0:	movw	r0, #2
   25bd4:	str	r0, [fp, #-16]
   25bd8:	ldr	r0, [fp, #-12]
   25bdc:	add	r0, r0, #2
   25be0:	str	r0, [fp, #-12]
   25be4:	b	25bf0 <__assert_fail@plt+0x1486c>
   25be8:	movw	r0, #8
   25bec:	str	r0, [fp, #-16]
   25bf0:	b	25bf4 <__assert_fail@plt+0x14870>
   25bf4:	b	25c00 <__assert_fail@plt+0x1487c>
   25bf8:	movw	r0, #10
   25bfc:	str	r0, [fp, #-16]
   25c00:	b	25c04 <__assert_fail@plt+0x14880>
   25c04:	ldr	r0, [fp, #-12]
   25c08:	ldrsb	r0, [r0]
   25c0c:	cmp	r0, #0
   25c10:	bne	25c2c <__assert_fail@plt+0x148a8>
   25c14:	ldr	r0, [fp, #-8]
   25c18:	movw	r1, #0
   25c1c:	str	r1, [r0, #4]
   25c20:	mvn	r0, #0
   25c24:	str	r0, [fp, #-4]
   25c28:	b	2604c <__assert_fail@plt+0x14cc8>
   25c2c:	ldr	r0, [fp, #-12]
   25c30:	bl	11270 <strlen@plt>
   25c34:	str	r0, [fp, #-44]	; 0xffffffd4
   25c38:	movw	r0, #41252	; 0xa124
   25c3c:	movt	r0, #4
   25c40:	ldr	r0, [r0]
   25c44:	ldr	lr, [fp, #-44]	; 0xffffffd4
   25c48:	str	r0, [sp, #32]
   25c4c:	mov	r0, lr
   25c50:	ldr	lr, [sp, #32]
   25c54:	blx	lr
   25c58:	str	r0, [sp, #52]	; 0x34
   25c5c:	ldr	r0, [fp, #-16]
   25c60:	cmp	r0, #36	; 0x24
   25c64:	movw	r0, #0
   25c68:	movgt	r0, #1
   25c6c:	tst	r0, #1
   25c70:	movw	r0, #36	; 0x24
   25c74:	moveq	r0, #10
   25c78:	str	r0, [fp, #-24]	; 0xffffffe8
   25c7c:	movw	r0, #0
   25c80:	str	r0, [fp, #-40]	; 0xffffffd8
   25c84:	ldr	r0, [fp, #-12]
   25c88:	ldrsb	r0, [r0]
   25c8c:	cmp	r0, #0
   25c90:	beq	25dfc <__assert_fail@plt+0x14a78>
   25c94:	bl	11240 <__ctype_b_loc@plt>
   25c98:	ldr	r0, [r0]
   25c9c:	ldr	lr, [fp, #-12]
   25ca0:	ldrb	lr, [lr]
   25ca4:	mov	r1, lr
   25ca8:	add	r0, r0, lr, lsl #1
   25cac:	ldrh	r0, [r0]
   25cb0:	and	r0, r0, #8192	; 0x2000
   25cb4:	cmp	r0, #0
   25cb8:	str	r1, [sp, #28]
   25cbc:	beq	25cc4 <__assert_fail@plt+0x14940>
   25cc0:	b	25dec <__assert_fail@plt+0x14a68>
   25cc4:	ldr	r0, [fp, #-12]
   25cc8:	ldrb	r0, [r0]
   25ccc:	cmp	r0, #48	; 0x30
   25cd0:	blt	25cf8 <__assert_fail@plt+0x14974>
   25cd4:	ldr	r0, [fp, #-12]
   25cd8:	ldrb	r0, [r0]
   25cdc:	cmp	r0, #57	; 0x39
   25ce0:	bgt	25cf8 <__assert_fail@plt+0x14974>
   25ce4:	ldr	r0, [fp, #-12]
   25ce8:	ldrb	r0, [r0]
   25cec:	sub	r0, r0, #48	; 0x30
   25cf0:	str	r0, [sp, #48]	; 0x30
   25cf4:	b	25d7c <__assert_fail@plt+0x149f8>
   25cf8:	ldr	r0, [fp, #-12]
   25cfc:	ldrb	r0, [r0]
   25d00:	cmp	r0, #97	; 0x61
   25d04:	blt	25d34 <__assert_fail@plt+0x149b0>
   25d08:	ldr	r0, [fp, #-12]
   25d0c:	ldrb	r0, [r0]
   25d10:	cmp	r0, #122	; 0x7a
   25d14:	bgt	25d34 <__assert_fail@plt+0x149b0>
   25d18:	ldr	r0, [fp, #-12]
   25d1c:	ldrb	r0, [r0]
   25d20:	sub	r0, r0, #97	; 0x61
   25d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25d28:	add	r0, r0, r1
   25d2c:	str	r0, [sp, #48]	; 0x30
   25d30:	b	25d78 <__assert_fail@plt+0x149f4>
   25d34:	ldr	r0, [fp, #-12]
   25d38:	ldrb	r0, [r0]
   25d3c:	cmp	r0, #65	; 0x41
   25d40:	blt	25d6c <__assert_fail@plt+0x149e8>
   25d44:	ldr	r0, [fp, #-12]
   25d48:	ldrb	r0, [r0]
   25d4c:	cmp	r0, #90	; 0x5a
   25d50:	bgt	25d6c <__assert_fail@plt+0x149e8>
   25d54:	ldr	r0, [fp, #-12]
   25d58:	ldrb	r0, [r0]
   25d5c:	sub	r0, r0, #65	; 0x41
   25d60:	add	r0, r0, #10
   25d64:	str	r0, [sp, #48]	; 0x30
   25d68:	b	25d74 <__assert_fail@plt+0x149f0>
   25d6c:	ldr	r0, [fp, #-16]
   25d70:	str	r0, [sp, #48]	; 0x30
   25d74:	b	25d78 <__assert_fail@plt+0x149f4>
   25d78:	b	25d7c <__assert_fail@plt+0x149f8>
   25d7c:	b	25d80 <__assert_fail@plt+0x149fc>
   25d80:	ldr	r0, [sp, #48]	; 0x30
   25d84:	ldr	r1, [fp, #-16]
   25d88:	cmp	r0, r1
   25d8c:	bcc	25dd0 <__assert_fail@plt+0x14a4c>
   25d90:	movw	r0, #41260	; 0xa12c
   25d94:	movt	r0, #4
   25d98:	ldr	r0, [r0]
   25d9c:	ldr	r1, [sp, #52]	; 0x34
   25da0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25da4:	str	r0, [sp, #24]
   25da8:	mov	r0, r1
   25dac:	mov	r1, r2
   25db0:	ldr	r2, [sp, #24]
   25db4:	blx	r2
   25db8:	ldr	r0, [fp, #-8]
   25dbc:	movw	r1, #0
   25dc0:	str	r1, [r0, #4]
   25dc4:	mvn	r0, #0
   25dc8:	str	r0, [fp, #-4]
   25dcc:	b	2604c <__assert_fail@plt+0x14cc8>
   25dd0:	ldr	r0, [sp, #48]	; 0x30
   25dd4:	ldr	r1, [sp, #52]	; 0x34
   25dd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25ddc:	add	r3, r2, #1
   25de0:	str	r3, [fp, #-40]	; 0xffffffd8
   25de4:	add	r1, r1, r2
   25de8:	strb	r0, [r1]
   25dec:	ldr	r0, [fp, #-12]
   25df0:	add	r0, r0, #1
   25df4:	str	r0, [fp, #-12]
   25df8:	b	25c84 <__assert_fail@plt+0x14900>
   25dfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25e00:	cmp	r0, #0
   25e04:	bne	25e48 <__assert_fail@plt+0x14ac4>
   25e08:	movw	r0, #41260	; 0xa12c
   25e0c:	movt	r0, #4
   25e10:	ldr	r0, [r0]
   25e14:	ldr	r1, [sp, #52]	; 0x34
   25e18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25e1c:	str	r0, [sp, #20]
   25e20:	mov	r0, r1
   25e24:	mov	r1, r2
   25e28:	ldr	r2, [sp, #20]
   25e2c:	blx	r2
   25e30:	ldr	r0, [fp, #-8]
   25e34:	movw	r1, #0
   25e38:	str	r1, [r0, #4]
   25e3c:	mvn	r0, #0
   25e40:	str	r0, [fp, #-4]
   25e44:	b	2604c <__assert_fail@plt+0x14cc8>
   25e48:	ldr	r0, [fp, #-16]
   25e4c:	bl	1ce88 <__assert_fail@plt+0xbb04>
   25e50:	str	r0, [fp, #-20]	; 0xffffffec
   25e54:	ldr	r0, [fp, #-20]	; 0xffffffec
   25e58:	cmp	r0, #0
   25e5c:	bls	25ed0 <__assert_fail@plt+0x14b4c>
   25e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25e64:	ldr	r1, [fp, #-20]	; 0xffffffec
   25e68:	mul	r0, r0, r1
   25e6c:	add	r0, r0, #31
   25e70:	lsr	r0, r0, #5
   25e74:	str	r0, [fp, #-32]	; 0xffffffe0
   25e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e7c:	ldr	r1, [fp, #-8]
   25e80:	ldr	r1, [r1]
   25e84:	cmp	r0, r1
   25e88:	ble	25ea0 <__assert_fail@plt+0x14b1c>
   25e8c:	ldr	r0, [fp, #-8]
   25e90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25e94:	bl	1d994 <__assert_fail@plt+0xc610>
   25e98:	str	r0, [sp, #16]
   25e9c:	b	25eac <__assert_fail@plt+0x14b28>
   25ea0:	ldr	r0, [fp, #-8]
   25ea4:	ldr	r0, [r0, #8]
   25ea8:	str	r0, [sp, #16]
   25eac:	ldr	r0, [sp, #16]
   25eb0:	str	r0, [fp, #-36]	; 0xffffffdc
   25eb4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25eb8:	ldr	r1, [sp, #52]	; 0x34
   25ebc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ec4:	bl	1d3d8 <__assert_fail@plt+0xc054>
   25ec8:	str	r0, [fp, #-28]	; 0xffffffe4
   25ecc:	b	25fb4 <__assert_fail@plt+0x14c30>
   25ed0:	ldr	r1, [fp, #-16]
   25ed4:	add	r0, sp, #40	; 0x28
   25ed8:	bl	1d0d8 <__assert_fail@plt+0xbd54>
   25edc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25ee0:	ldr	r1, [sp, #40]	; 0x28
   25ee4:	add	r0, r0, r1
   25ee8:	sub	r0, r0, #1
   25eec:	ldr	r1, [sp, #40]	; 0x28
   25ef0:	udiv	r0, r0, r1
   25ef4:	str	r0, [fp, #-32]	; 0xffffffe0
   25ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25efc:	ldr	r1, [fp, #-8]
   25f00:	ldr	r1, [r1]
   25f04:	cmp	r0, r1
   25f08:	ble	25f20 <__assert_fail@plt+0x14b9c>
   25f0c:	ldr	r0, [fp, #-8]
   25f10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25f14:	bl	1d994 <__assert_fail@plt+0xc610>
   25f18:	str	r0, [sp, #12]
   25f1c:	b	25f2c <__assert_fail@plt+0x14ba8>
   25f20:	ldr	r0, [fp, #-8]
   25f24:	ldr	r0, [r0, #8]
   25f28:	str	r0, [sp, #12]
   25f2c:	ldr	r0, [sp, #12]
   25f30:	str	r0, [fp, #-36]	; 0xffffffdc
   25f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25f38:	ldr	r1, [sp, #52]	; 0x34
   25f3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25f40:	ldr	r3, [fp, #-16]
   25f44:	add	ip, sp, #40	; 0x28
   25f48:	str	ip, [sp]
   25f4c:	bl	1d4f4 <__assert_fail@plt+0xc170>
   25f50:	str	r0, [fp, #-28]	; 0xffffffe4
   25f54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25f58:	cmp	r0, #0
   25f5c:	ble	25f64 <__assert_fail@plt+0x14be0>
   25f60:	b	25f84 <__assert_fail@plt+0x14c00>
   25f64:	movw	r0, #32896	; 0x8080
   25f68:	movt	r0, #3
   25f6c:	movw	r1, #30584	; 0x7778
   25f70:	movt	r1, #3
   25f74:	movw	r2, #4405	; 0x1135
   25f78:	movw	r3, #32845	; 0x804d
   25f7c:	movt	r3, #3
   25f80:	bl	11384 <__assert_fail@plt>
   25f84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25f88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25f8c:	sub	r1, r1, #1
   25f90:	add	r0, r0, r1, lsl #2
   25f94:	ldr	r0, [r0]
   25f98:	cmp	r0, #0
   25f9c:	movw	r0, #0
   25fa0:	moveq	r0, #1
   25fa4:	and	r0, r0, #1
   25fa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25fac:	sub	r0, r1, r0
   25fb0:	str	r0, [fp, #-28]	; 0xffffffe4
   25fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25fb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25fbc:	cmp	r0, r1
   25fc0:	bgt	25fc8 <__assert_fail@plt+0x14c44>
   25fc4:	b	25fe8 <__assert_fail@plt+0x14c64>
   25fc8:	movw	r0, #32903	; 0x8087
   25fcc:	movt	r0, #3
   25fd0:	movw	r1, #30584	; 0x7778
   25fd4:	movt	r1, #3
   25fd8:	movw	r2, #4408	; 0x1138
   25fdc:	movw	r3, #32845	; 0x804d
   25fe0:	movt	r3, #3
   25fe4:	bl	11384 <__assert_fail@plt>
   25fe8:	movw	r0, #41260	; 0xa12c
   25fec:	movt	r0, #4
   25ff0:	ldr	r0, [r0]
   25ff4:	ldr	r1, [sp, #52]	; 0x34
   25ff8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25ffc:	str	r0, [sp, #8]
   26000:	mov	r0, r1
   26004:	mov	r1, r2
   26008:	ldr	r2, [sp, #8]
   2600c:	blx	r2
   26010:	ldr	r0, [fp, #-48]	; 0xffffffd0
   26014:	cmp	r0, #0
   26018:	beq	26030 <__assert_fail@plt+0x14cac>
   2601c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26020:	movw	r1, #0
   26024:	sub	r0, r1, r0
   26028:	str	r0, [sp, #4]
   2602c:	b	26038 <__assert_fail@plt+0x14cb4>
   26030:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26034:	str	r0, [sp, #4]
   26038:	ldr	r0, [sp, #4]
   2603c:	ldr	r1, [fp, #-8]
   26040:	str	r0, [r1, #4]
   26044:	movw	r0, #0
   26048:	str	r0, [fp, #-4]
   2604c:	ldr	r0, [fp, #-4]
   26050:	mov	sp, fp
   26054:	pop	{fp, pc}
   26058:	push	{fp, lr}
   2605c:	mov	fp, sp
   26060:	sub	sp, sp, #16
   26064:	str	r0, [fp, #-4]
   26068:	str	r1, [sp, #8]
   2606c:	str	r2, [sp, #4]
   26070:	ldr	r0, [fp, #-4]
   26074:	bl	1d714 <__assert_fail@plt+0xc390>
   26078:	ldr	r0, [fp, #-4]
   2607c:	ldr	r1, [sp, #8]
   26080:	ldr	r2, [sp, #4]
   26084:	bl	25a90 <__assert_fail@plt+0x1470c>
   26088:	mov	sp, fp
   2608c:	pop	{fp, pc}
   26090:	push	{fp, lr}
   26094:	mov	fp, sp
   26098:	sub	sp, sp, #32
   2609c:	str	r0, [fp, #-8]
   260a0:	str	r1, [fp, #-12]
   260a4:	str	r2, [sp, #16]
   260a8:	ldr	r1, [fp, #-12]
   260ac:	ldr	r2, [sp, #16]
   260b0:	movw	r0, #0
   260b4:	bl	2573c <__assert_fail@plt+0x143b8>
   260b8:	str	r0, [sp, #12]
   260bc:	ldr	r0, [sp, #12]
   260c0:	movw	r1, #0
   260c4:	cmp	r0, r1
   260c8:	bne	260d8 <__assert_fail@plt+0x14d54>
   260cc:	movw	r0, #0
   260d0:	str	r0, [fp, #-4]
   260d4:	b	26130 <__assert_fail@plt+0x14dac>
   260d8:	ldr	r0, [sp, #12]
   260dc:	bl	11270 <strlen@plt>
   260e0:	str	r0, [sp, #8]
   260e4:	ldr	r0, [sp, #12]
   260e8:	ldr	r2, [sp, #8]
   260ec:	ldr	r3, [fp, #-8]
   260f0:	movw	r1, #1
   260f4:	bl	111a4 <fwrite@plt>
   260f8:	str	r0, [sp, #4]
   260fc:	movw	r0, #41260	; 0xa12c
   26100:	movt	r0, #4
   26104:	ldr	r0, [r0]
   26108:	ldr	r1, [sp, #12]
   2610c:	ldr	r2, [sp, #8]
   26110:	add	r2, r2, #1
   26114:	str	r0, [sp]
   26118:	mov	r0, r1
   2611c:	mov	r1, r2
   26120:	ldr	r2, [sp]
   26124:	blx	r2
   26128:	ldr	r0, [sp, #4]
   2612c:	str	r0, [fp, #-4]
   26130:	ldr	r0, [fp, #-4]
   26134:	mov	sp, fp
   26138:	pop	{fp, pc}
   2613c:	push	{r4, sl, fp, lr}
   26140:	add	fp, sp, #8
   26144:	sub	sp, sp, #72	; 0x48
   26148:	ldr	ip, [fp, #16]
   2614c:	ldr	lr, [fp, #12]
   26150:	ldr	r4, [fp, #8]
   26154:	str	r0, [fp, #-12]
   26158:	str	r1, [fp, #-16]
   2615c:	str	r2, [fp, #-20]	; 0xffffffec
   26160:	str	r3, [fp, #-24]	; 0xffffffe8
   26164:	ldr	r0, [fp, #12]
   26168:	cmp	r0, #0
   2616c:	str	r4, [sp, #20]
   26170:	str	lr, [sp, #16]
   26174:	str	ip, [sp, #12]
   26178:	beq	26188 <__assert_fail@plt+0x14e04>
   2617c:	movw	r0, #32915	; 0x8093
   26180:	movt	r0, #3
   26184:	bl	2226c <__assert_fail@plt+0x10ee8>
   26188:	ldr	r0, [fp, #-20]	; 0xffffffec
   2618c:	cmp	r0, #1
   26190:	beq	261a0 <__assert_fail@plt+0x14e1c>
   26194:	ldr	r0, [fp, #-20]	; 0xffffffec
   26198:	cmn	r0, #1
   2619c:	bne	261a4 <__assert_fail@plt+0x14e20>
   261a0:	b	261c4 <__assert_fail@plt+0x14e40>
   261a4:	movw	r0, #32948	; 0x80b4
   261a8:	movt	r0, #3
   261ac:	movw	r1, #30584	; 0x7778
   261b0:	movt	r1, #3
   261b4:	movw	r2, #4468	; 0x1174
   261b8:	movw	r3, #32974	; 0x80ce
   261bc:	movt	r3, #3
   261c0:	bl	11384 <__assert_fail@plt>
   261c4:	ldr	r0, [fp, #8]
   261c8:	cmn	r0, #1
   261cc:	blt	261e0 <__assert_fail@plt+0x14e5c>
   261d0:	ldr	r0, [fp, #8]
   261d4:	cmp	r0, #1
   261d8:	bgt	261e0 <__assert_fail@plt+0x14e5c>
   261dc:	b	26200 <__assert_fail@plt+0x14e7c>
   261e0:	movw	r0, #33054	; 0x811e
   261e4:	movt	r0, #3
   261e8:	movw	r1, #30584	; 0x7778
   261ec:	movt	r1, #3
   261f0:	movw	r2, #4469	; 0x1175
   261f4:	movw	r3, #32974	; 0x80ce
   261f8:	movt	r3, #3
   261fc:	bl	11384 <__assert_fail@plt>
   26200:	ldr	r0, [fp, #8]
   26204:	cmp	r0, #0
   26208:	bne	26214 <__assert_fail@plt+0x14e90>
   2620c:	bl	2647c <__assert_fail@plt+0x150f8>
   26210:	str	r0, [fp, #8]
   26214:	ldr	r0, [fp, #16]
   26218:	str	r0, [fp, #-28]	; 0xffffffe4
   2621c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26220:	ldr	r1, [fp, #8]
   26224:	cmp	r0, r1
   26228:	beq	2623c <__assert_fail@plt+0x14eb8>
   2622c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26230:	lsl	r0, r0, #1
   26234:	str	r0, [sp, #8]
   26238:	b	26248 <__assert_fail@plt+0x14ec4>
   2623c:	movw	r0, #0
   26240:	str	r0, [sp, #8]
   26244:	b	26248 <__assert_fail@plt+0x14ec4>
   26248:	ldr	r0, [sp, #8]
   2624c:	str	r0, [fp, #-32]	; 0xffffffe0
   26250:	ldr	r0, [fp, #-20]	; 0xffffffec
   26254:	cmp	r0, #1
   26258:	bne	26288 <__assert_fail@plt+0x14f04>
   2625c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26260:	ldr	r1, [fp, #-16]
   26264:	sub	r1, r1, #1
   26268:	mul	r0, r0, r1
   2626c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26270:	add	r0, r1, r0
   26274:	str	r0, [fp, #-28]	; 0xffffffe4
   26278:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2627c:	movw	r1, #0
   26280:	sub	r0, r1, r0
   26284:	str	r0, [fp, #-32]	; 0xffffffe0
   26288:	ldr	r0, [fp, #8]
   2628c:	cmp	r0, #1
   26290:	bne	262a8 <__assert_fail@plt+0x14f24>
   26294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26298:	sub	r0, r0, #1
   2629c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   262a0:	add	r0, r1, r0
   262a4:	str	r0, [fp, #-28]	; 0xffffffe4
   262a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   262ac:	ldr	r1, [fp, #-16]
   262b0:	mul	r0, r0, r1
   262b4:	add	r0, r0, #3
   262b8:	lsr	r0, r0, #2
   262bc:	str	r0, [sp, #40]	; 0x28
   262c0:	ldr	r0, [sp, #40]	; 0x28
   262c4:	ldr	r1, [fp, #-12]
   262c8:	ldr	r1, [r1]
   262cc:	cmp	r0, r1
   262d0:	ble	262e8 <__assert_fail@plt+0x14f64>
   262d4:	ldr	r0, [fp, #-12]
   262d8:	ldr	r1, [sp, #40]	; 0x28
   262dc:	bl	1d994 <__assert_fail@plt+0xc610>
   262e0:	str	r0, [sp, #4]
   262e4:	b	262f4 <__assert_fail@plt+0x14f70>
   262e8:	ldr	r0, [fp, #-12]
   262ec:	ldr	r0, [r0, #8]
   262f0:	str	r0, [sp, #4]
   262f4:	ldr	r0, [sp, #4]
   262f8:	str	r0, [fp, #-36]	; 0xffffffdc
   262fc:	movw	r0, #0
   26300:	str	r0, [sp, #36]	; 0x24
   26304:	str	r0, [sp, #32]
   26308:	str	r0, [sp, #28]
   2630c:	ldr	r0, [fp, #-16]
   26310:	cmp	r0, #0
   26314:	bls	263e0 <__assert_fail@plt+0x1505c>
   26318:	movw	r0, #0
   2631c:	str	r0, [sp, #24]
   26320:	ldr	r0, [sp, #24]
   26324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26328:	cmp	r0, r1
   2632c:	bcs	263b8 <__assert_fail@plt+0x15034>
   26330:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26334:	ldrb	r0, [r0]
   26338:	ldr	r1, [sp, #32]
   2633c:	add	r2, r1, #1
   26340:	str	r2, [sp, #32]
   26344:	lsl	r1, r1, #3
   26348:	lsl	r0, r0, r1
   2634c:	ldr	r1, [sp, #36]	; 0x24
   26350:	orr	r0, r1, r0
   26354:	str	r0, [sp, #36]	; 0x24
   26358:	ldr	r0, [sp, #32]
   2635c:	cmp	r0, #4
   26360:	bne	2638c <__assert_fail@plt+0x15008>
   26364:	ldr	r0, [sp, #36]	; 0x24
   26368:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2636c:	ldr	r2, [sp, #28]
   26370:	add	r3, r2, #1
   26374:	str	r3, [sp, #28]
   26378:	add	r1, r1, r2, lsl #2
   2637c:	str	r0, [r1]
   26380:	movw	r0, #0
   26384:	str	r0, [sp, #32]
   26388:	str	r0, [sp, #36]	; 0x24
   2638c:	b	26390 <__assert_fail@plt+0x1500c>
   26390:	ldr	r0, [sp, #24]
   26394:	add	r0, r0, #1
   26398:	str	r0, [sp, #24]
   2639c:	ldr	r0, [fp, #8]
   263a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   263a4:	movw	r2, #0
   263a8:	sub	r0, r2, r0
   263ac:	add	r0, r1, r0
   263b0:	str	r0, [fp, #-28]	; 0xffffffe4
   263b4:	b	26320 <__assert_fail@plt+0x14f9c>
   263b8:	b	263bc <__assert_fail@plt+0x15038>
   263bc:	ldr	r0, [fp, #-16]
   263c0:	mvn	r1, #0
   263c4:	add	r0, r0, r1
   263c8:	str	r0, [fp, #-16]
   263cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   263d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   263d4:	add	r0, r1, r0
   263d8:	str	r0, [fp, #-28]	; 0xffffffe4
   263dc:	b	2630c <__assert_fail@plt+0x14f88>
   263e0:	ldr	r0, [sp, #28]
   263e4:	ldr	r1, [sp, #32]
   263e8:	cmp	r1, #0
   263ec:	movw	r1, #0
   263f0:	movhi	r1, #1
   263f4:	and	r1, r1, #1
   263f8:	add	r0, r0, r1
   263fc:	ldr	r1, [sp, #40]	; 0x28
   26400:	cmp	r0, r1
   26404:	bne	2640c <__assert_fail@plt+0x15088>
   26408:	b	2642c <__assert_fail@plt+0x150a8>
   2640c:	movw	r0, #33082	; 0x813a
   26410:	movt	r0, #3
   26414:	movw	r1, #30584	; 0x7778
   26418:	movt	r1, #3
   2641c:	movw	r2, #4507	; 0x119b
   26420:	movw	r3, #32974	; 0x80ce
   26424:	movt	r3, #3
   26428:	bl	11384 <__assert_fail@plt>
   2642c:	ldr	r0, [sp, #36]	; 0x24
   26430:	cmp	r0, #0
   26434:	beq	26458 <__assert_fail@plt+0x150d4>
   26438:	ldr	r0, [sp, #36]	; 0x24
   2643c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26440:	ldr	r2, [sp, #28]
   26444:	add	r3, r2, #1
   26448:	str	r3, [sp, #28]
   2644c:	add	r1, r1, r2, lsl #2
   26450:	str	r0, [r1]
   26454:	b	26468 <__assert_fail@plt+0x150e4>
   26458:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2645c:	ldr	r1, [sp, #28]
   26460:	bl	1b4e4 <__assert_fail@plt+0xa160>
   26464:	str	r0, [sp, #28]
   26468:	ldr	r0, [sp, #28]
   2646c:	ldr	r1, [fp, #-12]
   26470:	str	r0, [r1, #4]
   26474:	sub	sp, fp, #8
   26478:	pop	{r4, sl, fp, pc}
   2647c:	sub	sp, sp, #4
   26480:	movw	r0, #30580	; 0x7774
   26484:	movt	r0, #3
   26488:	str	r0, [sp]
   2648c:	ldr	r0, [sp]
   26490:	ldrb	r0, [r0]
   26494:	movw	r1, #1
   26498:	sub	r0, r1, r0
   2649c:	add	sp, sp, #4
   264a0:	bx	lr
   264a4:	push	{r4, sl, fp, lr}
   264a8:	add	fp, sp, #8
   264ac:	sub	sp, sp, #88	; 0x58
   264b0:	ldr	ip, [fp, #16]
   264b4:	ldr	lr, [fp, #12]
   264b8:	ldr	r4, [fp, #8]
   264bc:	str	r0, [fp, #-12]
   264c0:	str	r1, [fp, #-16]
   264c4:	str	r2, [fp, #-20]	; 0xffffffec
   264c8:	str	r3, [fp, #-24]	; 0xffffffe8
   264cc:	ldr	r0, [fp, #12]
   264d0:	cmp	r0, #0
   264d4:	str	r4, [sp, #24]
   264d8:	str	lr, [sp, #20]
   264dc:	str	ip, [sp, #16]
   264e0:	beq	264f0 <__assert_fail@plt+0x1516c>
   264e4:	movw	r0, #33104	; 0x8150
   264e8:	movt	r0, #3
   264ec:	bl	2226c <__assert_fail@plt+0x10ee8>
   264f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   264f4:	cmp	r0, #1
   264f8:	beq	26508 <__assert_fail@plt+0x15184>
   264fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   26500:	cmn	r0, #1
   26504:	bne	2650c <__assert_fail@plt+0x15188>
   26508:	b	2652c <__assert_fail@plt+0x151a8>
   2650c:	movw	r0, #32948	; 0x80b4
   26510:	movt	r0, #3
   26514:	movw	r1, #30584	; 0x7778
   26518:	movt	r1, #3
   2651c:	movw	r2, #4526	; 0x11ae
   26520:	movw	r3, #33137	; 0x8171
   26524:	movt	r3, #3
   26528:	bl	11384 <__assert_fail@plt>
   2652c:	ldr	r0, [fp, #8]
   26530:	cmn	r0, #1
   26534:	blt	26548 <__assert_fail@plt+0x151c4>
   26538:	ldr	r0, [fp, #8]
   2653c:	cmp	r0, #1
   26540:	bgt	26548 <__assert_fail@plt+0x151c4>
   26544:	b	26568 <__assert_fail@plt+0x151e4>
   26548:	movw	r0, #33054	; 0x811e
   2654c:	movt	r0, #3
   26550:	movw	r1, #30584	; 0x7778
   26554:	movt	r1, #3
   26558:	movw	r2, #4527	; 0x11af
   2655c:	movw	r3, #33137	; 0x8171
   26560:	movt	r3, #3
   26564:	bl	11384 <__assert_fail@plt>
   26568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2656c:	cmp	r0, #0
   26570:	bhi	26584 <__assert_fail@plt+0x15200>
   26574:	ldr	r0, [fp, #16]
   26578:	ldr	r0, [r0, #4]
   2657c:	cmp	r0, #0
   26580:	bne	26588 <__assert_fail@plt+0x15204>
   26584:	b	265a8 <__assert_fail@plt+0x15224>
   26588:	movw	r0, #33220	; 0x81c4
   2658c:	movt	r0, #3
   26590:	movw	r1, #30584	; 0x7778
   26594:	movt	r1, #3
   26598:	movw	r2, #4528	; 0x11b0
   2659c:	movw	r3, #33137	; 0x8171
   265a0:	movt	r3, #3
   265a4:	bl	11384 <__assert_fail@plt>
   265a8:	ldr	r0, [fp, #16]
   265ac:	ldr	r0, [r0, #4]
   265b0:	str	r0, [fp, #-32]	; 0xffffffe0
   265b4:	movw	r0, #0
   265b8:	str	r0, [fp, #-28]	; 0xffffffe4
   265bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265c0:	cmp	r0, #0
   265c4:	beq	26908 <__assert_fail@plt+0x15584>
   265c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265cc:	cmp	r0, #0
   265d0:	blt	265e0 <__assert_fail@plt+0x1525c>
   265d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265d8:	str	r0, [sp, #12]
   265dc:	b	265f0 <__assert_fail@plt+0x1526c>
   265e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265e4:	movw	r1, #0
   265e8:	sub	r0, r1, r0
   265ec:	str	r0, [sp, #12]
   265f0:	ldr	r0, [sp, #12]
   265f4:	str	r0, [fp, #-32]	; 0xffffffe0
   265f8:	ldr	r0, [fp, #16]
   265fc:	ldr	r0, [r0, #8]
   26600:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26604:	sub	r1, r1, #1
   26608:	add	r0, r0, r1, lsl #2
   2660c:	ldr	r0, [r0]
   26610:	str	r0, [sp, #48]	; 0x30
   26614:	ldr	r0, [sp, #48]	; 0x30
   26618:	cmp	r0, #0
   2661c:	beq	26624 <__assert_fail@plt+0x152a0>
   26620:	b	26644 <__assert_fail@plt+0x152c0>
   26624:	movw	r0, #33249	; 0x81e1
   26628:	movt	r0, #3
   2662c:	movw	r1, #30584	; 0x7778
   26630:	movt	r1, #3
   26634:	movw	r2, #4548	; 0x11c4
   26638:	movw	r3, #33137	; 0x8171
   2663c:	movt	r3, #3
   26640:	bl	11384 <__assert_fail@plt>
   26644:	movw	r0, #0
   26648:	str	r0, [fp, #-36]	; 0xffffffdc
   2664c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26650:	cmp	r0, #0
   26654:	bne	26690 <__assert_fail@plt+0x1530c>
   26658:	b	2665c <__assert_fail@plt+0x152d8>
   2665c:	movw	r0, #8
   26660:	str	r0, [sp, #36]	; 0x24
   26664:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26668:	add	r0, r0, #1
   2666c:	str	r0, [fp, #-36]	; 0xffffffdc
   26670:	ldr	r0, [sp, #36]	; 0x24
   26674:	ldr	r1, [sp, #48]	; 0x30
   26678:	lsr	r0, r1, r0
   2667c:	str	r0, [sp, #48]	; 0x30
   26680:	ldr	r0, [sp, #48]	; 0x30
   26684:	cmp	r0, #0
   26688:	bne	2665c <__assert_fail@plt+0x152d8>
   2668c:	b	26690 <__assert_fail@plt+0x1530c>
   26690:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26694:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26698:	sub	r1, r1, #1
   2669c:	lsl	r1, r1, #2
   266a0:	add	r0, r0, r1
   266a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   266a8:	add	r0, r0, r1
   266ac:	sub	r0, r0, #1
   266b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   266b4:	udiv	r0, r0, r1
   266b8:	str	r0, [fp, #-28]	; 0xffffffe4
   266bc:	ldr	r0, [fp, #-12]
   266c0:	movw	r1, #0
   266c4:	cmp	r0, r1
   266c8:	bne	266f8 <__assert_fail@plt+0x15374>
   266cc:	movw	r0, #41252	; 0xa124
   266d0:	movt	r0, #4
   266d4:	ldr	r0, [r0]
   266d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   266dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   266e0:	mul	r1, r1, r2
   266e4:	str	r0, [sp, #8]
   266e8:	mov	r0, r1
   266ec:	ldr	r1, [sp, #8]
   266f0:	blx	r1
   266f4:	str	r0, [fp, #-12]
   266f8:	ldr	r0, [fp, #8]
   266fc:	cmp	r0, #0
   26700:	bne	2670c <__assert_fail@plt+0x15388>
   26704:	bl	2647c <__assert_fail@plt+0x150f8>
   26708:	str	r0, [fp, #8]
   2670c:	ldr	r0, [fp, #-12]
   26710:	str	r0, [fp, #-40]	; 0xffffffd8
   26714:	ldr	r0, [fp, #-20]	; 0xffffffec
   26718:	ldr	r1, [fp, #8]
   2671c:	cmp	r0, r1
   26720:	beq	26734 <__assert_fail@plt+0x153b0>
   26724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26728:	lsl	r0, r0, #1
   2672c:	str	r0, [sp, #4]
   26730:	b	26740 <__assert_fail@plt+0x153bc>
   26734:	movw	r0, #0
   26738:	str	r0, [sp, #4]
   2673c:	b	26740 <__assert_fail@plt+0x153bc>
   26740:	ldr	r0, [sp, #4]
   26744:	str	r0, [fp, #-44]	; 0xffffffd4
   26748:	ldr	r0, [fp, #-20]	; 0xffffffec
   2674c:	cmp	r0, #1
   26750:	bne	26780 <__assert_fail@plt+0x153fc>
   26754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26758:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2675c:	sub	r1, r1, #1
   26760:	mul	r0, r0, r1
   26764:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26768:	add	r0, r1, r0
   2676c:	str	r0, [fp, #-40]	; 0xffffffd8
   26770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26774:	movw	r1, #0
   26778:	sub	r0, r1, r0
   2677c:	str	r0, [fp, #-44]	; 0xffffffd4
   26780:	ldr	r0, [fp, #8]
   26784:	cmp	r0, #1
   26788:	bne	267a0 <__assert_fail@plt+0x1541c>
   2678c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26790:	sub	r0, r0, #1
   26794:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26798:	add	r0, r1, r0
   2679c:	str	r0, [fp, #-40]	; 0xffffffd8
   267a0:	movw	r0, #0
   267a4:	str	r0, [sp, #44]	; 0x2c
   267a8:	str	r0, [sp, #40]	; 0x28
   267ac:	str	r0, [fp, #-36]	; 0xffffffdc
   267b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   267b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   267b8:	cmp	r0, r1
   267bc:	bcs	2689c <__assert_fail@plt+0x15518>
   267c0:	movw	r0, #0
   267c4:	str	r0, [sp, #32]
   267c8:	ldr	r0, [sp, #32]
   267cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   267d0:	cmp	r0, r1
   267d4:	bcs	26878 <__assert_fail@plt+0x154f4>
   267d8:	movw	r0, #8
   267dc:	str	r0, [sp, #28]
   267e0:	ldr	r0, [sp, #44]	; 0x2c
   267e4:	cmp	r0, #0
   267e8:	bne	26824 <__assert_fail@plt+0x154a0>
   267ec:	ldr	r0, [sp, #40]	; 0x28
   267f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   267f4:	cmp	r0, r1
   267f8:	bge	2681c <__assert_fail@plt+0x15498>
   267fc:	ldr	r0, [fp, #16]
   26800:	ldr	r0, [r0, #8]
   26804:	ldr	r1, [sp, #40]	; 0x28
   26808:	add	r2, r1, #1
   2680c:	str	r2, [sp, #40]	; 0x28
   26810:	add	r0, r0, r1, lsl #2
   26814:	ldr	r0, [r0]
   26818:	str	r0, [sp, #48]	; 0x30
   2681c:	movw	r0, #4
   26820:	str	r0, [sp, #44]	; 0x2c
   26824:	ldr	r0, [sp, #48]	; 0x30
   26828:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2682c:	strb	r0, [r1]
   26830:	ldr	r0, [sp, #28]
   26834:	ldr	r1, [sp, #48]	; 0x30
   26838:	lsr	r0, r1, r0
   2683c:	str	r0, [sp, #48]	; 0x30
   26840:	ldr	r0, [sp, #44]	; 0x2c
   26844:	mvn	r1, #0
   26848:	add	r0, r0, r1
   2684c:	str	r0, [sp, #44]	; 0x2c
   26850:	ldr	r0, [sp, #32]
   26854:	add	r0, r0, #1
   26858:	str	r0, [sp, #32]
   2685c:	ldr	r0, [fp, #8]
   26860:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26864:	movw	r2, #0
   26868:	sub	r0, r2, r0
   2686c:	add	r0, r1, r0
   26870:	str	r0, [fp, #-40]	; 0xffffffd8
   26874:	b	267c8 <__assert_fail@plt+0x15444>
   26878:	b	2687c <__assert_fail@plt+0x154f8>
   2687c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26880:	add	r0, r0, #1
   26884:	str	r0, [fp, #-36]	; 0xffffffdc
   26888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2688c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26890:	add	r0, r1, r0
   26894:	str	r0, [fp, #-40]	; 0xffffffd8
   26898:	b	267b0 <__assert_fail@plt+0x1542c>
   2689c:	ldr	r0, [sp, #40]	; 0x28
   268a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   268a4:	cmp	r0, r1
   268a8:	bne	268b0 <__assert_fail@plt+0x1552c>
   268ac:	b	268d0 <__assert_fail@plt+0x1554c>
   268b0:	movw	r0, #33259	; 0x81eb
   268b4:	movt	r0, #3
   268b8:	movw	r1, #30584	; 0x7778
   268bc:	movt	r1, #3
   268c0:	movw	r2, #4611	; 0x1203
   268c4:	movw	r3, #33137	; 0x8171
   268c8:	movt	r3, #3
   268cc:	bl	11384 <__assert_fail@plt>
   268d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   268d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   268d8:	cmp	r0, r1
   268dc:	bne	268e4 <__assert_fail@plt+0x15560>
   268e0:	b	26904 <__assert_fail@plt+0x15580>
   268e4:	movw	r0, #33267	; 0x81f3
   268e8:	movt	r0, #3
   268ec:	movw	r1, #30584	; 0x7778
   268f0:	movt	r1, #3
   268f4:	movw	r2, #4612	; 0x1204
   268f8:	movw	r3, #33137	; 0x8171
   268fc:	movt	r3, #3
   26900:	bl	11384 <__assert_fail@plt>
   26904:	b	26908 <__assert_fail@plt+0x15584>
   26908:	ldr	r0, [fp, #-16]
   2690c:	movw	r1, #0
   26910:	cmp	r0, r1
   26914:	beq	26924 <__assert_fail@plt+0x155a0>
   26918:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2691c:	ldr	r1, [fp, #-16]
   26920:	str	r0, [r1]
   26924:	ldr	r0, [fp, #-12]
   26928:	sub	sp, fp, #8
   2692c:	pop	{r4, sl, fp, pc}
   26930:	push	{fp, lr}
   26934:	mov	fp, sp
   26938:	sub	sp, sp, #96	; 0x60
   2693c:	str	r0, [fp, #-4]
   26940:	str	r1, [fp, #-8]
   26944:	str	r2, [fp, #-12]
   26948:	movw	r0, #0
   2694c:	str	r0, [fp, #-16]
   26950:	ldr	r0, [fp, #-8]
   26954:	cmp	r0, #0
   26958:	bls	26c10 <__assert_fail@plt+0x1588c>
   2695c:	ldr	r0, [fp, #-8]
   26960:	ldr	r1, [fp, #-12]
   26964:	ldr	r1, [r1]
   26968:	movw	r2, #32
   2696c:	sub	r1, r2, r1
   26970:	lsr	r0, r0, r1
   26974:	str	r0, [fp, #-20]	; 0xffffffec
   26978:	ldr	r0, [fp, #-8]
   2697c:	ldr	r1, [fp, #-12]
   26980:	ldr	r1, [r1]
   26984:	lsl	r0, r0, r1
   26988:	str	r0, [fp, #-24]	; 0xffffffe8
   2698c:	b	26990 <__assert_fail@plt+0x1560c>
   26990:	movw	r0, #32
   26994:	str	r0, [sp, #48]	; 0x30
   26998:	ldr	r0, [fp, #-20]	; 0xffffffec
   2699c:	str	r0, [sp, #12]
   269a0:	ldr	r0, [fp, #-12]
   269a4:	ldr	r0, [r0, #12]
   269a8:	str	r0, [sp, #8]
   269ac:	ldr	r0, [sp, #12]
   269b0:	movw	r1, #65535	; 0xffff
   269b4:	and	r0, r0, r1
   269b8:	str	r0, [sp, #28]
   269bc:	ldr	r0, [sp, #12]
   269c0:	lsr	r0, r0, #16
   269c4:	str	r0, [sp, #20]
   269c8:	ldr	r0, [sp, #8]
   269cc:	and	r0, r0, r1
   269d0:	str	r0, [sp, #24]
   269d4:	ldr	r0, [sp, #8]
   269d8:	lsr	r0, r0, #16
   269dc:	str	r0, [sp, #16]
   269e0:	ldr	r0, [sp, #28]
   269e4:	ldr	r1, [sp, #24]
   269e8:	mul	r0, r0, r1
   269ec:	str	r0, [sp, #44]	; 0x2c
   269f0:	ldr	r0, [sp, #28]
   269f4:	ldr	r1, [sp, #16]
   269f8:	mul	r0, r0, r1
   269fc:	str	r0, [sp, #40]	; 0x28
   26a00:	ldr	r0, [sp, #20]
   26a04:	ldr	r1, [sp, #24]
   26a08:	mul	r0, r0, r1
   26a0c:	str	r0, [sp, #36]	; 0x24
   26a10:	ldr	r0, [sp, #20]
   26a14:	ldr	r1, [sp, #16]
   26a18:	mul	r0, r0, r1
   26a1c:	str	r0, [sp, #32]
   26a20:	ldr	r0, [sp, #44]	; 0x2c
   26a24:	lsr	r0, r0, #16
   26a28:	ldr	r1, [sp, #40]	; 0x28
   26a2c:	add	r0, r1, r0
   26a30:	str	r0, [sp, #40]	; 0x28
   26a34:	ldr	r0, [sp, #36]	; 0x24
   26a38:	ldr	r1, [sp, #40]	; 0x28
   26a3c:	add	r0, r1, r0
   26a40:	str	r0, [sp, #40]	; 0x28
   26a44:	ldr	r0, [sp, #40]	; 0x28
   26a48:	ldr	r1, [sp, #36]	; 0x24
   26a4c:	cmp	r0, r1
   26a50:	bcs	26a60 <__assert_fail@plt+0x156dc>
   26a54:	ldr	r0, [sp, #32]
   26a58:	add	r0, r0, #65536	; 0x10000
   26a5c:	str	r0, [sp, #32]
   26a60:	ldr	r0, [sp, #32]
   26a64:	ldr	r1, [sp, #40]	; 0x28
   26a68:	lsr	r1, r1, #16
   26a6c:	add	r0, r0, r1
   26a70:	str	r0, [fp, #-32]	; 0xffffffe0
   26a74:	ldr	r0, [sp, #40]	; 0x28
   26a78:	lsl	r0, r0, #16
   26a7c:	ldr	r1, [sp, #44]	; 0x2c
   26a80:	movw	r2, #65535	; 0xffff
   26a84:	and	r1, r1, r2
   26a88:	add	r0, r0, r1
   26a8c:	str	r0, [fp, #-36]	; 0xffffffdc
   26a90:	b	26a94 <__assert_fail@plt+0x15710>
   26a94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26a9c:	add	r0, r0, r1
   26aa0:	str	r0, [sp, #4]
   26aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   26aac:	add	r1, r1, #1
   26ab0:	add	r0, r0, r1
   26ab4:	ldr	r1, [sp, #4]
   26ab8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26abc:	cmp	r1, r2
   26ac0:	movw	r1, #0
   26ac4:	movcc	r1, #1
   26ac8:	and	r1, r1, #1
   26acc:	add	r0, r0, r1
   26ad0:	str	r0, [fp, #-32]	; 0xffffffe0
   26ad4:	ldr	r0, [sp, #4]
   26ad8:	str	r0, [fp, #-36]	; 0xffffffdc
   26adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26ae0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26ae4:	ldr	r2, [fp, #-12]
   26ae8:	ldr	r2, [r2, #4]
   26aec:	mul	r1, r1, r2
   26af0:	sub	r0, r0, r1
   26af4:	str	r0, [fp, #-40]	; 0xffffffd8
   26af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26afc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26b00:	cmp	r0, r1
   26b04:	movw	r0, #0
   26b08:	movhi	r0, #1
   26b0c:	and	r0, r0, #1
   26b10:	movw	r1, #0
   26b14:	sub	r0, r1, r0
   26b18:	str	r0, [fp, #-44]	; 0xffffffd4
   26b1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26b20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26b24:	add	r0, r1, r0
   26b28:	str	r0, [fp, #-32]	; 0xffffffe0
   26b2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26b30:	ldr	r1, [fp, #-12]
   26b34:	ldr	r1, [r1, #4]
   26b38:	and	r0, r0, r1
   26b3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26b40:	add	r0, r1, r0
   26b44:	str	r0, [fp, #-40]	; 0xffffffd8
   26b48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26b4c:	ldr	r1, [fp, #-12]
   26b50:	ldr	r1, [r1, #4]
   26b54:	cmp	r0, r1
   26b58:	bcc	26b7c <__assert_fail@plt+0x157f8>
   26b5c:	ldr	r0, [fp, #-12]
   26b60:	ldr	r0, [r0, #4]
   26b64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26b68:	sub	r0, r1, r0
   26b6c:	str	r0, [fp, #-40]	; 0xffffffd8
   26b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26b74:	add	r0, r0, #1
   26b78:	str	r0, [fp, #-32]	; 0xffffffe0
   26b7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26b80:	str	r0, [fp, #-28]	; 0xffffffe4
   26b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26b88:	str	r0, [fp, #-8]
   26b8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26b90:	ldr	r1, [fp, #-12]
   26b94:	ldr	r1, [r1]
   26b98:	movw	r2, #32
   26b9c:	sub	r1, r2, r1
   26ba0:	mvn	r2, #0
   26ba4:	lsr	r1, r2, r1
   26ba8:	and	r0, r0, r1
   26bac:	cmp	r0, #0
   26bb0:	bne	26bb8 <__assert_fail@plt+0x15834>
   26bb4:	b	26bd8 <__assert_fail@plt+0x15854>
   26bb8:	movw	r0, #33533	; 0x82fd
   26bbc:	movt	r0, #3
   26bc0:	movw	r1, #30584	; 0x7778
   26bc4:	movt	r1, #3
   26bc8:	movw	r2, #1259	; 0x4eb
   26bcc:	movw	r3, #33592	; 0x8338
   26bd0:	movt	r3, #3
   26bd4:	bl	11384 <__assert_fail@plt>
   26bd8:	ldr	r0, [fp, #-12]
   26bdc:	ldr	r0, [r0]
   26be0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26be4:	lsr	r0, r1, r0
   26be8:	str	r0, [fp, #-28]	; 0xffffffe4
   26bec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26bf0:	ldr	r1, [fp, #-4]
   26bf4:	ldr	r2, [fp, #-16]
   26bf8:	add	r1, r1, r2
   26bfc:	strb	r0, [r1]
   26c00:	ldr	r0, [fp, #-16]
   26c04:	add	r0, r0, #1
   26c08:	str	r0, [fp, #-16]
   26c0c:	b	26950 <__assert_fail@plt+0x155cc>
   26c10:	ldr	r0, [fp, #-16]
   26c14:	mov	sp, fp
   26c18:	pop	{fp, pc}
   26c1c:	push	{fp, lr}
   26c20:	mov	fp, sp
   26c24:	sub	sp, sp, #16
   26c28:	str	r0, [fp, #-4]
   26c2c:	str	r1, [sp, #8]
   26c30:	str	r2, [sp, #4]
   26c34:	ldr	r0, [sp, #4]
   26c38:	cmp	r0, #0
   26c3c:	ble	26c44 <__assert_fail@plt+0x158c0>
   26c40:	b	26c64 <__assert_fail@plt+0x158e0>
   26c44:	movw	r0, #34148	; 0x8564
   26c48:	movt	r0, #3
   26c4c:	movw	r1, #30584	; 0x7778
   26c50:	movt	r1, #3
   26c54:	movw	r2, #368	; 0x170
   26c58:	movw	r3, #33799	; 0x8407
   26c5c:	movt	r3, #3
   26c60:	bl	11384 <__assert_fail@plt>
   26c64:	movw	r0, #41256	; 0xa128
   26c68:	movt	r0, #4
   26c6c:	ldr	r0, [r0]
   26c70:	ldr	r1, [fp, #-4]
   26c74:	ldr	r2, [sp, #8]
   26c78:	lsl	r2, r2, #2
   26c7c:	ldr	r3, [sp, #4]
   26c80:	lsl	r3, r3, #2
   26c84:	str	r0, [sp]
   26c88:	mov	r0, r1
   26c8c:	mov	r1, r2
   26c90:	mov	r2, r3
   26c94:	ldr	r3, [sp]
   26c98:	blx	r3
   26c9c:	mov	sp, fp
   26ca0:	pop	{fp, pc}
   26ca4:	push	{fp, lr}
   26ca8:	mov	fp, sp
   26cac:	sub	sp, sp, #56	; 0x38
   26cb0:	ldr	ip, [fp, #8]
   26cb4:	str	r0, [fp, #-4]
   26cb8:	str	r1, [fp, #-8]
   26cbc:	str	r2, [fp, #-12]
   26cc0:	str	r3, [fp, #-16]
   26cc4:	movw	r0, #0
   26cc8:	str	r0, [sp, #20]
   26ccc:	ldr	r0, [fp, #8]
   26cd0:	cmp	r0, #0
   26cd4:	str	ip, [sp, #12]
   26cd8:	ble	26ce0 <__assert_fail@plt+0x1595c>
   26cdc:	b	26d00 <__assert_fail@plt+0x1597c>
   26ce0:	movw	r0, #33964	; 0x84ac
   26ce4:	movt	r0, #3
   26ce8:	movw	r1, #30584	; 0x7778
   26cec:	movt	r1, #3
   26cf0:	movw	r2, #1148	; 0x47c
   26cf4:	movw	r3, #33971	; 0x84b3
   26cf8:	movt	r3, #3
   26cfc:	bl	11384 <__assert_fail@plt>
   26d00:	ldr	r0, [fp, #-12]
   26d04:	ldr	r1, [fp, #8]
   26d08:	cmp	r0, r1
   26d0c:	blt	26d14 <__assert_fail@plt+0x15990>
   26d10:	b	26d34 <__assert_fail@plt+0x159b0>
   26d14:	movw	r0, #34036	; 0x84f4
   26d18:	movt	r0, #3
   26d1c:	movw	r1, #30584	; 0x7778
   26d20:	movt	r1, #3
   26d24:	movw	r2, #1149	; 0x47d
   26d28:	movw	r3, #33971	; 0x84b3
   26d2c:	movt	r3, #3
   26d30:	bl	11384 <__assert_fail@plt>
   26d34:	ldr	r1, [fp, #-16]
   26d38:	ldr	r2, [fp, #8]
   26d3c:	add	r0, sp, #24
   26d40:	bl	222a0 <__assert_fail@plt+0x10f1c>
   26d44:	ldr	r0, [fp, #8]
   26d48:	cmp	r0, #2
   26d4c:	ble	26dbc <__assert_fail@plt+0x15a38>
   26d50:	ldr	r0, [sp, #24]
   26d54:	cmp	r0, #0
   26d58:	bls	26dbc <__assert_fail@plt+0x15a38>
   26d5c:	ldr	r0, [fp, #8]
   26d60:	bl	1d7b0 <__assert_fail@plt+0xc42c>
   26d64:	str	r0, [sp, #20]
   26d68:	ldr	r0, [sp, #20]
   26d6c:	ldr	r1, [fp, #-16]
   26d70:	ldr	r2, [fp, #8]
   26d74:	ldr	r3, [sp, #24]
   26d78:	bl	1c278 <__assert_fail@plt+0xaef4>
   26d7c:	str	r0, [sp, #16]
   26d80:	ldr	r0, [sp, #16]
   26d84:	cmp	r0, #0
   26d88:	bne	26d90 <__assert_fail@plt+0x15a0c>
   26d8c:	b	26db0 <__assert_fail@plt+0x15a2c>
   26d90:	movw	r0, #31565	; 0x7b4d
   26d94:	movt	r0, #3
   26d98:	movw	r1, #30584	; 0x7778
   26d9c:	movt	r1, #3
   26da0:	movw	r2, #1155	; 0x483
   26da4:	movw	r3, #33971	; 0x84b3
   26da8:	movt	r3, #3
   26dac:	bl	11384 <__assert_fail@plt>
   26db0:	b	26db4 <__assert_fail@plt+0x15a30>
   26db4:	ldr	r0, [sp, #20]
   26db8:	str	r0, [fp, #-16]
   26dbc:	ldr	r0, [fp, #-4]
   26dc0:	ldr	r1, [fp, #-8]
   26dc4:	ldr	r2, [fp, #-12]
   26dc8:	ldr	r3, [fp, #-16]
   26dcc:	ldr	ip, [fp, #8]
   26dd0:	str	ip, [sp]
   26dd4:	add	ip, sp, #24
   26dd8:	str	ip, [sp, #4]
   26ddc:	bl	224cc <__assert_fail@plt+0x11148>
   26de0:	ldr	r0, [sp, #20]
   26de4:	movw	r1, #0
   26de8:	cmp	r0, r1
   26dec:	beq	26dfc <__assert_fail@plt+0x15a78>
   26df0:	ldr	r0, [sp, #20]
   26df4:	ldr	r1, [fp, #8]
   26df8:	bl	1d828 <__assert_fail@plt+0xc4a4>
   26dfc:	mov	sp, fp
   26e00:	pop	{fp, pc}
   26e04:	push	{fp, lr}
   26e08:	mov	fp, sp
   26e0c:	sub	sp, sp, #32
   26e10:	str	r0, [fp, #-4]
   26e14:	str	r1, [fp, #-8]
   26e18:	str	r2, [fp, #-12]
   26e1c:	ldr	r0, [fp, #-8]
   26e20:	cmp	r0, #0
   26e24:	bls	26e2c <__assert_fail@plt+0x15aa8>
   26e28:	b	26e4c <__assert_fail@plt+0x15ac8>
   26e2c:	movw	r0, #34324	; 0x8614
   26e30:	movt	r0, #3
   26e34:	movw	r1, #30584	; 0x7778
   26e38:	movt	r1, #3
   26e3c:	movw	r2, #915	; 0x393
   26e40:	movw	r3, #34331	; 0x861b
   26e44:	movt	r3, #3
   26e48:	bl	11384 <__assert_fail@plt>
   26e4c:	b	26e50 <__assert_fail@plt+0x15acc>
   26e50:	ldr	r0, [fp, #-8]
   26e54:	str	r0, [sp, #12]
   26e58:	movw	r0, #0
   26e5c:	str	r0, [sp, #8]
   26e60:	movw	r0, #8
   26e64:	str	r0, [sp, #4]
   26e68:	ldr	r0, [sp, #4]
   26e6c:	movw	r1, #32
   26e70:	cmp	r1, r0
   26e74:	bls	26eb0 <__assert_fail@plt+0x15b2c>
   26e78:	b	26e7c <__assert_fail@plt+0x15af8>
   26e7c:	ldr	r0, [sp, #12]
   26e80:	and	r0, r0, #-16777216	; 0xff000000
   26e84:	cmp	r0, #0
   26e88:	bne	26eac <__assert_fail@plt+0x15b28>
   26e8c:	ldr	r0, [sp, #4]
   26e90:	ldr	r1, [sp, #12]
   26e94:	lsl	r0, r1, r0
   26e98:	str	r0, [sp, #12]
   26e9c:	ldr	r0, [sp, #8]
   26ea0:	add	r0, r0, #8
   26ea4:	str	r0, [sp, #8]
   26ea8:	b	26e7c <__assert_fail@plt+0x15af8>
   26eac:	b	26eb0 <__assert_fail@plt+0x15b2c>
   26eb0:	b	26eb4 <__assert_fail@plt+0x15b30>
   26eb4:	ldr	r0, [sp, #12]
   26eb8:	and	r0, r0, #-2147483648	; 0x80000000
   26ebc:	cmp	r0, #0
   26ec0:	bne	26ee0 <__assert_fail@plt+0x15b5c>
   26ec4:	ldr	r0, [sp, #12]
   26ec8:	lsl	r0, r0, #1
   26ecc:	str	r0, [sp, #12]
   26ed0:	ldr	r0, [sp, #8]
   26ed4:	add	r0, r0, #1
   26ed8:	str	r0, [sp, #8]
   26edc:	b	26eb4 <__assert_fail@plt+0x15b30>
   26ee0:	ldr	r0, [sp, #8]
   26ee4:	str	r0, [sp, #16]
   26ee8:	ldr	r0, [sp, #16]
   26eec:	ldr	r1, [fp, #-4]
   26ef0:	str	r0, [r1]
   26ef4:	ldr	r0, [sp, #16]
   26ef8:	cmp	r0, #0
   26efc:	bls	26f38 <__assert_fail@plt+0x15bb4>
   26f00:	ldr	r0, [fp, #-8]
   26f04:	ldr	r1, [sp, #16]
   26f08:	lsl	r0, r0, r1
   26f0c:	ldr	r1, [fp, #-12]
   26f10:	ldr	r2, [sp, #16]
   26f14:	movw	r3, #32
   26f18:	sub	r2, r3, r2
   26f1c:	lsr	r1, r1, r2
   26f20:	orr	r0, r0, r1
   26f24:	str	r0, [fp, #-8]
   26f28:	ldr	r0, [sp, #16]
   26f2c:	ldr	r1, [fp, #-12]
   26f30:	lsl	r0, r1, r0
   26f34:	str	r0, [fp, #-12]
   26f38:	ldr	r0, [fp, #-8]
   26f3c:	ldr	r1, [fp, #-4]
   26f40:	str	r0, [r1, #4]
   26f44:	ldr	r0, [fp, #-12]
   26f48:	ldr	r1, [fp, #-4]
   26f4c:	str	r0, [r1, #8]
   26f50:	ldr	r0, [fp, #-8]
   26f54:	ldr	r1, [fp, #-12]
   26f58:	bl	1c9a0 <__assert_fail@plt+0xb61c>
   26f5c:	ldr	r1, [fp, #-4]
   26f60:	str	r0, [r1, #12]
   26f64:	mov	sp, fp
   26f68:	pop	{fp, pc}
   26f6c:	push	{fp, lr}
   26f70:	mov	fp, sp
   26f74:	sub	sp, sp, #176	; 0xb0
   26f78:	str	r0, [fp, #-4]
   26f7c:	str	r1, [fp, #-8]
   26f80:	str	r2, [fp, #-12]
   26f84:	str	r3, [fp, #-16]
   26f88:	ldr	r0, [fp, #-12]
   26f8c:	cmp	r0, #2
   26f90:	blt	26f98 <__assert_fail@plt+0x15c14>
   26f94:	b	26fb8 <__assert_fail@plt+0x15c34>
   26f98:	movw	r0, #34582	; 0x8716
   26f9c:	movt	r0, #3
   26fa0:	movw	r1, #30584	; 0x7778
   26fa4:	movt	r1, #3
   26fa8:	movw	r2, #1009	; 0x3f1
   26fac:	movw	r3, #34590	; 0x871e
   26fb0:	movt	r3, #3
   26fb4:	bl	11384 <__assert_fail@plt>
   26fb8:	ldr	r0, [fp, #-16]
   26fbc:	ldr	r0, [r0]
   26fc0:	str	r0, [fp, #-20]	; 0xffffffec
   26fc4:	ldr	r0, [fp, #-16]
   26fc8:	ldr	r0, [r0, #4]
   26fcc:	str	r0, [fp, #-28]	; 0xffffffe4
   26fd0:	ldr	r0, [fp, #-16]
   26fd4:	ldr	r0, [r0, #8]
   26fd8:	str	r0, [fp, #-32]	; 0xffffffe0
   26fdc:	ldr	r0, [fp, #-16]
   26fe0:	ldr	r0, [r0, #12]
   26fe4:	str	r0, [fp, #-36]	; 0xffffffdc
   26fe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   26fec:	cmp	r0, #0
   26ff0:	bls	27010 <__assert_fail@plt+0x15c8c>
   26ff4:	ldr	r0, [fp, #-8]
   26ff8:	ldr	r1, [fp, #-8]
   26ffc:	ldr	r2, [fp, #-12]
   27000:	ldr	r3, [fp, #-20]	; 0xffffffec
   27004:	bl	1c278 <__assert_fail@plt+0xaef4>
   27008:	str	r0, [fp, #-40]	; 0xffffffd8
   2700c:	b	27018 <__assert_fail@plt+0x15c94>
   27010:	movw	r0, #0
   27014:	str	r0, [fp, #-40]	; 0xffffffd8
   27018:	ldr	r0, [fp, #-8]
   2701c:	ldr	r1, [fp, #-12]
   27020:	sub	r1, r1, #1
   27024:	add	r0, r0, r1, lsl #2
   27028:	ldr	r0, [r0]
   2702c:	str	r0, [fp, #-44]	; 0xffffffd4
   27030:	ldr	r0, [fp, #-12]
   27034:	sub	r0, r0, #2
   27038:	str	r0, [fp, #-24]	; 0xffffffe8
   2703c:	ldr	r0, [fp, #-8]
   27040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27044:	add	r0, r0, r1, lsl #2
   27048:	ldr	r0, [r0]
   2704c:	str	r0, [fp, #-48]	; 0xffffffd0
   27050:	b	27054 <__assert_fail@plt+0x15cd0>
   27054:	movw	r0, #32
   27058:	str	r0, [fp, #-72]	; 0xffffffb8
   2705c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27060:	str	r0, [sp, #68]	; 0x44
   27064:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27068:	str	r0, [sp, #64]	; 0x40
   2706c:	ldr	r0, [sp, #68]	; 0x44
   27070:	movw	r1, #65535	; 0xffff
   27074:	and	r0, r0, r1
   27078:	str	r0, [sp, #84]	; 0x54
   2707c:	ldr	r0, [sp, #68]	; 0x44
   27080:	lsr	r0, r0, #16
   27084:	str	r0, [sp, #76]	; 0x4c
   27088:	ldr	r0, [sp, #64]	; 0x40
   2708c:	and	r0, r0, r1
   27090:	str	r0, [sp, #80]	; 0x50
   27094:	ldr	r0, [sp, #64]	; 0x40
   27098:	lsr	r0, r0, #16
   2709c:	str	r0, [sp, #72]	; 0x48
   270a0:	ldr	r0, [sp, #84]	; 0x54
   270a4:	ldr	r1, [sp, #80]	; 0x50
   270a8:	mul	r0, r0, r1
   270ac:	str	r0, [fp, #-76]	; 0xffffffb4
   270b0:	ldr	r0, [sp, #84]	; 0x54
   270b4:	ldr	r1, [sp, #72]	; 0x48
   270b8:	mul	r0, r0, r1
   270bc:	str	r0, [fp, #-80]	; 0xffffffb0
   270c0:	ldr	r0, [sp, #76]	; 0x4c
   270c4:	ldr	r1, [sp, #80]	; 0x50
   270c8:	mul	r0, r0, r1
   270cc:	str	r0, [fp, #-84]	; 0xffffffac
   270d0:	ldr	r0, [sp, #76]	; 0x4c
   270d4:	ldr	r1, [sp, #72]	; 0x48
   270d8:	mul	r0, r0, r1
   270dc:	str	r0, [sp, #88]	; 0x58
   270e0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   270e4:	lsr	r0, r0, #16
   270e8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   270ec:	add	r0, r1, r0
   270f0:	str	r0, [fp, #-80]	; 0xffffffb0
   270f4:	ldr	r0, [fp, #-84]	; 0xffffffac
   270f8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   270fc:	add	r0, r1, r0
   27100:	str	r0, [fp, #-80]	; 0xffffffb0
   27104:	ldr	r0, [fp, #-80]	; 0xffffffb0
   27108:	ldr	r1, [fp, #-84]	; 0xffffffac
   2710c:	cmp	r0, r1
   27110:	bcs	27120 <__assert_fail@plt+0x15d9c>
   27114:	ldr	r0, [sp, #88]	; 0x58
   27118:	add	r0, r0, #65536	; 0x10000
   2711c:	str	r0, [sp, #88]	; 0x58
   27120:	ldr	r0, [sp, #88]	; 0x58
   27124:	ldr	r1, [fp, #-80]	; 0xffffffb0
   27128:	lsr	r1, r1, #16
   2712c:	add	r0, r0, r1
   27130:	str	r0, [fp, #-52]	; 0xffffffcc
   27134:	ldr	r0, [fp, #-80]	; 0xffffffb0
   27138:	lsl	r0, r0, #16
   2713c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   27140:	movw	r2, #65535	; 0xffff
   27144:	and	r1, r1, r2
   27148:	add	r0, r0, r1
   2714c:	str	r0, [fp, #-56]	; 0xffffffc8
   27150:	b	27154 <__assert_fail@plt+0x15dd0>
   27154:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27158:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2715c:	add	r0, r0, r1
   27160:	str	r0, [sp, #60]	; 0x3c
   27164:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27168:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2716c:	add	r0, r0, r1
   27170:	ldr	r1, [sp, #60]	; 0x3c
   27174:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27178:	cmp	r1, r2
   2717c:	movw	r1, #0
   27180:	movcc	r1, #1
   27184:	and	r1, r1, #1
   27188:	add	r0, r0, r1
   2718c:	str	r0, [fp, #-52]	; 0xffffffcc
   27190:	ldr	r0, [sp, #60]	; 0x3c
   27194:	str	r0, [fp, #-56]	; 0xffffffc8
   27198:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2719c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   271a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   271a4:	mul	r1, r1, r2
   271a8:	sub	r0, r0, r1
   271ac:	str	r0, [fp, #-40]	; 0xffffffd8
   271b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   271b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   271b8:	sub	r0, r0, r1
   271bc:	str	r0, [sp, #56]	; 0x38
   271c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   271c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   271c8:	sub	r0, r0, r1
   271cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   271d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   271d4:	cmp	r1, r2
   271d8:	movw	r1, #0
   271dc:	movcc	r1, #1
   271e0:	and	r1, r1, #1
   271e4:	sub	r0, r0, r1
   271e8:	str	r0, [fp, #-40]	; 0xffffffd8
   271ec:	ldr	r0, [sp, #56]	; 0x38
   271f0:	str	r0, [fp, #-44]	; 0xffffffd4
   271f4:	b	271f8 <__assert_fail@plt+0x15e74>
   271f8:	movw	r0, #32
   271fc:	str	r0, [sp, #52]	; 0x34
   27200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27204:	str	r0, [sp, #16]
   27208:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2720c:	str	r0, [sp, #12]
   27210:	ldr	r0, [sp, #16]
   27214:	movw	r1, #65535	; 0xffff
   27218:	and	r0, r0, r1
   2721c:	str	r0, [sp, #32]
   27220:	ldr	r0, [sp, #16]
   27224:	lsr	r0, r0, #16
   27228:	str	r0, [sp, #24]
   2722c:	ldr	r0, [sp, #12]
   27230:	and	r0, r0, r1
   27234:	str	r0, [sp, #28]
   27238:	ldr	r0, [sp, #12]
   2723c:	lsr	r0, r0, #16
   27240:	str	r0, [sp, #20]
   27244:	ldr	r0, [sp, #32]
   27248:	ldr	r1, [sp, #28]
   2724c:	mul	r0, r0, r1
   27250:	str	r0, [sp, #48]	; 0x30
   27254:	ldr	r0, [sp, #32]
   27258:	ldr	r1, [sp, #20]
   2725c:	mul	r0, r0, r1
   27260:	str	r0, [sp, #44]	; 0x2c
   27264:	ldr	r0, [sp, #24]
   27268:	ldr	r1, [sp, #28]
   2726c:	mul	r0, r0, r1
   27270:	str	r0, [sp, #40]	; 0x28
   27274:	ldr	r0, [sp, #24]
   27278:	ldr	r1, [sp, #20]
   2727c:	mul	r0, r0, r1
   27280:	str	r0, [sp, #36]	; 0x24
   27284:	ldr	r0, [sp, #48]	; 0x30
   27288:	lsr	r0, r0, #16
   2728c:	ldr	r1, [sp, #44]	; 0x2c
   27290:	add	r0, r1, r0
   27294:	str	r0, [sp, #44]	; 0x2c
   27298:	ldr	r0, [sp, #40]	; 0x28
   2729c:	ldr	r1, [sp, #44]	; 0x2c
   272a0:	add	r0, r1, r0
   272a4:	str	r0, [sp, #44]	; 0x2c
   272a8:	ldr	r0, [sp, #44]	; 0x2c
   272ac:	ldr	r1, [sp, #40]	; 0x28
   272b0:	cmp	r0, r1
   272b4:	bcs	272c4 <__assert_fail@plt+0x15f40>
   272b8:	ldr	r0, [sp, #36]	; 0x24
   272bc:	add	r0, r0, #65536	; 0x10000
   272c0:	str	r0, [sp, #36]	; 0x24
   272c4:	ldr	r0, [sp, #36]	; 0x24
   272c8:	ldr	r1, [sp, #44]	; 0x2c
   272cc:	lsr	r1, r1, #16
   272d0:	add	r0, r0, r1
   272d4:	str	r0, [fp, #-60]	; 0xffffffc4
   272d8:	ldr	r0, [sp, #44]	; 0x2c
   272dc:	lsl	r0, r0, #16
   272e0:	ldr	r1, [sp, #48]	; 0x30
   272e4:	movw	r2, #65535	; 0xffff
   272e8:	and	r1, r1, r2
   272ec:	add	r0, r0, r1
   272f0:	str	r0, [fp, #-64]	; 0xffffffc0
   272f4:	b	272f8 <__assert_fail@plt+0x15f74>
   272f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   272fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   27300:	sub	r0, r0, r1
   27304:	str	r0, [sp, #8]
   27308:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2730c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   27310:	sub	r0, r0, r1
   27314:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27318:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2731c:	cmp	r1, r2
   27320:	movw	r1, #0
   27324:	movcc	r1, #1
   27328:	and	r1, r1, #1
   2732c:	sub	r0, r0, r1
   27330:	str	r0, [fp, #-40]	; 0xffffffd8
   27334:	ldr	r0, [sp, #8]
   27338:	str	r0, [fp, #-44]	; 0xffffffd4
   2733c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27340:	add	r0, r0, #1
   27344:	str	r0, [fp, #-52]	; 0xffffffcc
   27348:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2734c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   27350:	cmp	r0, r1
   27354:	movw	r0, #0
   27358:	movcs	r0, #1
   2735c:	and	r0, r0, #1
   27360:	movw	r1, #0
   27364:	sub	r0, r1, r0
   27368:	str	r0, [fp, #-68]	; 0xffffffbc
   2736c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   27370:	ldr	r1, [fp, #-52]	; 0xffffffcc
   27374:	add	r0, r1, r0
   27378:	str	r0, [fp, #-52]	; 0xffffffcc
   2737c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27380:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27384:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27388:	and	r1, r1, r2
   2738c:	add	r0, r0, r1
   27390:	str	r0, [sp, #4]
   27394:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27398:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2739c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   273a0:	and	r1, r1, r2
   273a4:	add	r0, r0, r1
   273a8:	ldr	r1, [sp, #4]
   273ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   273b0:	cmp	r1, r2
   273b4:	movw	r1, #0
   273b8:	movcc	r1, #1
   273bc:	and	r1, r1, #1
   273c0:	add	r0, r0, r1
   273c4:	str	r0, [fp, #-40]	; 0xffffffd8
   273c8:	ldr	r0, [sp, #4]
   273cc:	str	r0, [fp, #-44]	; 0xffffffd4
   273d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   273d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   273d8:	cmp	r0, r1
   273dc:	bcc	27458 <__assert_fail@plt+0x160d4>
   273e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   273e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   273e8:	cmp	r0, r1
   273ec:	bhi	27400 <__assert_fail@plt+0x1607c>
   273f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   273f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   273f8:	cmp	r0, r1
   273fc:	bcc	27454 <__assert_fail@plt+0x160d0>
   27400:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27404:	add	r0, r0, #1
   27408:	str	r0, [fp, #-52]	; 0xffffffcc
   2740c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27410:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27414:	sub	r0, r0, r1
   27418:	str	r0, [sp]
   2741c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27420:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27424:	sub	r0, r0, r1
   27428:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2742c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27430:	cmp	r1, r2
   27434:	movw	r1, #0
   27438:	movcc	r1, #1
   2743c:	and	r1, r1, #1
   27440:	sub	r0, r0, r1
   27444:	str	r0, [fp, #-40]	; 0xffffffd8
   27448:	ldr	r0, [sp]
   2744c:	str	r0, [fp, #-44]	; 0xffffffd4
   27450:	b	27454 <__assert_fail@plt+0x160d0>
   27454:	b	27458 <__assert_fail@plt+0x160d4>
   27458:	b	2745c <__assert_fail@plt+0x160d8>
   2745c:	ldr	r0, [fp, #-4]
   27460:	movw	r1, #0
   27464:	cmp	r0, r1
   27468:	beq	27480 <__assert_fail@plt+0x160fc>
   2746c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27470:	ldr	r1, [fp, #-4]
   27474:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27478:	add	r1, r1, r2, lsl #2
   2747c:	str	r0, [r1]
   27480:	b	27484 <__assert_fail@plt+0x16100>
   27484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27488:	mvn	r1, #0
   2748c:	add	r0, r0, r1
   27490:	str	r0, [fp, #-24]	; 0xffffffe8
   27494:	cmp	r0, #0
   27498:	bge	2703c <__assert_fail@plt+0x15cb8>
   2749c:	ldr	r0, [fp, #-20]	; 0xffffffec
   274a0:	cmp	r0, #0
   274a4:	bls	27528 <__assert_fail@plt+0x161a4>
   274a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   274ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   274b0:	movw	r2, #32
   274b4:	sub	r1, r2, r1
   274b8:	mvn	r2, #0
   274bc:	lsr	r1, r2, r1
   274c0:	and	r0, r0, r1
   274c4:	cmp	r0, #0
   274c8:	bne	274d0 <__assert_fail@plt+0x1614c>
   274cc:	b	274f0 <__assert_fail@plt+0x1616c>
   274d0:	movw	r0, #34674	; 0x8772
   274d4:	movt	r0, #3
   274d8:	movw	r1, #30584	; 0x7778
   274dc:	movt	r1, #3
   274e0:	movw	r2, #1036	; 0x40c
   274e4:	movw	r3, #34590	; 0x871e
   274e8:	movt	r3, #3
   274ec:	bl	11384 <__assert_fail@plt>
   274f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   274f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   274f8:	lsr	r0, r0, r1
   274fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27500:	ldr	r2, [fp, #-20]	; 0xffffffec
   27504:	movw	r3, #32
   27508:	sub	r2, r3, r2
   2750c:	lsl	r1, r1, r2
   27510:	orr	r0, r0, r1
   27514:	str	r0, [fp, #-44]	; 0xffffffd4
   27518:	ldr	r0, [fp, #-20]	; 0xffffffec
   2751c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27520:	lsr	r0, r1, r0
   27524:	str	r0, [fp, #-40]	; 0xffffffd8
   27528:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2752c:	ldr	r1, [fp, #-8]
   27530:	str	r0, [r1, #4]
   27534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27538:	ldr	r1, [fp, #-8]
   2753c:	str	r0, [r1]
   27540:	mov	sp, fp
   27544:	pop	{fp, pc}
   27548:	push	{r4, sl, fp, lr}
   2754c:	add	fp, sp, #8
   27550:	sub	sp, sp, #192	; 0xc0
   27554:	ldr	ip, [fp, #16]
   27558:	ldr	lr, [fp, #12]
   2755c:	ldr	r4, [fp, #8]
   27560:	str	r0, [fp, #-12]
   27564:	str	r1, [fp, #-16]
   27568:	str	r2, [fp, #-20]	; 0xffffffec
   2756c:	str	r3, [fp, #-24]	; 0xffffffe8
   27570:	ldr	r0, [fp, #12]
   27574:	cmp	r0, #2
   27578:	str	r4, [sp, #20]
   2757c:	str	lr, [sp, #16]
   27580:	str	ip, [sp, #12]
   27584:	ble	2758c <__assert_fail@plt+0x16208>
   27588:	b	275ac <__assert_fail@plt+0x16228>
   2758c:	movw	r0, #34728	; 0x87a8
   27590:	movt	r0, #3
   27594:	movw	r1, #30584	; 0x7778
   27598:	movt	r1, #3
   2759c:	movw	r2, #1057	; 0x421
   275a0:	movw	r3, #34735	; 0x87af
   275a4:	movt	r3, #3
   275a8:	bl	11384 <__assert_fail@plt>
   275ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   275b0:	ldr	r1, [fp, #12]
   275b4:	cmp	r0, r1
   275b8:	blt	275c0 <__assert_fail@plt+0x1623c>
   275bc:	b	275e0 <__assert_fail@plt+0x1625c>
   275c0:	movw	r0, #34036	; 0x84f4
   275c4:	movt	r0, #3
   275c8:	movw	r1, #30584	; 0x7778
   275cc:	movt	r1, #3
   275d0:	movw	r2, #1058	; 0x422
   275d4:	movw	r3, #34735	; 0x87af
   275d8:	movt	r3, #3
   275dc:	bl	11384 <__assert_fail@plt>
   275e0:	ldr	r0, [fp, #8]
   275e4:	ldr	r1, [fp, #12]
   275e8:	add	r0, r0, r1, lsl #2
   275ec:	ldr	r0, [r0, #-4]
   275f0:	str	r0, [fp, #-32]	; 0xffffffe0
   275f4:	ldr	r0, [fp, #8]
   275f8:	ldr	r1, [fp, #12]
   275fc:	sub	r1, r1, #2
   27600:	add	r0, r0, r1, lsl #2
   27604:	ldr	r0, [r0]
   27608:	str	r0, [fp, #-36]	; 0xffffffdc
   2760c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27610:	and	r0, r0, #-2147483648	; 0x80000000
   27614:	cmp	r0, #0
   27618:	beq	27620 <__assert_fail@plt+0x1629c>
   2761c:	b	27640 <__assert_fail@plt+0x162bc>
   27620:	movw	r0, #34826	; 0x880a
   27624:	movt	r0, #3
   27628:	movw	r1, #30584	; 0x7778
   2762c:	movt	r1, #3
   27630:	movw	r2, #1063	; 0x427
   27634:	movw	r3, #34735	; 0x87af
   27638:	movt	r3, #3
   2763c:	bl	11384 <__assert_fail@plt>
   27640:	ldr	r0, [fp, #-20]	; 0xffffffec
   27644:	ldr	r1, [fp, #12]
   27648:	sub	r0, r0, r1
   2764c:	str	r0, [fp, #-28]	; 0xffffffe4
   27650:	ldr	r0, [fp, #-16]
   27654:	ldr	r1, [fp, #12]
   27658:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2765c:	add	r1, r1, r2
   27660:	sub	r1, r1, #1
   27664:	add	r0, r0, r1, lsl #2
   27668:	ldr	r0, [r0]
   2766c:	str	r0, [fp, #-52]	; 0xffffffcc
   27670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27674:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27678:	cmp	r0, r1
   2767c:	bne	276dc <__assert_fail@plt+0x16358>
   27680:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27684:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27688:	cmp	r0, r1
   2768c:	bne	276dc <__assert_fail@plt+0x16358>
   27690:	mvn	r0, #0
   27694:	str	r0, [fp, #-48]	; 0xffffffd0
   27698:	ldr	r0, [fp, #-16]
   2769c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   276a0:	add	r0, r0, r1, lsl #2
   276a4:	ldr	r1, [fp, #8]
   276a8:	ldr	r2, [fp, #12]
   276ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   276b0:	bl	1be08 <__assert_fail@plt+0xaa84>
   276b4:	ldr	r1, [fp, #-16]
   276b8:	ldr	r2, [fp, #12]
   276bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   276c0:	add	r2, r2, r3
   276c4:	sub	r2, r2, #1
   276c8:	add	r1, r1, r2, lsl #2
   276cc:	ldr	r1, [r1]
   276d0:	str	r1, [fp, #-24]	; 0xffffffe8
   276d4:	str	r0, [sp, #8]
   276d8:	b	27c14 <__assert_fail@plt+0x16890>
   276dc:	b	276e0 <__assert_fail@plt+0x1635c>
   276e0:	b	276e4 <__assert_fail@plt+0x16360>
   276e4:	movw	r0, #32
   276e8:	str	r0, [fp, #-72]	; 0xffffffb8
   276ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   276f0:	str	r0, [sp, #92]	; 0x5c
   276f4:	ldr	r0, [fp, #16]
   276f8:	str	r0, [sp, #88]	; 0x58
   276fc:	ldr	r0, [sp, #92]	; 0x5c
   27700:	movw	r1, #65535	; 0xffff
   27704:	and	r0, r0, r1
   27708:	str	r0, [fp, #-92]	; 0xffffffa4
   2770c:	ldr	r0, [sp, #92]	; 0x5c
   27710:	lsr	r0, r0, #16
   27714:	str	r0, [sp, #100]	; 0x64
   27718:	ldr	r0, [sp, #88]	; 0x58
   2771c:	and	r0, r0, r1
   27720:	str	r0, [fp, #-96]	; 0xffffffa0
   27724:	ldr	r0, [sp, #88]	; 0x58
   27728:	lsr	r0, r0, #16
   2772c:	str	r0, [sp, #96]	; 0x60
   27730:	ldr	r0, [fp, #-92]	; 0xffffffa4
   27734:	ldr	r1, [fp, #-96]	; 0xffffffa0
   27738:	mul	r0, r0, r1
   2773c:	str	r0, [fp, #-76]	; 0xffffffb4
   27740:	ldr	r0, [fp, #-92]	; 0xffffffa4
   27744:	ldr	r1, [sp, #96]	; 0x60
   27748:	mul	r0, r0, r1
   2774c:	str	r0, [fp, #-80]	; 0xffffffb0
   27750:	ldr	r0, [sp, #100]	; 0x64
   27754:	ldr	r1, [fp, #-96]	; 0xffffffa0
   27758:	mul	r0, r0, r1
   2775c:	str	r0, [fp, #-84]	; 0xffffffac
   27760:	ldr	r0, [sp, #100]	; 0x64
   27764:	ldr	r1, [sp, #96]	; 0x60
   27768:	mul	r0, r0, r1
   2776c:	str	r0, [fp, #-88]	; 0xffffffa8
   27770:	ldr	r0, [fp, #-76]	; 0xffffffb4
   27774:	lsr	r0, r0, #16
   27778:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2777c:	add	r0, r1, r0
   27780:	str	r0, [fp, #-80]	; 0xffffffb0
   27784:	ldr	r0, [fp, #-84]	; 0xffffffac
   27788:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2778c:	add	r0, r1, r0
   27790:	str	r0, [fp, #-80]	; 0xffffffb0
   27794:	ldr	r0, [fp, #-80]	; 0xffffffb0
   27798:	ldr	r1, [fp, #-84]	; 0xffffffac
   2779c:	cmp	r0, r1
   277a0:	bcs	277b0 <__assert_fail@plt+0x1642c>
   277a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   277a8:	add	r0, r0, #65536	; 0x10000
   277ac:	str	r0, [fp, #-88]	; 0xffffffa8
   277b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   277b4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   277b8:	lsr	r1, r1, #16
   277bc:	add	r0, r0, r1
   277c0:	str	r0, [fp, #-48]	; 0xffffffd0
   277c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   277c8:	lsl	r0, r0, #16
   277cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   277d0:	movw	r2, #65535	; 0xffff
   277d4:	and	r1, r1, r2
   277d8:	add	r0, r0, r1
   277dc:	str	r0, [fp, #-56]	; 0xffffffc8
   277e0:	b	277e4 <__assert_fail@plt+0x16460>
   277e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   277e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   277ec:	add	r0, r0, r1
   277f0:	str	r0, [sp, #84]	; 0x54
   277f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   277f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   277fc:	add	r0, r0, r1
   27800:	ldr	r1, [sp, #84]	; 0x54
   27804:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27808:	cmp	r1, r2
   2780c:	movw	r1, #0
   27810:	movcc	r1, #1
   27814:	and	r1, r1, #1
   27818:	add	r0, r0, r1
   2781c:	str	r0, [fp, #-48]	; 0xffffffd0
   27820:	ldr	r0, [sp, #84]	; 0x54
   27824:	str	r0, [fp, #-56]	; 0xffffffc8
   27828:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2782c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27830:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27834:	mul	r1, r1, r2
   27838:	sub	r0, r0, r1
   2783c:	str	r0, [fp, #-24]	; 0xffffffe8
   27840:	ldr	r0, [fp, #-16]
   27844:	ldr	r1, [fp, #12]
   27848:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2784c:	add	r1, r1, r2
   27850:	add	r0, r0, r1, lsl #2
   27854:	ldr	r0, [r0, #-8]
   27858:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2785c:	sub	r0, r0, r1
   27860:	str	r0, [sp, #80]	; 0x50
   27864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27868:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2786c:	sub	r0, r0, r1
   27870:	ldr	r1, [fp, #-16]
   27874:	ldr	r2, [fp, #12]
   27878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2787c:	add	r2, r2, r3
   27880:	sub	r2, r2, #2
   27884:	add	r1, r1, r2, lsl #2
   27888:	ldr	r1, [r1]
   2788c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27890:	cmp	r1, r2
   27894:	movw	r1, #0
   27898:	movcc	r1, #1
   2789c:	and	r1, r1, #1
   278a0:	sub	r0, r0, r1
   278a4:	str	r0, [fp, #-24]	; 0xffffffe8
   278a8:	ldr	r0, [sp, #80]	; 0x50
   278ac:	str	r0, [fp, #-52]	; 0xffffffcc
   278b0:	b	278b4 <__assert_fail@plt+0x16530>
   278b4:	movw	r0, #32
   278b8:	str	r0, [sp, #76]	; 0x4c
   278bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   278c0:	str	r0, [sp, #40]	; 0x28
   278c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   278c8:	str	r0, [sp, #36]	; 0x24
   278cc:	ldr	r0, [sp, #40]	; 0x28
   278d0:	movw	r1, #65535	; 0xffff
   278d4:	and	r0, r0, r1
   278d8:	str	r0, [sp, #56]	; 0x38
   278dc:	ldr	r0, [sp, #40]	; 0x28
   278e0:	lsr	r0, r0, #16
   278e4:	str	r0, [sp, #48]	; 0x30
   278e8:	ldr	r0, [sp, #36]	; 0x24
   278ec:	and	r0, r0, r1
   278f0:	str	r0, [sp, #52]	; 0x34
   278f4:	ldr	r0, [sp, #36]	; 0x24
   278f8:	lsr	r0, r0, #16
   278fc:	str	r0, [sp, #44]	; 0x2c
   27900:	ldr	r0, [sp, #56]	; 0x38
   27904:	ldr	r1, [sp, #52]	; 0x34
   27908:	mul	r0, r0, r1
   2790c:	str	r0, [sp, #72]	; 0x48
   27910:	ldr	r0, [sp, #56]	; 0x38
   27914:	ldr	r1, [sp, #44]	; 0x2c
   27918:	mul	r0, r0, r1
   2791c:	str	r0, [sp, #68]	; 0x44
   27920:	ldr	r0, [sp, #48]	; 0x30
   27924:	ldr	r1, [sp, #52]	; 0x34
   27928:	mul	r0, r0, r1
   2792c:	str	r0, [sp, #64]	; 0x40
   27930:	ldr	r0, [sp, #48]	; 0x30
   27934:	ldr	r1, [sp, #44]	; 0x2c
   27938:	mul	r0, r0, r1
   2793c:	str	r0, [sp, #60]	; 0x3c
   27940:	ldr	r0, [sp, #72]	; 0x48
   27944:	lsr	r0, r0, #16
   27948:	ldr	r1, [sp, #68]	; 0x44
   2794c:	add	r0, r1, r0
   27950:	str	r0, [sp, #68]	; 0x44
   27954:	ldr	r0, [sp, #64]	; 0x40
   27958:	ldr	r1, [sp, #68]	; 0x44
   2795c:	add	r0, r1, r0
   27960:	str	r0, [sp, #68]	; 0x44
   27964:	ldr	r0, [sp, #68]	; 0x44
   27968:	ldr	r1, [sp, #64]	; 0x40
   2796c:	cmp	r0, r1
   27970:	bcs	27980 <__assert_fail@plt+0x165fc>
   27974:	ldr	r0, [sp, #60]	; 0x3c
   27978:	add	r0, r0, #65536	; 0x10000
   2797c:	str	r0, [sp, #60]	; 0x3c
   27980:	ldr	r0, [sp, #60]	; 0x3c
   27984:	ldr	r1, [sp, #68]	; 0x44
   27988:	lsr	r1, r1, #16
   2798c:	add	r0, r0, r1
   27990:	str	r0, [fp, #-60]	; 0xffffffc4
   27994:	ldr	r0, [sp, #68]	; 0x44
   27998:	lsl	r0, r0, #16
   2799c:	ldr	r1, [sp, #72]	; 0x48
   279a0:	movw	r2, #65535	; 0xffff
   279a4:	and	r1, r1, r2
   279a8:	add	r0, r0, r1
   279ac:	str	r0, [fp, #-64]	; 0xffffffc0
   279b0:	b	279b4 <__assert_fail@plt+0x16630>
   279b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   279b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   279bc:	sub	r0, r0, r1
   279c0:	str	r0, [sp, #32]
   279c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   279c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   279cc:	sub	r0, r0, r1
   279d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   279d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   279d8:	cmp	r1, r2
   279dc:	movw	r1, #0
   279e0:	movcc	r1, #1
   279e4:	and	r1, r1, #1
   279e8:	sub	r0, r0, r1
   279ec:	str	r0, [fp, #-24]	; 0xffffffe8
   279f0:	ldr	r0, [sp, #32]
   279f4:	str	r0, [fp, #-52]	; 0xffffffcc
   279f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   279fc:	add	r0, r0, #1
   27a00:	str	r0, [fp, #-48]	; 0xffffffd0
   27a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a08:	ldr	r1, [fp, #-56]	; 0xffffffc8
   27a0c:	cmp	r0, r1
   27a10:	movw	r0, #0
   27a14:	movcs	r0, #1
   27a18:	and	r0, r0, #1
   27a1c:	movw	r1, #0
   27a20:	sub	r0, r1, r0
   27a24:	str	r0, [fp, #-68]	; 0xffffffbc
   27a28:	ldr	r0, [fp, #-68]	; 0xffffffbc
   27a2c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27a30:	add	r0, r1, r0
   27a34:	str	r0, [fp, #-48]	; 0xffffffd0
   27a38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27a3c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27a40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27a44:	and	r1, r1, r2
   27a48:	add	r0, r0, r1
   27a4c:	str	r0, [sp, #28]
   27a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27a58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27a5c:	and	r1, r1, r2
   27a60:	add	r0, r0, r1
   27a64:	ldr	r1, [sp, #28]
   27a68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27a6c:	cmp	r1, r2
   27a70:	movw	r1, #0
   27a74:	movcc	r1, #1
   27a78:	and	r1, r1, #1
   27a7c:	add	r0, r0, r1
   27a80:	str	r0, [fp, #-24]	; 0xffffffe8
   27a84:	ldr	r0, [sp, #28]
   27a88:	str	r0, [fp, #-52]	; 0xffffffcc
   27a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27a94:	cmp	r0, r1
   27a98:	bcc	27b14 <__assert_fail@plt+0x16790>
   27a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27aa0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27aa4:	cmp	r0, r1
   27aa8:	bhi	27abc <__assert_fail@plt+0x16738>
   27aac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27ab0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27ab4:	cmp	r0, r1
   27ab8:	bcc	27b10 <__assert_fail@plt+0x1678c>
   27abc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27ac0:	add	r0, r0, #1
   27ac4:	str	r0, [fp, #-48]	; 0xffffffd0
   27ac8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27acc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27ad0:	sub	r0, r0, r1
   27ad4:	str	r0, [sp, #24]
   27ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27adc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27ae0:	sub	r0, r0, r1
   27ae4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   27ae8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27aec:	cmp	r1, r2
   27af0:	movw	r1, #0
   27af4:	movcc	r1, #1
   27af8:	and	r1, r1, #1
   27afc:	sub	r0, r0, r1
   27b00:	str	r0, [fp, #-24]	; 0xffffffe8
   27b04:	ldr	r0, [sp, #24]
   27b08:	str	r0, [fp, #-52]	; 0xffffffcc
   27b0c:	b	27b10 <__assert_fail@plt+0x1678c>
   27b10:	b	27b14 <__assert_fail@plt+0x16790>
   27b14:	b	27b18 <__assert_fail@plt+0x16794>
   27b18:	ldr	r0, [fp, #-16]
   27b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27b20:	add	r0, r0, r1, lsl #2
   27b24:	ldr	r1, [fp, #8]
   27b28:	ldr	r2, [fp, #12]
   27b2c:	sub	r2, r2, #2
   27b30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27b34:	bl	1be08 <__assert_fail@plt+0xaa84>
   27b38:	str	r0, [fp, #-40]	; 0xffffffd8
   27b3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27b40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27b44:	mov	r2, #0
   27b48:	cmp	r0, r1
   27b4c:	mov	r0, r2
   27b50:	movwcc	r0, #1
   27b54:	str	r0, [fp, #-44]	; 0xffffffd4
   27b58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27b5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27b60:	sub	r0, r0, r1
   27b64:	str	r0, [fp, #-52]	; 0xffffffcc
   27b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27b6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27b70:	cmp	r0, r1
   27b74:	movwcc	r2, #1
   27b78:	str	r2, [fp, #-40]	; 0xffffffd8
   27b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27b80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27b84:	sub	r0, r0, r1
   27b88:	str	r0, [fp, #-24]	; 0xffffffe8
   27b8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27b90:	ldr	r1, [fp, #-16]
   27b94:	ldr	r2, [fp, #12]
   27b98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27b9c:	add	r2, r2, r3
   27ba0:	sub	r2, r2, #2
   27ba4:	add	r1, r1, r2, lsl #2
   27ba8:	str	r0, [r1]
   27bac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27bb0:	cmp	r0, #0
   27bb4:	beq	27c10 <__assert_fail@plt+0x1688c>
   27bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27bbc:	ldr	r1, [fp, #-16]
   27bc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27bc4:	add	r1, r1, r2, lsl #2
   27bc8:	mov	r2, r1
   27bcc:	ldr	r3, [fp, #8]
   27bd0:	ldr	ip, [fp, #12]
   27bd4:	sub	ip, ip, #1
   27bd8:	str	r0, [sp, #4]
   27bdc:	mov	r0, r2
   27be0:	mov	r2, r3
   27be4:	mov	r3, ip
   27be8:	bl	1b654 <__assert_fail@plt+0xa2d0>
   27bec:	ldr	r1, [sp, #4]
   27bf0:	add	r0, r1, r0
   27bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27bf8:	add	r0, r1, r0
   27bfc:	str	r0, [fp, #-24]	; 0xffffffe8
   27c00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27c04:	mvn	r1, #0
   27c08:	add	r0, r0, r1
   27c0c:	str	r0, [fp, #-48]	; 0xffffffd0
   27c10:	b	27c14 <__assert_fail@plt+0x16890>
   27c14:	ldr	r0, [fp, #-12]
   27c18:	movw	r1, #0
   27c1c:	cmp	r0, r1
   27c20:	beq	27c38 <__assert_fail@plt+0x168b4>
   27c24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27c28:	ldr	r1, [fp, #-12]
   27c2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27c30:	add	r1, r1, r2, lsl #2
   27c34:	str	r0, [r1]
   27c38:	b	27c3c <__assert_fail@plt+0x168b8>
   27c3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27c40:	mvn	r1, #0
   27c44:	add	r0, r0, r1
   27c48:	str	r0, [fp, #-28]	; 0xffffffe4
   27c4c:	cmp	r0, #0
   27c50:	bge	27650 <__assert_fail@plt+0x162cc>
   27c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27c58:	ldr	r1, [fp, #-16]
   27c5c:	ldr	r2, [fp, #12]
   27c60:	sub	r2, r2, #1
   27c64:	add	r1, r1, r2, lsl #2
   27c68:	str	r0, [r1]
   27c6c:	sub	sp, fp, #8
   27c70:	pop	{r4, sl, fp, pc}
   27c74:	push	{fp, lr}
   27c78:	mov	fp, sp
   27c7c:	sub	sp, sp, #56	; 0x38
   27c80:	str	r0, [fp, #-4]
   27c84:	str	r1, [fp, #-8]
   27c88:	movw	r0, #0
   27c8c:	str	r0, [fp, #-16]
   27c90:	ldr	r0, [fp, #-8]
   27c94:	and	r0, r0, #1
   27c98:	cmp	r0, #0
   27c9c:	beq	27ca4 <__assert_fail@plt+0x16920>
   27ca0:	b	27cc4 <__assert_fail@plt+0x16940>
   27ca4:	movw	r0, #35048	; 0x88e8
   27ca8:	movt	r0, #3
   27cac:	movw	r1, #30584	; 0x7778
   27cb0:	movt	r1, #3
   27cb4:	movw	r2, #3383	; 0xd37
   27cb8:	movw	r3, #35054	; 0x88ee
   27cbc:	movt	r3, #3
   27cc0:	bl	11384 <__assert_fail@plt>
   27cc4:	ldr	r0, [fp, #-4]
   27cc8:	cmp	r0, #0
   27ccc:	beq	27cd4 <__assert_fail@plt+0x16950>
   27cd0:	b	27cf4 <__assert_fail@plt+0x16970>
   27cd4:	movw	r0, #35099	; 0x891b
   27cd8:	movt	r0, #3
   27cdc:	movw	r1, #30584	; 0x7778
   27ce0:	movt	r1, #3
   27ce4:	movw	r2, #3384	; 0xd38
   27ce8:	movw	r3, #35054	; 0x88ee
   27cec:	movt	r3, #3
   27cf0:	bl	11384 <__assert_fail@plt>
   27cf4:	ldr	r0, [fp, #-8]
   27cf8:	lsr	r0, r0, #1
   27cfc:	str	r0, [fp, #-8]
   27d00:	ldr	r0, [fp, #-4]
   27d04:	str	r0, [fp, #-20]	; 0xffffffec
   27d08:	movw	r0, #0
   27d0c:	str	r0, [fp, #-24]	; 0xffffffe8
   27d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   27d14:	ldr	r1, [fp, #-20]	; 0xffffffec
   27d18:	movw	r2, #0
   27d1c:	sub	r1, r2, r1
   27d20:	and	r0, r0, r1
   27d24:	str	r0, [sp, #28]
   27d28:	str	r2, [sp, #24]
   27d2c:	movw	r0, #8
   27d30:	str	r0, [sp, #20]
   27d34:	ldr	r0, [sp, #20]
   27d38:	movw	r1, #32
   27d3c:	cmp	r1, r0
   27d40:	bls	27d7c <__assert_fail@plt+0x169f8>
   27d44:	b	27d48 <__assert_fail@plt+0x169c4>
   27d48:	ldr	r0, [sp, #28]
   27d4c:	and	r0, r0, #-16777216	; 0xff000000
   27d50:	cmp	r0, #0
   27d54:	bne	27d78 <__assert_fail@plt+0x169f4>
   27d58:	ldr	r0, [sp, #20]
   27d5c:	ldr	r1, [sp, #28]
   27d60:	lsl	r0, r1, r0
   27d64:	str	r0, [sp, #28]
   27d68:	ldr	r0, [sp, #24]
   27d6c:	add	r0, r0, #8
   27d70:	str	r0, [sp, #24]
   27d74:	b	27d48 <__assert_fail@plt+0x169c4>
   27d78:	b	27d7c <__assert_fail@plt+0x169f8>
   27d7c:	b	27d80 <__assert_fail@plt+0x169fc>
   27d80:	ldr	r0, [sp, #28]
   27d84:	and	r0, r0, #-2147483648	; 0x80000000
   27d88:	cmp	r0, #0
   27d8c:	bne	27dac <__assert_fail@plt+0x16a28>
   27d90:	ldr	r0, [sp, #28]
   27d94:	lsl	r0, r0, #1
   27d98:	str	r0, [sp, #28]
   27d9c:	ldr	r0, [sp, #24]
   27da0:	add	r0, r0, #1
   27da4:	str	r0, [sp, #24]
   27da8:	b	27d80 <__assert_fail@plt+0x169fc>
   27dac:	ldr	r0, [sp, #24]
   27db0:	str	r0, [fp, #-24]	; 0xffffffe8
   27db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27db8:	movw	r1, #31
   27dbc:	sub	r0, r1, r0
   27dc0:	str	r0, [fp, #-12]
   27dc4:	ldr	r0, [fp, #-4]
   27dc8:	lsr	r0, r0, #1
   27dcc:	str	r0, [fp, #-4]
   27dd0:	ldr	r0, [fp, #-12]
   27dd4:	ldr	r1, [fp, #-4]
   27dd8:	lsr	r0, r1, r0
   27ddc:	str	r0, [fp, #-4]
   27de0:	ldr	r0, [fp, #-12]
   27de4:	ldr	r1, [fp, #-8]
   27de8:	ldr	r2, [fp, #-8]
   27dec:	lsr	r2, r2, #1
   27df0:	eor	r1, r1, r2
   27df4:	and	r0, r0, r1
   27df8:	ldr	r1, [fp, #-16]
   27dfc:	eor	r0, r1, r0
   27e00:	str	r0, [fp, #-16]
   27e04:	ldr	r0, [fp, #-4]
   27e08:	ldr	r1, [fp, #-8]
   27e0c:	cmp	r0, r1
   27e10:	bcs	27e84 <__assert_fail@plt+0x16b00>
   27e14:	ldr	r0, [fp, #-4]
   27e18:	cmp	r0, #0
   27e1c:	bne	27e48 <__assert_fail@plt+0x16ac4>
   27e20:	ldr	r0, [fp, #-16]
   27e24:	and	r0, r0, #1
   27e28:	cmp	r0, #0
   27e2c:	movw	r0, #0
   27e30:	movne	r0, #1
   27e34:	tst	r0, #1
   27e38:	mvn	r0, #0
   27e3c:	moveq	r0, #1
   27e40:	mov	sp, fp
   27e44:	pop	{fp, pc}
   27e48:	ldr	r0, [fp, #-4]
   27e4c:	ldr	r1, [fp, #-8]
   27e50:	and	r0, r0, r1
   27e54:	ldr	r1, [fp, #-16]
   27e58:	eor	r0, r1, r0
   27e5c:	str	r0, [fp, #-16]
   27e60:	ldr	r0, [fp, #-8]
   27e64:	ldr	r1, [fp, #-4]
   27e68:	sub	r0, r0, r1
   27e6c:	str	r0, [fp, #-4]
   27e70:	ldr	r0, [fp, #-4]
   27e74:	ldr	r1, [fp, #-8]
   27e78:	sub	r0, r1, r0
   27e7c:	str	r0, [fp, #-8]
   27e80:	b	27ec8 <__assert_fail@plt+0x16b44>
   27e84:	ldr	r0, [fp, #-8]
   27e88:	ldr	r1, [fp, #-4]
   27e8c:	sub	r0, r1, r0
   27e90:	str	r0, [fp, #-4]
   27e94:	ldr	r0, [fp, #-4]
   27e98:	cmp	r0, #0
   27e9c:	beq	27ea4 <__assert_fail@plt+0x16b20>
   27ea0:	b	27ec4 <__assert_fail@plt+0x16b40>
   27ea4:	movw	r0, #35099	; 0x891b
   27ea8:	movt	r0, #3
   27eac:	movw	r1, #30584	; 0x7778
   27eb0:	movt	r1, #3
   27eb4:	movw	r2, #3410	; 0xd52
   27eb8:	movw	r3, #35054	; 0x88ee
   27ebc:	movt	r3, #3
   27ec0:	bl	11384 <__assert_fail@plt>
   27ec4:	b	27ec8 <__assert_fail@plt+0x16b44>
   27ec8:	b	27ecc <__assert_fail@plt+0x16b48>
   27ecc:	ldr	r0, [fp, #-4]
   27ed0:	str	r0, [sp, #16]
   27ed4:	movw	r0, #0
   27ed8:	str	r0, [sp, #12]
   27edc:	ldr	r0, [sp, #16]
   27ee0:	ldr	r1, [sp, #16]
   27ee4:	movw	r2, #0
   27ee8:	sub	r1, r2, r1
   27eec:	and	r0, r0, r1
   27ef0:	str	r0, [sp, #8]
   27ef4:	str	r2, [sp, #4]
   27ef8:	movw	r0, #8
   27efc:	str	r0, [sp]
   27f00:	ldr	r0, [sp]
   27f04:	movw	r1, #32
   27f08:	cmp	r1, r0
   27f0c:	bls	27f48 <__assert_fail@plt+0x16bc4>
   27f10:	b	27f14 <__assert_fail@plt+0x16b90>
   27f14:	ldr	r0, [sp, #8]
   27f18:	and	r0, r0, #-16777216	; 0xff000000
   27f1c:	cmp	r0, #0
   27f20:	bne	27f44 <__assert_fail@plt+0x16bc0>
   27f24:	ldr	r0, [sp]
   27f28:	ldr	r1, [sp, #8]
   27f2c:	lsl	r0, r1, r0
   27f30:	str	r0, [sp, #8]
   27f34:	ldr	r0, [sp, #4]
   27f38:	add	r0, r0, #8
   27f3c:	str	r0, [sp, #4]
   27f40:	b	27f14 <__assert_fail@plt+0x16b90>
   27f44:	b	27f48 <__assert_fail@plt+0x16bc4>
   27f48:	b	27f4c <__assert_fail@plt+0x16bc8>
   27f4c:	ldr	r0, [sp, #8]
   27f50:	and	r0, r0, #-2147483648	; 0x80000000
   27f54:	cmp	r0, #0
   27f58:	bne	27f78 <__assert_fail@plt+0x16bf4>
   27f5c:	ldr	r0, [sp, #8]
   27f60:	lsl	r0, r0, #1
   27f64:	str	r0, [sp, #8]
   27f68:	ldr	r0, [sp, #4]
   27f6c:	add	r0, r0, #1
   27f70:	str	r0, [sp, #4]
   27f74:	b	27f4c <__assert_fail@plt+0x16bc8>
   27f78:	ldr	r0, [sp, #4]
   27f7c:	str	r0, [sp, #12]
   27f80:	ldr	r0, [sp, #12]
   27f84:	movw	r1, #31
   27f88:	sub	r0, r1, r0
   27f8c:	str	r0, [fp, #-12]
   27f90:	ldr	r0, [fp, #-12]
   27f94:	add	r0, r0, #1
   27f98:	str	r0, [fp, #-12]
   27f9c:	b	27dd0 <__assert_fail@plt+0x16a4c>
   27fa0:	push	{fp, lr}
   27fa4:	mov	fp, sp
   27fa8:	sub	sp, sp, #64	; 0x40
   27fac:	ldr	ip, [fp, #8]
   27fb0:	str	r0, [fp, #-4]
   27fb4:	str	r1, [fp, #-8]
   27fb8:	str	r2, [fp, #-12]
   27fbc:	str	r3, [fp, #-16]
   27fc0:	ldr	r0, [fp, #-16]
   27fc4:	cmp	r0, #0
   27fc8:	str	ip, [sp, #24]
   27fcc:	bls	27fd4 <__assert_fail@plt+0x16c50>
   27fd0:	b	27ff4 <__assert_fail@plt+0x16c70>
   27fd4:	movw	r0, #35106	; 0x8922
   27fd8:	movt	r0, #3
   27fdc:	movw	r1, #30584	; 0x7778
   27fe0:	movt	r1, #3
   27fe4:	movw	r2, #3442	; 0xd72
   27fe8:	movw	r3, #35113	; 0x8929
   27fec:	movt	r3, #3
   27ff0:	bl	11384 <__assert_fail@plt>
   27ff4:	ldr	r0, [fp, #-12]
   27ff8:	cmp	r0, #1073741824	; 0x40000000
   27ffc:	bgt	28004 <__assert_fail@plt+0x16c80>
   28000:	b	28024 <__assert_fail@plt+0x16ca0>
   28004:	movw	r0, #35204	; 0x8984
   28008:	movt	r0, #3
   2800c:	movw	r1, #30584	; 0x7778
   28010:	movt	r1, #3
   28014:	movw	r2, #3443	; 0xd73
   28018:	movw	r3, #35113	; 0x8929
   2801c:	movt	r3, #3
   28020:	bl	11384 <__assert_fail@plt>
   28024:	ldr	r0, [pc, #592]	; 2827c <__assert_fail@plt+0x16ef8>
   28028:	ldr	r1, [fp, #-12]
   2802c:	cmp	r1, r0
   28030:	blt	28038 <__assert_fail@plt+0x16cb4>
   28034:	b	28058 <__assert_fail@plt+0x16cd4>
   28038:	movw	r0, #35226	; 0x899a
   2803c:	movt	r0, #3
   28040:	movw	r1, #30584	; 0x7778
   28044:	movt	r1, #3
   28048:	movw	r2, #3444	; 0xd74
   2804c:	movw	r3, #35113	; 0x8929
   28050:	movt	r3, #3
   28054:	bl	11384 <__assert_fail@plt>
   28058:	ldr	r0, [fp, #8]
   2805c:	movw	r1, #4
   28060:	bl	1eb70 <__assert_fail@plt+0xd7ec>
   28064:	cmp	r0, #0
   28068:	ble	28070 <__assert_fail@plt+0x16cec>
   2806c:	b	28090 <__assert_fail@plt+0x16d0c>
   28070:	movw	r0, #35248	; 0x89b0
   28074:	movt	r0, #3
   28078:	movw	r1, #30584	; 0x7778
   2807c:	movt	r1, #3
   28080:	movw	r2, #3445	; 0xd75
   28084:	movw	r3, #35113	; 0x8929
   28088:	movt	r3, #3
   2808c:	bl	11384 <__assert_fail@plt>
   28090:	ldr	r0, [fp, #8]
   28094:	ldr	r0, [r0, #4]
   28098:	cmp	r0, #0
   2809c:	movw	r0, #0
   280a0:	movne	r0, #1
   280a4:	and	r0, r0, #1
   280a8:	ldr	r1, [fp, #8]
   280ac:	ldr	r1, [r1, #8]
   280b0:	ldr	r1, [r1]
   280b4:	and	r0, r0, r1
   280b8:	cmp	r0, #0
   280bc:	beq	280c4 <__assert_fail@plt+0x16d40>
   280c0:	b	280e4 <__assert_fail@plt+0x16d60>
   280c4:	movw	r0, #34976	; 0x88a0
   280c8:	movt	r0, #3
   280cc:	movw	r1, #30584	; 0x7778
   280d0:	movt	r1, #3
   280d4:	movw	r2, #3446	; 0xd76
   280d8:	movw	r3, #35113	; 0x8929
   280dc:	movt	r3, #3
   280e0:	bl	11384 <__assert_fail@plt>
   280e4:	add	r0, sp, #32
   280e8:	movw	r1, #1
   280ec:	bl	1db7c <__assert_fail@plt+0xc7f8>
   280f0:	ldr	r0, [fp, #-4]
   280f4:	movw	r1, #1
   280f8:	bl	1d90c <__assert_fail@plt+0xc588>
   280fc:	ldr	r0, [fp, #-8]
   28100:	ldr	r1, [fp, #-12]
   28104:	bl	1d870 <__assert_fail@plt+0xc4ec>
   28108:	ldr	r0, [fp, #8]
   2810c:	movw	r1, #2
   28110:	bl	22a38 <__assert_fail@plt+0x116b4>
   28114:	sub	r0, r0, #1
   28118:	str	r0, [fp, #-20]	; 0xffffffec
   2811c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28120:	mvn	r1, #0
   28124:	add	r0, r0, r1
   28128:	str	r0, [fp, #-20]	; 0xffffffec
   2812c:	ldr	r1, [fp, #-16]
   28130:	cmp	r0, r1
   28134:	bcc	28250 <__assert_fail@plt+0x16ecc>
   28138:	add	r0, sp, #32
   2813c:	ldr	r2, [fp, #-4]
   28140:	str	r0, [sp, #20]
   28144:	ldr	r1, [sp, #20]
   28148:	bl	1f55c <__assert_fail@plt+0xe1d8>
   2814c:	ldr	r0, [fp, #-4]
   28150:	ldr	r1, [fp, #-8]
   28154:	ldr	r2, [fp, #8]
   28158:	bl	28280 <__assert_fail@plt+0x16efc>
   2815c:	ldr	r0, [fp, #-16]
   28160:	ldr	r1, [fp, #-20]	; 0xffffffec
   28164:	cmp	r0, r1
   28168:	beq	28180 <__assert_fail@plt+0x16dfc>
   2816c:	ldr	r0, [fp, #8]
   28170:	ldr	r1, [fp, #-20]	; 0xffffffec
   28174:	bl	238e4 <__assert_fail@plt+0x12560>
   28178:	cmp	r0, #0
   2817c:	beq	28238 <__assert_fail@plt+0x16eb4>
   28180:	ldr	r0, [fp, #-8]
   28184:	ldr	r1, [fp, #-8]
   28188:	ldr	r2, [fp, #-12]
   2818c:	bl	1f4a8 <__assert_fail@plt+0xe124>
   28190:	add	r0, sp, #32
   28194:	ldr	r1, [fp, #-4]
   28198:	bl	1ee64 <__assert_fail@plt+0xdae0>
   2819c:	add	r0, sp, #32
   281a0:	ldr	r2, [fp, #-4]
   281a4:	str	r0, [sp, #16]
   281a8:	ldr	r1, [sp, #16]
   281ac:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   281b0:	ldr	r0, [sp, #36]	; 0x24
   281b4:	cmp	r0, #0
   281b8:	movw	r0, #0
   281bc:	movne	r0, #1
   281c0:	and	r0, r0, #1
   281c4:	ldr	r1, [sp, #40]	; 0x28
   281c8:	ldr	r1, [r1]
   281cc:	and	r0, r0, r1
   281d0:	cmp	r0, #0
   281d4:	beq	281ec <__assert_fail@plt+0x16e68>
   281d8:	add	r0, sp, #32
   281dc:	ldr	r2, [fp, #8]
   281e0:	str	r0, [sp, #12]
   281e4:	ldr	r1, [sp, #12]
   281e8:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   281ec:	add	r0, sp, #32
   281f0:	str	r0, [sp, #8]
   281f4:	ldr	r1, [sp, #8]
   281f8:	movw	r2, #1
   281fc:	bl	20478 <__assert_fail@plt+0xf0f4>
   28200:	ldr	r0, [fp, #-4]
   28204:	ldr	r1, [fp, #-4]
   28208:	ldr	r2, [fp, #-12]
   2820c:	mvn	lr, #1
   28210:	mul	r2, r2, lr
   28214:	bl	1f4a8 <__assert_fail@plt+0xe124>
   28218:	add	r1, sp, #32
   2821c:	ldr	r0, [fp, #-4]
   28220:	ldr	r2, [fp, #-4]
   28224:	bl	1ef40 <__assert_fail@plt+0xdbbc>
   28228:	ldr	r0, [fp, #-4]
   2822c:	ldr	r1, [fp, #-4]
   28230:	ldr	r2, [fp, #8]
   28234:	bl	20114 <__assert_fail@plt+0xed90>
   28238:	add	r0, sp, #32
   2823c:	ldr	r2, [fp, #8]
   28240:	str	r0, [sp, #4]
   28244:	ldr	r1, [sp, #4]
   28248:	bl	20114 <__assert_fail@plt+0xed90>
   2824c:	b	2811c <__assert_fail@plt+0x16d98>
   28250:	add	r0, sp, #32
   28254:	ldr	r1, [sp, #36]	; 0x24
   28258:	cmp	r1, #0
   2825c:	movw	r1, #0
   28260:	moveq	r1, #1
   28264:	and	r1, r1, #1
   28268:	str	r1, [sp, #28]
   2826c:	bl	1d7ec <__assert_fail@plt+0xc468>
   28270:	ldr	r0, [sp, #28]
   28274:	mov	sp, fp
   28278:	pop	{fp, pc}
   2827c:	andgt	r0, r0, r1
   28280:	push	{fp, lr}
   28284:	mov	fp, sp
   28288:	sub	sp, sp, #16
   2828c:	str	r0, [fp, #-4]
   28290:	str	r1, [sp, #8]
   28294:	str	r2, [sp, #4]
   28298:	ldr	r0, [sp, #8]
   2829c:	ldr	r1, [sp, #8]
   282a0:	ldr	r2, [sp, #4]
   282a4:	bl	20154 <__assert_fail@plt+0xedd0>
   282a8:	ldr	r0, [fp, #-4]
   282ac:	ldr	r1, [fp, #-4]
   282b0:	ldr	r2, [fp, #-4]
   282b4:	bl	1f55c <__assert_fail@plt+0xe1d8>
   282b8:	ldr	r0, [fp, #-4]
   282bc:	ldr	r1, [sp, #8]
   282c0:	movw	r2, #2
   282c4:	bl	1f960 <__assert_fail@plt+0xe5dc>
   282c8:	ldr	r0, [fp, #-4]
   282cc:	ldr	r1, [fp, #-4]
   282d0:	ldr	r2, [sp, #4]
   282d4:	bl	20114 <__assert_fail@plt+0xed90>
   282d8:	ldr	r0, [sp, #8]
   282dc:	ldr	r1, [sp, #8]
   282e0:	ldr	r2, [sp, #8]
   282e4:	bl	1f55c <__assert_fail@plt+0xe1d8>
   282e8:	mov	sp, fp
   282ec:	pop	{fp, pc}
   282f0:	push	{fp, lr}
   282f4:	mov	fp, sp
   282f8:	sub	sp, sp, #24
   282fc:	str	r0, [fp, #-4]
   28300:	ldr	r0, [fp, #-4]
   28304:	movw	r1, #0
   28308:	cmp	r0, r1
   2830c:	bne	28330 <__assert_fail@plt+0x16fac>
   28310:	movw	r0, #41344	; 0xa180
   28314:	movt	r0, #4
   28318:	ldr	r1, [r0]
   2831c:	movw	r0, #35457	; 0x8a81
   28320:	movt	r0, #3
   28324:	bl	11354 <fputs@plt>
   28328:	str	r0, [sp, #8]
   2832c:	bl	1136c <abort@plt>
   28330:	ldr	r0, [fp, #-4]
   28334:	movw	r1, #47	; 0x2f
   28338:	bl	11318 <strrchr@plt>
   2833c:	str	r0, [fp, #-8]
   28340:	ldr	r0, [fp, #-8]
   28344:	movw	r1, #0
   28348:	cmp	r0, r1
   2834c:	beq	28360 <__assert_fail@plt+0x16fdc>
   28350:	ldr	r0, [fp, #-8]
   28354:	add	r0, r0, #1
   28358:	str	r0, [sp, #4]
   2835c:	b	28368 <__assert_fail@plt+0x16fe4>
   28360:	ldr	r0, [fp, #-4]
   28364:	str	r0, [sp, #4]
   28368:	ldr	r0, [sp, #4]
   2836c:	str	r0, [sp, #12]
   28370:	ldr	r0, [sp, #12]
   28374:	ldr	r1, [fp, #-4]
   28378:	sub	r0, r0, r1
   2837c:	cmp	r0, #7
   28380:	blt	283ec <__assert_fail@plt+0x17068>
   28384:	ldr	r0, [sp, #12]
   28388:	mvn	r1, #6
   2838c:	add	r0, r0, r1
   28390:	movw	r1, #35513	; 0x8ab9
   28394:	movt	r1, #3
   28398:	movw	r2, #7
   2839c:	bl	11360 <strncmp@plt>
   283a0:	cmp	r0, #0
   283a4:	bne	283ec <__assert_fail@plt+0x17068>
   283a8:	ldr	r0, [sp, #12]
   283ac:	str	r0, [fp, #-4]
   283b0:	ldr	r0, [sp, #12]
   283b4:	movw	r1, #35521	; 0x8ac1
   283b8:	movt	r1, #3
   283bc:	movw	r2, #3
   283c0:	bl	11360 <strncmp@plt>
   283c4:	cmp	r0, #0
   283c8:	bne	283e8 <__assert_fail@plt+0x17064>
   283cc:	ldr	r0, [sp, #12]
   283d0:	add	r0, r0, #3
   283d4:	str	r0, [fp, #-4]
   283d8:	ldr	r0, [fp, #-4]
   283dc:	movw	r1, #41328	; 0xa170
   283e0:	movt	r1, #4
   283e4:	str	r0, [r1]
   283e8:	b	283ec <__assert_fail@plt+0x17068>
   283ec:	ldr	r0, [fp, #-4]
   283f0:	movw	r1, #41384	; 0xa1a8
   283f4:	movt	r1, #4
   283f8:	str	r0, [r1]
   283fc:	ldr	r0, [fp, #-4]
   28400:	movw	r1, #41332	; 0xa174
   28404:	movt	r1, #4
   28408:	str	r0, [r1]
   2840c:	mov	sp, fp
   28410:	pop	{fp, pc}
   28414:	push	{fp, lr}
   28418:	mov	fp, sp
   2841c:	sub	sp, sp, #24
   28420:	str	r0, [fp, #-8]
   28424:	ldr	r0, [fp, #-8]
   28428:	bl	11264 <gettext@plt>
   2842c:	str	r0, [sp, #12]
   28430:	ldr	r0, [sp, #12]
   28434:	ldr	lr, [fp, #-8]
   28438:	cmp	r0, lr
   2843c:	beq	284bc <__assert_fail@plt+0x17138>
   28440:	ldr	r0, [sp, #12]
   28444:	ldr	r1, [fp, #-8]
   28448:	bl	284d0 <__assert_fail@plt+0x1714c>
   2844c:	tst	r0, #1
   28450:	beq	28460 <__assert_fail@plt+0x170dc>
   28454:	ldr	r0, [sp, #12]
   28458:	str	r0, [fp, #-4]
   2845c:	b	284c4 <__assert_fail@plt+0x17140>
   28460:	ldr	r0, [sp, #12]
   28464:	bl	11270 <strlen@plt>
   28468:	add	r0, r0, #2
   2846c:	ldr	lr, [fp, #-8]
   28470:	str	r0, [sp, #4]
   28474:	mov	r0, lr
   28478:	bl	11270 <strlen@plt>
   2847c:	ldr	lr, [sp, #4]
   28480:	add	r0, lr, r0
   28484:	add	r0, r0, #1
   28488:	add	r0, r0, #1
   2848c:	bl	2c6a4 <__assert_fail@plt+0x1b320>
   28490:	str	r0, [sp, #8]
   28494:	ldr	r0, [sp, #8]
   28498:	ldr	r2, [sp, #12]
   2849c:	ldr	r3, [fp, #-8]
   284a0:	movw	r1, #35525	; 0x8ac5
   284a4:	movt	r1, #3
   284a8:	bl	11330 <sprintf@plt>
   284ac:	ldr	r1, [sp, #8]
   284b0:	str	r1, [fp, #-4]
   284b4:	str	r0, [sp]
   284b8:	b	284c4 <__assert_fail@plt+0x17140>
   284bc:	ldr	r0, [fp, #-8]
   284c0:	str	r0, [fp, #-4]
   284c4:	ldr	r0, [fp, #-4]
   284c8:	mov	sp, fp
   284cc:	pop	{fp, pc}
   284d0:	push	{r4, r5, fp, lr}
   284d4:	add	fp, sp, #8
   284d8:	sub	sp, sp, #288	; 0x120
   284dc:	str	r0, [fp, #-12]
   284e0:	str	r1, [fp, #-16]
   284e4:	ldr	r0, [fp, #-16]
   284e8:	movw	r1, #2
   284ec:	bl	2b8ec <__assert_fail@plt+0x1a568>
   284f0:	str	r0, [fp, #-20]	; 0xffffffec
   284f4:	movw	r0, #0
   284f8:	strb	r0, [fp, #-21]	; 0xffffffeb
   284fc:	ldr	r0, [fp, #-12]
   28500:	ldrb	r0, [r0]
   28504:	cmp	r0, #0
   28508:	beq	289d4 <__assert_fail@plt+0x17650>
   2850c:	ldr	r0, [fp, #-12]
   28510:	ldr	r1, [fp, #-20]	; 0xffffffec
   28514:	bl	301d0 <__assert_fail@plt+0x1ee4c>
   28518:	str	r0, [fp, #-28]	; 0xffffffe4
   2851c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28520:	movw	r1, #0
   28524:	cmp	r0, r1
   28528:	bne	28530 <__assert_fail@plt+0x171ac>
   2852c:	b	289d4 <__assert_fail@plt+0x17650>
   28530:	bl	111bc <__ctype_get_mb_cur_max@plt>
   28534:	cmp	r0, #1
   28538:	bls	288c8 <__assert_fail@plt+0x17544>
   2853c:	ldr	r0, [fp, #-12]
   28540:	str	r0, [fp, #-68]	; 0xffffffbc
   28544:	movw	r0, #0
   28548:	strb	r0, [fp, #-84]	; 0xffffffac
   2854c:	sub	r1, fp, #84	; 0x54
   28550:	add	r1, r1, #4
   28554:	str	r0, [sp, #56]	; 0x38
   28558:	mov	r0, r1
   2855c:	ldr	r1, [sp, #56]	; 0x38
   28560:	and	r1, r1, #255	; 0xff
   28564:	movw	r2, #8
   28568:	bl	112b8 <memset@plt>
   2856c:	ldr	r0, [sp, #56]	; 0x38
   28570:	strb	r0, [fp, #-72]	; 0xffffffb8
   28574:	movw	r1, #1
   28578:	strb	r1, [fp, #-85]	; 0xffffffab
   2857c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   28580:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28584:	cmp	r1, r2
   28588:	bcs	28648 <__assert_fail@plt+0x172c4>
   2858c:	b	28590 <__assert_fail@plt+0x1720c>
   28590:	sub	r0, fp, #84	; 0x54
   28594:	bl	31294 <__assert_fail@plt+0x1ff10>
   28598:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2859c:	tst	r0, #1
   285a0:	movw	r0, #0
   285a4:	str	r0, [sp, #52]	; 0x34
   285a8:	beq	285c0 <__assert_fail@plt+0x1723c>
   285ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   285b0:	cmp	r0, #0
   285b4:	movw	r0, #0
   285b8:	moveq	r0, #1
   285bc:	str	r0, [sp, #52]	; 0x34
   285c0:	ldr	r0, [sp, #52]	; 0x34
   285c4:	mvn	r1, #0
   285c8:	eor	r0, r0, r1
   285cc:	tst	r0, #1
   285d0:	bne	285d8 <__assert_fail@plt+0x17254>
   285d4:	bl	1136c <abort@plt>
   285d8:	sub	r0, fp, #84	; 0x54
   285dc:	add	r0, r0, #16
   285e0:	sub	r1, fp, #128	; 0x80
   285e4:	str	r0, [sp, #48]	; 0x30
   285e8:	mov	r0, r1
   285ec:	ldr	r1, [sp, #48]	; 0x30
   285f0:	movw	r2, #40	; 0x28
   285f4:	bl	1112c <memcpy@plt>
   285f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   285fc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   28600:	add	r0, r1, r0
   28604:	str	r0, [fp, #-68]	; 0xffffffbc
   28608:	movw	r0, #0
   2860c:	strb	r0, [fp, #-72]	; 0xffffffb8
   28610:	ldr	r0, [fp, #-68]	; 0xffffffbc
   28614:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28618:	cmp	r0, r1
   2861c:	bcc	28590 <__assert_fail@plt+0x1720c>
   28620:	ldrb	r0, [fp, #-120]	; 0xffffff88
   28624:	tst	r0, #1
   28628:	beq	28644 <__assert_fail@plt+0x172c0>
   2862c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   28630:	bl	112a0 <iswalnum@plt>
   28634:	cmp	r0, #0
   28638:	beq	28644 <__assert_fail@plt+0x172c0>
   2863c:	movw	r0, #0
   28640:	strb	r0, [fp, #-85]	; 0xffffffab
   28644:	b	28648 <__assert_fail@plt+0x172c4>
   28648:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2864c:	str	r0, [fp, #-68]	; 0xffffffbc
   28650:	movw	r0, #0
   28654:	strb	r0, [fp, #-84]	; 0xffffffac
   28658:	sub	r1, fp, #84	; 0x54
   2865c:	add	r1, r1, #4
   28660:	str	r0, [sp, #44]	; 0x2c
   28664:	mov	r0, r1
   28668:	ldr	r1, [sp, #44]	; 0x2c
   2866c:	and	r1, r1, #255	; 0xff
   28670:	movw	r2, #8
   28674:	str	r2, [sp, #40]	; 0x28
   28678:	bl	112b8 <memset@plt>
   2867c:	ldr	r0, [sp, #44]	; 0x2c
   28680:	strb	r0, [fp, #-72]	; 0xffffffb8
   28684:	ldr	r1, [fp, #-20]	; 0xffffffec
   28688:	str	r1, [sp, #128]	; 0x80
   2868c:	strb	r0, [sp, #112]	; 0x70
   28690:	add	r1, sp, #112	; 0x70
   28694:	add	r1, r1, #4
   28698:	mov	r0, r1
   2869c:	ldr	r1, [sp, #44]	; 0x2c
   286a0:	and	r1, r1, #255	; 0xff
   286a4:	ldr	r2, [sp, #40]	; 0x28
   286a8:	bl	112b8 <memset@plt>
   286ac:	ldr	r0, [sp, #44]	; 0x2c
   286b0:	strb	r0, [sp, #124]	; 0x7c
   286b4:	add	r0, sp, #112	; 0x70
   286b8:	bl	31294 <__assert_fail@plt+0x1ff10>
   286bc:	ldrb	r0, [sp, #136]	; 0x88
   286c0:	tst	r0, #1
   286c4:	movw	r0, #0
   286c8:	str	r0, [sp, #36]	; 0x24
   286cc:	beq	286e4 <__assert_fail@plt+0x17360>
   286d0:	ldr	r0, [sp, #140]	; 0x8c
   286d4:	cmp	r0, #0
   286d8:	movw	r0, #0
   286dc:	moveq	r0, #1
   286e0:	str	r0, [sp, #36]	; 0x24
   286e4:	ldr	r0, [sp, #36]	; 0x24
   286e8:	mvn	r1, #0
   286ec:	eor	r0, r0, r1
   286f0:	tst	r0, #1
   286f4:	beq	28774 <__assert_fail@plt+0x173f0>
   286f8:	sub	r0, fp, #84	; 0x54
   286fc:	bl	31294 <__assert_fail@plt+0x1ff10>
   28700:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   28704:	tst	r0, #1
   28708:	movw	r0, #0
   2870c:	str	r0, [sp, #32]
   28710:	beq	28728 <__assert_fail@plt+0x173a4>
   28714:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28718:	cmp	r0, #0
   2871c:	movw	r0, #0
   28720:	moveq	r0, #1
   28724:	str	r0, [sp, #32]
   28728:	ldr	r0, [sp, #32]
   2872c:	mvn	r1, #0
   28730:	eor	r0, r0, r1
   28734:	tst	r0, #1
   28738:	bne	28740 <__assert_fail@plt+0x173bc>
   2873c:	bl	1136c <abort@plt>
   28740:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28744:	ldr	r1, [fp, #-68]	; 0xffffffbc
   28748:	add	r0, r1, r0
   2874c:	str	r0, [fp, #-68]	; 0xffffffbc
   28750:	movw	r0, #0
   28754:	strb	r0, [fp, #-72]	; 0xffffffb8
   28758:	ldr	r0, [sp, #132]	; 0x84
   2875c:	ldr	r1, [sp, #128]	; 0x80
   28760:	add	r0, r1, r0
   28764:	str	r0, [sp, #128]	; 0x80
   28768:	movw	r0, #0
   2876c:	strb	r0, [sp, #124]	; 0x7c
   28770:	b	286b4 <__assert_fail@plt+0x17330>
   28774:	movw	r0, #1
   28778:	strb	r0, [fp, #-86]	; 0xffffffaa
   2877c:	sub	r0, fp, #84	; 0x54
   28780:	bl	31294 <__assert_fail@plt+0x1ff10>
   28784:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   28788:	tst	r0, #1
   2878c:	movw	r0, #0
   28790:	str	r0, [sp, #28]
   28794:	beq	287ac <__assert_fail@plt+0x17428>
   28798:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2879c:	cmp	r0, #0
   287a0:	movw	r0, #0
   287a4:	moveq	r0, #1
   287a8:	str	r0, [sp, #28]
   287ac:	ldr	r0, [sp, #28]
   287b0:	mvn	r1, #0
   287b4:	eor	r0, r0, r1
   287b8:	tst	r0, #1
   287bc:	beq	28808 <__assert_fail@plt+0x17484>
   287c0:	sub	r0, fp, #84	; 0x54
   287c4:	add	r0, r0, #16
   287c8:	add	r1, sp, #72	; 0x48
   287cc:	str	r0, [sp, #24]
   287d0:	mov	r0, r1
   287d4:	ldr	r1, [sp, #24]
   287d8:	movw	r2, #40	; 0x28
   287dc:	bl	1112c <memcpy@plt>
   287e0:	ldrb	r0, [sp, #80]	; 0x50
   287e4:	tst	r0, #1
   287e8:	beq	28804 <__assert_fail@plt+0x17480>
   287ec:	ldr	r0, [sp, #84]	; 0x54
   287f0:	bl	112a0 <iswalnum@plt>
   287f4:	cmp	r0, #0
   287f8:	beq	28804 <__assert_fail@plt+0x17480>
   287fc:	movw	r0, #0
   28800:	strb	r0, [fp, #-86]	; 0xffffffaa
   28804:	b	28808 <__assert_fail@plt+0x17484>
   28808:	ldrb	r0, [fp, #-85]	; 0xffffffab
   2880c:	tst	r0, #1
   28810:	beq	2882c <__assert_fail@plt+0x174a8>
   28814:	ldrb	r0, [fp, #-86]	; 0xffffffaa
   28818:	tst	r0, #1
   2881c:	beq	2882c <__assert_fail@plt+0x174a8>
   28820:	movw	r0, #1
   28824:	strb	r0, [fp, #-21]	; 0xffffffeb
   28828:	b	289d4 <__assert_fail@plt+0x17650>
   2882c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28830:	str	r0, [fp, #-68]	; 0xffffffbc
   28834:	movw	r0, #0
   28838:	strb	r0, [fp, #-84]	; 0xffffffac
   2883c:	sub	r1, fp, #84	; 0x54
   28840:	add	r2, r1, #4
   28844:	str	r0, [sp, #20]
   28848:	mov	r0, r2
   2884c:	ldr	r2, [sp, #20]
   28850:	and	r3, r2, #255	; 0xff
   28854:	str	r1, [sp, #16]
   28858:	mov	r1, r3
   2885c:	movw	r2, #8
   28860:	bl	112b8 <memset@plt>
   28864:	ldr	r0, [sp, #20]
   28868:	strb	r0, [fp, #-72]	; 0xffffffb8
   2886c:	ldr	r0, [sp, #16]
   28870:	bl	31294 <__assert_fail@plt+0x1ff10>
   28874:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   28878:	tst	r0, #1
   2887c:	movw	r0, #0
   28880:	str	r0, [sp, #12]
   28884:	beq	2889c <__assert_fail@plt+0x17518>
   28888:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2888c:	cmp	r0, #0
   28890:	movw	r0, #0
   28894:	moveq	r0, #1
   28898:	str	r0, [sp, #12]
   2889c:	ldr	r0, [sp, #12]
   288a0:	mvn	r1, #0
   288a4:	eor	r0, r0, r1
   288a8:	tst	r0, #1
   288ac:	bne	288b4 <__assert_fail@plt+0x17530>
   288b0:	b	289d4 <__assert_fail@plt+0x17650>
   288b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   288b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   288bc:	add	r0, r0, r1
   288c0:	str	r0, [fp, #-12]
   288c4:	b	289cc <__assert_fail@plt+0x17648>
   288c8:	movw	r0, #1
   288cc:	strb	r0, [sp, #71]	; 0x47
   288d0:	ldr	r0, [fp, #-12]
   288d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   288d8:	cmp	r0, r1
   288dc:	bcs	28918 <__assert_fail@plt+0x17594>
   288e0:	bl	11240 <__ctype_b_loc@plt>
   288e4:	ldr	r0, [r0]
   288e8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   288ec:	ldrb	lr, [lr, #-1]
   288f0:	mov	r1, lr
   288f4:	add	r0, r0, lr, lsl #1
   288f8:	ldrh	r0, [r0]
   288fc:	and	r0, r0, #8
   28900:	cmp	r0, #0
   28904:	str	r1, [sp, #8]
   28908:	beq	28914 <__assert_fail@plt+0x17590>
   2890c:	movw	r0, #0
   28910:	strb	r0, [sp, #71]	; 0x47
   28914:	b	28918 <__assert_fail@plt+0x17594>
   28918:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2891c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28920:	str	r0, [sp, #4]
   28924:	mov	r0, r1
   28928:	bl	11270 <strlen@plt>
   2892c:	ldr	r1, [sp, #4]
   28930:	add	r0, r1, r0
   28934:	str	r0, [sp, #64]	; 0x40
   28938:	movw	r0, #1
   2893c:	strb	r0, [sp, #63]	; 0x3f
   28940:	ldr	r0, [sp, #64]	; 0x40
   28944:	ldrb	r0, [r0]
   28948:	cmp	r0, #0
   2894c:	beq	28988 <__assert_fail@plt+0x17604>
   28950:	bl	11240 <__ctype_b_loc@plt>
   28954:	ldr	r0, [r0]
   28958:	ldr	lr, [sp, #64]	; 0x40
   2895c:	ldrb	lr, [lr]
   28960:	mov	r1, lr
   28964:	add	r0, r0, lr, lsl #1
   28968:	ldrh	r0, [r0]
   2896c:	and	r0, r0, #8
   28970:	cmp	r0, #0
   28974:	str	r1, [sp]
   28978:	beq	28984 <__assert_fail@plt+0x17600>
   2897c:	movw	r0, #0
   28980:	strb	r0, [sp, #63]	; 0x3f
   28984:	b	28988 <__assert_fail@plt+0x17604>
   28988:	ldrb	r0, [sp, #71]	; 0x47
   2898c:	tst	r0, #1
   28990:	beq	289ac <__assert_fail@plt+0x17628>
   28994:	ldrb	r0, [sp, #63]	; 0x3f
   28998:	tst	r0, #1
   2899c:	beq	289ac <__assert_fail@plt+0x17628>
   289a0:	movw	r0, #1
   289a4:	strb	r0, [fp, #-21]	; 0xffffffeb
   289a8:	b	289d4 <__assert_fail@plt+0x17650>
   289ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   289b0:	ldrb	r0, [r0]
   289b4:	cmp	r0, #0
   289b8:	bne	289c0 <__assert_fail@plt+0x1763c>
   289bc:	b	289d4 <__assert_fail@plt+0x17650>
   289c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   289c4:	add	r0, r0, #1
   289c8:	str	r0, [fp, #-12]
   289cc:	b	289d0 <__assert_fail@plt+0x1764c>
   289d0:	b	284fc <__assert_fail@plt+0x17178>
   289d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   289d8:	bl	1af30 <__assert_fail@plt+0x9bac>
   289dc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   289e0:	and	r0, r0, #1
   289e4:	sub	sp, fp, #8
   289e8:	pop	{r4, r5, fp, pc}
   289ec:	push	{fp, lr}
   289f0:	mov	fp, sp
   289f4:	sub	sp, sp, #72	; 0x48
   289f8:	str	r0, [fp, #-8]
   289fc:	str	r1, [fp, #-12]
   28a00:	ldr	r0, [fp, #-8]
   28a04:	bl	11264 <gettext@plt>
   28a08:	str	r0, [fp, #-16]
   28a0c:	bl	2fda4 <__assert_fail@plt+0x1ea20>
   28a10:	str	r0, [fp, #-20]	; 0xffffffec
   28a14:	movw	r0, #0
   28a18:	str	r0, [fp, #-24]	; 0xffffffe8
   28a1c:	str	r0, [fp, #-28]	; 0xffffffe4
   28a20:	str	r0, [fp, #-32]	; 0xffffffe0
   28a24:	str	r0, [sp, #36]	; 0x24
   28a28:	ldr	r0, [fp, #-20]	; 0xffffffec
   28a2c:	movw	r1, #35533	; 0x8acd
   28a30:	movt	r1, #3
   28a34:	bl	2f7a0 <__assert_fail@plt+0x1e41c>
   28a38:	cmp	r0, #0
   28a3c:	beq	28b60 <__assert_fail@plt+0x177dc>
   28a40:	ldr	r0, [fp, #-12]
   28a44:	ldr	r2, [fp, #-20]	; 0xffffffec
   28a48:	movw	r1, #35533	; 0x8acd
   28a4c:	movt	r1, #3
   28a50:	bl	2f594 <__assert_fail@plt+0x1e210>
   28a54:	str	r0, [fp, #-24]	; 0xffffffe8
   28a58:	str	r0, [fp, #-32]	; 0xffffffe0
   28a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28a60:	bl	11270 <strlen@plt>
   28a64:	str	r0, [sp, #24]
   28a68:	ldr	r0, [sp, #24]
   28a6c:	add	r0, r0, #10
   28a70:	add	r0, r0, #1
   28a74:	bl	2c6a4 <__assert_fail@plt+0x1b320>
   28a78:	str	r0, [sp, #20]
   28a7c:	ldr	r0, [sp, #20]
   28a80:	ldr	r1, [fp, #-20]	; 0xffffffec
   28a84:	ldr	r2, [sp, #24]
   28a88:	bl	1112c <memcpy@plt>
   28a8c:	ldr	r0, [sp, #20]
   28a90:	ldr	r1, [sp, #24]
   28a94:	add	r0, r0, r1
   28a98:	movw	r1, #35539	; 0x8ad3
   28a9c:	movt	r1, #3
   28aa0:	ldrb	r2, [r1]
   28aa4:	strb	r2, [r0]
   28aa8:	ldrb	r2, [r1, #1]
   28aac:	strb	r2, [r0, #1]
   28ab0:	ldrb	r2, [r1, #2]
   28ab4:	strb	r2, [r0, #2]
   28ab8:	ldrb	r2, [r1, #3]
   28abc:	strb	r2, [r0, #3]
   28ac0:	ldrb	r2, [r1, #4]
   28ac4:	strb	r2, [r0, #4]
   28ac8:	ldrb	r2, [r1, #5]
   28acc:	strb	r2, [r0, #5]
   28ad0:	ldrb	r2, [r1, #6]
   28ad4:	strb	r2, [r0, #6]
   28ad8:	ldrb	r2, [r1, #7]
   28adc:	strb	r2, [r0, #7]
   28ae0:	ldrb	r2, [r1, #8]
   28ae4:	strb	r2, [r0, #8]
   28ae8:	ldrb	r2, [r1, #9]
   28aec:	strb	r2, [r0, #9]
   28af0:	ldrb	r1, [r1, #10]
   28af4:	strb	r1, [r0, #10]
   28af8:	ldr	r0, [fp, #-12]
   28afc:	ldr	r2, [sp, #20]
   28b00:	movw	r1, #35533	; 0x8acd
   28b04:	movt	r1, #3
   28b08:	bl	2f594 <__assert_fail@plt+0x1e210>
   28b0c:	str	r0, [sp, #28]
   28b10:	ldr	r0, [sp, #20]
   28b14:	bl	1af30 <__assert_fail@plt+0x9bac>
   28b18:	ldr	r0, [sp, #28]
   28b1c:	movw	r1, #0
   28b20:	cmp	r0, r1
   28b24:	beq	28b5c <__assert_fail@plt+0x177d8>
   28b28:	ldr	r0, [sp, #28]
   28b2c:	movw	r1, #63	; 0x3f
   28b30:	bl	1127c <strchr@plt>
   28b34:	movw	r1, #0
   28b38:	cmp	r0, r1
   28b3c:	beq	28b4c <__assert_fail@plt+0x177c8>
   28b40:	ldr	r0, [sp, #28]
   28b44:	bl	1af30 <__assert_fail@plt+0x9bac>
   28b48:	b	28b58 <__assert_fail@plt+0x177d4>
   28b4c:	ldr	r0, [sp, #28]
   28b50:	str	r0, [fp, #-28]	; 0xffffffe4
   28b54:	str	r0, [sp, #36]	; 0x24
   28b58:	b	28b5c <__assert_fail@plt+0x177d8>
   28b5c:	b	28b70 <__assert_fail@plt+0x177ec>
   28b60:	ldr	r0, [fp, #-12]
   28b64:	str	r0, [fp, #-32]	; 0xffffffe0
   28b68:	ldr	r0, [fp, #-12]
   28b6c:	str	r0, [sp, #36]	; 0x24
   28b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28b74:	movw	r1, #0
   28b78:	cmp	r0, r1
   28b7c:	beq	28b8c <__assert_fail@plt+0x17808>
   28b80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28b84:	str	r0, [sp, #12]
   28b88:	b	28bb8 <__assert_fail@plt+0x17834>
   28b8c:	ldr	r0, [sp, #36]	; 0x24
   28b90:	movw	r1, #0
   28b94:	cmp	r0, r1
   28b98:	beq	28ba8 <__assert_fail@plt+0x17824>
   28b9c:	ldr	r0, [sp, #36]	; 0x24
   28ba0:	str	r0, [sp, #8]
   28ba4:	b	28bb0 <__assert_fail@plt+0x1782c>
   28ba8:	ldr	r0, [fp, #-8]
   28bac:	str	r0, [sp, #8]
   28bb0:	ldr	r0, [sp, #8]
   28bb4:	str	r0, [sp, #12]
   28bb8:	ldr	r0, [sp, #12]
   28bbc:	str	r0, [sp, #32]
   28bc0:	ldr	r0, [fp, #-16]
   28bc4:	ldr	r1, [fp, #-8]
   28bc8:	bl	110d8 <strcmp@plt>
   28bcc:	cmp	r0, #0
   28bd0:	beq	28cf8 <__assert_fail@plt+0x17974>
   28bd4:	ldr	r0, [fp, #-16]
   28bd8:	ldr	r1, [fp, #-8]
   28bdc:	bl	284d0 <__assert_fail@plt+0x1714c>
   28be0:	tst	r0, #1
   28be4:	bne	28c30 <__assert_fail@plt+0x178ac>
   28be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28bec:	movw	r1, #0
   28bf0:	cmp	r0, r1
   28bf4:	beq	28c0c <__assert_fail@plt+0x17888>
   28bf8:	ldr	r0, [fp, #-16]
   28bfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28c00:	bl	284d0 <__assert_fail@plt+0x1714c>
   28c04:	tst	r0, #1
   28c08:	bne	28c30 <__assert_fail@plt+0x178ac>
   28c0c:	ldr	r0, [sp, #36]	; 0x24
   28c10:	movw	r1, #0
   28c14:	cmp	r0, r1
   28c18:	beq	28c6c <__assert_fail@plt+0x178e8>
   28c1c:	ldr	r0, [fp, #-16]
   28c20:	ldr	r1, [sp, #36]	; 0x24
   28c24:	bl	284d0 <__assert_fail@plt+0x1714c>
   28c28:	tst	r0, #1
   28c2c:	beq	28c6c <__assert_fail@plt+0x178e8>
   28c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28c34:	movw	r1, #0
   28c38:	cmp	r0, r1
   28c3c:	beq	28c48 <__assert_fail@plt+0x178c4>
   28c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28c44:	bl	1af30 <__assert_fail@plt+0x9bac>
   28c48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28c4c:	movw	r1, #0
   28c50:	cmp	r0, r1
   28c54:	beq	28c60 <__assert_fail@plt+0x178dc>
   28c58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28c5c:	bl	1af30 <__assert_fail@plt+0x9bac>
   28c60:	ldr	r0, [fp, #-16]
   28c64:	str	r0, [fp, #-4]
   28c68:	b	28d50 <__assert_fail@plt+0x179cc>
   28c6c:	ldr	r0, [fp, #-16]
   28c70:	bl	11270 <strlen@plt>
   28c74:	add	r0, r0, #2
   28c78:	ldr	lr, [sp, #32]
   28c7c:	str	r0, [sp, #4]
   28c80:	mov	r0, lr
   28c84:	bl	11270 <strlen@plt>
   28c88:	ldr	lr, [sp, #4]
   28c8c:	add	r0, lr, r0
   28c90:	add	r0, r0, #1
   28c94:	add	r0, r0, #1
   28c98:	bl	2c6a4 <__assert_fail@plt+0x1b320>
   28c9c:	str	r0, [sp, #16]
   28ca0:	ldr	r0, [sp, #16]
   28ca4:	ldr	r2, [fp, #-16]
   28ca8:	ldr	r3, [sp, #32]
   28cac:	movw	r1, #35525	; 0x8ac5
   28cb0:	movt	r1, #3
   28cb4:	bl	11330 <sprintf@plt>
   28cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28cbc:	movw	r2, #0
   28cc0:	cmp	r1, r2
   28cc4:	str	r0, [sp]
   28cc8:	beq	28cd4 <__assert_fail@plt+0x17950>
   28ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28cd0:	bl	1af30 <__assert_fail@plt+0x9bac>
   28cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28cd8:	movw	r1, #0
   28cdc:	cmp	r0, r1
   28ce0:	beq	28cec <__assert_fail@plt+0x17968>
   28ce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28ce8:	bl	1af30 <__assert_fail@plt+0x9bac>
   28cec:	ldr	r0, [sp, #16]
   28cf0:	str	r0, [fp, #-4]
   28cf4:	b	28d50 <__assert_fail@plt+0x179cc>
   28cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28cfc:	movw	r1, #0
   28d00:	cmp	r0, r1
   28d04:	beq	28d20 <__assert_fail@plt+0x1799c>
   28d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28d0c:	ldr	r1, [sp, #32]
   28d10:	cmp	r0, r1
   28d14:	beq	28d20 <__assert_fail@plt+0x1799c>
   28d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28d1c:	bl	1af30 <__assert_fail@plt+0x9bac>
   28d20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28d24:	movw	r1, #0
   28d28:	cmp	r0, r1
   28d2c:	beq	28d48 <__assert_fail@plt+0x179c4>
   28d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28d34:	ldr	r1, [sp, #32]
   28d38:	cmp	r0, r1
   28d3c:	beq	28d48 <__assert_fail@plt+0x179c4>
   28d40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28d44:	bl	1af30 <__assert_fail@plt+0x9bac>
   28d48:	ldr	r0, [sp, #32]
   28d4c:	str	r0, [fp, #-4]
   28d50:	ldr	r0, [fp, #-4]
   28d54:	mov	sp, fp
   28d58:	pop	{fp, pc}
   28d5c:	push	{fp, lr}
   28d60:	mov	fp, sp
   28d64:	sub	sp, sp, #24
   28d68:	str	r0, [fp, #-4]
   28d6c:	bl	11294 <__errno_location@plt>
   28d70:	ldr	r0, [r0]
   28d74:	str	r0, [fp, #-8]
   28d78:	ldr	r0, [fp, #-4]
   28d7c:	movw	lr, #0
   28d80:	cmp	r0, lr
   28d84:	beq	28d94 <__assert_fail@plt+0x17a10>
   28d88:	ldr	r0, [fp, #-4]
   28d8c:	str	r0, [sp, #8]
   28d90:	b	28da4 <__assert_fail@plt+0x17a20>
   28d94:	movw	r0, #41388	; 0xa1ac
   28d98:	movt	r0, #4
   28d9c:	str	r0, [sp, #8]
   28da0:	b	28da4 <__assert_fail@plt+0x17a20>
   28da4:	ldr	r0, [sp, #8]
   28da8:	movw	r1, #48	; 0x30
   28dac:	bl	2f380 <__assert_fail@plt+0x1dffc>
   28db0:	str	r0, [sp, #12]
   28db4:	ldr	r0, [fp, #-8]
   28db8:	str	r0, [sp, #4]
   28dbc:	bl	11294 <__errno_location@plt>
   28dc0:	ldr	r1, [sp, #4]
   28dc4:	str	r1, [r0]
   28dc8:	ldr	r0, [sp, #12]
   28dcc:	mov	sp, fp
   28dd0:	pop	{fp, pc}
   28dd4:	sub	sp, sp, #8
   28dd8:	str	r0, [sp, #4]
   28ddc:	ldr	r0, [sp, #4]
   28de0:	movw	r1, #0
   28de4:	cmp	r0, r1
   28de8:	beq	28df8 <__assert_fail@plt+0x17a74>
   28dec:	ldr	r0, [sp, #4]
   28df0:	str	r0, [sp]
   28df4:	b	28e08 <__assert_fail@plt+0x17a84>
   28df8:	movw	r0, #41388	; 0xa1ac
   28dfc:	movt	r0, #4
   28e00:	str	r0, [sp]
   28e04:	b	28e08 <__assert_fail@plt+0x17a84>
   28e08:	ldr	r0, [sp]
   28e0c:	ldr	r0, [r0]
   28e10:	add	sp, sp, #8
   28e14:	bx	lr
   28e18:	sub	sp, sp, #16
   28e1c:	str	r0, [sp, #12]
   28e20:	str	r1, [sp, #8]
   28e24:	ldr	r0, [sp, #8]
   28e28:	ldr	r1, [sp, #12]
   28e2c:	movw	r2, #0
   28e30:	cmp	r1, r2
   28e34:	str	r0, [sp, #4]
   28e38:	beq	28e48 <__assert_fail@plt+0x17ac4>
   28e3c:	ldr	r0, [sp, #12]
   28e40:	str	r0, [sp]
   28e44:	b	28e58 <__assert_fail@plt+0x17ad4>
   28e48:	movw	r0, #41388	; 0xa1ac
   28e4c:	movt	r0, #4
   28e50:	str	r0, [sp]
   28e54:	b	28e58 <__assert_fail@plt+0x17ad4>
   28e58:	ldr	r0, [sp]
   28e5c:	ldr	r1, [sp, #4]
   28e60:	str	r1, [r0]
   28e64:	add	sp, sp, #16
   28e68:	bx	lr
   28e6c:	sub	sp, sp, #32
   28e70:	str	r0, [sp, #28]
   28e74:	strb	r1, [sp, #27]
   28e78:	str	r2, [sp, #20]
   28e7c:	ldrb	r0, [sp, #27]
   28e80:	strb	r0, [sp, #19]
   28e84:	ldr	r0, [sp, #28]
   28e88:	movw	r1, #0
   28e8c:	cmp	r0, r1
   28e90:	beq	28ea0 <__assert_fail@plt+0x17b1c>
   28e94:	ldr	r0, [sp, #28]
   28e98:	str	r0, [sp]
   28e9c:	b	28eb0 <__assert_fail@plt+0x17b2c>
   28ea0:	movw	r0, #41388	; 0xa1ac
   28ea4:	movt	r0, #4
   28ea8:	str	r0, [sp]
   28eac:	b	28eb0 <__assert_fail@plt+0x17b2c>
   28eb0:	ldr	r0, [sp]
   28eb4:	add	r0, r0, #8
   28eb8:	ldrb	r1, [sp, #19]
   28ebc:	lsr	r1, r1, #5
   28ec0:	add	r0, r0, r1, lsl #2
   28ec4:	str	r0, [sp, #12]
   28ec8:	ldrb	r0, [sp, #19]
   28ecc:	and	r0, r0, #31
   28ed0:	str	r0, [sp, #8]
   28ed4:	ldr	r0, [sp, #12]
   28ed8:	ldr	r0, [r0]
   28edc:	ldr	r1, [sp, #8]
   28ee0:	lsr	r0, r0, r1
   28ee4:	and	r0, r0, #1
   28ee8:	str	r0, [sp, #4]
   28eec:	ldr	r0, [sp, #20]
   28ef0:	and	r0, r0, #1
   28ef4:	ldr	r1, [sp, #4]
   28ef8:	eor	r0, r0, r1
   28efc:	ldr	r1, [sp, #8]
   28f00:	lsl	r0, r0, r1
   28f04:	ldr	r1, [sp, #12]
   28f08:	ldr	r2, [r1]
   28f0c:	eor	r0, r2, r0
   28f10:	str	r0, [r1]
   28f14:	ldr	r0, [sp, #4]
   28f18:	add	sp, sp, #32
   28f1c:	bx	lr
   28f20:	sub	sp, sp, #12
   28f24:	str	r0, [sp, #8]
   28f28:	str	r1, [sp, #4]
   28f2c:	ldr	r0, [sp, #8]
   28f30:	movw	r1, #0
   28f34:	cmp	r0, r1
   28f38:	bne	28f48 <__assert_fail@plt+0x17bc4>
   28f3c:	movw	r0, #41388	; 0xa1ac
   28f40:	movt	r0, #4
   28f44:	str	r0, [sp, #8]
   28f48:	ldr	r0, [sp, #8]
   28f4c:	ldr	r0, [r0, #4]
   28f50:	str	r0, [sp]
   28f54:	ldr	r0, [sp, #4]
   28f58:	ldr	r1, [sp, #8]
   28f5c:	str	r0, [r1, #4]
   28f60:	ldr	r0, [sp]
   28f64:	add	sp, sp, #12
   28f68:	bx	lr
   28f6c:	push	{fp, lr}
   28f70:	mov	fp, sp
   28f74:	sub	sp, sp, #16
   28f78:	str	r0, [fp, #-4]
   28f7c:	str	r1, [sp, #8]
   28f80:	str	r2, [sp, #4]
   28f84:	ldr	r0, [fp, #-4]
   28f88:	movw	r1, #0
   28f8c:	cmp	r0, r1
   28f90:	bne	28fa0 <__assert_fail@plt+0x17c1c>
   28f94:	movw	r0, #41388	; 0xa1ac
   28f98:	movt	r0, #4
   28f9c:	str	r0, [fp, #-4]
   28fa0:	ldr	r0, [fp, #-4]
   28fa4:	movw	r1, #10
   28fa8:	str	r1, [r0]
   28fac:	ldr	r0, [sp, #8]
   28fb0:	movw	r1, #0
   28fb4:	cmp	r0, r1
   28fb8:	beq	28fcc <__assert_fail@plt+0x17c48>
   28fbc:	ldr	r0, [sp, #4]
   28fc0:	movw	r1, #0
   28fc4:	cmp	r0, r1
   28fc8:	bne	28fd0 <__assert_fail@plt+0x17c4c>
   28fcc:	bl	1136c <abort@plt>
   28fd0:	ldr	r0, [sp, #8]
   28fd4:	ldr	r1, [fp, #-4]
   28fd8:	str	r0, [r1, #40]	; 0x28
   28fdc:	ldr	r0, [sp, #4]
   28fe0:	ldr	r1, [fp, #-4]
   28fe4:	str	r0, [r1, #44]	; 0x2c
   28fe8:	mov	sp, fp
   28fec:	pop	{fp, pc}
   28ff0:	push	{r4, r5, r6, sl, fp, lr}
   28ff4:	add	fp, sp, #16
   28ff8:	sub	sp, sp, #64	; 0x40
   28ffc:	ldr	ip, [fp, #8]
   29000:	str	r0, [fp, #-20]	; 0xffffffec
   29004:	str	r1, [fp, #-24]	; 0xffffffe8
   29008:	str	r2, [fp, #-28]	; 0xffffffe4
   2900c:	str	r3, [fp, #-32]	; 0xffffffe0
   29010:	ldr	r0, [fp, #8]
   29014:	movw	r1, #0
   29018:	cmp	r0, r1
   2901c:	str	ip, [sp, #32]
   29020:	beq	29030 <__assert_fail@plt+0x17cac>
   29024:	ldr	r0, [fp, #8]
   29028:	str	r0, [sp, #28]
   2902c:	b	29040 <__assert_fail@plt+0x17cbc>
   29030:	movw	r0, #41388	; 0xa1ac
   29034:	movt	r0, #4
   29038:	str	r0, [sp, #28]
   2903c:	b	29040 <__assert_fail@plt+0x17cbc>
   29040:	ldr	r0, [sp, #28]
   29044:	str	r0, [fp, #-36]	; 0xffffffdc
   29048:	bl	11294 <__errno_location@plt>
   2904c:	ldr	r0, [r0]
   29050:	str	r0, [sp, #40]	; 0x28
   29054:	ldr	r0, [fp, #-20]	; 0xffffffec
   29058:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2905c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29060:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29064:	ldr	lr, [fp, #-36]	; 0xffffffdc
   29068:	ldr	lr, [lr]
   2906c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   29070:	ldr	ip, [ip, #4]
   29074:	ldr	r4, [fp, #-36]	; 0xffffffdc
   29078:	add	r4, r4, #8
   2907c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   29080:	ldr	r5, [r5, #40]	; 0x28
   29084:	ldr	r6, [fp, #-36]	; 0xffffffdc
   29088:	ldr	r6, [r6, #44]	; 0x2c
   2908c:	str	lr, [sp]
   29090:	str	ip, [sp, #4]
   29094:	str	r4, [sp, #8]
   29098:	str	r5, [sp, #12]
   2909c:	str	r6, [sp, #16]
   290a0:	bl	290c8 <__assert_fail@plt+0x17d44>
   290a4:	str	r0, [sp, #36]	; 0x24
   290a8:	ldr	r0, [sp, #40]	; 0x28
   290ac:	str	r0, [sp, #24]
   290b0:	bl	11294 <__errno_location@plt>
   290b4:	ldr	r1, [sp, #24]
   290b8:	str	r1, [r0]
   290bc:	ldr	r0, [sp, #36]	; 0x24
   290c0:	sub	sp, fp, #16
   290c4:	pop	{r4, r5, r6, sl, fp, pc}
   290c8:	push	{r4, r5, r6, sl, fp, lr}
   290cc:	add	fp, sp, #16
   290d0:	sub	sp, sp, #168	; 0xa8
   290d4:	ldr	ip, [fp, #24]
   290d8:	ldr	lr, [fp, #20]
   290dc:	ldr	r4, [fp, #16]
   290e0:	ldr	r5, [fp, #12]
   290e4:	ldr	r6, [fp, #8]
   290e8:	str	r0, [fp, #-24]	; 0xffffffe8
   290ec:	str	r1, [fp, #-28]	; 0xffffffe4
   290f0:	str	r2, [fp, #-32]	; 0xffffffe0
   290f4:	str	r3, [fp, #-36]	; 0xffffffdc
   290f8:	movw	r0, #0
   290fc:	str	r0, [fp, #-44]	; 0xffffffd4
   29100:	str	r0, [fp, #-48]	; 0xffffffd0
   29104:	str	r0, [fp, #-52]	; 0xffffffcc
   29108:	str	r0, [fp, #-56]	; 0xffffffc8
   2910c:	movw	r0, #0
   29110:	strb	r0, [fp, #-57]	; 0xffffffc7
   29114:	str	r6, [sp, #80]	; 0x50
   29118:	str	lr, [sp, #76]	; 0x4c
   2911c:	str	r4, [sp, #72]	; 0x48
   29120:	str	r5, [sp, #68]	; 0x44
   29124:	str	ip, [sp, #64]	; 0x40
   29128:	bl	111bc <__ctype_get_mb_cur_max@plt>
   2912c:	cmp	r0, #1
   29130:	movw	r0, #0
   29134:	moveq	r0, #1
   29138:	and	r0, r0, #1
   2913c:	strb	r0, [fp, #-58]	; 0xffffffc6
   29140:	ldr	r0, [fp, #12]
   29144:	and	r0, r0, #2
   29148:	cmp	r0, #0
   2914c:	movw	r0, #0
   29150:	movne	r0, #1
   29154:	and	r0, r0, #1
   29158:	strb	r0, [fp, #-59]	; 0xffffffc5
   2915c:	movw	r0, #0
   29160:	strb	r0, [fp, #-60]	; 0xffffffc4
   29164:	strb	r0, [fp, #-61]	; 0xffffffc3
   29168:	movw	r0, #1
   2916c:	strb	r0, [fp, #-62]	; 0xffffffc2
   29170:	ldr	r0, [fp, #8]
   29174:	cmp	r0, #10
   29178:	str	r0, [sp, #60]	; 0x3c
   2917c:	bhi	293a4 <__assert_fail@plt+0x18020>
   29180:	add	r0, pc, #8
   29184:	ldr	r1, [sp, #60]	; 0x3c
   29188:	ldr	r0, [r0, r1, lsl #2]
   2918c:	mov	pc, r0
   29190:	muleq	r2, r8, r3
   29194:	andeq	r9, r2, r4, lsl r3
   29198:	andeq	r9, r2, r4, lsr r3
   2919c:	andeq	r9, r2, ip, lsl #6
   291a0:	andeq	r9, r2, ip, lsl r3
   291a4:	andeq	r9, r2, ip, asr #3
   291a8:			; <UNDEFINED> instruction: 0x000291bc
   291ac:	andeq	r9, r2, r0, lsr r2
   291b0:	andeq	r9, r2, r4, asr #4
   291b4:	andeq	r9, r2, r4, asr #4
   291b8:	andeq	r9, r2, r4, asr #4
   291bc:	movw	r0, #5
   291c0:	str	r0, [fp, #8]
   291c4:	movw	r0, #1
   291c8:	strb	r0, [fp, #-59]	; 0xffffffc5
   291cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   291d0:	tst	r0, #1
   291d4:	bne	29210 <__assert_fail@plt+0x17e8c>
   291d8:	b	291dc <__assert_fail@plt+0x17e58>
   291dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   291e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   291e4:	cmp	r0, r1
   291e8:	bcs	29200 <__assert_fail@plt+0x17e7c>
   291ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   291f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   291f4:	add	r0, r0, r1
   291f8:	movw	r1, #34	; 0x22
   291fc:	strb	r1, [r0]
   29200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29204:	add	r0, r0, #1
   29208:	str	r0, [fp, #-44]	; 0xffffffd4
   2920c:	b	29210 <__assert_fail@plt+0x17e8c>
   29210:	movw	r0, #1
   29214:	strb	r0, [fp, #-57]	; 0xffffffc7
   29218:	movw	r0, #35626	; 0x8b2a
   2921c:	movt	r0, #3
   29220:	str	r0, [fp, #-52]	; 0xffffffcc
   29224:	movw	r0, #1
   29228:	str	r0, [fp, #-56]	; 0xffffffc8
   2922c:	b	293a8 <__assert_fail@plt+0x18024>
   29230:	movw	r0, #1
   29234:	strb	r0, [fp, #-57]	; 0xffffffc7
   29238:	movw	r0, #0
   2923c:	strb	r0, [fp, #-59]	; 0xffffffc5
   29240:	b	293a8 <__assert_fail@plt+0x18024>
   29244:	ldr	r0, [fp, #8]
   29248:	cmp	r0, #10
   2924c:	beq	29278 <__assert_fail@plt+0x17ef4>
   29250:	ldr	r1, [fp, #8]
   29254:	movw	r0, #35628	; 0x8b2c
   29258:	movt	r0, #3
   2925c:	bl	2b2b8 <__assert_fail@plt+0x19f34>
   29260:	str	r0, [fp, #20]
   29264:	ldr	r1, [fp, #8]
   29268:	movw	r0, #36652	; 0x8f2c
   2926c:	movt	r0, #3
   29270:	bl	2b2b8 <__assert_fail@plt+0x19f34>
   29274:	str	r0, [fp, #24]
   29278:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2927c:	tst	r0, #1
   29280:	bne	292ec <__assert_fail@plt+0x17f68>
   29284:	ldr	r0, [fp, #20]
   29288:	str	r0, [fp, #-52]	; 0xffffffcc
   2928c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29290:	ldrsb	r0, [r0]
   29294:	cmp	r0, #0
   29298:	beq	292e8 <__assert_fail@plt+0x17f64>
   2929c:	b	292a0 <__assert_fail@plt+0x17f1c>
   292a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   292a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   292a8:	cmp	r0, r1
   292ac:	bcs	292c8 <__assert_fail@plt+0x17f44>
   292b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   292b4:	ldrb	r0, [r0]
   292b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   292bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   292c0:	add	r1, r1, r2
   292c4:	strb	r0, [r1]
   292c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   292cc:	add	r0, r0, #1
   292d0:	str	r0, [fp, #-44]	; 0xffffffd4
   292d4:	b	292d8 <__assert_fail@plt+0x17f54>
   292d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   292dc:	add	r0, r0, #1
   292e0:	str	r0, [fp, #-52]	; 0xffffffcc
   292e4:	b	2928c <__assert_fail@plt+0x17f08>
   292e8:	b	292ec <__assert_fail@plt+0x17f68>
   292ec:	movw	r0, #1
   292f0:	strb	r0, [fp, #-57]	; 0xffffffc7
   292f4:	ldr	r0, [fp, #24]
   292f8:	str	r0, [fp, #-52]	; 0xffffffcc
   292fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29300:	bl	11270 <strlen@plt>
   29304:	str	r0, [fp, #-56]	; 0xffffffc8
   29308:	b	293a8 <__assert_fail@plt+0x18024>
   2930c:	movw	r0, #1
   29310:	strb	r0, [fp, #-57]	; 0xffffffc7
   29314:	movw	r0, #1
   29318:	strb	r0, [fp, #-59]	; 0xffffffc5
   2931c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29320:	tst	r0, #1
   29324:	bne	29330 <__assert_fail@plt+0x17fac>
   29328:	movw	r0, #1
   2932c:	strb	r0, [fp, #-57]	; 0xffffffc7
   29330:	b	29334 <__assert_fail@plt+0x17fb0>
   29334:	movw	r0, #2
   29338:	str	r0, [fp, #8]
   2933c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29340:	tst	r0, #1
   29344:	bne	29380 <__assert_fail@plt+0x17ffc>
   29348:	b	2934c <__assert_fail@plt+0x17fc8>
   2934c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29350:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29354:	cmp	r0, r1
   29358:	bcs	29370 <__assert_fail@plt+0x17fec>
   2935c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29360:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29364:	add	r0, r0, r1
   29368:	movw	r1, #39	; 0x27
   2936c:	strb	r1, [r0]
   29370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29374:	add	r0, r0, #1
   29378:	str	r0, [fp, #-44]	; 0xffffffd4
   2937c:	b	29380 <__assert_fail@plt+0x17ffc>
   29380:	movw	r0, #36652	; 0x8f2c
   29384:	movt	r0, #3
   29388:	str	r0, [fp, #-52]	; 0xffffffcc
   2938c:	movw	r0, #1
   29390:	str	r0, [fp, #-56]	; 0xffffffc8
   29394:	b	293a8 <__assert_fail@plt+0x18024>
   29398:	movw	r0, #0
   2939c:	strb	r0, [fp, #-59]	; 0xffffffc5
   293a0:	b	293a8 <__assert_fail@plt+0x18024>
   293a4:	bl	1136c <abort@plt>
   293a8:	movw	r0, #0
   293ac:	str	r0, [fp, #-40]	; 0xffffffd8
   293b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   293b4:	cmn	r0, #1
   293b8:	bne	293e4 <__assert_fail@plt+0x18060>
   293bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   293c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   293c4:	add	r0, r0, r1
   293c8:	ldrb	r0, [r0]
   293cc:	cmp	r0, #0
   293d0:	movw	r0, #0
   293d4:	moveq	r0, #1
   293d8:	and	r0, r0, #1
   293dc:	str	r0, [sp, #56]	; 0x38
   293e0:	b	29400 <__assert_fail@plt+0x1807c>
   293e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   293e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   293ec:	cmp	r0, r1
   293f0:	movw	r0, #0
   293f4:	moveq	r0, #1
   293f8:	and	r0, r0, #1
   293fc:	str	r0, [sp, #56]	; 0x38
   29400:	ldr	r0, [sp, #56]	; 0x38
   29404:	cmp	r0, #0
   29408:	movw	r0, #0
   2940c:	movne	r0, #1
   29410:	mvn	r1, #0
   29414:	eor	r0, r0, r1
   29418:	tst	r0, #1
   2941c:	beq	2a60c <__assert_fail@plt+0x19288>
   29420:	movw	r0, #0
   29424:	strb	r0, [fp, #-65]	; 0xffffffbf
   29428:	strb	r0, [fp, #-66]	; 0xffffffbe
   2942c:	strb	r0, [fp, #-67]	; 0xffffffbd
   29430:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29434:	tst	r0, #1
   29438:	beq	294e4 <__assert_fail@plt+0x18160>
   2943c:	ldr	r0, [fp, #8]
   29440:	cmp	r0, #2
   29444:	beq	294e4 <__assert_fail@plt+0x18160>
   29448:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2944c:	cmp	r0, #0
   29450:	beq	294e4 <__assert_fail@plt+0x18160>
   29454:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29458:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2945c:	add	r0, r0, r1
   29460:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29464:	cmn	r1, #1
   29468:	str	r0, [sp, #52]	; 0x34
   2946c:	bne	29494 <__assert_fail@plt+0x18110>
   29470:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29474:	movw	r1, #1
   29478:	cmp	r1, r0
   2947c:	bcs	29494 <__assert_fail@plt+0x18110>
   29480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29484:	bl	11270 <strlen@plt>
   29488:	str	r0, [fp, #-36]	; 0xffffffdc
   2948c:	str	r0, [sp, #48]	; 0x30
   29490:	b	2949c <__assert_fail@plt+0x18118>
   29494:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29498:	str	r0, [sp, #48]	; 0x30
   2949c:	ldr	r0, [sp, #48]	; 0x30
   294a0:	ldr	r1, [sp, #52]	; 0x34
   294a4:	cmp	r1, r0
   294a8:	bhi	294e4 <__assert_fail@plt+0x18160>
   294ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   294b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   294b4:	add	r0, r0, r1
   294b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   294bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   294c0:	bl	11144 <memcmp@plt>
   294c4:	cmp	r0, #0
   294c8:	bne	294e4 <__assert_fail@plt+0x18160>
   294cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   294d0:	tst	r0, #1
   294d4:	beq	294dc <__assert_fail@plt+0x18158>
   294d8:	b	2a78c <__assert_fail@plt+0x19408>
   294dc:	movw	r0, #1
   294e0:	strb	r0, [fp, #-65]	; 0xffffffbf
   294e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   294e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   294ec:	ldrb	r0, [r0, r1]
   294f0:	strb	r0, [fp, #-63]	; 0xffffffc1
   294f4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   294f8:	mov	r1, r0
   294fc:	cmp	r0, #126	; 0x7e
   29500:	str	r1, [sp, #44]	; 0x2c
   29504:	bhi	29d74 <__assert_fail@plt+0x189f0>
   29508:	add	r0, pc, #8
   2950c:	ldr	r1, [sp, #44]	; 0x2c
   29510:	ldr	r0, [r0, r1, lsl #2]
   29514:	mov	pc, r0
   29518:	andeq	r9, r2, r4, lsl r7
   2951c:	andeq	r9, r2, r4, ror sp
   29520:	andeq	r9, r2, r4, ror sp
   29524:	andeq	r9, r2, r4, ror sp
   29528:	andeq	r9, r2, r4, ror sp
   2952c:	andeq	r9, r2, r4, ror sp
   29530:	andeq	r9, r2, r4, ror sp
   29534:	andeq	r9, r2, ip, lsl fp
   29538:	andeq	r9, r2, r8, lsr #22
   2953c:	andeq	r9, r2, r8, asr fp
   29540:	andeq	r9, r2, r0, asr #22
   29544:	andeq	r9, r2, r4, ror #22
   29548:	andeq	r9, r2, r4, lsr fp
   2954c:	andeq	r9, r2, ip, asr #22
   29550:	andeq	r9, r2, r4, ror sp
   29554:	andeq	r9, r2, r4, ror sp
   29558:	andeq	r9, r2, r4, ror sp
   2955c:	andeq	r9, r2, r4, ror sp
   29560:	andeq	r9, r2, r4, ror sp
   29564:	andeq	r9, r2, r4, ror sp
   29568:	andeq	r9, r2, r4, ror sp
   2956c:	andeq	r9, r2, r4, ror sp
   29570:	andeq	r9, r2, r4, ror sp
   29574:	andeq	r9, r2, r4, ror sp
   29578:	andeq	r9, r2, r4, ror sp
   2957c:	andeq	r9, r2, r4, ror sp
   29580:	andeq	r9, r2, r4, ror sp
   29584:	andeq	r9, r2, r4, ror sp
   29588:	andeq	r9, r2, r4, ror sp
   2958c:	andeq	r9, r2, r4, ror sp
   29590:	andeq	r9, r2, r4, ror sp
   29594:	andeq	r9, r2, r4, ror sp
   29598:	andeq	r9, r2, r8, asr #24
   2959c:	andeq	r9, r2, r0, asr ip
   295a0:	andeq	r9, r2, r0, asr ip
   295a4:	andeq	r9, r2, r4, lsr ip
   295a8:	andeq	r9, r2, r0, asr ip
   295ac:	andeq	r9, r2, r8, ror #26
   295b0:	andeq	r9, r2, r0, asr ip
   295b4:	andeq	r9, r2, r0, ror ip
   295b8:	andeq	r9, r2, r0, asr ip
   295bc:	andeq	r9, r2, r0, asr ip
   295c0:	andeq	r9, r2, r0, asr ip
   295c4:	andeq	r9, r2, r8, ror #26
   295c8:	andeq	r9, r2, r8, ror #26
   295cc:	andeq	r9, r2, r8, ror #26
   295d0:	andeq	r9, r2, r8, ror #26
   295d4:	andeq	r9, r2, r8, ror #26
   295d8:	andeq	r9, r2, r8, ror #26
   295dc:	andeq	r9, r2, r8, ror #26
   295e0:	andeq	r9, r2, r8, ror #26
   295e4:	andeq	r9, r2, r8, ror #26
   295e8:	andeq	r9, r2, r8, ror #26
   295ec:	andeq	r9, r2, r8, ror #26
   295f0:	andeq	r9, r2, r8, ror #26
   295f4:	andeq	r9, r2, r8, ror #26
   295f8:	andeq	r9, r2, r8, ror #26
   295fc:	andeq	r9, r2, r8, ror #26
   29600:	andeq	r9, r2, r8, ror #26
   29604:	andeq	r9, r2, r0, asr ip
   29608:	andeq	r9, r2, r0, asr ip
   2960c:	andeq	r9, r2, r0, asr ip
   29610:	andeq	r9, r2, r0, asr ip
   29614:	andeq	r9, r2, r0, lsr #18
   29618:	andeq	r9, r2, r4, ror sp
   2961c:	andeq	r9, r2, r8, ror #26
   29620:	andeq	r9, r2, r8, ror #26
   29624:	andeq	r9, r2, r8, ror #26
   29628:	andeq	r9, r2, r8, ror #26
   2962c:	andeq	r9, r2, r8, ror #26
   29630:	andeq	r9, r2, r8, ror #26
   29634:	andeq	r9, r2, r8, ror #26
   29638:	andeq	r9, r2, r8, ror #26
   2963c:	andeq	r9, r2, r8, ror #26
   29640:	andeq	r9, r2, r8, ror #26
   29644:	andeq	r9, r2, r8, ror #26
   29648:	andeq	r9, r2, r8, ror #26
   2964c:	andeq	r9, r2, r8, ror #26
   29650:	andeq	r9, r2, r8, ror #26
   29654:	andeq	r9, r2, r8, ror #26
   29658:	andeq	r9, r2, r8, ror #26
   2965c:	andeq	r9, r2, r8, ror #26
   29660:	andeq	r9, r2, r8, ror #26
   29664:	andeq	r9, r2, r8, ror #26
   29668:	andeq	r9, r2, r8, ror #26
   2966c:	andeq	r9, r2, r8, ror #26
   29670:	andeq	r9, r2, r8, ror #26
   29674:	andeq	r9, r2, r8, ror #26
   29678:	andeq	r9, r2, r8, ror #26
   2967c:	andeq	r9, r2, r8, ror #26
   29680:	andeq	r9, r2, r8, ror #26
   29684:	andeq	r9, r2, r0, asr ip
   29688:	andeq	r9, r2, r0, ror fp
   2968c:	andeq	r9, r2, r8, ror #26
   29690:	andeq	r9, r2, r0, asr ip
   29694:	andeq	r9, r2, r8, ror #26
   29698:	andeq	r9, r2, r0, asr ip
   2969c:	andeq	r9, r2, r8, ror #26
   296a0:	andeq	r9, r2, r8, ror #26
   296a4:	andeq	r9, r2, r8, ror #26
   296a8:	andeq	r9, r2, r8, ror #26
   296ac:	andeq	r9, r2, r8, ror #26
   296b0:	andeq	r9, r2, r8, ror #26
   296b4:	andeq	r9, r2, r8, ror #26
   296b8:	andeq	r9, r2, r8, ror #26
   296bc:	andeq	r9, r2, r8, ror #26
   296c0:	andeq	r9, r2, r8, ror #26
   296c4:	andeq	r9, r2, r8, ror #26
   296c8:	andeq	r9, r2, r8, ror #26
   296cc:	andeq	r9, r2, r8, ror #26
   296d0:	andeq	r9, r2, r8, ror #26
   296d4:	andeq	r9, r2, r8, ror #26
   296d8:	andeq	r9, r2, r8, ror #26
   296dc:	andeq	r9, r2, r8, ror #26
   296e0:	andeq	r9, r2, r8, ror #26
   296e4:	andeq	r9, r2, r8, ror #26
   296e8:	andeq	r9, r2, r8, ror #26
   296ec:	andeq	r9, r2, r8, ror #26
   296f0:	andeq	r9, r2, r8, ror #26
   296f4:	andeq	r9, r2, r8, ror #26
   296f8:	andeq	r9, r2, r8, ror #26
   296fc:	andeq	r9, r2, r8, ror #26
   29700:	andeq	r9, r2, r8, ror #26
   29704:	andeq	r9, r2, r0, lsl #24
   29708:	andeq	r9, r2, r0, asr ip
   2970c:	andeq	r9, r2, r0, lsl #24
   29710:	andeq	r9, r2, r4, lsr ip
   29714:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29718:	tst	r0, #1
   2971c:	beq	29904 <__assert_fail@plt+0x18580>
   29720:	b	29724 <__assert_fail@plt+0x183a0>
   29724:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29728:	tst	r0, #1
   2972c:	beq	29734 <__assert_fail@plt+0x183b0>
   29730:	b	2a78c <__assert_fail@plt+0x19408>
   29734:	movw	r0, #1
   29738:	strb	r0, [fp, #-66]	; 0xffffffbe
   2973c:	ldr	r0, [fp, #8]
   29740:	cmp	r0, #2
   29744:	bne	297f8 <__assert_fail@plt+0x18474>
   29748:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2974c:	tst	r0, #1
   29750:	bne	297f8 <__assert_fail@plt+0x18474>
   29754:	b	29758 <__assert_fail@plt+0x183d4>
   29758:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2975c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29760:	cmp	r0, r1
   29764:	bcs	2977c <__assert_fail@plt+0x183f8>
   29768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2976c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29770:	add	r0, r0, r1
   29774:	movw	r1, #39	; 0x27
   29778:	strb	r1, [r0]
   2977c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29780:	add	r0, r0, #1
   29784:	str	r0, [fp, #-44]	; 0xffffffd4
   29788:	b	2978c <__assert_fail@plt+0x18408>
   2978c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29790:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29794:	cmp	r0, r1
   29798:	bcs	297b0 <__assert_fail@plt+0x1842c>
   2979c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   297a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   297a4:	add	r0, r0, r1
   297a8:	movw	r1, #36	; 0x24
   297ac:	strb	r1, [r0]
   297b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   297b4:	add	r0, r0, #1
   297b8:	str	r0, [fp, #-44]	; 0xffffffd4
   297bc:	b	297c0 <__assert_fail@plt+0x1843c>
   297c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   297c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   297c8:	cmp	r0, r1
   297cc:	bcs	297e4 <__assert_fail@plt+0x18460>
   297d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   297d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   297d8:	add	r0, r0, r1
   297dc:	movw	r1, #39	; 0x27
   297e0:	strb	r1, [r0]
   297e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   297e8:	add	r0, r0, #1
   297ec:	str	r0, [fp, #-44]	; 0xffffffd4
   297f0:	movw	r0, #1
   297f4:	strb	r0, [fp, #-60]	; 0xffffffc4
   297f8:	b	297fc <__assert_fail@plt+0x18478>
   297fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29800:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29804:	cmp	r0, r1
   29808:	bcs	29820 <__assert_fail@plt+0x1849c>
   2980c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29814:	add	r0, r0, r1
   29818:	movw	r1, #92	; 0x5c
   2981c:	strb	r1, [r0]
   29820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29824:	add	r0, r0, #1
   29828:	str	r0, [fp, #-44]	; 0xffffffd4
   2982c:	b	29830 <__assert_fail@plt+0x184ac>
   29830:	ldr	r0, [fp, #8]
   29834:	cmp	r0, #2
   29838:	beq	298f8 <__assert_fail@plt+0x18574>
   2983c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29840:	add	r0, r0, #1
   29844:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29848:	cmp	r0, r1
   2984c:	bcs	298f8 <__assert_fail@plt+0x18574>
   29850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29854:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29858:	add	r1, r1, #1
   2985c:	add	r0, r0, r1
   29860:	ldrb	r0, [r0]
   29864:	movw	r1, #48	; 0x30
   29868:	cmp	r1, r0
   2986c:	bgt	298f8 <__assert_fail@plt+0x18574>
   29870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29874:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29878:	add	r1, r1, #1
   2987c:	add	r0, r0, r1
   29880:	ldrb	r0, [r0]
   29884:	cmp	r0, #57	; 0x39
   29888:	bgt	298f8 <__assert_fail@plt+0x18574>
   2988c:	b	29890 <__assert_fail@plt+0x1850c>
   29890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29894:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29898:	cmp	r0, r1
   2989c:	bcs	298b4 <__assert_fail@plt+0x18530>
   298a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   298a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   298a8:	add	r0, r0, r1
   298ac:	movw	r1, #48	; 0x30
   298b0:	strb	r1, [r0]
   298b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   298b8:	add	r0, r0, #1
   298bc:	str	r0, [fp, #-44]	; 0xffffffd4
   298c0:	b	298c4 <__assert_fail@plt+0x18540>
   298c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   298c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   298cc:	cmp	r0, r1
   298d0:	bcs	298e8 <__assert_fail@plt+0x18564>
   298d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   298d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   298dc:	add	r0, r0, r1
   298e0:	movw	r1, #48	; 0x30
   298e4:	strb	r1, [r0]
   298e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   298ec:	add	r0, r0, #1
   298f0:	str	r0, [fp, #-44]	; 0xffffffd4
   298f4:	b	298f8 <__assert_fail@plt+0x18574>
   298f8:	movw	r0, #48	; 0x30
   298fc:	strb	r0, [fp, #-63]	; 0xffffffc1
   29900:	b	2991c <__assert_fail@plt+0x18598>
   29904:	ldr	r0, [fp, #12]
   29908:	and	r0, r0, #1
   2990c:	cmp	r0, #0
   29910:	beq	29918 <__assert_fail@plt+0x18594>
   29914:	b	2a5fc <__assert_fail@plt+0x19278>
   29918:	b	2991c <__assert_fail@plt+0x18598>
   2991c:	b	2a398 <__assert_fail@plt+0x19014>
   29920:	ldr	r0, [fp, #8]
   29924:	cmp	r0, #2
   29928:	str	r0, [sp, #40]	; 0x28
   2992c:	beq	29944 <__assert_fail@plt+0x185c0>
   29930:	b	29934 <__assert_fail@plt+0x185b0>
   29934:	ldr	r0, [sp, #40]	; 0x28
   29938:	cmp	r0, #5
   2993c:	beq	29958 <__assert_fail@plt+0x185d4>
   29940:	b	29b14 <__assert_fail@plt+0x18790>
   29944:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29948:	tst	r0, #1
   2994c:	beq	29954 <__assert_fail@plt+0x185d0>
   29950:	b	2a78c <__assert_fail@plt+0x19408>
   29954:	b	29b18 <__assert_fail@plt+0x18794>
   29958:	ldr	r0, [fp, #12]
   2995c:	and	r0, r0, #4
   29960:	cmp	r0, #0
   29964:	beq	29b10 <__assert_fail@plt+0x1878c>
   29968:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2996c:	add	r0, r0, #2
   29970:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29974:	cmp	r0, r1
   29978:	bcs	29b10 <__assert_fail@plt+0x1878c>
   2997c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29980:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29984:	add	r1, r1, #1
   29988:	add	r0, r0, r1
   2998c:	ldrb	r0, [r0]
   29990:	cmp	r0, #63	; 0x3f
   29994:	bne	29b10 <__assert_fail@plt+0x1878c>
   29998:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2999c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   299a0:	add	r0, r0, r1
   299a4:	ldrb	r0, [r0, #2]
   299a8:	mov	r1, r0
   299ac:	cmp	r0, #33	; 0x21
   299b0:	str	r1, [sp, #36]	; 0x24
   299b4:	beq	29a04 <__assert_fail@plt+0x18680>
   299b8:	b	299bc <__assert_fail@plt+0x18638>
   299bc:	ldr	r0, [sp, #36]	; 0x24
   299c0:	sub	r1, r0, #39	; 0x27
   299c4:	cmp	r1, #3
   299c8:	bcc	29a04 <__assert_fail@plt+0x18680>
   299cc:	b	299d0 <__assert_fail@plt+0x1864c>
   299d0:	ldr	r0, [sp, #36]	; 0x24
   299d4:	cmp	r0, #45	; 0x2d
   299d8:	beq	29a04 <__assert_fail@plt+0x18680>
   299dc:	b	299e0 <__assert_fail@plt+0x1865c>
   299e0:	ldr	r0, [sp, #36]	; 0x24
   299e4:	cmp	r0, #47	; 0x2f
   299e8:	beq	29a04 <__assert_fail@plt+0x18680>
   299ec:	b	299f0 <__assert_fail@plt+0x1866c>
   299f0:	ldr	r0, [sp, #36]	; 0x24
   299f4:	sub	r1, r0, #60	; 0x3c
   299f8:	cmp	r1, #2
   299fc:	bhi	29b08 <__assert_fail@plt+0x18784>
   29a00:	b	29a04 <__assert_fail@plt+0x18680>
   29a04:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29a08:	tst	r0, #1
   29a0c:	beq	29a14 <__assert_fail@plt+0x18690>
   29a10:	b	2a78c <__assert_fail@plt+0x19408>
   29a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29a18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29a1c:	add	r1, r1, #2
   29a20:	add	r0, r0, r1
   29a24:	ldrb	r0, [r0]
   29a28:	strb	r0, [fp, #-63]	; 0xffffffc1
   29a2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29a30:	add	r0, r0, #2
   29a34:	str	r0, [fp, #-40]	; 0xffffffd8
   29a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29a40:	cmp	r0, r1
   29a44:	bcs	29a5c <__assert_fail@plt+0x186d8>
   29a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29a4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29a50:	add	r0, r0, r1
   29a54:	movw	r1, #63	; 0x3f
   29a58:	strb	r1, [r0]
   29a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29a60:	add	r0, r0, #1
   29a64:	str	r0, [fp, #-44]	; 0xffffffd4
   29a68:	b	29a6c <__assert_fail@plt+0x186e8>
   29a6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29a74:	cmp	r0, r1
   29a78:	bcs	29a90 <__assert_fail@plt+0x1870c>
   29a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29a80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29a84:	add	r0, r0, r1
   29a88:	movw	r1, #34	; 0x22
   29a8c:	strb	r1, [r0]
   29a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29a94:	add	r0, r0, #1
   29a98:	str	r0, [fp, #-44]	; 0xffffffd4
   29a9c:	b	29aa0 <__assert_fail@plt+0x1871c>
   29aa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29aa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29aa8:	cmp	r0, r1
   29aac:	bcs	29ac4 <__assert_fail@plt+0x18740>
   29ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29ab4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29ab8:	add	r0, r0, r1
   29abc:	movw	r1, #34	; 0x22
   29ac0:	strb	r1, [r0]
   29ac4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29ac8:	add	r0, r0, #1
   29acc:	str	r0, [fp, #-44]	; 0xffffffd4
   29ad0:	b	29ad4 <__assert_fail@plt+0x18750>
   29ad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29ad8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29adc:	cmp	r0, r1
   29ae0:	bcs	29af8 <__assert_fail@plt+0x18774>
   29ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29ae8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29aec:	add	r0, r0, r1
   29af0:	movw	r1, #63	; 0x3f
   29af4:	strb	r1, [r0]
   29af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29afc:	add	r0, r0, #1
   29b00:	str	r0, [fp, #-44]	; 0xffffffd4
   29b04:	b	29b0c <__assert_fail@plt+0x18788>
   29b08:	b	29b0c <__assert_fail@plt+0x18788>
   29b0c:	b	29b10 <__assert_fail@plt+0x1878c>
   29b10:	b	29b18 <__assert_fail@plt+0x18794>
   29b14:	b	29b18 <__assert_fail@plt+0x18794>
   29b18:	b	2a398 <__assert_fail@plt+0x19014>
   29b1c:	movw	r0, #97	; 0x61
   29b20:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b24:	b	29be4 <__assert_fail@plt+0x18860>
   29b28:	movw	r0, #98	; 0x62
   29b2c:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b30:	b	29be4 <__assert_fail@plt+0x18860>
   29b34:	movw	r0, #102	; 0x66
   29b38:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b3c:	b	29be4 <__assert_fail@plt+0x18860>
   29b40:	movw	r0, #110	; 0x6e
   29b44:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b48:	b	29bc4 <__assert_fail@plt+0x18840>
   29b4c:	movw	r0, #114	; 0x72
   29b50:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b54:	b	29bc4 <__assert_fail@plt+0x18840>
   29b58:	movw	r0, #116	; 0x74
   29b5c:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b60:	b	29bc4 <__assert_fail@plt+0x18840>
   29b64:	movw	r0, #118	; 0x76
   29b68:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b6c:	b	29be4 <__assert_fail@plt+0x18860>
   29b70:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   29b74:	strb	r0, [fp, #-64]	; 0xffffffc0
   29b78:	ldr	r0, [fp, #8]
   29b7c:	cmp	r0, #2
   29b80:	bne	29b98 <__assert_fail@plt+0x18814>
   29b84:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29b88:	tst	r0, #1
   29b8c:	beq	29b94 <__assert_fail@plt+0x18810>
   29b90:	b	2a78c <__assert_fail@plt+0x19408>
   29b94:	b	2a520 <__assert_fail@plt+0x1919c>
   29b98:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29b9c:	tst	r0, #1
   29ba0:	beq	29bc0 <__assert_fail@plt+0x1883c>
   29ba4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29ba8:	tst	r0, #1
   29bac:	beq	29bc0 <__assert_fail@plt+0x1883c>
   29bb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29bb4:	cmp	r0, #0
   29bb8:	beq	29bc0 <__assert_fail@plt+0x1883c>
   29bbc:	b	2a520 <__assert_fail@plt+0x1919c>
   29bc0:	b	29bc4 <__assert_fail@plt+0x18840>
   29bc4:	ldr	r0, [fp, #8]
   29bc8:	cmp	r0, #2
   29bcc:	bne	29be0 <__assert_fail@plt+0x1885c>
   29bd0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29bd4:	tst	r0, #1
   29bd8:	beq	29be0 <__assert_fail@plt+0x1885c>
   29bdc:	b	2a78c <__assert_fail@plt+0x19408>
   29be0:	b	29be4 <__assert_fail@plt+0x18860>
   29be4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   29be8:	tst	r0, #1
   29bec:	beq	29bfc <__assert_fail@plt+0x18878>
   29bf0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   29bf4:	strb	r0, [fp, #-63]	; 0xffffffc1
   29bf8:	b	2a40c <__assert_fail@plt+0x19088>
   29bfc:	b	2a398 <__assert_fail@plt+0x19014>
   29c00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29c04:	cmn	r0, #1
   29c08:	bne	29c20 <__assert_fail@plt+0x1889c>
   29c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29c10:	ldrb	r0, [r0, #1]
   29c14:	cmp	r0, #0
   29c18:	beq	29c30 <__assert_fail@plt+0x188ac>
   29c1c:	b	29c2c <__assert_fail@plt+0x188a8>
   29c20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29c24:	cmp	r0, #1
   29c28:	beq	29c30 <__assert_fail@plt+0x188ac>
   29c2c:	b	2a398 <__assert_fail@plt+0x19014>
   29c30:	b	29c34 <__assert_fail@plt+0x188b0>
   29c34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29c38:	cmp	r0, #0
   29c3c:	beq	29c44 <__assert_fail@plt+0x188c0>
   29c40:	b	2a398 <__assert_fail@plt+0x19014>
   29c44:	b	29c48 <__assert_fail@plt+0x188c4>
   29c48:	movw	r0, #1
   29c4c:	strb	r0, [fp, #-67]	; 0xffffffbd
   29c50:	ldr	r0, [fp, #8]
   29c54:	cmp	r0, #2
   29c58:	bne	29c6c <__assert_fail@plt+0x188e8>
   29c5c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29c60:	tst	r0, #1
   29c64:	beq	29c6c <__assert_fail@plt+0x188e8>
   29c68:	b	2a78c <__assert_fail@plt+0x19408>
   29c6c:	b	2a398 <__assert_fail@plt+0x19014>
   29c70:	movw	r0, #1
   29c74:	strb	r0, [fp, #-61]	; 0xffffffc3
   29c78:	strb	r0, [fp, #-67]	; 0xffffffbd
   29c7c:	ldr	r0, [fp, #8]
   29c80:	cmp	r0, #2
   29c84:	bne	29d64 <__assert_fail@plt+0x189e0>
   29c88:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29c8c:	tst	r0, #1
   29c90:	beq	29c98 <__assert_fail@plt+0x18914>
   29c94:	b	2a78c <__assert_fail@plt+0x19408>
   29c98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29c9c:	cmp	r0, #0
   29ca0:	beq	29cc0 <__assert_fail@plt+0x1893c>
   29ca4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   29ca8:	cmp	r0, #0
   29cac:	bne	29cc0 <__assert_fail@plt+0x1893c>
   29cb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29cb4:	str	r0, [fp, #-48]	; 0xffffffd0
   29cb8:	movw	r0, #0
   29cbc:	str	r0, [fp, #-28]	; 0xffffffe4
   29cc0:	b	29cc4 <__assert_fail@plt+0x18940>
   29cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29ccc:	cmp	r0, r1
   29cd0:	bcs	29ce8 <__assert_fail@plt+0x18964>
   29cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29cd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29cdc:	add	r0, r0, r1
   29ce0:	movw	r1, #39	; 0x27
   29ce4:	strb	r1, [r0]
   29ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29cec:	add	r0, r0, #1
   29cf0:	str	r0, [fp, #-44]	; 0xffffffd4
   29cf4:	b	29cf8 <__assert_fail@plt+0x18974>
   29cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29cfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29d00:	cmp	r0, r1
   29d04:	bcs	29d1c <__assert_fail@plt+0x18998>
   29d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29d0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29d10:	add	r0, r0, r1
   29d14:	movw	r1, #92	; 0x5c
   29d18:	strb	r1, [r0]
   29d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d20:	add	r0, r0, #1
   29d24:	str	r0, [fp, #-44]	; 0xffffffd4
   29d28:	b	29d2c <__assert_fail@plt+0x189a8>
   29d2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29d34:	cmp	r0, r1
   29d38:	bcs	29d50 <__assert_fail@plt+0x189cc>
   29d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29d40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29d44:	add	r0, r0, r1
   29d48:	movw	r1, #39	; 0x27
   29d4c:	strb	r1, [r0]
   29d50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d54:	add	r0, r0, #1
   29d58:	str	r0, [fp, #-44]	; 0xffffffd4
   29d5c:	movw	r0, #0
   29d60:	strb	r0, [fp, #-60]	; 0xffffffc4
   29d64:	b	2a398 <__assert_fail@plt+0x19014>
   29d68:	movw	r0, #1
   29d6c:	strb	r0, [fp, #-67]	; 0xffffffbd
   29d70:	b	2a398 <__assert_fail@plt+0x19014>
   29d74:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   29d78:	tst	r0, #1
   29d7c:	beq	29dc0 <__assert_fail@plt+0x18a3c>
   29d80:	mov	r0, #1
   29d84:	str	r0, [fp, #-72]	; 0xffffffb8
   29d88:	bl	11240 <__ctype_b_loc@plt>
   29d8c:	ldr	r0, [r0]
   29d90:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   29d94:	mov	r1, lr
   29d98:	add	r0, r0, lr, lsl #1
   29d9c:	ldrh	r0, [r0]
   29da0:	and	r0, r0, #16384	; 0x4000
   29da4:	cmp	r0, #0
   29da8:	movw	r0, #0
   29dac:	movne	r0, #1
   29db0:	and	r0, r0, #1
   29db4:	strb	r0, [fp, #-73]	; 0xffffffb7
   29db8:	str	r1, [sp, #32]
   29dbc:	b	2a04c <__assert_fail@plt+0x18cc8>
   29dc0:	sub	r0, fp, #84	; 0x54
   29dc4:	movw	r1, #0
   29dc8:	and	r1, r1, #255	; 0xff
   29dcc:	movw	r2, #8
   29dd0:	bl	112b8 <memset@plt>
   29dd4:	movw	r0, #0
   29dd8:	str	r0, [fp, #-72]	; 0xffffffb8
   29ddc:	movw	r0, #1
   29de0:	strb	r0, [fp, #-73]	; 0xffffffb7
   29de4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29de8:	cmn	r0, #1
   29dec:	bne	29dfc <__assert_fail@plt+0x18a78>
   29df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29df4:	bl	11270 <strlen@plt>
   29df8:	str	r0, [fp, #-36]	; 0xffffffdc
   29dfc:	b	29e00 <__assert_fail@plt+0x18a7c>
   29e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29e08:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29e0c:	add	r1, r1, r2
   29e10:	add	r1, r0, r1
   29e14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29e18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29e1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   29e20:	add	r2, r2, r3
   29e24:	sub	r2, r0, r2
   29e28:	sub	r0, fp, #88	; 0x58
   29e2c:	sub	r3, fp, #84	; 0x54
   29e30:	bl	30120 <__assert_fail@plt+0x1ed9c>
   29e34:	str	r0, [sp, #92]	; 0x5c
   29e38:	ldr	r0, [sp, #92]	; 0x5c
   29e3c:	cmp	r0, #0
   29e40:	bne	29e48 <__assert_fail@plt+0x18ac4>
   29e44:	b	2a048 <__assert_fail@plt+0x18cc4>
   29e48:	ldr	r0, [sp, #92]	; 0x5c
   29e4c:	cmn	r0, #1
   29e50:	bne	29e60 <__assert_fail@plt+0x18adc>
   29e54:	movw	r0, #0
   29e58:	strb	r0, [fp, #-73]	; 0xffffffb7
   29e5c:	b	2a048 <__assert_fail@plt+0x18cc4>
   29e60:	ldr	r0, [sp, #92]	; 0x5c
   29e64:	cmn	r0, #2
   29e68:	bne	29edc <__assert_fail@plt+0x18b58>
   29e6c:	movw	r0, #0
   29e70:	strb	r0, [fp, #-73]	; 0xffffffb7
   29e74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29e78:	ldr	r1, [fp, #-72]	; 0xffffffb8
   29e7c:	add	r0, r0, r1
   29e80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29e84:	cmp	r0, r1
   29e88:	movw	r0, #0
   29e8c:	str	r0, [sp, #28]
   29e90:	bcs	29ebc <__assert_fail@plt+0x18b38>
   29e94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29e9c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29ea0:	add	r1, r1, r2
   29ea4:	add	r0, r0, r1
   29ea8:	ldrb	r0, [r0]
   29eac:	cmp	r0, #0
   29eb0:	movw	r0, #0
   29eb4:	movne	r0, #1
   29eb8:	str	r0, [sp, #28]
   29ebc:	ldr	r0, [sp, #28]
   29ec0:	tst	r0, #1
   29ec4:	beq	29ed8 <__assert_fail@plt+0x18b54>
   29ec8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   29ecc:	add	r0, r0, #1
   29ed0:	str	r0, [fp, #-72]	; 0xffffffb8
   29ed4:	b	29e74 <__assert_fail@plt+0x18af0>
   29ed8:	b	2a048 <__assert_fail@plt+0x18cc4>
   29edc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   29ee0:	tst	r0, #1
   29ee4:	beq	29ff0 <__assert_fail@plt+0x18c6c>
   29ee8:	ldr	r0, [fp, #8]
   29eec:	cmp	r0, #2
   29ef0:	bne	29ff0 <__assert_fail@plt+0x18c6c>
   29ef4:	movw	r0, #1
   29ef8:	str	r0, [sp, #88]	; 0x58
   29efc:	ldr	r0, [sp, #88]	; 0x58
   29f00:	ldr	r1, [sp, #92]	; 0x5c
   29f04:	cmp	r0, r1
   29f08:	bcs	29fec <__assert_fail@plt+0x18c68>
   29f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29f10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29f14:	ldr	r2, [fp, #-72]	; 0xffffffb8
   29f18:	add	r1, r1, r2
   29f1c:	ldr	r2, [sp, #88]	; 0x58
   29f20:	add	r1, r1, r2
   29f24:	ldrb	r0, [r0, r1]
   29f28:	sub	r0, r0, #91	; 0x5b
   29f2c:	cmp	r0, #33	; 0x21
   29f30:	str	r0, [sp, #24]
   29f34:	bhi	29fd4 <__assert_fail@plt+0x18c50>
   29f38:	add	r0, pc, #8
   29f3c:	ldr	r1, [sp, #24]
   29f40:	ldr	r0, [r0, r1, lsl #2]
   29f44:	mov	pc, r0
   29f48:	ldrdeq	r9, [r2], -r0
   29f4c:	ldrdeq	r9, [r2], -r0
   29f50:	ldrdeq	r9, [r2], -r4
   29f54:	ldrdeq	r9, [r2], -r0
   29f58:	ldrdeq	r9, [r2], -r4
   29f5c:	ldrdeq	r9, [r2], -r0
   29f60:	ldrdeq	r9, [r2], -r4
   29f64:	ldrdeq	r9, [r2], -r4
   29f68:	ldrdeq	r9, [r2], -r4
   29f6c:	ldrdeq	r9, [r2], -r4
   29f70:	ldrdeq	r9, [r2], -r4
   29f74:	ldrdeq	r9, [r2], -r4
   29f78:	ldrdeq	r9, [r2], -r4
   29f7c:	ldrdeq	r9, [r2], -r4
   29f80:	ldrdeq	r9, [r2], -r4
   29f84:	ldrdeq	r9, [r2], -r4
   29f88:	ldrdeq	r9, [r2], -r4
   29f8c:	ldrdeq	r9, [r2], -r4
   29f90:	ldrdeq	r9, [r2], -r4
   29f94:	ldrdeq	r9, [r2], -r4
   29f98:	ldrdeq	r9, [r2], -r4
   29f9c:	ldrdeq	r9, [r2], -r4
   29fa0:	ldrdeq	r9, [r2], -r4
   29fa4:	ldrdeq	r9, [r2], -r4
   29fa8:	ldrdeq	r9, [r2], -r4
   29fac:	ldrdeq	r9, [r2], -r4
   29fb0:	ldrdeq	r9, [r2], -r4
   29fb4:	ldrdeq	r9, [r2], -r4
   29fb8:	ldrdeq	r9, [r2], -r4
   29fbc:	ldrdeq	r9, [r2], -r4
   29fc0:	ldrdeq	r9, [r2], -r4
   29fc4:	ldrdeq	r9, [r2], -r4
   29fc8:	ldrdeq	r9, [r2], -r4
   29fcc:	ldrdeq	r9, [r2], -r0
   29fd0:	b	2a78c <__assert_fail@plt+0x19408>
   29fd4:	b	29fd8 <__assert_fail@plt+0x18c54>
   29fd8:	b	29fdc <__assert_fail@plt+0x18c58>
   29fdc:	ldr	r0, [sp, #88]	; 0x58
   29fe0:	add	r0, r0, #1
   29fe4:	str	r0, [sp, #88]	; 0x58
   29fe8:	b	29efc <__assert_fail@plt+0x18b78>
   29fec:	b	29ff0 <__assert_fail@plt+0x18c6c>
   29ff0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29ff4:	bl	11198 <iswprint@plt>
   29ff8:	cmp	r0, #0
   29ffc:	bne	2a008 <__assert_fail@plt+0x18c84>
   2a000:	movw	r0, #0
   2a004:	strb	r0, [fp, #-73]	; 0xffffffb7
   2a008:	ldr	r0, [sp, #92]	; 0x5c
   2a00c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2a010:	add	r0, r1, r0
   2a014:	str	r0, [fp, #-72]	; 0xffffffb8
   2a018:	b	2a01c <__assert_fail@plt+0x18c98>
   2a01c:	b	2a020 <__assert_fail@plt+0x18c9c>
   2a020:	b	2a024 <__assert_fail@plt+0x18ca0>
   2a024:	sub	r0, fp, #84	; 0x54
   2a028:	bl	11138 <mbsinit@plt>
   2a02c:	cmp	r0, #0
   2a030:	movw	r0, #0
   2a034:	movne	r0, #1
   2a038:	mvn	lr, #0
   2a03c:	eor	r0, r0, lr
   2a040:	tst	r0, #1
   2a044:	bne	29e00 <__assert_fail@plt+0x18a7c>
   2a048:	b	2a04c <__assert_fail@plt+0x18cc8>
   2a04c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   2a050:	and	r0, r0, #1
   2a054:	strb	r0, [fp, #-67]	; 0xffffffbd
   2a058:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2a05c:	movw	r1, #1
   2a060:	cmp	r1, r0
   2a064:	bcc	2a080 <__assert_fail@plt+0x18cfc>
   2a068:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   2a06c:	tst	r0, #1
   2a070:	beq	2a394 <__assert_fail@plt+0x19010>
   2a074:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   2a078:	tst	r0, #1
   2a07c:	bne	2a394 <__assert_fail@plt+0x19010>
   2a080:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a084:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2a088:	add	r0, r0, r1
   2a08c:	str	r0, [sp, #84]	; 0x54
   2a090:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   2a094:	tst	r0, #1
   2a098:	beq	2a248 <__assert_fail@plt+0x18ec4>
   2a09c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   2a0a0:	tst	r0, #1
   2a0a4:	bne	2a248 <__assert_fail@plt+0x18ec4>
   2a0a8:	b	2a0ac <__assert_fail@plt+0x18d28>
   2a0ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a0b0:	tst	r0, #1
   2a0b4:	beq	2a0bc <__assert_fail@plt+0x18d38>
   2a0b8:	b	2a78c <__assert_fail@plt+0x19408>
   2a0bc:	movw	r0, #1
   2a0c0:	strb	r0, [fp, #-66]	; 0xffffffbe
   2a0c4:	ldr	r0, [fp, #8]
   2a0c8:	cmp	r0, #2
   2a0cc:	bne	2a180 <__assert_fail@plt+0x18dfc>
   2a0d0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2a0d4:	tst	r0, #1
   2a0d8:	bne	2a180 <__assert_fail@plt+0x18dfc>
   2a0dc:	b	2a0e0 <__assert_fail@plt+0x18d5c>
   2a0e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a0e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a0e8:	cmp	r0, r1
   2a0ec:	bcs	2a104 <__assert_fail@plt+0x18d80>
   2a0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a0f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a0f8:	add	r0, r0, r1
   2a0fc:	movw	r1, #39	; 0x27
   2a100:	strb	r1, [r0]
   2a104:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a108:	add	r0, r0, #1
   2a10c:	str	r0, [fp, #-44]	; 0xffffffd4
   2a110:	b	2a114 <__assert_fail@plt+0x18d90>
   2a114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a11c:	cmp	r0, r1
   2a120:	bcs	2a138 <__assert_fail@plt+0x18db4>
   2a124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a12c:	add	r0, r0, r1
   2a130:	movw	r1, #36	; 0x24
   2a134:	strb	r1, [r0]
   2a138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a13c:	add	r0, r0, #1
   2a140:	str	r0, [fp, #-44]	; 0xffffffd4
   2a144:	b	2a148 <__assert_fail@plt+0x18dc4>
   2a148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a14c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a150:	cmp	r0, r1
   2a154:	bcs	2a16c <__assert_fail@plt+0x18de8>
   2a158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a15c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a160:	add	r0, r0, r1
   2a164:	movw	r1, #39	; 0x27
   2a168:	strb	r1, [r0]
   2a16c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a170:	add	r0, r0, #1
   2a174:	str	r0, [fp, #-44]	; 0xffffffd4
   2a178:	movw	r0, #1
   2a17c:	strb	r0, [fp, #-60]	; 0xffffffc4
   2a180:	b	2a184 <__assert_fail@plt+0x18e00>
   2a184:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a188:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a18c:	cmp	r0, r1
   2a190:	bcs	2a1a8 <__assert_fail@plt+0x18e24>
   2a194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a198:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a19c:	add	r0, r0, r1
   2a1a0:	movw	r1, #92	; 0x5c
   2a1a4:	strb	r1, [r0]
   2a1a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a1ac:	add	r0, r0, #1
   2a1b0:	str	r0, [fp, #-44]	; 0xffffffd4
   2a1b4:	b	2a1b8 <__assert_fail@plt+0x18e34>
   2a1b8:	b	2a1bc <__assert_fail@plt+0x18e38>
   2a1bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a1c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a1c4:	cmp	r0, r1
   2a1c8:	bcs	2a1e8 <__assert_fail@plt+0x18e64>
   2a1cc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2a1d0:	asr	r0, r0, #6
   2a1d4:	add	r0, r0, #48	; 0x30
   2a1d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a1dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a1e0:	add	r1, r1, r2
   2a1e4:	strb	r0, [r1]
   2a1e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a1ec:	add	r0, r0, #1
   2a1f0:	str	r0, [fp, #-44]	; 0xffffffd4
   2a1f4:	b	2a1f8 <__assert_fail@plt+0x18e74>
   2a1f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a1fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a200:	cmp	r0, r1
   2a204:	bcs	2a228 <__assert_fail@plt+0x18ea4>
   2a208:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2a20c:	asr	r0, r0, #3
   2a210:	and	r0, r0, #7
   2a214:	add	r0, r0, #48	; 0x30
   2a218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a21c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a220:	add	r1, r1, r2
   2a224:	strb	r0, [r1]
   2a228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a22c:	add	r0, r0, #1
   2a230:	str	r0, [fp, #-44]	; 0xffffffd4
   2a234:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2a238:	and	r0, r0, #7
   2a23c:	add	r0, r0, #48	; 0x30
   2a240:	strb	r0, [fp, #-63]	; 0xffffffc1
   2a244:	b	2a294 <__assert_fail@plt+0x18f10>
   2a248:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   2a24c:	tst	r0, #1
   2a250:	beq	2a290 <__assert_fail@plt+0x18f0c>
   2a254:	b	2a258 <__assert_fail@plt+0x18ed4>
   2a258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a25c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a260:	cmp	r0, r1
   2a264:	bcs	2a27c <__assert_fail@plt+0x18ef8>
   2a268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a26c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a270:	add	r0, r0, r1
   2a274:	movw	r1, #92	; 0x5c
   2a278:	strb	r1, [r0]
   2a27c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a280:	add	r0, r0, #1
   2a284:	str	r0, [fp, #-44]	; 0xffffffd4
   2a288:	movw	r0, #0
   2a28c:	strb	r0, [fp, #-65]	; 0xffffffbf
   2a290:	b	2a294 <__assert_fail@plt+0x18f10>
   2a294:	ldr	r0, [sp, #84]	; 0x54
   2a298:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a29c:	add	r1, r1, #1
   2a2a0:	cmp	r0, r1
   2a2a4:	bhi	2a2ac <__assert_fail@plt+0x18f28>
   2a2a8:	b	2a390 <__assert_fail@plt+0x1900c>
   2a2ac:	b	2a2b0 <__assert_fail@plt+0x18f2c>
   2a2b0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2a2b4:	tst	r0, #1
   2a2b8:	beq	2a338 <__assert_fail@plt+0x18fb4>
   2a2bc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   2a2c0:	tst	r0, #1
   2a2c4:	bne	2a338 <__assert_fail@plt+0x18fb4>
   2a2c8:	b	2a2cc <__assert_fail@plt+0x18f48>
   2a2cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a2d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a2d4:	cmp	r0, r1
   2a2d8:	bcs	2a2f0 <__assert_fail@plt+0x18f6c>
   2a2dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a2e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a2e4:	add	r0, r0, r1
   2a2e8:	movw	r1, #39	; 0x27
   2a2ec:	strb	r1, [r0]
   2a2f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a2f4:	add	r0, r0, #1
   2a2f8:	str	r0, [fp, #-44]	; 0xffffffd4
   2a2fc:	b	2a300 <__assert_fail@plt+0x18f7c>
   2a300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a304:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a308:	cmp	r0, r1
   2a30c:	bcs	2a324 <__assert_fail@plt+0x18fa0>
   2a310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a314:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a318:	add	r0, r0, r1
   2a31c:	movw	r1, #39	; 0x27
   2a320:	strb	r1, [r0]
   2a324:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a328:	add	r0, r0, #1
   2a32c:	str	r0, [fp, #-44]	; 0xffffffd4
   2a330:	movw	r0, #0
   2a334:	strb	r0, [fp, #-60]	; 0xffffffc4
   2a338:	b	2a33c <__assert_fail@plt+0x18fb8>
   2a33c:	b	2a340 <__assert_fail@plt+0x18fbc>
   2a340:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a344:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a348:	cmp	r0, r1
   2a34c:	bcs	2a364 <__assert_fail@plt+0x18fe0>
   2a350:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2a354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a358:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a35c:	add	r1, r1, r2
   2a360:	strb	r0, [r1]
   2a364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a368:	add	r0, r0, #1
   2a36c:	str	r0, [fp, #-44]	; 0xffffffd4
   2a370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a374:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a378:	add	r1, r1, #1
   2a37c:	str	r1, [fp, #-40]	; 0xffffffd8
   2a380:	add	r0, r0, r1
   2a384:	ldrb	r0, [r0]
   2a388:	strb	r0, [fp, #-63]	; 0xffffffc1
   2a38c:	b	2a090 <__assert_fail@plt+0x18d0c>
   2a390:	b	2a520 <__assert_fail@plt+0x1919c>
   2a394:	b	2a398 <__assert_fail@plt+0x19014>
   2a398:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   2a39c:	tst	r0, #1
   2a3a0:	beq	2a3b0 <__assert_fail@plt+0x1902c>
   2a3a4:	ldr	r0, [fp, #8]
   2a3a8:	cmp	r0, #2
   2a3ac:	bne	2a3bc <__assert_fail@plt+0x19038>
   2a3b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a3b4:	tst	r0, #1
   2a3b8:	beq	2a3f8 <__assert_fail@plt+0x19074>
   2a3bc:	ldr	r0, [fp, #16]
   2a3c0:	movw	r1, #0
   2a3c4:	cmp	r0, r1
   2a3c8:	beq	2a3f8 <__assert_fail@plt+0x19074>
   2a3cc:	ldr	r0, [fp, #16]
   2a3d0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   2a3d4:	lsr	r1, r1, #5
   2a3d8:	add	r0, r0, r1, lsl #2
   2a3dc:	ldr	r0, [r0]
   2a3e0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   2a3e4:	and	r1, r1, #31
   2a3e8:	lsr	r0, r0, r1
   2a3ec:	and	r0, r0, #1
   2a3f0:	cmp	r0, #0
   2a3f4:	bne	2a408 <__assert_fail@plt+0x19084>
   2a3f8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   2a3fc:	tst	r0, #1
   2a400:	bne	2a408 <__assert_fail@plt+0x19084>
   2a404:	b	2a520 <__assert_fail@plt+0x1919c>
   2a408:	b	2a40c <__assert_fail@plt+0x19088>
   2a40c:	b	2a410 <__assert_fail@plt+0x1908c>
   2a410:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a414:	tst	r0, #1
   2a418:	beq	2a420 <__assert_fail@plt+0x1909c>
   2a41c:	b	2a78c <__assert_fail@plt+0x19408>
   2a420:	movw	r0, #1
   2a424:	strb	r0, [fp, #-66]	; 0xffffffbe
   2a428:	ldr	r0, [fp, #8]
   2a42c:	cmp	r0, #2
   2a430:	bne	2a4e4 <__assert_fail@plt+0x19160>
   2a434:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2a438:	tst	r0, #1
   2a43c:	bne	2a4e4 <__assert_fail@plt+0x19160>
   2a440:	b	2a444 <__assert_fail@plt+0x190c0>
   2a444:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a44c:	cmp	r0, r1
   2a450:	bcs	2a468 <__assert_fail@plt+0x190e4>
   2a454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a458:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a45c:	add	r0, r0, r1
   2a460:	movw	r1, #39	; 0x27
   2a464:	strb	r1, [r0]
   2a468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a46c:	add	r0, r0, #1
   2a470:	str	r0, [fp, #-44]	; 0xffffffd4
   2a474:	b	2a478 <__assert_fail@plt+0x190f4>
   2a478:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a47c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a480:	cmp	r0, r1
   2a484:	bcs	2a49c <__assert_fail@plt+0x19118>
   2a488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a48c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a490:	add	r0, r0, r1
   2a494:	movw	r1, #36	; 0x24
   2a498:	strb	r1, [r0]
   2a49c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a4a0:	add	r0, r0, #1
   2a4a4:	str	r0, [fp, #-44]	; 0xffffffd4
   2a4a8:	b	2a4ac <__assert_fail@plt+0x19128>
   2a4ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a4b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a4b4:	cmp	r0, r1
   2a4b8:	bcs	2a4d0 <__assert_fail@plt+0x1914c>
   2a4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a4c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a4c4:	add	r0, r0, r1
   2a4c8:	movw	r1, #39	; 0x27
   2a4cc:	strb	r1, [r0]
   2a4d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a4d4:	add	r0, r0, #1
   2a4d8:	str	r0, [fp, #-44]	; 0xffffffd4
   2a4dc:	movw	r0, #1
   2a4e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   2a4e4:	b	2a4e8 <__assert_fail@plt+0x19164>
   2a4e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a4ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a4f0:	cmp	r0, r1
   2a4f4:	bcs	2a50c <__assert_fail@plt+0x19188>
   2a4f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a4fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a500:	add	r0, r0, r1
   2a504:	movw	r1, #92	; 0x5c
   2a508:	strb	r1, [r0]
   2a50c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a510:	add	r0, r0, #1
   2a514:	str	r0, [fp, #-44]	; 0xffffffd4
   2a518:	b	2a51c <__assert_fail@plt+0x19198>
   2a51c:	b	2a520 <__assert_fail@plt+0x1919c>
   2a520:	b	2a524 <__assert_fail@plt+0x191a0>
   2a524:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   2a528:	tst	r0, #1
   2a52c:	beq	2a5ac <__assert_fail@plt+0x19228>
   2a530:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   2a534:	tst	r0, #1
   2a538:	bne	2a5ac <__assert_fail@plt+0x19228>
   2a53c:	b	2a540 <__assert_fail@plt+0x191bc>
   2a540:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a544:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a548:	cmp	r0, r1
   2a54c:	bcs	2a564 <__assert_fail@plt+0x191e0>
   2a550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a554:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a558:	add	r0, r0, r1
   2a55c:	movw	r1, #39	; 0x27
   2a560:	strb	r1, [r0]
   2a564:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a568:	add	r0, r0, #1
   2a56c:	str	r0, [fp, #-44]	; 0xffffffd4
   2a570:	b	2a574 <__assert_fail@plt+0x191f0>
   2a574:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a57c:	cmp	r0, r1
   2a580:	bcs	2a598 <__assert_fail@plt+0x19214>
   2a584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a588:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a58c:	add	r0, r0, r1
   2a590:	movw	r1, #39	; 0x27
   2a594:	strb	r1, [r0]
   2a598:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a59c:	add	r0, r0, #1
   2a5a0:	str	r0, [fp, #-44]	; 0xffffffd4
   2a5a4:	movw	r0, #0
   2a5a8:	strb	r0, [fp, #-60]	; 0xffffffc4
   2a5ac:	b	2a5b0 <__assert_fail@plt+0x1922c>
   2a5b0:	b	2a5b4 <__assert_fail@plt+0x19230>
   2a5b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a5b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a5bc:	cmp	r0, r1
   2a5c0:	bcs	2a5d8 <__assert_fail@plt+0x19254>
   2a5c4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   2a5c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a5cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a5d0:	add	r1, r1, r2
   2a5d4:	strb	r0, [r1]
   2a5d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a5dc:	add	r0, r0, #1
   2a5e0:	str	r0, [fp, #-44]	; 0xffffffd4
   2a5e4:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   2a5e8:	tst	r0, #1
   2a5ec:	bne	2a5f8 <__assert_fail@plt+0x19274>
   2a5f0:	movw	r0, #0
   2a5f4:	strb	r0, [fp, #-62]	; 0xffffffc2
   2a5f8:	b	2a5fc <__assert_fail@plt+0x19278>
   2a5fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a600:	add	r0, r0, #1
   2a604:	str	r0, [fp, #-40]	; 0xffffffd8
   2a608:	b	293b0 <__assert_fail@plt+0x1802c>
   2a60c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a610:	cmp	r0, #0
   2a614:	bne	2a634 <__assert_fail@plt+0x192b0>
   2a618:	ldr	r0, [fp, #8]
   2a61c:	cmp	r0, #2
   2a620:	bne	2a634 <__assert_fail@plt+0x192b0>
   2a624:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a628:	tst	r0, #1
   2a62c:	beq	2a634 <__assert_fail@plt+0x192b0>
   2a630:	b	2a78c <__assert_fail@plt+0x19408>
   2a634:	ldr	r0, [fp, #8]
   2a638:	cmp	r0, #2
   2a63c:	bne	2a6dc <__assert_fail@plt+0x19358>
   2a640:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a644:	tst	r0, #1
   2a648:	bne	2a6dc <__assert_fail@plt+0x19358>
   2a64c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   2a650:	tst	r0, #1
   2a654:	beq	2a6dc <__assert_fail@plt+0x19358>
   2a658:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   2a65c:	tst	r0, #1
   2a660:	beq	2a6a8 <__assert_fail@plt+0x19324>
   2a664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a668:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a66c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a670:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a674:	ldr	ip, [fp, #12]
   2a678:	ldr	lr, [fp, #16]
   2a67c:	ldr	r4, [fp, #20]
   2a680:	ldr	r5, [fp, #24]
   2a684:	movw	r6, #5
   2a688:	str	r6, [sp]
   2a68c:	str	ip, [sp, #4]
   2a690:	str	lr, [sp, #8]
   2a694:	str	r4, [sp, #12]
   2a698:	str	r5, [sp, #16]
   2a69c:	bl	290c8 <__assert_fail@plt+0x17d44>
   2a6a0:	str	r0, [fp, #-20]	; 0xffffffec
   2a6a4:	b	2a7f4 <__assert_fail@plt+0x19470>
   2a6a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a6ac:	cmp	r0, #0
   2a6b0:	bne	2a6d4 <__assert_fail@plt+0x19350>
   2a6b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a6b8:	cmp	r0, #0
   2a6bc:	beq	2a6d4 <__assert_fail@plt+0x19350>
   2a6c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a6c4:	str	r0, [fp, #-28]	; 0xffffffe4
   2a6c8:	movw	r0, #0
   2a6cc:	str	r0, [fp, #-44]	; 0xffffffd4
   2a6d0:	b	29170 <__assert_fail@plt+0x17dec>
   2a6d4:	b	2a6d8 <__assert_fail@plt+0x19354>
   2a6d8:	b	2a6dc <__assert_fail@plt+0x19358>
   2a6dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a6e0:	movw	r1, #0
   2a6e4:	cmp	r0, r1
   2a6e8:	beq	2a75c <__assert_fail@plt+0x193d8>
   2a6ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   2a6f0:	tst	r0, #1
   2a6f4:	bne	2a75c <__assert_fail@plt+0x193d8>
   2a6f8:	b	2a6fc <__assert_fail@plt+0x19378>
   2a6fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a700:	ldrsb	r0, [r0]
   2a704:	cmp	r0, #0
   2a708:	beq	2a758 <__assert_fail@plt+0x193d4>
   2a70c:	b	2a710 <__assert_fail@plt+0x1938c>
   2a710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a718:	cmp	r0, r1
   2a71c:	bcs	2a738 <__assert_fail@plt+0x193b4>
   2a720:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a724:	ldrb	r0, [r0]
   2a728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a72c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a730:	add	r1, r1, r2
   2a734:	strb	r0, [r1]
   2a738:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a73c:	add	r0, r0, #1
   2a740:	str	r0, [fp, #-44]	; 0xffffffd4
   2a744:	b	2a748 <__assert_fail@plt+0x193c4>
   2a748:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a74c:	add	r0, r0, #1
   2a750:	str	r0, [fp, #-52]	; 0xffffffcc
   2a754:	b	2a6fc <__assert_fail@plt+0x19378>
   2a758:	b	2a75c <__assert_fail@plt+0x193d8>
   2a75c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a764:	cmp	r0, r1
   2a768:	bcs	2a780 <__assert_fail@plt+0x193fc>
   2a76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a770:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a774:	add	r0, r0, r1
   2a778:	movw	r1, #0
   2a77c:	strb	r1, [r0]
   2a780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a784:	str	r0, [fp, #-20]	; 0xffffffec
   2a788:	b	2a7f4 <__assert_fail@plt+0x19470>
   2a78c:	ldr	r0, [fp, #8]
   2a790:	cmp	r0, #2
   2a794:	bne	2a7ac <__assert_fail@plt+0x19428>
   2a798:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   2a79c:	tst	r0, #1
   2a7a0:	beq	2a7ac <__assert_fail@plt+0x19428>
   2a7a4:	movw	r0, #4
   2a7a8:	str	r0, [fp, #8]
   2a7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a7b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a7b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a7b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a7bc:	ldr	ip, [fp, #8]
   2a7c0:	ldr	lr, [fp, #12]
   2a7c4:	mvn	r4, #2
   2a7c8:	and	lr, lr, r4
   2a7cc:	ldr	r4, [fp, #20]
   2a7d0:	ldr	r5, [fp, #24]
   2a7d4:	str	ip, [sp]
   2a7d8:	str	lr, [sp, #4]
   2a7dc:	movw	ip, #0
   2a7e0:	str	ip, [sp, #8]
   2a7e4:	str	r4, [sp, #12]
   2a7e8:	str	r5, [sp, #16]
   2a7ec:	bl	290c8 <__assert_fail@plt+0x17d44>
   2a7f0:	str	r0, [fp, #-20]	; 0xffffffec
   2a7f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a7f8:	sub	sp, fp, #16
   2a7fc:	pop	{r4, r5, r6, sl, fp, pc}
   2a800:	push	{fp, lr}
   2a804:	mov	fp, sp
   2a808:	sub	sp, sp, #16
   2a80c:	str	r0, [fp, #-4]
   2a810:	str	r1, [sp, #8]
   2a814:	str	r2, [sp, #4]
   2a818:	ldr	r0, [fp, #-4]
   2a81c:	ldr	r1, [sp, #8]
   2a820:	ldr	r3, [sp, #4]
   2a824:	movw	r2, #0
   2a828:	bl	2a834 <__assert_fail@plt+0x194b0>
   2a82c:	mov	sp, fp
   2a830:	pop	{fp, pc}
   2a834:	push	{r4, r5, r6, sl, fp, lr}
   2a838:	add	fp, sp, #16
   2a83c:	sub	sp, sp, #72	; 0x48
   2a840:	str	r0, [fp, #-20]	; 0xffffffec
   2a844:	str	r1, [fp, #-24]	; 0xffffffe8
   2a848:	str	r2, [fp, #-28]	; 0xffffffe4
   2a84c:	str	r3, [fp, #-32]	; 0xffffffe0
   2a850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a854:	movw	r1, #0
   2a858:	cmp	r0, r1
   2a85c:	beq	2a86c <__assert_fail@plt+0x194e8>
   2a860:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a864:	str	r0, [sp, #32]
   2a868:	b	2a87c <__assert_fail@plt+0x194f8>
   2a86c:	movw	r0, #41388	; 0xa1ac
   2a870:	movt	r0, #4
   2a874:	str	r0, [sp, #32]
   2a878:	b	2a87c <__assert_fail@plt+0x194f8>
   2a87c:	ldr	r0, [sp, #32]
   2a880:	str	r0, [fp, #-36]	; 0xffffffdc
   2a884:	bl	11294 <__errno_location@plt>
   2a888:	ldr	r0, [r0]
   2a88c:	str	r0, [fp, #-40]	; 0xffffffd8
   2a890:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a894:	ldr	r0, [r0, #4]
   2a898:	ldr	lr, [fp, #-28]	; 0xffffffe4
   2a89c:	movw	r1, #0
   2a8a0:	cmp	lr, r1
   2a8a4:	movw	lr, #0
   2a8a8:	movne	lr, #1
   2a8ac:	tst	lr, #1
   2a8b0:	mov	lr, r1
   2a8b4:	moveq	lr, #1
   2a8b8:	orr	r0, r0, lr
   2a8bc:	str	r0, [sp, #44]	; 0x2c
   2a8c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a8c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a8cc:	ldr	r0, [r0]
   2a8d0:	ldr	lr, [sp, #44]	; 0x2c
   2a8d4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2a8d8:	add	ip, ip, #8
   2a8dc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   2a8e0:	ldr	r4, [r4, #40]	; 0x28
   2a8e4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2a8e8:	ldr	r5, [r5, #44]	; 0x2c
   2a8ec:	str	r0, [sp, #28]
   2a8f0:	mov	r0, r1
   2a8f4:	ldr	r6, [sp, #28]
   2a8f8:	str	r6, [sp]
   2a8fc:	str	lr, [sp, #4]
   2a900:	str	ip, [sp, #8]
   2a904:	str	r4, [sp, #12]
   2a908:	str	r5, [sp, #16]
   2a90c:	bl	290c8 <__assert_fail@plt+0x17d44>
   2a910:	add	r0, r0, #1
   2a914:	str	r0, [sp, #40]	; 0x28
   2a918:	ldr	r0, [sp, #40]	; 0x28
   2a91c:	bl	2c71c <__assert_fail@plt+0x1b398>
   2a920:	str	r0, [sp, #36]	; 0x24
   2a924:	ldr	r0, [sp, #36]	; 0x24
   2a928:	ldr	r1, [sp, #40]	; 0x28
   2a92c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a934:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2a938:	ldr	ip, [ip]
   2a93c:	ldr	lr, [sp, #44]	; 0x2c
   2a940:	ldr	r4, [fp, #-36]	; 0xffffffdc
   2a944:	add	r4, r4, #8
   2a948:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2a94c:	ldr	r5, [r5, #40]	; 0x28
   2a950:	ldr	r6, [fp, #-36]	; 0xffffffdc
   2a954:	ldr	r6, [r6, #44]	; 0x2c
   2a958:	str	ip, [sp]
   2a95c:	str	lr, [sp, #4]
   2a960:	str	r4, [sp, #8]
   2a964:	str	r5, [sp, #12]
   2a968:	str	r6, [sp, #16]
   2a96c:	bl	290c8 <__assert_fail@plt+0x17d44>
   2a970:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a974:	str	r0, [sp, #24]
   2a978:	str	r1, [sp, #20]
   2a97c:	bl	11294 <__errno_location@plt>
   2a980:	ldr	r1, [sp, #20]
   2a984:	str	r1, [r0]
   2a988:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a98c:	movw	r2, #0
   2a990:	cmp	r0, r2
   2a994:	beq	2a9a8 <__assert_fail@plt+0x19624>
   2a998:	ldr	r0, [sp, #40]	; 0x28
   2a99c:	sub	r0, r0, #1
   2a9a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a9a4:	str	r0, [r1]
   2a9a8:	ldr	r0, [sp, #36]	; 0x24
   2a9ac:	sub	sp, fp, #16
   2a9b0:	pop	{r4, r5, r6, sl, fp, pc}
   2a9b4:	push	{fp, lr}
   2a9b8:	mov	fp, sp
   2a9bc:	sub	sp, sp, #8
   2a9c0:	movw	r0, #41264	; 0xa130
   2a9c4:	movt	r0, #4
   2a9c8:	ldr	r0, [r0]
   2a9cc:	str	r0, [sp, #4]
   2a9d0:	movw	r0, #1
   2a9d4:	str	r0, [sp]
   2a9d8:	ldr	r0, [sp]
   2a9dc:	movw	r1, #41268	; 0xa134
   2a9e0:	movt	r1, #4
   2a9e4:	ldr	r1, [r1]
   2a9e8:	cmp	r0, r1
   2a9ec:	bge	2aa14 <__assert_fail@plt+0x19690>
   2a9f0:	ldr	r0, [sp, #4]
   2a9f4:	ldr	r1, [sp]
   2a9f8:	add	r0, r0, r1, lsl #3
   2a9fc:	ldr	r0, [r0, #4]
   2aa00:	bl	1af30 <__assert_fail@plt+0x9bac>
   2aa04:	ldr	r0, [sp]
   2aa08:	add	r0, r0, #1
   2aa0c:	str	r0, [sp]
   2aa10:	b	2a9d8 <__assert_fail@plt+0x19654>
   2aa14:	ldr	r0, [sp, #4]
   2aa18:	ldr	r0, [r0, #4]
   2aa1c:	movw	r1, #41436	; 0xa1dc
   2aa20:	movt	r1, #4
   2aa24:	cmp	r0, r1
   2aa28:	beq	2aa54 <__assert_fail@plt+0x196d0>
   2aa2c:	ldr	r0, [sp, #4]
   2aa30:	ldr	r0, [r0, #4]
   2aa34:	bl	1af30 <__assert_fail@plt+0x9bac>
   2aa38:	movw	r0, #256	; 0x100
   2aa3c:	movw	lr, #41272	; 0xa138
   2aa40:	movt	lr, #4
   2aa44:	str	r0, [lr]
   2aa48:	movw	r0, #41436	; 0xa1dc
   2aa4c:	movt	r0, #4
   2aa50:	str	r0, [lr, #4]
   2aa54:	ldr	r0, [sp, #4]
   2aa58:	movw	r1, #41272	; 0xa138
   2aa5c:	movt	r1, #4
   2aa60:	cmp	r0, r1
   2aa64:	beq	2aa84 <__assert_fail@plt+0x19700>
   2aa68:	ldr	r0, [sp, #4]
   2aa6c:	bl	1af30 <__assert_fail@plt+0x9bac>
   2aa70:	movw	r0, #41264	; 0xa130
   2aa74:	movt	r0, #4
   2aa78:	movw	lr, #41272	; 0xa138
   2aa7c:	movt	lr, #4
   2aa80:	str	lr, [r0]
   2aa84:	movw	r0, #41268	; 0xa134
   2aa88:	movt	r0, #4
   2aa8c:	movw	r1, #1
   2aa90:	str	r1, [r0]
   2aa94:	mov	sp, fp
   2aa98:	pop	{fp, pc}
   2aa9c:	push	{fp, lr}
   2aaa0:	mov	fp, sp
   2aaa4:	sub	sp, sp, #8
   2aaa8:	str	r0, [sp, #4]
   2aaac:	str	r1, [sp]
   2aab0:	ldr	r0, [sp, #4]
   2aab4:	ldr	r1, [sp]
   2aab8:	mvn	r2, #0
   2aabc:	movw	r3, #41388	; 0xa1ac
   2aac0:	movt	r3, #4
   2aac4:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2aac8:	mov	sp, fp
   2aacc:	pop	{fp, pc}
   2aad0:	push	{r4, r5, r6, sl, fp, lr}
   2aad4:	add	fp, sp, #16
   2aad8:	sub	sp, sp, #88	; 0x58
   2aadc:	str	r0, [fp, #-20]	; 0xffffffec
   2aae0:	str	r1, [fp, #-24]	; 0xffffffe8
   2aae4:	str	r2, [fp, #-28]	; 0xffffffe4
   2aae8:	str	r3, [fp, #-32]	; 0xffffffe0
   2aaec:	bl	11294 <__errno_location@plt>
   2aaf0:	ldr	r1, [pc, #676]	; 2ad9c <__assert_fail@plt+0x19a18>
   2aaf4:	ldr	r0, [r0]
   2aaf8:	str	r0, [fp, #-36]	; 0xffffffdc
   2aafc:	movw	r0, #41264	; 0xa130
   2ab00:	movt	r0, #4
   2ab04:	ldr	r0, [r0]
   2ab08:	str	r0, [fp, #-40]	; 0xffffffd8
   2ab0c:	str	r1, [fp, #-44]	; 0xffffffd4
   2ab10:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ab14:	movw	r1, #0
   2ab18:	cmp	r1, r0
   2ab1c:	bgt	2ab30 <__assert_fail@plt+0x197ac>
   2ab20:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ab24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ab28:	cmp	r0, r1
   2ab2c:	blt	2ab34 <__assert_fail@plt+0x197b0>
   2ab30:	bl	1136c <abort@plt>
   2ab34:	movw	r0, #41268	; 0xa134
   2ab38:	movt	r0, #4
   2ab3c:	ldr	r0, [r0]
   2ab40:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ab44:	cmp	r0, r1
   2ab48:	bgt	2ac40 <__assert_fail@plt+0x198bc>
   2ab4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ab50:	movw	r1, #41272	; 0xa138
   2ab54:	movt	r1, #4
   2ab58:	cmp	r0, r1
   2ab5c:	movw	r0, #0
   2ab60:	moveq	r0, #1
   2ab64:	and	r0, r0, #1
   2ab68:	strb	r0, [fp, #-45]	; 0xffffffd3
   2ab6c:	movw	r0, #41268	; 0xa134
   2ab70:	movt	r0, #4
   2ab74:	ldr	r0, [r0]
   2ab78:	str	r0, [sp, #52]	; 0x34
   2ab7c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   2ab80:	tst	r0, #1
   2ab84:	beq	2ab94 <__assert_fail@plt+0x19810>
   2ab88:	movw	r0, #0
   2ab8c:	str	r0, [sp, #32]
   2ab90:	b	2ab9c <__assert_fail@plt+0x19818>
   2ab94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ab98:	str	r0, [sp, #32]
   2ab9c:	ldr	r0, [sp, #32]
   2aba0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2aba4:	movw	r2, #41268	; 0xa134
   2aba8:	movt	r2, #4
   2abac:	ldr	r2, [r2]
   2abb0:	sub	r1, r1, r2
   2abb4:	add	r2, r1, #1
   2abb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2abbc:	add	r1, sp, #52	; 0x34
   2abc0:	movw	ip, #8
   2abc4:	str	ip, [sp]
   2abc8:	bl	2c958 <__assert_fail@plt+0x1b5d4>
   2abcc:	str	r0, [fp, #-40]	; 0xffffffd8
   2abd0:	movw	r1, #41264	; 0xa130
   2abd4:	movt	r1, #4
   2abd8:	str	r0, [r1]
   2abdc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   2abe0:	tst	r0, #1
   2abe4:	beq	2ac04 <__assert_fail@plt+0x19880>
   2abe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2abec:	movw	r1, #41272	; 0xa138
   2abf0:	movt	r1, #4
   2abf4:	ldr	r2, [r1]
   2abf8:	str	r2, [r0]
   2abfc:	ldr	r1, [r1, #4]
   2ac00:	str	r1, [r0, #4]
   2ac04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ac08:	movw	r1, #41268	; 0xa134
   2ac0c:	movt	r1, #4
   2ac10:	ldr	r1, [r1]
   2ac14:	add	r0, r0, r1, lsl #3
   2ac18:	ldr	r2, [sp, #52]	; 0x34
   2ac1c:	sub	r1, r2, r1
   2ac20:	lsl	r2, r1, #3
   2ac24:	movw	r1, #0
   2ac28:	and	r1, r1, #255	; 0xff
   2ac2c:	bl	112b8 <memset@plt>
   2ac30:	ldr	r0, [sp, #52]	; 0x34
   2ac34:	movw	r1, #41268	; 0xa134
   2ac38:	movt	r1, #4
   2ac3c:	str	r0, [r1]
   2ac40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ac44:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ac48:	ldr	r0, [r0, r1, lsl #3]
   2ac4c:	str	r0, [sp, #48]	; 0x30
   2ac50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ac54:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ac58:	add	r0, r0, r1, lsl #3
   2ac5c:	ldr	r0, [r0, #4]
   2ac60:	str	r0, [sp, #44]	; 0x2c
   2ac64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac68:	ldr	r0, [r0, #4]
   2ac6c:	orr	r0, r0, #1
   2ac70:	str	r0, [sp, #40]	; 0x28
   2ac74:	ldr	r0, [sp, #44]	; 0x2c
   2ac78:	ldr	r1, [sp, #48]	; 0x30
   2ac7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ac80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ac84:	ldr	ip, [fp, #-32]	; 0xffffffe0
   2ac88:	ldr	ip, [ip]
   2ac8c:	ldr	lr, [sp, #40]	; 0x28
   2ac90:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2ac94:	add	r4, r4, #8
   2ac98:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2ac9c:	ldr	r5, [r5, #40]	; 0x28
   2aca0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2aca4:	ldr	r6, [r6, #44]	; 0x2c
   2aca8:	str	ip, [sp]
   2acac:	str	lr, [sp, #4]
   2acb0:	str	r4, [sp, #8]
   2acb4:	str	r5, [sp, #12]
   2acb8:	str	r6, [sp, #16]
   2acbc:	bl	290c8 <__assert_fail@plt+0x17d44>
   2acc0:	str	r0, [sp, #36]	; 0x24
   2acc4:	ldr	r0, [sp, #48]	; 0x30
   2acc8:	ldr	r1, [sp, #36]	; 0x24
   2accc:	cmp	r0, r1
   2acd0:	bhi	2ad7c <__assert_fail@plt+0x199f8>
   2acd4:	ldr	r0, [sp, #36]	; 0x24
   2acd8:	add	r0, r0, #1
   2acdc:	str	r0, [sp, #48]	; 0x30
   2ace0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2ace4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ace8:	add	r1, r1, r2, lsl #3
   2acec:	str	r0, [r1]
   2acf0:	ldr	r0, [sp, #44]	; 0x2c
   2acf4:	movw	r1, #41436	; 0xa1dc
   2acf8:	movt	r1, #4
   2acfc:	cmp	r0, r1
   2ad00:	beq	2ad0c <__assert_fail@plt+0x19988>
   2ad04:	ldr	r0, [sp, #44]	; 0x2c
   2ad08:	bl	1af30 <__assert_fail@plt+0x9bac>
   2ad0c:	ldr	r0, [sp, #48]	; 0x30
   2ad10:	bl	2c71c <__assert_fail@plt+0x1b398>
   2ad14:	mov	lr, r0
   2ad18:	str	r0, [sp, #44]	; 0x2c
   2ad1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ad20:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ad24:	add	r0, r0, r1, lsl #3
   2ad28:	str	lr, [r0, #4]
   2ad2c:	ldr	r0, [sp, #44]	; 0x2c
   2ad30:	ldr	r1, [sp, #48]	; 0x30
   2ad34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ad38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad3c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   2ad40:	ldr	lr, [lr]
   2ad44:	ldr	ip, [sp, #40]	; 0x28
   2ad48:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2ad4c:	add	r4, r4, #8
   2ad50:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2ad54:	ldr	r5, [r5, #40]	; 0x28
   2ad58:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2ad5c:	ldr	r6, [r6, #44]	; 0x2c
   2ad60:	str	lr, [sp]
   2ad64:	str	ip, [sp, #4]
   2ad68:	str	r4, [sp, #8]
   2ad6c:	str	r5, [sp, #12]
   2ad70:	str	r6, [sp, #16]
   2ad74:	bl	290c8 <__assert_fail@plt+0x17d44>
   2ad78:	str	r0, [sp, #28]
   2ad7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ad80:	str	r0, [sp, #24]
   2ad84:	bl	11294 <__errno_location@plt>
   2ad88:	ldr	lr, [sp, #24]
   2ad8c:	str	lr, [r0]
   2ad90:	ldr	r0, [sp, #44]	; 0x2c
   2ad94:	sub	sp, fp, #16
   2ad98:	pop	{r4, r5, r6, sl, fp, pc}
   2ad9c:	svcvc	0x00ffffff
   2ada0:	push	{fp, lr}
   2ada4:	mov	fp, sp
   2ada8:	sub	sp, sp, #16
   2adac:	str	r0, [fp, #-4]
   2adb0:	str	r1, [sp, #8]
   2adb4:	str	r2, [sp, #4]
   2adb8:	ldr	r0, [fp, #-4]
   2adbc:	ldr	r1, [sp, #8]
   2adc0:	ldr	r2, [sp, #4]
   2adc4:	movw	r3, #41388	; 0xa1ac
   2adc8:	movt	r3, #4
   2adcc:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2add0:	mov	sp, fp
   2add4:	pop	{fp, pc}
   2add8:	push	{fp, lr}
   2addc:	mov	fp, sp
   2ade0:	sub	sp, sp, #8
   2ade4:	str	r0, [sp, #4]
   2ade8:	ldr	r1, [sp, #4]
   2adec:	movw	r0, #0
   2adf0:	bl	2aa9c <__assert_fail@plt+0x19718>
   2adf4:	mov	sp, fp
   2adf8:	pop	{fp, pc}
   2adfc:	push	{fp, lr}
   2ae00:	mov	fp, sp
   2ae04:	sub	sp, sp, #8
   2ae08:	str	r0, [sp, #4]
   2ae0c:	str	r1, [sp]
   2ae10:	ldr	r1, [sp, #4]
   2ae14:	ldr	r2, [sp]
   2ae18:	movw	r0, #0
   2ae1c:	bl	2ada0 <__assert_fail@plt+0x19a1c>
   2ae20:	mov	sp, fp
   2ae24:	pop	{fp, pc}
   2ae28:	push	{fp, lr}
   2ae2c:	mov	fp, sp
   2ae30:	sub	sp, sp, #64	; 0x40
   2ae34:	str	r0, [fp, #-4]
   2ae38:	str	r1, [fp, #-8]
   2ae3c:	str	r2, [fp, #-12]
   2ae40:	ldr	r1, [fp, #-8]
   2ae44:	add	r0, sp, #4
   2ae48:	bl	2ae68 <__assert_fail@plt+0x19ae4>
   2ae4c:	ldr	r0, [fp, #-4]
   2ae50:	ldr	r1, [fp, #-12]
   2ae54:	mvn	r2, #0
   2ae58:	add	r3, sp, #4
   2ae5c:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2ae60:	mov	sp, fp
   2ae64:	pop	{fp, pc}
   2ae68:	push	{fp, lr}
   2ae6c:	mov	fp, sp
   2ae70:	sub	sp, sp, #8
   2ae74:	str	r1, [sp, #4]
   2ae78:	mov	r1, r0
   2ae7c:	str	r0, [sp]
   2ae80:	mov	r0, r1
   2ae84:	movw	r1, #0
   2ae88:	and	r1, r1, #255	; 0xff
   2ae8c:	movw	r2, #48	; 0x30
   2ae90:	bl	112b8 <memset@plt>
   2ae94:	ldr	r0, [sp, #4]
   2ae98:	cmp	r0, #10
   2ae9c:	bne	2aea4 <__assert_fail@plt+0x19b20>
   2aea0:	bl	1136c <abort@plt>
   2aea4:	ldr	r0, [sp, #4]
   2aea8:	ldr	r1, [sp]
   2aeac:	str	r0, [r1]
   2aeb0:	mov	sp, fp
   2aeb4:	pop	{fp, pc}
   2aeb8:	push	{fp, lr}
   2aebc:	mov	fp, sp
   2aec0:	sub	sp, sp, #64	; 0x40
   2aec4:	str	r0, [fp, #-4]
   2aec8:	str	r1, [fp, #-8]
   2aecc:	str	r2, [fp, #-12]
   2aed0:	str	r3, [fp, #-16]
   2aed4:	ldr	r1, [fp, #-8]
   2aed8:	mov	r0, sp
   2aedc:	bl	2ae68 <__assert_fail@plt+0x19ae4>
   2aee0:	ldr	r0, [fp, #-4]
   2aee4:	ldr	r1, [fp, #-12]
   2aee8:	ldr	r2, [fp, #-16]
   2aeec:	mov	r3, sp
   2aef0:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2aef4:	mov	sp, fp
   2aef8:	pop	{fp, pc}
   2aefc:	push	{fp, lr}
   2af00:	mov	fp, sp
   2af04:	sub	sp, sp, #8
   2af08:	str	r0, [sp, #4]
   2af0c:	str	r1, [sp]
   2af10:	ldr	r1, [sp, #4]
   2af14:	ldr	r2, [sp]
   2af18:	movw	r0, #0
   2af1c:	bl	2ae28 <__assert_fail@plt+0x19aa4>
   2af20:	mov	sp, fp
   2af24:	pop	{fp, pc}
   2af28:	push	{fp, lr}
   2af2c:	mov	fp, sp
   2af30:	sub	sp, sp, #16
   2af34:	str	r0, [fp, #-4]
   2af38:	str	r1, [sp, #8]
   2af3c:	str	r2, [sp, #4]
   2af40:	ldr	r1, [fp, #-4]
   2af44:	ldr	r2, [sp, #8]
   2af48:	ldr	r3, [sp, #4]
   2af4c:	movw	r0, #0
   2af50:	bl	2aeb8 <__assert_fail@plt+0x19b34>
   2af54:	mov	sp, fp
   2af58:	pop	{fp, pc}
   2af5c:	push	{fp, lr}
   2af60:	mov	fp, sp
   2af64:	sub	sp, sp, #72	; 0x48
   2af68:	movw	r3, #41388	; 0xa1ac
   2af6c:	movt	r3, #4
   2af70:	str	r0, [fp, #-4]
   2af74:	str	r1, [fp, #-8]
   2af78:	strb	r2, [fp, #-9]
   2af7c:	add	r0, sp, #12
   2af80:	mov	r1, r0
   2af84:	str	r0, [sp, #8]
   2af88:	mov	r0, r1
   2af8c:	mov	r1, r3
   2af90:	movw	r2, #48	; 0x30
   2af94:	bl	1112c <memcpy@plt>
   2af98:	ldr	r0, [sp, #8]
   2af9c:	ldrb	r1, [fp, #-9]
   2afa0:	movw	r2, #1
   2afa4:	bl	28e6c <__assert_fail@plt+0x17ae8>
   2afa8:	ldr	r1, [fp, #-4]
   2afac:	ldr	r2, [fp, #-8]
   2afb0:	movw	r3, #0
   2afb4:	str	r0, [sp, #4]
   2afb8:	mov	r0, r3
   2afbc:	add	r3, sp, #12
   2afc0:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2afc4:	mov	sp, fp
   2afc8:	pop	{fp, pc}
   2afcc:	push	{fp, lr}
   2afd0:	mov	fp, sp
   2afd4:	sub	sp, sp, #8
   2afd8:	str	r0, [sp, #4]
   2afdc:	strb	r1, [sp, #3]
   2afe0:	ldr	r0, [sp, #4]
   2afe4:	mvn	r1, #0
   2afe8:	ldrb	r2, [sp, #3]
   2afec:	bl	2af5c <__assert_fail@plt+0x19bd8>
   2aff0:	mov	sp, fp
   2aff4:	pop	{fp, pc}
   2aff8:	push	{fp, lr}
   2affc:	mov	fp, sp
   2b000:	sub	sp, sp, #8
   2b004:	str	r0, [sp, #4]
   2b008:	ldr	r0, [sp, #4]
   2b00c:	movw	r1, #58	; 0x3a
   2b010:	and	r1, r1, #255	; 0xff
   2b014:	bl	2afcc <__assert_fail@plt+0x19c48>
   2b018:	mov	sp, fp
   2b01c:	pop	{fp, pc}
   2b020:	push	{fp, lr}
   2b024:	mov	fp, sp
   2b028:	sub	sp, sp, #8
   2b02c:	str	r0, [sp, #4]
   2b030:	str	r1, [sp]
   2b034:	ldr	r0, [sp, #4]
   2b038:	ldr	r1, [sp]
   2b03c:	movw	r2, #58	; 0x3a
   2b040:	and	r2, r2, #255	; 0xff
   2b044:	bl	2af5c <__assert_fail@plt+0x19bd8>
   2b048:	mov	sp, fp
   2b04c:	pop	{fp, pc}
   2b050:	push	{fp, lr}
   2b054:	mov	fp, sp
   2b058:	sub	sp, sp, #120	; 0x78
   2b05c:	str	r0, [fp, #-4]
   2b060:	str	r1, [fp, #-8]
   2b064:	str	r2, [fp, #-12]
   2b068:	ldr	r1, [fp, #-8]
   2b06c:	add	r0, sp, #12
   2b070:	bl	2ae68 <__assert_fail@plt+0x19ae4>
   2b074:	add	r0, sp, #60	; 0x3c
   2b078:	mov	r1, r0
   2b07c:	add	r2, sp, #12
   2b080:	str	r0, [sp, #8]
   2b084:	mov	r0, r1
   2b088:	mov	r1, r2
   2b08c:	movw	r2, #48	; 0x30
   2b090:	bl	1112c <memcpy@plt>
   2b094:	ldr	r0, [sp, #8]
   2b098:	movw	r1, #58	; 0x3a
   2b09c:	and	r1, r1, #255	; 0xff
   2b0a0:	movw	r2, #1
   2b0a4:	bl	28e6c <__assert_fail@plt+0x17ae8>
   2b0a8:	ldr	r1, [fp, #-4]
   2b0ac:	ldr	r2, [fp, #-12]
   2b0b0:	str	r0, [sp, #4]
   2b0b4:	mov	r0, r1
   2b0b8:	mov	r1, r2
   2b0bc:	mvn	r2, #0
   2b0c0:	add	r3, sp, #60	; 0x3c
   2b0c4:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2b0c8:	mov	sp, fp
   2b0cc:	pop	{fp, pc}
   2b0d0:	push	{fp, lr}
   2b0d4:	mov	fp, sp
   2b0d8:	sub	sp, sp, #24
   2b0dc:	str	r0, [fp, #-4]
   2b0e0:	str	r1, [fp, #-8]
   2b0e4:	str	r2, [sp, #12]
   2b0e8:	str	r3, [sp, #8]
   2b0ec:	ldr	r0, [fp, #-4]
   2b0f0:	ldr	r1, [fp, #-8]
   2b0f4:	ldr	r2, [sp, #12]
   2b0f8:	ldr	r3, [sp, #8]
   2b0fc:	mvn	ip, #0
   2b100:	str	ip, [sp]
   2b104:	bl	2b110 <__assert_fail@plt+0x19d8c>
   2b108:	mov	sp, fp
   2b10c:	pop	{fp, pc}
   2b110:	push	{fp, lr}
   2b114:	mov	fp, sp
   2b118:	sub	sp, sp, #72	; 0x48
   2b11c:	ldr	ip, [fp, #8]
   2b120:	movw	lr, #41388	; 0xa1ac
   2b124:	movt	lr, #4
   2b128:	str	r0, [fp, #-4]
   2b12c:	str	r1, [fp, #-8]
   2b130:	str	r2, [fp, #-12]
   2b134:	str	r3, [fp, #-16]
   2b138:	add	r0, sp, #8
   2b13c:	mov	r1, r0
   2b140:	str	r0, [sp, #4]
   2b144:	mov	r0, r1
   2b148:	mov	r1, lr
   2b14c:	movw	r2, #48	; 0x30
   2b150:	str	ip, [sp]
   2b154:	bl	1112c <memcpy@plt>
   2b158:	ldr	r1, [fp, #-8]
   2b15c:	ldr	r2, [fp, #-12]
   2b160:	ldr	r0, [sp, #4]
   2b164:	bl	28f6c <__assert_fail@plt+0x17be8>
   2b168:	ldr	r0, [fp, #-4]
   2b16c:	ldr	r1, [fp, #-16]
   2b170:	ldr	r2, [fp, #8]
   2b174:	add	r3, sp, #8
   2b178:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2b17c:	mov	sp, fp
   2b180:	pop	{fp, pc}
   2b184:	push	{fp, lr}
   2b188:	mov	fp, sp
   2b18c:	sub	sp, sp, #16
   2b190:	str	r0, [fp, #-4]
   2b194:	str	r1, [sp, #8]
   2b198:	str	r2, [sp, #4]
   2b19c:	ldr	r1, [fp, #-4]
   2b1a0:	ldr	r2, [sp, #8]
   2b1a4:	ldr	r3, [sp, #4]
   2b1a8:	movw	r0, #0
   2b1ac:	bl	2b0d0 <__assert_fail@plt+0x19d4c>
   2b1b0:	mov	sp, fp
   2b1b4:	pop	{fp, pc}
   2b1b8:	push	{fp, lr}
   2b1bc:	mov	fp, sp
   2b1c0:	sub	sp, sp, #24
   2b1c4:	str	r0, [fp, #-4]
   2b1c8:	str	r1, [fp, #-8]
   2b1cc:	str	r2, [sp, #12]
   2b1d0:	str	r3, [sp, #8]
   2b1d4:	ldr	r1, [fp, #-4]
   2b1d8:	ldr	r2, [fp, #-8]
   2b1dc:	ldr	r3, [sp, #12]
   2b1e0:	ldr	r0, [sp, #8]
   2b1e4:	movw	ip, #0
   2b1e8:	str	r0, [sp, #4]
   2b1ec:	mov	r0, ip
   2b1f0:	ldr	ip, [sp, #4]
   2b1f4:	str	ip, [sp]
   2b1f8:	bl	2b110 <__assert_fail@plt+0x19d8c>
   2b1fc:	mov	sp, fp
   2b200:	pop	{fp, pc}
   2b204:	push	{fp, lr}
   2b208:	mov	fp, sp
   2b20c:	sub	sp, sp, #16
   2b210:	str	r0, [fp, #-4]
   2b214:	str	r1, [sp, #8]
   2b218:	str	r2, [sp, #4]
   2b21c:	ldr	r0, [fp, #-4]
   2b220:	ldr	r1, [sp, #8]
   2b224:	ldr	r2, [sp, #4]
   2b228:	movw	r3, #41280	; 0xa140
   2b22c:	movt	r3, #4
   2b230:	bl	2aad0 <__assert_fail@plt+0x1974c>
   2b234:	mov	sp, fp
   2b238:	pop	{fp, pc}
   2b23c:	push	{fp, lr}
   2b240:	mov	fp, sp
   2b244:	sub	sp, sp, #8
   2b248:	str	r0, [sp, #4]
   2b24c:	str	r1, [sp]
   2b250:	ldr	r1, [sp, #4]
   2b254:	ldr	r2, [sp]
   2b258:	movw	r0, #0
   2b25c:	bl	2b204 <__assert_fail@plt+0x19e80>
   2b260:	mov	sp, fp
   2b264:	pop	{fp, pc}
   2b268:	push	{fp, lr}
   2b26c:	mov	fp, sp
   2b270:	sub	sp, sp, #8
   2b274:	str	r0, [sp, #4]
   2b278:	str	r1, [sp]
   2b27c:	ldr	r0, [sp, #4]
   2b280:	ldr	r1, [sp]
   2b284:	mvn	r2, #0
   2b288:	bl	2b204 <__assert_fail@plt+0x19e80>
   2b28c:	mov	sp, fp
   2b290:	pop	{fp, pc}
   2b294:	push	{fp, lr}
   2b298:	mov	fp, sp
   2b29c:	sub	sp, sp, #8
   2b2a0:	str	r0, [sp, #4]
   2b2a4:	ldr	r1, [sp, #4]
   2b2a8:	movw	r0, #0
   2b2ac:	bl	2b268 <__assert_fail@plt+0x19ee4>
   2b2b0:	mov	sp, fp
   2b2b4:	pop	{fp, pc}
   2b2b8:	push	{fp, lr}
   2b2bc:	mov	fp, sp
   2b2c0:	sub	sp, sp, #24
   2b2c4:	str	r0, [fp, #-8]
   2b2c8:	str	r1, [sp, #12]
   2b2cc:	ldr	r0, [fp, #-8]
   2b2d0:	bl	11264 <gettext@plt>
   2b2d4:	str	r0, [sp, #8]
   2b2d8:	ldr	r0, [sp, #8]
   2b2dc:	ldr	r1, [fp, #-8]
   2b2e0:	cmp	r0, r1
   2b2e4:	beq	2b2f4 <__assert_fail@plt+0x19f70>
   2b2e8:	ldr	r0, [sp, #8]
   2b2ec:	str	r0, [fp, #-4]
   2b2f0:	b	2b3c0 <__assert_fail@plt+0x1a03c>
   2b2f4:	bl	2fda4 <__assert_fail@plt+0x1ea20>
   2b2f8:	str	r0, [sp, #4]
   2b2fc:	ldr	r0, [sp, #4]
   2b300:	movw	r1, #35533	; 0x8acd
   2b304:	movt	r1, #3
   2b308:	bl	2f7a0 <__assert_fail@plt+0x1e41c>
   2b30c:	cmp	r0, #0
   2b310:	bne	2b348 <__assert_fail@plt+0x19fc4>
   2b314:	ldr	r0, [fp, #-8]
   2b318:	ldrb	r0, [r0]
   2b31c:	cmp	r0, #96	; 0x60
   2b320:	movw	r0, #0
   2b324:	moveq	r0, #1
   2b328:	tst	r0, #1
   2b32c:	movw	r0, #35634	; 0x8b32
   2b330:	movt	r0, #3
   2b334:	movw	r1, #35630	; 0x8b2e
   2b338:	movt	r1, #3
   2b33c:	movne	r0, r1
   2b340:	str	r0, [fp, #-4]
   2b344:	b	2b3c0 <__assert_fail@plt+0x1a03c>
   2b348:	ldr	r0, [sp, #4]
   2b34c:	movw	r1, #35638	; 0x8b36
   2b350:	movt	r1, #3
   2b354:	bl	2f7a0 <__assert_fail@plt+0x1e41c>
   2b358:	cmp	r0, #0
   2b35c:	bne	2b394 <__assert_fail@plt+0x1a010>
   2b360:	ldr	r0, [fp, #-8]
   2b364:	ldrb	r0, [r0]
   2b368:	cmp	r0, #96	; 0x60
   2b36c:	movw	r0, #0
   2b370:	moveq	r0, #1
   2b374:	tst	r0, #1
   2b378:	movw	r0, #35650	; 0x8b42
   2b37c:	movt	r0, #3
   2b380:	movw	r1, #35646	; 0x8b3e
   2b384:	movt	r1, #3
   2b388:	movne	r0, r1
   2b38c:	str	r0, [fp, #-4]
   2b390:	b	2b3c0 <__assert_fail@plt+0x1a03c>
   2b394:	ldr	r0, [sp, #12]
   2b398:	cmp	r0, #9
   2b39c:	movw	r0, #0
   2b3a0:	moveq	r0, #1
   2b3a4:	tst	r0, #1
   2b3a8:	movw	r0, #36652	; 0x8f2c
   2b3ac:	movt	r0, #3
   2b3b0:	movw	r1, #35626	; 0x8b2a
   2b3b4:	movt	r1, #3
   2b3b8:	movne	r0, r1
   2b3bc:	str	r0, [fp, #-4]
   2b3c0:	ldr	r0, [fp, #-4]
   2b3c4:	mov	sp, fp
   2b3c8:	pop	{fp, pc}
   2b3cc:	sub	sp, sp, #4
   2b3d0:	str	r0, [sp]
   2b3d4:	ldr	r0, [sp]
   2b3d8:	movw	r1, #0
   2b3dc:	str	r1, [r0]
   2b3e0:	ldr	r0, [sp]
   2b3e4:	str	r1, [r0, #4]
   2b3e8:	add	sp, sp, #4
   2b3ec:	bx	lr
   2b3f0:	push	{fp, lr}
   2b3f4:	mov	fp, sp
   2b3f8:	sub	sp, sp, #88	; 0x58
   2b3fc:	add	ip, sp, #28
   2b400:	str	r0, [fp, #-8]
   2b404:	str	r1, [fp, #-12]
   2b408:	str	r2, [fp, #-16]
   2b40c:	str	r3, [fp, #-20]	; 0xffffffec
   2b410:	mov	r0, ip
   2b414:	movw	r1, #0
   2b418:	and	r1, r1, #255	; 0xff
   2b41c:	movw	r2, #32
   2b420:	bl	112b8 <memset@plt>
   2b424:	movw	r0, #0
   2b428:	str	r0, [fp, #-28]	; 0xffffffe4
   2b42c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b430:	ldr	r1, [fp, #-16]
   2b434:	cmp	r0, r1
   2b438:	bcs	2b46c <__assert_fail@plt+0x1a0e8>
   2b43c:	add	r1, sp, #28
   2b440:	ldr	r0, [fp, #-12]
   2b444:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b448:	add	r0, r0, r2
   2b44c:	ldrb	r0, [r0]
   2b450:	strb	r0, [sp, #27]
   2b454:	ldrb	r0, [sp, #27]
   2b458:	bl	2b5dc <__assert_fail@plt+0x1a258>
   2b45c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b460:	add	r0, r0, #1
   2b464:	str	r0, [fp, #-28]	; 0xffffffe4
   2b468:	b	2b42c <__assert_fail@plt+0x1a0a8>
   2b46c:	ldr	r0, [fp, #-8]
   2b470:	bl	11150 <getc_unlocked@plt>
   2b474:	str	r0, [fp, #-24]	; 0xffffffe8
   2b478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b47c:	cmp	r0, #0
   2b480:	movw	r0, #0
   2b484:	str	r0, [sp, #12]
   2b488:	blt	2b49c <__assert_fail@plt+0x1a118>
   2b48c:	add	r1, sp, #28
   2b490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b494:	bl	2b620 <__assert_fail@plt+0x1a29c>
   2b498:	str	r0, [sp, #12]
   2b49c:	ldr	r0, [sp, #12]
   2b4a0:	tst	r0, #1
   2b4a4:	beq	2b4bc <__assert_fail@plt+0x1a138>
   2b4a8:	b	2b4ac <__assert_fail@plt+0x1a128>
   2b4ac:	ldr	r0, [fp, #-8]
   2b4b0:	bl	11150 <getc_unlocked@plt>
   2b4b4:	str	r0, [fp, #-24]	; 0xffffffe8
   2b4b8:	b	2b478 <__assert_fail@plt+0x1a0f4>
   2b4bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b4c0:	ldr	r0, [r0, #4]
   2b4c4:	str	r0, [sp, #20]
   2b4c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b4cc:	ldr	r0, [r0]
   2b4d0:	str	r0, [sp, #16]
   2b4d4:	movw	r0, #0
   2b4d8:	str	r0, [fp, #-28]	; 0xffffffe4
   2b4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b4e0:	cmp	r0, #0
   2b4e4:	bge	2b500 <__assert_fail@plt+0x1a17c>
   2b4e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b4ec:	cmp	r0, #0
   2b4f0:	bne	2b500 <__assert_fail@plt+0x1a17c>
   2b4f4:	mvn	r0, #0
   2b4f8:	str	r0, [fp, #-4]
   2b4fc:	b	2b5d0 <__assert_fail@plt+0x1a24c>
   2b500:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b504:	ldr	r1, [sp, #16]
   2b508:	cmp	r0, r1
   2b50c:	bne	2b534 <__assert_fail@plt+0x1a1b0>
   2b510:	ldr	r0, [sp, #20]
   2b514:	add	r1, sp, #16
   2b518:	movw	r2, #1
   2b51c:	str	r2, [sp, #8]
   2b520:	mvn	r3, #0
   2b524:	ldr	ip, [sp, #8]
   2b528:	str	ip, [sp]
   2b52c:	bl	2c958 <__assert_fail@plt+0x1b5d4>
   2b530:	str	r0, [sp, #20]
   2b534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b538:	cmp	r0, #0
   2b53c:	bge	2b558 <__assert_fail@plt+0x1a1d4>
   2b540:	ldr	r0, [sp, #20]
   2b544:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b548:	add	r0, r0, r1
   2b54c:	movw	r1, #0
   2b550:	strb	r1, [r0]
   2b554:	b	2b5b0 <__assert_fail@plt+0x1a22c>
   2b558:	add	r1, sp, #28
   2b55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b560:	bl	2b620 <__assert_fail@plt+0x1a29c>
   2b564:	tst	r0, #1
   2b568:	beq	2b584 <__assert_fail@plt+0x1a200>
   2b56c:	ldr	r0, [sp, #20]
   2b570:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b574:	add	r0, r0, r1
   2b578:	movw	r1, #0
   2b57c:	strb	r1, [r0]
   2b580:	b	2b5b0 <__assert_fail@plt+0x1a22c>
   2b584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b588:	ldr	r1, [sp, #20]
   2b58c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b590:	add	r3, r2, #1
   2b594:	str	r3, [fp, #-28]	; 0xffffffe4
   2b598:	add	r1, r1, r2
   2b59c:	strb	r0, [r1]
   2b5a0:	ldr	r0, [fp, #-8]
   2b5a4:	bl	11150 <getc_unlocked@plt>
   2b5a8:	str	r0, [fp, #-24]	; 0xffffffe8
   2b5ac:	b	2b4dc <__assert_fail@plt+0x1a158>
   2b5b0:	ldr	r0, [sp, #20]
   2b5b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b5b8:	str	r0, [r1, #4]
   2b5bc:	ldr	r0, [sp, #16]
   2b5c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b5c4:	str	r0, [r1]
   2b5c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b5cc:	str	r0, [fp, #-4]
   2b5d0:	ldr	r0, [fp, #-4]
   2b5d4:	mov	sp, fp
   2b5d8:	pop	{fp, pc}
   2b5dc:	sub	sp, sp, #12
   2b5e0:	str	r0, [sp, #8]
   2b5e4:	str	r1, [sp, #4]
   2b5e8:	mov	r0, #1
   2b5ec:	str	r0, [sp]
   2b5f0:	ldr	r0, [sp]
   2b5f4:	ldr	r1, [sp, #8]
   2b5f8:	and	r2, r1, #31
   2b5fc:	lsl	r0, r0, r2
   2b600:	ldr	r2, [sp, #4]
   2b604:	lsr	r1, r1, #5
   2b608:	add	r1, r2, r1, lsl #2
   2b60c:	ldr	r2, [r1]
   2b610:	orr	r0, r2, r0
   2b614:	str	r0, [r1]
   2b618:	add	sp, sp, #12
   2b61c:	bx	lr
   2b620:	sub	sp, sp, #8
   2b624:	str	r0, [sp, #4]
   2b628:	str	r1, [sp]
   2b62c:	ldr	r0, [sp]
   2b630:	ldr	r1, [sp, #4]
   2b634:	lsr	r1, r1, #5
   2b638:	add	r0, r0, r1, lsl #2
   2b63c:	ldr	r0, [r0]
   2b640:	ldr	r1, [sp, #4]
   2b644:	and	r1, r1, #31
   2b648:	lsr	r0, r0, r1
   2b64c:	and	r0, r0, #1
   2b650:	cmp	r0, #0
   2b654:	movw	r0, #0
   2b658:	movne	r0, #1
   2b65c:	and	r0, r0, #1
   2b660:	add	sp, sp, #8
   2b664:	bx	lr
   2b668:	push	{fp, lr}
   2b66c:	mov	fp, sp
   2b670:	sub	sp, sp, #72	; 0x48
   2b674:	ldr	ip, [fp, #12]
   2b678:	ldr	lr, [fp, #8]
   2b67c:	str	r0, [fp, #-4]
   2b680:	str	r1, [fp, #-8]
   2b684:	str	r2, [fp, #-12]
   2b688:	str	r3, [fp, #-16]
   2b68c:	sub	r0, fp, #24
   2b690:	str	r0, [fp, #-28]	; 0xffffffe4
   2b694:	ldr	r0, [fp, #-8]
   2b698:	cmp	r0, #0
   2b69c:	str	lr, [sp, #16]
   2b6a0:	str	ip, [sp, #12]
   2b6a4:	bne	2b6b4 <__assert_fail@plt+0x1a330>
   2b6a8:	movw	r0, #64	; 0x40
   2b6ac:	str	r0, [fp, #-8]
   2b6b0:	b	2b6c0 <__assert_fail@plt+0x1a33c>
   2b6b4:	ldr	r0, [fp, #-8]
   2b6b8:	add	r0, r0, #1
   2b6bc:	str	r0, [fp, #-8]
   2b6c0:	ldr	r0, [fp, #-8]
   2b6c4:	str	r0, [sp, #32]
   2b6c8:	ldr	r0, [sp, #32]
   2b6cc:	movw	r1, #4
   2b6d0:	bl	2c7fc <__assert_fail@plt+0x1b478>
   2b6d4:	str	r0, [fp, #-32]	; 0xffffffe0
   2b6d8:	ldr	r0, [sp, #32]
   2b6dc:	movw	r1, #4
   2b6e0:	bl	2c7fc <__assert_fail@plt+0x1b478>
   2b6e4:	str	r0, [sp, #36]	; 0x24
   2b6e8:	movw	r0, #0
   2b6ec:	str	r0, [sp, #28]
   2b6f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b6f4:	bl	2b3cc <__assert_fail@plt+0x1a048>
   2b6f8:	ldr	r0, [fp, #-4]
   2b6fc:	ldr	r1, [fp, #-12]
   2b700:	ldr	r2, [fp, #-16]
   2b704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b708:	bl	2b3f0 <__assert_fail@plt+0x1a06c>
   2b70c:	str	r0, [sp, #20]
   2b710:	ldr	r0, [sp, #28]
   2b714:	ldr	r1, [sp, #32]
   2b718:	cmp	r0, r1
   2b71c:	blt	2b754 <__assert_fail@plt+0x1a3d0>
   2b720:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b724:	add	r1, sp, #32
   2b728:	movw	r2, #1
   2b72c:	mvn	r3, #0
   2b730:	movw	ip, #4
   2b734:	str	ip, [sp]
   2b738:	bl	2c958 <__assert_fail@plt+0x1b5d4>
   2b73c:	str	r0, [fp, #-32]	; 0xffffffe0
   2b740:	ldr	r0, [sp, #36]	; 0x24
   2b744:	ldr	r1, [sp, #32]
   2b748:	movw	r2, #4
   2b74c:	bl	2c630 <__assert_fail@plt+0x1b2ac>
   2b750:	str	r0, [sp, #36]	; 0x24
   2b754:	ldr	r0, [sp, #20]
   2b758:	cmn	r0, #1
   2b75c:	bne	2b788 <__assert_fail@plt+0x1a404>
   2b760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b764:	ldr	r1, [sp, #28]
   2b768:	mov	r2, #0
   2b76c:	str	r2, [r0, r1, lsl #2]
   2b770:	ldr	r0, [sp, #36]	; 0x24
   2b774:	ldr	r1, [sp, #28]
   2b778:	add	r0, r0, r1, lsl #2
   2b77c:	movw	r1, #0
   2b780:	str	r1, [r0]
   2b784:	b	2b7f0 <__assert_fail@plt+0x1a46c>
   2b788:	ldr	r0, [sp, #20]
   2b78c:	add	r0, r0, #1
   2b790:	mov	r1, #1
   2b794:	bl	2c7fc <__assert_fail@plt+0x1b478>
   2b798:	str	r0, [sp, #24]
   2b79c:	ldr	r0, [sp, #20]
   2b7a0:	ldr	r1, [sp, #36]	; 0x24
   2b7a4:	ldr	lr, [sp, #28]
   2b7a8:	str	r0, [r1, lr, lsl #2]
   2b7ac:	ldr	r0, [sp, #24]
   2b7b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b7b4:	ldr	r1, [r1, #4]
   2b7b8:	ldr	lr, [sp, #20]
   2b7bc:	add	r2, lr, #1
   2b7c0:	str	r0, [sp, #8]
   2b7c4:	bl	1112c <memcpy@plt>
   2b7c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b7cc:	ldr	r2, [sp, #28]
   2b7d0:	add	r1, r1, r2, lsl #2
   2b7d4:	ldr	r2, [sp, #8]
   2b7d8:	str	r2, [r1]
   2b7dc:	ldr	r1, [sp, #28]
   2b7e0:	add	r1, r1, #1
   2b7e4:	str	r1, [sp, #28]
   2b7e8:	str	r0, [sp, #4]
   2b7ec:	b	2b6f8 <__assert_fail@plt+0x1a374>
   2b7f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b7f4:	ldr	r0, [r0, #4]
   2b7f8:	bl	1af30 <__assert_fail@plt+0x9bac>
   2b7fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b800:	ldr	lr, [fp, #8]
   2b804:	str	r0, [lr]
   2b808:	ldr	r0, [fp, #12]
   2b80c:	movw	lr, #0
   2b810:	cmp	r0, lr
   2b814:	beq	2b828 <__assert_fail@plt+0x1a4a4>
   2b818:	ldr	r0, [sp, #36]	; 0x24
   2b81c:	ldr	r1, [fp, #12]
   2b820:	str	r0, [r1]
   2b824:	b	2b830 <__assert_fail@plt+0x1a4ac>
   2b828:	ldr	r0, [sp, #36]	; 0x24
   2b82c:	bl	1af30 <__assert_fail@plt+0x9bac>
   2b830:	ldr	r0, [sp, #28]
   2b834:	mov	sp, fp
   2b838:	pop	{fp, pc}
   2b83c:	push	{fp, lr}
   2b840:	mov	fp, sp
   2b844:	sub	sp, sp, #24
   2b848:	str	r0, [fp, #-8]
   2b84c:	str	r1, [sp, #12]
   2b850:	str	r2, [sp, #8]
   2b854:	ldr	r0, [fp, #-8]
   2b858:	ldr	r1, [sp, #12]
   2b85c:	ldr	r2, [sp, #8]
   2b860:	bl	112c4 <write@plt>
   2b864:	str	r0, [sp, #4]
   2b868:	ldr	r0, [sp, #4]
   2b86c:	movw	r1, #0
   2b870:	cmp	r1, r0
   2b874:	bgt	2b884 <__assert_fail@plt+0x1a500>
   2b878:	ldr	r0, [sp, #4]
   2b87c:	str	r0, [fp, #-4]
   2b880:	b	2b8dc <__assert_fail@plt+0x1a558>
   2b884:	bl	11294 <__errno_location@plt>
   2b888:	ldr	r0, [r0]
   2b88c:	cmp	r0, #4
   2b890:	bne	2b898 <__assert_fail@plt+0x1a514>
   2b894:	b	2b854 <__assert_fail@plt+0x1a4d0>
   2b898:	bl	11294 <__errno_location@plt>
   2b89c:	ldr	r0, [r0]
   2b8a0:	cmp	r0, #22
   2b8a4:	bne	2b8c4 <__assert_fail@plt+0x1a540>
   2b8a8:	ldr	r0, [pc, #56]	; 2b8e8 <__assert_fail@plt+0x1a564>
   2b8ac:	ldr	r1, [sp, #8]
   2b8b0:	cmp	r0, r1
   2b8b4:	bcs	2b8c4 <__assert_fail@plt+0x1a540>
   2b8b8:	ldr	r0, [pc, #40]	; 2b8e8 <__assert_fail@plt+0x1a564>
   2b8bc:	str	r0, [sp, #8]
   2b8c0:	b	2b8d0 <__assert_fail@plt+0x1a54c>
   2b8c4:	ldr	r0, [sp, #4]
   2b8c8:	str	r0, [fp, #-4]
   2b8cc:	b	2b8dc <__assert_fail@plt+0x1a558>
   2b8d0:	b	2b8d4 <__assert_fail@plt+0x1a550>
   2b8d4:	b	2b8d8 <__assert_fail@plt+0x1a554>
   2b8d8:	b	2b854 <__assert_fail@plt+0x1a4d0>
   2b8dc:	ldr	r0, [fp, #-4]
   2b8e0:	mov	sp, fp
   2b8e4:	pop	{fp, pc}
   2b8e8:	svcvc	0x00f00000	; IMB
   2b8ec:	push	{fp, lr}
   2b8f0:	mov	fp, sp
   2b8f4:	sub	sp, sp, #152	; 0x98
   2b8f8:	str	r0, [fp, #-4]
   2b8fc:	str	r1, [fp, #-8]
   2b900:	ldr	r0, [fp, #-4]
   2b904:	bl	1115c <strdup@plt>
   2b908:	str	r0, [fp, #-12]
   2b90c:	ldr	r0, [fp, #-12]
   2b910:	movw	r1, #0
   2b914:	cmp	r0, r1
   2b918:	bne	2b920 <__assert_fail@plt+0x1a59c>
   2b91c:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2b920:	bl	111bc <__ctype_get_mb_cur_max@plt>
   2b924:	cmp	r0, #1
   2b928:	bls	2bc24 <__assert_fail@plt+0x1a8a0>
   2b92c:	ldr	r0, [fp, #-8]
   2b930:	cmp	r0, #0
   2b934:	beq	2ba44 <__assert_fail@plt+0x1a6c0>
   2b938:	ldr	r0, [fp, #-12]
   2b93c:	str	r0, [fp, #-52]	; 0xffffffcc
   2b940:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2b944:	ldr	r1, [fp, #-12]
   2b948:	str	r0, [sp, #64]	; 0x40
   2b94c:	mov	r0, r1
   2b950:	bl	11270 <strlen@plt>
   2b954:	ldr	r1, [sp, #64]	; 0x40
   2b958:	add	r0, r1, r0
   2b95c:	str	r0, [fp, #-72]	; 0xffffffb8
   2b960:	movw	r0, #0
   2b964:	strb	r0, [fp, #-68]	; 0xffffffbc
   2b968:	sub	r1, fp, #72	; 0x48
   2b96c:	add	r1, r1, #8
   2b970:	str	r0, [sp, #60]	; 0x3c
   2b974:	mov	r0, r1
   2b978:	ldr	r1, [sp, #60]	; 0x3c
   2b97c:	and	r1, r1, #255	; 0xff
   2b980:	movw	r2, #8
   2b984:	bl	112b8 <memset@plt>
   2b988:	ldr	r0, [sp, #60]	; 0x3c
   2b98c:	strb	r0, [fp, #-56]	; 0xffffffc8
   2b990:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2b994:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2b998:	cmp	r0, r1
   2b99c:	movw	r0, #0
   2b9a0:	str	r0, [sp, #56]	; 0x38
   2b9a4:	bcs	2b9ec <__assert_fail@plt+0x1a668>
   2b9a8:	sub	r0, fp, #72	; 0x48
   2b9ac:	bl	2fe00 <__assert_fail@plt+0x1ea7c>
   2b9b0:	movw	r0, #0
   2b9b4:	str	r0, [sp, #52]	; 0x34
   2b9b8:	ldrb	r0, [fp, #-44]	; 0xffffffd4
   2b9bc:	tst	r0, #1
   2b9c0:	movw	r0, #0
   2b9c4:	str	r0, [sp, #48]	; 0x30
   2b9c8:	beq	2b9e4 <__assert_fail@plt+0x1a660>
   2b9cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b9d0:	bl	11258 <iswspace@plt>
   2b9d4:	cmp	r0, #0
   2b9d8:	movw	r0, #0
   2b9dc:	movne	r0, #1
   2b9e0:	str	r0, [sp, #48]	; 0x30
   2b9e4:	ldr	r0, [sp, #48]	; 0x30
   2b9e8:	str	r0, [sp, #56]	; 0x38
   2b9ec:	ldr	r0, [sp, #56]	; 0x38
   2b9f0:	tst	r0, #1
   2b9f4:	beq	2ba18 <__assert_fail@plt+0x1a694>
   2b9f8:	b	2b9fc <__assert_fail@plt+0x1a678>
   2b9fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ba00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ba04:	add	r0, r1, r0
   2ba08:	str	r0, [fp, #-52]	; 0xffffffcc
   2ba0c:	movw	r0, #0
   2ba10:	strb	r0, [fp, #-56]	; 0xffffffc8
   2ba14:	b	2b990 <__assert_fail@plt+0x1a60c>
   2ba18:	ldr	r0, [fp, #-12]
   2ba1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ba20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ba24:	str	r0, [sp, #44]	; 0x2c
   2ba28:	mov	r0, r2
   2ba2c:	str	r1, [sp, #40]	; 0x28
   2ba30:	bl	11270 <strlen@plt>
   2ba34:	add	r2, r0, #1
   2ba38:	ldr	r0, [sp, #44]	; 0x2c
   2ba3c:	ldr	r1, [sp, #40]	; 0x28
   2ba40:	bl	11108 <memmove@plt>
   2ba44:	ldr	r0, [fp, #-8]
   2ba48:	cmp	r0, #1
   2ba4c:	beq	2bc20 <__assert_fail@plt+0x1a89c>
   2ba50:	movw	r0, #0
   2ba54:	str	r0, [sp, #76]	; 0x4c
   2ba58:	ldr	r0, [fp, #-12]
   2ba5c:	str	r0, [fp, #-52]	; 0xffffffcc
   2ba60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ba64:	ldr	r1, [fp, #-12]
   2ba68:	str	r0, [sp, #36]	; 0x24
   2ba6c:	mov	r0, r1
   2ba70:	bl	11270 <strlen@plt>
   2ba74:	ldr	r1, [sp, #36]	; 0x24
   2ba78:	add	r0, r1, r0
   2ba7c:	str	r0, [fp, #-72]	; 0xffffffb8
   2ba80:	movw	r0, #0
   2ba84:	strb	r0, [fp, #-68]	; 0xffffffbc
   2ba88:	sub	r1, fp, #72	; 0x48
   2ba8c:	add	r1, r1, #8
   2ba90:	str	r0, [sp, #32]
   2ba94:	mov	r0, r1
   2ba98:	ldr	r1, [sp, #32]
   2ba9c:	and	r1, r1, #255	; 0xff
   2baa0:	movw	r2, #8
   2baa4:	bl	112b8 <memset@plt>
   2baa8:	ldr	r0, [sp, #32]
   2baac:	strb	r0, [fp, #-56]	; 0xffffffc8
   2bab0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2bab4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2bab8:	cmp	r0, r1
   2babc:	movw	r0, #0
   2bac0:	str	r0, [sp, #28]
   2bac4:	bcs	2bad8 <__assert_fail@plt+0x1a754>
   2bac8:	sub	r0, fp, #72	; 0x48
   2bacc:	bl	2fe00 <__assert_fail@plt+0x1ea7c>
   2bad0:	movw	r0, #1
   2bad4:	str	r0, [sp, #28]
   2bad8:	ldr	r0, [sp, #28]
   2badc:	tst	r0, #1
   2bae0:	beq	2bc04 <__assert_fail@plt+0x1a880>
   2bae4:	ldr	r0, [sp, #76]	; 0x4c
   2bae8:	cmp	r0, #0
   2baec:	bne	2bb10 <__assert_fail@plt+0x1a78c>
   2baf0:	ldrb	r0, [fp, #-44]	; 0xffffffd4
   2baf4:	tst	r0, #1
   2baf8:	beq	2bb10 <__assert_fail@plt+0x1a78c>
   2bafc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bb00:	bl	11258 <iswspace@plt>
   2bb04:	cmp	r0, #0
   2bb08:	beq	2bb10 <__assert_fail@plt+0x1a78c>
   2bb0c:	b	2bbe8 <__assert_fail@plt+0x1a864>
   2bb10:	ldr	r0, [sp, #76]	; 0x4c
   2bb14:	cmp	r0, #0
   2bb18:	bne	2bb44 <__assert_fail@plt+0x1a7c0>
   2bb1c:	ldrb	r0, [fp, #-44]	; 0xffffffd4
   2bb20:	tst	r0, #1
   2bb24:	beq	2bb38 <__assert_fail@plt+0x1a7b4>
   2bb28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bb2c:	bl	11258 <iswspace@plt>
   2bb30:	cmp	r0, #0
   2bb34:	bne	2bb44 <__assert_fail@plt+0x1a7c0>
   2bb38:	movw	r0, #1
   2bb3c:	str	r0, [sp, #76]	; 0x4c
   2bb40:	b	2bbe8 <__assert_fail@plt+0x1a864>
   2bb44:	ldr	r0, [sp, #76]	; 0x4c
   2bb48:	cmp	r0, #1
   2bb4c:	bne	2bb70 <__assert_fail@plt+0x1a7ec>
   2bb50:	ldrb	r0, [fp, #-44]	; 0xffffffd4
   2bb54:	tst	r0, #1
   2bb58:	beq	2bb6c <__assert_fail@plt+0x1a7e8>
   2bb5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bb60:	bl	11258 <iswspace@plt>
   2bb64:	cmp	r0, #0
   2bb68:	bne	2bb70 <__assert_fail@plt+0x1a7ec>
   2bb6c:	b	2bbe8 <__assert_fail@plt+0x1a864>
   2bb70:	ldr	r0, [sp, #76]	; 0x4c
   2bb74:	cmp	r0, #1
   2bb78:	bne	2bbac <__assert_fail@plt+0x1a828>
   2bb7c:	ldrb	r0, [fp, #-44]	; 0xffffffd4
   2bb80:	tst	r0, #1
   2bb84:	beq	2bbac <__assert_fail@plt+0x1a828>
   2bb88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bb8c:	bl	11258 <iswspace@plt>
   2bb90:	cmp	r0, #0
   2bb94:	beq	2bbac <__assert_fail@plt+0x1a828>
   2bb98:	movw	r0, #2
   2bb9c:	str	r0, [sp, #76]	; 0x4c
   2bba0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2bba4:	str	r0, [sp, #72]	; 0x48
   2bba8:	b	2bbe4 <__assert_fail@plt+0x1a860>
   2bbac:	ldr	r0, [sp, #76]	; 0x4c
   2bbb0:	cmp	r0, #2
   2bbb4:	bne	2bbd8 <__assert_fail@plt+0x1a854>
   2bbb8:	ldrb	r0, [fp, #-44]	; 0xffffffd4
   2bbbc:	tst	r0, #1
   2bbc0:	beq	2bbd8 <__assert_fail@plt+0x1a854>
   2bbc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bbc8:	bl	11258 <iswspace@plt>
   2bbcc:	cmp	r0, #0
   2bbd0:	beq	2bbd8 <__assert_fail@plt+0x1a854>
   2bbd4:	b	2bbe0 <__assert_fail@plt+0x1a85c>
   2bbd8:	movw	r0, #1
   2bbdc:	str	r0, [sp, #76]	; 0x4c
   2bbe0:	b	2bbe4 <__assert_fail@plt+0x1a860>
   2bbe4:	b	2bbe8 <__assert_fail@plt+0x1a864>
   2bbe8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2bbec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2bbf0:	add	r0, r1, r0
   2bbf4:	str	r0, [fp, #-52]	; 0xffffffcc
   2bbf8:	movw	r0, #0
   2bbfc:	strb	r0, [fp, #-56]	; 0xffffffc8
   2bc00:	b	2bab0 <__assert_fail@plt+0x1a72c>
   2bc04:	ldr	r0, [sp, #76]	; 0x4c
   2bc08:	cmp	r0, #2
   2bc0c:	bne	2bc1c <__assert_fail@plt+0x1a898>
   2bc10:	ldr	r0, [sp, #72]	; 0x48
   2bc14:	movw	r1, #0
   2bc18:	strb	r1, [r0]
   2bc1c:	b	2bc20 <__assert_fail@plt+0x1a89c>
   2bc20:	b	2bd84 <__assert_fail@plt+0x1aa00>
   2bc24:	ldr	r0, [fp, #-8]
   2bc28:	cmp	r0, #0
   2bc2c:	beq	2bcd0 <__assert_fail@plt+0x1a94c>
   2bc30:	ldr	r0, [fp, #-12]
   2bc34:	str	r0, [sp, #68]	; 0x44
   2bc38:	ldr	r0, [sp, #68]	; 0x44
   2bc3c:	ldrb	r0, [r0]
   2bc40:	cmp	r0, #0
   2bc44:	movw	r0, #0
   2bc48:	str	r0, [sp, #24]
   2bc4c:	beq	2bc84 <__assert_fail@plt+0x1a900>
   2bc50:	bl	11240 <__ctype_b_loc@plt>
   2bc54:	ldr	r0, [r0]
   2bc58:	ldr	lr, [sp, #68]	; 0x44
   2bc5c:	ldrb	lr, [lr]
   2bc60:	mov	r1, lr
   2bc64:	add	r0, r0, lr, lsl #1
   2bc68:	ldrh	r0, [r0]
   2bc6c:	and	r0, r0, #8192	; 0x2000
   2bc70:	cmp	r0, #0
   2bc74:	movw	r0, #0
   2bc78:	movne	r0, #1
   2bc7c:	str	r1, [sp, #20]
   2bc80:	str	r0, [sp, #24]
   2bc84:	ldr	r0, [sp, #24]
   2bc88:	tst	r0, #1
   2bc8c:	beq	2bca4 <__assert_fail@plt+0x1a920>
   2bc90:	b	2bc94 <__assert_fail@plt+0x1a910>
   2bc94:	ldr	r0, [sp, #68]	; 0x44
   2bc98:	add	r0, r0, #1
   2bc9c:	str	r0, [sp, #68]	; 0x44
   2bca0:	b	2bc38 <__assert_fail@plt+0x1a8b4>
   2bca4:	ldr	r0, [fp, #-12]
   2bca8:	ldr	r1, [sp, #68]	; 0x44
   2bcac:	ldr	r2, [sp, #68]	; 0x44
   2bcb0:	str	r0, [sp, #16]
   2bcb4:	mov	r0, r2
   2bcb8:	str	r1, [sp, #12]
   2bcbc:	bl	11270 <strlen@plt>
   2bcc0:	add	r2, r0, #1
   2bcc4:	ldr	r0, [sp, #16]
   2bcc8:	ldr	r1, [sp, #12]
   2bccc:	bl	11108 <memmove@plt>
   2bcd0:	ldr	r0, [fp, #-8]
   2bcd4:	cmp	r0, #1
   2bcd8:	beq	2bd80 <__assert_fail@plt+0x1a9fc>
   2bcdc:	ldr	r0, [fp, #-12]
   2bce0:	ldr	r1, [fp, #-12]
   2bce4:	str	r0, [sp, #8]
   2bce8:	mov	r0, r1
   2bcec:	bl	11270 <strlen@plt>
   2bcf0:	ldr	r1, [sp, #8]
   2bcf4:	add	r0, r1, r0
   2bcf8:	mvn	r1, #0
   2bcfc:	add	r0, r0, r1
   2bd00:	str	r0, [sp, #68]	; 0x44
   2bd04:	ldr	r0, [sp, #68]	; 0x44
   2bd08:	ldr	r1, [fp, #-12]
   2bd0c:	cmp	r0, r1
   2bd10:	movw	r0, #0
   2bd14:	str	r0, [sp, #4]
   2bd18:	bcc	2bd50 <__assert_fail@plt+0x1a9cc>
   2bd1c:	bl	11240 <__ctype_b_loc@plt>
   2bd20:	ldr	r0, [r0]
   2bd24:	ldr	lr, [sp, #68]	; 0x44
   2bd28:	ldrb	lr, [lr]
   2bd2c:	mov	r1, lr
   2bd30:	add	r0, r0, lr, lsl #1
   2bd34:	ldrh	r0, [r0]
   2bd38:	and	r0, r0, #8192	; 0x2000
   2bd3c:	cmp	r0, #0
   2bd40:	movw	r0, #0
   2bd44:	movne	r0, #1
   2bd48:	str	r1, [sp]
   2bd4c:	str	r0, [sp, #4]
   2bd50:	ldr	r0, [sp, #4]
   2bd54:	tst	r0, #1
   2bd58:	beq	2bd7c <__assert_fail@plt+0x1a9f8>
   2bd5c:	ldr	r0, [sp, #68]	; 0x44
   2bd60:	movw	r1, #0
   2bd64:	strb	r1, [r0]
   2bd68:	ldr	r0, [sp, #68]	; 0x44
   2bd6c:	mvn	r1, #0
   2bd70:	add	r0, r0, r1
   2bd74:	str	r0, [sp, #68]	; 0x44
   2bd78:	b	2bd04 <__assert_fail@plt+0x1a980>
   2bd7c:	b	2bd80 <__assert_fail@plt+0x1a9fc>
   2bd80:	b	2bd84 <__assert_fail@plt+0x1aa00>
   2bd84:	ldr	r0, [fp, #-12]
   2bd88:	mov	sp, fp
   2bd8c:	pop	{fp, pc}
   2bd90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bd94:	add	fp, sp, #28
   2bd98:	sub	sp, sp, #260	; 0x104
   2bd9c:	ldr	ip, [fp, #12]
   2bda0:	ldr	lr, [fp, #8]
   2bda4:	str	r0, [fp, #-32]	; 0xffffffe0
   2bda8:	str	r1, [fp, #-36]	; 0xffffffdc
   2bdac:	str	r2, [fp, #-40]	; 0xffffffd8
   2bdb0:	str	r3, [fp, #-44]	; 0xffffffd4
   2bdb4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bdb8:	movw	r1, #0
   2bdbc:	cmp	r0, r1
   2bdc0:	str	lr, [fp, #-48]	; 0xffffffd0
   2bdc4:	str	ip, [fp, #-52]	; 0xffffffcc
   2bdc8:	beq	2be00 <__assert_fail@plt+0x1aa7c>
   2bdcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bdd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2bdd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bdd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2bddc:	movw	ip, #35740	; 0x8b9c
   2bde0:	movt	ip, #3
   2bde4:	str	r1, [fp, #-56]	; 0xffffffc8
   2bde8:	mov	r1, ip
   2bdec:	ldr	ip, [fp, #-56]	; 0xffffffc8
   2bdf0:	str	ip, [sp]
   2bdf4:	bl	11288 <fprintf@plt>
   2bdf8:	str	r0, [fp, #-60]	; 0xffffffc4
   2bdfc:	b	2be1c <__assert_fail@plt+0x1aa98>
   2be00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2be08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2be0c:	movw	r1, #35752	; 0x8ba8
   2be10:	movt	r1, #3
   2be14:	bl	11288 <fprintf@plt>
   2be18:	str	r0, [fp, #-64]	; 0xffffffc0
   2be1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be20:	movw	r1, #35759	; 0x8baf
   2be24:	movt	r1, #3
   2be28:	str	r0, [fp, #-68]	; 0xffffffbc
   2be2c:	mov	r0, r1
   2be30:	bl	11264 <gettext@plt>
   2be34:	movw	r1, #36477	; 0x8e7d
   2be38:	movt	r1, #3
   2be3c:	movw	r3, #2022	; 0x7e6
   2be40:	ldr	lr, [fp, #-68]	; 0xffffffbc
   2be44:	str	r0, [fp, #-72]	; 0xffffffb8
   2be48:	mov	r0, lr
   2be4c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2be50:	bl	11288 <fprintf@plt>
   2be54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2be58:	movw	r2, #16664	; 0x4118
   2be5c:	movt	r2, #3
   2be60:	str	r0, [fp, #-76]	; 0xffffffb4
   2be64:	mov	r0, r2
   2be68:	str	r2, [fp, #-80]	; 0xffffffb0
   2be6c:	bl	110a8 <fputs_unlocked@plt>
   2be70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2be74:	movw	r2, #35763	; 0x8bb3
   2be78:	movt	r2, #3
   2be7c:	str	r0, [fp, #-84]	; 0xffffffac
   2be80:	mov	r0, r2
   2be84:	str	r1, [fp, #-88]	; 0xffffffa8
   2be88:	bl	11264 <gettext@plt>
   2be8c:	movw	r2, #35934	; 0x8c5e
   2be90:	movt	r2, #3
   2be94:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2be98:	str	r0, [fp, #-92]	; 0xffffffa4
   2be9c:	mov	r0, r1
   2bea0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2bea4:	bl	11288 <fprintf@plt>
   2bea8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2beac:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2beb0:	str	r0, [fp, #-96]	; 0xffffffa0
   2beb4:	mov	r0, r2
   2beb8:	bl	110a8 <fputs_unlocked@plt>
   2bebc:	ldr	r1, [fp, #12]
   2bec0:	cmp	r1, #9
   2bec4:	str	r0, [fp, #-100]	; 0xffffff9c
   2bec8:	str	r1, [fp, #-104]	; 0xffffff98
   2becc:	bhi	2c30c <__assert_fail@plt+0x1af88>
   2bed0:	add	r0, pc, #8
   2bed4:	ldr	r1, [fp, #-104]	; 0xffffff98
   2bed8:	ldr	r0, [r0, r1, lsl #2]
   2bedc:	mov	pc, r0
   2bee0:	andeq	fp, r2, r8, lsl #30
   2bee4:	andeq	fp, r2, ip, lsl #30
   2bee8:	andeq	fp, r2, r8, asr #30
   2beec:	andeq	fp, r2, ip, lsl #31
   2bef0:	andeq	fp, r2, r8, ror #31
   2bef4:	andeq	ip, r2, r0, asr r0
   2bef8:	andeq	ip, r2, r4, asr #1
   2befc:	andeq	ip, r2, r4, asr #2
   2bf00:	ldrdeq	ip, [r2], -r0
   2bf04:	andeq	ip, r2, r8, ror #4
   2bf08:	b	2c3ac <__assert_fail@plt+0x1b028>
   2bf0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bf10:	movw	r1, #35968	; 0x8c80
   2bf14:	movt	r1, #3
   2bf18:	str	r0, [fp, #-108]	; 0xffffff94
   2bf1c:	mov	r0, r1
   2bf20:	bl	11264 <gettext@plt>
   2bf24:	ldr	r1, [fp, #8]
   2bf28:	ldr	r2, [r1]
   2bf2c:	ldr	r1, [fp, #-108]	; 0xffffff94
   2bf30:	str	r0, [fp, #-112]	; 0xffffff90
   2bf34:	mov	r0, r1
   2bf38:	ldr	r1, [fp, #-112]	; 0xffffff90
   2bf3c:	bl	11288 <fprintf@plt>
   2bf40:	str	r0, [fp, #-116]	; 0xffffff8c
   2bf44:	b	2c3ac <__assert_fail@plt+0x1b028>
   2bf48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bf4c:	movw	r1, #35984	; 0x8c90
   2bf50:	movt	r1, #3
   2bf54:	str	r0, [fp, #-120]	; 0xffffff88
   2bf58:	mov	r0, r1
   2bf5c:	bl	11264 <gettext@plt>
   2bf60:	ldr	r1, [fp, #8]
   2bf64:	ldr	r2, [r1]
   2bf68:	ldr	r1, [fp, #8]
   2bf6c:	ldr	r3, [r1, #4]
   2bf70:	ldr	r1, [fp, #-120]	; 0xffffff88
   2bf74:	str	r0, [fp, #-124]	; 0xffffff84
   2bf78:	mov	r0, r1
   2bf7c:	ldr	r1, [fp, #-124]	; 0xffffff84
   2bf80:	bl	11288 <fprintf@plt>
   2bf84:	str	r0, [fp, #-128]	; 0xffffff80
   2bf88:	b	2c3ac <__assert_fail@plt+0x1b028>
   2bf8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bf90:	movw	r1, #36007	; 0x8ca7
   2bf94:	movt	r1, #3
   2bf98:	str	r0, [fp, #-132]	; 0xffffff7c
   2bf9c:	mov	r0, r1
   2bfa0:	bl	11264 <gettext@plt>
   2bfa4:	ldr	r1, [fp, #8]
   2bfa8:	ldr	r2, [r1]
   2bfac:	ldr	r1, [fp, #8]
   2bfb0:	ldr	r3, [r1, #4]
   2bfb4:	ldr	r1, [fp, #8]
   2bfb8:	ldr	r1, [r1, #8]
   2bfbc:	ldr	lr, [fp, #-132]	; 0xffffff7c
   2bfc0:	str	r0, [fp, #-136]	; 0xffffff78
   2bfc4:	mov	r0, lr
   2bfc8:	ldr	ip, [fp, #-136]	; 0xffffff78
   2bfcc:	str	r1, [fp, #-140]	; 0xffffff74
   2bfd0:	mov	r1, ip
   2bfd4:	ldr	r4, [fp, #-140]	; 0xffffff74
   2bfd8:	str	r4, [sp]
   2bfdc:	bl	11288 <fprintf@plt>
   2bfe0:	str	r0, [sp, #144]	; 0x90
   2bfe4:	b	2c3ac <__assert_fail@plt+0x1b028>
   2bfe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bfec:	movw	r1, #36035	; 0x8cc3
   2bff0:	movt	r1, #3
   2bff4:	str	r0, [sp, #140]	; 0x8c
   2bff8:	mov	r0, r1
   2bffc:	bl	11264 <gettext@plt>
   2c000:	ldr	r1, [fp, #8]
   2c004:	ldr	r2, [r1]
   2c008:	ldr	r1, [fp, #8]
   2c00c:	ldr	r3, [r1, #4]
   2c010:	ldr	r1, [fp, #8]
   2c014:	ldr	r1, [r1, #8]
   2c018:	ldr	lr, [fp, #8]
   2c01c:	ldr	lr, [lr, #12]
   2c020:	ldr	ip, [sp, #140]	; 0x8c
   2c024:	str	r0, [sp, #136]	; 0x88
   2c028:	mov	r0, ip
   2c02c:	ldr	r4, [sp, #136]	; 0x88
   2c030:	str	r1, [sp, #132]	; 0x84
   2c034:	mov	r1, r4
   2c038:	ldr	r5, [sp, #132]	; 0x84
   2c03c:	str	r5, [sp]
   2c040:	str	lr, [sp, #4]
   2c044:	bl	11288 <fprintf@plt>
   2c048:	str	r0, [sp, #128]	; 0x80
   2c04c:	b	2c3ac <__assert_fail@plt+0x1b028>
   2c050:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c054:	movw	r1, #36067	; 0x8ce3
   2c058:	movt	r1, #3
   2c05c:	str	r0, [sp, #124]	; 0x7c
   2c060:	mov	r0, r1
   2c064:	bl	11264 <gettext@plt>
   2c068:	ldr	r1, [fp, #8]
   2c06c:	ldr	r2, [r1]
   2c070:	ldr	r1, [fp, #8]
   2c074:	ldr	r3, [r1, #4]
   2c078:	ldr	r1, [fp, #8]
   2c07c:	ldr	r1, [r1, #8]
   2c080:	ldr	lr, [fp, #8]
   2c084:	ldr	lr, [lr, #12]
   2c088:	ldr	ip, [fp, #8]
   2c08c:	ldr	ip, [ip, #16]
   2c090:	ldr	r4, [sp, #124]	; 0x7c
   2c094:	str	r0, [sp, #120]	; 0x78
   2c098:	mov	r0, r4
   2c09c:	ldr	r5, [sp, #120]	; 0x78
   2c0a0:	str	r1, [sp, #116]	; 0x74
   2c0a4:	mov	r1, r5
   2c0a8:	ldr	r6, [sp, #116]	; 0x74
   2c0ac:	str	r6, [sp]
   2c0b0:	str	lr, [sp, #4]
   2c0b4:	str	ip, [sp, #8]
   2c0b8:	bl	11288 <fprintf@plt>
   2c0bc:	str	r0, [sp, #112]	; 0x70
   2c0c0:	b	2c3ac <__assert_fail@plt+0x1b028>
   2c0c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c0c8:	movw	r1, #36103	; 0x8d07
   2c0cc:	movt	r1, #3
   2c0d0:	str	r0, [sp, #108]	; 0x6c
   2c0d4:	mov	r0, r1
   2c0d8:	bl	11264 <gettext@plt>
   2c0dc:	ldr	r1, [fp, #8]
   2c0e0:	ldr	r2, [r1]
   2c0e4:	ldr	r1, [fp, #8]
   2c0e8:	ldr	r3, [r1, #4]
   2c0ec:	ldr	r1, [fp, #8]
   2c0f0:	ldr	r1, [r1, #8]
   2c0f4:	ldr	lr, [fp, #8]
   2c0f8:	ldr	lr, [lr, #12]
   2c0fc:	ldr	ip, [fp, #8]
   2c100:	ldr	ip, [ip, #16]
   2c104:	ldr	r4, [fp, #8]
   2c108:	ldr	r4, [r4, #20]
   2c10c:	ldr	r5, [sp, #108]	; 0x6c
   2c110:	str	r0, [sp, #104]	; 0x68
   2c114:	mov	r0, r5
   2c118:	ldr	r6, [sp, #104]	; 0x68
   2c11c:	str	r1, [sp, #100]	; 0x64
   2c120:	mov	r1, r6
   2c124:	ldr	r7, [sp, #100]	; 0x64
   2c128:	str	r7, [sp]
   2c12c:	str	lr, [sp, #4]
   2c130:	str	ip, [sp, #8]
   2c134:	str	r4, [sp, #12]
   2c138:	bl	11288 <fprintf@plt>
   2c13c:	str	r0, [sp, #96]	; 0x60
   2c140:	b	2c3ac <__assert_fail@plt+0x1b028>
   2c144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c148:	movw	r1, #36143	; 0x8d2f
   2c14c:	movt	r1, #3
   2c150:	str	r0, [sp, #92]	; 0x5c
   2c154:	mov	r0, r1
   2c158:	bl	11264 <gettext@plt>
   2c15c:	ldr	r1, [fp, #8]
   2c160:	ldr	r2, [r1]
   2c164:	ldr	r1, [fp, #8]
   2c168:	ldr	r3, [r1, #4]
   2c16c:	ldr	r1, [fp, #8]
   2c170:	ldr	r1, [r1, #8]
   2c174:	ldr	lr, [fp, #8]
   2c178:	ldr	lr, [lr, #12]
   2c17c:	ldr	ip, [fp, #8]
   2c180:	ldr	ip, [ip, #16]
   2c184:	ldr	r4, [fp, #8]
   2c188:	ldr	r4, [r4, #20]
   2c18c:	ldr	r5, [fp, #8]
   2c190:	ldr	r5, [r5, #24]
   2c194:	ldr	r6, [sp, #92]	; 0x5c
   2c198:	str	r0, [sp, #88]	; 0x58
   2c19c:	mov	r0, r6
   2c1a0:	ldr	r7, [sp, #88]	; 0x58
   2c1a4:	str	r1, [sp, #84]	; 0x54
   2c1a8:	mov	r1, r7
   2c1ac:	ldr	r8, [sp, #84]	; 0x54
   2c1b0:	str	r8, [sp]
   2c1b4:	str	lr, [sp, #4]
   2c1b8:	str	ip, [sp, #8]
   2c1bc:	str	r4, [sp, #12]
   2c1c0:	str	r5, [sp, #16]
   2c1c4:	bl	11288 <fprintf@plt>
   2c1c8:	str	r0, [sp, #80]	; 0x50
   2c1cc:	b	2c3ac <__assert_fail@plt+0x1b028>
   2c1d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c1d4:	movw	r1, #36187	; 0x8d5b
   2c1d8:	movt	r1, #3
   2c1dc:	str	r0, [sp, #76]	; 0x4c
   2c1e0:	mov	r0, r1
   2c1e4:	bl	11264 <gettext@plt>
   2c1e8:	ldr	r1, [fp, #8]
   2c1ec:	ldr	r2, [r1]
   2c1f0:	ldr	r1, [fp, #8]
   2c1f4:	ldr	r3, [r1, #4]
   2c1f8:	ldr	r1, [fp, #8]
   2c1fc:	ldr	r1, [r1, #8]
   2c200:	ldr	lr, [fp, #8]
   2c204:	ldr	lr, [lr, #12]
   2c208:	ldr	ip, [fp, #8]
   2c20c:	ldr	ip, [ip, #16]
   2c210:	ldr	r4, [fp, #8]
   2c214:	ldr	r4, [r4, #20]
   2c218:	ldr	r5, [fp, #8]
   2c21c:	ldr	r5, [r5, #24]
   2c220:	ldr	r6, [fp, #8]
   2c224:	ldr	r6, [r6, #28]
   2c228:	ldr	r7, [sp, #76]	; 0x4c
   2c22c:	str	r0, [sp, #72]	; 0x48
   2c230:	mov	r0, r7
   2c234:	ldr	r8, [sp, #72]	; 0x48
   2c238:	str	r1, [sp, #68]	; 0x44
   2c23c:	mov	r1, r8
   2c240:	ldr	r9, [sp, #68]	; 0x44
   2c244:	str	r9, [sp]
   2c248:	str	lr, [sp, #4]
   2c24c:	str	ip, [sp, #8]
   2c250:	str	r4, [sp, #12]
   2c254:	str	r5, [sp, #16]
   2c258:	str	r6, [sp, #20]
   2c25c:	bl	11288 <fprintf@plt>
   2c260:	str	r0, [sp, #64]	; 0x40
   2c264:	b	2c3ac <__assert_fail@plt+0x1b028>
   2c268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c26c:	movw	r1, #36235	; 0x8d8b
   2c270:	movt	r1, #3
   2c274:	str	r0, [sp, #60]	; 0x3c
   2c278:	mov	r0, r1
   2c27c:	bl	11264 <gettext@plt>
   2c280:	ldr	r1, [fp, #8]
   2c284:	ldr	r2, [r1]
   2c288:	ldr	r1, [fp, #8]
   2c28c:	ldr	r3, [r1, #4]
   2c290:	ldr	r1, [fp, #8]
   2c294:	ldr	r1, [r1, #8]
   2c298:	ldr	lr, [fp, #8]
   2c29c:	ldr	lr, [lr, #12]
   2c2a0:	ldr	ip, [fp, #8]
   2c2a4:	ldr	ip, [ip, #16]
   2c2a8:	ldr	r4, [fp, #8]
   2c2ac:	ldr	r4, [r4, #20]
   2c2b0:	ldr	r5, [fp, #8]
   2c2b4:	ldr	r5, [r5, #24]
   2c2b8:	ldr	r6, [fp, #8]
   2c2bc:	ldr	r6, [r6, #28]
   2c2c0:	ldr	r7, [fp, #8]
   2c2c4:	ldr	r7, [r7, #32]
   2c2c8:	ldr	r8, [sp, #60]	; 0x3c
   2c2cc:	str	r0, [sp, #56]	; 0x38
   2c2d0:	mov	r0, r8
   2c2d4:	ldr	r9, [sp, #56]	; 0x38
   2c2d8:	str	r1, [sp, #52]	; 0x34
   2c2dc:	mov	r1, r9
   2c2e0:	ldr	sl, [sp, #52]	; 0x34
   2c2e4:	str	sl, [sp]
   2c2e8:	str	lr, [sp, #4]
   2c2ec:	str	ip, [sp, #8]
   2c2f0:	str	r4, [sp, #12]
   2c2f4:	str	r5, [sp, #16]
   2c2f8:	str	r6, [sp, #20]
   2c2fc:	str	r7, [sp, #24]
   2c300:	bl	11288 <fprintf@plt>
   2c304:	str	r0, [sp, #48]	; 0x30
   2c308:	b	2c3ac <__assert_fail@plt+0x1b028>
   2c30c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c310:	movw	r1, #36287	; 0x8dbf
   2c314:	movt	r1, #3
   2c318:	str	r0, [sp, #44]	; 0x2c
   2c31c:	mov	r0, r1
   2c320:	bl	11264 <gettext@plt>
   2c324:	ldr	r1, [fp, #8]
   2c328:	ldr	r2, [r1]
   2c32c:	ldr	r1, [fp, #8]
   2c330:	ldr	r3, [r1, #4]
   2c334:	ldr	r1, [fp, #8]
   2c338:	ldr	r1, [r1, #8]
   2c33c:	ldr	lr, [fp, #8]
   2c340:	ldr	lr, [lr, #12]
   2c344:	ldr	ip, [fp, #8]
   2c348:	ldr	ip, [ip, #16]
   2c34c:	ldr	r4, [fp, #8]
   2c350:	ldr	r4, [r4, #20]
   2c354:	ldr	r5, [fp, #8]
   2c358:	ldr	r5, [r5, #24]
   2c35c:	ldr	r6, [fp, #8]
   2c360:	ldr	r6, [r6, #28]
   2c364:	ldr	r7, [fp, #8]
   2c368:	ldr	r7, [r7, #32]
   2c36c:	ldr	r8, [sp, #44]	; 0x2c
   2c370:	str	r0, [sp, #40]	; 0x28
   2c374:	mov	r0, r8
   2c378:	ldr	r9, [sp, #40]	; 0x28
   2c37c:	str	r1, [sp, #36]	; 0x24
   2c380:	mov	r1, r9
   2c384:	ldr	sl, [sp, #36]	; 0x24
   2c388:	str	sl, [sp]
   2c38c:	str	lr, [sp, #4]
   2c390:	str	ip, [sp, #8]
   2c394:	str	r4, [sp, #12]
   2c398:	str	r5, [sp, #16]
   2c39c:	str	r6, [sp, #20]
   2c3a0:	str	r7, [sp, #24]
   2c3a4:	bl	11288 <fprintf@plt>
   2c3a8:	str	r0, [sp, #32]
   2c3ac:	sub	sp, fp, #28
   2c3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c3b4:	push	{fp, lr}
   2c3b8:	mov	fp, sp
   2c3bc:	sub	sp, sp, #32
   2c3c0:	ldr	ip, [fp, #8]
   2c3c4:	str	r0, [fp, #-4]
   2c3c8:	str	r1, [fp, #-8]
   2c3cc:	str	r2, [fp, #-12]
   2c3d0:	str	r3, [sp, #16]
   2c3d4:	movw	r0, #0
   2c3d8:	str	r0, [sp, #12]
   2c3dc:	str	ip, [sp, #8]
   2c3e0:	ldr	r0, [fp, #8]
   2c3e4:	ldr	r1, [sp, #12]
   2c3e8:	add	r0, r0, r1, lsl #2
   2c3ec:	ldr	r0, [r0]
   2c3f0:	movw	r1, #0
   2c3f4:	cmp	r0, r1
   2c3f8:	beq	2c410 <__assert_fail@plt+0x1b08c>
   2c3fc:	b	2c400 <__assert_fail@plt+0x1b07c>
   2c400:	ldr	r0, [sp, #12]
   2c404:	add	r0, r0, #1
   2c408:	str	r0, [sp, #12]
   2c40c:	b	2c3e0 <__assert_fail@plt+0x1b05c>
   2c410:	ldr	r0, [fp, #-4]
   2c414:	ldr	r1, [fp, #-8]
   2c418:	ldr	r2, [fp, #-12]
   2c41c:	ldr	r3, [sp, #16]
   2c420:	ldr	ip, [fp, #8]
   2c424:	ldr	lr, [sp, #12]
   2c428:	str	ip, [sp]
   2c42c:	str	lr, [sp, #4]
   2c430:	bl	2bd90 <__assert_fail@plt+0x1aa0c>
   2c434:	mov	sp, fp
   2c438:	pop	{fp, pc}
   2c43c:	push	{fp, lr}
   2c440:	mov	fp, sp
   2c444:	sub	sp, sp, #80	; 0x50
   2c448:	ldr	ip, [fp, #8]
   2c44c:	str	ip, [fp, #-4]
   2c450:	str	r0, [fp, #-8]
   2c454:	str	r1, [fp, #-12]
   2c458:	str	r2, [fp, #-16]
   2c45c:	str	r3, [fp, #-20]	; 0xffffffec
   2c460:	movw	r0, #0
   2c464:	str	r0, [fp, #-24]	; 0xffffffe8
   2c468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c46c:	cmp	r0, #10
   2c470:	movw	r0, #0
   2c474:	str	r0, [sp, #12]
   2c478:	bcs	2c4b0 <__assert_fail@plt+0x1b12c>
   2c47c:	ldr	r0, [fp, #-4]
   2c480:	add	r1, r0, #4
   2c484:	str	r1, [fp, #-4]
   2c488:	ldr	r0, [r0]
   2c48c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c490:	add	r2, sp, #16
   2c494:	add	r1, r2, r1, lsl #2
   2c498:	str	r0, [r1]
   2c49c:	movw	r1, #0
   2c4a0:	cmp	r0, r1
   2c4a4:	movw	r0, #0
   2c4a8:	movne	r0, #1
   2c4ac:	str	r0, [sp, #12]
   2c4b0:	ldr	r0, [sp, #12]
   2c4b4:	tst	r0, #1
   2c4b8:	beq	2c4d0 <__assert_fail@plt+0x1b14c>
   2c4bc:	b	2c4c0 <__assert_fail@plt+0x1b13c>
   2c4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c4c4:	add	r0, r0, #1
   2c4c8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c4cc:	b	2c468 <__assert_fail@plt+0x1b0e4>
   2c4d0:	add	r0, sp, #16
   2c4d4:	ldr	r1, [fp, #-8]
   2c4d8:	ldr	r2, [fp, #-12]
   2c4dc:	ldr	r3, [fp, #-16]
   2c4e0:	ldr	ip, [fp, #-20]	; 0xffffffec
   2c4e4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   2c4e8:	str	r0, [sp, #8]
   2c4ec:	mov	r0, r1
   2c4f0:	mov	r1, r2
   2c4f4:	mov	r2, r3
   2c4f8:	mov	r3, ip
   2c4fc:	ldr	ip, [sp, #8]
   2c500:	str	ip, [sp]
   2c504:	str	lr, [sp, #4]
   2c508:	bl	2bd90 <__assert_fail@plt+0x1aa0c>
   2c50c:	mov	sp, fp
   2c510:	pop	{fp, pc}
   2c514:	push	{fp, lr}
   2c518:	mov	fp, sp
   2c51c:	sub	sp, sp, #32
   2c520:	str	r0, [fp, #-4]
   2c524:	str	r1, [fp, #-8]
   2c528:	str	r2, [fp, #-12]
   2c52c:	str	r3, [sp, #16]
   2c530:	add	r0, fp, #8
   2c534:	str	r0, [sp, #12]
   2c538:	ldr	r0, [fp, #-4]
   2c53c:	ldr	r1, [fp, #-8]
   2c540:	ldr	r2, [fp, #-12]
   2c544:	ldr	r3, [sp, #16]
   2c548:	ldr	ip, [sp, #12]
   2c54c:	mov	lr, sp
   2c550:	str	ip, [lr]
   2c554:	bl	2c43c <__assert_fail@plt+0x1b0b8>
   2c558:	add	r0, sp, #12
   2c55c:	str	r0, [sp, #8]
   2c560:	mov	sp, fp
   2c564:	pop	{fp, pc}
   2c568:	push	{fp, lr}
   2c56c:	mov	fp, sp
   2c570:	sub	sp, sp, #16
   2c574:	movw	r0, #41356	; 0xa18c
   2c578:	movt	r0, #4
   2c57c:	ldr	r1, [r0]
   2c580:	movw	r0, #16664	; 0x4118
   2c584:	movt	r0, #3
   2c588:	bl	110a8 <fputs_unlocked@plt>
   2c58c:	movw	r1, #36347	; 0x8dfb
   2c590:	movt	r1, #3
   2c594:	str	r0, [fp, #-4]
   2c598:	mov	r0, r1
   2c59c:	bl	11264 <gettext@plt>
   2c5a0:	movw	r1, #36367	; 0x8e0f
   2c5a4:	movt	r1, #3
   2c5a8:	bl	110e4 <printf@plt>
   2c5ac:	movw	r1, #36389	; 0x8e25
   2c5b0:	movt	r1, #3
   2c5b4:	str	r0, [sp, #8]
   2c5b8:	mov	r0, r1
   2c5bc:	bl	11264 <gettext@plt>
   2c5c0:	movw	r1, #16796	; 0x419c
   2c5c4:	movt	r1, #3
   2c5c8:	movw	r2, #17003	; 0x426b
   2c5cc:	movt	r2, #3
   2c5d0:	bl	110e4 <printf@plt>
   2c5d4:	movw	r1, #36409	; 0x8e39
   2c5d8:	movt	r1, #3
   2c5dc:	str	r0, [sp, #4]
   2c5e0:	mov	r0, r1
   2c5e4:	bl	11264 <gettext@plt>
   2c5e8:	movw	r1, #36448	; 0x8e60
   2c5ec:	movt	r1, #3
   2c5f0:	bl	110e4 <printf@plt>
   2c5f4:	str	r0, [sp]
   2c5f8:	mov	sp, fp
   2c5fc:	pop	{fp, pc}
   2c600:	push	{fp, lr}
   2c604:	mov	fp, sp
   2c608:	sub	sp, sp, #16
   2c60c:	str	r0, [fp, #-4]
   2c610:	str	r1, [sp, #8]
   2c614:	str	r2, [sp, #4]
   2c618:	ldr	r0, [fp, #-4]
   2c61c:	ldr	r1, [sp, #8]
   2c620:	ldr	r2, [sp, #4]
   2c624:	bl	2c630 <__assert_fail@plt+0x1b2ac>
   2c628:	mov	sp, fp
   2c62c:	pop	{fp, pc}
   2c630:	push	{fp, lr}
   2c634:	mov	fp, sp
   2c638:	sub	sp, sp, #16
   2c63c:	str	r0, [fp, #-4]
   2c640:	str	r1, [sp, #8]
   2c644:	str	r2, [sp, #4]
   2c648:	ldr	r0, [fp, #-4]
   2c64c:	ldr	r1, [sp, #8]
   2c650:	ldr	r2, [sp, #4]
   2c654:	bl	315b4 <__assert_fail@plt+0x20230>
   2c658:	str	r0, [sp]
   2c65c:	ldr	r0, [sp]
   2c660:	movw	r1, #0
   2c664:	cmp	r0, r1
   2c668:	bne	2c698 <__assert_fail@plt+0x1b314>
   2c66c:	ldr	r0, [fp, #-4]
   2c670:	movw	r1, #0
   2c674:	cmp	r0, r1
   2c678:	beq	2c694 <__assert_fail@plt+0x1b310>
   2c67c:	ldr	r0, [sp, #8]
   2c680:	cmp	r0, #0
   2c684:	beq	2c698 <__assert_fail@plt+0x1b314>
   2c688:	ldr	r0, [sp, #4]
   2c68c:	cmp	r0, #0
   2c690:	beq	2c698 <__assert_fail@plt+0x1b314>
   2c694:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2c698:	ldr	r0, [sp]
   2c69c:	mov	sp, fp
   2c6a0:	pop	{fp, pc}
   2c6a4:	push	{fp, lr}
   2c6a8:	mov	fp, sp
   2c6ac:	sub	sp, sp, #8
   2c6b0:	str	r0, [sp, #4]
   2c6b4:	ldr	r0, [sp, #4]
   2c6b8:	bl	2f68c <__assert_fail@plt+0x1e308>
   2c6bc:	bl	2c6c8 <__assert_fail@plt+0x1b344>
   2c6c0:	mov	sp, fp
   2c6c4:	pop	{fp, pc}
   2c6c8:	push	{fp, lr}
   2c6cc:	mov	fp, sp
   2c6d0:	sub	sp, sp, #8
   2c6d4:	str	r0, [sp, #4]
   2c6d8:	ldr	r0, [sp, #4]
   2c6dc:	movw	r1, #0
   2c6e0:	cmp	r0, r1
   2c6e4:	bne	2c6ec <__assert_fail@plt+0x1b368>
   2c6e8:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2c6ec:	ldr	r0, [sp, #4]
   2c6f0:	mov	sp, fp
   2c6f4:	pop	{fp, pc}
   2c6f8:	push	{fp, lr}
   2c6fc:	mov	fp, sp
   2c700:	sub	sp, sp, #8
   2c704:	str	r0, [sp, #4]
   2c708:	ldr	r0, [sp, #4]
   2c70c:	bl	2fbec <__assert_fail@plt+0x1e868>
   2c710:	bl	2c6c8 <__assert_fail@plt+0x1b344>
   2c714:	mov	sp, fp
   2c718:	pop	{fp, pc}
   2c71c:	push	{fp, lr}
   2c720:	mov	fp, sp
   2c724:	sub	sp, sp, #8
   2c728:	str	r0, [sp, #4]
   2c72c:	ldr	r0, [sp, #4]
   2c730:	bl	2c6a4 <__assert_fail@plt+0x1b320>
   2c734:	mov	sp, fp
   2c738:	pop	{fp, pc}
   2c73c:	push	{fp, lr}
   2c740:	mov	fp, sp
   2c744:	sub	sp, sp, #16
   2c748:	str	r0, [fp, #-4]
   2c74c:	str	r1, [sp, #8]
   2c750:	ldr	r0, [fp, #-4]
   2c754:	ldr	r1, [sp, #8]
   2c758:	bl	2f6fc <__assert_fail@plt+0x1e378>
   2c75c:	str	r0, [sp, #4]
   2c760:	ldr	r0, [sp, #4]
   2c764:	movw	r1, #0
   2c768:	cmp	r0, r1
   2c76c:	bne	2c790 <__assert_fail@plt+0x1b40c>
   2c770:	ldr	r0, [fp, #-4]
   2c774:	movw	r1, #0
   2c778:	cmp	r0, r1
   2c77c:	beq	2c78c <__assert_fail@plt+0x1b408>
   2c780:	ldr	r0, [sp, #8]
   2c784:	cmp	r0, #0
   2c788:	beq	2c790 <__assert_fail@plt+0x1b40c>
   2c78c:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2c790:	ldr	r0, [sp, #4]
   2c794:	mov	sp, fp
   2c798:	pop	{fp, pc}
   2c79c:	push	{fp, lr}
   2c7a0:	mov	fp, sp
   2c7a4:	sub	sp, sp, #8
   2c7a8:	str	r0, [sp, #4]
   2c7ac:	str	r1, [sp]
   2c7b0:	ldr	r0, [sp, #4]
   2c7b4:	ldr	r1, [sp]
   2c7b8:	bl	2fc2c <__assert_fail@plt+0x1e8a8>
   2c7bc:	bl	2c6c8 <__assert_fail@plt+0x1b344>
   2c7c0:	mov	sp, fp
   2c7c4:	pop	{fp, pc}
   2c7c8:	push	{fp, lr}
   2c7cc:	mov	fp, sp
   2c7d0:	sub	sp, sp, #16
   2c7d4:	str	r0, [fp, #-4]
   2c7d8:	str	r1, [sp, #8]
   2c7dc:	str	r2, [sp, #4]
   2c7e0:	ldr	r0, [fp, #-4]
   2c7e4:	ldr	r1, [sp, #8]
   2c7e8:	ldr	r2, [sp, #4]
   2c7ec:	bl	2fd24 <__assert_fail@plt+0x1e9a0>
   2c7f0:	bl	2c6c8 <__assert_fail@plt+0x1b344>
   2c7f4:	mov	sp, fp
   2c7f8:	pop	{fp, pc}
   2c7fc:	push	{fp, lr}
   2c800:	mov	fp, sp
   2c804:	sub	sp, sp, #8
   2c808:	str	r0, [sp, #4]
   2c80c:	str	r1, [sp]
   2c810:	ldr	r1, [sp, #4]
   2c814:	ldr	r2, [sp]
   2c818:	movw	r0, #0
   2c81c:	bl	2c630 <__assert_fail@plt+0x1b2ac>
   2c820:	mov	sp, fp
   2c824:	pop	{fp, pc}
   2c828:	push	{fp, lr}
   2c82c:	mov	fp, sp
   2c830:	sub	sp, sp, #8
   2c834:	str	r0, [sp, #4]
   2c838:	str	r1, [sp]
   2c83c:	ldr	r1, [sp, #4]
   2c840:	ldr	r2, [sp]
   2c844:	movw	r0, #0
   2c848:	bl	2c7c8 <__assert_fail@plt+0x1b444>
   2c84c:	mov	sp, fp
   2c850:	pop	{fp, pc}
   2c854:	push	{fp, lr}
   2c858:	mov	fp, sp
   2c85c:	sub	sp, sp, #8
   2c860:	str	r0, [sp, #4]
   2c864:	str	r1, [sp]
   2c868:	ldr	r0, [sp, #4]
   2c86c:	ldr	r1, [sp]
   2c870:	movw	r2, #1
   2c874:	bl	2c880 <__assert_fail@plt+0x1b4fc>
   2c878:	mov	sp, fp
   2c87c:	pop	{fp, pc}
   2c880:	push	{fp, lr}
   2c884:	mov	fp, sp
   2c888:	sub	sp, sp, #16
   2c88c:	str	r0, [fp, #-4]
   2c890:	str	r1, [sp, #8]
   2c894:	str	r2, [sp, #4]
   2c898:	ldr	r0, [sp, #8]
   2c89c:	ldr	r0, [r0]
   2c8a0:	str	r0, [sp]
   2c8a4:	ldr	r0, [fp, #-4]
   2c8a8:	movw	r1, #0
   2c8ac:	cmp	r0, r1
   2c8b0:	bne	2c8fc <__assert_fail@plt+0x1b578>
   2c8b4:	ldr	r0, [sp]
   2c8b8:	cmp	r0, #0
   2c8bc:	bne	2c8f8 <__assert_fail@plt+0x1b574>
   2c8c0:	ldr	r0, [sp, #4]
   2c8c4:	movw	r1, #64	; 0x40
   2c8c8:	udiv	r0, r1, r0
   2c8cc:	str	r0, [sp]
   2c8d0:	ldr	r0, [sp]
   2c8d4:	cmp	r0, #0
   2c8d8:	movw	r0, #0
   2c8dc:	movne	r0, #1
   2c8e0:	mvn	r1, #0
   2c8e4:	eor	r0, r0, r1
   2c8e8:	and	r0, r0, #1
   2c8ec:	ldr	r1, [sp]
   2c8f0:	add	r0, r1, r0
   2c8f4:	str	r0, [sp]
   2c8f8:	b	2c92c <__assert_fail@plt+0x1b5a8>
   2c8fc:	ldr	r0, [sp]
   2c900:	ldr	r1, [sp]
   2c904:	lsr	r1, r1, #1
   2c908:	add	r1, r1, #1
   2c90c:	adds	r0, r0, r1
   2c910:	mov	r1, #0
   2c914:	adc	r1, r1, #0
   2c918:	str	r0, [sp]
   2c91c:	tst	r1, #1
   2c920:	beq	2c928 <__assert_fail@plt+0x1b5a4>
   2c924:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2c928:	b	2c92c <__assert_fail@plt+0x1b5a8>
   2c92c:	ldr	r0, [fp, #-4]
   2c930:	ldr	r1, [sp]
   2c934:	ldr	r2, [sp, #4]
   2c938:	bl	2c630 <__assert_fail@plt+0x1b2ac>
   2c93c:	str	r0, [fp, #-4]
   2c940:	ldr	r0, [sp]
   2c944:	ldr	r1, [sp, #8]
   2c948:	str	r0, [r1]
   2c94c:	ldr	r0, [fp, #-4]
   2c950:	mov	sp, fp
   2c954:	pop	{fp, pc}
   2c958:	push	{fp, lr}
   2c95c:	mov	fp, sp
   2c960:	sub	sp, sp, #376	; 0x178
   2c964:	ldr	ip, [fp, #8]
   2c968:	str	r0, [fp, #-4]
   2c96c:	str	r1, [fp, #-8]
   2c970:	str	r2, [fp, #-12]
   2c974:	str	r3, [fp, #-16]
   2c978:	ldr	r0, [fp, #-8]
   2c97c:	ldr	r0, [r0]
   2c980:	str	r0, [fp, #-20]	; 0xffffffec
   2c984:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c988:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c98c:	asr	r1, r1, #1
   2c990:	add	r1, r0, r1
   2c994:	mov	r2, #1
   2c998:	cmp	r1, r0
   2c99c:	movwvc	r2, #0
   2c9a0:	str	r1, [fp, #-24]	; 0xffffffe8
   2c9a4:	tst	r2, #1
   2c9a8:	str	ip, [fp, #-36]	; 0xffffffdc
   2c9ac:	beq	2c9b8 <__assert_fail@plt+0x1b634>
   2c9b0:	ldr	r0, [pc, #4044]	; 2d984 <__assert_fail@plt+0x1c600>
   2c9b4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c9b8:	ldr	r0, [fp, #-16]
   2c9bc:	movw	r1, #0
   2c9c0:	cmp	r1, r0
   2c9c4:	bgt	2c9e0 <__assert_fail@plt+0x1b65c>
   2c9c8:	ldr	r0, [fp, #-16]
   2c9cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c9d0:	cmp	r0, r1
   2c9d4:	bge	2c9e0 <__assert_fail@plt+0x1b65c>
   2c9d8:	ldr	r0, [fp, #-16]
   2c9dc:	str	r0, [fp, #-24]	; 0xffffffe8
   2c9e0:	b	2cdb8 <__assert_fail@plt+0x1ba34>
   2c9e4:	b	2c9e8 <__assert_fail@plt+0x1b664>
   2c9e8:	ldr	r0, [fp, #8]
   2c9ec:	cmp	r0, #0
   2c9f0:	bge	2cb04 <__assert_fail@plt+0x1b780>
   2c9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c9f8:	cmp	r0, #0
   2c9fc:	bge	2ca88 <__assert_fail@plt+0x1b704>
   2ca00:	b	2ca04 <__assert_fail@plt+0x1b680>
   2ca04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ca08:	ldr	r1, [fp, #8]
   2ca0c:	movw	r2, #127	; 0x7f
   2ca10:	sdiv	r1, r2, r1
   2ca14:	cmp	r0, r1
   2ca18:	blt	2cba4 <__assert_fail@plt+0x1b820>
   2ca1c:	b	2cbbc <__assert_fail@plt+0x1b838>
   2ca20:	b	2ca24 <__assert_fail@plt+0x1b6a0>
   2ca24:	ldr	r0, [pc, #4076]	; 2da18 <__assert_fail@plt+0x1c694>
   2ca28:	ldr	r1, [fp, #8]
   2ca2c:	cmp	r1, r0
   2ca30:	blt	2ca48 <__assert_fail@plt+0x1b6c4>
   2ca34:	b	2ca54 <__assert_fail@plt+0x1b6d0>
   2ca38:	ldr	r0, [fp, #8]
   2ca3c:	movw	r1, #0
   2ca40:	cmp	r1, r0
   2ca44:	bge	2ca54 <__assert_fail@plt+0x1b6d0>
   2ca48:	movw	r0, #0
   2ca4c:	str	r0, [fp, #-40]	; 0xffffffd8
   2ca50:	b	2ca6c <__assert_fail@plt+0x1b6e8>
   2ca54:	ldr	r0, [fp, #8]
   2ca58:	movw	r1, #0
   2ca5c:	sub	r0, r1, r0
   2ca60:	movw	r1, #127	; 0x7f
   2ca64:	sdiv	r0, r1, r0
   2ca68:	str	r0, [fp, #-40]	; 0xffffffd8
   2ca6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ca70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ca74:	mvn	r2, #0
   2ca78:	sub	r1, r2, r1
   2ca7c:	cmp	r0, r1
   2ca80:	ble	2cba4 <__assert_fail@plt+0x1b820>
   2ca84:	b	2cbbc <__assert_fail@plt+0x1b838>
   2ca88:	b	2ca8c <__assert_fail@plt+0x1b708>
   2ca8c:	b	2cae8 <__assert_fail@plt+0x1b764>
   2ca90:	b	2cae8 <__assert_fail@plt+0x1b764>
   2ca94:	ldr	r0, [fp, #8]
   2ca98:	cmn	r0, #1
   2ca9c:	bne	2cae8 <__assert_fail@plt+0x1b764>
   2caa0:	b	2caa4 <__assert_fail@plt+0x1b720>
   2caa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2caa8:	mvn	r1, #127	; 0x7f
   2caac:	add	r0, r0, r1
   2cab0:	movw	r1, #0
   2cab4:	cmp	r1, r0
   2cab8:	blt	2cba4 <__assert_fail@plt+0x1b820>
   2cabc:	b	2cbbc <__assert_fail@plt+0x1b838>
   2cac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cac4:	movw	r1, #0
   2cac8:	cmp	r1, r0
   2cacc:	bge	2cbbc <__assert_fail@plt+0x1b838>
   2cad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cad4:	sub	r0, r0, #1
   2cad8:	movw	r1, #127	; 0x7f
   2cadc:	cmp	r1, r0
   2cae0:	blt	2cba4 <__assert_fail@plt+0x1b820>
   2cae4:	b	2cbbc <__assert_fail@plt+0x1b838>
   2cae8:	ldr	r0, [fp, #8]
   2caec:	mvn	r1, #127	; 0x7f
   2caf0:	sdiv	r0, r1, r0
   2caf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2caf8:	cmp	r0, r1
   2cafc:	blt	2cba4 <__assert_fail@plt+0x1b820>
   2cb00:	b	2cbbc <__assert_fail@plt+0x1b838>
   2cb04:	ldr	r0, [fp, #8]
   2cb08:	cmp	r0, #0
   2cb0c:	bne	2cb14 <__assert_fail@plt+0x1b790>
   2cb10:	b	2cbbc <__assert_fail@plt+0x1b838>
   2cb14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb18:	cmp	r0, #0
   2cb1c:	bge	2cb8c <__assert_fail@plt+0x1b808>
   2cb20:	b	2cb24 <__assert_fail@plt+0x1b7a0>
   2cb24:	b	2cb70 <__assert_fail@plt+0x1b7ec>
   2cb28:	b	2cb70 <__assert_fail@plt+0x1b7ec>
   2cb2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb30:	cmn	r0, #1
   2cb34:	bne	2cb70 <__assert_fail@plt+0x1b7ec>
   2cb38:	b	2cb3c <__assert_fail@plt+0x1b7b8>
   2cb3c:	ldr	r0, [fp, #8]
   2cb40:	mvn	r1, #127	; 0x7f
   2cb44:	add	r0, r0, r1
   2cb48:	movw	r1, #0
   2cb4c:	cmp	r1, r0
   2cb50:	blt	2cba4 <__assert_fail@plt+0x1b820>
   2cb54:	b	2cbbc <__assert_fail@plt+0x1b838>
   2cb58:	ldr	r0, [fp, #8]
   2cb5c:	sub	r0, r0, #1
   2cb60:	movw	r1, #127	; 0x7f
   2cb64:	cmp	r1, r0
   2cb68:	blt	2cba4 <__assert_fail@plt+0x1b820>
   2cb6c:	b	2cbbc <__assert_fail@plt+0x1b838>
   2cb70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb74:	mvn	r1, #127	; 0x7f
   2cb78:	sdiv	r0, r1, r0
   2cb7c:	ldr	r1, [fp, #8]
   2cb80:	cmp	r0, r1
   2cb84:	blt	2cba4 <__assert_fail@plt+0x1b820>
   2cb88:	b	2cbbc <__assert_fail@plt+0x1b838>
   2cb8c:	ldr	r0, [fp, #8]
   2cb90:	movw	r1, #127	; 0x7f
   2cb94:	sdiv	r0, r1, r0
   2cb98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cb9c:	cmp	r0, r1
   2cba0:	bge	2cbbc <__assert_fail@plt+0x1b838>
   2cba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cba8:	ldr	r1, [fp, #8]
   2cbac:	mul	r0, r0, r1
   2cbb0:	sxtb	r0, r0
   2cbb4:	str	r0, [fp, #-28]	; 0xffffffe4
   2cbb8:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2cbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbc0:	ldr	r1, [fp, #8]
   2cbc4:	mul	r0, r0, r1
   2cbc8:	sxtb	r0, r0
   2cbcc:	str	r0, [fp, #-28]	; 0xffffffe4
   2cbd0:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2cbd4:	ldr	r0, [fp, #8]
   2cbd8:	cmp	r0, #0
   2cbdc:	bge	2ccec <__assert_fail@plt+0x1b968>
   2cbe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbe4:	cmp	r0, #0
   2cbe8:	bge	2cc74 <__assert_fail@plt+0x1b8f0>
   2cbec:	b	2cbf0 <__assert_fail@plt+0x1b86c>
   2cbf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbf4:	ldr	r1, [fp, #8]
   2cbf8:	movw	r2, #255	; 0xff
   2cbfc:	sdiv	r1, r2, r1
   2cc00:	cmp	r0, r1
   2cc04:	blt	2cd88 <__assert_fail@plt+0x1ba04>
   2cc08:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2cc0c:	b	2cc10 <__assert_fail@plt+0x1b88c>
   2cc10:	ldr	r0, [pc, #3584]	; 2da18 <__assert_fail@plt+0x1c694>
   2cc14:	ldr	r1, [fp, #8]
   2cc18:	cmp	r1, r0
   2cc1c:	blt	2cc34 <__assert_fail@plt+0x1b8b0>
   2cc20:	b	2cc40 <__assert_fail@plt+0x1b8bc>
   2cc24:	ldr	r0, [fp, #8]
   2cc28:	movw	r1, #0
   2cc2c:	cmp	r1, r0
   2cc30:	bge	2cc40 <__assert_fail@plt+0x1b8bc>
   2cc34:	movw	r0, #0
   2cc38:	str	r0, [fp, #-44]	; 0xffffffd4
   2cc3c:	b	2cc58 <__assert_fail@plt+0x1b8d4>
   2cc40:	ldr	r0, [fp, #8]
   2cc44:	movw	r1, #0
   2cc48:	sub	r0, r1, r0
   2cc4c:	movw	r1, #255	; 0xff
   2cc50:	sdiv	r0, r1, r0
   2cc54:	str	r0, [fp, #-44]	; 0xffffffd4
   2cc58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2cc5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cc60:	mvn	r2, #0
   2cc64:	sub	r1, r2, r1
   2cc68:	cmp	r0, r1
   2cc6c:	ble	2cd88 <__assert_fail@plt+0x1ba04>
   2cc70:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2cc74:	b	2cc78 <__assert_fail@plt+0x1b8f4>
   2cc78:	b	2ccd0 <__assert_fail@plt+0x1b94c>
   2cc7c:	b	2ccd0 <__assert_fail@plt+0x1b94c>
   2cc80:	ldr	r0, [fp, #8]
   2cc84:	cmn	r0, #1
   2cc88:	bne	2ccd0 <__assert_fail@plt+0x1b94c>
   2cc8c:	b	2cc90 <__assert_fail@plt+0x1b90c>
   2cc90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cc94:	add	r0, r0, #0
   2cc98:	movw	r1, #0
   2cc9c:	cmp	r1, r0
   2cca0:	blt	2cd88 <__assert_fail@plt+0x1ba04>
   2cca4:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2cca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ccac:	movw	r1, #0
   2ccb0:	cmp	r1, r0
   2ccb4:	bge	2cda0 <__assert_fail@plt+0x1ba1c>
   2ccb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ccbc:	sub	r0, r0, #1
   2ccc0:	mvn	r1, #0
   2ccc4:	cmp	r1, r0
   2ccc8:	blt	2cd88 <__assert_fail@plt+0x1ba04>
   2cccc:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2ccd0:	ldr	r0, [fp, #8]
   2ccd4:	movw	r1, #0
   2ccd8:	sdiv	r0, r1, r0
   2ccdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cce0:	cmp	r0, r1
   2cce4:	blt	2cd88 <__assert_fail@plt+0x1ba04>
   2cce8:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2ccec:	ldr	r0, [fp, #8]
   2ccf0:	cmp	r0, #0
   2ccf4:	bne	2ccfc <__assert_fail@plt+0x1b978>
   2ccf8:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2ccfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd00:	cmp	r0, #0
   2cd04:	bge	2cd70 <__assert_fail@plt+0x1b9ec>
   2cd08:	b	2cd0c <__assert_fail@plt+0x1b988>
   2cd0c:	b	2cd54 <__assert_fail@plt+0x1b9d0>
   2cd10:	b	2cd54 <__assert_fail@plt+0x1b9d0>
   2cd14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd18:	cmn	r0, #1
   2cd1c:	bne	2cd54 <__assert_fail@plt+0x1b9d0>
   2cd20:	b	2cd24 <__assert_fail@plt+0x1b9a0>
   2cd24:	ldr	r0, [fp, #8]
   2cd28:	add	r0, r0, #0
   2cd2c:	movw	r1, #0
   2cd30:	cmp	r1, r0
   2cd34:	blt	2cd88 <__assert_fail@plt+0x1ba04>
   2cd38:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2cd3c:	ldr	r0, [fp, #8]
   2cd40:	sub	r0, r0, #1
   2cd44:	mvn	r1, #0
   2cd48:	cmp	r1, r0
   2cd4c:	blt	2cd88 <__assert_fail@plt+0x1ba04>
   2cd50:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2cd54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd58:	movw	r1, #0
   2cd5c:	sdiv	r0, r1, r0
   2cd60:	ldr	r1, [fp, #8]
   2cd64:	cmp	r0, r1
   2cd68:	blt	2cd88 <__assert_fail@plt+0x1ba04>
   2cd6c:	b	2cda0 <__assert_fail@plt+0x1ba1c>
   2cd70:	ldr	r0, [fp, #8]
   2cd74:	movw	r1, #255	; 0xff
   2cd78:	sdiv	r0, r1, r0
   2cd7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cd80:	cmp	r0, r1
   2cd84:	bge	2cda0 <__assert_fail@plt+0x1ba1c>
   2cd88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd8c:	ldr	r1, [fp, #8]
   2cd90:	mul	r0, r0, r1
   2cd94:	and	r0, r0, #255	; 0xff
   2cd98:	str	r0, [fp, #-28]	; 0xffffffe4
   2cd9c:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2cda0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cda4:	ldr	r1, [fp, #8]
   2cda8:	mul	r0, r0, r1
   2cdac:	and	r0, r0, #255	; 0xff
   2cdb0:	str	r0, [fp, #-28]	; 0xffffffe4
   2cdb4:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2cdb8:	b	2d190 <__assert_fail@plt+0x1be0c>
   2cdbc:	b	2cdc0 <__assert_fail@plt+0x1ba3c>
   2cdc0:	ldr	r0, [fp, #8]
   2cdc4:	cmp	r0, #0
   2cdc8:	bge	2cedc <__assert_fail@plt+0x1bb58>
   2cdcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cdd0:	cmp	r0, #0
   2cdd4:	bge	2ce60 <__assert_fail@plt+0x1badc>
   2cdd8:	b	2cddc <__assert_fail@plt+0x1ba58>
   2cddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cde0:	ldr	r1, [fp, #8]
   2cde4:	movw	r2, #32767	; 0x7fff
   2cde8:	sdiv	r1, r2, r1
   2cdec:	cmp	r0, r1
   2cdf0:	blt	2cf7c <__assert_fail@plt+0x1bbf8>
   2cdf4:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2cdf8:	b	2cdfc <__assert_fail@plt+0x1ba78>
   2cdfc:	ldr	r0, [pc, #3092]	; 2da18 <__assert_fail@plt+0x1c694>
   2ce00:	ldr	r1, [fp, #8]
   2ce04:	cmp	r1, r0
   2ce08:	blt	2ce20 <__assert_fail@plt+0x1ba9c>
   2ce0c:	b	2ce2c <__assert_fail@plt+0x1baa8>
   2ce10:	ldr	r0, [fp, #8]
   2ce14:	movw	r1, #0
   2ce18:	cmp	r1, r0
   2ce1c:	bge	2ce2c <__assert_fail@plt+0x1baa8>
   2ce20:	movw	r0, #0
   2ce24:	str	r0, [fp, #-48]	; 0xffffffd0
   2ce28:	b	2ce44 <__assert_fail@plt+0x1bac0>
   2ce2c:	ldr	r0, [fp, #8]
   2ce30:	movw	r1, #0
   2ce34:	sub	r0, r1, r0
   2ce38:	movw	r1, #32767	; 0x7fff
   2ce3c:	sdiv	r0, r1, r0
   2ce40:	str	r0, [fp, #-48]	; 0xffffffd0
   2ce44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ce48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ce4c:	mvn	r2, #0
   2ce50:	sub	r1, r2, r1
   2ce54:	cmp	r0, r1
   2ce58:	ble	2cf7c <__assert_fail@plt+0x1bbf8>
   2ce5c:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2ce60:	b	2ce64 <__assert_fail@plt+0x1bae0>
   2ce64:	b	2cec0 <__assert_fail@plt+0x1bb3c>
   2ce68:	b	2cec0 <__assert_fail@plt+0x1bb3c>
   2ce6c:	ldr	r0, [fp, #8]
   2ce70:	cmn	r0, #1
   2ce74:	bne	2cec0 <__assert_fail@plt+0x1bb3c>
   2ce78:	b	2ce7c <__assert_fail@plt+0x1baf8>
   2ce7c:	ldr	r0, [pc, #3928]	; 2dddc <__assert_fail@plt+0x1ca58>
   2ce80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ce84:	add	r0, r1, r0
   2ce88:	movw	r1, #0
   2ce8c:	cmp	r1, r0
   2ce90:	blt	2cf7c <__assert_fail@plt+0x1bbf8>
   2ce94:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2ce98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ce9c:	movw	r1, #0
   2cea0:	cmp	r1, r0
   2cea4:	bge	2cf94 <__assert_fail@plt+0x1bc10>
   2cea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ceac:	sub	r0, r0, #1
   2ceb0:	movw	r1, #32767	; 0x7fff
   2ceb4:	cmp	r1, r0
   2ceb8:	blt	2cf7c <__assert_fail@plt+0x1bbf8>
   2cebc:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2cec0:	ldr	r0, [pc, #3860]	; 2dddc <__assert_fail@plt+0x1ca58>
   2cec4:	ldr	r1, [fp, #8]
   2cec8:	sdiv	r0, r0, r1
   2cecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ced0:	cmp	r0, r1
   2ced4:	blt	2cf7c <__assert_fail@plt+0x1bbf8>
   2ced8:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2cedc:	ldr	r0, [fp, #8]
   2cee0:	cmp	r0, #0
   2cee4:	bne	2ceec <__assert_fail@plt+0x1bb68>
   2cee8:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2ceec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cef0:	cmp	r0, #0
   2cef4:	bge	2cf64 <__assert_fail@plt+0x1bbe0>
   2cef8:	b	2cefc <__assert_fail@plt+0x1bb78>
   2cefc:	b	2cf48 <__assert_fail@plt+0x1bbc4>
   2cf00:	b	2cf48 <__assert_fail@plt+0x1bbc4>
   2cf04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf08:	cmn	r0, #1
   2cf0c:	bne	2cf48 <__assert_fail@plt+0x1bbc4>
   2cf10:	b	2cf14 <__assert_fail@plt+0x1bb90>
   2cf14:	ldr	r0, [pc, #3776]	; 2dddc <__assert_fail@plt+0x1ca58>
   2cf18:	ldr	r1, [fp, #8]
   2cf1c:	add	r0, r1, r0
   2cf20:	movw	r1, #0
   2cf24:	cmp	r1, r0
   2cf28:	blt	2cf7c <__assert_fail@plt+0x1bbf8>
   2cf2c:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2cf30:	ldr	r0, [fp, #8]
   2cf34:	sub	r0, r0, #1
   2cf38:	movw	r1, #32767	; 0x7fff
   2cf3c:	cmp	r1, r0
   2cf40:	blt	2cf7c <__assert_fail@plt+0x1bbf8>
   2cf44:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2cf48:	ldr	r0, [pc, #3724]	; 2dddc <__assert_fail@plt+0x1ca58>
   2cf4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cf50:	sdiv	r0, r0, r1
   2cf54:	ldr	r1, [fp, #8]
   2cf58:	cmp	r0, r1
   2cf5c:	blt	2cf7c <__assert_fail@plt+0x1bbf8>
   2cf60:	b	2cf94 <__assert_fail@plt+0x1bc10>
   2cf64:	ldr	r0, [fp, #8]
   2cf68:	movw	r1, #32767	; 0x7fff
   2cf6c:	sdiv	r0, r1, r0
   2cf70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2cf74:	cmp	r0, r1
   2cf78:	bge	2cf94 <__assert_fail@plt+0x1bc10>
   2cf7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf80:	ldr	r1, [fp, #8]
   2cf84:	mul	r0, r0, r1
   2cf88:	sxth	r0, r0
   2cf8c:	str	r0, [fp, #-28]	; 0xffffffe4
   2cf90:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2cf94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cf98:	ldr	r1, [fp, #8]
   2cf9c:	mul	r0, r0, r1
   2cfa0:	sxth	r0, r0
   2cfa4:	str	r0, [fp, #-28]	; 0xffffffe4
   2cfa8:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2cfac:	ldr	r0, [fp, #8]
   2cfb0:	cmp	r0, #0
   2cfb4:	bge	2d0c4 <__assert_fail@plt+0x1bd40>
   2cfb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cfbc:	cmp	r0, #0
   2cfc0:	bge	2d04c <__assert_fail@plt+0x1bcc8>
   2cfc4:	b	2cfc8 <__assert_fail@plt+0x1bc44>
   2cfc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cfcc:	ldr	r1, [fp, #8]
   2cfd0:	movw	r2, #65535	; 0xffff
   2cfd4:	sdiv	r1, r2, r1
   2cfd8:	cmp	r0, r1
   2cfdc:	blt	2d160 <__assert_fail@plt+0x1bddc>
   2cfe0:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2cfe4:	b	2cfe8 <__assert_fail@plt+0x1bc64>
   2cfe8:	ldr	r0, [pc, #2600]	; 2da18 <__assert_fail@plt+0x1c694>
   2cfec:	ldr	r1, [fp, #8]
   2cff0:	cmp	r1, r0
   2cff4:	blt	2d00c <__assert_fail@plt+0x1bc88>
   2cff8:	b	2d018 <__assert_fail@plt+0x1bc94>
   2cffc:	ldr	r0, [fp, #8]
   2d000:	movw	r1, #0
   2d004:	cmp	r1, r0
   2d008:	bge	2d018 <__assert_fail@plt+0x1bc94>
   2d00c:	movw	r0, #0
   2d010:	str	r0, [fp, #-52]	; 0xffffffcc
   2d014:	b	2d030 <__assert_fail@plt+0x1bcac>
   2d018:	ldr	r0, [fp, #8]
   2d01c:	movw	r1, #0
   2d020:	sub	r0, r1, r0
   2d024:	movw	r1, #65535	; 0xffff
   2d028:	sdiv	r0, r1, r0
   2d02c:	str	r0, [fp, #-52]	; 0xffffffcc
   2d030:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2d034:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d038:	mvn	r2, #0
   2d03c:	sub	r1, r2, r1
   2d040:	cmp	r0, r1
   2d044:	ble	2d160 <__assert_fail@plt+0x1bddc>
   2d048:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d04c:	b	2d050 <__assert_fail@plt+0x1bccc>
   2d050:	b	2d0a8 <__assert_fail@plt+0x1bd24>
   2d054:	b	2d0a8 <__assert_fail@plt+0x1bd24>
   2d058:	ldr	r0, [fp, #8]
   2d05c:	cmn	r0, #1
   2d060:	bne	2d0a8 <__assert_fail@plt+0x1bd24>
   2d064:	b	2d068 <__assert_fail@plt+0x1bce4>
   2d068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d06c:	add	r0, r0, #0
   2d070:	movw	r1, #0
   2d074:	cmp	r1, r0
   2d078:	blt	2d160 <__assert_fail@plt+0x1bddc>
   2d07c:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d084:	movw	r1, #0
   2d088:	cmp	r1, r0
   2d08c:	bge	2d178 <__assert_fail@plt+0x1bdf4>
   2d090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d094:	sub	r0, r0, #1
   2d098:	mvn	r1, #0
   2d09c:	cmp	r1, r0
   2d0a0:	blt	2d160 <__assert_fail@plt+0x1bddc>
   2d0a4:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d0a8:	ldr	r0, [fp, #8]
   2d0ac:	movw	r1, #0
   2d0b0:	sdiv	r0, r1, r0
   2d0b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d0b8:	cmp	r0, r1
   2d0bc:	blt	2d160 <__assert_fail@plt+0x1bddc>
   2d0c0:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d0c4:	ldr	r0, [fp, #8]
   2d0c8:	cmp	r0, #0
   2d0cc:	bne	2d0d4 <__assert_fail@plt+0x1bd50>
   2d0d0:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d0d8:	cmp	r0, #0
   2d0dc:	bge	2d148 <__assert_fail@plt+0x1bdc4>
   2d0e0:	b	2d0e4 <__assert_fail@plt+0x1bd60>
   2d0e4:	b	2d12c <__assert_fail@plt+0x1bda8>
   2d0e8:	b	2d12c <__assert_fail@plt+0x1bda8>
   2d0ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d0f0:	cmn	r0, #1
   2d0f4:	bne	2d12c <__assert_fail@plt+0x1bda8>
   2d0f8:	b	2d0fc <__assert_fail@plt+0x1bd78>
   2d0fc:	ldr	r0, [fp, #8]
   2d100:	add	r0, r0, #0
   2d104:	movw	r1, #0
   2d108:	cmp	r1, r0
   2d10c:	blt	2d160 <__assert_fail@plt+0x1bddc>
   2d110:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d114:	ldr	r0, [fp, #8]
   2d118:	sub	r0, r0, #1
   2d11c:	mvn	r1, #0
   2d120:	cmp	r1, r0
   2d124:	blt	2d160 <__assert_fail@plt+0x1bddc>
   2d128:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d12c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d130:	movw	r1, #0
   2d134:	sdiv	r0, r1, r0
   2d138:	ldr	r1, [fp, #8]
   2d13c:	cmp	r0, r1
   2d140:	blt	2d160 <__assert_fail@plt+0x1bddc>
   2d144:	b	2d178 <__assert_fail@plt+0x1bdf4>
   2d148:	ldr	r0, [fp, #8]
   2d14c:	movw	r1, #65535	; 0xffff
   2d150:	sdiv	r0, r1, r0
   2d154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d158:	cmp	r0, r1
   2d15c:	bge	2d178 <__assert_fail@plt+0x1bdf4>
   2d160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d164:	ldr	r1, [fp, #8]
   2d168:	mul	r0, r0, r1
   2d16c:	uxth	r0, r0
   2d170:	str	r0, [fp, #-28]	; 0xffffffe4
   2d174:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2d178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d17c:	ldr	r1, [fp, #8]
   2d180:	mul	r0, r0, r1
   2d184:	uxth	r0, r0
   2d188:	str	r0, [fp, #-28]	; 0xffffffe4
   2d18c:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2d190:	b	2d194 <__assert_fail@plt+0x1be10>
   2d194:	b	2d198 <__assert_fail@plt+0x1be14>
   2d198:	ldr	r0, [fp, #8]
   2d19c:	cmp	r0, #0
   2d1a0:	bge	2d2a4 <__assert_fail@plt+0x1bf20>
   2d1a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d1a8:	cmp	r0, #0
   2d1ac:	bge	2d238 <__assert_fail@plt+0x1beb4>
   2d1b0:	b	2d1b4 <__assert_fail@plt+0x1be30>
   2d1b4:	ldr	r0, [pc, #1992]	; 2d984 <__assert_fail@plt+0x1c600>
   2d1b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d1bc:	ldr	r2, [fp, #8]
   2d1c0:	sdiv	r0, r0, r2
   2d1c4:	cmp	r1, r0
   2d1c8:	blt	2d334 <__assert_fail@plt+0x1bfb0>
   2d1cc:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d1d0:	b	2d1d4 <__assert_fail@plt+0x1be50>
   2d1d4:	ldr	r0, [pc, #2108]	; 2da18 <__assert_fail@plt+0x1c694>
   2d1d8:	ldr	r1, [fp, #8]
   2d1dc:	cmp	r1, r0
   2d1e0:	blt	2d1f8 <__assert_fail@plt+0x1be74>
   2d1e4:	b	2d204 <__assert_fail@plt+0x1be80>
   2d1e8:	ldr	r0, [fp, #8]
   2d1ec:	movw	r1, #0
   2d1f0:	cmp	r1, r0
   2d1f4:	bge	2d204 <__assert_fail@plt+0x1be80>
   2d1f8:	movw	r0, #0
   2d1fc:	str	r0, [fp, #-56]	; 0xffffffc8
   2d200:	b	2d21c <__assert_fail@plt+0x1be98>
   2d204:	ldr	r0, [pc, #1912]	; 2d984 <__assert_fail@plt+0x1c600>
   2d208:	ldr	r1, [fp, #8]
   2d20c:	movw	r2, #0
   2d210:	sub	r1, r2, r1
   2d214:	sdiv	r0, r0, r1
   2d218:	str	r0, [fp, #-56]	; 0xffffffc8
   2d21c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d220:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d224:	mvn	r2, #0
   2d228:	sub	r1, r2, r1
   2d22c:	cmp	r0, r1
   2d230:	ble	2d334 <__assert_fail@plt+0x1bfb0>
   2d234:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d238:	ldr	r0, [fp, #8]
   2d23c:	cmn	r0, #1
   2d240:	bne	2d288 <__assert_fail@plt+0x1bf04>
   2d244:	b	2d248 <__assert_fail@plt+0x1bec4>
   2d248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d24c:	add	r0, r0, #-2147483648	; 0x80000000
   2d250:	movw	r1, #0
   2d254:	cmp	r1, r0
   2d258:	blt	2d334 <__assert_fail@plt+0x1bfb0>
   2d25c:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d264:	movw	r1, #0
   2d268:	cmp	r1, r0
   2d26c:	bge	2d348 <__assert_fail@plt+0x1bfc4>
   2d270:	ldr	r0, [pc, #1804]	; 2d984 <__assert_fail@plt+0x1c600>
   2d274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d278:	sub	r1, r1, #1
   2d27c:	cmp	r0, r1
   2d280:	blt	2d334 <__assert_fail@plt+0x1bfb0>
   2d284:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d288:	ldr	r0, [pc, #4072]	; 2e278 <__assert_fail@plt+0x1cef4>
   2d28c:	ldr	r1, [fp, #8]
   2d290:	sdiv	r0, r0, r1
   2d294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d298:	cmp	r0, r1
   2d29c:	blt	2d334 <__assert_fail@plt+0x1bfb0>
   2d2a0:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d2a4:	ldr	r0, [fp, #8]
   2d2a8:	cmp	r0, #0
   2d2ac:	bne	2d2b4 <__assert_fail@plt+0x1bf30>
   2d2b0:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d2b8:	cmp	r0, #0
   2d2bc:	bge	2d31c <__assert_fail@plt+0x1bf98>
   2d2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d2c4:	cmn	r0, #1
   2d2c8:	bne	2d300 <__assert_fail@plt+0x1bf7c>
   2d2cc:	b	2d2d0 <__assert_fail@plt+0x1bf4c>
   2d2d0:	ldr	r0, [fp, #8]
   2d2d4:	add	r0, r0, #-2147483648	; 0x80000000
   2d2d8:	movw	r1, #0
   2d2dc:	cmp	r1, r0
   2d2e0:	blt	2d334 <__assert_fail@plt+0x1bfb0>
   2d2e4:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d2e8:	ldr	r0, [pc, #1684]	; 2d984 <__assert_fail@plt+0x1c600>
   2d2ec:	ldr	r1, [fp, #8]
   2d2f0:	sub	r1, r1, #1
   2d2f4:	cmp	r0, r1
   2d2f8:	blt	2d334 <__assert_fail@plt+0x1bfb0>
   2d2fc:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d300:	ldr	r0, [pc, #3952]	; 2e278 <__assert_fail@plt+0x1cef4>
   2d304:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d308:	sdiv	r0, r0, r1
   2d30c:	ldr	r1, [fp, #8]
   2d310:	cmp	r0, r1
   2d314:	blt	2d334 <__assert_fail@plt+0x1bfb0>
   2d318:	b	2d348 <__assert_fail@plt+0x1bfc4>
   2d31c:	ldr	r0, [pc, #1632]	; 2d984 <__assert_fail@plt+0x1c600>
   2d320:	ldr	r1, [fp, #8]
   2d324:	sdiv	r0, r0, r1
   2d328:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d32c:	cmp	r0, r1
   2d330:	bge	2d348 <__assert_fail@plt+0x1bfc4>
   2d334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d338:	ldr	r1, [fp, #8]
   2d33c:	mul	r0, r0, r1
   2d340:	str	r0, [fp, #-28]	; 0xffffffe4
   2d344:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2d348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d34c:	ldr	r1, [fp, #8]
   2d350:	mul	r0, r0, r1
   2d354:	str	r0, [fp, #-28]	; 0xffffffe4
   2d358:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2d35c:	ldr	r0, [fp, #8]
   2d360:	cmp	r0, #0
   2d364:	bge	2d474 <__assert_fail@plt+0x1c0f0>
   2d368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d36c:	cmp	r0, #0
   2d370:	bge	2d3fc <__assert_fail@plt+0x1c078>
   2d374:	b	2d394 <__assert_fail@plt+0x1c010>
   2d378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d37c:	ldr	r1, [fp, #8]
   2d380:	mvn	r2, #0
   2d384:	udiv	r1, r2, r1
   2d388:	cmp	r0, r1
   2d38c:	bcc	2d510 <__assert_fail@plt+0x1c18c>
   2d390:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d394:	b	2d398 <__assert_fail@plt+0x1c014>
   2d398:	ldr	r0, [pc, #1656]	; 2da18 <__assert_fail@plt+0x1c694>
   2d39c:	ldr	r1, [fp, #8]
   2d3a0:	cmp	r1, r0
   2d3a4:	blt	2d3bc <__assert_fail@plt+0x1c038>
   2d3a8:	b	2d3c8 <__assert_fail@plt+0x1c044>
   2d3ac:	ldr	r0, [fp, #8]
   2d3b0:	movw	r1, #0
   2d3b4:	cmp	r1, r0
   2d3b8:	bge	2d3c8 <__assert_fail@plt+0x1c044>
   2d3bc:	movw	r0, #1
   2d3c0:	str	r0, [fp, #-60]	; 0xffffffc4
   2d3c4:	b	2d3e0 <__assert_fail@plt+0x1c05c>
   2d3c8:	ldr	r0, [fp, #8]
   2d3cc:	movw	r1, #0
   2d3d0:	sub	r0, r1, r0
   2d3d4:	mvn	r1, #0
   2d3d8:	udiv	r0, r1, r0
   2d3dc:	str	r0, [fp, #-60]	; 0xffffffc4
   2d3e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d3e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d3e8:	mvn	r2, #0
   2d3ec:	sub	r1, r2, r1
   2d3f0:	cmp	r0, r1
   2d3f4:	bls	2d510 <__assert_fail@plt+0x1c18c>
   2d3f8:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d3fc:	b	2d400 <__assert_fail@plt+0x1c07c>
   2d400:	b	2d458 <__assert_fail@plt+0x1c0d4>
   2d404:	b	2d458 <__assert_fail@plt+0x1c0d4>
   2d408:	ldr	r0, [fp, #8]
   2d40c:	cmn	r0, #1
   2d410:	bne	2d458 <__assert_fail@plt+0x1c0d4>
   2d414:	b	2d418 <__assert_fail@plt+0x1c094>
   2d418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d41c:	add	r0, r0, #0
   2d420:	movw	r1, #0
   2d424:	cmp	r1, r0
   2d428:	blt	2d510 <__assert_fail@plt+0x1c18c>
   2d42c:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d434:	movw	r1, #0
   2d438:	cmp	r1, r0
   2d43c:	bge	2d524 <__assert_fail@plt+0x1c1a0>
   2d440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d444:	sub	r0, r0, #1
   2d448:	mvn	r1, #0
   2d44c:	cmp	r1, r0
   2d450:	blt	2d510 <__assert_fail@plt+0x1c18c>
   2d454:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d458:	ldr	r0, [fp, #8]
   2d45c:	movw	r1, #0
   2d460:	sdiv	r0, r1, r0
   2d464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d468:	cmp	r0, r1
   2d46c:	blt	2d510 <__assert_fail@plt+0x1c18c>
   2d470:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d474:	ldr	r0, [fp, #8]
   2d478:	cmp	r0, #0
   2d47c:	bne	2d484 <__assert_fail@plt+0x1c100>
   2d480:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d488:	cmp	r0, #0
   2d48c:	bge	2d4f8 <__assert_fail@plt+0x1c174>
   2d490:	b	2d494 <__assert_fail@plt+0x1c110>
   2d494:	b	2d4dc <__assert_fail@plt+0x1c158>
   2d498:	b	2d4dc <__assert_fail@plt+0x1c158>
   2d49c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d4a0:	cmn	r0, #1
   2d4a4:	bne	2d4dc <__assert_fail@plt+0x1c158>
   2d4a8:	b	2d4ac <__assert_fail@plt+0x1c128>
   2d4ac:	ldr	r0, [fp, #8]
   2d4b0:	add	r0, r0, #0
   2d4b4:	movw	r1, #0
   2d4b8:	cmp	r1, r0
   2d4bc:	blt	2d510 <__assert_fail@plt+0x1c18c>
   2d4c0:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d4c4:	ldr	r0, [fp, #8]
   2d4c8:	sub	r0, r0, #1
   2d4cc:	mvn	r1, #0
   2d4d0:	cmp	r1, r0
   2d4d4:	blt	2d510 <__assert_fail@plt+0x1c18c>
   2d4d8:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d4e0:	movw	r1, #0
   2d4e4:	sdiv	r0, r1, r0
   2d4e8:	ldr	r1, [fp, #8]
   2d4ec:	cmp	r0, r1
   2d4f0:	blt	2d510 <__assert_fail@plt+0x1c18c>
   2d4f4:	b	2d524 <__assert_fail@plt+0x1c1a0>
   2d4f8:	ldr	r0, [fp, #8]
   2d4fc:	mvn	r1, #0
   2d500:	udiv	r0, r1, r0
   2d504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d508:	cmp	r0, r1
   2d50c:	bcs	2d524 <__assert_fail@plt+0x1c1a0>
   2d510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d514:	ldr	r1, [fp, #8]
   2d518:	mul	r0, r0, r1
   2d51c:	str	r0, [fp, #-28]	; 0xffffffe4
   2d520:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2d524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d528:	ldr	r1, [fp, #8]
   2d52c:	mul	r0, r0, r1
   2d530:	str	r0, [fp, #-28]	; 0xffffffe4
   2d534:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2d538:	b	2d53c <__assert_fail@plt+0x1c1b8>
   2d53c:	b	2d540 <__assert_fail@plt+0x1c1bc>
   2d540:	ldr	r0, [fp, #8]
   2d544:	cmp	r0, #0
   2d548:	bge	2d64c <__assert_fail@plt+0x1c2c8>
   2d54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d550:	cmp	r0, #0
   2d554:	bge	2d5e0 <__assert_fail@plt+0x1c25c>
   2d558:	b	2d55c <__assert_fail@plt+0x1c1d8>
   2d55c:	ldr	r0, [pc, #1056]	; 2d984 <__assert_fail@plt+0x1c600>
   2d560:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d564:	ldr	r2, [fp, #8]
   2d568:	sdiv	r0, r0, r2
   2d56c:	cmp	r1, r0
   2d570:	blt	2d6dc <__assert_fail@plt+0x1c358>
   2d574:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d578:	b	2d57c <__assert_fail@plt+0x1c1f8>
   2d57c:	ldr	r0, [pc, #1172]	; 2da18 <__assert_fail@plt+0x1c694>
   2d580:	ldr	r1, [fp, #8]
   2d584:	cmp	r1, r0
   2d588:	blt	2d5a0 <__assert_fail@plt+0x1c21c>
   2d58c:	b	2d5ac <__assert_fail@plt+0x1c228>
   2d590:	ldr	r0, [fp, #8]
   2d594:	movw	r1, #0
   2d598:	cmp	r1, r0
   2d59c:	bge	2d5ac <__assert_fail@plt+0x1c228>
   2d5a0:	movw	r0, #0
   2d5a4:	str	r0, [fp, #-64]	; 0xffffffc0
   2d5a8:	b	2d5c4 <__assert_fail@plt+0x1c240>
   2d5ac:	ldr	r0, [pc, #976]	; 2d984 <__assert_fail@plt+0x1c600>
   2d5b0:	ldr	r1, [fp, #8]
   2d5b4:	movw	r2, #0
   2d5b8:	sub	r1, r2, r1
   2d5bc:	sdiv	r0, r0, r1
   2d5c0:	str	r0, [fp, #-64]	; 0xffffffc0
   2d5c4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2d5c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d5cc:	mvn	r2, #0
   2d5d0:	sub	r1, r2, r1
   2d5d4:	cmp	r0, r1
   2d5d8:	ble	2d6dc <__assert_fail@plt+0x1c358>
   2d5dc:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d5e0:	ldr	r0, [fp, #8]
   2d5e4:	cmn	r0, #1
   2d5e8:	bne	2d630 <__assert_fail@plt+0x1c2ac>
   2d5ec:	b	2d5f0 <__assert_fail@plt+0x1c26c>
   2d5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d5f4:	add	r0, r0, #-2147483648	; 0x80000000
   2d5f8:	movw	r1, #0
   2d5fc:	cmp	r1, r0
   2d600:	blt	2d6dc <__assert_fail@plt+0x1c358>
   2d604:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d60c:	movw	r1, #0
   2d610:	cmp	r1, r0
   2d614:	bge	2d6f0 <__assert_fail@plt+0x1c36c>
   2d618:	ldr	r0, [pc, #868]	; 2d984 <__assert_fail@plt+0x1c600>
   2d61c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d620:	sub	r1, r1, #1
   2d624:	cmp	r0, r1
   2d628:	blt	2d6dc <__assert_fail@plt+0x1c358>
   2d62c:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d630:	ldr	r0, [pc, #3136]	; 2e278 <__assert_fail@plt+0x1cef4>
   2d634:	ldr	r1, [fp, #8]
   2d638:	sdiv	r0, r0, r1
   2d63c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d640:	cmp	r0, r1
   2d644:	blt	2d6dc <__assert_fail@plt+0x1c358>
   2d648:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d64c:	ldr	r0, [fp, #8]
   2d650:	cmp	r0, #0
   2d654:	bne	2d65c <__assert_fail@plt+0x1c2d8>
   2d658:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d65c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d660:	cmp	r0, #0
   2d664:	bge	2d6c4 <__assert_fail@plt+0x1c340>
   2d668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d66c:	cmn	r0, #1
   2d670:	bne	2d6a8 <__assert_fail@plt+0x1c324>
   2d674:	b	2d678 <__assert_fail@plt+0x1c2f4>
   2d678:	ldr	r0, [fp, #8]
   2d67c:	add	r0, r0, #-2147483648	; 0x80000000
   2d680:	movw	r1, #0
   2d684:	cmp	r1, r0
   2d688:	blt	2d6dc <__assert_fail@plt+0x1c358>
   2d68c:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d690:	ldr	r0, [pc, #748]	; 2d984 <__assert_fail@plt+0x1c600>
   2d694:	ldr	r1, [fp, #8]
   2d698:	sub	r1, r1, #1
   2d69c:	cmp	r0, r1
   2d6a0:	blt	2d6dc <__assert_fail@plt+0x1c358>
   2d6a4:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d6a8:	ldr	r0, [pc, #3016]	; 2e278 <__assert_fail@plt+0x1cef4>
   2d6ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d6b0:	sdiv	r0, r0, r1
   2d6b4:	ldr	r1, [fp, #8]
   2d6b8:	cmp	r0, r1
   2d6bc:	blt	2d6dc <__assert_fail@plt+0x1c358>
   2d6c0:	b	2d6f0 <__assert_fail@plt+0x1c36c>
   2d6c4:	ldr	r0, [pc, #696]	; 2d984 <__assert_fail@plt+0x1c600>
   2d6c8:	ldr	r1, [fp, #8]
   2d6cc:	sdiv	r0, r0, r1
   2d6d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d6d4:	cmp	r0, r1
   2d6d8:	bge	2d6f0 <__assert_fail@plt+0x1c36c>
   2d6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d6e0:	ldr	r1, [fp, #8]
   2d6e4:	mul	r0, r0, r1
   2d6e8:	str	r0, [fp, #-28]	; 0xffffffe4
   2d6ec:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2d6f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d6f4:	ldr	r1, [fp, #8]
   2d6f8:	mul	r0, r0, r1
   2d6fc:	str	r0, [fp, #-28]	; 0xffffffe4
   2d700:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2d704:	ldr	r0, [fp, #8]
   2d708:	cmp	r0, #0
   2d70c:	bge	2d81c <__assert_fail@plt+0x1c498>
   2d710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d714:	cmp	r0, #0
   2d718:	bge	2d7a4 <__assert_fail@plt+0x1c420>
   2d71c:	b	2d73c <__assert_fail@plt+0x1c3b8>
   2d720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d724:	ldr	r1, [fp, #8]
   2d728:	mvn	r2, #0
   2d72c:	udiv	r1, r2, r1
   2d730:	cmp	r0, r1
   2d734:	bcc	2d8b8 <__assert_fail@plt+0x1c534>
   2d738:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d73c:	b	2d740 <__assert_fail@plt+0x1c3bc>
   2d740:	ldr	r0, [pc, #720]	; 2da18 <__assert_fail@plt+0x1c694>
   2d744:	ldr	r1, [fp, #8]
   2d748:	cmp	r1, r0
   2d74c:	blt	2d764 <__assert_fail@plt+0x1c3e0>
   2d750:	b	2d770 <__assert_fail@plt+0x1c3ec>
   2d754:	ldr	r0, [fp, #8]
   2d758:	movw	r1, #0
   2d75c:	cmp	r1, r0
   2d760:	bge	2d770 <__assert_fail@plt+0x1c3ec>
   2d764:	movw	r0, #1
   2d768:	str	r0, [fp, #-68]	; 0xffffffbc
   2d76c:	b	2d788 <__assert_fail@plt+0x1c404>
   2d770:	ldr	r0, [fp, #8]
   2d774:	movw	r1, #0
   2d778:	sub	r0, r1, r0
   2d77c:	mvn	r1, #0
   2d780:	udiv	r0, r1, r0
   2d784:	str	r0, [fp, #-68]	; 0xffffffbc
   2d788:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2d78c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d790:	mvn	r2, #0
   2d794:	sub	r1, r2, r1
   2d798:	cmp	r0, r1
   2d79c:	bls	2d8b8 <__assert_fail@plt+0x1c534>
   2d7a0:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d7a4:	b	2d7a8 <__assert_fail@plt+0x1c424>
   2d7a8:	b	2d800 <__assert_fail@plt+0x1c47c>
   2d7ac:	b	2d800 <__assert_fail@plt+0x1c47c>
   2d7b0:	ldr	r0, [fp, #8]
   2d7b4:	cmn	r0, #1
   2d7b8:	bne	2d800 <__assert_fail@plt+0x1c47c>
   2d7bc:	b	2d7c0 <__assert_fail@plt+0x1c43c>
   2d7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d7c4:	add	r0, r0, #0
   2d7c8:	movw	r1, #0
   2d7cc:	cmp	r1, r0
   2d7d0:	blt	2d8b8 <__assert_fail@plt+0x1c534>
   2d7d4:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d7dc:	movw	r1, #0
   2d7e0:	cmp	r1, r0
   2d7e4:	bge	2d8cc <__assert_fail@plt+0x1c548>
   2d7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d7ec:	sub	r0, r0, #1
   2d7f0:	mvn	r1, #0
   2d7f4:	cmp	r1, r0
   2d7f8:	blt	2d8b8 <__assert_fail@plt+0x1c534>
   2d7fc:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d800:	ldr	r0, [fp, #8]
   2d804:	movw	r1, #0
   2d808:	sdiv	r0, r1, r0
   2d80c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d810:	cmp	r0, r1
   2d814:	blt	2d8b8 <__assert_fail@plt+0x1c534>
   2d818:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d81c:	ldr	r0, [fp, #8]
   2d820:	cmp	r0, #0
   2d824:	bne	2d82c <__assert_fail@plt+0x1c4a8>
   2d828:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d830:	cmp	r0, #0
   2d834:	bge	2d8a0 <__assert_fail@plt+0x1c51c>
   2d838:	b	2d83c <__assert_fail@plt+0x1c4b8>
   2d83c:	b	2d884 <__assert_fail@plt+0x1c500>
   2d840:	b	2d884 <__assert_fail@plt+0x1c500>
   2d844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d848:	cmn	r0, #1
   2d84c:	bne	2d884 <__assert_fail@plt+0x1c500>
   2d850:	b	2d854 <__assert_fail@plt+0x1c4d0>
   2d854:	ldr	r0, [fp, #8]
   2d858:	add	r0, r0, #0
   2d85c:	movw	r1, #0
   2d860:	cmp	r1, r0
   2d864:	blt	2d8b8 <__assert_fail@plt+0x1c534>
   2d868:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d86c:	ldr	r0, [fp, #8]
   2d870:	sub	r0, r0, #1
   2d874:	mvn	r1, #0
   2d878:	cmp	r1, r0
   2d87c:	blt	2d8b8 <__assert_fail@plt+0x1c534>
   2d880:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d888:	movw	r1, #0
   2d88c:	sdiv	r0, r1, r0
   2d890:	ldr	r1, [fp, #8]
   2d894:	cmp	r0, r1
   2d898:	blt	2d8b8 <__assert_fail@plt+0x1c534>
   2d89c:	b	2d8cc <__assert_fail@plt+0x1c548>
   2d8a0:	ldr	r0, [fp, #8]
   2d8a4:	mvn	r1, #0
   2d8a8:	udiv	r0, r1, r0
   2d8ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d8b0:	cmp	r0, r1
   2d8b4:	bcs	2d8cc <__assert_fail@plt+0x1c548>
   2d8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8bc:	ldr	r1, [fp, #8]
   2d8c0:	mul	r0, r0, r1
   2d8c4:	str	r0, [fp, #-28]	; 0xffffffe4
   2d8c8:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2d8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8d0:	ldr	r1, [fp, #8]
   2d8d4:	mul	r0, r0, r1
   2d8d8:	str	r0, [fp, #-28]	; 0xffffffe4
   2d8dc:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2d8e0:	b	2d8e4 <__assert_fail@plt+0x1c560>
   2d8e4:	ldr	r0, [fp, #8]
   2d8e8:	cmp	r0, #0
   2d8ec:	bge	2da7c <__assert_fail@plt+0x1c6f8>
   2d8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8f4:	cmp	r0, #0
   2d8f8:	bge	2d9e4 <__assert_fail@plt+0x1c660>
   2d8fc:	b	2d900 <__assert_fail@plt+0x1c57c>
   2d900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d904:	ldr	r1, [fp, #8]
   2d908:	asr	r3, r1, #31
   2d90c:	mvn	r2, #0
   2d910:	mvn	ip, #-2147483648	; 0x80000000
   2d914:	str	r0, [fp, #-72]	; 0xffffffb8
   2d918:	mov	r0, r2
   2d91c:	str	r1, [fp, #-76]	; 0xffffffb4
   2d920:	mov	r1, ip
   2d924:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2d928:	bl	33d70 <__assert_fail@plt+0x229ec>
   2d92c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2d930:	subs	r0, r2, r0
   2d934:	rscs	r1, r1, r2, asr #31
   2d938:	str	r0, [fp, #-80]	; 0xffffffb0
   2d93c:	str	r1, [fp, #-84]	; 0xffffffac
   2d940:	blt	2db5c <__assert_fail@plt+0x1c7d8>
   2d944:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2d948:	b	2d94c <__assert_fail@plt+0x1c5c8>
   2d94c:	ldr	r0, [pc, #196]	; 2da18 <__assert_fail@plt+0x1c694>
   2d950:	ldr	r1, [fp, #8]
   2d954:	cmp	r1, r0
   2d958:	blt	2d970 <__assert_fail@plt+0x1c5ec>
   2d95c:	b	2d988 <__assert_fail@plt+0x1c604>
   2d960:	ldr	r0, [fp, #8]
   2d964:	movw	r1, #0
   2d968:	cmp	r1, r0
   2d96c:	bge	2d988 <__assert_fail@plt+0x1c604>
   2d970:	mov	r0, #0
   2d974:	mvn	r1, #0
   2d978:	str	r1, [fp, #-88]	; 0xffffffa8
   2d97c:	str	r0, [fp, #-92]	; 0xffffffa4
   2d980:	b	2d9bc <__assert_fail@plt+0x1c638>
   2d984:	svcvc	0x00ffffff
   2d988:	ldr	r0, [fp, #8]
   2d98c:	rsb	r0, r0, #0
   2d990:	asr	r3, r0, #31
   2d994:	mvn	r1, #0
   2d998:	mvn	r2, #-2147483648	; 0x80000000
   2d99c:	str	r0, [fp, #-96]	; 0xffffffa0
   2d9a0:	mov	r0, r1
   2d9a4:	mov	r1, r2
   2d9a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2d9ac:	bl	33d70 <__assert_fail@plt+0x229ec>
   2d9b0:	str	r0, [fp, #-88]	; 0xffffffa8
   2d9b4:	str	r1, [fp, #-92]	; 0xffffffa4
   2d9b8:	b	2d9bc <__assert_fail@plt+0x1c638>
   2d9bc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2d9c0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2d9c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d9c8:	mvn	r2, r2
   2d9cc:	subs	r1, r2, r1
   2d9d0:	rscs	r0, r0, r2, asr #31
   2d9d4:	str	r1, [fp, #-100]	; 0xffffff9c
   2d9d8:	str	r0, [fp, #-104]	; 0xffffff98
   2d9dc:	bge	2db5c <__assert_fail@plt+0x1c7d8>
   2d9e0:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2d9e4:	ldr	r0, [fp, #8]
   2d9e8:	cmn	r0, #1
   2d9ec:	bne	2da3c <__assert_fail@plt+0x1c6b8>
   2d9f0:	b	2d9f4 <__assert_fail@plt+0x1c670>
   2d9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9f8:	mov	r1, #-2147483648	; 0x80000000
   2d9fc:	add	r1, r1, r0, asr #31
   2da00:	rsbs	r0, r0, #0
   2da04:	rscs	r1, r1, #0
   2da08:	str	r0, [fp, #-108]	; 0xffffff94
   2da0c:	str	r1, [fp, #-112]	; 0xffffff90
   2da10:	blt	2db5c <__assert_fail@plt+0x1c7d8>
   2da14:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2da18:	andhi	r0, r0, r1
   2da1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da20:	movw	r1, #0
   2da24:	cmp	r1, r0
   2da28:	bge	2db70 <__assert_fail@plt+0x1c7ec>
   2da2c:	mov	r0, #0
   2da30:	cmp	r0, #0
   2da34:	bne	2db5c <__assert_fail@plt+0x1c7d8>
   2da38:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2da3c:	ldr	r0, [fp, #8]
   2da40:	asr	r3, r0, #31
   2da44:	mov	r1, #0
   2da48:	mov	r2, #-2147483648	; 0x80000000
   2da4c:	str	r0, [fp, #-116]	; 0xffffff8c
   2da50:	mov	r0, r1
   2da54:	mov	r1, r2
   2da58:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2da5c:	bl	33d70 <__assert_fail@plt+0x229ec>
   2da60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2da64:	subs	r0, r0, r2
   2da68:	sbcs	r1, r1, r2, asr #31
   2da6c:	str	r0, [fp, #-120]	; 0xffffff88
   2da70:	str	r1, [fp, #-124]	; 0xffffff84
   2da74:	blt	2db5c <__assert_fail@plt+0x1c7d8>
   2da78:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2da7c:	ldr	r0, [fp, #8]
   2da80:	cmp	r0, #0
   2da84:	bne	2da8c <__assert_fail@plt+0x1c708>
   2da88:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2da8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da90:	cmp	r0, #0
   2da94:	bge	2db1c <__assert_fail@plt+0x1c798>
   2da98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da9c:	cmn	r0, #1
   2daa0:	bne	2dadc <__assert_fail@plt+0x1c758>
   2daa4:	b	2daa8 <__assert_fail@plt+0x1c724>
   2daa8:	ldr	r0, [fp, #8]
   2daac:	mov	r1, #-2147483648	; 0x80000000
   2dab0:	add	r1, r1, r0, asr #31
   2dab4:	rsbs	r0, r0, #0
   2dab8:	rscs	r1, r1, #0
   2dabc:	str	r0, [fp, #-128]	; 0xffffff80
   2dac0:	str	r1, [fp, #-132]	; 0xffffff7c
   2dac4:	blt	2db5c <__assert_fail@plt+0x1c7d8>
   2dac8:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2dacc:	mov	r0, #0
   2dad0:	cmp	r0, #0
   2dad4:	bne	2db5c <__assert_fail@plt+0x1c7d8>
   2dad8:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2dadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dae0:	asr	r3, r0, #31
   2dae4:	mov	r1, #0
   2dae8:	mov	r2, #-2147483648	; 0x80000000
   2daec:	str	r0, [fp, #-136]	; 0xffffff78
   2daf0:	mov	r0, r1
   2daf4:	mov	r1, r2
   2daf8:	ldr	r2, [fp, #-136]	; 0xffffff78
   2dafc:	bl	33d70 <__assert_fail@plt+0x229ec>
   2db00:	ldr	r2, [fp, #8]
   2db04:	subs	r0, r0, r2
   2db08:	sbcs	r1, r1, r2, asr #31
   2db0c:	str	r0, [fp, #-140]	; 0xffffff74
   2db10:	str	r1, [fp, #-144]	; 0xffffff70
   2db14:	blt	2db5c <__assert_fail@plt+0x1c7d8>
   2db18:	b	2db70 <__assert_fail@plt+0x1c7ec>
   2db1c:	ldr	r0, [fp, #8]
   2db20:	asr	r3, r0, #31
   2db24:	mvn	r1, #0
   2db28:	mvn	r2, #-2147483648	; 0x80000000
   2db2c:	str	r0, [fp, #-148]	; 0xffffff6c
   2db30:	mov	r0, r1
   2db34:	mov	r1, r2
   2db38:	ldr	r2, [fp, #-148]	; 0xffffff6c
   2db3c:	bl	33d70 <__assert_fail@plt+0x229ec>
   2db40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2db44:	subs	r0, r0, r2
   2db48:	sbcs	r1, r1, r2, asr #31
   2db4c:	str	r0, [fp, #-152]	; 0xffffff68
   2db50:	str	r1, [fp, #-156]	; 0xffffff64
   2db54:	bge	2db70 <__assert_fail@plt+0x1c7ec>
   2db58:	b	2db5c <__assert_fail@plt+0x1c7d8>
   2db5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db60:	ldr	r1, [fp, #8]
   2db64:	mul	r0, r0, r1
   2db68:	str	r0, [fp, #-28]	; 0xffffffe4
   2db6c:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2db70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db74:	ldr	r1, [fp, #8]
   2db78:	mul	r0, r0, r1
   2db7c:	str	r0, [fp, #-28]	; 0xffffffe4
   2db80:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2db84:	ldr	r0, [fp, #8]
   2db88:	cmp	r0, #0
   2db8c:	bge	2dcec <__assert_fail@plt+0x1c968>
   2db90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db94:	cmp	r0, #0
   2db98:	bge	2dc74 <__assert_fail@plt+0x1c8f0>
   2db9c:	b	2dbe4 <__assert_fail@plt+0x1c860>
   2dba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dba4:	ldr	r1, [fp, #8]
   2dba8:	asr	r3, r1, #31
   2dbac:	mvn	r2, #0
   2dbb0:	str	r0, [fp, #-160]	; 0xffffff60
   2dbb4:	mov	r0, r2
   2dbb8:	str	r1, [fp, #-164]	; 0xffffff5c
   2dbbc:	mov	r1, r2
   2dbc0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2dbc4:	bl	33e44 <__assert_fail@plt+0x22ac0>
   2dbc8:	ldr	r2, [fp, #-160]	; 0xffffff60
   2dbcc:	subs	r0, r2, r0
   2dbd0:	rscs	r1, r1, r2, asr #31
   2dbd4:	str	r0, [fp, #-168]	; 0xffffff58
   2dbd8:	str	r1, [fp, #-172]	; 0xffffff54
   2dbdc:	bcc	2dda8 <__assert_fail@plt+0x1ca24>
   2dbe0:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dbe4:	b	2dbe8 <__assert_fail@plt+0x1c864>
   2dbe8:	ldr	r0, [pc, #-472]	; 2da18 <__assert_fail@plt+0x1c694>
   2dbec:	ldr	r1, [fp, #8]
   2dbf0:	cmp	r1, r0
   2dbf4:	blt	2dc0c <__assert_fail@plt+0x1c888>
   2dbf8:	b	2dc20 <__assert_fail@plt+0x1c89c>
   2dbfc:	ldr	r0, [fp, #8]
   2dc00:	movw	r1, #0
   2dc04:	cmp	r1, r0
   2dc08:	bge	2dc20 <__assert_fail@plt+0x1c89c>
   2dc0c:	mov	r0, #1
   2dc10:	mvn	r1, #0
   2dc14:	str	r1, [fp, #-176]	; 0xffffff50
   2dc18:	str	r0, [fp, #-180]	; 0xffffff4c
   2dc1c:	b	2dc4c <__assert_fail@plt+0x1c8c8>
   2dc20:	ldr	r0, [fp, #8]
   2dc24:	rsb	r0, r0, #0
   2dc28:	asr	r3, r0, #31
   2dc2c:	mvn	r1, #0
   2dc30:	str	r0, [fp, #-184]	; 0xffffff48
   2dc34:	mov	r0, r1
   2dc38:	ldr	r2, [fp, #-184]	; 0xffffff48
   2dc3c:	bl	33e44 <__assert_fail@plt+0x22ac0>
   2dc40:	str	r0, [fp, #-176]	; 0xffffff50
   2dc44:	str	r1, [fp, #-180]	; 0xffffff4c
   2dc48:	b	2dc4c <__assert_fail@plt+0x1c8c8>
   2dc4c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   2dc50:	ldr	r1, [fp, #-176]	; 0xffffff50
   2dc54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dc58:	mvn	r2, r2
   2dc5c:	subs	r1, r2, r1
   2dc60:	rscs	r0, r0, r2, asr #31
   2dc64:	str	r1, [sp, #188]	; 0xbc
   2dc68:	str	r0, [sp, #184]	; 0xb8
   2dc6c:	bcs	2dda8 <__assert_fail@plt+0x1ca24>
   2dc70:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dc74:	b	2dc78 <__assert_fail@plt+0x1c8f4>
   2dc78:	b	2dcd0 <__assert_fail@plt+0x1c94c>
   2dc7c:	b	2dcd0 <__assert_fail@plt+0x1c94c>
   2dc80:	ldr	r0, [fp, #8]
   2dc84:	cmn	r0, #1
   2dc88:	bne	2dcd0 <__assert_fail@plt+0x1c94c>
   2dc8c:	b	2dc90 <__assert_fail@plt+0x1c90c>
   2dc90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc94:	add	r0, r0, #0
   2dc98:	movw	r1, #0
   2dc9c:	cmp	r1, r0
   2dca0:	blt	2dda8 <__assert_fail@plt+0x1ca24>
   2dca4:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dcac:	movw	r1, #0
   2dcb0:	cmp	r1, r0
   2dcb4:	bge	2ddbc <__assert_fail@plt+0x1ca38>
   2dcb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dcbc:	sub	r0, r0, #1
   2dcc0:	mvn	r1, #0
   2dcc4:	cmp	r1, r0
   2dcc8:	blt	2dda8 <__assert_fail@plt+0x1ca24>
   2dccc:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dcd0:	ldr	r0, [fp, #8]
   2dcd4:	movw	r1, #0
   2dcd8:	sdiv	r0, r1, r0
   2dcdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dce0:	cmp	r0, r1
   2dce4:	blt	2dda8 <__assert_fail@plt+0x1ca24>
   2dce8:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dcec:	ldr	r0, [fp, #8]
   2dcf0:	cmp	r0, #0
   2dcf4:	bne	2dcfc <__assert_fail@plt+0x1c978>
   2dcf8:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dcfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd00:	cmp	r0, #0
   2dd04:	bge	2dd70 <__assert_fail@plt+0x1c9ec>
   2dd08:	b	2dd0c <__assert_fail@plt+0x1c988>
   2dd0c:	b	2dd54 <__assert_fail@plt+0x1c9d0>
   2dd10:	b	2dd54 <__assert_fail@plt+0x1c9d0>
   2dd14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd18:	cmn	r0, #1
   2dd1c:	bne	2dd54 <__assert_fail@plt+0x1c9d0>
   2dd20:	b	2dd24 <__assert_fail@plt+0x1c9a0>
   2dd24:	ldr	r0, [fp, #8]
   2dd28:	add	r0, r0, #0
   2dd2c:	movw	r1, #0
   2dd30:	cmp	r1, r0
   2dd34:	blt	2dda8 <__assert_fail@plt+0x1ca24>
   2dd38:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dd3c:	ldr	r0, [fp, #8]
   2dd40:	sub	r0, r0, #1
   2dd44:	mvn	r1, #0
   2dd48:	cmp	r1, r0
   2dd4c:	blt	2dda8 <__assert_fail@plt+0x1ca24>
   2dd50:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dd54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd58:	movw	r1, #0
   2dd5c:	sdiv	r0, r1, r0
   2dd60:	ldr	r1, [fp, #8]
   2dd64:	cmp	r0, r1
   2dd68:	blt	2dda8 <__assert_fail@plt+0x1ca24>
   2dd6c:	b	2ddbc <__assert_fail@plt+0x1ca38>
   2dd70:	ldr	r0, [fp, #8]
   2dd74:	asr	r3, r0, #31
   2dd78:	mvn	r1, #0
   2dd7c:	str	r0, [sp, #180]	; 0xb4
   2dd80:	mov	r0, r1
   2dd84:	ldr	r2, [sp, #180]	; 0xb4
   2dd88:	bl	33e44 <__assert_fail@plt+0x22ac0>
   2dd8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dd90:	subs	r0, r0, r2
   2dd94:	sbcs	r1, r1, r2, asr #31
   2dd98:	str	r0, [sp, #176]	; 0xb0
   2dd9c:	str	r1, [sp, #172]	; 0xac
   2dda0:	bcs	2ddbc <__assert_fail@plt+0x1ca38>
   2dda4:	b	2dda8 <__assert_fail@plt+0x1ca24>
   2dda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ddac:	ldr	r1, [fp, #8]
   2ddb0:	mul	r0, r0, r1
   2ddb4:	str	r0, [fp, #-28]	; 0xffffffe4
   2ddb8:	b	2ddd0 <__assert_fail@plt+0x1ca4c>
   2ddbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ddc0:	ldr	r1, [fp, #8]
   2ddc4:	mul	r0, r0, r1
   2ddc8:	str	r0, [fp, #-28]	; 0xffffffe4
   2ddcc:	b	2dde0 <__assert_fail@plt+0x1ca5c>
   2ddd0:	ldr	r0, [pc, #-1108]	; 2d984 <__assert_fail@plt+0x1c600>
   2ddd4:	str	r0, [sp, #168]	; 0xa8
   2ddd8:	b	2de00 <__assert_fail@plt+0x1ca7c>
   2dddc:			; <UNDEFINED> instruction: 0xffff8000
   2dde0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2dde4:	cmp	r0, #64	; 0x40
   2dde8:	movw	r0, #0
   2ddec:	movlt	r0, #1
   2ddf0:	tst	r0, #1
   2ddf4:	movw	r0, #64	; 0x40
   2ddf8:	moveq	r0, #0
   2ddfc:	str	r0, [sp, #168]	; 0xa8
   2de00:	ldr	r0, [sp, #168]	; 0xa8
   2de04:	str	r0, [fp, #-32]	; 0xffffffe0
   2de08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2de0c:	cmp	r0, #0
   2de10:	beq	2de40 <__assert_fail@plt+0x1cabc>
   2de14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2de18:	ldr	r1, [fp, #8]
   2de1c:	sdiv	r0, r0, r1
   2de20:	str	r0, [fp, #-24]	; 0xffffffe8
   2de24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2de28:	mov	r1, r0
   2de2c:	ldr	r2, [fp, #8]
   2de30:	sdiv	r3, r0, r2
   2de34:	mls	r0, r3, r2, r0
   2de38:	sub	r0, r1, r0
   2de3c:	str	r0, [fp, #-28]	; 0xffffffe4
   2de40:	ldr	r0, [fp, #-4]
   2de44:	movw	r1, #0
   2de48:	cmp	r0, r1
   2de4c:	bne	2de5c <__assert_fail@plt+0x1cad8>
   2de50:	ldr	r0, [fp, #-8]
   2de54:	movw	r1, #0
   2de58:	str	r1, [r0]
   2de5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2de60:	ldr	r1, [fp, #-20]	; 0xffffffec
   2de64:	sub	r0, r0, r1
   2de68:	ldr	r1, [fp, #-12]
   2de6c:	cmp	r0, r1
   2de70:	bge	2f2a8 <__assert_fail@plt+0x1df24>
   2de74:	ldr	r0, [fp, #-20]	; 0xffffffec
   2de78:	ldr	r1, [fp, #-12]
   2de7c:	add	r1, r0, r1
   2de80:	mov	r2, #1
   2de84:	cmp	r1, r0
   2de88:	movwvc	r2, #0
   2de8c:	str	r1, [fp, #-24]	; 0xffffffe8
   2de90:	tst	r2, #1
   2de94:	bne	2f2a4 <__assert_fail@plt+0x1df20>
   2de98:	ldr	r0, [fp, #-16]
   2de9c:	movw	r1, #0
   2dea0:	cmp	r1, r0
   2dea4:	bgt	2deb8 <__assert_fail@plt+0x1cb34>
   2dea8:	ldr	r0, [fp, #-16]
   2deac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2deb0:	cmp	r0, r1
   2deb4:	blt	2f2a4 <__assert_fail@plt+0x1df20>
   2deb8:	b	2e294 <__assert_fail@plt+0x1cf10>
   2debc:	b	2dec0 <__assert_fail@plt+0x1cb3c>
   2dec0:	ldr	r0, [fp, #8]
   2dec4:	cmp	r0, #0
   2dec8:	bge	2dfdc <__assert_fail@plt+0x1cc58>
   2decc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ded0:	cmp	r0, #0
   2ded4:	bge	2df60 <__assert_fail@plt+0x1cbdc>
   2ded8:	b	2dedc <__assert_fail@plt+0x1cb58>
   2dedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dee0:	ldr	r1, [fp, #8]
   2dee4:	movw	r2, #127	; 0x7f
   2dee8:	sdiv	r1, r2, r1
   2deec:	cmp	r0, r1
   2def0:	blt	2e07c <__assert_fail@plt+0x1ccf8>
   2def4:	b	2e094 <__assert_fail@plt+0x1cd10>
   2def8:	b	2defc <__assert_fail@plt+0x1cb78>
   2defc:	ldr	r0, [pc, #-1260]	; 2da18 <__assert_fail@plt+0x1c694>
   2df00:	ldr	r1, [fp, #8]
   2df04:	cmp	r1, r0
   2df08:	blt	2df20 <__assert_fail@plt+0x1cb9c>
   2df0c:	b	2df2c <__assert_fail@plt+0x1cba8>
   2df10:	ldr	r0, [fp, #8]
   2df14:	movw	r1, #0
   2df18:	cmp	r1, r0
   2df1c:	bge	2df2c <__assert_fail@plt+0x1cba8>
   2df20:	movw	r0, #0
   2df24:	str	r0, [sp, #164]	; 0xa4
   2df28:	b	2df44 <__assert_fail@plt+0x1cbc0>
   2df2c:	ldr	r0, [fp, #8]
   2df30:	movw	r1, #0
   2df34:	sub	r0, r1, r0
   2df38:	movw	r1, #127	; 0x7f
   2df3c:	sdiv	r0, r1, r0
   2df40:	str	r0, [sp, #164]	; 0xa4
   2df44:	ldr	r0, [sp, #164]	; 0xa4
   2df48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2df4c:	mvn	r2, #0
   2df50:	sub	r1, r2, r1
   2df54:	cmp	r0, r1
   2df58:	ble	2e07c <__assert_fail@plt+0x1ccf8>
   2df5c:	b	2e094 <__assert_fail@plt+0x1cd10>
   2df60:	b	2df64 <__assert_fail@plt+0x1cbe0>
   2df64:	b	2dfc0 <__assert_fail@plt+0x1cc3c>
   2df68:	b	2dfc0 <__assert_fail@plt+0x1cc3c>
   2df6c:	ldr	r0, [fp, #8]
   2df70:	cmn	r0, #1
   2df74:	bne	2dfc0 <__assert_fail@plt+0x1cc3c>
   2df78:	b	2df7c <__assert_fail@plt+0x1cbf8>
   2df7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2df80:	mvn	r1, #127	; 0x7f
   2df84:	add	r0, r0, r1
   2df88:	movw	r1, #0
   2df8c:	cmp	r1, r0
   2df90:	blt	2e07c <__assert_fail@plt+0x1ccf8>
   2df94:	b	2e094 <__assert_fail@plt+0x1cd10>
   2df98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2df9c:	movw	r1, #0
   2dfa0:	cmp	r1, r0
   2dfa4:	bge	2e094 <__assert_fail@plt+0x1cd10>
   2dfa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dfac:	sub	r0, r0, #1
   2dfb0:	movw	r1, #127	; 0x7f
   2dfb4:	cmp	r1, r0
   2dfb8:	blt	2e07c <__assert_fail@plt+0x1ccf8>
   2dfbc:	b	2e094 <__assert_fail@plt+0x1cd10>
   2dfc0:	ldr	r0, [fp, #8]
   2dfc4:	mvn	r1, #127	; 0x7f
   2dfc8:	sdiv	r0, r1, r0
   2dfcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dfd0:	cmp	r0, r1
   2dfd4:	blt	2e07c <__assert_fail@plt+0x1ccf8>
   2dfd8:	b	2e094 <__assert_fail@plt+0x1cd10>
   2dfdc:	ldr	r0, [fp, #8]
   2dfe0:	cmp	r0, #0
   2dfe4:	bne	2dfec <__assert_fail@plt+0x1cc68>
   2dfe8:	b	2e094 <__assert_fail@plt+0x1cd10>
   2dfec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dff0:	cmp	r0, #0
   2dff4:	bge	2e064 <__assert_fail@plt+0x1cce0>
   2dff8:	b	2dffc <__assert_fail@plt+0x1cc78>
   2dffc:	b	2e048 <__assert_fail@plt+0x1ccc4>
   2e000:	b	2e048 <__assert_fail@plt+0x1ccc4>
   2e004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e008:	cmn	r0, #1
   2e00c:	bne	2e048 <__assert_fail@plt+0x1ccc4>
   2e010:	b	2e014 <__assert_fail@plt+0x1cc90>
   2e014:	ldr	r0, [fp, #8]
   2e018:	mvn	r1, #127	; 0x7f
   2e01c:	add	r0, r0, r1
   2e020:	movw	r1, #0
   2e024:	cmp	r1, r0
   2e028:	blt	2e07c <__assert_fail@plt+0x1ccf8>
   2e02c:	b	2e094 <__assert_fail@plt+0x1cd10>
   2e030:	ldr	r0, [fp, #8]
   2e034:	sub	r0, r0, #1
   2e038:	movw	r1, #127	; 0x7f
   2e03c:	cmp	r1, r0
   2e040:	blt	2e07c <__assert_fail@plt+0x1ccf8>
   2e044:	b	2e094 <__assert_fail@plt+0x1cd10>
   2e048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e04c:	mvn	r1, #127	; 0x7f
   2e050:	sdiv	r0, r1, r0
   2e054:	ldr	r1, [fp, #8]
   2e058:	cmp	r0, r1
   2e05c:	blt	2e07c <__assert_fail@plt+0x1ccf8>
   2e060:	b	2e094 <__assert_fail@plt+0x1cd10>
   2e064:	ldr	r0, [fp, #8]
   2e068:	movw	r1, #127	; 0x7f
   2e06c:	sdiv	r0, r1, r0
   2e070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e074:	cmp	r0, r1
   2e078:	bge	2e094 <__assert_fail@plt+0x1cd10>
   2e07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e080:	ldr	r1, [fp, #8]
   2e084:	mul	r0, r0, r1
   2e088:	sxtb	r0, r0
   2e08c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e090:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2e094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e098:	ldr	r1, [fp, #8]
   2e09c:	mul	r0, r0, r1
   2e0a0:	sxtb	r0, r0
   2e0a4:	str	r0, [fp, #-28]	; 0xffffffe4
   2e0a8:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2e0ac:	ldr	r0, [fp, #8]
   2e0b0:	cmp	r0, #0
   2e0b4:	bge	2e1c4 <__assert_fail@plt+0x1ce40>
   2e0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e0bc:	cmp	r0, #0
   2e0c0:	bge	2e14c <__assert_fail@plt+0x1cdc8>
   2e0c4:	b	2e0c8 <__assert_fail@plt+0x1cd44>
   2e0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e0cc:	ldr	r1, [fp, #8]
   2e0d0:	movw	r2, #255	; 0xff
   2e0d4:	sdiv	r1, r2, r1
   2e0d8:	cmp	r0, r1
   2e0dc:	blt	2e260 <__assert_fail@plt+0x1cedc>
   2e0e0:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e0e4:	b	2e0e8 <__assert_fail@plt+0x1cd64>
   2e0e8:	ldr	r0, [pc, #-1752]	; 2da18 <__assert_fail@plt+0x1c694>
   2e0ec:	ldr	r1, [fp, #8]
   2e0f0:	cmp	r1, r0
   2e0f4:	blt	2e10c <__assert_fail@plt+0x1cd88>
   2e0f8:	b	2e118 <__assert_fail@plt+0x1cd94>
   2e0fc:	ldr	r0, [fp, #8]
   2e100:	movw	r1, #0
   2e104:	cmp	r1, r0
   2e108:	bge	2e118 <__assert_fail@plt+0x1cd94>
   2e10c:	movw	r0, #0
   2e110:	str	r0, [sp, #160]	; 0xa0
   2e114:	b	2e130 <__assert_fail@plt+0x1cdac>
   2e118:	ldr	r0, [fp, #8]
   2e11c:	movw	r1, #0
   2e120:	sub	r0, r1, r0
   2e124:	movw	r1, #255	; 0xff
   2e128:	sdiv	r0, r1, r0
   2e12c:	str	r0, [sp, #160]	; 0xa0
   2e130:	ldr	r0, [sp, #160]	; 0xa0
   2e134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e138:	mvn	r2, #0
   2e13c:	sub	r1, r2, r1
   2e140:	cmp	r0, r1
   2e144:	ble	2e260 <__assert_fail@plt+0x1cedc>
   2e148:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e14c:	b	2e150 <__assert_fail@plt+0x1cdcc>
   2e150:	b	2e1a8 <__assert_fail@plt+0x1ce24>
   2e154:	b	2e1a8 <__assert_fail@plt+0x1ce24>
   2e158:	ldr	r0, [fp, #8]
   2e15c:	cmn	r0, #1
   2e160:	bne	2e1a8 <__assert_fail@plt+0x1ce24>
   2e164:	b	2e168 <__assert_fail@plt+0x1cde4>
   2e168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e16c:	add	r0, r0, #0
   2e170:	movw	r1, #0
   2e174:	cmp	r1, r0
   2e178:	blt	2e260 <__assert_fail@plt+0x1cedc>
   2e17c:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e184:	movw	r1, #0
   2e188:	cmp	r1, r0
   2e18c:	bge	2e27c <__assert_fail@plt+0x1cef8>
   2e190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e194:	sub	r0, r0, #1
   2e198:	mvn	r1, #0
   2e19c:	cmp	r1, r0
   2e1a0:	blt	2e260 <__assert_fail@plt+0x1cedc>
   2e1a4:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e1a8:	ldr	r0, [fp, #8]
   2e1ac:	movw	r1, #0
   2e1b0:	sdiv	r0, r1, r0
   2e1b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e1b8:	cmp	r0, r1
   2e1bc:	blt	2e260 <__assert_fail@plt+0x1cedc>
   2e1c0:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e1c4:	ldr	r0, [fp, #8]
   2e1c8:	cmp	r0, #0
   2e1cc:	bne	2e1d4 <__assert_fail@plt+0x1ce50>
   2e1d0:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e1d8:	cmp	r0, #0
   2e1dc:	bge	2e248 <__assert_fail@plt+0x1cec4>
   2e1e0:	b	2e1e4 <__assert_fail@plt+0x1ce60>
   2e1e4:	b	2e22c <__assert_fail@plt+0x1cea8>
   2e1e8:	b	2e22c <__assert_fail@plt+0x1cea8>
   2e1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e1f0:	cmn	r0, #1
   2e1f4:	bne	2e22c <__assert_fail@plt+0x1cea8>
   2e1f8:	b	2e1fc <__assert_fail@plt+0x1ce78>
   2e1fc:	ldr	r0, [fp, #8]
   2e200:	add	r0, r0, #0
   2e204:	movw	r1, #0
   2e208:	cmp	r1, r0
   2e20c:	blt	2e260 <__assert_fail@plt+0x1cedc>
   2e210:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e214:	ldr	r0, [fp, #8]
   2e218:	sub	r0, r0, #1
   2e21c:	mvn	r1, #0
   2e220:	cmp	r1, r0
   2e224:	blt	2e260 <__assert_fail@plt+0x1cedc>
   2e228:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e22c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e230:	movw	r1, #0
   2e234:	sdiv	r0, r1, r0
   2e238:	ldr	r1, [fp, #8]
   2e23c:	cmp	r0, r1
   2e240:	blt	2e260 <__assert_fail@plt+0x1cedc>
   2e244:	b	2e27c <__assert_fail@plt+0x1cef8>
   2e248:	ldr	r0, [fp, #8]
   2e24c:	movw	r1, #255	; 0xff
   2e250:	sdiv	r0, r1, r0
   2e254:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e258:	cmp	r0, r1
   2e25c:	bge	2e27c <__assert_fail@plt+0x1cef8>
   2e260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e264:	ldr	r1, [fp, #8]
   2e268:	mul	r0, r0, r1
   2e26c:	and	r0, r0, #255	; 0xff
   2e270:	str	r0, [fp, #-28]	; 0xffffffe4
   2e274:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2e278:	andhi	r0, r0, r0
   2e27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e280:	ldr	r1, [fp, #8]
   2e284:	mul	r0, r0, r1
   2e288:	and	r0, r0, #255	; 0xff
   2e28c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e290:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2e294:	b	2e66c <__assert_fail@plt+0x1d2e8>
   2e298:	b	2e29c <__assert_fail@plt+0x1cf18>
   2e29c:	ldr	r0, [fp, #8]
   2e2a0:	cmp	r0, #0
   2e2a4:	bge	2e3b8 <__assert_fail@plt+0x1d034>
   2e2a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e2ac:	cmp	r0, #0
   2e2b0:	bge	2e33c <__assert_fail@plt+0x1cfb8>
   2e2b4:	b	2e2b8 <__assert_fail@plt+0x1cf34>
   2e2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e2bc:	ldr	r1, [fp, #8]
   2e2c0:	movw	r2, #32767	; 0x7fff
   2e2c4:	sdiv	r1, r2, r1
   2e2c8:	cmp	r0, r1
   2e2cc:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e2d0:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e2d4:	b	2e2d8 <__assert_fail@plt+0x1cf54>
   2e2d8:	ldr	r0, [pc, #4084]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2e2dc:	ldr	r1, [fp, #8]
   2e2e0:	cmp	r1, r0
   2e2e4:	blt	2e2fc <__assert_fail@plt+0x1cf78>
   2e2e8:	b	2e308 <__assert_fail@plt+0x1cf84>
   2e2ec:	ldr	r0, [fp, #8]
   2e2f0:	movw	r1, #0
   2e2f4:	cmp	r1, r0
   2e2f8:	bge	2e308 <__assert_fail@plt+0x1cf84>
   2e2fc:	movw	r0, #0
   2e300:	str	r0, [sp, #156]	; 0x9c
   2e304:	b	2e320 <__assert_fail@plt+0x1cf9c>
   2e308:	ldr	r0, [fp, #8]
   2e30c:	movw	r1, #0
   2e310:	sub	r0, r1, r0
   2e314:	movw	r1, #32767	; 0x7fff
   2e318:	sdiv	r0, r1, r0
   2e31c:	str	r0, [sp, #156]	; 0x9c
   2e320:	ldr	r0, [sp, #156]	; 0x9c
   2e324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e328:	mvn	r2, #0
   2e32c:	sub	r1, r2, r1
   2e330:	cmp	r0, r1
   2e334:	ble	2e458 <__assert_fail@plt+0x1d0d4>
   2e338:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e33c:	b	2e340 <__assert_fail@plt+0x1cfbc>
   2e340:	b	2e39c <__assert_fail@plt+0x1d018>
   2e344:	b	2e39c <__assert_fail@plt+0x1d018>
   2e348:	ldr	r0, [fp, #8]
   2e34c:	cmn	r0, #1
   2e350:	bne	2e39c <__assert_fail@plt+0x1d018>
   2e354:	b	2e358 <__assert_fail@plt+0x1cfd4>
   2e358:	ldr	r0, [pc, #3964]	; 2f2dc <__assert_fail@plt+0x1df58>
   2e35c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e360:	add	r0, r1, r0
   2e364:	movw	r1, #0
   2e368:	cmp	r1, r0
   2e36c:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e370:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e378:	movw	r1, #0
   2e37c:	cmp	r1, r0
   2e380:	bge	2e470 <__assert_fail@plt+0x1d0ec>
   2e384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e388:	sub	r0, r0, #1
   2e38c:	movw	r1, #32767	; 0x7fff
   2e390:	cmp	r1, r0
   2e394:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e398:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e39c:	ldr	r0, [pc, #3896]	; 2f2dc <__assert_fail@plt+0x1df58>
   2e3a0:	ldr	r1, [fp, #8]
   2e3a4:	sdiv	r0, r0, r1
   2e3a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e3ac:	cmp	r0, r1
   2e3b0:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e3b4:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e3b8:	ldr	r0, [fp, #8]
   2e3bc:	cmp	r0, #0
   2e3c0:	bne	2e3c8 <__assert_fail@plt+0x1d044>
   2e3c4:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3cc:	cmp	r0, #0
   2e3d0:	bge	2e440 <__assert_fail@plt+0x1d0bc>
   2e3d4:	b	2e3d8 <__assert_fail@plt+0x1d054>
   2e3d8:	b	2e424 <__assert_fail@plt+0x1d0a0>
   2e3dc:	b	2e424 <__assert_fail@plt+0x1d0a0>
   2e3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3e4:	cmn	r0, #1
   2e3e8:	bne	2e424 <__assert_fail@plt+0x1d0a0>
   2e3ec:	b	2e3f0 <__assert_fail@plt+0x1d06c>
   2e3f0:	ldr	r0, [pc, #3812]	; 2f2dc <__assert_fail@plt+0x1df58>
   2e3f4:	ldr	r1, [fp, #8]
   2e3f8:	add	r0, r1, r0
   2e3fc:	movw	r1, #0
   2e400:	cmp	r1, r0
   2e404:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e408:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e40c:	ldr	r0, [fp, #8]
   2e410:	sub	r0, r0, #1
   2e414:	movw	r1, #32767	; 0x7fff
   2e418:	cmp	r1, r0
   2e41c:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e420:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e424:	ldr	r0, [pc, #3760]	; 2f2dc <__assert_fail@plt+0x1df58>
   2e428:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e42c:	sdiv	r0, r0, r1
   2e430:	ldr	r1, [fp, #8]
   2e434:	cmp	r0, r1
   2e438:	blt	2e458 <__assert_fail@plt+0x1d0d4>
   2e43c:	b	2e470 <__assert_fail@plt+0x1d0ec>
   2e440:	ldr	r0, [fp, #8]
   2e444:	movw	r1, #32767	; 0x7fff
   2e448:	sdiv	r0, r1, r0
   2e44c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e450:	cmp	r0, r1
   2e454:	bge	2e470 <__assert_fail@plt+0x1d0ec>
   2e458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e45c:	ldr	r1, [fp, #8]
   2e460:	mul	r0, r0, r1
   2e464:	sxth	r0, r0
   2e468:	str	r0, [fp, #-28]	; 0xffffffe4
   2e46c:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2e470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e474:	ldr	r1, [fp, #8]
   2e478:	mul	r0, r0, r1
   2e47c:	sxth	r0, r0
   2e480:	str	r0, [fp, #-28]	; 0xffffffe4
   2e484:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2e488:	ldr	r0, [fp, #8]
   2e48c:	cmp	r0, #0
   2e490:	bge	2e5a0 <__assert_fail@plt+0x1d21c>
   2e494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e498:	cmp	r0, #0
   2e49c:	bge	2e528 <__assert_fail@plt+0x1d1a4>
   2e4a0:	b	2e4a4 <__assert_fail@plt+0x1d120>
   2e4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e4a8:	ldr	r1, [fp, #8]
   2e4ac:	movw	r2, #65535	; 0xffff
   2e4b0:	sdiv	r1, r2, r1
   2e4b4:	cmp	r0, r1
   2e4b8:	blt	2e63c <__assert_fail@plt+0x1d2b8>
   2e4bc:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e4c0:	b	2e4c4 <__assert_fail@plt+0x1d140>
   2e4c4:	ldr	r0, [pc, #3592]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2e4c8:	ldr	r1, [fp, #8]
   2e4cc:	cmp	r1, r0
   2e4d0:	blt	2e4e8 <__assert_fail@plt+0x1d164>
   2e4d4:	b	2e4f4 <__assert_fail@plt+0x1d170>
   2e4d8:	ldr	r0, [fp, #8]
   2e4dc:	movw	r1, #0
   2e4e0:	cmp	r1, r0
   2e4e4:	bge	2e4f4 <__assert_fail@plt+0x1d170>
   2e4e8:	movw	r0, #0
   2e4ec:	str	r0, [sp, #152]	; 0x98
   2e4f0:	b	2e50c <__assert_fail@plt+0x1d188>
   2e4f4:	ldr	r0, [fp, #8]
   2e4f8:	movw	r1, #0
   2e4fc:	sub	r0, r1, r0
   2e500:	movw	r1, #65535	; 0xffff
   2e504:	sdiv	r0, r1, r0
   2e508:	str	r0, [sp, #152]	; 0x98
   2e50c:	ldr	r0, [sp, #152]	; 0x98
   2e510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e514:	mvn	r2, #0
   2e518:	sub	r1, r2, r1
   2e51c:	cmp	r0, r1
   2e520:	ble	2e63c <__assert_fail@plt+0x1d2b8>
   2e524:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e528:	b	2e52c <__assert_fail@plt+0x1d1a8>
   2e52c:	b	2e584 <__assert_fail@plt+0x1d200>
   2e530:	b	2e584 <__assert_fail@plt+0x1d200>
   2e534:	ldr	r0, [fp, #8]
   2e538:	cmn	r0, #1
   2e53c:	bne	2e584 <__assert_fail@plt+0x1d200>
   2e540:	b	2e544 <__assert_fail@plt+0x1d1c0>
   2e544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e548:	add	r0, r0, #0
   2e54c:	movw	r1, #0
   2e550:	cmp	r1, r0
   2e554:	blt	2e63c <__assert_fail@plt+0x1d2b8>
   2e558:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e560:	movw	r1, #0
   2e564:	cmp	r1, r0
   2e568:	bge	2e654 <__assert_fail@plt+0x1d2d0>
   2e56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e570:	sub	r0, r0, #1
   2e574:	mvn	r1, #0
   2e578:	cmp	r1, r0
   2e57c:	blt	2e63c <__assert_fail@plt+0x1d2b8>
   2e580:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e584:	ldr	r0, [fp, #8]
   2e588:	movw	r1, #0
   2e58c:	sdiv	r0, r1, r0
   2e590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e594:	cmp	r0, r1
   2e598:	blt	2e63c <__assert_fail@plt+0x1d2b8>
   2e59c:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e5a0:	ldr	r0, [fp, #8]
   2e5a4:	cmp	r0, #0
   2e5a8:	bne	2e5b0 <__assert_fail@plt+0x1d22c>
   2e5ac:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e5b4:	cmp	r0, #0
   2e5b8:	bge	2e624 <__assert_fail@plt+0x1d2a0>
   2e5bc:	b	2e5c0 <__assert_fail@plt+0x1d23c>
   2e5c0:	b	2e608 <__assert_fail@plt+0x1d284>
   2e5c4:	b	2e608 <__assert_fail@plt+0x1d284>
   2e5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e5cc:	cmn	r0, #1
   2e5d0:	bne	2e608 <__assert_fail@plt+0x1d284>
   2e5d4:	b	2e5d8 <__assert_fail@plt+0x1d254>
   2e5d8:	ldr	r0, [fp, #8]
   2e5dc:	add	r0, r0, #0
   2e5e0:	movw	r1, #0
   2e5e4:	cmp	r1, r0
   2e5e8:	blt	2e63c <__assert_fail@plt+0x1d2b8>
   2e5ec:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e5f0:	ldr	r0, [fp, #8]
   2e5f4:	sub	r0, r0, #1
   2e5f8:	mvn	r1, #0
   2e5fc:	cmp	r1, r0
   2e600:	blt	2e63c <__assert_fail@plt+0x1d2b8>
   2e604:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e60c:	movw	r1, #0
   2e610:	sdiv	r0, r1, r0
   2e614:	ldr	r1, [fp, #8]
   2e618:	cmp	r0, r1
   2e61c:	blt	2e63c <__assert_fail@plt+0x1d2b8>
   2e620:	b	2e654 <__assert_fail@plt+0x1d2d0>
   2e624:	ldr	r0, [fp, #8]
   2e628:	movw	r1, #65535	; 0xffff
   2e62c:	sdiv	r0, r1, r0
   2e630:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e634:	cmp	r0, r1
   2e638:	bge	2e654 <__assert_fail@plt+0x1d2d0>
   2e63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e640:	ldr	r1, [fp, #8]
   2e644:	mul	r0, r0, r1
   2e648:	uxth	r0, r0
   2e64c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e650:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2e654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e658:	ldr	r1, [fp, #8]
   2e65c:	mul	r0, r0, r1
   2e660:	uxth	r0, r0
   2e664:	str	r0, [fp, #-28]	; 0xffffffe4
   2e668:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2e66c:	b	2e670 <__assert_fail@plt+0x1d2ec>
   2e670:	b	2e674 <__assert_fail@plt+0x1d2f0>
   2e674:	ldr	r0, [fp, #8]
   2e678:	cmp	r0, #0
   2e67c:	bge	2e780 <__assert_fail@plt+0x1d3fc>
   2e680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e684:	cmp	r0, #0
   2e688:	bge	2e714 <__assert_fail@plt+0x1d390>
   2e68c:	b	2e690 <__assert_fail@plt+0x1d30c>
   2e690:	ldr	r0, [pc, #3128]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2e694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e698:	ldr	r2, [fp, #8]
   2e69c:	sdiv	r0, r0, r2
   2e6a0:	cmp	r1, r0
   2e6a4:	blt	2e810 <__assert_fail@plt+0x1d48c>
   2e6a8:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e6ac:	b	2e6b0 <__assert_fail@plt+0x1d32c>
   2e6b0:	ldr	r0, [pc, #3100]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2e6b4:	ldr	r1, [fp, #8]
   2e6b8:	cmp	r1, r0
   2e6bc:	blt	2e6d4 <__assert_fail@plt+0x1d350>
   2e6c0:	b	2e6e0 <__assert_fail@plt+0x1d35c>
   2e6c4:	ldr	r0, [fp, #8]
   2e6c8:	movw	r1, #0
   2e6cc:	cmp	r1, r0
   2e6d0:	bge	2e6e0 <__assert_fail@plt+0x1d35c>
   2e6d4:	movw	r0, #0
   2e6d8:	str	r0, [sp, #148]	; 0x94
   2e6dc:	b	2e6f8 <__assert_fail@plt+0x1d374>
   2e6e0:	ldr	r0, [pc, #3048]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2e6e4:	ldr	r1, [fp, #8]
   2e6e8:	movw	r2, #0
   2e6ec:	sub	r1, r2, r1
   2e6f0:	sdiv	r0, r0, r1
   2e6f4:	str	r0, [sp, #148]	; 0x94
   2e6f8:	ldr	r0, [sp, #148]	; 0x94
   2e6fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e700:	mvn	r2, #0
   2e704:	sub	r1, r2, r1
   2e708:	cmp	r0, r1
   2e70c:	ble	2e810 <__assert_fail@plt+0x1d48c>
   2e710:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e714:	ldr	r0, [fp, #8]
   2e718:	cmn	r0, #1
   2e71c:	bne	2e764 <__assert_fail@plt+0x1d3e0>
   2e720:	b	2e724 <__assert_fail@plt+0x1d3a0>
   2e724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e728:	add	r0, r0, #-2147483648	; 0x80000000
   2e72c:	movw	r1, #0
   2e730:	cmp	r1, r0
   2e734:	blt	2e810 <__assert_fail@plt+0x1d48c>
   2e738:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e740:	movw	r1, #0
   2e744:	cmp	r1, r0
   2e748:	bge	2e824 <__assert_fail@plt+0x1d4a0>
   2e74c:	ldr	r0, [pc, #2940]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2e750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e754:	sub	r1, r1, #1
   2e758:	cmp	r0, r1
   2e75c:	blt	2e810 <__assert_fail@plt+0x1d48c>
   2e760:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e764:	ldr	r0, [pc, #2924]	; 2f2d8 <__assert_fail@plt+0x1df54>
   2e768:	ldr	r1, [fp, #8]
   2e76c:	sdiv	r0, r0, r1
   2e770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e774:	cmp	r0, r1
   2e778:	blt	2e810 <__assert_fail@plt+0x1d48c>
   2e77c:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e780:	ldr	r0, [fp, #8]
   2e784:	cmp	r0, #0
   2e788:	bne	2e790 <__assert_fail@plt+0x1d40c>
   2e78c:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e794:	cmp	r0, #0
   2e798:	bge	2e7f8 <__assert_fail@plt+0x1d474>
   2e79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e7a0:	cmn	r0, #1
   2e7a4:	bne	2e7dc <__assert_fail@plt+0x1d458>
   2e7a8:	b	2e7ac <__assert_fail@plt+0x1d428>
   2e7ac:	ldr	r0, [fp, #8]
   2e7b0:	add	r0, r0, #-2147483648	; 0x80000000
   2e7b4:	movw	r1, #0
   2e7b8:	cmp	r1, r0
   2e7bc:	blt	2e810 <__assert_fail@plt+0x1d48c>
   2e7c0:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e7c4:	ldr	r0, [pc, #2820]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2e7c8:	ldr	r1, [fp, #8]
   2e7cc:	sub	r1, r1, #1
   2e7d0:	cmp	r0, r1
   2e7d4:	blt	2e810 <__assert_fail@plt+0x1d48c>
   2e7d8:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e7dc:	ldr	r0, [pc, #2804]	; 2f2d8 <__assert_fail@plt+0x1df54>
   2e7e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e7e4:	sdiv	r0, r0, r1
   2e7e8:	ldr	r1, [fp, #8]
   2e7ec:	cmp	r0, r1
   2e7f0:	blt	2e810 <__assert_fail@plt+0x1d48c>
   2e7f4:	b	2e824 <__assert_fail@plt+0x1d4a0>
   2e7f8:	ldr	r0, [pc, #2768]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2e7fc:	ldr	r1, [fp, #8]
   2e800:	sdiv	r0, r0, r1
   2e804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e808:	cmp	r0, r1
   2e80c:	bge	2e824 <__assert_fail@plt+0x1d4a0>
   2e810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e814:	ldr	r1, [fp, #8]
   2e818:	mul	r0, r0, r1
   2e81c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e820:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2e824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e828:	ldr	r1, [fp, #8]
   2e82c:	mul	r0, r0, r1
   2e830:	str	r0, [fp, #-28]	; 0xffffffe4
   2e834:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2e838:	ldr	r0, [fp, #8]
   2e83c:	cmp	r0, #0
   2e840:	bge	2e950 <__assert_fail@plt+0x1d5cc>
   2e844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e848:	cmp	r0, #0
   2e84c:	bge	2e8d8 <__assert_fail@plt+0x1d554>
   2e850:	b	2e870 <__assert_fail@plt+0x1d4ec>
   2e854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e858:	ldr	r1, [fp, #8]
   2e85c:	mvn	r2, #0
   2e860:	udiv	r1, r2, r1
   2e864:	cmp	r0, r1
   2e868:	bcc	2e9ec <__assert_fail@plt+0x1d668>
   2e86c:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e870:	b	2e874 <__assert_fail@plt+0x1d4f0>
   2e874:	ldr	r0, [pc, #2648]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2e878:	ldr	r1, [fp, #8]
   2e87c:	cmp	r1, r0
   2e880:	blt	2e898 <__assert_fail@plt+0x1d514>
   2e884:	b	2e8a4 <__assert_fail@plt+0x1d520>
   2e888:	ldr	r0, [fp, #8]
   2e88c:	movw	r1, #0
   2e890:	cmp	r1, r0
   2e894:	bge	2e8a4 <__assert_fail@plt+0x1d520>
   2e898:	movw	r0, #1
   2e89c:	str	r0, [sp, #144]	; 0x90
   2e8a0:	b	2e8bc <__assert_fail@plt+0x1d538>
   2e8a4:	ldr	r0, [fp, #8]
   2e8a8:	movw	r1, #0
   2e8ac:	sub	r0, r1, r0
   2e8b0:	mvn	r1, #0
   2e8b4:	udiv	r0, r1, r0
   2e8b8:	str	r0, [sp, #144]	; 0x90
   2e8bc:	ldr	r0, [sp, #144]	; 0x90
   2e8c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e8c4:	mvn	r2, #0
   2e8c8:	sub	r1, r2, r1
   2e8cc:	cmp	r0, r1
   2e8d0:	bls	2e9ec <__assert_fail@plt+0x1d668>
   2e8d4:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e8d8:	b	2e8dc <__assert_fail@plt+0x1d558>
   2e8dc:	b	2e934 <__assert_fail@plt+0x1d5b0>
   2e8e0:	b	2e934 <__assert_fail@plt+0x1d5b0>
   2e8e4:	ldr	r0, [fp, #8]
   2e8e8:	cmn	r0, #1
   2e8ec:	bne	2e934 <__assert_fail@plt+0x1d5b0>
   2e8f0:	b	2e8f4 <__assert_fail@plt+0x1d570>
   2e8f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e8f8:	add	r0, r0, #0
   2e8fc:	movw	r1, #0
   2e900:	cmp	r1, r0
   2e904:	blt	2e9ec <__assert_fail@plt+0x1d668>
   2e908:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e910:	movw	r1, #0
   2e914:	cmp	r1, r0
   2e918:	bge	2ea00 <__assert_fail@plt+0x1d67c>
   2e91c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e920:	sub	r0, r0, #1
   2e924:	mvn	r1, #0
   2e928:	cmp	r1, r0
   2e92c:	blt	2e9ec <__assert_fail@plt+0x1d668>
   2e930:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e934:	ldr	r0, [fp, #8]
   2e938:	movw	r1, #0
   2e93c:	sdiv	r0, r1, r0
   2e940:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e944:	cmp	r0, r1
   2e948:	blt	2e9ec <__assert_fail@plt+0x1d668>
   2e94c:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e950:	ldr	r0, [fp, #8]
   2e954:	cmp	r0, #0
   2e958:	bne	2e960 <__assert_fail@plt+0x1d5dc>
   2e95c:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e964:	cmp	r0, #0
   2e968:	bge	2e9d4 <__assert_fail@plt+0x1d650>
   2e96c:	b	2e970 <__assert_fail@plt+0x1d5ec>
   2e970:	b	2e9b8 <__assert_fail@plt+0x1d634>
   2e974:	b	2e9b8 <__assert_fail@plt+0x1d634>
   2e978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e97c:	cmn	r0, #1
   2e980:	bne	2e9b8 <__assert_fail@plt+0x1d634>
   2e984:	b	2e988 <__assert_fail@plt+0x1d604>
   2e988:	ldr	r0, [fp, #8]
   2e98c:	add	r0, r0, #0
   2e990:	movw	r1, #0
   2e994:	cmp	r1, r0
   2e998:	blt	2e9ec <__assert_fail@plt+0x1d668>
   2e99c:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e9a0:	ldr	r0, [fp, #8]
   2e9a4:	sub	r0, r0, #1
   2e9a8:	mvn	r1, #0
   2e9ac:	cmp	r1, r0
   2e9b0:	blt	2e9ec <__assert_fail@plt+0x1d668>
   2e9b4:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9bc:	movw	r1, #0
   2e9c0:	sdiv	r0, r1, r0
   2e9c4:	ldr	r1, [fp, #8]
   2e9c8:	cmp	r0, r1
   2e9cc:	blt	2e9ec <__assert_fail@plt+0x1d668>
   2e9d0:	b	2ea00 <__assert_fail@plt+0x1d67c>
   2e9d4:	ldr	r0, [fp, #8]
   2e9d8:	mvn	r1, #0
   2e9dc:	udiv	r0, r1, r0
   2e9e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e9e4:	cmp	r0, r1
   2e9e8:	bcs	2ea00 <__assert_fail@plt+0x1d67c>
   2e9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9f0:	ldr	r1, [fp, #8]
   2e9f4:	mul	r0, r0, r1
   2e9f8:	str	r0, [fp, #-28]	; 0xffffffe4
   2e9fc:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2ea00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea04:	ldr	r1, [fp, #8]
   2ea08:	mul	r0, r0, r1
   2ea0c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ea10:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2ea14:	b	2ea18 <__assert_fail@plt+0x1d694>
   2ea18:	b	2ea1c <__assert_fail@plt+0x1d698>
   2ea1c:	ldr	r0, [fp, #8]
   2ea20:	cmp	r0, #0
   2ea24:	bge	2eb28 <__assert_fail@plt+0x1d7a4>
   2ea28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea2c:	cmp	r0, #0
   2ea30:	bge	2eabc <__assert_fail@plt+0x1d738>
   2ea34:	b	2ea38 <__assert_fail@plt+0x1d6b4>
   2ea38:	ldr	r0, [pc, #2192]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2ea3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ea40:	ldr	r2, [fp, #8]
   2ea44:	sdiv	r0, r0, r2
   2ea48:	cmp	r1, r0
   2ea4c:	blt	2ebb8 <__assert_fail@plt+0x1d834>
   2ea50:	b	2ebcc <__assert_fail@plt+0x1d848>
   2ea54:	b	2ea58 <__assert_fail@plt+0x1d6d4>
   2ea58:	ldr	r0, [pc, #2164]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2ea5c:	ldr	r1, [fp, #8]
   2ea60:	cmp	r1, r0
   2ea64:	blt	2ea7c <__assert_fail@plt+0x1d6f8>
   2ea68:	b	2ea88 <__assert_fail@plt+0x1d704>
   2ea6c:	ldr	r0, [fp, #8]
   2ea70:	movw	r1, #0
   2ea74:	cmp	r1, r0
   2ea78:	bge	2ea88 <__assert_fail@plt+0x1d704>
   2ea7c:	movw	r0, #0
   2ea80:	str	r0, [sp, #140]	; 0x8c
   2ea84:	b	2eaa0 <__assert_fail@plt+0x1d71c>
   2ea88:	ldr	r0, [pc, #2112]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2ea8c:	ldr	r1, [fp, #8]
   2ea90:	movw	r2, #0
   2ea94:	sub	r1, r2, r1
   2ea98:	sdiv	r0, r0, r1
   2ea9c:	str	r0, [sp, #140]	; 0x8c
   2eaa0:	ldr	r0, [sp, #140]	; 0x8c
   2eaa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eaa8:	mvn	r2, #0
   2eaac:	sub	r1, r2, r1
   2eab0:	cmp	r0, r1
   2eab4:	ble	2ebb8 <__assert_fail@plt+0x1d834>
   2eab8:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eabc:	ldr	r0, [fp, #8]
   2eac0:	cmn	r0, #1
   2eac4:	bne	2eb0c <__assert_fail@plt+0x1d788>
   2eac8:	b	2eacc <__assert_fail@plt+0x1d748>
   2eacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ead0:	add	r0, r0, #-2147483648	; 0x80000000
   2ead4:	movw	r1, #0
   2ead8:	cmp	r1, r0
   2eadc:	blt	2ebb8 <__assert_fail@plt+0x1d834>
   2eae0:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eae8:	movw	r1, #0
   2eaec:	cmp	r1, r0
   2eaf0:	bge	2ebcc <__assert_fail@plt+0x1d848>
   2eaf4:	ldr	r0, [pc, #2004]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2eaf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eafc:	sub	r1, r1, #1
   2eb00:	cmp	r0, r1
   2eb04:	blt	2ebb8 <__assert_fail@plt+0x1d834>
   2eb08:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eb0c:	ldr	r0, [pc, #1988]	; 2f2d8 <__assert_fail@plt+0x1df54>
   2eb10:	ldr	r1, [fp, #8]
   2eb14:	sdiv	r0, r0, r1
   2eb18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eb1c:	cmp	r0, r1
   2eb20:	blt	2ebb8 <__assert_fail@plt+0x1d834>
   2eb24:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eb28:	ldr	r0, [fp, #8]
   2eb2c:	cmp	r0, #0
   2eb30:	bne	2eb38 <__assert_fail@plt+0x1d7b4>
   2eb34:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eb38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb3c:	cmp	r0, #0
   2eb40:	bge	2eba0 <__assert_fail@plt+0x1d81c>
   2eb44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb48:	cmn	r0, #1
   2eb4c:	bne	2eb84 <__assert_fail@plt+0x1d800>
   2eb50:	b	2eb54 <__assert_fail@plt+0x1d7d0>
   2eb54:	ldr	r0, [fp, #8]
   2eb58:	add	r0, r0, #-2147483648	; 0x80000000
   2eb5c:	movw	r1, #0
   2eb60:	cmp	r1, r0
   2eb64:	blt	2ebb8 <__assert_fail@plt+0x1d834>
   2eb68:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eb6c:	ldr	r0, [pc, #1884]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2eb70:	ldr	r1, [fp, #8]
   2eb74:	sub	r1, r1, #1
   2eb78:	cmp	r0, r1
   2eb7c:	blt	2ebb8 <__assert_fail@plt+0x1d834>
   2eb80:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eb84:	ldr	r0, [pc, #1868]	; 2f2d8 <__assert_fail@plt+0x1df54>
   2eb88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eb8c:	sdiv	r0, r0, r1
   2eb90:	ldr	r1, [fp, #8]
   2eb94:	cmp	r0, r1
   2eb98:	blt	2ebb8 <__assert_fail@plt+0x1d834>
   2eb9c:	b	2ebcc <__assert_fail@plt+0x1d848>
   2eba0:	ldr	r0, [pc, #1832]	; 2f2d0 <__assert_fail@plt+0x1df4c>
   2eba4:	ldr	r1, [fp, #8]
   2eba8:	sdiv	r0, r0, r1
   2ebac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ebb0:	cmp	r0, r1
   2ebb4:	bge	2ebcc <__assert_fail@plt+0x1d848>
   2ebb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebbc:	ldr	r1, [fp, #8]
   2ebc0:	mul	r0, r0, r1
   2ebc4:	str	r0, [fp, #-28]	; 0xffffffe4
   2ebc8:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2ebcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebd0:	ldr	r1, [fp, #8]
   2ebd4:	mul	r0, r0, r1
   2ebd8:	str	r0, [fp, #-28]	; 0xffffffe4
   2ebdc:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2ebe0:	ldr	r0, [fp, #8]
   2ebe4:	cmp	r0, #0
   2ebe8:	bge	2ecf8 <__assert_fail@plt+0x1d974>
   2ebec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebf0:	cmp	r0, #0
   2ebf4:	bge	2ec80 <__assert_fail@plt+0x1d8fc>
   2ebf8:	b	2ec18 <__assert_fail@plt+0x1d894>
   2ebfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec00:	ldr	r1, [fp, #8]
   2ec04:	mvn	r2, #0
   2ec08:	udiv	r1, r2, r1
   2ec0c:	cmp	r0, r1
   2ec10:	bcc	2ed94 <__assert_fail@plt+0x1da10>
   2ec14:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ec18:	b	2ec1c <__assert_fail@plt+0x1d898>
   2ec1c:	ldr	r0, [pc, #1712]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2ec20:	ldr	r1, [fp, #8]
   2ec24:	cmp	r1, r0
   2ec28:	blt	2ec40 <__assert_fail@plt+0x1d8bc>
   2ec2c:	b	2ec4c <__assert_fail@plt+0x1d8c8>
   2ec30:	ldr	r0, [fp, #8]
   2ec34:	movw	r1, #0
   2ec38:	cmp	r1, r0
   2ec3c:	bge	2ec4c <__assert_fail@plt+0x1d8c8>
   2ec40:	movw	r0, #1
   2ec44:	str	r0, [sp, #136]	; 0x88
   2ec48:	b	2ec64 <__assert_fail@plt+0x1d8e0>
   2ec4c:	ldr	r0, [fp, #8]
   2ec50:	movw	r1, #0
   2ec54:	sub	r0, r1, r0
   2ec58:	mvn	r1, #0
   2ec5c:	udiv	r0, r1, r0
   2ec60:	str	r0, [sp, #136]	; 0x88
   2ec64:	ldr	r0, [sp, #136]	; 0x88
   2ec68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ec6c:	mvn	r2, #0
   2ec70:	sub	r1, r2, r1
   2ec74:	cmp	r0, r1
   2ec78:	bls	2ed94 <__assert_fail@plt+0x1da10>
   2ec7c:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ec80:	b	2ec84 <__assert_fail@plt+0x1d900>
   2ec84:	b	2ecdc <__assert_fail@plt+0x1d958>
   2ec88:	b	2ecdc <__assert_fail@plt+0x1d958>
   2ec8c:	ldr	r0, [fp, #8]
   2ec90:	cmn	r0, #1
   2ec94:	bne	2ecdc <__assert_fail@plt+0x1d958>
   2ec98:	b	2ec9c <__assert_fail@plt+0x1d918>
   2ec9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eca0:	add	r0, r0, #0
   2eca4:	movw	r1, #0
   2eca8:	cmp	r1, r0
   2ecac:	blt	2ed94 <__assert_fail@plt+0x1da10>
   2ecb0:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ecb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecb8:	movw	r1, #0
   2ecbc:	cmp	r1, r0
   2ecc0:	bge	2eda8 <__assert_fail@plt+0x1da24>
   2ecc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecc8:	sub	r0, r0, #1
   2eccc:	mvn	r1, #0
   2ecd0:	cmp	r1, r0
   2ecd4:	blt	2ed94 <__assert_fail@plt+0x1da10>
   2ecd8:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ecdc:	ldr	r0, [fp, #8]
   2ece0:	movw	r1, #0
   2ece4:	sdiv	r0, r1, r0
   2ece8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ecec:	cmp	r0, r1
   2ecf0:	blt	2ed94 <__assert_fail@plt+0x1da10>
   2ecf4:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ecf8:	ldr	r0, [fp, #8]
   2ecfc:	cmp	r0, #0
   2ed00:	bne	2ed08 <__assert_fail@plt+0x1d984>
   2ed04:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ed08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed0c:	cmp	r0, #0
   2ed10:	bge	2ed7c <__assert_fail@plt+0x1d9f8>
   2ed14:	b	2ed18 <__assert_fail@plt+0x1d994>
   2ed18:	b	2ed60 <__assert_fail@plt+0x1d9dc>
   2ed1c:	b	2ed60 <__assert_fail@plt+0x1d9dc>
   2ed20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed24:	cmn	r0, #1
   2ed28:	bne	2ed60 <__assert_fail@plt+0x1d9dc>
   2ed2c:	b	2ed30 <__assert_fail@plt+0x1d9ac>
   2ed30:	ldr	r0, [fp, #8]
   2ed34:	add	r0, r0, #0
   2ed38:	movw	r1, #0
   2ed3c:	cmp	r1, r0
   2ed40:	blt	2ed94 <__assert_fail@plt+0x1da10>
   2ed44:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ed48:	ldr	r0, [fp, #8]
   2ed4c:	sub	r0, r0, #1
   2ed50:	mvn	r1, #0
   2ed54:	cmp	r1, r0
   2ed58:	blt	2ed94 <__assert_fail@plt+0x1da10>
   2ed5c:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ed60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed64:	movw	r1, #0
   2ed68:	sdiv	r0, r1, r0
   2ed6c:	ldr	r1, [fp, #8]
   2ed70:	cmp	r0, r1
   2ed74:	blt	2ed94 <__assert_fail@plt+0x1da10>
   2ed78:	b	2eda8 <__assert_fail@plt+0x1da24>
   2ed7c:	ldr	r0, [fp, #8]
   2ed80:	mvn	r1, #0
   2ed84:	udiv	r0, r1, r0
   2ed88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ed8c:	cmp	r0, r1
   2ed90:	bcs	2eda8 <__assert_fail@plt+0x1da24>
   2ed94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed98:	ldr	r1, [fp, #8]
   2ed9c:	mul	r0, r0, r1
   2eda0:	str	r0, [fp, #-28]	; 0xffffffe4
   2eda4:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2eda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2edac:	ldr	r1, [fp, #8]
   2edb0:	mul	r0, r0, r1
   2edb4:	str	r0, [fp, #-28]	; 0xffffffe4
   2edb8:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2edbc:	b	2edc0 <__assert_fail@plt+0x1da3c>
   2edc0:	ldr	r0, [fp, #8]
   2edc4:	cmp	r0, #0
   2edc8:	bge	2ef50 <__assert_fail@plt+0x1dbcc>
   2edcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2edd0:	cmp	r0, #0
   2edd4:	bge	2eebc <__assert_fail@plt+0x1db38>
   2edd8:	b	2eddc <__assert_fail@plt+0x1da58>
   2eddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ede0:	ldr	r1, [fp, #8]
   2ede4:	asr	r3, r1, #31
   2ede8:	mvn	r2, #0
   2edec:	mvn	ip, #-2147483648	; 0x80000000
   2edf0:	str	r0, [sp, #132]	; 0x84
   2edf4:	mov	r0, r2
   2edf8:	str	r1, [sp, #128]	; 0x80
   2edfc:	mov	r1, ip
   2ee00:	ldr	r2, [sp, #128]	; 0x80
   2ee04:	bl	33d70 <__assert_fail@plt+0x229ec>
   2ee08:	ldr	r2, [sp, #132]	; 0x84
   2ee0c:	subs	r0, r2, r0
   2ee10:	rscs	r1, r1, r2, asr #31
   2ee14:	str	r0, [sp, #124]	; 0x7c
   2ee18:	str	r1, [sp, #120]	; 0x78
   2ee1c:	blt	2f030 <__assert_fail@plt+0x1dcac>
   2ee20:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2ee24:	b	2ee28 <__assert_fail@plt+0x1daa4>
   2ee28:	ldr	r0, [pc, #1188]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2ee2c:	ldr	r1, [fp, #8]
   2ee30:	cmp	r1, r0
   2ee34:	blt	2ee4c <__assert_fail@plt+0x1dac8>
   2ee38:	b	2ee60 <__assert_fail@plt+0x1dadc>
   2ee3c:	ldr	r0, [fp, #8]
   2ee40:	movw	r1, #0
   2ee44:	cmp	r1, r0
   2ee48:	bge	2ee60 <__assert_fail@plt+0x1dadc>
   2ee4c:	mov	r0, #0
   2ee50:	mvn	r1, #0
   2ee54:	str	r1, [sp, #116]	; 0x74
   2ee58:	str	r0, [sp, #112]	; 0x70
   2ee5c:	b	2ee94 <__assert_fail@plt+0x1db10>
   2ee60:	ldr	r0, [fp, #8]
   2ee64:	rsb	r0, r0, #0
   2ee68:	asr	r3, r0, #31
   2ee6c:	mvn	r1, #0
   2ee70:	mvn	r2, #-2147483648	; 0x80000000
   2ee74:	str	r0, [sp, #108]	; 0x6c
   2ee78:	mov	r0, r1
   2ee7c:	mov	r1, r2
   2ee80:	ldr	r2, [sp, #108]	; 0x6c
   2ee84:	bl	33d70 <__assert_fail@plt+0x229ec>
   2ee88:	str	r0, [sp, #116]	; 0x74
   2ee8c:	str	r1, [sp, #112]	; 0x70
   2ee90:	b	2ee94 <__assert_fail@plt+0x1db10>
   2ee94:	ldr	r0, [sp, #112]	; 0x70
   2ee98:	ldr	r1, [sp, #116]	; 0x74
   2ee9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eea0:	mvn	r2, r2
   2eea4:	subs	r1, r2, r1
   2eea8:	rscs	r0, r0, r2, asr #31
   2eeac:	str	r1, [sp, #104]	; 0x68
   2eeb0:	str	r0, [sp, #100]	; 0x64
   2eeb4:	bge	2f030 <__assert_fail@plt+0x1dcac>
   2eeb8:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2eebc:	ldr	r0, [fp, #8]
   2eec0:	cmn	r0, #1
   2eec4:	bne	2ef10 <__assert_fail@plt+0x1db8c>
   2eec8:	b	2eecc <__assert_fail@plt+0x1db48>
   2eecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eed0:	mov	r1, #-2147483648	; 0x80000000
   2eed4:	add	r1, r1, r0, asr #31
   2eed8:	rsbs	r0, r0, #0
   2eedc:	rscs	r1, r1, #0
   2eee0:	str	r0, [sp, #96]	; 0x60
   2eee4:	str	r1, [sp, #92]	; 0x5c
   2eee8:	blt	2f030 <__assert_fail@plt+0x1dcac>
   2eeec:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2eef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eef4:	movw	r1, #0
   2eef8:	cmp	r1, r0
   2eefc:	bge	2f044 <__assert_fail@plt+0x1dcc0>
   2ef00:	mov	r0, #0
   2ef04:	cmp	r0, #0
   2ef08:	bne	2f030 <__assert_fail@plt+0x1dcac>
   2ef0c:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2ef10:	ldr	r0, [fp, #8]
   2ef14:	asr	r3, r0, #31
   2ef18:	mov	r1, #0
   2ef1c:	mov	r2, #-2147483648	; 0x80000000
   2ef20:	str	r0, [sp, #88]	; 0x58
   2ef24:	mov	r0, r1
   2ef28:	mov	r1, r2
   2ef2c:	ldr	r2, [sp, #88]	; 0x58
   2ef30:	bl	33d70 <__assert_fail@plt+0x229ec>
   2ef34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ef38:	subs	r0, r0, r2
   2ef3c:	sbcs	r1, r1, r2, asr #31
   2ef40:	str	r0, [sp, #84]	; 0x54
   2ef44:	str	r1, [sp, #80]	; 0x50
   2ef48:	blt	2f030 <__assert_fail@plt+0x1dcac>
   2ef4c:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2ef50:	ldr	r0, [fp, #8]
   2ef54:	cmp	r0, #0
   2ef58:	bne	2ef60 <__assert_fail@plt+0x1dbdc>
   2ef5c:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2ef60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef64:	cmp	r0, #0
   2ef68:	bge	2eff0 <__assert_fail@plt+0x1dc6c>
   2ef6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef70:	cmn	r0, #1
   2ef74:	bne	2efb0 <__assert_fail@plt+0x1dc2c>
   2ef78:	b	2ef7c <__assert_fail@plt+0x1dbf8>
   2ef7c:	ldr	r0, [fp, #8]
   2ef80:	mov	r1, #-2147483648	; 0x80000000
   2ef84:	add	r1, r1, r0, asr #31
   2ef88:	rsbs	r0, r0, #0
   2ef8c:	rscs	r1, r1, #0
   2ef90:	str	r0, [sp, #76]	; 0x4c
   2ef94:	str	r1, [sp, #72]	; 0x48
   2ef98:	blt	2f030 <__assert_fail@plt+0x1dcac>
   2ef9c:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2efa0:	mov	r0, #0
   2efa4:	cmp	r0, #0
   2efa8:	bne	2f030 <__assert_fail@plt+0x1dcac>
   2efac:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2efb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efb4:	asr	r3, r0, #31
   2efb8:	mov	r1, #0
   2efbc:	mov	r2, #-2147483648	; 0x80000000
   2efc0:	str	r0, [sp, #68]	; 0x44
   2efc4:	mov	r0, r1
   2efc8:	mov	r1, r2
   2efcc:	ldr	r2, [sp, #68]	; 0x44
   2efd0:	bl	33d70 <__assert_fail@plt+0x229ec>
   2efd4:	ldr	r2, [fp, #8]
   2efd8:	subs	r0, r0, r2
   2efdc:	sbcs	r1, r1, r2, asr #31
   2efe0:	str	r0, [sp, #64]	; 0x40
   2efe4:	str	r1, [sp, #60]	; 0x3c
   2efe8:	blt	2f030 <__assert_fail@plt+0x1dcac>
   2efec:	b	2f044 <__assert_fail@plt+0x1dcc0>
   2eff0:	ldr	r0, [fp, #8]
   2eff4:	asr	r3, r0, #31
   2eff8:	mvn	r1, #0
   2effc:	mvn	r2, #-2147483648	; 0x80000000
   2f000:	str	r0, [sp, #56]	; 0x38
   2f004:	mov	r0, r1
   2f008:	mov	r1, r2
   2f00c:	ldr	r2, [sp, #56]	; 0x38
   2f010:	bl	33d70 <__assert_fail@plt+0x229ec>
   2f014:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f018:	subs	r0, r0, r2
   2f01c:	sbcs	r1, r1, r2, asr #31
   2f020:	str	r0, [sp, #52]	; 0x34
   2f024:	str	r1, [sp, #48]	; 0x30
   2f028:	bge	2f044 <__assert_fail@plt+0x1dcc0>
   2f02c:	b	2f030 <__assert_fail@plt+0x1dcac>
   2f030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f034:	ldr	r1, [fp, #8]
   2f038:	mul	r0, r0, r1
   2f03c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f040:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2f044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f048:	ldr	r1, [fp, #8]
   2f04c:	mul	r0, r0, r1
   2f050:	str	r0, [fp, #-28]	; 0xffffffe4
   2f054:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2f058:	ldr	r0, [fp, #8]
   2f05c:	cmp	r0, #0
   2f060:	bge	2f1c0 <__assert_fail@plt+0x1de3c>
   2f064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f068:	cmp	r0, #0
   2f06c:	bge	2f148 <__assert_fail@plt+0x1ddc4>
   2f070:	b	2f0b8 <__assert_fail@plt+0x1dd34>
   2f074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f078:	ldr	r1, [fp, #8]
   2f07c:	asr	r3, r1, #31
   2f080:	mvn	r2, #0
   2f084:	str	r0, [sp, #44]	; 0x2c
   2f088:	mov	r0, r2
   2f08c:	str	r1, [sp, #40]	; 0x28
   2f090:	mov	r1, r2
   2f094:	ldr	r2, [sp, #40]	; 0x28
   2f098:	bl	33e44 <__assert_fail@plt+0x22ac0>
   2f09c:	ldr	r2, [sp, #44]	; 0x2c
   2f0a0:	subs	r0, r2, r0
   2f0a4:	rscs	r1, r1, r2, asr #31
   2f0a8:	str	r0, [sp, #36]	; 0x24
   2f0ac:	str	r1, [sp, #32]
   2f0b0:	bcc	2f27c <__assert_fail@plt+0x1def8>
   2f0b4:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f0b8:	b	2f0bc <__assert_fail@plt+0x1dd38>
   2f0bc:	ldr	r0, [pc, #528]	; 2f2d4 <__assert_fail@plt+0x1df50>
   2f0c0:	ldr	r1, [fp, #8]
   2f0c4:	cmp	r1, r0
   2f0c8:	blt	2f0e0 <__assert_fail@plt+0x1dd5c>
   2f0cc:	b	2f0f4 <__assert_fail@plt+0x1dd70>
   2f0d0:	ldr	r0, [fp, #8]
   2f0d4:	movw	r1, #0
   2f0d8:	cmp	r1, r0
   2f0dc:	bge	2f0f4 <__assert_fail@plt+0x1dd70>
   2f0e0:	mov	r0, #1
   2f0e4:	mvn	r1, #0
   2f0e8:	str	r1, [sp, #28]
   2f0ec:	str	r0, [sp, #24]
   2f0f0:	b	2f120 <__assert_fail@plt+0x1dd9c>
   2f0f4:	ldr	r0, [fp, #8]
   2f0f8:	rsb	r0, r0, #0
   2f0fc:	asr	r3, r0, #31
   2f100:	mvn	r1, #0
   2f104:	str	r0, [sp, #20]
   2f108:	mov	r0, r1
   2f10c:	ldr	r2, [sp, #20]
   2f110:	bl	33e44 <__assert_fail@plt+0x22ac0>
   2f114:	str	r0, [sp, #28]
   2f118:	str	r1, [sp, #24]
   2f11c:	b	2f120 <__assert_fail@plt+0x1dd9c>
   2f120:	ldr	r0, [sp, #24]
   2f124:	ldr	r1, [sp, #28]
   2f128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f12c:	mvn	r2, r2
   2f130:	subs	r1, r2, r1
   2f134:	rscs	r0, r0, r2, asr #31
   2f138:	str	r1, [sp, #16]
   2f13c:	str	r0, [sp, #12]
   2f140:	bcs	2f27c <__assert_fail@plt+0x1def8>
   2f144:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f148:	b	2f14c <__assert_fail@plt+0x1ddc8>
   2f14c:	b	2f1a4 <__assert_fail@plt+0x1de20>
   2f150:	b	2f1a4 <__assert_fail@plt+0x1de20>
   2f154:	ldr	r0, [fp, #8]
   2f158:	cmn	r0, #1
   2f15c:	bne	2f1a4 <__assert_fail@plt+0x1de20>
   2f160:	b	2f164 <__assert_fail@plt+0x1dde0>
   2f164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f168:	add	r0, r0, #0
   2f16c:	movw	r1, #0
   2f170:	cmp	r1, r0
   2f174:	blt	2f27c <__assert_fail@plt+0x1def8>
   2f178:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f17c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f180:	movw	r1, #0
   2f184:	cmp	r1, r0
   2f188:	bge	2f290 <__assert_fail@plt+0x1df0c>
   2f18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f190:	sub	r0, r0, #1
   2f194:	mvn	r1, #0
   2f198:	cmp	r1, r0
   2f19c:	blt	2f27c <__assert_fail@plt+0x1def8>
   2f1a0:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f1a4:	ldr	r0, [fp, #8]
   2f1a8:	movw	r1, #0
   2f1ac:	sdiv	r0, r1, r0
   2f1b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f1b4:	cmp	r0, r1
   2f1b8:	blt	2f27c <__assert_fail@plt+0x1def8>
   2f1bc:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f1c0:	ldr	r0, [fp, #8]
   2f1c4:	cmp	r0, #0
   2f1c8:	bne	2f1d0 <__assert_fail@plt+0x1de4c>
   2f1cc:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f1d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f1d4:	cmp	r0, #0
   2f1d8:	bge	2f244 <__assert_fail@plt+0x1dec0>
   2f1dc:	b	2f1e0 <__assert_fail@plt+0x1de5c>
   2f1e0:	b	2f228 <__assert_fail@plt+0x1dea4>
   2f1e4:	b	2f228 <__assert_fail@plt+0x1dea4>
   2f1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f1ec:	cmn	r0, #1
   2f1f0:	bne	2f228 <__assert_fail@plt+0x1dea4>
   2f1f4:	b	2f1f8 <__assert_fail@plt+0x1de74>
   2f1f8:	ldr	r0, [fp, #8]
   2f1fc:	add	r0, r0, #0
   2f200:	movw	r1, #0
   2f204:	cmp	r1, r0
   2f208:	blt	2f27c <__assert_fail@plt+0x1def8>
   2f20c:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f210:	ldr	r0, [fp, #8]
   2f214:	sub	r0, r0, #1
   2f218:	mvn	r1, #0
   2f21c:	cmp	r1, r0
   2f220:	blt	2f27c <__assert_fail@plt+0x1def8>
   2f224:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f22c:	movw	r1, #0
   2f230:	sdiv	r0, r1, r0
   2f234:	ldr	r1, [fp, #8]
   2f238:	cmp	r0, r1
   2f23c:	blt	2f27c <__assert_fail@plt+0x1def8>
   2f240:	b	2f290 <__assert_fail@plt+0x1df0c>
   2f244:	ldr	r0, [fp, #8]
   2f248:	asr	r3, r0, #31
   2f24c:	mvn	r1, #0
   2f250:	str	r0, [sp, #8]
   2f254:	mov	r0, r1
   2f258:	ldr	r2, [sp, #8]
   2f25c:	bl	33e44 <__assert_fail@plt+0x22ac0>
   2f260:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f264:	subs	r0, r0, r2
   2f268:	sbcs	r1, r1, r2, asr #31
   2f26c:	str	r0, [sp, #4]
   2f270:	str	r1, [sp]
   2f274:	bcs	2f290 <__assert_fail@plt+0x1df0c>
   2f278:	b	2f27c <__assert_fail@plt+0x1def8>
   2f27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f280:	ldr	r1, [fp, #8]
   2f284:	mul	r0, r0, r1
   2f288:	str	r0, [fp, #-28]	; 0xffffffe4
   2f28c:	b	2f2a4 <__assert_fail@plt+0x1df20>
   2f290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f294:	ldr	r1, [fp, #8]
   2f298:	mul	r0, r0, r1
   2f29c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f2a0:	b	2f2a8 <__assert_fail@plt+0x1df24>
   2f2a4:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2f2a8:	ldr	r0, [fp, #-4]
   2f2ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f2b0:	bl	2c73c <__assert_fail@plt+0x1b3b8>
   2f2b4:	str	r0, [fp, #-4]
   2f2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f2bc:	ldr	r1, [fp, #-8]
   2f2c0:	str	r0, [r1]
   2f2c4:	ldr	r0, [fp, #-4]
   2f2c8:	mov	sp, fp
   2f2cc:	pop	{fp, pc}
   2f2d0:	svcvc	0x00ffffff
   2f2d4:	andhi	r0, r0, r1
   2f2d8:	andhi	r0, r0, r0
   2f2dc:			; <UNDEFINED> instruction: 0xffff8000
   2f2e0:	push	{fp, lr}
   2f2e4:	mov	fp, sp
   2f2e8:	sub	sp, sp, #8
   2f2ec:	str	r0, [sp, #4]
   2f2f0:	ldr	r0, [sp, #4]
   2f2f4:	movw	r1, #1
   2f2f8:	bl	2f304 <__assert_fail@plt+0x1df80>
   2f2fc:	mov	sp, fp
   2f300:	pop	{fp, pc}
   2f304:	push	{fp, lr}
   2f308:	mov	fp, sp
   2f30c:	sub	sp, sp, #8
   2f310:	str	r0, [sp, #4]
   2f314:	str	r1, [sp]
   2f318:	ldr	r0, [sp, #4]
   2f31c:	ldr	r1, [sp]
   2f320:	bl	2f5f0 <__assert_fail@plt+0x1e26c>
   2f324:	bl	2c6c8 <__assert_fail@plt+0x1b344>
   2f328:	mov	sp, fp
   2f32c:	pop	{fp, pc}
   2f330:	push	{fp, lr}
   2f334:	mov	fp, sp
   2f338:	sub	sp, sp, #8
   2f33c:	str	r0, [sp, #4]
   2f340:	ldr	r0, [sp, #4]
   2f344:	movw	r1, #1
   2f348:	bl	2f354 <__assert_fail@plt+0x1dfd0>
   2f34c:	mov	sp, fp
   2f350:	pop	{fp, pc}
   2f354:	push	{fp, lr}
   2f358:	mov	fp, sp
   2f35c:	sub	sp, sp, #8
   2f360:	str	r0, [sp, #4]
   2f364:	str	r1, [sp]
   2f368:	ldr	r0, [sp, #4]
   2f36c:	ldr	r1, [sp]
   2f370:	bl	2fc94 <__assert_fail@plt+0x1e910>
   2f374:	bl	2c6c8 <__assert_fail@plt+0x1b344>
   2f378:	mov	sp, fp
   2f37c:	pop	{fp, pc}
   2f380:	push	{fp, lr}
   2f384:	mov	fp, sp
   2f388:	sub	sp, sp, #16
   2f38c:	str	r0, [fp, #-4]
   2f390:	str	r1, [sp, #8]
   2f394:	ldr	r0, [sp, #8]
   2f398:	bl	2c6a4 <__assert_fail@plt+0x1b320>
   2f39c:	ldr	r1, [fp, #-4]
   2f3a0:	ldr	r2, [sp, #8]
   2f3a4:	str	r0, [sp, #4]
   2f3a8:	bl	1112c <memcpy@plt>
   2f3ac:	ldr	r0, [sp, #4]
   2f3b0:	mov	sp, fp
   2f3b4:	pop	{fp, pc}
   2f3b8:	push	{fp, lr}
   2f3bc:	mov	fp, sp
   2f3c0:	sub	sp, sp, #16
   2f3c4:	str	r0, [fp, #-4]
   2f3c8:	str	r1, [sp, #8]
   2f3cc:	ldr	r0, [sp, #8]
   2f3d0:	bl	2c6f8 <__assert_fail@plt+0x1b374>
   2f3d4:	ldr	r1, [fp, #-4]
   2f3d8:	ldr	r2, [sp, #8]
   2f3dc:	str	r0, [sp, #4]
   2f3e0:	bl	1112c <memcpy@plt>
   2f3e4:	ldr	r0, [sp, #4]
   2f3e8:	mov	sp, fp
   2f3ec:	pop	{fp, pc}
   2f3f0:	push	{fp, lr}
   2f3f4:	mov	fp, sp
   2f3f8:	sub	sp, sp, #16
   2f3fc:	str	r0, [fp, #-4]
   2f400:	str	r1, [sp, #8]
   2f404:	ldr	r0, [sp, #8]
   2f408:	add	r0, r0, #1
   2f40c:	bl	2c6f8 <__assert_fail@plt+0x1b374>
   2f410:	str	r0, [sp, #4]
   2f414:	ldr	r0, [sp, #4]
   2f418:	ldr	r1, [sp, #8]
   2f41c:	add	r0, r0, r1
   2f420:	movw	r1, #0
   2f424:	strb	r1, [r0]
   2f428:	ldr	r0, [sp, #4]
   2f42c:	ldr	r1, [fp, #-4]
   2f430:	ldr	r2, [sp, #8]
   2f434:	str	r0, [sp]
   2f438:	bl	1112c <memcpy@plt>
   2f43c:	ldr	r0, [sp]
   2f440:	mov	sp, fp
   2f444:	pop	{fp, pc}
   2f448:	push	{fp, lr}
   2f44c:	mov	fp, sp
   2f450:	sub	sp, sp, #8
   2f454:	str	r0, [sp, #4]
   2f458:	ldr	r0, [sp, #4]
   2f45c:	ldr	r1, [sp, #4]
   2f460:	str	r0, [sp]
   2f464:	mov	r0, r1
   2f468:	bl	11270 <strlen@plt>
   2f46c:	add	r1, r0, #1
   2f470:	ldr	r0, [sp]
   2f474:	bl	2f380 <__assert_fail@plt+0x1dffc>
   2f478:	mov	sp, fp
   2f47c:	pop	{fp, pc}
   2f480:	push	{fp, lr}
   2f484:	mov	fp, sp
   2f488:	sub	sp, sp, #8
   2f48c:	movw	r0, #41248	; 0xa120
   2f490:	movt	r0, #4
   2f494:	ldr	r0, [r0]
   2f498:	movw	r1, #36524	; 0x8eac
   2f49c:	movt	r1, #3
   2f4a0:	str	r0, [sp, #4]
   2f4a4:	mov	r0, r1
   2f4a8:	bl	11264 <gettext@plt>
   2f4ac:	ldr	r1, [sp, #4]
   2f4b0:	str	r0, [sp]
   2f4b4:	mov	r0, r1
   2f4b8:	movw	r1, #0
   2f4bc:	movw	r2, #30569	; 0x7769
   2f4c0:	movt	r2, #3
   2f4c4:	ldr	r3, [sp]
   2f4c8:	bl	111ec <error@plt>
   2f4cc:	bl	1136c <abort@plt>
   2f4d0:	push	{fp, lr}
   2f4d4:	mov	fp, sp
   2f4d8:	sub	sp, sp, #32
   2f4dc:	ldr	ip, [fp, #8]
   2f4e0:	str	r0, [fp, #-4]
   2f4e4:	str	r1, [fp, #-8]
   2f4e8:	str	r2, [fp, #-12]
   2f4ec:	str	r3, [sp, #16]
   2f4f0:	ldr	r0, [fp, #-4]
   2f4f4:	ldr	r1, [fp, #-8]
   2f4f8:	ldr	r2, [fp, #-12]
   2f4fc:	ldr	r3, [sp, #16]
   2f500:	ldr	lr, [fp, #8]
   2f504:	str	lr, [sp]
   2f508:	str	ip, [sp, #8]
   2f50c:	bl	32944 <__assert_fail@plt+0x215c0>
   2f510:	str	r0, [sp, #12]
   2f514:	ldr	r0, [sp, #12]
   2f518:	cmp	r0, #0
   2f51c:	bge	2f534 <__assert_fail@plt+0x1e1b0>
   2f520:	bl	11294 <__errno_location@plt>
   2f524:	ldr	r0, [r0]
   2f528:	cmp	r0, #12
   2f52c:	bne	2f534 <__assert_fail@plt+0x1e1b0>
   2f530:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2f534:	ldr	r0, [sp, #12]
   2f538:	mov	sp, fp
   2f53c:	pop	{fp, pc}
   2f540:	push	{fp, lr}
   2f544:	mov	fp, sp
   2f548:	sub	sp, sp, #16
   2f54c:	str	r0, [fp, #-4]
   2f550:	str	r1, [sp, #8]
   2f554:	ldr	r0, [fp, #-4]
   2f558:	ldr	r1, [sp, #8]
   2f55c:	bl	32c70 <__assert_fail@plt+0x218ec>
   2f560:	str	r0, [sp, #4]
   2f564:	ldr	r0, [sp, #4]
   2f568:	movw	r1, #0
   2f56c:	cmp	r0, r1
   2f570:	bne	2f588 <__assert_fail@plt+0x1e204>
   2f574:	bl	11294 <__errno_location@plt>
   2f578:	ldr	r0, [r0]
   2f57c:	cmp	r0, #12
   2f580:	bne	2f588 <__assert_fail@plt+0x1e204>
   2f584:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2f588:	ldr	r0, [sp, #4]
   2f58c:	mov	sp, fp
   2f590:	pop	{fp, pc}
   2f594:	push	{fp, lr}
   2f598:	mov	fp, sp
   2f59c:	sub	sp, sp, #16
   2f5a0:	str	r0, [fp, #-4]
   2f5a4:	str	r1, [sp, #8]
   2f5a8:	str	r2, [sp, #4]
   2f5ac:	ldr	r0, [fp, #-4]
   2f5b0:	ldr	r1, [sp, #8]
   2f5b4:	ldr	r2, [sp, #4]
   2f5b8:	bl	32fc8 <__assert_fail@plt+0x21c44>
   2f5bc:	str	r0, [sp]
   2f5c0:	ldr	r0, [sp]
   2f5c4:	movw	r1, #0
   2f5c8:	cmp	r0, r1
   2f5cc:	bne	2f5e4 <__assert_fail@plt+0x1e260>
   2f5d0:	bl	11294 <__errno_location@plt>
   2f5d4:	ldr	r0, [r0]
   2f5d8:	cmp	r0, #12
   2f5dc:	bne	2f5e4 <__assert_fail@plt+0x1e260>
   2f5e0:	bl	2f480 <__assert_fail@plt+0x1e0fc>
   2f5e4:	ldr	r0, [sp]
   2f5e8:	mov	sp, fp
   2f5ec:	pop	{fp, pc}
   2f5f0:	push	{fp, lr}
   2f5f4:	mov	fp, sp
   2f5f8:	sub	sp, sp, #16
   2f5fc:	str	r0, [sp, #8]
   2f600:	str	r1, [sp, #4]
   2f604:	ldr	r0, [sp, #8]
   2f608:	cmp	r0, #0
   2f60c:	beq	2f61c <__assert_fail@plt+0x1e298>
   2f610:	ldr	r0, [sp, #4]
   2f614:	cmp	r0, #0
   2f618:	bne	2f628 <__assert_fail@plt+0x1e2a4>
   2f61c:	movw	r0, #1
   2f620:	str	r0, [sp, #4]
   2f624:	str	r0, [sp, #8]
   2f628:	ldr	r0, [sp, #4]
   2f62c:	cmp	r0, #0
   2f630:	beq	2f664 <__assert_fail@plt+0x1e2e0>
   2f634:	ldr	r0, [pc, #76]	; 2f688 <__assert_fail@plt+0x1e304>
   2f638:	ldr	r1, [sp, #4]
   2f63c:	udiv	r0, r0, r1
   2f640:	ldr	r1, [sp, #8]
   2f644:	cmp	r0, r1
   2f648:	bcs	2f664 <__assert_fail@plt+0x1e2e0>
   2f64c:	bl	11294 <__errno_location@plt>
   2f650:	movw	lr, #12
   2f654:	str	lr, [r0]
   2f658:	movw	r0, #0
   2f65c:	str	r0, [fp, #-4]
   2f660:	b	2f67c <__assert_fail@plt+0x1e2f8>
   2f664:	ldr	r0, [sp, #8]
   2f668:	ldr	r1, [sp, #4]
   2f66c:	bl	1109c <calloc@plt>
   2f670:	str	r0, [sp]
   2f674:	ldr	r0, [sp]
   2f678:	str	r0, [fp, #-4]
   2f67c:	ldr	r0, [fp, #-4]
   2f680:	mov	sp, fp
   2f684:	pop	{fp, pc}
   2f688:	svcvc	0x00ffffff
   2f68c:	push	{fp, lr}
   2f690:	mov	fp, sp
   2f694:	sub	sp, sp, #16
   2f698:	str	r0, [sp, #8]
   2f69c:	ldr	r0, [sp, #8]
   2f6a0:	cmp	r0, #0
   2f6a4:	bne	2f6b0 <__assert_fail@plt+0x1e32c>
   2f6a8:	movw	r0, #1
   2f6ac:	str	r0, [sp, #8]
   2f6b0:	ldr	r0, [pc, #64]	; 2f6f8 <__assert_fail@plt+0x1e374>
   2f6b4:	ldr	r1, [sp, #8]
   2f6b8:	cmp	r0, r1
   2f6bc:	bcs	2f6d8 <__assert_fail@plt+0x1e354>
   2f6c0:	bl	11294 <__errno_location@plt>
   2f6c4:	movw	lr, #12
   2f6c8:	str	lr, [r0]
   2f6cc:	movw	r0, #0
   2f6d0:	str	r0, [fp, #-4]
   2f6d4:	b	2f6ec <__assert_fail@plt+0x1e368>
   2f6d8:	ldr	r0, [sp, #8]
   2f6dc:	bl	111f8 <malloc@plt>
   2f6e0:	str	r0, [sp, #4]
   2f6e4:	ldr	r0, [sp, #4]
   2f6e8:	str	r0, [fp, #-4]
   2f6ec:	ldr	r0, [fp, #-4]
   2f6f0:	mov	sp, fp
   2f6f4:	pop	{fp, pc}
   2f6f8:	svcvc	0x00ffffff
   2f6fc:	push	{fp, lr}
   2f700:	mov	fp, sp
   2f704:	sub	sp, sp, #16
   2f708:	str	r0, [sp, #8]
   2f70c:	str	r1, [sp, #4]
   2f710:	ldr	r0, [sp, #8]
   2f714:	movw	r1, #0
   2f718:	cmp	r0, r1
   2f71c:	bne	2f730 <__assert_fail@plt+0x1e3ac>
   2f720:	ldr	r0, [sp, #4]
   2f724:	bl	2f68c <__assert_fail@plt+0x1e308>
   2f728:	str	r0, [fp, #-4]
   2f72c:	b	2f790 <__assert_fail@plt+0x1e40c>
   2f730:	ldr	r0, [sp, #4]
   2f734:	cmp	r0, #0
   2f738:	bne	2f750 <__assert_fail@plt+0x1e3cc>
   2f73c:	ldr	r0, [sp, #8]
   2f740:	bl	1af30 <__assert_fail@plt+0x9bac>
   2f744:	movw	r0, #0
   2f748:	str	r0, [fp, #-4]
   2f74c:	b	2f790 <__assert_fail@plt+0x1e40c>
   2f750:	ldr	r0, [pc, #68]	; 2f79c <__assert_fail@plt+0x1e418>
   2f754:	ldr	r1, [sp, #4]
   2f758:	cmp	r0, r1
   2f75c:	bcs	2f778 <__assert_fail@plt+0x1e3f4>
   2f760:	bl	11294 <__errno_location@plt>
   2f764:	movw	lr, #12
   2f768:	str	lr, [r0]
   2f76c:	movw	r0, #0
   2f770:	str	r0, [fp, #-4]
   2f774:	b	2f790 <__assert_fail@plt+0x1e40c>
   2f778:	ldr	r0, [sp, #8]
   2f77c:	ldr	r1, [sp, #4]
   2f780:	bl	11168 <realloc@plt>
   2f784:	str	r0, [sp]
   2f788:	ldr	r0, [sp]
   2f78c:	str	r0, [fp, #-4]
   2f790:	ldr	r0, [fp, #-4]
   2f794:	mov	sp, fp
   2f798:	pop	{fp, pc}
   2f79c:	svcvc	0x00ffffff
   2f7a0:	push	{fp, lr}
   2f7a4:	mov	fp, sp
   2f7a8:	sub	sp, sp, #24
   2f7ac:	str	r0, [fp, #-8]
   2f7b0:	str	r1, [sp, #12]
   2f7b4:	ldr	r0, [fp, #-8]
   2f7b8:	str	r0, [sp, #8]
   2f7bc:	ldr	r0, [sp, #12]
   2f7c0:	str	r0, [sp, #4]
   2f7c4:	ldr	r0, [sp, #8]
   2f7c8:	ldr	r1, [sp, #4]
   2f7cc:	cmp	r0, r1
   2f7d0:	bne	2f7e0 <__assert_fail@plt+0x1e45c>
   2f7d4:	movw	r0, #0
   2f7d8:	str	r0, [fp, #-4]
   2f7dc:	b	2f84c <__assert_fail@plt+0x1e4c8>
   2f7e0:	b	2f7e4 <__assert_fail@plt+0x1e460>
   2f7e4:	ldr	r0, [sp, #8]
   2f7e8:	ldrb	r0, [r0]
   2f7ec:	bl	3370c <__assert_fail@plt+0x22388>
   2f7f0:	strb	r0, [sp, #3]
   2f7f4:	ldr	r0, [sp, #4]
   2f7f8:	ldrb	r0, [r0]
   2f7fc:	bl	3370c <__assert_fail@plt+0x22388>
   2f800:	strb	r0, [sp, #2]
   2f804:	ldrb	r0, [sp, #3]
   2f808:	cmp	r0, #0
   2f80c:	bne	2f814 <__assert_fail@plt+0x1e490>
   2f810:	b	2f83c <__assert_fail@plt+0x1e4b8>
   2f814:	ldr	r0, [sp, #8]
   2f818:	add	r0, r0, #1
   2f81c:	str	r0, [sp, #8]
   2f820:	ldr	r0, [sp, #4]
   2f824:	add	r0, r0, #1
   2f828:	str	r0, [sp, #4]
   2f82c:	ldrb	r0, [sp, #3]
   2f830:	ldrb	r1, [sp, #2]
   2f834:	cmp	r0, r1
   2f838:	beq	2f7e4 <__assert_fail@plt+0x1e460>
   2f83c:	ldrb	r0, [sp, #3]
   2f840:	ldrb	r1, [sp, #2]
   2f844:	sub	r0, r0, r1
   2f848:	str	r0, [fp, #-4]
   2f84c:	ldr	r0, [fp, #-4]
   2f850:	mov	sp, fp
   2f854:	pop	{fp, pc}
   2f858:	push	{fp, lr}
   2f85c:	mov	fp, sp
   2f860:	sub	sp, sp, #16
   2f864:	str	r0, [sp, #8]
   2f868:	ldr	r0, [sp, #8]
   2f86c:	bl	111c8 <__fpending@plt>
   2f870:	cmp	r0, #0
   2f874:	movw	r0, #0
   2f878:	movne	r0, #1
   2f87c:	and	r0, r0, #1
   2f880:	strb	r0, [sp, #7]
   2f884:	ldr	r0, [sp, #8]
   2f888:	bl	111d4 <ferror_unlocked@plt>
   2f88c:	cmp	r0, #0
   2f890:	movw	r0, #0
   2f894:	movne	r0, #1
   2f898:	and	r0, r0, #1
   2f89c:	strb	r0, [sp, #6]
   2f8a0:	ldr	r0, [sp, #8]
   2f8a4:	bl	2f928 <__assert_fail@plt+0x1e5a4>
   2f8a8:	cmp	r0, #0
   2f8ac:	movw	r0, #0
   2f8b0:	movne	r0, #1
   2f8b4:	and	r0, r0, #1
   2f8b8:	strb	r0, [sp, #5]
   2f8bc:	ldrb	r0, [sp, #6]
   2f8c0:	tst	r0, #1
   2f8c4:	bne	2f8f0 <__assert_fail@plt+0x1e56c>
   2f8c8:	ldrb	r0, [sp, #5]
   2f8cc:	tst	r0, #1
   2f8d0:	beq	2f914 <__assert_fail@plt+0x1e590>
   2f8d4:	ldrb	r0, [sp, #7]
   2f8d8:	tst	r0, #1
   2f8dc:	bne	2f8f0 <__assert_fail@plt+0x1e56c>
   2f8e0:	bl	11294 <__errno_location@plt>
   2f8e4:	ldr	r0, [r0]
   2f8e8:	cmp	r0, #9
   2f8ec:	beq	2f914 <__assert_fail@plt+0x1e590>
   2f8f0:	ldrb	r0, [sp, #5]
   2f8f4:	tst	r0, #1
   2f8f8:	bne	2f908 <__assert_fail@plt+0x1e584>
   2f8fc:	bl	11294 <__errno_location@plt>
   2f900:	movw	lr, #0
   2f904:	str	lr, [r0]
   2f908:	mvn	r0, #0
   2f90c:	str	r0, [fp, #-4]
   2f910:	b	2f91c <__assert_fail@plt+0x1e598>
   2f914:	movw	r0, #0
   2f918:	str	r0, [fp, #-4]
   2f91c:	ldr	r0, [fp, #-4]
   2f920:	mov	sp, fp
   2f924:	pop	{fp, pc}
   2f928:	push	{fp, lr}
   2f92c:	mov	fp, sp
   2f930:	sub	sp, sp, #32
   2f934:	str	r0, [fp, #-8]
   2f938:	movw	r0, #0
   2f93c:	str	r0, [fp, #-12]
   2f940:	str	r0, [sp, #12]
   2f944:	ldr	r0, [fp, #-8]
   2f948:	bl	112d0 <fileno@plt>
   2f94c:	str	r0, [sp, #16]
   2f950:	ldr	r0, [sp, #16]
   2f954:	cmp	r0, #0
   2f958:	bge	2f96c <__assert_fail@plt+0x1e5e8>
   2f95c:	ldr	r0, [fp, #-8]
   2f960:	bl	112e8 <fclose@plt>
   2f964:	str	r0, [fp, #-4]
   2f968:	b	2fa08 <__assert_fail@plt+0x1e684>
   2f96c:	ldr	r0, [fp, #-8]
   2f970:	bl	1121c <__freading@plt>
   2f974:	cmp	r0, #0
   2f978:	beq	2f9b0 <__assert_fail@plt+0x1e62c>
   2f97c:	ldr	r0, [fp, #-8]
   2f980:	bl	112d0 <fileno@plt>
   2f984:	mov	lr, sp
   2f988:	mov	r1, #1
   2f98c:	str	r1, [lr]
   2f990:	mov	r1, #0
   2f994:	mov	r2, r1
   2f998:	mov	r3, r1
   2f99c:	bl	111b0 <lseek64@plt>
   2f9a0:	and	r0, r0, r1
   2f9a4:	cmn	r0, #1
   2f9a8:	beq	2f9cc <__assert_fail@plt+0x1e648>
   2f9ac:	b	2f9b0 <__assert_fail@plt+0x1e62c>
   2f9b0:	ldr	r0, [fp, #-8]
   2f9b4:	bl	2fa14 <__assert_fail@plt+0x1e690>
   2f9b8:	cmp	r0, #0
   2f9bc:	beq	2f9cc <__assert_fail@plt+0x1e648>
   2f9c0:	bl	11294 <__errno_location@plt>
   2f9c4:	ldr	r0, [r0]
   2f9c8:	str	r0, [fp, #-12]
   2f9cc:	ldr	r0, [fp, #-8]
   2f9d0:	bl	112e8 <fclose@plt>
   2f9d4:	str	r0, [sp, #12]
   2f9d8:	ldr	r0, [fp, #-12]
   2f9dc:	cmp	r0, #0
   2f9e0:	beq	2fa00 <__assert_fail@plt+0x1e67c>
   2f9e4:	ldr	r0, [fp, #-12]
   2f9e8:	str	r0, [sp, #8]
   2f9ec:	bl	11294 <__errno_location@plt>
   2f9f0:	ldr	lr, [sp, #8]
   2f9f4:	str	lr, [r0]
   2f9f8:	mvn	r0, #0
   2f9fc:	str	r0, [sp, #12]
   2fa00:	ldr	r0, [sp, #12]
   2fa04:	str	r0, [fp, #-4]
   2fa08:	ldr	r0, [fp, #-4]
   2fa0c:	mov	sp, fp
   2fa10:	pop	{fp, pc}
   2fa14:	push	{fp, lr}
   2fa18:	mov	fp, sp
   2fa1c:	sub	sp, sp, #8
   2fa20:	str	r0, [sp]
   2fa24:	ldr	r0, [sp]
   2fa28:	movw	r1, #0
   2fa2c:	cmp	r0, r1
   2fa30:	beq	2fa44 <__assert_fail@plt+0x1e6c0>
   2fa34:	ldr	r0, [sp]
   2fa38:	bl	1121c <__freading@plt>
   2fa3c:	cmp	r0, #0
   2fa40:	bne	2fa54 <__assert_fail@plt+0x1e6d0>
   2fa44:	ldr	r0, [sp]
   2fa48:	bl	110f0 <fflush@plt>
   2fa4c:	str	r0, [sp, #4]
   2fa50:	b	2fa68 <__assert_fail@plt+0x1e6e4>
   2fa54:	ldr	r0, [sp]
   2fa58:	bl	2fa74 <__assert_fail@plt+0x1e6f0>
   2fa5c:	ldr	r0, [sp]
   2fa60:	bl	110f0 <fflush@plt>
   2fa64:	str	r0, [sp, #4]
   2fa68:	ldr	r0, [sp, #4]
   2fa6c:	mov	sp, fp
   2fa70:	pop	{fp, pc}
   2fa74:	push	{fp, lr}
   2fa78:	mov	fp, sp
   2fa7c:	sub	sp, sp, #16
   2fa80:	str	r0, [fp, #-4]
   2fa84:	ldr	r0, [fp, #-4]
   2fa88:	ldr	r0, [r0]
   2fa8c:	and	r0, r0, #256	; 0x100
   2fa90:	cmp	r0, #0
   2fa94:	beq	2fabc <__assert_fail@plt+0x1e738>
   2fa98:	ldr	r0, [fp, #-4]
   2fa9c:	mov	r1, sp
   2faa0:	mov	r2, #1
   2faa4:	str	r2, [r1]
   2faa8:	mov	r1, #0
   2faac:	mov	r2, r1
   2fab0:	mov	r3, r1
   2fab4:	bl	2fac4 <__assert_fail@plt+0x1e740>
   2fab8:	str	r0, [sp, #8]
   2fabc:	mov	sp, fp
   2fac0:	pop	{fp, pc}
   2fac4:	push	{fp, lr}
   2fac8:	mov	fp, sp
   2facc:	sub	sp, sp, #32
   2fad0:	ldr	r1, [fp, #8]
   2fad4:	str	r0, [fp, #-8]
   2fad8:	str	r3, [sp, #20]
   2fadc:	str	r2, [sp, #16]
   2fae0:	ldr	r0, [fp, #-8]
   2fae4:	ldr	r0, [r0, #8]
   2fae8:	ldr	r2, [fp, #-8]
   2faec:	ldr	r2, [r2, #4]
   2faf0:	cmp	r0, r2
   2faf4:	str	r1, [sp, #4]
   2faf8:	bne	2fba4 <__assert_fail@plt+0x1e820>
   2fafc:	ldr	r0, [fp, #-8]
   2fb00:	ldr	r0, [r0, #20]
   2fb04:	ldr	r1, [fp, #-8]
   2fb08:	ldr	r1, [r1, #16]
   2fb0c:	cmp	r0, r1
   2fb10:	bne	2fba4 <__assert_fail@plt+0x1e820>
   2fb14:	ldr	r0, [fp, #-8]
   2fb18:	ldr	r0, [r0, #36]	; 0x24
   2fb1c:	movw	r1, #0
   2fb20:	cmp	r0, r1
   2fb24:	bne	2fba4 <__assert_fail@plt+0x1e820>
   2fb28:	ldr	r0, [fp, #-8]
   2fb2c:	bl	112d0 <fileno@plt>
   2fb30:	ldr	r2, [sp, #16]
   2fb34:	ldr	r3, [sp, #20]
   2fb38:	ldr	lr, [fp, #8]
   2fb3c:	mov	r1, sp
   2fb40:	str	lr, [r1]
   2fb44:	bl	111b0 <lseek64@plt>
   2fb48:	str	r1, [sp, #12]
   2fb4c:	str	r0, [sp, #8]
   2fb50:	ldr	r0, [sp, #8]
   2fb54:	ldr	r1, [sp, #12]
   2fb58:	and	r0, r0, r1
   2fb5c:	cmn	r0, #1
   2fb60:	bne	2fb74 <__assert_fail@plt+0x1e7f0>
   2fb64:	b	2fb68 <__assert_fail@plt+0x1e7e4>
   2fb68:	mvn	r0, #0
   2fb6c:	str	r0, [fp, #-4]
   2fb70:	b	2fbc4 <__assert_fail@plt+0x1e840>
   2fb74:	ldr	r0, [fp, #-8]
   2fb78:	ldr	r1, [r0]
   2fb7c:	bic	r1, r1, #16
   2fb80:	str	r1, [r0]
   2fb84:	ldr	r0, [sp, #8]
   2fb88:	ldr	r1, [sp, #12]
   2fb8c:	ldr	r2, [fp, #-8]
   2fb90:	str	r1, [r2, #84]	; 0x54
   2fb94:	str	r0, [r2, #80]	; 0x50
   2fb98:	movw	r0, #0
   2fb9c:	str	r0, [fp, #-4]
   2fba0:	b	2fbc4 <__assert_fail@plt+0x1e840>
   2fba4:	ldr	r0, [fp, #-8]
   2fba8:	ldr	r2, [sp, #16]
   2fbac:	ldr	r3, [sp, #20]
   2fbb0:	ldr	r1, [fp, #8]
   2fbb4:	mov	ip, sp
   2fbb8:	str	r1, [ip]
   2fbbc:	bl	11300 <fseeko64@plt>
   2fbc0:	str	r0, [fp, #-4]
   2fbc4:	ldr	r0, [fp, #-4]
   2fbc8:	mov	sp, fp
   2fbcc:	pop	{fp, pc}
   2fbd0:	push	{fp, lr}
   2fbd4:	mov	fp, sp
   2fbd8:	bl	11294 <__errno_location@plt>
   2fbdc:	movw	lr, #12
   2fbe0:	str	lr, [r0]
   2fbe4:	movw	r0, #0
   2fbe8:	pop	{fp, pc}
   2fbec:	push	{fp, lr}
   2fbf0:	mov	fp, sp
   2fbf4:	sub	sp, sp, #8
   2fbf8:	str	r0, [sp, #4]
   2fbfc:	ldr	r0, [sp, #4]
   2fc00:	cmn	r0, #1
   2fc04:	bhi	2fc18 <__assert_fail@plt+0x1e894>
   2fc08:	ldr	r0, [sp, #4]
   2fc0c:	bl	2f68c <__assert_fail@plt+0x1e308>
   2fc10:	str	r0, [sp]
   2fc14:	b	2fc20 <__assert_fail@plt+0x1e89c>
   2fc18:	bl	2fbd0 <__assert_fail@plt+0x1e84c>
   2fc1c:	str	r0, [sp]
   2fc20:	ldr	r0, [sp]
   2fc24:	mov	sp, fp
   2fc28:	pop	{fp, pc}
   2fc2c:	push	{fp, lr}
   2fc30:	mov	fp, sp
   2fc34:	sub	sp, sp, #16
   2fc38:	str	r0, [fp, #-4]
   2fc3c:	str	r1, [sp, #8]
   2fc40:	ldr	r0, [sp, #8]
   2fc44:	cmn	r0, #1
   2fc48:	bhi	2fc80 <__assert_fail@plt+0x1e8fc>
   2fc4c:	ldr	r0, [fp, #-4]
   2fc50:	ldr	r1, [sp, #8]
   2fc54:	ldr	r2, [sp, #8]
   2fc58:	cmp	r2, #0
   2fc5c:	movw	r2, #0
   2fc60:	movne	r2, #1
   2fc64:	mvn	r3, #0
   2fc68:	eor	r2, r2, r3
   2fc6c:	and	r2, r2, #1
   2fc70:	orr	r1, r1, r2
   2fc74:	bl	2f6fc <__assert_fail@plt+0x1e378>
   2fc78:	str	r0, [sp, #4]
   2fc7c:	b	2fc88 <__assert_fail@plt+0x1e904>
   2fc80:	bl	2fbd0 <__assert_fail@plt+0x1e84c>
   2fc84:	str	r0, [sp, #4]
   2fc88:	ldr	r0, [sp, #4]
   2fc8c:	mov	sp, fp
   2fc90:	pop	{fp, pc}
   2fc94:	push	{fp, lr}
   2fc98:	mov	fp, sp
   2fc9c:	sub	sp, sp, #16
   2fca0:	str	r0, [sp, #8]
   2fca4:	str	r1, [sp, #4]
   2fca8:	ldr	r0, [sp, #8]
   2fcac:	mvn	r1, #0
   2fcb0:	cmp	r1, r0
   2fcb4:	bcs	2fcd8 <__assert_fail@plt+0x1e954>
   2fcb8:	ldr	r0, [sp, #4]
   2fcbc:	cmp	r0, #0
   2fcc0:	beq	2fcd0 <__assert_fail@plt+0x1e94c>
   2fcc4:	bl	2fbd0 <__assert_fail@plt+0x1e84c>
   2fcc8:	str	r0, [fp, #-4]
   2fccc:	b	2fd18 <__assert_fail@plt+0x1e994>
   2fcd0:	movw	r0, #0
   2fcd4:	str	r0, [sp, #8]
   2fcd8:	ldr	r0, [sp, #4]
   2fcdc:	mvn	r1, #0
   2fce0:	cmp	r1, r0
   2fce4:	bcs	2fd08 <__assert_fail@plt+0x1e984>
   2fce8:	ldr	r0, [sp, #8]
   2fcec:	cmp	r0, #0
   2fcf0:	beq	2fd00 <__assert_fail@plt+0x1e97c>
   2fcf4:	bl	2fbd0 <__assert_fail@plt+0x1e84c>
   2fcf8:	str	r0, [fp, #-4]
   2fcfc:	b	2fd18 <__assert_fail@plt+0x1e994>
   2fd00:	movw	r0, #0
   2fd04:	str	r0, [sp, #4]
   2fd08:	ldr	r0, [sp, #8]
   2fd0c:	ldr	r1, [sp, #4]
   2fd10:	bl	2f5f0 <__assert_fail@plt+0x1e26c>
   2fd14:	str	r0, [fp, #-4]
   2fd18:	ldr	r0, [fp, #-4]
   2fd1c:	mov	sp, fp
   2fd20:	pop	{fp, pc}
   2fd24:	push	{fp, lr}
   2fd28:	mov	fp, sp
   2fd2c:	sub	sp, sp, #16
   2fd30:	str	r0, [fp, #-4]
   2fd34:	str	r1, [sp, #8]
   2fd38:	str	r2, [sp, #4]
   2fd3c:	ldr	r0, [sp, #8]
   2fd40:	cmp	r0, #0
   2fd44:	beq	2fd54 <__assert_fail@plt+0x1e9d0>
   2fd48:	ldr	r0, [sp, #4]
   2fd4c:	cmp	r0, #0
   2fd50:	bne	2fd60 <__assert_fail@plt+0x1e9dc>
   2fd54:	movw	r0, #1
   2fd58:	str	r0, [sp, #4]
   2fd5c:	str	r0, [sp, #8]
   2fd60:	ldr	r0, [sp, #8]
   2fd64:	cmn	r0, #1
   2fd68:	bhi	2fd90 <__assert_fail@plt+0x1ea0c>
   2fd6c:	ldr	r0, [sp, #4]
   2fd70:	cmn	r0, #1
   2fd74:	bhi	2fd90 <__assert_fail@plt+0x1ea0c>
   2fd78:	ldr	r0, [fp, #-4]
   2fd7c:	ldr	r1, [sp, #8]
   2fd80:	ldr	r2, [sp, #4]
   2fd84:	bl	315b4 <__assert_fail@plt+0x20230>
   2fd88:	str	r0, [sp]
   2fd8c:	b	2fd98 <__assert_fail@plt+0x1ea14>
   2fd90:	bl	2fbd0 <__assert_fail@plt+0x1e84c>
   2fd94:	str	r0, [sp]
   2fd98:	ldr	r0, [sp]
   2fd9c:	mov	sp, fp
   2fda0:	pop	{fp, pc}
   2fda4:	push	{fp, lr}
   2fda8:	mov	fp, sp
   2fdac:	sub	sp, sp, #8
   2fdb0:	movw	r0, #14
   2fdb4:	bl	11324 <nl_langinfo@plt>
   2fdb8:	str	r0, [sp, #4]
   2fdbc:	ldr	r0, [sp, #4]
   2fdc0:	movw	lr, #0
   2fdc4:	cmp	r0, lr
   2fdc8:	bne	2fdd8 <__assert_fail@plt+0x1ea54>
   2fdcc:	movw	r0, #16665	; 0x4119
   2fdd0:	movt	r0, #3
   2fdd4:	str	r0, [sp, #4]
   2fdd8:	ldr	r0, [sp, #4]
   2fddc:	ldrb	r0, [r0]
   2fde0:	cmp	r0, #0
   2fde4:	bne	2fdf4 <__assert_fail@plt+0x1ea70>
   2fde8:	movw	r0, #36541	; 0x8ebd
   2fdec:	movt	r0, #3
   2fdf0:	str	r0, [sp, #4]
   2fdf4:	ldr	r0, [sp, #4]
   2fdf8:	mov	sp, fp
   2fdfc:	pop	{fp, pc}
   2fe00:	push	{fp, lr}
   2fe04:	mov	fp, sp
   2fe08:	sub	sp, sp, #8
   2fe0c:	str	r0, [sp, #4]
   2fe10:	ldr	r0, [sp, #4]
   2fe14:	ldrb	r0, [r0, #16]
   2fe18:	tst	r0, #1
   2fe1c:	beq	2fe24 <__assert_fail@plt+0x1eaa0>
   2fe20:	b	30038 <__assert_fail@plt+0x1ecb4>
   2fe24:	ldr	r0, [sp, #4]
   2fe28:	ldrb	r0, [r0, #4]
   2fe2c:	tst	r0, #1
   2fe30:	beq	2fe38 <__assert_fail@plt+0x1eab4>
   2fe34:	b	2fec4 <__assert_fail@plt+0x1eb40>
   2fe38:	ldr	r0, [sp, #4]
   2fe3c:	ldr	r0, [r0, #20]
   2fe40:	ldrb	r0, [r0]
   2fe44:	bl	33ad4 <__assert_fail@plt+0x22750>
   2fe48:	tst	r0, #1
   2fe4c:	beq	2fe80 <__assert_fail@plt+0x1eafc>
   2fe50:	ldr	r0, [sp, #4]
   2fe54:	movw	r1, #1
   2fe58:	str	r1, [r0, #24]
   2fe5c:	ldr	r0, [sp, #4]
   2fe60:	ldr	r0, [r0, #20]
   2fe64:	ldrb	r0, [r0]
   2fe68:	ldr	r1, [sp, #4]
   2fe6c:	str	r0, [r1, #32]
   2fe70:	ldr	r0, [sp, #4]
   2fe74:	movw	r1, #1
   2fe78:	strb	r1, [r0, #28]
   2fe7c:	b	3002c <__assert_fail@plt+0x1eca8>
   2fe80:	ldr	r0, [sp, #4]
   2fe84:	add	r0, r0, #8
   2fe88:	bl	11138 <mbsinit@plt>
   2fe8c:	cmp	r0, #0
   2fe90:	beq	2fe98 <__assert_fail@plt+0x1eb14>
   2fe94:	b	2feb8 <__assert_fail@plt+0x1eb34>
   2fe98:	movw	r0, #36547	; 0x8ec3
   2fe9c:	movt	r0, #3
   2fea0:	movw	r1, #36570	; 0x8eda
   2fea4:	movt	r1, #3
   2fea8:	movw	r2, #135	; 0x87
   2feac:	movw	r3, #36585	; 0x8ee9
   2feb0:	movt	r3, #3
   2feb4:	bl	11384 <__assert_fail@plt>
   2feb8:	ldr	r0, [sp, #4]
   2febc:	movw	r1, #1
   2fec0:	strb	r1, [r0, #4]
   2fec4:	ldr	r0, [sp, #4]
   2fec8:	add	r0, r0, #20
   2fecc:	add	r0, r0, #12
   2fed0:	ldr	r1, [sp, #4]
   2fed4:	ldr	r1, [r1, #20]
   2fed8:	ldr	r2, [sp, #4]
   2fedc:	ldr	r2, [r2]
   2fee0:	ldr	r3, [sp, #4]
   2fee4:	ldr	r3, [r3, #20]
   2fee8:	sub	r2, r2, r3
   2feec:	ldr	r3, [sp, #4]
   2fef0:	add	r3, r3, #8
   2fef4:	bl	30120 <__assert_fail@plt+0x1ed9c>
   2fef8:	ldr	r1, [sp, #4]
   2fefc:	str	r0, [r1, #24]
   2ff00:	ldr	r0, [sp, #4]
   2ff04:	ldr	r0, [r0, #24]
   2ff08:	cmn	r0, #1
   2ff0c:	bne	2ff2c <__assert_fail@plt+0x1eba8>
   2ff10:	ldr	r0, [sp, #4]
   2ff14:	movw	r1, #1
   2ff18:	str	r1, [r0, #24]
   2ff1c:	ldr	r0, [sp, #4]
   2ff20:	movw	r1, #0
   2ff24:	strb	r1, [r0, #28]
   2ff28:	b	30028 <__assert_fail@plt+0x1eca4>
   2ff2c:	ldr	r0, [sp, #4]
   2ff30:	ldr	r0, [r0, #24]
   2ff34:	cmn	r0, #2
   2ff38:	bne	2ff68 <__assert_fail@plt+0x1ebe4>
   2ff3c:	ldr	r0, [sp, #4]
   2ff40:	ldr	r0, [r0]
   2ff44:	ldr	r1, [sp, #4]
   2ff48:	ldr	r1, [r1, #20]
   2ff4c:	sub	r0, r0, r1
   2ff50:	ldr	r1, [sp, #4]
   2ff54:	str	r0, [r1, #24]
   2ff58:	ldr	r0, [sp, #4]
   2ff5c:	movw	r1, #0
   2ff60:	strb	r1, [r0, #28]
   2ff64:	b	30024 <__assert_fail@plt+0x1eca0>
   2ff68:	ldr	r0, [sp, #4]
   2ff6c:	ldr	r0, [r0, #24]
   2ff70:	cmp	r0, #0
   2ff74:	bne	2fff4 <__assert_fail@plt+0x1ec70>
   2ff78:	ldr	r0, [sp, #4]
   2ff7c:	movw	r1, #1
   2ff80:	str	r1, [r0, #24]
   2ff84:	ldr	r0, [sp, #4]
   2ff88:	ldr	r0, [r0, #20]
   2ff8c:	ldrb	r0, [r0]
   2ff90:	cmp	r0, #0
   2ff94:	bne	2ff9c <__assert_fail@plt+0x1ec18>
   2ff98:	b	2ffbc <__assert_fail@plt+0x1ec38>
   2ff9c:	movw	r0, #36631	; 0x8f17
   2ffa0:	movt	r0, #3
   2ffa4:	movw	r1, #36570	; 0x8eda
   2ffa8:	movt	r1, #3
   2ffac:	movw	r2, #162	; 0xa2
   2ffb0:	movw	r3, #36585	; 0x8ee9
   2ffb4:	movt	r3, #3
   2ffb8:	bl	11384 <__assert_fail@plt>
   2ffbc:	ldr	r0, [sp, #4]
   2ffc0:	ldr	r0, [r0, #32]
   2ffc4:	cmp	r0, #0
   2ffc8:	bne	2ffd0 <__assert_fail@plt+0x1ec4c>
   2ffcc:	b	2fff0 <__assert_fail@plt+0x1ec6c>
   2ffd0:	movw	r0, #36654	; 0x8f2e
   2ffd4:	movt	r0, #3
   2ffd8:	movw	r1, #36570	; 0x8eda
   2ffdc:	movt	r1, #3
   2ffe0:	movw	r2, #163	; 0xa3
   2ffe4:	movw	r3, #36585	; 0x8ee9
   2ffe8:	movt	r3, #3
   2ffec:	bl	11384 <__assert_fail@plt>
   2fff0:	b	2fff4 <__assert_fail@plt+0x1ec70>
   2fff4:	ldr	r0, [sp, #4]
   2fff8:	movw	r1, #1
   2fffc:	strb	r1, [r0, #28]
   30000:	ldr	r0, [sp, #4]
   30004:	add	r0, r0, #8
   30008:	bl	11138 <mbsinit@plt>
   3000c:	cmp	r0, #0
   30010:	beq	30020 <__assert_fail@plt+0x1ec9c>
   30014:	ldr	r0, [sp, #4]
   30018:	movw	r1, #0
   3001c:	strb	r1, [r0, #4]
   30020:	b	30024 <__assert_fail@plt+0x1eca0>
   30024:	b	30028 <__assert_fail@plt+0x1eca4>
   30028:	b	3002c <__assert_fail@plt+0x1eca8>
   3002c:	ldr	r0, [sp, #4]
   30030:	movw	r1, #1
   30034:	strb	r1, [r0, #16]
   30038:	mov	sp, fp
   3003c:	pop	{fp, pc}
   30040:	sub	sp, sp, #8
   30044:	str	r0, [sp, #4]
   30048:	str	r1, [sp]
   3004c:	ldr	r0, [sp]
   30050:	ldr	r1, [sp, #4]
   30054:	ldr	r2, [r1, #20]
   30058:	add	r0, r2, r0
   3005c:	str	r0, [r1, #20]
   30060:	ldr	r0, [sp]
   30064:	ldr	r1, [sp, #4]
   30068:	ldr	r2, [r1]
   3006c:	add	r0, r2, r0
   30070:	str	r0, [r1]
   30074:	add	sp, sp, #8
   30078:	bx	lr
   3007c:	push	{fp, lr}
   30080:	mov	fp, sp
   30084:	sub	sp, sp, #8
   30088:	str	r0, [sp, #4]
   3008c:	str	r1, [sp]
   30090:	ldr	r0, [sp]
   30094:	ldr	r0, [r0]
   30098:	ldr	r1, [sp, #4]
   3009c:	str	r0, [r1]
   300a0:	ldr	r0, [sp]
   300a4:	ldrb	r0, [r0, #4]
   300a8:	ldr	r1, [sp, #4]
   300ac:	and	r2, r0, #1
   300b0:	strb	r2, [r1, #4]
   300b4:	tst	r0, #1
   300b8:	beq	300d8 <__assert_fail@plt+0x1ed54>
   300bc:	ldr	r0, [sp, #4]
   300c0:	ldr	r1, [sp]
   300c4:	ldr	r2, [r1, #8]
   300c8:	str	r2, [r0, #8]
   300cc:	ldr	r1, [r1, #12]
   300d0:	str	r1, [r0, #12]
   300d4:	b	300f0 <__assert_fail@plt+0x1ed6c>
   300d8:	ldr	r0, [sp, #4]
   300dc:	add	r0, r0, #8
   300e0:	movw	r1, #0
   300e4:	and	r1, r1, #255	; 0xff
   300e8:	movw	r2, #8
   300ec:	bl	112b8 <memset@plt>
   300f0:	ldr	r0, [sp]
   300f4:	ldrb	r0, [r0, #16]
   300f8:	ldr	r1, [sp, #4]
   300fc:	and	r0, r0, #1
   30100:	strb	r0, [r1, #16]
   30104:	ldr	r0, [sp, #4]
   30108:	add	r0, r0, #20
   3010c:	ldr	r1, [sp]
   30110:	add	r1, r1, #20
   30114:	bl	33a24 <__assert_fail@plt+0x226a0>
   30118:	mov	sp, fp
   3011c:	pop	{fp, pc}
   30120:	push	{fp, lr}
   30124:	mov	fp, sp
   30128:	sub	sp, sp, #32
   3012c:	str	r0, [fp, #-8]
   30130:	str	r1, [fp, #-12]
   30134:	str	r2, [sp, #16]
   30138:	str	r3, [sp, #12]
   3013c:	ldr	r0, [fp, #-8]
   30140:	movw	r1, #0
   30144:	cmp	r0, r1
   30148:	bne	30154 <__assert_fail@plt+0x1edd0>
   3014c:	add	r0, sp, #4
   30150:	str	r0, [fp, #-8]
   30154:	ldr	r0, [fp, #-8]
   30158:	ldr	r1, [fp, #-12]
   3015c:	ldr	r2, [sp, #16]
   30160:	ldr	r3, [sp, #12]
   30164:	bl	111e0 <mbrtowc@plt>
   30168:	str	r0, [sp, #8]
   3016c:	ldr	r0, [sp, #8]
   30170:	mvn	r1, #1
   30174:	cmp	r1, r0
   30178:	bhi	301bc <__assert_fail@plt+0x1ee38>
   3017c:	ldr	r0, [sp, #16]
   30180:	cmp	r0, #0
   30184:	beq	301bc <__assert_fail@plt+0x1ee38>
   30188:	movw	r0, #0
   3018c:	bl	33794 <__assert_fail@plt+0x22410>
   30190:	tst	r0, #1
   30194:	bne	301bc <__assert_fail@plt+0x1ee38>
   30198:	ldr	r0, [fp, #-12]
   3019c:	ldrb	r0, [r0]
   301a0:	strb	r0, [sp, #3]
   301a4:	ldrb	r0, [sp, #3]
   301a8:	ldr	r1, [fp, #-8]
   301ac:	str	r0, [r1]
   301b0:	movw	r0, #1
   301b4:	str	r0, [fp, #-4]
   301b8:	b	301c4 <__assert_fail@plt+0x1ee40>
   301bc:	ldr	r0, [sp, #8]
   301c0:	str	r0, [fp, #-4]
   301c4:	ldr	r0, [fp, #-4]
   301c8:	mov	sp, fp
   301cc:	pop	{fp, pc}
   301d0:	push	{r4, r5, fp, lr}
   301d4:	add	fp, sp, #8
   301d8:	sub	sp, sp, #432	; 0x1b0
   301dc:	str	r0, [fp, #-16]
   301e0:	str	r1, [fp, #-20]	; 0xffffffec
   301e4:	bl	111bc <__ctype_get_mb_cur_max@plt>
   301e8:	cmp	r0, #1
   301ec:	bls	30734 <__assert_fail@plt+0x1f3b0>
   301f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   301f4:	str	r0, [fp, #-60]	; 0xffffffc4
   301f8:	movw	r0, #0
   301fc:	strb	r0, [fp, #-76]	; 0xffffffb4
   30200:	sub	r1, fp, #76	; 0x4c
   30204:	add	r2, r1, #4
   30208:	str	r0, [sp, #68]	; 0x44
   3020c:	mov	r0, r2
   30210:	ldr	r2, [sp, #68]	; 0x44
   30214:	and	r3, r2, #255	; 0xff
   30218:	str	r1, [sp, #64]	; 0x40
   3021c:	mov	r1, r3
   30220:	movw	r2, #8
   30224:	bl	112b8 <memset@plt>
   30228:	ldr	r0, [sp, #68]	; 0x44
   3022c:	strb	r0, [fp, #-64]	; 0xffffffc0
   30230:	ldr	r0, [sp, #64]	; 0x40
   30234:	bl	31294 <__assert_fail@plt+0x1ff10>
   30238:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   3023c:	tst	r0, #1
   30240:	movw	r0, #0
   30244:	str	r0, [sp, #60]	; 0x3c
   30248:	beq	30260 <__assert_fail@plt+0x1eedc>
   3024c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   30250:	cmp	r0, #0
   30254:	movw	r0, #0
   30258:	moveq	r0, #1
   3025c:	str	r0, [sp, #60]	; 0x3c
   30260:	ldr	r0, [sp, #60]	; 0x3c
   30264:	mvn	r1, #0
   30268:	eor	r0, r0, r1
   3026c:	tst	r0, #1
   30270:	beq	30728 <__assert_fail@plt+0x1f3a4>
   30274:	movw	r0, #1
   30278:	strb	r0, [fp, #-77]	; 0xffffffb3
   3027c:	movw	r0, #0
   30280:	str	r0, [fp, #-84]	; 0xffffffac
   30284:	str	r0, [fp, #-88]	; 0xffffffa8
   30288:	str	r0, [fp, #-92]	; 0xffffffa4
   3028c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30290:	str	r0, [fp, #-132]	; 0xffffff7c
   30294:	movw	r0, #0
   30298:	strb	r0, [fp, #-148]	; 0xffffff6c
   3029c:	sub	r1, fp, #148	; 0x94
   302a0:	add	r1, r1, #4
   302a4:	str	r0, [sp, #56]	; 0x38
   302a8:	mov	r0, r1
   302ac:	ldr	r1, [sp, #56]	; 0x38
   302b0:	and	r1, r1, #255	; 0xff
   302b4:	movw	r2, #8
   302b8:	str	r2, [sp, #52]	; 0x34
   302bc:	bl	112b8 <memset@plt>
   302c0:	ldr	r0, [sp, #56]	; 0x38
   302c4:	strb	r0, [fp, #-136]	; 0xffffff78
   302c8:	ldr	r1, [fp, #-16]
   302cc:	str	r1, [fp, #-188]	; 0xffffff44
   302d0:	strb	r0, [fp, #-204]	; 0xffffff34
   302d4:	sub	r1, fp, #204	; 0xcc
   302d8:	add	r1, r1, #4
   302dc:	mov	r0, r1
   302e0:	ldr	r1, [sp, #56]	; 0x38
   302e4:	and	r1, r1, #255	; 0xff
   302e8:	ldr	r2, [sp, #52]	; 0x34
   302ec:	bl	112b8 <memset@plt>
   302f0:	ldr	r0, [sp, #56]	; 0x38
   302f4:	strb	r0, [fp, #-192]	; 0xffffff40
   302f8:	sub	r0, fp, #204	; 0xcc
   302fc:	bl	31294 <__assert_fail@plt+0x1ff10>
   30300:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   30304:	tst	r0, #1
   30308:	movw	r0, #0
   3030c:	str	r0, [sp, #48]	; 0x30
   30310:	beq	30328 <__assert_fail@plt+0x1efa4>
   30314:	ldr	r0, [fp, #-176]	; 0xffffff50
   30318:	cmp	r0, #0
   3031c:	movw	r0, #0
   30320:	moveq	r0, #1
   30324:	str	r0, [sp, #48]	; 0x30
   30328:	ldr	r0, [sp, #48]	; 0x30
   3032c:	mvn	r1, #0
   30330:	eor	r0, r0, r1
   30334:	tst	r0, #1
   30338:	bne	30348 <__assert_fail@plt+0x1efc4>
   3033c:	movw	r0, #0
   30340:	str	r0, [fp, #-12]
   30344:	b	30974 <__assert_fail@plt+0x1f5f0>
   30348:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   3034c:	tst	r0, #1
   30350:	beq	3049c <__assert_fail@plt+0x1f118>
   30354:	ldr	r0, [fp, #-84]	; 0xffffffac
   30358:	cmp	r0, #10
   3035c:	bcc	3049c <__assert_fail@plt+0x1f118>
   30360:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30364:	ldr	r1, [fp, #-84]	; 0xffffffac
   30368:	movw	r2, #5
   3036c:	mul	r1, r1, r2
   30370:	cmp	r0, r1
   30374:	bcc	3049c <__assert_fail@plt+0x1f118>
   30378:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3037c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   30380:	sub	r0, r0, r1
   30384:	str	r0, [fp, #-208]	; 0xffffff30
   30388:	ldr	r0, [fp, #-208]	; 0xffffff30
   3038c:	cmp	r0, #0
   30390:	movw	r0, #0
   30394:	str	r0, [sp, #44]	; 0x2c
   30398:	bls	303dc <__assert_fail@plt+0x1f058>
   3039c:	sub	r0, fp, #148	; 0x94
   303a0:	bl	31294 <__assert_fail@plt+0x1ff10>
   303a4:	ldrb	r0, [fp, #-124]	; 0xffffff84
   303a8:	tst	r0, #1
   303ac:	movw	r0, #0
   303b0:	str	r0, [sp, #40]	; 0x28
   303b4:	beq	303cc <__assert_fail@plt+0x1f048>
   303b8:	ldr	r0, [fp, #-120]	; 0xffffff88
   303bc:	cmp	r0, #0
   303c0:	movw	r0, #0
   303c4:	moveq	r0, #1
   303c8:	str	r0, [sp, #40]	; 0x28
   303cc:	ldr	r0, [sp, #40]	; 0x28
   303d0:	mvn	r1, #0
   303d4:	eor	r0, r0, r1
   303d8:	str	r0, [sp, #44]	; 0x2c
   303dc:	ldr	r0, [sp, #44]	; 0x2c
   303e0:	tst	r0, #1
   303e4:	beq	30414 <__assert_fail@plt+0x1f090>
   303e8:	ldr	r0, [fp, #-128]	; 0xffffff80
   303ec:	ldr	r1, [fp, #-132]	; 0xffffff7c
   303f0:	add	r0, r1, r0
   303f4:	str	r0, [fp, #-132]	; 0xffffff7c
   303f8:	movw	r0, #0
   303fc:	strb	r0, [fp, #-136]	; 0xffffff78
   30400:	ldr	r0, [fp, #-208]	; 0xffffff30
   30404:	mvn	r1, #0
   30408:	add	r0, r0, r1
   3040c:	str	r0, [fp, #-208]	; 0xffffff30
   30410:	b	30388 <__assert_fail@plt+0x1f004>
   30414:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30418:	str	r0, [fp, #-92]	; 0xffffffa4
   3041c:	sub	r0, fp, #148	; 0x94
   30420:	bl	31294 <__assert_fail@plt+0x1ff10>
   30424:	ldrb	r0, [fp, #-124]	; 0xffffff84
   30428:	tst	r0, #1
   3042c:	movw	r0, #0
   30430:	str	r0, [sp, #36]	; 0x24
   30434:	beq	3044c <__assert_fail@plt+0x1f0c8>
   30438:	ldr	r0, [fp, #-120]	; 0xffffff88
   3043c:	cmp	r0, #0
   30440:	movw	r0, #0
   30444:	moveq	r0, #1
   30448:	str	r0, [sp, #36]	; 0x24
   3044c:	ldr	r0, [sp, #36]	; 0x24
   30450:	mvn	r1, #0
   30454:	eor	r0, r0, r1
   30458:	tst	r0, #1
   3045c:	bne	30498 <__assert_fail@plt+0x1f114>
   30460:	ldr	r0, [fp, #-16]
   30464:	ldr	r1, [fp, #-20]	; 0xffffffec
   30468:	sub	r2, fp, #212	; 0xd4
   3046c:	bl	30980 <__assert_fail@plt+0x1f5fc>
   30470:	and	r0, r0, #1
   30474:	strb	r0, [fp, #-213]	; 0xffffff2b
   30478:	ldrb	r0, [fp, #-213]	; 0xffffff2b
   3047c:	tst	r0, #1
   30480:	beq	30490 <__assert_fail@plt+0x1f10c>
   30484:	ldr	r0, [fp, #-212]	; 0xffffff2c
   30488:	str	r0, [fp, #-12]
   3048c:	b	30974 <__assert_fail@plt+0x1f5f0>
   30490:	movw	r0, #0
   30494:	strb	r0, [fp, #-77]	; 0xffffffb3
   30498:	b	3049c <__assert_fail@plt+0x1f118>
   3049c:	ldr	r0, [fp, #-84]	; 0xffffffac
   304a0:	add	r0, r0, #1
   304a4:	str	r0, [fp, #-84]	; 0xffffffac
   304a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   304ac:	add	r0, r0, #1
   304b0:	str	r0, [fp, #-88]	; 0xffffffa8
   304b4:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   304b8:	tst	r0, #1
   304bc:	beq	304e0 <__assert_fail@plt+0x1f15c>
   304c0:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   304c4:	tst	r0, #1
   304c8:	beq	304e0 <__assert_fail@plt+0x1f15c>
   304cc:	ldr	r0, [fp, #-176]	; 0xffffff50
   304d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   304d4:	cmp	r0, r1
   304d8:	beq	30508 <__assert_fail@plt+0x1f184>
   304dc:	b	30708 <__assert_fail@plt+0x1f384>
   304e0:	ldr	r0, [fp, #-184]	; 0xffffff48
   304e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   304e8:	cmp	r0, r1
   304ec:	bne	30708 <__assert_fail@plt+0x1f384>
   304f0:	ldr	r0, [fp, #-188]	; 0xffffff44
   304f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   304f8:	ldr	r2, [fp, #-184]	; 0xffffff48
   304fc:	bl	11144 <memcmp@plt>
   30500:	cmp	r0, #0
   30504:	bne	30708 <__assert_fail@plt+0x1f384>
   30508:	add	r0, sp, #168	; 0xa8
   3050c:	sub	r1, fp, #204	; 0xcc
   30510:	movw	r2, #56	; 0x38
   30514:	bl	1112c <memcpy@plt>
   30518:	ldr	r0, [sp, #188]	; 0xbc
   3051c:	ldr	r1, [sp, #184]	; 0xb8
   30520:	add	r0, r1, r0
   30524:	str	r0, [sp, #184]	; 0xb8
   30528:	movw	r0, #0
   3052c:	strb	r0, [sp, #180]	; 0xb4
   30530:	ldr	r1, [fp, #-20]	; 0xffffffec
   30534:	str	r1, [sp, #128]	; 0x80
   30538:	strb	r0, [sp, #112]	; 0x70
   3053c:	add	r1, sp, #112	; 0x70
   30540:	add	r2, r1, #4
   30544:	str	r0, [sp, #32]
   30548:	mov	r0, r2
   3054c:	ldr	r2, [sp, #32]
   30550:	and	lr, r2, #255	; 0xff
   30554:	str	r1, [sp, #28]
   30558:	mov	r1, lr
   3055c:	movw	r2, #8
   30560:	bl	112b8 <memset@plt>
   30564:	ldr	r0, [sp, #32]
   30568:	strb	r0, [sp, #124]	; 0x7c
   3056c:	ldr	r0, [sp, #28]
   30570:	bl	31294 <__assert_fail@plt+0x1ff10>
   30574:	ldrb	r0, [sp, #136]	; 0x88
   30578:	tst	r0, #1
   3057c:	movw	r0, #0
   30580:	str	r0, [sp, #24]
   30584:	beq	3059c <__assert_fail@plt+0x1f218>
   30588:	ldr	r0, [sp, #140]	; 0x8c
   3058c:	cmp	r0, #0
   30590:	movw	r0, #0
   30594:	moveq	r0, #1
   30598:	str	r0, [sp, #24]
   3059c:	ldr	r0, [sp, #24]
   305a0:	mvn	r1, #0
   305a4:	eor	r0, r0, r1
   305a8:	tst	r0, #1
   305ac:	bne	305b4 <__assert_fail@plt+0x1f230>
   305b0:	bl	1136c <abort@plt>
   305b4:	ldr	r0, [sp, #132]	; 0x84
   305b8:	ldr	r1, [sp, #128]	; 0x80
   305bc:	add	r0, r1, r0
   305c0:	str	r0, [sp, #128]	; 0x80
   305c4:	movw	r0, #0
   305c8:	strb	r0, [sp, #124]	; 0x7c
   305cc:	add	r0, sp, #112	; 0x70
   305d0:	bl	31294 <__assert_fail@plt+0x1ff10>
   305d4:	ldrb	r0, [sp, #136]	; 0x88
   305d8:	tst	r0, #1
   305dc:	movw	r0, #0
   305e0:	str	r0, [sp, #20]
   305e4:	beq	305fc <__assert_fail@plt+0x1f278>
   305e8:	ldr	r0, [sp, #140]	; 0x8c
   305ec:	cmp	r0, #0
   305f0:	movw	r0, #0
   305f4:	moveq	r0, #1
   305f8:	str	r0, [sp, #20]
   305fc:	ldr	r0, [sp, #20]
   30600:	mvn	r1, #0
   30604:	eor	r0, r0, r1
   30608:	tst	r0, #1
   3060c:	bne	3061c <__assert_fail@plt+0x1f298>
   30610:	ldr	r0, [fp, #-188]	; 0xffffff44
   30614:	str	r0, [fp, #-12]
   30618:	b	30974 <__assert_fail@plt+0x1f5f0>
   3061c:	add	r0, sp, #168	; 0xa8
   30620:	bl	31294 <__assert_fail@plt+0x1ff10>
   30624:	ldrb	r0, [sp, #192]	; 0xc0
   30628:	tst	r0, #1
   3062c:	movw	r0, #0
   30630:	str	r0, [sp, #16]
   30634:	beq	3064c <__assert_fail@plt+0x1f2c8>
   30638:	ldr	r0, [sp, #196]	; 0xc4
   3063c:	cmp	r0, #0
   30640:	movw	r0, #0
   30644:	moveq	r0, #1
   30648:	str	r0, [sp, #16]
   3064c:	ldr	r0, [sp, #16]
   30650:	mvn	r1, #0
   30654:	eor	r0, r0, r1
   30658:	tst	r0, #1
   3065c:	bne	3066c <__assert_fail@plt+0x1f2e8>
   30660:	movw	r0, #0
   30664:	str	r0, [fp, #-12]
   30668:	b	30974 <__assert_fail@plt+0x1f5f0>
   3066c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30670:	add	r0, r0, #1
   30674:	str	r0, [fp, #-88]	; 0xffffffa8
   30678:	ldrb	r0, [sp, #192]	; 0xc0
   3067c:	tst	r0, #1
   30680:	beq	306a4 <__assert_fail@plt+0x1f320>
   30684:	ldrb	r0, [sp, #136]	; 0x88
   30688:	tst	r0, #1
   3068c:	beq	306a4 <__assert_fail@plt+0x1f320>
   30690:	ldr	r0, [sp, #196]	; 0xc4
   30694:	ldr	r1, [sp, #140]	; 0x8c
   30698:	cmp	r0, r1
   3069c:	beq	306d0 <__assert_fail@plt+0x1f34c>
   306a0:	b	306cc <__assert_fail@plt+0x1f348>
   306a4:	ldr	r0, [sp, #188]	; 0xbc
   306a8:	ldr	r1, [sp, #132]	; 0x84
   306ac:	cmp	r0, r1
   306b0:	bne	306cc <__assert_fail@plt+0x1f348>
   306b4:	ldr	r0, [sp, #184]	; 0xb8
   306b8:	ldr	r1, [sp, #128]	; 0x80
   306bc:	ldr	r2, [sp, #188]	; 0xbc
   306c0:	bl	11144 <memcmp@plt>
   306c4:	cmp	r0, #0
   306c8:	beq	306d0 <__assert_fail@plt+0x1f34c>
   306cc:	b	30704 <__assert_fail@plt+0x1f380>
   306d0:	b	306d4 <__assert_fail@plt+0x1f350>
   306d4:	ldr	r0, [sp, #188]	; 0xbc
   306d8:	ldr	r1, [sp, #184]	; 0xb8
   306dc:	add	r0, r1, r0
   306e0:	str	r0, [sp, #184]	; 0xb8
   306e4:	movw	r0, #0
   306e8:	strb	r0, [sp, #180]	; 0xb4
   306ec:	ldr	r1, [sp, #132]	; 0x84
   306f0:	ldr	r2, [sp, #128]	; 0x80
   306f4:	add	r1, r2, r1
   306f8:	str	r1, [sp, #128]	; 0x80
   306fc:	strb	r0, [sp, #124]	; 0x7c
   30700:	b	305cc <__assert_fail@plt+0x1f248>
   30704:	b	30708 <__assert_fail@plt+0x1f384>
   30708:	b	3070c <__assert_fail@plt+0x1f388>
   3070c:	ldr	r0, [fp, #-184]	; 0xffffff48
   30710:	ldr	r1, [fp, #-188]	; 0xffffff44
   30714:	add	r0, r1, r0
   30718:	str	r0, [fp, #-188]	; 0xffffff44
   3071c:	movw	r0, #0
   30720:	strb	r0, [fp, #-192]	; 0xffffff40
   30724:	b	302f8 <__assert_fail@plt+0x1ef74>
   30728:	ldr	r0, [fp, #-16]
   3072c:	str	r0, [fp, #-12]
   30730:	b	30974 <__assert_fail@plt+0x1f5f0>
   30734:	ldr	r0, [fp, #-20]	; 0xffffffec
   30738:	ldrb	r0, [r0]
   3073c:	cmp	r0, #0
   30740:	beq	3096c <__assert_fail@plt+0x1f5e8>
   30744:	movw	r0, #1
   30748:	strb	r0, [sp, #111]	; 0x6f
   3074c:	movw	r0, #0
   30750:	str	r0, [sp, #104]	; 0x68
   30754:	str	r0, [sp, #100]	; 0x64
   30758:	str	r0, [sp, #96]	; 0x60
   3075c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30760:	str	r0, [sp, #92]	; 0x5c
   30764:	ldr	r0, [fp, #-20]	; 0xffffffec
   30768:	add	r1, r0, #1
   3076c:	str	r1, [fp, #-20]	; 0xffffffec
   30770:	ldrb	r0, [r0]
   30774:	strb	r0, [sp, #91]	; 0x5b
   30778:	ldr	r0, [fp, #-16]
   3077c:	ldrb	r0, [r0]
   30780:	cmp	r0, #0
   30784:	bne	30794 <__assert_fail@plt+0x1f410>
   30788:	movw	r0, #0
   3078c:	str	r0, [fp, #-12]
   30790:	b	30974 <__assert_fail@plt+0x1f5f0>
   30794:	ldrb	r0, [sp, #111]	; 0x6f
   30798:	tst	r0, #1
   3079c:	beq	30894 <__assert_fail@plt+0x1f510>
   307a0:	ldr	r0, [sp, #104]	; 0x68
   307a4:	cmp	r0, #10
   307a8:	bcc	30894 <__assert_fail@plt+0x1f510>
   307ac:	ldr	r0, [sp, #100]	; 0x64
   307b0:	ldr	r1, [sp, #104]	; 0x68
   307b4:	movw	r2, #5
   307b8:	mul	r1, r1, r2
   307bc:	cmp	r0, r1
   307c0:	bcc	30894 <__assert_fail@plt+0x1f510>
   307c4:	ldr	r0, [sp, #92]	; 0x5c
   307c8:	movw	r1, #0
   307cc:	cmp	r0, r1
   307d0:	beq	30814 <__assert_fail@plt+0x1f490>
   307d4:	ldr	r0, [sp, #92]	; 0x5c
   307d8:	ldr	r1, [sp, #100]	; 0x64
   307dc:	ldr	r2, [sp, #96]	; 0x60
   307e0:	sub	r1, r1, r2
   307e4:	bl	112f4 <strnlen@plt>
   307e8:	ldr	r1, [sp, #92]	; 0x5c
   307ec:	add	r0, r1, r0
   307f0:	str	r0, [sp, #92]	; 0x5c
   307f4:	ldr	r0, [sp, #92]	; 0x5c
   307f8:	ldrb	r0, [r0]
   307fc:	cmp	r0, #0
   30800:	bne	3080c <__assert_fail@plt+0x1f488>
   30804:	movw	r0, #0
   30808:	str	r0, [sp, #92]	; 0x5c
   3080c:	ldr	r0, [sp, #100]	; 0x64
   30810:	str	r0, [sp, #96]	; 0x60
   30814:	ldr	r0, [sp, #92]	; 0x5c
   30818:	movw	r1, #0
   3081c:	cmp	r0, r1
   30820:	bne	30890 <__assert_fail@plt+0x1f50c>
   30824:	ldr	r0, [fp, #-16]
   30828:	ldr	r1, [fp, #-20]	; 0xffffffec
   3082c:	mvn	r2, #0
   30830:	add	r1, r1, r2
   30834:	ldr	r3, [fp, #-20]	; 0xffffffec
   30838:	add	r2, r3, r2
   3083c:	str	r0, [sp, #12]
   30840:	mov	r0, r2
   30844:	str	r1, [sp, #8]
   30848:	bl	11270 <strlen@plt>
   3084c:	ldr	r1, [sp, #12]
   30850:	str	r0, [sp, #4]
   30854:	mov	r0, r1
   30858:	ldr	r1, [sp, #8]
   3085c:	ldr	r2, [sp, #4]
   30860:	add	r3, sp, #84	; 0x54
   30864:	bl	30fd8 <__assert_fail@plt+0x1fc54>
   30868:	and	r0, r0, #1
   3086c:	strb	r0, [sp, #83]	; 0x53
   30870:	ldrb	r0, [sp, #83]	; 0x53
   30874:	tst	r0, #1
   30878:	beq	30888 <__assert_fail@plt+0x1f504>
   3087c:	ldr	r0, [sp, #84]	; 0x54
   30880:	str	r0, [fp, #-12]
   30884:	b	30974 <__assert_fail@plt+0x1f5f0>
   30888:	movw	r0, #0
   3088c:	strb	r0, [sp, #111]	; 0x6f
   30890:	b	30894 <__assert_fail@plt+0x1f510>
   30894:	ldr	r0, [sp, #104]	; 0x68
   30898:	add	r0, r0, #1
   3089c:	str	r0, [sp, #104]	; 0x68
   308a0:	ldr	r0, [sp, #100]	; 0x64
   308a4:	add	r0, r0, #1
   308a8:	str	r0, [sp, #100]	; 0x64
   308ac:	ldr	r0, [fp, #-16]
   308b0:	ldrb	r0, [r0]
   308b4:	ldrb	r1, [sp, #91]	; 0x5b
   308b8:	cmp	r0, r1
   308bc:	bne	30958 <__assert_fail@plt+0x1f5d4>
   308c0:	ldr	r0, [fp, #-16]
   308c4:	add	r0, r0, #1
   308c8:	str	r0, [sp, #76]	; 0x4c
   308cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   308d0:	str	r0, [sp, #72]	; 0x48
   308d4:	ldr	r0, [sp, #72]	; 0x48
   308d8:	ldrb	r0, [r0]
   308dc:	cmp	r0, #0
   308e0:	bne	308f0 <__assert_fail@plt+0x1f56c>
   308e4:	ldr	r0, [fp, #-16]
   308e8:	str	r0, [fp, #-12]
   308ec:	b	30974 <__assert_fail@plt+0x1f5f0>
   308f0:	ldr	r0, [sp, #76]	; 0x4c
   308f4:	ldrb	r0, [r0]
   308f8:	cmp	r0, #0
   308fc:	bne	3090c <__assert_fail@plt+0x1f588>
   30900:	movw	r0, #0
   30904:	str	r0, [fp, #-12]
   30908:	b	30974 <__assert_fail@plt+0x1f5f0>
   3090c:	ldr	r0, [sp, #100]	; 0x64
   30910:	add	r0, r0, #1
   30914:	str	r0, [sp, #100]	; 0x64
   30918:	ldr	r0, [sp, #76]	; 0x4c
   3091c:	ldrb	r0, [r0]
   30920:	ldr	r1, [sp, #72]	; 0x48
   30924:	ldrb	r1, [r1]
   30928:	cmp	r0, r1
   3092c:	beq	30934 <__assert_fail@plt+0x1f5b0>
   30930:	b	30954 <__assert_fail@plt+0x1f5d0>
   30934:	b	30938 <__assert_fail@plt+0x1f5b4>
   30938:	ldr	r0, [sp, #76]	; 0x4c
   3093c:	add	r0, r0, #1
   30940:	str	r0, [sp, #76]	; 0x4c
   30944:	ldr	r0, [sp, #72]	; 0x48
   30948:	add	r0, r0, #1
   3094c:	str	r0, [sp, #72]	; 0x48
   30950:	b	308d4 <__assert_fail@plt+0x1f550>
   30954:	b	30958 <__assert_fail@plt+0x1f5d4>
   30958:	b	3095c <__assert_fail@plt+0x1f5d8>
   3095c:	ldr	r0, [fp, #-16]
   30960:	add	r0, r0, #1
   30964:	str	r0, [fp, #-16]
   30968:	b	30778 <__assert_fail@plt+0x1f3f4>
   3096c:	ldr	r0, [fp, #-16]
   30970:	str	r0, [fp, #-12]
   30974:	ldr	r0, [fp, #-12]
   30978:	sub	sp, fp, #8
   3097c:	pop	{r4, r5, fp, pc}
   30980:	push	{r4, r5, fp, lr}
   30984:	add	fp, sp, #8
   30988:	sub	sp, sp, #264	; 0x108
   3098c:	str	r0, [fp, #-16]
   30990:	str	r1, [fp, #-20]	; 0xffffffec
   30994:	str	r2, [fp, #-24]	; 0xffffffe8
   30998:	ldr	r0, [fp, #-20]	; 0xffffffec
   3099c:	bl	33b28 <__assert_fail@plt+0x227a4>
   309a0:	ldr	r1, [pc, #1580]	; 30fd4 <__assert_fail@plt+0x1fc50>
   309a4:	str	r0, [fp, #-28]	; 0xffffffe4
   309a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   309ac:	cmp	r1, r0
   309b0:	bcs	309c0 <__assert_fail@plt+0x1f63c>
   309b4:	movw	r0, #0
   309b8:	str	r0, [fp, #-240]	; 0xffffff10
   309bc:	b	30a28 <__assert_fail@plt+0x1f6a4>
   309c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   309c4:	movw	r1, #44	; 0x2c
   309c8:	mul	r0, r0, r1
   309cc:	movw	r1, #4017	; 0xfb1
   309d0:	cmp	r0, r1
   309d4:	bcs	30a0c <__assert_fail@plt+0x1f688>
   309d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   309dc:	mov	r1, #44	; 0x2c
   309e0:	mul	r0, r0, r1
   309e4:	add	r0, r0, #22
   309e8:	bic	r0, r0, #7
   309ec:	mov	r1, sp
   309f0:	sub	r0, r1, r0
   309f4:	mov	sp, r0
   309f8:	add	r0, r0, #15
   309fc:	mvn	r1, #15
   30a00:	and	r0, r0, r1
   30a04:	str	r0, [fp, #-244]	; 0xffffff0c
   30a08:	b	30a20 <__assert_fail@plt+0x1f69c>
   30a0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30a10:	movw	r1, #44	; 0x2c
   30a14:	mul	r0, r0, r1
   30a18:	bl	33830 <__assert_fail@plt+0x224ac>
   30a1c:	str	r0, [fp, #-244]	; 0xffffff0c
   30a20:	ldr	r0, [fp, #-244]	; 0xffffff0c
   30a24:	str	r0, [fp, #-240]	; 0xffffff10
   30a28:	ldr	r0, [fp, #-240]	; 0xffffff10
   30a2c:	str	r0, [fp, #-40]	; 0xffffffd8
   30a30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30a34:	movw	r1, #0
   30a38:	cmp	r0, r1
   30a3c:	bne	30a50 <__assert_fail@plt+0x1f6cc>
   30a40:	movw	r0, #0
   30a44:	and	r0, r0, #1
   30a48:	strb	r0, [fp, #-9]
   30a4c:	b	30fc4 <__assert_fail@plt+0x1fc40>
   30a50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30a54:	str	r0, [fp, #-32]	; 0xffffffe0
   30a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30a60:	movw	r2, #40	; 0x28
   30a64:	mul	r1, r1, r2
   30a68:	add	r0, r0, r1
   30a6c:	str	r0, [fp, #-44]	; 0xffffffd4
   30a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30a74:	str	r0, [fp, #-36]	; 0xffffffdc
   30a78:	movw	r0, #0
   30a7c:	str	r0, [fp, #-104]	; 0xffffff98
   30a80:	ldr	r0, [fp, #-20]	; 0xffffffec
   30a84:	str	r0, [fp, #-84]	; 0xffffffac
   30a88:	movw	r0, #0
   30a8c:	strb	r0, [fp, #-100]	; 0xffffff9c
   30a90:	sub	r1, fp, #100	; 0x64
   30a94:	add	r1, r1, #4
   30a98:	str	r0, [fp, #-248]	; 0xffffff08
   30a9c:	mov	r0, r1
   30aa0:	ldr	r1, [fp, #-248]	; 0xffffff08
   30aa4:	and	r1, r1, #255	; 0xff
   30aa8:	movw	r2, #8
   30aac:	bl	112b8 <memset@plt>
   30ab0:	ldr	r0, [fp, #-248]	; 0xffffff08
   30ab4:	strb	r0, [fp, #-88]	; 0xffffffa8
   30ab8:	sub	r0, fp, #100	; 0x64
   30abc:	bl	31294 <__assert_fail@plt+0x1ff10>
   30ac0:	ldrb	r0, [fp, #-76]	; 0xffffffb4
   30ac4:	tst	r0, #1
   30ac8:	movw	r0, #0
   30acc:	str	r0, [fp, #-252]	; 0xffffff04
   30ad0:	beq	30ae8 <__assert_fail@plt+0x1f764>
   30ad4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   30ad8:	cmp	r0, #0
   30adc:	movw	r0, #0
   30ae0:	moveq	r0, #1
   30ae4:	str	r0, [fp, #-252]	; 0xffffff04
   30ae8:	ldr	r0, [fp, #-252]	; 0xffffff04
   30aec:	mvn	r1, #0
   30af0:	eor	r0, r0, r1
   30af4:	tst	r0, #1
   30af8:	beq	30b44 <__assert_fail@plt+0x1f7c0>
   30afc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b00:	ldr	r1, [fp, #-104]	; 0xffffff98
   30b04:	movw	r2, #40	; 0x28
   30b08:	mul	r1, r1, r2
   30b0c:	add	r0, r0, r1
   30b10:	sub	r1, fp, #100	; 0x64
   30b14:	add	r1, r1, #16
   30b18:	bl	33a24 <__assert_fail@plt+0x226a0>
   30b1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   30b20:	ldr	r1, [fp, #-84]	; 0xffffffac
   30b24:	add	r0, r1, r0
   30b28:	str	r0, [fp, #-84]	; 0xffffffac
   30b2c:	movw	r0, #0
   30b30:	strb	r0, [fp, #-88]	; 0xffffffa8
   30b34:	ldr	r0, [fp, #-104]	; 0xffffff98
   30b38:	add	r0, r0, #1
   30b3c:	str	r0, [fp, #-104]	; 0xffffff98
   30b40:	b	30ab8 <__assert_fail@plt+0x1f734>
   30b44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30b48:	movw	r1, #1
   30b4c:	str	r1, [r0, #4]
   30b50:	movw	r0, #0
   30b54:	str	r0, [fp, #-112]	; 0xffffff90
   30b58:	movw	r0, #2
   30b5c:	str	r0, [fp, #-108]	; 0xffffff94
   30b60:	ldr	r0, [fp, #-108]	; 0xffffff94
   30b64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30b68:	cmp	r0, r1
   30b6c:	bcs	30cc4 <__assert_fail@plt+0x1f940>
   30b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b74:	ldr	r1, [fp, #-108]	; 0xffffff94
   30b78:	sub	r1, r1, #1
   30b7c:	movw	r2, #40	; 0x28
   30b80:	mul	r1, r1, r2
   30b84:	add	r0, r0, r1
   30b88:	str	r0, [fp, #-116]	; 0xffffff8c
   30b8c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30b90:	ldrb	r0, [r0, #8]
   30b94:	tst	r0, #1
   30b98:	beq	30be8 <__assert_fail@plt+0x1f864>
   30b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ba0:	ldr	r1, [fp, #-112]	; 0xffffff90
   30ba4:	movw	r2, #40	; 0x28
   30ba8:	mul	r1, r1, r2
   30bac:	add	r0, r0, r1
   30bb0:	ldrb	r0, [r0, #8]
   30bb4:	tst	r0, #1
   30bb8:	beq	30be8 <__assert_fail@plt+0x1f864>
   30bbc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30bc0:	ldr	r0, [r0, #12]
   30bc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30bc8:	ldr	r2, [fp, #-112]	; 0xffffff90
   30bcc:	movw	r3, #40	; 0x28
   30bd0:	mul	r2, r2, r3
   30bd4:	add	r1, r1, r2
   30bd8:	ldr	r1, [r1, #12]
   30bdc:	cmp	r0, r1
   30be0:	beq	30c44 <__assert_fail@plt+0x1f8c0>
   30be4:	b	30c6c <__assert_fail@plt+0x1f8e8>
   30be8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30bec:	ldr	r0, [r0, #4]
   30bf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30bf4:	ldr	r2, [fp, #-112]	; 0xffffff90
   30bf8:	movw	r3, #40	; 0x28
   30bfc:	mul	r2, r2, r3
   30c00:	add	r1, r1, r2
   30c04:	ldr	r1, [r1, #4]
   30c08:	cmp	r0, r1
   30c0c:	bne	30c6c <__assert_fail@plt+0x1f8e8>
   30c10:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30c14:	ldr	r0, [r0]
   30c18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30c1c:	ldr	r2, [fp, #-112]	; 0xffffff90
   30c20:	movw	r3, #40	; 0x28
   30c24:	mul	r2, r2, r3
   30c28:	add	r1, r1, r2
   30c2c:	ldr	r1, [r1]
   30c30:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30c34:	ldr	r2, [r2, #4]
   30c38:	bl	11144 <memcmp@plt>
   30c3c:	cmp	r0, #0
   30c40:	bne	30c6c <__assert_fail@plt+0x1f8e8>
   30c44:	ldr	r0, [fp, #-108]	; 0xffffff94
   30c48:	ldr	r1, [fp, #-112]	; 0xffffff90
   30c4c:	add	r1, r1, #1
   30c50:	str	r1, [fp, #-112]	; 0xffffff90
   30c54:	sub	r0, r0, r1
   30c58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30c5c:	ldr	r2, [fp, #-108]	; 0xffffff94
   30c60:	add	r1, r1, r2, lsl #2
   30c64:	str	r0, [r1]
   30c68:	b	30cb0 <__assert_fail@plt+0x1f92c>
   30c6c:	ldr	r0, [fp, #-112]	; 0xffffff90
   30c70:	cmp	r0, #0
   30c74:	bne	30c90 <__assert_fail@plt+0x1f90c>
   30c78:	ldr	r0, [fp, #-108]	; 0xffffff94
   30c7c:	mov	r1, r0
   30c80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30c84:	add	r0, r2, r0, lsl #2
   30c88:	str	r1, [r0]
   30c8c:	b	30cb0 <__assert_fail@plt+0x1f92c>
   30c90:	ldr	r0, [fp, #-112]	; 0xffffff90
   30c94:	mov	r1, r0
   30c98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30c9c:	add	r0, r2, r0, lsl #2
   30ca0:	ldr	r0, [r0]
   30ca4:	sub	r0, r1, r0
   30ca8:	str	r0, [fp, #-112]	; 0xffffff90
   30cac:	b	30b8c <__assert_fail@plt+0x1f808>
   30cb0:	b	30cb4 <__assert_fail@plt+0x1f930>
   30cb4:	ldr	r0, [fp, #-108]	; 0xffffff94
   30cb8:	add	r0, r0, #1
   30cbc:	str	r0, [fp, #-108]	; 0xffffff94
   30cc0:	b	30b60 <__assert_fail@plt+0x1f7dc>
   30cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30cc8:	movw	r1, #0
   30ccc:	str	r1, [r0]
   30cd0:	str	r1, [fp, #-120]	; 0xffffff88
   30cd4:	ldr	r0, [fp, #-16]
   30cd8:	str	r0, [fp, #-160]	; 0xffffff60
   30cdc:	movw	r0, #0
   30ce0:	strb	r0, [fp, #-176]	; 0xffffff50
   30ce4:	sub	r1, fp, #176	; 0xb0
   30ce8:	add	r1, r1, #4
   30cec:	str	r0, [fp, #-256]	; 0xffffff00
   30cf0:	mov	r0, r1
   30cf4:	ldr	r1, [fp, #-256]	; 0xffffff00
   30cf8:	and	r1, r1, #255	; 0xff
   30cfc:	movw	r2, #8
   30d00:	str	r2, [fp, #-260]	; 0xfffffefc
   30d04:	bl	112b8 <memset@plt>
   30d08:	ldr	r0, [fp, #-256]	; 0xffffff00
   30d0c:	strb	r0, [fp, #-164]	; 0xffffff5c
   30d10:	ldr	r1, [fp, #-16]
   30d14:	str	r1, [fp, #-216]	; 0xffffff28
   30d18:	strb	r0, [fp, #-232]	; 0xffffff18
   30d1c:	sub	r1, fp, #232	; 0xe8
   30d20:	add	r1, r1, #4
   30d24:	mov	r0, r1
   30d28:	ldr	r1, [fp, #-256]	; 0xffffff00
   30d2c:	and	r1, r1, #255	; 0xff
   30d30:	ldr	r2, [fp, #-260]	; 0xfffffefc
   30d34:	bl	112b8 <memset@plt>
   30d38:	ldr	r0, [fp, #-256]	; 0xffffff00
   30d3c:	strb	r0, [fp, #-220]	; 0xffffff24
   30d40:	sub	r0, fp, #232	; 0xe8
   30d44:	bl	31294 <__assert_fail@plt+0x1ff10>
   30d48:	ldrb	r0, [fp, #-208]	; 0xffffff30
   30d4c:	tst	r0, #1
   30d50:	movw	r0, #0
   30d54:	str	r0, [fp, #-264]	; 0xfffffef8
   30d58:	beq	30d70 <__assert_fail@plt+0x1f9ec>
   30d5c:	ldr	r0, [fp, #-204]	; 0xffffff34
   30d60:	cmp	r0, #0
   30d64:	movw	r0, #0
   30d68:	moveq	r0, #1
   30d6c:	str	r0, [fp, #-264]	; 0xfffffef8
   30d70:	ldr	r0, [fp, #-264]	; 0xfffffef8
   30d74:	mvn	r1, #0
   30d78:	eor	r0, r0, r1
   30d7c:	tst	r0, #1
   30d80:	beq	30fb0 <__assert_fail@plt+0x1fc2c>
   30d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d88:	ldr	r1, [fp, #-120]	; 0xffffff88
   30d8c:	movw	r2, #40	; 0x28
   30d90:	mul	r1, r1, r2
   30d94:	add	r0, r0, r1
   30d98:	ldrb	r0, [r0, #8]
   30d9c:	tst	r0, #1
   30da0:	beq	30dd8 <__assert_fail@plt+0x1fa54>
   30da4:	ldrb	r0, [fp, #-208]	; 0xffffff30
   30da8:	tst	r0, #1
   30dac:	beq	30dd8 <__assert_fail@plt+0x1fa54>
   30db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30db4:	ldr	r1, [fp, #-120]	; 0xffffff88
   30db8:	movw	r2, #40	; 0x28
   30dbc:	mul	r1, r1, r2
   30dc0:	add	r0, r0, r1
   30dc4:	ldr	r0, [r0, #12]
   30dc8:	ldr	r1, [fp, #-204]	; 0xffffff34
   30dcc:	cmp	r0, r1
   30dd0:	beq	30e38 <__assert_fail@plt+0x1fab4>
   30dd4:	b	30e80 <__assert_fail@plt+0x1fafc>
   30dd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ddc:	ldr	r1, [fp, #-120]	; 0xffffff88
   30de0:	movw	r2, #40	; 0x28
   30de4:	mul	r1, r1, r2
   30de8:	add	r0, r0, r1
   30dec:	ldr	r0, [r0, #4]
   30df0:	ldr	r1, [fp, #-212]	; 0xffffff2c
   30df4:	cmp	r0, r1
   30df8:	bne	30e80 <__assert_fail@plt+0x1fafc>
   30dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30e00:	ldr	r1, [fp, #-120]	; 0xffffff88
   30e04:	movw	r2, #40	; 0x28
   30e08:	mul	r1, r1, r2
   30e0c:	add	r0, r0, r1
   30e10:	ldr	r0, [r0]
   30e14:	ldr	r1, [fp, #-216]	; 0xffffff28
   30e18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30e1c:	ldr	ip, [fp, #-120]	; 0xffffff88
   30e20:	mul	r2, ip, r2
   30e24:	add	r2, r3, r2
   30e28:	ldr	r2, [r2, #4]
   30e2c:	bl	11144 <memcmp@plt>
   30e30:	cmp	r0, #0
   30e34:	bne	30e80 <__assert_fail@plt+0x1fafc>
   30e38:	ldr	r0, [fp, #-120]	; 0xffffff88
   30e3c:	add	r0, r0, #1
   30e40:	str	r0, [fp, #-120]	; 0xffffff88
   30e44:	ldr	r0, [fp, #-212]	; 0xffffff2c
   30e48:	ldr	r1, [fp, #-216]	; 0xffffff28
   30e4c:	add	r0, r1, r0
   30e50:	str	r0, [fp, #-216]	; 0xffffff28
   30e54:	movw	r0, #0
   30e58:	strb	r0, [fp, #-220]	; 0xffffff24
   30e5c:	ldr	r0, [fp, #-120]	; 0xffffff88
   30e60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30e64:	cmp	r0, r1
   30e68:	bne	30e7c <__assert_fail@plt+0x1faf8>
   30e6c:	ldr	r0, [fp, #-160]	; 0xffffff60
   30e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30e74:	str	r0, [r1]
   30e78:	b	30fb0 <__assert_fail@plt+0x1fc2c>
   30e7c:	b	30fac <__assert_fail@plt+0x1fc28>
   30e80:	ldr	r0, [fp, #-120]	; 0xffffff88
   30e84:	cmp	r0, #0
   30e88:	bls	30f34 <__assert_fail@plt+0x1fbb0>
   30e8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30e90:	ldr	r1, [fp, #-120]	; 0xffffff88
   30e94:	add	r0, r0, r1, lsl #2
   30e98:	ldr	r0, [r0]
   30e9c:	str	r0, [fp, #-236]	; 0xffffff14
   30ea0:	ldr	r0, [fp, #-236]	; 0xffffff14
   30ea4:	ldr	r1, [fp, #-120]	; 0xffffff88
   30ea8:	sub	r0, r1, r0
   30eac:	str	r0, [fp, #-120]	; 0xffffff88
   30eb0:	ldr	r0, [fp, #-236]	; 0xffffff14
   30eb4:	cmp	r0, #0
   30eb8:	bls	30f30 <__assert_fail@plt+0x1fbac>
   30ebc:	sub	r0, fp, #176	; 0xb0
   30ec0:	bl	31294 <__assert_fail@plt+0x1ff10>
   30ec4:	ldrb	r0, [fp, #-152]	; 0xffffff68
   30ec8:	tst	r0, #1
   30ecc:	movw	r0, #0
   30ed0:	str	r0, [fp, #-268]	; 0xfffffef4
   30ed4:	beq	30eec <__assert_fail@plt+0x1fb68>
   30ed8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   30edc:	cmp	r0, #0
   30ee0:	movw	r0, #0
   30ee4:	moveq	r0, #1
   30ee8:	str	r0, [fp, #-268]	; 0xfffffef4
   30eec:	ldr	r0, [fp, #-268]	; 0xfffffef4
   30ef0:	mvn	r1, #0
   30ef4:	eor	r0, r0, r1
   30ef8:	tst	r0, #1
   30efc:	bne	30f04 <__assert_fail@plt+0x1fb80>
   30f00:	bl	1136c <abort@plt>
   30f04:	ldr	r0, [fp, #-156]	; 0xffffff64
   30f08:	ldr	r1, [fp, #-160]	; 0xffffff60
   30f0c:	add	r0, r1, r0
   30f10:	str	r0, [fp, #-160]	; 0xffffff60
   30f14:	movw	r0, #0
   30f18:	strb	r0, [fp, #-164]	; 0xffffff5c
   30f1c:	ldr	r0, [fp, #-236]	; 0xffffff14
   30f20:	mvn	r1, #0
   30f24:	add	r0, r0, r1
   30f28:	str	r0, [fp, #-236]	; 0xffffff14
   30f2c:	b	30eb0 <__assert_fail@plt+0x1fb2c>
   30f30:	b	30fa8 <__assert_fail@plt+0x1fc24>
   30f34:	sub	r0, fp, #176	; 0xb0
   30f38:	bl	31294 <__assert_fail@plt+0x1ff10>
   30f3c:	ldrb	r0, [fp, #-152]	; 0xffffff68
   30f40:	tst	r0, #1
   30f44:	movw	r0, #0
   30f48:	str	r0, [fp, #-272]	; 0xfffffef0
   30f4c:	beq	30f64 <__assert_fail@plt+0x1fbe0>
   30f50:	ldr	r0, [fp, #-148]	; 0xffffff6c
   30f54:	cmp	r0, #0
   30f58:	movw	r0, #0
   30f5c:	moveq	r0, #1
   30f60:	str	r0, [fp, #-272]	; 0xfffffef0
   30f64:	ldr	r0, [fp, #-272]	; 0xfffffef0
   30f68:	mvn	r1, #0
   30f6c:	eor	r0, r0, r1
   30f70:	tst	r0, #1
   30f74:	bne	30f7c <__assert_fail@plt+0x1fbf8>
   30f78:	bl	1136c <abort@plt>
   30f7c:	ldr	r0, [fp, #-156]	; 0xffffff64
   30f80:	ldr	r1, [fp, #-160]	; 0xffffff60
   30f84:	add	r0, r1, r0
   30f88:	str	r0, [fp, #-160]	; 0xffffff60
   30f8c:	movw	r0, #0
   30f90:	strb	r0, [fp, #-164]	; 0xffffff5c
   30f94:	ldr	r1, [fp, #-212]	; 0xffffff2c
   30f98:	ldr	r2, [fp, #-216]	; 0xffffff28
   30f9c:	add	r1, r2, r1
   30fa0:	str	r1, [fp, #-216]	; 0xffffff28
   30fa4:	strb	r0, [fp, #-220]	; 0xffffff24
   30fa8:	b	30fac <__assert_fail@plt+0x1fc28>
   30fac:	b	30d40 <__assert_fail@plt+0x1f9bc>
   30fb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30fb4:	bl	33958 <__assert_fail@plt+0x225d4>
   30fb8:	movw	r0, #1
   30fbc:	and	r0, r0, #1
   30fc0:	strb	r0, [fp, #-9]
   30fc4:	ldrb	r0, [fp, #-9]
   30fc8:	and	r0, r0, #1
   30fcc:	sub	sp, fp, #8
   30fd0:	pop	{r4, r5, fp, pc}
   30fd4:	rsceq	fp, r8, #188416	; 0x2e000
   30fd8:	push	{r4, r5, fp, lr}
   30fdc:	add	fp, sp, #8
   30fe0:	sub	sp, sp, #64	; 0x40
   30fe4:	ldr	ip, [pc, #676]	; 31290 <__assert_fail@plt+0x1ff0c>
   30fe8:	str	r0, [fp, #-16]
   30fec:	str	r1, [fp, #-20]	; 0xffffffec
   30ff0:	str	r2, [fp, #-24]	; 0xffffffe8
   30ff4:	str	r3, [fp, #-28]	; 0xffffffe4
   30ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ffc:	str	r0, [fp, #-32]	; 0xffffffe0
   31000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31004:	cmp	ip, r0
   31008:	bcs	31018 <__assert_fail@plt+0x1fc94>
   3100c:	movw	r0, #0
   31010:	str	r0, [fp, #-64]	; 0xffffffc0
   31014:	b	31074 <__assert_fail@plt+0x1fcf0>
   31018:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3101c:	lsl	r0, r0, #2
   31020:	movw	r1, #4017	; 0xfb1
   31024:	cmp	r0, r1
   31028:	bcs	3105c <__assert_fail@plt+0x1fcd8>
   3102c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31030:	mov	r1, #22
   31034:	add	r0, r1, r0, lsl #2
   31038:	bic	r0, r0, #7
   3103c:	mov	r1, sp
   31040:	sub	r0, r1, r0
   31044:	mov	sp, r0
   31048:	add	r0, r0, #15
   3104c:	mvn	r1, #15
   31050:	and	r0, r0, r1
   31054:	str	r0, [fp, #-68]	; 0xffffffbc
   31058:	b	3106c <__assert_fail@plt+0x1fce8>
   3105c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31060:	lsl	r0, r0, #2
   31064:	bl	33830 <__assert_fail@plt+0x224ac>
   31068:	str	r0, [fp, #-68]	; 0xffffffbc
   3106c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   31070:	str	r0, [fp, #-64]	; 0xffffffc0
   31074:	ldr	r0, [fp, #-64]	; 0xffffffc0
   31078:	str	r0, [fp, #-36]	; 0xffffffdc
   3107c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31080:	movw	r1, #0
   31084:	cmp	r0, r1
   31088:	bne	3109c <__assert_fail@plt+0x1fd18>
   3108c:	movw	r0, #0
   31090:	and	r0, r0, #1
   31094:	strb	r0, [fp, #-9]
   31098:	b	31280 <__assert_fail@plt+0x1fefc>
   3109c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   310a0:	movw	r1, #1
   310a4:	str	r1, [r0, #4]
   310a8:	movw	r0, #0
   310ac:	str	r0, [fp, #-44]	; 0xffffffd4
   310b0:	movw	r0, #2
   310b4:	str	r0, [fp, #-40]	; 0xffffffd8
   310b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   310bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   310c0:	cmp	r0, r1
   310c4:	bcs	3117c <__assert_fail@plt+0x1fdf8>
   310c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   310cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   310d0:	sub	r1, r1, #1
   310d4:	add	r0, r0, r1
   310d8:	ldrb	r0, [r0]
   310dc:	strb	r0, [fp, #-45]	; 0xffffffd3
   310e0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   310e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   310e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   310ec:	add	r1, r1, r2
   310f0:	ldrb	r1, [r1]
   310f4:	cmp	r0, r1
   310f8:	bne	31124 <__assert_fail@plt+0x1fda0>
   310fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31100:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31104:	add	r1, r1, #1
   31108:	str	r1, [fp, #-44]	; 0xffffffd4
   3110c:	sub	r0, r0, r1
   31110:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31114:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31118:	add	r1, r1, r2, lsl #2
   3111c:	str	r0, [r1]
   31120:	b	31168 <__assert_fail@plt+0x1fde4>
   31124:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31128:	cmp	r0, #0
   3112c:	bne	31148 <__assert_fail@plt+0x1fdc4>
   31130:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31134:	mov	r1, r0
   31138:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3113c:	add	r0, r2, r0, lsl #2
   31140:	str	r1, [r0]
   31144:	b	31168 <__assert_fail@plt+0x1fde4>
   31148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3114c:	mov	r1, r0
   31150:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31154:	add	r0, r2, r0, lsl #2
   31158:	ldr	r0, [r0]
   3115c:	sub	r0, r1, r0
   31160:	str	r0, [fp, #-44]	; 0xffffffd4
   31164:	b	310e0 <__assert_fail@plt+0x1fd5c>
   31168:	b	3116c <__assert_fail@plt+0x1fde8>
   3116c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31170:	add	r0, r0, #1
   31174:	str	r0, [fp, #-40]	; 0xffffffd8
   31178:	b	310b8 <__assert_fail@plt+0x1fd34>
   3117c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31180:	movw	r1, #0
   31184:	str	r1, [r0]
   31188:	str	r1, [fp, #-52]	; 0xffffffcc
   3118c:	ldr	r0, [fp, #-16]
   31190:	str	r0, [fp, #-56]	; 0xffffffc8
   31194:	ldr	r0, [fp, #-16]
   31198:	str	r0, [fp, #-60]	; 0xffffffc4
   3119c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   311a0:	ldrb	r0, [r0]
   311a4:	cmp	r0, #0
   311a8:	beq	3126c <__assert_fail@plt+0x1fee8>
   311ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   311b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   311b4:	add	r0, r0, r1
   311b8:	ldrb	r0, [r0]
   311bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   311c0:	ldrb	r1, [r1]
   311c4:	cmp	r0, r1
   311c8:	bne	31208 <__assert_fail@plt+0x1fe84>
   311cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   311d0:	add	r0, r0, #1
   311d4:	str	r0, [fp, #-52]	; 0xffffffcc
   311d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   311dc:	add	r0, r0, #1
   311e0:	str	r0, [fp, #-60]	; 0xffffffc4
   311e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   311e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   311ec:	cmp	r0, r1
   311f0:	bne	31204 <__assert_fail@plt+0x1fe80>
   311f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   311f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   311fc:	str	r0, [r1]
   31200:	b	3126c <__assert_fail@plt+0x1fee8>
   31204:	b	31268 <__assert_fail@plt+0x1fee4>
   31208:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3120c:	cmp	r0, #0
   31210:	bls	3124c <__assert_fail@plt+0x1fec8>
   31214:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31218:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3121c:	ldr	r0, [r0, r1, lsl #2]
   31220:	ldr	r1, [fp, #-56]	; 0xffffffc8
   31224:	add	r0, r1, r0
   31228:	str	r0, [fp, #-56]	; 0xffffffc8
   3122c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31230:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31234:	add	r0, r0, r1, lsl #2
   31238:	ldr	r0, [r0]
   3123c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31240:	sub	r0, r1, r0
   31244:	str	r0, [fp, #-52]	; 0xffffffcc
   31248:	b	31264 <__assert_fail@plt+0x1fee0>
   3124c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   31250:	add	r0, r0, #1
   31254:	str	r0, [fp, #-56]	; 0xffffffc8
   31258:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3125c:	add	r0, r0, #1
   31260:	str	r0, [fp, #-60]	; 0xffffffc4
   31264:	b	31268 <__assert_fail@plt+0x1fee4>
   31268:	b	3119c <__assert_fail@plt+0x1fe18>
   3126c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31270:	bl	33958 <__assert_fail@plt+0x225d4>
   31274:	movw	r0, #1
   31278:	and	r0, r0, #1
   3127c:	strb	r0, [fp, #-9]
   31280:	ldrb	r0, [fp, #-9]
   31284:	and	r0, r0, #1
   31288:	sub	sp, fp, #8
   3128c:	pop	{r4, r5, fp, pc}
   31290:	svcne	0x00ffffff
   31294:	push	{fp, lr}
   31298:	mov	fp, sp
   3129c:	sub	sp, sp, #24
   312a0:	str	r0, [fp, #-4]
   312a4:	ldr	r0, [fp, #-4]
   312a8:	ldrb	r0, [r0, #12]
   312ac:	tst	r0, #1
   312b0:	beq	312b8 <__assert_fail@plt+0x1ff34>
   312b4:	b	314f0 <__assert_fail@plt+0x2016c>
   312b8:	ldr	r0, [fp, #-4]
   312bc:	ldrb	r0, [r0]
   312c0:	tst	r0, #1
   312c4:	beq	312cc <__assert_fail@plt+0x1ff48>
   312c8:	b	31358 <__assert_fail@plt+0x1ffd4>
   312cc:	ldr	r0, [fp, #-4]
   312d0:	ldr	r0, [r0, #16]
   312d4:	ldrb	r0, [r0]
   312d8:	bl	33ad4 <__assert_fail@plt+0x22750>
   312dc:	tst	r0, #1
   312e0:	beq	31314 <__assert_fail@plt+0x1ff90>
   312e4:	ldr	r0, [fp, #-4]
   312e8:	movw	r1, #1
   312ec:	str	r1, [r0, #20]
   312f0:	ldr	r0, [fp, #-4]
   312f4:	ldr	r0, [r0, #16]
   312f8:	ldrb	r0, [r0]
   312fc:	ldr	r1, [fp, #-4]
   31300:	str	r0, [r1, #28]
   31304:	ldr	r0, [fp, #-4]
   31308:	movw	r1, #1
   3130c:	strb	r1, [r0, #24]
   31310:	b	314e4 <__assert_fail@plt+0x20160>
   31314:	ldr	r0, [fp, #-4]
   31318:	add	r0, r0, #4
   3131c:	bl	11138 <mbsinit@plt>
   31320:	cmp	r0, #0
   31324:	beq	3132c <__assert_fail@plt+0x1ffa8>
   31328:	b	3134c <__assert_fail@plt+0x1ffc8>
   3132c:	movw	r0, #36547	; 0x8ec3
   31330:	movt	r0, #3
   31334:	movw	r1, #36672	; 0x8f40
   31338:	movt	r1, #3
   3133c:	movw	r2, #143	; 0x8f
   31340:	movw	r3, #36688	; 0x8f50
   31344:	movt	r3, #3
   31348:	bl	11384 <__assert_fail@plt>
   3134c:	ldr	r0, [fp, #-4]
   31350:	movw	r1, #1
   31354:	strb	r1, [r0]
   31358:	ldr	r0, [fp, #-4]
   3135c:	add	r0, r0, #16
   31360:	add	r0, r0, #12
   31364:	ldr	r1, [fp, #-4]
   31368:	ldr	r1, [r1, #16]
   3136c:	ldr	r2, [fp, #-4]
   31370:	ldr	r2, [r2, #16]
   31374:	str	r0, [fp, #-8]
   31378:	str	r1, [sp, #12]
   3137c:	str	r2, [sp, #8]
   31380:	bl	111bc <__ctype_get_mb_cur_max@plt>
   31384:	ldr	r1, [sp, #8]
   31388:	str	r0, [sp, #4]
   3138c:	mov	r0, r1
   31390:	ldr	r1, [sp, #4]
   31394:	bl	330f0 <__assert_fail@plt+0x21d6c>
   31398:	ldr	r1, [fp, #-4]
   3139c:	add	r3, r1, #4
   313a0:	ldr	r1, [fp, #-8]
   313a4:	str	r0, [sp]
   313a8:	mov	r0, r1
   313ac:	ldr	r1, [sp, #12]
   313b0:	ldr	r2, [sp]
   313b4:	bl	30120 <__assert_fail@plt+0x1ed9c>
   313b8:	ldr	r1, [fp, #-4]
   313bc:	str	r0, [r1, #20]
   313c0:	ldr	r0, [fp, #-4]
   313c4:	ldr	r0, [r0, #20]
   313c8:	cmn	r0, #1
   313cc:	bne	313ec <__assert_fail@plt+0x20068>
   313d0:	ldr	r0, [fp, #-4]
   313d4:	movw	r1, #1
   313d8:	str	r1, [r0, #20]
   313dc:	ldr	r0, [fp, #-4]
   313e0:	movw	r1, #0
   313e4:	strb	r1, [r0, #24]
   313e8:	b	314e0 <__assert_fail@plt+0x2015c>
   313ec:	ldr	r0, [fp, #-4]
   313f0:	ldr	r0, [r0, #20]
   313f4:	cmn	r0, #2
   313f8:	bne	31420 <__assert_fail@plt+0x2009c>
   313fc:	ldr	r0, [fp, #-4]
   31400:	ldr	r0, [r0, #16]
   31404:	bl	11270 <strlen@plt>
   31408:	ldr	lr, [fp, #-4]
   3140c:	str	r0, [lr, #20]
   31410:	ldr	r0, [fp, #-4]
   31414:	movw	lr, #0
   31418:	strb	lr, [r0, #24]
   3141c:	b	314dc <__assert_fail@plt+0x20158>
   31420:	ldr	r0, [fp, #-4]
   31424:	ldr	r0, [r0, #20]
   31428:	cmp	r0, #0
   3142c:	bne	314ac <__assert_fail@plt+0x20128>
   31430:	ldr	r0, [fp, #-4]
   31434:	movw	r1, #1
   31438:	str	r1, [r0, #20]
   3143c:	ldr	r0, [fp, #-4]
   31440:	ldr	r0, [r0, #16]
   31444:	ldrb	r0, [r0]
   31448:	cmp	r0, #0
   3144c:	bne	31454 <__assert_fail@plt+0x200d0>
   31450:	b	31474 <__assert_fail@plt+0x200f0>
   31454:	movw	r0, #36631	; 0x8f17
   31458:	movt	r0, #3
   3145c:	movw	r1, #36672	; 0x8f40
   31460:	movt	r1, #3
   31464:	movw	r2, #171	; 0xab
   31468:	movw	r3, #36688	; 0x8f50
   3146c:	movt	r3, #3
   31470:	bl	11384 <__assert_fail@plt>
   31474:	ldr	r0, [fp, #-4]
   31478:	ldr	r0, [r0, #28]
   3147c:	cmp	r0, #0
   31480:	bne	31488 <__assert_fail@plt+0x20104>
   31484:	b	314a8 <__assert_fail@plt+0x20124>
   31488:	movw	r0, #36654	; 0x8f2e
   3148c:	movt	r0, #3
   31490:	movw	r1, #36672	; 0x8f40
   31494:	movt	r1, #3
   31498:	movw	r2, #172	; 0xac
   3149c:	movw	r3, #36688	; 0x8f50
   314a0:	movt	r3, #3
   314a4:	bl	11384 <__assert_fail@plt>
   314a8:	b	314ac <__assert_fail@plt+0x20128>
   314ac:	ldr	r0, [fp, #-4]
   314b0:	movw	r1, #1
   314b4:	strb	r1, [r0, #24]
   314b8:	ldr	r0, [fp, #-4]
   314bc:	add	r0, r0, #4
   314c0:	bl	11138 <mbsinit@plt>
   314c4:	cmp	r0, #0
   314c8:	beq	314d8 <__assert_fail@plt+0x20154>
   314cc:	ldr	r0, [fp, #-4]
   314d0:	movw	r1, #0
   314d4:	strb	r1, [r0]
   314d8:	b	314dc <__assert_fail@plt+0x20158>
   314dc:	b	314e0 <__assert_fail@plt+0x2015c>
   314e0:	b	314e4 <__assert_fail@plt+0x20160>
   314e4:	ldr	r0, [fp, #-4]
   314e8:	movw	r1, #1
   314ec:	strb	r1, [r0, #12]
   314f0:	mov	sp, fp
   314f4:	pop	{fp, pc}
   314f8:	sub	sp, sp, #8
   314fc:	str	r0, [sp, #4]
   31500:	str	r1, [sp]
   31504:	ldr	r0, [sp]
   31508:	ldr	r1, [sp, #4]
   3150c:	ldr	r2, [r1, #16]
   31510:	add	r0, r2, r0
   31514:	str	r0, [r1, #16]
   31518:	add	sp, sp, #8
   3151c:	bx	lr
   31520:	push	{fp, lr}
   31524:	mov	fp, sp
   31528:	sub	sp, sp, #8
   3152c:	str	r0, [sp, #4]
   31530:	str	r1, [sp]
   31534:	ldr	r0, [sp]
   31538:	ldrb	r0, [r0]
   3153c:	ldr	r1, [sp, #4]
   31540:	and	r2, r0, #1
   31544:	strb	r2, [r1]
   31548:	tst	r0, #1
   3154c:	beq	3156c <__assert_fail@plt+0x201e8>
   31550:	ldr	r0, [sp, #4]
   31554:	ldr	r1, [sp]
   31558:	ldr	r2, [r1, #4]
   3155c:	str	r2, [r0, #4]
   31560:	ldr	r1, [r1, #8]
   31564:	str	r1, [r0, #8]
   31568:	b	31584 <__assert_fail@plt+0x20200>
   3156c:	ldr	r0, [sp, #4]
   31570:	add	r0, r0, #4
   31574:	movw	r1, #0
   31578:	and	r1, r1, #255	; 0xff
   3157c:	movw	r2, #8
   31580:	bl	112b8 <memset@plt>
   31584:	ldr	r0, [sp]
   31588:	ldrb	r0, [r0, #12]
   3158c:	ldr	r1, [sp, #4]
   31590:	and	r0, r0, #1
   31594:	strb	r0, [r1, #12]
   31598:	ldr	r0, [sp, #4]
   3159c:	add	r0, r0, #16
   315a0:	ldr	r1, [sp]
   315a4:	add	r1, r1, #16
   315a8:	bl	33a24 <__assert_fail@plt+0x226a0>
   315ac:	mov	sp, fp
   315b0:	pop	{fp, pc}
   315b4:	push	{fp, lr}
   315b8:	mov	fp, sp
   315bc:	sub	sp, sp, #176	; 0xb0
   315c0:	str	r0, [fp, #-8]
   315c4:	str	r1, [fp, #-12]
   315c8:	str	r2, [fp, #-16]
   315cc:	b	31984 <__assert_fail@plt+0x20600>
   315d0:	b	317a4 <__assert_fail@plt+0x20420>
   315d4:	ldr	r0, [fp, #-16]
   315d8:	cmp	r0, #0
   315dc:	bcs	316e0 <__assert_fail@plt+0x2035c>
   315e0:	ldr	r0, [fp, #-12]
   315e4:	cmp	r0, #0
   315e8:	bcs	31670 <__assert_fail@plt+0x202ec>
   315ec:	b	3160c <__assert_fail@plt+0x20288>
   315f0:	ldr	r0, [fp, #-12]
   315f4:	ldr	r1, [fp, #-16]
   315f8:	movw	r2, #127	; 0x7f
   315fc:	udiv	r1, r2, r1
   31600:	cmp	r0, r1
   31604:	bcc	31774 <__assert_fail@plt+0x203f0>
   31608:	b	3178c <__assert_fail@plt+0x20408>
   3160c:	b	31620 <__assert_fail@plt+0x2029c>
   31610:	ldr	r0, [fp, #-16]
   31614:	cmp	r0, #1
   31618:	bcc	31630 <__assert_fail@plt+0x202ac>
   3161c:	b	3163c <__assert_fail@plt+0x202b8>
   31620:	ldr	r0, [fp, #-16]
   31624:	movw	r1, #0
   31628:	cmp	r1, r0
   3162c:	bcs	3163c <__assert_fail@plt+0x202b8>
   31630:	movw	r0, #0
   31634:	str	r0, [fp, #-24]	; 0xffffffe8
   31638:	b	31654 <__assert_fail@plt+0x202d0>
   3163c:	ldr	r0, [fp, #-16]
   31640:	movw	r1, #0
   31644:	sub	r0, r1, r0
   31648:	movw	r1, #127	; 0x7f
   3164c:	udiv	r0, r1, r0
   31650:	str	r0, [fp, #-24]	; 0xffffffe8
   31654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31658:	ldr	r1, [fp, #-12]
   3165c:	mvn	r2, #0
   31660:	sub	r1, r2, r1
   31664:	cmp	r0, r1
   31668:	bls	31774 <__assert_fail@plt+0x203f0>
   3166c:	b	3178c <__assert_fail@plt+0x20408>
   31670:	ldr	r0, [fp, #-16]
   31674:	cmn	r0, #1
   31678:	bne	316c4 <__assert_fail@plt+0x20340>
   3167c:	b	3169c <__assert_fail@plt+0x20318>
   31680:	ldr	r0, [fp, #-12]
   31684:	mvn	r1, #127	; 0x7f
   31688:	add	r0, r0, r1
   3168c:	movw	r1, #0
   31690:	cmp	r1, r0
   31694:	bcc	31774 <__assert_fail@plt+0x203f0>
   31698:	b	3178c <__assert_fail@plt+0x20408>
   3169c:	ldr	r0, [fp, #-12]
   316a0:	movw	r1, #0
   316a4:	cmp	r1, r0
   316a8:	bcs	3178c <__assert_fail@plt+0x20408>
   316ac:	ldr	r0, [fp, #-12]
   316b0:	sub	r0, r0, #1
   316b4:	movw	r1, #127	; 0x7f
   316b8:	cmp	r1, r0
   316bc:	bcc	31774 <__assert_fail@plt+0x203f0>
   316c0:	b	3178c <__assert_fail@plt+0x20408>
   316c4:	ldr	r0, [fp, #-16]
   316c8:	mvn	r1, #127	; 0x7f
   316cc:	udiv	r0, r1, r0
   316d0:	ldr	r1, [fp, #-12]
   316d4:	cmp	r0, r1
   316d8:	bcc	31774 <__assert_fail@plt+0x203f0>
   316dc:	b	3178c <__assert_fail@plt+0x20408>
   316e0:	ldr	r0, [fp, #-16]
   316e4:	cmp	r0, #0
   316e8:	bne	316f0 <__assert_fail@plt+0x2036c>
   316ec:	b	3178c <__assert_fail@plt+0x20408>
   316f0:	ldr	r0, [fp, #-12]
   316f4:	cmp	r0, #0
   316f8:	bcs	3175c <__assert_fail@plt+0x203d8>
   316fc:	ldr	r0, [fp, #-12]
   31700:	cmn	r0, #1
   31704:	bne	31740 <__assert_fail@plt+0x203bc>
   31708:	b	31728 <__assert_fail@plt+0x203a4>
   3170c:	ldr	r0, [fp, #-16]
   31710:	mvn	r1, #127	; 0x7f
   31714:	add	r0, r0, r1
   31718:	movw	r1, #0
   3171c:	cmp	r1, r0
   31720:	bcc	31774 <__assert_fail@plt+0x203f0>
   31724:	b	3178c <__assert_fail@plt+0x20408>
   31728:	ldr	r0, [fp, #-16]
   3172c:	sub	r0, r0, #1
   31730:	movw	r1, #127	; 0x7f
   31734:	cmp	r1, r0
   31738:	bcc	31774 <__assert_fail@plt+0x203f0>
   3173c:	b	3178c <__assert_fail@plt+0x20408>
   31740:	ldr	r0, [fp, #-12]
   31744:	mvn	r1, #127	; 0x7f
   31748:	udiv	r0, r1, r0
   3174c:	ldr	r1, [fp, #-16]
   31750:	cmp	r0, r1
   31754:	bcc	31774 <__assert_fail@plt+0x203f0>
   31758:	b	3178c <__assert_fail@plt+0x20408>
   3175c:	ldr	r0, [fp, #-16]
   31760:	movw	r1, #127	; 0x7f
   31764:	udiv	r0, r1, r0
   31768:	ldr	r1, [fp, #-12]
   3176c:	cmp	r0, r1
   31770:	bcs	3178c <__assert_fail@plt+0x20408>
   31774:	ldr	r0, [fp, #-12]
   31778:	ldr	r1, [fp, #-16]
   3177c:	mul	r0, r0, r1
   31780:	sxtb	r0, r0
   31784:	str	r0, [fp, #-20]	; 0xffffffec
   31788:	b	32904 <__assert_fail@plt+0x21580>
   3178c:	ldr	r0, [fp, #-12]
   31790:	ldr	r1, [fp, #-16]
   31794:	mul	r0, r0, r1
   31798:	sxtb	r0, r0
   3179c:	str	r0, [fp, #-20]	; 0xffffffec
   317a0:	b	3291c <__assert_fail@plt+0x21598>
   317a4:	ldr	r0, [fp, #-16]
   317a8:	cmp	r0, #0
   317ac:	bcs	318b8 <__assert_fail@plt+0x20534>
   317b0:	ldr	r0, [fp, #-12]
   317b4:	cmp	r0, #0
   317b8:	bcs	31840 <__assert_fail@plt+0x204bc>
   317bc:	b	317dc <__assert_fail@plt+0x20458>
   317c0:	ldr	r0, [fp, #-12]
   317c4:	ldr	r1, [fp, #-16]
   317c8:	movw	r2, #255	; 0xff
   317cc:	udiv	r1, r2, r1
   317d0:	cmp	r0, r1
   317d4:	bcc	31954 <__assert_fail@plt+0x205d0>
   317d8:	b	3196c <__assert_fail@plt+0x205e8>
   317dc:	b	317f0 <__assert_fail@plt+0x2046c>
   317e0:	ldr	r0, [fp, #-16]
   317e4:	cmp	r0, #1
   317e8:	bcc	31800 <__assert_fail@plt+0x2047c>
   317ec:	b	3180c <__assert_fail@plt+0x20488>
   317f0:	ldr	r0, [fp, #-16]
   317f4:	movw	r1, #0
   317f8:	cmp	r1, r0
   317fc:	bcs	3180c <__assert_fail@plt+0x20488>
   31800:	movw	r0, #0
   31804:	str	r0, [fp, #-28]	; 0xffffffe4
   31808:	b	31824 <__assert_fail@plt+0x204a0>
   3180c:	ldr	r0, [fp, #-16]
   31810:	movw	r1, #0
   31814:	sub	r0, r1, r0
   31818:	movw	r1, #255	; 0xff
   3181c:	udiv	r0, r1, r0
   31820:	str	r0, [fp, #-28]	; 0xffffffe4
   31824:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31828:	ldr	r1, [fp, #-12]
   3182c:	mvn	r2, #0
   31830:	sub	r1, r2, r1
   31834:	cmp	r0, r1
   31838:	bls	31954 <__assert_fail@plt+0x205d0>
   3183c:	b	3196c <__assert_fail@plt+0x205e8>
   31840:	b	31848 <__assert_fail@plt+0x204c4>
   31844:	b	3184c <__assert_fail@plt+0x204c8>
   31848:	b	3189c <__assert_fail@plt+0x20518>
   3184c:	ldr	r0, [fp, #-16]
   31850:	cmn	r0, #1
   31854:	bne	3189c <__assert_fail@plt+0x20518>
   31858:	b	31874 <__assert_fail@plt+0x204f0>
   3185c:	ldr	r0, [fp, #-12]
   31860:	add	r0, r0, #0
   31864:	movw	r1, #0
   31868:	cmp	r1, r0
   3186c:	bcc	31954 <__assert_fail@plt+0x205d0>
   31870:	b	3196c <__assert_fail@plt+0x205e8>
   31874:	ldr	r0, [fp, #-12]
   31878:	movw	r1, #0
   3187c:	cmp	r1, r0
   31880:	bcs	3196c <__assert_fail@plt+0x205e8>
   31884:	ldr	r0, [fp, #-12]
   31888:	sub	r0, r0, #1
   3188c:	mvn	r1, #0
   31890:	cmp	r1, r0
   31894:	bcc	31954 <__assert_fail@plt+0x205d0>
   31898:	b	3196c <__assert_fail@plt+0x205e8>
   3189c:	ldr	r0, [fp, #-16]
   318a0:	movw	r1, #0
   318a4:	udiv	r0, r1, r0
   318a8:	ldr	r1, [fp, #-12]
   318ac:	cmp	r0, r1
   318b0:	bcc	31954 <__assert_fail@plt+0x205d0>
   318b4:	b	3196c <__assert_fail@plt+0x205e8>
   318b8:	ldr	r0, [fp, #-16]
   318bc:	cmp	r0, #0
   318c0:	bne	318c8 <__assert_fail@plt+0x20544>
   318c4:	b	3196c <__assert_fail@plt+0x205e8>
   318c8:	ldr	r0, [fp, #-12]
   318cc:	cmp	r0, #0
   318d0:	bcs	3193c <__assert_fail@plt+0x205b8>
   318d4:	b	318dc <__assert_fail@plt+0x20558>
   318d8:	b	318e0 <__assert_fail@plt+0x2055c>
   318dc:	b	31920 <__assert_fail@plt+0x2059c>
   318e0:	ldr	r0, [fp, #-12]
   318e4:	cmn	r0, #1
   318e8:	bne	31920 <__assert_fail@plt+0x2059c>
   318ec:	b	31908 <__assert_fail@plt+0x20584>
   318f0:	ldr	r0, [fp, #-16]
   318f4:	add	r0, r0, #0
   318f8:	movw	r1, #0
   318fc:	cmp	r1, r0
   31900:	bcc	31954 <__assert_fail@plt+0x205d0>
   31904:	b	3196c <__assert_fail@plt+0x205e8>
   31908:	ldr	r0, [fp, #-16]
   3190c:	sub	r0, r0, #1
   31910:	mvn	r1, #0
   31914:	cmp	r1, r0
   31918:	bcc	31954 <__assert_fail@plt+0x205d0>
   3191c:	b	3196c <__assert_fail@plt+0x205e8>
   31920:	ldr	r0, [fp, #-12]
   31924:	movw	r1, #0
   31928:	udiv	r0, r1, r0
   3192c:	ldr	r1, [fp, #-16]
   31930:	cmp	r0, r1
   31934:	bcc	31954 <__assert_fail@plt+0x205d0>
   31938:	b	3196c <__assert_fail@plt+0x205e8>
   3193c:	ldr	r0, [fp, #-16]
   31940:	movw	r1, #255	; 0xff
   31944:	udiv	r0, r1, r0
   31948:	ldr	r1, [fp, #-12]
   3194c:	cmp	r0, r1
   31950:	bcs	3196c <__assert_fail@plt+0x205e8>
   31954:	ldr	r0, [fp, #-12]
   31958:	ldr	r1, [fp, #-16]
   3195c:	mul	r0, r0, r1
   31960:	and	r0, r0, #255	; 0xff
   31964:	str	r0, [fp, #-20]	; 0xffffffec
   31968:	b	32904 <__assert_fail@plt+0x21580>
   3196c:	ldr	r0, [fp, #-12]
   31970:	ldr	r1, [fp, #-16]
   31974:	mul	r0, r0, r1
   31978:	and	r0, r0, #255	; 0xff
   3197c:	str	r0, [fp, #-20]	; 0xffffffec
   31980:	b	3291c <__assert_fail@plt+0x21598>
   31984:	b	31d3c <__assert_fail@plt+0x209b8>
   31988:	b	31b5c <__assert_fail@plt+0x207d8>
   3198c:	ldr	r0, [fp, #-16]
   31990:	cmp	r0, #0
   31994:	bcs	31a98 <__assert_fail@plt+0x20714>
   31998:	ldr	r0, [fp, #-12]
   3199c:	cmp	r0, #0
   319a0:	bcs	31a28 <__assert_fail@plt+0x206a4>
   319a4:	b	319c4 <__assert_fail@plt+0x20640>
   319a8:	ldr	r0, [fp, #-12]
   319ac:	ldr	r1, [fp, #-16]
   319b0:	movw	r2, #32767	; 0x7fff
   319b4:	udiv	r1, r2, r1
   319b8:	cmp	r0, r1
   319bc:	bcc	31b2c <__assert_fail@plt+0x207a8>
   319c0:	b	31b44 <__assert_fail@plt+0x207c0>
   319c4:	b	319d8 <__assert_fail@plt+0x20654>
   319c8:	ldr	r0, [fp, #-16]
   319cc:	cmp	r0, #1
   319d0:	bcc	319e8 <__assert_fail@plt+0x20664>
   319d4:	b	319f4 <__assert_fail@plt+0x20670>
   319d8:	ldr	r0, [fp, #-16]
   319dc:	movw	r1, #0
   319e0:	cmp	r1, r0
   319e4:	bcs	319f4 <__assert_fail@plt+0x20670>
   319e8:	movw	r0, #0
   319ec:	str	r0, [fp, #-32]	; 0xffffffe0
   319f0:	b	31a0c <__assert_fail@plt+0x20688>
   319f4:	ldr	r0, [fp, #-16]
   319f8:	movw	r1, #0
   319fc:	sub	r0, r1, r0
   31a00:	movw	r1, #32767	; 0x7fff
   31a04:	udiv	r0, r1, r0
   31a08:	str	r0, [fp, #-32]	; 0xffffffe0
   31a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31a10:	ldr	r1, [fp, #-12]
   31a14:	mvn	r2, #0
   31a18:	sub	r1, r2, r1
   31a1c:	cmp	r0, r1
   31a20:	bls	31b2c <__assert_fail@plt+0x207a8>
   31a24:	b	31b44 <__assert_fail@plt+0x207c0>
   31a28:	ldr	r0, [fp, #-16]
   31a2c:	cmn	r0, #1
   31a30:	bne	31a7c <__assert_fail@plt+0x206f8>
   31a34:	b	31a54 <__assert_fail@plt+0x206d0>
   31a38:	ldr	r0, [pc, #3840]	; 32940 <__assert_fail@plt+0x215bc>
   31a3c:	ldr	r1, [fp, #-12]
   31a40:	add	r0, r1, r0
   31a44:	movw	r1, #0
   31a48:	cmp	r1, r0
   31a4c:	bcc	31b2c <__assert_fail@plt+0x207a8>
   31a50:	b	31b44 <__assert_fail@plt+0x207c0>
   31a54:	ldr	r0, [fp, #-12]
   31a58:	movw	r1, #0
   31a5c:	cmp	r1, r0
   31a60:	bcs	31b44 <__assert_fail@plt+0x207c0>
   31a64:	ldr	r0, [fp, #-12]
   31a68:	sub	r0, r0, #1
   31a6c:	movw	r1, #32767	; 0x7fff
   31a70:	cmp	r1, r0
   31a74:	bcc	31b2c <__assert_fail@plt+0x207a8>
   31a78:	b	31b44 <__assert_fail@plt+0x207c0>
   31a7c:	ldr	r0, [pc, #3772]	; 32940 <__assert_fail@plt+0x215bc>
   31a80:	ldr	r1, [fp, #-16]
   31a84:	udiv	r0, r0, r1
   31a88:	ldr	r1, [fp, #-12]
   31a8c:	cmp	r0, r1
   31a90:	bcc	31b2c <__assert_fail@plt+0x207a8>
   31a94:	b	31b44 <__assert_fail@plt+0x207c0>
   31a98:	ldr	r0, [fp, #-16]
   31a9c:	cmp	r0, #0
   31aa0:	bne	31aa8 <__assert_fail@plt+0x20724>
   31aa4:	b	31b44 <__assert_fail@plt+0x207c0>
   31aa8:	ldr	r0, [fp, #-12]
   31aac:	cmp	r0, #0
   31ab0:	bcs	31b14 <__assert_fail@plt+0x20790>
   31ab4:	ldr	r0, [fp, #-12]
   31ab8:	cmn	r0, #1
   31abc:	bne	31af8 <__assert_fail@plt+0x20774>
   31ac0:	b	31ae0 <__assert_fail@plt+0x2075c>
   31ac4:	ldr	r0, [pc, #3700]	; 32940 <__assert_fail@plt+0x215bc>
   31ac8:	ldr	r1, [fp, #-16]
   31acc:	add	r0, r1, r0
   31ad0:	movw	r1, #0
   31ad4:	cmp	r1, r0
   31ad8:	bcc	31b2c <__assert_fail@plt+0x207a8>
   31adc:	b	31b44 <__assert_fail@plt+0x207c0>
   31ae0:	ldr	r0, [fp, #-16]
   31ae4:	sub	r0, r0, #1
   31ae8:	movw	r1, #32767	; 0x7fff
   31aec:	cmp	r1, r0
   31af0:	bcc	31b2c <__assert_fail@plt+0x207a8>
   31af4:	b	31b44 <__assert_fail@plt+0x207c0>
   31af8:	ldr	r0, [pc, #3648]	; 32940 <__assert_fail@plt+0x215bc>
   31afc:	ldr	r1, [fp, #-12]
   31b00:	udiv	r0, r0, r1
   31b04:	ldr	r1, [fp, #-16]
   31b08:	cmp	r0, r1
   31b0c:	bcc	31b2c <__assert_fail@plt+0x207a8>
   31b10:	b	31b44 <__assert_fail@plt+0x207c0>
   31b14:	ldr	r0, [fp, #-16]
   31b18:	movw	r1, #32767	; 0x7fff
   31b1c:	udiv	r0, r1, r0
   31b20:	ldr	r1, [fp, #-12]
   31b24:	cmp	r0, r1
   31b28:	bcs	31b44 <__assert_fail@plt+0x207c0>
   31b2c:	ldr	r0, [fp, #-12]
   31b30:	ldr	r1, [fp, #-16]
   31b34:	mul	r0, r0, r1
   31b38:	sxth	r0, r0
   31b3c:	str	r0, [fp, #-20]	; 0xffffffec
   31b40:	b	32904 <__assert_fail@plt+0x21580>
   31b44:	ldr	r0, [fp, #-12]
   31b48:	ldr	r1, [fp, #-16]
   31b4c:	mul	r0, r0, r1
   31b50:	sxth	r0, r0
   31b54:	str	r0, [fp, #-20]	; 0xffffffec
   31b58:	b	3291c <__assert_fail@plt+0x21598>
   31b5c:	ldr	r0, [fp, #-16]
   31b60:	cmp	r0, #0
   31b64:	bcs	31c70 <__assert_fail@plt+0x208ec>
   31b68:	ldr	r0, [fp, #-12]
   31b6c:	cmp	r0, #0
   31b70:	bcs	31bf8 <__assert_fail@plt+0x20874>
   31b74:	b	31b94 <__assert_fail@plt+0x20810>
   31b78:	ldr	r0, [fp, #-12]
   31b7c:	ldr	r1, [fp, #-16]
   31b80:	movw	r2, #65535	; 0xffff
   31b84:	udiv	r1, r2, r1
   31b88:	cmp	r0, r1
   31b8c:	bcc	31d0c <__assert_fail@plt+0x20988>
   31b90:	b	31d24 <__assert_fail@plt+0x209a0>
   31b94:	b	31ba8 <__assert_fail@plt+0x20824>
   31b98:	ldr	r0, [fp, #-16]
   31b9c:	cmp	r0, #1
   31ba0:	bcc	31bb8 <__assert_fail@plt+0x20834>
   31ba4:	b	31bc4 <__assert_fail@plt+0x20840>
   31ba8:	ldr	r0, [fp, #-16]
   31bac:	movw	r1, #0
   31bb0:	cmp	r1, r0
   31bb4:	bcs	31bc4 <__assert_fail@plt+0x20840>
   31bb8:	movw	r0, #0
   31bbc:	str	r0, [fp, #-36]	; 0xffffffdc
   31bc0:	b	31bdc <__assert_fail@plt+0x20858>
   31bc4:	ldr	r0, [fp, #-16]
   31bc8:	movw	r1, #0
   31bcc:	sub	r0, r1, r0
   31bd0:	movw	r1, #65535	; 0xffff
   31bd4:	udiv	r0, r1, r0
   31bd8:	str	r0, [fp, #-36]	; 0xffffffdc
   31bdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31be0:	ldr	r1, [fp, #-12]
   31be4:	mvn	r2, #0
   31be8:	sub	r1, r2, r1
   31bec:	cmp	r0, r1
   31bf0:	bls	31d0c <__assert_fail@plt+0x20988>
   31bf4:	b	31d24 <__assert_fail@plt+0x209a0>
   31bf8:	b	31c00 <__assert_fail@plt+0x2087c>
   31bfc:	b	31c04 <__assert_fail@plt+0x20880>
   31c00:	b	31c54 <__assert_fail@plt+0x208d0>
   31c04:	ldr	r0, [fp, #-16]
   31c08:	cmn	r0, #1
   31c0c:	bne	31c54 <__assert_fail@plt+0x208d0>
   31c10:	b	31c2c <__assert_fail@plt+0x208a8>
   31c14:	ldr	r0, [fp, #-12]
   31c18:	add	r0, r0, #0
   31c1c:	movw	r1, #0
   31c20:	cmp	r1, r0
   31c24:	bcc	31d0c <__assert_fail@plt+0x20988>
   31c28:	b	31d24 <__assert_fail@plt+0x209a0>
   31c2c:	ldr	r0, [fp, #-12]
   31c30:	movw	r1, #0
   31c34:	cmp	r1, r0
   31c38:	bcs	31d24 <__assert_fail@plt+0x209a0>
   31c3c:	ldr	r0, [fp, #-12]
   31c40:	sub	r0, r0, #1
   31c44:	mvn	r1, #0
   31c48:	cmp	r1, r0
   31c4c:	bcc	31d0c <__assert_fail@plt+0x20988>
   31c50:	b	31d24 <__assert_fail@plt+0x209a0>
   31c54:	ldr	r0, [fp, #-16]
   31c58:	movw	r1, #0
   31c5c:	udiv	r0, r1, r0
   31c60:	ldr	r1, [fp, #-12]
   31c64:	cmp	r0, r1
   31c68:	bcc	31d0c <__assert_fail@plt+0x20988>
   31c6c:	b	31d24 <__assert_fail@plt+0x209a0>
   31c70:	ldr	r0, [fp, #-16]
   31c74:	cmp	r0, #0
   31c78:	bne	31c80 <__assert_fail@plt+0x208fc>
   31c7c:	b	31d24 <__assert_fail@plt+0x209a0>
   31c80:	ldr	r0, [fp, #-12]
   31c84:	cmp	r0, #0
   31c88:	bcs	31cf4 <__assert_fail@plt+0x20970>
   31c8c:	b	31c94 <__assert_fail@plt+0x20910>
   31c90:	b	31c98 <__assert_fail@plt+0x20914>
   31c94:	b	31cd8 <__assert_fail@plt+0x20954>
   31c98:	ldr	r0, [fp, #-12]
   31c9c:	cmn	r0, #1
   31ca0:	bne	31cd8 <__assert_fail@plt+0x20954>
   31ca4:	b	31cc0 <__assert_fail@plt+0x2093c>
   31ca8:	ldr	r0, [fp, #-16]
   31cac:	add	r0, r0, #0
   31cb0:	movw	r1, #0
   31cb4:	cmp	r1, r0
   31cb8:	bcc	31d0c <__assert_fail@plt+0x20988>
   31cbc:	b	31d24 <__assert_fail@plt+0x209a0>
   31cc0:	ldr	r0, [fp, #-16]
   31cc4:	sub	r0, r0, #1
   31cc8:	mvn	r1, #0
   31ccc:	cmp	r1, r0
   31cd0:	bcc	31d0c <__assert_fail@plt+0x20988>
   31cd4:	b	31d24 <__assert_fail@plt+0x209a0>
   31cd8:	ldr	r0, [fp, #-12]
   31cdc:	movw	r1, #0
   31ce0:	udiv	r0, r1, r0
   31ce4:	ldr	r1, [fp, #-16]
   31ce8:	cmp	r0, r1
   31cec:	bcc	31d0c <__assert_fail@plt+0x20988>
   31cf0:	b	31d24 <__assert_fail@plt+0x209a0>
   31cf4:	ldr	r0, [fp, #-16]
   31cf8:	movw	r1, #65535	; 0xffff
   31cfc:	udiv	r0, r1, r0
   31d00:	ldr	r1, [fp, #-12]
   31d04:	cmp	r0, r1
   31d08:	bcs	31d24 <__assert_fail@plt+0x209a0>
   31d0c:	ldr	r0, [fp, #-12]
   31d10:	ldr	r1, [fp, #-16]
   31d14:	mul	r0, r0, r1
   31d18:	uxth	r0, r0
   31d1c:	str	r0, [fp, #-20]	; 0xffffffec
   31d20:	b	32904 <__assert_fail@plt+0x21580>
   31d24:	ldr	r0, [fp, #-12]
   31d28:	ldr	r1, [fp, #-16]
   31d2c:	mul	r0, r0, r1
   31d30:	uxth	r0, r0
   31d34:	str	r0, [fp, #-20]	; 0xffffffec
   31d38:	b	3291c <__assert_fail@plt+0x21598>
   31d3c:	b	31d40 <__assert_fail@plt+0x209bc>
   31d40:	b	31f04 <__assert_fail@plt+0x20b80>
   31d44:	ldr	r0, [fp, #-16]
   31d48:	cmp	r0, #0
   31d4c:	bcs	31e4c <__assert_fail@plt+0x20ac8>
   31d50:	ldr	r0, [fp, #-12]
   31d54:	cmp	r0, #0
   31d58:	bcs	31de0 <__assert_fail@plt+0x20a5c>
   31d5c:	b	31d7c <__assert_fail@plt+0x209f8>
   31d60:	ldr	r0, [pc, #3024]	; 32938 <__assert_fail@plt+0x215b4>
   31d64:	ldr	r1, [fp, #-12]
   31d68:	ldr	r2, [fp, #-16]
   31d6c:	udiv	r0, r0, r2
   31d70:	cmp	r1, r0
   31d74:	bcc	31edc <__assert_fail@plt+0x20b58>
   31d78:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31d7c:	b	31d90 <__assert_fail@plt+0x20a0c>
   31d80:	ldr	r0, [fp, #-16]
   31d84:	cmp	r0, #1
   31d88:	bcc	31da0 <__assert_fail@plt+0x20a1c>
   31d8c:	b	31dac <__assert_fail@plt+0x20a28>
   31d90:	ldr	r0, [fp, #-16]
   31d94:	movw	r1, #0
   31d98:	cmp	r1, r0
   31d9c:	bcs	31dac <__assert_fail@plt+0x20a28>
   31da0:	movw	r0, #0
   31da4:	str	r0, [fp, #-40]	; 0xffffffd8
   31da8:	b	31dc4 <__assert_fail@plt+0x20a40>
   31dac:	ldr	r0, [pc, #2948]	; 32938 <__assert_fail@plt+0x215b4>
   31db0:	ldr	r1, [fp, #-16]
   31db4:	movw	r2, #0
   31db8:	sub	r1, r2, r1
   31dbc:	udiv	r0, r0, r1
   31dc0:	str	r0, [fp, #-40]	; 0xffffffd8
   31dc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31dc8:	ldr	r1, [fp, #-12]
   31dcc:	mvn	r2, #0
   31dd0:	sub	r1, r2, r1
   31dd4:	cmp	r0, r1
   31dd8:	bls	31edc <__assert_fail@plt+0x20b58>
   31ddc:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31de0:	ldr	r0, [fp, #-16]
   31de4:	cmn	r0, #1
   31de8:	bne	31e30 <__assert_fail@plt+0x20aac>
   31dec:	b	31e08 <__assert_fail@plt+0x20a84>
   31df0:	ldr	r0, [fp, #-12]
   31df4:	add	r0, r0, #-2147483648	; 0x80000000
   31df8:	movw	r1, #0
   31dfc:	cmp	r1, r0
   31e00:	bcc	31edc <__assert_fail@plt+0x20b58>
   31e04:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31e08:	ldr	r0, [fp, #-12]
   31e0c:	movw	r1, #0
   31e10:	cmp	r1, r0
   31e14:	bcs	31ef0 <__assert_fail@plt+0x20b6c>
   31e18:	ldr	r0, [pc, #2840]	; 32938 <__assert_fail@plt+0x215b4>
   31e1c:	ldr	r1, [fp, #-12]
   31e20:	sub	r1, r1, #1
   31e24:	cmp	r0, r1
   31e28:	bcc	31edc <__assert_fail@plt+0x20b58>
   31e2c:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31e30:	ldr	r0, [pc, #2820]	; 3293c <__assert_fail@plt+0x215b8>
   31e34:	ldr	r1, [fp, #-16]
   31e38:	udiv	r0, r0, r1
   31e3c:	ldr	r1, [fp, #-12]
   31e40:	cmp	r0, r1
   31e44:	bcc	31edc <__assert_fail@plt+0x20b58>
   31e48:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31e4c:	ldr	r0, [fp, #-16]
   31e50:	cmp	r0, #0
   31e54:	bne	31e5c <__assert_fail@plt+0x20ad8>
   31e58:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31e5c:	ldr	r0, [fp, #-12]
   31e60:	cmp	r0, #0
   31e64:	bcs	31ec4 <__assert_fail@plt+0x20b40>
   31e68:	ldr	r0, [fp, #-12]
   31e6c:	cmn	r0, #1
   31e70:	bne	31ea8 <__assert_fail@plt+0x20b24>
   31e74:	b	31e90 <__assert_fail@plt+0x20b0c>
   31e78:	ldr	r0, [fp, #-16]
   31e7c:	add	r0, r0, #-2147483648	; 0x80000000
   31e80:	movw	r1, #0
   31e84:	cmp	r1, r0
   31e88:	bcc	31edc <__assert_fail@plt+0x20b58>
   31e8c:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31e90:	ldr	r0, [pc, #2720]	; 32938 <__assert_fail@plt+0x215b4>
   31e94:	ldr	r1, [fp, #-16]
   31e98:	sub	r1, r1, #1
   31e9c:	cmp	r0, r1
   31ea0:	bcc	31edc <__assert_fail@plt+0x20b58>
   31ea4:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31ea8:	ldr	r0, [pc, #2700]	; 3293c <__assert_fail@plt+0x215b8>
   31eac:	ldr	r1, [fp, #-12]
   31eb0:	udiv	r0, r0, r1
   31eb4:	ldr	r1, [fp, #-16]
   31eb8:	cmp	r0, r1
   31ebc:	bcc	31edc <__assert_fail@plt+0x20b58>
   31ec0:	b	31ef0 <__assert_fail@plt+0x20b6c>
   31ec4:	ldr	r0, [pc, #2668]	; 32938 <__assert_fail@plt+0x215b4>
   31ec8:	ldr	r1, [fp, #-16]
   31ecc:	udiv	r0, r0, r1
   31ed0:	ldr	r1, [fp, #-12]
   31ed4:	cmp	r0, r1
   31ed8:	bcs	31ef0 <__assert_fail@plt+0x20b6c>
   31edc:	ldr	r0, [fp, #-12]
   31ee0:	ldr	r1, [fp, #-16]
   31ee4:	mul	r0, r0, r1
   31ee8:	str	r0, [fp, #-20]	; 0xffffffec
   31eec:	b	32904 <__assert_fail@plt+0x21580>
   31ef0:	ldr	r0, [fp, #-12]
   31ef4:	ldr	r1, [fp, #-16]
   31ef8:	mul	r0, r0, r1
   31efc:	str	r0, [fp, #-20]	; 0xffffffec
   31f00:	b	3291c <__assert_fail@plt+0x21598>
   31f04:	ldr	r0, [fp, #-16]
   31f08:	cmp	r0, #0
   31f0c:	bcs	32018 <__assert_fail@plt+0x20c94>
   31f10:	ldr	r0, [fp, #-12]
   31f14:	cmp	r0, #0
   31f18:	bcs	31fa0 <__assert_fail@plt+0x20c1c>
   31f1c:	b	31f3c <__assert_fail@plt+0x20bb8>
   31f20:	ldr	r0, [fp, #-12]
   31f24:	ldr	r1, [fp, #-16]
   31f28:	mvn	r2, #0
   31f2c:	udiv	r1, r2, r1
   31f30:	cmp	r0, r1
   31f34:	bcc	320b4 <__assert_fail@plt+0x20d30>
   31f38:	b	320c8 <__assert_fail@plt+0x20d44>
   31f3c:	b	31f50 <__assert_fail@plt+0x20bcc>
   31f40:	ldr	r0, [fp, #-16]
   31f44:	cmp	r0, #1
   31f48:	bcc	31f60 <__assert_fail@plt+0x20bdc>
   31f4c:	b	31f6c <__assert_fail@plt+0x20be8>
   31f50:	ldr	r0, [fp, #-16]
   31f54:	movw	r1, #0
   31f58:	cmp	r1, r0
   31f5c:	bcs	31f6c <__assert_fail@plt+0x20be8>
   31f60:	movw	r0, #1
   31f64:	str	r0, [fp, #-44]	; 0xffffffd4
   31f68:	b	31f84 <__assert_fail@plt+0x20c00>
   31f6c:	ldr	r0, [fp, #-16]
   31f70:	movw	r1, #0
   31f74:	sub	r0, r1, r0
   31f78:	mvn	r1, #0
   31f7c:	udiv	r0, r1, r0
   31f80:	str	r0, [fp, #-44]	; 0xffffffd4
   31f84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31f88:	ldr	r1, [fp, #-12]
   31f8c:	mvn	r2, #0
   31f90:	sub	r1, r2, r1
   31f94:	cmp	r0, r1
   31f98:	bls	320b4 <__assert_fail@plt+0x20d30>
   31f9c:	b	320c8 <__assert_fail@plt+0x20d44>
   31fa0:	b	31fa8 <__assert_fail@plt+0x20c24>
   31fa4:	b	31fac <__assert_fail@plt+0x20c28>
   31fa8:	b	31ffc <__assert_fail@plt+0x20c78>
   31fac:	ldr	r0, [fp, #-16]
   31fb0:	cmn	r0, #1
   31fb4:	bne	31ffc <__assert_fail@plt+0x20c78>
   31fb8:	b	31fd4 <__assert_fail@plt+0x20c50>
   31fbc:	ldr	r0, [fp, #-12]
   31fc0:	add	r0, r0, #0
   31fc4:	movw	r1, #0
   31fc8:	cmp	r1, r0
   31fcc:	bcc	320b4 <__assert_fail@plt+0x20d30>
   31fd0:	b	320c8 <__assert_fail@plt+0x20d44>
   31fd4:	ldr	r0, [fp, #-12]
   31fd8:	movw	r1, #0
   31fdc:	cmp	r1, r0
   31fe0:	bcs	320c8 <__assert_fail@plt+0x20d44>
   31fe4:	ldr	r0, [fp, #-12]
   31fe8:	sub	r0, r0, #1
   31fec:	mvn	r1, #0
   31ff0:	cmp	r1, r0
   31ff4:	bcc	320b4 <__assert_fail@plt+0x20d30>
   31ff8:	b	320c8 <__assert_fail@plt+0x20d44>
   31ffc:	ldr	r0, [fp, #-16]
   32000:	movw	r1, #0
   32004:	udiv	r0, r1, r0
   32008:	ldr	r1, [fp, #-12]
   3200c:	cmp	r0, r1
   32010:	bcc	320b4 <__assert_fail@plt+0x20d30>
   32014:	b	320c8 <__assert_fail@plt+0x20d44>
   32018:	ldr	r0, [fp, #-16]
   3201c:	cmp	r0, #0
   32020:	bne	32028 <__assert_fail@plt+0x20ca4>
   32024:	b	320c8 <__assert_fail@plt+0x20d44>
   32028:	ldr	r0, [fp, #-12]
   3202c:	cmp	r0, #0
   32030:	bcs	3209c <__assert_fail@plt+0x20d18>
   32034:	b	3203c <__assert_fail@plt+0x20cb8>
   32038:	b	32040 <__assert_fail@plt+0x20cbc>
   3203c:	b	32080 <__assert_fail@plt+0x20cfc>
   32040:	ldr	r0, [fp, #-12]
   32044:	cmn	r0, #1
   32048:	bne	32080 <__assert_fail@plt+0x20cfc>
   3204c:	b	32068 <__assert_fail@plt+0x20ce4>
   32050:	ldr	r0, [fp, #-16]
   32054:	add	r0, r0, #0
   32058:	movw	r1, #0
   3205c:	cmp	r1, r0
   32060:	bcc	320b4 <__assert_fail@plt+0x20d30>
   32064:	b	320c8 <__assert_fail@plt+0x20d44>
   32068:	ldr	r0, [fp, #-16]
   3206c:	sub	r0, r0, #1
   32070:	mvn	r1, #0
   32074:	cmp	r1, r0
   32078:	bcc	320b4 <__assert_fail@plt+0x20d30>
   3207c:	b	320c8 <__assert_fail@plt+0x20d44>
   32080:	ldr	r0, [fp, #-12]
   32084:	movw	r1, #0
   32088:	udiv	r0, r1, r0
   3208c:	ldr	r1, [fp, #-16]
   32090:	cmp	r0, r1
   32094:	bcc	320b4 <__assert_fail@plt+0x20d30>
   32098:	b	320c8 <__assert_fail@plt+0x20d44>
   3209c:	ldr	r0, [fp, #-16]
   320a0:	mvn	r1, #0
   320a4:	udiv	r0, r1, r0
   320a8:	ldr	r1, [fp, #-12]
   320ac:	cmp	r0, r1
   320b0:	bcs	320c8 <__assert_fail@plt+0x20d44>
   320b4:	ldr	r0, [fp, #-12]
   320b8:	ldr	r1, [fp, #-16]
   320bc:	mul	r0, r0, r1
   320c0:	str	r0, [fp, #-20]	; 0xffffffec
   320c4:	b	32904 <__assert_fail@plt+0x21580>
   320c8:	ldr	r0, [fp, #-12]
   320cc:	ldr	r1, [fp, #-16]
   320d0:	mul	r0, r0, r1
   320d4:	str	r0, [fp, #-20]	; 0xffffffec
   320d8:	b	3291c <__assert_fail@plt+0x21598>
   320dc:	b	320e0 <__assert_fail@plt+0x20d5c>
   320e0:	b	322a4 <__assert_fail@plt+0x20f20>
   320e4:	ldr	r0, [fp, #-16]
   320e8:	cmp	r0, #0
   320ec:	bcs	321ec <__assert_fail@plt+0x20e68>
   320f0:	ldr	r0, [fp, #-12]
   320f4:	cmp	r0, #0
   320f8:	bcs	32180 <__assert_fail@plt+0x20dfc>
   320fc:	b	3211c <__assert_fail@plt+0x20d98>
   32100:	ldr	r0, [pc, #2096]	; 32938 <__assert_fail@plt+0x215b4>
   32104:	ldr	r1, [fp, #-12]
   32108:	ldr	r2, [fp, #-16]
   3210c:	udiv	r0, r0, r2
   32110:	cmp	r1, r0
   32114:	bcc	3227c <__assert_fail@plt+0x20ef8>
   32118:	b	32290 <__assert_fail@plt+0x20f0c>
   3211c:	b	32130 <__assert_fail@plt+0x20dac>
   32120:	ldr	r0, [fp, #-16]
   32124:	cmp	r0, #1
   32128:	bcc	32140 <__assert_fail@plt+0x20dbc>
   3212c:	b	3214c <__assert_fail@plt+0x20dc8>
   32130:	ldr	r0, [fp, #-16]
   32134:	movw	r1, #0
   32138:	cmp	r1, r0
   3213c:	bcs	3214c <__assert_fail@plt+0x20dc8>
   32140:	movw	r0, #0
   32144:	str	r0, [fp, #-48]	; 0xffffffd0
   32148:	b	32164 <__assert_fail@plt+0x20de0>
   3214c:	ldr	r0, [pc, #2020]	; 32938 <__assert_fail@plt+0x215b4>
   32150:	ldr	r1, [fp, #-16]
   32154:	movw	r2, #0
   32158:	sub	r1, r2, r1
   3215c:	udiv	r0, r0, r1
   32160:	str	r0, [fp, #-48]	; 0xffffffd0
   32164:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32168:	ldr	r1, [fp, #-12]
   3216c:	mvn	r2, #0
   32170:	sub	r1, r2, r1
   32174:	cmp	r0, r1
   32178:	bls	3227c <__assert_fail@plt+0x20ef8>
   3217c:	b	32290 <__assert_fail@plt+0x20f0c>
   32180:	ldr	r0, [fp, #-16]
   32184:	cmn	r0, #1
   32188:	bne	321d0 <__assert_fail@plt+0x20e4c>
   3218c:	b	321a8 <__assert_fail@plt+0x20e24>
   32190:	ldr	r0, [fp, #-12]
   32194:	add	r0, r0, #-2147483648	; 0x80000000
   32198:	movw	r1, #0
   3219c:	cmp	r1, r0
   321a0:	bcc	3227c <__assert_fail@plt+0x20ef8>
   321a4:	b	32290 <__assert_fail@plt+0x20f0c>
   321a8:	ldr	r0, [fp, #-12]
   321ac:	movw	r1, #0
   321b0:	cmp	r1, r0
   321b4:	bcs	32290 <__assert_fail@plt+0x20f0c>
   321b8:	ldr	r0, [pc, #1912]	; 32938 <__assert_fail@plt+0x215b4>
   321bc:	ldr	r1, [fp, #-12]
   321c0:	sub	r1, r1, #1
   321c4:	cmp	r0, r1
   321c8:	bcc	3227c <__assert_fail@plt+0x20ef8>
   321cc:	b	32290 <__assert_fail@plt+0x20f0c>
   321d0:	ldr	r0, [pc, #1892]	; 3293c <__assert_fail@plt+0x215b8>
   321d4:	ldr	r1, [fp, #-16]
   321d8:	udiv	r0, r0, r1
   321dc:	ldr	r1, [fp, #-12]
   321e0:	cmp	r0, r1
   321e4:	bcc	3227c <__assert_fail@plt+0x20ef8>
   321e8:	b	32290 <__assert_fail@plt+0x20f0c>
   321ec:	ldr	r0, [fp, #-16]
   321f0:	cmp	r0, #0
   321f4:	bne	321fc <__assert_fail@plt+0x20e78>
   321f8:	b	32290 <__assert_fail@plt+0x20f0c>
   321fc:	ldr	r0, [fp, #-12]
   32200:	cmp	r0, #0
   32204:	bcs	32264 <__assert_fail@plt+0x20ee0>
   32208:	ldr	r0, [fp, #-12]
   3220c:	cmn	r0, #1
   32210:	bne	32248 <__assert_fail@plt+0x20ec4>
   32214:	b	32230 <__assert_fail@plt+0x20eac>
   32218:	ldr	r0, [fp, #-16]
   3221c:	add	r0, r0, #-2147483648	; 0x80000000
   32220:	movw	r1, #0
   32224:	cmp	r1, r0
   32228:	bcc	3227c <__assert_fail@plt+0x20ef8>
   3222c:	b	32290 <__assert_fail@plt+0x20f0c>
   32230:	ldr	r0, [pc, #1792]	; 32938 <__assert_fail@plt+0x215b4>
   32234:	ldr	r1, [fp, #-16]
   32238:	sub	r1, r1, #1
   3223c:	cmp	r0, r1
   32240:	bcc	3227c <__assert_fail@plt+0x20ef8>
   32244:	b	32290 <__assert_fail@plt+0x20f0c>
   32248:	ldr	r0, [pc, #1772]	; 3293c <__assert_fail@plt+0x215b8>
   3224c:	ldr	r1, [fp, #-12]
   32250:	udiv	r0, r0, r1
   32254:	ldr	r1, [fp, #-16]
   32258:	cmp	r0, r1
   3225c:	bcc	3227c <__assert_fail@plt+0x20ef8>
   32260:	b	32290 <__assert_fail@plt+0x20f0c>
   32264:	ldr	r0, [pc, #1740]	; 32938 <__assert_fail@plt+0x215b4>
   32268:	ldr	r1, [fp, #-16]
   3226c:	udiv	r0, r0, r1
   32270:	ldr	r1, [fp, #-12]
   32274:	cmp	r0, r1
   32278:	bcs	32290 <__assert_fail@plt+0x20f0c>
   3227c:	ldr	r0, [fp, #-12]
   32280:	ldr	r1, [fp, #-16]
   32284:	mul	r0, r0, r1
   32288:	str	r0, [fp, #-20]	; 0xffffffec
   3228c:	b	32904 <__assert_fail@plt+0x21580>
   32290:	ldr	r0, [fp, #-12]
   32294:	ldr	r1, [fp, #-16]
   32298:	mul	r0, r0, r1
   3229c:	str	r0, [fp, #-20]	; 0xffffffec
   322a0:	b	3291c <__assert_fail@plt+0x21598>
   322a4:	ldr	r0, [fp, #-16]
   322a8:	cmp	r0, #0
   322ac:	bcs	323b8 <__assert_fail@plt+0x21034>
   322b0:	ldr	r0, [fp, #-12]
   322b4:	cmp	r0, #0
   322b8:	bcs	32340 <__assert_fail@plt+0x20fbc>
   322bc:	b	322dc <__assert_fail@plt+0x20f58>
   322c0:	ldr	r0, [fp, #-12]
   322c4:	ldr	r1, [fp, #-16]
   322c8:	mvn	r2, #0
   322cc:	udiv	r1, r2, r1
   322d0:	cmp	r0, r1
   322d4:	bcc	32454 <__assert_fail@plt+0x210d0>
   322d8:	b	32468 <__assert_fail@plt+0x210e4>
   322dc:	b	322f0 <__assert_fail@plt+0x20f6c>
   322e0:	ldr	r0, [fp, #-16]
   322e4:	cmp	r0, #1
   322e8:	bcc	32300 <__assert_fail@plt+0x20f7c>
   322ec:	b	3230c <__assert_fail@plt+0x20f88>
   322f0:	ldr	r0, [fp, #-16]
   322f4:	movw	r1, #0
   322f8:	cmp	r1, r0
   322fc:	bcs	3230c <__assert_fail@plt+0x20f88>
   32300:	movw	r0, #1
   32304:	str	r0, [fp, #-52]	; 0xffffffcc
   32308:	b	32324 <__assert_fail@plt+0x20fa0>
   3230c:	ldr	r0, [fp, #-16]
   32310:	movw	r1, #0
   32314:	sub	r0, r1, r0
   32318:	mvn	r1, #0
   3231c:	udiv	r0, r1, r0
   32320:	str	r0, [fp, #-52]	; 0xffffffcc
   32324:	ldr	r0, [fp, #-52]	; 0xffffffcc
   32328:	ldr	r1, [fp, #-12]
   3232c:	mvn	r2, #0
   32330:	sub	r1, r2, r1
   32334:	cmp	r0, r1
   32338:	bls	32454 <__assert_fail@plt+0x210d0>
   3233c:	b	32468 <__assert_fail@plt+0x210e4>
   32340:	b	32348 <__assert_fail@plt+0x20fc4>
   32344:	b	3234c <__assert_fail@plt+0x20fc8>
   32348:	b	3239c <__assert_fail@plt+0x21018>
   3234c:	ldr	r0, [fp, #-16]
   32350:	cmn	r0, #1
   32354:	bne	3239c <__assert_fail@plt+0x21018>
   32358:	b	32374 <__assert_fail@plt+0x20ff0>
   3235c:	ldr	r0, [fp, #-12]
   32360:	add	r0, r0, #0
   32364:	movw	r1, #0
   32368:	cmp	r1, r0
   3236c:	bcc	32454 <__assert_fail@plt+0x210d0>
   32370:	b	32468 <__assert_fail@plt+0x210e4>
   32374:	ldr	r0, [fp, #-12]
   32378:	movw	r1, #0
   3237c:	cmp	r1, r0
   32380:	bcs	32468 <__assert_fail@plt+0x210e4>
   32384:	ldr	r0, [fp, #-12]
   32388:	sub	r0, r0, #1
   3238c:	mvn	r1, #0
   32390:	cmp	r1, r0
   32394:	bcc	32454 <__assert_fail@plt+0x210d0>
   32398:	b	32468 <__assert_fail@plt+0x210e4>
   3239c:	ldr	r0, [fp, #-16]
   323a0:	movw	r1, #0
   323a4:	udiv	r0, r1, r0
   323a8:	ldr	r1, [fp, #-12]
   323ac:	cmp	r0, r1
   323b0:	bcc	32454 <__assert_fail@plt+0x210d0>
   323b4:	b	32468 <__assert_fail@plt+0x210e4>
   323b8:	ldr	r0, [fp, #-16]
   323bc:	cmp	r0, #0
   323c0:	bne	323c8 <__assert_fail@plt+0x21044>
   323c4:	b	32468 <__assert_fail@plt+0x210e4>
   323c8:	ldr	r0, [fp, #-12]
   323cc:	cmp	r0, #0
   323d0:	bcs	3243c <__assert_fail@plt+0x210b8>
   323d4:	b	323dc <__assert_fail@plt+0x21058>
   323d8:	b	323e0 <__assert_fail@plt+0x2105c>
   323dc:	b	32420 <__assert_fail@plt+0x2109c>
   323e0:	ldr	r0, [fp, #-12]
   323e4:	cmn	r0, #1
   323e8:	bne	32420 <__assert_fail@plt+0x2109c>
   323ec:	b	32408 <__assert_fail@plt+0x21084>
   323f0:	ldr	r0, [fp, #-16]
   323f4:	add	r0, r0, #0
   323f8:	movw	r1, #0
   323fc:	cmp	r1, r0
   32400:	bcc	32454 <__assert_fail@plt+0x210d0>
   32404:	b	32468 <__assert_fail@plt+0x210e4>
   32408:	ldr	r0, [fp, #-16]
   3240c:	sub	r0, r0, #1
   32410:	mvn	r1, #0
   32414:	cmp	r1, r0
   32418:	bcc	32454 <__assert_fail@plt+0x210d0>
   3241c:	b	32468 <__assert_fail@plt+0x210e4>
   32420:	ldr	r0, [fp, #-12]
   32424:	movw	r1, #0
   32428:	udiv	r0, r1, r0
   3242c:	ldr	r1, [fp, #-16]
   32430:	cmp	r0, r1
   32434:	bcc	32454 <__assert_fail@plt+0x210d0>
   32438:	b	32468 <__assert_fail@plt+0x210e4>
   3243c:	ldr	r0, [fp, #-16]
   32440:	mvn	r1, #0
   32444:	udiv	r0, r1, r0
   32448:	ldr	r1, [fp, #-12]
   3244c:	cmp	r0, r1
   32450:	bcs	32468 <__assert_fail@plt+0x210e4>
   32454:	ldr	r0, [fp, #-12]
   32458:	ldr	r1, [fp, #-16]
   3245c:	mul	r0, r0, r1
   32460:	str	r0, [fp, #-20]	; 0xffffffec
   32464:	b	32904 <__assert_fail@plt+0x21580>
   32468:	ldr	r0, [fp, #-12]
   3246c:	ldr	r1, [fp, #-16]
   32470:	mul	r0, r0, r1
   32474:	str	r0, [fp, #-20]	; 0xffffffec
   32478:	b	3291c <__assert_fail@plt+0x21598>
   3247c:	b	326d0 <__assert_fail@plt+0x2134c>
   32480:	ldr	r0, [fp, #-16]
   32484:	cmp	r0, #0
   32488:	bcs	325e8 <__assert_fail@plt+0x21264>
   3248c:	ldr	r0, [fp, #-12]
   32490:	cmp	r0, #0
   32494:	bcs	32564 <__assert_fail@plt+0x211e0>
   32498:	b	3249c <__assert_fail@plt+0x21118>
   3249c:	ldr	r0, [fp, #-12]
   324a0:	ldr	r2, [fp, #-16]
   324a4:	mvn	r1, #0
   324a8:	mvn	r3, #-2147483648	; 0x80000000
   324ac:	mov	ip, #0
   324b0:	str	r0, [fp, #-56]	; 0xffffffc8
   324b4:	mov	r0, r1
   324b8:	mov	r1, r3
   324bc:	mov	r3, ip
   324c0:	bl	33e44 <__assert_fail@plt+0x22ac0>
   324c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   324c8:	subs	r0, r2, r0
   324cc:	rscs	r1, r1, #0
   324d0:	str	r0, [fp, #-60]	; 0xffffffc4
   324d4:	str	r1, [fp, #-64]	; 0xffffffc0
   324d8:	blt	326a8 <__assert_fail@plt+0x21324>
   324dc:	b	326bc <__assert_fail@plt+0x21338>
   324e0:	b	324f4 <__assert_fail@plt+0x21170>
   324e4:	ldr	r0, [fp, #-16]
   324e8:	cmp	r0, #1
   324ec:	bcc	32504 <__assert_fail@plt+0x21180>
   324f0:	b	32518 <__assert_fail@plt+0x21194>
   324f4:	ldr	r0, [fp, #-16]
   324f8:	movw	r1, #0
   324fc:	cmp	r1, r0
   32500:	bcs	32518 <__assert_fail@plt+0x21194>
   32504:	mov	r0, #0
   32508:	mvn	r1, #0
   3250c:	str	r1, [fp, #-68]	; 0xffffffbc
   32510:	str	r0, [fp, #-72]	; 0xffffffb8
   32514:	b	3253c <__assert_fail@plt+0x211b8>
   32518:	ldr	r0, [fp, #-16]
   3251c:	rsb	r2, r0, #0
   32520:	mvn	r0, #0
   32524:	mvn	r1, #-2147483648	; 0x80000000
   32528:	mov	r3, #0
   3252c:	bl	33e44 <__assert_fail@plt+0x22ac0>
   32530:	str	r0, [fp, #-68]	; 0xffffffbc
   32534:	str	r1, [fp, #-72]	; 0xffffffb8
   32538:	b	3253c <__assert_fail@plt+0x211b8>
   3253c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   32540:	ldr	r1, [fp, #-68]	; 0xffffffbc
   32544:	ldr	r2, [fp, #-12]
   32548:	mvn	r2, r2
   3254c:	subs	r1, r2, r1
   32550:	rscs	r0, r0, #0
   32554:	str	r1, [fp, #-76]	; 0xffffffb4
   32558:	str	r0, [fp, #-80]	; 0xffffffb0
   3255c:	bge	326a8 <__assert_fail@plt+0x21324>
   32560:	b	326bc <__assert_fail@plt+0x21338>
   32564:	ldr	r0, [fp, #-16]
   32568:	cmn	r0, #1
   3256c:	bne	325b4 <__assert_fail@plt+0x21230>
   32570:	b	32594 <__assert_fail@plt+0x21210>
   32574:	ldr	r0, [fp, #-12]
   32578:	rsbs	r0, r0, #0
   3257c:	mov	r1, #0
   32580:	sbcs	r1, r1, #-2147483648	; 0x80000000
   32584:	str	r0, [fp, #-84]	; 0xffffffac
   32588:	str	r1, [sp, #88]	; 0x58
   3258c:	blt	326a8 <__assert_fail@plt+0x21324>
   32590:	b	326bc <__assert_fail@plt+0x21338>
   32594:	ldr	r0, [fp, #-12]
   32598:	movw	r1, #0
   3259c:	cmp	r1, r0
   325a0:	bcs	326bc <__assert_fail@plt+0x21338>
   325a4:	mov	r0, #0
   325a8:	cmp	r0, #0
   325ac:	bne	326a8 <__assert_fail@plt+0x21324>
   325b0:	b	326bc <__assert_fail@plt+0x21338>
   325b4:	ldr	r2, [fp, #-16]
   325b8:	mov	r1, #-2147483648	; 0x80000000
   325bc:	mov	r0, #0
   325c0:	str	r0, [sp, #84]	; 0x54
   325c4:	ldr	r3, [sp, #84]	; 0x54
   325c8:	bl	33d70 <__assert_fail@plt+0x229ec>
   325cc:	ldr	r2, [fp, #-12]
   325d0:	subs	r0, r0, r2
   325d4:	sbcs	r1, r1, #0
   325d8:	str	r0, [sp, #80]	; 0x50
   325dc:	str	r1, [sp, #76]	; 0x4c
   325e0:	blt	326a8 <__assert_fail@plt+0x21324>
   325e4:	b	326bc <__assert_fail@plt+0x21338>
   325e8:	ldr	r0, [fp, #-16]
   325ec:	cmp	r0, #0
   325f0:	bne	325f8 <__assert_fail@plt+0x21274>
   325f4:	b	326bc <__assert_fail@plt+0x21338>
   325f8:	ldr	r0, [fp, #-12]
   325fc:	cmp	r0, #0
   32600:	bcs	32678 <__assert_fail@plt+0x212f4>
   32604:	ldr	r0, [fp, #-12]
   32608:	cmn	r0, #1
   3260c:	bne	32644 <__assert_fail@plt+0x212c0>
   32610:	b	32634 <__assert_fail@plt+0x212b0>
   32614:	ldr	r0, [fp, #-16]
   32618:	rsbs	r0, r0, #0
   3261c:	mov	r1, #0
   32620:	sbcs	r1, r1, #-2147483648	; 0x80000000
   32624:	str	r0, [sp, #72]	; 0x48
   32628:	str	r1, [sp, #68]	; 0x44
   3262c:	blt	326a8 <__assert_fail@plt+0x21324>
   32630:	b	326bc <__assert_fail@plt+0x21338>
   32634:	mov	r0, #0
   32638:	cmp	r0, #0
   3263c:	bne	326a8 <__assert_fail@plt+0x21324>
   32640:	b	326bc <__assert_fail@plt+0x21338>
   32644:	ldr	r2, [fp, #-12]
   32648:	mov	r1, #-2147483648	; 0x80000000
   3264c:	mov	r0, #0
   32650:	str	r0, [sp, #64]	; 0x40
   32654:	ldr	r3, [sp, #64]	; 0x40
   32658:	bl	33d70 <__assert_fail@plt+0x229ec>
   3265c:	ldr	r2, [fp, #-16]
   32660:	subs	r0, r0, r2
   32664:	sbcs	r1, r1, #0
   32668:	str	r0, [sp, #60]	; 0x3c
   3266c:	str	r1, [sp, #56]	; 0x38
   32670:	blt	326a8 <__assert_fail@plt+0x21324>
   32674:	b	326bc <__assert_fail@plt+0x21338>
   32678:	ldr	r2, [fp, #-16]
   3267c:	mvn	r0, #0
   32680:	mvn	r1, #-2147483648	; 0x80000000
   32684:	mov	r3, #0
   32688:	bl	33e44 <__assert_fail@plt+0x22ac0>
   3268c:	ldr	r2, [fp, #-12]
   32690:	subs	r0, r0, r2
   32694:	sbcs	r1, r1, #0
   32698:	str	r0, [sp, #52]	; 0x34
   3269c:	str	r1, [sp, #48]	; 0x30
   326a0:	bge	326bc <__assert_fail@plt+0x21338>
   326a4:	b	326a8 <__assert_fail@plt+0x21324>
   326a8:	ldr	r0, [fp, #-12]
   326ac:	ldr	r1, [fp, #-16]
   326b0:	mul	r0, r0, r1
   326b4:	str	r0, [fp, #-20]	; 0xffffffec
   326b8:	b	32904 <__assert_fail@plt+0x21580>
   326bc:	ldr	r0, [fp, #-12]
   326c0:	ldr	r1, [fp, #-16]
   326c4:	mul	r0, r0, r1
   326c8:	str	r0, [fp, #-20]	; 0xffffffec
   326cc:	b	3291c <__assert_fail@plt+0x21598>
   326d0:	ldr	r0, [fp, #-16]
   326d4:	cmp	r0, #0
   326d8:	bcs	32824 <__assert_fail@plt+0x214a0>
   326dc:	ldr	r0, [fp, #-12]
   326e0:	cmp	r0, #0
   326e4:	bcs	327ac <__assert_fail@plt+0x21428>
   326e8:	b	32724 <__assert_fail@plt+0x213a0>
   326ec:	ldr	r0, [fp, #-12]
   326f0:	ldr	r2, [fp, #-16]
   326f4:	mvn	r1, #0
   326f8:	mov	r3, #0
   326fc:	str	r0, [sp, #44]	; 0x2c
   32700:	mov	r0, r1
   32704:	bl	33e44 <__assert_fail@plt+0x22ac0>
   32708:	ldr	r2, [sp, #44]	; 0x2c
   3270c:	subs	r0, r2, r0
   32710:	rscs	r1, r1, #0
   32714:	str	r0, [sp, #40]	; 0x28
   32718:	str	r1, [sp, #36]	; 0x24
   3271c:	bcc	328dc <__assert_fail@plt+0x21558>
   32720:	b	328f0 <__assert_fail@plt+0x2156c>
   32724:	b	32738 <__assert_fail@plt+0x213b4>
   32728:	ldr	r0, [fp, #-16]
   3272c:	cmp	r0, #1
   32730:	bcc	32748 <__assert_fail@plt+0x213c4>
   32734:	b	3275c <__assert_fail@plt+0x213d8>
   32738:	ldr	r0, [fp, #-16]
   3273c:	movw	r1, #0
   32740:	cmp	r1, r0
   32744:	bcs	3275c <__assert_fail@plt+0x213d8>
   32748:	mov	r0, #1
   3274c:	mvn	r1, #0
   32750:	str	r1, [sp, #32]
   32754:	str	r0, [sp, #28]
   32758:	b	32784 <__assert_fail@plt+0x21400>
   3275c:	ldr	r0, [fp, #-16]
   32760:	rsb	r2, r0, #0
   32764:	mvn	r0, #0
   32768:	mov	r3, #0
   3276c:	str	r0, [sp, #24]
   32770:	ldr	r1, [sp, #24]
   32774:	bl	33e44 <__assert_fail@plt+0x22ac0>
   32778:	str	r0, [sp, #32]
   3277c:	str	r1, [sp, #28]
   32780:	b	32784 <__assert_fail@plt+0x21400>
   32784:	ldr	r0, [sp, #28]
   32788:	ldr	r1, [sp, #32]
   3278c:	ldr	r2, [fp, #-12]
   32790:	mvn	r2, r2
   32794:	subs	r1, r2, r1
   32798:	rscs	r0, r0, #0
   3279c:	str	r1, [sp, #20]
   327a0:	str	r0, [sp, #16]
   327a4:	bcs	328dc <__assert_fail@plt+0x21558>
   327a8:	b	328f0 <__assert_fail@plt+0x2156c>
   327ac:	b	327b4 <__assert_fail@plt+0x21430>
   327b0:	b	327b8 <__assert_fail@plt+0x21434>
   327b4:	b	32808 <__assert_fail@plt+0x21484>
   327b8:	ldr	r0, [fp, #-16]
   327bc:	cmn	r0, #1
   327c0:	bne	32808 <__assert_fail@plt+0x21484>
   327c4:	b	327e0 <__assert_fail@plt+0x2145c>
   327c8:	ldr	r0, [fp, #-12]
   327cc:	add	r0, r0, #0
   327d0:	movw	r1, #0
   327d4:	cmp	r1, r0
   327d8:	bcc	328dc <__assert_fail@plt+0x21558>
   327dc:	b	328f0 <__assert_fail@plt+0x2156c>
   327e0:	ldr	r0, [fp, #-12]
   327e4:	movw	r1, #0
   327e8:	cmp	r1, r0
   327ec:	bcs	328f0 <__assert_fail@plt+0x2156c>
   327f0:	ldr	r0, [fp, #-12]
   327f4:	sub	r0, r0, #1
   327f8:	mvn	r1, #0
   327fc:	cmp	r1, r0
   32800:	bcc	328dc <__assert_fail@plt+0x21558>
   32804:	b	328f0 <__assert_fail@plt+0x2156c>
   32808:	ldr	r0, [fp, #-16]
   3280c:	movw	r1, #0
   32810:	udiv	r0, r1, r0
   32814:	ldr	r1, [fp, #-12]
   32818:	cmp	r0, r1
   3281c:	bcc	328dc <__assert_fail@plt+0x21558>
   32820:	b	328f0 <__assert_fail@plt+0x2156c>
   32824:	ldr	r0, [fp, #-16]
   32828:	cmp	r0, #0
   3282c:	bne	32834 <__assert_fail@plt+0x214b0>
   32830:	b	328f0 <__assert_fail@plt+0x2156c>
   32834:	ldr	r0, [fp, #-12]
   32838:	cmp	r0, #0
   3283c:	bcs	328a8 <__assert_fail@plt+0x21524>
   32840:	b	32848 <__assert_fail@plt+0x214c4>
   32844:	b	3284c <__assert_fail@plt+0x214c8>
   32848:	b	3288c <__assert_fail@plt+0x21508>
   3284c:	ldr	r0, [fp, #-12]
   32850:	cmn	r0, #1
   32854:	bne	3288c <__assert_fail@plt+0x21508>
   32858:	b	32874 <__assert_fail@plt+0x214f0>
   3285c:	ldr	r0, [fp, #-16]
   32860:	add	r0, r0, #0
   32864:	movw	r1, #0
   32868:	cmp	r1, r0
   3286c:	bcc	328dc <__assert_fail@plt+0x21558>
   32870:	b	328f0 <__assert_fail@plt+0x2156c>
   32874:	ldr	r0, [fp, #-16]
   32878:	sub	r0, r0, #1
   3287c:	mvn	r1, #0
   32880:	cmp	r1, r0
   32884:	bcc	328dc <__assert_fail@plt+0x21558>
   32888:	b	328f0 <__assert_fail@plt+0x2156c>
   3288c:	ldr	r0, [fp, #-12]
   32890:	movw	r1, #0
   32894:	udiv	r0, r1, r0
   32898:	ldr	r1, [fp, #-16]
   3289c:	cmp	r0, r1
   328a0:	bcc	328dc <__assert_fail@plt+0x21558>
   328a4:	b	328f0 <__assert_fail@plt+0x2156c>
   328a8:	ldr	r2, [fp, #-16]
   328ac:	mvn	r0, #0
   328b0:	mov	r3, #0
   328b4:	str	r0, [sp, #12]
   328b8:	ldr	r1, [sp, #12]
   328bc:	bl	33e44 <__assert_fail@plt+0x22ac0>
   328c0:	ldr	r2, [fp, #-12]
   328c4:	subs	r0, r0, r2
   328c8:	sbcs	r1, r1, #0
   328cc:	str	r0, [sp, #8]
   328d0:	str	r1, [sp, #4]
   328d4:	bcs	328f0 <__assert_fail@plt+0x2156c>
   328d8:	b	328dc <__assert_fail@plt+0x21558>
   328dc:	ldr	r0, [fp, #-12]
   328e0:	ldr	r1, [fp, #-16]
   328e4:	mul	r0, r0, r1
   328e8:	str	r0, [fp, #-20]	; 0xffffffec
   328ec:	b	32904 <__assert_fail@plt+0x21580>
   328f0:	ldr	r0, [fp, #-12]
   328f4:	ldr	r1, [fp, #-16]
   328f8:	mul	r0, r0, r1
   328fc:	str	r0, [fp, #-20]	; 0xffffffec
   32900:	b	3291c <__assert_fail@plt+0x21598>
   32904:	bl	11294 <__errno_location@plt>
   32908:	movw	lr, #12
   3290c:	str	lr, [r0]
   32910:	movw	r0, #0
   32914:	str	r0, [fp, #-4]
   32918:	b	3292c <__assert_fail@plt+0x215a8>
   3291c:	ldr	r0, [fp, #-8]
   32920:	ldr	r1, [fp, #-20]	; 0xffffffec
   32924:	bl	2f6fc <__assert_fail@plt+0x1e378>
   32928:	str	r0, [fp, #-4]
   3292c:	ldr	r0, [fp, #-4]
   32930:	mov	sp, fp
   32934:	pop	{fp, pc}
   32938:	svcvc	0x00ffffff
   3293c:	andhi	r0, r0, r0
   32940:			; <UNDEFINED> instruction: 0xffff8000
   32944:	push	{r4, r5, fp, lr}
   32948:	add	fp, sp, #8
   3294c:	sub	sp, sp, #120	; 0x78
   32950:	sub	sp, sp, #4096	; 0x1000
   32954:	ldr	ip, [fp, #8]
   32958:	str	r0, [fp, #-16]
   3295c:	str	r1, [fp, #-20]	; 0xffffffec
   32960:	str	r2, [fp, #-24]	; 0xffffffe8
   32964:	str	r3, [fp, #-28]	; 0xffffffe4
   32968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3296c:	movw	r1, #0
   32970:	str	r1, [sp, #28]
   32974:	ldr	r2, [sp, #28]
   32978:	ldr	r3, [sp, #28]
   3297c:	ldr	lr, [sp, #28]
   32980:	str	lr, [sp]
   32984:	str	ip, [sp, #24]
   32988:	bl	110cc <iconv@plt>
   3298c:	movw	r1, #0
   32990:	str	r1, [fp, #-40]	; 0xffffffd8
   32994:	ldr	r1, [fp, #-16]
   32998:	str	r1, [sp, #84]	; 0x54
   3299c:	ldr	r1, [fp, #-20]	; 0xffffffec
   329a0:	str	r1, [sp, #80]	; 0x50
   329a4:	str	r0, [sp, #20]
   329a8:	ldr	r0, [sp, #80]	; 0x50
   329ac:	cmp	r0, #0
   329b0:	bls	32a44 <__assert_fail@plt+0x216c0>
   329b4:	add	r0, sp, #88	; 0x58
   329b8:	str	r0, [sp, #76]	; 0x4c
   329bc:	movw	r0, #4096	; 0x1000
   329c0:	str	r0, [sp, #72]	; 0x48
   329c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329c8:	add	r1, sp, #84	; 0x54
   329cc:	add	r2, sp, #80	; 0x50
   329d0:	add	r3, sp, #76	; 0x4c
   329d4:	add	ip, sp, #72	; 0x48
   329d8:	str	ip, [sp]
   329dc:	bl	110cc <iconv@plt>
   329e0:	str	r0, [sp, #68]	; 0x44
   329e4:	ldr	r0, [sp, #68]	; 0x44
   329e8:	cmn	r0, #1
   329ec:	bne	32a28 <__assert_fail@plt+0x216a4>
   329f0:	bl	11294 <__errno_location@plt>
   329f4:	ldr	r0, [r0]
   329f8:	cmp	r0, #7
   329fc:	bne	32a04 <__assert_fail@plt+0x21680>
   32a00:	b	32a24 <__assert_fail@plt+0x216a0>
   32a04:	bl	11294 <__errno_location@plt>
   32a08:	ldr	r0, [r0]
   32a0c:	cmp	r0, #22
   32a10:	bne	32a18 <__assert_fail@plt+0x21694>
   32a14:	b	32a44 <__assert_fail@plt+0x216c0>
   32a18:	mvn	r0, #0
   32a1c:	str	r0, [fp, #-12]
   32a20:	b	32c64 <__assert_fail@plt+0x218e0>
   32a24:	b	32a28 <__assert_fail@plt+0x216a4>
   32a28:	ldr	r0, [sp, #76]	; 0x4c
   32a2c:	add	r1, sp, #88	; 0x58
   32a30:	sub	r0, r0, r1
   32a34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32a38:	add	r0, r1, r0
   32a3c:	str	r0, [fp, #-40]	; 0xffffffd8
   32a40:	b	329a8 <__assert_fail@plt+0x21624>
   32a44:	add	r0, sp, #88	; 0x58
   32a48:	str	r0, [sp, #64]	; 0x40
   32a4c:	movw	r0, #4096	; 0x1000
   32a50:	str	r0, [sp, #60]	; 0x3c
   32a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a58:	movw	r1, #0
   32a5c:	str	r1, [sp, #16]
   32a60:	ldr	r2, [sp, #16]
   32a64:	add	r3, sp, #64	; 0x40
   32a68:	add	ip, sp, #60	; 0x3c
   32a6c:	str	ip, [sp]
   32a70:	bl	110cc <iconv@plt>
   32a74:	str	r0, [sp, #56]	; 0x38
   32a78:	ldr	r0, [sp, #56]	; 0x38
   32a7c:	cmn	r0, #1
   32a80:	bne	32a90 <__assert_fail@plt+0x2170c>
   32a84:	mvn	r0, #0
   32a88:	str	r0, [fp, #-12]
   32a8c:	b	32c64 <__assert_fail@plt+0x218e0>
   32a90:	ldr	r0, [sp, #64]	; 0x40
   32a94:	add	r1, sp, #88	; 0x58
   32a98:	sub	r0, r0, r1
   32a9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32aa0:	add	r0, r1, r0
   32aa4:	str	r0, [fp, #-40]	; 0xffffffd8
   32aa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32aac:	str	r0, [fp, #-32]	; 0xffffffe0
   32ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32ab4:	cmp	r0, #0
   32ab8:	bne	32ad0 <__assert_fail@plt+0x2174c>
   32abc:	ldr	r0, [fp, #8]
   32ac0:	movw	r1, #0
   32ac4:	str	r1, [r0]
   32ac8:	str	r1, [fp, #-12]
   32acc:	b	32c64 <__assert_fail@plt+0x218e0>
   32ad0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32ad4:	ldr	r0, [r0]
   32ad8:	movw	r1, #0
   32adc:	cmp	r0, r1
   32ae0:	beq	32b08 <__assert_fail@plt+0x21784>
   32ae4:	ldr	r0, [fp, #8]
   32ae8:	ldr	r0, [r0]
   32aec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32af0:	cmp	r0, r1
   32af4:	bcc	32b08 <__assert_fail@plt+0x21784>
   32af8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32afc:	ldr	r0, [r0]
   32b00:	str	r0, [fp, #-36]	; 0xffffffdc
   32b04:	b	32b40 <__assert_fail@plt+0x217bc>
   32b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32b0c:	bl	2f68c <__assert_fail@plt+0x1e308>
   32b10:	str	r0, [fp, #-36]	; 0xffffffdc
   32b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32b18:	movw	lr, #0
   32b1c:	cmp	r0, lr
   32b20:	bne	32b3c <__assert_fail@plt+0x217b8>
   32b24:	bl	11294 <__errno_location@plt>
   32b28:	movw	lr, #12
   32b2c:	str	lr, [r0]
   32b30:	mvn	r0, #0
   32b34:	str	r0, [fp, #-12]
   32b38:	b	32c64 <__assert_fail@plt+0x218e0>
   32b3c:	b	32b40 <__assert_fail@plt+0x217bc>
   32b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b44:	movw	r1, #0
   32b48:	str	r1, [sp, #12]
   32b4c:	ldr	r2, [sp, #12]
   32b50:	ldr	r3, [sp, #12]
   32b54:	ldr	ip, [sp, #12]
   32b58:	str	ip, [sp]
   32b5c:	bl	110cc <iconv@plt>
   32b60:	ldr	r1, [fp, #-16]
   32b64:	str	r1, [sp, #52]	; 0x34
   32b68:	ldr	r1, [fp, #-20]	; 0xffffffec
   32b6c:	str	r1, [sp, #48]	; 0x30
   32b70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32b74:	str	r1, [sp, #44]	; 0x2c
   32b78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32b7c:	str	r1, [sp, #40]	; 0x28
   32b80:	str	r0, [sp, #8]
   32b84:	ldr	r0, [sp, #48]	; 0x30
   32b88:	cmp	r0, #0
   32b8c:	bls	32bd8 <__assert_fail@plt+0x21854>
   32b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b94:	add	r1, sp, #52	; 0x34
   32b98:	add	r2, sp, #48	; 0x30
   32b9c:	add	r3, sp, #44	; 0x2c
   32ba0:	add	ip, sp, #40	; 0x28
   32ba4:	str	ip, [sp]
   32ba8:	bl	110cc <iconv@plt>
   32bac:	str	r0, [sp, #36]	; 0x24
   32bb0:	ldr	r0, [sp, #36]	; 0x24
   32bb4:	cmn	r0, #1
   32bb8:	bne	32bd4 <__assert_fail@plt+0x21850>
   32bbc:	bl	11294 <__errno_location@plt>
   32bc0:	ldr	r0, [r0]
   32bc4:	cmp	r0, #22
   32bc8:	bne	32bd0 <__assert_fail@plt+0x2184c>
   32bcc:	b	32bd8 <__assert_fail@plt+0x21854>
   32bd0:	b	32c40 <__assert_fail@plt+0x218bc>
   32bd4:	b	32b84 <__assert_fail@plt+0x21800>
   32bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32bdc:	movw	r1, #0
   32be0:	str	r1, [sp, #4]
   32be4:	ldr	r2, [sp, #4]
   32be8:	add	r3, sp, #44	; 0x2c
   32bec:	add	ip, sp, #40	; 0x28
   32bf0:	str	ip, [sp]
   32bf4:	bl	110cc <iconv@plt>
   32bf8:	str	r0, [sp, #32]
   32bfc:	ldr	r0, [sp, #32]
   32c00:	cmn	r0, #1
   32c04:	bne	32c0c <__assert_fail@plt+0x21888>
   32c08:	b	32c40 <__assert_fail@plt+0x218bc>
   32c0c:	ldr	r0, [sp, #40]	; 0x28
   32c10:	cmp	r0, #0
   32c14:	beq	32c1c <__assert_fail@plt+0x21898>
   32c18:	bl	1136c <abort@plt>
   32c1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32c20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32c24:	str	r0, [r1]
   32c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c2c:	ldr	r1, [fp, #8]
   32c30:	str	r0, [r1]
   32c34:	movw	r0, #0
   32c38:	str	r0, [fp, #-12]
   32c3c:	b	32c64 <__assert_fail@plt+0x218e0>
   32c40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32c44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32c48:	ldr	r1, [r1]
   32c4c:	cmp	r0, r1
   32c50:	beq	32c5c <__assert_fail@plt+0x218d8>
   32c54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32c58:	bl	1af30 <__assert_fail@plt+0x9bac>
   32c5c:	mvn	r0, #0
   32c60:	str	r0, [fp, #-12]
   32c64:	ldr	r0, [fp, #-12]
   32c68:	sub	sp, fp, #8
   32c6c:	pop	{r4, r5, fp, pc}
   32c70:	push	{fp, lr}
   32c74:	mov	fp, sp
   32c78:	sub	sp, sp, #96	; 0x60
   32c7c:	str	r0, [fp, #-8]
   32c80:	str	r1, [fp, #-12]
   32c84:	ldr	r0, [fp, #-8]
   32c88:	str	r0, [fp, #-28]	; 0xffffffe4
   32c8c:	ldr	r0, [fp, #-8]
   32c90:	bl	11270 <strlen@plt>
   32c94:	str	r0, [fp, #-32]	; 0xffffffe0
   32c98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32c9c:	str	r0, [fp, #-20]	; 0xffffffec
   32ca0:	movw	r0, #65535	; 0xffff
   32ca4:	str	r0, [fp, #-36]	; 0xffffffdc
   32ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   32cac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32cb0:	lsr	r1, r1, #4
   32cb4:	cmp	r0, r1
   32cb8:	bhi	32cc8 <__assert_fail@plt+0x21944>
   32cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   32cc0:	lsl	r0, r0, #4
   32cc4:	str	r0, [fp, #-20]	; 0xffffffec
   32cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   32ccc:	add	r0, r0, #1
   32cd0:	str	r0, [fp, #-20]	; 0xffffffec
   32cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   32cd8:	bl	2f68c <__assert_fail@plt+0x1e308>
   32cdc:	str	r0, [fp, #-16]
   32ce0:	ldr	r0, [fp, #-16]
   32ce4:	movw	lr, #0
   32ce8:	cmp	r0, lr
   32cec:	bne	32d08 <__assert_fail@plt+0x21984>
   32cf0:	bl	11294 <__errno_location@plt>
   32cf4:	movw	lr, #12
   32cf8:	str	lr, [r0]
   32cfc:	movw	r0, #0
   32d00:	str	r0, [fp, #-4]
   32d04:	b	32fbc <__assert_fail@plt+0x21c38>
   32d08:	ldr	r0, [fp, #-12]
   32d0c:	movw	r1, #0
   32d10:	str	r1, [sp, #12]
   32d14:	ldr	r2, [sp, #12]
   32d18:	ldr	r3, [sp, #12]
   32d1c:	ldr	ip, [sp, #12]
   32d20:	str	ip, [sp]
   32d24:	bl	110cc <iconv@plt>
   32d28:	ldr	r1, [fp, #-16]
   32d2c:	str	r1, [fp, #-40]	; 0xffffffd8
   32d30:	ldr	r1, [fp, #-20]	; 0xffffffec
   32d34:	sub	r1, r1, #1
   32d38:	str	r1, [fp, #-44]	; 0xffffffd4
   32d3c:	str	r0, [sp, #8]
   32d40:	ldr	r0, [fp, #-12]
   32d44:	sub	r1, fp, #28
   32d48:	sub	r2, fp, #32
   32d4c:	sub	r3, fp, #40	; 0x28
   32d50:	sub	ip, fp, #44	; 0x2c
   32d54:	str	ip, [sp]
   32d58:	bl	110cc <iconv@plt>
   32d5c:	str	r0, [sp, #48]	; 0x30
   32d60:	ldr	r0, [sp, #48]	; 0x30
   32d64:	cmn	r0, #1
   32d68:	bne	32e40 <__assert_fail@plt+0x21abc>
   32d6c:	bl	11294 <__errno_location@plt>
   32d70:	ldr	r0, [r0]
   32d74:	cmp	r0, #22
   32d78:	bne	32d80 <__assert_fail@plt+0x219fc>
   32d7c:	b	32e48 <__assert_fail@plt+0x21ac4>
   32d80:	bl	11294 <__errno_location@plt>
   32d84:	ldr	r0, [r0]
   32d88:	cmp	r0, #7
   32d8c:	bne	32e34 <__assert_fail@plt+0x21ab0>
   32d90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32d94:	ldr	r1, [fp, #-16]
   32d98:	sub	r0, r0, r1
   32d9c:	str	r0, [sp, #44]	; 0x2c
   32da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   32da4:	lsl	r0, r0, #1
   32da8:	str	r0, [sp, #40]	; 0x28
   32dac:	ldr	r0, [sp, #40]	; 0x28
   32db0:	ldr	r1, [fp, #-20]	; 0xffffffec
   32db4:	cmp	r0, r1
   32db8:	bhi	32dcc <__assert_fail@plt+0x21a48>
   32dbc:	bl	11294 <__errno_location@plt>
   32dc0:	movw	lr, #12
   32dc4:	str	lr, [r0]
   32dc8:	b	32fac <__assert_fail@plt+0x21c28>
   32dcc:	ldr	r0, [fp, #-16]
   32dd0:	ldr	r1, [sp, #40]	; 0x28
   32dd4:	bl	2f6fc <__assert_fail@plt+0x1e378>
   32dd8:	str	r0, [sp, #36]	; 0x24
   32ddc:	ldr	r0, [sp, #36]	; 0x24
   32de0:	movw	r1, #0
   32de4:	cmp	r0, r1
   32de8:	bne	32dfc <__assert_fail@plt+0x21a78>
   32dec:	bl	11294 <__errno_location@plt>
   32df0:	movw	lr, #12
   32df4:	str	lr, [r0]
   32df8:	b	32fac <__assert_fail@plt+0x21c28>
   32dfc:	ldr	r0, [sp, #36]	; 0x24
   32e00:	str	r0, [fp, #-16]
   32e04:	ldr	r0, [sp, #40]	; 0x28
   32e08:	str	r0, [fp, #-20]	; 0xffffffec
   32e0c:	ldr	r0, [fp, #-16]
   32e10:	ldr	r1, [sp, #44]	; 0x2c
   32e14:	add	r0, r0, r1
   32e18:	str	r0, [fp, #-40]	; 0xffffffd8
   32e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32e20:	sub	r0, r0, #1
   32e24:	ldr	r1, [sp, #44]	; 0x2c
   32e28:	sub	r0, r0, r1
   32e2c:	str	r0, [fp, #-44]	; 0xffffffd4
   32e30:	b	32e38 <__assert_fail@plt+0x21ab4>
   32e34:	b	32fac <__assert_fail@plt+0x21c28>
   32e38:	b	32e3c <__assert_fail@plt+0x21ab8>
   32e3c:	b	32e44 <__assert_fail@plt+0x21ac0>
   32e40:	b	32e48 <__assert_fail@plt+0x21ac4>
   32e44:	b	32d40 <__assert_fail@plt+0x219bc>
   32e48:	b	32e4c <__assert_fail@plt+0x21ac8>
   32e4c:	ldr	r0, [fp, #-12]
   32e50:	movw	r1, #0
   32e54:	str	r1, [sp, #4]
   32e58:	ldr	r2, [sp, #4]
   32e5c:	sub	r3, fp, #40	; 0x28
   32e60:	sub	ip, fp, #44	; 0x2c
   32e64:	str	ip, [sp]
   32e68:	bl	110cc <iconv@plt>
   32e6c:	str	r0, [sp, #32]
   32e70:	ldr	r0, [sp, #32]
   32e74:	cmn	r0, #1
   32e78:	bne	32f38 <__assert_fail@plt+0x21bb4>
   32e7c:	bl	11294 <__errno_location@plt>
   32e80:	ldr	r0, [r0]
   32e84:	cmp	r0, #7
   32e88:	bne	32f30 <__assert_fail@plt+0x21bac>
   32e8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32e90:	ldr	r1, [fp, #-16]
   32e94:	sub	r0, r0, r1
   32e98:	str	r0, [sp, #28]
   32e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32ea0:	lsl	r0, r0, #1
   32ea4:	str	r0, [sp, #24]
   32ea8:	ldr	r0, [sp, #24]
   32eac:	ldr	r1, [fp, #-20]	; 0xffffffec
   32eb0:	cmp	r0, r1
   32eb4:	bhi	32ec8 <__assert_fail@plt+0x21b44>
   32eb8:	bl	11294 <__errno_location@plt>
   32ebc:	movw	lr, #12
   32ec0:	str	lr, [r0]
   32ec4:	b	32fac <__assert_fail@plt+0x21c28>
   32ec8:	ldr	r0, [fp, #-16]
   32ecc:	ldr	r1, [sp, #24]
   32ed0:	bl	2f6fc <__assert_fail@plt+0x1e378>
   32ed4:	str	r0, [sp, #20]
   32ed8:	ldr	r0, [sp, #20]
   32edc:	movw	r1, #0
   32ee0:	cmp	r0, r1
   32ee4:	bne	32ef8 <__assert_fail@plt+0x21b74>
   32ee8:	bl	11294 <__errno_location@plt>
   32eec:	movw	lr, #12
   32ef0:	str	lr, [r0]
   32ef4:	b	32fac <__assert_fail@plt+0x21c28>
   32ef8:	ldr	r0, [sp, #20]
   32efc:	str	r0, [fp, #-16]
   32f00:	ldr	r0, [sp, #24]
   32f04:	str	r0, [fp, #-20]	; 0xffffffec
   32f08:	ldr	r0, [fp, #-16]
   32f0c:	ldr	r1, [sp, #28]
   32f10:	add	r0, r0, r1
   32f14:	str	r0, [fp, #-40]	; 0xffffffd8
   32f18:	ldr	r0, [fp, #-20]	; 0xffffffec
   32f1c:	sub	r0, r0, #1
   32f20:	ldr	r1, [sp, #28]
   32f24:	sub	r0, r0, r1
   32f28:	str	r0, [fp, #-44]	; 0xffffffd4
   32f2c:	b	32f34 <__assert_fail@plt+0x21bb0>
   32f30:	b	32fac <__assert_fail@plt+0x21c28>
   32f34:	b	32f3c <__assert_fail@plt+0x21bb8>
   32f38:	b	32f40 <__assert_fail@plt+0x21bbc>
   32f3c:	b	32e4c <__assert_fail@plt+0x21ac8>
   32f40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32f44:	add	r1, r0, #1
   32f48:	str	r1, [fp, #-40]	; 0xffffffd8
   32f4c:	movw	r1, #0
   32f50:	strb	r1, [r0]
   32f54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32f58:	ldr	r1, [fp, #-16]
   32f5c:	sub	r0, r0, r1
   32f60:	str	r0, [fp, #-24]	; 0xffffffe8
   32f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f68:	ldr	r1, [fp, #-20]	; 0xffffffec
   32f6c:	cmp	r0, r1
   32f70:	bcs	32fa0 <__assert_fail@plt+0x21c1c>
   32f74:	ldr	r0, [fp, #-16]
   32f78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32f7c:	bl	2f6fc <__assert_fail@plt+0x1e378>
   32f80:	str	r0, [sp, #16]
   32f84:	ldr	r0, [sp, #16]
   32f88:	movw	r1, #0
   32f8c:	cmp	r0, r1
   32f90:	beq	32f9c <__assert_fail@plt+0x21c18>
   32f94:	ldr	r0, [sp, #16]
   32f98:	str	r0, [fp, #-16]
   32f9c:	b	32fa0 <__assert_fail@plt+0x21c1c>
   32fa0:	ldr	r0, [fp, #-16]
   32fa4:	str	r0, [fp, #-4]
   32fa8:	b	32fbc <__assert_fail@plt+0x21c38>
   32fac:	ldr	r0, [fp, #-16]
   32fb0:	bl	1af30 <__assert_fail@plt+0x9bac>
   32fb4:	movw	r0, #0
   32fb8:	str	r0, [fp, #-4]
   32fbc:	ldr	r0, [fp, #-4]
   32fc0:	mov	sp, fp
   32fc4:	pop	{fp, pc}
   32fc8:	push	{fp, lr}
   32fcc:	mov	fp, sp
   32fd0:	sub	sp, sp, #40	; 0x28
   32fd4:	str	r0, [fp, #-8]
   32fd8:	str	r1, [fp, #-12]
   32fdc:	str	r2, [fp, #-16]
   32fe0:	ldr	r0, [fp, #-8]
   32fe4:	ldrb	r0, [r0]
   32fe8:	cmp	r0, #0
   32fec:	beq	33004 <__assert_fail@plt+0x21c80>
   32ff0:	ldr	r0, [fp, #-12]
   32ff4:	ldr	r1, [fp, #-16]
   32ff8:	bl	2f7a0 <__assert_fail@plt+0x1e41c>
   32ffc:	cmp	r0, #0
   33000:	bne	33038 <__assert_fail@plt+0x21cb4>
   33004:	ldr	r0, [fp, #-8]
   33008:	bl	1115c <strdup@plt>
   3300c:	str	r0, [sp, #20]
   33010:	ldr	r0, [sp, #20]
   33014:	movw	lr, #0
   33018:	cmp	r0, lr
   3301c:	bne	3302c <__assert_fail@plt+0x21ca8>
   33020:	bl	11294 <__errno_location@plt>
   33024:	movw	lr, #12
   33028:	str	lr, [r0]
   3302c:	ldr	r0, [sp, #20]
   33030:	str	r0, [fp, #-4]
   33034:	b	330e4 <__assert_fail@plt+0x21d60>
   33038:	ldr	r0, [fp, #-16]
   3303c:	ldr	r1, [fp, #-12]
   33040:	bl	11204 <iconv_open@plt>
   33044:	str	r0, [sp, #16]
   33048:	ldr	r0, [sp, #16]
   3304c:	mvn	r1, #0
   33050:	cmp	r0, r1
   33054:	bne	33064 <__assert_fail@plt+0x21ce0>
   33058:	movw	r0, #0
   3305c:	str	r0, [fp, #-4]
   33060:	b	330e4 <__assert_fail@plt+0x21d60>
   33064:	ldr	r0, [fp, #-8]
   33068:	ldr	r1, [sp, #16]
   3306c:	bl	32c70 <__assert_fail@plt+0x218ec>
   33070:	str	r0, [sp, #12]
   33074:	ldr	r0, [sp, #12]
   33078:	movw	r1, #0
   3307c:	cmp	r0, r1
   33080:	bne	330b4 <__assert_fail@plt+0x21d30>
   33084:	bl	11294 <__errno_location@plt>
   33088:	ldr	r0, [r0]
   3308c:	str	r0, [sp, #8]
   33090:	ldr	r0, [sp, #16]
   33094:	bl	110c0 <iconv_close@plt>
   33098:	ldr	lr, [sp, #8]
   3309c:	str	r0, [sp, #4]
   330a0:	str	lr, [sp]
   330a4:	bl	11294 <__errno_location@plt>
   330a8:	ldr	lr, [sp]
   330ac:	str	lr, [r0]
   330b0:	b	330dc <__assert_fail@plt+0x21d58>
   330b4:	ldr	r0, [sp, #16]
   330b8:	bl	110c0 <iconv_close@plt>
   330bc:	cmp	r0, #0
   330c0:	bge	330d8 <__assert_fail@plt+0x21d54>
   330c4:	ldr	r0, [sp, #12]
   330c8:	bl	1af30 <__assert_fail@plt+0x9bac>
   330cc:	movw	r0, #0
   330d0:	str	r0, [fp, #-4]
   330d4:	b	330e4 <__assert_fail@plt+0x21d60>
   330d8:	b	330dc <__assert_fail@plt+0x21d58>
   330dc:	ldr	r0, [sp, #12]
   330e0:	str	r0, [fp, #-4]
   330e4:	ldr	r0, [fp, #-4]
   330e8:	mov	sp, fp
   330ec:	pop	{fp, pc}
   330f0:	push	{fp, lr}
   330f4:	mov	fp, sp
   330f8:	sub	sp, sp, #16
   330fc:	str	r0, [sp, #8]
   33100:	str	r1, [sp, #4]
   33104:	ldr	r0, [sp, #8]
   33108:	ldr	r2, [sp, #4]
   3310c:	mov	r1, #0
   33110:	bl	112dc <memchr@plt>
   33114:	str	r0, [sp]
   33118:	ldr	r0, [sp]
   3311c:	movw	r1, #0
   33120:	cmp	r0, r1
   33124:	beq	33140 <__assert_fail@plt+0x21dbc>
   33128:	ldr	r0, [sp]
   3312c:	ldr	r1, [sp, #8]
   33130:	sub	r0, r0, r1
   33134:	add	r0, r0, #1
   33138:	str	r0, [fp, #-4]
   3313c:	b	33148 <__assert_fail@plt+0x21dc4>
   33140:	ldr	r0, [sp, #4]
   33144:	str	r0, [fp, #-4]
   33148:	ldr	r0, [fp, #-4]
   3314c:	mov	sp, fp
   33150:	pop	{fp, pc}
   33154:	sub	sp, sp, #12
   33158:	str	r0, [sp, #4]
   3315c:	ldr	r0, [sp, #4]
   33160:	sub	r1, r0, #48	; 0x30
   33164:	cmp	r1, #10
   33168:	str	r0, [sp]
   3316c:	bcc	3319c <__assert_fail@plt+0x21e18>
   33170:	b	33174 <__assert_fail@plt+0x21df0>
   33174:	ldr	r0, [sp]
   33178:	sub	r1, r0, #65	; 0x41
   3317c:	cmp	r1, #26
   33180:	bcc	3319c <__assert_fail@plt+0x21e18>
   33184:	b	33188 <__assert_fail@plt+0x21e04>
   33188:	ldr	r0, [sp]
   3318c:	sub	r1, r0, #97	; 0x61
   33190:	cmp	r1, #25
   33194:	bhi	331ac <__assert_fail@plt+0x21e28>
   33198:	b	3319c <__assert_fail@plt+0x21e18>
   3319c:	movw	r0, #1
   331a0:	and	r0, r0, #1
   331a4:	strb	r0, [sp, #11]
   331a8:	b	331b8 <__assert_fail@plt+0x21e34>
   331ac:	movw	r0, #0
   331b0:	and	r0, r0, #1
   331b4:	strb	r0, [sp, #11]
   331b8:	ldrb	r0, [sp, #11]
   331bc:	and	r0, r0, #1
   331c0:	add	sp, sp, #12
   331c4:	bx	lr
   331c8:	sub	sp, sp, #12
   331cc:	str	r0, [sp, #4]
   331d0:	ldr	r0, [sp, #4]
   331d4:	sub	r1, r0, #65	; 0x41
   331d8:	cmp	r1, #26
   331dc:	str	r0, [sp]
   331e0:	bcc	331fc <__assert_fail@plt+0x21e78>
   331e4:	b	331e8 <__assert_fail@plt+0x21e64>
   331e8:	ldr	r0, [sp]
   331ec:	sub	r1, r0, #97	; 0x61
   331f0:	cmp	r1, #25
   331f4:	bhi	3320c <__assert_fail@plt+0x21e88>
   331f8:	b	331fc <__assert_fail@plt+0x21e78>
   331fc:	movw	r0, #1
   33200:	and	r0, r0, #1
   33204:	strb	r0, [sp, #11]
   33208:	b	33218 <__assert_fail@plt+0x21e94>
   3320c:	movw	r0, #0
   33210:	and	r0, r0, #1
   33214:	strb	r0, [sp, #11]
   33218:	ldrb	r0, [sp, #11]
   3321c:	and	r0, r0, #1
   33220:	add	sp, sp, #12
   33224:	bx	lr
   33228:	sub	sp, sp, #8
   3322c:	str	r0, [sp]
   33230:	ldr	r0, [sp]
   33234:	cmp	r0, #127	; 0x7f
   33238:	bhi	33250 <__assert_fail@plt+0x21ecc>
   3323c:	b	33240 <__assert_fail@plt+0x21ebc>
   33240:	movw	r0, #1
   33244:	and	r0, r0, #1
   33248:	strb	r0, [sp, #7]
   3324c:	b	3325c <__assert_fail@plt+0x21ed8>
   33250:	movw	r0, #0
   33254:	and	r0, r0, #1
   33258:	strb	r0, [sp, #7]
   3325c:	ldrb	r0, [sp, #7]
   33260:	and	r0, r0, #1
   33264:	add	sp, sp, #8
   33268:	bx	lr
   3326c:	sub	sp, sp, #8
   33270:	str	r0, [sp, #4]
   33274:	ldr	r0, [sp, #4]
   33278:	cmp	r0, #32
   3327c:	movw	r0, #1
   33280:	str	r0, [sp]
   33284:	beq	3329c <__assert_fail@plt+0x21f18>
   33288:	ldr	r0, [sp, #4]
   3328c:	cmp	r0, #9
   33290:	movw	r0, #0
   33294:	moveq	r0, #1
   33298:	str	r0, [sp]
   3329c:	ldr	r0, [sp]
   332a0:	and	r0, r0, #1
   332a4:	add	sp, sp, #8
   332a8:	bx	lr
   332ac:	sub	sp, sp, #12
   332b0:	str	r0, [sp, #4]
   332b4:	ldr	r0, [sp, #4]
   332b8:	cmp	r0, #32
   332bc:	str	r0, [sp]
   332c0:	bcc	332d8 <__assert_fail@plt+0x21f54>
   332c4:	b	332c8 <__assert_fail@plt+0x21f44>
   332c8:	ldr	r0, [sp]
   332cc:	cmp	r0, #127	; 0x7f
   332d0:	bne	332e8 <__assert_fail@plt+0x21f64>
   332d4:	b	332d8 <__assert_fail@plt+0x21f54>
   332d8:	movw	r0, #1
   332dc:	and	r0, r0, #1
   332e0:	strb	r0, [sp, #11]
   332e4:	b	332f4 <__assert_fail@plt+0x21f70>
   332e8:	movw	r0, #0
   332ec:	and	r0, r0, #1
   332f0:	strb	r0, [sp, #11]
   332f4:	ldrb	r0, [sp, #11]
   332f8:	and	r0, r0, #1
   332fc:	add	sp, sp, #12
   33300:	bx	lr
   33304:	sub	sp, sp, #8
   33308:	str	r0, [sp]
   3330c:	ldr	r0, [sp]
   33310:	sub	r0, r0, #48	; 0x30
   33314:	cmp	r0, #9
   33318:	bhi	33330 <__assert_fail@plt+0x21fac>
   3331c:	b	33320 <__assert_fail@plt+0x21f9c>
   33320:	movw	r0, #1
   33324:	and	r0, r0, #1
   33328:	strb	r0, [sp, #7]
   3332c:	b	3333c <__assert_fail@plt+0x21fb8>
   33330:	movw	r0, #0
   33334:	and	r0, r0, #1
   33338:	strb	r0, [sp, #7]
   3333c:	ldrb	r0, [sp, #7]
   33340:	and	r0, r0, #1
   33344:	add	sp, sp, #8
   33348:	bx	lr
   3334c:	sub	sp, sp, #8
   33350:	str	r0, [sp]
   33354:	ldr	r0, [sp]
   33358:	sub	r0, r0, #33	; 0x21
   3335c:	cmp	r0, #93	; 0x5d
   33360:	bhi	33378 <__assert_fail@plt+0x21ff4>
   33364:	b	33368 <__assert_fail@plt+0x21fe4>
   33368:	movw	r0, #1
   3336c:	and	r0, r0, #1
   33370:	strb	r0, [sp, #7]
   33374:	b	33384 <__assert_fail@plt+0x22000>
   33378:	movw	r0, #0
   3337c:	and	r0, r0, #1
   33380:	strb	r0, [sp, #7]
   33384:	ldrb	r0, [sp, #7]
   33388:	and	r0, r0, #1
   3338c:	add	sp, sp, #8
   33390:	bx	lr
   33394:	sub	sp, sp, #8
   33398:	str	r0, [sp]
   3339c:	ldr	r0, [sp]
   333a0:	sub	r0, r0, #97	; 0x61
   333a4:	cmp	r0, #25
   333a8:	bhi	333c0 <__assert_fail@plt+0x2203c>
   333ac:	b	333b0 <__assert_fail@plt+0x2202c>
   333b0:	movw	r0, #1
   333b4:	and	r0, r0, #1
   333b8:	strb	r0, [sp, #7]
   333bc:	b	333cc <__assert_fail@plt+0x22048>
   333c0:	movw	r0, #0
   333c4:	and	r0, r0, #1
   333c8:	strb	r0, [sp, #7]
   333cc:	ldrb	r0, [sp, #7]
   333d0:	and	r0, r0, #1
   333d4:	add	sp, sp, #8
   333d8:	bx	lr
   333dc:	sub	sp, sp, #8
   333e0:	str	r0, [sp]
   333e4:	ldr	r0, [sp]
   333e8:	sub	r0, r0, #32
   333ec:	cmp	r0, #94	; 0x5e
   333f0:	bhi	33408 <__assert_fail@plt+0x22084>
   333f4:	b	333f8 <__assert_fail@plt+0x22074>
   333f8:	movw	r0, #1
   333fc:	and	r0, r0, #1
   33400:	strb	r0, [sp, #7]
   33404:	b	33414 <__assert_fail@plt+0x22090>
   33408:	movw	r0, #0
   3340c:	and	r0, r0, #1
   33410:	strb	r0, [sp, #7]
   33414:	ldrb	r0, [sp, #7]
   33418:	and	r0, r0, #1
   3341c:	add	sp, sp, #8
   33420:	bx	lr
   33424:	sub	sp, sp, #12
   33428:	str	r0, [sp, #4]
   3342c:	ldr	r0, [sp, #4]
   33430:	sub	r0, r0, #33	; 0x21
   33434:	cmp	r0, #93	; 0x5d
   33438:	str	r0, [sp]
   3343c:	bhi	335d8 <__assert_fail@plt+0x22254>
   33440:	add	r0, pc, #8
   33444:	ldr	r1, [sp]
   33448:	ldr	r0, [r0, r1, lsl #2]
   3344c:	mov	pc, r0
   33450:	andeq	r3, r3, r8, asr #11
   33454:	andeq	r3, r3, r8, asr #11
   33458:	andeq	r3, r3, r8, asr #11
   3345c:	andeq	r3, r3, r8, asr #11
   33460:	andeq	r3, r3, r8, asr #11
   33464:	andeq	r3, r3, r8, asr #11
   33468:	andeq	r3, r3, r8, asr #11
   3346c:	andeq	r3, r3, r8, asr #11
   33470:	andeq	r3, r3, r8, asr #11
   33474:	andeq	r3, r3, r8, asr #11
   33478:	andeq	r3, r3, r8, asr #11
   3347c:	andeq	r3, r3, r8, asr #11
   33480:	andeq	r3, r3, r8, asr #11
   33484:	andeq	r3, r3, r8, asr #11
   33488:	andeq	r3, r3, r8, asr #11
   3348c:	ldrdeq	r3, [r3], -r8
   33490:	ldrdeq	r3, [r3], -r8
   33494:	ldrdeq	r3, [r3], -r8
   33498:	ldrdeq	r3, [r3], -r8
   3349c:	ldrdeq	r3, [r3], -r8
   334a0:	ldrdeq	r3, [r3], -r8
   334a4:	ldrdeq	r3, [r3], -r8
   334a8:	ldrdeq	r3, [r3], -r8
   334ac:	ldrdeq	r3, [r3], -r8
   334b0:	ldrdeq	r3, [r3], -r8
   334b4:	andeq	r3, r3, r8, asr #11
   334b8:	andeq	r3, r3, r8, asr #11
   334bc:	andeq	r3, r3, r8, asr #11
   334c0:	andeq	r3, r3, r8, asr #11
   334c4:	andeq	r3, r3, r8, asr #11
   334c8:	andeq	r3, r3, r8, asr #11
   334cc:	andeq	r3, r3, r8, asr #11
   334d0:	ldrdeq	r3, [r3], -r8
   334d4:	ldrdeq	r3, [r3], -r8
   334d8:	ldrdeq	r3, [r3], -r8
   334dc:	ldrdeq	r3, [r3], -r8
   334e0:	ldrdeq	r3, [r3], -r8
   334e4:	ldrdeq	r3, [r3], -r8
   334e8:	ldrdeq	r3, [r3], -r8
   334ec:	ldrdeq	r3, [r3], -r8
   334f0:	ldrdeq	r3, [r3], -r8
   334f4:	ldrdeq	r3, [r3], -r8
   334f8:	ldrdeq	r3, [r3], -r8
   334fc:	ldrdeq	r3, [r3], -r8
   33500:	ldrdeq	r3, [r3], -r8
   33504:	ldrdeq	r3, [r3], -r8
   33508:	ldrdeq	r3, [r3], -r8
   3350c:	ldrdeq	r3, [r3], -r8
   33510:	ldrdeq	r3, [r3], -r8
   33514:	ldrdeq	r3, [r3], -r8
   33518:	ldrdeq	r3, [r3], -r8
   3351c:	ldrdeq	r3, [r3], -r8
   33520:	ldrdeq	r3, [r3], -r8
   33524:	ldrdeq	r3, [r3], -r8
   33528:	ldrdeq	r3, [r3], -r8
   3352c:	ldrdeq	r3, [r3], -r8
   33530:	ldrdeq	r3, [r3], -r8
   33534:	ldrdeq	r3, [r3], -r8
   33538:	andeq	r3, r3, r8, asr #11
   3353c:	andeq	r3, r3, r8, asr #11
   33540:	andeq	r3, r3, r8, asr #11
   33544:	andeq	r3, r3, r8, asr #11
   33548:	andeq	r3, r3, r8, asr #11
   3354c:	andeq	r3, r3, r8, asr #11
   33550:	ldrdeq	r3, [r3], -r8
   33554:	ldrdeq	r3, [r3], -r8
   33558:	ldrdeq	r3, [r3], -r8
   3355c:	ldrdeq	r3, [r3], -r8
   33560:	ldrdeq	r3, [r3], -r8
   33564:	ldrdeq	r3, [r3], -r8
   33568:	ldrdeq	r3, [r3], -r8
   3356c:	ldrdeq	r3, [r3], -r8
   33570:	ldrdeq	r3, [r3], -r8
   33574:	ldrdeq	r3, [r3], -r8
   33578:	ldrdeq	r3, [r3], -r8
   3357c:	ldrdeq	r3, [r3], -r8
   33580:	ldrdeq	r3, [r3], -r8
   33584:	ldrdeq	r3, [r3], -r8
   33588:	ldrdeq	r3, [r3], -r8
   3358c:	ldrdeq	r3, [r3], -r8
   33590:	ldrdeq	r3, [r3], -r8
   33594:	ldrdeq	r3, [r3], -r8
   33598:	ldrdeq	r3, [r3], -r8
   3359c:	ldrdeq	r3, [r3], -r8
   335a0:	ldrdeq	r3, [r3], -r8
   335a4:	ldrdeq	r3, [r3], -r8
   335a8:	ldrdeq	r3, [r3], -r8
   335ac:	ldrdeq	r3, [r3], -r8
   335b0:	ldrdeq	r3, [r3], -r8
   335b4:	ldrdeq	r3, [r3], -r8
   335b8:	andeq	r3, r3, r8, asr #11
   335bc:	andeq	r3, r3, r8, asr #11
   335c0:	andeq	r3, r3, r8, asr #11
   335c4:	andeq	r3, r3, r8, asr #11
   335c8:	movw	r0, #1
   335cc:	and	r0, r0, #1
   335d0:	strb	r0, [sp, #11]
   335d4:	b	335e4 <__assert_fail@plt+0x22260>
   335d8:	movw	r0, #0
   335dc:	and	r0, r0, #1
   335e0:	strb	r0, [sp, #11]
   335e4:	ldrb	r0, [sp, #11]
   335e8:	and	r0, r0, #1
   335ec:	add	sp, sp, #12
   335f0:	bx	lr
   335f4:	sub	sp, sp, #12
   335f8:	str	r0, [sp, #4]
   335fc:	ldr	r0, [sp, #4]
   33600:	sub	r1, r0, #9
   33604:	cmp	r1, #5
   33608:	str	r0, [sp]
   3360c:	bcc	33624 <__assert_fail@plt+0x222a0>
   33610:	b	33614 <__assert_fail@plt+0x22290>
   33614:	ldr	r0, [sp]
   33618:	cmp	r0, #32
   3361c:	bne	33634 <__assert_fail@plt+0x222b0>
   33620:	b	33624 <__assert_fail@plt+0x222a0>
   33624:	movw	r0, #1
   33628:	and	r0, r0, #1
   3362c:	strb	r0, [sp, #11]
   33630:	b	33640 <__assert_fail@plt+0x222bc>
   33634:	movw	r0, #0
   33638:	and	r0, r0, #1
   3363c:	strb	r0, [sp, #11]
   33640:	ldrb	r0, [sp, #11]
   33644:	and	r0, r0, #1
   33648:	add	sp, sp, #12
   3364c:	bx	lr
   33650:	sub	sp, sp, #8
   33654:	str	r0, [sp]
   33658:	ldr	r0, [sp]
   3365c:	sub	r0, r0, #65	; 0x41
   33660:	cmp	r0, #25
   33664:	bhi	3367c <__assert_fail@plt+0x222f8>
   33668:	b	3366c <__assert_fail@plt+0x222e8>
   3366c:	movw	r0, #1
   33670:	and	r0, r0, #1
   33674:	strb	r0, [sp, #7]
   33678:	b	33688 <__assert_fail@plt+0x22304>
   3367c:	movw	r0, #0
   33680:	and	r0, r0, #1
   33684:	strb	r0, [sp, #7]
   33688:	ldrb	r0, [sp, #7]
   3368c:	and	r0, r0, #1
   33690:	add	sp, sp, #8
   33694:	bx	lr
   33698:	sub	sp, sp, #12
   3369c:	str	r0, [sp, #4]
   336a0:	ldr	r0, [sp, #4]
   336a4:	sub	r1, r0, #48	; 0x30
   336a8:	cmp	r1, #10
   336ac:	str	r0, [sp]
   336b0:	bcc	336e0 <__assert_fail@plt+0x2235c>
   336b4:	b	336b8 <__assert_fail@plt+0x22334>
   336b8:	ldr	r0, [sp]
   336bc:	sub	r1, r0, #65	; 0x41
   336c0:	cmp	r1, #6
   336c4:	bcc	336e0 <__assert_fail@plt+0x2235c>
   336c8:	b	336cc <__assert_fail@plt+0x22348>
   336cc:	ldr	r0, [sp]
   336d0:	sub	r1, r0, #97	; 0x61
   336d4:	cmp	r1, #5
   336d8:	bhi	336f0 <__assert_fail@plt+0x2236c>
   336dc:	b	336e0 <__assert_fail@plt+0x2235c>
   336e0:	movw	r0, #1
   336e4:	and	r0, r0, #1
   336e8:	strb	r0, [sp, #11]
   336ec:	b	336fc <__assert_fail@plt+0x22378>
   336f0:	movw	r0, #0
   336f4:	and	r0, r0, #1
   336f8:	strb	r0, [sp, #11]
   336fc:	ldrb	r0, [sp, #11]
   33700:	and	r0, r0, #1
   33704:	add	sp, sp, #12
   33708:	bx	lr
   3370c:	sub	sp, sp, #8
   33710:	str	r0, [sp]
   33714:	ldr	r0, [sp]
   33718:	sub	r0, r0, #65	; 0x41
   3371c:	cmp	r0, #25
   33720:	bhi	3373c <__assert_fail@plt+0x223b8>
   33724:	b	33728 <__assert_fail@plt+0x223a4>
   33728:	ldr	r0, [sp]
   3372c:	sub	r0, r0, #65	; 0x41
   33730:	add	r0, r0, #97	; 0x61
   33734:	str	r0, [sp, #4]
   33738:	b	33744 <__assert_fail@plt+0x223c0>
   3373c:	ldr	r0, [sp]
   33740:	str	r0, [sp, #4]
   33744:	ldr	r0, [sp, #4]
   33748:	add	sp, sp, #8
   3374c:	bx	lr
   33750:	sub	sp, sp, #8
   33754:	str	r0, [sp]
   33758:	ldr	r0, [sp]
   3375c:	sub	r0, r0, #97	; 0x61
   33760:	cmp	r0, #25
   33764:	bhi	33780 <__assert_fail@plt+0x223fc>
   33768:	b	3376c <__assert_fail@plt+0x223e8>
   3376c:	ldr	r0, [sp]
   33770:	sub	r0, r0, #97	; 0x61
   33774:	add	r0, r0, #65	; 0x41
   33778:	str	r0, [sp, #4]
   3377c:	b	33788 <__assert_fail@plt+0x22404>
   33780:	ldr	r0, [sp]
   33784:	str	r0, [sp, #4]
   33788:	ldr	r0, [sp, #4]
   3378c:	add	sp, sp, #8
   33790:	bx	lr
   33794:	push	{r4, r5, fp, lr}
   33798:	add	fp, sp, #8
   3379c:	sub	sp, sp, #272	; 0x110
   337a0:	add	r1, sp, #7
   337a4:	str	r0, [fp, #-16]
   337a8:	ldr	r0, [fp, #-16]
   337ac:	movw	r2, #257	; 0x101
   337b0:	bl	33c14 <__assert_fail@plt+0x22890>
   337b4:	cmp	r0, #0
   337b8:	beq	337cc <__assert_fail@plt+0x22448>
   337bc:	movw	r0, #0
   337c0:	and	r0, r0, #1
   337c4:	strb	r0, [fp, #-9]
   337c8:	b	33820 <__assert_fail@plt+0x2249c>
   337cc:	add	r0, sp, #7
   337d0:	movw	r1, #36736	; 0x8f80
   337d4:	movt	r1, #3
   337d8:	bl	110d8 <strcmp@plt>
   337dc:	cmp	r0, #0
   337e0:	movw	r0, #1
   337e4:	str	r0, [sp]
   337e8:	beq	3380c <__assert_fail@plt+0x22488>
   337ec:	add	r0, sp, #7
   337f0:	movw	r1, #36738	; 0x8f82
   337f4:	movt	r1, #3
   337f8:	bl	110d8 <strcmp@plt>
   337fc:	cmp	r0, #0
   33800:	movw	r0, #0
   33804:	moveq	r0, #1
   33808:	str	r0, [sp]
   3380c:	ldr	r0, [sp]
   33810:	mvn	r1, #0
   33814:	eor	r0, r0, r1
   33818:	and	r0, r0, #1
   3381c:	strb	r0, [fp, #-9]
   33820:	ldrb	r0, [fp, #-9]
   33824:	and	r0, r0, #1
   33828:	sub	sp, fp, #8
   3382c:	pop	{r4, r5, fp, pc}
   33830:	push	{fp, lr}
   33834:	mov	fp, sp
   33838:	sub	sp, sp, #48	; 0x30
   3383c:	str	r0, [fp, #-8]
   33840:	mov	r0, #15
   33844:	str	r0, [fp, #-12]
   33848:	ldr	r0, [fp, #-12]
   3384c:	add	r0, r0, #1
   33850:	str	r0, [fp, #-16]
   33854:	ldr	r0, [fp, #-8]
   33858:	ldr	r1, [fp, #-16]
   3385c:	asr	r2, r1, #31
   33860:	adds	r0, r0, r1
   33864:	adc	r1, r2, #0
   33868:	and	r2, r1, #1
   3386c:	rsb	r3, r2, #0
   33870:	eor	r1, r3, r1
   33874:	cmp	r1, #0
   33878:	movwne	r1, #1
   3387c:	eor	r2, r2, r0, lsr #31
   33880:	cmp	r2, #0
   33884:	movwne	r2, #1
   33888:	orr	r1, r1, r2
   3388c:	str	r0, [fp, #-20]	; 0xffffffec
   33890:	tst	r1, #1
   33894:	bne	33940 <__assert_fail@plt+0x225bc>
   33898:	ldr	r0, [pc, #180]	; 33954 <__assert_fail@plt+0x225d0>
   3389c:	ldr	r1, [fp, #-20]	; 0xffffffec
   338a0:	cmp	r0, r1
   338a4:	bcc	33940 <__assert_fail@plt+0x225bc>
   338a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   338ac:	bl	111f8 <malloc@plt>
   338b0:	str	r0, [sp, #24]
   338b4:	ldr	r0, [sp, #24]
   338b8:	movw	lr, #0
   338bc:	cmp	r0, lr
   338c0:	beq	3393c <__assert_fail@plt+0x225b8>
   338c4:	ldr	r0, [sp, #24]
   338c8:	str	r0, [sp, #20]
   338cc:	ldr	r0, [sp, #20]
   338d0:	adds	r0, r0, #8
   338d4:	mov	r1, #0
   338d8:	adc	r1, r1, #0
   338dc:	str	r0, [sp, #16]
   338e0:	ldr	r0, [sp, #16]
   338e4:	ldr	r2, [fp, #-12]
   338e8:	mvn	r3, #0
   338ec:	eor	r2, r2, r3
   338f0:	and	r0, r0, r2
   338f4:	add	r0, r0, #8
   338f8:	ldr	r2, [sp, #20]
   338fc:	sub	r0, r0, r2
   33900:	str	r0, [sp, #12]
   33904:	ldr	r0, [sp, #24]
   33908:	ldr	r2, [sp, #12]
   3390c:	add	r0, r0, r2
   33910:	str	r0, [sp, #8]
   33914:	ldr	r0, [sp, #8]
   33918:	str	r0, [sp, #4]
   3391c:	ldr	r0, [sp, #12]
   33920:	ldr	r2, [sp, #4]
   33924:	add	r2, r2, r3
   33928:	strb	r0, [r2]
   3392c:	ldr	r0, [sp, #4]
   33930:	str	r0, [fp, #-4]
   33934:	str	r1, [sp]
   33938:	b	33948 <__assert_fail@plt+0x225c4>
   3393c:	b	33940 <__assert_fail@plt+0x225bc>
   33940:	movw	r0, #0
   33944:	str	r0, [fp, #-4]
   33948:	ldr	r0, [fp, #-4]
   3394c:	mov	sp, fp
   33950:	pop	{fp, pc}
   33954:	svcvc	0x00ffffff
   33958:	push	{fp, lr}
   3395c:	mov	fp, sp
   33960:	sub	sp, sp, #8
   33964:	str	r0, [sp, #4]
   33968:	ldr	r0, [sp, #4]
   3396c:	and	r0, r0, #7
   33970:	cmp	r0, #0
   33974:	beq	3397c <__assert_fail@plt+0x225f8>
   33978:	bl	1136c <abort@plt>
   3397c:	ldr	r0, [sp, #4]
   33980:	and	r0, r0, #8
   33984:	cmp	r0, #0
   33988:	beq	339b8 <__assert_fail@plt+0x22634>
   3398c:	ldr	r0, [sp, #4]
   33990:	ldr	r1, [sp, #4]
   33994:	mvn	r2, #0
   33998:	add	r1, r1, r2
   3399c:	ldrb	r1, [r1]
   339a0:	movw	r2, #0
   339a4:	sub	r1, r2, r1
   339a8:	add	r0, r0, r1
   339ac:	str	r0, [sp]
   339b0:	ldr	r0, [sp]
   339b4:	bl	1af30 <__assert_fail@plt+0x9bac>
   339b8:	mov	sp, fp
   339bc:	pop	{fp, pc}
   339c0:	push	{fp, lr}
   339c4:	mov	fp, sp
   339c8:	sub	sp, sp, #16
   339cc:	str	r0, [fp, #-4]
   339d0:	ldr	r0, [fp, #-4]
   339d4:	bl	110fc <wcwidth@plt>
   339d8:	str	r0, [sp, #8]
   339dc:	ldr	r0, [sp, #8]
   339e0:	cmp	r0, #0
   339e4:	blt	339f4 <__assert_fail@plt+0x22670>
   339e8:	ldr	r0, [sp, #8]
   339ec:	str	r0, [sp, #4]
   339f0:	b	33a18 <__assert_fail@plt+0x22694>
   339f4:	ldr	r0, [fp, #-4]
   339f8:	bl	11180 <iswcntrl@plt>
   339fc:	cmp	r0, #0
   33a00:	movw	r0, #0
   33a04:	movne	r0, #1
   33a08:	tst	r0, #1
   33a0c:	movw	r0, #0
   33a10:	moveq	r0, #1
   33a14:	str	r0, [sp, #4]
   33a18:	ldr	r0, [sp, #4]
   33a1c:	mov	sp, fp
   33a20:	pop	{fp, pc}
   33a24:	push	{fp, lr}
   33a28:	mov	fp, sp
   33a2c:	sub	sp, sp, #8
   33a30:	str	r0, [sp, #4]
   33a34:	str	r1, [sp]
   33a38:	ldr	r0, [sp]
   33a3c:	ldr	r0, [r0]
   33a40:	ldr	r1, [sp]
   33a44:	add	r1, r1, #16
   33a48:	cmp	r0, r1
   33a4c:	bne	33a80 <__assert_fail@plt+0x226fc>
   33a50:	ldr	r0, [sp, #4]
   33a54:	add	r0, r0, #16
   33a58:	ldr	r1, [sp]
   33a5c:	add	r1, r1, #16
   33a60:	ldr	r2, [sp]
   33a64:	ldr	r2, [r2, #4]
   33a68:	bl	1112c <memcpy@plt>
   33a6c:	ldr	r0, [sp, #4]
   33a70:	add	r0, r0, #16
   33a74:	ldr	r1, [sp, #4]
   33a78:	str	r0, [r1]
   33a7c:	b	33a90 <__assert_fail@plt+0x2270c>
   33a80:	ldr	r0, [sp]
   33a84:	ldr	r0, [r0]
   33a88:	ldr	r1, [sp, #4]
   33a8c:	str	r0, [r1]
   33a90:	ldr	r0, [sp]
   33a94:	ldr	r0, [r0, #4]
   33a98:	ldr	r1, [sp, #4]
   33a9c:	str	r0, [r1, #4]
   33aa0:	ldr	r0, [sp]
   33aa4:	ldrb	r0, [r0, #8]
   33aa8:	ldr	r1, [sp, #4]
   33aac:	and	r2, r0, #1
   33ab0:	strb	r2, [r1, #8]
   33ab4:	tst	r0, #1
   33ab8:	beq	33acc <__assert_fail@plt+0x22748>
   33abc:	ldr	r0, [sp]
   33ac0:	ldr	r0, [r0, #12]
   33ac4:	ldr	r1, [sp, #4]
   33ac8:	str	r0, [r1, #12]
   33acc:	mov	sp, fp
   33ad0:	pop	{fp, pc}
   33ad4:	sub	sp, sp, #8
   33ad8:	movw	r1, #36744	; 0x8f88
   33adc:	movt	r1, #3
   33ae0:	strb	r0, [sp, #7]
   33ae4:	ldrb	r0, [sp, #7]
   33ae8:	lsr	r0, r0, #5
   33aec:	movw	r2, #36744	; 0x8f88
   33af0:	movt	r2, #3
   33af4:	add	r0, r2, r0, lsl #2
   33af8:	ldr	r0, [r0]
   33afc:	ldrb	r2, [sp, #7]
   33b00:	and	r2, r2, #31
   33b04:	lsr	r0, r0, r2
   33b08:	and	r0, r0, #1
   33b0c:	cmp	r0, #0
   33b10:	movw	r0, #0
   33b14:	movne	r0, #1
   33b18:	and	r0, r0, #1
   33b1c:	str	r1, [sp]
   33b20:	add	sp, sp, #8
   33b24:	bx	lr
   33b28:	push	{fp, lr}
   33b2c:	mov	fp, sp
   33b30:	sub	sp, sp, #80	; 0x50
   33b34:	str	r0, [fp, #-8]
   33b38:	bl	111bc <__ctype_get_mb_cur_max@plt>
   33b3c:	cmp	r0, #1
   33b40:	bls	33bfc <__assert_fail@plt+0x22878>
   33b44:	movw	r0, #0
   33b48:	str	r0, [fp, #-12]
   33b4c:	ldr	r0, [fp, #-8]
   33b50:	str	r0, [sp, #28]
   33b54:	movw	r0, #0
   33b58:	strb	r0, [sp, #12]
   33b5c:	add	r1, sp, #12
   33b60:	add	r1, r1, #4
   33b64:	str	r0, [sp, #8]
   33b68:	mov	r0, r1
   33b6c:	ldr	r1, [sp, #8]
   33b70:	and	r1, r1, #255	; 0xff
   33b74:	movw	r2, #8
   33b78:	bl	112b8 <memset@plt>
   33b7c:	ldr	r0, [sp, #8]
   33b80:	strb	r0, [sp, #24]
   33b84:	add	r0, sp, #12
   33b88:	bl	31294 <__assert_fail@plt+0x1ff10>
   33b8c:	ldrb	r0, [sp, #36]	; 0x24
   33b90:	tst	r0, #1
   33b94:	movw	r0, #0
   33b98:	str	r0, [sp, #4]
   33b9c:	beq	33bb4 <__assert_fail@plt+0x22830>
   33ba0:	ldr	r0, [sp, #40]	; 0x28
   33ba4:	cmp	r0, #0
   33ba8:	movw	r0, #0
   33bac:	moveq	r0, #1
   33bb0:	str	r0, [sp, #4]
   33bb4:	ldr	r0, [sp, #4]
   33bb8:	mvn	r1, #0
   33bbc:	eor	r0, r0, r1
   33bc0:	tst	r0, #1
   33bc4:	beq	33bf0 <__assert_fail@plt+0x2286c>
   33bc8:	ldr	r0, [fp, #-12]
   33bcc:	add	r0, r0, #1
   33bd0:	str	r0, [fp, #-12]
   33bd4:	ldr	r0, [sp, #32]
   33bd8:	ldr	r1, [sp, #28]
   33bdc:	add	r0, r1, r0
   33be0:	str	r0, [sp, #28]
   33be4:	movw	r0, #0
   33be8:	strb	r0, [sp, #24]
   33bec:	b	33b84 <__assert_fail@plt+0x22800>
   33bf0:	ldr	r0, [fp, #-12]
   33bf4:	str	r0, [fp, #-4]
   33bf8:	b	33c08 <__assert_fail@plt+0x22884>
   33bfc:	ldr	r0, [fp, #-8]
   33c00:	bl	11270 <strlen@plt>
   33c04:	str	r0, [fp, #-4]
   33c08:	ldr	r0, [fp, #-4]
   33c0c:	mov	sp, fp
   33c10:	pop	{fp, pc}
   33c14:	push	{fp, lr}
   33c18:	mov	fp, sp
   33c1c:	sub	sp, sp, #16
   33c20:	str	r0, [fp, #-4]
   33c24:	str	r1, [sp, #8]
   33c28:	str	r2, [sp, #4]
   33c2c:	ldr	r0, [fp, #-4]
   33c30:	ldr	r1, [sp, #8]
   33c34:	ldr	r2, [sp, #4]
   33c38:	bl	33c44 <__assert_fail@plt+0x228c0>
   33c3c:	mov	sp, fp
   33c40:	pop	{fp, pc}
   33c44:	push	{fp, lr}
   33c48:	mov	fp, sp
   33c4c:	sub	sp, sp, #24
   33c50:	str	r0, [fp, #-8]
   33c54:	str	r1, [sp, #12]
   33c58:	str	r2, [sp, #8]
   33c5c:	ldr	r0, [fp, #-8]
   33c60:	bl	33d44 <__assert_fail@plt+0x229c0>
   33c64:	str	r0, [sp, #4]
   33c68:	ldr	r0, [sp, #4]
   33c6c:	movw	r1, #0
   33c70:	cmp	r0, r1
   33c74:	bne	33c9c <__assert_fail@plt+0x22918>
   33c78:	ldr	r0, [sp, #8]
   33c7c:	cmp	r0, #0
   33c80:	bls	33c90 <__assert_fail@plt+0x2290c>
   33c84:	ldr	r0, [sp, #12]
   33c88:	movw	r1, #0
   33c8c:	strb	r1, [r0]
   33c90:	movw	r0, #22
   33c94:	str	r0, [fp, #-4]
   33c98:	b	33d18 <__assert_fail@plt+0x22994>
   33c9c:	ldr	r0, [sp, #4]
   33ca0:	bl	11270 <strlen@plt>
   33ca4:	str	r0, [sp]
   33ca8:	ldr	r0, [sp]
   33cac:	ldr	lr, [sp, #8]
   33cb0:	cmp	r0, lr
   33cb4:	bcs	33cd8 <__assert_fail@plt+0x22954>
   33cb8:	ldr	r0, [sp, #12]
   33cbc:	ldr	r1, [sp, #4]
   33cc0:	ldr	r2, [sp]
   33cc4:	add	r2, r2, #1
   33cc8:	bl	1112c <memcpy@plt>
   33ccc:	movw	r0, #0
   33cd0:	str	r0, [fp, #-4]
   33cd4:	b	33d18 <__assert_fail@plt+0x22994>
   33cd8:	ldr	r0, [sp, #8]
   33cdc:	cmp	r0, #0
   33ce0:	bls	33d10 <__assert_fail@plt+0x2298c>
   33ce4:	ldr	r0, [sp, #12]
   33ce8:	ldr	r1, [sp, #4]
   33cec:	ldr	r2, [sp, #8]
   33cf0:	sub	r2, r2, #1
   33cf4:	bl	1112c <memcpy@plt>
   33cf8:	ldr	r0, [sp, #12]
   33cfc:	ldr	r1, [sp, #8]
   33d00:	sub	r1, r1, #1
   33d04:	add	r0, r0, r1
   33d08:	movw	r1, #0
   33d0c:	strb	r1, [r0]
   33d10:	movw	r0, #34	; 0x22
   33d14:	str	r0, [fp, #-4]
   33d18:	ldr	r0, [fp, #-4]
   33d1c:	mov	sp, fp
   33d20:	pop	{fp, pc}
   33d24:	push	{fp, lr}
   33d28:	mov	fp, sp
   33d2c:	sub	sp, sp, #8
   33d30:	str	r0, [sp, #4]
   33d34:	ldr	r0, [sp, #4]
   33d38:	bl	33d44 <__assert_fail@plt+0x229c0>
   33d3c:	mov	sp, fp
   33d40:	pop	{fp, pc}
   33d44:	push	{fp, lr}
   33d48:	mov	fp, sp
   33d4c:	sub	sp, sp, #8
   33d50:	str	r0, [sp, #4]
   33d54:	ldr	r0, [sp, #4]
   33d58:	movw	r1, #0
   33d5c:	bl	1130c <setlocale@plt>
   33d60:	str	r0, [sp]
   33d64:	ldr	r0, [sp]
   33d68:	mov	sp, fp
   33d6c:	pop	{fp, pc}
   33d70:	cmp	r3, #0
   33d74:	cmpeq	r2, #0
   33d78:	bne	33d9c <__assert_fail@plt+0x22a18>
   33d7c:	cmp	r1, #0
   33d80:	movlt	r1, #-2147483648	; 0x80000000
   33d84:	movlt	r0, #0
   33d88:	blt	33d98 <__assert_fail@plt+0x22a14>
   33d8c:	cmpeq	r0, #0
   33d90:	mvnne	r1, #-2147483648	; 0x80000000
   33d94:	mvnne	r0, #0
   33d98:	b	33e80 <__assert_fail@plt+0x22afc>
   33d9c:	sub	sp, sp, #8
   33da0:	push	{sp, lr}
   33da4:	cmp	r1, #0
   33da8:	blt	33dc8 <__assert_fail@plt+0x22a44>
   33dac:	cmp	r3, #0
   33db0:	blt	33dfc <__assert_fail@plt+0x22a78>
   33db4:	bl	33e90 <__assert_fail@plt+0x22b0c>
   33db8:	ldr	lr, [sp, #4]
   33dbc:	add	sp, sp, #8
   33dc0:	pop	{r2, r3}
   33dc4:	bx	lr
   33dc8:	rsbs	r0, r0, #0
   33dcc:	sbc	r1, r1, r1, lsl #1
   33dd0:	cmp	r3, #0
   33dd4:	blt	33e20 <__assert_fail@plt+0x22a9c>
   33dd8:	bl	33e90 <__assert_fail@plt+0x22b0c>
   33ddc:	ldr	lr, [sp, #4]
   33de0:	add	sp, sp, #8
   33de4:	pop	{r2, r3}
   33de8:	rsbs	r0, r0, #0
   33dec:	sbc	r1, r1, r1, lsl #1
   33df0:	rsbs	r2, r2, #0
   33df4:	sbc	r3, r3, r3, lsl #1
   33df8:	bx	lr
   33dfc:	rsbs	r2, r2, #0
   33e00:	sbc	r3, r3, r3, lsl #1
   33e04:	bl	33e90 <__assert_fail@plt+0x22b0c>
   33e08:	ldr	lr, [sp, #4]
   33e0c:	add	sp, sp, #8
   33e10:	pop	{r2, r3}
   33e14:	rsbs	r0, r0, #0
   33e18:	sbc	r1, r1, r1, lsl #1
   33e1c:	bx	lr
   33e20:	rsbs	r2, r2, #0
   33e24:	sbc	r3, r3, r3, lsl #1
   33e28:	bl	33e90 <__assert_fail@plt+0x22b0c>
   33e2c:	ldr	lr, [sp, #4]
   33e30:	add	sp, sp, #8
   33e34:	pop	{r2, r3}
   33e38:	rsbs	r2, r2, #0
   33e3c:	sbc	r3, r3, r3, lsl #1
   33e40:	bx	lr
   33e44:	cmp	r3, #0
   33e48:	cmpeq	r2, #0
   33e4c:	bne	33e64 <__assert_fail@plt+0x22ae0>
   33e50:	cmp	r1, #0
   33e54:	cmpeq	r0, #0
   33e58:	mvnne	r1, #0
   33e5c:	mvnne	r0, #0
   33e60:	b	33e80 <__assert_fail@plt+0x22afc>
   33e64:	sub	sp, sp, #8
   33e68:	push	{sp, lr}
   33e6c:	bl	33e90 <__assert_fail@plt+0x22b0c>
   33e70:	ldr	lr, [sp, #4]
   33e74:	add	sp, sp, #8
   33e78:	pop	{r2, r3}
   33e7c:	bx	lr
   33e80:	push	{r1, lr}
   33e84:	mov	r0, #8
   33e88:	bl	110b4 <raise@plt>
   33e8c:	pop	{r1, pc}
   33e90:	cmp	r1, r3
   33e94:	cmpeq	r0, r2
   33e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e9c:	mov	r4, r0
   33ea0:	movcc	r0, #0
   33ea4:	mov	r5, r1
   33ea8:	ldr	lr, [sp, #36]	; 0x24
   33eac:	movcc	r1, r0
   33eb0:	bcc	33fac <__assert_fail@plt+0x22c28>
   33eb4:	cmp	r3, #0
   33eb8:	clzeq	ip, r2
   33ebc:	clzne	ip, r3
   33ec0:	addeq	ip, ip, #32
   33ec4:	cmp	r5, #0
   33ec8:	clzeq	r1, r4
   33ecc:	addeq	r1, r1, #32
   33ed0:	clzne	r1, r5
   33ed4:	sub	ip, ip, r1
   33ed8:	sub	sl, ip, #32
   33edc:	lsl	r9, r3, ip
   33ee0:	rsb	fp, ip, #32
   33ee4:	orr	r9, r9, r2, lsl sl
   33ee8:	orr	r9, r9, r2, lsr fp
   33eec:	lsl	r8, r2, ip
   33ef0:	cmp	r5, r9
   33ef4:	cmpeq	r4, r8
   33ef8:	movcc	r0, #0
   33efc:	movcc	r1, r0
   33f00:	bcc	33f1c <__assert_fail@plt+0x22b98>
   33f04:	mov	r0, #1
   33f08:	subs	r4, r4, r8
   33f0c:	lsl	r1, r0, sl
   33f10:	orr	r1, r1, r0, lsr fp
   33f14:	lsl	r0, r0, ip
   33f18:	sbc	r5, r5, r9
   33f1c:	cmp	ip, #0
   33f20:	beq	33fac <__assert_fail@plt+0x22c28>
   33f24:	lsr	r6, r8, #1
   33f28:	orr	r6, r6, r9, lsl #31
   33f2c:	lsr	r7, r9, #1
   33f30:	mov	r2, ip
   33f34:	b	33f58 <__assert_fail@plt+0x22bd4>
   33f38:	subs	r3, r4, r6
   33f3c:	sbc	r8, r5, r7
   33f40:	adds	r3, r3, r3
   33f44:	adc	r8, r8, r8
   33f48:	adds	r4, r3, #1
   33f4c:	adc	r5, r8, #0
   33f50:	subs	r2, r2, #1
   33f54:	beq	33f74 <__assert_fail@plt+0x22bf0>
   33f58:	cmp	r5, r7
   33f5c:	cmpeq	r4, r6
   33f60:	bcs	33f38 <__assert_fail@plt+0x22bb4>
   33f64:	adds	r4, r4, r4
   33f68:	adc	r5, r5, r5
   33f6c:	subs	r2, r2, #1
   33f70:	bne	33f58 <__assert_fail@plt+0x22bd4>
   33f74:	lsr	r3, r4, ip
   33f78:	orr	r3, r3, r5, lsl fp
   33f7c:	lsr	r2, r5, ip
   33f80:	orr	r3, r3, r5, lsr sl
   33f84:	adds	r0, r0, r4
   33f88:	mov	r4, r3
   33f8c:	lsl	r3, r2, ip
   33f90:	orr	r3, r3, r4, lsl sl
   33f94:	lsl	ip, r4, ip
   33f98:	orr	r3, r3, r4, lsr fp
   33f9c:	adc	r1, r1, r5
   33fa0:	subs	r0, r0, ip
   33fa4:	mov	r5, r2
   33fa8:	sbc	r1, r1, r3
   33fac:	cmp	lr, #0
   33fb0:	strdne	r4, [lr]
   33fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33fb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33fbc:	mov	r7, r0
   33fc0:	ldr	r6, [pc, #72]	; 34010 <__assert_fail@plt+0x22c8c>
   33fc4:	ldr	r5, [pc, #72]	; 34014 <__assert_fail@plt+0x22c90>
   33fc8:	add	r6, pc, r6
   33fcc:	add	r5, pc, r5
   33fd0:	sub	r6, r6, r5
   33fd4:	mov	r8, r1
   33fd8:	mov	r9, r2
   33fdc:	bl	1107c <calloc@plt-0x20>
   33fe0:	asrs	r6, r6, #2
   33fe4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   33fe8:	mov	r4, #0
   33fec:	add	r4, r4, #1
   33ff0:	ldr	r3, [r5], #4
   33ff4:	mov	r2, r9
   33ff8:	mov	r1, r8
   33ffc:	mov	r0, r7
   34000:	blx	r3
   34004:	cmp	r6, r4
   34008:	bne	33fec <__assert_fail@plt+0x22c68>
   3400c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34010:	andeq	r5, r1, ip, lsr pc
   34014:	andeq	r5, r1, r4, lsr pc
   34018:	bx	lr
   3401c:	ldr	r3, [pc, #12]	; 34030 <__assert_fail@plt+0x22cac>
   34020:	mov	r1, #0
   34024:	add	r3, pc, r3
   34028:	ldr	r2, [r3]
   3402c:	b	112ac <__cxa_atexit@plt>
   34030:	andeq	r6, r1, r4, ror #1

Disassembly of section .fini:

00034034 <.fini>:
   34034:	push	{r3, lr}
   34038:	pop	{r3, pc}
