
../repos/daq-2.0.7/os-daq-modules/.libs/daq_pcap.so:     file format elf32-littlearm


Disassembly of section .init:

00000998 <_init>:
 998:	push	{r3, lr}
 99c:	bl	b5c <call_weak_fn>
 9a0:	pop	{r3, pc}

Disassembly of section .plt:

000009a4 <.plt>:
 9a4:	push	{lr}		; (str lr, [sp, #-4]!)
 9a8:	ldr	lr, [pc, #4]	; 9b4 <.plt+0x10>
 9ac:	add	lr, pc, lr
 9b0:	ldr	pc, [lr, #8]!
 9b4:	.word	0x0001164c

000009b8 <calloc@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #69632	; 0x11000
 9c0:	ldr	pc, [ip, #1612]!	; 0x64c

000009c4 <strcmp@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #69632	; 0x11000
 9cc:	ldr	pc, [ip, #1604]!	; 0x644

000009d0 <__cxa_finalize@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #69632	; 0x11000
 9d8:	ldr	pc, [ip, #1596]!	; 0x63c

000009dc <pcap_activate@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #69632	; 0x11000
 9e4:	ldr	pc, [ip, #1588]!	; 0x634

000009e8 <strtol@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #69632	; 0x11000
 9f0:	ldr	pc, [ip, #1580]!	; 0x62c

000009f4 <pcap_setfilter@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #69632	; 0x11000
 9fc:	ldr	pc, [ip, #1572]!	; 0x624

00000a00 <printf@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #69632	; 0x11000
 a08:	ldr	pc, [ip, #1564]!	; 0x61c

00000a0c <free@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #69632	; 0x11000
 a14:	ldr	pc, [ip, #1556]!	; 0x614

00000a18 <memcpy@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #69632	; 0x11000
 a20:	ldr	pc, [ip, #1548]!	; 0x60c

00000a24 <pcap_set_timeout@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #69632	; 0x11000
 a2c:	ldr	pc, [ip, #1540]!	; 0x604

00000a30 <strdup@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #69632	; 0x11000
 a38:	ldr	pc, [ip, #1532]!	; 0x5fc

00000a3c <pcap_create@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #69632	; 0x11000
 a44:	ldr	pc, [ip, #1524]!	; 0x5f4

00000a48 <pcap_close@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #69632	; 0x11000
 a50:	ldr	pc, [ip, #1516]!	; 0x5ec

00000a54 <pcap_stats@plt>:
 a54:	add	ip, pc, #0, 12
 a58:	add	ip, ip, #69632	; 0x11000
 a5c:	ldr	pc, [ip, #1508]!	; 0x5e4

00000a60 <pcap_open_dead@plt>:
 a60:	add	ip, pc, #0, 12
 a64:	add	ip, ip, #69632	; 0x11000
 a68:	ldr	pc, [ip, #1500]!	; 0x5dc

00000a6c <pcap_set_snaplen@plt>:
 a6c:	add	ip, pc, #0, 12
 a70:	add	ip, ip, #69632	; 0x11000
 a74:	ldr	pc, [ip, #1492]!	; 0x5d4

00000a78 <pcap_breakloop@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #69632	; 0x11000
 a80:	ldr	pc, [ip, #1484]!	; 0x5cc

00000a84 <getenv@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #69632	; 0x11000
 a8c:	ldr	pc, [ip, #1476]!	; 0x5c4

00000a90 <pcap_geterr@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #69632	; 0x11000
 a98:	ldr	pc, [ip, #1468]!	; 0x5bc

00000a9c <pcap_set_promisc@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #69632	; 0x11000
 aa4:	ldr	pc, [ip, #1460]!	; 0x5b4

00000aa8 <pcap_open_offline@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #69632	; 0x11000
 ab0:	ldr	pc, [ip, #1452]!	; 0x5ac

00000ab4 <__gmon_start__@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #69632	; 0x11000
 abc:	ldr	pc, [ip, #1444]!	; 0x5a4

00000ac0 <getpagesize@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #69632	; 0x11000
 ac8:	ldr	pc, [ip, #1436]!	; 0x59c

00000acc <snprintf@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #69632	; 0x11000
 ad4:	ldr	pc, [ip, #1428]!	; 0x594

00000ad8 <memset@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #69632	; 0x11000
 ae0:	ldr	pc, [ip, #1420]!	; 0x58c

00000ae4 <pcap_inject@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #69632	; 0x11000
 aec:	ldr	pc, [ip, #1412]!	; 0x584

00000af0 <pcap_compile@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #69632	; 0x11000
 af8:	ldr	pc, [ip, #1404]!	; 0x57c

00000afc <pcap_snapshot@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #69632	; 0x11000
 b04:	ldr	pc, [ip, #1396]!	; 0x574

00000b08 <pcap_freecode@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #69632	; 0x11000
 b10:	ldr	pc, [ip, #1388]!	; 0x56c

00000b14 <pcap_statustostr@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #69632	; 0x11000
 b1c:	ldr	pc, [ip, #1380]!	; 0x564

00000b20 <pcap_datalink@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #69632	; 0x11000
 b28:	ldr	pc, [ip, #1372]!	; 0x55c

00000b2c <pcap_lookupnet@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #69632	; 0x11000
 b34:	ldr	pc, [ip, #1364]!	; 0x554

00000b38 <strncmp@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #69632	; 0x11000
 b40:	ldr	pc, [ip, #1356]!	; 0x54c

00000b44 <pcap_dispatch@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #69632	; 0x11000
 b4c:	ldr	pc, [ip, #1348]!	; 0x544

00000b50 <pcap_set_buffer_size@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #69632	; 0x11000
 b58:	ldr	pc, [ip, #1340]!	; 0x53c

Disassembly of section .text:

00000b5c <call_weak_fn>:
     b5c:	ldr	r3, [pc, #20]	; b78 <call_weak_fn+0x1c>
     b60:	ldr	r2, [pc, #20]	; b7c <call_weak_fn+0x20>
     b64:	add	r3, pc, r3
     b68:	ldr	r2, [r3, r2]
     b6c:	cmp	r2, #0
     b70:	bxeq	lr
     b74:	b	ab4 <__gmon_start__@plt>
     b78:	.word	0x00011494
     b7c:	.word	0x000000a0

00000b80 <deregister_tm_clones>:
     b80:	ldr	r0, [pc, #44]	; bb4 <deregister_tm_clones+0x34>
     b84:	ldr	r3, [pc, #44]	; bb8 <deregister_tm_clones+0x38>
     b88:	add	r0, pc, r0
     b8c:	add	r3, pc, r3
     b90:	cmp	r3, r0
     b94:	ldr	r3, [pc, #32]	; bbc <deregister_tm_clones+0x3c>
     b98:	add	r3, pc, r3
     b9c:	bxeq	lr
     ba0:	ldr	r2, [pc, #24]	; bc0 <deregister_tm_clones+0x40>
     ba4:	ldr	r3, [r3, r2]
     ba8:	cmp	r3, #0
     bac:	bxeq	lr
     bb0:	bx	r3
     bb4:	.word	0x0001151c
     bb8:	.word	0x00011518
     bbc:	.word	0x00011460
     bc0:	.word	0x0000009c

00000bc4 <register_tm_clones>:
     bc4:	ldr	r0, [pc, #56]	; c04 <register_tm_clones+0x40>
     bc8:	ldr	r3, [pc, #56]	; c08 <register_tm_clones+0x44>
     bcc:	add	r0, pc, r0
     bd0:	add	r3, pc, r3
     bd4:	sub	r1, r3, r0
     bd8:	ldr	r3, [pc, #44]	; c0c <register_tm_clones+0x48>
     bdc:	asr	r1, r1, #2
     be0:	add	r3, pc, r3
     be4:	add	r1, r1, r1, lsr #31
     be8:	asrs	r1, r1, #1
     bec:	bxeq	lr
     bf0:	ldr	r2, [pc, #24]	; c10 <register_tm_clones+0x4c>
     bf4:	ldr	r3, [r3, r2]
     bf8:	cmp	r3, #0
     bfc:	bxeq	lr
     c00:	bx	r3
     c04:	.word	0x000114d8
     c08:	.word	0x000114d4
     c0c:	.word	0x00011418
     c10:	.word	0x000000a4

00000c14 <__do_global_dtors_aux>:
     c14:	ldr	r3, [pc, #76]	; c68 <__do_global_dtors_aux+0x54>
     c18:	ldr	r2, [pc, #76]	; c6c <__do_global_dtors_aux+0x58>
     c1c:	add	r3, pc, r3
     c20:	add	r2, pc, r2
     c24:	ldrb	r3, [r3]
     c28:	cmp	r3, #0
     c2c:	bxne	lr
     c30:	ldr	r3, [pc, #56]	; c70 <__do_global_dtors_aux+0x5c>
     c34:	push	{r4, lr}
     c38:	ldr	r3, [r2, r3]
     c3c:	cmp	r3, #0
     c40:	beq	c50 <__do_global_dtors_aux+0x3c>
     c44:	ldr	r3, [pc, #40]	; c74 <__do_global_dtors_aux+0x60>
     c48:	ldr	r0, [pc, r3]
     c4c:	bl	9d0 <__cxa_finalize@plt>
     c50:	bl	b80 <deregister_tm_clones>
     c54:	ldr	r3, [pc, #28]	; c78 <__do_global_dtors_aux+0x64>
     c58:	mov	r2, #1
     c5c:	add	r3, pc, r3
     c60:	strb	r2, [r3]
     c64:	pop	{r4, pc}
     c68:	.word	0x00011488
     c6c:	.word	0x000113d8
     c70:	.word	0x00000098
     c74:	.word	0x00011458
     c78:	.word	0x00011448

00000c7c <frame_dummy>:
     c7c:	b	bc4 <register_tm_clones>

00000c80 <pcap_daq_initialize>:
     c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c84:	add	fp, sp, #28
     c88:	sub	sp, sp, #20
     c8c:	mov	r5, r1
     c90:	mov	r8, r0
     c94:	mov	r0, #1
     c98:	mov	r1, #448	; 0x1c0
     c9c:	mov	r9, r3
     ca0:	mov	sl, r2
     ca4:	bl	9b8 <calloc@plt>
     ca8:	cmp	r0, #0
     cac:	beq	dec <pcap_daq_initialize+0x16c>
     cb0:	str	r5, [sp, #16]
     cb4:	mov	r4, r0
     cb8:	ldmib	r8, {r0, r1}
     cbc:	str	r0, [r4, #12]
     cc0:	ldr	r0, [r8, #16]
     cc4:	ldr	r7, [r8, #20]
     cc8:	and	r0, r0, #1
     ccc:	cmp	r7, #0
     cd0:	str	r0, [r4, #276]	; 0x114
     cd4:	str	r1, [r4, #280]	; 0x118
     cd8:	beq	d28 <pcap_daq_initialize+0xa8>
     cdc:	ldr	r5, [pc, #516]	; ee8 <pcap_daq_initialize+0x268>
     ce0:	mov	r6, #0
     ce4:	add	r5, pc, r5
     ce8:	ldr	r0, [r7]
     cec:	mov	r1, r5
     cf0:	bl	9c4 <strcmp@plt>
     cf4:	cmp	r0, #0
     cf8:	bne	d14 <pcap_daq_initialize+0x94>
     cfc:	ldr	r0, [r7, #4]
     d00:	mov	r1, #0
     d04:	mov	r2, #10
     d08:	bl	9e8 <strtol@plt>
     d0c:	mov	r6, r0
     d10:	str	r0, [r4, #284]	; 0x11c
     d14:	ldr	r7, [r7, #8]
     d18:	cmp	r7, #0
     d1c:	bne	ce8 <pcap_daq_initialize+0x68>
     d20:	cmp	r6, #0
     d24:	bne	e14 <pcap_daq_initialize+0x194>
     d28:	ldr	r0, [pc, #444]	; eec <pcap_daq_initialize+0x26c>
     d2c:	add	r0, pc, r0
     d30:	bl	a84 <getenv@plt>
     d34:	cmp	r0, #0
     d38:	beq	e0c <pcap_daq_initialize+0x18c>
     d3c:	mov	r6, r0
     d40:	ldr	r0, [r4, #12]
     d44:	str	sl, [sp, #8]
     d48:	str	r9, [sp, #12]
     d4c:	add	r0, r0, #99	; 0x63
     d50:	bic	sl, r0, #15
     d54:	bl	ac0 <getpagesize@plt>
     d58:	mov	r5, r0
     d5c:	lsl	r0, r0, #1
     d60:	cmp	r5, sl
     d64:	blt	d58 <pcap_daq_initialize+0xd8>
     d68:	ldr	r1, [pc, #384]	; ef0 <pcap_daq_initialize+0x270>
     d6c:	mov	r0, r6
     d70:	mov	r2, #3
     d74:	add	r1, pc, r1
     d78:	bl	b38 <strncmp@plt>
     d7c:	sdiv	r7, r5, sl
     d80:	mov	r9, #32768	; 0x8000
     d84:	cmp	r0, #0
     d88:	beq	dbc <pcap_daq_initialize+0x13c>
     d8c:	ldr	r1, [pc, #352]	; ef4 <pcap_daq_initialize+0x274>
     d90:	mov	r0, r6
     d94:	mov	r2, #3
     d98:	add	r1, pc, r1
     d9c:	bl	b38 <strncmp@plt>
     da0:	cmp	r0, #0
     da4:	beq	dbc <pcap_daq_initialize+0x13c>
     da8:	mov	r0, r6
     dac:	mov	r1, #0
     db0:	mov	r2, #10
     db4:	bl	9e8 <strtol@plt>
     db8:	mov	r9, r0
     dbc:	mul	r0, r9, r5
     dc0:	mov	r1, r9
     dc4:	mov	r2, r5
     dc8:	mov	r3, r7
     dcc:	sdiv	r6, r0, r7
     dd0:	stm	sp, {r6, sl}
     dd4:	ldr	r0, [pc, #284]	; ef8 <pcap_daq_initialize+0x278>
     dd8:	add	r0, pc, r0
     ddc:	bl	a00 <printf@plt>
     de0:	ldr	r9, [sp, #12]
     de4:	ldr	sl, [sp, #8]
     de8:	b	e10 <pcap_daq_initialize+0x190>
     dec:	ldr	r2, [pc, #236]	; ee0 <pcap_daq_initialize+0x260>
     df0:	ldr	r3, [pc, #236]	; ee4 <pcap_daq_initialize+0x264>
     df4:	mov	r0, sl
     df8:	mov	r1, r9
     dfc:	add	r2, pc, r2
     e00:	add	r3, pc, r3
     e04:	bl	acc <snprintf@plt>
     e08:	b	ed4 <pcap_daq_initialize+0x254>
     e0c:	mov	r6, #0
     e10:	str	r6, [r4, #284]	; 0x11c
     e14:	ldr	r0, [r8]
     e18:	ldr	r5, [r8, #12]
     e1c:	bl	a30 <strdup@plt>
     e20:	cmp	r5, #2
     e24:	bne	e78 <pcap_daq_initialize+0x1f8>
     e28:	ldr	r5, [sp, #16]
     e2c:	cmp	r0, #0
     e30:	str	r0, [r4, #4]
     e34:	beq	ea4 <pcap_daq_initialize+0x224>
     e38:	mov	r0, #0
     e3c:	str	r0, [r4, #292]	; 0x124
     e40:	mov	r0, r4
     e44:	bl	1418 <pcap_daq_open>
     e48:	cmp	r0, #0
     e4c:	beq	e90 <pcap_daq_initialize+0x210>
     e50:	ldr	r2, [pc, #176]	; f08 <pcap_daq_initialize+0x288>
     e54:	add	r3, r4, #20
     e58:	mov	r0, sl
     e5c:	mov	r1, r9
     e60:	add	r2, pc, r2
     e64:	bl	acc <snprintf@plt>
     e68:	mov	r0, r4
     e6c:	bl	a0c <free@plt>
     e70:	mvn	r0, #0
     e74:	b	ed8 <pcap_daq_initialize+0x258>
     e78:	ldr	r5, [sp, #16]
     e7c:	cmp	r0, #0
     e80:	str	r0, [r4]
     e84:	beq	eb0 <pcap_daq_initialize+0x230>
     e88:	mov	r0, #1
     e8c:	str	r0, [r4, #292]	; 0x124
     e90:	mov	r0, #1
     e94:	str	r0, [r4, #440]	; 0x1b8
     e98:	mov	r0, #0
     e9c:	str	r4, [r5]
     ea0:	b	ed8 <pcap_daq_initialize+0x258>
     ea4:	ldr	r2, [pc, #80]	; efc <pcap_daq_initialize+0x27c>
     ea8:	add	r2, pc, r2
     eac:	b	eb8 <pcap_daq_initialize+0x238>
     eb0:	ldr	r2, [pc, #76]	; f04 <pcap_daq_initialize+0x284>
     eb4:	add	r2, pc, r2
     eb8:	ldr	r3, [pc, #64]	; f00 <pcap_daq_initialize+0x280>
     ebc:	mov	r0, sl
     ec0:	mov	r1, r9
     ec4:	add	r3, pc, r3
     ec8:	bl	acc <snprintf@plt>
     ecc:	mov	r0, r4
     ed0:	bl	a0c <free@plt>
     ed4:	mvn	r0, #1
     ed8:	sub	sp, fp, #28
     edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ee0:	.word	0x0000096d
     ee4:	.word	0x000009a0
     ee8:	.word	0x00000ad0
     eec:	.word	0x00000afe
     ef0:	.word	0x00000ac2
     ef4:	.word	0x00000aa2
     ef8:	.word	0x00000a66
     efc:	.word	0x00000918
     f00:	.word	0x000008dc
     f04:	.word	0x00000942
     f08:	.word	0x00000a1e

00000f0c <pcap_daq_set_filter>:
     f0c:	push	{r4, r5, r6, sl, fp, lr}
     f10:	add	fp, sp, #16
     f14:	sub	sp, sp, #16
     f18:	mov	r4, r0
     f1c:	ldr	r0, [r0, #16]
     f20:	mov	r5, r1
     f24:	cmp	r0, #0
     f28:	beq	f90 <pcap_daq_set_filter+0x84>
     f2c:	ldr	r1, [r4, #304]	; 0x130
     f30:	mov	r2, r5
     f34:	mov	r3, #1
     f38:	str	r1, [sp]
     f3c:	add	r1, sp, #8
     f40:	bl	af0 <pcap_compile@plt>
     f44:	cmn	r0, #1
     f48:	ble	1018 <pcap_daq_set_filter+0x10c>
     f4c:	ldr	r0, [r4, #16]
     f50:	add	r5, sp, #8
     f54:	mov	r1, r5
     f58:	bl	9f4 <pcap_setfilter@plt>
     f5c:	mov	r6, r0
     f60:	mov	r0, r5
     f64:	bl	b08 <pcap_freecode@plt>
     f68:	mov	r0, #0
     f6c:	cmn	r6, #1
     f70:	bgt	1070 <pcap_daq_set_filter+0x164>
     f74:	ldr	r0, [r4, #16]
     f78:	bl	a90 <pcap_geterr@plt>
     f7c:	str	r0, [sp]
     f80:	add	r0, r4, #20
     f84:	ldr	r2, [pc, #236]	; 1078 <pcap_daq_set_filter+0x16c>
     f88:	add	r2, pc, r2
     f8c:	b	105c <pcap_daq_set_filter+0x150>
     f90:	ldr	r1, [r4, #12]
     f94:	mov	r0, #1
     f98:	bl	a60 <pcap_open_dead@plt>
     f9c:	cmp	r0, #0
     fa0:	beq	1020 <pcap_daq_set_filter+0x114>
     fa4:	mov	r6, r0
     fa8:	ldr	r0, [r4, #304]	; 0x130
     fac:	add	r1, sp, #8
     fb0:	mov	r2, r5
     fb4:	mov	r3, #1
     fb8:	str	r0, [sp]
     fbc:	mov	r0, r6
     fc0:	bl	af0 <pcap_compile@plt>
     fc4:	cmn	r0, #1
     fc8:	ble	1044 <pcap_daq_set_filter+0x138>
     fcc:	add	r0, sp, #8
     fd0:	bl	b08 <pcap_freecode@plt>
     fd4:	mov	r0, r6
     fd8:	bl	a48 <pcap_close@plt>
     fdc:	ldr	r0, [r4, #8]
     fe0:	cmp	r0, #0
     fe4:	beq	fec <pcap_daq_set_filter+0xe0>
     fe8:	bl	a0c <free@plt>
     fec:	mov	r0, r5
     ff0:	bl	a30 <strdup@plt>
     ff4:	mov	r1, r0
     ff8:	str	r0, [r4, #8]
     ffc:	mov	r0, #0
    1000:	cmp	r1, #0
    1004:	bne	1070 <pcap_daq_set_filter+0x164>
    1008:	ldr	r2, [pc, #120]	; 1088 <pcap_daq_set_filter+0x17c>
    100c:	add	r0, r4, #20
    1010:	add	r2, pc, r2
    1014:	b	102c <pcap_daq_set_filter+0x120>
    1018:	ldr	r0, [r4, #16]
    101c:	b	1048 <pcap_daq_set_filter+0x13c>
    1020:	ldr	r2, [pc, #84]	; 107c <pcap_daq_set_filter+0x170>
    1024:	add	r0, r4, #20
    1028:	add	r2, pc, r2
    102c:	ldr	r3, [pc, #88]	; 108c <pcap_daq_set_filter+0x180>
    1030:	mov	r1, #256	; 0x100
    1034:	add	r3, pc, r3
    1038:	bl	acc <snprintf@plt>
    103c:	mvn	r0, #1
    1040:	b	1070 <pcap_daq_set_filter+0x164>
    1044:	mov	r0, r6
    1048:	bl	a90 <pcap_geterr@plt>
    104c:	str	r0, [sp]
    1050:	add	r0, r4, #20
    1054:	ldr	r2, [pc, #36]	; 1080 <pcap_daq_set_filter+0x174>
    1058:	add	r2, pc, r2
    105c:	ldr	r3, [pc, #32]	; 1084 <pcap_daq_set_filter+0x178>
    1060:	mov	r1, #256	; 0x100
    1064:	add	r3, pc, r3
    1068:	bl	acc <snprintf@plt>
    106c:	mvn	r0, #0
    1070:	sub	sp, fp, #16
    1074:	pop	{r4, r5, r6, sl, fp, pc}
    1078:	.word	0x0000090d
    107c:	.word	0x00000884
    1080:	.word	0x00000814
    1084:	.word	0x0000081d
    1088:	.word	0x000008c7
    108c:	.word	0x0000084d

00001090 <pcap_daq_start>:
    1090:	push	{r4, r5, fp, lr}
    1094:	add	fp, sp, #8
    1098:	mov	r4, r0
    109c:	bl	1418 <pcap_daq_open>
    10a0:	mvn	r5, #0
    10a4:	cmp	r0, #0
    10a8:	bne	10ec <pcap_daq_start+0x5c>
    10ac:	mov	r0, r4
    10b0:	bl	1324 <pcap_daq_reset_stats>
    10b4:	ldr	r1, [r4, #8]
    10b8:	cmp	r1, #0
    10bc:	beq	10e0 <pcap_daq_start+0x50>
    10c0:	mov	r0, r4
    10c4:	bl	f0c <pcap_daq_set_filter>
    10c8:	cmp	r0, #0
    10cc:	bne	10ec <pcap_daq_start+0x5c>
    10d0:	ldr	r0, [r4, #8]
    10d4:	bl	a0c <free@plt>
    10d8:	mov	r0, #0
    10dc:	str	r0, [r4, #8]
    10e0:	mov	r0, #2
    10e4:	mov	r5, #0
    10e8:	str	r0, [r4, #440]	; 0x1b8
    10ec:	mov	r0, r5
    10f0:	pop	{r4, r5, fp, pc}

000010f4 <pcap_daq_acquire>:
    10f4:	push	{r4, r5, r6, sl, fp, lr}
    10f8:	add	fp, sp, #16
    10fc:	mov	r5, r1
    1100:	mov	r1, #0
    1104:	str	r2, [r0, #296]	; 0x128
    1108:	mov	r4, r0
    110c:	str	r1, [r0, #288]	; 0x120
    1110:	ldr	r0, [fp, #8]
    1114:	str	r0, [r4, #300]	; 0x12c
    1118:	ldr	r6, [pc, #140]	; 11ac <pcap_daq_acquire+0xb8>
    111c:	add	r6, pc, r6
    1120:	ldr	r0, [r4, #16]
    1124:	sub	r1, r5, r1
    1128:	cmp	r5, #1
    112c:	mov	r2, r6
    1130:	mov	r3, r4
    1134:	mvnlt	r1, #0
    1138:	bl	b44 <pcap_dispatch@plt>
    113c:	cmn	r0, #1
    1140:	beq	1184 <pcap_daq_acquire+0x90>
    1144:	mov	r1, r0
    1148:	cmp	r0, #0
    114c:	bne	1160 <pcap_daq_acquire+0x6c>
    1150:	ldr	r0, [r4, #4]
    1154:	cmp	r0, #0
    1158:	mvnne	r0, #41	; 0x29
    115c:	popne	{r4, r5, r6, sl, fp, pc}
    1160:	cmn	r1, #2
    1164:	mov	r0, #0
    1168:	cmpne	r1, #0
    116c:	beq	1180 <pcap_daq_acquire+0x8c>
    1170:	ldr	r1, [r4, #288]	; 0x120
    1174:	cmp	r5, #1
    1178:	cmpge	r1, r5
    117c:	blt	1120 <pcap_daq_acquire+0x2c>
    1180:	pop	{r4, r5, r6, sl, fp, pc}
    1184:	ldr	r0, [r4, #16]
    1188:	bl	a90 <pcap_geterr@plt>
    118c:	ldr	r2, [pc, #28]	; 11b0 <pcap_daq_acquire+0xbc>
    1190:	mov	r3, r0
    1194:	add	r0, r4, #20
    1198:	mov	r1, #256	; 0x100
    119c:	add	r2, pc, r2
    11a0:	bl	acc <snprintf@plt>
    11a4:	mvn	r0, #0
    11a8:	pop	{r4, r5, r6, sl, fp, pc}
    11ac:	.word	0x00000470
    11b0:	.word	0x000006e2

000011b4 <pcap_daq_inject>:
    11b4:	push	{r4, sl, fp, lr}
    11b8:	add	fp, sp, #8
    11bc:	mov	r4, r0
    11c0:	ldr	r0, [r0, #16]
    11c4:	mov	r1, r2
    11c8:	mov	r2, r3
    11cc:	bl	ae4 <pcap_inject@plt>
    11d0:	cmn	r0, #1
    11d4:	ble	11f8 <pcap_daq_inject+0x44>
    11d8:	ldr	r0, [r4, #344]	; 0x158
    11dc:	ldr	r1, [r4, #348]	; 0x15c
    11e0:	adds	r0, r0, #1
    11e4:	adc	r1, r1, #0
    11e8:	str	r0, [r4, #344]	; 0x158
    11ec:	mov	r0, #0
    11f0:	str	r1, [r4, #348]	; 0x15c
    11f4:	pop	{r4, sl, fp, pc}
    11f8:	ldr	r0, [r4, #16]
    11fc:	bl	a90 <pcap_geterr@plt>
    1200:	ldr	r2, [pc, #24]	; 1220 <pcap_daq_inject+0x6c>
    1204:	mov	r3, r0
    1208:	add	r0, r4, #20
    120c:	mov	r1, #256	; 0x100
    1210:	add	r2, pc, r2
    1214:	bl	acc <snprintf@plt>
    1218:	mvn	r0, #0
    121c:	pop	{r4, sl, fp, pc}
    1220:	.word	0x0000066e

00001224 <pcap_daq_breakloop>:
    1224:	ldr	r0, [r0, #16]
    1228:	cmp	r0, #0
    122c:	mvneq	r0, #0
    1230:	bxeq	lr
    1234:	push	{fp, lr}
    1238:	mov	fp, sp
    123c:	bl	a78 <pcap_breakloop@plt>
    1240:	mov	r0, #0
    1244:	pop	{fp, pc}

00001248 <pcap_daq_stop>:
    1248:	push	{r4, sl, fp, lr}
    124c:	add	fp, sp, #8
    1250:	mov	r4, r0
    1254:	ldr	r0, [r0, #16]
    1258:	cmp	r0, #0
    125c:	beq	1278 <pcap_daq_stop+0x30>
    1260:	mov	r0, r4
    1264:	bl	1644 <update_hw_stats>
    1268:	ldr	r0, [r4, #16]
    126c:	bl	a48 <pcap_close@plt>
    1270:	mov	r0, #0
    1274:	str	r0, [r4, #16]
    1278:	mov	r0, #3
    127c:	str	r0, [r4, #440]	; 0x1b8
    1280:	mov	r0, #0
    1284:	pop	{r4, sl, fp, pc}

00001288 <pcap_daq_shutdown>:
    1288:	push	{r4, sl, fp, lr}
    128c:	add	fp, sp, #8
    1290:	mov	r4, r0
    1294:	ldr	r0, [r0, #16]
    1298:	cmp	r0, #0
    129c:	beq	12a4 <pcap_daq_shutdown+0x1c>
    12a0:	bl	a48 <pcap_close@plt>
    12a4:	ldr	r0, [r4]
    12a8:	cmp	r0, #0
    12ac:	beq	12b4 <pcap_daq_shutdown+0x2c>
    12b0:	bl	a0c <free@plt>
    12b4:	ldr	r0, [r4, #4]
    12b8:	cmp	r0, #0
    12bc:	beq	12c4 <pcap_daq_shutdown+0x3c>
    12c0:	bl	a0c <free@plt>
    12c4:	ldr	r0, [r4, #8]
    12c8:	cmp	r0, #0
    12cc:	beq	12d4 <pcap_daq_shutdown+0x4c>
    12d0:	bl	a0c <free@plt>
    12d4:	mov	r0, r4
    12d8:	pop	{r4, sl, fp, lr}
    12dc:	b	a0c <free@plt>

000012e0 <pcap_daq_check_status>:
    12e0:	ldr	r0, [r0, #440]	; 0x1b8
    12e4:	bx	lr

000012e8 <pcap_daq_get_stats>:
    12e8:	push	{r4, r5, fp, lr}
    12ec:	add	fp, sp, #8
    12f0:	mov	r4, r1
    12f4:	mov	r5, r0
    12f8:	bl	1644 <update_hw_stats>
    12fc:	mov	r1, r0
    1300:	mvn	r0, #0
    1304:	cmp	r1, #0
    1308:	popne	{r4, r5, fp, pc}
    130c:	add	r1, r5, #312	; 0x138
    1310:	mov	r0, r4
    1314:	mov	r2, #96	; 0x60
    1318:	bl	a18 <memcpy@plt>
    131c:	mov	r0, #0
    1320:	pop	{r4, r5, fp, pc}

00001324 <pcap_daq_reset_stats>:
    1324:	push	{r4, r5, fp, lr}
    1328:	add	fp, sp, #8
    132c:	sub	sp, sp, #16
    1330:	mov	r4, r0
    1334:	add	r0, r0, #312	; 0x138
    1338:	mov	r1, #0
    133c:	mov	r2, #96	; 0x60
    1340:	mov	r5, #0
    1344:	bl	ad8 <memset@plt>
    1348:	ldr	r0, [r4, #16]
    134c:	cmp	r0, #0
    1350:	beq	1390 <pcap_daq_reset_stats+0x6c>
    1354:	str	r5, [sp, #4]
    1358:	str	r5, [sp]
    135c:	str	r5, [sp, #8]
    1360:	ldr	r1, [r4]
    1364:	cmp	r1, #0
    1368:	beq	1390 <pcap_daq_reset_stats+0x6c>
    136c:	mov	r1, sp
    1370:	bl	a54 <pcap_stats@plt>
    1374:	cmp	r0, #0
    1378:	bne	1390 <pcap_daq_reset_stats+0x6c>
    137c:	ldm	sp, {r0, r1}
    1380:	str	r0, [r4, #408]	; 0x198
    1384:	str	r1, [r4, #412]	; 0x19c
    1388:	str	r0, [r4, #432]	; 0x1b0
    138c:	str	r1, [r4, #436]	; 0x1b4
    1390:	sub	sp, fp, #8
    1394:	pop	{r4, r5, fp, pc}

00001398 <pcap_daq_get_snaplen>:
    1398:	ldr	r1, [r0, #16]
    139c:	cmp	r1, #0
    13a0:	ldreq	r0, [r0, #12]
    13a4:	bxeq	lr
    13a8:	mov	r0, r1
    13ac:	b	afc <pcap_snapshot@plt>

000013b0 <pcap_daq_get_capabilities>:
    13b0:	ldr	r1, [r0]
    13b4:	ldr	r2, [r0, #292]	; 0x124
    13b8:	mov	r0, #196	; 0xc4
    13bc:	cmp	r1, #0
    13c0:	movweq	r0, #192	; 0xc0
    13c4:	cmp	r2, #0
    13c8:	orreq	r0, r0, #32
    13cc:	bx	lr

000013d0 <pcap_daq_get_datalink_type>:
    13d0:	ldr	r0, [r0, #16]
    13d4:	cmp	r0, #0
    13d8:	moveq	r0, #0
    13dc:	bxeq	lr
    13e0:	b	b20 <pcap_datalink@plt>

000013e4 <pcap_daq_get_errbuf>:
    13e4:	add	r0, r0, #20
    13e8:	bx	lr

000013ec <pcap_daq_set_errbuf>:
    13ec:	cmp	r1, #0
    13f0:	bxeq	lr
    13f4:	ldr	r2, [pc, #16]	; 140c <pcap_daq_set_errbuf+0x20>
    13f8:	mov	r3, r1
    13fc:	add	r0, r0, #20
    1400:	mov	r1, #256	; 0x100
    1404:	add	r2, pc, r2
    1408:	b	acc <snprintf@plt>
    140c:	.word	0x0000047a

00001410 <pcap_daq_get_device_index>:
    1410:	mvn	r0, #3
    1414:	bx	lr

00001418 <pcap_daq_open>:
    1418:	push	{r4, r5, r6, sl, fp, lr}
    141c:	add	fp, sp, #16
    1420:	sub	sp, sp, #16
    1424:	mov	r4, r0
    1428:	ldr	r0, [r0, #16]
    142c:	mov	r6, #0
    1430:	cmp	r0, #0
    1434:	bne	1580 <pcap_daq_open+0x168>
    1438:	ldr	r0, [r4]
    143c:	cmp	r0, #0
    1440:	beq	14e0 <pcap_daq_open+0xc8>
    1444:	add	r5, r4, #20
    1448:	mov	r1, r5
    144c:	bl	a3c <pcap_create@plt>
    1450:	cmp	r0, #0
    1454:	str	r0, [r4, #16]
    1458:	beq	157c <pcap_daq_open+0x164>
    145c:	ldr	r1, [r4, #12]
    1460:	bl	a6c <pcap_set_snaplen@plt>
    1464:	cmp	r0, #0
    1468:	blt	150c <pcap_daq_open+0xf4>
    146c:	ldr	r1, [r4, #276]	; 0x114
    1470:	ldr	r0, [r4, #16]
    1474:	cmp	r1, #0
    1478:	movwne	r1, #1
    147c:	bl	a9c <pcap_set_promisc@plt>
    1480:	cmp	r0, #0
    1484:	blt	150c <pcap_daq_open+0xf4>
    1488:	ldr	r0, [r4, #16]
    148c:	ldr	r1, [r4, #280]	; 0x118
    1490:	bl	a24 <pcap_set_timeout@plt>
    1494:	cmp	r0, #0
    1498:	blt	150c <pcap_daq_open+0xf4>
    149c:	ldr	r0, [r4, #16]
    14a0:	ldr	r1, [r4, #284]	; 0x11c
    14a4:	bl	b50 <pcap_set_buffer_size@plt>
    14a8:	cmp	r0, #0
    14ac:	blt	150c <pcap_daq_open+0xf4>
    14b0:	ldr	r0, [r4, #16]
    14b4:	bl	9dc <pcap_activate@plt>
    14b8:	cmp	r0, #0
    14bc:	blt	150c <pcap_daq_open+0xf4>
    14c0:	ldr	r0, [r4]
    14c4:	add	r1, sp, #12
    14c8:	add	r2, sp, #8
    14cc:	mov	r3, r5
    14d0:	bl	b2c <pcap_lookupnet@plt>
    14d4:	cmn	r0, #1
    14d8:	bgt	1500 <pcap_daq_open+0xe8>
    14dc:	b	14f8 <pcap_daq_open+0xe0>
    14e0:	ldr	r0, [r4, #4]
    14e4:	add	r1, r4, #20
    14e8:	bl	aa8 <pcap_open_offline@plt>
    14ec:	cmp	r0, #0
    14f0:	str	r0, [r4, #16]
    14f4:	beq	157c <pcap_daq_open+0x164>
    14f8:	mvn	r0, #-16777216	; 0xff000000
    14fc:	str	r0, [sp, #8]
    1500:	mvn	r0, #-16777216	; 0xff000000
    1504:	str	r0, [r4, #304]	; 0x130
    1508:	b	1580 <pcap_daq_open+0x168>
    150c:	add	r1, r0, #8
    1510:	cmp	r1, #7
    1514:	bhi	1548 <pcap_daq_open+0x130>
    1518:	mov	r2, #1
    151c:	mov	r3, #137	; 0x89
    1520:	tst	r3, r2, lsl r1
    1524:	beq	1548 <pcap_daq_open+0x130>
    1528:	ldr	r0, [r4, #16]
    152c:	bl	a90 <pcap_geterr@plt>
    1530:	ldr	r2, [pc, #84]	; 158c <pcap_daq_open+0x174>
    1534:	mov	r3, r0
    1538:	mov	r0, r5
    153c:	mov	r1, #256	; 0x100
    1540:	add	r2, pc, r2
    1544:	b	1568 <pcap_daq_open+0x150>
    1548:	ldr	r6, [r4]
    154c:	bl	b14 <pcap_statustostr@plt>
    1550:	str	r0, [sp]
    1554:	mov	r0, r5
    1558:	mov	r1, #256	; 0x100
    155c:	mov	r3, r6
    1560:	ldr	r2, [pc, #40]	; 1590 <pcap_daq_open+0x178>
    1564:	add	r2, pc, r2
    1568:	bl	acc <snprintf@plt>
    156c:	ldr	r0, [r4, #16]
    1570:	bl	a48 <pcap_close@plt>
    1574:	mov	r0, #0
    1578:	str	r0, [r4, #16]
    157c:	mvn	r6, #0
    1580:	mov	r0, r6
    1584:	sub	sp, fp, #16
    1588:	pop	{r4, r5, r6, sl, fp, pc}
    158c:	.word	0x0000033e
    1590:	.word	0x00000301

00001594 <pcap_process_loop>:
    1594:	push	{r4, sl, fp, lr}
    1598:	add	fp, sp, #8
    159c:	sub	sp, sp, #56	; 0x38
    15a0:	mov	r4, r0
    15a4:	ldr	ip, [r1]
    15a8:	ldr	r3, [r1, #4]
    15ac:	ldr	r0, [r1, #8]
    15b0:	ldr	r1, [r1, #12]
    15b4:	str	r0, [sp, #8]
    15b8:	str	r1, [sp, #12]
    15bc:	mvn	r0, #0
    15c0:	mov	r1, #0
    15c4:	str	r0, [sp, #24]
    15c8:	str	r0, [sp, #16]
    15cc:	str	r1, [sp, #32]
    15d0:	strh	r1, [sp, #48]	; 0x30
    15d4:	str	r3, [sp, #4]
    15d8:	str	ip, [sp]
    15dc:	ldr	r1, [r4, #288]	; 0x120
    15e0:	ldr	r3, [r4, #328]	; 0x148
    15e4:	ldr	ip, [r4, #296]	; 0x128
    15e8:	add	r1, r1, #1
    15ec:	str	r1, [r4, #288]	; 0x120
    15f0:	adds	r1, r3, #1
    15f4:	str	r1, [r4, #328]	; 0x148
    15f8:	str	r0, [sp, #28]
    15fc:	str	r0, [sp, #20]
    1600:	mov	r1, sp
    1604:	ldr	r0, [r4, #332]	; 0x14c
    1608:	adc	r0, r0, #0
    160c:	str	r0, [r4, #332]	; 0x14c
    1610:	ldr	r0, [r4, #300]	; 0x12c
    1614:	blx	ip
    1618:	cmp	r0, #6
    161c:	movwhi	r0, #0
    1620:	add	r0, r4, r0, lsl #3
    1624:	ldr	r1, [r0, #352]	; 0x160
    1628:	ldr	r2, [r0, #356]	; 0x164
    162c:	adds	r1, r1, #1
    1630:	adc	r2, r2, #0
    1634:	str	r1, [r0, #352]	; 0x160
    1638:	str	r2, [r0, #356]	; 0x164
    163c:	sub	sp, fp, #8
    1640:	pop	{r4, sl, fp, pc}

00001644 <update_hw_stats>:
    1644:	push	{r4, r5, fp, lr}
    1648:	add	fp, sp, #8
    164c:	sub	sp, sp, #16
    1650:	ldr	r2, [r0, #16]
    1654:	mov	r4, r0
    1658:	mov	r0, #0
    165c:	cmp	r2, #0
    1660:	ldrne	r1, [r4]
    1664:	cmpne	r1, #0
    1668:	bne	1674 <update_hw_stats+0x30>
    166c:	sub	sp, fp, #8
    1670:	pop	{r4, r5, fp, pc}
    1674:	mov	r0, #0
    1678:	mov	r1, sp
    167c:	str	r0, [sp, #4]
    1680:	str	r0, [sp]
    1684:	str	r0, [sp, #8]
    1688:	mov	r0, r2
    168c:	bl	a54 <pcap_stats@plt>
    1690:	cmn	r0, #1
    1694:	beq	1738 <update_hw_stats+0xf4>
    1698:	ldr	r0, [r4, #432]	; 0x1b0
    169c:	ldr	ip, [sp]
    16a0:	cmp	ip, r0
    16a4:	bcs	16c0 <update_hw_stats+0x7c>
    16a8:	ldr	r0, [r4, #416]	; 0x1a0
    16ac:	ldr	r1, [r4, #420]	; 0x1a4
    16b0:	subs	r0, r0, #1
    16b4:	adc	r1, r1, #0
    16b8:	str	r0, [r4, #416]	; 0x1a0
    16bc:	str	r1, [r4, #420]	; 0x1a4
    16c0:	mov	r0, r4
    16c4:	ldr	r1, [sp, #4]
    16c8:	ldr	r2, [r0, #424]!	; 0x1a8
    16cc:	ldr	lr, [r0, #12]
    16d0:	ldr	r3, [r0, #4]
    16d4:	cmp	r1, lr
    16d8:	bcs	16e8 <update_hw_stats+0xa4>
    16dc:	subs	r2, r2, #1
    16e0:	adc	r3, r3, #0
    16e4:	strd	r2, [r0]
    16e8:	str	ip, [r4, #432]	; 0x1b0
    16ec:	str	r1, [r4, #436]	; 0x1b4
    16f0:	adds	r0, r2, r1
    16f4:	adc	r1, r3, #0
    16f8:	ldr	r3, [r4, #412]	; 0x19c
    16fc:	ldr	r2, [r4, #416]	; 0x1a0
    1700:	ldr	lr, [r4, #408]	; 0x198
    1704:	ldr	r5, [r4, #420]	; 0x1a4
    1708:	subs	r0, r0, r3
    170c:	sbc	r1, r1, #0
    1710:	adds	r2, r2, ip
    1714:	adc	r3, r5, #0
    1718:	subs	r2, r2, lr
    171c:	sbc	r3, r3, #0
    1720:	str	r2, [r4, #312]	; 0x138
    1724:	str	r3, [r4, #316]	; 0x13c
    1728:	str	r0, [r4, #320]	; 0x140
    172c:	mov	r0, #0
    1730:	str	r1, [r4, #324]	; 0x144
    1734:	b	166c <update_hw_stats+0x28>
    1738:	ldr	r0, [r4, #16]
    173c:	bl	a90 <pcap_geterr@plt>
    1740:	ldr	r2, [pc, #24]	; 1760 <update_hw_stats+0x11c>
    1744:	mov	r3, r0
    1748:	add	r0, r4, #20
    174c:	mov	r1, #256	; 0x100
    1750:	add	r2, pc, r2
    1754:	bl	acc <snprintf@plt>
    1758:	mvn	r0, #0
    175c:	b	166c <update_hw_stats+0x28>
    1760:	.word	0x0000012e

Disassembly of section .fini:

00001764 <_fini>:
    1764:	push	{r3, lr}
    1768:	pop	{r3, pc}
