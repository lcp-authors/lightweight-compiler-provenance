
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011e98 <.init>:
   11e98:	push	{r3, lr}
   11e9c:	bl	11f90 <_start@@Base+0x3c>
   11ea0:	pop	{r3, pc}

Disassembly of section .plt:

00011ea4 <strcmp@plt-0x14>:
   11ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ea8:	ldr	lr, [pc, #4]	; 11eb4 <strcmp@plt-0x4>
   11eac:	add	lr, pc, lr
   11eb0:	ldr	pc, [lr, #8]!
   11eb4:	andeq	r3, r1, ip, asr #2

00011eb8 <strcmp@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #77824	; 0x13000
   11ec0:	ldr	pc, [ip, #332]!	; 0x14c

00011ec4 <printf@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #77824	; 0x13000
   11ecc:	ldr	pc, [ip, #324]!	; 0x144

00011ed0 <free@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #77824	; 0x13000
   11ed8:	ldr	pc, [ip, #316]!	; 0x13c

00011edc <realloc@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #77824	; 0x13000
   11ee4:	ldr	pc, [ip, #308]!	; 0x134

00011ee8 <strcpy@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #77824	; 0x13000
   11ef0:	ldr	pc, [ip, #300]!	; 0x12c

00011ef4 <puts@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #77824	; 0x13000
   11efc:	ldr	pc, [ip, #292]!	; 0x124

00011f00 <malloc@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #77824	; 0x13000
   11f08:	ldr	pc, [ip, #284]!	; 0x11c

00011f0c <__libc_start_main@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #77824	; 0x13000
   11f14:	ldr	pc, [ip, #276]!	; 0x114

00011f18 <__gmon_start__@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #77824	; 0x13000
   11f20:	ldr	pc, [ip, #268]!	; 0x10c

00011f24 <strlen@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #77824	; 0x13000
   11f2c:	ldr	pc, [ip, #260]!	; 0x104

00011f30 <snprintf@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #77824	; 0x13000
   11f38:	ldr	pc, [ip, #252]!	; 0xfc

00011f3c <__isoc99_sscanf@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #77824	; 0x13000
   11f44:	ldr	pc, [ip, #244]!	; 0xf4

00011f48 <abort@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #77824	; 0x13000
   11f50:	ldr	pc, [ip, #236]!	; 0xec

Disassembly of section .text:

00011f54 <_start@@Base>:
   11f54:	mov	fp, #0
   11f58:	mov	lr, #0
   11f5c:	pop	{r1}		; (ldr r1, [sp], #4)
   11f60:	mov	r2, sp
   11f64:	push	{r2}		; (str r2, [sp, #-4]!)
   11f68:	push	{r0}		; (str r0, [sp, #-4]!)
   11f6c:	ldr	ip, [pc, #16]	; 11f84 <_start@@Base+0x30>
   11f70:	push	{ip}		; (str ip, [sp, #-4]!)
   11f74:	ldr	r0, [pc, #12]	; 11f88 <_start@@Base+0x34>
   11f78:	ldr	r3, [pc, #12]	; 11f8c <_start@@Base+0x38>
   11f7c:	bl	11f0c <__libc_start_main@plt>
   11f80:	bl	11f48 <abort@plt>
   11f84:	andeq	r4, r1, ip, lsr #23
   11f88:	andeq	r2, r1, r4, asr #32
   11f8c:	andeq	r4, r1, ip, asr #22
   11f90:	ldr	r3, [pc, #20]	; 11fac <_start@@Base+0x58>
   11f94:	ldr	r2, [pc, #20]	; 11fb0 <_start@@Base+0x5c>
   11f98:	add	r3, pc, r3
   11f9c:	ldr	r2, [r3, r2]
   11fa0:	cmp	r2, #0
   11fa4:	bxeq	lr
   11fa8:	b	11f18 <__gmon_start__@plt>
   11fac:	andeq	r3, r1, r0, rrx
   11fb0:	andeq	r0, r0, r0, asr #32
   11fb4:	ldr	r0, [pc, #24]	; 11fd4 <_start@@Base+0x80>
   11fb8:	ldr	r3, [pc, #24]	; 11fd8 <_start@@Base+0x84>
   11fbc:	cmp	r3, r0
   11fc0:	bxeq	lr
   11fc4:	ldr	r3, [pc, #16]	; 11fdc <_start@@Base+0x88>
   11fc8:	cmp	r3, #0
   11fcc:	bxeq	lr
   11fd0:	bx	r3
   11fd4:	andeq	r5, r2, ip, asr #32
   11fd8:	andeq	r5, r2, ip, asr #32
   11fdc:	andeq	r0, r0, r0
   11fe0:	ldr	r0, [pc, #36]	; 1200c <_start@@Base+0xb8>
   11fe4:	ldr	r1, [pc, #36]	; 12010 <_start@@Base+0xbc>
   11fe8:	sub	r1, r1, r0
   11fec:	asr	r1, r1, #2
   11ff0:	add	r1, r1, r1, lsr #31
   11ff4:	asrs	r1, r1, #1
   11ff8:	bxeq	lr
   11ffc:	ldr	r3, [pc, #16]	; 12014 <_start@@Base+0xc0>
   12000:	cmp	r3, #0
   12004:	bxeq	lr
   12008:	bx	r3
   1200c:	andeq	r5, r2, ip, asr #32
   12010:	andeq	r5, r2, ip, asr #32
   12014:	andeq	r0, r0, r0
   12018:	push	{r4, lr}
   1201c:	ldr	r4, [pc, #24]	; 1203c <_start@@Base+0xe8>
   12020:	ldrb	r3, [r4]
   12024:	cmp	r3, #0
   12028:	popne	{r4, pc}
   1202c:	bl	11fb4 <_start@@Base+0x60>
   12030:	mov	r3, #1
   12034:	strb	r3, [r4]
   12038:	pop	{r4, pc}
   1203c:	andeq	r5, r2, ip, asr #32
   12040:	b	11fe0 <_start@@Base+0x8c>

00012044 <main@@Base>:
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	sub	sp, sp, #64	; 0x40
   12050:	mov	r4, #0
   12054:	str	r4, [sp, #4]
   12058:	add	r5, sp, #8
   1205c:	mov	r0, r5
   12060:	bl	121bc <table_init@@Base>
   12064:	movw	r1, #8584	; 0x2188
   12068:	movt	r1, #1
   1206c:	add	r2, sp, #4
   12070:	mov	r0, r5
   12074:	mvn	r3, #0
   12078:	bl	1287c <table_register_callback@@Base>
   1207c:	mov	r0, r5
   12080:	bl	13918 <table_add_row@@Base>
   12084:	mov	r5, r0
   12088:	ldrb	r0, [sp, #4]
   1208c:	tst	r0, #2
   12090:	bne	120a4 <main@@Base+0x60>
   12094:	movw	r0, #19584	; 0x4c80
   12098:	movt	r0, #1
   1209c:	bl	11ef4 <puts@plt>
   120a0:	mvn	r4, #0
   120a4:	add	r0, sp, #8
   120a8:	movw	r1, #19396	; 0x4bc4
   120ac:	movt	r1, #1
   120b0:	mov	r2, #0
   120b4:	bl	12c78 <table_add_column@@Base>
   120b8:	mov	r6, r0
   120bc:	ldrb	r0, [sp, #4]
   120c0:	tst	r0, #8
   120c4:	bne	120d8 <main@@Base+0x94>
   120c8:	movw	r0, #19632	; 0x4cb0
   120cc:	movt	r0, #1
   120d0:	bl	11ef4 <puts@plt>
   120d4:	mvn	r4, #0
   120d8:	add	r0, sp, #8
   120dc:	mov	r1, r5
   120e0:	mov	r2, r6
   120e4:	mov	r3, #42	; 0x2a
   120e8:	bl	13d78 <table_set_int@@Base>
   120ec:	ldrb	r0, [sp, #4]
   120f0:	tst	r0, #1
   120f4:	bne	12108 <main@@Base+0xc4>
   120f8:	movw	r0, #19399	; 0x4bc7
   120fc:	movt	r0, #1
   12100:	bl	11ec4 <printf@plt>
   12104:	mvn	r4, #0
   12108:	add	r0, sp, #8
   1210c:	mov	r1, r5
   12110:	bl	13a00 <table_remove_row@@Base>
   12114:	ldrb	r0, [sp, #4]
   12118:	tst	r0, #4
   1211c:	bne	12130 <main@@Base+0xec>
   12120:	movw	r0, #19443	; 0x4bf3
   12124:	movt	r0, #1
   12128:	bl	11ec4 <printf@plt>
   1212c:	mvn	r4, #0
   12130:	add	r0, sp, #8
   12134:	mov	r1, r6
   12138:	bl	12de0 <table_remove_column@@Base>
   1213c:	ldrb	r0, [sp, #4]
   12140:	tst	r0, #16
   12144:	bne	12158 <main@@Base+0x114>
   12148:	movw	r0, #19485	; 0x4c1d
   1214c:	movt	r0, #1
   12150:	bl	11ec4 <printf@plt>
   12154:	mvn	r4, #0
   12158:	add	r0, sp, #8
   1215c:	bl	121fc <table_destroy@@Base>
   12160:	ldrb	r0, [sp, #4]
   12164:	tst	r0, #64	; 0x40
   12168:	bne	1217c <main@@Base+0x138>
   1216c:	movw	r0, #19530	; 0x4c4a
   12170:	movt	r0, #1
   12174:	bl	11ec4 <printf@plt>
   12178:	mvn	r4, #0
   1217c:	mov	r0, r4
   12180:	sub	sp, fp, #16
   12184:	pop	{r4, r5, r6, sl, fp, pc}
   12188:	ldr	r0, [sp]
   1218c:	ldr	r1, [r0]
   12190:	orr	r1, r1, r3
   12194:	str	r1, [r0]
   12198:	bx	lr

0001219c <table_new@@Base>:
   1219c:	push	{r4, sl, fp, lr}
   121a0:	add	fp, sp, #8
   121a4:	mov	r0, #56	; 0x38
   121a8:	bl	11f00 <malloc@plt>
   121ac:	mov	r4, r0
   121b0:	bl	121bc <table_init@@Base>
   121b4:	mov	r0, r4
   121b8:	pop	{r4, sl, fp, pc}

000121bc <table_init@@Base>:
   121bc:	push	{r4, sl, fp, lr}
   121c0:	add	fp, sp, #8
   121c4:	mov	r4, r0
   121c8:	bl	1223c <table_destroy@@Base+0x40>
   121cc:	mov	r0, r4
   121d0:	bl	12254 <table_destroy@@Base+0x58>
   121d4:	mov	r0, r4
   121d8:	pop	{r4, sl, fp, lr}
   121dc:	b	12270 <table_destroy@@Base+0x74>

000121e0 <table_delete@@Base>:
   121e0:	push	{r4, sl, fp, lr}
   121e4:	add	fp, sp, #8
   121e8:	mov	r4, r0
   121ec:	bl	121fc <table_destroy@@Base>
   121f0:	mov	r0, r4
   121f4:	pop	{r4, sl, fp, lr}
   121f8:	b	11ed0 <free@plt>

000121fc <table_destroy@@Base>:
   121fc:	cmp	r0, #0
   12200:	bxeq	lr
   12204:	push	{r4, sl, fp, lr}
   12208:	add	fp, sp, #8
   1220c:	mov	r4, r0
   12210:	mvn	r1, #0
   12214:	mvn	r2, #0
   12218:	mov	r3, #64	; 0x40
   1221c:	bl	12af8 <table_notify@@Base>
   12220:	mov	r0, r4
   12224:	bl	12290 <table_destroy@@Base+0x94>
   12228:	mov	r0, r4
   1222c:	bl	122dc <table_destroy@@Base+0xe0>
   12230:	mov	r0, r4
   12234:	pop	{r4, sl, fp, lr}
   12238:	b	12328 <table_destroy@@Base+0x12c>
   1223c:	mov	r1, #0
   12240:	mov	r2, #10
   12244:	str	r1, [r0]
   12248:	stmib	r0, {r1, r2}
   1224c:	str	r1, [r0, #12]
   12250:	bx	lr
   12254:	mov	r1, #0
   12258:	mov	r2, #20
   1225c:	str	r1, [r0, #16]
   12260:	str	r1, [r0, #20]
   12264:	str	r2, [r0, #24]
   12268:	str	r1, [r0, #28]
   1226c:	bx	lr
   12270:	mov	r1, #0
   12274:	vmov.i32	q8, #0	; 0x00000000
   12278:	mov	r2, #10
   1227c:	str	r2, [r0, #48]	; 0x30
   12280:	str	r1, [r0, #52]	; 0x34
   12284:	add	r0, r0, #32
   12288:	vst1.32	{d16-d17}, [r0]
   1228c:	bx	lr
   12290:	push	{r4, r5, r6, sl, fp, lr}
   12294:	add	fp, sp, #16
   12298:	mov	r4, r0
   1229c:	bl	13910 <table_get_row_length@@Base>
   122a0:	cmp	r0, #1
   122a4:	blt	122c8 <table_destroy@@Base+0xcc>
   122a8:	mov	r5, r0
   122ac:	mov	r6, #0
   122b0:	mov	r0, r4
   122b4:	mov	r1, r6
   122b8:	bl	138ac <table_row_destroy@@Base>
   122bc:	add	r6, r6, #1
   122c0:	cmp	r5, r6
   122c4:	bne	122b0 <table_destroy@@Base+0xb4>
   122c8:	ldr	r0, [r4, #16]
   122cc:	cmp	r0, #0
   122d0:	popeq	{r4, r5, r6, sl, fp, pc}
   122d4:	pop	{r4, r5, r6, sl, fp, lr}
   122d8:	b	11ed0 <free@plt>
   122dc:	push	{r4, r5, r6, sl, fp, lr}
   122e0:	add	fp, sp, #16
   122e4:	mov	r4, r0
   122e8:	bl	12bec <table_get_column_length@@Base>
   122ec:	cmp	r0, #1
   122f0:	blt	12314 <table_destroy@@Base+0x118>
   122f4:	mov	r5, r0
   122f8:	mov	r6, #0
   122fc:	mov	r0, r4
   12300:	mov	r1, r6
   12304:	bl	12bcc <table_column_destroy@@Base>
   12308:	add	r6, r6, #1
   1230c:	cmp	r5, r6
   12310:	bne	122fc <table_destroy@@Base+0x100>
   12314:	ldr	r0, [r4]
   12318:	cmp	r0, #0
   1231c:	popeq	{r4, r5, r6, sl, fp, pc}
   12320:	pop	{r4, r5, r6, sl, fp, lr}
   12324:	b	11ed0 <free@plt>
   12328:	push	{r4, sl, fp, lr}
   1232c:	add	fp, sp, #8
   12330:	mov	r4, r0
   12334:	ldr	r0, [r0, #36]	; 0x24
   12338:	cmp	r0, #0
   1233c:	beq	12344 <table_destroy@@Base+0x148>
   12340:	bl	11ed0 <free@plt>
   12344:	ldr	r0, [r4, #40]	; 0x28
   12348:	cmp	r0, #0
   1234c:	beq	12354 <table_destroy@@Base+0x158>
   12350:	bl	11ed0 <free@plt>
   12354:	ldr	r0, [r4, #44]	; 0x2c
   12358:	cmp	r0, #0
   1235c:	popeq	{r4, sl, fp, pc}
   12360:	pop	{r4, sl, fp, lr}
   12364:	b	11ed0 <free@plt>

00012368 <table_dupe@@Base>:
   12368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1236c:	add	fp, sp, #28
   12370:	sub	sp, sp, #12
   12374:	mov	r4, r0
   12378:	bl	13910 <table_get_row_length@@Base>
   1237c:	mov	r8, r0
   12380:	mov	r0, r4
   12384:	bl	12bec <table_get_column_length@@Base>
   12388:	mov	r6, r0
   1238c:	bl	1219c <table_new@@Base>
   12390:	mov	sl, r0
   12394:	cmp	r6, #1
   12398:	blt	123d8 <table_dupe@@Base+0x70>
   1239c:	mov	r5, #0
   123a0:	mov	r0, r4
   123a4:	mov	r1, r5
   123a8:	bl	12c50 <table_get_column_name@@Base>
   123ac:	mov	r7, r0
   123b0:	mov	r0, r4
   123b4:	mov	r1, r5
   123b8:	bl	12c64 <table_get_column_data_type@@Base>
   123bc:	mov	r2, r0
   123c0:	mov	r0, sl
   123c4:	mov	r1, r7
   123c8:	bl	12c78 <table_add_column@@Base>
   123cc:	add	r5, r5, #1
   123d0:	cmp	r6, r5
   123d4:	bne	123a0 <table_dupe@@Base+0x38>
   123d8:	cmp	r8, #1
   123dc:	blt	12844 <table_dupe@@Base+0x4dc>
   123e0:	mov	r5, #0
   123e4:	add	r9, sp, #8
   123e8:	mov	r0, sl
   123ec:	bl	13918 <table_add_row@@Base>
   123f0:	cmp	r6, #1
   123f4:	blt	12838 <table_dupe@@Base+0x4d0>
   123f8:	mov	r7, #0
   123fc:	mov	r0, r4
   12400:	mov	r1, r7
   12404:	bl	12c64 <table_get_column_data_type@@Base>
   12408:	cmp	r0, #23
   1240c:	bhi	1282c <table_dupe@@Base+0x4c4>
   12410:	add	r1, pc, #0
   12414:	ldr	pc, [r1, r0, lsl #2]
   12418:	andeq	r2, r1, r8, ror r4
   1241c:	andeq	r2, r1, r0, lsr #9
   12420:	andeq	r2, r1, r8, asr #9
   12424:	strdeq	r2, [r1], -r0
   12428:	andeq	r2, r1, r8, lsl r5
   1242c:	andeq	r2, r1, r0, asr #10
   12430:	andeq	r2, r1, r8, ror #10
   12434:	muleq	r1, r0, r5
   12438:			; <UNDEFINED> instruction: 0x000125b8
   1243c:	andeq	r2, r1, r0, ror #11
   12440:	andeq	r2, r1, r8, lsl #12
   12444:	andeq	r2, r1, r0, lsr r6
   12448:	andeq	r2, r1, r8, asr r6
   1244c:	andeq	r2, r1, r0, lsl #13
   12450:	andeq	r2, r1, r8, lsr #13
   12454:	ldrdeq	r2, [r1], -r0
   12458:	strdeq	r2, [r1], -r8
   1245c:	andeq	r2, r1, ip, lsl r7
   12460:	andeq	r2, r1, r0, asr #14
   12464:	andeq	r2, r1, r4, ror #14
   12468:	andeq	r2, r1, ip, lsl #15
   1246c:			; <UNDEFINED> instruction: 0x000127b4
   12470:	ldrdeq	r2, [r1], -ip
   12474:	andeq	r2, r1, r4, lsl #16
   12478:	mov	r0, r4
   1247c:	mov	r1, r5
   12480:	mov	r2, r7
   12484:	bl	136cc <table_get_int@@Base>
   12488:	mov	r3, r0
   1248c:	mov	r0, sl
   12490:	mov	r1, r5
   12494:	mov	r2, r7
   12498:	bl	13d78 <table_set_int@@Base>
   1249c:	b	1282c <table_dupe@@Base+0x4c4>
   124a0:	mov	r0, r4
   124a4:	mov	r1, r5
   124a8:	mov	r2, r7
   124ac:	bl	136e0 <table_get_uint@@Base>
   124b0:	mov	r3, r0
   124b4:	mov	r0, sl
   124b8:	mov	r1, r5
   124bc:	mov	r2, r7
   124c0:	bl	13da0 <table_set_uint@@Base>
   124c4:	b	1282c <table_dupe@@Base+0x4c4>
   124c8:	mov	r0, r4
   124cc:	mov	r1, r5
   124d0:	mov	r2, r7
   124d4:	bl	136f4 <table_get_int8@@Base>
   124d8:	mov	r3, r0
   124dc:	mov	r0, sl
   124e0:	mov	r1, r5
   124e4:	mov	r2, r7
   124e8:	bl	13dc8 <table_set_int8@@Base>
   124ec:	b	1282c <table_dupe@@Base+0x4c4>
   124f0:	mov	r0, r4
   124f4:	mov	r1, r5
   124f8:	mov	r2, r7
   124fc:	bl	13708 <table_get_uint8@@Base>
   12500:	mov	r3, r0
   12504:	mov	r0, sl
   12508:	mov	r1, r5
   1250c:	mov	r2, r7
   12510:	bl	13df0 <table_set_uint8@@Base>
   12514:	b	1282c <table_dupe@@Base+0x4c4>
   12518:	mov	r0, r4
   1251c:	mov	r1, r5
   12520:	mov	r2, r7
   12524:	bl	1371c <table_get_int16@@Base>
   12528:	mov	r3, r0
   1252c:	mov	r0, sl
   12530:	mov	r1, r5
   12534:	mov	r2, r7
   12538:	bl	13e18 <table_set_int16@@Base>
   1253c:	b	1282c <table_dupe@@Base+0x4c4>
   12540:	mov	r0, r4
   12544:	mov	r1, r5
   12548:	mov	r2, r7
   1254c:	bl	13730 <table_get_uint16@@Base>
   12550:	mov	r3, r0
   12554:	mov	r0, sl
   12558:	mov	r1, r5
   1255c:	mov	r2, r7
   12560:	bl	13e40 <table_set_uint16@@Base>
   12564:	b	1282c <table_dupe@@Base+0x4c4>
   12568:	mov	r0, r4
   1256c:	mov	r1, r5
   12570:	mov	r2, r7
   12574:	bl	13744 <table_get_int32@@Base>
   12578:	mov	r3, r0
   1257c:	mov	r0, sl
   12580:	mov	r1, r5
   12584:	mov	r2, r7
   12588:	bl	13e68 <table_set_int32@@Base>
   1258c:	b	1282c <table_dupe@@Base+0x4c4>
   12590:	mov	r0, r4
   12594:	mov	r1, r5
   12598:	mov	r2, r7
   1259c:	bl	13758 <table_get_uint32@@Base>
   125a0:	mov	r3, r0
   125a4:	mov	r0, sl
   125a8:	mov	r1, r5
   125ac:	mov	r2, r7
   125b0:	bl	13e90 <table_set_uint32@@Base>
   125b4:	b	1282c <table_dupe@@Base+0x4c4>
   125b8:	mov	r0, r4
   125bc:	mov	r1, r5
   125c0:	mov	r2, r7
   125c4:	bl	1376c <table_get_int64@@Base>
   125c8:	stm	sp, {r0, r1}
   125cc:	mov	r0, sl
   125d0:	mov	r1, r5
   125d4:	mov	r2, r7
   125d8:	bl	13eb8 <table_set_int64@@Base>
   125dc:	b	1282c <table_dupe@@Base+0x4c4>
   125e0:	mov	r0, r4
   125e4:	mov	r1, r5
   125e8:	mov	r2, r7
   125ec:	bl	13780 <table_get_uint64@@Base>
   125f0:	stm	sp, {r0, r1}
   125f4:	mov	r0, sl
   125f8:	mov	r1, r5
   125fc:	mov	r2, r7
   12600:	bl	13eec <table_set_uint64@@Base>
   12604:	b	1282c <table_dupe@@Base+0x4c4>
   12608:	mov	r0, r4
   1260c:	mov	r1, r5
   12610:	mov	r2, r7
   12614:	bl	13794 <table_get_short@@Base>
   12618:	mov	r3, r0
   1261c:	mov	r0, sl
   12620:	mov	r1, r5
   12624:	mov	r2, r7
   12628:	bl	13f20 <table_set_short@@Base>
   1262c:	b	1282c <table_dupe@@Base+0x4c4>
   12630:	mov	r0, r4
   12634:	mov	r1, r5
   12638:	mov	r2, r7
   1263c:	bl	137a8 <table_get_ushort@@Base>
   12640:	mov	r3, r0
   12644:	mov	r0, sl
   12648:	mov	r1, r5
   1264c:	mov	r2, r7
   12650:	bl	13f48 <table_set_ushort@@Base>
   12654:	b	1282c <table_dupe@@Base+0x4c4>
   12658:	mov	r0, r4
   1265c:	mov	r1, r5
   12660:	mov	r2, r7
   12664:	bl	137bc <table_get_long@@Base>
   12668:	mov	r3, r0
   1266c:	mov	r0, sl
   12670:	mov	r1, r5
   12674:	mov	r2, r7
   12678:	bl	13f70 <table_set_long@@Base>
   1267c:	b	1282c <table_dupe@@Base+0x4c4>
   12680:	mov	r0, r4
   12684:	mov	r1, r5
   12688:	mov	r2, r7
   1268c:	bl	137d0 <table_get_ulong@@Base>
   12690:	mov	r3, r0
   12694:	mov	r0, sl
   12698:	mov	r1, r5
   1269c:	mov	r2, r7
   126a0:	bl	13f98 <table_set_ulong@@Base>
   126a4:	b	1282c <table_dupe@@Base+0x4c4>
   126a8:	mov	r0, r4
   126ac:	mov	r1, r5
   126b0:	mov	r2, r7
   126b4:	bl	137e4 <table_get_llong@@Base>
   126b8:	stm	sp, {r0, r1}
   126bc:	mov	r0, sl
   126c0:	mov	r1, r5
   126c4:	mov	r2, r7
   126c8:	bl	13fc0 <table_set_llong@@Base>
   126cc:	b	1282c <table_dupe@@Base+0x4c4>
   126d0:	mov	r0, r4
   126d4:	mov	r1, r5
   126d8:	mov	r2, r7
   126dc:	bl	137f8 <table_get_ullong@@Base>
   126e0:	stm	sp, {r0, r1}
   126e4:	mov	r0, sl
   126e8:	mov	r1, r5
   126ec:	mov	r2, r7
   126f0:	bl	13ff4 <table_set_ullong@@Base>
   126f4:	b	1282c <table_dupe@@Base+0x4c4>
   126f8:	mov	r0, r4
   126fc:	mov	r1, r5
   12700:	mov	r2, r7
   12704:	bl	1380c <table_get_float@@Base>
   12708:	mov	r0, sl
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	14028 <table_set_float@@Base>
   12718:	b	1282c <table_dupe@@Base+0x4c4>
   1271c:	mov	r0, r4
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	13820 <table_get_double@@Base>
   1272c:	mov	r0, sl
   12730:	mov	r1, r5
   12734:	mov	r2, r7
   12738:	bl	14050 <table_set_double@@Base>
   1273c:	b	1282c <table_dupe@@Base+0x4c4>
   12740:	mov	r0, r4
   12744:	mov	r1, r5
   12748:	mov	r2, r7
   1274c:	bl	13834 <table_get_ldouble@@Base>
   12750:	mov	r0, sl
   12754:	mov	r1, r5
   12758:	mov	r2, r7
   1275c:	bl	14078 <table_set_ldouble@@Base>
   12760:	b	1282c <table_dupe@@Base+0x4c4>
   12764:	mov	r0, r4
   12768:	mov	r1, r5
   1276c:	mov	r2, r7
   12770:	bl	13848 <table_get_char@@Base>
   12774:	mov	r3, r0
   12778:	mov	r0, sl
   1277c:	mov	r1, r5
   12780:	mov	r2, r7
   12784:	bl	140c0 <table_set_char@@Base>
   12788:	b	1282c <table_dupe@@Base+0x4c4>
   1278c:	mov	r0, r4
   12790:	mov	r1, r5
   12794:	mov	r2, r7
   12798:	bl	1385c <table_get_uchar@@Base>
   1279c:	mov	r3, r0
   127a0:	mov	r0, sl
   127a4:	mov	r1, r5
   127a8:	mov	r2, r7
   127ac:	bl	140e8 <table_set_uchar@@Base>
   127b0:	b	1282c <table_dupe@@Base+0x4c4>
   127b4:	mov	r0, r4
   127b8:	mov	r1, r5
   127bc:	mov	r2, r7
   127c0:	bl	13870 <table_get_string@@Base>
   127c4:	mov	r3, r0
   127c8:	mov	r0, sl
   127cc:	mov	r1, r5
   127d0:	mov	r2, r7
   127d4:	bl	140a0 <table_set_string@@Base>
   127d8:	b	1282c <table_dupe@@Base+0x4c4>
   127dc:	mov	r0, r4
   127e0:	mov	r1, r5
   127e4:	mov	r2, r7
   127e8:	bl	136b8 <table_get_bool@@Base>
   127ec:	mov	r3, r0
   127f0:	mov	r0, sl
   127f4:	mov	r1, r5
   127f8:	mov	r2, r7
   127fc:	bl	13d50 <table_set_bool@@Base>
   12800:	b	1282c <table_dupe@@Base+0x4c4>
   12804:	mov	r0, r4
   12808:	mov	r1, r5
   1280c:	mov	r2, r7
   12810:	bl	13874 <table_get_ptr@@Base>
   12814:	str	r0, [sp, #8]
   12818:	mov	r0, sl
   1281c:	mov	r1, r5
   12820:	mov	r2, r7
   12824:	mov	r3, r9
   12828:	bl	14110 <table_set_ptr@@Base>
   1282c:	add	r7, r7, #1
   12830:	cmp	r6, r7
   12834:	bne	123fc <table_dupe@@Base+0x94>
   12838:	add	r5, r5, #1
   1283c:	cmp	r5, r8
   12840:	bne	123e8 <table_dupe@@Base+0x80>
   12844:	mov	r0, sl
   12848:	sub	sp, fp, #28
   1284c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012850 <table_get_major_version@@Base>:
   12850:	mov	r0, #0
   12854:	bx	lr

00012858 <table_get_minor_version@@Base>:
   12858:	mov	r0, #0
   1285c:	bx	lr

00012860 <table_get_patch_version@@Base>:
   12860:	mov	r0, #0
   12864:	bx	lr

00012868 <table_get_version@@Base>:
   12868:	movw	r0, #19824	; 0x4d70
   1286c:	movt	r0, #1
   12870:	bx	lr

00012874 <table_get_callback_length@@Base>:
   12874:	ldr	r0, [r0, #32]
   12878:	bx	lr

0001287c <table_register_callback@@Base>:
   1287c:	push	{r4, r5, r6, r7, fp, lr}
   12880:	add	fp, sp, #16
   12884:	sub	sp, sp, #8
   12888:	mov	r5, r3
   1288c:	mov	r6, r2
   12890:	mov	r7, r1
   12894:	mov	r4, r0
   12898:	bl	12910 <table_register_callback@@Base+0x94>
   1289c:	cmp	r0, #1
   128a0:	blt	128bc <table_register_callback@@Base+0x40>
   128a4:	ldr	r1, [r4, #44]	; 0x2c
   128a8:	ldr	r2, [r1, r0, lsl #2]
   128ac:	orr	r2, r2, r5
   128b0:	str	r2, [r1, r0, lsl #2]
   128b4:	sub	sp, fp, #16
   128b8:	pop	{r4, r5, r6, r7, fp, pc}
   128bc:	ldr	r0, [r4, #32]
   128c0:	ldr	r1, [r4, #48]	; 0x30
   128c4:	udiv	r2, r0, r1
   128c8:	mls	r0, r2, r1, r0
   128cc:	cmp	r0, #0
   128d0:	bne	128dc <table_register_callback@@Base+0x60>
   128d4:	mov	r0, r4
   128d8:	bl	12968 <table_register_callback@@Base+0xec>
   128dc:	mov	r0, r4
   128e0:	bl	12874 <table_get_callback_length@@Base>
   128e4:	mov	r1, r0
   128e8:	str	r5, [sp]
   128ec:	mov	r0, r4
   128f0:	mov	r2, r7
   128f4:	mov	r3, r6
   128f8:	bl	129c0 <table_register_callback@@Base+0x144>
   128fc:	ldr	r0, [r4, #32]
   12900:	add	r0, r0, #1
   12904:	str	r0, [r4, #32]
   12908:	sub	sp, fp, #16
   1290c:	pop	{r4, r5, r6, r7, fp, pc}
   12910:	push	{r4, sl, fp, lr}
   12914:	add	fp, sp, #8
   12918:	mov	ip, r0
   1291c:	ldr	r3, [r0, #32]
   12920:	mvn	r0, #0
   12924:	cmp	r3, #1
   12928:	poplt	{r4, sl, fp, pc}
   1292c:	ldr	lr, [ip, #36]	; 0x24
   12930:	mov	r3, #0
   12934:	ldr	r4, [lr, r3, lsl #2]
   12938:	cmp	r4, r1
   1293c:	bne	12954 <table_register_callback@@Base+0xd8>
   12940:	ldr	r4, [ip, #40]	; 0x28
   12944:	ldr	r4, [r4, r3, lsl #2]
   12948:	cmp	r4, r2
   1294c:	moveq	r0, r3
   12950:	popeq	{r4, sl, fp, pc}
   12954:	add	r3, r3, #1
   12958:	ldr	r4, [ip, #32]
   1295c:	cmp	r3, r4
   12960:	blt	12934 <table_register_callback@@Base+0xb8>
   12964:	pop	{r4, sl, fp, pc}
   12968:	push	{r4, sl, fp, lr}
   1296c:	add	fp, sp, #8
   12970:	mov	r4, r0
   12974:	ldr	r0, [r0, #36]	; 0x24
   12978:	ldr	r1, [r4, #48]	; 0x30
   1297c:	ldr	r2, [r4, #52]	; 0x34
   12980:	add	r1, r2, r1
   12984:	str	r1, [r4, #52]	; 0x34
   12988:	lsl	r1, r1, #2
   1298c:	bl	11edc <realloc@plt>
   12990:	str	r0, [r4, #36]	; 0x24
   12994:	ldr	r0, [r4, #40]	; 0x28
   12998:	ldr	r1, [r4, #52]	; 0x34
   1299c:	lsl	r1, r1, #2
   129a0:	bl	11edc <realloc@plt>
   129a4:	str	r0, [r4, #40]	; 0x28
   129a8:	ldr	r0, [r4, #44]	; 0x2c
   129ac:	ldr	r1, [r4, #52]	; 0x34
   129b0:	lsl	r1, r1, #2
   129b4:	bl	11edc <realloc@plt>
   129b8:	str	r0, [r4, #44]	; 0x2c
   129bc:	pop	{r4, sl, fp, pc}
   129c0:	ldr	ip, [r0, #36]	; 0x24
   129c4:	str	r2, [ip, r1, lsl #2]
   129c8:	ldr	r2, [r0, #40]	; 0x28
   129cc:	str	r3, [r2, r1, lsl #2]
   129d0:	ldr	r0, [r0, #44]	; 0x2c
   129d4:	ldr	r2, [sp]
   129d8:	str	r2, [r0, r1, lsl #2]
   129dc:	bx	lr

000129e0 <table_unregister_callback@@Base>:
   129e0:	push	{r4, sl, fp, lr}
   129e4:	add	fp, sp, #8
   129e8:	mov	r4, r0
   129ec:	bl	12910 <table_register_callback@@Base+0x94>
   129f0:	cmn	r0, #1
   129f4:	popeq	{r4, sl, fp, pc}
   129f8:	ldr	r1, [r4, #32]
   129fc:	sub	r2, r1, #1
   12a00:	cmp	r0, r2
   12a04:	bge	12a4c <table_unregister_callback@@Base+0x6c>
   12a08:	mov	r1, #4
   12a0c:	add	r1, r1, r0, lsl #2
   12a10:	ldr	r2, [r4, #36]	; 0x24
   12a14:	ldr	r3, [r2, r1]!
   12a18:	str	r3, [r2, #-4]
   12a1c:	ldr	r2, [r4, #40]	; 0x28
   12a20:	ldr	r3, [r2, r1]!
   12a24:	str	r3, [r2, #-4]
   12a28:	ldr	r2, [r4, #44]	; 0x2c
   12a2c:	ldr	r3, [r2, r1]!
   12a30:	str	r3, [r2, #-4]
   12a34:	add	r1, r1, #4
   12a38:	add	r0, r0, #1
   12a3c:	ldr	r2, [r4, #32]
   12a40:	sub	r2, r2, #1
   12a44:	cmp	r0, r2
   12a48:	blt	12a10 <table_unregister_callback@@Base+0x30>
   12a4c:	str	r2, [r4, #32]
   12a50:	ldr	r0, [r4, #48]	; 0x30
   12a54:	udiv	r1, r2, r0
   12a58:	mls	r0, r1, r0, r2
   12a5c:	cmp	r0, #0
   12a60:	beq	12a68 <table_unregister_callback@@Base+0x88>
   12a64:	pop	{r4, sl, fp, pc}
   12a68:	mov	r0, r4
   12a6c:	pop	{r4, sl, fp, lr}
   12a70:	b	12a74 <table_unregister_callback@@Base+0x94>
   12a74:	push	{r4, sl, fp, lr}
   12a78:	add	fp, sp, #8
   12a7c:	mov	r4, r0
   12a80:	ldr	r0, [r0, #36]	; 0x24
   12a84:	ldr	r1, [r4, #48]	; 0x30
   12a88:	ldr	r2, [r4, #52]	; 0x34
   12a8c:	subs	r1, r2, r1
   12a90:	str	r1, [r4, #52]	; 0x34
   12a94:	beq	12ad0 <table_unregister_callback@@Base+0xf0>
   12a98:	lsl	r1, r1, #2
   12a9c:	bl	11edc <realloc@plt>
   12aa0:	str	r0, [r4, #36]	; 0x24
   12aa4:	ldr	r0, [r4, #40]	; 0x28
   12aa8:	ldr	r1, [r4, #52]	; 0x34
   12aac:	lsl	r1, r1, #2
   12ab0:	bl	11edc <realloc@plt>
   12ab4:	str	r0, [r4, #40]	; 0x28
   12ab8:	ldr	r0, [r4, #44]	; 0x2c
   12abc:	ldr	r1, [r4, #52]	; 0x34
   12ac0:	lsl	r1, r1, #2
   12ac4:	bl	11edc <realloc@plt>
   12ac8:	str	r0, [r4, #44]	; 0x2c
   12acc:	pop	{r4, sl, fp, pc}
   12ad0:	bl	11ed0 <free@plt>
   12ad4:	ldr	r0, [r4, #40]	; 0x28
   12ad8:	bl	11ed0 <free@plt>
   12adc:	ldr	r0, [r4, #44]	; 0x2c
   12ae0:	bl	11ed0 <free@plt>
   12ae4:	mov	r0, #0
   12ae8:	str	r0, [r4, #36]	; 0x24
   12aec:	str	r0, [r4, #40]	; 0x28
   12af0:	str	r0, [r4, #44]	; 0x2c
   12af4:	pop	{r4, sl, fp, pc}

00012af8 <table_notify@@Base>:
   12af8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12afc:	add	fp, sp, #24
   12b00:	sub	sp, sp, #8
   12b04:	mov	r7, r0
   12b08:	ldr	r0, [r0, #32]
   12b0c:	cmp	r0, #1
   12b10:	blt	12b6c <table_notify@@Base+0x74>
   12b14:	mov	r4, r3
   12b18:	mov	r8, r2
   12b1c:	mov	r9, r1
   12b20:	mov	r5, #0
   12b24:	ldr	r0, [r7, #44]	; 0x2c
   12b28:	ldr	r0, [r0, r5, lsl #2]
   12b2c:	tst	r0, r4
   12b30:	beq	12b5c <table_notify@@Base+0x64>
   12b34:	ldr	r0, [r7, #36]	; 0x24
   12b38:	ldr	r1, [r7, #40]	; 0x28
   12b3c:	ldr	r6, [r0, r5, lsl #2]
   12b40:	ldr	r0, [r1, r5, lsl #2]
   12b44:	str	r0, [sp]
   12b48:	mov	r0, r7
   12b4c:	mov	r1, r9
   12b50:	mov	r2, r8
   12b54:	mov	r3, r4
   12b58:	blx	r6
   12b5c:	ldr	r0, [r7, #32]
   12b60:	add	r5, r5, #1
   12b64:	cmp	r5, r0
   12b68:	blt	12b24 <table_notify@@Base+0x2c>
   12b6c:	sub	sp, fp, #24
   12b70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b74 <table_column_init@@Base>:
   12b74:	push	{r4, r5, r6, r7, fp, lr}
   12b78:	add	fp, sp, #16
   12b7c:	mov	r4, r3
   12b80:	mov	r5, r2
   12b84:	bl	12bbc <table_get_col_ptr@@Base>
   12b88:	mov	r6, r0
   12b8c:	mov	r0, r5
   12b90:	bl	11f24 <strlen@plt>
   12b94:	add	r0, r0, #1
   12b98:	bl	11f00 <malloc@plt>
   12b9c:	str	r0, [r6]
   12ba0:	ldr	r7, [fp, #8]
   12ba4:	cmp	r0, #0
   12ba8:	beq	12bb4 <table_column_init@@Base+0x40>
   12bac:	mov	r1, r5
   12bb0:	bl	11ee8 <strcpy@plt>
   12bb4:	stmib	r6, {r4, r7}
   12bb8:	pop	{r4, r5, r6, r7, fp, pc}

00012bbc <table_get_col_ptr@@Base>:
   12bbc:	ldr	r0, [r0]
   12bc0:	add	r1, r1, r1, lsl #1
   12bc4:	add	r0, r0, r1, lsl #2
   12bc8:	bx	lr

00012bcc <table_column_destroy@@Base>:
   12bcc:	push	{fp, lr}
   12bd0:	mov	fp, sp
   12bd4:	bl	12bbc <table_get_col_ptr@@Base>
   12bd8:	ldr	r0, [r0]
   12bdc:	cmp	r0, #0
   12be0:	popeq	{fp, pc}
   12be4:	pop	{fp, lr}
   12be8:	b	11ed0 <free@plt>

00012bec <table_get_column_length@@Base>:
   12bec:	ldr	r0, [r0, #4]
   12bf0:	bx	lr

00012bf4 <table_get_column@@Base>:
   12bf4:	push	{r4, r5, r6, r7, fp, lr}
   12bf8:	add	fp, sp, #16
   12bfc:	mov	r6, r1
   12c00:	mov	r7, r0
   12c04:	bl	12bec <table_get_column_length@@Base>
   12c08:	mov	r4, r0
   12c0c:	mov	r5, #0
   12c10:	cmp	r0, #1
   12c14:	blt	12c40 <table_get_column@@Base+0x4c>
   12c18:	mov	r0, r7
   12c1c:	mov	r1, r5
   12c20:	bl	12c50 <table_get_column_name@@Base>
   12c24:	mov	r1, r6
   12c28:	bl	11eb8 <strcmp@plt>
   12c2c:	cmp	r0, #0
   12c30:	beq	12c40 <table_get_column@@Base+0x4c>
   12c34:	add	r5, r5, #1
   12c38:	cmp	r5, r4
   12c3c:	blt	12c18 <table_get_column@@Base+0x24>
   12c40:	cmp	r5, r4
   12c44:	mvneq	r5, #0
   12c48:	mov	r0, r5
   12c4c:	pop	{r4, r5, r6, r7, fp, pc}

00012c50 <table_get_column_name@@Base>:
   12c50:	push	{fp, lr}
   12c54:	mov	fp, sp
   12c58:	bl	12bbc <table_get_col_ptr@@Base>
   12c5c:	ldr	r0, [r0]
   12c60:	pop	{fp, pc}

00012c64 <table_get_column_data_type@@Base>:
   12c64:	push	{fp, lr}
   12c68:	mov	fp, sp
   12c6c:	bl	12bbc <table_get_col_ptr@@Base>
   12c70:	ldr	r0, [r0, #4]
   12c74:	pop	{fp, pc}

00012c78 <table_add_column@@Base>:
   12c78:	push	{r4, r5, r6, sl, fp, lr}
   12c7c:	add	fp, sp, #16
   12c80:	mov	r5, r2
   12c84:	mov	r6, r1
   12c88:	mov	r4, r0
   12c8c:	bl	12bec <table_get_column_length@@Base>
   12c90:	ldr	r1, [r4, #8]
   12c94:	udiv	r2, r0, r1
   12c98:	mls	r0, r2, r1, r0
   12c9c:	cmp	r0, #0
   12ca0:	bne	12cac <table_add_column@@Base+0x34>
   12ca4:	mov	r0, r4
   12ca8:	bl	12ce8 <table_add_column@@Base+0x70>
   12cac:	mov	r0, r4
   12cb0:	mov	r1, r6
   12cb4:	mov	r2, r5
   12cb8:	bl	12d64 <table_add_column@@Base+0xec>
   12cbc:	mov	r0, r4
   12cc0:	bl	12bec <table_get_column_length@@Base>
   12cc4:	mov	r2, r0
   12cc8:	mov	r0, r4
   12ccc:	mvn	r1, #0
   12cd0:	mov	r3, #8
   12cd4:	bl	12af8 <table_notify@@Base>
   12cd8:	ldr	r0, [r4, #4]
   12cdc:	add	r1, r0, #1
   12ce0:	str	r1, [r4, #4]
   12ce4:	pop	{r4, r5, r6, sl, fp, pc}
   12ce8:	push	{r4, r5, r6, r7, fp, lr}
   12cec:	add	fp, sp, #16
   12cf0:	mov	r4, r0
   12cf4:	ldr	r0, [r0]
   12cf8:	ldr	r1, [r4, #8]
   12cfc:	ldr	r2, [r4, #12]
   12d00:	add	r1, r2, r1
   12d04:	str	r1, [r4, #12]
   12d08:	add	r1, r1, r1, lsl #1
   12d0c:	lsl	r1, r1, #2
   12d10:	bl	11edc <realloc@plt>
   12d14:	str	r0, [r4]
   12d18:	mov	r0, r4
   12d1c:	bl	13910 <table_get_row_length@@Base>
   12d20:	cmp	r0, #1
   12d24:	poplt	{r4, r5, r6, r7, fp, pc}
   12d28:	mov	r5, r0
   12d2c:	mov	r6, #0
   12d30:	mov	r0, r4
   12d34:	mov	r1, r6
   12d38:	bl	138a0 <table_get_row_ptr@@Base>
   12d3c:	mov	r7, r0
   12d40:	ldr	r0, [r0]
   12d44:	ldr	r1, [r4, #12]
   12d48:	lsl	r1, r1, #2
   12d4c:	bl	11edc <realloc@plt>
   12d50:	str	r0, [r7]
   12d54:	add	r6, r6, #1
   12d58:	cmp	r5, r6
   12d5c:	bne	12d30 <table_add_column@@Base+0xb8>
   12d60:	pop	{r4, r5, r6, r7, fp, pc}
   12d64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d68:	add	fp, sp, #24
   12d6c:	sub	sp, sp, #8
   12d70:	mov	r7, r2
   12d74:	mov	r8, r1
   12d78:	mov	r4, r0
   12d7c:	bl	13910 <table_get_row_length@@Base>
   12d80:	mov	r5, r0
   12d84:	mov	r0, r4
   12d88:	bl	12bec <table_get_column_length@@Base>
   12d8c:	mov	r6, r0
   12d90:	mov	r0, r7
   12d94:	bl	1368c <table_get_default_compare_function_for_data_type@@Base>
   12d98:	str	r0, [sp]
   12d9c:	mov	r0, r4
   12da0:	mov	r1, r6
   12da4:	mov	r2, r8
   12da8:	mov	r3, r7
   12dac:	bl	12b74 <table_column_init@@Base>
   12db0:	cmp	r5, #1
   12db4:	blt	12dd8 <table_add_column@@Base+0x160>
   12db8:	mov	r7, #0
   12dbc:	mov	r0, r4
   12dc0:	mov	r1, r7
   12dc4:	mov	r2, r6
   12dc8:	bl	14130 <table_cell_init@@Base>
   12dcc:	add	r7, r7, #1
   12dd0:	cmp	r5, r7
   12dd4:	bne	12dbc <table_add_column@@Base+0x144>
   12dd8:	sub	sp, fp, #24
   12ddc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012de0 <table_remove_column@@Base>:
   12de0:	push	{r4, r5, fp, lr}
   12de4:	add	fp, sp, #8
   12de8:	mov	r4, r1
   12dec:	mov	r5, r0
   12df0:	bl	12e40 <table_remove_column@@Base+0x60>
   12df4:	ldr	r0, [r5, #4]
   12df8:	sub	r0, r0, #1
   12dfc:	str	r0, [r5, #4]
   12e00:	mov	r0, r5
   12e04:	bl	12bec <table_get_column_length@@Base>
   12e08:	ldr	r1, [r5, #8]
   12e0c:	udiv	r2, r0, r1
   12e10:	mls	r0, r2, r1, r0
   12e14:	cmp	r0, #0
   12e18:	bne	12e24 <table_remove_column@@Base+0x44>
   12e1c:	mov	r0, r5
   12e20:	bl	12f04 <table_remove_column@@Base+0x124>
   12e24:	mov	r0, r5
   12e28:	mvn	r1, #0
   12e2c:	mov	r2, r4
   12e30:	mov	r3, #16
   12e34:	bl	12af8 <table_notify@@Base>
   12e38:	mov	r0, #0
   12e3c:	pop	{r4, r5, fp, pc}
   12e40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e44:	add	fp, sp, #24
   12e48:	mov	r4, r1
   12e4c:	mov	r5, r0
   12e50:	bl	12bcc <table_column_destroy@@Base>
   12e54:	mov	r0, r5
   12e58:	bl	12bec <table_get_column_length@@Base>
   12e5c:	sub	r6, r0, #1
   12e60:	cmp	r6, r4
   12e64:	ble	12e98 <table_remove_column@@Base+0xb8>
   12e68:	sub	r0, r6, r4
   12e6c:	add	r1, r4, r4, lsl #1
   12e70:	lsl	r1, r1, #2
   12e74:	ldr	r2, [r5]
   12e78:	add	r2, r2, r1
   12e7c:	vldr	d16, [r2, #12]
   12e80:	ldr	r3, [r2, #20]
   12e84:	str	r3, [r2, #8]
   12e88:	vstr	d16, [r2]
   12e8c:	subs	r0, r0, #1
   12e90:	add	r1, r1, #12
   12e94:	bne	12e74 <table_remove_column@@Base+0x94>
   12e98:	mov	r0, r5
   12e9c:	bl	13910 <table_get_row_length@@Base>
   12ea0:	cmp	r0, #1
   12ea4:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ea8:	mov	r8, r0
   12eac:	mov	r7, #0
   12eb0:	mov	r0, r5
   12eb4:	mov	r1, r7
   12eb8:	mov	r2, r4
   12ebc:	bl	14164 <table_cell_destroy@@Base>
   12ec0:	mov	r0, r5
   12ec4:	mov	r1, r7
   12ec8:	bl	138a0 <table_get_row_ptr@@Base>
   12ecc:	cmp	r6, r4
   12ed0:	ble	12ef4 <table_remove_column@@Base+0x114>
   12ed4:	mov	r1, r4
   12ed8:	ldr	r2, [r0]
   12edc:	add	r3, r2, r1, lsl #2
   12ee0:	ldr	r3, [r3, #4]
   12ee4:	str	r3, [r2, r1, lsl #2]
   12ee8:	add	r1, r1, #1
   12eec:	cmp	r6, r1
   12ef0:	bne	12ed8 <table_remove_column@@Base+0xf8>
   12ef4:	add	r7, r7, #1
   12ef8:	cmp	r7, r8
   12efc:	bne	12eb0 <table_remove_column@@Base+0xd0>
   12f00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f04:	push	{r4, r5, r6, r7, fp, lr}
   12f08:	add	fp, sp, #16
   12f0c:	mov	r4, r0
   12f10:	ldr	r0, [r0]
   12f14:	ldr	r1, [r4, #8]
   12f18:	ldr	r2, [r4, #12]
   12f1c:	sub	r1, r2, r1
   12f20:	str	r1, [r4, #12]
   12f24:	add	r1, r1, r1, lsl #1
   12f28:	lsl	r1, r1, #2
   12f2c:	bl	11edc <realloc@plt>
   12f30:	str	r0, [r4]
   12f34:	mov	r0, r4
   12f38:	bl	13910 <table_get_row_length@@Base>
   12f3c:	cmp	r0, #1
   12f40:	poplt	{r4, r5, r6, r7, fp, pc}
   12f44:	mov	r5, r0
   12f48:	mov	r6, #0
   12f4c:	mov	r0, r4
   12f50:	mov	r1, r6
   12f54:	bl	138a0 <table_get_row_ptr@@Base>
   12f58:	mov	r7, r0
   12f5c:	ldr	r0, [r0]
   12f60:	ldr	r1, [r4, #12]
   12f64:	lsl	r1, r1, #2
   12f68:	bl	11edc <realloc@plt>
   12f6c:	str	r0, [r7]
   12f70:	add	r6, r6, #1
   12f74:	cmp	r5, r6
   12f78:	bne	12f4c <table_remove_column@@Base+0x16c>
   12f7c:	pop	{r4, r5, r6, r7, fp, pc}

00012f80 <table_get_column_compare_function@@Base>:
   12f80:	push	{fp, lr}
   12f84:	mov	fp, sp
   12f88:	bl	12bbc <table_get_col_ptr@@Base>
   12f8c:	ldr	r0, [r0, #8]
   12f90:	pop	{fp, pc}

00012f94 <table_set_column_compare_function@@Base>:
   12f94:	push	{r4, sl, fp, lr}
   12f98:	add	fp, sp, #8
   12f9c:	mov	r4, r2
   12fa0:	bl	12bbc <table_get_col_ptr@@Base>
   12fa4:	str	r4, [r0, #8]
   12fa8:	pop	{r4, sl, fp, pc}

00012fac <table_compare_bool@@Base>:
   12fac:	cmp	r0, #0
   12fb0:	beq	12fe4 <table_compare_bool@@Base+0x38>
   12fb4:	cmp	r1, #0
   12fb8:	moveq	r1, #1
   12fbc:	moveq	r0, r1
   12fc0:	bxeq	lr
   12fc4:	ldrb	r2, [r1]
   12fc8:	ldrb	r0, [r0]
   12fcc:	mov	r1, #0
   12fd0:	cmp	r0, r2
   12fd4:	mvncc	r1, #0
   12fd8:	movwhi	r1, #1
   12fdc:	mov	r0, r1
   12fe0:	bx	lr
   12fe4:	cmp	r1, #0
   12fe8:	mvnne	r1, #0
   12fec:	mov	r0, r1
   12ff0:	bx	lr

00012ff4 <table_compare_int@@Base>:
   12ff4:	cmp	r0, #0
   12ff8:	beq	1302c <table_compare_int@@Base+0x38>
   12ffc:	cmp	r1, #0
   13000:	moveq	r1, #1
   13004:	moveq	r0, r1
   13008:	bxeq	lr
   1300c:	ldr	r2, [r1]
   13010:	ldr	r0, [r0]
   13014:	mov	r1, #0
   13018:	cmp	r0, r2
   1301c:	mvnlt	r1, #0
   13020:	movwgt	r1, #1
   13024:	mov	r0, r1
   13028:	bx	lr
   1302c:	cmp	r1, #0
   13030:	mvnne	r1, #0
   13034:	mov	r0, r1
   13038:	bx	lr

0001303c <table_compare_uint@@Base>:
   1303c:	cmp	r0, #0
   13040:	beq	13074 <table_compare_uint@@Base+0x38>
   13044:	cmp	r1, #0
   13048:	moveq	r1, #1
   1304c:	moveq	r0, r1
   13050:	bxeq	lr
   13054:	ldr	r2, [r1]
   13058:	ldr	r0, [r0]
   1305c:	mov	r1, #0
   13060:	cmp	r0, r2
   13064:	mvncc	r1, #0
   13068:	movwhi	r1, #1
   1306c:	mov	r0, r1
   13070:	bx	lr
   13074:	cmp	r1, #0
   13078:	mvnne	r1, #0
   1307c:	mov	r0, r1
   13080:	bx	lr

00013084 <table_compare_int8@@Base>:
   13084:	cmp	r0, #0
   13088:	beq	130bc <table_compare_int8@@Base+0x38>
   1308c:	cmp	r1, #0
   13090:	moveq	r1, #1
   13094:	moveq	r0, r1
   13098:	bxeq	lr
   1309c:	ldrsb	r2, [r1]
   130a0:	ldrsb	r0, [r0]
   130a4:	mov	r1, #0
   130a8:	cmp	r0, r2
   130ac:	mvnlt	r1, #0
   130b0:	movwgt	r1, #1
   130b4:	mov	r0, r1
   130b8:	bx	lr
   130bc:	cmp	r1, #0
   130c0:	mvnne	r1, #0
   130c4:	mov	r0, r1
   130c8:	bx	lr

000130cc <table_compare_uint8@@Base>:
   130cc:	cmp	r0, #0
   130d0:	beq	13104 <table_compare_uint8@@Base+0x38>
   130d4:	cmp	r1, #0
   130d8:	moveq	r1, #1
   130dc:	moveq	r0, r1
   130e0:	bxeq	lr
   130e4:	ldrb	r2, [r1]
   130e8:	ldrb	r0, [r0]
   130ec:	mov	r1, #0
   130f0:	cmp	r0, r2
   130f4:	mvncc	r1, #0
   130f8:	movwhi	r1, #1
   130fc:	mov	r0, r1
   13100:	bx	lr
   13104:	cmp	r1, #0
   13108:	mvnne	r1, #0
   1310c:	mov	r0, r1
   13110:	bx	lr

00013114 <table_compare_int16@@Base>:
   13114:	cmp	r0, #0
   13118:	beq	1314c <table_compare_int16@@Base+0x38>
   1311c:	cmp	r1, #0
   13120:	moveq	r1, #1
   13124:	moveq	r0, r1
   13128:	bxeq	lr
   1312c:	ldrsh	r2, [r1]
   13130:	ldrsh	r0, [r0]
   13134:	mov	r1, #0
   13138:	cmp	r0, r2
   1313c:	mvnlt	r1, #0
   13140:	movwgt	r1, #1
   13144:	mov	r0, r1
   13148:	bx	lr
   1314c:	cmp	r1, #0
   13150:	mvnne	r1, #0
   13154:	mov	r0, r1
   13158:	bx	lr

0001315c <table_compare_uint16@@Base>:
   1315c:	cmp	r0, #0
   13160:	beq	13194 <table_compare_uint16@@Base+0x38>
   13164:	cmp	r1, #0
   13168:	moveq	r1, #1
   1316c:	moveq	r0, r1
   13170:	bxeq	lr
   13174:	ldrh	r2, [r1]
   13178:	ldrh	r0, [r0]
   1317c:	mov	r1, #0
   13180:	cmp	r0, r2
   13184:	mvncc	r1, #0
   13188:	movwhi	r1, #1
   1318c:	mov	r0, r1
   13190:	bx	lr
   13194:	cmp	r1, #0
   13198:	mvnne	r1, #0
   1319c:	mov	r0, r1
   131a0:	bx	lr

000131a4 <table_compare_int32@@Base>:
   131a4:	cmp	r0, #0
   131a8:	beq	131dc <table_compare_int32@@Base+0x38>
   131ac:	cmp	r1, #0
   131b0:	moveq	r1, #1
   131b4:	moveq	r0, r1
   131b8:	bxeq	lr
   131bc:	ldr	r2, [r1]
   131c0:	ldr	r0, [r0]
   131c4:	mov	r1, #0
   131c8:	cmp	r0, r2
   131cc:	mvnlt	r1, #0
   131d0:	movwgt	r1, #1
   131d4:	mov	r0, r1
   131d8:	bx	lr
   131dc:	cmp	r1, #0
   131e0:	mvnne	r1, #0
   131e4:	mov	r0, r1
   131e8:	bx	lr

000131ec <table_compare_uint32@@Base>:
   131ec:	cmp	r0, #0
   131f0:	beq	13224 <table_compare_uint32@@Base+0x38>
   131f4:	cmp	r1, #0
   131f8:	moveq	r1, #1
   131fc:	moveq	r0, r1
   13200:	bxeq	lr
   13204:	ldr	r2, [r1]
   13208:	ldr	r0, [r0]
   1320c:	mov	r1, #0
   13210:	cmp	r0, r2
   13214:	mvncc	r1, #0
   13218:	movwhi	r1, #1
   1321c:	mov	r0, r1
   13220:	bx	lr
   13224:	cmp	r1, #0
   13228:	mvnne	r1, #0
   1322c:	mov	r0, r1
   13230:	bx	lr

00013234 <table_compare_int64@@Base>:
   13234:	cmp	r0, #0
   13238:	beq	1328c <table_compare_int64@@Base+0x58>
   1323c:	cmp	r1, #0
   13240:	moveq	r1, #1
   13244:	moveq	r0, r1
   13248:	bxeq	lr
   1324c:	push	{r5, r7, fp, lr}
   13250:	add	fp, sp, #8
   13254:	ldm	r1, {r2, r7}
   13258:	ldm	r0, {r0, r5}
   1325c:	mov	r1, #0
   13260:	subs	r3, r0, r2
   13264:	sbcs	r3, r5, r7
   13268:	movwlt	r1, #1
   1326c:	cmp	r1, #0
   13270:	mvnne	r1, #0
   13274:	subs	r0, r2, r0
   13278:	sbcs	r0, r7, r5
   1327c:	movwlt	r1, #1
   13280:	pop	{r5, r7, fp, lr}
   13284:	mov	r0, r1
   13288:	bx	lr
   1328c:	cmp	r1, #0
   13290:	mvnne	r1, #0
   13294:	mov	r0, r1
   13298:	bx	lr

0001329c <table_compare_uint64@@Base>:
   1329c:	cmp	r0, #0
   132a0:	beq	132f4 <table_compare_uint64@@Base+0x58>
   132a4:	cmp	r1, #0
   132a8:	moveq	r1, #1
   132ac:	moveq	r0, r1
   132b0:	bxeq	lr
   132b4:	push	{r5, r7, fp, lr}
   132b8:	add	fp, sp, #8
   132bc:	ldm	r1, {r2, r7}
   132c0:	ldm	r0, {r0, r5}
   132c4:	mov	r1, #0
   132c8:	subs	r3, r0, r2
   132cc:	sbcs	r3, r5, r7
   132d0:	movwcc	r1, #1
   132d4:	cmp	r1, #0
   132d8:	mvnne	r1, #0
   132dc:	subs	r0, r2, r0
   132e0:	sbcs	r0, r7, r5
   132e4:	movwcc	r1, #1
   132e8:	pop	{r5, r7, fp, lr}
   132ec:	mov	r0, r1
   132f0:	bx	lr
   132f4:	cmp	r1, #0
   132f8:	mvnne	r1, #0
   132fc:	mov	r0, r1
   13300:	bx	lr

00013304 <table_compare_short@@Base>:
   13304:	cmp	r0, #0
   13308:	beq	1333c <table_compare_short@@Base+0x38>
   1330c:	cmp	r1, #0
   13310:	moveq	r1, #1
   13314:	moveq	r0, r1
   13318:	bxeq	lr
   1331c:	ldrsh	r2, [r1]
   13320:	ldrsh	r0, [r0]
   13324:	mov	r1, #0
   13328:	cmp	r0, r2
   1332c:	mvnlt	r1, #0
   13330:	movwgt	r1, #1
   13334:	mov	r0, r1
   13338:	bx	lr
   1333c:	cmp	r1, #0
   13340:	mvnne	r1, #0
   13344:	mov	r0, r1
   13348:	bx	lr

0001334c <table_compare_ushort@@Base>:
   1334c:	cmp	r0, #0
   13350:	beq	13384 <table_compare_ushort@@Base+0x38>
   13354:	cmp	r1, #0
   13358:	moveq	r1, #1
   1335c:	moveq	r0, r1
   13360:	bxeq	lr
   13364:	ldrh	r2, [r1]
   13368:	ldrh	r0, [r0]
   1336c:	mov	r1, #0
   13370:	cmp	r0, r2
   13374:	mvncc	r1, #0
   13378:	movwhi	r1, #1
   1337c:	mov	r0, r1
   13380:	bx	lr
   13384:	cmp	r1, #0
   13388:	mvnne	r1, #0
   1338c:	mov	r0, r1
   13390:	bx	lr

00013394 <table_compare_long@@Base>:
   13394:	cmp	r0, #0
   13398:	beq	133cc <table_compare_long@@Base+0x38>
   1339c:	cmp	r1, #0
   133a0:	moveq	r1, #1
   133a4:	moveq	r0, r1
   133a8:	bxeq	lr
   133ac:	ldr	r2, [r1]
   133b0:	ldr	r0, [r0]
   133b4:	mov	r1, #0
   133b8:	cmp	r0, r2
   133bc:	mvnlt	r1, #0
   133c0:	movwgt	r1, #1
   133c4:	mov	r0, r1
   133c8:	bx	lr
   133cc:	cmp	r1, #0
   133d0:	mvnne	r1, #0
   133d4:	mov	r0, r1
   133d8:	bx	lr

000133dc <table_compare_ulong@@Base>:
   133dc:	cmp	r0, #0
   133e0:	beq	13414 <table_compare_ulong@@Base+0x38>
   133e4:	cmp	r1, #0
   133e8:	moveq	r1, #1
   133ec:	moveq	r0, r1
   133f0:	bxeq	lr
   133f4:	ldr	r2, [r1]
   133f8:	ldr	r0, [r0]
   133fc:	mov	r1, #0
   13400:	cmp	r0, r2
   13404:	mvncc	r1, #0
   13408:	movwhi	r1, #1
   1340c:	mov	r0, r1
   13410:	bx	lr
   13414:	cmp	r1, #0
   13418:	mvnne	r1, #0
   1341c:	mov	r0, r1
   13420:	bx	lr

00013424 <table_compare_llong@@Base>:
   13424:	cmp	r0, #0
   13428:	beq	1347c <table_compare_llong@@Base+0x58>
   1342c:	cmp	r1, #0
   13430:	moveq	r1, #1
   13434:	moveq	r0, r1
   13438:	bxeq	lr
   1343c:	push	{r5, r7, fp, lr}
   13440:	add	fp, sp, #8
   13444:	ldm	r1, {r2, r7}
   13448:	ldm	r0, {r0, r5}
   1344c:	mov	r1, #0
   13450:	subs	r3, r0, r2
   13454:	sbcs	r3, r5, r7
   13458:	movwlt	r1, #1
   1345c:	cmp	r1, #0
   13460:	mvnne	r1, #0
   13464:	subs	r0, r2, r0
   13468:	sbcs	r0, r7, r5
   1346c:	movwlt	r1, #1
   13470:	pop	{r5, r7, fp, lr}
   13474:	mov	r0, r1
   13478:	bx	lr
   1347c:	cmp	r1, #0
   13480:	mvnne	r1, #0
   13484:	mov	r0, r1
   13488:	bx	lr

0001348c <table_compare_ullong@@Base>:
   1348c:	cmp	r0, #0
   13490:	beq	134c4 <table_compare_ullong@@Base+0x38>
   13494:	cmp	r1, #0
   13498:	moveq	r1, #1
   1349c:	moveq	r0, r1
   134a0:	bxeq	lr
   134a4:	ldr	r2, [r1]
   134a8:	ldr	r0, [r0]
   134ac:	mov	r1, #0
   134b0:	cmp	r0, r2
   134b4:	mvncc	r1, #0
   134b8:	movwhi	r1, #1
   134bc:	mov	r0, r1
   134c0:	bx	lr
   134c4:	cmp	r1, #0
   134c8:	mvnne	r1, #0
   134cc:	mov	r0, r1
   134d0:	bx	lr

000134d4 <table_compare_float@@Base>:
   134d4:	cmp	r0, #0
   134d8:	beq	13510 <table_compare_float@@Base+0x3c>
   134dc:	cmp	r1, #0
   134e0:	moveq	r1, #1
   134e4:	moveq	r0, r1
   134e8:	bxeq	lr
   134ec:	vldr	s0, [r1]
   134f0:	vldr	s2, [r0]
   134f4:	mov	r1, #0
   134f8:	vcmpe.f32	s2, s0
   134fc:	vmrs	APSR_nzcv, fpscr
   13500:	mvnmi	r1, #0
   13504:	movwgt	r1, #1
   13508:	mov	r0, r1
   1350c:	bx	lr
   13510:	cmp	r1, #0
   13514:	mvnne	r1, #0
   13518:	mov	r0, r1
   1351c:	bx	lr

00013520 <table_compare_double@@Base>:
   13520:	cmp	r0, #0
   13524:	beq	1355c <table_compare_double@@Base+0x3c>
   13528:	cmp	r1, #0
   1352c:	moveq	r1, #1
   13530:	moveq	r0, r1
   13534:	bxeq	lr
   13538:	vldr	d16, [r1]
   1353c:	vldr	d17, [r0]
   13540:	mov	r1, #0
   13544:	vcmpe.f64	d17, d16
   13548:	vmrs	APSR_nzcv, fpscr
   1354c:	mvnmi	r1, #0
   13550:	movwgt	r1, #1
   13554:	mov	r0, r1
   13558:	bx	lr
   1355c:	cmp	r1, #0
   13560:	mvnne	r1, #0
   13564:	mov	r0, r1
   13568:	bx	lr

0001356c <table_compare_ldouble@@Base>:
   1356c:	cmp	r0, #0
   13570:	beq	135a8 <table_compare_ldouble@@Base+0x3c>
   13574:	cmp	r1, #0
   13578:	moveq	r1, #1
   1357c:	moveq	r0, r1
   13580:	bxeq	lr
   13584:	vldr	d16, [r1]
   13588:	vldr	d17, [r0]
   1358c:	mov	r1, #0
   13590:	vcmpe.f64	d17, d16
   13594:	vmrs	APSR_nzcv, fpscr
   13598:	mvnmi	r1, #0
   1359c:	movwgt	r1, #1
   135a0:	mov	r0, r1
   135a4:	bx	lr
   135a8:	cmp	r1, #0
   135ac:	mvnne	r1, #0
   135b0:	mov	r0, r1
   135b4:	bx	lr

000135b8 <table_compare_char@@Base>:
   135b8:	cmp	r0, #0
   135bc:	beq	135f0 <table_compare_char@@Base+0x38>
   135c0:	cmp	r1, #0
   135c4:	moveq	r1, #1
   135c8:	moveq	r0, r1
   135cc:	bxeq	lr
   135d0:	ldrb	r2, [r1]
   135d4:	ldrb	r0, [r0]
   135d8:	mov	r1, #0
   135dc:	cmp	r0, r2
   135e0:	mvncc	r1, #0
   135e4:	movwhi	r1, #1
   135e8:	mov	r0, r1
   135ec:	bx	lr
   135f0:	cmp	r1, #0
   135f4:	mvnne	r1, #0
   135f8:	mov	r0, r1
   135fc:	bx	lr

00013600 <table_compare_uchar@@Base>:
   13600:	cmp	r0, #0
   13604:	beq	13638 <table_compare_uchar@@Base+0x38>
   13608:	cmp	r1, #0
   1360c:	moveq	r1, #1
   13610:	moveq	r0, r1
   13614:	bxeq	lr
   13618:	ldrb	r2, [r1]
   1361c:	ldrb	r0, [r0]
   13620:	mov	r1, #0
   13624:	cmp	r0, r2
   13628:	mvncc	r1, #0
   1362c:	movwhi	r1, #1
   13630:	mov	r0, r1
   13634:	bx	lr
   13638:	cmp	r1, #0
   1363c:	mvnne	r1, #0
   13640:	mov	r0, r1
   13644:	bx	lr

00013648 <table_compare_string@@Base>:
   13648:	cmp	r0, #0
   1364c:	beq	13664 <table_compare_string@@Base+0x1c>
   13650:	cmp	r1, #0
   13654:	moveq	r1, #1
   13658:	moveq	r0, r1
   1365c:	bxeq	lr
   13660:	b	11eb8 <strcmp@plt>
   13664:	cmp	r1, #0
   13668:	mvnne	r1, #0
   1366c:	mov	r0, r1
   13670:	bx	lr

00013674 <table_compare_ptr@@Base>:
   13674:	mov	r2, #0
   13678:	cmp	r0, r1
   1367c:	mvncc	r2, #0
   13680:	movwhi	r2, #1
   13684:	mov	r0, r2
   13688:	bx	lr

0001368c <table_get_default_compare_function_for_data_type@@Base>:
   1368c:	cmp	r0, #23
   13690:	movhi	r0, #0
   13694:	movwls	r1, #19680	; 0x4ce0
   13698:	movtls	r1, #1
   1369c:	ldrls	r0, [r1, r0, lsl #2]
   136a0:	bx	lr

000136a4 <table_get@@Base>:
   136a4:	push	{fp, lr}
   136a8:	mov	fp, sp
   136ac:	bl	14148 <table_get_cell_ptr@@Base>
   136b0:	ldr	r0, [r0]
   136b4:	pop	{fp, pc}

000136b8 <table_get_bool@@Base>:
   136b8:	push	{fp, lr}
   136bc:	mov	fp, sp
   136c0:	bl	136a4 <table_get@@Base>
   136c4:	ldrb	r0, [r0]
   136c8:	pop	{fp, pc}

000136cc <table_get_int@@Base>:
   136cc:	push	{fp, lr}
   136d0:	mov	fp, sp
   136d4:	bl	136a4 <table_get@@Base>
   136d8:	ldr	r0, [r0]
   136dc:	pop	{fp, pc}

000136e0 <table_get_uint@@Base>:
   136e0:	push	{fp, lr}
   136e4:	mov	fp, sp
   136e8:	bl	136a4 <table_get@@Base>
   136ec:	ldr	r0, [r0]
   136f0:	pop	{fp, pc}

000136f4 <table_get_int8@@Base>:
   136f4:	push	{fp, lr}
   136f8:	mov	fp, sp
   136fc:	bl	136a4 <table_get@@Base>
   13700:	ldrsb	r0, [r0]
   13704:	pop	{fp, pc}

00013708 <table_get_uint8@@Base>:
   13708:	push	{fp, lr}
   1370c:	mov	fp, sp
   13710:	bl	136a4 <table_get@@Base>
   13714:	ldrb	r0, [r0]
   13718:	pop	{fp, pc}

0001371c <table_get_int16@@Base>:
   1371c:	push	{fp, lr}
   13720:	mov	fp, sp
   13724:	bl	136a4 <table_get@@Base>
   13728:	ldrsh	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_uint16@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	136a4 <table_get@@Base>
   1373c:	ldrh	r0, [r0]
   13740:	pop	{fp, pc}

00013744 <table_get_int32@@Base>:
   13744:	push	{fp, lr}
   13748:	mov	fp, sp
   1374c:	bl	136a4 <table_get@@Base>
   13750:	ldr	r0, [r0]
   13754:	pop	{fp, pc}

00013758 <table_get_uint32@@Base>:
   13758:	push	{fp, lr}
   1375c:	mov	fp, sp
   13760:	bl	136a4 <table_get@@Base>
   13764:	ldr	r0, [r0]
   13768:	pop	{fp, pc}

0001376c <table_get_int64@@Base>:
   1376c:	push	{fp, lr}
   13770:	mov	fp, sp
   13774:	bl	136a4 <table_get@@Base>
   13778:	ldrd	r0, [r0]
   1377c:	pop	{fp, pc}

00013780 <table_get_uint64@@Base>:
   13780:	push	{fp, lr}
   13784:	mov	fp, sp
   13788:	bl	136a4 <table_get@@Base>
   1378c:	ldrd	r0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_get_short@@Base>:
   13794:	push	{fp, lr}
   13798:	mov	fp, sp
   1379c:	bl	136a4 <table_get@@Base>
   137a0:	ldrsh	r0, [r0]
   137a4:	pop	{fp, pc}

000137a8 <table_get_ushort@@Base>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	bl	136a4 <table_get@@Base>
   137b4:	ldrh	r0, [r0]
   137b8:	pop	{fp, pc}

000137bc <table_get_long@@Base>:
   137bc:	push	{fp, lr}
   137c0:	mov	fp, sp
   137c4:	bl	136a4 <table_get@@Base>
   137c8:	ldr	r0, [r0]
   137cc:	pop	{fp, pc}

000137d0 <table_get_ulong@@Base>:
   137d0:	push	{fp, lr}
   137d4:	mov	fp, sp
   137d8:	bl	136a4 <table_get@@Base>
   137dc:	ldr	r0, [r0]
   137e0:	pop	{fp, pc}

000137e4 <table_get_llong@@Base>:
   137e4:	push	{fp, lr}
   137e8:	mov	fp, sp
   137ec:	bl	136a4 <table_get@@Base>
   137f0:	ldrd	r0, [r0]
   137f4:	pop	{fp, pc}

000137f8 <table_get_ullong@@Base>:
   137f8:	push	{fp, lr}
   137fc:	mov	fp, sp
   13800:	bl	136a4 <table_get@@Base>
   13804:	ldrd	r0, [r0]
   13808:	pop	{fp, pc}

0001380c <table_get_float@@Base>:
   1380c:	push	{fp, lr}
   13810:	mov	fp, sp
   13814:	bl	136a4 <table_get@@Base>
   13818:	vldr	s0, [r0]
   1381c:	pop	{fp, pc}

00013820 <table_get_double@@Base>:
   13820:	push	{fp, lr}
   13824:	mov	fp, sp
   13828:	bl	136a4 <table_get@@Base>
   1382c:	vldr	d0, [r0]
   13830:	pop	{fp, pc}

00013834 <table_get_ldouble@@Base>:
   13834:	push	{fp, lr}
   13838:	mov	fp, sp
   1383c:	bl	136a4 <table_get@@Base>
   13840:	vldr	d0, [r0]
   13844:	pop	{fp, pc}

00013848 <table_get_char@@Base>:
   13848:	push	{fp, lr}
   1384c:	mov	fp, sp
   13850:	bl	136a4 <table_get@@Base>
   13854:	ldrb	r0, [r0]
   13858:	pop	{fp, pc}

0001385c <table_get_uchar@@Base>:
   1385c:	push	{fp, lr}
   13860:	mov	fp, sp
   13864:	bl	136a4 <table_get@@Base>
   13868:	ldrb	r0, [r0]
   1386c:	pop	{fp, pc}

00013870 <table_get_string@@Base>:
   13870:	b	136a4 <table_get@@Base>

00013874 <table_get_ptr@@Base>:
   13874:	b	136a4 <table_get@@Base>

00013878 <table_row_init@@Base>:
   13878:	push	{r4, r5, fp, lr}
   1387c:	add	fp, sp, #8
   13880:	mov	r4, r0
   13884:	bl	138a0 <table_get_row_ptr@@Base>
   13888:	mov	r5, r0
   1388c:	ldr	r0, [r4, #12]
   13890:	lsl	r0, r0, #2
   13894:	bl	11f00 <malloc@plt>
   13898:	str	r0, [r5]
   1389c:	pop	{r4, r5, fp, pc}

000138a0 <table_get_row_ptr@@Base>:
   138a0:	ldr	r0, [r0, #16]
   138a4:	add	r0, r0, r1, lsl #2
   138a8:	bx	lr

000138ac <table_row_destroy@@Base>:
   138ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138b0:	add	fp, sp, #24
   138b4:	mov	r4, r1
   138b8:	mov	r5, r0
   138bc:	bl	12bec <table_get_column_length@@Base>
   138c0:	mov	r6, r0
   138c4:	mov	r0, r5
   138c8:	mov	r1, r4
   138cc:	bl	138a0 <table_get_row_ptr@@Base>
   138d0:	mov	r8, r0
   138d4:	cmp	r6, #1
   138d8:	blt	138fc <table_row_destroy@@Base+0x50>
   138dc:	mov	r7, #0
   138e0:	mov	r0, r5
   138e4:	mov	r1, r4
   138e8:	mov	r2, r7
   138ec:	bl	14164 <table_cell_destroy@@Base>
   138f0:	add	r7, r7, #1
   138f4:	cmp	r6, r7
   138f8:	bne	138e0 <table_row_destroy@@Base+0x34>
   138fc:	ldr	r0, [r8]
   13900:	cmp	r0, #0
   13904:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13908:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1390c:	b	11ed0 <free@plt>

00013910 <table_get_row_length@@Base>:
   13910:	ldr	r0, [r0, #20]
   13914:	bx	lr

00013918 <table_add_row@@Base>:
   13918:	push	{r4, sl, fp, lr}
   1391c:	add	fp, sp, #8
   13920:	mov	r4, r0
   13924:	bl	13910 <table_get_row_length@@Base>
   13928:	ldr	r1, [r4, #24]
   1392c:	udiv	r2, r0, r1
   13930:	mls	r0, r2, r1, r0
   13934:	cmp	r0, #0
   13938:	bne	13944 <table_add_row@@Base+0x2c>
   1393c:	mov	r0, r4
   13940:	bl	13978 <table_add_row@@Base+0x60>
   13944:	mov	r0, r4
   13948:	bl	139a8 <table_add_row@@Base+0x90>
   1394c:	mov	r0, r4
   13950:	bl	13910 <table_get_row_length@@Base>
   13954:	mov	r1, r0
   13958:	mov	r0, r4
   1395c:	mvn	r2, #0
   13960:	mov	r3, #2
   13964:	bl	12af8 <table_notify@@Base>
   13968:	ldr	r0, [r4, #20]
   1396c:	add	r1, r0, #1
   13970:	str	r1, [r4, #20]
   13974:	pop	{r4, sl, fp, pc}
   13978:	push	{r4, sl, fp, lr}
   1397c:	add	fp, sp, #8
   13980:	mov	r4, r0
   13984:	ldr	r0, [r0, #16]
   13988:	ldr	r1, [r4, #24]
   1398c:	ldr	r2, [r4, #28]
   13990:	add	r1, r2, r1
   13994:	str	r1, [r4, #28]
   13998:	lsl	r1, r1, #2
   1399c:	bl	11edc <realloc@plt>
   139a0:	str	r0, [r4, #16]
   139a4:	pop	{r4, sl, fp, pc}
   139a8:	push	{r4, r5, r6, r7, fp, lr}
   139ac:	add	fp, sp, #16
   139b0:	mov	r4, r0
   139b4:	bl	13910 <table_get_row_length@@Base>
   139b8:	mov	r5, r0
   139bc:	mov	r0, r4
   139c0:	bl	12bec <table_get_column_length@@Base>
   139c4:	mov	r6, r0
   139c8:	mov	r0, r4
   139cc:	mov	r1, r5
   139d0:	bl	13878 <table_row_init@@Base>
   139d4:	cmp	r6, #1
   139d8:	poplt	{r4, r5, r6, r7, fp, pc}
   139dc:	mov	r7, #0
   139e0:	mov	r0, r4
   139e4:	mov	r1, r5
   139e8:	mov	r2, r7
   139ec:	bl	14130 <table_cell_init@@Base>
   139f0:	add	r7, r7, #1
   139f4:	cmp	r6, r7
   139f8:	bne	139e0 <table_add_row@@Base+0xc8>
   139fc:	pop	{r4, r5, r6, r7, fp, pc}

00013a00 <table_remove_row@@Base>:
   13a00:	push	{r4, r5, fp, lr}
   13a04:	add	fp, sp, #8
   13a08:	mov	r4, r1
   13a0c:	mov	r5, r0
   13a10:	bl	13a60 <table_remove_row@@Base+0x60>
   13a14:	ldr	r0, [r5, #20]
   13a18:	sub	r0, r0, #1
   13a1c:	str	r0, [r5, #20]
   13a20:	mov	r0, r5
   13a24:	bl	13910 <table_get_row_length@@Base>
   13a28:	ldr	r1, [r5, #24]
   13a2c:	udiv	r2, r0, r1
   13a30:	mls	r0, r2, r1, r0
   13a34:	cmp	r0, #0
   13a38:	bne	13a44 <table_remove_row@@Base+0x44>
   13a3c:	mov	r0, r5
   13a40:	bl	13b18 <table_remove_row@@Base+0x118>
   13a44:	mov	r0, r5
   13a48:	mov	r1, r4
   13a4c:	mvn	r2, #0
   13a50:	mov	r3, #4
   13a54:	bl	12af8 <table_notify@@Base>
   13a58:	mov	r0, #0
   13a5c:	pop	{r4, r5, fp, pc}
   13a60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a64:	add	fp, sp, #24
   13a68:	mov	r4, r1
   13a6c:	mov	r5, r0
   13a70:	bl	13910 <table_get_row_length@@Base>
   13a74:	mov	r8, r0
   13a78:	mov	r0, r5
   13a7c:	bl	12bec <table_get_column_length@@Base>
   13a80:	cmp	r0, #1
   13a84:	blt	13ad0 <table_remove_row@@Base+0xd0>
   13a88:	mov	r7, r0
   13a8c:	mov	r6, #0
   13a90:	mov	r0, r5
   13a94:	mov	r1, r6
   13a98:	bl	12c64 <table_get_column_data_type@@Base>
   13a9c:	cmp	r0, #23
   13aa0:	beq	13ac4 <table_remove_row@@Base+0xc4>
   13aa4:	mov	r0, r5
   13aa8:	mov	r1, r4
   13aac:	mov	r2, r6
   13ab0:	bl	14148 <table_get_cell_ptr@@Base>
   13ab4:	ldr	r0, [r0]
   13ab8:	cmp	r0, #0
   13abc:	beq	13ac4 <table_remove_row@@Base+0xc4>
   13ac0:	bl	11ed0 <free@plt>
   13ac4:	add	r6, r6, #1
   13ac8:	cmp	r7, r6
   13acc:	bne	13a90 <table_remove_row@@Base+0x90>
   13ad0:	mov	r0, r5
   13ad4:	mov	r1, r4
   13ad8:	bl	138a0 <table_get_row_ptr@@Base>
   13adc:	ldr	r0, [r0]
   13ae0:	cmp	r0, #0
   13ae4:	beq	13aec <table_remove_row@@Base+0xec>
   13ae8:	bl	11ed0 <free@plt>
   13aec:	sub	r0, r8, #1
   13af0:	cmp	r0, r4
   13af4:	pople	{r4, r5, r6, r7, r8, sl, fp, pc}
   13af8:	ldr	r1, [r5, #16]
   13afc:	add	r2, r1, r4, lsl #2
   13b00:	ldr	r2, [r2, #4]
   13b04:	str	r2, [r1, r4, lsl #2]
   13b08:	add	r4, r4, #1
   13b0c:	cmp	r0, r4
   13b10:	bne	13af8 <table_remove_row@@Base+0xf8>
   13b14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b18:	push	{r4, sl, fp, lr}
   13b1c:	add	fp, sp, #8
   13b20:	mov	r4, r0
   13b24:	ldr	r0, [r0, #16]
   13b28:	ldr	r1, [r4, #24]
   13b2c:	ldr	r2, [r4, #28]
   13b30:	sub	r1, r2, r1
   13b34:	str	r1, [r4, #28]
   13b38:	lsl	r1, r1, #2
   13b3c:	bl	11edc <realloc@plt>
   13b40:	str	r0, [r4, #16]
   13b44:	pop	{r4, sl, fp, pc}

00013b48 <table_set_row_ptr@@Base>:
   13b48:	ldr	r2, [r2]
   13b4c:	ldr	r0, [r0, #16]
   13b50:	str	r2, [r0, r1, lsl #2]
   13b54:	bx	lr

00013b58 <table_set@@Base>:
   13b58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b5c:	add	fp, sp, #24
   13b60:	mov	r8, r3
   13b64:	mov	r4, r2
   13b68:	mov	r9, r1
   13b6c:	mov	r6, r0
   13b70:	bl	14148 <table_get_cell_ptr@@Base>
   13b74:	mov	r5, r0
   13b78:	mov	r0, r6
   13b7c:	mov	r1, r4
   13b80:	bl	12bbc <table_get_col_ptr@@Base>
   13b84:	mvn	r7, #0
   13b88:	ldr	r1, [fp, #8]
   13b8c:	cmp	r1, #23
   13b90:	bhi	13d48 <table_set@@Base+0x1f0>
   13b94:	add	r2, pc, #0
   13b98:	ldr	pc, [r2, r1, lsl #2]
   13b9c:	strdeq	r3, [r1], -ip
   13ba0:	strdeq	r3, [r1], -ip
   13ba4:	andeq	r3, r1, r4, ror ip
   13ba8:	andeq	r3, r1, r4, ror ip
   13bac:	andeq	r3, r1, ip, lsr #25
   13bb0:	andeq	r3, r1, ip, lsr #25
   13bb4:	strdeq	r3, [r1], -ip
   13bb8:	strdeq	r3, [r1], -ip
   13bbc:	andeq	r3, r1, r4, lsr ip
   13bc0:	andeq	r3, r1, r4, lsr ip
   13bc4:	andeq	r3, r1, ip, lsr #25
   13bc8:	andeq	r3, r1, ip, lsr #25
   13bcc:	strdeq	r3, [r1], -ip
   13bd0:	strdeq	r3, [r1], -ip
   13bd4:	andeq	r3, r1, r4, lsr ip
   13bd8:	andeq	r3, r1, r4, lsr ip
   13bdc:	strdeq	r3, [r1], -ip
   13be0:	andeq	r3, r1, r4, lsr ip
   13be4:	andeq	r3, r1, r4, lsr ip
   13be8:	andeq	r3, r1, r4, ror ip
   13bec:	andeq	r3, r1, r4, ror ip
   13bf0:	andeq	r3, r1, r4, ror #25
   13bf4:	andeq	r3, r1, r4, ror ip
   13bf8:	andeq	r3, r1, r0, lsr #26
   13bfc:	ldr	r0, [r0, #4]
   13c00:	cmp	r0, r1
   13c04:	bne	13d48 <table_set@@Base+0x1f0>
   13c08:	ldr	r0, [r5]
   13c0c:	cmp	r0, #0
   13c10:	bne	13c28 <table_set@@Base+0xd0>
   13c14:	mov	r0, #4
   13c18:	bl	11f00 <malloc@plt>
   13c1c:	str	r0, [r5]
   13c20:	cmp	r0, #0
   13c24:	beq	13d48 <table_set@@Base+0x1f0>
   13c28:	ldr	r1, [r8]
   13c2c:	str	r1, [r0]
   13c30:	b	13d30 <table_set@@Base+0x1d8>
   13c34:	ldr	r0, [r0, #4]
   13c38:	cmp	r0, r1
   13c3c:	bne	13d48 <table_set@@Base+0x1f0>
   13c40:	ldr	r0, [r5]
   13c44:	cmp	r0, #0
   13c48:	bne	13c60 <table_set@@Base+0x108>
   13c4c:	mov	r0, #8
   13c50:	bl	11f00 <malloc@plt>
   13c54:	str	r0, [r5]
   13c58:	cmp	r0, #0
   13c5c:	beq	13d48 <table_set@@Base+0x1f0>
   13c60:	ldr	r1, [r8]
   13c64:	ldr	r2, [r8, #4]
   13c68:	str	r2, [r0, #4]
   13c6c:	str	r1, [r0]
   13c70:	b	13d30 <table_set@@Base+0x1d8>
   13c74:	ldr	r0, [r0, #4]
   13c78:	cmp	r0, r1
   13c7c:	bne	13d48 <table_set@@Base+0x1f0>
   13c80:	ldr	r0, [r5]
   13c84:	cmp	r0, #0
   13c88:	bne	13ca0 <table_set@@Base+0x148>
   13c8c:	mov	r0, #1
   13c90:	bl	11f00 <malloc@plt>
   13c94:	str	r0, [r5]
   13c98:	cmp	r0, #0
   13c9c:	beq	13d48 <table_set@@Base+0x1f0>
   13ca0:	ldrb	r1, [r8]
   13ca4:	strb	r1, [r0]
   13ca8:	b	13d30 <table_set@@Base+0x1d8>
   13cac:	ldr	r0, [r0, #4]
   13cb0:	cmp	r0, r1
   13cb4:	bne	13d48 <table_set@@Base+0x1f0>
   13cb8:	ldr	r0, [r5]
   13cbc:	cmp	r0, #0
   13cc0:	bne	13cd8 <table_set@@Base+0x180>
   13cc4:	mov	r0, #2
   13cc8:	bl	11f00 <malloc@plt>
   13ccc:	str	r0, [r5]
   13cd0:	cmp	r0, #0
   13cd4:	beq	13d48 <table_set@@Base+0x1f0>
   13cd8:	ldrh	r1, [r8]
   13cdc:	strh	r1, [r0]
   13ce0:	b	13d30 <table_set@@Base+0x1d8>
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, r1
   13cec:	bne	13d48 <table_set@@Base+0x1f0>
   13cf0:	mov	r0, r8
   13cf4:	bl	11f24 <strlen@plt>
   13cf8:	ldr	r2, [r5]
   13cfc:	add	r1, r0, #1
   13d00:	mov	r0, r2
   13d04:	bl	11edc <realloc@plt>
   13d08:	str	r0, [r5]
   13d0c:	cmp	r0, #0
   13d10:	beq	13d48 <table_set@@Base+0x1f0>
   13d14:	mov	r1, r8
   13d18:	bl	11ee8 <strcpy@plt>
   13d1c:	b	13d30 <table_set@@Base+0x1d8>
   13d20:	ldr	r0, [r0, #4]
   13d24:	cmp	r0, r1
   13d28:	bne	13d48 <table_set@@Base+0x1f0>
   13d2c:	str	r8, [r5]
   13d30:	mov	r0, r6
   13d34:	mov	r1, r9
   13d38:	mov	r2, r4
   13d3c:	mov	r3, #1
   13d40:	bl	12af8 <table_notify@@Base>
   13d44:	mov	r7, #0
   13d48:	mov	r0, r7
   13d4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013d50 <table_set_bool@@Base>:
   13d50:	push	{fp, lr}
   13d54:	mov	fp, sp
   13d58:	sub	sp, sp, #8
   13d5c:	strb	r3, [fp, #-1]
   13d60:	mov	r3, #22
   13d64:	str	r3, [sp]
   13d68:	sub	r3, fp, #1
   13d6c:	bl	13b58 <table_set@@Base>
   13d70:	mov	sp, fp
   13d74:	pop	{fp, pc}

00013d78 <table_set_int@@Base>:
   13d78:	push	{fp, lr}
   13d7c:	mov	fp, sp
   13d80:	sub	sp, sp, #8
   13d84:	str	r3, [sp, #4]
   13d88:	mov	r3, #0
   13d8c:	str	r3, [sp]
   13d90:	add	r3, sp, #4
   13d94:	bl	13b58 <table_set@@Base>
   13d98:	mov	sp, fp
   13d9c:	pop	{fp, pc}

00013da0 <table_set_uint@@Base>:
   13da0:	push	{fp, lr}
   13da4:	mov	fp, sp
   13da8:	sub	sp, sp, #8
   13dac:	str	r3, [sp, #4]
   13db0:	mov	r3, #1
   13db4:	str	r3, [sp]
   13db8:	add	r3, sp, #4
   13dbc:	bl	13b58 <table_set@@Base>
   13dc0:	mov	sp, fp
   13dc4:	pop	{fp, pc}

00013dc8 <table_set_int8@@Base>:
   13dc8:	push	{fp, lr}
   13dcc:	mov	fp, sp
   13dd0:	sub	sp, sp, #8
   13dd4:	strb	r3, [fp, #-1]
   13dd8:	mov	r3, #2
   13ddc:	str	r3, [sp]
   13de0:	sub	r3, fp, #1
   13de4:	bl	13b58 <table_set@@Base>
   13de8:	mov	sp, fp
   13dec:	pop	{fp, pc}

00013df0 <table_set_uint8@@Base>:
   13df0:	push	{fp, lr}
   13df4:	mov	fp, sp
   13df8:	sub	sp, sp, #8
   13dfc:	strb	r3, [fp, #-1]
   13e00:	mov	r3, #3
   13e04:	str	r3, [sp]
   13e08:	sub	r3, fp, #1
   13e0c:	bl	13b58 <table_set@@Base>
   13e10:	mov	sp, fp
   13e14:	pop	{fp, pc}

00013e18 <table_set_int16@@Base>:
   13e18:	push	{fp, lr}
   13e1c:	mov	fp, sp
   13e20:	sub	sp, sp, #8
   13e24:	strh	r3, [fp, #-2]
   13e28:	mov	r3, #4
   13e2c:	str	r3, [sp]
   13e30:	sub	r3, fp, #2
   13e34:	bl	13b58 <table_set@@Base>
   13e38:	mov	sp, fp
   13e3c:	pop	{fp, pc}

00013e40 <table_set_uint16@@Base>:
   13e40:	push	{fp, lr}
   13e44:	mov	fp, sp
   13e48:	sub	sp, sp, #8
   13e4c:	strh	r3, [fp, #-2]
   13e50:	mov	r3, #5
   13e54:	str	r3, [sp]
   13e58:	sub	r3, fp, #2
   13e5c:	bl	13b58 <table_set@@Base>
   13e60:	mov	sp, fp
   13e64:	pop	{fp, pc}

00013e68 <table_set_int32@@Base>:
   13e68:	push	{fp, lr}
   13e6c:	mov	fp, sp
   13e70:	sub	sp, sp, #8
   13e74:	str	r3, [sp, #4]
   13e78:	mov	r3, #6
   13e7c:	str	r3, [sp]
   13e80:	add	r3, sp, #4
   13e84:	bl	13b58 <table_set@@Base>
   13e88:	mov	sp, fp
   13e8c:	pop	{fp, pc}

00013e90 <table_set_uint32@@Base>:
   13e90:	push	{fp, lr}
   13e94:	mov	fp, sp
   13e98:	sub	sp, sp, #8
   13e9c:	str	r3, [sp, #4]
   13ea0:	mov	r3, #7
   13ea4:	str	r3, [sp]
   13ea8:	add	r3, sp, #4
   13eac:	bl	13b58 <table_set@@Base>
   13eb0:	mov	sp, fp
   13eb4:	pop	{fp, pc}

00013eb8 <table_set_int64@@Base>:
   13eb8:	push	{fp, lr}
   13ebc:	mov	fp, sp
   13ec0:	sub	sp, sp, #16
   13ec4:	ldr	r3, [fp, #12]
   13ec8:	str	r3, [sp, #12]
   13ecc:	ldr	r3, [fp, #8]
   13ed0:	str	r3, [sp, #8]
   13ed4:	mov	r3, #8
   13ed8:	str	r3, [sp]
   13edc:	add	r3, sp, #8
   13ee0:	bl	13b58 <table_set@@Base>
   13ee4:	mov	sp, fp
   13ee8:	pop	{fp, pc}

00013eec <table_set_uint64@@Base>:
   13eec:	push	{fp, lr}
   13ef0:	mov	fp, sp
   13ef4:	sub	sp, sp, #16
   13ef8:	ldr	r3, [fp, #12]
   13efc:	str	r3, [sp, #12]
   13f00:	ldr	r3, [fp, #8]
   13f04:	str	r3, [sp, #8]
   13f08:	mov	r3, #9
   13f0c:	str	r3, [sp]
   13f10:	add	r3, sp, #8
   13f14:	bl	13b58 <table_set@@Base>
   13f18:	mov	sp, fp
   13f1c:	pop	{fp, pc}

00013f20 <table_set_short@@Base>:
   13f20:	push	{fp, lr}
   13f24:	mov	fp, sp
   13f28:	sub	sp, sp, #8
   13f2c:	strh	r3, [fp, #-2]
   13f30:	mov	r3, #10
   13f34:	str	r3, [sp]
   13f38:	sub	r3, fp, #2
   13f3c:	bl	13b58 <table_set@@Base>
   13f40:	mov	sp, fp
   13f44:	pop	{fp, pc}

00013f48 <table_set_ushort@@Base>:
   13f48:	push	{fp, lr}
   13f4c:	mov	fp, sp
   13f50:	sub	sp, sp, #8
   13f54:	strh	r3, [fp, #-2]
   13f58:	mov	r3, #11
   13f5c:	str	r3, [sp]
   13f60:	sub	r3, fp, #2
   13f64:	bl	13b58 <table_set@@Base>
   13f68:	mov	sp, fp
   13f6c:	pop	{fp, pc}

00013f70 <table_set_long@@Base>:
   13f70:	push	{fp, lr}
   13f74:	mov	fp, sp
   13f78:	sub	sp, sp, #8
   13f7c:	str	r3, [sp, #4]
   13f80:	mov	r3, #12
   13f84:	str	r3, [sp]
   13f88:	add	r3, sp, #4
   13f8c:	bl	13b58 <table_set@@Base>
   13f90:	mov	sp, fp
   13f94:	pop	{fp, pc}

00013f98 <table_set_ulong@@Base>:
   13f98:	push	{fp, lr}
   13f9c:	mov	fp, sp
   13fa0:	sub	sp, sp, #8
   13fa4:	str	r3, [sp, #4]
   13fa8:	mov	r3, #13
   13fac:	str	r3, [sp]
   13fb0:	add	r3, sp, #4
   13fb4:	bl	13b58 <table_set@@Base>
   13fb8:	mov	sp, fp
   13fbc:	pop	{fp, pc}

00013fc0 <table_set_llong@@Base>:
   13fc0:	push	{fp, lr}
   13fc4:	mov	fp, sp
   13fc8:	sub	sp, sp, #16
   13fcc:	ldr	r3, [fp, #12]
   13fd0:	str	r3, [sp, #12]
   13fd4:	ldr	r3, [fp, #8]
   13fd8:	str	r3, [sp, #8]
   13fdc:	mov	r3, #14
   13fe0:	str	r3, [sp]
   13fe4:	add	r3, sp, #8
   13fe8:	bl	13b58 <table_set@@Base>
   13fec:	mov	sp, fp
   13ff0:	pop	{fp, pc}

00013ff4 <table_set_ullong@@Base>:
   13ff4:	push	{fp, lr}
   13ff8:	mov	fp, sp
   13ffc:	sub	sp, sp, #16
   14000:	ldr	r3, [fp, #12]
   14004:	str	r3, [sp, #12]
   14008:	ldr	r3, [fp, #8]
   1400c:	str	r3, [sp, #8]
   14010:	mov	r3, #15
   14014:	str	r3, [sp]
   14018:	add	r3, sp, #8
   1401c:	bl	13b58 <table_set@@Base>
   14020:	mov	sp, fp
   14024:	pop	{fp, pc}

00014028 <table_set_float@@Base>:
   14028:	push	{fp, lr}
   1402c:	mov	fp, sp
   14030:	sub	sp, sp, #8
   14034:	vstr	s0, [sp, #4]
   14038:	mov	r3, #16
   1403c:	str	r3, [sp]
   14040:	add	r3, sp, #4
   14044:	bl	13b58 <table_set@@Base>
   14048:	mov	sp, fp
   1404c:	pop	{fp, pc}

00014050 <table_set_double@@Base>:
   14050:	push	{fp, lr}
   14054:	mov	fp, sp
   14058:	sub	sp, sp, #16
   1405c:	vstr	d0, [sp, #8]
   14060:	mov	r3, #17
   14064:	str	r3, [sp]
   14068:	add	r3, sp, #8
   1406c:	bl	13b58 <table_set@@Base>
   14070:	mov	sp, fp
   14074:	pop	{fp, pc}

00014078 <table_set_ldouble@@Base>:
   14078:	push	{fp, lr}
   1407c:	mov	fp, sp
   14080:	sub	sp, sp, #16
   14084:	vstr	d0, [sp, #8]
   14088:	mov	r3, #18
   1408c:	str	r3, [sp]
   14090:	add	r3, sp, #8
   14094:	bl	13b58 <table_set@@Base>
   14098:	mov	sp, fp
   1409c:	pop	{fp, pc}

000140a0 <table_set_string@@Base>:
   140a0:	push	{fp, lr}
   140a4:	mov	fp, sp
   140a8:	sub	sp, sp, #8
   140ac:	mov	ip, #21
   140b0:	str	ip, [sp]
   140b4:	bl	13b58 <table_set@@Base>
   140b8:	mov	sp, fp
   140bc:	pop	{fp, pc}

000140c0 <table_set_char@@Base>:
   140c0:	push	{fp, lr}
   140c4:	mov	fp, sp
   140c8:	sub	sp, sp, #8
   140cc:	strb	r3, [fp, #-1]
   140d0:	mov	r3, #19
   140d4:	str	r3, [sp]
   140d8:	sub	r3, fp, #1
   140dc:	bl	13b58 <table_set@@Base>
   140e0:	mov	sp, fp
   140e4:	pop	{fp, pc}

000140e8 <table_set_uchar@@Base>:
   140e8:	push	{fp, lr}
   140ec:	mov	fp, sp
   140f0:	sub	sp, sp, #8
   140f4:	strb	r3, [fp, #-1]
   140f8:	mov	r3, #20
   140fc:	str	r3, [sp]
   14100:	sub	r3, fp, #1
   14104:	bl	13b58 <table_set@@Base>
   14108:	mov	sp, fp
   1410c:	pop	{fp, pc}

00014110 <table_set_ptr@@Base>:
   14110:	push	{fp, lr}
   14114:	mov	fp, sp
   14118:	sub	sp, sp, #8
   1411c:	mov	ip, #23
   14120:	str	ip, [sp]
   14124:	bl	13b58 <table_set@@Base>
   14128:	mov	sp, fp
   1412c:	pop	{fp, pc}

00014130 <table_cell_init@@Base>:
   14130:	push	{fp, lr}
   14134:	mov	fp, sp
   14138:	bl	14148 <table_get_cell_ptr@@Base>
   1413c:	mov	r1, #0
   14140:	str	r1, [r0]
   14144:	pop	{fp, pc}

00014148 <table_get_cell_ptr@@Base>:
   14148:	push	{r4, sl, fp, lr}
   1414c:	add	fp, sp, #8
   14150:	mov	r4, r2
   14154:	bl	138a0 <table_get_row_ptr@@Base>
   14158:	ldr	r0, [r0]
   1415c:	add	r0, r0, r4, lsl #2
   14160:	pop	{r4, sl, fp, pc}

00014164 <table_cell_destroy@@Base>:
   14164:	push	{r4, r5, r6, sl, fp, lr}
   14168:	add	fp, sp, #16
   1416c:	mov	r4, r2
   14170:	mov	r5, r1
   14174:	mov	r6, r0
   14178:	mov	r1, r2
   1417c:	bl	12c64 <table_get_column_data_type@@Base>
   14180:	cmp	r0, #23
   14184:	popeq	{r4, r5, r6, sl, fp, pc}
   14188:	mov	r0, r6
   1418c:	mov	r1, r5
   14190:	mov	r2, r4
   14194:	bl	14148 <table_get_cell_ptr@@Base>
   14198:	ldr	r0, [r0]
   1419c:	cmp	r0, #0
   141a0:	beq	141ac <table_cell_destroy@@Base+0x48>
   141a4:	pop	{r4, r5, r6, sl, fp, lr}
   141a8:	b	11ed0 <free@plt>
   141ac:	pop	{r4, r5, r6, sl, fp, pc}

000141b0 <table_cell_to_buffer@@Base>:
   141b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141b4:	add	fp, sp, #24
   141b8:	sub	sp, sp, #8
   141bc:	mov	r5, r3
   141c0:	mov	r6, r2
   141c4:	mov	r7, r1
   141c8:	mov	r4, r0
   141cc:	mov	r1, r2
   141d0:	bl	12c64 <table_get_column_data_type@@Base>
   141d4:	cmp	r0, #23
   141d8:	bhi	144c8 <table_cell_to_buffer@@Base+0x318>
   141dc:	ldr	r8, [fp, #8]
   141e0:	add	r1, pc, #0
   141e4:	ldr	pc, [r1, r0, lsl #2]
   141e8:	andeq	r4, r1, r8, asr #4
   141ec:	andeq	r4, r1, ip, asr r2
   141f0:	andeq	r4, r1, r0, ror r2
   141f4:	andeq	r4, r1, r4, lsl #5
   141f8:	muleq	r1, r8, r2
   141fc:	andeq	r4, r1, ip, lsr #5
   14200:	andeq	r4, r1, r0, asr #5
   14204:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14208:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1420c:	andeq	r4, r1, r8, lsl #6
   14210:	andeq	r4, r1, ip, lsl r3
   14214:	andeq	r4, r1, ip, lsr r3
   14218:	andeq	r4, r1, ip, asr r3
   1421c:	andeq	r4, r1, ip, ror r3
   14220:	muleq	r1, ip, r3
   14224:			; <UNDEFINED> instruction: 0x000143bc
   14228:	ldrdeq	r4, [r1], -ip
   1422c:	andeq	r4, r1, r0, lsl #8
   14230:	andeq	r4, r1, r0, lsr #8
   14234:	andeq	r4, r1, ip, asr #8
   14238:	andeq	r4, r1, r0, ror #8
   1423c:	andeq	r4, r1, r0, lsl #9
   14240:	andeq	r4, r1, r0, lsr #9
   14244:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14248:	mov	r0, r4
   1424c:	mov	r1, r7
   14250:	mov	r2, r6
   14254:	bl	136cc <table_get_int@@Base>
   14258:	b	144b0 <table_cell_to_buffer@@Base+0x300>
   1425c:	mov	r0, r4
   14260:	mov	r1, r7
   14264:	mov	r2, r6
   14268:	bl	136e0 <table_get_uint@@Base>
   1426c:	b	142e4 <table_cell_to_buffer@@Base+0x134>
   14270:	mov	r0, r4
   14274:	mov	r1, r7
   14278:	mov	r2, r6
   1427c:	bl	136f4 <table_get_int8@@Base>
   14280:	b	144b0 <table_cell_to_buffer@@Base+0x300>
   14284:	mov	r0, r4
   14288:	mov	r1, r7
   1428c:	mov	r2, r6
   14290:	bl	13708 <table_get_uint8@@Base>
   14294:	b	142e4 <table_cell_to_buffer@@Base+0x134>
   14298:	mov	r0, r4
   1429c:	mov	r1, r7
   142a0:	mov	r2, r6
   142a4:	bl	1371c <table_get_int16@@Base>
   142a8:	b	144b0 <table_cell_to_buffer@@Base+0x300>
   142ac:	mov	r0, r4
   142b0:	mov	r1, r7
   142b4:	mov	r2, r6
   142b8:	bl	13730 <table_get_uint16@@Base>
   142bc:	b	142e4 <table_cell_to_buffer@@Base+0x134>
   142c0:	mov	r0, r4
   142c4:	mov	r1, r7
   142c8:	mov	r2, r6
   142cc:	bl	13744 <table_get_int32@@Base>
   142d0:	b	144b0 <table_cell_to_buffer@@Base+0x300>
   142d4:	mov	r0, r4
   142d8:	mov	r1, r7
   142dc:	mov	r2, r6
   142e0:	bl	13758 <table_get_uint32@@Base>
   142e4:	mov	r3, r0
   142e8:	movw	r2, #19779	; 0x4d43
   142ec:	movt	r2, #1
   142f0:	b	144bc <table_cell_to_buffer@@Base+0x30c>
   142f4:	mov	r0, r4
   142f8:	mov	r1, r7
   142fc:	mov	r2, r6
   14300:	bl	1376c <table_get_int64@@Base>
   14304:	b	143ac <table_cell_to_buffer@@Base+0x1fc>
   14308:	mov	r0, r4
   1430c:	mov	r1, r7
   14310:	mov	r2, r6
   14314:	bl	13780 <table_get_uint64@@Base>
   14318:	b	143cc <table_cell_to_buffer@@Base+0x21c>
   1431c:	mov	r0, r4
   14320:	mov	r1, r7
   14324:	mov	r2, r6
   14328:	bl	13794 <table_get_short@@Base>
   1432c:	mov	r3, r0
   14330:	movw	r2, #19792	; 0x4d50
   14334:	movt	r2, #1
   14338:	b	144bc <table_cell_to_buffer@@Base+0x30c>
   1433c:	mov	r0, r4
   14340:	mov	r1, r7
   14344:	mov	r2, r6
   14348:	bl	137a8 <table_get_ushort@@Base>
   1434c:	mov	r3, r0
   14350:	movw	r2, #19796	; 0x4d54
   14354:	movt	r2, #1
   14358:	b	144bc <table_cell_to_buffer@@Base+0x30c>
   1435c:	mov	r0, r4
   14360:	mov	r1, r7
   14364:	mov	r2, r6
   14368:	bl	137bc <table_get_long@@Base>
   1436c:	mov	r3, r0
   14370:	movw	r2, #19800	; 0x4d58
   14374:	movt	r2, #1
   14378:	b	144bc <table_cell_to_buffer@@Base+0x30c>
   1437c:	mov	r0, r4
   14380:	mov	r1, r7
   14384:	mov	r2, r6
   14388:	bl	137d0 <table_get_ulong@@Base>
   1438c:	mov	r3, r0
   14390:	movw	r2, #19804	; 0x4d5c
   14394:	movt	r2, #1
   14398:	b	144bc <table_cell_to_buffer@@Base+0x30c>
   1439c:	mov	r0, r4
   143a0:	mov	r1, r7
   143a4:	mov	r2, r6
   143a8:	bl	137e4 <table_get_llong@@Base>
   143ac:	stm	sp, {r0, r1}
   143b0:	movw	r2, #19782	; 0x4d46
   143b4:	movt	r2, #1
   143b8:	b	1443c <table_cell_to_buffer@@Base+0x28c>
   143bc:	mov	r0, r4
   143c0:	mov	r1, r7
   143c4:	mov	r2, r6
   143c8:	bl	137f8 <table_get_ullong@@Base>
   143cc:	stm	sp, {r0, r1}
   143d0:	movw	r2, #19787	; 0x4d4b
   143d4:	movt	r2, #1
   143d8:	b	1443c <table_cell_to_buffer@@Base+0x28c>
   143dc:	mov	r0, r4
   143e0:	mov	r1, r7
   143e4:	mov	r2, r6
   143e8:	bl	1380c <table_get_float@@Base>
   143ec:	vcvt.f64.f32	d16, s0
   143f0:	vstr	d16, [sp]
   143f4:	movw	r2, #19811	; 0x4d63
   143f8:	movt	r2, #1
   143fc:	b	1443c <table_cell_to_buffer@@Base+0x28c>
   14400:	mov	r0, r4
   14404:	mov	r1, r7
   14408:	mov	r2, r6
   1440c:	bl	13820 <table_get_double@@Base>
   14410:	vstr	d0, [sp]
   14414:	movw	r2, #19814	; 0x4d66
   14418:	movt	r2, #1
   1441c:	b	1443c <table_cell_to_buffer@@Base+0x28c>
   14420:	mov	r0, r4
   14424:	mov	r1, r7
   14428:	mov	r2, r6
   1442c:	bl	13834 <table_get_ldouble@@Base>
   14430:	vstr	d0, [sp]
   14434:	movw	r2, #19818	; 0x4d6a
   14438:	movt	r2, #1
   1443c:	mov	r0, r5
   14440:	mov	r1, r8
   14444:	bl	11f30 <snprintf@plt>
   14448:	b	144c8 <table_cell_to_buffer@@Base+0x318>
   1444c:	mov	r0, r4
   14450:	mov	r1, r7
   14454:	mov	r2, r6
   14458:	bl	13848 <table_get_char@@Base>
   1445c:	b	14470 <table_cell_to_buffer@@Base+0x2c0>
   14460:	mov	r0, r4
   14464:	mov	r1, r7
   14468:	mov	r2, r6
   1446c:	bl	1385c <table_get_uchar@@Base>
   14470:	mov	r3, r0
   14474:	movw	r2, #19822	; 0x4d6e
   14478:	movt	r2, #1
   1447c:	b	144bc <table_cell_to_buffer@@Base+0x30c>
   14480:	mov	r0, r4
   14484:	mov	r1, r7
   14488:	mov	r2, r6
   1448c:	bl	13870 <table_get_string@@Base>
   14490:	mov	r3, r0
   14494:	movw	r2, #19808	; 0x4d60
   14498:	movt	r2, #1
   1449c:	b	144bc <table_cell_to_buffer@@Base+0x30c>
   144a0:	mov	r0, r4
   144a4:	mov	r1, r7
   144a8:	mov	r2, r6
   144ac:	bl	136b8 <table_get_bool@@Base>
   144b0:	mov	r3, r0
   144b4:	movw	r2, #19776	; 0x4d40
   144b8:	movt	r2, #1
   144bc:	mov	r0, r5
   144c0:	mov	r1, r8
   144c4:	bl	11f30 <snprintf@plt>
   144c8:	mov	r0, #0
   144cc:	sub	sp, fp, #24
   144d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   144d4:	mov	r0, r4
   144d8:	mov	r1, r7
   144dc:	mov	r2, r6
   144e0:	bl	13874 <table_get_ptr@@Base>
   144e4:	mov	r3, r0
   144e8:	movw	r2, #19825	; 0x4d71
   144ec:	movt	r2, #1
   144f0:	b	144bc <table_cell_to_buffer@@Base+0x30c>

000144f4 <table_cell_from_buffer@@Base>:
   144f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144f8:	add	fp, sp, #24
   144fc:	sub	sp, sp, #264	; 0x108
   14500:	mov	r7, r3
   14504:	mov	r4, r2
   14508:	mov	r5, r1
   1450c:	mov	r6, r0
   14510:	mov	r1, r2
   14514:	bl	12c64 <table_get_column_data_type@@Base>
   14518:	cmp	r0, #23
   1451c:	bhi	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14520:	add	r1, pc, #0
   14524:	ldr	pc, [r1, r0, lsl #2]
   14528:	andeq	r4, r1, r8, lsl #11
   1452c:	andeq	r4, r1, r0, asr #11
   14530:	strdeq	r4, [r1], -r8
   14534:	andeq	r4, r1, r0, lsr r6
   14538:	andeq	r4, r1, r8, ror #12
   1453c:	andeq	r4, r1, r0, lsr #13
   14540:	ldrdeq	r4, [r1], -r8
   14544:	andeq	r4, r1, r0, lsl r7
   14548:	andeq	r4, r1, r8, asr #14
   1454c:	andeq	r4, r1, r8, lsl #15
   14550:	andeq	r4, r1, r8, asr #15
   14554:	andeq	r4, r1, r0, lsl #16
   14558:	andeq	r4, r1, r8, lsr r8
   1455c:	andeq	r4, r1, r0, ror r8
   14560:	andeq	r4, r1, r8, lsr #17
   14564:	andeq	r4, r1, r8, ror #17
   14568:	andeq	r4, r1, r8, lsr #18
   1456c:	andeq	r4, r1, r0, ror #18
   14570:	muleq	r1, r8, r9
   14574:	ldrdeq	r4, [r1], -r0
   14578:	andeq	r4, r1, r8, lsl #20
   1457c:	andeq	r4, r1, r0, asr #20
   14580:	andeq	r4, r1, r8, ror sl
   14584:			; <UNDEFINED> instruction: 0x00014abc
   14588:	movw	r1, #19776	; 0x4d40
   1458c:	movt	r1, #1
   14590:	add	r2, sp, #8
   14594:	mov	r0, r7
   14598:	bl	11f3c <__isoc99_sscanf@plt>
   1459c:	mvn	r7, #0
   145a0:	cmp	r0, #1
   145a4:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   145a8:	ldr	r3, [sp, #8]
   145ac:	mov	r0, r6
   145b0:	mov	r1, r5
   145b4:	mov	r2, r4
   145b8:	bl	13d78 <table_set_int@@Base>
   145bc:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   145c0:	movw	r1, #19779	; 0x4d43
   145c4:	movt	r1, #1
   145c8:	add	r2, sp, #8
   145cc:	mov	r0, r7
   145d0:	bl	11f3c <__isoc99_sscanf@plt>
   145d4:	mvn	r7, #0
   145d8:	cmp	r0, #1
   145dc:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   145e0:	ldr	r3, [sp, #8]
   145e4:	mov	r0, r6
   145e8:	mov	r1, r5
   145ec:	mov	r2, r4
   145f0:	bl	13da0 <table_set_uint@@Base>
   145f4:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   145f8:	movw	r1, #19828	; 0x4d74
   145fc:	movt	r1, #1
   14600:	add	r2, sp, #8
   14604:	mov	r0, r7
   14608:	bl	11f3c <__isoc99_sscanf@plt>
   1460c:	mvn	r7, #0
   14610:	cmp	r0, #1
   14614:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14618:	ldrsb	r3, [sp, #8]
   1461c:	mov	r0, r6
   14620:	mov	r1, r5
   14624:	mov	r2, r4
   14628:	bl	13dc8 <table_set_int8@@Base>
   1462c:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14630:	movw	r1, #19833	; 0x4d79
   14634:	movt	r1, #1
   14638:	add	r2, sp, #8
   1463c:	mov	r0, r7
   14640:	bl	11f3c <__isoc99_sscanf@plt>
   14644:	mvn	r7, #0
   14648:	cmp	r0, #1
   1464c:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14650:	ldrb	r3, [sp, #8]
   14654:	mov	r0, r6
   14658:	mov	r1, r5
   1465c:	mov	r2, r4
   14660:	bl	13df0 <table_set_uint8@@Base>
   14664:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14668:	movw	r1, #19792	; 0x4d50
   1466c:	movt	r1, #1
   14670:	add	r2, sp, #8
   14674:	mov	r0, r7
   14678:	bl	11f3c <__isoc99_sscanf@plt>
   1467c:	mvn	r7, #0
   14680:	cmp	r0, #1
   14684:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14688:	ldrsh	r3, [sp, #8]
   1468c:	mov	r0, r6
   14690:	mov	r1, r5
   14694:	mov	r2, r4
   14698:	bl	13e18 <table_set_int16@@Base>
   1469c:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   146a0:	movw	r1, #19796	; 0x4d54
   146a4:	movt	r1, #1
   146a8:	add	r2, sp, #8
   146ac:	mov	r0, r7
   146b0:	bl	11f3c <__isoc99_sscanf@plt>
   146b4:	mvn	r7, #0
   146b8:	cmp	r0, #1
   146bc:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   146c0:	ldrh	r3, [sp, #8]
   146c4:	mov	r0, r6
   146c8:	mov	r1, r5
   146cc:	mov	r2, r4
   146d0:	bl	13e40 <table_set_uint16@@Base>
   146d4:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   146d8:	movw	r1, #19776	; 0x4d40
   146dc:	movt	r1, #1
   146e0:	add	r2, sp, #8
   146e4:	mov	r0, r7
   146e8:	bl	11f3c <__isoc99_sscanf@plt>
   146ec:	mvn	r7, #0
   146f0:	cmp	r0, #1
   146f4:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   146f8:	ldr	r3, [sp, #8]
   146fc:	mov	r0, r6
   14700:	mov	r1, r5
   14704:	mov	r2, r4
   14708:	bl	13e68 <table_set_int32@@Base>
   1470c:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14710:	movw	r1, #19779	; 0x4d43
   14714:	movt	r1, #1
   14718:	add	r2, sp, #8
   1471c:	mov	r0, r7
   14720:	bl	11f3c <__isoc99_sscanf@plt>
   14724:	mvn	r7, #0
   14728:	cmp	r0, #1
   1472c:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14730:	ldr	r3, [sp, #8]
   14734:	mov	r0, r6
   14738:	mov	r1, r5
   1473c:	mov	r2, r4
   14740:	bl	13e90 <table_set_uint32@@Base>
   14744:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14748:	movw	r1, #19782	; 0x4d46
   1474c:	movt	r1, #1
   14750:	add	r2, sp, #8
   14754:	mov	r0, r7
   14758:	bl	11f3c <__isoc99_sscanf@plt>
   1475c:	mvn	r7, #0
   14760:	cmp	r0, #1
   14764:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14768:	ldr	r0, [sp, #8]
   1476c:	ldr	r1, [sp, #12]
   14770:	stm	sp, {r0, r1}
   14774:	mov	r0, r6
   14778:	mov	r1, r5
   1477c:	mov	r2, r4
   14780:	bl	13eb8 <table_set_int64@@Base>
   14784:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14788:	movw	r1, #19787	; 0x4d4b
   1478c:	movt	r1, #1
   14790:	add	r2, sp, #8
   14794:	mov	r0, r7
   14798:	bl	11f3c <__isoc99_sscanf@plt>
   1479c:	mvn	r7, #0
   147a0:	cmp	r0, #1
   147a4:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   147a8:	ldr	r0, [sp, #8]
   147ac:	ldr	r1, [sp, #12]
   147b0:	stm	sp, {r0, r1}
   147b4:	mov	r0, r6
   147b8:	mov	r1, r5
   147bc:	mov	r2, r4
   147c0:	bl	13eec <table_set_uint64@@Base>
   147c4:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   147c8:	movw	r1, #19792	; 0x4d50
   147cc:	movt	r1, #1
   147d0:	add	r2, sp, #8
   147d4:	mov	r0, r7
   147d8:	bl	11f3c <__isoc99_sscanf@plt>
   147dc:	mvn	r7, #0
   147e0:	cmp	r0, #1
   147e4:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   147e8:	ldrsh	r3, [sp, #8]
   147ec:	mov	r0, r6
   147f0:	mov	r1, r5
   147f4:	mov	r2, r4
   147f8:	bl	13f20 <table_set_short@@Base>
   147fc:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14800:	movw	r1, #19796	; 0x4d54
   14804:	movt	r1, #1
   14808:	add	r2, sp, #8
   1480c:	mov	r0, r7
   14810:	bl	11f3c <__isoc99_sscanf@plt>
   14814:	mvn	r7, #0
   14818:	cmp	r0, #1
   1481c:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14820:	ldrh	r3, [sp, #8]
   14824:	mov	r0, r6
   14828:	mov	r1, r5
   1482c:	mov	r2, r4
   14830:	bl	13f48 <table_set_ushort@@Base>
   14834:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14838:	movw	r1, #19800	; 0x4d58
   1483c:	movt	r1, #1
   14840:	add	r2, sp, #8
   14844:	mov	r0, r7
   14848:	bl	11f3c <__isoc99_sscanf@plt>
   1484c:	mvn	r7, #0
   14850:	cmp	r0, #1
   14854:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14858:	ldr	r3, [sp, #8]
   1485c:	mov	r0, r6
   14860:	mov	r1, r5
   14864:	mov	r2, r4
   14868:	bl	13f70 <table_set_long@@Base>
   1486c:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14870:	movw	r1, #19804	; 0x4d5c
   14874:	movt	r1, #1
   14878:	add	r2, sp, #8
   1487c:	mov	r0, r7
   14880:	bl	11f3c <__isoc99_sscanf@plt>
   14884:	mvn	r7, #0
   14888:	cmp	r0, #1
   1488c:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14890:	ldr	r3, [sp, #8]
   14894:	mov	r0, r6
   14898:	mov	r1, r5
   1489c:	mov	r2, r4
   148a0:	bl	13f98 <table_set_ulong@@Base>
   148a4:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   148a8:	movw	r1, #19782	; 0x4d46
   148ac:	movt	r1, #1
   148b0:	add	r2, sp, #8
   148b4:	mov	r0, r7
   148b8:	bl	11f3c <__isoc99_sscanf@plt>
   148bc:	mvn	r7, #0
   148c0:	cmp	r0, #1
   148c4:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   148c8:	ldr	r0, [sp, #8]
   148cc:	ldr	r1, [sp, #12]
   148d0:	stm	sp, {r0, r1}
   148d4:	mov	r0, r6
   148d8:	mov	r1, r5
   148dc:	mov	r2, r4
   148e0:	bl	13fc0 <table_set_llong@@Base>
   148e4:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   148e8:	movw	r1, #19787	; 0x4d4b
   148ec:	movt	r1, #1
   148f0:	add	r2, sp, #8
   148f4:	mov	r0, r7
   148f8:	bl	11f3c <__isoc99_sscanf@plt>
   148fc:	mvn	r7, #0
   14900:	cmp	r0, #1
   14904:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14908:	ldr	r0, [sp, #8]
   1490c:	ldr	r1, [sp, #12]
   14910:	stm	sp, {r0, r1}
   14914:	mov	r0, r6
   14918:	mov	r1, r5
   1491c:	mov	r2, r4
   14920:	bl	13ff4 <table_set_ullong@@Base>
   14924:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14928:	movw	r1, #19811	; 0x4d63
   1492c:	movt	r1, #1
   14930:	add	r2, sp, #8
   14934:	mov	r0, r7
   14938:	bl	11f3c <__isoc99_sscanf@plt>
   1493c:	mvn	r7, #0
   14940:	cmp	r0, #1
   14944:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14948:	vldr	s0, [sp, #8]
   1494c:	mov	r0, r6
   14950:	mov	r1, r5
   14954:	mov	r2, r4
   14958:	bl	14028 <table_set_float@@Base>
   1495c:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14960:	movw	r1, #19814	; 0x4d66
   14964:	movt	r1, #1
   14968:	add	r2, sp, #8
   1496c:	mov	r0, r7
   14970:	bl	11f3c <__isoc99_sscanf@plt>
   14974:	mvn	r7, #0
   14978:	cmp	r0, #1
   1497c:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14980:	vldr	d0, [sp, #8]
   14984:	mov	r0, r6
   14988:	mov	r1, r5
   1498c:	mov	r2, r4
   14990:	bl	14050 <table_set_double@@Base>
   14994:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14998:	movw	r1, #19818	; 0x4d6a
   1499c:	movt	r1, #1
   149a0:	add	r2, sp, #8
   149a4:	mov	r0, r7
   149a8:	bl	11f3c <__isoc99_sscanf@plt>
   149ac:	mvn	r7, #0
   149b0:	cmp	r0, #1
   149b4:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   149b8:	vldr	d0, [sp, #8]
   149bc:	mov	r0, r6
   149c0:	mov	r1, r5
   149c4:	mov	r2, r4
   149c8:	bl	14078 <table_set_ldouble@@Base>
   149cc:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   149d0:	movw	r1, #19822	; 0x4d6e
   149d4:	movt	r1, #1
   149d8:	add	r2, sp, #8
   149dc:	mov	r0, r7
   149e0:	bl	11f3c <__isoc99_sscanf@plt>
   149e4:	mvn	r7, #0
   149e8:	cmp	r0, #1
   149ec:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   149f0:	ldrb	r3, [sp, #8]
   149f4:	mov	r0, r6
   149f8:	mov	r1, r5
   149fc:	mov	r2, r4
   14a00:	bl	140c0 <table_set_char@@Base>
   14a04:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14a08:	movw	r1, #19822	; 0x4d6e
   14a0c:	movt	r1, #1
   14a10:	add	r2, sp, #8
   14a14:	mov	r0, r7
   14a18:	bl	11f3c <__isoc99_sscanf@plt>
   14a1c:	mvn	r7, #0
   14a20:	cmp	r0, #1
   14a24:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14a28:	ldrb	r3, [sp, #8]
   14a2c:	mov	r0, r6
   14a30:	mov	r1, r5
   14a34:	mov	r2, r4
   14a38:	bl	140e8 <table_set_uchar@@Base>
   14a3c:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14a40:	movw	r1, #19808	; 0x4d60
   14a44:	movt	r1, #1
   14a48:	add	r2, sp, #8
   14a4c:	mov	r0, r7
   14a50:	bl	11f3c <__isoc99_sscanf@plt>
   14a54:	mvn	r7, #0
   14a58:	cmp	r0, #1
   14a5c:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14a60:	add	r3, sp, #8
   14a64:	mov	r0, r6
   14a68:	mov	r1, r5
   14a6c:	mov	r2, r4
   14a70:	bl	140a0 <table_set_string@@Base>
   14a74:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14a78:	movw	r1, #19776	; 0x4d40
   14a7c:	movt	r1, #1
   14a80:	add	r2, sp, #8
   14a84:	mov	r0, r7
   14a88:	bl	11f3c <__isoc99_sscanf@plt>
   14a8c:	mvn	r7, #0
   14a90:	cmp	r0, #1
   14a94:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14a98:	ldr	r0, [sp, #8]
   14a9c:	cmp	r0, #0
   14aa0:	beq	14b00 <table_cell_from_buffer@@Base+0x60c>
   14aa4:	mov	r0, r6
   14aa8:	mov	r1, r5
   14aac:	mov	r2, r4
   14ab0:	mov	r3, #1
   14ab4:	bl	13d50 <table_set_bool@@Base>
   14ab8:	b	14af0 <table_cell_from_buffer@@Base+0x5fc>
   14abc:	movw	r1, #19825	; 0x4d71
   14ac0:	movt	r1, #1
   14ac4:	add	r2, sp, #8
   14ac8:	mov	r0, r7
   14acc:	bl	11f3c <__isoc99_sscanf@plt>
   14ad0:	mvn	r7, #0
   14ad4:	cmp	r0, #1
   14ad8:	bne	14af4 <table_cell_from_buffer@@Base+0x600>
   14adc:	ldr	r3, [sp, #8]
   14ae0:	mov	r0, r6
   14ae4:	mov	r1, r5
   14ae8:	mov	r2, r4
   14aec:	bl	14110 <table_set_ptr@@Base>
   14af0:	mov	r7, #0
   14af4:	mov	r0, r7
   14af8:	sub	sp, fp, #24
   14afc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14b00:	mov	r7, #0
   14b04:	mov	r0, r6
   14b08:	mov	r1, r5
   14b0c:	mov	r2, r4
   14b10:	mov	r3, #0
   14b14:	bl	13d50 <table_set_bool@@Base>
   14b18:	b	14af4 <table_cell_from_buffer@@Base+0x600>

00014b1c <table_cell_nullify@@Base>:
   14b1c:	push	{r4, sl, fp, lr}
   14b20:	add	fp, sp, #8
   14b24:	bl	14148 <table_get_cell_ptr@@Base>
   14b28:	mov	r4, r0
   14b2c:	ldr	r0, [r0]
   14b30:	cmp	r0, #0
   14b34:	beq	14b44 <table_cell_nullify@@Base+0x28>
   14b38:	bl	11ed0 <free@plt>
   14b3c:	mov	r0, #0
   14b40:	str	r0, [r4]
   14b44:	mov	r0, #0
   14b48:	pop	{r4, sl, fp, pc}

00014b4c <__libc_csu_init@@Base>:
   14b4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b50:	mov	r7, r0
   14b54:	ldr	r6, [pc, #72]	; 14ba4 <__libc_csu_init@@Base+0x58>
   14b58:	ldr	r5, [pc, #72]	; 14ba8 <__libc_csu_init@@Base+0x5c>
   14b5c:	add	r6, pc, r6
   14b60:	add	r5, pc, r5
   14b64:	sub	r6, r6, r5
   14b68:	mov	r8, r1
   14b6c:	mov	r9, r2
   14b70:	bl	11e98 <strcmp@plt-0x20>
   14b74:	asrs	r6, r6, #2
   14b78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b7c:	mov	r4, #0
   14b80:	add	r4, r4, #1
   14b84:	ldr	r3, [r5], #4
   14b88:	mov	r2, r9
   14b8c:	mov	r1, r8
   14b90:	mov	r0, r7
   14b94:	blx	r3
   14b98:	cmp	r6, r4
   14b9c:	bne	14b80 <__libc_csu_init@@Base+0x34>
   14ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ba4:	andeq	r0, r1, r8, lsr #7
   14ba8:	andeq	r0, r1, r0, lsr #7

00014bac <__libc_csu_fini@@Base>:
   14bac:	bx	lr

Disassembly of section .fini:

00014bb0 <.fini>:
   14bb0:	push	{r3, lr}
   14bb4:	pop	{r3, pc}
