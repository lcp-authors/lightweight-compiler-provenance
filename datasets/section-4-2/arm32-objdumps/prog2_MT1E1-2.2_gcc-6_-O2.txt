
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

00010720 <.init>:
   10720:	push	{r3, lr}
   10724:	bl	108fc <_start@@Base+0x3c>
   10728:	pop	{r3, pc}

Disassembly of section .plt:

0001072c <strcmp@plt-0x14>:
   1072c:	push	{lr}		; (str lr, [sp, #-4]!)
   10730:	ldr	lr, [pc, #4]	; 1073c <strcmp@plt-0x4>
   10734:	add	lr, pc, lr
   10738:	ldr	pc, [lr, #8]!
   1073c:	andeq	r0, r1, r4, asr #17

00010740 <strcmp@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2244]!	; 0x8c4

0001074c <__isoc99_fscanf@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2236]!	; 0x8bc

00010758 <fopen@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2228]!	; 0x8b4

00010764 <free@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010770 <realloc@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2212]!	; 0x8a4

0001077c <fwrite@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2204]!	; 0x89c

00010788 <strcpy@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #16, 20	; 0x10000
   10790:	ldr	pc, [ip, #2196]!	; 0x894

00010794 <malloc@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #16, 20	; 0x10000
   1079c:	ldr	pc, [ip, #2188]!	; 0x88c

000107a0 <__libc_start_main@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #16, 20	; 0x10000
   107a8:	ldr	pc, [ip, #2180]!	; 0x884

000107ac <__gmon_start__@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #16, 20	; 0x10000
   107b4:	ldr	pc, [ip, #2172]!	; 0x87c

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #16, 20	; 0x10000
   107c0:	ldr	pc, [ip, #2164]!	; 0x874

000107c4 <fprintf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #16, 20	; 0x10000
   107cc:	ldr	pc, [ip, #2156]!	; 0x86c

000107d0 <fclose@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #16, 20	; 0x10000
   107d8:	ldr	pc, [ip, #2148]!	; 0x864

000107dc <abort@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #16, 20	; 0x10000
   107e4:	ldr	pc, [ip, #2140]!	; 0x85c

Disassembly of section .text:

000107e8 <main@@Base>:
   107e8:	ldr	r1, [pc, #184]	; 108a8 <main@@Base+0xc0>
   107ec:	ldr	r0, [pc, #184]	; 108ac <main@@Base+0xc4>
   107f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   107f4:	add	r1, pc, r1
   107f8:	sub	sp, sp, #12
   107fc:	add	r0, pc, r0
   10800:	bl	10758 <fopen@plt>
   10804:	add	r1, sp, #8
   10808:	mov	r5, #0
   1080c:	str	r5, [r1, #-4]!
   10810:	mov	r9, r0
   10814:	bl	109e8 <conta_vitorias@@Base>
   10818:	ldr	r3, [pc, #144]	; 108b0 <main@@Base+0xc8>
   1081c:	mov	r2, #12
   10820:	add	r3, pc, r3
   10824:	mov	r1, #1
   10828:	mov	r8, r0
   1082c:	ldr	r0, [pc, #128]	; 108b4 <main@@Base+0xcc>
   10830:	ldr	r6, [r3, r0]
   10834:	ldr	r0, [pc, #124]	; 108b8 <main@@Base+0xd0>
   10838:	ldr	r3, [r6]
   1083c:	add	r0, pc, r0
   10840:	bl	1077c <fwrite@plt>
   10844:	cmp	r8, r5
   10848:	beq	1088c <main@@Base+0xa4>
   1084c:	ldr	r3, [sp, #4]
   10850:	cmp	r3, r5
   10854:	ble	1088c <main@@Base+0xa4>
   10858:	ldr	r7, [pc, #92]	; 108bc <main@@Base+0xd4>
   1085c:	mov	r4, r8
   10860:	add	r7, pc, r7
   10864:	ldr	r3, [r4, #16]
   10868:	mov	r2, r4
   1086c:	mov	r1, r7
   10870:	ldr	r0, [r6]
   10874:	bl	107c4 <fprintf@plt>
   10878:	ldr	r3, [sp, #4]
   1087c:	add	r5, r5, #1
   10880:	cmp	r3, r5
   10884:	add	r4, r4, #20
   10888:	bgt	10864 <main@@Base+0x7c>
   1088c:	mov	r0, r8
   10890:	bl	10764 <free@plt>
   10894:	mov	r0, r9
   10898:	bl	107d0 <fclose@plt>
   1089c:	mov	r0, #0
   108a0:	add	sp, sp, #12
   108a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   108a8:	andeq	r0, r0, r8, lsl r4
   108ac:	andeq	r0, r0, r4, lsl r4
   108b0:	ldrdeq	r0, [r1], -r8
   108b4:	andeq	r0, r0, r4, asr #32
   108b8:	ldrdeq	r0, [r0], -ip
   108bc:	andeq	r0, r0, r8, asr #7

000108c0 <_start@@Base>:
   108c0:	mov	fp, #0
   108c4:	mov	lr, #0
   108c8:	pop	{r1}		; (ldr r1, [sp], #4)
   108cc:	mov	r2, sp
   108d0:	push	{r2}		; (str r2, [sp, #-4]!)
   108d4:	push	{r0}		; (str r0, [sp, #-4]!)
   108d8:	ldr	ip, [pc, #16]	; 108f0 <_start@@Base+0x30>
   108dc:	push	{ip}		; (str ip, [sp, #-4]!)
   108e0:	ldr	r0, [pc, #12]	; 108f4 <_start@@Base+0x34>
   108e4:	ldr	r3, [pc, #12]	; 108f8 <_start@@Base+0x38>
   108e8:	bl	107a0 <__libc_start_main@plt>
   108ec:	bl	107dc <abort@plt>
   108f0:	andeq	r0, r1, r0, lsl #24
   108f4:	andeq	r0, r1, r8, ror #15
   108f8:	andeq	r0, r1, r0, lsr #23
   108fc:	ldr	r3, [pc, #20]	; 10918 <_start@@Base+0x58>
   10900:	ldr	r2, [pc, #20]	; 1091c <_start@@Base+0x5c>
   10904:	add	r3, pc, r3
   10908:	ldr	r2, [r3, r2]
   1090c:	cmp	r2, #0
   10910:	bxeq	lr
   10914:	b	107ac <__gmon_start__@plt>
   10918:	strdeq	r0, [r1], -r4
   1091c:	andeq	r0, r0, r8, asr #32
   10920:	ldr	r3, [pc, #28]	; 10944 <_start@@Base+0x84>
   10924:	ldr	r0, [pc, #28]	; 10948 <_start@@Base+0x88>
   10928:	sub	r3, r3, r0
   1092c:	cmp	r3, #6
   10930:	bxls	lr
   10934:	ldr	r3, [pc, #16]	; 1094c <_start@@Base+0x8c>
   10938:	cmp	r3, #0
   1093c:	bxeq	lr
   10940:	bx	r3
   10944:	andeq	r1, r2, r7, asr r0
   10948:	andeq	r1, r2, r4, asr r0
   1094c:	andeq	r0, r0, r0
   10950:	ldr	r1, [pc, #36]	; 1097c <_start@@Base+0xbc>
   10954:	ldr	r0, [pc, #36]	; 10980 <_start@@Base+0xc0>
   10958:	sub	r1, r1, r0
   1095c:	asr	r1, r1, #2
   10960:	add	r1, r1, r1, lsr #31
   10964:	asrs	r1, r1, #1
   10968:	bxeq	lr
   1096c:	ldr	r3, [pc, #16]	; 10984 <_start@@Base+0xc4>
   10970:	cmp	r3, #0
   10974:	bxeq	lr
   10978:	bx	r3
   1097c:	andeq	r1, r2, r4, asr r0
   10980:	andeq	r1, r2, r4, asr r0
   10984:	andeq	r0, r0, r0
   10988:	push	{r4, lr}
   1098c:	ldr	r4, [pc, #24]	; 109ac <_start@@Base+0xec>
   10990:	ldrb	r3, [r4]
   10994:	cmp	r3, #0
   10998:	popne	{r4, pc}
   1099c:	bl	10920 <_start@@Base+0x60>
   109a0:	mov	r3, #1
   109a4:	strb	r3, [r4]
   109a8:	pop	{r4, pc}
   109ac:	andeq	r1, r2, r4, asr r0
   109b0:	ldr	r0, [pc, #40]	; 109e0 <_start@@Base+0x120>
   109b4:	ldr	r3, [r0]
   109b8:	cmp	r3, #0
   109bc:	bne	109c4 <_start@@Base+0x104>
   109c0:	b	10950 <_start@@Base+0x90>
   109c4:	ldr	r3, [pc, #24]	; 109e4 <_start@@Base+0x124>
   109c8:	cmp	r3, #0
   109cc:	beq	109c0 <_start@@Base+0x100>
   109d0:	push	{r4, lr}
   109d4:	blx	r3
   109d8:	pop	{r4, lr}
   109dc:	b	10950 <_start@@Base+0x90>
   109e0:	andeq	r0, r2, r4, lsl pc
   109e4:	andeq	r0, r0, r0

000109e8 <conta_vitorias@@Base>:
   109e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109ec:	mov	sl, r0
   109f0:	sub	sp, sp, #52	; 0x34
   109f4:	mov	r0, #20
   109f8:	mov	r7, r1
   109fc:	bl	10794 <malloc@plt>
   10a00:	subs	r6, r0, #0
   10a04:	beq	10b8c <conta_vitorias@@Base+0x1a4>
   10a08:	ldr	r9, [pc, #396]	; 10b9c <conta_vitorias@@Base+0x1b4>
   10a0c:	add	r5, sp, #12
   10a10:	add	r9, pc, r9
   10a14:	mov	r8, #0
   10a18:	str	r8, [r7]
   10a1c:	str	r8, [sp, #4]
   10a20:	mov	r2, r5
   10a24:	mov	r1, r9
   10a28:	mov	r0, sl
   10a2c:	bl	1074c <__isoc99_fscanf@plt>
   10a30:	cmp	r0, #1
   10a34:	bne	10ae8 <conta_vitorias@@Base+0x100>
   10a38:	mov	r0, r5
   10a3c:	bl	107b8 <strlen@plt>
   10a40:	add	r3, sp, #48	; 0x30
   10a44:	ldr	fp, [r7]
   10a48:	cmp	fp, #0
   10a4c:	add	r0, r3, r0
   10a50:	ldrb	r3, [sp, #4]
   10a54:	strb	r3, [r0, #-36]	; 0xffffffdc
   10a58:	ble	10a9c <conta_vitorias@@Base+0xb4>
   10a5c:	mov	r4, r6
   10a60:	mov	r8, #0
   10a64:	b	10a74 <conta_vitorias@@Base+0x8c>
   10a68:	cmp	r8, fp
   10a6c:	add	r4, r4, #20
   10a70:	beq	10aa0 <conta_vitorias@@Base+0xb8>
   10a74:	mov	r1, r4
   10a78:	mov	r0, r5
   10a7c:	bl	10740 <strcmp@plt>
   10a80:	add	r8, r8, #1
   10a84:	cmp	r0, #0
   10a88:	bne	10a68 <conta_vitorias@@Base+0x80>
   10a8c:	ldr	r3, [r4, #16]
   10a90:	add	r3, r3, #1
   10a94:	str	r3, [r4, #16]
   10a98:	b	10a20 <conta_vitorias@@Base+0x38>
   10a9c:	mov	r8, #0
   10aa0:	add	fp, fp, #1
   10aa4:	mov	r0, r6
   10aa8:	add	fp, fp, fp, lsl #2
   10aac:	lsl	r1, fp, #2
   10ab0:	bl	10770 <realloc@plt>
   10ab4:	subs	r6, r0, #0
   10ab8:	beq	10b8c <conta_vitorias@@Base+0x1a4>
   10abc:	add	r8, r8, r8, lsl #2
   10ac0:	mov	r1, r5
   10ac4:	add	r8, r6, r8, lsl #2
   10ac8:	mov	r0, r8
   10acc:	bl	10788 <strcpy@plt>
   10ad0:	ldr	r2, [r7]
   10ad4:	mov	r3, #1
   10ad8:	str	r3, [r8, #16]
   10adc:	add	r3, r2, r3
   10ae0:	str	r3, [r7]
   10ae4:	b	10a20 <conta_vitorias@@Base+0x38>
   10ae8:	ldr	fp, [r7]
   10aec:	cmp	fp, #1
   10af0:	ble	10b80 <conta_vitorias@@Base+0x198>
   10af4:	add	r8, r6, #20
   10af8:	mov	r9, #1
   10afc:	add	sl, sp, #28
   10b00:	mov	lr, r8
   10b04:	mov	ip, sl
   10b08:	ldm	lr!, {r0, r1, r2, r3}
   10b0c:	mov	r4, r8
   10b10:	ldr	r7, [r8, #16]
   10b14:	mov	r5, r9
   10b18:	stmia	ip!, {r0, r1, r2, r3}
   10b1c:	str	r7, [ip]
   10b20:	ldr	r3, [r4, #-4]
   10b24:	sub	lr, r4, #20
   10b28:	cmp	r7, r3
   10b2c:	mov	ip, r4
   10b30:	sub	r2, r4, r6
   10b34:	ble	10b58 <conta_vitorias@@Base+0x170>
   10b38:	ldm	lr!, {r0, r1, r2, r3}
   10b3c:	subs	r5, r5, #1
   10b40:	sub	r4, r4, #20
   10b44:	stmia	ip!, {r0, r1, r2, r3}
   10b48:	ldr	r3, [lr]
   10b4c:	str	r3, [ip]
   10b50:	bne	10b20 <conta_vitorias@@Base+0x138>
   10b54:	mov	r2, #0
   10b58:	mov	lr, sl
   10b5c:	add	ip, r6, r2
   10b60:	ldm	lr!, {r0, r1, r2, r3}
   10b64:	add	r9, r9, #1
   10b68:	cmp	fp, r9
   10b6c:	add	r8, r8, #20
   10b70:	ldr	lr, [lr]
   10b74:	stmia	ip!, {r0, r1, r2, r3}
   10b78:	str	lr, [ip]
   10b7c:	bne	10b00 <conta_vitorias@@Base+0x118>
   10b80:	mov	r0, r6
   10b84:	add	sp, sp, #52	; 0x34
   10b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b8c:	mov	r6, #0
   10b90:	mov	r0, r6
   10b94:	add	sp, sp, #52	; 0x34
   10b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b9c:	strdeq	r0, [r0], -r8

00010ba0 <__libc_csu_init@@Base>:
   10ba0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ba4:	mov	r7, r0
   10ba8:	ldr	r6, [pc, #72]	; 10bf8 <__libc_csu_init@@Base+0x58>
   10bac:	ldr	r5, [pc, #72]	; 10bfc <__libc_csu_init@@Base+0x5c>
   10bb0:	add	r6, pc, r6
   10bb4:	add	r5, pc, r5
   10bb8:	sub	r6, r6, r5
   10bbc:	mov	r8, r1
   10bc0:	mov	r9, r2
   10bc4:	bl	10720 <strcmp@plt-0x20>
   10bc8:	asrs	r6, r6, #2
   10bcc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bd0:	mov	r4, #0
   10bd4:	add	r4, r4, #1
   10bd8:	ldr	r3, [r5], #4
   10bdc:	mov	r2, r9
   10be0:	mov	r1, r8
   10be4:	mov	r0, r7
   10be8:	blx	r3
   10bec:	cmp	r6, r4
   10bf0:	bne	10bd4 <__libc_csu_init@@Base+0x34>
   10bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bf8:	andeq	r0, r1, r8, asr r3
   10bfc:	andeq	r0, r1, r0, asr r3

00010c00 <__libc_csu_fini@@Base>:
   10c00:	bx	lr

Disassembly of section .fini:

00010c04 <.fini>:
   10c04:	push	{r3, lr}
   10c08:	pop	{r3, pc}
