
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

000106d4 <.init>:
   106d4:	push	{r3, lr}
   106d8:	bl	10838 <abort@plt+0x48>
   106dc:	pop	{r3, pc}

Disassembly of section .plt:

000106e0 <calloc@plt-0x14>:
   106e0:	push	{lr}		; (str lr, [sp, #-4]!)
   106e4:	ldr	lr, [pc, #4]	; 106f0 <calloc@plt-0x4>
   106e8:	add	lr, pc, lr
   106ec:	ldr	pc, [lr, #8]!
   106f0:	andeq	r1, r1, r0, lsl r9

000106f4 <calloc@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2320]!	; 0x910

00010700 <strcmp@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2312]!	; 0x908

0001070c <printf@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2304]!	; 0x900

00010718 <fopen@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2296]!	; 0x8f8

00010724 <free@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010730 <fgets@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2280]!	; 0x8e8

0001073c <strdup@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2272]!	; 0x8e0

00010748 <unlink@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2264]!	; 0x8d8

00010754 <__xstat@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010760 <fwrite@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2248]!	; 0x8c8

0001076c <__libc_start_main@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2240]!	; 0x8c0

00010778 <__sysv_signal@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2232]!	; 0x8b8

00010784 <__gmon_start__@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2224]!	; 0x8b0

00010790 <getpid@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2216]!	; 0x8a8

0001079c <exit@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2208]!	; 0x8a0

000107a8 <strlen@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2200]!	; 0x898

000107b4 <fprintf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2192]!	; 0x890

000107c0 <__isoc99_sscanf@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2184]!	; 0x888

000107cc <fclose@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2176]!	; 0x880

000107d8 <sprintf@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2168]!	; 0x878

000107e4 <strncmp@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2160]!	; 0x870

000107f0 <abort@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2152]!	; 0x868

Disassembly of section .text:

000107fc <error@@Base-0x84c>:
   107fc:	mov	fp, #0
   10800:	mov	lr, #0
   10804:	pop	{r1}		; (ldr r1, [sp], #4)
   10808:	mov	r2, sp
   1080c:	push	{r2}		; (str r2, [sp, #-4]!)
   10810:	push	{r0}		; (str r0, [sp, #-4]!)
   10814:	ldr	ip, [pc, #16]	; 1082c <abort@plt+0x3c>
   10818:	push	{ip}		; (str ip, [sp, #-4]!)
   1081c:	ldr	r0, [pc, #12]	; 10830 <abort@plt+0x40>
   10820:	ldr	r3, [pc, #12]	; 10834 <abort@plt+0x44>
   10824:	bl	1076c <__libc_start_main@plt>
   10828:	bl	107f0 <abort@plt>
   1082c:	andeq	r1, r1, r4, lsr #9
   10830:			; <UNDEFINED> instruction: 0x000109bc
   10834:	andeq	r1, r1, r4, asr #8
   10838:	ldr	r3, [pc, #20]	; 10854 <abort@plt+0x64>
   1083c:	ldr	r2, [pc, #20]	; 10858 <abort@plt+0x68>
   10840:	add	r3, pc, r3
   10844:	ldr	r2, [r3, r2]
   10848:	cmp	r2, #0
   1084c:	bxeq	lr
   10850:	b	10784 <__gmon_start__@plt>
   10854:			; <UNDEFINED> instruction: 0x000117b8
   10858:	andeq	r0, r0, r4, rrx
   1085c:	ldr	r0, [pc, #24]	; 1087c <abort@plt+0x8c>
   10860:	ldr	r3, [pc, #24]	; 10880 <abort@plt+0x90>
   10864:	cmp	r3, r0
   10868:	bxeq	lr
   1086c:	ldr	r3, [pc, #16]	; 10884 <abort@plt+0x94>
   10870:	cmp	r3, #0
   10874:	bxeq	lr
   10878:	bx	r3
   1087c:	andeq	r2, r2, r8, ror r0
   10880:	andeq	r2, r2, r8, ror r0
   10884:	andeq	r0, r0, r0
   10888:	ldr	r0, [pc, #36]	; 108b4 <abort@plt+0xc4>
   1088c:	ldr	r1, [pc, #36]	; 108b8 <abort@plt+0xc8>
   10890:	sub	r1, r1, r0
   10894:	asr	r1, r1, #2
   10898:	add	r1, r1, r1, lsr #31
   1089c:	asrs	r1, r1, #1
   108a0:	bxeq	lr
   108a4:	ldr	r3, [pc, #16]	; 108bc <abort@plt+0xcc>
   108a8:	cmp	r3, #0
   108ac:	bxeq	lr
   108b0:	bx	r3
   108b4:	andeq	r2, r2, r8, ror r0
   108b8:	andeq	r2, r2, r8, ror r0
   108bc:	andeq	r0, r0, r0
   108c0:	push	{r4, lr}
   108c4:	ldr	r4, [pc, #24]	; 108e4 <abort@plt+0xf4>
   108c8:	ldrb	r3, [r4]
   108cc:	cmp	r3, #0
   108d0:	popne	{r4, pc}
   108d4:	bl	1085c <abort@plt+0x6c>
   108d8:	mov	r3, #1
   108dc:	strb	r3, [r4]
   108e0:	pop	{r4, pc}
   108e4:	andeq	r2, r2, r8, lsl #1
   108e8:	b	10888 <abort@plt+0x98>
   108ec:	movw	ip, #8852	; 0x2294
   108f0:	movt	ip, #2
   108f4:	movw	r1, #8436	; 0x20f4
   108f8:	movt	r1, #2
   108fc:	ldr	r3, [ip]
   10900:	ldr	r2, [r1]
   10904:	sub	r3, r3, r2
   10908:	str	r3, [ip]
   1090c:	ldr	r3, [ip, #4]
   10910:	ldr	r2, [r1, #4]
   10914:	sub	r3, r3, r2
   10918:	str	r3, [ip, #4]
   1091c:	ldr	r3, [ip, #8]
   10920:	ldr	r2, [r1, #8]
   10924:	sub	r3, r3, r2
   10928:	str	r3, [ip, #8]
   1092c:	add	r3, ip, #12
   10930:	add	r1, r1, #12
   10934:	add	ip, ip, #412	; 0x19c
   10938:	ldr	r2, [r3, #4]!
   1093c:	ldr	r0, [r1, #4]!
   10940:	sub	r2, r2, r0
   10944:	str	r2, [r3]
   10948:	cmp	r3, ip
   1094c:	bne	10938 <abort@plt+0x148>
   10950:	bx	lr
   10954:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10958:	strd	r6, [sp, #8]
   1095c:	str	r8, [sp, #16]
   10960:	str	lr, [sp, #20]
   10964:	movw	r7, #8852	; 0x2294
   10968:	movt	r7, #2
   1096c:	ldr	r6, [r7]
   10970:	ldr	r5, [r7, #8]!
   10974:	mov	r4, #0
   10978:	movw	r8, #5300	; 0x14b4
   1097c:	movt	r8, #1
   10980:	mla	r2, r4, r5, r6
   10984:	mov	r1, r4
   10988:	mov	r0, r8
   1098c:	bl	1070c <printf@plt>
   10990:	ldr	r3, [r7, #4]!
   10994:	mla	r6, r4, r3, r6
   10998:	sub	r5, r5, r3
   1099c:	add	r4, r4, #1
   109a0:	cmp	r4, #101	; 0x65
   109a4:	bne	10980 <abort@plt+0x190>
   109a8:	ldrd	r4, [sp]
   109ac:	ldrd	r6, [sp, #8]
   109b0:	ldr	r8, [sp, #16]
   109b4:	add	sp, sp, #20
   109b8:	pop	{pc}		; (ldr pc, [sp], #4)
   109bc:	push	{lr}		; (str lr, [sp, #-4]!)
   109c0:	sub	sp, sp, #12
   109c4:	str	r0, [sp, #4]
   109c8:	mov	r4, r1
   109cc:	mov	r3, #0
   109d0:	movw	r2, #5312	; 0x14c0
   109d4:	movt	r2, #1
   109d8:	add	r0, sp, #4
   109dc:	bl	111b4 <error@@Base+0x16c>
   109e0:	ldr	r3, [sp, #4]
   109e4:	sub	r3, r3, #1
   109e8:	cmp	r3, #1
   109ec:	bls	109fc <abort@plt+0x20c>
   109f0:	movw	r0, #5352	; 0x14e8
   109f4:	movt	r0, #1
   109f8:	bl	11048 <error@@Base>
   109fc:	ldr	r1, [r4]
   10a00:	movw	r0, #8852	; 0x2294
   10a04:	movt	r0, #2
   10a08:	bl	10ad0 <abort@plt+0x2e0>
   10a0c:	ldr	r3, [sp, #4]
   10a10:	cmp	r3, #2
   10a14:	beq	10a20 <abort@plt+0x230>
   10a18:	bl	10954 <abort@plt+0x164>
   10a1c:	bl	10fe8 <abort@plt+0x7f8>
   10a20:	ldr	r1, [r4, #4]
   10a24:	movw	r0, #8436	; 0x20f4
   10a28:	movt	r0, #2
   10a2c:	bl	10ad0 <abort@plt+0x2e0>
   10a30:	bl	108ec <abort@plt+0xfc>
   10a34:	b	10a18 <abort@plt+0x228>
   10a38:	str	r4, [sp, #-8]!
   10a3c:	str	lr, [sp, #4]
   10a40:	mov	r2, r0
   10a44:	mov	r1, #99	; 0x63
   10a48:	movw	r0, #8332	; 0x208c
   10a4c:	movt	r0, #2
   10a50:	bl	10730 <fgets@plt>
   10a54:	adds	r0, r0, #0
   10a58:	movne	r0, #1
   10a5c:	ldr	r4, [sp]
   10a60:	add	sp, sp, #4
   10a64:	pop	{pc}		; (ldr pc, [sp], #4)
   10a68:	strd	r4, [sp, #-16]!
   10a6c:	str	r6, [sp, #8]
   10a70:	str	lr, [sp, #12]
   10a74:	mov	r4, r1
   10a78:	mov	r5, r2
   10a7c:	bl	10a38 <abort@plt+0x248>
   10a80:	cmp	r0, #0
   10a84:	bne	10a98 <abort@plt+0x2a8>
   10a88:	ldrd	r4, [sp]
   10a8c:	ldr	r6, [sp, #8]
   10a90:	add	sp, sp, #12
   10a94:	pop	{pc}		; (ldr pc, [sp], #4)
   10a98:	mov	r2, r4
   10a9c:	movw	r1, #5488	; 0x1570
   10aa0:	movt	r1, #1
   10aa4:	movw	r0, #8332	; 0x208c
   10aa8:	movt	r0, #2
   10aac:	bl	107c0 <__isoc99_sscanf@plt>
   10ab0:	cmp	r0, #1
   10ab4:	movne	r0, #0
   10ab8:	bne	10a88 <abort@plt+0x298>
   10abc:	ldr	r3, [r5]
   10ac0:	ldr	r2, [r4]
   10ac4:	add	r3, r3, r2
   10ac8:	str	r3, [r5]
   10acc:	b	10a88 <abort@plt+0x298>
   10ad0:	strd	r4, [sp, #-20]!	; 0xffffffec
   10ad4:	strd	r6, [sp, #8]
   10ad8:	str	lr, [sp, #16]
   10adc:	sub	sp, sp, #20
   10ae0:	mov	r5, r0
   10ae4:	mov	r6, r1
   10ae8:	movw	r1, #5384	; 0x1508
   10aec:	movt	r1, #1
   10af0:	mov	r0, r6
   10af4:	bl	11130 <error@@Base+0xe8>
   10af8:	mov	r4, r0
   10afc:	bl	10a38 <abort@plt+0x248>
   10b00:	cmp	r0, #0
   10b04:	beq	10c50 <abort@plt+0x460>
   10b08:	mov	r2, #42	; 0x2a
   10b0c:	movw	r1, #5388	; 0x150c
   10b10:	movt	r1, #1
   10b14:	movw	r0, #8332	; 0x208c
   10b18:	movt	r0, #2
   10b1c:	bl	107e4 <strncmp@plt>
   10b20:	cmp	r0, #0
   10b24:	bne	10c50 <abort@plt+0x460>
   10b28:	mov	r0, r4
   10b2c:	bl	10a38 <abort@plt+0x248>
   10b30:	cmp	r0, #0
   10b34:	beq	10c50 <abort@plt+0x460>
   10b38:	movw	r1, #5436	; 0x153c
   10b3c:	movt	r1, #1
   10b40:	movw	r0, #8332	; 0x208c
   10b44:	movt	r0, #2
   10b48:	bl	10700 <strcmp@plt>
   10b4c:	cmp	r0, #0
   10b50:	bne	10c50 <abort@plt+0x460>
   10b54:	mov	r2, r5
   10b58:	add	r1, sp, #8
   10b5c:	mov	r0, r4
   10b60:	bl	10a68 <abort@plt+0x278>
   10b64:	cmp	r0, #0
   10b68:	beq	10c50 <abort@plt+0x460>
   10b6c:	add	r2, r5, #4
   10b70:	add	r1, sp, #8
   10b74:	mov	r0, r4
   10b78:	bl	10a68 <abort@plt+0x278>
   10b7c:	cmp	r0, #0
   10b80:	beq	10c50 <abort@plt+0x460>
   10b84:	add	r2, r5, #8
   10b88:	add	r1, sp, #12
   10b8c:	mov	r0, r4
   10b90:	bl	10a68 <abort@plt+0x278>
   10b94:	cmp	r0, #0
   10b98:	beq	10c50 <abort@plt+0x460>
   10b9c:	ldr	r3, [sp, #12]
   10ba0:	cmp	r3, #0
   10ba4:	bgt	10bc4 <abort@plt+0x3d4>
   10ba8:	mov	r0, r4
   10bac:	bl	10ed4 <abort@plt+0x6e4>
   10bb0:	add	sp, sp, #20
   10bb4:	ldrd	r4, [sp]
   10bb8:	ldrd	r6, [sp, #8]
   10bbc:	add	sp, sp, #16
   10bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   10bc4:	mov	r0, r4
   10bc8:	bl	10a38 <abort@plt+0x248>
   10bcc:	cmp	r0, #0
   10bd0:	beq	10ba8 <abort@plt+0x3b8>
   10bd4:	mov	r0, r4
   10bd8:	bl	10a38 <abort@plt+0x248>
   10bdc:	cmp	r0, #0
   10be0:	beq	10ba8 <abort@plt+0x3b8>
   10be4:	mov	r0, r4
   10be8:	bl	10a38 <abort@plt+0x248>
   10bec:	cmp	r0, #0
   10bf0:	beq	10ba8 <abort@plt+0x3b8>
   10bf4:	movw	r7, #5484	; 0x156c
   10bf8:	movt	r7, #1
   10bfc:	movw	r6, #8332	; 0x208c
   10c00:	movt	r6, #2
   10c04:	b	10c3c <abort@plt+0x44c>
   10c08:	add	r3, sp, #4
   10c0c:	add	r2, sp, #8
   10c10:	mov	r1, r7
   10c14:	mov	r0, r6
   10c18:	bl	107c0 <__isoc99_sscanf@plt>
   10c1c:	cmp	r0, #2
   10c20:	bne	10ba8 <abort@plt+0x3b8>
   10c24:	ldr	r3, [sp, #4]
   10c28:	add	r3, r5, r3, lsl #2
   10c2c:	ldr	r2, [r3, #12]
   10c30:	ldr	r1, [sp, #8]
   10c34:	add	r2, r2, r1
   10c38:	str	r2, [r3, #12]
   10c3c:	mov	r0, r4
   10c40:	bl	10a38 <abort@plt+0x248>
   10c44:	cmp	r0, #0
   10c48:	beq	10ba8 <abort@plt+0x3b8>
   10c4c:	b	10c08 <abort@plt+0x418>
   10c50:	movw	r1, #5376	; 0x1500
   10c54:	movt	r1, #1
   10c58:	cmp	r6, #0
   10c5c:	movne	r1, r6
   10c60:	movw	r0, #5492	; 0x1574
   10c64:	movt	r0, #1
   10c68:	bl	110ec <error@@Base+0xa4>
   10c6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10c70:	strd	r6, [sp, #8]
   10c74:	str	r8, [sp, #16]
   10c78:	str	lr, [sp, #20]
   10c7c:	mov	r5, r0
   10c80:	mov	r0, r1
   10c84:	movw	r1, #5512	; 0x1588
   10c88:	movt	r1, #1
   10c8c:	bl	11130 <error@@Base+0xe8>
   10c90:	mov	r6, r0
   10c94:	movw	r3, #5436	; 0x153c
   10c98:	movt	r3, #1
   10c9c:	movw	r2, #5388	; 0x150c
   10ca0:	movt	r2, #1
   10ca4:	movw	r1, #5516	; 0x158c
   10ca8:	movt	r1, #1
   10cac:	bl	107b4 <fprintf@plt>
   10cb0:	movw	r4, #5536	; 0x15a0
   10cb4:	movt	r4, #1
   10cb8:	movw	r3, #5524	; 0x1594
   10cbc:	movt	r3, #1
   10cc0:	ldr	r2, [r5]
   10cc4:	mov	r1, r4
   10cc8:	mov	r0, r6
   10ccc:	bl	107b4 <fprintf@plt>
   10cd0:	movw	r3, #5548	; 0x15ac
   10cd4:	movt	r3, #1
   10cd8:	ldr	r2, [r5, #4]
   10cdc:	mov	r1, r4
   10ce0:	mov	r0, r6
   10ce4:	bl	107b4 <fprintf@plt>
   10ce8:	movw	r3, #5560	; 0x15b8
   10cec:	movt	r3, #1
   10cf0:	ldr	r2, [r5, #8]
   10cf4:	mov	r1, r4
   10cf8:	mov	r0, r6
   10cfc:	bl	107b4 <fprintf@plt>
   10d00:	ldr	r3, [r5, #8]
   10d04:	cmp	r3, #0
   10d08:	bgt	10d28 <abort@plt+0x538>
   10d0c:	mov	r0, r6
   10d10:	bl	10ed4 <abort@plt+0x6e4>
   10d14:	ldrd	r4, [sp]
   10d18:	ldrd	r6, [sp, #8]
   10d1c:	ldr	r8, [sp, #16]
   10d20:	add	sp, sp, #20
   10d24:	pop	{pc}		; (ldr pc, [sp], #4)
   10d28:	mov	r3, r6
   10d2c:	mov	r2, #25
   10d30:	mov	r1, #1
   10d34:	movw	r0, #5568	; 0x15c0
   10d38:	movt	r0, #1
   10d3c:	bl	10760 <fwrite@plt>
   10d40:	add	r5, r5, #12
   10d44:	mov	r4, #1
   10d48:	movw	r7, #5596	; 0x15dc
   10d4c:	movt	r7, #1
   10d50:	b	10d60 <abort@plt+0x570>
   10d54:	add	r4, r4, #1
   10d58:	cmp	r4, #101	; 0x65
   10d5c:	beq	10d0c <abort@plt+0x51c>
   10d60:	ldr	r2, [r5, #4]!
   10d64:	cmp	r2, #0
   10d68:	ble	10d54 <abort@plt+0x564>
   10d6c:	mov	r3, r4
   10d70:	mov	r1, r7
   10d74:	mov	r0, r6
   10d78:	bl	107b4 <fprintf@plt>
   10d7c:	b	10d54 <abort@plt+0x564>
   10d80:	strd	r4, [sp, #-12]!
   10d84:	str	lr, [sp, #8]
   10d88:	sub	sp, sp, #116	; 0x74
   10d8c:	mov	r5, r0
   10d90:	movw	r3, #9272	; 0x2438
   10d94:	movt	r3, #2
   10d98:	ldr	r4, [r3]
   10d9c:	bl	10790 <getpid@plt>
   10da0:	str	r5, [sp]
   10da4:	mov	r3, r0
   10da8:	mov	r2, r4
   10dac:	movw	r1, #5608	; 0x15e8
   10db0:	movt	r1, #1
   10db4:	add	r0, sp, #12
   10db8:	bl	107d8 <sprintf@plt>
   10dbc:	add	r0, sp, #12
   10dc0:	bl	1073c <strdup@plt>
   10dc4:	add	sp, sp, #116	; 0x74
   10dc8:	ldrd	r4, [sp]
   10dcc:	add	sp, sp, #8
   10dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   10dd4:	str	r7, [sp, #-8]!
   10dd8:	str	lr, [sp, #4]
   10ddc:	mov	r6, r0
   10de0:	movw	r3, #9276	; 0x243c
   10de4:	movt	r3, #2
   10de8:	ldr	r3, [r3]
   10dec:	cmp	r3, #0
   10df0:	beq	10df8 <abort@plt+0x608>
   10df4:	blx	r3
   10df8:	movw	r3, #8432	; 0x20f0
   10dfc:	movt	r3, #2
   10e00:	ldrsh	r3, [r3]
   10e04:	cmp	r3, #0
   10e08:	ble	10e44 <abort@plt+0x654>
   10e0c:	mov	r4, #1
   10e10:	movw	r5, #8432	; 0x20f0
   10e14:	movt	r5, #2
   10e18:	mov	r0, r4
   10e1c:	bl	10d80 <abort@plt+0x590>
   10e20:	mov	r7, r0
   10e24:	bl	10748 <unlink@plt>
   10e28:	mov	r0, r7
   10e2c:	bl	10724 <free@plt>
   10e30:	add	r4, r4, #1
   10e34:	sxth	r4, r4
   10e38:	ldrsh	r3, [r5]
   10e3c:	cmp	r3, r4
   10e40:	bge	10e18 <abort@plt+0x628>
   10e44:	mov	r0, r6
   10e48:	bl	1079c <exit@plt>
   10e4c:	str	r4, [sp, #-8]!
   10e50:	str	lr, [sp, #4]
   10e54:	ldrb	r3, [r0]
   10e58:	cmp	r3, #0
   10e5c:	beq	10eb0 <abort@plt+0x6c0>
   10e60:	ldrb	r2, [r1]
   10e64:	cmp	r2, r3
   10e68:	bne	10ecc <abort@plt+0x6dc>
   10e6c:	mov	ip, r1
   10e70:	mov	r2, r0
   10e74:	rsb	r0, r0, #1
   10e78:	add	r4, r0, r2
   10e7c:	ldrb	r3, [r2, #1]!
   10e80:	cmp	r3, #0
   10e84:	beq	10eb4 <abort@plt+0x6c4>
   10e88:	ldrb	lr, [ip, #1]!
   10e8c:	cmp	lr, r3
   10e90:	beq	10e78 <abort@plt+0x688>
   10e94:	ldrb	r2, [r1, r4]
   10e98:	cmp	r2, r3
   10e9c:	mvnhi	r0, #0
   10ea0:	movls	r0, #1
   10ea4:	ldr	r4, [sp]
   10ea8:	add	sp, sp, #4
   10eac:	pop	{pc}		; (ldr pc, [sp], #4)
   10eb0:	mov	r4, #0
   10eb4:	ldrb	r3, [r1, r4]
   10eb8:	cmp	r3, #0
   10ebc:	moveq	r0, #0
   10ec0:	beq	10ea4 <abort@plt+0x6b4>
   10ec4:	mov	r3, #0
   10ec8:	b	10e94 <abort@plt+0x6a4>
   10ecc:	mov	r4, #0
   10ed0:	b	10e94 <abort@plt+0x6a4>
   10ed4:	movw	r3, #8320	; 0x2080
   10ed8:	movt	r3, #2
   10edc:	ldr	r3, [r3]
   10ee0:	cmp	r3, r0
   10ee4:	bxeq	lr
   10ee8:	movw	r3, #8324	; 0x2084
   10eec:	movt	r3, #2
   10ef0:	ldr	r3, [r3]
   10ef4:	cmp	r3, r0
   10ef8:	bxeq	lr
   10efc:	str	r4, [sp, #-8]!
   10f00:	str	lr, [sp, #4]
   10f04:	bl	107cc <fclose@plt>
   10f08:	ldr	r4, [sp]
   10f0c:	add	sp, sp, #4
   10f10:	pop	{pc}		; (ldr pc, [sp], #4)
   10f14:	push	{lr}		; (str lr, [sp, #-4]!)
   10f18:	sub	sp, sp, #92	; 0x5c
   10f1c:	mov	r2, sp
   10f20:	mov	r1, r0
   10f24:	mov	r0, #3
   10f28:	bl	10754 <__xstat@plt>
   10f2c:	clz	r0, r0
   10f30:	lsr	r0, r0, #5
   10f34:	add	sp, sp, #92	; 0x5c
   10f38:	pop	{pc}		; (ldr pc, [sp], #4)
   10f3c:	str	r4, [sp, #-8]!
   10f40:	str	lr, [sp, #4]
   10f44:	movw	r3, #8432	; 0x20f0
   10f48:	movt	r3, #2
   10f4c:	ldrh	r0, [r3]
   10f50:	add	r0, r0, #1
   10f54:	sxth	r0, r0
   10f58:	strh	r0, [r3]
   10f5c:	bl	10d80 <abort@plt+0x590>
   10f60:	mov	r4, r0
   10f64:	bl	10748 <unlink@plt>
   10f68:	mov	r0, r4
   10f6c:	ldr	r4, [sp]
   10f70:	add	sp, sp, #4
   10f74:	pop	{pc}		; (ldr pc, [sp], #4)
   10f78:	str	r4, [sp, #-8]!
   10f7c:	str	lr, [sp, #4]
   10f80:	mov	r4, r0
   10f84:	bl	107a8 <strlen@plt>
   10f88:	uxth	r0, r0
   10f8c:	sub	r2, r0, #1
   10f90:	sxth	r2, r2
   10f94:	cmp	r2, #0
   10f98:	blt	10fd4 <abort@plt+0x7e4>
   10f9c:	ldrb	r3, [r4, r2]
   10fa0:	cmp	r3, #47	; 0x2f
   10fa4:	beq	10fd4 <abort@plt+0x7e4>
   10fa8:	sub	r0, r0, #2
   10fac:	sxth	r3, r0
   10fb0:	add	r1, r3, #1
   10fb4:	add	r1, r4, r1
   10fb8:	sxth	r2, r3
   10fbc:	cmp	r2, #0
   10fc0:	blt	10fd4 <abort@plt+0x7e4>
   10fc4:	sub	r3, r3, #1
   10fc8:	ldrb	r0, [r1, #-1]!
   10fcc:	cmp	r0, #47	; 0x2f
   10fd0:	bne	10fb8 <abort@plt+0x7c8>
   10fd4:	add	r0, r2, #1
   10fd8:	add	r0, r4, r0
   10fdc:	ldr	r4, [sp]
   10fe0:	add	sp, sp, #4
   10fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   10fe8:	str	r4, [sp, #-8]!
   10fec:	str	lr, [sp, #4]
   10ff0:	mov	r0, #0
   10ff4:	bl	10dd4 <abort@plt+0x5e4>
   10ff8:	str	r4, [sp, #-8]!
   10ffc:	str	lr, [sp, #4]
   11000:	movw	r2, #9268	; 0x2434
   11004:	movt	r2, #2
   11008:	ldr	r2, [r2]
   1100c:	cmp	r2, #0
   11010:	beq	1101c <abort@plt+0x82c>
   11014:	blx	r2
   11018:	bl	10fe8 <abort@plt+0x7f8>
   1101c:	movw	r2, #9272	; 0x2438
   11020:	movt	r2, #2
   11024:	movw	ip, #8312	; 0x2078
   11028:	movt	ip, #2
   1102c:	mov	r3, r0
   11030:	ldr	r2, [r2]
   11034:	movw	r1, #5624	; 0x15f8
   11038:	movt	r1, #1
   1103c:	ldr	r0, [ip]
   11040:	bl	107b4 <fprintf@plt>
   11044:	b	11018 <abort@plt+0x828>

00011048 <error@@Base>:
   11048:	str	r4, [sp, #-8]!
   1104c:	str	lr, [sp, #4]
   11050:	movw	r2, #9272	; 0x2438
   11054:	movt	r2, #2
   11058:	movw	ip, #8312	; 0x2078
   1105c:	movt	ip, #2
   11060:	mov	r3, r0
   11064:	ldr	r2, [r2]
   11068:	movw	r1, #5640	; 0x1608
   1106c:	movt	r1, #1
   11070:	ldr	r0, [ip]
   11074:	bl	107b4 <fprintf@plt>
   11078:	movw	r3, #8304	; 0x2070
   1107c:	movt	r3, #2
   11080:	ldr	r0, [r3]
   11084:	bl	10dd4 <abort@plt+0x5e4>
   11088:	str	r4, [sp, #-8]!
   1108c:	str	lr, [sp, #4]
   11090:	bl	106f4 <calloc@plt>
   11094:	cmp	r0, #0
   11098:	beq	110a8 <error@@Base+0x60>
   1109c:	ldr	r4, [sp]
   110a0:	add	sp, sp, #4
   110a4:	pop	{pc}		; (ldr pc, [sp], #4)
   110a8:	movw	r0, #5648	; 0x1610
   110ac:	movt	r0, #1
   110b0:	bl	11048 <error@@Base>
   110b4:	movw	r3, #8432	; 0x20f0
   110b8:	movt	r3, #2
   110bc:	ldrb	r3, [r3, #2]
   110c0:	cmp	r3, #0
   110c4:	bxne	lr
   110c8:	str	r4, [sp, #-8]!
   110cc:	str	lr, [sp, #4]
   110d0:	movw	r3, #8432	; 0x20f0
   110d4:	movt	r3, #2
   110d8:	mov	r2, #1
   110dc:	strb	r2, [r3, #2]
   110e0:	movw	r0, #5676	; 0x162c
   110e4:	movt	r0, #1
   110e8:	bl	11048 <error@@Base>
   110ec:	push	{lr}		; (str lr, [sp, #-4]!)
   110f0:	sub	sp, sp, #12
   110f4:	movw	r2, #9272	; 0x2438
   110f8:	movt	r2, #2
   110fc:	movw	ip, #8312	; 0x2078
   11100:	movt	ip, #2
   11104:	str	r1, [sp]
   11108:	mov	r3, r0
   1110c:	ldr	r2, [r2]
   11110:	movw	r1, #5692	; 0x163c
   11114:	movt	r1, #1
   11118:	ldr	r0, [ip]
   1111c:	bl	107b4 <fprintf@plt>
   11120:	movw	r3, #8304	; 0x2070
   11124:	movt	r3, #2
   11128:	ldr	r0, [r3]
   1112c:	bl	10dd4 <abort@plt+0x5e4>
   11130:	strd	r4, [sp, #-16]!
   11134:	str	r6, [sp, #8]
   11138:	str	lr, [sp, #12]
   1113c:	subs	r5, r0, #0
   11140:	beq	11168 <error@@Base+0x120>
   11144:	mov	r4, r1
   11148:	mov	r0, r5
   1114c:	bl	10718 <fopen@plt>
   11150:	cmp	r0, #0
   11154:	beq	11188 <error@@Base+0x140>
   11158:	ldrd	r4, [sp]
   1115c:	ldr	r6, [sp, #8]
   11160:	add	sp, sp, #12
   11164:	pop	{pc}		; (ldr pc, [sp], #4)
   11168:	ldrb	r3, [r1]
   1116c:	cmp	r3, #114	; 0x72
   11170:	movweq	r3, #8320	; 0x2080
   11174:	movteq	r3, #2
   11178:	movwne	r3, #8324	; 0x2084
   1117c:	movtne	r3, #2
   11180:	ldr	r0, [r3]
   11184:	b	11158 <error@@Base+0x110>
   11188:	ldrb	r3, [r4]
   1118c:	cmp	r3, #119	; 0x77
   11190:	beq	111a4 <error@@Base+0x15c>
   11194:	mov	r1, r5
   11198:	movw	r0, #5732	; 0x1664
   1119c:	movt	r0, #1
   111a0:	bl	110ec <error@@Base+0xa4>
   111a4:	mov	r1, r5
   111a8:	movw	r0, #5708	; 0x164c
   111ac:	movt	r0, #1
   111b0:	bl	110ec <error@@Base+0xa4>
   111b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   111b8:	strd	r6, [sp, #8]
   111bc:	strd	r8, [sp, #16]
   111c0:	strd	sl, [sp, #24]
   111c4:	str	lr, [sp, #32]
   111c8:	sub	sp, sp, #28
   111cc:	mov	r5, r0
   111d0:	str	r0, [sp, #4]
   111d4:	mov	r9, r1
   111d8:	str	r2, [sp, #20]
   111dc:	mov	r6, r3
   111e0:	ldr	r0, [r1]
   111e4:	bl	10f78 <abort@plt+0x788>
   111e8:	movw	r3, #9272	; 0x2438
   111ec:	movt	r3, #2
   111f0:	str	r0, [r3]
   111f4:	movw	r4, #4276	; 0x10b4
   111f8:	movt	r4, #1
   111fc:	mov	r1, r4
   11200:	mov	r0, #2
   11204:	bl	10778 <__sysv_signal@plt>
   11208:	mov	r1, r4
   1120c:	mov	r0, #15
   11210:	bl	10778 <__sysv_signal@plt>
   11214:	ldr	r7, [r5]
   11218:	cmp	r7, #1
   1121c:	beq	11248 <error@@Base+0x200>
   11220:	movle	r8, #0
   11224:	ble	11260 <error@@Base+0x218>
   11228:	mov	r8, #0
   1122c:	mov	sl, #1
   11230:	mov	r4, sl
   11234:	movw	r3, #5752	; 0x1678
   11238:	movt	r3, #1
   1123c:	str	r3, [sp, #12]
   11240:	str	r6, [sp, #16]
   11244:	b	11304 <error@@Base+0x2bc>
   11248:	movw	r3, #8304	; 0x2070
   1124c:	movt	r3, #2
   11250:	ldrb	r3, [r3, #4]
   11254:	cmp	r3, #0
   11258:	moveq	r8, #0
   1125c:	bne	11284 <error@@Base+0x23c>
   11260:	ldr	r3, [sp, #4]
   11264:	str	r8, [r3]
   11268:	add	sp, sp, #28
   1126c:	ldrd	r4, [sp]
   11270:	ldrd	r6, [sp, #8]
   11274:	ldrd	r8, [sp, #16]
   11278:	ldrd	sl, [sp, #24]
   1127c:	add	sp, sp, #32
   11280:	pop	{pc}		; (ldr pc, [sp], #4)
   11284:	ldr	r0, [sp, #20]
   11288:	bl	10ff8 <abort@plt+0x808>
   1128c:	ldr	r0, [sp, #20]
   11290:	bl	10ff8 <abort@plt+0x808>
   11294:	ldr	r0, [sp, #16]
   11298:	b	1139c <error@@Base+0x354>
   1129c:	ldr	r3, [r0, #8]
   112a0:	cmp	r3, #0
   112a4:	beq	113f8 <error@@Base+0x3b0>
   112a8:	ldrb	r2, [r5, #2]
   112ac:	cmp	r2, #0
   112b0:	bne	113f8 <error@@Base+0x3b0>
   112b4:	ldrb	r2, [r3]
   112b8:	cmp	r2, #0
   112bc:	bne	112cc <error@@Base+0x284>
   112c0:	mov	r2, #1
   112c4:	strb	r2, [r3]
   112c8:	b	112e8 <error@@Base+0x2a0>
   112cc:	mov	r1, r5
   112d0:	movw	r0, #5776	; 0x1690
   112d4:	movt	r0, #1
   112d8:	bl	110ec <error@@Base+0xa4>
   112dc:	add	r3, r8, #1
   112e0:	str	r5, [r9, r8, lsl #2]
   112e4:	sxth	r8, r3
   112e8:	add	r4, r4, #1
   112ec:	sxth	r4, r4
   112f0:	mov	sl, r4
   112f4:	ldr	r3, [sp, #4]
   112f8:	ldr	r7, [r3]
   112fc:	cmp	r4, r7
   11300:	bge	11260 <error@@Base+0x218>
   11304:	lsl	r3, r4, #2
   11308:	str	r3, [sp, #8]
   1130c:	ldr	r5, [r9, r4, lsl #2]
   11310:	ldrb	r3, [r5]
   11314:	cmp	r3, #45	; 0x2d
   11318:	bne	112dc <error@@Base+0x294>
   1131c:	ldrb	fp, [r5, #1]
   11320:	cmp	fp, #0
   11324:	beq	112dc <error@@Base+0x294>
   11328:	mov	r0, r5
   1132c:	bl	107a8 <strlen@plt>
   11330:	mov	r2, r0
   11334:	mov	r1, r5
   11338:	ldr	r0, [sp, #12]
   1133c:	bl	107e4 <strncmp@plt>
   11340:	cmp	r0, #0
   11344:	beq	1128c <error@@Base+0x244>
   11348:	add	sl, sl, #1
   1134c:	cmp	sl, r7
   11350:	ldrlt	r3, [sp, #8]
   11354:	addlt	r3, r9, r3
   11358:	ldrlt	r1, [r3, #4]
   1135c:	movge	r1, #0
   11360:	cmp	r6, #0
   11364:	beq	113f8 <error@@Base+0x3b0>
   11368:	ldrb	r3, [r6]
   1136c:	cmp	fp, r3
   11370:	cmpne	r3, #0
   11374:	beq	11294 <error@@Base+0x24c>
   11378:	mov	r2, #0
   1137c:	add	r2, r2, #1
   11380:	sxth	r2, r2
   11384:	add	r3, r2, r2, lsl #1
   11388:	add	r0, r6, r3, lsl #2
   1138c:	ldrb	r3, [r6, r3, lsl #2]
   11390:	cmp	fp, r3
   11394:	cmpne	r3, #0
   11398:	bne	1137c <error@@Base+0x334>
   1139c:	cmp	r3, #0
   113a0:	beq	113f8 <error@@Base+0x3b0>
   113a4:	ldr	r3, [r0, #4]
   113a8:	cmp	r3, #0
   113ac:	beq	1129c <error@@Base+0x254>
   113b0:	ldrb	r2, [r5, #2]
   113b4:	cmp	r1, #0
   113b8:	cmpeq	r2, #0
   113bc:	beq	113ec <error@@Base+0x3a4>
   113c0:	ldr	r0, [r3]
   113c4:	cmp	r0, #0
   113c8:	bne	112cc <error@@Base+0x284>
   113cc:	cmp	r2, #0
   113d0:	addne	r1, r5, #2
   113d4:	str	r1, [r3]
   113d8:	ldrb	r3, [r5, #2]
   113dc:	cmp	r3, #0
   113e0:	addeq	r4, r4, #1
   113e4:	sxtheq	r4, r4
   113e8:	b	112e8 <error@@Base+0x2a0>
   113ec:	ldr	r3, [r0, #8]
   113f0:	cmp	r3, #0
   113f4:	bne	112b4 <error@@Base+0x26c>
   113f8:	mov	r1, r5
   113fc:	movw	r0, #5760	; 0x1680
   11400:	movt	r0, #1
   11404:	bl	110ec <error@@Base+0xa4>
   11408:	push	{lr}		; (str lr, [sp, #-4]!)
   1140c:	sub	sp, sp, #12
   11410:	movw	r2, #9272	; 0x2438
   11414:	movt	r2, #2
   11418:	movw	ip, #8312	; 0x2078
   1141c:	movt	ip, #2
   11420:	str	r1, [sp]
   11424:	mov	r3, r0
   11428:	ldr	r2, [r2]
   1142c:	movw	r1, #5692	; 0x163c
   11430:	movt	r1, #1
   11434:	ldr	r0, [ip]
   11438:	bl	107b4 <fprintf@plt>
   1143c:	add	sp, sp, #12
   11440:	pop	{pc}		; (ldr pc, [sp], #4)
   11444:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11448:	mov	r7, r0
   1144c:	ldr	r6, [pc, #72]	; 1149c <error@@Base+0x454>
   11450:	ldr	r5, [pc, #72]	; 114a0 <error@@Base+0x458>
   11454:	add	r6, pc, r6
   11458:	add	r5, pc, r5
   1145c:	sub	r6, r6, r5
   11460:	mov	r8, r1
   11464:	mov	r9, r2
   11468:	bl	106d4 <calloc@plt-0x20>
   1146c:	asrs	r6, r6, #2
   11470:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11474:	mov	r4, #0
   11478:	add	r4, r4, #1
   1147c:	ldr	r3, [r5], #4
   11480:	mov	r2, r9
   11484:	mov	r1, r8
   11488:	mov	r0, r7
   1148c:	blx	r3
   11490:	cmp	r6, r4
   11494:	bne	11478 <error@@Base+0x430>
   11498:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1149c:	andeq	r0, r1, r8, lsr #21
   114a0:	andeq	r0, r1, r0, lsr #21
   114a4:	bx	lr

Disassembly of section .fini:

000114a8 <.fini>:
   114a8:	push	{r3, lr}
   114ac:	pop	{r3, pc}
