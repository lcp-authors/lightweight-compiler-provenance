
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

0001056c <.init>:
   1056c:	push	{r3, lr}
   10570:	bl	10a48 <abort@plt+0x3f0>
   10574:	pop	{r3, pc}

Disassembly of section .plt:

00010578 <raise@plt-0x14>:
   10578:	push	{lr}		; (str lr, [sp, #-4]!)
   1057c:	ldr	lr, [pc, #4]	; 10588 <raise@plt-0x4>
   10580:	add	lr, pc, lr
   10584:	ldr	pc, [lr, #8]!
   10588:	andeq	r1, r1, r8, ror sl

0001058c <raise@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #69632	; 0x11000
   10594:	ldr	pc, [ip, #2680]!	; 0xa78

00010598 <strtol@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #69632	; 0x11000
   105a0:	ldr	pc, [ip, #2672]!	; 0xa70

000105a4 <free@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #69632	; 0x11000
   105ac:	ldr	pc, [ip, #2664]!	; 0xa68

000105b0 <ferror@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #69632	; 0x11000
   105b8:	ldr	pc, [ip, #2656]!	; 0xa60

000105bc <fwrite@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #69632	; 0x11000
   105c4:	ldr	pc, [ip, #2648]!	; 0xa58

000105c8 <puts@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #69632	; 0x11000
   105d0:	ldr	pc, [ip, #2640]!	; 0xa50

000105d4 <malloc@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #69632	; 0x11000
   105dc:	ldr	pc, [ip, #2632]!	; 0xa48

000105e0 <__libc_start_main@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #69632	; 0x11000
   105e8:	ldr	pc, [ip, #2624]!	; 0xa40

000105ec <strerror@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #69632	; 0x11000
   105f4:	ldr	pc, [ip, #2616]!	; 0xa38

000105f8 <__gmon_start__@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #69632	; 0x11000
   10600:	ldr	pc, [ip, #2608]!	; 0xa30

00010604 <exit@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2600]!	; 0xa28

00010610 <__errno_location@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2592]!	; 0xa20

0001061c <memset@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2584]!	; 0xa18

00010628 <putchar@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2576]!	; 0xa10

00010634 <__printf_chk@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2568]!	; 0xa08

00010640 <__fprintf_chk@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #69632	; 0x11000
   10648:	ldr	pc, [ip, #2560]!	; 0xa00

0001064c <fclose@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #69632	; 0x11000
   10654:	ldr	pc, [ip, #2552]!	; 0x9f8

00010658 <abort@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

00010664 <.text>:
   10664:	cmp	r0, #2
   10668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1066c:	sub	sp, sp, #28
   10670:	beq	10698 <abort@plt+0x40>
   10674:	ldr	r0, [pc, #868]	; 109e0 <abort@plt+0x388>
   10678:	ldr	r3, [r1]
   1067c:	ldr	r2, [pc, #864]	; 109e4 <abort@plt+0x38c>
   10680:	ldr	r0, [r0]
   10684:	mov	r1, #1
   10688:	bl	10640 <__fprintf_chk@plt>
   1068c:	mov	r0, #1
   10690:	add	sp, sp, #28
   10694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10698:	ldr	r0, [r1, #4]
   1069c:	mov	r2, #10
   106a0:	mov	r1, #0
   106a4:	bl	10598 <strtol@plt>
   106a8:	cmp	r0, #2
   106ac:	ble	10978 <abort@plt+0x320>
   106b0:	tst	r0, #1
   106b4:	subeq	r0, r0, #1
   106b8:	sub	r0, r0, #1
   106bc:	asr	sl, r0, #1
   106c0:	mov	r0, sl
   106c4:	bl	10c18 <abort@plt+0x5c0>
   106c8:	mov	r2, sl
   106cc:	mov	r1, #1
   106d0:	mov	r5, r0
   106d4:	str	r0, [sp, #20]
   106d8:	bl	1061c <memset@plt>
   106dc:	mov	r0, #24
   106e0:	mul	r0, r0, sl
   106e4:	bl	10c18 <abort@plt+0x5c0>
   106e8:	cmp	sl, #0
   106ec:	str	r0, [sp, #16]
   106f0:	beq	109c4 <abort@plt+0x36c>
   106f4:	mov	r3, #0
   106f8:	mov	fp, r3
   106fc:	str	r3, [sp, #4]
   10700:	str	r0, [sp, #8]
   10704:	lsl	r4, fp, #1
   10708:	add	r4, r4, #3
   1070c:	mov	r8, r4
   10710:	mov	r9, #0
   10714:	lsrs	r3, r9, #1
   10718:	rrx	r2, r8
   1071c:	ldr	r3, [sp, #4]
   10720:	and	r2, r2, #7
   10724:	add	r3, r3, #1
   10728:	str	r3, [sp, #4]
   1072c:	ldr	r3, [sp, #8]
   10730:	lsl	r2, r2, #2
   10734:	mov	r1, #0
   10738:	str	r4, [r3]
   1073c:	ldr	r3, [pc, #676]	; 109e8 <abort@plt+0x390>
   10740:	str	r5, [sp, #12]
   10744:	mov	lr, r4
   10748:	lsr	r2, r3, r2
   1074c:	mov	r0, r2
   10750:	b	1075c <abort@plt+0x104>
   10754:	mov	r0, r2
   10758:	mov	r1, r3
   1075c:	umull	r6, r7, r0, r0
   10760:	mul	r3, r0, r1
   10764:	mul	ip, r6, r9
   10768:	add	r7, r7, r3, lsl #1
   1076c:	umull	r2, r3, r6, r8
   10770:	mla	r6, r8, r7, ip
   10774:	adds	r4, r0, r0
   10778:	adc	r5, r1, r1
   1077c:	add	r3, r6, r3
   10780:	subs	r2, r4, r2
   10784:	sbc	r3, r5, r3
   10788:	cmp	r1, r3
   1078c:	cmpeq	r0, r2
   10790:	bne	10754 <abort@plt+0xfc>
   10794:	ldr	r6, [sp, #8]
   10798:	mov	r3, r9
   1079c:	mov	r2, r8
   107a0:	strd	r0, [r6, #8]
   107a4:	mvn	r0, #0
   107a8:	mvn	r1, #0
   107ac:	mov	r4, lr
   107b0:	bl	10c50 <abort@plt+0x5f8>
   107b4:	mul	r3, r4, r4
   107b8:	ldr	r5, [sp, #12]
   107bc:	sub	r3, r3, #3
   107c0:	lsr	r3, r3, #1
   107c4:	cmp	sl, r3
   107c8:	strd	r0, [r6, #16]
   107cc:	bls	107e4 <abort@plt+0x18c>
   107d0:	mov	r2, #0
   107d4:	strb	r2, [r5, r3]
   107d8:	add	r3, r3, r4
   107dc:	cmp	sl, r3
   107e0:	bhi	107d0 <abort@plt+0x178>
   107e4:	add	r3, r5, fp
   107e8:	b	107f8 <abort@plt+0x1a0>
   107ec:	ldrb	r2, [r3, #1]!
   107f0:	cmp	r2, #0
   107f4:	bne	10984 <abort@plt+0x32c>
   107f8:	add	fp, fp, #1
   107fc:	cmp	sl, fp
   10800:	bhi	107ec <abort@plt+0x194>
   10804:	ldr	r0, [pc, #480]	; 109ec <abort@plt+0x394>
   10808:	bl	105c8 <puts@plt>
   1080c:	mov	r2, #64	; 0x40
   10810:	ldr	r1, [pc, #472]	; 109f0 <abort@plt+0x398>
   10814:	mov	r0, #1
   10818:	bl	10634 <__printf_chk@plt>
   1081c:	ldr	r3, [sp, #4]
   10820:	cmp	r3, #0
   10824:	beq	109cc <abort@plt+0x374>
   10828:	ldr	r2, [sp, #16]
   1082c:	ldr	r9, [pc, #448]	; 109f4 <abort@plt+0x39c>
   10830:	ldr	sl, [pc, #448]	; 109f8 <abort@plt+0x3a0>
   10834:	mov	r6, r2
   10838:	add	r7, r2, #192	; 0xc0
   1083c:	add	fp, r3, #8
   10840:	mov	r5, #8
   10844:	mov	r2, #2
   10848:	mov	r8, #1
   1084c:	ldr	r3, [sp, #4]
   10850:	ldr	r4, [r7, #-192]	; 0xffffff40
   10854:	cmp	r5, r3
   10858:	bcs	109d4 <abort@plt+0x37c>
   1085c:	ldr	r3, [r6, #192]	; 0xc0
   10860:	sub	r3, r3, r4
   10864:	cmp	r3, #255	; 0xff
   10868:	bhi	109dc <abort@plt+0x384>
   1086c:	sub	r2, r4, r2
   10870:	mov	r1, r9
   10874:	mov	r0, r8
   10878:	bl	10634 <__printf_chk@plt>
   1087c:	ldrd	r0, [r6, #8]
   10880:	mov	r3, #64	; 0x40
   10884:	mov	r2, #0
   10888:	bl	10b34 <abort@plt+0x4dc>
   1088c:	add	r5, r5, #1
   10890:	mov	r2, r4
   10894:	mov	r1, sl
   10898:	mov	r0, r8
   1089c:	bl	10634 <__printf_chk@plt>
   108a0:	cmp	fp, r5
   108a4:	add	r7, r7, #24
   108a8:	add	r6, r6, #24
   108ac:	mov	r2, r4
   108b0:	bne	1084c <abort@plt+0x1f4>
   108b4:	ldr	r0, [pc, #320]	; 109fc <abort@plt+0x3a4>
   108b8:	bl	105c8 <puts@plt>
   108bc:	ldr	r3, [sp, #16]
   108c0:	mov	ip, r3
   108c4:	ldr	lr, [r3]
   108c8:	mul	lr, lr, lr
   108cc:	add	r4, r4, #2
   108d0:	cmp	r4, lr
   108d4:	bcc	10938 <abort@plt+0x2e0>
   108d8:	ldr	r0, [ip, #8]
   108dc:	ldr	r5, [ip, #12]
   108e0:	ldrd	r2, [ip, #16]
   108e4:	umull	r0, r1, r0, r4
   108e8:	mla	r1, r4, r5, r1
   108ec:	cmp	r3, r1
   108f0:	cmpeq	r2, r0
   108f4:	movcc	r1, ip
   108f8:	bcc	10924 <abort@plt+0x2cc>
   108fc:	b	108cc <abort@plt+0x274>
   10900:	ldr	r2, [r0, #32]
   10904:	ldr	r0, [r0, #36]	; 0x24
   10908:	add	r1, r1, #24
   1090c:	umull	r2, r3, r2, r4
   10910:	ldrd	r6, [r1, #16]
   10914:	mla	r3, r4, r0, r3
   10918:	cmp	r3, r7
   1091c:	cmpeq	r2, r6
   10920:	bls	108cc <abort@plt+0x274>
   10924:	ldr	r3, [r1, #24]
   10928:	mov	r0, r1
   1092c:	mul	r3, r3, r3
   10930:	cmp	r4, r3
   10934:	bcs	10900 <abort@plt+0x2a8>
   10938:	mov	r2, r4
   1093c:	ldr	r1, [pc, #188]	; 10a00 <abort@plt+0x3a8>
   10940:	ldr	r4, [pc, #188]	; 10a04 <abort@plt+0x3ac>
   10944:	mov	r0, #1
   10948:	bl	10634 <__printf_chk@plt>
   1094c:	ldr	r0, [sp, #20]
   10950:	bl	105a4 <free@plt>
   10954:	ldr	r0, [sp, #16]
   10958:	bl	105a4 <free@plt>
   1095c:	ldr	r0, [r4]
   10960:	bl	105b0 <ferror@plt>
   10964:	mov	r5, r0
   10968:	ldr	r0, [r4]
   1096c:	bl	1064c <fclose@plt>
   10970:	cmn	r5, r0
   10974:	bne	10994 <abort@plt+0x33c>
   10978:	mov	r0, #0
   1097c:	add	sp, sp, #28
   10980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10984:	ldr	r3, [sp, #8]
   10988:	add	r3, r3, #24
   1098c:	str	r3, [sp, #8]
   10990:	b	10704 <abort@plt+0xac>
   10994:	ldr	r3, [pc, #68]	; 109e0 <abort@plt+0x388>
   10998:	ldr	r4, [r3]
   1099c:	bl	10610 <__errno_location@plt>
   109a0:	ldr	r0, [r0]
   109a4:	bl	105ec <strerror@plt>
   109a8:	ldr	r2, [pc, #88]	; 10a08 <abort@plt+0x3b0>
   109ac:	mov	r1, #1
   109b0:	mov	r3, r0
   109b4:	mov	r0, r4
   109b8:	bl	10640 <__fprintf_chk@plt>
   109bc:	mov	r0, #1
   109c0:	b	10690 <abort@plt+0x38>
   109c4:	str	sl, [sp, #4]
   109c8:	b	10804 <abort@plt+0x1ac>
   109cc:	mov	r4, #2
   109d0:	b	108b4 <abort@plt+0x25c>
   109d4:	mov	r3, #255	; 0xff
   109d8:	b	1086c <abort@plt+0x214>
   109dc:	bl	10658 <abort@plt>
   109e0:	andeq	r2, r2, r0, rrx
   109e4:	andeq	r0, r1, ip, ror lr
   109e8:			; <UNDEFINED> instruction: 0xf5397db1
   109ec:			; <UNDEFINED> instruction: 0x00010eb4
   109f0:	ldrdeq	r0, [r1], -ip
   109f4:	strdeq	r0, [r1], -r8
   109f8:	andeq	r0, r1, r8, lsl #30
   109fc:	andeq	r0, r1, r4, lsr #30
   10a00:	andeq	r0, r1, r4, asr pc
   10a04:	andeq	r2, r2, r4, rrx
   10a08:	andeq	r0, r1, r0, asr #30
   10a0c:	mov	fp, #0
   10a10:	mov	lr, #0
   10a14:	pop	{r1}		; (ldr r1, [sp], #4)
   10a18:	mov	r2, sp
   10a1c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a20:	push	{r0}		; (str r0, [sp, #-4]!)
   10a24:	ldr	ip, [pc, #16]	; 10a3c <abort@plt+0x3e4>
   10a28:	push	{ip}		; (str ip, [sp, #-4]!)
   10a2c:	ldr	r0, [pc, #12]	; 10a40 <abort@plt+0x3e8>
   10a30:	ldr	r3, [pc, #12]	; 10a44 <abort@plt+0x3ec>
   10a34:	bl	105e0 <__libc_start_main@plt>
   10a38:	bl	10658 <abort@plt>
   10a3c:	andeq	r0, r1, r4, lsr #28
   10a40:	andeq	r0, r1, r4, ror #12
   10a44:	andeq	r0, r1, r4, asr #27
   10a48:	ldr	r3, [pc, #20]	; 10a64 <abort@plt+0x40c>
   10a4c:	ldr	r2, [pc, #20]	; 10a68 <abort@plt+0x410>
   10a50:	add	r3, pc, r3
   10a54:	ldr	r2, [r3, r2]
   10a58:	cmp	r2, #0
   10a5c:	bxeq	lr
   10a60:	b	105f8 <__gmon_start__@plt>
   10a64:	andeq	r1, r1, r8, lsr #11
   10a68:	andeq	r0, r0, r4, asr r0
   10a6c:	ldr	r3, [pc, #28]	; 10a90 <abort@plt+0x438>
   10a70:	ldr	r0, [pc, #28]	; 10a94 <abort@plt+0x43c>
   10a74:	sub	r3, r3, r0
   10a78:	cmp	r3, #6
   10a7c:	bxls	lr
   10a80:	ldr	r3, [pc, #16]	; 10a98 <abort@plt+0x440>
   10a84:	cmp	r3, #0
   10a88:	bxeq	lr
   10a8c:	bx	r3
   10a90:	andeq	r2, r2, r3, rrx
   10a94:	andeq	r2, r2, r0, rrx
   10a98:	andeq	r0, r0, r0
   10a9c:	ldr	r1, [pc, #36]	; 10ac8 <abort@plt+0x470>
   10aa0:	ldr	r0, [pc, #36]	; 10acc <abort@plt+0x474>
   10aa4:	sub	r1, r1, r0
   10aa8:	asr	r1, r1, #2
   10aac:	add	r1, r1, r1, lsr #31
   10ab0:	asrs	r1, r1, #1
   10ab4:	bxeq	lr
   10ab8:	ldr	r3, [pc, #16]	; 10ad0 <abort@plt+0x478>
   10abc:	cmp	r3, #0
   10ac0:	bxeq	lr
   10ac4:	bx	r3
   10ac8:	andeq	r2, r2, r0, rrx
   10acc:	andeq	r2, r2, r0, rrx
   10ad0:	andeq	r0, r0, r0
   10ad4:	push	{r4, lr}
   10ad8:	ldr	r4, [pc, #24]	; 10af8 <abort@plt+0x4a0>
   10adc:	ldrb	r3, [r4]
   10ae0:	cmp	r3, #0
   10ae4:	popne	{r4, pc}
   10ae8:	bl	10a6c <abort@plt+0x414>
   10aec:	mov	r3, #1
   10af0:	strb	r3, [r4]
   10af4:	pop	{r4, pc}
   10af8:	andeq	r2, r2, r8, rrx
   10afc:	ldr	r0, [pc, #40]	; 10b2c <abort@plt+0x4d4>
   10b00:	ldr	r3, [r0]
   10b04:	cmp	r3, #0
   10b08:	bne	10b10 <abort@plt+0x4b8>
   10b0c:	b	10a9c <abort@plt+0x444>
   10b10:	ldr	r3, [pc, #24]	; 10b30 <abort@plt+0x4d8>
   10b14:	cmp	r3, #0
   10b18:	beq	10b0c <abort@plt+0x4b4>
   10b1c:	push	{r4, lr}
   10b20:	blx	r3
   10b24:	pop	{r4, lr}
   10b28:	b	10a9c <abort@plt+0x444>
   10b2c:	andeq	r1, r2, r4, lsl pc
   10b30:	andeq	r0, r0, r0
   10b34:	push	{r4, r5, r6, r7, r8, lr}
   10b38:	mov	r7, #0
   10b3c:	bic	r5, r0, #-268435456	; 0xf0000000
   10b40:	cmp	r1, r7
   10b44:	cmpeq	r0, r5
   10b48:	mov	r8, r2
   10b4c:	mov	r4, r3
   10b50:	beq	10bdc <abort@plt+0x584>
   10b54:	lsr	r6, r1, #24
   10b58:	mov	r7, #0
   10b5c:	orrs	r2, r6, r7
   10b60:	lsr	r6, r0, #28
   10b64:	orr	r6, r6, r1, lsl #4
   10b68:	lsr	r7, r1, #28
   10b6c:	bne	10ba8 <abort@plt+0x550>
   10b70:	add	r2, r8, #1
   10b74:	mov	r0, r6
   10b78:	mov	r1, r7
   10b7c:	bl	10b34 <abort@plt+0x4dc>
   10b80:	mov	r2, #28
   10b84:	ldr	r1, [pc, #120]	; 10c04 <abort@plt+0x5ac>
   10b88:	mov	r0, #1
   10b8c:	bl	10634 <__printf_chk@plt>
   10b90:	mov	r2, #7
   10b94:	mov	r3, r5
   10b98:	ldr	r1, [pc, #104]	; 10c08 <abort@plt+0x5b0>
   10b9c:	mov	r0, #1
   10ba0:	pop	{r4, r5, r6, r7, r8, lr}
   10ba4:	b	10634 <__printf_chk@plt>
   10ba8:	mov	r0, #40	; 0x28
   10bac:	bl	10628 <putchar@plt>
   10bb0:	mov	r3, r4
   10bb4:	mov	r0, r6
   10bb8:	mov	r1, r7
   10bbc:	add	r2, r8, #1
   10bc0:	bl	10b34 <abort@plt+0x4dc>
   10bc4:	add	r2, r8, #3
   10bc8:	ldr	r3, [pc, #60]	; 10c0c <abort@plt+0x5b4>
   10bcc:	ldr	r1, [pc, #60]	; 10c10 <abort@plt+0x5b8>
   10bd0:	mov	r0, #1
   10bd4:	bl	10634 <__printf_chk@plt>
   10bd8:	b	10b80 <abort@plt+0x528>
   10bdc:	cmp	r2, #0
   10be0:	moveq	r2, #7
   10be4:	beq	10b94 <abort@plt+0x53c>
   10be8:	ldr	r1, [pc, #36]	; 10c14 <abort@plt+0x5bc>
   10bec:	mov	r0, #1
   10bf0:	bl	10634 <__printf_chk@plt>
   10bf4:	sub	r2, r4, #1
   10bf8:	and	r2, r2, #3
   10bfc:	add	r2, r2, #1
   10c00:	b	10b94 <abort@plt+0x53c>
   10c04:	andeq	r0, r1, ip, lsr lr
   10c08:	andeq	r0, r1, r8, asr lr
   10c0c:	andeq	r0, r1, r0, lsr #30
   10c10:	andeq	r0, r1, r4, lsr lr
   10c14:	andeq	r0, r1, r8, asr #28
   10c18:	push	{r4, lr}
   10c1c:	bl	105d4 <malloc@plt>
   10c20:	cmp	r0, #0
   10c24:	popne	{r4, pc}
   10c28:	ldr	r3, [pc, #24]	; 10c48 <abort@plt+0x5f0>
   10c2c:	mov	r2, #26
   10c30:	mov	r1, #1
   10c34:	ldr	r3, [r3]
   10c38:	ldr	r0, [pc, #12]	; 10c4c <abort@plt+0x5f4>
   10c3c:	bl	105bc <fwrite@plt>
   10c40:	mov	r0, #1
   10c44:	bl	10604 <exit@plt>
   10c48:	andeq	r2, r2, r0, rrx
   10c4c:	andeq	r0, r1, r0, ror #28
   10c50:	cmp	r3, #0
   10c54:	cmpeq	r2, #0
   10c58:	bne	10c70 <abort@plt+0x618>
   10c5c:	cmp	r1, #0
   10c60:	cmpeq	r0, #0
   10c64:	mvnne	r1, #0
   10c68:	mvnne	r0, #0
   10c6c:	b	10c8c <abort@plt+0x634>
   10c70:	sub	sp, sp, #8
   10c74:	push	{sp, lr}
   10c78:	bl	10c9c <abort@plt+0x644>
   10c7c:	ldr	lr, [sp, #4]
   10c80:	add	sp, sp, #8
   10c84:	pop	{r2, r3}
   10c88:	bx	lr
   10c8c:	push	{r1, lr}
   10c90:	mov	r0, #8
   10c94:	bl	1058c <raise@plt>
   10c98:	pop	{r1, pc}
   10c9c:	cmp	r1, r3
   10ca0:	push	{r4, r5, r6, r7, r8, r9, lr}
   10ca4:	cmpeq	r0, r2
   10ca8:	mov	r4, r0
   10cac:	mov	r5, r1
   10cb0:	ldr	r9, [sp, #28]
   10cb4:	movcc	r0, #0
   10cb8:	movcc	r1, #0
   10cbc:	bcc	10db4 <abort@plt+0x75c>
   10cc0:	cmp	r3, #0
   10cc4:	clzeq	ip, r2
   10cc8:	clzne	ip, r3
   10ccc:	addeq	ip, ip, #32
   10cd0:	cmp	r5, #0
   10cd4:	clzeq	r1, r4
   10cd8:	addeq	r1, r1, #32
   10cdc:	clzne	r1, r5
   10ce0:	sub	ip, ip, r1
   10ce4:	sub	lr, ip, #32
   10ce8:	lsl	r7, r3, ip
   10cec:	rsb	r8, ip, #32
   10cf0:	orr	r7, r7, r2, lsl lr
   10cf4:	orr	r7, r7, r2, lsr r8
   10cf8:	lsl	r6, r2, ip
   10cfc:	cmp	r5, r7
   10d00:	cmpeq	r4, r6
   10d04:	movcc	r0, #0
   10d08:	movcc	r1, #0
   10d0c:	bcc	10d28 <abort@plt+0x6d0>
   10d10:	mov	r3, #1
   10d14:	subs	r4, r4, r6
   10d18:	lsl	r1, r3, lr
   10d1c:	lsl	r0, r3, ip
   10d20:	orr	r1, r1, r3, lsr r8
   10d24:	sbc	r5, r5, r7
   10d28:	cmp	ip, #0
   10d2c:	beq	10db4 <abort@plt+0x75c>
   10d30:	lsrs	r3, r7, #1
   10d34:	rrx	r2, r6
   10d38:	mov	r6, ip
   10d3c:	b	10d60 <abort@plt+0x708>
   10d40:	subs	r4, r4, r2
   10d44:	sbc	r5, r5, r3
   10d48:	adds	r4, r4, r4
   10d4c:	adc	r5, r5, r5
   10d50:	adds	r4, r4, #1
   10d54:	adc	r5, r5, #0
   10d58:	subs	r6, r6, #1
   10d5c:	beq	10d7c <abort@plt+0x724>
   10d60:	cmp	r5, r3
   10d64:	cmpeq	r4, r2
   10d68:	bcs	10d40 <abort@plt+0x6e8>
   10d6c:	adds	r4, r4, r4
   10d70:	adc	r5, r5, r5
   10d74:	subs	r6, r6, #1
   10d78:	bne	10d60 <abort@plt+0x708>
   10d7c:	lsr	r6, r4, ip
   10d80:	lsr	r7, r5, ip
   10d84:	orr	r6, r6, r5, lsl r8
   10d88:	adds	r2, r0, r4
   10d8c:	orr	r6, r6, r5, lsr lr
   10d90:	adc	r3, r1, r5
   10d94:	lsl	r1, r7, ip
   10d98:	orr	r1, r1, r6, lsl lr
   10d9c:	lsl	r0, r6, ip
   10da0:	orr	r1, r1, r6, lsr r8
   10da4:	subs	r0, r2, r0
   10da8:	mov	r4, r6
   10dac:	mov	r5, r7
   10db0:	sbc	r1, r3, r1
   10db4:	cmp	r9, #0
   10db8:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   10dbc:	strd	r4, [r9]
   10dc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10dc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10dc8:	mov	r7, r0
   10dcc:	ldr	r6, [pc, #72]	; 10e1c <abort@plt+0x7c4>
   10dd0:	ldr	r5, [pc, #72]	; 10e20 <abort@plt+0x7c8>
   10dd4:	add	r6, pc, r6
   10dd8:	add	r5, pc, r5
   10ddc:	sub	r6, r6, r5
   10de0:	mov	r8, r1
   10de4:	mov	r9, r2
   10de8:	bl	1056c <raise@plt-0x20>
   10dec:	asrs	r6, r6, #2
   10df0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10df4:	mov	r4, #0
   10df8:	add	r4, r4, #1
   10dfc:	ldr	r3, [r5], #4
   10e00:	mov	r2, r9
   10e04:	mov	r1, r8
   10e08:	mov	r0, r7
   10e0c:	blx	r3
   10e10:	cmp	r6, r4
   10e14:	bne	10df8 <abort@plt+0x7a0>
   10e18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e1c:	andeq	r1, r1, r4, lsr r1
   10e20:	andeq	r1, r1, ip, lsr #2
   10e24:	bx	lr

Disassembly of section .fini:

00010e28 <.fini>:
   10e28:	push	{r3, lr}
   10e2c:	pop	{r3, pc}
