
../repos/charybdis/modules/.libs/chm_nocolour.so:     file format elf32-littlearm


Disassembly of section .init:

00000420 <_init>:
 420:	push	{r3, lr}
 424:	bl	47c <call_weak_fn>
 428:	pop	{r3, pc}

Disassembly of section .plt:

0000042c <.plt>:
 42c:	push	{lr}		; (str lr, [sp, #-4]!)
 430:	ldr	lr, [pc, #4]	; 43c <.plt+0x10>
 434:	add	lr, pc, lr
 438:	ldr	pc, [lr, #8]!
 43c:	.word	0x00010bc4

00000440 <cflag_add@plt>:
 440:	add	ip, pc, #0, 12
 444:	add	ip, ip, #16, 20	; 0x10000
 448:	ldr	pc, [ip, #3012]!	; 0xbc4

0000044c <__cxa_finalize@plt>:
 44c:	add	ip, pc, #0, 12
 450:	add	ip, ip, #16, 20	; 0x10000
 454:	ldr	pc, [ip, #3004]!	; 0xbbc

00000458 <__gmon_start__@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2996]!	; 0xbb4

00000464 <rb_strlcpy@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2988]!	; 0xbac

00000470 <cflag_orphan@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2980]!	; 0xba4

Disassembly of section .text:

0000047c <call_weak_fn>:
 47c:	ldr	r3, [pc, #20]	; 498 <call_weak_fn+0x1c>
 480:	ldr	r2, [pc, #20]	; 49c <call_weak_fn+0x20>
 484:	add	r3, pc, r3
 488:	ldr	r2, [r3, r2]
 48c:	cmp	r2, #0
 490:	bxeq	lr
 494:	b	458 <__gmon_start__@plt>
 498:	.word	0x00010b74
 49c:	.word	0x0000002c

000004a0 <deregister_tm_clones>:
 4a0:	ldr	r3, [pc, #52]	; 4dc <deregister_tm_clones+0x3c>
 4a4:	ldr	r0, [pc, #52]	; 4e0 <deregister_tm_clones+0x40>
 4a8:	add	r3, pc, r3
 4ac:	add	r0, pc, r0
 4b0:	add	r3, r3, #3
 4b4:	sub	r3, r3, r0
 4b8:	cmp	r3, #6
 4bc:	ldr	r3, [pc, #32]	; 4e4 <deregister_tm_clones+0x44>
 4c0:	add	r3, pc, r3
 4c4:	bxls	lr
 4c8:	ldr	r2, [pc, #24]	; 4e8 <deregister_tm_clones+0x48>
 4cc:	ldr	r3, [r3, r2]
 4d0:	cmp	r3, #0
 4d4:	bxeq	lr
 4d8:	bx	r3
 4dc:	.word	0x00010bd0
 4e0:	.word	0x00010bcc
 4e4:	.word	0x00010b38
 4e8:	.word	0x00000024

000004ec <register_tm_clones>:
 4ec:	ldr	r1, [pc, #56]	; 52c <register_tm_clones+0x40>
 4f0:	ldr	r0, [pc, #56]	; 530 <register_tm_clones+0x44>
 4f4:	add	r1, pc, r1
 4f8:	add	r0, pc, r0
 4fc:	sub	r1, r1, r0
 500:	ldr	r3, [pc, #44]	; 534 <register_tm_clones+0x48>
 504:	asr	r1, r1, #2
 508:	add	r3, pc, r3
 50c:	add	r1, r1, r1, lsr #31
 510:	asrs	r1, r1, #1
 514:	bxeq	lr
 518:	ldr	r2, [pc, #24]	; 538 <register_tm_clones+0x4c>
 51c:	ldr	r3, [r3, r2]
 520:	cmp	r3, #0
 524:	bxeq	lr
 528:	bx	r3
 52c:	.word	0x00010b84
 530:	.word	0x00010b80
 534:	.word	0x00010af0
 538:	.word	0x00000038

0000053c <__do_global_dtors_aux>:
 53c:	ldr	r3, [pc, #76]	; 590 <__do_global_dtors_aux+0x54>
 540:	ldr	r2, [pc, #76]	; 594 <__do_global_dtors_aux+0x58>
 544:	add	r3, pc, r3
 548:	add	r2, pc, r2
 54c:	ldrb	r3, [r3]
 550:	cmp	r3, #0
 554:	bxne	lr
 558:	ldr	r3, [pc, #56]	; 598 <__do_global_dtors_aux+0x5c>
 55c:	push	{r4, lr}
 560:	ldr	r3, [r2, r3]
 564:	cmp	r3, #0
 568:	beq	578 <__do_global_dtors_aux+0x3c>
 56c:	ldr	r3, [pc, #40]	; 59c <__do_global_dtors_aux+0x60>
 570:	ldr	r0, [pc, r3]
 574:	bl	44c <__cxa_finalize@plt>
 578:	bl	4a0 <deregister_tm_clones>
 57c:	ldr	r3, [pc, #28]	; 5a0 <__do_global_dtors_aux+0x64>
 580:	mov	r2, #1
 584:	add	r3, pc, r3
 588:	strb	r2, [r3]
 58c:	pop	{r4, pc}
 590:	.word	0x00010b34
 594:	.word	0x00010ab0
 598:	.word	0x00000020
 59c:	.word	0x00010ac4
 5a0:	.word	0x00010af4

000005a4 <frame_dummy>:
 5a4:	ldr	r0, [pc, #56]	; 5e4 <frame_dummy+0x40>
 5a8:	ldr	r3, [pc, #56]	; 5e8 <frame_dummy+0x44>
 5ac:	add	r0, pc, r0
 5b0:	ldr	r2, [r0]
 5b4:	add	r3, pc, r3
 5b8:	cmp	r2, #0
 5bc:	bne	5c4 <frame_dummy+0x20>
 5c0:	b	4ec <register_tm_clones>
 5c4:	ldr	r2, [pc, #32]	; 5ec <frame_dummy+0x48>
 5c8:	ldr	r3, [r3, r2]
 5cc:	cmp	r3, #0
 5d0:	beq	5c0 <frame_dummy+0x1c>
 5d4:	push	{r4, lr}
 5d8:	blx	r3
 5dc:	pop	{r4, lr}
 5e0:	b	4ec <register_tm_clones>
 5e4:	.word	0x00010948
 5e8:	.word	0x00010a44
 5ec:	.word	0x00000034

000005f0 <strip_colour>:
 5f0:	push	{fp}		; (str fp, [sp, #-4]!)
 5f4:	add	fp, sp, #0
 5f8:	sub	sp, sp, #28
 5fc:	str	r0, [fp, #-24]	; 0xffffffe8
 600:	ldr	r3, [pc, #580]	; 84c <strip_colour+0x25c>
 604:	add	r3, pc, r3
 608:	ldr	r2, [fp, #-24]	; 0xffffffe8
 60c:	str	r2, [fp, #-8]
 610:	ldr	r2, [fp, #-24]	; 0xffffffe8
 614:	str	r2, [fp, #-12]
 618:	mov	r2, #0
 61c:	str	r2, [fp, #-16]
 620:	b	7f8 <strip_colour+0x208>
 624:	ldr	r2, [fp, #-8]
 628:	ldrb	r2, [r2]
 62c:	sub	r2, r2, #2
 630:	cmp	r2, #30
 634:	addls	pc, pc, r2, lsl #2
 638:	b	7bc <strip_colour+0x1cc>
 63c:	b	7e0 <strip_colour+0x1f0>
 640:	b	6b8 <strip_colour+0xc8>
 644:	b	7e0 <strip_colour+0x1f0>
 648:	b	7bc <strip_colour+0x1cc>
 64c:	b	7e0 <strip_colour+0x1f0>
 650:	b	7e0 <strip_colour+0x1f0>
 654:	b	7bc <strip_colour+0x1cc>
 658:	b	7bc <strip_colour+0x1cc>
 65c:	b	7bc <strip_colour+0x1cc>
 660:	b	7bc <strip_colour+0x1cc>
 664:	b	7bc <strip_colour+0x1cc>
 668:	b	7bc <strip_colour+0x1cc>
 66c:	b	7bc <strip_colour+0x1cc>
 670:	b	7e0 <strip_colour+0x1f0>
 674:	b	7bc <strip_colour+0x1cc>
 678:	b	7bc <strip_colour+0x1cc>
 67c:	b	7bc <strip_colour+0x1cc>
 680:	b	7bc <strip_colour+0x1cc>
 684:	b	7bc <strip_colour+0x1cc>
 688:	b	7bc <strip_colour+0x1cc>
 68c:	b	7e0 <strip_colour+0x1f0>
 690:	b	7e0 <strip_colour+0x1f0>
 694:	b	7bc <strip_colour+0x1cc>
 698:	b	7bc <strip_colour+0x1cc>
 69c:	b	7bc <strip_colour+0x1cc>
 6a0:	b	7e0 <strip_colour+0x1f0>
 6a4:	b	7bc <strip_colour+0x1cc>
 6a8:	b	7e0 <strip_colour+0x1f0>
 6ac:	b	7bc <strip_colour+0x1cc>
 6b0:	b	7e0 <strip_colour+0x1f0>
 6b4:	b	7a0 <strip_colour+0x1b0>
 6b8:	ldr	r2, [fp, #-8]
 6bc:	add	r2, r2, #1
 6c0:	ldrb	r2, [r2]
 6c4:	mov	r1, r2
 6c8:	ldr	r2, [pc, #384]	; 850 <strip_colour+0x260>
 6cc:	ldr	r2, [r3, r2]
 6d0:	ldr	r2, [r2, r1, lsl #2]
 6d4:	and	r2, r2, #16
 6d8:	cmp	r2, #0
 6dc:	beq	7e8 <strip_colour+0x1f8>
 6e0:	ldr	r2, [fp, #-8]
 6e4:	add	r2, r2, #1
 6e8:	str	r2, [fp, #-8]
 6ec:	ldr	r2, [fp, #-8]
 6f0:	add	r2, r2, #1
 6f4:	ldrb	r2, [r2]
 6f8:	mov	r1, r2
 6fc:	ldr	r2, [pc, #332]	; 850 <strip_colour+0x260>
 700:	ldr	r2, [r3, r2]
 704:	ldr	r2, [r2, r1, lsl #2]
 708:	and	r2, r2, #16
 70c:	cmp	r2, #0
 710:	beq	720 <strip_colour+0x130>
 714:	ldr	r2, [fp, #-8]
 718:	add	r2, r2, #1
 71c:	str	r2, [fp, #-8]
 720:	ldr	r2, [fp, #-8]
 724:	add	r2, r2, #1
 728:	ldrb	r2, [r2]
 72c:	cmp	r2, #44	; 0x2c
 730:	bne	7e8 <strip_colour+0x1f8>
 734:	ldr	r2, [fp, #-8]
 738:	add	r2, r2, #2
 73c:	ldrb	r2, [r2]
 740:	mov	r1, r2
 744:	ldr	r2, [pc, #260]	; 850 <strip_colour+0x260>
 748:	ldr	r2, [r3, r2]
 74c:	ldr	r2, [r2, r1, lsl #2]
 750:	and	r2, r2, #16
 754:	cmp	r2, #0
 758:	beq	7e8 <strip_colour+0x1f8>
 75c:	ldr	r2, [fp, #-8]
 760:	add	r2, r2, #2
 764:	str	r2, [fp, #-8]
 768:	ldr	r2, [fp, #-8]
 76c:	add	r2, r2, #1
 770:	ldrb	r2, [r2]
 774:	mov	r1, r2
 778:	ldr	r2, [pc, #208]	; 850 <strip_colour+0x260>
 77c:	ldr	r2, [r3, r2]
 780:	ldr	r2, [r2, r1, lsl #2]
 784:	and	r2, r2, #16
 788:	cmp	r2, #0
 78c:	beq	7e8 <strip_colour+0x1f8>
 790:	ldr	r2, [fp, #-8]
 794:	add	r2, r2, #1
 798:	str	r2, [fp, #-8]
 79c:	b	7e8 <strip_colour+0x1f8>
 7a0:	ldr	r2, [fp, #-12]
 7a4:	add	r1, r2, #1
 7a8:	str	r1, [fp, #-12]
 7ac:	ldr	r1, [fp, #-8]
 7b0:	ldrb	r1, [r1]
 7b4:	strb	r1, [r2]
 7b8:	b	7ec <strip_colour+0x1fc>
 7bc:	ldr	r2, [fp, #-12]
 7c0:	add	r1, r2, #1
 7c4:	str	r1, [fp, #-12]
 7c8:	ldr	r1, [fp, #-8]
 7cc:	ldrb	r1, [r1]
 7d0:	strb	r1, [r2]
 7d4:	ldr	r2, [fp, #-12]
 7d8:	str	r2, [fp, #-16]
 7dc:	b	7ec <strip_colour+0x1fc>
 7e0:	nop			; (mov r0, r0)
 7e4:	b	7ec <strip_colour+0x1fc>
 7e8:	nop			; (mov r0, r0)
 7ec:	ldr	r2, [fp, #-8]
 7f0:	add	r2, r2, #1
 7f4:	str	r2, [fp, #-8]
 7f8:	ldr	r2, [fp, #-8]
 7fc:	cmp	r2, #0
 800:	beq	814 <strip_colour+0x224>
 804:	ldr	r2, [fp, #-8]
 808:	ldrb	r2, [r2]
 80c:	cmp	r2, #0
 810:	bne	624 <strip_colour+0x34>
 814:	ldr	r3, [fp, #-12]
 818:	mov	r2, #0
 81c:	strb	r2, [r3]
 820:	ldr	r3, [fp, #-16]
 824:	cmp	r3, #0
 828:	beq	838 <strip_colour+0x248>
 82c:	ldr	r3, [fp, #-16]
 830:	mov	r2, #0
 834:	strb	r2, [r3]
 838:	ldr	r3, [fp, #-24]	; 0xffffffe8
 83c:	mov	r0, r3
 840:	add	sp, fp, #0
 844:	pop	{fp}		; (ldr fp, [sp], #4)
 848:	bx	lr
 84c:	.word	0x000109f4
 850:	.word	0x00000030

00000854 <chm_nocolour_process>:
 854:	push	{fp, lr}
 858:	add	fp, sp, #4
 85c:	sub	sp, sp, #8
 860:	str	r0, [fp, #-8]
 864:	ldr	r3, [fp, #-8]
 868:	ldr	r3, [r3, #16]
 86c:	cmp	r3, #0
 870:	bne	8dc <chm_nocolour_process+0x88>
 874:	ldr	r3, [fp, #-8]
 878:	ldr	r3, [r3, #8]
 87c:	ldr	r2, [r3, #12]
 880:	ldr	r3, [pc, #96]	; 8e8 <chm_nocolour_process+0x94>
 884:	add	r3, pc, r3
 888:	ldr	r3, [r3]
 88c:	and	r3, r3, r2
 890:	cmp	r3, #0
 894:	beq	8e0 <chm_nocolour_process+0x8c>
 898:	ldr	r3, [fp, #-8]
 89c:	ldr	r3, [r3, #12]
 8a0:	mov	r2, #512	; 0x200
 8a4:	mov	r1, r3
 8a8:	ldr	r3, [pc, #60]	; 8ec <chm_nocolour_process+0x98>
 8ac:	add	r3, pc, r3
 8b0:	mov	r0, r3
 8b4:	bl	464 <rb_strlcpy@plt>
 8b8:	ldr	r3, [pc, #48]	; 8f0 <chm_nocolour_process+0x9c>
 8bc:	add	r3, pc, r3
 8c0:	mov	r0, r3
 8c4:	bl	5f0 <strip_colour>
 8c8:	ldr	r3, [fp, #-8]
 8cc:	ldr	r2, [pc, #32]	; 8f4 <chm_nocolour_process+0xa0>
 8d0:	add	r2, pc, r2
 8d4:	str	r2, [r3, #12]
 8d8:	b	8e0 <chm_nocolour_process+0x8c>
 8dc:	nop			; (mov r0, r0)
 8e0:	sub	sp, fp, #4
 8e4:	pop	{fp, pc}
 8e8:	.word	0x000109f8
 8ec:	.word	0x000107d0
 8f0:	.word	0x000107c0
 8f4:	.word	0x000107ac

000008f8 <_modinit>:
 8f8:	push	{fp, lr}
 8fc:	add	fp, sp, #4
 900:	ldr	r2, [pc, #76]	; 954 <_modinit+0x5c>
 904:	add	r2, pc, r2
 908:	ldr	r3, [pc, #72]	; 958 <_modinit+0x60>
 90c:	ldr	r3, [r2, r3]
 910:	mov	r1, r3
 914:	mov	r0, #99	; 0x63
 918:	bl	440 <cflag_add@plt>
 91c:	mov	r2, r0
 920:	ldr	r3, [pc, #52]	; 95c <_modinit+0x64>
 924:	add	r3, pc, r3
 928:	str	r2, [r3]
 92c:	ldr	r3, [pc, #44]	; 960 <_modinit+0x68>
 930:	add	r3, pc, r3
 934:	ldr	r3, [r3]
 938:	cmp	r3, #0
 93c:	bne	948 <_modinit+0x50>
 940:	mvn	r3, #0
 944:	b	94c <_modinit+0x54>
 948:	mov	r3, #0
 94c:	mov	r0, r3
 950:	pop	{fp, pc}
 954:	.word	0x000106f4
 958:	.word	0x00000028
 95c:	.word	0x00010958
 960:	.word	0x0001094c

00000964 <_moddeinit>:
 964:	push	{fp, lr}
 968:	add	fp, sp, #4
 96c:	mov	r0, #99	; 0x63
 970:	bl	470 <cflag_orphan@plt>
 974:	nop			; (mov r0, r0)
 978:	pop	{fp, pc}

Disassembly of section .fini:

0000097c <_fini>:
 97c:	push	{r3, lr}
 980:	pop	{r3, pc}
