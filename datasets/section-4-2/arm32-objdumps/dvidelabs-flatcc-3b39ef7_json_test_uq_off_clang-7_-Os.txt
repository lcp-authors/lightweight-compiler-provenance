
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014e10 <.init>:
   14e10:	push	{r3, lr}
   14e14:	bl	14f8c <_start@@Base+0x3c>
   14e18:	pop	{r3, pc}

Disassembly of section .plt:

00014e1c <raise@plt-0x14>:
   14e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e20:	ldr	lr, [pc, #4]	; 14e2c <raise@plt-0x4>
   14e24:	add	lr, pc, lr
   14e28:	ldr	pc, [lr, #8]!
   14e2c:	ldrdeq	r3, [r4], -r4

00014e30 <raise@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #274432	; 0x43000
   14e38:	ldr	pc, [ip, #468]!	; 0x1d4

00014e3c <strcmp@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #274432	; 0x43000
   14e44:	ldr	pc, [ip, #460]!	; 0x1cc

00014e48 <memmove@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #274432	; 0x43000
   14e50:	ldr	pc, [ip, #452]!	; 0x1c4

00014e54 <free@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #274432	; 0x43000
   14e5c:	ldr	pc, [ip, #444]!	; 0x1bc

00014e60 <memcpy@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #274432	; 0x43000
   14e68:	ldr	pc, [ip, #436]!	; 0x1b4

00014e6c <memcmp@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #274432	; 0x43000
   14e74:	ldr	pc, [ip, #428]!	; 0x1ac

00014e78 <__isinff@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #274432	; 0x43000
   14e80:	ldr	pc, [ip, #420]!	; 0x1a4

00014e84 <__isinf@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #274432	; 0x43000
   14e8c:	ldr	pc, [ip, #412]!	; 0x19c

00014e90 <realloc@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #274432	; 0x43000
   14e98:	ldr	pc, [ip, #404]!	; 0x194

00014e9c <fwrite@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #274432	; 0x43000
   14ea4:	ldr	pc, [ip, #396]!	; 0x18c

00014ea8 <malloc@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #274432	; 0x43000
   14eb0:	ldr	pc, [ip, #388]!	; 0x184

00014eb4 <__libc_start_main@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #274432	; 0x43000
   14ebc:	ldr	pc, [ip, #380]!	; 0x17c

00014ec0 <__gmon_start__@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #274432	; 0x43000
   14ec8:	ldr	pc, [ip, #372]!	; 0x174

00014ecc <strlen@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #274432	; 0x43000
   14ed4:	ldr	pc, [ip, #364]!	; 0x16c

00014ed8 <fprintf@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #274432	; 0x43000
   14ee0:	ldr	pc, [ip, #356]!	; 0x164

00014ee4 <posix_memalign@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #274432	; 0x43000
   14eec:	ldr	pc, [ip, #348]!	; 0x15c

00014ef0 <memset@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #274432	; 0x43000
   14ef8:	ldr	pc, [ip, #340]!	; 0x154

00014efc <strncpy@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #274432	; 0x43000
   14f04:	ldr	pc, [ip, #332]!	; 0x14c

00014f08 <strtod@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #274432	; 0x43000
   14f10:	ldr	pc, [ip, #324]!	; 0x144

00014f14 <memchr@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #274432	; 0x43000
   14f1c:	ldr	pc, [ip, #316]!	; 0x13c

00014f20 <fputc@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #274432	; 0x43000
   14f28:	ldr	pc, [ip, #308]!	; 0x134

00014f2c <sprintf@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #274432	; 0x43000
   14f34:	ldr	pc, [ip, #300]!	; 0x12c

00014f38 <abort@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #274432	; 0x43000
   14f40:	ldr	pc, [ip, #292]!	; 0x124

00014f44 <__assert_fail@plt>:
   14f44:	add	ip, pc, #0, 12
   14f48:	add	ip, ip, #274432	; 0x43000
   14f4c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14eb4 <__libc_start_main@plt>
   14f7c:	bl	14f38 <abort@plt>
   14f80:	andeq	r1, r4, r8, asr #4
   14f84:	andeq	r5, r1, ip, lsr sp
   14f88:	andeq	r1, r4, r8, ror #3
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14ec0 <__gmon_start__@plt>
   14fa8:	andeq	r3, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	r8, r5, r4, asr #6
   14fd4:	andeq	r8, r5, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	r8, r5, r4, asr #6
   1500c:	andeq	r8, r5, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	r8, r5, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #364	; 0x16c
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #100	; 0x64
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2bd30 <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #12
   15068:	mov	r1, #0
   1506c:	bl	40338 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	and	r1, r0, #1
   15080:	tst	r0, #16
   15084:	strb	r1, [sp, #38]	; 0x26
   15088:	uxtb	r1, r0
   1508c:	ubfx	r2, r1, #1, #1
   15090:	strb	r2, [sp, #39]	; 0x27
   15094:	ubfx	r2, r1, #2, #1
   15098:	strb	r2, [sp, #40]	; 0x28
   1509c:	ubfx	r1, r1, #3, #1
   150a0:	strb	r1, [sp, #41]	; 0x29
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #37]	; 0x25
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #39]	; 0x27
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #37]	; 0x25
   150c0:	mov	r0, r4
   150c4:	bl	14ecc <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #100	; 0x64
   150e0:	add	r1, sp, #60	; 0x3c
   150e4:	bl	34ca0 <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #100	; 0x64
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	2f82c <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	309bc <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15254 <test_json@@Base+0x214>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #12
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	3fbd0 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	4045c <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e3c <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	2f92c <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #100	; 0x64
   15184:	bl	2becc <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #12
   1518c:	bl	404e4 <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #33608	; 0x8348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #5
   151a8:	beq	15230 <test_json@@Base+0x1f0>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	153ac <test_json@@Base+0x36c>
   151b8:	mov	r0, r7
   151bc:	bl	316ac <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #4746	; 0x128a
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15244 <test_json@@Base+0x204>
   151d0:	movw	r7, #33608	; 0x8348
   151d4:	movw	r1, #4960	; 0x1360
   151d8:	mov	r2, r8
   151dc:	movt	r7, #5
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed8 <fprintf@plt>
   151ec:	ldr	r0, [r7]
   151f0:	movw	r5, #15785	; 0x3da9
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed8 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #5013	; 0x1395
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e9c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed8 <fprintf@plt>
   1522c:	b	15284 <test_json@@Base+0x244>
   15230:	ldr	r5, [r6]
   15234:	bl	316ac <flatcc_json_parser_error_string@@Base>
   15238:	movw	r1, #4810	; 0x12ca
   1523c:	mov	r3, r0
   15240:	movt	r1, #4
   15244:	mov	r0, r5
   15248:	mov	r2, r8
   1524c:	bl	14ed8 <fprintf@plt>
   15250:	b	153e8 <test_json@@Base+0x3a8>
   15254:	movw	r1, #33608	; 0x8348
   15258:	movt	r1, #5
   1525c:	ldr	r5, [r1]
   15260:	bl	2ff2c <flatcc_verify_error_string@@Base>
   15264:	movw	r1, #4846	; 0x12ee
   15268:	movw	r2, #4885	; 0x1315
   1526c:	str	r0, [sp]
   15270:	mov	r0, r5
   15274:	mov	r3, r8
   15278:	movt	r1, #4
   1527c:	movt	r2, #4
   15280:	bl	14ed8 <fprintf@plt>
   15284:	mvn	r5, #0
   15288:	cmp	r4, #0
   1528c:	beq	150fc <test_json@@Base+0xbc>
   15290:	movw	r0, #33608	; 0x8348
   15294:	ldr	r9, [fp, #-56]	; 0xffffffc8
   15298:	movw	r1, #15778	; 0x3da2
   1529c:	movw	r2, #5024	; 0x13a0
   152a0:	movt	r0, #5
   152a4:	movt	r1, #4
   152a8:	movt	r2, #4
   152ac:	ldr	r6, [r0]
   152b0:	mov	r0, r6
   152b4:	bl	14ed8 <fprintf@plt>
   152b8:	cmp	r9, #0
   152bc:	beq	15394 <test_json@@Base+0x354>
   152c0:	sub	r7, fp, #49	; 0x31
   152c4:	mov	r8, #0
   152c8:	ands	sl, r8, #15
   152cc:	bne	15304 <test_json@@Base+0x2c4>
   152d0:	cmp	r8, #0
   152d4:	beq	152ec <test_json@@Base+0x2ac>
   152d8:	movw	r1, #15783	; 0x3da7
   152dc:	mov	r0, r6
   152e0:	mov	r2, r7
   152e4:	movt	r1, #4
   152e8:	bl	14ed8 <fprintf@plt>
   152ec:	movw	r1, #15789	; 0x3dad
   152f0:	mov	r0, r6
   152f4:	mov	r2, r8
   152f8:	movt	r1, #4
   152fc:	bl	14ed8 <fprintf@plt>
   15300:	b	15318 <test_json@@Base+0x2d8>
   15304:	tst	r8, #7
   15308:	bne	15318 <test_json@@Base+0x2d8>
   1530c:	mov	r0, #32
   15310:	mov	r1, r6
   15314:	bl	14f20 <fputc@plt>
   15318:	ldrb	r2, [r4, r8]
   1531c:	movw	r1, #15797	; 0x3db5
   15320:	mov	r0, r6
   15324:	movt	r1, #4
   15328:	bl	14ed8 <fprintf@plt>
   1532c:	ldrb	r0, [r4, r8]
   15330:	add	r8, r8, #1
   15334:	sub	r1, r0, #32
   15338:	uxtb	r1, r1
   1533c:	cmp	r1, #94	; 0x5e
   15340:	mov	r1, #0
   15344:	movwhi	r0, #46	; 0x2e
   15348:	cmp	r9, r8
   1534c:	strb	r0, [r7, sl]
   15350:	add	r0, r7, sl
   15354:	strb	r1, [r0, #1]
   15358:	bne	152c8 <test_json@@Base+0x288>
   1535c:	tst	r9, #15
   15360:	beq	15394 <test_json@@Base+0x354>
   15364:	movw	r8, #15803	; 0x3dbb
   15368:	add	r7, r9, #1
   1536c:	movt	r8, #4
   15370:	mov	r0, r8
   15374:	mov	r1, #3
   15378:	mov	r2, #1
   1537c:	mov	r3, r6
   15380:	bl	14e9c <fwrite@plt>
   15384:	add	r0, r7, #1
   15388:	tst	r7, #15
   1538c:	mov	r7, r0
   15390:	bne	15370 <test_json@@Base+0x330>
   15394:	movw	r1, #15783	; 0x3da7
   15398:	sub	r2, fp, #49	; 0x31
   1539c:	mov	r0, r6
   153a0:	movt	r1, #4
   153a4:	bl	14ed8 <fprintf@plt>
   153a8:	b	15178 <test_json@@Base+0x138>
   153ac:	bl	316ac <flatcc_json_parser_error_string@@Base>
   153b0:	movw	r1, #4708	; 0x1264
   153b4:	mov	r3, r0
   153b8:	mov	r0, r5
   153bc:	mov	r2, r8
   153c0:	movt	r1, #4
   153c4:	bl	14ed8 <fprintf@plt>
   153c8:	ldr	r5, [r6]
   153cc:	mov	r0, r7
   153d0:	bl	316ac <flatcc_json_parser_error_string@@Base>
   153d4:	movw	r1, #4779	; 0x12ab
   153d8:	mov	r2, r0
   153dc:	mov	r0, r5
   153e0:	movt	r1, #4
   153e4:	bl	14ed8 <fprintf@plt>
   153e8:	ldr	r0, [r6]
   153ec:	movw	r1, #15785	; 0x3da9
   153f0:	mov	r2, r4
   153f4:	movt	r1, #4
   153f8:	bl	14ed8 <fprintf@plt>
   153fc:	movw	r4, #33608	; 0x8348
   15400:	ldr	r0, [sp, #76]	; 0x4c
   15404:	movt	r4, #5
   15408:	ldr	r3, [r4]
   1540c:	cmp	r0, #2
   15410:	blt	1543c <test_json@@Base+0x3fc>
   15414:	mov	r5, #0
   15418:	mov	r0, #32
   1541c:	mov	r1, r3
   15420:	bl	14f20 <fputc@plt>
   15424:	ldr	r0, [sp, #76]	; 0x4c
   15428:	ldr	r3, [r4]
   1542c:	add	r5, r5, #1
   15430:	sub	r0, r0, #1
   15434:	cmp	r5, r0
   15438:	blt	15418 <test_json@@Base+0x3d8>
   1543c:	movw	r0, #4843	; 0x12eb
   15440:	mov	r1, #2
   15444:	mov	r2, #1
   15448:	movt	r0, #4
   1544c:	bl	14e9c <fwrite@plt>
   15450:	mvn	r5, #0
   15454:	b	150fc <test_json@@Base+0xbc>

00015458 <edge_case_tests@@Base>:
   15458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1545c:	add	fp, sp, #28
   15460:	sub	sp, sp, #28
   15464:	movw	r4, #16736	; 0x4160
   15468:	movw	r1, #5038	; 0x13ae
   1546c:	movw	r2, #5091	; 0x13e3
   15470:	mov	r0, #158	; 0x9e
   15474:	mov	r9, #0
   15478:	mov	r3, #0
   1547c:	movt	r4, #4
   15480:	str	r0, [sp, #8]
   15484:	movt	r1, #4
   15488:	movt	r2, #4
   1548c:	str	r9, [sp]
   15490:	str	r9, [sp, #4]
   15494:	mov	r0, r4
   15498:	bl	15040 <test_json@@Base>
   1549c:	movw	r5, #5121	; 0x1401
   154a0:	movw	sl, #5154	; 0x1422
   154a4:	str	r0, [sp, #24]
   154a8:	mov	r7, #2
   154ac:	mov	r0, #168	; 0xa8
   154b0:	mov	r3, #0
   154b4:	movt	r5, #4
   154b8:	movt	sl, #4
   154bc:	stm	sp, {r7, r9}
   154c0:	str	r0, [sp, #8]
   154c4:	mov	r0, r4
   154c8:	mov	r1, r5
   154cc:	mov	r2, sl
   154d0:	bl	15040 <test_json@@Base>
   154d4:	movw	r1, #5188	; 0x1444
   154d8:	movw	r2, #5227	; 0x146b
   154dc:	str	r0, [sp, #20]
   154e0:	mov	r0, #172	; 0xac
   154e4:	mov	r3, #0
   154e8:	str	r9, [sp]
   154ec:	str	r7, [sp, #4]
   154f0:	str	r0, [sp, #8]
   154f4:	movt	r1, #4
   154f8:	movt	r2, #4
   154fc:	mov	r0, r4
   15500:	bl	15040 <test_json@@Base>
   15504:	movw	r2, #5256	; 0x1488
   15508:	str	r0, [sp, #16]
   1550c:	mov	r0, #176	; 0xb0
   15510:	mov	r1, #4
   15514:	mov	r3, #0
   15518:	str	r7, [sp]
   1551c:	str	r1, [sp, #4]
   15520:	str	r0, [sp, #8]
   15524:	movt	r2, #4
   15528:	mov	r0, r4
   1552c:	mov	r1, r5
   15530:	bl	15040 <test_json@@Base>
   15534:	mov	r1, #8
   15538:	movw	r2, #5309	; 0x14bd
   1553c:	str	r0, [sp, #12]
   15540:	mov	r0, #180	; 0xb4
   15544:	mov	r3, #0
   15548:	str	r9, [sp]
   1554c:	str	r1, [sp, #4]
   15550:	movw	r1, #5275	; 0x149b
   15554:	str	r0, [sp, #8]
   15558:	movt	r2, #4
   1555c:	mov	r0, r4
   15560:	movt	r1, #4
   15564:	bl	15040 <test_json@@Base>
   15568:	movw	r1, #5583	; 0x15cf
   1556c:	mov	r6, r0
   15570:	mov	r0, #195	; 0xc3
   15574:	stm	sp, {r7, r9}
   15578:	mov	r2, sl
   1557c:	mov	r3, #0
   15580:	str	r0, [sp, #8]
   15584:	movt	r1, #4
   15588:	mov	r0, r4
   1558c:	bl	15040 <test_json@@Base>
   15590:	movw	r5, #5621	; 0x15f5
   15594:	movw	r2, #5671	; 0x1627
   15598:	mov	r7, r0
   1559c:	mov	r0, #199	; 0xc7
   155a0:	mov	sl, #1
   155a4:	mov	r3, #0
   155a8:	str	r9, [sp, #4]
   155ac:	movt	r5, #4
   155b0:	str	r0, [sp, #8]
   155b4:	movt	r2, #4
   155b8:	mov	r0, r4
   155bc:	str	sl, [sp]
   155c0:	mov	r1, r5
   155c4:	bl	15040 <test_json@@Base>
   155c8:	movw	r2, #5698	; 0x1642
   155cc:	mov	r8, r0
   155d0:	mov	r0, #203	; 0xcb
   155d4:	mov	r1, r5
   155d8:	mov	r3, #0
   155dc:	str	sl, [sp]
   155e0:	str	sl, [sp, #4]
   155e4:	str	r0, [sp, #8]
   155e8:	movt	r2, #4
   155ec:	mov	r0, r4
   155f0:	bl	15040 <test_json@@Base>
   155f4:	mov	r1, #209	; 0xd1
   155f8:	ldr	r2, [sp, #20]
   155fc:	mov	r3, #0
   15600:	str	sl, [sp]
   15604:	str	r9, [sp, #4]
   15608:	str	r1, [sp, #8]
   1560c:	ldr	r1, [sp, #24]
   15610:	orr	r1, r2, r1
   15614:	ldr	r2, [sp, #16]
   15618:	orr	r1, r1, r2
   1561c:	ldr	r2, [sp, #12]
   15620:	orr	r1, r1, r2
   15624:	movw	r2, #5671	; 0x1627
   15628:	orr	r1, r1, r6
   1562c:	movt	r2, #4
   15630:	orr	r1, r1, r7
   15634:	orr	r1, r1, r8
   15638:	orr	r5, r1, r0
   1563c:	movw	r1, #5721	; 0x1659
   15640:	mov	r0, r4
   15644:	movt	r1, #4
   15648:	bl	15040 <test_json@@Base>
   1564c:	orr	r0, r5, r0
   15650:	sub	sp, fp, #28
   15654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015658 <error_case_tests@@Base>:
   15658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1565c:	add	fp, sp, #28
   15660:	sub	sp, sp, #36	; 0x24
   15664:	movw	r4, #16736	; 0x4160
   15668:	movw	r1, #5834	; 0x16ca
   1566c:	movw	r0, #285	; 0x11d
   15670:	mov	r6, #0
   15674:	mov	r2, #0
   15678:	mov	r3, #13
   1567c:	movt	r4, #4
   15680:	str	r0, [sp, #8]
   15684:	movt	r1, #4
   15688:	str	r6, [sp]
   1568c:	str	r6, [sp, #4]
   15690:	mov	r0, r4
   15694:	bl	15040 <test_json@@Base>
   15698:	movw	r1, #5860	; 0x16e4
   1569c:	str	r0, [sp, #32]
   156a0:	movw	r0, #287	; 0x11f
   156a4:	mov	r2, #0
   156a8:	mov	r3, #13
   156ac:	str	r6, [sp]
   156b0:	str	r6, [sp, #4]
   156b4:	str	r0, [sp, #8]
   156b8:	movt	r1, #4
   156bc:	mov	r0, r4
   156c0:	bl	15040 <test_json@@Base>
   156c4:	movw	r1, #5957	; 0x1745
   156c8:	str	r0, [sp, #28]
   156cc:	movw	r0, #289	; 0x121
   156d0:	mov	r2, #0
   156d4:	mov	r3, #13
   156d8:	str	r6, [sp]
   156dc:	str	r6, [sp, #4]
   156e0:	str	r0, [sp, #8]
   156e4:	movt	r1, #4
   156e8:	mov	r0, r4
   156ec:	bl	15040 <test_json@@Base>
   156f0:	movw	r1, #6051	; 0x17a3
   156f4:	str	r0, [sp, #24]
   156f8:	movw	r0, #291	; 0x123
   156fc:	mov	r2, #0
   15700:	mov	r3, #13
   15704:	str	r6, [sp]
   15708:	str	r6, [sp, #4]
   1570c:	str	r0, [sp, #8]
   15710:	movt	r1, #4
   15714:	mov	r0, r4
   15718:	bl	15040 <test_json@@Base>
   1571c:	movw	r1, #6139	; 0x17fb
   15720:	str	r0, [sp, #20]
   15724:	movw	r0, #293	; 0x125
   15728:	mov	r2, #0
   1572c:	mov	r3, #13
   15730:	str	r6, [sp]
   15734:	str	r6, [sp, #4]
   15738:	str	r0, [sp, #8]
   1573c:	movt	r1, #4
   15740:	mov	r0, r4
   15744:	bl	15040 <test_json@@Base>
   15748:	movw	r1, #6224	; 0x1850
   1574c:	str	r0, [sp, #16]
   15750:	mov	r0, #296	; 0x128
   15754:	mov	r2, #0
   15758:	mov	r3, #13
   1575c:	str	r6, [sp]
   15760:	str	r6, [sp, #4]
   15764:	str	r0, [sp, #8]
   15768:	movt	r1, #4
   1576c:	mov	r0, r4
   15770:	bl	15040 <test_json@@Base>
   15774:	movw	r1, #6382	; 0x18ee
   15778:	mov	r7, r0
   1577c:	movw	r0, #299	; 0x12b
   15780:	mov	r2, #0
   15784:	mov	r3, #13
   15788:	str	r6, [sp]
   1578c:	str	r6, [sp, #4]
   15790:	str	r0, [sp, #8]
   15794:	movt	r1, #4
   15798:	mov	r0, r4
   1579c:	bl	15040 <test_json@@Base>
   157a0:	movw	r1, #6537	; 0x1989
   157a4:	mov	r8, r0
   157a8:	movw	r0, #303	; 0x12f
   157ac:	mov	r2, #0
   157b0:	mov	r3, #13
   157b4:	str	r6, [sp]
   157b8:	str	r6, [sp, #4]
   157bc:	str	r0, [sp, #8]
   157c0:	movt	r1, #4
   157c4:	mov	r0, r4
   157c8:	bl	15040 <test_json@@Base>
   157cc:	movw	r1, #6736	; 0x1a50
   157d0:	mov	r9, r0
   157d4:	movw	r0, #307	; 0x133
   157d8:	mov	r2, #0
   157dc:	mov	r3, #13
   157e0:	str	r6, [sp]
   157e4:	str	r6, [sp, #4]
   157e8:	str	r0, [sp, #8]
   157ec:	movt	r1, #4
   157f0:	mov	r0, r4
   157f4:	bl	15040 <test_json@@Base>
   157f8:	movw	r1, #6935	; 0x1b17
   157fc:	mov	sl, r0
   15800:	movw	r0, #311	; 0x137
   15804:	mov	r2, #0
   15808:	mov	r3, #5
   1580c:	str	r6, [sp]
   15810:	str	r6, [sp, #4]
   15814:	str	r0, [sp, #8]
   15818:	movt	r1, #4
   1581c:	mov	r0, r4
   15820:	bl	15040 <test_json@@Base>
   15824:	movw	r1, #6959	; 0x1b2f
   15828:	mov	r5, r0
   1582c:	movw	r0, #314	; 0x13a
   15830:	mov	r2, #0
   15834:	mov	r3, #5
   15838:	str	r6, [sp]
   1583c:	str	r6, [sp, #4]
   15840:	str	r0, [sp, #8]
   15844:	movt	r1, #4
   15848:	mov	r0, r4
   1584c:	bl	15040 <test_json@@Base>
   15850:	movw	r1, #317	; 0x13d
   15854:	ldr	r2, [sp, #28]
   15858:	mov	r3, #5
   1585c:	str	r6, [sp]
   15860:	str	r6, [sp, #4]
   15864:	str	r1, [sp, #8]
   15868:	ldr	r1, [sp, #32]
   1586c:	orr	r1, r2, r1
   15870:	ldr	r2, [sp, #24]
   15874:	orr	r1, r1, r2
   15878:	ldr	r2, [sp, #20]
   1587c:	orr	r1, r1, r2
   15880:	ldr	r2, [sp, #16]
   15884:	orr	r1, r1, r2
   15888:	mov	r2, #0
   1588c:	orr	r1, r1, r7
   15890:	orr	r1, r1, r8
   15894:	orr	r1, r1, r9
   15898:	orr	r1, r1, sl
   1589c:	orr	r1, r1, r5
   158a0:	orr	r5, r1, r0
   158a4:	movw	r1, #6997	; 0x1b55
   158a8:	mov	r0, r4
   158ac:	movt	r1, #4
   158b0:	bl	15040 <test_json@@Base>
   158b4:	orr	r0, r5, r0
   158b8:	sub	sp, fp, #28
   158bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000158c0 <base64_tests@@Base>:
   158c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158c4:	add	fp, sp, #28
   158c8:	sub	sp, sp, #20
   158cc:	movw	r4, #16736	; 0x4160
   158d0:	movw	r1, #7053	; 0x1b8d
   158d4:	movw	r2, #5256	; 0x1488
   158d8:	movw	r0, #369	; 0x171
   158dc:	mov	r8, #0
   158e0:	mov	r3, #0
   158e4:	movt	r4, #4
   158e8:	str	r0, [sp, #8]
   158ec:	movt	r1, #4
   158f0:	movt	r2, #4
   158f4:	str	r8, [sp]
   158f8:	str	r8, [sp, #4]
   158fc:	mov	r0, r4
   15900:	bl	15040 <test_json@@Base>
   15904:	movw	r1, #7075	; 0x1ba3
   15908:	movw	r2, #7114	; 0x1bca
   1590c:	str	r0, [sp, #16]
   15910:	mov	r0, #372	; 0x174
   15914:	mov	r3, #0
   15918:	str	r8, [sp]
   1591c:	str	r8, [sp, #4]
   15920:	str	r0, [sp, #8]
   15924:	movt	r1, #4
   15928:	movt	r2, #4
   1592c:	mov	r0, r4
   15930:	bl	15040 <test_json@@Base>
   15934:	movw	r6, #7334	; 0x1ca6
   15938:	movw	r1, #7149	; 0x1bed
   1593c:	mov	r9, r0
   15940:	mov	r0, #376	; 0x178
   15944:	mov	r3, #0
   15948:	str	r8, [sp]
   1594c:	str	r8, [sp, #4]
   15950:	movt	r6, #4
   15954:	str	r0, [sp, #8]
   15958:	movt	r1, #4
   1595c:	mov	r0, r4
   15960:	mov	r2, r6
   15964:	bl	15040 <test_json@@Base>
   15968:	movw	r7, #7702	; 0x1e16
   1596c:	movw	r1, #7514	; 0x1d5a
   15970:	mov	sl, r0
   15974:	movw	r0, #379	; 0x17b
   15978:	mov	r3, #0
   1597c:	str	r8, [sp]
   15980:	str	r8, [sp, #4]
   15984:	movt	r7, #4
   15988:	str	r0, [sp, #8]
   1598c:	movt	r1, #4
   15990:	mov	r0, r4
   15994:	mov	r2, r7
   15998:	bl	15040 <test_json@@Base>
   1599c:	movw	r1, #7885	; 0x1ecd
   159a0:	mov	r5, r0
   159a4:	movw	r0, #382	; 0x17e
   159a8:	mov	r2, r6
   159ac:	mov	r3, #0
   159b0:	str	r8, [sp]
   159b4:	str	r8, [sp, #4]
   159b8:	str	r0, [sp, #8]
   159bc:	movt	r1, #4
   159c0:	mov	r0, r4
   159c4:	bl	15040 <test_json@@Base>
   159c8:	movw	r1, #8068	; 0x1f84
   159cc:	mov	r6, r0
   159d0:	movw	r0, #385	; 0x181
   159d4:	mov	r2, r7
   159d8:	mov	r3, #0
   159dc:	str	r8, [sp]
   159e0:	str	r8, [sp, #4]
   159e4:	str	r0, [sp, #8]
   159e8:	movt	r1, #4
   159ec:	mov	r0, r4
   159f0:	bl	15040 <test_json@@Base>
   159f4:	movw	r1, #8254	; 0x203e
   159f8:	mov	r7, r0
   159fc:	mov	r0, #388	; 0x184
   15a00:	mov	r2, #0
   15a04:	mov	r3, #31
   15a08:	str	r8, [sp]
   15a0c:	str	r8, [sp, #4]
   15a10:	str	r0, [sp, #8]
   15a14:	movt	r1, #4
   15a18:	mov	r0, r4
   15a1c:	bl	15040 <test_json@@Base>
   15a20:	movw	r1, #391	; 0x187
   15a24:	mov	r2, #0
   15a28:	mov	r3, #32
   15a2c:	str	r8, [sp]
   15a30:	str	r8, [sp, #4]
   15a34:	str	r1, [sp, #8]
   15a38:	ldr	r1, [sp, #16]
   15a3c:	orr	r1, r9, r1
   15a40:	orr	r1, r1, sl
   15a44:	orr	r1, r1, r5
   15a48:	orr	r1, r1, r6
   15a4c:	orr	r1, r1, r7
   15a50:	orr	r5, r1, r0
   15a54:	movw	r1, #8439	; 0x20f7
   15a58:	mov	r0, r4
   15a5c:	movt	r1, #4
   15a60:	bl	15040 <test_json@@Base>
   15a64:	orr	r0, r5, r0
   15a68:	sub	sp, fp, #28
   15a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015a70 <mixed_type_union_tests@@Base>:
   15a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a74:	add	fp, sp, #28
   15a78:	sub	sp, sp, #20
   15a7c:	movw	r4, #16752	; 0x4170
   15a80:	movw	r1, #8627	; 0x21b3
   15a84:	movw	r2, #8706	; 0x2202
   15a88:	mov	r0, #432	; 0x1b0
   15a8c:	mov	r8, #0
   15a90:	mov	r3, #0
   15a94:	movt	r4, #4
   15a98:	str	r0, [sp, #8]
   15a9c:	movt	r1, #4
   15aa0:	movt	r2, #4
   15aa4:	str	r8, [sp]
   15aa8:	str	r8, [sp, #4]
   15aac:	mov	r0, r4
   15ab0:	bl	15040 <test_json@@Base>
   15ab4:	movw	r9, #8908	; 0x22cc
   15ab8:	movw	r1, #8777	; 0x2249
   15abc:	str	r0, [sp, #16]
   15ac0:	movw	r0, #437	; 0x1b5
   15ac4:	mov	r3, #0
   15ac8:	str	r8, [sp]
   15acc:	str	r8, [sp, #4]
   15ad0:	movt	r9, #4
   15ad4:	str	r0, [sp, #8]
   15ad8:	movt	r1, #4
   15adc:	mov	r0, r4
   15ae0:	mov	r2, r9
   15ae4:	bl	15040 <test_json@@Base>
   15ae8:	movw	r1, #9027	; 0x2343
   15aec:	mov	sl, r0
   15af0:	movw	r0, #442	; 0x1ba
   15af4:	mov	r2, r9
   15af8:	mov	r3, #0
   15afc:	str	r8, [sp]
   15b00:	str	r8, [sp, #4]
   15b04:	str	r0, [sp, #8]
   15b08:	movt	r1, #4
   15b0c:	mov	r0, r4
   15b10:	bl	15040 <test_json@@Base>
   15b14:	movw	r1, #9177	; 0x23d9
   15b18:	movw	r2, #9398	; 0x24b6
   15b1c:	mov	r5, r0
   15b20:	movw	r0, #449	; 0x1c1
   15b24:	mov	r3, #0
   15b28:	str	r8, [sp]
   15b2c:	str	r8, [sp, #4]
   15b30:	str	r0, [sp, #8]
   15b34:	movt	r1, #4
   15b38:	movt	r2, #4
   15b3c:	mov	r0, r4
   15b40:	bl	15040 <test_json@@Base>
   15b44:	movw	r1, #9583	; 0x256f
   15b48:	movw	r2, #9845	; 0x2675
   15b4c:	mov	r6, r0
   15b50:	movw	r0, #458	; 0x1ca
   15b54:	mov	r3, #0
   15b58:	str	r8, [sp]
   15b5c:	str	r8, [sp, #4]
   15b60:	str	r0, [sp, #8]
   15b64:	movt	r1, #4
   15b68:	movt	r2, #4
   15b6c:	mov	r0, r4
   15b70:	bl	15040 <test_json@@Base>
   15b74:	movw	r1, #10067	; 0x2753
   15b78:	movw	r2, #10452	; 0x28d4
   15b7c:	mov	r7, r0
   15b80:	movw	r0, #469	; 0x1d5
   15b84:	mov	r3, #0
   15b88:	str	r8, [sp]
   15b8c:	str	r8, [sp, #4]
   15b90:	str	r0, [sp, #8]
   15b94:	movt	r1, #4
   15b98:	movt	r2, #4
   15b9c:	mov	r0, r4
   15ba0:	bl	15040 <test_json@@Base>
   15ba4:	movw	r1, #474	; 0x1da
   15ba8:	mov	r2, r9
   15bac:	mov	r3, #0
   15bb0:	str	r8, [sp]
   15bb4:	str	r8, [sp, #4]
   15bb8:	str	r1, [sp, #8]
   15bbc:	ldr	r1, [sp, #16]
   15bc0:	orr	r1, sl, r1
   15bc4:	orr	r1, r1, r5
   15bc8:	orr	r1, r1, r6
   15bcc:	orr	r1, r1, r7
   15bd0:	orr	r5, r1, r0
   15bd4:	movw	r1, #10778	; 0x2a1a
   15bd8:	mov	r0, r4
   15bdc:	movt	r1, #4
   15be0:	bl	15040 <test_json@@Base>
   15be4:	orr	r0, r5, r0
   15be8:	sub	sp, fp, #28
   15bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015bf0 <union_vector_tests@@Base>:
   15bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bf4:	add	fp, sp, #28
   15bf8:	sub	sp, sp, #12
   15bfc:	movw	r4, #16768	; 0x4180
   15c00:	movw	r8, #10983	; 0x2ae7
   15c04:	movw	r1, #10919	; 0x2aa7
   15c08:	movw	r0, #485	; 0x1e5
   15c0c:	mov	r7, #0
   15c10:	mov	r3, #0
   15c14:	movt	r8, #4
   15c18:	movt	r4, #4
   15c1c:	str	r0, [sp, #8]
   15c20:	movt	r1, #4
   15c24:	str	r7, [sp]
   15c28:	str	r7, [sp, #4]
   15c2c:	mov	r0, r4
   15c30:	mov	r2, r8
   15c34:	bl	15040 <test_json@@Base>
   15c38:	movw	r1, #11039	; 0x2b1f
   15c3c:	movw	r2, #11090	; 0x2b52
   15c40:	mov	r9, r0
   15c44:	mov	r0, #488	; 0x1e8
   15c48:	mov	r3, #0
   15c4c:	str	r7, [sp]
   15c50:	str	r7, [sp, #4]
   15c54:	str	r0, [sp, #8]
   15c58:	movt	r1, #4
   15c5c:	movt	r2, #4
   15c60:	mov	r0, r4
   15c64:	bl	15040 <test_json@@Base>
   15c68:	movw	r1, #11133	; 0x2b7d
   15c6c:	movw	r2, #11210	; 0x2bca
   15c70:	mov	sl, r0
   15c74:	movw	r0, #491	; 0x1eb
   15c78:	mov	r3, #0
   15c7c:	str	r7, [sp]
   15c80:	str	r7, [sp, #4]
   15c84:	str	r0, [sp, #8]
   15c88:	movt	r1, #4
   15c8c:	movt	r2, #4
   15c90:	mov	r0, r4
   15c94:	bl	15040 <test_json@@Base>
   15c98:	movw	r1, #11278	; 0x2c0e
   15c9c:	movw	r2, #11403	; 0x2c8b
   15ca0:	mov	r6, r0
   15ca4:	movw	r0, #494	; 0x1ee
   15ca8:	mov	r3, #0
   15cac:	str	r7, [sp]
   15cb0:	str	r7, [sp, #4]
   15cb4:	str	r0, [sp, #8]
   15cb8:	movt	r1, #4
   15cbc:	movt	r2, #4
   15cc0:	mov	r0, r4
   15cc4:	bl	15040 <test_json@@Base>
   15cc8:	movw	r1, #11511	; 0x2cf7
   15ccc:	mov	r5, r0
   15cd0:	movw	r0, #497	; 0x1f1
   15cd4:	mov	r2, r8
   15cd8:	mov	r3, #0
   15cdc:	str	r7, [sp]
   15ce0:	str	r7, [sp, #4]
   15ce4:	str	r0, [sp, #8]
   15ce8:	movt	r1, #4
   15cec:	mov	r0, r4
   15cf0:	bl	15040 <test_json@@Base>
   15cf4:	mov	r1, #500	; 0x1f4
   15cf8:	movw	r2, #11676	; 0x2d9c
   15cfc:	mov	r3, #0
   15d00:	str	r7, [sp]
   15d04:	str	r7, [sp, #4]
   15d08:	str	r1, [sp, #8]
   15d0c:	orr	r1, sl, r9
   15d10:	movt	r2, #4
   15d14:	orr	r1, r1, r6
   15d18:	orr	r1, r1, r5
   15d1c:	orr	r5, r1, r0
   15d20:	movw	r1, #11574	; 0x2d36
   15d24:	mov	r0, r4
   15d28:	movt	r1, #4
   15d2c:	bl	15040 <test_json@@Base>
   15d30:	orr	r0, r5, r0
   15d34:	sub	sp, fp, #28
   15d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d3c <main@@Base>:
   15d3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d40:	add	fp, sp, #28
   15d44:	sub	sp, sp, #164	; 0xa4
   15d48:	bl	15458 <edge_case_tests@@Base>
   15d4c:	str	r0, [fp, #-32]	; 0xffffffe0
   15d50:	bl	15658 <error_case_tests@@Base>
   15d54:	str	r0, [fp, #-36]	; 0xffffffdc
   15d58:	bl	15bf0 <union_vector_tests@@Base>
   15d5c:	str	r0, [fp, #-40]	; 0xffffffd8
   15d60:	bl	158c0 <base64_tests@@Base>
   15d64:	str	r0, [fp, #-44]	; 0xffffffd4
   15d68:	bl	15a70 <mixed_type_union_tests@@Base>
   15d6c:	movw	r4, #16736	; 0x4160
   15d70:	movw	r9, #5256	; 0x1488
   15d74:	movw	r1, #11768	; 0x2df8
   15d78:	str	r0, [fp, #-48]	; 0xffffffd0
   15d7c:	movw	r0, #525	; 0x20d
   15d80:	mov	r8, #0
   15d84:	mov	r3, #0
   15d88:	movt	r9, #4
   15d8c:	movt	r4, #4
   15d90:	str	r0, [sp, #8]
   15d94:	movt	r1, #4
   15d98:	str	r8, [sp]
   15d9c:	str	r8, [sp, #4]
   15da0:	mov	r0, r4
   15da4:	mov	r2, r9
   15da8:	bl	15040 <test_json@@Base>
   15dac:	movw	r5, #11830	; 0x2e36
   15db0:	movw	r1, #11791	; 0x2e0f
   15db4:	str	r0, [fp, #-52]	; 0xffffffcc
   15db8:	mov	r0, #528	; 0x210
   15dbc:	mov	r3, #0
   15dc0:	str	r8, [sp]
   15dc4:	str	r8, [sp, #4]
   15dc8:	movt	r5, #4
   15dcc:	str	r0, [sp, #8]
   15dd0:	movt	r1, #4
   15dd4:	mov	r0, r4
   15dd8:	mov	r2, r5
   15ddc:	bl	15040 <test_json@@Base>
   15de0:	movw	r7, #11903	; 0x2e7f
   15de4:	movw	r1, #11863	; 0x2e57
   15de8:	str	r0, [fp, #-56]	; 0xffffffc8
   15dec:	movw	r0, #531	; 0x213
   15df0:	mov	r3, #0
   15df4:	str	r8, [sp]
   15df8:	str	r8, [sp, #4]
   15dfc:	movt	r7, #4
   15e00:	str	r0, [sp, #8]
   15e04:	movt	r1, #4
   15e08:	mov	r0, r4
   15e0c:	mov	r2, r7
   15e10:	bl	15040 <test_json@@Base>
   15e14:	movw	r6, #11987	; 0x2ed3
   15e18:	movw	r1, #11938	; 0x2ea2
   15e1c:	str	r0, [fp, #-60]	; 0xffffffc4
   15e20:	movw	r0, #534	; 0x216
   15e24:	mov	r3, #0
   15e28:	str	r8, [sp]
   15e2c:	str	r8, [sp, #4]
   15e30:	movt	r6, #4
   15e34:	str	r0, [sp, #8]
   15e38:	movt	r1, #4
   15e3c:	mov	r0, r4
   15e40:	mov	r2, r6
   15e44:	bl	15040 <test_json@@Base>
   15e48:	movw	r1, #12031	; 0x2eff
   15e4c:	str	r0, [fp, #-64]	; 0xffffffc0
   15e50:	movw	r0, #537	; 0x219
   15e54:	mov	r2, r6
   15e58:	mov	r3, #0
   15e5c:	str	r8, [sp]
   15e60:	str	r8, [sp, #4]
   15e64:	str	r0, [sp, #8]
   15e68:	movt	r1, #4
   15e6c:	mov	r0, r4
   15e70:	bl	15040 <test_json@@Base>
   15e74:	movw	r1, #12089	; 0x2f39
   15e78:	str	r0, [fp, #-68]	; 0xffffffbc
   15e7c:	mov	r0, #540	; 0x21c
   15e80:	mov	r2, r5
   15e84:	mov	r3, #0
   15e88:	str	r8, [sp]
   15e8c:	str	r8, [sp, #4]
   15e90:	str	r0, [sp, #8]
   15e94:	movt	r1, #4
   15e98:	mov	r0, r4
   15e9c:	bl	15040 <test_json@@Base>
   15ea0:	movw	r1, #12127	; 0x2f5f
   15ea4:	str	r0, [fp, #-72]	; 0xffffffb8
   15ea8:	movw	r0, #543	; 0x21f
   15eac:	mov	r2, r7
   15eb0:	mov	r3, #0
   15eb4:	str	r8, [sp]
   15eb8:	str	r8, [sp, #4]
   15ebc:	str	r0, [sp, #8]
   15ec0:	movt	r1, #4
   15ec4:	mov	r0, r4
   15ec8:	bl	15040 <test_json@@Base>
   15ecc:	movw	r1, #12168	; 0x2f88
   15ed0:	str	r0, [fp, #-76]	; 0xffffffb4
   15ed4:	movw	r0, #547	; 0x223
   15ed8:	mov	r2, r9
   15edc:	mov	r3, #0
   15ee0:	str	r8, [sp]
   15ee4:	str	r8, [sp, #4]
   15ee8:	str	r0, [sp, #8]
   15eec:	movt	r1, #4
   15ef0:	mov	r0, r4
   15ef4:	bl	15040 <test_json@@Base>
   15ef8:	movw	r1, #5121	; 0x1401
   15efc:	str	r0, [fp, #-80]	; 0xffffffb0
   15f00:	movw	r0, #551	; 0x227
   15f04:	mov	r2, r9
   15f08:	mov	r3, #0
   15f0c:	str	r8, [sp]
   15f10:	str	r8, [sp, #4]
   15f14:	str	r0, [sp, #8]
   15f18:	movt	r1, #4
   15f1c:	mov	r0, r4
   15f20:	bl	15040 <test_json@@Base>
   15f24:	movw	r1, #12207	; 0x2faf
   15f28:	str	r0, [fp, #-84]	; 0xffffffac
   15f2c:	movw	r0, #601	; 0x259
   15f30:	mov	r2, r5
   15f34:	mov	r3, #0
   15f38:	str	r8, [sp]
   15f3c:	str	r8, [sp, #4]
   15f40:	str	r0, [sp, #8]
   15f44:	movt	r1, #4
   15f48:	mov	r0, r4
   15f4c:	bl	15040 <test_json@@Base>
   15f50:	movw	r1, #12240	; 0x2fd0
   15f54:	str	r0, [fp, #-88]	; 0xffffffa8
   15f58:	mov	r0, #604	; 0x25c
   15f5c:	mov	r2, r7
   15f60:	mov	r3, #0
   15f64:	str	r8, [sp]
   15f68:	str	r8, [sp, #4]
   15f6c:	str	r0, [sp, #8]
   15f70:	movt	r1, #4
   15f74:	mov	r0, r4
   15f78:	bl	15040 <test_json@@Base>
   15f7c:	movw	r1, #12273	; 0x2ff1
   15f80:	movw	r2, #12306	; 0x3012
   15f84:	str	r0, [fp, #-92]	; 0xffffffa4
   15f88:	movw	r0, #607	; 0x25f
   15f8c:	mov	r3, #0
   15f90:	str	r8, [sp]
   15f94:	str	r8, [sp, #4]
   15f98:	str	r0, [sp, #8]
   15f9c:	movt	r1, #4
   15fa0:	movt	r2, #4
   15fa4:	mov	r0, r4
   15fa8:	bl	15040 <test_json@@Base>
   15fac:	movw	r1, #12344	; 0x3038
   15fb0:	str	r0, [sp, #96]	; 0x60
   15fb4:	movw	r0, #610	; 0x262
   15fb8:	mov	r2, r6
   15fbc:	mov	r3, #0
   15fc0:	str	r8, [sp]
   15fc4:	str	r8, [sp, #4]
   15fc8:	str	r0, [sp, #8]
   15fcc:	movt	r1, #4
   15fd0:	mov	r0, r4
   15fd4:	bl	15040 <test_json@@Base>
   15fd8:	movw	r1, #12378	; 0x305a
   15fdc:	movw	r2, #12412	; 0x307c
   15fe0:	str	r0, [sp, #92]	; 0x5c
   15fe4:	movw	r0, #613	; 0x265
   15fe8:	mov	r3, #0
   15fec:	str	r8, [sp]
   15ff0:	str	r8, [sp, #4]
   15ff4:	str	r0, [sp, #8]
   15ff8:	movt	r1, #4
   15ffc:	movt	r2, #4
   16000:	mov	r0, r4
   16004:	bl	15040 <test_json@@Base>
   16008:	movw	r1, #12442	; 0x309a
   1600c:	movw	r2, #12476	; 0x30bc
   16010:	str	r0, [sp, #88]	; 0x58
   16014:	mov	r0, #616	; 0x268
   16018:	mov	r3, #0
   1601c:	str	r8, [sp]
   16020:	str	r8, [sp, #4]
   16024:	str	r0, [sp, #8]
   16028:	movt	r1, #4
   1602c:	movt	r2, #4
   16030:	mov	r0, r4
   16034:	bl	15040 <test_json@@Base>
   16038:	movw	r1, #12506	; 0x30da
   1603c:	movw	r2, #12539	; 0x30fb
   16040:	str	r0, [sp, #84]	; 0x54
   16044:	movw	r0, #619	; 0x26b
   16048:	mov	r3, #0
   1604c:	str	r8, [sp]
   16050:	str	r8, [sp, #4]
   16054:	str	r0, [sp, #8]
   16058:	movt	r1, #4
   1605c:	movt	r2, #4
   16060:	mov	r0, r4
   16064:	bl	15040 <test_json@@Base>
   16068:	movw	r1, #12568	; 0x3118
   1606c:	str	r0, [sp, #80]	; 0x50
   16070:	movw	r0, #622	; 0x26e
   16074:	mov	r2, r5
   16078:	mov	r3, #0
   1607c:	str	r8, [sp]
   16080:	str	r8, [sp, #4]
   16084:	str	r0, [sp, #8]
   16088:	movt	r1, #4
   1608c:	mov	r0, r4
   16090:	bl	15040 <test_json@@Base>
   16094:	movw	r1, #12611	; 0x3143
   16098:	str	r0, [sp, #76]	; 0x4c
   1609c:	movw	r0, #625	; 0x271
   160a0:	mov	r2, r5
   160a4:	mov	r3, #0
   160a8:	str	r8, [sp]
   160ac:	str	r8, [sp, #4]
   160b0:	str	r0, [sp, #8]
   160b4:	movt	r1, #4
   160b8:	mov	r0, r4
   160bc:	bl	15040 <test_json@@Base>
   160c0:	movw	r5, #12669	; 0x317d
   160c4:	movw	r6, #12711	; 0x31a7
   160c8:	str	r0, [sp, #72]	; 0x48
   160cc:	mov	r0, #628	; 0x274
   160d0:	mov	r3, #0
   160d4:	str	r8, [sp]
   160d8:	str	r8, [sp, #4]
   160dc:	movt	r5, #4
   160e0:	movt	r6, #4
   160e4:	str	r0, [sp, #8]
   160e8:	mov	r0, r4
   160ec:	mov	r1, r5
   160f0:	mov	r2, r6
   160f4:	bl	15040 <test_json@@Base>
   160f8:	str	r0, [sp, #68]	; 0x44
   160fc:	movw	r0, #631	; 0x277
   16100:	mov	r1, r5
   16104:	mov	r2, r6
   16108:	mov	r3, #0
   1610c:	str	r8, [sp]
   16110:	str	r8, [sp, #4]
   16114:	str	r0, [sp, #8]
   16118:	mov	r0, r4
   1611c:	bl	15040 <test_json@@Base>
   16120:	movw	r1, #12737	; 0x31c1
   16124:	movw	r2, #12818	; 0x3212
   16128:	str	r0, [sp, #64]	; 0x40
   1612c:	movw	r0, #634	; 0x27a
   16130:	mov	r3, #0
   16134:	str	r8, [sp]
   16138:	str	r8, [sp, #4]
   1613c:	str	r0, [sp, #8]
   16140:	movt	r1, #4
   16144:	movt	r2, #4
   16148:	mov	r0, r4
   1614c:	bl	15040 <test_json@@Base>
   16150:	movw	r1, #12889	; 0x3259
   16154:	movw	r2, #12974	; 0x32ae
   16158:	str	r0, [sp, #60]	; 0x3c
   1615c:	movw	r0, #638	; 0x27e
   16160:	mov	r3, #0
   16164:	str	r8, [sp]
   16168:	str	r8, [sp, #4]
   1616c:	str	r0, [sp, #8]
   16170:	movt	r1, #4
   16174:	movt	r2, #4
   16178:	mov	r0, r4
   1617c:	bl	15040 <test_json@@Base>
   16180:	movw	r1, #13048	; 0x32f8
   16184:	movw	r2, #13159	; 0x3367
   16188:	str	r0, [sp, #56]	; 0x38
   1618c:	movw	r0, #642	; 0x282
   16190:	mov	r3, #0
   16194:	str	r8, [sp]
   16198:	str	r8, [sp, #4]
   1619c:	str	r0, [sp, #8]
   161a0:	movt	r1, #4
   161a4:	movt	r2, #4
   161a8:	mov	r0, r4
   161ac:	bl	15040 <test_json@@Base>
   161b0:	movw	r1, #13257	; 0x33c9
   161b4:	str	r0, [sp, #52]	; 0x34
   161b8:	movw	r0, #646	; 0x286
   161bc:	mov	r2, r9
   161c0:	mov	r3, #0
   161c4:	str	r8, [sp]
   161c8:	str	r8, [sp, #4]
   161cc:	str	r0, [sp, #8]
   161d0:	movt	r1, #4
   161d4:	mov	r0, r4
   161d8:	bl	15040 <test_json@@Base>
   161dc:	movw	r1, #13300	; 0x33f4
   161e0:	str	r0, [sp, #48]	; 0x30
   161e4:	movw	r0, #649	; 0x289
   161e8:	mov	r2, r9
   161ec:	mov	r3, #0
   161f0:	str	r8, [sp]
   161f4:	str	r8, [sp, #4]
   161f8:	str	r0, [sp, #8]
   161fc:	movt	r1, #4
   16200:	mov	r0, r4
   16204:	bl	15040 <test_json@@Base>
   16208:	movw	r1, #13338	; 0x341a
   1620c:	movw	r2, #13447	; 0x3487
   16210:	str	r0, [sp, #44]	; 0x2c
   16214:	mov	r0, #716	; 0x2cc
   16218:	mov	r3, #0
   1621c:	str	r8, [sp]
   16220:	str	r8, [sp, #4]
   16224:	str	r0, [sp, #8]
   16228:	movt	r1, #4
   1622c:	movt	r2, #4
   16230:	mov	r0, r4
   16234:	bl	15040 <test_json@@Base>
   16238:	movw	r1, #13541	; 0x34e5
   1623c:	movw	r2, #13602	; 0x3522
   16240:	str	r0, [sp, #40]	; 0x28
   16244:	movw	r0, #731	; 0x2db
   16248:	mov	r3, #0
   1624c:	str	r8, [sp]
   16250:	str	r8, [sp, #4]
   16254:	str	r0, [sp, #8]
   16258:	movt	r1, #4
   1625c:	movt	r2, #4
   16260:	mov	r0, r4
   16264:	bl	15040 <test_json@@Base>
   16268:	movw	r1, #13650	; 0x3552
   1626c:	movw	r2, #13676	; 0x356c
   16270:	str	r0, [sp, #36]	; 0x24
   16274:	movw	r0, #734	; 0x2de
   16278:	mov	r3, #0
   1627c:	str	r8, [sp]
   16280:	str	r8, [sp, #4]
   16284:	str	r0, [sp, #8]
   16288:	movt	r1, #4
   1628c:	movt	r2, #4
   16290:	mov	r0, r4
   16294:	bl	15040 <test_json@@Base>
   16298:	movw	r5, #13766	; 0x35c6
   1629c:	movw	r1, #13694	; 0x357e
   162a0:	str	r0, [sp, #32]
   162a4:	movw	r0, #738	; 0x2e2
   162a8:	mov	r3, #0
   162ac:	str	r8, [sp]
   162b0:	str	r8, [sp, #4]
   162b4:	movt	r5, #4
   162b8:	str	r0, [sp, #8]
   162bc:	movt	r1, #4
   162c0:	mov	r0, r4
   162c4:	mov	r2, r5
   162c8:	bl	15040 <test_json@@Base>
   162cc:	movw	r1, #13831	; 0x3607
   162d0:	str	r0, [sp, #28]
   162d4:	movw	r0, #750	; 0x2ee
   162d8:	mov	r2, r5
   162dc:	mov	r3, #0
   162e0:	str	r8, [sp]
   162e4:	str	r8, [sp, #4]
   162e8:	str	r0, [sp, #8]
   162ec:	movt	r1, #4
   162f0:	mov	r0, r4
   162f4:	bl	15040 <test_json@@Base>
   162f8:	movw	r1, #13988	; 0x36a4
   162fc:	movw	r2, #14027	; 0x36cb
   16300:	str	r0, [sp, #24]
   16304:	movw	r0, #766	; 0x2fe
   16308:	mov	r3, #0
   1630c:	str	r8, [sp]
   16310:	str	r8, [sp, #4]
   16314:	str	r0, [sp, #8]
   16318:	movt	r1, #4
   1631c:	movt	r2, #4
   16320:	mov	r0, r4
   16324:	bl	15040 <test_json@@Base>
   16328:	movw	r1, #14061	; 0x36ed
   1632c:	movw	r2, #14108	; 0x371c
   16330:	str	r0, [sp, #20]
   16334:	movw	r0, #770	; 0x302
   16338:	mov	r3, #0
   1633c:	str	r8, [sp]
   16340:	str	r8, [sp, #4]
   16344:	str	r0, [sp, #8]
   16348:	movt	r1, #4
   1634c:	movt	r2, #4
   16350:	mov	r0, r4
   16354:	bl	15040 <test_json@@Base>
   16358:	movw	r1, #14150	; 0x3746
   1635c:	movw	r2, #14273	; 0x37c1
   16360:	str	r0, [sp, #16]
   16364:	mov	r0, #776	; 0x308
   16368:	mov	r3, #0
   1636c:	str	r8, [sp]
   16370:	str	r8, [sp, #4]
   16374:	str	r0, [sp, #8]
   16378:	movt	r1, #4
   1637c:	movt	r2, #4
   16380:	mov	r0, r4
   16384:	bl	15040 <test_json@@Base>
   16388:	movw	r1, #14385	; 0x3831
   1638c:	mov	r7, r0
   16390:	movw	r0, #781	; 0x30d
   16394:	mov	r2, r9
   16398:	mov	r3, #0
   1639c:	str	r8, [sp]
   163a0:	str	r8, [sp, #4]
   163a4:	str	r0, [sp, #8]
   163a8:	movt	r1, #4
   163ac:	mov	r0, r4
   163b0:	bl	15040 <test_json@@Base>
   163b4:	movw	r1, #14505	; 0x38a9
   163b8:	movw	r2, #14627	; 0x3923
   163bc:	mov	r6, r0
   163c0:	movw	r0, #786	; 0x312
   163c4:	mov	r3, #0
   163c8:	str	r8, [sp]
   163cc:	str	r8, [sp, #4]
   163d0:	str	r0, [sp, #8]
   163d4:	movt	r1, #4
   163d8:	movt	r2, #4
   163dc:	mov	r0, r4
   163e0:	bl	15040 <test_json@@Base>
   163e4:	movw	r1, #14738	; 0x3992
   163e8:	movw	r2, #14877	; 0x3a1d
   163ec:	mov	r9, r0
   163f0:	movw	r0, #791	; 0x317
   163f4:	mov	r3, #0
   163f8:	str	r8, [sp]
   163fc:	str	r8, [sp, #4]
   16400:	str	r0, [sp, #8]
   16404:	movt	r1, #4
   16408:	movt	r2, #4
   1640c:	mov	r0, r4
   16410:	bl	15040 <test_json@@Base>
   16414:	movw	r1, #15003	; 0x3a9b
   16418:	movw	r2, #15126	; 0x3b16
   1641c:	mov	sl, r0
   16420:	mov	r0, #796	; 0x31c
   16424:	mov	r3, #0
   16428:	str	r8, [sp]
   1642c:	str	r8, [sp, #4]
   16430:	str	r0, [sp, #8]
   16434:	movt	r1, #4
   16438:	movt	r2, #4
   1643c:	mov	r0, r4
   16440:	bl	15040 <test_json@@Base>
   16444:	movw	r1, #15238	; 0x3b86
   16448:	movw	r2, #15376	; 0x3c10
   1644c:	mov	r5, r0
   16450:	movw	r0, #801	; 0x321
   16454:	mov	r3, #0
   16458:	str	r8, [sp]
   1645c:	str	r8, [sp, #4]
   16460:	str	r0, [sp, #8]
   16464:	movt	r1, #4
   16468:	movt	r2, #4
   1646c:	mov	r0, r4
   16470:	bl	15040 <test_json@@Base>
   16474:	movw	r1, #806	; 0x326
   16478:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1647c:	mov	r3, #0
   16480:	str	r8, [sp]
   16484:	str	r8, [sp, #4]
   16488:	str	r1, [sp, #8]
   1648c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16490:	orr	r1, r2, r1
   16494:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16498:	orr	r1, r1, r2
   1649c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   164a0:	orr	r1, r1, r2
   164a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   164a8:	orr	r1, r1, r2
   164ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   164b0:	orr	r1, r1, r2
   164b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   164b8:	orr	r1, r1, r2
   164bc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   164c0:	orr	r1, r1, r2
   164c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   164c8:	orr	r1, r1, r2
   164cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164d0:	orr	r1, r1, r2
   164d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   164d8:	orr	r1, r1, r2
   164dc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164e0:	orr	r1, r1, r2
   164e4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   164e8:	orr	r1, r1, r2
   164ec:	ldr	r2, [fp, #-84]	; 0xffffffac
   164f0:	orr	r1, r1, r2
   164f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   164f8:	orr	r1, r1, r2
   164fc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16500:	orr	r1, r1, r2
   16504:	ldr	r2, [sp, #96]	; 0x60
   16508:	orr	r1, r1, r2
   1650c:	ldr	r2, [sp, #92]	; 0x5c
   16510:	orr	r1, r1, r2
   16514:	ldr	r2, [sp, #88]	; 0x58
   16518:	orr	r1, r1, r2
   1651c:	ldr	r2, [sp, #84]	; 0x54
   16520:	orr	r1, r1, r2
   16524:	ldr	r2, [sp, #80]	; 0x50
   16528:	orr	r1, r1, r2
   1652c:	ldr	r2, [sp, #76]	; 0x4c
   16530:	orr	r1, r1, r2
   16534:	ldr	r2, [sp, #72]	; 0x48
   16538:	orr	r1, r1, r2
   1653c:	ldr	r2, [sp, #68]	; 0x44
   16540:	orr	r1, r1, r2
   16544:	ldr	r2, [sp, #64]	; 0x40
   16548:	orr	r1, r1, r2
   1654c:	ldr	r2, [sp, #60]	; 0x3c
   16550:	orr	r1, r1, r2
   16554:	ldr	r2, [sp, #56]	; 0x38
   16558:	orr	r1, r1, r2
   1655c:	ldr	r2, [sp, #52]	; 0x34
   16560:	orr	r1, r1, r2
   16564:	ldr	r2, [sp, #48]	; 0x30
   16568:	orr	r1, r1, r2
   1656c:	ldr	r2, [sp, #44]	; 0x2c
   16570:	orr	r1, r1, r2
   16574:	ldr	r2, [sp, #40]	; 0x28
   16578:	orr	r1, r1, r2
   1657c:	ldr	r2, [sp, #36]	; 0x24
   16580:	orr	r1, r1, r2
   16584:	ldr	r2, [sp, #32]
   16588:	orr	r1, r1, r2
   1658c:	ldr	r2, [sp, #28]
   16590:	orr	r1, r1, r2
   16594:	ldr	r2, [sp, #24]
   16598:	orr	r1, r1, r2
   1659c:	ldr	r2, [sp, #20]
   165a0:	orr	r1, r1, r2
   165a4:	ldr	r2, [sp, #16]
   165a8:	orr	r1, r1, r2
   165ac:	movw	r2, #15646	; 0x3d1e
   165b0:	orr	r1, r1, r7
   165b4:	movt	r2, #4
   165b8:	orr	r1, r1, r6
   165bc:	orr	r1, r1, r9
   165c0:	orr	r1, r1, sl
   165c4:	orr	r1, r1, r5
   165c8:	orr	r5, r1, r0
   165cc:	movw	r1, #15503	; 0x3c8f
   165d0:	mov	r0, r4
   165d4:	movt	r1, #4
   165d8:	bl	15040 <test_json@@Base>
   165dc:	orrs	r0, r5, r0
   165e0:	mvnne	r0, #0
   165e4:	sub	sp, fp, #28
   165e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165f0:	add	fp, sp, #28
   165f4:	sub	sp, sp, #4
   165f8:	vpush	{d8-d9}
   165fc:	sub	sp, sp, #72	; 0x48
   16600:	mov	sl, r0
   16604:	mov	r0, #0
   16608:	mov	r8, r1
   1660c:	mov	r1, #36	; 0x24
   16610:	mov	r4, r3
   16614:	mov	r6, r2
   16618:	str	r0, [r3]
   1661c:	ldr	r0, [sl]
   16620:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   16624:	cmp	r0, #0
   16628:	beq	16658 <main@@Base+0x91c>
   1662c:	mov	r0, sl
   16630:	mov	r1, r8
   16634:	mov	r2, r6
   16638:	mov	r3, #33	; 0x21
   1663c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   16640:	mov	r8, r0
   16644:	mov	r0, r8
   16648:	sub	sp, fp, #48	; 0x30
   1664c:	vpop	{d8-d9}
   16650:	add	sp, sp, #4
   16654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16658:	add	r0, sp, #40	; 0x28
   1665c:	mov	r1, r8
   16660:	mov	r2, r6
   16664:	mov	r3, #1
   16668:	str	r0, [sp]
   1666c:	mov	r0, sl
   16670:	bl	33bcc <flatcc_json_parser_prepare_unions@@Base>
   16674:	cmp	r0, r6
   16678:	beq	1662c <main@@Base+0x8f0>
   1667c:	cmp	r8, r6
   16680:	beq	166b4 <main@@Base+0x978>
   16684:	ldrb	r0, [r8]
   16688:	cmp	r0, #123	; 0x7b
   1668c:	bne	166b4 <main@@Base+0x978>
   16690:	add	r1, r8, #1
   16694:	sub	r0, r6, r1
   16698:	cmp	r0, #2
   1669c:	blt	1674c <main@@Base+0xa10>
   166a0:	ldrb	r0, [r1]
   166a4:	cmp	r0, #32
   166a8:	bls	1673c <main@@Base+0xa00>
   166ac:	mov	r8, r1
   166b0:	b	1675c <main@@Base+0xa20>
   166b4:	mov	r0, sl
   166b8:	mov	r1, r8
   166bc:	mov	r2, r6
   166c0:	mov	r3, #21
   166c4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   166c8:	mov	r8, r0
   166cc:	add	r0, sl, #20
   166d0:	ldr	r0, [r0]
   166d4:	cmp	r0, #0
   166d8:	bne	1662c <main@@Base+0x8f0>
   166dc:	ldr	r0, [sl]
   166e0:	mov	r1, #3
   166e4:	bl	2dfac <flatcc_builder_check_required_field@@Base>
   166e8:	cmp	r0, #0
   166ec:	beq	16720 <main@@Base+0x9e4>
   166f0:	ldr	r3, [sp, #40]	; 0x28
   166f4:	mov	r0, sl
   166f8:	mov	r1, r8
   166fc:	mov	r2, r6
   16700:	bl	33c50 <flatcc_json_parser_finalize_unions@@Base>
   16704:	mov	r8, r0
   16708:	ldr	r0, [sl]
   1670c:	bl	2e138 <flatcc_builder_end_table@@Base>
   16710:	cmp	r0, #0
   16714:	str	r0, [r4]
   16718:	bne	16644 <main@@Base+0x908>
   1671c:	b	1662c <main@@Base+0x8f0>
   16720:	mov	r0, sl
   16724:	mov	r1, r8
   16728:	mov	r2, r6
   1672c:	mov	r3, #29
   16730:	bl	316cc <flatcc_json_parser_set_error@@Base>
   16734:	mov	r8, r0
   16738:	b	1662c <main@@Base+0x8f0>
   1673c:	bne	1674c <main@@Base+0xa10>
   16740:	ldrb	r0, [r8, #2]!
   16744:	cmp	r0, #32
   16748:	bhi	1675c <main@@Base+0xa20>
   1674c:	mov	r0, sl
   16750:	mov	r2, r6
   16754:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   16758:	mov	r8, r0
   1675c:	cmp	r8, r6
   16760:	mov	r2, r6
   16764:	beq	1679c <main@@Base+0xa60>
   16768:	ldrb	r0, [r8]
   1676c:	cmp	r0, #125	; 0x7d
   16770:	bne	16798 <main@@Base+0xa5c>
   16774:	add	r1, r8, #1
   16778:	sub	r0, r6, r1
   1677c:	cmp	r0, #2
   16780:	blt	1f2d8 <main@@Base+0x959c>
   16784:	ldrb	r0, [r1]
   16788:	cmp	r0, #32
   1678c:	bls	1f2c8 <main@@Base+0x958c>
   16790:	mov	r8, r1
   16794:	b	166cc <main@@Base+0x990>
   16798:	mov	r2, r8
   1679c:	add	r0, sl, #20
   167a0:	vldr	s18, [pc, #976]	; 16b78 <main@@Base+0xe3c>
   167a4:	vmov.f32	s16, #8	; 0x40400000  3.0
   167a8:	str	r6, [sp, #36]	; 0x24
   167ac:	str	sl, [sp, #32]
   167b0:	str	r4, [sp, #28]
   167b4:	str	r0, [sp, #24]
   167b8:	movw	r0, #13407	; 0x345f
   167bc:	movt	r0, #29494	; 0x7336
   167c0:	sub	r0, r0, #512	; 0x200
   167c4:	sub	r0, r0, #196608	; 0x30000
   167c8:	str	r0, [sp, #20]
   167cc:	cmp	r2, r6
   167d0:	mov	r8, r6
   167d4:	beq	16804 <main@@Base+0xac8>
   167d8:	ldrb	r0, [r2]
   167dc:	cmp	r0, #34	; 0x22
   167e0:	bne	167ec <main@@Base+0xab0>
   167e4:	add	r8, r2, #1
   167e8:	b	16804 <main@@Base+0xac8>
   167ec:	mov	r1, r2
   167f0:	mov	r0, sl
   167f4:	mov	r2, r6
   167f8:	mov	r3, #5
   167fc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   16800:	mov	r8, r0
   16804:	sub	r9, r6, r8
   16808:	mov	r0, #8
   1680c:	cmp	r9, #8
   16810:	movcc	r0, r9
   16814:	and	r0, r0, #15
   16818:	sub	r2, r0, #1
   1681c:	cmp	r2, #7
   16820:	bhi	18ec8 <main@@Base+0x318c>
   16824:	add	r0, pc, #32
   16828:	mov	sl, #0
   1682c:	mov	ip, #0
   16830:	mov	r7, #0
   16834:	mov	r1, #0
   16838:	mov	r3, #0
   1683c:	mov	r5, #0
   16840:	mov	r4, #0
   16844:	mov	r6, #0
   16848:	ldr	pc, [r0, r2, lsl #2]
   1684c:			; <UNDEFINED> instruction: 0x000168b0
   16850:	andeq	r6, r1, r8, lsr #17
   16854:	andeq	r6, r1, r0, lsr #17
   16858:	muleq	r1, r8, r8
   1685c:	andeq	r6, r1, ip, lsl #17
   16860:	andeq	r6, r1, r0, lsl #17
   16864:	andeq	r6, r1, r0, ror r8
   16868:	andeq	r6, r1, ip, ror #16
   1686c:	ldrb	ip, [r8, #7]
   16870:	ldrb	r0, [r8, #6]
   16874:	mov	r7, sl
   16878:	orr	r0, ip, r0, lsl #8
   1687c:	mov	sl, r0
   16880:	ldrb	r0, [r8, #5]
   16884:	mov	r1, r7
   16888:	orr	sl, sl, r0, lsl #16
   1688c:	ldrb	r0, [r8, #4]
   16890:	mov	r3, r1
   16894:	orr	sl, sl, r0, lsl #24
   16898:	ldrb	r0, [r8, #3]
   1689c:	orr	r5, r0, r3
   168a0:	ldrb	r0, [r8, #2]
   168a4:	orr	r4, r5, r0, lsl #8
   168a8:	ldrb	r0, [r8, #1]
   168ac:	orr	r6, r4, r0, lsl #16
   168b0:	ldrb	r0, [r8]
   168b4:	movw	r1, #29281	; 0x7261
   168b8:	movw	r5, #29556	; 0x7374
   168bc:	movt	r1, #24946	; 0x6172
   168c0:	movt	r5, #29797	; 0x7465
   168c4:	subs	r1, sl, r1
   168c8:	orr	r0, r6, r0, lsl #24
   168cc:	sbcs	r1, r0, r5
   168d0:	bcs	16978 <main@@Base+0xc3c>
   168d4:	movw	r1, #28004	; 0x6d64
   168d8:	movw	r2, #30309	; 0x7665
   168dc:	movt	r1, #28257	; 0x6e61
   168e0:	movt	r2, #26990	; 0x696e
   168e4:	cmp	r0, r1
   168e8:	bhi	16af4 <main@@Base+0xdb8>
   168ec:	ldr	r6, [sp, #36]	; 0x24
   168f0:	movw	r1, #25975	; 0x6577
   168f4:	movt	r1, #26220	; 0x666c
   168f8:	cmp	r0, r1
   168fc:	bhi	16bf4 <main@@Base+0xeb8>
   16900:	movw	r1, #27759	; 0x6c6f
   16904:	movt	r1, #25455	; 0x636f
   16908:	eor	r2, r0, r1
   1690c:	and	r1, sl, #-16777216	; 0xff000000
   16910:	eor	r3, r1, #1912602624	; 0x72000000
   16914:	orrs	r2, r3, r2
   16918:	beq	17454 <main@@Base+0x1718>
   1691c:	movw	r2, #25965	; 0x656d
   16920:	ldr	sl, [sp, #32]
   16924:	eor	r1, r1, #2030043136	; 0x79000000
   16928:	movt	r2, #25966	; 0x656e
   1692c:	eor	r0, r0, r2
   16930:	orrs	r0, r1, r0
   16934:	bne	18ec8 <main@@Base+0x318c>
   16938:	cmp	r9, #6
   1693c:	mov	r1, r8
   16940:	blt	184b8 <main@@Base+0x277c>
   16944:	ldrb	r0, [r8, #5]
   16948:	mov	r1, r8
   1694c:	cmp	r0, #34	; 0x22
   16950:	bne	184b8 <main@@Base+0x277c>
   16954:	add	r2, r8, #6
   16958:	sub	r0, r6, r2
   1695c:	cmp	r0, #2
   16960:	blt	17ca4 <main@@Base+0x1f68>
   16964:	ldrb	r0, [r2]
   16968:	cmp	r0, #32
   1696c:	bls	17c90 <main@@Base+0x1f54>
   16970:	mov	r1, r2
   16974:	b	17cb8 <main@@Base+0x1f7c>
   16978:	movw	r1, #0
   1697c:	movt	r1, #26163	; 0x6633
   16980:	subs	r1, sl, r1
   16984:	sbcs	r1, r0, r5
   16988:	bcs	16b7c <main@@Base+0xe40>
   1698c:	movw	r1, #29281	; 0x7261
   16990:	ldr	r6, [sp, #36]	; 0x24
   16994:	movt	r1, #24946	; 0x6172
   16998:	eor	r2, sl, r1
   1699c:	eor	r1, r0, r5
   169a0:	orrs	r2, r2, r1
   169a4:	bne	16c60 <main@@Base+0xf24>
   169a8:	add	r9, r8, #8
   169ac:	mov	r0, #8
   169b0:	sub	ip, r6, r9
   169b4:	cmp	ip, #8
   169b8:	movcc	r0, ip
   169bc:	and	r0, r0, #15
   169c0:	sub	r6, r0, #1
   169c4:	cmp	r6, #7
   169c8:	bhi	19468 <main@@Base+0x372c>
   169cc:	add	r0, pc, #32
   169d0:	mov	r1, #0
   169d4:	mov	lr, #0
   169d8:	mov	sl, #0
   169dc:	mov	r5, #0
   169e0:	mov	r3, #0
   169e4:	mov	r7, #0
   169e8:	mov	r4, #0
   169ec:	mov	r2, #0
   169f0:	ldr	pc, [r0, r6, lsl #2]
   169f4:	andeq	r6, r1, r8, asr sl
   169f8:	andeq	r6, r1, r0, asr sl
   169fc:	andeq	r6, r1, r8, asr #20
   16a00:	andeq	r6, r1, r0, asr #20
   16a04:	andeq	r6, r1, r4, lsr sl
   16a08:	andeq	r6, r1, r8, lsr #20
   16a0c:	andeq	r6, r1, r8, lsl sl
   16a10:	andeq	r6, r1, r4, lsl sl
   16a14:	ldrb	lr, [r8, #15]
   16a18:	ldrb	r0, [r8, #14]
   16a1c:	mov	sl, r1
   16a20:	orr	r0, lr, r0, lsl #8
   16a24:	mov	r1, r0
   16a28:	ldrb	r0, [r8, #13]
   16a2c:	mov	r5, sl
   16a30:	orr	r1, r1, r0, lsl #16
   16a34:	ldrb	r0, [r8, #12]
   16a38:	mov	r3, r5
   16a3c:	orr	r1, r1, r0, lsl #24
   16a40:	ldrb	r0, [r8, #11]
   16a44:	orr	r7, r0, r3
   16a48:	ldrb	r0, [r8, #10]
   16a4c:	orr	r4, r7, r0, lsl #8
   16a50:	ldrb	r0, [r8, #9]
   16a54:	orr	r2, r4, r0, lsl #16
   16a58:	ldrb	r0, [r9]
   16a5c:	movw	r7, #26227	; 0x6673
   16a60:	movt	r7, #31087	; 0x796f
   16a64:	orr	r2, r2, r0, lsl #24
   16a68:	movw	r0, #26989	; 0x696d
   16a6c:	movt	r0, #29810	; 0x7472
   16a70:	subs	r0, r0, r1
   16a74:	sbcs	r0, r7, r2
   16a78:	bcc	17390 <main@@Base+0x1654>
   16a7c:	movw	r0, #29797	; 0x7465
   16a80:	eor	r3, r2, r7
   16a84:	movt	r0, #28530	; 0x6f72
   16a88:	eor	r0, r1, r0
   16a8c:	orrs	r0, r0, r3
   16a90:	beq	17800 <main@@Base+0x1ac4>
   16a94:	movw	r0, #27763	; 0x6c73
   16a98:	movt	r0, #28527	; 0x6f6f
   16a9c:	eor	r0, r1, r0
   16aa0:	movw	r1, #26210	; 0x6662
   16aa4:	movt	r1, #31087	; 0x796f
   16aa8:	eor	r1, r2, r1
   16aac:	orrs	r0, r0, r1
   16ab0:	bne	19468 <main@@Base+0x372c>
   16ab4:	cmp	ip, #9
   16ab8:	blt	19468 <main@@Base+0x372c>
   16abc:	ldrb	r0, [r8, #16]
   16ac0:	cmp	r0, #34	; 0x22
   16ac4:	bne	19468 <main@@Base+0x372c>
   16ac8:	ldr	r4, [sp, #36]	; 0x24
   16acc:	ldr	r5, [sp, #32]
   16ad0:	add	r1, r8, #17
   16ad4:	sub	r0, r4, r1
   16ad8:	cmp	r0, #2
   16adc:	blt	1825c <main@@Base+0x2520>
   16ae0:	ldrb	r0, [r1]
   16ae4:	cmp	r0, #32
   16ae8:	bls	1824c <main@@Base+0x2510>
   16aec:	mov	r8, r1
   16af0:	b	1826c <main@@Base+0x2530>
   16af4:	ldr	r6, [sp, #36]	; 0x24
   16af8:	movw	r1, #29555	; 0x7373
   16afc:	movt	r1, #29797	; 0x7465
   16b00:	cmp	r0, r1
   16b04:	bhi	16d24 <main@@Base+0xfe8>
   16b08:	movw	r3, #24430	; 0x5f6e
   16b0c:	movw	r2, #29285	; 0x7265
   16b10:	movt	r3, #28276	; 0x6e74
   16b14:	movt	r2, #28769	; 0x7061
   16b18:	subs	r1, sl, r3
   16b1c:	sbcs	r1, r0, r2
   16b20:	bcs	16eb8 <main@@Base+0x117c>
   16b24:	movw	r1, #28005	; 0x6d65
   16b28:	movt	r1, #28257	; 0x6e61
   16b2c:	teq	r0, r1
   16b30:	bne	18ec4 <main@@Base+0x3188>
   16b34:	ldr	sl, [sp, #32]
   16b38:	cmp	r9, #5
   16b3c:	mov	r1, r8
   16b40:	blt	18668 <main@@Base+0x292c>
   16b44:	ldrb	r0, [r8, #4]
   16b48:	mov	r1, r8
   16b4c:	cmp	r0, #34	; 0x22
   16b50:	bne	18668 <main@@Base+0x292c>
   16b54:	add	r2, r8, #5
   16b58:	sub	r0, r6, r2
   16b5c:	cmp	r0, #2
   16b60:	blt	17d8c <main@@Base+0x2050>
   16b64:	ldrb	r0, [r2]
   16b68:	cmp	r0, #32
   16b6c:	bls	17d78 <main@@Base+0x203c>
   16b70:	mov	r1, r2
   16b74:	b	17da0 <main@@Base+0x2064>
   16b78:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   16b7c:	movw	r2, #29544	; 0x7368
   16b80:	ldr	r6, [sp, #36]	; 0x24
   16b84:	movt	r2, #26721	; 0x6861
   16b88:	subs	r1, sl, r2
   16b8c:	sbcs	r1, r0, r5
   16b90:	bcs	16d7c <main@@Base+0x1040>
   16b94:	movw	r1, #0
   16b98:	bfc	sl, #0, #16
   16b9c:	eor	r0, r0, r5
   16ba0:	movt	r1, #26163	; 0x6633
   16ba4:	eor	r1, sl, r1
   16ba8:	orrs	r0, r1, r0
   16bac:	bne	18ec4 <main@@Base+0x3188>
   16bb0:	ldr	sl, [sp, #32]
   16bb4:	cmp	r9, #7
   16bb8:	mov	r7, r8
   16bbc:	blt	17f68 <main@@Base+0x222c>
   16bc0:	ldrb	r0, [r8, #6]
   16bc4:	mov	r7, r8
   16bc8:	cmp	r0, #34	; 0x22
   16bcc:	bne	17f68 <main@@Base+0x222c>
   16bd0:	add	r1, r8, #7
   16bd4:	sub	r0, r6, r1
   16bd8:	cmp	r0, #2
   16bdc:	blt	17bbc <main@@Base+0x1e80>
   16be0:	ldrb	r0, [r1]
   16be4:	cmp	r0, #32
   16be8:	bls	17ba8 <main@@Base+0x1e6c>
   16bec:	mov	r7, r1
   16bf0:	b	17bcc <main@@Base+0x1e90>
   16bf4:	movw	r1, #65535	; 0xffff
   16bf8:	movw	r3, #28530	; 0x6f72
   16bfc:	movt	r1, #26735	; 0x686f
   16c00:	movt	r3, #28276	; 0x6e74
   16c04:	cmp	r0, r1
   16c08:	bhi	1708c <main@@Base+0x1350>
   16c0c:	movw	r1, #25976	; 0x6578
   16c10:	movt	r1, #26220	; 0x666c
   16c14:	teq	r0, r1
   16c18:	bne	18ec4 <main@@Base+0x3188>
   16c1c:	ldr	sl, [sp, #32]
   16c20:	cmp	r9, #5
   16c24:	mov	r9, r8
   16c28:	blt	186bc <main@@Base+0x2980>
   16c2c:	ldrb	r0, [r8, #4]
   16c30:	mov	r9, r8
   16c34:	cmp	r0, #34	; 0x22
   16c38:	bne	186bc <main@@Base+0x2980>
   16c3c:	add	r1, r8, #5
   16c40:	sub	r0, r6, r1
   16c44:	cmp	r0, #2
   16c48:	blt	17e00 <main@@Base+0x20c4>
   16c4c:	ldrb	r0, [r1]
   16c50:	cmp	r0, #32
   16c54:	bls	17dec <main@@Base+0x20b0>
   16c58:	mov	r9, r1
   16c5c:	b	17e10 <main@@Base+0x20d4>
   16c60:	movw	r2, #28788	; 0x7074
   16c64:	movt	r2, #25965	; 0x656d
   16c68:	subs	r2, sl, r2
   16c6c:	sbcs	r2, r0, r5
   16c70:	bcs	170f0 <main@@Base+0x13b4>
   16c74:	movw	r0, #28524	; 0x6f6c
   16c78:	movt	r0, #25199	; 0x626f
   16c7c:	eor	r0, sl, r0
   16c80:	orrs	r0, r0, r1
   16c84:	beq	177bc <main@@Base+0x1a80>
   16c88:	movw	r0, #29541	; 0x7365
   16c8c:	movt	r0, #25185	; 0x6261
   16c90:	eor	r0, sl, r0
   16c94:	orrs	r0, r0, r1
   16c98:	bne	18ec4 <main@@Base+0x3188>
   16c9c:	add	r7, r8, #8
   16ca0:	mov	r1, #8
   16ca4:	ldr	sl, [sp, #32]
   16ca8:	sub	r0, r6, r7
   16cac:	cmp	r0, #8
   16cb0:	movcc	r1, r0
   16cb4:	and	r2, r1, #15
   16cb8:	sub	r1, r2, #2
   16cbc:	cmp	r1, #7
   16cc0:	bcs	17b40 <main@@Base+0x1e04>
   16cc4:	ldrb	r1, [r8, #9]
   16cc8:	lsl	r2, r1, #16
   16ccc:	mov	r1, #0
   16cd0:	ldrb	r3, [r7]
   16cd4:	orr	r2, r2, r3, lsl #24
   16cd8:	movw	r3, #0
   16cdc:	movt	r3, #13876	; 0x3634
   16ce0:	eor	r2, r2, r3
   16ce4:	orrs	r1, r1, r2
   16ce8:	bne	1e144 <main@@Base+0x8408>
   16cec:	cmp	r0, #3
   16cf0:	blt	1e144 <main@@Base+0x8408>
   16cf4:	ldrb	r0, [r8, #10]
   16cf8:	cmp	r0, #34	; 0x22
   16cfc:	bne	1e144 <main@@Base+0x8408>
   16d00:	add	r1, r8, #11
   16d04:	sub	r0, r6, r1
   16d08:	cmp	r0, #2
   16d0c:	blt	18b1c <main@@Base+0x2de0>
   16d10:	ldrb	r0, [r1]
   16d14:	cmp	r0, #32
   16d18:	bls	18b0c <main@@Base+0x2dd0>
   16d1c:	mov	r8, r1
   16d20:	b	18b2c <main@@Base+0x2df0>
   16d24:	eor	r7, r0, r5
   16d28:	mov	r2, r5
   16d2c:	and	r5, sl, #-16777216	; 0xff000000
   16d30:	eor	r1, r5, #872415232	; 0x34000000
   16d34:	orrs	r1, r1, r7
   16d38:	bne	17184 <main@@Base+0x1448>
   16d3c:	cmp	r9, #6
   16d40:	mov	r9, r8
   16d44:	blt	18028 <main@@Base+0x22ec>
   16d48:	ldrb	r0, [r8, #5]
   16d4c:	mov	r9, r8
   16d50:	cmp	r0, #34	; 0x22
   16d54:	bne	18028 <main@@Base+0x22ec>
   16d58:	add	r1, r8, #6
   16d5c:	sub	r0, r6, r1
   16d60:	cmp	r0, #2
   16d64:	blt	17c30 <main@@Base+0x1ef4>
   16d68:	ldrb	r0, [r1]
   16d6c:	cmp	r0, #32
   16d70:	bls	17c1c <main@@Base+0x1ee0>
   16d74:	mov	r9, r1
   16d78:	b	17c40 <main@@Base+0x1f04>
   16d7c:	eor	r2, sl, r2
   16d80:	eor	r1, r0, r5
   16d84:	orrs	r2, r2, r1
   16d88:	bne	171cc <main@@Base+0x1490>
   16d8c:	add	r9, r8, #8
   16d90:	mov	r0, #8
   16d94:	sub	ip, r6, r9
   16d98:	cmp	ip, #8
   16d9c:	movcc	r0, ip
   16da0:	and	r0, r0, #15
   16da4:	sub	r6, r0, #1
   16da8:	cmp	r6, #7
   16dac:	bhi	19468 <main@@Base+0x372c>
   16db0:	add	r0, pc, #32
   16db4:	mov	r1, #0
   16db8:	mov	lr, #0
   16dbc:	mov	sl, #0
   16dc0:	mov	r5, #0
   16dc4:	mov	r3, #0
   16dc8:	mov	r7, #0
   16dcc:	mov	r4, #0
   16dd0:	mov	r2, #0
   16dd4:	ldr	pc, [r0, r6, lsl #2]
   16dd8:	andeq	r6, r1, ip, lsr lr
   16ddc:	andeq	r6, r1, r4, lsr lr
   16de0:	andeq	r6, r1, ip, lsr #28
   16de4:	andeq	r6, r1, r4, lsr #28
   16de8:	andeq	r6, r1, r8, lsl lr
   16dec:	andeq	r6, r1, ip, lsl #28
   16df0:	strdeq	r6, [r1], -ip
   16df4:	strdeq	r6, [r1], -r8
   16df8:	ldrb	lr, [r8, #15]
   16dfc:	ldrb	r0, [r8, #14]
   16e00:	mov	sl, r1
   16e04:	orr	r0, lr, r0, lsl #8
   16e08:	mov	r1, r0
   16e0c:	ldrb	r0, [r8, #13]
   16e10:	mov	r5, sl
   16e14:	orr	r1, r1, r0, lsl #16
   16e18:	ldrb	r0, [r8, #12]
   16e1c:	mov	r3, r5
   16e20:	orr	r1, r1, r0, lsl #24
   16e24:	ldrb	r0, [r8, #11]
   16e28:	orr	r7, r0, r3
   16e2c:	ldrb	r0, [r8, #10]
   16e30:	orr	r4, r7, r0, lsl #8
   16e34:	ldrb	r0, [r8, #9]
   16e38:	orr	r2, r4, r0, lsl #16
   16e3c:	ldrb	r0, [r9]
   16e40:	movw	r3, #30257	; 0x7631
   16e44:	movt	r3, #26222	; 0x666e
   16e48:	orr	r2, r2, r0, lsl #24
   16e4c:	subs	r0, r1, r3
   16e50:	movw	r0, #13407	; 0x345f
   16e54:	movt	r0, #29494	; 0x7336
   16e58:	sbcs	r0, r2, r0
   16e5c:	bcs	17738 <main@@Base+0x19fc>
   16e60:	eor	r0, r1, r3
   16e64:	ldr	r1, [sp, #20]
   16e68:	eor	r1, r2, r1
   16e6c:	orrs	r0, r0, r1
   16e70:	bne	19468 <main@@Base+0x372c>
   16e74:	ldr	sl, [sp, #32]
   16e78:	cmp	ip, #9
   16e7c:	blt	1a54c <main@@Base+0x4810>
   16e80:	ldrb	r0, [r8, #16]
   16e84:	cmp	r0, #34	; 0x22
   16e88:	bne	1a54c <main@@Base+0x4810>
   16e8c:	ldr	r4, [sp, #36]	; 0x24
   16e90:	add	r1, r8, #17
   16e94:	sub	r0, r4, r1
   16e98:	cmp	r0, #2
   16e9c:	blt	18430 <main@@Base+0x26f4>
   16ea0:	ldrb	r0, [r1]
   16ea4:	cmp	r0, #32
   16ea8:	bls	18418 <main@@Base+0x26dc>
   16eac:	ldr	r4, [sp, #36]	; 0x24
   16eb0:	mov	r6, r1
   16eb4:	b	18440 <main@@Base+0x2704>
   16eb8:	eor	r1, sl, r3
   16ebc:	eor	r2, r0, r2
   16ec0:	orrs	r1, r1, r2
   16ec4:	bne	17498 <main@@Base+0x175c>
   16ec8:	add	r1, r8, #8
   16ecc:	mov	r2, #8
   16ed0:	ldr	sl, [sp, #32]
   16ed4:	sub	r0, r6, r1
   16ed8:	cmp	r0, #8
   16edc:	movcs	r0, r2
   16ee0:	and	r0, r0, #15
   16ee4:	sub	r7, r0, #1
   16ee8:	cmp	r7, #7
   16eec:	bhi	177b4 <main@@Base+0x1a78>
   16ef0:	add	r0, pc, #32
   16ef4:	mov	r9, #0
   16ef8:	mov	ip, #0
   16efc:	mov	lr, #0
   16f00:	mov	r6, #0
   16f04:	mov	r3, #0
   16f08:	mov	r5, #0
   16f0c:	mov	r4, #0
   16f10:	mov	r2, #0
   16f14:	ldr	pc, [r0, r7, lsl #2]
   16f18:	andeq	r6, r1, ip, ror pc
   16f1c:	andeq	r6, r1, r4, ror pc
   16f20:	andeq	r6, r1, ip, ror #30
   16f24:	andeq	r6, r1, r4, ror #30
   16f28:	andeq	r6, r1, r8, asr pc
   16f2c:	andeq	r6, r1, ip, asr #30
   16f30:	andeq	r6, r1, ip, lsr pc
   16f34:	andeq	r6, r1, r8, lsr pc
   16f38:	ldrb	ip, [r8, #15]
   16f3c:	ldrb	r0, [r8, #14]
   16f40:	mov	lr, r9
   16f44:	orr	r0, ip, r0, lsl #8
   16f48:	mov	r9, r0
   16f4c:	ldrb	r0, [r8, #13]
   16f50:	mov	r6, lr
   16f54:	orr	r9, r9, r0, lsl #16
   16f58:	ldrb	r0, [r8, #12]
   16f5c:	mov	r3, r6
   16f60:	orr	r9, r9, r0, lsl #24
   16f64:	ldrb	r0, [r8, #11]
   16f68:	orr	r5, r0, r3
   16f6c:	ldrb	r0, [r8, #10]
   16f70:	orr	r4, r5, r0, lsl #8
   16f74:	ldrb	r0, [r8, #9]
   16f78:	orr	r2, r4, r0, lsl #16
   16f7c:	ldrb	r3, [r1]
   16f80:	movw	r0, #25445	; 0x6365
   16f84:	ldr	r6, [sp, #36]	; 0x24
   16f88:	movt	r0, #28769	; 0x7061
   16f8c:	eor	r0, r9, r0
   16f90:	orr	r2, r2, r3, lsl #24
   16f94:	movw	r3, #25971	; 0x6573
   16f98:	movt	r3, #24941	; 0x616d
   16f9c:	eor	r2, r2, r3
   16fa0:	orrs	r0, r0, r2
   16fa4:	bne	177b4 <main@@Base+0x1a78>
   16fa8:	add	r9, r8, #16
   16fac:	mov	r1, #8
   16fb0:	sub	r0, r6, r9
   16fb4:	cmp	r0, #8
   16fb8:	movcc	r1, r0
   16fbc:	and	r1, r1, #15
   16fc0:	sub	r3, r1, #1
   16fc4:	cmp	r3, #7
   16fc8:	bhi	19470 <main@@Base+0x3734>
   16fcc:	add	r7, pc, #20
   16fd0:	mov	r1, #0
   16fd4:	mov	r2, #0
   16fd8:	mov	r6, #0
   16fdc:	mov	r5, #0
   16fe0:	mov	r4, #0
   16fe4:	ldr	pc, [r7, r3, lsl #2]
   16fe8:	andeq	r7, r1, ip, lsr #32
   16fec:	andeq	r7, r1, r4, lsr #32
   16ff0:	andeq	r7, r1, ip, lsl r0
   16ff4:	andeq	r7, r1, r0, lsl r0
   16ff8:	andeq	r7, r1, r8
   16ffc:	andeq	r7, r1, r8
   17000:	andeq	r7, r1, r8
   17004:	andeq	r7, r1, r8
   17008:	ldrb	r2, [r8, #20]
   1700c:	lsl	r2, r2, #24
   17010:	ldrb	r3, [r8, #19]
   17014:	orr	r6, r3, r1
   17018:	mov	r1, r2
   1701c:	ldrb	r2, [r8, #18]
   17020:	orr	r5, r6, r2, lsl #8
   17024:	ldrb	r2, [r8, #17]
   17028:	orr	r4, r5, r2, lsl #16
   1702c:	ldrb	r2, [r9]
   17030:	movw	r3, #25971	; 0x6573
   17034:	ldr	r6, [sp, #36]	; 0x24
   17038:	and	r1, r1, #-16777216	; 0xff000000
   1703c:	movt	r3, #24436	; 0x5f74
   17040:	eor	r1, r1, #1946157056	; 0x74000000
   17044:	orr	r2, r4, r2, lsl #24
   17048:	eor	r2, r2, r3
   1704c:	orrs	r1, r1, r2
   17050:	bne	19470 <main@@Base+0x3734>
   17054:	cmp	r0, #6
   17058:	blt	19470 <main@@Base+0x3734>
   1705c:	ldrb	r0, [r8, #21]
   17060:	cmp	r0, #34	; 0x22
   17064:	bne	19470 <main@@Base+0x3734>
   17068:	add	r1, r8, #22
   1706c:	sub	r0, r6, r1
   17070:	cmp	r0, #2
   17074:	blt	19300 <main@@Base+0x35c4>
   17078:	ldrb	r0, [r1]
   1707c:	cmp	r0, #32
   17080:	bls	192f0 <main@@Base+0x35b4>
   17084:	mov	r8, r1
   17088:	b	19310 <main@@Base+0x35d4>
   1708c:	subs	r1, sl, r3
   17090:	sbcs	r1, r0, r2
   17094:	bcs	174f0 <main@@Base+0x17b4>
   17098:	movw	r1, #0
   1709c:	bfc	r0, #0, #16
   170a0:	movt	r1, #26736	; 0x6870
   170a4:	teq	r0, r1
   170a8:	bne	18ec4 <main@@Base+0x3188>
   170ac:	ldr	sl, [sp, #32]
   170b0:	cmp	r9, #3
   170b4:	mov	r7, r8
   170b8:	blt	195b4 <main@@Base+0x3878>
   170bc:	ldrb	r0, [r8, #2]
   170c0:	mov	r7, r8
   170c4:	cmp	r0, #34	; 0x22
   170c8:	bne	195b4 <main@@Base+0x3878>
   170cc:	add	r1, r8, #3
   170d0:	sub	r0, r6, r1
   170d4:	cmp	r0, #2
   170d8:	blt	182d0 <main@@Base+0x2594>
   170dc:	ldrb	r0, [r1]
   170e0:	cmp	r0, #32
   170e4:	bls	182bc <main@@Base+0x2580>
   170e8:	mov	r7, r1
   170ec:	b	182e0 <main@@Base+0x25a4>
   170f0:	mvn	r2, #-1711276032	; 0x9a000000
   170f4:	subs	r2, r2, sl
   170f8:	sbcs	r2, r5, r0
   170fc:	bcc	17570 <main@@Base+0x1834>
   17100:	movw	r0, #28788	; 0x7074
   17104:	movt	r0, #25965	; 0x656d
   17108:	eor	r0, sl, r0
   1710c:	orrs	r0, r0, r1
   17110:	bne	18ec4 <main@@Base+0x3188>
   17114:	add	r7, r8, #8
   17118:	mov	r1, #8
   1711c:	mov	r2, #-268435456	; 0xf0000000
   17120:	ldr	sl, [sp, #32]
   17124:	sub	r0, r6, r7
   17128:	cmp	r0, #8
   1712c:	movcc	r1, r0
   17130:	add	r1, r2, r1, lsl #28
   17134:	asr	r1, r1, #28
   17138:	cmp	r1, #0
   1713c:	blt	1e144 <main@@Base+0x8408>
   17140:	ldrb	r1, [r7]
   17144:	cmp	r1, #121	; 0x79
   17148:	bne	1e144 <main@@Base+0x8408>
   1714c:	cmp	r0, #2
   17150:	blt	1e144 <main@@Base+0x8408>
   17154:	ldrb	r0, [r8, #9]
   17158:	cmp	r0, #34	; 0x22
   1715c:	bne	1e144 <main@@Base+0x8408>
   17160:	add	r1, r8, #10
   17164:	sub	r0, r6, r1
   17168:	cmp	r0, #2
   1716c:	blt	194c4 <main@@Base+0x3788>
   17170:	ldrb	r0, [r1]
   17174:	cmp	r0, #32
   17178:	bls	194b4 <main@@Base+0x3778>
   1717c:	mov	r8, r1
   17180:	b	194d4 <main@@Base+0x3798>
   17184:	teq	r0, r2
   17188:	bne	18a28 <main@@Base+0x2cec>
   1718c:	cmp	r9, #5
   17190:	mov	r1, r8
   17194:	blt	189ec <main@@Base+0x2cb0>
   17198:	ldrb	r0, [r8, #4]
   1719c:	mov	r1, r8
   171a0:	cmp	r0, #34	; 0x22
   171a4:	bne	189ec <main@@Base+0x2cb0>
   171a8:	add	r2, r8, #5
   171ac:	sub	r0, r6, r2
   171b0:	cmp	r0, #2
   171b4:	blt	17e74 <main@@Base+0x2138>
   171b8:	ldrb	r0, [r2]
   171bc:	cmp	r0, #32
   171c0:	bls	17e60 <main@@Base+0x2124>
   171c4:	mov	r1, r2
   171c8:	b	17e88 <main@@Base+0x214c>
   171cc:	movw	r7, #24431	; 0x5f6f
   171d0:	movw	r3, #25460	; 0x6374
   171d4:	movt	r7, #28530	; 0x6f72
   171d8:	movt	r3, #30309	; 0x7665
   171dc:	subs	r2, sl, r7
   171e0:	sbcs	r2, r0, r3
   171e4:	bcs	175dc <main@@Base+0x18a0>
   171e8:	movw	r0, #29556	; 0x7374
   171ec:	movt	r0, #28261	; 0x6e65
   171f0:	eor	r0, sl, r0
   171f4:	orrs	r0, r0, r1
   171f8:	bne	18ec4 <main@@Base+0x3188>
   171fc:	add	r1, r8, #8
   17200:	mov	r2, #8
   17204:	ldr	sl, [sp, #32]
   17208:	sub	r0, r6, r1
   1720c:	cmp	r0, #8
   17210:	movcs	r0, r2
   17214:	and	r0, r0, #15
   17218:	sub	r7, r0, #1
   1721c:	cmp	r7, #7
   17220:	bhi	177b4 <main@@Base+0x1a78>
   17224:	add	r0, pc, #32
   17228:	mov	r9, #0
   1722c:	mov	ip, #0
   17230:	mov	lr, #0
   17234:	mov	r6, #0
   17238:	mov	r3, #0
   1723c:	mov	r5, #0
   17240:	mov	r4, #0
   17244:	mov	r2, #0
   17248:	ldr	pc, [r0, r7, lsl #2]
   1724c:			; <UNDEFINED> instruction: 0x000172b0
   17250:	andeq	r7, r1, r8, lsr #5
   17254:	andeq	r7, r1, r0, lsr #5
   17258:	muleq	r1, r8, r2
   1725c:	andeq	r7, r1, ip, lsl #5
   17260:	andeq	r7, r1, r0, lsl #5
   17264:	andeq	r7, r1, r0, ror r2
   17268:	andeq	r7, r1, ip, ror #4
   1726c:	ldrb	ip, [r8, #15]
   17270:	ldrb	r0, [r8, #14]
   17274:	mov	lr, r9
   17278:	orr	r0, ip, r0, lsl #8
   1727c:	mov	r9, r0
   17280:	ldrb	r0, [r8, #13]
   17284:	mov	r6, lr
   17288:	orr	r9, r9, r0, lsl #16
   1728c:	ldrb	r0, [r8, #12]
   17290:	mov	r3, r6
   17294:	orr	r9, r9, r0, lsl #24
   17298:	ldrb	r0, [r8, #11]
   1729c:	orr	r5, r0, r3
   172a0:	ldrb	r0, [r8, #10]
   172a4:	orr	r4, r5, r0, lsl #8
   172a8:	ldrb	r0, [r8, #9]
   172ac:	orr	r2, r4, r0, lsl #16
   172b0:	ldrb	r3, [r1]
   172b4:	movw	r0, #25205	; 0x6275
   172b8:	ldr	r6, [sp, #36]	; 0x24
   172bc:	movt	r0, #24948	; 0x6174
   172c0:	eor	r0, r9, r0
   172c4:	orr	r2, r2, r3, lsl #24
   172c8:	movw	r3, #26220	; 0x666c
   172cc:	movt	r3, #25956	; 0x6564
   172d0:	eor	r2, r2, r3
   172d4:	orrs	r0, r0, r2
   172d8:	bne	177b4 <main@@Base+0x1a78>
   172dc:	add	r7, r8, #16
   172e0:	mov	r1, #8
   172e4:	sub	r0, r6, r7
   172e8:	cmp	r0, #8
   172ec:	movcc	r1, r0
   172f0:	and	r1, r1, #15
   172f4:	sub	r2, r1, #1
   172f8:	cmp	r2, #7
   172fc:	bhi	1e144 <main@@Base+0x8408>
   17300:	add	r3, pc, #4
   17304:	mov	r1, #0
   17308:	ldr	pc, [r3, r2, lsl #2]
   1730c:	andeq	r7, r1, r0, asr #6
   17310:	andeq	r7, r1, r8, lsr r3
   17314:	andeq	r7, r1, r0, lsr r3
   17318:	andeq	r7, r1, ip, lsr #6
   1731c:	andeq	r7, r1, ip, lsr #6
   17320:	andeq	r7, r1, ip, lsr #6
   17324:	andeq	r7, r1, ip, lsr #6
   17328:	andeq	r7, r1, ip, lsr #6
   1732c:	ldrb	r1, [r8, #19]
   17330:	ldrb	r2, [r8, #18]
   17334:	orr	r1, r1, r2, lsl #8
   17338:	ldrb	r2, [r8, #17]
   1733c:	orr	r1, r1, r2, lsl #16
   17340:	ldrb	r2, [r7]
   17344:	orr	r1, r1, r2, lsl #24
   17348:	movw	r2, #25970	; 0x6572
   1734c:	movt	r2, #26214	; 0x6666
   17350:	teq	r1, r2
   17354:	bne	1e144 <main@@Base+0x8408>
   17358:	cmp	r0, #5
   1735c:	blt	1e144 <main@@Base+0x8408>
   17360:	ldrb	r0, [r8, #20]
   17364:	cmp	r0, #34	; 0x22
   17368:	bne	1e144 <main@@Base+0x8408>
   1736c:	add	r1, r8, #21
   17370:	sub	r0, r6, r1
   17374:	cmp	r0, #2
   17378:	blt	1aa1c <main@@Base+0x4ce0>
   1737c:	ldrb	r0, [r1]
   17380:	cmp	r0, #32
   17384:	bls	1aa0c <main@@Base+0x4cd0>
   17388:	mov	r8, r1
   1738c:	b	1aa2c <main@@Base+0x4cf0>
   17390:	movw	r0, #27749	; 0x6c65
   17394:	movw	r3, #26228	; 0x6674
   17398:	ldr	r6, [sp, #36]	; 0x24
   1739c:	ldr	sl, [sp, #32]
   173a0:	movt	r0, #24930	; 0x6162
   173a4:	movt	r3, #31087	; 0x796f
   173a8:	eor	r0, r1, r0
   173ac:	eor	r3, r2, r3
   173b0:	orrs	r0, r0, r3
   173b4:	beq	17914 <main@@Base+0x1bd8>
   173b8:	movw	r0, #26990	; 0x696e
   173bc:	movt	r0, #29810	; 0x7472
   173c0:	eor	r0, r1, r0
   173c4:	eor	r1, r2, r7
   173c8:	orrs	r0, r0, r1
   173cc:	bne	19470 <main@@Base+0x3734>
   173d0:	add	r7, r8, #16
   173d4:	mov	r1, #8
   173d8:	sub	r0, r6, r7
   173dc:	cmp	r0, #8
   173e0:	movcc	r1, r0
   173e4:	and	r2, r1, #15
   173e8:	sub	r1, r2, #2
   173ec:	cmp	r1, #7
   173f0:	bcs	17b94 <main@@Base+0x1e58>
   173f4:	ldrb	r1, [r8, #17]
   173f8:	lsl	r2, r1, #16
   173fc:	mov	r1, #0
   17400:	ldrb	r3, [r7]
   17404:	orr	r2, r2, r3, lsl #24
   17408:	movw	r3, #0
   1740c:	movt	r3, #26418	; 0x6732
   17410:	eor	r3, r2, r3
   17414:	orrs	r1, r1, r3
   17418:	bne	17a94 <main@@Base+0x1d58>
   1741c:	cmp	r0, #3
   17420:	blt	1e144 <main@@Base+0x8408>
   17424:	ldrb	r0, [r8, #18]
   17428:	cmp	r0, #34	; 0x22
   1742c:	bne	1e144 <main@@Base+0x8408>
   17430:	add	r1, r8, #19
   17434:	sub	r0, r6, r1
   17438:	cmp	r0, #2
   1743c:	blt	18b8c <main@@Base+0x2e50>
   17440:	ldrb	r0, [r1]
   17444:	cmp	r0, #32
   17448:	bls	18b7c <main@@Base+0x2e40>
   1744c:	mov	r8, r1
   17450:	b	18b9c <main@@Base+0x2e60>
   17454:	ldr	sl, [sp, #32]
   17458:	cmp	r9, #6
   1745c:	mov	r7, r8
   17460:	blt	1850c <main@@Base+0x27d0>
   17464:	ldrb	r0, [r8, #5]
   17468:	mov	r7, r8
   1746c:	cmp	r0, #34	; 0x22
   17470:	bne	1850c <main@@Base+0x27d0>
   17474:	add	r1, r8, #6
   17478:	sub	r0, r6, r1
   1747c:	cmp	r0, #2
   17480:	blt	17d18 <main@@Base+0x1fdc>
   17484:	ldrb	r0, [r1]
   17488:	cmp	r0, #32
   1748c:	bls	17d04 <main@@Base+0x1fc8>
   17490:	mov	r7, r1
   17494:	b	17d28 <main@@Base+0x1fec>
   17498:	ldr	sl, [sp, #32]
   1749c:	movw	r1, #29440	; 0x7300
   174a0:	bic	r0, r0, #255	; 0xff
   174a4:	movt	r1, #28783	; 0x706f
   174a8:	teq	r0, r1
   174ac:	bne	18ec8 <main@@Base+0x318c>
   174b0:	cmp	r9, #4
   174b4:	mov	r9, r8
   174b8:	blt	19710 <main@@Base+0x39d4>
   174bc:	ldrb	r0, [r8, #3]
   174c0:	mov	r9, r8
   174c4:	cmp	r0, #34	; 0x22
   174c8:	bne	19710 <main@@Base+0x39d4>
   174cc:	add	r1, r8, #4
   174d0:	sub	r0, r6, r1
   174d4:	cmp	r0, #2
   174d8:	blt	18344 <main@@Base+0x2608>
   174dc:	ldrb	r0, [r1]
   174e0:	cmp	r0, #32
   174e4:	bls	18330 <main@@Base+0x25f4>
   174e8:	mov	r9, r1
   174ec:	b	18354 <main@@Base+0x2618>
   174f0:	eor	r1, sl, r3
   174f4:	eor	r2, r0, r2
   174f8:	orrs	r1, r1, r2
   174fc:	bne	17980 <main@@Base+0x1c44>
   17500:	add	r7, r8, #8
   17504:	mov	r1, #8
   17508:	mov	r2, #-268435456	; 0xf0000000
   1750c:	ldr	sl, [sp, #32]
   17510:	sub	r0, r6, r7
   17514:	cmp	r0, #8
   17518:	movcc	r1, r0
   1751c:	add	r1, r2, r1, lsl #28
   17520:	asr	r1, r1, #28
   17524:	cmp	r1, #0
   17528:	blt	1e144 <main@@Base+0x8408>
   1752c:	ldrb	r1, [r7]
   17530:	cmp	r1, #121	; 0x79
   17534:	bne	1e144 <main@@Base+0x8408>
   17538:	cmp	r0, #2
   1753c:	blt	1e144 <main@@Base+0x8408>
   17540:	ldrb	r0, [r8, #9]
   17544:	cmp	r0, #34	; 0x22
   17548:	bne	1e144 <main@@Base+0x8408>
   1754c:	add	r1, r8, #10
   17550:	sub	r0, r6, r1
   17554:	cmp	r0, #2
   17558:	blt	19534 <main@@Base+0x37f8>
   1755c:	ldrb	r0, [r1]
   17560:	cmp	r0, #32
   17564:	bls	19524 <main@@Base+0x37e8>
   17568:	mov	r8, r1
   1756c:	b	19544 <main@@Base+0x3808>
   17570:	movw	r3, #0
   17574:	mov	r2, sl
   17578:	movt	r3, #26163	; 0x6633
   1757c:	bfc	r2, #0, #16
   17580:	subs	r3, r3, #65536	; 0x10000
   17584:	eor	r2, r2, r3
   17588:	sbc	r3, r5, #0
   1758c:	eor	r0, r0, r3
   17590:	orrs	r0, r2, r0
   17594:	bne	179d4 <main@@Base+0x1c98>
   17598:	ldr	sl, [sp, #32]
   1759c:	cmp	r9, #7
   175a0:	mov	r7, r8
   175a4:	blt	1a310 <main@@Base+0x45d4>
   175a8:	ldrb	r0, [r8, #6]
   175ac:	mov	r7, r8
   175b0:	cmp	r0, #34	; 0x22
   175b4:	bne	1a310 <main@@Base+0x45d4>
   175b8:	add	r1, r8, #7
   175bc:	sub	r0, r6, r1
   175c0:	cmp	r0, #2
   175c4:	blt	183b8 <main@@Base+0x267c>
   175c8:	ldrb	r0, [r1]
   175cc:	cmp	r0, #32
   175d0:	bls	183a4 <main@@Base+0x2668>
   175d4:	mov	r7, r1
   175d8:	b	183c8 <main@@Base+0x268c>
   175dc:	eor	r1, sl, r7
   175e0:	eor	r0, r0, r3
   175e4:	orrs	r0, r1, r0
   175e8:	bne	18ec4 <main@@Base+0x3188>
   175ec:	add	r9, r8, #8
   175f0:	mov	r0, #8
   175f4:	sub	lr, r6, r9
   175f8:	cmp	lr, #8
   175fc:	movcc	r0, lr
   17600:	and	r0, r0, #15
   17604:	sub	r6, r0, #1
   17608:	cmp	r6, #7
   1760c:	bhi	19468 <main@@Base+0x372c>
   17610:	add	r2, pc, #32
   17614:	mov	r1, #0
   17618:	mov	ip, #0
   1761c:	mov	sl, #0
   17620:	mov	r5, #0
   17624:	mov	r3, #0
   17628:	mov	r7, #0
   1762c:	mov	r4, #0
   17630:	mov	r0, #0
   17634:	ldr	pc, [r2, r6, lsl #2]
   17638:	muleq	r1, ip, r6
   1763c:	muleq	r1, r4, r6
   17640:	andeq	r7, r1, ip, lsl #13
   17644:	andeq	r7, r1, r4, lsl #13
   17648:	andeq	r7, r1, r8, ror r6
   1764c:	andeq	r7, r1, ip, ror #12
   17650:	andeq	r7, r1, ip, asr r6
   17654:	andeq	r7, r1, r8, asr r6
   17658:	ldrb	ip, [r8, #15]
   1765c:	ldrb	r0, [r8, #14]
   17660:	mov	sl, r1
   17664:	orr	r0, ip, r0, lsl #8
   17668:	mov	r1, r0
   1766c:	ldrb	r0, [r8, #13]
   17670:	mov	r5, sl
   17674:	orr	r1, r1, r0, lsl #16
   17678:	ldrb	r0, [r8, #12]
   1767c:	mov	r3, r5
   17680:	orr	r1, r1, r0, lsl #24
   17684:	ldrb	r0, [r8, #11]
   17688:	orr	r7, r0, r3
   1768c:	ldrb	r0, [r8, #10]
   17690:	orr	r4, r7, r0, lsl #8
   17694:	ldrb	r0, [r8, #9]
   17698:	orr	r0, r4, r0, lsl #16
   1769c:	ldrb	r3, [r9]
   176a0:	movw	r2, #27749	; 0x6c65
   176a4:	movt	r2, #30050	; 0x7562
   176a8:	eor	r2, r1, r2
   176ac:	orr	r0, r0, r3, lsl #24
   176b0:	movw	r3, #25711	; 0x646f
   176b4:	movt	r3, #26207	; 0x665f
   176b8:	eor	r3, r0, r3
   176bc:	orrs	r2, r2, r3
   176c0:	bne	17ad8 <main@@Base+0x1d9c>
   176c4:	ldr	r6, [sp, #36]	; 0x24
   176c8:	add	r7, r8, #16
   176cc:	mov	r1, #8
   176d0:	mov	r2, #-268435456	; 0xf0000000
   176d4:	ldr	sl, [sp, #32]
   176d8:	sub	r0, r6, r7
   176dc:	cmp	r0, #8
   176e0:	movcc	r1, r0
   176e4:	add	r1, r2, r1, lsl #28
   176e8:	asr	r1, r1, #28
   176ec:	cmp	r1, #0
   176f0:	blt	1e144 <main@@Base+0x8408>
   176f4:	ldrb	r1, [r7]
   176f8:	cmp	r1, #115	; 0x73
   176fc:	bne	1e144 <main@@Base+0x8408>
   17700:	cmp	r0, #2
   17704:	blt	1e144 <main@@Base+0x8408>
   17708:	ldrb	r0, [r8, #17]
   1770c:	cmp	r0, #34	; 0x22
   17710:	bne	1e144 <main@@Base+0x8408>
   17714:	add	r1, r8, #18
   17718:	sub	r0, r6, r1
   1771c:	cmp	r0, #2
   17720:	blt	1afd0 <main@@Base+0x5294>
   17724:	ldrb	r0, [r1]
   17728:	cmp	r0, #32
   1772c:	bls	1afc0 <main@@Base+0x5284>
   17730:	mov	r8, r1
   17734:	b	1afe0 <main@@Base+0x52a4>
   17738:	movw	r0, #30256	; 0x7630
   1773c:	ldr	r6, [sp, #36]	; 0x24
   17740:	movt	r0, #26222	; 0x666e
   17744:	subs	r0, r0, r1
   17748:	movw	r0, #12895	; 0x325f
   1774c:	movt	r0, #30003	; 0x7533
   17750:	sbcs	r0, r0, r2
   17754:	eor	r0, r1, r3
   17758:	bcc	17a28 <main@@Base+0x1cec>
   1775c:	movw	r1, #13407	; 0x345f
   17760:	ldr	sl, [sp, #32]
   17764:	movt	r1, #29494	; 0x7336
   17768:	eor	r1, r2, r1
   1776c:	orrs	r0, r0, r1
   17770:	bne	19470 <main@@Base+0x3734>
   17774:	cmp	ip, #9
   17778:	blt	1b0dc <main@@Base+0x53a0>
   1777c:	ldrb	r0, [r8, #16]
   17780:	cmp	r0, #34	; 0x22
   17784:	bne	1b0dc <main@@Base+0x53a0>
   17788:	ldr	r4, [sp, #36]	; 0x24
   1778c:	add	r1, r8, #17
   17790:	sub	r0, r4, r1
   17794:	cmp	r0, #2
   17798:	blt	18d5c <main@@Base+0x3020>
   1779c:	ldrb	r0, [r1]
   177a0:	cmp	r0, #32
   177a4:	bls	18d44 <main@@Base+0x3008>
   177a8:	ldr	r4, [sp, #36]	; 0x24
   177ac:	mov	r6, r1
   177b0:	b	18d6c <main@@Base+0x3030>
   177b4:	mov	r0, sl
   177b8:	b	1e14c <main@@Base+0x8410>
   177bc:	ldr	sl, [sp, #32]
   177c0:	cmp	r9, #9
   177c4:	mov	r7, r8
   177c8:	blt	19160 <main@@Base+0x3424>
   177cc:	ldrb	r0, [r8, #8]
   177d0:	mov	r7, r8
   177d4:	cmp	r0, #34	; 0x22
   177d8:	bne	19160 <main@@Base+0x3424>
   177dc:	add	r1, r8, #9
   177e0:	sub	r0, r6, r1
   177e4:	cmp	r0, #2
   177e8:	blt	17ee8 <main@@Base+0x21ac>
   177ec:	ldrb	r0, [r1]
   177f0:	cmp	r0, #32
   177f4:	bls	17ed4 <main@@Base+0x2198>
   177f8:	mov	r7, r1
   177fc:	b	17ef8 <main@@Base+0x21bc>
   17800:	ldr	r0, [sp, #36]	; 0x24
   17804:	add	r9, r8, #16
   17808:	mov	r1, #8
   1780c:	ldr	sl, [sp, #32]
   17810:	sub	lr, r0, r9
   17814:	cmp	lr, #8
   17818:	movcc	r1, lr
   1781c:	and	r1, r1, #15
   17820:	sub	r6, r1, #1
   17824:	cmp	r6, #7
   17828:	bhi	1946c <main@@Base+0x3730>
   1782c:	add	r0, pc, #28
   17830:	mov	r1, #0
   17834:	mov	ip, #0
   17838:	mov	r7, #0
   1783c:	mov	r3, #0
   17840:	mov	r5, #0
   17844:	mov	r4, #0
   17848:	mov	r2, #0
   1784c:	ldr	pc, [r0, r6, lsl #2]
   17850:	andeq	r7, r1, ip, lsr #17
   17854:	andeq	r7, r1, r4, lsr #17
   17858:	muleq	r1, ip, r8
   1785c:	muleq	r1, r4, r8
   17860:	andeq	r7, r1, r8, lsl #17
   17864:	andeq	r7, r1, r8, ror r8
   17868:	andeq	r7, r1, r0, ror r8
   1786c:	andeq	r7, r1, r0, ror r8
   17870:	ldrb	r0, [r8, #22]
   17874:	lsl	ip, r0, #8
   17878:	ldrb	r0, [r8, #21]
   1787c:	mov	r7, r1
   17880:	orr	r0, ip, r0, lsl #16
   17884:	mov	r1, r0
   17888:	ldrb	r0, [r8, #20]
   1788c:	mov	r3, r7
   17890:	orr	r1, r1, r0, lsl #24
   17894:	ldrb	r0, [r8, #19]
   17898:	orr	r5, r0, r3
   1789c:	ldrb	r0, [r8, #18]
   178a0:	orr	r4, r5, r0, lsl #8
   178a4:	ldrb	r0, [r8, #17]
   178a8:	orr	r2, r4, r0, lsl #16
   178ac:	bic	r0, r1, #255	; 0xff
   178b0:	movw	r1, #29696	; 0x7400
   178b4:	movt	r1, #30051	; 0x7563
   178b8:	eor	r0, r0, r1
   178bc:	ldrb	r1, [r9]
   178c0:	orr	r1, r2, r1, lsl #24
   178c4:	movw	r2, #29810	; 0x7472
   178c8:	movt	r2, #25715	; 0x6473
   178cc:	eor	r1, r1, r2
   178d0:	orrs	r0, r0, r1
   178d4:	bne	1946c <main@@Base+0x3730>
   178d8:	ldr	r6, [sp, #36]	; 0x24
   178dc:	cmp	lr, #8
   178e0:	blt	19470 <main@@Base+0x3734>
   178e4:	ldrb	r0, [r8, #23]
   178e8:	cmp	r0, #34	; 0x22
   178ec:	bne	19470 <main@@Base+0x3734>
   178f0:	add	r1, r8, #24
   178f4:	sub	r0, r6, r1
   178f8:	cmp	r0, #2
   178fc:	blt	18bfc <main@@Base+0x2ec0>
   17900:	ldrb	r0, [r1]
   17904:	cmp	r0, #32
   17908:	bls	18bec <main@@Base+0x2eb0>
   1790c:	mov	r8, r1
   17910:	b	18c0c <main@@Base+0x2ed0>
   17914:	add	r7, r8, #16
   17918:	mov	r1, #8
   1791c:	mov	r2, #-268435456	; 0xf0000000
   17920:	sub	r0, r6, r7
   17924:	cmp	r0, #8
   17928:	movcc	r1, r0
   1792c:	add	r1, r2, r1, lsl #28
   17930:	asr	r1, r1, #28
   17934:	cmp	r1, #0
   17938:	blt	1e144 <main@@Base+0x8408>
   1793c:	ldrb	r1, [r7]
   17940:	cmp	r1, #115	; 0x73
   17944:	bne	1e144 <main@@Base+0x8408>
   17948:	cmp	r0, #2
   1794c:	blt	1e144 <main@@Base+0x8408>
   17950:	ldrb	r0, [r8, #17]
   17954:	cmp	r0, #34	; 0x22
   17958:	bne	1e144 <main@@Base+0x8408>
   1795c:	add	r1, r8, #18
   17960:	sub	r0, r6, r1
   17964:	cmp	r0, #2
   17968:	blt	19384 <main@@Base+0x3648>
   1796c:	ldrb	r0, [r1]
   17970:	cmp	r0, #32
   17974:	bls	19374 <main@@Base+0x3638>
   17978:	mov	r8, r1
   1797c:	b	19394 <main@@Base+0x3658>
   17980:	ldr	sl, [sp, #32]
   17984:	movw	r1, #28257	; 0x6e61
   17988:	movt	r1, #28001	; 0x6d61
   1798c:	teq	r0, r1
   17990:	bne	18ec8 <main@@Base+0x318c>
   17994:	cmp	r9, #5
   17998:	mov	r7, r8
   1799c:	blt	1add8 <main@@Base+0x509c>
   179a0:	ldrb	r0, [r8, #4]
   179a4:	mov	r7, r8
   179a8:	cmp	r0, #34	; 0x22
   179ac:	bne	1add8 <main@@Base+0x509c>
   179b0:	add	r1, r8, #5
   179b4:	sub	r0, r6, r1
   179b8:	cmp	r0, #2
   179bc:	blt	18c70 <main@@Base+0x2f34>
   179c0:	ldrb	r0, [r1]
   179c4:	cmp	r0, #32
   179c8:	bls	18c5c <main@@Base+0x2f20>
   179cc:	mov	r7, r1
   179d0:	b	18c80 <main@@Base+0x2f44>
   179d4:	and	r0, sl, #-16777216	; 0xff000000
   179d8:	eor	r0, r0, #1711276032	; 0x66000000
   179dc:	orrs	r0, r0, r1
   179e0:	bne	18ec4 <main@@Base+0x3188>
   179e4:	ldr	sl, [sp, #32]
   179e8:	cmp	r9, #6
   179ec:	mov	r7, r8
   179f0:	blt	1af38 <main@@Base+0x51fc>
   179f4:	ldrb	r0, [r8, #5]
   179f8:	mov	r7, r8
   179fc:	cmp	r0, #34	; 0x22
   17a00:	bne	1af38 <main@@Base+0x51fc>
   17a04:	add	r1, r8, #6
   17a08:	sub	r0, r6, r1
   17a0c:	cmp	r0, #2
   17a10:	blt	18ce4 <main@@Base+0x2fa8>
   17a14:	ldrb	r0, [r1]
   17a18:	cmp	r0, #32
   17a1c:	bls	18cd0 <main@@Base+0x2f94>
   17a20:	mov	r7, r1
   17a24:	b	18cf4 <main@@Base+0x2fb8>
   17a28:	movw	r1, #13407	; 0x345f
   17a2c:	ldr	sl, [sp, #32]
   17a30:	movt	r1, #30006	; 0x7536
   17a34:	eor	r1, r2, r1
   17a38:	orrs	r1, r0, r1
   17a3c:	beq	17b54 <main@@Base+0x1e18>
   17a40:	movw	r1, #12895	; 0x325f
   17a44:	movt	r1, #30003	; 0x7533
   17a48:	eor	r1, r2, r1
   17a4c:	orrs	r0, r0, r1
   17a50:	bne	19470 <main@@Base+0x3734>
   17a54:	cmp	ip, #9
   17a58:	blt	1c0b0 <main@@Base+0x6374>
   17a5c:	ldrb	r0, [r8, #16]
   17a60:	cmp	r0, #34	; 0x22
   17a64:	bne	1c0b0 <main@@Base+0x6374>
   17a68:	ldr	r4, [sp, #36]	; 0x24
   17a6c:	add	r1, r8, #17
   17a70:	sub	r0, r4, r1
   17a74:	cmp	r0, #2
   17a78:	blt	1a3b0 <main@@Base+0x4674>
   17a7c:	ldrb	r0, [r1]
   17a80:	cmp	r0, #32
   17a84:	bls	1a398 <main@@Base+0x465c>
   17a88:	ldr	r4, [sp, #36]	; 0x24
   17a8c:	mov	r6, r1
   17a90:	b	1a3c0 <main@@Base+0x4684>
   17a94:	and	r1, r2, #-16777216	; 0xff000000
   17a98:	teq	r1, #1728053248	; 0x67000000
   17a9c:	bne	1e144 <main@@Base+0x8408>
   17aa0:	cmp	r0, #2
   17aa4:	blt	1e144 <main@@Base+0x8408>
   17aa8:	ldrb	r0, [r8, #17]
   17aac:	cmp	r0, #34	; 0x22
   17ab0:	bne	1e144 <main@@Base+0x8408>
   17ab4:	add	r1, r8, #18
   17ab8:	sub	r0, r6, r1
   17abc:	cmp	r0, #2
   17ac0:	blt	1a60c <main@@Base+0x48d0>
   17ac4:	ldrb	r0, [r1]
   17ac8:	cmp	r0, #32
   17acc:	bls	1a5fc <main@@Base+0x48c0>
   17ad0:	mov	r8, r1
   17ad4:	b	1a61c <main@@Base+0x48e0>
   17ad8:	movw	r2, #24428	; 0x5f6c
   17adc:	lsr	r1, r1, #8
   17ae0:	movt	r2, #102	; 0x66
   17ae4:	eor	r2, r2, r0, lsr #8
   17ae8:	orr	r0, r1, r0, lsl #24
   17aec:	movw	r1, #26483	; 0x6773
   17af0:	movt	r1, #28526	; 0x6f6e
   17af4:	eor	r0, r0, r1
   17af8:	orrs	r0, r0, r2
   17afc:	bne	19468 <main@@Base+0x372c>
   17b00:	ldr	r6, [sp, #36]	; 0x24
   17b04:	ldr	sl, [sp, #32]
   17b08:	cmp	lr, #8
   17b0c:	blt	19470 <main@@Base+0x3734>
   17b10:	ldrb	r0, [r8, #15]
   17b14:	cmp	r0, #34	; 0x22
   17b18:	bne	19470 <main@@Base+0x3734>
   17b1c:	add	r1, r8, #16
   17b20:	sub	r0, r6, r1
   17b24:	cmp	r0, #2
   17b28:	blt	1a9a4 <main@@Base+0x4c68>
   17b2c:	ldrb	r0, [r1]
   17b30:	cmp	r0, #32
   17b34:	bls	1a994 <main@@Base+0x4c58>
   17b38:	mov	r8, r1
   17b3c:	b	1a9b4 <main@@Base+0x4c78>
   17b40:	cmp	r2, #1
   17b44:	mov	r1, #0
   17b48:	mov	r2, #0
   17b4c:	beq	16cd0 <main@@Base+0xf94>
   17b50:	b	1e144 <main@@Base+0x8408>
   17b54:	cmp	ip, #9
   17b58:	blt	1c284 <main@@Base+0x6548>
   17b5c:	ldrb	r0, [r8, #16]
   17b60:	cmp	r0, #34	; 0x22
   17b64:	bne	1c284 <main@@Base+0x6548>
   17b68:	ldr	r4, [sp, #36]	; 0x24
   17b6c:	add	r1, r8, #17
   17b70:	sub	r0, r4, r1
   17b74:	cmp	r0, #2
   17b78:	blt	1a430 <main@@Base+0x46f4>
   17b7c:	ldrb	r0, [r1]
   17b80:	cmp	r0, #32
   17b84:	bls	1a418 <main@@Base+0x46dc>
   17b88:	ldr	r4, [sp, #36]	; 0x24
   17b8c:	mov	r6, r1
   17b90:	b	1a440 <main@@Base+0x4704>
   17b94:	cmp	r2, #1
   17b98:	mov	r1, #0
   17b9c:	mov	r2, #0
   17ba0:	beq	17400 <main@@Base+0x16c4>
   17ba4:	b	1e144 <main@@Base+0x8408>
   17ba8:	bne	17bbc <main@@Base+0x1e80>
   17bac:	mov	r7, r8
   17bb0:	ldrb	r0, [r7, #8]!
   17bb4:	cmp	r0, #32
   17bb8:	bhi	17bcc <main@@Base+0x1e90>
   17bbc:	mov	r0, sl
   17bc0:	mov	r2, r6
   17bc4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17bc8:	mov	r7, r0
   17bcc:	cmp	r7, r6
   17bd0:	beq	17c04 <main@@Base+0x1ec8>
   17bd4:	ldrb	r0, [r7]
   17bd8:	cmp	r0, #58	; 0x3a
   17bdc:	bne	17c04 <main@@Base+0x1ec8>
   17be0:	add	r1, r7, #1
   17be4:	sub	r0, r6, r1
   17be8:	cmp	r0, #2
   17bec:	blt	17f58 <main@@Base+0x221c>
   17bf0:	ldrb	r0, [r1]
   17bf4:	cmp	r0, #32
   17bf8:	bls	17f48 <main@@Base+0x220c>
   17bfc:	mov	r7, r1
   17c00:	b	17f68 <main@@Base+0x222c>
   17c04:	mov	r0, sl
   17c08:	mov	r1, r7
   17c0c:	mov	r2, r6
   17c10:	mov	r3, #4
   17c14:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17c18:	b	17f64 <main@@Base+0x2228>
   17c1c:	bne	17c30 <main@@Base+0x1ef4>
   17c20:	mov	r9, r8
   17c24:	ldrb	r0, [r9, #7]!
   17c28:	cmp	r0, #32
   17c2c:	bhi	17c40 <main@@Base+0x1f04>
   17c30:	ldr	r0, [sp, #32]
   17c34:	mov	r2, r6
   17c38:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17c3c:	mov	r9, r0
   17c40:	cmp	r9, r6
   17c44:	beq	17c78 <main@@Base+0x1f3c>
   17c48:	ldrb	r0, [r9]
   17c4c:	cmp	r0, #58	; 0x3a
   17c50:	bne	17c78 <main@@Base+0x1f3c>
   17c54:	add	r1, r9, #1
   17c58:	sub	r0, r6, r1
   17c5c:	cmp	r0, #2
   17c60:	blt	18018 <main@@Base+0x22dc>
   17c64:	ldrb	r0, [r1]
   17c68:	cmp	r0, #32
   17c6c:	bls	18008 <main@@Base+0x22cc>
   17c70:	mov	r9, r1
   17c74:	b	18028 <main@@Base+0x22ec>
   17c78:	ldr	r0, [sp, #32]
   17c7c:	mov	r1, r9
   17c80:	mov	r2, r6
   17c84:	mov	r3, #4
   17c88:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17c8c:	b	18024 <main@@Base+0x22e8>
   17c90:	bne	17ca4 <main@@Base+0x1f68>
   17c94:	mov	r1, r8
   17c98:	ldrb	r0, [r1, #7]!
   17c9c:	cmp	r0, #32
   17ca0:	bhi	17cb8 <main@@Base+0x1f7c>
   17ca4:	mov	r1, r2
   17ca8:	mov	r0, sl
   17cac:	mov	r2, r6
   17cb0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17cb4:	mov	r1, r0
   17cb8:	cmp	r1, r6
   17cbc:	beq	17cf0 <main@@Base+0x1fb4>
   17cc0:	ldrb	r0, [r1]
   17cc4:	cmp	r0, #58	; 0x3a
   17cc8:	bne	17cf0 <main@@Base+0x1fb4>
   17ccc:	add	r2, r1, #1
   17cd0:	sub	r0, r6, r2
   17cd4:	cmp	r0, #2
   17cd8:	blt	184a4 <main@@Base+0x2768>
   17cdc:	ldrb	r0, [r2]
   17ce0:	cmp	r0, #32
   17ce4:	bls	18494 <main@@Base+0x2758>
   17ce8:	mov	r1, r2
   17cec:	b	184b8 <main@@Base+0x277c>
   17cf0:	mov	r0, sl
   17cf4:	mov	r2, r6
   17cf8:	mov	r3, #4
   17cfc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17d00:	b	184b4 <main@@Base+0x2778>
   17d04:	bne	17d18 <main@@Base+0x1fdc>
   17d08:	mov	r7, r8
   17d0c:	ldrb	r0, [r7, #7]!
   17d10:	cmp	r0, #32
   17d14:	bhi	17d28 <main@@Base+0x1fec>
   17d18:	mov	r0, sl
   17d1c:	mov	r2, r6
   17d20:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17d24:	mov	r7, r0
   17d28:	cmp	r7, r6
   17d2c:	beq	17d60 <main@@Base+0x2024>
   17d30:	ldrb	r0, [r7]
   17d34:	cmp	r0, #58	; 0x3a
   17d38:	bne	17d60 <main@@Base+0x2024>
   17d3c:	add	r1, r7, #1
   17d40:	sub	r0, r6, r1
   17d44:	cmp	r0, #2
   17d48:	blt	184fc <main@@Base+0x27c0>
   17d4c:	ldrb	r0, [r1]
   17d50:	cmp	r0, #32
   17d54:	bls	184ec <main@@Base+0x27b0>
   17d58:	mov	r7, r1
   17d5c:	b	1850c <main@@Base+0x27d0>
   17d60:	mov	r0, sl
   17d64:	mov	r1, r7
   17d68:	mov	r2, r6
   17d6c:	mov	r3, #4
   17d70:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17d74:	b	18508 <main@@Base+0x27cc>
   17d78:	bne	17d8c <main@@Base+0x2050>
   17d7c:	mov	r1, r8
   17d80:	ldrb	r0, [r1, #6]!
   17d84:	cmp	r0, #32
   17d88:	bhi	17da0 <main@@Base+0x2064>
   17d8c:	mov	r1, r2
   17d90:	mov	r0, sl
   17d94:	mov	r2, r6
   17d98:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17d9c:	mov	r1, r0
   17da0:	cmp	r1, r6
   17da4:	beq	17dd8 <main@@Base+0x209c>
   17da8:	ldrb	r0, [r1]
   17dac:	cmp	r0, #58	; 0x3a
   17db0:	bne	17dd8 <main@@Base+0x209c>
   17db4:	add	r2, r1, #1
   17db8:	sub	r0, r6, r2
   17dbc:	cmp	r0, #2
   17dc0:	blt	18654 <main@@Base+0x2918>
   17dc4:	ldrb	r0, [r2]
   17dc8:	cmp	r0, #32
   17dcc:	bls	18644 <main@@Base+0x2908>
   17dd0:	mov	r1, r2
   17dd4:	b	18668 <main@@Base+0x292c>
   17dd8:	mov	r0, sl
   17ddc:	mov	r2, r6
   17de0:	mov	r3, #4
   17de4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17de8:	b	18664 <main@@Base+0x2928>
   17dec:	bne	17e00 <main@@Base+0x20c4>
   17df0:	mov	r9, r8
   17df4:	ldrb	r0, [r9, #6]!
   17df8:	cmp	r0, #32
   17dfc:	bhi	17e10 <main@@Base+0x20d4>
   17e00:	mov	r0, sl
   17e04:	mov	r2, r6
   17e08:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17e0c:	mov	r9, r0
   17e10:	cmp	r9, r6
   17e14:	beq	17e48 <main@@Base+0x210c>
   17e18:	ldrb	r0, [r9]
   17e1c:	cmp	r0, #58	; 0x3a
   17e20:	bne	17e48 <main@@Base+0x210c>
   17e24:	add	r1, r9, #1
   17e28:	sub	r0, r6, r1
   17e2c:	cmp	r0, #2
   17e30:	blt	186ac <main@@Base+0x2970>
   17e34:	ldrb	r0, [r1]
   17e38:	cmp	r0, #32
   17e3c:	bls	1869c <main@@Base+0x2960>
   17e40:	mov	r9, r1
   17e44:	b	186bc <main@@Base+0x2980>
   17e48:	mov	r0, sl
   17e4c:	mov	r1, r9
   17e50:	mov	r2, r6
   17e54:	mov	r3, #4
   17e58:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17e5c:	b	186b8 <main@@Base+0x297c>
   17e60:	bne	17e74 <main@@Base+0x2138>
   17e64:	mov	r1, r8
   17e68:	ldrb	r0, [r1, #6]!
   17e6c:	cmp	r0, #32
   17e70:	bhi	17e88 <main@@Base+0x214c>
   17e74:	ldr	r0, [sp, #32]
   17e78:	mov	r1, r2
   17e7c:	mov	r2, r6
   17e80:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17e84:	mov	r1, r0
   17e88:	cmp	r1, r6
   17e8c:	beq	17ec0 <main@@Base+0x2184>
   17e90:	ldrb	r0, [r1]
   17e94:	cmp	r0, #58	; 0x3a
   17e98:	bne	17ec0 <main@@Base+0x2184>
   17e9c:	add	r2, r1, #1
   17ea0:	sub	r0, r6, r2
   17ea4:	cmp	r0, #2
   17ea8:	blt	189d8 <main@@Base+0x2c9c>
   17eac:	ldrb	r0, [r2]
   17eb0:	cmp	r0, #32
   17eb4:	bls	189c8 <main@@Base+0x2c8c>
   17eb8:	mov	r1, r2
   17ebc:	b	189ec <main@@Base+0x2cb0>
   17ec0:	ldr	r0, [sp, #32]
   17ec4:	mov	r2, r6
   17ec8:	mov	r3, #4
   17ecc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17ed0:	b	189e8 <main@@Base+0x2cac>
   17ed4:	bne	17ee8 <main@@Base+0x21ac>
   17ed8:	mov	r7, r8
   17edc:	ldrb	r0, [r7, #10]!
   17ee0:	cmp	r0, #32
   17ee4:	bhi	17ef8 <main@@Base+0x21bc>
   17ee8:	mov	r0, sl
   17eec:	mov	r2, r6
   17ef0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17ef4:	mov	r7, r0
   17ef8:	cmp	r7, r6
   17efc:	beq	17f30 <main@@Base+0x21f4>
   17f00:	ldrb	r0, [r7]
   17f04:	cmp	r0, #58	; 0x3a
   17f08:	bne	17f30 <main@@Base+0x21f4>
   17f0c:	add	r1, r7, #1
   17f10:	sub	r0, r6, r1
   17f14:	cmp	r0, #2
   17f18:	blt	19150 <main@@Base+0x3414>
   17f1c:	ldrb	r0, [r1]
   17f20:	cmp	r0, #32
   17f24:	bls	19140 <main@@Base+0x3404>
   17f28:	mov	r7, r1
   17f2c:	b	19160 <main@@Base+0x3424>
   17f30:	mov	r0, sl
   17f34:	mov	r1, r7
   17f38:	mov	r2, r6
   17f3c:	mov	r3, #4
   17f40:	bl	316cc <flatcc_json_parser_set_error@@Base>
   17f44:	b	1915c <main@@Base+0x3420>
   17f48:	bne	17f58 <main@@Base+0x221c>
   17f4c:	ldrb	r0, [r7, #2]!
   17f50:	cmp	r0, #32
   17f54:	bhi	17f68 <main@@Base+0x222c>
   17f58:	mov	r0, sl
   17f5c:	mov	r2, r6
   17f60:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   17f64:	mov	r7, r0
   17f68:	cmp	r8, r7
   17f6c:	beq	18ec8 <main@@Base+0x318c>
   17f70:	mov	r0, #0
   17f74:	mov	r1, r7
   17f78:	mov	r2, r6
   17f7c:	sub	r3, fp, #56	; 0x38
   17f80:	str	r0, [fp, #-56]	; 0xffffffc8
   17f84:	mov	r0, sl
   17f88:	bl	33390 <flatcc_json_parser_float@@Base>
   17f8c:	mov	r9, r0
   17f90:	cmp	r7, r0
   17f94:	bne	17fc8 <main@@Base+0x228c>
   17f98:	movw	r3, #33016	; 0x80f8
   17f9c:	sub	r0, fp, #56	; 0x38
   17fa0:	mov	r1, r7
   17fa4:	mov	r2, r6
   17fa8:	str	r0, [sp]
   17fac:	mov	r0, sl
   17fb0:	movt	r3, #5
   17fb4:	bl	23194 <main@@Base+0xd458>
   17fb8:	mov	r9, r0
   17fbc:	cmp	r0, r7
   17fc0:	cmpne	r9, r6
   17fc4:	beq	1f334 <main@@Base+0x95f8>
   17fc8:	vldr	s0, [fp, #-56]	; 0xffffffc8
   17fcc:	vcmp.f32	s0, #0.0
   17fd0:	vmrs	APSR_nzcv, fpscr
   17fd4:	bne	17fe4 <main@@Base+0x22a8>
   17fd8:	ldrb	r0, [sl, #8]
   17fdc:	tst	r0, #2
   17fe0:	beq	1e158 <main@@Base+0x841c>
   17fe4:	ldr	r0, [sl]
   17fe8:	mov	r1, #27
   17fec:	mov	r2, #4
   17ff0:	mov	r3, #4
   17ff4:	bl	2ea78 <flatcc_builder_table_add@@Base>
   17ff8:	cmp	r0, #0
   17ffc:	beq	1f334 <main@@Base+0x95f8>
   18000:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18004:	b	18f18 <main@@Base+0x31dc>
   18008:	bne	18018 <main@@Base+0x22dc>
   1800c:	ldrb	r0, [r9, #2]!
   18010:	cmp	r0, #32
   18014:	bhi	18028 <main@@Base+0x22ec>
   18018:	ldr	r0, [sp, #32]
   1801c:	mov	r2, r6
   18020:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18024:	mov	r9, r0
   18028:	cmp	r8, r9
   1802c:	beq	18e40 <main@@Base+0x3104>
   18030:	ldr	sl, [sp, #32]
   18034:	mov	r1, #4
   18038:	mov	r2, #2
   1803c:	mvn	r3, #-1073741824	; 0xc0000000
   18040:	ldr	r0, [sl]
   18044:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   18048:	cmp	r0, #0
   1804c:	bne	1f334 <main@@Base+0x95f8>
   18050:	cmp	r9, r6
   18054:	beq	18088 <main@@Base+0x234c>
   18058:	ldrb	r0, [r9]
   1805c:	cmp	r0, #91	; 0x5b
   18060:	bne	18088 <main@@Base+0x234c>
   18064:	add	r1, r9, #1
   18068:	sub	r0, r6, r1
   1806c:	cmp	r0, #2
   18070:	blt	180d0 <main@@Base+0x2394>
   18074:	ldrb	r0, [r1]
   18078:	cmp	r0, #32
   1807c:	bls	180c0 <main@@Base+0x2384>
   18080:	mov	r9, r1
   18084:	b	180e0 <main@@Base+0x23a4>
   18088:	mov	r0, sl
   1808c:	mov	r1, r9
   18090:	mov	r2, r6
   18094:	mov	r3, #22
   18098:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1809c:	mov	r9, r0
   180a0:	ldr	r0, [sl]
   180a4:	bl	2e448 <flatcc_builder_end_vector@@Base>
   180a8:	cmp	r0, #0
   180ac:	str	r0, [sp, #44]	; 0x2c
   180b0:	beq	1f334 <main@@Base+0x95f8>
   180b4:	ldr	r0, [sl]
   180b8:	mov	r1, #9
   180bc:	b	18f08 <main@@Base+0x31cc>
   180c0:	bne	180d0 <main@@Base+0x2394>
   180c4:	ldrb	r0, [r9, #2]!
   180c8:	cmp	r0, #32
   180cc:	bhi	180e0 <main@@Base+0x23a4>
   180d0:	mov	r0, sl
   180d4:	mov	r2, r6
   180d8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   180dc:	mov	r9, r0
   180e0:	cmp	r9, r6
   180e4:	mov	r8, r6
   180e8:	beq	1812c <main@@Base+0x23f0>
   180ec:	ldrb	r0, [r9]
   180f0:	cmp	r0, #93	; 0x5d
   180f4:	bne	18128 <main@@Base+0x23ec>
   180f8:	add	r1, r9, #1
   180fc:	sub	r0, r6, r1
   18100:	cmp	r0, #2
   18104:	blt	18afc <main@@Base+0x2dc0>
   18108:	ldrb	r0, [r1]
   1810c:	cmp	r0, #32
   18110:	bhi	18238 <main@@Base+0x24fc>
   18114:	bne	18afc <main@@Base+0x2dc0>
   18118:	ldrb	r0, [r9, #2]!
   1811c:	cmp	r0, #32
   18120:	bhi	180a0 <main@@Base+0x2364>
   18124:	b	18afc <main@@Base+0x2dc0>
   18128:	mov	r8, r9
   1812c:	ldr	r0, [sl]
   18130:	mov	r1, #1
   18134:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   18138:	mov	r3, r0
   1813c:	cmp	r0, #0
   18140:	beq	1662c <main@@Base+0x8f0>
   18144:	mov	r0, sl
   18148:	mov	r1, r8
   1814c:	mov	r2, r6
   18150:	bl	21658 <main@@Base+0xb91c>
   18154:	mov	r1, r0
   18158:	sub	r0, r6, r0
   1815c:	cmp	r0, #2
   18160:	blt	1818c <main@@Base+0x2450>
   18164:	ldrb	r0, [r1]
   18168:	cmp	r0, #32
   1816c:	bls	18178 <main@@Base+0x243c>
   18170:	mov	r8, r1
   18174:	b	1819c <main@@Base+0x2460>
   18178:	bne	1818c <main@@Base+0x2450>
   1817c:	mov	r8, r1
   18180:	ldrb	r0, [r8, #1]!
   18184:	cmp	r0, #32
   18188:	bhi	1819c <main@@Base+0x2460>
   1818c:	mov	r0, sl
   18190:	mov	r2, r6
   18194:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18198:	mov	r8, r0
   1819c:	cmp	r8, r6
   181a0:	beq	1820c <main@@Base+0x24d0>
   181a4:	ldrb	r0, [r8]
   181a8:	cmp	r0, #44	; 0x2c
   181ac:	bne	18214 <main@@Base+0x24d8>
   181b0:	add	r1, r8, #1
   181b4:	sub	r0, r6, r1
   181b8:	cmp	r0, #2
   181bc:	blt	181e4 <main@@Base+0x24a8>
   181c0:	ldrb	r0, [r1]
   181c4:	cmp	r0, #32
   181c8:	bls	181d4 <main@@Base+0x2498>
   181cc:	mov	r8, r1
   181d0:	b	181f4 <main@@Base+0x24b8>
   181d4:	bne	181e4 <main@@Base+0x24a8>
   181d8:	ldrb	r0, [r8, #2]!
   181dc:	cmp	r0, #32
   181e0:	bhi	181f4 <main@@Base+0x24b8>
   181e4:	mov	r0, sl
   181e8:	mov	r2, r6
   181ec:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   181f0:	mov	r8, r0
   181f4:	cmp	r8, r6
   181f8:	beq	18240 <main@@Base+0x2504>
   181fc:	ldrb	r0, [r8]
   18200:	cmp	r0, #93	; 0x5d
   18204:	bne	1812c <main@@Base+0x23f0>
   18208:	b	1821c <main@@Base+0x24e0>
   1820c:	mov	r9, r6
   18210:	b	180a0 <main@@Base+0x2364>
   18214:	cmp	r0, #93	; 0x5d
   18218:	bne	18630 <main@@Base+0x28f4>
   1821c:	add	r1, r8, #1
   18220:	sub	r0, r6, r1
   18224:	cmp	r0, #2
   18228:	blt	18afc <main@@Base+0x2dc0>
   1822c:	ldrb	r0, [r1]
   18230:	cmp	r0, #32
   18234:	bls	18ae8 <main@@Base+0x2dac>
   18238:	mov	r9, r1
   1823c:	b	180a0 <main@@Base+0x2364>
   18240:	mov	r0, sl
   18244:	mov	r1, r6
   18248:	b	18638 <main@@Base+0x28fc>
   1824c:	bne	1825c <main@@Base+0x2520>
   18250:	ldrb	r0, [r8, #18]!
   18254:	cmp	r0, #32
   18258:	bhi	1826c <main@@Base+0x2530>
   1825c:	mov	r0, r5
   18260:	mov	r2, r4
   18264:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18268:	mov	r8, r0
   1826c:	cmp	r8, r4
   18270:	beq	182a4 <main@@Base+0x2568>
   18274:	ldrb	r0, [r8]
   18278:	cmp	r0, #58	; 0x3a
   1827c:	bne	182a4 <main@@Base+0x2568>
   18280:	add	r1, r8, #1
   18284:	sub	r0, r4, r1
   18288:	cmp	r0, #2
   1828c:	blt	193f4 <main@@Base+0x36b8>
   18290:	ldrb	r0, [r1]
   18294:	cmp	r0, #32
   18298:	bls	193e4 <main@@Base+0x36a8>
   1829c:	mov	r8, r1
   182a0:	b	19404 <main@@Base+0x36c8>
   182a4:	mov	r0, r5
   182a8:	mov	r1, r8
   182ac:	mov	r2, r4
   182b0:	mov	r3, #4
   182b4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   182b8:	b	19400 <main@@Base+0x36c4>
   182bc:	bne	182d0 <main@@Base+0x2594>
   182c0:	mov	r7, r8
   182c4:	ldrb	r0, [r7, #4]!
   182c8:	cmp	r0, #32
   182cc:	bhi	182e0 <main@@Base+0x25a4>
   182d0:	mov	r0, sl
   182d4:	mov	r2, r6
   182d8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   182dc:	mov	r7, r0
   182e0:	cmp	r7, r6
   182e4:	beq	18318 <main@@Base+0x25dc>
   182e8:	ldrb	r0, [r7]
   182ec:	cmp	r0, #58	; 0x3a
   182f0:	bne	18318 <main@@Base+0x25dc>
   182f4:	add	r1, r7, #1
   182f8:	sub	r0, r6, r1
   182fc:	cmp	r0, #2
   18300:	blt	195a4 <main@@Base+0x3868>
   18304:	ldrb	r0, [r1]
   18308:	cmp	r0, #32
   1830c:	bls	19594 <main@@Base+0x3858>
   18310:	mov	r7, r1
   18314:	b	195b4 <main@@Base+0x3878>
   18318:	mov	r0, sl
   1831c:	mov	r1, r7
   18320:	mov	r2, r6
   18324:	mov	r3, #4
   18328:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1832c:	b	195b0 <main@@Base+0x3874>
   18330:	bne	18344 <main@@Base+0x2608>
   18334:	mov	r9, r8
   18338:	ldrb	r0, [r9, #5]!
   1833c:	cmp	r0, #32
   18340:	bhi	18354 <main@@Base+0x2618>
   18344:	mov	r0, sl
   18348:	mov	r2, r6
   1834c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18350:	mov	r9, r0
   18354:	cmp	r9, r6
   18358:	beq	1838c <main@@Base+0x2650>
   1835c:	ldrb	r0, [r9]
   18360:	cmp	r0, #58	; 0x3a
   18364:	bne	1838c <main@@Base+0x2650>
   18368:	add	r1, r9, #1
   1836c:	sub	r0, r6, r1
   18370:	cmp	r0, #2
   18374:	blt	19700 <main@@Base+0x39c4>
   18378:	ldrb	r0, [r1]
   1837c:	cmp	r0, #32
   18380:	bls	196f0 <main@@Base+0x39b4>
   18384:	mov	r9, r1
   18388:	b	19710 <main@@Base+0x39d4>
   1838c:	mov	r0, sl
   18390:	mov	r1, r9
   18394:	mov	r2, r6
   18398:	mov	r3, #4
   1839c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   183a0:	b	1970c <main@@Base+0x39d0>
   183a4:	bne	183b8 <main@@Base+0x267c>
   183a8:	mov	r7, r8
   183ac:	ldrb	r0, [r7, #8]!
   183b0:	cmp	r0, #32
   183b4:	bhi	183c8 <main@@Base+0x268c>
   183b8:	mov	r0, sl
   183bc:	mov	r2, r6
   183c0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   183c4:	mov	r7, r0
   183c8:	cmp	r7, r6
   183cc:	beq	18400 <main@@Base+0x26c4>
   183d0:	ldrb	r0, [r7]
   183d4:	cmp	r0, #58	; 0x3a
   183d8:	bne	18400 <main@@Base+0x26c4>
   183dc:	add	r1, r7, #1
   183e0:	sub	r0, r6, r1
   183e4:	cmp	r0, #2
   183e8:	blt	1a300 <main@@Base+0x45c4>
   183ec:	ldrb	r0, [r1]
   183f0:	cmp	r0, #32
   183f4:	bls	1a2f0 <main@@Base+0x45b4>
   183f8:	mov	r7, r1
   183fc:	b	1a310 <main@@Base+0x45d4>
   18400:	mov	r0, sl
   18404:	mov	r1, r7
   18408:	mov	r2, r6
   1840c:	mov	r3, #4
   18410:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18414:	b	1a30c <main@@Base+0x45d0>
   18418:	ldr	r4, [sp, #36]	; 0x24
   1841c:	bne	18430 <main@@Base+0x26f4>
   18420:	mov	r6, r8
   18424:	ldrb	r0, [r6, #18]!
   18428:	cmp	r0, #32
   1842c:	bhi	18440 <main@@Base+0x2704>
   18430:	mov	r0, sl
   18434:	mov	r2, r4
   18438:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1843c:	mov	r6, r0
   18440:	cmp	r6, r4
   18444:	beq	1847c <main@@Base+0x2740>
   18448:	ldrb	r0, [r6]
   1844c:	cmp	r0, #58	; 0x3a
   18450:	bne	1847c <main@@Base+0x2740>
   18454:	ldr	r0, [sp, #36]	; 0x24
   18458:	add	r1, r6, #1
   1845c:	sub	r0, r0, r1
   18460:	cmp	r0, #2
   18464:	blt	1a4bc <main@@Base+0x4780>
   18468:	ldrb	r0, [r1]
   1846c:	cmp	r0, #32
   18470:	bls	1a4ac <main@@Base+0x4770>
   18474:	mov	r6, r1
   18478:	b	1a4cc <main@@Base+0x4790>
   1847c:	ldr	r2, [sp, #36]	; 0x24
   18480:	mov	r0, sl
   18484:	mov	r1, r6
   18488:	mov	r3, #4
   1848c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18490:	b	1a4c8 <main@@Base+0x478c>
   18494:	bne	184a4 <main@@Base+0x2768>
   18498:	ldrb	r0, [r1, #2]!
   1849c:	cmp	r0, #32
   184a0:	bhi	184b8 <main@@Base+0x277c>
   184a4:	mov	r1, r2
   184a8:	mov	r0, sl
   184ac:	mov	r2, r6
   184b0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   184b4:	mov	r1, r0
   184b8:	cmp	r8, r1
   184bc:	beq	18ec8 <main@@Base+0x318c>
   184c0:	mov	r0, sl
   184c4:	mov	r2, r6
   184c8:	add	r3, sp, #44	; 0x2c
   184cc:	bl	165ec <main@@Base+0x8b0>
   184d0:	mov	r9, r0
   184d4:	ldr	r0, [sp, #44]	; 0x2c
   184d8:	cmp	r0, #0
   184dc:	beq	1f334 <main@@Base+0x95f8>
   184e0:	ldr	r0, [sl]
   184e4:	mov	r1, #12
   184e8:	b	18f08 <main@@Base+0x31cc>
   184ec:	bne	184fc <main@@Base+0x27c0>
   184f0:	ldrb	r0, [r7, #2]!
   184f4:	cmp	r0, #32
   184f8:	bhi	1850c <main@@Base+0x27d0>
   184fc:	mov	r0, sl
   18500:	mov	r2, r6
   18504:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18508:	mov	r7, r0
   1850c:	cmp	r8, r7
   18510:	beq	18ec8 <main@@Base+0x318c>
   18514:	mov	r4, #0
   18518:	cmp	r7, r6
   1851c:	str	r4, [fp, #-52]	; 0xffffffcc
   18520:	str	r4, [fp, #-56]	; 0xffffffc8
   18524:	strb	r4, [sp, #60]	; 0x3c
   18528:	str	r4, [sp, #48]	; 0x30
   1852c:	beq	1858c <main@@Base+0x2850>
   18530:	sub	r0, fp, #56	; 0x38
   18534:	mov	r1, r7
   18538:	mov	r2, r6
   1853c:	add	r3, sp, #48	; 0x30
   18540:	str	r0, [sp]
   18544:	mov	r0, sl
   18548:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1854c:	cmp	r0, r7
   18550:	beq	18594 <main@@Base+0x2858>
   18554:	ldr	r2, [sp, #48]	; 0x30
   18558:	mov	r9, r0
   1855c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18560:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18564:	cmp	r2, #0
   18568:	beq	1859c <main@@Base+0x2860>
   1856c:	subs	r2, r0, #129	; 0x81
   18570:	sbcs	r1, r1, #0
   18574:	bcc	185c4 <main@@Base+0x2888>
   18578:	mov	r0, sl
   1857c:	mov	r1, r9
   18580:	mov	r2, r6
   18584:	mov	r3, #8
   18588:	b	185b8 <main@@Base+0x287c>
   1858c:	mov	r9, r6
   18590:	b	185d4 <main@@Base+0x2898>
   18594:	mov	r9, r7
   18598:	b	185d4 <main@@Base+0x2898>
   1859c:	subs	r2, r0, #128	; 0x80
   185a0:	sbcs	r1, r1, #0
   185a4:	bcc	185cc <main@@Base+0x2890>
   185a8:	mov	r0, sl
   185ac:	mov	r1, r9
   185b0:	mov	r2, r6
   185b4:	mov	r3, #7
   185b8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   185bc:	mov	r9, r0
   185c0:	b	185d4 <main@@Base+0x2898>
   185c4:	rsb	r4, r0, #0
   185c8:	b	185d0 <main@@Base+0x2894>
   185cc:	mov	r4, r0
   185d0:	strb	r4, [sp, #60]	; 0x3c
   185d4:	cmp	r7, r9
   185d8:	bne	18610 <main@@Base+0x28d4>
   185dc:	movw	r3, #32888	; 0x8078
   185e0:	add	r0, sp, #60	; 0x3c
   185e4:	mov	r1, r7
   185e8:	mov	r2, r6
   185ec:	str	r0, [sp]
   185f0:	mov	r0, sl
   185f4:	movt	r3, #5
   185f8:	bl	210d0 <main@@Base+0xb394>
   185fc:	mov	r9, r0
   18600:	cmp	r0, r7
   18604:	cmpne	r9, r6
   18608:	beq	1f334 <main@@Base+0x95f8>
   1860c:	ldrb	r4, [sp, #60]	; 0x3c
   18610:	uxtb	r0, r4
   18614:	cmp	r0, #8
   18618:	ldrbeq	r0, [sl, #8]
   1861c:	tsteq	r0, #2
   18620:	beq	1e158 <main@@Base+0x841c>
   18624:	ldr	r0, [sl]
   18628:	mov	r1, #6
   1862c:	b	192c0 <main@@Base+0x3584>
   18630:	mov	r0, sl
   18634:	mov	r1, r8
   18638:	mov	r2, r6
   1863c:	mov	r3, #9
   18640:	b	18098 <main@@Base+0x235c>
   18644:	bne	18654 <main@@Base+0x2918>
   18648:	ldrb	r0, [r1, #2]!
   1864c:	cmp	r0, #32
   18650:	bhi	18668 <main@@Base+0x292c>
   18654:	mov	r1, r2
   18658:	mov	r0, sl
   1865c:	mov	r2, r6
   18660:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18664:	mov	r1, r0
   18668:	cmp	r8, r1
   1866c:	beq	18ec8 <main@@Base+0x318c>
   18670:	mov	r0, sl
   18674:	mov	r2, r6
   18678:	add	r3, sp, #44	; 0x2c
   1867c:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   18680:	mov	r9, r0
   18684:	ldr	r0, [sp, #44]	; 0x2c
   18688:	cmp	r0, #0
   1868c:	beq	1f334 <main@@Base+0x95f8>
   18690:	ldr	r0, [sl]
   18694:	mov	r1, #3
   18698:	b	18f08 <main@@Base+0x31cc>
   1869c:	bne	186ac <main@@Base+0x2970>
   186a0:	ldrb	r0, [r9, #2]!
   186a4:	cmp	r0, #32
   186a8:	bhi	186bc <main@@Base+0x2980>
   186ac:	mov	r0, sl
   186b0:	mov	r2, r6
   186b4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   186b8:	mov	r9, r0
   186bc:	cmp	r8, r9
   186c0:	beq	18ec8 <main@@Base+0x318c>
   186c4:	ldr	r0, [sl]
   186c8:	mov	r1, #1
   186cc:	mov	r2, #1
   186d0:	mvn	r3, #0
   186d4:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   186d8:	cmp	r0, #0
   186dc:	bne	1f334 <main@@Base+0x95f8>
   186e0:	cmp	r9, r6
   186e4:	beq	18718 <main@@Base+0x29dc>
   186e8:	ldrb	r0, [r9]
   186ec:	cmp	r0, #91	; 0x5b
   186f0:	bne	18718 <main@@Base+0x29dc>
   186f4:	add	r1, r9, #1
   186f8:	sub	r0, r6, r1
   186fc:	cmp	r0, #2
   18700:	blt	18760 <main@@Base+0x2a24>
   18704:	ldrb	r0, [r1]
   18708:	cmp	r0, #32
   1870c:	bls	18750 <main@@Base+0x2a14>
   18710:	mov	r9, r1
   18714:	b	18770 <main@@Base+0x2a34>
   18718:	mov	r0, sl
   1871c:	mov	r1, r9
   18720:	mov	r2, r6
   18724:	mov	r3, #22
   18728:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1872c:	mov	r9, r0
   18730:	ldr	r0, [sl]
   18734:	bl	2e448 <flatcc_builder_end_vector@@Base>
   18738:	cmp	r0, #0
   1873c:	str	r0, [sp, #44]	; 0x2c
   18740:	beq	1f334 <main@@Base+0x95f8>
   18744:	ldr	r0, [sl]
   18748:	mov	r1, #30
   1874c:	b	18f08 <main@@Base+0x31cc>
   18750:	bne	18760 <main@@Base+0x2a24>
   18754:	ldrb	r0, [r9, #2]!
   18758:	cmp	r0, #32
   1875c:	bhi	18770 <main@@Base+0x2a34>
   18760:	mov	r0, sl
   18764:	mov	r2, r6
   18768:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1876c:	mov	r9, r0
   18770:	cmp	r9, r6
   18774:	mov	r5, r6
   18778:	beq	1878c <main@@Base+0x2a50>
   1877c:	ldrb	r0, [r9]
   18780:	cmp	r0, #93	; 0x5d
   18784:	beq	18978 <main@@Base+0x2c3c>
   18788:	mov	r5, r9
   1878c:	mov	r0, #0
   18790:	mov	r1, #1
   18794:	strb	r0, [sp, #60]	; 0x3c
   18798:	ldr	r0, [sl]
   1879c:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   187a0:	cmp	r0, #0
   187a4:	beq	1f330 <main@@Base+0x95f4>
   187a8:	mov	r4, r0
   187ac:	mov	r9, r5
   187b0:	mov	r5, #0
   187b4:	cmp	r9, r6
   187b8:	str	r5, [fp, #-52]	; 0xffffffcc
   187bc:	str	r5, [fp, #-56]	; 0xffffffc8
   187c0:	strb	r5, [sp, #60]	; 0x3c
   187c4:	str	r5, [sp, #48]	; 0x30
   187c8:	beq	18810 <main@@Base+0x2ad4>
   187cc:	sub	r0, fp, #56	; 0x38
   187d0:	mov	r1, r9
   187d4:	mov	r2, r6
   187d8:	add	r3, sp, #48	; 0x30
   187dc:	str	r0, [sp]
   187e0:	mov	r0, sl
   187e4:	bl	334d0 <flatcc_json_parser_integer@@Base>
   187e8:	cmp	r0, r9
   187ec:	beq	18818 <main@@Base+0x2adc>
   187f0:	mov	r1, r0
   187f4:	ldr	r0, [sp, #48]	; 0x30
   187f8:	cmp	r0, #0
   187fc:	beq	18820 <main@@Base+0x2ae4>
   18800:	mov	r0, sl
   18804:	mov	r2, r6
   18808:	mov	r3, #8
   1880c:	b	18840 <main@@Base+0x2b04>
   18810:	mov	r1, r6
   18814:	b	18848 <main@@Base+0x2b0c>
   18818:	mov	r1, r9
   1881c:	b	18848 <main@@Base+0x2b0c>
   18820:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18824:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18828:	subs	r3, r0, #256	; 0x100
   1882c:	sbcs	r2, r2, #0
   18830:	bcc	1895c <main@@Base+0x2c20>
   18834:	mov	r0, sl
   18838:	mov	r2, r6
   1883c:	mov	r3, #7
   18840:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18844:	mov	r1, r0
   18848:	cmp	r9, r1
   1884c:	bne	18884 <main@@Base+0x2b48>
   18850:	movw	r3, #32904	; 0x8088
   18854:	add	r0, sp, #60	; 0x3c
   18858:	mov	r1, r9
   1885c:	mov	r2, r6
   18860:	str	r0, [sp]
   18864:	mov	r0, sl
   18868:	movt	r3, #5
   1886c:	bl	212ac <main@@Base+0xb570>
   18870:	mov	r1, r0
   18874:	cmp	r0, r9
   18878:	cmpne	r1, r6
   1887c:	beq	1f328 <main@@Base+0x95ec>
   18880:	ldrb	r5, [sp, #60]	; 0x3c
   18884:	sub	r0, r6, r1
   18888:	strb	r5, [r4]
   1888c:	cmp	r0, #2
   18890:	blt	188bc <main@@Base+0x2b80>
   18894:	ldrb	r0, [r1]
   18898:	cmp	r0, #32
   1889c:	bls	188a8 <main@@Base+0x2b6c>
   188a0:	mov	r9, r1
   188a4:	b	188cc <main@@Base+0x2b90>
   188a8:	bne	188bc <main@@Base+0x2b80>
   188ac:	mov	r9, r1
   188b0:	ldrb	r0, [r9, #1]!
   188b4:	cmp	r0, #32
   188b8:	bhi	188cc <main@@Base+0x2b90>
   188bc:	mov	r0, sl
   188c0:	mov	r2, r6
   188c4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   188c8:	mov	r9, r0
   188cc:	cmp	r9, r6
   188d0:	beq	18968 <main@@Base+0x2c2c>
   188d4:	ldrb	r0, [r9]
   188d8:	cmp	r0, #44	; 0x2c
   188dc:	bne	18970 <main@@Base+0x2c34>
   188e0:	add	r1, r9, #1
   188e4:	sub	r0, r6, r1
   188e8:	cmp	r0, #2
   188ec:	blt	18914 <main@@Base+0x2bd8>
   188f0:	ldrb	r0, [r1]
   188f4:	cmp	r0, #32
   188f8:	bls	18904 <main@@Base+0x2bc8>
   188fc:	mov	r9, r1
   18900:	b	18924 <main@@Base+0x2be8>
   18904:	bne	18914 <main@@Base+0x2bd8>
   18908:	ldrb	r0, [r9, #2]!
   1890c:	cmp	r0, #32
   18910:	bhi	18924 <main@@Base+0x2be8>
   18914:	mov	r0, sl
   18918:	mov	r2, r6
   1891c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18920:	mov	r9, r0
   18924:	cmp	r9, r6
   18928:	beq	189bc <main@@Base+0x2c80>
   1892c:	ldrb	r0, [r9]
   18930:	cmp	r0, #93	; 0x5d
   18934:	beq	18978 <main@@Base+0x2c3c>
   18938:	mov	r0, #0
   1893c:	mov	r1, #1
   18940:	strb	r0, [sp, #60]	; 0x3c
   18944:	ldr	r0, [sl]
   18948:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1894c:	mov	r4, r0
   18950:	cmp	r0, #0
   18954:	bne	187b0 <main@@Base+0x2a74>
   18958:	b	1f334 <main@@Base+0x95f8>
   1895c:	mov	r5, r0
   18960:	strb	r0, [sp, #60]	; 0x3c
   18964:	b	18848 <main@@Base+0x2b0c>
   18968:	mov	r9, r6
   1896c:	b	18730 <main@@Base+0x29f4>
   18970:	cmp	r0, #93	; 0x5d
   18974:	bne	19360 <main@@Base+0x3624>
   18978:	add	r1, r9, #1
   1897c:	sub	r0, r6, r1
   18980:	cmp	r0, #2
   18984:	blt	189ac <main@@Base+0x2c70>
   18988:	ldrb	r0, [r1]
   1898c:	cmp	r0, #32
   18990:	bls	1899c <main@@Base+0x2c60>
   18994:	mov	r9, r1
   18998:	b	18730 <main@@Base+0x29f4>
   1899c:	bne	189ac <main@@Base+0x2c70>
   189a0:	ldrb	r0, [r9, #2]!
   189a4:	cmp	r0, #32
   189a8:	bhi	18730 <main@@Base+0x29f4>
   189ac:	mov	r0, sl
   189b0:	mov	r2, r6
   189b4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   189b8:	b	1872c <main@@Base+0x29f0>
   189bc:	mov	r0, sl
   189c0:	mov	r1, r6
   189c4:	b	19368 <main@@Base+0x362c>
   189c8:	bne	189d8 <main@@Base+0x2c9c>
   189cc:	ldrb	r0, [r1, #2]!
   189d0:	cmp	r0, #32
   189d4:	bhi	189ec <main@@Base+0x2cb0>
   189d8:	ldr	r0, [sp, #32]
   189dc:	mov	r1, r2
   189e0:	mov	r2, r6
   189e4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   189e8:	mov	r1, r0
   189ec:	cmp	r8, r1
   189f0:	beq	18a28 <main@@Base+0x2cec>
   189f4:	ldr	r0, [sp, #40]	; 0x28
   189f8:	ldr	sl, [sp, #32]
   189fc:	mov	r2, #8
   18a00:	mov	r3, #0
   18a04:	str	r2, [sp]
   18a08:	mov	r2, r6
   18a0c:	str	r0, [sp, #4]
   18a10:	movw	r0, #7416	; 0x1cf8
   18a14:	movt	r0, #2
   18a18:	str	r0, [sp, #8]
   18a1c:	mov	r0, sl
   18a20:	bl	33cc4 <flatcc_json_parser_union@@Base>
   18a24:	b	1e154 <main@@Base+0x8418>
   18a28:	eor	r0, r5, #889192448	; 0x35000000
   18a2c:	orrs	r0, r0, r7
   18a30:	bne	18e40 <main@@Base+0x3104>
   18a34:	cmp	r9, #6
   18a38:	mov	r9, r8
   18a3c:	blt	18de0 <main@@Base+0x30a4>
   18a40:	ldrb	r0, [r8, #5]
   18a44:	mov	r9, r8
   18a48:	cmp	r0, #34	; 0x22
   18a4c:	bne	18de0 <main@@Base+0x30a4>
   18a50:	add	r1, r8, #6
   18a54:	sub	r0, r6, r1
   18a58:	cmp	r0, #2
   18a5c:	blt	18a88 <main@@Base+0x2d4c>
   18a60:	ldrb	r0, [r1]
   18a64:	cmp	r0, #32
   18a68:	bls	18a74 <main@@Base+0x2d38>
   18a6c:	mov	r9, r1
   18a70:	b	18a98 <main@@Base+0x2d5c>
   18a74:	bne	18a88 <main@@Base+0x2d4c>
   18a78:	mov	r9, r8
   18a7c:	ldrb	r0, [r9, #7]!
   18a80:	cmp	r0, #32
   18a84:	bhi	18a98 <main@@Base+0x2d5c>
   18a88:	ldr	r0, [sp, #32]
   18a8c:	mov	r2, r6
   18a90:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18a94:	mov	r9, r0
   18a98:	cmp	r9, r6
   18a9c:	beq	18ad0 <main@@Base+0x2d94>
   18aa0:	ldrb	r0, [r9]
   18aa4:	cmp	r0, #58	; 0x3a
   18aa8:	bne	18ad0 <main@@Base+0x2d94>
   18aac:	add	r1, r9, #1
   18ab0:	sub	r0, r6, r1
   18ab4:	cmp	r0, #2
   18ab8:	blt	18dd0 <main@@Base+0x3094>
   18abc:	ldrb	r0, [r1]
   18ac0:	cmp	r0, #32
   18ac4:	bls	18dc0 <main@@Base+0x3084>
   18ac8:	mov	r9, r1
   18acc:	b	18de0 <main@@Base+0x30a4>
   18ad0:	ldr	r0, [sp, #32]
   18ad4:	mov	r1, r9
   18ad8:	mov	r2, r6
   18adc:	mov	r3, #4
   18ae0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18ae4:	b	18ddc <main@@Base+0x30a0>
   18ae8:	bne	18afc <main@@Base+0x2dc0>
   18aec:	ldrb	r0, [r8, #2]!
   18af0:	cmp	r0, #32
   18af4:	mov	r9, r8
   18af8:	bhi	180a0 <main@@Base+0x2364>
   18afc:	mov	r0, sl
   18b00:	mov	r2, r6
   18b04:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18b08:	b	1809c <main@@Base+0x2360>
   18b0c:	bne	18b1c <main@@Base+0x2de0>
   18b10:	ldrb	r0, [r8, #12]!
   18b14:	cmp	r0, #32
   18b18:	bhi	18b2c <main@@Base+0x2df0>
   18b1c:	mov	r0, sl
   18b20:	mov	r2, r6
   18b24:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18b28:	mov	r8, r0
   18b2c:	cmp	r8, r6
   18b30:	beq	18b64 <main@@Base+0x2e28>
   18b34:	ldrb	r0, [r8]
   18b38:	cmp	r0, #58	; 0x3a
   18b3c:	bne	18b64 <main@@Base+0x2e28>
   18b40:	add	r1, r8, #1
   18b44:	sub	r0, r6, r1
   18b48:	cmp	r0, #2
   18b4c:	blt	1aa94 <main@@Base+0x4d58>
   18b50:	ldrb	r0, [r1]
   18b54:	cmp	r0, #32
   18b58:	bls	1aa84 <main@@Base+0x4d48>
   18b5c:	mov	r8, r1
   18b60:	b	1aaa4 <main@@Base+0x4d68>
   18b64:	mov	r0, sl
   18b68:	mov	r1, r8
   18b6c:	mov	r2, r6
   18b70:	mov	r3, #4
   18b74:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18b78:	b	1aaa0 <main@@Base+0x4d64>
   18b7c:	bne	18b8c <main@@Base+0x2e50>
   18b80:	ldrb	r0, [r8, #20]!
   18b84:	cmp	r0, #32
   18b88:	bhi	18b9c <main@@Base+0x2e60>
   18b8c:	mov	r0, sl
   18b90:	mov	r2, r6
   18b94:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18b98:	mov	r8, r0
   18b9c:	cmp	r8, r6
   18ba0:	beq	18bd4 <main@@Base+0x2e98>
   18ba4:	ldrb	r0, [r8]
   18ba8:	cmp	r0, #58	; 0x3a
   18bac:	bne	18bd4 <main@@Base+0x2e98>
   18bb0:	add	r1, r8, #1
   18bb4:	sub	r0, r6, r1
   18bb8:	cmp	r0, #2
   18bbc:	blt	1ac00 <main@@Base+0x4ec4>
   18bc0:	ldrb	r0, [r1]
   18bc4:	cmp	r0, #32
   18bc8:	bls	1abf0 <main@@Base+0x4eb4>
   18bcc:	mov	r8, r1
   18bd0:	b	1ac10 <main@@Base+0x4ed4>
   18bd4:	mov	r0, sl
   18bd8:	mov	r1, r8
   18bdc:	mov	r2, r6
   18be0:	mov	r3, #4
   18be4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18be8:	b	1ac0c <main@@Base+0x4ed0>
   18bec:	bne	18bfc <main@@Base+0x2ec0>
   18bf0:	ldrb	r0, [r8, #25]!
   18bf4:	cmp	r0, #32
   18bf8:	bhi	18c0c <main@@Base+0x2ed0>
   18bfc:	mov	r0, sl
   18c00:	mov	r2, r6
   18c04:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18c08:	mov	r8, r0
   18c0c:	cmp	r8, r6
   18c10:	beq	18c44 <main@@Base+0x2f08>
   18c14:	ldrb	r0, [r8]
   18c18:	cmp	r0, #58	; 0x3a
   18c1c:	bne	18c44 <main@@Base+0x2f08>
   18c20:	add	r1, r8, #1
   18c24:	sub	r0, r6, r1
   18c28:	cmp	r0, #2
   18c2c:	blt	1aca8 <main@@Base+0x4f6c>
   18c30:	ldrb	r0, [r1]
   18c34:	cmp	r0, #32
   18c38:	bls	1ac98 <main@@Base+0x4f5c>
   18c3c:	mov	r8, r1
   18c40:	b	1acb8 <main@@Base+0x4f7c>
   18c44:	mov	r0, sl
   18c48:	mov	r1, r8
   18c4c:	mov	r2, r6
   18c50:	mov	r3, #4
   18c54:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18c58:	b	1acb4 <main@@Base+0x4f78>
   18c5c:	bne	18c70 <main@@Base+0x2f34>
   18c60:	mov	r7, r8
   18c64:	ldrb	r0, [r7, #6]!
   18c68:	cmp	r0, #32
   18c6c:	bhi	18c80 <main@@Base+0x2f44>
   18c70:	mov	r0, sl
   18c74:	mov	r2, r6
   18c78:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18c7c:	mov	r7, r0
   18c80:	cmp	r7, r6
   18c84:	beq	18cb8 <main@@Base+0x2f7c>
   18c88:	ldrb	r0, [r7]
   18c8c:	cmp	r0, #58	; 0x3a
   18c90:	bne	18cb8 <main@@Base+0x2f7c>
   18c94:	add	r1, r7, #1
   18c98:	sub	r0, r6, r1
   18c9c:	cmp	r0, #2
   18ca0:	blt	1adc8 <main@@Base+0x508c>
   18ca4:	ldrb	r0, [r1]
   18ca8:	cmp	r0, #32
   18cac:	bls	1adb8 <main@@Base+0x507c>
   18cb0:	mov	r7, r1
   18cb4:	b	1add8 <main@@Base+0x509c>
   18cb8:	mov	r0, sl
   18cbc:	mov	r1, r7
   18cc0:	mov	r2, r6
   18cc4:	mov	r3, #4
   18cc8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18ccc:	b	1add4 <main@@Base+0x5098>
   18cd0:	bne	18ce4 <main@@Base+0x2fa8>
   18cd4:	mov	r7, r8
   18cd8:	ldrb	r0, [r7, #7]!
   18cdc:	cmp	r0, #32
   18ce0:	bhi	18cf4 <main@@Base+0x2fb8>
   18ce4:	mov	r0, sl
   18ce8:	mov	r2, r6
   18cec:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18cf0:	mov	r7, r0
   18cf4:	cmp	r7, r6
   18cf8:	beq	18d2c <main@@Base+0x2ff0>
   18cfc:	ldrb	r0, [r7]
   18d00:	cmp	r0, #58	; 0x3a
   18d04:	bne	18d2c <main@@Base+0x2ff0>
   18d08:	add	r1, r7, #1
   18d0c:	sub	r0, r6, r1
   18d10:	cmp	r0, #2
   18d14:	blt	1af28 <main@@Base+0x51ec>
   18d18:	ldrb	r0, [r1]
   18d1c:	cmp	r0, #32
   18d20:	bls	1af18 <main@@Base+0x51dc>
   18d24:	mov	r7, r1
   18d28:	b	1af38 <main@@Base+0x51fc>
   18d2c:	mov	r0, sl
   18d30:	mov	r1, r7
   18d34:	mov	r2, r6
   18d38:	mov	r3, #4
   18d3c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18d40:	b	1af34 <main@@Base+0x51f8>
   18d44:	ldr	r4, [sp, #36]	; 0x24
   18d48:	bne	18d5c <main@@Base+0x3020>
   18d4c:	mov	r6, r8
   18d50:	ldrb	r0, [r6, #18]!
   18d54:	cmp	r0, #32
   18d58:	bhi	18d6c <main@@Base+0x3030>
   18d5c:	mov	r0, sl
   18d60:	mov	r2, r4
   18d64:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18d68:	mov	r6, r0
   18d6c:	cmp	r6, r4
   18d70:	beq	18da8 <main@@Base+0x306c>
   18d74:	ldrb	r0, [r6]
   18d78:	cmp	r0, #58	; 0x3a
   18d7c:	bne	18da8 <main@@Base+0x306c>
   18d80:	ldr	r0, [sp, #36]	; 0x24
   18d84:	add	r1, r6, #1
   18d88:	sub	r0, r0, r1
   18d8c:	cmp	r0, #2
   18d90:	blt	1b048 <main@@Base+0x530c>
   18d94:	ldrb	r0, [r1]
   18d98:	cmp	r0, #32
   18d9c:	bls	1b038 <main@@Base+0x52fc>
   18da0:	mov	r6, r1
   18da4:	b	1b058 <main@@Base+0x531c>
   18da8:	ldr	r2, [sp, #36]	; 0x24
   18dac:	mov	r0, sl
   18db0:	mov	r1, r6
   18db4:	mov	r3, #4
   18db8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18dbc:	b	1b054 <main@@Base+0x5318>
   18dc0:	bne	18dd0 <main@@Base+0x3094>
   18dc4:	ldrb	r0, [r9, #2]!
   18dc8:	cmp	r0, #32
   18dcc:	bhi	18de0 <main@@Base+0x30a4>
   18dd0:	ldr	r0, [sp, #32]
   18dd4:	mov	r2, r6
   18dd8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18ddc:	mov	r9, r0
   18de0:	cmp	r8, r9
   18de4:	beq	18e40 <main@@Base+0x3104>
   18de8:	ldr	sl, [sp, #32]
   18dec:	mov	r1, #4
   18df0:	mov	r2, #2
   18df4:	mvn	r3, #-1073741824	; 0xc0000000
   18df8:	ldr	r0, [sl]
   18dfc:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   18e00:	cmp	r0, #0
   18e04:	bne	1f334 <main@@Base+0x95f8>
   18e08:	cmp	r9, r6
   18e0c:	beq	18ed4 <main@@Base+0x3198>
   18e10:	ldrb	r0, [r9]
   18e14:	cmp	r0, #91	; 0x5b
   18e18:	bne	18ed4 <main@@Base+0x3198>
   18e1c:	add	r1, r9, #1
   18e20:	sub	r0, r6, r1
   18e24:	cmp	r0, #2
   18e28:	blt	18f30 <main@@Base+0x31f4>
   18e2c:	ldrb	r0, [r1]
   18e30:	cmp	r0, #32
   18e34:	bls	18f20 <main@@Base+0x31e4>
   18e38:	mov	r9, r1
   18e3c:	b	18f40 <main@@Base+0x3204>
   18e40:	movw	r0, #31088	; 0x7970
   18e44:	movt	r0, #24436	; 0x5f74
   18e48:	eor	r0, sl, r0
   18e4c:	orrs	r0, r0, r7
   18e50:	bne	18ec4 <main@@Base+0x3188>
   18e54:	add	r7, r8, #8
   18e58:	mov	r1, #8
   18e5c:	mov	r2, #-268435456	; 0xf0000000
   18e60:	ldr	sl, [sp, #32]
   18e64:	sub	r0, r6, r7
   18e68:	cmp	r0, #8
   18e6c:	movcc	r1, r0
   18e70:	add	r1, r2, r1, lsl #28
   18e74:	asr	r1, r1, #28
   18e78:	cmp	r1, #0
   18e7c:	blt	1e144 <main@@Base+0x8408>
   18e80:	ldrb	r1, [r7]
   18e84:	cmp	r1, #101	; 0x65
   18e88:	bne	1e144 <main@@Base+0x8408>
   18e8c:	cmp	r0, #2
   18e90:	blt	1e144 <main@@Base+0x8408>
   18e94:	ldrb	r0, [r8, #9]
   18e98:	cmp	r0, #34	; 0x22
   18e9c:	bne	1e144 <main@@Base+0x8408>
   18ea0:	add	r1, r8, #10
   18ea4:	sub	r0, r6, r1
   18ea8:	cmp	r0, #2
   18eac:	blt	190e0 <main@@Base+0x33a4>
   18eb0:	ldrb	r0, [r1]
   18eb4:	cmp	r0, #32
   18eb8:	bls	190d0 <main@@Base+0x3394>
   18ebc:	mov	r8, r1
   18ec0:	b	190f0 <main@@Base+0x33b4>
   18ec4:	ldr	sl, [sp, #32]
   18ec8:	mov	r0, sl
   18ecc:	mov	r1, r8
   18ed0:	b	1e14c <main@@Base+0x8410>
   18ed4:	mov	r0, sl
   18ed8:	mov	r1, r9
   18edc:	mov	r2, r6
   18ee0:	mov	r3, #22
   18ee4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   18ee8:	mov	r9, r0
   18eec:	ldr	r0, [sl]
   18ef0:	bl	2e448 <flatcc_builder_end_vector@@Base>
   18ef4:	cmp	r0, #0
   18ef8:	str	r0, [sp, #44]	; 0x2c
   18efc:	beq	1f334 <main@@Base+0x95f8>
   18f00:	ldr	r0, [sl]
   18f04:	mov	r1, #31
   18f08:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   18f0c:	cmp	r0, #0
   18f10:	beq	1f334 <main@@Base+0x95f8>
   18f14:	ldr	r1, [sp, #44]	; 0x2c
   18f18:	str	r1, [r0]
   18f1c:	b	1e158 <main@@Base+0x841c>
   18f20:	bne	18f30 <main@@Base+0x31f4>
   18f24:	ldrb	r0, [r9, #2]!
   18f28:	cmp	r0, #32
   18f2c:	bhi	18f40 <main@@Base+0x3204>
   18f30:	mov	r0, sl
   18f34:	mov	r2, r6
   18f38:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18f3c:	mov	r9, r0
   18f40:	cmp	r9, r6
   18f44:	mov	r8, r6
   18f48:	beq	18f8c <main@@Base+0x3250>
   18f4c:	ldrb	r0, [r9]
   18f50:	cmp	r0, #93	; 0x5d
   18f54:	bne	18f88 <main@@Base+0x324c>
   18f58:	add	r1, r9, #1
   18f5c:	sub	r0, r6, r1
   18f60:	cmp	r0, #2
   18f64:	blt	1c690 <main@@Base+0x6954>
   18f68:	ldrb	r0, [r1]
   18f6c:	cmp	r0, #32
   18f70:	bhi	190bc <main@@Base+0x3380>
   18f74:	bne	1c690 <main@@Base+0x6954>
   18f78:	ldrb	r0, [r9, #2]!
   18f7c:	cmp	r0, #32
   18f80:	bhi	18eec <main@@Base+0x31b0>
   18f84:	b	1c690 <main@@Base+0x6954>
   18f88:	mov	r8, r9
   18f8c:	ldr	r0, [sl]
   18f90:	mov	r1, #1
   18f94:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   18f98:	mov	r3, r0
   18f9c:	cmp	r0, #0
   18fa0:	beq	1662c <main@@Base+0x8f0>
   18fa4:	mov	r0, sl
   18fa8:	mov	r1, r8
   18fac:	mov	r2, r6
   18fb0:	bl	21658 <main@@Base+0xb91c>
   18fb4:	mov	r1, r0
   18fb8:	sub	r0, r6, r0
   18fbc:	cmp	r0, #2
   18fc0:	blt	18fec <main@@Base+0x32b0>
   18fc4:	ldrb	r0, [r1]
   18fc8:	cmp	r0, #32
   18fcc:	bls	18fd8 <main@@Base+0x329c>
   18fd0:	mov	r8, r1
   18fd4:	b	18ffc <main@@Base+0x32c0>
   18fd8:	bne	18fec <main@@Base+0x32b0>
   18fdc:	mov	r8, r1
   18fe0:	ldrb	r0, [r8, #1]!
   18fe4:	cmp	r0, #32
   18fe8:	bhi	18ffc <main@@Base+0x32c0>
   18fec:	mov	r0, sl
   18ff0:	mov	r2, r6
   18ff4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   18ff8:	mov	r8, r0
   18ffc:	cmp	r8, r6
   19000:	beq	19088 <main@@Base+0x334c>
   19004:	ldrb	r0, [r8]
   19008:	cmp	r0, #44	; 0x2c
   1900c:	bne	19090 <main@@Base+0x3354>
   19010:	add	r1, r8, #1
   19014:	sub	r0, r6, r1
   19018:	cmp	r0, #2
   1901c:	blt	19044 <main@@Base+0x3308>
   19020:	ldrb	r0, [r1]
   19024:	cmp	r0, #32
   19028:	bls	19034 <main@@Base+0x32f8>
   1902c:	mov	r8, r1
   19030:	b	19054 <main@@Base+0x3318>
   19034:	bne	19044 <main@@Base+0x3308>
   19038:	ldrb	r0, [r8, #2]!
   1903c:	cmp	r0, #32
   19040:	bhi	19054 <main@@Base+0x3318>
   19044:	mov	r0, sl
   19048:	mov	r2, r6
   1904c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19050:	mov	r8, r0
   19054:	cmp	r8, r6
   19058:	beq	190c4 <main@@Base+0x3388>
   1905c:	ldrb	r0, [r8]
   19060:	cmp	r0, #93	; 0x5d
   19064:	bne	18f8c <main@@Base+0x3250>
   19068:	add	r1, r8, #1
   1906c:	sub	r0, r6, r1
   19070:	cmp	r0, #2
   19074:	blt	1c690 <main@@Base+0x6954>
   19078:	ldrb	r0, [r1]
   1907c:	cmp	r0, #32
   19080:	bls	1c67c <main@@Base+0x6940>
   19084:	b	190bc <main@@Base+0x3380>
   19088:	mov	r9, r6
   1908c:	b	18eec <main@@Base+0x31b0>
   19090:	cmp	r0, #93	; 0x5d
   19094:	bne	1a498 <main@@Base+0x475c>
   19098:	add	r1, r8, #1
   1909c:	sub	r0, r6, r1
   190a0:	cmp	r0, #2
   190a4:	blt	1c690 <main@@Base+0x6954>
   190a8:	ldrb	r0, [r1]
   190ac:	cmp	r0, #32
   190b0:	bls	1c674 <main@@Base+0x6938>
   190b4:	ldr	r6, [sp, #36]	; 0x24
   190b8:	ldr	sl, [sp, #32]
   190bc:	mov	r9, r1
   190c0:	b	18eec <main@@Base+0x31b0>
   190c4:	mov	r0, sl
   190c8:	mov	r1, r6
   190cc:	b	1a4a0 <main@@Base+0x4764>
   190d0:	bne	190e0 <main@@Base+0x33a4>
   190d4:	ldrb	r0, [r8, #11]!
   190d8:	cmp	r0, #32
   190dc:	bhi	190f0 <main@@Base+0x33b4>
   190e0:	mov	r0, sl
   190e4:	mov	r2, r6
   190e8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   190ec:	mov	r8, r0
   190f0:	cmp	r8, r6
   190f4:	beq	19128 <main@@Base+0x33ec>
   190f8:	ldrb	r0, [r8]
   190fc:	cmp	r0, #58	; 0x3a
   19100:	bne	19128 <main@@Base+0x33ec>
   19104:	add	r1, r8, #1
   19108:	sub	r0, r6, r1
   1910c:	cmp	r0, #2
   19110:	blt	1ab98 <main@@Base+0x4e5c>
   19114:	ldrb	r0, [r1]
   19118:	cmp	r0, #32
   1911c:	bls	1ab88 <main@@Base+0x4e4c>
   19120:	mov	r8, r1
   19124:	b	1aba8 <main@@Base+0x4e6c>
   19128:	mov	r0, sl
   1912c:	mov	r1, r8
   19130:	mov	r2, r6
   19134:	mov	r3, #4
   19138:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1913c:	b	1aba4 <main@@Base+0x4e68>
   19140:	bne	19150 <main@@Base+0x3414>
   19144:	ldrb	r0, [r7, #2]!
   19148:	cmp	r0, #32
   1914c:	bhi	19160 <main@@Base+0x3424>
   19150:	mov	r0, sl
   19154:	mov	r2, r6
   19158:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1915c:	mov	r7, r0
   19160:	cmp	r8, r7
   19164:	beq	18ec8 <main@@Base+0x318c>
   19168:	mov	r0, #0
   1916c:	strb	r0, [sp, #60]	; 0x3c
   19170:	sub	r0, r6, r7
   19174:	cmp	r0, #4
   19178:	blt	191b4 <main@@Base+0x3478>
   1917c:	ldr	r1, [r7]
   19180:	movw	r2, #29300	; 0x7274
   19184:	movt	r2, #25973	; 0x6575
   19188:	cmp	r1, r2
   1918c:	beq	1921c <main@@Base+0x34e0>
   19190:	cmp	r0, #5
   19194:	blt	191b4 <main@@Base+0x3478>
   19198:	movw	r1, #15817	; 0x3dc9
   1919c:	mov	r0, r7
   191a0:	mov	r2, #5
   191a4:	movt	r1, #4
   191a8:	bl	14e6c <memcmp@plt>
   191ac:	cmp	r0, #0
   191b0:	beq	192dc <main@@Base+0x35a0>
   191b4:	mov	r4, #0
   191b8:	cmp	r7, r6
   191bc:	str	r4, [fp, #-52]	; 0xffffffcc
   191c0:	str	r4, [fp, #-56]	; 0xffffffc8
   191c4:	str	r4, [sp, #48]	; 0x30
   191c8:	beq	19214 <main@@Base+0x34d8>
   191cc:	sub	r0, fp, #56	; 0x38
   191d0:	mov	r1, r7
   191d4:	mov	r2, r6
   191d8:	add	r3, sp, #48	; 0x30
   191dc:	str	r0, [sp]
   191e0:	mov	r0, sl
   191e4:	bl	334d0 <flatcc_json_parser_integer@@Base>
   191e8:	cmp	r0, r7
   191ec:	beq	19228 <main@@Base+0x34ec>
   191f0:	mov	r9, r0
   191f4:	ldr	r0, [sp, #48]	; 0x30
   191f8:	cmp	r0, #0
   191fc:	beq	19230 <main@@Base+0x34f4>
   19200:	mov	r0, sl
   19204:	mov	r1, r9
   19208:	mov	r2, r6
   1920c:	mov	r3, #8
   19210:	b	19254 <main@@Base+0x3518>
   19214:	mov	r9, r6
   19218:	b	1925c <main@@Base+0x3520>
   1921c:	mov	r4, #1
   19220:	add	r9, r7, #4
   19224:	b	19268 <main@@Base+0x352c>
   19228:	mov	r9, r7
   1922c:	b	1925c <main@@Base+0x3520>
   19230:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19234:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19238:	subs	r2, r0, #256	; 0x100
   1923c:	sbcs	r1, r1, #0
   19240:	bcc	192e8 <main@@Base+0x35ac>
   19244:	mov	r0, sl
   19248:	mov	r1, r9
   1924c:	mov	r2, r6
   19250:	mov	r3, #7
   19254:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19258:	mov	r9, r0
   1925c:	uxtb	r4, r4
   19260:	cmp	r4, #0
   19264:	movwne	r4, #1
   19268:	strb	r4, [sp, #60]	; 0x3c
   1926c:	cmp	r7, r9
   19270:	bne	192a8 <main@@Base+0x356c>
   19274:	movw	r3, #32980	; 0x80d4
   19278:	add	r0, sp, #60	; 0x3c
   1927c:	mov	r1, r7
   19280:	mov	r2, r6
   19284:	str	r0, [sp]
   19288:	mov	r0, sl
   1928c:	movt	r3, #5
   19290:	bl	22fe8 <main@@Base+0xd2ac>
   19294:	mov	r9, r0
   19298:	cmp	r0, r7
   1929c:	cmpne	r9, r6
   192a0:	beq	1f334 <main@@Base+0x95f8>
   192a4:	ldrb	r4, [sp, #60]	; 0x3c
   192a8:	cmp	r4, #1
   192ac:	ldrbeq	r0, [sl, #8]
   192b0:	tsteq	r0, #2
   192b4:	beq	1e158 <main@@Base+0x841c>
   192b8:	ldr	r0, [sl]
   192bc:	mov	r1, #15
   192c0:	mov	r2, #1
   192c4:	mov	r3, #1
   192c8:	bl	2ea78 <flatcc_builder_table_add@@Base>
   192cc:	cmp	r0, #0
   192d0:	beq	1f334 <main@@Base+0x95f8>
   192d4:	strb	r4, [r0]
   192d8:	b	1e158 <main@@Base+0x841c>
   192dc:	mov	r4, #0
   192e0:	add	r9, r7, #5
   192e4:	b	19268 <main@@Base+0x352c>
   192e8:	mov	r4, r0
   192ec:	b	1925c <main@@Base+0x3520>
   192f0:	bne	19300 <main@@Base+0x35c4>
   192f4:	ldrb	r0, [r8, #23]!
   192f8:	cmp	r0, #32
   192fc:	bhi	19310 <main@@Base+0x35d4>
   19300:	mov	r0, sl
   19304:	mov	r2, r6
   19308:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1930c:	mov	r8, r0
   19310:	cmp	r8, r6
   19314:	beq	19348 <main@@Base+0x360c>
   19318:	ldrb	r0, [r8]
   1931c:	cmp	r0, #58	; 0x3a
   19320:	bne	19348 <main@@Base+0x360c>
   19324:	add	r1, r8, #1
   19328:	sub	r0, r6, r1
   1932c:	cmp	r0, #2
   19330:	blt	1b21c <main@@Base+0x54e0>
   19334:	ldrb	r0, [r1]
   19338:	cmp	r0, #32
   1933c:	bls	1b20c <main@@Base+0x54d0>
   19340:	mov	r8, r1
   19344:	b	1b22c <main@@Base+0x54f0>
   19348:	mov	r0, sl
   1934c:	mov	r1, r8
   19350:	mov	r2, r6
   19354:	mov	r3, #4
   19358:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1935c:	b	1b228 <main@@Base+0x54ec>
   19360:	mov	r0, sl
   19364:	mov	r1, r9
   19368:	mov	r2, r6
   1936c:	mov	r3, #9
   19370:	b	18728 <main@@Base+0x29ec>
   19374:	bne	19384 <main@@Base+0x3648>
   19378:	ldrb	r0, [r8, #19]!
   1937c:	cmp	r0, #32
   19380:	bhi	19394 <main@@Base+0x3658>
   19384:	mov	r0, sl
   19388:	mov	r2, r6
   1938c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19390:	mov	r8, r0
   19394:	cmp	r8, r6
   19398:	beq	193cc <main@@Base+0x3690>
   1939c:	ldrb	r0, [r8]
   193a0:	cmp	r0, #58	; 0x3a
   193a4:	bne	193cc <main@@Base+0x3690>
   193a8:	add	r1, r8, #1
   193ac:	sub	r0, r6, r1
   193b0:	cmp	r0, #2
   193b4:	blt	1b384 <main@@Base+0x5648>
   193b8:	ldrb	r0, [r1]
   193bc:	cmp	r0, #32
   193c0:	bls	1b374 <main@@Base+0x5638>
   193c4:	mov	r8, r1
   193c8:	b	1b394 <main@@Base+0x5658>
   193cc:	mov	r0, sl
   193d0:	mov	r1, r8
   193d4:	mov	r2, r6
   193d8:	mov	r3, #4
   193dc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   193e0:	b	1b390 <main@@Base+0x5654>
   193e4:	bne	193f4 <main@@Base+0x36b8>
   193e8:	ldrb	r0, [r8, #2]!
   193ec:	cmp	r0, #32
   193f0:	bhi	19404 <main@@Base+0x36c8>
   193f4:	mov	r0, r5
   193f8:	mov	r2, r4
   193fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19400:	mov	r8, r0
   19404:	cmp	r9, r8
   19408:	beq	19468 <main@@Base+0x372c>
   1940c:	ldr	sl, [sp, #32]
   19410:	mov	r1, #1
   19414:	mov	r2, #1
   19418:	mvn	r3, #0
   1941c:	ldr	r0, [sl]
   19420:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   19424:	cmp	r0, #0
   19428:	bne	1f33c <main@@Base+0x9600>
   1942c:	ldr	r6, [sp, #36]	; 0x24
   19430:	cmp	r8, r6
   19434:	beq	1947c <main@@Base+0x3740>
   19438:	ldrb	r0, [r8]
   1943c:	cmp	r0, #91	; 0x5b
   19440:	bne	1947c <main@@Base+0x3740>
   19444:	add	r1, r8, #1
   19448:	sub	r0, r6, r1
   1944c:	cmp	r0, #2
   19450:	blt	1a6fc <main@@Base+0x49c0>
   19454:	ldrb	r0, [r1]
   19458:	cmp	r0, #32
   1945c:	bls	1a6ec <main@@Base+0x49b0>
   19460:	mov	r8, r1
   19464:	b	1a70c <main@@Base+0x49d0>
   19468:	ldr	sl, [sp, #32]
   1946c:	ldr	r6, [sp, #36]	; 0x24
   19470:	mov	r0, sl
   19474:	mov	r1, r9
   19478:	b	1e14c <main@@Base+0x8410>
   1947c:	mov	r0, sl
   19480:	mov	r1, r8
   19484:	mov	r2, r6
   19488:	mov	r3, #22
   1948c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19490:	mov	r8, r0
   19494:	ldr	r0, [sl]
   19498:	bl	2e448 <flatcc_builder_end_vector@@Base>
   1949c:	cmp	r0, #0
   194a0:	str	r0, [sp, #44]	; 0x2c
   194a4:	beq	1662c <main@@Base+0x8f0>
   194a8:	ldr	r0, [sl]
   194ac:	mov	r1, #24
   194b0:	b	1f0fc <main@@Base+0x93c0>
   194b4:	bne	194c4 <main@@Base+0x3788>
   194b8:	ldrb	r0, [r8, #11]!
   194bc:	cmp	r0, #32
   194c0:	bhi	194d4 <main@@Base+0x3798>
   194c4:	mov	r0, sl
   194c8:	mov	r2, r6
   194cc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   194d0:	mov	r8, r0
   194d4:	cmp	r8, r6
   194d8:	beq	1950c <main@@Base+0x37d0>
   194dc:	ldrb	r0, [r8]
   194e0:	cmp	r0, #58	; 0x3a
   194e4:	bne	1950c <main@@Base+0x37d0>
   194e8:	add	r1, r8, #1
   194ec:	sub	r0, r6, r1
   194f0:	cmp	r0, #2
   194f4:	blt	1be74 <main@@Base+0x6138>
   194f8:	ldrb	r0, [r1]
   194fc:	cmp	r0, #32
   19500:	bls	1be64 <main@@Base+0x6128>
   19504:	mov	r8, r1
   19508:	b	1be84 <main@@Base+0x6148>
   1950c:	mov	r0, sl
   19510:	mov	r1, r8
   19514:	mov	r2, r6
   19518:	mov	r3, #4
   1951c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19520:	b	1be80 <main@@Base+0x6144>
   19524:	bne	19534 <main@@Base+0x37f8>
   19528:	ldrb	r0, [r8, #11]!
   1952c:	cmp	r0, #32
   19530:	bhi	19544 <main@@Base+0x3808>
   19534:	mov	r0, sl
   19538:	mov	r2, r6
   1953c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19540:	mov	r8, r0
   19544:	cmp	r8, r6
   19548:	beq	1957c <main@@Base+0x3840>
   1954c:	ldrb	r0, [r8]
   19550:	cmp	r0, #58	; 0x3a
   19554:	bne	1957c <main@@Base+0x3840>
   19558:	add	r1, r8, #1
   1955c:	sub	r0, r6, r1
   19560:	cmp	r0, #2
   19564:	blt	1bf74 <main@@Base+0x6238>
   19568:	ldrb	r0, [r1]
   1956c:	cmp	r0, #32
   19570:	bls	1bf64 <main@@Base+0x6228>
   19574:	mov	r8, r1
   19578:	b	1bf84 <main@@Base+0x6248>
   1957c:	mov	r0, sl
   19580:	mov	r1, r8
   19584:	mov	r2, r6
   19588:	mov	r3, #4
   1958c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19590:	b	1bf80 <main@@Base+0x6244>
   19594:	bne	195a4 <main@@Base+0x3868>
   19598:	ldrb	r0, [r7, #2]!
   1959c:	cmp	r0, #32
   195a0:	bhi	195b4 <main@@Base+0x3878>
   195a4:	mov	r0, sl
   195a8:	mov	r2, r6
   195ac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   195b0:	mov	r7, r0
   195b4:	cmp	r8, r7
   195b8:	beq	18ec8 <main@@Base+0x318c>
   195bc:	mov	r4, #0
   195c0:	cmp	r7, r6
   195c4:	str	r4, [fp, #-52]	; 0xffffffcc
   195c8:	str	r4, [fp, #-56]	; 0xffffffc8
   195cc:	strh	r4, [sp, #60]	; 0x3c
   195d0:	str	r4, [sp, #48]	; 0x30
   195d4:	beq	19638 <main@@Base+0x38fc>
   195d8:	sub	r0, fp, #56	; 0x38
   195dc:	mov	r1, r7
   195e0:	mov	r2, r6
   195e4:	add	r3, sp, #48	; 0x30
   195e8:	str	r0, [sp]
   195ec:	mov	r0, sl
   195f0:	bl	334d0 <flatcc_json_parser_integer@@Base>
   195f4:	cmp	r0, r7
   195f8:	beq	19640 <main@@Base+0x3904>
   195fc:	ldr	r2, [sp, #48]	; 0x30
   19600:	mov	r9, r0
   19604:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19608:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1960c:	cmp	r2, #0
   19610:	beq	19648 <main@@Base+0x390c>
   19614:	movw	r2, #32769	; 0x8001
   19618:	subs	r2, r0, r2
   1961c:	sbcs	r1, r1, #0
   19620:	bcc	19670 <main@@Base+0x3934>
   19624:	mov	r0, sl
   19628:	mov	r1, r9
   1962c:	mov	r2, r6
   19630:	mov	r3, #8
   19634:	b	19664 <main@@Base+0x3928>
   19638:	mov	r9, r6
   1963c:	b	19680 <main@@Base+0x3944>
   19640:	mov	r9, r7
   19644:	b	19680 <main@@Base+0x3944>
   19648:	subs	r2, r0, #32768	; 0x8000
   1964c:	sbcs	r1, r1, #0
   19650:	bcc	19678 <main@@Base+0x393c>
   19654:	mov	r0, sl
   19658:	mov	r1, r9
   1965c:	mov	r2, r6
   19660:	mov	r3, #7
   19664:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19668:	mov	r9, r0
   1966c:	b	19680 <main@@Base+0x3944>
   19670:	rsb	r4, r0, #0
   19674:	b	1967c <main@@Base+0x3940>
   19678:	mov	r4, r0
   1967c:	strh	r4, [sp, #60]	; 0x3c
   19680:	cmp	r7, r9
   19684:	bne	196bc <main@@Base+0x3980>
   19688:	movw	r3, #32916	; 0x8094
   1968c:	add	r0, sp, #60	; 0x3c
   19690:	mov	r1, r7
   19694:	mov	r2, r6
   19698:	str	r0, [sp]
   1969c:	mov	r0, sl
   196a0:	movt	r3, #5
   196a4:	bl	21478 <main@@Base+0xb73c>
   196a8:	mov	r9, r0
   196ac:	cmp	r0, r7
   196b0:	cmpne	r9, r6
   196b4:	beq	1f334 <main@@Base+0x95f8>
   196b8:	ldrh	r4, [sp, #60]	; 0x3c
   196bc:	uxth	r0, r4
   196c0:	cmp	r0, #100	; 0x64
   196c4:	ldrbeq	r0, [sl, #8]
   196c8:	tsteq	r0, #2
   196cc:	beq	1e158 <main@@Base+0x841c>
   196d0:	ldr	r0, [sl]
   196d4:	mov	r1, #2
   196d8:	mov	r2, #2
   196dc:	mov	r3, #2
   196e0:	bl	2ea78 <flatcc_builder_table_add@@Base>
   196e4:	cmp	r0, #0
   196e8:	bne	1af10 <main@@Base+0x51d4>
   196ec:	b	1f334 <main@@Base+0x95f8>
   196f0:	bne	19700 <main@@Base+0x39c4>
   196f4:	ldrb	r0, [r9, #2]!
   196f8:	cmp	r0, #32
   196fc:	bhi	19710 <main@@Base+0x39d4>
   19700:	mov	r0, sl
   19704:	mov	r2, r6
   19708:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1970c:	mov	r9, r0
   19710:	cmp	r8, r9
   19714:	beq	18ec8 <main@@Base+0x318c>
   19718:	ldr	r0, [sl]
   1971c:	mov	r1, #0
   19720:	mov	r2, #32
   19724:	mov	r3, #16
   19728:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1972c:	cmp	r0, #0
   19730:	beq	1f320 <main@@Base+0x95e4>
   19734:	cmp	r9, r6
   19738:	beq	19770 <main@@Base+0x3a34>
   1973c:	mov	sl, r0
   19740:	ldrb	r0, [r9]
   19744:	cmp	r0, #123	; 0x7b
   19748:	bne	19770 <main@@Base+0x3a34>
   1974c:	add	r1, r9, #1
   19750:	sub	r0, r6, r1
   19754:	cmp	r0, #2
   19758:	blt	1979c <main@@Base+0x3a60>
   1975c:	ldrb	r0, [r1]
   19760:	cmp	r0, #32
   19764:	bls	1978c <main@@Base+0x3a50>
   19768:	mov	r9, r1
   1976c:	b	197ac <main@@Base+0x3a70>
   19770:	ldr	sl, [sp, #32]
   19774:	mov	r1, r9
   19778:	mov	r2, r6
   1977c:	mov	r3, #21
   19780:	mov	r0, sl
   19784:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19788:	b	1e154 <main@@Base+0x8418>
   1978c:	bne	1979c <main@@Base+0x3a60>
   19790:	ldrb	r0, [r9, #2]!
   19794:	cmp	r0, #32
   19798:	bhi	197ac <main@@Base+0x3a70>
   1979c:	ldr	r0, [sp, #32]
   197a0:	mov	r2, r6
   197a4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   197a8:	mov	r9, r0
   197ac:	cmp	r9, r6
   197b0:	mov	r2, r6
   197b4:	beq	197fc <main@@Base+0x3ac0>
   197b8:	ldrb	r0, [r9]
   197bc:	cmp	r0, #125	; 0x7d
   197c0:	bne	197f8 <main@@Base+0x3abc>
   197c4:	ldr	sl, [sp, #32]
   197c8:	add	r1, r9, #1
   197cc:	sub	r0, r6, r1
   197d0:	cmp	r0, #2
   197d4:	blt	1ce68 <main@@Base+0x712c>
   197d8:	ldrb	r0, [r1]
   197dc:	cmp	r0, #32
   197e0:	bhi	1a2d8 <main@@Base+0x459c>
   197e4:	bne	1ce68 <main@@Base+0x712c>
   197e8:	ldrb	r0, [r9, #2]!
   197ec:	cmp	r0, #32
   197f0:	bls	1ce68 <main@@Base+0x712c>
   197f4:	b	1e158 <main@@Base+0x841c>
   197f8:	mov	r2, r9
   197fc:	add	r0, sl, #26
   19800:	str	r0, [sp, #16]
   19804:	cmp	r2, r6
   19808:	mov	r9, r6
   1980c:	beq	1983c <main@@Base+0x3b00>
   19810:	ldrb	r0, [r2]
   19814:	cmp	r0, #34	; 0x22
   19818:	bne	19824 <main@@Base+0x3ae8>
   1981c:	add	r9, r2, #1
   19820:	b	1983c <main@@Base+0x3b00>
   19824:	ldr	r0, [sp, #32]
   19828:	mov	r1, r2
   1982c:	mov	r2, r6
   19830:	mov	r3, #5
   19834:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19838:	mov	r9, r0
   1983c:	sub	ip, r6, r9
   19840:	mov	r0, #8
   19844:	cmp	ip, #8
   19848:	movcc	r0, ip
   1984c:	and	r0, r0, #15
   19850:	sub	r7, r0, #1
   19854:	cmp	r7, #7
   19858:	bhi	1a19c <main@@Base+0x4460>
   1985c:	add	r4, pc, #32
   19860:	mov	r1, #0
   19864:	mov	lr, #0
   19868:	mov	r8, #0
   1986c:	mov	r6, #0
   19870:	mov	r3, #0
   19874:	mov	r5, #0
   19878:	mov	r0, #0
   1987c:	mov	r2, #0
   19880:	ldr	pc, [r4, r7, lsl #2]
   19884:	andeq	r9, r1, r8, ror #17
   19888:	andeq	r9, r1, r0, ror #17
   1988c:	ldrdeq	r9, [r1], -r8
   19890:	ldrdeq	r9, [r1], -r0
   19894:	andeq	r9, r1, r4, asr #17
   19898:			; <UNDEFINED> instruction: 0x000198b8
   1989c:	andeq	r9, r1, r8, lsr #17
   198a0:	andeq	r9, r1, r4, lsr #17
   198a4:	ldrb	lr, [r9, #7]
   198a8:	ldrb	r0, [r9, #6]
   198ac:	mov	r8, r1
   198b0:	orr	r0, lr, r0, lsl #8
   198b4:	mov	r1, r0
   198b8:	ldrb	r0, [r9, #5]
   198bc:	mov	r6, r8
   198c0:	orr	r1, r1, r0, lsl #16
   198c4:	ldrb	r0, [r9, #4]
   198c8:	mov	r3, r6
   198cc:	orr	r1, r1, r0, lsl #24
   198d0:	ldrb	r0, [r9, #3]
   198d4:	orr	r5, r0, r3
   198d8:	ldrb	r0, [r9, #2]
   198dc:	orr	r0, r5, r0, lsl #8
   198e0:	ldrb	r2, [r9, #1]
   198e4:	orr	r2, r0, r2, lsl #16
   198e8:	ldrb	r0, [r9]
   198ec:	movw	r3, #29556	; 0x7374
   198f0:	movt	r3, #29797	; 0x7465
   198f4:	orr	r2, r2, r0, lsl #24
   198f8:	mvn	r0, #-855638016	; 0xcd000000
   198fc:	subs	r0, r0, r1
   19900:	sbcs	r0, r3, r2
   19904:	bcc	1996c <main@@Base+0x3c30>
   19908:	ldr	r6, [sp, #36]	; 0x24
   1990c:	and	r1, r1, #-16777216	; 0xff000000
   19910:	eor	r0, r2, r3
   19914:	eor	r2, r1, #822083584	; 0x31000000
   19918:	orrs	r2, r2, r0
   1991c:	beq	19a28 <main@@Base+0x3cec>
   19920:	eor	r1, r1, #838860800	; 0x32000000
   19924:	orrs	r0, r1, r0
   19928:	bne	1a19c <main@@Base+0x4460>
   1992c:	cmp	ip, #6
   19930:	mov	r7, r9
   19934:	blt	19d08 <main@@Base+0x3fcc>
   19938:	ldrb	r0, [r9, #5]
   1993c:	mov	r7, r9
   19940:	cmp	r0, #34	; 0x22
   19944:	bne	19d08 <main@@Base+0x3fcc>
   19948:	add	r1, r9, #6
   1994c:	sub	r0, r6, r1
   19950:	cmp	r0, #2
   19954:	blt	19b14 <main@@Base+0x3dd8>
   19958:	ldrb	r0, [r1]
   1995c:	cmp	r0, #32
   19960:	bls	19b00 <main@@Base+0x3dc4>
   19964:	mov	r7, r1
   19968:	b	19b24 <main@@Base+0x3de8>
   1996c:	ldr	r6, [sp, #36]	; 0x24
   19970:	cmn	r2, #-2013265919	; 0x88000001
   19974:	bhi	199cc <main@@Base+0x3c90>
   19978:	and	r1, r1, #-16777216	; 0xff000000
   1997c:	eor	r0, r2, r3
   19980:	eor	r1, r1, #855638016	; 0x33000000
   19984:	orrs	r0, r1, r0
   19988:	bne	1a19c <main@@Base+0x4460>
   1998c:	cmp	ip, #6
   19990:	mov	r1, r9
   19994:	blt	19fd0 <main@@Base+0x4294>
   19998:	ldrb	r0, [r9, #5]
   1999c:	mov	r1, r9
   199a0:	cmp	r0, #34	; 0x22
   199a4:	bne	19fd0 <main@@Base+0x4294>
   199a8:	add	r2, r9, #6
   199ac:	sub	r0, r6, r2
   199b0:	cmp	r0, #2
   199b4:	blt	19c04 <main@@Base+0x3ec8>
   199b8:	ldrb	r0, [r2]
   199bc:	cmp	r0, #32
   199c0:	bls	19bf0 <main@@Base+0x3eb4>
   199c4:	mov	r1, r2
   199c8:	b	19c18 <main@@Base+0x3edc>
   199cc:	lsr	r1, r2, #24
   199d0:	and	r0, r2, #-16777216	; 0xff000000
   199d4:	cmp	r1, #120	; 0x78
   199d8:	bhi	19a68 <main@@Base+0x3d2c>
   199dc:	teq	r0, #2013265920	; 0x78000000
   199e0:	bne	1a19c <main@@Base+0x4460>
   199e4:	cmp	ip, #2
   199e8:	mov	r7, r9
   199ec:	blt	1a010 <main@@Base+0x42d4>
   199f0:	ldrb	r0, [r9, #1]
   199f4:	mov	r7, r9
   199f8:	cmp	r0, #34	; 0x22
   199fc:	bne	1a010 <main@@Base+0x42d4>
   19a00:	add	r1, r9, #2
   19a04:	sub	r0, r6, r1
   19a08:	cmp	r0, #2
   19a0c:	blt	19c80 <main@@Base+0x3f44>
   19a10:	ldrb	r0, [r1]
   19a14:	cmp	r0, #32
   19a18:	bls	19c68 <main@@Base+0x3f2c>
   19a1c:	ldr	r6, [sp, #36]	; 0x24
   19a20:	mov	r7, r1
   19a24:	b	19c90 <main@@Base+0x3f54>
   19a28:	cmp	ip, #6
   19a2c:	mov	r7, r9
   19a30:	blt	19e30 <main@@Base+0x40f4>
   19a34:	ldrb	r0, [r9, #5]
   19a38:	mov	r7, r9
   19a3c:	cmp	r0, #34	; 0x22
   19a40:	bne	19e30 <main@@Base+0x40f4>
   19a44:	add	r1, r9, #6
   19a48:	sub	r0, r6, r1
   19a4c:	cmp	r0, #2
   19a50:	blt	19b8c <main@@Base+0x3e50>
   19a54:	ldrb	r0, [r1]
   19a58:	cmp	r0, #32
   19a5c:	bls	19b78 <main@@Base+0x3e3c>
   19a60:	mov	r7, r1
   19a64:	b	19b9c <main@@Base+0x3e60>
   19a68:	teq	r0, #2030043136	; 0x79000000
   19a6c:	beq	19abc <main@@Base+0x3d80>
   19a70:	teq	r0, #2046820352	; 0x7a000000
   19a74:	bne	1a19c <main@@Base+0x4460>
   19a78:	cmp	ip, #2
   19a7c:	mov	r7, r9
   19a80:	blt	1a0a0 <main@@Base+0x4364>
   19a84:	ldrb	r0, [r9, #1]
   19a88:	mov	r7, r9
   19a8c:	cmp	r0, #34	; 0x22
   19a90:	bne	1a0a0 <main@@Base+0x4364>
   19a94:	add	r1, r9, #2
   19a98:	sub	r0, r6, r1
   19a9c:	cmp	r0, #2
   19aa0:	blt	19eb8 <main@@Base+0x417c>
   19aa4:	ldrb	r0, [r1]
   19aa8:	cmp	r0, #32
   19aac:	bls	19ea0 <main@@Base+0x4164>
   19ab0:	ldr	r6, [sp, #36]	; 0x24
   19ab4:	mov	r7, r1
   19ab8:	b	19ec8 <main@@Base+0x418c>
   19abc:	cmp	ip, #2
   19ac0:	mov	r7, r9
   19ac4:	blt	1a130 <main@@Base+0x43f4>
   19ac8:	ldrb	r0, [r9, #1]
   19acc:	mov	r7, r9
   19ad0:	cmp	r0, #34	; 0x22
   19ad4:	bne	1a130 <main@@Base+0x43f4>
   19ad8:	add	r1, r9, #2
   19adc:	sub	r0, r6, r1
   19ae0:	cmp	r0, #2
   19ae4:	blt	19f3c <main@@Base+0x4200>
   19ae8:	ldrb	r0, [r1]
   19aec:	cmp	r0, #32
   19af0:	bls	19f24 <main@@Base+0x41e8>
   19af4:	ldr	r6, [sp, #36]	; 0x24
   19af8:	mov	r7, r1
   19afc:	b	19f4c <main@@Base+0x4210>
   19b00:	bne	19b14 <main@@Base+0x3dd8>
   19b04:	mov	r7, r9
   19b08:	ldrb	r0, [r7, #7]!
   19b0c:	cmp	r0, #32
   19b10:	bhi	19b24 <main@@Base+0x3de8>
   19b14:	ldr	r0, [sp, #32]
   19b18:	mov	r2, r6
   19b1c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19b20:	mov	r7, r0
   19b24:	cmp	r7, r6
   19b28:	beq	19b60 <main@@Base+0x3e24>
   19b2c:	ldrb	r0, [r7]
   19b30:	cmp	r0, #58	; 0x3a
   19b34:	bne	19b60 <main@@Base+0x3e24>
   19b38:	add	r1, r7, #1
   19b3c:	sub	r0, r6, r1
   19b40:	cmp	r0, #2
   19b44:	blt	19cf8 <main@@Base+0x3fbc>
   19b48:	ldrb	r0, [r1]
   19b4c:	cmp	r0, #32
   19b50:	bls	19ce4 <main@@Base+0x3fa8>
   19b54:	ldr	r6, [sp, #36]	; 0x24
   19b58:	mov	r7, r1
   19b5c:	b	19d08 <main@@Base+0x3fcc>
   19b60:	ldr	r0, [sp, #32]
   19b64:	mov	r1, r7
   19b68:	mov	r2, r6
   19b6c:	mov	r3, #4
   19b70:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19b74:	b	19d04 <main@@Base+0x3fc8>
   19b78:	bne	19b8c <main@@Base+0x3e50>
   19b7c:	mov	r7, r9
   19b80:	ldrb	r0, [r7, #7]!
   19b84:	cmp	r0, #32
   19b88:	bhi	19b9c <main@@Base+0x3e60>
   19b8c:	ldr	r0, [sp, #32]
   19b90:	mov	r2, r6
   19b94:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19b98:	mov	r7, r0
   19b9c:	cmp	r7, r6
   19ba0:	beq	19bd8 <main@@Base+0x3e9c>
   19ba4:	ldrb	r0, [r7]
   19ba8:	cmp	r0, #58	; 0x3a
   19bac:	bne	19bd8 <main@@Base+0x3e9c>
   19bb0:	add	r1, r7, #1
   19bb4:	sub	r0, r6, r1
   19bb8:	cmp	r0, #2
   19bbc:	blt	19e20 <main@@Base+0x40e4>
   19bc0:	ldrb	r0, [r1]
   19bc4:	cmp	r0, #32
   19bc8:	bls	19e0c <main@@Base+0x40d0>
   19bcc:	ldr	r6, [sp, #36]	; 0x24
   19bd0:	mov	r7, r1
   19bd4:	b	19e30 <main@@Base+0x40f4>
   19bd8:	ldr	r0, [sp, #32]
   19bdc:	mov	r1, r7
   19be0:	mov	r2, r6
   19be4:	mov	r3, #4
   19be8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19bec:	b	19e2c <main@@Base+0x40f0>
   19bf0:	bne	19c04 <main@@Base+0x3ec8>
   19bf4:	mov	r1, r9
   19bf8:	ldrb	r0, [r1, #7]!
   19bfc:	cmp	r0, #32
   19c00:	bhi	19c18 <main@@Base+0x3edc>
   19c04:	ldr	r0, [sp, #32]
   19c08:	mov	r1, r2
   19c0c:	mov	r2, r6
   19c10:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19c14:	mov	r1, r0
   19c18:	cmp	r1, r6
   19c1c:	beq	19c54 <main@@Base+0x3f18>
   19c20:	ldrb	r0, [r1]
   19c24:	cmp	r0, #58	; 0x3a
   19c28:	bne	19c54 <main@@Base+0x3f18>
   19c2c:	add	r2, r1, #1
   19c30:	sub	r0, r6, r2
   19c34:	cmp	r0, #2
   19c38:	blt	19fbc <main@@Base+0x4280>
   19c3c:	ldrb	r0, [r2]
   19c40:	cmp	r0, #32
   19c44:	bls	19fa8 <main@@Base+0x426c>
   19c48:	ldr	r6, [sp, #36]	; 0x24
   19c4c:	mov	r1, r2
   19c50:	b	19fd0 <main@@Base+0x4294>
   19c54:	ldr	r0, [sp, #32]
   19c58:	mov	r2, r6
   19c5c:	mov	r3, #4
   19c60:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19c64:	b	19fcc <main@@Base+0x4290>
   19c68:	ldr	r6, [sp, #36]	; 0x24
   19c6c:	bne	19c80 <main@@Base+0x3f44>
   19c70:	mov	r7, r9
   19c74:	ldrb	r0, [r7, #3]!
   19c78:	cmp	r0, #32
   19c7c:	bhi	19c90 <main@@Base+0x3f54>
   19c80:	ldr	r0, [sp, #32]
   19c84:	mov	r2, r6
   19c88:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19c8c:	mov	r7, r0
   19c90:	cmp	r7, r6
   19c94:	beq	19ccc <main@@Base+0x3f90>
   19c98:	ldrb	r0, [r7]
   19c9c:	cmp	r0, #58	; 0x3a
   19ca0:	bne	19ccc <main@@Base+0x3f90>
   19ca4:	add	r1, r7, #1
   19ca8:	sub	r0, r6, r1
   19cac:	cmp	r0, #2
   19cb0:	blt	1a000 <main@@Base+0x42c4>
   19cb4:	ldrb	r0, [r1]
   19cb8:	cmp	r0, #32
   19cbc:	bls	19fec <main@@Base+0x42b0>
   19cc0:	ldr	r6, [sp, #36]	; 0x24
   19cc4:	mov	r7, r1
   19cc8:	b	1a010 <main@@Base+0x42d4>
   19ccc:	ldr	r0, [sp, #32]
   19cd0:	mov	r1, r7
   19cd4:	mov	r2, r6
   19cd8:	mov	r3, #4
   19cdc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19ce0:	b	1a00c <main@@Base+0x42d0>
   19ce4:	ldr	r6, [sp, #36]	; 0x24
   19ce8:	bne	19cf8 <main@@Base+0x3fbc>
   19cec:	ldrb	r0, [r7, #2]!
   19cf0:	cmp	r0, #32
   19cf4:	bhi	19d08 <main@@Base+0x3fcc>
   19cf8:	ldr	r0, [sp, #32]
   19cfc:	mov	r2, r6
   19d00:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19d04:	mov	r7, r0
   19d08:	cmp	r9, r7
   19d0c:	beq	1a19c <main@@Base+0x4460>
   19d10:	mov	r5, #0
   19d14:	cmp	r7, r6
   19d18:	str	r5, [fp, #-52]	; 0xffffffcc
   19d1c:	str	r5, [fp, #-56]	; 0xffffffc8
   19d20:	strb	r5, [sp, #60]	; 0x3c
   19d24:	str	r5, [sp, #48]	; 0x30
   19d28:	beq	19d84 <main@@Base+0x4048>
   19d2c:	sub	r0, fp, #56	; 0x38
   19d30:	mov	r1, r7
   19d34:	mov	r2, r6
   19d38:	add	r3, sp, #48	; 0x30
   19d3c:	str	r0, [sp]
   19d40:	ldr	r0, [sp, #32]
   19d44:	bl	334d0 <flatcc_json_parser_integer@@Base>
   19d48:	cmp	r0, r7
   19d4c:	beq	19d8c <main@@Base+0x4050>
   19d50:	ldr	r3, [sp, #48]	; 0x30
   19d54:	mov	r1, r0
   19d58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19d60:	cmp	r3, #0
   19d64:	beq	19d94 <main@@Base+0x4058>
   19d68:	subs	r3, r0, #129	; 0x81
   19d6c:	sbcs	r2, r2, #0
   19d70:	bcc	19db8 <main@@Base+0x407c>
   19d74:	ldr	r0, [sp, #32]
   19d78:	mov	r2, r6
   19d7c:	mov	r3, #8
   19d80:	b	19dac <main@@Base+0x4070>
   19d84:	mov	r1, r6
   19d88:	b	19dc8 <main@@Base+0x408c>
   19d8c:	mov	r1, r7
   19d90:	b	19dc8 <main@@Base+0x408c>
   19d94:	subs	r3, r0, #128	; 0x80
   19d98:	sbcs	r2, r2, #0
   19d9c:	bcc	19dc0 <main@@Base+0x4084>
   19da0:	ldr	r0, [sp, #32]
   19da4:	mov	r2, r6
   19da8:	mov	r3, #7
   19dac:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19db0:	mov	r1, r0
   19db4:	b	19dc8 <main@@Base+0x408c>
   19db8:	rsb	r5, r0, #0
   19dbc:	b	19dc4 <main@@Base+0x4088>
   19dc0:	mov	r5, r0
   19dc4:	strb	r5, [sp, #60]	; 0x3c
   19dc8:	cmp	r7, r1
   19dcc:	bne	19e04 <main@@Base+0x40c8>
   19dd0:	add	r0, sp, #60	; 0x3c
   19dd4:	movw	r3, #33160	; 0x8188
   19dd8:	mov	r1, r7
   19ddc:	mov	r2, r6
   19de0:	str	r0, [sp]
   19de4:	ldr	r0, [sp, #32]
   19de8:	movt	r3, #5
   19dec:	bl	210d0 <main@@Base+0xb394>
   19df0:	mov	r1, r0
   19df4:	cmp	r0, r7
   19df8:	cmpne	r1, r6
   19dfc:	beq	1a284 <main@@Base+0x4548>
   19e00:	ldrb	r5, [sp, #60]	; 0x3c
   19e04:	strb	r5, [sl, #24]
   19e08:	b	1a1b0 <main@@Base+0x4474>
   19e0c:	ldr	r6, [sp, #36]	; 0x24
   19e10:	bne	19e20 <main@@Base+0x40e4>
   19e14:	ldrb	r0, [r7, #2]!
   19e18:	cmp	r0, #32
   19e1c:	bhi	19e30 <main@@Base+0x40f4>
   19e20:	ldr	r0, [sp, #32]
   19e24:	mov	r2, r6
   19e28:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19e2c:	mov	r7, r0
   19e30:	cmp	r9, r7
   19e34:	beq	1a19c <main@@Base+0x4460>
   19e38:	mov	r0, #0
   19e3c:	mov	r1, r7
   19e40:	mov	r2, r6
   19e44:	sub	r3, fp, #56	; 0x38
   19e48:	str	r0, [fp, #-52]	; 0xffffffcc
   19e4c:	str	r0, [fp, #-56]	; 0xffffffc8
   19e50:	ldr	r0, [sp, #32]
   19e54:	bl	32a24 <flatcc_json_parser_double@@Base>
   19e58:	mov	r1, r0
   19e5c:	cmp	r7, r0
   19e60:	bne	19e94 <main@@Base+0x4158>
   19e64:	sub	r0, fp, #56	; 0x38
   19e68:	movw	r3, #33176	; 0x8198
   19e6c:	mov	r1, r7
   19e70:	mov	r2, r6
   19e74:	str	r0, [sp]
   19e78:	ldr	r0, [sp, #32]
   19e7c:	movt	r3, #5
   19e80:	bl	23a54 <main@@Base+0xdd18>
   19e84:	mov	r1, r0
   19e88:	cmp	r0, r7
   19e8c:	cmpne	r1, r6
   19e90:	beq	1a284 <main@@Base+0x4548>
   19e94:	vldr	d16, [fp, #-56]	; 0xffffffc8
   19e98:	vstr	d16, [sl, #16]
   19e9c:	b	1a1b0 <main@@Base+0x4474>
   19ea0:	ldr	r6, [sp, #36]	; 0x24
   19ea4:	bne	19eb8 <main@@Base+0x417c>
   19ea8:	mov	r7, r9
   19eac:	ldrb	r0, [r7, #3]!
   19eb0:	cmp	r0, #32
   19eb4:	bhi	19ec8 <main@@Base+0x418c>
   19eb8:	ldr	r0, [sp, #32]
   19ebc:	mov	r2, r6
   19ec0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19ec4:	mov	r7, r0
   19ec8:	cmp	r7, r6
   19ecc:	beq	19f08 <main@@Base+0x41cc>
   19ed0:	ldrb	r0, [r7]
   19ed4:	cmp	r0, #58	; 0x3a
   19ed8:	bne	19f08 <main@@Base+0x41cc>
   19edc:	ldr	r6, [sp, #36]	; 0x24
   19ee0:	add	r1, r7, #1
   19ee4:	sub	r0, r6, r1
   19ee8:	cmp	r0, #2
   19eec:	blt	1a090 <main@@Base+0x4354>
   19ef0:	ldrb	r0, [r1]
   19ef4:	cmp	r0, #32
   19ef8:	bls	1a07c <main@@Base+0x4340>
   19efc:	ldr	r6, [sp, #36]	; 0x24
   19f00:	mov	r7, r1
   19f04:	b	1a0a0 <main@@Base+0x4364>
   19f08:	ldr	r6, [sp, #36]	; 0x24
   19f0c:	ldr	r0, [sp, #32]
   19f10:	mov	r1, r7
   19f14:	mov	r3, #4
   19f18:	mov	r2, r6
   19f1c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19f20:	b	1a09c <main@@Base+0x4360>
   19f24:	ldr	r6, [sp, #36]	; 0x24
   19f28:	bne	19f3c <main@@Base+0x4200>
   19f2c:	mov	r7, r9
   19f30:	ldrb	r0, [r7, #3]!
   19f34:	cmp	r0, #32
   19f38:	bhi	19f4c <main@@Base+0x4210>
   19f3c:	ldr	r0, [sp, #32]
   19f40:	mov	r2, r6
   19f44:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19f48:	mov	r7, r0
   19f4c:	cmp	r7, r6
   19f50:	beq	19f8c <main@@Base+0x4250>
   19f54:	ldrb	r0, [r7]
   19f58:	cmp	r0, #58	; 0x3a
   19f5c:	bne	19f8c <main@@Base+0x4250>
   19f60:	ldr	r6, [sp, #36]	; 0x24
   19f64:	add	r1, r7, #1
   19f68:	sub	r0, r6, r1
   19f6c:	cmp	r0, #2
   19f70:	blt	1a120 <main@@Base+0x43e4>
   19f74:	ldrb	r0, [r1]
   19f78:	cmp	r0, #32
   19f7c:	bls	1a10c <main@@Base+0x43d0>
   19f80:	ldr	r6, [sp, #36]	; 0x24
   19f84:	mov	r7, r1
   19f88:	b	1a130 <main@@Base+0x43f4>
   19f8c:	ldr	r6, [sp, #36]	; 0x24
   19f90:	ldr	r0, [sp, #32]
   19f94:	mov	r1, r7
   19f98:	mov	r3, #4
   19f9c:	mov	r2, r6
   19fa0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   19fa4:	b	1a12c <main@@Base+0x43f0>
   19fa8:	ldr	r6, [sp, #36]	; 0x24
   19fac:	bne	19fbc <main@@Base+0x4280>
   19fb0:	ldrb	r0, [r1, #2]!
   19fb4:	cmp	r0, #32
   19fb8:	bhi	19fd0 <main@@Base+0x4294>
   19fbc:	ldr	r0, [sp, #32]
   19fc0:	mov	r1, r2
   19fc4:	mov	r2, r6
   19fc8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   19fcc:	mov	r1, r0
   19fd0:	cmp	r9, r1
   19fd4:	beq	1a19c <main@@Base+0x4460>
   19fd8:	ldr	r0, [sp, #32]
   19fdc:	ldr	r3, [sp, #16]
   19fe0:	mov	r2, r6
   19fe4:	bl	21658 <main@@Base+0xb91c>
   19fe8:	b	1a1ac <main@@Base+0x4470>
   19fec:	ldr	r6, [sp, #36]	; 0x24
   19ff0:	bne	1a000 <main@@Base+0x42c4>
   19ff4:	ldrb	r0, [r7, #2]!
   19ff8:	cmp	r0, #32
   19ffc:	bhi	1a010 <main@@Base+0x42d4>
   1a000:	ldr	r0, [sp, #32]
   1a004:	mov	r2, r6
   1a008:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a00c:	mov	r7, r0
   1a010:	cmp	r9, r7
   1a014:	beq	1a19c <main@@Base+0x4460>
   1a018:	mov	r0, #0
   1a01c:	mov	r1, r7
   1a020:	mov	r2, r6
   1a024:	sub	r3, fp, #56	; 0x38
   1a028:	str	r0, [fp, #-56]	; 0xffffffc8
   1a02c:	ldr	r0, [sp, #32]
   1a030:	bl	33390 <flatcc_json_parser_float@@Base>
   1a034:	mov	r1, r0
   1a038:	cmp	r7, r0
   1a03c:	bne	1a070 <main@@Base+0x4334>
   1a040:	sub	r0, fp, #56	; 0x38
   1a044:	movw	r3, #33188	; 0x81a4
   1a048:	mov	r1, r7
   1a04c:	mov	r2, r6
   1a050:	str	r0, [sp]
   1a054:	ldr	r0, [sp, #32]
   1a058:	movt	r3, #5
   1a05c:	bl	23194 <main@@Base+0xd458>
   1a060:	mov	r1, r0
   1a064:	cmp	r0, r7
   1a068:	cmpne	r1, r6
   1a06c:	beq	1a284 <main@@Base+0x4548>
   1a070:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a074:	str	r0, [sl]
   1a078:	b	1a1b0 <main@@Base+0x4474>
   1a07c:	ldr	r6, [sp, #36]	; 0x24
   1a080:	bne	1a090 <main@@Base+0x4354>
   1a084:	ldrb	r0, [r7, #2]!
   1a088:	cmp	r0, #32
   1a08c:	bhi	1a0a0 <main@@Base+0x4364>
   1a090:	ldr	r0, [sp, #32]
   1a094:	mov	r2, r6
   1a098:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a09c:	mov	r7, r0
   1a0a0:	cmp	r9, r7
   1a0a4:	beq	1a19c <main@@Base+0x4460>
   1a0a8:	mov	r0, #0
   1a0ac:	mov	r1, r7
   1a0b0:	mov	r2, r6
   1a0b4:	sub	r3, fp, #56	; 0x38
   1a0b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a0bc:	ldr	r0, [sp, #32]
   1a0c0:	bl	33390 <flatcc_json_parser_float@@Base>
   1a0c4:	mov	r1, r0
   1a0c8:	cmp	r7, r0
   1a0cc:	bne	1a100 <main@@Base+0x43c4>
   1a0d0:	sub	r0, fp, #56	; 0x38
   1a0d4:	movw	r3, #33200	; 0x81b0
   1a0d8:	mov	r1, r7
   1a0dc:	mov	r2, r6
   1a0e0:	str	r0, [sp]
   1a0e4:	ldr	r0, [sp, #32]
   1a0e8:	movt	r3, #5
   1a0ec:	bl	23194 <main@@Base+0xd458>
   1a0f0:	mov	r1, r0
   1a0f4:	cmp	r0, r7
   1a0f8:	cmpne	r1, r6
   1a0fc:	beq	1a284 <main@@Base+0x4548>
   1a100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a104:	str	r0, [sl, #8]
   1a108:	b	1a1b0 <main@@Base+0x4474>
   1a10c:	ldr	r6, [sp, #36]	; 0x24
   1a110:	bne	1a120 <main@@Base+0x43e4>
   1a114:	ldrb	r0, [r7, #2]!
   1a118:	cmp	r0, #32
   1a11c:	bhi	1a130 <main@@Base+0x43f4>
   1a120:	ldr	r0, [sp, #32]
   1a124:	mov	r2, r6
   1a128:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a12c:	mov	r7, r0
   1a130:	cmp	r9, r7
   1a134:	beq	1a19c <main@@Base+0x4460>
   1a138:	mov	r0, #0
   1a13c:	mov	r1, r7
   1a140:	mov	r2, r6
   1a144:	sub	r3, fp, #56	; 0x38
   1a148:	str	r0, [fp, #-56]	; 0xffffffc8
   1a14c:	ldr	r0, [sp, #32]
   1a150:	bl	33390 <flatcc_json_parser_float@@Base>
   1a154:	mov	r1, r0
   1a158:	cmp	r7, r0
   1a15c:	bne	1a190 <main@@Base+0x4454>
   1a160:	sub	r0, fp, #56	; 0x38
   1a164:	movw	r3, #33212	; 0x81bc
   1a168:	mov	r1, r7
   1a16c:	mov	r2, r6
   1a170:	str	r0, [sp]
   1a174:	ldr	r0, [sp, #32]
   1a178:	movt	r3, #5
   1a17c:	bl	23194 <main@@Base+0xd458>
   1a180:	mov	r1, r0
   1a184:	cmp	r0, r7
   1a188:	cmpne	r1, r6
   1a18c:	beq	1a284 <main@@Base+0x4548>
   1a190:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a194:	str	r0, [sl, #4]
   1a198:	b	1a1b0 <main@@Base+0x4474>
   1a19c:	ldr	r0, [sp, #32]
   1a1a0:	mov	r1, r9
   1a1a4:	mov	r2, r6
   1a1a8:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   1a1ac:	mov	r1, r0
   1a1b0:	sub	r0, r6, r1
   1a1b4:	cmp	r0, #2
   1a1b8:	blt	1a1e4 <main@@Base+0x44a8>
   1a1bc:	ldrb	r0, [r1]
   1a1c0:	cmp	r0, #32
   1a1c4:	bls	1a1d0 <main@@Base+0x4494>
   1a1c8:	mov	r2, r1
   1a1cc:	b	1a1f4 <main@@Base+0x44b8>
   1a1d0:	bne	1a1e4 <main@@Base+0x44a8>
   1a1d4:	mov	r2, r1
   1a1d8:	ldrb	r0, [r2, #1]!
   1a1dc:	cmp	r0, #32
   1a1e0:	bhi	1a1f4 <main@@Base+0x44b8>
   1a1e4:	ldr	r0, [sp, #32]
   1a1e8:	mov	r2, r6
   1a1ec:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a1f0:	mov	r2, r0
   1a1f4:	cmp	r2, r6
   1a1f8:	beq	1a29c <main@@Base+0x4560>
   1a1fc:	ldrb	r0, [r2]
   1a200:	cmp	r0, #44	; 0x2c
   1a204:	bne	1a2a8 <main@@Base+0x456c>
   1a208:	add	r1, r2, #1
   1a20c:	sub	r0, r6, r1
   1a210:	cmp	r0, #2
   1a214:	blt	1a23c <main@@Base+0x4500>
   1a218:	ldrb	r0, [r1]
   1a21c:	cmp	r0, #32
   1a220:	bls	1a22c <main@@Base+0x44f0>
   1a224:	mov	r2, r1
   1a228:	b	1a24c <main@@Base+0x4510>
   1a22c:	bne	1a23c <main@@Base+0x4500>
   1a230:	ldrb	r0, [r2, #2]!
   1a234:	cmp	r0, #32
   1a238:	bhi	1a24c <main@@Base+0x4510>
   1a23c:	ldr	r0, [sp, #32]
   1a240:	mov	r2, r6
   1a244:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a248:	mov	r2, r0
   1a24c:	cmp	r2, r6
   1a250:	beq	1a2e0 <main@@Base+0x45a4>
   1a254:	ldrb	r0, [r2]
   1a258:	cmp	r0, #125	; 0x7d
   1a25c:	bne	19804 <main@@Base+0x3ac8>
   1a260:	ldr	sl, [sp, #32]
   1a264:	add	r1, r2, #1
   1a268:	sub	r0, r6, r1
   1a26c:	cmp	r0, #2
   1a270:	blt	1ce68 <main@@Base+0x712c>
   1a274:	ldrb	r0, [r1]
   1a278:	cmp	r0, #32
   1a27c:	bls	1ce54 <main@@Base+0x7118>
   1a280:	b	1a2d8 <main@@Base+0x459c>
   1a284:	ldr	sl, [sp, #32]
   1a288:	ldr	r6, [sp, #36]	; 0x24
   1a28c:	mov	r3, #33	; 0x21
   1a290:	mov	r0, sl
   1a294:	mov	r2, r6
   1a298:	b	19784 <main@@Base+0x3a48>
   1a29c:	ldr	sl, [sp, #32]
   1a2a0:	mov	r9, r6
   1a2a4:	b	1e158 <main@@Base+0x841c>
   1a2a8:	ldr	sl, [sp, #32]
   1a2ac:	cmp	r0, #125	; 0x7d
   1a2b0:	bne	1ab74 <main@@Base+0x4e38>
   1a2b4:	add	r1, r2, #1
   1a2b8:	sub	r0, r6, r1
   1a2bc:	cmp	r0, #2
   1a2c0:	blt	1ce68 <main@@Base+0x712c>
   1a2c4:	ldrb	r0, [r1]
   1a2c8:	cmp	r0, #32
   1a2cc:	bls	1ce4c <main@@Base+0x7110>
   1a2d0:	ldr	r6, [sp, #36]	; 0x24
   1a2d4:	ldr	sl, [sp, #32]
   1a2d8:	mov	r9, r1
   1a2dc:	b	1e158 <main@@Base+0x841c>
   1a2e0:	ldr	sl, [sp, #32]
   1a2e4:	mov	r1, r6
   1a2e8:	mov	r0, sl
   1a2ec:	b	1ab7c <main@@Base+0x4e40>
   1a2f0:	bne	1a300 <main@@Base+0x45c4>
   1a2f4:	ldrb	r0, [r7, #2]!
   1a2f8:	cmp	r0, #32
   1a2fc:	bhi	1a310 <main@@Base+0x45d4>
   1a300:	mov	r0, sl
   1a304:	mov	r2, r6
   1a308:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a30c:	mov	r7, r0
   1a310:	cmp	r8, r7
   1a314:	beq	18ec8 <main@@Base+0x318c>
   1a318:	mov	r0, #0
   1a31c:	mov	r1, r7
   1a320:	mov	r2, r6
   1a324:	sub	r3, fp, #56	; 0x38
   1a328:	str	r0, [fp, #-56]	; 0xffffffc8
   1a32c:	mov	r0, sl
   1a330:	bl	33390 <flatcc_json_parser_float@@Base>
   1a334:	mov	r9, r0
   1a338:	cmp	r7, r0
   1a33c:	bne	1a370 <main@@Base+0x4634>
   1a340:	movw	r3, #32992	; 0x80e0
   1a344:	sub	r0, fp, #56	; 0x38
   1a348:	mov	r1, r7
   1a34c:	mov	r2, r6
   1a350:	str	r0, [sp]
   1a354:	mov	r0, sl
   1a358:	movt	r3, #5
   1a35c:	bl	23194 <main@@Base+0xd458>
   1a360:	mov	r9, r0
   1a364:	cmp	r0, r7
   1a368:	cmpne	r9, r6
   1a36c:	beq	1f334 <main@@Base+0x95f8>
   1a370:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1a374:	vcmp.f32	s0, s16
   1a378:	vmrs	APSR_nzcv, fpscr
   1a37c:	bne	1a38c <main@@Base+0x4650>
   1a380:	ldrb	r0, [sl, #8]
   1a384:	tst	r0, #2
   1a388:	beq	1e158 <main@@Base+0x841c>
   1a38c:	ldr	r0, [sl]
   1a390:	mov	r1, #26
   1a394:	b	17fec <main@@Base+0x22b0>
   1a398:	ldr	r4, [sp, #36]	; 0x24
   1a39c:	bne	1a3b0 <main@@Base+0x4674>
   1a3a0:	mov	r6, r8
   1a3a4:	ldrb	r0, [r6, #18]!
   1a3a8:	cmp	r0, #32
   1a3ac:	bhi	1a3c0 <main@@Base+0x4684>
   1a3b0:	mov	r0, sl
   1a3b4:	mov	r2, r4
   1a3b8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a3bc:	mov	r6, r0
   1a3c0:	cmp	r6, r4
   1a3c4:	beq	1a400 <main@@Base+0x46c4>
   1a3c8:	ldrb	r0, [r6]
   1a3cc:	cmp	r0, #58	; 0x3a
   1a3d0:	bne	1a400 <main@@Base+0x46c4>
   1a3d4:	ldr	r0, [sp, #36]	; 0x24
   1a3d8:	add	r1, r6, #1
   1a3dc:	sub	r0, r0, r1
   1a3e0:	cmp	r0, #2
   1a3e4:	blt	1c034 <main@@Base+0x62f8>
   1a3e8:	ldrb	r0, [r1]
   1a3ec:	cmp	r0, #32
   1a3f0:	bls	1c020 <main@@Base+0x62e4>
   1a3f4:	ldr	sl, [sp, #32]
   1a3f8:	mov	r6, r1
   1a3fc:	b	1c044 <main@@Base+0x6308>
   1a400:	ldr	r2, [sp, #36]	; 0x24
   1a404:	mov	r0, sl
   1a408:	mov	r1, r6
   1a40c:	mov	r3, #4
   1a410:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1a414:	b	1c040 <main@@Base+0x6304>
   1a418:	ldr	r4, [sp, #36]	; 0x24
   1a41c:	bne	1a430 <main@@Base+0x46f4>
   1a420:	mov	r6, r8
   1a424:	ldrb	r0, [r6, #18]!
   1a428:	cmp	r0, #32
   1a42c:	bhi	1a440 <main@@Base+0x4704>
   1a430:	mov	r0, sl
   1a434:	mov	r2, r4
   1a438:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a43c:	mov	r6, r0
   1a440:	cmp	r6, r4
   1a444:	beq	1a480 <main@@Base+0x4744>
   1a448:	ldrb	r0, [r6]
   1a44c:	cmp	r0, #58	; 0x3a
   1a450:	bne	1a480 <main@@Base+0x4744>
   1a454:	ldr	r0, [sp, #36]	; 0x24
   1a458:	add	r1, r6, #1
   1a45c:	sub	r0, r0, r1
   1a460:	cmp	r0, #2
   1a464:	blt	1c1f4 <main@@Base+0x64b8>
   1a468:	ldrb	r0, [r1]
   1a46c:	cmp	r0, #32
   1a470:	bls	1c1e0 <main@@Base+0x64a4>
   1a474:	ldr	sl, [sp, #32]
   1a478:	mov	r6, r1
   1a47c:	b	1c204 <main@@Base+0x64c8>
   1a480:	ldr	r2, [sp, #36]	; 0x24
   1a484:	mov	r0, sl
   1a488:	mov	r1, r6
   1a48c:	mov	r3, #4
   1a490:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1a494:	b	1c200 <main@@Base+0x64c4>
   1a498:	mov	r0, sl
   1a49c:	mov	r1, r8
   1a4a0:	mov	r2, r6
   1a4a4:	mov	r3, #9
   1a4a8:	b	18ee4 <main@@Base+0x31a8>
   1a4ac:	bne	1a4bc <main@@Base+0x4780>
   1a4b0:	ldrb	r0, [r6, #2]!
   1a4b4:	cmp	r0, #32
   1a4b8:	bhi	1a4cc <main@@Base+0x4790>
   1a4bc:	ldr	r2, [sp, #36]	; 0x24
   1a4c0:	mov	r0, sl
   1a4c4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a4c8:	mov	r6, r0
   1a4cc:	cmp	r9, r6
   1a4d0:	beq	1a54c <main@@Base+0x4810>
   1a4d4:	ldr	r2, [sp, #36]	; 0x24
   1a4d8:	mov	r4, #0
   1a4dc:	str	r4, [fp, #-52]	; 0xffffffcc
   1a4e0:	str	r4, [fp, #-56]	; 0xffffffc8
   1a4e4:	str	r4, [sp, #60]	; 0x3c
   1a4e8:	str	r4, [sp, #48]	; 0x30
   1a4ec:	cmp	r6, r2
   1a4f0:	beq	1a5bc <main@@Base+0x4880>
   1a4f4:	sub	r0, fp, #56	; 0x38
   1a4f8:	mov	r1, r6
   1a4fc:	add	r3, sp, #48	; 0x30
   1a500:	str	r0, [sp]
   1a504:	mov	r0, sl
   1a508:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1a50c:	cmp	r0, r6
   1a510:	beq	1a5c4 <main@@Base+0x4888>
   1a514:	ldr	r2, [sp, #48]	; 0x30
   1a518:	mov	r9, r0
   1a51c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a520:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a524:	cmp	r2, #0
   1a528:	beq	1a5cc <main@@Base+0x4890>
   1a52c:	subs	r2, r0, #-2147483647	; 0x80000001
   1a530:	sbcs	r1, r1, #0
   1a534:	bcc	1a5f4 <main@@Base+0x48b8>
   1a538:	ldr	r2, [sp, #36]	; 0x24
   1a53c:	mov	r0, sl
   1a540:	mov	r1, r9
   1a544:	mov	r3, #8
   1a548:	b	1a5e8 <main@@Base+0x48ac>
   1a54c:	ldr	r6, [sp, #36]	; 0x24
   1a550:	add	r7, r8, #16
   1a554:	mov	r1, #8
   1a558:	mov	r2, #-268435456	; 0xf0000000
   1a55c:	sub	r0, r6, r7
   1a560:	cmp	r0, #8
   1a564:	movcc	r1, r0
   1a568:	add	r1, r2, r1, lsl #28
   1a56c:	asr	r1, r1, #28
   1a570:	cmp	r1, #0
   1a574:	blt	1e144 <main@@Base+0x8408>
   1a578:	ldrb	r1, [r7]
   1a57c:	cmp	r1, #97	; 0x61
   1a580:	bne	1e144 <main@@Base+0x8408>
   1a584:	cmp	r0, #2
   1a588:	blt	1e144 <main@@Base+0x8408>
   1a58c:	ldrb	r0, [r8, #17]
   1a590:	cmp	r0, #34	; 0x22
   1a594:	bne	1e144 <main@@Base+0x8408>
   1a598:	add	r1, r8, #18
   1a59c:	sub	r0, r6, r1
   1a5a0:	cmp	r0, #2
   1a5a4:	blt	1a684 <main@@Base+0x4948>
   1a5a8:	ldrb	r0, [r1]
   1a5ac:	cmp	r0, #32
   1a5b0:	bls	1a674 <main@@Base+0x4938>
   1a5b4:	mov	r8, r1
   1a5b8:	b	1a694 <main@@Base+0x4958>
   1a5bc:	mov	r9, r2
   1a5c0:	b	1ad54 <main@@Base+0x5018>
   1a5c4:	mov	r9, r6
   1a5c8:	b	1ad54 <main@@Base+0x5018>
   1a5cc:	subs	r2, r0, #-2147483648	; 0x80000000
   1a5d0:	sbcs	r1, r1, #0
   1a5d4:	bcc	1ad4c <main@@Base+0x5010>
   1a5d8:	ldr	r2, [sp, #36]	; 0x24
   1a5dc:	mov	r0, sl
   1a5e0:	mov	r1, r9
   1a5e4:	mov	r3, #7
   1a5e8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1a5ec:	mov	r9, r0
   1a5f0:	b	1ad54 <main@@Base+0x5018>
   1a5f4:	rsb	r4, r0, #0
   1a5f8:	b	1ad50 <main@@Base+0x5014>
   1a5fc:	bne	1a60c <main@@Base+0x48d0>
   1a600:	ldrb	r0, [r8, #19]!
   1a604:	cmp	r0, #32
   1a608:	bhi	1a61c <main@@Base+0x48e0>
   1a60c:	mov	r0, sl
   1a610:	mov	r2, r6
   1a614:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a618:	mov	r8, r0
   1a61c:	cmp	r8, r6
   1a620:	beq	1a65c <main@@Base+0x4920>
   1a624:	ldrb	r0, [r8]
   1a628:	cmp	r0, #58	; 0x3a
   1a62c:	bne	1a65c <main@@Base+0x4920>
   1a630:	add	r1, r8, #1
   1a634:	sub	r0, r6, r1
   1a638:	cmp	r0, #2
   1a63c:	blt	1c3ec <main@@Base+0x66b0>
   1a640:	ldrb	r0, [r1]
   1a644:	cmp	r0, #32
   1a648:	bls	1c3d4 <main@@Base+0x6698>
   1a64c:	ldr	r6, [sp, #36]	; 0x24
   1a650:	ldr	sl, [sp, #32]
   1a654:	mov	r8, r1
   1a658:	b	1c3fc <main@@Base+0x66c0>
   1a65c:	mov	r0, sl
   1a660:	mov	r1, r8
   1a664:	mov	r2, r6
   1a668:	mov	r3, #4
   1a66c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1a670:	b	1c3f8 <main@@Base+0x66bc>
   1a674:	bne	1a684 <main@@Base+0x4948>
   1a678:	ldrb	r0, [r8, #19]!
   1a67c:	cmp	r0, #32
   1a680:	bhi	1a694 <main@@Base+0x4958>
   1a684:	mov	r0, sl
   1a688:	mov	r2, r6
   1a68c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a690:	mov	r8, r0
   1a694:	cmp	r8, r6
   1a698:	beq	1a6d4 <main@@Base+0x4998>
   1a69c:	ldrb	r0, [r8]
   1a6a0:	cmp	r0, #58	; 0x3a
   1a6a4:	bne	1a6d4 <main@@Base+0x4998>
   1a6a8:	add	r1, r8, #1
   1a6ac:	sub	r0, r6, r1
   1a6b0:	cmp	r0, #2
   1a6b4:	blt	1c5a0 <main@@Base+0x6864>
   1a6b8:	ldrb	r0, [r1]
   1a6bc:	cmp	r0, #32
   1a6c0:	bls	1c588 <main@@Base+0x684c>
   1a6c4:	ldr	r6, [sp, #36]	; 0x24
   1a6c8:	ldr	sl, [sp, #32]
   1a6cc:	mov	r8, r1
   1a6d0:	b	1c5b0 <main@@Base+0x6874>
   1a6d4:	mov	r0, sl
   1a6d8:	mov	r1, r8
   1a6dc:	mov	r2, r6
   1a6e0:	mov	r3, #4
   1a6e4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1a6e8:	b	1c5ac <main@@Base+0x6870>
   1a6ec:	bne	1a6fc <main@@Base+0x49c0>
   1a6f0:	ldrb	r0, [r8, #2]!
   1a6f4:	cmp	r0, #32
   1a6f8:	bhi	1a70c <main@@Base+0x49d0>
   1a6fc:	mov	r0, sl
   1a700:	mov	r2, r6
   1a704:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a708:	mov	r8, r0
   1a70c:	cmp	r8, r6
   1a710:	mov	r5, r6
   1a714:	beq	1a754 <main@@Base+0x4a18>
   1a718:	ldrb	r0, [r8]
   1a71c:	cmp	r0, #93	; 0x5d
   1a720:	bne	1a750 <main@@Base+0x4a14>
   1a724:	add	r1, r8, #1
   1a728:	sub	r0, r6, r1
   1a72c:	cmp	r0, #2
   1a730:	blt	1c3c4 <main@@Base+0x6688>
   1a734:	ldrb	r0, [r1]
   1a738:	cmp	r0, #32
   1a73c:	bls	1c3ac <main@@Base+0x6670>
   1a740:	ldr	r6, [sp, #36]	; 0x24
   1a744:	ldr	sl, [sp, #32]
   1a748:	mov	r8, r1
   1a74c:	b	19494 <main@@Base+0x3758>
   1a750:	mov	r5, r8
   1a754:	mov	r0, #0
   1a758:	mov	r1, #1
   1a75c:	strb	r0, [sp, #60]	; 0x3c
   1a760:	ldr	r0, [sl]
   1a764:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1a768:	cmp	r0, #0
   1a76c:	beq	1f344 <main@@Base+0x9608>
   1a770:	mov	r7, r0
   1a774:	mov	r8, r5
   1a778:	sub	r0, r6, r8
   1a77c:	cmp	r0, #4
   1a780:	blt	1a7bc <main@@Base+0x4a80>
   1a784:	ldr	r1, [r8]
   1a788:	movw	r2, #29300	; 0x7274
   1a78c:	movt	r2, #25973	; 0x6575
   1a790:	cmp	r1, r2
   1a794:	beq	1a820 <main@@Base+0x4ae4>
   1a798:	cmp	r0, #5
   1a79c:	blt	1a7bc <main@@Base+0x4a80>
   1a7a0:	movw	r1, #15817	; 0x3dc9
   1a7a4:	mov	r0, r8
   1a7a8:	mov	r2, #5
   1a7ac:	movt	r1, #4
   1a7b0:	bl	14e6c <memcmp@plt>
   1a7b4:	cmp	r0, #0
   1a7b8:	beq	1a980 <main@@Base+0x4c44>
   1a7bc:	mov	r5, #0
   1a7c0:	cmp	r8, r6
   1a7c4:	str	r5, [fp, #-52]	; 0xffffffcc
   1a7c8:	str	r5, [fp, #-56]	; 0xffffffc8
   1a7cc:	str	r5, [sp, #48]	; 0x30
   1a7d0:	beq	1a818 <main@@Base+0x4adc>
   1a7d4:	sub	r0, fp, #56	; 0x38
   1a7d8:	mov	r1, r8
   1a7dc:	mov	r2, r6
   1a7e0:	add	r3, sp, #48	; 0x30
   1a7e4:	str	r0, [sp]
   1a7e8:	mov	r0, sl
   1a7ec:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1a7f0:	cmp	r0, r8
   1a7f4:	beq	1a82c <main@@Base+0x4af0>
   1a7f8:	mov	r1, r0
   1a7fc:	ldr	r0, [sp, #48]	; 0x30
   1a800:	cmp	r0, #0
   1a804:	beq	1a834 <main@@Base+0x4af8>
   1a808:	mov	r0, sl
   1a80c:	mov	r2, r6
   1a810:	mov	r3, #8
   1a814:	b	1a854 <main@@Base+0x4b18>
   1a818:	mov	r1, r6
   1a81c:	b	1a85c <main@@Base+0x4b20>
   1a820:	mov	r0, #1
   1a824:	add	r1, r8, #4
   1a828:	b	1a868 <main@@Base+0x4b2c>
   1a82c:	mov	r1, r8
   1a830:	b	1a85c <main@@Base+0x4b20>
   1a834:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a838:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a83c:	subs	r3, r0, #256	; 0x100
   1a840:	sbcs	r2, r2, #0
   1a844:	bcc	1a98c <main@@Base+0x4c50>
   1a848:	mov	r0, sl
   1a84c:	mov	r2, r6
   1a850:	mov	r3, #7
   1a854:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1a858:	mov	r1, r0
   1a85c:	uxtb	r0, r5
   1a860:	cmp	r0, #0
   1a864:	movwne	r0, #1
   1a868:	strb	r0, [sp, #60]	; 0x3c
   1a86c:	cmp	r8, r1
   1a870:	bne	1a8a8 <main@@Base+0x4b6c>
   1a874:	movw	r3, #32968	; 0x80c8
   1a878:	add	r0, sp, #60	; 0x3c
   1a87c:	mov	r1, r8
   1a880:	mov	r2, r6
   1a884:	str	r0, [sp]
   1a888:	mov	r0, sl
   1a88c:	movt	r3, #5
   1a890:	bl	22fe8 <main@@Base+0xd2ac>
   1a894:	mov	r1, r0
   1a898:	cmp	r0, r8
   1a89c:	cmpne	r1, r6
   1a8a0:	beq	1f318 <main@@Base+0x95dc>
   1a8a4:	ldrb	r0, [sp, #60]	; 0x3c
   1a8a8:	strb	r0, [r7]
   1a8ac:	sub	r0, r6, r1
   1a8b0:	cmp	r0, #2
   1a8b4:	blt	1a8e0 <main@@Base+0x4ba4>
   1a8b8:	ldrb	r0, [r1]
   1a8bc:	cmp	r0, #32
   1a8c0:	bls	1a8cc <main@@Base+0x4b90>
   1a8c4:	mov	r8, r1
   1a8c8:	b	1a8f0 <main@@Base+0x4bb4>
   1a8cc:	bne	1a8e0 <main@@Base+0x4ba4>
   1a8d0:	mov	r8, r1
   1a8d4:	ldrb	r0, [r8, #1]!
   1a8d8:	cmp	r0, #32
   1a8dc:	bhi	1a8f0 <main@@Base+0x4bb4>
   1a8e0:	mov	r0, sl
   1a8e4:	mov	r2, r6
   1a8e8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a8ec:	mov	r8, r0
   1a8f0:	cmp	r8, r6
   1a8f4:	beq	1ce1c <main@@Base+0x70e0>
   1a8f8:	ldrb	r0, [r8]
   1a8fc:	cmp	r0, #44	; 0x2c
   1a900:	bne	1ce24 <main@@Base+0x70e8>
   1a904:	add	r1, r8, #1
   1a908:	sub	r0, r6, r1
   1a90c:	cmp	r0, #2
   1a910:	blt	1a938 <main@@Base+0x4bfc>
   1a914:	ldrb	r0, [r1]
   1a918:	cmp	r0, #32
   1a91c:	bls	1a928 <main@@Base+0x4bec>
   1a920:	mov	r8, r1
   1a924:	b	1a948 <main@@Base+0x4c0c>
   1a928:	bne	1a938 <main@@Base+0x4bfc>
   1a92c:	ldrb	r0, [r8, #2]!
   1a930:	cmp	r0, #32
   1a934:	bhi	1a948 <main@@Base+0x4c0c>
   1a938:	mov	r0, sl
   1a93c:	mov	r2, r6
   1a940:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a944:	mov	r8, r0
   1a948:	cmp	r8, r6
   1a94c:	beq	1ce40 <main@@Base+0x7104>
   1a950:	ldrb	r0, [r8]
   1a954:	cmp	r0, #93	; 0x5d
   1a958:	beq	1a724 <main@@Base+0x49e8>
   1a95c:	mov	r0, #0
   1a960:	mov	r1, #1
   1a964:	strb	r0, [sp, #60]	; 0x3c
   1a968:	ldr	r0, [sl]
   1a96c:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1a970:	mov	r7, r0
   1a974:	cmp	r0, #0
   1a978:	bne	1a778 <main@@Base+0x4a3c>
   1a97c:	b	1662c <main@@Base+0x8f0>
   1a980:	mov	r0, #0
   1a984:	add	r1, r8, #5
   1a988:	b	1a868 <main@@Base+0x4b2c>
   1a98c:	mov	r5, r0
   1a990:	b	1a85c <main@@Base+0x4b20>
   1a994:	bne	1a9a4 <main@@Base+0x4c68>
   1a998:	ldrb	r0, [r8, #17]!
   1a99c:	cmp	r0, #32
   1a9a0:	bhi	1a9b4 <main@@Base+0x4c78>
   1a9a4:	mov	r0, sl
   1a9a8:	mov	r2, r6
   1a9ac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1a9b0:	mov	r8, r0
   1a9b4:	cmp	r8, r6
   1a9b8:	beq	1a9f4 <main@@Base+0x4cb8>
   1a9bc:	ldrb	r0, [r8]
   1a9c0:	cmp	r0, #58	; 0x3a
   1a9c4:	bne	1a9f4 <main@@Base+0x4cb8>
   1a9c8:	add	r1, r8, #1
   1a9cc:	sub	r0, r6, r1
   1a9d0:	cmp	r0, #2
   1a9d4:	blt	1c83c <main@@Base+0x6b00>
   1a9d8:	ldrb	r0, [r1]
   1a9dc:	cmp	r0, #32
   1a9e0:	bls	1c824 <main@@Base+0x6ae8>
   1a9e4:	ldr	r6, [sp, #36]	; 0x24
   1a9e8:	ldr	sl, [sp, #32]
   1a9ec:	mov	r8, r1
   1a9f0:	b	1c84c <main@@Base+0x6b10>
   1a9f4:	mov	r0, sl
   1a9f8:	mov	r1, r8
   1a9fc:	mov	r2, r6
   1aa00:	mov	r3, #4
   1aa04:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1aa08:	b	1c848 <main@@Base+0x6b0c>
   1aa0c:	bne	1aa1c <main@@Base+0x4ce0>
   1aa10:	ldrb	r0, [r8, #22]!
   1aa14:	cmp	r0, #32
   1aa18:	bhi	1aa2c <main@@Base+0x4cf0>
   1aa1c:	mov	r0, sl
   1aa20:	mov	r2, r6
   1aa24:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1aa28:	mov	r8, r0
   1aa2c:	cmp	r8, r6
   1aa30:	beq	1aa6c <main@@Base+0x4d30>
   1aa34:	ldrb	r0, [r8]
   1aa38:	cmp	r0, #58	; 0x3a
   1aa3c:	bne	1aa6c <main@@Base+0x4d30>
   1aa40:	add	r1, r8, #1
   1aa44:	sub	r0, r6, r1
   1aa48:	cmp	r0, #2
   1aa4c:	blt	1c8fc <main@@Base+0x6bc0>
   1aa50:	ldrb	r0, [r1]
   1aa54:	cmp	r0, #32
   1aa58:	bls	1c8e4 <main@@Base+0x6ba8>
   1aa5c:	ldr	r6, [sp, #36]	; 0x24
   1aa60:	ldr	sl, [sp, #32]
   1aa64:	mov	r8, r1
   1aa68:	b	1c90c <main@@Base+0x6bd0>
   1aa6c:	mov	r0, sl
   1aa70:	mov	r1, r8
   1aa74:	mov	r2, r6
   1aa78:	mov	r3, #4
   1aa7c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1aa80:	b	1c908 <main@@Base+0x6bcc>
   1aa84:	bne	1aa94 <main@@Base+0x4d58>
   1aa88:	ldrb	r0, [r8, #2]!
   1aa8c:	cmp	r0, #32
   1aa90:	bhi	1aaa4 <main@@Base+0x4d68>
   1aa94:	mov	r0, sl
   1aa98:	mov	r2, r6
   1aa9c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1aaa0:	mov	r8, r0
   1aaa4:	cmp	r7, r8
   1aaa8:	beq	1e144 <main@@Base+0x8408>
   1aaac:	mov	r0, #0
   1aab0:	mov	r1, #3
   1aab4:	str	r0, [sp, #44]	; 0x2c
   1aab8:	ldr	r0, [sl]
   1aabc:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   1aac0:	cmp	r0, #0
   1aac4:	bne	1ab2c <main@@Base+0x4df0>
   1aac8:	cmp	r8, r6
   1aacc:	beq	1ab04 <main@@Base+0x4dc8>
   1aad0:	ldrb	r0, [r8]
   1aad4:	cmp	r0, #123	; 0x7b
   1aad8:	bne	1ab04 <main@@Base+0x4dc8>
   1aadc:	add	r1, r8, #1
   1aae0:	sub	r0, r6, r1
   1aae4:	cmp	r0, #2
   1aae8:	blt	1ced8 <main@@Base+0x719c>
   1aaec:	ldrb	r0, [r1]
   1aaf0:	cmp	r0, #32
   1aaf4:	bls	1cec0 <main@@Base+0x7184>
   1aaf8:	ldr	r6, [sp, #36]	; 0x24
   1aafc:	mov	r8, r1
   1ab00:	b	1cee8 <main@@Base+0x71ac>
   1ab04:	mov	r0, sl
   1ab08:	mov	r1, r8
   1ab0c:	mov	r2, r6
   1ab10:	mov	r3, #21
   1ab14:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1ab18:	mov	r8, r0
   1ab1c:	ldr	r0, [sp, #24]
   1ab20:	ldr	r0, [r0]
   1ab24:	cmp	r0, #0
   1ab28:	beq	1ab5c <main@@Base+0x4e20>
   1ab2c:	mov	r0, sl
   1ab30:	mov	r1, r8
   1ab34:	mov	r2, r6
   1ab38:	mov	r3, #33	; 0x21
   1ab3c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1ab40:	mov	r8, r0
   1ab44:	ldr	r0, [sp, #44]	; 0x2c
   1ab48:	cmp	r0, #0
   1ab4c:	beq	1662c <main@@Base+0x8f0>
   1ab50:	ldr	r0, [sl]
   1ab54:	mov	r1, #35	; 0x23
   1ab58:	b	1f0fc <main@@Base+0x93c0>
   1ab5c:	ldr	r0, [sl]
   1ab60:	bl	2e138 <flatcc_builder_end_table@@Base>
   1ab64:	cmp	r0, #0
   1ab68:	str	r0, [sp, #44]	; 0x2c
   1ab6c:	bne	1ab50 <main@@Base+0x4e14>
   1ab70:	b	1ab2c <main@@Base+0x4df0>
   1ab74:	mov	r0, sl
   1ab78:	mov	r1, r2
   1ab7c:	mov	r2, r6
   1ab80:	mov	r3, #10
   1ab84:	b	19784 <main@@Base+0x3a48>
   1ab88:	bne	1ab98 <main@@Base+0x4e5c>
   1ab8c:	ldrb	r0, [r8, #2]!
   1ab90:	cmp	r0, #32
   1ab94:	bhi	1aba8 <main@@Base+0x4e6c>
   1ab98:	mov	r0, sl
   1ab9c:	mov	r2, r6
   1aba0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1aba4:	mov	r8, r0
   1aba8:	cmp	r7, r8
   1abac:	beq	1e144 <main@@Base+0x8408>
   1abb0:	ldr	r0, [sp, #40]	; 0x28
   1abb4:	mov	r1, #8
   1abb8:	mov	r2, r6
   1abbc:	mov	r3, #0
   1abc0:	str	r1, [sp]
   1abc4:	mov	r1, r8
   1abc8:	str	r0, [sp, #4]
   1abcc:	movw	r0, #32952	; 0x80b8
   1abd0:	movt	r0, #5
   1abd4:	str	r0, [sp, #8]
   1abd8:	movw	r0, #7416	; 0x1cf8
   1abdc:	movt	r0, #2
   1abe0:	str	r0, [sp, #12]
   1abe4:	mov	r0, sl
   1abe8:	bl	33e04 <flatcc_json_parser_union_type@@Base>
   1abec:	b	1e154 <main@@Base+0x8418>
   1abf0:	bne	1ac00 <main@@Base+0x4ec4>
   1abf4:	ldrb	r0, [r8, #2]!
   1abf8:	cmp	r0, #32
   1abfc:	bhi	1ac10 <main@@Base+0x4ed4>
   1ac00:	mov	r0, sl
   1ac04:	mov	r2, r6
   1ac08:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ac0c:	mov	r8, r0
   1ac10:	cmp	r7, r8
   1ac14:	beq	1e144 <main@@Base+0x8408>
   1ac18:	ldr	r0, [sl]
   1ac1c:	bl	2d468 <flatcc_builder_start_offset_vector@@Base>
   1ac20:	cmp	r0, #0
   1ac24:	bne	1662c <main@@Base+0x8f0>
   1ac28:	cmp	r8, r6
   1ac2c:	beq	1ac60 <main@@Base+0x4f24>
   1ac30:	ldrb	r0, [r8]
   1ac34:	cmp	r0, #91	; 0x5b
   1ac38:	bne	1ac60 <main@@Base+0x4f24>
   1ac3c:	add	r1, r8, #1
   1ac40:	sub	r0, r6, r1
   1ac44:	cmp	r0, #2
   1ac48:	blt	1b434 <main@@Base+0x56f8>
   1ac4c:	ldrb	r0, [r1]
   1ac50:	cmp	r0, #32
   1ac54:	bls	1b424 <main@@Base+0x56e8>
   1ac58:	mov	r8, r1
   1ac5c:	b	1b444 <main@@Base+0x5708>
   1ac60:	mov	r0, sl
   1ac64:	mov	r1, r8
   1ac68:	mov	r2, r6
   1ac6c:	mov	r3, #22
   1ac70:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1ac74:	mov	r8, r0
   1ac78:	ldr	r0, [sl]
   1ac7c:	bl	2d534 <flatcc_builder_end_offset_vector@@Base>
   1ac80:	cmp	r0, #0
   1ac84:	str	r0, [sp, #44]	; 0x2c
   1ac88:	beq	1662c <main@@Base+0x8f0>
   1ac8c:	ldr	r0, [sl]
   1ac90:	mov	r1, #28
   1ac94:	b	1f0fc <main@@Base+0x93c0>
   1ac98:	bne	1aca8 <main@@Base+0x4f6c>
   1ac9c:	ldrb	r0, [r8, #2]!
   1aca0:	cmp	r0, #32
   1aca4:	bhi	1acb8 <main@@Base+0x4f7c>
   1aca8:	mov	r0, sl
   1acac:	mov	r2, r6
   1acb0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1acb4:	mov	r8, r0
   1acb8:	cmp	r9, r8
   1acbc:	beq	19470 <main@@Base+0x3734>
   1acc0:	ldr	r0, [sl]
   1acc4:	mov	r1, #8
   1acc8:	mov	r2, #4
   1accc:	mvn	r3, #-536870912	; 0xe0000000
   1acd0:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   1acd4:	cmp	r0, #0
   1acd8:	bne	1662c <main@@Base+0x8f0>
   1acdc:	cmp	r8, r6
   1ace0:	beq	1ad14 <main@@Base+0x4fd8>
   1ace4:	ldrb	r0, [r8]
   1ace8:	cmp	r0, #91	; 0x5b
   1acec:	bne	1ad14 <main@@Base+0x4fd8>
   1acf0:	add	r1, r8, #1
   1acf4:	sub	r0, r6, r1
   1acf8:	cmp	r0, #2
   1acfc:	blt	1b5a4 <main@@Base+0x5868>
   1ad00:	ldrb	r0, [r1]
   1ad04:	cmp	r0, #32
   1ad08:	bls	1b590 <main@@Base+0x5854>
   1ad0c:	mov	r9, r1
   1ad10:	b	1b5b4 <main@@Base+0x5878>
   1ad14:	mov	r0, sl
   1ad18:	mov	r1, r8
   1ad1c:	mov	r2, r6
   1ad20:	mov	r3, #22
   1ad24:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1ad28:	mov	r9, r0
   1ad2c:	ldr	r0, [sl]
   1ad30:	bl	2e448 <flatcc_builder_end_vector@@Base>
   1ad34:	cmp	r0, #0
   1ad38:	str	r0, [sp, #44]	; 0x2c
   1ad3c:	beq	1f334 <main@@Base+0x95f8>
   1ad40:	ldr	r0, [sl]
   1ad44:	mov	r1, #29
   1ad48:	b	18f08 <main@@Base+0x31cc>
   1ad4c:	mov	r4, r0
   1ad50:	str	r4, [sp, #60]	; 0x3c
   1ad54:	cmp	r6, r9
   1ad58:	bne	1ad94 <main@@Base+0x5058>
   1ad5c:	ldr	r4, [sp, #36]	; 0x24
   1ad60:	movw	r3, #33028	; 0x8104
   1ad64:	add	r0, sp, #60	; 0x3c
   1ad68:	mov	r1, r6
   1ad6c:	str	r0, [sp]
   1ad70:	mov	r0, sl
   1ad74:	movt	r3, #5
   1ad78:	mov	r2, r4
   1ad7c:	bl	2330c <main@@Base+0xd5d0>
   1ad80:	mov	r9, r0
   1ad84:	cmp	r0, r6
   1ad88:	cmpne	r9, r4
   1ad8c:	beq	1f308 <main@@Base+0x95cc>
   1ad90:	ldr	r4, [sp, #60]	; 0x3c
   1ad94:	ldr	r6, [sp, #36]	; 0x24
   1ad98:	cmp	r4, #0
   1ad9c:	bne	1adac <main@@Base+0x5070>
   1ada0:	ldrb	r0, [sl, #8]
   1ada4:	tst	r0, #2
   1ada8:	beq	1e158 <main@@Base+0x841c>
   1adac:	ldr	r0, [sl]
   1adb0:	mov	r1, #16
   1adb4:	b	1c1c4 <main@@Base+0x6488>
   1adb8:	bne	1adc8 <main@@Base+0x508c>
   1adbc:	ldrb	r0, [r7, #2]!
   1adc0:	cmp	r0, #32
   1adc4:	bhi	1add8 <main@@Base+0x509c>
   1adc8:	mov	r0, sl
   1adcc:	mov	r2, r6
   1add0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1add4:	mov	r7, r0
   1add8:	cmp	r8, r7
   1addc:	beq	18ec8 <main@@Base+0x318c>
   1ade0:	mov	r4, #0
   1ade4:	cmp	r7, r6
   1ade8:	str	r4, [fp, #-52]	; 0xffffffcc
   1adec:	str	r4, [fp, #-56]	; 0xffffffc8
   1adf0:	strh	r4, [sp, #60]	; 0x3c
   1adf4:	str	r4, [sp, #48]	; 0x30
   1adf8:	beq	1ae5c <main@@Base+0x5120>
   1adfc:	sub	r0, fp, #56	; 0x38
   1ae00:	mov	r1, r7
   1ae04:	mov	r2, r6
   1ae08:	add	r3, sp, #48	; 0x30
   1ae0c:	str	r0, [sp]
   1ae10:	mov	r0, sl
   1ae14:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1ae18:	cmp	r0, r7
   1ae1c:	beq	1ae64 <main@@Base+0x5128>
   1ae20:	ldr	r2, [sp, #48]	; 0x30
   1ae24:	mov	r9, r0
   1ae28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ae2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ae30:	cmp	r2, #0
   1ae34:	beq	1ae6c <main@@Base+0x5130>
   1ae38:	movw	r2, #32769	; 0x8001
   1ae3c:	subs	r2, r0, r2
   1ae40:	sbcs	r1, r1, #0
   1ae44:	bcc	1ae94 <main@@Base+0x5158>
   1ae48:	mov	r0, sl
   1ae4c:	mov	r1, r9
   1ae50:	mov	r2, r6
   1ae54:	mov	r3, #8
   1ae58:	b	1ae88 <main@@Base+0x514c>
   1ae5c:	mov	r9, r6
   1ae60:	b	1aea4 <main@@Base+0x5168>
   1ae64:	mov	r9, r7
   1ae68:	b	1aea4 <main@@Base+0x5168>
   1ae6c:	subs	r2, r0, #32768	; 0x8000
   1ae70:	sbcs	r1, r1, #0
   1ae74:	bcc	1ae9c <main@@Base+0x5160>
   1ae78:	mov	r0, sl
   1ae7c:	mov	r1, r9
   1ae80:	mov	r2, r6
   1ae84:	mov	r3, #7
   1ae88:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1ae8c:	mov	r9, r0
   1ae90:	b	1aea4 <main@@Base+0x5168>
   1ae94:	rsb	r4, r0, #0
   1ae98:	b	1aea0 <main@@Base+0x5164>
   1ae9c:	mov	r4, r0
   1aea0:	strh	r4, [sp, #60]	; 0x3c
   1aea4:	cmp	r7, r9
   1aea8:	bne	1aee0 <main@@Base+0x51a4>
   1aeac:	movw	r3, #32940	; 0x80ac
   1aeb0:	add	r0, sp, #60	; 0x3c
   1aeb4:	mov	r1, r7
   1aeb8:	mov	r2, r6
   1aebc:	str	r0, [sp]
   1aec0:	mov	r0, sl
   1aec4:	movt	r3, #5
   1aec8:	bl	21478 <main@@Base+0xb73c>
   1aecc:	mov	r9, r0
   1aed0:	cmp	r0, r7
   1aed4:	cmpne	r9, r6
   1aed8:	beq	1f308 <main@@Base+0x95cc>
   1aedc:	ldrh	r4, [sp, #60]	; 0x3c
   1aee0:	uxth	r0, r4
   1aee4:	cmp	r0, #150	; 0x96
   1aee8:	ldrbeq	r0, [sl, #8]
   1aeec:	tsteq	r0, #2
   1aef0:	beq	1e158 <main@@Base+0x841c>
   1aef4:	ldr	r0, [sl]
   1aef8:	mov	r1, #1
   1aefc:	mov	r2, #2
   1af00:	mov	r3, #2
   1af04:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1af08:	cmp	r0, #0
   1af0c:	beq	1f308 <main@@Base+0x95cc>
   1af10:	strh	r4, [r0]
   1af14:	b	1e158 <main@@Base+0x841c>
   1af18:	bne	1af28 <main@@Base+0x51ec>
   1af1c:	ldrb	r0, [r7, #2]!
   1af20:	cmp	r0, #32
   1af24:	bhi	1af38 <main@@Base+0x51fc>
   1af28:	mov	r0, sl
   1af2c:	mov	r2, r6
   1af30:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1af34:	mov	r7, r0
   1af38:	cmp	r8, r7
   1af3c:	beq	18ec8 <main@@Base+0x318c>
   1af40:	mov	r0, #0
   1af44:	mov	r1, r7
   1af48:	mov	r2, r6
   1af4c:	sub	r3, fp, #56	; 0x38
   1af50:	str	r0, [fp, #-56]	; 0xffffffc8
   1af54:	mov	r0, sl
   1af58:	bl	33390 <flatcc_json_parser_float@@Base>
   1af5c:	mov	r9, r0
   1af60:	cmp	r7, r0
   1af64:	bne	1af98 <main@@Base+0x525c>
   1af68:	movw	r3, #33004	; 0x80ec
   1af6c:	sub	r0, fp, #56	; 0x38
   1af70:	mov	r1, r7
   1af74:	mov	r2, r6
   1af78:	str	r0, [sp]
   1af7c:	mov	r0, sl
   1af80:	movt	r3, #5
   1af84:	bl	23194 <main@@Base+0xd458>
   1af88:	mov	r9, r0
   1af8c:	cmp	r0, r7
   1af90:	cmpne	r9, r6
   1af94:	beq	1f334 <main@@Base+0x95f8>
   1af98:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1af9c:	vcmp.f32	s0, s18
   1afa0:	vmrs	APSR_nzcv, fpscr
   1afa4:	bne	1afb4 <main@@Base+0x5278>
   1afa8:	ldrb	r0, [sl, #8]
   1afac:	tst	r0, #2
   1afb0:	beq	1e158 <main@@Base+0x841c>
   1afb4:	ldr	r0, [sl]
   1afb8:	mov	r1, #25
   1afbc:	b	17fec <main@@Base+0x22b0>
   1afc0:	bne	1afd0 <main@@Base+0x5294>
   1afc4:	ldrb	r0, [r8, #19]!
   1afc8:	cmp	r0, #32
   1afcc:	bhi	1afe0 <main@@Base+0x52a4>
   1afd0:	mov	r0, sl
   1afd4:	mov	r2, r6
   1afd8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1afdc:	mov	r8, r0
   1afe0:	cmp	r8, r6
   1afe4:	beq	1b020 <main@@Base+0x52e4>
   1afe8:	ldrb	r0, [r8]
   1afec:	cmp	r0, #58	; 0x3a
   1aff0:	bne	1b020 <main@@Base+0x52e4>
   1aff4:	add	r1, r8, #1
   1aff8:	sub	r0, r6, r1
   1affc:	cmp	r0, #2
   1b000:	blt	1d52c <main@@Base+0x77f0>
   1b004:	ldrb	r0, [r1]
   1b008:	cmp	r0, #32
   1b00c:	bls	1d514 <main@@Base+0x77d8>
   1b010:	ldr	r6, [sp, #36]	; 0x24
   1b014:	ldr	sl, [sp, #32]
   1b018:	mov	r8, r1
   1b01c:	b	1d53c <main@@Base+0x7800>
   1b020:	mov	r0, sl
   1b024:	mov	r1, r8
   1b028:	mov	r2, r6
   1b02c:	mov	r3, #4
   1b030:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b034:	b	1d538 <main@@Base+0x77fc>
   1b038:	bne	1b048 <main@@Base+0x530c>
   1b03c:	ldrb	r0, [r6, #2]!
   1b040:	cmp	r0, #32
   1b044:	bhi	1b058 <main@@Base+0x531c>
   1b048:	ldr	r2, [sp, #36]	; 0x24
   1b04c:	mov	r0, sl
   1b050:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b054:	mov	r6, r0
   1b058:	cmp	r9, r6
   1b05c:	beq	1b0dc <main@@Base+0x53a0>
   1b060:	ldr	r2, [sp, #36]	; 0x24
   1b064:	mov	r4, #0
   1b068:	str	r4, [fp, #-52]	; 0xffffffcc
   1b06c:	str	r4, [fp, #-56]	; 0xffffffc8
   1b070:	str	r4, [sp, #52]	; 0x34
   1b074:	str	r4, [sp, #48]	; 0x30
   1b078:	str	r4, [sp, #60]	; 0x3c
   1b07c:	cmp	r6, r2
   1b080:	beq	1b14c <main@@Base+0x5410>
   1b084:	sub	r0, fp, #56	; 0x38
   1b088:	mov	r1, r6
   1b08c:	add	r3, sp, #60	; 0x3c
   1b090:	str	r0, [sp]
   1b094:	mov	r0, sl
   1b098:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1b09c:	cmp	r0, r6
   1b0a0:	beq	1b158 <main@@Base+0x541c>
   1b0a4:	mov	r9, r0
   1b0a8:	ldr	r0, [sp, #60]	; 0x3c
   1b0ac:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1b0b0:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1b0b4:	cmp	r0, #0
   1b0b8:	beq	1b168 <main@@Base+0x542c>
   1b0bc:	subs	r0, r4, #1
   1b0c0:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1b0c4:	bcc	1b194 <main@@Base+0x5458>
   1b0c8:	ldr	r2, [sp, #36]	; 0x24
   1b0cc:	mov	r0, sl
   1b0d0:	mov	r1, r9
   1b0d4:	mov	r3, #8
   1b0d8:	b	1b180 <main@@Base+0x5444>
   1b0dc:	ldr	r6, [sp, #36]	; 0x24
   1b0e0:	add	r7, r8, #16
   1b0e4:	mov	r1, #8
   1b0e8:	mov	r2, #-268435456	; 0xf0000000
   1b0ec:	sub	r0, r6, r7
   1b0f0:	cmp	r0, #8
   1b0f4:	movcc	r1, r0
   1b0f8:	add	r1, r2, r1, lsl #28
   1b0fc:	asr	r1, r1, #28
   1b100:	cmp	r1, #0
   1b104:	blt	1e144 <main@@Base+0x8408>
   1b108:	ldrb	r1, [r7]
   1b10c:	cmp	r1, #97	; 0x61
   1b110:	bne	1e144 <main@@Base+0x8408>
   1b114:	cmp	r0, #2
   1b118:	blt	1e144 <main@@Base+0x8408>
   1b11c:	ldrb	r0, [r8, #17]
   1b120:	cmp	r0, #34	; 0x22
   1b124:	bne	1e144 <main@@Base+0x8408>
   1b128:	add	r1, r8, #18
   1b12c:	sub	r0, r6, r1
   1b130:	cmp	r0, #2
   1b134:	blt	1b30c <main@@Base+0x55d0>
   1b138:	ldrb	r0, [r1]
   1b13c:	cmp	r0, #32
   1b140:	bls	1b2fc <main@@Base+0x55c0>
   1b144:	mov	r8, r1
   1b148:	b	1b31c <main@@Base+0x55e0>
   1b14c:	mov	r5, #0
   1b150:	mov	r9, r2
   1b154:	b	1b1a4 <main@@Base+0x5468>
   1b158:	mov	r4, #0
   1b15c:	mov	r5, #0
   1b160:	mov	r9, r6
   1b164:	b	1b1a4 <main@@Base+0x5468>
   1b168:	cmn	r5, #1
   1b16c:	bgt	1b19c <main@@Base+0x5460>
   1b170:	ldr	r2, [sp, #36]	; 0x24
   1b174:	mov	r0, sl
   1b178:	mov	r1, r9
   1b17c:	mov	r3, #7
   1b180:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b184:	mov	r9, r0
   1b188:	mov	r4, #0
   1b18c:	mov	r5, #0
   1b190:	b	1b1a4 <main@@Base+0x5468>
   1b194:	rsbs	r4, r4, #0
   1b198:	rsc	r5, r5, #0
   1b19c:	str	r4, [sp, #48]	; 0x30
   1b1a0:	str	r5, [sp, #52]	; 0x34
   1b1a4:	cmp	r6, r9
   1b1a8:	bne	1b1e8 <main@@Base+0x54ac>
   1b1ac:	ldr	r4, [sp, #36]	; 0x24
   1b1b0:	movw	r3, #33052	; 0x811c
   1b1b4:	add	r0, sp, #48	; 0x30
   1b1b8:	mov	r1, r6
   1b1bc:	str	r0, [sp]
   1b1c0:	mov	r0, sl
   1b1c4:	movt	r3, #5
   1b1c8:	mov	r2, r4
   1b1cc:	bl	234e8 <main@@Base+0xd7ac>
   1b1d0:	mov	r9, r0
   1b1d4:	cmp	r0, r6
   1b1d8:	cmpne	r9, r4
   1b1dc:	beq	1f308 <main@@Base+0x95cc>
   1b1e0:	ldr	r4, [sp, #48]	; 0x30
   1b1e4:	ldr	r5, [sp, #52]	; 0x34
   1b1e8:	ldr	r6, [sp, #36]	; 0x24
   1b1ec:	orrs	r0, r4, r5
   1b1f0:	bne	1b200 <main@@Base+0x54c4>
   1b1f4:	ldrb	r0, [sl, #8]
   1b1f8:	tst	r0, #2
   1b1fc:	beq	1e158 <main@@Base+0x841c>
   1b200:	ldr	r0, [sl]
   1b204:	mov	r1, #18
   1b208:	b	1c390 <main@@Base+0x6654>
   1b20c:	bne	1b21c <main@@Base+0x54e0>
   1b210:	ldrb	r0, [r8, #2]!
   1b214:	cmp	r0, #32
   1b218:	bhi	1b22c <main@@Base+0x54f0>
   1b21c:	mov	r0, sl
   1b220:	mov	r2, r6
   1b224:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b228:	mov	r8, r0
   1b22c:	cmp	r9, r8
   1b230:	beq	19470 <main@@Base+0x3734>
   1b234:	mov	r0, #0
   1b238:	mov	r1, #0
   1b23c:	str	r0, [sp, #44]	; 0x2c
   1b240:	ldr	r0, [sl]
   1b244:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   1b248:	cmp	r0, #0
   1b24c:	bne	1b2b4 <main@@Base+0x5578>
   1b250:	cmp	r8, r6
   1b254:	beq	1b28c <main@@Base+0x5550>
   1b258:	ldrb	r0, [r8]
   1b25c:	cmp	r0, #123	; 0x7b
   1b260:	bne	1b28c <main@@Base+0x5550>
   1b264:	add	r1, r8, #1
   1b268:	sub	r0, r6, r1
   1b26c:	cmp	r0, #2
   1b270:	blt	1db54 <main@@Base+0x7e18>
   1b274:	ldrb	r0, [r1]
   1b278:	cmp	r0, #32
   1b27c:	bls	1db40 <main@@Base+0x7e04>
   1b280:	ldr	r6, [sp, #36]	; 0x24
   1b284:	mov	r8, r1
   1b288:	b	1db64 <main@@Base+0x7e28>
   1b28c:	mov	r0, sl
   1b290:	mov	r1, r8
   1b294:	mov	r2, r6
   1b298:	mov	r3, #21
   1b29c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b2a0:	mov	r8, r0
   1b2a4:	ldr	r0, [sp, #24]
   1b2a8:	ldr	r0, [r0]
   1b2ac:	cmp	r0, #0
   1b2b0:	beq	1b2e4 <main@@Base+0x55a8>
   1b2b4:	mov	r0, sl
   1b2b8:	mov	r1, r8
   1b2bc:	mov	r2, r6
   1b2c0:	mov	r3, #33	; 0x21
   1b2c4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b2c8:	mov	r8, r0
   1b2cc:	ldr	r0, [sp, #44]	; 0x2c
   1b2d0:	cmp	r0, #0
   1b2d4:	beq	1662c <main@@Base+0x8f0>
   1b2d8:	ldr	r0, [sl]
   1b2dc:	mov	r1, #34	; 0x22
   1b2e0:	b	1f0fc <main@@Base+0x93c0>
   1b2e4:	ldr	r0, [sl]
   1b2e8:	bl	2e138 <flatcc_builder_end_table@@Base>
   1b2ec:	cmp	r0, #0
   1b2f0:	str	r0, [sp, #44]	; 0x2c
   1b2f4:	bne	1b2d8 <main@@Base+0x559c>
   1b2f8:	b	1b2b4 <main@@Base+0x5578>
   1b2fc:	bne	1b30c <main@@Base+0x55d0>
   1b300:	ldrb	r0, [r8, #19]!
   1b304:	cmp	r0, #32
   1b308:	bhi	1b31c <main@@Base+0x55e0>
   1b30c:	mov	r0, sl
   1b310:	mov	r2, r6
   1b314:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b318:	mov	r8, r0
   1b31c:	cmp	r8, r6
   1b320:	beq	1b35c <main@@Base+0x5620>
   1b324:	ldrb	r0, [r8]
   1b328:	cmp	r0, #58	; 0x3a
   1b32c:	bne	1b35c <main@@Base+0x5620>
   1b330:	add	r1, r8, #1
   1b334:	sub	r0, r6, r1
   1b338:	cmp	r0, #2
   1b33c:	blt	1d94c <main@@Base+0x7c10>
   1b340:	ldrb	r0, [r1]
   1b344:	cmp	r0, #32
   1b348:	bls	1d934 <main@@Base+0x7bf8>
   1b34c:	ldr	r6, [sp, #36]	; 0x24
   1b350:	ldr	sl, [sp, #32]
   1b354:	mov	r8, r1
   1b358:	b	1d95c <main@@Base+0x7c20>
   1b35c:	mov	r0, sl
   1b360:	mov	r1, r8
   1b364:	mov	r2, r6
   1b368:	mov	r3, #4
   1b36c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b370:	b	1d958 <main@@Base+0x7c1c>
   1b374:	bne	1b384 <main@@Base+0x5648>
   1b378:	ldrb	r0, [r8, #2]!
   1b37c:	cmp	r0, #32
   1b380:	bhi	1b394 <main@@Base+0x5658>
   1b384:	mov	r0, sl
   1b388:	mov	r2, r6
   1b38c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b390:	mov	r8, r0
   1b394:	cmp	r7, r8
   1b398:	beq	1e144 <main@@Base+0x8408>
   1b39c:	ldr	r0, [sl]
   1b3a0:	bl	2d468 <flatcc_builder_start_offset_vector@@Base>
   1b3a4:	cmp	r0, #0
   1b3a8:	bne	1662c <main@@Base+0x8f0>
   1b3ac:	cmp	r8, r6
   1b3b0:	beq	1b3ec <main@@Base+0x56b0>
   1b3b4:	ldrb	r0, [r8]
   1b3b8:	cmp	r0, #91	; 0x5b
   1b3bc:	bne	1b3ec <main@@Base+0x56b0>
   1b3c0:	add	r1, r8, #1
   1b3c4:	sub	r0, r6, r1
   1b3c8:	cmp	r0, #2
   1b3cc:	blt	1c6b8 <main@@Base+0x697c>
   1b3d0:	ldrb	r0, [r1]
   1b3d4:	cmp	r0, #32
   1b3d8:	bls	1c6a0 <main@@Base+0x6964>
   1b3dc:	ldr	r6, [sp, #36]	; 0x24
   1b3e0:	ldr	sl, [sp, #32]
   1b3e4:	mov	r8, r1
   1b3e8:	b	1c6c8 <main@@Base+0x698c>
   1b3ec:	mov	r0, sl
   1b3f0:	mov	r1, r8
   1b3f4:	mov	r2, r6
   1b3f8:	mov	r3, #22
   1b3fc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b400:	mov	r8, r0
   1b404:	ldr	r0, [sl]
   1b408:	bl	2d534 <flatcc_builder_end_offset_vector@@Base>
   1b40c:	cmp	r0, #0
   1b410:	str	r0, [sp, #44]	; 0x2c
   1b414:	beq	1662c <main@@Base+0x8f0>
   1b418:	ldr	r0, [sl]
   1b41c:	mov	r1, #11
   1b420:	b	1f0fc <main@@Base+0x93c0>
   1b424:	bne	1b434 <main@@Base+0x56f8>
   1b428:	ldrb	r0, [r8, #2]!
   1b42c:	cmp	r0, #32
   1b430:	bhi	1b444 <main@@Base+0x5708>
   1b434:	mov	r0, sl
   1b438:	mov	r2, r6
   1b43c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b440:	mov	r8, r0
   1b444:	cmp	r8, r6
   1b448:	mov	r2, r6
   1b44c:	beq	1b498 <main@@Base+0x575c>
   1b450:	ldrb	r0, [r8]
   1b454:	cmp	r0, #93	; 0x5d
   1b458:	bne	1b494 <main@@Base+0x5758>
   1b45c:	add	r1, r8, #1
   1b460:	sub	r0, r6, r1
   1b464:	cmp	r0, #2
   1b468:	blt	1eea4 <main@@Base+0x9168>
   1b46c:	ldrb	r0, [r1]
   1b470:	cmp	r0, #32
   1b474:	bhi	1cea4 <main@@Base+0x7168>
   1b478:	ldr	r6, [sp, #36]	; 0x24
   1b47c:	ldr	sl, [sp, #32]
   1b480:	bne	1eea4 <main@@Base+0x9168>
   1b484:	ldrb	r0, [r8, #2]!
   1b488:	cmp	r0, #32
   1b48c:	bhi	1ac78 <main@@Base+0x4f3c>
   1b490:	b	1eea4 <main@@Base+0x9168>
   1b494:	mov	r2, r8
   1b498:	mov	r1, r2
   1b49c:	mov	r0, sl
   1b4a0:	mov	r2, r6
   1b4a4:	add	r3, sp, #44	; 0x2c
   1b4a8:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   1b4ac:	mov	r8, r0
   1b4b0:	ldr	r0, [sp, #44]	; 0x2c
   1b4b4:	cmp	r0, #0
   1b4b8:	beq	1662c <main@@Base+0x8f0>
   1b4bc:	ldr	r0, [sl]
   1b4c0:	mov	r1, #1
   1b4c4:	bl	2ce24 <flatcc_builder_extend_offset_vector@@Base>
   1b4c8:	cmp	r0, #0
   1b4cc:	beq	1662c <main@@Base+0x8f0>
   1b4d0:	ldr	r1, [sp, #44]	; 0x2c
   1b4d4:	str	r1, [r0]
   1b4d8:	sub	r0, r6, r8
   1b4dc:	cmp	r0, #2
   1b4e0:	blt	1b50c <main@@Base+0x57d0>
   1b4e4:	ldrb	r0, [r8]
   1b4e8:	cmp	r0, #32
   1b4ec:	bls	1b4f8 <main@@Base+0x57bc>
   1b4f0:	mov	r2, r8
   1b4f4:	b	1b520 <main@@Base+0x57e4>
   1b4f8:	bne	1b50c <main@@Base+0x57d0>
   1b4fc:	mov	r2, r8
   1b500:	ldrb	r0, [r2, #1]!
   1b504:	cmp	r0, #32
   1b508:	bhi	1b520 <main@@Base+0x57e4>
   1b50c:	mov	r0, sl
   1b510:	mov	r1, r8
   1b514:	mov	r2, r6
   1b518:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b51c:	mov	r2, r0
   1b520:	cmp	r2, r6
   1b524:	beq	1ce38 <main@@Base+0x70fc>
   1b528:	ldrb	r0, [r2]
   1b52c:	cmp	r0, #44	; 0x2c
   1b530:	bne	1ce78 <main@@Base+0x713c>
   1b534:	add	r1, r2, #1
   1b538:	sub	r0, r6, r1
   1b53c:	cmp	r0, #2
   1b540:	blt	1b568 <main@@Base+0x582c>
   1b544:	ldrb	r0, [r1]
   1b548:	cmp	r0, #32
   1b54c:	bls	1b558 <main@@Base+0x581c>
   1b550:	mov	r2, r1
   1b554:	b	1b578 <main@@Base+0x583c>
   1b558:	bne	1b568 <main@@Base+0x582c>
   1b55c:	ldrb	r0, [r2, #2]!
   1b560:	cmp	r0, #32
   1b564:	bhi	1b578 <main@@Base+0x583c>
   1b568:	mov	r0, sl
   1b56c:	mov	r2, r6
   1b570:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b574:	mov	r2, r0
   1b578:	cmp	r2, r6
   1b57c:	beq	1ceb4 <main@@Base+0x7178>
   1b580:	ldrb	r0, [r2]
   1b584:	cmp	r0, #93	; 0x5d
   1b588:	bne	1b498 <main@@Base+0x575c>
   1b58c:	b	1ce88 <main@@Base+0x714c>
   1b590:	bne	1b5a4 <main@@Base+0x5868>
   1b594:	ldrb	r0, [r8, #2]!
   1b598:	cmp	r0, #32
   1b59c:	mov	r9, r8
   1b5a0:	bhi	1b5b4 <main@@Base+0x5878>
   1b5a4:	mov	r0, sl
   1b5a8:	mov	r2, r6
   1b5ac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b5b0:	mov	r9, r0
   1b5b4:	cmp	r9, r6
   1b5b8:	mov	r8, r6
   1b5bc:	beq	1bd18 <main@@Base+0x5fdc>
   1b5c0:	ldrb	r0, [r9]
   1b5c4:	cmp	r0, #93	; 0x5d
   1b5c8:	bne	1b604 <main@@Base+0x58c8>
   1b5cc:	add	r1, r9, #1
   1b5d0:	sub	r0, r6, r1
   1b5d4:	cmp	r0, #2
   1b5d8:	blt	1ef40 <main@@Base+0x9204>
   1b5dc:	ldrb	r0, [r1]
   1b5e0:	cmp	r0, #32
   1b5e4:	bhi	1be54 <main@@Base+0x6118>
   1b5e8:	ldr	r6, [sp, #36]	; 0x24
   1b5ec:	ldr	sl, [sp, #32]
   1b5f0:	bne	1ef40 <main@@Base+0x9204>
   1b5f4:	ldrb	r0, [r9, #2]!
   1b5f8:	cmp	r0, #32
   1b5fc:	bhi	1ad2c <main@@Base+0x4ff0>
   1b600:	b	1ef40 <main@@Base+0x9204>
   1b604:	mov	r8, r9
   1b608:	b	1bd18 <main@@Base+0x5fdc>
   1b60c:	bne	1b61c <main@@Base+0x58e0>
   1b610:	ldrb	r0, [r8, #2]!
   1b614:	cmp	r0, #32
   1b618:	bhi	1b62c <main@@Base+0x58f0>
   1b61c:	mov	r0, sl
   1b620:	mov	r2, r6
   1b624:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b628:	mov	r8, r0
   1b62c:	cmp	r8, r6
   1b630:	mov	r2, r6
   1b634:	beq	1b718 <main@@Base+0x59dc>
   1b638:	ldrb	r0, [r8]
   1b63c:	cmp	r0, #125	; 0x7d
   1b640:	bne	1b67c <main@@Base+0x5940>
   1b644:	add	r1, r8, #1
   1b648:	sub	r0, r6, r1
   1b64c:	cmp	r0, #2
   1b650:	blt	1bd08 <main@@Base+0x5fcc>
   1b654:	ldrb	r0, [r1]
   1b658:	cmp	r0, #32
   1b65c:	bhi	1bcb4 <main@@Base+0x5f78>
   1b660:	ldr	r6, [sp, #36]	; 0x24
   1b664:	ldr	sl, [sp, #32]
   1b668:	bne	1bd08 <main@@Base+0x5fcc>
   1b66c:	ldrb	r0, [r8, #2]!
   1b670:	cmp	r0, #32
   1b674:	bls	1bd08 <main@@Base+0x5fcc>
   1b678:	b	1bd80 <main@@Base+0x6044>
   1b67c:	mov	r2, r8
   1b680:	b	1b718 <main@@Base+0x59dc>
   1b684:	mov	r1, r6
   1b688:	b	1b6bc <main@@Base+0x5980>
   1b68c:	mov	r1, r7
   1b690:	b	1b6bc <main@@Base+0x5980>
   1b694:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b698:	cmp	r0, #0
   1b69c:	beq	1b704 <main@@Base+0x59c8>
   1b6a0:	ldr	sl, [sp, #32]
   1b6a4:	ldr	r6, [sp, #36]	; 0x24
   1b6a8:	mov	r3, #7
   1b6ac:	mov	r0, sl
   1b6b0:	mov	r2, r6
   1b6b4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b6b8:	mov	r1, r0
   1b6bc:	cmp	r7, r1
   1b6c0:	bne	1b6fc <main@@Base+0x59c0>
   1b6c4:	movw	r3, #33568	; 0x8320
   1b6c8:	add	r0, sp, #60	; 0x3c
   1b6cc:	mov	r1, r7
   1b6d0:	mov	r2, r6
   1b6d4:	str	r0, [sp]
   1b6d8:	mov	r0, sl
   1b6dc:	movt	r3, #5
   1b6e0:	bl	236d0 <main@@Base+0xd994>
   1b6e4:	mov	r1, r0
   1b6e8:	cmp	r0, r7
   1b6ec:	cmpne	r1, r6
   1b6f0:	beq	1bc68 <main@@Base+0x5f2c>
   1b6f4:	ldr	r4, [sp, #60]	; 0x3c
   1b6f8:	ldr	sl, [sp, #32]
   1b6fc:	str	r4, [r9, #4]
   1b700:	b	1bbb4 <main@@Base+0x5e78>
   1b704:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1b708:	ldr	r6, [sp, #36]	; 0x24
   1b70c:	ldr	sl, [sp, #32]
   1b710:	str	r4, [sp, #60]	; 0x3c
   1b714:	b	1b6bc <main@@Base+0x5980>
   1b718:	cmp	r2, r6
   1b71c:	mov	r8, r6
   1b720:	beq	1b750 <main@@Base+0x5a14>
   1b724:	ldrb	r0, [r2]
   1b728:	cmp	r0, #34	; 0x22
   1b72c:	bne	1b738 <main@@Base+0x59fc>
   1b730:	add	r8, r2, #1
   1b734:	b	1b750 <main@@Base+0x5a14>
   1b738:	mov	r1, r2
   1b73c:	mov	r0, sl
   1b740:	mov	r2, r6
   1b744:	mov	r3, #5
   1b748:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b74c:	mov	r8, r0
   1b750:	sub	lr, r6, r8
   1b754:	mov	r0, #8
   1b758:	cmp	lr, #8
   1b75c:	movcc	r0, lr
   1b760:	and	r0, r0, #15
   1b764:	sub	r7, r0, #1
   1b768:	cmp	r7, #7
   1b76c:	bhi	1bba0 <main@@Base+0x5e64>
   1b770:	add	r2, pc, #32
   1b774:	mov	r1, #0
   1b778:	mov	ip, #0
   1b77c:	mov	sl, #0
   1b780:	mov	r6, #0
   1b784:	mov	r3, #0
   1b788:	mov	r5, #0
   1b78c:	mov	r4, #0
   1b790:	mov	r0, #0
   1b794:	ldr	pc, [r2, r7, lsl #2]
   1b798:	strdeq	fp, [r1], -ip
   1b79c:	strdeq	fp, [r1], -r4
   1b7a0:	andeq	fp, r1, ip, ror #15
   1b7a4:	andeq	fp, r1, r4, ror #15
   1b7a8:	ldrdeq	fp, [r1], -r8
   1b7ac:	andeq	fp, r1, ip, asr #15
   1b7b0:			; <UNDEFINED> instruction: 0x0001b7bc
   1b7b4:			; <UNDEFINED> instruction: 0x0001b7b8
   1b7b8:	ldrb	ip, [r8, #7]
   1b7bc:	ldrb	r0, [r8, #6]
   1b7c0:	mov	sl, r1
   1b7c4:	orr	r0, ip, r0, lsl #8
   1b7c8:	mov	r1, r0
   1b7cc:	ldrb	r0, [r8, #5]
   1b7d0:	mov	r6, sl
   1b7d4:	orr	r1, r1, r0, lsl #16
   1b7d8:	ldrb	r0, [r8, #4]
   1b7dc:	mov	r3, r6
   1b7e0:	orr	r1, r1, r0, lsl #24
   1b7e4:	ldrb	r0, [r8, #3]
   1b7e8:	orr	r5, r0, r3
   1b7ec:	ldrb	r0, [r8, #2]
   1b7f0:	orr	r4, r5, r0, lsl #8
   1b7f4:	ldrb	r0, [r8, #1]
   1b7f8:	orr	r0, r4, r0, lsl #16
   1b7fc:	ldrb	r2, [r8]
   1b800:	movw	r3, #0
   1b804:	movt	r3, #26980	; 0x6964
   1b808:	orr	r0, r0, r2, lsl #24
   1b80c:	mov	r2, r0
   1b810:	bfc	r2, #0, #16
   1b814:	teq	r2, r3
   1b818:	bne	1b86c <main@@Base+0x5b30>
   1b81c:	ldr	r6, [sp, #36]	; 0x24
   1b820:	ldr	sl, [sp, #32]
   1b824:	cmp	lr, #3
   1b828:	mov	r7, r8
   1b82c:	blt	1ba18 <main@@Base+0x5cdc>
   1b830:	ldrb	r0, [r8, #2]
   1b834:	mov	r7, r8
   1b838:	cmp	r0, #34	; 0x22
   1b83c:	bne	1ba18 <main@@Base+0x5cdc>
   1b840:	add	r1, r8, #3
   1b844:	sub	r0, r6, r1
   1b848:	cmp	r0, #2
   1b84c:	blt	1b8f4 <main@@Base+0x5bb8>
   1b850:	ldrb	r0, [r1]
   1b854:	cmp	r0, #32
   1b858:	bls	1b8d8 <main@@Base+0x5b9c>
   1b85c:	ldr	r6, [sp, #36]	; 0x24
   1b860:	ldr	sl, [sp, #32]
   1b864:	mov	r7, r1
   1b868:	b	1b904 <main@@Base+0x5bc8>
   1b86c:	movw	r2, #25445	; 0x6365
   1b870:	ldr	r6, [sp, #36]	; 0x24
   1b874:	ldr	sl, [sp, #32]
   1b878:	movt	r2, #24942	; 0x616e
   1b87c:	eor	r1, r1, r2
   1b880:	movw	r2, #29556	; 0x7374
   1b884:	movt	r2, #25705	; 0x6469
   1b888:	eor	r0, r0, r2
   1b88c:	orrs	r0, r1, r0
   1b890:	bne	1bba0 <main@@Base+0x5e64>
   1b894:	cmp	lr, #9
   1b898:	mov	r7, r8
   1b89c:	blt	1bb38 <main@@Base+0x5dfc>
   1b8a0:	ldrb	r0, [r8, #8]
   1b8a4:	mov	r7, r8
   1b8a8:	cmp	r0, #34	; 0x22
   1b8ac:	bne	1bb38 <main@@Base+0x5dfc>
   1b8b0:	add	r1, r8, #9
   1b8b4:	sub	r0, r6, r1
   1b8b8:	cmp	r0, #2
   1b8bc:	blt	1b978 <main@@Base+0x5c3c>
   1b8c0:	ldrb	r0, [r1]
   1b8c4:	cmp	r0, #32
   1b8c8:	bls	1b95c <main@@Base+0x5c20>
   1b8cc:	ldr	r6, [sp, #36]	; 0x24
   1b8d0:	mov	r7, r1
   1b8d4:	b	1b988 <main@@Base+0x5c4c>
   1b8d8:	ldr	r6, [sp, #36]	; 0x24
   1b8dc:	ldr	sl, [sp, #32]
   1b8e0:	bne	1b8f4 <main@@Base+0x5bb8>
   1b8e4:	mov	r7, r8
   1b8e8:	ldrb	r0, [r7, #4]!
   1b8ec:	cmp	r0, #32
   1b8f0:	bhi	1b904 <main@@Base+0x5bc8>
   1b8f4:	mov	r0, sl
   1b8f8:	mov	r2, r6
   1b8fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b900:	mov	r7, r0
   1b904:	cmp	r7, r6
   1b908:	beq	1b944 <main@@Base+0x5c08>
   1b90c:	ldrb	r0, [r7]
   1b910:	cmp	r0, #58	; 0x3a
   1b914:	bne	1b944 <main@@Base+0x5c08>
   1b918:	add	r1, r7, #1
   1b91c:	sub	r0, r6, r1
   1b920:	cmp	r0, #2
   1b924:	blt	1ba08 <main@@Base+0x5ccc>
   1b928:	ldrb	r0, [r1]
   1b92c:	cmp	r0, #32
   1b930:	bls	1b9f0 <main@@Base+0x5cb4>
   1b934:	ldr	r6, [sp, #36]	; 0x24
   1b938:	ldr	sl, [sp, #32]
   1b93c:	mov	r7, r1
   1b940:	b	1ba18 <main@@Base+0x5cdc>
   1b944:	mov	r0, sl
   1b948:	mov	r1, r7
   1b94c:	mov	r2, r6
   1b950:	mov	r3, #4
   1b954:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b958:	b	1ba14 <main@@Base+0x5cd8>
   1b95c:	ldr	r6, [sp, #36]	; 0x24
   1b960:	ldr	sl, [sp, #32]
   1b964:	bne	1b978 <main@@Base+0x5c3c>
   1b968:	mov	r7, r8
   1b96c:	ldrb	r0, [r7, #10]!
   1b970:	cmp	r0, #32
   1b974:	bhi	1b988 <main@@Base+0x5c4c>
   1b978:	mov	r0, sl
   1b97c:	mov	r2, r6
   1b980:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1b984:	mov	r7, r0
   1b988:	cmp	r7, r6
   1b98c:	beq	1b9d0 <main@@Base+0x5c94>
   1b990:	ldrb	r0, [r7]
   1b994:	cmp	r0, #58	; 0x3a
   1b998:	bne	1b9d0 <main@@Base+0x5c94>
   1b99c:	ldr	r6, [sp, #36]	; 0x24
   1b9a0:	ldr	sl, [sp, #32]
   1b9a4:	add	r1, r7, #1
   1b9a8:	sub	r0, r6, r1
   1b9ac:	cmp	r0, #2
   1b9b0:	blt	1bb28 <main@@Base+0x5dec>
   1b9b4:	ldrb	r0, [r1]
   1b9b8:	cmp	r0, #32
   1b9bc:	bls	1bb10 <main@@Base+0x5dd4>
   1b9c0:	ldr	r6, [sp, #36]	; 0x24
   1b9c4:	ldr	sl, [sp, #32]
   1b9c8:	mov	r7, r1
   1b9cc:	b	1bb38 <main@@Base+0x5dfc>
   1b9d0:	ldr	sl, [sp, #32]
   1b9d4:	ldr	r6, [sp, #36]	; 0x24
   1b9d8:	mov	r1, r7
   1b9dc:	mov	r3, #4
   1b9e0:	mov	r0, sl
   1b9e4:	mov	r2, r6
   1b9e8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1b9ec:	b	1bb34 <main@@Base+0x5df8>
   1b9f0:	ldr	r6, [sp, #36]	; 0x24
   1b9f4:	ldr	sl, [sp, #32]
   1b9f8:	bne	1ba08 <main@@Base+0x5ccc>
   1b9fc:	ldrb	r0, [r7, #2]!
   1ba00:	cmp	r0, #32
   1ba04:	bhi	1ba18 <main@@Base+0x5cdc>
   1ba08:	mov	r0, sl
   1ba0c:	mov	r2, r6
   1ba10:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ba14:	mov	r7, r0
   1ba18:	cmp	r8, r7
   1ba1c:	beq	1bba0 <main@@Base+0x5e64>
   1ba20:	mov	r4, #0
   1ba24:	cmp	r7, r6
   1ba28:	str	r4, [fp, #-52]	; 0xffffffcc
   1ba2c:	str	r4, [fp, #-56]	; 0xffffffc8
   1ba30:	str	r4, [sp, #60]	; 0x3c
   1ba34:	str	r4, [sp, #48]	; 0x30
   1ba38:	beq	1ba80 <main@@Base+0x5d44>
   1ba3c:	sub	r0, fp, #56	; 0x38
   1ba40:	mov	r1, r7
   1ba44:	mov	r2, r6
   1ba48:	add	r3, sp, #48	; 0x30
   1ba4c:	str	r0, [sp]
   1ba50:	mov	r0, sl
   1ba54:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1ba58:	cmp	r0, r7
   1ba5c:	beq	1ba88 <main@@Base+0x5d4c>
   1ba60:	mov	r1, r0
   1ba64:	ldr	r0, [sp, #48]	; 0x30
   1ba68:	cmp	r0, #0
   1ba6c:	beq	1ba90 <main@@Base+0x5d54>
   1ba70:	mov	r0, sl
   1ba74:	mov	r2, r6
   1ba78:	mov	r3, #8
   1ba7c:	b	1bab0 <main@@Base+0x5d74>
   1ba80:	mov	r1, r6
   1ba84:	b	1bab8 <main@@Base+0x5d7c>
   1ba88:	mov	r1, r7
   1ba8c:	b	1bab8 <main@@Base+0x5d7c>
   1ba90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ba94:	cmp	r0, #0
   1ba98:	beq	1bafc <main@@Base+0x5dc0>
   1ba9c:	ldr	sl, [sp, #32]
   1baa0:	ldr	r6, [sp, #36]	; 0x24
   1baa4:	mov	r3, #7
   1baa8:	mov	r0, sl
   1baac:	mov	r2, r6
   1bab0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1bab4:	mov	r1, r0
   1bab8:	cmp	r7, r1
   1babc:	bne	1baf4 <main@@Base+0x5db8>
   1bac0:	movw	r3, #33556	; 0x8314
   1bac4:	add	r0, sp, #60	; 0x3c
   1bac8:	mov	r1, r7
   1bacc:	mov	r2, r6
   1bad0:	str	r0, [sp]
   1bad4:	mov	r0, sl
   1bad8:	movt	r3, #5
   1badc:	bl	236d0 <main@@Base+0xd994>
   1bae0:	mov	r1, r0
   1bae4:	cmp	r0, r7
   1bae8:	cmpne	r1, r6
   1baec:	beq	1bc68 <main@@Base+0x5f2c>
   1baf0:	ldr	r4, [sp, #60]	; 0x3c
   1baf4:	str	r4, [r9]
   1baf8:	b	1bbb4 <main@@Base+0x5e78>
   1bafc:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1bb00:	ldr	r6, [sp, #36]	; 0x24
   1bb04:	ldr	sl, [sp, #32]
   1bb08:	str	r4, [sp, #60]	; 0x3c
   1bb0c:	b	1bab8 <main@@Base+0x5d7c>
   1bb10:	ldr	r6, [sp, #36]	; 0x24
   1bb14:	ldr	sl, [sp, #32]
   1bb18:	bne	1bb28 <main@@Base+0x5dec>
   1bb1c:	ldrb	r0, [r7, #2]!
   1bb20:	cmp	r0, #32
   1bb24:	bhi	1bb38 <main@@Base+0x5dfc>
   1bb28:	mov	r0, sl
   1bb2c:	mov	r2, r6
   1bb30:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1bb34:	mov	r7, r0
   1bb38:	cmp	r8, r7
   1bb3c:	beq	1bba0 <main@@Base+0x5e64>
   1bb40:	mov	r4, #0
   1bb44:	cmp	r7, r6
   1bb48:	str	r4, [fp, #-52]	; 0xffffffcc
   1bb4c:	str	r4, [fp, #-56]	; 0xffffffc8
   1bb50:	str	r4, [sp, #60]	; 0x3c
   1bb54:	str	r4, [sp, #48]	; 0x30
   1bb58:	beq	1b684 <main@@Base+0x5948>
   1bb5c:	sub	r0, fp, #56	; 0x38
   1bb60:	mov	r1, r7
   1bb64:	mov	r2, r6
   1bb68:	add	r3, sp, #48	; 0x30
   1bb6c:	str	r0, [sp]
   1bb70:	mov	r0, sl
   1bb74:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1bb78:	cmp	r0, r7
   1bb7c:	beq	1b68c <main@@Base+0x5950>
   1bb80:	mov	r1, r0
   1bb84:	ldr	r0, [sp, #48]	; 0x30
   1bb88:	cmp	r0, #0
   1bb8c:	beq	1b694 <main@@Base+0x5958>
   1bb90:	ldr	sl, [sp, #32]
   1bb94:	ldr	r6, [sp, #36]	; 0x24
   1bb98:	mov	r3, #8
   1bb9c:	b	1b6ac <main@@Base+0x5970>
   1bba0:	mov	r0, sl
   1bba4:	mov	r1, r8
   1bba8:	mov	r2, r6
   1bbac:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   1bbb0:	mov	r1, r0
   1bbb4:	sub	r0, r6, r1
   1bbb8:	cmp	r0, #2
   1bbbc:	blt	1bbe8 <main@@Base+0x5eac>
   1bbc0:	ldrb	r0, [r1]
   1bbc4:	cmp	r0, #32
   1bbc8:	bls	1bbd4 <main@@Base+0x5e98>
   1bbcc:	mov	r2, r1
   1bbd0:	b	1bbf8 <main@@Base+0x5ebc>
   1bbd4:	bne	1bbe8 <main@@Base+0x5eac>
   1bbd8:	mov	r2, r1
   1bbdc:	ldrb	r0, [r2, #1]!
   1bbe0:	cmp	r0, #32
   1bbe4:	bhi	1bbf8 <main@@Base+0x5ebc>
   1bbe8:	mov	r0, sl
   1bbec:	mov	r2, r6
   1bbf0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1bbf4:	mov	r2, r0
   1bbf8:	cmp	r2, r6
   1bbfc:	beq	1bc80 <main@@Base+0x5f44>
   1bc00:	ldrb	r0, [r2]
   1bc04:	cmp	r0, #44	; 0x2c
   1bc08:	bne	1bc88 <main@@Base+0x5f4c>
   1bc0c:	add	r1, r2, #1
   1bc10:	sub	r0, r6, r1
   1bc14:	cmp	r0, #2
   1bc18:	blt	1bc40 <main@@Base+0x5f04>
   1bc1c:	ldrb	r0, [r1]
   1bc20:	cmp	r0, #32
   1bc24:	bls	1bc30 <main@@Base+0x5ef4>
   1bc28:	mov	r2, r1
   1bc2c:	b	1bc50 <main@@Base+0x5f14>
   1bc30:	bne	1bc40 <main@@Base+0x5f04>
   1bc34:	ldrb	r0, [r2, #2]!
   1bc38:	cmp	r0, #32
   1bc3c:	bhi	1bc50 <main@@Base+0x5f14>
   1bc40:	mov	r0, sl
   1bc44:	mov	r2, r6
   1bc48:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1bc4c:	mov	r2, r0
   1bc50:	cmp	r2, r6
   1bc54:	beq	1bcc4 <main@@Base+0x5f88>
   1bc58:	ldrb	r0, [r2]
   1bc5c:	cmp	r0, #125	; 0x7d
   1bc60:	bne	1b718 <main@@Base+0x59dc>
   1bc64:	b	1bc98 <main@@Base+0x5f5c>
   1bc68:	ldr	sl, [sp, #32]
   1bc6c:	ldr	r6, [sp, #36]	; 0x24
   1bc70:	mov	r3, #33	; 0x21
   1bc74:	mov	r0, sl
   1bc78:	mov	r2, r6
   1bc7c:	b	1bd78 <main@@Base+0x603c>
   1bc80:	mov	r8, r6
   1bc84:	b	1bd80 <main@@Base+0x6044>
   1bc88:	cmp	r0, #125	; 0x7d
   1bc8c:	bne	1bcd0 <main@@Base+0x5f94>
   1bc90:	ldr	r6, [sp, #36]	; 0x24
   1bc94:	ldr	sl, [sp, #32]
   1bc98:	add	r1, r2, #1
   1bc9c:	sub	r0, r6, r1
   1bca0:	cmp	r0, #2
   1bca4:	blt	1bd08 <main@@Base+0x5fcc>
   1bca8:	ldrb	r0, [r1]
   1bcac:	cmp	r0, #32
   1bcb0:	bls	1bcec <main@@Base+0x5fb0>
   1bcb4:	ldr	r6, [sp, #36]	; 0x24
   1bcb8:	ldr	sl, [sp, #32]
   1bcbc:	mov	r8, r1
   1bcc0:	b	1bd80 <main@@Base+0x6044>
   1bcc4:	mov	r0, sl
   1bcc8:	mov	r1, r6
   1bccc:	b	1bce0 <main@@Base+0x5fa4>
   1bcd0:	ldr	sl, [sp, #32]
   1bcd4:	ldr	r6, [sp, #36]	; 0x24
   1bcd8:	mov	r1, r2
   1bcdc:	mov	r0, sl
   1bce0:	mov	r2, r6
   1bce4:	mov	r3, #10
   1bce8:	b	1bd78 <main@@Base+0x603c>
   1bcec:	ldr	r6, [sp, #36]	; 0x24
   1bcf0:	ldr	sl, [sp, #32]
   1bcf4:	bne	1bd08 <main@@Base+0x5fcc>
   1bcf8:	ldrb	r0, [r2, #2]!
   1bcfc:	cmp	r0, #32
   1bd00:	mov	r8, r2
   1bd04:	bhi	1bd80 <main@@Base+0x6044>
   1bd08:	mov	r0, sl
   1bd0c:	mov	r2, r6
   1bd10:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1bd14:	b	1bd7c <main@@Base+0x6040>
   1bd18:	ldr	r0, [sl]
   1bd1c:	mov	r1, #1
   1bd20:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1bd24:	mov	r9, r0
   1bd28:	cmp	r0, #0
   1bd2c:	beq	1662c <main@@Base+0x8f0>
   1bd30:	cmp	r8, r6
   1bd34:	beq	1bd68 <main@@Base+0x602c>
   1bd38:	ldrb	r0, [r8]
   1bd3c:	cmp	r0, #123	; 0x7b
   1bd40:	bne	1bd68 <main@@Base+0x602c>
   1bd44:	add	r1, r8, #1
   1bd48:	sub	r0, r6, r1
   1bd4c:	cmp	r0, #2
   1bd50:	blt	1b61c <main@@Base+0x58e0>
   1bd54:	ldrb	r0, [r1]
   1bd58:	cmp	r0, #32
   1bd5c:	bls	1b60c <main@@Base+0x58d0>
   1bd60:	mov	r8, r1
   1bd64:	b	1b62c <main@@Base+0x58f0>
   1bd68:	mov	r0, sl
   1bd6c:	mov	r1, r8
   1bd70:	mov	r2, r6
   1bd74:	mov	r3, #21
   1bd78:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1bd7c:	mov	r8, r0
   1bd80:	sub	r0, r6, r8
   1bd84:	cmp	r0, #2
   1bd88:	blt	1bdb4 <main@@Base+0x6078>
   1bd8c:	ldrb	r0, [r8]
   1bd90:	cmp	r0, #32
   1bd94:	bls	1bda0 <main@@Base+0x6064>
   1bd98:	mov	r9, r8
   1bd9c:	b	1bdc8 <main@@Base+0x608c>
   1bda0:	bne	1bdb4 <main@@Base+0x6078>
   1bda4:	mov	r9, r8
   1bda8:	ldrb	r0, [r9, #1]!
   1bdac:	cmp	r0, #32
   1bdb0:	bhi	1bdc8 <main@@Base+0x608c>
   1bdb4:	mov	r0, sl
   1bdb8:	mov	r1, r8
   1bdbc:	mov	r2, r6
   1bdc0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1bdc4:	mov	r9, r0
   1bdc8:	cmp	r9, r6
   1bdcc:	beq	1cc60 <main@@Base+0x6f24>
   1bdd0:	ldrb	r0, [r9]
   1bdd4:	cmp	r0, #44	; 0x2c
   1bdd8:	bne	1cc68 <main@@Base+0x6f2c>
   1bddc:	add	r1, r9, #1
   1bde0:	sub	r0, r6, r1
   1bde4:	cmp	r0, #2
   1bde8:	blt	1be14 <main@@Base+0x60d8>
   1bdec:	ldrb	r0, [r1]
   1bdf0:	cmp	r0, #32
   1bdf4:	bls	1be00 <main@@Base+0x60c4>
   1bdf8:	mov	r8, r1
   1bdfc:	b	1be24 <main@@Base+0x60e8>
   1be00:	bne	1be14 <main@@Base+0x60d8>
   1be04:	ldrb	r0, [r9, #2]!
   1be08:	cmp	r0, #32
   1be0c:	mov	r8, r9
   1be10:	bhi	1be24 <main@@Base+0x60e8>
   1be14:	mov	r0, sl
   1be18:	mov	r2, r6
   1be1c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1be20:	mov	r8, r0
   1be24:	cmp	r8, r6
   1be28:	beq	1cc8c <main@@Base+0x6f50>
   1be2c:	ldrb	r0, [r8]
   1be30:	cmp	r0, #93	; 0x5d
   1be34:	bne	1bd18 <main@@Base+0x5fdc>
   1be38:	add	r1, r8, #1
   1be3c:	sub	r0, r6, r1
   1be40:	cmp	r0, #2
   1be44:	blt	1ef40 <main@@Base+0x9204>
   1be48:	ldrb	r0, [r1]
   1be4c:	cmp	r0, #32
   1be50:	bls	1ef24 <main@@Base+0x91e8>
   1be54:	ldr	r6, [sp, #36]	; 0x24
   1be58:	ldr	sl, [sp, #32]
   1be5c:	mov	r9, r1
   1be60:	b	1ad2c <main@@Base+0x4ff0>
   1be64:	bne	1be74 <main@@Base+0x6138>
   1be68:	ldrb	r0, [r8, #2]!
   1be6c:	cmp	r0, #32
   1be70:	bhi	1be84 <main@@Base+0x6148>
   1be74:	mov	r0, sl
   1be78:	mov	r2, r6
   1be7c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1be80:	mov	r8, r0
   1be84:	cmp	r7, r8
   1be88:	beq	1e144 <main@@Base+0x8408>
   1be8c:	mov	r0, #0
   1be90:	mov	r1, #3
   1be94:	str	r0, [sp, #44]	; 0x2c
   1be98:	ldr	r0, [sl]
   1be9c:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   1bea0:	cmp	r0, #0
   1bea4:	bne	1bf10 <main@@Base+0x61d4>
   1bea8:	cmp	r8, r6
   1beac:	beq	1bee0 <main@@Base+0x61a4>
   1beb0:	ldrb	r0, [r8]
   1beb4:	cmp	r0, #123	; 0x7b
   1beb8:	bne	1bee0 <main@@Base+0x61a4>
   1bebc:	add	r1, r8, #1
   1bec0:	sub	r0, r6, r1
   1bec4:	cmp	r0, #2
   1bec8:	blt	1e2fc <main@@Base+0x85c0>
   1becc:	ldrb	r0, [r1]
   1bed0:	cmp	r0, #32
   1bed4:	bls	1e2ec <main@@Base+0x85b0>
   1bed8:	mov	r8, r1
   1bedc:	b	1e30c <main@@Base+0x85d0>
   1bee0:	mov	r0, sl
   1bee4:	mov	r1, r8
   1bee8:	mov	r2, r6
   1beec:	mov	r3, #21
   1bef0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1bef4:	mov	r8, r0
   1bef8:	ldr	r0, [sp, #24]
   1befc:	ldr	r0, [r0]
   1bf00:	cmp	r0, #0
   1bf04:	beq	1bf40 <main@@Base+0x6204>
   1bf08:	ldr	r6, [sp, #36]	; 0x24
   1bf0c:	ldr	sl, [sp, #32]
   1bf10:	mov	r0, sl
   1bf14:	mov	r1, r8
   1bf18:	mov	r2, r6
   1bf1c:	mov	r3, #33	; 0x21
   1bf20:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1bf24:	mov	r8, r0
   1bf28:	ldr	r0, [sp, #44]	; 0x2c
   1bf2c:	cmp	r0, #0
   1bf30:	beq	1662c <main@@Base+0x8f0>
   1bf34:	ldr	r0, [sl]
   1bf38:	mov	r1, #14
   1bf3c:	b	1f0fc <main@@Base+0x93c0>
   1bf40:	ldr	r0, [sp, #32]
   1bf44:	ldr	r0, [r0]
   1bf48:	bl	2e138 <flatcc_builder_end_table@@Base>
   1bf4c:	cmp	r0, #0
   1bf50:	str	r0, [sp, #44]	; 0x2c
   1bf54:	beq	1bf08 <main@@Base+0x61cc>
   1bf58:	ldr	r6, [sp, #36]	; 0x24
   1bf5c:	ldr	sl, [sp, #32]
   1bf60:	b	1bf34 <main@@Base+0x61f8>
   1bf64:	bne	1bf74 <main@@Base+0x6238>
   1bf68:	ldrb	r0, [r8, #2]!
   1bf6c:	cmp	r0, #32
   1bf70:	bhi	1bf84 <main@@Base+0x6248>
   1bf74:	mov	r0, sl
   1bf78:	mov	r2, r6
   1bf7c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1bf80:	mov	r8, r0
   1bf84:	cmp	r7, r8
   1bf88:	beq	1e144 <main@@Base+0x8408>
   1bf8c:	ldr	r0, [sl]
   1bf90:	mov	r1, #1
   1bf94:	mov	r2, #1
   1bf98:	mvn	r3, #0
   1bf9c:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   1bfa0:	cmp	r0, #0
   1bfa4:	bne	1662c <main@@Base+0x8f0>
   1bfa8:	cmp	r8, r6
   1bfac:	beq	1bfe8 <main@@Base+0x62ac>
   1bfb0:	ldrb	r0, [r8]
   1bfb4:	cmp	r0, #91	; 0x5b
   1bfb8:	bne	1bfe8 <main@@Base+0x62ac>
   1bfbc:	add	r1, r8, #1
   1bfc0:	sub	r0, r6, r1
   1bfc4:	cmp	r0, #2
   1bfc8:	blt	1c9f4 <main@@Base+0x6cb8>
   1bfcc:	ldrb	r0, [r1]
   1bfd0:	cmp	r0, #32
   1bfd4:	bls	1c9dc <main@@Base+0x6ca0>
   1bfd8:	ldr	r6, [sp, #36]	; 0x24
   1bfdc:	ldr	sl, [sp, #32]
   1bfe0:	mov	r8, r1
   1bfe4:	b	1ca04 <main@@Base+0x6cc8>
   1bfe8:	mov	r0, sl
   1bfec:	mov	r1, r8
   1bff0:	mov	r2, r6
   1bff4:	mov	r3, #22
   1bff8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1bffc:	mov	r8, r0
   1c000:	ldr	r0, [sl]
   1c004:	bl	2e448 <flatcc_builder_end_vector@@Base>
   1c008:	cmp	r0, #0
   1c00c:	str	r0, [sp, #44]	; 0x2c
   1c010:	beq	1662c <main@@Base+0x8f0>
   1c014:	ldr	r0, [sl]
   1c018:	mov	r1, #5
   1c01c:	b	1f0fc <main@@Base+0x93c0>
   1c020:	ldr	sl, [sp, #32]
   1c024:	bne	1c034 <main@@Base+0x62f8>
   1c028:	ldrb	r0, [r6, #2]!
   1c02c:	cmp	r0, #32
   1c030:	bhi	1c044 <main@@Base+0x6308>
   1c034:	ldr	r2, [sp, #36]	; 0x24
   1c038:	mov	r0, sl
   1c03c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c040:	mov	r6, r0
   1c044:	cmp	r9, r6
   1c048:	beq	1c0b0 <main@@Base+0x6374>
   1c04c:	ldr	r2, [sp, #36]	; 0x24
   1c050:	mov	r4, #0
   1c054:	str	r4, [fp, #-52]	; 0xffffffcc
   1c058:	str	r4, [fp, #-56]	; 0xffffffc8
   1c05c:	str	r4, [sp, #60]	; 0x3c
   1c060:	str	r4, [sp, #48]	; 0x30
   1c064:	cmp	r6, r2
   1c068:	beq	1c128 <main@@Base+0x63ec>
   1c06c:	sub	r0, fp, #56	; 0x38
   1c070:	mov	r1, r6
   1c074:	add	r3, sp, #48	; 0x30
   1c078:	str	r0, [sp]
   1c07c:	mov	r0, sl
   1c080:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1c084:	cmp	r0, r6
   1c088:	beq	1c130 <main@@Base+0x63f4>
   1c08c:	mov	r9, r0
   1c090:	ldr	r0, [sp, #48]	; 0x30
   1c094:	cmp	r0, #0
   1c098:	beq	1c138 <main@@Base+0x63fc>
   1c09c:	ldr	r2, [sp, #36]	; 0x24
   1c0a0:	mov	r0, sl
   1c0a4:	mov	r1, r9
   1c0a8:	mov	r3, #8
   1c0ac:	b	1c158 <main@@Base+0x641c>
   1c0b0:	ldr	r6, [sp, #36]	; 0x24
   1c0b4:	add	r7, r8, #16
   1c0b8:	mov	r1, #8
   1c0bc:	mov	r2, #-268435456	; 0xf0000000
   1c0c0:	sub	r0, r6, r7
   1c0c4:	cmp	r0, #8
   1c0c8:	movcc	r1, r0
   1c0cc:	add	r1, r2, r1, lsl #28
   1c0d0:	asr	r1, r1, #28
   1c0d4:	cmp	r1, #0
   1c0d8:	blt	1e144 <main@@Base+0x8408>
   1c0dc:	ldrb	r1, [r7]
   1c0e0:	cmp	r1, #97	; 0x61
   1c0e4:	bne	1e144 <main@@Base+0x8408>
   1c0e8:	cmp	r0, #2
   1c0ec:	blt	1e144 <main@@Base+0x8408>
   1c0f0:	ldrb	r0, [r8, #17]
   1c0f4:	cmp	r0, #34	; 0x22
   1c0f8:	bne	1e144 <main@@Base+0x8408>
   1c0fc:	add	r1, r8, #18
   1c100:	sub	r0, r6, r1
   1c104:	cmp	r0, #2
   1c108:	blt	1c4a0 <main@@Base+0x6764>
   1c10c:	ldrb	r0, [r1]
   1c110:	cmp	r0, #32
   1c114:	bls	1c488 <main@@Base+0x674c>
   1c118:	ldr	r6, [sp, #36]	; 0x24
   1c11c:	ldr	sl, [sp, #32]
   1c120:	mov	r8, r1
   1c124:	b	1c4b0 <main@@Base+0x6774>
   1c128:	mov	r9, r2
   1c12c:	b	1c160 <main@@Base+0x6424>
   1c130:	mov	r9, r6
   1c134:	b	1c160 <main@@Base+0x6424>
   1c138:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c13c:	cmp	r0, #0
   1c140:	beq	1cc7c <main@@Base+0x6f40>
   1c144:	ldr	sl, [sp, #32]
   1c148:	ldr	r2, [sp, #36]	; 0x24
   1c14c:	mov	r1, r9
   1c150:	mov	r3, #7
   1c154:	mov	r0, sl
   1c158:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c15c:	mov	r9, r0
   1c160:	cmp	r6, r9
   1c164:	bne	1c1a4 <main@@Base+0x6468>
   1c168:	ldr	r4, [sp, #36]	; 0x24
   1c16c:	movw	r3, #33076	; 0x8134
   1c170:	add	r0, sp, #60	; 0x3c
   1c174:	mov	r1, r6
   1c178:	str	r0, [sp]
   1c17c:	mov	r0, sl
   1c180:	movt	r3, #5
   1c184:	mov	r2, r4
   1c188:	bl	236d0 <main@@Base+0xd994>
   1c18c:	mov	r9, r0
   1c190:	cmp	r0, r6
   1c194:	cmpne	r9, r4
   1c198:	beq	1f308 <main@@Base+0x95cc>
   1c19c:	ldr	r4, [sp, #60]	; 0x3c
   1c1a0:	ldr	sl, [sp, #32]
   1c1a4:	ldr	r6, [sp, #36]	; 0x24
   1c1a8:	cmp	r4, #0
   1c1ac:	bne	1c1bc <main@@Base+0x6480>
   1c1b0:	ldrb	r0, [sl, #8]
   1c1b4:	tst	r0, #2
   1c1b8:	beq	1e158 <main@@Base+0x841c>
   1c1bc:	ldr	r0, [sl]
   1c1c0:	mov	r1, #17
   1c1c4:	mov	r2, #4
   1c1c8:	mov	r3, #4
   1c1cc:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1c1d0:	cmp	r0, #0
   1c1d4:	beq	1f308 <main@@Base+0x95cc>
   1c1d8:	str	r4, [r0]
   1c1dc:	b	1e158 <main@@Base+0x841c>
   1c1e0:	ldr	sl, [sp, #32]
   1c1e4:	bne	1c1f4 <main@@Base+0x64b8>
   1c1e8:	ldrb	r0, [r6, #2]!
   1c1ec:	cmp	r0, #32
   1c1f0:	bhi	1c204 <main@@Base+0x64c8>
   1c1f4:	ldr	r2, [sp, #36]	; 0x24
   1c1f8:	mov	r0, sl
   1c1fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c200:	mov	r6, r0
   1c204:	cmp	r9, r6
   1c208:	beq	1c284 <main@@Base+0x6548>
   1c20c:	ldr	r2, [sp, #36]	; 0x24
   1c210:	mov	r4, #0
   1c214:	str	r4, [fp, #-52]	; 0xffffffcc
   1c218:	str	r4, [fp, #-56]	; 0xffffffc8
   1c21c:	str	r4, [sp, #52]	; 0x34
   1c220:	str	r4, [sp, #48]	; 0x30
   1c224:	str	r4, [sp, #60]	; 0x3c
   1c228:	cmp	r6, r2
   1c22c:	beq	1c2fc <main@@Base+0x65c0>
   1c230:	sub	r0, fp, #56	; 0x38
   1c234:	mov	r1, r6
   1c238:	add	r3, sp, #60	; 0x3c
   1c23c:	str	r0, [sp]
   1c240:	mov	r0, sl
   1c244:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1c248:	cmp	r0, r6
   1c24c:	beq	1c308 <main@@Base+0x65cc>
   1c250:	mov	r9, r0
   1c254:	ldr	r0, [sp, #60]	; 0x3c
   1c258:	cmp	r0, #0
   1c25c:	beq	1c318 <main@@Base+0x65dc>
   1c260:	ldr	r2, [sp, #36]	; 0x24
   1c264:	mov	r0, sl
   1c268:	mov	r1, r9
   1c26c:	mov	r3, #8
   1c270:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c274:	mov	r9, r0
   1c278:	mov	r4, #0
   1c27c:	mov	r5, #0
   1c280:	b	1c328 <main@@Base+0x65ec>
   1c284:	ldr	r6, [sp, #36]	; 0x24
   1c288:	add	r7, r8, #16
   1c28c:	mov	r1, #8
   1c290:	mov	r2, #-268435456	; 0xf0000000
   1c294:	sub	r0, r6, r7
   1c298:	cmp	r0, #8
   1c29c:	movcc	r1, r0
   1c2a0:	add	r1, r2, r1, lsl #28
   1c2a4:	asr	r1, r1, #28
   1c2a8:	cmp	r1, #0
   1c2ac:	blt	1e144 <main@@Base+0x8408>
   1c2b0:	ldrb	r1, [r7]
   1c2b4:	cmp	r1, #97	; 0x61
   1c2b8:	bne	1e144 <main@@Base+0x8408>
   1c2bc:	cmp	r0, #2
   1c2c0:	blt	1e144 <main@@Base+0x8408>
   1c2c4:	ldrb	r0, [r8, #17]
   1c2c8:	cmp	r0, #34	; 0x22
   1c2cc:	bne	1e144 <main@@Base+0x8408>
   1c2d0:	add	r1, r8, #18
   1c2d4:	sub	r0, r6, r1
   1c2d8:	cmp	r0, #2
   1c2dc:	blt	1c520 <main@@Base+0x67e4>
   1c2e0:	ldrb	r0, [r1]
   1c2e4:	cmp	r0, #32
   1c2e8:	bls	1c508 <main@@Base+0x67cc>
   1c2ec:	ldr	r6, [sp, #36]	; 0x24
   1c2f0:	ldr	sl, [sp, #32]
   1c2f4:	mov	r8, r1
   1c2f8:	b	1c530 <main@@Base+0x67f4>
   1c2fc:	mov	r5, #0
   1c300:	mov	r9, r2
   1c304:	b	1c328 <main@@Base+0x65ec>
   1c308:	mov	r4, #0
   1c30c:	mov	r5, #0
   1c310:	mov	r9, r6
   1c314:	b	1c328 <main@@Base+0x65ec>
   1c318:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c31c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1c320:	str	r5, [sp, #52]	; 0x34
   1c324:	str	r4, [sp, #48]	; 0x30
   1c328:	cmp	r6, r9
   1c32c:	bne	1c370 <main@@Base+0x6634>
   1c330:	ldr	r4, [sp, #36]	; 0x24
   1c334:	movw	r3, #33100	; 0x814c
   1c338:	add	r0, sp, #48	; 0x30
   1c33c:	mov	r1, r6
   1c340:	str	r0, [sp]
   1c344:	mov	r0, sl
   1c348:	movt	r3, #5
   1c34c:	mov	r2, r4
   1c350:	bl	23898 <main@@Base+0xdb5c>
   1c354:	mov	r9, r0
   1c358:	cmp	r0, r6
   1c35c:	cmpne	r9, r4
   1c360:	beq	1f308 <main@@Base+0x95cc>
   1c364:	ldr	r4, [sp, #48]	; 0x30
   1c368:	ldr	r5, [sp, #52]	; 0x34
   1c36c:	ldr	sl, [sp, #32]
   1c370:	ldr	r6, [sp, #36]	; 0x24
   1c374:	orrs	r0, r4, r5
   1c378:	bne	1c388 <main@@Base+0x664c>
   1c37c:	ldrb	r0, [sl, #8]
   1c380:	tst	r0, #2
   1c384:	beq	1e158 <main@@Base+0x841c>
   1c388:	ldr	r0, [sl]
   1c38c:	mov	r1, #19
   1c390:	mov	r2, #8
   1c394:	mov	r3, #8
   1c398:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1c39c:	cmp	r0, #0
   1c3a0:	beq	1f308 <main@@Base+0x95cc>
   1c3a4:	strd	r4, [r0]
   1c3a8:	b	1e158 <main@@Base+0x841c>
   1c3ac:	ldr	r6, [sp, #36]	; 0x24
   1c3b0:	ldr	sl, [sp, #32]
   1c3b4:	bne	1c3c4 <main@@Base+0x6688>
   1c3b8:	ldrb	r0, [r8, #2]!
   1c3bc:	cmp	r0, #32
   1c3c0:	bhi	19494 <main@@Base+0x3758>
   1c3c4:	mov	r0, sl
   1c3c8:	mov	r2, r6
   1c3cc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c3d0:	b	19490 <main@@Base+0x3754>
   1c3d4:	ldr	r6, [sp, #36]	; 0x24
   1c3d8:	ldr	sl, [sp, #32]
   1c3dc:	bne	1c3ec <main@@Base+0x66b0>
   1c3e0:	ldrb	r0, [r8, #2]!
   1c3e4:	cmp	r0, #32
   1c3e8:	bhi	1c3fc <main@@Base+0x66c0>
   1c3ec:	mov	r0, sl
   1c3f0:	mov	r2, r6
   1c3f4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c3f8:	mov	r8, r0
   1c3fc:	cmp	r7, r8
   1c400:	beq	1e144 <main@@Base+0x8408>
   1c404:	ldr	r0, [sl]
   1c408:	bl	2d468 <flatcc_builder_start_offset_vector@@Base>
   1c40c:	cmp	r0, #0
   1c410:	bne	1662c <main@@Base+0x8f0>
   1c414:	cmp	r8, r6
   1c418:	beq	1c450 <main@@Base+0x6714>
   1c41c:	ldrb	r0, [r8]
   1c420:	cmp	r0, #91	; 0x5b
   1c424:	bne	1c450 <main@@Base+0x6714>
   1c428:	add	r1, r8, #1
   1c42c:	sub	r0, r6, r1
   1c430:	cmp	r0, #2
   1c434:	blt	1ccb0 <main@@Base+0x6f74>
   1c438:	ldrb	r0, [r1]
   1c43c:	cmp	r0, #32
   1c440:	bls	1cc98 <main@@Base+0x6f5c>
   1c444:	ldr	r6, [sp, #36]	; 0x24
   1c448:	mov	r8, r1
   1c44c:	b	1ccc0 <main@@Base+0x6f84>
   1c450:	mov	r0, sl
   1c454:	mov	r1, r8
   1c458:	mov	r2, r6
   1c45c:	mov	r3, #22
   1c460:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c464:	mov	r8, r0
   1c468:	ldr	r0, [sl]
   1c46c:	bl	2d534 <flatcc_builder_end_offset_vector@@Base>
   1c470:	cmp	r0, #0
   1c474:	str	r0, [sp, #44]	; 0x2c
   1c478:	beq	1662c <main@@Base+0x8f0>
   1c47c:	ldr	r0, [sl]
   1c480:	mov	r1, #10
   1c484:	b	1f0fc <main@@Base+0x93c0>
   1c488:	ldr	r6, [sp, #36]	; 0x24
   1c48c:	ldr	sl, [sp, #32]
   1c490:	bne	1c4a0 <main@@Base+0x6764>
   1c494:	ldrb	r0, [r8, #19]!
   1c498:	cmp	r0, #32
   1c49c:	bhi	1c4b0 <main@@Base+0x6774>
   1c4a0:	mov	r0, sl
   1c4a4:	mov	r2, r6
   1c4a8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c4ac:	mov	r8, r0
   1c4b0:	cmp	r8, r6
   1c4b4:	beq	1c4f0 <main@@Base+0x67b4>
   1c4b8:	ldrb	r0, [r8]
   1c4bc:	cmp	r0, #58	; 0x3a
   1c4c0:	bne	1c4f0 <main@@Base+0x67b4>
   1c4c4:	add	r1, r8, #1
   1c4c8:	sub	r0, r6, r1
   1c4cc:	cmp	r0, #2
   1c4d0:	blt	1df6c <main@@Base+0x8230>
   1c4d4:	ldrb	r0, [r1]
   1c4d8:	cmp	r0, #32
   1c4dc:	bls	1df54 <main@@Base+0x8218>
   1c4e0:	ldr	r6, [sp, #36]	; 0x24
   1c4e4:	ldr	sl, [sp, #32]
   1c4e8:	mov	r8, r1
   1c4ec:	b	1df7c <main@@Base+0x8240>
   1c4f0:	mov	r0, sl
   1c4f4:	mov	r1, r8
   1c4f8:	mov	r2, r6
   1c4fc:	mov	r3, #4
   1c500:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c504:	b	1df78 <main@@Base+0x823c>
   1c508:	ldr	r6, [sp, #36]	; 0x24
   1c50c:	ldr	sl, [sp, #32]
   1c510:	bne	1c520 <main@@Base+0x67e4>
   1c514:	ldrb	r0, [r8, #19]!
   1c518:	cmp	r0, #32
   1c51c:	bhi	1c530 <main@@Base+0x67f4>
   1c520:	mov	r0, sl
   1c524:	mov	r2, r6
   1c528:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c52c:	mov	r8, r0
   1c530:	cmp	r8, r6
   1c534:	beq	1c570 <main@@Base+0x6834>
   1c538:	ldrb	r0, [r8]
   1c53c:	cmp	r0, #58	; 0x3a
   1c540:	bne	1c570 <main@@Base+0x6834>
   1c544:	add	r1, r8, #1
   1c548:	sub	r0, r6, r1
   1c54c:	cmp	r0, #2
   1c550:	blt	1e0b4 <main@@Base+0x8378>
   1c554:	ldrb	r0, [r1]
   1c558:	cmp	r0, #32
   1c55c:	bls	1e09c <main@@Base+0x8360>
   1c560:	ldr	r6, [sp, #36]	; 0x24
   1c564:	ldr	sl, [sp, #32]
   1c568:	mov	r8, r1
   1c56c:	b	1e0c4 <main@@Base+0x8388>
   1c570:	mov	r0, sl
   1c574:	mov	r1, r8
   1c578:	mov	r2, r6
   1c57c:	mov	r3, #4
   1c580:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c584:	b	1e0c0 <main@@Base+0x8384>
   1c588:	ldr	r6, [sp, #36]	; 0x24
   1c58c:	ldr	sl, [sp, #32]
   1c590:	bne	1c5a0 <main@@Base+0x6864>
   1c594:	ldrb	r0, [r8, #2]!
   1c598:	cmp	r0, #32
   1c59c:	bhi	1c5b0 <main@@Base+0x6874>
   1c5a0:	mov	r0, sl
   1c5a4:	mov	r2, r6
   1c5a8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c5ac:	mov	r8, r0
   1c5b0:	cmp	r7, r8
   1c5b4:	beq	1e144 <main@@Base+0x8408>
   1c5b8:	mov	r2, r6
   1c5bc:	mov	r6, #0
   1c5c0:	cmp	r8, r2
   1c5c4:	str	r6, [fp, #-52]	; 0xffffffcc
   1c5c8:	str	r6, [fp, #-56]	; 0xffffffc8
   1c5cc:	str	r6, [sp, #60]	; 0x3c
   1c5d0:	str	r6, [sp, #48]	; 0x30
   1c5d4:	beq	1c630 <main@@Base+0x68f4>
   1c5d8:	sub	r0, fp, #56	; 0x38
   1c5dc:	mov	r1, r8
   1c5e0:	add	r3, sp, #48	; 0x30
   1c5e4:	str	r0, [sp]
   1c5e8:	mov	r0, sl
   1c5ec:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1c5f0:	cmp	r0, r8
   1c5f4:	beq	1c638 <main@@Base+0x68fc>
   1c5f8:	ldr	r2, [sp, #48]	; 0x30
   1c5fc:	mov	r9, r0
   1c600:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c604:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c608:	cmp	r2, #0
   1c60c:	beq	1c640 <main@@Base+0x6904>
   1c610:	subs	r2, r0, #-2147483647	; 0x80000001
   1c614:	sbcs	r1, r1, #0
   1c618:	bcc	1c66c <main@@Base+0x6930>
   1c61c:	ldr	sl, [sp, #32]
   1c620:	ldr	r2, [sp, #36]	; 0x24
   1c624:	mov	r1, r9
   1c628:	mov	r3, #8
   1c62c:	b	1c65c <main@@Base+0x6920>
   1c630:	mov	r9, r2
   1c634:	b	1d5f8 <main@@Base+0x78bc>
   1c638:	mov	r9, r8
   1c63c:	b	1d5f8 <main@@Base+0x78bc>
   1c640:	subs	r2, r0, #-2147483648	; 0x80000000
   1c644:	sbcs	r1, r1, #0
   1c648:	bcc	1d5ec <main@@Base+0x78b0>
   1c64c:	ldr	sl, [sp, #32]
   1c650:	ldr	r2, [sp, #36]	; 0x24
   1c654:	mov	r1, r9
   1c658:	mov	r3, #7
   1c65c:	mov	r0, sl
   1c660:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c664:	mov	r9, r0
   1c668:	b	1d5f8 <main@@Base+0x78bc>
   1c66c:	rsb	r6, r0, #0
   1c670:	b	1d5f0 <main@@Base+0x78b4>
   1c674:	ldr	r6, [sp, #36]	; 0x24
   1c678:	ldr	sl, [sp, #32]
   1c67c:	bne	1c690 <main@@Base+0x6954>
   1c680:	ldrb	r0, [r8, #2]!
   1c684:	cmp	r0, #32
   1c688:	mov	r9, r8
   1c68c:	bhi	18eec <main@@Base+0x31b0>
   1c690:	mov	r0, sl
   1c694:	mov	r2, r6
   1c698:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c69c:	b	18ee8 <main@@Base+0x31ac>
   1c6a0:	ldr	r6, [sp, #36]	; 0x24
   1c6a4:	ldr	sl, [sp, #32]
   1c6a8:	bne	1c6b8 <main@@Base+0x697c>
   1c6ac:	ldrb	r0, [r8, #2]!
   1c6b0:	cmp	r0, #32
   1c6b4:	bhi	1c6c8 <main@@Base+0x698c>
   1c6b8:	mov	r0, sl
   1c6bc:	mov	r2, r6
   1c6c0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c6c4:	mov	r8, r0
   1c6c8:	cmp	r8, r6
   1c6cc:	mov	r2, r6
   1c6d0:	beq	1c72c <main@@Base+0x69f0>
   1c6d4:	ldrb	r0, [r8]
   1c6d8:	cmp	r0, #93	; 0x5d
   1c6dc:	bne	1c720 <main@@Base+0x69e4>
   1c6e0:	ldr	r6, [sp, #36]	; 0x24
   1c6e4:	ldr	sl, [sp, #32]
   1c6e8:	add	r1, r8, #1
   1c6ec:	sub	r0, r6, r1
   1c6f0:	cmp	r0, #2
   1c6f4:	blt	1efac <main@@Base+0x9270>
   1c6f8:	ldrb	r0, [r1]
   1c6fc:	cmp	r0, #32
   1c700:	bhi	1daf4 <main@@Base+0x7db8>
   1c704:	ldr	r6, [sp, #36]	; 0x24
   1c708:	ldr	sl, [sp, #32]
   1c70c:	bne	1efac <main@@Base+0x9270>
   1c710:	ldrb	r0, [r8, #2]!
   1c714:	cmp	r0, #32
   1c718:	bhi	1b404 <main@@Base+0x56c8>
   1c71c:	b	1efac <main@@Base+0x9270>
   1c720:	ldr	r6, [sp, #36]	; 0x24
   1c724:	ldr	sl, [sp, #32]
   1c728:	mov	r2, r8
   1c72c:	mov	r1, r2
   1c730:	mov	r0, sl
   1c734:	mov	r2, r6
   1c738:	add	r3, sp, #44	; 0x2c
   1c73c:	bl	165ec <main@@Base+0x8b0>
   1c740:	mov	r8, r0
   1c744:	ldr	r0, [sp, #44]	; 0x2c
   1c748:	cmp	r0, #0
   1c74c:	beq	1662c <main@@Base+0x8f0>
   1c750:	ldr	r0, [sl]
   1c754:	mov	r1, #1
   1c758:	bl	2ce24 <flatcc_builder_extend_offset_vector@@Base>
   1c75c:	cmp	r0, #0
   1c760:	beq	1662c <main@@Base+0x8f0>
   1c764:	ldr	r1, [sp, #44]	; 0x2c
   1c768:	str	r1, [r0]
   1c76c:	sub	r0, r6, r8
   1c770:	cmp	r0, #2
   1c774:	blt	1c7a0 <main@@Base+0x6a64>
   1c778:	ldrb	r0, [r8]
   1c77c:	cmp	r0, #32
   1c780:	bls	1c78c <main@@Base+0x6a50>
   1c784:	mov	r2, r8
   1c788:	b	1c7b4 <main@@Base+0x6a78>
   1c78c:	bne	1c7a0 <main@@Base+0x6a64>
   1c790:	mov	r2, r8
   1c794:	ldrb	r0, [r2, #1]!
   1c798:	cmp	r0, #32
   1c79c:	bhi	1c7b4 <main@@Base+0x6a78>
   1c7a0:	mov	r0, sl
   1c7a4:	mov	r1, r8
   1c7a8:	mov	r2, r6
   1c7ac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c7b0:	mov	r2, r0
   1c7b4:	cmp	r2, r6
   1c7b8:	beq	1dac0 <main@@Base+0x7d84>
   1c7bc:	ldrb	r0, [r2]
   1c7c0:	cmp	r0, #44	; 0x2c
   1c7c4:	bne	1dac8 <main@@Base+0x7d8c>
   1c7c8:	add	r1, r2, #1
   1c7cc:	sub	r0, r6, r1
   1c7d0:	cmp	r0, #2
   1c7d4:	blt	1c7fc <main@@Base+0x6ac0>
   1c7d8:	ldrb	r0, [r1]
   1c7dc:	cmp	r0, #32
   1c7e0:	bls	1c7ec <main@@Base+0x6ab0>
   1c7e4:	mov	r2, r1
   1c7e8:	b	1c80c <main@@Base+0x6ad0>
   1c7ec:	bne	1c7fc <main@@Base+0x6ac0>
   1c7f0:	ldrb	r0, [r2, #2]!
   1c7f4:	cmp	r0, #32
   1c7f8:	bhi	1c80c <main@@Base+0x6ad0>
   1c7fc:	mov	r0, sl
   1c800:	mov	r2, r6
   1c804:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c808:	mov	r2, r0
   1c80c:	cmp	r2, r6
   1c810:	beq	1db0c <main@@Base+0x7dd0>
   1c814:	ldrb	r0, [r2]
   1c818:	cmp	r0, #93	; 0x5d
   1c81c:	bne	1c72c <main@@Base+0x69f0>
   1c820:	b	1dad8 <main@@Base+0x7d9c>
   1c824:	ldr	r6, [sp, #36]	; 0x24
   1c828:	ldr	sl, [sp, #32]
   1c82c:	bne	1c83c <main@@Base+0x6b00>
   1c830:	ldrb	r0, [r8, #2]!
   1c834:	cmp	r0, #32
   1c838:	bhi	1c84c <main@@Base+0x6b10>
   1c83c:	mov	r0, sl
   1c840:	mov	r2, r6
   1c844:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c848:	mov	r8, r0
   1c84c:	cmp	r9, r8
   1c850:	beq	19470 <main@@Base+0x3734>
   1c854:	ldr	r0, [sl]
   1c858:	mov	r1, #8
   1c85c:	mov	r2, #8
   1c860:	mvn	r3, #-536870912	; 0xe0000000
   1c864:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   1c868:	cmp	r0, #0
   1c86c:	bne	1662c <main@@Base+0x8f0>
   1c870:	cmp	r8, r6
   1c874:	beq	1c8ac <main@@Base+0x6b70>
   1c878:	ldrb	r0, [r8]
   1c87c:	cmp	r0, #91	; 0x5b
   1c880:	bne	1c8ac <main@@Base+0x6b70>
   1c884:	add	r1, r8, #1
   1c888:	sub	r0, r6, r1
   1c88c:	cmp	r0, #2
   1c890:	blt	1d68c <main@@Base+0x7950>
   1c894:	ldrb	r0, [r1]
   1c898:	cmp	r0, #32
   1c89c:	bls	1d674 <main@@Base+0x7938>
   1c8a0:	ldr	r6, [sp, #36]	; 0x24
   1c8a4:	mov	r8, r1
   1c8a8:	b	1d69c <main@@Base+0x7960>
   1c8ac:	mov	r0, sl
   1c8b0:	mov	r1, r8
   1c8b4:	mov	r2, r6
   1c8b8:	mov	r3, #22
   1c8bc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c8c0:	mov	r8, r0
   1c8c4:	ldr	r0, [sl]
   1c8c8:	bl	2e448 <flatcc_builder_end_vector@@Base>
   1c8cc:	cmp	r0, #0
   1c8d0:	str	r0, [sp, #44]	; 0x2c
   1c8d4:	beq	1662c <main@@Base+0x8f0>
   1c8d8:	ldr	r0, [sl]
   1c8dc:	mov	r1, #32
   1c8e0:	b	1f0fc <main@@Base+0x93c0>
   1c8e4:	ldr	r6, [sp, #36]	; 0x24
   1c8e8:	ldr	sl, [sp, #32]
   1c8ec:	bne	1c8fc <main@@Base+0x6bc0>
   1c8f0:	ldrb	r0, [r8, #2]!
   1c8f4:	cmp	r0, #32
   1c8f8:	bhi	1c90c <main@@Base+0x6bd0>
   1c8fc:	mov	r0, sl
   1c900:	mov	r2, r6
   1c904:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1c908:	mov	r8, r0
   1c90c:	cmp	r7, r8
   1c910:	beq	1e144 <main@@Base+0x8408>
   1c914:	cmp	r8, r6
   1c918:	beq	1c978 <main@@Base+0x6c3c>
   1c91c:	ldrb	r0, [r8]
   1c920:	cmp	r0, #91	; 0x5b
   1c924:	bne	1c978 <main@@Base+0x6c3c>
   1c928:	ldr	r0, [sl]
   1c92c:	mov	r1, #1
   1c930:	mov	r2, #1
   1c934:	mvn	r3, #0
   1c938:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   1c93c:	cmp	r0, #0
   1c940:	bne	1f30c <main@@Base+0x95d0>
   1c944:	ldrb	r0, [r8]
   1c948:	cmp	r0, #91	; 0x5b
   1c94c:	bne	1c9c4 <main@@Base+0x6c88>
   1c950:	ldr	r0, [sp, #36]	; 0x24
   1c954:	add	r1, r8, #1
   1c958:	sub	r0, r0, r1
   1c95c:	cmp	r0, #2
   1c960:	blt	1ec30 <main@@Base+0x8ef4>
   1c964:	ldrb	r0, [r1]
   1c968:	cmp	r0, #32
   1c96c:	bls	1ec20 <main@@Base+0x8ee4>
   1c970:	mov	r8, r1
   1c974:	b	1ec40 <main@@Base+0x8f04>
   1c978:	ldr	r0, [sl]
   1c97c:	mov	r1, #0
   1c980:	mov	r2, #0
   1c984:	mov	r3, #0
   1c988:	bl	2c72c <flatcc_builder_start_buffer@@Base>
   1c98c:	cmp	r0, #0
   1c990:	bne	1662c <main@@Base+0x8f0>
   1c994:	mov	r0, sl
   1c998:	mov	r1, r8
   1c99c:	mov	r2, r6
   1c9a0:	add	r3, sp, #44	; 0x2c
   1c9a4:	bl	165ec <main@@Base+0x8b0>
   1c9a8:	ldr	r1, [sp, #44]	; 0x2c
   1c9ac:	mov	r8, r0
   1c9b0:	cmp	r1, #0
   1c9b4:	beq	1662c <main@@Base+0x8f0>
   1c9b8:	ldr	r0, [sl]
   1c9bc:	bl	2c91c <flatcc_builder_end_buffer@@Base>
   1c9c0:	b	1f0e8 <main@@Base+0x93ac>
   1c9c4:	ldr	r0, [sp, #32]
   1c9c8:	ldr	r2, [sp, #36]	; 0x24
   1c9cc:	mov	r1, r8
   1c9d0:	mov	r3, #22
   1c9d4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1c9d8:	b	1f0d4 <main@@Base+0x9398>
   1c9dc:	ldr	r6, [sp, #36]	; 0x24
   1c9e0:	ldr	sl, [sp, #32]
   1c9e4:	bne	1c9f4 <main@@Base+0x6cb8>
   1c9e8:	ldrb	r0, [r8, #2]!
   1c9ec:	cmp	r0, #32
   1c9f0:	bhi	1ca04 <main@@Base+0x6cc8>
   1c9f4:	mov	r0, sl
   1c9f8:	mov	r2, r6
   1c9fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ca00:	mov	r8, r0
   1ca04:	cmp	r8, r6
   1ca08:	beq	1ca6c <main@@Base+0x6d30>
   1ca0c:	ldrb	r0, [r8]
   1ca10:	cmp	r0, #93	; 0x5d
   1ca14:	bne	1ca64 <main@@Base+0x6d28>
   1ca18:	ldr	r6, [sp, #36]	; 0x24
   1ca1c:	ldr	sl, [sp, #32]
   1ca20:	add	r1, r8, #1
   1ca24:	sub	r0, r6, r1
   1ca28:	cmp	r0, #2
   1ca2c:	blt	1ca54 <main@@Base+0x6d18>
   1ca30:	ldrb	r0, [r1]
   1ca34:	cmp	r0, #32
   1ca38:	bhi	1dce4 <main@@Base+0x7fa8>
   1ca3c:	ldr	r6, [sp, #36]	; 0x24
   1ca40:	ldr	sl, [sp, #32]
   1ca44:	bne	1ca54 <main@@Base+0x6d18>
   1ca48:	ldrb	r0, [r8, #2]!
   1ca4c:	cmp	r0, #32
   1ca50:	bhi	1c000 <main@@Base+0x62c4>
   1ca54:	mov	r0, sl
   1ca58:	mov	r2, r6
   1ca5c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ca60:	b	1bffc <main@@Base+0x62c0>
   1ca64:	ldr	sl, [sp, #32]
   1ca68:	mov	r6, r8
   1ca6c:	mov	r0, #0
   1ca70:	mov	r1, #1
   1ca74:	strb	r0, [sp, #60]	; 0x3c
   1ca78:	ldr	r0, [sl]
   1ca7c:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1ca80:	cmp	r0, #0
   1ca84:	beq	1f34c <main@@Base+0x9610>
   1ca88:	mov	r8, r6
   1ca8c:	ldr	r6, [sp, #36]	; 0x24
   1ca90:	ldr	sl, [sp, #32]
   1ca94:	mov	r7, r0
   1ca98:	mov	r5, #0
   1ca9c:	cmp	r8, r6
   1caa0:	str	r5, [fp, #-52]	; 0xffffffcc
   1caa4:	str	r5, [fp, #-56]	; 0xffffffc8
   1caa8:	strb	r5, [sp, #60]	; 0x3c
   1caac:	str	r5, [sp, #48]	; 0x30
   1cab0:	beq	1caf8 <main@@Base+0x6dbc>
   1cab4:	sub	r0, fp, #56	; 0x38
   1cab8:	mov	r1, r8
   1cabc:	mov	r2, r6
   1cac0:	add	r3, sp, #48	; 0x30
   1cac4:	str	r0, [sp]
   1cac8:	mov	r0, sl
   1cacc:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1cad0:	cmp	r0, r8
   1cad4:	beq	1cb00 <main@@Base+0x6dc4>
   1cad8:	mov	r1, r0
   1cadc:	ldr	r0, [sp, #48]	; 0x30
   1cae0:	cmp	r0, #0
   1cae4:	beq	1cb08 <main@@Base+0x6dcc>
   1cae8:	mov	r0, sl
   1caec:	mov	r2, r6
   1caf0:	mov	r3, #8
   1caf4:	b	1cb30 <main@@Base+0x6df4>
   1caf8:	mov	r1, r6
   1cafc:	b	1cb38 <main@@Base+0x6dfc>
   1cb00:	mov	r1, r8
   1cb04:	b	1cb38 <main@@Base+0x6dfc>
   1cb08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cb0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cb10:	subs	r3, r0, #256	; 0x100
   1cb14:	sbcs	r2, r2, #0
   1cb18:	bcc	1cc4c <main@@Base+0x6f10>
   1cb1c:	ldr	sl, [sp, #32]
   1cb20:	ldr	r6, [sp, #36]	; 0x24
   1cb24:	mov	r3, #7
   1cb28:	mov	r0, sl
   1cb2c:	mov	r2, r6
   1cb30:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1cb34:	mov	r1, r0
   1cb38:	cmp	r8, r1
   1cb3c:	bne	1cb74 <main@@Base+0x6e38>
   1cb40:	movw	r3, #32928	; 0x80a0
   1cb44:	add	r0, sp, #60	; 0x3c
   1cb48:	mov	r1, r8
   1cb4c:	mov	r2, r6
   1cb50:	str	r0, [sp]
   1cb54:	mov	r0, sl
   1cb58:	movt	r3, #5
   1cb5c:	bl	212ac <main@@Base+0xb570>
   1cb60:	mov	r1, r0
   1cb64:	cmp	r0, r8
   1cb68:	cmpne	r1, r6
   1cb6c:	beq	1f318 <main@@Base+0x95dc>
   1cb70:	ldrb	r5, [sp, #60]	; 0x3c
   1cb74:	sub	r0, r6, r1
   1cb78:	strb	r5, [r7]
   1cb7c:	cmp	r0, #2
   1cb80:	blt	1cbac <main@@Base+0x6e70>
   1cb84:	ldrb	r0, [r1]
   1cb88:	cmp	r0, #32
   1cb8c:	bls	1cb98 <main@@Base+0x6e5c>
   1cb90:	mov	r8, r1
   1cb94:	b	1cbbc <main@@Base+0x6e80>
   1cb98:	bne	1cbac <main@@Base+0x6e70>
   1cb9c:	mov	r8, r1
   1cba0:	ldrb	r0, [r8, #1]!
   1cba4:	cmp	r0, #32
   1cba8:	bhi	1cbbc <main@@Base+0x6e80>
   1cbac:	mov	r0, sl
   1cbb0:	mov	r2, r6
   1cbb4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1cbb8:	mov	r8, r0
   1cbbc:	cmp	r8, r6
   1cbc0:	beq	1db04 <main@@Base+0x7dc8>
   1cbc4:	ldrb	r0, [r8]
   1cbc8:	cmp	r0, #44	; 0x2c
   1cbcc:	bne	1db18 <main@@Base+0x7ddc>
   1cbd0:	add	r1, r8, #1
   1cbd4:	sub	r0, r6, r1
   1cbd8:	cmp	r0, #2
   1cbdc:	blt	1cc04 <main@@Base+0x6ec8>
   1cbe0:	ldrb	r0, [r1]
   1cbe4:	cmp	r0, #32
   1cbe8:	bls	1cbf4 <main@@Base+0x6eb8>
   1cbec:	mov	r8, r1
   1cbf0:	b	1cc14 <main@@Base+0x6ed8>
   1cbf4:	bne	1cc04 <main@@Base+0x6ec8>
   1cbf8:	ldrb	r0, [r8, #2]!
   1cbfc:	cmp	r0, #32
   1cc00:	bhi	1cc14 <main@@Base+0x6ed8>
   1cc04:	mov	r0, sl
   1cc08:	mov	r2, r6
   1cc0c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1cc10:	mov	r8, r0
   1cc14:	cmp	r8, r6
   1cc18:	beq	1db30 <main@@Base+0x7df4>
   1cc1c:	ldrb	r0, [r8]
   1cc20:	cmp	r0, #93	; 0x5d
   1cc24:	beq	1dcc8 <main@@Base+0x7f8c>
   1cc28:	mov	r0, #0
   1cc2c:	mov	r1, #1
   1cc30:	strb	r0, [sp, #60]	; 0x3c
   1cc34:	ldr	r0, [sl]
   1cc38:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1cc3c:	mov	r7, r0
   1cc40:	cmp	r0, #0
   1cc44:	bne	1ca98 <main@@Base+0x6d5c>
   1cc48:	b	1662c <main@@Base+0x8f0>
   1cc4c:	ldr	r6, [sp, #36]	; 0x24
   1cc50:	ldr	sl, [sp, #32]
   1cc54:	mov	r5, r0
   1cc58:	strb	r0, [sp, #60]	; 0x3c
   1cc5c:	b	1cb38 <main@@Base+0x6dfc>
   1cc60:	mov	r9, r6
   1cc64:	b	1ad2c <main@@Base+0x4ff0>
   1cc68:	cmp	r0, #93	; 0x5d
   1cc6c:	bne	1dcec <main@@Base+0x7fb0>
   1cc70:	ldr	r6, [sp, #36]	; 0x24
   1cc74:	ldr	sl, [sp, #32]
   1cc78:	b	1b5cc <main@@Base+0x5890>
   1cc7c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1cc80:	ldr	sl, [sp, #32]
   1cc84:	str	r4, [sp, #60]	; 0x3c
   1cc88:	b	1c160 <main@@Base+0x6424>
   1cc8c:	mov	r0, sl
   1cc90:	mov	r1, r6
   1cc94:	b	1dcfc <main@@Base+0x7fc0>
   1cc98:	ldr	r6, [sp, #36]	; 0x24
   1cc9c:	ldr	sl, [sp, #32]
   1cca0:	bne	1ccb0 <main@@Base+0x6f74>
   1cca4:	ldrb	r0, [r8, #2]!
   1cca8:	cmp	r0, #32
   1ccac:	bhi	1ccc0 <main@@Base+0x6f84>
   1ccb0:	mov	r0, sl
   1ccb4:	mov	r2, r6
   1ccb8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ccbc:	mov	r8, r0
   1ccc0:	cmp	r8, r6
   1ccc4:	mov	r2, r6
   1ccc8:	beq	1cd1c <main@@Base+0x6fe0>
   1cccc:	ldrb	r0, [r8]
   1ccd0:	cmp	r0, #93	; 0x5d
   1ccd4:	bne	1cd18 <main@@Base+0x6fdc>
   1ccd8:	ldr	r6, [sp, #36]	; 0x24
   1ccdc:	ldr	sl, [sp, #32]
   1cce0:	add	r1, r8, #1
   1cce4:	sub	r0, r6, r1
   1cce8:	cmp	r0, #2
   1ccec:	blt	1f16c <main@@Base+0x9430>
   1ccf0:	ldrb	r0, [r1]
   1ccf4:	cmp	r0, #32
   1ccf8:	bhi	1eb44 <main@@Base+0x8e08>
   1ccfc:	ldr	r6, [sp, #36]	; 0x24
   1cd00:	ldr	sl, [sp, #32]
   1cd04:	bne	1f16c <main@@Base+0x9430>
   1cd08:	ldrb	r0, [r8, #2]!
   1cd0c:	cmp	r0, #32
   1cd10:	bhi	1c468 <main@@Base+0x672c>
   1cd14:	b	1f16c <main@@Base+0x9430>
   1cd18:	mov	r2, r8
   1cd1c:	ldr	r6, [sp, #36]	; 0x24
   1cd20:	ldr	sl, [sp, #32]
   1cd24:	mov	r1, r2
   1cd28:	mov	r0, sl
   1cd2c:	mov	r2, r6
   1cd30:	add	r3, sp, #44	; 0x2c
   1cd34:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   1cd38:	mov	r8, r0
   1cd3c:	ldr	r0, [sp, #44]	; 0x2c
   1cd40:	cmp	r0, #0
   1cd44:	beq	1662c <main@@Base+0x8f0>
   1cd48:	ldr	r0, [sl]
   1cd4c:	mov	r1, #1
   1cd50:	bl	2ce24 <flatcc_builder_extend_offset_vector@@Base>
   1cd54:	cmp	r0, #0
   1cd58:	beq	1662c <main@@Base+0x8f0>
   1cd5c:	ldr	r1, [sp, #44]	; 0x2c
   1cd60:	str	r1, [r0]
   1cd64:	sub	r0, r6, r8
   1cd68:	cmp	r0, #2
   1cd6c:	blt	1cd98 <main@@Base+0x705c>
   1cd70:	ldrb	r0, [r8]
   1cd74:	cmp	r0, #32
   1cd78:	bls	1cd84 <main@@Base+0x7048>
   1cd7c:	mov	r2, r8
   1cd80:	b	1cdac <main@@Base+0x7070>
   1cd84:	bne	1cd98 <main@@Base+0x705c>
   1cd88:	mov	r2, r8
   1cd8c:	ldrb	r0, [r2, #1]!
   1cd90:	cmp	r0, #32
   1cd94:	bhi	1cdac <main@@Base+0x7070>
   1cd98:	mov	r0, sl
   1cd9c:	mov	r1, r8
   1cda0:	mov	r2, r6
   1cda4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1cda8:	mov	r2, r0
   1cdac:	cmp	r2, r6
   1cdb0:	beq	1e2e4 <main@@Base+0x85a8>
   1cdb4:	ldrb	r0, [r2]
   1cdb8:	cmp	r0, #44	; 0x2c
   1cdbc:	bne	1eb18 <main@@Base+0x8ddc>
   1cdc0:	add	r1, r2, #1
   1cdc4:	sub	r0, r6, r1
   1cdc8:	cmp	r0, #2
   1cdcc:	blt	1cdf4 <main@@Base+0x70b8>
   1cdd0:	ldrb	r0, [r1]
   1cdd4:	cmp	r0, #32
   1cdd8:	bls	1cde4 <main@@Base+0x70a8>
   1cddc:	mov	r2, r1
   1cde0:	b	1ce04 <main@@Base+0x70c8>
   1cde4:	bne	1cdf4 <main@@Base+0x70b8>
   1cde8:	ldrb	r0, [r2, #2]!
   1cdec:	cmp	r0, #32
   1cdf0:	bhi	1ce04 <main@@Base+0x70c8>
   1cdf4:	mov	r0, sl
   1cdf8:	mov	r2, r6
   1cdfc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ce00:	mov	r2, r0
   1ce04:	cmp	r2, r6
   1ce08:	beq	1eb78 <main@@Base+0x8e3c>
   1ce0c:	ldrb	r0, [r2]
   1ce10:	cmp	r0, #93	; 0x5d
   1ce14:	bne	1cd24 <main@@Base+0x6fe8>
   1ce18:	b	1eb28 <main@@Base+0x8dec>
   1ce1c:	mov	r8, r6
   1ce20:	b	19494 <main@@Base+0x3758>
   1ce24:	cmp	r0, #93	; 0x5d
   1ce28:	bne	1e2c8 <main@@Base+0x858c>
   1ce2c:	ldr	r6, [sp, #36]	; 0x24
   1ce30:	ldr	sl, [sp, #32]
   1ce34:	b	1a724 <main@@Base+0x49e8>
   1ce38:	mov	r8, r6
   1ce3c:	b	1ac78 <main@@Base+0x4f3c>
   1ce40:	mov	r0, sl
   1ce44:	mov	r1, r6
   1ce48:	b	1e2d8 <main@@Base+0x859c>
   1ce4c:	ldr	r6, [sp, #36]	; 0x24
   1ce50:	ldr	sl, [sp, #32]
   1ce54:	bne	1ce68 <main@@Base+0x712c>
   1ce58:	ldrb	r0, [r2, #2]!
   1ce5c:	cmp	r0, #32
   1ce60:	mov	r9, r2
   1ce64:	bhi	1e158 <main@@Base+0x841c>
   1ce68:	mov	r0, sl
   1ce6c:	mov	r2, r6
   1ce70:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ce74:	b	1e154 <main@@Base+0x8418>
   1ce78:	cmp	r0, #93	; 0x5d
   1ce7c:	bne	1eb54 <main@@Base+0x8e18>
   1ce80:	ldr	r6, [sp, #36]	; 0x24
   1ce84:	ldr	sl, [sp, #32]
   1ce88:	add	r1, r2, #1
   1ce8c:	sub	r0, r6, r1
   1ce90:	cmp	r0, #2
   1ce94:	blt	1eea4 <main@@Base+0x9168>
   1ce98:	ldrb	r0, [r1]
   1ce9c:	cmp	r0, #32
   1cea0:	bls	1ee88 <main@@Base+0x914c>
   1cea4:	ldr	r6, [sp, #36]	; 0x24
   1cea8:	ldr	sl, [sp, #32]
   1ceac:	mov	r8, r1
   1ceb0:	b	1ac78 <main@@Base+0x4f3c>
   1ceb4:	mov	r0, sl
   1ceb8:	mov	r1, r6
   1cebc:	b	1eb64 <main@@Base+0x8e28>
   1cec0:	ldr	r6, [sp, #36]	; 0x24
   1cec4:	ldr	sl, [sp, #32]
   1cec8:	bne	1ced8 <main@@Base+0x719c>
   1cecc:	ldrb	r0, [r8, #2]!
   1ced0:	cmp	r0, #32
   1ced4:	bhi	1cee8 <main@@Base+0x71ac>
   1ced8:	mov	r0, sl
   1cedc:	mov	r2, r6
   1cee0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1cee4:	mov	r8, r0
   1cee8:	cmp	r8, r6
   1ceec:	mov	r2, r6
   1cef0:	beq	1cf44 <main@@Base+0x7208>
   1cef4:	ldrb	r0, [r8]
   1cef8:	cmp	r0, #125	; 0x7d
   1cefc:	bne	1cf40 <main@@Base+0x7204>
   1cf00:	ldr	r6, [sp, #36]	; 0x24
   1cf04:	ldr	sl, [sp, #32]
   1cf08:	add	r1, r8, #1
   1cf0c:	sub	r0, r6, r1
   1cf10:	cmp	r0, #2
   1cf14:	blt	1f130 <main@@Base+0x93f4>
   1cf18:	ldrb	r0, [r1]
   1cf1c:	cmp	r0, #32
   1cf20:	bhi	1df38 <main@@Base+0x81fc>
   1cf24:	ldr	r6, [sp, #36]	; 0x24
   1cf28:	ldr	sl, [sp, #32]
   1cf2c:	bne	1f130 <main@@Base+0x93f4>
   1cf30:	ldrb	r0, [r8, #2]!
   1cf34:	cmp	r0, #32
   1cf38:	bhi	1ab1c <main@@Base+0x4de0>
   1cf3c:	b	1f130 <main@@Base+0x93f4>
   1cf40:	mov	r2, r8
   1cf44:	ldr	r6, [sp, #36]	; 0x24
   1cf48:	ldr	sl, [sp, #32]
   1cf4c:	cmp	r2, r6
   1cf50:	mov	r9, r6
   1cf54:	beq	1cf84 <main@@Base+0x7248>
   1cf58:	ldrb	r0, [r2]
   1cf5c:	cmp	r0, #34	; 0x22
   1cf60:	bne	1cf6c <main@@Base+0x7230>
   1cf64:	add	r9, r2, #1
   1cf68:	b	1cf84 <main@@Base+0x7248>
   1cf6c:	mov	r1, r2
   1cf70:	mov	r0, sl
   1cf74:	mov	r2, r6
   1cf78:	mov	r3, #5
   1cf7c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1cf80:	mov	r9, r0
   1cf84:	sub	lr, r6, r9
   1cf88:	mov	r0, #8
   1cf8c:	cmp	lr, #8
   1cf90:	movcc	r0, lr
   1cf94:	and	r0, r0, #15
   1cf98:	sub	r7, r0, #1
   1cf9c:	cmp	r7, #7
   1cfa0:	bhi	1d118 <main@@Base+0x73dc>
   1cfa4:	add	r4, pc, #32
   1cfa8:	mov	r1, #0
   1cfac:	mov	ip, #0
   1cfb0:	mov	r8, #0
   1cfb4:	mov	r6, #0
   1cfb8:	mov	r3, #0
   1cfbc:	mov	r5, #0
   1cfc0:	mov	r2, #0
   1cfc4:	mov	r0, #0
   1cfc8:	ldr	pc, [r4, r7, lsl #2]
   1cfcc:	andeq	sp, r1, r0, lsr r0
   1cfd0:	andeq	sp, r1, r8, lsr #32
   1cfd4:	andeq	sp, r1, r0, lsr #32
   1cfd8:	andeq	sp, r1, r8, lsl r0
   1cfdc:	andeq	sp, r1, ip
   1cfe0:	andeq	sp, r1, r0
   1cfe4:	strdeq	ip, [r1], -r0
   1cfe8:	andeq	ip, r1, ip, ror #31
   1cfec:	ldrb	ip, [r9, #7]
   1cff0:	ldrb	r0, [r9, #6]
   1cff4:	mov	r8, r1
   1cff8:	orr	r0, ip, r0, lsl #8
   1cffc:	mov	r1, r0
   1d000:	ldrb	r0, [r9, #5]
   1d004:	mov	r6, r8
   1d008:	orr	r1, r1, r0, lsl #16
   1d00c:	ldrb	r0, [r9, #4]
   1d010:	mov	r3, r6
   1d014:	orr	r1, r1, r0, lsl #24
   1d018:	ldrb	r0, [r9, #3]
   1d01c:	orr	r5, r0, r3
   1d020:	ldrb	r0, [r9, #2]
   1d024:	orr	r2, r5, r0, lsl #8
   1d028:	ldrb	r0, [r9, #1]
   1d02c:	orr	r0, r2, r0, lsl #16
   1d030:	ldrb	r2, [r9]
   1d034:	orr	r2, r0, r2, lsl #24
   1d038:	movw	r0, #0
   1d03c:	movt	r0, #25956	; 0x6564
   1d040:	subs	r0, r1, r0
   1d044:	movw	r0, #29556	; 0x7374
   1d048:	movt	r0, #28261	; 0x6e65
   1d04c:	sbcs	r0, r2, r0
   1d050:	bcs	1d0ac <main@@Base+0x7370>
   1d054:	ldr	r6, [sp, #36]	; 0x24
   1d058:	movw	r0, #29793	; 0x7461
   1d05c:	movt	r0, #25697	; 0x6461
   1d060:	teq	r2, r0
   1d064:	bne	1d118 <main@@Base+0x73dc>
   1d068:	cmp	lr, #5
   1d06c:	mov	r1, r9
   1d070:	blt	1d324 <main@@Base+0x75e8>
   1d074:	ldrb	r0, [r9, #4]
   1d078:	mov	r1, r9
   1d07c:	cmp	r0, #34	; 0x22
   1d080:	bne	1d324 <main@@Base+0x75e8>
   1d084:	ldr	r0, [sp, #36]	; 0x24
   1d088:	add	r2, r9, #5
   1d08c:	sub	r0, r0, r2
   1d090:	cmp	r0, #2
   1d094:	blt	1d1a0 <main@@Base+0x7464>
   1d098:	ldrb	r0, [r2]
   1d09c:	cmp	r0, #32
   1d0a0:	bls	1d18c <main@@Base+0x7450>
   1d0a4:	mov	r1, r2
   1d0a8:	b	1d1b4 <main@@Base+0x7478>
   1d0ac:	movw	r0, #29292	; 0x726c
   1d0b0:	lsr	r3, r1, #8
   1d0b4:	movw	r7, #29793	; 0x7461
   1d0b8:	movt	r0, #117	; 0x75
   1d0bc:	orr	r3, r3, r2, lsl #24
   1d0c0:	movt	r7, #25697	; 0x6461
   1d0c4:	eor	r0, r0, r2, lsr #8
   1d0c8:	eor	r3, r3, r7
   1d0cc:	orrs	r0, r3, r0
   1d0d0:	bne	1d124 <main@@Base+0x73e8>
   1d0d4:	cmp	lr, #8
   1d0d8:	mov	r1, r9
   1d0dc:	blt	1d384 <main@@Base+0x7648>
   1d0e0:	ldrb	r0, [r9, #7]
   1d0e4:	mov	r1, r9
   1d0e8:	cmp	r0, #34	; 0x22
   1d0ec:	bne	1d384 <main@@Base+0x7648>
   1d0f0:	ldr	r0, [sp, #36]	; 0x24
   1d0f4:	add	r2, r9, #8
   1d0f8:	sub	r0, r0, r2
   1d0fc:	cmp	r0, #2
   1d100:	blt	1d21c <main@@Base+0x74e0>
   1d104:	ldrb	r0, [r2]
   1d108:	cmp	r0, #32
   1d10c:	bls	1d208 <main@@Base+0x74cc>
   1d110:	mov	r1, r2
   1d114:	b	1d230 <main@@Base+0x74f4>
   1d118:	mov	r0, sl
   1d11c:	mov	r1, r9
   1d120:	b	1d450 <main@@Base+0x7714>
   1d124:	movw	r0, #29556	; 0x7374
   1d128:	bfc	r1, #0, #16
   1d12c:	movt	r0, #28261	; 0x6e65
   1d130:	eor	r0, r2, r0
   1d134:	movw	r2, #0
   1d138:	movt	r2, #25956	; 0x6564
   1d13c:	eor	r1, r1, r2
   1d140:	orrs	r0, r1, r0
   1d144:	bne	1d440 <main@@Base+0x7704>
   1d148:	cmp	lr, #7
   1d14c:	mov	r1, r9
   1d150:	blt	1d3e4 <main@@Base+0x76a8>
   1d154:	ldrb	r0, [r9, #6]
   1d158:	mov	r1, r9
   1d15c:	cmp	r0, #34	; 0x22
   1d160:	bne	1d3e4 <main@@Base+0x76a8>
   1d164:	ldr	r0, [sp, #36]	; 0x24
   1d168:	add	r2, r9, #7
   1d16c:	sub	r0, r0, r2
   1d170:	cmp	r0, #2
   1d174:	blt	1d298 <main@@Base+0x755c>
   1d178:	ldrb	r0, [r2]
   1d17c:	cmp	r0, #32
   1d180:	bls	1d284 <main@@Base+0x7548>
   1d184:	mov	r1, r2
   1d188:	b	1d2ac <main@@Base+0x7570>
   1d18c:	bne	1d1a0 <main@@Base+0x7464>
   1d190:	mov	r1, r9
   1d194:	ldrb	r0, [r1, #6]!
   1d198:	cmp	r0, #32
   1d19c:	bhi	1d1b4 <main@@Base+0x7478>
   1d1a0:	mov	r1, r2
   1d1a4:	ldr	r0, [sp, #32]
   1d1a8:	ldr	r2, [sp, #36]	; 0x24
   1d1ac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d1b0:	mov	r1, r0
   1d1b4:	ldr	r0, [sp, #36]	; 0x24
   1d1b8:	cmp	r1, r0
   1d1bc:	beq	1d1f4 <main@@Base+0x74b8>
   1d1c0:	ldrb	r0, [r1]
   1d1c4:	cmp	r0, #58	; 0x3a
   1d1c8:	bne	1d1f4 <main@@Base+0x74b8>
   1d1cc:	ldr	r0, [sp, #36]	; 0x24
   1d1d0:	add	r2, r1, #1
   1d1d4:	sub	r0, r0, r2
   1d1d8:	cmp	r0, #2
   1d1dc:	blt	1d310 <main@@Base+0x75d4>
   1d1e0:	ldrb	r0, [r2]
   1d1e4:	cmp	r0, #32
   1d1e8:	bls	1d300 <main@@Base+0x75c4>
   1d1ec:	mov	r1, r2
   1d1f0:	b	1d324 <main@@Base+0x75e8>
   1d1f4:	ldr	r0, [sp, #32]
   1d1f8:	ldr	r2, [sp, #36]	; 0x24
   1d1fc:	mov	r3, #4
   1d200:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1d204:	b	1d320 <main@@Base+0x75e4>
   1d208:	bne	1d21c <main@@Base+0x74e0>
   1d20c:	mov	r1, r9
   1d210:	ldrb	r0, [r1, #9]!
   1d214:	cmp	r0, #32
   1d218:	bhi	1d230 <main@@Base+0x74f4>
   1d21c:	mov	r1, r2
   1d220:	ldr	r0, [sp, #32]
   1d224:	ldr	r2, [sp, #36]	; 0x24
   1d228:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d22c:	mov	r1, r0
   1d230:	ldr	r0, [sp, #36]	; 0x24
   1d234:	cmp	r1, r0
   1d238:	beq	1d270 <main@@Base+0x7534>
   1d23c:	ldrb	r0, [r1]
   1d240:	cmp	r0, #58	; 0x3a
   1d244:	bne	1d270 <main@@Base+0x7534>
   1d248:	ldr	r0, [sp, #36]	; 0x24
   1d24c:	add	r2, r1, #1
   1d250:	sub	r0, r0, r2
   1d254:	cmp	r0, #2
   1d258:	blt	1d370 <main@@Base+0x7634>
   1d25c:	ldrb	r0, [r2]
   1d260:	cmp	r0, #32
   1d264:	bls	1d360 <main@@Base+0x7624>
   1d268:	mov	r1, r2
   1d26c:	b	1d384 <main@@Base+0x7648>
   1d270:	ldr	r0, [sp, #32]
   1d274:	ldr	r2, [sp, #36]	; 0x24
   1d278:	mov	r3, #4
   1d27c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1d280:	b	1d380 <main@@Base+0x7644>
   1d284:	bne	1d298 <main@@Base+0x755c>
   1d288:	mov	r1, r9
   1d28c:	ldrb	r0, [r1, #8]!
   1d290:	cmp	r0, #32
   1d294:	bhi	1d2ac <main@@Base+0x7570>
   1d298:	mov	r1, r2
   1d29c:	ldr	r0, [sp, #32]
   1d2a0:	ldr	r2, [sp, #36]	; 0x24
   1d2a4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d2a8:	mov	r1, r0
   1d2ac:	ldr	r0, [sp, #36]	; 0x24
   1d2b0:	cmp	r1, r0
   1d2b4:	beq	1d2ec <main@@Base+0x75b0>
   1d2b8:	ldrb	r0, [r1]
   1d2bc:	cmp	r0, #58	; 0x3a
   1d2c0:	bne	1d2ec <main@@Base+0x75b0>
   1d2c4:	ldr	r0, [sp, #36]	; 0x24
   1d2c8:	add	r2, r1, #1
   1d2cc:	sub	r0, r0, r2
   1d2d0:	cmp	r0, #2
   1d2d4:	blt	1d3d0 <main@@Base+0x7694>
   1d2d8:	ldrb	r0, [r2]
   1d2dc:	cmp	r0, #32
   1d2e0:	bls	1d3c0 <main@@Base+0x7684>
   1d2e4:	mov	r1, r2
   1d2e8:	b	1d3e4 <main@@Base+0x76a8>
   1d2ec:	ldr	r0, [sp, #32]
   1d2f0:	ldr	r2, [sp, #36]	; 0x24
   1d2f4:	mov	r3, #4
   1d2f8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1d2fc:	b	1d3e0 <main@@Base+0x76a4>
   1d300:	bne	1d310 <main@@Base+0x75d4>
   1d304:	ldrb	r0, [r1, #2]!
   1d308:	cmp	r0, #32
   1d30c:	bhi	1d324 <main@@Base+0x75e8>
   1d310:	mov	r1, r2
   1d314:	ldr	r0, [sp, #32]
   1d318:	ldr	r2, [sp, #36]	; 0x24
   1d31c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d320:	mov	r1, r0
   1d324:	cmp	r9, r1
   1d328:	beq	1d440 <main@@Base+0x7704>
   1d32c:	mov	r0, #0
   1d330:	ldr	r2, [sp, #36]	; 0x24
   1d334:	sub	r3, fp, #56	; 0x38
   1d338:	str	r0, [sp]
   1d33c:	ldr	r0, [sp, #32]
   1d340:	bl	33620 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d344:	mov	r8, r0
   1d348:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d34c:	cmp	r0, #0
   1d350:	beq	1ee7c <main@@Base+0x9140>
   1d354:	ldr	r0, [sp, #32]
   1d358:	mov	r1, #0
   1d35c:	b	1d41c <main@@Base+0x76e0>
   1d360:	bne	1d370 <main@@Base+0x7634>
   1d364:	ldrb	r0, [r1, #2]!
   1d368:	cmp	r0, #32
   1d36c:	bhi	1d384 <main@@Base+0x7648>
   1d370:	mov	r1, r2
   1d374:	ldr	r0, [sp, #32]
   1d378:	ldr	r2, [sp, #36]	; 0x24
   1d37c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d380:	mov	r1, r0
   1d384:	cmp	r9, r1
   1d388:	beq	1d440 <main@@Base+0x7704>
   1d38c:	mov	r0, #1
   1d390:	ldr	r2, [sp, #36]	; 0x24
   1d394:	sub	r3, fp, #56	; 0x38
   1d398:	str	r0, [sp]
   1d39c:	ldr	r0, [sp, #32]
   1d3a0:	bl	33620 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d3a4:	mov	r8, r0
   1d3a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d3ac:	cmp	r0, #0
   1d3b0:	beq	1ee7c <main@@Base+0x9140>
   1d3b4:	ldr	r0, [sp, #32]
   1d3b8:	mov	r1, #1
   1d3bc:	b	1d41c <main@@Base+0x76e0>
   1d3c0:	bne	1d3d0 <main@@Base+0x7694>
   1d3c4:	ldrb	r0, [r1, #2]!
   1d3c8:	cmp	r0, #32
   1d3cc:	bhi	1d3e4 <main@@Base+0x76a8>
   1d3d0:	mov	r1, r2
   1d3d4:	ldr	r0, [sp, #32]
   1d3d8:	ldr	r2, [sp, #36]	; 0x24
   1d3dc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d3e0:	mov	r1, r0
   1d3e4:	cmp	r9, r1
   1d3e8:	beq	1d440 <main@@Base+0x7704>
   1d3ec:	mov	r0, #0
   1d3f0:	ldr	r2, [sp, #36]	; 0x24
   1d3f4:	sub	r3, fp, #56	; 0x38
   1d3f8:	str	r0, [sp]
   1d3fc:	ldr	r0, [sp, #32]
   1d400:	bl	33620 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d404:	mov	r8, r0
   1d408:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d40c:	cmp	r0, #0
   1d410:	beq	1ee7c <main@@Base+0x9140>
   1d414:	ldr	r0, [sp, #32]
   1d418:	mov	r1, #2
   1d41c:	ldr	r0, [r0]
   1d420:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   1d424:	cmp	r0, #0
   1d428:	beq	1ee7c <main@@Base+0x9140>
   1d42c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d430:	str	r1, [r0]
   1d434:	ldr	r6, [sp, #36]	; 0x24
   1d438:	ldr	sl, [sp, #32]
   1d43c:	b	1d45c <main@@Base+0x7720>
   1d440:	ldr	sl, [sp, #32]
   1d444:	ldr	r6, [sp, #36]	; 0x24
   1d448:	mov	r1, r9
   1d44c:	mov	r0, sl
   1d450:	mov	r2, r6
   1d454:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   1d458:	mov	r8, r0
   1d45c:	sub	r0, r6, r8
   1d460:	cmp	r0, #2
   1d464:	blt	1d490 <main@@Base+0x7754>
   1d468:	ldrb	r0, [r8]
   1d46c:	cmp	r0, #32
   1d470:	bls	1d47c <main@@Base+0x7740>
   1d474:	mov	r2, r8
   1d478:	b	1d4a4 <main@@Base+0x7768>
   1d47c:	bne	1d490 <main@@Base+0x7754>
   1d480:	mov	r2, r8
   1d484:	ldrb	r0, [r2, #1]!
   1d488:	cmp	r0, #32
   1d48c:	bhi	1d4a4 <main@@Base+0x7768>
   1d490:	mov	r0, sl
   1d494:	mov	r1, r8
   1d498:	mov	r2, r6
   1d49c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d4a0:	mov	r2, r0
   1d4a4:	cmp	r2, r6
   1d4a8:	beq	1dd08 <main@@Base+0x7fcc>
   1d4ac:	ldrb	r0, [r2]
   1d4b0:	cmp	r0, #44	; 0x2c
   1d4b4:	bne	1df0c <main@@Base+0x81d0>
   1d4b8:	add	r1, r2, #1
   1d4bc:	sub	r0, r6, r1
   1d4c0:	cmp	r0, #2
   1d4c4:	blt	1d4ec <main@@Base+0x77b0>
   1d4c8:	ldrb	r0, [r1]
   1d4cc:	cmp	r0, #32
   1d4d0:	bls	1d4dc <main@@Base+0x77a0>
   1d4d4:	mov	r2, r1
   1d4d8:	b	1d4fc <main@@Base+0x77c0>
   1d4dc:	bne	1d4ec <main@@Base+0x77b0>
   1d4e0:	ldrb	r0, [r2, #2]!
   1d4e4:	cmp	r0, #32
   1d4e8:	bhi	1d4fc <main@@Base+0x77c0>
   1d4ec:	mov	r0, sl
   1d4f0:	mov	r2, r6
   1d4f4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d4f8:	mov	r2, r0
   1d4fc:	cmp	r2, r6
   1d500:	beq	1df48 <main@@Base+0x820c>
   1d504:	ldrb	r0, [r2]
   1d508:	cmp	r0, #125	; 0x7d
   1d50c:	bne	1cf4c <main@@Base+0x7210>
   1d510:	b	1df1c <main@@Base+0x81e0>
   1d514:	ldr	r6, [sp, #36]	; 0x24
   1d518:	ldr	sl, [sp, #32]
   1d51c:	bne	1d52c <main@@Base+0x77f0>
   1d520:	ldrb	r0, [r8, #2]!
   1d524:	cmp	r0, #32
   1d528:	bhi	1d53c <main@@Base+0x7800>
   1d52c:	mov	r0, sl
   1d530:	mov	r2, r6
   1d534:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d538:	mov	r8, r0
   1d53c:	cmp	r7, r8
   1d540:	beq	1e144 <main@@Base+0x8408>
   1d544:	ldr	r0, [sl]
   1d548:	mov	r1, #8
   1d54c:	mov	r2, #8
   1d550:	mvn	r3, #-536870912	; 0xe0000000
   1d554:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   1d558:	cmp	r0, #0
   1d55c:	bne	1f310 <main@@Base+0x95d4>
   1d560:	cmp	r8, r6
   1d564:	beq	1d598 <main@@Base+0x785c>
   1d568:	ldrb	r0, [r8]
   1d56c:	cmp	r0, #91	; 0x5b
   1d570:	bne	1d598 <main@@Base+0x785c>
   1d574:	add	r1, r8, #1
   1d578:	sub	r0, r6, r1
   1d57c:	cmp	r0, #2
   1d580:	blt	1dd20 <main@@Base+0x7fe4>
   1d584:	ldrb	r0, [r1]
   1d588:	cmp	r0, #32
   1d58c:	bls	1dd10 <main@@Base+0x7fd4>
   1d590:	mov	r8, r1
   1d594:	b	1dd30 <main@@Base+0x7ff4>
   1d598:	ldr	sl, [sp, #32]
   1d59c:	mov	r1, r8
   1d5a0:	mov	r2, r6
   1d5a4:	mov	r3, #22
   1d5a8:	mov	r0, sl
   1d5ac:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1d5b0:	mov	r8, r0
   1d5b4:	ldr	r0, [sl]
   1d5b8:	bl	2e448 <flatcc_builder_end_vector@@Base>
   1d5bc:	cmp	r0, #0
   1d5c0:	str	r0, [sp, #44]	; 0x2c
   1d5c4:	beq	1f33c <main@@Base+0x9600>
   1d5c8:	ldr	r0, [sl]
   1d5cc:	mov	r1, #33	; 0x21
   1d5d0:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   1d5d4:	cmp	r0, #0
   1d5d8:	beq	1f33c <main@@Base+0x9600>
   1d5dc:	ldr	r1, [sp, #44]	; 0x2c
   1d5e0:	mov	r9, r8
   1d5e4:	str	r1, [r0]
   1d5e8:	b	1e2c0 <main@@Base+0x8584>
   1d5ec:	mov	r6, r0
   1d5f0:	ldr	sl, [sp, #32]
   1d5f4:	str	r6, [sp, #60]	; 0x3c
   1d5f8:	cmp	r8, r9
   1d5fc:	bne	1d63c <main@@Base+0x7900>
   1d600:	ldr	r4, [sp, #36]	; 0x24
   1d604:	movw	r3, #33040	; 0x8110
   1d608:	add	r0, sp, #60	; 0x3c
   1d60c:	mov	r1, r8
   1d610:	str	r0, [sp]
   1d614:	mov	r0, sl
   1d618:	movt	r3, #5
   1d61c:	mov	r2, r4
   1d620:	bl	2330c <main@@Base+0xd5d0>
   1d624:	mov	r9, r0
   1d628:	cmp	r0, r8
   1d62c:	cmpne	r9, r4
   1d630:	beq	1f308 <main@@Base+0x95cc>
   1d634:	ldr	r6, [sp, #60]	; 0x3c
   1d638:	ldr	sl, [sp, #32]
   1d63c:	cmp	r6, #0
   1d640:	bne	1d650 <main@@Base+0x7914>
   1d644:	ldrb	r0, [sl, #8]
   1d648:	tst	r0, #2
   1d64c:	beq	1e2c0 <main@@Base+0x8584>
   1d650:	ldr	r0, [sl]
   1d654:	mov	r1, #20
   1d658:	mov	r2, #4
   1d65c:	mov	r3, #4
   1d660:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1d664:	cmp	r0, #0
   1d668:	beq	1f308 <main@@Base+0x95cc>
   1d66c:	str	r6, [r0]
   1d670:	b	1e2c0 <main@@Base+0x8584>
   1d674:	ldr	r6, [sp, #36]	; 0x24
   1d678:	ldr	sl, [sp, #32]
   1d67c:	bne	1d68c <main@@Base+0x7950>
   1d680:	ldrb	r0, [r8, #2]!
   1d684:	cmp	r0, #32
   1d688:	bhi	1d69c <main@@Base+0x7960>
   1d68c:	mov	r0, sl
   1d690:	mov	r2, r6
   1d694:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d698:	mov	r8, r0
   1d69c:	cmp	r8, r6
   1d6a0:	beq	1d700 <main@@Base+0x79c4>
   1d6a4:	ldrb	r0, [r8]
   1d6a8:	cmp	r0, #93	; 0x5d
   1d6ac:	bne	1d6fc <main@@Base+0x79c0>
   1d6b0:	ldr	r6, [sp, #36]	; 0x24
   1d6b4:	ldr	sl, [sp, #32]
   1d6b8:	add	r1, r8, #1
   1d6bc:	sub	r0, r6, r1
   1d6c0:	cmp	r0, #2
   1d6c4:	blt	1d6ec <main@@Base+0x79b0>
   1d6c8:	ldrb	r0, [r1]
   1d6cc:	cmp	r0, #32
   1d6d0:	bhi	1ec0c <main@@Base+0x8ed0>
   1d6d4:	ldr	r6, [sp, #36]	; 0x24
   1d6d8:	ldr	sl, [sp, #32]
   1d6dc:	bne	1d6ec <main@@Base+0x79b0>
   1d6e0:	ldrb	r0, [r8, #2]!
   1d6e4:	cmp	r0, #32
   1d6e8:	bhi	1c8c4 <main@@Base+0x6b88>
   1d6ec:	mov	r0, sl
   1d6f0:	mov	r2, r6
   1d6f4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d6f8:	b	1c8c0 <main@@Base+0x6b84>
   1d6fc:	mov	r6, r8
   1d700:	mov	r0, #0
   1d704:	mov	r1, #1
   1d708:	str	r0, [sp, #52]	; 0x34
   1d70c:	str	r0, [sp, #48]	; 0x30
   1d710:	ldr	r0, [sp, #32]
   1d714:	ldr	r0, [r0]
   1d718:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1d71c:	cmp	r0, #0
   1d720:	beq	1f34c <main@@Base+0x9610>
   1d724:	mov	r8, r6
   1d728:	ldr	r6, [sp, #36]	; 0x24
   1d72c:	ldr	sl, [sp, #32]
   1d730:	mov	r7, r0
   1d734:	mov	r0, #0
   1d738:	cmp	r8, r6
   1d73c:	str	r0, [fp, #-52]	; 0xffffffcc
   1d740:	str	r0, [fp, #-56]	; 0xffffffc8
   1d744:	str	r0, [sp, #52]	; 0x34
   1d748:	str	r0, [sp, #48]	; 0x30
   1d74c:	str	r0, [sp, #60]	; 0x3c
   1d750:	beq	1d7b0 <main@@Base+0x7a74>
   1d754:	sub	r0, fp, #56	; 0x38
   1d758:	mov	r1, r8
   1d75c:	mov	r2, r6
   1d760:	add	r3, sp, #60	; 0x3c
   1d764:	str	r0, [sp]
   1d768:	mov	r0, sl
   1d76c:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1d770:	cmp	r0, r8
   1d774:	beq	1d7bc <main@@Base+0x7a80>
   1d778:	ldr	r2, [sp, #60]	; 0x3c
   1d77c:	mov	r1, r0
   1d780:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d784:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d788:	cmp	r2, #0
   1d78c:	beq	1d7cc <main@@Base+0x7a90>
   1d790:	rsbs	r2, r0, #0
   1d794:	mov	r2, #-2147483648	; 0x80000000
   1d798:	sbcs	r2, r2, r3
   1d79c:	bcs	1d7fc <main@@Base+0x7ac0>
   1d7a0:	ldr	sl, [sp, #32]
   1d7a4:	ldr	r6, [sp, #36]	; 0x24
   1d7a8:	mov	r3, #8
   1d7ac:	b	1d7e0 <main@@Base+0x7aa4>
   1d7b0:	mov	r3, #0
   1d7b4:	mov	r1, r6
   1d7b8:	b	1d814 <main@@Base+0x7ad8>
   1d7bc:	mov	r0, #0
   1d7c0:	mov	r3, #0
   1d7c4:	mov	r1, r8
   1d7c8:	b	1d814 <main@@Base+0x7ad8>
   1d7cc:	cmn	r3, #1
   1d7d0:	bgt	1d804 <main@@Base+0x7ac8>
   1d7d4:	ldr	sl, [sp, #32]
   1d7d8:	ldr	r6, [sp, #36]	; 0x24
   1d7dc:	mov	r3, #7
   1d7e0:	mov	r0, sl
   1d7e4:	mov	r2, r6
   1d7e8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1d7ec:	mov	r1, r0
   1d7f0:	mov	r0, #0
   1d7f4:	mov	r3, #0
   1d7f8:	b	1d814 <main@@Base+0x7ad8>
   1d7fc:	rsbs	r0, r0, #0
   1d800:	rsc	r3, r3, #0
   1d804:	ldr	r6, [sp, #36]	; 0x24
   1d808:	ldr	sl, [sp, #32]
   1d80c:	str	r0, [sp, #48]	; 0x30
   1d810:	str	r3, [sp, #52]	; 0x34
   1d814:	cmp	r8, r1
   1d818:	bne	1d858 <main@@Base+0x7b1c>
   1d81c:	movw	r3, #33148	; 0x817c
   1d820:	add	r0, sp, #48	; 0x30
   1d824:	mov	r1, r8
   1d828:	mov	r2, r6
   1d82c:	str	r0, [sp]
   1d830:	mov	r0, sl
   1d834:	movt	r3, #5
   1d838:	bl	234e8 <main@@Base+0xd7ac>
   1d83c:	mov	r1, r0
   1d840:	cmp	r0, r8
   1d844:	cmpne	r1, r6
   1d848:	beq	1f354 <main@@Base+0x9618>
   1d84c:	ldr	r0, [sp, #48]	; 0x30
   1d850:	ldr	r3, [sp, #52]	; 0x34
   1d854:	ldr	sl, [sp, #32]
   1d858:	stm	r7, {r0, r3}
   1d85c:	sub	r0, r6, r1
   1d860:	cmp	r0, #2
   1d864:	blt	1d890 <main@@Base+0x7b54>
   1d868:	ldrb	r0, [r1]
   1d86c:	cmp	r0, #32
   1d870:	bls	1d87c <main@@Base+0x7b40>
   1d874:	mov	r8, r1
   1d878:	b	1d8a0 <main@@Base+0x7b64>
   1d87c:	bne	1d890 <main@@Base+0x7b54>
   1d880:	mov	r8, r1
   1d884:	ldrb	r0, [r8, #1]!
   1d888:	cmp	r0, #32
   1d88c:	bhi	1d8a0 <main@@Base+0x7b64>
   1d890:	mov	r0, sl
   1d894:	mov	r2, r6
   1d898:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d89c:	mov	r8, r0
   1d8a0:	cmp	r8, r6
   1d8a4:	beq	1eb70 <main@@Base+0x8e34>
   1d8a8:	ldrb	r0, [r8]
   1d8ac:	cmp	r0, #44	; 0x2c
   1d8b0:	bne	1eb84 <main@@Base+0x8e48>
   1d8b4:	add	r1, r8, #1
   1d8b8:	sub	r0, r6, r1
   1d8bc:	cmp	r0, #2
   1d8c0:	blt	1d8e8 <main@@Base+0x7bac>
   1d8c4:	ldrb	r0, [r1]
   1d8c8:	cmp	r0, #32
   1d8cc:	bls	1d8d8 <main@@Base+0x7b9c>
   1d8d0:	mov	r8, r1
   1d8d4:	b	1d8f8 <main@@Base+0x7bbc>
   1d8d8:	bne	1d8e8 <main@@Base+0x7bac>
   1d8dc:	ldrb	r0, [r8, #2]!
   1d8e0:	cmp	r0, #32
   1d8e4:	bhi	1d8f8 <main@@Base+0x7bbc>
   1d8e8:	mov	r0, sl
   1d8ec:	mov	r2, r6
   1d8f0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d8f4:	mov	r8, r0
   1d8f8:	cmp	r8, r6
   1d8fc:	beq	1eba4 <main@@Base+0x8e68>
   1d900:	ldrb	r0, [r8]
   1d904:	cmp	r0, #93	; 0x5d
   1d908:	beq	1ebf0 <main@@Base+0x8eb4>
   1d90c:	mov	r0, #0
   1d910:	mov	r1, #1
   1d914:	str	r0, [sp, #52]	; 0x34
   1d918:	str	r0, [sp, #48]	; 0x30
   1d91c:	ldr	r0, [sl]
   1d920:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1d924:	mov	r7, r0
   1d928:	cmp	r0, #0
   1d92c:	bne	1d734 <main@@Base+0x79f8>
   1d930:	b	1662c <main@@Base+0x8f0>
   1d934:	ldr	r6, [sp, #36]	; 0x24
   1d938:	ldr	sl, [sp, #32]
   1d93c:	bne	1d94c <main@@Base+0x7c10>
   1d940:	ldrb	r0, [r8, #2]!
   1d944:	cmp	r0, #32
   1d948:	bhi	1d95c <main@@Base+0x7c20>
   1d94c:	mov	r0, sl
   1d950:	mov	r2, r6
   1d954:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1d958:	mov	r8, r0
   1d95c:	cmp	r7, r8
   1d960:	beq	1e144 <main@@Base+0x8408>
   1d964:	mov	r2, r6
   1d968:	mov	r6, #0
   1d96c:	cmp	r8, r2
   1d970:	str	r6, [fp, #-52]	; 0xffffffcc
   1d974:	str	r6, [fp, #-56]	; 0xffffffc8
   1d978:	str	r6, [sp, #52]	; 0x34
   1d97c:	str	r6, [sp, #48]	; 0x30
   1d980:	str	r6, [sp, #60]	; 0x3c
   1d984:	beq	1d9e0 <main@@Base+0x7ca4>
   1d988:	sub	r0, fp, #56	; 0x38
   1d98c:	mov	r1, r8
   1d990:	add	r3, sp, #60	; 0x3c
   1d994:	str	r0, [sp]
   1d998:	mov	r0, sl
   1d99c:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1d9a0:	cmp	r0, r8
   1d9a4:	beq	1d9ec <main@@Base+0x7cb0>
   1d9a8:	mov	r9, r0
   1d9ac:	ldr	r0, [sp, #60]	; 0x3c
   1d9b0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d9b4:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1d9b8:	cmp	r0, #0
   1d9bc:	beq	1d9fc <main@@Base+0x7cc0>
   1d9c0:	subs	r0, r6, #1
   1d9c4:	sbcs	r0, r7, #-2147483648	; 0x80000000
   1d9c8:	bcc	1da2c <main@@Base+0x7cf0>
   1d9cc:	ldr	sl, [sp, #32]
   1d9d0:	ldr	r2, [sp, #36]	; 0x24
   1d9d4:	mov	r1, r9
   1d9d8:	mov	r3, #8
   1d9dc:	b	1da14 <main@@Base+0x7cd8>
   1d9e0:	mov	r7, #0
   1d9e4:	mov	r9, r2
   1d9e8:	b	1da40 <main@@Base+0x7d04>
   1d9ec:	mov	r6, #0
   1d9f0:	mov	r7, #0
   1d9f4:	mov	r9, r8
   1d9f8:	b	1da3c <main@@Base+0x7d00>
   1d9fc:	cmn	r7, #1
   1da00:	bgt	1da34 <main@@Base+0x7cf8>
   1da04:	ldr	sl, [sp, #32]
   1da08:	ldr	r2, [sp, #36]	; 0x24
   1da0c:	mov	r1, r9
   1da10:	mov	r3, #7
   1da14:	mov	r0, sl
   1da18:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1da1c:	mov	r9, r0
   1da20:	mov	r6, #0
   1da24:	mov	r7, #0
   1da28:	b	1da40 <main@@Base+0x7d04>
   1da2c:	rsbs	r6, r6, #0
   1da30:	rsc	r7, r7, #0
   1da34:	str	r6, [sp, #48]	; 0x30
   1da38:	str	r7, [sp, #52]	; 0x34
   1da3c:	ldr	sl, [sp, #32]
   1da40:	cmp	r8, r9
   1da44:	bne	1da88 <main@@Base+0x7d4c>
   1da48:	ldr	r2, [sp, #36]	; 0x24
   1da4c:	movw	r3, #33064	; 0x8128
   1da50:	add	r0, sp, #48	; 0x30
   1da54:	mov	r1, r8
   1da58:	str	r0, [sp]
   1da5c:	mov	r0, sl
   1da60:	movt	r3, #5
   1da64:	bl	234e8 <main@@Base+0xd7ac>
   1da68:	cmp	r0, r8
   1da6c:	mov	r9, r0
   1da70:	ldrne	r0, [sp, #36]	; 0x24
   1da74:	cmpne	r9, r0
   1da78:	beq	1f308 <main@@Base+0x95cc>
   1da7c:	ldr	r6, [sp, #48]	; 0x30
   1da80:	ldr	r7, [sp, #52]	; 0x34
   1da84:	ldr	sl, [sp, #32]
   1da88:	orrs	r0, r6, r7
   1da8c:	bne	1da9c <main@@Base+0x7d60>
   1da90:	ldrb	r0, [sl, #8]
   1da94:	tst	r0, #2
   1da98:	beq	1e2c0 <main@@Base+0x8584>
   1da9c:	ldr	r0, [sl]
   1daa0:	mov	r1, #22
   1daa4:	mov	r2, #8
   1daa8:	mov	r3, #8
   1daac:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1dab0:	cmp	r0, #0
   1dab4:	beq	1f308 <main@@Base+0x95cc>
   1dab8:	strd	r6, [r0]
   1dabc:	b	1e2c0 <main@@Base+0x8584>
   1dac0:	mov	r8, r6
   1dac4:	b	1b404 <main@@Base+0x56c8>
   1dac8:	cmp	r0, #93	; 0x5d
   1dacc:	bne	1eeb4 <main@@Base+0x9178>
   1dad0:	ldr	r6, [sp, #36]	; 0x24
   1dad4:	ldr	sl, [sp, #32]
   1dad8:	add	r1, r2, #1
   1dadc:	sub	r0, r6, r1
   1dae0:	cmp	r0, #2
   1dae4:	blt	1efac <main@@Base+0x9270>
   1dae8:	ldrb	r0, [r1]
   1daec:	cmp	r0, #32
   1daf0:	bls	1ef90 <main@@Base+0x9254>
   1daf4:	ldr	r6, [sp, #36]	; 0x24
   1daf8:	ldr	sl, [sp, #32]
   1dafc:	mov	r8, r1
   1db00:	b	1b404 <main@@Base+0x56c8>
   1db04:	mov	r8, r6
   1db08:	b	1eff8 <main@@Base+0x92bc>
   1db0c:	mov	r0, sl
   1db10:	mov	r1, r6
   1db14:	b	1eec4 <main@@Base+0x9188>
   1db18:	cmp	r0, #93	; 0x5d
   1db1c:	bne	1eed0 <main@@Base+0x9194>
   1db20:	ldr	r0, [sp, #36]	; 0x24
   1db24:	add	r1, r8, #1
   1db28:	sub	r0, r0, r1
   1db2c:	b	1dcd0 <main@@Base+0x7f94>
   1db30:	mov	r0, sl
   1db34:	mov	r1, r6
   1db38:	mov	r2, r6
   1db3c:	b	1eedc <main@@Base+0x91a0>
   1db40:	ldr	r6, [sp, #36]	; 0x24
   1db44:	bne	1db54 <main@@Base+0x7e18>
   1db48:	ldrb	r0, [r8, #2]!
   1db4c:	cmp	r0, #32
   1db50:	bhi	1db64 <main@@Base+0x7e28>
   1db54:	ldr	r0, [sp, #32]
   1db58:	mov	r2, r6
   1db5c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1db60:	mov	r8, r0
   1db64:	cmp	r8, r6
   1db68:	mov	r3, r6
   1db6c:	beq	1dbc0 <main@@Base+0x7e84>
   1db70:	ldrb	r0, [r8]
   1db74:	cmp	r0, #125	; 0x7d
   1db78:	bne	1dbbc <main@@Base+0x7e80>
   1db7c:	ldr	r6, [sp, #36]	; 0x24
   1db80:	ldr	sl, [sp, #32]
   1db84:	add	r1, r8, #1
   1db88:	sub	r0, r6, r1
   1db8c:	cmp	r0, #2
   1db90:	blt	1f1c4 <main@@Base+0x9488>
   1db94:	ldrb	r0, [r1]
   1db98:	cmp	r0, #32
   1db9c:	bhi	1ebe0 <main@@Base+0x8ea4>
   1dba0:	ldr	r6, [sp, #36]	; 0x24
   1dba4:	ldr	sl, [sp, #32]
   1dba8:	bne	1f1c4 <main@@Base+0x9488>
   1dbac:	ldrb	r0, [r8, #2]!
   1dbb0:	cmp	r0, #32
   1dbb4:	bhi	1b2a4 <main@@Base+0x5568>
   1dbb8:	b	1f1c4 <main@@Base+0x9488>
   1dbbc:	mov	r3, r8
   1dbc0:	ldr	r6, [sp, #36]	; 0x24
   1dbc4:	ldr	sl, [sp, #32]
   1dbc8:	cmp	r3, r6
   1dbcc:	mov	r1, r6
   1dbd0:	beq	1dc00 <main@@Base+0x7ec4>
   1dbd4:	ldrb	r0, [r3]
   1dbd8:	cmp	r0, #34	; 0x22
   1dbdc:	bne	1dbe8 <main@@Base+0x7eac>
   1dbe0:	add	r1, r3, #1
   1dbe4:	b	1dc00 <main@@Base+0x7ec4>
   1dbe8:	mov	r1, r3
   1dbec:	mov	r0, sl
   1dbf0:	mov	r2, r6
   1dbf4:	mov	r3, #5
   1dbf8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1dbfc:	mov	r1, r0
   1dc00:	mov	r0, sl
   1dc04:	mov	r2, r6
   1dc08:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   1dc0c:	mov	r2, r0
   1dc10:	sub	r0, r6, r0
   1dc14:	cmp	r0, #2
   1dc18:	blt	1dc44 <main@@Base+0x7f08>
   1dc1c:	ldrb	r0, [r2]
   1dc20:	cmp	r0, #32
   1dc24:	bls	1dc30 <main@@Base+0x7ef4>
   1dc28:	mov	r3, r2
   1dc2c:	b	1dc58 <main@@Base+0x7f1c>
   1dc30:	bne	1dc44 <main@@Base+0x7f08>
   1dc34:	mov	r3, r2
   1dc38:	ldrb	r0, [r3, #1]!
   1dc3c:	cmp	r0, #32
   1dc40:	bhi	1dc58 <main@@Base+0x7f1c>
   1dc44:	mov	r1, r2
   1dc48:	mov	r0, sl
   1dc4c:	mov	r2, r6
   1dc50:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1dc54:	mov	r3, r0
   1dc58:	cmp	r3, r6
   1dc5c:	beq	1eb9c <main@@Base+0x8e60>
   1dc60:	ldrb	r0, [r3]
   1dc64:	cmp	r0, #44	; 0x2c
   1dc68:	bne	1ebb4 <main@@Base+0x8e78>
   1dc6c:	add	r1, r3, #1
   1dc70:	sub	r0, r6, r1
   1dc74:	cmp	r0, #2
   1dc78:	blt	1dca0 <main@@Base+0x7f64>
   1dc7c:	ldrb	r0, [r1]
   1dc80:	cmp	r0, #32
   1dc84:	bls	1dc90 <main@@Base+0x7f54>
   1dc88:	mov	r3, r1
   1dc8c:	b	1dcb0 <main@@Base+0x7f74>
   1dc90:	bne	1dca0 <main@@Base+0x7f64>
   1dc94:	ldrb	r0, [r3, #2]!
   1dc98:	cmp	r0, #32
   1dc9c:	bhi	1dcb0 <main@@Base+0x7f74>
   1dca0:	mov	r0, sl
   1dca4:	mov	r2, r6
   1dca8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1dcac:	mov	r3, r0
   1dcb0:	cmp	r3, r6
   1dcb4:	beq	1ec14 <main@@Base+0x8ed8>
   1dcb8:	ldrb	r0, [r3]
   1dcbc:	cmp	r0, #125	; 0x7d
   1dcc0:	bne	1dbc8 <main@@Base+0x7e8c>
   1dcc4:	b	1ebc4 <main@@Base+0x8e88>
   1dcc8:	add	r1, r8, #1
   1dccc:	sub	r0, r6, r1
   1dcd0:	cmp	r0, #2
   1dcd4:	blt	1efe8 <main@@Base+0x92ac>
   1dcd8:	ldrb	r0, [r1]
   1dcdc:	cmp	r0, #32
   1dce0:	bls	1efd8 <main@@Base+0x929c>
   1dce4:	mov	r8, r1
   1dce8:	b	1eff8 <main@@Base+0x92bc>
   1dcec:	ldr	sl, [sp, #32]
   1dcf0:	ldr	r6, [sp, #36]	; 0x24
   1dcf4:	mov	r1, r9
   1dcf8:	mov	r0, sl
   1dcfc:	mov	r2, r6
   1dd00:	mov	r3, #9
   1dd04:	b	1ad24 <main@@Base+0x4fe8>
   1dd08:	mov	r8, r6
   1dd0c:	b	1ab1c <main@@Base+0x4de0>
   1dd10:	bne	1dd20 <main@@Base+0x7fe4>
   1dd14:	ldrb	r0, [r8, #2]!
   1dd18:	cmp	r0, #32
   1dd1c:	bhi	1dd30 <main@@Base+0x7ff4>
   1dd20:	ldr	r0, [sp, #32]
   1dd24:	ldr	r2, [sp, #36]	; 0x24
   1dd28:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1dd2c:	mov	r8, r0
   1dd30:	ldr	r7, [sp, #36]	; 0x24
   1dd34:	cmp	r8, r7
   1dd38:	beq	1dd94 <main@@Base+0x8058>
   1dd3c:	ldrb	r0, [r8]
   1dd40:	cmp	r0, #93	; 0x5d
   1dd44:	bne	1dd90 <main@@Base+0x8054>
   1dd48:	ldr	r0, [sp, #36]	; 0x24
   1dd4c:	ldr	sl, [sp, #32]
   1dd50:	add	r1, r8, #1
   1dd54:	sub	r0, r0, r1
   1dd58:	cmp	r0, #2
   1dd5c:	blt	1dd80 <main@@Base+0x8044>
   1dd60:	ldrb	r0, [r1]
   1dd64:	cmp	r0, #32
   1dd68:	bhi	1ef88 <main@@Base+0x924c>
   1dd6c:	ldr	sl, [sp, #32]
   1dd70:	bne	1dd80 <main@@Base+0x8044>
   1dd74:	ldrb	r0, [r8, #2]!
   1dd78:	cmp	r0, #32
   1dd7c:	bhi	1d5b4 <main@@Base+0x7878>
   1dd80:	ldr	r2, [sp, #36]	; 0x24
   1dd84:	mov	r0, sl
   1dd88:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1dd8c:	b	1d5b0 <main@@Base+0x7874>
   1dd90:	mov	r7, r8
   1dd94:	mov	r0, #0
   1dd98:	mov	r1, #1
   1dd9c:	str	r0, [fp, #-52]	; 0xffffffcc
   1dda0:	str	r0, [fp, #-56]	; 0xffffffc8
   1dda4:	ldr	r0, [sp, #32]
   1dda8:	ldr	r0, [r0]
   1ddac:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1ddb0:	cmp	r0, #0
   1ddb4:	beq	1f35c <main@@Base+0x9620>
   1ddb8:	ldr	r6, [sp, #36]	; 0x24
   1ddbc:	ldr	sl, [sp, #32]
   1ddc0:	mov	r9, r0
   1ddc4:	mov	r8, r7
   1ddc8:	mov	r0, sl
   1ddcc:	mov	r1, r8
   1ddd0:	mov	r2, r6
   1ddd4:	sub	r3, fp, #56	; 0x38
   1ddd8:	bl	32a24 <flatcc_json_parser_double@@Base>
   1dddc:	mov	r7, r0
   1dde0:	cmp	r8, r0
   1dde4:	bne	1de24 <main@@Base+0x80e8>
   1dde8:	movw	r3, #33136	; 0x8170
   1ddec:	sub	r0, fp, #56	; 0x38
   1ddf0:	mov	r1, r8
   1ddf4:	mov	r2, r6
   1ddf8:	str	r0, [sp]
   1ddfc:	mov	r0, sl
   1de00:	movt	r3, #5
   1de04:	bl	23a54 <main@@Base+0xdd18>
   1de08:	mov	r7, r0
   1de0c:	cmp	r0, r8
   1de10:	beq	1f35c <main@@Base+0x9620>
   1de14:	ldr	r6, [sp, #36]	; 0x24
   1de18:	ldr	sl, [sp, #32]
   1de1c:	cmp	r7, r6
   1de20:	beq	1f364 <main@@Base+0x9628>
   1de24:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1de28:	sub	r0, r6, r7
   1de2c:	cmp	r0, #2
   1de30:	vstr	d16, [r9]
   1de34:	blt	1de60 <main@@Base+0x8124>
   1de38:	ldrb	r0, [r7]
   1de3c:	cmp	r0, #32
   1de40:	bls	1de4c <main@@Base+0x8110>
   1de44:	mov	r8, r7
   1de48:	b	1de74 <main@@Base+0x8138>
   1de4c:	bne	1de60 <main@@Base+0x8124>
   1de50:	mov	r8, r7
   1de54:	ldrb	r0, [r8, #1]!
   1de58:	cmp	r0, #32
   1de5c:	bhi	1de74 <main@@Base+0x8138>
   1de60:	mov	r0, sl
   1de64:	mov	r1, r7
   1de68:	mov	r2, r6
   1de6c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1de70:	mov	r8, r0
   1de74:	cmp	r8, r6
   1de78:	beq	1eef4 <main@@Base+0x91b8>
   1de7c:	ldrb	r0, [r8]
   1de80:	cmp	r0, #44	; 0x2c
   1de84:	bne	1eefc <main@@Base+0x91c0>
   1de88:	add	r1, r8, #1
   1de8c:	sub	r0, r6, r1
   1de90:	cmp	r0, #2
   1de94:	blt	1debc <main@@Base+0x8180>
   1de98:	ldrb	r0, [r1]
   1de9c:	cmp	r0, #32
   1dea0:	bls	1deac <main@@Base+0x8170>
   1dea4:	mov	r8, r1
   1dea8:	b	1decc <main@@Base+0x8190>
   1deac:	bne	1debc <main@@Base+0x8180>
   1deb0:	ldrb	r0, [r8, #2]!
   1deb4:	cmp	r0, #32
   1deb8:	bhi	1decc <main@@Base+0x8190>
   1debc:	mov	r0, sl
   1dec0:	mov	r2, r6
   1dec4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1dec8:	mov	r8, r0
   1decc:	cmp	r8, r6
   1ded0:	beq	1ef14 <main@@Base+0x91d8>
   1ded4:	ldrb	r0, [r8]
   1ded8:	cmp	r0, #93	; 0x5d
   1dedc:	beq	1ef6c <main@@Base+0x9230>
   1dee0:	mov	r0, #0
   1dee4:	mov	r1, #1
   1dee8:	str	r0, [fp, #-52]	; 0xffffffcc
   1deec:	str	r0, [fp, #-56]	; 0xffffffc8
   1def0:	ldr	r0, [sl]
   1def4:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1def8:	mov	r9, r0
   1defc:	cmp	r0, #0
   1df00:	mov	r7, r8
   1df04:	bne	1ddc8 <main@@Base+0x808c>
   1df08:	b	1f364 <main@@Base+0x9628>
   1df0c:	cmp	r0, #125	; 0x7d
   1df10:	bne	1ef50 <main@@Base+0x9214>
   1df14:	ldr	r6, [sp, #36]	; 0x24
   1df18:	ldr	sl, [sp, #32]
   1df1c:	add	r1, r2, #1
   1df20:	sub	r0, r6, r1
   1df24:	cmp	r0, #2
   1df28:	blt	1f130 <main@@Base+0x93f4>
   1df2c:	ldrb	r0, [r1]
   1df30:	cmp	r0, #32
   1df34:	bls	1f114 <main@@Base+0x93d8>
   1df38:	ldr	r6, [sp, #36]	; 0x24
   1df3c:	ldr	sl, [sp, #32]
   1df40:	mov	r8, r1
   1df44:	b	1ab1c <main@@Base+0x4de0>
   1df48:	mov	r0, sl
   1df4c:	mov	r1, r6
   1df50:	b	1ef60 <main@@Base+0x9224>
   1df54:	ldr	r6, [sp, #36]	; 0x24
   1df58:	ldr	sl, [sp, #32]
   1df5c:	bne	1df6c <main@@Base+0x8230>
   1df60:	ldrb	r0, [r8, #2]!
   1df64:	cmp	r0, #32
   1df68:	bhi	1df7c <main@@Base+0x8240>
   1df6c:	mov	r0, sl
   1df70:	mov	r2, r6
   1df74:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1df78:	mov	r8, r0
   1df7c:	cmp	r7, r8
   1df80:	beq	1e144 <main@@Base+0x8408>
   1df84:	mov	r5, #0
   1df88:	cmp	r8, r6
   1df8c:	str	r5, [fp, #-52]	; 0xffffffcc
   1df90:	str	r5, [fp, #-56]	; 0xffffffc8
   1df94:	str	r5, [sp, #60]	; 0x3c
   1df98:	str	r5, [sp, #48]	; 0x30
   1df9c:	beq	1dfe8 <main@@Base+0x82ac>
   1dfa0:	sub	r0, fp, #56	; 0x38
   1dfa4:	mov	r1, r8
   1dfa8:	mov	r2, r6
   1dfac:	add	r3, sp, #48	; 0x30
   1dfb0:	str	r0, [sp]
   1dfb4:	ldr	r0, [sp, #32]
   1dfb8:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1dfbc:	cmp	r0, r8
   1dfc0:	beq	1dff0 <main@@Base+0x82b4>
   1dfc4:	mov	r9, r0
   1dfc8:	ldr	r0, [sp, #48]	; 0x30
   1dfcc:	cmp	r0, #0
   1dfd0:	beq	1dff8 <main@@Base+0x82bc>
   1dfd4:	ldr	r0, [sp, #32]
   1dfd8:	ldr	r2, [sp, #36]	; 0x24
   1dfdc:	mov	r1, r9
   1dfe0:	mov	r3, #8
   1dfe4:	b	1e014 <main@@Base+0x82d8>
   1dfe8:	mov	r9, r6
   1dfec:	b	1e01c <main@@Base+0x82e0>
   1dff0:	mov	r9, r8
   1dff4:	b	1e01c <main@@Base+0x82e0>
   1dff8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1dffc:	cmp	r0, #0
   1e000:	beq	1eee8 <main@@Base+0x91ac>
   1e004:	ldr	r0, [sp, #32]
   1e008:	ldr	r2, [sp, #36]	; 0x24
   1e00c:	mov	r1, r9
   1e010:	mov	r3, #7
   1e014:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e018:	mov	r9, r0
   1e01c:	cmp	r8, r9
   1e020:	bne	1e05c <main@@Base+0x8320>
   1e024:	add	r0, sp, #60	; 0x3c
   1e028:	ldr	r2, [sp, #36]	; 0x24
   1e02c:	movw	r3, #33088	; 0x8140
   1e030:	mov	r1, r8
   1e034:	str	r0, [sp]
   1e038:	ldr	r0, [sp, #32]
   1e03c:	movt	r3, #5
   1e040:	bl	236d0 <main@@Base+0xd994>
   1e044:	cmp	r0, r8
   1e048:	mov	r9, r0
   1e04c:	ldrne	r0, [sp, #36]	; 0x24
   1e050:	cmpne	r9, r0
   1e054:	beq	1f308 <main@@Base+0x95cc>
   1e058:	ldr	r5, [sp, #60]	; 0x3c
   1e05c:	ldr	sl, [sp, #32]
   1e060:	cmp	r5, #0
   1e064:	bne	1e074 <main@@Base+0x8338>
   1e068:	ldrb	r0, [sl, #8]
   1e06c:	tst	r0, #2
   1e070:	beq	1e2c0 <main@@Base+0x8584>
   1e074:	ldr	r0, [sl]
   1e078:	mov	r1, #21
   1e07c:	mov	r2, #4
   1e080:	mov	r3, #4
   1e084:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1e088:	cmp	r0, #0
   1e08c:	beq	1f308 <main@@Base+0x95cc>
   1e090:	ldr	sl, [sp, #32]
   1e094:	str	r5, [r0]
   1e098:	b	1e2c0 <main@@Base+0x8584>
   1e09c:	ldr	r6, [sp, #36]	; 0x24
   1e0a0:	ldr	sl, [sp, #32]
   1e0a4:	bne	1e0b4 <main@@Base+0x8378>
   1e0a8:	ldrb	r0, [r8, #2]!
   1e0ac:	cmp	r0, #32
   1e0b0:	bhi	1e0c4 <main@@Base+0x8388>
   1e0b4:	mov	r0, sl
   1e0b8:	mov	r2, r6
   1e0bc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e0c0:	mov	r8, r0
   1e0c4:	cmp	r7, r8
   1e0c8:	beq	1e144 <main@@Base+0x8408>
   1e0cc:	mov	r2, r6
   1e0d0:	mov	r6, #0
   1e0d4:	cmp	r8, r2
   1e0d8:	str	r6, [fp, #-52]	; 0xffffffcc
   1e0dc:	str	r6, [fp, #-56]	; 0xffffffc8
   1e0e0:	str	r6, [sp, #52]	; 0x34
   1e0e4:	str	r6, [sp, #48]	; 0x30
   1e0e8:	str	r6, [sp, #60]	; 0x3c
   1e0ec:	beq	1e214 <main@@Base+0x84d8>
   1e0f0:	sub	r0, fp, #56	; 0x38
   1e0f4:	mov	r1, r8
   1e0f8:	add	r3, sp, #60	; 0x3c
   1e0fc:	str	r0, [sp]
   1e100:	ldr	r0, [sp, #32]
   1e104:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1e108:	cmp	r0, r8
   1e10c:	beq	1e220 <main@@Base+0x84e4>
   1e110:	mov	r9, r0
   1e114:	ldr	r0, [sp, #60]	; 0x3c
   1e118:	cmp	r0, #0
   1e11c:	beq	1e230 <main@@Base+0x84f4>
   1e120:	ldr	r0, [sp, #32]
   1e124:	ldr	r2, [sp, #36]	; 0x24
   1e128:	mov	r1, r9
   1e12c:	mov	r3, #8
   1e130:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e134:	mov	r9, r0
   1e138:	mov	r6, #0
   1e13c:	mov	r7, #0
   1e140:	b	1e240 <main@@Base+0x8504>
   1e144:	mov	r0, sl
   1e148:	mov	r1, r7
   1e14c:	mov	r2, r6
   1e150:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   1e154:	mov	r9, r0
   1e158:	sub	r0, r6, r9
   1e15c:	cmp	r0, #2
   1e160:	blt	1e18c <main@@Base+0x8450>
   1e164:	ldrb	r0, [r9]
   1e168:	cmp	r0, #32
   1e16c:	bls	1e178 <main@@Base+0x843c>
   1e170:	mov	r2, r9
   1e174:	b	1e1a0 <main@@Base+0x8464>
   1e178:	bne	1e18c <main@@Base+0x8450>
   1e17c:	mov	r2, r9
   1e180:	ldrb	r0, [r2, #1]!
   1e184:	cmp	r0, #32
   1e188:	bhi	1e1a0 <main@@Base+0x8464>
   1e18c:	mov	r0, sl
   1e190:	mov	r1, r9
   1e194:	mov	r2, r6
   1e198:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e19c:	mov	r2, r0
   1e1a0:	cmp	r2, r6
   1e1a4:	beq	1f260 <main@@Base+0x9524>
   1e1a8:	ldrb	r0, [r2]
   1e1ac:	ldr	r4, [sp, #28]
   1e1b0:	cmp	r0, #44	; 0x2c
   1e1b4:	bne	1f26c <main@@Base+0x9530>
   1e1b8:	add	r1, r2, #1
   1e1bc:	sub	r0, r6, r1
   1e1c0:	cmp	r0, #2
   1e1c4:	blt	1e1ec <main@@Base+0x84b0>
   1e1c8:	ldrb	r0, [r1]
   1e1cc:	cmp	r0, #32
   1e1d0:	bls	1e1dc <main@@Base+0x84a0>
   1e1d4:	mov	r2, r1
   1e1d8:	b	1e1fc <main@@Base+0x84c0>
   1e1dc:	bne	1e1ec <main@@Base+0x84b0>
   1e1e0:	ldrb	r0, [r2, #2]!
   1e1e4:	cmp	r0, #32
   1e1e8:	bhi	1e1fc <main@@Base+0x84c0>
   1e1ec:	mov	r0, sl
   1e1f0:	mov	r2, r6
   1e1f4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e1f8:	mov	r2, r0
   1e1fc:	cmp	r2, r6
   1e200:	beq	1f2bc <main@@Base+0x9580>
   1e204:	ldrb	r0, [r2]
   1e208:	cmp	r0, #125	; 0x7d
   1e20c:	bne	167cc <main@@Base+0xa90>
   1e210:	b	1f274 <main@@Base+0x9538>
   1e214:	mov	r7, #0
   1e218:	mov	r9, r2
   1e21c:	b	1e240 <main@@Base+0x8504>
   1e220:	mov	r6, #0
   1e224:	mov	r7, #0
   1e228:	mov	r9, r8
   1e22c:	b	1e240 <main@@Base+0x8504>
   1e230:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e234:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1e238:	str	r7, [sp, #52]	; 0x34
   1e23c:	str	r6, [sp, #48]	; 0x30
   1e240:	cmp	r8, r9
   1e244:	bne	1e284 <main@@Base+0x8548>
   1e248:	add	r0, sp, #48	; 0x30
   1e24c:	ldr	r2, [sp, #36]	; 0x24
   1e250:	movw	r3, #33112	; 0x8158
   1e254:	mov	r1, r8
   1e258:	str	r0, [sp]
   1e25c:	ldr	r0, [sp, #32]
   1e260:	movt	r3, #5
   1e264:	bl	23898 <main@@Base+0xdb5c>
   1e268:	cmp	r0, r8
   1e26c:	mov	r9, r0
   1e270:	ldrne	r0, [sp, #36]	; 0x24
   1e274:	cmpne	r9, r0
   1e278:	beq	1f308 <main@@Base+0x95cc>
   1e27c:	ldr	r6, [sp, #48]	; 0x30
   1e280:	ldr	r7, [sp, #52]	; 0x34
   1e284:	ldr	sl, [sp, #32]
   1e288:	orrs	r0, r6, r7
   1e28c:	bne	1e29c <main@@Base+0x8560>
   1e290:	ldrb	r0, [sl, #8]
   1e294:	tst	r0, #2
   1e298:	beq	1e2c0 <main@@Base+0x8584>
   1e29c:	ldr	r0, [sl]
   1e2a0:	mov	r1, #23
   1e2a4:	mov	r2, #8
   1e2a8:	mov	r3, #8
   1e2ac:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1e2b0:	cmp	r0, #0
   1e2b4:	beq	1f308 <main@@Base+0x95cc>
   1e2b8:	strd	r6, [r0]
   1e2bc:	ldr	sl, [sp, #32]
   1e2c0:	ldr	r6, [sp, #36]	; 0x24
   1e2c4:	b	1e158 <main@@Base+0x841c>
   1e2c8:	ldr	sl, [sp, #32]
   1e2cc:	ldr	r6, [sp, #36]	; 0x24
   1e2d0:	mov	r1, r8
   1e2d4:	mov	r0, sl
   1e2d8:	mov	r2, r6
   1e2dc:	mov	r3, #9
   1e2e0:	b	1948c <main@@Base+0x3750>
   1e2e4:	mov	r8, r6
   1e2e8:	b	1c468 <main@@Base+0x672c>
   1e2ec:	bne	1e2fc <main@@Base+0x85c0>
   1e2f0:	ldrb	r0, [r8, #2]!
   1e2f4:	cmp	r0, #32
   1e2f8:	bhi	1e30c <main@@Base+0x85d0>
   1e2fc:	ldr	r0, [sp, #32]
   1e300:	ldr	r2, [sp, #36]	; 0x24
   1e304:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e308:	mov	r8, r0
   1e30c:	ldr	r2, [sp, #36]	; 0x24
   1e310:	cmp	r8, r2
   1e314:	beq	1e35c <main@@Base+0x8620>
   1e318:	ldrb	r0, [r8]
   1e31c:	cmp	r0, #125	; 0x7d
   1e320:	bne	1e358 <main@@Base+0x861c>
   1e324:	ldr	r0, [sp, #36]	; 0x24
   1e328:	add	r1, r8, #1
   1e32c:	sub	r0, r0, r1
   1e330:	cmp	r0, #2
   1e334:	blt	1f250 <main@@Base+0x9514>
   1e338:	ldrb	r0, [r1]
   1e33c:	cmp	r0, #32
   1e340:	bhi	1f04c <main@@Base+0x9310>
   1e344:	bne	1f250 <main@@Base+0x9514>
   1e348:	ldrb	r0, [r8, #2]!
   1e34c:	cmp	r0, #32
   1e350:	bhi	1bef8 <main@@Base+0x61bc>
   1e354:	b	1f250 <main@@Base+0x9514>
   1e358:	mov	r2, r8
   1e35c:	ldr	r4, [sp, #36]	; 0x24
   1e360:	ldr	sl, [sp, #32]
   1e364:	cmp	r2, r4
   1e368:	mov	r9, r4
   1e36c:	beq	1e39c <main@@Base+0x8660>
   1e370:	ldrb	r0, [r2]
   1e374:	cmp	r0, #34	; 0x22
   1e378:	bne	1e384 <main@@Base+0x8648>
   1e37c:	add	r9, r2, #1
   1e380:	b	1e39c <main@@Base+0x8660>
   1e384:	mov	r1, r2
   1e388:	mov	r0, sl
   1e38c:	mov	r2, r4
   1e390:	mov	r3, #5
   1e394:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e398:	mov	r9, r0
   1e39c:	sub	lr, r4, r9
   1e3a0:	mov	r0, #8
   1e3a4:	cmp	lr, #8
   1e3a8:	movcc	r0, lr
   1e3ac:	and	r0, r0, #15
   1e3b0:	sub	r7, r0, #1
   1e3b4:	cmp	r7, #7
   1e3b8:	bhi	1ea40 <main@@Base+0x8d04>
   1e3bc:	add	r4, pc, #32
   1e3c0:	mov	r1, #0
   1e3c4:	mov	ip, #0
   1e3c8:	mov	r8, #0
   1e3cc:	mov	r6, #0
   1e3d0:	mov	r3, #0
   1e3d4:	mov	r5, #0
   1e3d8:	mov	r2, #0
   1e3dc:	mov	r0, #0
   1e3e0:	ldr	pc, [r4, r7, lsl #2]
   1e3e4:	andeq	lr, r1, r8, asr #8
   1e3e8:	andeq	lr, r1, r0, asr #8
   1e3ec:	andeq	lr, r1, r8, lsr r4
   1e3f0:	andeq	lr, r1, r0, lsr r4
   1e3f4:	andeq	lr, r1, r4, lsr #8
   1e3f8:	andeq	lr, r1, r8, lsl r4
   1e3fc:	andeq	lr, r1, r8, lsl #8
   1e400:	andeq	lr, r1, r4, lsl #8
   1e404:	ldrb	ip, [r9, #7]
   1e408:	ldrb	r0, [r9, #6]
   1e40c:	mov	r8, r1
   1e410:	orr	r0, ip, r0, lsl #8
   1e414:	mov	r1, r0
   1e418:	ldrb	r0, [r9, #5]
   1e41c:	mov	r6, r8
   1e420:	orr	r1, r1, r0, lsl #16
   1e424:	ldrb	r0, [r9, #4]
   1e428:	mov	r3, r6
   1e42c:	orr	r1, r1, r0, lsl #24
   1e430:	ldrb	r0, [r9, #3]
   1e434:	orr	r5, r0, r3
   1e438:	ldrb	r0, [r9, #2]
   1e43c:	orr	r2, r5, r0, lsl #8
   1e440:	ldrb	r0, [r9, #1]
   1e444:	orr	r0, r2, r0, lsl #16
   1e448:	ldrb	r2, [r9]
   1e44c:	orr	r2, r0, r2, lsl #24
   1e450:	movw	r0, #65535	; 0xffff
   1e454:	movt	r0, #26979	; 0x6963
   1e458:	cmp	r2, r0
   1e45c:	bhi	1e4c0 <main@@Base+0x8784>
   1e460:	movw	r0, #30062	; 0x756e
   1e464:	and	r1, r1, #-16777216	; 0xff000000
   1e468:	movt	r0, #25455	; 0x636f
   1e46c:	eor	r1, r1, #1946157056	; 0x74000000
   1e470:	eor	r0, r2, r0
   1e474:	orrs	r0, r1, r0
   1e478:	bne	1ea40 <main@@Base+0x8d04>
   1e47c:	cmp	lr, #6
   1e480:	mov	r7, r9
   1e484:	blt	1e704 <main@@Base+0x89c8>
   1e488:	ldrb	r0, [r9, #5]
   1e48c:	mov	r7, r9
   1e490:	cmp	r0, #34	; 0x22
   1e494:	bne	1e704 <main@@Base+0x89c8>
   1e498:	ldr	r0, [sp, #36]	; 0x24
   1e49c:	add	r1, r9, #6
   1e4a0:	sub	r0, r0, r1
   1e4a4:	cmp	r0, #2
   1e4a8:	blt	1e584 <main@@Base+0x8848>
   1e4ac:	ldrb	r0, [r1]
   1e4b0:	cmp	r0, #32
   1e4b4:	bls	1e570 <main@@Base+0x8834>
   1e4b8:	mov	r7, r1
   1e4bc:	b	1e594 <main@@Base+0x8858>
   1e4c0:	movw	r1, #27648	; 0x6c00
   1e4c4:	bic	r0, r2, #255	; 0xff
   1e4c8:	movt	r1, #30305	; 0x7661
   1e4cc:	teq	r0, r1
   1e4d0:	bne	1e518 <main@@Base+0x87dc>
   1e4d4:	cmp	lr, #4
   1e4d8:	mov	r7, r9
   1e4dc:	blt	1e860 <main@@Base+0x8b24>
   1e4e0:	ldrb	r0, [r9, #3]
   1e4e4:	mov	r7, r9
   1e4e8:	cmp	r0, #34	; 0x22
   1e4ec:	bne	1e860 <main@@Base+0x8b24>
   1e4f0:	ldr	r0, [sp, #36]	; 0x24
   1e4f4:	add	r1, r9, #4
   1e4f8:	sub	r0, r0, r1
   1e4fc:	cmp	r0, #2
   1e500:	blt	1e600 <main@@Base+0x88c4>
   1e504:	ldrb	r0, [r1]
   1e508:	cmp	r0, #32
   1e50c:	bls	1e5ec <main@@Base+0x88b0>
   1e510:	mov	r7, r1
   1e514:	b	1e610 <main@@Base+0x88d4>
   1e518:	movw	r0, #0
   1e51c:	bfc	r2, #0, #16
   1e520:	movt	r0, #26980	; 0x6964
   1e524:	teq	r2, r0
   1e528:	bne	1ea3c <main@@Base+0x8d00>
   1e52c:	cmp	lr, #3
   1e530:	mov	r1, r9
   1e534:	blt	1e9e8 <main@@Base+0x8cac>
   1e538:	ldrb	r0, [r9, #2]
   1e53c:	mov	r1, r9
   1e540:	cmp	r0, #34	; 0x22
   1e544:	bne	1e9e8 <main@@Base+0x8cac>
   1e548:	ldr	r0, [sp, #36]	; 0x24
   1e54c:	add	r2, r9, #3
   1e550:	sub	r0, r0, r2
   1e554:	cmp	r0, #2
   1e558:	blt	1e67c <main@@Base+0x8940>
   1e55c:	ldrb	r0, [r2]
   1e560:	cmp	r0, #32
   1e564:	bls	1e668 <main@@Base+0x892c>
   1e568:	mov	r1, r2
   1e56c:	b	1e690 <main@@Base+0x8954>
   1e570:	bne	1e584 <main@@Base+0x8848>
   1e574:	mov	r7, r9
   1e578:	ldrb	r0, [r7, #7]!
   1e57c:	cmp	r0, #32
   1e580:	bhi	1e594 <main@@Base+0x8858>
   1e584:	ldr	r0, [sp, #32]
   1e588:	ldr	r2, [sp, #36]	; 0x24
   1e58c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e590:	mov	r7, r0
   1e594:	ldr	r0, [sp, #36]	; 0x24
   1e598:	cmp	r7, r0
   1e59c:	beq	1e5d4 <main@@Base+0x8898>
   1e5a0:	ldrb	r0, [r7]
   1e5a4:	cmp	r0, #58	; 0x3a
   1e5a8:	bne	1e5d4 <main@@Base+0x8898>
   1e5ac:	ldr	r0, [sp, #36]	; 0x24
   1e5b0:	add	r1, r7, #1
   1e5b4:	sub	r0, r0, r1
   1e5b8:	cmp	r0, #2
   1e5bc:	blt	1e6f4 <main@@Base+0x89b8>
   1e5c0:	ldrb	r0, [r1]
   1e5c4:	cmp	r0, #32
   1e5c8:	bls	1e6e4 <main@@Base+0x89a8>
   1e5cc:	mov	r7, r1
   1e5d0:	b	1e704 <main@@Base+0x89c8>
   1e5d4:	ldr	r0, [sp, #32]
   1e5d8:	ldr	r2, [sp, #36]	; 0x24
   1e5dc:	mov	r1, r7
   1e5e0:	mov	r3, #4
   1e5e4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e5e8:	b	1e700 <main@@Base+0x89c4>
   1e5ec:	bne	1e600 <main@@Base+0x88c4>
   1e5f0:	mov	r7, r9
   1e5f4:	ldrb	r0, [r7, #5]!
   1e5f8:	cmp	r0, #32
   1e5fc:	bhi	1e610 <main@@Base+0x88d4>
   1e600:	ldr	r0, [sp, #32]
   1e604:	ldr	r2, [sp, #36]	; 0x24
   1e608:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e60c:	mov	r7, r0
   1e610:	ldr	r0, [sp, #36]	; 0x24
   1e614:	cmp	r7, r0
   1e618:	beq	1e650 <main@@Base+0x8914>
   1e61c:	ldrb	r0, [r7]
   1e620:	cmp	r0, #58	; 0x3a
   1e624:	bne	1e650 <main@@Base+0x8914>
   1e628:	ldr	r0, [sp, #36]	; 0x24
   1e62c:	add	r1, r7, #1
   1e630:	sub	r0, r0, r1
   1e634:	cmp	r0, #2
   1e638:	blt	1e850 <main@@Base+0x8b14>
   1e63c:	ldrb	r0, [r1]
   1e640:	cmp	r0, #32
   1e644:	bls	1e840 <main@@Base+0x8b04>
   1e648:	mov	r7, r1
   1e64c:	b	1e860 <main@@Base+0x8b24>
   1e650:	ldr	r0, [sp, #32]
   1e654:	ldr	r2, [sp, #36]	; 0x24
   1e658:	mov	r1, r7
   1e65c:	mov	r3, #4
   1e660:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e664:	b	1e85c <main@@Base+0x8b20>
   1e668:	bne	1e67c <main@@Base+0x8940>
   1e66c:	mov	r1, r9
   1e670:	ldrb	r0, [r1, #4]!
   1e674:	cmp	r0, #32
   1e678:	bhi	1e690 <main@@Base+0x8954>
   1e67c:	mov	r1, r2
   1e680:	ldr	r0, [sp, #32]
   1e684:	ldr	r2, [sp, #36]	; 0x24
   1e688:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e68c:	mov	r1, r0
   1e690:	ldr	r0, [sp, #36]	; 0x24
   1e694:	cmp	r1, r0
   1e698:	beq	1e6d0 <main@@Base+0x8994>
   1e69c:	ldrb	r0, [r1]
   1e6a0:	cmp	r0, #58	; 0x3a
   1e6a4:	bne	1e6d0 <main@@Base+0x8994>
   1e6a8:	ldr	r0, [sp, #36]	; 0x24
   1e6ac:	add	r2, r1, #1
   1e6b0:	sub	r0, r0, r2
   1e6b4:	cmp	r0, #2
   1e6b8:	blt	1e9d4 <main@@Base+0x8c98>
   1e6bc:	ldrb	r0, [r2]
   1e6c0:	cmp	r0, #32
   1e6c4:	bls	1e9c4 <main@@Base+0x8c88>
   1e6c8:	mov	r1, r2
   1e6cc:	b	1e9e8 <main@@Base+0x8cac>
   1e6d0:	ldr	r0, [sp, #32]
   1e6d4:	ldr	r2, [sp, #36]	; 0x24
   1e6d8:	mov	r3, #4
   1e6dc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e6e0:	b	1e9e4 <main@@Base+0x8ca8>
   1e6e4:	bne	1e6f4 <main@@Base+0x89b8>
   1e6e8:	ldrb	r0, [r7, #2]!
   1e6ec:	cmp	r0, #32
   1e6f0:	bhi	1e704 <main@@Base+0x89c8>
   1e6f4:	ldr	r0, [sp, #32]
   1e6f8:	ldr	r2, [sp, #36]	; 0x24
   1e6fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e700:	mov	r7, r0
   1e704:	cmp	r9, r7
   1e708:	beq	1ea3c <main@@Base+0x8d00>
   1e70c:	ldr	r0, [sp, #36]	; 0x24
   1e710:	mov	r5, #0
   1e714:	str	r5, [fp, #-52]	; 0xffffffcc
   1e718:	str	r5, [fp, #-56]	; 0xffffffc8
   1e71c:	strh	r5, [sp, #60]	; 0x3c
   1e720:	str	r5, [sp, #48]	; 0x30
   1e724:	cmp	r7, r0
   1e728:	beq	1e774 <main@@Base+0x8a38>
   1e72c:	sub	r0, fp, #56	; 0x38
   1e730:	ldr	r2, [sp, #36]	; 0x24
   1e734:	mov	r1, r7
   1e738:	add	r3, sp, #48	; 0x30
   1e73c:	str	r0, [sp]
   1e740:	ldr	r0, [sp, #32]
   1e744:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1e748:	cmp	r0, r7
   1e74c:	beq	1e77c <main@@Base+0x8a40>
   1e750:	mov	r8, r0
   1e754:	ldr	r0, [sp, #48]	; 0x30
   1e758:	cmp	r0, #0
   1e75c:	beq	1e784 <main@@Base+0x8a48>
   1e760:	ldr	r0, [sp, #32]
   1e764:	ldr	r2, [sp, #36]	; 0x24
   1e768:	mov	r1, r8
   1e76c:	mov	r3, #8
   1e770:	b	1e7a8 <main@@Base+0x8a6c>
   1e774:	ldr	r8, [sp, #36]	; 0x24
   1e778:	b	1e7b0 <main@@Base+0x8a74>
   1e77c:	mov	r8, r7
   1e780:	b	1e7b0 <main@@Base+0x8a74>
   1e784:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e788:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1e78c:	subs	r2, r0, #65536	; 0x10000
   1e790:	sbcs	r1, r1, #0
   1e794:	bcc	1e834 <main@@Base+0x8af8>
   1e798:	ldr	r0, [sp, #32]
   1e79c:	ldr	r2, [sp, #36]	; 0x24
   1e7a0:	mov	r1, r8
   1e7a4:	mov	r3, #7
   1e7a8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e7ac:	mov	r8, r0
   1e7b0:	cmp	r7, r8
   1e7b4:	bne	1e7f0 <main@@Base+0x8ab4>
   1e7b8:	add	r0, sp, #60	; 0x3c
   1e7bc:	ldr	r2, [sp, #36]	; 0x24
   1e7c0:	movw	r3, #33580	; 0x832c
   1e7c4:	mov	r1, r7
   1e7c8:	str	r0, [sp]
   1e7cc:	ldr	r0, [sp, #32]
   1e7d0:	movt	r3, #5
   1e7d4:	bl	2a998 <main@@Base+0x14c5c>
   1e7d8:	cmp	r0, r7
   1e7dc:	mov	r8, r0
   1e7e0:	ldrne	r0, [sp, #36]	; 0x24
   1e7e4:	cmpne	r8, r0
   1e7e8:	beq	1bf08 <main@@Base+0x61cc>
   1e7ec:	ldrh	r5, [sp, #60]	; 0x3c
   1e7f0:	movw	r0, #65535	; 0xffff
   1e7f4:	tst	r5, r0
   1e7f8:	bne	1e80c <main@@Base+0x8ad0>
   1e7fc:	ldr	r0, [sp, #32]
   1e800:	ldrb	r0, [r0, #8]
   1e804:	tst	r0, #2
   1e808:	beq	1ea30 <main@@Base+0x8cf4>
   1e80c:	ldr	r0, [sp, #32]
   1e810:	mov	r1, #2
   1e814:	mov	r2, #2
   1e818:	mov	r3, #2
   1e81c:	ldr	r0, [r0]
   1e820:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1e824:	cmp	r0, #0
   1e828:	beq	1bf08 <main@@Base+0x61cc>
   1e82c:	strh	r5, [r0]
   1e830:	b	1ea30 <main@@Base+0x8cf4>
   1e834:	mov	r5, r0
   1e838:	strh	r0, [sp, #60]	; 0x3c
   1e83c:	b	1e7b0 <main@@Base+0x8a74>
   1e840:	bne	1e850 <main@@Base+0x8b14>
   1e844:	ldrb	r0, [r7, #2]!
   1e848:	cmp	r0, #32
   1e84c:	bhi	1e860 <main@@Base+0x8b24>
   1e850:	ldr	r0, [sp, #32]
   1e854:	ldr	r2, [sp, #36]	; 0x24
   1e858:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e85c:	mov	r7, r0
   1e860:	cmp	r9, r7
   1e864:	beq	1ea3c <main@@Base+0x8d00>
   1e868:	ldr	r0, [sp, #36]	; 0x24
   1e86c:	mov	r6, #0
   1e870:	str	r6, [fp, #-52]	; 0xffffffcc
   1e874:	str	r6, [fp, #-56]	; 0xffffffc8
   1e878:	str	r6, [sp, #52]	; 0x34
   1e87c:	str	r6, [sp, #48]	; 0x30
   1e880:	str	r6, [sp, #60]	; 0x3c
   1e884:	cmp	r7, r0
   1e888:	beq	1e8e8 <main@@Base+0x8bac>
   1e88c:	sub	r0, fp, #56	; 0x38
   1e890:	ldr	r2, [sp, #36]	; 0x24
   1e894:	mov	r1, r7
   1e898:	add	r3, sp, #60	; 0x3c
   1e89c:	str	r0, [sp]
   1e8a0:	ldr	r0, [sp, #32]
   1e8a4:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1e8a8:	cmp	r0, r7
   1e8ac:	beq	1e8f0 <main@@Base+0x8bb4>
   1e8b0:	mov	r8, r0
   1e8b4:	ldr	r0, [sp, #60]	; 0x3c
   1e8b8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e8bc:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1e8c0:	cmp	r0, #0
   1e8c4:	beq	1e900 <main@@Base+0x8bc4>
   1e8c8:	subs	r0, r6, #1
   1e8cc:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1e8d0:	bcc	1e92c <main@@Base+0x8bf0>
   1e8d4:	ldr	r0, [sp, #32]
   1e8d8:	ldr	r2, [sp, #36]	; 0x24
   1e8dc:	mov	r1, r8
   1e8e0:	mov	r3, #8
   1e8e4:	b	1e918 <main@@Base+0x8bdc>
   1e8e8:	ldr	r8, [sp, #36]	; 0x24
   1e8ec:	b	1e924 <main@@Base+0x8be8>
   1e8f0:	mov	r6, #0
   1e8f4:	mov	r5, #0
   1e8f8:	mov	r8, r7
   1e8fc:	b	1e93c <main@@Base+0x8c00>
   1e900:	cmn	r5, #1
   1e904:	bgt	1e934 <main@@Base+0x8bf8>
   1e908:	ldr	r0, [sp, #32]
   1e90c:	ldr	r2, [sp, #36]	; 0x24
   1e910:	mov	r1, r8
   1e914:	mov	r3, #7
   1e918:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1e91c:	mov	r8, r0
   1e920:	mov	r6, #0
   1e924:	mov	r5, #0
   1e928:	b	1e93c <main@@Base+0x8c00>
   1e92c:	rsbs	r6, r6, #0
   1e930:	rsc	r5, r5, #0
   1e934:	str	r6, [sp, #48]	; 0x30
   1e938:	str	r5, [sp, #52]	; 0x34
   1e93c:	cmp	r7, r8
   1e940:	bne	1e980 <main@@Base+0x8c44>
   1e944:	add	r0, sp, #48	; 0x30
   1e948:	ldr	r2, [sp, #36]	; 0x24
   1e94c:	movw	r3, #33592	; 0x8338
   1e950:	mov	r1, r7
   1e954:	str	r0, [sp]
   1e958:	ldr	r0, [sp, #32]
   1e95c:	movt	r3, #5
   1e960:	bl	234e8 <main@@Base+0xd7ac>
   1e964:	cmp	r0, r7
   1e968:	mov	r8, r0
   1e96c:	ldrne	r0, [sp, #36]	; 0x24
   1e970:	cmpne	r8, r0
   1e974:	beq	1bf08 <main@@Base+0x61cc>
   1e978:	ldr	r6, [sp, #48]	; 0x30
   1e97c:	ldr	r5, [sp, #52]	; 0x34
   1e980:	orrs	r0, r6, r5
   1e984:	bne	1e998 <main@@Base+0x8c5c>
   1e988:	ldr	r0, [sp, #32]
   1e98c:	ldrb	r0, [r0, #8]
   1e990:	tst	r0, #2
   1e994:	beq	1ea30 <main@@Base+0x8cf4>
   1e998:	ldr	r0, [sp, #32]
   1e99c:	mov	r1, #1
   1e9a0:	mov	r2, #8
   1e9a4:	mov	r3, #8
   1e9a8:	ldr	r0, [r0]
   1e9ac:	bl	2ea78 <flatcc_builder_table_add@@Base>
   1e9b0:	cmp	r0, #0
   1e9b4:	beq	1bf08 <main@@Base+0x61cc>
   1e9b8:	str	r6, [r0]
   1e9bc:	str	r5, [r0, #4]
   1e9c0:	b	1ea30 <main@@Base+0x8cf4>
   1e9c4:	bne	1e9d4 <main@@Base+0x8c98>
   1e9c8:	ldrb	r0, [r1, #2]!
   1e9cc:	cmp	r0, #32
   1e9d0:	bhi	1e9e8 <main@@Base+0x8cac>
   1e9d4:	mov	r1, r2
   1e9d8:	ldr	r0, [sp, #32]
   1e9dc:	ldr	r2, [sp, #36]	; 0x24
   1e9e0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1e9e4:	mov	r1, r0
   1e9e8:	cmp	r9, r1
   1e9ec:	beq	1ea3c <main@@Base+0x8d00>
   1e9f0:	ldr	r0, [sp, #32]
   1e9f4:	ldr	r2, [sp, #36]	; 0x24
   1e9f8:	add	r3, sp, #56	; 0x38
   1e9fc:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   1ea00:	mov	r8, r0
   1ea04:	ldr	r0, [sp, #56]	; 0x38
   1ea08:	cmp	r0, #0
   1ea0c:	beq	1bf08 <main@@Base+0x61cc>
   1ea10:	ldr	r0, [sp, #32]
   1ea14:	mov	r1, #0
   1ea18:	ldr	r0, [r0]
   1ea1c:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   1ea20:	cmp	r0, #0
   1ea24:	beq	1bf08 <main@@Base+0x61cc>
   1ea28:	ldr	r1, [sp, #56]	; 0x38
   1ea2c:	str	r1, [r0]
   1ea30:	ldr	r4, [sp, #36]	; 0x24
   1ea34:	ldr	sl, [sp, #32]
   1ea38:	b	1ea58 <main@@Base+0x8d1c>
   1ea3c:	ldr	sl, [sp, #32]
   1ea40:	ldr	r4, [sp, #36]	; 0x24
   1ea44:	mov	r0, sl
   1ea48:	mov	r1, r9
   1ea4c:	mov	r2, r4
   1ea50:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   1ea54:	mov	r8, r0
   1ea58:	sub	r0, r4, r8
   1ea5c:	cmp	r0, #2
   1ea60:	blt	1ea8c <main@@Base+0x8d50>
   1ea64:	ldrb	r0, [r8]
   1ea68:	cmp	r0, #32
   1ea6c:	bls	1ea78 <main@@Base+0x8d3c>
   1ea70:	mov	r2, r8
   1ea74:	b	1eaa0 <main@@Base+0x8d64>
   1ea78:	bne	1ea8c <main@@Base+0x8d50>
   1ea7c:	mov	r2, r8
   1ea80:	ldrb	r0, [r2, #1]!
   1ea84:	cmp	r0, #32
   1ea88:	bhi	1eaa0 <main@@Base+0x8d64>
   1ea8c:	mov	r0, sl
   1ea90:	mov	r1, r8
   1ea94:	mov	r2, r4
   1ea98:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ea9c:	mov	r2, r0
   1eaa0:	cmp	r2, r4
   1eaa4:	beq	1f01c <main@@Base+0x92e0>
   1eaa8:	ldrb	r0, [r2]
   1eaac:	cmp	r0, #44	; 0x2c
   1eab0:	bne	1f024 <main@@Base+0x92e8>
   1eab4:	add	r1, r2, #1
   1eab8:	sub	r0, r4, r1
   1eabc:	cmp	r0, #2
   1eac0:	blt	1eae8 <main@@Base+0x8dac>
   1eac4:	ldrb	r0, [r1]
   1eac8:	cmp	r0, #32
   1eacc:	bls	1ead8 <main@@Base+0x8d9c>
   1ead0:	mov	r2, r1
   1ead4:	b	1eaf8 <main@@Base+0x8dbc>
   1ead8:	bne	1eae8 <main@@Base+0x8dac>
   1eadc:	ldrb	r0, [r2, #2]!
   1eae0:	cmp	r0, #32
   1eae4:	bhi	1eaf8 <main@@Base+0x8dbc>
   1eae8:	mov	r0, sl
   1eaec:	mov	r2, r4
   1eaf0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1eaf4:	mov	r2, r0
   1eaf8:	cmp	r2, r4
   1eafc:	beq	1f070 <main@@Base+0x9334>
   1eb00:	ldrb	r0, [r2]
   1eb04:	cmp	r0, #125	; 0x7d
   1eb08:	bne	1e364 <main@@Base+0x8628>
   1eb0c:	add	r1, r2, #1
   1eb10:	sub	r0, r4, r1
   1eb14:	b	1f038 <main@@Base+0x92fc>
   1eb18:	cmp	r0, #93	; 0x5d
   1eb1c:	bne	1efbc <main@@Base+0x9280>
   1eb20:	ldr	r6, [sp, #36]	; 0x24
   1eb24:	ldr	sl, [sp, #32]
   1eb28:	add	r1, r2, #1
   1eb2c:	sub	r0, r6, r1
   1eb30:	cmp	r0, #2
   1eb34:	blt	1f16c <main@@Base+0x9430>
   1eb38:	ldrb	r0, [r1]
   1eb3c:	cmp	r0, #32
   1eb40:	bls	1f150 <main@@Base+0x9414>
   1eb44:	ldr	r6, [sp, #36]	; 0x24
   1eb48:	ldr	sl, [sp, #32]
   1eb4c:	mov	r8, r1
   1eb50:	b	1c468 <main@@Base+0x672c>
   1eb54:	ldr	sl, [sp, #32]
   1eb58:	ldr	r6, [sp, #36]	; 0x24
   1eb5c:	mov	r1, r2
   1eb60:	mov	r0, sl
   1eb64:	mov	r2, r6
   1eb68:	mov	r3, #9
   1eb6c:	b	1ac70 <main@@Base+0x4f34>
   1eb70:	mov	r8, r6
   1eb74:	b	1f19c <main@@Base+0x9460>
   1eb78:	mov	r0, sl
   1eb7c:	mov	r1, r6
   1eb80:	b	1efcc <main@@Base+0x9290>
   1eb84:	cmp	r0, #93	; 0x5d
   1eb88:	bne	1f004 <main@@Base+0x92c8>
   1eb8c:	ldr	r0, [sp, #36]	; 0x24
   1eb90:	add	r1, r8, #1
   1eb94:	sub	r0, r0, r1
   1eb98:	b	1ebf8 <main@@Base+0x8ebc>
   1eb9c:	mov	r8, r6
   1eba0:	b	1b2a4 <main@@Base+0x5568>
   1eba4:	mov	r0, sl
   1eba8:	mov	r1, r6
   1ebac:	mov	r2, r6
   1ebb0:	b	1f010 <main@@Base+0x92d4>
   1ebb4:	cmp	r0, #125	; 0x7d
   1ebb8:	bne	1f054 <main@@Base+0x9318>
   1ebbc:	ldr	r6, [sp, #36]	; 0x24
   1ebc0:	ldr	sl, [sp, #32]
   1ebc4:	add	r1, r3, #1
   1ebc8:	sub	r0, r6, r1
   1ebcc:	cmp	r0, #2
   1ebd0:	blt	1f1c4 <main@@Base+0x9488>
   1ebd4:	ldrb	r0, [r1]
   1ebd8:	cmp	r0, #32
   1ebdc:	bls	1f1a8 <main@@Base+0x946c>
   1ebe0:	ldr	r6, [sp, #36]	; 0x24
   1ebe4:	ldr	sl, [sp, #32]
   1ebe8:	mov	r8, r1
   1ebec:	b	1b2a4 <main@@Base+0x5568>
   1ebf0:	add	r1, r8, #1
   1ebf4:	sub	r0, r6, r1
   1ebf8:	cmp	r0, #2
   1ebfc:	blt	1f18c <main@@Base+0x9450>
   1ec00:	ldrb	r0, [r1]
   1ec04:	cmp	r0, #32
   1ec08:	bls	1f17c <main@@Base+0x9440>
   1ec0c:	mov	r8, r1
   1ec10:	b	1f19c <main@@Base+0x9460>
   1ec14:	mov	r0, sl
   1ec18:	mov	r1, r6
   1ec1c:	b	1f064 <main@@Base+0x9328>
   1ec20:	bne	1ec30 <main@@Base+0x8ef4>
   1ec24:	ldrb	r0, [r8, #2]!
   1ec28:	cmp	r0, #32
   1ec2c:	bhi	1ec40 <main@@Base+0x8f04>
   1ec30:	ldr	r0, [sp, #32]
   1ec34:	ldr	r2, [sp, #36]	; 0x24
   1ec38:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ec3c:	mov	r8, r0
   1ec40:	ldr	r5, [sp, #36]	; 0x24
   1ec44:	cmp	r8, r5
   1ec48:	beq	1ec5c <main@@Base+0x8f20>
   1ec4c:	ldrb	r0, [r8]
   1ec50:	cmp	r0, #93	; 0x5d
   1ec54:	beq	1f090 <main@@Base+0x9354>
   1ec58:	mov	r5, r8
   1ec5c:	mov	r0, #0
   1ec60:	mov	r1, #1
   1ec64:	strb	r0, [sp, #60]	; 0x3c
   1ec68:	ldr	r0, [sp, #32]
   1ec6c:	ldr	r0, [r0]
   1ec70:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1ec74:	cmp	r0, #0
   1ec78:	beq	1f374 <main@@Base+0x9638>
   1ec7c:	mov	r7, r0
   1ec80:	mov	r8, r5
   1ec84:	ldr	r4, [sp, #36]	; 0x24
   1ec88:	mov	r5, #0
   1ec8c:	str	r5, [fp, #-52]	; 0xffffffcc
   1ec90:	str	r5, [fp, #-56]	; 0xffffffc8
   1ec94:	strb	r5, [sp, #60]	; 0x3c
   1ec98:	str	r5, [sp, #48]	; 0x30
   1ec9c:	cmp	r8, r4
   1eca0:	beq	1ece8 <main@@Base+0x8fac>
   1eca4:	sub	r0, fp, #56	; 0x38
   1eca8:	mov	r1, r8
   1ecac:	mov	r2, r4
   1ecb0:	add	r3, sp, #48	; 0x30
   1ecb4:	str	r0, [sp]
   1ecb8:	ldr	r0, [sp, #32]
   1ecbc:	bl	334d0 <flatcc_json_parser_integer@@Base>
   1ecc0:	cmp	r0, r8
   1ecc4:	beq	1ecf0 <main@@Base+0x8fb4>
   1ecc8:	mov	r1, r0
   1eccc:	ldr	r0, [sp, #48]	; 0x30
   1ecd0:	cmp	r0, #0
   1ecd4:	beq	1ecf8 <main@@Base+0x8fbc>
   1ecd8:	ldr	r6, [sp, #32]
   1ecdc:	ldr	r4, [sp, #36]	; 0x24
   1ece0:	mov	r3, #8
   1ece4:	b	1ed18 <main@@Base+0x8fdc>
   1ece8:	mov	r1, r4
   1ecec:	b	1ed38 <main@@Base+0x8ffc>
   1ecf0:	mov	r1, r8
   1ecf4:	b	1ed34 <main@@Base+0x8ff8>
   1ecf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ecfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ed00:	subs	r3, r0, #256	; 0x100
   1ed04:	sbcs	r2, r2, #0
   1ed08:	bcc	1ed2c <main@@Base+0x8ff0>
   1ed0c:	ldr	r6, [sp, #32]
   1ed10:	ldr	r4, [sp, #36]	; 0x24
   1ed14:	mov	r3, #7
   1ed18:	mov	r0, r6
   1ed1c:	mov	r2, r4
   1ed20:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1ed24:	mov	r1, r0
   1ed28:	b	1ed3c <main@@Base+0x9000>
   1ed2c:	mov	r5, r0
   1ed30:	strb	r0, [sp, #60]	; 0x3c
   1ed34:	ldr	r4, [sp, #36]	; 0x24
   1ed38:	ldr	r6, [sp, #32]
   1ed3c:	cmp	r8, r1
   1ed40:	bne	1ed84 <main@@Base+0x9048>
   1ed44:	movw	r3, #33124	; 0x8164
   1ed48:	add	r0, sp, #60	; 0x3c
   1ed4c:	mov	r1, r8
   1ed50:	mov	r2, r4
   1ed54:	str	r0, [sp]
   1ed58:	mov	r0, r6
   1ed5c:	movt	r3, #5
   1ed60:	bl	212ac <main@@Base+0xb570>
   1ed64:	cmp	r0, r8
   1ed68:	mov	r1, r0
   1ed6c:	ldrne	r0, [sp, #36]	; 0x24
   1ed70:	cmpne	r1, r0
   1ed74:	beq	1f36c <main@@Base+0x9630>
   1ed78:	ldrb	r5, [sp, #60]	; 0x3c
   1ed7c:	ldr	r4, [sp, #36]	; 0x24
   1ed80:	ldr	r6, [sp, #32]
   1ed84:	sub	r0, r4, r1
   1ed88:	strb	r5, [r7]
   1ed8c:	cmp	r0, #2
   1ed90:	blt	1edc8 <main@@Base+0x908c>
   1ed94:	ldrb	r0, [r1]
   1ed98:	cmp	r0, #32
   1ed9c:	bls	1edac <main@@Base+0x9070>
   1eda0:	ldr	r4, [sp, #36]	; 0x24
   1eda4:	mov	r8, r1
   1eda8:	b	1edd8 <main@@Base+0x909c>
   1edac:	ldr	r4, [sp, #36]	; 0x24
   1edb0:	ldr	r6, [sp, #32]
   1edb4:	bne	1edc8 <main@@Base+0x908c>
   1edb8:	mov	r8, r1
   1edbc:	ldrb	r0, [r8, #1]!
   1edc0:	cmp	r0, #32
   1edc4:	bhi	1edd8 <main@@Base+0x909c>
   1edc8:	mov	r0, r6
   1edcc:	mov	r2, r4
   1edd0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1edd4:	mov	r8, r0
   1edd8:	cmp	r8, r4
   1eddc:	beq	1f080 <main@@Base+0x9344>
   1ede0:	ldrb	r0, [r8]
   1ede4:	cmp	r0, #44	; 0x2c
   1ede8:	bne	1f088 <main@@Base+0x934c>
   1edec:	ldr	r4, [sp, #36]	; 0x24
   1edf0:	add	r1, r8, #1
   1edf4:	sub	r0, r4, r1
   1edf8:	cmp	r0, #2
   1edfc:	ldr	r0, [sp, #32]
   1ee00:	blt	1ee34 <main@@Base+0x90f8>
   1ee04:	ldrb	r0, [r1]
   1ee08:	cmp	r0, #32
   1ee0c:	bls	1ee1c <main@@Base+0x90e0>
   1ee10:	ldr	r4, [sp, #36]	; 0x24
   1ee14:	mov	r8, r1
   1ee18:	b	1ee40 <main@@Base+0x9104>
   1ee1c:	ldr	r4, [sp, #36]	; 0x24
   1ee20:	ldr	r0, [sp, #32]
   1ee24:	bne	1ee34 <main@@Base+0x90f8>
   1ee28:	ldrb	r2, [r8, #2]!
   1ee2c:	cmp	r2, #32
   1ee30:	bhi	1ee40 <main@@Base+0x9104>
   1ee34:	mov	r2, r4
   1ee38:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ee3c:	mov	r8, r0
   1ee40:	cmp	r8, r4
   1ee44:	beq	1f140 <main@@Base+0x9404>
   1ee48:	ldrb	r0, [r8]
   1ee4c:	cmp	r0, #93	; 0x5d
   1ee50:	beq	1f090 <main@@Base+0x9354>
   1ee54:	mov	r0, #0
   1ee58:	mov	r1, #1
   1ee5c:	strb	r0, [sp, #60]	; 0x3c
   1ee60:	ldr	r0, [sp, #32]
   1ee64:	ldr	r0, [r0]
   1ee68:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   1ee6c:	mov	r7, r0
   1ee70:	cmp	r0, #0
   1ee74:	bne	1ec84 <main@@Base+0x8f48>
   1ee78:	b	1f30c <main@@Base+0x95d0>
   1ee7c:	ldr	r6, [sp, #36]	; 0x24
   1ee80:	ldr	sl, [sp, #32]
   1ee84:	b	1ab2c <main@@Base+0x4df0>
   1ee88:	ldr	r6, [sp, #36]	; 0x24
   1ee8c:	ldr	sl, [sp, #32]
   1ee90:	bne	1eea4 <main@@Base+0x9168>
   1ee94:	ldrb	r0, [r2, #2]!
   1ee98:	cmp	r0, #32
   1ee9c:	mov	r8, r2
   1eea0:	bhi	1ac78 <main@@Base+0x4f3c>
   1eea4:	mov	r0, sl
   1eea8:	mov	r2, r6
   1eeac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1eeb0:	b	1ac74 <main@@Base+0x4f38>
   1eeb4:	ldr	sl, [sp, #32]
   1eeb8:	ldr	r6, [sp, #36]	; 0x24
   1eebc:	mov	r1, r2
   1eec0:	mov	r0, sl
   1eec4:	mov	r2, r6
   1eec8:	mov	r3, #9
   1eecc:	b	1b3fc <main@@Base+0x56c0>
   1eed0:	ldr	r0, [sp, #32]
   1eed4:	ldr	r2, [sp, #36]	; 0x24
   1eed8:	mov	r1, r8
   1eedc:	mov	r3, #9
   1eee0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1eee4:	b	1eff4 <main@@Base+0x92b8>
   1eee8:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1eeec:	str	r5, [sp, #60]	; 0x3c
   1eef0:	b	1e01c <main@@Base+0x82e0>
   1eef4:	mov	r8, r6
   1eef8:	b	1f220 <main@@Base+0x94e4>
   1eefc:	cmp	r0, #93	; 0x5d
   1ef00:	bne	1f1d4 <main@@Base+0x9498>
   1ef04:	ldr	r0, [sp, #36]	; 0x24
   1ef08:	add	r1, r8, #1
   1ef0c:	sub	r0, r0, r1
   1ef10:	b	1ef74 <main@@Base+0x9238>
   1ef14:	mov	r0, sl
   1ef18:	mov	r1, r6
   1ef1c:	mov	r2, r6
   1ef20:	b	1f1e0 <main@@Base+0x94a4>
   1ef24:	ldr	r6, [sp, #36]	; 0x24
   1ef28:	ldr	sl, [sp, #32]
   1ef2c:	bne	1ef40 <main@@Base+0x9204>
   1ef30:	ldrb	r0, [r8, #2]!
   1ef34:	cmp	r0, #32
   1ef38:	mov	r9, r8
   1ef3c:	bhi	1ad2c <main@@Base+0x4ff0>
   1ef40:	mov	r0, sl
   1ef44:	mov	r2, r6
   1ef48:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1ef4c:	b	1ad28 <main@@Base+0x4fec>
   1ef50:	ldr	sl, [sp, #32]
   1ef54:	ldr	r6, [sp, #36]	; 0x24
   1ef58:	mov	r1, r2
   1ef5c:	mov	r0, sl
   1ef60:	mov	r2, r6
   1ef64:	mov	r3, #10
   1ef68:	b	1ab14 <main@@Base+0x4dd8>
   1ef6c:	add	r1, r8, #1
   1ef70:	sub	r0, r6, r1
   1ef74:	cmp	r0, #2
   1ef78:	blt	1f210 <main@@Base+0x94d4>
   1ef7c:	ldrb	r0, [r1]
   1ef80:	cmp	r0, #32
   1ef84:	bls	1f200 <main@@Base+0x94c4>
   1ef88:	mov	r8, r1
   1ef8c:	b	1f220 <main@@Base+0x94e4>
   1ef90:	ldr	r6, [sp, #36]	; 0x24
   1ef94:	ldr	sl, [sp, #32]
   1ef98:	bne	1efac <main@@Base+0x9270>
   1ef9c:	ldrb	r0, [r2, #2]!
   1efa0:	cmp	r0, #32
   1efa4:	mov	r8, r2
   1efa8:	bhi	1b404 <main@@Base+0x56c8>
   1efac:	mov	r0, sl
   1efb0:	mov	r2, r6
   1efb4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1efb8:	b	1b400 <main@@Base+0x56c4>
   1efbc:	ldr	sl, [sp, #32]
   1efc0:	ldr	r6, [sp, #36]	; 0x24
   1efc4:	mov	r1, r2
   1efc8:	mov	r0, sl
   1efcc:	mov	r2, r6
   1efd0:	mov	r3, #9
   1efd4:	b	1c460 <main@@Base+0x6724>
   1efd8:	bne	1efe8 <main@@Base+0x92ac>
   1efdc:	ldrb	r0, [r8, #2]!
   1efe0:	cmp	r0, #32
   1efe4:	bhi	1eff8 <main@@Base+0x92bc>
   1efe8:	ldr	r0, [sp, #32]
   1efec:	ldr	r2, [sp, #36]	; 0x24
   1eff0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1eff4:	mov	r8, r0
   1eff8:	ldr	r6, [sp, #36]	; 0x24
   1effc:	ldr	sl, [sp, #32]
   1f000:	b	1c000 <main@@Base+0x62c4>
   1f004:	ldr	r0, [sp, #32]
   1f008:	ldr	r2, [sp, #36]	; 0x24
   1f00c:	mov	r1, r8
   1f010:	mov	r3, #9
   1f014:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1f018:	b	1f198 <main@@Base+0x945c>
   1f01c:	mov	r8, r4
   1f020:	b	1bef8 <main@@Base+0x61bc>
   1f024:	cmp	r0, #125	; 0x7d
   1f028:	bne	1f1ec <main@@Base+0x94b0>
   1f02c:	ldr	r0, [sp, #36]	; 0x24
   1f030:	add	r1, r2, #1
   1f034:	sub	r0, r0, r1
   1f038:	cmp	r0, #2
   1f03c:	blt	1f250 <main@@Base+0x9514>
   1f040:	ldrb	r0, [r1]
   1f044:	cmp	r0, #32
   1f048:	bls	1f23c <main@@Base+0x9500>
   1f04c:	mov	r8, r1
   1f050:	b	1bef8 <main@@Base+0x61bc>
   1f054:	ldr	sl, [sp, #32]
   1f058:	ldr	r6, [sp, #36]	; 0x24
   1f05c:	mov	r1, r3
   1f060:	mov	r0, sl
   1f064:	mov	r2, r6
   1f068:	mov	r3, #10
   1f06c:	b	1b29c <main@@Base+0x5560>
   1f070:	mov	r0, sl
   1f074:	mov	r1, r4
   1f078:	mov	r2, r4
   1f07c:	b	1f1f8 <main@@Base+0x94bc>
   1f080:	ldr	r8, [sp, #36]	; 0x24
   1f084:	b	1f0d8 <main@@Base+0x939c>
   1f088:	cmp	r0, #93	; 0x5d
   1f08c:	bne	1f228 <main@@Base+0x94ec>
   1f090:	ldr	r0, [sp, #36]	; 0x24
   1f094:	add	r1, r8, #1
   1f098:	sub	r0, r0, r1
   1f09c:	cmp	r0, #2
   1f0a0:	blt	1f0c8 <main@@Base+0x938c>
   1f0a4:	ldrb	r0, [r1]
   1f0a8:	cmp	r0, #32
   1f0ac:	bls	1f0b8 <main@@Base+0x937c>
   1f0b0:	mov	r8, r1
   1f0b4:	b	1f0d8 <main@@Base+0x939c>
   1f0b8:	bne	1f0c8 <main@@Base+0x938c>
   1f0bc:	ldrb	r0, [r8, #2]!
   1f0c0:	cmp	r0, #32
   1f0c4:	bhi	1f0d8 <main@@Base+0x939c>
   1f0c8:	ldr	r0, [sp, #32]
   1f0cc:	ldr	r2, [sp, #36]	; 0x24
   1f0d0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f0d4:	mov	r8, r0
   1f0d8:	ldr	sl, [sp, #32]
   1f0dc:	ldr	r0, [sl]
   1f0e0:	bl	2e448 <flatcc_builder_end_vector@@Base>
   1f0e4:	ldr	r6, [sp, #36]	; 0x24
   1f0e8:	cmp	r0, #0
   1f0ec:	str	r0, [sp, #44]	; 0x2c
   1f0f0:	beq	1662c <main@@Base+0x8f0>
   1f0f4:	ldr	r0, [sl]
   1f0f8:	mov	r1, #13
   1f0fc:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   1f100:	cmp	r0, #0
   1f104:	beq	1662c <main@@Base+0x8f0>
   1f108:	ldr	r1, [sp, #44]	; 0x2c
   1f10c:	mov	r9, r8
   1f110:	b	18f18 <main@@Base+0x31dc>
   1f114:	ldr	r6, [sp, #36]	; 0x24
   1f118:	ldr	sl, [sp, #32]
   1f11c:	bne	1f130 <main@@Base+0x93f4>
   1f120:	ldrb	r0, [r2, #2]!
   1f124:	cmp	r0, #32
   1f128:	mov	r8, r2
   1f12c:	bhi	1ab1c <main@@Base+0x4de0>
   1f130:	mov	r0, sl
   1f134:	mov	r2, r6
   1f138:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f13c:	b	1ab18 <main@@Base+0x4ddc>
   1f140:	ldr	r1, [sp, #36]	; 0x24
   1f144:	ldr	r0, [sp, #32]
   1f148:	mov	r2, r1
   1f14c:	b	1f234 <main@@Base+0x94f8>
   1f150:	ldr	r6, [sp, #36]	; 0x24
   1f154:	ldr	sl, [sp, #32]
   1f158:	bne	1f16c <main@@Base+0x9430>
   1f15c:	ldrb	r0, [r2, #2]!
   1f160:	cmp	r0, #32
   1f164:	mov	r8, r2
   1f168:	bhi	1c468 <main@@Base+0x672c>
   1f16c:	mov	r0, sl
   1f170:	mov	r2, r6
   1f174:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f178:	b	1c464 <main@@Base+0x6728>
   1f17c:	bne	1f18c <main@@Base+0x9450>
   1f180:	ldrb	r0, [r8, #2]!
   1f184:	cmp	r0, #32
   1f188:	bhi	1f19c <main@@Base+0x9460>
   1f18c:	ldr	r0, [sp, #32]
   1f190:	ldr	r2, [sp, #36]	; 0x24
   1f194:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f198:	mov	r8, r0
   1f19c:	ldr	r6, [sp, #36]	; 0x24
   1f1a0:	ldr	sl, [sp, #32]
   1f1a4:	b	1c8c4 <main@@Base+0x6b88>
   1f1a8:	ldr	r6, [sp, #36]	; 0x24
   1f1ac:	ldr	sl, [sp, #32]
   1f1b0:	bne	1f1c4 <main@@Base+0x9488>
   1f1b4:	ldrb	r0, [r3, #2]!
   1f1b8:	cmp	r0, #32
   1f1bc:	mov	r8, r3
   1f1c0:	bhi	1b2a4 <main@@Base+0x5568>
   1f1c4:	mov	r0, sl
   1f1c8:	mov	r2, r6
   1f1cc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f1d0:	b	1b2a0 <main@@Base+0x5564>
   1f1d4:	ldr	r0, [sp, #32]
   1f1d8:	ldr	r2, [sp, #36]	; 0x24
   1f1dc:	mov	r1, r8
   1f1e0:	mov	r3, #9
   1f1e4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1f1e8:	b	1f21c <main@@Base+0x94e0>
   1f1ec:	mov	r1, r2
   1f1f0:	ldr	r0, [sp, #32]
   1f1f4:	ldr	r2, [sp, #36]	; 0x24
   1f1f8:	mov	r3, #10
   1f1fc:	b	1bef0 <main@@Base+0x61b4>
   1f200:	bne	1f210 <main@@Base+0x94d4>
   1f204:	ldrb	r0, [r8, #2]!
   1f208:	cmp	r0, #32
   1f20c:	bhi	1f220 <main@@Base+0x94e4>
   1f210:	ldr	r0, [sp, #32]
   1f214:	ldr	r2, [sp, #36]	; 0x24
   1f218:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f21c:	mov	r8, r0
   1f220:	ldr	sl, [sp, #32]
   1f224:	b	1d5b4 <main@@Base+0x7878>
   1f228:	ldr	r0, [sp, #32]
   1f22c:	ldr	r2, [sp, #36]	; 0x24
   1f230:	mov	r1, r8
   1f234:	mov	r3, #9
   1f238:	b	1c9d4 <main@@Base+0x6c98>
   1f23c:	bne	1f250 <main@@Base+0x9514>
   1f240:	ldrb	r0, [r2, #2]!
   1f244:	cmp	r0, #32
   1f248:	mov	r8, r2
   1f24c:	bhi	1bef8 <main@@Base+0x61bc>
   1f250:	ldr	r0, [sp, #32]
   1f254:	ldr	r2, [sp, #36]	; 0x24
   1f258:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f25c:	b	1bef4 <main@@Base+0x61b8>
   1f260:	ldr	r4, [sp, #28]
   1f264:	mov	r8, r6
   1f268:	b	1f300 <main@@Base+0x95c4>
   1f26c:	cmp	r0, #125	; 0x7d
   1f270:	bne	1f2e8 <main@@Base+0x95ac>
   1f274:	add	r8, r2, #1
   1f278:	sub	r0, r6, r8
   1f27c:	cmp	r0, #2
   1f280:	blt	1f2a8 <main@@Base+0x956c>
   1f284:	ldrb	r0, [r8]
   1f288:	cmp	r0, #32
   1f28c:	bhi	1f300 <main@@Base+0x95c4>
   1f290:	bne	1f2a8 <main@@Base+0x956c>
   1f294:	ldrb	r0, [r2, #2]!
   1f298:	cmp	r0, #32
   1f29c:	bls	1f2a8 <main@@Base+0x956c>
   1f2a0:	mov	r8, r2
   1f2a4:	b	1f300 <main@@Base+0x95c4>
   1f2a8:	mov	r0, sl
   1f2ac:	mov	r1, r8
   1f2b0:	mov	r2, r6
   1f2b4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f2b8:	b	1f2fc <main@@Base+0x95c0>
   1f2bc:	mov	r0, sl
   1f2c0:	mov	r1, r6
   1f2c4:	b	1f2f0 <main@@Base+0x95b4>
   1f2c8:	bne	1f2d8 <main@@Base+0x959c>
   1f2cc:	ldrb	r0, [r8, #2]!
   1f2d0:	cmp	r0, #32
   1f2d4:	bhi	166cc <main@@Base+0x990>
   1f2d8:	mov	r0, sl
   1f2dc:	mov	r2, r6
   1f2e0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   1f2e4:	b	166c8 <main@@Base+0x98c>
   1f2e8:	mov	r0, sl
   1f2ec:	mov	r1, r2
   1f2f0:	mov	r2, r6
   1f2f4:	mov	r3, #10
   1f2f8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   1f2fc:	mov	r8, r0
   1f300:	ldr	r0, [sp, #24]
   1f304:	b	166d0 <main@@Base+0x994>
   1f308:	mov	r8, r9
   1f30c:	ldr	r6, [sp, #36]	; 0x24
   1f310:	ldr	sl, [sp, #32]
   1f314:	b	1662c <main@@Base+0x8f0>
   1f318:	mov	r8, r1
   1f31c:	b	1662c <main@@Base+0x8f0>
   1f320:	mov	r8, r9
   1f324:	b	1f310 <main@@Base+0x95d4>
   1f328:	mov	r9, r1
   1f32c:	b	1f334 <main@@Base+0x95f8>
   1f330:	mov	r9, r5
   1f334:	mov	r8, r9
   1f338:	b	1662c <main@@Base+0x8f0>
   1f33c:	ldr	r6, [sp, #36]	; 0x24
   1f340:	b	1662c <main@@Base+0x8f0>
   1f344:	mov	r8, r5
   1f348:	b	1662c <main@@Base+0x8f0>
   1f34c:	mov	r8, r6
   1f350:	b	1f30c <main@@Base+0x95d0>
   1f354:	mov	r8, r1
   1f358:	b	1f310 <main@@Base+0x95d4>
   1f35c:	ldr	r6, [sp, #36]	; 0x24
   1f360:	ldr	sl, [sp, #32]
   1f364:	mov	r8, r7
   1f368:	b	1662c <main@@Base+0x8f0>
   1f36c:	mov	r8, r1
   1f370:	b	1f30c <main@@Base+0x95d0>
   1f374:	mov	r8, r5
   1f378:	b	1f30c <main@@Base+0x95d0>
   1f37c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f380:	add	fp, sp, #28
   1f384:	sub	sp, sp, #20
   1f388:	mov	r5, r0
   1f38c:	movw	r0, #43876	; 0xab64
   1f390:	movw	r3, #15823	; 0x3dcf
   1f394:	mov	r4, r1
   1f398:	mov	r1, #3
   1f39c:	mov	r2, #0
   1f3a0:	mov	r8, #0
   1f3a4:	movt	r0, #2
   1f3a8:	str	r1, [sp]
   1f3ac:	movt	r3, #4
   1f3b0:	mov	r1, r4
   1f3b4:	str	r0, [sp, #4]
   1f3b8:	mov	r0, r5
   1f3bc:	bl	3f808 <flatcc_json_printer_struct_field@@Base>
   1f3c0:	movw	r3, #15827	; 0x3dd3
   1f3c4:	mov	r0, #150	; 0x96
   1f3c8:	mov	r1, #4
   1f3cc:	mov	r2, #1
   1f3d0:	mov	r6, #4
   1f3d4:	str	r1, [sp]
   1f3d8:	str	r0, [sp, #4]
   1f3dc:	movt	r3, #4
   1f3e0:	mov	r0, r5
   1f3e4:	mov	r1, r4
   1f3e8:	bl	37220 <flatcc_json_printer_int16_field@@Base>
   1f3ec:	movw	r3, #15832	; 0x3dd8
   1f3f0:	mov	r0, #100	; 0x64
   1f3f4:	mov	r1, #2
   1f3f8:	mov	r2, #2
   1f3fc:	str	r1, [sp]
   1f400:	str	r0, [sp, #4]
   1f404:	movt	r3, #4
   1f408:	mov	r0, r5
   1f40c:	mov	r1, r4
   1f410:	bl	37220 <flatcc_json_printer_int16_field@@Base>
   1f414:	movw	r3, #15835	; 0x3ddb
   1f418:	mov	r0, r5
   1f41c:	mov	r1, r4
   1f420:	mov	r2, #3
   1f424:	str	r6, [sp]
   1f428:	movt	r3, #4
   1f42c:	bl	369b0 <flatcc_json_printer_string_field@@Base>
   1f430:	movw	r3, #15840	; 0x3de0
   1f434:	mov	r0, #9
   1f438:	mov	r1, r4
   1f43c:	mov	r2, #5
   1f440:	mov	r7, #5
   1f444:	str	r0, [sp]
   1f448:	movt	r3, #4
   1f44c:	mov	r0, r5
   1f450:	bl	38d9c <flatcc_json_printer_uint8_vector_field@@Base>
   1f454:	movw	r0, #44128	; 0xac60
   1f458:	movw	r3, #15850	; 0x3dea
   1f45c:	mov	r1, #8
   1f460:	mov	r2, #6
   1f464:	str	r7, [sp]
   1f468:	mov	r7, #5
   1f46c:	movt	r0, #2
   1f470:	str	r1, [sp, #4]
   1f474:	movt	r3, #4
   1f478:	mov	r1, r4
   1f47c:	str	r0, [sp, #8]
   1f480:	mov	r0, r5
   1f484:	bl	37b14 <flatcc_json_printer_int8_enum_field@@Base>
   1f488:	movw	r0, #44440	; 0xad98
   1f48c:	movw	r1, #44324	; 0xad24
   1f490:	movw	r3, #16226	; 0x3f62
   1f494:	mov	r2, #8
   1f498:	str	r6, [sp]
   1f49c:	movt	r0, #2
   1f4a0:	movt	r1, #2
   1f4a4:	movt	r3, #4
   1f4a8:	str	r1, [sp, #4]
   1f4ac:	str	r0, [sp, #8]
   1f4b0:	mov	r0, r5
   1f4b4:	mov	r1, r4
   1f4b8:	bl	3eff0 <flatcc_json_printer_union_field@@Base>
   1f4bc:	movw	r0, #44528	; 0xadf0
   1f4c0:	movw	r3, #15856	; 0x3df0
   1f4c4:	mov	r1, r4
   1f4c8:	mov	r2, #9
   1f4cc:	str	r7, [sp]
   1f4d0:	mov	sl, #5
   1f4d4:	str	r6, [sp, #4]
   1f4d8:	movt	r0, #2
   1f4dc:	movt	r3, #4
   1f4e0:	str	r0, [sp, #8]
   1f4e4:	mov	r0, r5
   1f4e8:	bl	3dc98 <flatcc_json_printer_struct_vector_field@@Base>
   1f4ec:	movw	r3, #15862	; 0x3df6
   1f4f0:	mov	r7, #17
   1f4f4:	mov	r0, r5
   1f4f8:	mov	r1, r4
   1f4fc:	mov	r2, #10
   1f500:	movt	r3, #4
   1f504:	str	r7, [sp]
   1f508:	bl	3e22c <flatcc_json_printer_string_vector_field@@Base>
   1f50c:	movw	r9, #62332	; 0xf37c
   1f510:	movw	r3, #15880	; 0x3e08
   1f514:	mov	r0, r5
   1f518:	mov	r1, r4
   1f51c:	mov	r2, #11
   1f520:	movt	r9, #1
   1f524:	movt	r3, #4
   1f528:	stm	sp, {r7, r9}
   1f52c:	bl	3e5dc <flatcc_json_printer_table_vector_field@@Base>
   1f530:	movw	r3, #15898	; 0x3e1a
   1f534:	mov	r0, r5
   1f538:	mov	r1, r4
   1f53c:	mov	r2, #12
   1f540:	str	sl, [sp]
   1f544:	mov	sl, #5
   1f548:	str	r9, [sp, #4]
   1f54c:	movt	r3, #4
   1f550:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   1f554:	movw	r3, #15904	; 0x3e20
   1f558:	mov	r0, #20
   1f55c:	mov	r1, r4
   1f560:	mov	r2, #13
   1f564:	stm	sp, {r0, r8, r9}
   1f568:	movt	r3, #4
   1f56c:	mov	r0, r5
   1f570:	bl	3ff38 <flatcc_json_printer_table_as_nested_root@@Base>
   1f574:	movw	r0, #44624	; 0xae50
   1f578:	movw	r3, #15925	; 0x3e35
   1f57c:	mov	r1, #9
   1f580:	mov	r2, #14
   1f584:	movt	r0, #2
   1f588:	str	r1, [sp]
   1f58c:	movt	r3, #4
   1f590:	mov	r1, r4
   1f594:	str	r0, [sp, #4]
   1f598:	mov	r0, r5
   1f59c:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   1f5a0:	movw	r3, #15935	; 0x3e3f
   1f5a4:	mov	r0, #1
   1f5a8:	mov	r9, #8
   1f5ac:	mov	r1, r4
   1f5b0:	mov	r2, #15
   1f5b4:	str	r0, [sp, #4]
   1f5b8:	movt	r3, #4
   1f5bc:	mov	r0, r5
   1f5c0:	str	r9, [sp]
   1f5c4:	bl	374d0 <flatcc_json_printer_bool_field@@Base>
   1f5c8:	movw	r3, #15944	; 0x3e48
   1f5cc:	mov	r6, #16
   1f5d0:	mov	r0, r5
   1f5d4:	mov	r1, r4
   1f5d8:	mov	r2, #16
   1f5dc:	movt	r3, #4
   1f5e0:	stm	sp, {r6, r8}
   1f5e4:	bl	37300 <flatcc_json_printer_int32_field@@Base>
   1f5e8:	movw	r3, #15961	; 0x3e59
   1f5ec:	mov	r0, r5
   1f5f0:	mov	r1, r4
   1f5f4:	mov	r2, #17
   1f5f8:	stm	sp, {r6, r8}
   1f5fc:	movt	r3, #4
   1f600:	bl	36fa4 <flatcc_json_printer_uint32_field@@Base>
   1f604:	movw	r3, #15978	; 0x3e6a
   1f608:	mov	r0, r5
   1f60c:	mov	r1, r4
   1f610:	mov	r2, #18
   1f614:	str	r8, [sp, #8]
   1f618:	str	r8, [sp, #12]
   1f61c:	str	r6, [sp]
   1f620:	movt	r3, #4
   1f624:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   1f628:	movw	r3, #15995	; 0x3e7b
   1f62c:	mov	r0, r5
   1f630:	mov	r1, r4
   1f634:	mov	r2, #19
   1f638:	str	r8, [sp, #8]
   1f63c:	str	r8, [sp, #12]
   1f640:	str	r6, [sp]
   1f644:	movt	r3, #4
   1f648:	bl	37064 <flatcc_json_printer_uint64_field@@Base>
   1f64c:	movw	r3, #16012	; 0x3e8c
   1f650:	mov	r0, r5
   1f654:	mov	r1, r4
   1f658:	mov	r2, #20
   1f65c:	stm	sp, {r7, r8}
   1f660:	movt	r3, #4
   1f664:	bl	37300 <flatcc_json_printer_int32_field@@Base>
   1f668:	movw	r3, #16030	; 0x3e9e
   1f66c:	mov	r0, r5
   1f670:	mov	r1, r4
   1f674:	mov	r2, #21
   1f678:	stm	sp, {r7, r8}
   1f67c:	movt	r3, #4
   1f680:	bl	36fa4 <flatcc_json_printer_uint32_field@@Base>
   1f684:	movw	r3, #16048	; 0x3eb0
   1f688:	mov	r0, r5
   1f68c:	mov	r1, r4
   1f690:	mov	r2, #22
   1f694:	str	r8, [sp, #8]
   1f698:	str	r8, [sp, #12]
   1f69c:	str	r7, [sp]
   1f6a0:	movt	r3, #4
   1f6a4:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   1f6a8:	movw	r3, #16066	; 0x3ec2
   1f6ac:	mov	r0, r5
   1f6b0:	mov	r1, r4
   1f6b4:	mov	r2, #23
   1f6b8:	str	r8, [sp, #8]
   1f6bc:	str	r8, [sp, #12]
   1f6c0:	str	r7, [sp]
   1f6c4:	mov	r8, #23
   1f6c8:	movt	r3, #4
   1f6cc:	bl	37064 <flatcc_json_printer_uint64_field@@Base>
   1f6d0:	movw	r3, #16084	; 0x3ed4
   1f6d4:	mov	r0, r5
   1f6d8:	mov	r1, r4
   1f6dc:	mov	r2, #24
   1f6e0:	str	r6, [sp]
   1f6e4:	movt	r3, #4
   1f6e8:	bl	3ac00 <flatcc_json_printer_bool_vector_field@@Base>
   1f6ec:	vldr	s0, [pc, #396]	; 1f880 <main@@Base+0x9b44>
   1f6f0:	movw	r3, #16101	; 0x3ee5
   1f6f4:	mov	r0, r5
   1f6f8:	mov	r1, r4
   1f6fc:	mov	r2, #25
   1f700:	str	sl, [sp]
   1f704:	movt	r3, #4
   1f708:	bl	375c4 <flatcc_json_printer_float_field@@Base>
   1f70c:	movw	r3, #16107	; 0x3eeb
   1f710:	mov	r6, #6
   1f714:	vmov.f32	s0, #8	; 0x40400000  3.0
   1f718:	mov	r0, r5
   1f71c:	mov	r1, r4
   1f720:	mov	r2, #26
   1f724:	movt	r3, #4
   1f728:	str	r6, [sp]
   1f72c:	bl	375c4 <flatcc_json_printer_float_field@@Base>
   1f730:	vldr	s0, [pc, #332]	; 1f884 <main@@Base+0x9b48>
   1f734:	movw	r3, #16114	; 0x3ef2
   1f738:	mov	r0, r5
   1f73c:	mov	r1, r4
   1f740:	mov	r2, #27
   1f744:	str	r6, [sp]
   1f748:	movt	r3, #4
   1f74c:	bl	375c4 <flatcc_json_printer_float_field@@Base>
   1f750:	movw	r3, #16121	; 0x3ef9
   1f754:	mov	r0, #18
   1f758:	mov	r1, r4
   1f75c:	mov	r2, #28
   1f760:	str	r0, [sp]
   1f764:	movt	r3, #4
   1f768:	mov	r0, r5
   1f76c:	bl	3e22c <flatcc_json_printer_string_vector_field@@Base>
   1f770:	movw	r0, #44756	; 0xaed4
   1f774:	movw	r3, #16140	; 0x3f0c
   1f778:	stm	sp, {r8, r9}
   1f77c:	mov	r1, r4
   1f780:	mov	r2, #29
   1f784:	movt	r0, #2
   1f788:	movt	r3, #4
   1f78c:	str	r0, [sp, #8]
   1f790:	mov	r0, r5
   1f794:	bl	3dc98 <flatcc_json_printer_struct_vector_field@@Base>
   1f798:	movw	r3, #16164	; 0x3f24
   1f79c:	mov	r6, #4
   1f7a0:	mov	r0, r5
   1f7a4:	mov	r1, r4
   1f7a8:	mov	r2, #30
   1f7ac:	movt	r3, #4
   1f7b0:	str	r6, [sp]
   1f7b4:	bl	38d9c <flatcc_json_printer_uint8_vector_field@@Base>
   1f7b8:	movw	r0, #44528	; 0xadf0
   1f7bc:	movw	r3, #16169	; 0x3f29
   1f7c0:	mov	r1, r4
   1f7c4:	mov	r2, #31
   1f7c8:	str	sl, [sp]
   1f7cc:	str	r6, [sp, #4]
   1f7d0:	movt	r0, #2
   1f7d4:	movt	r3, #4
   1f7d8:	str	r0, [sp, #8]
   1f7dc:	mov	r0, r5
   1f7e0:	bl	3dc98 <flatcc_json_printer_struct_vector_field@@Base>
   1f7e4:	movw	r3, #16175	; 0x3f2f
   1f7e8:	mov	r0, #15
   1f7ec:	mov	r1, r4
   1f7f0:	mov	r2, #32
   1f7f4:	str	r0, [sp]
   1f7f8:	movt	r3, #4
   1f7fc:	mov	r0, r5
   1f800:	bl	3a810 <flatcc_json_printer_int64_vector_field@@Base>
   1f804:	movw	r3, #16191	; 0x3f3f
   1f808:	mov	r0, r5
   1f80c:	mov	r1, r4
   1f810:	mov	r2, #33	; 0x21
   1f814:	str	r7, [sp]
   1f818:	movt	r3, #4
   1f81c:	bl	3b3d8 <flatcc_json_printer_double_vector_field@@Base>
   1f820:	movw	r0, #44864	; 0xaf40
   1f824:	movw	r3, #16209	; 0x3f51
   1f828:	mov	r1, #21
   1f82c:	mov	r2, #34	; 0x22
   1f830:	movt	r0, #2
   1f834:	str	r1, [sp]
   1f838:	movt	r3, #4
   1f83c:	mov	r1, r4
   1f840:	str	r0, [sp, #4]
   1f844:	mov	r0, r5
   1f848:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   1f84c:	movw	r0, #44868	; 0xaf44
   1f850:	movw	r3, #16231	; 0x3f67
   1f854:	mov	r1, #10
   1f858:	mov	r2, #35	; 0x23
   1f85c:	movt	r0, #2
   1f860:	str	r1, [sp]
   1f864:	movt	r3, #4
   1f868:	mov	r1, r4
   1f86c:	str	r0, [sp, #4]
   1f870:	mov	r0, r5
   1f874:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   1f878:	sub	sp, fp, #28
   1f87c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f880:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1f884:	andeq	r0, r0, r0
   1f888:	push	{r4, r5, r6, r7, fp, lr}
   1f88c:	add	fp, sp, #16
   1f890:	sub	sp, sp, #8
   1f894:	mov	r1, #0
   1f898:	mov	r2, #32
   1f89c:	mov	r3, #16
   1f8a0:	mov	r4, r0
   1f8a4:	bl	2ff4c <flatcc_verify_field@@Base>
   1f8a8:	cmp	r0, #0
   1f8ac:	bne	1fcb4 <main@@Base+0x9f78>
   1f8b0:	mov	r0, r4
   1f8b4:	mov	r1, #2
   1f8b8:	mov	r2, #2
   1f8bc:	mov	r3, #2
   1f8c0:	bl	2ff4c <flatcc_verify_field@@Base>
   1f8c4:	cmp	r0, #0
   1f8c8:	bne	1fcb4 <main@@Base+0x9f78>
   1f8cc:	mov	r0, r4
   1f8d0:	mov	r1, #1
   1f8d4:	mov	r2, #2
   1f8d8:	mov	r3, #2
   1f8dc:	bl	2ff4c <flatcc_verify_field@@Base>
   1f8e0:	cmp	r0, #0
   1f8e4:	bne	1fcb4 <main@@Base+0x9f78>
   1f8e8:	mov	r0, r4
   1f8ec:	mov	r1, #3
   1f8f0:	mov	r2, #1
   1f8f4:	bl	2ffc4 <flatcc_verify_string_field@@Base>
   1f8f8:	cmp	r0, #0
   1f8fc:	bne	1fcb4 <main@@Base+0x9f78>
   1f900:	mov	r0, r4
   1f904:	mov	r1, #6
   1f908:	mov	r2, #1
   1f90c:	mov	r3, #1
   1f910:	mov	r5, #1
   1f914:	bl	2ff4c <flatcc_verify_field@@Base>
   1f918:	cmp	r0, #0
   1f91c:	bne	1fcb4 <main@@Base+0x9f78>
   1f920:	mvn	r0, #0
   1f924:	mov	r1, #5
   1f928:	mov	r2, #0
   1f92c:	mov	r3, #1
   1f930:	str	r5, [sp]
   1f934:	str	r0, [sp, #4]
   1f938:	mov	r0, r4
   1f93c:	bl	300cc <flatcc_verify_vector_field@@Base>
   1f940:	cmp	r0, #0
   1f944:	bne	1fcb4 <main@@Base+0x9f78>
   1f948:	movw	r3, #63624	; 0xf888
   1f94c:	mov	r0, r4
   1f950:	mov	r1, #11
   1f954:	mov	r2, #0
   1f958:	movt	r3, #1
   1f95c:	bl	303c0 <flatcc_verify_table_vector_field@@Base>
   1f960:	cmp	r0, #0
   1f964:	bne	1fcb4 <main@@Base+0x9f78>
   1f968:	mov	r0, r4
   1f96c:	mov	r1, #10
   1f970:	mov	r2, #0
   1f974:	bl	30174 <flatcc_verify_string_vector_field@@Base>
   1f978:	cmp	r0, #0
   1f97c:	bne	1fcb4 <main@@Base+0x9f78>
   1f980:	mov	r0, r4
   1f984:	mov	r1, #28
   1f988:	mov	r2, #0
   1f98c:	bl	30174 <flatcc_verify_string_vector_field@@Base>
   1f990:	cmp	r0, #0
   1f994:	bne	1fcb4 <main@@Base+0x9f78>
   1f998:	mvn	r0, #0
   1f99c:	mov	r1, #1
   1f9a0:	mov	r2, #0
   1f9a4:	mov	r3, #1
   1f9a8:	str	r1, [sp]
   1f9ac:	str	r0, [sp, #4]
   1f9b0:	mov	r0, r4
   1f9b4:	mov	r1, #24
   1f9b8:	bl	300cc <flatcc_verify_vector_field@@Base>
   1f9bc:	cmp	r0, #0
   1f9c0:	bne	1fcb4 <main@@Base+0x9f78>
   1f9c4:	mvn	r0, #-536870912	; 0xe0000000
   1f9c8:	mov	r1, #4
   1f9cc:	mov	r2, #0
   1f9d0:	mov	r3, #8
   1f9d4:	str	r1, [sp]
   1f9d8:	str	r0, [sp, #4]
   1f9dc:	mov	r0, r4
   1f9e0:	mov	r1, #29
   1f9e4:	bl	300cc <flatcc_verify_vector_field@@Base>
   1f9e8:	cmp	r0, #0
   1f9ec:	bne	1fcb4 <main@@Base+0x9f78>
   1f9f0:	movw	r5, #63624	; 0xf888
   1f9f4:	mov	r0, r4
   1f9f8:	mov	r1, #12
   1f9fc:	mov	r2, #0
   1fa00:	movt	r5, #1
   1fa04:	mov	r3, r5
   1fa08:	bl	302bc <flatcc_verify_table_field@@Base>
   1fa0c:	cmp	r0, #0
   1fa10:	bne	1fcb4 <main@@Base+0x9f78>
   1fa14:	movw	r3, #46708	; 0xb674
   1fa18:	mov	r0, r4
   1fa1c:	mov	r1, #8
   1fa20:	mov	r2, #0
   1fa24:	movt	r3, #2
   1fa28:	bl	30e38 <flatcc_verify_union_field@@Base>
   1fa2c:	cmp	r0, #0
   1fa30:	bne	1fcb4 <main@@Base+0x9f78>
   1fa34:	mvn	r6, #-1073741824	; 0xc0000000
   1fa38:	mov	r7, #2
   1fa3c:	mov	r0, r4
   1fa40:	mov	r1, #9
   1fa44:	mov	r2, #0
   1fa48:	mov	r3, #4
   1fa4c:	str	r7, [sp]
   1fa50:	str	r6, [sp, #4]
   1fa54:	bl	300cc <flatcc_verify_vector_field@@Base>
   1fa58:	cmp	r0, #0
   1fa5c:	bne	1fcb4 <main@@Base+0x9f78>
   1fa60:	mov	r0, r4
   1fa64:	mov	r1, #31
   1fa68:	mov	r2, #0
   1fa6c:	mov	r3, #4
   1fa70:	str	r7, [sp]
   1fa74:	str	r6, [sp, #4]
   1fa78:	bl	300cc <flatcc_verify_vector_field@@Base>
   1fa7c:	cmp	r0, #0
   1fa80:	bne	1fcb4 <main@@Base+0x9f78>
   1fa84:	mov	r0, #1
   1fa88:	mov	r1, #13
   1fa8c:	mov	r2, #0
   1fa90:	mov	r3, #0
   1fa94:	stm	sp, {r0, r5}
   1fa98:	mov	r0, r4
   1fa9c:	bl	30c88 <flatcc_verify_table_as_nested_root@@Base>
   1faa0:	cmp	r0, #0
   1faa4:	bne	1fcb4 <main@@Base+0x9f78>
   1faa8:	movw	r3, #46752	; 0xb6a0
   1faac:	mov	r0, r4
   1fab0:	mov	r1, #14
   1fab4:	mov	r2, #0
   1fab8:	movt	r3, #2
   1fabc:	bl	302bc <flatcc_verify_table_field@@Base>
   1fac0:	cmp	r0, #0
   1fac4:	bne	1fcb4 <main@@Base+0x9f78>
   1fac8:	mov	r0, r4
   1facc:	mov	r1, #15
   1fad0:	mov	r2, #1
   1fad4:	mov	r3, #1
   1fad8:	bl	2ff4c <flatcc_verify_field@@Base>
   1fadc:	cmp	r0, #0
   1fae0:	bne	1fcb4 <main@@Base+0x9f78>
   1fae4:	mov	r0, r4
   1fae8:	mov	r1, #16
   1faec:	mov	r2, #4
   1faf0:	mov	r3, #4
   1faf4:	bl	2ff4c <flatcc_verify_field@@Base>
   1faf8:	cmp	r0, #0
   1fafc:	bne	1fcb4 <main@@Base+0x9f78>
   1fb00:	mov	r0, r4
   1fb04:	mov	r1, #17
   1fb08:	mov	r2, #4
   1fb0c:	mov	r3, #4
   1fb10:	bl	2ff4c <flatcc_verify_field@@Base>
   1fb14:	cmp	r0, #0
   1fb18:	bne	1fcb4 <main@@Base+0x9f78>
   1fb1c:	mov	r0, r4
   1fb20:	mov	r1, #18
   1fb24:	mov	r2, #8
   1fb28:	mov	r3, #8
   1fb2c:	bl	2ff4c <flatcc_verify_field@@Base>
   1fb30:	cmp	r0, #0
   1fb34:	bne	1fcb4 <main@@Base+0x9f78>
   1fb38:	mov	r0, r4
   1fb3c:	mov	r1, #19
   1fb40:	mov	r2, #8
   1fb44:	mov	r3, #8
   1fb48:	bl	2ff4c <flatcc_verify_field@@Base>
   1fb4c:	cmp	r0, #0
   1fb50:	bne	1fcb4 <main@@Base+0x9f78>
   1fb54:	mov	r0, r4
   1fb58:	mov	r1, #20
   1fb5c:	mov	r2, #4
   1fb60:	mov	r3, #4
   1fb64:	bl	2ff4c <flatcc_verify_field@@Base>
   1fb68:	cmp	r0, #0
   1fb6c:	bne	1fcb4 <main@@Base+0x9f78>
   1fb70:	mov	r0, r4
   1fb74:	mov	r1, #21
   1fb78:	mov	r2, #4
   1fb7c:	mov	r3, #4
   1fb80:	bl	2ff4c <flatcc_verify_field@@Base>
   1fb84:	cmp	r0, #0
   1fb88:	bne	1fcb4 <main@@Base+0x9f78>
   1fb8c:	mov	r0, r4
   1fb90:	mov	r1, #22
   1fb94:	mov	r2, #8
   1fb98:	mov	r3, #8
   1fb9c:	bl	2ff4c <flatcc_verify_field@@Base>
   1fba0:	cmp	r0, #0
   1fba4:	bne	1fcb4 <main@@Base+0x9f78>
   1fba8:	mov	r0, r4
   1fbac:	mov	r1, #23
   1fbb0:	mov	r2, #8
   1fbb4:	mov	r3, #8
   1fbb8:	bl	2ff4c <flatcc_verify_field@@Base>
   1fbbc:	cmp	r0, #0
   1fbc0:	bne	1fcb4 <main@@Base+0x9f78>
   1fbc4:	mov	r0, r4
   1fbc8:	mov	r1, #25
   1fbcc:	mov	r2, #4
   1fbd0:	mov	r3, #4
   1fbd4:	bl	2ff4c <flatcc_verify_field@@Base>
   1fbd8:	cmp	r0, #0
   1fbdc:	bne	1fcb4 <main@@Base+0x9f78>
   1fbe0:	mov	r0, r4
   1fbe4:	mov	r1, #26
   1fbe8:	mov	r2, #4
   1fbec:	mov	r3, #4
   1fbf0:	bl	2ff4c <flatcc_verify_field@@Base>
   1fbf4:	cmp	r0, #0
   1fbf8:	bne	1fcb4 <main@@Base+0x9f78>
   1fbfc:	mov	r0, r4
   1fc00:	mov	r1, #27
   1fc04:	mov	r2, #4
   1fc08:	mov	r3, #4
   1fc0c:	bl	2ff4c <flatcc_verify_field@@Base>
   1fc10:	cmp	r0, #0
   1fc14:	bne	1fcb4 <main@@Base+0x9f78>
   1fc18:	mvn	r0, #0
   1fc1c:	mov	r1, #1
   1fc20:	mov	r2, #0
   1fc24:	mov	r3, #1
   1fc28:	str	r1, [sp]
   1fc2c:	str	r0, [sp, #4]
   1fc30:	mov	r0, r4
   1fc34:	mov	r1, #30
   1fc38:	bl	300cc <flatcc_verify_vector_field@@Base>
   1fc3c:	cmp	r0, #0
   1fc40:	bne	1fcb4 <main@@Base+0x9f78>
   1fc44:	mvn	r5, #-536870912	; 0xe0000000
   1fc48:	mov	r6, #8
   1fc4c:	mov	r0, r4
   1fc50:	mov	r1, #32
   1fc54:	mov	r2, #0
   1fc58:	mov	r3, #8
   1fc5c:	str	r6, [sp]
   1fc60:	str	r5, [sp, #4]
   1fc64:	bl	300cc <flatcc_verify_vector_field@@Base>
   1fc68:	cmp	r0, #0
   1fc6c:	bne	1fcb4 <main@@Base+0x9f78>
   1fc70:	mov	r0, r4
   1fc74:	mov	r1, #33	; 0x21
   1fc78:	mov	r2, #0
   1fc7c:	mov	r3, #8
   1fc80:	str	r6, [sp]
   1fc84:	str	r5, [sp, #4]
   1fc88:	bl	300cc <flatcc_verify_vector_field@@Base>
   1fc8c:	cmp	r0, #0
   1fc90:	bne	1fcb4 <main@@Base+0x9f78>
   1fc94:	movw	r3, #46840	; 0xb6f8
   1fc98:	mov	r0, r4
   1fc9c:	mov	r1, #34	; 0x22
   1fca0:	mov	r2, #0
   1fca4:	movt	r3, #2
   1fca8:	bl	302bc <flatcc_verify_table_field@@Base>
   1fcac:	cmp	r0, #0
   1fcb0:	beq	1fcbc <main@@Base+0x9f80>
   1fcb4:	sub	sp, fp, #16
   1fcb8:	pop	{r4, r5, r6, r7, fp, pc}
   1fcbc:	movw	r3, #46848	; 0xb700
   1fcc0:	mov	r0, r4
   1fcc4:	mov	r1, #35	; 0x23
   1fcc8:	mov	r2, #0
   1fccc:	movt	r3, #2
   1fcd0:	sub	sp, fp, #16
   1fcd4:	pop	{r4, r5, r6, r7, fp, lr}
   1fcd8:	b	302bc <flatcc_verify_table_field@@Base>
   1fcdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fce0:	add	fp, sp, #28
   1fce4:	sub	sp, sp, #12
   1fce8:	mov	r5, r1
   1fcec:	sub	r1, r2, r1
   1fcf0:	cmp	r1, #8
   1fcf4:	movcs	r1, #8
   1fcf8:	and	r1, r1, #15
   1fcfc:	sub	r4, r1, #1
   1fd00:	cmp	r4, #7
   1fd04:	bhi	1fe74 <main@@Base+0xa138>
   1fd08:	str	r3, [sp, #8]
   1fd0c:	add	r8, pc, #32
   1fd10:	mov	r9, #0
   1fd14:	mov	ip, #0
   1fd18:	mov	lr, #0
   1fd1c:	mov	sl, #0
   1fd20:	mov	r6, #0
   1fd24:	mov	r3, #0
   1fd28:	mov	r1, #0
   1fd2c:	mov	r7, #0
   1fd30:	ldr	pc, [r8, r4, lsl #2]
   1fd34:	muleq	r1, r8, sp
   1fd38:	muleq	r1, r0, sp
   1fd3c:	andeq	pc, r1, r8, lsl #27
   1fd40:	andeq	pc, r1, r0, lsl #27
   1fd44:	andeq	pc, r1, r4, ror sp	; <UNPREDICTABLE>
   1fd48:	andeq	pc, r1, r8, ror #26
   1fd4c:	andeq	pc, r1, r8, asr sp	; <UNPREDICTABLE>
   1fd50:	andeq	pc, r1, r4, asr sp	; <UNPREDICTABLE>
   1fd54:	ldrb	ip, [r5, #7]
   1fd58:	ldrb	r1, [r5, #6]
   1fd5c:	mov	lr, r9
   1fd60:	orr	r1, ip, r1, lsl #8
   1fd64:	mov	r9, r1
   1fd68:	ldrb	r1, [r5, #5]
   1fd6c:	mov	sl, lr
   1fd70:	orr	r9, r9, r1, lsl #16
   1fd74:	ldrb	r1, [r5, #4]
   1fd78:	mov	r6, sl
   1fd7c:	orr	r9, r9, r1, lsl #24
   1fd80:	ldrb	r1, [r5, #3]
   1fd84:	orr	r3, r1, r6
   1fd88:	ldrb	r1, [r5, #2]
   1fd8c:	orr	r1, r3, r1, lsl #8
   1fd90:	ldrb	r3, [r5, #1]
   1fd94:	orr	r7, r1, r3, lsl #16
   1fd98:	ldrb	r1, [r5]
   1fd9c:	ldr	r3, [fp, #12]
   1fda0:	ldr	r8, [fp, #8]
   1fda4:	movw	r4, #25957	; 0x6565
   1fda8:	movt	r4, #18290	; 0x4772
   1fdac:	orr	r7, r7, r1, lsl #24
   1fdb0:	mvn	r1, #-1845493760	; 0x92000000
   1fdb4:	subs	r1, r1, r9
   1fdb8:	sbcs	r1, r4, r7
   1fdbc:	bcc	1fdf4 <main@@Base+0xa0b8>
   1fdc0:	movw	r1, #30053	; 0x7565
   1fdc4:	movt	r1, #17004	; 0x426c
   1fdc8:	teq	r7, r1
   1fdcc:	bne	1fe74 <main@@Base+0xa138>
   1fdd0:	str	r3, [sp]
   1fdd4:	mov	r1, r5
   1fdd8:	mov	r3, #4
   1fddc:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   1fde0:	cmp	r0, r5
   1fde4:	beq	1fe74 <main@@Base+0xa138>
   1fde8:	mov	r1, #0
   1fdec:	mov	r2, #8
   1fdf0:	b	1fe60 <main@@Base+0xa124>
   1fdf4:	movw	r6, #25600	; 0x6400
   1fdf8:	bic	r1, r7, #255	; 0xff
   1fdfc:	movt	r6, #21093	; 0x5265
   1fe00:	teq	r1, r6
   1fe04:	bne	1fe2c <main@@Base+0xa0f0>
   1fe08:	str	r3, [sp]
   1fe0c:	mov	r1, r5
   1fe10:	mov	r3, #3
   1fe14:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   1fe18:	cmp	r0, r5
   1fe1c:	beq	1fe74 <main@@Base+0xa138>
   1fe20:	mov	r1, #0
   1fe24:	mov	r2, #1
   1fe28:	b	1fe60 <main@@Base+0xa124>
   1fe2c:	eor	r1, r7, r4
   1fe30:	and	r7, r9, #-16777216	; 0xff000000
   1fe34:	eor	r7, r7, #1845493760	; 0x6e000000
   1fe38:	orrs	r1, r7, r1
   1fe3c:	bne	1fe74 <main@@Base+0xa138>
   1fe40:	str	r3, [sp]
   1fe44:	mov	r1, r5
   1fe48:	mov	r3, #5
   1fe4c:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   1fe50:	cmp	r0, r5
   1fe54:	beq	1fe74 <main@@Base+0xa138>
   1fe58:	mov	r1, #0
   1fe5c:	mov	r2, #2
   1fe60:	str	r2, [r8]
   1fe64:	str	r1, [r8, #4]
   1fe68:	mov	r5, r0
   1fe6c:	ldr	r2, [sp, #8]
   1fe70:	str	r1, [r2]
   1fe74:	mov	r0, r5
   1fe78:	sub	sp, fp, #28
   1fe7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe84:	add	fp, sp, #28
   1fe88:	push	{r0, r3}
   1fe8c:	sub	r0, r2, r1
   1fe90:	cmp	r0, #8
   1fe94:	mov	r3, r0
   1fe98:	movcs	r3, #8
   1fe9c:	and	r3, r3, #15
   1fea0:	sub	r6, r3, #1
   1fea4:	cmp	r6, #7
   1fea8:	bhi	2023c <main@@Base+0xa500>
   1feac:	add	r3, pc, #32
   1feb0:	mov	lr, #0
   1feb4:	mov	r8, #0
   1feb8:	mov	r9, #0
   1febc:	mov	sl, #0
   1fec0:	mov	r7, #0
   1fec4:	mov	r4, #0
   1fec8:	mov	r5, #0
   1fecc:	mov	ip, #0
   1fed0:	ldr	pc, [r3, r6, lsl #2]
   1fed4:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   1fed8:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   1fedc:	andeq	pc, r1, r8, lsr #30
   1fee0:	andeq	pc, r1, r0, lsr #30
   1fee4:	andeq	pc, r1, r4, lsl pc	; <UNPREDICTABLE>
   1fee8:	andeq	pc, r1, r8, lsl #30
   1feec:	strdeq	pc, [r1], -r8
   1fef0:	strdeq	pc, [r1], -r4
   1fef4:	ldrb	r8, [r1, #7]
   1fef8:	ldrb	r3, [r1, #6]
   1fefc:	mov	r9, lr
   1ff00:	orr	r3, r8, r3, lsl #8
   1ff04:	mov	lr, r3
   1ff08:	ldrb	r3, [r1, #5]
   1ff0c:	mov	sl, r9
   1ff10:	orr	lr, lr, r3, lsl #16
   1ff14:	ldrb	r3, [r1, #4]
   1ff18:	mov	r7, sl
   1ff1c:	orr	lr, lr, r3, lsl #24
   1ff20:	ldrb	r3, [r1, #3]
   1ff24:	orr	r4, r3, r7
   1ff28:	ldrb	r3, [r1, #2]
   1ff2c:	orr	r5, r4, r3, lsl #8
   1ff30:	ldrb	r3, [r1, #1]
   1ff34:	orr	ip, r5, r3, lsl #16
   1ff38:	ldrb	r3, [r1]
   1ff3c:	movw	r4, #30061	; 0x756d
   1ff40:	movw	r6, #30815	; 0x785f
   1ff44:	movt	r4, #25966	; 0x656e
   1ff48:	movt	r6, #26725	; 0x6865
   1ff4c:	orr	r5, ip, r3, lsl #24
   1ff50:	subs	r3, lr, r4
   1ff54:	sbcs	r3, r5, r6
   1ff58:	bcs	1ffc0 <main@@Base+0xa284>
   1ff5c:	movw	r4, #27759	; 0x6c6f
   1ff60:	mvn	r3, #-1912602624	; 0x8e000000
   1ff64:	bic	r6, r5, #255	; 0xff
   1ff68:	movt	r4, #17263	; 0x436f
   1ff6c:	subs	r3, r3, lr
   1ff70:	sbcs	r3, r4, r5
   1ff74:	bcc	2001c <main@@Base+0xa2e0>
   1ff78:	cmp	r0, #4
   1ff7c:	blt	2023c <main@@Base+0xa500>
   1ff80:	movw	r0, #30976	; 0x7900
   1ff84:	movt	r0, #16750	; 0x416e
   1ff88:	teq	r6, r0
   1ff8c:	bne	2023c <main@@Base+0xa500>
   1ff90:	ldrb	r0, [r1, #3]
   1ff94:	mov	ip, r1
   1ff98:	cmp	r0, #46	; 0x2e
   1ff9c:	addeq	ip, ip, #4
   1ffa0:	cmp	ip, r1
   1ffa4:	beq	2023c <main@@Base+0xa500>
   1ffa8:	ldr	r0, [sp]
   1ffac:	ldr	r3, [sp, #4]
   1ffb0:	mov	r1, ip
   1ffb4:	sub	sp, fp, #28
   1ffb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ffbc:	b	22bac <main@@Base+0xce70>
   1ffc0:	add	r3, r6, #64512	; 0xfc00
   1ffc4:	add	r7, r3, #17301504	; 0x1080000
   1ffc8:	subs	r3, lr, r4
   1ffcc:	sbcs	r3, r5, r7
   1ffd0:	bcs	20064 <main@@Base+0xa328>
   1ffd4:	cmp	r0, #9
   1ffd8:	blt	2023c <main@@Base+0xa500>
   1ffdc:	eor	r0, lr, r4
   1ffe0:	eor	r3, r5, r6
   1ffe4:	orrs	r0, r0, r3
   1ffe8:	bne	2023c <main@@Base+0xa500>
   1ffec:	ldrb	r0, [r1, #8]
   1fff0:	mov	ip, r1
   1fff4:	cmp	r0, #46	; 0x2e
   1fff8:	addeq	ip, ip, #9
   1fffc:	cmp	ip, r1
   20000:	beq	2023c <main@@Base+0xa500>
   20004:	ldr	r0, [sp]
   20008:	ldr	r3, [sp, #4]
   2000c:	mov	r1, ip
   20010:	sub	sp, fp, #28
   20014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20018:	b	23e48 <main@@Base+0xe10c>
   2001c:	movw	r3, #28416	; 0x6f00
   20020:	movt	r3, #18031	; 0x466f
   20024:	teq	r6, r3
   20028:	bne	200c0 <main@@Base+0xa384>
   2002c:	cmp	r0, #4
   20030:	blt	2023c <main@@Base+0xa500>
   20034:	ldrb	r0, [r1, #3]
   20038:	mov	ip, r1
   2003c:	cmp	r0, #46	; 0x2e
   20040:	addeq	ip, ip, #4
   20044:	cmp	ip, r1
   20048:	beq	2023c <main@@Base+0xa500>
   2004c:	ldr	r0, [sp]
   20050:	ldr	r3, [sp, #4]
   20054:	mov	r1, ip
   20058:	sub	sp, fp, #28
   2005c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20060:	b	23bd8 <main@@Base+0xde9c>
   20064:	sub	r3, r6, #4352	; 0x1100
   20068:	subs	r6, lr, r4
   2006c:	sub	r3, r3, #-100663296	; 0xfa000000
   20070:	sbcs	r3, r5, r3
   20074:	bcs	2010c <main@@Base+0xa3d0>
   20078:	cmp	r0, #9
   2007c:	blt	2023c <main@@Base+0xa500>
   20080:	eor	r0, lr, r4
   20084:	eor	r3, r5, r7
   20088:	orrs	r0, r0, r3
   2008c:	bne	2023c <main@@Base+0xa500>
   20090:	ldrb	r0, [r1, #8]
   20094:	mov	ip, r1
   20098:	cmp	r0, #46	; 0x2e
   2009c:	addeq	ip, ip, #9
   200a0:	cmp	ip, r1
   200a4:	beq	2023c <main@@Base+0xa500>
   200a8:	ldr	r0, [sp]
   200ac:	ldr	r3, [sp, #4]
   200b0:	mov	r1, ip
   200b4:	sub	sp, fp, #28
   200b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200bc:	b	23ff8 <main@@Base+0xe2bc>
   200c0:	cmp	r0, #6
   200c4:	blt	2023c <main@@Base+0xa500>
   200c8:	and	r0, lr, #-16777216	; 0xff000000
   200cc:	eor	r3, r5, r4
   200d0:	eor	r0, r0, #1912602624	; 0x72000000
   200d4:	orrs	r0, r0, r3
   200d8:	bne	2023c <main@@Base+0xa500>
   200dc:	ldrb	r0, [r1, #5]
   200e0:	mov	ip, r1
   200e4:	cmp	r0, #46	; 0x2e
   200e8:	addeq	ip, ip, #6
   200ec:	cmp	ip, r1
   200f0:	beq	2023c <main@@Base+0xa500>
   200f4:	ldr	r0, [sp]
   200f8:	ldr	r3, [sp, #4]
   200fc:	mov	r1, ip
   20100:	sub	sp, fp, #28
   20104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20108:	b	1fcdc <main@@Base+0x9fa0>
   2010c:	movw	r3, #29817	; 0x7479
   20110:	movw	r7, #29797	; 0x7465
   20114:	movt	r3, #28016	; 0x6d70
   20118:	movt	r7, #28271	; 0x6e6f
   2011c:	eor	r3, lr, r3
   20120:	eor	r7, r5, r7
   20124:	orrs	r3, r3, r7
   20128:	beq	2017c <main@@Base+0xa440>
   2012c:	movw	r7, #26463	; 0x675f
   20130:	eor	r3, lr, r4
   20134:	movt	r7, #28261	; 0x6e65
   20138:	eor	r7, r5, r7
   2013c:	orrs	r3, r3, r7
   20140:	bne	2023c <main@@Base+0xa500>
   20144:	cmp	r0, #9
   20148:	blt	2023c <main@@Base+0xa500>
   2014c:	ldrb	r0, [r1, #8]
   20150:	mov	ip, r1
   20154:	cmp	r0, #46	; 0x2e
   20158:	addeq	ip, ip, #9
   2015c:	cmp	ip, r1
   20160:	beq	2023c <main@@Base+0xa500>
   20164:	ldr	r0, [sp]
   20168:	ldr	r3, [sp, #4]
   2016c:	mov	r1, ip
   20170:	sub	sp, fp, #28
   20174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20178:	b	241ec <main@@Base+0xe4b0>
   2017c:	add	lr, r1, #8
   20180:	sub	r9, r2, lr
   20184:	cmp	r9, #8
   20188:	mov	r0, r9
   2018c:	movcs	r0, #8
   20190:	and	r0, r0, #15
   20194:	sub	r6, r0, #1
   20198:	cmp	r6, #7
   2019c:	bhi	2023c <main@@Base+0xa500>
   201a0:	add	r0, pc, #16
   201a4:	mov	ip, #0
   201a8:	mov	r8, #0
   201ac:	mov	r5, #0
   201b0:	mov	r7, #0
   201b4:	ldr	pc, [r0, r6, lsl #2]
   201b8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   201bc:	andeq	r0, r2, r8, ror #3
   201c0:	andeq	r0, r2, r0, ror #3
   201c4:	ldrdeq	r0, [r2], -r8
   201c8:	ldrdeq	r0, [r2], -r8
   201cc:	ldrdeq	r0, [r2], -r8
   201d0:	ldrdeq	r0, [r2], -r8
   201d4:	ldrdeq	r0, [r2], -r8
   201d8:	ldrb	r8, [r1, #11]
   201dc:	mov	ip, #0
   201e0:	ldrb	r0, [r1, #10]
   201e4:	orr	r5, r8, r0, lsl #8
   201e8:	ldrb	r0, [r1, #9]
   201ec:	orr	r7, r5, r0, lsl #16
   201f0:	cmp	r9, #5
   201f4:	blt	2023c <main@@Base+0xa500>
   201f8:	ldrb	r0, [lr]
   201fc:	orr	r0, r7, r0, lsl #24
   20200:	eor	r0, r0, r4
   20204:	orrs	r0, ip, r0
   20208:	bne	2023c <main@@Base+0xa500>
   2020c:	ldrb	r0, [r1, #12]
   20210:	mov	ip, lr
   20214:	cmp	r0, #46	; 0x2e
   20218:	addeq	ip, r1, #13
   2021c:	cmp	ip, lr
   20220:	beq	2023c <main@@Base+0xa500>
   20224:	ldr	r0, [sp]
   20228:	ldr	r3, [sp, #4]
   2022c:	mov	r1, ip
   20230:	sub	sp, fp, #28
   20234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20238:	b	24338 <main@@Base+0xe5fc>
   2023c:	mov	r0, r1
   20240:	sub	sp, fp, #28
   20244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2024c:	add	fp, sp, #28
   20250:	sub	sp, sp, #20
   20254:	mov	r8, r2
   20258:	sub	r2, r2, r1
   2025c:	cmp	r2, #8
   20260:	movcs	r2, #8
   20264:	and	r2, r2, #15
   20268:	sub	r2, r2, #1
   2026c:	cmp	r2, #7
   20270:	bhi	210c4 <main@@Base+0xb388>
   20274:	str	r0, [sp, #16]
   20278:	mov	sl, #0
   2027c:	mov	ip, #0
   20280:	mov	lr, #0
   20284:	mov	r9, #0
   20288:	mov	r6, #0
   2028c:	mov	r4, #0
   20290:	mov	r5, #0
   20294:	ldr	r0, [fp, #12]
   20298:	str	r0, [sp, #12]
   2029c:	ldr	r0, [fp, #8]
   202a0:	str	r0, [sp, #8]
   202a4:	add	r7, pc, #4
   202a8:	mov	r0, #0
   202ac:	ldr	pc, [r7, r2, lsl #2]
   202b0:	andeq	r0, r2, r4, lsl r3
   202b4:	andeq	r0, r2, ip, lsl #6
   202b8:	andeq	r0, r2, r4, lsl #6
   202bc:	strdeq	r0, [r2], -ip
   202c0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   202c4:	andeq	r0, r2, r4, ror #5
   202c8:	ldrdeq	r0, [r2], -r4
   202cc:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   202d0:	ldrb	ip, [r1, #7]
   202d4:	ldrb	r2, [r1, #6]
   202d8:	mov	lr, sl
   202dc:	orr	r2, ip, r2, lsl #8
   202e0:	mov	sl, r2
   202e4:	ldrb	r2, [r1, #5]
   202e8:	mov	r9, lr
   202ec:	orr	sl, sl, r2, lsl #16
   202f0:	ldrb	r2, [r1, #4]
   202f4:	mov	r6, r9
   202f8:	orr	sl, sl, r2, lsl #24
   202fc:	ldrb	r2, [r1, #3]
   20300:	orr	r4, r2, r6
   20304:	ldrb	r2, [r1, #2]
   20308:	orr	r0, r4, r2, lsl #8
   2030c:	ldrb	r2, [r1, #1]
   20310:	orr	r5, r0, r2, lsl #16
   20314:	ldrb	r2, [r1]
   20318:	movw	r7, #11844	; 0x2e44
   2031c:	movw	r0, #18273	; 0x4761
   20320:	movt	r7, #28005	; 0x6d65
   20324:	movt	r0, #19833	; 0x4d79
   20328:	subs	r7, r7, sl
   2032c:	orr	r2, r5, r2, lsl #24
   20330:	sbcs	r7, r0, r2
   20334:	bcc	2049c <main@@Base+0xa760>
   20338:	movw	r0, #31022	; 0x792e
   2033c:	movw	r7, #28276	; 0x6e74
   20340:	movt	r0, #24947	; 0x6173
   20344:	movt	r7, #18017	; 0x4661
   20348:	eor	r0, sl, r0
   2034c:	eor	r2, r2, r7
   20350:	orrs	r0, r0, r2
   20354:	bne	210c4 <main@@Base+0xb388>
   20358:	add	lr, r1, #8
   2035c:	sub	r0, r8, lr
   20360:	cmp	r0, #8
   20364:	movcs	r0, #8
   20368:	and	r0, r0, #15
   2036c:	sub	r6, r0, #1
   20370:	cmp	r6, #7
   20374:	bhi	210c4 <main@@Base+0xb388>
   20378:	str	r3, [sp, #4]
   2037c:	add	r2, pc, #32
   20380:	mov	sl, #0
   20384:	mov	ip, #0
   20388:	mov	r9, #0
   2038c:	mov	r4, #0
   20390:	mov	r7, #0
   20394:	mov	r5, #0
   20398:	mov	r0, #0
   2039c:	mov	r3, #0
   203a0:	ldr	pc, [r2, r6, lsl #2]
   203a4:	andeq	r0, r2, r8, lsl #8
   203a8:	andeq	r0, r2, r0, lsl #8
   203ac:	strdeq	r0, [r2], -r8
   203b0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   203b4:	andeq	r0, r2, r4, ror #7
   203b8:	ldrdeq	r0, [r2], -r8
   203bc:	andeq	r0, r2, r8, asr #7
   203c0:	andeq	r0, r2, r4, asr #7
   203c4:	ldrb	ip, [r1, #15]
   203c8:	ldrb	r0, [r1, #14]
   203cc:	mov	r9, sl
   203d0:	orr	r0, ip, r0, lsl #8
   203d4:	mov	sl, r0
   203d8:	ldrb	r0, [r1, #13]
   203dc:	mov	r4, r9
   203e0:	orr	sl, sl, r0, lsl #16
   203e4:	ldrb	r0, [r1, #12]
   203e8:	mov	r7, r4
   203ec:	orr	sl, sl, r0, lsl #24
   203f0:	ldrb	r0, [r1, #11]
   203f4:	orr	r5, r0, r7
   203f8:	ldrb	r0, [r1, #10]
   203fc:	orr	r0, r5, r0, lsl #8
   20400:	ldrb	r2, [r1, #9]
   20404:	orr	r3, r0, r2, lsl #16
   20408:	ldrb	r2, [lr]
   2040c:	movw	r0, #29797	; 0x7465
   20410:	movt	r0, #24931	; 0x6163
   20414:	eor	r0, sl, r0
   20418:	orr	r2, r3, r2, lsl #24
   2041c:	movw	r3, #24946	; 0x6172
   20420:	movt	r3, #17256	; 0x4368
   20424:	eor	r2, r2, r3
   20428:	orrs	r0, r0, r2
   2042c:	bne	210c4 <main@@Base+0xb388>
   20430:	add	r0, r1, #16
   20434:	mov	r7, #-268435456	; 0xf0000000
   20438:	sub	r2, r8, r0
   2043c:	cmp	r2, #8
   20440:	mov	r3, r2
   20444:	movcs	r3, #8
   20448:	add	r3, r7, r3, lsl #28
   2044c:	asr	r3, r3, #28
   20450:	cmp	r3, #0
   20454:	cmpge	r2, #2
   20458:	blt	210c4 <main@@Base+0xb388>
   2045c:	ldrb	r2, [r0]
   20460:	cmp	r2, #114	; 0x72
   20464:	bne	210c4 <main@@Base+0xb388>
   20468:	ldrb	r2, [r1, #17]
   2046c:	ldr	r3, [sp, #4]
   20470:	cmp	r2, #46	; 0x2e
   20474:	mov	r2, r0
   20478:	addeq	r2, r1, #18
   2047c:	cmp	r2, r0
   20480:	beq	210c4 <main@@Base+0xb388>
   20484:	ldr	r0, [sp, #16]
   20488:	mov	r1, r2
   2048c:	mov	r2, r8
   20490:	sub	sp, fp, #28
   20494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20498:	b	243b8 <main@@Base+0xe67c>
   2049c:	movw	r7, #11855	; 0x2e4f
   204a0:	eor	r2, r2, r0
   204a4:	movt	r7, #28005	; 0x6d65
   204a8:	eor	r7, sl, r7
   204ac:	orrs	r0, r7, r2
   204b0:	beq	20648 <main@@Base+0xa90c>
   204b4:	movw	r0, #11845	; 0x2e45
   204b8:	movt	r0, #28005	; 0x6d65
   204bc:	eor	r0, sl, r0
   204c0:	orrs	r0, r0, r2
   204c4:	bne	210c4 <main@@Base+0xb388>
   204c8:	add	lr, r1, #8
   204cc:	sub	r0, r8, lr
   204d0:	cmp	r0, #8
   204d4:	movcs	r0, #8
   204d8:	and	r0, r0, #15
   204dc:	sub	r6, r0, #1
   204e0:	cmp	r6, #7
   204e4:	bhi	210c4 <main@@Base+0xb388>
   204e8:	str	r3, [sp, #4]
   204ec:	add	r4, pc, #32
   204f0:	mov	r0, #0
   204f4:	mov	ip, #0
   204f8:	mov	r9, #0
   204fc:	mov	sl, #0
   20500:	mov	r7, #0
   20504:	mov	r5, #0
   20508:	mov	r2, #0
   2050c:	mov	r3, #0
   20510:	ldr	pc, [r4, r6, lsl #2]
   20514:	andeq	r0, r2, r8, ror r5
   20518:	andeq	r0, r2, r0, ror r5
   2051c:	andeq	r0, r2, r8, ror #10
   20520:	andeq	r0, r2, r0, ror #10
   20524:	andeq	r0, r2, r4, asr r5
   20528:	andeq	r0, r2, r8, asr #10
   2052c:	andeq	r0, r2, r8, lsr r5
   20530:	andeq	r0, r2, r4, lsr r5
   20534:	ldrb	ip, [r1, #15]
   20538:	ldrb	r2, [r1, #14]
   2053c:	mov	r9, r0
   20540:	orr	r2, ip, r2, lsl #8
   20544:	mov	r0, r2
   20548:	ldrb	r2, [r1, #13]
   2054c:	mov	sl, r9
   20550:	orr	r0, r0, r2, lsl #16
   20554:	ldrb	r2, [r1, #12]
   20558:	mov	r7, sl
   2055c:	orr	r0, r0, r2, lsl #24
   20560:	ldrb	r2, [r1, #11]
   20564:	orr	r5, r2, r7
   20568:	ldrb	r2, [r1, #10]
   2056c:	orr	r2, r5, r2, lsl #8
   20570:	ldrb	r3, [r1, #9]
   20574:	orr	r3, r2, r3, lsl #16
   20578:	ldrb	r2, [lr]
   2057c:	movw	r7, #28016	; 0x6d70
   20580:	movt	r7, #30817	; 0x7861
   20584:	orr	r2, r3, r2, lsl #24
   20588:	movw	r3, #11841	; 0x2e41
   2058c:	movt	r3, #27749	; 0x6c65
   20590:	add	r5, r3, #39	; 0x27
   20594:	subs	r6, r0, r5
   20598:	sbcs	r6, r2, r7
   2059c:	bcs	20a14 <main@@Base+0xacd8>
   205a0:	ldr	lr, [sp, #4]
   205a4:	add	r6, r3, #2
   205a8:	subs	r6, r0, r6
   205ac:	sbcs	r6, r2, r7
   205b0:	bcs	20b30 <main@@Base+0xadf4>
   205b4:	eor	r0, r0, r3
   205b8:	eor	r2, r2, r7
   205bc:	orrs	r0, r0, r2
   205c0:	bne	210c4 <main@@Base+0xb388>
   205c4:	add	r0, r1, #16
   205c8:	sub	r2, r8, r0
   205cc:	cmp	r2, #8
   205d0:	mov	r3, r2
   205d4:	movcs	r3, #8
   205d8:	and	r7, r3, #15
   205dc:	sub	r3, r7, #2
   205e0:	cmp	r3, #7
   205e4:	bcs	20fb4 <main@@Base+0xb278>
   205e8:	ldrb	r3, [r1, #17]
   205ec:	lsl	r7, r3, #16
   205f0:	mov	r3, #0
   205f4:	cmp	r2, #3
   205f8:	blt	210c4 <main@@Base+0xb388>
   205fc:	ldrb	r2, [r0]
   20600:	orr	r2, r7, r2, lsl #24
   20604:	eor	r2, r2, #7929856	; 0x790000
   20608:	eor	r2, r2, #1845493760	; 0x6e000000
   2060c:	orrs	r2, r3, r2
   20610:	bne	210c4 <main@@Base+0xb388>
   20614:	ldrb	r2, [r1, #18]
   20618:	cmp	r2, #46	; 0x2e
   2061c:	mov	r2, r0
   20620:	addeq	r2, r1, #19
   20624:	cmp	r2, r0
   20628:	beq	210c4 <main@@Base+0xb388>
   2062c:	ldr	r0, [sp, #16]
   20630:	mov	r1, r2
   20634:	mov	r2, r8
   20638:	mov	r3, lr
   2063c:	sub	sp, fp, #28
   20640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20644:	b	22bac <main@@Base+0xce70>
   20648:	add	lr, r1, #8
   2064c:	sub	r0, r8, lr
   20650:	cmp	r0, #8
   20654:	movcs	r0, #8
   20658:	and	r0, r0, #15
   2065c:	sub	r7, r0, #1
   20660:	cmp	r7, #7
   20664:	bhi	210c4 <main@@Base+0xb388>
   20668:	str	r3, [sp, #4]
   2066c:	add	sl, pc, #32
   20670:	mov	r2, #0
   20674:	mov	ip, #0
   20678:	mov	r3, #0
   2067c:	mov	r4, #0
   20680:	mov	r6, #0
   20684:	mov	r5, #0
   20688:	mov	r0, #0
   2068c:	mov	r9, #0
   20690:	ldr	pc, [sl, r7, lsl #2]
   20694:	strdeq	r0, [r2], -r8
   20698:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   2069c:	andeq	r0, r2, r8, ror #13
   206a0:	andeq	r0, r2, r0, ror #13
   206a4:	ldrdeq	r0, [r2], -r4
   206a8:	andeq	r0, r2, r8, asr #13
   206ac:			; <UNDEFINED> instruction: 0x000206b8
   206b0:			; <UNDEFINED> instruction: 0x000206b4
   206b4:	ldrb	ip, [r1, #15]
   206b8:	ldrb	r0, [r1, #14]
   206bc:	mov	r3, r2
   206c0:	orr	r0, ip, r0, lsl #8
   206c4:	mov	r2, r0
   206c8:	ldrb	r0, [r1, #13]
   206cc:	mov	r4, r3
   206d0:	orr	r2, r2, r0, lsl #16
   206d4:	ldrb	r0, [r1, #12]
   206d8:	mov	r6, r4
   206dc:	orr	r2, r2, r0, lsl #24
   206e0:	ldrb	r0, [r1, #11]
   206e4:	orr	r5, r0, r6
   206e8:	ldrb	r0, [r1, #10]
   206ec:	orr	r0, r5, r0, lsl #8
   206f0:	ldrb	r3, [r1, #9]
   206f4:	orr	r9, r0, r3, lsl #16
   206f8:	movw	r0, #28005	; 0x6d65
   206fc:	movw	r3, #25970	; 0x6572
   20700:	movt	r0, #20065	; 0x4e61
   20704:	movt	r3, #29800	; 0x7468
   20708:	eor	r0, r2, r0
   2070c:	ldrb	r2, [lr]
   20710:	orr	r2, r9, r2, lsl #24
   20714:	eor	r2, r2, r3
   20718:	orrs	r0, r0, r2
   2071c:	bne	210c4 <main@@Base+0xb388>
   20720:	add	lr, r1, #16
   20724:	sub	r0, r8, lr
   20728:	cmp	r0, #8
   2072c:	movcs	r0, #8
   20730:	and	r0, r0, #15
   20734:	sub	r7, r0, #1
   20738:	cmp	r7, #7
   2073c:	bhi	210c4 <main@@Base+0xb388>
   20740:	add	r2, pc, #32
   20744:	mov	sl, #0
   20748:	mov	ip, #0
   2074c:	mov	r9, #0
   20750:	mov	r4, #0
   20754:	mov	r6, #0
   20758:	mov	r5, #0
   2075c:	mov	r0, #0
   20760:	mov	r3, #0
   20764:	ldr	pc, [r2, r7, lsl #2]
   20768:	andeq	r0, r2, ip, asr #15
   2076c:	andeq	r0, r2, r4, asr #15
   20770:			; <UNDEFINED> instruction: 0x000207bc
   20774:			; <UNDEFINED> instruction: 0x000207b4
   20778:	andeq	r0, r2, r8, lsr #15
   2077c:	muleq	r2, ip, r7
   20780:	andeq	r0, r2, ip, lsl #15
   20784:	andeq	r0, r2, r8, lsl #15
   20788:	ldrb	ip, [r1, #23]
   2078c:	ldrb	r0, [r1, #22]
   20790:	mov	r9, sl
   20794:	orr	r0, ip, r0, lsl #8
   20798:	mov	sl, r0
   2079c:	ldrb	r0, [r1, #21]
   207a0:	mov	r4, r9
   207a4:	orr	sl, sl, r0, lsl #16
   207a8:	ldrb	r0, [r1, #20]
   207ac:	mov	r6, r4
   207b0:	orr	sl, sl, r0, lsl #24
   207b4:	ldrb	r0, [r1, #19]
   207b8:	orr	r5, r0, r6
   207bc:	ldrb	r0, [r1, #18]
   207c0:	orr	r0, r5, r0, lsl #8
   207c4:	ldrb	r2, [r1, #17]
   207c8:	orr	r3, r0, r2, lsl #16
   207cc:	ldrb	r2, [lr]
   207d0:	movw	r0, #18034	; 0x4672
   207d4:	movt	r0, #25902	; 0x652e
   207d8:	eor	r0, sl, r0
   207dc:	orr	r2, r3, r2, lsl #24
   207e0:	movw	r3, #24931	; 0x6163
   207e4:	movt	r3, #21360	; 0x5370
   207e8:	eor	r2, r2, r3
   207ec:	orrs	r0, r0, r2
   207f0:	bne	210c4 <main@@Base+0xb388>
   207f4:	add	lr, r1, #24
   207f8:	sub	r0, r8, lr
   207fc:	cmp	r0, #8
   20800:	movcs	r0, #8
   20804:	and	r0, r0, #15
   20808:	sub	r7, r0, #1
   2080c:	cmp	r7, #7
   20810:	bhi	210c4 <main@@Base+0xb388>
   20814:	add	r2, pc, #32
   20818:	mov	sl, #0
   2081c:	mov	ip, #0
   20820:	mov	r9, #0
   20824:	mov	r4, #0
   20828:	mov	r6, #0
   2082c:	mov	r5, #0
   20830:	mov	r0, #0
   20834:	mov	r3, #0
   20838:	ldr	pc, [r2, r7, lsl #2]
   2083c:	andeq	r0, r2, r0, lsr #17
   20840:	muleq	r2, r8, r8
   20844:	muleq	r2, r0, r8
   20848:	andeq	r0, r2, r8, lsl #17
   2084c:	andeq	r0, r2, ip, ror r8
   20850:	andeq	r0, r2, r0, ror r8
   20854:	andeq	r0, r2, r0, ror #16
   20858:	andeq	r0, r2, ip, asr r8
   2085c:	ldrb	ip, [r1, #31]
   20860:	ldrb	r0, [r1, #30]
   20864:	mov	r9, sl
   20868:	orr	r0, ip, r0, lsl #8
   2086c:	mov	sl, r0
   20870:	ldrb	r0, [r1, #29]
   20874:	mov	r4, r9
   20878:	orr	sl, sl, r0, lsl #16
   2087c:	ldrb	r0, [r1, #28]
   20880:	mov	r6, r4
   20884:	orr	sl, sl, r0, lsl #24
   20888:	ldrb	r0, [r1, #27]
   2088c:	orr	r5, r0, r6
   20890:	ldrb	r0, [r1, #26]
   20894:	orr	r0, r5, r0, lsl #8
   20898:	ldrb	r2, [r1, #25]
   2089c:	orr	r3, r0, r2, lsl #16
   208a0:	ldrb	r2, [lr]
   208a4:	movw	r0, #30052	; 0x7564
   208a8:	movt	r0, #25452	; 0x636c
   208ac:	eor	r0, sl, r0
   208b0:	orr	r2, r3, r2, lsl #24
   208b4:	movw	r3, #18798	; 0x496e
   208b8:	movt	r3, #28525	; 0x6f6d
   208bc:	eor	r2, r2, r3
   208c0:	orrs	r0, r0, r2
   208c4:	bne	210c4 <main@@Base+0xb388>
   208c8:	add	r0, r1, #32
   208cc:	mov	r7, #-268435456	; 0xf0000000
   208d0:	sub	r2, r8, r0
   208d4:	cmp	r2, #8
   208d8:	mov	r3, r2
   208dc:	movcs	r3, #8
   208e0:	add	r3, r7, r3, lsl #28
   208e4:	asr	r3, r3, #28
   208e8:	cmp	r3, #0
   208ec:	cmpge	r2, #2
   208f0:	blt	210c4 <main@@Base+0xb388>
   208f4:	ldrb	r2, [r0]
   208f8:	cmp	r2, #101	; 0x65
   208fc:	bne	210c4 <main@@Base+0xb388>
   20900:	ldrb	r2, [r1, #33]	; 0x21
   20904:	ldr	r9, [sp, #4]
   20908:	mov	r7, r0
   2090c:	cmp	r2, #46	; 0x2e
   20910:	addeq	r7, r1, #34	; 0x22
   20914:	cmp	r7, r0
   20918:	beq	210c4 <main@@Base+0xb388>
   2091c:	sub	r0, r8, r7
   20920:	cmp	r0, #8
   20924:	movcs	r0, #8
   20928:	and	r0, r0, #15
   2092c:	sub	r2, r0, #1
   20930:	cmp	r2, #7
   20934:	bhi	210c0 <main@@Base+0xb384>
   20938:	add	r5, pc, #32
   2093c:	mov	sl, #0
   20940:	mov	ip, #0
   20944:	mov	lr, #0
   20948:	mov	r1, #0
   2094c:	mov	r3, #0
   20950:	mov	r6, #0
   20954:	mov	r4, #0
   20958:	mov	r0, #0
   2095c:	ldr	pc, [r5, r2, lsl #2]
   20960:	andeq	r0, r2, r4, asr #19
   20964:			; <UNDEFINED> instruction: 0x000209bc
   20968:			; <UNDEFINED> instruction: 0x000209b4
   2096c:	andeq	r0, r2, ip, lsr #19
   20970:	andeq	r0, r2, r0, lsr #19
   20974:	muleq	r2, r4, r9
   20978:	andeq	r0, r2, r4, lsl #19
   2097c:	andeq	r0, r2, r0, lsl #19
   20980:	ldrb	ip, [r7, #7]
   20984:	ldrb	r0, [r7, #6]
   20988:	mov	lr, sl
   2098c:	orr	r0, ip, r0, lsl #8
   20990:	mov	sl, r0
   20994:	ldrb	r0, [r7, #5]
   20998:	mov	r1, lr
   2099c:	orr	sl, sl, r0, lsl #16
   209a0:	ldrb	r0, [r7, #4]
   209a4:	mov	r3, r1
   209a8:	orr	sl, sl, r0, lsl #24
   209ac:	ldrb	r0, [r7, #3]
   209b0:	orr	r6, r0, r3
   209b4:	ldrb	r0, [r7, #2]
   209b8:	orr	r4, r6, r0, lsl #8
   209bc:	ldrb	r0, [r7, #1]
   209c0:	orr	r0, r4, r0, lsl #16
   209c4:	ldrb	r1, [r7]
   209c8:	orr	r6, r0, r1, lsl #24
   209cc:	movw	r1, #28416	; 0x6f00
   209d0:	bic	r0, r6, #255	; 0xff
   209d4:	movt	r1, #18031	; 0x466f
   209d8:	teq	r0, r1
   209dc:	bne	20fdc <main@@Base+0xb2a0>
   209e0:	ldr	r0, [sp, #12]
   209e4:	mov	r1, r7
   209e8:	mov	r2, r8
   209ec:	mov	r3, #3
   209f0:	str	r0, [sp]
   209f4:	ldr	r0, [sp, #16]
   209f8:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   209fc:	cmp	r0, r7
   20a00:	beq	20fdc <main@@Base+0xb2a0>
   20a04:	mov	r1, r0
   20a08:	mov	r3, #0
   20a0c:	mov	r2, #17
   20a10:	b	21074 <main@@Base+0xb338>
   20a14:	eor	r6, r2, r7
   20a18:	eor	r5, r0, r5
   20a1c:	orrs	r5, r5, r6
   20a20:	bne	20c28 <main@@Base+0xaeec>
   20a24:	add	ip, r1, #16
   20a28:	sub	r2, r8, ip
   20a2c:	cmp	r2, #8
   20a30:	mov	r0, r2
   20a34:	movcs	r0, #8
   20a38:	and	r0, r0, #15
   20a3c:	sub	r4, r0, #1
   20a40:	cmp	r4, #7
   20a44:	bhi	210c4 <main@@Base+0xb388>
   20a48:	add	r6, pc, #28
   20a4c:	mov	r9, #0
   20a50:	mov	lr, #0
   20a54:	mov	sl, #0
   20a58:	mov	r3, #0
   20a5c:	mov	r5, #0
   20a60:	mov	r0, #0
   20a64:	mov	r7, #0
   20a68:	ldr	pc, [r6, r4, lsl #2]
   20a6c:	andeq	r0, r2, r8, asr #21
   20a70:	andeq	r0, r2, r0, asr #21
   20a74:			; <UNDEFINED> instruction: 0x00020ab8
   20a78:			; <UNDEFINED> instruction: 0x00020ab0
   20a7c:	andeq	r0, r2, r4, lsr #21
   20a80:	muleq	r2, r4, sl
   20a84:	andeq	r0, r2, ip, lsl #21
   20a88:	andeq	r0, r2, ip, lsl #21
   20a8c:	ldrb	r0, [r1, #22]
   20a90:	lsl	lr, r0, #8
   20a94:	ldrb	r0, [r1, #21]
   20a98:	mov	sl, r9
   20a9c:	orr	r0, lr, r0, lsl #16
   20aa0:	mov	r9, r0
   20aa4:	ldrb	r0, [r1, #20]
   20aa8:	mov	r3, sl
   20aac:	orr	r9, r9, r0, lsl #24
   20ab0:	ldrb	r0, [r1, #19]
   20ab4:	orr	r5, r0, r3
   20ab8:	ldrb	r0, [r1, #18]
   20abc:	orr	r0, r5, r0, lsl #8
   20ac0:	ldrb	r3, [r1, #17]
   20ac4:	orr	r7, r0, r3, lsl #16
   20ac8:	cmp	r2, #8
   20acc:	blt	210c4 <main@@Base+0xb388>
   20ad0:	ldrb	r0, [ip]
   20ad4:	movw	r2, #24421	; 0x5f65
   20ad8:	movw	r3, #27904	; 0x6d00
   20adc:	movt	r2, #25959	; 0x6567
   20ae0:	movt	r3, #28277	; 0x6e75
   20ae4:	add	r2, r2, #1114112	; 0x110000
   20ae8:	eor	r3, r9, r3
   20aec:	orr	r0, r7, r0, lsl #24
   20af0:	eor	r0, r0, r2
   20af4:	orrs	r0, r3, r0
   20af8:	bne	210c4 <main@@Base+0xb388>
   20afc:	ldrb	r0, [r1, #23]
   20b00:	ldr	r3, [sp, #4]
   20b04:	mov	r2, ip
   20b08:	cmp	r0, #46	; 0x2e
   20b0c:	addeq	r2, r1, #24
   20b10:	cmp	r2, ip
   20b14:	beq	210c4 <main@@Base+0xb388>
   20b18:	ldr	r0, [sp, #16]
   20b1c:	mov	r1, r2
   20b20:	mov	r2, r8
   20b24:	sub	sp, fp, #28
   20b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b2c:	b	23e48 <main@@Base+0xe10c>
   20b30:	movw	r3, #11846	; 0x2e46
   20b34:	eor	r2, r2, r7
   20b38:	movt	r3, #27749	; 0x6c65
   20b3c:	eor	r3, r0, r3
   20b40:	orrs	r3, r3, r2
   20b44:	beq	20e88 <main@@Base+0xb14c>
   20b48:	movw	r3, #11843	; 0x2e43
   20b4c:	movt	r3, #27749	; 0x6c65
   20b50:	eor	r0, r0, r3
   20b54:	orrs	r0, r0, r2
   20b58:	bne	210c4 <main@@Base+0xb388>
   20b5c:	add	r0, r1, #16
   20b60:	sub	r2, r8, r0
   20b64:	cmp	r2, #8
   20b68:	mov	r3, r2
   20b6c:	movcs	r3, #8
   20b70:	and	r3, r3, #15
   20b74:	sub	r6, r3, #1
   20b78:	cmp	r6, #7
   20b7c:	bhi	210c4 <main@@Base+0xb388>
   20b80:	add	r3, pc, #16
   20b84:	mov	ip, #0
   20b88:	mov	r7, #0
   20b8c:	mov	r4, #0
   20b90:	mov	r5, #0
   20b94:	ldr	pc, [r3, r6, lsl #2]
   20b98:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20b9c:	andeq	r0, r2, r8, asr #23
   20ba0:	andeq	r0, r2, r0, asr #23
   20ba4:			; <UNDEFINED> instruction: 0x00020bb8
   20ba8:			; <UNDEFINED> instruction: 0x00020bb8
   20bac:			; <UNDEFINED> instruction: 0x00020bb8
   20bb0:			; <UNDEFINED> instruction: 0x00020bb8
   20bb4:			; <UNDEFINED> instruction: 0x00020bb8
   20bb8:	ldrb	r7, [r1, #19]
   20bbc:	mov	ip, #0
   20bc0:	ldrb	r3, [r1, #18]
   20bc4:	orr	r4, r7, r3, lsl #8
   20bc8:	ldrb	r3, [r1, #17]
   20bcc:	orr	r5, r4, r3, lsl #16
   20bd0:	cmp	r2, #5
   20bd4:	blt	210c4 <main@@Base+0xb388>
   20bd8:	ldrb	r2, [r0]
   20bdc:	movw	r3, #28530	; 0x6f72
   20be0:	movt	r3, #28524	; 0x6f6c
   20be4:	orr	r2, r5, r2, lsl #24
   20be8:	eor	r2, r2, r3
   20bec:	orrs	r2, ip, r2
   20bf0:	bne	210c4 <main@@Base+0xb388>
   20bf4:	ldrb	r2, [r1, #20]
   20bf8:	cmp	r2, #46	; 0x2e
   20bfc:	mov	r2, r0
   20c00:	addeq	r2, r1, #21
   20c04:	cmp	r2, r0
   20c08:	beq	210c4 <main@@Base+0xb388>
   20c0c:	ldr	r0, [sp, #16]
   20c10:	mov	r1, r2
   20c14:	mov	r2, r8
   20c18:	mov	r3, lr
   20c1c:	sub	sp, fp, #28
   20c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c24:	b	1fcdc <main@@Base+0x9fa0>
   20c28:	add	r5, r3, #45	; 0x2d
   20c2c:	subs	r4, r0, r5
   20c30:	sbcs	r2, r2, r7
   20c34:	bcs	20d58 <main@@Base+0xb01c>
   20c38:	add	r2, r3, #40	; 0x28
   20c3c:	eor	r0, r0, r2
   20c40:	orrs	r0, r0, r6
   20c44:	bne	210c4 <main@@Base+0xb388>
   20c48:	add	ip, r1, #16
   20c4c:	sub	r2, r8, ip
   20c50:	cmp	r2, #8
   20c54:	mov	r0, r2
   20c58:	movcs	r0, #8
   20c5c:	and	r0, r0, #15
   20c60:	sub	r4, r0, #1
   20c64:	cmp	r4, #7
   20c68:	bhi	210c4 <main@@Base+0xb388>
   20c6c:	add	r6, pc, #28
   20c70:	mov	r9, #0
   20c74:	mov	lr, #0
   20c78:	mov	sl, #0
   20c7c:	mov	r3, #0
   20c80:	mov	r5, #0
   20c84:	mov	r7, #0
   20c88:	mov	r0, #0
   20c8c:	ldr	pc, [r6, r4, lsl #2]
   20c90:	andeq	r0, r2, ip, ror #25
   20c94:	andeq	r0, r2, r4, ror #25
   20c98:	ldrdeq	r0, [r2], -ip
   20c9c:	ldrdeq	r0, [r2], -r4
   20ca0:	andeq	r0, r2, r8, asr #25
   20ca4:			; <UNDEFINED> instruction: 0x00020cb8
   20ca8:			; <UNDEFINED> instruction: 0x00020cb0
   20cac:			; <UNDEFINED> instruction: 0x00020cb0
   20cb0:	ldrb	r0, [r1, #22]
   20cb4:	lsl	lr, r0, #8
   20cb8:	ldrb	r0, [r1, #21]
   20cbc:	mov	sl, r9
   20cc0:	orr	r0, lr, r0, lsl #16
   20cc4:	mov	r9, r0
   20cc8:	ldrb	r0, [r1, #20]
   20ccc:	mov	r3, sl
   20cd0:	orr	r9, r9, r0, lsl #24
   20cd4:	ldrb	r0, [r1, #19]
   20cd8:	orr	r5, r0, r3
   20cdc:	ldrb	r0, [r1, #18]
   20ce0:	orr	r7, r5, r0, lsl #8
   20ce4:	ldrb	r0, [r1, #17]
   20ce8:	orr	r0, r7, r0, lsl #16
   20cec:	cmp	r2, #8
   20cf0:	blt	210c4 <main@@Base+0xb388>
   20cf4:	ldrb	r3, [ip]
   20cf8:	movw	r2, #24421	; 0x5f65
   20cfc:	movt	r2, #25959	; 0x6567
   20d00:	add	r2, r2, #851968	; 0xd0000
   20d04:	add	r2, r2, #150994944	; 0x9000000
   20d08:	orr	r0, r0, r3, lsl #24
   20d0c:	movw	r3, #27904	; 0x6d00
   20d10:	movt	r3, #28277	; 0x6e75
   20d14:	eor	r0, r0, r2
   20d18:	eor	r3, r9, r3
   20d1c:	orrs	r0, r3, r0
   20d20:	bne	210c4 <main@@Base+0xb388>
   20d24:	ldrb	r0, [r1, #23]
   20d28:	ldr	r3, [sp, #4]
   20d2c:	mov	r2, ip
   20d30:	cmp	r0, #46	; 0x2e
   20d34:	addeq	r2, r1, #24
   20d38:	cmp	r2, ip
   20d3c:	beq	210c4 <main@@Base+0xb388>
   20d40:	ldr	r0, [sp, #16]
   20d44:	mov	r1, r2
   20d48:	mov	r2, r8
   20d4c:	sub	sp, fp, #28
   20d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d54:	b	23ff8 <main@@Base+0xe2bc>
   20d58:	eor	r0, r0, r5
   20d5c:	orrs	r0, r0, r6
   20d60:	bne	210c4 <main@@Base+0xb388>
   20d64:	add	lr, r1, #16
   20d68:	sub	r2, r8, lr
   20d6c:	cmp	r2, #8
   20d70:	mov	r0, r2
   20d74:	movcs	r0, #8
   20d78:	and	r0, r0, #15
   20d7c:	sub	r4, r0, #1
   20d80:	cmp	r4, #7
   20d84:	bhi	210c4 <main@@Base+0xb388>
   20d88:	add	ip, pc, #36	; 0x24
   20d8c:	mov	r0, #0
   20d90:	mov	sl, #0
   20d94:	mov	r9, #0
   20d98:	mov	r7, #0
   20d9c:	mov	r6, #0
   20da0:	mov	r5, #0
   20da4:	mov	r3, #0
   20da8:	str	r0, [sp, #12]
   20dac:	mov	r0, #0
   20db0:	ldr	pc, [ip, r4, lsl #2]
   20db4:	andeq	r0, r2, r0, lsr #28
   20db8:	andeq	r0, r2, r8, lsl lr
   20dbc:	andeq	r0, r2, r0, lsl lr
   20dc0:	andeq	r0, r2, r8, lsl #28
   20dc4:	strdeq	r0, [r2], -ip
   20dc8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20dcc:	ldrdeq	r0, [r2], -ip
   20dd0:	ldrdeq	r0, [r2], -r4
   20dd4:	ldrb	r0, [r1, #23]
   20dd8:	str	r0, [sp, #12]
   20ddc:	ldrb	r0, [r1, #22]
   20de0:	ldr	r3, [sp, #12]
   20de4:	mov	r9, sl
   20de8:	orr	r0, r3, r0, lsl #8
   20dec:	mov	sl, r0
   20df0:	ldrb	r0, [r1, #21]
   20df4:	mov	r7, r9
   20df8:	orr	sl, sl, r0, lsl #16
   20dfc:	ldrb	r0, [r1, #20]
   20e00:	mov	r6, r7
   20e04:	orr	sl, sl, r0, lsl #24
   20e08:	ldrb	r0, [r1, #19]
   20e0c:	orr	r5, r0, r6
   20e10:	ldrb	r0, [r1, #18]
   20e14:	orr	r0, r5, r0, lsl #8
   20e18:	ldrb	r3, [r1, #17]
   20e1c:	orr	r3, r0, r3, lsl #16
   20e20:	ldrb	r0, [lr]
   20e24:	movw	r7, #27904	; 0x6d00
   20e28:	cmp	r2, #8
   20e2c:	movt	r7, #28277	; 0x6e75
   20e30:	orr	r4, r3, r0, lsl #24
   20e34:	blt	20f0c <main@@Base+0xb1d0>
   20e38:	movw	r2, #24421	; 0x5f65
   20e3c:	bic	r0, sl, #255	; 0xff
   20e40:	movt	r2, #25959	; 0x6567
   20e44:	eor	r0, r0, r7
   20e48:	eor	r2, r4, r2
   20e4c:	orrs	r0, r0, r2
   20e50:	bne	20f0c <main@@Base+0xb1d0>
   20e54:	ldrb	r0, [r1, #23]
   20e58:	mov	r2, lr
   20e5c:	cmp	r0, #46	; 0x2e
   20e60:	addeq	r2, r1, #24
   20e64:	cmp	r2, lr
   20e68:	beq	20f0c <main@@Base+0xb1d0>
   20e6c:	ldr	r0, [sp, #16]
   20e70:	ldr	r3, [sp, #4]
   20e74:	mov	r1, r2
   20e78:	mov	r2, r8
   20e7c:	sub	sp, fp, #28
   20e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e84:	b	241ec <main@@Base+0xe4b0>
   20e88:	add	r0, r1, #16
   20e8c:	sub	r2, r8, r0
   20e90:	cmp	r2, #8
   20e94:	mov	r3, r2
   20e98:	movcs	r3, #8
   20e9c:	and	r7, r3, #15
   20ea0:	sub	r3, r7, #2
   20ea4:	cmp	r3, #7
   20ea8:	bcs	20fc8 <main@@Base+0xb28c>
   20eac:	ldrb	r3, [r1, #17]
   20eb0:	lsl	r7, r3, #16
   20eb4:	mov	r3, #0
   20eb8:	cmp	r2, #3
   20ebc:	blt	210c4 <main@@Base+0xb388>
   20ec0:	ldrb	r2, [r0]
   20ec4:	orr	r2, r7, r2, lsl #24
   20ec8:	eor	r2, r2, #7274496	; 0x6f0000
   20ecc:	eor	r2, r2, #1862270976	; 0x6f000000
   20ed0:	orrs	r2, r3, r2
   20ed4:	bne	210c4 <main@@Base+0xb388>
   20ed8:	ldrb	r2, [r1, #18]
   20edc:	cmp	r2, #46	; 0x2e
   20ee0:	mov	r2, r0
   20ee4:	addeq	r2, r1, #19
   20ee8:	cmp	r2, r0
   20eec:	beq	210c4 <main@@Base+0xb388>
   20ef0:	ldr	r0, [sp, #16]
   20ef4:	mov	r1, r2
   20ef8:	mov	r2, r8
   20efc:	mov	r3, lr
   20f00:	sub	sp, fp, #28
   20f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f08:	b	23bd8 <main@@Base+0xde9c>
   20f0c:	movw	r0, #31077	; 0x7965
   20f10:	movw	r2, #25965	; 0x656d
   20f14:	movt	r0, #28788	; 0x7074
   20f18:	movt	r2, #28532	; 0x6f74
   20f1c:	eor	r0, sl, r0
   20f20:	eor	r2, r4, r2
   20f24:	orrs	r0, r0, r2
   20f28:	bne	210c4 <main@@Base+0xb388>
   20f2c:	add	r0, r1, #24
   20f30:	sub	r2, r8, r0
   20f34:	cmp	r2, #8
   20f38:	mov	r3, r2
   20f3c:	movcs	r3, #8
   20f40:	and	r6, r3, #15
   20f44:	sub	r3, r6, #3
   20f48:	cmp	r3, #6
   20f4c:	bcs	21088 <main@@Base+0xb34c>
   20f50:	ldrb	r3, [r1, #26]
   20f54:	mov	r4, #0
   20f58:	lsl	r6, r3, #8
   20f5c:	ldr	r3, [sp, #4]
   20f60:	ldrb	r5, [r1, #25]
   20f64:	orr	r6, r6, r5, lsl #16
   20f68:	cmp	r2, #4
   20f6c:	blt	210c4 <main@@Base+0xb388>
   20f70:	ldrb	r2, [r0]
   20f74:	orr	r2, r6, r2, lsl #24
   20f78:	eor	r2, r2, r7
   20f7c:	orrs	r2, r4, r2
   20f80:	bne	210c4 <main@@Base+0xb388>
   20f84:	ldrb	r2, [r1, #27]
   20f88:	cmp	r2, #46	; 0x2e
   20f8c:	mov	r2, r0
   20f90:	addeq	r2, r1, #28
   20f94:	cmp	r2, r0
   20f98:	beq	210c4 <main@@Base+0xb388>
   20f9c:	ldr	r0, [sp, #16]
   20fa0:	mov	r1, r2
   20fa4:	mov	r2, r8
   20fa8:	sub	sp, fp, #28
   20fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20fb0:	b	24338 <main@@Base+0xe5fc>
   20fb4:	cmp	r7, #1
   20fb8:	mov	r3, #0
   20fbc:	mov	r7, #0
   20fc0:	beq	205f4 <main@@Base+0xa8b8>
   20fc4:	b	210c4 <main@@Base+0xb388>
   20fc8:	cmp	r7, #1
   20fcc:	mov	r3, #0
   20fd0:	mov	r7, #0
   20fd4:	beq	20eb8 <main@@Base+0xb17c>
   20fd8:	b	210c4 <main@@Base+0xb388>
   20fdc:	movw	r0, #25942	; 0x6556
   20fe0:	movw	r1, #25452	; 0x636c
   20fe4:	movt	r0, #30052	; 0x7564
   20fe8:	movt	r1, #18798	; 0x496e
   20fec:	eor	r0, sl, r0
   20ff0:	eor	r1, r6, r1
   20ff4:	orrs	r0, r0, r1
   20ff8:	bne	210c0 <main@@Base+0xb384>
   20ffc:	add	r6, r7, #8
   21000:	sub	r0, r8, r6
   21004:	cmp	r0, #8
   21008:	movcs	r0, #8
   2100c:	and	r1, r0, #15
   21010:	sub	r0, r1, #2
   21014:	cmp	r0, #7
   21018:	bcs	210b0 <main@@Base+0xb374>
   2101c:	ldrb	r0, [r7, #9]
   21020:	lsl	r1, r0, #16
   21024:	mov	r0, #0
   21028:	ldrb	r2, [r6]
   2102c:	orr	r1, r1, r2, lsl #24
   21030:	eor	r1, r1, #23855104	; 0x16c0000
   21034:	eor	r1, r1, #1610612736	; 0x60000000
   21038:	orrs	r0, r0, r1
   2103c:	bne	210c0 <main@@Base+0xb384>
   21040:	ldr	r0, [sp, #12]
   21044:	mov	r1, r6
   21048:	mov	r2, r8
   2104c:	mov	r3, #2
   21050:	str	r0, [sp]
   21054:	ldr	r0, [sp, #16]
   21058:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   2105c:	cmp	r0, r6
   21060:	mov	r1, r7
   21064:	beq	210c4 <main@@Base+0xb388>
   21068:	mov	r2, #0
   2106c:	mov	r3, #0
   21070:	mov	r1, r0
   21074:	ldr	r0, [sp, #8]
   21078:	strd	r2, [r0]
   2107c:	mov	r0, #0
   21080:	str	r0, [r9]
   21084:	b	210c4 <main@@Base+0xb388>
   21088:	ldr	r3, [sp, #4]
   2108c:	mov	r4, #0
   21090:	cmp	r6, #1
   21094:	beq	210a8 <main@@Base+0xb36c>
   21098:	cmp	r6, #2
   2109c:	mov	r6, #0
   210a0:	beq	20f60 <main@@Base+0xb224>
   210a4:	b	210c4 <main@@Base+0xb388>
   210a8:	mov	r6, #0
   210ac:	b	20f68 <main@@Base+0xb22c>
   210b0:	cmp	r1, #1
   210b4:	mov	r0, #0
   210b8:	mov	r1, #0
   210bc:	beq	21028 <main@@Base+0xb2ec>
   210c0:	mov	r1, r7
   210c4:	mov	r0, r1
   210c8:	sub	sp, fp, #28
   210cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   210d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210d4:	add	fp, sp, #28
   210d8:	sub	sp, sp, #44	; 0x2c
   210dc:	mov	r6, r2
   210e0:	ldr	r2, [fp, #8]
   210e4:	mov	r5, r0
   210e8:	mov	r0, #0
   210ec:	mov	sl, r3
   210f0:	cmp	r1, r6
   210f4:	strb	r0, [r2]
   210f8:	beq	21124 <main@@Base+0xb3e8>
   210fc:	ldrb	r0, [r1]
   21100:	cmp	r0, #34	; 0x22
   21104:	bne	21110 <main@@Base+0xb3d4>
   21108:	add	r1, r1, #1
   2110c:	b	21124 <main@@Base+0xb3e8>
   21110:	mov	r0, r5
   21114:	mov	r2, r6
   21118:	mov	r3, #5
   2111c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21120:	mov	r1, r0
   21124:	sub	r0, r6, r1
   21128:	cmp	r0, #2
   2112c:	blt	21158 <main@@Base+0xb41c>
   21130:	ldrb	r0, [r1]
   21134:	cmp	r0, #32
   21138:	bls	21144 <main@@Base+0xb408>
   2113c:	mov	r7, r1
   21140:	b	21168 <main@@Base+0xb42c>
   21144:	bne	21158 <main@@Base+0xb41c>
   21148:	mov	r7, r1
   2114c:	ldrb	r0, [r7, #1]!
   21150:	cmp	r0, #32
   21154:	bhi	21168 <main@@Base+0xb42c>
   21158:	mov	r0, r5
   2115c:	mov	r2, r6
   21160:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21164:	mov	r7, r0
   21168:	cmp	r7, r6
   2116c:	beq	21280 <main@@Base+0xb544>
   21170:	add	r0, sl, #4
   21174:	mov	r2, #0
   21178:	add	r8, sp, #32
   2117c:	add	r9, sp, #28
   21180:	str	sl, [sp, #16]
   21184:	str	r0, [sp, #12]
   21188:	ldr	r4, [sl]
   2118c:	mov	sl, r0
   21190:	str	r2, [sp, #20]
   21194:	add	r0, sp, #24
   21198:	mov	r1, r7
   2119c:	mov	r2, r6
   211a0:	mov	r3, r9
   211a4:	str	r8, [sp]
   211a8:	str	r0, [sp, #4]
   211ac:	mov	r0, r5
   211b0:	blx	r4
   211b4:	cmp	r0, r6
   211b8:	beq	21280 <main@@Base+0xb544>
   211bc:	mov	r4, r0
   211c0:	cmp	r0, r7
   211c4:	bne	211d8 <main@@Base+0xb49c>
   211c8:	ldr	r4, [sl], #4
   211cc:	cmp	r4, #0
   211d0:	bne	21194 <main@@Base+0xb458>
   211d4:	b	21288 <main@@Base+0xb54c>
   211d8:	ldr	r2, [sp, #28]
   211dc:	ldr	r0, [sp, #32]
   211e0:	ldr	r1, [sp, #36]	; 0x24
   211e4:	cmp	r2, #0
   211e8:	beq	21210 <main@@Base+0xb4d4>
   211ec:	ldr	sl, [sp, #16]
   211f0:	subs	r2, r0, #129	; 0x81
   211f4:	sbcs	r1, r1, #0
   211f8:	bcc	2123c <main@@Base+0xb500>
   211fc:	mov	r0, r5
   21200:	mov	r1, r4
   21204:	mov	r2, r6
   21208:	mov	r3, #8
   2120c:	b	21230 <main@@Base+0xb4f4>
   21210:	ldr	sl, [sp, #16]
   21214:	subs	r2, r0, #128	; 0x80
   21218:	sbcs	r1, r1, #0
   2121c:	bcc	21244 <main@@Base+0xb508>
   21220:	mov	r0, r5
   21224:	mov	r1, r4
   21228:	mov	r2, r6
   2122c:	mov	r3, #7
   21230:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21234:	ldr	r2, [sp, #20]
   21238:	b	2124c <main@@Base+0xb510>
   2123c:	rsb	r2, r0, #0
   21240:	b	21248 <main@@Base+0xb50c>
   21244:	mov	r2, r0
   21248:	mov	r0, r4
   2124c:	cmp	r0, r6
   21250:	beq	21280 <main@@Base+0xb544>
   21254:	ldr	r0, [fp, #8]
   21258:	mov	r7, r4
   2125c:	mov	r1, r0
   21260:	ldrb	r0, [r0]
   21264:	add	r0, r0, r2
   21268:	strb	r0, [r1]
   2126c:	ldr	r0, [sp, #24]
   21270:	cmp	r0, #0
   21274:	ldr	r0, [sp, #12]
   21278:	bne	21188 <main@@Base+0xb44c>
   2127c:	b	212a0 <main@@Base+0xb564>
   21280:	mov	r4, r6
   21284:	b	212a0 <main@@Base+0xb564>
   21288:	mov	r0, r5
   2128c:	mov	r1, r7
   21290:	mov	r2, r6
   21294:	mov	r3, #23
   21298:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2129c:	mov	r4, r0
   212a0:	mov	r0, r4
   212a4:	sub	sp, fp, #28
   212a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   212b0:	add	fp, sp, #28
   212b4:	sub	sp, sp, #44	; 0x2c
   212b8:	mov	r6, r2
   212bc:	ldr	r2, [fp, #8]
   212c0:	mov	r5, r0
   212c4:	mov	r0, #0
   212c8:	mov	sl, r3
   212cc:	cmp	r1, r6
   212d0:	strb	r0, [r2]
   212d4:	beq	21300 <main@@Base+0xb5c4>
   212d8:	ldrb	r0, [r1]
   212dc:	cmp	r0, #34	; 0x22
   212e0:	bne	212ec <main@@Base+0xb5b0>
   212e4:	add	r1, r1, #1
   212e8:	b	21300 <main@@Base+0xb5c4>
   212ec:	mov	r0, r5
   212f0:	mov	r2, r6
   212f4:	mov	r3, #5
   212f8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   212fc:	mov	r1, r0
   21300:	sub	r0, r6, r1
   21304:	cmp	r0, #2
   21308:	blt	21334 <main@@Base+0xb5f8>
   2130c:	ldrb	r0, [r1]
   21310:	cmp	r0, #32
   21314:	bls	21320 <main@@Base+0xb5e4>
   21318:	mov	r7, r1
   2131c:	b	21344 <main@@Base+0xb608>
   21320:	bne	21334 <main@@Base+0xb5f8>
   21324:	mov	r7, r1
   21328:	ldrb	r0, [r7, #1]!
   2132c:	cmp	r0, #32
   21330:	bhi	21344 <main@@Base+0xb608>
   21334:	mov	r0, r5
   21338:	mov	r2, r6
   2133c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21340:	mov	r7, r0
   21344:	cmp	r7, r6
   21348:	beq	2144c <main@@Base+0xb710>
   2134c:	add	r0, sl, #4
   21350:	mov	r1, #0
   21354:	add	r8, sp, #32
   21358:	add	r9, sp, #28
   2135c:	str	sl, [sp, #16]
   21360:	str	r1, [sp, #20]
   21364:	str	r0, [sp, #12]
   21368:	ldr	r4, [sl]
   2136c:	mov	sl, r0
   21370:	add	r0, sp, #24
   21374:	mov	r1, r7
   21378:	mov	r2, r6
   2137c:	mov	r3, r9
   21380:	str	r8, [sp]
   21384:	str	r0, [sp, #4]
   21388:	mov	r0, r5
   2138c:	blx	r4
   21390:	cmp	r0, r6
   21394:	beq	2144c <main@@Base+0xb710>
   21398:	mov	r4, r0
   2139c:	cmp	r0, r7
   213a0:	bne	213b4 <main@@Base+0xb678>
   213a4:	ldr	r4, [sl], #4
   213a8:	cmp	r4, #0
   213ac:	bne	21370 <main@@Base+0xb634>
   213b0:	b	21454 <main@@Base+0xb718>
   213b4:	ldr	r0, [sp, #28]
   213b8:	cmp	r0, #0
   213bc:	beq	213dc <main@@Base+0xb6a0>
   213c0:	mov	r0, r5
   213c4:	mov	r1, r4
   213c8:	mov	r2, r6
   213cc:	mov	r3, #8
   213d0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   213d4:	ldr	sl, [sp, #16]
   213d8:	b	21414 <main@@Base+0xb6d8>
   213dc:	ldr	r0, [sp, #32]
   213e0:	ldr	r1, [sp, #36]	; 0x24
   213e4:	ldr	sl, [sp, #16]
   213e8:	subs	r2, r0, #256	; 0x100
   213ec:	sbcs	r1, r1, #0
   213f0:	bcc	2140c <main@@Base+0xb6d0>
   213f4:	mov	r0, r5
   213f8:	mov	r1, r4
   213fc:	mov	r2, r6
   21400:	mov	r3, #7
   21404:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21408:	b	21414 <main@@Base+0xb6d8>
   2140c:	str	r0, [sp, #20]
   21410:	mov	r0, r4
   21414:	cmp	r0, r6
   21418:	beq	2144c <main@@Base+0xb710>
   2141c:	ldr	r0, [fp, #8]
   21420:	ldr	r2, [sp, #20]
   21424:	mov	r7, r4
   21428:	mov	r1, r0
   2142c:	ldrb	r0, [r0]
   21430:	add	r0, r0, r2
   21434:	strb	r0, [r1]
   21438:	ldr	r0, [sp, #24]
   2143c:	cmp	r0, #0
   21440:	ldr	r0, [sp, #12]
   21444:	bne	21368 <main@@Base+0xb62c>
   21448:	b	2146c <main@@Base+0xb730>
   2144c:	mov	r4, r6
   21450:	b	2146c <main@@Base+0xb730>
   21454:	mov	r0, r5
   21458:	mov	r1, r7
   2145c:	mov	r2, r6
   21460:	mov	r3, #23
   21464:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21468:	mov	r4, r0
   2146c:	mov	r0, r4
   21470:	sub	sp, fp, #28
   21474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2147c:	add	fp, sp, #28
   21480:	sub	sp, sp, #44	; 0x2c
   21484:	mov	r6, r2
   21488:	ldr	r2, [fp, #8]
   2148c:	mov	r5, r0
   21490:	mov	r0, #0
   21494:	mov	sl, r3
   21498:	cmp	r1, r6
   2149c:	strh	r0, [r2]
   214a0:	beq	214cc <main@@Base+0xb790>
   214a4:	ldrb	r0, [r1]
   214a8:	cmp	r0, #34	; 0x22
   214ac:	bne	214b8 <main@@Base+0xb77c>
   214b0:	add	r1, r1, #1
   214b4:	b	214cc <main@@Base+0xb790>
   214b8:	mov	r0, r5
   214bc:	mov	r2, r6
   214c0:	mov	r3, #5
   214c4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   214c8:	mov	r1, r0
   214cc:	sub	r0, r6, r1
   214d0:	cmp	r0, #2
   214d4:	blt	21500 <main@@Base+0xb7c4>
   214d8:	ldrb	r0, [r1]
   214dc:	cmp	r0, #32
   214e0:	bls	214ec <main@@Base+0xb7b0>
   214e4:	mov	r7, r1
   214e8:	b	21510 <main@@Base+0xb7d4>
   214ec:	bne	21500 <main@@Base+0xb7c4>
   214f0:	mov	r7, r1
   214f4:	ldrb	r0, [r7, #1]!
   214f8:	cmp	r0, #32
   214fc:	bhi	21510 <main@@Base+0xb7d4>
   21500:	mov	r0, r5
   21504:	mov	r2, r6
   21508:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2150c:	mov	r7, r0
   21510:	cmp	r7, r6
   21514:	beq	2162c <main@@Base+0xb8f0>
   21518:	add	r0, sl, #4
   2151c:	mov	r2, #0
   21520:	add	r8, sp, #32
   21524:	add	r9, sp, #28
   21528:	str	sl, [sp, #16]
   2152c:	str	r0, [sp, #12]
   21530:	ldr	r4, [sl]
   21534:	mov	sl, r0
   21538:	str	r2, [sp, #20]
   2153c:	add	r0, sp, #24
   21540:	mov	r1, r7
   21544:	mov	r2, r6
   21548:	mov	r3, r9
   2154c:	str	r8, [sp]
   21550:	str	r0, [sp, #4]
   21554:	mov	r0, r5
   21558:	blx	r4
   2155c:	cmp	r0, r6
   21560:	beq	2162c <main@@Base+0xb8f0>
   21564:	mov	r4, r0
   21568:	cmp	r0, r7
   2156c:	bne	21580 <main@@Base+0xb844>
   21570:	ldr	r4, [sl], #4
   21574:	cmp	r4, #0
   21578:	bne	2153c <main@@Base+0xb800>
   2157c:	b	21634 <main@@Base+0xb8f8>
   21580:	ldr	r2, [sp, #28]
   21584:	ldr	r0, [sp, #32]
   21588:	ldr	r1, [sp, #36]	; 0x24
   2158c:	cmp	r2, #0
   21590:	beq	215bc <main@@Base+0xb880>
   21594:	ldr	sl, [sp, #16]
   21598:	movw	r2, #32769	; 0x8001
   2159c:	subs	r2, r0, r2
   215a0:	sbcs	r1, r1, #0
   215a4:	bcc	215e8 <main@@Base+0xb8ac>
   215a8:	mov	r0, r5
   215ac:	mov	r1, r4
   215b0:	mov	r2, r6
   215b4:	mov	r3, #8
   215b8:	b	215dc <main@@Base+0xb8a0>
   215bc:	ldr	sl, [sp, #16]
   215c0:	subs	r2, r0, #32768	; 0x8000
   215c4:	sbcs	r1, r1, #0
   215c8:	bcc	215f0 <main@@Base+0xb8b4>
   215cc:	mov	r0, r5
   215d0:	mov	r1, r4
   215d4:	mov	r2, r6
   215d8:	mov	r3, #7
   215dc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   215e0:	ldr	r2, [sp, #20]
   215e4:	b	215f8 <main@@Base+0xb8bc>
   215e8:	rsb	r2, r0, #0
   215ec:	b	215f4 <main@@Base+0xb8b8>
   215f0:	mov	r2, r0
   215f4:	mov	r0, r4
   215f8:	cmp	r0, r6
   215fc:	beq	2162c <main@@Base+0xb8f0>
   21600:	ldr	r0, [fp, #8]
   21604:	mov	r7, r4
   21608:	mov	r1, r0
   2160c:	ldrh	r0, [r0]
   21610:	add	r0, r0, r2
   21614:	strh	r0, [r1]
   21618:	ldr	r0, [sp, #24]
   2161c:	cmp	r0, #0
   21620:	ldr	r0, [sp, #12]
   21624:	bne	21530 <main@@Base+0xb7f4>
   21628:	b	2164c <main@@Base+0xb910>
   2162c:	mov	r4, r6
   21630:	b	2164c <main@@Base+0xb910>
   21634:	mov	r0, r5
   21638:	mov	r1, r7
   2163c:	mov	r2, r6
   21640:	mov	r3, #23
   21644:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21648:	mov	r4, r0
   2164c:	mov	r0, r4
   21650:	sub	sp, fp, #28
   21654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2165c:	add	fp, sp, #28
   21660:	sub	sp, sp, #28
   21664:	mov	r7, r2
   21668:	mov	r5, r0
   2166c:	cmp	r1, r2
   21670:	beq	216a8 <main@@Base+0xb96c>
   21674:	ldrb	r0, [r1]
   21678:	cmp	r0, #123	; 0x7b
   2167c:	bne	216a8 <main@@Base+0xb96c>
   21680:	add	r2, r1, #1
   21684:	mov	r9, r3
   21688:	sub	r0, r7, r2
   2168c:	cmp	r0, #2
   21690:	blt	216d0 <main@@Base+0xb994>
   21694:	ldrb	r0, [r2]
   21698:	cmp	r0, #32
   2169c:	bls	216c0 <main@@Base+0xb984>
   216a0:	mov	r1, r2
   216a4:	b	216e4 <main@@Base+0xb9a8>
   216a8:	mov	r0, r5
   216ac:	mov	r2, r7
   216b0:	mov	r3, #21
   216b4:	sub	sp, fp, #28
   216b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216bc:	b	316cc <flatcc_json_parser_set_error@@Base>
   216c0:	bne	216d0 <main@@Base+0xb994>
   216c4:	ldrb	r0, [r1, #2]!
   216c8:	cmp	r0, #32
   216cc:	bhi	216e4 <main@@Base+0xb9a8>
   216d0:	mov	r1, r2
   216d4:	mov	r0, r5
   216d8:	mov	r2, r7
   216dc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   216e0:	mov	r1, r0
   216e4:	cmp	r1, r7
   216e8:	mov	r2, r7
   216ec:	beq	21724 <main@@Base+0xb9e8>
   216f0:	ldrb	r0, [r1]
   216f4:	cmp	r0, #125	; 0x7d
   216f8:	bne	21720 <main@@Base+0xb9e4>
   216fc:	add	r2, r1, #1
   21700:	sub	r0, r7, r2
   21704:	cmp	r0, #2
   21708:	blt	21c94 <main@@Base+0xbf58>
   2170c:	ldrb	r0, [r2]
   21710:	cmp	r0, #32
   21714:	bls	21c84 <main@@Base+0xbf48>
   21718:	mov	r1, r2
   2171c:	b	21cec <main@@Base+0xbfb0>
   21720:	mov	r2, r1
   21724:	mov	sl, #-268435456	; 0xf0000000
   21728:	mov	r6, #1627389952	; 0x61000000
   2172c:	cmp	r2, r7
   21730:	mov	r4, r7
   21734:	beq	21764 <main@@Base+0xba28>
   21738:	ldrb	r0, [r2]
   2173c:	cmp	r0, #34	; 0x22
   21740:	bne	2174c <main@@Base+0xba10>
   21744:	add	r4, r2, #1
   21748:	b	21764 <main@@Base+0xba28>
   2174c:	mov	r1, r2
   21750:	mov	r0, r5
   21754:	mov	r2, r7
   21758:	mov	r3, #5
   2175c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21760:	mov	r4, r0
   21764:	sub	r0, r7, r4
   21768:	mov	r1, #8
   2176c:	cmp	r0, #8
   21770:	movcc	r1, r0
   21774:	add	r1, sl, r1, lsl #28
   21778:	asr	r1, r1, #28
   2177c:	cmp	r1, #0
   21780:	blt	219a0 <main@@Base+0xbc64>
   21784:	ldrb	r1, [r4]
   21788:	teq	r6, r1, lsl #24
   2178c:	beq	217dc <main@@Base+0xbaa0>
   21790:	lsl	r1, r1, #24
   21794:	teq	r1, #1644167168	; 0x62000000
   21798:	bne	219a0 <main@@Base+0xbc64>
   2179c:	cmp	r0, #2
   217a0:	mov	r8, r4
   217a4:	blt	21924 <main@@Base+0xbbe8>
   217a8:	ldrb	r0, [r4, #1]
   217ac:	mov	r8, r4
   217b0:	cmp	r0, #34	; 0x22
   217b4:	bne	21924 <main@@Base+0xbbe8>
   217b8:	add	r1, r4, #2
   217bc:	sub	r0, r7, r1
   217c0:	cmp	r0, #2
   217c4:	blt	21830 <main@@Base+0xbaf4>
   217c8:	ldrb	r0, [r1]
   217cc:	cmp	r0, #32
   217d0:	bls	2181c <main@@Base+0xbae0>
   217d4:	mov	r8, r1
   217d8:	b	21840 <main@@Base+0xbb04>
   217dc:	cmp	r0, #2
   217e0:	mov	r6, r4
   217e4:	blt	21a60 <main@@Base+0xbd24>
   217e8:	ldrb	r0, [r4, #1]
   217ec:	mov	r6, r4
   217f0:	cmp	r0, #34	; 0x22
   217f4:	bne	21a60 <main@@Base+0xbd24>
   217f8:	add	r1, r4, #2
   217fc:	sub	r0, r7, r1
   21800:	cmp	r0, #2
   21804:	blt	218a4 <main@@Base+0xbb68>
   21808:	ldrb	r0, [r1]
   2180c:	cmp	r0, #32
   21810:	bls	21890 <main@@Base+0xbb54>
   21814:	mov	r6, r1
   21818:	b	218b4 <main@@Base+0xbb78>
   2181c:	bne	21830 <main@@Base+0xbaf4>
   21820:	mov	r8, r4
   21824:	ldrb	r0, [r8, #3]!
   21828:	cmp	r0, #32
   2182c:	bhi	21840 <main@@Base+0xbb04>
   21830:	mov	r0, r5
   21834:	mov	r2, r7
   21838:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2183c:	mov	r8, r0
   21840:	cmp	r8, r7
   21844:	beq	21878 <main@@Base+0xbb3c>
   21848:	ldrb	r0, [r8]
   2184c:	cmp	r0, #58	; 0x3a
   21850:	bne	21878 <main@@Base+0xbb3c>
   21854:	add	r1, r8, #1
   21858:	sub	r0, r7, r1
   2185c:	cmp	r0, #2
   21860:	blt	21914 <main@@Base+0xbbd8>
   21864:	ldrb	r0, [r1]
   21868:	cmp	r0, #32
   2186c:	bls	21904 <main@@Base+0xbbc8>
   21870:	mov	r8, r1
   21874:	b	21924 <main@@Base+0xbbe8>
   21878:	mov	r0, r5
   2187c:	mov	r1, r8
   21880:	mov	r2, r7
   21884:	mov	r3, #4
   21888:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2188c:	b	21920 <main@@Base+0xbbe4>
   21890:	bne	218a4 <main@@Base+0xbb68>
   21894:	mov	r6, r4
   21898:	ldrb	r0, [r6, #3]!
   2189c:	cmp	r0, #32
   218a0:	bhi	218b4 <main@@Base+0xbb78>
   218a4:	mov	r0, r5
   218a8:	mov	r2, r7
   218ac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   218b0:	mov	r6, r0
   218b4:	cmp	r6, r7
   218b8:	beq	218ec <main@@Base+0xbbb0>
   218bc:	ldrb	r0, [r6]
   218c0:	cmp	r0, #58	; 0x3a
   218c4:	bne	218ec <main@@Base+0xbbb0>
   218c8:	add	r1, r6, #1
   218cc:	sub	r0, r7, r1
   218d0:	cmp	r0, #2
   218d4:	blt	21a50 <main@@Base+0xbd14>
   218d8:	ldrb	r0, [r1]
   218dc:	cmp	r0, #32
   218e0:	bls	21a40 <main@@Base+0xbd04>
   218e4:	mov	r6, r1
   218e8:	b	21a60 <main@@Base+0xbd24>
   218ec:	mov	r0, r5
   218f0:	mov	r1, r6
   218f4:	mov	r2, r7
   218f8:	mov	r3, #4
   218fc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21900:	b	21a5c <main@@Base+0xbd20>
   21904:	bne	21914 <main@@Base+0xbbd8>
   21908:	ldrb	r0, [r8, #2]!
   2190c:	cmp	r0, #32
   21910:	bhi	21924 <main@@Base+0xbbe8>
   21914:	mov	r0, r5
   21918:	mov	r2, r7
   2191c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21920:	mov	r8, r0
   21924:	cmp	r4, r8
   21928:	beq	219a0 <main@@Base+0xbc64>
   2192c:	mov	r4, #0
   21930:	cmp	r8, r7
   21934:	str	r4, [sp, #20]
   21938:	str	r4, [sp, #16]
   2193c:	strb	r4, [sp, #10]
   21940:	str	r4, [sp, #12]
   21944:	beq	219b8 <main@@Base+0xbc7c>
   21948:	add	r0, sp, #16
   2194c:	mov	r1, r8
   21950:	mov	r2, r7
   21954:	add	r3, sp, #12
   21958:	str	r0, [sp]
   2195c:	mov	r0, r5
   21960:	bl	334d0 <flatcc_json_parser_integer@@Base>
   21964:	cmp	r0, r8
   21968:	beq	219c0 <main@@Base+0xbc84>
   2196c:	ldr	r3, [sp, #12]
   21970:	mov	r1, r0
   21974:	ldr	r0, [sp, #16]
   21978:	ldr	r2, [sp, #20]
   2197c:	cmp	r3, #0
   21980:	beq	219c8 <main@@Base+0xbc8c>
   21984:	subs	r3, r0, #129	; 0x81
   21988:	sbcs	r2, r2, #0
   2198c:	bcc	219ec <main@@Base+0xbcb0>
   21990:	mov	r0, r5
   21994:	mov	r2, r7
   21998:	mov	r3, #8
   2199c:	b	219e0 <main@@Base+0xbca4>
   219a0:	mov	r0, r5
   219a4:	mov	r1, r4
   219a8:	mov	r2, r7
   219ac:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   219b0:	mov	r1, r0
   219b4:	b	21b80 <main@@Base+0xbe44>
   219b8:	mov	r1, r7
   219bc:	b	219fc <main@@Base+0xbcc0>
   219c0:	mov	r1, r8
   219c4:	b	219fc <main@@Base+0xbcc0>
   219c8:	subs	r3, r0, #128	; 0x80
   219cc:	sbcs	r2, r2, #0
   219d0:	bcc	219f4 <main@@Base+0xbcb8>
   219d4:	mov	r0, r5
   219d8:	mov	r2, r7
   219dc:	mov	r3, #7
   219e0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   219e4:	mov	r1, r0
   219e8:	b	219fc <main@@Base+0xbcc0>
   219ec:	rsb	r4, r0, #0
   219f0:	b	219f8 <main@@Base+0xbcbc>
   219f4:	mov	r4, r0
   219f8:	strb	r4, [sp, #10]
   219fc:	cmp	r8, r1
   21a00:	bne	21a38 <main@@Base+0xbcfc>
   21a04:	movw	r3, #33224	; 0x81c8
   21a08:	add	r0, sp, #10
   21a0c:	mov	r1, r8
   21a10:	mov	r2, r7
   21a14:	str	r0, [sp]
   21a18:	mov	r0, r5
   21a1c:	movt	r3, #5
   21a20:	bl	210d0 <main@@Base+0xb394>
   21a24:	mov	r1, r0
   21a28:	cmp	r0, r8
   21a2c:	cmpne	r1, r7
   21a30:	beq	21c34 <main@@Base+0xbef8>
   21a34:	ldrb	r4, [sp, #10]
   21a38:	strb	r4, [r9, #2]
   21a3c:	b	21b80 <main@@Base+0xbe44>
   21a40:	bne	21a50 <main@@Base+0xbd14>
   21a44:	ldrb	r0, [r6, #2]!
   21a48:	cmp	r0, #32
   21a4c:	bhi	21a60 <main@@Base+0xbd24>
   21a50:	mov	r0, r5
   21a54:	mov	r2, r7
   21a58:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21a5c:	mov	r6, r0
   21a60:	cmp	r4, r6
   21a64:	beq	21ae0 <main@@Base+0xbda4>
   21a68:	mov	r4, #0
   21a6c:	cmp	r6, r7
   21a70:	str	r4, [sp, #20]
   21a74:	str	r4, [sp, #16]
   21a78:	strh	r4, [sp, #10]
   21a7c:	str	r4, [sp, #12]
   21a80:	beq	21af8 <main@@Base+0xbdbc>
   21a84:	add	r0, sp, #16
   21a88:	mov	r1, r6
   21a8c:	mov	r2, r7
   21a90:	add	r3, sp, #12
   21a94:	str	r0, [sp]
   21a98:	mov	r0, r5
   21a9c:	bl	334d0 <flatcc_json_parser_integer@@Base>
   21aa0:	cmp	r0, r6
   21aa4:	beq	21b00 <main@@Base+0xbdc4>
   21aa8:	ldr	r3, [sp, #12]
   21aac:	mov	r1, r0
   21ab0:	ldr	r0, [sp, #16]
   21ab4:	ldr	r2, [sp, #20]
   21ab8:	cmp	r3, #0
   21abc:	beq	21b08 <main@@Base+0xbdcc>
   21ac0:	movw	r3, #32769	; 0x8001
   21ac4:	subs	r3, r0, r3
   21ac8:	sbcs	r2, r2, #0
   21acc:	bcc	21b2c <main@@Base+0xbdf0>
   21ad0:	mov	r0, r5
   21ad4:	mov	r2, r7
   21ad8:	mov	r3, #8
   21adc:	b	21b20 <main@@Base+0xbde4>
   21ae0:	mov	r0, r5
   21ae4:	mov	r1, r4
   21ae8:	mov	r2, r7
   21aec:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   21af0:	mov	r1, r0
   21af4:	b	21b7c <main@@Base+0xbe40>
   21af8:	mov	r1, r7
   21afc:	b	21b3c <main@@Base+0xbe00>
   21b00:	mov	r1, r6
   21b04:	b	21b3c <main@@Base+0xbe00>
   21b08:	subs	r3, r0, #32768	; 0x8000
   21b0c:	sbcs	r2, r2, #0
   21b10:	bcc	21b34 <main@@Base+0xbdf8>
   21b14:	mov	r0, r5
   21b18:	mov	r2, r7
   21b1c:	mov	r3, #7
   21b20:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21b24:	mov	r1, r0
   21b28:	b	21b3c <main@@Base+0xbe00>
   21b2c:	rsb	r4, r0, #0
   21b30:	b	21b38 <main@@Base+0xbdfc>
   21b34:	mov	r4, r0
   21b38:	strh	r4, [sp, #10]
   21b3c:	cmp	r6, r1
   21b40:	bne	21b78 <main@@Base+0xbe3c>
   21b44:	movw	r3, #33236	; 0x81d4
   21b48:	add	r0, sp, #10
   21b4c:	mov	r1, r6
   21b50:	mov	r2, r7
   21b54:	str	r0, [sp]
   21b58:	mov	r0, r5
   21b5c:	movt	r3, #5
   21b60:	bl	21478 <main@@Base+0xb73c>
   21b64:	mov	r1, r0
   21b68:	cmp	r0, r6
   21b6c:	cmpne	r1, r7
   21b70:	beq	21c34 <main@@Base+0xbef8>
   21b74:	ldrh	r4, [sp, #10]
   21b78:	strh	r4, [r9]
   21b7c:	mov	r6, #1627389952	; 0x61000000
   21b80:	sub	r0, r7, r1
   21b84:	cmp	r0, #2
   21b88:	blt	21bb4 <main@@Base+0xbe78>
   21b8c:	ldrb	r0, [r1]
   21b90:	cmp	r0, #32
   21b94:	bls	21ba0 <main@@Base+0xbe64>
   21b98:	mov	r2, r1
   21b9c:	b	21bc4 <main@@Base+0xbe88>
   21ba0:	bne	21bb4 <main@@Base+0xbe78>
   21ba4:	mov	r2, r1
   21ba8:	ldrb	r0, [r2, #1]!
   21bac:	cmp	r0, #32
   21bb0:	bhi	21bc4 <main@@Base+0xbe88>
   21bb4:	mov	r0, r5
   21bb8:	mov	r2, r7
   21bbc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21bc0:	mov	r2, r0
   21bc4:	cmp	r2, r7
   21bc8:	beq	21c44 <main@@Base+0xbf08>
   21bcc:	ldrb	r0, [r2]
   21bd0:	cmp	r0, #44	; 0x2c
   21bd4:	bne	21c4c <main@@Base+0xbf10>
   21bd8:	add	r1, r2, #1
   21bdc:	sub	r0, r7, r1
   21be0:	cmp	r0, #2
   21be4:	blt	21c0c <main@@Base+0xbed0>
   21be8:	ldrb	r0, [r1]
   21bec:	cmp	r0, #32
   21bf0:	bls	21bfc <main@@Base+0xbec0>
   21bf4:	mov	r2, r1
   21bf8:	b	21c1c <main@@Base+0xbee0>
   21bfc:	bne	21c0c <main@@Base+0xbed0>
   21c00:	ldrb	r0, [r2, #2]!
   21c04:	cmp	r0, #32
   21c08:	bhi	21c1c <main@@Base+0xbee0>
   21c0c:	mov	r0, r5
   21c10:	mov	r2, r7
   21c14:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21c18:	mov	r2, r0
   21c1c:	cmp	r2, r7
   21c20:	beq	21c78 <main@@Base+0xbf3c>
   21c24:	ldrb	r0, [r2]
   21c28:	cmp	r0, #125	; 0x7d
   21c2c:	bne	2172c <main@@Base+0xb9f0>
   21c30:	b	21c54 <main@@Base+0xbf18>
   21c34:	mov	r0, r5
   21c38:	mov	r2, r7
   21c3c:	mov	r3, #33	; 0x21
   21c40:	b	21cbc <main@@Base+0xbf80>
   21c44:	mov	r1, r7
   21c48:	b	21cec <main@@Base+0xbfb0>
   21c4c:	cmp	r0, #125	; 0x7d
   21c50:	bne	21cac <main@@Base+0xbf70>
   21c54:	add	r3, r2, #1
   21c58:	sub	r0, r7, r3
   21c5c:	cmp	r0, #2
   21c60:	blt	21cd8 <main@@Base+0xbf9c>
   21c64:	ldrb	r0, [r3]
   21c68:	cmp	r0, #32
   21c6c:	bls	21cc4 <main@@Base+0xbf88>
   21c70:	mov	r1, r3
   21c74:	b	21cec <main@@Base+0xbfb0>
   21c78:	mov	r0, r5
   21c7c:	mov	r1, r7
   21c80:	b	21cb4 <main@@Base+0xbf78>
   21c84:	bne	21c94 <main@@Base+0xbf58>
   21c88:	ldrb	r0, [r1, #2]!
   21c8c:	cmp	r0, #32
   21c90:	bhi	21cec <main@@Base+0xbfb0>
   21c94:	mov	r1, r2
   21c98:	mov	r0, r5
   21c9c:	mov	r2, r7
   21ca0:	sub	sp, fp, #28
   21ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ca8:	b	31774 <flatcc_json_parser_space_ext@@Base>
   21cac:	mov	r0, r5
   21cb0:	mov	r1, r2
   21cb4:	mov	r2, r7
   21cb8:	mov	r3, #10
   21cbc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21cc0:	b	21ce8 <main@@Base+0xbfac>
   21cc4:	bne	21cd8 <main@@Base+0xbf9c>
   21cc8:	ldrb	r0, [r2, #2]!
   21ccc:	cmp	r0, #32
   21cd0:	mov	r1, r2
   21cd4:	bhi	21cec <main@@Base+0xbfb0>
   21cd8:	mov	r0, r5
   21cdc:	mov	r1, r3
   21ce0:	mov	r2, r7
   21ce4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21ce8:	mov	r1, r0
   21cec:	mov	r0, r1
   21cf0:	sub	sp, fp, #28
   21cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21cf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21cfc:	add	fp, sp, #28
   21d00:	sub	sp, sp, #28
   21d04:	ldr	r5, [fp, #8]
   21d08:	mov	r8, r0
   21d0c:	mov	r0, #0
   21d10:	mov	sl, r2
   21d14:	mov	r4, r1
   21d18:	cmp	r3, #4
   21d1c:	str	r0, [r5]
   21d20:	bhi	21d74 <main@@Base+0xc038>
   21d24:	add	r0, pc, #0
   21d28:	ldr	pc, [r0, r3, lsl #2]
   21d2c:	andeq	r1, r2, r0, asr #26
   21d30:	muleq	r2, ip, sp
   21d34:			; <UNDEFINED> instruction: 0x00021db4
   21d38:	andeq	r1, r2, r8, lsl #28
   21d3c:	andeq	r1, r2, ip, asr lr
   21d40:	sub	r0, sl, r4
   21d44:	cmp	r0, #4
   21d48:	blt	21d60 <main@@Base+0xc024>
   21d4c:	ldr	r0, [r4]
   21d50:	movw	r1, #30062	; 0x756e
   21d54:	movt	r1, #27756	; 0x6c6c
   21d58:	cmp	r0, r1
   21d5c:	beq	21f14 <main@@Base+0xc1d8>
   21d60:	mov	r0, r8
   21d64:	mov	r1, r4
   21d68:	mov	r2, sl
   21d6c:	mov	r3, #26
   21d70:	b	21d90 <main@@Base+0xc054>
   21d74:	ldrb	r0, [r8, #8]
   21d78:	tst	r0, #1
   21d7c:	bne	21ee4 <main@@Base+0xc1a8>
   21d80:	mov	r0, r8
   21d84:	mov	r1, r4
   21d88:	mov	r2, sl
   21d8c:	mov	r3, #15
   21d90:	sub	sp, fp, #28
   21d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d98:	b	316cc <flatcc_json_parser_set_error@@Base>
   21d9c:	mov	r0, r8
   21da0:	mov	r1, r4
   21da4:	mov	r2, sl
   21da8:	mov	r3, r5
   21dac:	bl	165ec <main@@Base+0x8b0>
   21db0:	b	21eac <main@@Base+0xc170>
   21db4:	mov	r0, #0
   21db8:	mov	r1, #4
   21dbc:	str	r0, [r5]
   21dc0:	ldr	r0, [r8]
   21dc4:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   21dc8:	cmp	r0, #0
   21dcc:	bne	21e98 <main@@Base+0xc15c>
   21dd0:	cmp	r4, sl
   21dd4:	beq	21e74 <main@@Base+0xc138>
   21dd8:	ldrb	r0, [r4]
   21ddc:	cmp	r0, #123	; 0x7b
   21de0:	bne	21e74 <main@@Base+0xc138>
   21de4:	add	r1, r4, #1
   21de8:	sub	r0, sl, r1
   21dec:	cmp	r0, #2
   21df0:	blt	21f34 <main@@Base+0xc1f8>
   21df4:	ldrb	r0, [r1]
   21df8:	cmp	r0, #32
   21dfc:	bls	21f24 <main@@Base+0xc1e8>
   21e00:	mov	r4, r1
   21e04:	b	21f44 <main@@Base+0xc208>
   21e08:	mov	r0, #0
   21e0c:	mov	r1, #0
   21e10:	str	r0, [r5]
   21e14:	ldr	r0, [r8]
   21e18:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   21e1c:	cmp	r0, #0
   21e20:	bne	21e98 <main@@Base+0xc15c>
   21e24:	cmp	r4, sl
   21e28:	beq	21e74 <main@@Base+0xc138>
   21e2c:	ldrb	r0, [r4]
   21e30:	cmp	r0, #123	; 0x7b
   21e34:	bne	21e74 <main@@Base+0xc138>
   21e38:	add	r1, r4, #1
   21e3c:	sub	r0, sl, r1
   21e40:	cmp	r0, #2
   21e44:	blt	22990 <main@@Base+0xcc54>
   21e48:	ldrb	r0, [r1]
   21e4c:	cmp	r0, #32
   21e50:	bls	22980 <main@@Base+0xcc44>
   21e54:	mov	r4, r1
   21e58:	b	229a0 <main@@Base+0xcc64>
   21e5c:	mov	r0, r8
   21e60:	mov	r1, r4
   21e64:	mov	r2, sl
   21e68:	mov	r3, r5
   21e6c:	bl	246a8 <main@@Base+0xe96c>
   21e70:	b	21eac <main@@Base+0xc170>
   21e74:	mov	r0, r8
   21e78:	mov	r1, r4
   21e7c:	mov	r2, sl
   21e80:	mov	r3, #21
   21e84:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21e88:	mov	r4, r0
   21e8c:	ldr	r0, [r8, #20]
   21e90:	cmp	r0, #0
   21e94:	beq	21efc <main@@Base+0xc1c0>
   21e98:	mov	r0, r8
   21e9c:	mov	r1, r4
   21ea0:	mov	r2, sl
   21ea4:	mov	r3, #33	; 0x21
   21ea8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21eac:	mov	r4, r0
   21eb0:	ldr	r0, [r8, #20]
   21eb4:	cmp	r0, #0
   21eb8:	bne	21f18 <main@@Base+0xc1dc>
   21ebc:	ldr	r0, [r5]
   21ec0:	cmp	r0, #0
   21ec4:	bne	21f18 <main@@Base+0xc1dc>
   21ec8:	mov	r0, r8
   21ecc:	mov	r1, r4
   21ed0:	mov	r2, sl
   21ed4:	mov	r3, #33	; 0x21
   21ed8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21edc:	mov	r4, r0
   21ee0:	b	21f18 <main@@Base+0xc1dc>
   21ee4:	mov	r0, r8
   21ee8:	mov	r1, r4
   21eec:	mov	r2, sl
   21ef0:	sub	sp, fp, #28
   21ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ef8:	b	31ecc <flatcc_json_parser_generic_json@@Base>
   21efc:	ldr	r0, [r8]
   21f00:	bl	2e138 <flatcc_builder_end_table@@Base>
   21f04:	cmp	r0, #0
   21f08:	str	r0, [r5]
   21f0c:	bne	21eb0 <main@@Base+0xc174>
   21f10:	b	21e98 <main@@Base+0xc15c>
   21f14:	add	r4, r4, #4
   21f18:	mov	r0, r4
   21f1c:	sub	sp, fp, #28
   21f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f24:	bne	21f34 <main@@Base+0xc1f8>
   21f28:	ldrb	r0, [r4, #2]!
   21f2c:	cmp	r0, #32
   21f30:	bhi	21f44 <main@@Base+0xc208>
   21f34:	mov	r0, r8
   21f38:	mov	r2, sl
   21f3c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   21f40:	mov	r4, r0
   21f44:	cmp	r4, sl
   21f48:	mov	r2, sl
   21f4c:	beq	21f60 <main@@Base+0xc224>
   21f50:	ldrb	r0, [r4]
   21f54:	cmp	r0, #125	; 0x7d
   21f58:	beq	229b8 <main@@Base+0xcc7c>
   21f5c:	mov	r2, r4
   21f60:	cmp	r2, sl
   21f64:	mov	r9, sl
   21f68:	beq	21f98 <main@@Base+0xc25c>
   21f6c:	ldrb	r0, [r2]
   21f70:	cmp	r0, #34	; 0x22
   21f74:	bne	21f80 <main@@Base+0xc244>
   21f78:	add	r9, r2, #1
   21f7c:	b	21f98 <main@@Base+0xc25c>
   21f80:	mov	r1, r2
   21f84:	mov	r0, r8
   21f88:	mov	r2, sl
   21f8c:	mov	r3, #5
   21f90:	bl	316cc <flatcc_json_parser_set_error@@Base>
   21f94:	mov	r9, r0
   21f98:	sub	lr, sl, r9
   21f9c:	mov	r0, #8
   21fa0:	cmp	lr, #8
   21fa4:	movcc	r0, lr
   21fa8:	and	r0, r0, #15
   21fac:	sub	r2, r0, #1
   21fb0:	cmp	r2, #7
   21fb4:	bhi	227f8 <main@@Base+0xcabc>
   21fb8:	mov	ip, r5
   21fbc:	add	r5, pc, #24
   21fc0:	mov	r0, #0
   21fc4:	mov	r1, #0
   21fc8:	mov	r3, #0
   21fcc:	mov	r7, #0
   21fd0:	mov	r6, #0
   21fd4:	mov	r4, #0
   21fd8:	ldr	pc, [r5, r2, lsl #2]
   21fdc:	andeq	r2, r2, ip, lsr #32
   21fe0:	andeq	r2, r2, r4, lsr #32
   21fe4:	andeq	r2, r2, ip, lsl r0
   21fe8:	andeq	r2, r2, r4, lsl r0
   21fec:	andeq	r2, r2, r4
   21ff0:	strdeq	r1, [r2], -ip
   21ff4:	strdeq	r1, [r2], -ip
   21ff8:	strdeq	r1, [r2], -ip
   21ffc:	ldrb	r1, [r9, #5]
   22000:	lsl	r1, r1, #16
   22004:	ldrb	r2, [r9, #4]
   22008:	mov	r3, r0
   2200c:	orr	r1, r1, r2, lsl #24
   22010:	mov	r0, r1
   22014:	ldrb	r1, [r9, #3]
   22018:	orr	r7, r1, r3
   2201c:	ldrb	r1, [r9, #2]
   22020:	orr	r6, r7, r1, lsl #8
   22024:	ldrb	r1, [r9, #1]
   22028:	orr	r4, r6, r1, lsl #16
   2202c:	ldrb	r1, [r9]
   22030:	movw	r3, #29234	; 0x7232
   22034:	lsr	r2, r0, #16
   22038:	movt	r3, #27759	; 0x6c6f
   2203c:	orr	r7, r4, r1, lsl #24
   22040:	movw	r1, #25455	; 0x636f
   22044:	orr	r2, r2, r7, lsl #16
   22048:	eor	r1, r1, r7, lsr #16
   2204c:	eor	r2, r2, r3
   22050:	orrs	r1, r2, r1
   22054:	bne	2209c <main@@Base+0xc360>
   22058:	cmp	lr, #7
   2205c:	mov	r6, r9
   22060:	mov	r5, ip
   22064:	blt	22224 <main@@Base+0xc4e8>
   22068:	ldrb	r0, [r9, #6]
   2206c:	mov	r6, r9
   22070:	cmp	r0, #34	; 0x22
   22074:	bne	22224 <main@@Base+0xc4e8>
   22078:	add	r1, r9, #7
   2207c:	sub	r0, sl, r1
   22080:	cmp	r0, #2
   22084:	blt	22110 <main@@Base+0xc3d4>
   22088:	ldrb	r0, [r1]
   2208c:	cmp	r0, #32
   22090:	bls	220fc <main@@Base+0xc3c0>
   22094:	mov	r6, r1
   22098:	b	22128 <main@@Base+0xc3ec>
   2209c:	movw	r1, #27759	; 0x6c6f
   220a0:	and	r0, r0, #-16777216	; 0xff000000
   220a4:	mov	r5, ip
   220a8:	movt	r1, #25455	; 0x636f
   220ac:	eor	r0, r0, #1912602624	; 0x72000000
   220b0:	eor	r1, r7, r1
   220b4:	orrs	r0, r0, r1
   220b8:	bne	223f0 <main@@Base+0xc6b4>
   220bc:	cmp	lr, #6
   220c0:	mov	r6, r9
   220c4:	blt	22370 <main@@Base+0xc634>
   220c8:	ldrb	r0, [r9, #5]
   220cc:	mov	r6, r9
   220d0:	cmp	r0, #34	; 0x22
   220d4:	bne	22370 <main@@Base+0xc634>
   220d8:	add	r1, r9, #6
   220dc:	sub	r0, sl, r1
   220e0:	cmp	r0, #2
   220e4:	blt	22190 <main@@Base+0xc454>
   220e8:	ldrb	r0, [r1]
   220ec:	cmp	r0, #32
   220f0:	bls	2217c <main@@Base+0xc440>
   220f4:	mov	r6, r1
   220f8:	b	221a8 <main@@Base+0xc46c>
   220fc:	bne	22110 <main@@Base+0xc3d4>
   22100:	mov	r6, r9
   22104:	ldrb	r0, [r6, #8]!
   22108:	cmp	r0, #32
   2210c:	bhi	22128 <main@@Base+0xc3ec>
   22110:	mov	r0, r8
   22114:	mov	r2, sl
   22118:	mov	r4, lr
   2211c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22120:	mov	lr, r4
   22124:	mov	r6, r0
   22128:	cmp	r6, sl
   2212c:	beq	22160 <main@@Base+0xc424>
   22130:	ldrb	r0, [r6]
   22134:	cmp	r0, #58	; 0x3a
   22138:	bne	22160 <main@@Base+0xc424>
   2213c:	add	r1, r6, #1
   22140:	sub	r0, sl, r1
   22144:	cmp	r0, #2
   22148:	blt	2220c <main@@Base+0xc4d0>
   2214c:	ldrb	r0, [r1]
   22150:	cmp	r0, #32
   22154:	bls	221fc <main@@Base+0xc4c0>
   22158:	mov	r6, r1
   2215c:	b	22224 <main@@Base+0xc4e8>
   22160:	mov	r0, r8
   22164:	mov	r1, r6
   22168:	mov	r2, sl
   2216c:	mov	r3, #4
   22170:	mov	r4, lr
   22174:	bl	316cc <flatcc_json_parser_set_error@@Base>
   22178:	b	2221c <main@@Base+0xc4e0>
   2217c:	bne	22190 <main@@Base+0xc454>
   22180:	mov	r6, r9
   22184:	ldrb	r0, [r6, #7]!
   22188:	cmp	r0, #32
   2218c:	bhi	221a8 <main@@Base+0xc46c>
   22190:	mov	r0, r8
   22194:	mov	r2, sl
   22198:	mov	r4, lr
   2219c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   221a0:	mov	lr, r4
   221a4:	mov	r6, r0
   221a8:	cmp	r6, sl
   221ac:	beq	221e0 <main@@Base+0xc4a4>
   221b0:	ldrb	r0, [r6]
   221b4:	cmp	r0, #58	; 0x3a
   221b8:	bne	221e0 <main@@Base+0xc4a4>
   221bc:	add	r1, r6, #1
   221c0:	sub	r0, sl, r1
   221c4:	cmp	r0, #2
   221c8:	blt	22358 <main@@Base+0xc61c>
   221cc:	ldrb	r0, [r1]
   221d0:	cmp	r0, #32
   221d4:	bls	22348 <main@@Base+0xc60c>
   221d8:	mov	r6, r1
   221dc:	b	22370 <main@@Base+0xc634>
   221e0:	mov	r0, r8
   221e4:	mov	r1, r6
   221e8:	mov	r2, sl
   221ec:	mov	r3, #4
   221f0:	mov	r4, lr
   221f4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   221f8:	b	22368 <main@@Base+0xc62c>
   221fc:	bne	2220c <main@@Base+0xc4d0>
   22200:	ldrb	r0, [r6, #2]!
   22204:	cmp	r0, #32
   22208:	bhi	22224 <main@@Base+0xc4e8>
   2220c:	mov	r0, r8
   22210:	mov	r2, sl
   22214:	mov	r4, lr
   22218:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2221c:	mov	lr, r4
   22220:	mov	r6, r0
   22224:	cmp	r9, r6
   22228:	beq	223f0 <main@@Base+0xc6b4>
   2222c:	mov	r7, #0
   22230:	cmp	r6, sl
   22234:	str	r7, [sp, #20]
   22238:	str	r7, [sp, #16]
   2223c:	strb	r7, [sp, #11]
   22240:	str	r7, [sp, #12]
   22244:	beq	222a4 <main@@Base+0xc568>
   22248:	add	r0, sp, #16
   2224c:	mov	r1, r6
   22250:	mov	r2, sl
   22254:	add	r3, sp, #12
   22258:	str	r0, [sp]
   2225c:	mov	r0, r8
   22260:	bl	334d0 <flatcc_json_parser_integer@@Base>
   22264:	cmp	r0, r6
   22268:	beq	222ac <main@@Base+0xc570>
   2226c:	ldr	r2, [sp, #12]
   22270:	mov	r4, r0
   22274:	ldr	r0, [sp, #16]
   22278:	ldr	r1, [sp, #20]
   2227c:	cmp	r2, #0
   22280:	beq	222b4 <main@@Base+0xc578>
   22284:	subs	r2, r0, #129	; 0x81
   22288:	sbcs	r1, r1, #0
   2228c:	bcc	222dc <main@@Base+0xc5a0>
   22290:	mov	r0, r8
   22294:	mov	r1, r4
   22298:	mov	r2, sl
   2229c:	mov	r3, #8
   222a0:	b	222d0 <main@@Base+0xc594>
   222a4:	mov	r4, sl
   222a8:	b	222ec <main@@Base+0xc5b0>
   222ac:	mov	r4, r6
   222b0:	b	222ec <main@@Base+0xc5b0>
   222b4:	subs	r2, r0, #128	; 0x80
   222b8:	sbcs	r1, r1, #0
   222bc:	bcc	222e4 <main@@Base+0xc5a8>
   222c0:	mov	r0, r8
   222c4:	mov	r1, r4
   222c8:	mov	r2, sl
   222cc:	mov	r3, #7
   222d0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   222d4:	mov	r4, r0
   222d8:	b	222ec <main@@Base+0xc5b0>
   222dc:	rsb	r7, r0, #0
   222e0:	b	222e8 <main@@Base+0xc5ac>
   222e4:	mov	r7, r0
   222e8:	strb	r7, [sp, #11]
   222ec:	cmp	r6, r4
   222f0:	bne	22328 <main@@Base+0xc5ec>
   222f4:	movw	r3, #33248	; 0x81e0
   222f8:	add	r0, sp, #11
   222fc:	mov	r1, r6
   22300:	mov	r2, sl
   22304:	str	r0, [sp]
   22308:	mov	r0, r8
   2230c:	movt	r3, #5
   22310:	bl	210d0 <main@@Base+0xb394>
   22314:	mov	r4, r0
   22318:	cmp	r0, r6
   2231c:	cmpne	r4, sl
   22320:	beq	21e98 <main@@Base+0xc15c>
   22324:	ldrb	r7, [sp, #11]
   22328:	uxtb	r0, r7
   2232c:	cmp	r0, #2
   22330:	ldrbeq	r0, [r8, #8]
   22334:	tsteq	r0, #2
   22338:	beq	228bc <main@@Base+0xcb80>
   2233c:	ldr	r0, [r8]
   22340:	mov	r1, #1
   22344:	b	225ac <main@@Base+0xc870>
   22348:	bne	22358 <main@@Base+0xc61c>
   2234c:	ldrb	r0, [r6, #2]!
   22350:	cmp	r0, #32
   22354:	bhi	22370 <main@@Base+0xc634>
   22358:	mov	r0, r8
   2235c:	mov	r2, sl
   22360:	mov	r4, lr
   22364:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22368:	mov	lr, r4
   2236c:	mov	r6, r0
   22370:	cmp	r9, r6
   22374:	beq	223f0 <main@@Base+0xc6b4>
   22378:	mov	r7, #0
   2237c:	cmp	r6, sl
   22380:	str	r7, [sp, #20]
   22384:	str	r7, [sp, #16]
   22388:	strb	r7, [sp, #11]
   2238c:	str	r7, [sp, #12]
   22390:	beq	22498 <main@@Base+0xc75c>
   22394:	add	r0, sp, #16
   22398:	mov	r1, r6
   2239c:	mov	r2, sl
   223a0:	add	r3, sp, #12
   223a4:	str	r0, [sp]
   223a8:	mov	r0, r8
   223ac:	bl	334d0 <flatcc_json_parser_integer@@Base>
   223b0:	cmp	r0, r6
   223b4:	beq	224a0 <main@@Base+0xc764>
   223b8:	ldr	r2, [sp, #12]
   223bc:	mov	r4, r0
   223c0:	ldr	r0, [sp, #16]
   223c4:	ldr	r1, [sp, #20]
   223c8:	cmp	r2, #0
   223cc:	beq	224a8 <main@@Base+0xc76c>
   223d0:	subs	r2, r0, #129	; 0x81
   223d4:	sbcs	r1, r1, #0
   223d8:	bcc	224d0 <main@@Base+0xc794>
   223dc:	mov	r0, r8
   223e0:	mov	r1, r4
   223e4:	mov	r2, sl
   223e8:	mov	r3, #8
   223ec:	b	224c4 <main@@Base+0xc788>
   223f0:	movw	r1, #12800	; 0x3200
   223f4:	bic	r0, r7, #255	; 0xff
   223f8:	movt	r1, #30051	; 0x7563
   223fc:	teq	r0, r1
   22400:	bne	22444 <main@@Base+0xc708>
   22404:	cmp	lr, #4
   22408:	mov	r7, r9
   2240c:	blt	2265c <main@@Base+0xc920>
   22410:	ldrb	r0, [r9, #3]
   22414:	mov	r7, r9
   22418:	cmp	r0, #34	; 0x22
   2241c:	bne	2265c <main@@Base+0xc920>
   22420:	add	r1, r9, #4
   22424:	sub	r0, sl, r1
   22428:	cmp	r0, #2
   2242c:	blt	224ec <main@@Base+0xc7b0>
   22430:	ldrb	r0, [r1]
   22434:	cmp	r0, #32
   22438:	bls	224d8 <main@@Base+0xc79c>
   2243c:	mov	r7, r1
   22440:	b	224fc <main@@Base+0xc7c0>
   22444:	movw	r0, #0
   22448:	bfc	r7, #0, #16
   2244c:	movt	r0, #30051	; 0x7563
   22450:	teq	r7, r0
   22454:	bne	227f8 <main@@Base+0xcabc>
   22458:	cmp	lr, #3
   2245c:	mov	r7, r9
   22460:	blt	2278c <main@@Base+0xca50>
   22464:	ldrb	r0, [r9, #2]
   22468:	mov	r7, r9
   2246c:	cmp	r0, #34	; 0x22
   22470:	bne	2278c <main@@Base+0xca50>
   22474:	add	r1, r9, #3
   22478:	sub	r0, sl, r1
   2247c:	cmp	r0, #2
   22480:	blt	225dc <main@@Base+0xc8a0>
   22484:	ldrb	r0, [r1]
   22488:	cmp	r0, #32
   2248c:	bls	225c8 <main@@Base+0xc88c>
   22490:	mov	r7, r1
   22494:	b	225ec <main@@Base+0xc8b0>
   22498:	mov	r4, sl
   2249c:	b	22554 <main@@Base+0xc818>
   224a0:	mov	r4, r6
   224a4:	b	22554 <main@@Base+0xc818>
   224a8:	subs	r2, r0, #128	; 0x80
   224ac:	sbcs	r1, r1, #0
   224b0:	bcc	2254c <main@@Base+0xc810>
   224b4:	mov	r0, r8
   224b8:	mov	r1, r4
   224bc:	mov	r2, sl
   224c0:	mov	r3, #7
   224c4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   224c8:	mov	r4, r0
   224cc:	b	22554 <main@@Base+0xc818>
   224d0:	rsb	r7, r0, #0
   224d4:	b	22550 <main@@Base+0xc814>
   224d8:	bne	224ec <main@@Base+0xc7b0>
   224dc:	mov	r7, r9
   224e0:	ldrb	r0, [r7, #5]!
   224e4:	cmp	r0, #32
   224e8:	bhi	224fc <main@@Base+0xc7c0>
   224ec:	mov	r0, r8
   224f0:	mov	r2, sl
   224f4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   224f8:	mov	r7, r0
   224fc:	cmp	r7, sl
   22500:	beq	22534 <main@@Base+0xc7f8>
   22504:	ldrb	r0, [r7]
   22508:	cmp	r0, #58	; 0x3a
   2250c:	bne	22534 <main@@Base+0xc7f8>
   22510:	add	r1, r7, #1
   22514:	sub	r0, sl, r1
   22518:	cmp	r0, #2
   2251c:	blt	2264c <main@@Base+0xc910>
   22520:	ldrb	r0, [r1]
   22524:	cmp	r0, #32
   22528:	bls	2263c <main@@Base+0xc900>
   2252c:	mov	r7, r1
   22530:	b	2265c <main@@Base+0xc920>
   22534:	mov	r0, r8
   22538:	mov	r1, r7
   2253c:	mov	r2, sl
   22540:	mov	r3, #4
   22544:	bl	316cc <flatcc_json_parser_set_error@@Base>
   22548:	b	22658 <main@@Base+0xc91c>
   2254c:	mov	r7, r0
   22550:	strb	r7, [sp, #11]
   22554:	cmp	r6, r4
   22558:	bne	22590 <main@@Base+0xc854>
   2255c:	movw	r3, #33264	; 0x81f0
   22560:	add	r0, sp, #11
   22564:	mov	r1, r6
   22568:	mov	r2, sl
   2256c:	str	r0, [sp]
   22570:	mov	r0, r8
   22574:	movt	r3, #5
   22578:	bl	210d0 <main@@Base+0xb394>
   2257c:	mov	r4, r0
   22580:	cmp	r0, r6
   22584:	cmpne	r4, sl
   22588:	beq	21e98 <main@@Base+0xc15c>
   2258c:	ldrb	r7, [sp, #11]
   22590:	uxtb	r0, r7
   22594:	cmp	r0, #2
   22598:	ldrbeq	r0, [r8, #8]
   2259c:	tsteq	r0, #2
   225a0:	beq	228bc <main@@Base+0xcb80>
   225a4:	ldr	r0, [r8]
   225a8:	mov	r1, #0
   225ac:	mov	r2, #1
   225b0:	mov	r3, #1
   225b4:	bl	2ea78 <flatcc_builder_table_add@@Base>
   225b8:	cmp	r0, #0
   225bc:	beq	21e98 <main@@Base+0xc15c>
   225c0:	strb	r7, [r0]
   225c4:	b	228bc <main@@Base+0xcb80>
   225c8:	bne	225dc <main@@Base+0xc8a0>
   225cc:	mov	r7, r9
   225d0:	ldrb	r0, [r7, #4]!
   225d4:	cmp	r0, #32
   225d8:	bhi	225ec <main@@Base+0xc8b0>
   225dc:	mov	r0, r8
   225e0:	mov	r2, sl
   225e4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   225e8:	mov	r7, r0
   225ec:	cmp	r7, sl
   225f0:	beq	22624 <main@@Base+0xc8e8>
   225f4:	ldrb	r0, [r7]
   225f8:	cmp	r0, #58	; 0x3a
   225fc:	bne	22624 <main@@Base+0xc8e8>
   22600:	add	r1, r7, #1
   22604:	sub	r0, sl, r1
   22608:	cmp	r0, #2
   2260c:	blt	2277c <main@@Base+0xca40>
   22610:	ldrb	r0, [r1]
   22614:	cmp	r0, #32
   22618:	bls	2276c <main@@Base+0xca30>
   2261c:	mov	r7, r1
   22620:	b	2278c <main@@Base+0xca50>
   22624:	mov	r0, r8
   22628:	mov	r1, r7
   2262c:	mov	r2, sl
   22630:	mov	r3, #4
   22634:	bl	316cc <flatcc_json_parser_set_error@@Base>
   22638:	b	22788 <main@@Base+0xca4c>
   2263c:	bne	2264c <main@@Base+0xc910>
   22640:	ldrb	r0, [r7, #2]!
   22644:	cmp	r0, #32
   22648:	bhi	2265c <main@@Base+0xc920>
   2264c:	mov	r0, r8
   22650:	mov	r2, sl
   22654:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22658:	mov	r7, r0
   2265c:	cmp	r9, r7
   22660:	beq	227f8 <main@@Base+0xcabc>
   22664:	mov	r6, #0
   22668:	cmp	r7, sl
   2266c:	str	r6, [sp, #20]
   22670:	str	r6, [sp, #16]
   22674:	strb	r6, [sp, #11]
   22678:	str	r6, [sp, #12]
   2267c:	beq	226c8 <main@@Base+0xc98c>
   22680:	add	r0, sp, #16
   22684:	mov	r1, r7
   22688:	mov	r2, sl
   2268c:	add	r3, sp, #12
   22690:	str	r0, [sp]
   22694:	mov	r0, r8
   22698:	bl	334d0 <flatcc_json_parser_integer@@Base>
   2269c:	cmp	r0, r7
   226a0:	beq	226d0 <main@@Base+0xc994>
   226a4:	mov	r4, r0
   226a8:	ldr	r0, [sp, #12]
   226ac:	cmp	r0, #0
   226b0:	beq	226d8 <main@@Base+0xc99c>
   226b4:	mov	r0, r8
   226b8:	mov	r1, r4
   226bc:	mov	r2, sl
   226c0:	mov	r3, #8
   226c4:	b	226fc <main@@Base+0xc9c0>
   226c8:	mov	r4, sl
   226cc:	b	22704 <main@@Base+0xc9c8>
   226d0:	mov	r4, r7
   226d4:	b	22704 <main@@Base+0xc9c8>
   226d8:	ldr	r0, [sp, #16]
   226dc:	ldr	r1, [sp, #20]
   226e0:	subs	r2, r0, #256	; 0x100
   226e4:	sbcs	r1, r1, #0
   226e8:	bcc	22760 <main@@Base+0xca24>
   226ec:	mov	r0, r8
   226f0:	mov	r1, r4
   226f4:	mov	r2, sl
   226f8:	mov	r3, #7
   226fc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   22700:	mov	r4, r0
   22704:	cmp	r7, r4
   22708:	bne	22740 <main@@Base+0xca04>
   2270c:	movw	r3, #33280	; 0x8200
   22710:	add	r0, sp, #11
   22714:	mov	r1, r7
   22718:	mov	r2, sl
   2271c:	str	r0, [sp]
   22720:	mov	r0, r8
   22724:	movt	r3, #5
   22728:	bl	212ac <main@@Base+0xb570>
   2272c:	mov	r4, r0
   22730:	cmp	r0, r7
   22734:	cmpne	r4, sl
   22738:	beq	21e98 <main@@Base+0xc15c>
   2273c:	ldrb	r6, [sp, #11]
   22740:	uxtb	r0, r6
   22744:	cmp	r0, #2
   22748:	ldrbeq	r0, [r8, #8]
   2274c:	tsteq	r0, #2
   22750:	beq	228bc <main@@Base+0xcb80>
   22754:	ldr	r0, [r8]
   22758:	mov	r1, #3
   2275c:	b	228a4 <main@@Base+0xcb68>
   22760:	mov	r6, r0
   22764:	strb	r0, [sp, #11]
   22768:	b	22704 <main@@Base+0xc9c8>
   2276c:	bne	2277c <main@@Base+0xca40>
   22770:	ldrb	r0, [r7, #2]!
   22774:	cmp	r0, #32
   22778:	bhi	2278c <main@@Base+0xca50>
   2277c:	mov	r0, r8
   22780:	mov	r2, sl
   22784:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22788:	mov	r7, r0
   2278c:	cmp	r9, r7
   22790:	beq	227f8 <main@@Base+0xcabc>
   22794:	mov	r6, #0
   22798:	cmp	r7, sl
   2279c:	str	r6, [sp, #20]
   227a0:	str	r6, [sp, #16]
   227a4:	strb	r6, [sp, #11]
   227a8:	str	r6, [sp, #12]
   227ac:	beq	22810 <main@@Base+0xcad4>
   227b0:	add	r0, sp, #16
   227b4:	mov	r1, r7
   227b8:	mov	r2, sl
   227bc:	add	r3, sp, #12
   227c0:	str	r0, [sp]
   227c4:	mov	r0, r8
   227c8:	bl	334d0 <flatcc_json_parser_integer@@Base>
   227cc:	cmp	r0, r7
   227d0:	beq	22818 <main@@Base+0xcadc>
   227d4:	mov	r4, r0
   227d8:	ldr	r0, [sp, #12]
   227dc:	cmp	r0, #0
   227e0:	beq	22820 <main@@Base+0xcae4>
   227e4:	mov	r0, r8
   227e8:	mov	r1, r4
   227ec:	mov	r2, sl
   227f0:	mov	r3, #8
   227f4:	b	22844 <main@@Base+0xcb08>
   227f8:	mov	r0, r8
   227fc:	mov	r1, r9
   22800:	mov	r2, sl
   22804:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   22808:	mov	r4, r0
   2280c:	b	228bc <main@@Base+0xcb80>
   22810:	mov	r4, sl
   22814:	b	2284c <main@@Base+0xcb10>
   22818:	mov	r4, r7
   2281c:	b	2284c <main@@Base+0xcb10>
   22820:	ldr	r0, [sp, #16]
   22824:	ldr	r1, [sp, #20]
   22828:	subs	r2, r0, #256	; 0x100
   2282c:	sbcs	r1, r1, #0
   22830:	bcc	22974 <main@@Base+0xcc38>
   22834:	mov	r0, r8
   22838:	mov	r1, r4
   2283c:	mov	r2, sl
   22840:	mov	r3, #7
   22844:	bl	316cc <flatcc_json_parser_set_error@@Base>
   22848:	mov	r4, r0
   2284c:	cmp	r7, r4
   22850:	bne	22888 <main@@Base+0xcb4c>
   22854:	movw	r3, #33292	; 0x820c
   22858:	add	r0, sp, #11
   2285c:	mov	r1, r7
   22860:	mov	r2, sl
   22864:	str	r0, [sp]
   22868:	mov	r0, r8
   2286c:	movt	r3, #5
   22870:	bl	212ac <main@@Base+0xb570>
   22874:	mov	r4, r0
   22878:	cmp	r0, r7
   2287c:	cmpne	r4, sl
   22880:	beq	21e98 <main@@Base+0xc15c>
   22884:	ldrb	r6, [sp, #11]
   22888:	uxtb	r0, r6
   2288c:	cmp	r0, #2
   22890:	ldrbeq	r0, [r8, #8]
   22894:	tsteq	r0, #2
   22898:	beq	228bc <main@@Base+0xcb80>
   2289c:	ldr	r0, [r8]
   228a0:	mov	r1, #2
   228a4:	mov	r2, #1
   228a8:	mov	r3, #1
   228ac:	bl	2ea78 <flatcc_builder_table_add@@Base>
   228b0:	cmp	r0, #0
   228b4:	beq	21e98 <main@@Base+0xc15c>
   228b8:	strb	r6, [r0]
   228bc:	sub	r0, sl, r4
   228c0:	cmp	r0, #2
   228c4:	blt	228f0 <main@@Base+0xcbb4>
   228c8:	ldrb	r0, [r4]
   228cc:	cmp	r0, #32
   228d0:	bls	228dc <main@@Base+0xcba0>
   228d4:	mov	r2, r4
   228d8:	b	22904 <main@@Base+0xcbc8>
   228dc:	bne	228f0 <main@@Base+0xcbb4>
   228e0:	mov	r2, r4
   228e4:	ldrb	r0, [r2, #1]!
   228e8:	cmp	r0, #32
   228ec:	bhi	22904 <main@@Base+0xcbc8>
   228f0:	mov	r0, r8
   228f4:	mov	r1, r4
   228f8:	mov	r2, sl
   228fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22900:	mov	r2, r0
   22904:	cmp	r2, sl
   22908:	beq	22aec <main@@Base+0xcdb0>
   2290c:	ldrb	r0, [r2]
   22910:	cmp	r0, #44	; 0x2c
   22914:	bne	22b48 <main@@Base+0xce0c>
   22918:	add	r1, r2, #1
   2291c:	sub	r0, sl, r1
   22920:	cmp	r0, #2
   22924:	blt	2294c <main@@Base+0xcc10>
   22928:	ldrb	r0, [r1]
   2292c:	cmp	r0, #32
   22930:	bls	2293c <main@@Base+0xcc00>
   22934:	mov	r2, r1
   22938:	b	2295c <main@@Base+0xcc20>
   2293c:	bne	2294c <main@@Base+0xcc10>
   22940:	ldrb	r0, [r2, #2]!
   22944:	cmp	r0, #32
   22948:	bhi	2295c <main@@Base+0xcc20>
   2294c:	mov	r0, r8
   22950:	mov	r2, sl
   22954:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22958:	mov	r2, r0
   2295c:	cmp	r2, sl
   22960:	beq	22af4 <main@@Base+0xcdb8>
   22964:	ldrb	r0, [r2]
   22968:	cmp	r0, #125	; 0x7d
   2296c:	bne	21f60 <main@@Base+0xc224>
   22970:	b	22b50 <main@@Base+0xce14>
   22974:	mov	r6, r0
   22978:	strb	r0, [sp, #11]
   2297c:	b	2284c <main@@Base+0xcb10>
   22980:	bne	22990 <main@@Base+0xcc54>
   22984:	ldrb	r0, [r4, #2]!
   22988:	cmp	r0, #32
   2298c:	bhi	229a0 <main@@Base+0xcc64>
   22990:	mov	r0, r8
   22994:	mov	r2, sl
   22998:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2299c:	mov	r4, r0
   229a0:	cmp	r4, sl
   229a4:	mov	r3, sl
   229a8:	beq	229ec <main@@Base+0xccb0>
   229ac:	ldrb	r0, [r4]
   229b0:	cmp	r0, #125	; 0x7d
   229b4:	bne	229e8 <main@@Base+0xccac>
   229b8:	add	r1, r4, #1
   229bc:	sub	r0, sl, r1
   229c0:	cmp	r0, #2
   229c4:	blt	22b9c <main@@Base+0xce60>
   229c8:	ldrb	r0, [r1]
   229cc:	cmp	r0, #32
   229d0:	bhi	22b6c <main@@Base+0xce30>
   229d4:	bne	22b9c <main@@Base+0xce60>
   229d8:	ldrb	r0, [r4, #2]!
   229dc:	cmp	r0, #32
   229e0:	bhi	21e8c <main@@Base+0xc150>
   229e4:	b	22b9c <main@@Base+0xce60>
   229e8:	mov	r3, r4
   229ec:	cmp	r3, sl
   229f0:	mov	r1, sl
   229f4:	beq	22a24 <main@@Base+0xcce8>
   229f8:	ldrb	r0, [r3]
   229fc:	cmp	r0, #34	; 0x22
   22a00:	bne	22a0c <main@@Base+0xccd0>
   22a04:	add	r1, r3, #1
   22a08:	b	22a24 <main@@Base+0xcce8>
   22a0c:	mov	r1, r3
   22a10:	mov	r0, r8
   22a14:	mov	r2, sl
   22a18:	mov	r3, #5
   22a1c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   22a20:	mov	r1, r0
   22a24:	mov	r0, r8
   22a28:	mov	r2, sl
   22a2c:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   22a30:	mov	r2, r0
   22a34:	sub	r0, sl, r0
   22a38:	cmp	r0, #2
   22a3c:	blt	22a68 <main@@Base+0xcd2c>
   22a40:	ldrb	r0, [r2]
   22a44:	cmp	r0, #32
   22a48:	bls	22a54 <main@@Base+0xcd18>
   22a4c:	mov	r3, r2
   22a50:	b	22a7c <main@@Base+0xcd40>
   22a54:	bne	22a68 <main@@Base+0xcd2c>
   22a58:	mov	r3, r2
   22a5c:	ldrb	r0, [r3, #1]!
   22a60:	cmp	r0, #32
   22a64:	bhi	22a7c <main@@Base+0xcd40>
   22a68:	mov	r1, r2
   22a6c:	mov	r0, r8
   22a70:	mov	r2, sl
   22a74:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22a78:	mov	r3, r0
   22a7c:	cmp	r3, sl
   22a80:	beq	22aec <main@@Base+0xcdb0>
   22a84:	ldrb	r0, [r3]
   22a88:	cmp	r0, #44	; 0x2c
   22a8c:	bne	22b00 <main@@Base+0xcdc4>
   22a90:	add	r1, r3, #1
   22a94:	sub	r0, sl, r1
   22a98:	cmp	r0, #2
   22a9c:	blt	22ac4 <main@@Base+0xcd88>
   22aa0:	ldrb	r0, [r1]
   22aa4:	cmp	r0, #32
   22aa8:	bls	22ab4 <main@@Base+0xcd78>
   22aac:	mov	r3, r1
   22ab0:	b	22ad4 <main@@Base+0xcd98>
   22ab4:	bne	22ac4 <main@@Base+0xcd88>
   22ab8:	ldrb	r0, [r3, #2]!
   22abc:	cmp	r0, #32
   22ac0:	bhi	22ad4 <main@@Base+0xcd98>
   22ac4:	mov	r0, r8
   22ac8:	mov	r2, sl
   22acc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22ad0:	mov	r3, r0
   22ad4:	cmp	r3, sl
   22ad8:	beq	22af4 <main@@Base+0xcdb8>
   22adc:	ldrb	r0, [r3]
   22ae0:	cmp	r0, #125	; 0x7d
   22ae4:	bne	229ec <main@@Base+0xccb0>
   22ae8:	b	22b08 <main@@Base+0xcdcc>
   22aec:	mov	r4, sl
   22af0:	b	21e8c <main@@Base+0xc150>
   22af4:	mov	r0, r8
   22af8:	mov	r1, sl
   22afc:	b	22b7c <main@@Base+0xce40>
   22b00:	cmp	r0, #125	; 0x7d
   22b04:	bne	22b3c <main@@Base+0xce00>
   22b08:	add	r1, r3, #1
   22b0c:	sub	r0, sl, r1
   22b10:	cmp	r0, #2
   22b14:	blt	22b9c <main@@Base+0xce60>
   22b18:	ldrb	r0, [r1]
   22b1c:	cmp	r0, #32
   22b20:	bhi	22b6c <main@@Base+0xce30>
   22b24:	bne	22b9c <main@@Base+0xce60>
   22b28:	ldrb	r0, [r3, #2]!
   22b2c:	cmp	r0, #32
   22b30:	mov	r4, r3
   22b34:	bhi	21e8c <main@@Base+0xc150>
   22b38:	b	22b9c <main@@Base+0xce60>
   22b3c:	mov	r0, r8
   22b40:	mov	r1, r3
   22b44:	b	22b7c <main@@Base+0xce40>
   22b48:	cmp	r0, #125	; 0x7d
   22b4c:	bne	22b74 <main@@Base+0xce38>
   22b50:	add	r1, r2, #1
   22b54:	sub	r0, sl, r1
   22b58:	cmp	r0, #2
   22b5c:	blt	22b9c <main@@Base+0xce60>
   22b60:	ldrb	r0, [r1]
   22b64:	cmp	r0, #32
   22b68:	bls	22b88 <main@@Base+0xce4c>
   22b6c:	mov	r4, r1
   22b70:	b	21e8c <main@@Base+0xc150>
   22b74:	mov	r0, r8
   22b78:	mov	r1, r2
   22b7c:	mov	r2, sl
   22b80:	mov	r3, #10
   22b84:	b	21e84 <main@@Base+0xc148>
   22b88:	bne	22b9c <main@@Base+0xce60>
   22b8c:	ldrb	r0, [r2, #2]!
   22b90:	cmp	r0, #32
   22b94:	mov	r4, r2
   22b98:	bhi	21e8c <main@@Base+0xc150>
   22b9c:	mov	r0, r8
   22ba0:	mov	r2, sl
   22ba4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   22ba8:	b	21e88 <main@@Base+0xc14c>
   22bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22bb0:	add	fp, sp, #28
   22bb4:	sub	sp, sp, #20
   22bb8:	mov	sl, r1
   22bbc:	sub	r1, r2, r1
   22bc0:	cmp	r1, #8
   22bc4:	movcs	r1, #8
   22bc8:	and	r1, r1, #15
   22bcc:	sub	r5, r1, #1
   22bd0:	cmp	r5, #7
   22bd4:	bhi	22dd8 <main@@Base+0xd09c>
   22bd8:	str	r2, [sp, #16]
   22bdc:	str	r0, [sp, #12]
   22be0:	add	r0, pc, #36	; 0x24
   22be4:	mov	lr, r3
   22be8:	mov	r8, #0
   22bec:	mov	ip, #0
   22bf0:	mov	r2, #0
   22bf4:	mov	r1, #0
   22bf8:	mov	r3, #0
   22bfc:	mov	r7, #0
   22c00:	mov	r6, #0
   22c04:	mov	r4, #0
   22c08:	ldr	pc, [r0, r5, lsl #2]
   22c0c:	andeq	r2, r2, r0, ror ip
   22c10:	andeq	r2, r2, r8, ror #24
   22c14:	andeq	r2, r2, r0, ror #24
   22c18:	andeq	r2, r2, r8, asr ip
   22c1c:	andeq	r2, r2, ip, asr #24
   22c20:	andeq	r2, r2, r0, asr #24
   22c24:	andeq	r2, r2, r0, lsr ip
   22c28:	andeq	r2, r2, ip, lsr #24
   22c2c:	ldrb	ip, [sl, #7]
   22c30:	ldrb	r0, [sl, #6]
   22c34:	mov	r2, r8
   22c38:	orr	r0, ip, r0, lsl #8
   22c3c:	mov	r8, r0
   22c40:	ldrb	r0, [sl, #5]
   22c44:	mov	r1, r2
   22c48:	orr	r8, r8, r0, lsl #16
   22c4c:	ldrb	r0, [sl, #4]
   22c50:	mov	r3, r1
   22c54:	orr	r8, r8, r0, lsl #24
   22c58:	ldrb	r0, [sl, #3]
   22c5c:	orr	r7, r0, r3
   22c60:	ldrb	r0, [sl, #2]
   22c64:	orr	r6, r7, r0, lsl #8
   22c68:	ldrb	r0, [sl, #1]
   22c6c:	orr	r4, r6, r0, lsl #16
   22c70:	ldrb	r0, [sl]
   22c74:	ldr	r7, [fp, #12]
   22c78:	ldr	r5, [fp, #8]
   22c7c:	movw	r1, #28275	; 0x6e73
   22c80:	movt	r1, #19823	; 0x4d6f
   22c84:	orr	r9, r4, r0, lsl #24
   22c88:	movw	r0, #29184	; 0x7200
   22c8c:	movt	r0, #29797	; 0x7465
   22c90:	subs	r2, r8, r0
   22c94:	sbcs	r2, r9, r1
   22c98:	bcs	22ce0 <main@@Base+0xcfa4>
   22c9c:	movw	r1, #29696	; 0x7400
   22ca0:	bic	r0, r9, #255	; 0xff
   22ca4:	movt	r1, #16748	; 0x416c
   22ca8:	teq	r0, r1
   22cac:	bne	22dd8 <main@@Base+0xd09c>
   22cb0:	ldr	r0, [sp, #12]
   22cb4:	ldr	r2, [sp, #16]
   22cb8:	mov	r1, sl
   22cbc:	mov	r3, #3
   22cc0:	mov	r4, lr
   22cc4:	str	r7, [sp]
   22cc8:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   22ccc:	cmp	r0, sl
   22cd0:	beq	22dd8 <main@@Base+0xd09c>
   22cd4:	mov	r1, #0
   22cd8:	mov	r2, #4
   22cdc:	b	22d20 <main@@Base+0xcfe4>
   22ce0:	add	r2, r0, #50	; 0x32
   22ce4:	eor	r1, r9, r1
   22ce8:	eor	r2, r8, r2
   22cec:	orrs	r2, r2, r1
   22cf0:	bne	22d30 <main@@Base+0xcff4>
   22cf4:	ldr	r0, [sp, #12]
   22cf8:	ldr	r2, [sp, #16]
   22cfc:	mov	r1, sl
   22d00:	mov	r3, #8
   22d04:	mov	r4, lr
   22d08:	str	r7, [sp]
   22d0c:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   22d10:	cmp	r0, sl
   22d14:	beq	22dd8 <main@@Base+0xd09c>
   22d18:	mov	r1, #0
   22d1c:	mov	r2, #3
   22d20:	str	r2, [r5]
   22d24:	str	r1, [r5, #4]
   22d28:	str	r1, [r4]
   22d2c:	b	22dd4 <main@@Base+0xd098>
   22d30:	ldr	r5, [sp, #16]
   22d34:	ldr	r6, [sp, #12]
   22d38:	bic	r2, r8, #255	; 0xff
   22d3c:	eor	r0, r2, r0
   22d40:	orrs	r0, r0, r1
   22d44:	bne	22d88 <main@@Base+0xd04c>
   22d48:	mov	r0, r6
   22d4c:	mov	r1, sl
   22d50:	mov	r2, r5
   22d54:	mov	r3, #7
   22d58:	str	r7, [sp]
   22d5c:	mov	r4, lr
   22d60:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   22d64:	mov	lr, r4
   22d68:	cmp	r0, sl
   22d6c:	beq	22d88 <main@@Base+0xd04c>
   22d70:	ldr	r3, [fp, #8]
   22d74:	mov	r1, #0
   22d78:	mov	r2, #1
   22d7c:	str	r2, [r3]
   22d80:	str	r1, [r3, #4]
   22d84:	b	22dd0 <main@@Base+0xd094>
   22d88:	movw	r0, #20037	; 0x4e45
   22d8c:	movt	r0, #20047	; 0x4e4f
   22d90:	teq	r9, r0
   22d94:	bne	22de4 <main@@Base+0xd0a8>
   22d98:	mov	r0, r6
   22d9c:	mov	r1, sl
   22da0:	mov	r2, r5
   22da4:	mov	r3, #4
   22da8:	str	r7, [sp]
   22dac:	mov	r4, lr
   22db0:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   22db4:	mov	lr, r4
   22db8:	cmp	r0, sl
   22dbc:	beq	22de4 <main@@Base+0xd0a8>
   22dc0:	ldr	r2, [fp, #8]
   22dc4:	mov	r1, #0
   22dc8:	str	r1, [r2]
   22dcc:	str	r1, [r2, #4]
   22dd0:	str	r1, [lr]
   22dd4:	mov	sl, r0
   22dd8:	mov	r0, sl
   22ddc:	sub	sp, fp, #28
   22de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22de4:	movw	r0, #28016	; 0x6d70
   22de8:	movw	r1, #29556	; 0x7374
   22dec:	movt	r0, #21353	; 0x5369
   22df0:	movt	r1, #21605	; 0x5465
   22df4:	eor	r0, r8, r0
   22df8:	eor	r1, r9, r1
   22dfc:	orrs	r0, r0, r1
   22e00:	bne	22dd8 <main@@Base+0xd09c>
   22e04:	str	lr, [sp, #8]
   22e08:	add	lr, sl, #8
   22e0c:	sub	r0, r5, lr
   22e10:	cmp	r0, #8
   22e14:	movcs	r0, #8
   22e18:	and	r0, r0, #15
   22e1c:	sub	r5, r0, #1
   22e20:	cmp	r5, #7
   22e24:	bhi	22dd8 <main@@Base+0xd09c>
   22e28:	add	r1, pc, #32
   22e2c:	mov	r9, #0
   22e30:	mov	ip, #0
   22e34:	mov	r8, #0
   22e38:	mov	r2, #0
   22e3c:	mov	r3, #0
   22e40:	mov	r0, #0
   22e44:	mov	r4, #0
   22e48:	mov	r6, #0
   22e4c:	ldr	pc, [r1, r5, lsl #2]
   22e50:			; <UNDEFINED> instruction: 0x00022eb4
   22e54:	andeq	r2, r2, ip, lsr #29
   22e58:	andeq	r2, r2, r4, lsr #29
   22e5c:	muleq	r2, ip, lr
   22e60:	muleq	r2, r0, lr
   22e64:	andeq	r2, r2, r4, lsl #29
   22e68:	andeq	r2, r2, r4, ror lr
   22e6c:	andeq	r2, r2, r0, ror lr
   22e70:	ldrb	ip, [sl, #15]
   22e74:	ldrb	r0, [sl, #14]
   22e78:	mov	r8, r9
   22e7c:	orr	r0, ip, r0, lsl #8
   22e80:	mov	r9, r0
   22e84:	ldrb	r0, [sl, #13]
   22e88:	mov	r2, r8
   22e8c:	orr	r9, r9, r0, lsl #16
   22e90:	ldrb	r0, [sl, #12]
   22e94:	mov	r3, r2
   22e98:	orr	r9, r9, r0, lsl #24
   22e9c:	ldrb	r0, [sl, #11]
   22ea0:	orr	r0, r0, r3
   22ea4:	ldrb	r1, [sl, #10]
   22ea8:	orr	r4, r0, r1, lsl #8
   22eac:	ldrb	r0, [sl, #9]
   22eb0:	orr	r6, r4, r0, lsl #16
   22eb4:	ldrb	r1, [lr]
   22eb8:	movw	r0, #25943	; 0x6557
   22ebc:	movw	r2, #21601	; 0x5461
   22ec0:	movt	r0, #25196	; 0x626c
   22ec4:	movt	r2, #27749	; 0x6c65
   22ec8:	eor	r0, r9, r0
   22ecc:	orr	r1, r6, r1, lsl #24
   22ed0:	eor	r1, r1, r2
   22ed4:	orrs	r0, r0, r1
   22ed8:	bne	22dd8 <main@@Base+0xd09c>
   22edc:	ldr	r0, [sp, #16]
   22ee0:	add	r9, sl, #16
   22ee4:	sub	r0, r0, r9
   22ee8:	cmp	r0, #8
   22eec:	movcs	r0, #8
   22ef0:	and	r0, r0, #15
   22ef4:	sub	r3, r0, #1
   22ef8:	cmp	r3, #7
   22efc:	bhi	22dd8 <main@@Base+0xd09c>
   22f00:	add	r1, pc, #28
   22f04:	mov	r0, #0
   22f08:	mov	ip, #0
   22f0c:	mov	lr, #0
   22f10:	mov	r2, #0
   22f14:	mov	r5, #0
   22f18:	mov	r6, #0
   22f1c:	mov	r4, #0
   22f20:	ldr	pc, [r1, r3, lsl #2]
   22f24:	andeq	r2, r2, r0, lsl #31
   22f28:	andeq	r2, r2, r8, ror pc
   22f2c:	andeq	r2, r2, r0, ror pc
   22f30:	andeq	r2, r2, r8, ror #30
   22f34:	andeq	r2, r2, ip, asr pc
   22f38:	andeq	r2, r2, ip, asr #30
   22f3c:	andeq	r2, r2, r4, asr #30
   22f40:	andeq	r2, r2, r4, asr #30
   22f44:	ldrb	r1, [sl, #22]
   22f48:	lsl	ip, r1, #8
   22f4c:	ldrb	r1, [sl, #21]
   22f50:	mov	lr, r0
   22f54:	orr	r1, ip, r1, lsl #16
   22f58:	mov	r0, r1
   22f5c:	ldrb	r1, [sl, #20]
   22f60:	mov	r2, lr
   22f64:	orr	r0, r0, r1, lsl #24
   22f68:	ldrb	r1, [sl, #19]
   22f6c:	orr	r5, r1, r2
   22f70:	ldrb	r1, [sl, #18]
   22f74:	orr	r6, r5, r1, lsl #8
   22f78:	ldrb	r1, [sl, #17]
   22f7c:	orr	r4, r6, r1, lsl #16
   22f80:	movw	r1, #27904	; 0x6d00
   22f84:	movw	r2, #26693	; 0x6845
   22f88:	movt	r1, #28277	; 0x6e75
   22f8c:	movt	r2, #26996	; 0x6974
   22f90:	eor	r0, r0, r1
   22f94:	ldrb	r1, [r9]
   22f98:	orr	r1, r4, r1, lsl #24
   22f9c:	eor	r1, r1, r2
   22fa0:	orrs	r0, r0, r1
   22fa4:	bne	22dd8 <main@@Base+0xd09c>
   22fa8:	ldr	r0, [sp, #12]
   22fac:	ldr	r2, [sp, #16]
   22fb0:	mov	r1, r9
   22fb4:	mov	r3, #7
   22fb8:	str	r7, [sp]
   22fbc:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   22fc0:	ldr	r3, [fp, #8]
   22fc4:	cmp	r0, r9
   22fc8:	beq	22dd8 <main@@Base+0xd09c>
   22fcc:	mov	r2, #2
   22fd0:	mov	r1, #0
   22fd4:	str	r2, [r3]
   22fd8:	str	r1, [r3, #4]
   22fdc:	ldr	r2, [sp, #8]
   22fe0:	str	r1, [r2]
   22fe4:	b	22dd4 <main@@Base+0xd098>
   22fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fec:	add	fp, sp, #28
   22ff0:	sub	sp, sp, #44	; 0x2c
   22ff4:	mov	r7, r2
   22ff8:	ldr	r2, [fp, #8]
   22ffc:	mov	r5, r0
   23000:	mov	r0, #0
   23004:	mov	sl, r3
   23008:	cmp	r1, r7
   2300c:	strb	r0, [r2]
   23010:	beq	2303c <main@@Base+0xd300>
   23014:	ldrb	r0, [r1]
   23018:	cmp	r0, #34	; 0x22
   2301c:	bne	23028 <main@@Base+0xd2ec>
   23020:	add	r1, r1, #1
   23024:	b	2303c <main@@Base+0xd300>
   23028:	mov	r0, r5
   2302c:	mov	r2, r7
   23030:	mov	r3, #5
   23034:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23038:	mov	r1, r0
   2303c:	sub	r0, r7, r1
   23040:	cmp	r0, #2
   23044:	blt	23070 <main@@Base+0xd334>
   23048:	ldrb	r0, [r1]
   2304c:	cmp	r0, #32
   23050:	bls	2305c <main@@Base+0xd320>
   23054:	mov	r6, r1
   23058:	b	23080 <main@@Base+0xd344>
   2305c:	bne	23070 <main@@Base+0xd334>
   23060:	mov	r6, r1
   23064:	ldrb	r0, [r6, #1]!
   23068:	cmp	r0, #32
   2306c:	bhi	23080 <main@@Base+0xd344>
   23070:	mov	r0, r5
   23074:	mov	r2, r7
   23078:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2307c:	mov	r6, r0
   23080:	cmp	r6, r7
   23084:	beq	23168 <main@@Base+0xd42c>
   23088:	add	r0, sl, #4
   2308c:	mov	r1, #0
   23090:	add	r8, sp, #32
   23094:	add	r9, sp, #28
   23098:	str	sl, [sp, #16]
   2309c:	str	r1, [sp, #20]
   230a0:	str	r0, [sp, #12]
   230a4:	ldr	r4, [sl]
   230a8:	mov	sl, r0
   230ac:	add	r0, sp, #24
   230b0:	mov	r1, r6
   230b4:	mov	r2, r7
   230b8:	mov	r3, r9
   230bc:	str	r8, [sp]
   230c0:	str	r0, [sp, #4]
   230c4:	mov	r0, r5
   230c8:	blx	r4
   230cc:	cmp	r0, r7
   230d0:	beq	23168 <main@@Base+0xd42c>
   230d4:	mov	r4, r0
   230d8:	cmp	r0, r6
   230dc:	bne	230f0 <main@@Base+0xd3b4>
   230e0:	ldr	r4, [sl], #4
   230e4:	cmp	r4, #0
   230e8:	bne	230ac <main@@Base+0xd370>
   230ec:	b	23170 <main@@Base+0xd434>
   230f0:	ldr	r0, [sp, #28]
   230f4:	cmp	r0, #0
   230f8:	beq	23114 <main@@Base+0xd3d8>
   230fc:	mov	r0, r5
   23100:	mov	r1, r4
   23104:	mov	r2, r7
   23108:	mov	r3, #8
   2310c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23110:	b	2312c <main@@Base+0xd3f0>
   23114:	ldr	r0, [sp, #32]
   23118:	ldr	r1, [sp, #36]	; 0x24
   2311c:	orrs	r0, r0, r1
   23120:	movwne	r0, #1
   23124:	str	r0, [sp, #20]
   23128:	mov	r0, r4
   2312c:	ldr	sl, [sp, #16]
   23130:	cmp	r0, r7
   23134:	beq	23168 <main@@Base+0xd42c>
   23138:	ldr	r0, [fp, #8]
   2313c:	ldr	r2, [sp, #20]
   23140:	mov	r6, r4
   23144:	mov	r1, r0
   23148:	ldrb	r0, [r0]
   2314c:	add	r0, r0, r2
   23150:	strb	r0, [r1]
   23154:	ldr	r0, [sp, #24]
   23158:	cmp	r0, #0
   2315c:	ldr	r0, [sp, #12]
   23160:	bne	230a4 <main@@Base+0xd368>
   23164:	b	23188 <main@@Base+0xd44c>
   23168:	mov	r4, r7
   2316c:	b	23188 <main@@Base+0xd44c>
   23170:	mov	r0, r5
   23174:	mov	r1, r6
   23178:	mov	r2, r7
   2317c:	mov	r3, #23
   23180:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23184:	mov	r4, r0
   23188:	mov	r0, r4
   2318c:	sub	sp, fp, #28
   23190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23198:	add	fp, sp, #28
   2319c:	sub	sp, sp, #36	; 0x24
   231a0:	mov	r6, r2
   231a4:	ldr	r2, [fp, #8]
   231a8:	mov	r5, r0
   231ac:	mov	r0, #0
   231b0:	mov	r8, r3
   231b4:	cmp	r1, r6
   231b8:	str	r0, [r2]
   231bc:	beq	231e8 <main@@Base+0xd4ac>
   231c0:	ldrb	r0, [r1]
   231c4:	cmp	r0, #34	; 0x22
   231c8:	bne	231d4 <main@@Base+0xd498>
   231cc:	add	r1, r1, #1
   231d0:	b	231e8 <main@@Base+0xd4ac>
   231d4:	mov	r0, r5
   231d8:	mov	r2, r6
   231dc:	mov	r3, #5
   231e0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   231e4:	mov	r1, r0
   231e8:	sub	r0, r6, r1
   231ec:	cmp	r0, #2
   231f0:	blt	2321c <main@@Base+0xd4e0>
   231f4:	ldrb	r0, [r1]
   231f8:	cmp	r0, #32
   231fc:	bls	23208 <main@@Base+0xd4cc>
   23200:	mov	r7, r1
   23204:	b	2322c <main@@Base+0xd4f0>
   23208:	bne	2321c <main@@Base+0xd4e0>
   2320c:	mov	r7, r1
   23210:	ldrb	r0, [r7, #1]!
   23214:	cmp	r0, #32
   23218:	bhi	2322c <main@@Base+0xd4f0>
   2321c:	mov	r0, r5
   23220:	mov	r2, r6
   23224:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   23228:	mov	r7, r0
   2322c:	cmp	r7, r6
   23230:	beq	232e0 <main@@Base+0xd5a4>
   23234:	add	r0, r8, #4
   23238:	add	sl, sp, #24
   2323c:	add	r9, sp, #20
   23240:	str	r8, [sp, #12]
   23244:	str	r0, [sp, #8]
   23248:	ldr	r4, [r8]
   2324c:	mov	r8, r0
   23250:	add	r0, sp, #16
   23254:	mov	r1, r7
   23258:	mov	r2, r6
   2325c:	mov	r3, r9
   23260:	str	sl, [sp]
   23264:	str	r0, [sp, #4]
   23268:	mov	r0, r5
   2326c:	blx	r4
   23270:	cmp	r0, r6
   23274:	beq	232e0 <main@@Base+0xd5a4>
   23278:	mov	r4, r0
   2327c:	cmp	r0, r7
   23280:	bne	23294 <main@@Base+0xd558>
   23284:	ldr	r4, [r8], #4
   23288:	cmp	r4, #0
   2328c:	bne	23250 <main@@Base+0xd514>
   23290:	b	232e8 <main@@Base+0xd5ac>
   23294:	ldr	r0, [sp, #24]
   23298:	ldr	r1, [sp, #28]
   2329c:	bl	40fe8 <flatcc_json_printer_clear@@Base+0xb04>
   232a0:	ldr	r2, [fp, #8]
   232a4:	ldr	r1, [sp, #20]
   232a8:	vmov	s2, r0
   232ac:	ldr	r8, [sp, #12]
   232b0:	mov	r7, r4
   232b4:	vneg.f32	s4, s2
   232b8:	vldr	s0, [r2]
   232bc:	cmp	r1, #0
   232c0:	vseleq.f32	s2, s2, s4
   232c4:	vadd.f32	s0, s0, s2
   232c8:	vstr	s0, [r2]
   232cc:	ldr	r0, [sp, #16]
   232d0:	cmp	r0, #0
   232d4:	ldr	r0, [sp, #8]
   232d8:	bne	23248 <main@@Base+0xd50c>
   232dc:	b	23300 <main@@Base+0xd5c4>
   232e0:	mov	r4, r6
   232e4:	b	23300 <main@@Base+0xd5c4>
   232e8:	mov	r0, r5
   232ec:	mov	r1, r7
   232f0:	mov	r2, r6
   232f4:	mov	r3, #23
   232f8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   232fc:	mov	r4, r0
   23300:	mov	r0, r4
   23304:	sub	sp, fp, #28
   23308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2330c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23310:	add	fp, sp, #28
   23314:	sub	sp, sp, #44	; 0x2c
   23318:	mov	r6, r2
   2331c:	ldr	r2, [fp, #8]
   23320:	mov	r5, r0
   23324:	mov	r0, #0
   23328:	mov	sl, r3
   2332c:	cmp	r1, r6
   23330:	str	r0, [r2]
   23334:	beq	23360 <main@@Base+0xd624>
   23338:	ldrb	r0, [r1]
   2333c:	cmp	r0, #34	; 0x22
   23340:	bne	2334c <main@@Base+0xd610>
   23344:	add	r1, r1, #1
   23348:	b	23360 <main@@Base+0xd624>
   2334c:	mov	r0, r5
   23350:	mov	r2, r6
   23354:	mov	r3, #5
   23358:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2335c:	mov	r1, r0
   23360:	sub	r0, r6, r1
   23364:	cmp	r0, #2
   23368:	blt	23394 <main@@Base+0xd658>
   2336c:	ldrb	r0, [r1]
   23370:	cmp	r0, #32
   23374:	bls	23380 <main@@Base+0xd644>
   23378:	mov	r7, r1
   2337c:	b	233a4 <main@@Base+0xd668>
   23380:	bne	23394 <main@@Base+0xd658>
   23384:	mov	r7, r1
   23388:	ldrb	r0, [r7, #1]!
   2338c:	cmp	r0, #32
   23390:	bhi	233a4 <main@@Base+0xd668>
   23394:	mov	r0, r5
   23398:	mov	r2, r6
   2339c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   233a0:	mov	r7, r0
   233a4:	cmp	r7, r6
   233a8:	beq	234bc <main@@Base+0xd780>
   233ac:	add	r0, sl, #4
   233b0:	mov	r2, #0
   233b4:	add	r8, sp, #32
   233b8:	add	r9, sp, #28
   233bc:	str	sl, [sp, #16]
   233c0:	str	r0, [sp, #12]
   233c4:	ldr	r4, [sl]
   233c8:	mov	sl, r0
   233cc:	str	r2, [sp, #20]
   233d0:	add	r0, sp, #24
   233d4:	mov	r1, r7
   233d8:	mov	r2, r6
   233dc:	mov	r3, r9
   233e0:	str	r8, [sp]
   233e4:	str	r0, [sp, #4]
   233e8:	mov	r0, r5
   233ec:	blx	r4
   233f0:	cmp	r0, r6
   233f4:	beq	234bc <main@@Base+0xd780>
   233f8:	mov	r4, r0
   233fc:	cmp	r0, r7
   23400:	bne	23414 <main@@Base+0xd6d8>
   23404:	ldr	r4, [sl], #4
   23408:	cmp	r4, #0
   2340c:	bne	233d0 <main@@Base+0xd694>
   23410:	b	234c4 <main@@Base+0xd788>
   23414:	ldr	r2, [sp, #28]
   23418:	ldr	r0, [sp, #32]
   2341c:	ldr	r1, [sp, #36]	; 0x24
   23420:	cmp	r2, #0
   23424:	beq	2344c <main@@Base+0xd710>
   23428:	ldr	sl, [sp, #16]
   2342c:	subs	r2, r0, #-2147483647	; 0x80000001
   23430:	sbcs	r1, r1, #0
   23434:	bcc	23478 <main@@Base+0xd73c>
   23438:	mov	r0, r5
   2343c:	mov	r1, r4
   23440:	mov	r2, r6
   23444:	mov	r3, #8
   23448:	b	2346c <main@@Base+0xd730>
   2344c:	ldr	sl, [sp, #16]
   23450:	subs	r2, r0, #-2147483648	; 0x80000000
   23454:	sbcs	r1, r1, #0
   23458:	bcc	23480 <main@@Base+0xd744>
   2345c:	mov	r0, r5
   23460:	mov	r1, r4
   23464:	mov	r2, r6
   23468:	mov	r3, #7
   2346c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23470:	ldr	r2, [sp, #20]
   23474:	b	23488 <main@@Base+0xd74c>
   23478:	rsb	r2, r0, #0
   2347c:	b	23484 <main@@Base+0xd748>
   23480:	mov	r2, r0
   23484:	mov	r0, r4
   23488:	cmp	r0, r6
   2348c:	beq	234bc <main@@Base+0xd780>
   23490:	ldr	r0, [fp, #8]
   23494:	mov	r7, r4
   23498:	mov	r1, r0
   2349c:	ldr	r0, [r0]
   234a0:	add	r0, r0, r2
   234a4:	str	r0, [r1]
   234a8:	ldr	r0, [sp, #24]
   234ac:	cmp	r0, #0
   234b0:	ldr	r0, [sp, #12]
   234b4:	bne	233c4 <main@@Base+0xd688>
   234b8:	b	234dc <main@@Base+0xd7a0>
   234bc:	mov	r4, r6
   234c0:	b	234dc <main@@Base+0xd7a0>
   234c4:	mov	r0, r5
   234c8:	mov	r1, r7
   234cc:	mov	r2, r6
   234d0:	mov	r3, #23
   234d4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   234d8:	mov	r4, r0
   234dc:	mov	r0, r4
   234e0:	sub	sp, fp, #28
   234e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   234e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234ec:	add	fp, sp, #28
   234f0:	sub	sp, sp, #44	; 0x2c
   234f4:	mov	r6, r2
   234f8:	ldr	r2, [fp, #8]
   234fc:	mov	r5, r0
   23500:	mov	r0, #0
   23504:	mov	sl, r3
   23508:	cmp	r1, r6
   2350c:	str	r0, [r2]
   23510:	str	r0, [r2, #4]
   23514:	beq	23540 <main@@Base+0xd804>
   23518:	ldrb	r0, [r1]
   2351c:	cmp	r0, #34	; 0x22
   23520:	bne	2352c <main@@Base+0xd7f0>
   23524:	add	r1, r1, #1
   23528:	b	23540 <main@@Base+0xd804>
   2352c:	mov	r0, r5
   23530:	mov	r2, r6
   23534:	mov	r3, #5
   23538:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2353c:	mov	r1, r0
   23540:	sub	r0, r6, r1
   23544:	cmp	r0, #2
   23548:	blt	23574 <main@@Base+0xd838>
   2354c:	ldrb	r0, [r1]
   23550:	cmp	r0, #32
   23554:	bls	23560 <main@@Base+0xd824>
   23558:	mov	r7, r1
   2355c:	b	23584 <main@@Base+0xd848>
   23560:	bne	23574 <main@@Base+0xd838>
   23564:	mov	r7, r1
   23568:	ldrb	r0, [r7, #1]!
   2356c:	cmp	r0, #32
   23570:	bhi	23584 <main@@Base+0xd848>
   23574:	mov	r0, r5
   23578:	mov	r2, r6
   2357c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   23580:	mov	r7, r0
   23584:	cmp	r7, r6
   23588:	beq	236a4 <main@@Base+0xd968>
   2358c:	add	r0, sl, #4
   23590:	mov	r1, #0
   23594:	add	r8, sp, #32
   23598:	add	r9, sp, #28
   2359c:	mov	r2, #0
   235a0:	str	sl, [sp, #12]
   235a4:	str	r0, [sp, #8]
   235a8:	ldr	r4, [sl]
   235ac:	mov	sl, r0
   235b0:	str	r2, [sp, #16]
   235b4:	str	r1, [sp, #20]
   235b8:	add	r0, sp, #24
   235bc:	mov	r1, r7
   235c0:	mov	r2, r6
   235c4:	mov	r3, r9
   235c8:	str	r8, [sp]
   235cc:	str	r0, [sp, #4]
   235d0:	mov	r0, r5
   235d4:	blx	r4
   235d8:	cmp	r0, r6
   235dc:	beq	236a4 <main@@Base+0xd968>
   235e0:	mov	r4, r0
   235e4:	cmp	r0, r7
   235e8:	bne	235fc <main@@Base+0xd8c0>
   235ec:	ldr	r4, [sl], #4
   235f0:	cmp	r4, #0
   235f4:	bne	235b8 <main@@Base+0xd87c>
   235f8:	b	236ac <main@@Base+0xd970>
   235fc:	add	r2, sp, #28
   23600:	ldm	r2, {r0, r1, r2}
   23604:	cmp	r0, #0
   23608:	beq	23630 <main@@Base+0xd8f4>
   2360c:	ldr	sl, [sp, #12]
   23610:	subs	r0, r1, #1
   23614:	sbcs	r0, r2, #-2147483648	; 0x80000000
   23618:	bcc	23660 <main@@Base+0xd924>
   2361c:	mov	r0, r5
   23620:	mov	r1, r4
   23624:	mov	r2, r6
   23628:	mov	r3, #8
   2362c:	b	23650 <main@@Base+0xd914>
   23630:	ldr	sl, [sp, #12]
   23634:	cmn	r2, #1
   23638:	mov	r0, r4
   2363c:	bgt	2366c <main@@Base+0xd930>
   23640:	mov	r0, r5
   23644:	mov	r1, r4
   23648:	mov	r2, r6
   2364c:	mov	r3, #7
   23650:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23654:	ldr	r1, [sp, #20]
   23658:	ldr	r2, [sp, #16]
   2365c:	b	2366c <main@@Base+0xd930>
   23660:	rsbs	r1, r1, #0
   23664:	mov	r0, r4
   23668:	rsc	r2, r2, #0
   2366c:	cmp	r0, r6
   23670:	beq	236a4 <main@@Base+0xd968>
   23674:	ldr	r0, [fp, #8]
   23678:	mov	r7, r0
   2367c:	ldm	r0, {r0, r3}
   23680:	adds	r0, r0, r1
   23684:	adc	r3, r3, r2
   23688:	stm	r7, {r0, r3}
   2368c:	mov	r7, r4
   23690:	ldr	r0, [sp, #24]
   23694:	cmp	r0, #0
   23698:	ldr	r0, [sp, #8]
   2369c:	bne	235a8 <main@@Base+0xd86c>
   236a0:	b	236c4 <main@@Base+0xd988>
   236a4:	mov	r4, r6
   236a8:	b	236c4 <main@@Base+0xd988>
   236ac:	mov	r0, r5
   236b0:	mov	r1, r7
   236b4:	mov	r2, r6
   236b8:	mov	r3, #23
   236bc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   236c0:	mov	r4, r0
   236c4:	mov	r0, r4
   236c8:	sub	sp, fp, #28
   236cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   236d4:	add	fp, sp, #28
   236d8:	sub	sp, sp, #44	; 0x2c
   236dc:	mov	r6, r2
   236e0:	ldr	r2, [fp, #8]
   236e4:	mov	r5, r0
   236e8:	mov	r0, #0
   236ec:	mov	sl, r3
   236f0:	cmp	r1, r6
   236f4:	str	r0, [r2]
   236f8:	beq	23724 <main@@Base+0xd9e8>
   236fc:	ldrb	r0, [r1]
   23700:	cmp	r0, #34	; 0x22
   23704:	bne	23710 <main@@Base+0xd9d4>
   23708:	add	r1, r1, #1
   2370c:	b	23724 <main@@Base+0xd9e8>
   23710:	mov	r0, r5
   23714:	mov	r2, r6
   23718:	mov	r3, #5
   2371c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23720:	mov	r1, r0
   23724:	sub	r0, r6, r1
   23728:	cmp	r0, #2
   2372c:	blt	23758 <main@@Base+0xda1c>
   23730:	ldrb	r0, [r1]
   23734:	cmp	r0, #32
   23738:	bls	23744 <main@@Base+0xda08>
   2373c:	mov	r7, r1
   23740:	b	23768 <main@@Base+0xda2c>
   23744:	bne	23758 <main@@Base+0xda1c>
   23748:	mov	r7, r1
   2374c:	ldrb	r0, [r7, #1]!
   23750:	cmp	r0, #32
   23754:	bhi	23768 <main@@Base+0xda2c>
   23758:	mov	r0, r5
   2375c:	mov	r2, r6
   23760:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   23764:	mov	r7, r0
   23768:	cmp	r7, r6
   2376c:	beq	2386c <main@@Base+0xdb30>
   23770:	add	r0, sl, #4
   23774:	mov	r1, #0
   23778:	add	r8, sp, #32
   2377c:	add	r9, sp, #28
   23780:	str	sl, [sp, #16]
   23784:	str	r1, [sp, #20]
   23788:	str	r0, [sp, #12]
   2378c:	ldr	r4, [sl]
   23790:	mov	sl, r0
   23794:	add	r0, sp, #24
   23798:	mov	r1, r7
   2379c:	mov	r2, r6
   237a0:	mov	r3, r9
   237a4:	str	r8, [sp]
   237a8:	str	r0, [sp, #4]
   237ac:	mov	r0, r5
   237b0:	blx	r4
   237b4:	cmp	r0, r6
   237b8:	beq	2386c <main@@Base+0xdb30>
   237bc:	mov	r4, r0
   237c0:	cmp	r0, r7
   237c4:	bne	237d8 <main@@Base+0xda9c>
   237c8:	ldr	r4, [sl], #4
   237cc:	cmp	r4, #0
   237d0:	bne	23794 <main@@Base+0xda58>
   237d4:	b	23874 <main@@Base+0xdb38>
   237d8:	ldr	r0, [sp, #28]
   237dc:	cmp	r0, #0
   237e0:	beq	23800 <main@@Base+0xdac4>
   237e4:	mov	r0, r5
   237e8:	mov	r1, r4
   237ec:	mov	r2, r6
   237f0:	mov	r3, #8
   237f4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   237f8:	ldr	sl, [sp, #16]
   237fc:	b	23834 <main@@Base+0xdaf8>
   23800:	ldr	r0, [sp, #36]	; 0x24
   23804:	ldr	sl, [sp, #16]
   23808:	cmp	r0, #0
   2380c:	beq	23828 <main@@Base+0xdaec>
   23810:	mov	r0, r5
   23814:	mov	r1, r4
   23818:	mov	r2, r6
   2381c:	mov	r3, #7
   23820:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23824:	b	23834 <main@@Base+0xdaf8>
   23828:	ldr	r0, [sp, #32]
   2382c:	str	r0, [sp, #20]
   23830:	mov	r0, r4
   23834:	cmp	r0, r6
   23838:	beq	2386c <main@@Base+0xdb30>
   2383c:	ldr	r0, [fp, #8]
   23840:	ldr	r2, [sp, #20]
   23844:	mov	r7, r4
   23848:	mov	r1, r0
   2384c:	ldr	r0, [r0]
   23850:	add	r0, r0, r2
   23854:	str	r0, [r1]
   23858:	ldr	r0, [sp, #24]
   2385c:	cmp	r0, #0
   23860:	ldr	r0, [sp, #12]
   23864:	bne	2378c <main@@Base+0xda50>
   23868:	b	2388c <main@@Base+0xdb50>
   2386c:	mov	r4, r6
   23870:	b	2388c <main@@Base+0xdb50>
   23874:	mov	r0, r5
   23878:	mov	r1, r7
   2387c:	mov	r2, r6
   23880:	mov	r3, #23
   23884:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23888:	mov	r4, r0
   2388c:	mov	r0, r4
   23890:	sub	sp, fp, #28
   23894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2389c:	add	fp, sp, #28
   238a0:	sub	sp, sp, #44	; 0x2c
   238a4:	mov	r7, r2
   238a8:	ldr	r2, [fp, #8]
   238ac:	mov	r5, r0
   238b0:	mov	r0, #0
   238b4:	mov	sl, r3
   238b8:	cmp	r1, r7
   238bc:	str	r0, [r2]
   238c0:	str	r0, [r2, #4]
   238c4:	beq	238f0 <main@@Base+0xdbb4>
   238c8:	ldrb	r0, [r1]
   238cc:	cmp	r0, #34	; 0x22
   238d0:	bne	238dc <main@@Base+0xdba0>
   238d4:	add	r1, r1, #1
   238d8:	b	238f0 <main@@Base+0xdbb4>
   238dc:	mov	r0, r5
   238e0:	mov	r2, r7
   238e4:	mov	r3, #5
   238e8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   238ec:	mov	r1, r0
   238f0:	sub	r0, r7, r1
   238f4:	cmp	r0, #2
   238f8:	blt	23924 <main@@Base+0xdbe8>
   238fc:	ldrb	r0, [r1]
   23900:	cmp	r0, #32
   23904:	bls	23910 <main@@Base+0xdbd4>
   23908:	mov	r6, r1
   2390c:	b	23934 <main@@Base+0xdbf8>
   23910:	bne	23924 <main@@Base+0xdbe8>
   23914:	mov	r6, r1
   23918:	ldrb	r0, [r6, #1]!
   2391c:	cmp	r0, #32
   23920:	bhi	23934 <main@@Base+0xdbf8>
   23924:	mov	r0, r5
   23928:	mov	r2, r7
   2392c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   23930:	mov	r6, r0
   23934:	cmp	r6, r7
   23938:	beq	23a28 <main@@Base+0xdcec>
   2393c:	mov	r1, #0
   23940:	add	r0, sl, #4
   23944:	add	r8, sp, #32
   23948:	add	r9, sp, #28
   2394c:	str	sl, [sp, #12]
   23950:	str	r1, [sp, #20]
   23954:	mov	r1, #0
   23958:	str	r0, [sp, #8]
   2395c:	str	r1, [sp, #16]
   23960:	ldr	r4, [sl]
   23964:	mov	sl, r0
   23968:	add	r0, sp, #24
   2396c:	mov	r1, r6
   23970:	mov	r2, r7
   23974:	mov	r3, r9
   23978:	str	r8, [sp]
   2397c:	str	r0, [sp, #4]
   23980:	mov	r0, r5
   23984:	blx	r4
   23988:	cmp	r0, r7
   2398c:	beq	23a28 <main@@Base+0xdcec>
   23990:	mov	r4, r0
   23994:	cmp	r0, r6
   23998:	bne	239ac <main@@Base+0xdc70>
   2399c:	ldr	r4, [sl], #4
   239a0:	cmp	r4, #0
   239a4:	bne	23968 <main@@Base+0xdc2c>
   239a8:	b	23a30 <main@@Base+0xdcf4>
   239ac:	ldr	r0, [sp, #28]
   239b0:	cmp	r0, #0
   239b4:	beq	239d0 <main@@Base+0xdc94>
   239b8:	mov	r0, r5
   239bc:	mov	r1, r4
   239c0:	mov	r2, r7
   239c4:	mov	r3, #8
   239c8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   239cc:	b	239e4 <main@@Base+0xdca8>
   239d0:	ldr	r0, [sp, #32]
   239d4:	str	r0, [sp, #20]
   239d8:	ldr	r0, [sp, #36]	; 0x24
   239dc:	str	r0, [sp, #16]
   239e0:	mov	r0, r4
   239e4:	ldr	sl, [sp, #12]
   239e8:	cmp	r0, r7
   239ec:	beq	23a28 <main@@Base+0xdcec>
   239f0:	ldr	r0, [fp, #8]
   239f4:	ldr	r3, [sp, #20]
   239f8:	mov	r6, r4
   239fc:	mov	r2, r0
   23a00:	ldrd	r0, [r0]
   23a04:	adds	r0, r0, r3
   23a08:	ldr	r3, [sp, #16]
   23a0c:	adc	r1, r1, r3
   23a10:	strd	r0, [r2]
   23a14:	ldr	r0, [sp, #24]
   23a18:	cmp	r0, #0
   23a1c:	ldr	r0, [sp, #8]
   23a20:	bne	23960 <main@@Base+0xdc24>
   23a24:	b	23a48 <main@@Base+0xdd0c>
   23a28:	mov	r4, r7
   23a2c:	b	23a48 <main@@Base+0xdd0c>
   23a30:	mov	r0, r5
   23a34:	mov	r1, r6
   23a38:	mov	r2, r7
   23a3c:	mov	r3, #23
   23a40:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23a44:	mov	r4, r0
   23a48:	mov	r0, r4
   23a4c:	sub	sp, fp, #28
   23a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a58:	add	fp, sp, #28
   23a5c:	sub	sp, sp, #36	; 0x24
   23a60:	mov	r6, r2
   23a64:	ldr	r2, [fp, #8]
   23a68:	mov	r5, r0
   23a6c:	mov	r0, #0
   23a70:	mov	r8, r3
   23a74:	cmp	r1, r6
   23a78:	str	r0, [r2]
   23a7c:	str	r0, [r2, #4]
   23a80:	beq	23aac <main@@Base+0xdd70>
   23a84:	ldrb	r0, [r1]
   23a88:	cmp	r0, #34	; 0x22
   23a8c:	bne	23a98 <main@@Base+0xdd5c>
   23a90:	add	r1, r1, #1
   23a94:	b	23aac <main@@Base+0xdd70>
   23a98:	mov	r0, r5
   23a9c:	mov	r2, r6
   23aa0:	mov	r3, #5
   23aa4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23aa8:	mov	r1, r0
   23aac:	sub	r0, r6, r1
   23ab0:	cmp	r0, #2
   23ab4:	blt	23ae0 <main@@Base+0xdda4>
   23ab8:	ldrb	r0, [r1]
   23abc:	cmp	r0, #32
   23ac0:	bls	23acc <main@@Base+0xdd90>
   23ac4:	mov	r7, r1
   23ac8:	b	23af0 <main@@Base+0xddb4>
   23acc:	bne	23ae0 <main@@Base+0xdda4>
   23ad0:	mov	r7, r1
   23ad4:	ldrb	r0, [r7, #1]!
   23ad8:	cmp	r0, #32
   23adc:	bhi	23af0 <main@@Base+0xddb4>
   23ae0:	mov	r0, r5
   23ae4:	mov	r2, r6
   23ae8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   23aec:	mov	r7, r0
   23af0:	cmp	r7, r6
   23af4:	beq	23bac <main@@Base+0xde70>
   23af8:	add	r0, r8, #4
   23afc:	add	sl, sp, #24
   23b00:	add	r9, sp, #20
   23b04:	str	r8, [sp, #12]
   23b08:	str	r0, [sp, #8]
   23b0c:	ldr	r4, [r8]
   23b10:	mov	r8, r0
   23b14:	add	r0, sp, #16
   23b18:	mov	r1, r7
   23b1c:	mov	r2, r6
   23b20:	mov	r3, r9
   23b24:	str	sl, [sp]
   23b28:	str	r0, [sp, #4]
   23b2c:	mov	r0, r5
   23b30:	blx	r4
   23b34:	cmp	r0, r6
   23b38:	beq	23bac <main@@Base+0xde70>
   23b3c:	mov	r4, r0
   23b40:	cmp	r0, r7
   23b44:	bne	23b58 <main@@Base+0xde1c>
   23b48:	ldr	r4, [r8], #4
   23b4c:	cmp	r4, #0
   23b50:	bne	23b14 <main@@Base+0xddd8>
   23b54:	b	23bb4 <main@@Base+0xde78>
   23b58:	ldr	r0, [sp, #24]
   23b5c:	ldr	r1, [sp, #28]
   23b60:	bl	40db0 <flatcc_json_printer_clear@@Base+0x8cc>
   23b64:	ldr	r2, [fp, #8]
   23b68:	ldr	r3, [sp, #20]
   23b6c:	vmov	d17, r0, r1
   23b70:	ldr	r8, [sp, #12]
   23b74:	vldr	d16, [r2]
   23b78:	mov	r7, r2
   23b7c:	eor	r2, r1, #-2147483648	; 0x80000000
   23b80:	cmp	r3, #0
   23b84:	vmov	d18, r0, r2
   23b88:	vseleq.f64	d17, d17, d18
   23b8c:	vadd.f64	d16, d16, d17
   23b90:	vstr	d16, [r7]
   23b94:	mov	r7, r4
   23b98:	ldr	r0, [sp, #16]
   23b9c:	cmp	r0, #0
   23ba0:	ldr	r0, [sp, #8]
   23ba4:	bne	23b0c <main@@Base+0xddd0>
   23ba8:	b	23bcc <main@@Base+0xde90>
   23bac:	mov	r4, r6
   23bb0:	b	23bcc <main@@Base+0xde90>
   23bb4:	mov	r0, r5
   23bb8:	mov	r1, r7
   23bbc:	mov	r2, r6
   23bc0:	mov	r3, #23
   23bc4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   23bc8:	mov	r4, r0
   23bcc:	mov	r0, r4
   23bd0:	sub	sp, fp, #28
   23bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23bdc:	add	fp, sp, #28
   23be0:	sub	sp, sp, #12
   23be4:	mov	sl, r1
   23be8:	sub	r1, r2, r1
   23bec:	cmp	r1, #8
   23bf0:	movcs	r1, #8
   23bf4:	and	r1, r1, #15
   23bf8:	sub	r5, r1, #1
   23bfc:	cmp	r5, #7
   23c00:	bhi	23e3c <main@@Base+0xe100>
   23c04:	str	r3, [sp, #8]
   23c08:	add	r7, pc, #32
   23c0c:	mov	r8, #0
   23c10:	mov	ip, #0
   23c14:	mov	lr, #0
   23c18:	mov	r9, #0
   23c1c:	mov	r6, #0
   23c20:	mov	r1, #0
   23c24:	mov	r3, #0
   23c28:	mov	r4, #0
   23c2c:	ldr	pc, [r7, r5, lsl #2]
   23c30:	muleq	r2, r4, ip
   23c34:	andeq	r3, r2, ip, lsl #25
   23c38:	andeq	r3, r2, r4, lsl #25
   23c3c:	andeq	r3, r2, ip, ror ip
   23c40:	andeq	r3, r2, r0, ror ip
   23c44:	andeq	r3, r2, r4, ror #24
   23c48:	andeq	r3, r2, r4, asr ip
   23c4c:	andeq	r3, r2, r0, asr ip
   23c50:	ldrb	ip, [sl, #7]
   23c54:	ldrb	r1, [sl, #6]
   23c58:	mov	lr, r8
   23c5c:	orr	r1, ip, r1, lsl #8
   23c60:	mov	r8, r1
   23c64:	ldrb	r1, [sl, #5]
   23c68:	mov	r9, lr
   23c6c:	orr	r8, r8, r1, lsl #16
   23c70:	ldrb	r1, [sl, #4]
   23c74:	mov	r6, r9
   23c78:	orr	r8, r8, r1, lsl #24
   23c7c:	ldrb	r1, [sl, #3]
   23c80:	orr	r1, r1, r6
   23c84:	ldrb	r3, [sl, #2]
   23c88:	orr	r3, r1, r3, lsl #8
   23c8c:	ldrb	r1, [sl, #1]
   23c90:	orr	r4, r3, r1, lsl #16
   23c94:	movw	r1, #28276	; 0x6e74
   23c98:	movw	r7, #20577	; 0x5061
   23c9c:	ldr	r6, [fp, #12]
   23ca0:	movt	r1, #29285	; 0x7265
   23ca4:	movt	r7, #18798	; 0x496e
   23ca8:	eor	r3, r8, r1
   23cac:	ldrb	r1, [sl]
   23cb0:	orr	r1, r4, r1, lsl #24
   23cb4:	eor	r7, r1, r7
   23cb8:	orrs	r3, r3, r7
   23cbc:	bne	23df0 <main@@Base+0xe0b4>
   23cc0:	add	r8, sl, #8
   23cc4:	sub	r1, r2, r8
   23cc8:	cmp	r1, #8
   23ccc:	movcs	r1, #8
   23cd0:	and	r1, r1, #15
   23cd4:	sub	r7, r1, #1
   23cd8:	cmp	r7, #7
   23cdc:	bhi	23e3c <main@@Base+0xe100>
   23ce0:	str	r0, [sp, #4]
   23ce4:	add	lr, pc, #32
   23ce8:	mov	r6, #0
   23cec:	mov	r0, #0
   23cf0:	mov	r1, #0
   23cf4:	mov	r5, #0
   23cf8:	mov	r4, #0
   23cfc:	mov	r3, #0
   23d00:	mov	ip, #0
   23d04:	mov	r9, #0
   23d08:	ldr	pc, [lr, r7, lsl #2]
   23d0c:	andeq	r3, r2, r0, ror sp
   23d10:	andeq	r3, r2, r8, ror #26
   23d14:	andeq	r3, r2, r0, ror #26
   23d18:	andeq	r3, r2, r8, asr sp
   23d1c:	andeq	r3, r2, ip, asr #26
   23d20:	andeq	r3, r2, r0, asr #26
   23d24:	andeq	r3, r2, r0, lsr sp
   23d28:	andeq	r3, r2, ip, lsr #26
   23d2c:	ldrb	r0, [sl, #15]
   23d30:	ldrb	r1, [sl, #14]
   23d34:	orr	r0, r0, r1, lsl #8
   23d38:	mov	r1, r6
   23d3c:	mov	r6, r0
   23d40:	ldrb	r0, [sl, #13]
   23d44:	mov	r5, r1
   23d48:	orr	r6, r6, r0, lsl #16
   23d4c:	ldrb	r0, [sl, #12]
   23d50:	mov	r4, r5
   23d54:	orr	r6, r6, r0, lsl #24
   23d58:	ldrb	r0, [sl, #11]
   23d5c:	orr	r3, r0, r4
   23d60:	ldrb	r0, [sl, #10]
   23d64:	orr	ip, r3, r0, lsl #8
   23d68:	ldrb	r0, [sl, #9]
   23d6c:	orr	r9, ip, r0, lsl #16
   23d70:	ldrb	r1, [r8]
   23d74:	movw	r0, #24931	; 0x6163
   23d78:	movw	r3, #28005	; 0x6d65
   23d7c:	movt	r0, #29552	; 0x7370
   23d80:	movt	r3, #20065	; 0x4e61
   23d84:	eor	r0, r6, r0
   23d88:	orr	r1, r9, r1, lsl #24
   23d8c:	eor	r1, r1, r3
   23d90:	orrs	r0, r0, r1
   23d94:	bne	23e3c <main@@Base+0xe100>
   23d98:	add	r6, sl, #16
   23d9c:	mov	r1, #-268435456	; 0xf0000000
   23da0:	sub	r0, r2, r6
   23da4:	cmp	r0, #8
   23da8:	movcs	r0, #8
   23dac:	add	r0, r1, r0, lsl #28
   23db0:	asr	r0, r0, #28
   23db4:	cmp	r0, #0
   23db8:	blt	23e3c <main@@Base+0xe100>
   23dbc:	ldrb	r0, [r6]
   23dc0:	cmp	r0, #101	; 0x65
   23dc4:	bne	23e3c <main@@Base+0xe100>
   23dc8:	ldr	r0, [fp, #12]
   23dcc:	mov	r1, r6
   23dd0:	mov	r3, #1
   23dd4:	mov	r8, #1
   23dd8:	str	r0, [sp]
   23ddc:	ldr	r0, [sp, #4]
   23de0:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   23de4:	cmp	r0, r6
   23de8:	bne	23e1c <main@@Base+0xe0e0>
   23dec:	b	23e3c <main@@Base+0xe100>
   23df0:	movw	r3, #20037	; 0x4e45
   23df4:	movt	r3, #20047	; 0x4e4f
   23df8:	teq	r1, r3
   23dfc:	bne	23e3c <main@@Base+0xe100>
   23e00:	mov	r1, sl
   23e04:	mov	r3, #4
   23e08:	str	r6, [sp]
   23e0c:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   23e10:	cmp	r0, sl
   23e14:	beq	23e3c <main@@Base+0xe100>
   23e18:	mov	r8, #0
   23e1c:	mov	sl, r0
   23e20:	ldr	r0, [fp, #8]
   23e24:	mov	r1, #0
   23e28:	str	r8, [r0]
   23e2c:	str	r1, [r0, #4]
   23e30:	mov	r0, #0
   23e34:	ldr	r1, [sp, #8]
   23e38:	str	r0, [r1]
   23e3c:	mov	r0, sl
   23e40:	sub	sp, fp, #28
   23e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e4c:	add	fp, sp, #28
   23e50:	sub	sp, sp, #12
   23e54:	mov	r5, r1
   23e58:	sub	r1, r2, r1
   23e5c:	cmp	r1, #8
   23e60:	movcs	r1, #8
   23e64:	and	r1, r1, #15
   23e68:	sub	r7, r1, #1
   23e6c:	cmp	r7, #7
   23e70:	bhi	23fec <main@@Base+0xe2b0>
   23e74:	str	r3, [sp, #8]
   23e78:	add	r8, pc, #32
   23e7c:	mov	lr, #0
   23e80:	mov	ip, #0
   23e84:	mov	r9, #0
   23e88:	mov	sl, #0
   23e8c:	mov	r1, #0
   23e90:	mov	r3, #0
   23e94:	mov	r4, #0
   23e98:	mov	r6, #0
   23e9c:	ldr	pc, [r8, r7, lsl #2]
   23ea0:	andeq	r3, r2, r4, lsl #30
   23ea4:	strdeq	r3, [r2], -ip
   23ea8:	strdeq	r3, [r2], -r4
   23eac:	andeq	r3, r2, ip, ror #29
   23eb0:	andeq	r3, r2, r0, ror #29
   23eb4:	ldrdeq	r3, [r2], -r4
   23eb8:	andeq	r3, r2, r4, asr #29
   23ebc:	andeq	r3, r2, r0, asr #29
   23ec0:	ldrb	ip, [r5, #7]
   23ec4:	ldrb	r1, [r5, #6]
   23ec8:	mov	r9, lr
   23ecc:	orr	r1, ip, r1, lsl #8
   23ed0:	mov	lr, r1
   23ed4:	ldrb	r1, [r5, #5]
   23ed8:	mov	sl, r9
   23edc:	orr	lr, lr, r1, lsl #16
   23ee0:	ldrb	r1, [r5, #4]
   23ee4:	orr	lr, lr, r1, lsl #24
   23ee8:	mov	r1, sl
   23eec:	ldrb	r3, [r5, #3]
   23ef0:	orr	r3, r3, r1
   23ef4:	ldrb	r1, [r5, #2]
   23ef8:	orr	r4, r3, r1, lsl #8
   23efc:	ldrb	r1, [r5, #1]
   23f00:	orr	r6, r4, r1, lsl #16
   23f04:	ldrb	r1, [r5]
   23f08:	ldr	r3, [fp, #12]
   23f0c:	ldr	r8, [fp, #8]
   23f10:	orr	r1, r6, r1, lsl #24
   23f14:	movw	r6, #30769	; 0x7831
   23f18:	movt	r6, #26725	; 0x6865
   23f1c:	cmp	r1, r6
   23f20:	bhi	23f50 <main@@Base+0xe214>
   23f24:	teq	r1, r6
   23f28:	bne	23fec <main@@Base+0xe2b0>
   23f2c:	str	r3, [sp]
   23f30:	mov	r1, r5
   23f34:	mov	r3, #4
   23f38:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   23f3c:	cmp	r0, r5
   23f40:	beq	23fec <main@@Base+0xe2b0>
   23f44:	mov	r1, #0
   23f48:	mov	r2, #3
   23f4c:	b	23fd8 <main@@Base+0xe29c>
   23f50:	lsr	r4, lr, #16
   23f54:	movw	r7, #25959	; 0x6567
   23f58:	movw	r6, #26725	; 0x6865
   23f5c:	orr	r4, r4, r1, lsl #16
   23f60:	movt	r7, #30830	; 0x786e
   23f64:	eor	r6, r6, r1, lsr #16
   23f68:	eor	r7, r4, r7
   23f6c:	orrs	r7, r7, r6
   23f70:	bne	23fa4 <main@@Base+0xe268>
   23f74:	str	r3, [sp]
   23f78:	mov	r1, r5
   23f7c:	mov	r3, #6
   23f80:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   23f84:	cmp	r0, r5
   23f88:	beq	23fec <main@@Base+0xe2b0>
   23f8c:	mvn	r2, #1
   23f90:	mvn	r1, #0
   23f94:	str	r2, [r8]
   23f98:	str	r1, [r8, #4]
   23f9c:	mov	r1, #1
   23fa0:	b	23fe0 <main@@Base+0xe2a4>
   23fa4:	movw	r7, #30770	; 0x7832
   23fa8:	movt	r7, #26725	; 0x6865
   23fac:	teq	r1, r7
   23fb0:	bne	23fec <main@@Base+0xe2b0>
   23fb4:	str	r3, [sp]
   23fb8:	mov	r1, r5
   23fbc:	mov	r3, #4
   23fc0:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   23fc4:	cmp	r0, r5
   23fc8:	beq	23fec <main@@Base+0xe2b0>
   23fcc:	movw	r2, #48815	; 0xbeaf
   23fd0:	mov	r1, #0
   23fd4:	movt	r2, #32431	; 0x7eaf
   23fd8:	str	r2, [r8]
   23fdc:	str	r1, [r8, #4]
   23fe0:	ldr	r2, [sp, #8]
   23fe4:	mov	r5, r0
   23fe8:	str	r1, [r2]
   23fec:	mov	r0, r5
   23ff0:	sub	sp, fp, #28
   23ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ffc:	add	fp, sp, #28
   24000:	sub	sp, sp, #12
   24004:	mov	sl, r1
   24008:	sub	r1, r2, r1
   2400c:	cmp	r1, #8
   24010:	movcs	r1, #8
   24014:	and	r1, r1, #15
   24018:	sub	r4, r1, #1
   2401c:	cmp	r4, #7
   24020:	bhi	241e0 <main@@Base+0xe4a4>
   24024:	str	r3, [sp, #8]
   24028:	add	r8, pc, #32
   2402c:	mov	r9, #0
   24030:	mov	ip, #0
   24034:	mov	lr, #0
   24038:	mov	r7, #0
   2403c:	mov	r6, #0
   24040:	mov	r3, #0
   24044:	mov	r1, #0
   24048:	mov	r5, #0
   2404c:	ldr	pc, [r8, r4, lsl #2]
   24050:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   24054:	andeq	r4, r2, ip, lsr #1
   24058:	andeq	r4, r2, r4, lsr #1
   2405c:	muleq	r2, ip, r0
   24060:	muleq	r2, r0, r0
   24064:	andeq	r4, r2, r4, lsl #1
   24068:	andeq	r4, r2, r4, ror r0
   2406c:	andeq	r4, r2, r0, ror r0
   24070:	ldrb	ip, [sl, #7]
   24074:	ldrb	r1, [sl, #6]
   24078:	mov	lr, r9
   2407c:	orr	r1, ip, r1, lsl #8
   24080:	mov	r9, r1
   24084:	ldrb	r1, [sl, #5]
   24088:	mov	r7, lr
   2408c:	orr	r9, r9, r1, lsl #16
   24090:	ldrb	r1, [sl, #4]
   24094:	mov	r6, r7
   24098:	orr	r9, r9, r1, lsl #24
   2409c:	ldrb	r1, [sl, #3]
   240a0:	orr	r3, r1, r6
   240a4:	ldrb	r1, [sl, #2]
   240a8:	orr	r1, r3, r1, lsl #8
   240ac:	ldrb	r3, [sl, #1]
   240b0:	orr	r5, r1, r3, lsl #16
   240b4:	ldrb	r1, [sl]
   240b8:	ldr	r3, [fp, #12]
   240bc:	ldr	r6, [fp, #8]
   240c0:	orr	r7, r5, r1, lsl #24
   240c4:	movw	r1, #29745	; 0x7431
   240c8:	movt	r1, #26990	; 0x696e
   240cc:	cmp	r7, r1
   240d0:	bhi	24100 <main@@Base+0xe3c4>
   240d4:	teq	r7, r1
   240d8:	bne	241e0 <main@@Base+0xe4a4>
   240dc:	str	r3, [sp]
   240e0:	mov	r1, sl
   240e4:	mov	r3, #4
   240e8:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   240ec:	cmp	r0, sl
   240f0:	beq	241e0 <main@@Base+0xe4a4>
   240f4:	mov	r1, #0
   240f8:	mov	r2, #2
   240fc:	b	2414c <main@@Base+0xe410>
   24100:	movw	r4, #0
   24104:	movw	r1, #29806	; 0x746e
   24108:	movt	r4, #25959	; 0x6567
   2410c:	movt	r1, #26990	; 0x696e
   24110:	subs	r5, r9, r4
   24114:	sbcs	r5, r7, r1
   24118:	bcs	24158 <main@@Base+0xe41c>
   2411c:	movw	r1, #29746	; 0x7432
   24120:	movt	r1, #26990	; 0x696e
   24124:	teq	r7, r1
   24128:	bne	241e0 <main@@Base+0xe4a4>
   2412c:	str	r3, [sp]
   24130:	mov	r1, sl
   24134:	mov	r3, #4
   24138:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   2413c:	cmp	r0, sl
   24140:	beq	241e0 <main@@Base+0xe4a4>
   24144:	mov	r1, #0
   24148:	mov	r2, #42	; 0x2a
   2414c:	str	r2, [r6]
   24150:	str	r1, [r6, #4]
   24154:	b	241d4 <main@@Base+0xe498>
   24158:	eor	r1, r7, r1
   2415c:	add	r7, r4, #12800	; 0x3200
   24160:	bic	r5, r9, #255	; 0xff
   24164:	eor	r7, r5, r7
   24168:	orrs	r7, r7, r1
   2416c:	bne	24198 <main@@Base+0xe45c>
   24170:	str	r3, [sp]
   24174:	mov	r1, sl
   24178:	mov	r3, #7
   2417c:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   24180:	cmp	r0, sl
   24184:	beq	241e0 <main@@Base+0xe4a4>
   24188:	mvn	r2, #1
   2418c:	mvn	r1, #0
   24190:	add	r2, r2, #1
   24194:	b	241c8 <main@@Base+0xe48c>
   24198:	bfc	r9, #0, #16
   2419c:	eor	r7, r9, r4
   241a0:	orrs	r1, r7, r1
   241a4:	bne	241e0 <main@@Base+0xe4a4>
   241a8:	str	r3, [sp]
   241ac:	mov	r1, sl
   241b0:	mov	r3, #6
   241b4:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   241b8:	cmp	r0, sl
   241bc:	beq	241e0 <main@@Base+0xe4a4>
   241c0:	mvn	r1, #0
   241c4:	mvn	r2, #1
   241c8:	str	r2, [r6]
   241cc:	str	r1, [r6, #4]
   241d0:	mov	r1, #1
   241d4:	ldr	r2, [sp, #8]
   241d8:	mov	sl, r0
   241dc:	str	r1, [r2]
   241e0:	mov	r0, sl
   241e4:	sub	sp, fp, #28
   241e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241ec:	push	{r4, r5, r6, r7, fp, lr}
   241f0:	add	fp, sp, #16
   241f4:	sub	sp, sp, #8
   241f8:	mov	r5, r1
   241fc:	sub	r1, r2, r1
   24200:	mov	r4, r3
   24204:	cmp	r1, #8
   24208:	movcs	r1, #8
   2420c:	and	r1, r1, #15
   24210:	sub	r3, r1, #1
   24214:	cmp	r3, #7
   24218:	bhi	2432c <main@@Base+0xe5f0>
   2421c:	add	r7, pc, #4
   24220:	mov	r1, #0
   24224:	ldr	pc, [r7, r3, lsl #2]
   24228:	andeq	r4, r2, r0, ror #4
   2422c:	andeq	r4, r2, r8, asr r2
   24230:	andeq	r4, r2, r0, asr r2
   24234:	andeq	r4, r2, r8, asr #4
   24238:	andeq	r4, r2, r8, asr #4
   2423c:	andeq	r4, r2, r8, asr #4
   24240:	andeq	r4, r2, r8, asr #4
   24244:	andeq	r4, r2, r8, asr #4
   24248:	ldrb	r3, [r5, #3]
   2424c:	orr	r1, r3, r1
   24250:	ldrb	r3, [r5, #2]
   24254:	orr	r1, r1, r3, lsl #8
   24258:	ldrb	r3, [r5, #1]
   2425c:	orr	r1, r1, r3, lsl #16
   24260:	ldrb	r6, [r5]
   24264:	ldr	r3, [fp, #12]
   24268:	ldr	r7, [fp, #8]
   2426c:	orr	r1, r1, r6, lsl #24
   24270:	movw	r6, #26417	; 0x6731
   24274:	movt	r6, #28261	; 0x6e65
   24278:	cmp	r1, r6
   2427c:	bhi	242ac <main@@Base+0xe570>
   24280:	teq	r1, r6
   24284:	bne	2432c <main@@Base+0xe5f0>
   24288:	str	r3, [sp]
   2428c:	mov	r1, r5
   24290:	mov	r3, #4
   24294:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   24298:	cmp	r0, r5
   2429c:	beq	2432c <main@@Base+0xe5f0>
   242a0:	mvn	r1, #0
   242a4:	mvn	r2, #11
   242a8:	b	24318 <main@@Base+0xe5dc>
   242ac:	movw	r6, #26418	; 0x6732
   242b0:	movt	r6, #28261	; 0x6e65
   242b4:	teq	r1, r6
   242b8:	beq	242f4 <main@@Base+0xe5b8>
   242bc:	movw	r6, #26419	; 0x6733
   242c0:	movt	r6, #28261	; 0x6e65
   242c4:	teq	r1, r6
   242c8:	bne	2432c <main@@Base+0xe5f0>
   242cc:	str	r3, [sp]
   242d0:	mov	r1, r5
   242d4:	mov	r3, #4
   242d8:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   242dc:	cmp	r0, r5
   242e0:	beq	2432c <main@@Base+0xe5f0>
   242e4:	mvn	r2, #11
   242e8:	mvn	r1, #0
   242ec:	add	r2, r2, #2
   242f0:	b	24318 <main@@Base+0xe5dc>
   242f4:	str	r3, [sp]
   242f8:	mov	r1, r5
   242fc:	mov	r3, #4
   24300:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   24304:	cmp	r0, r5
   24308:	beq	2432c <main@@Base+0xe5f0>
   2430c:	mvn	r2, #11
   24310:	mvn	r1, #0
   24314:	add	r2, r2, #1
   24318:	str	r2, [r7]
   2431c:	str	r1, [r7, #4]
   24320:	mov	r1, #1
   24324:	mov	r5, r0
   24328:	str	r1, [r4]
   2432c:	mov	r0, r5
   24330:	sub	sp, fp, #16
   24334:	pop	{r4, r5, r6, r7, fp, pc}
   24338:	push	{r4, r5, fp, lr}
   2433c:	add	fp, sp, #8
   24340:	sub	sp, sp, #8
   24344:	mov	r4, r1
   24348:	sub	r1, r2, r1
   2434c:	mov	r5, r3
   24350:	mov	r3, #-268435456	; 0xf0000000
   24354:	cmp	r1, #8
   24358:	movcs	r1, #8
   2435c:	add	r1, r3, r1, lsl #28
   24360:	asr	r1, r1, #28
   24364:	cmp	r1, #0
   24368:	blt	243ac <main@@Base+0xe670>
   2436c:	ldrb	r1, [r4]
   24370:	cmp	r1, #120	; 0x78
   24374:	bne	243ac <main@@Base+0xe670>
   24378:	ldr	r1, [fp, #12]
   2437c:	mov	r3, #1
   24380:	str	r1, [sp]
   24384:	mov	r1, r4
   24388:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   2438c:	cmp	r0, r4
   24390:	beq	243ac <main@@Base+0xe670>
   24394:	ldr	r1, [fp, #8]
   24398:	mov	r2, #0
   2439c:	mov	r4, r0
   243a0:	str	r2, [r1]
   243a4:	str	r2, [r1, #4]
   243a8:	str	r2, [r5]
   243ac:	mov	r0, r4
   243b0:	sub	sp, fp, #8
   243b4:	pop	{r4, r5, fp, pc}
   243b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   243bc:	add	fp, sp, #28
   243c0:	sub	sp, sp, #12
   243c4:	mov	sl, r1
   243c8:	sub	r1, r2, r1
   243cc:	cmp	r1, #8
   243d0:	movcs	r1, #8
   243d4:	and	r1, r1, #15
   243d8:	sub	r6, r1, #1
   243dc:	cmp	r6, #7
   243e0:	bhi	2465c <main@@Base+0xe920>
   243e4:	str	r3, [sp, #8]
   243e8:	add	r9, pc, #32
   243ec:	mov	r1, #0
   243f0:	mov	ip, #0
   243f4:	mov	lr, #0
   243f8:	mov	r4, #0
   243fc:	mov	r7, #0
   24400:	mov	r3, #0
   24404:	mov	r5, #0
   24408:	mov	r8, #0
   2440c:	ldr	pc, [r9, r6, lsl #2]
   24410:	andeq	r4, r2, r4, ror r4
   24414:	andeq	r4, r2, ip, ror #8
   24418:	andeq	r4, r2, r4, ror #8
   2441c:	andeq	r4, r2, ip, asr r4
   24420:	andeq	r4, r2, r0, asr r4
   24424:	andeq	r4, r2, r4, asr #8
   24428:	andeq	r4, r2, r4, lsr r4
   2442c:	andeq	r4, r2, r0, lsr r4
   24430:	ldrb	ip, [sl, #7]
   24434:	ldrb	r3, [sl, #6]
   24438:	mov	lr, r1
   2443c:	orr	r3, ip, r3, lsl #8
   24440:	mov	r1, r3
   24444:	ldrb	r3, [sl, #5]
   24448:	mov	r4, lr
   2444c:	orr	r1, r1, r3, lsl #16
   24450:	ldrb	r3, [sl, #4]
   24454:	mov	r7, r4
   24458:	orr	r1, r1, r3, lsl #24
   2445c:	ldrb	r3, [sl, #3]
   24460:	orr	r3, r3, r7
   24464:	ldrb	r7, [sl, #2]
   24468:	orr	r5, r3, r7, lsl #8
   2446c:	ldrb	r3, [sl, #1]
   24470:	orr	r8, r5, r3, lsl #16
   24474:	ldrb	r3, [sl]
   24478:	ldr	lr, [fp, #12]
   2447c:	ldr	r9, [fp, #8]
   24480:	orr	r6, r8, r3, lsl #24
   24484:	movw	r3, #20036	; 0x4e44
   24488:	movt	r3, #20047	; 0x4e4f
   2448c:	cmp	r6, r3
   24490:	bhi	244f0 <main@@Base+0xe7b4>
   24494:	movw	r7, #28160	; 0x6e00
   24498:	movw	r4, #28523	; 0x6f6b
   2449c:	and	r3, r1, #-16777216	; 0xff000000
   244a0:	movt	r7, #18017	; 0x4661
   244a4:	movt	r4, #17007	; 0x426f
   244a8:	subs	r5, r1, r7
   244ac:	sbcs	r5, r6, r4
   244b0:	bcs	2453c <main@@Base+0xe800>
   244b4:	movw	r1, #27756	; 0x6c6c
   244b8:	eor	r3, r3, #1694498816	; 0x65000000
   244bc:	movt	r1, #16997	; 0x4265
   244c0:	eor	r1, r6, r1
   244c4:	orrs	r1, r3, r1
   244c8:	bne	2465c <main@@Base+0xe920>
   244cc:	mov	r1, sl
   244d0:	mov	r3, #5
   244d4:	str	lr, [sp]
   244d8:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   244dc:	cmp	r0, sl
   244e0:	beq	2465c <main@@Base+0xe920>
   244e4:	mov	r1, #0
   244e8:	mov	r2, #9
   244ec:	b	24648 <main@@Base+0xe90c>
   244f0:	movw	r7, #26725	; 0x6865
   244f4:	mvn	r3, #-1912602624	; 0x8e000000
   244f8:	movt	r7, #20340	; 0x4f74
   244fc:	subs	r3, r3, r1
   24500:	sbcs	r3, r7, r6
   24504:	bcc	24578 <main@@Base+0xe83c>
   24508:	movw	r1, #20037	; 0x4e45
   2450c:	movt	r1, #20047	; 0x4e4f
   24510:	teq	r6, r1
   24514:	bne	2465c <main@@Base+0xe920>
   24518:	mov	r1, sl
   2451c:	mov	r3, #4
   24520:	str	lr, [sp]
   24524:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   24528:	cmp	r0, sl
   2452c:	beq	2465c <main@@Base+0xe920>
   24530:	mov	r1, #0
   24534:	str	r1, [r9]
   24538:	b	2464c <main@@Base+0xe910>
   2453c:	movw	r5, #19553	; 0x4c61
   24540:	eor	r3, r3, #1845493760	; 0x6e000000
   24544:	movt	r5, #19829	; 0x4d75
   24548:	eor	r5, r6, r5
   2454c:	orrs	r3, r3, r5
   24550:	bne	245cc <main@@Base+0xe890>
   24554:	mov	r1, sl
   24558:	mov	r3, #5
   2455c:	str	lr, [sp]
   24560:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   24564:	cmp	r0, sl
   24568:	beq	2465c <main@@Base+0xe920>
   2456c:	mov	r1, #0
   24570:	mov	r2, #2
   24574:	b	24648 <main@@Base+0xe90c>
   24578:	movw	r4, #25964	; 0x656c
   2457c:	movw	ip, #28789	; 0x7075
   24580:	movt	r4, #28282	; 0x6e7a
   24584:	movt	ip, #21089	; 0x5261
   24588:	subs	r3, r1, r4
   2458c:	sbcs	r3, r6, ip
   24590:	bcs	24604 <main@@Base+0xe8c8>
   24594:	and	r1, r1, #-16777216	; 0xff000000
   24598:	eor	r3, r6, r7
   2459c:	eor	r1, r1, #1912602624	; 0x72000000
   245a0:	orrs	r1, r1, r3
   245a4:	bne	2465c <main@@Base+0xe920>
   245a8:	mov	r1, sl
   245ac:	mov	r3, #5
   245b0:	str	lr, [sp]
   245b4:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   245b8:	cmp	r0, sl
   245bc:	beq	2465c <main@@Base+0xe920>
   245c0:	mov	r1, #0
   245c4:	mov	r2, #11
   245c8:	b	24648 <main@@Base+0xe90c>
   245cc:	bic	r1, r1, #255	; 0xff
   245d0:	eor	r3, r6, r4
   245d4:	eor	r1, r1, r7
   245d8:	orrs	r1, r1, r3
   245dc:	bne	2465c <main@@Base+0xe920>
   245e0:	mov	r1, sl
   245e4:	mov	r3, #7
   245e8:	str	lr, [sp]
   245ec:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   245f0:	cmp	r0, sl
   245f4:	beq	2465c <main@@Base+0xe920>
   245f8:	mov	r1, #0
   245fc:	mov	r2, #10
   24600:	b	24648 <main@@Base+0xe90c>
   24604:	lsr	r5, r1, #16
   24608:	movw	r7, #25956	; 0x6564
   2460c:	movw	r3, #21870	; 0x556e
   24610:	orr	r5, r5, r6, lsl #16
   24614:	movt	r7, #30067	; 0x7573
   24618:	eor	r3, r3, r6, lsr #16
   2461c:	eor	r5, r5, r7
   24620:	orrs	r3, r5, r3
   24624:	bne	24668 <main@@Base+0xe92c>
   24628:	mov	r1, sl
   2462c:	mov	r3, #6
   24630:	str	lr, [sp]
   24634:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   24638:	cmp	r0, sl
   2463c:	beq	2465c <main@@Base+0xe920>
   24640:	mov	r1, #0
   24644:	mov	r2, #255	; 0xff
   24648:	str	r2, [r9]
   2464c:	str	r1, [r9, #4]
   24650:	ldr	r2, [sp, #8]
   24654:	str	r1, [r2]
   24658:	mov	sl, r0
   2465c:	mov	r0, sl
   24660:	sub	sp, fp, #28
   24664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24668:	eor	r1, r1, r4
   2466c:	eor	r3, r6, ip
   24670:	orrs	r1, r1, r3
   24674:	bne	2465c <main@@Base+0xe920>
   24678:	mov	r1, sl
   2467c:	mov	r3, #8
   24680:	str	lr, [sp]
   24684:	mov	r4, #8
   24688:	bl	31c24 <flatcc_json_parser_match_constant@@Base>
   2468c:	cmp	r0, sl
   24690:	beq	2465c <main@@Base+0xe920>
   24694:	mov	r5, #0
   24698:	strd	r4, [r9]
   2469c:	ldr	r1, [sp, #8]
   246a0:	str	r5, [r1]
   246a4:	b	24658 <main@@Base+0xe91c>
   246a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   246ac:	add	fp, sp, #28
   246b0:	sub	sp, sp, #36	; 0x24
   246b4:	mov	r5, r0
   246b8:	mov	r0, #0
   246bc:	mov	r4, r1
   246c0:	mov	r1, #4
   246c4:	mov	r7, r3
   246c8:	mov	r8, r2
   246cc:	str	r0, [r3]
   246d0:	ldr	r0, [r5]
   246d4:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   246d8:	cmp	r0, #0
   246dc:	beq	24704 <main@@Base+0xe9c8>
   246e0:	mov	r0, r5
   246e4:	mov	r1, r4
   246e8:	mov	r2, r8
   246ec:	mov	r3, #33	; 0x21
   246f0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   246f4:	mov	r4, r0
   246f8:	mov	r0, r4
   246fc:	sub	sp, fp, #28
   24700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24704:	add	r0, sp, #28
   24708:	mov	r1, r4
   2470c:	mov	r2, r8
   24710:	mov	r3, #1
   24714:	str	r0, [sp]
   24718:	mov	r0, r5
   2471c:	bl	33bcc <flatcc_json_parser_prepare_unions@@Base>
   24720:	cmp	r0, r8
   24724:	beq	246e0 <main@@Base+0xe9a4>
   24728:	cmp	r4, r8
   2472c:	beq	24760 <main@@Base+0xea24>
   24730:	ldrb	r0, [r4]
   24734:	cmp	r0, #123	; 0x7b
   24738:	bne	24760 <main@@Base+0xea24>
   2473c:	add	r1, r4, #1
   24740:	sub	r0, r8, r1
   24744:	cmp	r0, #2
   24748:	blt	247c4 <main@@Base+0xea88>
   2474c:	ldrb	r0, [r1]
   24750:	cmp	r0, #32
   24754:	bls	247b4 <main@@Base+0xea78>
   24758:	mov	r4, r1
   2475c:	b	247d4 <main@@Base+0xea98>
   24760:	mov	r0, r5
   24764:	mov	r1, r4
   24768:	mov	r2, r8
   2476c:	mov	r3, #21
   24770:	bl	316cc <flatcc_json_parser_set_error@@Base>
   24774:	mov	r4, r0
   24778:	ldr	r0, [r5, #20]
   2477c:	cmp	r0, #0
   24780:	bne	246e0 <main@@Base+0xe9a4>
   24784:	ldr	r3, [sp, #28]
   24788:	mov	r0, r5
   2478c:	mov	r1, r4
   24790:	mov	r2, r8
   24794:	bl	33c50 <flatcc_json_parser_finalize_unions@@Base>
   24798:	mov	r4, r0
   2479c:	ldr	r0, [r5]
   247a0:	bl	2e138 <flatcc_builder_end_table@@Base>
   247a4:	cmp	r0, #0
   247a8:	str	r0, [r7]
   247ac:	bne	246f8 <main@@Base+0xe9bc>
   247b0:	b	246e0 <main@@Base+0xe9a4>
   247b4:	bne	247c4 <main@@Base+0xea88>
   247b8:	ldrb	r0, [r4, #2]!
   247bc:	cmp	r0, #32
   247c0:	bhi	247d4 <main@@Base+0xea98>
   247c4:	mov	r0, r5
   247c8:	mov	r2, r8
   247cc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   247d0:	mov	r4, r0
   247d4:	cmp	r4, r8
   247d8:	mov	r2, r8
   247dc:	beq	24820 <main@@Base+0xeae4>
   247e0:	ldrb	r0, [r4]
   247e4:	cmp	r0, #125	; 0x7d
   247e8:	bne	2481c <main@@Base+0xeae0>
   247ec:	add	r1, r4, #1
   247f0:	sub	r0, r8, r1
   247f4:	cmp	r0, #2
   247f8:	blt	24fb8 <main@@Base+0xf27c>
   247fc:	ldrb	r0, [r1]
   24800:	cmp	r0, #32
   24804:	bhi	24f7c <main@@Base+0xf240>
   24808:	bne	24fb8 <main@@Base+0xf27c>
   2480c:	ldrb	r0, [r4, #2]!
   24810:	cmp	r0, #32
   24814:	bhi	24778 <main@@Base+0xea3c>
   24818:	b	24fb8 <main@@Base+0xf27c>
   2481c:	mov	r2, r4
   24820:	str	r7, [sp, #20]
   24824:	cmp	r2, r8
   24828:	mov	r9, r8
   2482c:	beq	2485c <main@@Base+0xeb20>
   24830:	ldrb	r0, [r2]
   24834:	cmp	r0, #34	; 0x22
   24838:	bne	24844 <main@@Base+0xeb08>
   2483c:	add	r9, r2, #1
   24840:	b	2485c <main@@Base+0xeb20>
   24844:	mov	r1, r2
   24848:	mov	r0, r5
   2484c:	mov	r2, r8
   24850:	mov	r3, #5
   24854:	bl	316cc <flatcc_json_parser_set_error@@Base>
   24858:	mov	r9, r0
   2485c:	sub	r1, r8, r9
   24860:	mov	r0, #8
   24864:	cmp	r1, #8
   24868:	movcc	r0, r1
   2486c:	and	r0, r0, #15
   24870:	sub	r2, r0, #1
   24874:	cmp	r2, #7
   24878:	bhi	24e84 <main@@Base+0xf148>
   2487c:	str	r1, [sp, #24]
   24880:	add	r0, pc, #36	; 0x24
   24884:	mov	lr, r5
   24888:	mov	sl, #0
   2488c:	mov	ip, #0
   24890:	mov	r6, #0
   24894:	mov	r1, #0
   24898:	mov	r3, #0
   2489c:	mov	r5, #0
   248a0:	mov	r7, #0
   248a4:	mov	r4, #0
   248a8:	ldr	pc, [r0, r2, lsl #2]
   248ac:	andeq	r4, r2, r0, lsl r9
   248b0:	andeq	r4, r2, r8, lsl #18
   248b4:	andeq	r4, r2, r0, lsl #18
   248b8:	strdeq	r4, [r2], -r8
   248bc:	andeq	r4, r2, ip, ror #17
   248c0:	andeq	r4, r2, r0, ror #17
   248c4:	ldrdeq	r4, [r2], -r0
   248c8:	andeq	r4, r2, ip, asr #17
   248cc:	ldrb	ip, [r9, #7]
   248d0:	ldrb	r0, [r9, #6]
   248d4:	mov	r6, sl
   248d8:	orr	r0, ip, r0, lsl #8
   248dc:	mov	sl, r0
   248e0:	ldrb	r0, [r9, #5]
   248e4:	mov	r1, r6
   248e8:	orr	sl, sl, r0, lsl #16
   248ec:	ldrb	r0, [r9, #4]
   248f0:	mov	r3, r1
   248f4:	orr	sl, sl, r0, lsl #24
   248f8:	ldrb	r0, [r9, #3]
   248fc:	orr	r5, r0, r3
   24900:	ldrb	r0, [r9, #2]
   24904:	orr	r7, r5, r0, lsl #8
   24908:	ldrb	r0, [r9, #1]
   2490c:	orr	r4, r7, r0, lsl #16
   24910:	movw	r2, #30976	; 0x7900
   24914:	movt	r2, #24942	; 0x616e
   24918:	add	r0, r2, #95	; 0x5f
   2491c:	eor	r1, sl, r0
   24920:	ldrb	r0, [r9]
   24924:	orr	r4, r4, r0, lsl #24
   24928:	movw	r0, #28281	; 0x6e79
   2492c:	movt	r0, #28001	; 0x6d61
   24930:	eor	r0, r4, r0
   24934:	orrs	r1, r1, r0
   24938:	bne	249f8 <main@@Base+0xecbc>
   2493c:	add	r6, r9, #8
   24940:	mov	r1, #8
   24944:	ldr	r7, [sp, #20]
   24948:	mov	r5, lr
   2494c:	sub	r0, r8, r6
   24950:	cmp	r0, #8
   24954:	movcc	r1, r0
   24958:	and	r1, r1, #15
   2495c:	sub	r2, r1, #1
   24960:	cmp	r2, #7
   24964:	bhi	24db8 <main@@Base+0xf07c>
   24968:	add	r3, pc, #4
   2496c:	mov	r1, #0
   24970:	ldr	pc, [r3, r2, lsl #2]
   24974:	andeq	r4, r2, r8, lsr #19
   24978:	andeq	r4, r2, r0, lsr #19
   2497c:	muleq	r2, r8, r9
   24980:	muleq	r2, r4, r9
   24984:	muleq	r2, r4, r9
   24988:	muleq	r2, r4, r9
   2498c:	muleq	r2, r4, r9
   24990:	muleq	r2, r4, r9
   24994:	ldrb	r1, [r9, #11]
   24998:	ldrb	r2, [r9, #10]
   2499c:	orr	r1, r1, r2, lsl #8
   249a0:	ldrb	r2, [r9, #9]
   249a4:	orr	r1, r1, r2, lsl #16
   249a8:	ldrb	r2, [r6]
   249ac:	orr	r1, r1, r2, lsl #24
   249b0:	movw	r2, #28773	; 0x7065
   249b4:	movt	r2, #29817	; 0x7479
   249b8:	teq	r1, r2
   249bc:	bne	24db8 <main@@Base+0xf07c>
   249c0:	cmp	r0, #5
   249c4:	blt	24db8 <main@@Base+0xf07c>
   249c8:	ldrb	r0, [r9, #12]
   249cc:	cmp	r0, #34	; 0x22
   249d0:	bne	24db8 <main@@Base+0xf07c>
   249d4:	add	r1, r9, #13
   249d8:	sub	r0, r8, r1
   249dc:	cmp	r0, #2
   249e0:	blt	24ad4 <main@@Base+0xed98>
   249e4:	ldrb	r0, [r1]
   249e8:	cmp	r0, #32
   249ec:	bls	24ac4 <main@@Base+0xed88>
   249f0:	mov	r9, r1
   249f4:	b	24ae4 <main@@Base+0xeda8>
   249f8:	ldr	r6, [sp, #24]
   249fc:	bic	r1, sl, #255	; 0xff
   24a00:	mov	r5, lr
   24a04:	eor	r1, r1, r2
   24a08:	orrs	r0, r1, r0
   24a0c:	bne	24b94 <main@@Base+0xee58>
   24a10:	cmp	r6, #8
   24a14:	mov	r1, r9
   24a18:	blt	24b58 <main@@Base+0xee1c>
   24a1c:	ldrb	r0, [r9, #7]
   24a20:	mov	r1, r9
   24a24:	cmp	r0, #34	; 0x22
   24a28:	bne	24b58 <main@@Base+0xee1c>
   24a2c:	add	r2, r9, #8
   24a30:	sub	r0, r8, r2
   24a34:	cmp	r0, #2
   24a38:	blt	24a64 <main@@Base+0xed28>
   24a3c:	ldrb	r0, [r2]
   24a40:	cmp	r0, #32
   24a44:	bls	24a50 <main@@Base+0xed14>
   24a48:	mov	r1, r2
   24a4c:	b	24a78 <main@@Base+0xed3c>
   24a50:	bne	24a64 <main@@Base+0xed28>
   24a54:	mov	r1, r9
   24a58:	ldrb	r0, [r1, #9]!
   24a5c:	cmp	r0, #32
   24a60:	bhi	24a78 <main@@Base+0xed3c>
   24a64:	mov	r1, r2
   24a68:	mov	r0, r5
   24a6c:	mov	r2, r8
   24a70:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24a74:	mov	r1, r0
   24a78:	cmp	r1, r8
   24a7c:	beq	24ab0 <main@@Base+0xed74>
   24a80:	ldrb	r0, [r1]
   24a84:	cmp	r0, #58	; 0x3a
   24a88:	bne	24ab0 <main@@Base+0xed74>
   24a8c:	add	r2, r1, #1
   24a90:	sub	r0, r8, r2
   24a94:	cmp	r0, #2
   24a98:	blt	24b44 <main@@Base+0xee08>
   24a9c:	ldrb	r0, [r2]
   24aa0:	cmp	r0, #32
   24aa4:	bls	24b34 <main@@Base+0xedf8>
   24aa8:	mov	r1, r2
   24aac:	b	24b58 <main@@Base+0xee1c>
   24ab0:	mov	r0, r5
   24ab4:	mov	r2, r8
   24ab8:	mov	r3, #4
   24abc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   24ac0:	b	24b54 <main@@Base+0xee18>
   24ac4:	bne	24ad4 <main@@Base+0xed98>
   24ac8:	ldrb	r0, [r9, #14]!
   24acc:	cmp	r0, #32
   24ad0:	bhi	24ae4 <main@@Base+0xeda8>
   24ad4:	mov	r0, r5
   24ad8:	mov	r2, r8
   24adc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24ae0:	mov	r9, r0
   24ae4:	cmp	r9, r8
   24ae8:	beq	24b1c <main@@Base+0xede0>
   24aec:	ldrb	r0, [r9]
   24af0:	cmp	r0, #58	; 0x3a
   24af4:	bne	24b1c <main@@Base+0xede0>
   24af8:	add	r1, r9, #1
   24afc:	sub	r0, r8, r1
   24b00:	cmp	r0, #2
   24b04:	blt	24d54 <main@@Base+0xf018>
   24b08:	ldrb	r0, [r1]
   24b0c:	cmp	r0, #32
   24b10:	bls	24d44 <main@@Base+0xf008>
   24b14:	mov	r9, r1
   24b18:	b	24d64 <main@@Base+0xf028>
   24b1c:	mov	r0, r5
   24b20:	mov	r1, r9
   24b24:	mov	r2, r8
   24b28:	mov	r3, #4
   24b2c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   24b30:	b	24d60 <main@@Base+0xf024>
   24b34:	bne	24b44 <main@@Base+0xee08>
   24b38:	ldrb	r0, [r1, #2]!
   24b3c:	cmp	r0, #32
   24b40:	bhi	24b58 <main@@Base+0xee1c>
   24b44:	mov	r1, r2
   24b48:	mov	r0, r5
   24b4c:	mov	r2, r8
   24b50:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24b54:	mov	r1, r0
   24b58:	cmp	r9, r1
   24b5c:	beq	24b94 <main@@Base+0xee58>
   24b60:	ldr	r0, [sp, #28]
   24b64:	mov	r2, #3
   24b68:	mov	r3, #0
   24b6c:	str	r2, [sp]
   24b70:	mov	r2, r8
   24b74:	str	r0, [sp, #4]
   24b78:	movw	r0, #7416	; 0x1cf8
   24b7c:	movt	r0, #2
   24b80:	str	r0, [sp, #8]
   24b84:	mov	r0, r5
   24b88:	bl	34244 <flatcc_json_parser_union_vector@@Base>
   24b8c:	ldr	r7, [sp, #20]
   24b90:	b	24e94 <main@@Base+0xf158>
   24b94:	lsr	r1, sl, #16
   24b98:	movw	r2, #27000	; 0x6978
   24b9c:	movw	r0, #28786	; 0x7072
   24ba0:	orr	r1, r1, r4, lsl #16
   24ba4:	movt	r2, #25958	; 0x6566
   24ba8:	eor	r0, r0, r4, lsr #16
   24bac:	eor	r1, r1, r2
   24bb0:	orrs	r0, r1, r0
   24bb4:	bne	24bfc <main@@Base+0xeec0>
   24bb8:	ldr	r7, [sp, #20]
   24bbc:	cmp	r6, #7
   24bc0:	mov	r1, r9
   24bc4:	blt	24de8 <main@@Base+0xf0ac>
   24bc8:	ldrb	r0, [r9, #6]
   24bcc:	mov	r1, r9
   24bd0:	cmp	r0, #34	; 0x22
   24bd4:	bne	24de8 <main@@Base+0xf0ac>
   24bd8:	add	r2, r9, #7
   24bdc:	sub	r0, r8, r2
   24be0:	cmp	r0, #2
   24be4:	blt	24c70 <main@@Base+0xef34>
   24be8:	ldrb	r0, [r2]
   24bec:	cmp	r0, #32
   24bf0:	bls	24c5c <main@@Base+0xef20>
   24bf4:	mov	r1, r2
   24bf8:	b	24c84 <main@@Base+0xef48>
   24bfc:	movw	r0, #30313	; 0x7669
   24c00:	ldr	r7, [sp, #20]
   24c04:	and	r1, sl, #-16777216	; 0xff000000
   24c08:	movt	r0, #28015	; 0x6d6f
   24c0c:	eor	r1, r1, #1694498816	; 0x65000000
   24c10:	eor	r0, r4, r0
   24c14:	orrs	r0, r1, r0
   24c18:	bne	24e84 <main@@Base+0xf148>
   24c1c:	cmp	r6, #6
   24c20:	mov	r1, r9
   24c24:	blt	24e40 <main@@Base+0xf104>
   24c28:	ldrb	r0, [r9, #5]
   24c2c:	mov	r1, r9
   24c30:	cmp	r0, #34	; 0x22
   24c34:	bne	24e40 <main@@Base+0xf104>
   24c38:	add	r2, r9, #6
   24c3c:	sub	r0, r8, r2
   24c40:	cmp	r0, #2
   24c44:	blt	24ce4 <main@@Base+0xefa8>
   24c48:	ldrb	r0, [r2]
   24c4c:	cmp	r0, #32
   24c50:	bls	24cd0 <main@@Base+0xef94>
   24c54:	mov	r1, r2
   24c58:	b	24cf8 <main@@Base+0xefbc>
   24c5c:	bne	24c70 <main@@Base+0xef34>
   24c60:	mov	r1, r9
   24c64:	ldrb	r0, [r1, #8]!
   24c68:	cmp	r0, #32
   24c6c:	bhi	24c84 <main@@Base+0xef48>
   24c70:	mov	r1, r2
   24c74:	mov	r0, r5
   24c78:	mov	r2, r8
   24c7c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24c80:	mov	r1, r0
   24c84:	cmp	r1, r8
   24c88:	beq	24cbc <main@@Base+0xef80>
   24c8c:	ldrb	r0, [r1]
   24c90:	cmp	r0, #58	; 0x3a
   24c94:	bne	24cbc <main@@Base+0xef80>
   24c98:	add	r2, r1, #1
   24c9c:	sub	r0, r8, r2
   24ca0:	cmp	r0, #2
   24ca4:	blt	24dd4 <main@@Base+0xf098>
   24ca8:	ldrb	r0, [r2]
   24cac:	cmp	r0, #32
   24cb0:	bls	24dc4 <main@@Base+0xf088>
   24cb4:	mov	r1, r2
   24cb8:	b	24de8 <main@@Base+0xf0ac>
   24cbc:	mov	r0, r5
   24cc0:	mov	r2, r8
   24cc4:	mov	r3, #4
   24cc8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   24ccc:	b	24de4 <main@@Base+0xf0a8>
   24cd0:	bne	24ce4 <main@@Base+0xefa8>
   24cd4:	mov	r1, r9
   24cd8:	ldrb	r0, [r1, #7]!
   24cdc:	cmp	r0, #32
   24ce0:	bhi	24cf8 <main@@Base+0xefbc>
   24ce4:	mov	r1, r2
   24ce8:	mov	r0, r5
   24cec:	mov	r2, r8
   24cf0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24cf4:	mov	r1, r0
   24cf8:	cmp	r1, r8
   24cfc:	beq	24d30 <main@@Base+0xeff4>
   24d00:	ldrb	r0, [r1]
   24d04:	cmp	r0, #58	; 0x3a
   24d08:	bne	24d30 <main@@Base+0xeff4>
   24d0c:	add	r2, r1, #1
   24d10:	sub	r0, r8, r2
   24d14:	cmp	r0, #2
   24d18:	blt	24e2c <main@@Base+0xf0f0>
   24d1c:	ldrb	r0, [r2]
   24d20:	cmp	r0, #32
   24d24:	bls	24e1c <main@@Base+0xf0e0>
   24d28:	mov	r1, r2
   24d2c:	b	24e40 <main@@Base+0xf104>
   24d30:	mov	r0, r5
   24d34:	mov	r2, r8
   24d38:	mov	r3, #4
   24d3c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   24d40:	b	24e3c <main@@Base+0xf100>
   24d44:	bne	24d54 <main@@Base+0xf018>
   24d48:	ldrb	r0, [r9, #2]!
   24d4c:	cmp	r0, #32
   24d50:	bhi	24d64 <main@@Base+0xf028>
   24d54:	mov	r0, r5
   24d58:	mov	r2, r8
   24d5c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24d60:	mov	r9, r0
   24d64:	cmp	r6, r9
   24d68:	beq	24db8 <main@@Base+0xf07c>
   24d6c:	ldr	r0, [sp, #28]
   24d70:	mov	r1, #3
   24d74:	mov	r2, r8
   24d78:	mov	r3, #0
   24d7c:	str	r1, [sp]
   24d80:	mov	r1, r9
   24d84:	str	r0, [sp, #4]
   24d88:	movw	r0, #33304	; 0x8218
   24d8c:	movt	r0, #5
   24d90:	str	r0, [sp, #8]
   24d94:	movw	r0, #7416	; 0x1cf8
   24d98:	movt	r0, #2
   24d9c:	str	r0, [sp, #12]
   24da0:	movw	r0, #20424	; 0x4fc8
   24da4:	movt	r0, #2
   24da8:	str	r0, [sp, #16]
   24dac:	mov	r0, r5
   24db0:	bl	34704 <flatcc_json_parser_union_type_vector@@Base>
   24db4:	b	24e94 <main@@Base+0xf158>
   24db8:	mov	r0, r5
   24dbc:	mov	r1, r6
   24dc0:	b	24e8c <main@@Base+0xf150>
   24dc4:	bne	24dd4 <main@@Base+0xf098>
   24dc8:	ldrb	r0, [r1, #2]!
   24dcc:	cmp	r0, #32
   24dd0:	bhi	24de8 <main@@Base+0xf0ac>
   24dd4:	mov	r1, r2
   24dd8:	mov	r0, r5
   24ddc:	mov	r2, r8
   24de0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24de4:	mov	r1, r0
   24de8:	cmp	r9, r1
   24dec:	beq	24e84 <main@@Base+0xf148>
   24df0:	mov	r0, r5
   24df4:	mov	r2, r8
   24df8:	add	r3, sp, #32
   24dfc:	bl	24fdc <main@@Base+0xf2a0>
   24e00:	ldr	r6, [sp, #32]
   24e04:	mov	r4, r0
   24e08:	cmp	r6, #0
   24e0c:	beq	246e0 <main@@Base+0xe9a4>
   24e10:	ldr	r0, [r5]
   24e14:	mov	r1, #0
   24e18:	b	24e70 <main@@Base+0xf134>
   24e1c:	bne	24e2c <main@@Base+0xf0f0>
   24e20:	ldrb	r0, [r1, #2]!
   24e24:	cmp	r0, #32
   24e28:	bhi	24e40 <main@@Base+0xf104>
   24e2c:	mov	r1, r2
   24e30:	mov	r0, r5
   24e34:	mov	r2, r8
   24e38:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24e3c:	mov	r1, r0
   24e40:	cmp	r9, r1
   24e44:	beq	24e84 <main@@Base+0xf148>
   24e48:	mov	r0, r5
   24e4c:	mov	r2, r8
   24e50:	add	r3, sp, #32
   24e54:	bl	28068 <main@@Base+0x1232c>
   24e58:	ldr	r6, [sp, #32]
   24e5c:	mov	r4, r0
   24e60:	cmp	r6, #0
   24e64:	beq	246e0 <main@@Base+0xe9a4>
   24e68:	ldr	r0, [r5]
   24e6c:	mov	r1, #1
   24e70:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   24e74:	cmp	r0, #0
   24e78:	beq	246e0 <main@@Base+0xe9a4>
   24e7c:	str	r6, [r0]
   24e80:	b	24e98 <main@@Base+0xf15c>
   24e84:	mov	r0, r5
   24e88:	mov	r1, r9
   24e8c:	mov	r2, r8
   24e90:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   24e94:	mov	r4, r0
   24e98:	sub	r0, r8, r4
   24e9c:	cmp	r0, #2
   24ea0:	blt	24ecc <main@@Base+0xf190>
   24ea4:	ldrb	r0, [r4]
   24ea8:	cmp	r0, #32
   24eac:	bls	24eb8 <main@@Base+0xf17c>
   24eb0:	mov	r2, r4
   24eb4:	b	24ee0 <main@@Base+0xf1a4>
   24eb8:	bne	24ecc <main@@Base+0xf190>
   24ebc:	mov	r2, r4
   24ec0:	ldrb	r0, [r2, #1]!
   24ec4:	cmp	r0, #32
   24ec8:	bhi	24ee0 <main@@Base+0xf1a4>
   24ecc:	mov	r0, r5
   24ed0:	mov	r1, r4
   24ed4:	mov	r2, r8
   24ed8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24edc:	mov	r2, r0
   24ee0:	cmp	r2, r8
   24ee4:	beq	24f50 <main@@Base+0xf214>
   24ee8:	ldrb	r0, [r2]
   24eec:	cmp	r0, #44	; 0x2c
   24ef0:	bne	24f58 <main@@Base+0xf21c>
   24ef4:	add	r1, r2, #1
   24ef8:	sub	r0, r8, r1
   24efc:	cmp	r0, #2
   24f00:	blt	24f28 <main@@Base+0xf1ec>
   24f04:	ldrb	r0, [r1]
   24f08:	cmp	r0, #32
   24f0c:	bls	24f18 <main@@Base+0xf1dc>
   24f10:	mov	r2, r1
   24f14:	b	24f38 <main@@Base+0xf1fc>
   24f18:	bne	24f28 <main@@Base+0xf1ec>
   24f1c:	ldrb	r0, [r2, #2]!
   24f20:	cmp	r0, #32
   24f24:	bhi	24f38 <main@@Base+0xf1fc>
   24f28:	mov	r0, r5
   24f2c:	mov	r2, r8
   24f30:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24f34:	mov	r2, r0
   24f38:	cmp	r2, r8
   24f3c:	beq	24f84 <main@@Base+0xf248>
   24f40:	ldrb	r0, [r2]
   24f44:	cmp	r0, #125	; 0x7d
   24f48:	bne	24824 <main@@Base+0xeae8>
   24f4c:	b	24f60 <main@@Base+0xf224>
   24f50:	mov	r4, r8
   24f54:	b	24778 <main@@Base+0xea3c>
   24f58:	cmp	r0, #125	; 0x7d
   24f5c:	bne	24f90 <main@@Base+0xf254>
   24f60:	add	r1, r2, #1
   24f64:	sub	r0, r8, r1
   24f68:	cmp	r0, #2
   24f6c:	blt	24fb8 <main@@Base+0xf27c>
   24f70:	ldrb	r0, [r1]
   24f74:	cmp	r0, #32
   24f78:	bls	24fa4 <main@@Base+0xf268>
   24f7c:	mov	r4, r1
   24f80:	b	24778 <main@@Base+0xea3c>
   24f84:	mov	r0, r5
   24f88:	mov	r1, r8
   24f8c:	b	24f98 <main@@Base+0xf25c>
   24f90:	mov	r0, r5
   24f94:	mov	r1, r2
   24f98:	mov	r2, r8
   24f9c:	mov	r3, #10
   24fa0:	b	24770 <main@@Base+0xea34>
   24fa4:	bne	24fb8 <main@@Base+0xf27c>
   24fa8:	ldrb	r0, [r2, #2]!
   24fac:	cmp	r0, #32
   24fb0:	mov	r4, r2
   24fb4:	bhi	24778 <main@@Base+0xea3c>
   24fb8:	mov	r0, r5
   24fbc:	mov	r2, r8
   24fc0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   24fc4:	b	24774 <main@@Base+0xea38>
   24fc8:	mov	r1, #0
   24fcc:	cmp	r0, #5
   24fd0:	movwcc	r1, #1
   24fd4:	mov	r0, r1
   24fd8:	bx	lr
   24fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fe0:	add	fp, sp, #28
   24fe4:	sub	sp, sp, #68	; 0x44
   24fe8:	mov	r7, r0
   24fec:	mov	r0, #0
   24ff0:	mov	sl, r1
   24ff4:	mov	r1, #3
   24ff8:	mov	r4, r3
   24ffc:	mov	r8, r2
   25000:	str	r0, [r3]
   25004:	ldr	r0, [r7]
   25008:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   2500c:	cmp	r0, #0
   25010:	bne	27fb0 <main@@Base+0x12274>
   25014:	cmp	sl, r8
   25018:	beq	2504c <main@@Base+0xf310>
   2501c:	ldrb	r0, [sl]
   25020:	cmp	r0, #123	; 0x7b
   25024:	bne	2504c <main@@Base+0xf310>
   25028:	add	r1, sl, #1
   2502c:	sub	r0, r8, r1
   25030:	cmp	r0, #2
   25034:	blt	2507c <main@@Base+0xf340>
   25038:	ldrb	r0, [r1]
   2503c:	cmp	r0, #32
   25040:	bls	2506c <main@@Base+0xf330>
   25044:	mov	sl, r1
   25048:	b	2508c <main@@Base+0xf350>
   2504c:	mov	r0, r7
   25050:	mov	r1, sl
   25054:	mov	r2, r8
   25058:	mov	r3, #21
   2505c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25060:	mov	sl, r0
   25064:	add	r0, r7, #20
   25068:	b	27fa4 <main@@Base+0x12268>
   2506c:	bne	2507c <main@@Base+0xf340>
   25070:	ldrb	r0, [sl, #2]!
   25074:	cmp	r0, #32
   25078:	bhi	2508c <main@@Base+0xf350>
   2507c:	mov	r0, r7
   25080:	mov	r2, r8
   25084:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25088:	mov	sl, r0
   2508c:	cmp	sl, r8
   25090:	mov	r2, r8
   25094:	beq	250cc <main@@Base+0xf390>
   25098:	ldrb	r0, [sl]
   2509c:	cmp	r0, #125	; 0x7d
   250a0:	bne	250c8 <main@@Base+0xf38c>
   250a4:	add	r1, sl, #1
   250a8:	sub	r0, r8, r1
   250ac:	cmp	r0, #2
   250b0:	blt	27ffc <main@@Base+0x122c0>
   250b4:	ldrb	r0, [r1]
   250b8:	cmp	r0, #32
   250bc:	bls	27fec <main@@Base+0x122b0>
   250c0:	mov	sl, r1
   250c4:	b	25064 <main@@Base+0xf328>
   250c8:	mov	r2, sl
   250cc:	add	r0, r7, #20
   250d0:	movw	r1, #25186	; 0x6262
   250d4:	movw	sl, #0
   250d8:	str	r8, [sp, #24]
   250dc:	str	r7, [sp, #32]
   250e0:	str	r4, [sp, #28]
   250e4:	str	r0, [sp, #20]
   250e8:	movw	r0, #257	; 0x101
   250ec:	movt	r1, #25186	; 0x6262
   250f0:	movt	sl, #26418	; 0x6732
   250f4:	movt	r0, #257	; 0x101
   250f8:	add	r0, r1, r0
   250fc:	str	r0, [sp, #16]
   25100:	movw	r0, #514	; 0x202
   25104:	movt	r0, #514	; 0x202
   25108:	add	r0, r1, r0
   2510c:	str	r0, [sp, #12]
   25110:	cmp	r2, r8
   25114:	mov	r9, r8
   25118:	beq	25148 <main@@Base+0xf40c>
   2511c:	ldrb	r0, [r2]
   25120:	cmp	r0, #34	; 0x22
   25124:	bne	25130 <main@@Base+0xf3f4>
   25128:	add	r9, r2, #1
   2512c:	b	25148 <main@@Base+0xf40c>
   25130:	mov	r1, r2
   25134:	mov	r0, r7
   25138:	mov	r2, r8
   2513c:	mov	r3, #5
   25140:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25144:	mov	r9, r0
   25148:	sub	r0, r8, r9
   2514c:	mov	r1, #8
   25150:	cmp	r0, #8
   25154:	movcs	r0, r1
   25158:	and	r0, r0, #15
   2515c:	sub	r3, r0, #1
   25160:	cmp	r3, #7
   25164:	bhi	253f4 <main@@Base+0xf6b8>
   25168:	add	r5, pc, #32
   2516c:	mov	r0, #0
   25170:	mov	ip, #0
   25174:	mov	lr, #0
   25178:	mov	r7, #0
   2517c:	mov	r2, #0
   25180:	mov	r6, #0
   25184:	mov	r4, #0
   25188:	mov	r1, #0
   2518c:	ldr	pc, [r5, r3, lsl #2]
   25190:	strdeq	r5, [r2], -r4
   25194:	andeq	r5, r2, ip, ror #3
   25198:	andeq	r5, r2, r4, ror #3
   2519c:	ldrdeq	r5, [r2], -ip
   251a0:	ldrdeq	r5, [r2], -r0
   251a4:	andeq	r5, r2, r4, asr #3
   251a8:			; <UNDEFINED> instruction: 0x000251b4
   251ac:			; <UNDEFINED> instruction: 0x000251b0
   251b0:	ldrb	ip, [r9, #7]
   251b4:	ldrb	r1, [r9, #6]
   251b8:	mov	lr, r0
   251bc:	orr	r1, ip, r1, lsl #8
   251c0:	mov	r0, r1
   251c4:	ldrb	r1, [r9, #5]
   251c8:	mov	r7, lr
   251cc:	orr	r0, r0, r1, lsl #16
   251d0:	ldrb	r1, [r9, #4]
   251d4:	mov	r2, r7
   251d8:	orr	r0, r0, r1, lsl #24
   251dc:	ldrb	r1, [r9, #3]
   251e0:	orr	r6, r1, r2
   251e4:	ldrb	r1, [r9, #2]
   251e8:	orr	r4, r6, r1, lsl #8
   251ec:	ldrb	r1, [r9, #1]
   251f0:	orr	r1, r4, r1, lsl #16
   251f4:	movw	r2, #28526	; 0x6f6e
   251f8:	movt	r2, #27251	; 0x6a73
   251fc:	eor	r0, r0, r2
   25200:	ldrb	r2, [r9]
   25204:	orr	r1, r1, r2, lsl #24
   25208:	movw	r2, #29556	; 0x7374
   2520c:	movt	r2, #29797	; 0x7465
   25210:	eor	r1, r1, r2
   25214:	orrs	r0, r0, r1
   25218:	bne	253f4 <main@@Base+0xf6b8>
   2521c:	add	r1, r9, #8
   25220:	mov	r2, #8
   25224:	sub	r0, r8, r1
   25228:	cmp	r0, #8
   2522c:	movcs	r0, r2
   25230:	and	r0, r0, #15
   25234:	sub	r7, r0, #1
   25238:	cmp	r7, #7
   2523c:	bhi	25400 <main@@Base+0xf6c4>
   25240:	add	r0, pc, #32
   25244:	mov	r8, #0
   25248:	mov	ip, #0
   2524c:	mov	lr, #0
   25250:	mov	r6, #0
   25254:	mov	r3, #0
   25258:	mov	r5, #0
   2525c:	mov	r2, #0
   25260:	mov	r4, #0
   25264:	ldr	pc, [r0, r7, lsl #2]
   25268:	andeq	r5, r2, ip, asr #5
   2526c:	andeq	r5, r2, r4, asr #5
   25270:			; <UNDEFINED> instruction: 0x000252bc
   25274:			; <UNDEFINED> instruction: 0x000252b4
   25278:	andeq	r5, r2, r8, lsr #5
   2527c:	muleq	r2, ip, r2
   25280:	andeq	r5, r2, ip, lsl #5
   25284:	andeq	r5, r2, r8, lsl #5
   25288:	ldrb	ip, [r9, #15]
   2528c:	ldrb	r0, [r9, #14]
   25290:	mov	lr, r8
   25294:	orr	r0, ip, r0, lsl #8
   25298:	mov	r8, r0
   2529c:	ldrb	r0, [r9, #13]
   252a0:	mov	r6, lr
   252a4:	orr	r8, r8, r0, lsl #16
   252a8:	ldrb	r0, [r9, #12]
   252ac:	mov	r3, r6
   252b0:	orr	r8, r8, r0, lsl #24
   252b4:	ldrb	r0, [r9, #11]
   252b8:	orr	r5, r0, r3
   252bc:	ldrb	r0, [r9, #10]
   252c0:	orr	r2, r5, r0, lsl #8
   252c4:	ldrb	r0, [r9, #9]
   252c8:	orr	r4, r2, r0, lsl #16
   252cc:	ldrb	r2, [r1]
   252d0:	movw	r0, #28769	; 0x7061
   252d4:	movw	r3, #25958	; 0x6566
   252d8:	movt	r0, #27000	; 0x6978
   252dc:	movt	r3, #28786	; 0x7072
   252e0:	eor	r0, r8, r0
   252e4:	ldr	r8, [sp, #24]
   252e8:	orr	r2, r4, r2, lsl #24
   252ec:	eor	r2, r2, r3
   252f0:	orrs	r0, r0, r2
   252f4:	bne	25400 <main@@Base+0xf6c4>
   252f8:	add	ip, r9, #16
   252fc:	mov	r0, #8
   25300:	sub	r8, r8, ip
   25304:	cmp	r8, #8
   25308:	movcc	r0, r8
   2530c:	and	r0, r0, #15
   25310:	sub	r2, r0, #1
   25314:	cmp	r2, #7
   25318:	bhi	256c4 <main@@Base+0xf988>
   2531c:	add	r7, pc, #24
   25320:	mov	r0, #0
   25324:	mov	r1, #0
   25328:	mov	r3, #0
   2532c:	mov	r6, #0
   25330:	mov	r4, #0
   25334:	mov	r5, #0
   25338:	ldr	pc, [r7, r2, lsl #2]
   2533c:	andeq	r5, r2, ip, lsl #7
   25340:	andeq	r5, r2, r4, lsl #7
   25344:	andeq	r5, r2, ip, ror r3
   25348:	andeq	r5, r2, r4, ror r3
   2534c:	andeq	r5, r2, r4, ror #6
   25350:	andeq	r5, r2, ip, asr r3
   25354:	andeq	r5, r2, ip, asr r3
   25358:	andeq	r5, r2, ip, asr r3
   2535c:	ldrb	r1, [r9, #21]
   25360:	lsl	r1, r1, #16
   25364:	ldrb	r2, [r9, #20]
   25368:	mov	r3, r0
   2536c:	orr	r1, r1, r2, lsl #24
   25370:	mov	r0, r1
   25374:	ldrb	r1, [r9, #19]
   25378:	orr	r6, r1, r3
   2537c:	ldrb	r1, [r9, #18]
   25380:	orr	r4, r6, r1, lsl #8
   25384:	ldrb	r1, [r9, #17]
   25388:	orr	r5, r4, r1, lsl #16
   2538c:	ldrb	r1, [ip]
   25390:	mov	r6, r0
   25394:	movw	r3, #26990	; 0x696e
   25398:	bfc	r6, #0, #16
   2539c:	movt	r3, #29299	; 0x7273
   253a0:	eor	r2, r6, sl
   253a4:	orr	r1, r5, r1, lsl #24
   253a8:	eor	r5, r1, r3
   253ac:	orrs	r2, r2, r5
   253b0:	bne	25408 <main@@Base+0xf6cc>
   253b4:	cmp	r8, #7
   253b8:	blt	256c4 <main@@Base+0xf988>
   253bc:	ldrb	r0, [r9, #22]
   253c0:	cmp	r0, #34	; 0x22
   253c4:	bne	256c4 <main@@Base+0xf988>
   253c8:	ldr	r4, [sp, #24]
   253cc:	ldr	r5, [sp, #32]
   253d0:	add	r1, r9, #23
   253d4:	sub	r0, r4, r1
   253d8:	cmp	r0, #2
   253dc:	blt	254cc <main@@Base+0xf790>
   253e0:	ldrb	r0, [r1]
   253e4:	cmp	r0, #32
   253e8:	bls	254bc <main@@Base+0xf780>
   253ec:	mov	r9, r1
   253f0:	b	254e4 <main@@Base+0xf7a8>
   253f4:	ldr	r7, [sp, #32]
   253f8:	mov	r1, r9
   253fc:	b	256d0 <main@@Base+0xf994>
   25400:	ldr	r7, [sp, #32]
   25404:	b	256d0 <main@@Base+0xf994>
   25408:	cmp	r8, #6
   2540c:	blt	25434 <main@@Base+0xf6f8>
   25410:	movw	r2, #26990	; 0x696e
   25414:	and	r0, r0, #-16777216	; 0xff000000
   25418:	movt	r2, #29299	; 0x7273
   2541c:	eor	r0, r0, #1728053248	; 0x67000000
   25420:	eor	r1, r1, r2
   25424:	orrs	r0, r0, r1
   25428:	ldrbeq	r0, [r9, #21]
   2542c:	cmpeq	r0, #34	; 0x22
   25430:	beq	2548c <main@@Base+0xf750>
   25434:	movw	sl, #0
   25438:	movt	sl, #26418	; 0x6732
   2543c:	add	r0, sl, #65536	; 0x10000
   25440:	eor	r0, r6, r0
   25444:	orrs	r0, r0, r5
   25448:	bne	256c4 <main@@Base+0xf988>
   2544c:	cmp	r8, #7
   25450:	ldr	r8, [sp, #24]
   25454:	ldr	r7, [sp, #32]
   25458:	blt	25a24 <main@@Base+0xfce8>
   2545c:	ldrb	r0, [r9, #22]
   25460:	cmp	r0, #34	; 0x22
   25464:	bne	25a24 <main@@Base+0xfce8>
   25468:	add	r1, r9, #23
   2546c:	sub	r0, r8, r1
   25470:	cmp	r0, #2
   25474:	blt	255d8 <main@@Base+0xf89c>
   25478:	ldrb	r0, [r1]
   2547c:	cmp	r0, #32
   25480:	bls	255c8 <main@@Base+0xf88c>
   25484:	mov	r9, r1
   25488:	b	255f0 <main@@Base+0xf8b4>
   2548c:	ldr	r4, [sp, #24]
   25490:	ldr	r2, [sp, #32]
   25494:	add	r1, r9, #22
   25498:	sub	r0, r4, r1
   2549c:	cmp	r0, #2
   254a0:	blt	25550 <main@@Base+0xf814>
   254a4:	ldrb	r0, [r1]
   254a8:	cmp	r0, #32
   254ac:	bls	25538 <main@@Base+0xf7fc>
   254b0:	ldr	r4, [sp, #24]
   254b4:	mov	sl, r1
   254b8:	b	25570 <main@@Base+0xf834>
   254bc:	bne	254cc <main@@Base+0xf790>
   254c0:	ldrb	r0, [r9, #24]!
   254c4:	cmp	r0, #32
   254c8:	bhi	254e4 <main@@Base+0xf7a8>
   254cc:	mov	r0, r5
   254d0:	mov	r2, r4
   254d4:	mov	r6, ip
   254d8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   254dc:	mov	ip, r6
   254e0:	mov	r9, r0
   254e4:	mov	r6, ip
   254e8:	cmp	r9, r4
   254ec:	beq	25520 <main@@Base+0xf7e4>
   254f0:	ldrb	r0, [r9]
   254f4:	cmp	r0, #58	; 0x3a
   254f8:	bne	25520 <main@@Base+0xf7e4>
   254fc:	add	r1, r9, #1
   25500:	sub	r0, r4, r1
   25504:	cmp	r0, #2
   25508:	blt	25654 <main@@Base+0xf918>
   2550c:	ldrb	r0, [r1]
   25510:	cmp	r0, #32
   25514:	bls	25644 <main@@Base+0xf908>
   25518:	mov	r9, r1
   2551c:	b	25664 <main@@Base+0xf928>
   25520:	mov	r0, r5
   25524:	mov	r1, r9
   25528:	mov	r2, r4
   2552c:	mov	r3, #4
   25530:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25534:	b	25660 <main@@Base+0xf924>
   25538:	ldr	r4, [sp, #24]
   2553c:	bne	25550 <main@@Base+0xf814>
   25540:	mov	sl, r9
   25544:	ldrb	r0, [sl, #23]!
   25548:	cmp	r0, #32
   2554c:	bhi	25570 <main@@Base+0xf834>
   25550:	mov	r0, r2
   25554:	mov	sl, r2
   25558:	mov	r2, r4
   2555c:	mov	r7, ip
   25560:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25564:	mov	r2, sl
   25568:	mov	ip, r7
   2556c:	mov	sl, r0
   25570:	cmp	sl, r4
   25574:	str	ip, [sp, #8]
   25578:	beq	255b0 <main@@Base+0xf874>
   2557c:	ldrb	r0, [sl]
   25580:	cmp	r0, #58	; 0x3a
   25584:	bne	255b0 <main@@Base+0xf874>
   25588:	ldr	r0, [sp, #24]
   2558c:	add	r1, sl, #1
   25590:	sub	r0, r0, r1
   25594:	cmp	r0, #2
   25598:	blt	257f8 <main@@Base+0xfabc>
   2559c:	ldrb	r0, [r1]
   255a0:	cmp	r0, #32
   255a4:	bls	257e8 <main@@Base+0xfaac>
   255a8:	mov	sl, r1
   255ac:	b	25808 <main@@Base+0xfacc>
   255b0:	mov	r0, r2
   255b4:	ldr	r2, [sp, #24]
   255b8:	mov	r1, sl
   255bc:	mov	r3, #4
   255c0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   255c4:	b	25804 <main@@Base+0xfac8>
   255c8:	bne	255d8 <main@@Base+0xf89c>
   255cc:	ldrb	r0, [r9, #24]!
   255d0:	cmp	r0, #32
   255d4:	bhi	255f0 <main@@Base+0xf8b4>
   255d8:	mov	r0, r7
   255dc:	mov	r2, r8
   255e0:	mov	r4, ip
   255e4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   255e8:	mov	ip, r4
   255ec:	mov	r9, r0
   255f0:	mov	r4, ip
   255f4:	cmp	r9, r8
   255f8:	beq	2562c <main@@Base+0xf8f0>
   255fc:	ldrb	r0, [r9]
   25600:	cmp	r0, #58	; 0x3a
   25604:	bne	2562c <main@@Base+0xf8f0>
   25608:	add	r1, r9, #1
   2560c:	sub	r0, r8, r1
   25610:	cmp	r0, #2
   25614:	blt	259bc <main@@Base+0xfc80>
   25618:	ldrb	r0, [r1]
   2561c:	cmp	r0, #32
   25620:	bls	259ac <main@@Base+0xfc70>
   25624:	mov	r9, r1
   25628:	b	259cc <main@@Base+0xfc90>
   2562c:	mov	r0, r7
   25630:	mov	r1, r9
   25634:	mov	r2, r8
   25638:	mov	r3, #4
   2563c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25640:	b	259c8 <main@@Base+0xfc8c>
   25644:	bne	25654 <main@@Base+0xf918>
   25648:	ldrb	r0, [r9, #2]!
   2564c:	cmp	r0, #32
   25650:	bhi	25664 <main@@Base+0xf928>
   25654:	mov	r0, r5
   25658:	mov	r2, r4
   2565c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25660:	mov	r9, r0
   25664:	mov	ip, r6
   25668:	cmp	r6, r9
   2566c:	beq	256c4 <main@@Base+0xf988>
   25670:	ldr	r7, [sp, #32]
   25674:	mov	r1, #2
   25678:	ldr	r0, [r7]
   2567c:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   25680:	cmp	r0, #0
   25684:	bne	28020 <main@@Base+0x122e4>
   25688:	ldr	r8, [sp, #24]
   2568c:	cmp	r9, r8
   25690:	beq	2579c <main@@Base+0xfa60>
   25694:	ldrb	r0, [r9]
   25698:	cmp	r0, #123	; 0x7b
   2569c:	bne	2579c <main@@Base+0xfa60>
   256a0:	add	r1, r9, #1
   256a4:	sub	r0, r8, r1
   256a8:	cmp	r0, #2
   256ac:	blt	258dc <main@@Base+0xfba0>
   256b0:	ldrb	r0, [r1]
   256b4:	cmp	r0, #32
   256b8:	bls	258cc <main@@Base+0xfb90>
   256bc:	mov	r9, r1
   256c0:	b	258ec <main@@Base+0xfbb0>
   256c4:	ldr	r7, [sp, #32]
   256c8:	ldr	r8, [sp, #24]
   256cc:	mov	r1, ip
   256d0:	mov	r0, r7
   256d4:	mov	r2, r8
   256d8:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   256dc:	mov	r9, r0
   256e0:	sub	r0, r8, r9
   256e4:	cmp	r0, #2
   256e8:	blt	25714 <main@@Base+0xf9d8>
   256ec:	ldrb	r0, [r9]
   256f0:	cmp	r0, #32
   256f4:	bls	25700 <main@@Base+0xf9c4>
   256f8:	mov	r2, r9
   256fc:	b	25728 <main@@Base+0xf9ec>
   25700:	bne	25714 <main@@Base+0xf9d8>
   25704:	mov	r2, r9
   25708:	ldrb	r0, [r2, #1]!
   2570c:	cmp	r0, #32
   25710:	bhi	25728 <main@@Base+0xf9ec>
   25714:	mov	r0, r7
   25718:	mov	r1, r9
   2571c:	mov	r2, r8
   25720:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25724:	mov	r2, r0
   25728:	cmp	r2, r8
   2572c:	beq	27f20 <main@@Base+0x121e4>
   25730:	ldrb	r0, [r2]
   25734:	ldr	r4, [sp, #28]
   25738:	cmp	r0, #44	; 0x2c
   2573c:	bne	27f2c <main@@Base+0x121f0>
   25740:	add	r1, r2, #1
   25744:	sub	r0, r8, r1
   25748:	cmp	r0, #2
   2574c:	blt	25774 <main@@Base+0xfa38>
   25750:	ldrb	r0, [r1]
   25754:	cmp	r0, #32
   25758:	bls	25764 <main@@Base+0xfa28>
   2575c:	mov	r2, r1
   25760:	b	25784 <main@@Base+0xfa48>
   25764:	bne	25774 <main@@Base+0xfa38>
   25768:	ldrb	r0, [r2, #2]!
   2576c:	cmp	r0, #32
   25770:	bhi	25784 <main@@Base+0xfa48>
   25774:	mov	r0, r7
   25778:	mov	r2, r8
   2577c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25780:	mov	r2, r0
   25784:	cmp	r2, r8
   25788:	beq	27f7c <main@@Base+0x12240>
   2578c:	ldrb	r0, [r2]
   25790:	cmp	r0, #125	; 0x7d
   25794:	bne	25110 <main@@Base+0xf3d4>
   25798:	b	27f34 <main@@Base+0x121f8>
   2579c:	mov	r0, r7
   257a0:	mov	r1, r9
   257a4:	mov	r2, r8
   257a8:	mov	r3, #21
   257ac:	bl	316cc <flatcc_json_parser_set_error@@Base>
   257b0:	mov	r9, r0
   257b4:	ldr	r0, [sp, #20]
   257b8:	ldr	r0, [r0]
   257bc:	cmp	r0, #0
   257c0:	bne	2804c <main@@Base+0x12310>
   257c4:	ldr	r0, [r7]
   257c8:	bl	2e138 <flatcc_builder_end_table@@Base>
   257cc:	mov	r1, r7
   257d0:	cmp	r0, #0
   257d4:	beq	2800c <main@@Base+0x122d0>
   257d8:	mov	r7, r0
   257dc:	ldr	r0, [r1]
   257e0:	mov	r1, #1
   257e4:	b	25a78 <main@@Base+0xfd3c>
   257e8:	bne	257f8 <main@@Base+0xfabc>
   257ec:	ldrb	r0, [sl, #2]!
   257f0:	cmp	r0, #32
   257f4:	bhi	25808 <main@@Base+0xfacc>
   257f8:	mov	r0, r2
   257fc:	ldr	r2, [sp, #24]
   25800:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25804:	mov	sl, r0
   25808:	ldr	ip, [sp, #8]
   2580c:	cmp	ip, sl
   25810:	beq	25434 <main@@Base+0xf6f8>
   25814:	ldr	r7, [sp, #32]
   25818:	mov	r1, #9
   2581c:	ldr	r0, [r7]
   25820:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   25824:	cmp	r0, #0
   25828:	bne	28028 <main@@Base+0x122ec>
   2582c:	ldr	r8, [sp, #24]
   25830:	cmp	sl, r8
   25834:	beq	25868 <main@@Base+0xfb2c>
   25838:	ldrb	r0, [sl]
   2583c:	cmp	r0, #123	; 0x7b
   25840:	bne	25868 <main@@Base+0xfb2c>
   25844:	add	r1, sl, #1
   25848:	sub	r0, r8, r1
   2584c:	cmp	r0, #2
   25850:	blt	2594c <main@@Base+0xfc10>
   25854:	ldrb	r0, [r1]
   25858:	cmp	r0, #32
   2585c:	bls	2593c <main@@Base+0xfc00>
   25860:	mov	sl, r1
   25864:	b	2595c <main@@Base+0xfc20>
   25868:	mov	r0, r7
   2586c:	mov	r1, sl
   25870:	mov	r2, r8
   25874:	mov	r3, #21
   25878:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2587c:	mov	sl, r0
   25880:	ldr	r0, [sp, #20]
   25884:	ldr	r0, [r0]
   25888:	cmp	r0, #0
   2588c:	bne	28038 <main@@Base+0x122fc>
   25890:	ldr	r0, [r7]
   25894:	bl	2e138 <flatcc_builder_end_table@@Base>
   25898:	cmp	r0, #0
   2589c:	beq	28038 <main@@Base+0x122fc>
   258a0:	mov	r4, r0
   258a4:	ldr	r0, [r7]
   258a8:	mov	r1, #0
   258ac:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   258b0:	cmp	r0, #0
   258b4:	beq	27fb0 <main@@Base+0x12274>
   258b8:	mov	r9, sl
   258bc:	movw	sl, #0
   258c0:	str	r4, [r0]
   258c4:	movt	sl, #26418	; 0x6732
   258c8:	b	256e0 <main@@Base+0xf9a4>
   258cc:	bne	258dc <main@@Base+0xfba0>
   258d0:	ldrb	r0, [r9, #2]!
   258d4:	cmp	r0, #32
   258d8:	bhi	258ec <main@@Base+0xfbb0>
   258dc:	mov	r0, r7
   258e0:	mov	r2, r8
   258e4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   258e8:	mov	r9, r0
   258ec:	cmp	r9, r8
   258f0:	mov	r2, r8
   258f4:	beq	25bd0 <main@@Base+0xfe94>
   258f8:	ldrb	r0, [r9]
   258fc:	cmp	r0, #125	; 0x7d
   25900:	bne	25934 <main@@Base+0xfbf8>
   25904:	add	r1, r9, #1
   25908:	sub	r0, r8, r1
   2590c:	cmp	r0, #2
   25910:	blt	262b4 <main@@Base+0x10578>
   25914:	ldrb	r0, [r1]
   25918:	cmp	r0, #32
   2591c:	bhi	26278 <main@@Base+0x1053c>
   25920:	bne	262b4 <main@@Base+0x10578>
   25924:	ldrb	r0, [r9, #2]!
   25928:	cmp	r0, #32
   2592c:	bhi	257b4 <main@@Base+0xfa78>
   25930:	b	262b4 <main@@Base+0x10578>
   25934:	mov	r2, r9
   25938:	b	25bd0 <main@@Base+0xfe94>
   2593c:	bne	2594c <main@@Base+0xfc10>
   25940:	ldrb	r0, [sl, #2]!
   25944:	cmp	r0, #32
   25948:	bhi	2595c <main@@Base+0xfc20>
   2594c:	mov	r0, r7
   25950:	mov	r2, r8
   25954:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25958:	mov	sl, r0
   2595c:	cmp	sl, r8
   25960:	mov	r2, r8
   25964:	beq	26c40 <main@@Base+0x10f04>
   25968:	ldrb	r0, [sl]
   2596c:	cmp	r0, #125	; 0x7d
   25970:	bne	259a4 <main@@Base+0xfc68>
   25974:	add	r1, sl, #1
   25978:	sub	r0, r8, r1
   2597c:	cmp	r0, #2
   25980:	blt	27f10 <main@@Base+0x121d4>
   25984:	ldrb	r0, [r1]
   25988:	cmp	r0, #32
   2598c:	bhi	27ed4 <main@@Base+0x12198>
   25990:	bne	27f10 <main@@Base+0x121d4>
   25994:	ldrb	r0, [sl, #2]!
   25998:	cmp	r0, #32
   2599c:	bhi	25880 <main@@Base+0xfb44>
   259a0:	b	27f10 <main@@Base+0x121d4>
   259a4:	mov	r2, sl
   259a8:	b	26c40 <main@@Base+0x10f04>
   259ac:	bne	259bc <main@@Base+0xfc80>
   259b0:	ldrb	r0, [r9, #2]!
   259b4:	cmp	r0, #32
   259b8:	bhi	259cc <main@@Base+0xfc90>
   259bc:	mov	r0, r7
   259c0:	mov	r2, r8
   259c4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   259c8:	mov	r9, r0
   259cc:	mov	ip, r4
   259d0:	cmp	r4, r9
   259d4:	beq	25a24 <main@@Base+0xfce8>
   259d8:	ldr	r0, [r7]
   259dc:	mov	r1, #2
   259e0:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   259e4:	cmp	r0, #0
   259e8:	bne	2804c <main@@Base+0x12310>
   259ec:	cmp	r9, r8
   259f0:	beq	25a30 <main@@Base+0xfcf4>
   259f4:	ldrb	r0, [r9]
   259f8:	cmp	r0, #123	; 0x7b
   259fc:	bne	25a30 <main@@Base+0xfcf4>
   25a00:	add	r1, r9, #1
   25a04:	sub	r0, r8, r1
   25a08:	cmp	r0, #2
   25a0c:	blt	25aa0 <main@@Base+0xfd64>
   25a10:	ldrb	r0, [r1]
   25a14:	cmp	r0, #32
   25a18:	bls	25a90 <main@@Base+0xfd54>
   25a1c:	mov	r9, r1
   25a20:	b	25ab0 <main@@Base+0xfd74>
   25a24:	mov	r0, r7
   25a28:	mov	r1, ip
   25a2c:	b	256d4 <main@@Base+0xf998>
   25a30:	mov	r0, r7
   25a34:	mov	r1, r9
   25a38:	mov	r2, r8
   25a3c:	mov	r3, #21
   25a40:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25a44:	mov	r9, r0
   25a48:	ldr	r0, [sp, #20]
   25a4c:	ldr	r0, [r0]
   25a50:	cmp	r0, #0
   25a54:	bne	2804c <main@@Base+0x12310>
   25a58:	ldr	r0, [r7]
   25a5c:	bl	2e138 <flatcc_builder_end_table@@Base>
   25a60:	mov	r1, r7
   25a64:	cmp	r0, #0
   25a68:	beq	2800c <main@@Base+0x122d0>
   25a6c:	mov	r7, r0
   25a70:	ldr	r0, [r1]
   25a74:	mov	r1, #2
   25a78:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   25a7c:	cmp	r0, #0
   25a80:	beq	28014 <main@@Base+0x122d8>
   25a84:	str	r7, [r0]
   25a88:	ldr	r7, [sp, #32]
   25a8c:	b	256e0 <main@@Base+0xf9a4>
   25a90:	bne	25aa0 <main@@Base+0xfd64>
   25a94:	ldrb	r0, [r9, #2]!
   25a98:	cmp	r0, #32
   25a9c:	bhi	25ab0 <main@@Base+0xfd74>
   25aa0:	mov	r0, r7
   25aa4:	mov	r2, r8
   25aa8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25aac:	mov	r9, r0
   25ab0:	cmp	r9, r8
   25ab4:	mov	r2, r8
   25ab8:	beq	266a0 <main@@Base+0x10964>
   25abc:	ldrb	r0, [r9]
   25ac0:	cmp	r0, #125	; 0x7d
   25ac4:	bne	25af8 <main@@Base+0xfdbc>
   25ac8:	add	r1, r9, #1
   25acc:	sub	r0, r8, r1
   25ad0:	cmp	r0, #2
   25ad4:	blt	26b68 <main@@Base+0x10e2c>
   25ad8:	ldrb	r0, [r1]
   25adc:	cmp	r0, #32
   25ae0:	bhi	26ad8 <main@@Base+0x10d9c>
   25ae4:	bne	26b68 <main@@Base+0x10e2c>
   25ae8:	ldrb	r0, [r9, #2]!
   25aec:	cmp	r0, #32
   25af0:	bhi	25a48 <main@@Base+0xfd0c>
   25af4:	b	26b68 <main@@Base+0x10e2c>
   25af8:	mov	r2, r9
   25afc:	b	266a0 <main@@Base+0x10964>
   25b00:	mov	r9, r8
   25b04:	b	25b3c <main@@Base+0xfe00>
   25b08:	mov	r9, sl
   25b0c:	b	25b3c <main@@Base+0xfe00>
   25b10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25b14:	cmp	r0, #0
   25b18:	beq	25bbc <main@@Base+0xfe80>
   25b1c:	ldr	r7, [sp, #32]
   25b20:	ldr	r8, [sp, #24]
   25b24:	mov	r1, r9
   25b28:	mov	r3, #7
   25b2c:	mov	r0, r7
   25b30:	mov	r2, r8
   25b34:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25b38:	mov	r9, r0
   25b3c:	cmp	sl, r9
   25b40:	bne	25b7c <main@@Base+0xfe40>
   25b44:	movw	r3, #33332	; 0x8234
   25b48:	sub	r0, fp, #44	; 0x2c
   25b4c:	mov	r1, sl
   25b50:	mov	r2, r8
   25b54:	str	r0, [sp]
   25b58:	mov	r0, r7
   25b5c:	movt	r3, #5
   25b60:	bl	236d0 <main@@Base+0xd994>
   25b64:	mov	r9, r0
   25b68:	cmp	r0, sl
   25b6c:	cmpne	r9, r8
   25b70:	beq	28044 <main@@Base+0x12308>
   25b74:	ldr	r5, [fp, #-44]	; 0xffffffd4
   25b78:	ldr	r7, [sp, #32]
   25b7c:	movw	sl, #0
   25b80:	cmp	r5, #0
   25b84:	movt	sl, #26418	; 0x6732
   25b88:	bne	25b98 <main@@Base+0xfe5c>
   25b8c:	ldrb	r0, [r7, #8]
   25b90:	tst	r0, #2
   25b94:	beq	26194 <main@@Base+0x10458>
   25b98:	ldr	r0, [r7]
   25b9c:	mov	r1, #1
   25ba0:	mov	r2, #4
   25ba4:	mov	r3, #4
   25ba8:	bl	2ea78 <flatcc_builder_table_add@@Base>
   25bac:	cmp	r0, #0
   25bb0:	beq	28044 <main@@Base+0x12308>
   25bb4:	str	r5, [r0]
   25bb8:	b	26194 <main@@Base+0x10458>
   25bbc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25bc0:	ldr	r8, [sp, #24]
   25bc4:	ldr	r7, [sp, #32]
   25bc8:	str	r5, [fp, #-44]	; 0xffffffd4
   25bcc:	b	25b3c <main@@Base+0xfe00>
   25bd0:	cmp	r2, r8
   25bd4:	mov	sl, r8
   25bd8:	beq	25c08 <main@@Base+0xfecc>
   25bdc:	ldrb	r0, [r2]
   25be0:	cmp	r0, #34	; 0x22
   25be4:	bne	25bf0 <main@@Base+0xfeb4>
   25be8:	add	sl, r2, #1
   25bec:	b	25c08 <main@@Base+0xfecc>
   25bf0:	mov	r1, r2
   25bf4:	mov	r0, r7
   25bf8:	mov	r2, r8
   25bfc:	mov	r3, #5
   25c00:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25c04:	mov	sl, r0
   25c08:	sub	r0, r8, sl
   25c0c:	mov	r1, #8
   25c10:	cmp	r0, #8
   25c14:	movcs	r0, r1
   25c18:	and	r0, r0, #15
   25c1c:	sub	r3, r0, #1
   25c20:	cmp	r3, #7
   25c24:	bhi	25e04 <main@@Base+0x100c8>
   25c28:	add	r4, pc, #32
   25c2c:	mov	r0, #0
   25c30:	mov	ip, #0
   25c34:	mov	lr, #0
   25c38:	mov	r6, #0
   25c3c:	mov	r2, #0
   25c40:	mov	r5, #0
   25c44:	mov	r7, #0
   25c48:	mov	r1, #0
   25c4c:	ldr	pc, [r4, r3, lsl #2]
   25c50:			; <UNDEFINED> instruction: 0x00025cb4
   25c54:	andeq	r5, r2, ip, lsr #25
   25c58:	andeq	r5, r2, r4, lsr #25
   25c5c:	muleq	r2, ip, ip
   25c60:	muleq	r2, r0, ip
   25c64:	andeq	r5, r2, r4, lsl #25
   25c68:	andeq	r5, r2, r4, ror ip
   25c6c:	andeq	r5, r2, r0, ror ip
   25c70:	ldrb	ip, [sl, #7]
   25c74:	ldrb	r1, [sl, #6]
   25c78:	mov	lr, r0
   25c7c:	orr	r1, ip, r1, lsl #8
   25c80:	mov	r0, r1
   25c84:	ldrb	r1, [sl, #5]
   25c88:	mov	r6, lr
   25c8c:	orr	r0, r0, r1, lsl #16
   25c90:	ldrb	r1, [sl, #4]
   25c94:	mov	r2, r6
   25c98:	orr	r0, r0, r1, lsl #24
   25c9c:	ldrb	r1, [sl, #3]
   25ca0:	orr	r5, r1, r2
   25ca4:	ldrb	r1, [sl, #2]
   25ca8:	orr	r7, r5, r1, lsl #8
   25cac:	ldrb	r1, [sl, #1]
   25cb0:	orr	r1, r7, r1, lsl #16
   25cb4:	movw	r2, #25186	; 0x6262
   25cb8:	ldr	r7, [sp, #32]
   25cbc:	movt	r2, #24418	; 0x5f62
   25cc0:	eor	r0, r0, r2
   25cc4:	ldrb	r2, [sl]
   25cc8:	orr	r1, r1, r2, lsl #24
   25ccc:	movw	r2, #24929	; 0x6161
   25cd0:	movt	r2, #24929	; 0x6161
   25cd4:	eor	r1, r1, r2
   25cd8:	orrs	r0, r0, r1
   25cdc:	bne	25e04 <main@@Base+0x100c8>
   25ce0:	mov	r0, r8
   25ce4:	add	r8, sl, #8
   25ce8:	sub	lr, r0, r8
   25cec:	mov	r0, #8
   25cf0:	cmp	lr, #8
   25cf4:	movcc	r0, lr
   25cf8:	and	r0, r0, #15
   25cfc:	sub	r6, r0, #1
   25d00:	cmp	r6, #7
   25d04:	bhi	26174 <main@@Base+0x10438>
   25d08:	add	r2, pc, #32
   25d0c:	mov	r1, #0
   25d10:	mov	ip, #0
   25d14:	mov	r9, #0
   25d18:	mov	r5, #0
   25d1c:	mov	r3, #0
   25d20:	mov	r4, #0
   25d24:	mov	r7, #0
   25d28:	mov	r0, #0
   25d2c:	ldr	pc, [r2, r6, lsl #2]
   25d30:	muleq	r2, r4, sp
   25d34:	andeq	r5, r2, ip, lsl #27
   25d38:	andeq	r5, r2, r4, lsl #27
   25d3c:	andeq	r5, r2, ip, ror sp
   25d40:	andeq	r5, r2, r0, ror sp
   25d44:	andeq	r5, r2, r4, ror #26
   25d48:	andeq	r5, r2, r4, asr sp
   25d4c:	andeq	r5, r2, r0, asr sp
   25d50:	ldrb	ip, [sl, #15]
   25d54:	ldrb	r0, [sl, #14]
   25d58:	mov	r9, r1
   25d5c:	orr	r0, ip, r0, lsl #8
   25d60:	mov	r1, r0
   25d64:	ldrb	r0, [sl, #13]
   25d68:	mov	r5, r9
   25d6c:	orr	r1, r1, r0, lsl #16
   25d70:	ldrb	r0, [sl, #12]
   25d74:	mov	r3, r5
   25d78:	orr	r1, r1, r0, lsl #24
   25d7c:	ldrb	r0, [sl, #11]
   25d80:	orr	r4, r0, r3
   25d84:	ldrb	r0, [sl, #10]
   25d88:	orr	r7, r4, r0, lsl #8
   25d8c:	ldrb	r0, [sl, #9]
   25d90:	orr	r0, r7, r0, lsl #16
   25d94:	movw	r3, #29440	; 0x7300
   25d98:	bic	r2, r1, #255	; 0xff
   25d9c:	movt	r3, #25968	; 0x6570
   25da0:	eor	r2, r2, r3
   25da4:	ldrb	r3, [r8]
   25da8:	orr	r0, r0, r3, lsl #24
   25dac:	movw	r3, #29556	; 0x7374
   25db0:	movt	r3, #25183	; 0x625f
   25db4:	eor	r0, r0, r3
   25db8:	orrs	r2, r2, r0
   25dbc:	bne	25e10 <main@@Base+0x100d4>
   25dc0:	ldr	r7, [sp, #32]
   25dc4:	cmp	lr, #8
   25dc8:	blt	26174 <main@@Base+0x10438>
   25dcc:	ldrb	r0, [sl, #15]
   25dd0:	cmp	r0, #34	; 0x22
   25dd4:	bne	26174 <main@@Base+0x10438>
   25dd8:	ldr	r4, [sp, #24]
   25ddc:	add	r1, sl, #16
   25de0:	sub	r0, r4, r1
   25de4:	cmp	r0, #2
   25de8:	blt	25e7c <main@@Base+0x10140>
   25dec:	ldrb	r0, [r1]
   25df0:	cmp	r0, #32
   25df4:	bls	25e68 <main@@Base+0x1012c>
   25df8:	ldr	r4, [sp, #24]
   25dfc:	mov	sl, r1
   25e00:	b	25e8c <main@@Base+0x10150>
   25e04:	mov	r0, r7
   25e08:	mov	r1, sl
   25e0c:	b	26180 <main@@Base+0x10444>
   25e10:	movw	r2, #29791	; 0x745f
   25e14:	ldr	r7, [sp, #32]
   25e18:	movt	r2, #24946	; 0x6172
   25e1c:	eor	r1, r1, r2
   25e20:	orrs	r0, r1, r0
   25e24:	bne	26174 <main@@Base+0x10438>
   25e28:	cmp	lr, #9
   25e2c:	blt	26174 <main@@Base+0x10438>
   25e30:	ldrb	r0, [sl, #16]
   25e34:	cmp	r0, #34	; 0x22
   25e38:	bne	26174 <main@@Base+0x10438>
   25e3c:	ldr	r4, [sp, #24]
   25e40:	add	r1, sl, #17
   25e44:	sub	r0, r4, r1
   25e48:	cmp	r0, #2
   25e4c:	blt	25ef4 <main@@Base+0x101b8>
   25e50:	ldrb	r0, [r1]
   25e54:	cmp	r0, #32
   25e58:	bls	25ee0 <main@@Base+0x101a4>
   25e5c:	ldr	r4, [sp, #24]
   25e60:	mov	sl, r1
   25e64:	b	25f04 <main@@Base+0x101c8>
   25e68:	ldr	r4, [sp, #24]
   25e6c:	bne	25e7c <main@@Base+0x10140>
   25e70:	ldrb	r0, [sl, #17]!
   25e74:	cmp	r0, #32
   25e78:	bhi	25e8c <main@@Base+0x10150>
   25e7c:	mov	r0, r7
   25e80:	mov	r2, r4
   25e84:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25e88:	mov	sl, r0
   25e8c:	cmp	sl, r4
   25e90:	beq	25ec8 <main@@Base+0x1018c>
   25e94:	ldrb	r0, [sl]
   25e98:	cmp	r0, #58	; 0x3a
   25e9c:	bne	25ec8 <main@@Base+0x1018c>
   25ea0:	ldr	r0, [sp, #24]
   25ea4:	add	r1, sl, #1
   25ea8:	sub	r0, r0, r1
   25eac:	cmp	r0, #2
   25eb0:	blt	25f6c <main@@Base+0x10230>
   25eb4:	ldrb	r0, [r1]
   25eb8:	cmp	r0, #32
   25ebc:	bls	25f5c <main@@Base+0x10220>
   25ec0:	mov	sl, r1
   25ec4:	b	25f7c <main@@Base+0x10240>
   25ec8:	ldr	r2, [sp, #24]
   25ecc:	mov	r0, r7
   25ed0:	mov	r1, sl
   25ed4:	mov	r3, #4
   25ed8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25edc:	b	25f78 <main@@Base+0x1023c>
   25ee0:	ldr	r4, [sp, #24]
   25ee4:	bne	25ef4 <main@@Base+0x101b8>
   25ee8:	ldrb	r0, [sl, #18]!
   25eec:	cmp	r0, #32
   25ef0:	bhi	25f04 <main@@Base+0x101c8>
   25ef4:	mov	r0, r7
   25ef8:	mov	r2, r4
   25efc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25f00:	mov	sl, r0
   25f04:	cmp	sl, r4
   25f08:	beq	25f44 <main@@Base+0x10208>
   25f0c:	ldrb	r0, [sl]
   25f10:	cmp	r0, #58	; 0x3a
   25f14:	bne	25f44 <main@@Base+0x10208>
   25f18:	ldr	r0, [sp, #24]
   25f1c:	add	r1, sl, #1
   25f20:	sub	r0, r0, r1
   25f24:	cmp	r0, #2
   25f28:	blt	260f4 <main@@Base+0x103b8>
   25f2c:	ldrb	r0, [r1]
   25f30:	cmp	r0, #32
   25f34:	bls	260e0 <main@@Base+0x103a4>
   25f38:	ldr	r7, [sp, #32]
   25f3c:	mov	sl, r1
   25f40:	b	26104 <main@@Base+0x103c8>
   25f44:	ldr	r2, [sp, #24]
   25f48:	mov	r0, r7
   25f4c:	mov	r1, sl
   25f50:	mov	r3, #4
   25f54:	bl	316cc <flatcc_json_parser_set_error@@Base>
   25f58:	b	26100 <main@@Base+0x103c4>
   25f5c:	bne	25f6c <main@@Base+0x10230>
   25f60:	ldrb	r0, [sl, #2]!
   25f64:	cmp	r0, #32
   25f68:	bhi	25f7c <main@@Base+0x10240>
   25f6c:	ldr	r2, [sp, #24]
   25f70:	mov	r0, r7
   25f74:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   25f78:	mov	sl, r0
   25f7c:	cmp	r8, sl
   25f80:	beq	26174 <main@@Base+0x10438>
   25f84:	ldr	r8, [sp, #24]
   25f88:	mov	r6, #0
   25f8c:	str	r6, [fp, #-36]	; 0xffffffdc
   25f90:	str	r6, [fp, #-40]	; 0xffffffd8
   25f94:	str	r6, [sp, #44]	; 0x2c
   25f98:	str	r6, [sp, #40]	; 0x28
   25f9c:	str	r6, [fp, #-44]	; 0xffffffd4
   25fa0:	cmp	sl, r8
   25fa4:	beq	26004 <main@@Base+0x102c8>
   25fa8:	sub	r0, fp, #40	; 0x28
   25fac:	mov	r1, sl
   25fb0:	mov	r2, r8
   25fb4:	sub	r3, fp, #44	; 0x2c
   25fb8:	str	r0, [sp]
   25fbc:	mov	r0, r7
   25fc0:	bl	334d0 <flatcc_json_parser_integer@@Base>
   25fc4:	cmp	r0, sl
   25fc8:	beq	26010 <main@@Base+0x102d4>
   25fcc:	mov	r9, r0
   25fd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25fd4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   25fd8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   25fdc:	cmp	r0, #0
   25fe0:	beq	26020 <main@@Base+0x102e4>
   25fe4:	subs	r0, r6, #1
   25fe8:	sbcs	r0, r5, #-2147483648	; 0x80000000
   25fec:	bcc	2604c <main@@Base+0x10310>
   25ff0:	mov	r0, r7
   25ff4:	mov	r1, r9
   25ff8:	mov	r2, r8
   25ffc:	mov	r3, #8
   26000:	b	26038 <main@@Base+0x102fc>
   26004:	mov	r5, #0
   26008:	mov	r9, r8
   2600c:	b	2605c <main@@Base+0x10320>
   26010:	mov	r6, #0
   26014:	mov	r5, #0
   26018:	mov	r9, sl
   2601c:	b	2605c <main@@Base+0x10320>
   26020:	cmn	r5, #1
   26024:	bgt	26054 <main@@Base+0x10318>
   26028:	mov	r0, r7
   2602c:	mov	r1, r9
   26030:	mov	r2, r8
   26034:	mov	r3, #7
   26038:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2603c:	mov	r9, r0
   26040:	mov	r6, #0
   26044:	mov	r5, #0
   26048:	b	2605c <main@@Base+0x10320>
   2604c:	rsbs	r6, r6, #0
   26050:	rsc	r5, r5, #0
   26054:	str	r6, [sp, #40]	; 0x28
   26058:	str	r5, [sp, #44]	; 0x2c
   2605c:	cmp	sl, r9
   26060:	bne	2609c <main@@Base+0x10360>
   26064:	movw	r3, #33320	; 0x8228
   26068:	add	r0, sp, #40	; 0x28
   2606c:	mov	r1, sl
   26070:	mov	r2, r8
   26074:	str	r0, [sp]
   26078:	mov	r0, r7
   2607c:	movt	r3, #5
   26080:	bl	234e8 <main@@Base+0xd7ac>
   26084:	mov	r9, r0
   26088:	cmp	r0, sl
   2608c:	cmpne	r9, r8
   26090:	beq	28044 <main@@Base+0x12308>
   26094:	ldr	r6, [sp, #40]	; 0x28
   26098:	ldr	r5, [sp, #44]	; 0x2c
   2609c:	movw	sl, #0
   260a0:	orrs	r0, r6, r5
   260a4:	movt	sl, #26418	; 0x6732
   260a8:	bne	260b8 <main@@Base+0x1037c>
   260ac:	ldrb	r0, [r7, #8]
   260b0:	tst	r0, #2
   260b4:	beq	26194 <main@@Base+0x10458>
   260b8:	ldr	r0, [r7]
   260bc:	mov	r1, #0
   260c0:	mov	r2, #8
   260c4:	mov	r3, #8
   260c8:	bl	2ea78 <flatcc_builder_table_add@@Base>
   260cc:	cmp	r0, #0
   260d0:	beq	28044 <main@@Base+0x12308>
   260d4:	str	r6, [r0]
   260d8:	str	r5, [r0, #4]
   260dc:	b	26194 <main@@Base+0x10458>
   260e0:	ldr	r7, [sp, #32]
   260e4:	bne	260f4 <main@@Base+0x103b8>
   260e8:	ldrb	r0, [sl, #2]!
   260ec:	cmp	r0, #32
   260f0:	bhi	26104 <main@@Base+0x103c8>
   260f4:	ldr	r2, [sp, #24]
   260f8:	mov	r0, r7
   260fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26100:	mov	sl, r0
   26104:	cmp	r8, sl
   26108:	beq	26174 <main@@Base+0x10438>
   2610c:	ldr	r8, [sp, #24]
   26110:	mov	r5, #0
   26114:	str	r5, [fp, #-36]	; 0xffffffdc
   26118:	str	r5, [fp, #-40]	; 0xffffffd8
   2611c:	str	r5, [fp, #-44]	; 0xffffffd4
   26120:	str	r5, [sp, #40]	; 0x28
   26124:	cmp	sl, r8
   26128:	beq	25b00 <main@@Base+0xfdc4>
   2612c:	sub	r0, fp, #40	; 0x28
   26130:	mov	r1, sl
   26134:	mov	r2, r8
   26138:	add	r3, sp, #40	; 0x28
   2613c:	str	r0, [sp]
   26140:	mov	r0, r7
   26144:	bl	334d0 <flatcc_json_parser_integer@@Base>
   26148:	cmp	r0, sl
   2614c:	beq	25b08 <main@@Base+0xfdcc>
   26150:	mov	r9, r0
   26154:	ldr	r0, [sp, #40]	; 0x28
   26158:	cmp	r0, #0
   2615c:	beq	25b10 <main@@Base+0xfdd4>
   26160:	mov	r0, r7
   26164:	mov	r1, r9
   26168:	mov	r2, r8
   2616c:	mov	r3, #8
   26170:	b	25b34 <main@@Base+0xfdf8>
   26174:	mov	r1, r8
   26178:	ldr	r8, [sp, #24]
   2617c:	mov	r0, r7
   26180:	mov	r2, r8
   26184:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   26188:	movw	sl, #0
   2618c:	mov	r9, r0
   26190:	movt	sl, #26418	; 0x6732
   26194:	sub	r0, r8, r9
   26198:	cmp	r0, #2
   2619c:	blt	261c8 <main@@Base+0x1048c>
   261a0:	ldrb	r0, [r9]
   261a4:	cmp	r0, #32
   261a8:	bls	261b4 <main@@Base+0x10478>
   261ac:	mov	r2, r9
   261b0:	b	261dc <main@@Base+0x104a0>
   261b4:	bne	261c8 <main@@Base+0x1048c>
   261b8:	mov	r2, r9
   261bc:	ldrb	r0, [r2, #1]!
   261c0:	cmp	r0, #32
   261c4:	bhi	261dc <main@@Base+0x104a0>
   261c8:	mov	r0, r7
   261cc:	mov	r1, r9
   261d0:	mov	r2, r8
   261d4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   261d8:	mov	r2, r0
   261dc:	cmp	r2, r8
   261e0:	beq	2624c <main@@Base+0x10510>
   261e4:	ldrb	r0, [r2]
   261e8:	cmp	r0, #44	; 0x2c
   261ec:	bne	26254 <main@@Base+0x10518>
   261f0:	add	r1, r2, #1
   261f4:	sub	r0, r8, r1
   261f8:	cmp	r0, #2
   261fc:	blt	26224 <main@@Base+0x104e8>
   26200:	ldrb	r0, [r1]
   26204:	cmp	r0, #32
   26208:	bls	26214 <main@@Base+0x104d8>
   2620c:	mov	r2, r1
   26210:	b	26234 <main@@Base+0x104f8>
   26214:	bne	26224 <main@@Base+0x104e8>
   26218:	ldrb	r0, [r2, #2]!
   2621c:	cmp	r0, #32
   26220:	bhi	26234 <main@@Base+0x104f8>
   26224:	mov	r0, r7
   26228:	mov	r2, r8
   2622c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26230:	mov	r2, r0
   26234:	cmp	r2, r8
   26238:	beq	26280 <main@@Base+0x10544>
   2623c:	ldrb	r0, [r2]
   26240:	cmp	r0, #125	; 0x7d
   26244:	bne	25bd0 <main@@Base+0xfe94>
   26248:	b	2625c <main@@Base+0x10520>
   2624c:	mov	r9, r8
   26250:	b	257b4 <main@@Base+0xfa78>
   26254:	cmp	r0, #125	; 0x7d
   26258:	bne	2628c <main@@Base+0x10550>
   2625c:	add	r1, r2, #1
   26260:	sub	r0, r8, r1
   26264:	cmp	r0, #2
   26268:	blt	262b4 <main@@Base+0x10578>
   2626c:	ldrb	r0, [r1]
   26270:	cmp	r0, #32
   26274:	bls	262a0 <main@@Base+0x10564>
   26278:	mov	r9, r1
   2627c:	b	257b4 <main@@Base+0xfa78>
   26280:	mov	r0, r7
   26284:	mov	r1, r8
   26288:	b	26294 <main@@Base+0x10558>
   2628c:	mov	r0, r7
   26290:	mov	r1, r2
   26294:	mov	r2, r8
   26298:	mov	r3, #10
   2629c:	b	257ac <main@@Base+0xfa70>
   262a0:	bne	262b4 <main@@Base+0x10578>
   262a4:	ldrb	r0, [r2, #2]!
   262a8:	cmp	r0, #32
   262ac:	mov	r9, r2
   262b0:	bhi	257b4 <main@@Base+0xfa78>
   262b4:	mov	r0, r7
   262b8:	mov	r2, r8
   262bc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   262c0:	b	257b0 <main@@Base+0xfa74>
   262c4:	ldr	r4, [sp, #24]
   262c8:	bne	262d8 <main@@Base+0x1059c>
   262cc:	ldrb	r0, [sl, #17]!
   262d0:	cmp	r0, #32
   262d4:	bhi	262e8 <main@@Base+0x105ac>
   262d8:	mov	r0, r7
   262dc:	mov	r2, r4
   262e0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   262e4:	mov	sl, r0
   262e8:	cmp	sl, r4
   262ec:	beq	26328 <main@@Base+0x105ec>
   262f0:	ldrb	r0, [sl]
   262f4:	cmp	r0, #58	; 0x3a
   262f8:	bne	26328 <main@@Base+0x105ec>
   262fc:	ldr	r0, [sp, #24]
   26300:	add	r1, sl, #1
   26304:	sub	r0, r0, r1
   26308:	cmp	r0, #2
   2630c:	blt	263d0 <main@@Base+0x10694>
   26310:	ldrb	r0, [r1]
   26314:	cmp	r0, #32
   26318:	bls	263bc <main@@Base+0x10680>
   2631c:	ldr	r7, [sp, #32]
   26320:	mov	sl, r1
   26324:	b	263e0 <main@@Base+0x106a4>
   26328:	ldr	r2, [sp, #24]
   2632c:	mov	r0, r7
   26330:	mov	r1, sl
   26334:	mov	r3, #4
   26338:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2633c:	b	263dc <main@@Base+0x106a0>
   26340:	ldr	r4, [sp, #24]
   26344:	bne	26354 <main@@Base+0x10618>
   26348:	ldrb	r0, [sl, #23]!
   2634c:	cmp	r0, #32
   26350:	bhi	26364 <main@@Base+0x10628>
   26354:	mov	r0, r7
   26358:	mov	r2, r4
   2635c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26360:	mov	sl, r0
   26364:	cmp	sl, r4
   26368:	beq	263a4 <main@@Base+0x10668>
   2636c:	ldrb	r0, [sl]
   26370:	cmp	r0, #58	; 0x3a
   26374:	bne	263a4 <main@@Base+0x10668>
   26378:	ldr	r0, [sp, #24]
   2637c:	add	r1, sl, #1
   26380:	sub	r0, r0, r1
   26384:	cmp	r0, #2
   26388:	blt	2655c <main@@Base+0x10820>
   2638c:	ldrb	r0, [r1]
   26390:	cmp	r0, #32
   26394:	bls	26548 <main@@Base+0x1080c>
   26398:	ldr	r7, [sp, #32]
   2639c:	mov	sl, r1
   263a0:	b	2656c <main@@Base+0x10830>
   263a4:	ldr	r2, [sp, #24]
   263a8:	mov	r0, r7
   263ac:	mov	r1, sl
   263b0:	mov	r3, #4
   263b4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   263b8:	b	26568 <main@@Base+0x1082c>
   263bc:	ldr	r7, [sp, #32]
   263c0:	bne	263d0 <main@@Base+0x10694>
   263c4:	ldrb	r0, [sl, #2]!
   263c8:	cmp	r0, #32
   263cc:	bhi	263e0 <main@@Base+0x106a4>
   263d0:	ldr	r2, [sp, #24]
   263d4:	mov	r0, r7
   263d8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   263dc:	mov	sl, r0
   263e0:	cmp	r8, sl
   263e4:	beq	269e8 <main@@Base+0x10cac>
   263e8:	ldr	r2, [sp, #24]
   263ec:	mov	r6, #0
   263f0:	str	r6, [fp, #-36]	; 0xffffffdc
   263f4:	str	r6, [fp, #-40]	; 0xffffffd8
   263f8:	str	r6, [sp, #44]	; 0x2c
   263fc:	str	r6, [sp, #40]	; 0x28
   26400:	str	r6, [fp, #-44]	; 0xffffffd4
   26404:	cmp	sl, r2
   26408:	beq	26464 <main@@Base+0x10728>
   2640c:	sub	r0, fp, #40	; 0x28
   26410:	mov	r1, sl
   26414:	sub	r3, fp, #44	; 0x2c
   26418:	str	r0, [sp]
   2641c:	mov	r0, r7
   26420:	bl	334d0 <flatcc_json_parser_integer@@Base>
   26424:	cmp	r0, sl
   26428:	beq	26470 <main@@Base+0x10734>
   2642c:	mov	r9, r0
   26430:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26434:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26438:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2643c:	cmp	r0, #0
   26440:	beq	26480 <main@@Base+0x10744>
   26444:	subs	r0, r6, #1
   26448:	sbcs	r0, r5, #-2147483648	; 0x80000000
   2644c:	bcc	264b0 <main@@Base+0x10774>
   26450:	ldr	r7, [sp, #32]
   26454:	ldr	r2, [sp, #24]
   26458:	mov	r1, r9
   2645c:	mov	r3, #8
   26460:	b	26498 <main@@Base+0x1075c>
   26464:	mov	r5, #0
   26468:	mov	r9, r2
   2646c:	b	264c4 <main@@Base+0x10788>
   26470:	mov	r6, #0
   26474:	mov	r5, #0
   26478:	mov	r9, sl
   2647c:	b	264c0 <main@@Base+0x10784>
   26480:	cmn	r5, #1
   26484:	bgt	264b8 <main@@Base+0x1077c>
   26488:	ldr	r7, [sp, #32]
   2648c:	ldr	r2, [sp, #24]
   26490:	mov	r1, r9
   26494:	mov	r3, #7
   26498:	mov	r0, r7
   2649c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   264a0:	mov	r9, r0
   264a4:	mov	r6, #0
   264a8:	mov	r5, #0
   264ac:	b	264c4 <main@@Base+0x10788>
   264b0:	rsbs	r6, r6, #0
   264b4:	rsc	r5, r5, #0
   264b8:	str	r6, [sp, #40]	; 0x28
   264bc:	str	r5, [sp, #44]	; 0x2c
   264c0:	ldr	r7, [sp, #32]
   264c4:	cmp	sl, r9
   264c8:	bne	2650c <main@@Base+0x107d0>
   264cc:	ldr	r2, [sp, #24]
   264d0:	movw	r3, #33428	; 0x8294
   264d4:	add	r0, sp, #40	; 0x28
   264d8:	mov	r1, sl
   264dc:	str	r0, [sp]
   264e0:	mov	r0, r7
   264e4:	movt	r3, #5
   264e8:	bl	234e8 <main@@Base+0xd7ac>
   264ec:	cmp	r0, sl
   264f0:	mov	r9, r0
   264f4:	ldrne	r0, [sp, #24]
   264f8:	cmpne	r9, r0
   264fc:	beq	28044 <main@@Base+0x12308>
   26500:	ldr	r6, [sp, #40]	; 0x28
   26504:	ldr	r5, [sp, #44]	; 0x2c
   26508:	ldr	r7, [sp, #32]
   2650c:	orrs	r0, r6, r5
   26510:	bne	26520 <main@@Base+0x107e4>
   26514:	ldrb	r0, [r7, #8]
   26518:	tst	r0, #2
   2651c:	beq	26698 <main@@Base+0x1095c>
   26520:	ldr	r0, [r7]
   26524:	mov	r1, #0
   26528:	mov	r2, #8
   2652c:	mov	r3, #8
   26530:	bl	2ea78 <flatcc_builder_table_add@@Base>
   26534:	cmp	r0, #0
   26538:	beq	28044 <main@@Base+0x12308>
   2653c:	str	r6, [r0]
   26540:	str	r5, [r0, #4]
   26544:	b	26698 <main@@Base+0x1095c>
   26548:	ldr	r7, [sp, #32]
   2654c:	bne	2655c <main@@Base+0x10820>
   26550:	ldrb	r0, [sl, #2]!
   26554:	cmp	r0, #32
   26558:	bhi	2656c <main@@Base+0x10830>
   2655c:	ldr	r2, [sp, #24]
   26560:	mov	r0, r7
   26564:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26568:	mov	sl, r0
   2656c:	cmp	r8, sl
   26570:	beq	269e8 <main@@Base+0x10cac>
   26574:	ldr	r2, [sp, #24]
   26578:	mov	r5, #0
   2657c:	str	r5, [fp, #-36]	; 0xffffffdc
   26580:	str	r5, [fp, #-40]	; 0xffffffd8
   26584:	str	r5, [fp, #-44]	; 0xffffffd4
   26588:	str	r5, [sp, #40]	; 0x28
   2658c:	cmp	sl, r2
   26590:	beq	265d8 <main@@Base+0x1089c>
   26594:	sub	r0, fp, #40	; 0x28
   26598:	mov	r1, sl
   2659c:	add	r3, sp, #40	; 0x28
   265a0:	str	r0, [sp]
   265a4:	mov	r0, r7
   265a8:	bl	334d0 <flatcc_json_parser_integer@@Base>
   265ac:	cmp	r0, sl
   265b0:	beq	265e0 <main@@Base+0x108a4>
   265b4:	mov	r9, r0
   265b8:	ldr	r0, [sp, #40]	; 0x28
   265bc:	cmp	r0, #0
   265c0:	beq	265e8 <main@@Base+0x108ac>
   265c4:	ldr	r7, [sp, #32]
   265c8:	ldr	r2, [sp, #24]
   265cc:	mov	r1, r9
   265d0:	mov	r3, #8
   265d4:	b	26604 <main@@Base+0x108c8>
   265d8:	mov	r9, r2
   265dc:	b	26620 <main@@Base+0x108e4>
   265e0:	mov	r9, sl
   265e4:	b	2661c <main@@Base+0x108e0>
   265e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   265ec:	cmp	r0, #0
   265f0:	beq	26614 <main@@Base+0x108d8>
   265f4:	ldr	r7, [sp, #32]
   265f8:	ldr	r2, [sp, #24]
   265fc:	mov	r1, r9
   26600:	mov	r3, #7
   26604:	mov	r0, r7
   26608:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2660c:	mov	r9, r0
   26610:	b	26620 <main@@Base+0x108e4>
   26614:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26618:	str	r5, [fp, #-44]	; 0xffffffd4
   2661c:	ldr	r7, [sp, #32]
   26620:	cmp	sl, r9
   26624:	bne	26664 <main@@Base+0x10928>
   26628:	ldr	r2, [sp, #24]
   2662c:	movw	r3, #33416	; 0x8288
   26630:	sub	r0, fp, #44	; 0x2c
   26634:	mov	r1, sl
   26638:	str	r0, [sp]
   2663c:	mov	r0, r7
   26640:	movt	r3, #5
   26644:	bl	236d0 <main@@Base+0xd994>
   26648:	cmp	r0, sl
   2664c:	mov	r9, r0
   26650:	ldrne	r0, [sp, #24]
   26654:	cmpne	r9, r0
   26658:	beq	28044 <main@@Base+0x12308>
   2665c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   26660:	ldr	r7, [sp, #32]
   26664:	cmp	r5, #0
   26668:	bne	26678 <main@@Base+0x1093c>
   2666c:	ldrb	r0, [r7, #8]
   26670:	tst	r0, #2
   26674:	beq	26698 <main@@Base+0x1095c>
   26678:	ldr	r0, [r7]
   2667c:	mov	r1, #1
   26680:	mov	r2, #4
   26684:	mov	r3, #4
   26688:	bl	2ea78 <flatcc_builder_table_add@@Base>
   2668c:	cmp	r0, #0
   26690:	beq	28044 <main@@Base+0x12308>
   26694:	str	r5, [r0]
   26698:	ldr	r8, [sp, #24]
   2669c:	b	26a00 <main@@Base+0x10cc4>
   266a0:	cmp	r2, r8
   266a4:	mov	sl, r8
   266a8:	beq	266d8 <main@@Base+0x1099c>
   266ac:	ldrb	r0, [r2]
   266b0:	cmp	r0, #34	; 0x22
   266b4:	bne	266c0 <main@@Base+0x10984>
   266b8:	add	sl, r2, #1
   266bc:	b	266d8 <main@@Base+0x1099c>
   266c0:	mov	r1, r2
   266c4:	mov	r0, r7
   266c8:	mov	r2, r8
   266cc:	mov	r3, #5
   266d0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   266d4:	mov	sl, r0
   266d8:	sub	r0, r8, sl
   266dc:	mov	r1, #8
   266e0:	cmp	r0, #8
   266e4:	movcs	r0, r1
   266e8:	and	r0, r0, #15
   266ec:	sub	r3, r0, #1
   266f0:	cmp	r3, #7
   266f4:	bhi	2697c <main@@Base+0x10c40>
   266f8:	add	r4, pc, #32
   266fc:	mov	r0, #0
   26700:	mov	ip, #0
   26704:	mov	lr, #0
   26708:	mov	r6, #0
   2670c:	mov	r2, #0
   26710:	mov	r5, #0
   26714:	mov	r7, #0
   26718:	mov	r1, #0
   2671c:	ldr	pc, [r4, r3, lsl #2]
   26720:	andeq	r6, r2, r4, lsl #15
   26724:	andeq	r6, r2, ip, ror r7
   26728:	andeq	r6, r2, r4, ror r7
   2672c:	andeq	r6, r2, ip, ror #14
   26730:	andeq	r6, r2, r0, ror #14
   26734:	andeq	r6, r2, r4, asr r7
   26738:	andeq	r6, r2, r4, asr #14
   2673c:	andeq	r6, r2, r0, asr #14
   26740:	ldrb	ip, [sl, #7]
   26744:	ldrb	r1, [sl, #6]
   26748:	mov	lr, r0
   2674c:	orr	r1, ip, r1, lsl #8
   26750:	mov	r0, r1
   26754:	ldrb	r1, [sl, #5]
   26758:	mov	r6, lr
   2675c:	orr	r0, r0, r1, lsl #16
   26760:	ldrb	r1, [sl, #4]
   26764:	mov	r2, r6
   26768:	orr	r0, r0, r1, lsl #24
   2676c:	ldrb	r1, [sl, #3]
   26770:	orr	r5, r1, r2
   26774:	ldrb	r1, [sl, #2]
   26778:	orr	r7, r5, r1, lsl #8
   2677c:	ldrb	r1, [sl, #1]
   26780:	orr	r1, r7, r1, lsl #16
   26784:	movw	r2, #25186	; 0x6262
   26788:	ldr	r7, [sp, #32]
   2678c:	movt	r2, #24418	; 0x5f62
   26790:	eor	r0, r0, r2
   26794:	ldrb	r2, [sl]
   26798:	orr	r1, r1, r2, lsl #24
   2679c:	movw	r2, #24929	; 0x6161
   267a0:	movt	r2, #24929	; 0x6161
   267a4:	eor	r1, r1, r2
   267a8:	orrs	r0, r0, r1
   267ac:	bne	2697c <main@@Base+0x10c40>
   267b0:	mov	r0, r8
   267b4:	add	r8, sl, #8
   267b8:	sub	lr, r0, r8
   267bc:	mov	r0, #8
   267c0:	cmp	lr, #8
   267c4:	movcc	r0, lr
   267c8:	and	r0, r0, #15
   267cc:	sub	r6, r0, #1
   267d0:	cmp	r6, #7
   267d4:	bhi	269e8 <main@@Base+0x10cac>
   267d8:	add	r2, pc, #32
   267dc:	mov	r1, #0
   267e0:	mov	ip, #0
   267e4:	mov	r9, #0
   267e8:	mov	r5, #0
   267ec:	mov	r3, #0
   267f0:	mov	r4, #0
   267f4:	mov	r7, #0
   267f8:	mov	r0, #0
   267fc:	ldr	pc, [r2, r6, lsl #2]
   26800:	andeq	r6, r2, r4, ror #16
   26804:	andeq	r6, r2, ip, asr r8
   26808:	andeq	r6, r2, r4, asr r8
   2680c:	andeq	r6, r2, ip, asr #16
   26810:	andeq	r6, r2, r0, asr #16
   26814:	andeq	r6, r2, r4, lsr r8
   26818:	andeq	r6, r2, r4, lsr #16
   2681c:	andeq	r6, r2, r0, lsr #16
   26820:	ldrb	ip, [sl, #15]
   26824:	ldrb	r0, [sl, #14]
   26828:	mov	r9, r1
   2682c:	orr	r0, ip, r0, lsl #8
   26830:	mov	r1, r0
   26834:	ldrb	r0, [sl, #13]
   26838:	mov	r5, r9
   2683c:	orr	r1, r1, r0, lsl #16
   26840:	ldrb	r0, [sl, #12]
   26844:	mov	r3, r5
   26848:	orr	r1, r1, r0, lsl #24
   2684c:	ldrb	r0, [sl, #11]
   26850:	orr	r4, r0, r3
   26854:	ldrb	r0, [sl, #10]
   26858:	orr	r7, r4, r0, lsl #8
   2685c:	ldrb	r0, [sl, #9]
   26860:	orr	r0, r7, r0, lsl #16
   26864:	ldrb	r3, [r8]
   26868:	movw	r2, #29791	; 0x745f
   2686c:	movt	r2, #24946	; 0x6172
   26870:	eor	r2, r1, r2
   26874:	orr	r0, r0, r3, lsl #24
   26878:	movw	r3, #29556	; 0x7374
   2687c:	movt	r3, #25183	; 0x625f
   26880:	eor	r0, r0, r3
   26884:	orrs	r2, r2, r0
   26888:	bne	26988 <main@@Base+0x10c4c>
   2688c:	ldr	r0, [sp, #24]
   26890:	add	r8, sl, #16
   26894:	mov	r1, #8
   26898:	sub	r0, r0, r8
   2689c:	cmp	r0, #8
   268a0:	movcc	r1, r0
   268a4:	and	r1, r1, #15
   268a8:	sub	r3, r1, #1
   268ac:	cmp	r3, #7
   268b0:	bhi	269e4 <main@@Base+0x10ca8>
   268b4:	add	r4, pc, #20
   268b8:	mov	r1, #0
   268bc:	mov	r2, #0
   268c0:	mov	r6, #0
   268c4:	mov	r7, #0
   268c8:	mov	r5, #0
   268cc:	ldr	pc, [r4, r3, lsl #2]
   268d0:	andeq	r6, r2, r4, lsl r9
   268d4:	andeq	r6, r2, ip, lsl #18
   268d8:	andeq	r6, r2, r4, lsl #18
   268dc:	strdeq	r6, [r2], -r8
   268e0:	strdeq	r6, [r2], -r0
   268e4:	strdeq	r6, [r2], -r0
   268e8:	strdeq	r6, [r2], -r0
   268ec:	strdeq	r6, [r2], -r0
   268f0:	ldrb	r2, [sl, #20]
   268f4:	lsl	r2, r2, #24
   268f8:	ldrb	r3, [sl, #19]
   268fc:	orr	r6, r3, r1
   26900:	mov	r1, r2
   26904:	ldrb	r2, [sl, #18]
   26908:	orr	r7, r6, r2, lsl #8
   2690c:	ldrb	r2, [sl, #17]
   26910:	orr	r5, r7, r2, lsl #16
   26914:	ldrb	r2, [r8]
   26918:	movw	r3, #25968	; 0x6570
   2691c:	and	r1, r1, #-16777216	; 0xff000000
   26920:	movt	r3, #29556	; 0x7374
   26924:	eor	r1, r1, #1929379840	; 0x73000000
   26928:	orr	r2, r5, r2, lsl #24
   2692c:	eor	r2, r2, r3
   26930:	orrs	r1, r1, r2
   26934:	bne	269e4 <main@@Base+0x10ca8>
   26938:	ldr	r7, [sp, #32]
   2693c:	cmp	r0, #6
   26940:	blt	269e8 <main@@Base+0x10cac>
   26944:	ldrb	r0, [sl, #21]
   26948:	cmp	r0, #34	; 0x22
   2694c:	bne	269e8 <main@@Base+0x10cac>
   26950:	ldr	r4, [sp, #24]
   26954:	add	r1, sl, #22
   26958:	sub	r0, r4, r1
   2695c:	cmp	r0, #2
   26960:	blt	26354 <main@@Base+0x10618>
   26964:	ldrb	r0, [r1]
   26968:	cmp	r0, #32
   2696c:	bls	26340 <main@@Base+0x10604>
   26970:	ldr	r4, [sp, #24]
   26974:	mov	sl, r1
   26978:	b	26364 <main@@Base+0x10628>
   2697c:	mov	r0, r7
   26980:	mov	r1, sl
   26984:	b	269f4 <main@@Base+0x10cb8>
   26988:	movw	r2, #29440	; 0x7300
   2698c:	ldr	r7, [sp, #32]
   26990:	bic	r1, r1, #255	; 0xff
   26994:	movt	r2, #25968	; 0x6570
   26998:	eor	r1, r1, r2
   2699c:	orrs	r0, r1, r0
   269a0:	bne	269e8 <main@@Base+0x10cac>
   269a4:	cmp	lr, #8
   269a8:	blt	269e8 <main@@Base+0x10cac>
   269ac:	ldrb	r0, [sl, #15]
   269b0:	cmp	r0, #34	; 0x22
   269b4:	bne	269e8 <main@@Base+0x10cac>
   269b8:	ldr	r4, [sp, #24]
   269bc:	add	r1, sl, #16
   269c0:	sub	r0, r4, r1
   269c4:	cmp	r0, #2
   269c8:	blt	262d8 <main@@Base+0x1059c>
   269cc:	ldrb	r0, [r1]
   269d0:	cmp	r0, #32
   269d4:	bls	262c4 <main@@Base+0x10588>
   269d8:	ldr	r4, [sp, #24]
   269dc:	mov	sl, r1
   269e0:	b	262e8 <main@@Base+0x105ac>
   269e4:	ldr	r7, [sp, #32]
   269e8:	mov	r1, r8
   269ec:	ldr	r8, [sp, #24]
   269f0:	mov	r0, r7
   269f4:	mov	r2, r8
   269f8:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   269fc:	mov	r9, r0
   26a00:	movw	sl, #0
   26a04:	sub	r0, r8, r9
   26a08:	movt	sl, #26418	; 0x6732
   26a0c:	cmp	r0, #2
   26a10:	blt	26a3c <main@@Base+0x10d00>
   26a14:	ldrb	r0, [r9]
   26a18:	cmp	r0, #32
   26a1c:	bls	26a28 <main@@Base+0x10cec>
   26a20:	mov	r2, r9
   26a24:	b	26a50 <main@@Base+0x10d14>
   26a28:	bne	26a3c <main@@Base+0x10d00>
   26a2c:	mov	r2, r9
   26a30:	ldrb	r0, [r2, #1]!
   26a34:	cmp	r0, #32
   26a38:	bhi	26a50 <main@@Base+0x10d14>
   26a3c:	mov	r0, r7
   26a40:	mov	r1, r9
   26a44:	mov	r2, r8
   26a48:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26a4c:	mov	r2, r0
   26a50:	cmp	r2, r8
   26a54:	beq	26ae0 <main@@Base+0x10da4>
   26a58:	ldrb	r0, [r2]
   26a5c:	cmp	r0, #44	; 0x2c
   26a60:	bne	26ae8 <main@@Base+0x10dac>
   26a64:	add	r1, r2, #1
   26a68:	sub	r0, r8, r1
   26a6c:	cmp	r0, #2
   26a70:	blt	26a98 <main@@Base+0x10d5c>
   26a74:	ldrb	r0, [r1]
   26a78:	cmp	r0, #32
   26a7c:	bls	26a88 <main@@Base+0x10d4c>
   26a80:	mov	r2, r1
   26a84:	b	26aa8 <main@@Base+0x10d6c>
   26a88:	bne	26a98 <main@@Base+0x10d5c>
   26a8c:	ldrb	r0, [r2, #2]!
   26a90:	cmp	r0, #32
   26a94:	bhi	26aa8 <main@@Base+0x10d6c>
   26a98:	mov	r0, r7
   26a9c:	mov	r2, r8
   26aa0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26aa4:	mov	r2, r0
   26aa8:	cmp	r2, r8
   26aac:	beq	26b24 <main@@Base+0x10de8>
   26ab0:	ldrb	r0, [r2]
   26ab4:	cmp	r0, #125	; 0x7d
   26ab8:	bne	266a0 <main@@Base+0x10964>
   26abc:	add	r1, r2, #1
   26ac0:	sub	r0, r8, r1
   26ac4:	cmp	r0, #2
   26ac8:	blt	26b68 <main@@Base+0x10e2c>
   26acc:	ldrb	r0, [r1]
   26ad0:	cmp	r0, #32
   26ad4:	bls	26b54 <main@@Base+0x10e18>
   26ad8:	mov	r9, r1
   26adc:	b	25a48 <main@@Base+0xfd0c>
   26ae0:	mov	r9, r8
   26ae4:	b	25a48 <main@@Base+0xfd0c>
   26ae8:	cmp	r0, #125	; 0x7d
   26aec:	bne	26b30 <main@@Base+0x10df4>
   26af0:	add	r1, r2, #1
   26af4:	sub	r0, r8, r1
   26af8:	cmp	r0, #2
   26afc:	blt	26b68 <main@@Base+0x10e2c>
   26b00:	ldrb	r0, [r1]
   26b04:	cmp	r0, #32
   26b08:	bls	26b44 <main@@Base+0x10e08>
   26b0c:	ldr	r8, [sp, #24]
   26b10:	ldr	r7, [sp, #32]
   26b14:	movw	sl, #0
   26b18:	mov	r9, r1
   26b1c:	movt	sl, #26418	; 0x6732
   26b20:	b	25a48 <main@@Base+0xfd0c>
   26b24:	mov	r0, r7
   26b28:	mov	r1, r8
   26b2c:	b	26b38 <main@@Base+0x10dfc>
   26b30:	mov	r0, r7
   26b34:	mov	r1, r2
   26b38:	mov	r2, r8
   26b3c:	mov	r3, #10
   26b40:	b	25a40 <main@@Base+0xfd04>
   26b44:	ldr	r8, [sp, #24]
   26b48:	ldr	r7, [sp, #32]
   26b4c:	movw	sl, #0
   26b50:	movt	sl, #26418	; 0x6732
   26b54:	bne	26b68 <main@@Base+0x10e2c>
   26b58:	ldrb	r0, [r2, #2]!
   26b5c:	cmp	r0, #32
   26b60:	mov	r9, r2
   26b64:	bhi	25a48 <main@@Base+0xfd0c>
   26b68:	mov	r0, r7
   26b6c:	mov	r2, r8
   26b70:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26b74:	b	25a44 <main@@Base+0xfd08>
   26b78:	ldr	sl, [sp, #24]
   26b7c:	b	26bac <main@@Base+0x10e70>
   26b80:	mov	sl, r9
   26b84:	b	26bac <main@@Base+0x10e70>
   26b88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26b8c:	cmp	r0, #0
   26b90:	beq	26c34 <main@@Base+0x10ef8>
   26b94:	ldr	r0, [sp, #32]
   26b98:	ldr	r2, [sp, #24]
   26b9c:	mov	r1, sl
   26ba0:	mov	r3, #7
   26ba4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   26ba8:	mov	sl, r0
   26bac:	cmp	r9, sl
   26bb0:	bne	26bec <main@@Base+0x10eb0>
   26bb4:	sub	r0, fp, #44	; 0x2c
   26bb8:	ldr	r2, [sp, #24]
   26bbc:	movw	r3, #33404	; 0x827c
   26bc0:	mov	r1, r9
   26bc4:	str	r0, [sp]
   26bc8:	ldr	r0, [sp, #32]
   26bcc:	movt	r3, #5
   26bd0:	bl	236d0 <main@@Base+0xd994>
   26bd4:	cmp	r0, r9
   26bd8:	mov	sl, r0
   26bdc:	ldrne	r0, [sp, #24]
   26be0:	cmpne	sl, r0
   26be4:	beq	28030 <main@@Base+0x122f4>
   26be8:	ldr	r4, [fp, #-44]	; 0xffffffd4
   26bec:	cmp	r4, #0
   26bf0:	bne	26c04 <main@@Base+0x10ec8>
   26bf4:	ldr	r0, [sp, #32]
   26bf8:	ldrb	r0, [r0, #8]
   26bfc:	tst	r0, #2
   26c00:	beq	26c28 <main@@Base+0x10eec>
   26c04:	ldr	r0, [sp, #32]
   26c08:	mov	r1, #8
   26c0c:	mov	r2, #4
   26c10:	mov	r3, #4
   26c14:	ldr	r0, [r0]
   26c18:	bl	2ea78 <flatcc_builder_table_add@@Base>
   26c1c:	cmp	r0, #0
   26c20:	beq	28030 <main@@Base+0x122f4>
   26c24:	str	r4, [r0]
   26c28:	ldr	r8, [sp, #24]
   26c2c:	ldr	r7, [sp, #32]
   26c30:	b	27df0 <main@@Base+0x120b4>
   26c34:	ldr	r4, [fp, #-40]	; 0xffffffd8
   26c38:	str	r4, [fp, #-44]	; 0xffffffd4
   26c3c:	b	26bac <main@@Base+0x10e70>
   26c40:	cmp	r2, r8
   26c44:	mov	r9, r8
   26c48:	beq	26c78 <main@@Base+0x10f3c>
   26c4c:	ldrb	r0, [r2]
   26c50:	cmp	r0, #34	; 0x22
   26c54:	bne	26c60 <main@@Base+0x10f24>
   26c58:	add	r9, r2, #1
   26c5c:	b	26c78 <main@@Base+0x10f3c>
   26c60:	mov	r1, r2
   26c64:	mov	r0, r7
   26c68:	mov	r2, r8
   26c6c:	mov	r3, #5
   26c70:	bl	316cc <flatcc_json_parser_set_error@@Base>
   26c74:	mov	r9, r0
   26c78:	sub	r8, r8, r9
   26c7c:	mov	r0, #8
   26c80:	cmp	r8, #8
   26c84:	movcc	r0, r8
   26c88:	and	r0, r0, #15
   26c8c:	sub	r3, r0, #1
   26c90:	cmp	r3, #7
   26c94:	bhi	27558 <main@@Base+0x1181c>
   26c98:	add	r4, pc, #32
   26c9c:	mov	r0, #0
   26ca0:	mov	ip, #0
   26ca4:	mov	lr, #0
   26ca8:	mov	r6, #0
   26cac:	mov	r2, #0
   26cb0:	mov	r5, #0
   26cb4:	mov	r7, #0
   26cb8:	mov	r1, #0
   26cbc:	ldr	pc, [r4, r3, lsl #2]
   26cc0:	andeq	r6, r2, r4, lsr #26
   26cc4:	andeq	r6, r2, ip, lsl sp
   26cc8:	andeq	r6, r2, r4, lsl sp
   26ccc:	andeq	r6, r2, ip, lsl #26
   26cd0:	andeq	r6, r2, r0, lsl #26
   26cd4:	strdeq	r6, [r2], -r4
   26cd8:	andeq	r6, r2, r4, ror #25
   26cdc:	andeq	r6, r2, r0, ror #25
   26ce0:	ldrb	ip, [r9, #7]
   26ce4:	ldrb	r1, [r9, #6]
   26ce8:	mov	lr, r0
   26cec:	orr	r1, ip, r1, lsl #8
   26cf0:	mov	r0, r1
   26cf4:	ldrb	r1, [r9, #5]
   26cf8:	mov	r6, lr
   26cfc:	orr	r0, r0, r1, lsl #16
   26d00:	ldrb	r1, [r9, #4]
   26d04:	mov	r2, r6
   26d08:	orr	r0, r0, r1, lsl #24
   26d0c:	ldrb	r1, [r9, #3]
   26d10:	orr	r5, r1, r2
   26d14:	ldrb	r1, [r9, #2]
   26d18:	orr	r7, r5, r1, lsl #8
   26d1c:	ldrb	r1, [r9, #1]
   26d20:	orr	r1, r7, r1, lsl #16
   26d24:	ldrb	r2, [r9]
   26d28:	orr	r4, r1, r2, lsl #24
   26d2c:	movw	r1, #25442	; 0x6362
   26d30:	movt	r1, #25443	; 0x6363
   26d34:	cmp	r4, r1
   26d38:	bhi	26dd4 <main@@Base+0x11098>
   26d3c:	movw	r1, #13108	; 0x3334
   26d40:	movw	r2, #25186	; 0x6262
   26d44:	movt	r1, #12594	; 0x3132
   26d48:	movt	r2, #25186	; 0x6262
   26d4c:	eor	r5, r0, r1
   26d50:	movw	r1, #24929	; 0x6161
   26d54:	movt	r1, #24929	; 0x6161
   26d58:	eor	r0, r4, r1
   26d5c:	orrs	r0, r5, r0
   26d60:	bne	26e34 <main@@Base+0x110f8>
   26d64:	ldr	r8, [sp, #24]
   26d68:	add	r7, r9, #8
   26d6c:	mov	r1, #8
   26d70:	mov	r2, #-268435456	; 0xf0000000
   26d74:	sub	r0, r8, r7
   26d78:	cmp	r0, #8
   26d7c:	movcc	r1, r0
   26d80:	add	r1, r2, r1, lsl #28
   26d84:	asr	r1, r1, #28
   26d88:	cmp	r1, #0
   26d8c:	blt	27dd8 <main@@Base+0x1209c>
   26d90:	ldrb	r1, [r7]
   26d94:	cmp	r1, #53	; 0x35
   26d98:	bne	27dd8 <main@@Base+0x1209c>
   26d9c:	cmp	r0, #2
   26da0:	blt	27dd8 <main@@Base+0x1209c>
   26da4:	ldrb	r0, [r9, #9]
   26da8:	cmp	r0, #34	; 0x22
   26dac:	bne	27dd8 <main@@Base+0x1209c>
   26db0:	add	r1, r9, #10
   26db4:	sub	r0, r8, r1
   26db8:	cmp	r0, #2
   26dbc:	blt	27068 <main@@Base+0x1132c>
   26dc0:	ldrb	r0, [r1]
   26dc4:	cmp	r0, #32
   26dc8:	bls	27058 <main@@Base+0x1131c>
   26dcc:	mov	r9, r1
   26dd0:	b	27078 <main@@Base+0x1133c>
   26dd4:	movw	r1, #13108	; 0x3334
   26dd8:	movt	r1, #12594	; 0x3132
   26ddc:	eor	r5, r0, r1
   26de0:	ldr	r0, [sp, #16]
   26de4:	eor	r0, r4, r0
   26de8:	orrs	r0, r5, r0
   26dec:	bne	26e88 <main@@Base+0x1114c>
   26df0:	cmp	r8, #9
   26df4:	ldr	r8, [sp, #24]
   26df8:	mov	r7, r9
   26dfc:	blt	270ec <main@@Base+0x113b0>
   26e00:	ldrb	r0, [r9, #8]
   26e04:	mov	r7, r9
   26e08:	cmp	r0, #34	; 0x22
   26e0c:	bne	270ec <main@@Base+0x113b0>
   26e10:	add	r1, r9, #9
   26e14:	sub	r0, r8, r1
   26e18:	cmp	r0, #2
   26e1c:	blt	26ef8 <main@@Base+0x111bc>
   26e20:	ldrb	r0, [r1]
   26e24:	cmp	r0, #32
   26e28:	bls	26ee4 <main@@Base+0x111a8>
   26e2c:	mov	r7, r1
   26e30:	b	26f08 <main@@Base+0x111cc>
   26e34:	ldr	r7, [sp, #32]
   26e38:	teq	r4, r1
   26e3c:	bne	27314 <main@@Base+0x115d8>
   26e40:	cmp	r8, #5
   26e44:	mov	r1, r9
   26e48:	blt	272d4 <main@@Base+0x11598>
   26e4c:	ldrb	r0, [r9, #4]
   26e50:	mov	r1, r9
   26e54:	cmp	r0, #34	; 0x22
   26e58:	bne	272d4 <main@@Base+0x11598>
   26e5c:	ldr	r6, [sp, #24]
   26e60:	add	r2, r9, #5
   26e64:	sub	r0, r6, r2
   26e68:	cmp	r0, #2
   26e6c:	blt	26f70 <main@@Base+0x11234>
   26e70:	ldrb	r0, [r2]
   26e74:	cmp	r0, #32
   26e78:	bls	26f58 <main@@Base+0x1121c>
   26e7c:	ldr	r6, [sp, #24]
   26e80:	mov	r1, r2
   26e84:	b	26f84 <main@@Base+0x11248>
   26e88:	ldr	r7, [sp, #32]
   26e8c:	movw	r0, #25443	; 0x6363
   26e90:	movt	r0, #25443	; 0x6363
   26e94:	teq	r4, r0
   26e98:	bne	27504 <main@@Base+0x117c8>
   26e9c:	cmp	r8, #5
   26ea0:	mov	r1, r9
   26ea4:	blt	274cc <main@@Base+0x11790>
   26ea8:	ldrb	r0, [r9, #4]
   26eac:	mov	r1, r9
   26eb0:	cmp	r0, #34	; 0x22
   26eb4:	bne	274cc <main@@Base+0x11790>
   26eb8:	ldr	r6, [sp, #24]
   26ebc:	add	r2, r9, #5
   26ec0:	sub	r0, r6, r2
   26ec4:	cmp	r0, #2
   26ec8:	blt	26ff0 <main@@Base+0x112b4>
   26ecc:	ldrb	r0, [r2]
   26ed0:	cmp	r0, #32
   26ed4:	bls	26fd8 <main@@Base+0x1129c>
   26ed8:	ldr	r6, [sp, #24]
   26edc:	mov	r1, r2
   26ee0:	b	27004 <main@@Base+0x112c8>
   26ee4:	bne	26ef8 <main@@Base+0x111bc>
   26ee8:	mov	r7, r9
   26eec:	ldrb	r0, [r7, #10]!
   26ef0:	cmp	r0, #32
   26ef4:	bhi	26f08 <main@@Base+0x111cc>
   26ef8:	ldr	r0, [sp, #32]
   26efc:	mov	r2, r8
   26f00:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26f04:	mov	r7, r0
   26f08:	cmp	r7, r8
   26f0c:	beq	26f40 <main@@Base+0x11204>
   26f10:	ldrb	r0, [r7]
   26f14:	cmp	r0, #58	; 0x3a
   26f18:	bne	26f40 <main@@Base+0x11204>
   26f1c:	add	r1, r7, #1
   26f20:	sub	r0, r8, r1
   26f24:	cmp	r0, #2
   26f28:	blt	270dc <main@@Base+0x113a0>
   26f2c:	ldrb	r0, [r1]
   26f30:	cmp	r0, #32
   26f34:	bls	270cc <main@@Base+0x11390>
   26f38:	mov	r7, r1
   26f3c:	b	270ec <main@@Base+0x113b0>
   26f40:	ldr	r0, [sp, #32]
   26f44:	mov	r1, r7
   26f48:	mov	r2, r8
   26f4c:	mov	r3, #4
   26f50:	bl	316cc <flatcc_json_parser_set_error@@Base>
   26f54:	b	270e8 <main@@Base+0x113ac>
   26f58:	ldr	r6, [sp, #24]
   26f5c:	bne	26f70 <main@@Base+0x11234>
   26f60:	mov	r1, r9
   26f64:	ldrb	r0, [r1, #6]!
   26f68:	cmp	r0, #32
   26f6c:	bhi	26f84 <main@@Base+0x11248>
   26f70:	mov	r1, r2
   26f74:	mov	r0, r7
   26f78:	mov	r2, r6
   26f7c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   26f80:	mov	r1, r0
   26f84:	cmp	r1, r6
   26f88:	beq	26fc4 <main@@Base+0x11288>
   26f8c:	ldrb	r0, [r1]
   26f90:	cmp	r0, #58	; 0x3a
   26f94:	bne	26fc4 <main@@Base+0x11288>
   26f98:	ldr	r0, [sp, #24]
   26f9c:	add	r2, r1, #1
   26fa0:	sub	r0, r0, r2
   26fa4:	cmp	r0, #2
   26fa8:	blt	272c0 <main@@Base+0x11584>
   26fac:	ldrb	r0, [r2]
   26fb0:	cmp	r0, #32
   26fb4:	bls	272ac <main@@Base+0x11570>
   26fb8:	ldr	r7, [sp, #32]
   26fbc:	mov	r1, r2
   26fc0:	b	272d4 <main@@Base+0x11598>
   26fc4:	ldr	r2, [sp, #24]
   26fc8:	mov	r0, r7
   26fcc:	mov	r3, #4
   26fd0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   26fd4:	b	272d0 <main@@Base+0x11594>
   26fd8:	ldr	r6, [sp, #24]
   26fdc:	bne	26ff0 <main@@Base+0x112b4>
   26fe0:	mov	r1, r9
   26fe4:	ldrb	r0, [r1, #6]!
   26fe8:	cmp	r0, #32
   26fec:	bhi	27004 <main@@Base+0x112c8>
   26ff0:	mov	r1, r2
   26ff4:	mov	r0, r7
   26ff8:	mov	r2, r6
   26ffc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27000:	mov	r1, r0
   27004:	cmp	r1, r6
   27008:	beq	27044 <main@@Base+0x11308>
   2700c:	ldrb	r0, [r1]
   27010:	cmp	r0, #58	; 0x3a
   27014:	bne	27044 <main@@Base+0x11308>
   27018:	ldr	r0, [sp, #24]
   2701c:	add	r2, r1, #1
   27020:	sub	r0, r0, r2
   27024:	cmp	r0, #2
   27028:	blt	274b8 <main@@Base+0x1177c>
   2702c:	ldrb	r0, [r2]
   27030:	cmp	r0, #32
   27034:	bls	274a4 <main@@Base+0x11768>
   27038:	ldr	r7, [sp, #32]
   2703c:	mov	r1, r2
   27040:	b	274cc <main@@Base+0x11790>
   27044:	ldr	r2, [sp, #24]
   27048:	mov	r0, r7
   2704c:	mov	r3, #4
   27050:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27054:	b	274c8 <main@@Base+0x1178c>
   27058:	bne	27068 <main@@Base+0x1132c>
   2705c:	ldrb	r0, [r9, #11]!
   27060:	cmp	r0, #32
   27064:	bhi	27078 <main@@Base+0x1133c>
   27068:	ldr	r0, [sp, #32]
   2706c:	mov	r2, r8
   27070:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27074:	mov	r9, r0
   27078:	cmp	r9, r8
   2707c:	beq	270b4 <main@@Base+0x11378>
   27080:	ldrb	r0, [r9]
   27084:	cmp	r0, #58	; 0x3a
   27088:	bne	270b4 <main@@Base+0x11378>
   2708c:	add	r1, r9, #1
   27090:	sub	r0, r8, r1
   27094:	cmp	r0, #2
   27098:	blt	279b8 <main@@Base+0x11c7c>
   2709c:	ldrb	r0, [r1]
   270a0:	cmp	r0, #32
   270a4:	bls	279a4 <main@@Base+0x11c68>
   270a8:	ldr	r8, [sp, #24]
   270ac:	mov	r9, r1
   270b0:	b	279c8 <main@@Base+0x11c8c>
   270b4:	ldr	r0, [sp, #32]
   270b8:	mov	r1, r9
   270bc:	mov	r2, r8
   270c0:	mov	r3, #4
   270c4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   270c8:	b	279c4 <main@@Base+0x11c88>
   270cc:	bne	270dc <main@@Base+0x113a0>
   270d0:	ldrb	r0, [r7, #2]!
   270d4:	cmp	r0, #32
   270d8:	bhi	270ec <main@@Base+0x113b0>
   270dc:	ldr	r0, [sp, #32]
   270e0:	mov	r2, r8
   270e4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   270e8:	mov	r7, r0
   270ec:	cmp	r9, r7
   270f0:	beq	2716c <main@@Base+0x11430>
   270f4:	mov	r4, #0
   270f8:	cmp	r7, r8
   270fc:	str	r4, [fp, #-36]	; 0xffffffdc
   27100:	str	r4, [fp, #-40]	; 0xffffffd8
   27104:	str	r4, [sp, #44]	; 0x2c
   27108:	str	r4, [sp, #40]	; 0x28
   2710c:	str	r4, [fp, #-44]	; 0xffffffd4
   27110:	beq	271dc <main@@Base+0x114a0>
   27114:	sub	r0, fp, #40	; 0x28
   27118:	mov	r1, r7
   2711c:	mov	r2, r8
   27120:	sub	r3, fp, #44	; 0x2c
   27124:	str	r0, [sp]
   27128:	ldr	r0, [sp, #32]
   2712c:	bl	334d0 <flatcc_json_parser_integer@@Base>
   27130:	cmp	r0, r7
   27134:	beq	271e8 <main@@Base+0x114ac>
   27138:	sub	r5, fp, #44	; 0x2c
   2713c:	mov	sl, r0
   27140:	ldm	r5, {r0, r4, r5}
   27144:	cmp	r0, #0
   27148:	beq	271f8 <main@@Base+0x114bc>
   2714c:	subs	r0, r4, #1
   27150:	sbcs	r0, r5, #-2147483648	; 0x80000000
   27154:	bcc	27224 <main@@Base+0x114e8>
   27158:	ldr	r0, [sp, #32]
   2715c:	mov	r1, sl
   27160:	mov	r2, r8
   27164:	mov	r3, #8
   27168:	b	27210 <main@@Base+0x114d4>
   2716c:	add	r7, r9, #8
   27170:	mov	r1, #8
   27174:	mov	r2, #-268435456	; 0xf0000000
   27178:	sub	r0, r8, r7
   2717c:	cmp	r0, #8
   27180:	movcc	r1, r0
   27184:	add	r1, r2, r1, lsl #28
   27188:	asr	r1, r1, #28
   2718c:	cmp	r1, #0
   27190:	blt	27dd8 <main@@Base+0x1209c>
   27194:	ldrb	r1, [r7]
   27198:	cmp	r1, #53	; 0x35
   2719c:	bne	27dd8 <main@@Base+0x1209c>
   271a0:	cmp	r0, #2
   271a4:	blt	27dd8 <main@@Base+0x1209c>
   271a8:	ldrb	r0, [r9, #9]
   271ac:	cmp	r0, #34	; 0x22
   271b0:	bne	27dd8 <main@@Base+0x1209c>
   271b4:	add	r1, r9, #10
   271b8:	sub	r0, r8, r1
   271bc:	cmp	r0, #2
   271c0:	blt	275f4 <main@@Base+0x118b8>
   271c4:	ldrb	r0, [r1]
   271c8:	cmp	r0, #32
   271cc:	bls	275e0 <main@@Base+0x118a4>
   271d0:	ldr	r8, [sp, #24]
   271d4:	mov	r9, r1
   271d8:	b	27604 <main@@Base+0x118c8>
   271dc:	mov	r5, #0
   271e0:	mov	sl, r8
   271e4:	b	27234 <main@@Base+0x114f8>
   271e8:	mov	r4, #0
   271ec:	mov	r5, #0
   271f0:	mov	sl, r7
   271f4:	b	27234 <main@@Base+0x114f8>
   271f8:	cmn	r5, #1
   271fc:	bgt	2722c <main@@Base+0x114f0>
   27200:	ldr	r0, [sp, #32]
   27204:	mov	r1, sl
   27208:	mov	r2, r8
   2720c:	mov	r3, #7
   27210:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27214:	mov	sl, r0
   27218:	mov	r4, #0
   2721c:	mov	r5, #0
   27220:	b	27234 <main@@Base+0x114f8>
   27224:	rsbs	r4, r4, #0
   27228:	rsc	r5, r5, #0
   2722c:	str	r4, [sp, #40]	; 0x28
   27230:	str	r5, [sp, #44]	; 0x2c
   27234:	cmp	r7, sl
   27238:	bne	27274 <main@@Base+0x11538>
   2723c:	add	r0, sp, #40	; 0x28
   27240:	movw	r3, #33368	; 0x8258
   27244:	mov	r1, r7
   27248:	mov	r2, r8
   2724c:	str	r0, [sp]
   27250:	ldr	r0, [sp, #32]
   27254:	movt	r3, #5
   27258:	bl	234e8 <main@@Base+0xd7ac>
   2725c:	mov	sl, r0
   27260:	cmp	r0, r7
   27264:	cmpne	sl, r8
   27268:	beq	28034 <main@@Base+0x122f8>
   2726c:	ldr	r4, [sp, #40]	; 0x28
   27270:	ldr	r5, [sp, #44]	; 0x2c
   27274:	ldr	r7, [sp, #32]
   27278:	orrs	r0, r4, r5
   2727c:	bne	2728c <main@@Base+0x11550>
   27280:	ldrb	r0, [r7, #8]
   27284:	tst	r0, #2
   27288:	beq	27df0 <main@@Base+0x120b4>
   2728c:	ldr	r0, [r7]
   27290:	mov	r1, #5
   27294:	mov	r2, #8
   27298:	mov	r3, #8
   2729c:	bl	2ea78 <flatcc_builder_table_add@@Base>
   272a0:	cmp	r0, #0
   272a4:	bne	2799c <main@@Base+0x11c60>
   272a8:	b	28034 <main@@Base+0x122f8>
   272ac:	ldr	r7, [sp, #32]
   272b0:	bne	272c0 <main@@Base+0x11584>
   272b4:	ldrb	r0, [r1, #2]!
   272b8:	cmp	r0, #32
   272bc:	bhi	272d4 <main@@Base+0x11598>
   272c0:	mov	r1, r2
   272c4:	ldr	r2, [sp, #24]
   272c8:	mov	r0, r7
   272cc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   272d0:	mov	r1, r0
   272d4:	movw	r2, #25186	; 0x6262
   272d8:	cmp	r9, r1
   272dc:	movt	r2, #25186	; 0x6262
   272e0:	beq	27314 <main@@Base+0x115d8>
   272e4:	ldr	r8, [sp, #24]
   272e8:	mov	r0, r7
   272ec:	add	r3, sp, #36	; 0x24
   272f0:	mov	r2, r8
   272f4:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   272f8:	mov	sl, r0
   272fc:	ldr	r0, [sp, #36]	; 0x24
   27300:	cmp	r0, #0
   27304:	beq	28038 <main@@Base+0x122fc>
   27308:	ldr	r0, [r7]
   2730c:	mov	r1, #0
   27310:	b	27b64 <main@@Base+0x11e28>
   27314:	eor	r0, r4, r2
   27318:	orrs	r0, r5, r0
   2731c:	bne	27364 <main@@Base+0x11628>
   27320:	cmp	r8, #9
   27324:	ldr	r8, [sp, #24]
   27328:	mov	r7, r9
   2732c:	blt	2767c <main@@Base+0x11940>
   27330:	ldrb	r0, [r9, #8]
   27334:	mov	r7, r9
   27338:	cmp	r0, #34	; 0x22
   2733c:	bne	2767c <main@@Base+0x11940>
   27340:	add	r1, r9, #9
   27344:	sub	r0, r8, r1
   27348:	cmp	r0, #2
   2734c:	blt	273c4 <main@@Base+0x11688>
   27350:	ldrb	r0, [r1]
   27354:	cmp	r0, #32
   27358:	bls	273b0 <main@@Base+0x11674>
   2735c:	mov	r7, r1
   27360:	b	273d4 <main@@Base+0x11698>
   27364:	teq	r4, r2
   27368:	bne	27558 <main@@Base+0x1181c>
   2736c:	cmp	r8, #5
   27370:	ldr	r8, [sp, #24]
   27374:	mov	r1, r9
   27378:	blt	27b34 <main@@Base+0x11df8>
   2737c:	ldrb	r0, [r9, #4]
   27380:	mov	r1, r9
   27384:	cmp	r0, #34	; 0x22
   27388:	bne	27b34 <main@@Base+0x11df8>
   2738c:	add	r2, r9, #5
   27390:	sub	r0, r8, r2
   27394:	cmp	r0, #2
   27398:	blt	2743c <main@@Base+0x11700>
   2739c:	ldrb	r0, [r2]
   273a0:	cmp	r0, #32
   273a4:	bls	27428 <main@@Base+0x116ec>
   273a8:	mov	r1, r2
   273ac:	b	27450 <main@@Base+0x11714>
   273b0:	bne	273c4 <main@@Base+0x11688>
   273b4:	mov	r7, r9
   273b8:	ldrb	r0, [r7, #10]!
   273bc:	cmp	r0, #32
   273c0:	bhi	273d4 <main@@Base+0x11698>
   273c4:	ldr	r0, [sp, #32]
   273c8:	mov	r2, r8
   273cc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   273d0:	mov	r7, r0
   273d4:	cmp	r7, r8
   273d8:	beq	27410 <main@@Base+0x116d4>
   273dc:	ldrb	r0, [r7]
   273e0:	cmp	r0, #58	; 0x3a
   273e4:	bne	27410 <main@@Base+0x116d4>
   273e8:	add	r1, r7, #1
   273ec:	sub	r0, r8, r1
   273f0:	cmp	r0, #2
   273f4:	blt	2766c <main@@Base+0x11930>
   273f8:	ldrb	r0, [r1]
   273fc:	cmp	r0, #32
   27400:	bls	27658 <main@@Base+0x1191c>
   27404:	ldr	r8, [sp, #24]
   27408:	mov	r7, r1
   2740c:	b	2767c <main@@Base+0x11940>
   27410:	ldr	r0, [sp, #32]
   27414:	mov	r1, r7
   27418:	mov	r2, r8
   2741c:	mov	r3, #4
   27420:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27424:	b	27678 <main@@Base+0x1193c>
   27428:	bne	2743c <main@@Base+0x11700>
   2742c:	mov	r1, r9
   27430:	ldrb	r0, [r1, #6]!
   27434:	cmp	r0, #32
   27438:	bhi	27450 <main@@Base+0x11714>
   2743c:	mov	r1, r2
   27440:	mov	r0, r7
   27444:	mov	r2, r8
   27448:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2744c:	mov	r1, r0
   27450:	cmp	r1, r8
   27454:	beq	27490 <main@@Base+0x11754>
   27458:	ldrb	r0, [r1]
   2745c:	cmp	r0, #58	; 0x3a
   27460:	bne	27490 <main@@Base+0x11754>
   27464:	add	r2, r1, #1
   27468:	sub	r0, r8, r2
   2746c:	cmp	r0, #2
   27470:	blt	27b20 <main@@Base+0x11de4>
   27474:	ldrb	r0, [r2]
   27478:	cmp	r0, #32
   2747c:	bls	27b08 <main@@Base+0x11dcc>
   27480:	ldr	r8, [sp, #24]
   27484:	ldr	r7, [sp, #32]
   27488:	mov	r1, r2
   2748c:	b	27b34 <main@@Base+0x11df8>
   27490:	mov	r0, r7
   27494:	mov	r2, r8
   27498:	mov	r3, #4
   2749c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   274a0:	b	27b30 <main@@Base+0x11df4>
   274a4:	ldr	r7, [sp, #32]
   274a8:	bne	274b8 <main@@Base+0x1177c>
   274ac:	ldrb	r0, [r1, #2]!
   274b0:	cmp	r0, #32
   274b4:	bhi	274cc <main@@Base+0x11790>
   274b8:	mov	r1, r2
   274bc:	ldr	r2, [sp, #24]
   274c0:	mov	r0, r7
   274c4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   274c8:	mov	r1, r0
   274cc:	cmp	r9, r1
   274d0:	beq	27504 <main@@Base+0x117c8>
   274d4:	ldr	r8, [sp, #24]
   274d8:	mov	r0, r7
   274dc:	add	r3, sp, #36	; 0x24
   274e0:	mov	r2, r8
   274e4:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   274e8:	mov	sl, r0
   274ec:	ldr	r0, [sp, #36]	; 0x24
   274f0:	cmp	r0, #0
   274f4:	beq	28038 <main@@Base+0x122fc>
   274f8:	ldr	r0, [r7]
   274fc:	mov	r1, #4
   27500:	b	27b64 <main@@Base+0x11e28>
   27504:	ldr	r0, [sp, #12]
   27508:	eor	r0, r4, r0
   2750c:	orrs	r0, r5, r0
   27510:	bne	27558 <main@@Base+0x1181c>
   27514:	cmp	r8, #9
   27518:	ldr	r8, [sp, #24]
   2751c:	mov	r7, r9
   27520:	blt	277e4 <main@@Base+0x11aa8>
   27524:	ldrb	r0, [r9, #8]
   27528:	mov	r7, r9
   2752c:	cmp	r0, #34	; 0x22
   27530:	bne	277e4 <main@@Base+0x11aa8>
   27534:	add	r1, r9, #9
   27538:	sub	r0, r8, r1
   2753c:	cmp	r0, #2
   27540:	blt	2757c <main@@Base+0x11840>
   27544:	ldrb	r0, [r1]
   27548:	cmp	r0, #32
   2754c:	bls	27568 <main@@Base+0x1182c>
   27550:	mov	r7, r1
   27554:	b	2758c <main@@Base+0x11850>
   27558:	ldr	r8, [sp, #24]
   2755c:	mov	r0, r7
   27560:	mov	r1, r9
   27564:	b	27de4 <main@@Base+0x120a8>
   27568:	bne	2757c <main@@Base+0x11840>
   2756c:	mov	r7, r9
   27570:	ldrb	r0, [r7, #10]!
   27574:	cmp	r0, #32
   27578:	bhi	2758c <main@@Base+0x11850>
   2757c:	ldr	r0, [sp, #32]
   27580:	mov	r2, r8
   27584:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27588:	mov	r7, r0
   2758c:	cmp	r7, r8
   27590:	beq	275c8 <main@@Base+0x1188c>
   27594:	ldrb	r0, [r7]
   27598:	cmp	r0, #58	; 0x3a
   2759c:	bne	275c8 <main@@Base+0x1188c>
   275a0:	add	r1, r7, #1
   275a4:	sub	r0, r8, r1
   275a8:	cmp	r0, #2
   275ac:	blt	277d4 <main@@Base+0x11a98>
   275b0:	ldrb	r0, [r1]
   275b4:	cmp	r0, #32
   275b8:	bls	277c0 <main@@Base+0x11a84>
   275bc:	ldr	r8, [sp, #24]
   275c0:	mov	r7, r1
   275c4:	b	277e4 <main@@Base+0x11aa8>
   275c8:	ldr	r0, [sp, #32]
   275cc:	mov	r1, r7
   275d0:	mov	r2, r8
   275d4:	mov	r3, #4
   275d8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   275dc:	b	277e0 <main@@Base+0x11aa4>
   275e0:	ldr	r8, [sp, #24]
   275e4:	bne	275f4 <main@@Base+0x118b8>
   275e8:	ldrb	r0, [r9, #11]!
   275ec:	cmp	r0, #32
   275f0:	bhi	27604 <main@@Base+0x118c8>
   275f4:	ldr	r0, [sp, #32]
   275f8:	mov	r2, r8
   275fc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27600:	mov	r9, r0
   27604:	cmp	r9, r8
   27608:	beq	27640 <main@@Base+0x11904>
   2760c:	ldrb	r0, [r9]
   27610:	cmp	r0, #58	; 0x3a
   27614:	bne	27640 <main@@Base+0x11904>
   27618:	add	r1, r9, #1
   2761c:	sub	r0, r8, r1
   27620:	cmp	r0, #2
   27624:	blt	27c08 <main@@Base+0x11ecc>
   27628:	ldrb	r0, [r1]
   2762c:	cmp	r0, #32
   27630:	bls	27bf4 <main@@Base+0x11eb8>
   27634:	ldr	r8, [sp, #24]
   27638:	mov	r9, r1
   2763c:	b	27c18 <main@@Base+0x11edc>
   27640:	ldr	r0, [sp, #32]
   27644:	mov	r1, r9
   27648:	mov	r2, r8
   2764c:	mov	r3, #4
   27650:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27654:	b	27c14 <main@@Base+0x11ed8>
   27658:	ldr	r8, [sp, #24]
   2765c:	bne	2766c <main@@Base+0x11930>
   27660:	ldrb	r0, [r7, #2]!
   27664:	cmp	r0, #32
   27668:	bhi	2767c <main@@Base+0x11940>
   2766c:	ldr	r0, [sp, #32]
   27670:	mov	r2, r8
   27674:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27678:	mov	r7, r0
   2767c:	cmp	r9, r7
   27680:	beq	276fc <main@@Base+0x119c0>
   27684:	mov	r4, #0
   27688:	cmp	r7, r8
   2768c:	str	r4, [fp, #-36]	; 0xffffffdc
   27690:	str	r4, [fp, #-40]	; 0xffffffd8
   27694:	str	r4, [sp, #44]	; 0x2c
   27698:	str	r4, [sp, #40]	; 0x28
   2769c:	str	r4, [fp, #-44]	; 0xffffffd4
   276a0:	beq	27704 <main@@Base+0x119c8>
   276a4:	sub	r0, fp, #40	; 0x28
   276a8:	mov	r1, r7
   276ac:	mov	r2, r8
   276b0:	sub	r3, fp, #44	; 0x2c
   276b4:	str	r0, [sp]
   276b8:	ldr	r0, [sp, #32]
   276bc:	bl	334d0 <flatcc_json_parser_integer@@Base>
   276c0:	cmp	r0, r7
   276c4:	beq	27710 <main@@Base+0x119d4>
   276c8:	sub	r5, fp, #44	; 0x2c
   276cc:	mov	sl, r0
   276d0:	ldm	r5, {r0, r4, r5}
   276d4:	cmp	r0, #0
   276d8:	beq	27720 <main@@Base+0x119e4>
   276dc:	subs	r0, r4, #1
   276e0:	sbcs	r0, r5, #-2147483648	; 0x80000000
   276e4:	bcc	2774c <main@@Base+0x11a10>
   276e8:	ldr	r0, [sp, #32]
   276ec:	mov	r1, sl
   276f0:	mov	r2, r8
   276f4:	mov	r3, #8
   276f8:	b	27738 <main@@Base+0x119fc>
   276fc:	ldr	r7, [sp, #32]
   27700:	b	2755c <main@@Base+0x11820>
   27704:	mov	r5, #0
   27708:	mov	sl, r8
   2770c:	b	2775c <main@@Base+0x11a20>
   27710:	mov	r4, #0
   27714:	mov	r5, #0
   27718:	mov	sl, r7
   2771c:	b	2775c <main@@Base+0x11a20>
   27720:	cmn	r5, #1
   27724:	bgt	27754 <main@@Base+0x11a18>
   27728:	ldr	r0, [sp, #32]
   2772c:	mov	r1, sl
   27730:	mov	r2, r8
   27734:	mov	r3, #7
   27738:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2773c:	mov	sl, r0
   27740:	mov	r4, #0
   27744:	mov	r5, #0
   27748:	b	2775c <main@@Base+0x11a20>
   2774c:	rsbs	r4, r4, #0
   27750:	rsc	r5, r5, #0
   27754:	str	r4, [sp, #40]	; 0x28
   27758:	str	r5, [sp, #44]	; 0x2c
   2775c:	cmp	r7, sl
   27760:	bne	2779c <main@@Base+0x11a60>
   27764:	add	r0, sp, #40	; 0x28
   27768:	movw	r3, #33356	; 0x824c
   2776c:	mov	r1, r7
   27770:	mov	r2, r8
   27774:	str	r0, [sp]
   27778:	ldr	r0, [sp, #32]
   2777c:	movt	r3, #5
   27780:	bl	234e8 <main@@Base+0xd7ac>
   27784:	mov	sl, r0
   27788:	cmp	r0, r7
   2778c:	cmpne	sl, r8
   27790:	beq	28030 <main@@Base+0x122f4>
   27794:	ldr	r4, [sp, #40]	; 0x28
   27798:	ldr	r5, [sp, #44]	; 0x2c
   2779c:	ldr	r7, [sp, #32]
   277a0:	orrs	r0, r4, r5
   277a4:	bne	277b4 <main@@Base+0x11a78>
   277a8:	ldrb	r0, [r7, #8]
   277ac:	tst	r0, #2
   277b0:	beq	27df0 <main@@Base+0x120b4>
   277b4:	ldr	r0, [r7]
   277b8:	mov	r1, #3
   277bc:	b	27988 <main@@Base+0x11c4c>
   277c0:	ldr	r8, [sp, #24]
   277c4:	bne	277d4 <main@@Base+0x11a98>
   277c8:	ldrb	r0, [r7, #2]!
   277cc:	cmp	r0, #32
   277d0:	bhi	277e4 <main@@Base+0x11aa8>
   277d4:	ldr	r0, [sp, #32]
   277d8:	mov	r2, r8
   277dc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   277e0:	mov	r7, r0
   277e4:	cmp	r9, r7
   277e8:	beq	27864 <main@@Base+0x11b28>
   277ec:	mov	r4, #0
   277f0:	cmp	r7, r8
   277f4:	str	r4, [fp, #-36]	; 0xffffffdc
   277f8:	str	r4, [fp, #-40]	; 0xffffffd8
   277fc:	str	r4, [sp, #44]	; 0x2c
   27800:	str	r4, [sp, #40]	; 0x28
   27804:	str	r4, [fp, #-44]	; 0xffffffd4
   27808:	beq	278d0 <main@@Base+0x11b94>
   2780c:	sub	r0, fp, #40	; 0x28
   27810:	mov	r1, r7
   27814:	mov	r2, r8
   27818:	sub	r3, fp, #44	; 0x2c
   2781c:	str	r0, [sp]
   27820:	ldr	r0, [sp, #32]
   27824:	bl	334d0 <flatcc_json_parser_integer@@Base>
   27828:	cmp	r0, r7
   2782c:	beq	278dc <main@@Base+0x11ba0>
   27830:	sub	r5, fp, #44	; 0x2c
   27834:	mov	sl, r0
   27838:	ldm	r5, {r0, r4, r5}
   2783c:	cmp	r0, #0
   27840:	beq	278ec <main@@Base+0x11bb0>
   27844:	subs	r0, r4, #1
   27848:	sbcs	r0, r5, #-2147483648	; 0x80000000
   2784c:	bcc	27918 <main@@Base+0x11bdc>
   27850:	ldr	r0, [sp, #32]
   27854:	mov	r1, sl
   27858:	mov	r2, r8
   2785c:	mov	r3, #8
   27860:	b	27904 <main@@Base+0x11bc8>
   27864:	add	r7, r9, #8
   27868:	mov	r1, #8
   2786c:	mov	r2, #-268435456	; 0xf0000000
   27870:	sub	r0, r8, r7
   27874:	cmp	r0, #8
   27878:	movcc	r1, r0
   2787c:	add	r1, r2, r1, lsl #28
   27880:	asr	r1, r1, #28
   27884:	cmp	r1, #0
   27888:	blt	27dd8 <main@@Base+0x1209c>
   2788c:	ldrb	r1, [r7]
   27890:	cmp	r1, #53	; 0x35
   27894:	bne	27dd8 <main@@Base+0x1209c>
   27898:	cmp	r0, #2
   2789c:	blt	27dd8 <main@@Base+0x1209c>
   278a0:	ldrb	r0, [r9, #9]
   278a4:	cmp	r0, #34	; 0x22
   278a8:	bne	27dd8 <main@@Base+0x1209c>
   278ac:	add	r1, r9, #10
   278b0:	sub	r0, r8, r1
   278b4:	cmp	r0, #2
   278b8:	blt	27b8c <main@@Base+0x11e50>
   278bc:	ldrb	r0, [r1]
   278c0:	cmp	r0, #32
   278c4:	bls	27b7c <main@@Base+0x11e40>
   278c8:	mov	r9, r1
   278cc:	b	27b9c <main@@Base+0x11e60>
   278d0:	mov	r5, #0
   278d4:	mov	sl, r8
   278d8:	b	27928 <main@@Base+0x11bec>
   278dc:	mov	r4, #0
   278e0:	mov	r5, #0
   278e4:	mov	sl, r7
   278e8:	b	27928 <main@@Base+0x11bec>
   278ec:	cmn	r5, #1
   278f0:	bgt	27920 <main@@Base+0x11be4>
   278f4:	ldr	r0, [sp, #32]
   278f8:	mov	r1, sl
   278fc:	mov	r2, r8
   27900:	mov	r3, #7
   27904:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27908:	mov	sl, r0
   2790c:	mov	r4, #0
   27910:	mov	r5, #0
   27914:	b	27928 <main@@Base+0x11bec>
   27918:	rsbs	r4, r4, #0
   2791c:	rsc	r5, r5, #0
   27920:	str	r4, [sp, #40]	; 0x28
   27924:	str	r5, [sp, #44]	; 0x2c
   27928:	cmp	r7, sl
   2792c:	bne	27968 <main@@Base+0x11c2c>
   27930:	add	r0, sp, #40	; 0x28
   27934:	movw	r3, #33392	; 0x8270
   27938:	mov	r1, r7
   2793c:	mov	r2, r8
   27940:	str	r0, [sp]
   27944:	ldr	r0, [sp, #32]
   27948:	movt	r3, #5
   2794c:	bl	234e8 <main@@Base+0xd7ac>
   27950:	mov	sl, r0
   27954:	cmp	r0, r7
   27958:	cmpne	sl, r8
   2795c:	beq	28030 <main@@Base+0x122f4>
   27960:	ldr	r4, [sp, #40]	; 0x28
   27964:	ldr	r5, [sp, #44]	; 0x2c
   27968:	ldr	r7, [sp, #32]
   2796c:	orrs	r0, r4, r5
   27970:	bne	27980 <main@@Base+0x11c44>
   27974:	ldrb	r0, [r7, #8]
   27978:	tst	r0, #2
   2797c:	beq	27df0 <main@@Base+0x120b4>
   27980:	ldr	r0, [r7]
   27984:	mov	r1, #7
   27988:	mov	r2, #8
   2798c:	mov	r3, #8
   27990:	bl	2ea78 <flatcc_builder_table_add@@Base>
   27994:	cmp	r0, #0
   27998:	beq	28030 <main@@Base+0x122f4>
   2799c:	strd	r4, [r0]
   279a0:	b	27df0 <main@@Base+0x120b4>
   279a4:	ldr	r8, [sp, #24]
   279a8:	bne	279b8 <main@@Base+0x11c7c>
   279ac:	ldrb	r0, [r9, #2]!
   279b0:	cmp	r0, #32
   279b4:	bhi	279c8 <main@@Base+0x11c8c>
   279b8:	ldr	r0, [sp, #32]
   279bc:	mov	r2, r8
   279c0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   279c4:	mov	r9, r0
   279c8:	cmp	r7, r9
   279cc:	beq	27dd8 <main@@Base+0x1209c>
   279d0:	mov	r4, #0
   279d4:	cmp	r9, r8
   279d8:	str	r4, [fp, #-36]	; 0xffffffdc
   279dc:	str	r4, [fp, #-40]	; 0xffffffd8
   279e0:	str	r4, [fp, #-44]	; 0xffffffd4
   279e4:	str	r4, [sp, #40]	; 0x28
   279e8:	beq	27a38 <main@@Base+0x11cfc>
   279ec:	ldr	r7, [sp, #32]
   279f0:	sub	r0, fp, #40	; 0x28
   279f4:	mov	r1, r9
   279f8:	mov	r2, r8
   279fc:	add	r3, sp, #40	; 0x28
   27a00:	str	r0, [sp]
   27a04:	mov	r0, r7
   27a08:	bl	334d0 <flatcc_json_parser_integer@@Base>
   27a0c:	cmp	r0, r9
   27a10:	beq	27a44 <main@@Base+0x11d08>
   27a14:	mov	sl, r0
   27a18:	ldr	r0, [sp, #40]	; 0x28
   27a1c:	cmp	r0, #0
   27a20:	beq	27a4c <main@@Base+0x11d10>
   27a24:	ldr	r7, [sp, #32]
   27a28:	ldr	r8, [sp, #24]
   27a2c:	mov	r1, sl
   27a30:	mov	r3, #8
   27a34:	b	27a68 <main@@Base+0x11d2c>
   27a38:	mov	sl, r8
   27a3c:	ldr	r7, [sp, #32]
   27a40:	b	27a78 <main@@Base+0x11d3c>
   27a44:	mov	sl, r9
   27a48:	b	27a78 <main@@Base+0x11d3c>
   27a4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27a50:	cmp	r0, #0
   27a54:	beq	27af8 <main@@Base+0x11dbc>
   27a58:	ldr	r7, [sp, #32]
   27a5c:	ldr	r8, [sp, #24]
   27a60:	mov	r1, sl
   27a64:	mov	r3, #7
   27a68:	mov	r0, r7
   27a6c:	mov	r2, r8
   27a70:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27a74:	mov	sl, r0
   27a78:	cmp	r9, sl
   27a7c:	bne	27ac0 <main@@Base+0x11d84>
   27a80:	movw	r3, #33344	; 0x8240
   27a84:	sub	r0, fp, #44	; 0x2c
   27a88:	mov	r1, r9
   27a8c:	mov	r2, r8
   27a90:	str	r0, [sp]
   27a94:	mov	r0, r7
   27a98:	movt	r3, #5
   27a9c:	bl	236d0 <main@@Base+0xd994>
   27aa0:	cmp	r0, r9
   27aa4:	mov	sl, r0
   27aa8:	ldrne	r0, [sp, #24]
   27aac:	cmpne	sl, r0
   27ab0:	beq	28030 <main@@Base+0x122f4>
   27ab4:	ldr	r4, [fp, #-44]	; 0xffffffd4
   27ab8:	ldr	r8, [sp, #24]
   27abc:	ldr	r7, [sp, #32]
   27ac0:	cmp	r4, #0
   27ac4:	bne	27ad4 <main@@Base+0x11d98>
   27ac8:	ldrb	r0, [r7, #8]
   27acc:	tst	r0, #2
   27ad0:	beq	27df0 <main@@Base+0x120b4>
   27ad4:	ldr	r0, [r7]
   27ad8:	mov	r1, #1
   27adc:	mov	r2, #4
   27ae0:	mov	r3, #4
   27ae4:	bl	2ea78 <flatcc_builder_table_add@@Base>
   27ae8:	cmp	r0, #0
   27aec:	beq	28030 <main@@Base+0x122f4>
   27af0:	str	r4, [r0]
   27af4:	b	27df0 <main@@Base+0x120b4>
   27af8:	ldr	r4, [fp, #-40]	; 0xffffffd8
   27afc:	ldr	r8, [sp, #24]
   27b00:	str	r4, [fp, #-44]	; 0xffffffd4
   27b04:	b	27a3c <main@@Base+0x11d00>
   27b08:	ldr	r8, [sp, #24]
   27b0c:	ldr	r7, [sp, #32]
   27b10:	bne	27b20 <main@@Base+0x11de4>
   27b14:	ldrb	r0, [r1, #2]!
   27b18:	cmp	r0, #32
   27b1c:	bhi	27b34 <main@@Base+0x11df8>
   27b20:	mov	r1, r2
   27b24:	mov	r0, r7
   27b28:	mov	r2, r8
   27b2c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27b30:	mov	r1, r0
   27b34:	cmp	r9, r1
   27b38:	beq	2755c <main@@Base+0x11820>
   27b3c:	mov	r0, r7
   27b40:	mov	r2, r8
   27b44:	add	r3, sp, #36	; 0x24
   27b48:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   27b4c:	mov	sl, r0
   27b50:	ldr	r0, [sp, #36]	; 0x24
   27b54:	cmp	r0, #0
   27b58:	beq	28038 <main@@Base+0x122fc>
   27b5c:	ldr	r0, [r7]
   27b60:	mov	r1, #2
   27b64:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   27b68:	cmp	r0, #0
   27b6c:	beq	28038 <main@@Base+0x122fc>
   27b70:	ldr	r1, [sp, #36]	; 0x24
   27b74:	str	r1, [r0]
   27b78:	b	27df0 <main@@Base+0x120b4>
   27b7c:	bne	27b8c <main@@Base+0x11e50>
   27b80:	ldrb	r0, [r9, #11]!
   27b84:	cmp	r0, #32
   27b88:	bhi	27b9c <main@@Base+0x11e60>
   27b8c:	ldr	r0, [sp, #32]
   27b90:	ldr	r2, [sp, #24]
   27b94:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27b98:	mov	r9, r0
   27b9c:	ldr	r0, [sp, #24]
   27ba0:	cmp	r9, r0
   27ba4:	beq	27bdc <main@@Base+0x11ea0>
   27ba8:	ldrb	r0, [r9]
   27bac:	cmp	r0, #58	; 0x3a
   27bb0:	bne	27bdc <main@@Base+0x11ea0>
   27bb4:	ldr	r0, [sp, #24]
   27bb8:	add	r1, r9, #1
   27bbc:	sub	r0, r0, r1
   27bc0:	cmp	r0, #2
   27bc4:	blt	27d58 <main@@Base+0x1201c>
   27bc8:	ldrb	r0, [r1]
   27bcc:	cmp	r0, #32
   27bd0:	bls	27d48 <main@@Base+0x1200c>
   27bd4:	mov	r9, r1
   27bd8:	b	27d68 <main@@Base+0x1202c>
   27bdc:	ldr	r0, [sp, #32]
   27be0:	ldr	r2, [sp, #24]
   27be4:	mov	r1, r9
   27be8:	mov	r3, #4
   27bec:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27bf0:	b	27d64 <main@@Base+0x12028>
   27bf4:	ldr	r8, [sp, #24]
   27bf8:	bne	27c08 <main@@Base+0x11ecc>
   27bfc:	ldrb	r0, [r9, #2]!
   27c00:	cmp	r0, #32
   27c04:	bhi	27c18 <main@@Base+0x11edc>
   27c08:	ldr	r0, [sp, #32]
   27c0c:	mov	r2, r8
   27c10:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27c14:	mov	r9, r0
   27c18:	cmp	r7, r9
   27c1c:	beq	27dd8 <main@@Base+0x1209c>
   27c20:	mov	r4, #0
   27c24:	cmp	r9, r8
   27c28:	str	r4, [fp, #-36]	; 0xffffffdc
   27c2c:	str	r4, [fp, #-40]	; 0xffffffd8
   27c30:	str	r4, [fp, #-44]	; 0xffffffd4
   27c34:	str	r4, [sp, #40]	; 0x28
   27c38:	beq	27c84 <main@@Base+0x11f48>
   27c3c:	sub	r0, fp, #40	; 0x28
   27c40:	ldr	r2, [sp, #24]
   27c44:	mov	r1, r9
   27c48:	add	r3, sp, #40	; 0x28
   27c4c:	str	r0, [sp]
   27c50:	ldr	r0, [sp, #32]
   27c54:	bl	334d0 <flatcc_json_parser_integer@@Base>
   27c58:	cmp	r0, r9
   27c5c:	beq	27c8c <main@@Base+0x11f50>
   27c60:	mov	sl, r0
   27c64:	ldr	r0, [sp, #40]	; 0x28
   27c68:	cmp	r0, #0
   27c6c:	beq	27c94 <main@@Base+0x11f58>
   27c70:	ldr	r0, [sp, #32]
   27c74:	ldr	r2, [sp, #24]
   27c78:	mov	r1, sl
   27c7c:	mov	r3, #8
   27c80:	b	27cb0 <main@@Base+0x11f74>
   27c84:	ldr	sl, [sp, #24]
   27c88:	b	27cb8 <main@@Base+0x11f7c>
   27c8c:	mov	sl, r9
   27c90:	b	27cb8 <main@@Base+0x11f7c>
   27c94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27c98:	cmp	r0, #0
   27c9c:	beq	27d3c <main@@Base+0x12000>
   27ca0:	ldr	r0, [sp, #32]
   27ca4:	ldr	r2, [sp, #24]
   27ca8:	mov	r1, sl
   27cac:	mov	r3, #7
   27cb0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27cb4:	mov	sl, r0
   27cb8:	cmp	r9, sl
   27cbc:	bne	27cf8 <main@@Base+0x11fbc>
   27cc0:	sub	r0, fp, #44	; 0x2c
   27cc4:	ldr	r2, [sp, #24]
   27cc8:	movw	r3, #33380	; 0x8264
   27ccc:	mov	r1, r9
   27cd0:	str	r0, [sp]
   27cd4:	ldr	r0, [sp, #32]
   27cd8:	movt	r3, #5
   27cdc:	bl	236d0 <main@@Base+0xd994>
   27ce0:	cmp	r0, r9
   27ce4:	mov	sl, r0
   27ce8:	ldrne	r0, [sp, #24]
   27cec:	cmpne	sl, r0
   27cf0:	beq	28030 <main@@Base+0x122f4>
   27cf4:	ldr	r4, [fp, #-44]	; 0xffffffd4
   27cf8:	ldr	r7, [sp, #32]
   27cfc:	cmp	r4, #0
   27d00:	bne	27d10 <main@@Base+0x11fd4>
   27d04:	ldrb	r0, [r7, #8]
   27d08:	tst	r0, #2
   27d0c:	beq	27d34 <main@@Base+0x11ff8>
   27d10:	ldr	r0, [r7]
   27d14:	mov	r1, #6
   27d18:	mov	r2, #4
   27d1c:	mov	r3, #4
   27d20:	bl	2ea78 <flatcc_builder_table_add@@Base>
   27d24:	cmp	r0, #0
   27d28:	beq	28030 <main@@Base+0x122f4>
   27d2c:	ldr	r7, [sp, #32]
   27d30:	str	r4, [r0]
   27d34:	ldr	r8, [sp, #24]
   27d38:	b	27df0 <main@@Base+0x120b4>
   27d3c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   27d40:	str	r4, [fp, #-44]	; 0xffffffd4
   27d44:	b	27cb8 <main@@Base+0x11f7c>
   27d48:	bne	27d58 <main@@Base+0x1201c>
   27d4c:	ldrb	r0, [r9, #2]!
   27d50:	cmp	r0, #32
   27d54:	bhi	27d68 <main@@Base+0x1202c>
   27d58:	ldr	r0, [sp, #32]
   27d5c:	ldr	r2, [sp, #24]
   27d60:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27d64:	mov	r9, r0
   27d68:	ldr	r8, [sp, #24]
   27d6c:	cmp	r7, r9
   27d70:	beq	27dd8 <main@@Base+0x1209c>
   27d74:	mov	r4, #0
   27d78:	cmp	r9, r8
   27d7c:	str	r4, [fp, #-36]	; 0xffffffdc
   27d80:	str	r4, [fp, #-40]	; 0xffffffd8
   27d84:	str	r4, [fp, #-44]	; 0xffffffd4
   27d88:	str	r4, [sp, #40]	; 0x28
   27d8c:	beq	26b78 <main@@Base+0x10e3c>
   27d90:	sub	r0, fp, #40	; 0x28
   27d94:	ldr	r2, [sp, #24]
   27d98:	mov	r1, r9
   27d9c:	add	r3, sp, #40	; 0x28
   27da0:	str	r0, [sp]
   27da4:	ldr	r0, [sp, #32]
   27da8:	bl	334d0 <flatcc_json_parser_integer@@Base>
   27dac:	cmp	r0, r9
   27db0:	beq	26b80 <main@@Base+0x10e44>
   27db4:	mov	sl, r0
   27db8:	ldr	r0, [sp, #40]	; 0x28
   27dbc:	cmp	r0, #0
   27dc0:	beq	26b88 <main@@Base+0x10e4c>
   27dc4:	ldr	r0, [sp, #32]
   27dc8:	ldr	r2, [sp, #24]
   27dcc:	mov	r1, sl
   27dd0:	mov	r3, #8
   27dd4:	b	26ba4 <main@@Base+0x10e68>
   27dd8:	ldr	r0, [sp, #32]
   27ddc:	mov	r1, r7
   27de0:	mov	r7, r0
   27de4:	mov	r2, r8
   27de8:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   27dec:	mov	sl, r0
   27df0:	sub	r0, r8, sl
   27df4:	cmp	r0, #2
   27df8:	blt	27e24 <main@@Base+0x120e8>
   27dfc:	ldrb	r0, [sl]
   27e00:	cmp	r0, #32
   27e04:	bls	27e10 <main@@Base+0x120d4>
   27e08:	mov	r2, sl
   27e0c:	b	27e38 <main@@Base+0x120fc>
   27e10:	bne	27e24 <main@@Base+0x120e8>
   27e14:	mov	r2, sl
   27e18:	ldrb	r0, [r2, #1]!
   27e1c:	cmp	r0, #32
   27e20:	bhi	27e38 <main@@Base+0x120fc>
   27e24:	mov	r0, r7
   27e28:	mov	r1, sl
   27e2c:	mov	r2, r8
   27e30:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27e34:	mov	r2, r0
   27e38:	cmp	r2, r8
   27e3c:	beq	27ea8 <main@@Base+0x1216c>
   27e40:	ldrb	r0, [r2]
   27e44:	cmp	r0, #44	; 0x2c
   27e48:	bne	27eb0 <main@@Base+0x12174>
   27e4c:	add	r1, r2, #1
   27e50:	sub	r0, r8, r1
   27e54:	cmp	r0, #2
   27e58:	blt	27e80 <main@@Base+0x12144>
   27e5c:	ldrb	r0, [r1]
   27e60:	cmp	r0, #32
   27e64:	bls	27e70 <main@@Base+0x12134>
   27e68:	mov	r2, r1
   27e6c:	b	27e90 <main@@Base+0x12154>
   27e70:	bne	27e80 <main@@Base+0x12144>
   27e74:	ldrb	r0, [r2, #2]!
   27e78:	cmp	r0, #32
   27e7c:	bhi	27e90 <main@@Base+0x12154>
   27e80:	mov	r0, r7
   27e84:	mov	r2, r8
   27e88:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27e8c:	mov	r2, r0
   27e90:	cmp	r2, r8
   27e94:	beq	27edc <main@@Base+0x121a0>
   27e98:	ldrb	r0, [r2]
   27e9c:	cmp	r0, #125	; 0x7d
   27ea0:	bne	26c40 <main@@Base+0x10f04>
   27ea4:	b	27eb8 <main@@Base+0x1217c>
   27ea8:	mov	sl, r8
   27eac:	b	25880 <main@@Base+0xfb44>
   27eb0:	cmp	r0, #125	; 0x7d
   27eb4:	bne	27ee8 <main@@Base+0x121ac>
   27eb8:	add	r1, r2, #1
   27ebc:	sub	r0, r8, r1
   27ec0:	cmp	r0, #2
   27ec4:	blt	27f10 <main@@Base+0x121d4>
   27ec8:	ldrb	r0, [r1]
   27ecc:	cmp	r0, #32
   27ed0:	bls	27efc <main@@Base+0x121c0>
   27ed4:	mov	sl, r1
   27ed8:	b	25880 <main@@Base+0xfb44>
   27edc:	mov	r0, r7
   27ee0:	mov	r1, r8
   27ee4:	b	27ef0 <main@@Base+0x121b4>
   27ee8:	mov	r0, r7
   27eec:	mov	r1, r2
   27ef0:	mov	r2, r8
   27ef4:	mov	r3, #10
   27ef8:	b	25878 <main@@Base+0xfb3c>
   27efc:	bne	27f10 <main@@Base+0x121d4>
   27f00:	ldrb	r0, [r2, #2]!
   27f04:	cmp	r0, #32
   27f08:	mov	sl, r2
   27f0c:	bhi	25880 <main@@Base+0xfb44>
   27f10:	mov	r0, r7
   27f14:	mov	r2, r8
   27f18:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27f1c:	b	2587c <main@@Base+0xfb40>
   27f20:	ldr	r4, [sp, #28]
   27f24:	mov	sl, r8
   27f28:	b	27fa0 <main@@Base+0x12264>
   27f2c:	cmp	r0, #125	; 0x7d
   27f30:	bne	27f88 <main@@Base+0x1224c>
   27f34:	add	sl, r2, #1
   27f38:	sub	r0, r8, sl
   27f3c:	cmp	r0, #2
   27f40:	blt	27f68 <main@@Base+0x1222c>
   27f44:	ldrb	r0, [sl]
   27f48:	cmp	r0, #32
   27f4c:	bhi	27fa0 <main@@Base+0x12264>
   27f50:	bne	27f68 <main@@Base+0x1222c>
   27f54:	ldrb	r0, [r2, #2]!
   27f58:	cmp	r0, #32
   27f5c:	bls	27f68 <main@@Base+0x1222c>
   27f60:	mov	sl, r2
   27f64:	b	27fa0 <main@@Base+0x12264>
   27f68:	mov	r0, r7
   27f6c:	mov	r1, sl
   27f70:	mov	r2, r8
   27f74:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   27f78:	b	27f9c <main@@Base+0x12260>
   27f7c:	mov	r0, r7
   27f80:	mov	r1, r8
   27f84:	b	27f90 <main@@Base+0x12254>
   27f88:	mov	r0, r7
   27f8c:	mov	r1, r2
   27f90:	mov	r2, r8
   27f94:	mov	r3, #10
   27f98:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27f9c:	mov	sl, r0
   27fa0:	ldr	r0, [sp, #20]
   27fa4:	ldr	r0, [r0]
   27fa8:	cmp	r0, #0
   27fac:	beq	27fd4 <main@@Base+0x12298>
   27fb0:	mov	r0, r7
   27fb4:	mov	r1, sl
   27fb8:	mov	r2, r8
   27fbc:	mov	r3, #33	; 0x21
   27fc0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   27fc4:	mov	sl, r0
   27fc8:	mov	r0, sl
   27fcc:	sub	sp, fp, #28
   27fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fd4:	ldr	r0, [r7]
   27fd8:	bl	2e138 <flatcc_builder_end_table@@Base>
   27fdc:	cmp	r0, #0
   27fe0:	str	r0, [r4]
   27fe4:	bne	27fc8 <main@@Base+0x1228c>
   27fe8:	b	27fb0 <main@@Base+0x12274>
   27fec:	bne	27ffc <main@@Base+0x122c0>
   27ff0:	ldrb	r0, [sl, #2]!
   27ff4:	cmp	r0, #32
   27ff8:	bhi	25064 <main@@Base+0xf328>
   27ffc:	mov	r0, r7
   28000:	mov	r2, r8
   28004:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28008:	b	25060 <main@@Base+0xf324>
   2800c:	mov	r7, r1
   28010:	b	2804c <main@@Base+0x12310>
   28014:	ldr	r7, [sp, #32]
   28018:	mov	sl, r9
   2801c:	b	27fb0 <main@@Base+0x12274>
   28020:	ldr	r8, [sp, #24]
   28024:	b	2804c <main@@Base+0x12310>
   28028:	ldr	r8, [sp, #24]
   2802c:	b	28038 <main@@Base+0x122fc>
   28030:	ldr	r8, [sp, #24]
   28034:	ldr	r7, [sp, #32]
   28038:	mov	r0, r7
   2803c:	mov	r1, sl
   28040:	b	28054 <main@@Base+0x12318>
   28044:	ldr	r8, [sp, #24]
   28048:	ldr	r7, [sp, #32]
   2804c:	mov	r0, r7
   28050:	mov	r1, r9
   28054:	mov	r2, r8
   28058:	mov	r3, #33	; 0x21
   2805c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28060:	mov	sl, r0
   28064:	b	27fb0 <main@@Base+0x12274>
   28068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2806c:	add	fp, sp, #28
   28070:	sub	sp, sp, #44	; 0x2c
   28074:	mov	sl, r0
   28078:	mov	r0, #0
   2807c:	mov	r7, r1
   28080:	mov	r1, #10
   28084:	mov	r9, r3
   28088:	mov	r4, r2
   2808c:	str	r0, [r3]
   28090:	ldr	r0, [sl]
   28094:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   28098:	cmp	r0, #0
   2809c:	beq	280c4 <main@@Base+0x12388>
   280a0:	mov	r0, sl
   280a4:	mov	r1, r7
   280a8:	mov	r2, r4
   280ac:	mov	r3, #33	; 0x21
   280b0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   280b4:	mov	r7, r0
   280b8:	mov	r0, r7
   280bc:	sub	sp, fp, #28
   280c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   280c4:	sub	r0, fp, #32
   280c8:	mov	r1, r7
   280cc:	mov	r2, r4
   280d0:	mov	r3, #5
   280d4:	str	r0, [sp]
   280d8:	mov	r0, sl
   280dc:	bl	33bcc <flatcc_json_parser_prepare_unions@@Base>
   280e0:	cmp	r0, r4
   280e4:	beq	280a0 <main@@Base+0x12364>
   280e8:	cmp	r7, r4
   280ec:	beq	28120 <main@@Base+0x123e4>
   280f0:	ldrb	r0, [r7]
   280f4:	cmp	r0, #123	; 0x7b
   280f8:	bne	28120 <main@@Base+0x123e4>
   280fc:	add	r1, r7, #1
   28100:	sub	r0, r4, r1
   28104:	cmp	r0, #2
   28108:	blt	28184 <main@@Base+0x12448>
   2810c:	ldrb	r0, [r1]
   28110:	cmp	r0, #32
   28114:	bls	28174 <main@@Base+0x12438>
   28118:	mov	r7, r1
   2811c:	b	28194 <main@@Base+0x12458>
   28120:	mov	r0, sl
   28124:	mov	r1, r7
   28128:	mov	r2, r4
   2812c:	mov	r3, #21
   28130:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28134:	mov	r7, r0
   28138:	ldr	r0, [sl, #20]
   2813c:	cmp	r0, #0
   28140:	bne	280a0 <main@@Base+0x12364>
   28144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28148:	mov	r0, sl
   2814c:	mov	r1, r7
   28150:	mov	r2, r4
   28154:	bl	33c50 <flatcc_json_parser_finalize_unions@@Base>
   28158:	mov	r7, r0
   2815c:	ldr	r0, [sl]
   28160:	bl	2e138 <flatcc_builder_end_table@@Base>
   28164:	cmp	r0, #0
   28168:	str	r0, [r9]
   2816c:	bne	280b8 <main@@Base+0x1237c>
   28170:	b	280a0 <main@@Base+0x12364>
   28174:	bne	28184 <main@@Base+0x12448>
   28178:	ldrb	r0, [r7, #2]!
   2817c:	cmp	r0, #32
   28180:	bhi	28194 <main@@Base+0x12458>
   28184:	mov	r0, sl
   28188:	mov	r2, r4
   2818c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28190:	mov	r7, r0
   28194:	cmp	r7, r4
   28198:	mov	r3, r4
   2819c:	beq	281e0 <main@@Base+0x124a4>
   281a0:	ldrb	r0, [r7]
   281a4:	cmp	r0, #125	; 0x7d
   281a8:	bne	281dc <main@@Base+0x124a0>
   281ac:	add	r1, r7, #1
   281b0:	sub	r0, r4, r1
   281b4:	cmp	r0, #2
   281b8:	blt	29414 <main@@Base+0x136d8>
   281bc:	ldrb	r0, [r1]
   281c0:	cmp	r0, #32
   281c4:	bhi	293d8 <main@@Base+0x1369c>
   281c8:	bne	29414 <main@@Base+0x136d8>
   281cc:	ldrb	r0, [r7, #2]!
   281d0:	cmp	r0, #32
   281d4:	bhi	28138 <main@@Base+0x123fc>
   281d8:	b	29414 <main@@Base+0x136d8>
   281dc:	mov	r3, r7
   281e0:	movw	r0, #24436	; 0x5f74
   281e4:	str	r9, [sp, #32]
   281e8:	str	r4, [sp, #36]	; 0x24
   281ec:	movt	r0, #29299	; 0x7273
   281f0:	add	r0, r0, #65536	; 0x10000
   281f4:	add	r0, r0, #16777216	; 0x1000000
   281f8:	str	r0, [sp, #24]
   281fc:	cmp	r3, r4
   28200:	mov	r5, r4
   28204:	beq	28234 <main@@Base+0x124f8>
   28208:	ldrb	r0, [r3]
   2820c:	cmp	r0, #34	; 0x22
   28210:	bne	2821c <main@@Base+0x124e0>
   28214:	add	r5, r3, #1
   28218:	b	28234 <main@@Base+0x124f8>
   2821c:	mov	r1, r3
   28220:	mov	r0, sl
   28224:	mov	r2, r4
   28228:	mov	r3, #5
   2822c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28230:	mov	r5, r0
   28234:	sub	ip, r4, r5
   28238:	mov	r0, #8
   2823c:	cmp	ip, #8
   28240:	movcc	r0, ip
   28244:	and	r0, r0, #15
   28248:	sub	r6, r0, #1
   2824c:	cmp	r6, #7
   28250:	bhi	292e0 <main@@Base+0x135a4>
   28254:	mov	r9, sl
   28258:	add	sl, pc, #32
   2825c:	mov	r1, #0
   28260:	mov	lr, #0
   28264:	mov	r8, #0
   28268:	mov	r4, #0
   2826c:	mov	r3, #0
   28270:	mov	r7, #0
   28274:	mov	r0, #0
   28278:	mov	r2, #0
   2827c:	ldr	pc, [sl, r6, lsl #2]
   28280:	andeq	r8, r2, r4, ror #5
   28284:	ldrdeq	r8, [r2], -ip
   28288:	ldrdeq	r8, [r2], -r4
   2828c:	andeq	r8, r2, ip, asr #5
   28290:	andeq	r8, r2, r0, asr #5
   28294:			; <UNDEFINED> instruction: 0x000282b4
   28298:	andeq	r8, r2, r4, lsr #5
   2829c:	andeq	r8, r2, r0, lsr #5
   282a0:	ldrb	lr, [r5, #7]
   282a4:	ldrb	r0, [r5, #6]
   282a8:	mov	r8, r1
   282ac:	orr	r0, lr, r0, lsl #8
   282b0:	mov	r1, r0
   282b4:	ldrb	r0, [r5, #5]
   282b8:	mov	r4, r8
   282bc:	orr	r1, r1, r0, lsl #16
   282c0:	ldrb	r0, [r5, #4]
   282c4:	mov	r3, r4
   282c8:	orr	r1, r1, r0, lsl #24
   282cc:	ldrb	r0, [r5, #3]
   282d0:	orr	r7, r0, r3
   282d4:	ldrb	r0, [r5, #2]
   282d8:	orr	r0, r7, r0, lsl #8
   282dc:	ldrb	r2, [r5, #1]
   282e0:	orr	r2, r0, r2, lsl #16
   282e4:	ldrb	r0, [r5]
   282e8:	orr	r2, r2, r0, lsl #24
   282ec:	movw	r0, #29797	; 0x7465
   282f0:	movt	r0, #24931	; 0x6163
   282f4:	subs	r0, r1, r0
   282f8:	movw	r0, #24946	; 0x6172
   282fc:	movt	r0, #25448	; 0x6368
   28300:	sbcs	r0, r2, r0
   28304:	bcs	28470 <main@@Base+0x12734>
   28308:	movw	r0, #29817	; 0x7479
   2830c:	movw	r3, #28005	; 0x6d65
   28310:	ldr	r4, [sp, #36]	; 0x24
   28314:	mov	sl, r9
   28318:	movt	r0, #28511	; 0x6f5f
   2831c:	movt	r3, #25441	; 0x6361
   28320:	eor	r0, r1, r0
   28324:	eor	r3, r2, r3
   28328:	orrs	r0, r0, r3
   2832c:	beq	287a8 <main@@Base+0x12a6c>
   28330:	movw	r0, #28265	; 0x6e69
   28334:	movw	r7, #29793	; 0x7461
   28338:	ldr	r9, [sp, #32]
   2833c:	movt	r0, #26479	; 0x676f
   28340:	movt	r7, #24942	; 0x616e
   28344:	eor	r0, r1, r0
   28348:	eor	r2, r2, r7
   2834c:	orrs	r0, r0, r2
   28350:	bne	28830 <main@@Base+0x12af4>
   28354:	add	r8, r5, #8
   28358:	mov	r0, #8
   2835c:	sub	ip, r4, r8
   28360:	cmp	ip, #8
   28364:	movcc	r0, ip
   28368:	and	r0, r0, #15
   2836c:	sub	r6, r0, #1
   28370:	cmp	r6, #7
   28374:	bhi	29128 <main@@Base+0x133ec>
   28378:	str	r8, [sp, #28]
   2837c:	add	r2, pc, #32
   28380:	mov	r1, r5
   28384:	mov	r4, #0
   28388:	mov	lr, #0
   2838c:	mov	r8, #0
   28390:	mov	r3, #0
   28394:	mov	r7, #0
   28398:	mov	r5, #0
   2839c:	mov	r0, #0
   283a0:	ldr	pc, [r2, r6, lsl #2]
   283a4:	andeq	r8, r2, r0, lsl #8
   283a8:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   283ac:	strdeq	r8, [r2], -r0
   283b0:	andeq	r8, r2, r8, ror #7
   283b4:	ldrdeq	r8, [r2], -ip
   283b8:	andeq	r8, r2, ip, asr #7
   283bc:	andeq	r8, r2, r4, asr #7
   283c0:	andeq	r8, r2, r4, asr #7
   283c4:	ldrb	r0, [r1, #14]
   283c8:	lsl	lr, r0, #8
   283cc:	ldrb	r0, [r1, #13]
   283d0:	mov	r8, r4
   283d4:	orr	r0, lr, r0, lsl #16
   283d8:	mov	r4, r0
   283dc:	ldrb	r0, [r1, #12]
   283e0:	mov	r3, r8
   283e4:	orr	r4, r4, r0, lsl #24
   283e8:	ldrb	r0, [r1, #11]
   283ec:	orr	r7, r0, r3
   283f0:	ldrb	r0, [r1, #10]
   283f4:	orr	r5, r7, r0, lsl #8
   283f8:	ldrb	r0, [r1, #9]
   283fc:	orr	r0, r5, r0, lsl #16
   28400:	ldr	r8, [sp, #28]
   28404:	mov	r7, r1
   28408:	movw	r3, #25856	; 0x6500
   2840c:	bic	r2, r4, #255	; 0xff
   28410:	movt	r3, #31088	; 0x7970
   28414:	eor	r2, r2, r3
   28418:	ldrb	r1, [r8]
   2841c:	orr	r1, r0, r1, lsl #24
   28420:	ldr	r0, [sp, #24]
   28424:	eor	r0, r1, r0
   28428:	orrs	r0, r2, r0
   2842c:	bne	28984 <main@@Base+0x12c48>
   28430:	ldr	r4, [sp, #36]	; 0x24
   28434:	cmp	ip, #8
   28438:	blt	29128 <main@@Base+0x133ec>
   2843c:	ldrb	r0, [r7, #15]
   28440:	mov	r2, r7
   28444:	cmp	r0, #34	; 0x22
   28448:	bne	29128 <main@@Base+0x133ec>
   2844c:	add	r1, r2, #16
   28450:	sub	r0, r4, r1
   28454:	cmp	r0, #2
   28458:	blt	28b98 <main@@Base+0x12e5c>
   2845c:	ldrb	r0, [r1]
   28460:	cmp	r0, #32
   28464:	bls	28b88 <main@@Base+0x12e4c>
   28468:	mov	r2, r1
   2846c:	b	28ba8 <main@@Base+0x12e6c>
   28470:	movw	r0, #26720	; 0x6860
   28474:	ldr	r4, [sp, #36]	; 0x24
   28478:	mov	sl, r9
   2847c:	movt	r0, #24419	; 0x5f63
   28480:	subs	r0, r0, r1
   28484:	movw	r0, #26990	; 0x696e
   28488:	movt	r0, #28001	; 0x6d61
   2848c:	sbcs	r0, r0, r2
   28490:	bcc	285d8 <main@@Base+0x1289c>
   28494:	movw	r0, #29797	; 0x7465
   28498:	movt	r0, #24931	; 0x6163
   2849c:	eor	r0, r1, r0
   284a0:	movw	r1, #24946	; 0x6172
   284a4:	movt	r1, #25448	; 0x6368
   284a8:	eor	r1, r2, r1
   284ac:	orrs	r0, r0, r1
   284b0:	bne	28790 <main@@Base+0x12a54>
   284b4:	add	r7, r5, #8
   284b8:	mov	r0, #8
   284bc:	ldr	r9, [sp, #32]
   284c0:	sub	ip, r4, r7
   284c4:	cmp	ip, #8
   284c8:	movcc	r0, ip
   284cc:	and	r0, r0, #15
   284d0:	sub	r6, r0, #1
   284d4:	cmp	r6, #7
   284d8:	bhi	2921c <main@@Base+0x134e0>
   284dc:	str	r7, [sp, #28]
   284e0:	add	r2, pc, #32
   284e4:	mov	r1, r5
   284e8:	mov	r8, #0
   284ec:	mov	lr, #0
   284f0:	mov	r4, #0
   284f4:	mov	r3, #0
   284f8:	mov	r7, #0
   284fc:	mov	r5, #0
   28500:	mov	r0, #0
   28504:	ldr	pc, [r2, r6, lsl #2]
   28508:	andeq	r8, r2, r4, ror #10
   2850c:	andeq	r8, r2, ip, asr r5
   28510:	andeq	r8, r2, r4, asr r5
   28514:	andeq	r8, r2, ip, asr #10
   28518:	andeq	r8, r2, r0, asr #10
   2851c:	andeq	r8, r2, r0, lsr r5
   28520:	andeq	r8, r2, r8, lsr #10
   28524:	andeq	r8, r2, r8, lsr #10
   28528:	ldrb	r0, [r1, #14]
   2852c:	lsl	lr, r0, #8
   28530:	ldrb	r0, [r1, #13]
   28534:	mov	r4, r8
   28538:	orr	r0, lr, r0, lsl #16
   2853c:	mov	r8, r0
   28540:	ldrb	r0, [r1, #12]
   28544:	mov	r3, r4
   28548:	orr	r8, r8, r0, lsl #24
   2854c:	ldrb	r0, [r1, #11]
   28550:	orr	r7, r0, r3
   28554:	ldrb	r0, [r1, #10]
   28558:	orr	r5, r7, r0, lsl #8
   2855c:	ldrb	r0, [r1, #9]
   28560:	orr	r0, r5, r0, lsl #16
   28564:	ldr	r7, [sp, #28]
   28568:	movw	r2, #25856	; 0x6500
   2856c:	mov	r3, r1
   28570:	bic	r1, r8, #255	; 0xff
   28574:	movt	r2, #31088	; 0x7970
   28578:	eor	r1, r1, r2
   2857c:	ldrb	r2, [r7]
   28580:	orr	r0, r0, r2, lsl #24
   28584:	movw	r2, #24436	; 0x5f74
   28588:	movt	r2, #29299	; 0x7273
   2858c:	eor	r2, r0, r2
   28590:	orrs	r1, r1, r2
   28594:	bne	289d8 <main@@Base+0x12c9c>
   28598:	ldr	r4, [sp, #36]	; 0x24
   2859c:	cmp	ip, #8
   285a0:	blt	2921c <main@@Base+0x134e0>
   285a4:	ldrb	r0, [r3, #15]
   285a8:	mov	r2, r3
   285ac:	cmp	r0, #34	; 0x22
   285b0:	bne	2921c <main@@Base+0x134e0>
   285b4:	add	r1, r2, #16
   285b8:	sub	r0, r4, r1
   285bc:	cmp	r0, #2
   285c0:	blt	28c78 <main@@Base+0x12f3c>
   285c4:	ldrb	r0, [r1]
   285c8:	cmp	r0, #32
   285cc:	bls	28c68 <main@@Base+0x12f2c>
   285d0:	mov	r2, r1
   285d4:	b	28c88 <main@@Base+0x12f4c>
   285d8:	movw	r0, #26979	; 0x6963
   285dc:	movw	r3, #25701	; 0x6465
   285e0:	movt	r0, #24427	; 0x5f6b
   285e4:	movt	r3, #29545	; 0x7369
   285e8:	eor	r0, r1, r0
   285ec:	eor	r3, r2, r3
   285f0:	orrs	r0, r0, r3
   285f4:	beq	28880 <main@@Base+0x12b44>
   285f8:	movw	r0, #26721	; 0x6861
   285fc:	movt	r0, #24419	; 0x5f63
   28600:	eor	r0, r1, r0
   28604:	movw	r1, #26990	; 0x696e
   28608:	movt	r1, #28001	; 0x6d61
   2860c:	eor	r1, r2, r1
   28610:	orrs	r0, r0, r1
   28614:	bne	28790 <main@@Base+0x12a54>
   28618:	add	r7, r5, #8
   2861c:	mov	r0, #8
   28620:	sub	lr, r4, r7
   28624:	cmp	lr, #8
   28628:	movcc	r0, lr
   2862c:	and	r0, r0, #15
   28630:	sub	r6, r0, #1
   28634:	cmp	r6, #7
   28638:	bhi	28aec <main@@Base+0x12db0>
   2863c:	str	r7, [sp, #28]
   28640:	add	r4, pc, #32
   28644:	mov	r1, #0
   28648:	mov	ip, #0
   2864c:	mov	sl, #0
   28650:	mov	r8, #0
   28654:	mov	r3, #0
   28658:	mov	r7, #0
   2865c:	mov	r2, #0
   28660:	mov	r0, #0
   28664:	ldr	pc, [r4, r6, lsl #2]
   28668:	andeq	r8, r2, ip, asr #13
   2866c:	andeq	r8, r2, r4, asr #13
   28670:			; <UNDEFINED> instruction: 0x000286bc
   28674:			; <UNDEFINED> instruction: 0x000286b4
   28678:	andeq	r8, r2, r8, lsr #13
   2867c:	muleq	r2, ip, r6
   28680:	andeq	r8, r2, ip, lsl #13
   28684:	andeq	r8, r2, r8, lsl #13
   28688:	ldrb	ip, [r5, #15]
   2868c:	ldrb	r0, [r5, #14]
   28690:	mov	sl, r1
   28694:	orr	r0, ip, r0, lsl #8
   28698:	mov	r1, r0
   2869c:	ldrb	r0, [r5, #13]
   286a0:	mov	r8, sl
   286a4:	orr	r1, r1, r0, lsl #16
   286a8:	ldrb	r0, [r5, #12]
   286ac:	mov	r3, r8
   286b0:	orr	r1, r1, r0, lsl #24
   286b4:	ldrb	r0, [r5, #11]
   286b8:	orr	r7, r0, r3
   286bc:	ldrb	r0, [r5, #10]
   286c0:	orr	r2, r7, r0, lsl #8
   286c4:	ldrb	r0, [r5, #9]
   286c8:	orr	r0, r2, r0, lsl #16
   286cc:	ldr	r7, [sp, #28]
   286d0:	movw	r2, #24436	; 0x5f74
   286d4:	movt	r2, #25970	; 0x6572
   286d8:	eor	r2, r1, r2
   286dc:	ldrb	r3, [r7]
   286e0:	orr	r0, r0, r3, lsl #24
   286e4:	movw	r3, #25460	; 0x6374
   286e8:	movt	r3, #29281	; 0x7261
   286ec:	eor	r3, r0, r3
   286f0:	orrs	r2, r2, r3
   286f4:	bne	28a2c <main@@Base+0x12cf0>
   286f8:	ldr	r4, [sp, #36]	; 0x24
   286fc:	mov	r3, r5
   28700:	add	r5, r5, #16
   28704:	mov	r1, #8
   28708:	mov	sl, r9
   2870c:	sub	r0, r4, r5
   28710:	cmp	r0, #8
   28714:	movcc	r1, r0
   28718:	and	r2, r1, #15
   2871c:	sub	r1, r2, #3
   28720:	cmp	r1, #6
   28724:	bcs	28af8 <main@@Base+0x12dbc>
   28728:	ldrb	r1, [r3, #18]
   2872c:	ldr	r9, [sp, #32]
   28730:	lsl	r1, r1, #8
   28734:	ldrb	r2, [r3, #17]
   28738:	orr	r1, r1, r2, lsl #16
   2873c:	ldrb	r2, [r5]
   28740:	bic	r1, r1, #255	; 0xff
   28744:	orr	r1, r1, r2, lsl #24
   28748:	movw	r2, #25856	; 0x6500
   2874c:	movt	r2, #31088	; 0x7970
   28750:	teq	r1, r2
   28754:	bne	292e0 <main@@Base+0x135a4>
   28758:	cmp	r0, #4
   2875c:	blt	292e0 <main@@Base+0x135a4>
   28760:	ldrb	r0, [r3, #19]
   28764:	cmp	r0, #34	; 0x22
   28768:	bne	292e0 <main@@Base+0x135a4>
   2876c:	add	r1, r3, #20
   28770:	sub	r0, r4, r1
   28774:	cmp	r0, #2
   28778:	blt	29088 <main@@Base+0x1334c>
   2877c:	ldrb	r0, [r1]
   28780:	cmp	r0, #32
   28784:	bls	29078 <main@@Base+0x1333c>
   28788:	mov	r3, r1
   2878c:	b	29098 <main@@Base+0x1335c>
   28790:	mov	r0, sl
   28794:	mov	r1, r5
   28798:	mov	r2, r4
   2879c:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   287a0:	ldr	r9, [sp, #32]
   287a4:	b	292f0 <main@@Base+0x135b4>
   287a8:	add	r6, r5, #8
   287ac:	mov	r1, #8
   287b0:	ldr	r9, [sp, #32]
   287b4:	sub	r0, r4, r6
   287b8:	cmp	r0, #8
   287bc:	movcc	r1, r0
   287c0:	and	r2, r1, #15
   287c4:	sub	r1, r2, #2
   287c8:	cmp	r1, #7
   287cc:	bcs	28a94 <main@@Base+0x12d58>
   287d0:	ldrb	r1, [r5, #9]
   287d4:	lsl	r2, r1, #16
   287d8:	mov	r1, #0
   287dc:	ldrb	r3, [r6]
   287e0:	orr	r2, r2, r3, lsl #24
   287e4:	movw	r3, #0
   287e8:	movt	r3, #28773	; 0x7065
   287ec:	eor	r2, r2, r3
   287f0:	orrs	r1, r1, r2
   287f4:	bne	2926c <main@@Base+0x13530>
   287f8:	cmp	r0, #3
   287fc:	blt	2926c <main@@Base+0x13530>
   28800:	ldrb	r0, [r5, #10]
   28804:	cmp	r0, #34	; 0x22
   28808:	bne	2926c <main@@Base+0x13530>
   2880c:	add	r1, r5, #11
   28810:	sub	r0, r4, r1
   28814:	cmp	r0, #2
   28818:	blt	28c08 <main@@Base+0x12ecc>
   2881c:	ldrb	r0, [r1]
   28820:	cmp	r0, #32
   28824:	bls	28bf8 <main@@Base+0x12ebc>
   28828:	mov	r5, r1
   2882c:	b	28c18 <main@@Base+0x12edc>
   28830:	and	r0, r1, #-16777216	; 0xff000000
   28834:	eor	r0, r0, #1862270976	; 0x6f000000
   28838:	orrs	r0, r0, r3
   2883c:	bne	292e0 <main@@Base+0x135a4>
   28840:	cmp	ip, #6
   28844:	mov	r1, r5
   28848:	blt	28e4c <main@@Base+0x13110>
   2884c:	ldrb	r0, [r5, #5]
   28850:	mov	r1, r5
   28854:	cmp	r0, #34	; 0x22
   28858:	bne	28e4c <main@@Base+0x13110>
   2885c:	add	r2, r5, #6
   28860:	sub	r0, r4, r2
   28864:	cmp	r0, #2
   28868:	blt	28b28 <main@@Base+0x12dec>
   2886c:	ldrb	r0, [r2]
   28870:	cmp	r0, #32
   28874:	bls	28b14 <main@@Base+0x12dd8>
   28878:	mov	r1, r2
   2887c:	b	28b3c <main@@Base+0x12e00>
   28880:	add	r6, r5, #8
   28884:	mov	r1, #8
   28888:	ldr	r9, [sp, #32]
   2888c:	sub	lr, r4, r6
   28890:	cmp	lr, #8
   28894:	movcc	r1, lr
   28898:	and	r1, r1, #15
   2889c:	sub	r3, r1, #1
   288a0:	cmp	r3, #7
   288a4:	bhi	2926c <main@@Base+0x13530>
   288a8:	str	r6, [sp, #28]
   288ac:	add	r6, pc, #24
   288b0:	mov	ip, #0
   288b4:	mov	r8, #0
   288b8:	mov	r1, #0
   288bc:	mov	r7, #0
   288c0:	mov	r0, #0
   288c4:	mov	r2, #0
   288c8:	ldr	pc, [r6, r3, lsl #2]
   288cc:	andeq	r8, r2, ip, lsl r9
   288d0:	andeq	r8, r2, r4, lsl r9
   288d4:	andeq	r8, r2, ip, lsl #18
   288d8:	andeq	r8, r2, r4, lsl #18
   288dc:	strdeq	r8, [r2], -r4
   288e0:	andeq	r8, r2, ip, ror #17
   288e4:	andeq	r8, r2, ip, ror #17
   288e8:	andeq	r8, r2, ip, ror #17
   288ec:	ldrb	r1, [r5, #13]
   288f0:	lsl	r8, r1, #16
   288f4:	ldrb	r1, [r5, #12]
   288f8:	orr	r2, r8, r1, lsl #24
   288fc:	mov	r1, ip
   28900:	mov	ip, r2
   28904:	ldrb	r2, [r5, #11]
   28908:	orr	r7, r2, r1
   2890c:	ldrb	r1, [r5, #10]
   28910:	orr	r0, r7, r1, lsl #8
   28914:	ldrb	r1, [r5, #9]
   28918:	orr	r2, r0, r1, lsl #16
   2891c:	ldr	r6, [sp, #28]
   28920:	movw	r0, #27487	; 0x6b5f
   28924:	lsr	r3, ip, #16
   28928:	ldrb	r1, [r6]
   2892c:	orr	r1, r2, r1, lsl #24
   28930:	eor	r2, r0, r1, lsr #16
   28934:	movw	r0, #28773	; 0x7065
   28938:	orr	r3, r3, r1, lsl #16
   2893c:	movt	r0, #29817	; 0x7479
   28940:	eor	r3, r3, r0
   28944:	orrs	r2, r3, r2
   28948:	bne	28aa8 <main@@Base+0x12d6c>
   2894c:	cmp	lr, #7
   28950:	blt	2926c <main@@Base+0x13530>
   28954:	ldrb	r0, [r5, #14]
   28958:	cmp	r0, #34	; 0x22
   2895c:	bne	2926c <main@@Base+0x13530>
   28960:	add	r1, r5, #15
   28964:	sub	r0, r4, r1
   28968:	cmp	r0, #2
   2896c:	blt	28ce8 <main@@Base+0x12fac>
   28970:	ldrb	r0, [r1]
   28974:	cmp	r0, #32
   28978:	bls	28cd8 <main@@Base+0x12f9c>
   2897c:	mov	r5, r1
   28980:	b	28cf8 <main@@Base+0x12fbc>
   28984:	ldr	r4, [sp, #36]	; 0x24
   28988:	movw	r0, #0
   2898c:	bfc	r1, #0, #16
   28990:	movt	r0, #29556	; 0x7374
   28994:	teq	r1, r0
   28998:	bne	29128 <main@@Base+0x133ec>
   2899c:	cmp	ip, #3
   289a0:	blt	29128 <main@@Base+0x133ec>
   289a4:	ldrb	r0, [r7, #10]
   289a8:	mov	r2, r7
   289ac:	cmp	r0, #34	; 0x22
   289b0:	bne	29128 <main@@Base+0x133ec>
   289b4:	add	r1, r2, #11
   289b8:	sub	r0, r4, r1
   289bc:	cmp	r0, #2
   289c0:	blt	28d58 <main@@Base+0x1301c>
   289c4:	ldrb	r0, [r1]
   289c8:	cmp	r0, #32
   289cc:	bls	28d48 <main@@Base+0x1300c>
   289d0:	mov	r2, r1
   289d4:	b	28d68 <main@@Base+0x1302c>
   289d8:	ldr	r4, [sp, #36]	; 0x24
   289dc:	movw	r1, #0
   289e0:	bfc	r0, #0, #16
   289e4:	movt	r1, #29299	; 0x7273
   289e8:	teq	r0, r1
   289ec:	bne	2921c <main@@Base+0x134e0>
   289f0:	cmp	ip, #3
   289f4:	blt	2921c <main@@Base+0x134e0>
   289f8:	ldrb	r0, [r3, #10]
   289fc:	mov	r2, r3
   28a00:	cmp	r0, #34	; 0x22
   28a04:	bne	2921c <main@@Base+0x134e0>
   28a08:	add	r1, r2, #11
   28a0c:	sub	r0, r4, r1
   28a10:	cmp	r0, #2
   28a14:	blt	28dc8 <main@@Base+0x1308c>
   28a18:	ldrb	r0, [r1]
   28a1c:	cmp	r0, #32
   28a20:	bls	28db8 <main@@Base+0x1307c>
   28a24:	mov	r2, r1
   28a28:	b	28dd8 <main@@Base+0x1309c>
   28a2c:	movw	r2, #29281	; 0x7261
   28a30:	lsr	r1, r1, #16
   28a34:	ldr	r4, [sp, #36]	; 0x24
   28a38:	mov	sl, r9
   28a3c:	eor	r2, r2, r0, lsr #16
   28a40:	orr	r0, r1, r0, lsl #16
   28a44:	movw	r1, #25970	; 0x6572
   28a48:	movt	r1, #25460	; 0x6374
   28a4c:	eor	r0, r0, r1
   28a50:	orrs	r0, r0, r2
   28a54:	bne	28aec <main@@Base+0x12db0>
   28a58:	ldr	r9, [sp, #32]
   28a5c:	cmp	lr, #7
   28a60:	blt	2921c <main@@Base+0x134e0>
   28a64:	ldrb	r0, [r5, #14]
   28a68:	cmp	r0, #34	; 0x22
   28a6c:	bne	2921c <main@@Base+0x134e0>
   28a70:	add	r1, r5, #15
   28a74:	sub	r0, r4, r1
   28a78:	cmp	r0, #2
   28a7c:	blt	28f34 <main@@Base+0x131f8>
   28a80:	ldrb	r0, [r1]
   28a84:	cmp	r0, #32
   28a88:	bls	28f24 <main@@Base+0x131e8>
   28a8c:	mov	r5, r1
   28a90:	b	28f44 <main@@Base+0x13208>
   28a94:	cmp	r2, #1
   28a98:	mov	r1, #0
   28a9c:	mov	r2, #0
   28aa0:	beq	287dc <main@@Base+0x12aa0>
   28aa4:	b	2926c <main@@Base+0x13530>
   28aa8:	and	r1, r1, #-16777216	; 0xff000000
   28aac:	teq	r1, #1795162112	; 0x6b000000
   28ab0:	bne	2926c <main@@Base+0x13530>
   28ab4:	cmp	lr, #2
   28ab8:	blt	2926c <main@@Base+0x13530>
   28abc:	ldrb	r0, [r5, #9]
   28ac0:	cmp	r0, #34	; 0x22
   28ac4:	bne	2926c <main@@Base+0x13530>
   28ac8:	add	r1, r5, #10
   28acc:	sub	r0, r4, r1
   28ad0:	cmp	r0, #2
   28ad4:	blt	28fa4 <main@@Base+0x13268>
   28ad8:	ldrb	r0, [r1]
   28adc:	cmp	r0, #32
   28ae0:	bls	28f94 <main@@Base+0x13258>
   28ae4:	mov	r5, r1
   28ae8:	b	28fb4 <main@@Base+0x13278>
   28aec:	mov	r0, sl
   28af0:	mov	r1, r7
   28af4:	b	28798 <main@@Base+0x12a5c>
   28af8:	ldr	r9, [sp, #32]
   28afc:	mov	r1, #0
   28b00:	cmp	r2, #1
   28b04:	beq	2873c <main@@Base+0x12a00>
   28b08:	cmp	r2, #2
   28b0c:	beq	28734 <main@@Base+0x129f8>
   28b10:	b	292e0 <main@@Base+0x135a4>
   28b14:	bne	28b28 <main@@Base+0x12dec>
   28b18:	mov	r1, r5
   28b1c:	ldrb	r0, [r1, #7]!
   28b20:	cmp	r0, #32
   28b24:	bhi	28b3c <main@@Base+0x12e00>
   28b28:	mov	r1, r2
   28b2c:	mov	r0, sl
   28b30:	mov	r2, r4
   28b34:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28b38:	mov	r1, r0
   28b3c:	cmp	r1, r4
   28b40:	beq	28b74 <main@@Base+0x12e38>
   28b44:	ldrb	r0, [r1]
   28b48:	cmp	r0, #58	; 0x3a
   28b4c:	bne	28b74 <main@@Base+0x12e38>
   28b50:	add	r2, r1, #1
   28b54:	sub	r0, r4, r2
   28b58:	cmp	r0, #2
   28b5c:	blt	28e38 <main@@Base+0x130fc>
   28b60:	ldrb	r0, [r2]
   28b64:	cmp	r0, #32
   28b68:	bls	28e28 <main@@Base+0x130ec>
   28b6c:	mov	r1, r2
   28b70:	b	28e4c <main@@Base+0x13110>
   28b74:	mov	r0, sl
   28b78:	mov	r2, r4
   28b7c:	mov	r3, #4
   28b80:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28b84:	b	28e48 <main@@Base+0x1310c>
   28b88:	bne	28b98 <main@@Base+0x12e5c>
   28b8c:	ldrb	r0, [r2, #17]!
   28b90:	cmp	r0, #32
   28b94:	bhi	28ba8 <main@@Base+0x12e6c>
   28b98:	mov	r0, sl
   28b9c:	mov	r2, r4
   28ba0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28ba4:	mov	r2, r0
   28ba8:	cmp	r2, r4
   28bac:	beq	28be0 <main@@Base+0x12ea4>
   28bb0:	ldrb	r0, [r2]
   28bb4:	cmp	r0, #58	; 0x3a
   28bb8:	bne	28be0 <main@@Base+0x12ea4>
   28bbc:	add	r1, r2, #1
   28bc0:	sub	r0, r4, r1
   28bc4:	cmp	r0, #2
   28bc8:	blt	28e94 <main@@Base+0x13158>
   28bcc:	ldrb	r0, [r1]
   28bd0:	cmp	r0, #32
   28bd4:	bls	28e84 <main@@Base+0x13148>
   28bd8:	mov	r2, r1
   28bdc:	b	28ea4 <main@@Base+0x13168>
   28be0:	mov	r1, r2
   28be4:	mov	r0, sl
   28be8:	mov	r2, r4
   28bec:	mov	r3, #4
   28bf0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28bf4:	b	28ea0 <main@@Base+0x13164>
   28bf8:	bne	28c08 <main@@Base+0x12ecc>
   28bfc:	ldrb	r0, [r5, #12]!
   28c00:	cmp	r0, #32
   28c04:	bhi	28c18 <main@@Base+0x12edc>
   28c08:	mov	r0, sl
   28c0c:	mov	r2, r4
   28c10:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28c14:	mov	r5, r0
   28c18:	cmp	r5, r4
   28c1c:	beq	28c50 <main@@Base+0x12f14>
   28c20:	ldrb	r0, [r5]
   28c24:	cmp	r0, #58	; 0x3a
   28c28:	bne	28c50 <main@@Base+0x12f14>
   28c2c:	add	r1, r5, #1
   28c30:	sub	r0, r4, r1
   28c34:	cmp	r0, #2
   28c38:	blt	28ee4 <main@@Base+0x131a8>
   28c3c:	ldrb	r0, [r1]
   28c40:	cmp	r0, #32
   28c44:	bls	28ed4 <main@@Base+0x13198>
   28c48:	mov	r5, r1
   28c4c:	b	28ef4 <main@@Base+0x131b8>
   28c50:	mov	r0, sl
   28c54:	mov	r1, r5
   28c58:	mov	r2, r4
   28c5c:	mov	r3, #4
   28c60:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28c64:	b	28ef0 <main@@Base+0x131b4>
   28c68:	bne	28c78 <main@@Base+0x12f3c>
   28c6c:	ldrb	r0, [r2, #17]!
   28c70:	cmp	r0, #32
   28c74:	bhi	28c88 <main@@Base+0x12f4c>
   28c78:	mov	r0, sl
   28c7c:	mov	r2, r4
   28c80:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28c84:	mov	r2, r0
   28c88:	cmp	r2, r4
   28c8c:	beq	28cc0 <main@@Base+0x12f84>
   28c90:	ldrb	r0, [r2]
   28c94:	cmp	r0, #58	; 0x3a
   28c98:	bne	28cc0 <main@@Base+0x12f84>
   28c9c:	add	r1, r2, #1
   28ca0:	sub	r0, r4, r1
   28ca4:	cmp	r0, #2
   28ca8:	blt	29014 <main@@Base+0x132d8>
   28cac:	ldrb	r0, [r1]
   28cb0:	cmp	r0, #32
   28cb4:	bls	29004 <main@@Base+0x132c8>
   28cb8:	mov	r2, r1
   28cbc:	b	29024 <main@@Base+0x132e8>
   28cc0:	mov	r1, r2
   28cc4:	mov	r0, sl
   28cc8:	mov	r2, r4
   28ccc:	mov	r3, #4
   28cd0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28cd4:	b	29020 <main@@Base+0x132e4>
   28cd8:	bne	28ce8 <main@@Base+0x12fac>
   28cdc:	ldrb	r0, [r5, #16]!
   28ce0:	cmp	r0, #32
   28ce4:	bhi	28cf8 <main@@Base+0x12fbc>
   28ce8:	mov	r0, sl
   28cec:	mov	r2, r4
   28cf0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28cf4:	mov	r5, r0
   28cf8:	cmp	r5, r4
   28cfc:	beq	28d30 <main@@Base+0x12ff4>
   28d00:	ldrb	r0, [r5]
   28d04:	cmp	r0, #58	; 0x3a
   28d08:	bne	28d30 <main@@Base+0x12ff4>
   28d0c:	add	r1, r5, #1
   28d10:	sub	r0, r4, r1
   28d14:	cmp	r0, #2
   28d18:	blt	29144 <main@@Base+0x13408>
   28d1c:	ldrb	r0, [r1]
   28d20:	cmp	r0, #32
   28d24:	bls	29134 <main@@Base+0x133f8>
   28d28:	mov	r5, r1
   28d2c:	b	29154 <main@@Base+0x13418>
   28d30:	mov	r0, sl
   28d34:	mov	r1, r5
   28d38:	mov	r2, r4
   28d3c:	mov	r3, #4
   28d40:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28d44:	b	29150 <main@@Base+0x13414>
   28d48:	bne	28d58 <main@@Base+0x1301c>
   28d4c:	ldrb	r0, [r2, #12]!
   28d50:	cmp	r0, #32
   28d54:	bhi	28d68 <main@@Base+0x1302c>
   28d58:	mov	r0, sl
   28d5c:	mov	r2, r4
   28d60:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28d64:	mov	r2, r0
   28d68:	cmp	r2, r4
   28d6c:	beq	28da0 <main@@Base+0x13064>
   28d70:	ldrb	r0, [r2]
   28d74:	cmp	r0, #58	; 0x3a
   28d78:	bne	28da0 <main@@Base+0x13064>
   28d7c:	add	r1, r2, #1
   28d80:	sub	r0, r4, r1
   28d84:	cmp	r0, #2
   28d88:	blt	290f8 <main@@Base+0x133bc>
   28d8c:	ldrb	r0, [r1]
   28d90:	cmp	r0, #32
   28d94:	bls	290e8 <main@@Base+0x133ac>
   28d98:	mov	r2, r1
   28d9c:	b	29108 <main@@Base+0x133cc>
   28da0:	mov	r1, r2
   28da4:	mov	r0, sl
   28da8:	mov	r2, r4
   28dac:	mov	r3, #4
   28db0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28db4:	b	29104 <main@@Base+0x133c8>
   28db8:	bne	28dc8 <main@@Base+0x1308c>
   28dbc:	ldrb	r0, [r2, #12]!
   28dc0:	cmp	r0, #32
   28dc4:	bhi	28dd8 <main@@Base+0x1309c>
   28dc8:	mov	r0, sl
   28dcc:	mov	r2, r4
   28dd0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28dd4:	mov	r2, r0
   28dd8:	cmp	r2, r4
   28ddc:	beq	28e10 <main@@Base+0x130d4>
   28de0:	ldrb	r0, [r2]
   28de4:	cmp	r0, #58	; 0x3a
   28de8:	bne	28e10 <main@@Base+0x130d4>
   28dec:	add	r1, r2, #1
   28df0:	sub	r0, r4, r1
   28df4:	cmp	r0, #2
   28df8:	blt	29194 <main@@Base+0x13458>
   28dfc:	ldrb	r0, [r1]
   28e00:	cmp	r0, #32
   28e04:	bls	29184 <main@@Base+0x13448>
   28e08:	mov	r2, r1
   28e0c:	b	291a4 <main@@Base+0x13468>
   28e10:	mov	r1, r2
   28e14:	mov	r0, sl
   28e18:	mov	r2, r4
   28e1c:	mov	r3, #4
   28e20:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28e24:	b	291a0 <main@@Base+0x13464>
   28e28:	bne	28e38 <main@@Base+0x130fc>
   28e2c:	ldrb	r0, [r1, #2]!
   28e30:	cmp	r0, #32
   28e34:	bhi	28e4c <main@@Base+0x13110>
   28e38:	mov	r1, r2
   28e3c:	mov	r0, sl
   28e40:	mov	r2, r4
   28e44:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28e48:	mov	r1, r0
   28e4c:	cmp	r5, r1
   28e50:	beq	292e0 <main@@Base+0x135a4>
   28e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28e58:	mov	r2, #7
   28e5c:	mov	r3, #3
   28e60:	str	r2, [sp]
   28e64:	mov	r2, r4
   28e68:	str	r0, [sp, #4]
   28e6c:	movw	r0, #38256	; 0x9570
   28e70:	movt	r0, #2
   28e74:	str	r0, [sp, #8]
   28e78:	mov	r0, sl
   28e7c:	bl	33cc4 <flatcc_json_parser_union@@Base>
   28e80:	b	292f0 <main@@Base+0x135b4>
   28e84:	bne	28e94 <main@@Base+0x13158>
   28e88:	ldrb	r0, [r2, #2]!
   28e8c:	cmp	r0, #32
   28e90:	bhi	28ea4 <main@@Base+0x13168>
   28e94:	mov	r0, sl
   28e98:	mov	r2, r4
   28e9c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28ea0:	mov	r2, r0
   28ea4:	cmp	r8, r2
   28ea8:	beq	29128 <main@@Base+0x133ec>
   28eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28eb0:	mov	r1, #3
   28eb4:	mov	r3, #1
   28eb8:	str	r1, [sp]
   28ebc:	mov	r1, r2
   28ec0:	mov	r2, r4
   28ec4:	str	r0, [sp, #4]
   28ec8:	movw	r0, #33440	; 0x82a0
   28ecc:	movt	r0, #5
   28ed0:	b	292c4 <main@@Base+0x13588>
   28ed4:	bne	28ee4 <main@@Base+0x131a8>
   28ed8:	ldrb	r0, [r5, #2]!
   28edc:	cmp	r0, #32
   28ee0:	bhi	28ef4 <main@@Base+0x131b8>
   28ee4:	mov	r0, sl
   28ee8:	mov	r2, r4
   28eec:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28ef0:	mov	r5, r0
   28ef4:	cmp	r6, r5
   28ef8:	beq	2926c <main@@Base+0x13530>
   28efc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28f00:	mov	r1, #7
   28f04:	mov	r2, r4
   28f08:	mov	r3, #3
   28f0c:	str	r1, [sp]
   28f10:	mov	r1, r5
   28f14:	str	r0, [sp, #4]
   28f18:	movw	r0, #33456	; 0x82b0
   28f1c:	movt	r0, #5
   28f20:	b	292c4 <main@@Base+0x13588>
   28f24:	bne	28f34 <main@@Base+0x131f8>
   28f28:	ldrb	r0, [r5, #16]!
   28f2c:	cmp	r0, #32
   28f30:	bhi	28f44 <main@@Base+0x13208>
   28f34:	mov	r0, sl
   28f38:	mov	r2, r4
   28f3c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28f40:	mov	r5, r0
   28f44:	cmp	r5, r4
   28f48:	beq	28f7c <main@@Base+0x13240>
   28f4c:	ldrb	r0, [r5]
   28f50:	cmp	r0, #58	; 0x3a
   28f54:	bne	28f7c <main@@Base+0x13240>
   28f58:	add	r1, r5, #1
   28f5c:	sub	r0, r4, r1
   28f60:	cmp	r0, #2
   28f64:	blt	291f0 <main@@Base+0x134b4>
   28f68:	ldrb	r0, [r1]
   28f6c:	cmp	r0, #32
   28f70:	bls	291e0 <main@@Base+0x134a4>
   28f74:	mov	r5, r1
   28f78:	b	29200 <main@@Base+0x134c4>
   28f7c:	mov	r0, sl
   28f80:	mov	r1, r5
   28f84:	mov	r2, r4
   28f88:	mov	r3, #4
   28f8c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   28f90:	b	291fc <main@@Base+0x134c0>
   28f94:	bne	28fa4 <main@@Base+0x13268>
   28f98:	ldrb	r0, [r5, #11]!
   28f9c:	cmp	r0, #32
   28fa0:	bhi	28fb4 <main@@Base+0x13278>
   28fa4:	mov	r0, sl
   28fa8:	mov	r2, r4
   28fac:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   28fb0:	mov	r5, r0
   28fb4:	cmp	r5, r4
   28fb8:	beq	28fec <main@@Base+0x132b0>
   28fbc:	ldrb	r0, [r5]
   28fc0:	cmp	r0, #58	; 0x3a
   28fc4:	bne	28fec <main@@Base+0x132b0>
   28fc8:	add	r1, r5, #1
   28fcc:	sub	r0, r4, r1
   28fd0:	cmp	r0, #2
   28fd4:	blt	29238 <main@@Base+0x134fc>
   28fd8:	ldrb	r0, [r1]
   28fdc:	cmp	r0, #32
   28fe0:	bls	29228 <main@@Base+0x134ec>
   28fe4:	mov	r5, r1
   28fe8:	b	29248 <main@@Base+0x1350c>
   28fec:	mov	r0, sl
   28ff0:	mov	r1, r5
   28ff4:	mov	r2, r4
   28ff8:	mov	r3, #4
   28ffc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   29000:	b	29244 <main@@Base+0x13508>
   29004:	bne	29014 <main@@Base+0x132d8>
   29008:	ldrb	r0, [r2, #2]!
   2900c:	cmp	r0, #32
   29010:	bhi	29024 <main@@Base+0x132e8>
   29014:	mov	r0, sl
   29018:	mov	r2, r4
   2901c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29020:	mov	r2, r0
   29024:	cmp	r7, r2
   29028:	beq	2921c <main@@Base+0x134e0>
   2902c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29030:	mov	r1, #9
   29034:	mov	r3, #4
   29038:	str	r1, [sp]
   2903c:	mov	r1, r2
   29040:	mov	r2, r4
   29044:	str	r0, [sp, #4]
   29048:	movw	r0, #33472	; 0x82c0
   2904c:	movt	r0, #5
   29050:	str	r0, [sp, #8]
   29054:	movw	r0, #38256	; 0x9570
   29058:	movt	r0, #2
   2905c:	str	r0, [sp, #12]
   29060:	movw	r0, #41828	; 0xa364
   29064:	movt	r0, #2
   29068:	str	r0, [sp, #16]
   2906c:	mov	r0, sl
   29070:	bl	34704 <flatcc_json_parser_union_type_vector@@Base>
   29074:	b	292f0 <main@@Base+0x135b4>
   29078:	bne	29088 <main@@Base+0x1334c>
   2907c:	ldrb	r0, [r3, #21]!
   29080:	cmp	r0, #32
   29084:	bhi	29098 <main@@Base+0x1335c>
   29088:	mov	r0, sl
   2908c:	mov	r2, r4
   29090:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29094:	mov	r3, r0
   29098:	cmp	r3, r4
   2909c:	beq	290d0 <main@@Base+0x13394>
   290a0:	ldrb	r0, [r3]
   290a4:	cmp	r0, #58	; 0x3a
   290a8:	bne	290d0 <main@@Base+0x13394>
   290ac:	add	r1, r3, #1
   290b0:	sub	r0, r4, r1
   290b4:	cmp	r0, #2
   290b8:	blt	29288 <main@@Base+0x1354c>
   290bc:	ldrb	r0, [r1]
   290c0:	cmp	r0, #32
   290c4:	bls	29278 <main@@Base+0x1353c>
   290c8:	mov	r3, r1
   290cc:	b	29298 <main@@Base+0x1355c>
   290d0:	mov	r1, r3
   290d4:	mov	r0, sl
   290d8:	mov	r2, r4
   290dc:	mov	r3, #4
   290e0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   290e4:	b	29294 <main@@Base+0x13558>
   290e8:	bne	290f8 <main@@Base+0x133bc>
   290ec:	ldrb	r0, [r2, #2]!
   290f0:	cmp	r0, #32
   290f4:	bhi	29108 <main@@Base+0x133cc>
   290f8:	mov	r0, sl
   290fc:	mov	r2, r4
   29100:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29104:	mov	r2, r0
   29108:	cmp	r8, r2
   2910c:	beq	29128 <main@@Base+0x133ec>
   29110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29114:	mov	r1, #3
   29118:	mov	r3, #1
   2911c:	str	r1, [sp]
   29120:	mov	r1, r2
   29124:	b	28e64 <main@@Base+0x13128>
   29128:	mov	r0, sl
   2912c:	mov	r1, r8
   29130:	b	292e8 <main@@Base+0x135ac>
   29134:	bne	29144 <main@@Base+0x13408>
   29138:	ldrb	r0, [r5, #2]!
   2913c:	cmp	r0, #32
   29140:	bhi	29154 <main@@Base+0x13418>
   29144:	mov	r0, sl
   29148:	mov	r2, r4
   2914c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29150:	mov	r5, r0
   29154:	cmp	r6, r5
   29158:	beq	2926c <main@@Base+0x13530>
   2915c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29160:	mov	r1, #5
   29164:	mov	r2, r4
   29168:	mov	r3, #2
   2916c:	str	r1, [sp]
   29170:	mov	r1, r5
   29174:	str	r0, [sp, #4]
   29178:	movw	r0, #33504	; 0x82e0
   2917c:	movt	r0, #5
   29180:	b	292c4 <main@@Base+0x13588>
   29184:	bne	29194 <main@@Base+0x13458>
   29188:	ldrb	r0, [r2, #2]!
   2918c:	cmp	r0, #32
   29190:	bhi	291a4 <main@@Base+0x13468>
   29194:	mov	r0, sl
   29198:	mov	r2, r4
   2919c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   291a0:	mov	r2, r0
   291a4:	cmp	r7, r2
   291a8:	beq	2921c <main@@Base+0x134e0>
   291ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   291b0:	mov	r1, #9
   291b4:	mov	r3, #4
   291b8:	str	r1, [sp]
   291bc:	mov	r1, r2
   291c0:	mov	r2, r4
   291c4:	str	r0, [sp, #4]
   291c8:	movw	r0, #38256	; 0x9570
   291cc:	movt	r0, #2
   291d0:	str	r0, [sp, #8]
   291d4:	mov	r0, sl
   291d8:	bl	34244 <flatcc_json_parser_union_vector@@Base>
   291dc:	b	292f0 <main@@Base+0x135b4>
   291e0:	bne	291f0 <main@@Base+0x134b4>
   291e4:	ldrb	r0, [r5, #2]!
   291e8:	cmp	r0, #32
   291ec:	bhi	29200 <main@@Base+0x134c4>
   291f0:	mov	r0, sl
   291f4:	mov	r2, r4
   291f8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   291fc:	mov	r5, r0
   29200:	cmp	r7, r5
   29204:	beq	2921c <main@@Base+0x134e0>
   29208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2920c:	mov	r1, #1
   29210:	mov	r2, r4
   29214:	mov	r3, #0
   29218:	b	29260 <main@@Base+0x13524>
   2921c:	mov	r0, sl
   29220:	mov	r1, r7
   29224:	b	292e8 <main@@Base+0x135ac>
   29228:	bne	29238 <main@@Base+0x134fc>
   2922c:	ldrb	r0, [r5, #2]!
   29230:	cmp	r0, #32
   29234:	bhi	29248 <main@@Base+0x1350c>
   29238:	mov	r0, sl
   2923c:	mov	r2, r4
   29240:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29244:	mov	r5, r0
   29248:	cmp	r6, r5
   2924c:	beq	2926c <main@@Base+0x13530>
   29250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29254:	mov	r1, #5
   29258:	mov	r2, r4
   2925c:	mov	r3, #2
   29260:	str	r1, [sp]
   29264:	mov	r1, r5
   29268:	b	28e68 <main@@Base+0x1312c>
   2926c:	mov	r0, sl
   29270:	mov	r1, r6
   29274:	b	292e8 <main@@Base+0x135ac>
   29278:	bne	29288 <main@@Base+0x1354c>
   2927c:	ldrb	r0, [r3, #2]!
   29280:	cmp	r0, #32
   29284:	bhi	29298 <main@@Base+0x1355c>
   29288:	mov	r0, sl
   2928c:	mov	r2, r4
   29290:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29294:	mov	r3, r0
   29298:	cmp	r5, r3
   2929c:	beq	292e0 <main@@Base+0x135a4>
   292a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   292a4:	mov	r1, #1
   292a8:	mov	r2, r4
   292ac:	str	r1, [sp]
   292b0:	mov	r1, r3
   292b4:	mov	r3, #0
   292b8:	str	r0, [sp, #4]
   292bc:	movw	r0, #33488	; 0x82d0
   292c0:	movt	r0, #5
   292c4:	str	r0, [sp, #8]
   292c8:	movw	r0, #38256	; 0x9570
   292cc:	movt	r0, #2
   292d0:	str	r0, [sp, #12]
   292d4:	mov	r0, sl
   292d8:	bl	33e04 <flatcc_json_parser_union_type@@Base>
   292dc:	b	292f0 <main@@Base+0x135b4>
   292e0:	mov	r0, sl
   292e4:	mov	r1, r5
   292e8:	mov	r2, r4
   292ec:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   292f0:	mov	r2, r0
   292f4:	sub	r0, r4, r2
   292f8:	cmp	r0, #2
   292fc:	blt	29328 <main@@Base+0x135ec>
   29300:	ldrb	r0, [r2]
   29304:	cmp	r0, #32
   29308:	bls	29314 <main@@Base+0x135d8>
   2930c:	mov	r3, r2
   29310:	b	2933c <main@@Base+0x13600>
   29314:	bne	29328 <main@@Base+0x135ec>
   29318:	mov	r3, r2
   2931c:	ldrb	r0, [r3, #1]!
   29320:	cmp	r0, #32
   29324:	bhi	2933c <main@@Base+0x13600>
   29328:	mov	r1, r2
   2932c:	mov	r0, sl
   29330:	mov	r2, r4
   29334:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29338:	mov	r3, r0
   2933c:	cmp	r3, r4
   29340:	beq	293ac <main@@Base+0x13670>
   29344:	ldrb	r0, [r3]
   29348:	cmp	r0, #44	; 0x2c
   2934c:	bne	293b4 <main@@Base+0x13678>
   29350:	add	r1, r3, #1
   29354:	sub	r0, r4, r1
   29358:	cmp	r0, #2
   2935c:	blt	29384 <main@@Base+0x13648>
   29360:	ldrb	r0, [r1]
   29364:	cmp	r0, #32
   29368:	bls	29374 <main@@Base+0x13638>
   2936c:	mov	r3, r1
   29370:	b	29394 <main@@Base+0x13658>
   29374:	bne	29384 <main@@Base+0x13648>
   29378:	ldrb	r0, [r3, #2]!
   2937c:	cmp	r0, #32
   29380:	bhi	29394 <main@@Base+0x13658>
   29384:	mov	r0, sl
   29388:	mov	r2, r4
   2938c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29390:	mov	r3, r0
   29394:	cmp	r3, r4
   29398:	beq	293e0 <main@@Base+0x136a4>
   2939c:	ldrb	r0, [r3]
   293a0:	cmp	r0, #125	; 0x7d
   293a4:	bne	281fc <main@@Base+0x124c0>
   293a8:	b	293bc <main@@Base+0x13680>
   293ac:	mov	r7, r4
   293b0:	b	28138 <main@@Base+0x123fc>
   293b4:	cmp	r0, #125	; 0x7d
   293b8:	bne	293ec <main@@Base+0x136b0>
   293bc:	add	r1, r3, #1
   293c0:	sub	r0, r4, r1
   293c4:	cmp	r0, #2
   293c8:	blt	29414 <main@@Base+0x136d8>
   293cc:	ldrb	r0, [r1]
   293d0:	cmp	r0, #32
   293d4:	bls	29400 <main@@Base+0x136c4>
   293d8:	mov	r7, r1
   293dc:	b	28138 <main@@Base+0x123fc>
   293e0:	mov	r0, sl
   293e4:	mov	r1, r4
   293e8:	b	293f4 <main@@Base+0x136b8>
   293ec:	mov	r0, sl
   293f0:	mov	r1, r3
   293f4:	mov	r2, r4
   293f8:	mov	r3, #10
   293fc:	b	28130 <main@@Base+0x123f4>
   29400:	bne	29414 <main@@Base+0x136d8>
   29404:	ldrb	r0, [r3, #2]!
   29408:	cmp	r0, #32
   2940c:	mov	r7, r3
   29410:	bhi	28138 <main@@Base+0x123fc>
   29414:	mov	r0, sl
   29418:	mov	r2, r4
   2941c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29420:	b	28134 <main@@Base+0x123f8>
   29424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29428:	add	fp, sp, #28
   2942c:	push	{r3}		; (str r3, [sp, #-4]!)
   29430:	sub	r7, r2, r1
   29434:	cmp	r7, #8
   29438:	movcs	r7, #8
   2943c:	and	r7, r7, #15
   29440:	sub	r5, r7, #1
   29444:	cmp	r5, #7
   29448:	bhi	2952c <main@@Base+0x137f0>
   2944c:	add	lr, pc, #32
   29450:	mov	ip, #0
   29454:	mov	r3, #0
   29458:	mov	r8, #0
   2945c:	mov	r9, #0
   29460:	mov	sl, #0
   29464:	mov	r7, #0
   29468:	mov	r4, #0
   2946c:	mov	r6, #0
   29470:	ldr	pc, [lr, r5, lsl #2]
   29474:	ldrdeq	r9, [r2], -r8
   29478:	ldrdeq	r9, [r2], -r0
   2947c:	andeq	r9, r2, r8, asr #9
   29480:	andeq	r9, r2, r0, asr #9
   29484:			; <UNDEFINED> instruction: 0x000294b4
   29488:	andeq	r9, r2, r8, lsr #9
   2948c:	muleq	r2, r8, r4
   29490:	muleq	r2, r4, r4
   29494:	ldrb	r3, [r1, #7]
   29498:	ldrb	r7, [r1, #6]
   2949c:	mov	r8, ip
   294a0:	orr	r3, r3, r7, lsl #8
   294a4:	mov	ip, r3
   294a8:	ldrb	r3, [r1, #5]
   294ac:	mov	r9, r8
   294b0:	orr	ip, ip, r3, lsl #16
   294b4:	ldrb	r3, [r1, #4]
   294b8:	mov	sl, r9
   294bc:	orr	ip, ip, r3, lsl #24
   294c0:	ldrb	r3, [r1, #3]
   294c4:	orr	r7, r3, sl
   294c8:	ldrb	r3, [r1, #2]
   294cc:	orr	r4, r7, r3, lsl #8
   294d0:	ldrb	r3, [r1, #1]
   294d4:	orr	r6, r4, r3, lsl #16
   294d8:	ldrb	r7, [r1]
   294dc:	movw	r3, #29797	; 0x7465
   294e0:	movt	r3, #24931	; 0x6163
   294e4:	eor	r3, ip, r3
   294e8:	orr	r7, r6, r7, lsl #24
   294ec:	movw	r6, #24946	; 0x6172
   294f0:	movt	r6, #17256	; 0x4368
   294f4:	eor	r7, r7, r6
   294f8:	orrs	r3, r3, r7
   294fc:	bne	2952c <main@@Base+0x137f0>
   29500:	add	lr, r1, #8
   29504:	mov	r6, #-268435456	; 0xf0000000
   29508:	sub	r7, r2, lr
   2950c:	cmp	r7, #8
   29510:	mov	r3, r7
   29514:	movcs	r3, #8
   29518:	add	r3, r6, r3, lsl #28
   2951c:	asr	r3, r3, #28
   29520:	cmp	r3, #0
   29524:	cmpge	r7, #2
   29528:	bge	29538 <main@@Base+0x137fc>
   2952c:	mov	r0, r1
   29530:	sub	sp, fp, #28
   29534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29538:	ldrb	r3, [lr]
   2953c:	cmp	r3, #114	; 0x72
   29540:	bne	2952c <main@@Base+0x137f0>
   29544:	ldrb	r3, [r1, #9]
   29548:	mov	ip, lr
   2954c:	cmp	r3, #46	; 0x2e
   29550:	addeq	ip, r1, #10
   29554:	cmp	ip, lr
   29558:	beq	2952c <main@@Base+0x137f0>
   2955c:	ldr	r3, [sp]
   29560:	mov	r1, ip
   29564:	sub	sp, fp, #28
   29568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2956c:	b	243b8 <main@@Base+0xe67c>
   29570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29574:	add	fp, sp, #28
   29578:	sub	sp, sp, #36	; 0x24
   2957c:	ldr	r5, [fp, #8]
   29580:	mov	r8, r0
   29584:	mov	r0, #0
   29588:	mov	r9, r2
   2958c:	mov	r4, r1
   29590:	cmp	r3, #11
   29594:	str	r0, [r5]
   29598:	bhi	295ec <main@@Base+0x138b0>
   2959c:	add	r0, pc, #0
   295a0:	ldr	pc, [r0, r3, lsl #2]
   295a4:	andeq	r9, r2, ip, lsr #12
   295a8:	andeq	r9, r2, ip, lsl #12
   295ac:	andeq	r9, r2, r8, ror #12
   295b0:	andeq	r9, r2, ip, lsl #12
   295b4:	andeq	r9, r2, ip, lsl #12
   295b8:	andeq	r9, r2, ip, lsl #12
   295bc:	andeq	r9, r2, ip, lsl #12
   295c0:	andeq	r9, r2, ip, lsl #12
   295c4:			; <UNDEFINED> instruction: 0x000296bc
   295c8:	ldrdeq	r9, [r2], -r4
   295cc:	ldrdeq	r9, [r2], -r4
   295d0:	strdeq	r9, [r2], -r4
   295d4:	mov	r0, r8
   295d8:	mov	r1, r4
   295dc:	mov	r2, r9
   295e0:	mov	r3, r5
   295e4:	bl	2a38c <main@@Base+0x14650>
   295e8:	b	297b4 <main@@Base+0x13a78>
   295ec:	cmp	r3, #255	; 0xff
   295f0:	bne	2960c <main@@Base+0x138d0>
   295f4:	mov	r0, r8
   295f8:	mov	r1, r4
   295fc:	mov	r2, r9
   29600:	mov	r3, r5
   29604:	bl	339f8 <flatcc_json_parser_build_string@@Base>
   29608:	b	297b4 <main@@Base+0x13a78>
   2960c:	ldrb	r0, [r8, #8]
   29610:	tst	r0, #1
   29614:	bne	29718 <main@@Base+0x139dc>
   29618:	mov	r0, r8
   2961c:	mov	r1, r4
   29620:	mov	r2, r9
   29624:	mov	r3, #15
   29628:	b	2965c <main@@Base+0x13920>
   2962c:	sub	r0, r9, r4
   29630:	cmp	r0, #4
   29634:	blt	2964c <main@@Base+0x13910>
   29638:	ldr	r0, [r4]
   2963c:	movw	r1, #30062	; 0x756e
   29640:	movt	r1, #27756	; 0x6c6c
   29644:	cmp	r0, r1
   29648:	beq	297f4 <main@@Base+0x13ab8>
   2964c:	mov	r0, r8
   29650:	mov	r1, r4
   29654:	mov	r2, r9
   29658:	mov	r3, #26
   2965c:	sub	sp, fp, #28
   29660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29664:	b	316cc <flatcc_json_parser_set_error@@Base>
   29668:	mov	r0, #0
   2966c:	mov	r1, #1
   29670:	str	r0, [r5]
   29674:	ldr	r0, [r8]
   29678:	bl	2d7a8 <flatcc_builder_start_table@@Base>
   2967c:	cmp	r0, #0
   29680:	bne	297a0 <main@@Base+0x13a64>
   29684:	cmp	r4, r9
   29688:	beq	2977c <main@@Base+0x13a40>
   2968c:	ldrb	r0, [r4]
   29690:	cmp	r0, #123	; 0x7b
   29694:	bne	2977c <main@@Base+0x13a40>
   29698:	add	r1, r4, #1
   2969c:	sub	r0, r9, r1
   296a0:	cmp	r0, #2
   296a4:	blt	29cec <main@@Base+0x13fb0>
   296a8:	ldrb	r0, [r1]
   296ac:	cmp	r0, #32
   296b0:	bls	29cdc <main@@Base+0x13fa0>
   296b4:	mov	r4, r1
   296b8:	b	29cfc <main@@Base+0x13fc0>
   296bc:	mov	r0, #0
   296c0:	mov	r1, #2
   296c4:	mov	r2, #2
   296c8:	str	r0, [r5]
   296cc:	ldr	r0, [r8]
   296d0:	bl	2ca4c <flatcc_builder_start_struct@@Base>
   296d4:	cmp	r0, #0
   296d8:	beq	29770 <main@@Base+0x13a34>
   296dc:	cmp	r4, r9
   296e0:	beq	29730 <main@@Base+0x139f4>
   296e4:	ldrb	r1, [r4]
   296e8:	cmp	r1, #123	; 0x7b
   296ec:	bne	29730 <main@@Base+0x139f4>
   296f0:	add	r1, r4, #1
   296f4:	str	r0, [sp, #8]
   296f8:	sub	r0, r9, r1
   296fc:	cmp	r0, #2
   29700:	blt	29824 <main@@Base+0x13ae8>
   29704:	ldrb	r0, [r1]
   29708:	cmp	r0, #32
   2970c:	bls	29814 <main@@Base+0x13ad8>
   29710:	mov	r4, r1
   29714:	b	29834 <main@@Base+0x13af8>
   29718:	mov	r0, r8
   2971c:	mov	r1, r4
   29720:	mov	r2, r9
   29724:	sub	sp, fp, #28
   29728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2972c:	b	31ecc <flatcc_json_parser_generic_json@@Base>
   29730:	mov	r0, r8
   29734:	mov	r1, r4
   29738:	mov	r2, r9
   2973c:	mov	r3, #21
   29740:	bl	316cc <flatcc_json_parser_set_error@@Base>
   29744:	mov	r4, r0
   29748:	cmp	r4, r9
   2974c:	mov	r1, r9
   29750:	beq	29774 <main@@Base+0x13a38>
   29754:	ldr	r0, [r8]
   29758:	bl	2caec <flatcc_builder_end_struct@@Base>
   2975c:	cmp	r0, #0
   29760:	mov	r1, r4
   29764:	str	r0, [r5]
   29768:	bne	297b8 <main@@Base+0x13a7c>
   2976c:	b	29774 <main@@Base+0x13a38>
   29770:	mov	r1, r4
   29774:	mov	r0, r8
   29778:	b	297a8 <main@@Base+0x13a6c>
   2977c:	mov	r0, r8
   29780:	mov	r1, r4
   29784:	mov	r2, r9
   29788:	mov	r3, #21
   2978c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   29790:	mov	r4, r0
   29794:	ldr	r0, [r8, #20]
   29798:	cmp	r0, #0
   2979c:	beq	297fc <main@@Base+0x13ac0>
   297a0:	mov	r0, r8
   297a4:	mov	r1, r4
   297a8:	mov	r2, r9
   297ac:	mov	r3, #33	; 0x21
   297b0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   297b4:	mov	r4, r0
   297b8:	ldr	r0, [r8, #20]
   297bc:	cmp	r0, #0
   297c0:	bne	297e8 <main@@Base+0x13aac>
   297c4:	ldr	r0, [r5]
   297c8:	cmp	r0, #0
   297cc:	bne	297e8 <main@@Base+0x13aac>
   297d0:	mov	r0, r8
   297d4:	mov	r1, r4
   297d8:	mov	r2, r9
   297dc:	mov	r3, #33	; 0x21
   297e0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   297e4:	mov	r4, r0
   297e8:	mov	r0, r4
   297ec:	sub	sp, fp, #28
   297f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   297f4:	add	r4, r4, #4
   297f8:	b	297e8 <main@@Base+0x13aac>
   297fc:	ldr	r0, [r8]
   29800:	bl	2e138 <flatcc_builder_end_table@@Base>
   29804:	cmp	r0, #0
   29808:	str	r0, [r5]
   2980c:	bne	297b8 <main@@Base+0x13a7c>
   29810:	b	297a0 <main@@Base+0x13a64>
   29814:	bne	29824 <main@@Base+0x13ae8>
   29818:	ldrb	r0, [r4, #2]!
   2981c:	cmp	r0, #32
   29820:	bhi	29834 <main@@Base+0x13af8>
   29824:	mov	r0, r8
   29828:	mov	r2, r9
   2982c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29830:	mov	r4, r0
   29834:	cmp	r4, r9
   29838:	mov	r3, r9
   2983c:	beq	29880 <main@@Base+0x13b44>
   29840:	ldrb	r0, [r4]
   29844:	cmp	r0, #125	; 0x7d
   29848:	bne	2987c <main@@Base+0x13b40>
   2984c:	add	r1, r4, #1
   29850:	sub	r0, r9, r1
   29854:	cmp	r0, #2
   29858:	blt	2a2f8 <main@@Base+0x145bc>
   2985c:	ldrb	r0, [r1]
   29860:	cmp	r0, #32
   29864:	bhi	29cc8 <main@@Base+0x13f8c>
   29868:	bne	2a2f8 <main@@Base+0x145bc>
   2986c:	ldrb	r0, [r4, #2]!
   29870:	cmp	r0, #32
   29874:	bhi	29748 <main@@Base+0x13a0c>
   29878:	b	2a2f8 <main@@Base+0x145bc>
   2987c:	mov	r3, r4
   29880:	str	r5, [sp, #12]
   29884:	cmp	r3, r9
   29888:	mov	sl, r9
   2988c:	beq	298bc <main@@Base+0x13b80>
   29890:	ldrb	r0, [r3]
   29894:	cmp	r0, #34	; 0x22
   29898:	bne	298a4 <main@@Base+0x13b68>
   2989c:	add	sl, r3, #1
   298a0:	b	298bc <main@@Base+0x13b80>
   298a4:	mov	r1, r3
   298a8:	mov	r0, r8
   298ac:	mov	r2, r9
   298b0:	mov	r3, #5
   298b4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   298b8:	mov	sl, r0
   298bc:	sub	r0, r9, sl
   298c0:	mov	r1, #8
   298c4:	cmp	r0, #8
   298c8:	movcs	r0, r1
   298cc:	and	r0, r0, #15
   298d0:	sub	r3, r0, #1
   298d4:	cmp	r3, #7
   298d8:	bhi	29a18 <main@@Base+0x13cdc>
   298dc:	add	r7, pc, #32
   298e0:	mov	r0, #0
   298e4:	mov	ip, #0
   298e8:	mov	lr, #0
   298ec:	mov	r4, #0
   298f0:	mov	r2, #0
   298f4:	mov	r5, #0
   298f8:	mov	r1, #0
   298fc:	mov	r6, #0
   29900:	ldr	pc, [r7, r3, lsl #2]
   29904:	andeq	r9, r2, r8, ror #18
   29908:	andeq	r9, r2, r0, ror #18
   2990c:	andeq	r9, r2, r8, asr r9
   29910:	andeq	r9, r2, r0, asr r9
   29914:	andeq	r9, r2, r4, asr #18
   29918:	andeq	r9, r2, r8, lsr r9
   2991c:	andeq	r9, r2, r8, lsr #18
   29920:	andeq	r9, r2, r4, lsr #18
   29924:	ldrb	ip, [sl, #7]
   29928:	ldrb	r1, [sl, #6]
   2992c:	mov	lr, r0
   29930:	orr	r1, ip, r1, lsl #8
   29934:	mov	r0, r1
   29938:	ldrb	r1, [sl, #5]
   2993c:	mov	r4, lr
   29940:	orr	r0, r0, r1, lsl #16
   29944:	ldrb	r1, [sl, #4]
   29948:	mov	r2, r4
   2994c:	orr	r0, r0, r1, lsl #24
   29950:	ldrb	r1, [sl, #3]
   29954:	orr	r5, r1, r2
   29958:	ldrb	r1, [sl, #2]
   2995c:	orr	r1, r5, r1, lsl #8
   29960:	ldrb	r2, [sl, #1]
   29964:	orr	r6, r1, r2, lsl #16
   29968:	movw	r1, #25966	; 0x656e
   2996c:	movw	r2, #26994	; 0x6972
   29970:	movt	r1, #24428	; 0x5f6c
   29974:	movt	r2, #26721	; 0x6861
   29978:	eor	r0, r0, r1
   2997c:	ldrb	r1, [sl]
   29980:	orr	r1, r6, r1, lsl #24
   29984:	eor	r1, r1, r2
   29988:	orrs	r0, r0, r1
   2998c:	bne	29a18 <main@@Base+0x13cdc>
   29990:	add	r4, sl, #8
   29994:	mov	r1, #8
   29998:	sub	r0, r9, r4
   2999c:	cmp	r0, #8
   299a0:	movcc	r1, r0
   299a4:	and	r2, r1, #15
   299a8:	sub	r1, r2, #3
   299ac:	cmp	r1, #6
   299b0:	bcs	29a24 <main@@Base+0x13ce8>
   299b4:	ldrb	r1, [sl, #10]
   299b8:	lsl	r1, r1, #8
   299bc:	ldrb	r2, [sl, #9]
   299c0:	orr	r1, r1, r2, lsl #16
   299c4:	ldrb	r2, [r4]
   299c8:	bic	r1, r1, #255	; 0xff
   299cc:	orr	r1, r1, r2, lsl #24
   299d0:	movw	r2, #26624	; 0x6800
   299d4:	movt	r2, #26484	; 0x6774
   299d8:	teq	r1, r2
   299dc:	bne	29b38 <main@@Base+0x13dfc>
   299e0:	cmp	r0, #4
   299e4:	blt	29b38 <main@@Base+0x13dfc>
   299e8:	ldrb	r0, [sl, #11]
   299ec:	cmp	r0, #34	; 0x22
   299f0:	bne	29b38 <main@@Base+0x13dfc>
   299f4:	add	r1, sl, #12
   299f8:	sub	r0, r9, r1
   299fc:	cmp	r0, #2
   29a00:	blt	29a4c <main@@Base+0x13d10>
   29a04:	ldrb	r0, [r1]
   29a08:	cmp	r0, #32
   29a0c:	bls	29a3c <main@@Base+0x13d00>
   29a10:	mov	sl, r1
   29a14:	b	29a5c <main@@Base+0x13d20>
   29a18:	mov	r0, r8
   29a1c:	mov	r1, sl
   29a20:	b	29b40 <main@@Base+0x13e04>
   29a24:	mov	r1, #0
   29a28:	cmp	r2, #1
   29a2c:	beq	299c4 <main@@Base+0x13c88>
   29a30:	cmp	r2, #2
   29a34:	beq	299bc <main@@Base+0x13c80>
   29a38:	b	29b38 <main@@Base+0x13dfc>
   29a3c:	bne	29a4c <main@@Base+0x13d10>
   29a40:	ldrb	r0, [sl, #13]!
   29a44:	cmp	r0, #32
   29a48:	bhi	29a5c <main@@Base+0x13d20>
   29a4c:	mov	r0, r8
   29a50:	mov	r2, r9
   29a54:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29a58:	mov	sl, r0
   29a5c:	cmp	sl, r9
   29a60:	beq	29a94 <main@@Base+0x13d58>
   29a64:	ldrb	r0, [sl]
   29a68:	cmp	r0, #58	; 0x3a
   29a6c:	bne	29a94 <main@@Base+0x13d58>
   29a70:	add	r1, sl, #1
   29a74:	sub	r0, r9, r1
   29a78:	cmp	r0, #2
   29a7c:	blt	29abc <main@@Base+0x13d80>
   29a80:	ldrb	r0, [r1]
   29a84:	cmp	r0, #32
   29a88:	bls	29aac <main@@Base+0x13d70>
   29a8c:	mov	sl, r1
   29a90:	b	29acc <main@@Base+0x13d90>
   29a94:	mov	r0, r8
   29a98:	mov	r1, sl
   29a9c:	mov	r2, r9
   29aa0:	mov	r3, #4
   29aa4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   29aa8:	b	29ac8 <main@@Base+0x13d8c>
   29aac:	bne	29abc <main@@Base+0x13d80>
   29ab0:	ldrb	r0, [sl, #2]!
   29ab4:	cmp	r0, #32
   29ab8:	bhi	29acc <main@@Base+0x13d90>
   29abc:	mov	r0, r8
   29ac0:	mov	r2, r9
   29ac4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29ac8:	mov	sl, r0
   29acc:	cmp	r4, sl
   29ad0:	beq	29b38 <main@@Base+0x13dfc>
   29ad4:	mov	r4, #0
   29ad8:	cmp	sl, r9
   29adc:	str	r4, [sp, #28]
   29ae0:	str	r4, [sp, #24]
   29ae4:	strh	r4, [sp, #16]
   29ae8:	str	r4, [sp, #20]
   29aec:	beq	29c08 <main@@Base+0x13ecc>
   29af0:	add	r0, sp, #24
   29af4:	mov	r1, sl
   29af8:	mov	r2, r9
   29afc:	add	r3, sp, #20
   29b00:	str	r0, [sp]
   29b04:	mov	r0, r8
   29b08:	bl	334d0 <flatcc_json_parser_integer@@Base>
   29b0c:	cmp	r0, sl
   29b10:	beq	29c10 <main@@Base+0x13ed4>
   29b14:	mov	r2, r0
   29b18:	ldr	r0, [sp, #20]
   29b1c:	cmp	r0, #0
   29b20:	beq	29c18 <main@@Base+0x13edc>
   29b24:	mov	r1, r2
   29b28:	mov	r0, r8
   29b2c:	mov	r2, r9
   29b30:	mov	r3, #8
   29b34:	b	29c3c <main@@Base+0x13f00>
   29b38:	mov	r0, r8
   29b3c:	mov	r1, r4
   29b40:	mov	r2, r9
   29b44:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   29b48:	mov	r2, r0
   29b4c:	ldr	r5, [sp, #12]
   29b50:	sub	r0, r9, r2
   29b54:	cmp	r0, #2
   29b58:	blt	29b84 <main@@Base+0x13e48>
   29b5c:	ldrb	r0, [r2]
   29b60:	cmp	r0, #32
   29b64:	bls	29b70 <main@@Base+0x13e34>
   29b68:	mov	r3, r2
   29b6c:	b	29b98 <main@@Base+0x13e5c>
   29b70:	bne	29b84 <main@@Base+0x13e48>
   29b74:	mov	r3, r2
   29b78:	ldrb	r0, [r3, #1]!
   29b7c:	cmp	r0, #32
   29b80:	bhi	29b98 <main@@Base+0x13e5c>
   29b84:	mov	r1, r2
   29b88:	mov	r0, r8
   29b8c:	mov	r2, r9
   29b90:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29b94:	mov	r3, r0
   29b98:	cmp	r3, r9
   29b9c:	beq	29c9c <main@@Base+0x13f60>
   29ba0:	ldrb	r0, [r3]
   29ba4:	cmp	r0, #44	; 0x2c
   29ba8:	bne	29ca4 <main@@Base+0x13f68>
   29bac:	add	r1, r3, #1
   29bb0:	sub	r0, r9, r1
   29bb4:	cmp	r0, #2
   29bb8:	blt	29be0 <main@@Base+0x13ea4>
   29bbc:	ldrb	r0, [r1]
   29bc0:	cmp	r0, #32
   29bc4:	bls	29bd0 <main@@Base+0x13e94>
   29bc8:	mov	r3, r1
   29bcc:	b	29bf0 <main@@Base+0x13eb4>
   29bd0:	bne	29be0 <main@@Base+0x13ea4>
   29bd4:	ldrb	r0, [r3, #2]!
   29bd8:	cmp	r0, #32
   29bdc:	bhi	29bf0 <main@@Base+0x13eb4>
   29be0:	mov	r0, r8
   29be4:	mov	r2, r9
   29be8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29bec:	mov	r3, r0
   29bf0:	cmp	r3, r9
   29bf4:	beq	29cd0 <main@@Base+0x13f94>
   29bf8:	ldrb	r0, [r3]
   29bfc:	cmp	r0, #125	; 0x7d
   29c00:	bne	29884 <main@@Base+0x13b48>
   29c04:	b	29cac <main@@Base+0x13f70>
   29c08:	mov	r2, r9
   29c0c:	b	29c44 <main@@Base+0x13f08>
   29c10:	mov	r2, sl
   29c14:	b	29c44 <main@@Base+0x13f08>
   29c18:	ldr	r0, [sp, #24]
   29c1c:	ldr	r1, [sp, #28]
   29c20:	subs	r3, r0, #65536	; 0x10000
   29c24:	sbcs	r1, r1, #0
   29c28:	bcc	29c90 <main@@Base+0x13f54>
   29c2c:	mov	r1, r2
   29c30:	mov	r0, r8
   29c34:	mov	r2, r9
   29c38:	mov	r3, #7
   29c3c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   29c40:	mov	r2, r0
   29c44:	ldr	r0, [sp, #8]
   29c48:	cmp	sl, r2
   29c4c:	bne	29c88 <main@@Base+0x13f4c>
   29c50:	movw	r3, #33532	; 0x82fc
   29c54:	add	r0, sp, #16
   29c58:	mov	r1, sl
   29c5c:	mov	r2, r9
   29c60:	str	r0, [sp]
   29c64:	mov	r0, r8
   29c68:	movt	r3, #5
   29c6c:	bl	2a998 <main@@Base+0x14c5c>
   29c70:	mov	r2, r0
   29c74:	cmp	r0, sl
   29c78:	cmpne	r2, r9
   29c7c:	beq	2a340 <main@@Base+0x14604>
   29c80:	ldrh	r4, [sp, #16]
   29c84:	ldr	r0, [sp, #8]
   29c88:	strh	r4, [r0]
   29c8c:	b	29b4c <main@@Base+0x13e10>
   29c90:	mov	r4, r0
   29c94:	strh	r0, [sp, #16]
   29c98:	b	29c44 <main@@Base+0x13f08>
   29c9c:	mov	r1, r9
   29ca0:	b	29774 <main@@Base+0x13a38>
   29ca4:	cmp	r0, #125	; 0x7d
   29ca8:	bne	2a2d0 <main@@Base+0x14594>
   29cac:	add	r1, r3, #1
   29cb0:	sub	r0, r9, r1
   29cb4:	cmp	r0, #2
   29cb8:	blt	2a2f8 <main@@Base+0x145bc>
   29cbc:	ldrb	r0, [r1]
   29cc0:	cmp	r0, #32
   29cc4:	bls	2a2e4 <main@@Base+0x145a8>
   29cc8:	mov	r4, r1
   29ccc:	b	29748 <main@@Base+0x13a0c>
   29cd0:	mov	r0, r8
   29cd4:	mov	r1, r9
   29cd8:	b	2a2d8 <main@@Base+0x1459c>
   29cdc:	bne	29cec <main@@Base+0x13fb0>
   29ce0:	ldrb	r0, [r4, #2]!
   29ce4:	cmp	r0, #32
   29ce8:	bhi	29cfc <main@@Base+0x13fc0>
   29cec:	mov	r0, r8
   29cf0:	mov	r2, r9
   29cf4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   29cf8:	mov	r4, r0
   29cfc:	cmp	r4, r9
   29d00:	mov	r2, r9
   29d04:	beq	29d48 <main@@Base+0x1400c>
   29d08:	ldrb	r0, [r4]
   29d0c:	cmp	r0, #125	; 0x7d
   29d10:	bne	29d44 <main@@Base+0x14008>
   29d14:	add	r1, r4, #1
   29d18:	sub	r0, r9, r1
   29d1c:	cmp	r0, #2
   29d20:	blt	2a330 <main@@Base+0x145f4>
   29d24:	ldrb	r0, [r1]
   29d28:	cmp	r0, #32
   29d2c:	bhi	2a2bc <main@@Base+0x14580>
   29d30:	bne	2a330 <main@@Base+0x145f4>
   29d34:	ldrb	r0, [r4, #2]!
   29d38:	cmp	r0, #32
   29d3c:	bhi	29794 <main@@Base+0x13a58>
   29d40:	b	2a330 <main@@Base+0x145f4>
   29d44:	mov	r2, r4
   29d48:	str	r5, [sp, #12]
   29d4c:	cmp	r2, r9
   29d50:	mov	sl, r9
   29d54:	beq	29d84 <main@@Base+0x14048>
   29d58:	ldrb	r0, [r2]
   29d5c:	cmp	r0, #34	; 0x22
   29d60:	bne	29d6c <main@@Base+0x14030>
   29d64:	add	sl, r2, #1
   29d68:	b	29d84 <main@@Base+0x14048>
   29d6c:	mov	r1, r2
   29d70:	mov	r0, r8
   29d74:	mov	r2, r9
   29d78:	mov	r3, #5
   29d7c:	bl	316cc <flatcc_json_parser_set_error@@Base>
   29d80:	mov	sl, r0
   29d84:	sub	r0, r9, sl
   29d88:	mov	r1, #8
   29d8c:	cmp	r0, #8
   29d90:	movcs	r0, r1
   29d94:	and	r0, r0, #15
   29d98:	sub	r3, r0, #1
   29d9c:	cmp	r3, #7
   29da0:	bhi	29fc4 <main@@Base+0x14288>
   29da4:	add	r5, pc, #32
   29da8:	mov	r0, #0
   29dac:	mov	ip, #0
   29db0:	mov	lr, #0
   29db4:	mov	r4, #0
   29db8:	mov	r2, #0
   29dbc:	mov	r6, #0
   29dc0:	mov	r7, #0
   29dc4:	mov	r1, #0
   29dc8:	ldr	pc, [r5, r3, lsl #2]
   29dcc:	andeq	r9, r2, r0, lsr lr
   29dd0:	andeq	r9, r2, r8, lsr #28
   29dd4:	andeq	r9, r2, r0, lsr #28
   29dd8:	andeq	r9, r2, r8, lsl lr
   29ddc:	andeq	r9, r2, ip, lsl #28
   29de0:	andeq	r9, r2, r0, lsl #28
   29de4:	strdeq	r9, [r2], -r0
   29de8:	andeq	r9, r2, ip, ror #27
   29dec:	ldrb	ip, [sl, #7]
   29df0:	ldrb	r1, [sl, #6]
   29df4:	mov	lr, r0
   29df8:	orr	r1, ip, r1, lsl #8
   29dfc:	mov	r0, r1
   29e00:	ldrb	r1, [sl, #5]
   29e04:	mov	r4, lr
   29e08:	orr	r0, r0, r1, lsl #16
   29e0c:	ldrb	r1, [sl, #4]
   29e10:	mov	r2, r4
   29e14:	orr	r0, r0, r1, lsl #24
   29e18:	ldrb	r1, [sl, #3]
   29e1c:	orr	r6, r1, r2
   29e20:	ldrb	r1, [sl, #2]
   29e24:	orr	r7, r6, r1, lsl #8
   29e28:	ldrb	r1, [sl, #1]
   29e2c:	orr	r1, r7, r1, lsl #16
   29e30:	movw	r2, #24948	; 0x6174
   29e34:	movt	r2, #25695	; 0x645f
   29e38:	eor	r0, r0, r2
   29e3c:	ldrb	r2, [sl]
   29e40:	orr	r1, r1, r2, lsl #24
   29e44:	movw	r2, #28530	; 0x6f72
   29e48:	movt	r2, #29559	; 0x7377
   29e4c:	eor	r1, r1, r2
   29e50:	orrs	r0, r0, r1
   29e54:	bne	29fc4 <main@@Base+0x14288>
   29e58:	add	r1, sl, #8
   29e5c:	mov	r2, #8
   29e60:	sub	r0, r9, r1
   29e64:	cmp	r0, #8
   29e68:	movcs	r0, r2
   29e6c:	and	r0, r0, #15
   29e70:	sub	r4, r0, #1
   29e74:	cmp	r4, #7
   29e78:	bhi	29fd0 <main@@Base+0x14294>
   29e7c:	add	ip, pc, #36	; 0x24
   29e80:	mov	r2, #0
   29e84:	mov	r0, #0
   29e88:	mov	lr, #0
   29e8c:	mov	r3, #0
   29e90:	mov	r6, #0
   29e94:	mov	r7, #0
   29e98:	mov	r5, #0
   29e9c:	str	r2, [sp, #8]
   29ea0:	mov	r2, #0
   29ea4:	ldr	pc, [ip, r4, lsl #2]
   29ea8:	andeq	r9, r2, r4, lsl pc
   29eac:	andeq	r9, r2, ip, lsl #30
   29eb0:	andeq	r9, r2, r4, lsl #30
   29eb4:	strdeq	r9, [r2], -ip
   29eb8:	strdeq	r9, [r2], -r0
   29ebc:	andeq	r9, r2, r4, ror #29
   29ec0:	ldrdeq	r9, [r2], -r0
   29ec4:	andeq	r9, r2, r8, asr #29
   29ec8:	ldrb	r2, [sl, #15]
   29ecc:	str	r2, [sp, #8]
   29ed0:	ldrb	r2, [sl, #14]
   29ed4:	ldr	r3, [sp, #8]
   29ed8:	mov	lr, r0
   29edc:	orr	r2, r3, r2, lsl #8
   29ee0:	mov	r0, r2
   29ee4:	ldrb	r2, [sl, #13]
   29ee8:	orr	r0, r0, r2, lsl #16
   29eec:	mov	r2, lr
   29ef0:	ldrb	r3, [sl, #12]
   29ef4:	orr	r0, r0, r3, lsl #24
   29ef8:	mov	r3, r2
   29efc:	ldrb	r2, [sl, #11]
   29f00:	orr	r6, r2, r3
   29f04:	ldrb	r2, [sl, #10]
   29f08:	orr	r7, r6, r2, lsl #8
   29f0c:	ldrb	r2, [sl, #9]
   29f10:	orr	r5, r7, r2, lsl #16
   29f14:	movw	r2, #24941	; 0x616d
   29f18:	movw	r3, #25451	; 0x636b
   29f1c:	movt	r2, #24420	; 0x5f64
   29f20:	movt	r3, #29793	; 0x7461
   29f24:	eor	r0, r0, r2
   29f28:	ldrb	r2, [r1]
   29f2c:	orr	r2, r5, r2, lsl #24
   29f30:	eor	r2, r2, r3
   29f34:	orrs	r0, r0, r2
   29f38:	bne	29fd0 <main@@Base+0x14294>
   29f3c:	add	r4, sl, #16
   29f40:	mov	r1, #8
   29f44:	sub	r0, r9, r4
   29f48:	cmp	r0, #8
   29f4c:	movcc	r1, r0
   29f50:	and	r2, r1, #15
   29f54:	sub	r1, r2, #3
   29f58:	cmp	r1, #6
   29f5c:	bcs	29fd8 <main@@Base+0x1429c>
   29f60:	ldrb	r1, [sl, #18]
   29f64:	lsl	r1, r1, #8
   29f68:	ldrb	r2, [sl, #17]
   29f6c:	orr	r1, r1, r2, lsl #16
   29f70:	ldrb	r2, [r4]
   29f74:	bic	r1, r1, #255	; 0xff
   29f78:	orr	r1, r1, r2, lsl #24
   29f7c:	movw	r2, #25856	; 0x6500
   29f80:	movt	r2, #24935	; 0x6167
   29f84:	teq	r1, r2
   29f88:	bne	2a100 <main@@Base+0x143c4>
   29f8c:	cmp	r0, #4
   29f90:	blt	2a100 <main@@Base+0x143c4>
   29f94:	ldrb	r0, [sl, #19]
   29f98:	cmp	r0, #34	; 0x22
   29f9c:	bne	2a100 <main@@Base+0x143c4>
   29fa0:	add	r1, sl, #20
   29fa4:	sub	r0, r9, r1
   29fa8:	cmp	r0, #2
   29fac:	blt	2a000 <main@@Base+0x142c4>
   29fb0:	ldrb	r0, [r1]
   29fb4:	cmp	r0, #32
   29fb8:	bls	29ff0 <main@@Base+0x142b4>
   29fbc:	mov	sl, r1
   29fc0:	b	2a010 <main@@Base+0x142d4>
   29fc4:	mov	r0, r8
   29fc8:	mov	r1, sl
   29fcc:	b	2a108 <main@@Base+0x143cc>
   29fd0:	mov	r0, r8
   29fd4:	b	2a108 <main@@Base+0x143cc>
   29fd8:	mov	r1, #0
   29fdc:	cmp	r2, #1
   29fe0:	beq	29f70 <main@@Base+0x14234>
   29fe4:	cmp	r2, #2
   29fe8:	beq	29f68 <main@@Base+0x1422c>
   29fec:	b	2a100 <main@@Base+0x143c4>
   29ff0:	bne	2a000 <main@@Base+0x142c4>
   29ff4:	ldrb	r0, [sl, #21]!
   29ff8:	cmp	r0, #32
   29ffc:	bhi	2a010 <main@@Base+0x142d4>
   2a000:	mov	r0, r8
   2a004:	mov	r2, r9
   2a008:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a00c:	mov	sl, r0
   2a010:	cmp	sl, r9
   2a014:	beq	2a048 <main@@Base+0x1430c>
   2a018:	ldrb	r0, [sl]
   2a01c:	cmp	r0, #58	; 0x3a
   2a020:	bne	2a048 <main@@Base+0x1430c>
   2a024:	add	r1, sl, #1
   2a028:	sub	r0, r9, r1
   2a02c:	cmp	r0, #2
   2a030:	blt	2a070 <main@@Base+0x14334>
   2a034:	ldrb	r0, [r1]
   2a038:	cmp	r0, #32
   2a03c:	bls	2a060 <main@@Base+0x14324>
   2a040:	mov	sl, r1
   2a044:	b	2a080 <main@@Base+0x14344>
   2a048:	mov	r0, r8
   2a04c:	mov	r1, sl
   2a050:	mov	r2, r9
   2a054:	mov	r3, #4
   2a058:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a05c:	b	2a07c <main@@Base+0x14340>
   2a060:	bne	2a070 <main@@Base+0x14334>
   2a064:	ldrb	r0, [sl, #2]!
   2a068:	cmp	r0, #32
   2a06c:	bhi	2a080 <main@@Base+0x14344>
   2a070:	mov	r0, r8
   2a074:	mov	r2, r9
   2a078:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a07c:	mov	sl, r0
   2a080:	cmp	r4, sl
   2a084:	beq	2a100 <main@@Base+0x143c4>
   2a088:	mov	r6, #0
   2a08c:	cmp	sl, r9
   2a090:	str	r6, [sp, #28]
   2a094:	str	r6, [sp, #24]
   2a098:	str	r6, [sp, #16]
   2a09c:	str	r6, [sp, #20]
   2a0a0:	beq	2a1d0 <main@@Base+0x14494>
   2a0a4:	add	r0, sp, #24
   2a0a8:	mov	r1, sl
   2a0ac:	mov	r2, r9
   2a0b0:	add	r3, sp, #20
   2a0b4:	str	r0, [sp]
   2a0b8:	mov	r0, r8
   2a0bc:	bl	334d0 <flatcc_json_parser_integer@@Base>
   2a0c0:	cmp	r0, sl
   2a0c4:	beq	2a1d8 <main@@Base+0x1449c>
   2a0c8:	ldr	r2, [sp, #20]
   2a0cc:	mov	r4, r0
   2a0d0:	ldr	r0, [sp, #24]
   2a0d4:	ldr	r1, [sp, #28]
   2a0d8:	cmp	r2, #0
   2a0dc:	beq	2a1e0 <main@@Base+0x144a4>
   2a0e0:	subs	r2, r0, #-2147483647	; 0x80000001
   2a0e4:	sbcs	r1, r1, #0
   2a0e8:	bcc	2a208 <main@@Base+0x144cc>
   2a0ec:	mov	r0, r8
   2a0f0:	mov	r1, r4
   2a0f4:	mov	r2, r9
   2a0f8:	mov	r3, #8
   2a0fc:	b	2a1fc <main@@Base+0x144c0>
   2a100:	mov	r0, r8
   2a104:	mov	r1, r4
   2a108:	mov	r2, r9
   2a10c:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   2a110:	ldr	r5, [sp, #12]
   2a114:	mov	r4, r0
   2a118:	sub	r0, r9, r4
   2a11c:	cmp	r0, #2
   2a120:	blt	2a14c <main@@Base+0x14410>
   2a124:	ldrb	r0, [r4]
   2a128:	cmp	r0, #32
   2a12c:	bls	2a138 <main@@Base+0x143fc>
   2a130:	mov	r2, r4
   2a134:	b	2a160 <main@@Base+0x14424>
   2a138:	bne	2a14c <main@@Base+0x14410>
   2a13c:	mov	r2, r4
   2a140:	ldrb	r0, [r2, #1]!
   2a144:	cmp	r0, #32
   2a148:	bhi	2a160 <main@@Base+0x14424>
   2a14c:	mov	r0, r8
   2a150:	mov	r1, r4
   2a154:	mov	r2, r9
   2a158:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a15c:	mov	r2, r0
   2a160:	cmp	r2, r9
   2a164:	beq	2a290 <main@@Base+0x14554>
   2a168:	ldrb	r0, [r2]
   2a16c:	cmp	r0, #44	; 0x2c
   2a170:	bne	2a298 <main@@Base+0x1455c>
   2a174:	add	r1, r2, #1
   2a178:	sub	r0, r9, r1
   2a17c:	cmp	r0, #2
   2a180:	blt	2a1a8 <main@@Base+0x1446c>
   2a184:	ldrb	r0, [r1]
   2a188:	cmp	r0, #32
   2a18c:	bls	2a198 <main@@Base+0x1445c>
   2a190:	mov	r2, r1
   2a194:	b	2a1b8 <main@@Base+0x1447c>
   2a198:	bne	2a1a8 <main@@Base+0x1446c>
   2a19c:	ldrb	r0, [r2, #2]!
   2a1a0:	cmp	r0, #32
   2a1a4:	bhi	2a1b8 <main@@Base+0x1447c>
   2a1a8:	mov	r0, r8
   2a1ac:	mov	r2, r9
   2a1b0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a1b4:	mov	r2, r0
   2a1b8:	cmp	r2, r9
   2a1bc:	beq	2a2c4 <main@@Base+0x14588>
   2a1c0:	ldrb	r0, [r2]
   2a1c4:	cmp	r0, #125	; 0x7d
   2a1c8:	bne	29d4c <main@@Base+0x14010>
   2a1cc:	b	2a2a0 <main@@Base+0x14564>
   2a1d0:	mov	r4, r9
   2a1d4:	b	2a218 <main@@Base+0x144dc>
   2a1d8:	mov	r4, sl
   2a1dc:	b	2a218 <main@@Base+0x144dc>
   2a1e0:	subs	r2, r0, #-2147483648	; 0x80000000
   2a1e4:	sbcs	r1, r1, #0
   2a1e8:	bcc	2a210 <main@@Base+0x144d4>
   2a1ec:	mov	r0, r8
   2a1f0:	mov	r1, r4
   2a1f4:	mov	r2, r9
   2a1f8:	mov	r3, #7
   2a1fc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a200:	mov	r4, r0
   2a204:	b	2a218 <main@@Base+0x144dc>
   2a208:	rsb	r6, r0, #0
   2a20c:	b	2a214 <main@@Base+0x144d8>
   2a210:	mov	r6, r0
   2a214:	str	r6, [sp, #16]
   2a218:	cmp	sl, r4
   2a21c:	bne	2a254 <main@@Base+0x14518>
   2a220:	movw	r3, #33520	; 0x82f0
   2a224:	add	r0, sp, #16
   2a228:	mov	r1, sl
   2a22c:	mov	r2, r9
   2a230:	str	r0, [sp]
   2a234:	mov	r0, r8
   2a238:	movt	r3, #5
   2a23c:	bl	2330c <main@@Base+0xd5d0>
   2a240:	mov	r4, r0
   2a244:	cmp	r0, sl
   2a248:	cmpne	r4, r9
   2a24c:	beq	2a35c <main@@Base+0x14620>
   2a250:	ldr	r6, [sp, #16]
   2a254:	ldr	r5, [sp, #12]
   2a258:	cmp	r6, #0
   2a25c:	bne	2a26c <main@@Base+0x14530>
   2a260:	ldrb	r0, [r8, #8]
   2a264:	tst	r0, #2
   2a268:	beq	2a118 <main@@Base+0x143dc>
   2a26c:	ldr	r0, [r8]
   2a270:	mov	r1, #0
   2a274:	mov	r2, #4
   2a278:	mov	r3, #4
   2a27c:	bl	2ea78 <flatcc_builder_table_add@@Base>
   2a280:	cmp	r0, #0
   2a284:	beq	2a35c <main@@Base+0x14620>
   2a288:	str	r6, [r0]
   2a28c:	b	2a118 <main@@Base+0x143dc>
   2a290:	mov	r4, r9
   2a294:	b	29794 <main@@Base+0x13a58>
   2a298:	cmp	r0, #125	; 0x7d
   2a29c:	bne	2a308 <main@@Base+0x145cc>
   2a2a0:	add	r1, r2, #1
   2a2a4:	sub	r0, r9, r1
   2a2a8:	cmp	r0, #2
   2a2ac:	blt	2a330 <main@@Base+0x145f4>
   2a2b0:	ldrb	r0, [r1]
   2a2b4:	cmp	r0, #32
   2a2b8:	bls	2a31c <main@@Base+0x145e0>
   2a2bc:	mov	r4, r1
   2a2c0:	b	29794 <main@@Base+0x13a58>
   2a2c4:	mov	r0, r8
   2a2c8:	mov	r1, r9
   2a2cc:	b	2a310 <main@@Base+0x145d4>
   2a2d0:	mov	r0, r8
   2a2d4:	mov	r1, r3
   2a2d8:	mov	r2, r9
   2a2dc:	mov	r3, #10
   2a2e0:	b	29740 <main@@Base+0x13a04>
   2a2e4:	bne	2a2f8 <main@@Base+0x145bc>
   2a2e8:	ldrb	r0, [r3, #2]!
   2a2ec:	cmp	r0, #32
   2a2f0:	mov	r4, r3
   2a2f4:	bhi	29748 <main@@Base+0x13a0c>
   2a2f8:	mov	r0, r8
   2a2fc:	mov	r2, r9
   2a300:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a304:	b	29744 <main@@Base+0x13a08>
   2a308:	mov	r0, r8
   2a30c:	mov	r1, r2
   2a310:	mov	r2, r9
   2a314:	mov	r3, #10
   2a318:	b	2978c <main@@Base+0x13a50>
   2a31c:	bne	2a330 <main@@Base+0x145f4>
   2a320:	ldrb	r0, [r2, #2]!
   2a324:	cmp	r0, #32
   2a328:	mov	r4, r2
   2a32c:	bhi	29794 <main@@Base+0x13a58>
   2a330:	mov	r0, r8
   2a334:	mov	r2, r9
   2a338:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a33c:	b	29790 <main@@Base+0x13a54>
   2a340:	mov	r1, r2
   2a344:	mov	r0, r8
   2a348:	mov	r2, r9
   2a34c:	mov	r3, #33	; 0x21
   2a350:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a354:	ldr	r5, [sp, #12]
   2a358:	b	29744 <main@@Base+0x13a08>
   2a35c:	ldr	r5, [sp, #12]
   2a360:	b	297a0 <main@@Base+0x13a64>
   2a364:	add	r0, r0, #1
   2a368:	uxtb	r1, r0
   2a36c:	cmp	r1, #12
   2a370:	movhi	r0, #0
   2a374:	bxhi	lr
   2a378:	movw	r1, #16784	; 0x4190
   2a37c:	sxtb	r0, r0
   2a380:	movt	r1, #4
   2a384:	ldr	r0, [r1, r0, lsl #2]
   2a388:	bx	lr
   2a38c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a390:	add	fp, sp, #28
   2a394:	sub	sp, sp, #36	; 0x24
   2a398:	mov	r5, r0
   2a39c:	mov	r0, #0
   2a3a0:	mov	sl, r2
   2a3a4:	mov	r4, r1
   2a3a8:	mov	r1, #4
   2a3ac:	mov	r2, #4
   2a3b0:	str	r3, [sp, #12]
   2a3b4:	str	r0, [r3]
   2a3b8:	ldr	r0, [r5]
   2a3bc:	bl	2ca4c <flatcc_builder_start_struct@@Base>
   2a3c0:	cmp	r0, #0
   2a3c4:	beq	2a448 <main@@Base+0x1470c>
   2a3c8:	cmp	r4, sl
   2a3cc:	beq	2a404 <main@@Base+0x146c8>
   2a3d0:	ldrb	r1, [r4]
   2a3d4:	cmp	r1, #123	; 0x7b
   2a3d8:	bne	2a404 <main@@Base+0x146c8>
   2a3dc:	add	r1, r4, #1
   2a3e0:	str	r0, [sp, #8]
   2a3e4:	sub	r0, sl, r1
   2a3e8:	cmp	r0, #2
   2a3ec:	blt	2a47c <main@@Base+0x14740>
   2a3f0:	ldrb	r0, [r1]
   2a3f4:	cmp	r0, #32
   2a3f8:	bls	2a46c <main@@Base+0x14730>
   2a3fc:	mov	r4, r1
   2a400:	b	2a48c <main@@Base+0x14750>
   2a404:	mov	r0, r5
   2a408:	mov	r1, r4
   2a40c:	mov	r2, sl
   2a410:	mov	r3, #21
   2a414:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a418:	mov	r4, r0
   2a41c:	cmp	r4, sl
   2a420:	mov	r1, sl
   2a424:	beq	2a44c <main@@Base+0x14710>
   2a428:	ldr	r0, [r5]
   2a42c:	bl	2caec <flatcc_builder_end_struct@@Base>
   2a430:	ldr	r1, [sp, #12]
   2a434:	cmp	r0, #0
   2a438:	str	r0, [r1]
   2a43c:	mov	r1, r4
   2a440:	bne	2a460 <main@@Base+0x14724>
   2a444:	b	2a44c <main@@Base+0x14710>
   2a448:	mov	r1, r4
   2a44c:	mov	r0, r5
   2a450:	mov	r2, sl
   2a454:	mov	r3, #33	; 0x21
   2a458:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a45c:	mov	r4, r0
   2a460:	mov	r0, r4
   2a464:	sub	sp, fp, #28
   2a468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a46c:	bne	2a47c <main@@Base+0x14740>
   2a470:	ldrb	r0, [r4, #2]!
   2a474:	cmp	r0, #32
   2a478:	bhi	2a48c <main@@Base+0x14750>
   2a47c:	mov	r0, r5
   2a480:	mov	r2, sl
   2a484:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a488:	mov	r4, r0
   2a48c:	cmp	r4, sl
   2a490:	mov	r3, sl
   2a494:	beq	2a4d8 <main@@Base+0x1479c>
   2a498:	ldrb	r0, [r4]
   2a49c:	cmp	r0, #125	; 0x7d
   2a4a0:	bne	2a4d4 <main@@Base+0x14798>
   2a4a4:	add	r1, r4, #1
   2a4a8:	sub	r0, sl, r1
   2a4ac:	cmp	r0, #2
   2a4b0:	blt	2a974 <main@@Base+0x14c38>
   2a4b4:	ldrb	r0, [r1]
   2a4b8:	cmp	r0, #32
   2a4bc:	bhi	2a938 <main@@Base+0x14bfc>
   2a4c0:	bne	2a974 <main@@Base+0x14c38>
   2a4c4:	ldrb	r0, [r4, #2]!
   2a4c8:	cmp	r0, #32
   2a4cc:	bhi	2a41c <main@@Base+0x146e0>
   2a4d0:	b	2a974 <main@@Base+0x14c38>
   2a4d4:	mov	r3, r4
   2a4d8:	cmp	r3, sl
   2a4dc:	mov	r9, sl
   2a4e0:	beq	2a510 <main@@Base+0x147d4>
   2a4e4:	ldrb	r0, [r3]
   2a4e8:	cmp	r0, #34	; 0x22
   2a4ec:	bne	2a4f8 <main@@Base+0x147bc>
   2a4f0:	add	r9, r3, #1
   2a4f4:	b	2a510 <main@@Base+0x147d4>
   2a4f8:	mov	r1, r3
   2a4fc:	mov	r0, r5
   2a500:	mov	r2, sl
   2a504:	mov	r3, #5
   2a508:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a50c:	mov	r9, r0
   2a510:	sub	r0, sl, r9
   2a514:	mov	r1, #8
   2a518:	cmp	r0, #8
   2a51c:	movcs	r0, r1
   2a520:	and	r0, r0, #15
   2a524:	sub	r3, r0, #1
   2a528:	cmp	r3, #7
   2a52c:	bhi	2a670 <main@@Base+0x14934>
   2a530:	add	r6, pc, #36	; 0x24
   2a534:	mov	r8, r5
   2a538:	mov	r0, #0
   2a53c:	mov	ip, #0
   2a540:	mov	lr, #0
   2a544:	mov	r7, #0
   2a548:	mov	r2, #0
   2a54c:	mov	r5, #0
   2a550:	mov	r4, #0
   2a554:	mov	r1, #0
   2a558:	ldr	pc, [r6, r3, lsl #2]
   2a55c:	andeq	sl, r2, r0, asr #11
   2a560:			; <UNDEFINED> instruction: 0x0002a5b8
   2a564:			; <UNDEFINED> instruction: 0x0002a5b0
   2a568:	andeq	sl, r2, r8, lsr #11
   2a56c:	muleq	r2, ip, r5
   2a570:	muleq	r2, r0, r5
   2a574:	andeq	sl, r2, r0, lsl #11
   2a578:	andeq	sl, r2, ip, ror r5
   2a57c:	ldrb	ip, [r9, #7]
   2a580:	ldrb	r1, [r9, #6]
   2a584:	mov	lr, r0
   2a588:	orr	r1, ip, r1, lsl #8
   2a58c:	mov	r0, r1
   2a590:	ldrb	r1, [r9, #5]
   2a594:	mov	r7, lr
   2a598:	orr	r0, r0, r1, lsl #16
   2a59c:	ldrb	r1, [r9, #4]
   2a5a0:	mov	r2, r7
   2a5a4:	orr	r0, r0, r1, lsl #24
   2a5a8:	ldrb	r1, [r9, #3]
   2a5ac:	orr	r5, r1, r2
   2a5b0:	ldrb	r1, [r9, #2]
   2a5b4:	orr	r4, r5, r1, lsl #8
   2a5b8:	ldrb	r1, [r9, #1]
   2a5bc:	orr	r1, r4, r1, lsl #16
   2a5c0:	movw	r2, #29285	; 0x7265
   2a5c4:	mov	r5, r8
   2a5c8:	movt	r2, #29535	; 0x735f
   2a5cc:	eor	r0, r0, r2
   2a5d0:	ldrb	r2, [r9]
   2a5d4:	orr	r1, r1, r2, lsl #24
   2a5d8:	movw	r2, #28523	; 0x6f6b
   2a5dc:	movt	r2, #25199	; 0x626f
   2a5e0:	eor	r1, r1, r2
   2a5e4:	orrs	r0, r0, r1
   2a5e8:	bne	2a670 <main@@Base+0x14934>
   2a5ec:	add	r8, r9, #8
   2a5f0:	mov	r1, #8
   2a5f4:	sub	r0, sl, r8
   2a5f8:	cmp	r0, #8
   2a5fc:	movcc	r1, r0
   2a600:	and	r2, r1, #15
   2a604:	sub	r1, r2, #2
   2a608:	cmp	r1, #7
   2a60c:	bcs	2a67c <main@@Base+0x14940>
   2a610:	ldrb	r1, [r9, #9]
   2a614:	lsl	r2, r1, #16
   2a618:	mov	r1, #0
   2a61c:	ldrb	r3, [r8]
   2a620:	orr	r2, r2, r3, lsl #24
   2a624:	movw	r3, #0
   2a628:	movt	r3, #24932	; 0x6164
   2a62c:	eor	r2, r2, r3
   2a630:	orrs	r1, r1, r2
   2a634:	bne	2a7a0 <main@@Base+0x14a64>
   2a638:	cmp	r0, #3
   2a63c:	blt	2a7a0 <main@@Base+0x14a64>
   2a640:	ldrb	r0, [r9, #10]
   2a644:	cmp	r0, #34	; 0x22
   2a648:	bne	2a7a0 <main@@Base+0x14a64>
   2a64c:	add	r1, r9, #11
   2a650:	sub	r0, sl, r1
   2a654:	cmp	r0, #2
   2a658:	blt	2a6a0 <main@@Base+0x14964>
   2a65c:	ldrb	r0, [r1]
   2a660:	cmp	r0, #32
   2a664:	bls	2a690 <main@@Base+0x14954>
   2a668:	mov	r9, r1
   2a66c:	b	2a6b0 <main@@Base+0x14974>
   2a670:	mov	r0, r5
   2a674:	mov	r1, r9
   2a678:	b	2a7a8 <main@@Base+0x14a6c>
   2a67c:	cmp	r2, #1
   2a680:	mov	r1, #0
   2a684:	mov	r2, #0
   2a688:	beq	2a61c <main@@Base+0x148e0>
   2a68c:	b	2a7a0 <main@@Base+0x14a64>
   2a690:	bne	2a6a0 <main@@Base+0x14964>
   2a694:	ldrb	r0, [r9, #12]!
   2a698:	cmp	r0, #32
   2a69c:	bhi	2a6b0 <main@@Base+0x14974>
   2a6a0:	mov	r0, r5
   2a6a4:	mov	r2, sl
   2a6a8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a6ac:	mov	r9, r0
   2a6b0:	cmp	r9, sl
   2a6b4:	beq	2a6e8 <main@@Base+0x149ac>
   2a6b8:	ldrb	r0, [r9]
   2a6bc:	cmp	r0, #58	; 0x3a
   2a6c0:	bne	2a6e8 <main@@Base+0x149ac>
   2a6c4:	add	r1, r9, #1
   2a6c8:	sub	r0, sl, r1
   2a6cc:	cmp	r0, #2
   2a6d0:	blt	2a710 <main@@Base+0x149d4>
   2a6d4:	ldrb	r0, [r1]
   2a6d8:	cmp	r0, #32
   2a6dc:	bls	2a700 <main@@Base+0x149c4>
   2a6e0:	mov	r9, r1
   2a6e4:	b	2a720 <main@@Base+0x149e4>
   2a6e8:	mov	r0, r5
   2a6ec:	mov	r1, r9
   2a6f0:	mov	r2, sl
   2a6f4:	mov	r3, #4
   2a6f8:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a6fc:	b	2a71c <main@@Base+0x149e0>
   2a700:	bne	2a710 <main@@Base+0x149d4>
   2a704:	ldrb	r0, [r9, #2]!
   2a708:	cmp	r0, #32
   2a70c:	bhi	2a720 <main@@Base+0x149e4>
   2a710:	mov	r0, r5
   2a714:	mov	r2, sl
   2a718:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a71c:	mov	r9, r0
   2a720:	cmp	r8, r9
   2a724:	beq	2a7a0 <main@@Base+0x14a64>
   2a728:	mov	r8, #0
   2a72c:	cmp	r9, sl
   2a730:	str	r8, [sp, #28]
   2a734:	str	r8, [sp, #24]
   2a738:	str	r8, [sp, #16]
   2a73c:	str	r8, [sp, #20]
   2a740:	beq	2a86c <main@@Base+0x14b30>
   2a744:	add	r0, sp, #24
   2a748:	mov	r1, r9
   2a74c:	mov	r2, sl
   2a750:	add	r3, sp, #20
   2a754:	str	r0, [sp]
   2a758:	mov	r0, r5
   2a75c:	bl	334d0 <flatcc_json_parser_integer@@Base>
   2a760:	cmp	r0, r9
   2a764:	beq	2a878 <main@@Base+0x14b3c>
   2a768:	ldr	r3, [sp, #20]
   2a76c:	mov	r2, r0
   2a770:	ldr	r0, [sp, #24]
   2a774:	ldr	r1, [sp, #28]
   2a778:	cmp	r3, #0
   2a77c:	beq	2a884 <main@@Base+0x14b48>
   2a780:	subs	r3, r0, #-2147483647	; 0x80000001
   2a784:	sbcs	r1, r1, #0
   2a788:	bcc	2a8b0 <main@@Base+0x14b74>
   2a78c:	mov	r1, r2
   2a790:	mov	r0, r5
   2a794:	mov	r2, sl
   2a798:	mov	r3, #8
   2a79c:	b	2a8a0 <main@@Base+0x14b64>
   2a7a0:	mov	r0, r5
   2a7a4:	mov	r1, r8
   2a7a8:	mov	r2, sl
   2a7ac:	bl	31d30 <flatcc_json_parser_unmatched_symbol@@Base>
   2a7b0:	mov	r2, r0
   2a7b4:	sub	r0, sl, r2
   2a7b8:	cmp	r0, #2
   2a7bc:	blt	2a7e8 <main@@Base+0x14aac>
   2a7c0:	ldrb	r0, [r2]
   2a7c4:	cmp	r0, #32
   2a7c8:	bls	2a7d4 <main@@Base+0x14a98>
   2a7cc:	mov	r3, r2
   2a7d0:	b	2a7fc <main@@Base+0x14ac0>
   2a7d4:	bne	2a7e8 <main@@Base+0x14aac>
   2a7d8:	mov	r3, r2
   2a7dc:	ldrb	r0, [r3, #1]!
   2a7e0:	cmp	r0, #32
   2a7e4:	bhi	2a7fc <main@@Base+0x14ac0>
   2a7e8:	mov	r1, r2
   2a7ec:	mov	r0, r5
   2a7f0:	mov	r2, sl
   2a7f4:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a7f8:	mov	r3, r0
   2a7fc:	cmp	r3, sl
   2a800:	beq	2a90c <main@@Base+0x14bd0>
   2a804:	ldrb	r0, [r3]
   2a808:	cmp	r0, #44	; 0x2c
   2a80c:	bne	2a914 <main@@Base+0x14bd8>
   2a810:	add	r1, r3, #1
   2a814:	sub	r0, sl, r1
   2a818:	cmp	r0, #2
   2a81c:	blt	2a844 <main@@Base+0x14b08>
   2a820:	ldrb	r0, [r1]
   2a824:	cmp	r0, #32
   2a828:	bls	2a834 <main@@Base+0x14af8>
   2a82c:	mov	r3, r1
   2a830:	b	2a854 <main@@Base+0x14b18>
   2a834:	bne	2a844 <main@@Base+0x14b08>
   2a838:	ldrb	r0, [r3, #2]!
   2a83c:	cmp	r0, #32
   2a840:	bhi	2a854 <main@@Base+0x14b18>
   2a844:	mov	r0, r5
   2a848:	mov	r2, sl
   2a84c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a850:	mov	r3, r0
   2a854:	cmp	r3, sl
   2a858:	beq	2a940 <main@@Base+0x14c04>
   2a85c:	ldrb	r0, [r3]
   2a860:	cmp	r0, #125	; 0x7d
   2a864:	bne	2a4d8 <main@@Base+0x1479c>
   2a868:	b	2a91c <main@@Base+0x14be0>
   2a86c:	ldr	r0, [sp, #8]
   2a870:	mov	r2, sl
   2a874:	b	2a8c4 <main@@Base+0x14b88>
   2a878:	ldr	r0, [sp, #8]
   2a87c:	mov	r2, r9
   2a880:	b	2a8c4 <main@@Base+0x14b88>
   2a884:	subs	r3, r0, #-2147483648	; 0x80000000
   2a888:	sbcs	r1, r1, #0
   2a88c:	bcc	2a8b8 <main@@Base+0x14b7c>
   2a890:	mov	r1, r2
   2a894:	mov	r0, r5
   2a898:	mov	r2, sl
   2a89c:	mov	r3, #7
   2a8a0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a8a4:	mov	r2, r0
   2a8a8:	ldr	r0, [sp, #8]
   2a8ac:	b	2a8c4 <main@@Base+0x14b88>
   2a8b0:	rsb	r8, r0, #0
   2a8b4:	b	2a8bc <main@@Base+0x14b80>
   2a8b8:	mov	r8, r0
   2a8bc:	ldr	r0, [sp, #8]
   2a8c0:	str	r8, [sp, #16]
   2a8c4:	cmp	r9, r2
   2a8c8:	bne	2a904 <main@@Base+0x14bc8>
   2a8cc:	movw	r3, #33544	; 0x8308
   2a8d0:	add	r0, sp, #16
   2a8d4:	mov	r1, r9
   2a8d8:	mov	r2, sl
   2a8dc:	str	r0, [sp]
   2a8e0:	mov	r0, r5
   2a8e4:	movt	r3, #5
   2a8e8:	bl	2330c <main@@Base+0xd5d0>
   2a8ec:	mov	r2, r0
   2a8f0:	cmp	r0, r9
   2a8f4:	cmpne	r2, sl
   2a8f8:	beq	2a984 <main@@Base+0x14c48>
   2a8fc:	ldr	r8, [sp, #16]
   2a900:	ldr	r0, [sp, #8]
   2a904:	str	r8, [r0]
   2a908:	b	2a7b4 <main@@Base+0x14a78>
   2a90c:	mov	r1, sl
   2a910:	b	2a44c <main@@Base+0x14710>
   2a914:	cmp	r0, #125	; 0x7d
   2a918:	bne	2a94c <main@@Base+0x14c10>
   2a91c:	add	r1, r3, #1
   2a920:	sub	r0, sl, r1
   2a924:	cmp	r0, #2
   2a928:	blt	2a974 <main@@Base+0x14c38>
   2a92c:	ldrb	r0, [r1]
   2a930:	cmp	r0, #32
   2a934:	bls	2a960 <main@@Base+0x14c24>
   2a938:	mov	r4, r1
   2a93c:	b	2a41c <main@@Base+0x146e0>
   2a940:	mov	r0, r5
   2a944:	mov	r1, sl
   2a948:	b	2a954 <main@@Base+0x14c18>
   2a94c:	mov	r0, r5
   2a950:	mov	r1, r3
   2a954:	mov	r2, sl
   2a958:	mov	r3, #10
   2a95c:	b	2a414 <main@@Base+0x146d8>
   2a960:	bne	2a974 <main@@Base+0x14c38>
   2a964:	ldrb	r0, [r3, #2]!
   2a968:	cmp	r0, #32
   2a96c:	mov	r4, r3
   2a970:	bhi	2a41c <main@@Base+0x146e0>
   2a974:	mov	r0, r5
   2a978:	mov	r2, sl
   2a97c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2a980:	b	2a418 <main@@Base+0x146dc>
   2a984:	mov	r1, r2
   2a988:	mov	r0, r5
   2a98c:	mov	r2, sl
   2a990:	mov	r3, #33	; 0x21
   2a994:	b	2a414 <main@@Base+0x146d8>
   2a998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a99c:	add	fp, sp, #28
   2a9a0:	sub	sp, sp, #44	; 0x2c
   2a9a4:	mov	r6, r2
   2a9a8:	ldr	r2, [fp, #8]
   2a9ac:	mov	r5, r0
   2a9b0:	mov	r0, #0
   2a9b4:	mov	sl, r3
   2a9b8:	cmp	r1, r6
   2a9bc:	strh	r0, [r2]
   2a9c0:	beq	2a9ec <main@@Base+0x14cb0>
   2a9c4:	ldrb	r0, [r1]
   2a9c8:	cmp	r0, #34	; 0x22
   2a9cc:	bne	2a9d8 <main@@Base+0x14c9c>
   2a9d0:	add	r1, r1, #1
   2a9d4:	b	2a9ec <main@@Base+0x14cb0>
   2a9d8:	mov	r0, r5
   2a9dc:	mov	r2, r6
   2a9e0:	mov	r3, #5
   2a9e4:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2a9e8:	mov	r1, r0
   2a9ec:	sub	r0, r6, r1
   2a9f0:	cmp	r0, #2
   2a9f4:	blt	2aa20 <main@@Base+0x14ce4>
   2a9f8:	ldrb	r0, [r1]
   2a9fc:	cmp	r0, #32
   2aa00:	bls	2aa0c <main@@Base+0x14cd0>
   2aa04:	mov	r7, r1
   2aa08:	b	2aa30 <main@@Base+0x14cf4>
   2aa0c:	bne	2aa20 <main@@Base+0x14ce4>
   2aa10:	mov	r7, r1
   2aa14:	ldrb	r0, [r7, #1]!
   2aa18:	cmp	r0, #32
   2aa1c:	bhi	2aa30 <main@@Base+0x14cf4>
   2aa20:	mov	r0, r5
   2aa24:	mov	r2, r6
   2aa28:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   2aa2c:	mov	r7, r0
   2aa30:	cmp	r7, r6
   2aa34:	beq	2ab38 <main@@Base+0x14dfc>
   2aa38:	add	r0, sl, #4
   2aa3c:	mov	r1, #0
   2aa40:	add	r8, sp, #32
   2aa44:	add	r9, sp, #28
   2aa48:	str	sl, [sp, #16]
   2aa4c:	str	r1, [sp, #20]
   2aa50:	str	r0, [sp, #12]
   2aa54:	ldr	r4, [sl]
   2aa58:	mov	sl, r0
   2aa5c:	add	r0, sp, #24
   2aa60:	mov	r1, r7
   2aa64:	mov	r2, r6
   2aa68:	mov	r3, r9
   2aa6c:	str	r8, [sp]
   2aa70:	str	r0, [sp, #4]
   2aa74:	mov	r0, r5
   2aa78:	blx	r4
   2aa7c:	cmp	r0, r6
   2aa80:	beq	2ab38 <main@@Base+0x14dfc>
   2aa84:	mov	r4, r0
   2aa88:	cmp	r0, r7
   2aa8c:	bne	2aaa0 <main@@Base+0x14d64>
   2aa90:	ldr	r4, [sl], #4
   2aa94:	cmp	r4, #0
   2aa98:	bne	2aa5c <main@@Base+0x14d20>
   2aa9c:	b	2ab40 <main@@Base+0x14e04>
   2aaa0:	ldr	r0, [sp, #28]
   2aaa4:	cmp	r0, #0
   2aaa8:	beq	2aac8 <main@@Base+0x14d8c>
   2aaac:	mov	r0, r5
   2aab0:	mov	r1, r4
   2aab4:	mov	r2, r6
   2aab8:	mov	r3, #8
   2aabc:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2aac0:	ldr	sl, [sp, #16]
   2aac4:	b	2ab00 <main@@Base+0x14dc4>
   2aac8:	ldr	r0, [sp, #32]
   2aacc:	ldr	r1, [sp, #36]	; 0x24
   2aad0:	ldr	sl, [sp, #16]
   2aad4:	subs	r2, r0, #65536	; 0x10000
   2aad8:	sbcs	r1, r1, #0
   2aadc:	bcc	2aaf8 <main@@Base+0x14dbc>
   2aae0:	mov	r0, r5
   2aae4:	mov	r1, r4
   2aae8:	mov	r2, r6
   2aaec:	mov	r3, #7
   2aaf0:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2aaf4:	b	2ab00 <main@@Base+0x14dc4>
   2aaf8:	str	r0, [sp, #20]
   2aafc:	mov	r0, r4
   2ab00:	cmp	r0, r6
   2ab04:	beq	2ab38 <main@@Base+0x14dfc>
   2ab08:	ldr	r0, [fp, #8]
   2ab0c:	ldr	r2, [sp, #20]
   2ab10:	mov	r7, r4
   2ab14:	mov	r1, r0
   2ab18:	ldrh	r0, [r0]
   2ab1c:	add	r0, r0, r2
   2ab20:	strh	r0, [r1]
   2ab24:	ldr	r0, [sp, #24]
   2ab28:	cmp	r0, #0
   2ab2c:	ldr	r0, [sp, #12]
   2ab30:	bne	2aa54 <main@@Base+0x14d18>
   2ab34:	b	2ab58 <main@@Base+0x14e1c>
   2ab38:	mov	r4, r6
   2ab3c:	b	2ab58 <main@@Base+0x14e1c>
   2ab40:	mov	r0, r5
   2ab44:	mov	r1, r7
   2ab48:	mov	r2, r6
   2ab4c:	mov	r3, #23
   2ab50:	bl	316cc <flatcc_json_parser_set_error@@Base>
   2ab54:	mov	r4, r0
   2ab58:	mov	r0, r4
   2ab5c:	sub	sp, fp, #28
   2ab60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab64:	push	{r4, r5, r6, sl, fp, lr}
   2ab68:	add	fp, sp, #16
   2ab6c:	sub	sp, sp, #16
   2ab70:	mov	r5, r0
   2ab74:	movw	r0, #15801	; 0x3db9
   2ab78:	mov	r4, r1
   2ab7c:	mov	r6, #1
   2ab80:	mov	r1, #0
   2ab84:	mov	r3, #0
   2ab88:	movt	r0, #4
   2ab8c:	mov	r2, r4
   2ab90:	stm	sp, {r0, r6}
   2ab94:	mov	r0, r5
   2ab98:	bl	38430 <flatcc_json_printer_float_struct_field@@Base>
   2ab9c:	movw	r0, #25743	; 0x648f
   2aba0:	mov	r1, #1
   2aba4:	mov	r2, r4
   2aba8:	mov	r3, #4
   2abac:	movt	r0, #4
   2abb0:	stm	sp, {r0, r6}
   2abb4:	mov	r0, r5
   2abb8:	bl	38430 <flatcc_json_printer_float_struct_field@@Base>
   2abbc:	movw	r0, #16242	; 0x3f72
   2abc0:	mov	r1, #2
   2abc4:	mov	r2, r4
   2abc8:	mov	r3, #8
   2abcc:	movt	r0, #4
   2abd0:	stm	sp, {r0, r6}
   2abd4:	mov	r0, r5
   2abd8:	bl	38430 <flatcc_json_printer_float_struct_field@@Base>
   2abdc:	movw	r0, #16244	; 0x3f74
   2abe0:	mov	r6, #5
   2abe4:	mov	r1, #3
   2abe8:	mov	r2, r4
   2abec:	mov	r3, #16
   2abf0:	movt	r0, #4
   2abf4:	stm	sp, {r0, r6}
   2abf8:	mov	r0, r5
   2abfc:	bl	38494 <flatcc_json_printer_double_struct_field@@Base>
   2ac00:	movw	r0, #44128	; 0xac60
   2ac04:	movw	r1, #16250	; 0x3f7a
   2ac08:	mov	r2, r4
   2ac0c:	mov	r3, #24
   2ac10:	movt	r1, #4
   2ac14:	movt	r0, #2
   2ac18:	stm	sp, {r1, r6}
   2ac1c:	str	r0, [sp, #8]
   2ac20:	mov	r0, r5
   2ac24:	mov	r1, #4
   2ac28:	bl	386e8 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2ac2c:	movw	r0, #44528	; 0xadf0
   2ac30:	movw	r1, #16256	; 0x3f80
   2ac34:	mov	r2, r4
   2ac38:	mov	r3, #26
   2ac3c:	movt	r1, #4
   2ac40:	movt	r0, #2
   2ac44:	stm	sp, {r1, r6}
   2ac48:	str	r0, [sp, #8]
   2ac4c:	mov	r0, r5
   2ac50:	mov	r1, #5
   2ac54:	bl	3f6bc <flatcc_json_printer_embedded_struct_field@@Base>
   2ac58:	sub	sp, fp, #16
   2ac5c:	pop	{r4, r5, r6, sl, fp, pc}
   2ac60:	push	{r4, r5, r6, r7, fp, lr}
   2ac64:	add	fp, sp, #16
   2ac68:	mov	r4, r0
   2ac6c:	mvn	r0, #0
   2ac70:	uxtb	r7, r1
   2ac74:	uxtab	r0, r0, r1
   2ac78:	ands	r5, r0, r7
   2ac7c:	movwne	r5, #1
   2ac80:	cmp	r1, #0
   2ac84:	beq	2ad18 <main@@Base+0x14fdc>
   2ac88:	ands	r0, r1, #244	; 0xf4
   2ac8c:	bne	2ad18 <main@@Base+0x14fdc>
   2ac90:	mov	r0, r4
   2ac94:	mov	r1, r5
   2ac98:	bl	368b0 <flatcc_json_printer_delimit_enum_flags@@Base>
   2ac9c:	mov	r6, #0
   2aca0:	tst	r7, #1
   2aca4:	beq	2acc4 <main@@Base+0x14f88>
   2aca8:	movw	r2, #16262	; 0x3f86
   2acac:	mov	r0, r4
   2acb0:	mov	r1, #0
   2acb4:	mov	r3, #3
   2acb8:	movt	r2, #4
   2acbc:	bl	368e4 <flatcc_json_printer_enum_flag@@Base>
   2acc0:	mov	r6, #1
   2acc4:	tst	r7, #2
   2acc8:	beq	2ace8 <main@@Base+0x14fac>
   2accc:	movw	r2, #16266	; 0x3f8a
   2acd0:	mov	r0, r4
   2acd4:	mov	r1, r6
   2acd8:	mov	r3, #5
   2acdc:	movt	r2, #4
   2ace0:	bl	368e4 <flatcc_json_printer_enum_flag@@Base>
   2ace4:	add	r6, r6, #1
   2ace8:	tst	r7, #8
   2acec:	beq	2ad08 <main@@Base+0x14fcc>
   2acf0:	movw	r2, #16272	; 0x3f90
   2acf4:	mov	r0, r4
   2acf8:	mov	r1, r6
   2acfc:	mov	r3, #4
   2ad00:	movt	r2, #4
   2ad04:	bl	368e4 <flatcc_json_printer_enum_flag@@Base>
   2ad08:	mov	r0, r4
   2ad0c:	mov	r1, r5
   2ad10:	pop	{r4, r5, r6, r7, fp, lr}
   2ad14:	b	368b0 <flatcc_json_printer_delimit_enum_flags@@Base>
   2ad18:	mov	r0, r4
   2ad1c:	pop	{r4, r5, r6, r7, fp, lr}
   2ad20:	b	3665c <flatcc_json_printer_int8@@Base>
   2ad24:	sub	r1, r1, #1
   2ad28:	cmp	r1, #3
   2ad2c:	bhi	2ad58 <main@@Base+0x1501c>
   2ad30:	add	r2, pc, #0
   2ad34:	ldr	pc, [r2, r1, lsl #2]
   2ad38:	andeq	sl, r2, r8, asr #26
   2ad3c:	andeq	sl, r2, r8, ror #26
   2ad40:	andeq	sl, r2, r8, ror sp
   2ad44:	andeq	sl, r2, r8, lsl #27
   2ad48:	movw	r1, #16277	; 0x3f95
   2ad4c:	mov	r2, #7
   2ad50:	movt	r1, #4
   2ad54:	b	367c4 <flatcc_json_printer_enum@@Base>
   2ad58:	movw	r1, #22724	; 0x58c4
   2ad5c:	mov	r2, #4
   2ad60:	movt	r1, #4
   2ad64:	b	367c4 <flatcc_json_printer_enum@@Base>
   2ad68:	movw	r1, #16285	; 0x3f9d
   2ad6c:	mov	r2, #23
   2ad70:	movt	r1, #4
   2ad74:	b	367c4 <flatcc_json_printer_enum@@Base>
   2ad78:	movw	r1, #16309	; 0x3fb5
   2ad7c:	mov	r2, #8
   2ad80:	movt	r1, #4
   2ad84:	b	367c4 <flatcc_json_printer_enum@@Base>
   2ad88:	movw	r1, #16318	; 0x3fbe
   2ad8c:	mov	r2, #3
   2ad90:	movt	r1, #4
   2ad94:	b	367c4 <flatcc_json_printer_enum@@Base>
   2ad98:	ldrb	r2, [r1, #8]
   2ad9c:	sub	r2, r2, #1
   2ada0:	cmp	r2, #3
   2ada4:	bxhi	lr
   2ada8:	add	r3, pc, #0
   2adac:	ldr	pc, [r3, r2, lsl #2]
   2adb0:	andeq	sl, r2, r0, asr #27
   2adb4:	andeq	sl, r2, r4, ror #27
   2adb8:	andeq	sl, r2, ip, asr #27
   2adbc:	ldrdeq	sl, [r2], -r8
   2adc0:	movw	r2, #62332	; 0xf37c
   2adc4:	movt	r2, #1
   2adc8:	b	3f418 <flatcc_json_printer_union_table@@Base>
   2adcc:	movw	r2, #45164	; 0xb06c
   2add0:	movt	r2, #2
   2add4:	b	3f418 <flatcc_json_printer_union_table@@Base>
   2add8:	movw	r2, #45168	; 0xb070
   2addc:	movt	r2, #2
   2ade0:	b	3f418 <flatcc_json_printer_union_table@@Base>
   2ade4:	movw	r2, #45000	; 0xafc8
   2ade8:	movt	r2, #2
   2adec:	b	3f418 <flatcc_json_printer_union_table@@Base>
   2adf0:	push	{r4, r5, r6, sl, fp, lr}
   2adf4:	add	fp, sp, #16
   2adf8:	sub	sp, sp, #8
   2adfc:	mov	r5, r0
   2ae00:	movw	r0, #16028	; 0x3e9c
   2ae04:	mov	r4, r1
   2ae08:	mov	r6, #1
   2ae0c:	mov	r1, #0
   2ae10:	mov	r3, #0
   2ae14:	movt	r0, #4
   2ae18:	mov	r2, r4
   2ae1c:	stm	sp, {r0, r6}
   2ae20:	mov	r0, r5
   2ae24:	bl	38240 <flatcc_json_printer_int16_struct_field@@Base>
   2ae28:	movw	r0, #16443	; 0x403b
   2ae2c:	mov	r1, #1
   2ae30:	mov	r2, r4
   2ae34:	mov	r3, #2
   2ae38:	movt	r0, #4
   2ae3c:	stm	sp, {r0, r6}
   2ae40:	mov	r0, r5
   2ae44:	bl	381cc <flatcc_json_printer_int8_struct_field@@Base>
   2ae48:	sub	sp, fp, #16
   2ae4c:	pop	{r4, r5, r6, sl, fp, pc}
   2ae50:	push	{r4, r5, r6, sl, fp, lr}
   2ae54:	add	fp, sp, #16
   2ae58:	sub	sp, sp, #16
   2ae5c:	movw	r3, #16690	; 0x4132
   2ae60:	mov	r5, r0
   2ae64:	mov	r0, #2
   2ae68:	mov	r2, #0
   2ae6c:	mov	r4, r1
   2ae70:	mov	r6, #0
   2ae74:	str	r0, [sp]
   2ae78:	movt	r3, #4
   2ae7c:	mov	r0, r5
   2ae80:	bl	369b0 <flatcc_json_printer_string_field@@Base>
   2ae84:	movw	r3, #16693	; 0x4135
   2ae88:	mov	r0, #3
   2ae8c:	mov	r1, r4
   2ae90:	mov	r2, #1
   2ae94:	str	r6, [sp, #8]
   2ae98:	str	r6, [sp, #12]
   2ae9c:	str	r0, [sp]
   2aea0:	movt	r3, #4
   2aea4:	mov	r0, r5
   2aea8:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   2aeac:	movw	r3, #18976	; 0x4a20
   2aeb0:	mov	r0, #5
   2aeb4:	mov	r1, r4
   2aeb8:	mov	r2, #2
   2aebc:	stm	sp, {r0, r6}
   2aec0:	movt	r3, #4
   2aec4:	mov	r0, r5
   2aec8:	bl	36ee4 <flatcc_json_printer_uint16_field@@Base>
   2aecc:	sub	sp, fp, #16
   2aed0:	pop	{r4, r5, r6, sl, fp, pc}
   2aed4:	push	{r4, r5, fp, lr}
   2aed8:	add	fp, sp, #8
   2aedc:	sub	sp, sp, #8
   2aee0:	mov	r4, r1
   2aee4:	movw	r1, #16690	; 0x4132
   2aee8:	mov	r5, r0
   2aeec:	mov	r0, #2
   2aef0:	mov	r3, #0
   2aef4:	movt	r1, #4
   2aef8:	str	r0, [sp, #4]
   2aefc:	mov	r0, r5
   2af00:	mov	r2, r4
   2af04:	str	r1, [sp]
   2af08:	mov	r1, #0
   2af0c:	bl	38114 <flatcc_json_printer_uint32_struct_field@@Base>
   2af10:	movw	r1, #16697	; 0x4139
   2af14:	mov	r0, #8
   2af18:	mov	r2, r4
   2af1c:	mov	r3, #4
   2af20:	movt	r1, #4
   2af24:	str	r0, [sp, #4]
   2af28:	mov	r0, r5
   2af2c:	str	r1, [sp]
   2af30:	mov	r1, #1
   2af34:	bl	38114 <flatcc_json_printer_uint32_struct_field@@Base>
   2af38:	sub	sp, fp, #8
   2af3c:	pop	{r4, r5, fp, pc}
   2af40:	bx	lr
   2af44:	push	{r4, r5, r6, sl, fp, lr}
   2af48:	add	fp, sp, #16
   2af4c:	sub	sp, sp, #8
   2af50:	movw	r3, #16709	; 0x4145
   2af54:	mov	r5, r0
   2af58:	mov	r6, #0
   2af5c:	mov	r0, #4
   2af60:	mov	r2, #0
   2af64:	mov	r4, r1
   2af68:	stm	sp, {r0, r6}
   2af6c:	movt	r3, #4
   2af70:	mov	r0, r5
   2af74:	bl	36c40 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2af78:	movw	r3, #16706	; 0x4142
   2af7c:	mov	r0, #1
   2af80:	mov	r1, #7
   2af84:	mov	r2, #1
   2af88:	str	r1, [sp]
   2af8c:	str	r0, [sp, #4]
   2af90:	movt	r3, #4
   2af94:	mov	r0, r5
   2af98:	mov	r1, r4
   2af9c:	bl	36c40 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2afa0:	movw	r3, #16714	; 0x414a
   2afa4:	mov	r0, #6
   2afa8:	mov	r1, r4
   2afac:	mov	r2, #2
   2afb0:	stm	sp, {r0, r6}
   2afb4:	movt	r3, #4
   2afb8:	mov	r0, r5
   2afbc:	bl	36c40 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2afc0:	sub	sp, fp, #16
   2afc4:	pop	{r4, r5, r6, sl, fp, pc}
   2afc8:	push	{r4, r5, r6, r7, fp, lr}
   2afcc:	add	fp, sp, #16
   2afd0:	sub	sp, sp, #16
   2afd4:	movw	r7, #44128	; 0xac60
   2afd8:	movw	r3, #15850	; 0x3dea
   2afdc:	mov	r5, r0
   2afe0:	mov	r6, #2
   2afe4:	mov	r0, #5
   2afe8:	mov	r2, #0
   2afec:	mov	r4, r1
   2aff0:	movt	r7, #2
   2aff4:	movt	r3, #4
   2aff8:	stm	sp, {r0, r6, r7}
   2affc:	mov	r0, r5
   2b000:	bl	37b14 <flatcc_json_printer_int8_enum_field@@Base>
   2b004:	movw	r3, #16322	; 0x3fc2
   2b008:	mov	r0, #6
   2b00c:	mov	r1, r4
   2b010:	mov	r2, #1
   2b014:	stm	sp, {r0, r6, r7}
   2b018:	movt	r3, #4
   2b01c:	mov	r0, r5
   2b020:	bl	37b14 <flatcc_json_printer_int8_enum_field@@Base>
   2b024:	movw	r3, #16329	; 0x3fc9
   2b028:	mov	r0, r5
   2b02c:	mov	r1, r4
   2b030:	mov	r2, #2
   2b034:	str	r6, [sp]
   2b038:	str	r6, [sp, #4]
   2b03c:	movt	r3, #4
   2b040:	bl	36e24 <flatcc_json_printer_uint8_field@@Base>
   2b044:	movw	r3, #16332	; 0x3fcc
   2b048:	mov	r0, #3
   2b04c:	mov	r1, r4
   2b050:	mov	r2, #3
   2b054:	stm	sp, {r0, r6}
   2b058:	movt	r3, #4
   2b05c:	mov	r0, r5
   2b060:	bl	36e24 <flatcc_json_printer_uint8_field@@Base>
   2b064:	sub	sp, fp, #16
   2b068:	pop	{r4, r5, r6, r7, fp, pc}
   2b06c:	bx	lr
   2b070:	push	{r4, r5, fp, lr}
   2b074:	add	fp, sp, #8
   2b078:	sub	sp, sp, #16
   2b07c:	mov	r5, r0
   2b080:	movw	r0, #45340	; 0xb11c
   2b084:	movw	r3, #16336	; 0x3fd0
   2b088:	mov	r4, r1
   2b08c:	mov	r1, #6
   2b090:	mov	r2, #0
   2b094:	movt	r0, #2
   2b098:	str	r1, [sp]
   2b09c:	movt	r3, #4
   2b0a0:	mov	r1, r4
   2b0a4:	str	r0, [sp, #4]
   2b0a8:	mov	r0, r5
   2b0ac:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   2b0b0:	movw	r0, #45496	; 0xb1b8
   2b0b4:	movw	r3, #16343	; 0x3fd7
   2b0b8:	mov	r1, #5
   2b0bc:	mov	r2, #1
   2b0c0:	movt	r0, #2
   2b0c4:	str	r1, [sp]
   2b0c8:	movt	r3, #4
   2b0cc:	mov	r1, r4
   2b0d0:	str	r0, [sp, #4]
   2b0d4:	mov	r0, r5
   2b0d8:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   2b0dc:	movw	r0, #44440	; 0xad98
   2b0e0:	movw	r1, #44324	; 0xad24
   2b0e4:	movw	r3, #16349	; 0x3fdd
   2b0e8:	mov	r2, #7
   2b0ec:	movt	r0, #2
   2b0f0:	movt	r1, #2
   2b0f4:	str	r2, [sp]
   2b0f8:	movt	r3, #4
   2b0fc:	mov	r2, #3
   2b100:	str	r1, [sp, #4]
   2b104:	str	r0, [sp, #8]
   2b108:	mov	r0, r5
   2b10c:	mov	r1, r4
   2b110:	bl	3ea5c <flatcc_json_printer_union_vector_field@@Base>
   2b114:	sub	sp, fp, #8
   2b118:	pop	{r4, r5, fp, pc}
   2b11c:	push	{r4, r5, r6, sl, fp, lr}
   2b120:	add	fp, sp, #16
   2b124:	sub	sp, sp, #8
   2b128:	mov	r5, r0
   2b12c:	movw	r0, #45724	; 0xb29c
   2b130:	movw	r3, #16357	; 0x3fe5
   2b134:	mov	r4, r1
   2b138:	mov	r1, #21
   2b13c:	mov	r2, #0
   2b140:	movt	r0, #2
   2b144:	str	r1, [sp]
   2b148:	movt	r3, #4
   2b14c:	mov	r1, r4
   2b150:	str	r0, [sp, #4]
   2b154:	mov	r0, r5
   2b158:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   2b15c:	movw	r0, #46048	; 0xb3e0
   2b160:	movw	r3, #16379	; 0x3ffb
   2b164:	mov	r6, #22
   2b168:	mov	r1, r4
   2b16c:	mov	r2, #1
   2b170:	movt	r0, #2
   2b174:	movt	r3, #4
   2b178:	str	r6, [sp]
   2b17c:	str	r0, [sp, #4]
   2b180:	mov	r0, r5
   2b184:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   2b188:	movw	r0, #46148	; 0xb444
   2b18c:	movw	r3, #16402	; 0x4012
   2b190:	mov	r1, r4
   2b194:	mov	r2, #2
   2b198:	str	r6, [sp]
   2b19c:	movt	r0, #2
   2b1a0:	movt	r3, #4
   2b1a4:	str	r0, [sp, #4]
   2b1a8:	mov	r0, r5
   2b1ac:	bl	3ee14 <flatcc_json_printer_table_field@@Base>
   2b1b0:	sub	sp, fp, #16
   2b1b4:	pop	{r4, r5, r6, sl, fp, pc}
   2b1b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b1bc:	add	fp, sp, #24
   2b1c0:	sub	sp, sp, #16
   2b1c4:	movw	r7, #46248	; 0xb4a8
   2b1c8:	movw	r6, #46428	; 0xb55c
   2b1cc:	movw	r3, #16552	; 0x40a8
   2b1d0:	mov	r5, r0
   2b1d4:	mov	r0, #14
   2b1d8:	mov	r2, #1
   2b1dc:	mov	r4, r1
   2b1e0:	movt	r7, #2
   2b1e4:	movt	r6, #2
   2b1e8:	movt	r3, #4
   2b1ec:	stm	sp, {r0, r7}
   2b1f0:	mov	r0, r5
   2b1f4:	str	r6, [sp, #8]
   2b1f8:	bl	3eff0 <flatcc_json_printer_union_field@@Base>
   2b1fc:	movw	r3, #16567	; 0x40b7
   2b200:	mov	r8, #10
   2b204:	mov	r0, r5
   2b208:	mov	r1, r4
   2b20c:	mov	r2, #3
   2b210:	str	r7, [sp, #4]
   2b214:	str	r6, [sp, #8]
   2b218:	movt	r3, #4
   2b21c:	str	r8, [sp]
   2b220:	bl	3eff0 <flatcc_json_printer_union_field@@Base>
   2b224:	movw	r3, #16578	; 0x40c2
   2b228:	mov	r0, #9
   2b22c:	mov	r1, r4
   2b230:	mov	r2, #5
   2b234:	mov	r9, #5
   2b238:	stm	sp, {r0, r7}
   2b23c:	movt	r3, #4
   2b240:	mov	r0, r5
   2b244:	str	r6, [sp, #8]
   2b248:	bl	3eff0 <flatcc_json_printer_union_field@@Base>
   2b24c:	movw	r3, #16588	; 0x40cc
   2b250:	mov	r0, r5
   2b254:	mov	r1, r4
   2b258:	mov	r2, #7
   2b25c:	str	r9, [sp]
   2b260:	str	r7, [sp, #4]
   2b264:	str	r6, [sp, #8]
   2b268:	movt	r3, #4
   2b26c:	bl	3eff0 <flatcc_json_printer_union_field@@Base>
   2b270:	movw	r3, #16594	; 0x40d2
   2b274:	mov	r0, r5
   2b278:	mov	r1, r4
   2b27c:	mov	r2, #9
   2b280:	str	r8, [sp]
   2b284:	str	r7, [sp, #4]
   2b288:	str	r6, [sp, #8]
   2b28c:	movt	r3, #4
   2b290:	bl	3ea5c <flatcc_json_printer_union_vector_field@@Base>
   2b294:	sub	sp, fp, #24
   2b298:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b29c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b2a0:	add	fp, sp, #24
   2b2a4:	sub	sp, sp, #16
   2b2a8:	movw	r3, #16425	; 0x4029
   2b2ac:	mov	r9, #4
   2b2b0:	mov	r2, #0
   2b2b4:	mov	r4, r1
   2b2b8:	mov	r5, r0
   2b2bc:	mov	r6, #0
   2b2c0:	movt	r3, #4
   2b2c4:	str	r9, [sp]
   2b2c8:	bl	369b0 <flatcc_json_printer_string_field@@Base>
   2b2cc:	movw	r3, #16430	; 0x402e
   2b2d0:	mov	r8, #9
   2b2d4:	mov	r0, r5
   2b2d8:	mov	r1, r4
   2b2dc:	mov	r2, #1
   2b2e0:	str	r6, [sp, #4]
   2b2e4:	movt	r3, #4
   2b2e8:	str	r8, [sp]
   2b2ec:	bl	36fa4 <flatcc_json_printer_uint32_field@@Base>
   2b2f0:	movw	r3, #16440	; 0x4038
   2b2f4:	mov	r0, r5
   2b2f8:	mov	r1, r4
   2b2fc:	mov	r2, #2
   2b300:	str	r9, [sp]
   2b304:	movt	r3, #4
   2b308:	bl	369b0 <flatcc_json_printer_string_field@@Base>
   2b30c:	movw	r3, #16445	; 0x403d
   2b310:	mov	r7, #8
   2b314:	mov	r0, r5
   2b318:	mov	r1, r4
   2b31c:	mov	r2, #3
   2b320:	str	r6, [sp, #8]
   2b324:	str	r6, [sp, #12]
   2b328:	movt	r3, #4
   2b32c:	str	r7, [sp]
   2b330:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   2b334:	movw	r3, #16454	; 0x4046
   2b338:	mov	r0, r5
   2b33c:	mov	r1, r4
   2b340:	mov	r2, #4
   2b344:	str	r9, [sp]
   2b348:	movt	r3, #4
   2b34c:	bl	369b0 <flatcc_json_printer_string_field@@Base>
   2b350:	movw	r3, #16459	; 0x404b
   2b354:	mov	r0, r5
   2b358:	mov	r1, r4
   2b35c:	mov	r2, #5
   2b360:	str	r6, [sp, #8]
   2b364:	str	r6, [sp, #12]
   2b368:	str	r7, [sp]
   2b36c:	movt	r3, #4
   2b370:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   2b374:	movw	r3, #16468	; 0x4054
   2b378:	mov	r0, r5
   2b37c:	mov	r1, r4
   2b380:	mov	r2, #6
   2b384:	str	r8, [sp]
   2b388:	str	r6, [sp, #4]
   2b38c:	movt	r3, #4
   2b390:	bl	36fa4 <flatcc_json_printer_uint32_field@@Base>
   2b394:	movw	r3, #16478	; 0x405e
   2b398:	mov	r0, r5
   2b39c:	mov	r1, r4
   2b3a0:	mov	r2, #7
   2b3a4:	str	r6, [sp, #8]
   2b3a8:	str	r6, [sp, #12]
   2b3ac:	str	r7, [sp]
   2b3b0:	movt	r3, #4
   2b3b4:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   2b3b8:	movw	r3, #16487	; 0x4067
   2b3bc:	mov	r0, r5
   2b3c0:	mov	r1, r4
   2b3c4:	mov	r2, #8
   2b3c8:	str	r8, [sp]
   2b3cc:	str	r6, [sp, #4]
   2b3d0:	movt	r3, #4
   2b3d4:	bl	36fa4 <flatcc_json_printer_uint32_field@@Base>
   2b3d8:	sub	sp, fp, #24
   2b3dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b3e0:	push	{r4, r5, r6, sl, fp, lr}
   2b3e4:	add	fp, sp, #16
   2b3e8:	sub	sp, sp, #16
   2b3ec:	movw	r3, #16497	; 0x4071
   2b3f0:	mov	r5, r0
   2b3f4:	mov	r0, #15
   2b3f8:	mov	r6, #0
   2b3fc:	mov	r2, #0
   2b400:	mov	r4, r1
   2b404:	str	r0, [sp]
   2b408:	movt	r3, #4
   2b40c:	mov	r0, r5
   2b410:	str	r6, [sp, #8]
   2b414:	str	r6, [sp, #12]
   2b418:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   2b41c:	movw	r3, #16513	; 0x4081
   2b420:	mov	r0, #16
   2b424:	mov	r1, r4
   2b428:	mov	r2, #1
   2b42c:	stm	sp, {r0, r6}
   2b430:	movt	r3, #4
   2b434:	mov	r0, r5
   2b438:	bl	36fa4 <flatcc_json_printer_uint32_field@@Base>
   2b43c:	sub	sp, fp, #16
   2b440:	pop	{r4, r5, r6, sl, fp, pc}
   2b444:	push	{r4, r5, r6, sl, fp, lr}
   2b448:	add	fp, sp, #16
   2b44c:	sub	sp, sp, #16
   2b450:	movw	r3, #16497	; 0x4071
   2b454:	mov	r5, r0
   2b458:	mov	r0, #15
   2b45c:	mov	r6, #0
   2b460:	mov	r2, #0
   2b464:	mov	r4, r1
   2b468:	str	r0, [sp]
   2b46c:	movt	r3, #4
   2b470:	mov	r0, r5
   2b474:	str	r6, [sp, #8]
   2b478:	str	r6, [sp, #12]
   2b47c:	bl	373d8 <flatcc_json_printer_int64_field@@Base>
   2b480:	movw	r3, #16530	; 0x4092
   2b484:	mov	r0, #21
   2b488:	mov	r1, r4
   2b48c:	mov	r2, #1
   2b490:	stm	sp, {r0, r6}
   2b494:	movt	r3, #4
   2b498:	mov	r0, r5
   2b49c:	bl	36fa4 <flatcc_json_printer_uint32_field@@Base>
   2b4a0:	sub	sp, fp, #16
   2b4a4:	pop	{r4, r5, r6, sl, fp, pc}
   2b4a8:	sub	r2, r1, #2
   2b4ac:	cmp	r2, #9
   2b4b0:	bhi	2b4f4 <main@@Base+0x157b8>
   2b4b4:	add	r1, pc, #0
   2b4b8:	ldr	pc, [r1, r2, lsl #2]
   2b4bc:	andeq	fp, r2, r4, ror #9
   2b4c0:	andeq	fp, r2, ip, lsl #10
   2b4c4:	andeq	fp, r2, ip, lsl #10
   2b4c8:	andeq	fp, r2, ip, lsl #10
   2b4cc:	andeq	fp, r2, ip, lsl #10
   2b4d0:	andeq	fp, r2, ip, lsl #10
   2b4d4:	andeq	fp, r2, ip, lsl r5
   2b4d8:	andeq	fp, r2, ip, lsr #10
   2b4dc:	andeq	fp, r2, ip, lsr r5
   2b4e0:	andeq	fp, r2, ip, asr #10
   2b4e4:	movw	r1, #16605	; 0x40dd
   2b4e8:	mov	r2, #5
   2b4ec:	movt	r1, #4
   2b4f0:	b	367c4 <flatcc_json_printer_enum@@Base>
   2b4f4:	cmp	r1, #255	; 0xff
   2b4f8:	bne	2b50c <main@@Base+0x157d0>
   2b4fc:	movw	r1, #16640	; 0x4100
   2b500:	mov	r2, #6
   2b504:	movt	r1, #4
   2b508:	b	367c4 <flatcc_json_printer_enum@@Base>
   2b50c:	movw	r1, #22724	; 0x58c4
   2b510:	mov	r2, #4
   2b514:	movt	r1, #4
   2b518:	b	367c4 <flatcc_json_printer_enum@@Base>
   2b51c:	movw	r1, #16611	; 0x40e3
   2b520:	mov	r2, #8
   2b524:	movt	r1, #4
   2b528:	b	367c4 <flatcc_json_printer_enum@@Base>
   2b52c:	movw	r1, #16620	; 0x40ec
   2b530:	mov	r2, #5
   2b534:	movt	r1, #4
   2b538:	b	367c4 <flatcc_json_printer_enum@@Base>
   2b53c:	movw	r1, #16626	; 0x40f2
   2b540:	mov	r2, #7
   2b544:	movt	r1, #4
   2b548:	b	367c4 <flatcc_json_printer_enum@@Base>
   2b54c:	movw	r1, #16634	; 0x40fa
   2b550:	mov	r2, #5
   2b554:	movt	r1, #4
   2b558:	b	367c4 <flatcc_json_printer_enum@@Base>
   2b55c:	ldrb	r3, [r1, #8]
   2b560:	sub	r2, r3, #2
   2b564:	cmp	r2, #9
   2b568:	bhi	2b5a8 <main@@Base+0x1586c>
   2b56c:	add	r3, pc, #0
   2b570:	ldr	pc, [r3, r2, lsl #2]
   2b574:			; <UNDEFINED> instruction: 0x0002b5b4
   2b578:	andeq	fp, r2, ip, asr #11
   2b57c:	andeq	fp, r2, ip, asr #11
   2b580:	andeq	fp, r2, ip, asr #11
   2b584:	andeq	fp, r2, ip, asr #11
   2b588:	andeq	fp, r2, ip, asr #11
   2b58c:	andeq	fp, r2, r0, asr #11
   2b590:	muleq	r2, ip, r5
   2b594:	muleq	r2, ip, r5
   2b598:			; <UNDEFINED> instruction: 0x0002b5b0
   2b59c:	movw	r2, #46652	; 0xb63c
   2b5a0:	movt	r2, #2
   2b5a4:	b	3f588 <flatcc_json_printer_union_struct@@Base>
   2b5a8:	cmp	r3, #255	; 0xff
   2b5ac:	bxne	lr
   2b5b0:	b	3f6a8 <flatcc_json_printer_union_string@@Base>
   2b5b4:	movw	r2, #46544	; 0xb5d0
   2b5b8:	movt	r2, #2
   2b5bc:	b	3f418 <flatcc_json_printer_union_table@@Base>
   2b5c0:	movw	r2, #46596	; 0xb604
   2b5c4:	movt	r2, #2
   2b5c8:	b	3f588 <flatcc_json_printer_union_struct@@Base>
   2b5cc:	bx	lr
   2b5d0:	push	{fp, lr}
   2b5d4:	mov	fp, sp
   2b5d8:	sub	sp, sp, #8
   2b5dc:	mov	r3, #19
   2b5e0:	mov	r2, #0
   2b5e4:	str	r3, [sp]
   2b5e8:	movw	r3, #16647	; 0x4107
   2b5ec:	str	r2, [sp, #4]
   2b5f0:	mov	r2, #0
   2b5f4:	movt	r3, #4
   2b5f8:	bl	37300 <flatcc_json_printer_int32_field@@Base>
   2b5fc:	mov	sp, fp
   2b600:	pop	{fp, pc}
   2b604:	push	{fp, lr}
   2b608:	mov	fp, sp
   2b60c:	sub	sp, sp, #8
   2b610:	movw	r3, #16667	; 0x411b
   2b614:	mov	r2, r1
   2b618:	mov	r1, #11
   2b61c:	movt	r3, #4
   2b620:	str	r1, [sp, #4]
   2b624:	mov	r1, #0
   2b628:	str	r3, [sp]
   2b62c:	mov	r3, #0
   2b630:	bl	380b8 <flatcc_json_printer_uint16_struct_field@@Base>
   2b634:	mov	sp, fp
   2b638:	pop	{fp, pc}
   2b63c:	push	{fp, lr}
   2b640:	mov	fp, sp
   2b644:	sub	sp, sp, #8
   2b648:	movw	r3, #16679	; 0x4127
   2b64c:	mov	r2, r1
   2b650:	mov	r1, #10
   2b654:	movt	r3, #4
   2b658:	str	r1, [sp, #4]
   2b65c:	mov	r1, #0
   2b660:	str	r3, [sp]
   2b664:	mov	r3, #0
   2b668:	bl	382b4 <flatcc_json_printer_int32_struct_field@@Base>
   2b66c:	mov	sp, fp
   2b670:	pop	{fp, pc}
   2b674:	ldrb	r1, [r0, #12]
   2b678:	sub	r1, r1, #1
   2b67c:	uxtb	r2, r1
   2b680:	cmp	r2, #3
   2b684:	movhi	r0, #0
   2b688:	bxhi	lr
   2b68c:	movw	r2, #16836	; 0x41c4
   2b690:	sxtb	r1, r1
   2b694:	movt	r2, #4
   2b698:	ldr	r1, [r2, r1, lsl #2]
   2b69c:	b	30644 <flatcc_verify_union_table@@Base>
   2b6a0:	push	{r4, sl, fp, lr}
   2b6a4:	add	fp, sp, #8
   2b6a8:	mov	r1, #0
   2b6ac:	mov	r2, #0
   2b6b0:	mov	r4, r0
   2b6b4:	bl	2ffc4 <flatcc_verify_string_field@@Base>
   2b6b8:	cmp	r0, #0
   2b6bc:	popne	{r4, sl, fp, pc}
   2b6c0:	mov	r0, r4
   2b6c4:	mov	r1, #1
   2b6c8:	mov	r2, #8
   2b6cc:	mov	r3, #8
   2b6d0:	bl	2ff4c <flatcc_verify_field@@Base>
   2b6d4:	cmp	r0, #0
   2b6d8:	beq	2b6e0 <main@@Base+0x159a4>
   2b6dc:	pop	{r4, sl, fp, pc}
   2b6e0:	mov	r0, r4
   2b6e4:	mov	r1, #2
   2b6e8:	mov	r2, #2
   2b6ec:	mov	r3, #2
   2b6f0:	pop	{r4, sl, fp, lr}
   2b6f4:	b	2ff4c <flatcc_verify_field@@Base>
   2b6f8:	mov	r0, #0
   2b6fc:	bx	lr
   2b700:	push	{r4, r5, r6, sl, fp, lr}
   2b704:	add	fp, sp, #16
   2b708:	sub	sp, sp, #8
   2b70c:	mvn	r5, #0
   2b710:	mov	r6, #1
   2b714:	mov	r1, #0
   2b718:	mov	r2, #0
   2b71c:	mov	r3, #1
   2b720:	mov	r4, r0
   2b724:	str	r6, [sp]
   2b728:	str	r5, [sp, #4]
   2b72c:	bl	300cc <flatcc_verify_vector_field@@Base>
   2b730:	cmp	r0, #0
   2b734:	bne	2b784 <main@@Base+0x15a48>
   2b738:	mov	r0, r4
   2b73c:	mov	r1, #1
   2b740:	mov	r2, #0
   2b744:	mov	r3, #1
   2b748:	str	r6, [sp]
   2b74c:	str	r5, [sp, #4]
   2b750:	bl	300cc <flatcc_verify_vector_field@@Base>
   2b754:	cmp	r0, #0
   2b758:	bne	2b784 <main@@Base+0x15a48>
   2b75c:	movw	r0, #63624	; 0xf888
   2b760:	mov	r1, #1
   2b764:	mov	r2, #0
   2b768:	mov	r3, #0
   2b76c:	movt	r0, #1
   2b770:	str	r1, [sp]
   2b774:	mov	r1, #2
   2b778:	str	r0, [sp, #4]
   2b77c:	mov	r0, r4
   2b780:	bl	30c88 <flatcc_verify_table_as_nested_root@@Base>
   2b784:	sub	sp, fp, #16
   2b788:	pop	{r4, r5, r6, sl, fp, pc}
   2b78c:	push	{r4, sl, fp, lr}
   2b790:	add	fp, sp, #8
   2b794:	mov	r1, #0
   2b798:	mov	r2, #1
   2b79c:	mov	r3, #1
   2b7a0:	mov	r4, r0
   2b7a4:	bl	2ff4c <flatcc_verify_field@@Base>
   2b7a8:	cmp	r0, #0
   2b7ac:	bne	2b7e8 <main@@Base+0x15aac>
   2b7b0:	mov	r0, r4
   2b7b4:	mov	r1, #1
   2b7b8:	mov	r2, #1
   2b7bc:	mov	r3, #1
   2b7c0:	bl	2ff4c <flatcc_verify_field@@Base>
   2b7c4:	cmp	r0, #0
   2b7c8:	popne	{r4, sl, fp, pc}
   2b7cc:	mov	r0, r4
   2b7d0:	mov	r1, #2
   2b7d4:	mov	r2, #1
   2b7d8:	mov	r3, #1
   2b7dc:	bl	2ff4c <flatcc_verify_field@@Base>
   2b7e0:	cmp	r0, #0
   2b7e4:	beq	2b7ec <main@@Base+0x15ab0>
   2b7e8:	pop	{r4, sl, fp, pc}
   2b7ec:	mov	r0, r4
   2b7f0:	mov	r1, #3
   2b7f4:	mov	r2, #1
   2b7f8:	mov	r3, #1
   2b7fc:	pop	{r4, sl, fp, lr}
   2b800:	b	2ff4c <flatcc_verify_field@@Base>
   2b804:	mov	r0, #0
   2b808:	bx	lr
   2b80c:	push	{r4, sl, fp, lr}
   2b810:	add	fp, sp, #8
   2b814:	movw	r3, #47220	; 0xb874
   2b818:	mov	r1, #0
   2b81c:	mov	r2, #0
   2b820:	mov	r4, r0
   2b824:	movt	r3, #2
   2b828:	bl	302bc <flatcc_verify_table_field@@Base>
   2b82c:	cmp	r0, #0
   2b830:	popne	{r4, sl, fp, pc}
   2b834:	movw	r3, #47324	; 0xb8dc
   2b838:	mov	r0, r4
   2b83c:	mov	r1, #1
   2b840:	mov	r2, #0
   2b844:	movt	r3, #2
   2b848:	bl	302bc <flatcc_verify_table_field@@Base>
   2b84c:	cmp	r0, #0
   2b850:	beq	2b858 <main@@Base+0x15b1c>
   2b854:	pop	{r4, sl, fp, pc}
   2b858:	movw	r3, #46708	; 0xb674
   2b85c:	mov	r0, r4
   2b860:	mov	r1, #3
   2b864:	mov	r2, #0
   2b868:	movt	r3, #2
   2b86c:	pop	{r4, sl, fp, lr}
   2b870:	b	30f60 <flatcc_verify_union_vector_field@@Base>
   2b874:	push	{r4, sl, fp, lr}
   2b878:	add	fp, sp, #8
   2b87c:	movw	r3, #47492	; 0xb984
   2b880:	mov	r1, #0
   2b884:	mov	r2, #0
   2b888:	mov	r4, r0
   2b88c:	movt	r3, #2
   2b890:	bl	302bc <flatcc_verify_table_field@@Base>
   2b894:	cmp	r0, #0
   2b898:	popne	{r4, sl, fp, pc}
   2b89c:	movw	r3, #47740	; 0xba7c
   2b8a0:	mov	r0, r4
   2b8a4:	mov	r1, #1
   2b8a8:	mov	r2, #0
   2b8ac:	movt	r3, #2
   2b8b0:	bl	302bc <flatcc_verify_table_field@@Base>
   2b8b4:	cmp	r0, #0
   2b8b8:	beq	2b8c0 <main@@Base+0x15b84>
   2b8bc:	pop	{r4, sl, fp, pc}
   2b8c0:	movw	r3, #47800	; 0xbab8
   2b8c4:	mov	r0, r4
   2b8c8:	mov	r1, #2
   2b8cc:	mov	r2, #0
   2b8d0:	movt	r3, #2
   2b8d4:	pop	{r4, sl, fp, lr}
   2b8d8:	b	302bc <flatcc_verify_table_field@@Base>
   2b8dc:	push	{r4, sl, fp, lr}
   2b8e0:	add	fp, sp, #8
   2b8e4:	movw	r3, #47860	; 0xbaf4
   2b8e8:	mov	r1, #1
   2b8ec:	mov	r2, #0
   2b8f0:	mov	r4, r0
   2b8f4:	movt	r3, #2
   2b8f8:	bl	30e38 <flatcc_verify_union_field@@Base>
   2b8fc:	cmp	r0, #0
   2b900:	bne	2b964 <main@@Base+0x15c28>
   2b904:	movw	r3, #47860	; 0xbaf4
   2b908:	mov	r0, r4
   2b90c:	mov	r1, #3
   2b910:	mov	r2, #0
   2b914:	movt	r3, #2
   2b918:	bl	30e38 <flatcc_verify_union_field@@Base>
   2b91c:	cmp	r0, #0
   2b920:	bne	2b964 <main@@Base+0x15c28>
   2b924:	movw	r3, #47860	; 0xbaf4
   2b928:	mov	r0, r4
   2b92c:	mov	r1, #5
   2b930:	mov	r2, #0
   2b934:	movt	r3, #2
   2b938:	bl	30e38 <flatcc_verify_union_field@@Base>
   2b93c:	cmp	r0, #0
   2b940:	popne	{r4, sl, fp, pc}
   2b944:	movw	r3, #47860	; 0xbaf4
   2b948:	mov	r0, r4
   2b94c:	mov	r1, #7
   2b950:	mov	r2, #0
   2b954:	movt	r3, #2
   2b958:	bl	30e38 <flatcc_verify_union_field@@Base>
   2b95c:	cmp	r0, #0
   2b960:	beq	2b968 <main@@Base+0x15c2c>
   2b964:	pop	{r4, sl, fp, pc}
   2b968:	movw	r3, #47860	; 0xbaf4
   2b96c:	mov	r0, r4
   2b970:	mov	r1, #9
   2b974:	mov	r2, #0
   2b978:	movt	r3, #2
   2b97c:	pop	{r4, sl, fp, lr}
   2b980:	b	30f60 <flatcc_verify_union_vector_field@@Base>
   2b984:	push	{r4, sl, fp, lr}
   2b988:	add	fp, sp, #8
   2b98c:	mov	r1, #0
   2b990:	mov	r2, #0
   2b994:	mov	r4, r0
   2b998:	bl	2ffc4 <flatcc_verify_string_field@@Base>
   2b99c:	cmp	r0, #0
   2b9a0:	bne	2ba60 <main@@Base+0x15d24>
   2b9a4:	mov	r0, r4
   2b9a8:	mov	r1, #1
   2b9ac:	mov	r2, #4
   2b9b0:	mov	r3, #4
   2b9b4:	bl	2ff4c <flatcc_verify_field@@Base>
   2b9b8:	cmp	r0, #0
   2b9bc:	bne	2ba60 <main@@Base+0x15d24>
   2b9c0:	mov	r0, r4
   2b9c4:	mov	r1, #2
   2b9c8:	mov	r2, #0
   2b9cc:	bl	2ffc4 <flatcc_verify_string_field@@Base>
   2b9d0:	cmp	r0, #0
   2b9d4:	bne	2ba60 <main@@Base+0x15d24>
   2b9d8:	mov	r0, r4
   2b9dc:	mov	r1, #3
   2b9e0:	mov	r2, #8
   2b9e4:	mov	r3, #8
   2b9e8:	bl	2ff4c <flatcc_verify_field@@Base>
   2b9ec:	cmp	r0, #0
   2b9f0:	bne	2ba60 <main@@Base+0x15d24>
   2b9f4:	mov	r0, r4
   2b9f8:	mov	r1, #4
   2b9fc:	mov	r2, #0
   2ba00:	bl	2ffc4 <flatcc_verify_string_field@@Base>
   2ba04:	cmp	r0, #0
   2ba08:	bne	2ba60 <main@@Base+0x15d24>
   2ba0c:	mov	r0, r4
   2ba10:	mov	r1, #5
   2ba14:	mov	r2, #8
   2ba18:	mov	r3, #8
   2ba1c:	bl	2ff4c <flatcc_verify_field@@Base>
   2ba20:	cmp	r0, #0
   2ba24:	bne	2ba60 <main@@Base+0x15d24>
   2ba28:	mov	r0, r4
   2ba2c:	mov	r1, #6
   2ba30:	mov	r2, #4
   2ba34:	mov	r3, #4
   2ba38:	bl	2ff4c <flatcc_verify_field@@Base>
   2ba3c:	cmp	r0, #0
   2ba40:	popne	{r4, sl, fp, pc}
   2ba44:	mov	r0, r4
   2ba48:	mov	r1, #7
   2ba4c:	mov	r2, #8
   2ba50:	mov	r3, #8
   2ba54:	bl	2ff4c <flatcc_verify_field@@Base>
   2ba58:	cmp	r0, #0
   2ba5c:	beq	2ba64 <main@@Base+0x15d28>
   2ba60:	pop	{r4, sl, fp, pc}
   2ba64:	mov	r0, r4
   2ba68:	mov	r1, #8
   2ba6c:	mov	r2, #4
   2ba70:	mov	r3, #4
   2ba74:	pop	{r4, sl, fp, lr}
   2ba78:	b	2ff4c <flatcc_verify_field@@Base>
   2ba7c:	push	{r4, sl, fp, lr}
   2ba80:	add	fp, sp, #8
   2ba84:	mov	r1, #0
   2ba88:	mov	r2, #8
   2ba8c:	mov	r3, #8
   2ba90:	mov	r4, r0
   2ba94:	bl	2ff4c <flatcc_verify_field@@Base>
   2ba98:	cmp	r0, #0
   2ba9c:	popne	{r4, sl, fp, pc}
   2baa0:	mov	r0, r4
   2baa4:	mov	r1, #1
   2baa8:	mov	r2, #4
   2baac:	mov	r3, #4
   2bab0:	pop	{r4, sl, fp, lr}
   2bab4:	b	2ff4c <flatcc_verify_field@@Base>
   2bab8:	push	{r4, sl, fp, lr}
   2babc:	add	fp, sp, #8
   2bac0:	mov	r1, #0
   2bac4:	mov	r2, #8
   2bac8:	mov	r3, #8
   2bacc:	mov	r4, r0
   2bad0:	bl	2ff4c <flatcc_verify_field@@Base>
   2bad4:	cmp	r0, #0
   2bad8:	popne	{r4, sl, fp, pc}
   2badc:	mov	r0, r4
   2bae0:	mov	r1, #1
   2bae4:	mov	r2, #4
   2bae8:	mov	r3, #4
   2baec:	pop	{r4, sl, fp, lr}
   2baf0:	b	2ff4c <flatcc_verify_field@@Base>
   2baf4:	ldrb	r2, [r0, #12]
   2baf8:	sub	r1, r2, #2
   2bafc:	cmp	r1, #9
   2bb00:	bhi	2bb40 <main@@Base+0x15e04>
   2bb04:	add	r2, pc, #0
   2bb08:	ldr	pc, [r2, r1, lsl #2]
   2bb0c:	andeq	fp, r2, r4, asr fp
   2bb10:	andeq	fp, r2, ip, asr #22
   2bb14:	andeq	fp, r2, ip, asr #22
   2bb18:	andeq	fp, r2, ip, asr #22
   2bb1c:	andeq	fp, r2, ip, asr #22
   2bb20:	andeq	fp, r2, ip, asr #22
   2bb24:	andeq	fp, r2, r0, ror #22
   2bb28:	andeq	fp, r2, r4, lsr fp
   2bb2c:	andeq	fp, r2, r4, lsr fp
   2bb30:	andeq	fp, r2, r8, asr #22
   2bb34:	mov	r1, #4
   2bb38:	mov	r2, #4
   2bb3c:	b	3072c <flatcc_verify_union_struct@@Base>
   2bb40:	cmp	r2, #255	; 0xff
   2bb44:	bne	2bb4c <main@@Base+0x15e10>
   2bb48:	b	30784 <flatcc_verify_union_string@@Base>
   2bb4c:	mov	r0, #0
   2bb50:	bx	lr
   2bb54:	movw	r1, #47980	; 0xbb6c
   2bb58:	movt	r1, #2
   2bb5c:	b	30644 <flatcc_verify_union_table@@Base>
   2bb60:	mov	r1, #2
   2bb64:	mov	r2, #2
   2bb68:	b	3072c <flatcc_verify_union_struct@@Base>
   2bb6c:	mov	r1, #0
   2bb70:	mov	r2, #4
   2bb74:	mov	r3, #4
   2bb78:	b	2ff4c <flatcc_verify_field@@Base>

0002bb7c <flatcc_builder_default_alloc@@Base>:
   2bb7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bb80:	add	fp, sp, #24
   2bb84:	mov	r4, r1
   2bb88:	cmp	r2, #0
   2bb8c:	beq	2bbd4 <flatcc_builder_default_alloc@@Base+0x58>
   2bb90:	ldr	r0, [fp, #8]
   2bb94:	mov	r8, r3
   2bb98:	sub	r1, r0, #1
   2bb9c:	cmp	r1, #6
   2bba0:	bhi	2bbfc <flatcc_builder_default_alloc@@Base+0x80>
   2bba4:	add	r3, pc, #4
   2bba8:	mov	r0, #256	; 0x100
   2bbac:	ldr	pc, [r3, r1, lsl #2]
   2bbb0:	andeq	fp, r2, r0, lsl ip
   2bbb4:	strdeq	fp, [r2], -ip
   2bbb8:	strdeq	fp, [r2], -ip
   2bbbc:	andeq	fp, r2, ip, asr #23
   2bbc0:	andeq	fp, r2, r4, lsl #24
   2bbc4:	strdeq	fp, [r2], -ip
   2bbc8:	andeq	fp, r2, ip, lsl #24
   2bbcc:	mov	r0, #288	; 0x120
   2bbd0:	b	2bc10 <flatcc_builder_default_alloc@@Base+0x94>
   2bbd4:	ldr	r0, [r4]
   2bbd8:	cmp	r0, #0
   2bbdc:	beq	2bbf4 <flatcc_builder_default_alloc@@Base+0x78>
   2bbe0:	bl	14e54 <free@plt>
   2bbe4:	mov	r6, #0
   2bbe8:	str	r6, [r4]
   2bbec:	str	r6, [r4, #4]
   2bbf0:	b	2bc6c <flatcc_builder_default_alloc@@Base+0xf0>
   2bbf4:	mov	r6, #0
   2bbf8:	b	2bc6c <flatcc_builder_default_alloc@@Base+0xf0>
   2bbfc:	mov	r0, #32
   2bc00:	b	2bc10 <flatcc_builder_default_alloc@@Base+0x94>
   2bc04:	mov	r0, r2
   2bc08:	b	2bc10 <flatcc_builder_default_alloc@@Base+0x94>
   2bc0c:	mov	r0, #64	; 0x40
   2bc10:	mov	r7, r0
   2bc14:	lsl	r0, r0, #1
   2bc18:	cmp	r7, r2
   2bc1c:	bcc	2bc10 <flatcc_builder_default_alloc@@Base+0x94>
   2bc20:	ldr	r0, [r4, #4]
   2bc24:	mov	r6, #0
   2bc28:	cmp	r0, r2
   2bc2c:	lsrcs	r0, r0, #1
   2bc30:	cmpcs	r0, r7
   2bc34:	bcs	2bc6c <flatcc_builder_default_alloc@@Base+0xf0>
   2bc38:	ldr	r0, [r4]
   2bc3c:	mov	r1, r7
   2bc40:	bl	14e90 <realloc@plt>
   2bc44:	cmp	r0, #0
   2bc48:	beq	2bc68 <flatcc_builder_default_alloc@@Base+0xec>
   2bc4c:	cmp	r8, #0
   2bc50:	mov	r5, r0
   2bc54:	ldrne	r1, [r4, #4]
   2bc58:	cmpne	r7, r1
   2bc5c:	bhi	2bc74 <flatcc_builder_default_alloc@@Base+0xf8>
   2bc60:	stm	r4, {r5, r7}
   2bc64:	b	2bc6c <flatcc_builder_default_alloc@@Base+0xf0>
   2bc68:	mvn	r6, #0
   2bc6c:	mov	r0, r6
   2bc70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bc74:	add	r0, r5, r1
   2bc78:	sub	r2, r7, r1
   2bc7c:	mov	r1, #0
   2bc80:	bl	14ef0 <memset@plt>
   2bc84:	b	2bc60 <flatcc_builder_default_alloc@@Base+0xe4>

0002bc88 <flatcc_builder_flush_vtable_cache@@Base>:
   2bc88:	push	{r4, r5, fp, lr}
   2bc8c:	add	fp, sp, #8
   2bc90:	mov	r4, r0
   2bc94:	ldr	r0, [r0, #116]	; 0x74
   2bc98:	cmp	r0, #0
   2bc9c:	popeq	{r4, r5, fp, pc}
   2bca0:	ldr	r0, [r4, #92]	; 0x5c
   2bca4:	ldr	r2, [r4, #96]	; 0x60
   2bca8:	mov	r1, #0
   2bcac:	mov	r5, #0
   2bcb0:	bl	14ef0 <memset@plt>
   2bcb4:	mov	r0, #16
   2bcb8:	str	r5, [r4, #120]	; 0x78
   2bcbc:	str	r0, [r4, #124]	; 0x7c
   2bcc0:	pop	{r4, r5, fp, pc}

0002bcc4 <flatcc_builder_custom_init@@Base>:
   2bcc4:	push	{r4, r5, r6, r7, fp, lr}
   2bcc8:	add	fp, sp, #16
   2bccc:	mov	r6, r2
   2bcd0:	mov	r7, r1
   2bcd4:	mov	r1, #0
   2bcd8:	mov	r2, #232	; 0xe8
   2bcdc:	mov	r5, r3
   2bce0:	mov	r4, r0
   2bce4:	bl	14ef0 <memset@plt>
   2bce8:	ldr	r0, [fp, #8]
   2bcec:	cmp	r7, #0
   2bcf0:	bne	2bd08 <flatcc_builder_custom_init@@Base+0x44>
   2bcf4:	movw	r7, #64316	; 0xfb3c
   2bcf8:	mov	r1, #1
   2bcfc:	add	r6, r4, #188	; 0xbc
   2bd00:	movt	r7, #2
   2bd04:	str	r1, [r4, #184]	; 0xb8
   2bd08:	movw	r1, #47996	; 0xbb7c
   2bd0c:	cmp	r5, #0
   2bd10:	str	r6, [r4, #36]	; 0x24
   2bd14:	str	r0, [r4, #40]	; 0x28
   2bd18:	mov	r0, #0
   2bd1c:	str	r7, [r4, #44]	; 0x2c
   2bd20:	movt	r1, #2
   2bd24:	movne	r1, r5
   2bd28:	str	r1, [r4, #48]	; 0x30
   2bd2c:	pop	{r4, r5, r6, r7, fp, pc}

0002bd30 <flatcc_builder_init@@Base>:
   2bd30:	push	{r4, r5, fp, lr}
   2bd34:	add	fp, sp, #8
   2bd38:	mov	r1, #0
   2bd3c:	mov	r2, #232	; 0xe8
   2bd40:	mov	r4, r0
   2bd44:	mov	r5, #0
   2bd48:	bl	14ef0 <memset@plt>
   2bd4c:	mov	r0, #1
   2bd50:	movw	r2, #64316	; 0xfb3c
   2bd54:	add	r1, r4, #188	; 0xbc
   2bd58:	str	r0, [r4, #184]	; 0xb8
   2bd5c:	movw	r0, #47996	; 0xbb7c
   2bd60:	movt	r2, #2
   2bd64:	str	r1, [r4, #36]	; 0x24
   2bd68:	str	r5, [r4, #40]	; 0x28
   2bd6c:	movt	r0, #2
   2bd70:	str	r2, [r4, #44]	; 0x2c
   2bd74:	str	r0, [r4, #48]	; 0x30
   2bd78:	mov	r0, #0
   2bd7c:	pop	{r4, r5, fp, pc}

0002bd80 <flatcc_builder_custom_reset@@Base>:
   2bd80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2bd84:	add	fp, sp, #24
   2bd88:	sub	sp, sp, #8
   2bd8c:	mov	r9, r2
   2bd90:	mov	r8, r1
   2bd94:	mov	r4, r0
   2bd98:	add	r7, r0, #52	; 0x34
   2bd9c:	mov	r5, #0
   2bda0:	ldr	r0, [r7]
   2bda4:	cmp	r0, #0
   2bda8:	beq	2bdf0 <flatcc_builder_custom_reset@@Base+0x70>
   2bdac:	cmp	r9, #0
   2bdb0:	cmpne	r5, #5
   2bdb4:	beq	2bde0 <flatcc_builder_custom_reset@@Base+0x60>
   2bdb8:	ldr	r0, [r4, #40]	; 0x28
   2bdbc:	ldr	r6, [r4, #48]	; 0x30
   2bdc0:	mov	r1, r7
   2bdc4:	mov	r2, #1
   2bdc8:	mov	r3, #1
   2bdcc:	str	r5, [sp]
   2bdd0:	blx	r6
   2bdd4:	cmp	r0, #0
   2bdd8:	bne	2be90 <flatcc_builder_custom_reset@@Base+0x110>
   2bddc:	ldr	r0, [r7]
   2bde0:	ldr	r2, [r7, #4]
   2bde4:	mov	r1, #0
   2bde8:	bl	14ef0 <memset@plt>
   2bdec:	b	2bdfc <flatcc_builder_custom_reset@@Base+0x7c>
   2bdf0:	ldr	r0, [r7, #4]
   2bdf4:	cmp	r0, #0
   2bdf8:	bne	2bea0 <flatcc_builder_custom_reset@@Base+0x120>
   2bdfc:	add	r5, r5, #1
   2be00:	add	r7, r7, #8
   2be04:	cmp	r5, #8
   2be08:	bcc	2bda0 <flatcc_builder_custom_reset@@Base+0x20>
   2be0c:	mov	r0, #0
   2be10:	vmov.i32	q8, #0	; 0x00000000
   2be14:	mov	r5, #0
   2be18:	str	r0, [r4, #120]	; 0x78
   2be1c:	ldr	r1, [r4, #124]	; 0x7c
   2be20:	cmp	r1, #0
   2be24:	movne	r1, #16
   2be28:	strne	r1, [r4, #124]	; 0x7c
   2be2c:	add	r1, r4, #148	; 0x94
   2be30:	strh	r0, [r4, #128]	; 0x80
   2be34:	str	r0, [r4, #136]	; 0x88
   2be38:	str	r0, [r4, #140]	; 0x8c
   2be3c:	str	r0, [r4, #32]
   2be40:	cmp	r8, #0
   2be44:	vst1.32	{d16-d17}, [r1]
   2be48:	ldr	r2, [r4, #60]	; 0x3c
   2be4c:	ldr	r1, [r4, #52]	; 0x34
   2be50:	ldr	r3, [r4, #76]	; 0x4c
   2be54:	str	r2, [r4, #16]
   2be58:	str	r0, [r4, #20]
   2be5c:	str	r0, [r4, #24]
   2be60:	movne	r0, #0
   2be64:	str	r3, [r4]
   2be68:	str	r1, [r4, #4]
   2be6c:	strne	r0, [r4, #172]	; 0xac
   2be70:	strne	r0, [r4, #176]	; 0xb0
   2be74:	strne	r0, [r4, #180]	; 0xb4
   2be78:	ldr	r0, [r4, #184]	; 0xb8
   2be7c:	cmp	r0, #0
   2be80:	beq	2be94 <flatcc_builder_custom_reset@@Base+0x114>
   2be84:	add	r0, r4, #188	; 0xbc
   2be88:	bl	2fa0c <flatcc_emitter_reset@@Base>
   2be8c:	b	2be94 <flatcc_builder_custom_reset@@Base+0x114>
   2be90:	mvn	r5, #0
   2be94:	mov	r0, r5
   2be98:	sub	sp, fp, #24
   2be9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bea0:	movw	r0, #17364	; 0x43d4
   2bea4:	movw	r1, #17382	; 0x43e6
   2bea8:	movw	r3, #17452	; 0x442c
   2beac:	movw	r2, #434	; 0x1b2
   2beb0:	movt	r0, #4
   2beb4:	movt	r1, #4
   2beb8:	movt	r3, #4
   2bebc:	bl	14f44 <__assert_fail@plt>

0002bec0 <flatcc_builder_reset@@Base>:
   2bec0:	mov	r1, #0
   2bec4:	mov	r2, #0
   2bec8:	b	2bd80 <flatcc_builder_custom_reset@@Base>

0002becc <flatcc_builder_clear@@Base>:
   2becc:	push	{r4, r5, r6, r7, fp, lr}
   2bed0:	add	fp, sp, #16
   2bed4:	sub	sp, sp, #8
   2bed8:	mov	r7, r0
   2bedc:	add	r5, r0, #52	; 0x34
   2bee0:	mov	r6, #0
   2bee4:	ldr	r0, [r7, #40]	; 0x28
   2bee8:	ldr	r4, [r7, #48]	; 0x30
   2beec:	mov	r1, r5
   2bef0:	mov	r2, #0
   2bef4:	mov	r3, #0
   2bef8:	str	r6, [sp]
   2befc:	blx	r4
   2bf00:	add	r6, r6, #1
   2bf04:	add	r5, r5, #8
   2bf08:	cmp	r6, #8
   2bf0c:	bne	2bee4 <flatcc_builder_clear@@Base+0x18>
   2bf10:	ldr	r0, [r7, #184]	; 0xb8
   2bf14:	cmp	r0, #0
   2bf18:	beq	2bf24 <flatcc_builder_clear@@Base+0x58>
   2bf1c:	add	r0, r7, #188	; 0xbc
   2bf20:	bl	2fad8 <flatcc_emitter_clear@@Base>
   2bf24:	mov	r0, r7
   2bf28:	mov	r1, #0
   2bf2c:	mov	r2, #232	; 0xe8
   2bf30:	sub	sp, fp, #16
   2bf34:	pop	{r4, r5, r6, r7, fp, lr}
   2bf38:	b	14ef0 <memset@plt>

0002bf3c <flatcc_builder_enter_user_frame_ptr@@Base>:
   2bf3c:	push	{r4, r5, r6, r7, fp, lr}
   2bf40:	add	fp, sp, #16
   2bf44:	sub	sp, sp, #8
   2bf48:	mov	r4, r0
   2bf4c:	ldr	r0, [r0, #112]	; 0x70
   2bf50:	add	r1, r1, #7
   2bf54:	ldr	r7, [r4, #228]	; 0xe4
   2bf58:	bic	r5, r1, #3
   2bf5c:	add	r6, r4, #108	; 0x6c
   2bf60:	add	r2, r7, r5
   2bf64:	cmp	r2, r0
   2bf68:	bls	2bf90 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2bf6c:	ldr	r0, [r4, #40]	; 0x28
   2bf70:	ldr	ip, [r4, #48]	; 0x30
   2bf74:	mov	r1, #7
   2bf78:	mov	r3, #0
   2bf7c:	str	r1, [sp]
   2bf80:	mov	r1, r6
   2bf84:	blx	ip
   2bf88:	cmp	r0, #0
   2bf8c:	bne	2bfdc <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2bf90:	ldr	r0, [r6]
   2bf94:	adds	r6, r0, r7
   2bf98:	beq	2bfcc <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2bf9c:	mov	r0, r6
   2bfa0:	mov	r1, #0
   2bfa4:	mov	r2, r5
   2bfa8:	bl	14ef0 <memset@plt>
   2bfac:	ldr	r0, [r4, #224]	; 0xe0
   2bfb0:	str	r0, [r6], #4
   2bfb4:	ldr	r0, [r4, #228]	; 0xe4
   2bfb8:	add	r1, r0, #4
   2bfbc:	add	r0, r0, r5
   2bfc0:	str	r1, [r4, #224]	; 0xe0
   2bfc4:	str	r0, [r4, #228]	; 0xe4
   2bfc8:	b	2bfd0 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2bfcc:	mov	r6, #0
   2bfd0:	mov	r0, r6
   2bfd4:	sub	sp, fp, #16
   2bfd8:	pop	{r4, r5, r6, r7, fp, pc}
   2bfdc:	movw	r0, #21900	; 0x558c
   2bfe0:	movw	r1, #17382	; 0x43e6
   2bfe4:	movw	r3, #21446	; 0x53c6
   2bfe8:	mov	r2, #308	; 0x134
   2bfec:	movt	r0, #4
   2bff0:	movt	r1, #4
   2bff4:	movt	r3, #4
   2bff8:	bl	14f44 <__assert_fail@plt>

0002bffc <flatcc_builder_enter_user_frame@@Base>:
   2bffc:	push	{r4, r5, r6, r7, fp, lr}
   2c000:	add	fp, sp, #16
   2c004:	sub	sp, sp, #8
   2c008:	mov	r4, r0
   2c00c:	ldr	r0, [r0, #112]	; 0x70
   2c010:	add	r1, r1, #7
   2c014:	ldr	r7, [r4, #228]	; 0xe4
   2c018:	bic	r5, r1, #3
   2c01c:	add	r6, r4, #108	; 0x6c
   2c020:	add	r2, r7, r5
   2c024:	cmp	r2, r0
   2c028:	bls	2c050 <flatcc_builder_enter_user_frame@@Base+0x54>
   2c02c:	ldr	r0, [r4, #40]	; 0x28
   2c030:	ldr	ip, [r4, #48]	; 0x30
   2c034:	mov	r1, #7
   2c038:	mov	r3, #0
   2c03c:	str	r1, [sp]
   2c040:	mov	r1, r6
   2c044:	blx	ip
   2c048:	cmp	r0, #0
   2c04c:	bne	2c098 <flatcc_builder_enter_user_frame@@Base+0x9c>
   2c050:	ldr	r0, [r6]
   2c054:	adds	r6, r0, r7
   2c058:	beq	2c08c <flatcc_builder_enter_user_frame@@Base+0x90>
   2c05c:	mov	r0, r6
   2c060:	mov	r1, #0
   2c064:	mov	r2, r5
   2c068:	bl	14ef0 <memset@plt>
   2c06c:	ldr	r0, [r4, #224]	; 0xe0
   2c070:	str	r0, [r6]
   2c074:	ldr	r1, [r4, #228]	; 0xe4
   2c078:	add	r0, r1, #4
   2c07c:	add	r1, r1, r5
   2c080:	str	r0, [r4, #224]	; 0xe0
   2c084:	str	r1, [r4, #228]	; 0xe4
   2c088:	b	2c090 <flatcc_builder_enter_user_frame@@Base+0x94>
   2c08c:	mov	r0, #0
   2c090:	sub	sp, fp, #16
   2c094:	pop	{r4, r5, r6, r7, fp, pc}
   2c098:	movw	r0, #21900	; 0x558c
   2c09c:	movw	r1, #17382	; 0x43e6
   2c0a0:	movw	r3, #21446	; 0x53c6
   2c0a4:	mov	r2, #308	; 0x134
   2c0a8:	movt	r0, #4
   2c0ac:	movt	r1, #4
   2c0b0:	movt	r3, #4
   2c0b4:	bl	14f44 <__assert_fail@plt>

0002c0b8 <flatcc_builder_exit_user_frame@@Base>:
   2c0b8:	ldr	r1, [r0, #224]	; 0xe0
   2c0bc:	cmp	r1, #0
   2c0c0:	subne	r2, r1, #4
   2c0c4:	strne	r2, [r0, #228]	; 0xe4
   2c0c8:	ldrne	r2, [r0, #108]	; 0x6c
   2c0cc:	addne	r1, r2, r1
   2c0d0:	ldrne	r1, [r1, #-4]
   2c0d4:	strne	r1, [r0, #224]	; 0xe0
   2c0d8:	movne	r0, r1
   2c0dc:	bxne	lr
   2c0e0:	push	{fp, lr}
   2c0e4:	mov	fp, sp
   2c0e8:	movw	r0, #17514	; 0x446a
   2c0ec:	movw	r1, #17382	; 0x43e6
   2c0f0:	movw	r3, #17539	; 0x4483
   2c0f4:	movw	r2, #542	; 0x21e
   2c0f8:	movt	r0, #4
   2c0fc:	movt	r1, #4
   2c100:	movt	r3, #4
   2c104:	bl	14f44 <__assert_fail@plt>

0002c108 <flatcc_builder_exit_user_frame_at@@Base>:
   2c108:	ldr	r2, [r0, #224]	; 0xe0
   2c10c:	cmp	r2, r1
   2c110:	bcc	2c11c <flatcc_builder_exit_user_frame_at@@Base+0x14>
   2c114:	str	r1, [r0, #224]	; 0xe0
   2c118:	b	2c0b8 <flatcc_builder_exit_user_frame@@Base>
   2c11c:	push	{fp, lr}
   2c120:	mov	fp, sp
   2c124:	movw	r0, #17597	; 0x44bd
   2c128:	movw	r1, #17382	; 0x43e6
   2c12c:	movw	r3, #17628	; 0x44dc
   2c130:	movw	r2, #551	; 0x227
   2c134:	movt	r0, #4
   2c138:	movt	r1, #4
   2c13c:	movt	r3, #4
   2c140:	bl	14f44 <__assert_fail@plt>

0002c144 <flatcc_builder_get_current_user_frame@@Base>:
   2c144:	ldr	r0, [r0, #224]	; 0xe0
   2c148:	bx	lr

0002c14c <flatcc_builder_get_user_frame_ptr@@Base>:
   2c14c:	ldr	r0, [r0, #108]	; 0x6c
   2c150:	add	r0, r0, r1
   2c154:	bx	lr

0002c158 <flatcc_builder_embed_buffer@@Base>:
   2c158:	push	{r4, r5, r6, r7, fp, lr}
   2c15c:	add	fp, sp, #16
   2c160:	sub	sp, sp, #88	; 0x58
   2c164:	mov	r4, r0
   2c168:	ldr	r0, [fp, #8]
   2c16c:	mov	r5, r3
   2c170:	mov	r7, r2
   2c174:	mov	r2, r1
   2c178:	sub	r1, fp, #18
   2c17c:	strh	r0, [fp, #-18]	; 0xffffffee
   2c180:	mov	r0, r4
   2c184:	ldr	r3, [r4, #152]	; 0x98
   2c188:	cmp	r3, #0
   2c18c:	movwne	r3, #1
   2c190:	bl	2c2c8 <flatcc_builder_embed_buffer@@Base+0x170>
   2c194:	ldr	r1, [fp, #12]
   2c198:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2c19c:	ldr	r0, [r4, #136]	; 0x88
   2c1a0:	mov	r2, #0
   2c1a4:	str	r2, [sp, #8]
   2c1a8:	str	r2, [sp, #12]
   2c1ac:	and	r1, r1, #2
   2c1b0:	sub	r3, r3, #1
   2c1b4:	add	r1, r5, r1, lsl #1
   2c1b8:	sub	r1, r0, r1
   2c1bc:	and	r3, r1, r3
   2c1c0:	add	r1, r3, r5
   2c1c4:	str	r1, [fp, #-24]	; 0xffffffe8
   2c1c8:	ldr	r1, [r4, #152]	; 0x98
   2c1cc:	cmp	r1, #0
   2c1d0:	mov	r1, #0
   2c1d4:	beq	2c1f4 <flatcc_builder_embed_buffer@@Base+0x9c>
   2c1d8:	sub	r1, fp, #24
   2c1dc:	mov	r2, #1
   2c1e0:	str	r1, [sp, #16]
   2c1e4:	mov	r1, #4
   2c1e8:	str	r1, [sp, #8]
   2c1ec:	str	r1, [sp, #20]
   2c1f0:	str	r2, [sp, #12]
   2c1f4:	cmp	r5, #0
   2c1f8:	beq	2c21c <flatcc_builder_embed_buffer@@Base+0xc4>
   2c1fc:	add	r6, sp, #8
   2c200:	add	r1, r1, r5
   2c204:	add	r6, r6, r2, lsl #3
   2c208:	add	r2, r2, #1
   2c20c:	str	r1, [sp, #8]
   2c210:	str	r7, [r6, #8]
   2c214:	str	r5, [r6, #12]
   2c218:	str	r2, [sp, #12]
   2c21c:	cmp	r3, #0
   2c220:	beq	2c24c <flatcc_builder_embed_buffer@@Base+0xf4>
   2c224:	add	r7, sp, #8
   2c228:	movw	r6, #16852	; 0x41d4
   2c22c:	add	r1, r1, r3
   2c230:	add	r7, r7, r2, lsl #3
   2c234:	add	r2, r2, #1
   2c238:	movt	r6, #4
   2c23c:	str	r1, [sp, #8]
   2c240:	str	r6, [r7, #8]
   2c244:	str	r3, [r7, #12]
   2c248:	str	r2, [sp, #12]
   2c24c:	cmp	r1, #0
   2c250:	ble	2c2a8 <flatcc_builder_embed_buffer@@Base+0x150>
   2c254:	sub	r5, r0, r1
   2c258:	ldr	r0, [r4, #36]	; 0x24
   2c25c:	ldr	r7, [r4, #44]	; 0x2c
   2c260:	str	r1, [sp]
   2c264:	add	r1, sp, #8
   2c268:	add	r1, r1, #8
   2c26c:	mov	r3, r5
   2c270:	blx	r7
   2c274:	cmp	r0, #0
   2c278:	streq	r5, [r4, #136]	; 0x88
   2c27c:	moveq	r0, r5
   2c280:	subeq	sp, fp, #16
   2c284:	popeq	{r4, r5, r6, r7, fp, pc}
   2c288:	movw	r0, #21900	; 0x558c
   2c28c:	movw	r1, #17382	; 0x43e6
   2c290:	movw	r3, #21579	; 0x544b
   2c294:	movw	r2, #651	; 0x28b
   2c298:	movt	r0, #4
   2c29c:	movt	r1, #4
   2c2a0:	movt	r3, #4
   2c2a4:	bl	14f44 <__assert_fail@plt>
   2c2a8:	movw	r0, #21900	; 0x558c
   2c2ac:	movw	r1, #17382	; 0x43e6
   2c2b0:	movw	r3, #21579	; 0x544b
   2c2b4:	movw	r2, #647	; 0x287
   2c2b8:	movt	r0, #4
   2c2bc:	movt	r1, #4
   2c2c0:	movt	r3, #4
   2c2c4:	bl	14f44 <__assert_fail@plt>
   2c2c8:	push	{r4, sl, fp, lr}
   2c2cc:	add	fp, sp, #8
   2c2d0:	sub	sp, sp, #80	; 0x50
   2c2d4:	cmp	r2, #0
   2c2d8:	bne	2c2e8 <flatcc_builder_embed_buffer@@Base+0x190>
   2c2dc:	ldrh	r2, [r0, #132]	; 0x84
   2c2e0:	cmp	r2, #0
   2c2e4:	movweq	r2, #1
   2c2e8:	ldrh	r4, [r1]
   2c2ec:	cmp	r4, #4
   2c2f0:	movwcc	r4, #4
   2c2f4:	cmpcs	r4, r2
   2c2f8:	bcs	2c308 <flatcc_builder_embed_buffer@@Base+0x1b0>
   2c2fc:	cmp	r4, r2
   2c300:	movcc	r4, r2
   2c304:	strh	r4, [r1]
   2c308:	cmp	r3, #0
   2c30c:	bne	2c380 <flatcc_builder_embed_buffer@@Base+0x228>
   2c310:	ldr	r4, [r0, #140]	; 0x8c
   2c314:	sub	r1, r2, #1
   2c318:	ands	r1, r4, r1
   2c31c:	beq	2c380 <flatcc_builder_embed_buffer@@Base+0x228>
   2c320:	movw	r2, #16852	; 0x41d4
   2c324:	cmn	r1, #1
   2c328:	movt	r2, #4
   2c32c:	str	r2, [sp, #16]
   2c330:	mov	r2, #1
   2c334:	str	r1, [sp, #8]
   2c338:	str	r1, [sp, #20]
   2c33c:	str	r2, [sp, #12]
   2c340:	add	r2, r1, r4
   2c344:	str	r2, [r0, #140]	; 0x8c
   2c348:	ble	2c388 <flatcc_builder_embed_buffer@@Base+0x230>
   2c34c:	ldr	r2, [r0, #36]	; 0x24
   2c350:	ldr	ip, [r0, #44]	; 0x2c
   2c354:	add	r0, sp, #8
   2c358:	str	r1, [sp]
   2c35c:	mov	r3, r4
   2c360:	add	r1, r0, #8
   2c364:	mov	r0, r2
   2c368:	mov	r2, #1
   2c36c:	blx	ip
   2c370:	cmp	r0, #0
   2c374:	bne	2c3a8 <flatcc_builder_embed_buffer@@Base+0x250>
   2c378:	cmn	r4, #1
   2c37c:	beq	2c3c8 <flatcc_builder_embed_buffer@@Base+0x270>
   2c380:	sub	sp, fp, #8
   2c384:	pop	{r4, sl, fp, pc}
   2c388:	movw	r0, #21900	; 0x558c
   2c38c:	movw	r1, #17382	; 0x43e6
   2c390:	movw	r3, #21767	; 0x5507
   2c394:	movw	r2, #673	; 0x2a1
   2c398:	movt	r0, #4
   2c39c:	movt	r1, #4
   2c3a0:	movt	r3, #4
   2c3a4:	bl	14f44 <__assert_fail@plt>
   2c3a8:	movw	r0, #21900	; 0x558c
   2c3ac:	movw	r1, #17382	; 0x43e6
   2c3b0:	movw	r3, #21767	; 0x5507
   2c3b4:	movw	r2, #677	; 0x2a5
   2c3b8:	movt	r0, #4
   2c3bc:	movt	r1, #4
   2c3c0:	movt	r3, #4
   2c3c4:	bl	14f44 <__assert_fail@plt>
   2c3c8:	movw	r0, #21900	; 0x558c
   2c3cc:	movw	r1, #17382	; 0x43e6
   2c3d0:	movw	r3, #21513	; 0x5409
   2c3d4:	movw	r2, #702	; 0x2be
   2c3d8:	movt	r0, #4
   2c3dc:	movt	r1, #4
   2c3e0:	movt	r3, #4
   2c3e4:	bl	14f44 <__assert_fail@plt>

0002c3e8 <flatcc_builder_create_buffer@@Base>:
   2c3e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c3ec:	add	fp, sp, #28
   2c3f0:	sub	sp, sp, #100	; 0x64
   2c3f4:	ldr	r8, [fp, #12]
   2c3f8:	mov	r4, r0
   2c3fc:	ldr	r0, [fp, #8]
   2c400:	mov	r7, r1
   2c404:	mov	r5, #0
   2c408:	mov	r9, r3
   2c40c:	sub	r1, fp, #30
   2c410:	str	r5, [sp, #12]
   2c414:	and	r6, r8, #1
   2c418:	strh	r0, [fp, #-30]	; 0xffffffe2
   2c41c:	mov	r0, r4
   2c420:	mov	r3, r6
   2c424:	bl	2c2c8 <flatcc_builder_embed_buffer@@Base+0x170>
   2c428:	ldrh	r0, [r4, #128]	; 0x80
   2c42c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2c430:	cmp	r0, r1
   2c434:	strhcc	r1, [r4, #128]	; 0x80
   2c438:	cmp	r7, #0
   2c43c:	stmib	sp, {r6, r9}
   2c440:	beq	2c45c <flatcc_builder_create_buffer@@Base+0x74>
   2c444:	ldr	r5, [r7]
   2c448:	cmp	r5, #0
   2c44c:	str	r5, [sp, #12]
   2c450:	movwne	r5, #1
   2c454:	lsl	r7, r5, #2
   2c458:	b	2c460 <flatcc_builder_create_buffer@@Base+0x78>
   2c45c:	mov	r7, #0
   2c460:	ldr	r9, [r4, #136]	; 0x88
   2c464:	mov	sl, #4
   2c468:	mvn	r6, #3
   2c46c:	mov	r3, #0
   2c470:	ands	ip, r8, #3
   2c474:	and	r2, sl, r8, lsl #1
   2c478:	str	r3, [sp, #20]
   2c47c:	str	r3, [sp, #16]
   2c480:	sub	r2, r6, r2
   2c484:	sub	r6, r1, #1
   2c488:	mov	r1, #4
   2c48c:	add	r2, r2, r9
   2c490:	sub	r2, r2, r7
   2c494:	beq	2c4b8 <flatcc_builder_create_buffer@@Base+0xd0>
   2c498:	sub	r1, fp, #40	; 0x28
   2c49c:	mov	r3, #1
   2c4a0:	str	r1, [sp, #24]
   2c4a4:	mov	r1, #4
   2c4a8:	str	r1, [sp, #16]
   2c4ac:	str	r1, [sp, #28]
   2c4b0:	mov	r1, #8
   2c4b4:	str	r3, [sp, #20]
   2c4b8:	add	lr, sp, #16
   2c4bc:	and	r6, r2, r6
   2c4c0:	sub	r0, fp, #36	; 0x24
   2c4c4:	str	r1, [sp, #16]
   2c4c8:	cmp	r5, #0
   2c4cc:	add	r2, lr, r3, lsl #3
   2c4d0:	str	r0, [r2, #8]
   2c4d4:	str	sl, [r2, #12]
   2c4d8:	add	r2, r3, #1
   2c4dc:	str	r2, [sp, #20]
   2c4e0:	beq	2c504 <flatcc_builder_create_buffer@@Base+0x11c>
   2c4e4:	add	r1, r1, r7
   2c4e8:	add	r0, lr, r2, lsl #3
   2c4ec:	add	r2, sp, #12
   2c4f0:	str	r1, [sp, #16]
   2c4f4:	str	r2, [r0, #8]
   2c4f8:	orr	r2, r3, #2
   2c4fc:	str	r7, [r0, #12]
   2c500:	str	r2, [sp, #20]
   2c504:	cmp	r6, #0
   2c508:	beq	2c530 <flatcc_builder_create_buffer@@Base+0x148>
   2c50c:	movw	r3, #16852	; 0x41d4
   2c510:	add	r1, r1, r6
   2c514:	add	r0, lr, r2, lsl #3
   2c518:	add	r2, r2, #1
   2c51c:	movt	r3, #4
   2c520:	str	r1, [sp, #16]
   2c524:	str	r3, [r0, #8]
   2c528:	str	r6, [r0, #12]
   2c52c:	str	r2, [sp, #20]
   2c530:	ldr	r5, [sp, #4]
   2c534:	sub	r7, r9, r1
   2c538:	cmp	ip, #0
   2c53c:	mov	r6, #144	; 0x90
   2c540:	ldr	r3, [sp, #8]
   2c544:	mov	r0, r7
   2c548:	addne	r0, r0, #4
   2c54c:	cmp	r5, #0
   2c550:	sub	r3, r3, r0
   2c554:	movweq	r6, #140	; 0x8c
   2c558:	cmp	r1, #0
   2c55c:	ldr	r6, [r4, r6]
   2c560:	str	r3, [fp, #-36]	; 0xffffffdc
   2c564:	sub	r0, r6, r0
   2c568:	str	r0, [fp, #-40]	; 0xffffffd8
   2c56c:	ble	2c5c4 <flatcc_builder_create_buffer@@Base+0x1dc>
   2c570:	ldr	r0, [r4, #36]	; 0x24
   2c574:	ldr	r6, [r4, #44]	; 0x2c
   2c578:	str	r1, [sp]
   2c57c:	add	r1, lr, #8
   2c580:	mov	r3, r7
   2c584:	blx	r6
   2c588:	cmp	r0, #0
   2c58c:	bne	2c5e4 <flatcc_builder_create_buffer@@Base+0x1fc>
   2c590:	cmp	r7, #0
   2c594:	str	r7, [r4, #136]	; 0x88
   2c598:	movne	r0, r7
   2c59c:	subne	sp, fp, #28
   2c5a0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c5a4:	movw	r0, #21900	; 0x558c
   2c5a8:	movw	r1, #17382	; 0x43e6
   2c5ac:	movw	r3, #17697	; 0x4521
   2c5b0:	mov	r2, #772	; 0x304
   2c5b4:	movt	r0, #4
   2c5b8:	movt	r1, #4
   2c5bc:	movt	r3, #4
   2c5c0:	bl	14f44 <__assert_fail@plt>
   2c5c4:	movw	r0, #21900	; 0x558c
   2c5c8:	movw	r1, #17382	; 0x43e6
   2c5cc:	movw	r3, #21579	; 0x544b
   2c5d0:	movw	r2, #647	; 0x287
   2c5d4:	movt	r0, #4
   2c5d8:	movt	r1, #4
   2c5dc:	movt	r3, #4
   2c5e0:	bl	14f44 <__assert_fail@plt>
   2c5e4:	movw	r0, #21900	; 0x558c
   2c5e8:	movw	r1, #17382	; 0x43e6
   2c5ec:	movw	r3, #21579	; 0x544b
   2c5f0:	movw	r2, #651	; 0x28b
   2c5f4:	movt	r0, #4
   2c5f8:	movt	r1, #4
   2c5fc:	movt	r3, #4
   2c600:	bl	14f44 <__assert_fail@plt>

0002c604 <flatcc_builder_create_struct@@Base>:
   2c604:	push	{r4, r5, r6, sl, fp, lr}
   2c608:	add	fp, sp, #16
   2c60c:	sub	sp, sp, #80	; 0x50
   2c610:	cmp	r3, #0
   2c614:	beq	2c6ec <flatcc_builder_create_struct@@Base+0xe8>
   2c618:	mov	r5, r0
   2c61c:	ldrh	r0, [r0, #128]	; 0x80
   2c620:	mov	r4, #0
   2c624:	cmp	r0, r3
   2c628:	strhcc	r3, [r5, #128]	; 0x80
   2c62c:	sub	r3, r3, #1
   2c630:	cmp	r2, #0
   2c634:	ldr	r0, [r5, #136]	; 0x88
   2c638:	str	r4, [sp, #12]
   2c63c:	str	r4, [sp, #8]
   2c640:	movne	r4, #1
   2c644:	strne	r1, [sp, #16]
   2c648:	strne	r2, [sp, #8]
   2c64c:	strne	r2, [sp, #20]
   2c650:	strne	r4, [sp, #12]
   2c654:	sub	r6, r0, r2
   2c658:	and	r3, r6, r3
   2c65c:	cmp	r3, #0
   2c660:	beq	2c68c <flatcc_builder_create_struct@@Base+0x88>
   2c664:	add	r1, sp, #8
   2c668:	movw	r6, #16852	; 0x41d4
   2c66c:	add	r2, r3, r2
   2c670:	add	r1, r1, r4, lsl #3
   2c674:	add	r4, r4, #1
   2c678:	movt	r6, #4
   2c67c:	str	r2, [sp, #8]
   2c680:	str	r6, [r1, #8]
   2c684:	str	r3, [r1, #12]
   2c688:	str	r4, [sp, #12]
   2c68c:	cmp	r2, #0
   2c690:	ble	2c70c <flatcc_builder_create_struct@@Base+0x108>
   2c694:	sub	r6, r0, r2
   2c698:	ldr	r0, [r5, #36]	; 0x24
   2c69c:	ldr	ip, [r5, #44]	; 0x2c
   2c6a0:	add	r1, sp, #8
   2c6a4:	str	r2, [sp]
   2c6a8:	mov	r2, r4
   2c6ac:	add	r1, r1, #8
   2c6b0:	mov	r3, r6
   2c6b4:	blx	ip
   2c6b8:	cmp	r0, #0
   2c6bc:	streq	r6, [r5, #136]	; 0x88
   2c6c0:	moveq	r0, r6
   2c6c4:	subeq	sp, fp, #16
   2c6c8:	popeq	{r4, r5, r6, sl, fp, pc}
   2c6cc:	movw	r0, #21900	; 0x558c
   2c6d0:	movw	r1, #17382	; 0x43e6
   2c6d4:	movw	r3, #21579	; 0x544b
   2c6d8:	movw	r2, #651	; 0x28b
   2c6dc:	movt	r0, #4
   2c6e0:	movt	r1, #4
   2c6e4:	movt	r3, #4
   2c6e8:	bl	14f44 <__assert_fail@plt>
   2c6ec:	movw	r0, #17828	; 0x45a4
   2c6f0:	movw	r1, #17382	; 0x43e6
   2c6f4:	movw	r3, #17839	; 0x45af
   2c6f8:	movw	r2, #783	; 0x30f
   2c6fc:	movt	r0, #4
   2c700:	movt	r1, #4
   2c704:	movt	r3, #4
   2c708:	bl	14f44 <__assert_fail@plt>
   2c70c:	movw	r0, #21900	; 0x558c
   2c710:	movw	r1, #17382	; 0x43e6
   2c714:	movw	r3, #21579	; 0x544b
   2c718:	movw	r2, #647	; 0x287
   2c71c:	movt	r0, #4
   2c720:	movt	r1, #4
   2c724:	movt	r3, #4
   2c728:	bl	14f44 <__assert_fail@plt>

0002c72c <flatcc_builder_start_buffer@@Base>:
   2c72c:	push	{r4, r5, r6, r7, fp, lr}
   2c730:	add	fp, sp, #16
   2c734:	mov	r5, r1
   2c738:	ldrh	r1, [r0, #128]	; 0x80
   2c73c:	mov	r6, r3
   2c740:	mov	r7, r2
   2c744:	mov	r4, r0
   2c748:	bl	2c7e8 <flatcc_builder_start_buffer@@Base+0xbc>
   2c74c:	mov	r1, r0
   2c750:	mvn	r0, #0
   2c754:	cmp	r1, #0
   2c758:	popne	{r4, r5, r6, r7, fp, pc}
   2c75c:	mov	r0, #1
   2c760:	cmp	r5, #0
   2c764:	strh	r0, [r4, #128]	; 0x80
   2c768:	ldrh	r1, [r4, #132]	; 0x84
   2c76c:	ldr	r2, [r4, #32]
   2c770:	strh	r1, [r2, #34]	; 0x22
   2c774:	strh	r7, [r4, #132]	; 0x84
   2c778:	ldrh	r1, [r4, #164]	; 0xa4
   2c77c:	ldr	r2, [r4, #32]
   2c780:	strh	r1, [r2, #32]
   2c784:	strh	r6, [r4, #164]	; 0xa4
   2c788:	ldr	r1, [r4, #32]
   2c78c:	ldr	r2, [r4, #144]	; 0x90
   2c790:	str	r2, [r1, #20]
   2c794:	ldr	r1, [r4, #32]
   2c798:	ldr	r2, [r4, #152]	; 0x98
   2c79c:	str	r2, [r1, #28]
   2c7a0:	ldr	r3, [r4, #148]	; 0x94
   2c7a4:	ldr	r1, [r4, #32]
   2c7a8:	ldr	r2, [r4, #136]	; 0x88
   2c7ac:	ldr	r7, [r4, #168]	; 0xa8
   2c7b0:	add	r6, r3, #1
   2c7b4:	str	r2, [r4, #144]	; 0x90
   2c7b8:	str	r6, [r4, #148]	; 0x94
   2c7bc:	str	r3, [r4, #152]	; 0x98
   2c7c0:	str	r7, [r1, #16]
   2c7c4:	movw	r1, #16852	; 0x41d4
   2c7c8:	movt	r1, #4
   2c7cc:	movne	r1, r5
   2c7d0:	ldr	r1, [r1]
   2c7d4:	str	r1, [r4, #168]	; 0xa8
   2c7d8:	ldr	r1, [r4, #32]
   2c7dc:	strh	r0, [r1, #14]
   2c7e0:	mov	r0, #0
   2c7e4:	pop	{r4, r5, r6, r7, fp, pc}
   2c7e8:	push	{r4, r5, r6, r7, fp, lr}
   2c7ec:	add	fp, sp, #16
   2c7f0:	sub	sp, sp, #8
   2c7f4:	mov	r5, r1
   2c7f8:	ldr	r1, [r0, #156]	; 0x9c
   2c7fc:	ldr	r2, [r0, #160]	; 0xa0
   2c800:	mov	r4, r0
   2c804:	add	r0, r1, #1
   2c808:	cmp	r1, r2
   2c80c:	str	r0, [r4, #156]	; 0x9c
   2c810:	bge	2c824 <flatcc_builder_start_buffer@@Base+0xf8>
   2c814:	ldr	r0, [r4, #32]
   2c818:	add	r0, r0, #36	; 0x24
   2c81c:	str	r0, [r4, #32]
   2c820:	b	2c8b8 <flatcc_builder_start_buffer@@Base+0x18c>
   2c824:	ldr	r2, [r4, #176]	; 0xb0
   2c828:	mvn	r6, #0
   2c82c:	cmp	r2, #1
   2c830:	cmpge	r1, r2
   2c834:	bge	2c8f0 <flatcc_builder_start_buffer@@Base+0x1c4>
   2c838:	add	r7, r0, r0, lsl #3
   2c83c:	ldr	r0, [r4, #88]	; 0x58
   2c840:	lsl	r2, r7, #2
   2c844:	cmp	r2, r0
   2c848:	bls	2c870 <flatcc_builder_start_buffer@@Base+0x144>
   2c84c:	ldr	r0, [r4, #40]	; 0x28
   2c850:	ldr	ip, [r4, #48]	; 0x30
   2c854:	mov	r3, #4
   2c858:	add	r1, r4, #84	; 0x54
   2c85c:	str	r3, [sp]
   2c860:	mov	r3, #0
   2c864:	blx	ip
   2c868:	cmp	r0, #0
   2c86c:	bne	2c8fc <flatcc_builder_start_buffer@@Base+0x1d0>
   2c870:	ldr	r1, [r4, #84]	; 0x54
   2c874:	mvn	r0, #35	; 0x23
   2c878:	add	r0, r0, r7, lsl #2
   2c87c:	adds	r0, r0, r1
   2c880:	str	r0, [r4, #32]
   2c884:	beq	2c8f0 <flatcc_builder_start_buffer@@Base+0x1c4>
   2c888:	ldr	r1, [r4, #88]	; 0x58
   2c88c:	movw	r3, #36409	; 0x8e39
   2c890:	ldr	r2, [r4, #176]	; 0xb0
   2c894:	movt	r3, #14563	; 0x38e3
   2c898:	umull	r1, r3, r1, r3
   2c89c:	lsr	r1, r3, #3
   2c8a0:	cmp	r2, r3, lsr #3
   2c8a4:	mov	r3, r1
   2c8a8:	movlt	r3, r2
   2c8ac:	cmp	r2, #0
   2c8b0:	movle	r3, r1
   2c8b4:	str	r3, [r4, #160]	; 0xa0
   2c8b8:	ldr	r1, [r4, #20]
   2c8bc:	mvn	r3, #3
   2c8c0:	mov	r6, #0
   2c8c4:	str	r1, [r0, #8]
   2c8c8:	ldrh	r2, [r4, #130]	; 0x82
   2c8cc:	strh	r2, [r0, #12]
   2c8d0:	strh	r5, [r4, #130]	; 0x82
   2c8d4:	ldr	r2, [r4, #28]
   2c8d8:	stm	r0, {r2, r3}
   2c8dc:	add	r0, r1, r2
   2c8e0:	str	r6, [r4, #20]
   2c8e4:	add	r0, r0, #7
   2c8e8:	bic	r0, r0, #7
   2c8ec:	str	r0, [r4, #28]
   2c8f0:	mov	r0, r6
   2c8f4:	sub	sp, fp, #16
   2c8f8:	pop	{r4, r5, r6, r7, fp, pc}
   2c8fc:	movw	r0, #21900	; 0x558c
   2c900:	movw	r1, #17382	; 0x43e6
   2c904:	movw	r3, #21446	; 0x53c6
   2c908:	mov	r2, #308	; 0x134
   2c90c:	movt	r0, #4
   2c910:	movt	r1, #4
   2c914:	movt	r3, #4
   2c918:	bl	14f44 <__assert_fail@plt>

0002c91c <flatcc_builder_end_buffer@@Base>:
   2c91c:	push	{r4, r5, r6, sl, fp, lr}
   2c920:	add	fp, sp, #16
   2c924:	sub	sp, sp, #8
   2c928:	mov	r4, r0
   2c92c:	ldr	r0, [r0, #32]
   2c930:	ldrh	r0, [r0, #14]
   2c934:	cmp	r0, #1
   2c938:	bne	2ca2c <flatcc_builder_end_buffer@@Base+0x110>
   2c93c:	mov	r3, r1
   2c940:	ldr	r1, [r4, #152]	; 0x98
   2c944:	ldrh	r0, [r4, #164]	; 0xa4
   2c948:	ldrh	r2, [r4, #132]	; 0x84
   2c94c:	cmp	r1, #0
   2c950:	ldrh	r1, [r4, #128]	; 0x80
   2c954:	and	r0, r0, #2
   2c958:	orrne	r0, r0, #1
   2c95c:	cmp	r1, r2
   2c960:	movcc	r1, r2
   2c964:	strhcc	r2, [r4, #128]	; 0x80
   2c968:	str	r0, [sp, #4]
   2c96c:	mov	r0, r4
   2c970:	str	r1, [sp]
   2c974:	add	r1, r4, #168	; 0xa8
   2c978:	bl	2c3e8 <flatcc_builder_create_buffer@@Base>
   2c97c:	mov	r6, r0
   2c980:	cmp	r0, #0
   2c984:	beq	2ca20 <flatcc_builder_end_buffer@@Base+0x104>
   2c988:	ldr	r1, [r4, #32]
   2c98c:	ldr	r0, [r4, #16]
   2c990:	ldr	r2, [r4, #20]
   2c994:	ldr	r3, [r1, #20]
   2c998:	str	r3, [r4, #144]	; 0x90
   2c99c:	ldr	r3, [r1, #28]
   2c9a0:	str	r3, [r4, #152]	; 0x98
   2c9a4:	ldr	r3, [r1, #16]
   2c9a8:	str	r3, [r4, #168]	; 0xa8
   2c9ac:	ldrh	r1, [r1, #32]
   2c9b0:	strh	r1, [r4, #164]	; 0xa4
   2c9b4:	mov	r1, #0
   2c9b8:	bl	14ef0 <memset@plt>
   2c9bc:	ldr	r0, [r4, #32]
   2c9c0:	ldr	r1, [r4, #60]	; 0x3c
   2c9c4:	ldr	r2, [r4, #64]	; 0x40
   2c9c8:	ldr	r3, [r0, #8]
   2c9cc:	str	r3, [r4, #20]
   2c9d0:	ldr	r3, [r0]
   2c9d4:	str	r3, [r4, #28]
   2c9d8:	add	r1, r1, r3
   2c9dc:	ldr	r5, [r0, #4]
   2c9e0:	str	r1, [r4, #16]
   2c9e4:	sub	r1, r2, r3
   2c9e8:	cmp	r1, r5
   2c9ec:	movhi	r1, r5
   2c9f0:	str	r1, [r4, #24]
   2c9f4:	ldrh	r1, [r4, #130]	; 0x82
   2c9f8:	ldrh	r2, [r4, #128]	; 0x80
   2c9fc:	cmp	r2, r1
   2ca00:	strhcc	r1, [r4, #128]	; 0x80
   2ca04:	ldrh	r1, [r0, #12]
   2ca08:	sub	r0, r0, #36	; 0x24
   2ca0c:	str	r0, [r4, #32]
   2ca10:	strh	r1, [r4, #130]	; 0x82
   2ca14:	ldr	r0, [r4, #156]	; 0x9c
   2ca18:	sub	r0, r0, #1
   2ca1c:	str	r0, [r4, #156]	; 0x9c
   2ca20:	mov	r0, r6
   2ca24:	sub	sp, fp, #16
   2ca28:	pop	{r4, r5, r6, sl, fp, pc}
   2ca2c:	movw	r0, #17941	; 0x4615
   2ca30:	movw	r1, #17382	; 0x43e6
   2ca34:	movw	r3, #17985	; 0x4641
   2ca38:	movw	r2, #838	; 0x346
   2ca3c:	movt	r0, #4
   2ca40:	movt	r1, #4
   2ca44:	movt	r3, #4
   2ca48:	bl	14f44 <__assert_fail@plt>

0002ca4c <flatcc_builder_start_struct@@Base>:
   2ca4c:	push	{r4, r5, r6, r7, fp, lr}
   2ca50:	add	fp, sp, #16
   2ca54:	mov	r6, r1
   2ca58:	mov	r1, r2
   2ca5c:	mov	r4, r0
   2ca60:	bl	2c7e8 <flatcc_builder_start_buffer@@Base+0xbc>
   2ca64:	mov	r5, #0
   2ca68:	cmp	r0, #0
   2ca6c:	bne	2cadc <flatcc_builder_start_struct@@Base+0x90>
   2ca70:	ldr	r1, [r4, #32]
   2ca74:	mov	r0, #2
   2ca78:	strh	r0, [r1, #14]
   2ca7c:	ldr	r2, [r4, #28]
   2ca80:	ldr	r0, [r4, #60]	; 0x3c
   2ca84:	ldr	r3, [r4, #64]	; 0x40
   2ca88:	add	r0, r0, r2
   2ca8c:	sub	r2, r3, r2
   2ca90:	mvn	r3, #3
   2ca94:	cmn	r2, #4
   2ca98:	str	r0, [r4, #16]
   2ca9c:	movcs	r2, r3
   2caa0:	str	r2, [r4, #24]
   2caa4:	str	r3, [r1, #4]
   2caa8:	ldr	r7, [r4, #20]
   2caac:	add	r1, r7, r6
   2cab0:	cmp	r1, r2
   2cab4:	str	r1, [r4, #20]
   2cab8:	bcc	2cad8 <flatcc_builder_start_struct@@Base+0x8c>
   2cabc:	add	r1, r1, #1
   2cac0:	mov	r0, r4
   2cac4:	mvn	r2, #3
   2cac8:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2cacc:	cmp	r0, #0
   2cad0:	bne	2cadc <flatcc_builder_start_struct@@Base+0x90>
   2cad4:	ldr	r0, [r4, #16]
   2cad8:	add	r5, r0, r7
   2cadc:	mov	r0, r5
   2cae0:	pop	{r4, r5, r6, r7, fp, pc}

0002cae4 <flatcc_builder_struct_edit@@Base>:
   2cae4:	ldr	r0, [r0, #16]
   2cae8:	bx	lr

0002caec <flatcc_builder_end_struct@@Base>:
   2caec:	push	{r4, r5, fp, lr}
   2caf0:	add	fp, sp, #8
   2caf4:	mov	r4, r0
   2caf8:	ldr	r0, [r0, #32]
   2cafc:	ldrh	r0, [r0, #14]
   2cb00:	cmp	r0, #2
   2cb04:	bne	2cba4 <flatcc_builder_end_struct@@Base+0xb8>
   2cb08:	ldrh	r3, [r4, #130]	; 0x82
   2cb0c:	ldr	r1, [r4, #16]
   2cb10:	ldr	r2, [r4, #20]
   2cb14:	mov	r0, r4
   2cb18:	bl	2c604 <flatcc_builder_create_struct@@Base>
   2cb1c:	mov	r5, r0
   2cb20:	cmp	r0, #0
   2cb24:	beq	2cb9c <flatcc_builder_end_struct@@Base+0xb0>
   2cb28:	ldr	r0, [r4, #16]
   2cb2c:	ldr	r2, [r4, #20]
   2cb30:	mov	r1, #0
   2cb34:	bl	14ef0 <memset@plt>
   2cb38:	ldr	r0, [r4, #32]
   2cb3c:	ldr	r1, [r4, #60]	; 0x3c
   2cb40:	ldr	ip, [r4, #64]	; 0x40
   2cb44:	ldr	r3, [r0, #8]
   2cb48:	str	r3, [r4, #20]
   2cb4c:	ldr	r3, [r0]
   2cb50:	str	r3, [r4, #28]
   2cb54:	add	r1, r1, r3
   2cb58:	ldr	r2, [r0, #4]
   2cb5c:	str	r1, [r4, #16]
   2cb60:	sub	r1, ip, r3
   2cb64:	cmp	r1, r2
   2cb68:	movhi	r1, r2
   2cb6c:	str	r1, [r4, #24]
   2cb70:	ldrh	r1, [r4, #130]	; 0x82
   2cb74:	ldrh	r2, [r4, #128]	; 0x80
   2cb78:	cmp	r2, r1
   2cb7c:	strhcc	r1, [r4, #128]	; 0x80
   2cb80:	ldrh	r1, [r0, #12]
   2cb84:	sub	r0, r0, #36	; 0x24
   2cb88:	str	r0, [r4, #32]
   2cb8c:	strh	r1, [r4, #130]	; 0x82
   2cb90:	ldr	r0, [r4, #156]	; 0x9c
   2cb94:	sub	r0, r0, #1
   2cb98:	str	r0, [r4, #156]	; 0x9c
   2cb9c:	mov	r0, r5
   2cba0:	pop	{r4, r5, fp, pc}
   2cba4:	movw	r0, #18074	; 0x469a
   2cba8:	movw	r1, #17382	; 0x43e6
   2cbac:	movw	r3, #18118	; 0x46c6
   2cbb0:	mov	r2, #872	; 0x368
   2cbb4:	movt	r0, #4
   2cbb8:	movt	r1, #4
   2cbbc:	movt	r3, #4
   2cbc0:	bl	14f44 <__assert_fail@plt>

0002cbc4 <flatcc_builder_extend_vector@@Base>:
   2cbc4:	push	{r4, r5, fp, lr}
   2cbc8:	add	fp, sp, #8
   2cbcc:	mov	r4, r0
   2cbd0:	ldr	r0, [r0, #32]
   2cbd4:	ldr	r2, [r0, #20]
   2cbd8:	adds	r2, r2, r1
   2cbdc:	bcs	2cc3c <flatcc_builder_extend_vector@@Base+0x78>
   2cbe0:	ldr	r3, [r0, #24]
   2cbe4:	cmp	r2, r3
   2cbe8:	bhi	2cc3c <flatcc_builder_extend_vector@@Base+0x78>
   2cbec:	str	r2, [r0, #20]
   2cbf0:	ldr	r0, [r4, #32]
   2cbf4:	ldr	r5, [r4, #20]
   2cbf8:	ldr	r2, [r4, #24]
   2cbfc:	ldr	r0, [r0, #16]
   2cc00:	mla	r0, r0, r1, r5
   2cc04:	cmp	r0, r2
   2cc08:	str	r0, [r4, #20]
   2cc0c:	bcc	2cc30 <flatcc_builder_extend_vector@@Base+0x6c>
   2cc10:	add	r1, r0, #1
   2cc14:	mov	r0, r4
   2cc18:	mvn	r2, #3
   2cc1c:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2cc20:	mov	r1, r0
   2cc24:	mov	r0, #0
   2cc28:	cmp	r1, #0
   2cc2c:	popne	{r4, r5, fp, pc}
   2cc30:	ldr	r0, [r4, #16]
   2cc34:	add	r0, r0, r5
   2cc38:	pop	{r4, r5, fp, pc}
   2cc3c:	movw	r0, #21653	; 0x5495
   2cc40:	movw	r1, #17382	; 0x43e6
   2cc44:	movw	r3, #21680	; 0x54b0
   2cc48:	mov	r2, #892	; 0x37c
   2cc4c:	movt	r0, #4
   2cc50:	movt	r1, #4
   2cc54:	movt	r3, #4
   2cc58:	bl	14f44 <__assert_fail@plt>

0002cc5c <flatcc_builder_vector_push@@Base>:
   2cc5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2cc60:	add	fp, sp, #24
   2cc64:	mov	r5, r0
   2cc68:	ldr	r0, [r0, #32]
   2cc6c:	mov	r8, r1
   2cc70:	ldrh	r1, [r0, #14]
   2cc74:	cmp	r1, #4
   2cc78:	bne	2ccfc <flatcc_builder_vector_push@@Base+0xa0>
   2cc7c:	ldr	r1, [r0, #20]
   2cc80:	ldr	r2, [r0, #24]
   2cc84:	cmp	r1, r2
   2cc88:	bhi	2cd1c <flatcc_builder_vector_push@@Base+0xc0>
   2cc8c:	add	r1, r1, #1
   2cc90:	str	r1, [r0, #20]
   2cc94:	ldr	r0, [r5, #32]
   2cc98:	ldr	r4, [r5, #20]
   2cc9c:	ldr	r1, [r5, #24]
   2cca0:	ldr	r6, [r0, #16]
   2cca4:	add	r0, r4, r6
   2cca8:	cmp	r0, r1
   2ccac:	str	r0, [r5, #20]
   2ccb0:	bcc	2ccd0 <flatcc_builder_vector_push@@Base+0x74>
   2ccb4:	add	r1, r0, #1
   2ccb8:	mov	r0, r5
   2ccbc:	mvn	r2, #3
   2ccc0:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2ccc4:	mov	r7, #0
   2ccc8:	cmp	r0, #0
   2cccc:	bne	2ccf4 <flatcc_builder_vector_push@@Base+0x98>
   2ccd0:	ldr	r0, [r5, #16]
   2ccd4:	adds	r7, r0, r4
   2ccd8:	beq	2ccf0 <flatcc_builder_vector_push@@Base+0x94>
   2ccdc:	mov	r0, r7
   2cce0:	mov	r1, r8
   2cce4:	mov	r2, r6
   2cce8:	bl	14e60 <memcpy@plt>
   2ccec:	b	2ccf4 <flatcc_builder_vector_push@@Base+0x98>
   2ccf0:	mov	r7, #0
   2ccf4:	mov	r0, r7
   2ccf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ccfc:	movw	r0, #18185	; 0x4709
   2cd00:	movw	r1, #17382	; 0x43e6
   2cd04:	movw	r3, #18229	; 0x4735
   2cd08:	movw	r2, #907	; 0x38b
   2cd0c:	movt	r0, #4
   2cd10:	movt	r1, #4
   2cd14:	movt	r3, #4
   2cd18:	bl	14f44 <__assert_fail@plt>
   2cd1c:	movw	r0, #18296	; 0x4778
   2cd20:	movw	r1, #17382	; 0x43e6
   2cd24:	movw	r3, #18229	; 0x4735
   2cd28:	mov	r2, #908	; 0x38c
   2cd2c:	movt	r0, #4
   2cd30:	movt	r1, #4
   2cd34:	movt	r3, #4
   2cd38:	bl	14f44 <__assert_fail@plt>

0002cd3c <flatcc_builder_append_vector@@Base>:
   2cd3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2cd40:	add	fp, sp, #24
   2cd44:	mov	r6, r0
   2cd48:	ldr	r0, [r0, #32]
   2cd4c:	mov	r8, r1
   2cd50:	ldrh	r1, [r0, #14]
   2cd54:	cmp	r1, #4
   2cd58:	bne	2ce04 <flatcc_builder_append_vector@@Base+0xc8>
   2cd5c:	ldr	r1, [r0, #20]
   2cd60:	mov	r9, r2
   2cd64:	adds	r1, r1, r2
   2cd68:	bcs	2cde4 <flatcc_builder_append_vector@@Base+0xa8>
   2cd6c:	ldr	r2, [r0, #24]
   2cd70:	cmp	r1, r2
   2cd74:	bhi	2cde4 <flatcc_builder_append_vector@@Base+0xa8>
   2cd78:	str	r1, [r0, #20]
   2cd7c:	ldr	r0, [r6, #32]
   2cd80:	ldr	r4, [r6, #20]
   2cd84:	ldr	r1, [r6, #24]
   2cd88:	ldr	r5, [r0, #16]
   2cd8c:	mla	r0, r5, r9, r4
   2cd90:	cmp	r0, r1
   2cd94:	str	r0, [r6, #20]
   2cd98:	bcc	2cdb8 <flatcc_builder_append_vector@@Base+0x7c>
   2cd9c:	add	r1, r0, #1
   2cda0:	mov	r0, r6
   2cda4:	mvn	r2, #3
   2cda8:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2cdac:	mov	r7, #0
   2cdb0:	cmp	r0, #0
   2cdb4:	bne	2cddc <flatcc_builder_append_vector@@Base+0xa0>
   2cdb8:	ldr	r0, [r6, #16]
   2cdbc:	adds	r7, r0, r4
   2cdc0:	beq	2cdd8 <flatcc_builder_append_vector@@Base+0x9c>
   2cdc4:	mul	r2, r5, r9
   2cdc8:	mov	r0, r7
   2cdcc:	mov	r1, r8
   2cdd0:	bl	14e60 <memcpy@plt>
   2cdd4:	b	2cddc <flatcc_builder_append_vector@@Base+0xa0>
   2cdd8:	mov	r7, #0
   2cddc:	mov	r0, r7
   2cde0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2cde4:	movw	r0, #21653	; 0x5495
   2cde8:	movw	r1, #17382	; 0x43e6
   2cdec:	movw	r3, #21680	; 0x54b0
   2cdf0:	mov	r2, #892	; 0x37c
   2cdf4:	movt	r0, #4
   2cdf8:	movt	r1, #4
   2cdfc:	movt	r3, #4
   2ce00:	bl	14f44 <__assert_fail@plt>
   2ce04:	movw	r0, #18185	; 0x4709
   2ce08:	movw	r1, #17382	; 0x43e6
   2ce0c:	movw	r3, #18357	; 0x47b5
   2ce10:	movw	r2, #915	; 0x393
   2ce14:	movt	r0, #4
   2ce18:	movt	r1, #4
   2ce1c:	movt	r3, #4
   2ce20:	bl	14f44 <__assert_fail@plt>

0002ce24 <flatcc_builder_extend_offset_vector@@Base>:
   2ce24:	push	{r4, r5, fp, lr}
   2ce28:	add	fp, sp, #8
   2ce2c:	mov	r4, r0
   2ce30:	ldr	r0, [r0, #32]
   2ce34:	ldr	r2, [r0, #20]
   2ce38:	adds	r2, r2, r1
   2ce3c:	cmpcc	r2, #1073741824	; 0x40000000
   2ce40:	bcc	2ce64 <flatcc_builder_extend_offset_vector@@Base+0x40>
   2ce44:	movw	r0, #21653	; 0x5495
   2ce48:	movw	r1, #17382	; 0x43e6
   2ce4c:	movw	r3, #21680	; 0x54b0
   2ce50:	mov	r2, #892	; 0x37c
   2ce54:	movt	r0, #4
   2ce58:	movt	r1, #4
   2ce5c:	movt	r3, #4
   2ce60:	bl	14f44 <__assert_fail@plt>
   2ce64:	str	r2, [r0, #20]
   2ce68:	ldr	r5, [r4, #20]
   2ce6c:	ldr	r2, [r4, #24]
   2ce70:	add	r0, r5, r1, lsl #2
   2ce74:	cmp	r0, r2
   2ce78:	str	r0, [r4, #20]
   2ce7c:	bcc	2cea0 <flatcc_builder_extend_offset_vector@@Base+0x7c>
   2ce80:	add	r1, r0, #1
   2ce84:	mov	r0, r4
   2ce88:	mvn	r2, #3
   2ce8c:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2ce90:	mov	r1, r0
   2ce94:	mov	r0, #0
   2ce98:	cmp	r1, #0
   2ce9c:	popne	{r4, r5, fp, pc}
   2cea0:	ldr	r0, [r4, #16]
   2cea4:	add	r0, r0, r5
   2cea8:	pop	{r4, r5, fp, pc}

0002ceac <flatcc_builder_offset_vector_push@@Base>:
   2ceac:	push	{r4, r5, r6, r7, fp, lr}
   2ceb0:	add	fp, sp, #16
   2ceb4:	mov	r6, r0
   2ceb8:	ldr	r0, [r0, #32]
   2cebc:	mov	r4, r1
   2cec0:	ldrh	r1, [r0, #14]
   2cec4:	cmp	r1, #5
   2cec8:	bne	2cf2c <flatcc_builder_offset_vector_push@@Base+0x80>
   2cecc:	ldr	r1, [r0, #20]
   2ced0:	mov	r5, #0
   2ced4:	cmn	r1, #-1073741823	; 0xc0000001
   2ced8:	beq	2cf24 <flatcc_builder_offset_vector_push@@Base+0x78>
   2cedc:	add	r1, r1, #1
   2cee0:	str	r1, [r0, #20]
   2cee4:	ldr	r7, [r6, #20]
   2cee8:	ldr	r0, [r6, #24]
   2ceec:	add	r1, r7, #4
   2cef0:	cmp	r1, r0
   2cef4:	str	r1, [r6, #20]
   2cef8:	bcc	2cf14 <flatcc_builder_offset_vector_push@@Base+0x68>
   2cefc:	add	r1, r7, #5
   2cf00:	mov	r0, r6
   2cf04:	mvn	r2, #3
   2cf08:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2cf0c:	cmp	r0, #0
   2cf10:	bne	2cf24 <flatcc_builder_offset_vector_push@@Base+0x78>
   2cf14:	ldr	r0, [r6, #16]
   2cf18:	adds	r0, r0, r7
   2cf1c:	movne	r5, r0
   2cf20:	strne	r4, [r0]
   2cf24:	mov	r0, r5
   2cf28:	pop	{r4, r5, r6, r7, fp, pc}
   2cf2c:	movw	r0, #18434	; 0x4802
   2cf30:	movw	r1, #17382	; 0x43e6
   2cf34:	movw	r3, #18485	; 0x4835
   2cf38:	movw	r2, #934	; 0x3a6
   2cf3c:	movt	r0, #4
   2cf40:	movt	r1, #4
   2cf44:	movt	r3, #4
   2cf48:	bl	14f44 <__assert_fail@plt>

0002cf4c <flatcc_builder_append_offset_vector@@Base>:
   2cf4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2cf50:	add	fp, sp, #24
   2cf54:	mov	r6, r0
   2cf58:	ldr	r0, [r0, #32]
   2cf5c:	mov	r8, r1
   2cf60:	ldrh	r1, [r0, #14]
   2cf64:	cmp	r1, #5
   2cf68:	bne	2d004 <flatcc_builder_append_offset_vector@@Base+0xb8>
   2cf6c:	ldr	r1, [r0, #20]
   2cf70:	mov	r5, r2
   2cf74:	adds	r1, r1, r2
   2cf78:	cmpcc	r1, #1073741824	; 0x40000000
   2cf7c:	bcc	2cfa0 <flatcc_builder_append_offset_vector@@Base+0x54>
   2cf80:	movw	r0, #21653	; 0x5495
   2cf84:	movw	r1, #17382	; 0x43e6
   2cf88:	movw	r3, #21680	; 0x54b0
   2cf8c:	mov	r2, #892	; 0x37c
   2cf90:	movt	r0, #4
   2cf94:	movt	r1, #4
   2cf98:	movt	r3, #4
   2cf9c:	bl	14f44 <__assert_fail@plt>
   2cfa0:	str	r1, [r0, #20]
   2cfa4:	ldr	r4, [r6, #20]
   2cfa8:	ldr	r1, [r6, #24]
   2cfac:	add	r0, r4, r5, lsl #2
   2cfb0:	cmp	r0, r1
   2cfb4:	str	r0, [r6, #20]
   2cfb8:	bcc	2cfd8 <flatcc_builder_append_offset_vector@@Base+0x8c>
   2cfbc:	add	r1, r0, #1
   2cfc0:	mov	r0, r6
   2cfc4:	mvn	r2, #3
   2cfc8:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2cfcc:	mov	r7, #0
   2cfd0:	cmp	r0, #0
   2cfd4:	bne	2cffc <flatcc_builder_append_offset_vector@@Base+0xb0>
   2cfd8:	ldr	r0, [r6, #16]
   2cfdc:	adds	r7, r0, r4
   2cfe0:	beq	2cff8 <flatcc_builder_append_offset_vector@@Base+0xac>
   2cfe4:	lsl	r2, r5, #2
   2cfe8:	mov	r0, r7
   2cfec:	mov	r1, r8
   2cff0:	bl	14e60 <memcpy@plt>
   2cff4:	b	2cffc <flatcc_builder_append_offset_vector@@Base+0xb0>
   2cff8:	mov	r7, #0
   2cffc:	mov	r0, r7
   2d000:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d004:	movw	r0, #18434	; 0x4802
   2d008:	movw	r1, #17382	; 0x43e6
   2d00c:	movw	r3, #18583	; 0x4897
   2d010:	mov	r2, #948	; 0x3b4
   2d014:	movt	r0, #4
   2d018:	movt	r1, #4
   2d01c:	movt	r3, #4
   2d020:	bl	14f44 <__assert_fail@plt>

0002d024 <flatcc_builder_extend_string@@Base>:
   2d024:	push	{r4, r5, fp, lr}
   2d028:	add	fp, sp, #8
   2d02c:	mov	r4, r0
   2d030:	ldr	r0, [r0, #32]
   2d034:	ldrh	r2, [r0, #14]
   2d038:	cmp	r2, #6
   2d03c:	bne	2d094 <flatcc_builder_extend_string@@Base+0x70>
   2d040:	ldr	r2, [r0, #20]
   2d044:	adds	r2, r2, r1
   2d048:	bcs	2d0b4 <flatcc_builder_extend_string@@Base+0x90>
   2d04c:	str	r2, [r0, #20]
   2d050:	ldr	r5, [r4, #20]
   2d054:	ldr	r2, [r4, #24]
   2d058:	add	r0, r5, r1
   2d05c:	cmp	r0, r2
   2d060:	str	r0, [r4, #20]
   2d064:	bcc	2d088 <flatcc_builder_extend_string@@Base+0x64>
   2d068:	add	r1, r0, #1
   2d06c:	mov	r0, r4
   2d070:	mvn	r2, #3
   2d074:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2d078:	mov	r1, r0
   2d07c:	mov	r0, #0
   2d080:	cmp	r1, #0
   2d084:	popne	{r4, r5, fp, pc}
   2d088:	ldr	r0, [r4, #16]
   2d08c:	add	r0, r0, r5
   2d090:	pop	{r4, r5, fp, pc}
   2d094:	movw	r0, #18699	; 0x490b
   2d098:	movw	r1, #17382	; 0x43e6
   2d09c:	movw	r3, #18743	; 0x4937
   2d0a0:	movw	r2, #957	; 0x3bd
   2d0a4:	movt	r0, #4
   2d0a8:	movt	r1, #4
   2d0ac:	movt	r3, #4
   2d0b0:	bl	14f44 <__assert_fail@plt>
   2d0b4:	movw	r0, #21653	; 0x5495
   2d0b8:	movw	r1, #17382	; 0x43e6
   2d0bc:	movw	r3, #21680	; 0x54b0
   2d0c0:	mov	r2, #892	; 0x37c
   2d0c4:	movt	r0, #4
   2d0c8:	movt	r1, #4
   2d0cc:	movt	r3, #4
   2d0d0:	bl	14f44 <__assert_fail@plt>

0002d0d4 <flatcc_builder_append_string@@Base>:
   2d0d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d0d8:	add	fp, sp, #24
   2d0dc:	mov	r6, r0
   2d0e0:	ldr	r0, [r0, #32]
   2d0e4:	mov	r8, r1
   2d0e8:	ldrh	r1, [r0, #14]
   2d0ec:	cmp	r1, #6
   2d0f0:	bne	2d168 <flatcc_builder_append_string@@Base+0x94>
   2d0f4:	ldr	r1, [r0, #20]
   2d0f8:	mov	r4, r2
   2d0fc:	adds	r1, r1, r2
   2d100:	bcs	2d188 <flatcc_builder_append_string@@Base+0xb4>
   2d104:	str	r1, [r0, #20]
   2d108:	ldr	r5, [r6, #20]
   2d10c:	ldr	r1, [r6, #24]
   2d110:	add	r0, r5, r4
   2d114:	cmp	r0, r1
   2d118:	str	r0, [r6, #20]
   2d11c:	bcc	2d13c <flatcc_builder_append_string@@Base+0x68>
   2d120:	add	r1, r0, #1
   2d124:	mov	r0, r6
   2d128:	mvn	r2, #3
   2d12c:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2d130:	mov	r7, #0
   2d134:	cmp	r0, #0
   2d138:	bne	2d160 <flatcc_builder_append_string@@Base+0x8c>
   2d13c:	ldr	r0, [r6, #16]
   2d140:	adds	r7, r0, r5
   2d144:	beq	2d15c <flatcc_builder_append_string@@Base+0x88>
   2d148:	mov	r0, r7
   2d14c:	mov	r1, r8
   2d150:	mov	r2, r4
   2d154:	bl	14e60 <memcpy@plt>
   2d158:	b	2d160 <flatcc_builder_append_string@@Base+0x8c>
   2d15c:	mov	r7, #0
   2d160:	mov	r0, r7
   2d164:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d168:	movw	r0, #18699	; 0x490b
   2d16c:	movw	r1, #17382	; 0x43e6
   2d170:	movw	r3, #18806	; 0x4976
   2d174:	movw	r2, #966	; 0x3c6
   2d178:	movt	r0, #4
   2d17c:	movt	r1, #4
   2d180:	movt	r3, #4
   2d184:	bl	14f44 <__assert_fail@plt>
   2d188:	movw	r0, #21653	; 0x5495
   2d18c:	movw	r1, #17382	; 0x43e6
   2d190:	movw	r3, #21680	; 0x54b0
   2d194:	mov	r2, #892	; 0x37c
   2d198:	movt	r0, #4
   2d19c:	movt	r1, #4
   2d1a0:	movt	r3, #4
   2d1a4:	bl	14f44 <__assert_fail@plt>

0002d1a8 <flatcc_builder_append_string_str@@Base>:
   2d1a8:	push	{r4, r5, fp, lr}
   2d1ac:	add	fp, sp, #8
   2d1b0:	mov	r5, r0
   2d1b4:	mov	r0, r1
   2d1b8:	mov	r4, r1
   2d1bc:	bl	14ecc <strlen@plt>
   2d1c0:	mov	r2, r0
   2d1c4:	mov	r0, r5
   2d1c8:	mov	r1, r4
   2d1cc:	pop	{r4, r5, fp, lr}
   2d1d0:	b	2d0d4 <flatcc_builder_append_string@@Base>

0002d1d4 <flatcc_builder_append_string_strn@@Base>:
   2d1d4:	push	{r4, r5, r6, sl, fp, lr}
   2d1d8:	add	fp, sp, #16
   2d1dc:	mov	r6, r0
   2d1e0:	mov	r5, r1
   2d1e4:	mov	r0, r1
   2d1e8:	mov	r1, #0
   2d1ec:	mov	r4, r2
   2d1f0:	bl	14f14 <memchr@plt>
   2d1f4:	cmp	r0, #0
   2d1f8:	mov	r1, r5
   2d1fc:	subne	r4, r0, r5
   2d200:	mov	r0, r6
   2d204:	mov	r2, r4
   2d208:	pop	{r4, r5, r6, sl, fp, lr}
   2d20c:	b	2d0d4 <flatcc_builder_append_string@@Base>

0002d210 <flatcc_builder_truncate_vector@@Base>:
   2d210:	push	{fp, lr}
   2d214:	mov	fp, sp
   2d218:	ldr	r2, [r0, #32]
   2d21c:	ldrh	r3, [r2, #14]
   2d220:	cmp	r3, #4
   2d224:	bne	2d26c <flatcc_builder_truncate_vector@@Base+0x5c>
   2d228:	ldr	r3, [r2, #20]
   2d22c:	cmp	r3, r1
   2d230:	bcc	2d28c <flatcc_builder_truncate_vector@@Base+0x7c>
   2d234:	sub	r3, r3, r1
   2d238:	str	r3, [r2, #20]
   2d23c:	ldr	r2, [r0, #32]
   2d240:	ldr	r3, [r0, #20]
   2d244:	ldr	ip, [r0, #16]
   2d248:	ldr	r2, [r2, #16]
   2d24c:	mls	r3, r2, r1, r3
   2d250:	mul	r2, r2, r1
   2d254:	mov	r1, #0
   2d258:	str	r3, [r0, #20]
   2d25c:	add	r0, ip, r3
   2d260:	bl	14ef0 <memset@plt>
   2d264:	mov	r0, #0
   2d268:	pop	{fp, pc}
   2d26c:	movw	r0, #18185	; 0x4709
   2d270:	movw	r1, #17382	; 0x43e6
   2d274:	movw	r3, #18883	; 0x49c3
   2d278:	movw	r2, #985	; 0x3d9
   2d27c:	movt	r0, #4
   2d280:	movt	r1, #4
   2d284:	movt	r3, #4
   2d288:	bl	14f44 <__assert_fail@plt>
   2d28c:	movw	r0, #18946	; 0x4a02
   2d290:	movw	r1, #17382	; 0x43e6
   2d294:	movw	r3, #18883	; 0x49c3
   2d298:	movw	r2, #986	; 0x3da
   2d29c:	movt	r0, #4
   2d2a0:	movt	r1, #4
   2d2a4:	movt	r3, #4
   2d2a8:	bl	14f44 <__assert_fail@plt>

0002d2ac <flatcc_builder_truncate_offset_vector@@Base>:
   2d2ac:	push	{fp, lr}
   2d2b0:	mov	fp, sp
   2d2b4:	ldr	r2, [r0, #32]
   2d2b8:	ldrh	r3, [r2, #14]
   2d2bc:	cmp	r3, #5
   2d2c0:	bne	2d308 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2d2c4:	ldr	r3, [r2, #20]
   2d2c8:	cmp	r3, r1
   2d2cc:	bcc	2d328 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2d2d0:	sub	r3, r3, r1
   2d2d4:	str	r3, [r2, #20]
   2d2d8:	ldr	r2, [r0, #32]
   2d2dc:	ldr	r3, [r0, #20]
   2d2e0:	ldr	ip, [r0, #16]
   2d2e4:	ldr	r2, [r2, #16]
   2d2e8:	mls	r3, r2, r1, r3
   2d2ec:	mul	r2, r2, r1
   2d2f0:	mov	r1, #0
   2d2f4:	str	r3, [r0, #20]
   2d2f8:	add	r0, ip, r3
   2d2fc:	bl	14ef0 <memset@plt>
   2d300:	mov	r0, #0
   2d304:	pop	{fp, pc}
   2d308:	movw	r0, #18434	; 0x4802
   2d30c:	movw	r1, #17382	; 0x43e6
   2d310:	movw	r3, #18982	; 0x4a26
   2d314:	movw	r2, #994	; 0x3e2
   2d318:	movt	r0, #4
   2d31c:	movt	r1, #4
   2d320:	movt	r3, #4
   2d324:	bl	14f44 <__assert_fail@plt>
   2d328:	movw	r0, #19052	; 0x4a6c
   2d32c:	movw	r1, #17382	; 0x43e6
   2d330:	movw	r3, #18982	; 0x4a26
   2d334:	movw	r2, #995	; 0x3e3
   2d338:	movt	r0, #4
   2d33c:	movt	r1, #4
   2d340:	movt	r3, #4
   2d344:	bl	14f44 <__assert_fail@plt>

0002d348 <flatcc_builder_truncate_string@@Base>:
   2d348:	push	{fp, lr}
   2d34c:	mov	fp, sp
   2d350:	mov	r2, r1
   2d354:	ldr	r1, [r0, #32]
   2d358:	ldrh	r3, [r1, #14]
   2d35c:	cmp	r3, #6
   2d360:	bne	2d39c <flatcc_builder_truncate_string@@Base+0x54>
   2d364:	ldr	r3, [r1, #20]
   2d368:	cmp	r3, r2
   2d36c:	bcc	2d3bc <flatcc_builder_truncate_string@@Base+0x74>
   2d370:	sub	r3, r3, r2
   2d374:	str	r3, [r1, #20]
   2d378:	ldr	r3, [r0, #20]
   2d37c:	ldr	r1, [r0, #16]
   2d380:	sub	r3, r3, r2
   2d384:	str	r3, [r0, #20]
   2d388:	add	r0, r1, r3
   2d38c:	mov	r1, #0
   2d390:	bl	14ef0 <memset@plt>
   2d394:	mov	r0, #0
   2d398:	pop	{fp, pc}
   2d39c:	movw	r0, #18699	; 0x490b
   2d3a0:	movw	r1, #17382	; 0x43e6
   2d3a4:	movw	r3, #19111	; 0x4aa7
   2d3a8:	movw	r2, #1003	; 0x3eb
   2d3ac:	movt	r0, #4
   2d3b0:	movt	r1, #4
   2d3b4:	movt	r3, #4
   2d3b8:	bl	14f44 <__assert_fail@plt>
   2d3bc:	movw	r0, #19174	; 0x4ae6
   2d3c0:	movw	r1, #17382	; 0x43e6
   2d3c4:	movw	r3, #19111	; 0x4aa7
   2d3c8:	mov	r2, #1004	; 0x3ec
   2d3cc:	movt	r0, #4
   2d3d0:	movt	r1, #4
   2d3d4:	movt	r3, #4
   2d3d8:	bl	14f44 <__assert_fail@plt>

0002d3dc <flatcc_builder_start_vector@@Base>:
   2d3dc:	push	{r4, r5, r6, r7, fp, lr}
   2d3e0:	add	fp, sp, #16
   2d3e4:	mov	r7, #4
   2d3e8:	cmp	r2, #4
   2d3ec:	mov	r6, r1
   2d3f0:	mov	r5, r3
   2d3f4:	mov	r4, r0
   2d3f8:	movls	r2, r7
   2d3fc:	mov	r1, r2
   2d400:	bl	2c7e8 <flatcc_builder_start_buffer@@Base+0xbc>
   2d404:	mov	r1, r0
   2d408:	mvn	r0, #0
   2d40c:	cmp	r1, #0
   2d410:	popne	{r4, r5, r6, r7, fp, pc}
   2d414:	ldr	r0, [r4, #32]
   2d418:	str	r6, [r0, #16]
   2d41c:	mov	r0, #0
   2d420:	ldr	r1, [r4, #32]
   2d424:	str	r0, [r1, #20]
   2d428:	ldr	r1, [r4, #32]
   2d42c:	str	r5, [r1, #24]
   2d430:	ldr	r1, [r4, #32]
   2d434:	strh	r7, [r1, #14]
   2d438:	ldr	r2, [r4, #28]
   2d43c:	ldr	r3, [r4, #60]	; 0x3c
   2d440:	ldr	r7, [r4, #64]	; 0x40
   2d444:	add	r3, r3, r2
   2d448:	sub	r2, r7, r2
   2d44c:	str	r3, [r4, #16]
   2d450:	mvn	r3, #3
   2d454:	cmn	r2, #4
   2d458:	movcs	r2, r3
   2d45c:	str	r2, [r4, #24]
   2d460:	str	r3, [r1, #4]
   2d464:	pop	{r4, r5, r6, r7, fp, pc}

0002d468 <flatcc_builder_start_offset_vector@@Base>:
   2d468:	push	{r4, r5, fp, lr}
   2d46c:	add	fp, sp, #8
   2d470:	mov	r1, #4
   2d474:	mov	r4, r0
   2d478:	mov	r5, #4
   2d47c:	bl	2c7e8 <flatcc_builder_start_buffer@@Base+0xbc>
   2d480:	mov	r1, r0
   2d484:	mvn	r0, #0
   2d488:	cmp	r1, #0
   2d48c:	popne	{r4, r5, fp, pc}
   2d490:	ldr	r0, [r4, #32]
   2d494:	mov	r2, #5
   2d498:	str	r5, [r0, #16]
   2d49c:	mov	r0, #0
   2d4a0:	ldr	r1, [r4, #32]
   2d4a4:	str	r0, [r1, #20]
   2d4a8:	ldr	r1, [r4, #32]
   2d4ac:	strh	r2, [r1, #14]
   2d4b0:	ldr	r2, [r4, #28]
   2d4b4:	ldr	r3, [r4, #60]	; 0x3c
   2d4b8:	ldr	r5, [r4, #64]	; 0x40
   2d4bc:	add	r3, r3, r2
   2d4c0:	sub	r2, r5, r2
   2d4c4:	str	r3, [r4, #16]
   2d4c8:	mvn	r3, #3
   2d4cc:	cmn	r2, #4
   2d4d0:	movcs	r2, r3
   2d4d4:	str	r2, [r4, #24]
   2d4d8:	str	r3, [r1, #4]
   2d4dc:	pop	{r4, r5, fp, pc}

0002d4e0 <flatcc_builder_create_offset_vector@@Base>:
   2d4e0:	push	{r4, r5, r6, sl, fp, lr}
   2d4e4:	add	fp, sp, #16
   2d4e8:	mov	r6, r2
   2d4ec:	mov	r5, r1
   2d4f0:	mov	r4, r0
   2d4f4:	bl	2d468 <flatcc_builder_start_offset_vector@@Base>
   2d4f8:	cmp	r0, #0
   2d4fc:	beq	2d508 <flatcc_builder_create_offset_vector@@Base+0x28>
   2d500:	mov	r0, #0
   2d504:	pop	{r4, r5, r6, sl, fp, pc}
   2d508:	mov	r0, r4
   2d50c:	mov	r1, r6
   2d510:	bl	2ce24 <flatcc_builder_extend_offset_vector@@Base>
   2d514:	cmp	r0, #0
   2d518:	beq	2d500 <flatcc_builder_create_offset_vector@@Base+0x20>
   2d51c:	lsl	r2, r6, #2
   2d520:	mov	r1, r5
   2d524:	bl	14e60 <memcpy@plt>
   2d528:	mov	r0, r4
   2d52c:	pop	{r4, r5, r6, sl, fp, lr}
   2d530:	b	2d534 <flatcc_builder_end_offset_vector@@Base>

0002d534 <flatcc_builder_end_offset_vector@@Base>:
   2d534:	push	{r4, r5, fp, lr}
   2d538:	add	fp, sp, #8
   2d53c:	mov	r4, r0
   2d540:	ldr	r0, [r0, #32]
   2d544:	ldrh	r1, [r0, #14]
   2d548:	cmp	r1, #5
   2d54c:	bne	2d5ec <flatcc_builder_end_offset_vector@@Base+0xb8>
   2d550:	ldr	r2, [r0, #20]
   2d554:	ldr	r1, [r4, #16]
   2d558:	mov	r0, r4
   2d55c:	mov	r3, #0
   2d560:	bl	2e554 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d564:	mov	r5, r0
   2d568:	cmp	r0, #0
   2d56c:	beq	2d5e4 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2d570:	ldr	r0, [r4, #16]
   2d574:	ldr	r2, [r4, #20]
   2d578:	mov	r1, #0
   2d57c:	bl	14ef0 <memset@plt>
   2d580:	ldr	r0, [r4, #32]
   2d584:	ldr	r1, [r4, #60]	; 0x3c
   2d588:	ldr	ip, [r4, #64]	; 0x40
   2d58c:	ldr	r3, [r0, #8]
   2d590:	str	r3, [r4, #20]
   2d594:	ldr	r3, [r0]
   2d598:	str	r3, [r4, #28]
   2d59c:	add	r1, r1, r3
   2d5a0:	ldr	r2, [r0, #4]
   2d5a4:	str	r1, [r4, #16]
   2d5a8:	sub	r1, ip, r3
   2d5ac:	cmp	r1, r2
   2d5b0:	movhi	r1, r2
   2d5b4:	str	r1, [r4, #24]
   2d5b8:	ldrh	r1, [r4, #130]	; 0x82
   2d5bc:	ldrh	r2, [r4, #128]	; 0x80
   2d5c0:	cmp	r2, r1
   2d5c4:	strhcc	r1, [r4, #128]	; 0x80
   2d5c8:	ldrh	r1, [r0, #12]
   2d5cc:	sub	r0, r0, #36	; 0x24
   2d5d0:	str	r0, [r4, #32]
   2d5d4:	strh	r1, [r4, #130]	; 0x82
   2d5d8:	ldr	r0, [r4, #156]	; 0x9c
   2d5dc:	sub	r0, r0, #1
   2d5e0:	str	r0, [r4, #156]	; 0x9c
   2d5e4:	mov	r0, r5
   2d5e8:	pop	{r4, r5, fp, pc}
   2d5ec:	movw	r0, #18434	; 0x4802
   2d5f0:	movw	r1, #17382	; 0x43e6
   2d5f4:	movw	r3, #20017	; 0x4e31
   2d5f8:	movw	r2, #1480	; 0x5c8
   2d5fc:	movt	r0, #4
   2d600:	movt	r1, #4
   2d604:	movt	r3, #4
   2d608:	bl	14f44 <__assert_fail@plt>

0002d60c <flatcc_builder_start_string@@Base>:
   2d60c:	push	{r4, r5, fp, lr}
   2d610:	add	fp, sp, #8
   2d614:	mov	r1, #1
   2d618:	mov	r4, r0
   2d61c:	mov	r5, #1
   2d620:	bl	2c7e8 <flatcc_builder_start_buffer@@Base+0xbc>
   2d624:	mov	r1, r0
   2d628:	mvn	r0, #0
   2d62c:	cmp	r1, #0
   2d630:	popne	{r4, r5, fp, pc}
   2d634:	ldr	r0, [r4, #32]
   2d638:	mov	r2, #6
   2d63c:	str	r5, [r0, #16]
   2d640:	mov	r0, #0
   2d644:	ldr	r1, [r4, #32]
   2d648:	str	r0, [r1, #20]
   2d64c:	ldr	r1, [r4, #32]
   2d650:	strh	r2, [r1, #14]
   2d654:	ldr	r2, [r4, #28]
   2d658:	ldr	r3, [r4, #60]	; 0x3c
   2d65c:	ldr	r5, [r4, #64]	; 0x40
   2d660:	add	r3, r3, r2
   2d664:	sub	r2, r5, r2
   2d668:	str	r3, [r4, #16]
   2d66c:	mvn	r3, #3
   2d670:	cmn	r2, #4
   2d674:	movcs	r2, r3
   2d678:	str	r2, [r4, #24]
   2d67c:	str	r3, [r1, #4]
   2d680:	pop	{r4, r5, fp, pc}

0002d684 <flatcc_builder_reserve_table@@Base>:
   2d684:	push	{r4, r5, r6, sl, fp, lr}
   2d688:	add	fp, sp, #16
   2d68c:	sub	sp, sp, #8
   2d690:	cmn	r1, #1
   2d694:	ble	2d768 <flatcc_builder_reserve_table@@Base+0xe4>
   2d698:	mov	r4, r0
   2d69c:	ldr	r0, [r0, #32]
   2d6a0:	mov	r5, r1
   2d6a4:	ldr	r1, [r4, #56]	; 0x38
   2d6a8:	ldrh	r2, [r0, #28]
   2d6ac:	ldr	r0, [r0, #16]
   2d6b0:	add	r6, r0, r2, lsl #1
   2d6b4:	add	r0, r6, r5, lsl #1
   2d6b8:	add	r2, r0, #4
   2d6bc:	cmp	r2, r1
   2d6c0:	bls	2d6e8 <flatcc_builder_reserve_table@@Base+0x64>
   2d6c4:	ldr	r0, [r4, #40]	; 0x28
   2d6c8:	ldr	ip, [r4, #48]	; 0x30
   2d6cc:	mov	r3, #0
   2d6d0:	add	r1, r4, #52	; 0x34
   2d6d4:	str	r3, [sp]
   2d6d8:	mov	r3, #1
   2d6dc:	blx	ip
   2d6e0:	cmp	r0, #0
   2d6e4:	bne	2d788 <flatcc_builder_reserve_table@@Base+0x104>
   2d6e8:	ldr	r0, [r4, #52]	; 0x34
   2d6ec:	adds	r0, r0, r6
   2d6f0:	str	r0, [r4, #4]
   2d6f4:	beq	2d75c <flatcc_builder_reserve_table@@Base+0xd8>
   2d6f8:	add	r0, r0, #4
   2d6fc:	lsl	r1, r5, #1
   2d700:	str	r0, [r4, #4]
   2d704:	ldr	r0, [r4, #32]
   2d708:	ldr	r3, [r4, #80]	; 0x50
   2d70c:	ldr	r5, [r0, #20]
   2d710:	orr	r0, r1, #1
   2d714:	add	r2, r5, r0
   2d718:	cmp	r2, r3
   2d71c:	bls	2d744 <flatcc_builder_reserve_table@@Base+0xc0>
   2d720:	ldr	r0, [r4, #40]	; 0x28
   2d724:	ldr	r6, [r4, #48]	; 0x30
   2d728:	mov	r3, #3
   2d72c:	add	r1, r4, #76	; 0x4c
   2d730:	str	r3, [sp]
   2d734:	mov	r3, #0
   2d738:	blx	r6
   2d73c:	cmp	r0, #0
   2d740:	bne	2d788 <flatcc_builder_reserve_table@@Base+0x104>
   2d744:	ldr	r0, [r4, #76]	; 0x4c
   2d748:	adds	r0, r0, r5
   2d74c:	str	r0, [r4]
   2d750:	mov	r0, #0
   2d754:	mvneq	r0, #0
   2d758:	b	2d760 <flatcc_builder_reserve_table@@Base+0xdc>
   2d75c:	mvn	r0, #0
   2d760:	sub	sp, fp, #16
   2d764:	pop	{r4, r5, r6, sl, fp, pc}
   2d768:	movw	r0, #19273	; 0x4b49
   2d76c:	movw	r1, #17382	; 0x43e6
   2d770:	movw	r3, #19208	; 0x4b08
   2d774:	movw	r2, #1065	; 0x429
   2d778:	movt	r0, #4
   2d77c:	movt	r1, #4
   2d780:	movt	r3, #4
   2d784:	bl	14f44 <__assert_fail@plt>
   2d788:	movw	r0, #21900	; 0x558c
   2d78c:	movw	r1, #17382	; 0x43e6
   2d790:	movw	r3, #21446	; 0x53c6
   2d794:	mov	r2, #308	; 0x134
   2d798:	movt	r0, #4
   2d79c:	movt	r1, #4
   2d7a0:	movt	r3, #4
   2d7a4:	bl	14f44 <__assert_fail@plt>

0002d7a8 <flatcc_builder_start_table@@Base>:
   2d7a8:	push	{r4, r5, r6, r7, fp, lr}
   2d7ac:	add	fp, sp, #16
   2d7b0:	sub	sp, sp, #8
   2d7b4:	mov	r6, r1
   2d7b8:	mov	r1, #4
   2d7bc:	mov	r4, r0
   2d7c0:	bl	2c7e8 <flatcc_builder_start_buffer@@Base+0xbc>
   2d7c4:	mvn	r5, #0
   2d7c8:	cmp	r0, #0
   2d7cc:	beq	2d7dc <flatcc_builder_start_table@@Base+0x34>
   2d7d0:	mov	r0, r5
   2d7d4:	sub	sp, fp, #16
   2d7d8:	pop	{r4, r5, r6, r7, fp, pc}
   2d7dc:	mov	r1, r4
   2d7e0:	ldr	r2, [r4, #4]
   2d7e4:	ldr	r3, [r4, #32]
   2d7e8:	ldr	r0, [r1, #52]!	; 0x34
   2d7ec:	sub	r0, r2, r0
   2d7f0:	str	r0, [r3, #16]
   2d7f4:	ldr	r0, [r4]
   2d7f8:	ldr	r3, [r4, #76]	; 0x4c
   2d7fc:	ldr	r2, [r4, #32]
   2d800:	sub	r0, r0, r3
   2d804:	mov	r3, #0
   2d808:	str	r0, [r2, #20]
   2d80c:	ldr	r0, [r4, #12]
   2d810:	ldr	r2, [r4, #32]
   2d814:	str	r0, [r2, #24]
   2d818:	ldr	r0, [r4, #32]
   2d81c:	ldrh	r2, [r4, #8]
   2d820:	strh	r2, [r0, #28]
   2d824:	movw	r0, #15186	; 0x3b52
   2d828:	strh	r3, [r4, #8]
   2d82c:	mov	r2, #3
   2d830:	movt	r0, #12137	; 0x2f69
   2d834:	str	r0, [r4, #12]
   2d838:	ldr	r0, [r4, #32]
   2d83c:	strh	r2, [r0, #14]
   2d840:	ldrh	r2, [r0, #28]
   2d844:	ldr	r0, [r0, #16]
   2d848:	add	r7, r0, r2, lsl #1
   2d84c:	add	r0, r7, r6, lsl #1
   2d850:	add	r2, r0, #4
   2d854:	ldr	r0, [r4, #56]	; 0x38
   2d858:	cmp	r2, r0
   2d85c:	bls	2d87c <flatcc_builder_start_table@@Base+0xd4>
   2d860:	ldr	r0, [r4, #40]	; 0x28
   2d864:	ldr	ip, [r4, #48]	; 0x30
   2d868:	str	r3, [sp]
   2d86c:	mov	r3, #1
   2d870:	blx	ip
   2d874:	cmp	r0, #0
   2d878:	bne	2d920 <flatcc_builder_start_table@@Base+0x178>
   2d87c:	ldr	r0, [r4, #52]	; 0x34
   2d880:	adds	r0, r0, r7
   2d884:	str	r0, [r4, #4]
   2d888:	beq	2d7d0 <flatcc_builder_start_table@@Base+0x28>
   2d88c:	add	r0, r0, #4
   2d890:	lsl	r1, r6, #1
   2d894:	str	r0, [r4, #4]
   2d898:	ldr	r0, [r4, #32]
   2d89c:	ldr	r3, [r4, #80]	; 0x50
   2d8a0:	ldr	r6, [r0, #20]
   2d8a4:	orr	r0, r1, #1
   2d8a8:	add	r2, r6, r0
   2d8ac:	cmp	r2, r3
   2d8b0:	bls	2d8d8 <flatcc_builder_start_table@@Base+0x130>
   2d8b4:	ldr	r0, [r4, #40]	; 0x28
   2d8b8:	ldr	r7, [r4, #48]	; 0x30
   2d8bc:	mov	r3, #3
   2d8c0:	add	r1, r4, #76	; 0x4c
   2d8c4:	str	r3, [sp]
   2d8c8:	mov	r3, #0
   2d8cc:	blx	r7
   2d8d0:	cmp	r0, #0
   2d8d4:	bne	2d920 <flatcc_builder_start_table@@Base+0x178>
   2d8d8:	ldr	r0, [r4, #76]	; 0x4c
   2d8dc:	adds	r0, r0, r6
   2d8e0:	str	r0, [r4]
   2d8e4:	beq	2d7d0 <flatcc_builder_start_table@@Base+0x28>
   2d8e8:	ldr	r0, [r4, #28]
   2d8ec:	ldr	r2, [r4, #60]	; 0x3c
   2d8f0:	ldr	r3, [r4, #64]	; 0x40
   2d8f4:	ldr	r1, [r4, #32]
   2d8f8:	mov	r5, #0
   2d8fc:	add	r2, r2, r0
   2d900:	sub	r0, r3, r0
   2d904:	str	r2, [r4, #16]
   2d908:	movw	r2, #65532	; 0xfffc
   2d90c:	cmp	r0, r2
   2d910:	movcs	r0, r2
   2d914:	str	r0, [r4, #24]
   2d918:	str	r2, [r1, #4]
   2d91c:	b	2d7d0 <flatcc_builder_start_table@@Base+0x28>
   2d920:	movw	r0, #21900	; 0x558c
   2d924:	movw	r1, #17382	; 0x43e6
   2d928:	movw	r3, #21446	; 0x53c6
   2d92c:	mov	r2, #308	; 0x134
   2d930:	movt	r0, #4
   2d934:	movt	r1, #4
   2d938:	movt	r3, #4
   2d93c:	bl	14f44 <__assert_fail@plt>

0002d940 <flatcc_builder_create_vtable@@Base>:
   2d940:	push	{r4, r5, fp, lr}
   2d944:	add	fp, sp, #8
   2d948:	sub	sp, sp, #80	; 0x50
   2d94c:	mov	r3, r2
   2d950:	mov	r2, #0
   2d954:	mov	r4, r0
   2d958:	cmp	r3, #0
   2d95c:	str	r2, [sp, #12]
   2d960:	str	r2, [sp, #8]
   2d964:	movne	r2, #1
   2d968:	strne	r1, [sp, #16]
   2d96c:	strne	r3, [sp, #8]
   2d970:	strne	r3, [sp, #20]
   2d974:	strne	r2, [sp, #12]
   2d978:	ldr	r0, [r4, #152]	; 0x98
   2d97c:	cmp	r0, #0
   2d980:	bne	2d990 <flatcc_builder_create_vtable@@Base+0x50>
   2d984:	ldr	r0, [r4, #180]	; 0xb4
   2d988:	cmp	r0, #0
   2d98c:	beq	2d9e0 <flatcc_builder_create_vtable@@Base+0xa0>
   2d990:	cmp	r3, #0
   2d994:	beq	2da20 <flatcc_builder_create_vtable@@Base+0xe0>
   2d998:	ldr	r0, [r4, #136]	; 0x88
   2d99c:	ldr	ip, [r4, #44]	; 0x2c
   2d9a0:	add	r1, sp, #8
   2d9a4:	add	r1, r1, #8
   2d9a8:	sub	r5, r0, r3
   2d9ac:	ldr	r0, [r4, #36]	; 0x24
   2d9b0:	str	r3, [sp]
   2d9b4:	mov	r3, r5
   2d9b8:	blx	ip
   2d9bc:	cmp	r0, #0
   2d9c0:	bne	2da40 <flatcc_builder_create_vtable@@Base+0x100>
   2d9c4:	cmp	r5, #0
   2d9c8:	str	r5, [r4, #136]	; 0x88
   2d9cc:	beq	2d9d8 <flatcc_builder_create_vtable@@Base+0x98>
   2d9d0:	add	r0, r5, #1
   2d9d4:	b	2da18 <flatcc_builder_create_vtable@@Base+0xd8>
   2d9d8:	mov	r0, #0
   2d9dc:	b	2da18 <flatcc_builder_create_vtable@@Base+0xd8>
   2d9e0:	ldr	r5, [r4, #140]	; 0x8c
   2d9e4:	ldr	r0, [r4, #36]	; 0x24
   2d9e8:	ldr	ip, [r4, #44]	; 0x2c
   2d9ec:	add	r1, r5, r3
   2d9f0:	str	r1, [r4, #140]	; 0x8c
   2d9f4:	add	r1, sp, #8
   2d9f8:	str	r3, [sp]
   2d9fc:	mov	r3, r5
   2da00:	add	r1, r1, #8
   2da04:	blx	ip
   2da08:	cmp	r0, #0
   2da0c:	bne	2da60 <flatcc_builder_create_vtable@@Base+0x120>
   2da10:	adds	r0, r5, #1
   2da14:	moveq	r0, #0
   2da18:	sub	sp, fp, #8
   2da1c:	pop	{r4, r5, fp, pc}
   2da20:	movw	r0, #21900	; 0x558c
   2da24:	movw	r1, #17382	; 0x43e6
   2da28:	movw	r3, #21579	; 0x544b
   2da2c:	movw	r2, #647	; 0x287
   2da30:	movt	r0, #4
   2da34:	movt	r1, #4
   2da38:	movt	r3, #4
   2da3c:	bl	14f44 <__assert_fail@plt>
   2da40:	movw	r0, #21900	; 0x558c
   2da44:	movw	r1, #17382	; 0x43e6
   2da48:	movw	r3, #21579	; 0x544b
   2da4c:	movw	r2, #651	; 0x28b
   2da50:	movt	r0, #4
   2da54:	movt	r1, #4
   2da58:	movt	r3, #4
   2da5c:	bl	14f44 <__assert_fail@plt>
   2da60:	movw	r0, #21900	; 0x558c
   2da64:	movw	r1, #17382	; 0x43e6
   2da68:	movw	r3, #21767	; 0x5507
   2da6c:	movw	r2, #677	; 0x2a5
   2da70:	movt	r0, #4
   2da74:	movt	r1, #4
   2da78:	movt	r3, #4
   2da7c:	bl	14f44 <__assert_fail@plt>

0002da80 <flatcc_builder_create_cached_vtable@@Base>:
   2da80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2da84:	add	fp, sp, #28
   2da88:	sub	sp, sp, #20
   2da8c:	mov	sl, r0
   2da90:	ldr	r0, [r0, #116]	; 0x74
   2da94:	mov	r8, r3
   2da98:	mov	r5, r2
   2da9c:	str	r1, [sp, #16]
   2daa0:	cmp	r0, #0
   2daa4:	beq	2db48 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2daa8:	ldr	r1, [sl, #92]	; 0x5c
   2daac:	rsb	r0, r0, #32
   2dab0:	lsr	r0, r8, r0
   2dab4:	add	r6, r1, r0, lsl #2
   2dab8:	cmp	r6, #0
   2dabc:	beq	2dc0c <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2dac0:	ldr	r7, [r6]
   2dac4:	str	r6, [sp, #12]
   2dac8:	cmp	r7, #0
   2dacc:	beq	2dc14 <flatcc_builder_create_cached_vtable@@Base+0x194>
   2dad0:	ldr	r4, [sl, #68]	; 0x44
   2dad4:	ldr	r8, [sl, #100]	; 0x64
   2dad8:	mov	r0, #0
   2dadc:	str	r0, [sp, #8]
   2dae0:	add	r9, r8, r7
   2dae4:	mov	r1, r4
   2dae8:	ldr	r0, [r9, #8]
   2daec:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2daf0:	cmp	r0, r5
   2daf4:	bne	2db0c <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2daf8:	ldr	r0, [sp, #16]
   2dafc:	mov	r2, r5
   2db00:	bl	14e6c <memcmp@plt>
   2db04:	cmp	r0, #0
   2db08:	beq	2db20 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2db0c:	ldr	r7, [r9, #12]!
   2db10:	cmp	r7, #0
   2db14:	mov	r6, r9
   2db18:	bne	2dae0 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2db1c:	b	2dc04 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2db20:	ldr	r0, [sl, #152]	; 0x98
   2db24:	ldr	r1, [r9, #4]
   2db28:	cmp	r1, r0
   2db2c:	beq	2dd78 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2db30:	mov	r6, r9
   2db34:	mov	r0, r9
   2db38:	ldr	r7, [r6, #12]!
   2db3c:	cmp	r7, #0
   2db40:	bne	2dadc <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2db44:	b	2dc18 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2db48:	ldr	r0, [sl, #124]	; 0x7c
   2db4c:	cmp	r0, #0
   2db50:	bne	2ddc4 <flatcc_builder_create_cached_vtable@@Base+0x344>
   2db54:	ldr	r0, [sl, #104]	; 0x68
   2db58:	add	r7, sl, #100	; 0x64
   2db5c:	cmp	r0, #15
   2db60:	bhi	2db8c <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2db64:	ldr	r0, [sl, #40]	; 0x28
   2db68:	ldr	r6, [sl, #48]	; 0x30
   2db6c:	mov	r1, #6
   2db70:	mov	r2, #16
   2db74:	mov	r3, #0
   2db78:	str	r1, [sp]
   2db7c:	mov	r1, r7
   2db80:	blx	r6
   2db84:	cmp	r0, #0
   2db88:	bne	2dda4 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2db8c:	ldr	r0, [r7]
   2db90:	mov	r7, #0
   2db94:	cmp	r0, #0
   2db98:	beq	2dcb8 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2db9c:	mov	r0, #16
   2dba0:	mov	r2, #5
   2dba4:	add	r1, sl, #92	; 0x5c
   2dba8:	mov	r3, #1
   2dbac:	mov	r4, #256	; 0x100
   2dbb0:	str	r0, [sl, #124]	; 0x7c
   2dbb4:	ldr	r0, [sl, #40]	; 0x28
   2dbb8:	ldr	r6, [sl, #48]	; 0x30
   2dbbc:	str	r2, [sp]
   2dbc0:	mov	r2, #256	; 0x100
   2dbc4:	blx	r6
   2dbc8:	cmp	r0, #0
   2dbcc:	bne	2dcb8 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2dbd0:	ldr	r0, [sl, #96]	; 0x60
   2dbd4:	mov	r1, r4
   2dbd8:	lsl	r4, r4, #1
   2dbdc:	cmp	r0, r1, lsl #1
   2dbe0:	bcs	2dbd4 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2dbe4:	lsr	r1, r1, #2
   2dbe8:	mvn	r0, #0
   2dbec:	mov	r2, #1
   2dbf0:	add	r0, r0, #1
   2dbf4:	cmp	r1, r2, lsl r0
   2dbf8:	bhi	2dbf0 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2dbfc:	str	r0, [sl, #116]	; 0x74
   2dc00:	b	2daa8 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2dc04:	ldr	r9, [sp, #8]
   2dc08:	b	2dc18 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2dc0c:	mov	r7, #0
   2dc10:	b	2dcb8 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2dc14:	mov	r9, #0
   2dc18:	ldr	r4, [sl, #124]	; 0x7c
   2dc1c:	ldr	r0, [sl, #104]	; 0x68
   2dc20:	add	r7, sl, #100	; 0x64
   2dc24:	add	r2, r4, #16
   2dc28:	cmp	r2, r0
   2dc2c:	bls	2dc54 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2dc30:	ldr	r0, [sl, #40]	; 0x28
   2dc34:	ldr	r6, [sl, #48]	; 0x30
   2dc38:	mov	r1, #6
   2dc3c:	mov	r3, #0
   2dc40:	str	r1, [sp]
   2dc44:	mov	r1, r7
   2dc48:	blx	r6
   2dc4c:	cmp	r0, #0
   2dc50:	bne	2dda4 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2dc54:	ldr	r0, [r7]
   2dc58:	mov	r7, #0
   2dc5c:	adds	r4, r0, r4
   2dc60:	beq	2dcb8 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2dc64:	ldr	r0, [sl, #124]	; 0x7c
   2dc68:	ldr	r1, [sl, #152]	; 0x98
   2dc6c:	add	r2, r0, #16
   2dc70:	str	r2, [sl, #124]	; 0x7c
   2dc74:	ldr	r2, [sp, #12]
   2dc78:	str	r1, [r4, #4]
   2dc7c:	ldr	r1, [r2]
   2dc80:	str	r1, [r4, #12]
   2dc84:	ldr	r1, [sp, #16]
   2dc88:	str	r0, [r2]
   2dc8c:	mov	r0, sl
   2dc90:	mov	r2, r5
   2dc94:	bl	2d940 <flatcc_builder_create_vtable@@Base>
   2dc98:	cmp	r0, #0
   2dc9c:	str	r0, [r4]
   2dca0:	beq	2dcb8 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2dca4:	cmp	r9, #0
   2dca8:	beq	2dcc4 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2dcac:	ldr	r0, [r9, #8]
   2dcb0:	str	r0, [r4, #8]
   2dcb4:	ldr	r7, [r4]
   2dcb8:	mov	r0, r7
   2dcbc:	sub	sp, fp, #28
   2dcc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dcc4:	ldr	r6, [sl, #120]	; 0x78
   2dcc8:	ldr	r0, [sl, #172]	; 0xac
   2dccc:	add	r2, r6, r5
   2dcd0:	cmp	r0, #0
   2dcd4:	beq	2dd10 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2dcd8:	cmp	r0, r2
   2dcdc:	bcs	2dd10 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2dce0:	ldr	r0, [sl, #116]	; 0x74
   2dce4:	cmp	r0, #0
   2dce8:	beq	2dcb4 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2dcec:	ldr	r0, [sl, #92]	; 0x5c
   2dcf0:	ldr	r2, [sl, #96]	; 0x60
   2dcf4:	mov	r1, #0
   2dcf8:	mov	r5, #0
   2dcfc:	bl	14ef0 <memset@plt>
   2dd00:	mov	r0, #16
   2dd04:	str	r5, [sl, #120]	; 0x78
   2dd08:	str	r0, [sl, #124]	; 0x7c
   2dd0c:	b	2dcb4 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2dd10:	ldr	r0, [sl, #72]	; 0x48
   2dd14:	add	r7, sl, #68	; 0x44
   2dd18:	cmp	r2, r0
   2dd1c:	bls	2dd44 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2dd20:	ldr	r0, [sl, #40]	; 0x28
   2dd24:	ldr	ip, [sl, #48]	; 0x30
   2dd28:	mov	r1, #2
   2dd2c:	mov	r3, #0
   2dd30:	str	r1, [sp]
   2dd34:	mov	r1, r7
   2dd38:	blx	ip
   2dd3c:	cmp	r0, #0
   2dd40:	bne	2dda4 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2dd44:	ldr	r0, [r7]
   2dd48:	adds	r0, r0, r6
   2dd4c:	beq	2dd70 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2dd50:	ldr	r1, [sl, #120]	; 0x78
   2dd54:	mov	r2, r5
   2dd58:	str	r1, [r4, #8]
   2dd5c:	add	r1, r1, r5
   2dd60:	str	r1, [sl, #120]	; 0x78
   2dd64:	ldr	r1, [sp, #16]
   2dd68:	bl	14e60 <memcpy@plt>
   2dd6c:	b	2dcb4 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2dd70:	mvn	r7, #0
   2dd74:	b	2dcb8 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2dd78:	ldr	r0, [sp, #12]
   2dd7c:	cmp	r6, r0
   2dd80:	beq	2dd9c <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2dd84:	mov	r1, r0
   2dd88:	ldr	r0, [r9, #12]
   2dd8c:	str	r0, [r6]
   2dd90:	ldr	r0, [r1]
   2dd94:	str	r0, [r9, #12]
   2dd98:	str	r7, [r1]
   2dd9c:	ldr	r7, [r9]
   2dda0:	b	2dcb8 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2dda4:	movw	r0, #21900	; 0x558c
   2dda8:	movw	r1, #17382	; 0x43e6
   2ddac:	movw	r3, #21446	; 0x53c6
   2ddb0:	mov	r2, #308	; 0x134
   2ddb4:	movt	r0, #4
   2ddb8:	movt	r1, #4
   2ddbc:	movt	r3, #4
   2ddc0:	bl	14f44 <__assert_fail@plt>
   2ddc4:	movw	r0, #21840	; 0x5550
   2ddc8:	movw	r1, #17382	; 0x43e6
   2ddcc:	movw	r3, #21855	; 0x555f
   2ddd0:	movw	r2, #342	; 0x156
   2ddd4:	movt	r0, #4
   2ddd8:	movt	r1, #4
   2dddc:	movt	r3, #4
   2dde0:	bl	14f44 <__assert_fail@plt>

0002dde4 <flatcc_builder_create_table@@Base>:
   2dde4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2dde8:	add	fp, sp, #24
   2ddec:	sub	sp, sp, #80	; 0x50
   2ddf0:	ldr	r5, [fp, #12]
   2ddf4:	cmn	r5, #1
   2ddf8:	ble	2df4c <flatcc_builder_create_table@@Base+0x168>
   2ddfc:	ldr	ip, [fp, #16]
   2de00:	tst	ip, #1
   2de04:	beq	2df6c <flatcc_builder_create_table@@Base+0x188>
   2de08:	mov	r8, r0
   2de0c:	ldrh	r0, [r0, #128]	; 0x80
   2de10:	cmp	r3, #4
   2de14:	movls	r3, #4
   2de18:	cmp	r0, r3
   2de1c:	strhcc	r3, [r8, #128]	; 0x80
   2de20:	sub	r3, r3, #1
   2de24:	cmp	r5, #1
   2de28:	ldr	r4, [r8, #136]	; 0x88
   2de2c:	sub	r0, r4, r2
   2de30:	and	r0, r0, r3
   2de34:	add	r3, ip, r0
   2de38:	mvn	ip, #3
   2de3c:	sub	r6, ip, r2
   2de40:	add	r4, r6, r4
   2de44:	add	r6, r4, #1
   2de48:	sub	r3, r6, r3
   2de4c:	str	r3, [fp, #-28]	; 0xffffffe4
   2de50:	blt	2de7c <flatcc_builder_create_table@@Base+0x98>
   2de54:	ldr	r3, [fp, #8]
   2de58:	sub	r6, r4, r0
   2de5c:	sub	r4, ip, r6
   2de60:	ldrh	r6, [r3], #2
   2de64:	subs	r5, r5, #1
   2de68:	ldr	r7, [r6, r1]
   2de6c:	add	r7, r4, r7
   2de70:	sub	r7, r7, r6
   2de74:	str	r7, [r6, r1]
   2de78:	bne	2de60 <flatcc_builder_create_table@@Base+0x7c>
   2de7c:	sub	r3, fp, #28
   2de80:	mov	r4, #4
   2de84:	cmp	r2, #0
   2de88:	str	r3, [sp, #12]
   2de8c:	mov	r3, #1
   2de90:	str	r4, [sp, #4]
   2de94:	str	r4, [sp, #16]
   2de98:	str	r3, [sp, #8]
   2de9c:	beq	2deb8 <flatcc_builder_create_table@@Base+0xd4>
   2dea0:	mov	r3, #2
   2dea4:	add	r4, r2, #4
   2dea8:	str	r1, [sp, #20]
   2deac:	str	r2, [sp, #24]
   2deb0:	str	r3, [sp, #8]
   2deb4:	str	r4, [sp, #4]
   2deb8:	cmp	r0, #0
   2debc:	beq	2dee8 <flatcc_builder_create_table@@Base+0x104>
   2dec0:	add	r1, sp, #4
   2dec4:	movw	r2, #16852	; 0x41d4
   2dec8:	add	r4, r4, r0
   2decc:	add	r1, r1, r3, lsl #3
   2ded0:	add	r3, r3, #1
   2ded4:	movt	r2, #4
   2ded8:	str	r4, [sp, #4]
   2dedc:	str	r2, [r1, #8]
   2dee0:	str	r0, [r1, #12]
   2dee4:	str	r3, [sp, #8]
   2dee8:	cmp	r4, #0
   2deec:	ble	2df8c <flatcc_builder_create_table@@Base+0x1a8>
   2def0:	ldr	r0, [r8, #136]	; 0x88
   2def4:	ldr	r7, [r8, #44]	; 0x2c
   2def8:	add	r1, sp, #4
   2defc:	mov	r2, r3
   2df00:	add	r1, r1, #8
   2df04:	sub	r5, r0, r4
   2df08:	ldr	r0, [r8, #36]	; 0x24
   2df0c:	str	r4, [sp]
   2df10:	mov	r3, r5
   2df14:	blx	r7
   2df18:	cmp	r0, #0
   2df1c:	streq	r5, [r8, #136]	; 0x88
   2df20:	moveq	r0, r5
   2df24:	subeq	sp, fp, #24
   2df28:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2df2c:	movw	r0, #21900	; 0x558c
   2df30:	movw	r1, #17382	; 0x43e6
   2df34:	movw	r3, #21579	; 0x544b
   2df38:	movw	r2, #651	; 0x28b
   2df3c:	movt	r0, #4
   2df40:	movt	r1, #4
   2df44:	movt	r3, #4
   2df48:	bl	14f44 <__assert_fail@plt>
   2df4c:	movw	r0, #19266	; 0x4b42
   2df50:	movw	r1, #17382	; 0x43e6
   2df54:	movw	r3, #19284	; 0x4b54
   2df58:	movw	r2, #1237	; 0x4d5
   2df5c:	movt	r0, #4
   2df60:	movt	r1, #4
   2df64:	movt	r3, #4
   2df68:	bl	14f44 <__assert_fail@plt>
   2df6c:	movw	r0, #19440	; 0x4bf0
   2df70:	movw	r1, #17382	; 0x43e6
   2df74:	movw	r3, #19284	; 0x4b54
   2df78:	movw	r2, #1243	; 0x4db
   2df7c:	movt	r0, #4
   2df80:	movt	r1, #4
   2df84:	movt	r3, #4
   2df88:	bl	14f44 <__assert_fail@plt>
   2df8c:	movw	r0, #21900	; 0x558c
   2df90:	movw	r1, #17382	; 0x43e6
   2df94:	movw	r3, #21579	; 0x544b
   2df98:	movw	r2, #647	; 0x287
   2df9c:	movt	r0, #4
   2dfa0:	movt	r1, #4
   2dfa4:	movt	r3, #4
   2dfa8:	bl	14f44 <__assert_fail@plt>

0002dfac <flatcc_builder_check_required_field@@Base>:
   2dfac:	ldr	r2, [r0, #32]
   2dfb0:	ldrh	r2, [r2, #14]
   2dfb4:	cmp	r2, #3
   2dfb8:	bne	2dfe8 <flatcc_builder_check_required_field@@Base+0x3c>
   2dfbc:	ldrh	r3, [r0, #8]
   2dfc0:	mov	r2, #0
   2dfc4:	cmp	r3, r1
   2dfc8:	bls	2dfe0 <flatcc_builder_check_required_field@@Base+0x34>
   2dfcc:	ldr	r0, [r0, #4]
   2dfd0:	add	r0, r0, r1, lsl #1
   2dfd4:	ldrh	r2, [r0]
   2dfd8:	cmp	r2, #0
   2dfdc:	movwne	r2, #1
   2dfe0:	mov	r0, r2
   2dfe4:	bx	lr
   2dfe8:	push	{fp, lr}
   2dfec:	mov	fp, sp
   2dff0:	movw	r0, #19451	; 0x4bfb
   2dff4:	movw	r1, #17382	; 0x43e6
   2dff8:	movw	r3, #19494	; 0x4c26
   2dffc:	movw	r2, #1272	; 0x4f8
   2e000:	movt	r0, #4
   2e004:	movt	r1, #4
   2e008:	movt	r3, #4
   2e00c:	bl	14f44 <__assert_fail@plt>

0002e010 <flatcc_builder_check_union_field@@Base>:
   2e010:	mov	r2, r0
   2e014:	ldr	r0, [r0, #32]
   2e018:	ldrh	r0, [r0, #14]
   2e01c:	cmp	r0, #3
   2e020:	bne	2e080 <flatcc_builder_check_union_field@@Base+0x70>
   2e024:	cmp	r1, #0
   2e028:	mov	r0, #0
   2e02c:	ldrhne	r3, [r2, #8]
   2e030:	cmpne	r3, r1
   2e034:	bhi	2e03c <flatcc_builder_check_union_field@@Base+0x2c>
   2e038:	bx	lr
   2e03c:	ldr	r0, [r2, #4]
   2e040:	add	r0, r0, r1, lsl #1
   2e044:	ldrh	r1, [r0, #-2]
   2e048:	cmp	r1, #0
   2e04c:	beq	2e070 <flatcc_builder_check_union_field@@Base+0x60>
   2e050:	ldr	r2, [r2, #16]
   2e054:	ldrh	r0, [r0]
   2e058:	ldrb	r1, [r2, r1]
   2e05c:	cmp	r1, #0
   2e060:	beq	2e074 <flatcc_builder_check_union_field@@Base+0x64>
   2e064:	cmp	r0, #0
   2e068:	movwne	r0, #1
   2e06c:	bx	lr
   2e070:	ldrh	r0, [r0]
   2e074:	clz	r0, r0
   2e078:	lsr	r0, r0, #5
   2e07c:	bx	lr
   2e080:	push	{fp, lr}
   2e084:	mov	fp, sp
   2e088:	movw	r0, #19451	; 0x4bfb
   2e08c:	movw	r1, #17382	; 0x43e6
   2e090:	movw	r3, #19577	; 0x4c79
   2e094:	movw	r2, #1279	; 0x4ff
   2e098:	movt	r0, #4
   2e09c:	movt	r1, #4
   2e0a0:	movt	r3, #4
   2e0a4:	bl	14f44 <__assert_fail@plt>

0002e0a8 <flatcc_builder_check_required@@Base>:
   2e0a8:	push	{fp, lr}
   2e0ac:	mov	fp, sp
   2e0b0:	mov	r3, r0
   2e0b4:	ldr	r0, [r0, #32]
   2e0b8:	ldrh	r0, [r0, #14]
   2e0bc:	cmp	r0, #3
   2e0c0:	bne	2e118 <flatcc_builder_check_required@@Base+0x70>
   2e0c4:	ldrh	ip, [r3, #8]
   2e0c8:	mov	r0, #0
   2e0cc:	cmp	ip, r2
   2e0d0:	movge	r0, #1
   2e0d4:	cmpge	r2, #1
   2e0d8:	bge	2e0e0 <flatcc_builder_check_required@@Base+0x38>
   2e0dc:	pop	{fp, pc}
   2e0e0:	ldr	ip, [r3, #4]
   2e0e4:	mov	lr, #0
   2e0e8:	b	2e0fc <flatcc_builder_check_required@@Base+0x54>
   2e0ec:	add	lr, lr, #1
   2e0f0:	add	r1, r1, #2
   2e0f4:	cmp	lr, r2
   2e0f8:	popge	{fp, pc}
   2e0fc:	ldrh	r3, [r1]
   2e100:	add	r3, ip, r3, lsl #1
   2e104:	ldrh	r3, [r3]
   2e108:	cmp	r3, #0
   2e10c:	bne	2e0ec <flatcc_builder_check_required@@Base+0x44>
   2e110:	mov	r0, #0
   2e114:	pop	{fp, pc}
   2e118:	movw	r0, #19451	; 0x4bfb
   2e11c:	movw	r1, #17382	; 0x43e6
   2e120:	movw	r3, #19657	; 0x4cc9
   2e124:	movw	r2, #1297	; 0x511
   2e128:	movt	r0, #4
   2e12c:	movt	r1, #4
   2e130:	movt	r3, #4
   2e134:	bl	14f44 <__assert_fail@plt>

0002e138 <flatcc_builder_end_table@@Base>:
   2e138:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e13c:	add	fp, sp, #24
   2e140:	sub	sp, sp, #16
   2e144:	mov	r4, r0
   2e148:	ldr	r0, [r0, #32]
   2e14c:	ldrh	r0, [r0, #14]
   2e150:	cmp	r0, #3
   2e154:	bne	2e2d0 <flatcc_builder_end_table@@Base+0x198>
   2e158:	ldrh	r0, [r4, #8]
   2e15c:	ldr	r5, [r4, #4]
   2e160:	mov	r1, #4
   2e164:	movw	r2, #31153	; 0x79b1
   2e168:	movt	r2, #40503	; 0x9e37
   2e16c:	add	r0, r1, r0, lsl #1
   2e170:	strh	r0, [r5, #-4]!
   2e174:	ldrh	r1, [r4, #20]
   2e178:	uxth	r6, r0
   2e17c:	add	r1, r1, #4
   2e180:	strh	r1, [r5, #2]
   2e184:	uxth	r1, r1
   2e188:	ldr	r0, [r4, #12]
   2e18c:	eor	r0, r0, r6
   2e190:	mul	r0, r0, r2
   2e194:	eor	r0, r0, r1
   2e198:	mov	r1, r5
   2e19c:	mul	r3, r0, r2
   2e1a0:	mov	r0, r4
   2e1a4:	mov	r2, r6
   2e1a8:	str	r3, [r4, #12]
   2e1ac:	bl	2da80 <flatcc_builder_create_cached_vtable@@Base>
   2e1b0:	cmp	r0, #0
   2e1b4:	beq	2e2c0 <flatcc_builder_end_table@@Base+0x188>
   2e1b8:	mov	r7, r0
   2e1bc:	mov	r0, r5
   2e1c0:	mov	r1, #0
   2e1c4:	mov	r2, r6
   2e1c8:	mov	r8, #0
   2e1cc:	bl	14ef0 <memset@plt>
   2e1d0:	ldr	r5, [r4, #32]
   2e1d4:	ldr	r0, [r4, #76]	; 0x4c
   2e1d8:	ldr	r6, [r4]
   2e1dc:	ldrh	r3, [r4, #130]	; 0x82
   2e1e0:	ldr	r1, [r4, #16]
   2e1e4:	ldr	r2, [r4, #20]
   2e1e8:	ldr	r5, [r5, #20]
   2e1ec:	add	r0, r0, r5
   2e1f0:	sub	r6, r6, r0
   2e1f4:	asr	r6, r6, #1
   2e1f8:	stm	sp, {r0, r6, r7}
   2e1fc:	mov	r0, r4
   2e200:	bl	2dde4 <flatcc_builder_create_table@@Base>
   2e204:	cmp	r0, #0
   2e208:	beq	2e2c4 <flatcc_builder_end_table@@Base+0x18c>
   2e20c:	ldr	r1, [r4, #32]
   2e210:	mov	r5, r0
   2e214:	ldr	r0, [r4, #16]
   2e218:	ldr	r2, [r4, #20]
   2e21c:	ldr	r3, [r4, #52]	; 0x34
   2e220:	ldr	r7, [r1, #24]
   2e224:	str	r7, [r4, #12]
   2e228:	ldrh	r7, [r1, #28]
   2e22c:	strh	r7, [r4, #8]
   2e230:	ldr	r7, [r1, #16]
   2e234:	add	r3, r3, r7
   2e238:	str	r3, [r4, #4]
   2e23c:	ldr	r3, [r4, #76]	; 0x4c
   2e240:	ldr	r1, [r1, #20]
   2e244:	add	r1, r3, r1
   2e248:	str	r1, [r4]
   2e24c:	mov	r1, #0
   2e250:	bl	14ef0 <memset@plt>
   2e254:	ldr	r0, [r4, #32]
   2e258:	ldr	r1, [r4, #60]	; 0x3c
   2e25c:	ldr	r2, [r4, #64]	; 0x40
   2e260:	mov	r8, r5
   2e264:	ldr	r3, [r0, #8]
   2e268:	str	r3, [r4, #20]
   2e26c:	ldr	r3, [r0]
   2e270:	str	r3, [r4, #28]
   2e274:	add	r1, r1, r3
   2e278:	ldr	r7, [r0, #4]
   2e27c:	str	r1, [r4, #16]
   2e280:	sub	r1, r2, r3
   2e284:	cmp	r1, r7
   2e288:	movhi	r1, r7
   2e28c:	str	r1, [r4, #24]
   2e290:	ldrh	r1, [r4, #130]	; 0x82
   2e294:	ldrh	r2, [r4, #128]	; 0x80
   2e298:	cmp	r2, r1
   2e29c:	strhcc	r1, [r4, #128]	; 0x80
   2e2a0:	ldrh	r1, [r0, #12]
   2e2a4:	sub	r0, r0, #36	; 0x24
   2e2a8:	str	r0, [r4, #32]
   2e2ac:	strh	r1, [r4, #130]	; 0x82
   2e2b0:	ldr	r0, [r4, #156]	; 0x9c
   2e2b4:	sub	r0, r0, #1
   2e2b8:	str	r0, [r4, #156]	; 0x9c
   2e2bc:	b	2e2c4 <flatcc_builder_end_table@@Base+0x18c>
   2e2c0:	mov	r8, #0
   2e2c4:	mov	r0, r8
   2e2c8:	sub	sp, fp, #24
   2e2cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e2d0:	movw	r0, #19451	; 0x4bfb
   2e2d4:	movw	r1, #17382	; 0x43e6
   2e2d8:	movw	r3, #19747	; 0x4d23
   2e2dc:	movw	r2, #1317	; 0x525
   2e2e0:	movt	r0, #4
   2e2e4:	movt	r1, #4
   2e2e8:	movt	r3, #4
   2e2ec:	bl	14f44 <__assert_fail@plt>

0002e2f0 <flatcc_builder_create_vector@@Base>:
   2e2f0:	push	{r4, r5, r6, r7, fp, lr}
   2e2f4:	add	fp, sp, #16
   2e2f8:	sub	sp, sp, #80	; 0x50
   2e2fc:	mov	r7, r0
   2e300:	ldr	r0, [fp, #12]
   2e304:	cmp	r2, r0
   2e308:	bhi	2e408 <flatcc_builder_create_vector@@Base+0x118>
   2e30c:	ldr	r0, [fp, #8]
   2e310:	mov	r4, r2
   2e314:	ldrh	r2, [r7, #128]	; 0x80
   2e318:	mov	r5, #4
   2e31c:	cmp	r0, #4
   2e320:	movls	r0, r5
   2e324:	cmp	r2, r0
   2e328:	sub	r2, fp, #20
   2e32c:	strhcc	r0, [r7, #128]	; 0x80
   2e330:	str	r4, [fp, #-20]	; 0xffffffec
   2e334:	sub	r0, r0, #1
   2e338:	ldr	ip, [r7, #136]	; 0x88
   2e33c:	str	r2, [sp, #12]
   2e340:	mov	r2, #1
   2e344:	str	r5, [sp, #4]
   2e348:	str	r5, [sp, #16]
   2e34c:	str	r2, [sp, #8]
   2e350:	mls	r6, r3, r4, ip
   2e354:	mul	r3, r3, r4
   2e358:	and	r0, r6, r0
   2e35c:	cmp	r3, #0
   2e360:	beq	2e37c <flatcc_builder_create_vector@@Base+0x8c>
   2e364:	mov	r2, #2
   2e368:	add	r5, r3, #4
   2e36c:	str	r1, [sp, #20]
   2e370:	str	r3, [sp, #24]
   2e374:	str	r2, [sp, #8]
   2e378:	str	r5, [sp, #4]
   2e37c:	cmp	r0, #0
   2e380:	beq	2e3ac <flatcc_builder_create_vector@@Base+0xbc>
   2e384:	add	r1, sp, #4
   2e388:	movw	r3, #16852	; 0x41d4
   2e38c:	add	r5, r5, r0
   2e390:	add	r1, r1, r2, lsl #3
   2e394:	add	r2, r2, #1
   2e398:	movt	r3, #4
   2e39c:	str	r5, [sp, #4]
   2e3a0:	str	r3, [r1, #8]
   2e3a4:	str	r0, [r1, #12]
   2e3a8:	str	r2, [sp, #8]
   2e3ac:	cmp	r5, #0
   2e3b0:	ble	2e428 <flatcc_builder_create_vector@@Base+0x138>
   2e3b4:	ldr	r0, [r7, #36]	; 0x24
   2e3b8:	ldr	r6, [r7, #44]	; 0x2c
   2e3bc:	add	r1, sp, #4
   2e3c0:	sub	r4, ip, r5
   2e3c4:	str	r5, [sp]
   2e3c8:	add	r1, r1, #8
   2e3cc:	mov	r3, r4
   2e3d0:	blx	r6
   2e3d4:	cmp	r0, #0
   2e3d8:	streq	r4, [r7, #136]	; 0x88
   2e3dc:	moveq	r0, r4
   2e3e0:	subeq	sp, fp, #16
   2e3e4:	popeq	{r4, r5, r6, r7, fp, pc}
   2e3e8:	movw	r0, #21900	; 0x558c
   2e3ec:	movw	r1, #17382	; 0x43e6
   2e3f0:	movw	r3, #21579	; 0x544b
   2e3f4:	movw	r2, #651	; 0x28b
   2e3f8:	movt	r0, #4
   2e3fc:	movt	r1, #4
   2e400:	movt	r3, #4
   2e404:	bl	14f44 <__assert_fail@plt>
   2e408:	movw	r0, #19813	; 0x4d65
   2e40c:	movw	r1, #17382	; 0x43e6
   2e410:	movw	r3, #19832	; 0x4d78
   2e414:	movw	r2, #1365	; 0x555
   2e418:	movt	r0, #4
   2e41c:	movt	r1, #4
   2e420:	movt	r3, #4
   2e424:	bl	14f44 <__assert_fail@plt>
   2e428:	movw	r0, #21900	; 0x558c
   2e42c:	movw	r1, #17382	; 0x43e6
   2e430:	movw	r3, #21579	; 0x544b
   2e434:	movw	r2, #647	; 0x287
   2e438:	movt	r0, #4
   2e43c:	movt	r1, #4
   2e440:	movt	r3, #4
   2e444:	bl	14f44 <__assert_fail@plt>

0002e448 <flatcc_builder_end_vector@@Base>:
   2e448:	push	{r4, r5, fp, lr}
   2e44c:	add	fp, sp, #8
   2e450:	sub	sp, sp, #8
   2e454:	mov	r4, r0
   2e458:	ldr	r0, [r0, #32]
   2e45c:	ldrh	r1, [r0, #14]
   2e460:	cmp	r1, #4
   2e464:	bne	2e518 <flatcc_builder_end_vector@@Base+0xd0>
   2e468:	ldr	r3, [r0, #16]
   2e46c:	ldr	r2, [r0, #20]
   2e470:	ldr	r0, [r0, #24]
   2e474:	ldr	r1, [r4, #16]
   2e478:	ldrh	r5, [r4, #130]	; 0x82
   2e47c:	str	r0, [sp, #4]
   2e480:	mov	r0, r4
   2e484:	str	r5, [sp]
   2e488:	bl	2e2f0 <flatcc_builder_create_vector@@Base>
   2e48c:	mov	r5, r0
   2e490:	cmp	r0, #0
   2e494:	beq	2e50c <flatcc_builder_end_vector@@Base+0xc4>
   2e498:	ldr	r0, [r4, #16]
   2e49c:	ldr	r2, [r4, #20]
   2e4a0:	mov	r1, #0
   2e4a4:	bl	14ef0 <memset@plt>
   2e4a8:	ldr	r0, [r4, #32]
   2e4ac:	ldr	r1, [r4, #60]	; 0x3c
   2e4b0:	ldr	ip, [r4, #64]	; 0x40
   2e4b4:	ldr	r3, [r0, #8]
   2e4b8:	str	r3, [r4, #20]
   2e4bc:	ldr	r3, [r0]
   2e4c0:	str	r3, [r4, #28]
   2e4c4:	add	r1, r1, r3
   2e4c8:	ldr	r2, [r0, #4]
   2e4cc:	str	r1, [r4, #16]
   2e4d0:	sub	r1, ip, r3
   2e4d4:	cmp	r1, r2
   2e4d8:	movhi	r1, r2
   2e4dc:	str	r1, [r4, #24]
   2e4e0:	ldrh	r1, [r4, #130]	; 0x82
   2e4e4:	ldrh	r2, [r4, #128]	; 0x80
   2e4e8:	cmp	r2, r1
   2e4ec:	strhcc	r1, [r4, #128]	; 0x80
   2e4f0:	ldrh	r1, [r0, #12]
   2e4f4:	sub	r0, r0, #36	; 0x24
   2e4f8:	str	r0, [r4, #32]
   2e4fc:	strh	r1, [r4, #130]	; 0x82
   2e500:	ldr	r0, [r4, #156]	; 0x9c
   2e504:	sub	r0, r0, #1
   2e508:	str	r0, [r4, #156]	; 0x9c
   2e50c:	mov	r0, r5
   2e510:	sub	sp, fp, #8
   2e514:	pop	{r4, r5, fp, pc}
   2e518:	movw	r0, #18185	; 0x4709
   2e51c:	movw	r1, #17382	; 0x43e6
   2e520:	movw	r3, #19950	; 0x4dee
   2e524:	movw	r2, #1400	; 0x578
   2e528:	movt	r0, #4
   2e52c:	movt	r1, #4
   2e530:	movt	r3, #4
   2e534:	bl	14f44 <__assert_fail@plt>

0002e538 <flatcc_builder_vector_count@@Base>:
   2e538:	ldr	r0, [r0, #32]
   2e53c:	ldr	r0, [r0, #20]
   2e540:	bx	lr

0002e544 <flatcc_builder_vector_edit@@Base>:
   2e544:	ldr	r0, [r0, #16]
   2e548:	bx	lr

0002e54c <flatcc_builder_create_offset_vector_direct@@Base>:
   2e54c:	mov	r3, #0
   2e550:	b	2e554 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e554:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e558:	add	fp, sp, #24
   2e55c:	sub	sp, sp, #80	; 0x50
   2e560:	mov	r6, #0
   2e564:	cmn	r2, #-1073741823	; 0xc0000001
   2e568:	bhi	2e6a4 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   2e56c:	mov	r8, r0
   2e570:	ldrh	r0, [r0, #128]	; 0x80
   2e574:	sub	r7, fp, #28
   2e578:	mov	r5, #4
   2e57c:	mov	r4, #1
   2e580:	cmp	r0, #3
   2e584:	movls	r0, #4
   2e588:	strhls	r0, [r8, #128]	; 0x80
   2e58c:	str	r2, [fp, #-28]	; 0xffffffe4
   2e590:	ldr	ip, [r8, #136]	; 0x88
   2e594:	str	r7, [sp, #12]
   2e598:	mov	r7, #0
   2e59c:	str	r5, [sp, #4]
   2e5a0:	str	r5, [sp, #16]
   2e5a4:	str	r4, [sp, #8]
   2e5a8:	cmp	r7, r2, lsl #2
   2e5ac:	and	r6, ip, #3
   2e5b0:	beq	2e5d0 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2e5b4:	lsl	r7, r2, #2
   2e5b8:	mov	r4, #2
   2e5bc:	str	r1, [sp, #20]
   2e5c0:	add	r5, r7, #4
   2e5c4:	str	r7, [sp, #24]
   2e5c8:	str	r4, [sp, #8]
   2e5cc:	str	r5, [sp, #4]
   2e5d0:	cmp	r6, #0
   2e5d4:	beq	2e600 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2e5d8:	add	r7, sp, #4
   2e5dc:	movw	r0, #16852	; 0x41d4
   2e5e0:	add	r5, r5, r6
   2e5e4:	add	r7, r7, r4, lsl #3
   2e5e8:	add	r4, r4, #1
   2e5ec:	movt	r0, #4
   2e5f0:	str	r5, [sp, #4]
   2e5f4:	str	r0, [r7, #8]
   2e5f8:	str	r6, [r7, #12]
   2e5fc:	str	r4, [sp, #8]
   2e600:	cmp	r2, #0
   2e604:	beq	2e66c <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   2e608:	mvn	r0, #3
   2e60c:	mov	r6, #0
   2e610:	sub	r0, r0, ip
   2e614:	add	r0, r0, r5
   2e618:	ldr	r7, [r1, r6, lsl #2]
   2e61c:	cmp	r7, #0
   2e620:	beq	2e644 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   2e624:	add	r7, r0, r7
   2e628:	cmp	r3, #0
   2e62c:	str	r7, [r1, r6, lsl #2]
   2e630:	beq	2e658 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   2e634:	ldrb	r7, [r3, r6]
   2e638:	cmp	r7, #0
   2e63c:	bne	2e658 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   2e640:	b	2e6b0 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   2e644:	cmp	r3, #0
   2e648:	beq	2e6f0 <flatcc_builder_create_offset_vector_direct@@Base+0x1a4>
   2e64c:	ldrb	r7, [r3, r6]
   2e650:	cmp	r7, #0
   2e654:	bne	2e6d0 <flatcc_builder_create_offset_vector_direct@@Base+0x184>
   2e658:	add	r6, r6, #1
   2e65c:	sub	r0, r0, #4
   2e660:	cmp	r6, r2
   2e664:	bcc	2e618 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   2e668:	ldr	ip, [r8, #136]	; 0x88
   2e66c:	cmp	r5, #0
   2e670:	ble	2e710 <flatcc_builder_create_offset_vector_direct@@Base+0x1c4>
   2e674:	ldr	r0, [r8, #36]	; 0x24
   2e678:	ldr	r7, [r8, #44]	; 0x2c
   2e67c:	add	r1, sp, #4
   2e680:	sub	r6, ip, r5
   2e684:	mov	r2, r4
   2e688:	str	r5, [sp]
   2e68c:	add	r1, r1, #8
   2e690:	mov	r3, r6
   2e694:	blx	r7
   2e698:	cmp	r0, #0
   2e69c:	bne	2e730 <flatcc_builder_create_offset_vector_direct@@Base+0x1e4>
   2e6a0:	str	r6, [r8, #136]	; 0x88
   2e6a4:	mov	r0, r6
   2e6a8:	sub	sp, fp, #24
   2e6ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e6b0:	movw	r0, #21888	; 0x5580
   2e6b4:	movw	r1, #17382	; 0x43e6
   2e6b8:	movw	r3, #21902	; 0x558e
   2e6bc:	movw	r2, #1457	; 0x5b1
   2e6c0:	movt	r0, #4
   2e6c4:	movt	r1, #4
   2e6c8:	movt	r3, #4
   2e6cc:	bl	14f44 <__assert_fail@plt>
   2e6d0:	movw	r0, #22033	; 0x5611
   2e6d4:	movw	r1, #17382	; 0x43e6
   2e6d8:	movw	r3, #21902	; 0x558e
   2e6dc:	movw	r2, #1461	; 0x5b5
   2e6e0:	movt	r0, #4
   2e6e4:	movt	r1, #4
   2e6e8:	movt	r3, #4
   2e6ec:	bl	14f44 <__assert_fail@plt>
   2e6f0:	movw	r0, #21900	; 0x558c
   2e6f4:	movw	r1, #17382	; 0x43e6
   2e6f8:	movw	r3, #21902	; 0x558e
   2e6fc:	movw	r2, #1463	; 0x5b7
   2e700:	movt	r0, #4
   2e704:	movt	r1, #4
   2e708:	movt	r3, #4
   2e70c:	bl	14f44 <__assert_fail@plt>
   2e710:	movw	r0, #21900	; 0x558c
   2e714:	movw	r1, #17382	; 0x43e6
   2e718:	movw	r3, #21579	; 0x544b
   2e71c:	movw	r2, #647	; 0x287
   2e720:	movt	r0, #4
   2e724:	movt	r1, #4
   2e728:	movt	r3, #4
   2e72c:	bl	14f44 <__assert_fail@plt>
   2e730:	movw	r0, #21900	; 0x558c
   2e734:	movw	r1, #17382	; 0x43e6
   2e738:	movw	r3, #21579	; 0x544b
   2e73c:	movw	r2, #651	; 0x28b
   2e740:	movt	r0, #4
   2e744:	movt	r1, #4
   2e748:	movt	r3, #4
   2e74c:	bl	14f44 <__assert_fail@plt>

0002e750 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2e750:	push	{r4, r5, fp, lr}
   2e754:	add	fp, sp, #8
   2e758:	mov	r4, r0
   2e75c:	ldr	r0, [r0, #32]
   2e760:	mov	r3, r1
   2e764:	ldrh	r1, [r0, #14]
   2e768:	cmp	r1, #5
   2e76c:	bne	2e808 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2e770:	ldr	r2, [r0, #20]
   2e774:	ldr	r1, [r4, #16]
   2e778:	mov	r0, r4
   2e77c:	bl	2e554 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e780:	mov	r5, r0
   2e784:	cmp	r0, #0
   2e788:	beq	2e800 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2e78c:	ldr	r0, [r4, #16]
   2e790:	ldr	r2, [r4, #20]
   2e794:	mov	r1, #0
   2e798:	bl	14ef0 <memset@plt>
   2e79c:	ldr	r0, [r4, #32]
   2e7a0:	ldr	r1, [r4, #60]	; 0x3c
   2e7a4:	ldr	ip, [r4, #64]	; 0x40
   2e7a8:	ldr	r3, [r0, #8]
   2e7ac:	str	r3, [r4, #20]
   2e7b0:	ldr	r3, [r0]
   2e7b4:	str	r3, [r4, #28]
   2e7b8:	add	r1, r1, r3
   2e7bc:	ldr	r2, [r0, #4]
   2e7c0:	str	r1, [r4, #16]
   2e7c4:	sub	r1, ip, r3
   2e7c8:	cmp	r1, r2
   2e7cc:	movhi	r1, r2
   2e7d0:	str	r1, [r4, #24]
   2e7d4:	ldrh	r1, [r4, #130]	; 0x82
   2e7d8:	ldrh	r2, [r4, #128]	; 0x80
   2e7dc:	cmp	r2, r1
   2e7e0:	strhcc	r1, [r4, #128]	; 0x80
   2e7e4:	ldrh	r1, [r0, #12]
   2e7e8:	sub	r0, r0, #36	; 0x24
   2e7ec:	str	r0, [r4, #32]
   2e7f0:	strh	r1, [r4, #130]	; 0x82
   2e7f4:	ldr	r0, [r4, #156]	; 0x9c
   2e7f8:	sub	r0, r0, #1
   2e7fc:	str	r0, [r4, #156]	; 0x9c
   2e800:	mov	r0, r5
   2e804:	pop	{r4, r5, fp, pc}
   2e808:	movw	r0, #18434	; 0x4802
   2e80c:	movw	r1, #17382	; 0x43e6
   2e810:	movw	r3, #20091	; 0x4e7b
   2e814:	movw	r2, #1493	; 0x5d5
   2e818:	movt	r0, #4
   2e81c:	movt	r1, #4
   2e820:	movt	r3, #4
   2e824:	bl	14f44 <__assert_fail@plt>

0002e828 <flatcc_builder_offset_vector_edit@@Base>:
   2e828:	ldr	r0, [r0, #16]
   2e82c:	bx	lr

0002e830 <flatcc_builder_offset_vector_count@@Base>:
   2e830:	ldr	r0, [r0, #32]
   2e834:	ldr	r0, [r0, #20]
   2e838:	bx	lr

0002e83c <flatcc_builder_table_add_union@@Base>:
   2e83c:	push	{r4, r5, r6, r7, fp, lr}
   2e840:	add	fp, sp, #16
   2e844:	mov	r5, r0
   2e848:	ldr	r0, [r0, #32]
   2e84c:	ldrh	r0, [r0, #14]
   2e850:	cmp	r0, #3
   2e854:	bne	2e8dc <flatcc_builder_table_add_union@@Base+0xa0>
   2e858:	mov	r7, r3
   2e85c:	mov	r4, r2
   2e860:	mov	r6, r1
   2e864:	cmp	r3, #0
   2e868:	beq	2e878 <flatcc_builder_table_add_union@@Base+0x3c>
   2e86c:	uxtb	r0, r4
   2e870:	cmp	r0, #0
   2e874:	beq	2e8fc <flatcc_builder_table_add_union@@Base+0xc0>
   2e878:	cmp	r7, #0
   2e87c:	beq	2e898 <flatcc_builder_table_add_union@@Base+0x5c>
   2e880:	mov	r0, r5
   2e884:	mov	r1, r6
   2e888:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   2e88c:	cmp	r0, #0
   2e890:	beq	2e91c <flatcc_builder_table_add_union@@Base+0xe0>
   2e894:	str	r7, [r0]
   2e898:	sub	r1, r6, #1
   2e89c:	mov	r0, r5
   2e8a0:	mov	r2, #1
   2e8a4:	mov	r3, #1
   2e8a8:	bl	2ea78 <flatcc_builder_table_add@@Base>
   2e8ac:	cmp	r0, #0
   2e8b0:	strbne	r4, [r0]
   2e8b4:	movne	r0, #0
   2e8b8:	popne	{r4, r5, r6, r7, fp, pc}
   2e8bc:	movw	r0, #20337	; 0x4f71
   2e8c0:	movw	r1, #17382	; 0x43e6
   2e8c4:	movw	r3, #20205	; 0x4eed
   2e8c8:	movw	r2, #1526	; 0x5f6
   2e8cc:	movt	r0, #4
   2e8d0:	movt	r1, #4
   2e8d4:	movt	r3, #4
   2e8d8:	bl	14f44 <__assert_fail@plt>
   2e8dc:	movw	r0, #19451	; 0x4bfb
   2e8e0:	movw	r1, #17382	; 0x43e6
   2e8e4:	movw	r3, #20205	; 0x4eed
   2e8e8:	movw	r2, #1518	; 0x5ee
   2e8ec:	movt	r0, #4
   2e8f0:	movt	r1, #4
   2e8f4:	movt	r3, #4
   2e8f8:	bl	14f44 <__assert_fail@plt>
   2e8fc:	movw	r0, #20293	; 0x4f45
   2e900:	movw	r1, #17382	; 0x43e6
   2e904:	movw	r3, #20205	; 0x4eed
   2e908:	movw	r2, #1519	; 0x5ef
   2e90c:	movt	r0, #4
   2e910:	movt	r1, #4
   2e914:	movt	r3, #4
   2e918:	bl	14f44 <__assert_fail@plt>
   2e91c:	movw	r0, #20327	; 0x4f67
   2e920:	movw	r1, #17382	; 0x43e6
   2e924:	movw	r3, #20205	; 0x4eed
   2e928:	movw	r2, #1522	; 0x5f2
   2e92c:	movt	r0, #4
   2e930:	movt	r1, #4
   2e934:	movt	r3, #4
   2e938:	bl	14f44 <__assert_fail@plt>

0002e93c <flatcc_builder_table_add_offset@@Base>:
   2e93c:	push	{r4, r5, r6, r7, fp, lr}
   2e940:	add	fp, sp, #16
   2e944:	mov	r4, r0
   2e948:	ldr	r0, [r0, #32]
   2e94c:	ldrh	r0, [r0, #14]
   2e950:	cmp	r0, #3
   2e954:	bne	2ea18 <flatcc_builder_table_add_offset@@Base+0xdc>
   2e958:	movw	r0, #32765	; 0x7ffd
   2e95c:	mov	r5, r1
   2e960:	cmp	r1, r0
   2e964:	bcs	2ea38 <flatcc_builder_table_add_offset@@Base+0xfc>
   2e968:	ldr	r0, [r4, #4]
   2e96c:	add	r1, r0, r5, lsl #1
   2e970:	ldrh	r1, [r1]
   2e974:	cmp	r1, #0
   2e978:	bne	2ea58 <flatcc_builder_table_add_offset@@Base+0x11c>
   2e97c:	ldr	r2, [r4, #20]
   2e980:	ldr	r1, [r4, #12]
   2e984:	ldr	r3, [r4, #24]
   2e988:	add	r2, r2, #3
   2e98c:	eor	r1, r1, r5
   2e990:	bic	r7, r2, #3
   2e994:	movw	r2, #31153	; 0x79b1
   2e998:	movt	r2, #40503	; 0x9e37
   2e99c:	add	r6, r7, #4
   2e9a0:	mul	r1, r1, r2
   2e9a4:	cmp	r6, r3
   2e9a8:	str	r6, [r4, #20]
   2e9ac:	eor	r1, r1, #4
   2e9b0:	mul	r1, r1, r2
   2e9b4:	str	r1, [r4, #12]
   2e9b8:	bls	2e9e0 <flatcc_builder_table_add_offset@@Base+0xa4>
   2e9bc:	mov	r0, r4
   2e9c0:	mov	r1, r6
   2e9c4:	movw	r2, #65532	; 0xfffc
   2e9c8:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2e9cc:	mov	r1, r0
   2e9d0:	mov	r0, #0
   2e9d4:	cmp	r1, #0
   2e9d8:	popne	{r4, r5, r6, r7, fp, pc}
   2e9dc:	ldr	r0, [r4, #4]
   2e9e0:	uxth	r1, r5
   2e9e4:	add	r0, r0, r1, lsl #1
   2e9e8:	strh	r6, [r0]
   2e9ec:	ldrh	r0, [r4, #8]
   2e9f0:	cmp	r0, r1
   2e9f4:	addls	r0, r5, #1
   2e9f8:	strhls	r0, [r4, #8]
   2e9fc:	ldr	r0, [r4]
   2ea00:	add	r1, r0, #2
   2ea04:	str	r1, [r4]
   2ea08:	strh	r7, [r0]
   2ea0c:	ldr	r0, [r4, #16]
   2ea10:	add	r0, r0, r7
   2ea14:	pop	{r4, r5, r6, r7, fp, pc}
   2ea18:	movw	r0, #19451	; 0x4bfb
   2ea1c:	movw	r1, #17382	; 0x43e6
   2ea20:	movw	r3, #21231	; 0x52ef
   2ea24:	movw	r2, #1811	; 0x713
   2ea28:	movt	r0, #4
   2ea2c:	movt	r1, #4
   2ea30:	movt	r3, #4
   2ea34:	bl	14f44 <__assert_fail@plt>
   2ea38:	movw	r0, #21103	; 0x526f
   2ea3c:	movw	r1, #17382	; 0x43e6
   2ea40:	movw	r3, #21231	; 0x52ef
   2ea44:	movw	r2, #1812	; 0x714
   2ea48:	movt	r0, #4
   2ea4c:	movt	r1, #4
   2ea50:	movt	r3, #4
   2ea54:	bl	14f44 <__assert_fail@plt>
   2ea58:	movw	r0, #21900	; 0x558c
   2ea5c:	movw	r1, #17382	; 0x43e6
   2ea60:	movw	r3, #21231	; 0x52ef
   2ea64:	movw	r2, #1819	; 0x71b
   2ea68:	movt	r0, #4
   2ea6c:	movt	r1, #4
   2ea70:	movt	r3, #4
   2ea74:	bl	14f44 <__assert_fail@plt>

0002ea78 <flatcc_builder_table_add@@Base>:
   2ea78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ea7c:	add	fp, sp, #24
   2ea80:	mov	r4, r0
   2ea84:	ldr	r0, [r0, #32]
   2ea88:	ldrh	r0, [r0, #14]
   2ea8c:	cmp	r0, #3
   2ea90:	bne	2eb5c <flatcc_builder_table_add@@Base+0xe4>
   2ea94:	movw	r0, #32765	; 0x7ffd
   2ea98:	mov	r8, r1
   2ea9c:	cmp	r1, r0
   2eaa0:	bcs	2eb7c <flatcc_builder_table_add@@Base+0x104>
   2eaa4:	ldrh	r0, [r4, #130]	; 0x82
   2eaa8:	cmp	r0, r3
   2eaac:	strhcc	r3, [r4, #130]	; 0x82
   2eab0:	ldr	r0, [r4, #4]
   2eab4:	add	r1, r0, r8, lsl #1
   2eab8:	ldrh	r1, [r1]
   2eabc:	cmp	r1, #0
   2eac0:	bne	2eb9c <flatcc_builder_table_add@@Base+0x124>
   2eac4:	ldr	r1, [r4, #12]
   2eac8:	movw	r7, #31153	; 0x79b1
   2eacc:	ldr	r6, [r4, #20]
   2ead0:	ldr	r5, [r4, #24]
   2ead4:	movt	r7, #40503	; 0x9e37
   2ead8:	eor	r1, r1, r8
   2eadc:	mul	r1, r1, r7
   2eae0:	eor	r1, r1, r2
   2eae4:	mul	r1, r1, r7
   2eae8:	str	r1, [r4, #12]
   2eaec:	add	r1, r3, r6
   2eaf0:	rsb	r3, r3, #0
   2eaf4:	sub	r1, r1, #1
   2eaf8:	and	r6, r1, r3
   2eafc:	add	r1, r6, r2
   2eb00:	cmp	r1, r5
   2eb04:	str	r1, [r4, #20]
   2eb08:	bcc	2eb30 <flatcc_builder_table_add@@Base+0xb8>
   2eb0c:	add	r1, r1, #1
   2eb10:	mov	r0, r4
   2eb14:	movw	r2, #65532	; 0xfffc
   2eb18:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2eb1c:	mov	r1, r0
   2eb20:	mov	r0, #0
   2eb24:	cmp	r1, #0
   2eb28:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eb2c:	ldr	r0, [r4, #4]
   2eb30:	uxth	r1, r8
   2eb34:	add	r2, r6, #4
   2eb38:	add	r0, r0, r1, lsl #1
   2eb3c:	strh	r2, [r0]
   2eb40:	ldrh	r0, [r4, #8]
   2eb44:	cmp	r0, r1
   2eb48:	addls	r0, r8, #1
   2eb4c:	strhls	r0, [r4, #8]
   2eb50:	ldr	r0, [r4, #16]
   2eb54:	add	r0, r0, r6
   2eb58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eb5c:	movw	r0, #19451	; 0x4bfb
   2eb60:	movw	r1, #17382	; 0x43e6
   2eb64:	movw	r3, #21029	; 0x5225
   2eb68:	movw	r2, #1773	; 0x6ed
   2eb6c:	movt	r0, #4
   2eb70:	movt	r1, #4
   2eb74:	movt	r3, #4
   2eb78:	bl	14f44 <__assert_fail@plt>
   2eb7c:	movw	r0, #21103	; 0x526f
   2eb80:	movw	r1, #17382	; 0x43e6
   2eb84:	movw	r3, #21029	; 0x5225
   2eb88:	movw	r2, #1774	; 0x6ee
   2eb8c:	movt	r0, #4
   2eb90:	movt	r1, #4
   2eb94:	movt	r3, #4
   2eb98:	bl	14f44 <__assert_fail@plt>
   2eb9c:	movw	r0, #21900	; 0x558c
   2eba0:	movw	r1, #17382	; 0x43e6
   2eba4:	movw	r3, #21029	; 0x5225
   2eba8:	movw	r2, #1784	; 0x6f8
   2ebac:	movt	r0, #4
   2ebb0:	movt	r1, #4
   2ebb4:	movt	r3, #4
   2ebb8:	bl	14f44 <__assert_fail@plt>

0002ebbc <flatcc_builder_table_add_union_vector@@Base>:
   2ebbc:	push	{r4, r5, r6, r7, fp, lr}
   2ebc0:	add	fp, sp, #16
   2ebc4:	mov	r6, r0
   2ebc8:	ldr	r0, [r0, #32]
   2ebcc:	ldrh	r0, [r0, #14]
   2ebd0:	cmp	r0, #3
   2ebd4:	bne	2ec3c <flatcc_builder_table_add_union_vector@@Base+0x80>
   2ebd8:	clz	r0, r3
   2ebdc:	mov	r5, r1
   2ebe0:	clz	r1, r2
   2ebe4:	mov	r4, r3
   2ebe8:	mov	r7, r2
   2ebec:	lsr	r0, r0, #5
   2ebf0:	lsr	r1, r1, #5
   2ebf4:	cmp	r1, r0
   2ebf8:	bne	2ec5c <flatcc_builder_table_add_union_vector@@Base+0xa0>
   2ebfc:	cmp	r7, #0
   2ec00:	beq	2ec34 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2ec04:	sub	r1, r5, #1
   2ec08:	mov	r0, r6
   2ec0c:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   2ec10:	cmp	r0, #0
   2ec14:	beq	2ec7c <flatcc_builder_table_add_union_vector@@Base+0xc0>
   2ec18:	str	r7, [r0]
   2ec1c:	mov	r0, r6
   2ec20:	mov	r1, r5
   2ec24:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   2ec28:	cmp	r0, #0
   2ec2c:	beq	2ec9c <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2ec30:	str	r4, [r0]
   2ec34:	mov	r0, #0
   2ec38:	pop	{r4, r5, r6, r7, fp, pc}
   2ec3c:	movw	r0, #19451	; 0x4bfb
   2ec40:	movw	r1, #17382	; 0x43e6
   2ec44:	movw	r3, #20349	; 0x4f7d
   2ec48:	mov	r2, #1536	; 0x600
   2ec4c:	movt	r0, #4
   2ec50:	movt	r1, #4
   2ec54:	movt	r3, #4
   2ec58:	bl	14f44 <__assert_fail@plt>
   2ec5c:	movw	r0, #20448	; 0x4fe0
   2ec60:	movw	r1, #17382	; 0x43e6
   2ec64:	movw	r3, #20349	; 0x4f7d
   2ec68:	movw	r2, #1537	; 0x601
   2ec6c:	movt	r0, #4
   2ec70:	movt	r1, #4
   2ec74:	movt	r3, #4
   2ec78:	bl	14f44 <__assert_fail@plt>
   2ec7c:	movw	r0, #20327	; 0x4f67
   2ec80:	movw	r1, #17382	; 0x43e6
   2ec84:	movw	r3, #20349	; 0x4f7d
   2ec88:	movw	r2, #1540	; 0x604
   2ec8c:	movt	r0, #4
   2ec90:	movt	r1, #4
   2ec94:	movt	r3, #4
   2ec98:	bl	14f44 <__assert_fail@plt>
   2ec9c:	movw	r0, #20327	; 0x4f67
   2eca0:	movw	r1, #17382	; 0x43e6
   2eca4:	movw	r3, #20349	; 0x4f7d
   2eca8:	movw	r2, #1544	; 0x608
   2ecac:	movt	r0, #4
   2ecb0:	movt	r1, #4
   2ecb4:	movt	r3, #4
   2ecb8:	bl	14f44 <__assert_fail@plt>

0002ecbc <flatcc_builder_create_union_vector@@Base>:
   2ecbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ecc0:	add	fp, sp, #28
   2ecc4:	sub	sp, sp, #20
   2ecc8:	mov	sl, r0
   2eccc:	mov	r0, #0
   2ecd0:	mov	r9, r3
   2ecd4:	mov	r7, r2
   2ecd8:	mov	r4, r1
   2ecdc:	str	r0, [sl]
   2ece0:	str	r0, [sl, #4]
   2ece4:	mov	r0, r1
   2ece8:	bl	2d468 <flatcc_builder_start_offset_vector@@Base>
   2ecec:	cmp	r0, #0
   2ecf0:	beq	2ecfc <flatcc_builder_create_union_vector@@Base+0x40>
   2ecf4:	sub	sp, fp, #28
   2ecf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ecfc:	mov	r0, r4
   2ed00:	mov	r1, r9
   2ed04:	bl	2ce24 <flatcc_builder_extend_offset_vector@@Base>
   2ed08:	cmp	r0, #0
   2ed0c:	beq	2ecf4 <flatcc_builder_create_union_vector@@Base+0x38>
   2ed10:	ldr	r8, [r4, #20]
   2ed14:	ldr	r1, [r4, #24]
   2ed18:	add	r0, r8, r9
   2ed1c:	cmp	r0, r1
   2ed20:	str	r0, [r4, #20]
   2ed24:	bcc	2ed40 <flatcc_builder_create_union_vector@@Base+0x84>
   2ed28:	add	r1, r0, #1
   2ed2c:	mov	r0, r4
   2ed30:	mvn	r2, #3
   2ed34:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2ed38:	cmp	r0, #0
   2ed3c:	bne	2ecf4 <flatcc_builder_create_union_vector@@Base+0x38>
   2ed40:	ldr	r3, [r4, #16]
   2ed44:	adds	r2, r3, r8
   2ed48:	beq	2ecf4 <flatcc_builder_create_union_vector@@Base+0x38>
   2ed4c:	cmp	r9, #0
   2ed50:	beq	2ed80 <flatcc_builder_create_union_vector@@Base+0xc4>
   2ed54:	add	r0, r7, #4
   2ed58:	mov	r1, r9
   2ed5c:	mov	r7, r3
   2ed60:	mov	r6, r2
   2ed64:	ldrb	r5, [r0, #-4]
   2ed68:	subs	r1, r1, #1
   2ed6c:	strb	r5, [r6], #1
   2ed70:	ldr	r5, [r0]
   2ed74:	add	r0, r0, #8
   2ed78:	str	r5, [r7], #4
   2ed7c:	bne	2ed64 <flatcc_builder_create_union_vector@@Base+0xa8>
   2ed80:	add	r0, sp, #8
   2ed84:	mov	r1, r4
   2ed88:	str	r9, [sp]
   2ed8c:	bl	2ee14 <flatcc_builder_create_union_vector_direct@@Base>
   2ed90:	ldr	r0, [sp, #8]
   2ed94:	ldr	r1, [sp, #12]
   2ed98:	stm	sl, {r0, r1}
   2ed9c:	mov	r1, #0
   2eda0:	ldr	r0, [r4, #16]
   2eda4:	ldr	r2, [r4, #20]
   2eda8:	bl	14ef0 <memset@plt>
   2edac:	ldr	r0, [r4, #32]
   2edb0:	ldr	r1, [r4, #60]	; 0x3c
   2edb4:	ldr	r2, [r4, #64]	; 0x40
   2edb8:	ldr	r3, [r0, #8]
   2edbc:	str	r3, [r4, #20]
   2edc0:	ldr	r3, [r0]
   2edc4:	str	r3, [r4, #28]
   2edc8:	add	r1, r1, r3
   2edcc:	ldr	r7, [r0, #4]
   2edd0:	str	r1, [r4, #16]
   2edd4:	sub	r1, r2, r3
   2edd8:	cmp	r1, r7
   2eddc:	movhi	r1, r7
   2ede0:	str	r1, [r4, #24]
   2ede4:	ldrh	r1, [r4, #130]	; 0x82
   2ede8:	ldrh	r2, [r4, #128]	; 0x80
   2edec:	cmp	r2, r1
   2edf0:	strhcc	r1, [r4, #128]	; 0x80
   2edf4:	ldrh	r1, [r0, #12]
   2edf8:	sub	r0, r0, #36	; 0x24
   2edfc:	str	r0, [r4, #32]
   2ee00:	strh	r1, [r4, #130]	; 0x82
   2ee04:	ldr	r0, [r4, #156]	; 0x9c
   2ee08:	sub	r0, r0, #1
   2ee0c:	str	r0, [r4, #156]	; 0x9c
   2ee10:	b	2ecf4 <flatcc_builder_create_union_vector@@Base+0x38>

0002ee14 <flatcc_builder_create_union_vector_direct@@Base>:
   2ee14:	push	{r4, r5, r6, r7, fp, lr}
   2ee18:	add	fp, sp, #16
   2ee1c:	sub	sp, sp, #8
   2ee20:	ldr	r7, [fp, #8]
   2ee24:	mov	r5, r2
   2ee28:	mov	r4, r0
   2ee2c:	mov	r0, #0
   2ee30:	mov	r6, r1
   2ee34:	str	r0, [r4]
   2ee38:	str	r0, [r4, #4]
   2ee3c:	mov	r0, r1
   2ee40:	mov	r1, r3
   2ee44:	mov	r3, r5
   2ee48:	mov	r2, r7
   2ee4c:	bl	2e554 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ee50:	cmp	r0, #0
   2ee54:	str	r0, [r4, #4]
   2ee58:	beq	2ee84 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2ee5c:	mvn	r0, #0
   2ee60:	mov	r1, #1
   2ee64:	mov	r2, r7
   2ee68:	mov	r3, #1
   2ee6c:	str	r1, [sp]
   2ee70:	str	r0, [sp, #4]
   2ee74:	mov	r0, r6
   2ee78:	mov	r1, r5
   2ee7c:	bl	2e2f0 <flatcc_builder_create_vector@@Base>
   2ee80:	str	r0, [r4]
   2ee84:	sub	sp, fp, #16
   2ee88:	pop	{r4, r5, r6, r7, fp, pc}

0002ee8c <flatcc_builder_start_union_vector@@Base>:
   2ee8c:	push	{r4, sl, fp, lr}
   2ee90:	add	fp, sp, #8
   2ee94:	mov	r1, #4
   2ee98:	mov	r4, r0
   2ee9c:	bl	2c7e8 <flatcc_builder_start_buffer@@Base+0xbc>
   2eea0:	mov	r1, r0
   2eea4:	mvn	r0, #0
   2eea8:	cmp	r1, #0
   2eeac:	popne	{r4, sl, fp, pc}
   2eeb0:	ldr	r0, [r4, #32]
   2eeb4:	mov	r1, #8
   2eeb8:	mov	r2, #7
   2eebc:	str	r1, [r0, #16]
   2eec0:	mov	r0, #0
   2eec4:	ldr	r1, [r4, #32]
   2eec8:	str	r0, [r1, #20]
   2eecc:	ldr	r1, [r4, #32]
   2eed0:	strh	r2, [r1, #14]
   2eed4:	ldr	r2, [r4, #28]
   2eed8:	ldr	r3, [r4, #60]	; 0x3c
   2eedc:	ldr	ip, [r4, #64]	; 0x40
   2eee0:	add	r3, r3, r2
   2eee4:	sub	r2, ip, r2
   2eee8:	str	r3, [r4, #16]
   2eeec:	mvn	r3, #3
   2eef0:	cmn	r2, #4
   2eef4:	movcs	r2, r3
   2eef8:	str	r2, [r4, #24]
   2eefc:	str	r3, [r1, #4]
   2ef00:	pop	{r4, sl, fp, pc}

0002ef04 <flatcc_builder_end_union_vector@@Base>:
   2ef04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ef08:	add	fp, sp, #24
   2ef0c:	sub	sp, sp, #16
   2ef10:	mov	r8, r0
   2ef14:	mov	r0, #0
   2ef18:	mov	r4, r1
   2ef1c:	str	r0, [r8]
   2ef20:	str	r0, [r8, #4]
   2ef24:	ldr	r0, [r1, #32]
   2ef28:	ldrh	r1, [r0, #14]
   2ef2c:	cmp	r1, #7
   2ef30:	bne	2f048 <flatcc_builder_end_union_vector@@Base+0x144>
   2ef34:	ldr	r9, [r0, #20]
   2ef38:	ldr	r7, [r4, #20]
   2ef3c:	ldr	r1, [r4, #24]
   2ef40:	add	r0, r9, r9, lsl #2
   2ef44:	add	r0, r7, r0
   2ef48:	cmp	r0, r1
   2ef4c:	str	r0, [r4, #20]
   2ef50:	bcc	2ef6c <flatcc_builder_end_union_vector@@Base+0x68>
   2ef54:	add	r1, r0, #1
   2ef58:	mov	r0, r4
   2ef5c:	mvn	r2, #3
   2ef60:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2ef64:	cmp	r0, #0
   2ef68:	bne	2f040 <flatcc_builder_end_union_vector@@Base+0x13c>
   2ef6c:	ldr	r0, [r4, #16]
   2ef70:	adds	r3, r0, r7
   2ef74:	beq	2f040 <flatcc_builder_end_union_vector@@Base+0x13c>
   2ef78:	add	r2, r3, r9, lsl #2
   2ef7c:	cmp	r9, #0
   2ef80:	beq	2efb0 <flatcc_builder_end_union_vector@@Base+0xac>
   2ef84:	add	r0, r0, #4
   2ef88:	mov	r1, r9
   2ef8c:	mov	r7, r3
   2ef90:	mov	r5, r2
   2ef94:	ldrb	r6, [r0, #-4]
   2ef98:	subs	r1, r1, #1
   2ef9c:	strb	r6, [r5], #1
   2efa0:	ldr	r6, [r0]
   2efa4:	add	r0, r0, #8
   2efa8:	str	r6, [r7], #4
   2efac:	bne	2ef94 <flatcc_builder_end_union_vector@@Base+0x90>
   2efb0:	add	r0, sp, #8
   2efb4:	mov	r1, r4
   2efb8:	str	r9, [sp]
   2efbc:	bl	2ee14 <flatcc_builder_create_union_vector_direct@@Base>
   2efc0:	ldr	r0, [sp, #8]
   2efc4:	ldr	r1, [sp, #12]
   2efc8:	stm	r8, {r0, r1}
   2efcc:	mov	r1, #0
   2efd0:	ldr	r0, [r4, #16]
   2efd4:	ldr	r2, [r4, #20]
   2efd8:	bl	14ef0 <memset@plt>
   2efdc:	ldr	r0, [r4, #32]
   2efe0:	ldr	r1, [r4, #60]	; 0x3c
   2efe4:	ldr	r2, [r4, #64]	; 0x40
   2efe8:	ldr	r3, [r0, #8]
   2efec:	str	r3, [r4, #20]
   2eff0:	ldr	r3, [r0]
   2eff4:	str	r3, [r4, #28]
   2eff8:	add	r1, r1, r3
   2effc:	ldr	r7, [r0, #4]
   2f000:	str	r1, [r4, #16]
   2f004:	sub	r1, r2, r3
   2f008:	cmp	r1, r7
   2f00c:	movhi	r1, r7
   2f010:	str	r1, [r4, #24]
   2f014:	ldrh	r1, [r4, #130]	; 0x82
   2f018:	ldrh	r2, [r4, #128]	; 0x80
   2f01c:	cmp	r2, r1
   2f020:	strhcc	r1, [r4, #128]	; 0x80
   2f024:	ldrh	r1, [r0, #12]
   2f028:	sub	r0, r0, #36	; 0x24
   2f02c:	str	r0, [r4, #32]
   2f030:	strh	r1, [r4, #130]	; 0x82
   2f034:	ldr	r0, [r4, #156]	; 0x9c
   2f038:	sub	r0, r0, #1
   2f03c:	str	r0, [r4, #156]	; 0x9c
   2f040:	sub	sp, fp, #24
   2f044:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f048:	movw	r0, #20488	; 0x5008
   2f04c:	movw	r1, #17382	; 0x43e6
   2f050:	movw	r3, #20538	; 0x503a
   2f054:	movw	r2, #1617	; 0x651
   2f058:	movt	r0, #4
   2f05c:	movt	r1, #4
   2f060:	movt	r3, #4
   2f064:	bl	14f44 <__assert_fail@plt>

0002f068 <flatcc_builder_union_vector_count@@Base>:
   2f068:	ldr	r0, [r0, #32]
   2f06c:	ldr	r0, [r0, #20]
   2f070:	bx	lr

0002f074 <flatcc_builder_union_vector_edit@@Base>:
   2f074:	ldr	r0, [r0, #16]
   2f078:	bx	lr

0002f07c <flatcc_builder_extend_union_vector@@Base>:
   2f07c:	push	{r4, r5, fp, lr}
   2f080:	add	fp, sp, #8
   2f084:	mov	r4, r0
   2f088:	ldr	r0, [r0, #32]
   2f08c:	ldr	r2, [r0, #20]
   2f090:	adds	r2, r2, r1
   2f094:	cmpcc	r2, #536870912	; 0x20000000
   2f098:	bcc	2f0bc <flatcc_builder_extend_union_vector@@Base+0x40>
   2f09c:	movw	r0, #21653	; 0x5495
   2f0a0:	movw	r1, #17382	; 0x43e6
   2f0a4:	movw	r3, #21680	; 0x54b0
   2f0a8:	mov	r2, #892	; 0x37c
   2f0ac:	movt	r0, #4
   2f0b0:	movt	r1, #4
   2f0b4:	movt	r3, #4
   2f0b8:	bl	14f44 <__assert_fail@plt>
   2f0bc:	str	r2, [r0, #20]
   2f0c0:	ldr	r5, [r4, #20]
   2f0c4:	ldr	r2, [r4, #24]
   2f0c8:	add	r0, r5, r1, lsl #3
   2f0cc:	cmp	r0, r2
   2f0d0:	str	r0, [r4, #20]
   2f0d4:	bcc	2f0f8 <flatcc_builder_extend_union_vector@@Base+0x7c>
   2f0d8:	add	r1, r0, #1
   2f0dc:	mov	r0, r4
   2f0e0:	mvn	r2, #3
   2f0e4:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2f0e8:	mov	r1, r0
   2f0ec:	mov	r0, #0
   2f0f0:	cmp	r1, #0
   2f0f4:	popne	{r4, r5, fp, pc}
   2f0f8:	ldr	r0, [r4, #16]
   2f0fc:	add	r0, r0, r5
   2f100:	pop	{r4, r5, fp, pc}

0002f104 <flatcc_builder_truncate_union_vector@@Base>:
   2f104:	push	{fp, lr}
   2f108:	mov	fp, sp
   2f10c:	ldr	r2, [r0, #32]
   2f110:	ldrh	r3, [r2, #14]
   2f114:	cmp	r3, #7
   2f118:	bne	2f160 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2f11c:	ldr	r3, [r2, #20]
   2f120:	cmp	r3, r1
   2f124:	bcc	2f180 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   2f128:	sub	r3, r3, r1
   2f12c:	str	r3, [r2, #20]
   2f130:	ldr	r2, [r0, #32]
   2f134:	ldr	r3, [r0, #20]
   2f138:	ldr	ip, [r0, #16]
   2f13c:	ldr	r2, [r2, #16]
   2f140:	mls	r3, r2, r1, r3
   2f144:	mul	r2, r2, r1
   2f148:	mov	r1, #0
   2f14c:	str	r3, [r0, #20]
   2f150:	add	r0, ip, r3
   2f154:	bl	14ef0 <memset@plt>
   2f158:	mov	r0, #0
   2f15c:	pop	{fp, pc}
   2f160:	movw	r0, #20488	; 0x5008
   2f164:	movw	r1, #17382	; 0x43e6
   2f168:	movw	r3, #20621	; 0x508d
   2f16c:	movw	r2, #1665	; 0x681
   2f170:	movt	r0, #4
   2f174:	movt	r1, #4
   2f178:	movt	r3, #4
   2f17c:	bl	14f44 <__assert_fail@plt>
   2f180:	movw	r0, #19052	; 0x4a6c
   2f184:	movw	r1, #17382	; 0x43e6
   2f188:	movw	r3, #20621	; 0x508d
   2f18c:	movw	r2, #1666	; 0x682
   2f190:	movt	r0, #4
   2f194:	movt	r1, #4
   2f198:	movt	r3, #4
   2f19c:	bl	14f44 <__assert_fail@plt>

0002f1a0 <flatcc_builder_union_vector_push@@Base>:
   2f1a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f1a4:	add	fp, sp, #24
   2f1a8:	mov	r7, r0
   2f1ac:	ldr	r0, [r0, #32]
   2f1b0:	mov	r5, r1
   2f1b4:	ldrh	r1, [r0, #14]
   2f1b8:	cmp	r1, #7
   2f1bc:	bne	2f224 <flatcc_builder_union_vector_push@@Base+0x84>
   2f1c0:	ldr	r1, [r0, #20]
   2f1c4:	mov	r6, #0
   2f1c8:	cmn	r1, #-536870911	; 0xe0000001
   2f1cc:	beq	2f21c <flatcc_builder_union_vector_push@@Base+0x7c>
   2f1d0:	add	r1, r1, #1
   2f1d4:	mov	r8, r2
   2f1d8:	str	r1, [r0, #20]
   2f1dc:	ldr	r4, [r7, #20]
   2f1e0:	ldr	r0, [r7, #24]
   2f1e4:	add	r1, r4, #8
   2f1e8:	cmp	r1, r0
   2f1ec:	str	r1, [r7, #20]
   2f1f0:	bcc	2f20c <flatcc_builder_union_vector_push@@Base+0x6c>
   2f1f4:	add	r1, r4, #9
   2f1f8:	mov	r0, r7
   2f1fc:	mvn	r2, #3
   2f200:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2f204:	cmp	r0, #0
   2f208:	bne	2f21c <flatcc_builder_union_vector_push@@Base+0x7c>
   2f20c:	ldr	r0, [r7, #16]
   2f210:	adds	r0, r0, r4
   2f214:	movne	r6, r0
   2f218:	stmne	r0, {r5, r8}
   2f21c:	mov	r0, r6
   2f220:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f224:	movw	r0, #20488	; 0x5008
   2f228:	movw	r1, #17382	; 0x43e6
   2f22c:	movw	r3, #20690	; 0x50d2
   2f230:	movw	r2, #1677	; 0x68d
   2f234:	movt	r0, #4
   2f238:	movt	r1, #4
   2f23c:	movt	r3, #4
   2f240:	bl	14f44 <__assert_fail@plt>

0002f244 <flatcc_builder_append_union_vector@@Base>:
   2f244:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f248:	add	fp, sp, #24
   2f24c:	mov	r6, r0
   2f250:	ldr	r0, [r0, #32]
   2f254:	mov	r8, r1
   2f258:	ldrh	r1, [r0, #14]
   2f25c:	cmp	r1, #7
   2f260:	bne	2f2fc <flatcc_builder_append_union_vector@@Base+0xb8>
   2f264:	ldr	r1, [r0, #20]
   2f268:	mov	r5, r2
   2f26c:	adds	r1, r1, r2
   2f270:	cmpcc	r1, #536870912	; 0x20000000
   2f274:	bcc	2f298 <flatcc_builder_append_union_vector@@Base+0x54>
   2f278:	movw	r0, #21653	; 0x5495
   2f27c:	movw	r1, #17382	; 0x43e6
   2f280:	movw	r3, #21680	; 0x54b0
   2f284:	mov	r2, #892	; 0x37c
   2f288:	movt	r0, #4
   2f28c:	movt	r1, #4
   2f290:	movt	r3, #4
   2f294:	bl	14f44 <__assert_fail@plt>
   2f298:	str	r1, [r0, #20]
   2f29c:	ldr	r4, [r6, #20]
   2f2a0:	ldr	r1, [r6, #24]
   2f2a4:	add	r0, r4, r5, lsl #3
   2f2a8:	cmp	r0, r1
   2f2ac:	str	r0, [r6, #20]
   2f2b0:	bcc	2f2d0 <flatcc_builder_append_union_vector@@Base+0x8c>
   2f2b4:	add	r1, r0, #1
   2f2b8:	mov	r0, r6
   2f2bc:	mvn	r2, #3
   2f2c0:	bl	2f938 <flatcc_builder_get_emit_context@@Base+0x8>
   2f2c4:	mov	r7, #0
   2f2c8:	cmp	r0, #0
   2f2cc:	bne	2f2f4 <flatcc_builder_append_union_vector@@Base+0xb0>
   2f2d0:	ldr	r0, [r6, #16]
   2f2d4:	adds	r7, r0, r4
   2f2d8:	beq	2f2f0 <flatcc_builder_append_union_vector@@Base+0xac>
   2f2dc:	lsl	r2, r5, #3
   2f2e0:	mov	r0, r7
   2f2e4:	mov	r1, r8
   2f2e8:	bl	14e60 <memcpy@plt>
   2f2ec:	b	2f2f4 <flatcc_builder_append_union_vector@@Base+0xb0>
   2f2f0:	mov	r7, #0
   2f2f4:	mov	r0, r7
   2f2f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f2fc:	movw	r0, #20488	; 0x5008
   2f300:	movw	r1, #17382	; 0x43e6
   2f304:	movw	r3, #20799	; 0x513f
   2f308:	movw	r2, #1692	; 0x69c
   2f30c:	movt	r0, #4
   2f310:	movt	r1, #4
   2f314:	movt	r3, #4
   2f318:	bl	14f44 <__assert_fail@plt>

0002f31c <flatcc_builder_create_string@@Base>:
   2f31c:	push	{r4, r5, r6, sl, fp, lr}
   2f320:	add	fp, sp, #16
   2f324:	sub	sp, sp, #80	; 0x50
   2f328:	str	r2, [fp, #-20]	; 0xffffffec
   2f32c:	mvn	r5, r2
   2f330:	mov	r6, r0
   2f334:	mov	r3, #1
   2f338:	cmp	r2, #0
   2f33c:	ldr	ip, [r0, #136]	; 0x88
   2f340:	sub	r0, fp, #20
   2f344:	str	r0, [sp, #12]
   2f348:	mov	r0, #4
   2f34c:	str	r0, [sp, #4]
   2f350:	str	r0, [sp, #16]
   2f354:	str	r3, [sp, #8]
   2f358:	add	r5, ip, r5
   2f35c:	and	r5, r5, #3
   2f360:	add	r5, r5, #1
   2f364:	beq	2f380 <flatcc_builder_create_string@@Base+0x64>
   2f368:	mov	r3, #2
   2f36c:	add	r0, r2, #4
   2f370:	str	r1, [sp, #20]
   2f374:	str	r2, [sp, #24]
   2f378:	str	r3, [sp, #8]
   2f37c:	str	r0, [sp, #4]
   2f380:	movw	r2, #16852	; 0x41d4
   2f384:	add	lr, sp, #4
   2f388:	add	r1, r0, r5
   2f38c:	add	r0, lr, r3, lsl #3
   2f390:	movt	r2, #4
   2f394:	str	r1, [sp, #4]
   2f398:	cmp	r1, #0
   2f39c:	str	r2, [r0, #8]
   2f3a0:	add	r2, r3, #1
   2f3a4:	str	r5, [r0, #12]
   2f3a8:	str	r2, [sp, #8]
   2f3ac:	ble	2f400 <flatcc_builder_create_string@@Base+0xe4>
   2f3b0:	ldr	r0, [r6, #36]	; 0x24
   2f3b4:	ldr	r4, [r6, #44]	; 0x2c
   2f3b8:	sub	r5, ip, r1
   2f3bc:	str	r1, [sp]
   2f3c0:	add	r1, lr, #8
   2f3c4:	mov	r3, r5
   2f3c8:	blx	r4
   2f3cc:	cmp	r0, #0
   2f3d0:	streq	r5, [r6, #136]	; 0x88
   2f3d4:	moveq	r0, r5
   2f3d8:	subeq	sp, fp, #16
   2f3dc:	popeq	{r4, r5, r6, sl, fp, pc}
   2f3e0:	movw	r0, #21900	; 0x558c
   2f3e4:	movw	r1, #17382	; 0x43e6
   2f3e8:	movw	r3, #21579	; 0x544b
   2f3ec:	movw	r2, #651	; 0x28b
   2f3f0:	movt	r0, #4
   2f3f4:	movt	r1, #4
   2f3f8:	movt	r3, #4
   2f3fc:	bl	14f44 <__assert_fail@plt>
   2f400:	movw	r0, #21900	; 0x558c
   2f404:	movw	r1, #17382	; 0x43e6
   2f408:	movw	r3, #21579	; 0x544b
   2f40c:	movw	r2, #647	; 0x287
   2f410:	movt	r0, #4
   2f414:	movt	r1, #4
   2f418:	movt	r3, #4
   2f41c:	bl	14f44 <__assert_fail@plt>

0002f420 <flatcc_builder_create_string_str@@Base>:
   2f420:	push	{r4, r5, fp, lr}
   2f424:	add	fp, sp, #8
   2f428:	mov	r5, r0
   2f42c:	mov	r0, r1
   2f430:	mov	r4, r1
   2f434:	bl	14ecc <strlen@plt>
   2f438:	mov	r2, r0
   2f43c:	mov	r0, r5
   2f440:	mov	r1, r4
   2f444:	pop	{r4, r5, fp, lr}
   2f448:	b	2f31c <flatcc_builder_create_string@@Base>

0002f44c <flatcc_builder_create_string_strn@@Base>:
   2f44c:	push	{r4, r5, r6, sl, fp, lr}
   2f450:	add	fp, sp, #16
   2f454:	mov	r6, r0
   2f458:	mov	r5, r1
   2f45c:	mov	r0, r1
   2f460:	mov	r1, #0
   2f464:	mov	r4, r2
   2f468:	bl	14f14 <memchr@plt>
   2f46c:	cmp	r0, #0
   2f470:	mov	r1, r5
   2f474:	subne	r4, r0, r5
   2f478:	mov	r0, r6
   2f47c:	mov	r2, r4
   2f480:	pop	{r4, r5, r6, sl, fp, lr}
   2f484:	b	2f31c <flatcc_builder_create_string@@Base>

0002f488 <flatcc_builder_end_string@@Base>:
   2f488:	push	{r4, r5, fp, lr}
   2f48c:	add	fp, sp, #8
   2f490:	mov	r4, r0
   2f494:	ldr	r0, [r0, #32]
   2f498:	ldrh	r1, [r0, #14]
   2f49c:	cmp	r1, #6
   2f4a0:	bne	2f548 <flatcc_builder_end_string@@Base+0xc0>
   2f4a4:	ldr	r2, [r0, #20]
   2f4a8:	ldr	r0, [r4, #20]
   2f4ac:	cmp	r2, r0
   2f4b0:	bne	2f568 <flatcc_builder_end_string@@Base+0xe0>
   2f4b4:	ldr	r1, [r4, #16]
   2f4b8:	mov	r0, r4
   2f4bc:	bl	2f31c <flatcc_builder_create_string@@Base>
   2f4c0:	mov	r5, r0
   2f4c4:	cmp	r0, #0
   2f4c8:	beq	2f540 <flatcc_builder_end_string@@Base+0xb8>
   2f4cc:	ldr	r0, [r4, #16]
   2f4d0:	ldr	r2, [r4, #20]
   2f4d4:	mov	r1, #0
   2f4d8:	bl	14ef0 <memset@plt>
   2f4dc:	ldr	r0, [r4, #32]
   2f4e0:	ldr	r1, [r4, #60]	; 0x3c
   2f4e4:	ldr	ip, [r4, #64]	; 0x40
   2f4e8:	ldr	r3, [r0, #8]
   2f4ec:	str	r3, [r4, #20]
   2f4f0:	ldr	r3, [r0]
   2f4f4:	str	r3, [r4, #28]
   2f4f8:	add	r1, r1, r3
   2f4fc:	ldr	r2, [r0, #4]
   2f500:	str	r1, [r4, #16]
   2f504:	sub	r1, ip, r3
   2f508:	cmp	r1, r2
   2f50c:	movhi	r1, r2
   2f510:	str	r1, [r4, #24]
   2f514:	ldrh	r1, [r4, #130]	; 0x82
   2f518:	ldrh	r2, [r4, #128]	; 0x80
   2f51c:	cmp	r2, r1
   2f520:	strhcc	r1, [r4, #128]	; 0x80
   2f524:	ldrh	r1, [r0, #12]
   2f528:	sub	r0, r0, #36	; 0x24
   2f52c:	str	r0, [r4, #32]
   2f530:	strh	r1, [r4, #130]	; 0x82
   2f534:	ldr	r0, [r4, #156]	; 0x9c
   2f538:	sub	r0, r0, #1
   2f53c:	str	r0, [r4, #156]	; 0x9c
   2f540:	mov	r0, r5
   2f544:	pop	{r4, r5, fp, pc}
   2f548:	movw	r0, #18699	; 0x490b
   2f54c:	movw	r1, #17382	; 0x43e6
   2f550:	movw	r3, #20926	; 0x51be
   2f554:	movw	r2, #1732	; 0x6c4
   2f558:	movt	r0, #4
   2f55c:	movt	r1, #4
   2f560:	movt	r3, #4
   2f564:	bl	14f44 <__assert_fail@plt>
   2f568:	movw	r0, #20993	; 0x5201
   2f56c:	movw	r1, #17382	; 0x43e6
   2f570:	movw	r3, #20926	; 0x51be
   2f574:	movw	r2, #1733	; 0x6c5
   2f578:	movt	r0, #4
   2f57c:	movt	r1, #4
   2f580:	movt	r3, #4
   2f584:	bl	14f44 <__assert_fail@plt>

0002f588 <flatcc_builder_string_edit@@Base>:
   2f588:	ldr	r0, [r0, #16]
   2f58c:	bx	lr

0002f590 <flatcc_builder_string_len@@Base>:
   2f590:	ldr	r0, [r0, #32]
   2f594:	ldr	r0, [r0, #20]
   2f598:	bx	lr

0002f59c <flatcc_builder_table_edit@@Base>:
   2f59c:	ldr	r2, [r0, #32]
   2f5a0:	ldrh	r2, [r2, #14]
   2f5a4:	cmp	r2, #3
   2f5a8:	ldreq	r2, [r0, #16]
   2f5ac:	ldreq	r0, [r0, #20]
   2f5b0:	addeq	r0, r2, r0
   2f5b4:	subeq	r0, r0, r1
   2f5b8:	bxeq	lr
   2f5bc:	push	{fp, lr}
   2f5c0:	mov	fp, sp
   2f5c4:	movw	r0, #19451	; 0x4bfb
   2f5c8:	movw	r1, #17382	; 0x43e6
   2f5cc:	movw	r3, #21171	; 0x52b3
   2f5d0:	movw	r2, #1794	; 0x702
   2f5d4:	movt	r0, #4
   2f5d8:	movt	r1, #4
   2f5dc:	movt	r3, #4
   2f5e0:	bl	14f44 <__assert_fail@plt>

0002f5e4 <flatcc_builder_table_add_copy@@Base>:
   2f5e4:	push	{r4, r5, r6, sl, fp, lr}
   2f5e8:	add	fp, sp, #16
   2f5ec:	mov	r4, r3
   2f5f0:	ldr	r3, [fp, #8]
   2f5f4:	mov	r5, r2
   2f5f8:	mov	r2, r4
   2f5fc:	bl	2ea78 <flatcc_builder_table_add@@Base>
   2f600:	mov	r6, r0
   2f604:	cmp	r0, #0
   2f608:	beq	2f61c <flatcc_builder_table_add_copy@@Base+0x38>
   2f60c:	mov	r0, r6
   2f610:	mov	r1, r5
   2f614:	mov	r2, r4
   2f618:	bl	14e60 <memcpy@plt>
   2f61c:	mov	r0, r6
   2f620:	pop	{r4, r5, r6, sl, fp, pc}

0002f624 <flatcc_builder_push_buffer_alignment@@Base>:
   2f624:	ldrh	r1, [r0, #128]	; 0x80
   2f628:	mov	r2, #4
   2f62c:	strh	r2, [r0, #128]	; 0x80
   2f630:	mov	r0, r1
   2f634:	bx	lr

0002f638 <flatcc_builder_pop_buffer_alignment@@Base>:
   2f638:	ldrh	r2, [r0, #128]	; 0x80
   2f63c:	cmp	r2, r1
   2f640:	strhcc	r1, [r0, #128]	; 0x80
   2f644:	bx	lr

0002f648 <flatcc_builder_get_buffer_alignment@@Base>:
   2f648:	ldrh	r0, [r0, #128]	; 0x80
   2f64c:	bx	lr

0002f650 <flatcc_builder_set_vtable_clustering@@Base>:
   2f650:	clz	r1, r1
   2f654:	lsr	r1, r1, #5
   2f658:	str	r1, [r0, #180]	; 0xb4
   2f65c:	bx	lr

0002f660 <flatcc_builder_set_block_align@@Base>:
   2f660:	strh	r1, [r0, #132]	; 0x84
   2f664:	bx	lr

0002f668 <flatcc_builder_get_level@@Base>:
   2f668:	ldr	r0, [r0, #156]	; 0x9c
   2f66c:	bx	lr

0002f670 <flatcc_builder_set_max_level@@Base>:
   2f670:	str	r1, [r0, #176]	; 0xb0
   2f674:	ldr	r2, [r0, #160]	; 0xa0
   2f678:	cmp	r2, r1
   2f67c:	strlt	r1, [r0, #160]	; 0xa0
   2f680:	bx	lr

0002f684 <flatcc_builder_get_buffer_size@@Base>:
   2f684:	ldr	r1, [r0, #136]	; 0x88
   2f688:	ldr	r0, [r0, #140]	; 0x8c
   2f68c:	sub	r0, r0, r1
   2f690:	bx	lr

0002f694 <flatcc_builder_get_buffer_start@@Base>:
   2f694:	ldr	r0, [r0, #136]	; 0x88
   2f698:	bx	lr

0002f69c <flatcc_builder_get_buffer_end@@Base>:
   2f69c:	ldr	r0, [r0, #140]	; 0x8c
   2f6a0:	bx	lr

0002f6a4 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2f6a4:	str	r1, [r0, #172]	; 0xac
   2f6a8:	bx	lr

0002f6ac <flatcc_builder_set_identifier@@Base>:
   2f6ac:	movw	r2, #16852	; 0x41d4
   2f6b0:	cmp	r1, #0
   2f6b4:	movt	r2, #4
   2f6b8:	movne	r2, r1
   2f6bc:	ldr	r1, [r2]
   2f6c0:	str	r1, [r0, #168]	; 0xa8
   2f6c4:	bx	lr

0002f6c8 <flatcc_builder_get_type@@Base>:
   2f6c8:	ldr	r0, [r0, #32]
   2f6cc:	cmp	r0, #0
   2f6d0:	ldrhne	r0, [r0, #14]
   2f6d4:	moveq	r0, #0
   2f6d8:	bx	lr

0002f6dc <flatcc_builder_get_type_at@@Base>:
   2f6dc:	mov	r2, r0
   2f6e0:	cmp	r1, #1
   2f6e4:	mov	r0, #0
   2f6e8:	ldrge	r3, [r2, #156]	; 0x9c
   2f6ec:	cmpge	r3, r1
   2f6f0:	bge	2f6f8 <flatcc_builder_get_type_at@@Base+0x1c>
   2f6f4:	bx	lr
   2f6f8:	sub	r0, r1, r3
   2f6fc:	ldr	r1, [r2, #32]
   2f700:	add	r0, r0, r0, lsl #3
   2f704:	add	r0, r1, r0, lsl #2
   2f708:	ldrh	r0, [r0, #14]
   2f70c:	bx	lr

0002f710 <flatcc_builder_get_direct_buffer@@Base>:
   2f710:	ldr	r2, [r0, #184]	; 0xb8
   2f714:	cmp	r2, #0
   2f718:	beq	2f72c <flatcc_builder_get_direct_buffer@@Base+0x1c>
   2f71c:	ldr	r2, [r0, #188]	; 0xbc
   2f720:	ldr	r3, [r0, #192]	; 0xc0
   2f724:	cmp	r2, r3
   2f728:	beq	2f73c <flatcc_builder_get_direct_buffer@@Base+0x2c>
   2f72c:	mov	r0, #0
   2f730:	cmp	r1, #0
   2f734:	strne	r0, [r1]
   2f738:	bx	lr
   2f73c:	cmp	r1, #0
   2f740:	ldrne	r2, [r0, #212]	; 0xd4
   2f744:	strne	r2, [r1]
   2f748:	ldr	r0, [r0, #196]	; 0xc4
   2f74c:	bx	lr

0002f750 <flatcc_builder_copy_buffer@@Base>:
   2f750:	push	{fp, lr}
   2f754:	mov	fp, sp
   2f758:	ldr	r3, [r0, #184]	; 0xb8
   2f75c:	cmp	r3, #0
   2f760:	beq	2f794 <flatcc_builder_copy_buffer@@Base+0x44>
   2f764:	add	r0, r0, #188	; 0xbc
   2f768:	bl	2fe70 <flatcc_emitter_copy_buffer@@Base>
   2f76c:	cmp	r0, #0
   2f770:	popne	{fp, pc}
   2f774:	movw	r0, #5031	; 0x13a7
   2f778:	movw	r1, #17382	; 0x43e6
   2f77c:	movw	r3, #21310	; 0x533e
   2f780:	movw	r2, #1926	; 0x786
   2f784:	movt	r0, #4
   2f788:	movt	r1, #4
   2f78c:	movt	r3, #4
   2f790:	bl	14f44 <__assert_fail@plt>
   2f794:	mov	r0, #0
   2f798:	pop	{fp, pc}

0002f79c <flatcc_builder_finalize_buffer@@Base>:
   2f79c:	push	{r4, r5, r6, sl, fp, lr}
   2f7a0:	add	fp, sp, #16
   2f7a4:	mov	r4, r0
   2f7a8:	ldr	r0, [r0, #136]	; 0x88
   2f7ac:	cmp	r1, #0
   2f7b0:	ldr	r2, [r4, #140]	; 0x8c
   2f7b4:	sub	r5, r2, r0
   2f7b8:	mov	r0, r5
   2f7bc:	strne	r5, [r1]
   2f7c0:	bl	14ea8 <malloc@plt>
   2f7c4:	cmp	r0, #0
   2f7c8:	beq	2f80c <flatcc_builder_finalize_buffer@@Base+0x70>
   2f7cc:	mov	r6, r0
   2f7d0:	mov	r0, r4
   2f7d4:	mov	r2, r5
   2f7d8:	mov	r1, r6
   2f7dc:	bl	2f750 <flatcc_builder_copy_buffer@@Base>
   2f7e0:	cmp	r0, #0
   2f7e4:	movne	r0, r6
   2f7e8:	popne	{r4, r5, r6, sl, fp, pc}
   2f7ec:	movw	r0, #21900	; 0x558c
   2f7f0:	movw	r1, #17382	; 0x43e6
   2f7f4:	movw	r3, #21379	; 0x5383
   2f7f8:	movw	r2, #1948	; 0x79c
   2f7fc:	movt	r0, #4
   2f800:	movt	r1, #4
   2f804:	movt	r3, #4
   2f808:	bl	14f44 <__assert_fail@plt>
   2f80c:	movw	r0, #21900	; 0x558c
   2f810:	movw	r1, #17382	; 0x43e6
   2f814:	movw	r3, #21379	; 0x5383
   2f818:	movw	r2, #1944	; 0x798
   2f81c:	movt	r0, #4
   2f820:	movt	r1, #4
   2f824:	movt	r3, #4
   2f828:	bl	14f44 <__assert_fail@plt>

0002f82c <flatcc_builder_finalize_aligned_buffer@@Base>:
   2f82c:	push	{r4, r5, r6, r7, fp, lr}
   2f830:	add	fp, sp, #16
   2f834:	sub	sp, sp, #8
   2f838:	mov	r5, r0
   2f83c:	mov	r4, r1
   2f840:	ldr	r0, [r0, #136]	; 0x88
   2f844:	ldr	r1, [r5, #140]	; 0x8c
   2f848:	cmp	r4, #0
   2f84c:	sub	r0, r1, r0
   2f850:	mov	r1, #0
   2f854:	strne	r0, [r4]
   2f858:	ldrh	r2, [r5, #128]	; 0x80
   2f85c:	str	r1, [sp, #4]
   2f860:	add	r0, r0, r2
   2f864:	cmp	r2, #4
   2f868:	mov	r1, r2
   2f86c:	rsb	r2, r2, #0
   2f870:	sub	r0, r0, #1
   2f874:	movls	r1, #4
   2f878:	and	r7, r0, r2
   2f87c:	add	r0, sp, #4
   2f880:	mov	r2, r7
   2f884:	bl	14ee4 <posix_memalign@plt>
   2f888:	ldr	r6, [sp, #4]
   2f88c:	cmp	r0, #0
   2f890:	cmpne	r6, #0
   2f894:	bne	2f8b8 <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   2f898:	cmp	r6, #0
   2f89c:	beq	2f8c0 <flatcc_builder_finalize_aligned_buffer@@Base+0x94>
   2f8a0:	mov	r0, r5
   2f8a4:	mov	r1, r6
   2f8a8:	mov	r2, r7
   2f8ac:	bl	2f750 <flatcc_builder_copy_buffer@@Base>
   2f8b0:	cmp	r0, #0
   2f8b4:	bne	2f8cc <flatcc_builder_finalize_aligned_buffer@@Base+0xa0>
   2f8b8:	mov	r0, r6
   2f8bc:	bl	14e54 <free@plt>
   2f8c0:	mov	r6, #0
   2f8c4:	cmp	r4, #0
   2f8c8:	strne	r6, [r4]
   2f8cc:	mov	r0, r6
   2f8d0:	sub	sp, fp, #16
   2f8d4:	pop	{r4, r5, r6, r7, fp, pc}

0002f8d8 <flatcc_builder_aligned_alloc@@Base>:
   2f8d8:	push	{fp, lr}
   2f8dc:	mov	fp, sp
   2f8e0:	sub	sp, sp, #8
   2f8e4:	mov	r2, r1
   2f8e8:	mov	r1, r0
   2f8ec:	mov	r0, #0
   2f8f0:	cmp	r1, #4
   2f8f4:	str	r0, [sp, #4]
   2f8f8:	add	r0, sp, #4
   2f8fc:	movls	r1, #4
   2f900:	bl	14ee4 <posix_memalign@plt>
   2f904:	mov	r1, r0
   2f908:	ldr	r0, [sp, #4]
   2f90c:	cmp	r1, #0
   2f910:	cmpne	r0, #0
   2f914:	beq	2f924 <flatcc_builder_aligned_alloc@@Base+0x4c>
   2f918:	bl	14e54 <free@plt>
   2f91c:	mov	r0, #0
   2f920:	str	r0, [sp, #4]
   2f924:	mov	sp, fp
   2f928:	pop	{fp, pc}

0002f92c <flatcc_builder_aligned_free@@Base>:
   2f92c:	b	14e54 <free@plt>

0002f930 <flatcc_builder_get_emit_context@@Base>:
   2f930:	ldr	r0, [r0, #36]	; 0x24
   2f934:	bx	lr
   2f938:	push	{r4, r5, r6, sl, fp, lr}
   2f93c:	add	fp, sp, #16
   2f940:	sub	sp, sp, #8
   2f944:	mov	r6, r2
   2f948:	ldr	r2, [r0, #28]
   2f94c:	mov	r5, r0
   2f950:	ldr	r0, [r0, #40]	; 0x28
   2f954:	mov	r3, #1
   2f958:	ldr	r4, [r5, #48]	; 0x30
   2f95c:	str	r3, [sp]
   2f960:	mov	r3, #1
   2f964:	add	r2, r2, r1
   2f968:	add	r1, r5, #60	; 0x3c
   2f96c:	blx	r4
   2f970:	mov	r1, r0
   2f974:	mvn	r0, #0
   2f978:	cmp	r1, #0
   2f97c:	bne	2f9b0 <flatcc_builder_get_emit_context@@Base+0x80>
   2f980:	ldr	r0, [r5, #28]
   2f984:	ldr	r2, [r5, #60]	; 0x3c
   2f988:	ldr	r3, [r5, #64]	; 0x40
   2f98c:	ldr	r1, [r5, #32]
   2f990:	add	r2, r2, r0
   2f994:	sub	r0, r3, r0
   2f998:	cmp	r0, r6
   2f99c:	str	r2, [r5, #16]
   2f9a0:	movhi	r0, r6
   2f9a4:	str	r0, [r5, #24]
   2f9a8:	mov	r0, #0
   2f9ac:	str	r6, [r1, #4]
   2f9b0:	sub	sp, fp, #16
   2f9b4:	pop	{r4, r5, r6, sl, fp, pc}

0002f9b8 <flatcc_emitter_recycle_page@@Base>:
   2f9b8:	ldr	r3, [r0]
   2f9bc:	mov	r2, r0
   2f9c0:	mvn	r0, #0
   2f9c4:	cmp	r3, r1
   2f9c8:	ldrne	r2, [r2, #4]
   2f9cc:	cmpne	r2, r1
   2f9d0:	bne	2f9d8 <flatcc_emitter_recycle_page@@Base+0x20>
   2f9d4:	bx	lr
   2f9d8:	ldr	r0, [r1, #2944]	; 0xb80
   2f9dc:	ldr	r2, [r1, #2948]	; 0xb84
   2f9e0:	str	r2, [r0, #2948]	; 0xb84
   2f9e4:	ldr	r2, [r1, #2948]	; 0xb84
   2f9e8:	str	r0, [r2, #2944]	; 0xb80
   2f9ec:	ldr	r0, [r3, #2948]	; 0xb84
   2f9f0:	str	r3, [r1, #2944]	; 0xb80
   2f9f4:	str	r0, [r1, #2948]	; 0xb84
   2f9f8:	str	r1, [r0, #2944]	; 0xb80
   2f9fc:	ldr	r0, [r1, #2944]	; 0xb80
   2fa00:	str	r1, [r0, #2948]	; 0xb84
   2fa04:	mov	r0, #0
   2fa08:	bx	lr

0002fa0c <flatcc_emitter_reset@@Base>:
   2fa0c:	push	{r4, sl, fp, lr}
   2fa10:	add	fp, sp, #8
   2fa14:	ldr	r1, [r0]
   2fa18:	cmp	r1, #0
   2fa1c:	beq	2fad4 <flatcc_emitter_reset@@Base+0xc8>
   2fa20:	mov	r4, r0
   2fa24:	add	r2, r1, #1472	; 0x5c0
   2fa28:	mov	r0, #1472	; 0x5c0
   2fa2c:	mov	r3, #0
   2fa30:	stmib	r4, {r1, r2}
   2fa34:	str	r0, [r4, #12]
   2fa38:	str	r2, [r4, #16]
   2fa3c:	str	r0, [r4, #20]
   2fa40:	movw	r0, #64064	; 0xfa40
   2fa44:	movt	r0, #65535	; 0xffff
   2fa48:	str	r0, [r1, #2952]	; 0xb88
   2fa4c:	ldr	r2, [r4, #32]
   2fa50:	ldr	r0, [r4, #24]
   2fa54:	cmp	r2, #0
   2fa58:	moveq	r2, r0
   2fa5c:	streq	r0, [r4, #32]
   2fa60:	str	r3, [r4, #24]
   2fa64:	add	r2, r2, r2, lsl #1
   2fa68:	lsr	r2, r2, #2
   2fa6c:	add	r0, r2, r0, lsr #2
   2fa70:	str	r0, [r4, #32]
   2fa74:	ldr	r2, [r4, #28]
   2fa78:	cmp	r2, r0, lsl #1
   2fa7c:	bls	2fad4 <flatcc_emitter_reset@@Base+0xc8>
   2fa80:	mov	r2, r1
   2fa84:	ldr	r0, [r2, #2944]!	; 0xb80
   2fa88:	cmp	r0, r1
   2fa8c:	beq	2fad4 <flatcc_emitter_reset@@Base+0xc8>
   2fa90:	ldr	r3, [r0, #2944]	; 0xb80
   2fa94:	str	r3, [r2]
   2fa98:	ldr	r2, [r0, #2944]	; 0xb80
   2fa9c:	str	r1, [r2, #2948]	; 0xb84
   2faa0:	bl	14e54 <free@plt>
   2faa4:	ldr	r0, [r4, #28]
   2faa8:	ldr	r1, [r4, #32]
   2faac:	sub	r0, r0, #2944	; 0xb80
   2fab0:	cmp	r0, r1, lsl #1
   2fab4:	str	r0, [r4, #28]
   2fab8:	popls	{r4, sl, fp, pc}
   2fabc:	ldr	r1, [r4, #4]
   2fac0:	ldr	r3, [r4]
   2fac4:	mov	r2, r1
   2fac8:	ldr	r0, [r2, #2944]!	; 0xb80
   2facc:	cmp	r0, r3
   2fad0:	bne	2fa90 <flatcc_emitter_reset@@Base+0x84>
   2fad4:	pop	{r4, sl, fp, pc}

0002fad8 <flatcc_emitter_clear@@Base>:
   2fad8:	push	{r4, r5, r6, sl, fp, lr}
   2fadc:	add	fp, sp, #16
   2fae0:	ldr	r5, [r0]
   2fae4:	cmp	r5, #0
   2fae8:	popeq	{r4, r5, r6, sl, fp, pc}
   2faec:	mov	r4, r0
   2faf0:	ldr	r0, [r5, #2948]	; 0xb84
   2faf4:	mov	r6, #0
   2faf8:	str	r6, [r0, #2944]	; 0xb80
   2fafc:	b	2fb0c <flatcc_emitter_clear@@Base+0x34>
   2fb00:	mov	r5, r0
   2fb04:	ldr	r0, [r0, #2948]	; 0xb84
   2fb08:	bl	14e54 <free@plt>
   2fb0c:	ldr	r0, [r5, #2944]	; 0xb80
   2fb10:	cmp	r0, #0
   2fb14:	bne	2fb00 <flatcc_emitter_clear@@Base+0x28>
   2fb18:	mov	r0, r5
   2fb1c:	bl	14e54 <free@plt>
   2fb20:	vmov.i32	q8, #0	; 0x00000000
   2fb24:	add	r0, r4, #16
   2fb28:	vst1.32	{d16-d17}, [r0]
   2fb2c:	mov	r0, #32
   2fb30:	vst1.32	{d16-d17}, [r4], r0
   2fb34:	str	r6, [r4]
   2fb38:	pop	{r4, r5, r6, sl, fp, pc}

0002fb3c <flatcc_emitter@@Base>:
   2fb3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fb40:	add	fp, sp, #28
   2fb44:	sub	sp, sp, #4
   2fb48:	mov	r6, r0
   2fb4c:	mov	r7, r1
   2fb50:	ldr	r0, [r0, #24]
   2fb54:	ldr	r1, [fp, #8]
   2fb58:	mov	r4, r2
   2fb5c:	cmn	r3, #1
   2fb60:	mov	r9, r6
   2fb64:	add	r0, r0, r1
   2fb68:	str	r0, [r6, #24]
   2fb6c:	ble	2fca4 <flatcc_emitter@@Base+0x168>
   2fb70:	ldr	r0, [r9, #20]!
   2fb74:	cmp	r0, r1
   2fb78:	bcs	2fe0c <flatcc_emitter@@Base+0x2d0>
   2fb7c:	mov	r8, #0
   2fb80:	cmp	r4, #0
   2fb84:	beq	2fe64 <flatcc_emitter@@Base+0x328>
   2fb88:	movw	sl, #64064	; 0xfa40
   2fb8c:	movt	sl, #65535	; 0xffff
   2fb90:	ldr	r8, [r7, #4]
   2fb94:	cmp	r8, #0
   2fb98:	beq	2fc94 <flatcc_emitter@@Base+0x158>
   2fb9c:	ldr	r9, [r7]
   2fba0:	cmp	r8, r0
   2fba4:	mov	r5, r8
   2fba8:	bls	2fc60 <flatcc_emitter@@Base+0x124>
   2fbac:	mov	r5, r0
   2fbb0:	cmp	r5, #0
   2fbb4:	bne	2fc60 <flatcc_emitter@@Base+0x124>
   2fbb8:	ldr	r5, [r6, #4]
   2fbbc:	cmp	r5, #0
   2fbc0:	beq	2fbd4 <flatcc_emitter@@Base+0x98>
   2fbc4:	ldr	r0, [r5, #2944]	; 0xb80
   2fbc8:	ldr	r1, [r6]
   2fbcc:	cmp	r0, r1
   2fbd0:	bne	2fc0c <flatcc_emitter@@Base+0xd0>
   2fbd4:	movw	r0, #2956	; 0xb8c
   2fbd8:	bl	14ea8 <malloc@plt>
   2fbdc:	cmp	r0, #0
   2fbe0:	beq	2fe1c <flatcc_emitter@@Base+0x2e0>
   2fbe4:	ldr	r1, [r6, #28]
   2fbe8:	cmp	r5, #0
   2fbec:	add	r1, r1, #2944	; 0xb80
   2fbf0:	str	r1, [r6, #28]
   2fbf4:	beq	2fc30 <flatcc_emitter@@Base+0xf4>
   2fbf8:	ldr	r1, [r6]
   2fbfc:	str	r1, [r0, #2944]	; 0xb80
   2fc00:	str	r5, [r0, #2948]	; 0xb84
   2fc04:	str	r0, [r1, #2948]	; 0xb84
   2fc08:	str	r0, [r5, #2944]	; 0xb80
   2fc0c:	mov	r5, #2944	; 0xb80
   2fc10:	str	r0, [r6, #4]
   2fc14:	str	r0, [r6, #16]
   2fc18:	str	r5, [r6, #20]
   2fc1c:	ldr	r1, [r0, #2948]	; 0xb84
   2fc20:	ldr	r1, [r1, #2952]	; 0xb88
   2fc24:	add	r1, r1, #2944	; 0xb80
   2fc28:	str	r1, [r0, #2952]	; 0xb88
   2fc2c:	b	2fc54 <flatcc_emitter@@Base+0x118>
   2fc30:	mov	r5, #1472	; 0x5c0
   2fc34:	add	r1, r0, #1472	; 0x5c0
   2fc38:	str	r0, [r6]
   2fc3c:	stmib	r6, {r0, r1, r5}
   2fc40:	str	r1, [r6, #16]
   2fc44:	str	r5, [r6, #20]
   2fc48:	str	r0, [r0, #2944]	; 0xb80
   2fc4c:	str	r0, [r0, #2948]	; 0xb84
   2fc50:	str	sl, [r0, #2952]	; 0xb88
   2fc54:	cmp	r8, r5
   2fc58:	bhi	2fbb0 <flatcc_emitter@@Base+0x74>
   2fc5c:	mov	r5, r8
   2fc60:	ldr	r0, [r6, #16]
   2fc64:	mov	r1, r9
   2fc68:	mov	r2, r5
   2fc6c:	bl	14e60 <memcpy@plt>
   2fc70:	ldr	r0, [r6, #16]
   2fc74:	ldr	r1, [r6, #20]
   2fc78:	add	r9, r9, r5
   2fc7c:	subs	r8, r8, r5
   2fc80:	add	r2, r0, r5
   2fc84:	sub	r0, r1, r5
   2fc88:	str	r2, [r6, #16]
   2fc8c:	str	r0, [r6, #20]
   2fc90:	bne	2fba0 <flatcc_emitter@@Base+0x64>
   2fc94:	subs	r4, r4, #1
   2fc98:	add	r7, r7, #8
   2fc9c:	bne	2fb90 <flatcc_emitter@@Base+0x54>
   2fca0:	b	2fe04 <flatcc_emitter@@Base+0x2c8>
   2fca4:	ldr	r0, [r9, #12]!
   2fca8:	cmp	r0, r1
   2fcac:	bcs	2fe24 <flatcc_emitter@@Base+0x2e8>
   2fcb0:	mov	r8, #0
   2fcb4:	cmp	r4, #0
   2fcb8:	beq	2fe64 <flatcc_emitter@@Base+0x328>
   2fcbc:	add	r0, r7, r4, lsl #3
   2fcc0:	movw	sl, #2952	; 0xb88
   2fcc4:	ldr	r8, [r0, #-4]
   2fcc8:	sub	r1, r0, #8
   2fccc:	str	r1, [sp]
   2fcd0:	cmp	r8, #0
   2fcd4:	beq	2fdf8 <flatcc_emitter@@Base+0x2bc>
   2fcd8:	ldr	r0, [sp]
   2fcdc:	ldr	r0, [r0]
   2fce0:	add	r7, r0, r8
   2fce4:	ldr	r1, [r9]
   2fce8:	b	2fdb0 <flatcc_emitter@@Base+0x274>
   2fcec:	ldr	r5, [r6]
   2fcf0:	cmp	r5, #0
   2fcf4:	beq	2fd1c <flatcc_emitter@@Base+0x1e0>
   2fcf8:	ldr	r0, [r5, #2948]	; 0xb84
   2fcfc:	ldr	r1, [r6, #4]
   2fd00:	cmp	r0, r1
   2fd04:	beq	2fd1c <flatcc_emitter@@Base+0x1e0>
   2fd08:	ldr	r1, [r5, #2952]	; 0xb88
   2fd0c:	mov	r2, r0
   2fd10:	sub	r1, r1, #2944	; 0xb80
   2fd14:	str	r1, [r2, #2952]!	; 0xb88
   2fd18:	b	2fd58 <flatcc_emitter@@Base+0x21c>
   2fd1c:	movw	r0, #2956	; 0xb8c
   2fd20:	bl	14ea8 <malloc@plt>
   2fd24:	cmp	r0, #0
   2fd28:	beq	2fe1c <flatcc_emitter@@Base+0x2e0>
   2fd2c:	ldr	r1, [r6, #28]
   2fd30:	cmp	r5, #0
   2fd34:	add	r1, r1, #2944	; 0xb80
   2fd38:	str	r1, [r6, #28]
   2fd3c:	beq	2fd80 <flatcc_emitter@@Base+0x244>
   2fd40:	ldr	r1, [r6, #4]
   2fd44:	add	r2, r0, sl
   2fd48:	str	r5, [r0, #2944]	; 0xb80
   2fd4c:	str	r1, [r0, #2948]	; 0xb84
   2fd50:	str	r0, [r5, #2948]	; 0xb84
   2fd54:	str	r0, [r1, #2944]	; 0xb80
   2fd58:	str	r0, [r6]
   2fd5c:	add	r3, r0, #2944	; 0xb80
   2fd60:	mov	r1, #2944	; 0xb80
   2fd64:	str	r3, [r6, #8]
   2fd68:	str	r1, [r6, #12]
   2fd6c:	ldr	r0, [r0, #2944]	; 0xb80
   2fd70:	ldr	r0, [r0, #2952]	; 0xb88
   2fd74:	sub	r0, r0, #2944	; 0xb80
   2fd78:	str	r0, [r2]
   2fd7c:	b	2fdb0 <flatcc_emitter@@Base+0x274>
   2fd80:	add	r2, r0, #1472	; 0x5c0
   2fd84:	mov	r1, #1472	; 0x5c0
   2fd88:	str	r0, [r6]
   2fd8c:	stmib	r6, {r0, r2}
   2fd90:	str	r1, [r6, #12]
   2fd94:	str	r2, [r6, #16]
   2fd98:	movw	r2, #64064	; 0xfa40
   2fd9c:	str	r1, [r6, #20]
   2fda0:	str	r0, [r0, #2944]	; 0xb80
   2fda4:	str	r0, [r0, #2948]	; 0xb84
   2fda8:	movt	r2, #65535	; 0xffff
   2fdac:	str	r2, [r0, #2952]	; 0xb88
   2fdb0:	cmp	r8, r1
   2fdb4:	bls	2fdc8 <flatcc_emitter@@Base+0x28c>
   2fdb8:	cmp	r1, #0
   2fdbc:	mov	r5, r1
   2fdc0:	beq	2fcec <flatcc_emitter@@Base+0x1b0>
   2fdc4:	b	2fdcc <flatcc_emitter@@Base+0x290>
   2fdc8:	mov	r5, r8
   2fdcc:	sub	r0, r1, r5
   2fdd0:	sub	r7, r7, r5
   2fdd4:	mov	r2, r5
   2fdd8:	str	r0, [r6, #12]
   2fddc:	mov	r1, r7
   2fde0:	ldr	r0, [r6, #8]
   2fde4:	sub	r0, r0, r5
   2fde8:	str	r0, [r6, #8]
   2fdec:	bl	14e60 <memcpy@plt>
   2fdf0:	subs	r8, r8, r5
   2fdf4:	bne	2fce4 <flatcc_emitter@@Base+0x1a8>
   2fdf8:	ldr	r0, [sp]
   2fdfc:	subs	r4, r4, #1
   2fe00:	bne	2fcc4 <flatcc_emitter@@Base+0x188>
   2fe04:	mov	r8, #0
   2fe08:	b	2fe64 <flatcc_emitter@@Base+0x328>
   2fe0c:	ldr	r5, [r6, #16]
   2fe10:	add	r2, r5, r1
   2fe14:	str	r2, [r6, #16]
   2fe18:	b	2fe30 <flatcc_emitter@@Base+0x2f4>
   2fe1c:	mvn	r8, #0
   2fe20:	b	2fe64 <flatcc_emitter@@Base+0x328>
   2fe24:	ldr	r2, [r6, #8]
   2fe28:	sub	r5, r2, r1
   2fe2c:	str	r5, [r6, #8]
   2fe30:	sub	r0, r0, r1
   2fe34:	mov	r8, #0
   2fe38:	cmp	r4, #0
   2fe3c:	str	r0, [r9]
   2fe40:	beq	2fe64 <flatcc_emitter@@Base+0x328>
   2fe44:	ldm	r7, {r1, r2}
   2fe48:	mov	r0, r5
   2fe4c:	bl	14e60 <memcpy@plt>
   2fe50:	ldr	r0, [r7, #4]
   2fe54:	add	r7, r7, #8
   2fe58:	subs	r4, r4, #1
   2fe5c:	add	r5, r5, r0
   2fe60:	bne	2fe44 <flatcc_emitter@@Base+0x308>
   2fe64:	mov	r0, r8
   2fe68:	sub	sp, fp, #28
   2fe6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002fe70 <flatcc_emitter_copy_buffer@@Base>:
   2fe70:	push	{r4, r5, r6, sl, fp, lr}
   2fe74:	add	fp, sp, #16
   2fe78:	mov	r3, r2
   2fe7c:	ldr	r2, [r0, #24]
   2fe80:	mov	r5, #0
   2fe84:	cmp	r2, r3
   2fe88:	bhi	2ff24 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2fe8c:	mov	r4, r0
   2fe90:	ldr	r0, [r0]
   2fe94:	cmp	r0, #0
   2fe98:	beq	2ff24 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2fe9c:	mov	r6, r1
   2fea0:	ldr	r1, [r4, #4]
   2fea4:	cmp	r0, r1
   2fea8:	beq	2ff14 <flatcc_emitter_copy_buffer@@Base+0xa4>
   2feac:	ldr	r0, [r4, #12]
   2feb0:	ldr	r1, [r4, #8]
   2feb4:	rsb	r5, r0, #2944	; 0xb80
   2feb8:	mov	r0, r6
   2febc:	mov	r2, r5
   2fec0:	bl	14e60 <memcpy@plt>
   2fec4:	ldm	r4, {r0, r1}
   2fec8:	add	r5, r6, r5
   2fecc:	ldr	r6, [r0, #2944]	; 0xb80
   2fed0:	cmp	r6, r1
   2fed4:	beq	2fefc <flatcc_emitter_copy_buffer@@Base+0x8c>
   2fed8:	mov	r0, r5
   2fedc:	mov	r1, r6
   2fee0:	mov	r2, #2944	; 0xb80
   2fee4:	bl	14e60 <memcpy@plt>
   2fee8:	ldr	r6, [r6, #2944]	; 0xb80
   2feec:	ldr	r0, [r4, #4]
   2fef0:	add	r5, r5, #2944	; 0xb80
   2fef4:	cmp	r6, r0
   2fef8:	bne	2fed8 <flatcc_emitter_copy_buffer@@Base+0x68>
   2fefc:	ldr	r0, [r4, #20]
   2ff00:	mov	r1, r6
   2ff04:	rsb	r2, r0, #2944	; 0xb80
   2ff08:	mov	r0, r5
   2ff0c:	bl	14e60 <memcpy@plt>
   2ff10:	b	2ff24 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2ff14:	ldr	r1, [r4, #8]
   2ff18:	mov	r0, r6
   2ff1c:	bl	14e60 <memcpy@plt>
   2ff20:	mov	r5, r6
   2ff24:	mov	r0, r5
   2ff28:	pop	{r4, r5, r6, sl, fp, pc}

0002ff2c <flatcc_verify_error_string@@Base>:
   2ff2c:	cmp	r0, #36	; 0x24
   2ff30:	movwhi	r0, #23114	; 0x5a4a
   2ff34:	movthi	r0, #4
   2ff38:	bxhi	lr
   2ff3c:	movw	r1, #23136	; 0x5a60
   2ff40:	movt	r1, #4
   2ff44:	ldr	r0, [r1, r0, lsl #2]
   2ff48:	bx	lr

0002ff4c <flatcc_verify_field@@Base>:
   2ff4c:	b	2ff50 <flatcc_verify_field@@Base+0x4>
   2ff50:	push	{r4, sl, fp, lr}
   2ff54:	add	fp, sp, #8
   2ff58:	ldrh	r4, [r0, #22]
   2ff5c:	mov	ip, #4
   2ff60:	mov	lr, #0
   2ff64:	add	r1, ip, r1, lsl #1
   2ff68:	uxth	ip, r1
   2ff6c:	cmp	ip, r4
   2ff70:	bcs	2ff9c <flatcc_verify_field@@Base+0x50>
   2ff74:	ldr	r4, [r0, #12]
   2ff78:	uxtah	r1, r4, r1
   2ff7c:	ldrh	ip, [r1]
   2ff80:	cmp	ip, #0
   2ff84:	beq	2ff9c <flatcc_verify_field@@Base+0x50>
   2ff88:	add	r1, ip, r2
   2ff8c:	ldrh	r2, [r0, #20]
   2ff90:	mov	lr, #13
   2ff94:	cmp	r1, r2
   2ff98:	bls	2ffa4 <flatcc_verify_field@@Base+0x58>
   2ff9c:	mov	r0, lr
   2ffa0:	pop	{r4, sl, fp, pc}
   2ffa4:	ldr	r1, [r0]
   2ffa8:	ldr	r0, [r0, #16]
   2ffac:	add	r1, r1, ip
   2ffb0:	add	r0, r1, r0
   2ffb4:	sub	r1, r3, #1
   2ffb8:	ands	r0, r0, r1
   2ffbc:	movwne	r0, #12
   2ffc0:	pop	{r4, sl, fp, pc}

0002ffc4 <flatcc_verify_string_field@@Base>:
   2ffc4:	push	{r4, sl, fp, lr}
   2ffc8:	add	fp, sp, #8
   2ffcc:	sub	sp, sp, #8
   2ffd0:	add	r3, sp, #4
   2ffd4:	mov	r4, r0
   2ffd8:	bl	3004c <flatcc_verify_string_field@@Base+0x88>
   2ffdc:	cmp	r0, #0
   2ffe0:	bne	30044 <flatcc_verify_string_field@@Base+0x80>
   2ffe4:	ldr	r3, [sp, #4]
   2ffe8:	cmp	r3, #0
   2ffec:	beq	30044 <flatcc_verify_string_field@@Base+0x80>
   2fff0:	ldr	r1, [r4]
   2fff4:	ldr	r0, [r1, r3]
   2fff8:	add	r2, r0, r3
   2fffc:	mov	r0, #17
   30000:	tst	r2, #3
   30004:	bne	30044 <flatcc_verify_string_field@@Base+0x80>
   30008:	cmp	r2, r3
   3000c:	bls	30044 <flatcc_verify_string_field@@Base+0x80>
   30010:	ldr	r4, [r4, #4]
   30014:	add	r3, r2, #4
   30018:	cmp	r4, r3
   3001c:	ldrcs	r2, [r1, r2]
   30020:	subcs	ip, r4, r3
   30024:	movcs	r0, #8
   30028:	addcs	r4, r2, #1
   3002c:	cmpcs	ip, r4
   30030:	bcc	30044 <flatcc_verify_string_field@@Base+0x80>
   30034:	add	r0, r1, r3
   30038:	ldrb	r0, [r0, r2]
   3003c:	cmp	r0, #0
   30040:	movwne	r0, #7
   30044:	sub	sp, fp, #8
   30048:	pop	{r4, sl, fp, pc}
   3004c:	push	{fp, lr}
   30050:	mov	fp, sp
   30054:	mov	ip, r2
   30058:	mov	r2, #4
   3005c:	add	r1, r2, r1, lsl #1
   30060:	ldrh	r2, [r0, #22]
   30064:	uxth	lr, r1
   30068:	cmp	lr, r2
   3006c:	bcs	300b4 <flatcc_verify_string_field@@Base+0xf0>
   30070:	ldr	r2, [r0, #12]
   30074:	uxtah	r1, r2, r1
   30078:	ldrh	r1, [r1]
   3007c:	cmp	r1, #0
   30080:	beq	300b4 <flatcc_verify_string_field@@Base+0xf0>
   30084:	ldrh	lr, [r0, #20]
   30088:	add	r2, r1, #4
   3008c:	mov	ip, #13
   30090:	cmp	r2, lr
   30094:	bhi	300c4 <flatcc_verify_string_field@@Base+0x100>
   30098:	ldr	r0, [r0, #16]
   3009c:	mov	ip, #12
   300a0:	add	r0, r0, r1
   300a4:	tst	r0, #3
   300a8:	moveq	ip, #0
   300ac:	streq	r0, [r3]
   300b0:	b	300c4 <flatcc_verify_string_field@@Base+0x100>
   300b4:	cmp	ip, #0
   300b8:	mov	r0, #0
   300bc:	str	r0, [r3]
   300c0:	movwne	ip, #4
   300c4:	mov	r0, ip
   300c8:	pop	{fp, pc}

000300cc <flatcc_verify_vector_field@@Base>:
   300cc:	push	{r4, r5, r6, sl, fp, lr}
   300d0:	add	fp, sp, #16
   300d4:	sub	sp, sp, #8
   300d8:	mov	r6, r3
   300dc:	add	r3, sp, #4
   300e0:	mov	r5, r0
   300e4:	bl	3004c <flatcc_verify_string_field@@Base+0x88>
   300e8:	cmp	r0, #0
   300ec:	bne	3016c <flatcc_verify_vector_field@@Base+0xa0>
   300f0:	ldr	r4, [sp, #4]
   300f4:	cmp	r4, #0
   300f8:	beq	3016c <flatcc_verify_vector_field@@Base+0xa0>
   300fc:	ldr	r3, [r5]
   30100:	ldr	r2, [fp, #8]
   30104:	ldr	r0, [r3, r4]
   30108:	cmp	r2, #4
   3010c:	movls	r2, #4
   30110:	add	r1, r0, r4
   30114:	mov	r0, #16
   30118:	cmp	r1, r4
   3011c:	bls	3016c <flatcc_verify_vector_field@@Base+0xa0>
   30120:	ldr	r5, [r5, #4]
   30124:	add	r4, r1, #4
   30128:	cmp	r4, r5
   3012c:	bhi	3016c <flatcc_verify_vector_field@@Base+0xa0>
   30130:	sub	r2, r2, #1
   30134:	orr	r2, r2, #3
   30138:	tst	r4, r2
   3013c:	bne	3016c <flatcc_verify_vector_field@@Base+0xa0>
   30140:	ldr	r4, [fp, #12]
   30144:	ldr	r2, [r3, r1]
   30148:	mov	r0, #25
   3014c:	cmp	r2, r4
   30150:	bhi	3016c <flatcc_verify_vector_field@@Base+0xa0>
   30154:	sub	r0, r5, #4
   30158:	mul	r2, r2, r6
   3015c:	sub	r1, r0, r1
   30160:	mov	r0, #0
   30164:	cmp	r1, r2
   30168:	movwcc	r0, #26
   3016c:	sub	sp, fp, #16
   30170:	pop	{r4, r5, r6, sl, fp, pc}

00030174 <flatcc_verify_string_vector_field@@Base>:
   30174:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30178:	add	fp, sp, #24
   3017c:	sub	sp, sp, #8
   30180:	add	r3, sp, #4
   30184:	mov	r4, r0
   30188:	bl	3004c <flatcc_verify_string_field@@Base+0x88>
   3018c:	cmp	r0, #0
   30190:	bne	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   30194:	ldr	r1, [sp, #4]
   30198:	cmp	r1, #0
   3019c:	beq	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   301a0:	ldr	r3, [r4]
   301a4:	mov	r0, #16
   301a8:	ldr	r2, [r3, r1]
   301ac:	add	r5, r2, r1
   301b0:	cmp	r5, r1
   301b4:	bls	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   301b8:	ldr	lr, [r4, #4]
   301bc:	add	r7, r5, #4
   301c0:	cmp	r7, lr
   301c4:	bhi	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   301c8:	ands	r7, r7, #3
   301cc:	bne	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   301d0:	ldr	ip, [r3, r5]
   301d4:	mov	r0, #25
   301d8:	cmn	ip, #-1073741823	; 0xc0000001
   301dc:	bhi	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   301e0:	sub	r0, lr, #4
   301e4:	sub	r4, r0, r5
   301e8:	mov	r0, #26
   301ec:	cmp	r4, ip, lsl #2
   301f0:	bcc	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   301f4:	cmp	ip, #0
   301f8:	beq	302a0 <flatcc_verify_string_vector_field@@Base+0x12c>
   301fc:	sub	r0, lr, #8
   30200:	mov	r9, #0
   30204:	sub	r0, r0, r2
   30208:	sub	r8, r0, r1
   3020c:	add	r0, r3, r2
   30210:	rsb	r3, r0, #0
   30214:	sub	r0, r1, r3
   30218:	add	r4, r1, r2
   3021c:	ldr	r6, [r0, #4]
   30220:	mov	r0, #17
   30224:	add	r7, r4, r6
   30228:	add	r5, r7, #4
   3022c:	tst	r5, #3
   30230:	bne	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   30234:	add	r4, r4, #4
   30238:	cmp	r5, r4
   3023c:	bls	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   30240:	add	r4, r7, #8
   30244:	cmp	lr, r4
   30248:	bcc	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   3024c:	add	r0, r1, r6
   30250:	sub	r4, r8, r6
   30254:	sub	r0, r0, r3
   30258:	ldr	r0, [r0, #4]
   3025c:	add	r5, r0, #1
   30260:	cmp	r4, r5
   30264:	bcc	302a8 <flatcc_verify_string_vector_field@@Base+0x134>
   30268:	add	r0, r6, r0
   3026c:	add	r0, r1, r0
   30270:	sub	r0, r0, r3
   30274:	ldrb	r0, [r0, #8]
   30278:	cmp	r0, #0
   3027c:	bne	302b0 <flatcc_verify_string_vector_field@@Base+0x13c>
   30280:	add	r9, r9, #1
   30284:	sub	r8, r8, #4
   30288:	add	r2, r2, #4
   3028c:	sub	r3, r3, #4
   30290:	mov	r0, #0
   30294:	cmp	r9, ip
   30298:	bcc	30214 <flatcc_verify_string_vector_field@@Base+0xa0>
   3029c:	b	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   302a0:	mov	r0, #0
   302a4:	b	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   302a8:	mov	r0, #8
   302ac:	b	302b4 <flatcc_verify_string_vector_field@@Base+0x140>
   302b0:	mov	r0, #7
   302b4:	sub	sp, fp, #24
   302b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000302bc <flatcc_verify_table_field@@Base>:
   302bc:	push	{r4, r5, r6, sl, fp, lr}
   302c0:	add	fp, sp, #16
   302c4:	sub	sp, sp, #32
   302c8:	mov	r6, r3
   302cc:	add	r3, sp, #4
   302d0:	mov	r5, r0
   302d4:	bl	3004c <flatcc_verify_string_field@@Base+0x88>
   302d8:	cmp	r0, #0
   302dc:	bne	303b8 <flatcc_verify_table_field@@Base+0xfc>
   302e0:	ldr	r4, [sp, #4]
   302e4:	cmp	r4, #0
   302e8:	beq	303b8 <flatcc_verify_table_field@@Base+0xfc>
   302ec:	ldr	r2, [r5]
   302f0:	ldmib	r5, {r1, r3}
   302f4:	ldr	r0, [r2, r4]
   302f8:	subs	r3, r3, #1
   302fc:	str	r3, [sp, #16]
   30300:	beq	303b4 <flatcc_verify_table_field@@Base+0xf8>
   30304:	add	r3, r0, r4
   30308:	mov	r0, #15
   3030c:	tst	r3, #3
   30310:	bne	303b8 <flatcc_verify_table_field@@Base+0xfc>
   30314:	cmp	r3, r4
   30318:	bls	303b8 <flatcc_verify_table_field@@Base+0xfc>
   3031c:	add	r5, r3, #4
   30320:	cmp	r5, r1
   30324:	bhi	303b8 <flatcc_verify_table_field@@Base+0xfc>
   30328:	str	r3, [sp, #24]
   3032c:	ldr	r0, [r2, r3]
   30330:	sub	r5, r3, r0
   30334:	mov	r0, #29
   30338:	tst	r5, #-2147483647	; 0x80000001
   3033c:	bne	303b8 <flatcc_verify_table_field@@Base+0xfc>
   30340:	add	lr, r5, #2
   30344:	mov	r0, #27
   30348:	cmp	lr, r1
   3034c:	bhi	303b8 <flatcc_verify_table_field@@Base+0xfc>
   30350:	mov	ip, r2
   30354:	mov	r0, #30
   30358:	ldrh	r4, [ip, r5]!
   3035c:	tst	r4, #1
   30360:	strh	r4, [sp, #30]
   30364:	bne	303b8 <flatcc_verify_table_field@@Base+0xfc>
   30368:	add	r5, r5, r4
   3036c:	cmp	r5, r1
   30370:	bhi	303b8 <flatcc_verify_table_field@@Base+0xfc>
   30374:	mov	r0, #28
   30378:	cmp	r4, #4
   3037c:	bcc	303b8 <flatcc_verify_table_field@@Base+0xfc>
   30380:	add	r0, r2, lr
   30384:	sub	r3, r1, r3
   30388:	ldrh	r5, [r0]
   3038c:	mov	r0, #20
   30390:	cmp	r3, r5
   30394:	strh	r5, [sp, #28]
   30398:	bcc	303b8 <flatcc_verify_table_field@@Base+0xfc>
   3039c:	add	r0, sp, #8
   303a0:	str	r2, [sp, #8]
   303a4:	str	ip, [sp, #20]
   303a8:	str	r1, [sp, #12]
   303ac:	blx	r6
   303b0:	b	303b8 <flatcc_verify_table_field@@Base+0xfc>
   303b4:	mov	r0, #3
   303b8:	sub	sp, fp, #16
   303bc:	pop	{r4, r5, r6, sl, fp, pc}

000303c0 <flatcc_verify_table_vector_field@@Base>:
   303c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   303c4:	add	fp, sp, #28
   303c8:	sub	sp, sp, #36	; 0x24
   303cc:	mov	r9, r3
   303d0:	add	r3, sp, #8
   303d4:	mov	r5, r0
   303d8:	bl	3004c <flatcc_verify_string_field@@Base+0x88>
   303dc:	cmp	r0, #0
   303e0:	bne	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   303e4:	ldr	r1, [sp, #8]
   303e8:	cmp	r1, #0
   303ec:	beq	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   303f0:	ldr	r2, [r5, #8]
   303f4:	cmp	r2, #1
   303f8:	blt	3061c <flatcc_verify_table_vector_field@@Base+0x25c>
   303fc:	ldr	r6, [r5]
   30400:	mov	r0, #16
   30404:	ldr	r3, [r6, r1]
   30408:	add	r7, r3, r1
   3040c:	cmp	r7, r1
   30410:	bls	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30414:	ldr	lr, [r5, #4]
   30418:	add	r5, r7, #4
   3041c:	cmp	r5, lr
   30420:	bhi	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30424:	ands	r4, r5, #3
   30428:	bne	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   3042c:	ldr	r4, [r6, r7]
   30430:	mov	r0, #25
   30434:	cmn	r4, #-1073741823	; 0xc0000001
   30438:	bhi	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   3043c:	sub	ip, lr, #4
   30440:	mov	r0, #26
   30444:	sub	r7, ip, r7
   30448:	cmp	r7, r4, lsl #2
   3044c:	bcc	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30450:	cmp	r4, #0
   30454:	beq	3060c <flatcc_verify_table_vector_field@@Base+0x24c>
   30458:	sub	r0, ip, r3
   3045c:	mov	sl, #0
   30460:	str	r4, [sp]
   30464:	sub	r8, r0, r1
   30468:	sub	r0, r2, #2
   3046c:	str	r0, [sp, #4]
   30470:	ldr	r1, [sp, #4]
   30474:	ldr	r0, [r6, r5]
   30478:	cmp	r1, #0
   3047c:	str	r1, [sp, #20]
   30480:	beq	30614 <flatcc_verify_table_vector_field@@Base+0x254>
   30484:	add	r1, r5, r0
   30488:	add	ip, r1, #4
   3048c:	tst	r1, #3
   30490:	bne	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   30494:	cmp	r1, r5
   30498:	bls	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   3049c:	cmp	ip, lr
   304a0:	bhi	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   304a4:	str	r1, [sp, #28]
   304a8:	add	r2, r6, r0
   304ac:	ldr	r2, [r2, r5]
   304b0:	sub	r7, r0, r2
   304b4:	add	r3, r5, r7
   304b8:	tst	r3, #-2147483647	; 0x80000001
   304bc:	bne	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   304c0:	add	r4, r3, #2
   304c4:	cmp	r4, lr
   304c8:	bhi	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   304cc:	add	r7, r6, r7
   304d0:	add	r7, r7, r5
   304d4:	ldrh	r7, [r7]
   304d8:	cmp	r7, #4
   304dc:	strh	r7, [sp, #34]	; 0x22
   304e0:	bcc	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   304e4:	ands	r4, r7, #1
   304e8:	bne	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   304ec:	add	r7, r0, r7
   304f0:	sub	r2, r7, r2
   304f4:	add	r2, r5, r2
   304f8:	cmp	r2, lr
   304fc:	bhi	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   30500:	add	r2, r6, r3
   30504:	sub	r0, r8, r0
   30508:	ldrh	r3, [r2, #2]
   3050c:	cmp	r0, r3
   30510:	strh	r3, [sp, #32]
   30514:	bcc	3055c <flatcc_verify_table_vector_field@@Base+0x19c>
   30518:	add	r0, sp, #12
   3051c:	str	r6, [sp, #12]
   30520:	str	r2, [sp, #24]
   30524:	mov	r4, lr
   30528:	str	lr, [sp, #16]
   3052c:	blx	r9
   30530:	cmp	r0, #0
   30534:	bne	30628 <flatcc_verify_table_vector_field@@Base+0x268>
   30538:	ldr	r1, [sp]
   3053c:	add	sl, sl, #1
   30540:	sub	r8, r8, #4
   30544:	add	r5, r5, #4
   30548:	mov	r0, #0
   3054c:	mov	lr, r4
   30550:	cmp	sl, r1
   30554:	bcc	30470 <flatcc_verify_table_vector_field@@Base+0xb0>
   30558:	b	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   3055c:	ldr	r0, [sp, #4]
   30560:	str	r0, [sp, #20]
   30564:	mov	r0, #15
   30568:	tst	r1, #3
   3056c:	bne	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30570:	cmp	r1, r5
   30574:	bls	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30578:	cmp	ip, lr
   3057c:	bhi	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30580:	str	r1, [sp, #28]
   30584:	ldr	r0, [r6, r1]
   30588:	sub	r7, r1, r0
   3058c:	mov	r0, #29
   30590:	tst	r7, #-2147483647	; 0x80000001
   30594:	bne	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30598:	add	r3, r7, #2
   3059c:	mov	r0, #27
   305a0:	cmp	r3, lr
   305a4:	bhi	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   305a8:	mov	r2, r6
   305ac:	mov	r0, #30
   305b0:	ldrh	r5, [r2, r7]!
   305b4:	tst	r5, #1
   305b8:	strh	r5, [sp, #34]	; 0x22
   305bc:	bne	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   305c0:	add	r7, r7, r5
   305c4:	cmp	r7, lr
   305c8:	bhi	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   305cc:	mov	r0, #28
   305d0:	cmp	r5, #4
   305d4:	bcc	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   305d8:	add	r0, r6, r3
   305dc:	sub	r1, lr, r1
   305e0:	ldrh	r3, [r0]
   305e4:	mov	r0, #20
   305e8:	cmp	r1, r3
   305ec:	strh	r3, [sp, #32]
   305f0:	bcc	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   305f4:	add	r0, sp, #12
   305f8:	str	r6, [sp, #12]
   305fc:	str	r2, [sp, #24]
   30600:	str	lr, [sp, #16]
   30604:	blx	r9
   30608:	b	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   3060c:	mov	r0, #0
   30610:	b	30620 <flatcc_verify_table_vector_field@@Base+0x260>
   30614:	mov	r0, #0
   30618:	str	r0, [sp, #20]
   3061c:	mov	r0, #3
   30620:	sub	sp, fp, #28
   30624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30628:	ldr	r0, [r6, r5]
   3062c:	ldr	r1, [sp, #4]
   30630:	mov	lr, r4
   30634:	str	r1, [sp, #20]
   30638:	add	r1, r0, r5
   3063c:	add	ip, r1, #4
   30640:	b	30564 <flatcc_verify_table_vector_field@@Base+0x1a4>

00030644 <flatcc_verify_union_table@@Base>:
   30644:	push	{r4, r5, r6, sl, fp, lr}
   30648:	add	fp, sp, #16
   3064c:	sub	sp, sp, #24
   30650:	ldr	r5, [r0, #16]
   30654:	ldr	r3, [r0, #20]
   30658:	ldr	ip, [r0]
   3065c:	ldr	r2, [r0, #4]
   30660:	ldr	r0, [r0, #8]
   30664:	subs	r0, r0, #1
   30668:	str	r0, [sp, #8]
   3066c:	beq	30720 <flatcc_verify_union_table@@Base+0xdc>
   30670:	add	r3, r3, r5
   30674:	mov	r0, #15
   30678:	tst	r3, #3
   3067c:	bne	30724 <flatcc_verify_union_table@@Base+0xe0>
   30680:	cmp	r3, r5
   30684:	bls	30724 <flatcc_verify_union_table@@Base+0xe0>
   30688:	add	r6, r3, #4
   3068c:	cmp	r6, r2
   30690:	bhi	30724 <flatcc_verify_union_table@@Base+0xe0>
   30694:	str	r3, [sp, #16]
   30698:	ldr	r0, [ip, r3]
   3069c:	sub	r5, r3, r0
   306a0:	mov	r0, #29
   306a4:	tst	r5, #-2147483647	; 0x80000001
   306a8:	bne	30724 <flatcc_verify_union_table@@Base+0xe0>
   306ac:	add	r4, r5, #2
   306b0:	mov	r0, #27
   306b4:	cmp	r4, r2
   306b8:	bhi	30724 <flatcc_verify_union_table@@Base+0xe0>
   306bc:	mov	lr, ip
   306c0:	mov	r0, #30
   306c4:	ldrh	r6, [lr, r5]!
   306c8:	tst	r6, #1
   306cc:	strh	r6, [sp, #22]
   306d0:	bne	30724 <flatcc_verify_union_table@@Base+0xe0>
   306d4:	add	r5, r5, r6
   306d8:	cmp	r5, r2
   306dc:	bhi	30724 <flatcc_verify_union_table@@Base+0xe0>
   306e0:	mov	r0, #28
   306e4:	cmp	r6, #4
   306e8:	bcc	30724 <flatcc_verify_union_table@@Base+0xe0>
   306ec:	add	r0, ip, r4
   306f0:	sub	r3, r2, r3
   306f4:	ldrh	r4, [r0]
   306f8:	mov	r0, #20
   306fc:	cmp	r3, r4
   30700:	strh	r4, [sp, #20]
   30704:	bcc	30724 <flatcc_verify_union_table@@Base+0xe0>
   30708:	mov	r0, sp
   3070c:	str	ip, [sp]
   30710:	str	lr, [sp, #12]
   30714:	str	r2, [sp, #4]
   30718:	blx	r1
   3071c:	b	30724 <flatcc_verify_union_table@@Base+0xe0>
   30720:	mov	r0, #3
   30724:	sub	sp, fp, #16
   30728:	pop	{r4, r5, r6, sl, fp, pc}

0003072c <flatcc_verify_union_struct@@Base>:
   3072c:	push	{fp, lr}
   30730:	mov	fp, sp
   30734:	ldr	lr, [r0, #20]
   30738:	mov	r3, r0
   3073c:	mov	r0, #18
   30740:	cmp	lr, #0
   30744:	beq	30780 <flatcc_verify_union_struct@@Base+0x54>
   30748:	ldr	ip, [r3, #4]
   3074c:	ldr	r3, [r3, #16]
   30750:	add	r3, r3, lr
   30754:	cmp	r3, ip
   30758:	bhi	30780 <flatcc_verify_union_struct@@Base+0x54>
   3075c:	adds	r1, r3, r1
   30760:	mov	r0, #10
   30764:	bcs	30780 <flatcc_verify_union_struct@@Base+0x54>
   30768:	mov	r0, #9
   3076c:	cmp	r1, ip
   30770:	pophi	{fp, pc}
   30774:	sub	r0, r2, #1
   30778:	ands	r0, r3, r0
   3077c:	movwne	r0, #11
   30780:	pop	{fp, pc}

00030784 <flatcc_verify_union_string@@Base>:
   30784:	mov	r1, r0
   30788:	ldr	r3, [r0, #16]
   3078c:	ldr	r0, [r0, #20]
   30790:	add	r2, r0, r3
   30794:	mov	r0, #17
   30798:	tst	r2, #3
   3079c:	bne	307f0 <flatcc_verify_union_string@@Base+0x6c>
   307a0:	cmp	r2, r3
   307a4:	bls	307f0 <flatcc_verify_union_string@@Base+0x6c>
   307a8:	ldr	r3, [r1, #4]
   307ac:	add	ip, r2, #4
   307b0:	cmp	r3, ip
   307b4:	bcc	307f0 <flatcc_verify_union_string@@Base+0x6c>
   307b8:	push	{fp, lr}
   307bc:	mov	fp, sp
   307c0:	ldr	r1, [r1]
   307c4:	sub	lr, r3, ip
   307c8:	mov	r0, #8
   307cc:	ldr	r2, [r1, r2]
   307d0:	add	r3, r2, #1
   307d4:	cmp	lr, r3
   307d8:	pop	{fp, lr}
   307dc:	bxcc	lr
   307e0:	add	r0, r1, ip
   307e4:	ldrb	r0, [r0, r2]
   307e8:	cmp	r0, #0
   307ec:	movwne	r0, #7
   307f0:	bx	lr

000307f4 <flatcc_verify_buffer_header@@Base>:
   307f4:	push	{r4, sl, fp, lr}
   307f8:	add	fp, sp, #8
   307fc:	sub	sp, sp, #8
   30800:	mov	r4, r0
   30804:	mov	r0, #5
   30808:	tst	r4, #3
   3080c:	bne	30868 <flatcc_verify_buffer_header@@Base+0x74>
   30810:	mov	r0, #6
   30814:	cmn	r1, #9
   30818:	bhi	30868 <flatcc_verify_buffer_header@@Base+0x74>
   3081c:	mov	r0, #1
   30820:	cmp	r1, #8
   30824:	bcc	30868 <flatcc_verify_buffer_header@@Base+0x74>
   30828:	cmp	r2, #0
   3082c:	beq	30864 <flatcc_verify_buffer_header@@Base+0x70>
   30830:	mov	r0, #0
   30834:	mov	r1, r2
   30838:	mov	r2, #4
   3083c:	str	r0, [sp, #4]
   30840:	add	r0, sp, #4
   30844:	bl	14efc <strncpy@plt>
   30848:	ldr	r1, [sp, #4]
   3084c:	cmp	r1, #0
   30850:	ldrne	r2, [r4, #4]
   30854:	movne	r0, #2
   30858:	cmpne	r2, r1
   3085c:	moveq	r0, #0
   30860:	b	30868 <flatcc_verify_buffer_header@@Base+0x74>
   30864:	mov	r0, #0
   30868:	sub	sp, fp, #8
   3086c:	pop	{r4, sl, fp, pc}

00030870 <flatcc_verify_typed_buffer_header@@Base>:
   30870:	mov	r3, r0
   30874:	mov	r0, #5
   30878:	tst	r3, #3
   3087c:	bne	308b0 <flatcc_verify_typed_buffer_header@@Base+0x40>
   30880:	mov	r0, #6
   30884:	cmn	r1, #9
   30888:	bhi	308b0 <flatcc_verify_typed_buffer_header@@Base+0x40>
   3088c:	mov	r0, #1
   30890:	cmp	r1, #8
   30894:	bxcc	lr
   30898:	cmp	r2, #0
   3089c:	beq	308b4 <flatcc_verify_typed_buffer_header@@Base+0x44>
   308a0:	ldr	r1, [r3, #4]
   308a4:	mov	r0, #2
   308a8:	cmp	r1, r2
   308ac:	moveq	r0, #0
   308b0:	bx	lr
   308b4:	mov	r0, #0
   308b8:	bx	lr

000308bc <flatcc_verify_struct_as_root@@Base>:
   308bc:	push	{r4, r5, r6, r7, fp, lr}
   308c0:	add	fp, sp, #16
   308c4:	mov	r5, r3
   308c8:	mov	r6, r2
   308cc:	mov	r4, r1
   308d0:	mov	r7, r0
   308d4:	bl	307f4 <flatcc_verify_buffer_header@@Base>
   308d8:	cmp	r0, #0
   308dc:	beq	308f4 <flatcc_verify_struct_as_root@@Base+0x38>
   308e0:	mov	r0, r7
   308e4:	mov	r1, r4
   308e8:	mov	r2, r6
   308ec:	pop	{r4, r5, r6, r7, fp, lr}
   308f0:	b	307f4 <flatcc_verify_buffer_header@@Base>
   308f4:	ldr	r1, [r7]
   308f8:	mov	r0, #18
   308fc:	sub	r2, r1, #1
   30900:	cmp	r2, r4
   30904:	bcs	30930 <flatcc_verify_struct_as_root@@Base+0x74>
   30908:	adds	r2, r1, r5
   3090c:	mov	r0, #10
   30910:	bcs	30930 <flatcc_verify_struct_as_root@@Base+0x74>
   30914:	mov	r0, #9
   30918:	cmp	r2, r4
   3091c:	pophi	{r4, r5, r6, r7, fp, pc}
   30920:	ldr	r0, [fp, #8]
   30924:	sub	r0, r0, #1
   30928:	ands	r0, r1, r0
   3092c:	movwne	r0, #11
   30930:	pop	{r4, r5, r6, r7, fp, pc}

00030934 <flatcc_verify_struct_as_typed_root@@Base>:
   30934:	push	{fp, lr}
   30938:	mov	fp, sp
   3093c:	mov	ip, r0
   30940:	mov	r0, #5
   30944:	tst	ip, #3
   30948:	bne	309b8 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   3094c:	mov	r0, #6
   30950:	cmn	r1, #9
   30954:	bhi	309b8 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   30958:	mov	r0, #1
   3095c:	cmp	r1, #8
   30960:	bcc	309b8 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   30964:	cmp	r2, #0
   30968:	beq	3097c <flatcc_verify_struct_as_typed_root@@Base+0x48>
   3096c:	ldr	lr, [ip, #4]
   30970:	mov	r0, #2
   30974:	cmp	lr, r2
   30978:	bne	309b8 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   3097c:	ldr	ip, [ip]
   30980:	mov	r0, #18
   30984:	sub	r2, ip, #1
   30988:	cmp	r2, r1
   3098c:	bcs	309b8 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   30990:	adds	r3, ip, r3
   30994:	mov	r0, #10
   30998:	bcs	309b8 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   3099c:	mov	r0, #9
   309a0:	cmp	r3, r1
   309a4:	pophi	{fp, pc}
   309a8:	ldr	r0, [fp, #8]
   309ac:	sub	r0, r0, #1
   309b0:	ands	r0, ip, r0
   309b4:	movwne	r0, #11
   309b8:	pop	{fp, pc}

000309bc <flatcc_verify_table_as_root@@Base>:
   309bc:	push	{r4, r5, r6, r7, fp, lr}
   309c0:	add	fp, sp, #16
   309c4:	sub	sp, sp, #24
   309c8:	mov	r4, r3
   309cc:	mov	r7, r2
   309d0:	mov	r5, r1
   309d4:	mov	r6, r0
   309d8:	bl	307f4 <flatcc_verify_buffer_header@@Base>
   309dc:	cmp	r0, #0
   309e0:	beq	309fc <flatcc_verify_table_as_root@@Base+0x40>
   309e4:	mov	r0, r6
   309e8:	mov	r1, r5
   309ec:	mov	r2, r7
   309f0:	sub	sp, fp, #16
   309f4:	pop	{r4, r5, r6, r7, fp, lr}
   309f8:	b	307f4 <flatcc_verify_buffer_header@@Base>
   309fc:	ldr	r1, [r6]
   30a00:	mov	r0, #99	; 0x63
   30a04:	str	r0, [sp, #8]
   30a08:	mov	r0, #15
   30a0c:	tst	r1, #3
   30a10:	bne	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a14:	cmp	r1, #0
   30a18:	beq	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a1c:	add	r2, r1, #4
   30a20:	cmp	r2, r5
   30a24:	bhi	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a28:	str	r1, [sp, #16]
   30a2c:	ldr	r0, [r6, r1]
   30a30:	sub	r7, r1, r0
   30a34:	mov	r0, #29
   30a38:	tst	r7, #-2147483647	; 0x80000001
   30a3c:	bne	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a40:	add	r3, r7, #2
   30a44:	mov	r0, #27
   30a48:	cmp	r3, r5
   30a4c:	bhi	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a50:	mov	ip, r6
   30a54:	mov	r0, #30
   30a58:	ldrh	r2, [ip, r7]!
   30a5c:	tst	r2, #1
   30a60:	strh	r2, [sp, #22]
   30a64:	bne	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a68:	add	r7, r7, r2
   30a6c:	cmp	r7, r5
   30a70:	bhi	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a74:	mov	r0, #28
   30a78:	cmp	r2, #4
   30a7c:	bcc	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a80:	add	r0, r6, r3
   30a84:	sub	r1, r5, r1
   30a88:	ldrh	r2, [r0]
   30a8c:	mov	r0, #20
   30a90:	cmp	r1, r2
   30a94:	strh	r2, [sp, #20]
   30a98:	bcc	30ab0 <flatcc_verify_table_as_root@@Base+0xf4>
   30a9c:	mov	r0, sp
   30aa0:	str	r6, [sp]
   30aa4:	str	ip, [sp, #12]
   30aa8:	str	r5, [sp, #4]
   30aac:	blx	r4
   30ab0:	sub	sp, fp, #16
   30ab4:	pop	{r4, r5, r6, r7, fp, pc}

00030ab8 <flatcc_verify_table_as_typed_root@@Base>:
   30ab8:	push	{r4, r5, r6, sl, fp, lr}
   30abc:	add	fp, sp, #16
   30ac0:	sub	sp, sp, #24
   30ac4:	mov	ip, #5
   30ac8:	tst	r0, #3
   30acc:	bne	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30ad0:	mov	ip, #6
   30ad4:	cmn	r1, #9
   30ad8:	bhi	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30adc:	mov	ip, #1
   30ae0:	cmp	r1, #8
   30ae4:	bcc	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30ae8:	cmp	r2, #0
   30aec:	beq	30b00 <flatcc_verify_table_as_typed_root@@Base+0x48>
   30af0:	ldr	r6, [r0, #4]
   30af4:	mov	ip, #2
   30af8:	cmp	r6, r2
   30afc:	bne	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b00:	ldr	r2, [r0]
   30b04:	mov	r6, #99	; 0x63
   30b08:	mov	ip, #15
   30b0c:	str	r6, [sp, #8]
   30b10:	tst	r2, #3
   30b14:	bne	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b18:	cmp	r2, #0
   30b1c:	beq	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b20:	add	r6, r2, #4
   30b24:	cmp	r6, r1
   30b28:	bhi	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b2c:	str	r2, [sp, #16]
   30b30:	mov	ip, #29
   30b34:	ldr	r6, [r0, r2]
   30b38:	sub	r5, r2, r6
   30b3c:	tst	r5, #-2147483647	; 0x80000001
   30b40:	bne	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b44:	add	r4, r5, #2
   30b48:	mov	ip, #27
   30b4c:	cmp	r4, r1
   30b50:	bhi	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b54:	mov	lr, r0
   30b58:	mov	ip, #30
   30b5c:	ldrh	r6, [lr, r5]!
   30b60:	tst	r6, #1
   30b64:	strh	r6, [sp, #22]
   30b68:	bne	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b6c:	add	r5, r5, r6
   30b70:	cmp	r5, r1
   30b74:	bhi	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b78:	mov	ip, #28
   30b7c:	cmp	r6, #4
   30b80:	bcc	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30b84:	add	r6, r0, r4
   30b88:	sub	r2, r1, r2
   30b8c:	mov	ip, #20
   30b90:	ldrh	r4, [r6]
   30b94:	cmp	r2, r4
   30b98:	strh	r4, [sp, #20]
   30b9c:	bcc	30bb4 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30ba0:	str	lr, [sp, #12]
   30ba4:	stm	sp, {r0, r1}
   30ba8:	mov	r0, sp
   30bac:	blx	r3
   30bb0:	mov	ip, r0
   30bb4:	mov	r0, ip
   30bb8:	sub	sp, fp, #16
   30bbc:	pop	{r4, r5, r6, sl, fp, pc}

00030bc0 <flatcc_verify_struct_as_nested_root@@Base>:
   30bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30bc4:	add	fp, sp, #28
   30bc8:	sub	sp, sp, #12
   30bcc:	ldr	r9, [fp, #12]
   30bd0:	mov	r8, r3
   30bd4:	mvn	sl, #0
   30bd8:	mov	r5, #1
   30bdc:	mov	r4, r2
   30be0:	mov	r7, r1
   30be4:	mov	r6, r0
   30be8:	stm	sp, {r5, sl}
   30bec:	mov	r3, r9
   30bf0:	bl	300cc <flatcc_verify_vector_field@@Base>
   30bf4:	cmp	r0, #0
   30bf8:	beq	30c1c <flatcc_verify_struct_as_nested_root@@Base+0x5c>
   30bfc:	mov	r0, r6
   30c00:	mov	r1, r7
   30c04:	mov	r2, r4
   30c08:	mov	r3, r9
   30c0c:	stm	sp, {r5, sl}
   30c10:	bl	300cc <flatcc_verify_vector_field@@Base>
   30c14:	sub	sp, fp, #28
   30c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30c1c:	ldrh	r2, [r6, #22]
   30c20:	mov	r0, #4
   30c24:	add	r0, r0, r7, lsl #1
   30c28:	uxth	r1, r0
   30c2c:	cmp	r1, r2
   30c30:	bcs	30c58 <flatcc_verify_struct_as_nested_root@@Base+0x98>
   30c34:	ldr	r1, [r6, #12]
   30c38:	uxtah	r0, r1, r0
   30c3c:	ldrh	r0, [r0]
   30c40:	cmp	r0, #0
   30c44:	ldrne	r1, [r6]
   30c48:	ldrne	r2, [r6, #16]
   30c4c:	addne	r1, r1, r2
   30c50:	addsne	r0, r1, r0
   30c54:	bne	30c64 <flatcc_verify_struct_as_nested_root@@Base+0xa4>
   30c58:	mov	r0, #0
   30c5c:	sub	sp, fp, #28
   30c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30c64:	ldr	r2, [r0]
   30c68:	ldr	r3, [fp, #8]
   30c6c:	ldr	r1, [r2, r0]!
   30c70:	str	r9, [sp]
   30c74:	add	r0, r2, #4
   30c78:	mov	r2, r8
   30c7c:	bl	308bc <flatcc_verify_struct_as_root@@Base>
   30c80:	sub	sp, fp, #28
   30c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00030c88 <flatcc_verify_table_as_nested_root@@Base>:
   30c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30c8c:	add	fp, sp, #28
   30c90:	sub	sp, sp, #36	; 0x24
   30c94:	mvn	r9, #0
   30c98:	mov	sl, #1
   30c9c:	mov	r8, r3
   30ca0:	mov	r5, r2
   30ca4:	mov	r4, r1
   30ca8:	mov	r6, r0
   30cac:	str	sl, [sp]
   30cb0:	str	r9, [sp, #4]
   30cb4:	ldr	r7, [fp, #8]
   30cb8:	mov	r3, r7
   30cbc:	bl	300cc <flatcc_verify_vector_field@@Base>
   30cc0:	cmp	r0, #0
   30cc4:	beq	30ce8 <flatcc_verify_table_as_nested_root@@Base+0x60>
   30cc8:	mov	r0, r6
   30ccc:	mov	r1, r4
   30cd0:	mov	r2, r5
   30cd4:	mov	r3, r7
   30cd8:	str	sl, [sp]
   30cdc:	str	r9, [sp, #4]
   30ce0:	bl	300cc <flatcc_verify_vector_field@@Base>
   30ce4:	b	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30ce8:	ldrh	r3, [r6, #22]
   30cec:	mov	r0, #4
   30cf0:	add	r1, r0, r4, lsl #1
   30cf4:	mov	r0, #0
   30cf8:	uxth	r2, r1
   30cfc:	cmp	r2, r3
   30d00:	bcs	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30d04:	ldr	r2, [r6, #12]
   30d08:	uxtah	r1, r2, r1
   30d0c:	ldrh	r1, [r1]
   30d10:	cmp	r1, #0
   30d14:	ldrne	r2, [r6]
   30d18:	ldrne	r3, [r6, #16]
   30d1c:	addne	r2, r2, r3
   30d20:	addsne	r1, r2, r1
   30d24:	bne	30d30 <flatcc_verify_table_as_nested_root@@Base+0xa8>
   30d28:	sub	sp, fp, #28
   30d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30d30:	ldr	r0, [r1]
   30d34:	ldr	r7, [fp, #12]
   30d38:	mov	r2, r8
   30d3c:	ldr	r4, [r0, r1]!
   30d40:	add	r5, r0, #4
   30d44:	mov	r1, r4
   30d48:	mov	r0, r5
   30d4c:	bl	307f4 <flatcc_verify_buffer_header@@Base>
   30d50:	cmp	r0, #0
   30d54:	beq	30d70 <flatcc_verify_table_as_nested_root@@Base+0xe8>
   30d58:	mov	r0, r5
   30d5c:	mov	r1, r4
   30d60:	mov	r2, r8
   30d64:	sub	sp, fp, #28
   30d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d6c:	b	307f4 <flatcc_verify_buffer_header@@Base>
   30d70:	ldr	r0, [r6, #8]
   30d74:	ldr	r1, [r5]
   30d78:	subs	r0, r0, #1
   30d7c:	str	r0, [sp, #20]
   30d80:	beq	30e30 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30d84:	mov	r0, #15
   30d88:	tst	r1, #3
   30d8c:	bne	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30d90:	cmp	r1, #0
   30d94:	beq	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30d98:	add	r2, r1, #4
   30d9c:	cmp	r2, r4
   30da0:	bhi	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30da4:	str	r1, [sp, #28]
   30da8:	ldr	r0, [r5, r1]
   30dac:	sub	r6, r1, r0
   30db0:	mov	r0, #29
   30db4:	tst	r6, #-2147483647	; 0x80000001
   30db8:	bne	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30dbc:	add	r3, r6, #2
   30dc0:	mov	r0, #27
   30dc4:	cmp	r3, r4
   30dc8:	bhi	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30dcc:	mov	ip, r5
   30dd0:	mov	r0, #30
   30dd4:	ldrh	r2, [ip, r6]!
   30dd8:	tst	r2, #1
   30ddc:	strh	r2, [sp, #34]	; 0x22
   30de0:	bne	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30de4:	add	r6, r6, r2
   30de8:	cmp	r6, r4
   30dec:	bhi	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30df0:	mov	r0, #28
   30df4:	cmp	r2, #4
   30df8:	bcc	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30dfc:	add	r0, r5, r3
   30e00:	sub	r1, r4, r1
   30e04:	ldrh	r2, [r0]
   30e08:	mov	r0, #20
   30e0c:	cmp	r1, r2
   30e10:	strh	r2, [sp, #32]
   30e14:	bcc	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30e18:	add	r0, sp, #12
   30e1c:	str	r5, [sp, #12]
   30e20:	str	ip, [sp, #24]
   30e24:	str	r4, [sp, #16]
   30e28:	blx	r7
   30e2c:	b	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>
   30e30:	mov	r0, #3
   30e34:	b	30d28 <flatcc_verify_table_as_nested_root@@Base+0xa0>

00030e38 <flatcc_verify_union_field@@Base>:
   30e38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30e3c:	add	fp, sp, #24
   30e40:	sub	sp, sp, #32
   30e44:	mov	r5, r0
   30e48:	mov	r8, r3
   30e4c:	mov	r0, #2
   30e50:	lsl	r4, r1, #1
   30e54:	ldrh	r3, [r5, #22]
   30e58:	add	r0, r0, r1, lsl #1
   30e5c:	uxth	r7, r0
   30e60:	cmp	r7, r3
   30e64:	bcs	30f1c <flatcc_verify_union_field@@Base+0xe4>
   30e68:	ldr	r7, [r5, #12]
   30e6c:	uxtah	r0, r7, r0
   30e70:	ldrh	r9, [r0]
   30e74:	cmp	r9, #0
   30e78:	beq	30f1c <flatcc_verify_union_field@@Base+0xe4>
   30e7c:	ldrh	r6, [r5, #20]
   30e80:	mov	r0, #13
   30e84:	cmp	r9, r6
   30e88:	bcs	30f50 <flatcc_verify_union_field@@Base+0x118>
   30e8c:	add	r4, r4, #4
   30e90:	mov	r0, #1
   30e94:	uxth	r6, r4
   30e98:	cmp	r6, r3
   30e9c:	ldr	r3, [r5]
   30ea0:	uxtahcc	r0, r7, r4
   30ea4:	ldr	r7, [r5, #16]
   30ea8:	ldrhcc	r0, [r0]
   30eac:	add	r7, r3, r7
   30eb0:	ldrb	r3, [r7, r9]
   30eb4:	clzcc	r0, r0
   30eb8:	lsrcc	r0, r0, #5
   30ebc:	cmp	r0, #0
   30ec0:	moveq	r0, #24
   30ec4:	cmpeq	r3, #0
   30ec8:	beq	30f50 <flatcc_verify_union_field@@Base+0x118>
   30ecc:	cmp	r3, #0
   30ed0:	beq	30f58 <flatcc_verify_union_field@@Base+0x120>
   30ed4:	add	r3, sp, #28
   30ed8:	mov	r0, r5
   30edc:	bl	3004c <flatcc_verify_string_field@@Base+0x88>
   30ee0:	cmp	r0, #0
   30ee4:	bne	30f50 <flatcc_verify_union_field@@Base+0x118>
   30ee8:	ldr	r1, [sp, #28]
   30eec:	cmp	r1, #0
   30ef0:	beq	30f50 <flatcc_verify_union_field@@Base+0x118>
   30ef4:	ldm	r5, {r0, r2, r3}
   30ef8:	str	r1, [sp, #20]
   30efc:	stmib	sp, {r0, r2, r3}
   30f00:	ldr	r0, [r0, r1]
   30f04:	str	r0, [sp, #24]
   30f08:	ldrb	r0, [r7, r9]
   30f0c:	strb	r0, [sp, #16]
   30f10:	add	r0, sp, #4
   30f14:	blx	r8
   30f18:	b	30f50 <flatcc_verify_union_field@@Base+0x118>
   30f1c:	add	r0, r4, #4
   30f20:	uxth	r1, r0
   30f24:	cmp	r1, r3
   30f28:	bcs	30f44 <flatcc_verify_union_field@@Base+0x10c>
   30f2c:	ldr	r1, [r5, #12]
   30f30:	uxtah	r0, r1, r0
   30f34:	ldrh	r1, [r0]
   30f38:	mov	r0, #23
   30f3c:	cmp	r1, #0
   30f40:	bne	30f50 <flatcc_verify_union_field@@Base+0x118>
   30f44:	cmp	r2, #0
   30f48:	movwne	r2, #21
   30f4c:	mov	r0, r2
   30f50:	sub	sp, fp, #24
   30f54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30f58:	mov	r0, #0
   30f5c:	b	30f50 <flatcc_verify_union_field@@Base+0x118>

00030f60 <flatcc_verify_union_vector_field@@Base>:
   30f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30f64:	add	fp, sp, #28
   30f68:	sub	sp, sp, #44	; 0x2c
   30f6c:	mov	r5, r0
   30f70:	mov	sl, r2
   30f74:	mov	r9, r1
   30f78:	sub	r1, r1, #1
   30f7c:	mov	r0, #4
   30f80:	ldrh	r2, [r5, #22]
   30f84:	add	r6, r0, r1, lsl #1
   30f88:	uxth	r7, r6
   30f8c:	cmp	r7, r2
   30f90:	bcs	30fa8 <flatcc_verify_union_vector_field@@Base+0x48>
   30f94:	ldr	r4, [r5, #12]
   30f98:	uxtah	r4, r4, r6
   30f9c:	ldrh	r4, [r4]
   30fa0:	cmp	r4, #0
   30fa4:	bne	30fe8 <flatcc_verify_union_vector_field@@Base+0x88>
   30fa8:	add	r0, r0, r9, lsl #1
   30fac:	uxth	r4, r0
   30fb0:	cmp	r4, r2
   30fb4:	bcs	30fdc <flatcc_verify_union_vector_field@@Base+0x7c>
   30fb8:	cmp	sl, #0
   30fbc:	beq	30fe8 <flatcc_verify_union_vector_field@@Base+0x88>
   30fc0:	ldr	r2, [r5, #12]
   30fc4:	uxtah	r0, r2, r0
   30fc8:	ldrh	r2, [r0]
   30fcc:	mov	r0, #22
   30fd0:	cmp	r2, #0
   30fd4:	beq	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   30fd8:	b	30fe8 <flatcc_verify_union_vector_field@@Base+0x88>
   30fdc:	mov	r0, #22
   30fe0:	cmp	sl, #0
   30fe4:	bne	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   30fe8:	uxth	r4, r1
   30fec:	mvn	r0, #0
   30ff0:	str	r3, [sp, #12]
   30ff4:	mov	r8, #1
   30ff8:	mov	r2, sl
   30ffc:	mov	r3, #1
   31000:	str	r0, [sp, #4]
   31004:	mov	r0, r5
   31008:	mov	r1, r4
   3100c:	str	r8, [sp]
   31010:	bl	300cc <flatcc_verify_vector_field@@Base>
   31014:	cmp	r0, #0
   31018:	beq	31040 <flatcc_verify_union_vector_field@@Base+0xe0>
   3101c:	mvn	r0, #0
   31020:	mov	r1, r4
   31024:	mov	r2, sl
   31028:	mov	r3, #1
   3102c:	str	r8, [sp]
   31030:	str	r0, [sp, #4]
   31034:	mov	r0, r5
   31038:	bl	300cc <flatcc_verify_vector_field@@Base>
   3103c:	b	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   31040:	ldrh	r1, [r5, #22]
   31044:	mov	r0, #0
   31048:	cmp	r7, r1
   3104c:	bcs	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   31050:	ldr	r1, [r5, #12]
   31054:	uxtah	r1, r1, r6
   31058:	ldrh	r1, [r1]
   3105c:	cmp	r1, #0
   31060:	beq	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   31064:	ldr	r2, [r5]
   31068:	ldr	r3, [r5, #16]
   3106c:	ldr	r6, [sp, #12]
   31070:	add	r2, r2, r3
   31074:	adds	r1, r2, r1
   31078:	beq	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   3107c:	ldr	r4, [r1]
   31080:	add	r3, sp, #16
   31084:	mov	r0, r5
   31088:	mov	r2, sl
   3108c:	ldr	r8, [r4, r1]!
   31090:	mov	r1, r9
   31094:	bl	3004c <flatcc_verify_string_field@@Base+0x88>
   31098:	cmp	r0, #0
   3109c:	bne	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   310a0:	ldr	r2, [sp, #16]
   310a4:	cmp	r2, #0
   310a8:	beq	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   310ac:	ldr	r1, [r5, #8]
   310b0:	cmp	r1, #1
   310b4:	blt	31194 <flatcc_verify_union_vector_field@@Base+0x234>
   310b8:	ldr	r9, [r5]
   310bc:	ldr	r0, [r9, r2]
   310c0:	add	r3, r0, r2
   310c4:	mov	r0, #16
   310c8:	cmp	r3, r2
   310cc:	bls	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   310d0:	ldr	r2, [r5, #4]
   310d4:	add	r7, r3, #4
   310d8:	cmp	r7, r2
   310dc:	bhi	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   310e0:	ands	r5, r7, #3
   310e4:	bne	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   310e8:	ldr	r5, [r9, r3]
   310ec:	mov	r0, #25
   310f0:	cmn	r5, #-1073741823	; 0xc0000001
   310f4:	bhi	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   310f8:	sub	r0, r2, #4
   310fc:	sub	r3, r0, r3
   31100:	mov	r0, #26
   31104:	cmp	r3, r5, lsl #2
   31108:	bcc	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   3110c:	mov	r0, #34	; 0x22
   31110:	cmp	r5, r8
   31114:	bne	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   31118:	cmp	r8, #0
   3111c:	sub	r0, r1, #1
   31120:	str	r2, [sp, #24]
   31124:	str	r9, [sp, #20]
   31128:	str	r0, [sp, #28]
   3112c:	beq	311a0 <flatcc_verify_union_vector_field@@Base+0x240>
   31130:	add	r4, r4, #4
   31134:	mov	r5, #0
   31138:	add	sl, sp, #20
   3113c:	ldr	r1, [r9, r7]
   31140:	ldrb	r0, [r4, r5]
   31144:	cmp	r1, #0
   31148:	beq	31174 <flatcc_verify_union_vector_field@@Base+0x214>
   3114c:	cmp	r0, #0
   31150:	beq	311a8 <flatcc_verify_union_vector_field@@Base+0x248>
   31154:	str	r7, [sp, #36]	; 0x24
   31158:	strb	r0, [sp, #32]
   3115c:	mov	r0, sl
   31160:	str	r1, [sp, #40]	; 0x28
   31164:	blx	r6
   31168:	cmp	r0, #0
   3116c:	beq	3117c <flatcc_verify_union_vector_field@@Base+0x21c>
   31170:	b	311b0 <flatcc_verify_union_vector_field@@Base+0x250>
   31174:	cmp	r0, #0
   31178:	bne	311bc <flatcc_verify_union_vector_field@@Base+0x25c>
   3117c:	add	r5, r5, #1
   31180:	add	r7, r7, #4
   31184:	mov	r0, #0
   31188:	cmp	r5, r8
   3118c:	bcc	3113c <flatcc_verify_union_vector_field@@Base+0x1dc>
   31190:	b	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   31194:	mov	r0, #3
   31198:	sub	sp, fp, #28
   3119c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   311a0:	mov	r0, #0
   311a4:	b	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   311a8:	mov	r0, #33	; 0x21
   311ac:	b	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   311b0:	add	r0, sp, #20
   311b4:	blx	r6
   311b8:	b	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   311bc:	mov	r0, #32
   311c0:	b	31198 <flatcc_verify_union_vector_field@@Base+0x238>
   311c4:	andeq	r0, r0, r0

000311c8 <grisu3_diy_fp_encode_double@@Base>:
   311c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   311cc:	add	fp, sp, #28
   311d0:	sub	sp, sp, #44	; 0x2c
   311d4:	mov	r5, r2
   311d8:	mov	r2, r0
   311dc:	mov	r0, #0
   311e0:	mov	r9, r3
   311e4:	mov	r3, r1
   311e8:	str	r0, [sp]
   311ec:	str	r0, [sp, #4]
   311f0:	add	r0, sp, #24
   311f4:	bl	315a4 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   311f8:	sub	r0, r5, r9
   311fc:	ldr	r5, [fp, #8]
   31200:	cmp	r5, #0
   31204:	movwne	r5, #4
   31208:	cmn	r0, #348	; 0x15c
   3120c:	blt	31504 <grisu3_diy_fp_encode_double@@Base+0x33c>
   31210:	cmp	r0, #348	; 0x15c
   31214:	bge	31524 <grisu3_diy_fp_encode_double@@Base+0x35c>
   31218:	add	r1, r0, #348	; 0x15c
   3121c:	movw	r6, #23408	; 0x5b70
   31220:	asr	r2, r1, #31
   31224:	movt	r6, #4
   31228:	add	r1, r1, r2, lsr #29
   3122c:	mvn	r2, #15
   31230:	and	r1, r2, r1, lsl #1
   31234:	ldr	r8, [r6, r1]!
   31238:	ldrsh	r4, [r6, #10]
   3123c:	cmp	r0, r4
   31240:	blt	31544 <grisu3_diy_fp_encode_double@@Base+0x37c>
   31244:	add	r1, r4, #8
   31248:	cmp	r1, r0
   3124c:	ble	31564 <grisu3_diy_fp_encode_double@@Base+0x39c>
   31250:	ldr	r1, [sp, #32]
   31254:	ldr	r2, [sp, #24]
   31258:	ldr	r3, [sp, #28]
   3125c:	ldr	ip, [sp, #36]	; 0x24
   31260:	cmp	r0, r4
   31264:	rsb	r7, r1, #0
   31268:	lsl	r5, r5, r7
   3126c:	beq	312d0 <grisu3_diy_fp_encode_double@@Base+0x108>
   31270:	mvn	r7, r4
   31274:	add	r4, r0, r7
   31278:	cmp	r4, #7
   3127c:	bcs	31584 <grisu3_diy_fp_encode_double@@Base+0x3bc>
   31280:	movw	r0, #23296	; 0x5b00
   31284:	stm	sp, {r1, ip}
   31288:	movt	r0, #4
   3128c:	ldr	r1, [r0, r4, lsl #4]!
   31290:	str	r1, [sp, #8]
   31294:	ldmib	r0, {r1, r7}
   31298:	ldr	r0, [r0, #12]
   3129c:	str	r0, [sp, #20]
   312a0:	add	r0, sp, #24
   312a4:	str	r7, [sp, #16]
   312a8:	str	r1, [sp, #12]
   312ac:	bl	31648 <grisu3_diy_fp_encode_double@@Base+0x480>
   312b0:	add	r0, r9, r4
   312b4:	ldr	r2, [sp, #24]
   312b8:	ldr	r3, [sp, #28]
   312bc:	ldr	r1, [sp, #32]
   312c0:	ldr	ip, [sp, #36]	; 0x24
   312c4:	add	r0, r0, #1
   312c8:	cmp	r0, #19
   312cc:	addgt	r5, r5, #4
   312d0:	ldr	r0, [r6, #4]
   312d4:	ldrsh	r7, [r6, #8]
   312d8:	stm	sp, {r1, ip}
   312dc:	mov	r6, #0
   312e0:	str	r8, [sp, #8]
   312e4:	str	r6, [sp, #20]
   312e8:	str	r0, [sp, #12]
   312ec:	add	r0, sp, #24
   312f0:	str	r7, [sp, #16]
   312f4:	bl	31648 <grisu3_diy_fp_encode_double@@Base+0x480>
   312f8:	add	r4, sp, #24
   312fc:	ldm	r4, {r2, r3, r4}
   31300:	ldr	r0, [sp, #36]	; 0x24
   31304:	str	r0, [sp, #4]
   31308:	add	r0, sp, #24
   3130c:	str	r4, [sp]
   31310:	bl	315a4 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   31314:	add	r7, sp, #24
   31318:	mov	r0, #9
   3131c:	cmp	r5, #0
   31320:	movw	lr, #64462	; 0xfbce
   31324:	ldm	r7, {r1, r3, r7}
   31328:	movweq	r0, #8
   3132c:	movt	lr, #65535	; 0xffff
   31330:	add	r0, r0, r5
   31334:	sub	r2, r4, r7
   31338:	lsl	r8, r0, r2
   3133c:	sub	r0, lr, #1
   31340:	cmp	r7, r0
   31344:	bgt	31398 <grisu3_diy_fp_encode_double@@Base+0x1d0>
   31348:	mvn	r0, #1136	; 0x470
   3134c:	mov	r6, #64	; 0x40
   31350:	cmp	r7, r0
   31354:	blt	31364 <grisu3_diy_fp_encode_double@@Base+0x19c>
   31358:	sub	r6, lr, r7
   3135c:	cmp	r6, #61	; 0x3d
   31360:	blt	31398 <grisu3_diy_fp_encode_double@@Base+0x1d0>
   31364:	sub	r0, r6, #62	; 0x3e
   31368:	mov	r2, #9
   3136c:	add	r8, r2, r8, asr r0
   31370:	lsr	r1, r1, r0
   31374:	rsb	r2, r6, #94	; 0x5e
   31378:	add	r7, r0, r7
   3137c:	orr	r1, r1, r3, lsl r2
   31380:	sub	r2, r6, #94	; 0x5e
   31384:	mov	r6, #62	; 0x3e
   31388:	cmp	r2, #0
   3138c:	lsrge	r1, r3, r2
   31390:	lsr	r3, r3, r0
   31394:	movwge	r3, #0
   31398:	lsr	r0, r1, r6
   3139c:	rsb	r2, r6, #32
   313a0:	add	r5, r7, r6
   313a4:	mov	r7, #1
   313a8:	orr	r2, r0, r3, lsl r2
   313ac:	sub	r0, r6, #32
   313b0:	cmp	r0, #0
   313b4:	lsrge	r2, r3, r0
   313b8:	lsr	r0, r3, r6
   313bc:	sub	r3, r6, #1
   313c0:	lsl	r7, r7, r3
   313c4:	sub	r3, r6, #33	; 0x21
   313c8:	movwge	r0, #0
   313cc:	cmp	r3, #0
   313d0:	movwge	r7, #0
   313d4:	add	sl, r8, r7, lsl #3
   313d8:	cmp	r6, sl
   313dc:	blt	313fc <grisu3_diy_fp_encode_double@@Base+0x234>
   313e0:	adds	r2, r2, #1
   313e4:	adc	r0, r0, #0
   313e8:	tst	r0, #2097152	; 0x200000
   313ec:	beq	313fc <grisu3_diy_fp_encode_double@@Base+0x234>
   313f0:	lsrs	r0, r0, #1
   313f4:	add	r5, r5, #1
   313f8:	rrx	r2, r2
   313fc:	and	r4, r7, r1
   31400:	cmp	r0, #2097152	; 0x200000
   31404:	bcc	31428 <grisu3_diy_fp_encode_double@@Base+0x260>
   31408:	mov	r3, #0
   3140c:	lsrs	r1, r0, #1
   31410:	add	r5, r5, #1
   31414:	rrx	r2, r2
   31418:	cmp	r3, r0, lsr #22
   3141c:	mov	r0, r1
   31420:	bne	3140c <grisu3_diy_fp_encode_double@@Base+0x244>
   31424:	b	3142c <grisu3_diy_fp_encode_double@@Base+0x264>
   31428:	mov	r1, r0
   3142c:	ldr	ip, [fp, #12]
   31430:	lsl	r9, r7, #3
   31434:	lsl	r6, r4, #3
   31438:	vmov.i32	d16, #0	; 0x00000000
   3143c:	cmp	r5, lr
   31440:	blt	314d8 <grisu3_diy_fp_encode_double@@Base+0x310>
   31444:	and	r0, r1, #1048576	; 0x100000
   31448:	mov	r3, #1
   3144c:	cmp	r5, lr
   31450:	eor	r7, r3, r0, lsr #20
   31454:	beq	31498 <grisu3_diy_fp_encode_double@@Base+0x2d0>
   31458:	cmp	r0, #0
   3145c:	bne	31498 <grisu3_diy_fp_encode_double@@Base+0x2d0>
   31460:	mov	r3, #1
   31464:	lsl	r0, r1, #1
   31468:	and	r1, r1, #524288	; 0x80000
   3146c:	sub	r4, r5, #1
   31470:	cmn	r5, #1072	; 0x430
   31474:	orr	r0, r0, r2, lsr #31
   31478:	eor	r7, r3, r1, lsr #19
   3147c:	lsl	r2, r2, #1
   31480:	blt	314a0 <grisu3_diy_fp_encode_double@@Base+0x2d8>
   31484:	cmp	r1, #0
   31488:	mov	r1, r0
   3148c:	mov	r5, r4
   31490:	beq	31464 <grisu3_diy_fp_encode_double@@Base+0x29c>
   31494:	b	314a0 <grisu3_diy_fp_encode_double@@Base+0x2d8>
   31498:	mov	r4, r5
   3149c:	mov	r0, r1
   314a0:	cmp	r4, lr
   314a4:	bne	314b8 <grisu3_diy_fp_encode_double@@Base+0x2f0>
   314a8:	mov	r1, #0
   314ac:	cmp	r7, #0
   314b0:	mov	r3, #0
   314b4:	bne	314c8 <grisu3_diy_fp_encode_double@@Base+0x300>
   314b8:	movw	r1, #0
   314bc:	movt	r1, #17200	; 0x4330
   314c0:	add	r3, r1, r4, lsl #20
   314c4:	mov	r1, #0
   314c8:	bfc	r0, #20, #12
   314cc:	orr	r1, r1, r2
   314d0:	orr	r0, r3, r0
   314d4:	vmov	d16, r1, r0
   314d8:	cmp	r6, sl
   314dc:	mov	r1, #0
   314e0:	sub	r2, r9, r8
   314e4:	mov	r0, #0
   314e8:	vstr	d16, [ip]
   314ec:	movwge	r1, #1
   314f0:	cmp	r2, r6
   314f4:	movwge	r0, #1
   314f8:	orr	r0, r1, r0
   314fc:	sub	sp, fp, #28
   31500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31504:	movw	r0, #26922	; 0x692a
   31508:	movw	r1, #25480	; 0x6388
   3150c:	movw	r3, #26953	; 0x6949
   31510:	mov	r2, #80	; 0x50
   31514:	movt	r0, #4
   31518:	movt	r1, #4
   3151c:	movt	r3, #4
   31520:	bl	14f44 <__assert_fail@plt>
   31524:	movw	r0, #27010	; 0x6982
   31528:	movw	r1, #25480	; 0x6388
   3152c:	movw	r3, #26953	; 0x6949
   31530:	mov	r2, #81	; 0x51
   31534:	movt	r0, #4
   31538:	movt	r1, #4
   3153c:	movt	r3, #4
   31540:	bl	14f44 <__assert_fail@plt>
   31544:	movw	r0, #27053	; 0x69ad
   31548:	movw	r1, #25480	; 0x6388
   3154c:	movw	r3, #26953	; 0x6949
   31550:	mov	r2, #88	; 0x58
   31554:	movt	r0, #4
   31558:	movt	r1, #4
   3155c:	movt	r3, #4
   31560:	bl	14f44 <__assert_fail@plt>
   31564:	movw	r0, #27068	; 0x69bc
   31568:	movw	r1, #25480	; 0x6388
   3156c:	movw	r3, #26953	; 0x6949
   31570:	mov	r2, #89	; 0x59
   31574:	movt	r0, #4
   31578:	movt	r1, #4
   3157c:	movt	r3, #4
   31580:	bl	14f44 <__assert_fail@plt>
   31584:	movw	r0, #25452	; 0x636c
   31588:	movw	r1, #25480	; 0x6388
   3158c:	movw	r3, #25567	; 0x63df
   31590:	mov	r2, #185	; 0xb9
   31594:	movt	r0, #4
   31598:	movt	r1, #4
   3159c:	movt	r3, #4
   315a0:	bl	14f44 <__assert_fail@plt>
   315a4:	push	{r4, sl, fp, lr}
   315a8:	add	fp, sp, #8
   315ac:	orrs	r1, r2, r3
   315b0:	beq	31628 <grisu3_diy_fp_encode_double@@Base+0x460>
   315b4:	ldr	ip, [fp, #12]
   315b8:	ldr	r1, [fp, #8]
   315bc:	mov	r4, #0
   315c0:	cmp	r4, r3, lsr #22
   315c4:	bne	315e0 <grisu3_diy_fp_encode_double@@Base+0x418>
   315c8:	lsl	r3, r3, #10
   315cc:	sub	r1, r1, #10
   315d0:	orr	r3, r3, r2, lsr #22
   315d4:	lsl	r2, r2, #10
   315d8:	cmp	r3, #4194304	; 0x400000
   315dc:	bcc	315c8 <grisu3_diy_fp_encode_double@@Base+0x400>
   315e0:	cmp	r3, #0
   315e4:	blt	31610 <grisu3_diy_fp_encode_double@@Base+0x448>
   315e8:	mvn	lr, #0
   315ec:	lsl	r3, r3, #1
   315f0:	lsl	r4, r2, #1
   315f4:	sub	r1, r1, #1
   315f8:	orr	r3, r3, r2, lsr #31
   315fc:	subs	r2, lr, r2, lsl #1
   31600:	sbcs	r2, lr, r3
   31604:	mov	r2, r4
   31608:	blt	315ec <grisu3_diy_fp_encode_double@@Base+0x424>
   3160c:	b	31614 <grisu3_diy_fp_encode_double@@Base+0x44c>
   31610:	mov	r4, r2
   31614:	str	r4, [r0]
   31618:	str	r3, [r0, #4]
   3161c:	str	r1, [r0, #8]
   31620:	str	ip, [r0, #12]
   31624:	pop	{r4, sl, fp, pc}
   31628:	movw	r0, #26770	; 0x6892
   3162c:	movw	r1, #26779	; 0x689b
   31630:	movw	r3, #26865	; 0x68f1
   31634:	mov	r2, #260	; 0x104
   31638:	movt	r0, #4
   3163c:	movt	r1, #4
   31640:	movt	r3, #4
   31644:	bl	14f44 <__assert_fail@plt>
   31648:	push	{r4, r5, fp, lr}
   3164c:	add	fp, sp, #8
   31650:	ldr	ip, [fp, #24]
   31654:	ldr	r1, [fp, #8]
   31658:	mov	r5, #0
   3165c:	add	r1, r1, ip
   31660:	ldr	ip, [fp, #16]
   31664:	add	r1, r1, #64	; 0x40
   31668:	str	r1, [r0, #8]
   3166c:	umull	r1, lr, ip, r2
   31670:	umull	ip, r1, ip, r3
   31674:	adds	lr, ip, lr
   31678:	ldr	ip, [fp, #20]
   3167c:	adc	r5, r5, #0
   31680:	umull	r2, r4, ip, r2
   31684:	adds	r2, lr, r2
   31688:	umaal	r1, r4, ip, r3
   3168c:	adc	r5, r5, #0
   31690:	adds	r2, r2, #-2147483648	; 0x80000000
   31694:	adc	r2, r5, #0
   31698:	adds	r1, r1, r2
   3169c:	str	r1, [r0]
   316a0:	adc	r1, r4, #0
   316a4:	str	r1, [r0, #4]
   316a8:	pop	{r4, r5, fp, pc}

000316ac <flatcc_json_parser_error_string@@Base>:
   316ac:	cmp	r0, #34	; 0x22
   316b0:	movwhi	r0, #23114	; 0x5a4a
   316b4:	movthi	r0, #4
   316b8:	bxhi	lr
   316bc:	movw	r1, #25312	; 0x62e0
   316c0:	movt	r1, #4
   316c4:	ldr	r0, [r1, r0, lsl #2]
   316c8:	bx	lr

000316cc <flatcc_json_parser_set_error@@Base>:
   316cc:	mov	ip, r2
   316d0:	ldr	r2, [r0, #20]
   316d4:	cmp	r2, #0
   316d8:	bne	316f4 <flatcc_json_parser_set_error@@Base+0x28>
   316dc:	str	r1, [r0, #32]
   316e0:	add	r1, r1, #1
   316e4:	ldr	r2, [r0, #4]
   316e8:	sub	r1, r1, r2
   316ec:	str	r1, [r0, #16]
   316f0:	str	r3, [r0, #20]
   316f4:	mov	r0, ip
   316f8:	bx	lr

000316fc <flatcc_json_parser_string_part@@Base>:
   316fc:	cmp	r1, r2
   31700:	beq	3172c <flatcc_json_parser_string_part@@Base+0x30>
   31704:	ldrb	r3, [r1]
   31708:	cmp	r3, #32
   3170c:	bcc	31760 <flatcc_json_parser_string_part@@Base+0x64>
   31710:	cmp	r3, #34	; 0x22
   31714:	cmpne	r3, #92	; 0x5c
   31718:	beq	31758 <flatcc_json_parser_string_part@@Base+0x5c>
   3171c:	add	r1, r1, #1
   31720:	cmp	r2, r1
   31724:	bne	31704 <flatcc_json_parser_string_part@@Base+0x8>
   31728:	mov	r1, r2
   3172c:	ldr	r3, [r0, #20]
   31730:	cmp	r3, #0
   31734:	bne	31754 <flatcc_json_parser_string_part@@Base+0x58>
   31738:	mov	ip, #20
   3173c:	str	r1, [r0, #32]
   31740:	add	r1, r1, #1
   31744:	ldr	r3, [r0, #4]
   31748:	sub	r1, r1, r3
   3174c:	str	r1, [r0, #16]
   31750:	str	ip, [r0, #20]
   31754:	mov	r1, r2
   31758:	mov	r0, r1
   3175c:	bx	lr
   31760:	ldr	r3, [r0, #20]
   31764:	cmp	r3, #0
   31768:	bne	31754 <flatcc_json_parser_string_part@@Base+0x58>
   3176c:	mov	ip, #17
   31770:	b	3173c <flatcc_json_parser_string_part@@Base+0x40>

00031774 <flatcc_json_parser_space_ext@@Base>:
   31774:	mov	ip, r2
   31778:	cmp	r1, r2
   3177c:	beq	31848 <flatcc_json_parser_space_ext@@Base+0xd4>
   31780:	ldrb	r3, [r1]
   31784:	cmp	r3, #32
   31788:	bne	317d8 <flatcc_json_parser_space_ext@@Base+0x64>
   3178c:	add	r1, r1, #1
   31790:	cmp	r1, ip
   31794:	bne	31780 <flatcc_json_parser_space_ext@@Base+0xc>
   31798:	b	31848 <flatcc_json_parser_space_ext@@Base+0xd4>
   3179c:	sub	r2, ip, r1
   317a0:	mov	r3, #0
   317a4:	cmp	r2, #2
   317a8:	ldrbge	r2, [r1, #1]
   317ac:	subge	r2, r2, #10
   317b0:	clzge	r2, r2
   317b4:	lsrge	r3, r2, #5
   317b8:	add	r1, r1, r3
   317bc:	add	r1, r1, #1
   317c0:	str	r1, [r0, #4]
   317c4:	ldr	r2, [r0, #12]
   317c8:	add	r2, r2, #1
   317cc:	str	r2, [r0, #12]
   317d0:	b	317d8 <flatcc_json_parser_space_ext@@Base+0x64>
   317d4:	add	r1, r1, #1
   317d8:	cmp	r1, ip
   317dc:	beq	31848 <flatcc_json_parser_space_ext@@Base+0xd4>
   317e0:	ldrb	r3, [r1]
   317e4:	cmp	r3, #32
   317e8:	bhi	31844 <flatcc_json_parser_space_ext@@Base+0xd0>
   317ec:	cmp	r3, #12
   317f0:	bgt	31808 <flatcc_json_parser_space_ext@@Base+0x94>
   317f4:	cmp	r3, #9
   317f8:	beq	317d4 <flatcc_json_parser_space_ext@@Base+0x60>
   317fc:	cmp	r3, #10
   31800:	beq	317bc <flatcc_json_parser_space_ext@@Base+0x48>
   31804:	b	31818 <flatcc_json_parser_space_ext@@Base+0xa4>
   31808:	cmp	r3, #13
   3180c:	beq	3179c <flatcc_json_parser_space_ext@@Base+0x28>
   31810:	cmp	r3, #32
   31814:	beq	31790 <flatcc_json_parser_space_ext@@Base+0x1c>
   31818:	ldr	r2, [r0, #20]
   3181c:	cmp	r2, #0
   31820:	bne	31848 <flatcc_json_parser_space_ext@@Base+0xd4>
   31824:	str	r1, [r0, #32]
   31828:	add	r1, r1, #1
   3182c:	mov	r2, #5
   31830:	ldr	r3, [r0, #4]
   31834:	sub	r1, r1, r3
   31838:	str	r1, [r0, #16]
   3183c:	str	r2, [r0, #20]
   31840:	b	31848 <flatcc_json_parser_space_ext@@Base+0xd4>
   31844:	mov	ip, r1
   31848:	mov	r0, ip
   3184c:	bx	lr

00031850 <flatcc_json_parser_string_escape@@Base>:
   31850:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31854:	add	fp, sp, #24
   31858:	sub	r7, r2, r1
   3185c:	cmp	r7, #2
   31860:	blt	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31864:	ldrb	r6, [r1]
   31868:	cmp	r6, #92	; 0x5c
   3186c:	bne	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31870:	ldrb	r6, [r1, #1]
   31874:	cmp	r6, #97	; 0x61
   31878:	bgt	3189c <flatcc_json_parser_string_escape@@Base+0x4c>
   3187c:	cmp	r6, #34	; 0x22
   31880:	beq	318fc <flatcc_json_parser_string_escape@@Base+0xac>
   31884:	cmp	r6, #47	; 0x2f
   31888:	beq	31904 <flatcc_json_parser_string_escape@@Base+0xb4>
   3188c:	cmp	r6, #92	; 0x5c
   31890:	bne	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31894:	movw	r0, #23553	; 0x5c01
   31898:	b	31988 <flatcc_json_parser_string_escape@@Base+0x138>
   3189c:	sub	r5, r6, #110	; 0x6e
   318a0:	cmp	r5, #10
   318a4:	bhi	318e4 <flatcc_json_parser_string_escape@@Base+0x94>
   318a8:	add	r6, pc, #0
   318ac:	ldr	pc, [r6, r5, lsl #2]
   318b0:	ldrdeq	r1, [r3], -ip
   318b4:	andeq	r1, r3, r0, asr r9
   318b8:	andeq	r1, r3, r0, asr r9
   318bc:	andeq	r1, r3, r0, asr r9
   318c0:	andeq	r1, r3, ip, lsl #18
   318c4:	andeq	r1, r3, r0, asr r9
   318c8:	andeq	r1, r3, r4, lsl r9
   318cc:	andeq	r1, r3, ip, lsl r9
   318d0:	andeq	r1, r3, r0, asr r9
   318d4:	andeq	r1, r3, r0, asr r9
   318d8:	andeq	r1, r3, r0, asr #18
   318dc:	movw	r0, #2561	; 0xa01
   318e0:	b	31988 <flatcc_json_parser_string_escape@@Base+0x138>
   318e4:	cmp	r6, #98	; 0x62
   318e8:	beq	31984 <flatcc_json_parser_string_escape@@Base+0x134>
   318ec:	cmp	r6, #102	; 0x66
   318f0:	bne	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   318f4:	movw	r0, #3073	; 0xc01
   318f8:	b	31988 <flatcc_json_parser_string_escape@@Base+0x138>
   318fc:	movw	r0, #8705	; 0x2201
   31900:	b	31988 <flatcc_json_parser_string_escape@@Base+0x138>
   31904:	movw	r0, #12033	; 0x2f01
   31908:	b	31988 <flatcc_json_parser_string_escape@@Base+0x138>
   3190c:	movw	r0, #3329	; 0xd01
   31910:	b	31988 <flatcc_json_parser_string_escape@@Base+0x138>
   31914:	movw	r0, #2305	; 0x901
   31918:	b	31988 <flatcc_json_parser_string_escape@@Base+0x138>
   3191c:	cmp	r7, #5
   31920:	ble	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31924:	ldrb	r7, [r1, #2]
   31928:	sub	r6, r7, #48	; 0x30
   3192c:	uxtb	r6, r6
   31930:	cmp	r6, #9
   31934:	bhi	319b4 <flatcc_json_parser_string_escape@@Base+0x164>
   31938:	lsl	ip, r7, #12
   3193c:	b	319d4 <flatcc_json_parser_string_escape@@Base+0x184>
   31940:	mov	r6, #1
   31944:	cmp	r7, #3
   31948:	strb	r6, [r3]
   3194c:	bgt	31998 <flatcc_json_parser_string_escape@@Base+0x148>
   31950:	mov	r7, #0
   31954:	strb	r7, [r3]
   31958:	ldr	r3, [r0, #20]
   3195c:	cmp	r3, #0
   31960:	bne	31990 <flatcc_json_parser_string_escape@@Base+0x140>
   31964:	str	r1, [r0, #32]
   31968:	add	r1, r1, #1
   3196c:	mov	r3, #18
   31970:	ldr	r7, [r0, #4]
   31974:	sub	r1, r1, r7
   31978:	str	r1, [r0, #16]
   3197c:	str	r3, [r0, #20]
   31980:	b	31990 <flatcc_json_parser_string_escape@@Base+0x140>
   31984:	movw	r0, #2049	; 0x801
   31988:	strh	r0, [r3]
   3198c:	add	r2, r1, #2
   31990:	mov	r0, r2
   31994:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31998:	ldrb	r7, [r1, #2]
   3199c:	sub	r6, r7, #48	; 0x30
   319a0:	uxtb	r6, r6
   319a4:	cmp	r6, #9
   319a8:	bhi	319f0 <flatcc_json_parser_string_escape@@Base+0x1a0>
   319ac:	lsl	r7, r7, #4
   319b0:	b	31a0c <flatcc_json_parser_string_escape@@Base+0x1bc>
   319b4:	orr	r6, r7, #32
   319b8:	sub	r6, r6, #97	; 0x61
   319bc:	uxtb	r6, r6
   319c0:	cmp	r6, #5
   319c4:	bhi	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   319c8:	movw	r6, #36864	; 0x9000
   319cc:	movt	r6, #65535	; 0xffff
   319d0:	add	ip, r6, r7, lsl #12
   319d4:	ldrb	lr, [r1, #3]
   319d8:	sub	r4, lr, #48	; 0x30
   319dc:	uxtb	r4, r4
   319e0:	cmp	r4, #10
   319e4:	bcs	31a48 <flatcc_json_parser_string_escape@@Base+0x1f8>
   319e8:	mov	r8, #53248	; 0xd000
   319ec:	b	31a60 <flatcc_json_parser_string_escape@@Base+0x210>
   319f0:	orr	r6, r7, #32
   319f4:	sub	r6, r6, #97	; 0x61
   319f8:	uxtb	r6, r6
   319fc:	cmp	r6, #5
   31a00:	bhi	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31a04:	mvn	r6, #111	; 0x6f
   31a08:	add	r7, r6, r7, lsl #4
   31a0c:	ldrb	r5, [r1, #3]
   31a10:	sub	r6, r5, #48	; 0x30
   31a14:	uxtb	r4, r6
   31a18:	cmp	r4, #10
   31a1c:	bcc	31a38 <flatcc_json_parser_string_escape@@Base+0x1e8>
   31a20:	orr	r6, r5, #32
   31a24:	sub	r5, r6, #97	; 0x61
   31a28:	uxtb	r5, r5
   31a2c:	cmp	r5, #5
   31a30:	bhi	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31a34:	sub	r6, r6, #87	; 0x57
   31a38:	orr	r0, r6, r7
   31a3c:	add	r2, r1, #4
   31a40:	strb	r0, [r3, #1]
   31a44:	b	31990 <flatcc_json_parser_string_escape@@Base+0x140>
   31a48:	orr	lr, lr, #32
   31a4c:	mov	r8, #43264	; 0xa900
   31a50:	sub	r4, lr, #97	; 0x61
   31a54:	uxtb	r4, r4
   31a58:	cmp	r4, #6
   31a5c:	bcs	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31a60:	ldrb	r5, [r1, #4]
   31a64:	sub	r4, r5, #48	; 0x30
   31a68:	uxtb	r4, r4
   31a6c:	cmp	r4, #10
   31a70:	bcs	31a7c <flatcc_json_parser_string_escape@@Base+0x22c>
   31a74:	mov	r9, #64768	; 0xfd00
   31a78:	b	31a94 <flatcc_json_parser_string_escape@@Base+0x244>
   31a7c:	orr	r5, r5, #32
   31a80:	movw	r9, #64144	; 0xfa90
   31a84:	sub	r4, r5, #97	; 0x61
   31a88:	uxtb	r4, r4
   31a8c:	cmp	r4, #6
   31a90:	bcs	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31a94:	ldrb	r7, [r1, #5]
   31a98:	sub	r4, r7, #48	; 0x30
   31a9c:	uxtb	r4, r4
   31aa0:	cmp	r4, #10
   31aa4:	bcs	31ab4 <flatcc_json_parser_string_escape@@Base+0x264>
   31aa8:	mvn	r0, #86	; 0x56
   31aac:	add	r4, r0, #39	; 0x27
   31ab0:	b	31acc <flatcc_json_parser_string_escape@@Base+0x27c>
   31ab4:	orr	r7, r7, #32
   31ab8:	movw	r4, #65449	; 0xffa9
   31abc:	sub	r6, r7, #97	; 0x61
   31ac0:	uxtb	r6, r6
   31ac4:	cmp	r6, #6
   31ac8:	bcs	31950 <flatcc_json_parser_string_escape@@Base+0x100>
   31acc:	add	r0, r8, lr, lsl #8
   31ad0:	add	r2, r9, r5, lsl #4
   31ad4:	orr	r0, r0, ip
   31ad8:	orr	r0, r0, r2
   31adc:	add	r2, r4, r7
   31ae0:	orr	r0, r0, r2
   31ae4:	uxth	r7, r0
   31ae8:	cmp	r7, #127	; 0x7f
   31aec:	bhi	31afc <flatcc_json_parser_string_escape@@Base+0x2ac>
   31af0:	mov	r2, #1
   31af4:	strb	r2, [r3]
   31af8:	b	31b50 <flatcc_json_parser_string_escape@@Base+0x300>
   31afc:	and	r2, r0, #63488	; 0xf800
   31b00:	mov	r6, #0
   31b04:	cmp	r6, r2, lsr #11
   31b08:	bne	31b24 <flatcc_json_parser_string_escape@@Base+0x2d4>
   31b0c:	mov	r7, #192	; 0xc0
   31b10:	mov	r2, #2
   31b14:	orr	r7, r7, r0, lsr #6
   31b18:	strb	r2, [r3]
   31b1c:	strb	r7, [r3, #1]
   31b20:	b	31b48 <flatcc_json_parser_string_escape@@Base+0x2f8>
   31b24:	mov	r6, #224	; 0xe0
   31b28:	mov	r2, #3
   31b2c:	orr	r6, r6, r7, lsr #12
   31b30:	strb	r2, [r3]
   31b34:	lsr	r7, r7, #6
   31b38:	strb	r6, [r3, #1]
   31b3c:	mov	r6, #2
   31b40:	bfi	r7, r6, #6, #26
   31b44:	strb	r7, [r3, #2]
   31b48:	mvn	r7, #-67108863	; 0xfc000001
   31b4c:	bfi	r0, r7, #6, #26
   31b50:	strb	r0, [r3, r2]
   31b54:	add	r2, r1, #6
   31b58:	b	31990 <flatcc_json_parser_string_escape@@Base+0x140>

00031b5c <flatcc_json_parser_skip_constant@@Base>:
   31b5c:	push	{r4, r5, r6, sl, fp, lr}
   31b60:	add	fp, sp, #16
   31b64:	cmp	r1, r2
   31b68:	beq	31c18 <flatcc_json_parser_skip_constant@@Base+0xbc>
   31b6c:	mov	r4, r2
   31b70:	mov	r5, r0
   31b74:	ldrsb	r0, [r1]
   31b78:	mov	r6, r1
   31b7c:	cmp	r0, #0
   31b80:	blt	31b94 <flatcc_json_parser_skip_constant@@Base+0x38>
   31b84:	uxtb	r0, r0
   31b88:	cmp	r0, #95	; 0x5f
   31b8c:	cmpne	r0, #46	; 0x2e
   31b90:	bne	31ba4 <flatcc_json_parser_skip_constant@@Base+0x48>
   31b94:	add	r1, r6, #1
   31b98:	cmp	r1, r4
   31b9c:	bne	31b74 <flatcc_json_parser_skip_constant@@Base+0x18>
   31ba0:	b	31c10 <flatcc_json_parser_skip_constant@@Base+0xb4>
   31ba4:	sub	r1, r0, #48	; 0x30
   31ba8:	uxtb	r1, r1
   31bac:	cmp	r1, #9
   31bb0:	bls	31b94 <flatcc_json_parser_skip_constant@@Base+0x38>
   31bb4:	orr	r1, r0, #32
   31bb8:	sub	r1, r1, #97	; 0x61
   31bbc:	uxtb	r1, r1
   31bc0:	cmp	r1, #25
   31bc4:	bls	31b94 <flatcc_json_parser_skip_constant@@Base+0x38>
   31bc8:	sub	r1, r4, r6
   31bcc:	cmp	r1, #2
   31bd0:	blt	31bf0 <flatcc_json_parser_skip_constant@@Base+0x94>
   31bd4:	cmp	r0, #32
   31bd8:	bhi	31c1c <flatcc_json_parser_skip_constant@@Base+0xc0>
   31bdc:	bne	31bf0 <flatcc_json_parser_skip_constant@@Base+0x94>
   31be0:	mov	r1, r6
   31be4:	ldrb	r0, [r1, #1]!
   31be8:	cmp	r0, #32
   31bec:	bhi	31b98 <flatcc_json_parser_skip_constant@@Base+0x3c>
   31bf0:	mov	r0, r5
   31bf4:	mov	r1, r6
   31bf8:	mov	r2, r4
   31bfc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   31c00:	mov	r1, r0
   31c04:	cmp	r0, r6
   31c08:	bne	31b98 <flatcc_json_parser_skip_constant@@Base+0x3c>
   31c0c:	b	31c1c <flatcc_json_parser_skip_constant@@Base+0xc0>
   31c10:	mov	r6, r4
   31c14:	b	31c1c <flatcc_json_parser_skip_constant@@Base+0xc0>
   31c18:	mov	r6, r1
   31c1c:	mov	r0, r6
   31c20:	pop	{r4, r5, r6, sl, fp, pc}

00031c24 <flatcc_json_parser_match_constant@@Base>:
   31c24:	push	{r4, r5, fp, lr}
   31c28:	add	fp, sp, #8
   31c2c:	ldr	r5, [fp, #8]
   31c30:	sub	r4, r2, r1
   31c34:	cmp	r4, r3
   31c38:	ble	31ca8 <flatcc_json_parser_match_constant@@Base+0x84>
   31c3c:	add	ip, r1, r3
   31c40:	ldrb	r4, [ip]
   31c44:	cmp	r4, #92	; 0x5c
   31c48:	beq	31cbc <flatcc_json_parser_match_constant@@Base+0x98>
   31c4c:	cmp	r4, #34	; 0x22
   31c50:	beq	31c84 <flatcc_json_parser_match_constant@@Base+0x60>
   31c54:	cmp	r4, #32
   31c58:	bne	31ca8 <flatcc_json_parser_match_constant@@Base+0x84>
   31c5c:	add	r1, r1, r3
   31c60:	add	r1, r1, #1
   31c64:	cmp	r2, r1
   31c68:	beq	31cf0 <flatcc_json_parser_match_constant@@Base+0xcc>
   31c6c:	ldrb	r3, [r1], #1
   31c70:	cmp	r3, #32
   31c74:	beq	31c64 <flatcc_json_parser_match_constant@@Base+0x40>
   31c78:	cmp	r3, #34	; 0x22
   31c7c:	bne	31d24 <flatcc_json_parser_match_constant@@Base+0x100>
   31c80:	sub	ip, r1, #1
   31c84:	mvn	r2, ip
   31c88:	add	r1, ip, #1
   31c8c:	cmp	r2, #2
   31c90:	blt	31d10 <flatcc_json_parser_match_constant@@Base+0xec>
   31c94:	ldrb	r2, [r1]
   31c98:	cmp	r2, #32
   31c9c:	bls	31d00 <flatcc_json_parser_match_constant@@Base+0xdc>
   31ca0:	mov	ip, r1
   31ca4:	b	31d1c <flatcc_json_parser_match_constant@@Base+0xf8>
   31ca8:	mov	r0, #0
   31cac:	mov	ip, r1
   31cb0:	str	r0, [r5]
   31cb4:	mov	r0, ip
   31cb8:	pop	{r4, r5, fp, pc}
   31cbc:	mov	r1, #0
   31cc0:	str	r1, [r5]
   31cc4:	ldr	r1, [r0, #20]
   31cc8:	cmp	r1, #0
   31ccc:	bne	31cf8 <flatcc_json_parser_match_constant@@Base+0xd4>
   31cd0:	str	ip, [r0, #32]
   31cd4:	add	r5, ip, #1
   31cd8:	mov	r1, #18
   31cdc:	ldr	r3, [r0, #4]
   31ce0:	sub	r3, r5, r3
   31ce4:	str	r3, [r0, #16]
   31ce8:	str	r1, [r0, #20]
   31cec:	b	31cf8 <flatcc_json_parser_match_constant@@Base+0xd4>
   31cf0:	mov	r0, #0
   31cf4:	str	r0, [r5]
   31cf8:	mov	ip, r2
   31cfc:	b	31cb4 <flatcc_json_parser_match_constant@@Base+0x90>
   31d00:	bne	31d10 <flatcc_json_parser_match_constant@@Base+0xec>
   31d04:	ldrb	r2, [ip, #2]!
   31d08:	cmp	r2, #32
   31d0c:	bhi	31d1c <flatcc_json_parser_match_constant@@Base+0xf8>
   31d10:	mov	r2, #0
   31d14:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   31d18:	mov	ip, r0
   31d1c:	mov	r0, #0
   31d20:	b	31cb0 <flatcc_json_parser_match_constant@@Base+0x8c>
   31d24:	mov	r0, #1
   31d28:	sub	ip, r1, #1
   31d2c:	b	31cb0 <flatcc_json_parser_match_constant@@Base+0x8c>

00031d30 <flatcc_json_parser_unmatched_symbol@@Base>:
   31d30:	push	{r4, r5, fp, lr}
   31d34:	add	fp, sp, #8
   31d38:	mov	r5, r0
   31d3c:	ldrb	r0, [r0, #8]
   31d40:	mov	r4, r2
   31d44:	tst	r0, #1
   31d48:	bne	31d70 <flatcc_json_parser_unmatched_symbol@@Base+0x40>
   31d4c:	ldr	r0, [r5, #20]
   31d50:	cmp	r0, #0
   31d54:	bne	31e90 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   31d58:	str	r1, [r5, #32]
   31d5c:	add	r1, r1, #1
   31d60:	mov	r0, #13
   31d64:	ldr	r2, [r5, #4]
   31d68:	sub	r1, r1, r2
   31d6c:	b	31e88 <flatcc_json_parser_unmatched_symbol@@Base+0x158>
   31d70:	cmp	r1, r4
   31d74:	beq	31db0 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   31d78:	ldrb	r0, [r1]
   31d7c:	cmp	r0, #92	; 0x5c
   31d80:	beq	31d90 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   31d84:	cmp	r0, #34	; 0x22
   31d88:	bne	31da0 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   31d8c:	b	31de4 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   31d90:	sub	r0, r4, r1
   31d94:	cmp	r0, #2
   31d98:	blt	31db0 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   31d9c:	add	r1, r1, #1
   31da0:	add	r1, r1, #1
   31da4:	cmp	r1, r4
   31da8:	bne	31d78 <flatcc_json_parser_unmatched_symbol@@Base+0x48>
   31dac:	mov	r1, r4
   31db0:	ldr	r0, [r5, #20]
   31db4:	mov	r2, r4
   31db8:	cmp	r0, #0
   31dbc:	bne	31de8 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   31dc0:	str	r1, [r5, #32]
   31dc4:	add	r1, r1, #1
   31dc8:	mov	r0, #20
   31dcc:	ldr	r2, [r5, #4]
   31dd0:	sub	r1, r1, r2
   31dd4:	mov	r2, r4
   31dd8:	str	r1, [r5, #16]
   31ddc:	str	r0, [r5, #20]
   31de0:	b	31de8 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   31de4:	add	r2, r1, #1
   31de8:	sub	r0, r4, r2
   31dec:	cmp	r0, #2
   31df0:	blt	31e1c <flatcc_json_parser_unmatched_symbol@@Base+0xec>
   31df4:	ldrb	r0, [r2]
   31df8:	cmp	r0, #32
   31dfc:	bls	31e08 <flatcc_json_parser_unmatched_symbol@@Base+0xd8>
   31e00:	mov	r3, r2
   31e04:	b	31e30 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   31e08:	bne	31e1c <flatcc_json_parser_unmatched_symbol@@Base+0xec>
   31e0c:	mov	r3, r2
   31e10:	ldrb	r0, [r3, #1]!
   31e14:	cmp	r0, #32
   31e18:	bhi	31e30 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   31e1c:	mov	r1, r2
   31e20:	mov	r0, r5
   31e24:	mov	r2, r4
   31e28:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   31e2c:	mov	r3, r0
   31e30:	cmp	r3, r4
   31e34:	beq	31e68 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   31e38:	ldrb	r0, [r3]
   31e3c:	cmp	r0, #58	; 0x3a
   31e40:	bne	31e68 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   31e44:	add	r1, r3, #1
   31e48:	sub	r0, r4, r1
   31e4c:	cmp	r0, #2
   31e50:	blt	31ea8 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   31e54:	ldrb	r0, [r1]
   31e58:	cmp	r0, #32
   31e5c:	bls	31e98 <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   31e60:	mov	r3, r1
   31e64:	b	31eb8 <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   31e68:	ldr	r0, [r5, #20]
   31e6c:	cmp	r0, #0
   31e70:	bne	31e90 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   31e74:	str	r3, [r5, #32]
   31e78:	add	r2, r3, #1
   31e7c:	mov	r0, #4
   31e80:	ldr	r1, [r5, #4]
   31e84:	sub	r1, r2, r1
   31e88:	str	r1, [r5, #16]
   31e8c:	str	r0, [r5, #20]
   31e90:	mov	r0, r4
   31e94:	pop	{r4, r5, fp, pc}
   31e98:	bne	31ea8 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   31e9c:	ldrb	r0, [r3, #2]!
   31ea0:	cmp	r0, #32
   31ea4:	bhi	31eb8 <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   31ea8:	mov	r0, r5
   31eac:	mov	r2, r4
   31eb0:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   31eb4:	mov	r3, r0
   31eb8:	mov	r0, r5
   31ebc:	mov	r1, r3
   31ec0:	mov	r2, r4
   31ec4:	pop	{r4, r5, fp, lr}
   31ec8:	b	31ecc <flatcc_json_parser_generic_json@@Base>

00031ecc <flatcc_json_parser_generic_json@@Base>:
   31ecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31ed0:	add	fp, sp, #28
   31ed4:	sub	sp, sp, #548	; 0x224
   31ed8:	mov	r7, r1
   31edc:	cmp	r1, r2
   31ee0:	beq	32940 <flatcc_json_parser_generic_json@@Base+0xa74>
   31ee4:	mov	r5, r0
   31ee8:	add	r0, r2, #1
   31eec:	add	r1, sp, #20
   31ef0:	mov	r4, r2
   31ef4:	mov	r8, #0
   31ef8:	str	r0, [sp, #4]
   31efc:	add	r0, r5, #32
   31f00:	sub	r6, r1, #1
   31f04:	add	r9, r5, #4
   31f08:	add	sl, r5, #20
   31f0c:	str	r0, [sp, #12]
   31f10:	add	r0, r5, #16
   31f14:	str	r0, [sp, #8]
   31f18:	mov	r0, r1
   31f1c:	cmp	r8, #0
   31f20:	beq	32098 <flatcc_json_parser_generic_json@@Base+0x1cc>
   31f24:	ldrb	r0, [r0, #-1]
   31f28:	cmp	r0, #125	; 0x7d
   31f2c:	bne	32098 <flatcc_json_parser_generic_json@@Base+0x1cc>
   31f30:	ldrb	r0, [r7]
   31f34:	cmp	r0, #34	; 0x22
   31f38:	bne	31f84 <flatcc_json_parser_generic_json@@Base+0xb8>
   31f3c:	add	r0, r7, #1
   31f40:	mov	r2, r4
   31f44:	cmp	r0, r4
   31f48:	beq	31fbc <flatcc_json_parser_generic_json@@Base+0xf0>
   31f4c:	ldrb	r1, [r0]
   31f50:	cmp	r1, #92	; 0x5c
   31f54:	beq	31f64 <flatcc_json_parser_generic_json@@Base+0x98>
   31f58:	cmp	r1, #34	; 0x22
   31f5c:	bne	31f74 <flatcc_json_parser_generic_json@@Base+0xa8>
   31f60:	b	31ff8 <flatcc_json_parser_generic_json@@Base+0x12c>
   31f64:	sub	r1, r4, r0
   31f68:	cmp	r1, #2
   31f6c:	blt	324f4 <flatcc_json_parser_generic_json@@Base+0x628>
   31f70:	add	r0, r0, #1
   31f74:	add	r0, r0, #1
   31f78:	cmp	r0, r4
   31f7c:	bne	31f4c <flatcc_json_parser_generic_json@@Base+0x80>
   31f80:	b	31fb8 <flatcc_json_parser_generic_json@@Base+0xec>
   31f84:	ldr	r0, [sl]
   31f88:	mov	r1, r4
   31f8c:	cmp	r0, #0
   31f90:	bne	31ffc <flatcc_json_parser_generic_json@@Base+0x130>
   31f94:	mov	r0, #5
   31f98:	add	r1, r7, #1
   31f9c:	str	r0, [sl]
   31fa0:	ldr	r0, [r9]
   31fa4:	sub	r0, r1, r0
   31fa8:	ldr	r1, [sp, #8]
   31fac:	str	r0, [r1]
   31fb0:	ldr	r0, [sp, #12]
   31fb4:	str	r7, [r0]
   31fb8:	mov	r2, r4
   31fbc:	ldr	r0, [sl]
   31fc0:	mov	r1, r4
   31fc4:	cmp	r0, #0
   31fc8:	bne	31ffc <flatcc_json_parser_generic_json@@Base+0x130>
   31fcc:	mov	r0, #20
   31fd0:	add	r1, r2, #1
   31fd4:	str	r0, [sl]
   31fd8:	ldr	r0, [r9]
   31fdc:	sub	r0, r1, r0
   31fe0:	ldr	r1, [sp, #8]
   31fe4:	str	r0, [r1]
   31fe8:	ldr	r0, [sp, #12]
   31fec:	mov	r1, r4
   31ff0:	str	r2, [r0]
   31ff4:	b	31ffc <flatcc_json_parser_generic_json@@Base+0x130>
   31ff8:	add	r1, r0, #1
   31ffc:	sub	r0, r4, r1
   32000:	cmp	r0, #2
   32004:	blt	32030 <flatcc_json_parser_generic_json@@Base+0x164>
   32008:	ldrb	r0, [r1]
   3200c:	cmp	r0, #32
   32010:	bls	3201c <flatcc_json_parser_generic_json@@Base+0x150>
   32014:	mov	r7, r1
   32018:	b	32040 <flatcc_json_parser_generic_json@@Base+0x174>
   3201c:	bne	32030 <flatcc_json_parser_generic_json@@Base+0x164>
   32020:	mov	r7, r1
   32024:	ldrb	r0, [r7, #1]!
   32028:	cmp	r0, #32
   3202c:	bhi	32040 <flatcc_json_parser_generic_json@@Base+0x174>
   32030:	mov	r0, r5
   32034:	mov	r2, r4
   32038:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   3203c:	mov	r7, r0
   32040:	cmp	r7, r4
   32044:	beq	329c4 <flatcc_json_parser_generic_json@@Base+0xaf8>
   32048:	ldrb	r0, [r7]
   3204c:	cmp	r0, #58	; 0x3a
   32050:	bne	329dc <flatcc_json_parser_generic_json@@Base+0xb10>
   32054:	add	r1, r7, #1
   32058:	sub	r0, r4, r1
   3205c:	cmp	r0, #2
   32060:	blt	32088 <flatcc_json_parser_generic_json@@Base+0x1bc>
   32064:	ldrb	r0, [r1]
   32068:	cmp	r0, #32
   3206c:	bls	32078 <flatcc_json_parser_generic_json@@Base+0x1ac>
   32070:	mov	r7, r1
   32074:	b	3209c <flatcc_json_parser_generic_json@@Base+0x1d0>
   32078:	bne	32088 <flatcc_json_parser_generic_json@@Base+0x1bc>
   3207c:	ldrb	r0, [r7, #2]!
   32080:	cmp	r0, #32
   32084:	bhi	3209c <flatcc_json_parser_generic_json@@Base+0x1d0>
   32088:	mov	r0, r5
   3208c:	mov	r2, r4
   32090:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   32094:	mov	r7, r0
   32098:	ldrb	r0, [r7]
   3209c:	cmp	r0, #90	; 0x5a
   320a0:	bgt	32120 <flatcc_json_parser_generic_json@@Base+0x254>
   320a4:	sub	r1, r0, #48	; 0x30
   320a8:	cmp	r1, #10
   320ac:	bcs	321bc <flatcc_json_parser_generic_json@@Base+0x2f0>
   320b0:	cmp	r7, r4
   320b4:	beq	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   320b8:	cmp	r0, #45	; 0x2d
   320bc:	bne	320d0 <flatcc_json_parser_generic_json@@Base+0x204>
   320c0:	add	r7, r7, #1
   320c4:	cmp	r7, r4
   320c8:	beq	3246c <flatcc_json_parser_generic_json@@Base+0x5a0>
   320cc:	ldrb	r0, [r7]
   320d0:	cmp	r0, #48	; 0x30
   320d4:	bne	32178 <flatcc_json_parser_generic_json@@Base+0x2ac>
   320d8:	add	r1, r7, #1
   320dc:	cmp	r1, r4
   320e0:	mov	r2, r4
   320e4:	beq	32484 <flatcc_json_parser_generic_json@@Base+0x5b8>
   320e8:	ldrb	r0, [r1]
   320ec:	cmp	r0, #46	; 0x2e
   320f0:	bne	323bc <flatcc_json_parser_generic_json@@Base+0x4f0>
   320f4:	mov	r0, r1
   320f8:	ldrb	r2, [r0, #1]!
   320fc:	sub	r2, r2, #48	; 0x30
   32100:	uxtb	r2, r2
   32104:	cmp	r2, #10
   32108:	bcc	32388 <flatcc_json_parser_generic_json@@Base+0x4bc>
   3210c:	ldr	r1, [sl]
   32110:	cmp	r1, #0
   32114:	bne	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   32118:	mov	r1, #6
   3211c:	b	325f4 <flatcc_json_parser_generic_json@@Base+0x728>
   32120:	cmp	r0, #109	; 0x6d
   32124:	ble	321d0 <flatcc_json_parser_generic_json@@Base+0x304>
   32128:	cmp	r0, #110	; 0x6e
   3212c:	beq	322b4 <flatcc_json_parser_generic_json@@Base+0x3e8>
   32130:	cmp	r0, #116	; 0x74
   32134:	beq	321e0 <flatcc_json_parser_generic_json@@Base+0x314>
   32138:	cmp	r0, #123	; 0x7b
   3213c:	bne	32948 <flatcc_json_parser_generic_json@@Base+0xa7c>
   32140:	cmp	r8, #512	; 0x200
   32144:	beq	329f0 <flatcc_json_parser_generic_json@@Base+0xb24>
   32148:	add	r0, sp, #20
   3214c:	mov	r1, #125	; 0x7d
   32150:	strb	r1, [r0, r8]
   32154:	add	r1, r7, #1
   32158:	sub	r0, r4, r1
   3215c:	cmp	r0, #2
   32160:	blt	32528 <flatcc_json_parser_generic_json@@Base+0x65c>
   32164:	ldrb	r0, [r1]
   32168:	cmp	r0, #32
   3216c:	bls	32518 <flatcc_json_parser_generic_json@@Base+0x64c>
   32170:	mov	r7, r1
   32174:	b	32538 <flatcc_json_parser_generic_json@@Base+0x66c>
   32178:	sub	r0, r0, #49	; 0x31
   3217c:	uxtb	r0, r0
   32180:	cmp	r0, #8
   32184:	bls	3228c <flatcc_json_parser_generic_json@@Base+0x3c0>
   32188:	ldr	r0, [sl]
   3218c:	cmp	r0, #0
   32190:	bne	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   32194:	mov	r0, #6
   32198:	add	r1, r7, #1
   3219c:	str	r0, [sl]
   321a0:	ldr	r0, [r9]
   321a4:	sub	r0, r1, r0
   321a8:	ldr	r1, [sp, #8]
   321ac:	str	r0, [r1]
   321b0:	ldr	r0, [sp, #12]
   321b4:	str	r7, [r0]
   321b8:	b	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   321bc:	cmp	r0, #34	; 0x22
   321c0:	beq	322e0 <flatcc_json_parser_generic_json@@Base+0x414>
   321c4:	cmp	r0, #45	; 0x2d
   321c8:	beq	320b0 <flatcc_json_parser_generic_json@@Base+0x1e4>
   321cc:	b	32948 <flatcc_json_parser_generic_json@@Base+0xa7c>
   321d0:	cmp	r0, #91	; 0x5b
   321d4:	beq	32350 <flatcc_json_parser_generic_json@@Base+0x484>
   321d8:	cmp	r0, #102	; 0x66
   321dc:	bne	32948 <flatcc_json_parser_generic_json@@Base+0xa7c>
   321e0:	sub	r0, r4, r7
   321e4:	cmp	r0, #4
   321e8:	blt	32224 <flatcc_json_parser_generic_json@@Base+0x358>
   321ec:	ldr	r1, [r7]
   321f0:	movw	r2, #29300	; 0x7274
   321f4:	movt	r2, #25973	; 0x6575
   321f8:	cmp	r1, r2
   321fc:	beq	324b8 <flatcc_json_parser_generic_json@@Base+0x5ec>
   32200:	cmp	r0, #5
   32204:	blt	32224 <flatcc_json_parser_generic_json@@Base+0x358>
   32208:	movw	r1, #15817	; 0x3dc9
   3220c:	mov	r0, r7
   32210:	mov	r2, #5
   32214:	movt	r1, #4
   32218:	bl	14e6c <memcmp@plt>
   3221c:	cmp	r0, #0
   32220:	beq	328f0 <flatcc_json_parser_generic_json@@Base+0xa24>
   32224:	mov	r0, #0
   32228:	cmp	r7, r4
   3222c:	mov	r1, r4
   32230:	str	r0, [fp, #-36]	; 0xffffffdc
   32234:	str	r0, [fp, #-40]	; 0xffffffd8
   32238:	str	r0, [fp, #-44]	; 0xffffffd4
   3223c:	beq	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   32240:	sub	r0, fp, #40	; 0x28
   32244:	mov	r1, r7
   32248:	mov	r2, r4
   3224c:	sub	r3, fp, #44	; 0x2c
   32250:	str	r0, [sp]
   32254:	mov	r0, r5
   32258:	bl	334d0 <flatcc_json_parser_integer@@Base>
   3225c:	cmp	r0, r7
   32260:	mov	r1, r7
   32264:	beq	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   32268:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3226c:	cmp	r1, #0
   32270:	beq	32590 <flatcc_json_parser_generic_json@@Base+0x6c4>
   32274:	ldr	r1, [sl]
   32278:	cmp	r1, #0
   3227c:	mov	r1, r4
   32280:	bne	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   32284:	mov	r1, #8
   32288:	b	325b8 <flatcc_json_parser_generic_json@@Base+0x6ec>
   3228c:	add	r0, r7, #1
   32290:	cmp	r4, r0
   32294:	beq	32480 <flatcc_json_parser_generic_json@@Base+0x5b4>
   32298:	ldrb	r1, [r0], #1
   3229c:	sub	r1, r1, #48	; 0x30
   322a0:	uxtb	r1, r1
   322a4:	cmp	r1, #10
   322a8:	bcc	32290 <flatcc_json_parser_generic_json@@Base+0x3c4>
   322ac:	sub	r1, r0, #1
   322b0:	b	320dc <flatcc_json_parser_generic_json@@Base+0x210>
   322b4:	sub	r0, r4, r7
   322b8:	mov	r1, r7
   322bc:	cmp	r0, #4
   322c0:	blt	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   322c4:	mov	r1, r7
   322c8:	movw	r2, #30062	; 0x756e
   322cc:	ldr	r0, [r1], #4
   322d0:	movt	r2, #27756	; 0x6c6c
   322d4:	cmp	r0, r2
   322d8:	movne	r1, r7
   322dc:	b	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   322e0:	cmp	r7, r4
   322e4:	beq	324c0 <flatcc_json_parser_generic_json@@Base+0x5f4>
   322e8:	add	r1, r7, #1
   322ec:	mov	r0, r4
   322f0:	add	r7, sp, #16
   322f4:	cmp	r1, r4
   322f8:	beq	325e4 <flatcc_json_parser_generic_json@@Base+0x718>
   322fc:	ldrb	r0, [r1]
   32300:	cmp	r0, #34	; 0x22
   32304:	beq	324fc <flatcc_json_parser_generic_json@@Base+0x630>
   32308:	mov	r0, r5
   3230c:	mov	r2, r4
   32310:	bl	316fc <flatcc_json_parser_string_part@@Base>
   32314:	mov	r1, r0
   32318:	cmp	r0, r4
   3231c:	beq	3232c <flatcc_json_parser_generic_json@@Base+0x460>
   32320:	ldrb	r0, [r1]
   32324:	cmp	r0, #34	; 0x22
   32328:	beq	324fc <flatcc_json_parser_generic_json@@Base+0x630>
   3232c:	mov	r0, r5
   32330:	mov	r2, r4
   32334:	mov	r3, r7
   32338:	bl	31850 <flatcc_json_parser_string_escape@@Base>
   3233c:	mov	r1, r0
   32340:	cmp	r0, r4
   32344:	bne	322fc <flatcc_json_parser_generic_json@@Base+0x430>
   32348:	mov	r0, r4
   3234c:	b	325e4 <flatcc_json_parser_generic_json@@Base+0x718>
   32350:	cmp	r8, #512	; 0x200
   32354:	beq	329f0 <flatcc_json_parser_generic_json@@Base+0xb24>
   32358:	add	r0, sp, #20
   3235c:	mov	r1, #93	; 0x5d
   32360:	strb	r1, [r0, r8]
   32364:	add	r1, r7, #1
   32368:	sub	r0, r4, r1
   3236c:	cmp	r0, #2
   32370:	blt	32560 <flatcc_json_parser_generic_json@@Base+0x694>
   32374:	ldrb	r0, [r1]
   32378:	cmp	r0, #32
   3237c:	bls	32550 <flatcc_json_parser_generic_json@@Base+0x684>
   32380:	mov	r7, r1
   32384:	b	32570 <flatcc_json_parser_generic_json@@Base+0x6a4>
   32388:	add	r1, r1, #2
   3238c:	mov	r2, r4
   32390:	cmp	r1, r4
   32394:	beq	32484 <flatcc_json_parser_generic_json@@Base+0x5b8>
   32398:	ldrb	r0, [r1]
   3239c:	sub	r2, r0, #48	; 0x30
   323a0:	uxtb	r2, r2
   323a4:	cmp	r2, #9
   323a8:	bhi	323bc <flatcc_json_parser_generic_json@@Base+0x4f0>
   323ac:	add	r1, r1, #1
   323b0:	cmp	r4, r1
   323b4:	bne	32398 <flatcc_json_parser_generic_json@@Base+0x4cc>
   323b8:	b	32480 <flatcc_json_parser_generic_json@@Base+0x5b4>
   323bc:	cmp	r1, r4
   323c0:	mov	r2, r4
   323c4:	beq	32484 <flatcc_json_parser_generic_json@@Base+0x5b8>
   323c8:	orr	r2, r0, #32
   323cc:	cmp	r2, #101	; 0x65
   323d0:	bne	32430 <flatcc_json_parser_generic_json@@Base+0x564>
   323d4:	add	r0, r1, #1
   323d8:	cmp	r0, r4
   323dc:	beq	3246c <flatcc_json_parser_generic_json@@Base+0x5a0>
   323e0:	ldrb	r2, [r0]
   323e4:	cmp	r2, #45	; 0x2d
   323e8:	cmpne	r2, #43	; 0x2b
   323ec:	addeq	r0, r1, #2
   323f0:	cmp	r0, r4
   323f4:	beq	3210c <flatcc_json_parser_generic_json@@Base+0x240>
   323f8:	ldrb	r1, [r0]
   323fc:	sub	r1, r1, #48	; 0x30
   32400:	uxtb	r1, r1
   32404:	cmp	r1, #9
   32408:	bhi	3210c <flatcc_json_parser_generic_json@@Base+0x240>
   3240c:	add	r1, r0, #1
   32410:	cmp	r4, r1
   32414:	beq	32480 <flatcc_json_parser_generic_json@@Base+0x5b4>
   32418:	ldrb	r0, [r1], #1
   3241c:	sub	r2, r0, #48	; 0x30
   32420:	uxtb	r2, r2
   32424:	cmp	r2, #10
   32428:	bcc	32410 <flatcc_json_parser_generic_json@@Base+0x544>
   3242c:	sub	r1, r1, #1
   32430:	cmp	r1, r4
   32434:	mov	r2, r4
   32438:	beq	32484 <flatcc_json_parser_generic_json@@Base+0x5b8>
   3243c:	cmp	r0, #43	; 0x2b
   32440:	bgt	32908 <flatcc_json_parser_generic_json@@Base+0xa3c>
   32444:	sub	r0, r0, #9
   32448:	cmp	r0, #23
   3244c:	bhi	32938 <flatcc_json_parser_generic_json@@Base+0xa6c>
   32450:	movw	r3, #23
   32454:	mov	r2, #1
   32458:	movt	r3, #128	; 0x80
   3245c:	tst	r3, r2, lsl r0
   32460:	mov	r2, r1
   32464:	bne	32618 <flatcc_json_parser_generic_json@@Base+0x74c>
   32468:	b	32484 <flatcc_json_parser_generic_json@@Base+0x5b8>
   3246c:	ldr	r0, [sl]
   32470:	cmp	r0, #0
   32474:	bne	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   32478:	mov	r0, #6
   3247c:	b	324d0 <flatcc_json_parser_generic_json@@Base+0x604>
   32480:	mov	r2, r4
   32484:	ldr	r0, [sl]
   32488:	cmp	r0, #0
   3248c:	bne	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   32490:	mov	r0, #6
   32494:	add	r1, r2, #1
   32498:	str	r0, [sl]
   3249c:	ldr	r0, [r9]
   324a0:	sub	r0, r1, r0
   324a4:	ldr	r1, [sp, #8]
   324a8:	str	r0, [r1]
   324ac:	ldr	r0, [sp, #12]
   324b0:	str	r2, [r0]
   324b4:	b	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   324b8:	add	r1, r7, #4
   324bc:	b	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   324c0:	ldr	r0, [sl]
   324c4:	cmp	r0, #0
   324c8:	bne	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   324cc:	mov	r0, #16
   324d0:	str	r0, [sl]
   324d4:	ldr	r1, [sp, #4]
   324d8:	ldr	r0, [r9]
   324dc:	sub	r0, r1, r0
   324e0:	ldr	r1, [sp, #8]
   324e4:	str	r0, [r1]
   324e8:	ldr	r0, [sp, #12]
   324ec:	str	r4, [r0]
   324f0:	b	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   324f4:	mov	r2, r0
   324f8:	b	31fbc <flatcc_json_parser_generic_json@@Base+0xf0>
   324fc:	cmp	r1, r4
   32500:	beq	325e0 <flatcc_json_parser_generic_json@@Base+0x714>
   32504:	ldrb	r0, [r1]
   32508:	cmp	r0, #34	; 0x22
   3250c:	bne	325e0 <flatcc_json_parser_generic_json@@Base+0x714>
   32510:	add	r1, r1, #1
   32514:	b	32618 <flatcc_json_parser_generic_json@@Base+0x74c>
   32518:	bne	32528 <flatcc_json_parser_generic_json@@Base+0x65c>
   3251c:	ldrb	r0, [r7, #2]!
   32520:	cmp	r0, #32
   32524:	bhi	32538 <flatcc_json_parser_generic_json@@Base+0x66c>
   32528:	mov	r0, r5
   3252c:	mov	r2, r4
   32530:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   32534:	mov	r7, r0
   32538:	cmp	r7, r4
   3253c:	beq	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   32540:	ldrb	r0, [r7]
   32544:	add	r8, r8, #1
   32548:	cmp	r0, #125	; 0x7d
   3254c:	b	32584 <flatcc_json_parser_generic_json@@Base+0x6b8>
   32550:	bne	32560 <flatcc_json_parser_generic_json@@Base+0x694>
   32554:	ldrb	r0, [r7, #2]!
   32558:	cmp	r0, #32
   3255c:	bhi	32570 <flatcc_json_parser_generic_json@@Base+0x6a4>
   32560:	mov	r0, r5
   32564:	mov	r2, r4
   32568:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   3256c:	mov	r7, r0
   32570:	cmp	r7, r4
   32574:	beq	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   32578:	ldrb	r0, [r7]
   3257c:	add	r8, r8, #1
   32580:	cmp	r0, #93	; 0x5d
   32584:	mov	r1, r7
   32588:	beq	32618 <flatcc_json_parser_generic_json@@Base+0x74c>
   3258c:	b	328dc <flatcc_json_parser_generic_json@@Base+0xa10>
   32590:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32594:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32598:	subs	r1, r1, #256	; 0x100
   3259c:	sbcs	r1, r2, #0
   325a0:	bcc	328f8 <flatcc_json_parser_generic_json@@Base+0xa2c>
   325a4:	ldr	r1, [sl]
   325a8:	cmp	r1, #0
   325ac:	mov	r1, r4
   325b0:	bne	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   325b4:	mov	r1, #7
   325b8:	str	r1, [sl]
   325bc:	add	r2, r0, #1
   325c0:	ldr	r1, [r9]
   325c4:	sub	r1, r2, r1
   325c8:	ldr	r2, [sp, #8]
   325cc:	str	r1, [r2]
   325d0:	ldr	r1, [sp, #12]
   325d4:	str	r0, [r1]
   325d8:	mov	r1, r4
   325dc:	b	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   325e0:	mov	r0, r1
   325e4:	ldr	r1, [sl]
   325e8:	cmp	r1, #0
   325ec:	bne	32614 <flatcc_json_parser_generic_json@@Base+0x748>
   325f0:	mov	r1, #20
   325f4:	str	r1, [sl]
   325f8:	add	r2, r0, #1
   325fc:	ldr	r1, [r9]
   32600:	sub	r1, r2, r1
   32604:	ldr	r2, [sp, #8]
   32608:	str	r1, [r2]
   3260c:	ldr	r1, [sp, #12]
   32610:	str	r0, [r1]
   32614:	mov	r1, r4
   32618:	subs	r0, r1, r4
   3261c:	mov	r3, r8
   32620:	movwne	r0, #1
   32624:	cmp	r8, #0
   32628:	movwne	r3, #1
   3262c:	cmp	r1, r4
   32630:	cmpne	r8, #0
   32634:	beq	3295c <flatcc_json_parser_generic_json@@Base+0xa90>
   32638:	ldrb	r2, [r6, r8]
   3263c:	sub	r0, r4, r1
   32640:	cmp	r2, #93	; 0x5d
   32644:	bne	32664 <flatcc_json_parser_generic_json@@Base+0x798>
   32648:	cmp	r0, #2
   3264c:	blt	32694 <flatcc_json_parser_generic_json@@Base+0x7c8>
   32650:	ldrb	r0, [r1]
   32654:	cmp	r0, #32
   32658:	bls	32680 <flatcc_json_parser_generic_json@@Base+0x7b4>
   3265c:	mov	r7, r1
   32660:	b	326a4 <flatcc_json_parser_generic_json@@Base+0x7d8>
   32664:	cmp	r0, #2
   32668:	blt	326f0 <flatcc_json_parser_generic_json@@Base+0x824>
   3266c:	ldrb	r0, [r1]
   32670:	cmp	r0, #32
   32674:	bls	326dc <flatcc_json_parser_generic_json@@Base+0x810>
   32678:	mov	r7, r1
   3267c:	b	32700 <flatcc_json_parser_generic_json@@Base+0x834>
   32680:	bne	32694 <flatcc_json_parser_generic_json@@Base+0x7c8>
   32684:	mov	r7, r1
   32688:	ldrb	r0, [r7, #1]!
   3268c:	cmp	r0, #32
   32690:	bhi	326a4 <flatcc_json_parser_generic_json@@Base+0x7d8>
   32694:	mov	r0, r5
   32698:	mov	r2, r4
   3269c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   326a0:	mov	r7, r0
   326a4:	cmp	r7, r4
   326a8:	mov	r1, r4
   326ac:	beq	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   326b0:	ldrb	r0, [r7]
   326b4:	cmp	r0, #44	; 0x2c
   326b8:	beq	3275c <flatcc_json_parser_generic_json@@Base+0x890>
   326bc:	cmp	r0, #93	; 0x5d
   326c0:	beq	32828 <flatcc_json_parser_generic_json@@Base+0x95c>
   326c4:	ldr	r0, [sl]
   326c8:	mov	r1, r4
   326cc:	cmp	r0, #0
   326d0:	bne	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   326d4:	mov	r0, #9
   326d8:	b	32734 <flatcc_json_parser_generic_json@@Base+0x868>
   326dc:	bne	326f0 <flatcc_json_parser_generic_json@@Base+0x824>
   326e0:	mov	r7, r1
   326e4:	ldrb	r0, [r7, #1]!
   326e8:	cmp	r0, #32
   326ec:	bhi	32700 <flatcc_json_parser_generic_json@@Base+0x834>
   326f0:	mov	r0, r5
   326f4:	mov	r2, r4
   326f8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   326fc:	mov	r7, r0
   32700:	cmp	r7, r4
   32704:	mov	r1, r4
   32708:	beq	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   3270c:	ldrb	r0, [r7]
   32710:	cmp	r0, #44	; 0x2c
   32714:	beq	32780 <flatcc_json_parser_generic_json@@Base+0x8b4>
   32718:	cmp	r0, #125	; 0x7d
   3271c:	beq	32828 <flatcc_json_parser_generic_json@@Base+0x95c>
   32720:	ldr	r0, [sl]
   32724:	mov	r1, r4
   32728:	cmp	r0, #0
   3272c:	bne	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   32730:	mov	r0, #10
   32734:	str	r0, [sl]
   32738:	add	r1, r7, #1
   3273c:	ldr	r0, [r9]
   32740:	sub	r0, r1, r0
   32744:	ldr	r1, [sp, #8]
   32748:	str	r0, [r1]
   3274c:	ldr	r0, [sp, #12]
   32750:	mov	r1, r4
   32754:	str	r7, [r0]
   32758:	b	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   3275c:	add	r1, r7, #1
   32760:	sub	r0, r4, r1
   32764:	cmp	r0, #2
   32768:	blt	327b4 <flatcc_json_parser_generic_json@@Base+0x8e8>
   3276c:	ldrb	r0, [r1]
   32770:	cmp	r0, #32
   32774:	bls	327a4 <flatcc_json_parser_generic_json@@Base+0x8d8>
   32778:	mov	r7, r1
   3277c:	b	327c4 <flatcc_json_parser_generic_json@@Base+0x8f8>
   32780:	add	r1, r7, #1
   32784:	sub	r0, r4, r1
   32788:	cmp	r0, #2
   3278c:	blt	32804 <flatcc_json_parser_generic_json@@Base+0x938>
   32790:	ldrb	r0, [r1]
   32794:	cmp	r0, #32
   32798:	bls	327f4 <flatcc_json_parser_generic_json@@Base+0x928>
   3279c:	mov	r7, r1
   327a0:	b	32814 <flatcc_json_parser_generic_json@@Base+0x948>
   327a4:	bne	327b4 <flatcc_json_parser_generic_json@@Base+0x8e8>
   327a8:	ldrb	r0, [r7, #2]!
   327ac:	cmp	r0, #32
   327b0:	bhi	327c4 <flatcc_json_parser_generic_json@@Base+0x8f8>
   327b4:	mov	r0, r5
   327b8:	mov	r2, r4
   327bc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   327c0:	mov	r7, r0
   327c4:	cmp	r7, r4
   327c8:	beq	327dc <flatcc_json_parser_generic_json@@Base+0x910>
   327cc:	ldrb	r0, [r7]
   327d0:	cmp	r0, #93	; 0x5d
   327d4:	beq	32828 <flatcc_json_parser_generic_json@@Base+0x95c>
   327d8:	b	328dc <flatcc_json_parser_generic_json@@Base+0xa10>
   327dc:	ldr	r0, [sl]
   327e0:	mov	r1, r4
   327e4:	cmp	r0, #0
   327e8:	bne	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   327ec:	mov	r0, #9
   327f0:	b	328b4 <flatcc_json_parser_generic_json@@Base+0x9e8>
   327f4:	bne	32804 <flatcc_json_parser_generic_json@@Base+0x938>
   327f8:	ldrb	r0, [r7, #2]!
   327fc:	cmp	r0, #32
   32800:	bhi	32814 <flatcc_json_parser_generic_json@@Base+0x948>
   32804:	mov	r0, r5
   32808:	mov	r2, r4
   3280c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   32810:	mov	r7, r0
   32814:	cmp	r7, r4
   32818:	beq	328a0 <flatcc_json_parser_generic_json@@Base+0x9d4>
   3281c:	ldrb	r0, [r7]
   32820:	cmp	r0, #125	; 0x7d
   32824:	bne	328dc <flatcc_json_parser_generic_json@@Base+0xa10>
   32828:	add	r2, r7, #1
   3282c:	sub	r0, r4, r2
   32830:	cmp	r0, #2
   32834:	blt	32860 <flatcc_json_parser_generic_json@@Base+0x994>
   32838:	ldrb	r0, [r2]
   3283c:	cmp	r0, #32
   32840:	bls	3284c <flatcc_json_parser_generic_json@@Base+0x980>
   32844:	mov	r1, r2
   32848:	b	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   3284c:	bne	32860 <flatcc_json_parser_generic_json@@Base+0x994>
   32850:	ldrb	r0, [r7, #2]!
   32854:	cmp	r0, #32
   32858:	mov	r1, r7
   3285c:	bhi	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   32860:	mov	r1, r2
   32864:	mov	r0, r5
   32868:	mov	r2, r4
   3286c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   32870:	mov	r1, r0
   32874:	subs	r0, r1, r4
   32878:	sub	r2, r8, #1
   3287c:	movwne	r0, #1
   32880:	subs	r3, r8, #1
   32884:	movwne	r3, #1
   32888:	cmp	r1, r4
   3288c:	beq	32960 <flatcc_json_parser_generic_json@@Base+0xa94>
   32890:	cmp	r8, #1
   32894:	mov	r8, r2
   32898:	bne	32638 <flatcc_json_parser_generic_json@@Base+0x76c>
   3289c:	b	32960 <flatcc_json_parser_generic_json@@Base+0xa94>
   328a0:	ldr	r0, [sl]
   328a4:	mov	r1, r4
   328a8:	cmp	r0, #0
   328ac:	bne	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   328b0:	mov	r0, #10
   328b4:	str	r0, [sl]
   328b8:	ldr	r1, [sp, #4]
   328bc:	ldr	r0, [r9]
   328c0:	sub	r0, r1, r0
   328c4:	ldr	r1, [sp, #8]
   328c8:	str	r0, [r1]
   328cc:	ldr	r0, [sp, #12]
   328d0:	mov	r1, r4
   328d4:	str	r4, [r0]
   328d8:	b	32874 <flatcc_json_parser_generic_json@@Base+0x9a8>
   328dc:	add	r0, sp, #20
   328e0:	cmp	r7, r4
   328e4:	add	r0, r0, r8
   328e8:	bne	31f1c <flatcc_json_parser_generic_json@@Base+0x50>
   328ec:	b	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   328f0:	add	r1, r7, #5
   328f4:	b	328fc <flatcc_json_parser_generic_json@@Base+0xa30>
   328f8:	mov	r1, r0
   328fc:	cmp	r7, r1
   32900:	bne	32618 <flatcc_json_parser_generic_json@@Base+0x74c>
   32904:	b	32948 <flatcc_json_parser_generic_json@@Base+0xa7c>
   32908:	cmp	r0, #92	; 0x5c
   3290c:	bgt	32920 <flatcc_json_parser_generic_json@@Base+0xa54>
   32910:	cmp	r0, #44	; 0x2c
   32914:	beq	32618 <flatcc_json_parser_generic_json@@Base+0x74c>
   32918:	cmp	r0, #58	; 0x3a
   3291c:	b	3292c <flatcc_json_parser_generic_json@@Base+0xa60>
   32920:	cmp	r0, #93	; 0x5d
   32924:	beq	32618 <flatcc_json_parser_generic_json@@Base+0x74c>
   32928:	cmp	r0, #125	; 0x7d
   3292c:	mov	r2, r1
   32930:	beq	32618 <flatcc_json_parser_generic_json@@Base+0x74c>
   32934:	b	32484 <flatcc_json_parser_generic_json@@Base+0x5b8>
   32938:	mov	r2, r1
   3293c:	b	32484 <flatcc_json_parser_generic_json@@Base+0x5b8>
   32940:	mov	r1, r7
   32944:	b	329b8 <flatcc_json_parser_generic_json@@Base+0xaec>
   32948:	ldr	r0, [sl]
   3294c:	cmp	r0, #0
   32950:	bne	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   32954:	mov	r0, #5
   32958:	b	32a00 <flatcc_json_parser_generic_json@@Base+0xb34>
   3295c:	mov	r2, r8
   32960:	cmp	r0, #0
   32964:	bne	329b8 <flatcc_json_parser_generic_json@@Base+0xaec>
   32968:	cmp	r3, #0
   3296c:	beq	329b8 <flatcc_json_parser_generic_json@@Base+0xaec>
   32970:	ldr	r0, [sl]
   32974:	cmp	r0, #0
   32978:	bne	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   3297c:	add	r0, sp, #20
   32980:	mov	r1, #10
   32984:	add	r0, r0, r2
   32988:	ldrb	r0, [r0, #-1]
   3298c:	cmp	r0, #93	; 0x5d
   32990:	movweq	r1, #9
   32994:	str	r1, [sl]
   32998:	ldr	r0, [r9]
   3299c:	ldr	r1, [sp, #4]
   329a0:	sub	r0, r1, r0
   329a4:	ldr	r1, [sp, #8]
   329a8:	str	r0, [r1]
   329ac:	ldr	r0, [sp, #12]
   329b0:	str	r4, [r0]
   329b4:	mov	r1, r4
   329b8:	mov	r0, r1
   329bc:	sub	sp, fp, #28
   329c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   329c4:	ldr	r0, [sl]
   329c8:	cmp	r0, #0
   329cc:	bne	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   329d0:	mov	r0, #10
   329d4:	str	r0, [sl]
   329d8:	b	32998 <flatcc_json_parser_generic_json@@Base+0xacc>
   329dc:	ldr	r0, [sl]
   329e0:	cmp	r0, #0
   329e4:	bne	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   329e8:	mov	r0, #4
   329ec:	b	32a00 <flatcc_json_parser_generic_json@@Base+0xb34>
   329f0:	ldr	r0, [sl]
   329f4:	cmp	r0, #0
   329f8:	bne	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>
   329fc:	mov	r0, #2
   32a00:	str	r0, [sl]
   32a04:	add	r1, r7, #1
   32a08:	ldr	r0, [r9]
   32a0c:	sub	r0, r1, r0
   32a10:	ldr	r1, [sp, #8]
   32a14:	str	r0, [r1]
   32a18:	ldr	r0, [sp, #12]
   32a1c:	str	r7, [r0]
   32a20:	b	329b4 <flatcc_json_parser_generic_json@@Base+0xae8>

00032a24 <flatcc_json_parser_double@@Base>:
   32a24:	push	{r4, r5, r6, r7, fp, lr}
   32a28:	add	fp, sp, #16
   32a2c:	mov	r5, r0
   32a30:	mov	r0, #0
   32a34:	mov	r6, r1
   32a38:	cmp	r1, r2
   32a3c:	str	r0, [r3]
   32a40:	str	r0, [r3, #4]
   32a44:	moveq	r0, r6
   32a48:	popeq	{r4, r5, r6, r7, fp, pc}
   32a4c:	mov	r0, r6
   32a50:	mov	r4, r2
   32a54:	mov	r7, r3
   32a58:	ldrb	r1, [r0], #1
   32a5c:	cmp	r1, #45	; 0x2d
   32a60:	movne	r0, r6
   32a64:	sub	r2, r2, r0
   32a68:	cmp	r2, #2
   32a6c:	blt	32a98 <flatcc_json_parser_double@@Base+0x74>
   32a70:	sub	r1, r1, #45	; 0x2d
   32a74:	clz	r1, r1
   32a78:	lsr	r1, r1, #5
   32a7c:	ldrb	r1, [r6, r1]
   32a80:	cmp	r1, #46	; 0x2e
   32a84:	beq	32ae4 <flatcc_json_parser_double@@Base+0xc0>
   32a88:	cmp	r1, #48	; 0x30
   32a8c:	ldrbeq	r0, [r0, #1]
   32a90:	cmpeq	r0, #48	; 0x30
   32a94:	beq	32ae4 <flatcc_json_parser_double@@Base+0xc0>
   32a98:	sub	r1, r4, r6
   32a9c:	mov	r0, r6
   32aa0:	mov	r2, r7
   32aa4:	bl	32b18 <flatcc_json_parser_double@@Base+0xf4>
   32aa8:	cmp	r0, #0
   32aac:	cmpne	r0, r6
   32ab0:	popne	{r4, r5, r6, r7, fp, pc}
   32ab4:	vldr	d0, [r7]
   32ab8:	bl	14e84 <__isinf@plt>
   32abc:	ldr	r1, [r5, #20]
   32ac0:	cmp	r0, #0
   32ac4:	beq	32ad8 <flatcc_json_parser_double@@Base+0xb4>
   32ac8:	cmp	r1, #0
   32acc:	bne	32b0c <flatcc_json_parser_double@@Base+0xe8>
   32ad0:	mov	r0, #7
   32ad4:	b	32af4 <flatcc_json_parser_double@@Base+0xd0>
   32ad8:	cmp	r1, #0
   32adc:	bne	32b0c <flatcc_json_parser_double@@Base+0xe8>
   32ae0:	b	32af0 <flatcc_json_parser_double@@Base+0xcc>
   32ae4:	ldr	r0, [r5, #20]
   32ae8:	cmp	r0, #0
   32aec:	bne	32b0c <flatcc_json_parser_double@@Base+0xe8>
   32af0:	mov	r0, #6
   32af4:	str	r6, [r5, #32]
   32af8:	add	r2, r6, #1
   32afc:	ldr	r1, [r5, #4]
   32b00:	sub	r1, r2, r1
   32b04:	str	r1, [r5, #16]
   32b08:	str	r0, [r5, #20]
   32b0c:	mov	r0, r4
   32b10:	pop	{r4, r5, r6, r7, fp, pc}
   32b14:	nop	{0}
   32b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b1c:	add	fp, sp, #28
   32b20:	sub	sp, sp, #36	; 0x24
   32b24:	cmp	r1, #1000	; 0x3e8
   32b28:	mov	r3, r1
   32b2c:	mov	r6, #0
   32b30:	mov	r9, r0
   32b34:	movge	r1, #1000	; 0x3e8
   32b38:	str	r6, [r2]
   32b3c:	str	r6, [r2, #4]
   32b40:	add	lr, r0, r1
   32b44:	add	r4, lr, #1
   32b48:	cmp	r4, r0
   32b4c:	beq	32bc0 <flatcc_json_parser_double@@Base+0x19c>
   32b50:	ldrb	r0, [r9]
   32b54:	mov	r5, r9
   32b58:	cmp	r0, #45	; 0x2d
   32b5c:	bne	32b74 <flatcc_json_parser_double@@Base+0x150>
   32b60:	cmp	r1, #0
   32b64:	beq	32f14 <flatcc_json_parser_double@@Base+0x4f0>
   32b68:	add	r5, r9, #1
   32b6c:	mov	r6, #1
   32b70:	ldrb	r0, [r5]
   32b74:	cmp	r0, #48	; 0x30
   32b78:	bne	32ba8 <flatcc_json_parser_double@@Base+0x184>
   32b7c:	add	ip, r5, #1
   32b80:	cmp	r5, lr
   32b84:	beq	32c08 <flatcc_json_parser_double@@Base+0x1e4>
   32b88:	ldrb	r1, [ip]
   32b8c:	orr	r0, r1, #32
   32b90:	cmp	r0, #120	; 0x78
   32b94:	bne	32bd8 <flatcc_json_parser_double@@Base+0x1b4>
   32b98:	mov	r0, #0
   32b9c:	str	r0, [r2]
   32ba0:	str	r0, [r2, #4]
   32ba4:	b	32bc0 <flatcc_json_parser_double@@Base+0x19c>
   32ba8:	sub	r1, r0, #49	; 0x31
   32bac:	uxtb	r1, r1
   32bb0:	cmp	r1, #9
   32bb4:	bcc	32bc8 <flatcc_json_parser_double@@Base+0x1a4>
   32bb8:	cmp	r6, #0
   32bbc:	movne	r9, #0
   32bc0:	mov	r2, r9
   32bc4:	b	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32bc8:	sub	r0, r0, #48	; 0x30
   32bcc:	add	ip, r5, #1
   32bd0:	asr	r1, r0, #31
   32bd4:	b	32c10 <flatcc_json_parser_double@@Base+0x1ec>
   32bd8:	cmp	r1, #48	; 0x30
   32bdc:	mov	r0, #0
   32be0:	mov	r1, #0
   32be4:	bne	32c10 <flatcc_json_parser_double@@Base+0x1ec>
   32be8:	add	r0, r5, #2
   32bec:	mov	ip, r0
   32bf0:	cmp	r4, r0
   32bf4:	beq	32c08 <flatcc_json_parser_double@@Base+0x1e4>
   32bf8:	mov	r0, ip
   32bfc:	ldrb	r1, [r0], #1
   32c00:	cmp	r1, #48	; 0x30
   32c04:	beq	32bec <flatcc_json_parser_double@@Base+0x1c8>
   32c08:	mov	r0, #0
   32c0c:	mov	r1, #0
   32c10:	cmp	ip, r4
   32c14:	beq	32f14 <flatcc_json_parser_double@@Base+0x4f0>
   32c18:	movw	r5, #39321	; 0x9999
   32c1c:	mov	sl, #10
   32c20:	mov	r7, ip
   32c24:	str	r6, [sp, #20]
   32c28:	str	r2, [sp, #24]
   32c2c:	movt	r5, #6553	; 0x1999
   32c30:	ldrb	r8, [r7]
   32c34:	sub	r2, r8, #48	; 0x30
   32c38:	uxtb	r6, r2
   32c3c:	mov	r2, #0
   32c40:	cmp	r6, #9
   32c44:	bhi	32c7c <flatcc_json_parser_double@@Base+0x258>
   32c48:	movw	r6, #39320	; 0x9998
   32c4c:	movt	r6, #39321	; 0x9999
   32c50:	subs	r6, r6, r0
   32c54:	sbcs	r6, r5, r1
   32c58:	bcc	32c8c <flatcc_json_parser_double@@Base+0x268>
   32c5c:	add	r1, r1, r1, lsl #2
   32c60:	add	r7, r7, #1
   32c64:	lsl	r1, r1, #1
   32c68:	umlal	r8, r1, r0, sl
   32c6c:	subs	r0, r8, #48	; 0x30
   32c70:	sbc	r1, r1, #0
   32c74:	cmp	r4, r7
   32c78:	bne	32c30 <flatcc_json_parser_double@@Base+0x20c>
   32c7c:	mov	r5, r1
   32c80:	mov	sl, #0
   32c84:	str	r0, [sp, #28]
   32c88:	b	32ca8 <flatcc_json_parser_double@@Base+0x284>
   32c8c:	adds	r6, r0, #1
   32c90:	mov	sl, #1
   32c94:	adc	r5, r1, #0
   32c98:	cmp	r8, #52	; 0x34
   32c9c:	movls	r6, r0
   32ca0:	movls	r5, r1
   32ca4:	str	r6, [sp, #28]
   32ca8:	cmp	r7, r4
   32cac:	beq	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32cb0:	sub	r8, r7, ip
   32cb4:	mvn	ip, r3
   32cb8:	mov	r3, #0
   32cbc:	cmn	ip, #1000	; 0x3e8
   32cc0:	mov	r0, ip
   32cc4:	mvnlt	r0, #1000	; 0x3e8
   32cc8:	mvn	r0, r0
   32ccc:	sub	r0, r0, r7
   32cd0:	add	r0, r9, r0
   32cd4:	ldrb	r1, [r7]
   32cd8:	cmp	r1, #48	; 0x30
   32cdc:	bne	32d00 <flatcc_json_parser_double@@Base+0x2dc>
   32ce0:	add	r1, r7, #1
   32ce4:	cmp	r7, lr
   32ce8:	sub	r0, r0, #1
   32cec:	add	r3, r3, #1
   32cf0:	mov	r7, r1
   32cf4:	bne	32cd4 <flatcc_json_parser_double@@Base+0x2b0>
   32cf8:	mov	r7, r1
   32cfc:	b	32d48 <flatcc_json_parser_double@@Base+0x324>
   32d00:	sub	r1, r1, #49	; 0x31
   32d04:	uxtb	r1, r1
   32d08:	cmp	r1, #8
   32d0c:	bhi	32d48 <flatcc_json_parser_double@@Base+0x324>
   32d10:	mvn	r2, #0
   32d14:	mov	r1, r2
   32d18:	cmp	r0, #0
   32d1c:	beq	32d3c <flatcc_json_parser_double@@Base+0x318>
   32d20:	ldrb	r2, [r7, -r1]
   32d24:	sub	r0, r0, #1
   32d28:	sub	r2, r2, #48	; 0x30
   32d2c:	uxtb	r6, r2
   32d30:	sub	r2, r1, #1
   32d34:	cmp	r6, #10
   32d38:	bcc	32d14 <flatcc_json_parser_double@@Base+0x2f0>
   32d3c:	sub	r3, r3, r1
   32d40:	sub	r7, r7, r1
   32d44:	mov	sl, #1
   32d48:	mov	r2, #0
   32d4c:	cmp	r7, r4
   32d50:	beq	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32d54:	ldrb	r0, [r7]
   32d58:	cmp	r0, #46	; 0x2e
   32d5c:	bne	32eec <flatcc_json_parser_double@@Base+0x4c8>
   32d60:	mov	r6, r7
   32d64:	ldrb	r0, [r6, #1]!
   32d68:	sub	r1, r0, #48	; 0x30
   32d6c:	uxtb	r1, r1
   32d70:	cmp	r1, #9
   32d74:	bhi	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32d78:	cmp	r7, lr
   32d7c:	beq	32e34 <flatcc_json_parser_double@@Base+0x410>
   32d80:	cmn	ip, #1000	; 0x3e8
   32d84:	mvn	r1, #1
   32d88:	str	sl, [sp, #12]
   32d8c:	str	r6, [sp, #8]
   32d90:	str	r8, [sp, #16]
   32d94:	mvnlt	ip, #1000	; 0x3e8
   32d98:	sub	r1, r1, ip
   32d9c:	sub	r1, r1, r7
   32da0:	add	sl, r9, r1
   32da4:	mov	r1, #0
   32da8:	mov	ip, r1
   32dac:	ldr	r1, [sp, #28]
   32db0:	movw	r6, #39320	; 0x9998
   32db4:	movt	r6, #39321	; 0x9999
   32db8:	subs	r1, r6, r1
   32dbc:	movw	r1, #39321	; 0x9999
   32dc0:	movt	r1, #6553	; 0x1999
   32dc4:	sbcs	r1, r1, r5
   32dc8:	bcc	32e3c <flatcc_json_parser_double@@Base+0x418>
   32dcc:	add	r1, r5, r5, lsl #2
   32dd0:	ldr	r5, [sp, #28]
   32dd4:	uxtb	r0, r0
   32dd8:	mov	r6, #10
   32ddc:	lsl	r1, r1, #1
   32de0:	umlal	r0, r1, r5, r6
   32de4:	add	r6, r7, ip
   32de8:	subs	r0, r0, #48	; 0x30
   32dec:	sbc	r5, r1, #0
   32df0:	cmp	sl, ip
   32df4:	str	r0, [sp, #28]
   32df8:	beq	32e1c <flatcc_json_parser_double@@Base+0x3f8>
   32dfc:	ldrb	r0, [r6, #2]
   32e00:	mov	r8, r5
   32e04:	add	r1, ip, #1
   32e08:	sub	r5, r0, #48	; 0x30
   32e0c:	uxtb	r5, r5
   32e10:	cmp	r5, #10
   32e14:	mov	r5, r8
   32e18:	bcc	32da8 <flatcc_json_parser_double@@Base+0x384>
   32e1c:	ldr	r8, [sp, #16]
   32e20:	ldr	sl, [sp, #12]
   32e24:	sub	r0, r3, #1
   32e28:	add	r7, r6, #2
   32e2c:	sub	r3, r0, ip
   32e30:	b	32e7c <flatcc_json_parser_double@@Base+0x458>
   32e34:	mov	r7, r6
   32e38:	b	32e80 <flatcc_json_parser_double@@Base+0x45c>
   32e3c:	ldr	sl, [sp, #12]
   32e40:	ldr	r8, [sp, #16]
   32e44:	add	r1, r7, ip
   32e48:	sub	r3, r3, ip
   32e4c:	add	r7, r1, #1
   32e50:	cmp	sl, #0
   32e54:	bne	32e7c <flatcc_json_parser_double@@Base+0x458>
   32e58:	ldr	r6, [sp, #28]
   32e5c:	uxtb	r0, r0
   32e60:	mov	sl, #1
   32e64:	adds	r1, r6, #1
   32e68:	adc	ip, r5, #0
   32e6c:	cmp	r0, #52	; 0x34
   32e70:	movhi	r6, r1
   32e74:	movhi	r5, ip
   32e78:	str	r6, [sp, #28]
   32e7c:	ldr	r6, [sp, #8]
   32e80:	cmp	r7, r4
   32e84:	beq	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32e88:	sub	r0, r7, r6
   32e8c:	add	r8, r0, r8
   32e90:	ldrb	r0, [r7]
   32e94:	cmp	r0, #48	; 0x30
   32e98:	bne	32eb0 <flatcc_json_parser_double@@Base+0x48c>
   32e9c:	add	r7, r7, #1
   32ea0:	add	r3, r3, #1
   32ea4:	cmp	r4, r7
   32ea8:	bne	32e90 <flatcc_json_parser_double@@Base+0x46c>
   32eac:	b	32eec <flatcc_json_parser_double@@Base+0x4c8>
   32eb0:	sub	r0, r0, #49	; 0x31
   32eb4:	uxtb	r0, r0
   32eb8:	cmp	r0, #8
   32ebc:	bhi	32eec <flatcc_json_parser_double@@Base+0x4c8>
   32ec0:	add	r0, r7, #1
   32ec4:	mov	sl, #1
   32ec8:	mov	r7, r0
   32ecc:	cmp	r4, r0
   32ed0:	beq	32eec <flatcc_json_parser_double@@Base+0x4c8>
   32ed4:	mov	r0, r7
   32ed8:	ldrb	r1, [r0], #1
   32edc:	sub	r1, r1, #48	; 0x30
   32ee0:	uxtb	r1, r1
   32ee4:	cmp	r1, #10
   32ee8:	bcc	32ec8 <flatcc_json_parser_double@@Base+0x4a4>
   32eec:	cmp	r7, r4
   32ef0:	beq	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32ef4:	ldrb	r0, [r7]
   32ef8:	mov	ip, #0
   32efc:	orr	r0, r0, #32
   32f00:	cmp	r0, #101	; 0x65
   32f04:	bne	32f24 <flatcc_json_parser_double@@Base+0x500>
   32f08:	sub	r0, r4, r7
   32f0c:	cmp	r0, #2
   32f10:	bge	32f94 <flatcc_json_parser_double@@Base+0x570>
   32f14:	mov	r2, #0
   32f18:	mov	r0, r2
   32f1c:	sub	sp, fp, #28
   32f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f24:	mov	r0, #0
   32f28:	cmp	r7, r4
   32f2c:	mov	r2, #0
   32f30:	beq	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32f34:	ldr	r1, [sp, #28]
   32f38:	cmp	ip, #0
   32f3c:	vmov.i32	d16, #0	; 0x00000000
   32f40:	rsbne	r0, r0, #0
   32f44:	orrs	r1, r1, r5
   32f48:	beq	32f6c <flatcc_json_parser_double@@Base+0x548>
   32f4c:	add	r1, r8, r3
   32f50:	add	r4, r1, r0
   32f54:	cmn	r4, #324	; 0x144
   32f58:	blt	32f6c <flatcc_json_parser_double@@Base+0x548>
   32f5c:	movw	r0, #310	; 0x136
   32f60:	cmp	r4, r0
   32f64:	ble	32fc8 <flatcc_json_parser_double@@Base+0x5a4>
   32f68:	vldr	d16, [pc, #880]	; 332e0 <flatcc_json_parser_double@@Base+0x8bc>
   32f6c:	ldr	r0, [sp, #24]
   32f70:	vstr	d16, [r0]
   32f74:	ldr	r0, [sp, #20]
   32f78:	cmp	r0, #0
   32f7c:	ldrne	r0, [sp, #24]
   32f80:	vldrne	d16, [r0]
   32f84:	vnegne.f64	d16, d16
   32f88:	vstrne	d16, [r0]
   32f8c:	mov	r2, r7
   32f90:	b	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32f94:	mov	r1, r7
   32f98:	ldrb	r0, [r1, #1]!
   32f9c:	cmp	r0, #45	; 0x2d
   32fa0:	beq	330c0 <flatcc_json_parser_double@@Base+0x69c>
   32fa4:	mov	ip, #0
   32fa8:	cmp	r0, #43	; 0x2b
   32fac:	bne	330d0 <flatcc_json_parser_double@@Base+0x6ac>
   32fb0:	add	r1, r7, #2
   32fb4:	mov	r2, #0
   32fb8:	cmp	r1, r4
   32fbc:	beq	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   32fc0:	mov	ip, #0
   32fc4:	b	330d0 <flatcc_json_parser_double@@Base+0x6ac>
   32fc8:	mov	r0, #0
   32fcc:	cmp	r0, r5, lsr #21
   32fd0:	bne	33130 <flatcc_json_parser_double@@Base+0x70c>
   32fd4:	cmp	r4, #22
   32fd8:	bhi	33130 <flatcc_json_parser_double@@Base+0x70c>
   32fdc:	ldr	r0, [sp, #28]
   32fe0:	mov	r1, r5
   32fe4:	bl	40db0 <flatcc_json_printer_clear@@Base+0x8cc>
   32fe8:	sub	r2, r4, r8
   32fec:	vmov	d16, r0, r1
   32ff0:	add	r0, r2, #22
   32ff4:	cmp	r0, #44	; 0x2c
   32ff8:	bhi	32f6c <flatcc_json_parser_double@@Base+0x548>
   32ffc:	add	r1, pc, #0
   33000:	ldr	pc, [r1, r0, lsl #2]
   33004:	strheq	r3, [r3], -r8
   33008:	andeq	r3, r3, ip, ror r1
   3300c:	andeq	r3, r3, r4, lsl #3
   33010:	andeq	r3, r3, ip, lsl #3
   33014:	muleq	r3, r4, r1
   33018:	muleq	r3, ip, r1
   3301c:	andeq	r3, r3, r4, lsr #3
   33020:	andeq	r3, r3, ip, lsr #3
   33024:			; <UNDEFINED> instruction: 0x000331b4
   33028:			; <UNDEFINED> instruction: 0x000331bc
   3302c:	andeq	r3, r3, r4, asr #3
   33030:	andeq	r3, r3, ip, asr #3
   33034:	ldrdeq	r3, [r3], -r4
   33038:	ldrdeq	r3, [r3], -ip
   3303c:	andeq	r3, r3, r4, ror #3
   33040:	andeq	r3, r3, ip, ror #3
   33044:	strdeq	r3, [r3], -r4
   33048:	strdeq	r3, [r3], -ip
   3304c:	andeq	r3, r3, r4, lsl #4
   33050:	andeq	r3, r3, ip, lsl #4
   33054:	andeq	r3, r3, r4, lsl r2
   33058:	andeq	r3, r3, ip, lsl r2
   3305c:	andeq	r2, r3, ip, ror #30
   33060:	andeq	r3, r3, r8, lsr #4
   33064:	andeq	r3, r3, r0, lsr r2
   33068:	andeq	r3, r3, r8, lsr r2
   3306c:	andeq	r3, r3, r0, asr #4
   33070:	andeq	r3, r3, r8, asr #4
   33074:	andeq	r3, r3, r0, asr r2
   33078:	andeq	r3, r3, r8, asr r2
   3307c:	andeq	r3, r3, r0, ror #4
   33080:	andeq	r3, r3, r8, ror #4
   33084:	andeq	r3, r3, r0, ror r2
   33088:	andeq	r3, r3, r8, ror r2
   3308c:	andeq	r3, r3, r0, lsl #5
   33090:	andeq	r3, r3, r8, lsl #5
   33094:	muleq	r3, r0, r2
   33098:	muleq	r3, r8, r2
   3309c:	andeq	r3, r3, r0, lsr #5
   330a0:	andeq	r3, r3, r8, lsr #5
   330a4:			; <UNDEFINED> instruction: 0x000332b0
   330a8:			; <UNDEFINED> instruction: 0x000332b8
   330ac:	andeq	r3, r3, r0, asr #5
   330b0:	andeq	r3, r3, r8, asr #5
   330b4:	ldrdeq	r3, [r3], -r0
   330b8:	vldr	d17, [pc, #712]	; 33388 <flatcc_json_parser_double@@Base+0x964>
   330bc:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   330c0:	add	r1, r7, #2
   330c4:	mov	ip, #1
   330c8:	cmp	r1, r4
   330cc:	beq	32f14 <flatcc_json_parser_double@@Base+0x4f0>
   330d0:	ldrb	r0, [r1]
   330d4:	mov	r7, r5
   330d8:	mov	r2, #0
   330dc:	sub	r0, r0, #48	; 0x30
   330e0:	uxtb	r5, r0
   330e4:	cmp	r5, #9
   330e8:	bhi	32f18 <flatcc_json_parser_double@@Base+0x4f4>
   330ec:	mov	r5, r7
   330f0:	add	r7, r1, #1
   330f4:	cmp	r1, lr
   330f8:	beq	32f28 <flatcc_json_parser_double@@Base+0x504>
   330fc:	ldrb	r1, [r7]
   33100:	sub	r2, r1, #48	; 0x30
   33104:	uxtb	r2, r2
   33108:	cmp	r2, #9
   3310c:	bhi	32f28 <flatcc_json_parser_double@@Base+0x504>
   33110:	cmp	r0, #32768	; 0x8000
   33114:	add	r7, r7, #1
   33118:	addlt	r0, r0, r0, lsl #2
   3311c:	addlt	r0, r1, r0, lsl #1
   33120:	sublt	r0, r0, #48	; 0x30
   33124:	cmp	r4, r7
   33128:	bne	330fc <flatcc_json_parser_double@@Base+0x6d8>
   3312c:	b	32f28 <flatcc_json_parser_double@@Base+0x504>
   33130:	ldr	r0, [sp, #24]
   33134:	mov	r1, r5
   33138:	mov	r2, r4
   3313c:	mov	r3, r8
   33140:	str	sl, [sp]
   33144:	str	r0, [sp, #4]
   33148:	ldr	r0, [sp, #28]
   3314c:	bl	311c8 <grisu3_diy_fp_encode_double@@Base>
   33150:	cmp	r0, #0
   33154:	bne	32f74 <flatcc_json_parser_double@@Base+0x550>
   33158:	add	r1, sp, #32
   3315c:	mov	r0, r9
   33160:	bl	14f08 <strtod@plt>
   33164:	ldr	r0, [sp, #24]
   33168:	vstr	d0, [r0]
   3316c:	ldr	r0, [sp, #32]
   33170:	cmp	r0, r7
   33174:	movcc	r7, r0
   33178:	b	32f8c <flatcc_json_parser_double@@Base+0x568>
   3317c:	vldr	d17, [pc, #356]	; 332e8 <flatcc_json_parser_double@@Base+0x8c4>
   33180:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   33184:	vldr	d17, [pc, #356]	; 332f0 <flatcc_json_parser_double@@Base+0x8cc>
   33188:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   3318c:	vldr	d17, [pc, #356]	; 332f8 <flatcc_json_parser_double@@Base+0x8d4>
   33190:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   33194:	vldr	d17, [pc, #356]	; 33300 <flatcc_json_parser_double@@Base+0x8dc>
   33198:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   3319c:	vldr	d17, [pc, #356]	; 33308 <flatcc_json_parser_double@@Base+0x8e4>
   331a0:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331a4:	vldr	d17, [pc, #356]	; 33310 <flatcc_json_parser_double@@Base+0x8ec>
   331a8:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331ac:	vldr	d17, [pc, #356]	; 33318 <flatcc_json_parser_double@@Base+0x8f4>
   331b0:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331b4:	vldr	d17, [pc, #356]	; 33320 <flatcc_json_parser_double@@Base+0x8fc>
   331b8:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331bc:	vldr	d17, [pc, #356]	; 33328 <flatcc_json_parser_double@@Base+0x904>
   331c0:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331c4:	vldr	d17, [pc, #356]	; 33330 <flatcc_json_parser_double@@Base+0x90c>
   331c8:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331cc:	vldr	d17, [pc, #356]	; 33338 <flatcc_json_parser_double@@Base+0x914>
   331d0:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331d4:	vldr	d17, [pc, #356]	; 33340 <flatcc_json_parser_double@@Base+0x91c>
   331d8:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331dc:	vldr	d17, [pc, #356]	; 33348 <flatcc_json_parser_double@@Base+0x924>
   331e0:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331e4:	vldr	d17, [pc, #356]	; 33350 <flatcc_json_parser_double@@Base+0x92c>
   331e8:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331ec:	vldr	d17, [pc, #356]	; 33358 <flatcc_json_parser_double@@Base+0x934>
   331f0:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331f4:	vldr	d17, [pc, #356]	; 33360 <flatcc_json_parser_double@@Base+0x93c>
   331f8:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   331fc:	vldr	d17, [pc, #356]	; 33368 <flatcc_json_parser_double@@Base+0x944>
   33200:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   33204:	vldr	d17, [pc, #356]	; 33370 <flatcc_json_parser_double@@Base+0x94c>
   33208:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   3320c:	vldr	d17, [pc, #356]	; 33378 <flatcc_json_parser_double@@Base+0x954>
   33210:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   33214:	vldr	d17, [pc, #356]	; 33380 <flatcc_json_parser_double@@Base+0x95c>
   33218:	b	33220 <flatcc_json_parser_double@@Base+0x7fc>
   3321c:	vmov.f64	d17, #36	; 0x41200000  10.0
   33220:	vdiv.f64	d16, d16, d17
   33224:	b	32f6c <flatcc_json_parser_double@@Base+0x548>
   33228:	vmov.f64	d17, #36	; 0x41200000  10.0
   3322c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33230:	vldr	d17, [pc, #328]	; 33380 <flatcc_json_parser_double@@Base+0x95c>
   33234:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33238:	vldr	d17, [pc, #312]	; 33378 <flatcc_json_parser_double@@Base+0x954>
   3323c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33240:	vldr	d17, [pc, #296]	; 33370 <flatcc_json_parser_double@@Base+0x94c>
   33244:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33248:	vldr	d17, [pc, #280]	; 33368 <flatcc_json_parser_double@@Base+0x944>
   3324c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33250:	vldr	d17, [pc, #264]	; 33360 <flatcc_json_parser_double@@Base+0x93c>
   33254:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33258:	vldr	d17, [pc, #248]	; 33358 <flatcc_json_parser_double@@Base+0x934>
   3325c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33260:	vldr	d17, [pc, #232]	; 33350 <flatcc_json_parser_double@@Base+0x92c>
   33264:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33268:	vldr	d17, [pc, #216]	; 33348 <flatcc_json_parser_double@@Base+0x924>
   3326c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33270:	vldr	d17, [pc, #200]	; 33340 <flatcc_json_parser_double@@Base+0x91c>
   33274:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33278:	vldr	d17, [pc, #184]	; 33338 <flatcc_json_parser_double@@Base+0x914>
   3327c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33280:	vldr	d17, [pc, #168]	; 33330 <flatcc_json_parser_double@@Base+0x90c>
   33284:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33288:	vldr	d17, [pc, #152]	; 33328 <flatcc_json_parser_double@@Base+0x904>
   3328c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33290:	vldr	d17, [pc, #136]	; 33320 <flatcc_json_parser_double@@Base+0x8fc>
   33294:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   33298:	vldr	d17, [pc, #120]	; 33318 <flatcc_json_parser_double@@Base+0x8f4>
   3329c:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   332a0:	vldr	d17, [pc, #104]	; 33310 <flatcc_json_parser_double@@Base+0x8ec>
   332a4:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   332a8:	vldr	d17, [pc, #88]	; 33308 <flatcc_json_parser_double@@Base+0x8e4>
   332ac:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   332b0:	vldr	d17, [pc, #72]	; 33300 <flatcc_json_parser_double@@Base+0x8dc>
   332b4:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   332b8:	vldr	d17, [pc, #56]	; 332f8 <flatcc_json_parser_double@@Base+0x8d4>
   332bc:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   332c0:	vldr	d17, [pc, #40]	; 332f0 <flatcc_json_parser_double@@Base+0x8cc>
   332c4:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   332c8:	vldr	d17, [pc, #24]	; 332e8 <flatcc_json_parser_double@@Base+0x8c4>
   332cc:	b	332d4 <flatcc_json_parser_double@@Base+0x8b0>
   332d0:	vldr	d17, [pc, #176]	; 33388 <flatcc_json_parser_double@@Base+0x964>
   332d4:	vmul.f64	d16, d16, d17
   332d8:	b	32f6c <flatcc_json_parser_double@@Base+0x548>
   332dc:	nop	{0}
   332e0:	andeq	r0, r0, r0
   332e4:	svcvc	0x00f00000	; IMB
   332e8:	usatle	lr, #2, r0, asr #30
   332ec:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   332f0:	ldmvc	r5!, {r6, sl, fp, pc}
   332f4:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   332f8:	addsvs	r3, r1, r0, lsl #26
   332fc:	mvnmi	r5, #228, 16	; 0xe40000
   33300:	strbvs	ip, [lr, -r0, lsl #16]
   33304:			; <UNDEFINED> instruction: 0x43abc16d
   33308:	ldrbhi	sl, [r8]
   3330c:	cmnmi	r6, #1459617792	; 0x57000000
   33310:	strbcc	r8, [r0, r0]!
   33314:	movtmi	ip, #4985	; 0x1379
   33318:	ldrtcs	r0, [r4], -r0
   3331c:	movwmi	r6, #52213	; 0xcbf5
   33320:	cdpne	0, 9, cr0, cr0, cr0, {0}
   33324:	sbcsmi	fp, r6, #196, 24	; 0xc400
   33328:	strb	r0, [r0, #-0]
   3332c:	adcmi	r3, r2, #156	; 0x9c
   33330:	andge	r0, r0, #0
   33334:	rsbmi	r1, sp, #148, 20	; 0x94000
   33338:	stmda	r0, {}	; <UNPREDICTABLE>
   3333c:	eorsmi	r4, r7, #7733248	; 0x760000
   33340:	andcs	r0, r0, r0
   33344:	andmi	sl, r2, #95	; 0x5f
   33348:	andeq	r0, r0, r0
   3334c:	bicmi	ip, sp, r5, ror #26
   33350:	andeq	r0, r0, r0
   33354:	orrsmi	sp, r7, r4, lsl #15
   33358:	andeq	r0, r0, r0
   3335c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   33360:	andeq	r0, r0, r0
   33364:	smlawbmi	lr, r0, r4, r8
   33368:	andeq	r0, r0, r0
   3336c:	rscsmi	r6, r8, r0, lsl #20
   33370:	andeq	r0, r0, r0
   33374:	sbcmi	r8, r3, r0, lsl #16
   33378:	andeq	r0, r0, r0
   3337c:	addmi	r4, pc, r0
   33380:	andeq	r0, r0, r0
   33384:	subsmi	r0, r9, r0
   33388:			; <UNDEFINED> instruction: 0x064dd592
   3338c:	strmi	pc, [r0], #207	; 0xcf

00033390 <flatcc_json_parser_float@@Base>:
   33390:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33394:	add	fp, sp, #24
   33398:	vpush	{d8-d9}
   3339c:	sub	sp, sp, #8
   333a0:	mov	r8, r0
   333a4:	mov	r0, #0
   333a8:	mov	r6, r1
   333ac:	cmp	r1, r2
   333b0:	str	r0, [r3]
   333b4:	beq	33478 <flatcc_json_parser_float@@Base+0xe8>
   333b8:	mov	r0, r6
   333bc:	mov	r5, r2
   333c0:	mov	r7, r3
   333c4:	ldrb	r1, [r0], #1
   333c8:	cmp	r1, #45	; 0x2d
   333cc:	movne	r0, r6
   333d0:	sub	r2, r2, r0
   333d4:	cmp	r2, #2
   333d8:	blt	33404 <flatcc_json_parser_float@@Base+0x74>
   333dc:	sub	r1, r1, #45	; 0x2d
   333e0:	clz	r1, r1
   333e4:	lsr	r1, r1, #5
   333e8:	ldrb	r1, [r6, r1]
   333ec:	cmp	r1, #46	; 0x2e
   333f0:	beq	33480 <flatcc_json_parser_float@@Base+0xf0>
   333f4:	cmp	r1, #48	; 0x30
   333f8:	ldrbeq	r0, [r0, #1]
   333fc:	cmpeq	r0, #48	; 0x30
   33400:	beq	33480 <flatcc_json_parser_float@@Base+0xf0>
   33404:	sub	r1, r5, r6
   33408:	mov	r2, sp
   3340c:	mov	r0, r6
   33410:	bl	32b18 <flatcc_json_parser_double@@Base+0xf4>
   33414:	vldr	d16, [sp]
   33418:	mov	r4, r0
   3341c:	add	r0, pc, #164	; 0xa4
   33420:	vcmpe.f64	d16, #0.0
   33424:	vcvt.f32.f64	s16, d16
   33428:	vmrs	APSR_nzcv, fpscr
   3342c:	vmov.f32	s0, s16
   33430:	addmi	r0, r0, #4
   33434:	vldr	s18, [r0]
   33438:	bl	14e78 <__isinff@plt>
   3343c:	cmp	r0, #0
   33440:	movne	r4, r6
   33444:	vseleq.f32	s0, s16, s18
   33448:	cmp	r4, #0
   3344c:	vstr	s0, [r7]
   33450:	cmpne	r4, r6
   33454:	bne	334b8 <flatcc_json_parser_float@@Base+0x128>
   33458:	bl	14e78 <__isinff@plt>
   3345c:	ldr	r1, [r8, #20]
   33460:	cmp	r0, #0
   33464:	beq	33490 <flatcc_json_parser_float@@Base+0x100>
   33468:	cmp	r1, #0
   3346c:	bne	334b4 <flatcc_json_parser_float@@Base+0x124>
   33470:	mov	r0, #7
   33474:	b	3349c <flatcc_json_parser_float@@Base+0x10c>
   33478:	mov	r4, r6
   3347c:	b	334b8 <flatcc_json_parser_float@@Base+0x128>
   33480:	ldr	r0, [r8, #20]
   33484:	cmp	r0, #0
   33488:	bne	334b4 <flatcc_json_parser_float@@Base+0x124>
   3348c:	b	33498 <flatcc_json_parser_float@@Base+0x108>
   33490:	cmp	r1, #0
   33494:	bne	334b4 <flatcc_json_parser_float@@Base+0x124>
   33498:	mov	r0, #6
   3349c:	str	r6, [r8, #32]
   334a0:	add	r2, r6, #1
   334a4:	ldr	r1, [r8, #4]
   334a8:	sub	r1, r2, r1
   334ac:	str	r1, [r8, #16]
   334b0:	str	r0, [r8, #20]
   334b4:	mov	r4, r5
   334b8:	mov	r0, r4
   334bc:	sub	sp, fp, #40	; 0x28
   334c0:	vpop	{d8-d9}
   334c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   334c8:	svcvc	0x00800000
   334cc:			; <UNDEFINED> instruction: 0xff800000

000334d0 <flatcc_json_parser_integer@@Base>:
   334d0:	push	{r4, r5, r6, r7, fp, lr}
   334d4:	add	fp, sp, #16
   334d8:	mov	ip, r1
   334dc:	cmp	r1, r2
   334e0:	beq	33618 <flatcc_json_parser_integer@@Base+0x148>
   334e4:	ldrb	r1, [ip]
   334e8:	mov	r4, #0
   334ec:	sub	r1, r1, #45	; 0x2d
   334f0:	clz	r1, r1
   334f4:	lsr	r1, r1, #5
   334f8:	str	r1, [r3]
   334fc:	add	r1, ip, r1
   33500:	cmp	r1, r2
   33504:	beq	3356c <flatcc_json_parser_integer@@Base+0x9c>
   33508:	mov	lr, #10
   3350c:	mov	r5, #0
   33510:	ldrb	r6, [r1]
   33514:	sub	r7, r6, #48	; 0x30
   33518:	uxtb	r7, r7
   3351c:	cmp	r7, #9
   33520:	bhi	3357c <flatcc_json_parser_integer@@Base+0xac>
   33524:	add	r7, r5, r5, lsl #2
   33528:	lsl	r7, r7, #1
   3352c:	umlal	r6, r7, r4, lr
   33530:	subs	r6, r6, #48	; 0x30
   33534:	sbc	r7, r7, #0
   33538:	subs	r4, r6, r4
   3353c:	sbcs	r4, r7, r5
   33540:	bcc	335cc <flatcc_json_parser_integer@@Base+0xfc>
   33544:	add	r1, r1, #1
   33548:	mov	r4, r6
   3354c:	mov	r5, r7
   33550:	cmp	r2, r1
   33554:	bne	33510 <flatcc_json_parser_integer@@Base+0x40>
   33558:	mov	r3, #0
   3355c:	mov	r1, r2
   33560:	mov	r4, r6
   33564:	mov	r5, r7
   33568:	b	33580 <flatcc_json_parser_integer@@Base+0xb0>
   3356c:	mov	r1, r2
   33570:	mov	r5, #0
   33574:	mov	r3, #0
   33578:	b	33580 <flatcc_json_parser_integer@@Base+0xb0>
   3357c:	mov	r3, #1
   33580:	cmp	r1, ip
   33584:	beq	33618 <flatcc_json_parser_integer@@Base+0x148>
   33588:	cmp	r3, #0
   3358c:	beq	3360c <flatcc_json_parser_integer@@Base+0x13c>
   33590:	ldrb	r3, [r1]
   33594:	cmp	r3, #46	; 0x2e
   33598:	cmpne	r3, #101	; 0x65
   3359c:	bne	33604 <flatcc_json_parser_integer@@Base+0x134>
   335a0:	ldr	r3, [r0, #20]
   335a4:	cmp	r3, #0
   335a8:	bne	335fc <flatcc_json_parser_integer@@Base+0x12c>
   335ac:	str	r1, [r0, #32]
   335b0:	add	r1, r1, #1
   335b4:	mov	r3, #12
   335b8:	ldr	r7, [r0, #4]
   335bc:	sub	r1, r1, r7
   335c0:	str	r1, [r0, #16]
   335c4:	str	r3, [r0, #20]
   335c8:	b	335fc <flatcc_json_parser_integer@@Base+0x12c>
   335cc:	ldr	r7, [r0, #20]
   335d0:	cmp	r7, #0
   335d4:	bne	335fc <flatcc_json_parser_integer@@Base+0x12c>
   335d8:	str	r1, [r0, #32]
   335dc:	cmp	r3, #0
   335e0:	mov	r7, #8
   335e4:	add	r1, r1, #1
   335e8:	ldr	r3, [r0, #4]
   335ec:	movweq	r7, #7
   335f0:	sub	r1, r1, r3
   335f4:	str	r1, [r0, #16]
   335f8:	str	r7, [r0, #20]
   335fc:	mov	ip, r2
   33600:	b	33618 <flatcc_json_parser_integer@@Base+0x148>
   33604:	cmp	r3, #69	; 0x45
   33608:	beq	335a0 <flatcc_json_parser_integer@@Base+0xd0>
   3360c:	ldr	r0, [fp, #8]
   33610:	mov	ip, r1
   33614:	strd	r4, [r0]
   33618:	mov	r0, ip
   3361c:	pop	{r4, r5, r6, r7, fp, pc}

00033620 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   33620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33624:	add	fp, sp, #28
   33628:	sub	sp, sp, #36	; 0x24
   3362c:	mov	r7, r3
   33630:	mov	r4, r2
   33634:	mov	r5, r0
   33638:	cmp	r1, r2
   3363c:	beq	33654 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   33640:	ldrb	r0, [r1]
   33644:	cmp	r0, #34	; 0x22
   33648:	bne	33654 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   3364c:	add	r9, r1, #1
   33650:	b	33684 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   33654:	ldr	r0, [r5, #20]
   33658:	mov	r9, r4
   3365c:	cmp	r0, #0
   33660:	bne	33684 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   33664:	str	r1, [r5, #32]
   33668:	add	r1, r1, #1
   3366c:	mov	r0, #16
   33670:	mov	r9, r4
   33674:	ldr	r2, [r5, #4]
   33678:	sub	r1, r1, r2
   3367c:	str	r1, [r5, #16]
   33680:	str	r0, [r5, #20]
   33684:	ldr	r6, [fp, #8]
   33688:	mov	r0, r5
   3368c:	mov	r1, r9
   33690:	mov	r2, r4
   33694:	bl	316fc <flatcc_json_parser_string_part@@Base>
   33698:	mov	sl, r0
   3369c:	cmp	r0, r4
   336a0:	mov	r0, r4
   336a4:	beq	336e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   336a8:	ldrb	r0, [sl]
   336ac:	cmp	r0, #34	; 0x22
   336b0:	bne	336dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xbc>
   336b4:	sub	r1, sl, r9
   336b8:	and	r0, r1, #3
   336bc:	str	r1, [sp, #28]
   336c0:	lsr	r1, r1, #2
   336c4:	add	r8, r1, r1, lsl #1
   336c8:	cmp	r0, #2
   336cc:	beq	3371c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xfc>
   336d0:	cmp	r0, #3
   336d4:	addeq	r8, r8, #2
   336d8:	b	33720 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x100>
   336dc:	mov	r0, sl
   336e0:	mov	r1, #0
   336e4:	str	r1, [r7]
   336e8:	ldr	r1, [r5, #20]
   336ec:	cmp	r1, #0
   336f0:	bne	3376c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   336f4:	str	r0, [r5, #32]
   336f8:	mov	r1, #31
   336fc:	cmp	r6, #0
   33700:	add	r0, r0, #1
   33704:	ldr	r2, [r5, #4]
   33708:	movwne	r1, #32
   3370c:	sub	r0, r0, r2
   33710:	str	r0, [r5, #16]
   33714:	str	r1, [r5, #20]
   33718:	b	3376c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   3371c:	add	r8, r8, #1
   33720:	ldr	r0, [r5]
   33724:	mov	r1, #1
   33728:	mov	r2, #1
   3372c:	mvn	r3, #0
   33730:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   33734:	cmp	r0, #0
   33738:	beq	33778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x158>
   3373c:	mov	r0, #0
   33740:	str	r0, [r7]
   33744:	ldr	r0, [r5, #20]
   33748:	cmp	r0, #0
   3374c:	bne	3376c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   33750:	mov	r0, #33	; 0x21
   33754:	str	sl, [r5, #32]
   33758:	add	r2, sl, #1
   3375c:	ldr	r1, [r5, #4]
   33760:	sub	r1, r2, r1
   33764:	str	r1, [r5, #16]
   33768:	str	r0, [r5, #20]
   3376c:	mov	r0, r4
   33770:	sub	sp, fp, #28
   33774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33778:	ldr	r0, [r5]
   3377c:	mov	r1, r8
   33780:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   33784:	cmp	r0, #0
   33788:	beq	3373c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   3378c:	movw	r1, #25056	; 0x61e0
   33790:	movw	r2, #24800	; 0x60e0
   33794:	ldr	ip, [sp, #28]
   33798:	cmp	r6, #0
   3379c:	str	r7, [sp, #8]
   337a0:	add	r7, sp, #32
   337a4:	mov	r6, r9
   337a8:	str	r0, [sp, #4]
   337ac:	str	r0, [sp, #16]
   337b0:	str	r8, [sp, #24]
   337b4:	movt	r1, #4
   337b8:	movt	r2, #4
   337bc:	movne	r2, r1
   337c0:	cmp	r8, #0
   337c4:	mov	r1, r8
   337c8:	mvneq	r1, #0
   337cc:	str	r1, [sp, #20]
   337d0:	mov	r1, #0
   337d4:	str	ip, [sp, #12]
   337d8:	cmp	ip, r1
   337dc:	beq	33884 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x264>
   337e0:	ldrb	r3, [r6, r1]
   337e4:	ldrb	lr, [r2, r3]
   337e8:	cmp	lr, #64	; 0x40
   337ec:	strb	lr, [r7, r1]
   337f0:	bcc	33808 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
   337f4:	cmp	lr, #65	; 0x41
   337f8:	bne	338c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a0>
   337fc:	sub	r1, r1, #1
   33800:	sub	ip, ip, #1
   33804:	add	r6, r6, #1
   33808:	add	r1, r1, #1
   3380c:	cmp	r1, #4
   33810:	bcc	337d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   33814:	ldr	r0, [sp, #20]
   33818:	cmp	r0, #3
   3381c:	bcc	338b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   33820:	ldrb	r3, [sp, #33]	; 0x21
   33824:	ldrb	r1, [sp, #32]
   33828:	mov	r0, r7
   3382c:	ldr	r8, [sp, #24]
   33830:	sub	ip, ip, #4
   33834:	add	r6, r6, #4
   33838:	lsr	r7, r3, #4
   3383c:	orr	r1, r7, r1, lsl #2
   33840:	mov	r7, r0
   33844:	ldr	r0, [sp, #16]
   33848:	strb	r1, [r0]
   3384c:	ldrb	r1, [sp, #34]	; 0x22
   33850:	lsr	r1, r1, #2
   33854:	orr	r1, r1, r3, lsl #4
   33858:	strb	r1, [r0, #1]
   3385c:	ldrb	r1, [sp, #34]	; 0x22
   33860:	ldrb	r3, [sp, #35]	; 0x23
   33864:	orr	r1, r3, r1, lsl #6
   33868:	strb	r1, [r0, #2]
   3386c:	ldr	r1, [sp, #20]
   33870:	add	r0, r0, #3
   33874:	str	r0, [sp, #16]
   33878:	subs	r1, r1, #3
   3387c:	bne	337cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   33880:	b	33970 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   33884:	mov	r1, ip
   33888:	mov	r0, ip
   3388c:	sub	ip, ip, r0
   33890:	cmp	r1, #0
   33894:	beq	33970 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   33898:	cmp	r1, #3
   3389c:	beq	33904 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   338a0:	cmp	r1, #2
   338a4:	ldrbeq	r1, [sp, #33]	; 0x21
   338a8:	tsteq	r1, #15
   338ac:	beq	33958 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   338b0:	ldr	r0, [sp, #28]
   338b4:	ldr	r1, [sp, #12]
   338b8:	sub	r0, r0, r1
   338bc:	b	33980 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
   338c0:	cmp	lr, #66	; 0x42
   338c4:	bne	33950 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x330>
   338c8:	add	r3, r1, #1
   338cc:	mov	r0, r3
   338d0:	cmp	r3, ip
   338d4:	bcs	3388c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   338d8:	cmp	r0, #7
   338dc:	bhi	3388c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   338e0:	ldrb	r3, [r6, r0]
   338e4:	ldr	r8, [sp, #24]
   338e8:	ldrb	r3, [r2, r3]
   338ec:	sub	r3, r3, #65	; 0x41
   338f0:	uxtb	r7, r3
   338f4:	add	r3, r0, #1
   338f8:	cmp	r7, #2
   338fc:	bcc	338cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ac>
   33900:	b	3388c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   33904:	ldr	r1, [sp, #20]
   33908:	cmp	r1, #2
   3390c:	bcc	338b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   33910:	ldrb	r1, [sp, #34]	; 0x22
   33914:	ands	r2, r1, #3
   33918:	bne	338b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   3391c:	ldrb	r3, [sp, #33]	; 0x21
   33920:	ldrb	r2, [sp, #32]
   33924:	ldr	r8, [sp, #24]
   33928:	lsl	r7, r3, #4
   3392c:	orr	r1, r7, r1, lsr #2
   33930:	ldr	r7, [sp, #16]
   33934:	strb	r1, [r7, #1]
   33938:	lsr	r1, r3, #4
   3393c:	orr	r1, r1, r2, lsl #2
   33940:	strb	r1, [r7]
   33944:	add	r7, r7, #2
   33948:	str	r7, [sp, #16]
   3394c:	b	33970 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   33950:	mov	r0, r1
   33954:	b	3388c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   33958:	ldrb	r2, [sp, #32]
   3395c:	lsl	r2, r2, #2
   33960:	orr	r1, r2, r1, lsr #4
   33964:	ldr	r2, [sp, #16]
   33968:	strb	r1, [r2], #1
   3396c:	str	r2, [sp, #16]
   33970:	cmp	ip, #0
   33974:	beq	33990 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x370>
   33978:	ldr	r0, [sp, #28]
   3397c:	sub	r0, r0, ip
   33980:	ldr	r6, [fp, #8]
   33984:	ldr	r7, [sp, #8]
   33988:	add	r0, r9, r0
   3398c:	b	336e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   33990:	ldr	r0, [sp, #4]
   33994:	ldr	r1, [sp, #16]
   33998:	ldr	r7, [sp, #8]
   3399c:	sub	r0, r1, r0
   339a0:	cmp	r8, r0
   339a4:	bls	339bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   339a8:	sub	r1, r8, r0
   339ac:	ldr	r0, [r5]
   339b0:	bl	2d210 <flatcc_builder_truncate_vector@@Base>
   339b4:	cmp	r0, #0
   339b8:	bne	3373c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   339bc:	ldr	r0, [r5]
   339c0:	bl	2e448 <flatcc_builder_end_vector@@Base>
   339c4:	cmp	r0, #0
   339c8:	str	r0, [r7]
   339cc:	beq	3373c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   339d0:	ldrb	r0, [sl]
   339d4:	cmp	r0, #34	; 0x22
   339d8:	bne	339e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   339dc:	add	r4, sl, #1
   339e0:	b	3376c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   339e4:	ldr	r0, [r5, #20]
   339e8:	cmp	r0, #0
   339ec:	bne	3376c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   339f0:	mov	r0, #20
   339f4:	b	33754 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x134>

000339f8 <flatcc_json_parser_build_string@@Base>:
   339f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   339fc:	add	fp, sp, #28
   33a00:	sub	sp, sp, #4
   33a04:	mov	r9, r3
   33a08:	mov	sl, r2
   33a0c:	mov	r5, r0
   33a10:	cmp	r1, r2
   33a14:	beq	33a2c <flatcc_json_parser_build_string@@Base+0x34>
   33a18:	ldrb	r0, [r1]
   33a1c:	cmp	r0, #34	; 0x22
   33a20:	bne	33a2c <flatcc_json_parser_build_string@@Base+0x34>
   33a24:	add	r6, r1, #1
   33a28:	b	33a5c <flatcc_json_parser_build_string@@Base+0x64>
   33a2c:	ldr	r0, [r5, #20]
   33a30:	mov	r6, sl
   33a34:	cmp	r0, #0
   33a38:	bne	33a5c <flatcc_json_parser_build_string@@Base+0x64>
   33a3c:	str	r1, [r5, #32]
   33a40:	add	r1, r1, #1
   33a44:	mov	r0, #16
   33a48:	mov	r6, sl
   33a4c:	ldr	r2, [r5, #4]
   33a50:	sub	r1, r1, r2
   33a54:	str	r1, [r5, #16]
   33a58:	str	r0, [r5, #20]
   33a5c:	mov	r0, r5
   33a60:	mov	r1, r6
   33a64:	mov	r2, sl
   33a68:	bl	316fc <flatcc_json_parser_string_part@@Base>
   33a6c:	mov	r4, r0
   33a70:	cmp	r0, sl
   33a74:	beq	33a9c <flatcc_json_parser_build_string@@Base+0xa4>
   33a78:	ldrb	r0, [r4]
   33a7c:	cmp	r0, #34	; 0x22
   33a80:	bne	33a9c <flatcc_json_parser_build_string@@Base+0xa4>
   33a84:	ldr	r0, [r5]
   33a88:	sub	r2, r4, r6
   33a8c:	mov	r1, r6
   33a90:	bl	2f31c <flatcc_builder_create_string@@Base>
   33a94:	mov	r6, r4
   33a98:	b	33b74 <flatcc_json_parser_build_string@@Base+0x17c>
   33a9c:	ldr	r0, [r5]
   33aa0:	bl	2d60c <flatcc_builder_start_string@@Base>
   33aa4:	cmp	r0, #0
   33aa8:	beq	33ab8 <flatcc_json_parser_build_string@@Base+0xc0>
   33aac:	mov	r0, #0
   33ab0:	str	r0, [r9]
   33ab4:	b	33bc0 <flatcc_json_parser_build_string@@Base+0x1c8>
   33ab8:	ldr	r0, [r5]
   33abc:	sub	r2, r4, r6
   33ac0:	mov	r1, r6
   33ac4:	bl	2d0d4 <flatcc_builder_append_string@@Base>
   33ac8:	cmp	r0, #0
   33acc:	beq	33aac <flatcc_json_parser_build_string@@Base+0xb4>
   33ad0:	cmp	r4, sl
   33ad4:	mov	r6, sl
   33ad8:	beq	33b6c <flatcc_json_parser_build_string@@Base+0x174>
   33adc:	mov	r8, sp
   33ae0:	add	r6, r8, #1
   33ae4:	ldrb	r0, [r4]
   33ae8:	cmp	r0, #34	; 0x22
   33aec:	beq	33b58 <flatcc_json_parser_build_string@@Base+0x160>
   33af0:	mov	r0, r5
   33af4:	mov	r1, r4
   33af8:	mov	r2, sl
   33afc:	mov	r3, r8
   33b00:	bl	31850 <flatcc_json_parser_string_escape@@Base>
   33b04:	mov	r7, r0
   33b08:	ldr	r0, [r5]
   33b0c:	ldrb	r2, [sp]
   33b10:	mov	r1, r6
   33b14:	bl	2d0d4 <flatcc_builder_append_string@@Base>
   33b18:	cmp	r0, #0
   33b1c:	beq	33b60 <flatcc_json_parser_build_string@@Base+0x168>
   33b20:	mov	r0, r5
   33b24:	mov	r1, r7
   33b28:	mov	r2, sl
   33b2c:	bl	316fc <flatcc_json_parser_string_part@@Base>
   33b30:	cmp	r0, sl
   33b34:	beq	33b68 <flatcc_json_parser_build_string@@Base+0x170>
   33b38:	mov	r4, r0
   33b3c:	sub	r2, r0, r7
   33b40:	ldr	r0, [r5]
   33b44:	mov	r1, r7
   33b48:	bl	2d0d4 <flatcc_builder_append_string@@Base>
   33b4c:	cmp	r0, #0
   33b50:	bne	33ae4 <flatcc_json_parser_build_string@@Base+0xec>
   33b54:	b	33aac <flatcc_json_parser_build_string@@Base+0xb4>
   33b58:	mov	r6, r4
   33b5c:	b	33b6c <flatcc_json_parser_build_string@@Base+0x174>
   33b60:	mov	r4, r7
   33b64:	b	33aac <flatcc_json_parser_build_string@@Base+0xb4>
   33b68:	mov	r6, sl
   33b6c:	ldr	r0, [r5]
   33b70:	bl	2f488 <flatcc_builder_end_string@@Base>
   33b74:	cmp	r6, sl
   33b78:	str	r0, [r9]
   33b7c:	beq	33b94 <flatcc_json_parser_build_string@@Base+0x19c>
   33b80:	ldrb	r0, [r6]
   33b84:	cmp	r0, #34	; 0x22
   33b88:	bne	33b94 <flatcc_json_parser_build_string@@Base+0x19c>
   33b8c:	add	r4, r6, #1
   33b90:	b	33bc0 <flatcc_json_parser_build_string@@Base+0x1c8>
   33b94:	ldr	r0, [r5, #20]
   33b98:	cmp	r0, #0
   33b9c:	bne	33bbc <flatcc_json_parser_build_string@@Base+0x1c4>
   33ba0:	str	r6, [r5, #32]
   33ba4:	add	r2, r6, #1
   33ba8:	mov	r0, #20
   33bac:	ldr	r1, [r5, #4]
   33bb0:	sub	r1, r2, r1
   33bb4:	str	r1, [r5, #16]
   33bb8:	str	r0, [r5, #20]
   33bbc:	mov	r4, sl
   33bc0:	mov	r0, r4
   33bc4:	sub	sp, fp, #28
   33bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033bcc <flatcc_json_parser_prepare_unions@@Base>:
   33bcc:	push	{r4, r5, r6, r7, fp, lr}
   33bd0:	add	fp, sp, #16
   33bd4:	mov	r5, r1
   33bd8:	mov	r6, r0
   33bdc:	add	r0, r3, r3, lsl #1
   33be0:	mov	r1, #8
   33be4:	mov	r7, r3
   33be8:	mov	r4, r2
   33bec:	add	r1, r1, r0, lsl #3
   33bf0:	ldr	r0, [r6]
   33bf4:	bl	2bffc <flatcc_builder_enter_user_frame@@Base>
   33bf8:	mov	r1, r0
   33bfc:	ldr	r0, [fp, #8]
   33c00:	cmp	r1, #0
   33c04:	str	r1, [r0]
   33c08:	beq	33c20 <flatcc_json_parser_prepare_unions@@Base+0x54>
   33c0c:	ldr	r0, [r6]
   33c10:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   33c14:	mov	r4, r5
   33c18:	str	r7, [r0]
   33c1c:	b	33c48 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   33c20:	ldr	r0, [r6, #20]
   33c24:	cmp	r0, #0
   33c28:	bne	33c48 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   33c2c:	str	r5, [r6, #32]
   33c30:	add	r2, r5, #1
   33c34:	mov	r0, #33	; 0x21
   33c38:	ldr	r1, [r6, #4]
   33c3c:	sub	r1, r2, r1
   33c40:	str	r1, [r6, #16]
   33c44:	str	r0, [r6, #20]
   33c48:	mov	r0, r4
   33c4c:	pop	{r4, r5, r6, r7, fp, pc}

00033c50 <flatcc_json_parser_finalize_unions@@Base>:
   33c50:	push	{r4, r5, r6, r7, fp, lr}
   33c54:	add	fp, sp, #16
   33c58:	mov	r6, r0
   33c5c:	ldr	r0, [r0]
   33c60:	mov	r7, r1
   33c64:	mov	r1, r3
   33c68:	mov	r5, r3
   33c6c:	mov	r4, r2
   33c70:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   33c74:	ldr	r0, [r0, #4]
   33c78:	cmp	r0, #0
   33c7c:	beq	33cac <flatcc_json_parser_finalize_unions@@Base+0x5c>
   33c80:	ldr	r0, [r6, #20]
   33c84:	cmp	r0, #0
   33c88:	bne	33cb0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   33c8c:	str	r7, [r6, #32]
   33c90:	add	r2, r7, #1
   33c94:	mov	r0, #27
   33c98:	ldr	r1, [r6, #4]
   33c9c:	sub	r1, r2, r1
   33ca0:	str	r1, [r6, #16]
   33ca4:	str	r0, [r6, #20]
   33ca8:	b	33cb0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   33cac:	mov	r4, r7
   33cb0:	ldr	r0, [r6]
   33cb4:	mov	r1, r5
   33cb8:	bl	2c108 <flatcc_builder_exit_user_frame_at@@Base>
   33cbc:	mov	r0, r4
   33cc0:	pop	{r4, r5, r6, r7, fp, pc}

00033cc4 <flatcc_json_parser_union@@Base>:
   33cc4:	push	{r4, r5, r6, r7, fp, lr}
   33cc8:	add	fp, sp, #16
   33ccc:	sub	sp, sp, #16
   33cd0:	mov	r6, r1
   33cd4:	mov	r5, r0
   33cd8:	ldr	r0, [r0]
   33cdc:	ldr	r1, [fp, #12]
   33ce0:	mov	r7, r3
   33ce4:	mov	r4, r2
   33ce8:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   33cec:	add	r2, r0, #8
   33cf0:	add	r3, r7, r7, lsl #1
   33cf4:	mov	r1, r2
   33cf8:	ldr	r7, [r1, r3, lsl #3]!
   33cfc:	cmp	r7, #0
   33d00:	beq	33d30 <flatcc_json_parser_union@@Base+0x6c>
   33d04:	ldr	r0, [r5, #20]
   33d08:	cmp	r0, #0
   33d0c:	bne	33df0 <flatcc_json_parser_union@@Base+0x12c>
   33d10:	mov	r0, #28
   33d14:	str	r6, [r5, #32]
   33d18:	add	r2, r6, #1
   33d1c:	ldr	r1, [r5, #4]
   33d20:	sub	r1, r2, r1
   33d24:	str	r1, [r5, #16]
   33d28:	str	r0, [r5, #20]
   33d2c:	b	33df0 <flatcc_json_parser_union@@Base+0x12c>
   33d30:	add	r2, r2, r3, lsl #3
   33d34:	ldrb	r3, [r2, #12]
   33d38:	cmp	r3, #0
   33d3c:	beq	33dac <flatcc_json_parser_union@@Base+0xe8>
   33d40:	ldrb	r3, [r2, #13]
   33d44:	cmp	r3, #0
   33d48:	strb	r3, [sp, #8]
   33d4c:	beq	33de4 <flatcc_json_parser_union@@Base+0x120>
   33d50:	ldr	r1, [r0, #4]
   33d54:	ldr	r7, [fp, #16]
   33d58:	mov	r2, r4
   33d5c:	sub	r1, r1, #1
   33d60:	str	r1, [r0, #4]
   33d64:	add	r0, sp, #8
   33d68:	mov	r1, r6
   33d6c:	add	r0, r0, #4
   33d70:	str	r0, [sp]
   33d74:	mov	r0, r5
   33d78:	blx	r7
   33d7c:	cmp	r0, r4
   33d80:	beq	33df0 <flatcc_json_parser_union@@Base+0x12c>
   33d84:	mov	r6, r0
   33d88:	ldr	r1, [fp, #8]
   33d8c:	ldr	r0, [r5]
   33d90:	ldr	r2, [sp, #8]
   33d94:	ldr	r3, [sp, #12]
   33d98:	bl	2e83c <flatcc_builder_table_add_union@@Base>
   33d9c:	cmp	r0, #0
   33da0:	bne	33d04 <flatcc_json_parser_union@@Base+0x40>
   33da4:	mov	r4, r6
   33da8:	b	33df0 <flatcc_json_parser_union@@Base+0x12c>
   33dac:	ldr	r3, [r0, #4]
   33db0:	add	r3, r3, #1
   33db4:	str	r3, [r0, #4]
   33db8:	ldr	r0, [r5, #12]
   33dbc:	str	r0, [r2, #8]
   33dc0:	ldr	r0, [r5, #4]
   33dc4:	str	r0, [r2, #4]
   33dc8:	str	r6, [r1]
   33dcc:	mov	r0, r5
   33dd0:	mov	r1, r6
   33dd4:	mov	r2, r4
   33dd8:	bl	31ecc <flatcc_json_parser_generic_json@@Base>
   33ddc:	mov	r4, r0
   33de0:	b	33df0 <flatcc_json_parser_union@@Base+0x12c>
   33de4:	ldr	r0, [r5, #20]
   33de8:	cmp	r0, #0
   33dec:	beq	33dfc <flatcc_json_parser_union@@Base+0x138>
   33df0:	mov	r0, r4
   33df4:	sub	sp, fp, #16
   33df8:	pop	{r4, r5, r6, r7, fp, pc}
   33dfc:	mov	r0, #25
   33e00:	b	33d14 <flatcc_json_parser_union@@Base+0x50>

00033e04 <flatcc_json_parser_union_type@@Base>:
   33e04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e08:	add	fp, sp, #28
   33e0c:	sub	sp, sp, #28
   33e10:	mov	r7, r1
   33e14:	mov	r5, r0
   33e18:	ldr	r0, [r0]
   33e1c:	ldr	r1, [fp, #12]
   33e20:	mov	r4, r3
   33e24:	mov	r8, r2
   33e28:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   33e2c:	add	r2, r0, #8
   33e30:	add	sl, r4, r4, lsl #1
   33e34:	mov	r6, r0
   33e38:	str	r8, [sp, #8]
   33e3c:	add	r9, r2, sl, lsl #3
   33e40:	mov	r0, r9
   33e44:	ldrb	r1, [r0, #12]!
   33e48:	cmp	r1, #0
   33e4c:	beq	33e88 <flatcc_json_parser_union_type@@Base+0x84>
   33e50:	ldr	r0, [r5, #20]
   33e54:	cmp	r0, #0
   33e58:	bne	33e78 <flatcc_json_parser_union_type@@Base+0x74>
   33e5c:	str	r7, [r5, #32]
   33e60:	mov	r0, #28
   33e64:	add	r2, r7, #1
   33e68:	ldr	r1, [r5, #4]
   33e6c:	sub	r1, r2, r1
   33e70:	str	r1, [r5, #16]
   33e74:	str	r0, [r5, #20]
   33e78:	ldr	r3, [sp, #8]
   33e7c:	mov	r0, r3
   33e80:	sub	sp, fp, #28
   33e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33e88:	mov	r1, #1
   33e8c:	mov	r4, r9
   33e90:	str	r2, [sp, #4]
   33e94:	cmp	r7, r8
   33e98:	mov	r2, r8
   33e9c:	strb	r1, [r0]
   33ea0:	mov	r0, #0
   33ea4:	str	r0, [sp, #20]
   33ea8:	str	r0, [sp, #16]
   33eac:	str	r0, [sp, #12]
   33eb0:	strb	r0, [r4, #13]!
   33eb4:	beq	33f58 <flatcc_json_parser_union_type@@Base+0x154>
   33eb8:	add	r0, sp, #16
   33ebc:	add	r3, sp, #12
   33ec0:	mov	r1, r7
   33ec4:	str	r0, [sp]
   33ec8:	mov	r0, r5
   33ecc:	bl	334d0 <flatcc_json_parser_integer@@Base>
   33ed0:	ldr	r2, [sp, #8]
   33ed4:	cmp	r0, r7
   33ed8:	beq	33f58 <flatcc_json_parser_union_type@@Base+0x154>
   33edc:	ldr	r1, [sp, #12]
   33ee0:	cmp	r1, #0
   33ee4:	beq	33f00 <flatcc_json_parser_union_type@@Base+0xfc>
   33ee8:	ldr	r1, [r5, #20]
   33eec:	mov	r3, r2
   33ef0:	cmp	r1, #0
   33ef4:	bne	33f50 <flatcc_json_parser_union_type@@Base+0x14c>
   33ef8:	mov	r1, #8
   33efc:	b	33f28 <flatcc_json_parser_union_type@@Base+0x124>
   33f00:	ldr	r1, [sp, #16]
   33f04:	ldr	ip, [sp, #20]
   33f08:	subs	r3, r1, #256	; 0x100
   33f0c:	sbcs	r3, ip, #0
   33f10:	bcc	33f48 <flatcc_json_parser_union_type@@Base+0x144>
   33f14:	ldr	r1, [r5, #20]
   33f18:	mov	r3, r2
   33f1c:	cmp	r1, #0
   33f20:	bne	33f50 <flatcc_json_parser_union_type@@Base+0x14c>
   33f24:	mov	r1, #7
   33f28:	str	r0, [r5, #32]
   33f2c:	add	r0, r0, #1
   33f30:	ldr	r3, [r5, #4]
   33f34:	sub	r0, r0, r3
   33f38:	mov	r3, r2
   33f3c:	str	r0, [r5, #16]
   33f40:	str	r1, [r5, #20]
   33f44:	b	33f50 <flatcc_json_parser_union_type@@Base+0x14c>
   33f48:	mov	r3, r0
   33f4c:	strb	r1, [r4]
   33f50:	cmp	r3, r7
   33f54:	bne	33f74 <flatcc_json_parser_union_type@@Base+0x170>
   33f58:	ldr	r3, [fp, #16]
   33f5c:	mov	r0, r5
   33f60:	mov	r1, r7
   33f64:	str	r4, [sp]
   33f68:	bl	34060 <flatcc_json_parser_union_type@@Base+0x25c>
   33f6c:	ldr	r2, [sp, #8]
   33f70:	mov	r3, r0
   33f74:	ldr	r0, [sp, #4]
   33f78:	ldr	r1, [r0, sl, lsl #3]
   33f7c:	cmp	r1, #0
   33f80:	beq	34018 <flatcc_json_parser_union_type@@Base+0x214>
   33f84:	ldr	r0, [r6, #4]
   33f88:	cmp	r0, #0
   33f8c:	beq	34040 <flatcc_json_parser_union_type@@Base+0x23c>
   33f90:	sub	r0, r0, #1
   33f94:	mov	sl, r3
   33f98:	ldr	r7, [fp, #20]
   33f9c:	str	r0, [r6, #4]
   33fa0:	ldr	r0, [r9, #8]
   33fa4:	ldr	r8, [r5, #4]
   33fa8:	ldr	r6, [r5, #12]
   33fac:	str	r0, [r5, #12]
   33fb0:	ldr	r0, [r9, #4]
   33fb4:	str	r0, [r5, #4]
   33fb8:	add	r0, sp, #16
   33fbc:	ldrb	r3, [r4]
   33fc0:	add	r0, r0, #4
   33fc4:	str	r0, [sp]
   33fc8:	mov	r0, r5
   33fcc:	strb	r3, [sp, #16]
   33fd0:	blx	r7
   33fd4:	ldr	r3, [sp, #8]
   33fd8:	cmp	r0, r3
   33fdc:	beq	33e7c <flatcc_json_parser_union_type@@Base+0x78>
   33fe0:	ldr	r1, [fp, #8]
   33fe4:	ldr	r0, [r5]
   33fe8:	ldr	r2, [sp, #16]
   33fec:	ldr	r3, [sp, #20]
   33ff0:	bl	2e83c <flatcc_builder_table_add_union@@Base>
   33ff4:	cmp	r0, #0
   33ff8:	beq	34030 <flatcc_json_parser_union_type@@Base+0x22c>
   33ffc:	ldr	r0, [r5, #20]
   34000:	cmp	r0, #0
   34004:	bne	33e78 <flatcc_json_parser_union_type@@Base+0x74>
   34008:	str	sl, [r5, #32]
   3400c:	mov	r0, #28
   34010:	add	r2, sl, #1
   34014:	b	33e68 <flatcc_json_parser_union_type@@Base+0x64>
   34018:	ldrb	r0, [r4]
   3401c:	ldr	r1, [r6, #4]
   34020:	cmp	r0, #0
   34024:	addne	r1, r1, #1
   34028:	str	r1, [r6, #4]
   3402c:	b	33e7c <flatcc_json_parser_union_type@@Base+0x78>
   34030:	mov	r3, sl
   34034:	str	r8, [r5, #4]
   34038:	str	r6, [r5, #12]
   3403c:	b	33e7c <flatcc_json_parser_union_type@@Base+0x78>
   34040:	movw	r0, #26228	; 0x6674
   34044:	movw	r1, #26243	; 0x6683
   34048:	movw	r3, #26317	; 0x66cd
   3404c:	movw	r2, #965	; 0x3c5
   34050:	movt	r0, #4
   34054:	movt	r1, #4
   34058:	movt	r3, #4
   3405c:	bl	14f44 <__assert_fail@plt>
   34060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34064:	add	fp, sp, #28
   34068:	sub	sp, sp, #36	; 0x24
   3406c:	mov	r4, r2
   34070:	mov	r2, r1
   34074:	ldr	r1, [fp, #8]
   34078:	mov	r5, r0
   3407c:	mov	r0, #0
   34080:	mov	r6, r3
   34084:	cmp	r2, r4
   34088:	strb	r0, [r1]
   3408c:	beq	340a4 <flatcc_json_parser_union_type@@Base+0x2a0>
   34090:	ldrb	r0, [r2]
   34094:	cmp	r0, #34	; 0x22
   34098:	bne	340ac <flatcc_json_parser_union_type@@Base+0x2a8>
   3409c:	add	r1, r2, #1
   340a0:	b	340dc <flatcc_json_parser_union_type@@Base+0x2d8>
   340a4:	mov	r1, r2
   340a8:	b	340dc <flatcc_json_parser_union_type@@Base+0x2d8>
   340ac:	ldr	r0, [r5, #20]
   340b0:	mov	r1, r4
   340b4:	cmp	r0, #0
   340b8:	bne	340dc <flatcc_json_parser_union_type@@Base+0x2d8>
   340bc:	str	r2, [r5, #32]
   340c0:	add	r2, r2, #1
   340c4:	mov	r0, #5
   340c8:	ldr	r1, [r5, #4]
   340cc:	sub	r1, r2, r1
   340d0:	str	r1, [r5, #16]
   340d4:	mov	r1, r4
   340d8:	str	r0, [r5, #20]
   340dc:	sub	r0, r4, r1
   340e0:	cmp	r0, #2
   340e4:	blt	34110 <flatcc_json_parser_union_type@@Base+0x30c>
   340e8:	ldrb	r0, [r1]
   340ec:	cmp	r0, #32
   340f0:	bls	340fc <flatcc_json_parser_union_type@@Base+0x2f8>
   340f4:	mov	r7, r1
   340f8:	b	34120 <flatcc_json_parser_union_type@@Base+0x31c>
   340fc:	bne	34110 <flatcc_json_parser_union_type@@Base+0x30c>
   34100:	mov	r7, r1
   34104:	ldrb	r0, [r7, #1]!
   34108:	cmp	r0, #32
   3410c:	bhi	34120 <flatcc_json_parser_union_type@@Base+0x31c>
   34110:	mov	r0, r5
   34114:	mov	r2, r4
   34118:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   3411c:	mov	r7, r0
   34120:	cmp	r7, r4
   34124:	beq	341f8 <flatcc_json_parser_union_type@@Base+0x3f4>
   34128:	add	sl, r6, #4
   3412c:	add	r8, sp, #24
   34130:	add	r9, sp, #20
   34134:	str	r6, [sp, #12]
   34138:	str	sl, [sp, #8]
   3413c:	ldr	r6, [r6]
   34140:	add	r0, sp, #16
   34144:	mov	r1, r7
   34148:	mov	r2, r4
   3414c:	mov	r3, r9
   34150:	str	r8, [sp]
   34154:	str	r0, [sp, #4]
   34158:	mov	r0, r5
   3415c:	blx	r6
   34160:	cmp	r0, r4
   34164:	beq	341f8 <flatcc_json_parser_union_type@@Base+0x3f4>
   34168:	cmp	r0, r7
   3416c:	bne	34180 <flatcc_json_parser_union_type@@Base+0x37c>
   34170:	ldr	r6, [sl], #4
   34174:	cmp	r6, #0
   34178:	bne	34140 <flatcc_json_parser_union_type@@Base+0x33c>
   3417c:	b	341d0 <flatcc_json_parser_union_type@@Base+0x3cc>
   34180:	ldr	r1, [sp, #20]
   34184:	cmp	r1, #0
   34188:	bne	34204 <flatcc_json_parser_union_type@@Base+0x400>
   3418c:	ldr	r1, [sp, #24]
   34190:	ldr	r2, [sp, #28]
   34194:	subs	r3, r1, #256	; 0x100
   34198:	sbcs	r2, r2, #0
   3419c:	bcs	34218 <flatcc_json_parser_union_type@@Base+0x414>
   341a0:	ldr	r2, [fp, #8]
   341a4:	ldr	r6, [sp, #12]
   341a8:	ldr	sl, [sp, #8]
   341ac:	mov	r7, r0
   341b0:	mov	r3, r2
   341b4:	ldrb	r2, [r2]
   341b8:	add	r1, r2, r1
   341bc:	strb	r1, [r3]
   341c0:	ldr	r1, [sp, #16]
   341c4:	cmp	r1, #0
   341c8:	bne	3413c <flatcc_json_parser_union_type@@Base+0x338>
   341cc:	b	341fc <flatcc_json_parser_union_type@@Base+0x3f8>
   341d0:	ldr	r0, [r5, #20]
   341d4:	cmp	r0, #0
   341d8:	bne	341f8 <flatcc_json_parser_union_type@@Base+0x3f4>
   341dc:	str	r7, [r5, #32]
   341e0:	add	r2, r7, #1
   341e4:	mov	r0, #23
   341e8:	ldr	r1, [r5, #4]
   341ec:	sub	r1, r2, r1
   341f0:	str	r1, [r5, #16]
   341f4:	str	r0, [r5, #20]
   341f8:	mov	r0, r4
   341fc:	sub	sp, fp, #28
   34200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34204:	ldr	r1, [r5, #20]
   34208:	cmp	r1, #0
   3420c:	bne	341f8 <flatcc_json_parser_union_type@@Base+0x3f4>
   34210:	mov	r1, #8
   34214:	b	34228 <flatcc_json_parser_union_type@@Base+0x424>
   34218:	ldr	r1, [r5, #20]
   3421c:	cmp	r1, #0
   34220:	bne	341f8 <flatcc_json_parser_union_type@@Base+0x3f4>
   34224:	mov	r1, #7
   34228:	str	r0, [r5, #32]
   3422c:	add	r0, r0, #1
   34230:	ldr	r2, [r5, #4]
   34234:	sub	r0, r0, r2
   34238:	str	r0, [r5, #16]
   3423c:	str	r1, [r5, #20]
   34240:	b	341f8 <flatcc_json_parser_union_type@@Base+0x3f4>

00034244 <flatcc_json_parser_union_vector@@Base>:
   34244:	push	{r4, r5, r6, r7, fp, lr}
   34248:	add	fp, sp, #16
   3424c:	sub	sp, sp, #16
   34250:	mov	r6, r1
   34254:	mov	r5, r0
   34258:	ldr	r0, [r0]
   3425c:	ldr	r1, [fp, #12]
   34260:	mov	r7, r3
   34264:	mov	r4, r2
   34268:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   3426c:	add	r2, r0, #8
   34270:	add	r3, r7, r7, lsl #1
   34274:	mov	r1, r2
   34278:	ldr	r7, [r1, r3, lsl #3]!
   3427c:	cmp	r7, #0
   34280:	beq	342b8 <flatcc_json_parser_union_vector@@Base+0x74>
   34284:	ldr	r0, [r5, #20]
   34288:	cmp	r0, #0
   3428c:	bne	342ac <flatcc_json_parser_union_vector@@Base+0x68>
   34290:	str	r6, [r5, #32]
   34294:	add	r2, r6, #1
   34298:	mov	r0, #28
   3429c:	ldr	r1, [r5, #4]
   342a0:	sub	r1, r2, r1
   342a4:	str	r1, [r5, #16]
   342a8:	str	r0, [r5, #20]
   342ac:	mov	r0, r4
   342b0:	sub	sp, fp, #16
   342b4:	pop	{r4, r5, r6, r7, fp, pc}
   342b8:	add	r2, r2, r3, lsl #3
   342bc:	ldr	r3, [r0, #4]
   342c0:	ldrb	r7, [r2, #12]
   342c4:	cmp	r7, #0
   342c8:	beq	34304 <flatcc_json_parser_union_vector@@Base+0xc0>
   342cc:	sub	r3, r3, #1
   342d0:	ldr	r1, [fp, #16]
   342d4:	ldr	r7, [fp, #8]
   342d8:	str	r3, [r0, #4]
   342dc:	ldr	r0, [r2, #16]
   342e0:	ldr	r3, [r2, #20]
   342e4:	mov	r2, r4
   342e8:	stm	sp, {r0, r7}
   342ec:	str	r1, [sp, #8]
   342f0:	mov	r0, r5
   342f4:	mov	r1, r6
   342f8:	bl	34338 <flatcc_json_parser_union_vector@@Base+0xf4>
   342fc:	sub	sp, fp, #16
   34300:	pop	{r4, r5, r6, r7, fp, pc}
   34304:	add	r3, r3, #1
   34308:	str	r3, [r0, #4]
   3430c:	ldr	r0, [r5, #12]
   34310:	str	r0, [r2, #8]
   34314:	ldr	r0, [r5, #4]
   34318:	str	r0, [r2, #4]
   3431c:	str	r6, [r1]
   34320:	mov	r0, r5
   34324:	mov	r1, r6
   34328:	mov	r2, r4
   3432c:	sub	sp, fp, #16
   34330:	pop	{r4, r5, r6, r7, fp, lr}
   34334:	b	31ecc <flatcc_json_parser_generic_json@@Base>
   34338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3433c:	add	fp, sp, #28
   34340:	sub	sp, sp, #12
   34344:	mov	r5, r0
   34348:	mov	r0, #0
   3434c:	mov	r8, r3
   34350:	mov	r6, r2
   34354:	mov	r7, r1
   34358:	str	r0, [sp, #8]
   3435c:	ldr	r0, [r5]
   34360:	bl	2d468 <flatcc_builder_start_offset_vector@@Base>
   34364:	cmp	r0, #0
   34368:	beq	34388 <flatcc_json_parser_union_vector@@Base+0x144>
   3436c:	ldr	r0, [r5, #20]
   34370:	cmp	r0, #0
   34374:	bne	345f4 <flatcc_json_parser_union_vector@@Base+0x3b0>
   34378:	str	r7, [r5, #32]
   3437c:	mov	r0, #33	; 0x21
   34380:	add	r2, r7, #1
   34384:	b	345e4 <flatcc_json_parser_union_vector@@Base+0x3a0>
   34388:	ldr	sl, [fp, #8]
   3438c:	cmp	r7, r6
   34390:	beq	343c4 <flatcc_json_parser_union_vector@@Base+0x180>
   34394:	ldrb	r0, [r7]
   34398:	cmp	r0, #91	; 0x5b
   3439c:	bne	343c4 <flatcc_json_parser_union_vector@@Base+0x180>
   343a0:	add	r1, r7, #1
   343a4:	sub	r0, r6, r1
   343a8:	cmp	r0, #2
   343ac:	blt	34408 <flatcc_json_parser_union_vector@@Base+0x1c4>
   343b0:	ldrb	r0, [r1]
   343b4:	cmp	r0, #32
   343b8:	bls	343f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   343bc:	mov	r7, r1
   343c0:	b	34418 <flatcc_json_parser_union_vector@@Base+0x1d4>
   343c4:	ldr	r0, [r5, #20]
   343c8:	mov	r9, r6
   343cc:	cmp	r0, #0
   343d0:	bne	345c4 <flatcc_json_parser_union_vector@@Base+0x380>
   343d4:	str	r7, [r5, #32]
   343d8:	add	r2, r7, #1
   343dc:	mov	r0, #22
   343e0:	mov	r9, r6
   343e4:	ldr	r1, [r5, #4]
   343e8:	sub	r1, r2, r1
   343ec:	str	r1, [r5, #16]
   343f0:	str	r0, [r5, #20]
   343f4:	b	345c4 <flatcc_json_parser_union_vector@@Base+0x380>
   343f8:	bne	34408 <flatcc_json_parser_union_vector@@Base+0x1c4>
   343fc:	ldrb	r0, [r7, #2]!
   34400:	cmp	r0, #32
   34404:	bhi	34418 <flatcc_json_parser_union_vector@@Base+0x1d4>
   34408:	mov	r0, r5
   3440c:	mov	r2, r6
   34410:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   34414:	mov	r7, r0
   34418:	cmp	r7, r6
   3441c:	mov	r4, r6
   34420:	beq	34458 <flatcc_json_parser_union_vector@@Base+0x214>
   34424:	ldrb	r0, [r7]
   34428:	cmp	r0, #93	; 0x5d
   3442c:	bne	34454 <flatcc_json_parser_union_vector@@Base+0x210>
   34430:	add	r1, r7, #1
   34434:	sub	r0, r6, r1
   34438:	cmp	r0, #2
   3443c:	blt	345b4 <flatcc_json_parser_union_vector@@Base+0x370>
   34440:	ldrb	r0, [r1]
   34444:	cmp	r0, #32
   34448:	bls	345a0 <flatcc_json_parser_union_vector@@Base+0x35c>
   3444c:	mov	r9, r1
   34450:	b	345c4 <flatcc_json_parser_union_vector@@Base+0x380>
   34454:	mov	r4, r7
   34458:	cmp	sl, #0
   3445c:	beq	34584 <flatcc_json_parser_union_vector@@Base+0x340>
   34460:	add	r0, r6, #1
   34464:	mov	sl, #0
   34468:	add	r9, sp, #8
   3446c:	str	r0, [sp, #4]
   34470:	ldr	r0, [r5]
   34474:	mov	r1, r8
   34478:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   3447c:	ldrb	r3, [r0, -sl]
   34480:	ldr	r7, [fp, #16]
   34484:	mov	r0, r5
   34488:	mov	r1, r4
   3448c:	mov	r2, r6
   34490:	str	r9, [sp]
   34494:	blx	r7
   34498:	cmp	r0, r6
   3449c:	beq	345f4 <flatcc_json_parser_union_vector@@Base+0x3b0>
   344a0:	mov	r7, r0
   344a4:	ldr	r0, [r5]
   344a8:	mov	r1, #1
   344ac:	bl	2ce24 <flatcc_builder_extend_offset_vector@@Base>
   344b0:	cmp	r0, #0
   344b4:	beq	3436c <flatcc_json_parser_union_vector@@Base+0x128>
   344b8:	ldr	r1, [sp, #8]
   344bc:	str	r1, [r0]
   344c0:	sub	r0, r6, r7
   344c4:	cmp	r0, #2
   344c8:	blt	344f4 <flatcc_json_parser_union_vector@@Base+0x2b0>
   344cc:	ldrb	r0, [r7]
   344d0:	cmp	r0, #32
   344d4:	bls	344e0 <flatcc_json_parser_union_vector@@Base+0x29c>
   344d8:	mov	r4, r7
   344dc:	b	34508 <flatcc_json_parser_union_vector@@Base+0x2c4>
   344e0:	bne	344f4 <flatcc_json_parser_union_vector@@Base+0x2b0>
   344e4:	mov	r4, r7
   344e8:	ldrb	r0, [r4, #1]!
   344ec:	cmp	r0, #32
   344f0:	bhi	34508 <flatcc_json_parser_union_vector@@Base+0x2c4>
   344f4:	mov	r0, r5
   344f8:	mov	r1, r7
   344fc:	mov	r2, r6
   34500:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   34504:	mov	r4, r0
   34508:	cmp	r4, r6
   3450c:	beq	34678 <flatcc_json_parser_union_vector@@Base+0x434>
   34510:	ldrb	r0, [r4]
   34514:	cmp	r0, #44	; 0x2c
   34518:	bne	34600 <flatcc_json_parser_union_vector@@Base+0x3bc>
   3451c:	add	r1, r4, #1
   34520:	sub	r0, r6, r1
   34524:	cmp	r0, #2
   34528:	blt	34550 <flatcc_json_parser_union_vector@@Base+0x30c>
   3452c:	ldrb	r0, [r1]
   34530:	cmp	r0, #32
   34534:	bls	34540 <flatcc_json_parser_union_vector@@Base+0x2fc>
   34538:	mov	r4, r1
   3453c:	b	34560 <flatcc_json_parser_union_vector@@Base+0x31c>
   34540:	bne	34550 <flatcc_json_parser_union_vector@@Base+0x30c>
   34544:	ldrb	r0, [r4, #2]!
   34548:	cmp	r0, #32
   3454c:	bhi	34560 <flatcc_json_parser_union_vector@@Base+0x31c>
   34550:	mov	r0, r5
   34554:	mov	r2, r6
   34558:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   3455c:	mov	r4, r0
   34560:	cmp	r4, r6
   34564:	beq	3462c <flatcc_json_parser_union_vector@@Base+0x3e8>
   34568:	ldrb	r0, [r4]
   3456c:	cmp	r0, #93	; 0x5d
   34570:	beq	34608 <flatcc_json_parser_union_vector@@Base+0x3c4>
   34574:	ldr	r0, [fp, #8]
   34578:	sub	sl, sl, #1
   3457c:	adds	r0, r0, sl
   34580:	bne	34470 <flatcc_json_parser_union_vector@@Base+0x22c>
   34584:	ldr	r0, [r5, #20]
   34588:	cmp	r0, #0
   3458c:	bne	345f4 <flatcc_json_parser_union_vector@@Base+0x3b0>
   34590:	str	r4, [r5, #32]
   34594:	mov	r0, #30
   34598:	add	r2, r4, #1
   3459c:	b	345e4 <flatcc_json_parser_union_vector@@Base+0x3a0>
   345a0:	bne	345b4 <flatcc_json_parser_union_vector@@Base+0x370>
   345a4:	ldrb	r0, [r7, #2]!
   345a8:	cmp	r0, #32
   345ac:	mov	r9, r7
   345b0:	bhi	345c4 <flatcc_json_parser_union_vector@@Base+0x380>
   345b4:	mov	r0, r5
   345b8:	mov	r2, r6
   345bc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   345c0:	mov	r9, r0
   345c4:	cmp	sl, #0
   345c8:	beq	346b4 <flatcc_json_parser_union_vector@@Base+0x470>
   345cc:	ldr	r0, [r5, #20]
   345d0:	cmp	r0, #0
   345d4:	bne	345f4 <flatcc_json_parser_union_vector@@Base+0x3b0>
   345d8:	str	r9, [r5, #32]
   345dc:	mov	r0, #30
   345e0:	add	r2, r9, #1
   345e4:	ldr	r1, [r5, #4]
   345e8:	sub	r1, r2, r1
   345ec:	str	r1, [r5, #16]
   345f0:	str	r0, [r5, #20]
   345f4:	mov	r0, r6
   345f8:	sub	sp, fp, #28
   345fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34600:	cmp	r0, #93	; 0x5d
   34604:	bne	3464c <flatcc_json_parser_union_vector@@Base+0x408>
   34608:	add	r1, r4, #1
   3460c:	sub	r0, r6, r1
   34610:	cmp	r0, #2
   34614:	blt	34694 <flatcc_json_parser_union_vector@@Base+0x450>
   34618:	ldrb	r0, [r1]
   3461c:	cmp	r0, #32
   34620:	bls	34680 <flatcc_json_parser_union_vector@@Base+0x43c>
   34624:	mov	r9, r1
   34628:	b	346a4 <flatcc_json_parser_union_vector@@Base+0x460>
   3462c:	ldr	r0, [r5, #20]
   34630:	mov	r9, r6
   34634:	cmp	r0, #0
   34638:	bne	346a4 <flatcc_json_parser_union_vector@@Base+0x460>
   3463c:	str	r6, [r5, #32]
   34640:	ldr	r2, [sp, #4]
   34644:	mov	r0, #9
   34648:	b	34668 <flatcc_json_parser_union_vector@@Base+0x424>
   3464c:	ldr	r0, [r5, #20]
   34650:	mov	r9, r6
   34654:	cmp	r0, #0
   34658:	bne	346a4 <flatcc_json_parser_union_vector@@Base+0x460>
   3465c:	str	r4, [r5, #32]
   34660:	mov	r0, #9
   34664:	add	r2, r4, #1
   34668:	ldr	r1, [r5, #4]
   3466c:	sub	r1, r2, r1
   34670:	str	r1, [r5, #16]
   34674:	str	r0, [r5, #20]
   34678:	mov	r9, r6
   3467c:	b	346a4 <flatcc_json_parser_union_vector@@Base+0x460>
   34680:	bne	34694 <flatcc_json_parser_union_vector@@Base+0x450>
   34684:	ldrb	r0, [r4, #2]!
   34688:	cmp	r0, #32
   3468c:	mov	r9, r4
   34690:	bhi	346a4 <flatcc_json_parser_union_vector@@Base+0x460>
   34694:	mov	r0, r5
   34698:	mov	r2, r6
   3469c:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   346a0:	mov	r9, r0
   346a4:	ldr	r0, [fp, #8]
   346a8:	add	r0, r0, sl
   346ac:	cmp	r0, #1
   346b0:	bne	345cc <flatcc_json_parser_union_vector@@Base+0x388>
   346b4:	ldr	r0, [r5]
   346b8:	mov	r1, r8
   346bc:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   346c0:	mov	r1, r0
   346c4:	ldr	r0, [r5]
   346c8:	bl	2e750 <flatcc_builder_end_offset_vector_for_unions@@Base>
   346cc:	cmp	r0, #0
   346d0:	str	r0, [sp, #8]
   346d4:	beq	346fc <flatcc_json_parser_union_vector@@Base+0x4b8>
   346d8:	ldr	r1, [fp, #12]
   346dc:	ldr	r0, [r5]
   346e0:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   346e4:	cmp	r0, #0
   346e8:	beq	346fc <flatcc_json_parser_union_vector@@Base+0x4b8>
   346ec:	ldr	r1, [sp, #8]
   346f0:	mov	r6, r9
   346f4:	str	r1, [r0]
   346f8:	b	345f4 <flatcc_json_parser_union_vector@@Base+0x3b0>
   346fc:	mov	r7, r9
   34700:	b	3436c <flatcc_json_parser_union_vector@@Base+0x128>

00034704 <flatcc_json_parser_union_type_vector@@Base>:
   34704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34708:	add	fp, sp, #28
   3470c:	sub	sp, sp, #44	; 0x2c
   34710:	mov	r7, r1
   34714:	mov	r5, r0
   34718:	ldr	r0, [r0]
   3471c:	ldr	r1, [fp, #12]
   34720:	mov	r4, r3
   34724:	mov	r6, r2
   34728:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   3472c:	add	r0, r0, #8
   34730:	add	sl, r4, r4, lsl #1
   34734:	add	r9, r0, sl, lsl #3
   34738:	mov	r0, r9
   3473c:	ldrb	r1, [r0, #12]!
   34740:	cmp	r1, #0
   34744:	beq	34764 <flatcc_json_parser_union_type_vector@@Base+0x60>
   34748:	ldr	r0, [r5, #20]
   3474c:	cmp	r0, #0
   34750:	bne	34c10 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34754:	mov	r0, #28
   34758:	str	r7, [r5, #32]
   3475c:	add	r2, r7, #1
   34760:	b	34c00 <flatcc_json_parser_union_type_vector@@Base+0x4fc>
   34764:	mov	r1, #1
   34768:	mov	r2, #1
   3476c:	mvn	r3, #0
   34770:	strb	r1, [r0]
   34774:	mov	r1, #1
   34778:	ldr	r0, [r5]
   3477c:	bl	2d3dc <flatcc_builder_start_vector@@Base>
   34780:	cmp	r0, #0
   34784:	beq	34790 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   34788:	mov	r4, r7
   3478c:	b	34be8 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   34790:	cmp	r7, r6
   34794:	beq	347c8 <flatcc_json_parser_union_type_vector@@Base+0xc4>
   34798:	ldrb	r0, [r7]
   3479c:	cmp	r0, #91	; 0x5b
   347a0:	bne	347c8 <flatcc_json_parser_union_type_vector@@Base+0xc4>
   347a4:	add	r1, r7, #1
   347a8:	sub	r0, r6, r1
   347ac:	cmp	r0, #2
   347b0:	blt	3480c <flatcc_json_parser_union_type_vector@@Base+0x108>
   347b4:	ldrb	r0, [r1]
   347b8:	cmp	r0, #32
   347bc:	bls	347fc <flatcc_json_parser_union_type_vector@@Base+0xf8>
   347c0:	mov	r7, r1
   347c4:	b	3481c <flatcc_json_parser_union_type_vector@@Base+0x118>
   347c8:	ldr	r0, [r5, #20]
   347cc:	mov	r8, r6
   347d0:	cmp	r0, #0
   347d4:	bne	34ae4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   347d8:	str	r7, [r5, #32]
   347dc:	mov	r0, #22
   347e0:	add	r2, r7, #1
   347e4:	ldr	r1, [r5, #4]
   347e8:	sub	r1, r2, r1
   347ec:	str	r1, [r5, #16]
   347f0:	str	r0, [r5, #20]
   347f4:	mov	r8, r6
   347f8:	b	34ae4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   347fc:	bne	3480c <flatcc_json_parser_union_type_vector@@Base+0x108>
   34800:	ldrb	r0, [r7, #2]!
   34804:	cmp	r0, #32
   34808:	bhi	3481c <flatcc_json_parser_union_type_vector@@Base+0x118>
   3480c:	mov	r0, r5
   34810:	mov	r2, r6
   34814:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   34818:	mov	r7, r0
   3481c:	cmp	r7, r6
   34820:	mov	r4, r6
   34824:	beq	3485c <flatcc_json_parser_union_type_vector@@Base+0x158>
   34828:	ldrb	r0, [r7]
   3482c:	cmp	r0, #93	; 0x5d
   34830:	bne	34858 <flatcc_json_parser_union_type_vector@@Base+0x154>
   34834:	add	r1, r7, #1
   34838:	sub	r0, r6, r1
   3483c:	cmp	r0, #2
   34840:	blt	34ad4 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34844:	ldrb	r0, [r1]
   34848:	cmp	r0, #32
   3484c:	bls	34a84 <flatcc_json_parser_union_type_vector@@Base+0x380>
   34850:	mov	r8, r1
   34854:	b	34ae4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   34858:	mov	r4, r7
   3485c:	ldr	r0, [r5]
   34860:	mov	r1, #1
   34864:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   34868:	cmp	r0, #0
   3486c:	beq	34be8 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   34870:	mov	r1, r0
   34874:	add	r0, r6, #1
   34878:	str	r0, [sp, #16]
   3487c:	mov	r8, #0
   34880:	cmp	r4, r6
   34884:	str	r1, [sp, #20]
   34888:	str	r8, [sp, #36]	; 0x24
   3488c:	str	r8, [sp, #32]
   34890:	strb	r8, [sp, #27]
   34894:	str	r8, [sp, #28]
   34898:	beq	3493c <flatcc_json_parser_union_type_vector@@Base+0x238>
   3489c:	add	r0, sp, #32
   348a0:	mov	r1, r4
   348a4:	mov	r2, r6
   348a8:	add	r3, sp, #28
   348ac:	str	r0, [sp]
   348b0:	mov	r0, r5
   348b4:	bl	334d0 <flatcc_json_parser_integer@@Base>
   348b8:	cmp	r0, r4
   348bc:	beq	348f8 <flatcc_json_parser_union_type_vector@@Base+0x1f4>
   348c0:	mov	r7, r0
   348c4:	ldr	r0, [sp, #28]
   348c8:	cmp	r0, #0
   348cc:	beq	34900 <flatcc_json_parser_union_type_vector@@Base+0x1fc>
   348d0:	ldr	r0, [r5, #20]
   348d4:	cmp	r0, #0
   348d8:	bne	3493c <flatcc_json_parser_union_type_vector@@Base+0x238>
   348dc:	str	r7, [r5, #32]
   348e0:	add	r1, r7, #1
   348e4:	ldr	r0, [r5, #4]
   348e8:	sub	r0, r1, r0
   348ec:	str	r0, [r5, #16]
   348f0:	mov	r0, #8
   348f4:	b	34938 <flatcc_json_parser_union_type_vector@@Base+0x234>
   348f8:	mov	r7, r4
   348fc:	b	34940 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   34900:	ldr	r0, [sp, #32]
   34904:	ldr	r1, [sp, #36]	; 0x24
   34908:	subs	r2, r0, #256	; 0x100
   3490c:	sbcs	r1, r1, #0
   34910:	bcc	34a78 <flatcc_json_parser_union_type_vector@@Base+0x374>
   34914:	ldr	r0, [r5, #20]
   34918:	cmp	r0, #0
   3491c:	bne	3493c <flatcc_json_parser_union_type_vector@@Base+0x238>
   34920:	str	r7, [r5, #32]
   34924:	add	r1, r7, #1
   34928:	ldr	r0, [r5, #4]
   3492c:	sub	r0, r1, r0
   34930:	str	r0, [r5, #16]
   34934:	mov	r0, #7
   34938:	str	r0, [r5, #20]
   3493c:	mov	r7, r6
   34940:	cmp	r4, r7
   34944:	bne	34978 <flatcc_json_parser_union_type_vector@@Base+0x274>
   34948:	ldr	r3, [fp, #16]
   3494c:	add	r0, sp, #27
   34950:	mov	r1, r4
   34954:	mov	r2, r6
   34958:	str	r0, [sp]
   3495c:	mov	r0, r5
   34960:	bl	34060 <flatcc_json_parser_union_type@@Base+0x25c>
   34964:	mov	r7, r0
   34968:	cmp	r0, r4
   3496c:	cmpne	r7, r6
   34970:	beq	34788 <flatcc_json_parser_union_type_vector@@Base+0x84>
   34974:	ldrb	r8, [sp, #27]
   34978:	ldr	r1, [fp, #24]
   3497c:	uxtb	r0, r8
   34980:	blx	r1
   34984:	cmp	r0, #0
   34988:	bne	349a0 <flatcc_json_parser_union_type_vector@@Base+0x29c>
   3498c:	ldrb	r0, [r5, #8]
   34990:	tst	r0, #1
   34994:	beq	34c6c <flatcc_json_parser_union_type_vector@@Base+0x568>
   34998:	mov	r8, #0
   3499c:	strb	r8, [sp, #27]
   349a0:	ldr	r0, [sp, #20]
   349a4:	strb	r8, [r0]
   349a8:	sub	r0, r6, r7
   349ac:	cmp	r0, #2
   349b0:	blt	349dc <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   349b4:	ldrb	r0, [r7]
   349b8:	cmp	r0, #32
   349bc:	bls	349c8 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
   349c0:	mov	r4, r7
   349c4:	b	349f0 <flatcc_json_parser_union_type_vector@@Base+0x2ec>
   349c8:	bne	349dc <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   349cc:	mov	r4, r7
   349d0:	ldrb	r0, [r4, #1]!
   349d4:	cmp	r0, #32
   349d8:	bhi	349f0 <flatcc_json_parser_union_type_vector@@Base+0x2ec>
   349dc:	mov	r0, r5
   349e0:	mov	r1, r7
   349e4:	mov	r2, r6
   349e8:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   349ec:	mov	r4, r0
   349f0:	cmp	r4, r6
   349f4:	beq	347f4 <flatcc_json_parser_union_type_vector@@Base+0xf0>
   349f8:	ldrb	r0, [r4]
   349fc:	cmp	r0, #44	; 0x2c
   34a00:	bne	34a9c <flatcc_json_parser_union_type_vector@@Base+0x398>
   34a04:	add	r1, r4, #1
   34a08:	sub	r0, r6, r1
   34a0c:	cmp	r0, #2
   34a10:	blt	34a38 <flatcc_json_parser_union_type_vector@@Base+0x334>
   34a14:	ldrb	r0, [r1]
   34a18:	cmp	r0, #32
   34a1c:	bls	34a28 <flatcc_json_parser_union_type_vector@@Base+0x324>
   34a20:	mov	r4, r1
   34a24:	b	34a48 <flatcc_json_parser_union_type_vector@@Base+0x344>
   34a28:	bne	34a38 <flatcc_json_parser_union_type_vector@@Base+0x334>
   34a2c:	ldrb	r0, [r4, #2]!
   34a30:	cmp	r0, #32
   34a34:	bhi	34a48 <flatcc_json_parser_union_type_vector@@Base+0x344>
   34a38:	mov	r0, r5
   34a3c:	mov	r2, r6
   34a40:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   34a44:	mov	r4, r0
   34a48:	cmp	r4, r6
   34a4c:	beq	34c2c <flatcc_json_parser_union_type_vector@@Base+0x528>
   34a50:	ldrb	r0, [r4]
   34a54:	cmp	r0, #93	; 0x5d
   34a58:	beq	34aa4 <flatcc_json_parser_union_type_vector@@Base+0x3a0>
   34a5c:	ldr	r0, [r5]
   34a60:	mov	r1, #1
   34a64:	bl	2cbc4 <flatcc_builder_extend_vector@@Base>
   34a68:	mov	r1, r0
   34a6c:	cmp	r0, #0
   34a70:	bne	3487c <flatcc_json_parser_union_type_vector@@Base+0x178>
   34a74:	b	34be8 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   34a78:	mov	r8, r0
   34a7c:	strb	r0, [sp, #27]
   34a80:	b	34940 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   34a84:	bne	34ad4 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34a88:	ldrb	r0, [r7, #2]!
   34a8c:	cmp	r0, #32
   34a90:	mov	r8, r7
   34a94:	bls	34ad4 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34a98:	b	34ae4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   34a9c:	cmp	r0, #93	; 0x5d
   34aa0:	bne	34c4c <flatcc_json_parser_union_type_vector@@Base+0x548>
   34aa4:	add	r1, r4, #1
   34aa8:	sub	r0, r6, r1
   34aac:	cmp	r0, #2
   34ab0:	blt	34ad4 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34ab4:	ldrb	r0, [r1]
   34ab8:	cmp	r0, #32
   34abc:	bhi	34850 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   34ac0:	bne	34ad4 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34ac4:	ldrb	r0, [r4, #2]!
   34ac8:	cmp	r0, #32
   34acc:	mov	r8, r4
   34ad0:	bhi	34ae4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   34ad4:	mov	r0, r5
   34ad8:	mov	r2, r6
   34adc:	bl	31774 <flatcc_json_parser_space_ext@@Base>
   34ae0:	mov	r8, r0
   34ae4:	ldr	r0, [r5]
   34ae8:	bl	2e538 <flatcc_builder_vector_count@@Base>
   34aec:	str	r0, [r9, #16]
   34af0:	mov	r4, r0
   34af4:	ldr	r0, [r5]
   34af8:	mov	r1, r4
   34afc:	bl	2bffc <flatcc_builder_enter_user_frame@@Base>
   34b00:	mov	r9, r0
   34b04:	ldr	r0, [r5]
   34b08:	mov	r1, r9
   34b0c:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   34b10:	mov	r7, r0
   34b14:	ldr	r0, [r5]
   34b18:	bl	2e544 <flatcc_builder_vector_edit@@Base>
   34b1c:	mov	r1, r0
   34b20:	mov	r0, r7
   34b24:	mov	r2, r4
   34b28:	bl	14e60 <memcpy@plt>
   34b2c:	ldr	r0, [r5]
   34b30:	bl	2e448 <flatcc_builder_end_vector@@Base>
   34b34:	cmp	r0, #0
   34b38:	beq	34be4 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   34b3c:	ldr	r1, [fp, #8]
   34b40:	mov	r7, r0
   34b44:	ldr	r0, [r5]
   34b48:	sub	r1, r1, #1
   34b4c:	bl	2e93c <flatcc_builder_table_add_offset@@Base>
   34b50:	cmp	r0, #0
   34b54:	beq	34be4 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   34b58:	str	r7, [r0]
   34b5c:	ldr	r1, [fp, #12]
   34b60:	ldr	r0, [r5]
   34b64:	bl	2c14c <flatcc_builder_get_user_frame_ptr@@Base>
   34b68:	add	r2, r0, #8
   34b6c:	mov	r3, r2
   34b70:	ldr	r1, [r3, sl, lsl #3]!
   34b74:	str	r9, [r3, #20]
   34b78:	cmp	r1, #0
   34b7c:	ldr	r3, [r0, #4]
   34b80:	beq	34c1c <flatcc_json_parser_union_type_vector@@Base+0x518>
   34b84:	cmp	r3, #0
   34b88:	beq	34c80 <flatcc_json_parser_union_type_vector@@Base+0x57c>
   34b8c:	sub	r3, r3, #1
   34b90:	ldr	ip, [fp, #20]
   34b94:	str	r3, [r0, #4]
   34b98:	add	r0, r2, sl, lsl #3
   34b9c:	mov	r3, r9
   34ba0:	ldr	r2, [r0, #8]
   34ba4:	ldr	sl, [r5, #4]
   34ba8:	ldr	r7, [r5, #12]
   34bac:	str	r2, [r5, #12]
   34bb0:	mov	r2, r6
   34bb4:	ldr	r0, [r0, #4]
   34bb8:	str	r0, [r5, #4]
   34bbc:	ldr	r0, [fp, #8]
   34bc0:	str	r4, [sp]
   34bc4:	stmib	sp, {r0, ip}
   34bc8:	mov	r0, r5
   34bcc:	bl	34338 <flatcc_json_parser_union_vector@@Base+0xf4>
   34bd0:	cmp	r0, r6
   34bd4:	beq	34c10 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34bd8:	str	sl, [r5, #4]
   34bdc:	str	r7, [r5, #12]
   34be0:	b	34c24 <flatcc_json_parser_union_type_vector@@Base+0x520>
   34be4:	mov	r4, r8
   34be8:	ldr	r0, [r5, #20]
   34bec:	cmp	r0, #0
   34bf0:	bne	34c10 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34bf4:	str	r4, [r5, #32]
   34bf8:	mov	r0, #33	; 0x21
   34bfc:	add	r2, r4, #1
   34c00:	ldr	r1, [r5, #4]
   34c04:	sub	r1, r2, r1
   34c08:	str	r1, [r5, #16]
   34c0c:	str	r0, [r5, #20]
   34c10:	mov	r0, r6
   34c14:	sub	sp, fp, #28
   34c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34c1c:	add	r1, r3, #1
   34c20:	str	r1, [r0, #4]
   34c24:	mov	r6, r8
   34c28:	b	34c10 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34c2c:	ldr	r0, [r5, #20]
   34c30:	mov	r8, r6
   34c34:	cmp	r0, #0
   34c38:	bne	34ae4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   34c3c:	str	r6, [r5, #32]
   34c40:	ldr	r2, [sp, #16]
   34c44:	mov	r0, #9
   34c48:	b	347e4 <flatcc_json_parser_union_type_vector@@Base+0xe0>
   34c4c:	ldr	r0, [r5, #20]
   34c50:	mov	r8, r6
   34c54:	cmp	r0, #0
   34c58:	bne	34ae4 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   34c5c:	str	r4, [r5, #32]
   34c60:	mov	r0, #9
   34c64:	add	r2, r4, #1
   34c68:	b	347e4 <flatcc_json_parser_union_type_vector@@Base+0xe0>
   34c6c:	ldr	r0, [r5, #20]
   34c70:	cmp	r0, #0
   34c74:	bne	34c10 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34c78:	mov	r0, #15
   34c7c:	b	34758 <flatcc_json_parser_union_type_vector@@Base+0x54>
   34c80:	movw	r0, #26228	; 0x6674
   34c84:	movw	r1, #26243	; 0x6683
   34c88:	movw	r3, #26521	; 0x6799
   34c8c:	movw	r2, #1122	; 0x462
   34c90:	movt	r0, #4
   34c94:	movt	r1, #4
   34c98:	movt	r3, #4
   34c9c:	bl	14f44 <__assert_fail@plt>

00034ca0 <flatcc_json_parser_table_as_root@@Base>:
   34ca0:	push	{r4, r5, r6, r7, fp, lr}
   34ca4:	add	fp, sp, #16
   34ca8:	sub	sp, sp, #48	; 0x30
   34cac:	add	r5, sp, #8
   34cb0:	cmp	r1, #0
   34cb4:	mov	r6, r0
   34cb8:	vmov.i32	q8, #0	; 0x00000000
   34cbc:	add	r7, r2, r3
   34cc0:	mov	r4, r2
   34cc4:	movne	r5, r1
   34cc8:	mov	r1, #2
   34ccc:	add	r0, r5, #16
   34cd0:	vst1.32	{d16-d17}, [r0]
   34cd4:	mov	r0, #0
   34cd8:	str	r0, [r5, #36]	; 0x24
   34cdc:	mov	r0, #1
   34ce0:	str	r2, [r5, #32]
   34ce4:	str	r6, [r5]
   34ce8:	str	r2, [r5, #4]
   34cec:	str	r0, [r5, #12]
   34cf0:	ldr	r0, [fp, #8]
   34cf4:	and	r3, r1, r0, lsr #1
   34cf8:	ldr	r1, [fp, #12]
   34cfc:	str	r0, [r5, #8]
   34d00:	str	r2, [r5, #24]
   34d04:	mov	r0, r6
   34d08:	mov	r2, #0
   34d0c:	str	r7, [r5, #28]
   34d10:	bl	2c72c <flatcc_builder_start_buffer@@Base>
   34d14:	mov	r1, r0
   34d18:	mvn	r0, #0
   34d1c:	cmp	r1, #0
   34d20:	bne	34d64 <flatcc_json_parser_table_as_root@@Base+0xc4>
   34d24:	ldr	ip, [fp, #16]
   34d28:	add	r3, sp, #4
   34d2c:	mov	r0, r5
   34d30:	mov	r1, r4
   34d34:	mov	r2, r7
   34d38:	blx	ip
   34d3c:	ldr	r0, [r5, #20]
   34d40:	cmp	r0, #0
   34d44:	bne	34d64 <flatcc_json_parser_table_as_root@@Base+0xc4>
   34d48:	ldr	r1, [sp, #4]
   34d4c:	mov	r0, r6
   34d50:	bl	2c91c <flatcc_builder_end_buffer@@Base>
   34d54:	cmp	r0, #0
   34d58:	mvn	r0, #0
   34d5c:	movne	r0, #0
   34d60:	strne	r4, [r5, #36]	; 0x24
   34d64:	sub	sp, fp, #16
   34d68:	pop	{r4, r5, r6, r7, fp, pc}

00034d6c <flatcc_json_parser_struct_as_root@@Base>:
   34d6c:	push	{r4, r5, r6, r7, fp, lr}
   34d70:	add	fp, sp, #16
   34d74:	sub	sp, sp, #48	; 0x30
   34d78:	add	r5, sp, #8
   34d7c:	cmp	r1, #0
   34d80:	mov	r6, r0
   34d84:	vmov.i32	q8, #0	; 0x00000000
   34d88:	add	r7, r2, r3
   34d8c:	mov	r4, r2
   34d90:	movne	r5, r1
   34d94:	mov	r1, #2
   34d98:	add	r0, r5, #16
   34d9c:	vst1.32	{d16-d17}, [r0]
   34da0:	mov	r0, #0
   34da4:	str	r0, [r5, #36]	; 0x24
   34da8:	mov	r0, #1
   34dac:	str	r2, [r5, #32]
   34db0:	str	r6, [r5]
   34db4:	str	r2, [r5, #4]
   34db8:	str	r0, [r5, #12]
   34dbc:	ldr	r0, [fp, #8]
   34dc0:	and	r3, r1, r0, lsr #1
   34dc4:	ldr	r1, [fp, #12]
   34dc8:	str	r0, [r5, #8]
   34dcc:	str	r2, [r5, #24]
   34dd0:	mov	r0, r6
   34dd4:	mov	r2, #0
   34dd8:	str	r7, [r5, #28]
   34ddc:	bl	2c72c <flatcc_builder_start_buffer@@Base>
   34de0:	mov	r1, r0
   34de4:	mvn	r0, #0
   34de8:	cmp	r1, #0
   34dec:	bne	34e30 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   34df0:	ldr	ip, [fp, #16]
   34df4:	add	r3, sp, #4
   34df8:	mov	r0, r5
   34dfc:	mov	r1, r4
   34e00:	mov	r2, r7
   34e04:	blx	ip
   34e08:	ldr	r0, [r5, #20]
   34e0c:	cmp	r0, #0
   34e10:	bne	34e30 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   34e14:	ldr	r1, [sp, #4]
   34e18:	mov	r0, r6
   34e1c:	bl	2c91c <flatcc_builder_end_buffer@@Base>
   34e20:	cmp	r0, #0
   34e24:	mvn	r0, #0
   34e28:	movne	r0, #0
   34e2c:	strne	r4, [r5, #36]	; 0x24
   34e30:	sub	sp, fp, #16
   34e34:	pop	{r4, r5, r6, r7, fp, pc}

00034e38 <flatcc_json_printer_error_string@@Base>:
   34e38:	cmp	r0, #3
   34e3c:	movwhi	r0, #23114	; 0x5a4a
   34e40:	movthi	r0, #4
   34e44:	bxhi	lr
   34e48:	movw	r1, #29884	; 0x74bc
   34e4c:	movt	r1, #4
   34e50:	ldr	r0, [r1, r0, lsl #2]
   34e54:	bx	lr

00034e58 <flatcc_json_printer_fmt_float@@Base>:
   34e58:	vcvt.f64.f32	d0, s0
   34e5c:	b	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   34e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34e64:	add	fp, sp, #28
   34e68:	sub	sp, sp, #4
   34e6c:	vpush	{d8}
   34e70:	sub	sp, sp, #168	; 0xa8
   34e74:	cmp	r0, #0
   34e78:	beq	35688 <flatcc_json_printer_fmt_float@@Base+0x830>
   34e7c:	vmov	r3, r2, d0
   34e80:	mov	r5, #-2147483648	; 0x80000000
   34e84:	mov	r6, #0
   34e88:	vorr	d8, d0, d0
   34e8c:	add	r1, r5, #266338304	; 0xfe00000
   34e90:	lsl	r7, r2, #1
   34e94:	subs	r6, r6, r3, lsl #1
   34e98:	add	r1, r1, #1879048192	; 0x70000000
   34e9c:	orr	r7, r7, r3, lsr #31
   34ea0:	sbcs	r1, r1, r7
   34ea4:	bcs	34ec4 <flatcc_json_printer_fmt_float@@Base+0x6c>
   34ea8:	movw	r1, #27679	; 0x6c1f
   34eac:	movt	r1, #4
   34eb0:	sub	sp, fp, #40	; 0x28
   34eb4:	vpop	{d8}
   34eb8:	add	sp, sp, #4
   34ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34ec0:	b	14f2c <sprintf@plt>
   34ec4:	cmn	r2, #1
   34ec8:	ble	34ed4 <flatcc_json_printer_fmt_float@@Base+0x7c>
   34ecc:	mov	r4, r0
   34ed0:	b	34ee8 <flatcc_json_printer_fmt_float@@Base+0x90>
   34ed4:	mov	r1, #45	; 0x2d
   34ed8:	mov	r4, r0
   34edc:	vneg.f64	d8, d8
   34ee0:	eor	r2, r2, r5
   34ee4:	strb	r1, [r4], #1
   34ee8:	movw	r5, #0
   34eec:	movt	r5, #32752	; 0x7ff0
   34ef0:	eor	r1, r2, r5
   34ef4:	orrs	r1, r3, r1
   34ef8:	beq	34f10 <flatcc_json_printer_fmt_float@@Base+0xb8>
   34efc:	orrs	r1, r3, r2
   34f00:	bne	34f24 <flatcc_json_printer_fmt_float@@Base+0xcc>
   34f04:	mov	r1, #48	; 0x30
   34f08:	strh	r1, [r4], #1
   34f0c:	b	34f1c <flatcc_json_printer_fmt_float@@Base+0xc4>
   34f10:	movw	r1, #28265	; 0x6e69
   34f14:	movt	r1, #102	; 0x66
   34f18:	str	r1, [r4], #3
   34f1c:	sub	r0, r4, r0
   34f20:	b	35670 <flatcc_json_printer_fmt_float@@Base+0x818>
   34f24:	vmov	r6, r7, d8
   34f28:	str	r0, [sp, #76]	; 0x4c
   34f2c:	str	r4, [sp, #100]	; 0x64
   34f30:	ands	sl, r7, r5
   34f34:	bfc	r7, #20, #12
   34f38:	beq	34f50 <flatcc_json_printer_fmt_float@@Base+0xf8>
   34f3c:	movw	r0, #64461	; 0xfbcd
   34f40:	orr	r8, r7, #1048576	; 0x100000
   34f44:	movt	r0, #65535	; 0xffff
   34f48:	add	r5, r0, sl, lsr #20
   34f4c:	b	34f5c <flatcc_json_printer_fmt_float@@Base+0x104>
   34f50:	movw	r5, #64462	; 0xfbce
   34f54:	mov	r8, r7
   34f58:	movt	r5, #65535	; 0xffff
   34f5c:	mov	r4, #0
   34f60:	sub	r0, fp, #88	; 0x58
   34f64:	mov	r2, r6
   34f68:	mov	r3, r8
   34f6c:	str	r5, [sp]
   34f70:	str	r4, [sp, #4]
   34f74:	bl	405c4 <flatcc_json_printer_clear@@Base+0xe0>
   34f78:	mov	r0, #1
   34f7c:	str	r4, [sp, #4]
   34f80:	sub	r9, r5, #1
   34f84:	orr	r2, r0, r6, lsl #1
   34f88:	lsl	r0, r8, #1
   34f8c:	str	r9, [sp]
   34f90:	orr	r4, r0, r6, lsr #31
   34f94:	add	r0, sp, #104	; 0x68
   34f98:	mov	r3, r4
   34f9c:	bl	405c4 <flatcc_json_printer_clear@@Base+0xe0>
   34fa0:	vcmpe.f64	d8, #0.0
   34fa4:	vmrs	APSR_nzcv, fpscr
   34fa8:	ble	356a8 <flatcc_json_printer_fmt_float@@Base+0x850>
   34fac:	vldr	d16, [pc, #940]	; 35360 <flatcc_json_printer_fmt_float@@Base+0x508>
   34fb0:	vcmpe.f64	d8, d16
   34fb4:	vmrs	APSR_nzcv, fpscr
   34fb8:	bhi	356a8 <flatcc_json_printer_fmt_float@@Base+0x850>
   34fbc:	orrs	r1, r6, r7
   34fc0:	clz	r2, sl
   34fc4:	mvn	r3, #60	; 0x3c
   34fc8:	lsl	r0, r8, #2
   34fcc:	vldr	d16, [pc, #916]	; 35368 <flatcc_json_printer_fmt_float@@Base+0x510>
   34fd0:	movwne	r1, #1
   34fd4:	lsr	r2, r2, #5
   34fd8:	orrs	r1, r1, r2
   34fdc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34fe0:	orreq	r4, r0, r6, lsr #30
   34fe4:	lsl	r0, r6, #2
   34fe8:	lslne	r0, r6, #1
   34fec:	subs	r0, r0, #1
   34ff0:	sub	r2, r3, r2
   34ff4:	vmov	s0, r2
   34ff8:	sbc	r2, r4, #0
   34ffc:	cmp	r1, #0
   35000:	vcvt.f64.s32	d17, s0
   35004:	ldr	sl, [sp, #112]	; 0x70
   35008:	subeq	r9, r5, #2
   3500c:	vmul.f64	d16, d17, d16
   35010:	vcvt.s32.f64	s0, d16
   35014:	vcmpe.f64	d16, #0.0
   35018:	sub	r1, r9, sl
   3501c:	rsb	r3, r1, #32
   35020:	lsl	r7, r0, r1
   35024:	lsr	r3, r0, r3
   35028:	orr	r6, r3, r2, lsl r1
   3502c:	sub	r2, r1, #32
   35030:	sub	r1, fp, #88	; 0x58
   35034:	cmp	r2, #0
   35038:	lslge	r6, r0, r2
   3503c:	add	r2, r1, #8
   35040:	add	r1, sp, #104	; 0x68
   35044:	movwge	r7, #0
   35048:	vmov	r0, s0
   3504c:	vmrs	APSR_nzcv, fpscr
   35050:	add	r1, r1, #8
   35054:	str	r1, [sp, #96]	; 0x60
   35058:	bmi	35070 <flatcc_json_printer_fmt_float@@Base+0x218>
   3505c:	vcvt.f64.s32	d17, s0
   35060:	vsub.f64	d16, d16, d17
   35064:	vcmp.f64	d16, #0.0
   35068:	vmrs	APSR_nzcv, fpscr
   3506c:	addne	r0, r0, #1
   35070:	mov	r1, #0
   35074:	ldrd	r4, [r2]
   35078:	str	r2, [sp, #92]	; 0x5c
   3507c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   35080:	ldr	r3, [fp, #-84]	; 0xffffffac
   35084:	str	r1, [sp, #20]
   35088:	movw	r1, #347	; 0x15b
   3508c:	add	r0, r0, r1
   35090:	asr	r1, r0, #31
   35094:	add	r0, r0, r1, lsr #29
   35098:	mvn	r1, #15
   3509c:	stm	sp, {r4, r5}
   350a0:	and	r0, r1, r0, lsl #1
   350a4:	movw	r1, #28432	; 0x6f10
   350a8:	movt	r1, #4
   350ac:	add	r0, r1, r0
   350b0:	ldrsh	r8, [r0, #24]
   350b4:	ldrd	r4, [r0, #16]
   350b8:	str	r8, [sp, #16]
   350bc:	str	r0, [sp, #36]	; 0x24
   350c0:	sub	r0, fp, #88	; 0x58
   350c4:	str	r5, [sp, #12]
   350c8:	str	r4, [sp, #8]
   350cc:	bl	40668 <flatcc_json_printer_clear@@Base+0x184>
   350d0:	mov	r0, #0
   350d4:	str	sl, [sp]
   350d8:	mov	r2, r7
   350dc:	mov	r3, r6
   350e0:	stmib	sp, {r0, r4, r5, r8}
   350e4:	str	r0, [sp, #20]
   350e8:	sub	r0, fp, #56	; 0x38
   350ec:	bl	40668 <flatcc_json_printer_clear@@Base+0x184>
   350f0:	sub	sl, fp, #56	; 0x38
   350f4:	ldm	sl, {r6, r7, sl}
   350f8:	ldr	r9, [sp, #96]	; 0x60
   350fc:	ldr	r2, [sp, #104]	; 0x68
   35100:	ldr	r3, [sp, #108]	; 0x6c
   35104:	ldrd	r0, [r9]
   35108:	stm	sp, {r0, r1, r4, r5, r8}
   3510c:	mov	r0, #0
   35110:	mov	r8, #0
   35114:	str	r0, [sp, #20]
   35118:	add	r0, sp, #104	; 0x68
   3511c:	bl	40668 <flatcc_json_printer_clear@@Base+0x184>
   35120:	ldr	r0, [sp, #92]	; 0x5c
   35124:	subs	r2, r6, #1
   35128:	add	ip, sp, #8
   3512c:	sbc	r3, r7, #0
   35130:	ldr	r4, [r0]
   35134:	ldr	r0, [r0, #4]
   35138:	ldr	r5, [r9]
   3513c:	ldr	r1, [sp, #108]	; 0x6c
   35140:	str	r0, [sp, #72]	; 0x48
   35144:	ldr	r0, [fp, #-88]	; 0xffffffa8
   35148:	str	r0, [sp, #60]	; 0x3c
   3514c:	ldr	r0, [fp, #-84]	; 0xffffffac
   35150:	str	r0, [sp, #64]	; 0x40
   35154:	ldr	r0, [sp, #104]	; 0x68
   35158:	str	r5, [sp, #48]	; 0x30
   3515c:	stm	sp, {r5, r8}
   35160:	stm	ip, {r2, r3, sl}
   35164:	mov	r2, #0
   35168:	str	r2, [sp, #20]
   3516c:	adds	r8, r0, #1
   35170:	sub	r0, fp, #56	; 0x38
   35174:	adc	sl, r1, #0
   35178:	mov	r2, r8
   3517c:	mov	r3, sl
   35180:	bl	406cc <flatcc_json_printer_clear@@Base+0x1e8>
   35184:	rsb	r1, r4, #0
   35188:	add	ip, r4, #32
   3518c:	movw	r7, #1233	; 0x4d1
   35190:	mov	r5, #1
   35194:	str	r4, [sp, #68]	; 0x44
   35198:	str	r8, [sp, #52]	; 0x34
   3519c:	lsr	r0, r8, r1
   351a0:	orr	r2, r0, sl, lsl ip
   351a4:	mvn	r0, #31
   351a8:	sub	r3, r0, r4
   351ac:	movw	r0, #14609	; 0x3911
   351b0:	movt	r0, #1
   351b4:	cmp	r3, #0
   351b8:	mla	r7, r4, r7, r0
   351bc:	movw	r0, #29824	; 0x7480
   351c0:	lsrge	r2, sl, r3
   351c4:	lsl	r4, r5, r1
   351c8:	add	lr, r5, r7, asr #12
   351cc:	movt	r0, #4
   351d0:	ldr	r6, [r0, lr, lsl #2]
   351d4:	cmp	r6, r2
   351d8:	lsr	r6, r5, ip
   351dc:	asrhi	lr, r7, #12
   351e0:	cmp	r3, #0
   351e4:	ldr	r7, [fp, #-56]	; 0xffffffc8
   351e8:	movwge	r4, #0
   351ec:	lslge	r6, r5, r3
   351f0:	subs	ip, r4, #1
   351f4:	sbc	r3, r6, #0
   351f8:	and	r9, ip, r8
   351fc:	cmp	lr, #0
   35200:	str	r3, [sp, #92]	; 0x5c
   35204:	and	r8, r3, sl
   35208:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3520c:	str	sl, [sp, #56]	; 0x38
   35210:	str	r6, [sp, #44]	; 0x2c
   35214:	str	r4, [sp, #40]	; 0x28
   35218:	str	ip, [sp, #96]	; 0x60
   3521c:	ble	35358 <flatcc_json_printer_fmt_float@@Base+0x500>
   35220:	str	r3, [sp, #80]	; 0x50
   35224:	ldr	r0, [r0, lr, lsl #2]
   35228:	sub	lr, lr, #1
   3522c:	mov	r4, #0
   35230:	ldr	ip, [sp, #100]	; 0x64
   35234:	b	35264 <flatcc_json_printer_fmt_float@@Base+0x40c>
   35238:	add	r3, lr, #1
   3523c:	cmp	r3, #2
   35240:	blt	35370 <flatcc_json_printer_fmt_float@@Base+0x518>
   35244:	ldr	r0, [sp, #84]	; 0x54
   35248:	ldr	r4, [sp, #88]	; 0x58
   3524c:	movw	r3, #52429	; 0xcccd
   35250:	sub	lr, lr, #1
   35254:	movt	r3, #52428	; 0xcccc
   35258:	umull	r3, r6, r0, r3
   3525c:	add	r4, r4, #1
   35260:	lsr	r0, r6, #3
   35264:	udiv	r3, r2, r0
   35268:	str	r4, [sp, #88]	; 0x58
   3526c:	str	r0, [sp, #84]	; 0x54
   35270:	add	r6, r3, #48	; 0x30
   35274:	mls	r2, r3, r0, r2
   35278:	rsb	r0, r1, #32
   3527c:	strb	r6, [ip, r4]
   35280:	sub	r6, r1, #32
   35284:	lsl	r4, r2, r1
   35288:	lsr	r3, r2, r0
   3528c:	cmp	r6, #0
   35290:	movwge	r4, #0
   35294:	lslge	r3, r2, r6
   35298:	adds	r4, r4, r9
   3529c:	adc	sl, r3, r8
   352a0:	subs	r3, r4, r7
   352a4:	ldr	r3, [sp, #80]	; 0x50
   352a8:	sbcs	r3, sl, r3
   352ac:	bcs	35238 <flatcc_json_printer_fmt_float@@Base+0x3e0>
   352b0:	str	lr, [sp, #96]	; 0x60
   352b4:	mov	r8, r0
   352b8:	mov	r2, #0
   352bc:	mov	r9, ip
   352c0:	mov	r5, r1
   352c4:	ldr	r0, [sp, #48]	; 0x30
   352c8:	stm	sp, {r0, r2}
   352cc:	ldr	r0, [sp, #60]	; 0x3c
   352d0:	str	r0, [sp, #8]
   352d4:	ldr	r0, [sp, #64]	; 0x40
   352d8:	str	r0, [sp, #12]
   352dc:	ldr	r0, [sp, #68]	; 0x44
   352e0:	str	r0, [sp, #16]
   352e4:	ldr	r0, [sp, #72]	; 0x48
   352e8:	str	r0, [sp, #20]
   352ec:	sub	r0, fp, #72	; 0x48
   352f0:	ldr	r2, [sp, #52]	; 0x34
   352f4:	ldr	r3, [sp, #56]	; 0x38
   352f8:	bl	406cc <flatcc_json_printer_clear@@Base+0x1e8>
   352fc:	ldr	r0, [sp, #84]	; 0x54
   35300:	ldr	r2, [fp, #-72]	; 0xffffffb8
   35304:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35308:	str	r7, [sp]
   3530c:	cmp	r6, #0
   35310:	mov	ip, #1
   35314:	ldr	r7, [sp, #80]	; 0x50
   35318:	str	r4, [sp, #8]
   3531c:	str	sl, [sp, #12]
   35320:	str	ip, [sp, #24]
   35324:	lsr	r1, r0, r8
   35328:	lslge	r1, r0, r6
   3532c:	lsl	r6, r0, r5
   35330:	mov	r0, #0
   35334:	str	r7, [sp, #4]
   35338:	movwge	r6, #0
   3533c:	str	r1, [sp, #20]
   35340:	str	r0, [sp, #28]
   35344:	str	r6, [sp, #16]
   35348:	ldr	r0, [sp, #88]	; 0x58
   3534c:	add	r6, r0, #1
   35350:	mov	r0, r9
   35354:	b	35494 <flatcc_json_printer_fmt_float@@Base+0x63c>
   35358:	mov	r6, #0
   3535c:	b	3537c <flatcc_json_printer_fmt_float@@Base+0x524>
   35360:			; <UNDEFINED> instruction: 0xffffffff
   35364:	svcvc	0x00efffff
   35368:			; <UNDEFINED> instruction: 0x509f79fe
   3536c:	svccc	0x00d34413
   35370:	ldr	r0, [sp, #88]	; 0x58
   35374:	ldr	r3, [sp, #80]	; 0x50
   35378:	add	r6, r0, #1
   3537c:	rsb	r0, r1, #32
   35380:	mov	sl, #0
   35384:	mov	ip, #10
   35388:	str	r0, [sp, #84]	; 0x54
   3538c:	sub	r0, r1, #32
   35390:	str	r1, [sp, #88]	; 0x58
   35394:	str	r0, [sp, #80]	; 0x50
   35398:	ldr	r2, [sp, #88]	; 0x58
   3539c:	umull	r4, r1, r9, ip
   353a0:	mov	r0, r3
   353a4:	sub	lr, lr, #1
   353a8:	lsr	r3, r4, r2
   353ac:	add	r2, r8, r8, lsl #2
   353b0:	add	r1, r1, r2, lsl #1
   353b4:	ldr	r2, [sp, #84]	; 0x54
   353b8:	orr	r2, r3, r1, lsl r2
   353bc:	ldr	r3, [sp, #80]	; 0x50
   353c0:	cmp	r3, #0
   353c4:	lsrge	r2, r1, r3
   353c8:	ldr	r3, [sp, #100]	; 0x64
   353cc:	add	r2, r2, #48	; 0x30
   353d0:	strb	r2, [r3, r6]
   353d4:	umull	r5, r2, r5, ip
   353d8:	add	r3, sl, sl, lsl #2
   353dc:	add	r6, r6, #1
   353e0:	add	sl, r2, r3, lsl #1
   353e4:	add	r3, r0, r0, lsl #2
   353e8:	ldr	r0, [sp, #92]	; 0x5c
   353ec:	umull	r7, r2, r7, ip
   353f0:	add	r3, r2, r3, lsl #1
   353f4:	and	r8, r1, r0
   353f8:	ldr	r0, [sp, #96]	; 0x60
   353fc:	and	r9, r4, r0
   35400:	subs	r1, r9, r7
   35404:	sbcs	r1, r8, r3
   35408:	bcs	35398 <flatcc_json_printer_fmt_float@@Base+0x540>
   3540c:	str	lr, [sp, #96]	; 0x60
   35410:	mov	r0, #0
   35414:	str	r7, [fp, #-56]	; 0xffffffc8
   35418:	str	r3, [fp, #-52]	; 0xffffffcc
   3541c:	mov	r4, r3
   35420:	ldr	r1, [sp, #48]	; 0x30
   35424:	str	r0, [sp, #4]
   35428:	str	r1, [sp]
   3542c:	ldr	r0, [sp, #60]	; 0x3c
   35430:	str	r0, [sp, #8]
   35434:	ldr	r0, [sp, #64]	; 0x40
   35438:	str	r0, [sp, #12]
   3543c:	ldr	r0, [sp, #68]	; 0x44
   35440:	str	r0, [sp, #16]
   35444:	ldr	r0, [sp, #72]	; 0x48
   35448:	str	r0, [sp, #20]
   3544c:	sub	r0, fp, #72	; 0x48
   35450:	ldr	r2, [sp, #52]	; 0x34
   35454:	ldr	r3, [sp, #56]	; 0x38
   35458:	bl	406cc <flatcc_json_printer_clear@@Base+0x1e8>
   3545c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   35460:	ldr	r1, [fp, #-68]	; 0xffffffbc
   35464:	str	r7, [sp]
   35468:	stmib	sp, {r4, r9}
   3546c:	str	r8, [sp, #12]
   35470:	add	r3, sp, #20
   35474:	ldr	r2, [sp, #40]	; 0x28
   35478:	str	r2, [sp, #16]
   3547c:	ldr	r2, [sp, #44]	; 0x2c
   35480:	stm	r3, {r2, r5, sl}
   35484:	umull	r2, r3, r0, r5
   35488:	mla	r0, r0, sl, r3
   3548c:	mla	r3, r1, r5, r0
   35490:	ldr	r0, [sp, #100]	; 0x64
   35494:	mov	r1, r6
   35498:	bl	40724 <flatcc_json_printer_clear@@Base+0x240>
   3549c:	ldr	r4, [sp, #96]	; 0x60
   354a0:	cmp	r0, #0
   354a4:	beq	35534 <flatcc_json_printer_fmt_float@@Base+0x6dc>
   354a8:	ldr	r0, [sp, #36]	; 0x24
   354ac:	cmp	r6, #3
   354b0:	ldr	r1, [sp, #100]	; 0x64
   354b4:	ldrsh	r5, [r0, #26]
   354b8:	sub	r0, r6, #1
   354bc:	movwlt	r0, #1
   354c0:	sub	r7, r4, r5
   354c4:	rsb	r3, r7, #0
   354c8:	cmp	r0, r3
   354cc:	movge	r0, r3
   354d0:	cmn	r7, #1
   354d4:	ble	3555c <flatcc_json_printer_fmt_float@@Base+0x704>
   354d8:	cmp	r7, #3
   354dc:	bcs	35640 <flatcc_json_printer_fmt_float@@Base+0x7e8>
   354e0:	cmp	r7, #0
   354e4:	beq	35660 <flatcc_json_printer_fmt_float@@Base+0x808>
   354e8:	add	r0, r1, r6
   354ec:	mvn	r1, r4
   354f0:	add	r1, r1, r5
   354f4:	cmn	r1, #2
   354f8:	mvnle	r1, #1
   354fc:	add	r1, r4, r1
   35500:	add	r1, r1, #2
   35504:	sub	r2, r1, r5
   35508:	mov	r1, #48	; 0x30
   3550c:	bl	14ef0 <memset@plt>
   35510:	add	r0, r4, #1
   35514:	ldr	r1, [sp, #100]	; 0x64
   35518:	sub	r0, r0, r5
   3551c:	ldr	r5, [sp, #76]	; 0x4c
   35520:	sub	r0, r0, #1
   35524:	add	r6, r6, #1
   35528:	cmp	r0, #1
   3552c:	bgt	35520 <flatcc_json_printer_fmt_float@@Base+0x6c8>
   35530:	b	35664 <flatcc_json_printer_fmt_float@@Base+0x80c>
   35534:	ldr	r4, [sp, #100]	; 0x64
   35538:	movw	r1, #27693	; 0x6c2d
   3553c:	vmov	r2, r3, d8
   35540:	movt	r1, #4
   35544:	mov	r0, r4
   35548:	bl	14f2c <sprintf@plt>
   3554c:	ldr	r1, [sp, #76]	; 0x4c
   35550:	sub	r1, r4, r1
   35554:	add	r0, r1, r0
   35558:	b	35670 <flatcc_json_printer_fmt_float@@Base+0x818>
   3555c:	cmp	r6, r3
   35560:	bgt	355d0 <flatcc_json_printer_fmt_float@@Base+0x778>
   35564:	add	r2, r7, r6
   35568:	cmn	r2, #2
   3556c:	blt	355d0 <flatcc_json_printer_fmt_float@@Base+0x778>
   35570:	add	r8, r1, #2
   35574:	rsb	r0, r6, #0
   35578:	add	r2, r8, r3
   3557c:	add	r0, r2, r0
   35580:	mov	r2, r6
   35584:	bl	14e48 <memmove@plt>
   35588:	ldr	r1, [sp, #100]	; 0x64
   3558c:	movw	r0, #11824	; 0x2e30
   35590:	strh	r0, [r1]
   35594:	rsb	r0, r6, #2
   35598:	sub	r4, r0, r7
   3559c:	mov	r0, #2
   355a0:	cmp	r4, #3
   355a4:	blt	355c8 <flatcc_json_printer_fmt_float@@Base+0x770>
   355a8:	ldr	r0, [sp, #96]	; 0x60
   355ac:	mov	r1, #48	; 0x30
   355b0:	sub	r0, r5, r0
   355b4:	sub	r2, r0, r6
   355b8:	mov	r0, r8
   355bc:	bl	14ef0 <memset@plt>
   355c0:	ldr	r1, [sp, #100]	; 0x64
   355c4:	mov	r0, r4
   355c8:	add	r6, r0, r6
   355cc:	b	35660 <flatcc_json_printer_fmt_float@@Base+0x808>
   355d0:	cmp	r6, #2
   355d4:	blt	35640 <flatcc_json_printer_fmt_float@@Base+0x7e8>
   355d8:	cmp	r0, #1
   355dc:	blt	35604 <flatcc_json_printer_fmt_float@@Base+0x7ac>
   355e0:	add	r2, r1, r6
   355e4:	mov	r4, #0
   355e8:	mov	r3, r2
   355ec:	ldrb	r5, [r3, #-1]!
   355f0:	add	r4, r4, #1
   355f4:	cmp	r4, r0
   355f8:	strb	r5, [r2]
   355fc:	mov	r2, r3
   35600:	blt	355ec <flatcc_json_printer_fmt_float@@Base+0x794>
   35604:	ldr	r5, [sp, #76]	; 0x4c
   35608:	sub	r3, r6, r0
   3560c:	mov	r2, #46	; 0x2e
   35610:	adds	r0, r0, r7
   35614:	strb	r2, [r1, r3]
   35618:	add	r3, r6, #1
   3561c:	beq	35680 <flatcc_json_printer_fmt_float@@Base+0x828>
   35620:	mov	r2, #101	; 0x65
   35624:	add	r4, r6, #2
   35628:	strb	r2, [r1, r3]
   3562c:	add	r1, r1, r4
   35630:	bl	40524 <flatcc_json_printer_clear@@Base+0x40>
   35634:	ldr	r1, [sp, #100]	; 0x64
   35638:	add	r6, r0, r4
   3563c:	b	35664 <flatcc_json_printer_fmt_float@@Base+0x80c>
   35640:	mov	r0, #101	; 0x65
   35644:	add	r4, r6, #1
   35648:	strb	r0, [r1, r6]
   3564c:	add	r1, r1, r4
   35650:	mov	r0, r7
   35654:	bl	40524 <flatcc_json_printer_clear@@Base+0x40>
   35658:	ldr	r1, [sp, #100]	; 0x64
   3565c:	add	r6, r0, r4
   35660:	ldr	r5, [sp, #76]	; 0x4c
   35664:	mov	r0, #0
   35668:	strb	r0, [r1, r6]!
   3566c:	sub	r0, r1, r5
   35670:	sub	sp, fp, #40	; 0x28
   35674:	vpop	{d8}
   35678:	add	sp, sp, #4
   3567c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35680:	mov	r6, r3
   35684:	b	35664 <flatcc_json_printer_fmt_float@@Base+0x80c>
   35688:	movw	r0, #27548	; 0x6b9c
   3568c:	movw	r1, #27552	; 0x6ba0
   35690:	movw	r3, #27639	; 0x6bf7
   35694:	mov	r2, #189	; 0xbd
   35698:	movt	r0, #4
   3569c:	movt	r1, #4
   356a0:	movt	r3, #4
   356a4:	bl	14f44 <__assert_fail@plt>
   356a8:	movw	r0, #27699	; 0x6c33
   356ac:	movw	r1, #27552	; 0x6ba0
   356b0:	movw	r3, #27736	; 0x6c58
   356b4:	mov	r2, #138	; 0x8a
   356b8:	movt	r0, #4
   356bc:	movt	r1, #4
   356c0:	movt	r3, #4
   356c4:	bl	14f44 <__assert_fail@plt>

000356c8 <flatcc_json_printer_fmt_double@@Base>:
   356c8:	b	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>

000356cc <flatcc_json_printer_fmt_bool@@Base>:
   356cc:	cmp	r1, #0
   356d0:	movwne	r1, #29300	; 0x7274
   356d4:	movtne	r1, #25973	; 0x6575
   356d8:	strne	r1, [r0]
   356dc:	movne	r0, #4
   356e0:	bxne	lr
   356e4:	mov	r1, #101	; 0x65
   356e8:	strb	r1, [r0, #4]
   356ec:	movw	r1, #24934	; 0x6166
   356f0:	movt	r1, #29548	; 0x736c
   356f4:	str	r1, [r0]
   356f8:	mov	r0, #5
   356fc:	bx	lr

00035700 <flatcc_json_printer_string@@Base>:
   35700:	b	35704 <flatcc_json_printer_string@@Base+0x4>
   35704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35708:	add	fp, sp, #28
   3570c:	sub	sp, sp, #12
   35710:	mov	r5, r0
   35714:	mov	r4, r0
   35718:	mov	r6, r1
   3571c:	mov	r3, r2
   35720:	ldr	r0, [r5, #20]!
   35724:	add	r1, r0, #1
   35728:	str	r5, [sp, #4]
   3572c:	str	r1, [r5]
   35730:	mov	r1, #34	; 0x22
   35734:	strb	r1, [r0]
   35738:	b	35898 <flatcc_json_printer_string@@Base+0x198>
   3573c:	mov	r2, #92	; 0x5c
   35740:	strb	r2, [r1]
   35744:	mvn	r1, #7
   35748:	uxtab	r2, r1, sl
   3574c:	uxtb	r1, sl
   35750:	cmp	r2, #5
   35754:	bhi	3578c <flatcc_json_printer_string@@Base+0x8c>
   35758:	add	r3, pc, #0
   3575c:	ldr	pc, [r3, r2, lsl #2]
   35760:	andeq	r5, r3, r8, ror r7
   35764:	andeq	r5, r3, ip, lsr #16
   35768:	andeq	r5, r3, r0, asr #16
   3576c:			; <UNDEFINED> instruction: 0x000357b0
   35770:	andeq	r5, r3, r4, asr r8
   35774:	andeq	r5, r3, r8, ror #16
   35778:	ldr	r1, [r5]
   3577c:	add	r2, r1, #1
   35780:	str	r2, [r5]
   35784:	mov	r2, #98	; 0x62
   35788:	b	3588c <flatcc_json_printer_string@@Base+0x18c>
   3578c:	cmp	r1, #92	; 0x5c
   35790:	beq	3587c <flatcc_json_printer_string@@Base+0x17c>
   35794:	cmp	r1, #34	; 0x22
   35798:	bne	357b0 <flatcc_json_printer_string@@Base+0xb0>
   3579c:	ldr	r1, [r5]
   357a0:	add	r2, r1, #1
   357a4:	str	r2, [r5]
   357a8:	mov	r2, #34	; 0x22
   357ac:	b	3588c <flatcc_json_printer_string@@Base+0x18c>
   357b0:	ldr	r2, [r5]
   357b4:	mov	r7, #48	; 0x30
   357b8:	cmp	r1, #160	; 0xa0
   357bc:	add	r3, r2, #1
   357c0:	str	r3, [r5]
   357c4:	mov	r3, #117	; 0x75
   357c8:	strb	r3, [r2]
   357cc:	ldr	r2, [r5]
   357d0:	add	r3, r2, #1
   357d4:	str	r3, [r5]
   357d8:	strb	r7, [r2]
   357dc:	ldr	r2, [r5]
   357e0:	add	r3, r2, #1
   357e4:	str	r3, [r5]
   357e8:	strb	r7, [r2]
   357ec:	ldr	r2, [r5]
   357f0:	add	r3, r2, #1
   357f4:	str	r3, [r5]
   357f8:	mov	r3, #87	; 0x57
   357fc:	movwcc	r3, #48	; 0x30
   35800:	add	r1, r3, r1, lsr #4
   35804:	mov	r3, #87	; 0x57
   35808:	strb	r1, [r2]
   3580c:	ldr	r1, [r5]
   35810:	add	r2, r1, #1
   35814:	str	r2, [r5]
   35818:	and	r2, sl, #15
   3581c:	cmp	r2, #10
   35820:	movwcc	r3, #48	; 0x30
   35824:	add	r2, r3, r2
   35828:	b	3588c <flatcc_json_printer_string@@Base+0x18c>
   3582c:	ldr	r1, [r5]
   35830:	add	r2, r1, #1
   35834:	str	r2, [r5]
   35838:	mov	r2, #116	; 0x74
   3583c:	b	3588c <flatcc_json_printer_string@@Base+0x18c>
   35840:	ldr	r1, [r5]
   35844:	add	r2, r1, #1
   35848:	str	r2, [r5]
   3584c:	mov	r2, #110	; 0x6e
   35850:	b	3588c <flatcc_json_printer_string@@Base+0x18c>
   35854:	ldr	r1, [r5]
   35858:	add	r2, r1, #1
   3585c:	str	r2, [r5]
   35860:	mov	r2, #102	; 0x66
   35864:	b	3588c <flatcc_json_printer_string@@Base+0x18c>
   35868:	ldr	r1, [r5]
   3586c:	add	r2, r1, #1
   35870:	str	r2, [r5]
   35874:	mov	r2, #114	; 0x72
   35878:	b	3588c <flatcc_json_printer_string@@Base+0x18c>
   3587c:	ldr	r1, [r5]
   35880:	add	r2, r1, #1
   35884:	str	r2, [r5]
   35888:	mov	r2, #92	; 0x5c
   3588c:	strb	r2, [r1]
   35890:	sub	r3, r0, #1
   35894:	add	r6, r8, #1
   35898:	ldrb	sl, [r6]
   3589c:	mov	r8, r6
   358a0:	cmp	sl, #32
   358a4:	bcc	358c4 <flatcc_json_printer_string@@Base+0x1c4>
   358a8:	uxtb	r0, sl
   358ac:	cmp	r0, #34	; 0x22
   358b0:	cmpne	r0, #92	; 0x5c
   358b4:	beq	358c4 <flatcc_json_printer_string@@Base+0x1c4>
   358b8:	ldrb	sl, [r8, #1]!
   358bc:	cmp	sl, #31
   358c0:	bhi	358a8 <flatcc_json_printer_string@@Base+0x1a8>
   358c4:	ldr	r0, [r4, #20]
   358c8:	ldr	r1, [r4, #16]
   358cc:	sub	r9, r8, r6
   358d0:	add	r2, r0, r9
   358d4:	cmp	r2, r1
   358d8:	bcs	358f8 <flatcc_json_printer_string@@Base+0x1f8>
   358dc:	mov	r1, r6
   358e0:	mov	r2, r9
   358e4:	mov	r6, r3
   358e8:	bl	14e60 <memcpy@plt>
   358ec:	mov	r2, r6
   358f0:	mov	r7, r9
   358f4:	b	35984 <flatcc_json_printer_string@@Base+0x284>
   358f8:	cmp	r0, r1
   358fc:	str	r3, [sp, #8]
   35900:	bcc	3591c <flatcc_json_printer_string@@Base+0x21c>
   35904:	ldr	r2, [r4, #44]	; 0x2c
   35908:	mov	r0, r4
   3590c:	mov	r1, #0
   35910:	blx	r2
   35914:	ldr	r1, [r4, #16]
   35918:	ldr	r0, [r4, #20]
   3591c:	sub	r5, r1, r0
   35920:	mov	r7, r9
   35924:	cmp	r5, r9
   35928:	bcs	35970 <flatcc_json_printer_string@@Base+0x270>
   3592c:	mov	r1, r6
   35930:	mov	r2, r5
   35934:	bl	14e60 <memcpy@plt>
   35938:	ldr	r0, [r4, #20]
   3593c:	ldr	r2, [r4, #44]	; 0x2c
   35940:	mov	r1, #0
   35944:	add	r0, r0, r5
   35948:	str	r0, [r4, #20]
   3594c:	mov	r0, r4
   35950:	blx	r2
   35954:	ldr	r1, [r4, #16]
   35958:	ldr	r0, [r4, #20]
   3595c:	sub	r7, r7, r5
   35960:	add	r6, r6, r5
   35964:	sub	r5, r1, r0
   35968:	cmp	r7, r5
   3596c:	bhi	3592c <flatcc_json_printer_string@@Base+0x22c>
   35970:	ldr	r5, [sp, #4]
   35974:	mov	r1, r6
   35978:	mov	r2, r7
   3597c:	bl	14e60 <memcpy@plt>
   35980:	ldr	r2, [sp, #8]
   35984:	ldr	r0, [r5]
   35988:	add	r1, r0, r7
   3598c:	add	r0, r1, #1
   35990:	str	r0, [r5]
   35994:	subs	r0, r2, r9
   35998:	bne	3573c <flatcc_json_printer_string@@Base+0x3c>
   3599c:	mov	r0, #34	; 0x22
   359a0:	strb	r0, [r1]
   359a4:	sub	sp, fp, #28
   359a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000359ac <flatcc_json_printer_write@@Base>:
   359ac:	push	{r4, r5, r6, r7, fp, lr}
   359b0:	add	fp, sp, #16
   359b4:	mov	r6, r1
   359b8:	mov	r5, r0
   359bc:	ldr	r1, [r0, #16]
   359c0:	ldr	r0, [r0, #20]
   359c4:	mov	r4, r2
   359c8:	add	r2, r0, r2
   359cc:	cmp	r2, r1
   359d0:	bcc	35a44 <flatcc_json_printer_write@@Base+0x98>
   359d4:	cmp	r0, r1
   359d8:	bcc	359f4 <flatcc_json_printer_write@@Base+0x48>
   359dc:	ldr	r2, [r5, #44]	; 0x2c
   359e0:	mov	r0, r5
   359e4:	mov	r1, #0
   359e8:	blx	r2
   359ec:	ldr	r1, [r5, #16]
   359f0:	ldr	r0, [r5, #20]
   359f4:	sub	r7, r1, r0
   359f8:	cmp	r7, r4
   359fc:	bcs	35a44 <flatcc_json_printer_write@@Base+0x98>
   35a00:	mov	r1, r6
   35a04:	mov	r2, r7
   35a08:	bl	14e60 <memcpy@plt>
   35a0c:	ldr	r0, [r5, #20]
   35a10:	ldr	r2, [r5, #44]	; 0x2c
   35a14:	mov	r1, #0
   35a18:	add	r0, r0, r7
   35a1c:	str	r0, [r5, #20]
   35a20:	mov	r0, r5
   35a24:	blx	r2
   35a28:	ldr	r1, [r5, #16]
   35a2c:	ldr	r0, [r5, #20]
   35a30:	sub	r4, r4, r7
   35a34:	add	r6, r6, r7
   35a38:	sub	r7, r1, r0
   35a3c:	cmp	r4, r7
   35a40:	bhi	35a00 <flatcc_json_printer_write@@Base+0x54>
   35a44:	mov	r1, r6
   35a48:	mov	r2, r4
   35a4c:	bl	14e60 <memcpy@plt>
   35a50:	ldr	r0, [r5, #20]
   35a54:	add	r0, r0, r4
   35a58:	str	r0, [r5, #20]
   35a5c:	pop	{r4, r5, r6, r7, fp, pc}

00035a60 <flatcc_json_printer_nl@@Base>:
   35a60:	ldr	r1, [r0, #20]
   35a64:	add	r2, r1, #1
   35a68:	str	r2, [r0, #20]
   35a6c:	mov	r2, #10
   35a70:	strb	r2, [r1]
   35a74:	ldr	r1, [r0, #16]
   35a78:	ldr	r2, [r0, #20]
   35a7c:	cmp	r2, r1
   35a80:	bxcc	lr
   35a84:	ldr	r2, [r0, #44]	; 0x2c
   35a88:	mov	r1, #0
   35a8c:	bx	r2

00035a90 <flatcc_json_printer_char@@Base>:
   35a90:	ldr	r2, [r0, #20]
   35a94:	add	r3, r2, #1
   35a98:	str	r3, [r0, #20]
   35a9c:	strb	r1, [r2]
   35aa0:	bx	lr

00035aa4 <flatcc_json_printer_indent@@Base>:
   35aa4:	push	{r4, r5, r6, sl, fp, lr}
   35aa8:	add	fp, sp, #16
   35aac:	mov	r4, r0
   35ab0:	ldr	r1, [r0, #16]
   35ab4:	ldr	r0, [r0, #20]
   35ab8:	ldrb	r2, [r4, #25]
   35abc:	ldr	r3, [r4, #32]
   35ac0:	mla	r6, r3, r2, r0
   35ac4:	mul	r5, r3, r2
   35ac8:	cmp	r6, r1
   35acc:	bls	35b3c <flatcc_json_printer_indent@@Base+0x98>
   35ad0:	cmp	r0, r1
   35ad4:	bcc	35af0 <flatcc_json_printer_indent@@Base+0x4c>
   35ad8:	ldr	r2, [r4, #44]	; 0x2c
   35adc:	mov	r0, r4
   35ae0:	mov	r1, #0
   35ae4:	blx	r2
   35ae8:	ldr	r1, [r4, #16]
   35aec:	ldr	r0, [r4, #20]
   35af0:	sub	r6, r1, r0
   35af4:	cmp	r6, r5
   35af8:	bcs	35b3c <flatcc_json_printer_indent@@Base+0x98>
   35afc:	mov	r1, #32
   35b00:	mov	r2, r6
   35b04:	bl	14ef0 <memset@plt>
   35b08:	ldr	r0, [r4, #20]
   35b0c:	ldr	r2, [r4, #44]	; 0x2c
   35b10:	mov	r1, #0
   35b14:	add	r0, r0, r6
   35b18:	str	r0, [r4, #20]
   35b1c:	mov	r0, r4
   35b20:	blx	r2
   35b24:	ldr	r1, [r4, #16]
   35b28:	ldr	r0, [r4, #20]
   35b2c:	sub	r5, r5, r6
   35b30:	sub	r6, r1, r0
   35b34:	cmp	r5, r6
   35b38:	bhi	35afc <flatcc_json_printer_indent@@Base+0x58>
   35b3c:	mov	r1, #32
   35b40:	mov	r2, r5
   35b44:	bl	14ef0 <memset@plt>
   35b48:	ldr	r0, [r4, #20]
   35b4c:	add	r0, r0, r5
   35b50:	str	r0, [r4, #20]
   35b54:	pop	{r4, r5, r6, sl, fp, pc}

00035b58 <flatcc_json_printer_add_level@@Base>:
   35b58:	ldr	r2, [r0, #32]
   35b5c:	add	r1, r2, r1
   35b60:	str	r1, [r0, #32]
   35b64:	bx	lr

00035b68 <flatcc_json_printer_get_level@@Base>:
   35b68:	ldr	r0, [r0, #32]
   35b6c:	bx	lr

00035b70 <flatcc_json_printer_uint8@@Base>:
   35b70:	push	{r4, sl, fp, lr}
   35b74:	add	fp, sp, #8
   35b78:	mov	r2, r1
   35b7c:	ldr	r1, [r0, #20]
   35b80:	mov	r4, r0
   35b84:	mov	r0, r2
   35b88:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   35b8c:	ldr	r1, [r4, #20]
   35b90:	add	r0, r1, r0
   35b94:	str	r0, [r4, #20]
   35b98:	pop	{r4, sl, fp, pc}
   35b9c:	mov	r2, #0
   35ba0:	cmp	r0, #100	; 0x64
   35ba4:	bcc	35bec <flatcc_json_printer_uint8@@Base+0x7c>
   35ba8:	strb	r2, [r1, #3]
   35bac:	movw	r2, #34079	; 0x851f
   35bb0:	movt	r2, #20971	; 0x51eb
   35bb4:	umull	r2, r3, r0, r2
   35bb8:	mov	r2, #48	; 0x30
   35bbc:	orr	r2, r2, r3, lsr #5
   35bc0:	strb	r2, [r1]
   35bc4:	lsr	r2, r3, #5
   35bc8:	mov	r3, #100	; 0x64
   35bcc:	mls	r0, r2, r3, r0
   35bd0:	movw	r2, #27872	; 0x6ce0
   35bd4:	movt	r2, #4
   35bd8:	add	r0, r2, r0, lsl #1
   35bdc:	ldrh	r0, [r0]
   35be0:	strh	r0, [r1, #1]
   35be4:	mov	r0, #3
   35be8:	bx	lr
   35bec:	cmp	r0, #10
   35bf0:	bcc	35c2c <flatcc_json_printer_uint8@@Base+0xbc>
   35bf4:	strb	r2, [r1, #2]
   35bf8:	movw	r2, #34079	; 0x851f
   35bfc:	movt	r2, #20971	; 0x51eb
   35c00:	umull	r2, r3, r0, r2
   35c04:	lsr	r2, r3, #5
   35c08:	mov	r3, #100	; 0x64
   35c0c:	mls	r0, r2, r3, r0
   35c10:	movw	r2, #27872	; 0x6ce0
   35c14:	movt	r2, #4
   35c18:	add	r0, r2, r0, lsl #1
   35c1c:	ldrh	r0, [r0]
   35c20:	strh	r0, [r1]
   35c24:	mov	r0, #2
   35c28:	bx	lr
   35c2c:	add	r0, r0, #48	; 0x30
   35c30:	strb	r2, [r1, #1]
   35c34:	strb	r0, [r1]
   35c38:	mov	r0, #1
   35c3c:	bx	lr

00035c40 <flatcc_json_printer_uint16@@Base>:
   35c40:	push	{r4, sl, fp, lr}
   35c44:	add	fp, sp, #8
   35c48:	mov	r2, r1
   35c4c:	ldr	r1, [r0, #20]
   35c50:	mov	r4, r0
   35c54:	mov	r0, r2
   35c58:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   35c5c:	ldr	r1, [r4, #20]
   35c60:	add	r0, r1, r0
   35c64:	str	r0, [r4, #20]
   35c68:	pop	{r4, sl, fp, pc}
   35c6c:	mov	ip, r0
   35c70:	cmp	r0, #1000	; 0x3e8
   35c74:	bcc	35c8c <flatcc_json_printer_uint16@@Base+0x4c>
   35c78:	movw	r3, #9999	; 0x270f
   35c7c:	mov	r0, #4
   35c80:	cmp	ip, r3
   35c84:	movwhi	r0, #5
   35c88:	b	35cb0 <flatcc_json_printer_uint16@@Base+0x70>
   35c8c:	cmp	ip, #100	; 0x64
   35c90:	bcc	35ca4 <flatcc_json_printer_uint16@@Base+0x64>
   35c94:	mov	r0, #0
   35c98:	strb	r0, [r1, #3]!
   35c9c:	mov	r0, #3
   35ca0:	b	35d4c <flatcc_json_printer_uint16@@Base+0x10c>
   35ca4:	mov	r0, #1
   35ca8:	cmp	ip, #9
   35cac:	movwhi	r0, #2
   35cb0:	mov	r3, #0
   35cb4:	tst	r0, #1
   35cb8:	strb	r3, [r1, r0]!
   35cbc:	bne	35d04 <flatcc_json_printer_uint16@@Base+0xc4>
   35cc0:	cmp	r0, #2
   35cc4:	beq	35d8c <flatcc_json_printer_uint16@@Base+0x14c>
   35cc8:	cmp	r0, #4
   35ccc:	bxne	lr
   35cd0:	movw	r2, #34079	; 0x851f
   35cd4:	movt	r2, #20971	; 0x51eb
   35cd8:	umull	r2, r3, ip, r2
   35cdc:	lsr	r3, r3, #5
   35ce0:	mov	r2, #100	; 0x64
   35ce4:	mls	r2, r3, r2, ip
   35ce8:	uxth	ip, r2
   35cec:	movw	r2, #27872	; 0x6ce0
   35cf0:	movt	r2, #4
   35cf4:	add	r2, r2, ip, lsl #1
   35cf8:	ldrh	r2, [r2]
   35cfc:	strh	r2, [r1, #-2]!
   35d00:	b	35d90 <flatcc_json_printer_uint16@@Base+0x150>
   35d04:	cmp	r0, #1
   35d08:	beq	35dc4 <flatcc_json_printer_uint16@@Base+0x184>
   35d0c:	cmp	r0, #3
   35d10:	beq	35d4c <flatcc_json_printer_uint16@@Base+0x10c>
   35d14:	cmp	r0, #5
   35d18:	bne	35dc0 <flatcc_json_printer_uint16@@Base+0x180>
   35d1c:	movw	r3, #34079	; 0x851f
   35d20:	movt	r3, #20971	; 0x51eb
   35d24:	umull	r3, r2, ip, r3
   35d28:	lsr	r2, r2, #5
   35d2c:	mov	r3, #100	; 0x64
   35d30:	mls	ip, r2, r3, ip
   35d34:	movw	r3, #27872	; 0x6ce0
   35d38:	movt	r3, #4
   35d3c:	add	r3, r3, ip, lsl #1
   35d40:	mov	ip, r2
   35d44:	ldrh	r3, [r3]
   35d48:	strh	r3, [r1, #-2]!
   35d4c:	movw	r3, #34079	; 0x851f
   35d50:	uxth	r2, ip
   35d54:	movt	r3, #20971	; 0x51eb
   35d58:	umull	r2, r3, r2, r3
   35d5c:	lsr	r3, r3, #5
   35d60:	mov	r2, #100	; 0x64
   35d64:	mls	r2, r3, r2, ip
   35d68:	uxth	ip, r2
   35d6c:	movw	r2, #27872	; 0x6ce0
   35d70:	movt	r2, #4
   35d74:	add	r2, r2, ip, lsl #1
   35d78:	ldrh	r2, [r2]
   35d7c:	strh	r2, [r1, #-2]!
   35d80:	add	r2, r3, #48	; 0x30
   35d84:	strb	r2, [r1, #-1]
   35d88:	bx	lr
   35d8c:	mov	r3, ip
   35d90:	uxth	ip, r3
   35d94:	movw	r3, #34079	; 0x851f
   35d98:	movt	r3, #20971	; 0x51eb
   35d9c:	umull	r3, r2, ip, r3
   35da0:	lsr	r2, r2, #5
   35da4:	mov	r3, #100	; 0x64
   35da8:	mls	r2, r2, r3, ip
   35dac:	movw	r3, #27872	; 0x6ce0
   35db0:	movt	r3, #4
   35db4:	add	r2, r3, r2, lsl #1
   35db8:	ldrh	r2, [r2]
   35dbc:	strh	r2, [r1, #-2]
   35dc0:	bx	lr
   35dc4:	mov	r3, ip
   35dc8:	b	35d80 <flatcc_json_printer_uint16@@Base+0x140>

00035dcc <flatcc_json_printer_uint32@@Base>:
   35dcc:	push	{r4, sl, fp, lr}
   35dd0:	add	fp, sp, #8
   35dd4:	mov	r2, r1
   35dd8:	ldr	r1, [r0, #20]
   35ddc:	mov	r4, r0
   35de0:	mov	r0, r2
   35de4:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   35de8:	ldr	r1, [r4, #20]
   35dec:	add	r0, r1, r0
   35df0:	str	r0, [r4, #20]
   35df4:	pop	{r4, sl, fp, pc}
   35df8:	mov	ip, r0
   35dfc:	movw	r0, #10000	; 0x2710
   35e00:	cmp	ip, r0
   35e04:	bcc	35e38 <flatcc_json_printer_uint32@@Base+0x6c>
   35e08:	movw	r0, #38528	; 0x9680
   35e0c:	movt	r0, #152	; 0x98
   35e10:	cmp	ip, r0
   35e14:	bcc	35e54 <flatcc_json_printer_uint32@@Base+0x88>
   35e18:	movw	r0, #51712	; 0xca00
   35e1c:	movt	r0, #15258	; 0x3b9a
   35e20:	cmp	ip, r0
   35e24:	bcc	35e84 <flatcc_json_printer_uint32@@Base+0xb8>
   35e28:	mov	r0, #0
   35e2c:	strb	r0, [r1, #10]!
   35e30:	mov	r0, #10
   35e34:	b	35ec0 <flatcc_json_printer_uint32@@Base+0xf4>
   35e38:	cmp	ip, #100	; 0x64
   35e3c:	bcc	35e74 <flatcc_json_printer_uint32@@Base+0xa8>
   35e40:	lsr	r3, ip, #3
   35e44:	mov	r0, #3
   35e48:	cmp	r3, #124	; 0x7c
   35e4c:	movwhi	r0, #4
   35e50:	b	35eb0 <flatcc_json_printer_uint32@@Base+0xe4>
   35e54:	movw	r0, #16960	; 0x4240
   35e58:	movt	r0, #15
   35e5c:	cmp	ip, r0
   35e60:	bcc	35e9c <flatcc_json_printer_uint32@@Base+0xd0>
   35e64:	mov	r0, #0
   35e68:	strb	r0, [r1, #7]!
   35e6c:	mov	r0, #7
   35e70:	b	35ff4 <flatcc_json_printer_uint32@@Base+0x228>
   35e74:	mov	r0, #1
   35e78:	cmp	ip, #9
   35e7c:	movwhi	r0, #2
   35e80:	b	35eb0 <flatcc_json_printer_uint32@@Base+0xe4>
   35e84:	movw	r3, #57599	; 0xe0ff
   35e88:	mov	r0, #8
   35e8c:	movt	r3, #1525	; 0x5f5
   35e90:	cmp	ip, r3
   35e94:	movwhi	r0, #9
   35e98:	b	35eb0 <flatcc_json_printer_uint32@@Base+0xe4>
   35e9c:	movw	r3, #34463	; 0x869f
   35ea0:	mov	r0, #5
   35ea4:	movt	r3, #1
   35ea8:	cmp	ip, r3
   35eac:	movwhi	r0, #6
   35eb0:	mov	r3, #0
   35eb4:	tst	r0, #1
   35eb8:	strb	r3, [r1, r0]!
   35ebc:	bne	35ff4 <flatcc_json_printer_uint32@@Base+0x228>
   35ec0:	lsr	r2, r0, #1
   35ec4:	orr	r2, r2, r0, lsl #3
   35ec8:	eor	r3, r2, #4
   35ecc:	sbfx	r2, r3, #0, #4
   35ed0:	cmp	r2, #0
   35ed4:	blt	35ff0 <flatcc_json_printer_uint32@@Base+0x224>
   35ed8:	and	r2, r3, #15
   35edc:	add	r3, pc, #0
   35ee0:	ldr	pc, [r3, r2, lsl #2]
   35ee4:	andeq	r5, r3, r4, lsr pc
   35ee8:	andeq	r5, r3, r4, lsl #30
   35eec:	strdeq	r5, [r3], -r0
   35ef0:	strdeq	r5, [r3], -r0
   35ef4:	strdeq	r5, [r3], -r0
   35ef8:	andeq	r5, r3, r4, asr #31
   35efc:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   35f00:	andeq	r5, r3, r4, ror #30
   35f04:	movw	r2, #34079	; 0x851f
   35f08:	movt	r2, #20971	; 0x51eb
   35f0c:	umull	r2, r3, ip, r2
   35f10:	lsr	r2, r3, #5
   35f14:	mov	r3, #100	; 0x64
   35f18:	mls	ip, r2, r3, ip
   35f1c:	movw	r3, #27872	; 0x6ce0
   35f20:	movt	r3, #4
   35f24:	add	r3, r3, ip, lsl #1
   35f28:	mov	ip, r2
   35f2c:	ldrh	r3, [r3]
   35f30:	strh	r3, [r1, #-2]!
   35f34:	movw	r2, #34079	; 0x851f
   35f38:	movt	r2, #20971	; 0x51eb
   35f3c:	umull	r2, r3, ip, r2
   35f40:	lsr	r2, r3, #5
   35f44:	mov	r3, #100	; 0x64
   35f48:	mls	ip, r2, r3, ip
   35f4c:	movw	r3, #27872	; 0x6ce0
   35f50:	movt	r3, #4
   35f54:	add	r3, r3, ip, lsl #1
   35f58:	mov	ip, r2
   35f5c:	ldrh	r3, [r3]
   35f60:	strh	r3, [r1, #-2]!
   35f64:	movw	r2, #34079	; 0x851f
   35f68:	movt	r2, #20971	; 0x51eb
   35f6c:	umull	r2, r3, ip, r2
   35f70:	lsr	r2, r3, #5
   35f74:	mov	r3, #100	; 0x64
   35f78:	mls	ip, r2, r3, ip
   35f7c:	movw	r3, #27872	; 0x6ce0
   35f80:	movt	r3, #4
   35f84:	add	r3, r3, ip, lsl #1
   35f88:	mov	ip, r2
   35f8c:	ldrh	r3, [r3]
   35f90:	strh	r3, [r1, #-2]!
   35f94:	movw	r2, #34079	; 0x851f
   35f98:	movt	r2, #20971	; 0x51eb
   35f9c:	umull	r2, r3, ip, r2
   35fa0:	lsr	r2, r3, #5
   35fa4:	mov	r3, #100	; 0x64
   35fa8:	mls	ip, r2, r3, ip
   35fac:	movw	r3, #27872	; 0x6ce0
   35fb0:	movt	r3, #4
   35fb4:	add	r3, r3, ip, lsl #1
   35fb8:	mov	ip, r2
   35fbc:	ldrh	r3, [r3]
   35fc0:	strh	r3, [r1, #-2]!
   35fc4:	movw	r2, #34079	; 0x851f
   35fc8:	movt	r2, #20971	; 0x51eb
   35fcc:	umull	r2, r3, ip, r2
   35fd0:	lsr	r2, r3, #5
   35fd4:	mov	r3, #100	; 0x64
   35fd8:	mls	r2, r2, r3, ip
   35fdc:	movw	r3, #27872	; 0x6ce0
   35fe0:	movt	r3, #4
   35fe4:	add	r2, r3, r2, lsl #1
   35fe8:	ldrh	r2, [r2]
   35fec:	strh	r2, [r1, #-2]
   35ff0:	bx	lr
   35ff4:	add	r3, r0, #7
   35ff8:	ubfx	r2, r3, #1, #3
   35ffc:	orr	r3, r2, r3, lsl #3
   36000:	sbfx	r2, r3, #0, #4
   36004:	cmp	r2, #0
   36008:	bxlt	lr
   3600c:	and	r2, r3, #15
   36010:	add	r3, pc, #0
   36014:	ldr	pc, [r3, r2, lsl #2]
   36018:	andeq	r6, r3, r8, lsr r0
   3601c:	strdeq	r5, [r3], -r0
   36020:	strdeq	r5, [r3], -r0
   36024:	strdeq	r5, [r3], -r0
   36028:	strdeq	r6, [r3], -r8
   3602c:	andeq	r6, r3, r8, asr #1
   36030:	muleq	r3, r8, r0
   36034:	andeq	r6, r3, r8, rrx
   36038:	movw	r2, #34079	; 0x851f
   3603c:	movt	r2, #20971	; 0x51eb
   36040:	umull	r2, r3, ip, r2
   36044:	lsr	r2, r3, #5
   36048:	mov	r3, #100	; 0x64
   3604c:	mls	ip, r2, r3, ip
   36050:	movw	r3, #27872	; 0x6ce0
   36054:	movt	r3, #4
   36058:	add	r3, r3, ip, lsl #1
   3605c:	mov	ip, r2
   36060:	ldrh	r3, [r3]
   36064:	strh	r3, [r1, #-2]!
   36068:	movw	r2, #34079	; 0x851f
   3606c:	movt	r2, #20971	; 0x51eb
   36070:	umull	r2, r3, ip, r2
   36074:	lsr	r2, r3, #5
   36078:	mov	r3, #100	; 0x64
   3607c:	mls	ip, r2, r3, ip
   36080:	movw	r3, #27872	; 0x6ce0
   36084:	movt	r3, #4
   36088:	add	r3, r3, ip, lsl #1
   3608c:	mov	ip, r2
   36090:	ldrh	r3, [r3]
   36094:	strh	r3, [r1, #-2]!
   36098:	movw	r2, #34079	; 0x851f
   3609c:	movt	r2, #20971	; 0x51eb
   360a0:	umull	r2, r3, ip, r2
   360a4:	lsr	r2, r3, #5
   360a8:	mov	r3, #100	; 0x64
   360ac:	mls	ip, r2, r3, ip
   360b0:	movw	r3, #27872	; 0x6ce0
   360b4:	movt	r3, #4
   360b8:	add	r3, r3, ip, lsl #1
   360bc:	mov	ip, r2
   360c0:	ldrh	r3, [r3]
   360c4:	strh	r3, [r1, #-2]!
   360c8:	movw	r2, #34079	; 0x851f
   360cc:	movt	r2, #20971	; 0x51eb
   360d0:	umull	r2, r3, ip, r2
   360d4:	lsr	r2, r3, #5
   360d8:	mov	r3, #100	; 0x64
   360dc:	mls	ip, r2, r3, ip
   360e0:	movw	r3, #27872	; 0x6ce0
   360e4:	movt	r3, #4
   360e8:	add	r3, r3, ip, lsl #1
   360ec:	mov	ip, r2
   360f0:	ldrh	r3, [r3]
   360f4:	strh	r3, [r1, #-2]!
   360f8:	add	r2, ip, #48	; 0x30
   360fc:	strb	r2, [r1, #-1]
   36100:	bx	lr

00036104 <flatcc_json_printer_uint64@@Base>:
   36104:	push	{r4, sl, fp, lr}
   36108:	add	fp, sp, #8
   3610c:	mov	r1, r3
   36110:	mov	r3, r2
   36114:	ldr	r2, [r0, #20]
   36118:	mov	r4, r0
   3611c:	mov	r0, r3
   36120:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   36124:	ldr	r1, [r4, #20]
   36128:	add	r0, r1, r0
   3612c:	str	r0, [r4, #20]
   36130:	pop	{r4, sl, fp, pc}
   36134:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36138:	add	fp, sp, #24
   3613c:	mov	r7, r0
   36140:	movw	r0, #51711	; 0xc9ff
   36144:	mov	r4, r2
   36148:	movt	r0, #15258	; 0x3b9a
   3614c:	subs	r0, r0, r7
   36150:	rscs	r0, r1, #0
   36154:	bcc	36168 <flatcc_json_printer_uint64@@Base+0x64>
   36158:	mov	r0, r7
   3615c:	mov	r1, r4
   36160:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   36164:	b	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   36168:	mov	r6, r1
   3616c:	movw	r1, #40960	; 0xa000
   36170:	movw	r0, #2328	; 0x918
   36174:	movt	r1, #20082	; 0x4e72
   36178:	subs	r1, r7, r1
   3617c:	sbcs	r0, r6, r0
   36180:	bcc	361e0 <flatcc_json_printer_uint64@@Base+0xdc>
   36184:	movw	r1, #0
   36188:	movw	r0, #34546	; 0x86f2
   3618c:	movt	r1, #28609	; 0x6fc1
   36190:	movt	r0, #35	; 0x23
   36194:	subs	r1, r7, r1
   36198:	sbcs	r0, r6, r0
   3619c:	bcc	36210 <flatcc_json_printer_uint64@@Base+0x10c>
   361a0:	movw	r1, #0
   361a4:	movw	r0, #46771	; 0xb6b3
   361a8:	movt	r1, #42852	; 0xa764
   361ac:	movt	r0, #3552	; 0xde0
   361b0:	subs	r1, r7, r1
   361b4:	sbcs	r0, r6, r0
   361b8:	bcc	36258 <flatcc_json_printer_uint64@@Base+0x154>
   361bc:	movw	r1, #65535	; 0xffff
   361c0:	movw	r0, #8964	; 0x2304
   361c4:	mov	r8, #19
   361c8:	movt	r1, #35303	; 0x89e7
   361cc:	movt	r0, #35527	; 0x8ac7
   361d0:	subs	r1, r1, r7
   361d4:	sbcs	r0, r0, r6
   361d8:	movwcc	r8, #20
   361dc:	b	36298 <flatcc_json_printer_uint64@@Base+0x194>
   361e0:	movw	r0, #59392	; 0xe800
   361e4:	movt	r0, #18550	; 0x4876
   361e8:	subs	r0, r7, r0
   361ec:	sbcs	r0, r6, #23
   361f0:	bcc	3623c <flatcc_json_printer_uint64@@Base+0x138>
   361f4:	movw	r0, #4095	; 0xfff
   361f8:	mov	r8, #12
   361fc:	movt	r0, #54437	; 0xd4a5
   36200:	subs	r0, r0, r7
   36204:	rscs	r0, r6, #232	; 0xe8
   36208:	movwcc	r8, #13
   3620c:	b	36298 <flatcc_json_printer_uint64@@Base+0x194>
   36210:	movw	r1, #32768	; 0x8000
   36214:	movw	r0, #36222	; 0x8d7e
   36218:	movt	r1, #42182	; 0xa4c6
   3621c:	movt	r0, #3
   36220:	subs	r1, r7, r1
   36224:	sbcs	r0, r6, r0
   36228:	bcc	3627c <flatcc_json_printer_uint64@@Base+0x178>
   3622c:	mov	r0, #0
   36230:	mov	r8, #16
   36234:	strb	r0, [r4, #16]!
   36238:	b	36358 <flatcc_json_printer_uint64@@Base+0x254>
   3623c:	movw	r0, #58367	; 0xe3ff
   36240:	mov	r8, #10
   36244:	movt	r0, #21515	; 0x540b
   36248:	subs	r0, r0, r7
   3624c:	rscs	r0, r6, #2
   36250:	movwcc	r8, #11
   36254:	b	36298 <flatcc_json_printer_uint64@@Base+0x194>
   36258:	movw	r1, #65535	; 0xffff
   3625c:	movw	r0, #17784	; 0x4578
   36260:	mov	r8, #17
   36264:	movt	r1, #23945	; 0x5d89
   36268:	movt	r0, #355	; 0x163
   3626c:	subs	r1, r1, r7
   36270:	sbcs	r0, r0, r6
   36274:	movwcc	r8, #18
   36278:	b	36298 <flatcc_json_printer_uint64@@Base+0x194>
   3627c:	movw	r1, #16383	; 0x3fff
   36280:	movw	r0, #23283	; 0x5af3
   36284:	mov	r8, #14
   36288:	movt	r1, #4218	; 0x107a
   3628c:	subs	r1, r1, r7
   36290:	sbcs	r0, r0, r6
   36294:	movwcc	r8, #15
   36298:	mov	r0, #0
   3629c:	tst	r8, #1
   362a0:	strb	r0, [r4, r8]!
   362a4:	bne	3643c <flatcc_json_printer_uint64@@Base+0x338>
   362a8:	sub	r0, r8, #10
   362ac:	cmp	r0, #10
   362b0:	bhi	365b0 <flatcc_json_printer_uint64@@Base+0x4ac>
   362b4:	add	r1, pc, #0
   362b8:	ldr	pc, [r1, r0, lsl #2]
   362bc:	andeq	r6, r3, r0, lsl #8
   362c0:			; <UNDEFINED> instruction: 0x000365b0
   362c4:	andeq	r6, r3, r8, asr #7
   362c8:			; <UNDEFINED> instruction: 0x000365b0
   362cc:	muleq	r3, r0, r3
   362d0:			; <UNDEFINED> instruction: 0x000365b0
   362d4:	andeq	r6, r3, r8, asr r3
   362d8:			; <UNDEFINED> instruction: 0x000365b0
   362dc:	andeq	r6, r3, r0, lsr #6
   362e0:			; <UNDEFINED> instruction: 0x000365b0
   362e4:	andeq	r6, r3, r8, ror #5
   362e8:	mov	r0, r7
   362ec:	mov	r1, r6
   362f0:	mov	r2, #100	; 0x64
   362f4:	mov	r3, #0
   362f8:	mov	r5, #100	; 0x64
   362fc:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36300:	movw	r2, #27872	; 0x6ce0
   36304:	mov	r6, r1
   36308:	mls	r1, r0, r5, r7
   3630c:	mov	r7, r0
   36310:	movt	r2, #4
   36314:	add	r1, r2, r1, lsl #1
   36318:	ldrh	r1, [r1]
   3631c:	strh	r1, [r4, #-2]!
   36320:	mov	r0, r7
   36324:	mov	r1, r6
   36328:	mov	r2, #100	; 0x64
   3632c:	mov	r3, #0
   36330:	mov	r5, #100	; 0x64
   36334:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36338:	movw	r2, #27872	; 0x6ce0
   3633c:	mov	r6, r1
   36340:	mls	r1, r0, r5, r7
   36344:	mov	r7, r0
   36348:	movt	r2, #4
   3634c:	add	r1, r2, r1, lsl #1
   36350:	ldrh	r1, [r1]
   36354:	strh	r1, [r4, #-2]!
   36358:	mov	r0, r7
   3635c:	mov	r1, r6
   36360:	mov	r2, #100	; 0x64
   36364:	mov	r3, #0
   36368:	mov	r5, #100	; 0x64
   3636c:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36370:	movw	r2, #27872	; 0x6ce0
   36374:	mov	r6, r1
   36378:	mls	r1, r0, r5, r7
   3637c:	mov	r7, r0
   36380:	movt	r2, #4
   36384:	add	r1, r2, r1, lsl #1
   36388:	ldrh	r1, [r1]
   3638c:	strh	r1, [r4, #-2]!
   36390:	mov	r0, r7
   36394:	mov	r1, r6
   36398:	mov	r2, #100	; 0x64
   3639c:	mov	r3, #0
   363a0:	mov	r5, #100	; 0x64
   363a4:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   363a8:	movw	r2, #27872	; 0x6ce0
   363ac:	mov	r6, r1
   363b0:	mls	r1, r0, r5, r7
   363b4:	mov	r7, r0
   363b8:	movt	r2, #4
   363bc:	add	r1, r2, r1, lsl #1
   363c0:	ldrh	r1, [r1]
   363c4:	strh	r1, [r4, #-2]!
   363c8:	mov	r0, r7
   363cc:	mov	r1, r6
   363d0:	mov	r2, #100	; 0x64
   363d4:	mov	r3, #0
   363d8:	mov	r5, #100	; 0x64
   363dc:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   363e0:	movw	r2, #27872	; 0x6ce0
   363e4:	mov	r6, r1
   363e8:	mls	r1, r0, r5, r7
   363ec:	mov	r7, r0
   363f0:	movt	r2, #4
   363f4:	add	r1, r2, r1, lsl #1
   363f8:	ldrh	r1, [r1]
   363fc:	strh	r1, [r4, #-2]!
   36400:	mov	r0, r7
   36404:	mov	r1, r6
   36408:	mov	r2, #100	; 0x64
   3640c:	mov	r3, #0
   36410:	mov	r5, #100	; 0x64
   36414:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36418:	movw	r2, #27872	; 0x6ce0
   3641c:	mov	r6, r1
   36420:	mls	r1, r0, r5, r7
   36424:	mov	r7, r0
   36428:	movt	r2, #4
   3642c:	add	r1, r2, r1, lsl #1
   36430:	ldrh	r1, [r1]
   36434:	strh	r1, [r4, #-2]!
   36438:	b	365b0 <flatcc_json_printer_uint64@@Base+0x4ac>
   3643c:	sub	r0, r8, #11
   36440:	cmp	r0, #8
   36444:	bhi	365b0 <flatcc_json_printer_uint64@@Base+0x4ac>
   36448:	add	r1, pc, #0
   3644c:	ldr	pc, [r1, r0, lsl #2]
   36450:	andeq	r6, r3, ip, asr #10
   36454:			; <UNDEFINED> instruction: 0x000365b0
   36458:	andeq	r6, r3, r4, lsl r5
   3645c:			; <UNDEFINED> instruction: 0x000365b0
   36460:	ldrdeq	r6, [r3], -ip
   36464:			; <UNDEFINED> instruction: 0x000365b0
   36468:	andeq	r6, r3, r4, lsr #9
   3646c:			; <UNDEFINED> instruction: 0x000365b0
   36470:	andeq	r6, r3, r4, ror r4
   36474:	mov	r0, r7
   36478:	mov	r1, r6
   3647c:	mov	r2, #100	; 0x64
   36480:	mov	r3, #0
   36484:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36488:	mov	r7, r0
   3648c:	movw	r0, #27872	; 0x6ce0
   36490:	mov	r6, r1
   36494:	movt	r0, #4
   36498:	add	r0, r0, r2, lsl #1
   3649c:	ldrh	r0, [r0]
   364a0:	strh	r0, [r4, #-2]!
   364a4:	mov	r0, r7
   364a8:	mov	r1, r6
   364ac:	mov	r2, #100	; 0x64
   364b0:	mov	r3, #0
   364b4:	mov	r5, #100	; 0x64
   364b8:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   364bc:	movw	r2, #27872	; 0x6ce0
   364c0:	mov	r6, r1
   364c4:	mls	r1, r0, r5, r7
   364c8:	mov	r7, r0
   364cc:	movt	r2, #4
   364d0:	add	r1, r2, r1, lsl #1
   364d4:	ldrh	r1, [r1]
   364d8:	strh	r1, [r4, #-2]!
   364dc:	mov	r0, r7
   364e0:	mov	r1, r6
   364e4:	mov	r2, #100	; 0x64
   364e8:	mov	r3, #0
   364ec:	mov	r5, #100	; 0x64
   364f0:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   364f4:	movw	r2, #27872	; 0x6ce0
   364f8:	mov	r6, r1
   364fc:	mls	r1, r0, r5, r7
   36500:	mov	r7, r0
   36504:	movt	r2, #4
   36508:	add	r1, r2, r1, lsl #1
   3650c:	ldrh	r1, [r1]
   36510:	strh	r1, [r4, #-2]!
   36514:	mov	r0, r7
   36518:	mov	r1, r6
   3651c:	mov	r2, #100	; 0x64
   36520:	mov	r3, #0
   36524:	mov	r5, #100	; 0x64
   36528:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   3652c:	movw	r2, #27872	; 0x6ce0
   36530:	mov	r6, r1
   36534:	mls	r1, r0, r5, r7
   36538:	mov	r7, r0
   3653c:	movt	r2, #4
   36540:	add	r1, r2, r1, lsl #1
   36544:	ldrh	r1, [r1]
   36548:	strh	r1, [r4, #-2]!
   3654c:	mov	r0, r7
   36550:	mov	r1, r6
   36554:	mov	r2, #100	; 0x64
   36558:	mov	r3, #0
   3655c:	mov	r9, #100	; 0x64
   36560:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36564:	mov	r2, #10
   36568:	mov	r3, #0
   3656c:	mov	r5, r0
   36570:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36574:	orr	r0, r2, #48	; 0x30
   36578:	movw	r1, #27872	; 0x6ce0
   3657c:	mov	r2, #1000	; 0x3e8
   36580:	mov	r3, #0
   36584:	strb	r0, [r4, #-3]!
   36588:	mls	r0, r5, r9, r7
   3658c:	movt	r1, #4
   36590:	add	r0, r1, r0, lsl #1
   36594:	mov	r1, r6
   36598:	ldrh	r0, [r0]
   3659c:	strh	r0, [r4, #1]
   365a0:	mov	r0, r7
   365a4:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   365a8:	mov	r7, r0
   365ac:	mov	r6, r1
   365b0:	mov	r0, r7
   365b4:	mov	r1, r6
   365b8:	mov	r2, #100	; 0x64
   365bc:	mov	r3, #0
   365c0:	mov	r5, #100	; 0x64
   365c4:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   365c8:	mls	r2, r0, r5, r7
   365cc:	movw	r5, #27872	; 0x6ce0
   365d0:	mov	r3, #0
   365d4:	movt	r5, #4
   365d8:	add	r2, r5, r2, lsl #1
   365dc:	ldrh	r2, [r2]
   365e0:	strh	r2, [r4, #-2]
   365e4:	mov	r2, #100	; 0x64
   365e8:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   365ec:	add	r0, r5, r2, lsl #1
   365f0:	mov	r1, r6
   365f4:	movw	r2, #10000	; 0x2710
   365f8:	mov	r3, #0
   365fc:	ldrh	r0, [r0]
   36600:	strh	r0, [r4, #-4]
   36604:	mov	r0, r7
   36608:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   3660c:	mov	r2, #100	; 0x64
   36610:	mov	r3, #0
   36614:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36618:	add	r0, r5, r2, lsl #1
   3661c:	movw	r2, #16960	; 0x4240
   36620:	mov	r1, r6
   36624:	mov	r3, #0
   36628:	ldrh	r0, [r0]
   3662c:	movt	r2, #15
   36630:	strh	r0, [r4, #-6]
   36634:	mov	r0, r7
   36638:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   3663c:	mov	r2, #100	; 0x64
   36640:	mov	r3, #0
   36644:	bl	41074 <flatcc_json_printer_clear@@Base+0xb90>
   36648:	add	r0, r5, r2, lsl #1
   3664c:	ldrh	r0, [r0]
   36650:	strh	r0, [r4, #-8]
   36654:	mov	r0, r8
   36658:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003665c <flatcc_json_printer_int8@@Base>:
   3665c:	push	{r4, r5, fp, lr}
   36660:	add	fp, sp, #8
   36664:	ubfx	r5, r1, #7, #1
   36668:	ldr	r2, [r0, #20]
   3666c:	cmn	r1, #1
   36670:	mov	r4, r0
   36674:	movle	r0, #45	; 0x2d
   36678:	rsble	r1, r1, #0
   3667c:	strble	r0, [r2], #1
   36680:	uxtb	r0, r1
   36684:	mov	r1, r2
   36688:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   3668c:	ldr	r1, [r4, #20]
   36690:	add	r0, r0, r5
   36694:	add	r0, r1, r0
   36698:	str	r0, [r4, #20]
   3669c:	pop	{r4, r5, fp, pc}

000366a0 <flatcc_json_printer_int16@@Base>:
   366a0:	push	{r4, r5, fp, lr}
   366a4:	add	fp, sp, #8
   366a8:	ubfx	r5, r1, #15, #1
   366ac:	ldr	r2, [r0, #20]
   366b0:	cmn	r1, #1
   366b4:	mov	r4, r0
   366b8:	movle	r0, #45	; 0x2d
   366bc:	rsble	r1, r1, #0
   366c0:	strble	r0, [r2], #1
   366c4:	uxth	r0, r1
   366c8:	mov	r1, r2
   366cc:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   366d0:	ldr	r1, [r4, #20]
   366d4:	add	r0, r0, r5
   366d8:	add	r0, r1, r0
   366dc:	str	r0, [r4, #20]
   366e0:	pop	{r4, r5, fp, pc}

000366e4 <flatcc_json_printer_int32@@Base>:
   366e4:	push	{r4, r5, fp, lr}
   366e8:	add	fp, sp, #8
   366ec:	mov	r2, r1
   366f0:	lsr	r5, r1, #31
   366f4:	ldr	r1, [r0, #20]
   366f8:	mov	r4, r0
   366fc:	cmn	r2, #1
   36700:	movle	r0, #45	; 0x2d
   36704:	rsble	r2, r2, #0
   36708:	strble	r0, [r1], #1
   3670c:	mov	r0, r2
   36710:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   36714:	ldr	r1, [r4, #20]
   36718:	add	r0, r0, r5
   3671c:	add	r0, r1, r0
   36720:	str	r0, [r4, #20]
   36724:	pop	{r4, r5, fp, pc}

00036728 <flatcc_json_printer_int64@@Base>:
   36728:	push	{r4, r5, fp, lr}
   3672c:	add	fp, sp, #8
   36730:	mov	r1, r3
   36734:	mov	r3, r2
   36738:	ldr	r2, [r0, #20]
   3673c:	mov	r4, r0
   36740:	lsr	r5, r1, #31
   36744:	cmn	r1, #1
   36748:	bgt	3675c <flatcc_json_printer_int64@@Base+0x34>
   3674c:	mov	r0, #45	; 0x2d
   36750:	rsbs	r3, r3, #0
   36754:	strb	r0, [r2], #1
   36758:	rsc	r1, r1, #0
   3675c:	mov	r0, r3
   36760:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   36764:	ldr	r1, [r4, #20]
   36768:	add	r0, r0, r5
   3676c:	add	r0, r1, r0
   36770:	str	r0, [r4, #20]
   36774:	pop	{r4, r5, fp, pc}

00036778 <flatcc_json_printer_float@@Base>:
   36778:	push	{r4, sl, fp, lr}
   3677c:	add	fp, sp, #8
   36780:	mov	r4, r0
   36784:	ldr	r0, [r0, #20]
   36788:	vcvt.f64.f32	d0, s0
   3678c:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   36790:	ldr	r1, [r4, #20]
   36794:	add	r0, r1, r0
   36798:	str	r0, [r4, #20]
   3679c:	pop	{r4, sl, fp, pc}

000367a0 <flatcc_json_printer_double@@Base>:
   367a0:	push	{r4, sl, fp, lr}
   367a4:	add	fp, sp, #8
   367a8:	mov	r4, r0
   367ac:	ldr	r0, [r0, #20]
   367b0:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   367b4:	ldr	r1, [r4, #20]
   367b8:	add	r0, r1, r0
   367bc:	str	r0, [r4, #20]
   367c0:	pop	{r4, sl, fp, pc}

000367c4 <flatcc_json_printer_enum@@Base>:
   367c4:	push	{r4, r5, r6, r7, fp, lr}
   367c8:	add	fp, sp, #16
   367cc:	mov	r4, r0
   367d0:	ldr	r0, [r0, #20]
   367d4:	mov	r6, r1
   367d8:	mov	r1, #34	; 0x22
   367dc:	mov	r5, r2
   367e0:	strb	r1, [r0]
   367e4:	ldrb	r2, [r4, #26]
   367e8:	ldr	r0, [r4, #20]
   367ec:	ldr	r1, [r4, #16]
   367f0:	cmp	r2, #0
   367f4:	addeq	r0, r0, #1
   367f8:	add	r2, r0, r5
   367fc:	str	r0, [r4, #20]
   36800:	cmp	r2, r1
   36804:	bcc	36878 <flatcc_json_printer_enum@@Base+0xb4>
   36808:	cmp	r0, r1
   3680c:	bcc	36828 <flatcc_json_printer_enum@@Base+0x64>
   36810:	ldr	r2, [r4, #44]	; 0x2c
   36814:	mov	r0, r4
   36818:	mov	r1, #0
   3681c:	blx	r2
   36820:	ldr	r1, [r4, #16]
   36824:	ldr	r0, [r4, #20]
   36828:	sub	r7, r1, r0
   3682c:	cmp	r7, r5
   36830:	bcs	36878 <flatcc_json_printer_enum@@Base+0xb4>
   36834:	mov	r1, r6
   36838:	mov	r2, r7
   3683c:	bl	14e60 <memcpy@plt>
   36840:	ldr	r0, [r4, #20]
   36844:	ldr	r2, [r4, #44]	; 0x2c
   36848:	mov	r1, #0
   3684c:	add	r0, r0, r7
   36850:	str	r0, [r4, #20]
   36854:	mov	r0, r4
   36858:	blx	r2
   3685c:	ldr	r1, [r4, #16]
   36860:	ldr	r0, [r4, #20]
   36864:	sub	r5, r5, r7
   36868:	add	r6, r6, r7
   3686c:	sub	r7, r1, r0
   36870:	cmp	r5, r7
   36874:	bhi	36834 <flatcc_json_printer_enum@@Base+0x70>
   36878:	mov	r1, r6
   3687c:	mov	r2, r5
   36880:	bl	14e60 <memcpy@plt>
   36884:	ldr	r0, [r4, #20]
   36888:	add	r1, r0, r5
   3688c:	str	r1, [r4, #20]
   36890:	mov	r1, #34	; 0x22
   36894:	strb	r1, [r0, r5]
   36898:	ldrb	r0, [r4, #26]
   3689c:	ldr	r1, [r4, #20]
   368a0:	cmp	r0, #0
   368a4:	addeq	r1, r1, #1
   368a8:	str	r1, [r4, #20]
   368ac:	pop	{r4, r5, r6, r7, fp, pc}

000368b0 <flatcc_json_printer_delimit_enum_flags@@Base>:
   368b0:	ldrb	ip, [r0, #26]
   368b4:	ldr	r3, [r0, #20]
   368b8:	mov	r2, #34	; 0x22
   368bc:	cmp	r1, #0
   368c0:	movwne	r1, #1
   368c4:	strb	r2, [r3]
   368c8:	clz	r2, ip
   368cc:	lsr	r2, r2, #5
   368d0:	orr	r1, r1, r2
   368d4:	ldr	r2, [r0, #20]
   368d8:	add	r1, r2, r1
   368dc:	str	r1, [r0, #20]
   368e0:	bx	lr

000368e4 <flatcc_json_printer_enum_flag@@Base>:
   368e4:	push	{r4, r5, r6, r7, fp, lr}
   368e8:	add	fp, sp, #16
   368ec:	mov	r5, r0
   368f0:	ldr	r0, [r0, #20]
   368f4:	mov	r6, r2
   368f8:	mov	r2, #32
   368fc:	cmp	r1, #0
   36900:	mov	r4, r3
   36904:	strb	r2, [r0]
   36908:	ldr	r0, [r5, #20]
   3690c:	ldr	r2, [r5, #16]
   36910:	addgt	r0, r0, #1
   36914:	add	r1, r0, r3
   36918:	str	r0, [r5, #20]
   3691c:	cmp	r1, r2
   36920:	bcc	36994 <flatcc_json_printer_enum_flag@@Base+0xb0>
   36924:	cmp	r0, r2
   36928:	bcc	36944 <flatcc_json_printer_enum_flag@@Base+0x60>
   3692c:	ldr	r2, [r5, #44]	; 0x2c
   36930:	mov	r0, r5
   36934:	mov	r1, #0
   36938:	blx	r2
   3693c:	ldr	r2, [r5, #16]
   36940:	ldr	r0, [r5, #20]
   36944:	sub	r7, r2, r0
   36948:	cmp	r7, r4
   3694c:	bcs	36994 <flatcc_json_printer_enum_flag@@Base+0xb0>
   36950:	mov	r1, r6
   36954:	mov	r2, r7
   36958:	bl	14e60 <memcpy@plt>
   3695c:	ldr	r0, [r5, #20]
   36960:	ldr	r2, [r5, #44]	; 0x2c
   36964:	mov	r1, #0
   36968:	add	r0, r0, r7
   3696c:	str	r0, [r5, #20]
   36970:	mov	r0, r5
   36974:	blx	r2
   36978:	ldr	r1, [r5, #16]
   3697c:	ldr	r0, [r5, #20]
   36980:	sub	r4, r4, r7
   36984:	add	r6, r6, r7
   36988:	sub	r7, r1, r0
   3698c:	cmp	r4, r7
   36990:	bhi	36950 <flatcc_json_printer_enum_flag@@Base+0x6c>
   36994:	mov	r1, r6
   36998:	mov	r2, r4
   3699c:	bl	14e60 <memcpy@plt>
   369a0:	ldr	r0, [r5, #20]
   369a4:	add	r0, r0, r4
   369a8:	str	r0, [r5, #20]
   369ac:	pop	{r4, r5, r6, r7, fp, pc}

000369b0 <flatcc_json_printer_string_field@@Base>:
   369b0:	push	{r4, r5, fp, lr}
   369b4:	add	fp, sp, #8
   369b8:	mov	r4, r0
   369bc:	mov	r0, #4
   369c0:	add	r0, r0, r2, lsl #1
   369c4:	ldr	r2, [r1, #8]
   369c8:	cmp	r0, r2
   369cc:	popge	{r4, r5, fp, pc}
   369d0:	ldr	r2, [r1, #4]
   369d4:	add	r0, r2, r0
   369d8:	ldrh	r0, [r0]
   369dc:	cmp	r0, #0
   369e0:	ldrne	r2, [r1]
   369e4:	addsne	r5, r2, r0
   369e8:	bne	369f0 <flatcc_json_printer_string_field@@Base+0x40>
   369ec:	pop	{r4, r5, fp, pc}
   369f0:	ldr	ip, [r1, #16]
   369f4:	ldr	r2, [fp, #8]
   369f8:	add	r0, ip, #1
   369fc:	cmp	ip, #0
   36a00:	str	r0, [r1, #16]
   36a04:	ldrne	r0, [r4, #20]
   36a08:	addne	r1, r0, #1
   36a0c:	strne	r1, [r4, #20]
   36a10:	movne	r1, #44	; 0x2c
   36a14:	strbne	r1, [r0]
   36a18:	mov	r0, r4
   36a1c:	mov	r1, r3
   36a20:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   36a24:	ldr	r0, [r5]
   36a28:	ldr	r2, [r5, r0]!
   36a2c:	mov	r0, r4
   36a30:	add	r1, r5, #4
   36a34:	pop	{r4, r5, fp, lr}
   36a38:	b	35704 <flatcc_json_printer_string@@Base+0x4>
   36a3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36a40:	add	fp, sp, #24
   36a44:	mov	r4, r0
   36a48:	mov	r6, r1
   36a4c:	ldr	r0, [r0, #20]
   36a50:	mov	r8, r2
   36a54:	ldrb	r1, [r4, #25]
   36a58:	cmp	r1, #0
   36a5c:	beq	36b1c <flatcc_json_printer_string_field@@Base+0x16c>
   36a60:	add	r1, r0, #1
   36a64:	mov	r9, r4
   36a68:	str	r1, [r4, #20]
   36a6c:	mov	r1, #10
   36a70:	strb	r1, [r0]
   36a74:	ldr	r1, [r9, #16]!
   36a78:	ldr	r0, [r4, #20]
   36a7c:	ldrb	r2, [r9, #9]
   36a80:	ldr	r3, [r9, #16]
   36a84:	mla	r5, r3, r2, r0
   36a88:	mul	r7, r3, r2
   36a8c:	cmp	r5, r1
   36a90:	bls	36b00 <flatcc_json_printer_string_field@@Base+0x150>
   36a94:	cmp	r0, r1
   36a98:	bcc	36ab4 <flatcc_json_printer_string_field@@Base+0x104>
   36a9c:	ldr	r2, [r4, #44]	; 0x2c
   36aa0:	mov	r0, r4
   36aa4:	mov	r1, #0
   36aa8:	blx	r2
   36aac:	ldr	r1, [r4, #16]
   36ab0:	ldr	r0, [r4, #20]
   36ab4:	sub	r5, r1, r0
   36ab8:	cmp	r5, r7
   36abc:	bcs	36b00 <flatcc_json_printer_string_field@@Base+0x150>
   36ac0:	mov	r1, #32
   36ac4:	mov	r2, r5
   36ac8:	bl	14ef0 <memset@plt>
   36acc:	ldr	r0, [r4, #20]
   36ad0:	ldr	r2, [r4, #44]	; 0x2c
   36ad4:	mov	r1, #0
   36ad8:	add	r0, r0, r5
   36adc:	str	r0, [r4, #20]
   36ae0:	mov	r0, r4
   36ae4:	blx	r2
   36ae8:	ldr	r1, [r4, #16]
   36aec:	ldr	r0, [r4, #20]
   36af0:	sub	r7, r7, r5
   36af4:	sub	r5, r1, r0
   36af8:	cmp	r7, r5
   36afc:	bhi	36ac0 <flatcc_json_printer_string_field@@Base+0x110>
   36b00:	mov	r1, #32
   36b04:	mov	r2, r7
   36b08:	bl	14ef0 <memset@plt>
   36b0c:	ldr	r0, [r4, #20]
   36b10:	add	r0, r0, r7
   36b14:	str	r0, [r4, #20]
   36b18:	b	36b40 <flatcc_json_printer_string_field@@Base+0x190>
   36b1c:	mov	r9, r4
   36b20:	ldr	r1, [r9, #16]!
   36b24:	cmp	r0, r1
   36b28:	bcc	36b40 <flatcc_json_printer_string_field@@Base+0x190>
   36b2c:	ldr	r2, [r4, #44]	; 0x2c
   36b30:	mov	r0, r4
   36b34:	mov	r1, #0
   36b38:	blx	r2
   36b3c:	ldr	r0, [r4, #20]
   36b40:	mov	r1, #34	; 0x22
   36b44:	strb	r1, [r0]
   36b48:	ldrb	r2, [r4, #26]
   36b4c:	ldr	r0, [r4, #20]
   36b50:	ldr	r1, [r4, #16]
   36b54:	cmp	r2, #0
   36b58:	addeq	r0, r0, #1
   36b5c:	add	r2, r0, r8
   36b60:	str	r0, [r4, #20]
   36b64:	cmp	r2, r1
   36b68:	bcc	36bdc <flatcc_json_printer_string_field@@Base+0x22c>
   36b6c:	cmp	r0, r1
   36b70:	bcc	36b8c <flatcc_json_printer_string_field@@Base+0x1dc>
   36b74:	ldr	r2, [r4, #44]	; 0x2c
   36b78:	mov	r0, r4
   36b7c:	mov	r1, #0
   36b80:	blx	r2
   36b84:	ldr	r0, [r4, #20]
   36b88:	ldr	r1, [r9]
   36b8c:	sub	r7, r1, r0
   36b90:	cmp	r7, r8
   36b94:	bcs	36bdc <flatcc_json_printer_string_field@@Base+0x22c>
   36b98:	mov	r1, r6
   36b9c:	mov	r2, r7
   36ba0:	bl	14e60 <memcpy@plt>
   36ba4:	ldr	r0, [r4, #20]
   36ba8:	ldr	r2, [r4, #44]	; 0x2c
   36bac:	mov	r1, #0
   36bb0:	add	r0, r0, r7
   36bb4:	str	r0, [r4, #20]
   36bb8:	mov	r0, r4
   36bbc:	blx	r2
   36bc0:	ldr	r0, [r4, #20]
   36bc4:	ldr	r1, [r9]
   36bc8:	sub	r8, r8, r7
   36bcc:	add	r6, r6, r7
   36bd0:	sub	r7, r1, r0
   36bd4:	cmp	r8, r7
   36bd8:	bhi	36b98 <flatcc_json_printer_string_field@@Base+0x1e8>
   36bdc:	mov	r1, r6
   36be0:	mov	r2, r8
   36be4:	bl	14e60 <memcpy@plt>
   36be8:	ldr	r0, [r4, #20]
   36bec:	add	r1, r0, r8
   36bf0:	str	r1, [r4, #20]
   36bf4:	mov	r1, #34	; 0x22
   36bf8:	strb	r1, [r0, r8]
   36bfc:	ldrb	r0, [r4, #26]
   36c00:	ldr	r1, [r4, #20]
   36c04:	cmp	r0, #0
   36c08:	addeq	r1, r1, #1
   36c0c:	add	r0, r1, #1
   36c10:	str	r0, [r4, #20]
   36c14:	mov	r0, #58	; 0x3a
   36c18:	strb	r0, [r1]
   36c1c:	mov	r1, #32
   36c20:	ldr	r0, [r4, #20]
   36c24:	strb	r1, [r0]
   36c28:	ldrb	r0, [r4, #25]
   36c2c:	ldr	r1, [r4, #20]
   36c30:	cmp	r0, #0
   36c34:	addne	r1, r1, #1
   36c38:	str	r1, [r4, #20]
   36c3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00036c40 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   36c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36c44:	add	fp, sp, #28
   36c48:	sub	sp, sp, #12
   36c4c:	mov	r4, r0
   36c50:	mov	r0, #4
   36c54:	add	r0, r0, r2, lsl #1
   36c58:	ldr	r2, [r1, #8]
   36c5c:	cmp	r0, r2
   36c60:	bge	36dfc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   36c64:	ldr	r2, [r1, #4]
   36c68:	add	r0, r2, r0
   36c6c:	ldrh	r0, [r0]
   36c70:	cmp	r0, #0
   36c74:	beq	36dfc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   36c78:	ldr	r5, [fp, #12]
   36c7c:	ldr	r2, [r1]
   36c80:	cmp	r5, #0
   36c84:	add	r6, r2, r0
   36c88:	movwne	r5, #1
   36c8c:	cmp	r6, #0
   36c90:	beq	36dfc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   36c94:	ldr	r0, [r1, #16]
   36c98:	ldr	r2, [fp, #8]
   36c9c:	add	r7, r0, #1
   36ca0:	cmp	r0, #0
   36ca4:	str	r7, [r1, #16]
   36ca8:	ldrne	r0, [r4, #20]
   36cac:	addne	r1, r0, #1
   36cb0:	strne	r1, [r4, #20]
   36cb4:	movne	r1, #44	; 0x2c
   36cb8:	strbne	r1, [r0]
   36cbc:	mov	r0, r4
   36cc0:	mov	r1, r3
   36cc4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   36cc8:	ldr	r0, [r6]
   36ccc:	ldr	r0, [r6, r0]!
   36cd0:	str	r0, [sp, #8]
   36cd4:	ldr	r0, [r4, #20]
   36cd8:	add	r1, r0, #1
   36cdc:	str	r1, [r4, #20]
   36ce0:	mov	r1, #34	; 0x22
   36ce4:	strb	r1, [r0]
   36ce8:	movw	r1, #43691	; 0xaaab
   36cec:	ldr	r0, [sp, #8]
   36cf0:	movt	r1, #43690	; 0xaaaa
   36cf4:	lsl	r0, r0, #2
   36cf8:	umull	r0, r1, r0, r1
   36cfc:	mov	r0, #3
   36d00:	add	r0, r0, r1, lsr #1
   36d04:	ldr	r1, [r4, #16]
   36d08:	bic	r7, r0, #3
   36d0c:	ldr	r0, [r4, #20]
   36d10:	add	r2, r0, r7
   36d14:	cmp	r2, r1
   36d18:	bcc	36d38 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   36d1c:	ldr	r2, [r4, #44]	; 0x2c
   36d20:	mov	r0, r4
   36d24:	mov	r1, #0
   36d28:	blx	r2
   36d2c:	ldr	r0, [r4, #20]
   36d30:	ldr	r1, [r4, #16]
   36d34:	add	r2, r0, r7
   36d38:	add	r6, r6, #4
   36d3c:	cmp	r2, r1
   36d40:	bls	36dd4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   36d44:	add	r9, sp, #4
   36d48:	mov	sl, #3
   36d4c:	sub	r1, r1, r0
   36d50:	bic	r7, r1, #3
   36d54:	add	r1, r7, r7, lsl #1
   36d58:	cmp	r1, #0
   36d5c:	beq	36e04 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c4>
   36d60:	lsr	r8, r1, #2
   36d64:	mov	r1, r6
   36d68:	mov	r2, r9
   36d6c:	mov	r3, r5
   36d70:	str	r8, [sp, #4]
   36d74:	bl	40920 <flatcc_json_printer_clear@@Base+0x43c>
   36d78:	ldr	r0, [r4, #20]
   36d7c:	mov	r1, #0
   36d80:	add	r0, r0, r7
   36d84:	str	r0, [r4, #20]
   36d88:	ldr	r0, [sp, #8]
   36d8c:	sub	r0, r0, r8
   36d90:	str	r0, [sp, #8]
   36d94:	mov	r0, r4
   36d98:	ldr	r2, [r4, #44]	; 0x2c
   36d9c:	blx	r2
   36da0:	ldr	r0, [sp, #8]
   36da4:	movw	r1, #43691	; 0xaaab
   36da8:	add	r6, r6, r8
   36dac:	movt	r1, #43690	; 0xaaaa
   36db0:	lsl	r0, r0, #2
   36db4:	umull	r0, r1, r0, r1
   36db8:	add	r0, sl, r1, lsr #1
   36dbc:	ldr	r1, [r4, #16]
   36dc0:	bic	r7, r0, #3
   36dc4:	ldr	r0, [r4, #20]
   36dc8:	add	r2, r0, r7
   36dcc:	cmp	r2, r1
   36dd0:	bhi	36d4c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x10c>
   36dd4:	orr	r3, r5, #128	; 0x80
   36dd8:	add	r2, sp, #8
   36ddc:	mov	r1, r6
   36de0:	bl	40920 <flatcc_json_printer_clear@@Base+0x43c>
   36de4:	ldr	r0, [r4, #20]
   36de8:	add	r1, r0, r7
   36dec:	add	r1, r1, #1
   36df0:	str	r1, [r4, #20]
   36df4:	mov	r1, #34	; 0x22
   36df8:	strb	r1, [r0, r7]
   36dfc:	sub	sp, fp, #28
   36e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36e04:	movw	r0, #28073	; 0x6da9
   36e08:	movw	r1, #27147	; 0x6a0b
   36e0c:	movw	r3, #28079	; 0x6daf
   36e10:	movw	r2, #277	; 0x115
   36e14:	movt	r0, #4
   36e18:	movt	r1, #4
   36e1c:	movt	r3, #4
   36e20:	bl	14f44 <__assert_fail@plt>

00036e24 <flatcc_json_printer_uint8_field@@Base>:
   36e24:	push	{r4, r5, r6, sl, fp, lr}
   36e28:	add	fp, sp, #16
   36e2c:	mov	r4, r0
   36e30:	mov	r0, #4
   36e34:	ldr	r5, [r1, #8]
   36e38:	add	r2, r0, r2, lsl #1
   36e3c:	ldr	r0, [fp, #12]
   36e40:	cmp	r2, r5
   36e44:	bge	36e64 <flatcc_json_printer_uint8_field@@Base+0x40>
   36e48:	ldr	r5, [r1, #4]
   36e4c:	add	r2, r5, r2
   36e50:	ldrh	r2, [r2]
   36e54:	cmp	r2, #0
   36e58:	ldrne	r5, [r1]
   36e5c:	addsne	r2, r5, r2
   36e60:	bne	36ec4 <flatcc_json_printer_uint8_field@@Base+0xa0>
   36e64:	ldrb	r2, [r4, #29]
   36e68:	mov	r6, r0
   36e6c:	cmp	r2, #0
   36e70:	popeq	{r4, r5, r6, sl, fp, pc}
   36e74:	ldr	r0, [r1, #16]
   36e78:	ldr	r2, [fp, #8]
   36e7c:	add	r5, r0, #1
   36e80:	cmp	r0, #0
   36e84:	str	r5, [r1, #16]
   36e88:	ldrne	r0, [r4, #20]
   36e8c:	addne	r1, r0, #1
   36e90:	strne	r1, [r4, #20]
   36e94:	movne	r1, #44	; 0x2c
   36e98:	strbne	r1, [r0]
   36e9c:	mov	r0, r4
   36ea0:	mov	r1, r3
   36ea4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   36ea8:	ldr	r1, [r4, #20]
   36eac:	mov	r0, r6
   36eb0:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   36eb4:	ldr	r1, [r4, #20]
   36eb8:	add	r0, r1, r0
   36ebc:	str	r0, [r4, #20]
   36ec0:	pop	{r4, r5, r6, sl, fp, pc}
   36ec4:	ldrb	r6, [r2]
   36ec8:	cmp	r6, r0
   36ecc:	bne	36e74 <flatcc_json_printer_uint8_field@@Base+0x50>
   36ed0:	ldrb	r2, [r4, #28]
   36ed4:	mov	r6, r0
   36ed8:	cmp	r2, #0
   36edc:	bne	36ec0 <flatcc_json_printer_uint8_field@@Base+0x9c>
   36ee0:	b	36e74 <flatcc_json_printer_uint8_field@@Base+0x50>

00036ee4 <flatcc_json_printer_uint16_field@@Base>:
   36ee4:	push	{r4, r5, r6, sl, fp, lr}
   36ee8:	add	fp, sp, #16
   36eec:	mov	r4, r0
   36ef0:	mov	r0, #4
   36ef4:	ldr	r5, [r1, #8]
   36ef8:	add	r2, r0, r2, lsl #1
   36efc:	ldr	r0, [fp, #12]
   36f00:	cmp	r2, r5
   36f04:	bge	36f24 <flatcc_json_printer_uint16_field@@Base+0x40>
   36f08:	ldr	r5, [r1, #4]
   36f0c:	add	r2, r5, r2
   36f10:	ldrh	r2, [r2]
   36f14:	cmp	r2, #0
   36f18:	ldrne	r5, [r1]
   36f1c:	addsne	r2, r5, r2
   36f20:	bne	36f84 <flatcc_json_printer_uint16_field@@Base+0xa0>
   36f24:	ldrb	r2, [r4, #29]
   36f28:	mov	r6, r0
   36f2c:	cmp	r2, #0
   36f30:	popeq	{r4, r5, r6, sl, fp, pc}
   36f34:	ldr	r0, [r1, #16]
   36f38:	ldr	r2, [fp, #8]
   36f3c:	add	r5, r0, #1
   36f40:	cmp	r0, #0
   36f44:	str	r5, [r1, #16]
   36f48:	ldrne	r0, [r4, #20]
   36f4c:	addne	r1, r0, #1
   36f50:	strne	r1, [r4, #20]
   36f54:	movne	r1, #44	; 0x2c
   36f58:	strbne	r1, [r0]
   36f5c:	mov	r0, r4
   36f60:	mov	r1, r3
   36f64:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   36f68:	ldr	r1, [r4, #20]
   36f6c:	mov	r0, r6
   36f70:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   36f74:	ldr	r1, [r4, #20]
   36f78:	add	r0, r1, r0
   36f7c:	str	r0, [r4, #20]
   36f80:	pop	{r4, r5, r6, sl, fp, pc}
   36f84:	ldrh	r6, [r2]
   36f88:	cmp	r6, r0
   36f8c:	bne	36f34 <flatcc_json_printer_uint16_field@@Base+0x50>
   36f90:	ldrb	r2, [r4, #28]
   36f94:	mov	r6, r0
   36f98:	cmp	r2, #0
   36f9c:	bne	36f80 <flatcc_json_printer_uint16_field@@Base+0x9c>
   36fa0:	b	36f34 <flatcc_json_printer_uint16_field@@Base+0x50>

00036fa4 <flatcc_json_printer_uint32_field@@Base>:
   36fa4:	push	{r4, r5, r6, sl, fp, lr}
   36fa8:	add	fp, sp, #16
   36fac:	mov	r4, r0
   36fb0:	mov	r0, #4
   36fb4:	ldr	r5, [r1, #8]
   36fb8:	add	r2, r0, r2, lsl #1
   36fbc:	ldr	r0, [fp, #12]
   36fc0:	cmp	r2, r5
   36fc4:	bge	36fe4 <flatcc_json_printer_uint32_field@@Base+0x40>
   36fc8:	ldr	r5, [r1, #4]
   36fcc:	add	r2, r5, r2
   36fd0:	ldrh	r2, [r2]
   36fd4:	cmp	r2, #0
   36fd8:	ldrne	r5, [r1]
   36fdc:	addsne	r2, r5, r2
   36fe0:	bne	37044 <flatcc_json_printer_uint32_field@@Base+0xa0>
   36fe4:	ldrb	r2, [r4, #29]
   36fe8:	mov	r6, r0
   36fec:	cmp	r2, #0
   36ff0:	popeq	{r4, r5, r6, sl, fp, pc}
   36ff4:	ldr	r0, [r1, #16]
   36ff8:	ldr	r2, [fp, #8]
   36ffc:	add	r5, r0, #1
   37000:	cmp	r0, #0
   37004:	str	r5, [r1, #16]
   37008:	ldrne	r0, [r4, #20]
   3700c:	addne	r1, r0, #1
   37010:	strne	r1, [r4, #20]
   37014:	movne	r1, #44	; 0x2c
   37018:	strbne	r1, [r0]
   3701c:	mov	r0, r4
   37020:	mov	r1, r3
   37024:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37028:	ldr	r1, [r4, #20]
   3702c:	mov	r0, r6
   37030:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   37034:	ldr	r1, [r4, #20]
   37038:	add	r0, r1, r0
   3703c:	str	r0, [r4, #20]
   37040:	pop	{r4, r5, r6, sl, fp, pc}
   37044:	ldr	r6, [r2]
   37048:	cmp	r6, r0
   3704c:	bne	36ff4 <flatcc_json_printer_uint32_field@@Base+0x50>
   37050:	ldrb	r2, [r4, #28]
   37054:	mov	r6, r0
   37058:	cmp	r2, #0
   3705c:	bne	37040 <flatcc_json_printer_uint32_field@@Base+0x9c>
   37060:	b	36ff4 <flatcc_json_printer_uint32_field@@Base+0x50>

00037064 <flatcc_json_printer_uint64_field@@Base>:
   37064:	push	{r4, r6, r7, r8, fp, lr}
   37068:	add	fp, sp, #16
   3706c:	mov	r4, r0
   37070:	mov	r0, #4
   37074:	ldr	r6, [r1, #8]
   37078:	ldr	lr, [fp, #20]
   3707c:	add	r7, r0, r2, lsl #1
   37080:	ldr	r2, [fp, #16]
   37084:	cmp	r7, r6
   37088:	bge	370a8 <flatcc_json_printer_uint64_field@@Base+0x44>
   3708c:	ldr	r6, [r1, #4]
   37090:	add	r7, r6, r7
   37094:	ldrh	r7, [r7]
   37098:	cmp	r7, #0
   3709c:	ldrne	r6, [r1]
   370a0:	addsne	r7, r6, r7
   370a4:	bne	37110 <flatcc_json_printer_uint64_field@@Base+0xac>
   370a8:	ldrb	r0, [r4, #29]
   370ac:	mov	r8, r2
   370b0:	mov	r7, lr
   370b4:	cmp	r0, #0
   370b8:	popeq	{r4, r6, r7, r8, fp, pc}
   370bc:	ldr	r0, [r1, #16]
   370c0:	ldr	r2, [fp, #8]
   370c4:	add	r6, r0, #1
   370c8:	cmp	r0, #0
   370cc:	str	r6, [r1, #16]
   370d0:	ldrne	r0, [r4, #20]
   370d4:	addne	r1, r0, #1
   370d8:	strne	r1, [r4, #20]
   370dc:	movne	r1, #44	; 0x2c
   370e0:	strbne	r1, [r0]
   370e4:	mov	r0, r4
   370e8:	mov	r1, r3
   370ec:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   370f0:	ldr	r2, [r4, #20]
   370f4:	mov	r0, r8
   370f8:	mov	r1, r7
   370fc:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   37100:	ldr	r1, [r4, #20]
   37104:	add	r0, r1, r0
   37108:	str	r0, [r4, #20]
   3710c:	pop	{r4, r6, r7, r8, fp, pc}
   37110:	ldr	r8, [r7]
   37114:	ldr	r7, [r7, #4]
   37118:	eor	ip, r7, lr
   3711c:	eor	r0, r8, r2
   37120:	orrs	r0, r0, ip
   37124:	bne	370bc <flatcc_json_printer_uint64_field@@Base+0x58>
   37128:	ldrb	r0, [r4, #28]
   3712c:	mov	r8, r2
   37130:	mov	r7, lr
   37134:	cmp	r0, #0
   37138:	bne	3710c <flatcc_json_printer_uint64_field@@Base+0xa8>
   3713c:	b	370bc <flatcc_json_printer_uint64_field@@Base+0x58>

00037140 <flatcc_json_printer_int8_field@@Base>:
   37140:	push	{r4, r5, r6, sl, fp, lr}
   37144:	add	fp, sp, #16
   37148:	mov	r4, r0
   3714c:	mov	r0, #4
   37150:	ldr	r6, [r1, #8]
   37154:	add	r2, r0, r2, lsl #1
   37158:	ldr	r0, [fp, #12]
   3715c:	cmp	r2, r6
   37160:	bge	37180 <flatcc_json_printer_int8_field@@Base+0x40>
   37164:	ldr	r6, [r1, #4]
   37168:	add	r2, r6, r2
   3716c:	ldrh	r2, [r2]
   37170:	cmp	r2, #0
   37174:	ldrne	r6, [r1]
   37178:	addsne	r2, r6, r2
   3717c:	bne	371fc <flatcc_json_printer_int8_field@@Base+0xbc>
   37180:	ldrb	r2, [r4, #29]
   37184:	mov	r5, r0
   37188:	cmp	r2, #0
   3718c:	popeq	{r4, r5, r6, sl, fp, pc}
   37190:	ldr	r0, [r1, #16]
   37194:	ldr	r2, [fp, #8]
   37198:	add	r6, r0, #1
   3719c:	cmp	r0, #0
   371a0:	str	r6, [r1, #16]
   371a4:	ldrne	r0, [r4, #20]
   371a8:	addne	r1, r0, #1
   371ac:	strne	r1, [r4, #20]
   371b0:	movne	r1, #44	; 0x2c
   371b4:	strbne	r1, [r0]
   371b8:	mov	r0, r4
   371bc:	mov	r1, r3
   371c0:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   371c4:	ubfx	r6, r5, #7, #1
   371c8:	ldr	r1, [r4, #20]
   371cc:	sxtb	r0, r5
   371d0:	cmn	r0, #1
   371d4:	movle	r0, #45	; 0x2d
   371d8:	rsble	r5, r5, #0
   371dc:	strble	r0, [r1], #1
   371e0:	uxtb	r0, r5
   371e4:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   371e8:	ldr	r1, [r4, #20]
   371ec:	add	r0, r0, r6
   371f0:	add	r0, r1, r0
   371f4:	str	r0, [r4, #20]
   371f8:	pop	{r4, r5, r6, sl, fp, pc}
   371fc:	ldrb	r5, [r2]
   37200:	uxtb	r2, r0
   37204:	cmp	r5, r2
   37208:	bne	37190 <flatcc_json_printer_int8_field@@Base+0x50>
   3720c:	ldrb	r2, [r4, #28]
   37210:	mov	r5, r0
   37214:	cmp	r2, #0
   37218:	bne	371f8 <flatcc_json_printer_int8_field@@Base+0xb8>
   3721c:	b	37190 <flatcc_json_printer_int8_field@@Base+0x50>

00037220 <flatcc_json_printer_int16_field@@Base>:
   37220:	push	{r4, r5, r6, sl, fp, lr}
   37224:	add	fp, sp, #16
   37228:	mov	r4, r0
   3722c:	mov	r0, #4
   37230:	ldr	r6, [r1, #8]
   37234:	add	r2, r0, r2, lsl #1
   37238:	ldr	r0, [fp, #12]
   3723c:	cmp	r2, r6
   37240:	bge	37260 <flatcc_json_printer_int16_field@@Base+0x40>
   37244:	ldr	r6, [r1, #4]
   37248:	add	r2, r6, r2
   3724c:	ldrh	r2, [r2]
   37250:	cmp	r2, #0
   37254:	ldrne	r6, [r1]
   37258:	addsne	r2, r6, r2
   3725c:	bne	372dc <flatcc_json_printer_int16_field@@Base+0xbc>
   37260:	ldrb	r2, [r4, #29]
   37264:	mov	r5, r0
   37268:	cmp	r2, #0
   3726c:	popeq	{r4, r5, r6, sl, fp, pc}
   37270:	ldr	r0, [r1, #16]
   37274:	ldr	r2, [fp, #8]
   37278:	add	r6, r0, #1
   3727c:	cmp	r0, #0
   37280:	str	r6, [r1, #16]
   37284:	ldrne	r0, [r4, #20]
   37288:	addne	r1, r0, #1
   3728c:	strne	r1, [r4, #20]
   37290:	movne	r1, #44	; 0x2c
   37294:	strbne	r1, [r0]
   37298:	mov	r0, r4
   3729c:	mov	r1, r3
   372a0:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   372a4:	ubfx	r6, r5, #15, #1
   372a8:	ldr	r1, [r4, #20]
   372ac:	sxth	r0, r5
   372b0:	cmn	r0, #1
   372b4:	movle	r0, #45	; 0x2d
   372b8:	rsble	r5, r5, #0
   372bc:	strble	r0, [r1], #1
   372c0:	uxth	r0, r5
   372c4:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   372c8:	ldr	r1, [r4, #20]
   372cc:	add	r0, r0, r6
   372d0:	add	r0, r1, r0
   372d4:	str	r0, [r4, #20]
   372d8:	pop	{r4, r5, r6, sl, fp, pc}
   372dc:	ldrh	r5, [r2]
   372e0:	uxth	r2, r0
   372e4:	cmp	r5, r2
   372e8:	bne	37270 <flatcc_json_printer_int16_field@@Base+0x50>
   372ec:	ldrb	r2, [r4, #28]
   372f0:	mov	r5, r0
   372f4:	cmp	r2, #0
   372f8:	bne	372d8 <flatcc_json_printer_int16_field@@Base+0xb8>
   372fc:	b	37270 <flatcc_json_printer_int16_field@@Base+0x50>

00037300 <flatcc_json_printer_int32_field@@Base>:
   37300:	push	{r4, r5, r6, sl, fp, lr}
   37304:	add	fp, sp, #16
   37308:	mov	r4, r0
   3730c:	mov	r0, #4
   37310:	ldr	r6, [r1, #8]
   37314:	add	r2, r0, r2, lsl #1
   37318:	ldr	r0, [fp, #12]
   3731c:	cmp	r2, r6
   37320:	bge	37340 <flatcc_json_printer_int32_field@@Base+0x40>
   37324:	ldr	r6, [r1, #4]
   37328:	add	r2, r6, r2
   3732c:	ldrh	r2, [r2]
   37330:	cmp	r2, #0
   37334:	ldrne	r6, [r1]
   37338:	addsne	r2, r6, r2
   3733c:	bne	373b8 <flatcc_json_printer_int32_field@@Base+0xb8>
   37340:	ldrb	r2, [r4, #29]
   37344:	mov	r5, r0
   37348:	cmp	r2, #0
   3734c:	popeq	{r4, r5, r6, sl, fp, pc}
   37350:	ldr	r0, [r1, #16]
   37354:	ldr	r2, [fp, #8]
   37358:	add	r6, r0, #1
   3735c:	cmp	r0, #0
   37360:	str	r6, [r1, #16]
   37364:	ldrne	r0, [r4, #20]
   37368:	addne	r1, r0, #1
   3736c:	strne	r1, [r4, #20]
   37370:	movne	r1, #44	; 0x2c
   37374:	strbne	r1, [r0]
   37378:	mov	r0, r4
   3737c:	mov	r1, r3
   37380:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37384:	ldr	r1, [r4, #20]
   37388:	cmn	r5, #1
   3738c:	lsr	r6, r5, #31
   37390:	movle	r0, #45	; 0x2d
   37394:	rsble	r5, r5, #0
   37398:	strble	r0, [r1], #1
   3739c:	mov	r0, r5
   373a0:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   373a4:	ldr	r1, [r4, #20]
   373a8:	add	r0, r0, r6
   373ac:	add	r0, r1, r0
   373b0:	str	r0, [r4, #20]
   373b4:	pop	{r4, r5, r6, sl, fp, pc}
   373b8:	ldr	r5, [r2]
   373bc:	cmp	r5, r0
   373c0:	bne	37350 <flatcc_json_printer_int32_field@@Base+0x50>
   373c4:	ldrb	r2, [r4, #28]
   373c8:	mov	r5, r0
   373cc:	cmp	r2, #0
   373d0:	bne	373b4 <flatcc_json_printer_int32_field@@Base+0xb4>
   373d4:	b	37350 <flatcc_json_printer_int32_field@@Base+0x50>

000373d8 <flatcc_json_printer_int64_field@@Base>:
   373d8:	push	{r4, r5, r6, r7, fp, lr}
   373dc:	add	fp, sp, #16
   373e0:	mov	r4, r0
   373e4:	mov	r0, #4
   373e8:	ldr	r6, [r1, #8]
   373ec:	add	r7, r0, r2, lsl #1
   373f0:	ldr	r0, [fp, #20]
   373f4:	ldr	r2, [fp, #16]
   373f8:	cmp	r7, r6
   373fc:	bge	3741c <flatcc_json_printer_int64_field@@Base+0x44>
   37400:	ldr	r6, [r1, #4]
   37404:	add	r7, r6, r7
   37408:	ldrh	r7, [r7]
   3740c:	cmp	r7, #0
   37410:	ldrne	r6, [r1]
   37414:	addsne	r7, r6, r7
   37418:	bne	374a4 <flatcc_json_printer_int64_field@@Base+0xcc>
   3741c:	ldrb	r7, [r4, #29]
   37420:	mov	r6, r2
   37424:	cmp	r7, #0
   37428:	mov	r7, r0
   3742c:	popeq	{r4, r5, r6, r7, fp, pc}
   37430:	ldr	r0, [r1, #16]
   37434:	ldr	r2, [fp, #8]
   37438:	add	r5, r0, #1
   3743c:	cmp	r0, #0
   37440:	str	r5, [r1, #16]
   37444:	ldrne	r0, [r4, #20]
   37448:	addne	r1, r0, #1
   3744c:	strne	r1, [r4, #20]
   37450:	movne	r1, #44	; 0x2c
   37454:	strbne	r1, [r0]
   37458:	mov	r0, r4
   3745c:	mov	r1, r3
   37460:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37464:	ldr	r2, [r4, #20]
   37468:	lsr	r5, r7, #31
   3746c:	cmn	r7, #1
   37470:	bgt	37484 <flatcc_json_printer_int64_field@@Base+0xac>
   37474:	mov	r0, #45	; 0x2d
   37478:	rsbs	r6, r6, #0
   3747c:	strb	r0, [r2], #1
   37480:	rsc	r7, r7, #0
   37484:	mov	r0, r6
   37488:	mov	r1, r7
   3748c:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   37490:	ldr	r1, [r4, #20]
   37494:	add	r0, r0, r5
   37498:	add	r0, r1, r0
   3749c:	str	r0, [r4, #20]
   374a0:	pop	{r4, r5, r6, r7, fp, pc}
   374a4:	ldrd	r6, [r7]
   374a8:	eor	ip, r7, r0
   374ac:	eor	r5, r6, r2
   374b0:	orrs	r5, r5, ip
   374b4:	bne	37430 <flatcc_json_printer_int64_field@@Base+0x58>
   374b8:	ldrb	r7, [r4, #28]
   374bc:	mov	r6, r2
   374c0:	cmp	r7, #0
   374c4:	mov	r7, r0
   374c8:	bne	374a0 <flatcc_json_printer_int64_field@@Base+0xc8>
   374cc:	b	37430 <flatcc_json_printer_int64_field@@Base+0x58>

000374d0 <flatcc_json_printer_bool_field@@Base>:
   374d0:	push	{r4, r5, r6, sl, fp, lr}
   374d4:	add	fp, sp, #16
   374d8:	mov	r4, r0
   374dc:	mov	r0, #4
   374e0:	ldr	r5, [r1, #8]
   374e4:	add	r2, r0, r2, lsl #1
   374e8:	ldr	r0, [fp, #12]
   374ec:	cmp	r2, r5
   374f0:	bge	37510 <flatcc_json_printer_bool_field@@Base+0x40>
   374f4:	ldr	r5, [r1, #4]
   374f8:	add	r2, r5, r2
   374fc:	ldrh	r2, [r2]
   37500:	cmp	r2, #0
   37504:	ldrne	r5, [r1]
   37508:	addsne	r2, r5, r2
   3750c:	bne	375a4 <flatcc_json_printer_bool_field@@Base+0xd4>
   37510:	ldrb	r2, [r4, #29]
   37514:	mov	r6, r0
   37518:	cmp	r2, #0
   3751c:	popeq	{r4, r5, r6, sl, fp, pc}
   37520:	ldr	r0, [r1, #16]
   37524:	ldr	r2, [fp, #8]
   37528:	add	r5, r0, #1
   3752c:	cmp	r0, #0
   37530:	str	r5, [r1, #16]
   37534:	ldrne	r0, [r4, #20]
   37538:	addne	r1, r0, #1
   3753c:	strne	r1, [r4, #20]
   37540:	movne	r1, #44	; 0x2c
   37544:	strbne	r1, [r0]
   37548:	mov	r0, r4
   3754c:	mov	r1, r3
   37550:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37554:	ldr	r0, [r4, #20]
   37558:	cmp	r6, #0
   3755c:	beq	3757c <flatcc_json_printer_bool_field@@Base+0xac>
   37560:	mov	r1, #0
   37564:	strb	r1, [r0, #4]
   37568:	movw	r1, #29300	; 0x7274
   3756c:	movt	r1, #25973	; 0x6575
   37570:	str	r1, [r0]
   37574:	mov	r0, #4
   37578:	b	37594 <flatcc_json_printer_bool_field@@Base+0xc4>
   3757c:	mov	r1, #101	; 0x65
   37580:	strh	r1, [r0, #4]
   37584:	movw	r1, #24934	; 0x6166
   37588:	movt	r1, #29548	; 0x736c
   3758c:	str	r1, [r0]
   37590:	mov	r0, #5
   37594:	ldr	r1, [r4, #20]
   37598:	add	r0, r1, r0
   3759c:	str	r0, [r4, #20]
   375a0:	pop	{r4, r5, r6, sl, fp, pc}
   375a4:	ldrb	r6, [r2]
   375a8:	cmp	r6, r0
   375ac:	bne	37520 <flatcc_json_printer_bool_field@@Base+0x50>
   375b0:	ldrb	r2, [r4, #28]
   375b4:	mov	r6, r0
   375b8:	cmp	r2, #0
   375bc:	bne	375a0 <flatcc_json_printer_bool_field@@Base+0xd0>
   375c0:	b	37520 <flatcc_json_printer_bool_field@@Base+0x50>

000375c4 <flatcc_json_printer_float_field@@Base>:
   375c4:	push	{r4, r5, fp, lr}
   375c8:	add	fp, sp, #8
   375cc:	vpush	{d8}
   375d0:	mov	r5, r0
   375d4:	mov	r0, #4
   375d8:	vmov.f32	s16, s0
   375dc:	add	r0, r0, r2, lsl #1
   375e0:	ldr	r2, [r1, #8]
   375e4:	cmp	r0, r2
   375e8:	bge	37608 <flatcc_json_printer_float_field@@Base+0x44>
   375ec:	ldr	r2, [r1, #4]
   375f0:	add	r0, r2, r0
   375f4:	ldrh	r0, [r0]
   375f8:	cmp	r0, #0
   375fc:	ldrne	r2, [r1]
   37600:	addsne	r0, r2, r0
   37604:	bne	37668 <flatcc_json_printer_float_field@@Base+0xa4>
   37608:	ldrb	r0, [r5, #29]
   3760c:	cmp	r0, #0
   37610:	beq	37660 <flatcc_json_printer_float_field@@Base+0x9c>
   37614:	ldr	r0, [r1, #16]
   37618:	ldr	r2, [fp, #8]
   3761c:	add	r4, r0, #1
   37620:	cmp	r0, #0
   37624:	str	r4, [r1, #16]
   37628:	ldrne	r0, [r5, #20]
   3762c:	addne	r1, r0, #1
   37630:	strne	r1, [r5, #20]
   37634:	movne	r1, #44	; 0x2c
   37638:	strbne	r1, [r0]
   3763c:	mov	r0, r5
   37640:	mov	r1, r3
   37644:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37648:	ldr	r0, [r5, #20]
   3764c:	vcvt.f64.f32	d0, s16
   37650:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   37654:	ldr	r1, [r5, #20]
   37658:	add	r0, r1, r0
   3765c:	str	r0, [r5, #20]
   37660:	vpop	{d8}
   37664:	pop	{r4, r5, fp, pc}
   37668:	vldr	s0, [r0]
   3766c:	vcmp.f32	s0, s16
   37670:	vmrs	APSR_nzcv, fpscr
   37674:	bne	3768c <flatcc_json_printer_float_field@@Base+0xc8>
   37678:	ldrb	r0, [r5, #28]
   3767c:	vmov.f32	s16, s0
   37680:	cmp	r0, #0
   37684:	bne	37660 <flatcc_json_printer_float_field@@Base+0x9c>
   37688:	b	37614 <flatcc_json_printer_float_field@@Base+0x50>
   3768c:	vmov.f32	s16, s0
   37690:	b	37614 <flatcc_json_printer_float_field@@Base+0x50>

00037694 <flatcc_json_printer_double_field@@Base>:
   37694:	push	{r4, r5, fp, lr}
   37698:	add	fp, sp, #8
   3769c:	vpush	{d8}
   376a0:	mov	r5, r0
   376a4:	mov	r0, #4
   376a8:	vmov.f64	d8, d0
   376ac:	add	r0, r0, r2, lsl #1
   376b0:	ldr	r2, [r1, #8]
   376b4:	cmp	r0, r2
   376b8:	bge	376d8 <flatcc_json_printer_double_field@@Base+0x44>
   376bc:	ldr	r2, [r1, #4]
   376c0:	add	r0, r2, r0
   376c4:	ldrh	r0, [r0]
   376c8:	cmp	r0, #0
   376cc:	ldrne	r2, [r1]
   376d0:	addsne	r0, r2, r0
   376d4:	bne	37738 <flatcc_json_printer_double_field@@Base+0xa4>
   376d8:	ldrb	r0, [r5, #29]
   376dc:	cmp	r0, #0
   376e0:	beq	37730 <flatcc_json_printer_double_field@@Base+0x9c>
   376e4:	ldr	r0, [r1, #16]
   376e8:	ldr	r2, [fp, #8]
   376ec:	add	r4, r0, #1
   376f0:	cmp	r0, #0
   376f4:	str	r4, [r1, #16]
   376f8:	ldrne	r0, [r5, #20]
   376fc:	addne	r1, r0, #1
   37700:	strne	r1, [r5, #20]
   37704:	movne	r1, #44	; 0x2c
   37708:	strbne	r1, [r0]
   3770c:	mov	r0, r5
   37710:	mov	r1, r3
   37714:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37718:	ldr	r0, [r5, #20]
   3771c:	vmov.f64	d0, d8
   37720:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   37724:	ldr	r1, [r5, #20]
   37728:	add	r0, r1, r0
   3772c:	str	r0, [r5, #20]
   37730:	vpop	{d8}
   37734:	pop	{r4, r5, fp, pc}
   37738:	vldr	d16, [r0]
   3773c:	vcmp.f64	d16, d8
   37740:	vmrs	APSR_nzcv, fpscr
   37744:	bne	3775c <flatcc_json_printer_double_field@@Base+0xc8>
   37748:	ldrb	r0, [r5, #28]
   3774c:	vmov.f64	d8, d16
   37750:	cmp	r0, #0
   37754:	bne	37730 <flatcc_json_printer_double_field@@Base+0x9c>
   37758:	b	376e4 <flatcc_json_printer_double_field@@Base+0x50>
   3775c:	vmov.f64	d8, d16
   37760:	b	376e4 <flatcc_json_printer_double_field@@Base+0x50>

00037764 <flatcc_json_printer_uint8_enum_field@@Base>:
   37764:	push	{r4, r5, r6, r7, fp, lr}
   37768:	add	fp, sp, #16
   3776c:	mov	r4, r0
   37770:	mov	r0, #4
   37774:	ldr	r7, [fp, #16]
   37778:	ldr	ip, [fp, #12]
   3777c:	add	r5, r0, r2, lsl #1
   37780:	ldr	r0, [r1, #8]
   37784:	ldr	r2, [fp, #8]
   37788:	cmp	r5, r0
   3778c:	bge	377ac <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   37790:	ldr	r0, [r1, #4]
   37794:	add	r0, r0, r5
   37798:	ldrh	r5, [r0]
   3779c:	cmp	r5, #0
   377a0:	ldrne	r0, [r1]
   377a4:	addsne	r5, r0, r5
   377a8:	bne	37828 <flatcc_json_printer_uint8_enum_field@@Base+0xc4>
   377ac:	ldrb	r0, [r4, #29]
   377b0:	mov	r6, ip
   377b4:	cmp	r0, #0
   377b8:	popeq	{r4, r5, r6, r7, fp, pc}
   377bc:	ldr	r0, [r1, #16]
   377c0:	add	r5, r0, #1
   377c4:	cmp	r0, #0
   377c8:	str	r5, [r1, #16]
   377cc:	ldrne	r0, [r4, #20]
   377d0:	addne	r1, r0, #1
   377d4:	strne	r1, [r4, #20]
   377d8:	movne	r1, #44	; 0x2c
   377dc:	strbne	r1, [r0]
   377e0:	mov	r0, r4
   377e4:	mov	r1, r3
   377e8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   377ec:	ldrb	r0, [r4, #27]
   377f0:	cmp	r0, #0
   377f4:	beq	37814 <flatcc_json_printer_uint8_enum_field@@Base+0xb0>
   377f8:	ldr	r1, [r4, #20]
   377fc:	mov	r0, r6
   37800:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   37804:	ldr	r1, [r4, #20]
   37808:	add	r0, r1, r0
   3780c:	str	r0, [r4, #20]
   37810:	pop	{r4, r5, r6, r7, fp, pc}
   37814:	mov	r0, r4
   37818:	mov	r1, r6
   3781c:	mov	r2, r7
   37820:	pop	{r4, r5, r6, r7, fp, lr}
   37824:	bx	r2
   37828:	ldrb	r6, [r5]
   3782c:	cmp	r6, ip
   37830:	bne	377bc <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   37834:	ldrb	r0, [r4, #28]
   37838:	mov	r6, ip
   3783c:	cmp	r0, #0
   37840:	bne	37810 <flatcc_json_printer_uint8_enum_field@@Base+0xac>
   37844:	b	377bc <flatcc_json_printer_uint8_enum_field@@Base+0x58>

00037848 <flatcc_json_printer_uint16_enum_field@@Base>:
   37848:	push	{r4, r5, r6, r7, fp, lr}
   3784c:	add	fp, sp, #16
   37850:	mov	r4, r0
   37854:	mov	r0, #4
   37858:	ldr	r7, [fp, #16]
   3785c:	ldr	ip, [fp, #12]
   37860:	add	r5, r0, r2, lsl #1
   37864:	ldr	r0, [r1, #8]
   37868:	ldr	r2, [fp, #8]
   3786c:	cmp	r5, r0
   37870:	bge	37890 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   37874:	ldr	r0, [r1, #4]
   37878:	add	r0, r0, r5
   3787c:	ldrh	r5, [r0]
   37880:	cmp	r5, #0
   37884:	ldrne	r0, [r1]
   37888:	addsne	r5, r0, r5
   3788c:	bne	3790c <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   37890:	ldrb	r0, [r4, #29]
   37894:	mov	r6, ip
   37898:	cmp	r0, #0
   3789c:	popeq	{r4, r5, r6, r7, fp, pc}
   378a0:	ldr	r0, [r1, #16]
   378a4:	add	r5, r0, #1
   378a8:	cmp	r0, #0
   378ac:	str	r5, [r1, #16]
   378b0:	ldrne	r0, [r4, #20]
   378b4:	addne	r1, r0, #1
   378b8:	strne	r1, [r4, #20]
   378bc:	movne	r1, #44	; 0x2c
   378c0:	strbne	r1, [r0]
   378c4:	mov	r0, r4
   378c8:	mov	r1, r3
   378cc:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   378d0:	ldrb	r0, [r4, #27]
   378d4:	cmp	r0, #0
   378d8:	beq	378f8 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   378dc:	ldr	r1, [r4, #20]
   378e0:	mov	r0, r6
   378e4:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   378e8:	ldr	r1, [r4, #20]
   378ec:	add	r0, r1, r0
   378f0:	str	r0, [r4, #20]
   378f4:	pop	{r4, r5, r6, r7, fp, pc}
   378f8:	mov	r0, r4
   378fc:	mov	r1, r6
   37900:	mov	r2, r7
   37904:	pop	{r4, r5, r6, r7, fp, lr}
   37908:	bx	r2
   3790c:	ldrh	r6, [r5]
   37910:	cmp	r6, ip
   37914:	bne	378a0 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   37918:	ldrb	r0, [r4, #28]
   3791c:	mov	r6, ip
   37920:	cmp	r0, #0
   37924:	bne	378f4 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   37928:	b	378a0 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003792c <flatcc_json_printer_uint32_enum_field@@Base>:
   3792c:	push	{r4, r5, r6, r7, fp, lr}
   37930:	add	fp, sp, #16
   37934:	mov	r4, r0
   37938:	mov	r0, #4
   3793c:	ldr	r7, [fp, #16]
   37940:	ldr	ip, [fp, #12]
   37944:	add	r5, r0, r2, lsl #1
   37948:	ldr	r0, [r1, #8]
   3794c:	ldr	r2, [fp, #8]
   37950:	cmp	r5, r0
   37954:	bge	37974 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   37958:	ldr	r0, [r1, #4]
   3795c:	add	r0, r0, r5
   37960:	ldrh	r5, [r0]
   37964:	cmp	r5, #0
   37968:	ldrne	r0, [r1]
   3796c:	addsne	r5, r0, r5
   37970:	bne	379f0 <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   37974:	ldrb	r0, [r4, #29]
   37978:	mov	r6, ip
   3797c:	cmp	r0, #0
   37980:	popeq	{r4, r5, r6, r7, fp, pc}
   37984:	ldr	r0, [r1, #16]
   37988:	add	r5, r0, #1
   3798c:	cmp	r0, #0
   37990:	str	r5, [r1, #16]
   37994:	ldrne	r0, [r4, #20]
   37998:	addne	r1, r0, #1
   3799c:	strne	r1, [r4, #20]
   379a0:	movne	r1, #44	; 0x2c
   379a4:	strbne	r1, [r0]
   379a8:	mov	r0, r4
   379ac:	mov	r1, r3
   379b0:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   379b4:	ldrb	r0, [r4, #27]
   379b8:	cmp	r0, #0
   379bc:	beq	379dc <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   379c0:	ldr	r1, [r4, #20]
   379c4:	mov	r0, r6
   379c8:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   379cc:	ldr	r1, [r4, #20]
   379d0:	add	r0, r1, r0
   379d4:	str	r0, [r4, #20]
   379d8:	pop	{r4, r5, r6, r7, fp, pc}
   379dc:	mov	r0, r4
   379e0:	mov	r1, r6
   379e4:	mov	r2, r7
   379e8:	pop	{r4, r5, r6, r7, fp, lr}
   379ec:	bx	r2
   379f0:	ldr	r6, [r5]
   379f4:	cmp	r6, ip
   379f8:	bne	37984 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   379fc:	ldrb	r0, [r4, #28]
   37a00:	mov	r6, ip
   37a04:	cmp	r0, #0
   37a08:	bne	379d8 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   37a0c:	b	37984 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

00037a10 <flatcc_json_printer_uint64_enum_field@@Base>:
   37a10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   37a14:	add	fp, sp, #24
   37a18:	mov	r4, r0
   37a1c:	mov	r0, #4
   37a20:	ldr	ip, [fp, #20]
   37a24:	ldr	r6, [fp, #16]
   37a28:	ldr	r5, [fp, #24]
   37a2c:	add	r7, r0, r2, lsl #1
   37a30:	ldr	r0, [r1, #8]
   37a34:	ldr	r2, [fp, #8]
   37a38:	cmp	r7, r0
   37a3c:	bge	37a5c <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   37a40:	ldr	r0, [r1, #4]
   37a44:	add	r0, r0, r7
   37a48:	ldrh	r7, [r0]
   37a4c:	cmp	r7, #0
   37a50:	ldrne	r0, [r1]
   37a54:	addsne	r7, r0, r7
   37a58:	bne	37ae4 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   37a5c:	ldrb	r0, [r4, #29]
   37a60:	mov	r8, r6
   37a64:	mov	r7, ip
   37a68:	cmp	r0, #0
   37a6c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   37a70:	ldr	r0, [r1, #16]
   37a74:	add	r6, r0, #1
   37a78:	cmp	r0, #0
   37a7c:	str	r6, [r1, #16]
   37a80:	ldrne	r0, [r4, #20]
   37a84:	addne	r1, r0, #1
   37a88:	strne	r1, [r4, #20]
   37a8c:	movne	r1, #44	; 0x2c
   37a90:	strbne	r1, [r0]
   37a94:	mov	r0, r4
   37a98:	mov	r1, r3
   37a9c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37aa0:	ldrb	r0, [r4, #27]
   37aa4:	cmp	r0, #0
   37aa8:	beq	37acc <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   37aac:	ldr	r2, [r4, #20]
   37ab0:	mov	r0, r8
   37ab4:	mov	r1, r7
   37ab8:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   37abc:	ldr	r1, [r4, #20]
   37ac0:	add	r0, r1, r0
   37ac4:	str	r0, [r4, #20]
   37ac8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   37acc:	mov	r0, r4
   37ad0:	mov	r2, r8
   37ad4:	mov	r3, r7
   37ad8:	mov	r1, r5
   37adc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   37ae0:	bx	r1
   37ae4:	ldr	r8, [r7]
   37ae8:	ldr	r7, [r7, #4]
   37aec:	eor	lr, r7, ip
   37af0:	eor	r0, r8, r6
   37af4:	orrs	r0, r0, lr
   37af8:	bne	37a70 <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   37afc:	ldrb	r0, [r4, #28]
   37b00:	mov	r8, r6
   37b04:	mov	r7, ip
   37b08:	cmp	r0, #0
   37b0c:	bne	37ac8 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   37b10:	b	37a70 <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00037b14 <flatcc_json_printer_int8_enum_field@@Base>:
   37b14:	push	{r4, r5, r6, r7, fp, lr}
   37b18:	add	fp, sp, #16
   37b1c:	mov	r4, r0
   37b20:	mov	r0, #4
   37b24:	ldr	r5, [r1, #8]
   37b28:	ldr	ip, [fp, #16]
   37b2c:	add	r6, r0, r2, lsl #1
   37b30:	ldr	r0, [fp, #12]
   37b34:	ldr	r2, [fp, #8]
   37b38:	cmp	r6, r5
   37b3c:	bge	37b5c <flatcc_json_printer_int8_enum_field@@Base+0x48>
   37b40:	ldr	r5, [r1, #4]
   37b44:	add	r6, r5, r6
   37b48:	ldrh	r6, [r6]
   37b4c:	cmp	r6, #0
   37b50:	ldrne	r5, [r1]
   37b54:	addsne	r6, r5, r6
   37b58:	bne	37bf8 <flatcc_json_printer_int8_enum_field@@Base+0xe4>
   37b5c:	ldrb	r6, [r4, #29]
   37b60:	mov	r5, r0
   37b64:	cmp	r6, #0
   37b68:	popeq	{r4, r5, r6, r7, fp, pc}
   37b6c:	ldr	r0, [r1, #16]
   37b70:	mov	r7, ip
   37b74:	add	r6, r0, #1
   37b78:	cmp	r0, #0
   37b7c:	str	r6, [r1, #16]
   37b80:	ldrne	r0, [r4, #20]
   37b84:	addne	r1, r0, #1
   37b88:	strne	r1, [r4, #20]
   37b8c:	movne	r1, #44	; 0x2c
   37b90:	strbne	r1, [r0]
   37b94:	mov	r0, r4
   37b98:	mov	r1, r3
   37b9c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37ba0:	ldrb	r0, [r4, #27]
   37ba4:	cmp	r0, #0
   37ba8:	beq	37be4 <flatcc_json_printer_int8_enum_field@@Base+0xd0>
   37bac:	ubfx	r6, r5, #7, #1
   37bb0:	ldr	r1, [r4, #20]
   37bb4:	sxtb	r0, r5
   37bb8:	cmn	r0, #1
   37bbc:	movle	r0, #45	; 0x2d
   37bc0:	rsble	r5, r5, #0
   37bc4:	strble	r0, [r1], #1
   37bc8:	uxtb	r0, r5
   37bcc:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   37bd0:	ldr	r1, [r4, #20]
   37bd4:	add	r0, r0, r6
   37bd8:	add	r0, r1, r0
   37bdc:	str	r0, [r4, #20]
   37be0:	pop	{r4, r5, r6, r7, fp, pc}
   37be4:	sxtb	r1, r5
   37be8:	mov	r0, r4
   37bec:	mov	r2, r7
   37bf0:	pop	{r4, r5, r6, r7, fp, lr}
   37bf4:	bx	r2
   37bf8:	ldrb	r5, [r6]
   37bfc:	uxtb	r6, r0
   37c00:	cmp	r5, r6
   37c04:	bne	37b6c <flatcc_json_printer_int8_enum_field@@Base+0x58>
   37c08:	ldrb	r6, [r4, #28]
   37c0c:	mov	r5, r0
   37c10:	cmp	r6, #0
   37c14:	bne	37be0 <flatcc_json_printer_int8_enum_field@@Base+0xcc>
   37c18:	b	37b6c <flatcc_json_printer_int8_enum_field@@Base+0x58>

00037c1c <flatcc_json_printer_int16_enum_field@@Base>:
   37c1c:	push	{r4, r5, r6, r7, fp, lr}
   37c20:	add	fp, sp, #16
   37c24:	mov	r4, r0
   37c28:	mov	r0, #4
   37c2c:	ldr	r5, [r1, #8]
   37c30:	ldr	ip, [fp, #16]
   37c34:	add	r6, r0, r2, lsl #1
   37c38:	ldr	r0, [fp, #12]
   37c3c:	ldr	r2, [fp, #8]
   37c40:	cmp	r6, r5
   37c44:	bge	37c64 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   37c48:	ldr	r5, [r1, #4]
   37c4c:	add	r6, r5, r6
   37c50:	ldrh	r6, [r6]
   37c54:	cmp	r6, #0
   37c58:	ldrne	r5, [r1]
   37c5c:	addsne	r6, r5, r6
   37c60:	bne	37d00 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   37c64:	ldrb	r6, [r4, #29]
   37c68:	mov	r5, r0
   37c6c:	cmp	r6, #0
   37c70:	popeq	{r4, r5, r6, r7, fp, pc}
   37c74:	ldr	r0, [r1, #16]
   37c78:	mov	r7, ip
   37c7c:	add	r6, r0, #1
   37c80:	cmp	r0, #0
   37c84:	str	r6, [r1, #16]
   37c88:	ldrne	r0, [r4, #20]
   37c8c:	addne	r1, r0, #1
   37c90:	strne	r1, [r4, #20]
   37c94:	movne	r1, #44	; 0x2c
   37c98:	strbne	r1, [r0]
   37c9c:	mov	r0, r4
   37ca0:	mov	r1, r3
   37ca4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37ca8:	ldrb	r0, [r4, #27]
   37cac:	cmp	r0, #0
   37cb0:	beq	37cec <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   37cb4:	ubfx	r6, r5, #15, #1
   37cb8:	ldr	r1, [r4, #20]
   37cbc:	sxth	r0, r5
   37cc0:	cmn	r0, #1
   37cc4:	movle	r0, #45	; 0x2d
   37cc8:	rsble	r5, r5, #0
   37ccc:	strble	r0, [r1], #1
   37cd0:	uxth	r0, r5
   37cd4:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   37cd8:	ldr	r1, [r4, #20]
   37cdc:	add	r0, r0, r6
   37ce0:	add	r0, r1, r0
   37ce4:	str	r0, [r4, #20]
   37ce8:	pop	{r4, r5, r6, r7, fp, pc}
   37cec:	sxth	r1, r5
   37cf0:	mov	r0, r4
   37cf4:	mov	r2, r7
   37cf8:	pop	{r4, r5, r6, r7, fp, lr}
   37cfc:	bx	r2
   37d00:	ldrh	r5, [r6]
   37d04:	uxth	r6, r0
   37d08:	cmp	r5, r6
   37d0c:	bne	37c74 <flatcc_json_printer_int16_enum_field@@Base+0x58>
   37d10:	ldrb	r6, [r4, #28]
   37d14:	mov	r5, r0
   37d18:	cmp	r6, #0
   37d1c:	bne	37ce8 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   37d20:	b	37c74 <flatcc_json_printer_int16_enum_field@@Base+0x58>

00037d24 <flatcc_json_printer_int32_enum_field@@Base>:
   37d24:	push	{r4, r5, r6, r7, fp, lr}
   37d28:	add	fp, sp, #16
   37d2c:	mov	r4, r0
   37d30:	mov	r0, #4
   37d34:	ldr	r5, [r1, #8]
   37d38:	ldr	ip, [fp, #16]
   37d3c:	add	r6, r0, r2, lsl #1
   37d40:	ldr	r0, [fp, #12]
   37d44:	ldr	r2, [fp, #8]
   37d48:	cmp	r6, r5
   37d4c:	bge	37d6c <flatcc_json_printer_int32_enum_field@@Base+0x48>
   37d50:	ldr	r5, [r1, #4]
   37d54:	add	r6, r5, r6
   37d58:	ldrh	r6, [r6]
   37d5c:	cmp	r6, #0
   37d60:	ldrne	r5, [r1]
   37d64:	addsne	r6, r5, r6
   37d68:	bne	37e04 <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   37d6c:	ldrb	r6, [r4, #29]
   37d70:	mov	r5, r0
   37d74:	cmp	r6, #0
   37d78:	popeq	{r4, r5, r6, r7, fp, pc}
   37d7c:	ldr	r0, [r1, #16]
   37d80:	mov	r7, ip
   37d84:	add	r6, r0, #1
   37d88:	cmp	r0, #0
   37d8c:	str	r6, [r1, #16]
   37d90:	ldrne	r0, [r4, #20]
   37d94:	addne	r1, r0, #1
   37d98:	strne	r1, [r4, #20]
   37d9c:	movne	r1, #44	; 0x2c
   37da0:	strbne	r1, [r0]
   37da4:	mov	r0, r4
   37da8:	mov	r1, r3
   37dac:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37db0:	ldrb	r0, [r4, #27]
   37db4:	cmp	r0, #0
   37db8:	beq	37df0 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   37dbc:	ldr	r1, [r4, #20]
   37dc0:	cmn	r5, #1
   37dc4:	lsr	r6, r5, #31
   37dc8:	movle	r0, #45	; 0x2d
   37dcc:	rsble	r5, r5, #0
   37dd0:	strble	r0, [r1], #1
   37dd4:	mov	r0, r5
   37dd8:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   37ddc:	ldr	r1, [r4, #20]
   37de0:	add	r0, r0, r6
   37de4:	add	r0, r1, r0
   37de8:	str	r0, [r4, #20]
   37dec:	pop	{r4, r5, r6, r7, fp, pc}
   37df0:	mov	r0, r4
   37df4:	mov	r1, r5
   37df8:	mov	r2, r7
   37dfc:	pop	{r4, r5, r6, r7, fp, lr}
   37e00:	bx	r2
   37e04:	ldr	r5, [r6]
   37e08:	cmp	r5, r0
   37e0c:	bne	37d7c <flatcc_json_printer_int32_enum_field@@Base+0x58>
   37e10:	ldrb	r6, [r4, #28]
   37e14:	mov	r5, r0
   37e18:	cmp	r6, #0
   37e1c:	bne	37dec <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   37e20:	b	37d7c <flatcc_json_printer_int32_enum_field@@Base+0x58>

00037e24 <flatcc_json_printer_int64_enum_field@@Base>:
   37e24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   37e28:	add	fp, sp, #24
   37e2c:	mov	r4, r0
   37e30:	mov	r0, #4
   37e34:	ldr	r5, [r1, #8]
   37e38:	ldr	r6, [fp, #16]
   37e3c:	ldr	r9, [fp, #24]
   37e40:	add	r7, r0, r2, lsl #1
   37e44:	ldr	r0, [fp, #20]
   37e48:	ldr	r2, [fp, #8]
   37e4c:	cmp	r7, r5
   37e50:	bge	37e70 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   37e54:	ldr	r5, [r1, #4]
   37e58:	add	r7, r5, r7
   37e5c:	ldrh	r7, [r7]
   37e60:	cmp	r7, #0
   37e64:	ldrne	r5, [r1]
   37e68:	addsne	r7, r5, r7
   37e6c:	bne	37f18 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   37e70:	ldrb	r7, [r4, #29]
   37e74:	mov	r8, r6
   37e78:	cmp	r7, #0
   37e7c:	mov	r7, r0
   37e80:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   37e84:	ldr	r0, [r1, #16]
   37e88:	add	r6, r0, #1
   37e8c:	cmp	r0, #0
   37e90:	str	r6, [r1, #16]
   37e94:	ldrne	r0, [r4, #20]
   37e98:	addne	r1, r0, #1
   37e9c:	strne	r1, [r4, #20]
   37ea0:	movne	r1, #44	; 0x2c
   37ea4:	strbne	r1, [r0]
   37ea8:	mov	r0, r4
   37eac:	mov	r1, r3
   37eb0:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37eb4:	ldrb	r0, [r4, #27]
   37eb8:	cmp	r0, #0
   37ebc:	beq	37f00 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   37ec0:	ldr	r2, [r4, #20]
   37ec4:	lsr	r5, r7, #31
   37ec8:	cmn	r7, #1
   37ecc:	bgt	37ee0 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   37ed0:	mov	r0, #45	; 0x2d
   37ed4:	rsbs	r8, r8, #0
   37ed8:	strb	r0, [r2], #1
   37edc:	rsc	r7, r7, #0
   37ee0:	mov	r0, r8
   37ee4:	mov	r1, r7
   37ee8:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   37eec:	ldr	r1, [r4, #20]
   37ef0:	add	r0, r0, r5
   37ef4:	add	r0, r1, r0
   37ef8:	str	r0, [r4, #20]
   37efc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37f00:	mov	r0, r4
   37f04:	mov	r2, r8
   37f08:	mov	r3, r7
   37f0c:	mov	r1, r9
   37f10:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   37f14:	bx	r1
   37f18:	ldr	r8, [r7]
   37f1c:	ldr	r7, [r7, #4]
   37f20:	eor	ip, r7, r0
   37f24:	eor	r5, r8, r6
   37f28:	orrs	r5, r5, ip
   37f2c:	bne	37e84 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   37f30:	ldrb	r7, [r4, #28]
   37f34:	mov	r8, r6
   37f38:	cmp	r7, #0
   37f3c:	mov	r7, r0
   37f40:	bne	37efc <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   37f44:	b	37e84 <flatcc_json_printer_int64_enum_field@@Base+0x60>

00037f48 <flatcc_json_printer_bool_enum_field@@Base>:
   37f48:	push	{r4, r5, r6, r7, fp, lr}
   37f4c:	add	fp, sp, #16
   37f50:	mov	r4, r0
   37f54:	mov	r0, #4
   37f58:	ldr	r7, [fp, #16]
   37f5c:	ldr	ip, [fp, #12]
   37f60:	add	r5, r0, r2, lsl #1
   37f64:	ldr	r0, [r1, #8]
   37f68:	ldr	r2, [fp, #8]
   37f6c:	cmp	r5, r0
   37f70:	bge	37f90 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   37f74:	ldr	r0, [r1, #4]
   37f78:	add	r0, r0, r5
   37f7c:	ldrh	r5, [r0]
   37f80:	cmp	r5, #0
   37f84:	ldrne	r0, [r1]
   37f88:	addsne	r5, r0, r5
   37f8c:	bne	38040 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   37f90:	ldrb	r0, [r4, #29]
   37f94:	mov	r6, ip
   37f98:	cmp	r0, #0
   37f9c:	popeq	{r4, r5, r6, r7, fp, pc}
   37fa0:	ldr	r0, [r1, #16]
   37fa4:	add	r5, r0, #1
   37fa8:	cmp	r0, #0
   37fac:	str	r5, [r1, #16]
   37fb0:	ldrne	r0, [r4, #20]
   37fb4:	addne	r1, r0, #1
   37fb8:	strne	r1, [r4, #20]
   37fbc:	movne	r1, #44	; 0x2c
   37fc0:	strbne	r1, [r0]
   37fc4:	mov	r0, r4
   37fc8:	mov	r1, r3
   37fcc:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   37fd0:	ldrb	r0, [r4, #27]
   37fd4:	cmp	r0, #0
   37fd8:	beq	38004 <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   37fdc:	ldr	r0, [r4, #20]
   37fe0:	cmp	r6, #0
   37fe4:	beq	38018 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   37fe8:	mov	r1, #0
   37fec:	strb	r1, [r0, #4]
   37ff0:	movw	r1, #29300	; 0x7274
   37ff4:	movt	r1, #25973	; 0x6575
   37ff8:	str	r1, [r0]
   37ffc:	mov	r0, #4
   38000:	b	38030 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   38004:	mov	r0, r4
   38008:	mov	r1, r6
   3800c:	mov	r2, r7
   38010:	pop	{r4, r5, r6, r7, fp, lr}
   38014:	bx	r2
   38018:	mov	r1, #101	; 0x65
   3801c:	strh	r1, [r0, #4]
   38020:	movw	r1, #24934	; 0x6166
   38024:	movt	r1, #29548	; 0x736c
   38028:	str	r1, [r0]
   3802c:	mov	r0, #5
   38030:	ldr	r1, [r4, #20]
   38034:	add	r0, r1, r0
   38038:	str	r0, [r4, #20]
   3803c:	pop	{r4, r5, r6, r7, fp, pc}
   38040:	ldrb	r6, [r5]
   38044:	cmp	r6, ip
   38048:	bne	37fa0 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3804c:	ldrb	r0, [r4, #28]
   38050:	mov	r6, ip
   38054:	cmp	r0, #0
   38058:	bne	3803c <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   3805c:	b	37fa0 <flatcc_json_printer_bool_enum_field@@Base+0x58>

00038060 <flatcc_json_printer_uint8_struct_field@@Base>:
   38060:	push	{r4, r5, r6, sl, fp, lr}
   38064:	add	fp, sp, #16
   38068:	mov	r5, r1
   3806c:	mov	r4, r0
   38070:	ldrb	r6, [r2, r3]
   38074:	ldr	r2, [fp, #12]
   38078:	ldr	r1, [fp, #8]
   3807c:	cmp	r5, #0
   38080:	ldrne	r0, [r4, #20]
   38084:	addne	r3, r0, #1
   38088:	strne	r3, [r4, #20]
   3808c:	movne	r3, #44	; 0x2c
   38090:	strbne	r3, [r0]
   38094:	mov	r0, r4
   38098:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3809c:	ldr	r1, [r4, #20]
   380a0:	mov	r0, r6
   380a4:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   380a8:	ldr	r1, [r4, #20]
   380ac:	add	r0, r1, r0
   380b0:	str	r0, [r4, #20]
   380b4:	pop	{r4, r5, r6, sl, fp, pc}

000380b8 <flatcc_json_printer_uint16_struct_field@@Base>:
   380b8:	push	{r4, r5, r6, sl, fp, lr}
   380bc:	add	fp, sp, #16
   380c0:	mov	r5, r1
   380c4:	mov	r4, r0
   380c8:	add	r0, r2, r3
   380cc:	ldr	r2, [fp, #12]
   380d0:	ldr	r1, [fp, #8]
   380d4:	cmp	r5, #0
   380d8:	ldrh	r6, [r0]
   380dc:	ldrne	r0, [r4, #20]
   380e0:	addne	r3, r0, #1
   380e4:	strne	r3, [r4, #20]
   380e8:	movne	r3, #44	; 0x2c
   380ec:	strbne	r3, [r0]
   380f0:	mov	r0, r4
   380f4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   380f8:	ldr	r1, [r4, #20]
   380fc:	mov	r0, r6
   38100:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   38104:	ldr	r1, [r4, #20]
   38108:	add	r0, r1, r0
   3810c:	str	r0, [r4, #20]
   38110:	pop	{r4, r5, r6, sl, fp, pc}

00038114 <flatcc_json_printer_uint32_struct_field@@Base>:
   38114:	push	{r4, r5, r6, sl, fp, lr}
   38118:	add	fp, sp, #16
   3811c:	mov	r5, r1
   38120:	mov	r4, r0
   38124:	ldr	r6, [r2, r3]
   38128:	ldr	r2, [fp, #12]
   3812c:	ldr	r1, [fp, #8]
   38130:	cmp	r5, #0
   38134:	ldrne	r0, [r4, #20]
   38138:	addne	r3, r0, #1
   3813c:	strne	r3, [r4, #20]
   38140:	movne	r3, #44	; 0x2c
   38144:	strbne	r3, [r0]
   38148:	mov	r0, r4
   3814c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38150:	ldr	r1, [r4, #20]
   38154:	mov	r0, r6
   38158:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   3815c:	ldr	r1, [r4, #20]
   38160:	add	r0, r1, r0
   38164:	str	r0, [r4, #20]
   38168:	pop	{r4, r5, r6, sl, fp, pc}

0003816c <flatcc_json_printer_uint64_struct_field@@Base>:
   3816c:	push	{r4, r5, r6, r7, fp, lr}
   38170:	add	fp, sp, #16
   38174:	mov	r5, r1
   38178:	ldr	r7, [r2, r3]!
   3817c:	mov	r4, r0
   38180:	ldr	r1, [fp, #8]
   38184:	cmp	r5, #0
   38188:	ldrne	r0, [r4, #20]
   3818c:	ldr	r6, [r2, #4]
   38190:	ldr	r2, [fp, #12]
   38194:	addne	r3, r0, #1
   38198:	strne	r3, [r4, #20]
   3819c:	movne	r3, #44	; 0x2c
   381a0:	strbne	r3, [r0]
   381a4:	mov	r0, r4
   381a8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   381ac:	ldr	r2, [r4, #20]
   381b0:	mov	r0, r7
   381b4:	mov	r1, r6
   381b8:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   381bc:	ldr	r1, [r4, #20]
   381c0:	add	r0, r1, r0
   381c4:	str	r0, [r4, #20]
   381c8:	pop	{r4, r5, r6, r7, fp, pc}

000381cc <flatcc_json_printer_int8_struct_field@@Base>:
   381cc:	push	{r4, r5, r6, sl, fp, lr}
   381d0:	add	fp, sp, #16
   381d4:	mov	ip, r1
   381d8:	mov	r4, r0
   381dc:	add	r0, r2, r3
   381e0:	ldr	r2, [fp, #12]
   381e4:	ldr	r1, [fp, #8]
   381e8:	cmp	ip, #0
   381ec:	ldrsb	r5, [r0]
   381f0:	ldrne	r0, [r4, #20]
   381f4:	addne	r3, r0, #1
   381f8:	strne	r3, [r4, #20]
   381fc:	movne	r3, #44	; 0x2c
   38200:	strbne	r3, [r0]
   38204:	mov	r0, r4
   38208:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3820c:	ubfx	r6, r5, #7, #1
   38210:	ldr	r1, [r4, #20]
   38214:	cmn	r5, #1
   38218:	movle	r0, #45	; 0x2d
   3821c:	rsble	r5, r5, #0
   38220:	strble	r0, [r1], #1
   38224:	uxtb	r0, r5
   38228:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   3822c:	ldr	r1, [r4, #20]
   38230:	add	r0, r0, r6
   38234:	add	r0, r1, r0
   38238:	str	r0, [r4, #20]
   3823c:	pop	{r4, r5, r6, sl, fp, pc}

00038240 <flatcc_json_printer_int16_struct_field@@Base>:
   38240:	push	{r4, r5, r6, sl, fp, lr}
   38244:	add	fp, sp, #16
   38248:	mov	ip, r1
   3824c:	mov	r4, r0
   38250:	add	r0, r2, r3
   38254:	ldr	r2, [fp, #12]
   38258:	ldr	r1, [fp, #8]
   3825c:	cmp	ip, #0
   38260:	ldrsh	r5, [r0]
   38264:	ldrne	r0, [r4, #20]
   38268:	addne	r3, r0, #1
   3826c:	strne	r3, [r4, #20]
   38270:	movne	r3, #44	; 0x2c
   38274:	strbne	r3, [r0]
   38278:	mov	r0, r4
   3827c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38280:	ubfx	r6, r5, #15, #1
   38284:	ldr	r1, [r4, #20]
   38288:	cmn	r5, #1
   3828c:	movle	r0, #45	; 0x2d
   38290:	rsble	r5, r5, #0
   38294:	strble	r0, [r1], #1
   38298:	uxth	r0, r5
   3829c:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   382a0:	ldr	r1, [r4, #20]
   382a4:	add	r0, r0, r6
   382a8:	add	r0, r1, r0
   382ac:	str	r0, [r4, #20]
   382b0:	pop	{r4, r5, r6, sl, fp, pc}

000382b4 <flatcc_json_printer_int32_struct_field@@Base>:
   382b4:	push	{r4, r5, r6, sl, fp, lr}
   382b8:	add	fp, sp, #16
   382bc:	mov	ip, r1
   382c0:	mov	r4, r0
   382c4:	ldr	r5, [r2, r3]
   382c8:	ldr	r2, [fp, #12]
   382cc:	ldr	r1, [fp, #8]
   382d0:	cmp	ip, #0
   382d4:	ldrne	r0, [r4, #20]
   382d8:	addne	r3, r0, #1
   382dc:	strne	r3, [r4, #20]
   382e0:	movne	r3, #44	; 0x2c
   382e4:	strbne	r3, [r0]
   382e8:	mov	r0, r4
   382ec:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   382f0:	ldr	r1, [r4, #20]
   382f4:	cmn	r5, #1
   382f8:	lsr	r6, r5, #31
   382fc:	movle	r0, #45	; 0x2d
   38300:	rsble	r5, r5, #0
   38304:	strble	r0, [r1], #1
   38308:	mov	r0, r5
   3830c:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   38310:	ldr	r1, [r4, #20]
   38314:	add	r0, r0, r6
   38318:	add	r0, r1, r0
   3831c:	str	r0, [r4, #20]
   38320:	pop	{r4, r5, r6, sl, fp, pc}

00038324 <flatcc_json_printer_int64_struct_field@@Base>:
   38324:	push	{r4, r5, r6, r7, fp, lr}
   38328:	add	fp, sp, #16
   3832c:	mov	r5, r1
   38330:	ldr	r7, [r2, r3]!
   38334:	mov	r4, r0
   38338:	ldr	r1, [fp, #8]
   3833c:	cmp	r5, #0
   38340:	ldrne	r0, [r4, #20]
   38344:	ldr	r6, [r2, #4]
   38348:	ldr	r2, [fp, #12]
   3834c:	addne	r3, r0, #1
   38350:	strne	r3, [r4, #20]
   38354:	movne	r3, #44	; 0x2c
   38358:	strbne	r3, [r0]
   3835c:	mov	r0, r4
   38360:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38364:	ldr	r2, [r4, #20]
   38368:	lsr	r5, r6, #31
   3836c:	cmn	r6, #1
   38370:	bgt	38384 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   38374:	mov	r0, #45	; 0x2d
   38378:	rsbs	r7, r7, #0
   3837c:	strb	r0, [r2], #1
   38380:	rsc	r6, r6, #0
   38384:	mov	r0, r7
   38388:	mov	r1, r6
   3838c:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   38390:	ldr	r1, [r4, #20]
   38394:	add	r0, r0, r5
   38398:	add	r0, r1, r0
   3839c:	str	r0, [r4, #20]
   383a0:	pop	{r4, r5, r6, r7, fp, pc}

000383a4 <flatcc_json_printer_bool_struct_field@@Base>:
   383a4:	push	{r4, r5, fp, lr}
   383a8:	add	fp, sp, #8
   383ac:	mov	ip, r1
   383b0:	mov	r4, r0
   383b4:	ldrb	r5, [r2, r3]
   383b8:	ldr	r2, [fp, #12]
   383bc:	ldr	r1, [fp, #8]
   383c0:	cmp	ip, #0
   383c4:	ldrne	r0, [r4, #20]
   383c8:	addne	r3, r0, #1
   383cc:	strne	r3, [r4, #20]
   383d0:	movne	r3, #44	; 0x2c
   383d4:	strbne	r3, [r0]
   383d8:	mov	r0, r4
   383dc:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   383e0:	ldr	r0, [r4, #20]
   383e4:	cmp	r5, #0
   383e8:	beq	38408 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   383ec:	mov	r1, #0
   383f0:	strb	r1, [r0, #4]
   383f4:	movw	r1, #29300	; 0x7274
   383f8:	movt	r1, #25973	; 0x6575
   383fc:	str	r1, [r0]
   38400:	mov	r0, #4
   38404:	b	38420 <flatcc_json_printer_bool_struct_field@@Base+0x7c>
   38408:	mov	r1, #101	; 0x65
   3840c:	strh	r1, [r0, #4]
   38410:	movw	r1, #24934	; 0x6166
   38414:	movt	r1, #29548	; 0x736c
   38418:	str	r1, [r0]
   3841c:	mov	r0, #5
   38420:	ldr	r1, [r4, #20]
   38424:	add	r0, r1, r0
   38428:	str	r0, [r4, #20]
   3842c:	pop	{r4, r5, fp, pc}

00038430 <flatcc_json_printer_float_struct_field@@Base>:
   38430:	push	{r4, sl, fp, lr}
   38434:	add	fp, sp, #8
   38438:	vpush	{d8}
   3843c:	mov	ip, r1
   38440:	mov	r4, r0
   38444:	add	r0, r2, r3
   38448:	ldr	r2, [fp, #12]
   3844c:	ldr	r1, [fp, #8]
   38450:	cmp	ip, #0
   38454:	vldr	s16, [r0]
   38458:	ldrne	r0, [r4, #20]
   3845c:	addne	r3, r0, #1
   38460:	strne	r3, [r4, #20]
   38464:	movne	r3, #44	; 0x2c
   38468:	strbne	r3, [r0]
   3846c:	mov	r0, r4
   38470:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38474:	ldr	r0, [r4, #20]
   38478:	vcvt.f64.f32	d0, s16
   3847c:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   38480:	ldr	r1, [r4, #20]
   38484:	add	r0, r1, r0
   38488:	str	r0, [r4, #20]
   3848c:	vpop	{d8}
   38490:	pop	{r4, sl, fp, pc}

00038494 <flatcc_json_printer_double_struct_field@@Base>:
   38494:	push	{r4, sl, fp, lr}
   38498:	add	fp, sp, #8
   3849c:	vpush	{d8}
   384a0:	mov	ip, r1
   384a4:	mov	r4, r0
   384a8:	add	r0, r2, r3
   384ac:	ldr	r2, [fp, #12]
   384b0:	ldr	r1, [fp, #8]
   384b4:	cmp	ip, #0
   384b8:	vldr	d8, [r0]
   384bc:	ldrne	r0, [r4, #20]
   384c0:	addne	r3, r0, #1
   384c4:	strne	r3, [r4, #20]
   384c8:	movne	r3, #44	; 0x2c
   384cc:	strbne	r3, [r0]
   384d0:	mov	r0, r4
   384d4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   384d8:	ldr	r0, [r4, #20]
   384dc:	vorr	d0, d8, d8
   384e0:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   384e4:	ldr	r1, [r4, #20]
   384e8:	add	r0, r1, r0
   384ec:	str	r0, [r4, #20]
   384f0:	vpop	{d8}
   384f4:	pop	{r4, sl, fp, pc}

000384f8 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   384f8:	push	{r4, r5, r6, r7, fp, lr}
   384fc:	add	fp, sp, #16
   38500:	mov	r5, r1
   38504:	mov	r4, r0
   38508:	add	r7, fp, #8
   3850c:	ldrb	r6, [r2, r3]
   38510:	cmp	r5, #0
   38514:	ldm	r7, {r1, r2, r7}
   38518:	ldrne	r0, [r4, #20]
   3851c:	addne	r3, r0, #1
   38520:	strne	r3, [r4, #20]
   38524:	movne	r3, #44	; 0x2c
   38528:	strbne	r3, [r0]
   3852c:	mov	r0, r4
   38530:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38534:	ldrb	r0, [r4, #27]
   38538:	cmp	r0, #0
   3853c:	beq	3855c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   38540:	ldr	r1, [r4, #20]
   38544:	mov	r0, r6
   38548:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   3854c:	ldr	r1, [r4, #20]
   38550:	add	r0, r1, r0
   38554:	str	r0, [r4, #20]
   38558:	pop	{r4, r5, r6, r7, fp, pc}
   3855c:	mov	r0, r4
   38560:	mov	r1, r6
   38564:	mov	r2, r7
   38568:	pop	{r4, r5, r6, r7, fp, lr}
   3856c:	bx	r2

00038570 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   38570:	push	{r4, r5, r6, r7, fp, lr}
   38574:	add	fp, sp, #16
   38578:	mov	r5, r1
   3857c:	mov	r4, r0
   38580:	add	r0, r2, r3
   38584:	add	r7, fp, #8
   38588:	cmp	r5, #0
   3858c:	ldrh	r6, [r0]
   38590:	ldm	r7, {r1, r2, r7}
   38594:	ldrne	r0, [r4, #20]
   38598:	addne	r3, r0, #1
   3859c:	strne	r3, [r4, #20]
   385a0:	movne	r3, #44	; 0x2c
   385a4:	strbne	r3, [r0]
   385a8:	mov	r0, r4
   385ac:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   385b0:	ldrb	r0, [r4, #27]
   385b4:	cmp	r0, #0
   385b8:	beq	385d8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   385bc:	ldr	r1, [r4, #20]
   385c0:	mov	r0, r6
   385c4:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   385c8:	ldr	r1, [r4, #20]
   385cc:	add	r0, r1, r0
   385d0:	str	r0, [r4, #20]
   385d4:	pop	{r4, r5, r6, r7, fp, pc}
   385d8:	mov	r0, r4
   385dc:	mov	r1, r6
   385e0:	mov	r2, r7
   385e4:	pop	{r4, r5, r6, r7, fp, lr}
   385e8:	bx	r2

000385ec <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   385ec:	push	{r4, r5, r6, r7, fp, lr}
   385f0:	add	fp, sp, #16
   385f4:	mov	r5, r1
   385f8:	mov	r4, r0
   385fc:	add	r7, fp, #8
   38600:	ldr	r6, [r2, r3]
   38604:	cmp	r5, #0
   38608:	ldm	r7, {r1, r2, r7}
   3860c:	ldrne	r0, [r4, #20]
   38610:	addne	r3, r0, #1
   38614:	strne	r3, [r4, #20]
   38618:	movne	r3, #44	; 0x2c
   3861c:	strbne	r3, [r0]
   38620:	mov	r0, r4
   38624:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38628:	ldrb	r0, [r4, #27]
   3862c:	cmp	r0, #0
   38630:	beq	38650 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   38634:	ldr	r1, [r4, #20]
   38638:	mov	r0, r6
   3863c:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   38640:	ldr	r1, [r4, #20]
   38644:	add	r0, r1, r0
   38648:	str	r0, [r4, #20]
   3864c:	pop	{r4, r5, r6, r7, fp, pc}
   38650:	mov	r0, r4
   38654:	mov	r1, r6
   38658:	mov	r2, r7
   3865c:	pop	{r4, r5, r6, r7, fp, lr}
   38660:	bx	r2

00038664 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   38664:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38668:	add	fp, sp, #24
   3866c:	ldr	r6, [r2, r3]!
   38670:	mov	r5, r1
   38674:	mov	r4, r0
   38678:	add	r8, fp, #8
   3867c:	cmp	r5, #0
   38680:	ldr	r7, [r2, #4]
   38684:	ldm	r8, {r1, r2, r8}
   38688:	ldrne	r0, [r4, #20]
   3868c:	addne	r3, r0, #1
   38690:	strne	r3, [r4, #20]
   38694:	movne	r3, #44	; 0x2c
   38698:	strbne	r3, [r0]
   3869c:	mov	r0, r4
   386a0:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   386a4:	ldrb	r0, [r4, #27]
   386a8:	cmp	r0, #0
   386ac:	beq	386d0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   386b0:	ldr	r2, [r4, #20]
   386b4:	mov	r0, r6
   386b8:	mov	r1, r7
   386bc:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   386c0:	ldr	r1, [r4, #20]
   386c4:	add	r0, r1, r0
   386c8:	str	r0, [r4, #20]
   386cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   386d0:	mov	r0, r4
   386d4:	mov	r2, r6
   386d8:	mov	r3, r7
   386dc:	mov	r1, r8
   386e0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   386e4:	bx	r1

000386e8 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   386e8:	push	{r4, r5, r6, r7, fp, lr}
   386ec:	add	fp, sp, #16
   386f0:	mov	r5, r1
   386f4:	mov	r4, r0
   386f8:	add	r0, r2, r3
   386fc:	add	r7, fp, #8
   38700:	cmp	r5, #0
   38704:	ldrsb	r6, [r0]
   38708:	ldm	r7, {r1, r2, r7}
   3870c:	ldrne	r0, [r4, #20]
   38710:	addne	r3, r0, #1
   38714:	strne	r3, [r4, #20]
   38718:	movne	r3, #44	; 0x2c
   3871c:	strbne	r3, [r0]
   38720:	mov	r0, r4
   38724:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38728:	ldrb	r0, [r4, #27]
   3872c:	cmp	r0, #0
   38730:	beq	38768 <flatcc_json_printer_int8_enum_struct_field@@Base+0x80>
   38734:	ubfx	r5, r6, #7, #1
   38738:	ldr	r1, [r4, #20]
   3873c:	cmn	r6, #1
   38740:	movle	r0, #45	; 0x2d
   38744:	rsble	r6, r6, #0
   38748:	strble	r0, [r1], #1
   3874c:	uxtb	r0, r6
   38750:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   38754:	ldr	r1, [r4, #20]
   38758:	add	r0, r0, r5
   3875c:	add	r0, r1, r0
   38760:	str	r0, [r4, #20]
   38764:	pop	{r4, r5, r6, r7, fp, pc}
   38768:	mov	r0, r4
   3876c:	mov	r1, r6
   38770:	mov	r2, r7
   38774:	pop	{r4, r5, r6, r7, fp, lr}
   38778:	bx	r2

0003877c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3877c:	push	{r4, r5, r6, r7, fp, lr}
   38780:	add	fp, sp, #16
   38784:	mov	r5, r1
   38788:	mov	r4, r0
   3878c:	add	r0, r2, r3
   38790:	add	r7, fp, #8
   38794:	cmp	r5, #0
   38798:	ldrsh	r6, [r0]
   3879c:	ldm	r7, {r1, r2, r7}
   387a0:	ldrne	r0, [r4, #20]
   387a4:	addne	r3, r0, #1
   387a8:	strne	r3, [r4, #20]
   387ac:	movne	r3, #44	; 0x2c
   387b0:	strbne	r3, [r0]
   387b4:	mov	r0, r4
   387b8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   387bc:	ldrb	r0, [r4, #27]
   387c0:	cmp	r0, #0
   387c4:	beq	387fc <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   387c8:	ubfx	r5, r6, #15, #1
   387cc:	ldr	r1, [r4, #20]
   387d0:	cmn	r6, #1
   387d4:	movle	r0, #45	; 0x2d
   387d8:	rsble	r6, r6, #0
   387dc:	strble	r0, [r1], #1
   387e0:	uxth	r0, r6
   387e4:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   387e8:	ldr	r1, [r4, #20]
   387ec:	add	r0, r0, r5
   387f0:	add	r0, r1, r0
   387f4:	str	r0, [r4, #20]
   387f8:	pop	{r4, r5, r6, r7, fp, pc}
   387fc:	mov	r0, r4
   38800:	mov	r1, r6
   38804:	mov	r2, r7
   38808:	pop	{r4, r5, r6, r7, fp, lr}
   3880c:	bx	r2

00038810 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   38810:	push	{r4, r5, r6, r7, fp, lr}
   38814:	add	fp, sp, #16
   38818:	mov	r5, r1
   3881c:	mov	r4, r0
   38820:	add	r7, fp, #8
   38824:	ldr	r6, [r2, r3]
   38828:	cmp	r5, #0
   3882c:	ldm	r7, {r1, r2, r7}
   38830:	ldrne	r0, [r4, #20]
   38834:	addne	r3, r0, #1
   38838:	strne	r3, [r4, #20]
   3883c:	movne	r3, #44	; 0x2c
   38840:	strbne	r3, [r0]
   38844:	mov	r0, r4
   38848:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3884c:	ldrb	r0, [r4, #27]
   38850:	cmp	r0, #0
   38854:	beq	3888c <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   38858:	ldr	r1, [r4, #20]
   3885c:	cmn	r6, #1
   38860:	lsr	r5, r6, #31
   38864:	movle	r0, #45	; 0x2d
   38868:	rsble	r6, r6, #0
   3886c:	strble	r0, [r1], #1
   38870:	mov	r0, r6
   38874:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   38878:	ldr	r1, [r4, #20]
   3887c:	add	r0, r0, r5
   38880:	add	r0, r1, r0
   38884:	str	r0, [r4, #20]
   38888:	pop	{r4, r5, r6, r7, fp, pc}
   3888c:	mov	r0, r4
   38890:	mov	r1, r6
   38894:	mov	r2, r7
   38898:	pop	{r4, r5, r6, r7, fp, lr}
   3889c:	bx	r2

000388a0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   388a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   388a4:	add	fp, sp, #24
   388a8:	ldr	r7, [r2, r3]!
   388ac:	mov	r6, r1
   388b0:	mov	r4, r0
   388b4:	add	r8, fp, #8
   388b8:	cmp	r6, #0
   388bc:	ldr	r5, [r2, #4]
   388c0:	ldm	r8, {r1, r2, r8}
   388c4:	ldrne	r0, [r4, #20]
   388c8:	addne	r3, r0, #1
   388cc:	strne	r3, [r4, #20]
   388d0:	movne	r3, #44	; 0x2c
   388d4:	strbne	r3, [r0]
   388d8:	mov	r0, r4
   388dc:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   388e0:	ldrb	r0, [r4, #27]
   388e4:	cmp	r0, #0
   388e8:	beq	3892c <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   388ec:	ldr	r2, [r4, #20]
   388f0:	lsr	r6, r5, #31
   388f4:	cmn	r5, #1
   388f8:	bgt	3890c <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   388fc:	mov	r0, #45	; 0x2d
   38900:	rsbs	r7, r7, #0
   38904:	strb	r0, [r2], #1
   38908:	rsc	r5, r5, #0
   3890c:	mov	r0, r7
   38910:	mov	r1, r5
   38914:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   38918:	ldr	r1, [r4, #20]
   3891c:	add	r0, r0, r6
   38920:	add	r0, r1, r0
   38924:	str	r0, [r4, #20]
   38928:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3892c:	mov	r0, r4
   38930:	mov	r2, r7
   38934:	mov	r3, r5
   38938:	mov	r1, r8
   3893c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   38940:	bx	r1

00038944 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   38944:	push	{r4, r5, r6, r7, fp, lr}
   38948:	add	fp, sp, #16
   3894c:	mov	r5, r1
   38950:	mov	r4, r0
   38954:	add	r7, fp, #8
   38958:	ldrb	r6, [r2, r3]
   3895c:	cmp	r5, #0
   38960:	ldm	r7, {r1, r2, r7}
   38964:	ldrne	r0, [r4, #20]
   38968:	addne	r3, r0, #1
   3896c:	strne	r3, [r4, #20]
   38970:	movne	r3, #44	; 0x2c
   38974:	strbne	r3, [r0]
   38978:	mov	r0, r4
   3897c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38980:	ldrb	r0, [r4, #27]
   38984:	cmp	r0, #0
   38988:	beq	389b4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   3898c:	ldr	r0, [r4, #20]
   38990:	cmp	r6, #0
   38994:	beq	389c8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x84>
   38998:	mov	r1, #0
   3899c:	strb	r1, [r0, #4]
   389a0:	movw	r1, #29300	; 0x7274
   389a4:	movt	r1, #25973	; 0x6575
   389a8:	str	r1, [r0]
   389ac:	mov	r0, #4
   389b0:	b	389e0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x9c>
   389b4:	mov	r0, r4
   389b8:	mov	r1, r6
   389bc:	mov	r2, r7
   389c0:	pop	{r4, r5, r6, r7, fp, lr}
   389c4:	bx	r2
   389c8:	mov	r1, #101	; 0x65
   389cc:	strh	r1, [r0, #4]
   389d0:	movw	r1, #24934	; 0x6166
   389d4:	movt	r1, #29548	; 0x736c
   389d8:	str	r1, [r0]
   389dc:	mov	r0, #5
   389e0:	ldr	r1, [r4, #20]
   389e4:	add	r0, r1, r0
   389e8:	str	r0, [r4, #20]
   389ec:	pop	{r4, r5, r6, r7, fp, pc}

000389f0 <flatcc_json_printer_utype_vector_field@@Base>:
   389f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   389f4:	add	fp, sp, #28
   389f8:	sub	sp, sp, #4
   389fc:	mov	r4, r0
   38a00:	mov	r0, #4
   38a04:	add	r0, r0, r2, lsl #1
   38a08:	ldr	r2, [r1, #8]
   38a0c:	cmp	r0, r2
   38a10:	bge	38d94 <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   38a14:	ldr	r2, [r1, #4]
   38a18:	add	r0, r2, r0
   38a1c:	ldrh	r0, [r0]
   38a20:	cmp	r0, #0
   38a24:	ldrne	r2, [r1]
   38a28:	addsne	r8, r2, r0
   38a2c:	beq	38d94 <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   38a30:	ldr	r0, [r1, #16]
   38a34:	ldr	r2, [fp, #8]
   38a38:	add	r7, r0, #1
   38a3c:	cmp	r0, #0
   38a40:	str	r7, [r1, #16]
   38a44:	ldrne	r0, [r4, #20]
   38a48:	addne	r1, r0, #1
   38a4c:	strne	r1, [r4, #20]
   38a50:	movne	r1, #44	; 0x2c
   38a54:	strbne	r1, [r0]
   38a58:	mov	r1, r3
   38a5c:	ldr	r0, [r8]
   38a60:	ldr	r7, [r8, r0]!
   38a64:	mov	r0, r4
   38a68:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38a6c:	ldr	r1, [r4, #32]
   38a70:	ldr	r0, [r4, #20]
   38a74:	cmp	r7, #0
   38a78:	add	r1, r1, #1
   38a7c:	str	r1, [r4, #32]
   38a80:	add	r1, r0, #1
   38a84:	str	r1, [r4, #20]
   38a88:	mov	r1, #91	; 0x5b
   38a8c:	strb	r1, [r0]
   38a90:	beq	38cb8 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   38a94:	ldrb	r0, [r4, #25]
   38a98:	ldr	r1, [r4, #20]
   38a9c:	cmp	r0, #0
   38aa0:	beq	38b5c <flatcc_json_printer_utype_vector_field@@Base+0x16c>
   38aa4:	add	r0, r1, #1
   38aa8:	str	r0, [r4, #20]
   38aac:	mov	r0, #10
   38ab0:	strb	r0, [r1]
   38ab4:	ldr	r0, [r4, #20]
   38ab8:	ldrb	r2, [r4, #25]
   38abc:	ldr	r3, [r4, #32]
   38ac0:	ldr	r1, [r4, #16]
   38ac4:	mla	r6, r3, r2, r0
   38ac8:	mul	r5, r3, r2
   38acc:	cmp	r6, r1
   38ad0:	bls	38b40 <flatcc_json_printer_utype_vector_field@@Base+0x150>
   38ad4:	cmp	r0, r1
   38ad8:	bcc	38af4 <flatcc_json_printer_utype_vector_field@@Base+0x104>
   38adc:	ldr	r2, [r4, #44]	; 0x2c
   38ae0:	mov	r0, r4
   38ae4:	mov	r1, #0
   38ae8:	blx	r2
   38aec:	ldr	r1, [r4, #16]
   38af0:	ldr	r0, [r4, #20]
   38af4:	sub	r6, r1, r0
   38af8:	cmp	r6, r5
   38afc:	bcs	38b40 <flatcc_json_printer_utype_vector_field@@Base+0x150>
   38b00:	mov	r1, #32
   38b04:	mov	r2, r6
   38b08:	bl	14ef0 <memset@plt>
   38b0c:	ldr	r0, [r4, #20]
   38b10:	ldr	r2, [r4, #44]	; 0x2c
   38b14:	mov	r1, #0
   38b18:	add	r0, r0, r6
   38b1c:	str	r0, [r4, #20]
   38b20:	mov	r0, r4
   38b24:	blx	r2
   38b28:	ldr	r1, [r4, #16]
   38b2c:	ldr	r0, [r4, #20]
   38b30:	sub	r5, r5, r6
   38b34:	sub	r6, r1, r0
   38b38:	cmp	r5, r6
   38b3c:	bhi	38b00 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   38b40:	mov	r1, #32
   38b44:	mov	r2, r5
   38b48:	bl	14ef0 <memset@plt>
   38b4c:	ldr	r0, [r4, #20]
   38b50:	add	r1, r0, r5
   38b54:	str	r1, [r4, #20]
   38b58:	b	38b7c <flatcc_json_printer_utype_vector_field@@Base+0x18c>
   38b5c:	ldr	r0, [r4, #16]
   38b60:	cmp	r1, r0
   38b64:	bcc	38b7c <flatcc_json_printer_utype_vector_field@@Base+0x18c>
   38b68:	ldr	r2, [r4, #44]	; 0x2c
   38b6c:	mov	r0, r4
   38b70:	mov	r1, #0
   38b74:	blx	r2
   38b78:	ldr	r1, [r4, #20]
   38b7c:	ldrb	r0, [r8, #4]
   38b80:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   38b84:	ldr	r1, [r4, #20]
   38b88:	subs	r9, r7, #1
   38b8c:	add	r0, r1, r0
   38b90:	str	r0, [r4, #20]
   38b94:	beq	38cb8 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   38b98:	ldr	r0, [r4, #20]
   38b9c:	add	r7, r8, #5
   38ba0:	mov	r8, #44	; 0x2c
   38ba4:	mov	sl, #10
   38ba8:	add	r1, r0, #1
   38bac:	sub	r9, r9, #1
   38bb0:	str	r1, [r4, #20]
   38bb4:	strb	r8, [r0]
   38bb8:	ldrb	r0, [r4, #25]
   38bbc:	ldr	r1, [r4, #20]
   38bc0:	cmp	r0, #0
   38bc4:	beq	38c7c <flatcc_json_printer_utype_vector_field@@Base+0x28c>
   38bc8:	add	r0, r1, #1
   38bcc:	str	r0, [r4, #20]
   38bd0:	strb	sl, [r1]
   38bd4:	ldr	r0, [r4, #20]
   38bd8:	ldrb	r2, [r4, #25]
   38bdc:	ldr	r3, [r4, #32]
   38be0:	ldr	r1, [r4, #16]
   38be4:	mla	r6, r3, r2, r0
   38be8:	mul	r5, r3, r2
   38bec:	cmp	r6, r1
   38bf0:	bls	38c60 <flatcc_json_printer_utype_vector_field@@Base+0x270>
   38bf4:	cmp	r0, r1
   38bf8:	bcc	38c14 <flatcc_json_printer_utype_vector_field@@Base+0x224>
   38bfc:	ldr	r2, [r4, #44]	; 0x2c
   38c00:	mov	r0, r4
   38c04:	mov	r1, #0
   38c08:	blx	r2
   38c0c:	ldr	r1, [r4, #16]
   38c10:	ldr	r0, [r4, #20]
   38c14:	sub	r6, r1, r0
   38c18:	cmp	r6, r5
   38c1c:	bcs	38c60 <flatcc_json_printer_utype_vector_field@@Base+0x270>
   38c20:	mov	r1, #32
   38c24:	mov	r2, r6
   38c28:	bl	14ef0 <memset@plt>
   38c2c:	ldr	r0, [r4, #20]
   38c30:	ldr	r2, [r4, #44]	; 0x2c
   38c34:	mov	r1, #0
   38c38:	add	r0, r0, r6
   38c3c:	str	r0, [r4, #20]
   38c40:	mov	r0, r4
   38c44:	blx	r2
   38c48:	ldr	r1, [r4, #16]
   38c4c:	ldr	r0, [r4, #20]
   38c50:	sub	r5, r5, r6
   38c54:	sub	r6, r1, r0
   38c58:	cmp	r5, r6
   38c5c:	bhi	38c20 <flatcc_json_printer_utype_vector_field@@Base+0x230>
   38c60:	mov	r1, #32
   38c64:	mov	r2, r5
   38c68:	bl	14ef0 <memset@plt>
   38c6c:	ldr	r0, [r4, #20]
   38c70:	add	r1, r0, r5
   38c74:	str	r1, [r4, #20]
   38c78:	b	38c9c <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   38c7c:	ldr	r0, [r4, #16]
   38c80:	cmp	r1, r0
   38c84:	bcc	38c9c <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   38c88:	ldr	r2, [r4, #44]	; 0x2c
   38c8c:	mov	r0, r4
   38c90:	mov	r1, #0
   38c94:	blx	r2
   38c98:	ldr	r1, [r4, #20]
   38c9c:	ldrb	r0, [r7], #1
   38ca0:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   38ca4:	ldr	r1, [r4, #20]
   38ca8:	cmp	r9, #0
   38cac:	add	r0, r1, r0
   38cb0:	str	r0, [r4, #20]
   38cb4:	bne	38ba8 <flatcc_json_printer_utype_vector_field@@Base+0x1b8>
   38cb8:	ldrb	r1, [r4, #25]
   38cbc:	ldr	r0, [r4, #20]
   38cc0:	cmp	r1, #0
   38cc4:	beq	38d84 <flatcc_json_printer_utype_vector_field@@Base+0x394>
   38cc8:	add	r1, r0, #1
   38ccc:	str	r1, [r4, #20]
   38cd0:	mov	r1, #10
   38cd4:	strb	r1, [r0]
   38cd8:	ldr	r0, [r4, #32]
   38cdc:	sub	r2, r0, #1
   38ce0:	str	r2, [r4, #32]
   38ce4:	ldrb	r3, [r4, #25]
   38ce8:	ldr	r0, [r4, #20]
   38cec:	ldr	r1, [r4, #16]
   38cf0:	mla	r7, r2, r3, r0
   38cf4:	mul	r5, r2, r3
   38cf8:	cmp	r7, r1
   38cfc:	bls	38d6c <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   38d00:	cmp	r0, r1
   38d04:	bcc	38d20 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   38d08:	ldr	r2, [r4, #44]	; 0x2c
   38d0c:	mov	r0, r4
   38d10:	mov	r1, #0
   38d14:	blx	r2
   38d18:	ldr	r1, [r4, #16]
   38d1c:	ldr	r0, [r4, #20]
   38d20:	sub	r6, r1, r0
   38d24:	cmp	r6, r5
   38d28:	bcs	38d6c <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   38d2c:	mov	r1, #32
   38d30:	mov	r2, r6
   38d34:	bl	14ef0 <memset@plt>
   38d38:	ldr	r0, [r4, #20]
   38d3c:	ldr	r2, [r4, #44]	; 0x2c
   38d40:	mov	r1, #0
   38d44:	add	r0, r0, r6
   38d48:	str	r0, [r4, #20]
   38d4c:	mov	r0, r4
   38d50:	blx	r2
   38d54:	ldr	r1, [r4, #16]
   38d58:	ldr	r0, [r4, #20]
   38d5c:	sub	r5, r5, r6
   38d60:	sub	r6, r1, r0
   38d64:	cmp	r5, r6
   38d68:	bhi	38d2c <flatcc_json_printer_utype_vector_field@@Base+0x33c>
   38d6c:	mov	r1, #32
   38d70:	mov	r2, r5
   38d74:	bl	14ef0 <memset@plt>
   38d78:	ldr	r0, [r4, #20]
   38d7c:	add	r0, r0, r5
   38d80:	str	r0, [r4, #20]
   38d84:	add	r1, r0, #1
   38d88:	str	r1, [r4, #20]
   38d8c:	mov	r1, #93	; 0x5d
   38d90:	strb	r1, [r0]
   38d94:	sub	sp, fp, #28
   38d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00038d9c <flatcc_json_printer_uint8_vector_field@@Base>:
   38d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38da0:	add	fp, sp, #28
   38da4:	sub	sp, sp, #4
   38da8:	mov	r4, r0
   38dac:	mov	r0, #4
   38db0:	add	r0, r0, r2, lsl #1
   38db4:	ldr	r2, [r1, #8]
   38db8:	cmp	r0, r2
   38dbc:	bge	39140 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   38dc0:	ldr	r2, [r1, #4]
   38dc4:	add	r0, r2, r0
   38dc8:	ldrh	r0, [r0]
   38dcc:	cmp	r0, #0
   38dd0:	ldrne	r2, [r1]
   38dd4:	addsne	r8, r2, r0
   38dd8:	beq	39140 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   38ddc:	ldr	r0, [r1, #16]
   38de0:	ldr	r2, [fp, #8]
   38de4:	add	r7, r0, #1
   38de8:	cmp	r0, #0
   38dec:	str	r7, [r1, #16]
   38df0:	ldrne	r0, [r4, #20]
   38df4:	addne	r1, r0, #1
   38df8:	strne	r1, [r4, #20]
   38dfc:	movne	r1, #44	; 0x2c
   38e00:	strbne	r1, [r0]
   38e04:	mov	r1, r3
   38e08:	ldr	r0, [r8]
   38e0c:	ldr	r7, [r8, r0]!
   38e10:	mov	r0, r4
   38e14:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   38e18:	ldr	r1, [r4, #32]
   38e1c:	ldr	r0, [r4, #20]
   38e20:	cmp	r7, #0
   38e24:	add	r1, r1, #1
   38e28:	str	r1, [r4, #32]
   38e2c:	add	r1, r0, #1
   38e30:	str	r1, [r4, #20]
   38e34:	mov	r1, #91	; 0x5b
   38e38:	strb	r1, [r0]
   38e3c:	beq	39064 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   38e40:	ldrb	r0, [r4, #25]
   38e44:	ldr	r1, [r4, #20]
   38e48:	cmp	r0, #0
   38e4c:	beq	38f08 <flatcc_json_printer_uint8_vector_field@@Base+0x16c>
   38e50:	add	r0, r1, #1
   38e54:	str	r0, [r4, #20]
   38e58:	mov	r0, #10
   38e5c:	strb	r0, [r1]
   38e60:	ldr	r0, [r4, #20]
   38e64:	ldrb	r2, [r4, #25]
   38e68:	ldr	r3, [r4, #32]
   38e6c:	ldr	r1, [r4, #16]
   38e70:	mla	r6, r3, r2, r0
   38e74:	mul	r5, r3, r2
   38e78:	cmp	r6, r1
   38e7c:	bls	38eec <flatcc_json_printer_uint8_vector_field@@Base+0x150>
   38e80:	cmp	r0, r1
   38e84:	bcc	38ea0 <flatcc_json_printer_uint8_vector_field@@Base+0x104>
   38e88:	ldr	r2, [r4, #44]	; 0x2c
   38e8c:	mov	r0, r4
   38e90:	mov	r1, #0
   38e94:	blx	r2
   38e98:	ldr	r1, [r4, #16]
   38e9c:	ldr	r0, [r4, #20]
   38ea0:	sub	r6, r1, r0
   38ea4:	cmp	r6, r5
   38ea8:	bcs	38eec <flatcc_json_printer_uint8_vector_field@@Base+0x150>
   38eac:	mov	r1, #32
   38eb0:	mov	r2, r6
   38eb4:	bl	14ef0 <memset@plt>
   38eb8:	ldr	r0, [r4, #20]
   38ebc:	ldr	r2, [r4, #44]	; 0x2c
   38ec0:	mov	r1, #0
   38ec4:	add	r0, r0, r6
   38ec8:	str	r0, [r4, #20]
   38ecc:	mov	r0, r4
   38ed0:	blx	r2
   38ed4:	ldr	r1, [r4, #16]
   38ed8:	ldr	r0, [r4, #20]
   38edc:	sub	r5, r5, r6
   38ee0:	sub	r6, r1, r0
   38ee4:	cmp	r5, r6
   38ee8:	bhi	38eac <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   38eec:	mov	r1, #32
   38ef0:	mov	r2, r5
   38ef4:	bl	14ef0 <memset@plt>
   38ef8:	ldr	r0, [r4, #20]
   38efc:	add	r1, r0, r5
   38f00:	str	r1, [r4, #20]
   38f04:	b	38f28 <flatcc_json_printer_uint8_vector_field@@Base+0x18c>
   38f08:	ldr	r0, [r4, #16]
   38f0c:	cmp	r1, r0
   38f10:	bcc	38f28 <flatcc_json_printer_uint8_vector_field@@Base+0x18c>
   38f14:	ldr	r2, [r4, #44]	; 0x2c
   38f18:	mov	r0, r4
   38f1c:	mov	r1, #0
   38f20:	blx	r2
   38f24:	ldr	r1, [r4, #20]
   38f28:	ldrb	r0, [r8, #4]
   38f2c:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   38f30:	ldr	r1, [r4, #20]
   38f34:	subs	r9, r7, #1
   38f38:	add	r0, r1, r0
   38f3c:	str	r0, [r4, #20]
   38f40:	beq	39064 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   38f44:	ldr	r0, [r4, #20]
   38f48:	add	r7, r8, #5
   38f4c:	mov	r8, #44	; 0x2c
   38f50:	mov	sl, #10
   38f54:	add	r1, r0, #1
   38f58:	sub	r9, r9, #1
   38f5c:	str	r1, [r4, #20]
   38f60:	strb	r8, [r0]
   38f64:	ldrb	r0, [r4, #25]
   38f68:	ldr	r1, [r4, #20]
   38f6c:	cmp	r0, #0
   38f70:	beq	39028 <flatcc_json_printer_uint8_vector_field@@Base+0x28c>
   38f74:	add	r0, r1, #1
   38f78:	str	r0, [r4, #20]
   38f7c:	strb	sl, [r1]
   38f80:	ldr	r0, [r4, #20]
   38f84:	ldrb	r2, [r4, #25]
   38f88:	ldr	r3, [r4, #32]
   38f8c:	ldr	r1, [r4, #16]
   38f90:	mla	r6, r3, r2, r0
   38f94:	mul	r5, r3, r2
   38f98:	cmp	r6, r1
   38f9c:	bls	3900c <flatcc_json_printer_uint8_vector_field@@Base+0x270>
   38fa0:	cmp	r0, r1
   38fa4:	bcc	38fc0 <flatcc_json_printer_uint8_vector_field@@Base+0x224>
   38fa8:	ldr	r2, [r4, #44]	; 0x2c
   38fac:	mov	r0, r4
   38fb0:	mov	r1, #0
   38fb4:	blx	r2
   38fb8:	ldr	r1, [r4, #16]
   38fbc:	ldr	r0, [r4, #20]
   38fc0:	sub	r6, r1, r0
   38fc4:	cmp	r6, r5
   38fc8:	bcs	3900c <flatcc_json_printer_uint8_vector_field@@Base+0x270>
   38fcc:	mov	r1, #32
   38fd0:	mov	r2, r6
   38fd4:	bl	14ef0 <memset@plt>
   38fd8:	ldr	r0, [r4, #20]
   38fdc:	ldr	r2, [r4, #44]	; 0x2c
   38fe0:	mov	r1, #0
   38fe4:	add	r0, r0, r6
   38fe8:	str	r0, [r4, #20]
   38fec:	mov	r0, r4
   38ff0:	blx	r2
   38ff4:	ldr	r1, [r4, #16]
   38ff8:	ldr	r0, [r4, #20]
   38ffc:	sub	r5, r5, r6
   39000:	sub	r6, r1, r0
   39004:	cmp	r5, r6
   39008:	bhi	38fcc <flatcc_json_printer_uint8_vector_field@@Base+0x230>
   3900c:	mov	r1, #32
   39010:	mov	r2, r5
   39014:	bl	14ef0 <memset@plt>
   39018:	ldr	r0, [r4, #20]
   3901c:	add	r1, r0, r5
   39020:	str	r1, [r4, #20]
   39024:	b	39048 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   39028:	ldr	r0, [r4, #16]
   3902c:	cmp	r1, r0
   39030:	bcc	39048 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   39034:	ldr	r2, [r4, #44]	; 0x2c
   39038:	mov	r0, r4
   3903c:	mov	r1, #0
   39040:	blx	r2
   39044:	ldr	r1, [r4, #20]
   39048:	ldrb	r0, [r7], #1
   3904c:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   39050:	ldr	r1, [r4, #20]
   39054:	cmp	r9, #0
   39058:	add	r0, r1, r0
   3905c:	str	r0, [r4, #20]
   39060:	bne	38f54 <flatcc_json_printer_uint8_vector_field@@Base+0x1b8>
   39064:	ldrb	r1, [r4, #25]
   39068:	ldr	r0, [r4, #20]
   3906c:	cmp	r1, #0
   39070:	beq	39130 <flatcc_json_printer_uint8_vector_field@@Base+0x394>
   39074:	add	r1, r0, #1
   39078:	str	r1, [r4, #20]
   3907c:	mov	r1, #10
   39080:	strb	r1, [r0]
   39084:	ldr	r0, [r4, #32]
   39088:	sub	r2, r0, #1
   3908c:	str	r2, [r4, #32]
   39090:	ldrb	r3, [r4, #25]
   39094:	ldr	r0, [r4, #20]
   39098:	ldr	r1, [r4, #16]
   3909c:	mla	r7, r2, r3, r0
   390a0:	mul	r5, r2, r3
   390a4:	cmp	r7, r1
   390a8:	bls	39118 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   390ac:	cmp	r0, r1
   390b0:	bcc	390cc <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   390b4:	ldr	r2, [r4, #44]	; 0x2c
   390b8:	mov	r0, r4
   390bc:	mov	r1, #0
   390c0:	blx	r2
   390c4:	ldr	r1, [r4, #16]
   390c8:	ldr	r0, [r4, #20]
   390cc:	sub	r6, r1, r0
   390d0:	cmp	r6, r5
   390d4:	bcs	39118 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   390d8:	mov	r1, #32
   390dc:	mov	r2, r6
   390e0:	bl	14ef0 <memset@plt>
   390e4:	ldr	r0, [r4, #20]
   390e8:	ldr	r2, [r4, #44]	; 0x2c
   390ec:	mov	r1, #0
   390f0:	add	r0, r0, r6
   390f4:	str	r0, [r4, #20]
   390f8:	mov	r0, r4
   390fc:	blx	r2
   39100:	ldr	r1, [r4, #16]
   39104:	ldr	r0, [r4, #20]
   39108:	sub	r5, r5, r6
   3910c:	sub	r6, r1, r0
   39110:	cmp	r5, r6
   39114:	bhi	390d8 <flatcc_json_printer_uint8_vector_field@@Base+0x33c>
   39118:	mov	r1, #32
   3911c:	mov	r2, r5
   39120:	bl	14ef0 <memset@plt>
   39124:	ldr	r0, [r4, #20]
   39128:	add	r0, r0, r5
   3912c:	str	r0, [r4, #20]
   39130:	add	r1, r0, #1
   39134:	str	r1, [r4, #20]
   39138:	mov	r1, #93	; 0x5d
   3913c:	strb	r1, [r0]
   39140:	sub	sp, fp, #28
   39144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039148 <flatcc_json_printer_uint16_vector_field@@Base>:
   39148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3914c:	add	fp, sp, #28
   39150:	sub	sp, sp, #4
   39154:	mov	r4, r0
   39158:	mov	r0, #4
   3915c:	add	r0, r0, r2, lsl #1
   39160:	ldr	r2, [r1, #8]
   39164:	cmp	r0, r2
   39168:	bge	394ec <flatcc_json_printer_uint16_vector_field@@Base+0x3a4>
   3916c:	ldr	r2, [r1, #4]
   39170:	add	r0, r2, r0
   39174:	ldrh	r0, [r0]
   39178:	cmp	r0, #0
   3917c:	ldrne	r2, [r1]
   39180:	addsne	r8, r2, r0
   39184:	beq	394ec <flatcc_json_printer_uint16_vector_field@@Base+0x3a4>
   39188:	ldr	r0, [r1, #16]
   3918c:	ldr	r2, [fp, #8]
   39190:	add	r7, r0, #1
   39194:	cmp	r0, #0
   39198:	str	r7, [r1, #16]
   3919c:	ldrne	r0, [r4, #20]
   391a0:	addne	r1, r0, #1
   391a4:	strne	r1, [r4, #20]
   391a8:	movne	r1, #44	; 0x2c
   391ac:	strbne	r1, [r0]
   391b0:	mov	r1, r3
   391b4:	ldr	r0, [r8]
   391b8:	ldr	r7, [r8, r0]!
   391bc:	mov	r0, r4
   391c0:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   391c4:	ldr	r1, [r4, #32]
   391c8:	ldr	r0, [r4, #20]
   391cc:	cmp	r7, #0
   391d0:	add	r1, r1, #1
   391d4:	str	r1, [r4, #32]
   391d8:	add	r1, r0, #1
   391dc:	str	r1, [r4, #20]
   391e0:	mov	r1, #91	; 0x5b
   391e4:	strb	r1, [r0]
   391e8:	beq	39410 <flatcc_json_printer_uint16_vector_field@@Base+0x2c8>
   391ec:	ldrb	r0, [r4, #25]
   391f0:	ldr	r1, [r4, #20]
   391f4:	cmp	r0, #0
   391f8:	beq	392b4 <flatcc_json_printer_uint16_vector_field@@Base+0x16c>
   391fc:	add	r0, r1, #1
   39200:	str	r0, [r4, #20]
   39204:	mov	r0, #10
   39208:	strb	r0, [r1]
   3920c:	ldr	r0, [r4, #20]
   39210:	ldrb	r2, [r4, #25]
   39214:	ldr	r3, [r4, #32]
   39218:	ldr	r1, [r4, #16]
   3921c:	mla	r6, r3, r2, r0
   39220:	mul	r5, r3, r2
   39224:	cmp	r6, r1
   39228:	bls	39298 <flatcc_json_printer_uint16_vector_field@@Base+0x150>
   3922c:	cmp	r0, r1
   39230:	bcc	3924c <flatcc_json_printer_uint16_vector_field@@Base+0x104>
   39234:	ldr	r2, [r4, #44]	; 0x2c
   39238:	mov	r0, r4
   3923c:	mov	r1, #0
   39240:	blx	r2
   39244:	ldr	r1, [r4, #16]
   39248:	ldr	r0, [r4, #20]
   3924c:	sub	r6, r1, r0
   39250:	cmp	r6, r5
   39254:	bcs	39298 <flatcc_json_printer_uint16_vector_field@@Base+0x150>
   39258:	mov	r1, #32
   3925c:	mov	r2, r6
   39260:	bl	14ef0 <memset@plt>
   39264:	ldr	r0, [r4, #20]
   39268:	ldr	r2, [r4, #44]	; 0x2c
   3926c:	mov	r1, #0
   39270:	add	r0, r0, r6
   39274:	str	r0, [r4, #20]
   39278:	mov	r0, r4
   3927c:	blx	r2
   39280:	ldr	r1, [r4, #16]
   39284:	ldr	r0, [r4, #20]
   39288:	sub	r5, r5, r6
   3928c:	sub	r6, r1, r0
   39290:	cmp	r5, r6
   39294:	bhi	39258 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   39298:	mov	r1, #32
   3929c:	mov	r2, r5
   392a0:	bl	14ef0 <memset@plt>
   392a4:	ldr	r0, [r4, #20]
   392a8:	add	r1, r0, r5
   392ac:	str	r1, [r4, #20]
   392b0:	b	392d4 <flatcc_json_printer_uint16_vector_field@@Base+0x18c>
   392b4:	ldr	r0, [r4, #16]
   392b8:	cmp	r1, r0
   392bc:	bcc	392d4 <flatcc_json_printer_uint16_vector_field@@Base+0x18c>
   392c0:	ldr	r2, [r4, #44]	; 0x2c
   392c4:	mov	r0, r4
   392c8:	mov	r1, #0
   392cc:	blx	r2
   392d0:	ldr	r1, [r4, #20]
   392d4:	ldrh	r0, [r8, #4]
   392d8:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   392dc:	ldr	r1, [r4, #20]
   392e0:	subs	r9, r7, #1
   392e4:	add	r0, r1, r0
   392e8:	str	r0, [r4, #20]
   392ec:	beq	39410 <flatcc_json_printer_uint16_vector_field@@Base+0x2c8>
   392f0:	ldr	r0, [r4, #20]
   392f4:	add	r7, r8, #6
   392f8:	mov	r8, #44	; 0x2c
   392fc:	mov	sl, #10
   39300:	add	r1, r0, #1
   39304:	sub	r9, r9, #1
   39308:	str	r1, [r4, #20]
   3930c:	strb	r8, [r0]
   39310:	ldrb	r0, [r4, #25]
   39314:	ldr	r1, [r4, #20]
   39318:	cmp	r0, #0
   3931c:	beq	393d4 <flatcc_json_printer_uint16_vector_field@@Base+0x28c>
   39320:	add	r0, r1, #1
   39324:	str	r0, [r4, #20]
   39328:	strb	sl, [r1]
   3932c:	ldr	r0, [r4, #20]
   39330:	ldrb	r2, [r4, #25]
   39334:	ldr	r3, [r4, #32]
   39338:	ldr	r1, [r4, #16]
   3933c:	mla	r6, r3, r2, r0
   39340:	mul	r5, r3, r2
   39344:	cmp	r6, r1
   39348:	bls	393b8 <flatcc_json_printer_uint16_vector_field@@Base+0x270>
   3934c:	cmp	r0, r1
   39350:	bcc	3936c <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   39354:	ldr	r2, [r4, #44]	; 0x2c
   39358:	mov	r0, r4
   3935c:	mov	r1, #0
   39360:	blx	r2
   39364:	ldr	r1, [r4, #16]
   39368:	ldr	r0, [r4, #20]
   3936c:	sub	r6, r1, r0
   39370:	cmp	r6, r5
   39374:	bcs	393b8 <flatcc_json_printer_uint16_vector_field@@Base+0x270>
   39378:	mov	r1, #32
   3937c:	mov	r2, r6
   39380:	bl	14ef0 <memset@plt>
   39384:	ldr	r0, [r4, #20]
   39388:	ldr	r2, [r4, #44]	; 0x2c
   3938c:	mov	r1, #0
   39390:	add	r0, r0, r6
   39394:	str	r0, [r4, #20]
   39398:	mov	r0, r4
   3939c:	blx	r2
   393a0:	ldr	r1, [r4, #16]
   393a4:	ldr	r0, [r4, #20]
   393a8:	sub	r5, r5, r6
   393ac:	sub	r6, r1, r0
   393b0:	cmp	r5, r6
   393b4:	bhi	39378 <flatcc_json_printer_uint16_vector_field@@Base+0x230>
   393b8:	mov	r1, #32
   393bc:	mov	r2, r5
   393c0:	bl	14ef0 <memset@plt>
   393c4:	ldr	r0, [r4, #20]
   393c8:	add	r1, r0, r5
   393cc:	str	r1, [r4, #20]
   393d0:	b	393f4 <flatcc_json_printer_uint16_vector_field@@Base+0x2ac>
   393d4:	ldr	r0, [r4, #16]
   393d8:	cmp	r1, r0
   393dc:	bcc	393f4 <flatcc_json_printer_uint16_vector_field@@Base+0x2ac>
   393e0:	ldr	r2, [r4, #44]	; 0x2c
   393e4:	mov	r0, r4
   393e8:	mov	r1, #0
   393ec:	blx	r2
   393f0:	ldr	r1, [r4, #20]
   393f4:	ldrh	r0, [r7], #2
   393f8:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   393fc:	ldr	r1, [r4, #20]
   39400:	cmp	r9, #0
   39404:	add	r0, r1, r0
   39408:	str	r0, [r4, #20]
   3940c:	bne	39300 <flatcc_json_printer_uint16_vector_field@@Base+0x1b8>
   39410:	ldrb	r1, [r4, #25]
   39414:	ldr	r0, [r4, #20]
   39418:	cmp	r1, #0
   3941c:	beq	394dc <flatcc_json_printer_uint16_vector_field@@Base+0x394>
   39420:	add	r1, r0, #1
   39424:	str	r1, [r4, #20]
   39428:	mov	r1, #10
   3942c:	strb	r1, [r0]
   39430:	ldr	r0, [r4, #32]
   39434:	sub	r2, r0, #1
   39438:	str	r2, [r4, #32]
   3943c:	ldrb	r3, [r4, #25]
   39440:	ldr	r0, [r4, #20]
   39444:	ldr	r1, [r4, #16]
   39448:	mla	r7, r2, r3, r0
   3944c:	mul	r5, r2, r3
   39450:	cmp	r7, r1
   39454:	bls	394c4 <flatcc_json_printer_uint16_vector_field@@Base+0x37c>
   39458:	cmp	r0, r1
   3945c:	bcc	39478 <flatcc_json_printer_uint16_vector_field@@Base+0x330>
   39460:	ldr	r2, [r4, #44]	; 0x2c
   39464:	mov	r0, r4
   39468:	mov	r1, #0
   3946c:	blx	r2
   39470:	ldr	r1, [r4, #16]
   39474:	ldr	r0, [r4, #20]
   39478:	sub	r6, r1, r0
   3947c:	cmp	r6, r5
   39480:	bcs	394c4 <flatcc_json_printer_uint16_vector_field@@Base+0x37c>
   39484:	mov	r1, #32
   39488:	mov	r2, r6
   3948c:	bl	14ef0 <memset@plt>
   39490:	ldr	r0, [r4, #20]
   39494:	ldr	r2, [r4, #44]	; 0x2c
   39498:	mov	r1, #0
   3949c:	add	r0, r0, r6
   394a0:	str	r0, [r4, #20]
   394a4:	mov	r0, r4
   394a8:	blx	r2
   394ac:	ldr	r1, [r4, #16]
   394b0:	ldr	r0, [r4, #20]
   394b4:	sub	r5, r5, r6
   394b8:	sub	r6, r1, r0
   394bc:	cmp	r5, r6
   394c0:	bhi	39484 <flatcc_json_printer_uint16_vector_field@@Base+0x33c>
   394c4:	mov	r1, #32
   394c8:	mov	r2, r5
   394cc:	bl	14ef0 <memset@plt>
   394d0:	ldr	r0, [r4, #20]
   394d4:	add	r0, r0, r5
   394d8:	str	r0, [r4, #20]
   394dc:	add	r1, r0, #1
   394e0:	str	r1, [r4, #20]
   394e4:	mov	r1, #93	; 0x5d
   394e8:	strb	r1, [r0]
   394ec:	sub	sp, fp, #28
   394f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000394f4 <flatcc_json_printer_uint32_vector_field@@Base>:
   394f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   394f8:	add	fp, sp, #28
   394fc:	sub	sp, sp, #4
   39500:	mov	r4, r0
   39504:	mov	r0, #4
   39508:	add	r0, r0, r2, lsl #1
   3950c:	ldr	r2, [r1, #8]
   39510:	cmp	r0, r2
   39514:	bge	39898 <flatcc_json_printer_uint32_vector_field@@Base+0x3a4>
   39518:	ldr	r2, [r1, #4]
   3951c:	add	r0, r2, r0
   39520:	ldrh	r0, [r0]
   39524:	cmp	r0, #0
   39528:	ldrne	r2, [r1]
   3952c:	addsne	r8, r2, r0
   39530:	beq	39898 <flatcc_json_printer_uint32_vector_field@@Base+0x3a4>
   39534:	ldr	r0, [r1, #16]
   39538:	ldr	r2, [fp, #8]
   3953c:	add	r7, r0, #1
   39540:	cmp	r0, #0
   39544:	str	r7, [r1, #16]
   39548:	ldrne	r0, [r4, #20]
   3954c:	addne	r1, r0, #1
   39550:	strne	r1, [r4, #20]
   39554:	movne	r1, #44	; 0x2c
   39558:	strbne	r1, [r0]
   3955c:	mov	r1, r3
   39560:	ldr	r0, [r8]
   39564:	ldr	r7, [r8, r0]!
   39568:	mov	r0, r4
   3956c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   39570:	ldr	r1, [r4, #32]
   39574:	ldr	r0, [r4, #20]
   39578:	cmp	r7, #0
   3957c:	add	r1, r1, #1
   39580:	str	r1, [r4, #32]
   39584:	add	r1, r0, #1
   39588:	str	r1, [r4, #20]
   3958c:	mov	r1, #91	; 0x5b
   39590:	strb	r1, [r0]
   39594:	beq	397bc <flatcc_json_printer_uint32_vector_field@@Base+0x2c8>
   39598:	ldrb	r0, [r4, #25]
   3959c:	ldr	r1, [r4, #20]
   395a0:	cmp	r0, #0
   395a4:	beq	39660 <flatcc_json_printer_uint32_vector_field@@Base+0x16c>
   395a8:	add	r0, r1, #1
   395ac:	str	r0, [r4, #20]
   395b0:	mov	r0, #10
   395b4:	strb	r0, [r1]
   395b8:	ldr	r0, [r4, #20]
   395bc:	ldrb	r2, [r4, #25]
   395c0:	ldr	r3, [r4, #32]
   395c4:	ldr	r1, [r4, #16]
   395c8:	mla	r6, r3, r2, r0
   395cc:	mul	r5, r3, r2
   395d0:	cmp	r6, r1
   395d4:	bls	39644 <flatcc_json_printer_uint32_vector_field@@Base+0x150>
   395d8:	cmp	r0, r1
   395dc:	bcc	395f8 <flatcc_json_printer_uint32_vector_field@@Base+0x104>
   395e0:	ldr	r2, [r4, #44]	; 0x2c
   395e4:	mov	r0, r4
   395e8:	mov	r1, #0
   395ec:	blx	r2
   395f0:	ldr	r1, [r4, #16]
   395f4:	ldr	r0, [r4, #20]
   395f8:	sub	r6, r1, r0
   395fc:	cmp	r6, r5
   39600:	bcs	39644 <flatcc_json_printer_uint32_vector_field@@Base+0x150>
   39604:	mov	r1, #32
   39608:	mov	r2, r6
   3960c:	bl	14ef0 <memset@plt>
   39610:	ldr	r0, [r4, #20]
   39614:	ldr	r2, [r4, #44]	; 0x2c
   39618:	mov	r1, #0
   3961c:	add	r0, r0, r6
   39620:	str	r0, [r4, #20]
   39624:	mov	r0, r4
   39628:	blx	r2
   3962c:	ldr	r1, [r4, #16]
   39630:	ldr	r0, [r4, #20]
   39634:	sub	r5, r5, r6
   39638:	sub	r6, r1, r0
   3963c:	cmp	r5, r6
   39640:	bhi	39604 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   39644:	mov	r1, #32
   39648:	mov	r2, r5
   3964c:	bl	14ef0 <memset@plt>
   39650:	ldr	r0, [r4, #20]
   39654:	add	r1, r0, r5
   39658:	str	r1, [r4, #20]
   3965c:	b	39680 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   39660:	ldr	r0, [r4, #16]
   39664:	cmp	r1, r0
   39668:	bcc	39680 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   3966c:	ldr	r2, [r4, #44]	; 0x2c
   39670:	mov	r0, r4
   39674:	mov	r1, #0
   39678:	blx	r2
   3967c:	ldr	r1, [r4, #20]
   39680:	ldr	r0, [r8, #4]
   39684:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   39688:	ldr	r1, [r4, #20]
   3968c:	subs	r9, r7, #1
   39690:	add	r0, r1, r0
   39694:	str	r0, [r4, #20]
   39698:	beq	397bc <flatcc_json_printer_uint32_vector_field@@Base+0x2c8>
   3969c:	ldr	r0, [r4, #20]
   396a0:	add	r7, r8, #8
   396a4:	mov	r8, #44	; 0x2c
   396a8:	mov	sl, #10
   396ac:	add	r1, r0, #1
   396b0:	sub	r9, r9, #1
   396b4:	str	r1, [r4, #20]
   396b8:	strb	r8, [r0]
   396bc:	ldrb	r0, [r4, #25]
   396c0:	ldr	r1, [r4, #20]
   396c4:	cmp	r0, #0
   396c8:	beq	39780 <flatcc_json_printer_uint32_vector_field@@Base+0x28c>
   396cc:	add	r0, r1, #1
   396d0:	str	r0, [r4, #20]
   396d4:	strb	sl, [r1]
   396d8:	ldr	r0, [r4, #20]
   396dc:	ldrb	r2, [r4, #25]
   396e0:	ldr	r3, [r4, #32]
   396e4:	ldr	r1, [r4, #16]
   396e8:	mla	r6, r3, r2, r0
   396ec:	mul	r5, r3, r2
   396f0:	cmp	r6, r1
   396f4:	bls	39764 <flatcc_json_printer_uint32_vector_field@@Base+0x270>
   396f8:	cmp	r0, r1
   396fc:	bcc	39718 <flatcc_json_printer_uint32_vector_field@@Base+0x224>
   39700:	ldr	r2, [r4, #44]	; 0x2c
   39704:	mov	r0, r4
   39708:	mov	r1, #0
   3970c:	blx	r2
   39710:	ldr	r1, [r4, #16]
   39714:	ldr	r0, [r4, #20]
   39718:	sub	r6, r1, r0
   3971c:	cmp	r6, r5
   39720:	bcs	39764 <flatcc_json_printer_uint32_vector_field@@Base+0x270>
   39724:	mov	r1, #32
   39728:	mov	r2, r6
   3972c:	bl	14ef0 <memset@plt>
   39730:	ldr	r0, [r4, #20]
   39734:	ldr	r2, [r4, #44]	; 0x2c
   39738:	mov	r1, #0
   3973c:	add	r0, r0, r6
   39740:	str	r0, [r4, #20]
   39744:	mov	r0, r4
   39748:	blx	r2
   3974c:	ldr	r1, [r4, #16]
   39750:	ldr	r0, [r4, #20]
   39754:	sub	r5, r5, r6
   39758:	sub	r6, r1, r0
   3975c:	cmp	r5, r6
   39760:	bhi	39724 <flatcc_json_printer_uint32_vector_field@@Base+0x230>
   39764:	mov	r1, #32
   39768:	mov	r2, r5
   3976c:	bl	14ef0 <memset@plt>
   39770:	ldr	r0, [r4, #20]
   39774:	add	r1, r0, r5
   39778:	str	r1, [r4, #20]
   3977c:	b	397a0 <flatcc_json_printer_uint32_vector_field@@Base+0x2ac>
   39780:	ldr	r0, [r4, #16]
   39784:	cmp	r1, r0
   39788:	bcc	397a0 <flatcc_json_printer_uint32_vector_field@@Base+0x2ac>
   3978c:	ldr	r2, [r4, #44]	; 0x2c
   39790:	mov	r0, r4
   39794:	mov	r1, #0
   39798:	blx	r2
   3979c:	ldr	r1, [r4, #20]
   397a0:	ldr	r0, [r7], #4
   397a4:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   397a8:	ldr	r1, [r4, #20]
   397ac:	cmp	r9, #0
   397b0:	add	r0, r1, r0
   397b4:	str	r0, [r4, #20]
   397b8:	bne	396ac <flatcc_json_printer_uint32_vector_field@@Base+0x1b8>
   397bc:	ldrb	r1, [r4, #25]
   397c0:	ldr	r0, [r4, #20]
   397c4:	cmp	r1, #0
   397c8:	beq	39888 <flatcc_json_printer_uint32_vector_field@@Base+0x394>
   397cc:	add	r1, r0, #1
   397d0:	str	r1, [r4, #20]
   397d4:	mov	r1, #10
   397d8:	strb	r1, [r0]
   397dc:	ldr	r0, [r4, #32]
   397e0:	sub	r2, r0, #1
   397e4:	str	r2, [r4, #32]
   397e8:	ldrb	r3, [r4, #25]
   397ec:	ldr	r0, [r4, #20]
   397f0:	ldr	r1, [r4, #16]
   397f4:	mla	r7, r2, r3, r0
   397f8:	mul	r5, r2, r3
   397fc:	cmp	r7, r1
   39800:	bls	39870 <flatcc_json_printer_uint32_vector_field@@Base+0x37c>
   39804:	cmp	r0, r1
   39808:	bcc	39824 <flatcc_json_printer_uint32_vector_field@@Base+0x330>
   3980c:	ldr	r2, [r4, #44]	; 0x2c
   39810:	mov	r0, r4
   39814:	mov	r1, #0
   39818:	blx	r2
   3981c:	ldr	r1, [r4, #16]
   39820:	ldr	r0, [r4, #20]
   39824:	sub	r6, r1, r0
   39828:	cmp	r6, r5
   3982c:	bcs	39870 <flatcc_json_printer_uint32_vector_field@@Base+0x37c>
   39830:	mov	r1, #32
   39834:	mov	r2, r6
   39838:	bl	14ef0 <memset@plt>
   3983c:	ldr	r0, [r4, #20]
   39840:	ldr	r2, [r4, #44]	; 0x2c
   39844:	mov	r1, #0
   39848:	add	r0, r0, r6
   3984c:	str	r0, [r4, #20]
   39850:	mov	r0, r4
   39854:	blx	r2
   39858:	ldr	r1, [r4, #16]
   3985c:	ldr	r0, [r4, #20]
   39860:	sub	r5, r5, r6
   39864:	sub	r6, r1, r0
   39868:	cmp	r5, r6
   3986c:	bhi	39830 <flatcc_json_printer_uint32_vector_field@@Base+0x33c>
   39870:	mov	r1, #32
   39874:	mov	r2, r5
   39878:	bl	14ef0 <memset@plt>
   3987c:	ldr	r0, [r4, #20]
   39880:	add	r0, r0, r5
   39884:	str	r0, [r4, #20]
   39888:	add	r1, r0, #1
   3988c:	str	r1, [r4, #20]
   39890:	mov	r1, #93	; 0x5d
   39894:	strb	r1, [r0]
   39898:	sub	sp, fp, #28
   3989c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000398a0 <flatcc_json_printer_uint64_vector_field@@Base>:
   398a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   398a4:	add	fp, sp, #28
   398a8:	sub	sp, sp, #4
   398ac:	mov	r4, r0
   398b0:	mov	r0, #4
   398b4:	add	r0, r0, r2, lsl #1
   398b8:	ldr	r2, [r1, #8]
   398bc:	cmp	r0, r2
   398c0:	bge	39c48 <flatcc_json_printer_uint64_vector_field@@Base+0x3a8>
   398c4:	ldr	r2, [r1, #4]
   398c8:	add	r0, r2, r0
   398cc:	ldrh	r0, [r0]
   398d0:	cmp	r0, #0
   398d4:	ldrne	r2, [r1]
   398d8:	addsne	r8, r2, r0
   398dc:	beq	39c48 <flatcc_json_printer_uint64_vector_field@@Base+0x3a8>
   398e0:	ldr	r0, [r1, #16]
   398e4:	ldr	r2, [fp, #8]
   398e8:	add	r7, r0, #1
   398ec:	cmp	r0, #0
   398f0:	str	r7, [r1, #16]
   398f4:	ldrne	r0, [r4, #20]
   398f8:	addne	r1, r0, #1
   398fc:	strne	r1, [r4, #20]
   39900:	movne	r1, #44	; 0x2c
   39904:	strbne	r1, [r0]
   39908:	mov	r1, r3
   3990c:	ldr	r0, [r8]
   39910:	ldr	r7, [r8, r0]!
   39914:	mov	r0, r4
   39918:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3991c:	ldr	r1, [r4, #32]
   39920:	ldr	r0, [r4, #20]
   39924:	cmp	r7, #0
   39928:	add	r1, r1, #1
   3992c:	str	r1, [r4, #32]
   39930:	add	r1, r0, #1
   39934:	str	r1, [r4, #20]
   39938:	mov	r1, #91	; 0x5b
   3993c:	strb	r1, [r0]
   39940:	beq	39b6c <flatcc_json_printer_uint64_vector_field@@Base+0x2cc>
   39944:	ldrb	r0, [r4, #25]
   39948:	ldr	r2, [r4, #20]
   3994c:	cmp	r0, #0
   39950:	beq	39a0c <flatcc_json_printer_uint64_vector_field@@Base+0x16c>
   39954:	add	r0, r2, #1
   39958:	str	r0, [r4, #20]
   3995c:	mov	r0, #10
   39960:	strb	r0, [r2]
   39964:	ldr	r0, [r4, #20]
   39968:	ldrb	r2, [r4, #25]
   3996c:	ldr	r3, [r4, #32]
   39970:	ldr	r1, [r4, #16]
   39974:	mla	r6, r3, r2, r0
   39978:	mul	r5, r3, r2
   3997c:	cmp	r6, r1
   39980:	bls	399f0 <flatcc_json_printer_uint64_vector_field@@Base+0x150>
   39984:	cmp	r0, r1
   39988:	bcc	399a4 <flatcc_json_printer_uint64_vector_field@@Base+0x104>
   3998c:	ldr	r2, [r4, #44]	; 0x2c
   39990:	mov	r0, r4
   39994:	mov	r1, #0
   39998:	blx	r2
   3999c:	ldr	r1, [r4, #16]
   399a0:	ldr	r0, [r4, #20]
   399a4:	sub	r6, r1, r0
   399a8:	cmp	r6, r5
   399ac:	bcs	399f0 <flatcc_json_printer_uint64_vector_field@@Base+0x150>
   399b0:	mov	r1, #32
   399b4:	mov	r2, r6
   399b8:	bl	14ef0 <memset@plt>
   399bc:	ldr	r0, [r4, #20]
   399c0:	ldr	r2, [r4, #44]	; 0x2c
   399c4:	mov	r1, #0
   399c8:	add	r0, r0, r6
   399cc:	str	r0, [r4, #20]
   399d0:	mov	r0, r4
   399d4:	blx	r2
   399d8:	ldr	r1, [r4, #16]
   399dc:	ldr	r0, [r4, #20]
   399e0:	sub	r5, r5, r6
   399e4:	sub	r6, r1, r0
   399e8:	cmp	r5, r6
   399ec:	bhi	399b0 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   399f0:	mov	r1, #32
   399f4:	mov	r2, r5
   399f8:	bl	14ef0 <memset@plt>
   399fc:	ldr	r0, [r4, #20]
   39a00:	add	r2, r0, r5
   39a04:	str	r2, [r4, #20]
   39a08:	b	39a2c <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   39a0c:	ldr	r0, [r4, #16]
   39a10:	cmp	r2, r0
   39a14:	bcc	39a2c <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   39a18:	ldr	r2, [r4, #44]	; 0x2c
   39a1c:	mov	r0, r4
   39a20:	mov	r1, #0
   39a24:	blx	r2
   39a28:	ldr	r2, [r4, #20]
   39a2c:	ldrd	r0, [r8, #4]
   39a30:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   39a34:	ldr	r1, [r4, #20]
   39a38:	subs	r9, r7, #1
   39a3c:	add	r0, r1, r0
   39a40:	str	r0, [r4, #20]
   39a44:	beq	39b6c <flatcc_json_printer_uint64_vector_field@@Base+0x2cc>
   39a48:	ldr	r0, [r4, #20]
   39a4c:	add	r7, r8, #12
   39a50:	mov	r8, #44	; 0x2c
   39a54:	mov	sl, #10
   39a58:	add	r1, r0, #1
   39a5c:	sub	r9, r9, #1
   39a60:	str	r1, [r4, #20]
   39a64:	strb	r8, [r0]
   39a68:	ldrb	r0, [r4, #25]
   39a6c:	ldr	r2, [r4, #20]
   39a70:	cmp	r0, #0
   39a74:	beq	39b2c <flatcc_json_printer_uint64_vector_field@@Base+0x28c>
   39a78:	add	r0, r2, #1
   39a7c:	str	r0, [r4, #20]
   39a80:	strb	sl, [r2]
   39a84:	ldr	r0, [r4, #20]
   39a88:	ldrb	r2, [r4, #25]
   39a8c:	ldr	r3, [r4, #32]
   39a90:	ldr	r1, [r4, #16]
   39a94:	mla	r6, r3, r2, r0
   39a98:	mul	r5, r3, r2
   39a9c:	cmp	r6, r1
   39aa0:	bls	39b10 <flatcc_json_printer_uint64_vector_field@@Base+0x270>
   39aa4:	cmp	r0, r1
   39aa8:	bcc	39ac4 <flatcc_json_printer_uint64_vector_field@@Base+0x224>
   39aac:	ldr	r2, [r4, #44]	; 0x2c
   39ab0:	mov	r0, r4
   39ab4:	mov	r1, #0
   39ab8:	blx	r2
   39abc:	ldr	r1, [r4, #16]
   39ac0:	ldr	r0, [r4, #20]
   39ac4:	sub	r6, r1, r0
   39ac8:	cmp	r6, r5
   39acc:	bcs	39b10 <flatcc_json_printer_uint64_vector_field@@Base+0x270>
   39ad0:	mov	r1, #32
   39ad4:	mov	r2, r6
   39ad8:	bl	14ef0 <memset@plt>
   39adc:	ldr	r0, [r4, #20]
   39ae0:	ldr	r2, [r4, #44]	; 0x2c
   39ae4:	mov	r1, #0
   39ae8:	add	r0, r0, r6
   39aec:	str	r0, [r4, #20]
   39af0:	mov	r0, r4
   39af4:	blx	r2
   39af8:	ldr	r1, [r4, #16]
   39afc:	ldr	r0, [r4, #20]
   39b00:	sub	r5, r5, r6
   39b04:	sub	r6, r1, r0
   39b08:	cmp	r5, r6
   39b0c:	bhi	39ad0 <flatcc_json_printer_uint64_vector_field@@Base+0x230>
   39b10:	mov	r1, #32
   39b14:	mov	r2, r5
   39b18:	bl	14ef0 <memset@plt>
   39b1c:	ldr	r0, [r4, #20]
   39b20:	add	r2, r0, r5
   39b24:	str	r2, [r4, #20]
   39b28:	b	39b4c <flatcc_json_printer_uint64_vector_field@@Base+0x2ac>
   39b2c:	ldr	r0, [r4, #16]
   39b30:	cmp	r2, r0
   39b34:	bcc	39b4c <flatcc_json_printer_uint64_vector_field@@Base+0x2ac>
   39b38:	ldr	r2, [r4, #44]	; 0x2c
   39b3c:	mov	r0, r4
   39b40:	mov	r1, #0
   39b44:	blx	r2
   39b48:	ldr	r2, [r4, #20]
   39b4c:	ldrd	r0, [r7]
   39b50:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   39b54:	ldr	r1, [r4, #20]
   39b58:	add	r7, r7, #8
   39b5c:	cmp	r9, #0
   39b60:	add	r0, r1, r0
   39b64:	str	r0, [r4, #20]
   39b68:	bne	39a58 <flatcc_json_printer_uint64_vector_field@@Base+0x1b8>
   39b6c:	ldrb	r1, [r4, #25]
   39b70:	ldr	r0, [r4, #20]
   39b74:	cmp	r1, #0
   39b78:	beq	39c38 <flatcc_json_printer_uint64_vector_field@@Base+0x398>
   39b7c:	add	r1, r0, #1
   39b80:	str	r1, [r4, #20]
   39b84:	mov	r1, #10
   39b88:	strb	r1, [r0]
   39b8c:	ldr	r0, [r4, #32]
   39b90:	sub	r2, r0, #1
   39b94:	str	r2, [r4, #32]
   39b98:	ldrb	r3, [r4, #25]
   39b9c:	ldr	r0, [r4, #20]
   39ba0:	ldr	r1, [r4, #16]
   39ba4:	mla	r7, r2, r3, r0
   39ba8:	mul	r5, r2, r3
   39bac:	cmp	r7, r1
   39bb0:	bls	39c20 <flatcc_json_printer_uint64_vector_field@@Base+0x380>
   39bb4:	cmp	r0, r1
   39bb8:	bcc	39bd4 <flatcc_json_printer_uint64_vector_field@@Base+0x334>
   39bbc:	ldr	r2, [r4, #44]	; 0x2c
   39bc0:	mov	r0, r4
   39bc4:	mov	r1, #0
   39bc8:	blx	r2
   39bcc:	ldr	r1, [r4, #16]
   39bd0:	ldr	r0, [r4, #20]
   39bd4:	sub	r6, r1, r0
   39bd8:	cmp	r6, r5
   39bdc:	bcs	39c20 <flatcc_json_printer_uint64_vector_field@@Base+0x380>
   39be0:	mov	r1, #32
   39be4:	mov	r2, r6
   39be8:	bl	14ef0 <memset@plt>
   39bec:	ldr	r0, [r4, #20]
   39bf0:	ldr	r2, [r4, #44]	; 0x2c
   39bf4:	mov	r1, #0
   39bf8:	add	r0, r0, r6
   39bfc:	str	r0, [r4, #20]
   39c00:	mov	r0, r4
   39c04:	blx	r2
   39c08:	ldr	r1, [r4, #16]
   39c0c:	ldr	r0, [r4, #20]
   39c10:	sub	r5, r5, r6
   39c14:	sub	r6, r1, r0
   39c18:	cmp	r5, r6
   39c1c:	bhi	39be0 <flatcc_json_printer_uint64_vector_field@@Base+0x340>
   39c20:	mov	r1, #32
   39c24:	mov	r2, r5
   39c28:	bl	14ef0 <memset@plt>
   39c2c:	ldr	r0, [r4, #20]
   39c30:	add	r0, r0, r5
   39c34:	str	r0, [r4, #20]
   39c38:	add	r1, r0, #1
   39c3c:	str	r1, [r4, #20]
   39c40:	mov	r1, #93	; 0x5d
   39c44:	strb	r1, [r0]
   39c48:	sub	sp, fp, #28
   39c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039c50 <flatcc_json_printer_int8_vector_field@@Base>:
   39c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39c54:	add	fp, sp, #28
   39c58:	sub	sp, sp, #4
   39c5c:	mov	r4, r0
   39c60:	mov	r0, #4
   39c64:	add	r0, r0, r2, lsl #1
   39c68:	ldr	r2, [r1, #8]
   39c6c:	cmp	r0, r2
   39c70:	bge	3a038 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   39c74:	ldr	r2, [r1, #4]
   39c78:	add	r0, r2, r0
   39c7c:	ldrh	r0, [r0]
   39c80:	cmp	r0, #0
   39c84:	ldrne	r2, [r1]
   39c88:	addsne	r8, r2, r0
   39c8c:	beq	3a038 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   39c90:	ldr	r0, [r1, #16]
   39c94:	ldr	r2, [fp, #8]
   39c98:	add	r7, r0, #1
   39c9c:	cmp	r0, #0
   39ca0:	str	r7, [r1, #16]
   39ca4:	ldrne	r0, [r4, #20]
   39ca8:	addne	r1, r0, #1
   39cac:	strne	r1, [r4, #20]
   39cb0:	movne	r1, #44	; 0x2c
   39cb4:	strbne	r1, [r0]
   39cb8:	mov	r1, r3
   39cbc:	ldr	r0, [r8]
   39cc0:	ldr	r7, [r8, r0]!
   39cc4:	mov	r0, r4
   39cc8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   39ccc:	ldr	r1, [r4, #32]
   39cd0:	ldr	r0, [r4, #20]
   39cd4:	cmp	r7, #0
   39cd8:	add	r1, r1, #1
   39cdc:	str	r1, [r4, #32]
   39ce0:	add	r1, r0, #1
   39ce4:	str	r1, [r4, #20]
   39ce8:	mov	r1, #91	; 0x5b
   39cec:	strb	r1, [r0]
   39cf0:	beq	39f5c <flatcc_json_printer_int8_vector_field@@Base+0x30c>
   39cf4:	ldrb	r0, [r4, #25]
   39cf8:	ldr	r1, [r4, #20]
   39cfc:	cmp	r0, #0
   39d00:	beq	39dbc <flatcc_json_printer_int8_vector_field@@Base+0x16c>
   39d04:	add	r0, r1, #1
   39d08:	str	r0, [r4, #20]
   39d0c:	mov	r0, #10
   39d10:	strb	r0, [r1]
   39d14:	ldr	r0, [r4, #20]
   39d18:	ldrb	r2, [r4, #25]
   39d1c:	ldr	r3, [r4, #32]
   39d20:	ldr	r1, [r4, #16]
   39d24:	mla	r6, r3, r2, r0
   39d28:	mul	r5, r3, r2
   39d2c:	cmp	r6, r1
   39d30:	bls	39da0 <flatcc_json_printer_int8_vector_field@@Base+0x150>
   39d34:	cmp	r0, r1
   39d38:	bcc	39d54 <flatcc_json_printer_int8_vector_field@@Base+0x104>
   39d3c:	ldr	r2, [r4, #44]	; 0x2c
   39d40:	mov	r0, r4
   39d44:	mov	r1, #0
   39d48:	blx	r2
   39d4c:	ldr	r1, [r4, #16]
   39d50:	ldr	r0, [r4, #20]
   39d54:	sub	r6, r1, r0
   39d58:	cmp	r6, r5
   39d5c:	bcs	39da0 <flatcc_json_printer_int8_vector_field@@Base+0x150>
   39d60:	mov	r1, #32
   39d64:	mov	r2, r6
   39d68:	bl	14ef0 <memset@plt>
   39d6c:	ldr	r0, [r4, #20]
   39d70:	ldr	r2, [r4, #44]	; 0x2c
   39d74:	mov	r1, #0
   39d78:	add	r0, r0, r6
   39d7c:	str	r0, [r4, #20]
   39d80:	mov	r0, r4
   39d84:	blx	r2
   39d88:	ldr	r1, [r4, #16]
   39d8c:	ldr	r0, [r4, #20]
   39d90:	sub	r5, r5, r6
   39d94:	sub	r6, r1, r0
   39d98:	cmp	r5, r6
   39d9c:	bhi	39d60 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   39da0:	mov	r1, #32
   39da4:	mov	r2, r5
   39da8:	bl	14ef0 <memset@plt>
   39dac:	ldr	r0, [r4, #20]
   39db0:	add	r1, r0, r5
   39db4:	str	r1, [r4, #20]
   39db8:	b	39ddc <flatcc_json_printer_int8_vector_field@@Base+0x18c>
   39dbc:	ldr	r0, [r4, #16]
   39dc0:	cmp	r1, r0
   39dc4:	bcc	39ddc <flatcc_json_printer_int8_vector_field@@Base+0x18c>
   39dc8:	ldr	r2, [r4, #44]	; 0x2c
   39dcc:	mov	r0, r4
   39dd0:	mov	r1, #0
   39dd4:	blx	r2
   39dd8:	ldr	r1, [r4, #20]
   39ddc:	ldrb	r0, [r8, #4]
   39de0:	lsr	r5, r0, #7
   39de4:	sxtb	r0, r0
   39de8:	cmn	r0, #1
   39dec:	rsble	r0, r0, #0
   39df0:	movle	r2, #45	; 0x2d
   39df4:	strble	r2, [r1], #1
   39df8:	uxtb	r0, r0
   39dfc:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   39e00:	ldr	r1, [r4, #20]
   39e04:	add	r0, r0, r5
   39e08:	subs	r9, r7, #1
   39e0c:	add	r0, r1, r0
   39e10:	str	r0, [r4, #20]
   39e14:	beq	39f5c <flatcc_json_printer_int8_vector_field@@Base+0x30c>
   39e18:	ldr	r0, [r4, #20]
   39e1c:	add	r7, r8, #5
   39e20:	mov	r8, #44	; 0x2c
   39e24:	mov	sl, #10
   39e28:	add	r1, r0, #1
   39e2c:	str	r1, [r4, #20]
   39e30:	strb	r8, [r0]
   39e34:	ldrb	r0, [r4, #25]
   39e38:	ldr	r1, [r4, #20]
   39e3c:	cmp	r0, #0
   39e40:	beq	39ef8 <flatcc_json_printer_int8_vector_field@@Base+0x2a8>
   39e44:	add	r0, r1, #1
   39e48:	str	r0, [r4, #20]
   39e4c:	strb	sl, [r1]
   39e50:	ldr	r0, [r4, #20]
   39e54:	ldrb	r2, [r4, #25]
   39e58:	ldr	r3, [r4, #32]
   39e5c:	ldr	r1, [r4, #16]
   39e60:	mla	r6, r3, r2, r0
   39e64:	mul	r5, r3, r2
   39e68:	cmp	r6, r1
   39e6c:	bls	39edc <flatcc_json_printer_int8_vector_field@@Base+0x28c>
   39e70:	cmp	r0, r1
   39e74:	bcc	39e90 <flatcc_json_printer_int8_vector_field@@Base+0x240>
   39e78:	ldr	r2, [r4, #44]	; 0x2c
   39e7c:	mov	r0, r4
   39e80:	mov	r1, #0
   39e84:	blx	r2
   39e88:	ldr	r1, [r4, #16]
   39e8c:	ldr	r0, [r4, #20]
   39e90:	sub	r6, r1, r0
   39e94:	cmp	r6, r5
   39e98:	bcs	39edc <flatcc_json_printer_int8_vector_field@@Base+0x28c>
   39e9c:	mov	r1, #32
   39ea0:	mov	r2, r6
   39ea4:	bl	14ef0 <memset@plt>
   39ea8:	ldr	r0, [r4, #20]
   39eac:	ldr	r2, [r4, #44]	; 0x2c
   39eb0:	mov	r1, #0
   39eb4:	add	r0, r0, r6
   39eb8:	str	r0, [r4, #20]
   39ebc:	mov	r0, r4
   39ec0:	blx	r2
   39ec4:	ldr	r1, [r4, #16]
   39ec8:	ldr	r0, [r4, #20]
   39ecc:	sub	r5, r5, r6
   39ed0:	sub	r6, r1, r0
   39ed4:	cmp	r5, r6
   39ed8:	bhi	39e9c <flatcc_json_printer_int8_vector_field@@Base+0x24c>
   39edc:	mov	r1, #32
   39ee0:	mov	r2, r5
   39ee4:	bl	14ef0 <memset@plt>
   39ee8:	ldr	r0, [r4, #20]
   39eec:	add	r1, r0, r5
   39ef0:	str	r1, [r4, #20]
   39ef4:	b	39f18 <flatcc_json_printer_int8_vector_field@@Base+0x2c8>
   39ef8:	ldr	r0, [r4, #16]
   39efc:	cmp	r1, r0
   39f00:	bcc	39f18 <flatcc_json_printer_int8_vector_field@@Base+0x2c8>
   39f04:	ldr	r2, [r4, #44]	; 0x2c
   39f08:	mov	r0, r4
   39f0c:	mov	r1, #0
   39f10:	blx	r2
   39f14:	ldr	r1, [r4, #20]
   39f18:	ldrb	r0, [r7]
   39f1c:	sub	r9, r9, #1
   39f20:	lsr	r5, r0, #7
   39f24:	sxtb	r0, r0
   39f28:	cmn	r0, #1
   39f2c:	rsble	r0, r0, #0
   39f30:	movle	r2, #45	; 0x2d
   39f34:	strble	r2, [r1], #1
   39f38:	uxtb	r0, r0
   39f3c:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   39f40:	ldr	r1, [r4, #20]
   39f44:	add	r0, r0, r5
   39f48:	add	r7, r7, #1
   39f4c:	cmp	r9, #0
   39f50:	add	r0, r1, r0
   39f54:	str	r0, [r4, #20]
   39f58:	bne	39e28 <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   39f5c:	ldrb	r1, [r4, #25]
   39f60:	ldr	r0, [r4, #20]
   39f64:	cmp	r1, #0
   39f68:	beq	3a028 <flatcc_json_printer_int8_vector_field@@Base+0x3d8>
   39f6c:	add	r1, r0, #1
   39f70:	str	r1, [r4, #20]
   39f74:	mov	r1, #10
   39f78:	strb	r1, [r0]
   39f7c:	ldr	r0, [r4, #32]
   39f80:	sub	r2, r0, #1
   39f84:	str	r2, [r4, #32]
   39f88:	ldrb	r3, [r4, #25]
   39f8c:	ldr	r0, [r4, #20]
   39f90:	ldr	r1, [r4, #16]
   39f94:	mla	r7, r2, r3, r0
   39f98:	mul	r5, r2, r3
   39f9c:	cmp	r7, r1
   39fa0:	bls	3a010 <flatcc_json_printer_int8_vector_field@@Base+0x3c0>
   39fa4:	cmp	r0, r1
   39fa8:	bcc	39fc4 <flatcc_json_printer_int8_vector_field@@Base+0x374>
   39fac:	ldr	r2, [r4, #44]	; 0x2c
   39fb0:	mov	r0, r4
   39fb4:	mov	r1, #0
   39fb8:	blx	r2
   39fbc:	ldr	r1, [r4, #16]
   39fc0:	ldr	r0, [r4, #20]
   39fc4:	sub	r6, r1, r0
   39fc8:	cmp	r6, r5
   39fcc:	bcs	3a010 <flatcc_json_printer_int8_vector_field@@Base+0x3c0>
   39fd0:	mov	r1, #32
   39fd4:	mov	r2, r6
   39fd8:	bl	14ef0 <memset@plt>
   39fdc:	ldr	r0, [r4, #20]
   39fe0:	ldr	r2, [r4, #44]	; 0x2c
   39fe4:	mov	r1, #0
   39fe8:	add	r0, r0, r6
   39fec:	str	r0, [r4, #20]
   39ff0:	mov	r0, r4
   39ff4:	blx	r2
   39ff8:	ldr	r1, [r4, #16]
   39ffc:	ldr	r0, [r4, #20]
   3a000:	sub	r5, r5, r6
   3a004:	sub	r6, r1, r0
   3a008:	cmp	r5, r6
   3a00c:	bhi	39fd0 <flatcc_json_printer_int8_vector_field@@Base+0x380>
   3a010:	mov	r1, #32
   3a014:	mov	r2, r5
   3a018:	bl	14ef0 <memset@plt>
   3a01c:	ldr	r0, [r4, #20]
   3a020:	add	r0, r0, r5
   3a024:	str	r0, [r4, #20]
   3a028:	add	r1, r0, #1
   3a02c:	str	r1, [r4, #20]
   3a030:	mov	r1, #93	; 0x5d
   3a034:	strb	r1, [r0]
   3a038:	sub	sp, fp, #28
   3a03c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a040 <flatcc_json_printer_int16_vector_field@@Base>:
   3a040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a044:	add	fp, sp, #28
   3a048:	sub	sp, sp, #4
   3a04c:	mov	r4, r0
   3a050:	mov	r0, #4
   3a054:	add	r0, r0, r2, lsl #1
   3a058:	ldr	r2, [r1, #8]
   3a05c:	cmp	r0, r2
   3a060:	bge	3a428 <flatcc_json_printer_int16_vector_field@@Base+0x3e8>
   3a064:	ldr	r2, [r1, #4]
   3a068:	add	r0, r2, r0
   3a06c:	ldrh	r0, [r0]
   3a070:	cmp	r0, #0
   3a074:	ldrne	r2, [r1]
   3a078:	addsne	r8, r2, r0
   3a07c:	beq	3a428 <flatcc_json_printer_int16_vector_field@@Base+0x3e8>
   3a080:	ldr	r0, [r1, #16]
   3a084:	ldr	r2, [fp, #8]
   3a088:	add	r7, r0, #1
   3a08c:	cmp	r0, #0
   3a090:	str	r7, [r1, #16]
   3a094:	ldrne	r0, [r4, #20]
   3a098:	addne	r1, r0, #1
   3a09c:	strne	r1, [r4, #20]
   3a0a0:	movne	r1, #44	; 0x2c
   3a0a4:	strbne	r1, [r0]
   3a0a8:	mov	r1, r3
   3a0ac:	ldr	r0, [r8]
   3a0b0:	ldr	r7, [r8, r0]!
   3a0b4:	mov	r0, r4
   3a0b8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3a0bc:	ldr	r1, [r4, #32]
   3a0c0:	ldr	r0, [r4, #20]
   3a0c4:	cmp	r7, #0
   3a0c8:	add	r1, r1, #1
   3a0cc:	str	r1, [r4, #32]
   3a0d0:	add	r1, r0, #1
   3a0d4:	str	r1, [r4, #20]
   3a0d8:	mov	r1, #91	; 0x5b
   3a0dc:	strb	r1, [r0]
   3a0e0:	beq	3a34c <flatcc_json_printer_int16_vector_field@@Base+0x30c>
   3a0e4:	ldrb	r0, [r4, #25]
   3a0e8:	ldr	r1, [r4, #20]
   3a0ec:	cmp	r0, #0
   3a0f0:	beq	3a1ac <flatcc_json_printer_int16_vector_field@@Base+0x16c>
   3a0f4:	add	r0, r1, #1
   3a0f8:	str	r0, [r4, #20]
   3a0fc:	mov	r0, #10
   3a100:	strb	r0, [r1]
   3a104:	ldr	r0, [r4, #20]
   3a108:	ldrb	r2, [r4, #25]
   3a10c:	ldr	r3, [r4, #32]
   3a110:	ldr	r1, [r4, #16]
   3a114:	mla	r6, r3, r2, r0
   3a118:	mul	r5, r3, r2
   3a11c:	cmp	r6, r1
   3a120:	bls	3a190 <flatcc_json_printer_int16_vector_field@@Base+0x150>
   3a124:	cmp	r0, r1
   3a128:	bcc	3a144 <flatcc_json_printer_int16_vector_field@@Base+0x104>
   3a12c:	ldr	r2, [r4, #44]	; 0x2c
   3a130:	mov	r0, r4
   3a134:	mov	r1, #0
   3a138:	blx	r2
   3a13c:	ldr	r1, [r4, #16]
   3a140:	ldr	r0, [r4, #20]
   3a144:	sub	r6, r1, r0
   3a148:	cmp	r6, r5
   3a14c:	bcs	3a190 <flatcc_json_printer_int16_vector_field@@Base+0x150>
   3a150:	mov	r1, #32
   3a154:	mov	r2, r6
   3a158:	bl	14ef0 <memset@plt>
   3a15c:	ldr	r0, [r4, #20]
   3a160:	ldr	r2, [r4, #44]	; 0x2c
   3a164:	mov	r1, #0
   3a168:	add	r0, r0, r6
   3a16c:	str	r0, [r4, #20]
   3a170:	mov	r0, r4
   3a174:	blx	r2
   3a178:	ldr	r1, [r4, #16]
   3a17c:	ldr	r0, [r4, #20]
   3a180:	sub	r5, r5, r6
   3a184:	sub	r6, r1, r0
   3a188:	cmp	r5, r6
   3a18c:	bhi	3a150 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   3a190:	mov	r1, #32
   3a194:	mov	r2, r5
   3a198:	bl	14ef0 <memset@plt>
   3a19c:	ldr	r0, [r4, #20]
   3a1a0:	add	r1, r0, r5
   3a1a4:	str	r1, [r4, #20]
   3a1a8:	b	3a1cc <flatcc_json_printer_int16_vector_field@@Base+0x18c>
   3a1ac:	ldr	r0, [r4, #16]
   3a1b0:	cmp	r1, r0
   3a1b4:	bcc	3a1cc <flatcc_json_printer_int16_vector_field@@Base+0x18c>
   3a1b8:	ldr	r2, [r4, #44]	; 0x2c
   3a1bc:	mov	r0, r4
   3a1c0:	mov	r1, #0
   3a1c4:	blx	r2
   3a1c8:	ldr	r1, [r4, #20]
   3a1cc:	ldrh	r0, [r8, #4]
   3a1d0:	lsr	r5, r0, #15
   3a1d4:	sxth	r0, r0
   3a1d8:	cmn	r0, #1
   3a1dc:	rsble	r0, r0, #0
   3a1e0:	movle	r2, #45	; 0x2d
   3a1e4:	strble	r2, [r1], #1
   3a1e8:	uxth	r0, r0
   3a1ec:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   3a1f0:	ldr	r1, [r4, #20]
   3a1f4:	add	r0, r0, r5
   3a1f8:	subs	r9, r7, #1
   3a1fc:	add	r0, r1, r0
   3a200:	str	r0, [r4, #20]
   3a204:	beq	3a34c <flatcc_json_printer_int16_vector_field@@Base+0x30c>
   3a208:	ldr	r0, [r4, #20]
   3a20c:	add	r7, r8, #6
   3a210:	mov	r8, #44	; 0x2c
   3a214:	mov	sl, #10
   3a218:	add	r1, r0, #1
   3a21c:	str	r1, [r4, #20]
   3a220:	strb	r8, [r0]
   3a224:	ldrb	r0, [r4, #25]
   3a228:	ldr	r1, [r4, #20]
   3a22c:	cmp	r0, #0
   3a230:	beq	3a2e8 <flatcc_json_printer_int16_vector_field@@Base+0x2a8>
   3a234:	add	r0, r1, #1
   3a238:	str	r0, [r4, #20]
   3a23c:	strb	sl, [r1]
   3a240:	ldr	r0, [r4, #20]
   3a244:	ldrb	r2, [r4, #25]
   3a248:	ldr	r3, [r4, #32]
   3a24c:	ldr	r1, [r4, #16]
   3a250:	mla	r6, r3, r2, r0
   3a254:	mul	r5, r3, r2
   3a258:	cmp	r6, r1
   3a25c:	bls	3a2cc <flatcc_json_printer_int16_vector_field@@Base+0x28c>
   3a260:	cmp	r0, r1
   3a264:	bcc	3a280 <flatcc_json_printer_int16_vector_field@@Base+0x240>
   3a268:	ldr	r2, [r4, #44]	; 0x2c
   3a26c:	mov	r0, r4
   3a270:	mov	r1, #0
   3a274:	blx	r2
   3a278:	ldr	r1, [r4, #16]
   3a27c:	ldr	r0, [r4, #20]
   3a280:	sub	r6, r1, r0
   3a284:	cmp	r6, r5
   3a288:	bcs	3a2cc <flatcc_json_printer_int16_vector_field@@Base+0x28c>
   3a28c:	mov	r1, #32
   3a290:	mov	r2, r6
   3a294:	bl	14ef0 <memset@plt>
   3a298:	ldr	r0, [r4, #20]
   3a29c:	ldr	r2, [r4, #44]	; 0x2c
   3a2a0:	mov	r1, #0
   3a2a4:	add	r0, r0, r6
   3a2a8:	str	r0, [r4, #20]
   3a2ac:	mov	r0, r4
   3a2b0:	blx	r2
   3a2b4:	ldr	r1, [r4, #16]
   3a2b8:	ldr	r0, [r4, #20]
   3a2bc:	sub	r5, r5, r6
   3a2c0:	sub	r6, r1, r0
   3a2c4:	cmp	r5, r6
   3a2c8:	bhi	3a28c <flatcc_json_printer_int16_vector_field@@Base+0x24c>
   3a2cc:	mov	r1, #32
   3a2d0:	mov	r2, r5
   3a2d4:	bl	14ef0 <memset@plt>
   3a2d8:	ldr	r0, [r4, #20]
   3a2dc:	add	r1, r0, r5
   3a2e0:	str	r1, [r4, #20]
   3a2e4:	b	3a308 <flatcc_json_printer_int16_vector_field@@Base+0x2c8>
   3a2e8:	ldr	r0, [r4, #16]
   3a2ec:	cmp	r1, r0
   3a2f0:	bcc	3a308 <flatcc_json_printer_int16_vector_field@@Base+0x2c8>
   3a2f4:	ldr	r2, [r4, #44]	; 0x2c
   3a2f8:	mov	r0, r4
   3a2fc:	mov	r1, #0
   3a300:	blx	r2
   3a304:	ldr	r1, [r4, #20]
   3a308:	ldrh	r0, [r7]
   3a30c:	sub	r9, r9, #1
   3a310:	lsr	r5, r0, #15
   3a314:	sxth	r0, r0
   3a318:	cmn	r0, #1
   3a31c:	rsble	r0, r0, #0
   3a320:	movle	r2, #45	; 0x2d
   3a324:	strble	r2, [r1], #1
   3a328:	uxth	r0, r0
   3a32c:	bl	35c6c <flatcc_json_printer_uint16@@Base+0x2c>
   3a330:	ldr	r1, [r4, #20]
   3a334:	add	r0, r0, r5
   3a338:	add	r7, r7, #2
   3a33c:	cmp	r9, #0
   3a340:	add	r0, r1, r0
   3a344:	str	r0, [r4, #20]
   3a348:	bne	3a218 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   3a34c:	ldrb	r1, [r4, #25]
   3a350:	ldr	r0, [r4, #20]
   3a354:	cmp	r1, #0
   3a358:	beq	3a418 <flatcc_json_printer_int16_vector_field@@Base+0x3d8>
   3a35c:	add	r1, r0, #1
   3a360:	str	r1, [r4, #20]
   3a364:	mov	r1, #10
   3a368:	strb	r1, [r0]
   3a36c:	ldr	r0, [r4, #32]
   3a370:	sub	r2, r0, #1
   3a374:	str	r2, [r4, #32]
   3a378:	ldrb	r3, [r4, #25]
   3a37c:	ldr	r0, [r4, #20]
   3a380:	ldr	r1, [r4, #16]
   3a384:	mla	r7, r2, r3, r0
   3a388:	mul	r5, r2, r3
   3a38c:	cmp	r7, r1
   3a390:	bls	3a400 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
   3a394:	cmp	r0, r1
   3a398:	bcc	3a3b4 <flatcc_json_printer_int16_vector_field@@Base+0x374>
   3a39c:	ldr	r2, [r4, #44]	; 0x2c
   3a3a0:	mov	r0, r4
   3a3a4:	mov	r1, #0
   3a3a8:	blx	r2
   3a3ac:	ldr	r1, [r4, #16]
   3a3b0:	ldr	r0, [r4, #20]
   3a3b4:	sub	r6, r1, r0
   3a3b8:	cmp	r6, r5
   3a3bc:	bcs	3a400 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
   3a3c0:	mov	r1, #32
   3a3c4:	mov	r2, r6
   3a3c8:	bl	14ef0 <memset@plt>
   3a3cc:	ldr	r0, [r4, #20]
   3a3d0:	ldr	r2, [r4, #44]	; 0x2c
   3a3d4:	mov	r1, #0
   3a3d8:	add	r0, r0, r6
   3a3dc:	str	r0, [r4, #20]
   3a3e0:	mov	r0, r4
   3a3e4:	blx	r2
   3a3e8:	ldr	r1, [r4, #16]
   3a3ec:	ldr	r0, [r4, #20]
   3a3f0:	sub	r5, r5, r6
   3a3f4:	sub	r6, r1, r0
   3a3f8:	cmp	r5, r6
   3a3fc:	bhi	3a3c0 <flatcc_json_printer_int16_vector_field@@Base+0x380>
   3a400:	mov	r1, #32
   3a404:	mov	r2, r5
   3a408:	bl	14ef0 <memset@plt>
   3a40c:	ldr	r0, [r4, #20]
   3a410:	add	r0, r0, r5
   3a414:	str	r0, [r4, #20]
   3a418:	add	r1, r0, #1
   3a41c:	str	r1, [r4, #20]
   3a420:	mov	r1, #93	; 0x5d
   3a424:	strb	r1, [r0]
   3a428:	sub	sp, fp, #28
   3a42c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a430 <flatcc_json_printer_int32_vector_field@@Base>:
   3a430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a434:	add	fp, sp, #28
   3a438:	sub	sp, sp, #4
   3a43c:	mov	r4, r0
   3a440:	mov	r0, #4
   3a444:	add	r0, r0, r2, lsl #1
   3a448:	ldr	r2, [r1, #8]
   3a44c:	cmp	r0, r2
   3a450:	bge	3a808 <flatcc_json_printer_int32_vector_field@@Base+0x3d8>
   3a454:	ldr	r2, [r1, #4]
   3a458:	add	r0, r2, r0
   3a45c:	ldrh	r0, [r0]
   3a460:	cmp	r0, #0
   3a464:	ldrne	r2, [r1]
   3a468:	addsne	r8, r2, r0
   3a46c:	beq	3a808 <flatcc_json_printer_int32_vector_field@@Base+0x3d8>
   3a470:	ldr	r0, [r1, #16]
   3a474:	ldr	r2, [fp, #8]
   3a478:	add	r7, r0, #1
   3a47c:	cmp	r0, #0
   3a480:	str	r7, [r1, #16]
   3a484:	ldrne	r0, [r4, #20]
   3a488:	addne	r1, r0, #1
   3a48c:	strne	r1, [r4, #20]
   3a490:	movne	r1, #44	; 0x2c
   3a494:	strbne	r1, [r0]
   3a498:	mov	r1, r3
   3a49c:	ldr	r0, [r8]
   3a4a0:	ldr	r7, [r8, r0]!
   3a4a4:	mov	r0, r4
   3a4a8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3a4ac:	ldr	r1, [r4, #32]
   3a4b0:	ldr	r0, [r4, #20]
   3a4b4:	cmp	r7, #0
   3a4b8:	add	r1, r1, #1
   3a4bc:	str	r1, [r4, #32]
   3a4c0:	add	r1, r0, #1
   3a4c4:	str	r1, [r4, #20]
   3a4c8:	mov	r1, #91	; 0x5b
   3a4cc:	strb	r1, [r0]
   3a4d0:	beq	3a72c <flatcc_json_printer_int32_vector_field@@Base+0x2fc>
   3a4d4:	ldrb	r0, [r4, #25]
   3a4d8:	ldr	r1, [r4, #20]
   3a4dc:	cmp	r0, #0
   3a4e0:	beq	3a59c <flatcc_json_printer_int32_vector_field@@Base+0x16c>
   3a4e4:	add	r0, r1, #1
   3a4e8:	str	r0, [r4, #20]
   3a4ec:	mov	r0, #10
   3a4f0:	strb	r0, [r1]
   3a4f4:	ldr	r0, [r4, #20]
   3a4f8:	ldrb	r2, [r4, #25]
   3a4fc:	ldr	r3, [r4, #32]
   3a500:	ldr	r1, [r4, #16]
   3a504:	mla	r6, r3, r2, r0
   3a508:	mul	r5, r3, r2
   3a50c:	cmp	r6, r1
   3a510:	bls	3a580 <flatcc_json_printer_int32_vector_field@@Base+0x150>
   3a514:	cmp	r0, r1
   3a518:	bcc	3a534 <flatcc_json_printer_int32_vector_field@@Base+0x104>
   3a51c:	ldr	r2, [r4, #44]	; 0x2c
   3a520:	mov	r0, r4
   3a524:	mov	r1, #0
   3a528:	blx	r2
   3a52c:	ldr	r1, [r4, #16]
   3a530:	ldr	r0, [r4, #20]
   3a534:	sub	r6, r1, r0
   3a538:	cmp	r6, r5
   3a53c:	bcs	3a580 <flatcc_json_printer_int32_vector_field@@Base+0x150>
   3a540:	mov	r1, #32
   3a544:	mov	r2, r6
   3a548:	bl	14ef0 <memset@plt>
   3a54c:	ldr	r0, [r4, #20]
   3a550:	ldr	r2, [r4, #44]	; 0x2c
   3a554:	mov	r1, #0
   3a558:	add	r0, r0, r6
   3a55c:	str	r0, [r4, #20]
   3a560:	mov	r0, r4
   3a564:	blx	r2
   3a568:	ldr	r1, [r4, #16]
   3a56c:	ldr	r0, [r4, #20]
   3a570:	sub	r5, r5, r6
   3a574:	sub	r6, r1, r0
   3a578:	cmp	r5, r6
   3a57c:	bhi	3a540 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   3a580:	mov	r1, #32
   3a584:	mov	r2, r5
   3a588:	bl	14ef0 <memset@plt>
   3a58c:	ldr	r0, [r4, #20]
   3a590:	add	r1, r0, r5
   3a594:	str	r1, [r4, #20]
   3a598:	b	3a5bc <flatcc_json_printer_int32_vector_field@@Base+0x18c>
   3a59c:	ldr	r0, [r4, #16]
   3a5a0:	cmp	r1, r0
   3a5a4:	bcc	3a5bc <flatcc_json_printer_int32_vector_field@@Base+0x18c>
   3a5a8:	ldr	r2, [r4, #44]	; 0x2c
   3a5ac:	mov	r0, r4
   3a5b0:	mov	r1, #0
   3a5b4:	blx	r2
   3a5b8:	ldr	r1, [r4, #20]
   3a5bc:	ldr	r0, [r8, #4]
   3a5c0:	cmn	r0, #1
   3a5c4:	lsr	r5, r0, #31
   3a5c8:	movle	r2, #45	; 0x2d
   3a5cc:	rsble	r0, r0, #0
   3a5d0:	strble	r2, [r1], #1
   3a5d4:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   3a5d8:	ldr	r1, [r4, #20]
   3a5dc:	add	r0, r0, r5
   3a5e0:	subs	r9, r7, #1
   3a5e4:	add	r0, r1, r0
   3a5e8:	str	r0, [r4, #20]
   3a5ec:	beq	3a72c <flatcc_json_printer_int32_vector_field@@Base+0x2fc>
   3a5f0:	ldr	r0, [r4, #20]
   3a5f4:	add	r7, r8, #8
   3a5f8:	mov	r8, #44	; 0x2c
   3a5fc:	mov	sl, #10
   3a600:	add	r1, r0, #1
   3a604:	str	r1, [r4, #20]
   3a608:	strb	r8, [r0]
   3a60c:	ldrb	r0, [r4, #25]
   3a610:	ldr	r1, [r4, #20]
   3a614:	cmp	r0, #0
   3a618:	beq	3a6d0 <flatcc_json_printer_int32_vector_field@@Base+0x2a0>
   3a61c:	add	r0, r1, #1
   3a620:	str	r0, [r4, #20]
   3a624:	strb	sl, [r1]
   3a628:	ldr	r0, [r4, #20]
   3a62c:	ldrb	r2, [r4, #25]
   3a630:	ldr	r3, [r4, #32]
   3a634:	ldr	r1, [r4, #16]
   3a638:	mla	r6, r3, r2, r0
   3a63c:	mul	r5, r3, r2
   3a640:	cmp	r6, r1
   3a644:	bls	3a6b4 <flatcc_json_printer_int32_vector_field@@Base+0x284>
   3a648:	cmp	r0, r1
   3a64c:	bcc	3a668 <flatcc_json_printer_int32_vector_field@@Base+0x238>
   3a650:	ldr	r2, [r4, #44]	; 0x2c
   3a654:	mov	r0, r4
   3a658:	mov	r1, #0
   3a65c:	blx	r2
   3a660:	ldr	r1, [r4, #16]
   3a664:	ldr	r0, [r4, #20]
   3a668:	sub	r6, r1, r0
   3a66c:	cmp	r6, r5
   3a670:	bcs	3a6b4 <flatcc_json_printer_int32_vector_field@@Base+0x284>
   3a674:	mov	r1, #32
   3a678:	mov	r2, r6
   3a67c:	bl	14ef0 <memset@plt>
   3a680:	ldr	r0, [r4, #20]
   3a684:	ldr	r2, [r4, #44]	; 0x2c
   3a688:	mov	r1, #0
   3a68c:	add	r0, r0, r6
   3a690:	str	r0, [r4, #20]
   3a694:	mov	r0, r4
   3a698:	blx	r2
   3a69c:	ldr	r1, [r4, #16]
   3a6a0:	ldr	r0, [r4, #20]
   3a6a4:	sub	r5, r5, r6
   3a6a8:	sub	r6, r1, r0
   3a6ac:	cmp	r5, r6
   3a6b0:	bhi	3a674 <flatcc_json_printer_int32_vector_field@@Base+0x244>
   3a6b4:	mov	r1, #32
   3a6b8:	mov	r2, r5
   3a6bc:	bl	14ef0 <memset@plt>
   3a6c0:	ldr	r0, [r4, #20]
   3a6c4:	add	r1, r0, r5
   3a6c8:	str	r1, [r4, #20]
   3a6cc:	b	3a6f0 <flatcc_json_printer_int32_vector_field@@Base+0x2c0>
   3a6d0:	ldr	r0, [r4, #16]
   3a6d4:	cmp	r1, r0
   3a6d8:	bcc	3a6f0 <flatcc_json_printer_int32_vector_field@@Base+0x2c0>
   3a6dc:	ldr	r2, [r4, #44]	; 0x2c
   3a6e0:	mov	r0, r4
   3a6e4:	mov	r1, #0
   3a6e8:	blx	r2
   3a6ec:	ldr	r1, [r4, #20]
   3a6f0:	ldr	r0, [r7]
   3a6f4:	sub	r9, r9, #1
   3a6f8:	cmn	r0, #1
   3a6fc:	lsr	r5, r0, #31
   3a700:	movle	r2, #45	; 0x2d
   3a704:	rsble	r0, r0, #0
   3a708:	strble	r2, [r1], #1
   3a70c:	bl	35df8 <flatcc_json_printer_uint32@@Base+0x2c>
   3a710:	ldr	r1, [r4, #20]
   3a714:	add	r0, r0, r5
   3a718:	add	r7, r7, #4
   3a71c:	cmp	r9, #0
   3a720:	add	r0, r1, r0
   3a724:	str	r0, [r4, #20]
   3a728:	bne	3a600 <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   3a72c:	ldrb	r1, [r4, #25]
   3a730:	ldr	r0, [r4, #20]
   3a734:	cmp	r1, #0
   3a738:	beq	3a7f8 <flatcc_json_printer_int32_vector_field@@Base+0x3c8>
   3a73c:	add	r1, r0, #1
   3a740:	str	r1, [r4, #20]
   3a744:	mov	r1, #10
   3a748:	strb	r1, [r0]
   3a74c:	ldr	r0, [r4, #32]
   3a750:	sub	r2, r0, #1
   3a754:	str	r2, [r4, #32]
   3a758:	ldrb	r3, [r4, #25]
   3a75c:	ldr	r0, [r4, #20]
   3a760:	ldr	r1, [r4, #16]
   3a764:	mla	r7, r2, r3, r0
   3a768:	mul	r5, r2, r3
   3a76c:	cmp	r7, r1
   3a770:	bls	3a7e0 <flatcc_json_printer_int32_vector_field@@Base+0x3b0>
   3a774:	cmp	r0, r1
   3a778:	bcc	3a794 <flatcc_json_printer_int32_vector_field@@Base+0x364>
   3a77c:	ldr	r2, [r4, #44]	; 0x2c
   3a780:	mov	r0, r4
   3a784:	mov	r1, #0
   3a788:	blx	r2
   3a78c:	ldr	r1, [r4, #16]
   3a790:	ldr	r0, [r4, #20]
   3a794:	sub	r6, r1, r0
   3a798:	cmp	r6, r5
   3a79c:	bcs	3a7e0 <flatcc_json_printer_int32_vector_field@@Base+0x3b0>
   3a7a0:	mov	r1, #32
   3a7a4:	mov	r2, r6
   3a7a8:	bl	14ef0 <memset@plt>
   3a7ac:	ldr	r0, [r4, #20]
   3a7b0:	ldr	r2, [r4, #44]	; 0x2c
   3a7b4:	mov	r1, #0
   3a7b8:	add	r0, r0, r6
   3a7bc:	str	r0, [r4, #20]
   3a7c0:	mov	r0, r4
   3a7c4:	blx	r2
   3a7c8:	ldr	r1, [r4, #16]
   3a7cc:	ldr	r0, [r4, #20]
   3a7d0:	sub	r5, r5, r6
   3a7d4:	sub	r6, r1, r0
   3a7d8:	cmp	r5, r6
   3a7dc:	bhi	3a7a0 <flatcc_json_printer_int32_vector_field@@Base+0x370>
   3a7e0:	mov	r1, #32
   3a7e4:	mov	r2, r5
   3a7e8:	bl	14ef0 <memset@plt>
   3a7ec:	ldr	r0, [r4, #20]
   3a7f0:	add	r0, r0, r5
   3a7f4:	str	r0, [r4, #20]
   3a7f8:	add	r1, r0, #1
   3a7fc:	str	r1, [r4, #20]
   3a800:	mov	r1, #93	; 0x5d
   3a804:	strb	r1, [r0]
   3a808:	sub	sp, fp, #28
   3a80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a810 <flatcc_json_printer_int64_vector_field@@Base>:
   3a810:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a814:	add	fp, sp, #28
   3a818:	sub	sp, sp, #4
   3a81c:	mov	r4, r0
   3a820:	mov	r0, #4
   3a824:	add	r0, r0, r2, lsl #1
   3a828:	ldr	r2, [r1, #8]
   3a82c:	cmp	r0, r2
   3a830:	bge	3abf8 <flatcc_json_printer_int64_vector_field@@Base+0x3e8>
   3a834:	ldr	r2, [r1, #4]
   3a838:	add	r0, r2, r0
   3a83c:	ldrh	r0, [r0]
   3a840:	cmp	r0, #0
   3a844:	ldrne	r2, [r1]
   3a848:	addsne	r8, r2, r0
   3a84c:	beq	3abf8 <flatcc_json_printer_int64_vector_field@@Base+0x3e8>
   3a850:	ldr	r0, [r1, #16]
   3a854:	ldr	r2, [fp, #8]
   3a858:	add	r7, r0, #1
   3a85c:	cmp	r0, #0
   3a860:	str	r7, [r1, #16]
   3a864:	ldrne	r0, [r4, #20]
   3a868:	addne	r1, r0, #1
   3a86c:	strne	r1, [r4, #20]
   3a870:	movne	r1, #44	; 0x2c
   3a874:	strbne	r1, [r0]
   3a878:	mov	r1, r3
   3a87c:	ldr	r0, [r8]
   3a880:	ldr	r7, [r8, r0]!
   3a884:	mov	r0, r4
   3a888:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3a88c:	ldr	r1, [r4, #32]
   3a890:	ldr	r0, [r4, #20]
   3a894:	cmp	r7, #0
   3a898:	add	r1, r1, #1
   3a89c:	str	r1, [r4, #32]
   3a8a0:	add	r1, r0, #1
   3a8a4:	str	r1, [r4, #20]
   3a8a8:	mov	r1, #91	; 0x5b
   3a8ac:	strb	r1, [r0]
   3a8b0:	beq	3ab1c <flatcc_json_printer_int64_vector_field@@Base+0x30c>
   3a8b4:	ldrb	r0, [r4, #25]
   3a8b8:	ldr	r2, [r4, #20]
   3a8bc:	cmp	r0, #0
   3a8c0:	beq	3a97c <flatcc_json_printer_int64_vector_field@@Base+0x16c>
   3a8c4:	add	r0, r2, #1
   3a8c8:	str	r0, [r4, #20]
   3a8cc:	mov	r0, #10
   3a8d0:	strb	r0, [r2]
   3a8d4:	ldr	r0, [r4, #20]
   3a8d8:	ldrb	r2, [r4, #25]
   3a8dc:	ldr	r3, [r4, #32]
   3a8e0:	ldr	r1, [r4, #16]
   3a8e4:	mla	r6, r3, r2, r0
   3a8e8:	mul	r5, r3, r2
   3a8ec:	cmp	r6, r1
   3a8f0:	bls	3a960 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   3a8f4:	cmp	r0, r1
   3a8f8:	bcc	3a914 <flatcc_json_printer_int64_vector_field@@Base+0x104>
   3a8fc:	ldr	r2, [r4, #44]	; 0x2c
   3a900:	mov	r0, r4
   3a904:	mov	r1, #0
   3a908:	blx	r2
   3a90c:	ldr	r1, [r4, #16]
   3a910:	ldr	r0, [r4, #20]
   3a914:	sub	r6, r1, r0
   3a918:	cmp	r6, r5
   3a91c:	bcs	3a960 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   3a920:	mov	r1, #32
   3a924:	mov	r2, r6
   3a928:	bl	14ef0 <memset@plt>
   3a92c:	ldr	r0, [r4, #20]
   3a930:	ldr	r2, [r4, #44]	; 0x2c
   3a934:	mov	r1, #0
   3a938:	add	r0, r0, r6
   3a93c:	str	r0, [r4, #20]
   3a940:	mov	r0, r4
   3a944:	blx	r2
   3a948:	ldr	r1, [r4, #16]
   3a94c:	ldr	r0, [r4, #20]
   3a950:	sub	r5, r5, r6
   3a954:	sub	r6, r1, r0
   3a958:	cmp	r5, r6
   3a95c:	bhi	3a920 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   3a960:	mov	r1, #32
   3a964:	mov	r2, r5
   3a968:	bl	14ef0 <memset@plt>
   3a96c:	ldr	r0, [r4, #20]
   3a970:	add	r2, r0, r5
   3a974:	str	r2, [r4, #20]
   3a978:	b	3a99c <flatcc_json_printer_int64_vector_field@@Base+0x18c>
   3a97c:	ldr	r0, [r4, #16]
   3a980:	cmp	r2, r0
   3a984:	bcc	3a99c <flatcc_json_printer_int64_vector_field@@Base+0x18c>
   3a988:	ldr	r2, [r4, #44]	; 0x2c
   3a98c:	mov	r0, r4
   3a990:	mov	r1, #0
   3a994:	blx	r2
   3a998:	ldr	r2, [r4, #20]
   3a99c:	ldrd	r0, [r8, #4]
   3a9a0:	lsr	r5, r1, #31
   3a9a4:	cmn	r1, #1
   3a9a8:	bgt	3a9bc <flatcc_json_printer_int64_vector_field@@Base+0x1ac>
   3a9ac:	mov	r3, #45	; 0x2d
   3a9b0:	rsbs	r0, r0, #0
   3a9b4:	strb	r3, [r2], #1
   3a9b8:	rsc	r1, r1, #0
   3a9bc:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   3a9c0:	ldr	r1, [r4, #20]
   3a9c4:	add	r0, r0, r5
   3a9c8:	subs	r9, r7, #1
   3a9cc:	add	r0, r1, r0
   3a9d0:	str	r0, [r4, #20]
   3a9d4:	beq	3ab1c <flatcc_json_printer_int64_vector_field@@Base+0x30c>
   3a9d8:	ldr	r0, [r4, #20]
   3a9dc:	add	r7, r8, #12
   3a9e0:	mov	r8, #44	; 0x2c
   3a9e4:	mov	sl, #10
   3a9e8:	add	r1, r0, #1
   3a9ec:	str	r1, [r4, #20]
   3a9f0:	strb	r8, [r0]
   3a9f4:	ldrb	r0, [r4, #25]
   3a9f8:	ldr	r2, [r4, #20]
   3a9fc:	cmp	r0, #0
   3aa00:	beq	3aab8 <flatcc_json_printer_int64_vector_field@@Base+0x2a8>
   3aa04:	add	r0, r2, #1
   3aa08:	str	r0, [r4, #20]
   3aa0c:	strb	sl, [r2]
   3aa10:	ldr	r0, [r4, #20]
   3aa14:	ldrb	r2, [r4, #25]
   3aa18:	ldr	r3, [r4, #32]
   3aa1c:	ldr	r1, [r4, #16]
   3aa20:	mla	r6, r3, r2, r0
   3aa24:	mul	r5, r3, r2
   3aa28:	cmp	r6, r1
   3aa2c:	bls	3aa9c <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   3aa30:	cmp	r0, r1
   3aa34:	bcc	3aa50 <flatcc_json_printer_int64_vector_field@@Base+0x240>
   3aa38:	ldr	r2, [r4, #44]	; 0x2c
   3aa3c:	mov	r0, r4
   3aa40:	mov	r1, #0
   3aa44:	blx	r2
   3aa48:	ldr	r1, [r4, #16]
   3aa4c:	ldr	r0, [r4, #20]
   3aa50:	sub	r6, r1, r0
   3aa54:	cmp	r6, r5
   3aa58:	bcs	3aa9c <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   3aa5c:	mov	r1, #32
   3aa60:	mov	r2, r6
   3aa64:	bl	14ef0 <memset@plt>
   3aa68:	ldr	r0, [r4, #20]
   3aa6c:	ldr	r2, [r4, #44]	; 0x2c
   3aa70:	mov	r1, #0
   3aa74:	add	r0, r0, r6
   3aa78:	str	r0, [r4, #20]
   3aa7c:	mov	r0, r4
   3aa80:	blx	r2
   3aa84:	ldr	r1, [r4, #16]
   3aa88:	ldr	r0, [r4, #20]
   3aa8c:	sub	r5, r5, r6
   3aa90:	sub	r6, r1, r0
   3aa94:	cmp	r5, r6
   3aa98:	bhi	3aa5c <flatcc_json_printer_int64_vector_field@@Base+0x24c>
   3aa9c:	mov	r1, #32
   3aaa0:	mov	r2, r5
   3aaa4:	bl	14ef0 <memset@plt>
   3aaa8:	ldr	r0, [r4, #20]
   3aaac:	add	r2, r0, r5
   3aab0:	str	r2, [r4, #20]
   3aab4:	b	3aad8 <flatcc_json_printer_int64_vector_field@@Base+0x2c8>
   3aab8:	ldr	r0, [r4, #16]
   3aabc:	cmp	r2, r0
   3aac0:	bcc	3aad8 <flatcc_json_printer_int64_vector_field@@Base+0x2c8>
   3aac4:	ldr	r2, [r4, #44]	; 0x2c
   3aac8:	mov	r0, r4
   3aacc:	mov	r1, #0
   3aad0:	blx	r2
   3aad4:	ldr	r2, [r4, #20]
   3aad8:	ldrd	r0, [r7]
   3aadc:	sub	r9, r9, #1
   3aae0:	lsr	r5, r1, #31
   3aae4:	cmn	r1, #1
   3aae8:	bgt	3aafc <flatcc_json_printer_int64_vector_field@@Base+0x2ec>
   3aaec:	mov	r3, #45	; 0x2d
   3aaf0:	rsbs	r0, r0, #0
   3aaf4:	strb	r3, [r2], #1
   3aaf8:	rsc	r1, r1, #0
   3aafc:	bl	36134 <flatcc_json_printer_uint64@@Base+0x30>
   3ab00:	ldr	r1, [r4, #20]
   3ab04:	add	r0, r0, r5
   3ab08:	add	r7, r7, #8
   3ab0c:	cmp	r9, #0
   3ab10:	add	r0, r1, r0
   3ab14:	str	r0, [r4, #20]
   3ab18:	bne	3a9e8 <flatcc_json_printer_int64_vector_field@@Base+0x1d8>
   3ab1c:	ldrb	r1, [r4, #25]
   3ab20:	ldr	r0, [r4, #20]
   3ab24:	cmp	r1, #0
   3ab28:	beq	3abe8 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   3ab2c:	add	r1, r0, #1
   3ab30:	str	r1, [r4, #20]
   3ab34:	mov	r1, #10
   3ab38:	strb	r1, [r0]
   3ab3c:	ldr	r0, [r4, #32]
   3ab40:	sub	r2, r0, #1
   3ab44:	str	r2, [r4, #32]
   3ab48:	ldrb	r3, [r4, #25]
   3ab4c:	ldr	r0, [r4, #20]
   3ab50:	ldr	r1, [r4, #16]
   3ab54:	mla	r7, r2, r3, r0
   3ab58:	mul	r5, r2, r3
   3ab5c:	cmp	r7, r1
   3ab60:	bls	3abd0 <flatcc_json_printer_int64_vector_field@@Base+0x3c0>
   3ab64:	cmp	r0, r1
   3ab68:	bcc	3ab84 <flatcc_json_printer_int64_vector_field@@Base+0x374>
   3ab6c:	ldr	r2, [r4, #44]	; 0x2c
   3ab70:	mov	r0, r4
   3ab74:	mov	r1, #0
   3ab78:	blx	r2
   3ab7c:	ldr	r1, [r4, #16]
   3ab80:	ldr	r0, [r4, #20]
   3ab84:	sub	r6, r1, r0
   3ab88:	cmp	r6, r5
   3ab8c:	bcs	3abd0 <flatcc_json_printer_int64_vector_field@@Base+0x3c0>
   3ab90:	mov	r1, #32
   3ab94:	mov	r2, r6
   3ab98:	bl	14ef0 <memset@plt>
   3ab9c:	ldr	r0, [r4, #20]
   3aba0:	ldr	r2, [r4, #44]	; 0x2c
   3aba4:	mov	r1, #0
   3aba8:	add	r0, r0, r6
   3abac:	str	r0, [r4, #20]
   3abb0:	mov	r0, r4
   3abb4:	blx	r2
   3abb8:	ldr	r1, [r4, #16]
   3abbc:	ldr	r0, [r4, #20]
   3abc0:	sub	r5, r5, r6
   3abc4:	sub	r6, r1, r0
   3abc8:	cmp	r5, r6
   3abcc:	bhi	3ab90 <flatcc_json_printer_int64_vector_field@@Base+0x380>
   3abd0:	mov	r1, #32
   3abd4:	mov	r2, r5
   3abd8:	bl	14ef0 <memset@plt>
   3abdc:	ldr	r0, [r4, #20]
   3abe0:	add	r0, r0, r5
   3abe4:	str	r0, [r4, #20]
   3abe8:	add	r1, r0, #1
   3abec:	str	r1, [r4, #20]
   3abf0:	mov	r1, #93	; 0x5d
   3abf4:	strb	r1, [r0]
   3abf8:	sub	sp, fp, #28
   3abfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ac00 <flatcc_json_printer_bool_vector_field@@Base>:
   3ac00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ac04:	add	fp, sp, #28
   3ac08:	sub	sp, sp, #4
   3ac0c:	mov	r4, r0
   3ac10:	mov	r0, #4
   3ac14:	add	r0, r0, r2, lsl #1
   3ac18:	ldr	r2, [r1, #8]
   3ac1c:	cmp	r0, r2
   3ac20:	bge	3b018 <flatcc_json_printer_bool_vector_field@@Base+0x418>
   3ac24:	ldr	r2, [r1, #4]
   3ac28:	add	r0, r2, r0
   3ac2c:	ldrh	r0, [r0]
   3ac30:	cmp	r0, #0
   3ac34:	ldrne	r2, [r1]
   3ac38:	addsne	r8, r2, r0
   3ac3c:	beq	3b018 <flatcc_json_printer_bool_vector_field@@Base+0x418>
   3ac40:	ldr	r0, [r1, #16]
   3ac44:	ldr	r2, [fp, #8]
   3ac48:	add	r7, r0, #1
   3ac4c:	cmp	r0, #0
   3ac50:	str	r7, [r1, #16]
   3ac54:	ldrne	r0, [r4, #20]
   3ac58:	addne	r1, r0, #1
   3ac5c:	strne	r1, [r4, #20]
   3ac60:	movne	r1, #44	; 0x2c
   3ac64:	strbne	r1, [r0]
   3ac68:	mov	r1, r3
   3ac6c:	ldr	r0, [r8]
   3ac70:	ldr	r7, [r8, r0]!
   3ac74:	mov	r0, r4
   3ac78:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3ac7c:	ldr	r1, [r4, #32]
   3ac80:	ldr	r0, [r4, #20]
   3ac84:	cmp	r7, #0
   3ac88:	add	r1, r1, #1
   3ac8c:	str	r1, [r4, #32]
   3ac90:	add	r1, r0, #1
   3ac94:	str	r1, [r4, #20]
   3ac98:	mov	r1, #91	; 0x5b
   3ac9c:	strb	r1, [r0]
   3aca0:	beq	3af3c <flatcc_json_printer_bool_vector_field@@Base+0x33c>
   3aca4:	ldrb	r1, [r4, #25]
   3aca8:	ldr	r0, [r4, #20]
   3acac:	cmp	r1, #0
   3acb0:	beq	3ad6c <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   3acb4:	add	r1, r0, #1
   3acb8:	str	r1, [r4, #20]
   3acbc:	mov	r1, #10
   3acc0:	strb	r1, [r0]
   3acc4:	ldr	r0, [r4, #20]
   3acc8:	ldrb	r2, [r4, #25]
   3accc:	ldr	r3, [r4, #32]
   3acd0:	ldr	r1, [r4, #16]
   3acd4:	mla	r6, r3, r2, r0
   3acd8:	mul	r5, r3, r2
   3acdc:	cmp	r6, r1
   3ace0:	bls	3ad50 <flatcc_json_printer_bool_vector_field@@Base+0x150>
   3ace4:	cmp	r0, r1
   3ace8:	bcc	3ad04 <flatcc_json_printer_bool_vector_field@@Base+0x104>
   3acec:	ldr	r2, [r4, #44]	; 0x2c
   3acf0:	mov	r0, r4
   3acf4:	mov	r1, #0
   3acf8:	blx	r2
   3acfc:	ldr	r1, [r4, #16]
   3ad00:	ldr	r0, [r4, #20]
   3ad04:	sub	r6, r1, r0
   3ad08:	cmp	r6, r5
   3ad0c:	bcs	3ad50 <flatcc_json_printer_bool_vector_field@@Base+0x150>
   3ad10:	mov	r1, #32
   3ad14:	mov	r2, r6
   3ad18:	bl	14ef0 <memset@plt>
   3ad1c:	ldr	r0, [r4, #20]
   3ad20:	ldr	r2, [r4, #44]	; 0x2c
   3ad24:	mov	r1, #0
   3ad28:	add	r0, r0, r6
   3ad2c:	str	r0, [r4, #20]
   3ad30:	mov	r0, r4
   3ad34:	blx	r2
   3ad38:	ldr	r1, [r4, #16]
   3ad3c:	ldr	r0, [r4, #20]
   3ad40:	sub	r5, r5, r6
   3ad44:	sub	r6, r1, r0
   3ad48:	cmp	r5, r6
   3ad4c:	bhi	3ad10 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   3ad50:	mov	r1, #32
   3ad54:	mov	r2, r5
   3ad58:	bl	14ef0 <memset@plt>
   3ad5c:	ldr	r0, [r4, #20]
   3ad60:	add	r0, r0, r5
   3ad64:	str	r0, [r4, #20]
   3ad68:	b	3ad8c <flatcc_json_printer_bool_vector_field@@Base+0x18c>
   3ad6c:	ldr	r1, [r4, #16]
   3ad70:	cmp	r0, r1
   3ad74:	bcc	3ad8c <flatcc_json_printer_bool_vector_field@@Base+0x18c>
   3ad78:	ldr	r2, [r4, #44]	; 0x2c
   3ad7c:	mov	r0, r4
   3ad80:	mov	r1, #0
   3ad84:	blx	r2
   3ad88:	ldr	r0, [r4, #20]
   3ad8c:	ldrb	r1, [r8, #4]
   3ad90:	cmp	r1, #0
   3ad94:	beq	3adb4 <flatcc_json_printer_bool_vector_field@@Base+0x1b4>
   3ad98:	mov	r1, #0
   3ad9c:	strb	r1, [r0, #4]
   3ada0:	movw	r1, #29300	; 0x7274
   3ada4:	movt	r1, #25973	; 0x6575
   3ada8:	str	r1, [r0]
   3adac:	mov	r0, #4
   3adb0:	b	3adcc <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   3adb4:	mov	r1, #101	; 0x65
   3adb8:	strh	r1, [r0, #4]
   3adbc:	movw	r1, #24934	; 0x6166
   3adc0:	movt	r1, #29548	; 0x736c
   3adc4:	str	r1, [r0]
   3adc8:	mov	r0, #5
   3adcc:	ldr	r1, [r4, #20]
   3add0:	subs	r9, r7, #1
   3add4:	add	r0, r1, r0
   3add8:	str	r0, [r4, #20]
   3addc:	beq	3af3c <flatcc_json_printer_bool_vector_field@@Base+0x33c>
   3ade0:	ldr	r0, [r4, #20]
   3ade4:	add	r7, r8, #5
   3ade8:	mov	r8, #44	; 0x2c
   3adec:	mov	sl, #10
   3adf0:	add	r1, r0, #1
   3adf4:	str	r1, [r4, #20]
   3adf8:	strb	r8, [r0]
   3adfc:	ldrb	r1, [r4, #25]
   3ae00:	ldr	r0, [r4, #20]
   3ae04:	cmp	r1, #0
   3ae08:	beq	3aec0 <flatcc_json_printer_bool_vector_field@@Base+0x2c0>
   3ae0c:	add	r1, r0, #1
   3ae10:	str	r1, [r4, #20]
   3ae14:	strb	sl, [r0]
   3ae18:	ldr	r0, [r4, #20]
   3ae1c:	ldrb	r2, [r4, #25]
   3ae20:	ldr	r3, [r4, #32]
   3ae24:	ldr	r1, [r4, #16]
   3ae28:	mla	r6, r3, r2, r0
   3ae2c:	mul	r5, r3, r2
   3ae30:	cmp	r6, r1
   3ae34:	bls	3aea4 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   3ae38:	cmp	r0, r1
   3ae3c:	bcc	3ae58 <flatcc_json_printer_bool_vector_field@@Base+0x258>
   3ae40:	ldr	r2, [r4, #44]	; 0x2c
   3ae44:	mov	r0, r4
   3ae48:	mov	r1, #0
   3ae4c:	blx	r2
   3ae50:	ldr	r1, [r4, #16]
   3ae54:	ldr	r0, [r4, #20]
   3ae58:	sub	r6, r1, r0
   3ae5c:	cmp	r6, r5
   3ae60:	bcs	3aea4 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   3ae64:	mov	r1, #32
   3ae68:	mov	r2, r6
   3ae6c:	bl	14ef0 <memset@plt>
   3ae70:	ldr	r0, [r4, #20]
   3ae74:	ldr	r2, [r4, #44]	; 0x2c
   3ae78:	mov	r1, #0
   3ae7c:	add	r0, r0, r6
   3ae80:	str	r0, [r4, #20]
   3ae84:	mov	r0, r4
   3ae88:	blx	r2
   3ae8c:	ldr	r1, [r4, #16]
   3ae90:	ldr	r0, [r4, #20]
   3ae94:	sub	r5, r5, r6
   3ae98:	sub	r6, r1, r0
   3ae9c:	cmp	r5, r6
   3aea0:	bhi	3ae64 <flatcc_json_printer_bool_vector_field@@Base+0x264>
   3aea4:	mov	r1, #32
   3aea8:	mov	r2, r5
   3aeac:	bl	14ef0 <memset@plt>
   3aeb0:	ldr	r0, [r4, #20]
   3aeb4:	add	r0, r0, r5
   3aeb8:	str	r0, [r4, #20]
   3aebc:	b	3aee0 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
   3aec0:	ldr	r1, [r4, #16]
   3aec4:	cmp	r0, r1
   3aec8:	bcc	3aee0 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
   3aecc:	ldr	r2, [r4, #44]	; 0x2c
   3aed0:	mov	r0, r4
   3aed4:	mov	r1, #0
   3aed8:	blx	r2
   3aedc:	ldr	r0, [r4, #20]
   3aee0:	ldrb	r1, [r7]
   3aee4:	sub	r9, r9, #1
   3aee8:	cmp	r1, #0
   3aeec:	beq	3af0c <flatcc_json_printer_bool_vector_field@@Base+0x30c>
   3aef0:	mov	r1, #0
   3aef4:	strb	r1, [r0, #4]
   3aef8:	movw	r1, #29300	; 0x7274
   3aefc:	movt	r1, #25973	; 0x6575
   3af00:	str	r1, [r0]
   3af04:	mov	r0, #4
   3af08:	b	3af24 <flatcc_json_printer_bool_vector_field@@Base+0x324>
   3af0c:	mov	r1, #101	; 0x65
   3af10:	strh	r1, [r0, #4]
   3af14:	movw	r1, #24934	; 0x6166
   3af18:	movt	r1, #29548	; 0x736c
   3af1c:	str	r1, [r0]
   3af20:	mov	r0, #5
   3af24:	ldr	r1, [r4, #20]
   3af28:	add	r7, r7, #1
   3af2c:	cmp	r9, #0
   3af30:	add	r0, r1, r0
   3af34:	str	r0, [r4, #20]
   3af38:	bne	3adf0 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
   3af3c:	ldrb	r1, [r4, #25]
   3af40:	ldr	r0, [r4, #20]
   3af44:	cmp	r1, #0
   3af48:	beq	3b008 <flatcc_json_printer_bool_vector_field@@Base+0x408>
   3af4c:	add	r1, r0, #1
   3af50:	str	r1, [r4, #20]
   3af54:	mov	r1, #10
   3af58:	strb	r1, [r0]
   3af5c:	ldr	r0, [r4, #32]
   3af60:	sub	r2, r0, #1
   3af64:	str	r2, [r4, #32]
   3af68:	ldrb	r3, [r4, #25]
   3af6c:	ldr	r0, [r4, #20]
   3af70:	ldr	r1, [r4, #16]
   3af74:	mla	r7, r2, r3, r0
   3af78:	mul	r5, r2, r3
   3af7c:	cmp	r7, r1
   3af80:	bls	3aff0 <flatcc_json_printer_bool_vector_field@@Base+0x3f0>
   3af84:	cmp	r0, r1
   3af88:	bcc	3afa4 <flatcc_json_printer_bool_vector_field@@Base+0x3a4>
   3af8c:	ldr	r2, [r4, #44]	; 0x2c
   3af90:	mov	r0, r4
   3af94:	mov	r1, #0
   3af98:	blx	r2
   3af9c:	ldr	r1, [r4, #16]
   3afa0:	ldr	r0, [r4, #20]
   3afa4:	sub	r6, r1, r0
   3afa8:	cmp	r6, r5
   3afac:	bcs	3aff0 <flatcc_json_printer_bool_vector_field@@Base+0x3f0>
   3afb0:	mov	r1, #32
   3afb4:	mov	r2, r6
   3afb8:	bl	14ef0 <memset@plt>
   3afbc:	ldr	r0, [r4, #20]
   3afc0:	ldr	r2, [r4, #44]	; 0x2c
   3afc4:	mov	r1, #0
   3afc8:	add	r0, r0, r6
   3afcc:	str	r0, [r4, #20]
   3afd0:	mov	r0, r4
   3afd4:	blx	r2
   3afd8:	ldr	r1, [r4, #16]
   3afdc:	ldr	r0, [r4, #20]
   3afe0:	sub	r5, r5, r6
   3afe4:	sub	r6, r1, r0
   3afe8:	cmp	r5, r6
   3afec:	bhi	3afb0 <flatcc_json_printer_bool_vector_field@@Base+0x3b0>
   3aff0:	mov	r1, #32
   3aff4:	mov	r2, r5
   3aff8:	bl	14ef0 <memset@plt>
   3affc:	ldr	r0, [r4, #20]
   3b000:	add	r0, r0, r5
   3b004:	str	r0, [r4, #20]
   3b008:	add	r1, r0, #1
   3b00c:	str	r1, [r4, #20]
   3b010:	mov	r1, #93	; 0x5d
   3b014:	strb	r1, [r0]
   3b018:	sub	sp, fp, #28
   3b01c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b020 <flatcc_json_printer_float_vector_field@@Base>:
   3b020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b024:	add	fp, sp, #28
   3b028:	sub	sp, sp, #4
   3b02c:	mov	r4, r0
   3b030:	mov	r0, #4
   3b034:	add	r0, r0, r2, lsl #1
   3b038:	ldr	r2, [r1, #8]
   3b03c:	cmp	r0, r2
   3b040:	bge	3b3d0 <flatcc_json_printer_float_vector_field@@Base+0x3b0>
   3b044:	ldr	r2, [r1, #4]
   3b048:	add	r0, r2, r0
   3b04c:	ldrh	r0, [r0]
   3b050:	cmp	r0, #0
   3b054:	ldrne	r2, [r1]
   3b058:	addsne	r8, r2, r0
   3b05c:	beq	3b3d0 <flatcc_json_printer_float_vector_field@@Base+0x3b0>
   3b060:	ldr	r0, [r1, #16]
   3b064:	ldr	r2, [fp, #8]
   3b068:	add	r7, r0, #1
   3b06c:	cmp	r0, #0
   3b070:	str	r7, [r1, #16]
   3b074:	ldrne	r0, [r4, #20]
   3b078:	addne	r1, r0, #1
   3b07c:	strne	r1, [r4, #20]
   3b080:	movne	r1, #44	; 0x2c
   3b084:	strbne	r1, [r0]
   3b088:	mov	r1, r3
   3b08c:	ldr	r0, [r8]
   3b090:	ldr	r7, [r8, r0]!
   3b094:	mov	r0, r4
   3b098:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3b09c:	ldr	r1, [r4, #32]
   3b0a0:	ldr	r0, [r4, #20]
   3b0a4:	cmp	r7, #0
   3b0a8:	add	r1, r1, #1
   3b0ac:	str	r1, [r4, #32]
   3b0b0:	add	r1, r0, #1
   3b0b4:	str	r1, [r4, #20]
   3b0b8:	mov	r1, #91	; 0x5b
   3b0bc:	strb	r1, [r0]
   3b0c0:	beq	3b2f4 <flatcc_json_printer_float_vector_field@@Base+0x2d4>
   3b0c4:	ldrb	r1, [r4, #25]
   3b0c8:	ldr	r0, [r4, #20]
   3b0cc:	cmp	r1, #0
   3b0d0:	beq	3b18c <flatcc_json_printer_float_vector_field@@Base+0x16c>
   3b0d4:	add	r1, r0, #1
   3b0d8:	str	r1, [r4, #20]
   3b0dc:	mov	r1, #10
   3b0e0:	strb	r1, [r0]
   3b0e4:	ldr	r0, [r4, #20]
   3b0e8:	ldrb	r2, [r4, #25]
   3b0ec:	ldr	r3, [r4, #32]
   3b0f0:	ldr	r1, [r4, #16]
   3b0f4:	mla	r6, r3, r2, r0
   3b0f8:	mul	r5, r3, r2
   3b0fc:	cmp	r6, r1
   3b100:	bls	3b170 <flatcc_json_printer_float_vector_field@@Base+0x150>
   3b104:	cmp	r0, r1
   3b108:	bcc	3b124 <flatcc_json_printer_float_vector_field@@Base+0x104>
   3b10c:	ldr	r2, [r4, #44]	; 0x2c
   3b110:	mov	r0, r4
   3b114:	mov	r1, #0
   3b118:	blx	r2
   3b11c:	ldr	r1, [r4, #16]
   3b120:	ldr	r0, [r4, #20]
   3b124:	sub	r6, r1, r0
   3b128:	cmp	r6, r5
   3b12c:	bcs	3b170 <flatcc_json_printer_float_vector_field@@Base+0x150>
   3b130:	mov	r1, #32
   3b134:	mov	r2, r6
   3b138:	bl	14ef0 <memset@plt>
   3b13c:	ldr	r0, [r4, #20]
   3b140:	ldr	r2, [r4, #44]	; 0x2c
   3b144:	mov	r1, #0
   3b148:	add	r0, r0, r6
   3b14c:	str	r0, [r4, #20]
   3b150:	mov	r0, r4
   3b154:	blx	r2
   3b158:	ldr	r1, [r4, #16]
   3b15c:	ldr	r0, [r4, #20]
   3b160:	sub	r5, r5, r6
   3b164:	sub	r6, r1, r0
   3b168:	cmp	r5, r6
   3b16c:	bhi	3b130 <flatcc_json_printer_float_vector_field@@Base+0x110>
   3b170:	mov	r1, #32
   3b174:	mov	r2, r5
   3b178:	bl	14ef0 <memset@plt>
   3b17c:	ldr	r0, [r4, #20]
   3b180:	add	r0, r0, r5
   3b184:	str	r0, [r4, #20]
   3b188:	b	3b1ac <flatcc_json_printer_float_vector_field@@Base+0x18c>
   3b18c:	ldr	r1, [r4, #16]
   3b190:	cmp	r0, r1
   3b194:	bcc	3b1ac <flatcc_json_printer_float_vector_field@@Base+0x18c>
   3b198:	ldr	r2, [r4, #44]	; 0x2c
   3b19c:	mov	r0, r4
   3b1a0:	mov	r1, #0
   3b1a4:	blx	r2
   3b1a8:	ldr	r0, [r4, #20]
   3b1ac:	vldr	s0, [r8, #4]
   3b1b0:	vcvt.f64.f32	d0, s0
   3b1b4:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b1b8:	ldr	r1, [r4, #20]
   3b1bc:	subs	r9, r7, #1
   3b1c0:	add	r0, r1, r0
   3b1c4:	str	r0, [r4, #20]
   3b1c8:	beq	3b2f4 <flatcc_json_printer_float_vector_field@@Base+0x2d4>
   3b1cc:	ldr	r0, [r4, #20]
   3b1d0:	add	r7, r8, #8
   3b1d4:	mov	r8, #44	; 0x2c
   3b1d8:	mov	sl, #10
   3b1dc:	add	r1, r0, #1
   3b1e0:	sub	r9, r9, #1
   3b1e4:	str	r1, [r4, #20]
   3b1e8:	strb	r8, [r0]
   3b1ec:	ldrb	r1, [r4, #25]
   3b1f0:	ldr	r0, [r4, #20]
   3b1f4:	cmp	r1, #0
   3b1f8:	beq	3b2b0 <flatcc_json_printer_float_vector_field@@Base+0x290>
   3b1fc:	add	r1, r0, #1
   3b200:	str	r1, [r4, #20]
   3b204:	strb	sl, [r0]
   3b208:	ldr	r0, [r4, #20]
   3b20c:	ldrb	r2, [r4, #25]
   3b210:	ldr	r3, [r4, #32]
   3b214:	ldr	r1, [r4, #16]
   3b218:	mla	r6, r3, r2, r0
   3b21c:	mul	r5, r3, r2
   3b220:	cmp	r6, r1
   3b224:	bls	3b294 <flatcc_json_printer_float_vector_field@@Base+0x274>
   3b228:	cmp	r0, r1
   3b22c:	bcc	3b248 <flatcc_json_printer_float_vector_field@@Base+0x228>
   3b230:	ldr	r2, [r4, #44]	; 0x2c
   3b234:	mov	r0, r4
   3b238:	mov	r1, #0
   3b23c:	blx	r2
   3b240:	ldr	r1, [r4, #16]
   3b244:	ldr	r0, [r4, #20]
   3b248:	sub	r6, r1, r0
   3b24c:	cmp	r6, r5
   3b250:	bcs	3b294 <flatcc_json_printer_float_vector_field@@Base+0x274>
   3b254:	mov	r1, #32
   3b258:	mov	r2, r6
   3b25c:	bl	14ef0 <memset@plt>
   3b260:	ldr	r0, [r4, #20]
   3b264:	ldr	r2, [r4, #44]	; 0x2c
   3b268:	mov	r1, #0
   3b26c:	add	r0, r0, r6
   3b270:	str	r0, [r4, #20]
   3b274:	mov	r0, r4
   3b278:	blx	r2
   3b27c:	ldr	r1, [r4, #16]
   3b280:	ldr	r0, [r4, #20]
   3b284:	sub	r5, r5, r6
   3b288:	sub	r6, r1, r0
   3b28c:	cmp	r5, r6
   3b290:	bhi	3b254 <flatcc_json_printer_float_vector_field@@Base+0x234>
   3b294:	mov	r1, #32
   3b298:	mov	r2, r5
   3b29c:	bl	14ef0 <memset@plt>
   3b2a0:	ldr	r0, [r4, #20]
   3b2a4:	add	r0, r0, r5
   3b2a8:	str	r0, [r4, #20]
   3b2ac:	b	3b2d0 <flatcc_json_printer_float_vector_field@@Base+0x2b0>
   3b2b0:	ldr	r1, [r4, #16]
   3b2b4:	cmp	r0, r1
   3b2b8:	bcc	3b2d0 <flatcc_json_printer_float_vector_field@@Base+0x2b0>
   3b2bc:	ldr	r2, [r4, #44]	; 0x2c
   3b2c0:	mov	r0, r4
   3b2c4:	mov	r1, #0
   3b2c8:	blx	r2
   3b2cc:	ldr	r0, [r4, #20]
   3b2d0:	vldr	s0, [r7]
   3b2d4:	vcvt.f64.f32	d0, s0
   3b2d8:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b2dc:	ldr	r1, [r4, #20]
   3b2e0:	add	r7, r7, #4
   3b2e4:	cmp	r9, #0
   3b2e8:	add	r0, r1, r0
   3b2ec:	str	r0, [r4, #20]
   3b2f0:	bne	3b1dc <flatcc_json_printer_float_vector_field@@Base+0x1bc>
   3b2f4:	ldrb	r1, [r4, #25]
   3b2f8:	ldr	r0, [r4, #20]
   3b2fc:	cmp	r1, #0
   3b300:	beq	3b3c0 <flatcc_json_printer_float_vector_field@@Base+0x3a0>
   3b304:	add	r1, r0, #1
   3b308:	str	r1, [r4, #20]
   3b30c:	mov	r1, #10
   3b310:	strb	r1, [r0]
   3b314:	ldr	r0, [r4, #32]
   3b318:	sub	r2, r0, #1
   3b31c:	str	r2, [r4, #32]
   3b320:	ldrb	r3, [r4, #25]
   3b324:	ldr	r0, [r4, #20]
   3b328:	ldr	r1, [r4, #16]
   3b32c:	mla	r7, r2, r3, r0
   3b330:	mul	r5, r2, r3
   3b334:	cmp	r7, r1
   3b338:	bls	3b3a8 <flatcc_json_printer_float_vector_field@@Base+0x388>
   3b33c:	cmp	r0, r1
   3b340:	bcc	3b35c <flatcc_json_printer_float_vector_field@@Base+0x33c>
   3b344:	ldr	r2, [r4, #44]	; 0x2c
   3b348:	mov	r0, r4
   3b34c:	mov	r1, #0
   3b350:	blx	r2
   3b354:	ldr	r1, [r4, #16]
   3b358:	ldr	r0, [r4, #20]
   3b35c:	sub	r6, r1, r0
   3b360:	cmp	r6, r5
   3b364:	bcs	3b3a8 <flatcc_json_printer_float_vector_field@@Base+0x388>
   3b368:	mov	r1, #32
   3b36c:	mov	r2, r6
   3b370:	bl	14ef0 <memset@plt>
   3b374:	ldr	r0, [r4, #20]
   3b378:	ldr	r2, [r4, #44]	; 0x2c
   3b37c:	mov	r1, #0
   3b380:	add	r0, r0, r6
   3b384:	str	r0, [r4, #20]
   3b388:	mov	r0, r4
   3b38c:	blx	r2
   3b390:	ldr	r1, [r4, #16]
   3b394:	ldr	r0, [r4, #20]
   3b398:	sub	r5, r5, r6
   3b39c:	sub	r6, r1, r0
   3b3a0:	cmp	r5, r6
   3b3a4:	bhi	3b368 <flatcc_json_printer_float_vector_field@@Base+0x348>
   3b3a8:	mov	r1, #32
   3b3ac:	mov	r2, r5
   3b3b0:	bl	14ef0 <memset@plt>
   3b3b4:	ldr	r0, [r4, #20]
   3b3b8:	add	r0, r0, r5
   3b3bc:	str	r0, [r4, #20]
   3b3c0:	add	r1, r0, #1
   3b3c4:	str	r1, [r4, #20]
   3b3c8:	mov	r1, #93	; 0x5d
   3b3cc:	strb	r1, [r0]
   3b3d0:	sub	sp, fp, #28
   3b3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b3d8 <flatcc_json_printer_double_vector_field@@Base>:
   3b3d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b3dc:	add	fp, sp, #28
   3b3e0:	sub	sp, sp, #4
   3b3e4:	mov	r4, r0
   3b3e8:	mov	r0, #4
   3b3ec:	add	r0, r0, r2, lsl #1
   3b3f0:	ldr	r2, [r1, #8]
   3b3f4:	cmp	r0, r2
   3b3f8:	bge	3b780 <flatcc_json_printer_double_vector_field@@Base+0x3a8>
   3b3fc:	ldr	r2, [r1, #4]
   3b400:	add	r0, r2, r0
   3b404:	ldrh	r0, [r0]
   3b408:	cmp	r0, #0
   3b40c:	ldrne	r2, [r1]
   3b410:	addsne	r8, r2, r0
   3b414:	beq	3b780 <flatcc_json_printer_double_vector_field@@Base+0x3a8>
   3b418:	ldr	r0, [r1, #16]
   3b41c:	ldr	r2, [fp, #8]
   3b420:	add	r7, r0, #1
   3b424:	cmp	r0, #0
   3b428:	str	r7, [r1, #16]
   3b42c:	ldrne	r0, [r4, #20]
   3b430:	addne	r1, r0, #1
   3b434:	strne	r1, [r4, #20]
   3b438:	movne	r1, #44	; 0x2c
   3b43c:	strbne	r1, [r0]
   3b440:	mov	r1, r3
   3b444:	ldr	r0, [r8]
   3b448:	ldr	r7, [r8, r0]!
   3b44c:	mov	r0, r4
   3b450:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3b454:	ldr	r1, [r4, #32]
   3b458:	ldr	r0, [r4, #20]
   3b45c:	cmp	r7, #0
   3b460:	add	r1, r1, #1
   3b464:	str	r1, [r4, #32]
   3b468:	add	r1, r0, #1
   3b46c:	str	r1, [r4, #20]
   3b470:	mov	r1, #91	; 0x5b
   3b474:	strb	r1, [r0]
   3b478:	beq	3b6a4 <flatcc_json_printer_double_vector_field@@Base+0x2cc>
   3b47c:	ldrb	r1, [r4, #25]
   3b480:	ldr	r0, [r4, #20]
   3b484:	cmp	r1, #0
   3b488:	beq	3b544 <flatcc_json_printer_double_vector_field@@Base+0x16c>
   3b48c:	add	r1, r0, #1
   3b490:	str	r1, [r4, #20]
   3b494:	mov	r1, #10
   3b498:	strb	r1, [r0]
   3b49c:	ldr	r0, [r4, #20]
   3b4a0:	ldrb	r2, [r4, #25]
   3b4a4:	ldr	r3, [r4, #32]
   3b4a8:	ldr	r1, [r4, #16]
   3b4ac:	mla	r6, r3, r2, r0
   3b4b0:	mul	r5, r3, r2
   3b4b4:	cmp	r6, r1
   3b4b8:	bls	3b528 <flatcc_json_printer_double_vector_field@@Base+0x150>
   3b4bc:	cmp	r0, r1
   3b4c0:	bcc	3b4dc <flatcc_json_printer_double_vector_field@@Base+0x104>
   3b4c4:	ldr	r2, [r4, #44]	; 0x2c
   3b4c8:	mov	r0, r4
   3b4cc:	mov	r1, #0
   3b4d0:	blx	r2
   3b4d4:	ldr	r1, [r4, #16]
   3b4d8:	ldr	r0, [r4, #20]
   3b4dc:	sub	r6, r1, r0
   3b4e0:	cmp	r6, r5
   3b4e4:	bcs	3b528 <flatcc_json_printer_double_vector_field@@Base+0x150>
   3b4e8:	mov	r1, #32
   3b4ec:	mov	r2, r6
   3b4f0:	bl	14ef0 <memset@plt>
   3b4f4:	ldr	r0, [r4, #20]
   3b4f8:	ldr	r2, [r4, #44]	; 0x2c
   3b4fc:	mov	r1, #0
   3b500:	add	r0, r0, r6
   3b504:	str	r0, [r4, #20]
   3b508:	mov	r0, r4
   3b50c:	blx	r2
   3b510:	ldr	r1, [r4, #16]
   3b514:	ldr	r0, [r4, #20]
   3b518:	sub	r5, r5, r6
   3b51c:	sub	r6, r1, r0
   3b520:	cmp	r5, r6
   3b524:	bhi	3b4e8 <flatcc_json_printer_double_vector_field@@Base+0x110>
   3b528:	mov	r1, #32
   3b52c:	mov	r2, r5
   3b530:	bl	14ef0 <memset@plt>
   3b534:	ldr	r0, [r4, #20]
   3b538:	add	r0, r0, r5
   3b53c:	str	r0, [r4, #20]
   3b540:	b	3b564 <flatcc_json_printer_double_vector_field@@Base+0x18c>
   3b544:	ldr	r1, [r4, #16]
   3b548:	cmp	r0, r1
   3b54c:	bcc	3b564 <flatcc_json_printer_double_vector_field@@Base+0x18c>
   3b550:	ldr	r2, [r4, #44]	; 0x2c
   3b554:	mov	r0, r4
   3b558:	mov	r1, #0
   3b55c:	blx	r2
   3b560:	ldr	r0, [r4, #20]
   3b564:	vldr	d0, [r8, #4]
   3b568:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b56c:	ldr	r1, [r4, #20]
   3b570:	subs	r9, r7, #1
   3b574:	add	r0, r1, r0
   3b578:	str	r0, [r4, #20]
   3b57c:	beq	3b6a4 <flatcc_json_printer_double_vector_field@@Base+0x2cc>
   3b580:	ldr	r0, [r4, #20]
   3b584:	add	r7, r8, #12
   3b588:	mov	r8, #44	; 0x2c
   3b58c:	mov	sl, #10
   3b590:	add	r1, r0, #1
   3b594:	sub	r9, r9, #1
   3b598:	str	r1, [r4, #20]
   3b59c:	strb	r8, [r0]
   3b5a0:	ldrb	r1, [r4, #25]
   3b5a4:	ldr	r0, [r4, #20]
   3b5a8:	cmp	r1, #0
   3b5ac:	beq	3b664 <flatcc_json_printer_double_vector_field@@Base+0x28c>
   3b5b0:	add	r1, r0, #1
   3b5b4:	str	r1, [r4, #20]
   3b5b8:	strb	sl, [r0]
   3b5bc:	ldr	r0, [r4, #20]
   3b5c0:	ldrb	r2, [r4, #25]
   3b5c4:	ldr	r3, [r4, #32]
   3b5c8:	ldr	r1, [r4, #16]
   3b5cc:	mla	r6, r3, r2, r0
   3b5d0:	mul	r5, r3, r2
   3b5d4:	cmp	r6, r1
   3b5d8:	bls	3b648 <flatcc_json_printer_double_vector_field@@Base+0x270>
   3b5dc:	cmp	r0, r1
   3b5e0:	bcc	3b5fc <flatcc_json_printer_double_vector_field@@Base+0x224>
   3b5e4:	ldr	r2, [r4, #44]	; 0x2c
   3b5e8:	mov	r0, r4
   3b5ec:	mov	r1, #0
   3b5f0:	blx	r2
   3b5f4:	ldr	r1, [r4, #16]
   3b5f8:	ldr	r0, [r4, #20]
   3b5fc:	sub	r6, r1, r0
   3b600:	cmp	r6, r5
   3b604:	bcs	3b648 <flatcc_json_printer_double_vector_field@@Base+0x270>
   3b608:	mov	r1, #32
   3b60c:	mov	r2, r6
   3b610:	bl	14ef0 <memset@plt>
   3b614:	ldr	r0, [r4, #20]
   3b618:	ldr	r2, [r4, #44]	; 0x2c
   3b61c:	mov	r1, #0
   3b620:	add	r0, r0, r6
   3b624:	str	r0, [r4, #20]
   3b628:	mov	r0, r4
   3b62c:	blx	r2
   3b630:	ldr	r1, [r4, #16]
   3b634:	ldr	r0, [r4, #20]
   3b638:	sub	r5, r5, r6
   3b63c:	sub	r6, r1, r0
   3b640:	cmp	r5, r6
   3b644:	bhi	3b608 <flatcc_json_printer_double_vector_field@@Base+0x230>
   3b648:	mov	r1, #32
   3b64c:	mov	r2, r5
   3b650:	bl	14ef0 <memset@plt>
   3b654:	ldr	r0, [r4, #20]
   3b658:	add	r0, r0, r5
   3b65c:	str	r0, [r4, #20]
   3b660:	b	3b684 <flatcc_json_printer_double_vector_field@@Base+0x2ac>
   3b664:	ldr	r1, [r4, #16]
   3b668:	cmp	r0, r1
   3b66c:	bcc	3b684 <flatcc_json_printer_double_vector_field@@Base+0x2ac>
   3b670:	ldr	r2, [r4, #44]	; 0x2c
   3b674:	mov	r0, r4
   3b678:	mov	r1, #0
   3b67c:	blx	r2
   3b680:	ldr	r0, [r4, #20]
   3b684:	vldr	d0, [r7]
   3b688:	bl	34e60 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b68c:	ldr	r1, [r4, #20]
   3b690:	add	r7, r7, #8
   3b694:	cmp	r9, #0
   3b698:	add	r0, r1, r0
   3b69c:	str	r0, [r4, #20]
   3b6a0:	bne	3b590 <flatcc_json_printer_double_vector_field@@Base+0x1b8>
   3b6a4:	ldrb	r1, [r4, #25]
   3b6a8:	ldr	r0, [r4, #20]
   3b6ac:	cmp	r1, #0
   3b6b0:	beq	3b770 <flatcc_json_printer_double_vector_field@@Base+0x398>
   3b6b4:	add	r1, r0, #1
   3b6b8:	str	r1, [r4, #20]
   3b6bc:	mov	r1, #10
   3b6c0:	strb	r1, [r0]
   3b6c4:	ldr	r0, [r4, #32]
   3b6c8:	sub	r2, r0, #1
   3b6cc:	str	r2, [r4, #32]
   3b6d0:	ldrb	r3, [r4, #25]
   3b6d4:	ldr	r0, [r4, #20]
   3b6d8:	ldr	r1, [r4, #16]
   3b6dc:	mla	r7, r2, r3, r0
   3b6e0:	mul	r5, r2, r3
   3b6e4:	cmp	r7, r1
   3b6e8:	bls	3b758 <flatcc_json_printer_double_vector_field@@Base+0x380>
   3b6ec:	cmp	r0, r1
   3b6f0:	bcc	3b70c <flatcc_json_printer_double_vector_field@@Base+0x334>
   3b6f4:	ldr	r2, [r4, #44]	; 0x2c
   3b6f8:	mov	r0, r4
   3b6fc:	mov	r1, #0
   3b700:	blx	r2
   3b704:	ldr	r1, [r4, #16]
   3b708:	ldr	r0, [r4, #20]
   3b70c:	sub	r6, r1, r0
   3b710:	cmp	r6, r5
   3b714:	bcs	3b758 <flatcc_json_printer_double_vector_field@@Base+0x380>
   3b718:	mov	r1, #32
   3b71c:	mov	r2, r6
   3b720:	bl	14ef0 <memset@plt>
   3b724:	ldr	r0, [r4, #20]
   3b728:	ldr	r2, [r4, #44]	; 0x2c
   3b72c:	mov	r1, #0
   3b730:	add	r0, r0, r6
   3b734:	str	r0, [r4, #20]
   3b738:	mov	r0, r4
   3b73c:	blx	r2
   3b740:	ldr	r1, [r4, #16]
   3b744:	ldr	r0, [r4, #20]
   3b748:	sub	r5, r5, r6
   3b74c:	sub	r6, r1, r0
   3b750:	cmp	r5, r6
   3b754:	bhi	3b718 <flatcc_json_printer_double_vector_field@@Base+0x340>
   3b758:	mov	r1, #32
   3b75c:	mov	r2, r5
   3b760:	bl	14ef0 <memset@plt>
   3b764:	ldr	r0, [r4, #20]
   3b768:	add	r0, r0, r5
   3b76c:	str	r0, [r4, #20]
   3b770:	add	r1, r0, #1
   3b774:	str	r1, [r4, #20]
   3b778:	mov	r1, #93	; 0x5d
   3b77c:	strb	r1, [r0]
   3b780:	sub	sp, fp, #28
   3b784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b788 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   3b788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b78c:	add	fp, sp, #28
   3b790:	sub	sp, sp, #4
   3b794:	mov	r4, r0
   3b798:	ldrb	r0, [r0, #27]
   3b79c:	cmp	r0, #0
   3b7a0:	beq	3b7b4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   3b7a4:	mov	r0, r4
   3b7a8:	sub	sp, fp, #28
   3b7ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b7b0:	b	389f0 <flatcc_json_printer_utype_vector_field@@Base>
   3b7b4:	mov	r0, #4
   3b7b8:	add	r0, r0, r2, lsl #1
   3b7bc:	ldr	r2, [r1, #8]
   3b7c0:	cmp	r0, r2
   3b7c4:	bge	3bb34 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3ac>
   3b7c8:	ldr	r2, [r1, #4]
   3b7cc:	add	r0, r2, r0
   3b7d0:	ldrh	r0, [r0]
   3b7d4:	cmp	r0, #0
   3b7d8:	ldrne	r2, [r1]
   3b7dc:	addsne	r8, r2, r0
   3b7e0:	beq	3bb34 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3ac>
   3b7e4:	ldr	r0, [r1, #16]
   3b7e8:	ldr	sl, [fp, #12]
   3b7ec:	ldr	r2, [fp, #8]
   3b7f0:	add	r7, r0, #1
   3b7f4:	cmp	r0, #0
   3b7f8:	str	r7, [r1, #16]
   3b7fc:	ldrne	r0, [r4, #20]
   3b800:	addne	r1, r0, #1
   3b804:	strne	r1, [r4, #20]
   3b808:	movne	r1, #44	; 0x2c
   3b80c:	strbne	r1, [r0]
   3b810:	mov	r1, r3
   3b814:	ldr	r0, [r8]
   3b818:	ldr	r9, [r8, r0]!
   3b81c:	mov	r0, r4
   3b820:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3b824:	ldr	r1, [r4, #32]
   3b828:	ldr	r0, [r4, #20]
   3b82c:	cmp	r9, #0
   3b830:	add	r1, r1, #1
   3b834:	str	r1, [r4, #32]
   3b838:	add	r1, r0, #1
   3b83c:	str	r1, [r4, #20]
   3b840:	mov	r1, #91	; 0x5b
   3b844:	strb	r1, [r0]
   3b848:	beq	3ba58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d0>
   3b84c:	ldrb	r1, [r4, #25]
   3b850:	ldr	r0, [r4, #20]
   3b854:	cmp	r1, #0
   3b858:	beq	3b914 <flatcc_json_printer_utype_enum_vector_field@@Base+0x18c>
   3b85c:	add	r1, r0, #1
   3b860:	str	r1, [r4, #20]
   3b864:	mov	r1, #10
   3b868:	strb	r1, [r0]
   3b86c:	ldr	r0, [r4, #20]
   3b870:	ldrb	r2, [r4, #25]
   3b874:	ldr	r3, [r4, #32]
   3b878:	ldr	r1, [r4, #16]
   3b87c:	mla	r7, r3, r2, r0
   3b880:	mul	r5, r3, r2
   3b884:	cmp	r7, r1
   3b888:	bls	3b8f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
   3b88c:	cmp	r0, r1
   3b890:	bcc	3b8ac <flatcc_json_printer_utype_enum_vector_field@@Base+0x124>
   3b894:	ldr	r2, [r4, #44]	; 0x2c
   3b898:	mov	r0, r4
   3b89c:	mov	r1, #0
   3b8a0:	blx	r2
   3b8a4:	ldr	r1, [r4, #16]
   3b8a8:	ldr	r0, [r4, #20]
   3b8ac:	sub	r6, r1, r0
   3b8b0:	cmp	r6, r5
   3b8b4:	bcs	3b8f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
   3b8b8:	mov	r1, #32
   3b8bc:	mov	r2, r6
   3b8c0:	bl	14ef0 <memset@plt>
   3b8c4:	ldr	r0, [r4, #20]
   3b8c8:	ldr	r2, [r4, #44]	; 0x2c
   3b8cc:	mov	r1, #0
   3b8d0:	add	r0, r0, r6
   3b8d4:	str	r0, [r4, #20]
   3b8d8:	mov	r0, r4
   3b8dc:	blx	r2
   3b8e0:	ldr	r1, [r4, #16]
   3b8e4:	ldr	r0, [r4, #20]
   3b8e8:	sub	r5, r5, r6
   3b8ec:	sub	r6, r1, r0
   3b8f0:	cmp	r5, r6
   3b8f4:	bhi	3b8b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   3b8f8:	mov	r1, #32
   3b8fc:	mov	r2, r5
   3b900:	bl	14ef0 <memset@plt>
   3b904:	ldr	r0, [r4, #20]
   3b908:	add	r0, r0, r5
   3b90c:	str	r0, [r4, #20]
   3b910:	b	3b930 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   3b914:	ldr	r1, [r4, #16]
   3b918:	cmp	r0, r1
   3b91c:	bcc	3b930 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   3b920:	ldr	r2, [r4, #44]	; 0x2c
   3b924:	mov	r0, r4
   3b928:	mov	r1, #0
   3b92c:	blx	r2
   3b930:	ldrb	r1, [r8, #4]
   3b934:	mov	r0, r4
   3b938:	blx	sl
   3b93c:	subs	r9, r9, #1
   3b940:	beq	3ba58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d0>
   3b944:	add	r7, r8, #5
   3b948:	mov	r8, #44	; 0x2c
   3b94c:	ldr	r0, [r4, #20]
   3b950:	sub	r9, r9, #1
   3b954:	add	r1, r0, #1
   3b958:	str	r1, [r4, #20]
   3b95c:	strb	r8, [r0]
   3b960:	ldrb	r1, [r4, #25]
   3b964:	ldr	r0, [r4, #20]
   3b968:	cmp	r1, #0
   3b96c:	beq	3ba28 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a0>
   3b970:	add	r1, r0, #1
   3b974:	str	r1, [r4, #20]
   3b978:	mov	r1, #10
   3b97c:	strb	r1, [r0]
   3b980:	ldr	r0, [r4, #20]
   3b984:	ldrb	r2, [r4, #25]
   3b988:	ldr	r3, [r4, #32]
   3b98c:	ldr	r1, [r4, #16]
   3b990:	mla	r6, r3, r2, r0
   3b994:	mul	r5, r3, r2
   3b998:	cmp	r6, r1
   3b99c:	bls	3ba0c <flatcc_json_printer_utype_enum_vector_field@@Base+0x284>
   3b9a0:	cmp	r0, r1
   3b9a4:	bcc	3b9c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x238>
   3b9a8:	ldr	r2, [r4, #44]	; 0x2c
   3b9ac:	mov	r0, r4
   3b9b0:	mov	r1, #0
   3b9b4:	blx	r2
   3b9b8:	ldr	r1, [r4, #16]
   3b9bc:	ldr	r0, [r4, #20]
   3b9c0:	sub	r6, r1, r0
   3b9c4:	cmp	r6, r5
   3b9c8:	bcs	3ba0c <flatcc_json_printer_utype_enum_vector_field@@Base+0x284>
   3b9cc:	mov	r1, #32
   3b9d0:	mov	r2, r6
   3b9d4:	bl	14ef0 <memset@plt>
   3b9d8:	ldr	r0, [r4, #20]
   3b9dc:	ldr	r2, [r4, #44]	; 0x2c
   3b9e0:	mov	r1, #0
   3b9e4:	add	r0, r0, r6
   3b9e8:	str	r0, [r4, #20]
   3b9ec:	mov	r0, r4
   3b9f0:	blx	r2
   3b9f4:	ldr	r1, [r4, #16]
   3b9f8:	ldr	r0, [r4, #20]
   3b9fc:	sub	r5, r5, r6
   3ba00:	sub	r6, r1, r0
   3ba04:	cmp	r5, r6
   3ba08:	bhi	3b9cc <flatcc_json_printer_utype_enum_vector_field@@Base+0x244>
   3ba0c:	mov	r1, #32
   3ba10:	mov	r2, r5
   3ba14:	bl	14ef0 <memset@plt>
   3ba18:	ldr	r0, [r4, #20]
   3ba1c:	add	r0, r0, r5
   3ba20:	str	r0, [r4, #20]
   3ba24:	b	3ba44 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2bc>
   3ba28:	ldr	r1, [r4, #16]
   3ba2c:	cmp	r0, r1
   3ba30:	bcc	3ba44 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2bc>
   3ba34:	ldr	r2, [r4, #44]	; 0x2c
   3ba38:	mov	r0, r4
   3ba3c:	mov	r1, #0
   3ba40:	blx	r2
   3ba44:	ldrb	r1, [r7], #1
   3ba48:	mov	r0, r4
   3ba4c:	blx	sl
   3ba50:	cmp	r9, #0
   3ba54:	bne	3b94c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c4>
   3ba58:	ldrb	r1, [r4, #25]
   3ba5c:	ldr	r0, [r4, #20]
   3ba60:	cmp	r1, #0
   3ba64:	beq	3bb24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x39c>
   3ba68:	add	r1, r0, #1
   3ba6c:	str	r1, [r4, #20]
   3ba70:	mov	r1, #10
   3ba74:	strb	r1, [r0]
   3ba78:	ldr	r0, [r4, #32]
   3ba7c:	sub	r2, r0, #1
   3ba80:	str	r2, [r4, #32]
   3ba84:	ldrb	r3, [r4, #25]
   3ba88:	ldr	r0, [r4, #20]
   3ba8c:	ldr	r1, [r4, #16]
   3ba90:	mla	r7, r2, r3, r0
   3ba94:	mul	r5, r2, r3
   3ba98:	cmp	r7, r1
   3ba9c:	bls	3bb0c <flatcc_json_printer_utype_enum_vector_field@@Base+0x384>
   3baa0:	cmp	r0, r1
   3baa4:	bcc	3bac0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x338>
   3baa8:	ldr	r2, [r4, #44]	; 0x2c
   3baac:	mov	r0, r4
   3bab0:	mov	r1, #0
   3bab4:	blx	r2
   3bab8:	ldr	r1, [r4, #16]
   3babc:	ldr	r0, [r4, #20]
   3bac0:	sub	r6, r1, r0
   3bac4:	cmp	r6, r5
   3bac8:	bcs	3bb0c <flatcc_json_printer_utype_enum_vector_field@@Base+0x384>
   3bacc:	mov	r1, #32
   3bad0:	mov	r2, r6
   3bad4:	bl	14ef0 <memset@plt>
   3bad8:	ldr	r0, [r4, #20]
   3badc:	ldr	r2, [r4, #44]	; 0x2c
   3bae0:	mov	r1, #0
   3bae4:	add	r0, r0, r6
   3bae8:	str	r0, [r4, #20]
   3baec:	mov	r0, r4
   3baf0:	blx	r2
   3baf4:	ldr	r1, [r4, #16]
   3baf8:	ldr	r0, [r4, #20]
   3bafc:	sub	r5, r5, r6
   3bb00:	sub	r6, r1, r0
   3bb04:	cmp	r5, r6
   3bb08:	bhi	3bacc <flatcc_json_printer_utype_enum_vector_field@@Base+0x344>
   3bb0c:	mov	r1, #32
   3bb10:	mov	r2, r5
   3bb14:	bl	14ef0 <memset@plt>
   3bb18:	ldr	r0, [r4, #20]
   3bb1c:	add	r0, r0, r5
   3bb20:	str	r0, [r4, #20]
   3bb24:	add	r1, r0, #1
   3bb28:	str	r1, [r4, #20]
   3bb2c:	mov	r1, #93	; 0x5d
   3bb30:	strb	r1, [r0]
   3bb34:	sub	sp, fp, #28
   3bb38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bb3c <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   3bb3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bb40:	add	fp, sp, #28
   3bb44:	sub	sp, sp, #4
   3bb48:	mov	r4, r0
   3bb4c:	ldrb	r0, [r0, #27]
   3bb50:	cmp	r0, #0
   3bb54:	beq	3bb68 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   3bb58:	mov	r0, r4
   3bb5c:	sub	sp, fp, #28
   3bb60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bb64:	b	38d9c <flatcc_json_printer_uint8_vector_field@@Base>
   3bb68:	mov	r0, #4
   3bb6c:	add	r0, r0, r2, lsl #1
   3bb70:	ldr	r2, [r1, #8]
   3bb74:	cmp	r0, r2
   3bb78:	bge	3bee8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3ac>
   3bb7c:	ldr	r2, [r1, #4]
   3bb80:	add	r0, r2, r0
   3bb84:	ldrh	r0, [r0]
   3bb88:	cmp	r0, #0
   3bb8c:	ldrne	r2, [r1]
   3bb90:	addsne	r8, r2, r0
   3bb94:	beq	3bee8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3ac>
   3bb98:	ldr	r0, [r1, #16]
   3bb9c:	ldr	sl, [fp, #12]
   3bba0:	ldr	r2, [fp, #8]
   3bba4:	add	r7, r0, #1
   3bba8:	cmp	r0, #0
   3bbac:	str	r7, [r1, #16]
   3bbb0:	ldrne	r0, [r4, #20]
   3bbb4:	addne	r1, r0, #1
   3bbb8:	strne	r1, [r4, #20]
   3bbbc:	movne	r1, #44	; 0x2c
   3bbc0:	strbne	r1, [r0]
   3bbc4:	mov	r1, r3
   3bbc8:	ldr	r0, [r8]
   3bbcc:	ldr	r9, [r8, r0]!
   3bbd0:	mov	r0, r4
   3bbd4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3bbd8:	ldr	r1, [r4, #32]
   3bbdc:	ldr	r0, [r4, #20]
   3bbe0:	cmp	r9, #0
   3bbe4:	add	r1, r1, #1
   3bbe8:	str	r1, [r4, #32]
   3bbec:	add	r1, r0, #1
   3bbf0:	str	r1, [r4, #20]
   3bbf4:	mov	r1, #91	; 0x5b
   3bbf8:	strb	r1, [r0]
   3bbfc:	beq	3be0c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d0>
   3bc00:	ldrb	r1, [r4, #25]
   3bc04:	ldr	r0, [r4, #20]
   3bc08:	cmp	r1, #0
   3bc0c:	beq	3bcc8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x18c>
   3bc10:	add	r1, r0, #1
   3bc14:	str	r1, [r4, #20]
   3bc18:	mov	r1, #10
   3bc1c:	strb	r1, [r0]
   3bc20:	ldr	r0, [r4, #20]
   3bc24:	ldrb	r2, [r4, #25]
   3bc28:	ldr	r3, [r4, #32]
   3bc2c:	ldr	r1, [r4, #16]
   3bc30:	mla	r7, r3, r2, r0
   3bc34:	mul	r5, r3, r2
   3bc38:	cmp	r7, r1
   3bc3c:	bls	3bcac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
   3bc40:	cmp	r0, r1
   3bc44:	bcc	3bc60 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x124>
   3bc48:	ldr	r2, [r4, #44]	; 0x2c
   3bc4c:	mov	r0, r4
   3bc50:	mov	r1, #0
   3bc54:	blx	r2
   3bc58:	ldr	r1, [r4, #16]
   3bc5c:	ldr	r0, [r4, #20]
   3bc60:	sub	r6, r1, r0
   3bc64:	cmp	r6, r5
   3bc68:	bcs	3bcac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
   3bc6c:	mov	r1, #32
   3bc70:	mov	r2, r6
   3bc74:	bl	14ef0 <memset@plt>
   3bc78:	ldr	r0, [r4, #20]
   3bc7c:	ldr	r2, [r4, #44]	; 0x2c
   3bc80:	mov	r1, #0
   3bc84:	add	r0, r0, r6
   3bc88:	str	r0, [r4, #20]
   3bc8c:	mov	r0, r4
   3bc90:	blx	r2
   3bc94:	ldr	r1, [r4, #16]
   3bc98:	ldr	r0, [r4, #20]
   3bc9c:	sub	r5, r5, r6
   3bca0:	sub	r6, r1, r0
   3bca4:	cmp	r5, r6
   3bca8:	bhi	3bc6c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   3bcac:	mov	r1, #32
   3bcb0:	mov	r2, r5
   3bcb4:	bl	14ef0 <memset@plt>
   3bcb8:	ldr	r0, [r4, #20]
   3bcbc:	add	r0, r0, r5
   3bcc0:	str	r0, [r4, #20]
   3bcc4:	b	3bce4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   3bcc8:	ldr	r1, [r4, #16]
   3bccc:	cmp	r0, r1
   3bcd0:	bcc	3bce4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   3bcd4:	ldr	r2, [r4, #44]	; 0x2c
   3bcd8:	mov	r0, r4
   3bcdc:	mov	r1, #0
   3bce0:	blx	r2
   3bce4:	ldrb	r1, [r8, #4]
   3bce8:	mov	r0, r4
   3bcec:	blx	sl
   3bcf0:	subs	r9, r9, #1
   3bcf4:	beq	3be0c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d0>
   3bcf8:	add	r7, r8, #5
   3bcfc:	mov	r8, #44	; 0x2c
   3bd00:	ldr	r0, [r4, #20]
   3bd04:	sub	r9, r9, #1
   3bd08:	add	r1, r0, #1
   3bd0c:	str	r1, [r4, #20]
   3bd10:	strb	r8, [r0]
   3bd14:	ldrb	r1, [r4, #25]
   3bd18:	ldr	r0, [r4, #20]
   3bd1c:	cmp	r1, #0
   3bd20:	beq	3bddc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a0>
   3bd24:	add	r1, r0, #1
   3bd28:	str	r1, [r4, #20]
   3bd2c:	mov	r1, #10
   3bd30:	strb	r1, [r0]
   3bd34:	ldr	r0, [r4, #20]
   3bd38:	ldrb	r2, [r4, #25]
   3bd3c:	ldr	r3, [r4, #32]
   3bd40:	ldr	r1, [r4, #16]
   3bd44:	mla	r6, r3, r2, r0
   3bd48:	mul	r5, r3, r2
   3bd4c:	cmp	r6, r1
   3bd50:	bls	3bdc0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x284>
   3bd54:	cmp	r0, r1
   3bd58:	bcc	3bd74 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x238>
   3bd5c:	ldr	r2, [r4, #44]	; 0x2c
   3bd60:	mov	r0, r4
   3bd64:	mov	r1, #0
   3bd68:	blx	r2
   3bd6c:	ldr	r1, [r4, #16]
   3bd70:	ldr	r0, [r4, #20]
   3bd74:	sub	r6, r1, r0
   3bd78:	cmp	r6, r5
   3bd7c:	bcs	3bdc0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x284>
   3bd80:	mov	r1, #32
   3bd84:	mov	r2, r6
   3bd88:	bl	14ef0 <memset@plt>
   3bd8c:	ldr	r0, [r4, #20]
   3bd90:	ldr	r2, [r4, #44]	; 0x2c
   3bd94:	mov	r1, #0
   3bd98:	add	r0, r0, r6
   3bd9c:	str	r0, [r4, #20]
   3bda0:	mov	r0, r4
   3bda4:	blx	r2
   3bda8:	ldr	r1, [r4, #16]
   3bdac:	ldr	r0, [r4, #20]
   3bdb0:	sub	r5, r5, r6
   3bdb4:	sub	r6, r1, r0
   3bdb8:	cmp	r5, r6
   3bdbc:	bhi	3bd80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x244>
   3bdc0:	mov	r1, #32
   3bdc4:	mov	r2, r5
   3bdc8:	bl	14ef0 <memset@plt>
   3bdcc:	ldr	r0, [r4, #20]
   3bdd0:	add	r0, r0, r5
   3bdd4:	str	r0, [r4, #20]
   3bdd8:	b	3bdf8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2bc>
   3bddc:	ldr	r1, [r4, #16]
   3bde0:	cmp	r0, r1
   3bde4:	bcc	3bdf8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2bc>
   3bde8:	ldr	r2, [r4, #44]	; 0x2c
   3bdec:	mov	r0, r4
   3bdf0:	mov	r1, #0
   3bdf4:	blx	r2
   3bdf8:	ldrb	r1, [r7], #1
   3bdfc:	mov	r0, r4
   3be00:	blx	sl
   3be04:	cmp	r9, #0
   3be08:	bne	3bd00 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c4>
   3be0c:	ldrb	r1, [r4, #25]
   3be10:	ldr	r0, [r4, #20]
   3be14:	cmp	r1, #0
   3be18:	beq	3bed8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x39c>
   3be1c:	add	r1, r0, #1
   3be20:	str	r1, [r4, #20]
   3be24:	mov	r1, #10
   3be28:	strb	r1, [r0]
   3be2c:	ldr	r0, [r4, #32]
   3be30:	sub	r2, r0, #1
   3be34:	str	r2, [r4, #32]
   3be38:	ldrb	r3, [r4, #25]
   3be3c:	ldr	r0, [r4, #20]
   3be40:	ldr	r1, [r4, #16]
   3be44:	mla	r7, r2, r3, r0
   3be48:	mul	r5, r2, r3
   3be4c:	cmp	r7, r1
   3be50:	bls	3bec0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x384>
   3be54:	cmp	r0, r1
   3be58:	bcc	3be74 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x338>
   3be5c:	ldr	r2, [r4, #44]	; 0x2c
   3be60:	mov	r0, r4
   3be64:	mov	r1, #0
   3be68:	blx	r2
   3be6c:	ldr	r1, [r4, #16]
   3be70:	ldr	r0, [r4, #20]
   3be74:	sub	r6, r1, r0
   3be78:	cmp	r6, r5
   3be7c:	bcs	3bec0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x384>
   3be80:	mov	r1, #32
   3be84:	mov	r2, r6
   3be88:	bl	14ef0 <memset@plt>
   3be8c:	ldr	r0, [r4, #20]
   3be90:	ldr	r2, [r4, #44]	; 0x2c
   3be94:	mov	r1, #0
   3be98:	add	r0, r0, r6
   3be9c:	str	r0, [r4, #20]
   3bea0:	mov	r0, r4
   3bea4:	blx	r2
   3bea8:	ldr	r1, [r4, #16]
   3beac:	ldr	r0, [r4, #20]
   3beb0:	sub	r5, r5, r6
   3beb4:	sub	r6, r1, r0
   3beb8:	cmp	r5, r6
   3bebc:	bhi	3be80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x344>
   3bec0:	mov	r1, #32
   3bec4:	mov	r2, r5
   3bec8:	bl	14ef0 <memset@plt>
   3becc:	ldr	r0, [r4, #20]
   3bed0:	add	r0, r0, r5
   3bed4:	str	r0, [r4, #20]
   3bed8:	add	r1, r0, #1
   3bedc:	str	r1, [r4, #20]
   3bee0:	mov	r1, #93	; 0x5d
   3bee4:	strb	r1, [r0]
   3bee8:	sub	sp, fp, #28
   3beec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bef0 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   3bef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bef4:	add	fp, sp, #28
   3bef8:	sub	sp, sp, #4
   3befc:	mov	r4, r0
   3bf00:	ldrb	r0, [r0, #27]
   3bf04:	cmp	r0, #0
   3bf08:	beq	3bf1c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   3bf0c:	mov	r0, r4
   3bf10:	sub	sp, fp, #28
   3bf14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bf18:	b	39148 <flatcc_json_printer_uint16_vector_field@@Base>
   3bf1c:	mov	r0, #4
   3bf20:	add	r0, r0, r2, lsl #1
   3bf24:	ldr	r2, [r1, #8]
   3bf28:	cmp	r0, r2
   3bf2c:	bge	3c29c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3ac>
   3bf30:	ldr	r2, [r1, #4]
   3bf34:	add	r0, r2, r0
   3bf38:	ldrh	r0, [r0]
   3bf3c:	cmp	r0, #0
   3bf40:	ldrne	r2, [r1]
   3bf44:	addsne	r8, r2, r0
   3bf48:	beq	3c29c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3ac>
   3bf4c:	ldr	r0, [r1, #16]
   3bf50:	ldr	sl, [fp, #12]
   3bf54:	ldr	r2, [fp, #8]
   3bf58:	add	r7, r0, #1
   3bf5c:	cmp	r0, #0
   3bf60:	str	r7, [r1, #16]
   3bf64:	ldrne	r0, [r4, #20]
   3bf68:	addne	r1, r0, #1
   3bf6c:	strne	r1, [r4, #20]
   3bf70:	movne	r1, #44	; 0x2c
   3bf74:	strbne	r1, [r0]
   3bf78:	mov	r1, r3
   3bf7c:	ldr	r0, [r8]
   3bf80:	ldr	r9, [r8, r0]!
   3bf84:	mov	r0, r4
   3bf88:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3bf8c:	ldr	r1, [r4, #32]
   3bf90:	ldr	r0, [r4, #20]
   3bf94:	cmp	r9, #0
   3bf98:	add	r1, r1, #1
   3bf9c:	str	r1, [r4, #32]
   3bfa0:	add	r1, r0, #1
   3bfa4:	str	r1, [r4, #20]
   3bfa8:	mov	r1, #91	; 0x5b
   3bfac:	strb	r1, [r0]
   3bfb0:	beq	3c1c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d0>
   3bfb4:	ldrb	r1, [r4, #25]
   3bfb8:	ldr	r0, [r4, #20]
   3bfbc:	cmp	r1, #0
   3bfc0:	beq	3c07c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18c>
   3bfc4:	add	r1, r0, #1
   3bfc8:	str	r1, [r4, #20]
   3bfcc:	mov	r1, #10
   3bfd0:	strb	r1, [r0]
   3bfd4:	ldr	r0, [r4, #20]
   3bfd8:	ldrb	r2, [r4, #25]
   3bfdc:	ldr	r3, [r4, #32]
   3bfe0:	ldr	r1, [r4, #16]
   3bfe4:	mla	r7, r3, r2, r0
   3bfe8:	mul	r5, r3, r2
   3bfec:	cmp	r7, r1
   3bff0:	bls	3c060 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
   3bff4:	cmp	r0, r1
   3bff8:	bcc	3c014 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x124>
   3bffc:	ldr	r2, [r4, #44]	; 0x2c
   3c000:	mov	r0, r4
   3c004:	mov	r1, #0
   3c008:	blx	r2
   3c00c:	ldr	r1, [r4, #16]
   3c010:	ldr	r0, [r4, #20]
   3c014:	sub	r6, r1, r0
   3c018:	cmp	r6, r5
   3c01c:	bcs	3c060 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
   3c020:	mov	r1, #32
   3c024:	mov	r2, r6
   3c028:	bl	14ef0 <memset@plt>
   3c02c:	ldr	r0, [r4, #20]
   3c030:	ldr	r2, [r4, #44]	; 0x2c
   3c034:	mov	r1, #0
   3c038:	add	r0, r0, r6
   3c03c:	str	r0, [r4, #20]
   3c040:	mov	r0, r4
   3c044:	blx	r2
   3c048:	ldr	r1, [r4, #16]
   3c04c:	ldr	r0, [r4, #20]
   3c050:	sub	r5, r5, r6
   3c054:	sub	r6, r1, r0
   3c058:	cmp	r5, r6
   3c05c:	bhi	3c020 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   3c060:	mov	r1, #32
   3c064:	mov	r2, r5
   3c068:	bl	14ef0 <memset@plt>
   3c06c:	ldr	r0, [r4, #20]
   3c070:	add	r0, r0, r5
   3c074:	str	r0, [r4, #20]
   3c078:	b	3c098 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   3c07c:	ldr	r1, [r4, #16]
   3c080:	cmp	r0, r1
   3c084:	bcc	3c098 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   3c088:	ldr	r2, [r4, #44]	; 0x2c
   3c08c:	mov	r0, r4
   3c090:	mov	r1, #0
   3c094:	blx	r2
   3c098:	ldrh	r1, [r8, #4]
   3c09c:	mov	r0, r4
   3c0a0:	blx	sl
   3c0a4:	subs	r9, r9, #1
   3c0a8:	beq	3c1c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d0>
   3c0ac:	add	r7, r8, #6
   3c0b0:	mov	r8, #44	; 0x2c
   3c0b4:	ldr	r0, [r4, #20]
   3c0b8:	sub	r9, r9, #1
   3c0bc:	add	r1, r0, #1
   3c0c0:	str	r1, [r4, #20]
   3c0c4:	strb	r8, [r0]
   3c0c8:	ldrb	r1, [r4, #25]
   3c0cc:	ldr	r0, [r4, #20]
   3c0d0:	cmp	r1, #0
   3c0d4:	beq	3c190 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a0>
   3c0d8:	add	r1, r0, #1
   3c0dc:	str	r1, [r4, #20]
   3c0e0:	mov	r1, #10
   3c0e4:	strb	r1, [r0]
   3c0e8:	ldr	r0, [r4, #20]
   3c0ec:	ldrb	r2, [r4, #25]
   3c0f0:	ldr	r3, [r4, #32]
   3c0f4:	ldr	r1, [r4, #16]
   3c0f8:	mla	r6, r3, r2, r0
   3c0fc:	mul	r5, r3, r2
   3c100:	cmp	r6, r1
   3c104:	bls	3c174 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x284>
   3c108:	cmp	r0, r1
   3c10c:	bcc	3c128 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x238>
   3c110:	ldr	r2, [r4, #44]	; 0x2c
   3c114:	mov	r0, r4
   3c118:	mov	r1, #0
   3c11c:	blx	r2
   3c120:	ldr	r1, [r4, #16]
   3c124:	ldr	r0, [r4, #20]
   3c128:	sub	r6, r1, r0
   3c12c:	cmp	r6, r5
   3c130:	bcs	3c174 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x284>
   3c134:	mov	r1, #32
   3c138:	mov	r2, r6
   3c13c:	bl	14ef0 <memset@plt>
   3c140:	ldr	r0, [r4, #20]
   3c144:	ldr	r2, [r4, #44]	; 0x2c
   3c148:	mov	r1, #0
   3c14c:	add	r0, r0, r6
   3c150:	str	r0, [r4, #20]
   3c154:	mov	r0, r4
   3c158:	blx	r2
   3c15c:	ldr	r1, [r4, #16]
   3c160:	ldr	r0, [r4, #20]
   3c164:	sub	r5, r5, r6
   3c168:	sub	r6, r1, r0
   3c16c:	cmp	r5, r6
   3c170:	bhi	3c134 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x244>
   3c174:	mov	r1, #32
   3c178:	mov	r2, r5
   3c17c:	bl	14ef0 <memset@plt>
   3c180:	ldr	r0, [r4, #20]
   3c184:	add	r0, r0, r5
   3c188:	str	r0, [r4, #20]
   3c18c:	b	3c1ac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2bc>
   3c190:	ldr	r1, [r4, #16]
   3c194:	cmp	r0, r1
   3c198:	bcc	3c1ac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2bc>
   3c19c:	ldr	r2, [r4, #44]	; 0x2c
   3c1a0:	mov	r0, r4
   3c1a4:	mov	r1, #0
   3c1a8:	blx	r2
   3c1ac:	ldrh	r1, [r7], #2
   3c1b0:	mov	r0, r4
   3c1b4:	blx	sl
   3c1b8:	cmp	r9, #0
   3c1bc:	bne	3c0b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c4>
   3c1c0:	ldrb	r1, [r4, #25]
   3c1c4:	ldr	r0, [r4, #20]
   3c1c8:	cmp	r1, #0
   3c1cc:	beq	3c28c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x39c>
   3c1d0:	add	r1, r0, #1
   3c1d4:	str	r1, [r4, #20]
   3c1d8:	mov	r1, #10
   3c1dc:	strb	r1, [r0]
   3c1e0:	ldr	r0, [r4, #32]
   3c1e4:	sub	r2, r0, #1
   3c1e8:	str	r2, [r4, #32]
   3c1ec:	ldrb	r3, [r4, #25]
   3c1f0:	ldr	r0, [r4, #20]
   3c1f4:	ldr	r1, [r4, #16]
   3c1f8:	mla	r7, r2, r3, r0
   3c1fc:	mul	r5, r2, r3
   3c200:	cmp	r7, r1
   3c204:	bls	3c274 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x384>
   3c208:	cmp	r0, r1
   3c20c:	bcc	3c228 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x338>
   3c210:	ldr	r2, [r4, #44]	; 0x2c
   3c214:	mov	r0, r4
   3c218:	mov	r1, #0
   3c21c:	blx	r2
   3c220:	ldr	r1, [r4, #16]
   3c224:	ldr	r0, [r4, #20]
   3c228:	sub	r6, r1, r0
   3c22c:	cmp	r6, r5
   3c230:	bcs	3c274 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x384>
   3c234:	mov	r1, #32
   3c238:	mov	r2, r6
   3c23c:	bl	14ef0 <memset@plt>
   3c240:	ldr	r0, [r4, #20]
   3c244:	ldr	r2, [r4, #44]	; 0x2c
   3c248:	mov	r1, #0
   3c24c:	add	r0, r0, r6
   3c250:	str	r0, [r4, #20]
   3c254:	mov	r0, r4
   3c258:	blx	r2
   3c25c:	ldr	r1, [r4, #16]
   3c260:	ldr	r0, [r4, #20]
   3c264:	sub	r5, r5, r6
   3c268:	sub	r6, r1, r0
   3c26c:	cmp	r5, r6
   3c270:	bhi	3c234 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x344>
   3c274:	mov	r1, #32
   3c278:	mov	r2, r5
   3c27c:	bl	14ef0 <memset@plt>
   3c280:	ldr	r0, [r4, #20]
   3c284:	add	r0, r0, r5
   3c288:	str	r0, [r4, #20]
   3c28c:	add	r1, r0, #1
   3c290:	str	r1, [r4, #20]
   3c294:	mov	r1, #93	; 0x5d
   3c298:	strb	r1, [r0]
   3c29c:	sub	sp, fp, #28
   3c2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c2a4 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   3c2a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c2a8:	add	fp, sp, #28
   3c2ac:	sub	sp, sp, #4
   3c2b0:	mov	r4, r0
   3c2b4:	ldrb	r0, [r0, #27]
   3c2b8:	cmp	r0, #0
   3c2bc:	beq	3c2d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   3c2c0:	mov	r0, r4
   3c2c4:	sub	sp, fp, #28
   3c2c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c2cc:	b	394f4 <flatcc_json_printer_uint32_vector_field@@Base>
   3c2d0:	mov	r0, #4
   3c2d4:	add	r0, r0, r2, lsl #1
   3c2d8:	ldr	r2, [r1, #8]
   3c2dc:	cmp	r0, r2
   3c2e0:	bge	3c650 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3ac>
   3c2e4:	ldr	r2, [r1, #4]
   3c2e8:	add	r0, r2, r0
   3c2ec:	ldrh	r0, [r0]
   3c2f0:	cmp	r0, #0
   3c2f4:	ldrne	r2, [r1]
   3c2f8:	addsne	r8, r2, r0
   3c2fc:	beq	3c650 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3ac>
   3c300:	ldr	r0, [r1, #16]
   3c304:	ldr	sl, [fp, #12]
   3c308:	ldr	r2, [fp, #8]
   3c30c:	add	r7, r0, #1
   3c310:	cmp	r0, #0
   3c314:	str	r7, [r1, #16]
   3c318:	ldrne	r0, [r4, #20]
   3c31c:	addne	r1, r0, #1
   3c320:	strne	r1, [r4, #20]
   3c324:	movne	r1, #44	; 0x2c
   3c328:	strbne	r1, [r0]
   3c32c:	mov	r1, r3
   3c330:	ldr	r0, [r8]
   3c334:	ldr	r9, [r8, r0]!
   3c338:	mov	r0, r4
   3c33c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3c340:	ldr	r1, [r4, #32]
   3c344:	ldr	r0, [r4, #20]
   3c348:	cmp	r9, #0
   3c34c:	add	r1, r1, #1
   3c350:	str	r1, [r4, #32]
   3c354:	add	r1, r0, #1
   3c358:	str	r1, [r4, #20]
   3c35c:	mov	r1, #91	; 0x5b
   3c360:	strb	r1, [r0]
   3c364:	beq	3c574 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d0>
   3c368:	ldrb	r1, [r4, #25]
   3c36c:	ldr	r0, [r4, #20]
   3c370:	cmp	r1, #0
   3c374:	beq	3c430 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   3c378:	add	r1, r0, #1
   3c37c:	str	r1, [r4, #20]
   3c380:	mov	r1, #10
   3c384:	strb	r1, [r0]
   3c388:	ldr	r0, [r4, #20]
   3c38c:	ldrb	r2, [r4, #25]
   3c390:	ldr	r3, [r4, #32]
   3c394:	ldr	r1, [r4, #16]
   3c398:	mla	r7, r3, r2, r0
   3c39c:	mul	r5, r3, r2
   3c3a0:	cmp	r7, r1
   3c3a4:	bls	3c414 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
   3c3a8:	cmp	r0, r1
   3c3ac:	bcc	3c3c8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x124>
   3c3b0:	ldr	r2, [r4, #44]	; 0x2c
   3c3b4:	mov	r0, r4
   3c3b8:	mov	r1, #0
   3c3bc:	blx	r2
   3c3c0:	ldr	r1, [r4, #16]
   3c3c4:	ldr	r0, [r4, #20]
   3c3c8:	sub	r6, r1, r0
   3c3cc:	cmp	r6, r5
   3c3d0:	bcs	3c414 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
   3c3d4:	mov	r1, #32
   3c3d8:	mov	r2, r6
   3c3dc:	bl	14ef0 <memset@plt>
   3c3e0:	ldr	r0, [r4, #20]
   3c3e4:	ldr	r2, [r4, #44]	; 0x2c
   3c3e8:	mov	r1, #0
   3c3ec:	add	r0, r0, r6
   3c3f0:	str	r0, [r4, #20]
   3c3f4:	mov	r0, r4
   3c3f8:	blx	r2
   3c3fc:	ldr	r1, [r4, #16]
   3c400:	ldr	r0, [r4, #20]
   3c404:	sub	r5, r5, r6
   3c408:	sub	r6, r1, r0
   3c40c:	cmp	r5, r6
   3c410:	bhi	3c3d4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   3c414:	mov	r1, #32
   3c418:	mov	r2, r5
   3c41c:	bl	14ef0 <memset@plt>
   3c420:	ldr	r0, [r4, #20]
   3c424:	add	r0, r0, r5
   3c428:	str	r0, [r4, #20]
   3c42c:	b	3c44c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   3c430:	ldr	r1, [r4, #16]
   3c434:	cmp	r0, r1
   3c438:	bcc	3c44c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   3c43c:	ldr	r2, [r4, #44]	; 0x2c
   3c440:	mov	r0, r4
   3c444:	mov	r1, #0
   3c448:	blx	r2
   3c44c:	ldr	r1, [r8, #4]
   3c450:	mov	r0, r4
   3c454:	blx	sl
   3c458:	subs	r9, r9, #1
   3c45c:	beq	3c574 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d0>
   3c460:	add	r7, r8, #8
   3c464:	mov	r8, #44	; 0x2c
   3c468:	ldr	r0, [r4, #20]
   3c46c:	sub	r9, r9, #1
   3c470:	add	r1, r0, #1
   3c474:	str	r1, [r4, #20]
   3c478:	strb	r8, [r0]
   3c47c:	ldrb	r1, [r4, #25]
   3c480:	ldr	r0, [r4, #20]
   3c484:	cmp	r1, #0
   3c488:	beq	3c544 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a0>
   3c48c:	add	r1, r0, #1
   3c490:	str	r1, [r4, #20]
   3c494:	mov	r1, #10
   3c498:	strb	r1, [r0]
   3c49c:	ldr	r0, [r4, #20]
   3c4a0:	ldrb	r2, [r4, #25]
   3c4a4:	ldr	r3, [r4, #32]
   3c4a8:	ldr	r1, [r4, #16]
   3c4ac:	mla	r6, r3, r2, r0
   3c4b0:	mul	r5, r3, r2
   3c4b4:	cmp	r6, r1
   3c4b8:	bls	3c528 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x284>
   3c4bc:	cmp	r0, r1
   3c4c0:	bcc	3c4dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x238>
   3c4c4:	ldr	r2, [r4, #44]	; 0x2c
   3c4c8:	mov	r0, r4
   3c4cc:	mov	r1, #0
   3c4d0:	blx	r2
   3c4d4:	ldr	r1, [r4, #16]
   3c4d8:	ldr	r0, [r4, #20]
   3c4dc:	sub	r6, r1, r0
   3c4e0:	cmp	r6, r5
   3c4e4:	bcs	3c528 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x284>
   3c4e8:	mov	r1, #32
   3c4ec:	mov	r2, r6
   3c4f0:	bl	14ef0 <memset@plt>
   3c4f4:	ldr	r0, [r4, #20]
   3c4f8:	ldr	r2, [r4, #44]	; 0x2c
   3c4fc:	mov	r1, #0
   3c500:	add	r0, r0, r6
   3c504:	str	r0, [r4, #20]
   3c508:	mov	r0, r4
   3c50c:	blx	r2
   3c510:	ldr	r1, [r4, #16]
   3c514:	ldr	r0, [r4, #20]
   3c518:	sub	r5, r5, r6
   3c51c:	sub	r6, r1, r0
   3c520:	cmp	r5, r6
   3c524:	bhi	3c4e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x244>
   3c528:	mov	r1, #32
   3c52c:	mov	r2, r5
   3c530:	bl	14ef0 <memset@plt>
   3c534:	ldr	r0, [r4, #20]
   3c538:	add	r0, r0, r5
   3c53c:	str	r0, [r4, #20]
   3c540:	b	3c560 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   3c544:	ldr	r1, [r4, #16]
   3c548:	cmp	r0, r1
   3c54c:	bcc	3c560 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   3c550:	ldr	r2, [r4, #44]	; 0x2c
   3c554:	mov	r0, r4
   3c558:	mov	r1, #0
   3c55c:	blx	r2
   3c560:	ldr	r1, [r7], #4
   3c564:	mov	r0, r4
   3c568:	blx	sl
   3c56c:	cmp	r9, #0
   3c570:	bne	3c468 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c4>
   3c574:	ldrb	r1, [r4, #25]
   3c578:	ldr	r0, [r4, #20]
   3c57c:	cmp	r1, #0
   3c580:	beq	3c640 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x39c>
   3c584:	add	r1, r0, #1
   3c588:	str	r1, [r4, #20]
   3c58c:	mov	r1, #10
   3c590:	strb	r1, [r0]
   3c594:	ldr	r0, [r4, #32]
   3c598:	sub	r2, r0, #1
   3c59c:	str	r2, [r4, #32]
   3c5a0:	ldrb	r3, [r4, #25]
   3c5a4:	ldr	r0, [r4, #20]
   3c5a8:	ldr	r1, [r4, #16]
   3c5ac:	mla	r7, r2, r3, r0
   3c5b0:	mul	r5, r2, r3
   3c5b4:	cmp	r7, r1
   3c5b8:	bls	3c628 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x384>
   3c5bc:	cmp	r0, r1
   3c5c0:	bcc	3c5dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x338>
   3c5c4:	ldr	r2, [r4, #44]	; 0x2c
   3c5c8:	mov	r0, r4
   3c5cc:	mov	r1, #0
   3c5d0:	blx	r2
   3c5d4:	ldr	r1, [r4, #16]
   3c5d8:	ldr	r0, [r4, #20]
   3c5dc:	sub	r6, r1, r0
   3c5e0:	cmp	r6, r5
   3c5e4:	bcs	3c628 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x384>
   3c5e8:	mov	r1, #32
   3c5ec:	mov	r2, r6
   3c5f0:	bl	14ef0 <memset@plt>
   3c5f4:	ldr	r0, [r4, #20]
   3c5f8:	ldr	r2, [r4, #44]	; 0x2c
   3c5fc:	mov	r1, #0
   3c600:	add	r0, r0, r6
   3c604:	str	r0, [r4, #20]
   3c608:	mov	r0, r4
   3c60c:	blx	r2
   3c610:	ldr	r1, [r4, #16]
   3c614:	ldr	r0, [r4, #20]
   3c618:	sub	r5, r5, r6
   3c61c:	sub	r6, r1, r0
   3c620:	cmp	r5, r6
   3c624:	bhi	3c5e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x344>
   3c628:	mov	r1, #32
   3c62c:	mov	r2, r5
   3c630:	bl	14ef0 <memset@plt>
   3c634:	ldr	r0, [r4, #20]
   3c638:	add	r0, r0, r5
   3c63c:	str	r0, [r4, #20]
   3c640:	add	r1, r0, #1
   3c644:	str	r1, [r4, #20]
   3c648:	mov	r1, #93	; 0x5d
   3c64c:	strb	r1, [r0]
   3c650:	sub	sp, fp, #28
   3c654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c658 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   3c658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c65c:	add	fp, sp, #28
   3c660:	sub	sp, sp, #4
   3c664:	mov	r4, r0
   3c668:	ldrb	r0, [r0, #27]
   3c66c:	cmp	r0, #0
   3c670:	beq	3c684 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   3c674:	mov	r0, r4
   3c678:	sub	sp, fp, #28
   3c67c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c680:	b	398a0 <flatcc_json_printer_uint64_vector_field@@Base>
   3c684:	mov	r0, #4
   3c688:	add	r0, r0, r2, lsl #1
   3c68c:	ldr	r2, [r1, #8]
   3c690:	cmp	r0, r2
   3c694:	bge	3ca08 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b0>
   3c698:	ldr	r2, [r1, #4]
   3c69c:	add	r0, r2, r0
   3c6a0:	ldrh	r0, [r0]
   3c6a4:	cmp	r0, #0
   3c6a8:	ldrne	r2, [r1]
   3c6ac:	addsne	r8, r2, r0
   3c6b0:	beq	3ca08 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b0>
   3c6b4:	ldr	r0, [r1, #16]
   3c6b8:	ldr	sl, [fp, #12]
   3c6bc:	ldr	r2, [fp, #8]
   3c6c0:	add	r7, r0, #1
   3c6c4:	cmp	r0, #0
   3c6c8:	str	r7, [r1, #16]
   3c6cc:	ldrne	r0, [r4, #20]
   3c6d0:	addne	r1, r0, #1
   3c6d4:	strne	r1, [r4, #20]
   3c6d8:	movne	r1, #44	; 0x2c
   3c6dc:	strbne	r1, [r0]
   3c6e0:	mov	r1, r3
   3c6e4:	ldr	r0, [r8]
   3c6e8:	ldr	r9, [r8, r0]!
   3c6ec:	mov	r0, r4
   3c6f0:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3c6f4:	ldr	r1, [r4, #32]
   3c6f8:	ldr	r0, [r4, #20]
   3c6fc:	cmp	r9, #0
   3c700:	add	r1, r1, #1
   3c704:	str	r1, [r4, #32]
   3c708:	add	r1, r0, #1
   3c70c:	str	r1, [r4, #20]
   3c710:	mov	r1, #91	; 0x5b
   3c714:	strb	r1, [r0]
   3c718:	beq	3c92c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d4>
   3c71c:	ldrb	r1, [r4, #25]
   3c720:	ldr	r0, [r4, #20]
   3c724:	cmp	r1, #0
   3c728:	beq	3c7e4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   3c72c:	add	r1, r0, #1
   3c730:	str	r1, [r4, #20]
   3c734:	mov	r1, #10
   3c738:	strb	r1, [r0]
   3c73c:	ldr	r0, [r4, #20]
   3c740:	ldrb	r2, [r4, #25]
   3c744:	ldr	r3, [r4, #32]
   3c748:	ldr	r1, [r4, #16]
   3c74c:	mla	r7, r3, r2, r0
   3c750:	mul	r5, r3, r2
   3c754:	cmp	r7, r1
   3c758:	bls	3c7c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
   3c75c:	cmp	r0, r1
   3c760:	bcc	3c77c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x124>
   3c764:	ldr	r2, [r4, #44]	; 0x2c
   3c768:	mov	r0, r4
   3c76c:	mov	r1, #0
   3c770:	blx	r2
   3c774:	ldr	r1, [r4, #16]
   3c778:	ldr	r0, [r4, #20]
   3c77c:	sub	r6, r1, r0
   3c780:	cmp	r6, r5
   3c784:	bcs	3c7c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
   3c788:	mov	r1, #32
   3c78c:	mov	r2, r6
   3c790:	bl	14ef0 <memset@plt>
   3c794:	ldr	r0, [r4, #20]
   3c798:	ldr	r2, [r4, #44]	; 0x2c
   3c79c:	mov	r1, #0
   3c7a0:	add	r0, r0, r6
   3c7a4:	str	r0, [r4, #20]
   3c7a8:	mov	r0, r4
   3c7ac:	blx	r2
   3c7b0:	ldr	r1, [r4, #16]
   3c7b4:	ldr	r0, [r4, #20]
   3c7b8:	sub	r5, r5, r6
   3c7bc:	sub	r6, r1, r0
   3c7c0:	cmp	r5, r6
   3c7c4:	bhi	3c788 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   3c7c8:	mov	r1, #32
   3c7cc:	mov	r2, r5
   3c7d0:	bl	14ef0 <memset@plt>
   3c7d4:	ldr	r0, [r4, #20]
   3c7d8:	add	r0, r0, r5
   3c7dc:	str	r0, [r4, #20]
   3c7e0:	b	3c800 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   3c7e4:	ldr	r1, [r4, #16]
   3c7e8:	cmp	r0, r1
   3c7ec:	bcc	3c800 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   3c7f0:	ldr	r2, [r4, #44]	; 0x2c
   3c7f4:	mov	r0, r4
   3c7f8:	mov	r1, #0
   3c7fc:	blx	r2
   3c800:	ldrd	r2, [r8, #4]
   3c804:	mov	r0, r4
   3c808:	blx	sl
   3c80c:	subs	r9, r9, #1
   3c810:	beq	3c92c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d4>
   3c814:	add	r7, r8, #12
   3c818:	mov	r8, #44	; 0x2c
   3c81c:	ldr	r0, [r4, #20]
   3c820:	sub	r9, r9, #1
   3c824:	add	r1, r0, #1
   3c828:	str	r1, [r4, #20]
   3c82c:	strb	r8, [r0]
   3c830:	ldrb	r1, [r4, #25]
   3c834:	ldr	r0, [r4, #20]
   3c838:	cmp	r1, #0
   3c83c:	beq	3c8f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a0>
   3c840:	add	r1, r0, #1
   3c844:	str	r1, [r4, #20]
   3c848:	mov	r1, #10
   3c84c:	strb	r1, [r0]
   3c850:	ldr	r0, [r4, #20]
   3c854:	ldrb	r2, [r4, #25]
   3c858:	ldr	r3, [r4, #32]
   3c85c:	ldr	r1, [r4, #16]
   3c860:	mla	r6, r3, r2, r0
   3c864:	mul	r5, r3, r2
   3c868:	cmp	r6, r1
   3c86c:	bls	3c8dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   3c870:	cmp	r0, r1
   3c874:	bcc	3c890 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x238>
   3c878:	ldr	r2, [r4, #44]	; 0x2c
   3c87c:	mov	r0, r4
   3c880:	mov	r1, #0
   3c884:	blx	r2
   3c888:	ldr	r1, [r4, #16]
   3c88c:	ldr	r0, [r4, #20]
   3c890:	sub	r6, r1, r0
   3c894:	cmp	r6, r5
   3c898:	bcs	3c8dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   3c89c:	mov	r1, #32
   3c8a0:	mov	r2, r6
   3c8a4:	bl	14ef0 <memset@plt>
   3c8a8:	ldr	r0, [r4, #20]
   3c8ac:	ldr	r2, [r4, #44]	; 0x2c
   3c8b0:	mov	r1, #0
   3c8b4:	add	r0, r0, r6
   3c8b8:	str	r0, [r4, #20]
   3c8bc:	mov	r0, r4
   3c8c0:	blx	r2
   3c8c4:	ldr	r1, [r4, #16]
   3c8c8:	ldr	r0, [r4, #20]
   3c8cc:	sub	r5, r5, r6
   3c8d0:	sub	r6, r1, r0
   3c8d4:	cmp	r5, r6
   3c8d8:	bhi	3c89c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x244>
   3c8dc:	mov	r1, #32
   3c8e0:	mov	r2, r5
   3c8e4:	bl	14ef0 <memset@plt>
   3c8e8:	ldr	r0, [r4, #20]
   3c8ec:	add	r0, r0, r5
   3c8f0:	str	r0, [r4, #20]
   3c8f4:	b	3c914 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2bc>
   3c8f8:	ldr	r1, [r4, #16]
   3c8fc:	cmp	r0, r1
   3c900:	bcc	3c914 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2bc>
   3c904:	ldr	r2, [r4, #44]	; 0x2c
   3c908:	mov	r0, r4
   3c90c:	mov	r1, #0
   3c910:	blx	r2
   3c914:	ldrd	r2, [r7]
   3c918:	mov	r0, r4
   3c91c:	blx	sl
   3c920:	add	r7, r7, #8
   3c924:	cmp	r9, #0
   3c928:	bne	3c81c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c4>
   3c92c:	ldrb	r1, [r4, #25]
   3c930:	ldr	r0, [r4, #20]
   3c934:	cmp	r1, #0
   3c938:	beq	3c9f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a0>
   3c93c:	add	r1, r0, #1
   3c940:	str	r1, [r4, #20]
   3c944:	mov	r1, #10
   3c948:	strb	r1, [r0]
   3c94c:	ldr	r0, [r4, #32]
   3c950:	sub	r2, r0, #1
   3c954:	str	r2, [r4, #32]
   3c958:	ldrb	r3, [r4, #25]
   3c95c:	ldr	r0, [r4, #20]
   3c960:	ldr	r1, [r4, #16]
   3c964:	mla	r7, r2, r3, r0
   3c968:	mul	r5, r2, r3
   3c96c:	cmp	r7, r1
   3c970:	bls	3c9e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x388>
   3c974:	cmp	r0, r1
   3c978:	bcc	3c994 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x33c>
   3c97c:	ldr	r2, [r4, #44]	; 0x2c
   3c980:	mov	r0, r4
   3c984:	mov	r1, #0
   3c988:	blx	r2
   3c98c:	ldr	r1, [r4, #16]
   3c990:	ldr	r0, [r4, #20]
   3c994:	sub	r6, r1, r0
   3c998:	cmp	r6, r5
   3c99c:	bcs	3c9e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x388>
   3c9a0:	mov	r1, #32
   3c9a4:	mov	r2, r6
   3c9a8:	bl	14ef0 <memset@plt>
   3c9ac:	ldr	r0, [r4, #20]
   3c9b0:	ldr	r2, [r4, #44]	; 0x2c
   3c9b4:	mov	r1, #0
   3c9b8:	add	r0, r0, r6
   3c9bc:	str	r0, [r4, #20]
   3c9c0:	mov	r0, r4
   3c9c4:	blx	r2
   3c9c8:	ldr	r1, [r4, #16]
   3c9cc:	ldr	r0, [r4, #20]
   3c9d0:	sub	r5, r5, r6
   3c9d4:	sub	r6, r1, r0
   3c9d8:	cmp	r5, r6
   3c9dc:	bhi	3c9a0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x348>
   3c9e0:	mov	r1, #32
   3c9e4:	mov	r2, r5
   3c9e8:	bl	14ef0 <memset@plt>
   3c9ec:	ldr	r0, [r4, #20]
   3c9f0:	add	r0, r0, r5
   3c9f4:	str	r0, [r4, #20]
   3c9f8:	add	r1, r0, #1
   3c9fc:	str	r1, [r4, #20]
   3ca00:	mov	r1, #93	; 0x5d
   3ca04:	strb	r1, [r0]
   3ca08:	sub	sp, fp, #28
   3ca0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ca10 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   3ca10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ca14:	add	fp, sp, #28
   3ca18:	sub	sp, sp, #4
   3ca1c:	mov	r4, r0
   3ca20:	ldrb	r0, [r0, #27]
   3ca24:	cmp	r0, #0
   3ca28:	beq	3ca3c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   3ca2c:	mov	r0, r4
   3ca30:	sub	sp, fp, #28
   3ca34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ca38:	b	39c50 <flatcc_json_printer_int8_vector_field@@Base>
   3ca3c:	mov	r0, #4
   3ca40:	add	r0, r0, r2, lsl #1
   3ca44:	ldr	r2, [r1, #8]
   3ca48:	cmp	r0, r2
   3ca4c:	bge	3cdbc <flatcc_json_printer_int8_enum_vector_field@@Base+0x3ac>
   3ca50:	ldr	r2, [r1, #4]
   3ca54:	add	r0, r2, r0
   3ca58:	ldrh	r0, [r0]
   3ca5c:	cmp	r0, #0
   3ca60:	ldrne	r2, [r1]
   3ca64:	addsne	r8, r2, r0
   3ca68:	beq	3cdbc <flatcc_json_printer_int8_enum_vector_field@@Base+0x3ac>
   3ca6c:	ldr	r0, [r1, #16]
   3ca70:	ldr	sl, [fp, #12]
   3ca74:	ldr	r2, [fp, #8]
   3ca78:	add	r7, r0, #1
   3ca7c:	cmp	r0, #0
   3ca80:	str	r7, [r1, #16]
   3ca84:	ldrne	r0, [r4, #20]
   3ca88:	addne	r1, r0, #1
   3ca8c:	strne	r1, [r4, #20]
   3ca90:	movne	r1, #44	; 0x2c
   3ca94:	strbne	r1, [r0]
   3ca98:	mov	r1, r3
   3ca9c:	ldr	r0, [r8]
   3caa0:	ldr	r9, [r8, r0]!
   3caa4:	mov	r0, r4
   3caa8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3caac:	ldr	r1, [r4, #32]
   3cab0:	ldr	r0, [r4, #20]
   3cab4:	cmp	r9, #0
   3cab8:	add	r1, r1, #1
   3cabc:	str	r1, [r4, #32]
   3cac0:	add	r1, r0, #1
   3cac4:	str	r1, [r4, #20]
   3cac8:	mov	r1, #91	; 0x5b
   3cacc:	strb	r1, [r0]
   3cad0:	beq	3cce0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d0>
   3cad4:	ldrb	r1, [r4, #25]
   3cad8:	ldr	r0, [r4, #20]
   3cadc:	cmp	r1, #0
   3cae0:	beq	3cb9c <flatcc_json_printer_int8_enum_vector_field@@Base+0x18c>
   3cae4:	add	r1, r0, #1
   3cae8:	str	r1, [r4, #20]
   3caec:	mov	r1, #10
   3caf0:	strb	r1, [r0]
   3caf4:	ldr	r0, [r4, #20]
   3caf8:	ldrb	r2, [r4, #25]
   3cafc:	ldr	r3, [r4, #32]
   3cb00:	ldr	r1, [r4, #16]
   3cb04:	mla	r7, r3, r2, r0
   3cb08:	mul	r5, r3, r2
   3cb0c:	cmp	r7, r1
   3cb10:	bls	3cb80 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
   3cb14:	cmp	r0, r1
   3cb18:	bcc	3cb34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x124>
   3cb1c:	ldr	r2, [r4, #44]	; 0x2c
   3cb20:	mov	r0, r4
   3cb24:	mov	r1, #0
   3cb28:	blx	r2
   3cb2c:	ldr	r1, [r4, #16]
   3cb30:	ldr	r0, [r4, #20]
   3cb34:	sub	r6, r1, r0
   3cb38:	cmp	r6, r5
   3cb3c:	bcs	3cb80 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
   3cb40:	mov	r1, #32
   3cb44:	mov	r2, r6
   3cb48:	bl	14ef0 <memset@plt>
   3cb4c:	ldr	r0, [r4, #20]
   3cb50:	ldr	r2, [r4, #44]	; 0x2c
   3cb54:	mov	r1, #0
   3cb58:	add	r0, r0, r6
   3cb5c:	str	r0, [r4, #20]
   3cb60:	mov	r0, r4
   3cb64:	blx	r2
   3cb68:	ldr	r1, [r4, #16]
   3cb6c:	ldr	r0, [r4, #20]
   3cb70:	sub	r5, r5, r6
   3cb74:	sub	r6, r1, r0
   3cb78:	cmp	r5, r6
   3cb7c:	bhi	3cb40 <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   3cb80:	mov	r1, #32
   3cb84:	mov	r2, r5
   3cb88:	bl	14ef0 <memset@plt>
   3cb8c:	ldr	r0, [r4, #20]
   3cb90:	add	r0, r0, r5
   3cb94:	str	r0, [r4, #20]
   3cb98:	b	3cbb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   3cb9c:	ldr	r1, [r4, #16]
   3cba0:	cmp	r0, r1
   3cba4:	bcc	3cbb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   3cba8:	ldr	r2, [r4, #44]	; 0x2c
   3cbac:	mov	r0, r4
   3cbb0:	mov	r1, #0
   3cbb4:	blx	r2
   3cbb8:	ldrsb	r1, [r8, #4]
   3cbbc:	mov	r0, r4
   3cbc0:	blx	sl
   3cbc4:	subs	r9, r9, #1
   3cbc8:	beq	3cce0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d0>
   3cbcc:	add	r7, r8, #5
   3cbd0:	mov	r8, #44	; 0x2c
   3cbd4:	ldr	r0, [r4, #20]
   3cbd8:	sub	r9, r9, #1
   3cbdc:	add	r1, r0, #1
   3cbe0:	str	r1, [r4, #20]
   3cbe4:	strb	r8, [r0]
   3cbe8:	ldrb	r1, [r4, #25]
   3cbec:	ldr	r0, [r4, #20]
   3cbf0:	cmp	r1, #0
   3cbf4:	beq	3ccb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a0>
   3cbf8:	add	r1, r0, #1
   3cbfc:	str	r1, [r4, #20]
   3cc00:	mov	r1, #10
   3cc04:	strb	r1, [r0]
   3cc08:	ldr	r0, [r4, #20]
   3cc0c:	ldrb	r2, [r4, #25]
   3cc10:	ldr	r3, [r4, #32]
   3cc14:	ldr	r1, [r4, #16]
   3cc18:	mla	r6, r3, r2, r0
   3cc1c:	mul	r5, r3, r2
   3cc20:	cmp	r6, r1
   3cc24:	bls	3cc94 <flatcc_json_printer_int8_enum_vector_field@@Base+0x284>
   3cc28:	cmp	r0, r1
   3cc2c:	bcc	3cc48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x238>
   3cc30:	ldr	r2, [r4, #44]	; 0x2c
   3cc34:	mov	r0, r4
   3cc38:	mov	r1, #0
   3cc3c:	blx	r2
   3cc40:	ldr	r1, [r4, #16]
   3cc44:	ldr	r0, [r4, #20]
   3cc48:	sub	r6, r1, r0
   3cc4c:	cmp	r6, r5
   3cc50:	bcs	3cc94 <flatcc_json_printer_int8_enum_vector_field@@Base+0x284>
   3cc54:	mov	r1, #32
   3cc58:	mov	r2, r6
   3cc5c:	bl	14ef0 <memset@plt>
   3cc60:	ldr	r0, [r4, #20]
   3cc64:	ldr	r2, [r4, #44]	; 0x2c
   3cc68:	mov	r1, #0
   3cc6c:	add	r0, r0, r6
   3cc70:	str	r0, [r4, #20]
   3cc74:	mov	r0, r4
   3cc78:	blx	r2
   3cc7c:	ldr	r1, [r4, #16]
   3cc80:	ldr	r0, [r4, #20]
   3cc84:	sub	r5, r5, r6
   3cc88:	sub	r6, r1, r0
   3cc8c:	cmp	r5, r6
   3cc90:	bhi	3cc54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x244>
   3cc94:	mov	r1, #32
   3cc98:	mov	r2, r5
   3cc9c:	bl	14ef0 <memset@plt>
   3cca0:	ldr	r0, [r4, #20]
   3cca4:	add	r0, r0, r5
   3cca8:	str	r0, [r4, #20]
   3ccac:	b	3cccc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2bc>
   3ccb0:	ldr	r1, [r4, #16]
   3ccb4:	cmp	r0, r1
   3ccb8:	bcc	3cccc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2bc>
   3ccbc:	ldr	r2, [r4, #44]	; 0x2c
   3ccc0:	mov	r0, r4
   3ccc4:	mov	r1, #0
   3ccc8:	blx	r2
   3cccc:	ldrsb	r1, [r7], #1
   3ccd0:	mov	r0, r4
   3ccd4:	blx	sl
   3ccd8:	cmp	r9, #0
   3ccdc:	bne	3cbd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c4>
   3cce0:	ldrb	r1, [r4, #25]
   3cce4:	ldr	r0, [r4, #20]
   3cce8:	cmp	r1, #0
   3ccec:	beq	3cdac <flatcc_json_printer_int8_enum_vector_field@@Base+0x39c>
   3ccf0:	add	r1, r0, #1
   3ccf4:	str	r1, [r4, #20]
   3ccf8:	mov	r1, #10
   3ccfc:	strb	r1, [r0]
   3cd00:	ldr	r0, [r4, #32]
   3cd04:	sub	r2, r0, #1
   3cd08:	str	r2, [r4, #32]
   3cd0c:	ldrb	r3, [r4, #25]
   3cd10:	ldr	r0, [r4, #20]
   3cd14:	ldr	r1, [r4, #16]
   3cd18:	mla	r7, r2, r3, r0
   3cd1c:	mul	r5, r2, r3
   3cd20:	cmp	r7, r1
   3cd24:	bls	3cd94 <flatcc_json_printer_int8_enum_vector_field@@Base+0x384>
   3cd28:	cmp	r0, r1
   3cd2c:	bcc	3cd48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x338>
   3cd30:	ldr	r2, [r4, #44]	; 0x2c
   3cd34:	mov	r0, r4
   3cd38:	mov	r1, #0
   3cd3c:	blx	r2
   3cd40:	ldr	r1, [r4, #16]
   3cd44:	ldr	r0, [r4, #20]
   3cd48:	sub	r6, r1, r0
   3cd4c:	cmp	r6, r5
   3cd50:	bcs	3cd94 <flatcc_json_printer_int8_enum_vector_field@@Base+0x384>
   3cd54:	mov	r1, #32
   3cd58:	mov	r2, r6
   3cd5c:	bl	14ef0 <memset@plt>
   3cd60:	ldr	r0, [r4, #20]
   3cd64:	ldr	r2, [r4, #44]	; 0x2c
   3cd68:	mov	r1, #0
   3cd6c:	add	r0, r0, r6
   3cd70:	str	r0, [r4, #20]
   3cd74:	mov	r0, r4
   3cd78:	blx	r2
   3cd7c:	ldr	r1, [r4, #16]
   3cd80:	ldr	r0, [r4, #20]
   3cd84:	sub	r5, r5, r6
   3cd88:	sub	r6, r1, r0
   3cd8c:	cmp	r5, r6
   3cd90:	bhi	3cd54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x344>
   3cd94:	mov	r1, #32
   3cd98:	mov	r2, r5
   3cd9c:	bl	14ef0 <memset@plt>
   3cda0:	ldr	r0, [r4, #20]
   3cda4:	add	r0, r0, r5
   3cda8:	str	r0, [r4, #20]
   3cdac:	add	r1, r0, #1
   3cdb0:	str	r1, [r4, #20]
   3cdb4:	mov	r1, #93	; 0x5d
   3cdb8:	strb	r1, [r0]
   3cdbc:	sub	sp, fp, #28
   3cdc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003cdc4 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   3cdc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cdc8:	add	fp, sp, #28
   3cdcc:	sub	sp, sp, #4
   3cdd0:	mov	r4, r0
   3cdd4:	ldrb	r0, [r0, #27]
   3cdd8:	cmp	r0, #0
   3cddc:	beq	3cdf0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   3cde0:	mov	r0, r4
   3cde4:	sub	sp, fp, #28
   3cde8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cdec:	b	3a040 <flatcc_json_printer_int16_vector_field@@Base>
   3cdf0:	mov	r0, #4
   3cdf4:	add	r0, r0, r2, lsl #1
   3cdf8:	ldr	r2, [r1, #8]
   3cdfc:	cmp	r0, r2
   3ce00:	bge	3d170 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3ac>
   3ce04:	ldr	r2, [r1, #4]
   3ce08:	add	r0, r2, r0
   3ce0c:	ldrh	r0, [r0]
   3ce10:	cmp	r0, #0
   3ce14:	ldrne	r2, [r1]
   3ce18:	addsne	r8, r2, r0
   3ce1c:	beq	3d170 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3ac>
   3ce20:	ldr	r0, [r1, #16]
   3ce24:	ldr	sl, [fp, #12]
   3ce28:	ldr	r2, [fp, #8]
   3ce2c:	add	r7, r0, #1
   3ce30:	cmp	r0, #0
   3ce34:	str	r7, [r1, #16]
   3ce38:	ldrne	r0, [r4, #20]
   3ce3c:	addne	r1, r0, #1
   3ce40:	strne	r1, [r4, #20]
   3ce44:	movne	r1, #44	; 0x2c
   3ce48:	strbne	r1, [r0]
   3ce4c:	mov	r1, r3
   3ce50:	ldr	r0, [r8]
   3ce54:	ldr	r9, [r8, r0]!
   3ce58:	mov	r0, r4
   3ce5c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3ce60:	ldr	r1, [r4, #32]
   3ce64:	ldr	r0, [r4, #20]
   3ce68:	cmp	r9, #0
   3ce6c:	add	r1, r1, #1
   3ce70:	str	r1, [r4, #32]
   3ce74:	add	r1, r0, #1
   3ce78:	str	r1, [r4, #20]
   3ce7c:	mov	r1, #91	; 0x5b
   3ce80:	strb	r1, [r0]
   3ce84:	beq	3d094 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d0>
   3ce88:	ldrb	r1, [r4, #25]
   3ce8c:	ldr	r0, [r4, #20]
   3ce90:	cmp	r1, #0
   3ce94:	beq	3cf50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18c>
   3ce98:	add	r1, r0, #1
   3ce9c:	str	r1, [r4, #20]
   3cea0:	mov	r1, #10
   3cea4:	strb	r1, [r0]
   3cea8:	ldr	r0, [r4, #20]
   3ceac:	ldrb	r2, [r4, #25]
   3ceb0:	ldr	r3, [r4, #32]
   3ceb4:	ldr	r1, [r4, #16]
   3ceb8:	mla	r7, r3, r2, r0
   3cebc:	mul	r5, r3, r2
   3cec0:	cmp	r7, r1
   3cec4:	bls	3cf34 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
   3cec8:	cmp	r0, r1
   3cecc:	bcc	3cee8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x124>
   3ced0:	ldr	r2, [r4, #44]	; 0x2c
   3ced4:	mov	r0, r4
   3ced8:	mov	r1, #0
   3cedc:	blx	r2
   3cee0:	ldr	r1, [r4, #16]
   3cee4:	ldr	r0, [r4, #20]
   3cee8:	sub	r6, r1, r0
   3ceec:	cmp	r6, r5
   3cef0:	bcs	3cf34 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
   3cef4:	mov	r1, #32
   3cef8:	mov	r2, r6
   3cefc:	bl	14ef0 <memset@plt>
   3cf00:	ldr	r0, [r4, #20]
   3cf04:	ldr	r2, [r4, #44]	; 0x2c
   3cf08:	mov	r1, #0
   3cf0c:	add	r0, r0, r6
   3cf10:	str	r0, [r4, #20]
   3cf14:	mov	r0, r4
   3cf18:	blx	r2
   3cf1c:	ldr	r1, [r4, #16]
   3cf20:	ldr	r0, [r4, #20]
   3cf24:	sub	r5, r5, r6
   3cf28:	sub	r6, r1, r0
   3cf2c:	cmp	r5, r6
   3cf30:	bhi	3cef4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   3cf34:	mov	r1, #32
   3cf38:	mov	r2, r5
   3cf3c:	bl	14ef0 <memset@plt>
   3cf40:	ldr	r0, [r4, #20]
   3cf44:	add	r0, r0, r5
   3cf48:	str	r0, [r4, #20]
   3cf4c:	b	3cf6c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   3cf50:	ldr	r1, [r4, #16]
   3cf54:	cmp	r0, r1
   3cf58:	bcc	3cf6c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   3cf5c:	ldr	r2, [r4, #44]	; 0x2c
   3cf60:	mov	r0, r4
   3cf64:	mov	r1, #0
   3cf68:	blx	r2
   3cf6c:	ldrsh	r1, [r8, #4]
   3cf70:	mov	r0, r4
   3cf74:	blx	sl
   3cf78:	subs	r9, r9, #1
   3cf7c:	beq	3d094 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d0>
   3cf80:	add	r7, r8, #6
   3cf84:	mov	r8, #44	; 0x2c
   3cf88:	ldr	r0, [r4, #20]
   3cf8c:	sub	r9, r9, #1
   3cf90:	add	r1, r0, #1
   3cf94:	str	r1, [r4, #20]
   3cf98:	strb	r8, [r0]
   3cf9c:	ldrb	r1, [r4, #25]
   3cfa0:	ldr	r0, [r4, #20]
   3cfa4:	cmp	r1, #0
   3cfa8:	beq	3d064 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a0>
   3cfac:	add	r1, r0, #1
   3cfb0:	str	r1, [r4, #20]
   3cfb4:	mov	r1, #10
   3cfb8:	strb	r1, [r0]
   3cfbc:	ldr	r0, [r4, #20]
   3cfc0:	ldrb	r2, [r4, #25]
   3cfc4:	ldr	r3, [r4, #32]
   3cfc8:	ldr	r1, [r4, #16]
   3cfcc:	mla	r6, r3, r2, r0
   3cfd0:	mul	r5, r3, r2
   3cfd4:	cmp	r6, r1
   3cfd8:	bls	3d048 <flatcc_json_printer_int16_enum_vector_field@@Base+0x284>
   3cfdc:	cmp	r0, r1
   3cfe0:	bcc	3cffc <flatcc_json_printer_int16_enum_vector_field@@Base+0x238>
   3cfe4:	ldr	r2, [r4, #44]	; 0x2c
   3cfe8:	mov	r0, r4
   3cfec:	mov	r1, #0
   3cff0:	blx	r2
   3cff4:	ldr	r1, [r4, #16]
   3cff8:	ldr	r0, [r4, #20]
   3cffc:	sub	r6, r1, r0
   3d000:	cmp	r6, r5
   3d004:	bcs	3d048 <flatcc_json_printer_int16_enum_vector_field@@Base+0x284>
   3d008:	mov	r1, #32
   3d00c:	mov	r2, r6
   3d010:	bl	14ef0 <memset@plt>
   3d014:	ldr	r0, [r4, #20]
   3d018:	ldr	r2, [r4, #44]	; 0x2c
   3d01c:	mov	r1, #0
   3d020:	add	r0, r0, r6
   3d024:	str	r0, [r4, #20]
   3d028:	mov	r0, r4
   3d02c:	blx	r2
   3d030:	ldr	r1, [r4, #16]
   3d034:	ldr	r0, [r4, #20]
   3d038:	sub	r5, r5, r6
   3d03c:	sub	r6, r1, r0
   3d040:	cmp	r5, r6
   3d044:	bhi	3d008 <flatcc_json_printer_int16_enum_vector_field@@Base+0x244>
   3d048:	mov	r1, #32
   3d04c:	mov	r2, r5
   3d050:	bl	14ef0 <memset@plt>
   3d054:	ldr	r0, [r4, #20]
   3d058:	add	r0, r0, r5
   3d05c:	str	r0, [r4, #20]
   3d060:	b	3d080 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2bc>
   3d064:	ldr	r1, [r4, #16]
   3d068:	cmp	r0, r1
   3d06c:	bcc	3d080 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2bc>
   3d070:	ldr	r2, [r4, #44]	; 0x2c
   3d074:	mov	r0, r4
   3d078:	mov	r1, #0
   3d07c:	blx	r2
   3d080:	ldrsh	r1, [r7], #2
   3d084:	mov	r0, r4
   3d088:	blx	sl
   3d08c:	cmp	r9, #0
   3d090:	bne	3cf88 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c4>
   3d094:	ldrb	r1, [r4, #25]
   3d098:	ldr	r0, [r4, #20]
   3d09c:	cmp	r1, #0
   3d0a0:	beq	3d160 <flatcc_json_printer_int16_enum_vector_field@@Base+0x39c>
   3d0a4:	add	r1, r0, #1
   3d0a8:	str	r1, [r4, #20]
   3d0ac:	mov	r1, #10
   3d0b0:	strb	r1, [r0]
   3d0b4:	ldr	r0, [r4, #32]
   3d0b8:	sub	r2, r0, #1
   3d0bc:	str	r2, [r4, #32]
   3d0c0:	ldrb	r3, [r4, #25]
   3d0c4:	ldr	r0, [r4, #20]
   3d0c8:	ldr	r1, [r4, #16]
   3d0cc:	mla	r7, r2, r3, r0
   3d0d0:	mul	r5, r2, r3
   3d0d4:	cmp	r7, r1
   3d0d8:	bls	3d148 <flatcc_json_printer_int16_enum_vector_field@@Base+0x384>
   3d0dc:	cmp	r0, r1
   3d0e0:	bcc	3d0fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x338>
   3d0e4:	ldr	r2, [r4, #44]	; 0x2c
   3d0e8:	mov	r0, r4
   3d0ec:	mov	r1, #0
   3d0f0:	blx	r2
   3d0f4:	ldr	r1, [r4, #16]
   3d0f8:	ldr	r0, [r4, #20]
   3d0fc:	sub	r6, r1, r0
   3d100:	cmp	r6, r5
   3d104:	bcs	3d148 <flatcc_json_printer_int16_enum_vector_field@@Base+0x384>
   3d108:	mov	r1, #32
   3d10c:	mov	r2, r6
   3d110:	bl	14ef0 <memset@plt>
   3d114:	ldr	r0, [r4, #20]
   3d118:	ldr	r2, [r4, #44]	; 0x2c
   3d11c:	mov	r1, #0
   3d120:	add	r0, r0, r6
   3d124:	str	r0, [r4, #20]
   3d128:	mov	r0, r4
   3d12c:	blx	r2
   3d130:	ldr	r1, [r4, #16]
   3d134:	ldr	r0, [r4, #20]
   3d138:	sub	r5, r5, r6
   3d13c:	sub	r6, r1, r0
   3d140:	cmp	r5, r6
   3d144:	bhi	3d108 <flatcc_json_printer_int16_enum_vector_field@@Base+0x344>
   3d148:	mov	r1, #32
   3d14c:	mov	r2, r5
   3d150:	bl	14ef0 <memset@plt>
   3d154:	ldr	r0, [r4, #20]
   3d158:	add	r0, r0, r5
   3d15c:	str	r0, [r4, #20]
   3d160:	add	r1, r0, #1
   3d164:	str	r1, [r4, #20]
   3d168:	mov	r1, #93	; 0x5d
   3d16c:	strb	r1, [r0]
   3d170:	sub	sp, fp, #28
   3d174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d178 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   3d178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d17c:	add	fp, sp, #28
   3d180:	sub	sp, sp, #4
   3d184:	mov	r4, r0
   3d188:	ldrb	r0, [r0, #27]
   3d18c:	cmp	r0, #0
   3d190:	beq	3d1a4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   3d194:	mov	r0, r4
   3d198:	sub	sp, fp, #28
   3d19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d1a0:	b	3a430 <flatcc_json_printer_int32_vector_field@@Base>
   3d1a4:	mov	r0, #4
   3d1a8:	add	r0, r0, r2, lsl #1
   3d1ac:	ldr	r2, [r1, #8]
   3d1b0:	cmp	r0, r2
   3d1b4:	bge	3d524 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3ac>
   3d1b8:	ldr	r2, [r1, #4]
   3d1bc:	add	r0, r2, r0
   3d1c0:	ldrh	r0, [r0]
   3d1c4:	cmp	r0, #0
   3d1c8:	ldrne	r2, [r1]
   3d1cc:	addsne	r8, r2, r0
   3d1d0:	beq	3d524 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3ac>
   3d1d4:	ldr	r0, [r1, #16]
   3d1d8:	ldr	sl, [fp, #12]
   3d1dc:	ldr	r2, [fp, #8]
   3d1e0:	add	r7, r0, #1
   3d1e4:	cmp	r0, #0
   3d1e8:	str	r7, [r1, #16]
   3d1ec:	ldrne	r0, [r4, #20]
   3d1f0:	addne	r1, r0, #1
   3d1f4:	strne	r1, [r4, #20]
   3d1f8:	movne	r1, #44	; 0x2c
   3d1fc:	strbne	r1, [r0]
   3d200:	mov	r1, r3
   3d204:	ldr	r0, [r8]
   3d208:	ldr	r9, [r8, r0]!
   3d20c:	mov	r0, r4
   3d210:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3d214:	ldr	r1, [r4, #32]
   3d218:	ldr	r0, [r4, #20]
   3d21c:	cmp	r9, #0
   3d220:	add	r1, r1, #1
   3d224:	str	r1, [r4, #32]
   3d228:	add	r1, r0, #1
   3d22c:	str	r1, [r4, #20]
   3d230:	mov	r1, #91	; 0x5b
   3d234:	strb	r1, [r0]
   3d238:	beq	3d448 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d0>
   3d23c:	ldrb	r1, [r4, #25]
   3d240:	ldr	r0, [r4, #20]
   3d244:	cmp	r1, #0
   3d248:	beq	3d304 <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   3d24c:	add	r1, r0, #1
   3d250:	str	r1, [r4, #20]
   3d254:	mov	r1, #10
   3d258:	strb	r1, [r0]
   3d25c:	ldr	r0, [r4, #20]
   3d260:	ldrb	r2, [r4, #25]
   3d264:	ldr	r3, [r4, #32]
   3d268:	ldr	r1, [r4, #16]
   3d26c:	mla	r7, r3, r2, r0
   3d270:	mul	r5, r3, r2
   3d274:	cmp	r7, r1
   3d278:	bls	3d2e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
   3d27c:	cmp	r0, r1
   3d280:	bcc	3d29c <flatcc_json_printer_int32_enum_vector_field@@Base+0x124>
   3d284:	ldr	r2, [r4, #44]	; 0x2c
   3d288:	mov	r0, r4
   3d28c:	mov	r1, #0
   3d290:	blx	r2
   3d294:	ldr	r1, [r4, #16]
   3d298:	ldr	r0, [r4, #20]
   3d29c:	sub	r6, r1, r0
   3d2a0:	cmp	r6, r5
   3d2a4:	bcs	3d2e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
   3d2a8:	mov	r1, #32
   3d2ac:	mov	r2, r6
   3d2b0:	bl	14ef0 <memset@plt>
   3d2b4:	ldr	r0, [r4, #20]
   3d2b8:	ldr	r2, [r4, #44]	; 0x2c
   3d2bc:	mov	r1, #0
   3d2c0:	add	r0, r0, r6
   3d2c4:	str	r0, [r4, #20]
   3d2c8:	mov	r0, r4
   3d2cc:	blx	r2
   3d2d0:	ldr	r1, [r4, #16]
   3d2d4:	ldr	r0, [r4, #20]
   3d2d8:	sub	r5, r5, r6
   3d2dc:	sub	r6, r1, r0
   3d2e0:	cmp	r5, r6
   3d2e4:	bhi	3d2a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   3d2e8:	mov	r1, #32
   3d2ec:	mov	r2, r5
   3d2f0:	bl	14ef0 <memset@plt>
   3d2f4:	ldr	r0, [r4, #20]
   3d2f8:	add	r0, r0, r5
   3d2fc:	str	r0, [r4, #20]
   3d300:	b	3d320 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   3d304:	ldr	r1, [r4, #16]
   3d308:	cmp	r0, r1
   3d30c:	bcc	3d320 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   3d310:	ldr	r2, [r4, #44]	; 0x2c
   3d314:	mov	r0, r4
   3d318:	mov	r1, #0
   3d31c:	blx	r2
   3d320:	ldr	r1, [r8, #4]
   3d324:	mov	r0, r4
   3d328:	blx	sl
   3d32c:	subs	r9, r9, #1
   3d330:	beq	3d448 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d0>
   3d334:	add	r7, r8, #8
   3d338:	mov	r8, #44	; 0x2c
   3d33c:	ldr	r0, [r4, #20]
   3d340:	sub	r9, r9, #1
   3d344:	add	r1, r0, #1
   3d348:	str	r1, [r4, #20]
   3d34c:	strb	r8, [r0]
   3d350:	ldrb	r1, [r4, #25]
   3d354:	ldr	r0, [r4, #20]
   3d358:	cmp	r1, #0
   3d35c:	beq	3d418 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a0>
   3d360:	add	r1, r0, #1
   3d364:	str	r1, [r4, #20]
   3d368:	mov	r1, #10
   3d36c:	strb	r1, [r0]
   3d370:	ldr	r0, [r4, #20]
   3d374:	ldrb	r2, [r4, #25]
   3d378:	ldr	r3, [r4, #32]
   3d37c:	ldr	r1, [r4, #16]
   3d380:	mla	r6, r3, r2, r0
   3d384:	mul	r5, r3, r2
   3d388:	cmp	r6, r1
   3d38c:	bls	3d3fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x284>
   3d390:	cmp	r0, r1
   3d394:	bcc	3d3b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x238>
   3d398:	ldr	r2, [r4, #44]	; 0x2c
   3d39c:	mov	r0, r4
   3d3a0:	mov	r1, #0
   3d3a4:	blx	r2
   3d3a8:	ldr	r1, [r4, #16]
   3d3ac:	ldr	r0, [r4, #20]
   3d3b0:	sub	r6, r1, r0
   3d3b4:	cmp	r6, r5
   3d3b8:	bcs	3d3fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x284>
   3d3bc:	mov	r1, #32
   3d3c0:	mov	r2, r6
   3d3c4:	bl	14ef0 <memset@plt>
   3d3c8:	ldr	r0, [r4, #20]
   3d3cc:	ldr	r2, [r4, #44]	; 0x2c
   3d3d0:	mov	r1, #0
   3d3d4:	add	r0, r0, r6
   3d3d8:	str	r0, [r4, #20]
   3d3dc:	mov	r0, r4
   3d3e0:	blx	r2
   3d3e4:	ldr	r1, [r4, #16]
   3d3e8:	ldr	r0, [r4, #20]
   3d3ec:	sub	r5, r5, r6
   3d3f0:	sub	r6, r1, r0
   3d3f4:	cmp	r5, r6
   3d3f8:	bhi	3d3bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x244>
   3d3fc:	mov	r1, #32
   3d400:	mov	r2, r5
   3d404:	bl	14ef0 <memset@plt>
   3d408:	ldr	r0, [r4, #20]
   3d40c:	add	r0, r0, r5
   3d410:	str	r0, [r4, #20]
   3d414:	b	3d434 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   3d418:	ldr	r1, [r4, #16]
   3d41c:	cmp	r0, r1
   3d420:	bcc	3d434 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   3d424:	ldr	r2, [r4, #44]	; 0x2c
   3d428:	mov	r0, r4
   3d42c:	mov	r1, #0
   3d430:	blx	r2
   3d434:	ldr	r1, [r7], #4
   3d438:	mov	r0, r4
   3d43c:	blx	sl
   3d440:	cmp	r9, #0
   3d444:	bne	3d33c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c4>
   3d448:	ldrb	r1, [r4, #25]
   3d44c:	ldr	r0, [r4, #20]
   3d450:	cmp	r1, #0
   3d454:	beq	3d514 <flatcc_json_printer_int32_enum_vector_field@@Base+0x39c>
   3d458:	add	r1, r0, #1
   3d45c:	str	r1, [r4, #20]
   3d460:	mov	r1, #10
   3d464:	strb	r1, [r0]
   3d468:	ldr	r0, [r4, #32]
   3d46c:	sub	r2, r0, #1
   3d470:	str	r2, [r4, #32]
   3d474:	ldrb	r3, [r4, #25]
   3d478:	ldr	r0, [r4, #20]
   3d47c:	ldr	r1, [r4, #16]
   3d480:	mla	r7, r2, r3, r0
   3d484:	mul	r5, r2, r3
   3d488:	cmp	r7, r1
   3d48c:	bls	3d4fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x384>
   3d490:	cmp	r0, r1
   3d494:	bcc	3d4b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x338>
   3d498:	ldr	r2, [r4, #44]	; 0x2c
   3d49c:	mov	r0, r4
   3d4a0:	mov	r1, #0
   3d4a4:	blx	r2
   3d4a8:	ldr	r1, [r4, #16]
   3d4ac:	ldr	r0, [r4, #20]
   3d4b0:	sub	r6, r1, r0
   3d4b4:	cmp	r6, r5
   3d4b8:	bcs	3d4fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x384>
   3d4bc:	mov	r1, #32
   3d4c0:	mov	r2, r6
   3d4c4:	bl	14ef0 <memset@plt>
   3d4c8:	ldr	r0, [r4, #20]
   3d4cc:	ldr	r2, [r4, #44]	; 0x2c
   3d4d0:	mov	r1, #0
   3d4d4:	add	r0, r0, r6
   3d4d8:	str	r0, [r4, #20]
   3d4dc:	mov	r0, r4
   3d4e0:	blx	r2
   3d4e4:	ldr	r1, [r4, #16]
   3d4e8:	ldr	r0, [r4, #20]
   3d4ec:	sub	r5, r5, r6
   3d4f0:	sub	r6, r1, r0
   3d4f4:	cmp	r5, r6
   3d4f8:	bhi	3d4bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x344>
   3d4fc:	mov	r1, #32
   3d500:	mov	r2, r5
   3d504:	bl	14ef0 <memset@plt>
   3d508:	ldr	r0, [r4, #20]
   3d50c:	add	r0, r0, r5
   3d510:	str	r0, [r4, #20]
   3d514:	add	r1, r0, #1
   3d518:	str	r1, [r4, #20]
   3d51c:	mov	r1, #93	; 0x5d
   3d520:	strb	r1, [r0]
   3d524:	sub	sp, fp, #28
   3d528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d52c <flatcc_json_printer_int64_enum_vector_field@@Base>:
   3d52c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d530:	add	fp, sp, #28
   3d534:	sub	sp, sp, #4
   3d538:	mov	r4, r0
   3d53c:	ldrb	r0, [r0, #27]
   3d540:	cmp	r0, #0
   3d544:	beq	3d558 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   3d548:	mov	r0, r4
   3d54c:	sub	sp, fp, #28
   3d550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d554:	b	3a810 <flatcc_json_printer_int64_vector_field@@Base>
   3d558:	mov	r0, #4
   3d55c:	add	r0, r0, r2, lsl #1
   3d560:	ldr	r2, [r1, #8]
   3d564:	cmp	r0, r2
   3d568:	bge	3d8dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b0>
   3d56c:	ldr	r2, [r1, #4]
   3d570:	add	r0, r2, r0
   3d574:	ldrh	r0, [r0]
   3d578:	cmp	r0, #0
   3d57c:	ldrne	r2, [r1]
   3d580:	addsne	r8, r2, r0
   3d584:	beq	3d8dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b0>
   3d588:	ldr	r0, [r1, #16]
   3d58c:	ldr	sl, [fp, #12]
   3d590:	ldr	r2, [fp, #8]
   3d594:	add	r7, r0, #1
   3d598:	cmp	r0, #0
   3d59c:	str	r7, [r1, #16]
   3d5a0:	ldrne	r0, [r4, #20]
   3d5a4:	addne	r1, r0, #1
   3d5a8:	strne	r1, [r4, #20]
   3d5ac:	movne	r1, #44	; 0x2c
   3d5b0:	strbne	r1, [r0]
   3d5b4:	mov	r1, r3
   3d5b8:	ldr	r0, [r8]
   3d5bc:	ldr	r9, [r8, r0]!
   3d5c0:	mov	r0, r4
   3d5c4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3d5c8:	ldr	r1, [r4, #32]
   3d5cc:	ldr	r0, [r4, #20]
   3d5d0:	cmp	r9, #0
   3d5d4:	add	r1, r1, #1
   3d5d8:	str	r1, [r4, #32]
   3d5dc:	add	r1, r0, #1
   3d5e0:	str	r1, [r4, #20]
   3d5e4:	mov	r1, #91	; 0x5b
   3d5e8:	strb	r1, [r0]
   3d5ec:	beq	3d800 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d4>
   3d5f0:	ldrb	r1, [r4, #25]
   3d5f4:	ldr	r0, [r4, #20]
   3d5f8:	cmp	r1, #0
   3d5fc:	beq	3d6b8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   3d600:	add	r1, r0, #1
   3d604:	str	r1, [r4, #20]
   3d608:	mov	r1, #10
   3d60c:	strb	r1, [r0]
   3d610:	ldr	r0, [r4, #20]
   3d614:	ldrb	r2, [r4, #25]
   3d618:	ldr	r3, [r4, #32]
   3d61c:	ldr	r1, [r4, #16]
   3d620:	mla	r7, r3, r2, r0
   3d624:	mul	r5, r3, r2
   3d628:	cmp	r7, r1
   3d62c:	bls	3d69c <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
   3d630:	cmp	r0, r1
   3d634:	bcc	3d650 <flatcc_json_printer_int64_enum_vector_field@@Base+0x124>
   3d638:	ldr	r2, [r4, #44]	; 0x2c
   3d63c:	mov	r0, r4
   3d640:	mov	r1, #0
   3d644:	blx	r2
   3d648:	ldr	r1, [r4, #16]
   3d64c:	ldr	r0, [r4, #20]
   3d650:	sub	r6, r1, r0
   3d654:	cmp	r6, r5
   3d658:	bcs	3d69c <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
   3d65c:	mov	r1, #32
   3d660:	mov	r2, r6
   3d664:	bl	14ef0 <memset@plt>
   3d668:	ldr	r0, [r4, #20]
   3d66c:	ldr	r2, [r4, #44]	; 0x2c
   3d670:	mov	r1, #0
   3d674:	add	r0, r0, r6
   3d678:	str	r0, [r4, #20]
   3d67c:	mov	r0, r4
   3d680:	blx	r2
   3d684:	ldr	r1, [r4, #16]
   3d688:	ldr	r0, [r4, #20]
   3d68c:	sub	r5, r5, r6
   3d690:	sub	r6, r1, r0
   3d694:	cmp	r5, r6
   3d698:	bhi	3d65c <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   3d69c:	mov	r1, #32
   3d6a0:	mov	r2, r5
   3d6a4:	bl	14ef0 <memset@plt>
   3d6a8:	ldr	r0, [r4, #20]
   3d6ac:	add	r0, r0, r5
   3d6b0:	str	r0, [r4, #20]
   3d6b4:	b	3d6d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   3d6b8:	ldr	r1, [r4, #16]
   3d6bc:	cmp	r0, r1
   3d6c0:	bcc	3d6d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   3d6c4:	ldr	r2, [r4, #44]	; 0x2c
   3d6c8:	mov	r0, r4
   3d6cc:	mov	r1, #0
   3d6d0:	blx	r2
   3d6d4:	ldrd	r2, [r8, #4]
   3d6d8:	mov	r0, r4
   3d6dc:	blx	sl
   3d6e0:	subs	r9, r9, #1
   3d6e4:	beq	3d800 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d4>
   3d6e8:	add	r7, r8, #12
   3d6ec:	mov	r8, #44	; 0x2c
   3d6f0:	ldr	r0, [r4, #20]
   3d6f4:	sub	r9, r9, #1
   3d6f8:	add	r1, r0, #1
   3d6fc:	str	r1, [r4, #20]
   3d700:	strb	r8, [r0]
   3d704:	ldrb	r1, [r4, #25]
   3d708:	ldr	r0, [r4, #20]
   3d70c:	cmp	r1, #0
   3d710:	beq	3d7cc <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a0>
   3d714:	add	r1, r0, #1
   3d718:	str	r1, [r4, #20]
   3d71c:	mov	r1, #10
   3d720:	strb	r1, [r0]
   3d724:	ldr	r0, [r4, #20]
   3d728:	ldrb	r2, [r4, #25]
   3d72c:	ldr	r3, [r4, #32]
   3d730:	ldr	r1, [r4, #16]
   3d734:	mla	r6, r3, r2, r0
   3d738:	mul	r5, r3, r2
   3d73c:	cmp	r6, r1
   3d740:	bls	3d7b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   3d744:	cmp	r0, r1
   3d748:	bcc	3d764 <flatcc_json_printer_int64_enum_vector_field@@Base+0x238>
   3d74c:	ldr	r2, [r4, #44]	; 0x2c
   3d750:	mov	r0, r4
   3d754:	mov	r1, #0
   3d758:	blx	r2
   3d75c:	ldr	r1, [r4, #16]
   3d760:	ldr	r0, [r4, #20]
   3d764:	sub	r6, r1, r0
   3d768:	cmp	r6, r5
   3d76c:	bcs	3d7b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   3d770:	mov	r1, #32
   3d774:	mov	r2, r6
   3d778:	bl	14ef0 <memset@plt>
   3d77c:	ldr	r0, [r4, #20]
   3d780:	ldr	r2, [r4, #44]	; 0x2c
   3d784:	mov	r1, #0
   3d788:	add	r0, r0, r6
   3d78c:	str	r0, [r4, #20]
   3d790:	mov	r0, r4
   3d794:	blx	r2
   3d798:	ldr	r1, [r4, #16]
   3d79c:	ldr	r0, [r4, #20]
   3d7a0:	sub	r5, r5, r6
   3d7a4:	sub	r6, r1, r0
   3d7a8:	cmp	r5, r6
   3d7ac:	bhi	3d770 <flatcc_json_printer_int64_enum_vector_field@@Base+0x244>
   3d7b0:	mov	r1, #32
   3d7b4:	mov	r2, r5
   3d7b8:	bl	14ef0 <memset@plt>
   3d7bc:	ldr	r0, [r4, #20]
   3d7c0:	add	r0, r0, r5
   3d7c4:	str	r0, [r4, #20]
   3d7c8:	b	3d7e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2bc>
   3d7cc:	ldr	r1, [r4, #16]
   3d7d0:	cmp	r0, r1
   3d7d4:	bcc	3d7e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2bc>
   3d7d8:	ldr	r2, [r4, #44]	; 0x2c
   3d7dc:	mov	r0, r4
   3d7e0:	mov	r1, #0
   3d7e4:	blx	r2
   3d7e8:	ldrd	r2, [r7]
   3d7ec:	mov	r0, r4
   3d7f0:	blx	sl
   3d7f4:	add	r7, r7, #8
   3d7f8:	cmp	r9, #0
   3d7fc:	bne	3d6f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c4>
   3d800:	ldrb	r1, [r4, #25]
   3d804:	ldr	r0, [r4, #20]
   3d808:	cmp	r1, #0
   3d80c:	beq	3d8cc <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a0>
   3d810:	add	r1, r0, #1
   3d814:	str	r1, [r4, #20]
   3d818:	mov	r1, #10
   3d81c:	strb	r1, [r0]
   3d820:	ldr	r0, [r4, #32]
   3d824:	sub	r2, r0, #1
   3d828:	str	r2, [r4, #32]
   3d82c:	ldrb	r3, [r4, #25]
   3d830:	ldr	r0, [r4, #20]
   3d834:	ldr	r1, [r4, #16]
   3d838:	mla	r7, r2, r3, r0
   3d83c:	mul	r5, r2, r3
   3d840:	cmp	r7, r1
   3d844:	bls	3d8b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x388>
   3d848:	cmp	r0, r1
   3d84c:	bcc	3d868 <flatcc_json_printer_int64_enum_vector_field@@Base+0x33c>
   3d850:	ldr	r2, [r4, #44]	; 0x2c
   3d854:	mov	r0, r4
   3d858:	mov	r1, #0
   3d85c:	blx	r2
   3d860:	ldr	r1, [r4, #16]
   3d864:	ldr	r0, [r4, #20]
   3d868:	sub	r6, r1, r0
   3d86c:	cmp	r6, r5
   3d870:	bcs	3d8b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x388>
   3d874:	mov	r1, #32
   3d878:	mov	r2, r6
   3d87c:	bl	14ef0 <memset@plt>
   3d880:	ldr	r0, [r4, #20]
   3d884:	ldr	r2, [r4, #44]	; 0x2c
   3d888:	mov	r1, #0
   3d88c:	add	r0, r0, r6
   3d890:	str	r0, [r4, #20]
   3d894:	mov	r0, r4
   3d898:	blx	r2
   3d89c:	ldr	r1, [r4, #16]
   3d8a0:	ldr	r0, [r4, #20]
   3d8a4:	sub	r5, r5, r6
   3d8a8:	sub	r6, r1, r0
   3d8ac:	cmp	r5, r6
   3d8b0:	bhi	3d874 <flatcc_json_printer_int64_enum_vector_field@@Base+0x348>
   3d8b4:	mov	r1, #32
   3d8b8:	mov	r2, r5
   3d8bc:	bl	14ef0 <memset@plt>
   3d8c0:	ldr	r0, [r4, #20]
   3d8c4:	add	r0, r0, r5
   3d8c8:	str	r0, [r4, #20]
   3d8cc:	add	r1, r0, #1
   3d8d0:	str	r1, [r4, #20]
   3d8d4:	mov	r1, #93	; 0x5d
   3d8d8:	strb	r1, [r0]
   3d8dc:	sub	sp, fp, #28
   3d8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d8e4 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   3d8e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d8e8:	add	fp, sp, #28
   3d8ec:	sub	sp, sp, #4
   3d8f0:	mov	r4, r0
   3d8f4:	ldrb	r0, [r0, #27]
   3d8f8:	cmp	r0, #0
   3d8fc:	beq	3d910 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   3d900:	mov	r0, r4
   3d904:	sub	sp, fp, #28
   3d908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d90c:	b	3ac00 <flatcc_json_printer_bool_vector_field@@Base>
   3d910:	mov	r0, #4
   3d914:	add	r0, r0, r2, lsl #1
   3d918:	ldr	r2, [r1, #8]
   3d91c:	cmp	r0, r2
   3d920:	bge	3dc90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3ac>
   3d924:	ldr	r2, [r1, #4]
   3d928:	add	r0, r2, r0
   3d92c:	ldrh	r0, [r0]
   3d930:	cmp	r0, #0
   3d934:	ldrne	r2, [r1]
   3d938:	addsne	r8, r2, r0
   3d93c:	beq	3dc90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3ac>
   3d940:	ldr	r0, [r1, #16]
   3d944:	ldr	sl, [fp, #12]
   3d948:	ldr	r2, [fp, #8]
   3d94c:	add	r7, r0, #1
   3d950:	cmp	r0, #0
   3d954:	str	r7, [r1, #16]
   3d958:	ldrne	r0, [r4, #20]
   3d95c:	addne	r1, r0, #1
   3d960:	strne	r1, [r4, #20]
   3d964:	movne	r1, #44	; 0x2c
   3d968:	strbne	r1, [r0]
   3d96c:	mov	r1, r3
   3d970:	ldr	r0, [r8]
   3d974:	ldr	r9, [r8, r0]!
   3d978:	mov	r0, r4
   3d97c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3d980:	ldr	r1, [r4, #32]
   3d984:	ldr	r0, [r4, #20]
   3d988:	cmp	r9, #0
   3d98c:	add	r1, r1, #1
   3d990:	str	r1, [r4, #32]
   3d994:	add	r1, r0, #1
   3d998:	str	r1, [r4, #20]
   3d99c:	mov	r1, #91	; 0x5b
   3d9a0:	strb	r1, [r0]
   3d9a4:	beq	3dbb4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d0>
   3d9a8:	ldrb	r1, [r4, #25]
   3d9ac:	ldr	r0, [r4, #20]
   3d9b0:	cmp	r1, #0
   3d9b4:	beq	3da70 <flatcc_json_printer_bool_enum_vector_field@@Base+0x18c>
   3d9b8:	add	r1, r0, #1
   3d9bc:	str	r1, [r4, #20]
   3d9c0:	mov	r1, #10
   3d9c4:	strb	r1, [r0]
   3d9c8:	ldr	r0, [r4, #20]
   3d9cc:	ldrb	r2, [r4, #25]
   3d9d0:	ldr	r3, [r4, #32]
   3d9d4:	ldr	r1, [r4, #16]
   3d9d8:	mla	r7, r3, r2, r0
   3d9dc:	mul	r5, r3, r2
   3d9e0:	cmp	r7, r1
   3d9e4:	bls	3da54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
   3d9e8:	cmp	r0, r1
   3d9ec:	bcc	3da08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x124>
   3d9f0:	ldr	r2, [r4, #44]	; 0x2c
   3d9f4:	mov	r0, r4
   3d9f8:	mov	r1, #0
   3d9fc:	blx	r2
   3da00:	ldr	r1, [r4, #16]
   3da04:	ldr	r0, [r4, #20]
   3da08:	sub	r6, r1, r0
   3da0c:	cmp	r6, r5
   3da10:	bcs	3da54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
   3da14:	mov	r1, #32
   3da18:	mov	r2, r6
   3da1c:	bl	14ef0 <memset@plt>
   3da20:	ldr	r0, [r4, #20]
   3da24:	ldr	r2, [r4, #44]	; 0x2c
   3da28:	mov	r1, #0
   3da2c:	add	r0, r0, r6
   3da30:	str	r0, [r4, #20]
   3da34:	mov	r0, r4
   3da38:	blx	r2
   3da3c:	ldr	r1, [r4, #16]
   3da40:	ldr	r0, [r4, #20]
   3da44:	sub	r5, r5, r6
   3da48:	sub	r6, r1, r0
   3da4c:	cmp	r5, r6
   3da50:	bhi	3da14 <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   3da54:	mov	r1, #32
   3da58:	mov	r2, r5
   3da5c:	bl	14ef0 <memset@plt>
   3da60:	ldr	r0, [r4, #20]
   3da64:	add	r0, r0, r5
   3da68:	str	r0, [r4, #20]
   3da6c:	b	3da8c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   3da70:	ldr	r1, [r4, #16]
   3da74:	cmp	r0, r1
   3da78:	bcc	3da8c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   3da7c:	ldr	r2, [r4, #44]	; 0x2c
   3da80:	mov	r0, r4
   3da84:	mov	r1, #0
   3da88:	blx	r2
   3da8c:	ldrb	r1, [r8, #4]
   3da90:	mov	r0, r4
   3da94:	blx	sl
   3da98:	subs	r9, r9, #1
   3da9c:	beq	3dbb4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d0>
   3daa0:	add	r7, r8, #5
   3daa4:	mov	r8, #44	; 0x2c
   3daa8:	ldr	r0, [r4, #20]
   3daac:	sub	r9, r9, #1
   3dab0:	add	r1, r0, #1
   3dab4:	str	r1, [r4, #20]
   3dab8:	strb	r8, [r0]
   3dabc:	ldrb	r1, [r4, #25]
   3dac0:	ldr	r0, [r4, #20]
   3dac4:	cmp	r1, #0
   3dac8:	beq	3db84 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a0>
   3dacc:	add	r1, r0, #1
   3dad0:	str	r1, [r4, #20]
   3dad4:	mov	r1, #10
   3dad8:	strb	r1, [r0]
   3dadc:	ldr	r0, [r4, #20]
   3dae0:	ldrb	r2, [r4, #25]
   3dae4:	ldr	r3, [r4, #32]
   3dae8:	ldr	r1, [r4, #16]
   3daec:	mla	r6, r3, r2, r0
   3daf0:	mul	r5, r3, r2
   3daf4:	cmp	r6, r1
   3daf8:	bls	3db68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x284>
   3dafc:	cmp	r0, r1
   3db00:	bcc	3db1c <flatcc_json_printer_bool_enum_vector_field@@Base+0x238>
   3db04:	ldr	r2, [r4, #44]	; 0x2c
   3db08:	mov	r0, r4
   3db0c:	mov	r1, #0
   3db10:	blx	r2
   3db14:	ldr	r1, [r4, #16]
   3db18:	ldr	r0, [r4, #20]
   3db1c:	sub	r6, r1, r0
   3db20:	cmp	r6, r5
   3db24:	bcs	3db68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x284>
   3db28:	mov	r1, #32
   3db2c:	mov	r2, r6
   3db30:	bl	14ef0 <memset@plt>
   3db34:	ldr	r0, [r4, #20]
   3db38:	ldr	r2, [r4, #44]	; 0x2c
   3db3c:	mov	r1, #0
   3db40:	add	r0, r0, r6
   3db44:	str	r0, [r4, #20]
   3db48:	mov	r0, r4
   3db4c:	blx	r2
   3db50:	ldr	r1, [r4, #16]
   3db54:	ldr	r0, [r4, #20]
   3db58:	sub	r5, r5, r6
   3db5c:	sub	r6, r1, r0
   3db60:	cmp	r5, r6
   3db64:	bhi	3db28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x244>
   3db68:	mov	r1, #32
   3db6c:	mov	r2, r5
   3db70:	bl	14ef0 <memset@plt>
   3db74:	ldr	r0, [r4, #20]
   3db78:	add	r0, r0, r5
   3db7c:	str	r0, [r4, #20]
   3db80:	b	3dba0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2bc>
   3db84:	ldr	r1, [r4, #16]
   3db88:	cmp	r0, r1
   3db8c:	bcc	3dba0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2bc>
   3db90:	ldr	r2, [r4, #44]	; 0x2c
   3db94:	mov	r0, r4
   3db98:	mov	r1, #0
   3db9c:	blx	r2
   3dba0:	ldrb	r1, [r7], #1
   3dba4:	mov	r0, r4
   3dba8:	blx	sl
   3dbac:	cmp	r9, #0
   3dbb0:	bne	3daa8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c4>
   3dbb4:	ldrb	r1, [r4, #25]
   3dbb8:	ldr	r0, [r4, #20]
   3dbbc:	cmp	r1, #0
   3dbc0:	beq	3dc80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x39c>
   3dbc4:	add	r1, r0, #1
   3dbc8:	str	r1, [r4, #20]
   3dbcc:	mov	r1, #10
   3dbd0:	strb	r1, [r0]
   3dbd4:	ldr	r0, [r4, #32]
   3dbd8:	sub	r2, r0, #1
   3dbdc:	str	r2, [r4, #32]
   3dbe0:	ldrb	r3, [r4, #25]
   3dbe4:	ldr	r0, [r4, #20]
   3dbe8:	ldr	r1, [r4, #16]
   3dbec:	mla	r7, r2, r3, r0
   3dbf0:	mul	r5, r2, r3
   3dbf4:	cmp	r7, r1
   3dbf8:	bls	3dc68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x384>
   3dbfc:	cmp	r0, r1
   3dc00:	bcc	3dc1c <flatcc_json_printer_bool_enum_vector_field@@Base+0x338>
   3dc04:	ldr	r2, [r4, #44]	; 0x2c
   3dc08:	mov	r0, r4
   3dc0c:	mov	r1, #0
   3dc10:	blx	r2
   3dc14:	ldr	r1, [r4, #16]
   3dc18:	ldr	r0, [r4, #20]
   3dc1c:	sub	r6, r1, r0
   3dc20:	cmp	r6, r5
   3dc24:	bcs	3dc68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x384>
   3dc28:	mov	r1, #32
   3dc2c:	mov	r2, r6
   3dc30:	bl	14ef0 <memset@plt>
   3dc34:	ldr	r0, [r4, #20]
   3dc38:	ldr	r2, [r4, #44]	; 0x2c
   3dc3c:	mov	r1, #0
   3dc40:	add	r0, r0, r6
   3dc44:	str	r0, [r4, #20]
   3dc48:	mov	r0, r4
   3dc4c:	blx	r2
   3dc50:	ldr	r1, [r4, #16]
   3dc54:	ldr	r0, [r4, #20]
   3dc58:	sub	r5, r5, r6
   3dc5c:	sub	r6, r1, r0
   3dc60:	cmp	r5, r6
   3dc64:	bhi	3dc28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x344>
   3dc68:	mov	r1, #32
   3dc6c:	mov	r2, r5
   3dc70:	bl	14ef0 <memset@plt>
   3dc74:	ldr	r0, [r4, #20]
   3dc78:	add	r0, r0, r5
   3dc7c:	str	r0, [r4, #20]
   3dc80:	add	r1, r0, #1
   3dc84:	str	r1, [r4, #20]
   3dc88:	mov	r1, #93	; 0x5d
   3dc8c:	strb	r1, [r0]
   3dc90:	sub	sp, fp, #28
   3dc94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003dc98 <flatcc_json_printer_struct_vector_field@@Base>:
   3dc98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dc9c:	add	fp, sp, #28
   3dca0:	sub	sp, sp, #4
   3dca4:	mov	r4, r0
   3dca8:	mov	r0, #4
   3dcac:	add	r0, r0, r2, lsl #1
   3dcb0:	ldr	r2, [r1, #8]
   3dcb4:	cmp	r0, r2
   3dcb8:	bge	3e224 <flatcc_json_printer_struct_vector_field@@Base+0x58c>
   3dcbc:	ldr	r2, [r1, #4]
   3dcc0:	add	r0, r2, r0
   3dcc4:	ldrh	r0, [r0]
   3dcc8:	cmp	r0, #0
   3dccc:	ldrne	r2, [r1]
   3dcd0:	addsne	r6, r2, r0
   3dcd4:	beq	3e224 <flatcc_json_printer_struct_vector_field@@Base+0x58c>
   3dcd8:	ldr	r0, [r1, #16]
   3dcdc:	ldr	r2, [fp, #8]
   3dce0:	add	r7, r0, #1
   3dce4:	cmp	r0, #0
   3dce8:	str	r7, [r1, #16]
   3dcec:	ldrne	r0, [r4, #20]
   3dcf0:	addne	r1, r0, #1
   3dcf4:	strne	r1, [r4, #20]
   3dcf8:	movne	r1, #44	; 0x2c
   3dcfc:	strbne	r1, [r0]
   3dd00:	mov	r1, r3
   3dd04:	ldr	r0, [r6]
   3dd08:	ldr	r5, [r6, r0]!
   3dd0c:	mov	r0, r4
   3dd10:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3dd14:	ldr	r1, [r4, #32]
   3dd18:	ldr	r0, [r4, #20]
   3dd1c:	cmp	r5, #0
   3dd20:	add	r1, r1, #1
   3dd24:	str	r1, [r4, #32]
   3dd28:	add	r1, r0, #1
   3dd2c:	str	r1, [r4, #20]
   3dd30:	mov	r1, #91	; 0x5b
   3dd34:	strb	r1, [r0]
   3dd38:	beq	3e148 <flatcc_json_printer_struct_vector_field@@Base+0x4b0>
   3dd3c:	ldrb	r1, [r4, #25]
   3dd40:	ldr	r0, [r4, #20]
   3dd44:	add	r9, r6, #4
   3dd48:	cmp	r1, #0
   3dd4c:	beq	3de08 <flatcc_json_printer_struct_vector_field@@Base+0x170>
   3dd50:	add	r1, r0, #1
   3dd54:	str	r1, [r4, #20]
   3dd58:	mov	r1, #10
   3dd5c:	strb	r1, [r0]
   3dd60:	ldr	r0, [r4, #20]
   3dd64:	ldrb	r2, [r4, #25]
   3dd68:	ldr	r3, [r4, #32]
   3dd6c:	ldr	r1, [r4, #16]
   3dd70:	mla	r7, r3, r2, r0
   3dd74:	mul	r6, r3, r2
   3dd78:	cmp	r7, r1
   3dd7c:	bls	3ddec <flatcc_json_printer_struct_vector_field@@Base+0x154>
   3dd80:	cmp	r0, r1
   3dd84:	bcc	3dda0 <flatcc_json_printer_struct_vector_field@@Base+0x108>
   3dd88:	ldr	r2, [r4, #44]	; 0x2c
   3dd8c:	mov	r0, r4
   3dd90:	mov	r1, #0
   3dd94:	blx	r2
   3dd98:	ldr	r1, [r4, #16]
   3dd9c:	ldr	r0, [r4, #20]
   3dda0:	sub	r7, r1, r0
   3dda4:	cmp	r7, r6
   3dda8:	bcs	3ddec <flatcc_json_printer_struct_vector_field@@Base+0x154>
   3ddac:	mov	r1, #32
   3ddb0:	mov	r2, r7
   3ddb4:	bl	14ef0 <memset@plt>
   3ddb8:	ldr	r0, [r4, #20]
   3ddbc:	ldr	r2, [r4, #44]	; 0x2c
   3ddc0:	mov	r1, #0
   3ddc4:	add	r0, r0, r7
   3ddc8:	str	r0, [r4, #20]
   3ddcc:	mov	r0, r4
   3ddd0:	blx	r2
   3ddd4:	ldr	r1, [r4, #16]
   3ddd8:	ldr	r0, [r4, #20]
   3dddc:	sub	r6, r6, r7
   3dde0:	sub	r7, r1, r0
   3dde4:	cmp	r6, r7
   3dde8:	bhi	3ddac <flatcc_json_printer_struct_vector_field@@Base+0x114>
   3ddec:	mov	r1, #32
   3ddf0:	mov	r2, r6
   3ddf4:	bl	14ef0 <memset@plt>
   3ddf8:	ldr	r0, [r4, #20]
   3ddfc:	add	r0, r0, r6
   3de00:	str	r0, [r4, #20]
   3de04:	b	3de28 <flatcc_json_printer_struct_vector_field@@Base+0x190>
   3de08:	ldr	r1, [r4, #16]
   3de0c:	cmp	r0, r1
   3de10:	bcc	3de28 <flatcc_json_printer_struct_vector_field@@Base+0x190>
   3de14:	ldr	r2, [r4, #44]	; 0x2c
   3de18:	mov	r0, r4
   3de1c:	mov	r1, #0
   3de20:	blx	r2
   3de24:	ldr	r0, [r4, #20]
   3de28:	add	r1, r0, #1
   3de2c:	ldr	r2, [fp, #16]
   3de30:	str	r1, [r4, #20]
   3de34:	ldr	r1, [r4, #32]
   3de38:	add	r1, r1, #1
   3de3c:	str	r1, [r4, #32]
   3de40:	mov	r1, #123	; 0x7b
   3de44:	strb	r1, [r0]
   3de48:	mov	r0, r4
   3de4c:	mov	r1, r9
   3de50:	blx	r2
   3de54:	ldrb	r1, [r4, #25]
   3de58:	ldr	r0, [r4, #20]
   3de5c:	cmp	r1, #0
   3de60:	beq	3df20 <flatcc_json_printer_struct_vector_field@@Base+0x288>
   3de64:	add	r1, r0, #1
   3de68:	str	r1, [r4, #20]
   3de6c:	mov	r1, #10
   3de70:	strb	r1, [r0]
   3de74:	ldr	r0, [r4, #32]
   3de78:	sub	r2, r0, #1
   3de7c:	str	r2, [r4, #32]
   3de80:	ldrb	r3, [r4, #25]
   3de84:	ldr	r0, [r4, #20]
   3de88:	ldr	r1, [r4, #16]
   3de8c:	mla	r7, r2, r3, r0
   3de90:	mul	r6, r2, r3
   3de94:	cmp	r7, r1
   3de98:	bls	3df08 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   3de9c:	cmp	r0, r1
   3dea0:	bcc	3debc <flatcc_json_printer_struct_vector_field@@Base+0x224>
   3dea4:	ldr	r2, [r4, #44]	; 0x2c
   3dea8:	mov	r0, r4
   3deac:	mov	r1, #0
   3deb0:	blx	r2
   3deb4:	ldr	r1, [r4, #16]
   3deb8:	ldr	r0, [r4, #20]
   3debc:	sub	r7, r1, r0
   3dec0:	cmp	r7, r6
   3dec4:	bcs	3df08 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   3dec8:	mov	r1, #32
   3decc:	mov	r2, r7
   3ded0:	bl	14ef0 <memset@plt>
   3ded4:	ldr	r0, [r4, #20]
   3ded8:	ldr	r2, [r4, #44]	; 0x2c
   3dedc:	mov	r1, #0
   3dee0:	add	r0, r0, r7
   3dee4:	str	r0, [r4, #20]
   3dee8:	mov	r0, r4
   3deec:	blx	r2
   3def0:	ldr	r1, [r4, #16]
   3def4:	ldr	r0, [r4, #20]
   3def8:	sub	r6, r6, r7
   3defc:	sub	r7, r1, r0
   3df00:	cmp	r6, r7
   3df04:	bhi	3dec8 <flatcc_json_printer_struct_vector_field@@Base+0x230>
   3df08:	mov	r1, #32
   3df0c:	mov	r2, r6
   3df10:	bl	14ef0 <memset@plt>
   3df14:	ldr	r0, [r4, #20]
   3df18:	add	r0, r0, r6
   3df1c:	str	r0, [r4, #20]
   3df20:	add	r1, r0, #1
   3df24:	mov	sl, #125	; 0x7d
   3df28:	subs	r5, r5, #1
   3df2c:	str	r1, [r4, #20]
   3df30:	strb	sl, [r0]
   3df34:	beq	3e148 <flatcc_json_printer_struct_vector_field@@Base+0x4b0>
   3df38:	mov	r8, #10
   3df3c:	ldr	r0, [r4, #20]
   3df40:	add	r1, r0, #1
   3df44:	str	r1, [r4, #20]
   3df48:	mov	r1, #44	; 0x2c
   3df4c:	strb	r1, [r0]
   3df50:	ldr	r0, [fp, #12]
   3df54:	ldrb	r1, [r4, #25]
   3df58:	add	r9, r9, r0
   3df5c:	ldr	r0, [r4, #20]
   3df60:	cmp	r1, #0
   3df64:	beq	3e01c <flatcc_json_printer_struct_vector_field@@Base+0x384>
   3df68:	add	r1, r0, #1
   3df6c:	str	r1, [r4, #20]
   3df70:	strb	r8, [r0]
   3df74:	ldr	r0, [r4, #20]
   3df78:	ldrb	r2, [r4, #25]
   3df7c:	ldr	r3, [r4, #32]
   3df80:	ldr	r1, [r4, #16]
   3df84:	mla	r7, r3, r2, r0
   3df88:	mul	r6, r3, r2
   3df8c:	cmp	r7, r1
   3df90:	bls	3e000 <flatcc_json_printer_struct_vector_field@@Base+0x368>
   3df94:	cmp	r0, r1
   3df98:	bcc	3dfb4 <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   3df9c:	ldr	r2, [r4, #44]	; 0x2c
   3dfa0:	mov	r0, r4
   3dfa4:	mov	r1, #0
   3dfa8:	blx	r2
   3dfac:	ldr	r1, [r4, #16]
   3dfb0:	ldr	r0, [r4, #20]
   3dfb4:	sub	r7, r1, r0
   3dfb8:	cmp	r7, r6
   3dfbc:	bcs	3e000 <flatcc_json_printer_struct_vector_field@@Base+0x368>
   3dfc0:	mov	r1, #32
   3dfc4:	mov	r2, r7
   3dfc8:	bl	14ef0 <memset@plt>
   3dfcc:	ldr	r0, [r4, #20]
   3dfd0:	ldr	r2, [r4, #44]	; 0x2c
   3dfd4:	mov	r1, #0
   3dfd8:	add	r0, r0, r7
   3dfdc:	str	r0, [r4, #20]
   3dfe0:	mov	r0, r4
   3dfe4:	blx	r2
   3dfe8:	ldr	r1, [r4, #16]
   3dfec:	ldr	r0, [r4, #20]
   3dff0:	sub	r6, r6, r7
   3dff4:	sub	r7, r1, r0
   3dff8:	cmp	r6, r7
   3dffc:	bhi	3dfc0 <flatcc_json_printer_struct_vector_field@@Base+0x328>
   3e000:	mov	r1, #32
   3e004:	mov	r2, r6
   3e008:	bl	14ef0 <memset@plt>
   3e00c:	ldr	r0, [r4, #20]
   3e010:	add	r0, r0, r6
   3e014:	str	r0, [r4, #20]
   3e018:	b	3e03c <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   3e01c:	ldr	r1, [r4, #16]
   3e020:	cmp	r0, r1
   3e024:	bcc	3e03c <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   3e028:	ldr	r2, [r4, #44]	; 0x2c
   3e02c:	mov	r0, r4
   3e030:	mov	r1, #0
   3e034:	blx	r2
   3e038:	ldr	r0, [r4, #20]
   3e03c:	add	r1, r0, #1
   3e040:	ldr	r2, [fp, #16]
   3e044:	sub	r5, r5, #1
   3e048:	str	r1, [r4, #20]
   3e04c:	ldr	r1, [r4, #32]
   3e050:	add	r1, r1, #1
   3e054:	str	r1, [r4, #32]
   3e058:	mov	r1, #123	; 0x7b
   3e05c:	strb	r1, [r0]
   3e060:	mov	r0, r4
   3e064:	mov	r1, r9
   3e068:	blx	r2
   3e06c:	ldrb	r1, [r4, #25]
   3e070:	ldr	r0, [r4, #20]
   3e074:	cmp	r1, #0
   3e078:	beq	3e134 <flatcc_json_printer_struct_vector_field@@Base+0x49c>
   3e07c:	add	r1, r0, #1
   3e080:	str	r1, [r4, #20]
   3e084:	strb	r8, [r0]
   3e088:	ldr	r0, [r4, #32]
   3e08c:	sub	r2, r0, #1
   3e090:	str	r2, [r4, #32]
   3e094:	ldrb	r3, [r4, #25]
   3e098:	ldr	r0, [r4, #20]
   3e09c:	ldr	r1, [r4, #16]
   3e0a0:	mla	r7, r2, r3, r0
   3e0a4:	mul	r6, r2, r3
   3e0a8:	cmp	r7, r1
   3e0ac:	bls	3e11c <flatcc_json_printer_struct_vector_field@@Base+0x484>
   3e0b0:	cmp	r0, r1
   3e0b4:	bcc	3e0d0 <flatcc_json_printer_struct_vector_field@@Base+0x438>
   3e0b8:	ldr	r2, [r4, #44]	; 0x2c
   3e0bc:	mov	r0, r4
   3e0c0:	mov	r1, #0
   3e0c4:	blx	r2
   3e0c8:	ldr	r1, [r4, #16]
   3e0cc:	ldr	r0, [r4, #20]
   3e0d0:	sub	r7, r1, r0
   3e0d4:	cmp	r7, r6
   3e0d8:	bcs	3e11c <flatcc_json_printer_struct_vector_field@@Base+0x484>
   3e0dc:	mov	r1, #32
   3e0e0:	mov	r2, r7
   3e0e4:	bl	14ef0 <memset@plt>
   3e0e8:	ldr	r0, [r4, #20]
   3e0ec:	ldr	r2, [r4, #44]	; 0x2c
   3e0f0:	mov	r1, #0
   3e0f4:	add	r0, r0, r7
   3e0f8:	str	r0, [r4, #20]
   3e0fc:	mov	r0, r4
   3e100:	blx	r2
   3e104:	ldr	r1, [r4, #16]
   3e108:	ldr	r0, [r4, #20]
   3e10c:	sub	r6, r6, r7
   3e110:	sub	r7, r1, r0
   3e114:	cmp	r6, r7
   3e118:	bhi	3e0dc <flatcc_json_printer_struct_vector_field@@Base+0x444>
   3e11c:	mov	r1, #32
   3e120:	mov	r2, r6
   3e124:	bl	14ef0 <memset@plt>
   3e128:	ldr	r0, [r4, #20]
   3e12c:	add	r0, r0, r6
   3e130:	str	r0, [r4, #20]
   3e134:	add	r1, r0, #1
   3e138:	cmp	r5, #0
   3e13c:	str	r1, [r4, #20]
   3e140:	strb	sl, [r0]
   3e144:	bne	3df3c <flatcc_json_printer_struct_vector_field@@Base+0x2a4>
   3e148:	ldrb	r1, [r4, #25]
   3e14c:	ldr	r0, [r4, #20]
   3e150:	cmp	r1, #0
   3e154:	beq	3e214 <flatcc_json_printer_struct_vector_field@@Base+0x57c>
   3e158:	add	r1, r0, #1
   3e15c:	str	r1, [r4, #20]
   3e160:	mov	r1, #10
   3e164:	strb	r1, [r0]
   3e168:	ldr	r0, [r4, #32]
   3e16c:	sub	r2, r0, #1
   3e170:	str	r2, [r4, #32]
   3e174:	ldrb	r3, [r4, #25]
   3e178:	ldr	r0, [r4, #20]
   3e17c:	ldr	r1, [r4, #16]
   3e180:	mla	r7, r2, r3, r0
   3e184:	mul	r5, r2, r3
   3e188:	cmp	r7, r1
   3e18c:	bls	3e1fc <flatcc_json_printer_struct_vector_field@@Base+0x564>
   3e190:	cmp	r0, r1
   3e194:	bcc	3e1b0 <flatcc_json_printer_struct_vector_field@@Base+0x518>
   3e198:	ldr	r2, [r4, #44]	; 0x2c
   3e19c:	mov	r0, r4
   3e1a0:	mov	r1, #0
   3e1a4:	blx	r2
   3e1a8:	ldr	r1, [r4, #16]
   3e1ac:	ldr	r0, [r4, #20]
   3e1b0:	sub	r6, r1, r0
   3e1b4:	cmp	r6, r5
   3e1b8:	bcs	3e1fc <flatcc_json_printer_struct_vector_field@@Base+0x564>
   3e1bc:	mov	r1, #32
   3e1c0:	mov	r2, r6
   3e1c4:	bl	14ef0 <memset@plt>
   3e1c8:	ldr	r0, [r4, #20]
   3e1cc:	ldr	r2, [r4, #44]	; 0x2c
   3e1d0:	mov	r1, #0
   3e1d4:	add	r0, r0, r6
   3e1d8:	str	r0, [r4, #20]
   3e1dc:	mov	r0, r4
   3e1e0:	blx	r2
   3e1e4:	ldr	r1, [r4, #16]
   3e1e8:	ldr	r0, [r4, #20]
   3e1ec:	sub	r5, r5, r6
   3e1f0:	sub	r6, r1, r0
   3e1f4:	cmp	r5, r6
   3e1f8:	bhi	3e1bc <flatcc_json_printer_struct_vector_field@@Base+0x524>
   3e1fc:	mov	r1, #32
   3e200:	mov	r2, r5
   3e204:	bl	14ef0 <memset@plt>
   3e208:	ldr	r0, [r4, #20]
   3e20c:	add	r0, r0, r5
   3e210:	str	r0, [r4, #20]
   3e214:	add	r1, r0, #1
   3e218:	str	r1, [r4, #20]
   3e21c:	mov	r1, #93	; 0x5d
   3e220:	strb	r1, [r0]
   3e224:	sub	sp, fp, #28
   3e228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e22c <flatcc_json_printer_string_vector_field@@Base>:
   3e22c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e230:	add	fp, sp, #28
   3e234:	sub	sp, sp, #4
   3e238:	mov	r4, r0
   3e23c:	mov	r0, #4
   3e240:	add	r0, r0, r2, lsl #1
   3e244:	ldr	r2, [r1, #8]
   3e248:	cmp	r0, r2
   3e24c:	bge	3e5d4 <flatcc_json_printer_string_vector_field@@Base+0x3a8>
   3e250:	ldr	r2, [r1, #4]
   3e254:	add	r0, r2, r0
   3e258:	ldrh	r0, [r0]
   3e25c:	cmp	r0, #0
   3e260:	ldrne	r2, [r1]
   3e264:	addsne	r5, r2, r0
   3e268:	beq	3e5d4 <flatcc_json_printer_string_vector_field@@Base+0x3a8>
   3e26c:	ldr	r0, [r1, #16]
   3e270:	ldr	r2, [fp, #8]
   3e274:	add	r7, r0, #1
   3e278:	cmp	r0, #0
   3e27c:	str	r7, [r1, #16]
   3e280:	ldrne	r0, [r4, #20]
   3e284:	addne	r1, r0, #1
   3e288:	strne	r1, [r4, #20]
   3e28c:	movne	r1, #44	; 0x2c
   3e290:	strbne	r1, [r0]
   3e294:	mov	r1, r3
   3e298:	ldr	r0, [r5]
   3e29c:	ldr	r8, [r5, r0]!
   3e2a0:	mov	r0, r4
   3e2a4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3e2a8:	ldr	r1, [r4, #32]
   3e2ac:	ldr	r0, [r4, #20]
   3e2b0:	cmp	r8, #0
   3e2b4:	add	r1, r1, #1
   3e2b8:	str	r1, [r4, #32]
   3e2bc:	add	r1, r0, #1
   3e2c0:	str	r1, [r4, #20]
   3e2c4:	mov	r1, #91	; 0x5b
   3e2c8:	strb	r1, [r0]
   3e2cc:	beq	3e4f8 <flatcc_json_printer_string_vector_field@@Base+0x2cc>
   3e2d0:	ldrb	r1, [r4, #25]
   3e2d4:	ldr	r0, [r4, #20]
   3e2d8:	add	r9, r5, #4
   3e2dc:	cmp	r1, #0
   3e2e0:	beq	3e39c <flatcc_json_printer_string_vector_field@@Base+0x170>
   3e2e4:	add	r1, r0, #1
   3e2e8:	str	r1, [r4, #20]
   3e2ec:	mov	r1, #10
   3e2f0:	strb	r1, [r0]
   3e2f4:	ldr	r0, [r4, #20]
   3e2f8:	ldrb	r2, [r4, #25]
   3e2fc:	ldr	r3, [r4, #32]
   3e300:	ldr	r1, [r4, #16]
   3e304:	mla	r7, r3, r2, r0
   3e308:	mul	r5, r3, r2
   3e30c:	cmp	r7, r1
   3e310:	bls	3e380 <flatcc_json_printer_string_vector_field@@Base+0x154>
   3e314:	cmp	r0, r1
   3e318:	bcc	3e334 <flatcc_json_printer_string_vector_field@@Base+0x108>
   3e31c:	ldr	r2, [r4, #44]	; 0x2c
   3e320:	mov	r0, r4
   3e324:	mov	r1, #0
   3e328:	blx	r2
   3e32c:	ldr	r1, [r4, #16]
   3e330:	ldr	r0, [r4, #20]
   3e334:	sub	r6, r1, r0
   3e338:	cmp	r6, r5
   3e33c:	bcs	3e380 <flatcc_json_printer_string_vector_field@@Base+0x154>
   3e340:	mov	r1, #32
   3e344:	mov	r2, r6
   3e348:	bl	14ef0 <memset@plt>
   3e34c:	ldr	r0, [r4, #20]
   3e350:	ldr	r2, [r4, #44]	; 0x2c
   3e354:	mov	r1, #0
   3e358:	add	r0, r0, r6
   3e35c:	str	r0, [r4, #20]
   3e360:	mov	r0, r4
   3e364:	blx	r2
   3e368:	ldr	r1, [r4, #16]
   3e36c:	ldr	r0, [r4, #20]
   3e370:	sub	r5, r5, r6
   3e374:	sub	r6, r1, r0
   3e378:	cmp	r5, r6
   3e37c:	bhi	3e340 <flatcc_json_printer_string_vector_field@@Base+0x114>
   3e380:	mov	r1, #32
   3e384:	mov	r2, r5
   3e388:	bl	14ef0 <memset@plt>
   3e38c:	ldr	r0, [r4, #20]
   3e390:	add	r0, r0, r5
   3e394:	str	r0, [r4, #20]
   3e398:	b	3e3b8 <flatcc_json_printer_string_vector_field@@Base+0x18c>
   3e39c:	ldr	r1, [r4, #16]
   3e3a0:	cmp	r0, r1
   3e3a4:	bcc	3e3b8 <flatcc_json_printer_string_vector_field@@Base+0x18c>
   3e3a8:	ldr	r2, [r4, #44]	; 0x2c
   3e3ac:	mov	r0, r4
   3e3b0:	mov	r1, #0
   3e3b4:	blx	r2
   3e3b8:	ldr	r0, [r9]
   3e3bc:	mov	r1, r9
   3e3c0:	ldr	r2, [r1, r0]!
   3e3c4:	mov	r0, r4
   3e3c8:	add	r1, r1, #4
   3e3cc:	bl	35704 <flatcc_json_printer_string@@Base+0x4>
   3e3d0:	subs	r7, r8, #1
   3e3d4:	beq	3e4f8 <flatcc_json_printer_string_vector_field@@Base+0x2cc>
   3e3d8:	mov	r8, #44	; 0x2c
   3e3dc:	mov	sl, #10
   3e3e0:	ldr	r0, [r4, #20]
   3e3e4:	add	r9, r9, #4
   3e3e8:	sub	r7, r7, #1
   3e3ec:	add	r1, r0, #1
   3e3f0:	str	r1, [r4, #20]
   3e3f4:	strb	r8, [r0]
   3e3f8:	ldrb	r1, [r4, #25]
   3e3fc:	ldr	r0, [r4, #20]
   3e400:	cmp	r1, #0
   3e404:	beq	3e4bc <flatcc_json_printer_string_vector_field@@Base+0x290>
   3e408:	add	r1, r0, #1
   3e40c:	str	r1, [r4, #20]
   3e410:	strb	sl, [r0]
   3e414:	ldr	r0, [r4, #20]
   3e418:	ldrb	r2, [r4, #25]
   3e41c:	ldr	r3, [r4, #32]
   3e420:	ldr	r1, [r4, #16]
   3e424:	mla	r6, r3, r2, r0
   3e428:	mul	r5, r3, r2
   3e42c:	cmp	r6, r1
   3e430:	bls	3e4a0 <flatcc_json_printer_string_vector_field@@Base+0x274>
   3e434:	cmp	r0, r1
   3e438:	bcc	3e454 <flatcc_json_printer_string_vector_field@@Base+0x228>
   3e43c:	ldr	r2, [r4, #44]	; 0x2c
   3e440:	mov	r0, r4
   3e444:	mov	r1, #0
   3e448:	blx	r2
   3e44c:	ldr	r1, [r4, #16]
   3e450:	ldr	r0, [r4, #20]
   3e454:	sub	r6, r1, r0
   3e458:	cmp	r6, r5
   3e45c:	bcs	3e4a0 <flatcc_json_printer_string_vector_field@@Base+0x274>
   3e460:	mov	r1, #32
   3e464:	mov	r2, r6
   3e468:	bl	14ef0 <memset@plt>
   3e46c:	ldr	r0, [r4, #20]
   3e470:	ldr	r2, [r4, #44]	; 0x2c
   3e474:	mov	r1, #0
   3e478:	add	r0, r0, r6
   3e47c:	str	r0, [r4, #20]
   3e480:	mov	r0, r4
   3e484:	blx	r2
   3e488:	ldr	r1, [r4, #16]
   3e48c:	ldr	r0, [r4, #20]
   3e490:	sub	r5, r5, r6
   3e494:	sub	r6, r1, r0
   3e498:	cmp	r5, r6
   3e49c:	bhi	3e460 <flatcc_json_printer_string_vector_field@@Base+0x234>
   3e4a0:	mov	r1, #32
   3e4a4:	mov	r2, r5
   3e4a8:	bl	14ef0 <memset@plt>
   3e4ac:	ldr	r0, [r4, #20]
   3e4b0:	add	r0, r0, r5
   3e4b4:	str	r0, [r4, #20]
   3e4b8:	b	3e4d8 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   3e4bc:	ldr	r1, [r4, #16]
   3e4c0:	cmp	r0, r1
   3e4c4:	bcc	3e4d8 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   3e4c8:	ldr	r2, [r4, #44]	; 0x2c
   3e4cc:	mov	r0, r4
   3e4d0:	mov	r1, #0
   3e4d4:	blx	r2
   3e4d8:	ldr	r0, [r9]
   3e4dc:	mov	r1, r9
   3e4e0:	ldr	r2, [r1, r0]!
   3e4e4:	mov	r0, r4
   3e4e8:	add	r1, r1, #4
   3e4ec:	bl	35704 <flatcc_json_printer_string@@Base+0x4>
   3e4f0:	cmp	r7, #0
   3e4f4:	bne	3e3e0 <flatcc_json_printer_string_vector_field@@Base+0x1b4>
   3e4f8:	ldrb	r1, [r4, #25]
   3e4fc:	ldr	r0, [r4, #20]
   3e500:	cmp	r1, #0
   3e504:	beq	3e5c4 <flatcc_json_printer_string_vector_field@@Base+0x398>
   3e508:	add	r1, r0, #1
   3e50c:	str	r1, [r4, #20]
   3e510:	mov	r1, #10
   3e514:	strb	r1, [r0]
   3e518:	ldr	r0, [r4, #32]
   3e51c:	sub	r2, r0, #1
   3e520:	str	r2, [r4, #32]
   3e524:	ldrb	r3, [r4, #25]
   3e528:	ldr	r0, [r4, #20]
   3e52c:	ldr	r1, [r4, #16]
   3e530:	mla	r7, r2, r3, r0
   3e534:	mul	r5, r2, r3
   3e538:	cmp	r7, r1
   3e53c:	bls	3e5ac <flatcc_json_printer_string_vector_field@@Base+0x380>
   3e540:	cmp	r0, r1
   3e544:	bcc	3e560 <flatcc_json_printer_string_vector_field@@Base+0x334>
   3e548:	ldr	r2, [r4, #44]	; 0x2c
   3e54c:	mov	r0, r4
   3e550:	mov	r1, #0
   3e554:	blx	r2
   3e558:	ldr	r1, [r4, #16]
   3e55c:	ldr	r0, [r4, #20]
   3e560:	sub	r6, r1, r0
   3e564:	cmp	r6, r5
   3e568:	bcs	3e5ac <flatcc_json_printer_string_vector_field@@Base+0x380>
   3e56c:	mov	r1, #32
   3e570:	mov	r2, r6
   3e574:	bl	14ef0 <memset@plt>
   3e578:	ldr	r0, [r4, #20]
   3e57c:	ldr	r2, [r4, #44]	; 0x2c
   3e580:	mov	r1, #0
   3e584:	add	r0, r0, r6
   3e588:	str	r0, [r4, #20]
   3e58c:	mov	r0, r4
   3e590:	blx	r2
   3e594:	ldr	r1, [r4, #16]
   3e598:	ldr	r0, [r4, #20]
   3e59c:	sub	r5, r5, r6
   3e5a0:	sub	r6, r1, r0
   3e5a4:	cmp	r5, r6
   3e5a8:	bhi	3e56c <flatcc_json_printer_string_vector_field@@Base+0x340>
   3e5ac:	mov	r1, #32
   3e5b0:	mov	r2, r5
   3e5b4:	bl	14ef0 <memset@plt>
   3e5b8:	ldr	r0, [r4, #20]
   3e5bc:	add	r0, r0, r5
   3e5c0:	str	r0, [r4, #20]
   3e5c4:	add	r1, r0, #1
   3e5c8:	str	r1, [r4, #20]
   3e5cc:	mov	r1, #93	; 0x5d
   3e5d0:	strb	r1, [r0]
   3e5d4:	sub	sp, fp, #28
   3e5d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e5dc <flatcc_json_printer_table_vector_field@@Base>:
   3e5dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e5e0:	add	fp, sp, #28
   3e5e4:	sub	sp, sp, #20
   3e5e8:	mov	sl, r1
   3e5ec:	ldr	r1, [r1, #8]
   3e5f0:	mov	r4, r0
   3e5f4:	mov	r0, #4
   3e5f8:	add	r0, r0, r2, lsl #1
   3e5fc:	cmp	r0, r1
   3e600:	bge	3ea54 <flatcc_json_printer_table_vector_field@@Base+0x478>
   3e604:	ldr	r1, [sl, #4]
   3e608:	add	r0, r1, r0
   3e60c:	ldrh	r0, [r0]
   3e610:	cmp	r0, #0
   3e614:	ldrne	r1, [sl]
   3e618:	addsne	r5, r1, r0
   3e61c:	beq	3ea54 <flatcc_json_printer_table_vector_field@@Base+0x478>
   3e620:	ldr	r0, [sl, #16]
   3e624:	ldr	r2, [fp, #8]
   3e628:	add	r1, r0, #1
   3e62c:	cmp	r0, #0
   3e630:	str	r1, [sl, #16]
   3e634:	ldrne	r0, [r4, #20]
   3e638:	addne	r1, r0, #1
   3e63c:	strne	r1, [r4, #20]
   3e640:	movne	r1, #44	; 0x2c
   3e644:	strbne	r1, [r0]
   3e648:	mov	r1, r3
   3e64c:	ldr	r0, [r5]
   3e650:	ldr	r8, [r5, r0]!
   3e654:	mov	r0, r4
   3e658:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3e65c:	ldr	r1, [r4, #32]
   3e660:	ldr	r0, [r4, #20]
   3e664:	cmp	r8, #0
   3e668:	add	r1, r1, #1
   3e66c:	str	r1, [r4, #32]
   3e670:	add	r1, r0, #1
   3e674:	str	r1, [r4, #20]
   3e678:	mov	r1, #91	; 0x5b
   3e67c:	strb	r1, [r0]
   3e680:	beq	3e978 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   3e684:	ldr	r0, [sl, #12]
   3e688:	ldr	r6, [fp, #12]
   3e68c:	add	r5, r5, #4
   3e690:	subs	r0, r0, #1
   3e694:	beq	3e7d4 <flatcc_json_printer_table_vector_field@@Base+0x1f8>
   3e698:	ldr	r3, [r4, #32]
   3e69c:	ldr	r2, [r4, #20]
   3e6a0:	ldr	r1, [r5]
   3e6a4:	add	r3, r3, #1
   3e6a8:	add	r1, r5, r1
   3e6ac:	str	r3, [r4, #32]
   3e6b0:	add	r3, r2, #1
   3e6b4:	str	r3, [r4, #20]
   3e6b8:	mov	r3, #123	; 0x7b
   3e6bc:	strb	r3, [r2]
   3e6c0:	str	r0, [sp, #12]
   3e6c4:	mov	r0, #0
   3e6c8:	str	r0, [sp, #16]
   3e6cc:	str	r1, [sp]
   3e6d0:	ldr	r0, [r1]
   3e6d4:	sub	r2, r1, r0
   3e6d8:	str	r2, [sp, #4]
   3e6dc:	ldrh	r0, [r1, -r0]
   3e6e0:	mov	r1, sp
   3e6e4:	str	r0, [sp, #8]
   3e6e8:	mov	r0, r4
   3e6ec:	blx	r6
   3e6f0:	ldrb	r1, [r4, #25]
   3e6f4:	ldr	r0, [r4, #20]
   3e6f8:	cmp	r1, #0
   3e6fc:	beq	3e7c0 <flatcc_json_printer_table_vector_field@@Base+0x1e4>
   3e700:	add	r1, r0, #1
   3e704:	str	r1, [r4, #20]
   3e708:	mov	r1, #10
   3e70c:	strb	r1, [r0]
   3e710:	ldr	r0, [r4, #32]
   3e714:	sub	r2, r0, #1
   3e718:	str	r2, [r4, #32]
   3e71c:	ldrb	r3, [r4, #25]
   3e720:	ldr	r0, [r4, #20]
   3e724:	ldr	r1, [r4, #16]
   3e728:	mla	r7, r2, r3, r0
   3e72c:	mul	r6, r2, r3
   3e730:	cmp	r7, r1
   3e734:	bls	3e7a4 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
   3e738:	cmp	r0, r1
   3e73c:	bcc	3e758 <flatcc_json_printer_table_vector_field@@Base+0x17c>
   3e740:	ldr	r2, [r4, #44]	; 0x2c
   3e744:	mov	r0, r4
   3e748:	mov	r1, #0
   3e74c:	blx	r2
   3e750:	ldr	r1, [r4, #16]
   3e754:	ldr	r0, [r4, #20]
   3e758:	sub	r7, r1, r0
   3e75c:	cmp	r7, r6
   3e760:	bcs	3e7a4 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
   3e764:	mov	r1, #32
   3e768:	mov	r2, r7
   3e76c:	bl	14ef0 <memset@plt>
   3e770:	ldr	r0, [r4, #20]
   3e774:	ldr	r2, [r4, #44]	; 0x2c
   3e778:	mov	r1, #0
   3e77c:	add	r0, r0, r7
   3e780:	str	r0, [r4, #20]
   3e784:	mov	r0, r4
   3e788:	blx	r2
   3e78c:	ldr	r1, [r4, #16]
   3e790:	ldr	r0, [r4, #20]
   3e794:	sub	r6, r6, r7
   3e798:	sub	r7, r1, r0
   3e79c:	cmp	r6, r7
   3e7a0:	bhi	3e764 <flatcc_json_printer_table_vector_field@@Base+0x188>
   3e7a4:	mov	r1, #32
   3e7a8:	mov	r2, r6
   3e7ac:	bl	14ef0 <memset@plt>
   3e7b0:	ldr	r0, [r4, #20]
   3e7b4:	add	r0, r0, r6
   3e7b8:	ldr	r6, [fp, #12]
   3e7bc:	str	r0, [r4, #20]
   3e7c0:	add	r1, r0, #1
   3e7c4:	str	r1, [r4, #20]
   3e7c8:	mov	r1, #125	; 0x7d
   3e7cc:	strb	r1, [r0]
   3e7d0:	b	3e7e4 <flatcc_json_printer_table_vector_field@@Base+0x208>
   3e7d4:	ldr	r0, [r4, #36]	; 0x24
   3e7d8:	cmp	r0, #0
   3e7dc:	moveq	r0, #2
   3e7e0:	streq	r0, [r4, #36]	; 0x24
   3e7e4:	subs	r9, r8, #1
   3e7e8:	beq	3e978 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   3e7ec:	mov	r8, #44	; 0x2c
   3e7f0:	ldr	r0, [r4, #20]
   3e7f4:	sub	r9, r9, #1
   3e7f8:	add	r1, r0, #1
   3e7fc:	str	r1, [r4, #20]
   3e800:	strb	r8, [r0]
   3e804:	ldr	r0, [sl, #12]
   3e808:	ldr	r1, [r5, #4]!
   3e80c:	subs	r0, r0, #1
   3e810:	beq	3e930 <flatcc_json_printer_table_vector_field@@Base+0x354>
   3e814:	ldr	r3, [r4, #32]
   3e818:	ldr	r2, [r4, #20]
   3e81c:	add	r1, r5, r1
   3e820:	add	r3, r3, #1
   3e824:	str	r3, [r4, #32]
   3e828:	add	r3, r2, #1
   3e82c:	str	r3, [r4, #20]
   3e830:	mov	r3, #123	; 0x7b
   3e834:	strb	r3, [r2]
   3e838:	str	r0, [sp, #12]
   3e83c:	mov	r0, #0
   3e840:	str	r0, [sp, #16]
   3e844:	str	r1, [sp]
   3e848:	ldr	r0, [r1]
   3e84c:	sub	r2, r1, r0
   3e850:	str	r2, [sp, #4]
   3e854:	ldrh	r0, [r1, -r0]
   3e858:	mov	r1, sp
   3e85c:	str	r0, [sp, #8]
   3e860:	mov	r0, r4
   3e864:	blx	r6
   3e868:	ldrb	r1, [r4, #25]
   3e86c:	ldr	r0, [r4, #20]
   3e870:	cmp	r1, #0
   3e874:	beq	3e960 <flatcc_json_printer_table_vector_field@@Base+0x384>
   3e878:	add	r1, r0, #1
   3e87c:	str	r1, [r4, #20]
   3e880:	mov	r1, #10
   3e884:	strb	r1, [r0]
   3e888:	ldr	r0, [r4, #32]
   3e88c:	sub	r2, r0, #1
   3e890:	str	r2, [r4, #32]
   3e894:	ldrb	r3, [r4, #25]
   3e898:	ldr	r0, [r4, #20]
   3e89c:	ldr	r1, [r4, #16]
   3e8a0:	mla	r6, r2, r3, r0
   3e8a4:	mul	r7, r2, r3
   3e8a8:	cmp	r6, r1
   3e8ac:	bls	3e944 <flatcc_json_printer_table_vector_field@@Base+0x368>
   3e8b0:	cmp	r0, r1
   3e8b4:	bcc	3e8d0 <flatcc_json_printer_table_vector_field@@Base+0x2f4>
   3e8b8:	ldr	r2, [r4, #44]	; 0x2c
   3e8bc:	mov	r0, r4
   3e8c0:	mov	r1, #0
   3e8c4:	blx	r2
   3e8c8:	ldr	r1, [r4, #16]
   3e8cc:	ldr	r0, [r4, #20]
   3e8d0:	sub	r6, r1, r0
   3e8d4:	cmp	r6, r7
   3e8d8:	bcs	3e91c <flatcc_json_printer_table_vector_field@@Base+0x340>
   3e8dc:	mov	r1, #32
   3e8e0:	mov	r2, r6
   3e8e4:	bl	14ef0 <memset@plt>
   3e8e8:	ldr	r0, [r4, #20]
   3e8ec:	ldr	r2, [r4, #44]	; 0x2c
   3e8f0:	mov	r1, #0
   3e8f4:	add	r0, r0, r6
   3e8f8:	str	r0, [r4, #20]
   3e8fc:	mov	r0, r4
   3e900:	blx	r2
   3e904:	ldr	r1, [r4, #16]
   3e908:	ldr	r0, [r4, #20]
   3e90c:	sub	r7, r7, r6
   3e910:	sub	r6, r1, r0
   3e914:	cmp	r7, r6
   3e918:	bhi	3e8dc <flatcc_json_printer_table_vector_field@@Base+0x300>
   3e91c:	ldr	r6, [fp, #12]
   3e920:	mov	r1, #32
   3e924:	mov	r2, r7
   3e928:	bl	14ef0 <memset@plt>
   3e92c:	b	3e954 <flatcc_json_printer_table_vector_field@@Base+0x378>
   3e930:	ldr	r0, [r4, #36]	; 0x24
   3e934:	cmp	r0, #0
   3e938:	moveq	r0, #2
   3e93c:	streq	r0, [r4, #36]	; 0x24
   3e940:	b	3e970 <flatcc_json_printer_table_vector_field@@Base+0x394>
   3e944:	mov	r1, #32
   3e948:	mov	r2, r7
   3e94c:	bl	14ef0 <memset@plt>
   3e950:	ldr	r6, [fp, #12]
   3e954:	ldr	r0, [r4, #20]
   3e958:	add	r0, r0, r7
   3e95c:	str	r0, [r4, #20]
   3e960:	add	r1, r0, #1
   3e964:	str	r1, [r4, #20]
   3e968:	mov	r1, #125	; 0x7d
   3e96c:	strb	r1, [r0]
   3e970:	cmp	r9, #0
   3e974:	bne	3e7f0 <flatcc_json_printer_table_vector_field@@Base+0x214>
   3e978:	ldrb	r1, [r4, #25]
   3e97c:	ldr	r0, [r4, #20]
   3e980:	cmp	r1, #0
   3e984:	beq	3ea44 <flatcc_json_printer_table_vector_field@@Base+0x468>
   3e988:	add	r1, r0, #1
   3e98c:	str	r1, [r4, #20]
   3e990:	mov	r1, #10
   3e994:	strb	r1, [r0]
   3e998:	ldr	r0, [r4, #32]
   3e99c:	sub	r2, r0, #1
   3e9a0:	str	r2, [r4, #32]
   3e9a4:	ldrb	r3, [r4, #25]
   3e9a8:	ldr	r0, [r4, #20]
   3e9ac:	ldr	r1, [r4, #16]
   3e9b0:	mla	r7, r2, r3, r0
   3e9b4:	mul	r5, r2, r3
   3e9b8:	cmp	r7, r1
   3e9bc:	bls	3ea2c <flatcc_json_printer_table_vector_field@@Base+0x450>
   3e9c0:	cmp	r0, r1
   3e9c4:	bcc	3e9e0 <flatcc_json_printer_table_vector_field@@Base+0x404>
   3e9c8:	ldr	r2, [r4, #44]	; 0x2c
   3e9cc:	mov	r0, r4
   3e9d0:	mov	r1, #0
   3e9d4:	blx	r2
   3e9d8:	ldr	r1, [r4, #16]
   3e9dc:	ldr	r0, [r4, #20]
   3e9e0:	sub	r6, r1, r0
   3e9e4:	cmp	r6, r5
   3e9e8:	bcs	3ea2c <flatcc_json_printer_table_vector_field@@Base+0x450>
   3e9ec:	mov	r1, #32
   3e9f0:	mov	r2, r6
   3e9f4:	bl	14ef0 <memset@plt>
   3e9f8:	ldr	r0, [r4, #20]
   3e9fc:	ldr	r2, [r4, #44]	; 0x2c
   3ea00:	mov	r1, #0
   3ea04:	add	r0, r0, r6
   3ea08:	str	r0, [r4, #20]
   3ea0c:	mov	r0, r4
   3ea10:	blx	r2
   3ea14:	ldr	r1, [r4, #16]
   3ea18:	ldr	r0, [r4, #20]
   3ea1c:	sub	r5, r5, r6
   3ea20:	sub	r6, r1, r0
   3ea24:	cmp	r5, r6
   3ea28:	bhi	3e9ec <flatcc_json_printer_table_vector_field@@Base+0x410>
   3ea2c:	mov	r1, #32
   3ea30:	mov	r2, r5
   3ea34:	bl	14ef0 <memset@plt>
   3ea38:	ldr	r0, [r4, #20]
   3ea3c:	add	r0, r0, r5
   3ea40:	str	r0, [r4, #20]
   3ea44:	add	r1, r0, #1
   3ea48:	str	r1, [r4, #20]
   3ea4c:	mov	r1, #93	; 0x5d
   3ea50:	strb	r1, [r0]
   3ea54:	sub	sp, fp, #28
   3ea58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ea5c <flatcc_json_printer_union_vector_field@@Base>:
   3ea5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ea60:	add	fp, sp, #28
   3ea64:	sub	sp, sp, #140	; 0x8c
   3ea68:	mov	r6, r1
   3ea6c:	mov	r9, r0
   3ea70:	sub	r1, r2, #1
   3ea74:	mov	r0, #4
   3ea78:	mov	r4, r3
   3ea7c:	mov	r5, #0
   3ea80:	mov	r8, #0
   3ea84:	str	r1, [sp, #8]
   3ea88:	add	r3, r0, r1, lsl #1
   3ea8c:	ldr	r1, [r6, #8]
   3ea90:	cmp	r3, r1
   3ea94:	bge	3eab4 <flatcc_json_printer_union_vector_field@@Base+0x58>
   3ea98:	ldr	r7, [r6, #4]
   3ea9c:	mov	r8, #0
   3eaa0:	add	r3, r7, r3
   3eaa4:	ldrh	r3, [r3]
   3eaa8:	cmp	r3, #0
   3eaac:	ldrne	r7, [r6]
   3eab0:	addne	r8, r7, r3
   3eab4:	ldr	sl, [fp, #8]
   3eab8:	add	r0, r0, r2, lsl #1
   3eabc:	cmp	r0, r1
   3eac0:	bge	3eadc <flatcc_json_printer_union_vector_field@@Base+0x80>
   3eac4:	ldr	r1, [r6, #4]
   3eac8:	add	r0, r1, r0
   3eacc:	ldrh	r0, [r0]
   3ead0:	cmp	r0, #0
   3ead4:	ldrne	r1, [r6]
   3ead8:	addne	r5, r1, r0
   3eadc:	ldr	r0, [r6, #12]
   3eae0:	cmp	sl, #101	; 0x65
   3eae4:	str	r5, [sp, #16]
   3eae8:	str	r0, [sp, #24]
   3eaec:	bge	3ede4 <flatcc_json_printer_union_vector_field@@Base+0x388>
   3eaf0:	add	r5, sp, #32
   3eaf4:	mov	r1, r4
   3eaf8:	mov	r2, sl
   3eafc:	str	r4, [sp, #12]
   3eb00:	mov	r0, r5
   3eb04:	bl	14e60 <memcpy@plt>
   3eb08:	movw	r0, #29791	; 0x745f
   3eb0c:	cmp	r8, #0
   3eb10:	mov	r1, #101	; 0x65
   3eb14:	movt	r0, #28793	; 0x7079
   3eb18:	str	r0, [r5, sl]
   3eb1c:	add	r0, r5, sl
   3eb20:	ldr	r5, [sp, #16]
   3eb24:	strb	r1, [r0, #4]
   3eb28:	cmpne	r5, #0
   3eb2c:	beq	3eddc <flatcc_json_printer_union_vector_field@@Base+0x380>
   3eb30:	ldr	r0, [fp, #12]
   3eb34:	ldr	r2, [sp, #8]
   3eb38:	add	r1, sl, #5
   3eb3c:	add	r3, sp, #32
   3eb40:	str	r1, [sp]
   3eb44:	mov	r1, r6
   3eb48:	str	r0, [sp, #4]
   3eb4c:	mov	r0, r9
   3eb50:	bl	3b788 <flatcc_json_printer_utype_enum_vector_field@@Base>
   3eb54:	ldr	r0, [r6, #16]
   3eb58:	add	r7, r9, #20
   3eb5c:	mov	r2, sl
   3eb60:	add	r1, r0, #1
   3eb64:	cmp	r0, #0
   3eb68:	str	r1, [r6, #16]
   3eb6c:	mov	r6, r5
   3eb70:	ldrne	r0, [r7]
   3eb74:	addne	r1, r0, #1
   3eb78:	strne	r1, [r7]
   3eb7c:	movne	r1, #44	; 0x2c
   3eb80:	strbne	r1, [r0]
   3eb84:	ldr	r1, [sp, #12]
   3eb88:	ldr	r0, [r5]
   3eb8c:	ldr	r5, [r8]
   3eb90:	ldr	r4, [r6, r0]!
   3eb94:	str	r0, [sp, #8]
   3eb98:	mov	r0, r9
   3eb9c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3eba0:	ldr	r1, [r9, #32]
   3eba4:	ldr	r0, [r9, #20]
   3eba8:	cmp	r4, #0
   3ebac:	add	r1, r1, #1
   3ebb0:	str	r1, [r9, #32]
   3ebb4:	add	r1, r0, #1
   3ebb8:	str	r1, [r9, #20]
   3ebbc:	mov	r1, #91	; 0x5b
   3ebc0:	strb	r1, [r0]
   3ebc4:	beq	3ed00 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   3ebc8:	add	r5, r8, r5
   3ebcc:	ldr	r2, [fp, #16]
   3ebd0:	ldrb	r0, [r5, #4]
   3ebd4:	cmp	r0, #0
   3ebd8:	beq	3ebfc <flatcc_json_printer_union_vector_field@@Base+0x1a0>
   3ebdc:	add	r1, r6, #4
   3ebe0:	mov	r8, r2
   3ebe4:	str	r1, [sp, #20]
   3ebe8:	strb	r0, [sp, #28]
   3ebec:	add	r1, sp, #20
   3ebf0:	mov	r0, r9
   3ebf4:	blx	r2
   3ebf8:	b	3ec4c <flatcc_json_printer_union_vector_field@@Base+0x1f0>
   3ebfc:	ldr	r0, [r7]
   3ec00:	mov	r8, r2
   3ec04:	add	r1, r0, #1
   3ec08:	str	r1, [r7]
   3ec0c:	mov	r1, #110	; 0x6e
   3ec10:	strb	r1, [r0]
   3ec14:	ldr	r0, [r7]
   3ec18:	add	r1, r0, #1
   3ec1c:	str	r1, [r7]
   3ec20:	mov	r1, #117	; 0x75
   3ec24:	strb	r1, [r0]
   3ec28:	ldr	r0, [r7]
   3ec2c:	add	r1, r0, #1
   3ec30:	str	r1, [r7]
   3ec34:	mov	r1, #108	; 0x6c
   3ec38:	strb	r1, [r0]
   3ec3c:	ldr	r0, [r7]
   3ec40:	add	r2, r0, #1
   3ec44:	str	r2, [r7]
   3ec48:	strb	r1, [r0]
   3ec4c:	cmp	r4, #1
   3ec50:	beq	3ed00 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   3ec54:	ldr	r0, [sp, #16]
   3ec58:	ldr	r1, [sp, #8]
   3ec5c:	add	r5, r5, #5
   3ec60:	rsb	r4, r4, #1
   3ec64:	mov	sl, #44	; 0x2c
   3ec68:	add	r0, r0, r1
   3ec6c:	add	r6, r0, #8
   3ec70:	ldrb	r0, [r5]
   3ec74:	ldr	r1, [r7]
   3ec78:	add	r2, r1, #1
   3ec7c:	cmp	r0, #0
   3ec80:	str	r2, [r7]
   3ec84:	strb	sl, [r1]
   3ec88:	beq	3eca4 <flatcc_json_printer_union_vector_field@@Base+0x248>
   3ec8c:	str	r6, [sp, #20]
   3ec90:	strb	r0, [sp, #28]
   3ec94:	mov	r0, r9
   3ec98:	add	r1, sp, #20
   3ec9c:	blx	r8
   3eca0:	b	3ecf0 <flatcc_json_printer_union_vector_field@@Base+0x294>
   3eca4:	ldr	r0, [r7]
   3eca8:	mov	r2, #108	; 0x6c
   3ecac:	add	r1, r0, #1
   3ecb0:	str	r1, [r7]
   3ecb4:	mov	r1, #110	; 0x6e
   3ecb8:	strb	r1, [r0]
   3ecbc:	ldr	r0, [r7]
   3ecc0:	add	r1, r0, #1
   3ecc4:	str	r1, [r7]
   3ecc8:	mov	r1, #117	; 0x75
   3eccc:	strb	r1, [r0]
   3ecd0:	ldr	r0, [r7]
   3ecd4:	add	r1, r0, #1
   3ecd8:	str	r1, [r7]
   3ecdc:	strb	r2, [r0]
   3ece0:	ldr	r0, [r7]
   3ece4:	add	r1, r0, #1
   3ece8:	str	r1, [r7]
   3ecec:	strb	r2, [r0]
   3ecf0:	add	r6, r6, #4
   3ecf4:	add	r5, r5, #1
   3ecf8:	adds	r4, r4, #1
   3ecfc:	bne	3ec70 <flatcc_json_printer_union_vector_field@@Base+0x214>
   3ed00:	ldrb	r1, [r9, #25]
   3ed04:	ldr	r0, [r9, #20]
   3ed08:	cmp	r1, #0
   3ed0c:	beq	3edcc <flatcc_json_printer_union_vector_field@@Base+0x370>
   3ed10:	add	r1, r0, #1
   3ed14:	str	r1, [r9, #20]
   3ed18:	mov	r1, #10
   3ed1c:	strb	r1, [r0]
   3ed20:	ldr	r0, [r9, #32]
   3ed24:	sub	r2, r0, #1
   3ed28:	str	r2, [r9, #32]
   3ed2c:	ldrb	r3, [r9, #25]
   3ed30:	ldr	r0, [r9, #20]
   3ed34:	ldr	r1, [r9, #16]
   3ed38:	mla	r6, r2, r3, r0
   3ed3c:	mul	r5, r2, r3
   3ed40:	cmp	r6, r1
   3ed44:	bls	3edb4 <flatcc_json_printer_union_vector_field@@Base+0x358>
   3ed48:	cmp	r0, r1
   3ed4c:	bcc	3ed68 <flatcc_json_printer_union_vector_field@@Base+0x30c>
   3ed50:	ldr	r2, [r9, #44]	; 0x2c
   3ed54:	mov	r0, r9
   3ed58:	mov	r1, #0
   3ed5c:	blx	r2
   3ed60:	ldr	r1, [r9, #16]
   3ed64:	ldr	r0, [r9, #20]
   3ed68:	sub	r6, r1, r0
   3ed6c:	cmp	r6, r5
   3ed70:	bcs	3edb4 <flatcc_json_printer_union_vector_field@@Base+0x358>
   3ed74:	mov	r1, #32
   3ed78:	mov	r2, r6
   3ed7c:	bl	14ef0 <memset@plt>
   3ed80:	ldr	r0, [r9, #20]
   3ed84:	ldr	r2, [r9, #44]	; 0x2c
   3ed88:	mov	r1, #0
   3ed8c:	add	r0, r0, r6
   3ed90:	str	r0, [r9, #20]
   3ed94:	mov	r0, r9
   3ed98:	blx	r2
   3ed9c:	ldr	r1, [r9, #16]
   3eda0:	ldr	r0, [r9, #20]
   3eda4:	sub	r5, r5, r6
   3eda8:	sub	r6, r1, r0
   3edac:	cmp	r5, r6
   3edb0:	bhi	3ed74 <flatcc_json_printer_union_vector_field@@Base+0x318>
   3edb4:	mov	r1, #32
   3edb8:	mov	r2, r5
   3edbc:	bl	14ef0 <memset@plt>
   3edc0:	ldr	r0, [r7]
   3edc4:	add	r0, r0, r5
   3edc8:	str	r0, [r7]
   3edcc:	add	r1, r0, #1
   3edd0:	str	r1, [r7]
   3edd4:	mov	r1, #93	; 0x5d
   3edd8:	strb	r1, [r0]
   3eddc:	sub	sp, fp, #28
   3ede0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ede4:	ldr	r0, [r9, #36]	; 0x24
   3ede8:	movw	r1, #27147	; 0x6a0b
   3edec:	movw	r3, #27222	; 0x6a56
   3edf0:	movw	r2, #843	; 0x34b
   3edf4:	movt	r1, #4
   3edf8:	movt	r3, #4
   3edfc:	cmp	r0, #0
   3ee00:	moveq	r0, #1
   3ee04:	streq	r0, [r9, #36]	; 0x24
   3ee08:	movw	r0, #27120	; 0x69f0
   3ee0c:	movt	r0, #4
   3ee10:	bl	14f44 <__assert_fail@plt>

0003ee14 <flatcc_json_printer_table_field@@Base>:
   3ee14:	push	{r4, r5, r6, sl, fp, lr}
   3ee18:	add	fp, sp, #16
   3ee1c:	sub	sp, sp, #24
   3ee20:	mov	r5, r1
   3ee24:	ldr	r1, [r1, #8]
   3ee28:	mov	r4, r0
   3ee2c:	mov	r0, #4
   3ee30:	add	r0, r0, r2, lsl #1
   3ee34:	cmp	r0, r1
   3ee38:	bge	3ee58 <flatcc_json_printer_table_field@@Base+0x44>
   3ee3c:	ldr	r1, [r5, #4]
   3ee40:	add	r0, r1, r0
   3ee44:	ldrh	r0, [r0]
   3ee48:	cmp	r0, #0
   3ee4c:	ldrne	r1, [r5]
   3ee50:	addsne	r6, r1, r0
   3ee54:	bne	3ee60 <flatcc_json_printer_table_field@@Base+0x4c>
   3ee58:	sub	sp, fp, #16
   3ee5c:	pop	{r4, r5, r6, sl, fp, pc}
   3ee60:	ldr	r0, [r5, #16]
   3ee64:	ldr	r2, [fp, #8]
   3ee68:	add	r1, r0, #1
   3ee6c:	cmp	r0, #0
   3ee70:	str	r1, [r5, #16]
   3ee74:	ldrne	r0, [r4, #20]
   3ee78:	addne	r1, r0, #1
   3ee7c:	strne	r1, [r4, #20]
   3ee80:	movne	r1, #44	; 0x2c
   3ee84:	strbne	r1, [r0]
   3ee88:	mov	r0, r4
   3ee8c:	mov	r1, r3
   3ee90:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3ee94:	ldr	r0, [r5, #12]
   3ee98:	subs	r0, r0, #1
   3ee9c:	beq	3efdc <flatcc_json_printer_table_field@@Base+0x1c8>
   3eea0:	ldr	r1, [r6]
   3eea4:	ldr	r3, [r4, #20]
   3eea8:	ldr	r2, [fp, #12]
   3eeac:	add	r1, r6, r1
   3eeb0:	ldr	r6, [r4, #32]
   3eeb4:	add	r6, r6, #1
   3eeb8:	str	r6, [r4, #32]
   3eebc:	add	r6, r3, #1
   3eec0:	str	r6, [r4, #20]
   3eec4:	mov	r6, #123	; 0x7b
   3eec8:	strb	r6, [r3]
   3eecc:	str	r0, [sp, #16]
   3eed0:	mov	r0, #0
   3eed4:	str	r0, [sp, #20]
   3eed8:	str	r1, [sp, #4]
   3eedc:	ldr	r0, [r1]
   3eee0:	sub	r3, r1, r0
   3eee4:	str	r3, [sp, #8]
   3eee8:	ldrh	r0, [r1, -r0]
   3eeec:	add	r1, sp, #4
   3eef0:	str	r0, [sp, #12]
   3eef4:	mov	r0, r4
   3eef8:	blx	r2
   3eefc:	ldrb	r1, [r4, #25]
   3ef00:	ldr	r0, [r4, #20]
   3ef04:	cmp	r1, #0
   3ef08:	beq	3efc8 <flatcc_json_printer_table_field@@Base+0x1b4>
   3ef0c:	add	r1, r0, #1
   3ef10:	str	r1, [r4, #20]
   3ef14:	mov	r1, #10
   3ef18:	strb	r1, [r0]
   3ef1c:	ldr	r0, [r4, #32]
   3ef20:	sub	r2, r0, #1
   3ef24:	str	r2, [r4, #32]
   3ef28:	ldrb	r3, [r4, #25]
   3ef2c:	ldr	r0, [r4, #20]
   3ef30:	ldr	r1, [r4, #16]
   3ef34:	mla	r6, r2, r3, r0
   3ef38:	mul	r5, r2, r3
   3ef3c:	cmp	r6, r1
   3ef40:	bls	3efb0 <flatcc_json_printer_table_field@@Base+0x19c>
   3ef44:	cmp	r0, r1
   3ef48:	bcc	3ef64 <flatcc_json_printer_table_field@@Base+0x150>
   3ef4c:	ldr	r2, [r4, #44]	; 0x2c
   3ef50:	mov	r0, r4
   3ef54:	mov	r1, #0
   3ef58:	blx	r2
   3ef5c:	ldr	r1, [r4, #16]
   3ef60:	ldr	r0, [r4, #20]
   3ef64:	sub	r6, r1, r0
   3ef68:	cmp	r6, r5
   3ef6c:	bcs	3efb0 <flatcc_json_printer_table_field@@Base+0x19c>
   3ef70:	mov	r1, #32
   3ef74:	mov	r2, r6
   3ef78:	bl	14ef0 <memset@plt>
   3ef7c:	ldr	r0, [r4, #20]
   3ef80:	ldr	r2, [r4, #44]	; 0x2c
   3ef84:	mov	r1, #0
   3ef88:	add	r0, r0, r6
   3ef8c:	str	r0, [r4, #20]
   3ef90:	mov	r0, r4
   3ef94:	blx	r2
   3ef98:	ldr	r1, [r4, #16]
   3ef9c:	ldr	r0, [r4, #20]
   3efa0:	sub	r5, r5, r6
   3efa4:	sub	r6, r1, r0
   3efa8:	cmp	r5, r6
   3efac:	bhi	3ef70 <flatcc_json_printer_table_field@@Base+0x15c>
   3efb0:	mov	r1, #32
   3efb4:	mov	r2, r5
   3efb8:	bl	14ef0 <memset@plt>
   3efbc:	ldr	r0, [r4, #20]
   3efc0:	add	r0, r0, r5
   3efc4:	str	r0, [r4, #20]
   3efc8:	add	r1, r0, #1
   3efcc:	str	r1, [r4, #20]
   3efd0:	mov	r1, #125	; 0x7d
   3efd4:	strb	r1, [r0]
   3efd8:	b	3ee58 <flatcc_json_printer_table_field@@Base+0x44>
   3efdc:	ldr	r0, [r4, #36]	; 0x24
   3efe0:	cmp	r0, #0
   3efe4:	moveq	r0, #2
   3efe8:	streq	r0, [r4, #36]	; 0x24
   3efec:	b	3ee58 <flatcc_json_printer_table_field@@Base+0x44>

0003eff0 <flatcc_json_printer_union_field@@Base>:
   3eff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eff4:	add	fp, sp, #28
   3eff8:	sub	sp, sp, #20
   3effc:	mov	r9, r1
   3f000:	mov	r4, r0
   3f004:	mov	r0, #2
   3f008:	mov	r8, r3
   3f00c:	lsl	r1, r2, #1
   3f010:	add	r3, r0, r2, lsl #1
   3f014:	ldr	r2, [r9, #8]
   3f018:	mov	r0, #0
   3f01c:	cmp	r3, r2
   3f020:	bge	3f03c <flatcc_json_printer_union_field@@Base+0x4c>
   3f024:	ldr	r7, [r9, #4]
   3f028:	add	r3, r7, r3
   3f02c:	ldrh	r3, [r3]
   3f030:	cmp	r3, #0
   3f034:	ldrne	r0, [r9]
   3f038:	addne	r0, r0, r3
   3f03c:	add	r1, r1, #4
   3f040:	cmp	r1, r2
   3f044:	bge	3f06c <flatcc_json_printer_union_field@@Base+0x7c>
   3f048:	ldr	r2, [r9, #4]
   3f04c:	add	r1, r2, r1
   3f050:	ldrh	r1, [r1]
   3f054:	cmp	r1, #0
   3f058:	beq	3f06c <flatcc_json_printer_union_field@@Base+0x7c>
   3f05c:	cmp	r0, #0
   3f060:	ldrne	r2, [r9]
   3f064:	addsne	r2, r2, r1
   3f068:	bne	3f074 <flatcc_json_printer_union_field@@Base+0x84>
   3f06c:	sub	sp, fp, #28
   3f070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f074:	ldrb	r3, [r0]
   3f078:	ldr	r0, [r9, #16]
   3f07c:	ldr	r7, [fp, #8]
   3f080:	str	r2, [sp, #4]
   3f084:	add	r1, r0, #1
   3f088:	cmp	r0, #0
   3f08c:	str	r3, [sp]
   3f090:	str	r1, [r9, #16]
   3f094:	ldrne	r0, [r4, #20]
   3f098:	addne	r1, r0, #1
   3f09c:	strne	r1, [r4, #20]
   3f0a0:	movne	r1, #44	; 0x2c
   3f0a4:	strbne	r1, [r0]
   3f0a8:	ldrb	r1, [r4, #25]
   3f0ac:	ldr	r0, [r4, #20]
   3f0b0:	cmp	r1, #0
   3f0b4:	beq	3f178 <flatcc_json_printer_union_field@@Base+0x188>
   3f0b8:	add	r1, r0, #1
   3f0bc:	mov	sl, r4
   3f0c0:	str	r1, [r4, #20]
   3f0c4:	mov	r1, #10
   3f0c8:	strb	r1, [r0]
   3f0cc:	ldr	r1, [sl, #16]!
   3f0d0:	ldr	r0, [r4, #20]
   3f0d4:	ldrb	r2, [sl, #9]
   3f0d8:	ldr	r3, [sl, #16]
   3f0dc:	mla	r6, r3, r2, r0
   3f0e0:	mul	r7, r3, r2
   3f0e4:	cmp	r6, r1
   3f0e8:	bls	3f158 <flatcc_json_printer_union_field@@Base+0x168>
   3f0ec:	cmp	r0, r1
   3f0f0:	bcc	3f10c <flatcc_json_printer_union_field@@Base+0x11c>
   3f0f4:	ldr	r2, [r4, #44]	; 0x2c
   3f0f8:	mov	r0, r4
   3f0fc:	mov	r1, #0
   3f100:	blx	r2
   3f104:	ldr	r1, [r4, #16]
   3f108:	ldr	r0, [r4, #20]
   3f10c:	sub	r5, r1, r0
   3f110:	cmp	r5, r7
   3f114:	bcs	3f158 <flatcc_json_printer_union_field@@Base+0x168>
   3f118:	mov	r1, #32
   3f11c:	mov	r2, r5
   3f120:	bl	14ef0 <memset@plt>
   3f124:	ldr	r0, [r4, #20]
   3f128:	ldr	r2, [r4, #44]	; 0x2c
   3f12c:	mov	r1, #0
   3f130:	add	r0, r0, r5
   3f134:	str	r0, [r4, #20]
   3f138:	mov	r0, r4
   3f13c:	blx	r2
   3f140:	ldr	r1, [r4, #16]
   3f144:	ldr	r0, [r4, #20]
   3f148:	sub	r7, r7, r5
   3f14c:	sub	r5, r1, r0
   3f150:	cmp	r7, r5
   3f154:	bhi	3f118 <flatcc_json_printer_union_field@@Base+0x128>
   3f158:	mov	r1, #32
   3f15c:	mov	r2, r7
   3f160:	bl	14ef0 <memset@plt>
   3f164:	ldr	r0, [r4, #20]
   3f168:	add	r0, r0, r7
   3f16c:	ldr	r7, [fp, #8]
   3f170:	str	r0, [r4, #20]
   3f174:	b	3f19c <flatcc_json_printer_union_field@@Base+0x1ac>
   3f178:	mov	sl, r4
   3f17c:	ldr	r1, [sl, #16]!
   3f180:	cmp	r0, r1
   3f184:	bcc	3f19c <flatcc_json_printer_union_field@@Base+0x1ac>
   3f188:	ldr	r2, [r4, #44]	; 0x2c
   3f18c:	mov	r0, r4
   3f190:	mov	r1, #0
   3f194:	blx	r2
   3f198:	ldr	r0, [r4, #20]
   3f19c:	mov	r1, #34	; 0x22
   3f1a0:	strb	r1, [r0]
   3f1a4:	ldrb	r2, [r4, #26]
   3f1a8:	ldr	r0, [r4, #20]
   3f1ac:	ldr	r1, [r4, #16]
   3f1b0:	cmp	r2, #0
   3f1b4:	addeq	r0, r0, #1
   3f1b8:	add	r2, r0, r7
   3f1bc:	str	r0, [r4, #20]
   3f1c0:	cmp	r2, r1
   3f1c4:	bcs	3f1d8 <flatcc_json_printer_union_field@@Base+0x1e8>
   3f1c8:	mov	r1, r8
   3f1cc:	mov	r2, r7
   3f1d0:	bl	14e60 <memcpy@plt>
   3f1d4:	b	3f268 <flatcc_json_printer_union_field@@Base+0x278>
   3f1d8:	mov	r5, r8
   3f1dc:	cmp	r0, r1
   3f1e0:	bcc	3f1fc <flatcc_json_printer_union_field@@Base+0x20c>
   3f1e4:	ldr	r2, [r4, #44]	; 0x2c
   3f1e8:	mov	r0, r4
   3f1ec:	mov	r1, #0
   3f1f0:	blx	r2
   3f1f4:	ldr	r0, [r4, #20]
   3f1f8:	ldr	r1, [sl]
   3f1fc:	sub	r8, r1, r0
   3f200:	mov	r6, r5
   3f204:	cmp	r8, r7
   3f208:	bcs	3f258 <flatcc_json_printer_union_field@@Base+0x268>
   3f20c:	ldr	r7, [fp, #8]
   3f210:	mov	r6, r5
   3f214:	mov	r1, r6
   3f218:	mov	r2, r8
   3f21c:	bl	14e60 <memcpy@plt>
   3f220:	ldr	r0, [r4, #20]
   3f224:	ldr	r2, [r4, #44]	; 0x2c
   3f228:	mov	r1, #0
   3f22c:	add	r0, r0, r8
   3f230:	str	r0, [r4, #20]
   3f234:	mov	r0, r4
   3f238:	blx	r2
   3f23c:	ldr	r0, [r4, #20]
   3f240:	ldr	r1, [sl]
   3f244:	sub	r7, r7, r8
   3f248:	add	r6, r6, r8
   3f24c:	sub	r8, r1, r0
   3f250:	cmp	r7, r8
   3f254:	bhi	3f214 <flatcc_json_printer_union_field@@Base+0x224>
   3f258:	mov	r1, r6
   3f25c:	mov	r2, r7
   3f260:	bl	14e60 <memcpy@plt>
   3f264:	mov	r8, r5
   3f268:	ldr	r0, [r4, #20]
   3f26c:	ldr	r1, [r4, #16]
   3f270:	add	r0, r0, r7
   3f274:	add	r2, r0, #5
   3f278:	str	r0, [r4, #20]
   3f27c:	cmp	r2, r1
   3f280:	bcs	3f2a4 <flatcc_json_printer_union_field@@Base+0x2b4>
   3f284:	mov	r1, #101	; 0x65
   3f288:	mov	r7, #5
   3f28c:	strb	r1, [r0, #4]
   3f290:	movw	r1, #29791	; 0x745f
   3f294:	movt	r1, #28793	; 0x7079
   3f298:	str	r1, [r0]
   3f29c:	ldm	sp, {r5, sl}
   3f2a0:	b	3f340 <flatcc_json_printer_union_field@@Base+0x350>
   3f2a4:	cmp	r0, r1
   3f2a8:	bcc	3f2c4 <flatcc_json_printer_union_field@@Base+0x2d4>
   3f2ac:	ldr	r2, [r4, #44]	; 0x2c
   3f2b0:	mov	r0, r4
   3f2b4:	mov	r1, #0
   3f2b8:	blx	r2
   3f2bc:	ldr	r0, [r4, #20]
   3f2c0:	ldr	r1, [sl]
   3f2c4:	sub	r5, r1, r0
   3f2c8:	cmp	r5, #4
   3f2cc:	bhi	3f324 <flatcc_json_printer_union_field@@Base+0x334>
   3f2d0:	movw	r6, #27424	; 0x6b20
   3f2d4:	mov	r7, #5
   3f2d8:	movt	r6, #4
   3f2dc:	mov	r1, r6
   3f2e0:	mov	r2, r5
   3f2e4:	bl	14e60 <memcpy@plt>
   3f2e8:	ldr	r0, [r4, #20]
   3f2ec:	ldr	r2, [r4, #44]	; 0x2c
   3f2f0:	mov	r1, #0
   3f2f4:	add	r0, r0, r5
   3f2f8:	str	r0, [r4, #20]
   3f2fc:	mov	r0, r4
   3f300:	blx	r2
   3f304:	ldr	r0, [r4, #20]
   3f308:	ldr	r1, [sl]
   3f30c:	sub	r7, r7, r5
   3f310:	add	r6, r6, r5
   3f314:	sub	r5, r1, r0
   3f318:	cmp	r7, r5
   3f31c:	bhi	3f2dc <flatcc_json_printer_union_field@@Base+0x2ec>
   3f320:	b	3f330 <flatcc_json_printer_union_field@@Base+0x340>
   3f324:	movw	r6, #27424	; 0x6b20
   3f328:	mov	r7, #5
   3f32c:	movt	r6, #4
   3f330:	ldm	sp, {r5, sl}
   3f334:	mov	r1, r6
   3f338:	mov	r2, r7
   3f33c:	bl	14e60 <memcpy@plt>
   3f340:	ldr	r0, [r4, #20]
   3f344:	add	r1, r0, r7
   3f348:	str	r1, [r4, #20]
   3f34c:	mov	r1, #34	; 0x22
   3f350:	strb	r1, [r0, r7]
   3f354:	ldrb	r0, [r4, #26]
   3f358:	ldr	r1, [r4, #20]
   3f35c:	cmp	r0, #0
   3f360:	addeq	r1, r1, #1
   3f364:	add	r0, r1, #1
   3f368:	str	r0, [r4, #20]
   3f36c:	mov	r0, #58	; 0x3a
   3f370:	strb	r0, [r1]
   3f374:	mov	r1, #32
   3f378:	ldr	r0, [r4, #20]
   3f37c:	strb	r1, [r0]
   3f380:	ldrb	r0, [r4, #25]
   3f384:	ldr	r1, [r4, #20]
   3f388:	cmp	r0, #0
   3f38c:	addne	r1, r1, #1
   3f390:	str	r1, [r4, #20]
   3f394:	ldrb	r0, [r4, #27]
   3f398:	cmp	r0, #0
   3f39c:	beq	3f3b8 <flatcc_json_printer_union_field@@Base+0x3c8>
   3f3a0:	mov	r0, r5
   3f3a4:	bl	35b9c <flatcc_json_printer_uint8@@Base+0x2c>
   3f3a8:	ldr	r1, [r4, #20]
   3f3ac:	add	r0, r1, r0
   3f3b0:	str	r0, [r4, #20]
   3f3b4:	b	3f3c8 <flatcc_json_printer_union_field@@Base+0x3d8>
   3f3b8:	ldr	r2, [fp, #12]
   3f3bc:	mov	r0, r4
   3f3c0:	mov	r1, r5
   3f3c4:	blx	r2
   3f3c8:	ldr	r2, [fp, #8]
   3f3cc:	cmp	r5, #0
   3f3d0:	beq	3f06c <flatcc_json_printer_union_field@@Base+0x7c>
   3f3d4:	ldr	r0, [r4, #20]
   3f3d8:	ldr	r6, [fp, #16]
   3f3dc:	add	r1, r0, #1
   3f3e0:	str	r1, [r4, #20]
   3f3e4:	mov	r1, #44	; 0x2c
   3f3e8:	strb	r1, [r0]
   3f3ec:	mov	r0, r4
   3f3f0:	mov	r1, r8
   3f3f4:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3f3f8:	ldr	r0, [r9, #12]
   3f3fc:	strb	r5, [sp, #16]
   3f400:	str	sl, [sp, #8]
   3f404:	add	r1, sp, #8
   3f408:	str	r0, [sp, #12]
   3f40c:	mov	r0, r4
   3f410:	blx	r6
   3f414:	b	3f06c <flatcc_json_printer_union_field@@Base+0x7c>

0003f418 <flatcc_json_printer_union_table@@Base>:
   3f418:	push	{r4, r5, r6, sl, fp, lr}
   3f41c:	add	fp, sp, #16
   3f420:	sub	sp, sp, #24
   3f424:	mov	r4, r0
   3f428:	ldr	r0, [r1, #4]
   3f42c:	subs	r0, r0, #1
   3f430:	beq	3f570 <flatcc_json_printer_union_table@@Base+0x158>
   3f434:	ldr	r1, [r1]
   3f438:	ldr	r6, [r4, #32]
   3f43c:	ldr	r3, [r1]
   3f440:	add	r6, r6, #1
   3f444:	add	r1, r1, r3
   3f448:	ldr	r3, [r4, #20]
   3f44c:	str	r6, [r4, #32]
   3f450:	add	r6, r3, #1
   3f454:	str	r6, [r4, #20]
   3f458:	mov	r6, #123	; 0x7b
   3f45c:	strb	r6, [r3]
   3f460:	str	r0, [sp, #16]
   3f464:	mov	r0, #0
   3f468:	str	r0, [sp, #20]
   3f46c:	str	r1, [sp, #4]
   3f470:	ldr	r0, [r1]
   3f474:	sub	r3, r1, r0
   3f478:	str	r3, [sp, #8]
   3f47c:	ldrh	r0, [r1, -r0]
   3f480:	add	r1, sp, #4
   3f484:	str	r0, [sp, #12]
   3f488:	mov	r0, r4
   3f48c:	blx	r2
   3f490:	ldrb	r1, [r4, #25]
   3f494:	ldr	r0, [r4, #20]
   3f498:	cmp	r1, #0
   3f49c:	beq	3f55c <flatcc_json_printer_union_table@@Base+0x144>
   3f4a0:	add	r1, r0, #1
   3f4a4:	str	r1, [r4, #20]
   3f4a8:	mov	r1, #10
   3f4ac:	strb	r1, [r0]
   3f4b0:	ldr	r0, [r4, #32]
   3f4b4:	sub	r2, r0, #1
   3f4b8:	str	r2, [r4, #32]
   3f4bc:	ldrb	r3, [r4, #25]
   3f4c0:	ldr	r0, [r4, #20]
   3f4c4:	ldr	r1, [r4, #16]
   3f4c8:	mla	r6, r2, r3, r0
   3f4cc:	mul	r5, r2, r3
   3f4d0:	cmp	r6, r1
   3f4d4:	bls	3f544 <flatcc_json_printer_union_table@@Base+0x12c>
   3f4d8:	cmp	r0, r1
   3f4dc:	bcc	3f4f8 <flatcc_json_printer_union_table@@Base+0xe0>
   3f4e0:	ldr	r2, [r4, #44]	; 0x2c
   3f4e4:	mov	r0, r4
   3f4e8:	mov	r1, #0
   3f4ec:	blx	r2
   3f4f0:	ldr	r1, [r4, #16]
   3f4f4:	ldr	r0, [r4, #20]
   3f4f8:	sub	r6, r1, r0
   3f4fc:	cmp	r6, r5
   3f500:	bcs	3f544 <flatcc_json_printer_union_table@@Base+0x12c>
   3f504:	mov	r1, #32
   3f508:	mov	r2, r6
   3f50c:	bl	14ef0 <memset@plt>
   3f510:	ldr	r0, [r4, #20]
   3f514:	ldr	r2, [r4, #44]	; 0x2c
   3f518:	mov	r1, #0
   3f51c:	add	r0, r0, r6
   3f520:	str	r0, [r4, #20]
   3f524:	mov	r0, r4
   3f528:	blx	r2
   3f52c:	ldr	r1, [r4, #16]
   3f530:	ldr	r0, [r4, #20]
   3f534:	sub	r5, r5, r6
   3f538:	sub	r6, r1, r0
   3f53c:	cmp	r5, r6
   3f540:	bhi	3f504 <flatcc_json_printer_union_table@@Base+0xec>
   3f544:	mov	r1, #32
   3f548:	mov	r2, r5
   3f54c:	bl	14ef0 <memset@plt>
   3f550:	ldr	r0, [r4, #20]
   3f554:	add	r0, r0, r5
   3f558:	str	r0, [r4, #20]
   3f55c:	add	r1, r0, #1
   3f560:	str	r1, [r4, #20]
   3f564:	mov	r1, #125	; 0x7d
   3f568:	strb	r1, [r0]
   3f56c:	b	3f580 <flatcc_json_printer_union_table@@Base+0x168>
   3f570:	ldr	r0, [r4, #36]	; 0x24
   3f574:	cmp	r0, #0
   3f578:	moveq	r0, #2
   3f57c:	streq	r0, [r4, #36]	; 0x24
   3f580:	sub	sp, fp, #16
   3f584:	pop	{r4, r5, r6, sl, fp, pc}

0003f588 <flatcc_json_printer_union_struct@@Base>:
   3f588:	push	{r4, r5, r6, sl, fp, lr}
   3f58c:	add	fp, sp, #16
   3f590:	mov	r4, r0
   3f594:	ldr	r0, [r0, #20]
   3f598:	ldr	r3, [r4, #32]
   3f59c:	add	r3, r3, #1
   3f5a0:	str	r3, [r4, #32]
   3f5a4:	add	r3, r0, #1
   3f5a8:	str	r3, [r4, #20]
   3f5ac:	mov	r3, #123	; 0x7b
   3f5b0:	strb	r3, [r0]
   3f5b4:	ldr	r0, [r1]
   3f5b8:	ldr	r1, [r0]
   3f5bc:	add	r1, r0, r1
   3f5c0:	mov	r0, r4
   3f5c4:	blx	r2
   3f5c8:	ldrb	r1, [r4, #25]
   3f5cc:	ldr	r0, [r4, #20]
   3f5d0:	cmp	r1, #0
   3f5d4:	beq	3f694 <flatcc_json_printer_union_struct@@Base+0x10c>
   3f5d8:	add	r1, r0, #1
   3f5dc:	str	r1, [r4, #20]
   3f5e0:	mov	r1, #10
   3f5e4:	strb	r1, [r0]
   3f5e8:	ldr	r0, [r4, #32]
   3f5ec:	sub	r2, r0, #1
   3f5f0:	str	r2, [r4, #32]
   3f5f4:	ldrb	r3, [r4, #25]
   3f5f8:	ldr	r0, [r4, #20]
   3f5fc:	ldr	r1, [r4, #16]
   3f600:	mla	r6, r2, r3, r0
   3f604:	mul	r5, r2, r3
   3f608:	cmp	r6, r1
   3f60c:	bls	3f67c <flatcc_json_printer_union_struct@@Base+0xf4>
   3f610:	cmp	r0, r1
   3f614:	bcc	3f630 <flatcc_json_printer_union_struct@@Base+0xa8>
   3f618:	ldr	r2, [r4, #44]	; 0x2c
   3f61c:	mov	r0, r4
   3f620:	mov	r1, #0
   3f624:	blx	r2
   3f628:	ldr	r1, [r4, #16]
   3f62c:	ldr	r0, [r4, #20]
   3f630:	sub	r6, r1, r0
   3f634:	cmp	r6, r5
   3f638:	bcs	3f67c <flatcc_json_printer_union_struct@@Base+0xf4>
   3f63c:	mov	r1, #32
   3f640:	mov	r2, r6
   3f644:	bl	14ef0 <memset@plt>
   3f648:	ldr	r0, [r4, #20]
   3f64c:	ldr	r2, [r4, #44]	; 0x2c
   3f650:	mov	r1, #0
   3f654:	add	r0, r0, r6
   3f658:	str	r0, [r4, #20]
   3f65c:	mov	r0, r4
   3f660:	blx	r2
   3f664:	ldr	r1, [r4, #16]
   3f668:	ldr	r0, [r4, #20]
   3f66c:	sub	r5, r5, r6
   3f670:	sub	r6, r1, r0
   3f674:	cmp	r5, r6
   3f678:	bhi	3f63c <flatcc_json_printer_union_struct@@Base+0xb4>
   3f67c:	mov	r1, #32
   3f680:	mov	r2, r5
   3f684:	bl	14ef0 <memset@plt>
   3f688:	ldr	r0, [r4, #20]
   3f68c:	add	r0, r0, r5
   3f690:	str	r0, [r4, #20]
   3f694:	add	r1, r0, #1
   3f698:	str	r1, [r4, #20]
   3f69c:	mov	r1, #125	; 0x7d
   3f6a0:	strb	r1, [r0]
   3f6a4:	pop	{r4, r5, r6, sl, fp, pc}

0003f6a8 <flatcc_json_printer_union_string@@Base>:
   3f6a8:	ldr	r1, [r1]
   3f6ac:	ldr	r2, [r1]
   3f6b0:	ldr	r2, [r1, r2]!
   3f6b4:	add	r1, r1, #4
   3f6b8:	b	35704 <flatcc_json_printer_string@@Base+0x4>

0003f6bc <flatcc_json_printer_embedded_struct_field@@Base>:
   3f6bc:	push	{r4, r5, r6, r7, fp, lr}
   3f6c0:	add	fp, sp, #16
   3f6c4:	mov	r5, r3
   3f6c8:	mov	r3, r1
   3f6cc:	mov	r4, r0
   3f6d0:	add	r7, fp, #8
   3f6d4:	mov	r6, r2
   3f6d8:	cmp	r3, #0
   3f6dc:	ldm	r7, {r1, r2, r7}
   3f6e0:	ldrne	r0, [r4, #20]
   3f6e4:	addne	r3, r0, #1
   3f6e8:	strne	r3, [r4, #20]
   3f6ec:	movne	r3, #44	; 0x2c
   3f6f0:	strbne	r3, [r0]
   3f6f4:	mov	r0, r4
   3f6f8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3f6fc:	ldr	r1, [r4, #32]
   3f700:	ldr	r0, [r4, #20]
   3f704:	add	r1, r1, #1
   3f708:	str	r1, [r4, #32]
   3f70c:	add	r1, r0, #1
   3f710:	str	r1, [r4, #20]
   3f714:	mov	r1, #123	; 0x7b
   3f718:	strb	r1, [r0]
   3f71c:	add	r1, r6, r5
   3f720:	mov	r0, r4
   3f724:	blx	r7
   3f728:	ldrb	r1, [r4, #25]
   3f72c:	ldr	r0, [r4, #20]
   3f730:	cmp	r1, #0
   3f734:	beq	3f7f4 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   3f738:	add	r1, r0, #1
   3f73c:	str	r1, [r4, #20]
   3f740:	mov	r1, #10
   3f744:	strb	r1, [r0]
   3f748:	ldr	r0, [r4, #32]
   3f74c:	sub	r2, r0, #1
   3f750:	str	r2, [r4, #32]
   3f754:	ldrb	r3, [r4, #25]
   3f758:	ldr	r0, [r4, #20]
   3f75c:	ldr	r1, [r4, #16]
   3f760:	mla	r7, r2, r3, r0
   3f764:	mul	r5, r2, r3
   3f768:	cmp	r7, r1
   3f76c:	bls	3f7dc <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   3f770:	cmp	r0, r1
   3f774:	bcc	3f790 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   3f778:	ldr	r2, [r4, #44]	; 0x2c
   3f77c:	mov	r0, r4
   3f780:	mov	r1, #0
   3f784:	blx	r2
   3f788:	ldr	r1, [r4, #16]
   3f78c:	ldr	r0, [r4, #20]
   3f790:	sub	r6, r1, r0
   3f794:	cmp	r6, r5
   3f798:	bcs	3f7dc <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   3f79c:	mov	r1, #32
   3f7a0:	mov	r2, r6
   3f7a4:	bl	14ef0 <memset@plt>
   3f7a8:	ldr	r0, [r4, #20]
   3f7ac:	ldr	r2, [r4, #44]	; 0x2c
   3f7b0:	mov	r1, #0
   3f7b4:	add	r0, r0, r6
   3f7b8:	str	r0, [r4, #20]
   3f7bc:	mov	r0, r4
   3f7c0:	blx	r2
   3f7c4:	ldr	r1, [r4, #16]
   3f7c8:	ldr	r0, [r4, #20]
   3f7cc:	sub	r5, r5, r6
   3f7d0:	sub	r6, r1, r0
   3f7d4:	cmp	r5, r6
   3f7d8:	bhi	3f79c <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   3f7dc:	mov	r1, #32
   3f7e0:	mov	r2, r5
   3f7e4:	bl	14ef0 <memset@plt>
   3f7e8:	ldr	r0, [r4, #20]
   3f7ec:	add	r0, r0, r5
   3f7f0:	str	r0, [r4, #20]
   3f7f4:	add	r1, r0, #1
   3f7f8:	str	r1, [r4, #20]
   3f7fc:	mov	r1, #125	; 0x7d
   3f800:	strb	r1, [r0]
   3f804:	pop	{r4, r5, r6, r7, fp, pc}

0003f808 <flatcc_json_printer_struct_field@@Base>:
   3f808:	push	{r4, r5, r6, r7, fp, lr}
   3f80c:	add	fp, sp, #16
   3f810:	mov	r4, r0
   3f814:	mov	r0, #4
   3f818:	add	r0, r0, r2, lsl #1
   3f81c:	ldr	r2, [r1, #8]
   3f820:	cmp	r0, r2
   3f824:	popge	{r4, r5, r6, r7, fp, pc}
   3f828:	ldr	r2, [r1, #4]
   3f82c:	add	r0, r2, r0
   3f830:	ldrh	r0, [r0]
   3f834:	cmp	r0, #0
   3f838:	ldrne	r2, [r1]
   3f83c:	addsne	r5, r2, r0
   3f840:	bne	3f848 <flatcc_json_printer_struct_field@@Base+0x40>
   3f844:	pop	{r4, r5, r6, r7, fp, pc}
   3f848:	ldr	r0, [r1, #16]
   3f84c:	ldr	r2, [fp, #8]
   3f850:	ldr	r7, [fp, #12]
   3f854:	add	r6, r0, #1
   3f858:	cmp	r0, #0
   3f85c:	str	r6, [r1, #16]
   3f860:	ldrne	r0, [r4, #20]
   3f864:	addne	r1, r0, #1
   3f868:	strne	r1, [r4, #20]
   3f86c:	movne	r1, #44	; 0x2c
   3f870:	strbne	r1, [r0]
   3f874:	mov	r0, r4
   3f878:	mov	r1, r3
   3f87c:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3f880:	ldr	r1, [r4, #32]
   3f884:	ldr	r0, [r4, #20]
   3f888:	add	r1, r1, #1
   3f88c:	str	r1, [r4, #32]
   3f890:	add	r1, r0, #1
   3f894:	str	r1, [r4, #20]
   3f898:	mov	r1, #123	; 0x7b
   3f89c:	strb	r1, [r0]
   3f8a0:	mov	r0, r4
   3f8a4:	mov	r1, r5
   3f8a8:	blx	r7
   3f8ac:	ldrb	r1, [r4, #25]
   3f8b0:	ldr	r0, [r4, #20]
   3f8b4:	cmp	r1, #0
   3f8b8:	beq	3f978 <flatcc_json_printer_struct_field@@Base+0x170>
   3f8bc:	add	r1, r0, #1
   3f8c0:	str	r1, [r4, #20]
   3f8c4:	mov	r1, #10
   3f8c8:	strb	r1, [r0]
   3f8cc:	ldr	r0, [r4, #32]
   3f8d0:	sub	r2, r0, #1
   3f8d4:	str	r2, [r4, #32]
   3f8d8:	ldrb	r3, [r4, #25]
   3f8dc:	ldr	r0, [r4, #20]
   3f8e0:	ldr	r1, [r4, #16]
   3f8e4:	mla	r7, r2, r3, r0
   3f8e8:	mul	r5, r2, r3
   3f8ec:	cmp	r7, r1
   3f8f0:	bls	3f960 <flatcc_json_printer_struct_field@@Base+0x158>
   3f8f4:	cmp	r0, r1
   3f8f8:	bcc	3f914 <flatcc_json_printer_struct_field@@Base+0x10c>
   3f8fc:	ldr	r2, [r4, #44]	; 0x2c
   3f900:	mov	r0, r4
   3f904:	mov	r1, #0
   3f908:	blx	r2
   3f90c:	ldr	r1, [r4, #16]
   3f910:	ldr	r0, [r4, #20]
   3f914:	sub	r6, r1, r0
   3f918:	cmp	r6, r5
   3f91c:	bcs	3f960 <flatcc_json_printer_struct_field@@Base+0x158>
   3f920:	mov	r1, #32
   3f924:	mov	r2, r6
   3f928:	bl	14ef0 <memset@plt>
   3f92c:	ldr	r0, [r4, #20]
   3f930:	ldr	r2, [r4, #44]	; 0x2c
   3f934:	mov	r1, #0
   3f938:	add	r0, r0, r6
   3f93c:	str	r0, [r4, #20]
   3f940:	mov	r0, r4
   3f944:	blx	r2
   3f948:	ldr	r1, [r4, #16]
   3f94c:	ldr	r0, [r4, #20]
   3f950:	sub	r5, r5, r6
   3f954:	sub	r6, r1, r0
   3f958:	cmp	r5, r6
   3f95c:	bhi	3f920 <flatcc_json_printer_struct_field@@Base+0x118>
   3f960:	mov	r1, #32
   3f964:	mov	r2, r5
   3f968:	bl	14ef0 <memset@plt>
   3f96c:	ldr	r0, [r4, #20]
   3f970:	add	r0, r0, r5
   3f974:	str	r0, [r4, #20]
   3f978:	add	r1, r0, #1
   3f97c:	str	r1, [r4, #20]
   3f980:	mov	r1, #125	; 0x7d
   3f984:	strb	r1, [r0]
   3f988:	pop	{r4, r5, r6, r7, fp, pc}

0003f98c <flatcc_json_printer_struct_as_root@@Base>:
   3f98c:	push	{r4, r5, r6, sl, fp, lr}
   3f990:	add	fp, sp, #16
   3f994:	mov	r5, r1
   3f998:	mov	r4, r0
   3f99c:	bl	3fb14 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3f9a0:	ldr	r1, [r4, #32]
   3f9a4:	ldr	r0, [r4, #20]
   3f9a8:	ldr	r2, [fp, #8]
   3f9ac:	add	r1, r1, #1
   3f9b0:	str	r1, [r4, #32]
   3f9b4:	add	r1, r0, #1
   3f9b8:	str	r1, [r4, #20]
   3f9bc:	mov	r1, #123	; 0x7b
   3f9c0:	strb	r1, [r0]
   3f9c4:	ldr	r0, [r5]
   3f9c8:	add	r1, r5, r0
   3f9cc:	mov	r0, r4
   3f9d0:	blx	r2
   3f9d4:	ldrb	r1, [r4, #25]
   3f9d8:	ldr	r0, [r4, #20]
   3f9dc:	cmp	r1, #0
   3f9e0:	beq	3faa0 <flatcc_json_printer_struct_as_root@@Base+0x114>
   3f9e4:	add	r1, r0, #1
   3f9e8:	str	r1, [r4, #20]
   3f9ec:	mov	r1, #10
   3f9f0:	strb	r1, [r0]
   3f9f4:	ldr	r0, [r4, #32]
   3f9f8:	sub	r2, r0, #1
   3f9fc:	str	r2, [r4, #32]
   3fa00:	ldrb	r3, [r4, #25]
   3fa04:	ldr	r0, [r4, #20]
   3fa08:	ldr	r1, [r4, #16]
   3fa0c:	mla	r6, r2, r3, r0
   3fa10:	mul	r5, r2, r3
   3fa14:	cmp	r6, r1
   3fa18:	bls	3fa88 <flatcc_json_printer_struct_as_root@@Base+0xfc>
   3fa1c:	cmp	r0, r1
   3fa20:	bcc	3fa3c <flatcc_json_printer_struct_as_root@@Base+0xb0>
   3fa24:	ldr	r2, [r4, #44]	; 0x2c
   3fa28:	mov	r0, r4
   3fa2c:	mov	r1, #0
   3fa30:	blx	r2
   3fa34:	ldr	r1, [r4, #16]
   3fa38:	ldr	r0, [r4, #20]
   3fa3c:	sub	r6, r1, r0
   3fa40:	cmp	r6, r5
   3fa44:	bcs	3fa88 <flatcc_json_printer_struct_as_root@@Base+0xfc>
   3fa48:	mov	r1, #32
   3fa4c:	mov	r2, r6
   3fa50:	bl	14ef0 <memset@plt>
   3fa54:	ldr	r0, [r4, #20]
   3fa58:	ldr	r2, [r4, #44]	; 0x2c
   3fa5c:	mov	r1, #0
   3fa60:	add	r0, r0, r6
   3fa64:	str	r0, [r4, #20]
   3fa68:	mov	r0, r4
   3fa6c:	blx	r2
   3fa70:	ldr	r1, [r4, #16]
   3fa74:	ldr	r0, [r4, #20]
   3fa78:	sub	r5, r5, r6
   3fa7c:	sub	r6, r1, r0
   3fa80:	cmp	r5, r6
   3fa84:	bhi	3fa48 <flatcc_json_printer_struct_as_root@@Base+0xbc>
   3fa88:	mov	r1, #32
   3fa8c:	mov	r2, r5
   3fa90:	bl	14ef0 <memset@plt>
   3fa94:	ldr	r0, [r4, #20]
   3fa98:	add	r0, r0, r5
   3fa9c:	str	r0, [r4, #20]
   3faa0:	add	r1, r0, #1
   3faa4:	str	r1, [r4, #20]
   3faa8:	mov	r1, #125	; 0x7d
   3faac:	strb	r1, [r0]
   3fab0:	ldrb	r0, [r4, #25]
   3fab4:	cmp	r0, #0
   3fab8:	beq	3fadc <flatcc_json_printer_struct_as_root@@Base+0x150>
   3fabc:	ldr	r0, [r4, #32]
   3fac0:	cmp	r0, #0
   3fac4:	bne	3fadc <flatcc_json_printer_struct_as_root@@Base+0x150>
   3fac8:	ldr	r0, [r4, #20]
   3facc:	add	r1, r0, #1
   3fad0:	str	r1, [r4, #20]
   3fad4:	mov	r1, #10
   3fad8:	strb	r1, [r0]
   3fadc:	ldr	r2, [r4, #44]	; 0x2c
   3fae0:	mov	r0, r4
   3fae4:	mov	r1, #1
   3fae8:	blx	r2
   3faec:	ldr	r1, [r4, #36]	; 0x24
   3faf0:	mvn	r0, #0
   3faf4:	cmp	r1, #0
   3faf8:	popne	{r4, r5, r6, sl, fp, pc}
   3fafc:	ldr	r1, [r4, #12]
   3fb00:	ldr	r2, [r4, #20]
   3fb04:	ldr	r0, [r4]
   3fb08:	add	r1, r2, r1
   3fb0c:	sub	r0, r1, r0
   3fb10:	pop	{r4, r5, r6, sl, fp, pc}
   3fb14:	push	{r4, r5, fp, lr}
   3fb18:	add	fp, sp, #8
   3fb1c:	sub	sp, sp, #8
   3fb20:	cmp	r1, #0
   3fb24:	mov	r4, r0
   3fb28:	mov	r0, #0
   3fb2c:	cmpne	r2, #7
   3fb30:	str	r0, [sp, #4]
   3fb34:	bls	3fb70 <flatcc_json_printer_struct_as_root@@Base+0x1e4>
   3fb38:	cmp	r3, #0
   3fb3c:	beq	3fb68 <flatcc_json_printer_struct_as_root@@Base+0x1dc>
   3fb40:	mov	r5, r1
   3fb44:	add	r0, sp, #4
   3fb48:	mov	r1, r3
   3fb4c:	mov	r2, #4
   3fb50:	bl	14efc <strncpy@plt>
   3fb54:	ldr	r0, [sp, #4]
   3fb58:	cmp	r0, #0
   3fb5c:	ldrne	r1, [r5, #4]
   3fb60:	cmpne	r1, r0
   3fb64:	bne	3fba0 <flatcc_json_printer_struct_as_root@@Base+0x214>
   3fb68:	sub	sp, fp, #8
   3fb6c:	pop	{r4, r5, fp, pc}
   3fb70:	ldr	r0, [r4, #36]	; 0x24
   3fb74:	movw	r1, #27147	; 0x6a0b
   3fb78:	movw	r3, #28322	; 0x6ea2
   3fb7c:	movw	r2, #1019	; 0x3fb
   3fb80:	movt	r1, #4
   3fb84:	movt	r3, #4
   3fb88:	cmp	r0, #0
   3fb8c:	moveq	r0, #1
   3fb90:	streq	r0, [r4, #36]	; 0x24
   3fb94:	movw	r0, #28291	; 0x6e83
   3fb98:	movt	r0, #4
   3fb9c:	bl	14f44 <__assert_fail@plt>
   3fba0:	ldr	r0, [r4, #36]	; 0x24
   3fba4:	movw	r1, #27147	; 0x6a0b
   3fba8:	movw	r3, #28322	; 0x6ea2
   3fbac:	movw	r2, #1028	; 0x404
   3fbb0:	movt	r1, #4
   3fbb4:	movt	r3, #4
   3fbb8:	cmp	r0, #0
   3fbbc:	moveq	r0, #1
   3fbc0:	streq	r0, [r4, #36]	; 0x24
   3fbc4:	movw	r0, #28401	; 0x6ef1
   3fbc8:	movt	r0, #4
   3fbcc:	bl	14f44 <__assert_fail@plt>

0003fbd0 <flatcc_json_printer_table_as_root@@Base>:
   3fbd0:	push	{r4, r5, r6, sl, fp, lr}
   3fbd4:	add	fp, sp, #16
   3fbd8:	sub	sp, sp, #24
   3fbdc:	mov	r5, r1
   3fbe0:	mov	r4, r0
   3fbe4:	bl	3fb14 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3fbe8:	ldr	r2, [r4, #32]
   3fbec:	ldr	r1, [r4, #20]
   3fbf0:	ldr	r0, [r5]
   3fbf4:	add	r2, r2, #1
   3fbf8:	str	r2, [r4, #32]
   3fbfc:	add	r2, r1, #1
   3fc00:	str	r2, [r4, #20]
   3fc04:	mov	r2, #123	; 0x7b
   3fc08:	strb	r2, [r1]
   3fc0c:	mov	r1, #99	; 0x63
   3fc10:	str	r1, [sp, #16]
   3fc14:	mov	r1, #0
   3fc18:	str	r1, [sp, #20]
   3fc1c:	add	r1, r5, r0
   3fc20:	str	r1, [sp, #4]
   3fc24:	ldr	r0, [r5, r0]
   3fc28:	sub	r2, r1, r0
   3fc2c:	str	r2, [sp, #8]
   3fc30:	ldr	r2, [fp, #8]
   3fc34:	ldrh	r0, [r1, -r0]
   3fc38:	add	r1, sp, #4
   3fc3c:	str	r0, [sp, #12]
   3fc40:	mov	r0, r4
   3fc44:	blx	r2
   3fc48:	ldrb	r1, [r4, #25]
   3fc4c:	ldr	r0, [r4, #20]
   3fc50:	cmp	r1, #0
   3fc54:	beq	3fd14 <flatcc_json_printer_table_as_root@@Base+0x144>
   3fc58:	add	r1, r0, #1
   3fc5c:	str	r1, [r4, #20]
   3fc60:	mov	r1, #10
   3fc64:	strb	r1, [r0]
   3fc68:	ldr	r0, [r4, #32]
   3fc6c:	sub	r2, r0, #1
   3fc70:	str	r2, [r4, #32]
   3fc74:	ldrb	r3, [r4, #25]
   3fc78:	ldr	r0, [r4, #20]
   3fc7c:	ldr	r1, [r4, #16]
   3fc80:	mla	r6, r2, r3, r0
   3fc84:	mul	r5, r2, r3
   3fc88:	cmp	r6, r1
   3fc8c:	bls	3fcfc <flatcc_json_printer_table_as_root@@Base+0x12c>
   3fc90:	cmp	r0, r1
   3fc94:	bcc	3fcb0 <flatcc_json_printer_table_as_root@@Base+0xe0>
   3fc98:	ldr	r2, [r4, #44]	; 0x2c
   3fc9c:	mov	r0, r4
   3fca0:	mov	r1, #0
   3fca4:	blx	r2
   3fca8:	ldr	r1, [r4, #16]
   3fcac:	ldr	r0, [r4, #20]
   3fcb0:	sub	r6, r1, r0
   3fcb4:	cmp	r6, r5
   3fcb8:	bcs	3fcfc <flatcc_json_printer_table_as_root@@Base+0x12c>
   3fcbc:	mov	r1, #32
   3fcc0:	mov	r2, r6
   3fcc4:	bl	14ef0 <memset@plt>
   3fcc8:	ldr	r0, [r4, #20]
   3fccc:	ldr	r2, [r4, #44]	; 0x2c
   3fcd0:	mov	r1, #0
   3fcd4:	add	r0, r0, r6
   3fcd8:	str	r0, [r4, #20]
   3fcdc:	mov	r0, r4
   3fce0:	blx	r2
   3fce4:	ldr	r1, [r4, #16]
   3fce8:	ldr	r0, [r4, #20]
   3fcec:	sub	r5, r5, r6
   3fcf0:	sub	r6, r1, r0
   3fcf4:	cmp	r5, r6
   3fcf8:	bhi	3fcbc <flatcc_json_printer_table_as_root@@Base+0xec>
   3fcfc:	mov	r1, #32
   3fd00:	mov	r2, r5
   3fd04:	bl	14ef0 <memset@plt>
   3fd08:	ldr	r0, [r4, #20]
   3fd0c:	add	r0, r0, r5
   3fd10:	str	r0, [r4, #20]
   3fd14:	add	r1, r0, #1
   3fd18:	str	r1, [r4, #20]
   3fd1c:	mov	r1, #125	; 0x7d
   3fd20:	strb	r1, [r0]
   3fd24:	ldrb	r0, [r4, #25]
   3fd28:	cmp	r0, #0
   3fd2c:	beq	3fd50 <flatcc_json_printer_table_as_root@@Base+0x180>
   3fd30:	ldr	r0, [r4, #32]
   3fd34:	cmp	r0, #0
   3fd38:	bne	3fd50 <flatcc_json_printer_table_as_root@@Base+0x180>
   3fd3c:	ldr	r0, [r4, #20]
   3fd40:	add	r1, r0, #1
   3fd44:	str	r1, [r4, #20]
   3fd48:	mov	r1, #10
   3fd4c:	strb	r1, [r0]
   3fd50:	ldr	r2, [r4, #44]	; 0x2c
   3fd54:	mov	r0, r4
   3fd58:	mov	r1, #1
   3fd5c:	blx	r2
   3fd60:	ldr	r1, [r4, #36]	; 0x24
   3fd64:	mvn	r0, #0
   3fd68:	cmp	r1, #0
   3fd6c:	bne	3fd84 <flatcc_json_printer_table_as_root@@Base+0x1b4>
   3fd70:	ldr	r1, [r4, #12]
   3fd74:	ldr	r2, [r4, #20]
   3fd78:	ldr	r0, [r4]
   3fd7c:	add	r1, r2, r1
   3fd80:	sub	r0, r1, r0
   3fd84:	sub	sp, fp, #16
   3fd88:	pop	{r4, r5, r6, sl, fp, pc}

0003fd8c <flatcc_json_printer_struct_as_nested_root@@Base>:
   3fd8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3fd90:	add	fp, sp, #24
   3fd94:	mov	r7, r1
   3fd98:	ldr	r1, [r1, #8]
   3fd9c:	mov	r4, r0
   3fda0:	mov	r0, #4
   3fda4:	add	r0, r0, r2, lsl #1
   3fda8:	cmp	r0, r1
   3fdac:	popge	{r4, r5, r6, r7, r8, r9, fp, pc}
   3fdb0:	ldr	r1, [r7, #4]
   3fdb4:	add	r0, r1, r0
   3fdb8:	ldrh	r0, [r0]
   3fdbc:	cmp	r0, #0
   3fdc0:	ldrne	r1, [r7]
   3fdc4:	addsne	r0, r1, r0
   3fdc8:	bne	3fdd0 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   3fdcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3fdd0:	ldr	r6, [r0]
   3fdd4:	mov	r5, r3
   3fdd8:	ldr	r3, [fp, #12]
   3fddc:	ldr	r9, [fp, #16]
   3fde0:	ldr	r8, [fp, #8]
   3fde4:	ldr	r2, [r6, r0]!
   3fde8:	mov	r0, r4
   3fdec:	mov	r1, r6
   3fdf0:	bl	3fb14 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3fdf4:	ldr	r0, [r7, #16]
   3fdf8:	mov	r2, r8
   3fdfc:	add	r1, r0, #1
   3fe00:	cmp	r0, #0
   3fe04:	str	r1, [r7, #16]
   3fe08:	ldrne	r0, [r4, #20]
   3fe0c:	addne	r1, r0, #1
   3fe10:	strne	r1, [r4, #20]
   3fe14:	movne	r1, #44	; 0x2c
   3fe18:	strbne	r1, [r0]
   3fe1c:	mov	r0, r4
   3fe20:	mov	r1, r5
   3fe24:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3fe28:	ldr	r1, [r4, #32]
   3fe2c:	ldr	r0, [r4, #20]
   3fe30:	add	r1, r1, #1
   3fe34:	str	r1, [r4, #32]
   3fe38:	add	r1, r0, #1
   3fe3c:	str	r1, [r4, #20]
   3fe40:	mov	r1, #123	; 0x7b
   3fe44:	strb	r1, [r0]
   3fe48:	ldr	r0, [r6]
   3fe4c:	add	r1, r6, r0
   3fe50:	mov	r0, r4
   3fe54:	blx	r9
   3fe58:	ldrb	r1, [r4, #25]
   3fe5c:	ldr	r0, [r4, #20]
   3fe60:	cmp	r1, #0
   3fe64:	beq	3ff24 <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   3fe68:	add	r1, r0, #1
   3fe6c:	str	r1, [r4, #20]
   3fe70:	mov	r1, #10
   3fe74:	strb	r1, [r0]
   3fe78:	ldr	r0, [r4, #32]
   3fe7c:	sub	r2, r0, #1
   3fe80:	str	r2, [r4, #32]
   3fe84:	ldrb	r3, [r4, #25]
   3fe88:	ldr	r0, [r4, #20]
   3fe8c:	ldr	r1, [r4, #16]
   3fe90:	mla	r7, r2, r3, r0
   3fe94:	mul	r5, r2, r3
   3fe98:	cmp	r7, r1
   3fe9c:	bls	3ff0c <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   3fea0:	cmp	r0, r1
   3fea4:	bcc	3fec0 <flatcc_json_printer_struct_as_nested_root@@Base+0x134>
   3fea8:	ldr	r2, [r4, #44]	; 0x2c
   3feac:	mov	r0, r4
   3feb0:	mov	r1, #0
   3feb4:	blx	r2
   3feb8:	ldr	r1, [r4, #16]
   3febc:	ldr	r0, [r4, #20]
   3fec0:	sub	r6, r1, r0
   3fec4:	cmp	r6, r5
   3fec8:	bcs	3ff0c <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   3fecc:	mov	r1, #32
   3fed0:	mov	r2, r6
   3fed4:	bl	14ef0 <memset@plt>
   3fed8:	ldr	r0, [r4, #20]
   3fedc:	ldr	r2, [r4, #44]	; 0x2c
   3fee0:	mov	r1, #0
   3fee4:	add	r0, r0, r6
   3fee8:	str	r0, [r4, #20]
   3feec:	mov	r0, r4
   3fef0:	blx	r2
   3fef4:	ldr	r1, [r4, #16]
   3fef8:	ldr	r0, [r4, #20]
   3fefc:	sub	r5, r5, r6
   3ff00:	sub	r6, r1, r0
   3ff04:	cmp	r5, r6
   3ff08:	bhi	3fecc <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
   3ff0c:	mov	r1, #32
   3ff10:	mov	r2, r5
   3ff14:	bl	14ef0 <memset@plt>
   3ff18:	ldr	r0, [r4, #20]
   3ff1c:	add	r0, r0, r5
   3ff20:	str	r0, [r4, #20]
   3ff24:	add	r1, r0, #1
   3ff28:	str	r1, [r4, #20]
   3ff2c:	mov	r1, #125	; 0x7d
   3ff30:	strb	r1, [r0]
   3ff34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003ff38 <flatcc_json_printer_table_as_nested_root@@Base>:
   3ff38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3ff3c:	add	fp, sp, #24
   3ff40:	sub	sp, sp, #24
   3ff44:	mov	r5, r1
   3ff48:	ldr	r1, [r1, #8]
   3ff4c:	mov	r4, r0
   3ff50:	mov	r0, #4
   3ff54:	add	r0, r0, r2, lsl #1
   3ff58:	cmp	r0, r1
   3ff5c:	bge	3ff7c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   3ff60:	ldr	r1, [r5, #4]
   3ff64:	add	r0, r1, r0
   3ff68:	ldrh	r0, [r0]
   3ff6c:	cmp	r0, #0
   3ff70:	ldrne	r1, [r5]
   3ff74:	addsne	r0, r1, r0
   3ff78:	bne	3ff84 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   3ff7c:	sub	sp, fp, #24
   3ff80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3ff84:	ldr	r1, [r0]
   3ff88:	mov	r6, r3
   3ff8c:	ldr	r3, [fp, #12]
   3ff90:	ldr	r8, [fp, #8]
   3ff94:	ldr	r2, [r1, r0]!
   3ff98:	mov	r0, r4
   3ff9c:	add	r7, r1, #4
   3ffa0:	mov	r1, r7
   3ffa4:	bl	3fb14 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3ffa8:	ldr	r0, [r5, #16]
   3ffac:	mov	r2, r8
   3ffb0:	add	r1, r0, #1
   3ffb4:	cmp	r0, #0
   3ffb8:	str	r1, [r5, #16]
   3ffbc:	ldrne	r0, [r4, #20]
   3ffc0:	addne	r1, r0, #1
   3ffc4:	strne	r1, [r4, #20]
   3ffc8:	movne	r1, #44	; 0x2c
   3ffcc:	strbne	r1, [r0]
   3ffd0:	mov	r0, r4
   3ffd4:	mov	r1, r6
   3ffd8:	bl	36a3c <flatcc_json_printer_string_field@@Base+0x8c>
   3ffdc:	ldr	r0, [r5, #12]
   3ffe0:	subs	r0, r0, #1
   3ffe4:	beq	40124 <flatcc_json_printer_table_as_nested_root@@Base+0x1ec>
   3ffe8:	ldr	r1, [r7]
   3ffec:	ldr	r3, [r4, #20]
   3fff0:	ldr	r2, [fp, #16]
   3fff4:	add	r1, r7, r1
   3fff8:	ldr	r7, [r4, #32]
   3fffc:	add	r7, r7, #1
   40000:	str	r7, [r4, #32]
   40004:	add	r7, r3, #1
   40008:	str	r7, [r4, #20]
   4000c:	mov	r7, #123	; 0x7b
   40010:	strb	r7, [r3]
   40014:	str	r0, [sp, #16]
   40018:	mov	r0, #0
   4001c:	str	r0, [sp, #20]
   40020:	str	r1, [sp, #4]
   40024:	ldr	r0, [r1]
   40028:	sub	r3, r1, r0
   4002c:	str	r3, [sp, #8]
   40030:	ldrh	r0, [r1, -r0]
   40034:	add	r1, sp, #4
   40038:	str	r0, [sp, #12]
   4003c:	mov	r0, r4
   40040:	blx	r2
   40044:	ldrb	r1, [r4, #25]
   40048:	ldr	r0, [r4, #20]
   4004c:	cmp	r1, #0
   40050:	beq	40110 <flatcc_json_printer_table_as_nested_root@@Base+0x1d8>
   40054:	add	r1, r0, #1
   40058:	str	r1, [r4, #20]
   4005c:	mov	r1, #10
   40060:	strb	r1, [r0]
   40064:	ldr	r0, [r4, #32]
   40068:	sub	r2, r0, #1
   4006c:	str	r2, [r4, #32]
   40070:	ldrb	r3, [r4, #25]
   40074:	ldr	r0, [r4, #20]
   40078:	ldr	r1, [r4, #16]
   4007c:	mla	r7, r2, r3, r0
   40080:	mul	r5, r2, r3
   40084:	cmp	r7, r1
   40088:	bls	400f8 <flatcc_json_printer_table_as_nested_root@@Base+0x1c0>
   4008c:	cmp	r0, r1
   40090:	bcc	400ac <flatcc_json_printer_table_as_nested_root@@Base+0x174>
   40094:	ldr	r2, [r4, #44]	; 0x2c
   40098:	mov	r0, r4
   4009c:	mov	r1, #0
   400a0:	blx	r2
   400a4:	ldr	r1, [r4, #16]
   400a8:	ldr	r0, [r4, #20]
   400ac:	sub	r6, r1, r0
   400b0:	cmp	r6, r5
   400b4:	bcs	400f8 <flatcc_json_printer_table_as_nested_root@@Base+0x1c0>
   400b8:	mov	r1, #32
   400bc:	mov	r2, r6
   400c0:	bl	14ef0 <memset@plt>
   400c4:	ldr	r0, [r4, #20]
   400c8:	ldr	r2, [r4, #44]	; 0x2c
   400cc:	mov	r1, #0
   400d0:	add	r0, r0, r6
   400d4:	str	r0, [r4, #20]
   400d8:	mov	r0, r4
   400dc:	blx	r2
   400e0:	ldr	r1, [r4, #16]
   400e4:	ldr	r0, [r4, #20]
   400e8:	sub	r5, r5, r6
   400ec:	sub	r6, r1, r0
   400f0:	cmp	r5, r6
   400f4:	bhi	400b8 <flatcc_json_printer_table_as_nested_root@@Base+0x180>
   400f8:	mov	r1, #32
   400fc:	mov	r2, r5
   40100:	bl	14ef0 <memset@plt>
   40104:	ldr	r0, [r4, #20]
   40108:	add	r0, r0, r5
   4010c:	str	r0, [r4, #20]
   40110:	add	r1, r0, #1
   40114:	str	r1, [r4, #20]
   40118:	mov	r1, #125	; 0x7d
   4011c:	strb	r1, [r0]
   40120:	b	3ff7c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   40124:	ldr	r0, [r4, #36]	; 0x24
   40128:	cmp	r0, #0
   4012c:	moveq	r0, #2
   40130:	streq	r0, [r4, #36]	; 0x24
   40134:	b	3ff7c <flatcc_json_printer_table_as_nested_root@@Base+0x44>

00040138 <flatcc_json_printer_init@@Base>:
   40138:	push	{r4, r5, r6, sl, fp, lr}
   4013c:	add	fp, sp, #16
   40140:	mov	r5, r0
   40144:	mov	r4, #0
   40148:	vmov.i32	q8, #0	; 0x00000000
   4014c:	cmp	r1, #0
   40150:	movw	r6, #16448	; 0x4040
   40154:	str	r4, [r0, #32]
   40158:	mov	r0, #36	; 0x24
   4015c:	mov	r2, r5
   40160:	vst1.32	{d16-d17}, [r2], r0
   40164:	add	r0, r5, #16
   40168:	vst1.32	{d16-d17}, [r0]
   4016c:	movw	r0, #33612	; 0x834c
   40170:	str	r4, [r2]
   40174:	movw	r2, #468	; 0x1d4
   40178:	movt	r0, #5
   4017c:	movt	r2, #4
   40180:	ldr	r0, [r0]
   40184:	movne	r0, r1
   40188:	str	r0, [r5, #40]	; 0x28
   4018c:	movw	r0, #16448	; 0x4040
   40190:	str	r2, [r5, #44]	; 0x2c
   40194:	bl	14ea8 <malloc@plt>
   40198:	cmp	r0, #0
   4019c:	str	r0, [r5]
   401a0:	beq	401c8 <flatcc_json_printer_init@@Base+0x90>
   401a4:	mov	r1, #1
   401a8:	strb	r1, [r5, #24]
   401ac:	mov	r1, #16384	; 0x4000
   401b0:	str	r6, [r5, #4]
   401b4:	str	r1, [r5, #8]
   401b8:	add	r1, r0, #16384	; 0x4000
   401bc:	str	r1, [r5, #16]
   401c0:	str	r0, [r5, #20]
   401c4:	b	401cc <flatcc_json_printer_init@@Base+0x94>
   401c8:	mvn	r4, #0
   401cc:	mov	r0, r4
   401d0:	pop	{r4, r5, r6, sl, fp, pc}
   401d4:	push	{r4, r5, r6, sl, fp, lr}
   401d8:	add	fp, sp, #16
   401dc:	mov	r4, r0
   401e0:	cmp	r1, #0
   401e4:	beq	401f0 <flatcc_json_printer_init@@Base+0xb8>
   401e8:	ldr	r5, [r4, #20]
   401ec:	b	40200 <flatcc_json_printer_init@@Base+0xc8>
   401f0:	ldr	r6, [r4, #16]
   401f4:	ldr	r5, [r4, #20]
   401f8:	cmp	r5, r6
   401fc:	bcs	4022c <flatcc_json_printer_init@@Base+0xf4>
   40200:	ldr	r0, [r4]
   40204:	ldr	r3, [r4, #40]	; 0x28
   40208:	mov	r2, #1
   4020c:	sub	r5, r5, r0
   40210:	mov	r1, r5
   40214:	bl	14e9c <fwrite@plt>
   40218:	ldr	r1, [r4, #12]
   4021c:	ldr	r0, [r4]
   40220:	str	r0, [r4, #20]
   40224:	add	r1, r1, r5
   40228:	b	40270 <flatcc_json_printer_init@@Base+0x138>
   4022c:	ldr	r0, [r4]
   40230:	ldr	r1, [r4, #8]
   40234:	ldr	r3, [r4, #40]	; 0x28
   40238:	mov	r2, #1
   4023c:	bl	14e9c <fwrite@plt>
   40240:	ldr	r0, [r4]
   40244:	ldr	r1, [r4, #8]
   40248:	sub	r5, r5, r6
   4024c:	mov	r2, r5
   40250:	add	r1, r0, r1
   40254:	bl	14e60 <memcpy@plt>
   40258:	ldr	r0, [r4]
   4025c:	ldr	r1, [r4, #8]
   40260:	ldr	r2, [r4, #12]
   40264:	add	r0, r0, r5
   40268:	add	r1, r2, r1
   4026c:	str	r0, [r4, #20]
   40270:	str	r1, [r4, #12]
   40274:	mov	r1, #0
   40278:	strb	r1, [r0]
   4027c:	pop	{r4, r5, r6, sl, fp, pc}

00040280 <flatcc_json_printer_init_buffer@@Base>:
   40280:	cmp	r2, #63	; 0x3f
   40284:	bls	402c4 <flatcc_json_printer_init_buffer@@Base+0x44>
   40288:	vmov.i32	q8, #0	; 0x00000000
   4028c:	add	r3, r0, #12
   40290:	vst1.32	{d16-d17}, [r3]
   40294:	movw	r3, #748	; 0x2ec
   40298:	movt	r3, #4
   4029c:	str	r3, [r0, #44]	; 0x2c
   402a0:	add	r3, r0, #28
   402a4:	vst1.32	{d16-d17}, [r3]
   402a8:	sub	r3, r2, #64	; 0x40
   402ac:	stm	r0, {r1, r2, r3}
   402b0:	add	r2, r1, r3
   402b4:	str	r2, [r0, #16]
   402b8:	str	r1, [r0, #20]
   402bc:	mov	r0, #0
   402c0:	bx	lr
   402c4:	push	{fp, lr}
   402c8:	mov	fp, sp
   402cc:	movw	r0, #27430	; 0x6b26
   402d0:	movw	r1, #27147	; 0x6a0b
   402d4:	movw	r3, #27471	; 0x6b4f
   402d8:	movw	r2, #1165	; 0x48d
   402dc:	movt	r0, #4
   402e0:	movt	r1, #4
   402e4:	movt	r3, #4
   402e8:	bl	14f44 <__assert_fail@plt>
   402ec:	ldr	r2, [r0, #16]
   402f0:	ldr	r1, [r0, #20]
   402f4:	cmp	r1, r2
   402f8:	bcs	40304 <flatcc_json_printer_init_buffer@@Base+0x84>
   402fc:	mov	r2, r1
   40300:	b	4032c <flatcc_json_printer_init_buffer@@Base+0xac>
   40304:	ldr	r2, [r0, #36]	; 0x24
   40308:	cmp	r2, #0
   4030c:	moveq	r2, #3
   40310:	streq	r2, [r0, #36]	; 0x24
   40314:	ldr	r2, [r0]
   40318:	ldr	r3, [r0, #12]
   4031c:	sub	r1, r1, r2
   40320:	str	r2, [r0, #20]
   40324:	add	r1, r1, r3
   40328:	str	r1, [r0, #12]
   4032c:	mov	r0, #0
   40330:	strb	r0, [r2]
   40334:	bx	lr

00040338 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   40338:	push	{r4, r5, fp, lr}
   4033c:	add	fp, sp, #8
   40340:	mov	r5, r1
   40344:	cmp	r1, #0
   40348:	mov	r4, r0
   4034c:	vmov.i32	q8, #0	; 0x00000000
   40350:	add	r0, r0, #28
   40354:	movweq	r5, #4096	; 0x1000
   40358:	vst1.32	{d16-d17}, [r0]
   4035c:	add	r0, r4, #12
   40360:	cmp	r5, #64	; 0x40
   40364:	vst1.32	{d16-d17}, [r0]
   40368:	movls	r5, #64	; 0x40
   4036c:	mov	r0, r5
   40370:	bl	14ea8 <malloc@plt>
   40374:	mov	r1, r0
   40378:	mov	r0, #1
   4037c:	movw	r2, #956	; 0x3bc
   40380:	strb	r0, [r4, #24]
   40384:	sub	r0, r5, #64	; 0x40
   40388:	stm	r4, {r1, r5}
   4038c:	movt	r2, #4
   40390:	cmp	r1, #0
   40394:	str	r0, [r4, #8]
   40398:	add	r0, r1, r0
   4039c:	str	r2, [r4, #44]	; 0x2c
   403a0:	str	r0, [r4, #16]
   403a4:	mov	r0, #0
   403a8:	str	r1, [r4, #20]
   403ac:	moveq	r0, #3
   403b0:	streq	r0, [r4, #36]	; 0x24
   403b4:	mvneq	r0, #0
   403b8:	pop	{r4, r5, fp, pc}
   403bc:	push	{r4, r5, fp, lr}
   403c0:	add	fp, sp, #8
   403c4:	mov	r4, r0
   403c8:	ldr	r0, [r0]
   403cc:	mov	r1, #0
   403d0:	ldr	r5, [r4, #20]
   403d4:	strb	r1, [r5], -r0
   403d8:	ldr	r0, [r4, #16]
   403dc:	ldr	r1, [r4, #20]
   403e0:	cmp	r1, r0
   403e4:	popcc	{r4, r5, fp, pc}
   403e8:	ldm	r4, {r0, r1}
   403ec:	lsl	r1, r1, #1
   403f0:	bl	14e90 <realloc@plt>
   403f4:	cmp	r0, #0
   403f8:	beq	4042c <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   403fc:	str	r0, [r4]
   40400:	mvn	r3, #63	; 0x3f
   40404:	add	r1, r0, r5
   40408:	ldr	r2, [r4, #4]
   4040c:	add	r3, r3, r2, lsl #1
   40410:	lsl	r2, r2, #1
   40414:	add	r0, r0, r3
   40418:	str	r3, [r4, #8]
   4041c:	str	r2, [r4, #4]
   40420:	str	r0, [r4, #16]
   40424:	str	r1, [r4, #20]
   40428:	b	40450 <flatcc_json_printer_init_dynamic_buffer@@Base+0x118>
   4042c:	ldr	r0, [r4, #36]	; 0x24
   40430:	cmp	r0, #0
   40434:	moveq	r0, #3
   40438:	streq	r0, [r4, #36]	; 0x24
   4043c:	ldr	r0, [r4, #12]
   40440:	ldr	r1, [r4]
   40444:	add	r0, r0, r5
   40448:	str	r1, [r4, #20]
   4044c:	str	r0, [r4, #12]
   40450:	mov	r0, #0
   40454:	strb	r0, [r1]
   40458:	pop	{r4, r5, fp, pc}

0004045c <flatcc_json_printer_get_buffer@@Base>:
   4045c:	push	{r4, r5, fp, lr}
   40460:	add	fp, sp, #8
   40464:	ldr	r2, [r0, #44]	; 0x2c
   40468:	mov	r4, r1
   4046c:	mov	r1, #0
   40470:	mov	r5, r0
   40474:	blx	r2
   40478:	cmp	r4, #0
   4047c:	ldrne	r0, [r5]
   40480:	ldrne	r1, [r5, #20]
   40484:	subne	r1, r1, r0
   40488:	strne	r1, [r4]
   4048c:	popne	{r4, r5, fp, pc}
   40490:	ldr	r0, [r5]
   40494:	pop	{r4, r5, fp, pc}

00040498 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   40498:	push	{r4, r5, fp, lr}
   4049c:	add	fp, sp, #8
   404a0:	ldr	r2, [r0, #44]	; 0x2c
   404a4:	mov	r5, r1
   404a8:	mov	r1, #0
   404ac:	mov	r4, r0
   404b0:	blx	r2
   404b4:	cmp	r5, #0
   404b8:	ldr	r0, [r4]
   404bc:	vmov.i32	q8, #0	; 0x00000000
   404c0:	add	r2, r4, #16
   404c4:	ldrne	r1, [r4, #20]
   404c8:	subne	r1, r1, r0
   404cc:	strne	r1, [r5]
   404d0:	mov	r1, #32
   404d4:	vst1.32	{d16-d17}, [r2]
   404d8:	vst1.32	{d16-d17}, [r4], r1
   404dc:	vst1.32	{d16-d17}, [r4]
   404e0:	pop	{r4, r5, fp, pc}

000404e4 <flatcc_json_printer_clear@@Base>:
   404e4:	push	{r4, sl, fp, lr}
   404e8:	add	fp, sp, #8
   404ec:	mov	r4, r0
   404f0:	ldrb	r0, [r0, #24]
   404f4:	cmp	r0, #0
   404f8:	ldrne	r0, [r4]
   404fc:	cmpne	r0, #0
   40500:	beq	40508 <flatcc_json_printer_clear@@Base+0x24>
   40504:	bl	14e54 <free@plt>
   40508:	vmov.i32	q8, #0	; 0x00000000
   4050c:	mov	r0, #32
   40510:	add	r1, r4, #16
   40514:	vst1.32	{d16-d17}, [r4], r0
   40518:	vst1.32	{d16-d17}, [r1]
   4051c:	vst1.32	{d16-d17}, [r4]
   40520:	pop	{r4, sl, fp, pc}
   40524:	push	{r4, sl, fp, lr}
   40528:	add	fp, sp, #8
   4052c:	cmn	r0, #1
   40530:	ble	4053c <flatcc_json_printer_clear@@Base+0x58>
   40534:	mov	lr, r1
   40538:	b	4054c <flatcc_json_printer_clear@@Base+0x68>
   4053c:	mov	r2, #45	; 0x2d
   40540:	mov	lr, r1
   40544:	rsb	r0, r0, #0
   40548:	strb	r2, [lr], #1
   4054c:	movw	ip, #26215	; 0x6667
   40550:	mov	r3, lr
   40554:	movt	ip, #26214	; 0x6666
   40558:	smmul	r2, r0, ip
   4055c:	asr	r4, r2, #2
   40560:	add	r2, r4, r2, lsr #31
   40564:	add	r4, r2, r2, lsl #2
   40568:	sub	r4, r0, r4, lsl #1
   4056c:	add	r0, r0, #9
   40570:	add	r4, r4, #48	; 0x30
   40574:	cmp	r0, #18
   40578:	mov	r0, r2
   4057c:	strb	r4, [r3], #1
   40580:	bhi	40558 <flatcc_json_printer_clear@@Base+0x74>
   40584:	mov	r2, #0
   40588:	mov	r0, r3
   4058c:	strb	r2, [r0], -lr
   40590:	cmp	r0, #2
   40594:	blt	405bc <flatcc_json_printer_clear@@Base+0xd8>
   40598:	add	r0, r0, r0, lsr #31
   4059c:	sub	r2, r3, #1
   405a0:	asr	r0, r0, #1
   405a4:	ldrb	ip, [lr]
   405a8:	ldrb	r4, [r2]
   405ac:	subs	r0, r0, #1
   405b0:	strb	r4, [lr], #1
   405b4:	strb	ip, [r2], #-1
   405b8:	bne	405a4 <flatcc_json_printer_clear@@Base+0xc0>
   405bc:	sub	r0, r3, r1
   405c0:	pop	{r4, sl, fp, pc}
   405c4:	push	{r4, sl, fp, lr}
   405c8:	add	fp, sp, #8
   405cc:	orrs	r1, r2, r3
   405d0:	beq	40648 <flatcc_json_printer_clear@@Base+0x164>
   405d4:	ldr	ip, [fp, #12]
   405d8:	ldr	r1, [fp, #8]
   405dc:	mov	r4, #0
   405e0:	cmp	r4, r3, lsr #22
   405e4:	bne	40600 <flatcc_json_printer_clear@@Base+0x11c>
   405e8:	lsl	r3, r3, #10
   405ec:	sub	r1, r1, #10
   405f0:	orr	r3, r3, r2, lsr #22
   405f4:	lsl	r2, r2, #10
   405f8:	cmp	r3, #4194304	; 0x400000
   405fc:	bcc	405e8 <flatcc_json_printer_clear@@Base+0x104>
   40600:	cmp	r3, #0
   40604:	blt	40630 <flatcc_json_printer_clear@@Base+0x14c>
   40608:	mvn	lr, #0
   4060c:	lsl	r3, r3, #1
   40610:	lsl	r4, r2, #1
   40614:	sub	r1, r1, #1
   40618:	orr	r3, r3, r2, lsr #31
   4061c:	subs	r2, lr, r2, lsl #1
   40620:	sbcs	r2, lr, r3
   40624:	mov	r2, r4
   40628:	blt	4060c <flatcc_json_printer_clear@@Base+0x128>
   4062c:	b	40634 <flatcc_json_printer_clear@@Base+0x150>
   40630:	mov	r4, r2
   40634:	str	r4, [r0]
   40638:	str	r3, [r0, #4]
   4063c:	str	r1, [r0, #8]
   40640:	str	ip, [r0, #12]
   40644:	pop	{r4, sl, fp, pc}
   40648:	movw	r0, #26770	; 0x6892
   4064c:	movw	r1, #26779	; 0x689b
   40650:	movw	r3, #26865	; 0x68f1
   40654:	mov	r2, #260	; 0x104
   40658:	movt	r0, #4
   4065c:	movt	r1, #4
   40660:	movt	r3, #4
   40664:	bl	14f44 <__assert_fail@plt>
   40668:	push	{r4, r5, fp, lr}
   4066c:	add	fp, sp, #8
   40670:	ldr	ip, [fp, #24]
   40674:	ldr	r1, [fp, #8]
   40678:	mov	r5, #0
   4067c:	add	r1, r1, ip
   40680:	ldr	ip, [fp, #16]
   40684:	add	r1, r1, #64	; 0x40
   40688:	str	r1, [r0, #8]
   4068c:	umull	r1, lr, ip, r2
   40690:	umull	ip, r1, ip, r3
   40694:	adds	lr, ip, lr
   40698:	ldr	ip, [fp, #20]
   4069c:	adc	r5, r5, #0
   406a0:	umull	r2, r4, ip, r2
   406a4:	adds	r2, lr, r2
   406a8:	umaal	r1, r4, ip, r3
   406ac:	adc	r5, r5, #0
   406b0:	adds	r2, r2, #-2147483648	; 0x80000000
   406b4:	adc	r2, r5, #0
   406b8:	adds	r1, r1, r2
   406bc:	str	r1, [r0]
   406c0:	adc	r1, r4, #0
   406c4:	str	r1, [r0, #4]
   406c8:	pop	{r4, r5, fp, pc}
   406cc:	push	{fp, lr}
   406d0:	mov	fp, sp
   406d4:	ldr	r1, [fp, #16]
   406d8:	ldr	ip, [fp, #8]
   406dc:	subs	r1, r2, r1
   406e0:	str	ip, [r0, #8]
   406e4:	str	r1, [r0]
   406e8:	ldr	r1, [fp, #20]
   406ec:	sbcs	r1, r3, r1
   406f0:	str	r1, [r0, #4]
   406f4:	bcc	40704 <flatcc_json_printer_clear@@Base+0x220>
   406f8:	ldr	r0, [fp, #24]
   406fc:	cmp	ip, r0
   40700:	popeq	{fp, pc}
   40704:	movw	r0, #27777	; 0x6c81
   40708:	movw	r1, #26779	; 0x689b
   4070c:	movw	r3, #27802	; 0x6c9a
   40710:	mov	r2, #239	; 0xef
   40714:	movt	r0, #4
   40718:	movt	r1, #4
   4071c:	movt	r3, #4
   40720:	bl	14f44 <__assert_fail@plt>
   40724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40728:	add	fp, sp, #28
   4072c:	sub	sp, sp, #20
   40730:	str	r1, [sp, #12]
   40734:	ldr	r1, [fp, #16]
   40738:	ldr	r9, [fp, #8]
   4073c:	mov	r8, r2
   40740:	ldr	r2, [fp, #20]
   40744:	ldr	lr, [fp, #12]
   40748:	ldr	r4, [fp, #24]
   4074c:	str	r0, [sp, #16]
   40750:	ldr	r0, [fp, #28]
   40754:	mov	r6, #0
   40758:	subs	r7, r9, r1
   4075c:	sbc	ip, lr, r2
   40760:	subs	r4, r7, r4
   40764:	sbcs	r4, ip, r0
   40768:	ldr	r0, [fp, #32]
   4076c:	ldr	r4, [fp, #36]	; 0x24
   40770:	movwcc	r6, #1
   40774:	adds	r5, r0, r8
   40778:	str	r5, [sp, #8]
   4077c:	adc	r5, r4, r3
   40780:	subs	sl, r8, r0
   40784:	sbc	r8, r3, r4
   40788:	subs	r3, r1, sl
   4078c:	str	r5, [sp, #4]
   40790:	sbcs	r3, r2, r8
   40794:	bcs	40850 <flatcc_json_printer_clear@@Base+0x36c>
   40798:	ldr	r0, [fp, #24]
   4079c:	ldr	r4, [fp, #28]
   407a0:	subs	r3, r7, r0
   407a4:	mov	r7, r0
   407a8:	sbcs	r3, ip, r4
   407ac:	bcc	40860 <flatcc_json_printer_clear@@Base+0x37c>
   407b0:	ldr	r0, [sp, #12]
   407b4:	sub	r0, r0, #1
   407b8:	str	r0, [sp, #12]
   407bc:	adds	ip, r1, r7
   407c0:	adc	r3, r2, r4
   407c4:	subs	r6, ip, sl
   407c8:	sbcs	r6, r3, r8
   407cc:	bcc	40804 <flatcc_json_printer_clear@@Base+0x320>
   407d0:	subs	r6, ip, sl
   407d4:	mov	r5, lr
   407d8:	mov	r0, r9
   407dc:	sbc	r4, r3, r8
   407e0:	subs	lr, sl, r1
   407e4:	sbc	r9, r8, r2
   407e8:	subs	r6, lr, r6
   407ec:	mov	lr, r5
   407f0:	sbcs	r6, r9, r4
   407f4:	mov	r9, r0
   407f8:	ldr	r4, [fp, #28]
   407fc:	ldr	r0, [sp, #12]
   40800:	bcc	4085c <flatcc_json_printer_clear@@Base+0x378>
   40804:	ldr	r2, [sp, #16]
   40808:	ldrb	r1, [r2, r0]
   4080c:	sub	r1, r1, #1
   40810:	strb	r1, [r2, r0]
   40814:	subs	r1, r9, ip
   40818:	sbc	r2, lr, r3
   4081c:	subs	r6, r1, r7
   40820:	sbcs	r6, r2, r4
   40824:	mov	r6, #0
   40828:	movwcc	r6, #1
   4082c:	subs	r5, ip, sl
   40830:	sbcs	r5, r3, r8
   40834:	bcs	40868 <flatcc_json_printer_clear@@Base+0x384>
   40838:	subs	r1, r1, r7
   4083c:	sbcs	r1, r2, r4
   40840:	mov	r2, r3
   40844:	mov	r1, ip
   40848:	bcs	407bc <flatcc_json_printer_clear@@Base+0x2d8>
   4084c:	b	40868 <flatcc_json_printer_clear@@Base+0x384>
   40850:	ldr	r4, [fp, #28]
   40854:	ldr	r7, [fp, #24]
   40858:	b	40860 <flatcc_json_printer_clear@@Base+0x37c>
   4085c:	mov	r6, #0
   40860:	mov	ip, r1
   40864:	mov	r3, r2
   40868:	ldr	r1, [sp, #8]
   4086c:	ldr	r5, [sp, #4]
   40870:	subs	r0, ip, r1
   40874:	sbcs	r0, r3, r5
   40878:	bcs	408d8 <flatcc_json_printer_clear@@Base+0x3f4>
   4087c:	cmp	r6, #0
   40880:	bne	408d8 <flatcc_json_printer_clear@@Base+0x3f4>
   40884:	adds	r7, ip, r7
   40888:	mov	r0, #0
   4088c:	adc	r2, r3, r4
   40890:	subs	r6, r7, r1
   40894:	sbcs	r6, r2, r5
   40898:	bcc	40918 <flatcc_json_printer_clear@@Base+0x434>
   4089c:	subs	r7, r7, r1
   408a0:	ldr	r6, [fp, #36]	; 0x24
   408a4:	sbc	r8, r2, r5
   408a8:	subs	sl, r1, ip
   408ac:	sbc	r2, r5, r3
   408b0:	ldr	r5, [fp, #32]
   408b4:	lsl	r4, r6, #1
   408b8:	orr	r4, r4, r5, lsr #31
   408bc:	subs	r1, ip, r5, lsl #1
   408c0:	sbcs	r1, r3, r4
   408c4:	bcc	40918 <flatcc_json_printer_clear@@Base+0x434>
   408c8:	subs	r1, r7, sl
   408cc:	sbcs	r1, r8, r2
   408d0:	bcs	408f8 <flatcc_json_printer_clear@@Base+0x414>
   408d4:	b	40918 <flatcc_json_printer_clear@@Base+0x434>
   408d8:	ldr	r6, [fp, #36]	; 0x24
   408dc:	ldr	r5, [fp, #32]
   408e0:	lsl	r0, r6, #1
   408e4:	subs	r2, ip, r5, lsl #1
   408e8:	orr	r1, r0, r5, lsr #31
   408ec:	mov	r0, #0
   408f0:	sbcs	r1, r3, r1
   408f4:	bcc	40918 <flatcc_json_printer_clear@@Base+0x434>
   408f8:	lsl	r0, r6, #2
   408fc:	subs	r1, r9, r5, lsl #2
   40900:	orr	r0, r0, r5, lsr #30
   40904:	sbc	r2, lr, r0
   40908:	subs	r1, r1, ip
   4090c:	mov	r0, #0
   40910:	sbcs	r1, r2, r3
   40914:	movwcs	r0, #1
   40918:	sub	sp, fp, #28
   4091c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40920:	cmp	r2, #0
   40924:	bxeq	lr
   40928:	push	{r4, r5, fp, lr}
   4092c:	add	fp, sp, #8
   40930:	ldr	lr, [r2]
   40934:	bic	ip, r3, #224	; 0xe0
   40938:	cmp	ip, #0
   4093c:	beq	40954 <flatcc_json_printer_clear@@Base+0x470>
   40940:	cmp	ip, #1
   40944:	bne	40a1c <flatcc_json_printer_clear@@Base+0x538>
   40948:	movw	ip, #28226	; 0x6e42
   4094c:	movt	ip, #4
   40950:	b	4095c <flatcc_json_printer_clear@@Base+0x478>
   40954:	movw	ip, #28161	; 0x6e01
   40958:	movt	ip, #4
   4095c:	cmp	lr, #3
   40960:	bcc	409c4 <flatcc_json_printer_clear@@Base+0x4e0>
   40964:	ldrb	r4, [r1]
   40968:	sub	lr, lr, #3
   4096c:	cmp	lr, #2
   40970:	ldrb	r4, [ip, r4, lsr #2]
   40974:	strb	r4, [r0]
   40978:	ldrb	r5, [r1, #1]
   4097c:	ldrb	r4, [r1]
   40980:	lsr	r5, r5, #4
   40984:	bfi	r5, r4, #4, #2
   40988:	ldrb	r4, [ip, r5]
   4098c:	strb	r4, [r0, #1]
   40990:	ldrb	r5, [r1, #2]
   40994:	ldrb	r4, [r1, #1]
   40998:	lsr	r5, r5, #6
   4099c:	bfi	r5, r4, #2, #4
   409a0:	ldrb	r4, [ip, r5]
   409a4:	strb	r4, [r0, #2]
   409a8:	ldrb	r4, [r1, #2]
   409ac:	add	r1, r1, #3
   409b0:	and	r4, r4, #63	; 0x3f
   409b4:	ldrb	r4, [ip, r4]
   409b8:	strb	r4, [r0, #3]
   409bc:	add	r0, r0, #4
   409c0:	bhi	40964 <flatcc_json_printer_clear@@Base+0x480>
   409c4:	and	r3, r3, #128	; 0x80
   409c8:	cmp	lr, #1
   409cc:	beq	40a24 <flatcc_json_printer_clear@@Base+0x540>
   409d0:	cmp	lr, #2
   409d4:	bne	40a4c <flatcc_json_printer_clear@@Base+0x568>
   409d8:	ldrb	r5, [r1]
   409dc:	cmp	r3, #0
   409e0:	ldrb	r5, [ip, r5, lsr #2]
   409e4:	strb	r5, [r0]
   409e8:	ldrb	r4, [r1, #1]
   409ec:	ldrb	r5, [r1]
   409f0:	lsr	r4, r4, #4
   409f4:	bfi	r4, r5, #4, #2
   409f8:	ldrb	r5, [ip, r4]
   409fc:	strb	r5, [r0, #1]
   40a00:	ldrb	r1, [r1, #1]
   40a04:	and	r1, r1, #15
   40a08:	ldrb	r1, [ip, r1, lsl #2]
   40a0c:	strb	r1, [r0, #2]
   40a10:	movne	r1, #61	; 0x3d
   40a14:	strbne	r1, [r0, #3]
   40a18:	b	40a4c <flatcc_json_printer_clear@@Base+0x568>
   40a1c:	mov	r0, lr
   40a20:	b	40a54 <flatcc_json_printer_clear@@Base+0x570>
   40a24:	ldrb	r5, [r1]
   40a28:	cmp	r3, #0
   40a2c:	ldrb	r5, [ip, r5, lsr #2]
   40a30:	strb	r5, [r0]
   40a34:	ldrb	r1, [r1]
   40a38:	and	r1, r1, #3
   40a3c:	ldrb	r1, [ip, r1, lsl #4]
   40a40:	strb	r1, [r0, #1]
   40a44:	movwne	r1, #15677	; 0x3d3d
   40a48:	strhne	r1, [r0, #2]
   40a4c:	ldr	lr, [r2]
   40a50:	mov	r0, #0
   40a54:	sub	r0, lr, r0
   40a58:	str	r0, [r2]
   40a5c:	pop	{r4, r5, fp, lr}
   40a60:	bx	lr
   40a64:	eor	r1, r1, #-2147483648	; 0x80000000
   40a68:	b	40a70 <flatcc_json_printer_clear@@Base+0x58c>
   40a6c:	eor	r3, r3, #-2147483648	; 0x80000000
   40a70:	push	{r4, r5, lr}
   40a74:	lsl	r4, r1, #1
   40a78:	lsl	r5, r3, #1
   40a7c:	teq	r4, r5
   40a80:	teqeq	r0, r2
   40a84:	orrsne	ip, r4, r0
   40a88:	orrsne	ip, r5, r2
   40a8c:	mvnsne	ip, r4, asr #21
   40a90:	mvnsne	ip, r5, asr #21
   40a94:	beq	40c80 <flatcc_json_printer_clear@@Base+0x79c>
   40a98:	lsr	r4, r4, #21
   40a9c:	rsbs	r5, r4, r5, lsr #21
   40aa0:	rsblt	r5, r5, #0
   40aa4:	ble	40ac4 <flatcc_json_printer_clear@@Base+0x5e0>
   40aa8:	add	r4, r4, r5
   40aac:	eor	r2, r0, r2
   40ab0:	eor	r3, r1, r3
   40ab4:	eor	r0, r2, r0
   40ab8:	eor	r1, r3, r1
   40abc:	eor	r2, r0, r2
   40ac0:	eor	r3, r1, r3
   40ac4:	cmp	r5, #54	; 0x36
   40ac8:	pophi	{r4, r5, pc}
   40acc:	tst	r1, #-2147483648	; 0x80000000
   40ad0:	lsl	r1, r1, #12
   40ad4:	mov	ip, #1048576	; 0x100000
   40ad8:	orr	r1, ip, r1, lsr #12
   40adc:	beq	40ae8 <flatcc_json_printer_clear@@Base+0x604>
   40ae0:	rsbs	r0, r0, #0
   40ae4:	rsc	r1, r1, #0
   40ae8:	tst	r3, #-2147483648	; 0x80000000
   40aec:	lsl	r3, r3, #12
   40af0:	orr	r3, ip, r3, lsr #12
   40af4:	beq	40b00 <flatcc_json_printer_clear@@Base+0x61c>
   40af8:	rsbs	r2, r2, #0
   40afc:	rsc	r3, r3, #0
   40b00:	teq	r4, r5
   40b04:	beq	40c68 <flatcc_json_printer_clear@@Base+0x784>
   40b08:	sub	r4, r4, #1
   40b0c:	rsbs	lr, r5, #32
   40b10:	blt	40b2c <flatcc_json_printer_clear@@Base+0x648>
   40b14:	lsl	ip, r2, lr
   40b18:	adds	r0, r0, r2, lsr r5
   40b1c:	adc	r1, r1, #0
   40b20:	adds	r0, r0, r3, lsl lr
   40b24:	adcs	r1, r1, r3, asr r5
   40b28:	b	40b48 <flatcc_json_printer_clear@@Base+0x664>
   40b2c:	sub	r5, r5, #32
   40b30:	add	lr, lr, #32
   40b34:	cmp	r2, #1
   40b38:	lsl	ip, r3, lr
   40b3c:	orrcs	ip, ip, #2
   40b40:	adds	r0, r0, r3, asr r5
   40b44:	adcs	r1, r1, r3, asr #31
   40b48:	and	r5, r1, #-2147483648	; 0x80000000
   40b4c:	bpl	40b5c <flatcc_json_printer_clear@@Base+0x678>
   40b50:	rsbs	ip, ip, #0
   40b54:	rscs	r0, r0, #0
   40b58:	rsc	r1, r1, #0
   40b5c:	cmp	r1, #1048576	; 0x100000
   40b60:	bcc	40ba0 <flatcc_json_printer_clear@@Base+0x6bc>
   40b64:	cmp	r1, #2097152	; 0x200000
   40b68:	bcc	40b88 <flatcc_json_printer_clear@@Base+0x6a4>
   40b6c:	lsrs	r1, r1, #1
   40b70:	rrxs	r0, r0
   40b74:	rrx	ip, ip
   40b78:	add	r4, r4, #1
   40b7c:	lsl	r2, r4, #21
   40b80:	cmn	r2, #4194304	; 0x400000
   40b84:	bcs	40ce0 <flatcc_json_printer_clear@@Base+0x7fc>
   40b88:	cmp	ip, #-2147483648	; 0x80000000
   40b8c:	lsrseq	ip, r0, #1
   40b90:	adcs	r0, r0, #0
   40b94:	adc	r1, r1, r4, lsl #20
   40b98:	orr	r1, r1, r5
   40b9c:	pop	{r4, r5, pc}
   40ba0:	lsls	ip, ip, #1
   40ba4:	adcs	r0, r0, r0
   40ba8:	adc	r1, r1, r1
   40bac:	tst	r1, #1048576	; 0x100000
   40bb0:	sub	r4, r4, #1
   40bb4:	bne	40b88 <flatcc_json_printer_clear@@Base+0x6a4>
   40bb8:	teq	r1, #0
   40bbc:	moveq	r1, r0
   40bc0:	moveq	r0, #0
   40bc4:	clz	r3, r1
   40bc8:	addeq	r3, r3, #32
   40bcc:	sub	r3, r3, #11
   40bd0:	subs	r2, r3, #32
   40bd4:	bge	40bf8 <flatcc_json_printer_clear@@Base+0x714>
   40bd8:	adds	r2, r2, #12
   40bdc:	ble	40bf4 <flatcc_json_printer_clear@@Base+0x710>
   40be0:	add	ip, r2, #20
   40be4:	rsb	r2, r2, #12
   40be8:	lsl	r0, r1, ip
   40bec:	lsr	r1, r1, r2
   40bf0:	b	40c08 <flatcc_json_printer_clear@@Base+0x724>
   40bf4:	add	r2, r2, #20
   40bf8:	rsble	ip, r2, #32
   40bfc:	lsl	r1, r1, r2
   40c00:	orrle	r1, r1, r0, lsr ip
   40c04:	lslle	r0, r0, r2
   40c08:	subs	r4, r4, r3
   40c0c:	addge	r1, r1, r4, lsl #20
   40c10:	orrge	r1, r1, r5
   40c14:	popge	{r4, r5, pc}
   40c18:	mvn	r4, r4
   40c1c:	subs	r4, r4, #31
   40c20:	bge	40c5c <flatcc_json_printer_clear@@Base+0x778>
   40c24:	adds	r4, r4, #12
   40c28:	bgt	40c44 <flatcc_json_printer_clear@@Base+0x760>
   40c2c:	add	r4, r4, #20
   40c30:	rsb	r2, r4, #32
   40c34:	lsr	r0, r0, r4
   40c38:	orr	r0, r0, r1, lsl r2
   40c3c:	orr	r1, r5, r1, lsr r4
   40c40:	pop	{r4, r5, pc}
   40c44:	rsb	r4, r4, #12
   40c48:	rsb	r2, r4, #32
   40c4c:	lsr	r0, r0, r2
   40c50:	orr	r0, r0, r1, lsl r4
   40c54:	mov	r1, r5
   40c58:	pop	{r4, r5, pc}
   40c5c:	lsr	r0, r1, r4
   40c60:	mov	r1, r5
   40c64:	pop	{r4, r5, pc}
   40c68:	teq	r4, #0
   40c6c:	eor	r3, r3, #1048576	; 0x100000
   40c70:	eoreq	r1, r1, #1048576	; 0x100000
   40c74:	addeq	r4, r4, #1
   40c78:	subne	r5, r5, #1
   40c7c:	b	40b08 <flatcc_json_printer_clear@@Base+0x624>
   40c80:	mvns	ip, r4, asr #21
   40c84:	mvnsne	ip, r5, asr #21
   40c88:	beq	40cf0 <flatcc_json_printer_clear@@Base+0x80c>
   40c8c:	teq	r4, r5
   40c90:	teqeq	r0, r2
   40c94:	beq	40ca8 <flatcc_json_printer_clear@@Base+0x7c4>
   40c98:	orrs	ip, r4, r0
   40c9c:	moveq	r1, r3
   40ca0:	moveq	r0, r2
   40ca4:	pop	{r4, r5, pc}
   40ca8:	teq	r1, r3
   40cac:	movne	r1, #0
   40cb0:	movne	r0, #0
   40cb4:	popne	{r4, r5, pc}
   40cb8:	lsrs	ip, r4, #21
   40cbc:	bne	40cd0 <flatcc_json_printer_clear@@Base+0x7ec>
   40cc0:	lsls	r0, r0, #1
   40cc4:	adcs	r1, r1, r1
   40cc8:	orrcs	r1, r1, #-2147483648	; 0x80000000
   40ccc:	pop	{r4, r5, pc}
   40cd0:	adds	r4, r4, #4194304	; 0x400000
   40cd4:	addcc	r1, r1, #1048576	; 0x100000
   40cd8:	popcc	{r4, r5, pc}
   40cdc:	and	r5, r1, #-2147483648	; 0x80000000
   40ce0:	orr	r1, r5, #2130706432	; 0x7f000000
   40ce4:	orr	r1, r1, #15728640	; 0xf00000
   40ce8:	mov	r0, #0
   40cec:	pop	{r4, r5, pc}
   40cf0:	mvns	ip, r4, asr #21
   40cf4:	movne	r1, r3
   40cf8:	movne	r0, r2
   40cfc:	mvnseq	ip, r5, asr #21
   40d00:	movne	r3, r1
   40d04:	movne	r2, r0
   40d08:	orrs	r4, r0, r1, lsl #12
   40d0c:	orrseq	r5, r2, r3, lsl #12
   40d10:	teqeq	r1, r3
   40d14:	orrne	r1, r1, #524288	; 0x80000
   40d18:	pop	{r4, r5, pc}
   40d1c:	teq	r0, #0
   40d20:	moveq	r1, #0
   40d24:	bxeq	lr
   40d28:	push	{r4, r5, lr}
   40d2c:	mov	r4, #1024	; 0x400
   40d30:	add	r4, r4, #50	; 0x32
   40d34:	mov	r5, #0
   40d38:	mov	r1, #0
   40d3c:	b	40bb8 <flatcc_json_printer_clear@@Base+0x6d4>
   40d40:	teq	r0, #0
   40d44:	moveq	r1, #0
   40d48:	bxeq	lr
   40d4c:	push	{r4, r5, lr}
   40d50:	mov	r4, #1024	; 0x400
   40d54:	add	r4, r4, #50	; 0x32
   40d58:	ands	r5, r0, #-2147483648	; 0x80000000
   40d5c:	rsbmi	r0, r0, #0
   40d60:	mov	r1, #0
   40d64:	b	40bb8 <flatcc_json_printer_clear@@Base+0x6d4>
   40d68:	lsls	r2, r0, #1
   40d6c:	asr	r1, r2, #3
   40d70:	rrx	r1, r1
   40d74:	lsl	r0, r2, #28
   40d78:	andsne	r3, r2, #-16777216	; 0xff000000
   40d7c:	teqne	r3, #-16777216	; 0xff000000
   40d80:	eorne	r1, r1, #939524096	; 0x38000000
   40d84:	bxne	lr
   40d88:	bics	r2, r2, #-16777216	; 0xff000000
   40d8c:	bxeq	lr
   40d90:	teq	r3, #-16777216	; 0xff000000
   40d94:	orreq	r1, r1, #524288	; 0x80000
   40d98:	bxeq	lr
   40d9c:	push	{r4, r5, lr}
   40da0:	mov	r4, #896	; 0x380
   40da4:	and	r5, r1, #-2147483648	; 0x80000000
   40da8:	bic	r1, r1, #-2147483648	; 0x80000000
   40dac:	b	40bb8 <flatcc_json_printer_clear@@Base+0x6d4>
   40db0:	orrs	r2, r0, r1
   40db4:	bxeq	lr
   40db8:	push	{r4, r5, lr}
   40dbc:	mov	r5, #0
   40dc0:	b	40de0 <flatcc_json_printer_clear@@Base+0x8fc>
   40dc4:	orrs	r2, r0, r1
   40dc8:	bxeq	lr
   40dcc:	push	{r4, r5, lr}
   40dd0:	ands	r5, r1, #-2147483648	; 0x80000000
   40dd4:	bpl	40de0 <flatcc_json_printer_clear@@Base+0x8fc>
   40dd8:	rsbs	r0, r0, #0
   40ddc:	rsc	r1, r1, #0
   40de0:	mov	r4, #1024	; 0x400
   40de4:	add	r4, r4, #50	; 0x32
   40de8:	lsrs	ip, r1, #22
   40dec:	beq	40b5c <flatcc_json_printer_clear@@Base+0x678>
   40df0:	mov	r2, #3
   40df4:	lsrs	ip, ip, #3
   40df8:	addne	r2, r2, #3
   40dfc:	lsrs	ip, ip, #3
   40e00:	addne	r2, r2, #3
   40e04:	add	r2, r2, ip, lsr #3
   40e08:	rsb	r3, r2, #32
   40e0c:	lsl	ip, r0, r3
   40e10:	lsr	r0, r0, r2
   40e14:	orr	r0, r0, r1, lsl r3
   40e18:	lsr	r1, r1, r2
   40e1c:	add	r4, r4, r2
   40e20:	b	40b5c <flatcc_json_printer_clear@@Base+0x678>
   40e24:	eor	r0, r0, #-2147483648	; 0x80000000
   40e28:	b	40e30 <flatcc_json_printer_clear@@Base+0x94c>
   40e2c:	eor	r1, r1, #-2147483648	; 0x80000000
   40e30:	lsls	r2, r0, #1
   40e34:	lslsne	r3, r1, #1
   40e38:	teqne	r2, r3
   40e3c:	mvnsne	ip, r2, asr #24
   40e40:	mvnsne	ip, r3, asr #24
   40e44:	beq	40f3c <flatcc_json_printer_clear@@Base+0xa58>
   40e48:	lsr	r2, r2, #24
   40e4c:	rsbs	r3, r2, r3, lsr #24
   40e50:	addgt	r2, r2, r3
   40e54:	eorgt	r1, r0, r1
   40e58:	eorgt	r0, r1, r0
   40e5c:	eorgt	r1, r0, r1
   40e60:	rsblt	r3, r3, #0
   40e64:	cmp	r3, #25
   40e68:	bxhi	lr
   40e6c:	tst	r0, #-2147483648	; 0x80000000
   40e70:	orr	r0, r0, #8388608	; 0x800000
   40e74:	bic	r0, r0, #-16777216	; 0xff000000
   40e78:	rsbne	r0, r0, #0
   40e7c:	tst	r1, #-2147483648	; 0x80000000
   40e80:	orr	r1, r1, #8388608	; 0x800000
   40e84:	bic	r1, r1, #-16777216	; 0xff000000
   40e88:	rsbne	r1, r1, #0
   40e8c:	teq	r2, r3
   40e90:	beq	40f24 <flatcc_json_printer_clear@@Base+0xa40>
   40e94:	sub	r2, r2, #1
   40e98:	adds	r0, r0, r1, asr r3
   40e9c:	rsb	r3, r3, #32
   40ea0:	lsl	r1, r1, r3
   40ea4:	and	r3, r0, #-2147483648	; 0x80000000
   40ea8:	bpl	40eb4 <flatcc_json_printer_clear@@Base+0x9d0>
   40eac:	rsbs	r1, r1, #0
   40eb0:	rsc	r0, r0, #0
   40eb4:	cmp	r0, #8388608	; 0x800000
   40eb8:	bcc	40eec <flatcc_json_printer_clear@@Base+0xa08>
   40ebc:	cmp	r0, #16777216	; 0x1000000
   40ec0:	bcc	40ed8 <flatcc_json_printer_clear@@Base+0x9f4>
   40ec4:	lsrs	r0, r0, #1
   40ec8:	rrx	r1, r1
   40ecc:	add	r2, r2, #1
   40ed0:	cmp	r2, #254	; 0xfe
   40ed4:	bcs	40f90 <flatcc_json_printer_clear@@Base+0xaac>
   40ed8:	cmp	r1, #-2147483648	; 0x80000000
   40edc:	adc	r0, r0, r2, lsl #23
   40ee0:	biceq	r0, r0, #1
   40ee4:	orr	r0, r0, r3
   40ee8:	bx	lr
   40eec:	lsls	r1, r1, #1
   40ef0:	adc	r0, r0, r0
   40ef4:	tst	r0, #8388608	; 0x800000
   40ef8:	sub	r2, r2, #1
   40efc:	bne	40ed8 <flatcc_json_printer_clear@@Base+0x9f4>
   40f00:	clz	ip, r0
   40f04:	sub	ip, ip, #8
   40f08:	subs	r2, r2, ip
   40f0c:	lsl	r0, r0, ip
   40f10:	addge	r0, r0, r2, lsl #23
   40f14:	rsblt	r2, r2, #0
   40f18:	orrge	r0, r0, r3
   40f1c:	orrlt	r0, r3, r0, lsr r2
   40f20:	bx	lr
   40f24:	teq	r2, #0
   40f28:	eor	r1, r1, #8388608	; 0x800000
   40f2c:	eoreq	r0, r0, #8388608	; 0x800000
   40f30:	addeq	r2, r2, #1
   40f34:	subne	r3, r3, #1
   40f38:	b	40e94 <flatcc_json_printer_clear@@Base+0x9b0>
   40f3c:	lsl	r3, r1, #1
   40f40:	mvns	ip, r2, asr #24
   40f44:	mvnsne	ip, r3, asr #24
   40f48:	beq	40f9c <flatcc_json_printer_clear@@Base+0xab8>
   40f4c:	teq	r2, r3
   40f50:	beq	40f60 <flatcc_json_printer_clear@@Base+0xa7c>
   40f54:	teq	r2, #0
   40f58:	moveq	r0, r1
   40f5c:	bx	lr
   40f60:	teq	r0, r1
   40f64:	movne	r0, #0
   40f68:	bxne	lr
   40f6c:	tst	r2, #-16777216	; 0xff000000
   40f70:	bne	40f80 <flatcc_json_printer_clear@@Base+0xa9c>
   40f74:	lsls	r0, r0, #1
   40f78:	orrcs	r0, r0, #-2147483648	; 0x80000000
   40f7c:	bx	lr
   40f80:	adds	r2, r2, #33554432	; 0x2000000
   40f84:	addcc	r0, r0, #8388608	; 0x800000
   40f88:	bxcc	lr
   40f8c:	and	r3, r0, #-2147483648	; 0x80000000
   40f90:	orr	r0, r3, #2130706432	; 0x7f000000
   40f94:	orr	r0, r0, #8388608	; 0x800000
   40f98:	bx	lr
   40f9c:	mvns	r2, r2, asr #24
   40fa0:	movne	r0, r1
   40fa4:	mvnseq	r3, r3, asr #24
   40fa8:	movne	r1, r0
   40fac:	lsls	r2, r0, #9
   40fb0:	lslseq	r3, r1, #9
   40fb4:	teqeq	r0, r1
   40fb8:	orrne	r0, r0, #4194304	; 0x400000
   40fbc:	bx	lr
   40fc0:	mov	r3, #0
   40fc4:	b	40fd0 <flatcc_json_printer_clear@@Base+0xaec>
   40fc8:	ands	r3, r0, #-2147483648	; 0x80000000
   40fcc:	rsbmi	r0, r0, #0
   40fd0:	movs	ip, r0
   40fd4:	bxeq	lr
   40fd8:	orr	r3, r3, #1258291200	; 0x4b000000
   40fdc:	mov	r1, r0
   40fe0:	mov	r0, #0
   40fe4:	b	41028 <flatcc_json_printer_clear@@Base+0xb44>
   40fe8:	orrs	r2, r0, r1
   40fec:	bxeq	lr
   40ff0:	mov	r3, #0
   40ff4:	b	41010 <flatcc_json_printer_clear@@Base+0xb2c>
   40ff8:	orrs	r2, r0, r1
   40ffc:	bxeq	lr
   41000:	ands	r3, r1, #-2147483648	; 0x80000000
   41004:	bpl	41010 <flatcc_json_printer_clear@@Base+0xb2c>
   41008:	rsbs	r0, r0, #0
   4100c:	rsc	r1, r1, #0
   41010:	movs	ip, r1
   41014:	moveq	ip, r0
   41018:	moveq	r1, r0
   4101c:	moveq	r0, #0
   41020:	orr	r3, r3, #1526726656	; 0x5b000000
   41024:	subeq	r3, r3, #268435456	; 0x10000000
   41028:	sub	r3, r3, #8388608	; 0x800000
   4102c:	clz	r2, ip
   41030:	subs	r2, r2, #8
   41034:	sub	r3, r3, r2, lsl #23
   41038:	blt	41058 <flatcc_json_printer_clear@@Base+0xb74>
   4103c:	add	r3, r3, r1, lsl r2
   41040:	lsl	ip, r0, r2
   41044:	rsb	r2, r2, #32
   41048:	cmp	ip, #-2147483648	; 0x80000000
   4104c:	adc	r0, r3, r0, lsr r2
   41050:	biceq	r0, r0, #1
   41054:	bx	lr
   41058:	add	r2, r2, #32
   4105c:	lsl	ip, r1, r2
   41060:	rsb	r2, r2, #32
   41064:	orrs	r0, r0, ip, lsl #1
   41068:	adc	r0, r3, r1, lsr r2
   4106c:	biceq	r0, r0, ip, lsr #31
   41070:	bx	lr
   41074:	cmp	r3, #0
   41078:	cmpeq	r2, #0
   4107c:	bne	41094 <flatcc_json_printer_clear@@Base+0xbb0>
   41080:	cmp	r1, #0
   41084:	cmpeq	r0, #0
   41088:	mvnne	r1, #0
   4108c:	mvnne	r0, #0
   41090:	b	410b0 <flatcc_json_printer_clear@@Base+0xbcc>
   41094:	sub	sp, sp, #8
   41098:	push	{sp, lr}
   4109c:	bl	410c0 <flatcc_json_printer_clear@@Base+0xbdc>
   410a0:	ldr	lr, [sp, #4]
   410a4:	add	sp, sp, #8
   410a8:	pop	{r2, r3}
   410ac:	bx	lr
   410b0:	push	{r1, lr}
   410b4:	mov	r0, #8
   410b8:	bl	14e30 <raise@plt>
   410bc:	pop	{r1, pc}
   410c0:	cmp	r1, r3
   410c4:	cmpeq	r0, r2
   410c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   410cc:	mov	r4, r0
   410d0:	movcc	r0, #0
   410d4:	mov	r5, r1
   410d8:	ldr	lr, [sp, #36]	; 0x24
   410dc:	movcc	r1, r0
   410e0:	bcc	411dc <flatcc_json_printer_clear@@Base+0xcf8>
   410e4:	cmp	r3, #0
   410e8:	clzeq	ip, r2
   410ec:	clzne	ip, r3
   410f0:	addeq	ip, ip, #32
   410f4:	cmp	r5, #0
   410f8:	clzeq	r1, r4
   410fc:	addeq	r1, r1, #32
   41100:	clzne	r1, r5
   41104:	sub	ip, ip, r1
   41108:	sub	sl, ip, #32
   4110c:	lsl	r9, r3, ip
   41110:	rsb	fp, ip, #32
   41114:	orr	r9, r9, r2, lsl sl
   41118:	orr	r9, r9, r2, lsr fp
   4111c:	lsl	r8, r2, ip
   41120:	cmp	r5, r9
   41124:	cmpeq	r4, r8
   41128:	movcc	r0, #0
   4112c:	movcc	r1, r0
   41130:	bcc	4114c <flatcc_json_printer_clear@@Base+0xc68>
   41134:	mov	r0, #1
   41138:	subs	r4, r4, r8
   4113c:	lsl	r1, r0, sl
   41140:	orr	r1, r1, r0, lsr fp
   41144:	lsl	r0, r0, ip
   41148:	sbc	r5, r5, r9
   4114c:	cmp	ip, #0
   41150:	beq	411dc <flatcc_json_printer_clear@@Base+0xcf8>
   41154:	lsr	r6, r8, #1
   41158:	orr	r6, r6, r9, lsl #31
   4115c:	lsr	r7, r9, #1
   41160:	mov	r2, ip
   41164:	b	41188 <flatcc_json_printer_clear@@Base+0xca4>
   41168:	subs	r3, r4, r6
   4116c:	sbc	r8, r5, r7
   41170:	adds	r3, r3, r3
   41174:	adc	r8, r8, r8
   41178:	adds	r4, r3, #1
   4117c:	adc	r5, r8, #0
   41180:	subs	r2, r2, #1
   41184:	beq	411a4 <flatcc_json_printer_clear@@Base+0xcc0>
   41188:	cmp	r5, r7
   4118c:	cmpeq	r4, r6
   41190:	bcs	41168 <flatcc_json_printer_clear@@Base+0xc84>
   41194:	adds	r4, r4, r4
   41198:	adc	r5, r5, r5
   4119c:	subs	r2, r2, #1
   411a0:	bne	41188 <flatcc_json_printer_clear@@Base+0xca4>
   411a4:	lsr	r3, r4, ip
   411a8:	orr	r3, r3, r5, lsl fp
   411ac:	lsr	r2, r5, ip
   411b0:	orr	r3, r3, r5, lsr sl
   411b4:	adds	r0, r0, r4
   411b8:	mov	r4, r3
   411bc:	lsl	r3, r2, ip
   411c0:	orr	r3, r3, r4, lsl sl
   411c4:	lsl	ip, r4, ip
   411c8:	orr	r3, r3, r4, lsr fp
   411cc:	adc	r1, r1, r5
   411d0:	subs	r0, r0, ip
   411d4:	mov	r5, r2
   411d8:	sbc	r1, r1, r3
   411dc:	cmp	lr, #0
   411e0:	strdne	r4, [lr]
   411e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000411e8 <__libc_csu_init@@Base>:
   411e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   411ec:	mov	r7, r0
   411f0:	ldr	r6, [pc, #72]	; 41240 <__libc_csu_init@@Base+0x58>
   411f4:	ldr	r5, [pc, #72]	; 41244 <__libc_csu_init@@Base+0x5c>
   411f8:	add	r6, pc, r6
   411fc:	add	r5, pc, r5
   41200:	sub	r6, r6, r5
   41204:	mov	r8, r1
   41208:	mov	r9, r2
   4120c:	bl	14e10 <raise@plt-0x20>
   41210:	asrs	r6, r6, #2
   41214:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   41218:	mov	r4, #0
   4121c:	add	r4, r4, #1
   41220:	ldr	r3, [r5], #4
   41224:	mov	r2, r9
   41228:	mov	r1, r8
   4122c:	mov	r0, r7
   41230:	blx	r3
   41234:	cmp	r6, r4
   41238:	bne	4121c <__libc_csu_init@@Base+0x34>
   4123c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   41240:	andeq	r6, r1, ip, lsl #26
   41244:	andeq	r6, r1, r4, lsl #26

00041248 <__libc_csu_fini@@Base>:
   41248:	bx	lr

Disassembly of section .fini:

0004124c <.fini>:
   4124c:	push	{r3, lr}
   41250:	pop	{r3, pc}
