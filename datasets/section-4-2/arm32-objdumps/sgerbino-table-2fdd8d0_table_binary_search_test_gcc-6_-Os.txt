
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012928 <.init>:
   12928:	push	{r3, lr}
   1292c:	bl	12be0 <_start@@Base+0x3c>
   12930:	pop	{r3, pc}

Disassembly of section .plt:

00012934 <raise@plt-0x14>:
   12934:	push	{lr}		; (str lr, [sp, #-4]!)
   12938:	ldr	lr, [pc, #4]	; 12944 <raise@plt-0x4>
   1293c:	add	lr, pc, lr
   12940:	ldr	pc, [lr, #8]!
   12944:			; <UNDEFINED> instruction: 0x000146bc

00012948 <raise@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #20, 20	; 0x14000
   12950:	ldr	pc, [ip, #1724]!	; 0x6bc

00012954 <strcmp@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #20, 20	; 0x14000
   1295c:	ldr	pc, [ip, #1716]!	; 0x6b4

00012960 <printf@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #20, 20	; 0x14000
   12968:	ldr	pc, [ip, #1708]!	; 0x6ac

0001296c <free@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #20, 20	; 0x14000
   12974:	ldr	pc, [ip, #1700]!	; 0x6a4

00012978 <realloc@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #20, 20	; 0x14000
   12980:	ldr	pc, [ip, #1692]!	; 0x69c

00012984 <strcpy@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #20, 20	; 0x14000
   1298c:	ldr	pc, [ip, #1684]!	; 0x694

00012990 <malloc@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #20, 20	; 0x14000
   12998:	ldr	pc, [ip, #1676]!	; 0x68c

0001299c <__libc_start_main@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #20, 20	; 0x14000
   129a4:	ldr	pc, [ip, #1668]!	; 0x684

000129a8 <__gmon_start__@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #20, 20	; 0x14000
   129b0:	ldr	pc, [ip, #1660]!	; 0x67c

000129b4 <strlen@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #20, 20	; 0x14000
   129bc:	ldr	pc, [ip, #1652]!	; 0x674

000129c0 <snprintf@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #20, 20	; 0x14000
   129c8:	ldr	pc, [ip, #1644]!	; 0x66c

000129cc <__isoc99_sscanf@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #20, 20	; 0x14000
   129d4:	ldr	pc, [ip, #1636]!	; 0x664

000129d8 <abort@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #20, 20	; 0x14000
   129e0:	ldr	pc, [ip, #1628]!	; 0x65c

Disassembly of section .text:

000129e4 <main@@Base>:
   129e4:	push	{r4, r5, r6, r7, r8, lr}
   129e8:	vpush	{d8}
   129ec:	vldr	s16, [pc, #396]	; 12b80 <main@@Base+0x19c>
   129f0:	vldr	s17, [pc, #396]	; 12b84 <main@@Base+0x1a0>
   129f4:	mov	r4, #0
   129f8:	sub	sp, sp, #64	; 0x40
   129fc:	add	r0, sp, #8
   12a00:	bl	12ccc <table_init@@Base>
   12a04:	mov	r2, #0
   12a08:	ldr	r1, [pc, #380]	; 12b8c <main@@Base+0x1a8>
   12a0c:	add	r0, sp, #8
   12a10:	bl	1364c <table_add_column@@Base>
   12a14:	mov	r2, #16
   12a18:	ldr	r1, [pc, #368]	; 12b90 <main@@Base+0x1ac>
   12a1c:	mov	r5, r4
   12a20:	mov	r8, #10
   12a24:	mov	r6, r0
   12a28:	add	r0, sp, #8
   12a2c:	bl	1364c <table_add_column@@Base>
   12a30:	mov	r7, r0
   12a34:	add	r0, sp, #8
   12a38:	bl	14970 <table_add_row@@Base>
   12a3c:	mov	r1, r4
   12a40:	mov	r3, r5
   12a44:	mov	r2, r6
   12a48:	add	r0, sp, #8
   12a4c:	bl	14e2c <table_set_int@@Base>
   12a50:	mov	r1, r4
   12a54:	vmov.f32	s0, s16
   12a58:	mov	r2, r7
   12a5c:	add	r0, sp, #8
   12a60:	add	r4, r4, #1
   12a64:	bl	1504c <table_set_float@@Base>
   12a68:	cmp	r4, #100	; 0x64
   12a6c:	bne	12b5c <main@@Base+0x178>
   12a70:	mov	r1, r6
   12a74:	mov	r3, #0
   12a78:	mov	r2, #4
   12a7c:	add	r0, sp, #8
   12a80:	bl	141c8 <table_sorted_find_int@@Base>
   12a84:	mov	r1, r6
   12a88:	mov	r3, #1
   12a8c:	mov	r2, #4
   12a90:	mov	r5, r0
   12a94:	add	r0, sp, #8
   12a98:	bl	141c8 <table_sorted_find_int@@Base>
   12a9c:	cmp	r5, #40	; 0x28
   12aa0:	moveq	r4, #0
   12aa4:	mov	r6, r0
   12aa8:	beq	12abc <main@@Base+0xd8>
   12aac:	mov	r1, r5
   12ab0:	ldr	r0, [pc, #220]	; 12b94 <main@@Base+0x1b0>
   12ab4:	bl	12960 <printf@plt>
   12ab8:	mvn	r4, #0
   12abc:	cmp	r6, #49	; 0x31
   12ac0:	beq	12ad4 <main@@Base+0xf0>
   12ac4:	mov	r1, r6
   12ac8:	ldr	r0, [pc, #200]	; 12b98 <main@@Base+0x1b4>
   12acc:	bl	12960 <printf@plt>
   12ad0:	mvn	r4, #0
   12ad4:	mov	r3, r5
   12ad8:	mov	r2, #0
   12adc:	vldr	s0, [pc, #164]	; 12b88 <main@@Base+0x1a4>
   12ae0:	mov	r1, r7
   12ae4:	str	r6, [sp]
   12ae8:	add	r0, sp, #8
   12aec:	bl	14708 <table_sorted_subset_find_float@@Base>
   12af0:	mov	r3, r5
   12af4:	str	r6, [sp]
   12af8:	mov	r2, #1
   12afc:	vldr	s0, [pc, #132]	; 12b88 <main@@Base+0x1a4>
   12b00:	mov	r1, r7
   12b04:	mov	r8, r0
   12b08:	add	r0, sp, #8
   12b0c:	bl	14708 <table_sorted_subset_find_float@@Base>
   12b10:	cmp	r8, #42	; 0x2a
   12b14:	mov	r5, r0
   12b18:	beq	12b2c <main@@Base+0x148>
   12b1c:	mov	r1, r8
   12b20:	ldr	r0, [pc, #116]	; 12b9c <main@@Base+0x1b8>
   12b24:	bl	12960 <printf@plt>
   12b28:	mvn	r4, #0
   12b2c:	cmp	r5, #43	; 0x2b
   12b30:	beq	12b44 <main@@Base+0x160>
   12b34:	mov	r1, r5
   12b38:	ldr	r0, [pc, #96]	; 12ba0 <main@@Base+0x1bc>
   12b3c:	bl	12960 <printf@plt>
   12b40:	mvn	r4, #0
   12b44:	add	r0, sp, #8
   12b48:	bl	12d2c <table_destroy@@Base>
   12b4c:	mov	r0, r4
   12b50:	add	sp, sp, #64	; 0x40
   12b54:	vpop	{d8}
   12b58:	pop	{r4, r5, r6, r7, r8, pc}
   12b5c:	mov	r1, r8
   12b60:	mov	r0, r4
   12b64:	bl	15e6c <table_cell_nullify@@Base+0x458>
   12b68:	cmp	r1, #0
   12b6c:	vldreq	s16, [pc, #12]	; 12b80 <main@@Base+0x19c>
   12b70:	addeq	r5, r5, #1
   12b74:	tst	r4, #1
   12b78:	vaddeq.f32	s16, s16, s17
   12b7c:	b	12a34 <main@@Base+0x50>
   12b80:	andeq	r0, r0, r0
   12b84:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12b88:	svccc	0x00000000
   12b8c:	andeq	r5, r1, ip, lsl #30
   12b90:	andeq	r5, r1, lr, lsl #30
   12b94:	andeq	r5, r1, r0, lsl pc
   12b98:	andeq	r5, r1, r8, asr #30
   12b9c:	andeq	r5, r1, pc, ror pc
   12ba0:			; <UNDEFINED> instruction: 0x00015fbd

00012ba4 <_start@@Base>:
   12ba4:	mov	fp, #0
   12ba8:	mov	lr, #0
   12bac:	pop	{r1}		; (ldr r1, [sp], #4)
   12bb0:	mov	r2, sp
   12bb4:	push	{r2}		; (str r2, [sp, #-4]!)
   12bb8:	push	{r0}		; (str r0, [sp, #-4]!)
   12bbc:	ldr	ip, [pc, #16]	; 12bd4 <_start@@Base+0x30>
   12bc0:	push	{ip}		; (str ip, [sp, #-4]!)
   12bc4:	ldr	r0, [pc, #12]	; 12bd8 <_start@@Base+0x34>
   12bc8:	ldr	r3, [pc, #12]	; 12bdc <_start@@Base+0x38>
   12bcc:	bl	1299c <__libc_start_main@plt>
   12bd0:	bl	129d8 <abort@plt>
   12bd4:	strdeq	r5, [r1], -ip
   12bd8:	andeq	r2, r1, r4, ror #19
   12bdc:	muleq	r1, ip, lr
   12be0:	ldr	r3, [pc, #20]	; 12bfc <_start@@Base+0x58>
   12be4:	ldr	r2, [pc, #20]	; 12c00 <_start@@Base+0x5c>
   12be8:	add	r3, pc, r3
   12bec:	ldr	r2, [r3, r2]
   12bf0:	cmp	r2, #0
   12bf4:	bxeq	lr
   12bf8:	b	129a8 <__gmon_start__@plt>
   12bfc:	andeq	r4, r1, r0, lsl r4
   12c00:	andeq	r0, r0, r0, asr #32
   12c04:	ldr	r3, [pc, #28]	; 12c28 <_start@@Base+0x84>
   12c08:	ldr	r0, [pc, #28]	; 12c2c <_start@@Base+0x88>
   12c0c:	sub	r3, r3, r0
   12c10:	cmp	r3, #6
   12c14:	bxls	lr
   12c18:	ldr	r3, [pc, #16]	; 12c30 <_start@@Base+0x8c>
   12c1c:	cmp	r3, #0
   12c20:	bxeq	lr
   12c24:	bx	r3
   12c28:	andeq	r7, r2, pc, asr #32
   12c2c:	andeq	r7, r2, ip, asr #32
   12c30:	andeq	r0, r0, r0
   12c34:	ldr	r1, [pc, #36]	; 12c60 <_start@@Base+0xbc>
   12c38:	ldr	r0, [pc, #36]	; 12c64 <_start@@Base+0xc0>
   12c3c:	sub	r1, r1, r0
   12c40:	asr	r1, r1, #2
   12c44:	add	r1, r1, r1, lsr #31
   12c48:	asrs	r1, r1, #1
   12c4c:	bxeq	lr
   12c50:	ldr	r3, [pc, #16]	; 12c68 <_start@@Base+0xc4>
   12c54:	cmp	r3, #0
   12c58:	bxeq	lr
   12c5c:	bx	r3
   12c60:	andeq	r7, r2, ip, asr #32
   12c64:	andeq	r7, r2, ip, asr #32
   12c68:	andeq	r0, r0, r0
   12c6c:	push	{r4, lr}
   12c70:	ldr	r4, [pc, #24]	; 12c90 <_start@@Base+0xec>
   12c74:	ldrb	r3, [r4]
   12c78:	cmp	r3, #0
   12c7c:	popne	{r4, pc}
   12c80:	bl	12c04 <_start@@Base+0x60>
   12c84:	mov	r3, #1
   12c88:	strb	r3, [r4]
   12c8c:	pop	{r4, pc}
   12c90:	andeq	r7, r2, ip, asr #32
   12c94:	ldr	r0, [pc, #40]	; 12cc4 <_start@@Base+0x120>
   12c98:	ldr	r3, [r0]
   12c9c:	cmp	r3, #0
   12ca0:	bne	12ca8 <_start@@Base+0x104>
   12ca4:	b	12c34 <_start@@Base+0x90>
   12ca8:	ldr	r3, [pc, #24]	; 12cc8 <_start@@Base+0x124>
   12cac:	cmp	r3, #0
   12cb0:	beq	12ca4 <_start@@Base+0x100>
   12cb4:	push	{r4, lr}
   12cb8:	blx	r3
   12cbc:	pop	{r4, lr}
   12cc0:	b	12c34 <_start@@Base+0x90>
   12cc4:	andeq	r6, r2, r4, lsl pc
   12cc8:	andeq	r0, r0, r0

00012ccc <table_init@@Base>:
   12ccc:	mov	r3, #0
   12cd0:	mov	r2, #10
   12cd4:	mov	r1, #20
   12cd8:	str	r3, [r0]
   12cdc:	str	r3, [r0, #4]
   12ce0:	str	r3, [r0, #12]
   12ce4:	str	r2, [r0, #8]
   12ce8:	str	r3, [r0, #16]
   12cec:	str	r3, [r0, #20]
   12cf0:	str	r3, [r0, #28]
   12cf4:	str	r1, [r0, #24]
   12cf8:	str	r3, [r0, #36]	; 0x24
   12cfc:	str	r3, [r0, #40]	; 0x28
   12d00:	str	r3, [r0, #44]	; 0x2c
   12d04:	str	r3, [r0, #32]
   12d08:	str	r3, [r0, #52]	; 0x34
   12d0c:	str	r2, [r0, #48]	; 0x30
   12d10:	bx	lr

00012d14 <table_new@@Base>:
   12d14:	push	{r4, lr}
   12d18:	mov	r0, #56	; 0x38
   12d1c:	bl	12990 <malloc@plt>
   12d20:	mov	r4, r0
   12d24:	bl	12ccc <table_init@@Base>
   12d28:	pop	{r4, pc}

00012d2c <table_destroy@@Base>:
   12d2c:	push	{r4, r5, r6, lr}
   12d30:	subs	r4, r0, #0
   12d34:	popeq	{r4, r5, r6, pc}
   12d38:	mvn	r2, #0
   12d3c:	mov	r3, #64	; 0x40
   12d40:	mov	r1, r2
   12d44:	bl	13508 <table_notify@@Base>
   12d48:	mov	r0, r4
   12d4c:	bl	14968 <table_get_row_length@@Base>
   12d50:	mov	r5, #0
   12d54:	mov	r6, r0
   12d58:	cmp	r6, r5
   12d5c:	bgt	12dcc <table_destroy@@Base+0xa0>
   12d60:	ldr	r0, [r4, #16]
   12d64:	cmp	r0, #0
   12d68:	beq	12d70 <table_destroy@@Base+0x44>
   12d6c:	bl	1296c <free@plt>
   12d70:	mov	r0, r4
   12d74:	bl	135e0 <table_get_column_length@@Base>
   12d78:	mov	r5, #0
   12d7c:	mov	r6, r0
   12d80:	cmp	r6, r5
   12d84:	bgt	12de0 <table_destroy@@Base+0xb4>
   12d88:	ldr	r0, [r4]
   12d8c:	cmp	r0, #0
   12d90:	beq	12d98 <table_destroy@@Base+0x6c>
   12d94:	bl	1296c <free@plt>
   12d98:	ldr	r0, [r4, #36]	; 0x24
   12d9c:	cmp	r0, #0
   12da0:	beq	12da8 <table_destroy@@Base+0x7c>
   12da4:	bl	1296c <free@plt>
   12da8:	ldr	r0, [r4, #40]	; 0x28
   12dac:	cmp	r0, #0
   12db0:	beq	12db8 <table_destroy@@Base+0x8c>
   12db4:	bl	1296c <free@plt>
   12db8:	ldr	r0, [r4, #44]	; 0x2c
   12dbc:	cmp	r0, #0
   12dc0:	popeq	{r4, r5, r6, pc}
   12dc4:	pop	{r4, r5, r6, lr}
   12dc8:	b	1296c <free@plt>
   12dcc:	mov	r1, r5
   12dd0:	mov	r0, r4
   12dd4:	bl	14918 <table_row_destroy@@Base>
   12dd8:	add	r5, r5, #1
   12ddc:	b	12d58 <table_destroy@@Base+0x2c>
   12de0:	mov	r1, r5
   12de4:	mov	r0, r4
   12de8:	bl	135c4 <table_column_destroy@@Base>
   12dec:	add	r5, r5, #1
   12df0:	b	12d80 <table_destroy@@Base+0x54>

00012df4 <table_delete@@Base>:
   12df4:	push	{r4, lr}
   12df8:	mov	r4, r0
   12dfc:	bl	12d2c <table_destroy@@Base>
   12e00:	mov	r0, r4
   12e04:	pop	{r4, lr}
   12e08:	b	1296c <free@plt>

00012e0c <table_dupe@@Base>:
   12e0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12e10:	sub	sp, sp, #20
   12e14:	mov	r6, r0
   12e18:	bl	14968 <table_get_row_length@@Base>
   12e1c:	mov	r4, #0
   12e20:	mov	r9, r0
   12e24:	mov	r0, r6
   12e28:	bl	135e0 <table_get_column_length@@Base>
   12e2c:	mov	r8, r0
   12e30:	bl	12d14 <table_new@@Base>
   12e34:	mov	r7, r0
   12e38:	cmp	r4, r8
   12e3c:	blt	12e58 <table_dupe@@Base+0x4c>
   12e40:	mov	r5, #0
   12e44:	cmp	r5, r9
   12e48:	mov	r0, r7
   12e4c:	blt	12e8c <table_dupe@@Base+0x80>
   12e50:	add	sp, sp, #20
   12e54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12e58:	mov	r1, r4
   12e5c:	mov	r0, r6
   12e60:	bl	138b4 <table_get_column_name@@Base>
   12e64:	mov	r1, r4
   12e68:	add	r4, r4, #1
   12e6c:	mov	r5, r0
   12e70:	mov	r0, r6
   12e74:	bl	13638 <table_get_column_data_type@@Base>
   12e78:	mov	r1, r5
   12e7c:	mov	r2, r0
   12e80:	mov	r0, r7
   12e84:	bl	1364c <table_add_column@@Base>
   12e88:	b	12e38 <table_dupe@@Base+0x2c>
   12e8c:	bl	14970 <table_add_row@@Base>
   12e90:	mov	r4, #0
   12e94:	cmp	r4, r8
   12e98:	addge	r5, r5, #1
   12e9c:	bge	12e44 <table_dupe@@Base+0x38>
   12ea0:	mov	r1, r4
   12ea4:	mov	r0, r6
   12ea8:	bl	13638 <table_get_column_data_type@@Base>
   12eac:	cmp	r0, #23
   12eb0:	ldrls	pc, [pc, r0, lsl #2]
   12eb4:	b	12f3c <table_dupe@@Base+0x130>
   12eb8:	andeq	r2, r1, r8, lsl pc
   12ebc:	andeq	r2, r1, r4, asr #30
   12ec0:	andeq	r2, r1, ip, ror #30
   12ec4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12ec8:			; <UNDEFINED> instruction: 0x00012fbc
   12ecc:	andeq	r2, r1, r4, ror #31
   12ed0:	andeq	r3, r1, ip
   12ed4:	andeq	r3, r1, r4, lsr r0
   12ed8:	andeq	r3, r1, ip, asr r0
   12edc:	andeq	r3, r1, r4, lsl #1
   12ee0:	andeq	r3, r1, ip, lsr #1
   12ee4:	ldrdeq	r3, [r1], -r4
   12ee8:	strdeq	r3, [r1], -ip
   12eec:	andeq	r3, r1, r4, lsr #2
   12ef0:	andeq	r3, r1, ip, asr #2
   12ef4:	andeq	r3, r1, r4, ror r1
   12ef8:	andeq	r3, r1, r4, asr #3
   12efc:	andeq	r3, r1, r8, ror #3
   12f00:	andeq	r3, r1, ip, lsl #4
   12f04:	andeq	r3, r1, r8, asr r2
   12f08:	andeq	r3, r1, r0, lsl #5
   12f0c:	muleq	r1, ip, r1
   12f10:	andeq	r3, r1, r0, lsr r2
   12f14:	andeq	r3, r1, r8, lsr #5
   12f18:	mov	r2, r4
   12f1c:	mov	r1, r5
   12f20:	mov	r0, r6
   12f24:	bl	14820 <table_get_int@@Base>
   12f28:	mov	r2, r4
   12f2c:	mov	r1, r5
   12f30:	mov	r3, r0
   12f34:	mov	r0, r7
   12f38:	bl	14e2c <table_set_int@@Base>
   12f3c:	add	r4, r4, #1
   12f40:	b	12e94 <table_dupe@@Base+0x88>
   12f44:	mov	r2, r4
   12f48:	mov	r1, r5
   12f4c:	mov	r0, r6
   12f50:	bl	14834 <table_get_uint@@Base>
   12f54:	mov	r2, r4
   12f58:	mov	r1, r5
   12f5c:	mov	r3, r0
   12f60:	mov	r0, r7
   12f64:	bl	14e50 <table_set_uint@@Base>
   12f68:	b	12f3c <table_dupe@@Base+0x130>
   12f6c:	mov	r2, r4
   12f70:	mov	r1, r5
   12f74:	mov	r0, r6
   12f78:	bl	14800 <table_get_int8@@Base>
   12f7c:	mov	r2, r4
   12f80:	mov	r1, r5
   12f84:	mov	r3, r0
   12f88:	mov	r0, r7
   12f8c:	bl	14e74 <table_set_int8@@Base>
   12f90:	b	12f3c <table_dupe@@Base+0x130>
   12f94:	mov	r2, r4
   12f98:	mov	r1, r5
   12f9c:	mov	r0, r6
   12fa0:	bl	148ec <table_get_uint8@@Base>
   12fa4:	mov	r2, r4
   12fa8:	mov	r1, r5
   12fac:	mov	r3, r0
   12fb0:	mov	r0, r7
   12fb4:	bl	14e98 <table_set_uint8@@Base>
   12fb8:	b	12f3c <table_dupe@@Base+0x130>
   12fbc:	mov	r2, r4
   12fc0:	mov	r1, r5
   12fc4:	mov	r0, r6
   12fc8:	bl	14848 <table_get_int16@@Base>
   12fcc:	mov	r2, r4
   12fd0:	mov	r1, r5
   12fd4:	mov	r3, r0
   12fd8:	mov	r0, r7
   12fdc:	bl	14ebc <table_set_int16@@Base>
   12fe0:	b	12f3c <table_dupe@@Base+0x130>
   12fe4:	mov	r2, r4
   12fe8:	mov	r1, r5
   12fec:	mov	r0, r6
   12ff0:	bl	1485c <table_get_uint16@@Base>
   12ff4:	mov	r2, r4
   12ff8:	mov	r1, r5
   12ffc:	mov	r3, r0
   13000:	mov	r0, r7
   13004:	bl	14ee0 <table_set_uint16@@Base>
   13008:	b	12f3c <table_dupe@@Base+0x130>
   1300c:	mov	r2, r4
   13010:	mov	r1, r5
   13014:	mov	r0, r6
   13018:	bl	14810 <table_get_int32@@Base>
   1301c:	mov	r2, r4
   13020:	mov	r1, r5
   13024:	mov	r3, r0
   13028:	mov	r0, r7
   1302c:	bl	14f04 <table_set_int32@@Base>
   13030:	b	12f3c <table_dupe@@Base+0x130>
   13034:	mov	r2, r4
   13038:	mov	r1, r5
   1303c:	mov	r0, r6
   13040:	bl	14824 <table_get_uint32@@Base>
   13044:	mov	r2, r4
   13048:	mov	r1, r5
   1304c:	mov	r3, r0
   13050:	mov	r0, r7
   13054:	bl	14f28 <table_set_uint32@@Base>
   13058:	b	12f3c <table_dupe@@Base+0x130>
   1305c:	mov	r2, r4
   13060:	mov	r1, r5
   13064:	mov	r0, r6
   13068:	bl	14890 <table_get_int64@@Base>
   1306c:	mov	r2, r4
   13070:	strd	r0, [sp]
   13074:	mov	r1, r5
   13078:	mov	r0, r7
   1307c:	bl	14f4c <table_set_int64@@Base>
   13080:	b	12f3c <table_dupe@@Base+0x130>
   13084:	mov	r2, r4
   13088:	mov	r1, r5
   1308c:	mov	r0, r6
   13090:	bl	148a4 <table_get_uint64@@Base>
   13094:	mov	r2, r4
   13098:	strd	r0, [sp]
   1309c:	mov	r1, r5
   130a0:	mov	r0, r7
   130a4:	bl	14f68 <table_set_uint64@@Base>
   130a8:	b	12f3c <table_dupe@@Base+0x130>
   130ac:	mov	r2, r4
   130b0:	mov	r1, r5
   130b4:	mov	r0, r6
   130b8:	bl	14838 <table_get_short@@Base>
   130bc:	mov	r2, r4
   130c0:	mov	r1, r5
   130c4:	mov	r3, r0
   130c8:	mov	r0, r7
   130cc:	bl	14f84 <table_set_short@@Base>
   130d0:	b	12f3c <table_dupe@@Base+0x130>
   130d4:	mov	r2, r4
   130d8:	mov	r1, r5
   130dc:	mov	r0, r6
   130e0:	bl	1484c <table_get_ushort@@Base>
   130e4:	mov	r2, r4
   130e8:	mov	r1, r5
   130ec:	mov	r3, r0
   130f0:	mov	r0, r7
   130f4:	bl	14fa8 <table_set_ushort@@Base>
   130f8:	b	12f3c <table_dupe@@Base+0x130>
   130fc:	mov	r2, r4
   13100:	mov	r1, r5
   13104:	mov	r0, r6
   13108:	bl	14860 <table_get_long@@Base>
   1310c:	mov	r2, r4
   13110:	mov	r1, r5
   13114:	mov	r3, r0
   13118:	mov	r0, r7
   1311c:	bl	14fcc <table_set_long@@Base>
   13120:	b	12f3c <table_dupe@@Base+0x130>
   13124:	mov	r2, r4
   13128:	mov	r1, r5
   1312c:	mov	r0, r6
   13130:	bl	14870 <table_get_ulong@@Base>
   13134:	mov	r2, r4
   13138:	mov	r1, r5
   1313c:	mov	r3, r0
   13140:	mov	r0, r7
   13144:	bl	14ff0 <table_set_ulong@@Base>
   13148:	b	12f3c <table_dupe@@Base+0x130>
   1314c:	mov	r2, r4
   13150:	mov	r1, r5
   13154:	mov	r0, r6
   13158:	bl	14880 <table_get_llong@@Base>
   1315c:	mov	r2, r4
   13160:	strd	r0, [sp]
   13164:	mov	r1, r5
   13168:	mov	r0, r7
   1316c:	bl	15014 <table_set_llong@@Base>
   13170:	b	12f3c <table_dupe@@Base+0x130>
   13174:	mov	r2, r4
   13178:	mov	r1, r5
   1317c:	mov	r0, r6
   13180:	bl	14894 <table_get_ullong@@Base>
   13184:	mov	r2, r4
   13188:	strd	r0, [sp]
   1318c:	mov	r1, r5
   13190:	mov	r0, r7
   13194:	bl	15030 <table_set_ullong@@Base>
   13198:	b	12f3c <table_dupe@@Base+0x130>
   1319c:	mov	r2, r4
   131a0:	mov	r1, r5
   131a4:	mov	r0, r6
   131a8:	bl	148f0 <table_get_string@@Base>
   131ac:	mov	r2, r4
   131b0:	mov	r1, r5
   131b4:	mov	r3, r0
   131b8:	mov	r0, r7
   131bc:	bl	150ac <table_set_string@@Base>
   131c0:	b	12f3c <table_dupe@@Base+0x130>
   131c4:	mov	r2, r4
   131c8:	mov	r1, r5
   131cc:	mov	r0, r6
   131d0:	bl	148a8 <table_get_float@@Base>
   131d4:	mov	r2, r4
   131d8:	mov	r1, r5
   131dc:	mov	r0, r7
   131e0:	bl	1504c <table_set_float@@Base>
   131e4:	b	12f3c <table_dupe@@Base+0x130>
   131e8:	mov	r2, r4
   131ec:	mov	r1, r5
   131f0:	mov	r0, r6
   131f4:	bl	148b8 <table_get_double@@Base>
   131f8:	mov	r2, r4
   131fc:	mov	r1, r5
   13200:	mov	r0, r7
   13204:	bl	1506c <table_set_double@@Base>
   13208:	b	12f3c <table_dupe@@Base+0x130>
   1320c:	mov	r2, r4
   13210:	mov	r1, r5
   13214:	mov	r0, r6
   13218:	bl	148c8 <table_get_ldouble@@Base>
   1321c:	mov	r2, r4
   13220:	mov	r1, r5
   13224:	mov	r0, r7
   13228:	bl	1508c <table_set_ldouble@@Base>
   1322c:	b	12f3c <table_dupe@@Base+0x130>
   13230:	mov	r2, r4
   13234:	mov	r1, r5
   13238:	mov	r0, r6
   1323c:	bl	147f0 <table_get_bool@@Base>
   13240:	mov	r2, r4
   13244:	mov	r1, r5
   13248:	mov	r3, r0
   1324c:	mov	r0, r7
   13250:	bl	14e08 <table_set_bool@@Base>
   13254:	b	12f3c <table_dupe@@Base+0x130>
   13258:	mov	r2, r4
   1325c:	mov	r1, r5
   13260:	mov	r0, r6
   13264:	bl	148e8 <table_get_char@@Base>
   13268:	mov	r2, r4
   1326c:	mov	r1, r5
   13270:	mov	r3, r0
   13274:	mov	r0, r7
   13278:	bl	150c4 <table_set_char@@Base>
   1327c:	b	12f3c <table_dupe@@Base+0x130>
   13280:	mov	r2, r4
   13284:	mov	r1, r5
   13288:	mov	r0, r6
   1328c:	bl	148d8 <table_get_uchar@@Base>
   13290:	mov	r2, r4
   13294:	mov	r1, r5
   13298:	mov	r3, r0
   1329c:	mov	r0, r7
   132a0:	bl	150e8 <table_set_uchar@@Base>
   132a4:	b	12f3c <table_dupe@@Base+0x130>
   132a8:	mov	r2, r4
   132ac:	mov	r1, r5
   132b0:	mov	r0, r6
   132b4:	bl	148f4 <table_get_ptr@@Base>
   132b8:	add	r3, sp, #12
   132bc:	mov	r2, r4
   132c0:	mov	r1, r5
   132c4:	str	r0, [sp, #12]
   132c8:	mov	r0, r7
   132cc:	bl	1510c <table_set_ptr@@Base>
   132d0:	b	12f3c <table_dupe@@Base+0x130>

000132d4 <table_get_major_version@@Base>:
   132d4:	mov	r0, #0
   132d8:	bx	lr

000132dc <table_get_minor_version@@Base>:
   132dc:	mov	r0, #0
   132e0:	bx	lr

000132e4 <table_get_patch_version@@Base>:
   132e4:	mov	r0, #0
   132e8:	bx	lr

000132ec <table_get_version@@Base>:
   132ec:	ldr	r0, [pc]	; 132f4 <table_get_version@@Base+0x8>
   132f0:	bx	lr
   132f4:	andeq	r5, r1, sp, lsl #30

000132f8 <table_get_callback_length@@Base>:
   132f8:	ldr	r0, [r0, #32]
   132fc:	bx	lr

00013300 <table_register_callback@@Base>:
   13300:	push	{r4, r5, r6, r7, r8, lr}
   13304:	mov	r4, r0
   13308:	ldr	r0, [r0, #32]
   1330c:	mov	ip, #0
   13310:	cmp	ip, r0
   13314:	blt	133a8 <table_register_callback@@Base+0xa8>
   13318:	ldr	r5, [r4, #48]	; 0x30
   1331c:	mov	r8, r1
   13320:	mov	r1, r5
   13324:	mov	r6, r3
   13328:	mov	r7, r2
   1332c:	bl	15c2c <table_cell_nullify@@Base+0x218>
   13330:	cmp	r1, #0
   13334:	bne	1337c <table_register_callback@@Base+0x7c>
   13338:	ldr	r1, [r4, #52]	; 0x34
   1333c:	ldr	r0, [r4, #36]	; 0x24
   13340:	add	r1, r5, r1
   13344:	str	r1, [r4, #52]	; 0x34
   13348:	lsl	r1, r1, #2
   1334c:	bl	12978 <realloc@plt>
   13350:	ldr	r1, [r4, #52]	; 0x34
   13354:	lsl	r1, r1, #2
   13358:	str	r0, [r4, #36]	; 0x24
   1335c:	ldr	r0, [r4, #40]	; 0x28
   13360:	bl	12978 <realloc@plt>
   13364:	ldr	r1, [r4, #52]	; 0x34
   13368:	lsl	r1, r1, #2
   1336c:	str	r0, [r4, #40]	; 0x28
   13370:	ldr	r0, [r4, #44]	; 0x2c
   13374:	bl	12978 <realloc@plt>
   13378:	str	r0, [r4, #44]	; 0x2c
   1337c:	ldr	r3, [r4, #32]
   13380:	ldr	r2, [r4, #36]	; 0x24
   13384:	str	r8, [r2, r3, lsl #2]
   13388:	ldr	r2, [r4, #40]	; 0x28
   1338c:	str	r7, [r2, r3, lsl #2]
   13390:	ldr	r2, [r4, #44]	; 0x2c
   13394:	str	r6, [r2, r3, lsl #2]
   13398:	ldr	r3, [r4, #32]
   1339c:	add	r3, r3, #1
   133a0:	str	r3, [r4, #32]
   133a4:	pop	{r4, r5, r6, r7, r8, pc}
   133a8:	ldr	r5, [r4, #36]	; 0x24
   133ac:	lsl	lr, ip, #2
   133b0:	ldr	r5, [r5, ip, lsl #2]
   133b4:	cmp	r1, r5
   133b8:	bne	133cc <table_register_callback@@Base+0xcc>
   133bc:	ldr	r5, [r4, #40]	; 0x28
   133c0:	ldr	r5, [r5, ip, lsl #2]
   133c4:	cmp	r2, r5
   133c8:	beq	133d4 <table_register_callback@@Base+0xd4>
   133cc:	add	ip, ip, #1
   133d0:	b	13310 <table_register_callback@@Base+0x10>
   133d4:	cmp	ip, #0
   133d8:	ble	13318 <table_register_callback@@Base+0x18>
   133dc:	ldr	r1, [r4, #44]	; 0x2c
   133e0:	ldr	r2, [r1, lr]
   133e4:	orr	r3, r2, r3
   133e8:	str	r3, [r1, lr]
   133ec:	pop	{r4, r5, r6, r7, r8, pc}

000133f0 <table_unregister_callback@@Base>:
   133f0:	push	{r4, r5, r6, lr}
   133f4:	mov	r4, r0
   133f8:	ldr	r0, [r0, #32]
   133fc:	mov	r3, #0
   13400:	cmp	r3, r0
   13404:	blt	1340c <table_unregister_callback@@Base+0x1c>
   13408:	pop	{r4, r5, r6, pc}
   1340c:	ldr	lr, [r4, #36]	; 0x24
   13410:	lsl	ip, r3, #2
   13414:	ldr	lr, [lr, r3, lsl #2]
   13418:	cmp	r1, lr
   1341c:	bne	13430 <table_unregister_callback@@Base+0x40>
   13420:	ldr	lr, [r4, #40]	; 0x28
   13424:	ldr	lr, [lr, r3, lsl #2]
   13428:	cmp	r2, lr
   1342c:	beq	13464 <table_unregister_callback@@Base+0x74>
   13430:	add	r3, r3, #1
   13434:	b	13400 <table_unregister_callback@@Base+0x10>
   13438:	ldr	r1, [r4, #36]	; 0x24
   1343c:	add	r3, r3, #1
   13440:	ldr	r0, [r1, r2]
   13444:	str	r0, [r1, ip]
   13448:	ldr	r1, [r4, #40]	; 0x28
   1344c:	ldr	r0, [r1, r2]
   13450:	str	r0, [r1, ip]
   13454:	ldr	r1, [r4, #44]	; 0x2c
   13458:	ldr	r0, [r1, r2]
   1345c:	str	r0, [r1, ip]
   13460:	mov	ip, r2
   13464:	ldr	r0, [r4, #32]
   13468:	add	r2, ip, #4
   1346c:	sub	r0, r0, #1
   13470:	cmp	r3, r0
   13474:	blt	13438 <table_unregister_callback@@Base+0x48>
   13478:	ldr	r6, [r4, #48]	; 0x30
   1347c:	str	r0, [r4, #32]
   13480:	mov	r1, r6
   13484:	bl	15c2c <table_cell_nullify@@Base+0x218>
   13488:	cmp	r1, #0
   1348c:	popne	{r4, r5, r6, pc}
   13490:	ldr	r5, [r4, #52]	; 0x34
   13494:	sub	r5, r5, r6
   13498:	cmp	r5, #0
   1349c:	str	r5, [r4, #52]	; 0x34
   134a0:	beq	134e0 <table_unregister_callback@@Base+0xf0>
   134a4:	lsl	r1, r5, #2
   134a8:	ldr	r0, [r4, #36]	; 0x24
   134ac:	bl	12978 <realloc@plt>
   134b0:	ldr	r1, [r4, #52]	; 0x34
   134b4:	lsl	r1, r1, #2
   134b8:	str	r0, [r4, #36]	; 0x24
   134bc:	ldr	r0, [r4, #40]	; 0x28
   134c0:	bl	12978 <realloc@plt>
   134c4:	ldr	r1, [r4, #52]	; 0x34
   134c8:	lsl	r1, r1, #2
   134cc:	str	r0, [r4, #40]	; 0x28
   134d0:	ldr	r0, [r4, #44]	; 0x2c
   134d4:	bl	12978 <realloc@plt>
   134d8:	str	r0, [r4, #44]	; 0x2c
   134dc:	pop	{r4, r5, r6, pc}
   134e0:	ldr	r0, [r4, #36]	; 0x24
   134e4:	bl	1296c <free@plt>
   134e8:	ldr	r0, [r4, #40]	; 0x28
   134ec:	bl	1296c <free@plt>
   134f0:	ldr	r0, [r4, #44]	; 0x2c
   134f4:	bl	1296c <free@plt>
   134f8:	str	r5, [r4, #36]	; 0x24
   134fc:	str	r5, [r4, #40]	; 0x28
   13500:	str	r5, [r4, #44]	; 0x2c
   13504:	pop	{r4, r5, r6, pc}

00013508 <table_notify@@Base>:
   13508:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1350c:	mov	r5, r0
   13510:	mov	r7, r1
   13514:	mov	r8, r2
   13518:	mov	r6, r3
   1351c:	mov	r4, #0
   13520:	ldr	r3, [r5, #32]
   13524:	cmp	r4, r3
   13528:	blt	13534 <table_notify@@Base+0x2c>
   1352c:	add	sp, sp, #12
   13530:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13534:	ldr	r3, [r5, #44]	; 0x2c
   13538:	ldr	r3, [r3, r4, lsl #2]
   1353c:	tst	r6, r3
   13540:	beq	1356c <table_notify@@Base+0x64>
   13544:	ldr	r2, [r5, #40]	; 0x28
   13548:	ldr	r3, [r5, #36]	; 0x24
   1354c:	mov	r1, r7
   13550:	ldr	r2, [r2, r4, lsl #2]
   13554:	mov	r0, r5
   13558:	str	r2, [sp]
   1355c:	mov	r2, r8
   13560:	ldr	r9, [r3, r4, lsl #2]
   13564:	mov	r3, r6
   13568:	blx	r9
   1356c:	add	r4, r4, #1
   13570:	b	13520 <table_notify@@Base+0x18>

00013574 <table_column_init@@Base>:
   13574:	push	{r4, r5, r6, r7, r8, lr}
   13578:	mov	r4, #12
   1357c:	ldr	r7, [r0]
   13580:	mov	r0, r2
   13584:	mul	r4, r4, r1
   13588:	mov	r6, r2
   1358c:	mov	r8, r3
   13590:	bl	129b4 <strlen@plt>
   13594:	add	r5, r7, r4
   13598:	add	r0, r0, #1
   1359c:	bl	12990 <malloc@plt>
   135a0:	cmp	r0, #0
   135a4:	str	r0, [r7, r4]
   135a8:	beq	135b4 <table_column_init@@Base+0x40>
   135ac:	mov	r1, r6
   135b0:	bl	12984 <strcpy@plt>
   135b4:	ldr	r3, [sp, #24]
   135b8:	str	r8, [r5, #4]
   135bc:	str	r3, [r5, #8]
   135c0:	pop	{r4, r5, r6, r7, r8, pc}

000135c4 <table_column_destroy@@Base>:
   135c4:	mov	r3, #12
   135c8:	ldr	r2, [r0]
   135cc:	mul	r1, r3, r1
   135d0:	ldr	r0, [r2, r1]
   135d4:	cmp	r0, #0
   135d8:	bxeq	lr
   135dc:	b	1296c <free@plt>

000135e0 <table_get_column_length@@Base>:
   135e0:	ldr	r0, [r0, #4]
   135e4:	bx	lr

000135e8 <table_get_column@@Base>:
   135e8:	push	{r4, r5, r6, r7, r8, lr}
   135ec:	mov	r5, r0
   135f0:	ldr	r6, [r0, #4]
   135f4:	mov	r7, r1
   135f8:	mov	r4, #0
   135fc:	mov	r8, #12
   13600:	cmp	r4, r6
   13604:	blt	13614 <table_get_column@@Base+0x2c>
   13608:	mvneq	r4, #0
   1360c:	mov	r0, r4
   13610:	pop	{r4, r5, r6, r7, r8, pc}
   13614:	mul	r3, r8, r4
   13618:	ldr	r2, [r5]
   1361c:	mov	r1, r7
   13620:	ldr	r0, [r2, r3]
   13624:	bl	12954 <strcmp@plt>
   13628:	cmp	r0, #0
   1362c:	beq	1360c <table_get_column@@Base+0x24>
   13630:	add	r4, r4, #1
   13634:	b	13600 <table_get_column@@Base+0x18>

00013638 <table_get_column_data_type@@Base>:
   13638:	ldr	r2, [r0]
   1363c:	mov	r3, #12
   13640:	mla	r1, r3, r1, r2
   13644:	ldr	r0, [r1, #4]
   13648:	bx	lr

0001364c <table_add_column@@Base>:
   1364c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13650:	mov	r4, r0
   13654:	ldr	r6, [r0, #8]
   13658:	mov	r8, r1
   1365c:	ldr	r0, [r0, #4]
   13660:	mov	r1, r6
   13664:	mov	r7, r2
   13668:	bl	15c2c <table_cell_nullify@@Base+0x218>
   1366c:	subs	r5, r1, #0
   13670:	beq	136d8 <table_add_column@@Base+0x8c>
   13674:	mov	r0, r4
   13678:	bl	14968 <table_get_row_length@@Base>
   1367c:	ldr	r6, [r4, #4]
   13680:	mov	r5, #0
   13684:	mov	r9, r0
   13688:	mov	r0, r7
   1368c:	bl	13d18 <table_get_default_compare_function_for_data_type@@Base>
   13690:	mov	r3, r7
   13694:	mov	r2, r8
   13698:	mov	r1, r6
   1369c:	str	r0, [sp]
   136a0:	mov	r0, r4
   136a4:	bl	13574 <table_column_init@@Base>
   136a8:	cmp	r9, r5
   136ac:	bgt	13738 <table_add_column@@Base+0xec>
   136b0:	mov	r0, r4
   136b4:	mov	r3, #8
   136b8:	ldr	r2, [r4, #4]
   136bc:	mvn	r1, #0
   136c0:	bl	13508 <table_notify@@Base>
   136c4:	ldr	r0, [r4, #4]
   136c8:	add	r3, r0, #1
   136cc:	str	r3, [r4, #4]
   136d0:	add	sp, sp, #12
   136d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   136d8:	ldr	r1, [r4, #12]
   136dc:	ldr	r0, [r4]
   136e0:	add	r6, r6, r1
   136e4:	mov	r1, #12
   136e8:	str	r6, [r4, #12]
   136ec:	mul	r1, r1, r6
   136f0:	bl	12978 <realloc@plt>
   136f4:	str	r0, [r4]
   136f8:	mov	r0, r4
   136fc:	bl	14968 <table_get_row_length@@Base>
   13700:	mov	r9, r0
   13704:	cmp	r9, r5
   13708:	ble	13674 <table_add_column@@Base+0x28>
   1370c:	mov	r1, r5
   13710:	mov	r0, r4
   13714:	bl	14b0c <table_get_row_ptr@@Base>
   13718:	ldr	r1, [r4, #12]
   1371c:	add	r5, r5, #1
   13720:	lsl	r1, r1, #2
   13724:	mov	r6, r0
   13728:	ldr	r0, [r0]
   1372c:	bl	12978 <realloc@plt>
   13730:	str	r0, [r6]
   13734:	b	13704 <table_add_column@@Base+0xb8>
   13738:	mov	r1, r5
   1373c:	mov	r2, r6
   13740:	mov	r0, r4
   13744:	bl	159bc <table_cell_init@@Base>
   13748:	add	r5, r5, #1
   1374c:	b	136a8 <table_add_column@@Base+0x5c>

00013750 <table_remove_column@@Base>:
   13750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13754:	mov	r5, r1
   13758:	mov	r4, r0
   1375c:	bl	135c4 <table_column_destroy@@Base>
   13760:	mov	r3, #12
   13764:	ldr	r7, [r4, #4]
   13768:	mul	r3, r3, r5
   1376c:	mov	r1, r5
   13770:	sub	r7, r7, #1
   13774:	cmp	r1, r7
   13778:	add	lr, r3, #12
   1377c:	blt	1380c <table_remove_column@@Base+0xbc>
   13780:	mov	r0, r4
   13784:	bl	14968 <table_get_row_length@@Base>
   13788:	lsl	r9, r5, #2
   1378c:	mov	r6, #0
   13790:	mov	r8, r0
   13794:	cmp	r8, r6
   13798:	bgt	1383c <table_remove_column@@Base+0xec>
   1379c:	ldr	r0, [r4, #4]
   137a0:	ldr	r7, [r4, #8]
   137a4:	sub	r0, r0, #1
   137a8:	str	r0, [r4, #4]
   137ac:	mov	r1, r7
   137b0:	bl	15c2c <table_cell_nullify@@Base+0x218>
   137b4:	subs	r6, r1, #0
   137b8:	bne	137f0 <table_remove_column@@Base+0xa0>
   137bc:	ldr	r1, [r4, #12]
   137c0:	mov	r3, #12
   137c4:	sub	r1, r1, r7
   137c8:	str	r1, [r4, #12]
   137cc:	ldr	r0, [r4]
   137d0:	mul	r1, r3, r1
   137d4:	bl	12978 <realloc@plt>
   137d8:	str	r0, [r4]
   137dc:	mov	r0, r4
   137e0:	bl	14968 <table_get_row_length@@Base>
   137e4:	mov	r8, r0
   137e8:	cmp	r8, r6
   137ec:	bgt	13888 <table_remove_column@@Base+0x138>
   137f0:	mov	r0, r4
   137f4:	mov	r3, #16
   137f8:	mov	r2, r5
   137fc:	mvn	r1, #0
   13800:	bl	13508 <table_notify@@Base>
   13804:	mov	r0, #0
   13808:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1380c:	ldr	ip, [r4]
   13810:	add	r1, r1, #1
   13814:	add	r0, ip, lr
   13818:	add	r6, ip, r3
   1381c:	ldr	r2, [r0]
   13820:	str	r2, [ip, r3]
   13824:	ldr	r2, [r0, #4]
   13828:	mov	r3, lr
   1382c:	str	r2, [r6, #4]
   13830:	ldr	r2, [r0, #8]
   13834:	str	r2, [r6, #8]
   13838:	b	13774 <table_remove_column@@Base+0x24>
   1383c:	mov	r2, r5
   13840:	mov	r1, r6
   13844:	mov	r0, r4
   13848:	bl	159d0 <table_cell_destroy@@Base>
   1384c:	mov	r1, r6
   13850:	mov	r0, r4
   13854:	bl	14b0c <table_get_row_ptr@@Base>
   13858:	mov	r2, r9
   1385c:	mov	r3, r5
   13860:	cmp	r7, r3
   13864:	add	r1, r2, #4
   13868:	addle	r6, r6, #1
   1386c:	ble	13794 <table_remove_column@@Base+0x44>
   13870:	ldr	ip, [r0]
   13874:	add	r3, r3, #1
   13878:	ldr	lr, [ip, r1]
   1387c:	str	lr, [ip, r2]
   13880:	mov	r2, r1
   13884:	b	13860 <table_remove_column@@Base+0x110>
   13888:	mov	r1, r6
   1388c:	mov	r0, r4
   13890:	bl	14b0c <table_get_row_ptr@@Base>
   13894:	ldr	r1, [r4, #12]
   13898:	add	r6, r6, #1
   1389c:	lsl	r1, r1, #2
   138a0:	mov	r7, r0
   138a4:	ldr	r0, [r0]
   138a8:	bl	12978 <realloc@plt>
   138ac:	str	r0, [r7]
   138b0:	b	137e8 <table_remove_column@@Base+0x98>

000138b4 <table_get_column_name@@Base>:
   138b4:	mov	r3, #12
   138b8:	ldr	r2, [r0]
   138bc:	mul	r1, r3, r1
   138c0:	ldr	r0, [r2, r1]
   138c4:	bx	lr

000138c8 <table_get_col_ptr@@Base>:
   138c8:	ldr	r3, [r0]
   138cc:	mov	r0, #12
   138d0:	mla	r0, r0, r1, r3
   138d4:	bx	lr

000138d8 <table_get_column_compare_function@@Base>:
   138d8:	ldr	r2, [r0]
   138dc:	mov	r3, #12
   138e0:	mla	r1, r3, r1, r2
   138e4:	ldr	r0, [r1, #8]
   138e8:	bx	lr

000138ec <table_set_column_compare_function@@Base>:
   138ec:	ldr	r0, [r0]
   138f0:	mov	r3, #12
   138f4:	mla	r1, r3, r1, r0
   138f8:	str	r2, [r1, #8]
   138fc:	bx	lr

00013900 <table_compare_bool@@Base>:
   13900:	cmp	r0, #0
   13904:	bne	13914 <table_compare_bool@@Base+0x14>
   13908:	adds	r0, r1, #0
   1390c:	mvnne	r0, #0
   13910:	bx	lr
   13914:	cmp	r1, #0
   13918:	beq	13938 <table_compare_bool@@Base+0x38>
   1391c:	ldrb	r2, [r0]
   13920:	ldrb	r3, [r1]
   13924:	cmp	r2, r3
   13928:	bgt	13938 <table_compare_bool@@Base+0x38>
   1392c:	mvnlt	r0, #0
   13930:	movge	r0, #0
   13934:	bx	lr
   13938:	mov	r0, #1
   1393c:	bx	lr

00013940 <table_compare_int8@@Base>:
   13940:	cmp	r0, #0
   13944:	bne	13954 <table_compare_int8@@Base+0x14>
   13948:	adds	r0, r1, #0
   1394c:	mvnne	r0, #0
   13950:	bx	lr
   13954:	cmp	r1, #0
   13958:	beq	13978 <table_compare_int8@@Base+0x38>
   1395c:	ldrsb	r2, [r0]
   13960:	ldrsb	r3, [r1]
   13964:	cmp	r2, r3
   13968:	bgt	13978 <table_compare_int8@@Base+0x38>
   1396c:	mvnlt	r0, #0
   13970:	movge	r0, #0
   13974:	bx	lr
   13978:	mov	r0, #1
   1397c:	bx	lr

00013980 <table_compare_int32@@Base>:
   13980:	cmp	r0, #0
   13984:	bne	13994 <table_compare_int32@@Base+0x14>
   13988:	adds	r0, r1, #0
   1398c:	mvnne	r0, #0
   13990:	bx	lr
   13994:	cmp	r1, #0
   13998:	beq	139b8 <table_compare_int32@@Base+0x38>
   1399c:	ldr	r2, [r0]
   139a0:	ldr	r3, [r1]
   139a4:	cmp	r2, r3
   139a8:	bgt	139b8 <table_compare_int32@@Base+0x38>
   139ac:	mvnlt	r0, #0
   139b0:	movge	r0, #0
   139b4:	bx	lr
   139b8:	mov	r0, #1
   139bc:	bx	lr

000139c0 <table_compare_int@@Base>:
   139c0:	b	13980 <table_compare_int32@@Base>

000139c4 <table_compare_uint32@@Base>:
   139c4:	cmp	r0, #0
   139c8:	bne	139d8 <table_compare_uint32@@Base+0x14>
   139cc:	adds	r0, r1, #0
   139d0:	mvnne	r0, #0
   139d4:	bx	lr
   139d8:	cmp	r1, #0
   139dc:	beq	139fc <table_compare_uint32@@Base+0x38>
   139e0:	ldr	r2, [r0]
   139e4:	ldr	r3, [r1]
   139e8:	cmp	r2, r3
   139ec:	bhi	139fc <table_compare_uint32@@Base+0x38>
   139f0:	mvncc	r0, #0
   139f4:	movcs	r0, #0
   139f8:	bx	lr
   139fc:	mov	r0, #1
   13a00:	bx	lr

00013a04 <table_compare_uint@@Base>:
   13a04:	b	139c4 <table_compare_uint32@@Base>

00013a08 <table_compare_uint64@@Base>:
   13a08:	cmp	r0, #0
   13a0c:	bne	13a1c <table_compare_uint64@@Base+0x14>
   13a10:	adds	r0, r1, #0
   13a14:	mvnne	r0, #0
   13a18:	bx	lr
   13a1c:	cmp	r1, #0
   13a20:	beq	13a48 <table_compare_uint64@@Base+0x40>
   13a24:	ldrd	r2, [r1]
   13a28:	push	{r4, r5, lr}
   13a2c:	ldrd	r4, [r0]
   13a30:	cmp	r5, r3
   13a34:	cmpeq	r4, r2
   13a38:	bhi	13a50 <table_compare_uint64@@Base+0x48>
   13a3c:	mvncc	r0, #0
   13a40:	movcs	r0, #0
   13a44:	pop	{r4, r5, pc}
   13a48:	mov	r0, #1
   13a4c:	bx	lr
   13a50:	mov	r0, #1
   13a54:	pop	{r4, r5, pc}

00013a58 <table_compare_short@@Base>:
   13a58:	cmp	r0, #0
   13a5c:	bne	13a6c <table_compare_short@@Base+0x14>
   13a60:	adds	r0, r1, #0
   13a64:	mvnne	r0, #0
   13a68:	bx	lr
   13a6c:	cmp	r1, #0
   13a70:	beq	13a90 <table_compare_short@@Base+0x38>
   13a74:	ldrsh	r2, [r0]
   13a78:	ldrsh	r3, [r1]
   13a7c:	cmp	r2, r3
   13a80:	bgt	13a90 <table_compare_short@@Base+0x38>
   13a84:	mvnlt	r0, #0
   13a88:	movge	r0, #0
   13a8c:	bx	lr
   13a90:	mov	r0, #1
   13a94:	bx	lr

00013a98 <table_compare_int16@@Base>:
   13a98:	b	13a58 <table_compare_short@@Base>

00013a9c <table_compare_ushort@@Base>:
   13a9c:	cmp	r0, #0
   13aa0:	bne	13ab0 <table_compare_ushort@@Base+0x14>
   13aa4:	adds	r0, r1, #0
   13aa8:	mvnne	r0, #0
   13aac:	bx	lr
   13ab0:	cmp	r1, #0
   13ab4:	beq	13ad4 <table_compare_ushort@@Base+0x38>
   13ab8:	ldrh	r2, [r0]
   13abc:	ldrh	r3, [r1]
   13ac0:	cmp	r2, r3
   13ac4:	bhi	13ad4 <table_compare_ushort@@Base+0x38>
   13ac8:	mvncc	r0, #0
   13acc:	movcs	r0, #0
   13ad0:	bx	lr
   13ad4:	mov	r0, #1
   13ad8:	bx	lr

00013adc <table_compare_uint16@@Base>:
   13adc:	b	13a9c <table_compare_ushort@@Base>

00013ae0 <table_compare_long@@Base>:
   13ae0:	cmp	r0, #0
   13ae4:	bne	13af4 <table_compare_long@@Base+0x14>
   13ae8:	adds	r0, r1, #0
   13aec:	mvnne	r0, #0
   13af0:	bx	lr
   13af4:	cmp	r1, #0
   13af8:	beq	13b18 <table_compare_long@@Base+0x38>
   13afc:	ldr	r2, [r0]
   13b00:	ldr	r3, [r1]
   13b04:	cmp	r2, r3
   13b08:	bgt	13b18 <table_compare_long@@Base+0x38>
   13b0c:	mvnlt	r0, #0
   13b10:	movge	r0, #0
   13b14:	bx	lr
   13b18:	mov	r0, #1
   13b1c:	bx	lr

00013b20 <table_compare_llong@@Base>:
   13b20:	cmp	r0, #0
   13b24:	bne	13b34 <table_compare_llong@@Base+0x14>
   13b28:	adds	r0, r1, #0
   13b2c:	mvnne	r0, #0
   13b30:	bx	lr
   13b34:	cmp	r1, #0
   13b38:	beq	13b68 <table_compare_llong@@Base+0x48>
   13b3c:	ldrd	r2, [r1]
   13b40:	push	{r4, r5, lr}
   13b44:	ldrd	r4, [r0]
   13b48:	cmp	r2, r4
   13b4c:	sbcs	r1, r3, r5
   13b50:	blt	13b70 <table_compare_llong@@Base+0x50>
   13b54:	cmp	r4, r2
   13b58:	sbcs	r3, r5, r3
   13b5c:	mvnlt	r0, #0
   13b60:	movge	r0, #0
   13b64:	pop	{r4, r5, pc}
   13b68:	mov	r0, #1
   13b6c:	bx	lr
   13b70:	mov	r0, #1
   13b74:	pop	{r4, r5, pc}

00013b78 <table_compare_int64@@Base>:
   13b78:	b	13b20 <table_compare_llong@@Base>

00013b7c <table_compare_ullong@@Base>:
   13b7c:	cmp	r0, #0
   13b80:	bne	13b90 <table_compare_ullong@@Base+0x14>
   13b84:	adds	r0, r1, #0
   13b88:	mvnne	r0, #0
   13b8c:	bx	lr
   13b90:	cmp	r1, #0
   13b94:	beq	13bb4 <table_compare_ullong@@Base+0x38>
   13b98:	ldr	r2, [r0]
   13b9c:	ldr	r3, [r1]
   13ba0:	cmp	r2, r3
   13ba4:	bhi	13bb4 <table_compare_ullong@@Base+0x38>
   13ba8:	mvncc	r0, #0
   13bac:	movcs	r0, #0
   13bb0:	bx	lr
   13bb4:	mov	r0, #1
   13bb8:	bx	lr

00013bbc <table_compare_ulong@@Base>:
   13bbc:	b	13b7c <table_compare_ullong@@Base>

00013bc0 <table_compare_float@@Base>:
   13bc0:	cmp	r0, #0
   13bc4:	bne	13bd4 <table_compare_float@@Base+0x14>
   13bc8:	adds	r0, r1, #0
   13bcc:	mvnne	r0, #0
   13bd0:	bx	lr
   13bd4:	cmp	r1, #0
   13bd8:	beq	13bfc <table_compare_float@@Base+0x3c>
   13bdc:	vldr	s14, [r0]
   13be0:	vldr	s15, [r1]
   13be4:	vcmpe.f32	s14, s15
   13be8:	vmrs	APSR_nzcv, fpscr
   13bec:	bgt	13bfc <table_compare_float@@Base+0x3c>
   13bf0:	mvnmi	r0, #0
   13bf4:	movpl	r0, #0
   13bf8:	bx	lr
   13bfc:	mov	r0, #1
   13c00:	bx	lr

00013c04 <table_compare_double@@Base>:
   13c04:	cmp	r0, #0
   13c08:	bne	13c18 <table_compare_double@@Base+0x14>
   13c0c:	adds	r0, r1, #0
   13c10:	mvnne	r0, #0
   13c14:	bx	lr
   13c18:	cmp	r1, #0
   13c1c:	beq	13c40 <table_compare_double@@Base+0x3c>
   13c20:	vldr	d6, [r0]
   13c24:	vldr	d7, [r1]
   13c28:	vcmpe.f64	d6, d7
   13c2c:	vmrs	APSR_nzcv, fpscr
   13c30:	bgt	13c40 <table_compare_double@@Base+0x3c>
   13c34:	mvnmi	r0, #0
   13c38:	movpl	r0, #0
   13c3c:	bx	lr
   13c40:	mov	r0, #1
   13c44:	bx	lr

00013c48 <table_compare_ldouble@@Base>:
   13c48:	cmp	r0, #0
   13c4c:	bne	13c5c <table_compare_ldouble@@Base+0x14>
   13c50:	adds	r0, r1, #0
   13c54:	mvnne	r0, #0
   13c58:	bx	lr
   13c5c:	cmp	r1, #0
   13c60:	beq	13c84 <table_compare_ldouble@@Base+0x3c>
   13c64:	vldr	d6, [r0]
   13c68:	vldr	d7, [r1]
   13c6c:	vcmpe.f64	d6, d7
   13c70:	vmrs	APSR_nzcv, fpscr
   13c74:	bgt	13c84 <table_compare_ldouble@@Base+0x3c>
   13c78:	mvnmi	r0, #0
   13c7c:	movpl	r0, #0
   13c80:	bx	lr
   13c84:	mov	r0, #1
   13c88:	bx	lr

00013c8c <table_compare_uchar@@Base>:
   13c8c:	cmp	r0, #0
   13c90:	bne	13ca0 <table_compare_uchar@@Base+0x14>
   13c94:	adds	r0, r1, #0
   13c98:	mvnne	r0, #0
   13c9c:	bx	lr
   13ca0:	cmp	r1, #0
   13ca4:	beq	13cc4 <table_compare_uchar@@Base+0x38>
   13ca8:	ldrb	r2, [r0]
   13cac:	ldrb	r3, [r1]
   13cb0:	cmp	r2, r3
   13cb4:	bhi	13cc4 <table_compare_uchar@@Base+0x38>
   13cb8:	mvncc	r0, #0
   13cbc:	movcs	r0, #0
   13cc0:	bx	lr
   13cc4:	mov	r0, #1
   13cc8:	bx	lr

00013ccc <table_compare_char@@Base>:
   13ccc:	b	13c8c <table_compare_uchar@@Base>

00013cd0 <table_compare_uint8@@Base>:
   13cd0:	b	13c8c <table_compare_uchar@@Base>

00013cd4 <table_compare_ptr@@Base>:
   13cd4:	cmp	r0, r1
   13cd8:	bhi	13ce8 <table_compare_ptr@@Base+0x14>
   13cdc:	mvncc	r0, #0
   13ce0:	movcs	r0, #0
   13ce4:	bx	lr
   13ce8:	mov	r0, #1
   13cec:	bx	lr

00013cf0 <table_compare_string@@Base>:
   13cf0:	cmp	r0, #0
   13cf4:	bne	13d04 <table_compare_string@@Base+0x14>
   13cf8:	adds	r0, r1, #0
   13cfc:	mvnne	r0, #0
   13d00:	bx	lr
   13d04:	cmp	r1, #0
   13d08:	beq	13d10 <table_compare_string@@Base+0x20>
   13d0c:	b	12954 <strcmp@plt>
   13d10:	mov	r0, #1
   13d14:	bx	lr

00013d18 <table_get_default_compare_function_for_data_type@@Base>:
   13d18:	cmp	r0, #23
   13d1c:	ldrls	r3, [pc, #8]	; 13d2c <table_get_default_compare_function_for_data_type@@Base+0x14>
   13d20:	ldrls	r0, [r3, r0, lsl #2]
   13d24:	movhi	r0, #0
   13d28:	bx	lr
   13d2c:	strdeq	r5, [r1], -ip

00013d30 <table_subset_find@@Base>:
   13d30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d34:	mov	r4, r3
   13d38:	ldr	r5, [sp, #32]
   13d3c:	ldr	sl, [sp, #36]	; 0x24
   13d40:	mov	r7, r0
   13d44:	mov	r8, r1
   13d48:	mov	r9, r2
   13d4c:	bl	138d8 <table_get_column_compare_function@@Base>
   13d50:	cmp	r4, #0
   13d54:	movne	r4, sl
   13d58:	moveq	r4, r5
   13d5c:	mov	r6, r0
   13d60:	beq	13dc0 <table_subset_find@@Base+0x90>
   13d64:	cmp	r4, r5
   13d68:	blt	13dc8 <table_subset_find@@Base+0x98>
   13d6c:	mov	r2, r8
   13d70:	mov	r1, r4
   13d74:	mov	r0, r7
   13d78:	bl	147e0 <table_get@@Base>
   13d7c:	mov	r1, r0
   13d80:	mov	r0, r9
   13d84:	blx	r6
   13d88:	cmp	r0, #0
   13d8c:	beq	13dcc <table_subset_find@@Base+0x9c>
   13d90:	sub	r4, r4, #1
   13d94:	b	13d64 <table_subset_find@@Base+0x34>
   13d98:	mov	r2, r8
   13d9c:	mov	r1, r4
   13da0:	mov	r0, r7
   13da4:	bl	147e0 <table_get@@Base>
   13da8:	mov	r1, r0
   13dac:	mov	r0, r9
   13db0:	blx	r6
   13db4:	cmp	r0, #0
   13db8:	beq	13dcc <table_subset_find@@Base+0x9c>
   13dbc:	add	r4, r4, #1
   13dc0:	cmp	r4, sl
   13dc4:	ble	13d98 <table_subset_find@@Base+0x68>
   13dc8:	mvn	r4, #0
   13dcc:	mov	r0, r4
   13dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013dd4 <table_find@@Base>:
   13dd4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13dd8:	mov	r7, r3
   13ddc:	mov	r4, r0
   13de0:	mov	r5, r1
   13de4:	mov	r6, r2
   13de8:	bl	14968 <table_get_row_length@@Base>
   13dec:	mov	r3, #0
   13df0:	str	r3, [sp]
   13df4:	mov	r2, r6
   13df8:	mov	r3, r7
   13dfc:	mov	r1, r5
   13e00:	sub	r0, r0, #1
   13e04:	str	r0, [sp, #4]
   13e08:	mov	r0, r4
   13e0c:	bl	13d30 <table_subset_find@@Base>
   13e10:	add	sp, sp, #12
   13e14:	pop	{r4, r5, r6, r7, pc}

00013e18 <table_find_bool@@Base>:
   13e18:	push	{r0, r1, r2, lr}
   13e1c:	add	ip, sp, #8
   13e20:	strb	r2, [ip, #-1]!
   13e24:	mov	r2, ip
   13e28:	bl	13dd4 <table_find@@Base>
   13e2c:	add	sp, sp, #12
   13e30:	pop	{pc}		; (ldr pc, [sp], #4)

00013e34 <table_find_int@@Base>:
   13e34:	push	{r0, r1, r2, lr}
   13e38:	add	ip, sp, #8
   13e3c:	str	r2, [ip, #-4]!
   13e40:	mov	r2, ip
   13e44:	bl	13dd4 <table_find@@Base>
   13e48:	add	sp, sp, #12
   13e4c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e50 <table_find_uint@@Base>:
   13e50:	push	{r0, r1, r2, lr}
   13e54:	add	ip, sp, #8
   13e58:	str	r2, [ip, #-4]!
   13e5c:	mov	r2, ip
   13e60:	bl	13dd4 <table_find@@Base>
   13e64:	add	sp, sp, #12
   13e68:	pop	{pc}		; (ldr pc, [sp], #4)

00013e6c <table_find_int8@@Base>:
   13e6c:	push	{r0, r1, r2, lr}
   13e70:	add	ip, sp, #8
   13e74:	strb	r2, [ip, #-1]!
   13e78:	mov	r2, ip
   13e7c:	bl	13dd4 <table_find@@Base>
   13e80:	add	sp, sp, #12
   13e84:	pop	{pc}		; (ldr pc, [sp], #4)

00013e88 <table_find_uint8@@Base>:
   13e88:	push	{r0, r1, r2, lr}
   13e8c:	add	ip, sp, #8
   13e90:	strb	r2, [ip, #-1]!
   13e94:	mov	r2, ip
   13e98:	bl	13dd4 <table_find@@Base>
   13e9c:	add	sp, sp, #12
   13ea0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ea4 <table_find_int16@@Base>:
   13ea4:	push	{r0, r1, r2, lr}
   13ea8:	add	ip, sp, #8
   13eac:	strh	r2, [ip, #-2]!
   13eb0:	mov	r2, ip
   13eb4:	bl	13dd4 <table_find@@Base>
   13eb8:	add	sp, sp, #12
   13ebc:	pop	{pc}		; (ldr pc, [sp], #4)

00013ec0 <table_find_uint16@@Base>:
   13ec0:	push	{r0, r1, r2, lr}
   13ec4:	add	ip, sp, #8
   13ec8:	strh	r2, [ip, #-2]!
   13ecc:	mov	r2, ip
   13ed0:	bl	13dd4 <table_find@@Base>
   13ed4:	add	sp, sp, #12
   13ed8:	pop	{pc}		; (ldr pc, [sp], #4)

00013edc <table_find_int32@@Base>:
   13edc:	push	{r0, r1, r2, lr}
   13ee0:	add	ip, sp, #8
   13ee4:	str	r2, [ip, #-4]!
   13ee8:	mov	r2, ip
   13eec:	bl	13dd4 <table_find@@Base>
   13ef0:	add	sp, sp, #12
   13ef4:	pop	{pc}		; (ldr pc, [sp], #4)

00013ef8 <table_find_uint32@@Base>:
   13ef8:	push	{r0, r1, r2, lr}
   13efc:	add	ip, sp, #8
   13f00:	str	r2, [ip, #-4]!
   13f04:	mov	r2, ip
   13f08:	bl	13dd4 <table_find@@Base>
   13f0c:	add	sp, sp, #12
   13f10:	pop	{pc}		; (ldr pc, [sp], #4)

00013f14 <table_find_int64@@Base>:
   13f14:	push	{r0, r1, r2, lr}
   13f18:	add	ip, sp, #8
   13f1c:	strd	r2, [ip, #-8]!
   13f20:	ldr	r3, [sp, #16]
   13f24:	mov	r2, ip
   13f28:	bl	13dd4 <table_find@@Base>
   13f2c:	add	sp, sp, #12
   13f30:	pop	{pc}		; (ldr pc, [sp], #4)

00013f34 <table_find_uint64@@Base>:
   13f34:	push	{r0, r1, r2, lr}
   13f38:	add	ip, sp, #8
   13f3c:	strd	r2, [ip, #-8]!
   13f40:	ldr	r3, [sp, #16]
   13f44:	mov	r2, ip
   13f48:	bl	13dd4 <table_find@@Base>
   13f4c:	add	sp, sp, #12
   13f50:	pop	{pc}		; (ldr pc, [sp], #4)

00013f54 <table_find_short@@Base>:
   13f54:	push	{r0, r1, r2, lr}
   13f58:	add	ip, sp, #8
   13f5c:	strh	r2, [ip, #-2]!
   13f60:	mov	r2, ip
   13f64:	bl	13dd4 <table_find@@Base>
   13f68:	add	sp, sp, #12
   13f6c:	pop	{pc}		; (ldr pc, [sp], #4)

00013f70 <table_find_ushort@@Base>:
   13f70:	push	{r0, r1, r2, lr}
   13f74:	add	ip, sp, #8
   13f78:	strh	r2, [ip, #-2]!
   13f7c:	mov	r2, ip
   13f80:	bl	13dd4 <table_find@@Base>
   13f84:	add	sp, sp, #12
   13f88:	pop	{pc}		; (ldr pc, [sp], #4)

00013f8c <table_find_long@@Base>:
   13f8c:	push	{r0, r1, r2, lr}
   13f90:	add	ip, sp, #8
   13f94:	str	r2, [ip, #-4]!
   13f98:	mov	r2, ip
   13f9c:	bl	13dd4 <table_find@@Base>
   13fa0:	add	sp, sp, #12
   13fa4:	pop	{pc}		; (ldr pc, [sp], #4)

00013fa8 <table_find_ulong@@Base>:
   13fa8:	push	{r0, r1, r2, lr}
   13fac:	add	ip, sp, #8
   13fb0:	str	r2, [ip, #-4]!
   13fb4:	mov	r2, ip
   13fb8:	bl	13dd4 <table_find@@Base>
   13fbc:	add	sp, sp, #12
   13fc0:	pop	{pc}		; (ldr pc, [sp], #4)

00013fc4 <table_find_llong@@Base>:
   13fc4:	push	{r0, r1, r2, lr}
   13fc8:	add	ip, sp, #8
   13fcc:	strd	r2, [ip, #-8]!
   13fd0:	ldr	r3, [sp, #16]
   13fd4:	mov	r2, ip
   13fd8:	bl	13dd4 <table_find@@Base>
   13fdc:	add	sp, sp, #12
   13fe0:	pop	{pc}		; (ldr pc, [sp], #4)

00013fe4 <table_find_ullong@@Base>:
   13fe4:	push	{r0, r1, r2, lr}
   13fe8:	add	ip, sp, #8
   13fec:	strd	r2, [ip, #-8]!
   13ff0:	ldr	r3, [sp, #16]
   13ff4:	mov	r2, ip
   13ff8:	bl	13dd4 <table_find@@Base>
   13ffc:	add	sp, sp, #12
   14000:	pop	{pc}		; (ldr pc, [sp], #4)

00014004 <table_find_float@@Base>:
   14004:	push	{r0, r1, r2, lr}
   14008:	add	ip, sp, #8
   1400c:	mov	r3, r2
   14010:	vstmdb	ip!, {s0}
   14014:	mov	r2, ip
   14018:	bl	13dd4 <table_find@@Base>
   1401c:	add	sp, sp, #12
   14020:	pop	{pc}		; (ldr pc, [sp], #4)

00014024 <table_find_double@@Base>:
   14024:	push	{r0, r1, r2, lr}
   14028:	add	ip, sp, #8
   1402c:	mov	r3, r2
   14030:	vstmdb	ip!, {d0}
   14034:	mov	r2, ip
   14038:	bl	13dd4 <table_find@@Base>
   1403c:	add	sp, sp, #12
   14040:	pop	{pc}		; (ldr pc, [sp], #4)

00014044 <table_find_ldouble@@Base>:
   14044:	push	{r0, r1, r2, lr}
   14048:	add	ip, sp, #8
   1404c:	mov	r3, r2
   14050:	vstmdb	ip!, {d0}
   14054:	mov	r2, ip
   14058:	bl	13dd4 <table_find@@Base>
   1405c:	add	sp, sp, #12
   14060:	pop	{pc}		; (ldr pc, [sp], #4)

00014064 <table_find_char@@Base>:
   14064:	push	{r0, r1, r2, lr}
   14068:	add	ip, sp, #8
   1406c:	strb	r2, [ip, #-1]!
   14070:	mov	r2, ip
   14074:	bl	13dd4 <table_find@@Base>
   14078:	add	sp, sp, #12
   1407c:	pop	{pc}		; (ldr pc, [sp], #4)

00014080 <table_find_uchar@@Base>:
   14080:	push	{r0, r1, r2, lr}
   14084:	add	ip, sp, #8
   14088:	strb	r2, [ip, #-1]!
   1408c:	mov	r2, ip
   14090:	bl	13dd4 <table_find@@Base>
   14094:	add	sp, sp, #12
   14098:	pop	{pc}		; (ldr pc, [sp], #4)

0001409c <table_find_string@@Base>:
   1409c:	push	{r0, r1, r2, lr}
   140a0:	add	ip, sp, #8
   140a4:	str	r2, [ip, #-4]!
   140a8:	mov	r2, ip
   140ac:	bl	13dd4 <table_find@@Base>
   140b0:	add	sp, sp, #12
   140b4:	pop	{pc}		; (ldr pc, [sp], #4)

000140b8 <table_find_ptr@@Base>:
   140b8:	b	13dd4 <table_find@@Base>

000140bc <table_sorted_subset_find@@Base>:
   140bc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140c0:	mov	r5, r0
   140c4:	ldr	fp, [sp, #40]	; 0x28
   140c8:	ldr	r7, [sp, #44]	; 0x2c
   140cc:	mov	r6, r1
   140d0:	mov	r8, r2
   140d4:	mov	sl, r3
   140d8:	mov	r1, r6
   140dc:	mov	r0, r5
   140e0:	bl	138d8 <table_get_column_compare_function@@Base>
   140e4:	sub	r4, r7, fp
   140e8:	mov	r2, r6
   140ec:	add	r4, r4, r4, lsr #31
   140f0:	add	r4, fp, r4, asr #1
   140f4:	mov	r1, r4
   140f8:	mov	r9, r0
   140fc:	mov	r0, r5
   14100:	bl	147e0 <table_get@@Base>
   14104:	mov	r1, r0
   14108:	mov	r0, r8
   1410c:	blx	r9
   14110:	cmp	r7, fp
   14114:	bge	14120 <table_sorted_subset_find@@Base+0x64>
   14118:	rsb	r0, r4, #0
   1411c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14120:	cmp	r0, #0
   14124:	beq	14148 <table_sorted_subset_find@@Base+0x8c>
   14128:	cmp	r0, #1
   1412c:	beq	14140 <table_sorted_subset_find@@Base+0x84>
   14130:	cmn	r0, #1
   14134:	bne	14118 <table_sorted_subset_find@@Base+0x5c>
   14138:	sub	r7, r4, #1
   1413c:	mov	r4, fp
   14140:	mov	fp, r4
   14144:	b	140d8 <table_sorted_subset_find@@Base+0x1c>
   14148:	cmp	sl, #0
   1414c:	subeq	r4, r4, #1
   14150:	addne	r4, r4, #1
   14154:	mov	r2, r6
   14158:	mov	r1, r4
   1415c:	mov	r0, r5
   14160:	bl	147e0 <table_get@@Base>
   14164:	mov	r1, r8
   14168:	blx	r9
   1416c:	cmp	r0, #0
   14170:	beq	14148 <table_sorted_subset_find@@Base+0x8c>
   14174:	cmp	sl, #0
   14178:	addeq	r0, r4, #1
   1417c:	subne	r0, r4, #1
   14180:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014184 <table_sorted_find@@Base>:
   14184:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14188:	mov	r7, r3
   1418c:	mov	r4, r0
   14190:	mov	r5, r1
   14194:	mov	r6, r2
   14198:	bl	14968 <table_get_row_length@@Base>
   1419c:	mov	r3, #0
   141a0:	str	r3, [sp]
   141a4:	mov	r2, r6
   141a8:	mov	r3, r7
   141ac:	mov	r1, r5
   141b0:	sub	r0, r0, #1
   141b4:	str	r0, [sp, #4]
   141b8:	mov	r0, r4
   141bc:	bl	140bc <table_sorted_subset_find@@Base>
   141c0:	add	sp, sp, #12
   141c4:	pop	{r4, r5, r6, r7, pc}

000141c8 <table_sorted_find_int@@Base>:
   141c8:	push	{r0, r1, r2, lr}
   141cc:	add	ip, sp, #8
   141d0:	str	r2, [ip, #-4]!
   141d4:	mov	r2, ip
   141d8:	bl	14184 <table_sorted_find@@Base>
   141dc:	add	sp, sp, #12
   141e0:	pop	{pc}		; (ldr pc, [sp], #4)

000141e4 <table_sorted_find_uint@@Base>:
   141e4:	push	{r0, r1, r2, lr}
   141e8:	add	ip, sp, #8
   141ec:	str	r2, [ip, #-4]!
   141f0:	mov	r2, ip
   141f4:	bl	14184 <table_sorted_find@@Base>
   141f8:	add	sp, sp, #12
   141fc:	pop	{pc}		; (ldr pc, [sp], #4)

00014200 <table_sorted_find_int8@@Base>:
   14200:	push	{r0, r1, r2, lr}
   14204:	add	ip, sp, #8
   14208:	strb	r2, [ip, #-1]!
   1420c:	mov	r2, ip
   14210:	bl	14184 <table_sorted_find@@Base>
   14214:	add	sp, sp, #12
   14218:	pop	{pc}		; (ldr pc, [sp], #4)

0001421c <table_sorted_find_uint8@@Base>:
   1421c:	push	{r0, r1, r2, lr}
   14220:	add	ip, sp, #8
   14224:	strb	r2, [ip, #-1]!
   14228:	mov	r2, ip
   1422c:	bl	14184 <table_sorted_find@@Base>
   14230:	add	sp, sp, #12
   14234:	pop	{pc}		; (ldr pc, [sp], #4)

00014238 <table_sorted_find_int16@@Base>:
   14238:	push	{r0, r1, r2, lr}
   1423c:	add	ip, sp, #8
   14240:	strh	r2, [ip, #-2]!
   14244:	mov	r2, ip
   14248:	bl	14184 <table_sorted_find@@Base>
   1424c:	add	sp, sp, #12
   14250:	pop	{pc}		; (ldr pc, [sp], #4)

00014254 <table_sorted_find_uint16@@Base>:
   14254:	push	{r0, r1, r2, lr}
   14258:	add	ip, sp, #8
   1425c:	strh	r2, [ip, #-2]!
   14260:	mov	r2, ip
   14264:	bl	14184 <table_sorted_find@@Base>
   14268:	add	sp, sp, #12
   1426c:	pop	{pc}		; (ldr pc, [sp], #4)

00014270 <table_sorted_find_int32@@Base>:
   14270:	push	{r0, r1, r2, lr}
   14274:	add	ip, sp, #8
   14278:	str	r2, [ip, #-4]!
   1427c:	mov	r2, ip
   14280:	bl	14184 <table_sorted_find@@Base>
   14284:	add	sp, sp, #12
   14288:	pop	{pc}		; (ldr pc, [sp], #4)

0001428c <table_sorted_find_uint32@@Base>:
   1428c:	push	{r0, r1, r2, lr}
   14290:	add	ip, sp, #8
   14294:	str	r2, [ip, #-4]!
   14298:	mov	r2, ip
   1429c:	bl	14184 <table_sorted_find@@Base>
   142a0:	add	sp, sp, #12
   142a4:	pop	{pc}		; (ldr pc, [sp], #4)

000142a8 <table_sorted_find_int64@@Base>:
   142a8:	push	{r0, r1, r2, lr}
   142ac:	add	ip, sp, #8
   142b0:	strd	r2, [ip, #-8]!
   142b4:	ldr	r3, [sp, #16]
   142b8:	mov	r2, ip
   142bc:	bl	14184 <table_sorted_find@@Base>
   142c0:	add	sp, sp, #12
   142c4:	pop	{pc}		; (ldr pc, [sp], #4)

000142c8 <table_sorted_find_uint64@@Base>:
   142c8:	push	{r0, r1, r2, lr}
   142cc:	add	ip, sp, #8
   142d0:	strd	r2, [ip, #-8]!
   142d4:	ldr	r3, [sp, #16]
   142d8:	mov	r2, ip
   142dc:	bl	14184 <table_sorted_find@@Base>
   142e0:	add	sp, sp, #12
   142e4:	pop	{pc}		; (ldr pc, [sp], #4)

000142e8 <table_sorted_find_short@@Base>:
   142e8:	push	{r0, r1, r2, lr}
   142ec:	add	ip, sp, #8
   142f0:	strh	r2, [ip, #-2]!
   142f4:	mov	r2, ip
   142f8:	bl	14184 <table_sorted_find@@Base>
   142fc:	add	sp, sp, #12
   14300:	pop	{pc}		; (ldr pc, [sp], #4)

00014304 <table_sorted_find_ushort@@Base>:
   14304:	push	{r0, r1, r2, lr}
   14308:	add	ip, sp, #8
   1430c:	strh	r2, [ip, #-2]!
   14310:	mov	r2, ip
   14314:	bl	14184 <table_sorted_find@@Base>
   14318:	add	sp, sp, #12
   1431c:	pop	{pc}		; (ldr pc, [sp], #4)

00014320 <table_sorted_find_long@@Base>:
   14320:	push	{r0, r1, r2, lr}
   14324:	add	ip, sp, #8
   14328:	str	r2, [ip, #-4]!
   1432c:	mov	r2, ip
   14330:	bl	14184 <table_sorted_find@@Base>
   14334:	add	sp, sp, #12
   14338:	pop	{pc}		; (ldr pc, [sp], #4)

0001433c <table_sorted_find_ulong@@Base>:
   1433c:	push	{r0, r1, r2, lr}
   14340:	add	ip, sp, #8
   14344:	str	r2, [ip, #-4]!
   14348:	mov	r2, ip
   1434c:	bl	14184 <table_sorted_find@@Base>
   14350:	add	sp, sp, #12
   14354:	pop	{pc}		; (ldr pc, [sp], #4)

00014358 <table_sorted_find_llong@@Base>:
   14358:	push	{r0, r1, r2, lr}
   1435c:	add	ip, sp, #8
   14360:	strd	r2, [ip, #-8]!
   14364:	ldr	r3, [sp, #16]
   14368:	mov	r2, ip
   1436c:	bl	14184 <table_sorted_find@@Base>
   14370:	add	sp, sp, #12
   14374:	pop	{pc}		; (ldr pc, [sp], #4)

00014378 <table_sorted_find_ullong@@Base>:
   14378:	push	{r0, r1, r2, lr}
   1437c:	add	ip, sp, #8
   14380:	strd	r2, [ip, #-8]!
   14384:	ldr	r3, [sp, #16]
   14388:	mov	r2, ip
   1438c:	bl	14184 <table_sorted_find@@Base>
   14390:	add	sp, sp, #12
   14394:	pop	{pc}		; (ldr pc, [sp], #4)

00014398 <table_sorted_find_float@@Base>:
   14398:	push	{r0, r1, r2, lr}
   1439c:	add	ip, sp, #8
   143a0:	mov	r3, r2
   143a4:	vstmdb	ip!, {s0}
   143a8:	mov	r2, ip
   143ac:	bl	14184 <table_sorted_find@@Base>
   143b0:	add	sp, sp, #12
   143b4:	pop	{pc}		; (ldr pc, [sp], #4)

000143b8 <table_sorted_find_double@@Base>:
   143b8:	push	{r0, r1, r2, lr}
   143bc:	add	ip, sp, #8
   143c0:	mov	r3, r2
   143c4:	vstmdb	ip!, {d0}
   143c8:	mov	r2, ip
   143cc:	bl	14184 <table_sorted_find@@Base>
   143d0:	add	sp, sp, #12
   143d4:	pop	{pc}		; (ldr pc, [sp], #4)

000143d8 <table_sorted_find_ldouble@@Base>:
   143d8:	push	{r0, r1, r2, lr}
   143dc:	add	ip, sp, #8
   143e0:	mov	r3, r2
   143e4:	vstmdb	ip!, {d0}
   143e8:	mov	r2, ip
   143ec:	bl	14184 <table_sorted_find@@Base>
   143f0:	add	sp, sp, #12
   143f4:	pop	{pc}		; (ldr pc, [sp], #4)

000143f8 <table_sorted_find_char@@Base>:
   143f8:	push	{r0, r1, r2, lr}
   143fc:	add	ip, sp, #8
   14400:	strb	r2, [ip, #-1]!
   14404:	mov	r2, ip
   14408:	bl	14184 <table_sorted_find@@Base>
   1440c:	add	sp, sp, #12
   14410:	pop	{pc}		; (ldr pc, [sp], #4)

00014414 <table_sorted_find_uchar@@Base>:
   14414:	push	{r0, r1, r2, lr}
   14418:	add	ip, sp, #8
   1441c:	strb	r2, [ip, #-1]!
   14420:	mov	r2, ip
   14424:	bl	14184 <table_sorted_find@@Base>
   14428:	add	sp, sp, #12
   1442c:	pop	{pc}		; (ldr pc, [sp], #4)

00014430 <table_sorted_find_string@@Base>:
   14430:	b	14184 <table_sorted_find@@Base>

00014434 <table_sorted_find_ptr@@Base>:
   14434:	b	14184 <table_sorted_find@@Base>

00014438 <table_sorted_subset_find_int@@Base>:
   14438:	push	{r0, r1, r2, r3, r4, lr}
   1443c:	add	ip, sp, #16
   14440:	str	r2, [ip, #-4]!
   14444:	ldr	r2, [sp, #28]
   14448:	str	r2, [sp, #4]
   1444c:	ldr	r2, [sp, #24]
   14450:	str	r2, [sp]
   14454:	mov	r2, ip
   14458:	bl	140bc <table_sorted_subset_find@@Base>
   1445c:	add	sp, sp, #20
   14460:	pop	{pc}		; (ldr pc, [sp], #4)

00014464 <table_sorted_subset_find_uint@@Base>:
   14464:	push	{r0, r1, r2, r3, r4, lr}
   14468:	add	ip, sp, #16
   1446c:	str	r2, [ip, #-4]!
   14470:	ldr	r2, [sp, #28]
   14474:	str	r2, [sp, #4]
   14478:	ldr	r2, [sp, #24]
   1447c:	str	r2, [sp]
   14480:	mov	r2, ip
   14484:	bl	140bc <table_sorted_subset_find@@Base>
   14488:	add	sp, sp, #20
   1448c:	pop	{pc}		; (ldr pc, [sp], #4)

00014490 <table_sorted_subset_find_int8@@Base>:
   14490:	push	{r0, r1, r2, r3, r4, lr}
   14494:	add	ip, sp, #16
   14498:	strb	r2, [ip, #-1]!
   1449c:	ldr	r2, [sp, #28]
   144a0:	str	r2, [sp, #4]
   144a4:	ldr	r2, [sp, #24]
   144a8:	str	r2, [sp]
   144ac:	mov	r2, ip
   144b0:	bl	140bc <table_sorted_subset_find@@Base>
   144b4:	add	sp, sp, #20
   144b8:	pop	{pc}		; (ldr pc, [sp], #4)

000144bc <table_sorted_subset_find_uint8@@Base>:
   144bc:	push	{r0, r1, r2, r3, r4, lr}
   144c0:	add	ip, sp, #16
   144c4:	strb	r2, [ip, #-1]!
   144c8:	ldr	r2, [sp, #28]
   144cc:	str	r2, [sp, #4]
   144d0:	ldr	r2, [sp, #24]
   144d4:	str	r2, [sp]
   144d8:	mov	r2, ip
   144dc:	bl	140bc <table_sorted_subset_find@@Base>
   144e0:	add	sp, sp, #20
   144e4:	pop	{pc}		; (ldr pc, [sp], #4)

000144e8 <table_sorted_subset_find_int16@@Base>:
   144e8:	push	{r0, r1, r2, r3, r4, lr}
   144ec:	add	ip, sp, #16
   144f0:	strh	r2, [ip, #-2]!
   144f4:	ldr	r2, [sp, #28]
   144f8:	str	r2, [sp, #4]
   144fc:	ldr	r2, [sp, #24]
   14500:	str	r2, [sp]
   14504:	mov	r2, ip
   14508:	bl	140bc <table_sorted_subset_find@@Base>
   1450c:	add	sp, sp, #20
   14510:	pop	{pc}		; (ldr pc, [sp], #4)

00014514 <table_sorted_subset_find_uint16@@Base>:
   14514:	push	{r0, r1, r2, r3, r4, lr}
   14518:	add	ip, sp, #16
   1451c:	strh	r2, [ip, #-2]!
   14520:	ldr	r2, [sp, #28]
   14524:	str	r2, [sp, #4]
   14528:	ldr	r2, [sp, #24]
   1452c:	str	r2, [sp]
   14530:	mov	r2, ip
   14534:	bl	140bc <table_sorted_subset_find@@Base>
   14538:	add	sp, sp, #20
   1453c:	pop	{pc}		; (ldr pc, [sp], #4)

00014540 <table_sorted_subset_find_int32@@Base>:
   14540:	push	{r0, r1, r2, r3, r4, lr}
   14544:	add	ip, sp, #16
   14548:	str	r2, [ip, #-4]!
   1454c:	ldr	r2, [sp, #28]
   14550:	str	r2, [sp, #4]
   14554:	ldr	r2, [sp, #24]
   14558:	str	r2, [sp]
   1455c:	mov	r2, ip
   14560:	bl	140bc <table_sorted_subset_find@@Base>
   14564:	add	sp, sp, #20
   14568:	pop	{pc}		; (ldr pc, [sp], #4)

0001456c <table_sorted_subset_find_uint32@@Base>:
   1456c:	push	{r0, r1, r2, r3, r4, lr}
   14570:	add	ip, sp, #16
   14574:	str	r2, [ip, #-4]!
   14578:	ldr	r2, [sp, #28]
   1457c:	str	r2, [sp, #4]
   14580:	ldr	r2, [sp, #24]
   14584:	str	r2, [sp]
   14588:	mov	r2, ip
   1458c:	bl	140bc <table_sorted_subset_find@@Base>
   14590:	add	sp, sp, #20
   14594:	pop	{pc}		; (ldr pc, [sp], #4)

00014598 <table_sorted_subset_find_int64@@Base>:
   14598:	push	{r0, r1, r2, r3, r4, lr}
   1459c:	add	ip, sp, #16
   145a0:	strd	r2, [ip, #-8]!
   145a4:	ldr	r3, [sp, #32]
   145a8:	mov	r2, ip
   145ac:	str	r3, [sp, #4]
   145b0:	ldr	r3, [sp, #28]
   145b4:	str	r3, [sp]
   145b8:	ldr	r3, [sp, #24]
   145bc:	bl	140bc <table_sorted_subset_find@@Base>
   145c0:	add	sp, sp, #20
   145c4:	pop	{pc}		; (ldr pc, [sp], #4)

000145c8 <table_sorted_subset_find_uint64@@Base>:
   145c8:	push	{r0, r1, r2, r3, r4, lr}
   145cc:	add	ip, sp, #16
   145d0:	strd	r2, [ip, #-8]!
   145d4:	ldr	r3, [sp, #32]
   145d8:	mov	r2, ip
   145dc:	str	r3, [sp, #4]
   145e0:	ldr	r3, [sp, #28]
   145e4:	str	r3, [sp]
   145e8:	ldr	r3, [sp, #24]
   145ec:	bl	140bc <table_sorted_subset_find@@Base>
   145f0:	add	sp, sp, #20
   145f4:	pop	{pc}		; (ldr pc, [sp], #4)

000145f8 <table_sorted_subset_find_short@@Base>:
   145f8:	push	{r0, r1, r2, r3, r4, lr}
   145fc:	add	ip, sp, #16
   14600:	strh	r2, [ip, #-2]!
   14604:	ldr	r2, [sp, #28]
   14608:	str	r2, [sp, #4]
   1460c:	ldr	r2, [sp, #24]
   14610:	str	r2, [sp]
   14614:	mov	r2, ip
   14618:	bl	140bc <table_sorted_subset_find@@Base>
   1461c:	add	sp, sp, #20
   14620:	pop	{pc}		; (ldr pc, [sp], #4)

00014624 <table_sorted_subset_find_ushort@@Base>:
   14624:	push	{r0, r1, r2, r3, r4, lr}
   14628:	add	ip, sp, #16
   1462c:	strh	r2, [ip, #-2]!
   14630:	ldr	r2, [sp, #28]
   14634:	str	r2, [sp, #4]
   14638:	ldr	r2, [sp, #24]
   1463c:	str	r2, [sp]
   14640:	mov	r2, ip
   14644:	bl	140bc <table_sorted_subset_find@@Base>
   14648:	add	sp, sp, #20
   1464c:	pop	{pc}		; (ldr pc, [sp], #4)

00014650 <table_sorted_subset_find_long@@Base>:
   14650:	push	{r0, r1, r2, r3, r4, lr}
   14654:	add	ip, sp, #16
   14658:	str	r2, [ip, #-4]!
   1465c:	ldr	r2, [sp, #28]
   14660:	str	r2, [sp, #4]
   14664:	ldr	r2, [sp, #24]
   14668:	str	r2, [sp]
   1466c:	mov	r2, ip
   14670:	bl	140bc <table_sorted_subset_find@@Base>
   14674:	add	sp, sp, #20
   14678:	pop	{pc}		; (ldr pc, [sp], #4)

0001467c <table_sorted_subset_find_ulong@@Base>:
   1467c:	push	{r0, r1, r2, r3, r4, lr}
   14680:	add	ip, sp, #16
   14684:	str	r2, [ip, #-4]!
   14688:	ldr	r2, [sp, #28]
   1468c:	str	r2, [sp, #4]
   14690:	ldr	r2, [sp, #24]
   14694:	str	r2, [sp]
   14698:	mov	r2, ip
   1469c:	bl	140bc <table_sorted_subset_find@@Base>
   146a0:	add	sp, sp, #20
   146a4:	pop	{pc}		; (ldr pc, [sp], #4)

000146a8 <table_sorted_subset_find_llong@@Base>:
   146a8:	push	{r0, r1, r2, r3, r4, lr}
   146ac:	add	ip, sp, #16
   146b0:	strd	r2, [ip, #-8]!
   146b4:	ldr	r3, [sp, #32]
   146b8:	mov	r2, ip
   146bc:	str	r3, [sp, #4]
   146c0:	ldr	r3, [sp, #28]
   146c4:	str	r3, [sp]
   146c8:	ldr	r3, [sp, #24]
   146cc:	bl	140bc <table_sorted_subset_find@@Base>
   146d0:	add	sp, sp, #20
   146d4:	pop	{pc}		; (ldr pc, [sp], #4)

000146d8 <table_sorted_subset_find_ullong@@Base>:
   146d8:	push	{r0, r1, r2, r3, r4, lr}
   146dc:	add	ip, sp, #16
   146e0:	strd	r2, [ip, #-8]!
   146e4:	ldr	r3, [sp, #32]
   146e8:	mov	r2, ip
   146ec:	str	r3, [sp, #4]
   146f0:	ldr	r3, [sp, #28]
   146f4:	str	r3, [sp]
   146f8:	ldr	r3, [sp, #24]
   146fc:	bl	140bc <table_sorted_subset_find@@Base>
   14700:	add	sp, sp, #20
   14704:	pop	{pc}		; (ldr pc, [sp], #4)

00014708 <table_sorted_subset_find_float@@Base>:
   14708:	push	{r0, r1, r2, r3, r4, lr}
   1470c:	add	ip, sp, #16
   14710:	ldr	lr, [sp, #24]
   14714:	vstmdb	ip!, {s0}
   14718:	stm	sp, {r3, lr}
   1471c:	mov	r3, r2
   14720:	mov	r2, ip
   14724:	bl	140bc <table_sorted_subset_find@@Base>
   14728:	add	sp, sp, #20
   1472c:	pop	{pc}		; (ldr pc, [sp], #4)

00014730 <table_sorted_subset_find_double@@Base>:
   14730:	push	{r0, r1, r2, r3, r4, lr}
   14734:	add	ip, sp, #16
   14738:	ldr	lr, [sp, #24]
   1473c:	vstmdb	ip!, {d0}
   14740:	stm	sp, {r3, lr}
   14744:	mov	r3, r2
   14748:	mov	r2, ip
   1474c:	bl	140bc <table_sorted_subset_find@@Base>
   14750:	add	sp, sp, #20
   14754:	pop	{pc}		; (ldr pc, [sp], #4)

00014758 <table_sorted_subset_find_ldouble@@Base>:
   14758:	push	{r0, r1, r2, r3, r4, lr}
   1475c:	add	ip, sp, #16
   14760:	ldr	lr, [sp, #24]
   14764:	vstmdb	ip!, {d0}
   14768:	stm	sp, {r3, lr}
   1476c:	mov	r3, r2
   14770:	mov	r2, ip
   14774:	bl	140bc <table_sorted_subset_find@@Base>
   14778:	add	sp, sp, #20
   1477c:	pop	{pc}		; (ldr pc, [sp], #4)

00014780 <table_sorted_subset_find_char@@Base>:
   14780:	push	{r0, r1, r2, r3, r4, lr}
   14784:	add	ip, sp, #16
   14788:	strb	r2, [ip, #-1]!
   1478c:	ldr	r2, [sp, #28]
   14790:	str	r2, [sp, #4]
   14794:	ldr	r2, [sp, #24]
   14798:	str	r2, [sp]
   1479c:	mov	r2, ip
   147a0:	bl	140bc <table_sorted_subset_find@@Base>
   147a4:	add	sp, sp, #20
   147a8:	pop	{pc}		; (ldr pc, [sp], #4)

000147ac <table_sorted_subset_find_uchar@@Base>:
   147ac:	push	{r0, r1, r2, r3, r4, lr}
   147b0:	add	ip, sp, #16
   147b4:	strb	r2, [ip, #-1]!
   147b8:	ldr	r2, [sp, #28]
   147bc:	str	r2, [sp, #4]
   147c0:	ldr	r2, [sp, #24]
   147c4:	str	r2, [sp]
   147c8:	mov	r2, ip
   147cc:	bl	140bc <table_sorted_subset_find@@Base>
   147d0:	add	sp, sp, #20
   147d4:	pop	{pc}		; (ldr pc, [sp], #4)

000147d8 <table_sorted_subset_find_string@@Base>:
   147d8:	b	140bc <table_sorted_subset_find@@Base>

000147dc <table_sorted_subset_find_ptr@@Base>:
   147dc:	b	140bc <table_sorted_subset_find@@Base>

000147e0 <table_get@@Base>:
   147e0:	push	{r4, lr}
   147e4:	bl	159a4 <table_get_cell_ptr@@Base>
   147e8:	ldr	r0, [r0]
   147ec:	pop	{r4, pc}

000147f0 <table_get_bool@@Base>:
   147f0:	push	{r4, lr}
   147f4:	bl	147e0 <table_get@@Base>
   147f8:	ldrb	r0, [r0]
   147fc:	pop	{r4, pc}

00014800 <table_get_int8@@Base>:
   14800:	push	{r4, lr}
   14804:	bl	147e0 <table_get@@Base>
   14808:	ldrsb	r0, [r0]
   1480c:	pop	{r4, pc}

00014810 <table_get_int32@@Base>:
   14810:	push	{r4, lr}
   14814:	bl	147e0 <table_get@@Base>
   14818:	ldr	r0, [r0]
   1481c:	pop	{r4, pc}

00014820 <table_get_int@@Base>:
   14820:	b	14810 <table_get_int32@@Base>

00014824 <table_get_uint32@@Base>:
   14824:	push	{r4, lr}
   14828:	bl	147e0 <table_get@@Base>
   1482c:	ldr	r0, [r0]
   14830:	pop	{r4, pc}

00014834 <table_get_uint@@Base>:
   14834:	b	14824 <table_get_uint32@@Base>

00014838 <table_get_short@@Base>:
   14838:	push	{r4, lr}
   1483c:	bl	147e0 <table_get@@Base>
   14840:	ldrsh	r0, [r0]
   14844:	pop	{r4, pc}

00014848 <table_get_int16@@Base>:
   14848:	b	14838 <table_get_short@@Base>

0001484c <table_get_ushort@@Base>:
   1484c:	push	{r4, lr}
   14850:	bl	147e0 <table_get@@Base>
   14854:	ldrh	r0, [r0]
   14858:	pop	{r4, pc}

0001485c <table_get_uint16@@Base>:
   1485c:	b	1484c <table_get_ushort@@Base>

00014860 <table_get_long@@Base>:
   14860:	push	{r4, lr}
   14864:	bl	147e0 <table_get@@Base>
   14868:	ldr	r0, [r0]
   1486c:	pop	{r4, pc}

00014870 <table_get_ulong@@Base>:
   14870:	push	{r4, lr}
   14874:	bl	147e0 <table_get@@Base>
   14878:	ldr	r0, [r0]
   1487c:	pop	{r4, pc}

00014880 <table_get_llong@@Base>:
   14880:	push	{r4, lr}
   14884:	bl	147e0 <table_get@@Base>
   14888:	ldrd	r0, [r0]
   1488c:	pop	{r4, pc}

00014890 <table_get_int64@@Base>:
   14890:	b	14880 <table_get_llong@@Base>

00014894 <table_get_ullong@@Base>:
   14894:	push	{r4, lr}
   14898:	bl	147e0 <table_get@@Base>
   1489c:	ldrd	r0, [r0]
   148a0:	pop	{r4, pc}

000148a4 <table_get_uint64@@Base>:
   148a4:	b	14894 <table_get_ullong@@Base>

000148a8 <table_get_float@@Base>:
   148a8:	push	{r4, lr}
   148ac:	bl	147e0 <table_get@@Base>
   148b0:	vldr	s0, [r0]
   148b4:	pop	{r4, pc}

000148b8 <table_get_double@@Base>:
   148b8:	push	{r4, lr}
   148bc:	bl	147e0 <table_get@@Base>
   148c0:	vldr	d0, [r0]
   148c4:	pop	{r4, pc}

000148c8 <table_get_ldouble@@Base>:
   148c8:	push	{r4, lr}
   148cc:	bl	147e0 <table_get@@Base>
   148d0:	vldr	d0, [r0]
   148d4:	pop	{r4, pc}

000148d8 <table_get_uchar@@Base>:
   148d8:	push	{r4, lr}
   148dc:	bl	147e0 <table_get@@Base>
   148e0:	ldrb	r0, [r0]
   148e4:	pop	{r4, pc}

000148e8 <table_get_char@@Base>:
   148e8:	b	148d8 <table_get_uchar@@Base>

000148ec <table_get_uint8@@Base>:
   148ec:	b	148d8 <table_get_uchar@@Base>

000148f0 <table_get_string@@Base>:
   148f0:	b	147e0 <table_get@@Base>

000148f4 <table_get_ptr@@Base>:
   148f4:	b	147e0 <table_get@@Base>

000148f8 <table_row_init@@Base>:
   148f8:	push	{r4, r5, r6, lr}
   148fc:	mov	r5, r1
   14900:	ldr	r4, [r0, #16]
   14904:	ldr	r0, [r0, #12]
   14908:	lsl	r0, r0, #2
   1490c:	bl	12990 <malloc@plt>
   14910:	str	r0, [r4, r5, lsl #2]
   14914:	pop	{r4, r5, r6, pc}

00014918 <table_row_destroy@@Base>:
   14918:	push	{r4, r5, r6, r7, r8, lr}
   1491c:	mov	r6, r0
   14920:	mov	r5, r1
   14924:	bl	135e0 <table_get_column_length@@Base>
   14928:	ldr	r7, [r6, #16]
   1492c:	mov	r4, #0
   14930:	mov	r8, r0
   14934:	cmp	r4, r8
   14938:	blt	14950 <table_row_destroy@@Base+0x38>
   1493c:	ldr	r0, [r7, r5, lsl #2]
   14940:	cmp	r0, #0
   14944:	popeq	{r4, r5, r6, r7, r8, pc}
   14948:	pop	{r4, r5, r6, r7, r8, lr}
   1494c:	b	1296c <free@plt>
   14950:	mov	r2, r4
   14954:	mov	r1, r5
   14958:	mov	r0, r6
   1495c:	bl	159d0 <table_cell_destroy@@Base>
   14960:	add	r4, r4, #1
   14964:	b	14934 <table_row_destroy@@Base+0x1c>

00014968 <table_get_row_length@@Base>:
   14968:	ldr	r0, [r0, #20]
   1496c:	bx	lr

00014970 <table_add_row@@Base>:
   14970:	push	{r4, r5, r6, r7, r8, lr}
   14974:	mov	r4, r0
   14978:	ldr	r5, [r0, #24]
   1497c:	ldr	r0, [r0, #20]
   14980:	mov	r1, r5
   14984:	bl	15c2c <table_cell_nullify@@Base+0x218>
   14988:	cmp	r1, #0
   1498c:	bne	149ac <table_add_row@@Base+0x3c>
   14990:	ldr	r1, [r4, #28]
   14994:	ldr	r0, [r4, #16]
   14998:	add	r1, r5, r1
   1499c:	str	r1, [r4, #28]
   149a0:	lsl	r1, r1, #2
   149a4:	bl	12978 <realloc@plt>
   149a8:	str	r0, [r4, #16]
   149ac:	mov	r0, r4
   149b0:	ldr	r6, [r4, #20]
   149b4:	bl	135e0 <table_get_column_length@@Base>
   149b8:	mov	r1, r6
   149bc:	mov	r5, #0
   149c0:	mov	r7, r0
   149c4:	mov	r0, r4
   149c8:	bl	148f8 <table_row_init@@Base>
   149cc:	cmp	r7, r5
   149d0:	bgt	149f8 <table_add_row@@Base+0x88>
   149d4:	mov	r0, r4
   149d8:	mov	r3, #2
   149dc:	mvn	r2, #0
   149e0:	ldr	r1, [r4, #20]
   149e4:	bl	13508 <table_notify@@Base>
   149e8:	ldr	r0, [r4, #20]
   149ec:	add	r3, r0, #1
   149f0:	str	r3, [r4, #20]
   149f4:	pop	{r4, r5, r6, r7, r8, pc}
   149f8:	mov	r2, r5
   149fc:	mov	r1, r6
   14a00:	mov	r0, r4
   14a04:	bl	159bc <table_cell_init@@Base>
   14a08:	add	r5, r5, #1
   14a0c:	b	149cc <table_add_row@@Base+0x5c>

00014a10 <table_remove_row@@Base>:
   14a10:	push	{r4, r5, r6, r7, r8, lr}
   14a14:	mov	r4, r0
   14a18:	mov	r5, r1
   14a1c:	ldr	r7, [r0, #20]
   14a20:	bl	135e0 <table_get_column_length@@Base>
   14a24:	mov	r6, #0
   14a28:	mov	r8, r0
   14a2c:	cmp	r8, r6
   14a30:	bgt	14ab8 <table_remove_row@@Base+0xa8>
   14a34:	ldr	r3, [r4, #16]
   14a38:	lsl	r6, r5, #2
   14a3c:	ldr	r0, [r3, r5, lsl #2]
   14a40:	cmp	r0, #0
   14a44:	beq	14a4c <table_remove_row@@Base+0x3c>
   14a48:	bl	1296c <free@plt>
   14a4c:	mov	r3, r5
   14a50:	sub	r7, r7, #1
   14a54:	cmp	r3, r7
   14a58:	add	r2, r6, #4
   14a5c:	blt	14af4 <table_remove_row@@Base+0xe4>
   14a60:	ldr	r0, [r4, #20]
   14a64:	ldr	r6, [r4, #24]
   14a68:	sub	r0, r0, #1
   14a6c:	str	r0, [r4, #20]
   14a70:	mov	r1, r6
   14a74:	bl	15c2c <table_cell_nullify@@Base+0x218>
   14a78:	cmp	r1, #0
   14a7c:	bne	14a9c <table_remove_row@@Base+0x8c>
   14a80:	ldr	r1, [r4, #28]
   14a84:	ldr	r0, [r4, #16]
   14a88:	sub	r1, r1, r6
   14a8c:	str	r1, [r4, #28]
   14a90:	lsl	r1, r1, #2
   14a94:	bl	12978 <realloc@plt>
   14a98:	str	r0, [r4, #16]
   14a9c:	mov	r0, r4
   14aa0:	mov	r3, #4
   14aa4:	mvn	r2, #0
   14aa8:	mov	r1, r5
   14aac:	bl	13508 <table_notify@@Base>
   14ab0:	mov	r0, #0
   14ab4:	pop	{r4, r5, r6, r7, r8, pc}
   14ab8:	mov	r1, r6
   14abc:	mov	r0, r4
   14ac0:	bl	13638 <table_get_column_data_type@@Base>
   14ac4:	cmp	r0, #23
   14ac8:	beq	14aec <table_remove_row@@Base+0xdc>
   14acc:	mov	r2, r6
   14ad0:	mov	r1, r5
   14ad4:	mov	r0, r4
   14ad8:	bl	159a4 <table_get_cell_ptr@@Base>
   14adc:	ldr	r0, [r0]
   14ae0:	cmp	r0, #0
   14ae4:	beq	14aec <table_remove_row@@Base+0xdc>
   14ae8:	bl	1296c <free@plt>
   14aec:	add	r6, r6, #1
   14af0:	b	14a2c <table_remove_row@@Base+0x1c>
   14af4:	ldr	r1, [r4, #16]
   14af8:	add	r3, r3, #1
   14afc:	ldr	r0, [r1, r2]
   14b00:	str	r0, [r1, r6]
   14b04:	mov	r6, r2
   14b08:	b	14a54 <table_remove_row@@Base+0x44>

00014b0c <table_get_row_ptr@@Base>:
   14b0c:	ldr	r0, [r0, #16]
   14b10:	add	r0, r0, r1, lsl #2
   14b14:	bx	lr

00014b18 <table_set_row_ptr@@Base>:
   14b18:	ldr	r3, [r0, #16]
   14b1c:	ldr	r2, [r2]
   14b20:	str	r2, [r3, r1, lsl #2]
   14b24:	bx	lr

00014b28 <table_set@@Base>:
   14b28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b2c:	mov	r6, r0
   14b30:	mov	r8, r1
   14b34:	mov	r7, r2
   14b38:	ldr	r9, [sp, #32]
   14b3c:	mov	r5, r3
   14b40:	bl	159a4 <table_get_cell_ptr@@Base>
   14b44:	mov	r1, r7
   14b48:	mov	r4, r0
   14b4c:	mov	r0, r6
   14b50:	bl	138c8 <table_get_col_ptr@@Base>
   14b54:	cmp	r9, #23
   14b58:	ldrls	pc, [pc, r9, lsl #2]
   14b5c:	b	14c34 <table_set@@Base+0x10c>
   14b60:	strdeq	r4, [r1], -ip
   14b64:	andeq	r4, r1, ip, lsr ip
   14b68:	andeq	r4, r1, r8, asr #24
   14b6c:	andeq	r4, r1, r4, asr ip
   14b70:	andeq	r4, r1, r0, ror #24
   14b74:			; <UNDEFINED> instruction: 0x00014cb4
   14b78:	andeq	r4, r1, r0, asr #25
   14b7c:	andeq	r4, r1, ip, asr #25
   14b80:	ldrdeq	r4, [r1], -r8
   14b84:	andeq	r4, r1, r8, lsl sp
   14b88:	andeq	r4, r1, r8, lsr sp
   14b8c:	andeq	r4, r1, r4, asr #26
   14b90:	andeq	r4, r1, r0, asr sp
   14b94:	andeq	r4, r1, ip, asr sp
   14b98:	andeq	r4, r1, r8, ror #26
   14b9c:	andeq	r4, r1, r4, ror sp
   14ba0:	andeq	r4, r1, r0, lsl #27
   14ba4:	andeq	r4, r1, ip, lsl #27
   14ba8:	muleq	r1, r8, sp
   14bac:	ldrdeq	r4, [r1], -ip
   14bb0:	andeq	r4, r1, r8, ror #27
   14bb4:	andeq	r4, r1, r4, lsr #27
   14bb8:	andeq	r4, r1, r0, asr #23
   14bbc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14bc0:	ldr	r3, [r0, #4]
   14bc4:	cmp	r3, #22
   14bc8:	bne	14c34 <table_set@@Base+0x10c>
   14bcc:	ldr	r3, [r4]
   14bd0:	cmp	r3, #0
   14bd4:	bne	14be4 <table_set@@Base+0xbc>
   14bd8:	mov	r0, #1
   14bdc:	bl	12990 <malloc@plt>
   14be0:	str	r0, [r4]
   14be4:	ldr	r3, [r4]
   14be8:	cmp	r3, #0
   14bec:	ldrbne	r2, [r5]
   14bf0:	strbne	r2, [r3]
   14bf4:	bne	14c98 <table_set@@Base+0x170>
   14bf8:	b	14c34 <table_set@@Base+0x10c>
   14bfc:	ldr	r3, [r0, #4]
   14c00:	cmp	r3, #0
   14c04:	bne	14c34 <table_set@@Base+0x10c>
   14c08:	ldr	r3, [r4]
   14c0c:	cmp	r3, #0
   14c10:	bne	14c20 <table_set@@Base+0xf8>
   14c14:	mov	r0, #4
   14c18:	bl	12990 <malloc@plt>
   14c1c:	str	r0, [r4]
   14c20:	ldr	r3, [r4]
   14c24:	cmp	r3, #0
   14c28:	ldrne	r2, [r5]
   14c2c:	strne	r2, [r3]
   14c30:	bne	14c98 <table_set@@Base+0x170>
   14c34:	mvn	r0, #0
   14c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c3c:	ldr	r3, [r0, #4]
   14c40:	cmp	r3, #1
   14c44:	b	14c04 <table_set@@Base+0xdc>
   14c48:	ldr	r3, [r0, #4]
   14c4c:	cmp	r3, #2
   14c50:	b	14bc8 <table_set@@Base+0xa0>
   14c54:	ldr	r3, [r0, #4]
   14c58:	cmp	r3, #3
   14c5c:	b	14bc8 <table_set@@Base+0xa0>
   14c60:	ldr	r3, [r0, #4]
   14c64:	cmp	r3, #4
   14c68:	bne	14c34 <table_set@@Base+0x10c>
   14c6c:	ldr	r3, [r4]
   14c70:	cmp	r3, #0
   14c74:	bne	14c84 <table_set@@Base+0x15c>
   14c78:	mov	r0, #2
   14c7c:	bl	12990 <malloc@plt>
   14c80:	str	r0, [r4]
   14c84:	ldr	r3, [r4]
   14c88:	cmp	r3, #0
   14c8c:	beq	14c34 <table_set@@Base+0x10c>
   14c90:	ldrh	r2, [r5]
   14c94:	strh	r2, [r3]
   14c98:	mov	r0, r6
   14c9c:	mov	r3, #1
   14ca0:	mov	r2, r7
   14ca4:	mov	r1, r8
   14ca8:	bl	13508 <table_notify@@Base>
   14cac:	mov	r0, #0
   14cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cb4:	ldr	r3, [r0, #4]
   14cb8:	cmp	r3, #5
   14cbc:	b	14c68 <table_set@@Base+0x140>
   14cc0:	ldr	r3, [r0, #4]
   14cc4:	cmp	r3, #6
   14cc8:	b	14c04 <table_set@@Base+0xdc>
   14ccc:	ldr	r3, [r0, #4]
   14cd0:	cmp	r3, #7
   14cd4:	b	14c04 <table_set@@Base+0xdc>
   14cd8:	ldr	r0, [r0, #4]
   14cdc:	cmp	r0, #8
   14ce0:	bne	14c34 <table_set@@Base+0x10c>
   14ce4:	ldr	r3, [r4]
   14ce8:	cmp	r3, #0
   14cec:	bne	14cf8 <table_set@@Base+0x1d0>
   14cf0:	bl	12990 <malloc@plt>
   14cf4:	str	r0, [r4]
   14cf8:	ldr	r3, [r4]
   14cfc:	cmp	r3, #0
   14d00:	beq	14c34 <table_set@@Base+0x10c>
   14d04:	ldr	r2, [r5]
   14d08:	str	r2, [r3]
   14d0c:	ldr	r2, [r5, #4]
   14d10:	str	r2, [r3, #4]
   14d14:	b	14c98 <table_set@@Base+0x170>
   14d18:	ldr	r3, [r0, #4]
   14d1c:	cmp	r3, #9
   14d20:	bne	14c34 <table_set@@Base+0x10c>
   14d24:	ldr	r3, [r4]
   14d28:	cmp	r3, #0
   14d2c:	bne	14cf8 <table_set@@Base+0x1d0>
   14d30:	mov	r0, #8
   14d34:	b	14cf0 <table_set@@Base+0x1c8>
   14d38:	ldr	r3, [r0, #4]
   14d3c:	cmp	r3, #10
   14d40:	b	14c68 <table_set@@Base+0x140>
   14d44:	ldr	r3, [r0, #4]
   14d48:	cmp	r3, #11
   14d4c:	b	14c68 <table_set@@Base+0x140>
   14d50:	ldr	r3, [r0, #4]
   14d54:	cmp	r3, #12
   14d58:	b	14c04 <table_set@@Base+0xdc>
   14d5c:	ldr	r3, [r0, #4]
   14d60:	cmp	r3, #13
   14d64:	b	14c04 <table_set@@Base+0xdc>
   14d68:	ldr	r3, [r0, #4]
   14d6c:	cmp	r3, #14
   14d70:	b	14d20 <table_set@@Base+0x1f8>
   14d74:	ldr	r3, [r0, #4]
   14d78:	cmp	r3, #15
   14d7c:	b	14d20 <table_set@@Base+0x1f8>
   14d80:	ldr	r3, [r0, #4]
   14d84:	cmp	r3, #16
   14d88:	b	14c04 <table_set@@Base+0xdc>
   14d8c:	ldr	r3, [r0, #4]
   14d90:	cmp	r3, #17
   14d94:	b	14d20 <table_set@@Base+0x1f8>
   14d98:	ldr	r3, [r0, #4]
   14d9c:	cmp	r3, #18
   14da0:	b	14d20 <table_set@@Base+0x1f8>
   14da4:	ldr	r3, [r0, #4]
   14da8:	cmp	r3, #21
   14dac:	bne	14c34 <table_set@@Base+0x10c>
   14db0:	mov	r0, r5
   14db4:	bl	129b4 <strlen@plt>
   14db8:	add	r1, r0, #1
   14dbc:	ldr	r0, [r4]
   14dc0:	bl	12978 <realloc@plt>
   14dc4:	cmp	r0, #0
   14dc8:	str	r0, [r4]
   14dcc:	beq	14c34 <table_set@@Base+0x10c>
   14dd0:	mov	r1, r5
   14dd4:	bl	12984 <strcpy@plt>
   14dd8:	b	14c98 <table_set@@Base+0x170>
   14ddc:	ldr	r3, [r0, #4]
   14de0:	cmp	r3, #19
   14de4:	b	14bc8 <table_set@@Base+0xa0>
   14de8:	ldr	r3, [r0, #4]
   14dec:	cmp	r3, #20
   14df0:	b	14bc8 <table_set@@Base+0xa0>
   14df4:	ldr	r3, [r0, #4]
   14df8:	cmp	r3, #23
   14dfc:	streq	r5, [r4]
   14e00:	beq	14c98 <table_set@@Base+0x170>
   14e04:	b	14c34 <table_set@@Base+0x10c>

00014e08 <table_set_bool@@Base>:
   14e08:	push	{r0, r1, r2, r3, r4, lr}
   14e0c:	add	ip, sp, #16
   14e10:	strb	r3, [ip, #-1]!
   14e14:	mov	r3, #22
   14e18:	str	r3, [sp]
   14e1c:	mov	r3, ip
   14e20:	bl	14b28 <table_set@@Base>
   14e24:	add	sp, sp, #20
   14e28:	pop	{pc}		; (ldr pc, [sp], #4)

00014e2c <table_set_int@@Base>:
   14e2c:	push	{r0, r1, r2, r3, r4, lr}
   14e30:	add	ip, sp, #16
   14e34:	str	r3, [ip, #-4]!
   14e38:	mov	r3, #0
   14e3c:	str	r3, [sp]
   14e40:	mov	r3, ip
   14e44:	bl	14b28 <table_set@@Base>
   14e48:	add	sp, sp, #20
   14e4c:	pop	{pc}		; (ldr pc, [sp], #4)

00014e50 <table_set_uint@@Base>:
   14e50:	push	{r0, r1, r2, r3, r4, lr}
   14e54:	add	ip, sp, #16
   14e58:	str	r3, [ip, #-4]!
   14e5c:	mov	r3, #1
   14e60:	str	r3, [sp]
   14e64:	mov	r3, ip
   14e68:	bl	14b28 <table_set@@Base>
   14e6c:	add	sp, sp, #20
   14e70:	pop	{pc}		; (ldr pc, [sp], #4)

00014e74 <table_set_int8@@Base>:
   14e74:	push	{r0, r1, r2, r3, r4, lr}
   14e78:	add	ip, sp, #16
   14e7c:	strb	r3, [ip, #-1]!
   14e80:	mov	r3, #2
   14e84:	str	r3, [sp]
   14e88:	mov	r3, ip
   14e8c:	bl	14b28 <table_set@@Base>
   14e90:	add	sp, sp, #20
   14e94:	pop	{pc}		; (ldr pc, [sp], #4)

00014e98 <table_set_uint8@@Base>:
   14e98:	push	{r0, r1, r2, r3, r4, lr}
   14e9c:	add	ip, sp, #16
   14ea0:	strb	r3, [ip, #-1]!
   14ea4:	mov	r3, #3
   14ea8:	str	r3, [sp]
   14eac:	mov	r3, ip
   14eb0:	bl	14b28 <table_set@@Base>
   14eb4:	add	sp, sp, #20
   14eb8:	pop	{pc}		; (ldr pc, [sp], #4)

00014ebc <table_set_int16@@Base>:
   14ebc:	push	{r0, r1, r2, r3, r4, lr}
   14ec0:	add	ip, sp, #16
   14ec4:	strh	r3, [ip, #-2]!
   14ec8:	mov	r3, #4
   14ecc:	str	r3, [sp]
   14ed0:	mov	r3, ip
   14ed4:	bl	14b28 <table_set@@Base>
   14ed8:	add	sp, sp, #20
   14edc:	pop	{pc}		; (ldr pc, [sp], #4)

00014ee0 <table_set_uint16@@Base>:
   14ee0:	push	{r0, r1, r2, r3, r4, lr}
   14ee4:	add	ip, sp, #16
   14ee8:	strh	r3, [ip, #-2]!
   14eec:	mov	r3, #5
   14ef0:	str	r3, [sp]
   14ef4:	mov	r3, ip
   14ef8:	bl	14b28 <table_set@@Base>
   14efc:	add	sp, sp, #20
   14f00:	pop	{pc}		; (ldr pc, [sp], #4)

00014f04 <table_set_int32@@Base>:
   14f04:	push	{r0, r1, r2, r3, r4, lr}
   14f08:	add	ip, sp, #16
   14f0c:	str	r3, [ip, #-4]!
   14f10:	mov	r3, #6
   14f14:	str	r3, [sp]
   14f18:	mov	r3, ip
   14f1c:	bl	14b28 <table_set@@Base>
   14f20:	add	sp, sp, #20
   14f24:	pop	{pc}		; (ldr pc, [sp], #4)

00014f28 <table_set_uint32@@Base>:
   14f28:	push	{r0, r1, r2, r3, r4, lr}
   14f2c:	add	ip, sp, #16
   14f30:	str	r3, [ip, #-4]!
   14f34:	mov	r3, #7
   14f38:	str	r3, [sp]
   14f3c:	mov	r3, ip
   14f40:	bl	14b28 <table_set@@Base>
   14f44:	add	sp, sp, #20
   14f48:	pop	{pc}		; (ldr pc, [sp], #4)

00014f4c <table_set_int64@@Base>:
   14f4c:	mov	r3, #8
   14f50:	push	{r0, r1, r2, lr}
   14f54:	str	r3, [sp]
   14f58:	add	r3, sp, #16
   14f5c:	bl	14b28 <table_set@@Base>
   14f60:	add	sp, sp, #12
   14f64:	pop	{pc}		; (ldr pc, [sp], #4)

00014f68 <table_set_uint64@@Base>:
   14f68:	mov	r3, #9
   14f6c:	push	{r0, r1, r2, lr}
   14f70:	str	r3, [sp]
   14f74:	add	r3, sp, #16
   14f78:	bl	14b28 <table_set@@Base>
   14f7c:	add	sp, sp, #12
   14f80:	pop	{pc}		; (ldr pc, [sp], #4)

00014f84 <table_set_short@@Base>:
   14f84:	push	{r0, r1, r2, r3, r4, lr}
   14f88:	add	ip, sp, #16
   14f8c:	strh	r3, [ip, #-2]!
   14f90:	mov	r3, #10
   14f94:	str	r3, [sp]
   14f98:	mov	r3, ip
   14f9c:	bl	14b28 <table_set@@Base>
   14fa0:	add	sp, sp, #20
   14fa4:	pop	{pc}		; (ldr pc, [sp], #4)

00014fa8 <table_set_ushort@@Base>:
   14fa8:	push	{r0, r1, r2, r3, r4, lr}
   14fac:	add	ip, sp, #16
   14fb0:	strh	r3, [ip, #-2]!
   14fb4:	mov	r3, #11
   14fb8:	str	r3, [sp]
   14fbc:	mov	r3, ip
   14fc0:	bl	14b28 <table_set@@Base>
   14fc4:	add	sp, sp, #20
   14fc8:	pop	{pc}		; (ldr pc, [sp], #4)

00014fcc <table_set_long@@Base>:
   14fcc:	push	{r0, r1, r2, r3, r4, lr}
   14fd0:	add	ip, sp, #16
   14fd4:	str	r3, [ip, #-4]!
   14fd8:	mov	r3, #12
   14fdc:	str	r3, [sp]
   14fe0:	mov	r3, ip
   14fe4:	bl	14b28 <table_set@@Base>
   14fe8:	add	sp, sp, #20
   14fec:	pop	{pc}		; (ldr pc, [sp], #4)

00014ff0 <table_set_ulong@@Base>:
   14ff0:	push	{r0, r1, r2, r3, r4, lr}
   14ff4:	add	ip, sp, #16
   14ff8:	str	r3, [ip, #-4]!
   14ffc:	mov	r3, #13
   15000:	str	r3, [sp]
   15004:	mov	r3, ip
   15008:	bl	14b28 <table_set@@Base>
   1500c:	add	sp, sp, #20
   15010:	pop	{pc}		; (ldr pc, [sp], #4)

00015014 <table_set_llong@@Base>:
   15014:	mov	r3, #14
   15018:	push	{r0, r1, r2, lr}
   1501c:	str	r3, [sp]
   15020:	add	r3, sp, #16
   15024:	bl	14b28 <table_set@@Base>
   15028:	add	sp, sp, #12
   1502c:	pop	{pc}		; (ldr pc, [sp], #4)

00015030 <table_set_ullong@@Base>:
   15030:	mov	r3, #15
   15034:	push	{r0, r1, r2, lr}
   15038:	str	r3, [sp]
   1503c:	add	r3, sp, #16
   15040:	bl	14b28 <table_set@@Base>
   15044:	add	sp, sp, #12
   15048:	pop	{pc}		; (ldr pc, [sp], #4)

0001504c <table_set_float@@Base>:
   1504c:	push	{r0, r1, r2, r3, r4, lr}
   15050:	add	r3, sp, #16
   15054:	mov	ip, #16
   15058:	vstmdb	r3!, {s0}
   1505c:	str	ip, [sp]
   15060:	bl	14b28 <table_set@@Base>
   15064:	add	sp, sp, #20
   15068:	pop	{pc}		; (ldr pc, [sp], #4)

0001506c <table_set_double@@Base>:
   1506c:	push	{r0, r1, r2, r3, r4, lr}
   15070:	add	r3, sp, #16
   15074:	mov	ip, #17
   15078:	vstmdb	r3!, {d0}
   1507c:	str	ip, [sp]
   15080:	bl	14b28 <table_set@@Base>
   15084:	add	sp, sp, #20
   15088:	pop	{pc}		; (ldr pc, [sp], #4)

0001508c <table_set_ldouble@@Base>:
   1508c:	push	{r0, r1, r2, r3, r4, lr}
   15090:	add	r3, sp, #16
   15094:	mov	ip, #18
   15098:	vstmdb	r3!, {d0}
   1509c:	str	ip, [sp]
   150a0:	bl	14b28 <table_set@@Base>
   150a4:	add	sp, sp, #20
   150a8:	pop	{pc}		; (ldr pc, [sp], #4)

000150ac <table_set_string@@Base>:
   150ac:	mov	ip, #21
   150b0:	push	{r0, r1, r2, lr}
   150b4:	str	ip, [sp]
   150b8:	bl	14b28 <table_set@@Base>
   150bc:	add	sp, sp, #12
   150c0:	pop	{pc}		; (ldr pc, [sp], #4)

000150c4 <table_set_char@@Base>:
   150c4:	push	{r0, r1, r2, r3, r4, lr}
   150c8:	add	ip, sp, #16
   150cc:	strb	r3, [ip, #-1]!
   150d0:	mov	r3, #19
   150d4:	str	r3, [sp]
   150d8:	mov	r3, ip
   150dc:	bl	14b28 <table_set@@Base>
   150e0:	add	sp, sp, #20
   150e4:	pop	{pc}		; (ldr pc, [sp], #4)

000150e8 <table_set_uchar@@Base>:
   150e8:	push	{r0, r1, r2, r3, r4, lr}
   150ec:	add	ip, sp, #16
   150f0:	strb	r3, [ip, #-1]!
   150f4:	mov	r3, #20
   150f8:	str	r3, [sp]
   150fc:	mov	r3, ip
   15100:	bl	14b28 <table_set@@Base>
   15104:	add	sp, sp, #20
   15108:	pop	{pc}		; (ldr pc, [sp], #4)

0001510c <table_set_ptr@@Base>:
   1510c:	mov	ip, #23
   15110:	push	{r0, r1, r2, lr}
   15114:	str	ip, [sp]
   15118:	bl	14b28 <table_set@@Base>
   1511c:	add	sp, sp, #12
   15120:	pop	{pc}		; (ldr pc, [sp], #4)

00015124 <table_cell_to_buffer@@Base>:
   15124:	push	{r4, r5, r6, r7, lr}
   15128:	sub	sp, sp, #20
   1512c:	mov	r7, r1
   15130:	mov	r1, r2
   15134:	str	r2, [sp, #12]
   15138:	mov	r6, r0
   1513c:	mov	r4, r3
   15140:	ldr	r5, [sp, #40]	; 0x28
   15144:	bl	13638 <table_get_column_data_type@@Base>
   15148:	ldr	r2, [sp, #12]
   1514c:	cmp	r0, #23
   15150:	ldrls	pc, [pc, r0, lsl #2]
   15154:	b	15274 <table_cell_to_buffer@@Base+0x150>
   15158:			; <UNDEFINED> instruction: 0x000151b8
   1515c:	ldrdeq	r5, [r1], -r0
   15160:	strdeq	r5, [r1], -r4
   15164:	andeq	r5, r1, r4, lsl #4
   15168:	andeq	r5, r1, r4, lsl r2
   1516c:	andeq	r5, r1, r4, lsr #4
   15170:	andeq	r5, r1, r4, lsr r2
   15174:	andeq	r5, r1, r4, asr #4
   15178:	andeq	r5, r1, r4, asr r2
   1517c:	andeq	r5, r1, r0, lsl #5
   15180:	muleq	r1, r8, r2
   15184:			; <UNDEFINED> instruction: 0x000152b0
   15188:	andeq	r5, r1, r8, asr #5
   1518c:	andeq	r5, r1, r0, ror #5
   15190:	strdeq	r5, [r1], -r8
   15194:	andeq	r5, r1, r8, lsl #6
   15198:	andeq	r5, r1, r0, lsr r3
   1519c:	andeq	r5, r1, r8, asr r3
   151a0:	andeq	r5, r1, r0, ror r3
   151a4:	muleq	r1, r8, r3
   151a8:			; <UNDEFINED> instruction: 0x000153b0
   151ac:	andeq	r5, r1, r8, lsl r3
   151b0:	andeq	r5, r1, r8, lsl #7
   151b4:	andeq	r5, r1, r0, asr #7
   151b8:	mov	r1, r7
   151bc:	mov	r0, r6
   151c0:	bl	14820 <table_get_int@@Base>
   151c4:	mov	r3, r0
   151c8:	ldr	r2, [pc, #520]	; 153d8 <table_cell_to_buffer@@Base+0x2b4>
   151cc:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   151d0:	mov	r1, r7
   151d4:	mov	r0, r6
   151d8:	bl	14834 <table_get_uint@@Base>
   151dc:	ldr	r2, [pc, #504]	; 153dc <table_cell_to_buffer@@Base+0x2b8>
   151e0:	mov	r3, r0
   151e4:	mov	r1, r5
   151e8:	mov	r0, r4
   151ec:	bl	129c0 <snprintf@plt>
   151f0:	b	15274 <table_cell_to_buffer@@Base+0x150>
   151f4:	mov	r1, r7
   151f8:	mov	r0, r6
   151fc:	bl	14800 <table_get_int8@@Base>
   15200:	b	151c4 <table_cell_to_buffer@@Base+0xa0>
   15204:	mov	r1, r7
   15208:	mov	r0, r6
   1520c:	bl	148ec <table_get_uint8@@Base>
   15210:	b	151dc <table_cell_to_buffer@@Base+0xb8>
   15214:	mov	r1, r7
   15218:	mov	r0, r6
   1521c:	bl	14848 <table_get_int16@@Base>
   15220:	b	151c4 <table_cell_to_buffer@@Base+0xa0>
   15224:	mov	r1, r7
   15228:	mov	r0, r6
   1522c:	bl	1485c <table_get_uint16@@Base>
   15230:	b	151dc <table_cell_to_buffer@@Base+0xb8>
   15234:	mov	r1, r7
   15238:	mov	r0, r6
   1523c:	bl	14810 <table_get_int32@@Base>
   15240:	b	151c4 <table_cell_to_buffer@@Base+0xa0>
   15244:	mov	r1, r7
   15248:	mov	r0, r6
   1524c:	bl	14824 <table_get_uint32@@Base>
   15250:	b	151dc <table_cell_to_buffer@@Base+0xb8>
   15254:	mov	r1, r7
   15258:	mov	r0, r6
   1525c:	bl	14890 <table_get_int64@@Base>
   15260:	ldr	r2, [pc, #376]	; 153e0 <table_cell_to_buffer@@Base+0x2bc>
   15264:	strd	r0, [sp]
   15268:	mov	r1, r5
   1526c:	mov	r0, r4
   15270:	bl	129c0 <snprintf@plt>
   15274:	mov	r0, #0
   15278:	add	sp, sp, #20
   1527c:	pop	{r4, r5, r6, r7, pc}
   15280:	mov	r1, r7
   15284:	mov	r0, r6
   15288:	bl	148a4 <table_get_uint64@@Base>
   1528c:	strd	r0, [sp]
   15290:	ldr	r2, [pc, #332]	; 153e4 <table_cell_to_buffer@@Base+0x2c0>
   15294:	b	15268 <table_cell_to_buffer@@Base+0x144>
   15298:	mov	r1, r7
   1529c:	mov	r0, r6
   152a0:	bl	14838 <table_get_short@@Base>
   152a4:	ldr	r2, [pc, #316]	; 153e8 <table_cell_to_buffer@@Base+0x2c4>
   152a8:	mov	r3, r0
   152ac:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   152b0:	mov	r1, r7
   152b4:	mov	r0, r6
   152b8:	bl	1484c <table_get_ushort@@Base>
   152bc:	ldr	r2, [pc, #296]	; 153ec <table_cell_to_buffer@@Base+0x2c8>
   152c0:	mov	r3, r0
   152c4:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   152c8:	mov	r1, r7
   152cc:	mov	r0, r6
   152d0:	bl	14860 <table_get_long@@Base>
   152d4:	ldr	r2, [pc, #276]	; 153f0 <table_cell_to_buffer@@Base+0x2cc>
   152d8:	mov	r3, r0
   152dc:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   152e0:	mov	r1, r7
   152e4:	mov	r0, r6
   152e8:	bl	14870 <table_get_ulong@@Base>
   152ec:	ldr	r2, [pc, #256]	; 153f4 <table_cell_to_buffer@@Base+0x2d0>
   152f0:	mov	r3, r0
   152f4:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   152f8:	mov	r1, r7
   152fc:	mov	r0, r6
   15300:	bl	14880 <table_get_llong@@Base>
   15304:	b	15260 <table_cell_to_buffer@@Base+0x13c>
   15308:	mov	r1, r7
   1530c:	mov	r0, r6
   15310:	bl	14894 <table_get_ullong@@Base>
   15314:	b	1528c <table_cell_to_buffer@@Base+0x168>
   15318:	mov	r1, r7
   1531c:	mov	r0, r6
   15320:	bl	148f0 <table_get_string@@Base>
   15324:	ldr	r2, [pc, #204]	; 153f8 <table_cell_to_buffer@@Base+0x2d4>
   15328:	mov	r3, r0
   1532c:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   15330:	mov	r1, r7
   15334:	mov	r0, r6
   15338:	bl	148a8 <table_get_float@@Base>
   1533c:	ldr	r2, [pc, #184]	; 153fc <table_cell_to_buffer@@Base+0x2d8>
   15340:	vcvt.f64.f32	d0, s0
   15344:	vstr	d0, [sp]
   15348:	mov	r1, r5
   1534c:	mov	r0, r4
   15350:	bl	129c0 <snprintf@plt>
   15354:	b	15274 <table_cell_to_buffer@@Base+0x150>
   15358:	mov	r1, r7
   1535c:	mov	r0, r6
   15360:	bl	148b8 <table_get_double@@Base>
   15364:	ldr	r2, [pc, #148]	; 15400 <table_cell_to_buffer@@Base+0x2dc>
   15368:	vstr	d0, [sp]
   1536c:	b	15348 <table_cell_to_buffer@@Base+0x224>
   15370:	mov	r1, r7
   15374:	mov	r0, r6
   15378:	bl	148c8 <table_get_ldouble@@Base>
   1537c:	ldr	r2, [pc, #128]	; 15404 <table_cell_to_buffer@@Base+0x2e0>
   15380:	vstr	d0, [sp]
   15384:	b	15348 <table_cell_to_buffer@@Base+0x224>
   15388:	mov	r1, r7
   1538c:	mov	r0, r6
   15390:	bl	147f0 <table_get_bool@@Base>
   15394:	b	151c4 <table_cell_to_buffer@@Base+0xa0>
   15398:	mov	r1, r7
   1539c:	mov	r0, r6
   153a0:	bl	148e8 <table_get_char@@Base>
   153a4:	mov	r3, r0
   153a8:	ldr	r2, [pc, #88]	; 15408 <table_cell_to_buffer@@Base+0x2e4>
   153ac:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   153b0:	mov	r1, r7
   153b4:	mov	r0, r6
   153b8:	bl	148d8 <table_get_uchar@@Base>
   153bc:	b	153a4 <table_cell_to_buffer@@Base+0x280>
   153c0:	mov	r1, r7
   153c4:	mov	r0, r6
   153c8:	bl	148f4 <table_get_ptr@@Base>
   153cc:	ldr	r2, [pc, #56]	; 1540c <table_cell_to_buffer@@Base+0x2e8>
   153d0:	mov	r3, r0
   153d4:	b	151e4 <table_cell_to_buffer@@Base+0xc0>
   153d8:	andeq	r5, r1, r5, asr #30
   153dc:	andeq	r6, r1, ip, asr r0
   153e0:	andeq	r6, r1, pc, asr r0
   153e4:	andeq	r6, r1, r4, rrx
   153e8:	andeq	r6, r1, r9, rrx
   153ec:	andeq	r6, r1, sp, rrx
   153f0:	andeq	r6, r1, r1, ror r0
   153f4:	andeq	r6, r1, r5, ror r0
   153f8:	andeq	r6, r1, r9, ror r0
   153fc:	andeq	r6, r1, ip, ror r0
   15400:	andeq	r6, r1, pc, ror r0
   15404:	andeq	r6, r1, r3, lsl #1
   15408:	andeq	r6, r1, r7, lsl #1
   1540c:	andeq	r6, r1, sl, lsl #1

00015410 <table_cell_from_buffer@@Base>:
   15410:	push	{r4, r5, r6, r7, lr}
   15414:	mov	r7, r1
   15418:	sub	sp, sp, #268	; 0x10c
   1541c:	mov	r1, r2
   15420:	mov	r6, r0
   15424:	mov	r5, r2
   15428:	mov	r4, r3
   1542c:	bl	13638 <table_get_column_data_type@@Base>
   15430:	cmp	r0, #23
   15434:	ldrls	pc, [pc, r0, lsl #2]
   15438:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   1543c:	muleq	r1, ip, r4
   15440:	ldrdeq	r5, [r1], -r0
   15444:	andeq	r5, r1, r0, lsl #10
   15448:	andeq	r5, r1, r0, lsr r5
   1544c:	andeq	r5, r1, r0, ror #10
   15450:	muleq	r1, r0, r5
   15454:	andeq	r5, r1, r0, asr #11
   15458:	strdeq	r5, [r1], -r0
   1545c:	andeq	r5, r1, r0, lsr #12
   15460:	andeq	r5, r1, r4, asr r6
   15464:	andeq	r5, r1, r8, lsl #13
   15468:			; <UNDEFINED> instruction: 0x000156b8
   1546c:	andeq	r5, r1, r8, ror #13
   15470:	andeq	r5, r1, r8, lsl r7
   15474:	andeq	r5, r1, r8, asr #14
   15478:	andeq	r5, r1, ip, ror r7
   1547c:	andeq	r5, r1, r0, ror #15
   15480:	andeq	r5, r1, r0, lsl r8
   15484:	andeq	r5, r1, r0, asr #16
   15488:	andeq	r5, r1, ip, asr #17
   1548c:	strdeq	r5, [r1], -ip
   15490:			; <UNDEFINED> instruction: 0x000157b0
   15494:	andeq	r5, r1, r0, ror r8
   15498:	andeq	r5, r1, ip, lsr #18
   1549c:	add	r2, sp, #8
   154a0:	ldr	r1, [pc, #1212]	; 15964 <table_cell_from_buffer@@Base+0x554>
   154a4:	mov	r0, r4
   154a8:	bl	129cc <__isoc99_sscanf@plt>
   154ac:	cmp	r0, #1
   154b0:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   154b4:	ldr	r3, [sp, #8]
   154b8:	mov	r2, r5
   154bc:	mov	r1, r7
   154c0:	mov	r0, r6
   154c4:	bl	14e2c <table_set_int@@Base>
   154c8:	mov	r4, #0
   154cc:	b	158c0 <table_cell_from_buffer@@Base+0x4b0>
   154d0:	add	r2, sp, #8
   154d4:	ldr	r1, [pc, #1164]	; 15968 <table_cell_from_buffer@@Base+0x558>
   154d8:	mov	r0, r4
   154dc:	bl	129cc <__isoc99_sscanf@plt>
   154e0:	cmp	r0, #1
   154e4:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   154e8:	ldr	r3, [sp, #8]
   154ec:	mov	r2, r5
   154f0:	mov	r1, r7
   154f4:	mov	r0, r6
   154f8:	bl	14e50 <table_set_uint@@Base>
   154fc:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15500:	add	r2, sp, #8
   15504:	ldr	r1, [pc, #1120]	; 1596c <table_cell_from_buffer@@Base+0x55c>
   15508:	mov	r0, r4
   1550c:	bl	129cc <__isoc99_sscanf@plt>
   15510:	cmp	r0, #1
   15514:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15518:	ldrsb	r3, [sp, #8]
   1551c:	mov	r2, r5
   15520:	mov	r1, r7
   15524:	mov	r0, r6
   15528:	bl	14e74 <table_set_int8@@Base>
   1552c:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15530:	add	r2, sp, #8
   15534:	ldr	r1, [pc, #1076]	; 15970 <table_cell_from_buffer@@Base+0x560>
   15538:	mov	r0, r4
   1553c:	bl	129cc <__isoc99_sscanf@plt>
   15540:	cmp	r0, #1
   15544:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15548:	ldrb	r3, [sp, #8]
   1554c:	mov	r2, r5
   15550:	mov	r1, r7
   15554:	mov	r0, r6
   15558:	bl	14e98 <table_set_uint8@@Base>
   1555c:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15560:	add	r2, sp, #8
   15564:	ldr	r1, [pc, #1032]	; 15974 <table_cell_from_buffer@@Base+0x564>
   15568:	mov	r0, r4
   1556c:	bl	129cc <__isoc99_sscanf@plt>
   15570:	cmp	r0, #1
   15574:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15578:	ldrsh	r3, [sp, #8]
   1557c:	mov	r2, r5
   15580:	mov	r1, r7
   15584:	mov	r0, r6
   15588:	bl	14ebc <table_set_int16@@Base>
   1558c:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15590:	add	r2, sp, #8
   15594:	ldr	r1, [pc, #988]	; 15978 <table_cell_from_buffer@@Base+0x568>
   15598:	mov	r0, r4
   1559c:	bl	129cc <__isoc99_sscanf@plt>
   155a0:	cmp	r0, #1
   155a4:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   155a8:	ldrh	r3, [sp, #8]
   155ac:	mov	r2, r5
   155b0:	mov	r1, r7
   155b4:	mov	r0, r6
   155b8:	bl	14ee0 <table_set_uint16@@Base>
   155bc:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   155c0:	add	r2, sp, #8
   155c4:	ldr	r1, [pc, #920]	; 15964 <table_cell_from_buffer@@Base+0x554>
   155c8:	mov	r0, r4
   155cc:	bl	129cc <__isoc99_sscanf@plt>
   155d0:	cmp	r0, #1
   155d4:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   155d8:	ldr	r3, [sp, #8]
   155dc:	mov	r2, r5
   155e0:	mov	r1, r7
   155e4:	mov	r0, r6
   155e8:	bl	14f04 <table_set_int32@@Base>
   155ec:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   155f0:	add	r2, sp, #8
   155f4:	ldr	r1, [pc, #876]	; 15968 <table_cell_from_buffer@@Base+0x558>
   155f8:	mov	r0, r4
   155fc:	bl	129cc <__isoc99_sscanf@plt>
   15600:	cmp	r0, #1
   15604:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15608:	ldr	r3, [sp, #8]
   1560c:	mov	r2, r5
   15610:	mov	r1, r7
   15614:	mov	r0, r6
   15618:	bl	14f28 <table_set_uint32@@Base>
   1561c:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15620:	add	r2, sp, #8
   15624:	ldr	r1, [pc, #848]	; 1597c <table_cell_from_buffer@@Base+0x56c>
   15628:	mov	r0, r4
   1562c:	bl	129cc <__isoc99_sscanf@plt>
   15630:	cmp	r0, #1
   15634:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15638:	ldrd	r2, [sp, #8]
   1563c:	mov	r1, r7
   15640:	mov	r0, r6
   15644:	strd	r2, [sp]
   15648:	mov	r2, r5
   1564c:	bl	14f4c <table_set_int64@@Base>
   15650:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15654:	add	r2, sp, #8
   15658:	ldr	r1, [pc, #800]	; 15980 <table_cell_from_buffer@@Base+0x570>
   1565c:	mov	r0, r4
   15660:	bl	129cc <__isoc99_sscanf@plt>
   15664:	cmp	r0, #1
   15668:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   1566c:	ldrd	r2, [sp, #8]
   15670:	mov	r1, r7
   15674:	mov	r0, r6
   15678:	strd	r2, [sp]
   1567c:	mov	r2, r5
   15680:	bl	14f68 <table_set_uint64@@Base>
   15684:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15688:	add	r2, sp, #8
   1568c:	ldr	r1, [pc, #736]	; 15974 <table_cell_from_buffer@@Base+0x564>
   15690:	mov	r0, r4
   15694:	bl	129cc <__isoc99_sscanf@plt>
   15698:	cmp	r0, #1
   1569c:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   156a0:	ldrsh	r3, [sp, #8]
   156a4:	mov	r2, r5
   156a8:	mov	r1, r7
   156ac:	mov	r0, r6
   156b0:	bl	14f84 <table_set_short@@Base>
   156b4:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   156b8:	add	r2, sp, #8
   156bc:	ldr	r1, [pc, #692]	; 15978 <table_cell_from_buffer@@Base+0x568>
   156c0:	mov	r0, r4
   156c4:	bl	129cc <__isoc99_sscanf@plt>
   156c8:	cmp	r0, #1
   156cc:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   156d0:	ldrh	r3, [sp, #8]
   156d4:	mov	r2, r5
   156d8:	mov	r1, r7
   156dc:	mov	r0, r6
   156e0:	bl	14fa8 <table_set_ushort@@Base>
   156e4:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   156e8:	add	r2, sp, #8
   156ec:	ldr	r1, [pc, #656]	; 15984 <table_cell_from_buffer@@Base+0x574>
   156f0:	mov	r0, r4
   156f4:	bl	129cc <__isoc99_sscanf@plt>
   156f8:	cmp	r0, #1
   156fc:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15700:	ldr	r3, [sp, #8]
   15704:	mov	r2, r5
   15708:	mov	r1, r7
   1570c:	mov	r0, r6
   15710:	bl	14fcc <table_set_long@@Base>
   15714:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15718:	add	r2, sp, #8
   1571c:	ldr	r1, [pc, #612]	; 15988 <table_cell_from_buffer@@Base+0x578>
   15720:	mov	r0, r4
   15724:	bl	129cc <__isoc99_sscanf@plt>
   15728:	cmp	r0, #1
   1572c:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15730:	ldr	r3, [sp, #8]
   15734:	mov	r2, r5
   15738:	mov	r1, r7
   1573c:	mov	r0, r6
   15740:	bl	14ff0 <table_set_ulong@@Base>
   15744:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15748:	add	r2, sp, #8
   1574c:	ldr	r1, [pc, #552]	; 1597c <table_cell_from_buffer@@Base+0x56c>
   15750:	mov	r0, r4
   15754:	bl	129cc <__isoc99_sscanf@plt>
   15758:	cmp	r0, #1
   1575c:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15760:	ldrd	r2, [sp, #8]
   15764:	mov	r1, r7
   15768:	mov	r0, r6
   1576c:	strd	r2, [sp]
   15770:	mov	r2, r5
   15774:	bl	15014 <table_set_llong@@Base>
   15778:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   1577c:	add	r2, sp, #8
   15780:	ldr	r1, [pc, #504]	; 15980 <table_cell_from_buffer@@Base+0x570>
   15784:	mov	r0, r4
   15788:	bl	129cc <__isoc99_sscanf@plt>
   1578c:	cmp	r0, #1
   15790:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15794:	ldrd	r2, [sp, #8]
   15798:	mov	r1, r7
   1579c:	mov	r0, r6
   157a0:	strd	r2, [sp]
   157a4:	mov	r2, r5
   157a8:	bl	15030 <table_set_ullong@@Base>
   157ac:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   157b0:	add	r2, sp, #8
   157b4:	ldr	r1, [pc, #464]	; 1598c <table_cell_from_buffer@@Base+0x57c>
   157b8:	mov	r0, r4
   157bc:	bl	129cc <__isoc99_sscanf@plt>
   157c0:	cmp	r0, #1
   157c4:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   157c8:	add	r3, sp, #8
   157cc:	mov	r2, r5
   157d0:	mov	r1, r7
   157d4:	mov	r0, r6
   157d8:	bl	150ac <table_set_string@@Base>
   157dc:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   157e0:	add	r2, sp, #8
   157e4:	ldr	r1, [pc, #420]	; 15990 <table_cell_from_buffer@@Base+0x580>
   157e8:	mov	r0, r4
   157ec:	bl	129cc <__isoc99_sscanf@plt>
   157f0:	cmp	r0, #1
   157f4:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   157f8:	vldr	s0, [sp, #8]
   157fc:	mov	r2, r5
   15800:	mov	r1, r7
   15804:	mov	r0, r6
   15808:	bl	1504c <table_set_float@@Base>
   1580c:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15810:	add	r2, sp, #8
   15814:	ldr	r1, [pc, #376]	; 15994 <table_cell_from_buffer@@Base+0x584>
   15818:	mov	r0, r4
   1581c:	bl	129cc <__isoc99_sscanf@plt>
   15820:	cmp	r0, #1
   15824:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15828:	vldr	d0, [sp, #8]
   1582c:	mov	r2, r5
   15830:	mov	r1, r7
   15834:	mov	r0, r6
   15838:	bl	1506c <table_set_double@@Base>
   1583c:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15840:	add	r2, sp, #8
   15844:	ldr	r1, [pc, #332]	; 15998 <table_cell_from_buffer@@Base+0x588>
   15848:	mov	r0, r4
   1584c:	bl	129cc <__isoc99_sscanf@plt>
   15850:	cmp	r0, #1
   15854:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15858:	vldr	d0, [sp, #8]
   1585c:	mov	r2, r5
   15860:	mov	r1, r7
   15864:	mov	r0, r6
   15868:	bl	1508c <table_set_ldouble@@Base>
   1586c:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   15870:	add	r2, sp, #8
   15874:	ldr	r1, [pc, #232]	; 15964 <table_cell_from_buffer@@Base+0x554>
   15878:	mov	r0, r4
   1587c:	bl	129cc <__isoc99_sscanf@plt>
   15880:	cmp	r0, #1
   15884:	mov	r3, r0
   15888:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   1588c:	ldr	r4, [sp, #8]
   15890:	cmp	r4, #0
   15894:	beq	158ac <table_cell_from_buffer@@Base+0x49c>
   15898:	mov	r2, r5
   1589c:	mov	r1, r7
   158a0:	mov	r0, r6
   158a4:	bl	14e08 <table_set_bool@@Base>
   158a8:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   158ac:	mov	r3, r4
   158b0:	mov	r2, r5
   158b4:	mov	r1, r7
   158b8:	mov	r0, r6
   158bc:	bl	14e08 <table_set_bool@@Base>
   158c0:	mov	r0, r4
   158c4:	add	sp, sp, #268	; 0x10c
   158c8:	pop	{r4, r5, r6, r7, pc}
   158cc:	add	r2, sp, #8
   158d0:	ldr	r1, [pc, #196]	; 1599c <table_cell_from_buffer@@Base+0x58c>
   158d4:	mov	r0, r4
   158d8:	bl	129cc <__isoc99_sscanf@plt>
   158dc:	cmp	r0, #1
   158e0:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   158e4:	ldrb	r3, [sp, #8]
   158e8:	mov	r2, r5
   158ec:	mov	r1, r7
   158f0:	mov	r0, r6
   158f4:	bl	150c4 <table_set_char@@Base>
   158f8:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   158fc:	add	r2, sp, #8
   15900:	ldr	r1, [pc, #148]	; 1599c <table_cell_from_buffer@@Base+0x58c>
   15904:	mov	r0, r4
   15908:	bl	129cc <__isoc99_sscanf@plt>
   1590c:	cmp	r0, #1
   15910:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15914:	ldrb	r3, [sp, #8]
   15918:	mov	r2, r5
   1591c:	mov	r1, r7
   15920:	mov	r0, r6
   15924:	bl	150e8 <table_set_uchar@@Base>
   15928:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   1592c:	add	r2, sp, #8
   15930:	ldr	r1, [pc, #104]	; 159a0 <table_cell_from_buffer@@Base+0x590>
   15934:	mov	r0, r4
   15938:	bl	129cc <__isoc99_sscanf@plt>
   1593c:	cmp	r0, #1
   15940:	bne	1595c <table_cell_from_buffer@@Base+0x54c>
   15944:	ldr	r3, [sp, #8]
   15948:	mov	r2, r5
   1594c:	mov	r1, r7
   15950:	mov	r0, r6
   15954:	bl	1510c <table_set_ptr@@Base>
   15958:	b	154c8 <table_cell_from_buffer@@Base+0xb8>
   1595c:	mvn	r4, #0
   15960:	b	158c0 <table_cell_from_buffer@@Base+0x4b0>
   15964:	andeq	r5, r1, r5, asr #30
   15968:	andeq	r6, r1, ip, asr r0
   1596c:	andeq	r6, r1, sp, lsl #1
   15970:	muleq	r1, r2, r0
   15974:	andeq	r6, r1, r9, rrx
   15978:	andeq	r6, r1, sp, rrx
   1597c:	andeq	r6, r1, pc, asr r0
   15980:	andeq	r6, r1, r4, rrx
   15984:	andeq	r6, r1, r1, ror r0
   15988:	andeq	r6, r1, r5, ror r0
   1598c:	andeq	r6, r1, r9, ror r0
   15990:	andeq	r6, r1, ip, ror r0
   15994:	andeq	r6, r1, pc, ror r0
   15998:	andeq	r6, r1, r3, lsl #1
   1599c:	andeq	r6, r1, r7, lsl #1
   159a0:	andeq	r6, r1, sl, lsl #1

000159a4 <table_get_cell_ptr@@Base>:
   159a4:	push	{r4, lr}
   159a8:	mov	r4, r2
   159ac:	bl	14b0c <table_get_row_ptr@@Base>
   159b0:	ldr	r0, [r0]
   159b4:	add	r0, r0, r4, lsl #2
   159b8:	pop	{r4, pc}

000159bc <table_cell_init@@Base>:
   159bc:	push	{r4, lr}
   159c0:	bl	159a4 <table_get_cell_ptr@@Base>
   159c4:	mov	r3, #0
   159c8:	str	r3, [r0]
   159cc:	pop	{r4, pc}

000159d0 <table_cell_destroy@@Base>:
   159d0:	push	{r4, r5, r6, lr}
   159d4:	mov	r6, r1
   159d8:	mov	r1, r2
   159dc:	mov	r5, r0
   159e0:	mov	r4, r2
   159e4:	bl	13638 <table_get_column_data_type@@Base>
   159e8:	cmp	r0, #23
   159ec:	popeq	{r4, r5, r6, pc}
   159f0:	mov	r2, r4
   159f4:	mov	r1, r6
   159f8:	mov	r0, r5
   159fc:	bl	159a4 <table_get_cell_ptr@@Base>
   15a00:	ldr	r0, [r0]
   15a04:	cmp	r0, #0
   15a08:	popeq	{r4, r5, r6, pc}
   15a0c:	pop	{r4, r5, r6, lr}
   15a10:	b	1296c <free@plt>

00015a14 <table_cell_nullify@@Base>:
   15a14:	push	{r4, lr}
   15a18:	bl	159a4 <table_get_cell_ptr@@Base>
   15a1c:	mov	r4, r0
   15a20:	ldr	r0, [r0]
   15a24:	cmp	r0, #0
   15a28:	beq	15a38 <table_cell_nullify@@Base+0x24>
   15a2c:	bl	1296c <free@plt>
   15a30:	mov	r3, #0
   15a34:	str	r3, [r4]
   15a38:	mov	r0, #0
   15a3c:	pop	{r4, pc}
   15a40:	subs	r2, r1, #1
   15a44:	bxeq	lr
   15a48:	bcc	15c20 <table_cell_nullify@@Base+0x20c>
   15a4c:	cmp	r0, r1
   15a50:	bls	15c04 <table_cell_nullify@@Base+0x1f0>
   15a54:	tst	r1, r2
   15a58:	beq	15c10 <table_cell_nullify@@Base+0x1fc>
   15a5c:	clz	r3, r0
   15a60:	clz	r2, r1
   15a64:	sub	r3, r2, r3
   15a68:	rsbs	r3, r3, #31
   15a6c:	addne	r3, r3, r3, lsl #1
   15a70:	mov	r2, #0
   15a74:	addne	pc, pc, r3, lsl #2
   15a78:	nop			; (mov r0, r0)
   15a7c:	cmp	r0, r1, lsl #31
   15a80:	adc	r2, r2, r2
   15a84:	subcs	r0, r0, r1, lsl #31
   15a88:	cmp	r0, r1, lsl #30
   15a8c:	adc	r2, r2, r2
   15a90:	subcs	r0, r0, r1, lsl #30
   15a94:	cmp	r0, r1, lsl #29
   15a98:	adc	r2, r2, r2
   15a9c:	subcs	r0, r0, r1, lsl #29
   15aa0:	cmp	r0, r1, lsl #28
   15aa4:	adc	r2, r2, r2
   15aa8:	subcs	r0, r0, r1, lsl #28
   15aac:	cmp	r0, r1, lsl #27
   15ab0:	adc	r2, r2, r2
   15ab4:	subcs	r0, r0, r1, lsl #27
   15ab8:	cmp	r0, r1, lsl #26
   15abc:	adc	r2, r2, r2
   15ac0:	subcs	r0, r0, r1, lsl #26
   15ac4:	cmp	r0, r1, lsl #25
   15ac8:	adc	r2, r2, r2
   15acc:	subcs	r0, r0, r1, lsl #25
   15ad0:	cmp	r0, r1, lsl #24
   15ad4:	adc	r2, r2, r2
   15ad8:	subcs	r0, r0, r1, lsl #24
   15adc:	cmp	r0, r1, lsl #23
   15ae0:	adc	r2, r2, r2
   15ae4:	subcs	r0, r0, r1, lsl #23
   15ae8:	cmp	r0, r1, lsl #22
   15aec:	adc	r2, r2, r2
   15af0:	subcs	r0, r0, r1, lsl #22
   15af4:	cmp	r0, r1, lsl #21
   15af8:	adc	r2, r2, r2
   15afc:	subcs	r0, r0, r1, lsl #21
   15b00:	cmp	r0, r1, lsl #20
   15b04:	adc	r2, r2, r2
   15b08:	subcs	r0, r0, r1, lsl #20
   15b0c:	cmp	r0, r1, lsl #19
   15b10:	adc	r2, r2, r2
   15b14:	subcs	r0, r0, r1, lsl #19
   15b18:	cmp	r0, r1, lsl #18
   15b1c:	adc	r2, r2, r2
   15b20:	subcs	r0, r0, r1, lsl #18
   15b24:	cmp	r0, r1, lsl #17
   15b28:	adc	r2, r2, r2
   15b2c:	subcs	r0, r0, r1, lsl #17
   15b30:	cmp	r0, r1, lsl #16
   15b34:	adc	r2, r2, r2
   15b38:	subcs	r0, r0, r1, lsl #16
   15b3c:	cmp	r0, r1, lsl #15
   15b40:	adc	r2, r2, r2
   15b44:	subcs	r0, r0, r1, lsl #15
   15b48:	cmp	r0, r1, lsl #14
   15b4c:	adc	r2, r2, r2
   15b50:	subcs	r0, r0, r1, lsl #14
   15b54:	cmp	r0, r1, lsl #13
   15b58:	adc	r2, r2, r2
   15b5c:	subcs	r0, r0, r1, lsl #13
   15b60:	cmp	r0, r1, lsl #12
   15b64:	adc	r2, r2, r2
   15b68:	subcs	r0, r0, r1, lsl #12
   15b6c:	cmp	r0, r1, lsl #11
   15b70:	adc	r2, r2, r2
   15b74:	subcs	r0, r0, r1, lsl #11
   15b78:	cmp	r0, r1, lsl #10
   15b7c:	adc	r2, r2, r2
   15b80:	subcs	r0, r0, r1, lsl #10
   15b84:	cmp	r0, r1, lsl #9
   15b88:	adc	r2, r2, r2
   15b8c:	subcs	r0, r0, r1, lsl #9
   15b90:	cmp	r0, r1, lsl #8
   15b94:	adc	r2, r2, r2
   15b98:	subcs	r0, r0, r1, lsl #8
   15b9c:	cmp	r0, r1, lsl #7
   15ba0:	adc	r2, r2, r2
   15ba4:	subcs	r0, r0, r1, lsl #7
   15ba8:	cmp	r0, r1, lsl #6
   15bac:	adc	r2, r2, r2
   15bb0:	subcs	r0, r0, r1, lsl #6
   15bb4:	cmp	r0, r1, lsl #5
   15bb8:	adc	r2, r2, r2
   15bbc:	subcs	r0, r0, r1, lsl #5
   15bc0:	cmp	r0, r1, lsl #4
   15bc4:	adc	r2, r2, r2
   15bc8:	subcs	r0, r0, r1, lsl #4
   15bcc:	cmp	r0, r1, lsl #3
   15bd0:	adc	r2, r2, r2
   15bd4:	subcs	r0, r0, r1, lsl #3
   15bd8:	cmp	r0, r1, lsl #2
   15bdc:	adc	r2, r2, r2
   15be0:	subcs	r0, r0, r1, lsl #2
   15be4:	cmp	r0, r1, lsl #1
   15be8:	adc	r2, r2, r2
   15bec:	subcs	r0, r0, r1, lsl #1
   15bf0:	cmp	r0, r1
   15bf4:	adc	r2, r2, r2
   15bf8:	subcs	r0, r0, r1
   15bfc:	mov	r0, r2
   15c00:	bx	lr
   15c04:	moveq	r0, #1
   15c08:	movne	r0, #0
   15c0c:	bx	lr
   15c10:	clz	r2, r1
   15c14:	rsb	r2, r2, #31
   15c18:	lsr	r0, r0, r2
   15c1c:	bx	lr
   15c20:	cmp	r0, #0
   15c24:	mvnne	r0, #0
   15c28:	b	15e8c <table_cell_nullify@@Base+0x478>
   15c2c:	cmp	r1, #0
   15c30:	beq	15c20 <table_cell_nullify@@Base+0x20c>
   15c34:	push	{r0, r1, lr}
   15c38:	bl	15a40 <table_cell_nullify@@Base+0x2c>
   15c3c:	pop	{r1, r2, lr}
   15c40:	mul	r3, r2, r0
   15c44:	sub	r1, r1, r3
   15c48:	bx	lr
   15c4c:	cmp	r1, #0
   15c50:	beq	15e5c <table_cell_nullify@@Base+0x448>
   15c54:	eor	ip, r0, r1
   15c58:	rsbmi	r1, r1, #0
   15c5c:	subs	r2, r1, #1
   15c60:	beq	15e28 <table_cell_nullify@@Base+0x414>
   15c64:	movs	r3, r0
   15c68:	rsbmi	r3, r0, #0
   15c6c:	cmp	r3, r1
   15c70:	bls	15e34 <table_cell_nullify@@Base+0x420>
   15c74:	tst	r1, r2
   15c78:	beq	15e44 <table_cell_nullify@@Base+0x430>
   15c7c:	clz	r2, r3
   15c80:	clz	r0, r1
   15c84:	sub	r2, r0, r2
   15c88:	rsbs	r2, r2, #31
   15c8c:	addne	r2, r2, r2, lsl #1
   15c90:	mov	r0, #0
   15c94:	addne	pc, pc, r2, lsl #2
   15c98:	nop			; (mov r0, r0)
   15c9c:	cmp	r3, r1, lsl #31
   15ca0:	adc	r0, r0, r0
   15ca4:	subcs	r3, r3, r1, lsl #31
   15ca8:	cmp	r3, r1, lsl #30
   15cac:	adc	r0, r0, r0
   15cb0:	subcs	r3, r3, r1, lsl #30
   15cb4:	cmp	r3, r1, lsl #29
   15cb8:	adc	r0, r0, r0
   15cbc:	subcs	r3, r3, r1, lsl #29
   15cc0:	cmp	r3, r1, lsl #28
   15cc4:	adc	r0, r0, r0
   15cc8:	subcs	r3, r3, r1, lsl #28
   15ccc:	cmp	r3, r1, lsl #27
   15cd0:	adc	r0, r0, r0
   15cd4:	subcs	r3, r3, r1, lsl #27
   15cd8:	cmp	r3, r1, lsl #26
   15cdc:	adc	r0, r0, r0
   15ce0:	subcs	r3, r3, r1, lsl #26
   15ce4:	cmp	r3, r1, lsl #25
   15ce8:	adc	r0, r0, r0
   15cec:	subcs	r3, r3, r1, lsl #25
   15cf0:	cmp	r3, r1, lsl #24
   15cf4:	adc	r0, r0, r0
   15cf8:	subcs	r3, r3, r1, lsl #24
   15cfc:	cmp	r3, r1, lsl #23
   15d00:	adc	r0, r0, r0
   15d04:	subcs	r3, r3, r1, lsl #23
   15d08:	cmp	r3, r1, lsl #22
   15d0c:	adc	r0, r0, r0
   15d10:	subcs	r3, r3, r1, lsl #22
   15d14:	cmp	r3, r1, lsl #21
   15d18:	adc	r0, r0, r0
   15d1c:	subcs	r3, r3, r1, lsl #21
   15d20:	cmp	r3, r1, lsl #20
   15d24:	adc	r0, r0, r0
   15d28:	subcs	r3, r3, r1, lsl #20
   15d2c:	cmp	r3, r1, lsl #19
   15d30:	adc	r0, r0, r0
   15d34:	subcs	r3, r3, r1, lsl #19
   15d38:	cmp	r3, r1, lsl #18
   15d3c:	adc	r0, r0, r0
   15d40:	subcs	r3, r3, r1, lsl #18
   15d44:	cmp	r3, r1, lsl #17
   15d48:	adc	r0, r0, r0
   15d4c:	subcs	r3, r3, r1, lsl #17
   15d50:	cmp	r3, r1, lsl #16
   15d54:	adc	r0, r0, r0
   15d58:	subcs	r3, r3, r1, lsl #16
   15d5c:	cmp	r3, r1, lsl #15
   15d60:	adc	r0, r0, r0
   15d64:	subcs	r3, r3, r1, lsl #15
   15d68:	cmp	r3, r1, lsl #14
   15d6c:	adc	r0, r0, r0
   15d70:	subcs	r3, r3, r1, lsl #14
   15d74:	cmp	r3, r1, lsl #13
   15d78:	adc	r0, r0, r0
   15d7c:	subcs	r3, r3, r1, lsl #13
   15d80:	cmp	r3, r1, lsl #12
   15d84:	adc	r0, r0, r0
   15d88:	subcs	r3, r3, r1, lsl #12
   15d8c:	cmp	r3, r1, lsl #11
   15d90:	adc	r0, r0, r0
   15d94:	subcs	r3, r3, r1, lsl #11
   15d98:	cmp	r3, r1, lsl #10
   15d9c:	adc	r0, r0, r0
   15da0:	subcs	r3, r3, r1, lsl #10
   15da4:	cmp	r3, r1, lsl #9
   15da8:	adc	r0, r0, r0
   15dac:	subcs	r3, r3, r1, lsl #9
   15db0:	cmp	r3, r1, lsl #8
   15db4:	adc	r0, r0, r0
   15db8:	subcs	r3, r3, r1, lsl #8
   15dbc:	cmp	r3, r1, lsl #7
   15dc0:	adc	r0, r0, r0
   15dc4:	subcs	r3, r3, r1, lsl #7
   15dc8:	cmp	r3, r1, lsl #6
   15dcc:	adc	r0, r0, r0
   15dd0:	subcs	r3, r3, r1, lsl #6
   15dd4:	cmp	r3, r1, lsl #5
   15dd8:	adc	r0, r0, r0
   15ddc:	subcs	r3, r3, r1, lsl #5
   15de0:	cmp	r3, r1, lsl #4
   15de4:	adc	r0, r0, r0
   15de8:	subcs	r3, r3, r1, lsl #4
   15dec:	cmp	r3, r1, lsl #3
   15df0:	adc	r0, r0, r0
   15df4:	subcs	r3, r3, r1, lsl #3
   15df8:	cmp	r3, r1, lsl #2
   15dfc:	adc	r0, r0, r0
   15e00:	subcs	r3, r3, r1, lsl #2
   15e04:	cmp	r3, r1, lsl #1
   15e08:	adc	r0, r0, r0
   15e0c:	subcs	r3, r3, r1, lsl #1
   15e10:	cmp	r3, r1
   15e14:	adc	r0, r0, r0
   15e18:	subcs	r3, r3, r1
   15e1c:	cmp	ip, #0
   15e20:	rsbmi	r0, r0, #0
   15e24:	bx	lr
   15e28:	teq	ip, r0
   15e2c:	rsbmi	r0, r0, #0
   15e30:	bx	lr
   15e34:	movcc	r0, #0
   15e38:	asreq	r0, ip, #31
   15e3c:	orreq	r0, r0, #1
   15e40:	bx	lr
   15e44:	clz	r2, r1
   15e48:	rsb	r2, r2, #31
   15e4c:	cmp	ip, #0
   15e50:	lsr	r0, r3, r2
   15e54:	rsbmi	r0, r0, #0
   15e58:	bx	lr
   15e5c:	cmp	r0, #0
   15e60:	mvngt	r0, #-2147483648	; 0x80000000
   15e64:	movlt	r0, #-2147483648	; 0x80000000
   15e68:	b	15e8c <table_cell_nullify@@Base+0x478>
   15e6c:	cmp	r1, #0
   15e70:	beq	15e5c <table_cell_nullify@@Base+0x448>
   15e74:	push	{r0, r1, lr}
   15e78:	bl	15c54 <table_cell_nullify@@Base+0x240>
   15e7c:	pop	{r1, r2, lr}
   15e80:	mul	r3, r2, r0
   15e84:	sub	r1, r1, r3
   15e88:	bx	lr
   15e8c:	push	{r1, lr}
   15e90:	mov	r0, #8
   15e94:	bl	12948 <raise@plt>
   15e98:	pop	{r1, pc}

00015e9c <__libc_csu_init@@Base>:
   15e9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ea0:	mov	r7, r0
   15ea4:	ldr	r6, [pc, #72]	; 15ef4 <__libc_csu_init@@Base+0x58>
   15ea8:	ldr	r5, [pc, #72]	; 15ef8 <__libc_csu_init@@Base+0x5c>
   15eac:	add	r6, pc, r6
   15eb0:	add	r5, pc, r5
   15eb4:	sub	r6, r6, r5
   15eb8:	mov	r8, r1
   15ebc:	mov	r9, r2
   15ec0:	bl	12928 <raise@plt-0x20>
   15ec4:	asrs	r6, r6, #2
   15ec8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ecc:	mov	r4, #0
   15ed0:	add	r4, r4, #1
   15ed4:	ldr	r3, [r5], #4
   15ed8:	mov	r2, r9
   15edc:	mov	r1, r8
   15ee0:	mov	r0, r7
   15ee4:	blx	r3
   15ee8:	cmp	r6, r4
   15eec:	bne	15ed0 <__libc_csu_init@@Base+0x34>
   15ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ef4:	andeq	r1, r1, ip, asr r0
   15ef8:	andeq	r1, r1, r4, asr r0

00015efc <__libc_csu_fini@@Base>:
   15efc:	bx	lr

Disassembly of section .fini:

00015f00 <.fini>:
   15f00:	push	{r3, lr}
   15f04:	pop	{r3, pc}
