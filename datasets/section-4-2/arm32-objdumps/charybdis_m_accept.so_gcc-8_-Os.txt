
../repos/charybdis/modules/.libs/m_accept.so:     file format elf32-littlearm


Disassembly of section .init:

000005ac <_init>:
 5ac:	push	{r3, lr}
 5b0:	bl	674 <call_weak_fn>
 5b4:	pop	{r3, pc}

Disassembly of section .plt:

000005b8 <.plt>:
 5b8:	push	{lr}		; (str lr, [sp, #-4]!)
 5bc:	ldr	lr, [pc, #4]	; 5c8 <.plt+0x10>
 5c0:	add	lr, pc, lr
 5c4:	ldr	pc, [lr, #8]!
 5c8:	.word	0x00011a38

000005cc <__cxa_finalize@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #69632	; 0x11000
 5d4:	ldr	pc, [ip, #2616]!	; 0xa38

000005d8 <sendto_one@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #69632	; 0x11000
 5e0:	ldr	pc, [ip, #2608]!	; 0xa30

000005e4 <rb_free_rb_dlink_node@plt>:
 5e4:	add	ip, pc, #0, 12
 5e8:	add	ip, ip, #69632	; 0x11000
 5ec:	ldr	pc, [ip, #2600]!	; 0xa28

000005f0 <strcat@plt>:
 5f0:	add	ip, pc, #0, 12
 5f4:	add	ip, ip, #69632	; 0x11000
 5f8:	ldr	pc, [ip, #2592]!	; 0xa20

000005fc <strcpy@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #69632	; 0x11000
 604:	ldr	pc, [ip, #2584]!	; 0xa18

00000608 <__gmon_start__@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #69632	; 0x11000
 610:	ldr	pc, [ip, #2576]!	; 0xa10

00000614 <rb_make_rb_dlink_node@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #69632	; 0x11000
 61c:	ldr	pc, [ip, #2568]!	; 0xa08

00000620 <sendto_one_numeric@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #69632	; 0x11000
 628:	ldr	pc, [ip, #2560]!	; 0xa00

0000062c <strlen@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #69632	; 0x11000
 634:	ldr	pc, [ip, #2552]!	; 0x9f8

00000638 <snprintf@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2544]!	; 0x9f0

00000644 <rb_strtok_r@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2536]!	; 0x9e8

00000650 <find_named_person@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2528]!	; 0x9e0

0000065c <strncat@plt>:
 65c:	add	ip, pc, #0, 12
 660:	add	ip, ip, #69632	; 0x11000
 664:	ldr	pc, [ip, #2520]!	; 0x9d8

00000668 <__assert_fail@plt>:
 668:	add	ip, pc, #0, 12
 66c:	add	ip, ip, #69632	; 0x11000
 670:	ldr	pc, [ip, #2512]!	; 0x9d0

Disassembly of section .text:

00000674 <call_weak_fn>:
 674:	ldr	r3, [pc, #20]	; 690 <call_weak_fn+0x1c>
 678:	ldr	r2, [pc, #20]	; 694 <call_weak_fn+0x20>
 67c:	add	r3, pc, r3
 680:	ldr	r2, [r3, r2]
 684:	cmp	r2, #0
 688:	bxeq	lr
 68c:	b	608 <__gmon_start__@plt>
 690:	.word	0x0001197c
 694:	.word	0x0000004c

00000698 <deregister_tm_clones>:
 698:	ldr	r0, [pc, #44]	; 6cc <deregister_tm_clones+0x34>
 69c:	ldr	r3, [pc, #44]	; 6d0 <deregister_tm_clones+0x38>
 6a0:	add	r0, pc, r0
 6a4:	add	r3, pc, r3
 6a8:	cmp	r3, r0
 6ac:	ldr	r3, [pc, #32]	; 6d4 <deregister_tm_clones+0x3c>
 6b0:	add	r3, pc, r3
 6b4:	bxeq	lr
 6b8:	ldr	r2, [pc, #24]	; 6d8 <deregister_tm_clones+0x40>
 6bc:	ldr	r3, [r3, r2]
 6c0:	cmp	r3, #0
 6c4:	bxeq	lr
 6c8:	bx	r3
 6cc:	.word	0x00011a2c
 6d0:	.word	0x00011a28
 6d4:	.word	0x00011948
 6d8:	.word	0x00000048

000006dc <register_tm_clones>:
 6dc:	ldr	r0, [pc, #56]	; 71c <register_tm_clones+0x40>
 6e0:	ldr	r3, [pc, #56]	; 720 <register_tm_clones+0x44>
 6e4:	add	r0, pc, r0
 6e8:	add	r3, pc, r3
 6ec:	sub	r1, r3, r0
 6f0:	ldr	r3, [pc, #44]	; 724 <register_tm_clones+0x48>
 6f4:	asr	r1, r1, #2
 6f8:	add	r3, pc, r3
 6fc:	add	r1, r1, r1, lsr #31
 700:	asrs	r1, r1, #1
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <register_tm_clones+0x4c>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000119e8
 720:	.word	0x000119e4
 724:	.word	0x00011900
 728:	.word	0x00000050

0000072c <__do_global_dtors_aux>:
 72c:	ldr	r3, [pc, #76]	; 780 <__do_global_dtors_aux+0x54>
 730:	ldr	r2, [pc, #76]	; 784 <__do_global_dtors_aux+0x58>
 734:	add	r3, pc, r3
 738:	add	r2, pc, r2
 73c:	ldrb	r3, [r3]
 740:	cmp	r3, #0
 744:	bxne	lr
 748:	ldr	r3, [pc, #56]	; 788 <__do_global_dtors_aux+0x5c>
 74c:	push	{r4, lr}
 750:	ldr	r3, [r2, r3]
 754:	cmp	r3, #0
 758:	beq	768 <__do_global_dtors_aux+0x3c>
 75c:	ldr	r3, [pc, #40]	; 78c <__do_global_dtors_aux+0x60>
 760:	ldr	r0, [pc, r3]
 764:	bl	5cc <__cxa_finalize@plt>
 768:	bl	698 <deregister_tm_clones>
 76c:	ldr	r3, [pc, #28]	; 790 <__do_global_dtors_aux+0x64>
 770:	mov	r2, #1
 774:	add	r3, pc, r3
 778:	strb	r2, [r3]
 77c:	pop	{r4, pc}
 780:	.word	0x00011998
 784:	.word	0x000118c0
 788:	.word	0x00000044
 78c:	.word	0x000118f4
 790:	.word	0x00011958

00000794 <frame_dummy>:
 794:	b	6dc <register_tm_clones>

00000798 <list_accepts>:
 798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 79c:	mov	r4, #0
 7a0:	sub	sp, sp, #540	; 0x21c
 7a4:	add	r8, r0, #88	; 0x58
 7a8:	mov	r6, r0
 7ac:	mov	r0, r8
 7b0:	mov	r5, r4
 7b4:	strb	r4, [sp, #24]
 7b8:	add	fp, sp, #24
 7bc:	bl	62c <strlen@plt>
 7c0:	add	r3, r0, #10
 7c4:	ldr	sl, [pc, #272]	; 8dc <list_accepts+0x144>
 7c8:	str	r3, [sp, #12]
 7cc:	ldr	r3, [r6, #432]	; 0x1b0
 7d0:	add	sl, pc, sl
 7d4:	ldr	r9, [r3, #316]	; 0x13c
 7d8:	ldr	r3, [pc, #256]	; 8e0 <list_accepts+0x148>
 7dc:	add	r3, pc, r3
 7e0:	str	r3, [sp, #16]
 7e4:	ldr	r3, [pc, #248]	; 8e4 <list_accepts+0x14c>
 7e8:	add	r3, pc, r3
 7ec:	str	r3, [sp, #20]
 7f0:	cmp	r9, #0
 7f4:	bne	84c <list_accepts+0xb4>
 7f8:	ldrb	r3, [sp, #24]
 7fc:	cmp	r3, #0
 800:	ldr	r3, [pc, #224]	; 8e8 <list_accepts+0x150>
 804:	ldr	r4, [sl, r3]
 808:	beq	82c <list_accepts+0x94>
 80c:	add	r3, sp, #24
 810:	add	r2, r4, #88	; 0x58
 814:	ldr	r1, [pc, #208]	; 8ec <list_accepts+0x154>
 818:	mov	r0, r6
 81c:	str	r3, [sp]
 820:	mov	r3, r8
 824:	add	r1, pc, r1
 828:	bl	5d8 <sendto_one@plt>
 82c:	ldr	r1, [pc, #188]	; 8f0 <list_accepts+0x158>
 830:	mov	r3, r8
 834:	add	r2, r4, #88	; 0x58
 838:	mov	r0, r6
 83c:	add	r1, pc, r1
 840:	bl	5d8 <sendto_one@plt>
 844:	add	sp, sp, #540	; 0x21c
 848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 84c:	ldr	r7, [r9]
 850:	cmp	r7, #0
 854:	beq	8d4 <list_accepts+0x13c>
 858:	add	r7, r7, #88	; 0x58
 85c:	mov	r0, r7
 860:	bl	62c <strlen@plt>
 864:	ldr	r3, [sp, #12]
 868:	cmp	r4, #14
 86c:	add	r3, r5, r3
 870:	add	r0, r3, r0
 874:	movle	r3, #0
 878:	movgt	r3, #1
 87c:	cmp	r0, #512	; 0x200
 880:	orrhi	r3, r3, #1
 884:	cmp	r3, #0
 888:	beq	8b8 <list_accepts+0x120>
 88c:	ldr	r3, [pc, #84]	; 8e8 <list_accepts+0x150>
 890:	mov	r4, #0
 894:	mov	r0, r6
 898:	mov	r5, r4
 89c:	ldr	r1, [sp, #20]
 8a0:	ldr	r2, [sl, r3]
 8a4:	mov	r3, r8
 8a8:	str	fp, [sp]
 8ac:	add	r2, r2, #88	; 0x58
 8b0:	bl	5d8 <sendto_one@plt>
 8b4:	strb	r4, [sp, #24]
 8b8:	rsb	r1, r5, #512	; 0x200
 8bc:	add	r0, fp, r5
 8c0:	ldr	r2, [sp, #16]
 8c4:	mov	r3, r7
 8c8:	add	r4, r4, #1
 8cc:	bl	638 <snprintf@plt>
 8d0:	add	r5, r5, r0
 8d4:	ldr	r9, [r9, #8]
 8d8:	b	7f0 <list_accepts+0x58>
 8dc:	.word	0x00011828
 8e0:	.word	0x0000082b
 8e4:	.word	0x00000811
 8e8:	.word	0x00000054
 8ec:	.word	0x000007d5
 8f0:	.word	0x000007cf

000008f4 <rb_dlinkFind>:
 8f4:	cmp	r1, #0
 8f8:	push	{r4, lr}
 8fc:	bne	920 <rb_dlinkFind+0x2c>
 900:	ldr	r3, [pc, #100]	; 96c <rb_dlinkFind+0x78>
 904:	movw	r2, #310	; 0x136
 908:	ldr	r1, [pc, #96]	; 970 <rb_dlinkFind+0x7c>
 90c:	ldr	r0, [pc, #96]	; 974 <rb_dlinkFind+0x80>
 910:	add	r3, pc, r3
 914:	add	r1, pc, r1
 918:	add	r0, pc, r0
 91c:	bl	668 <__assert_fail@plt>
 920:	cmp	r0, #0
 924:	ldrne	r3, [r1]
 928:	bne	95c <rb_dlinkFind+0x68>
 92c:	ldr	r3, [pc, #68]	; 978 <rb_dlinkFind+0x84>
 930:	movw	r2, #311	; 0x137
 934:	ldr	r1, [pc, #64]	; 97c <rb_dlinkFind+0x88>
 938:	ldr	r0, [pc, #64]	; 980 <rb_dlinkFind+0x8c>
 93c:	add	r3, pc, r3
 940:	add	r1, pc, r1
 944:	add	r0, pc, r0
 948:	b	91c <rb_dlinkFind+0x28>
 94c:	ldr	r2, [r3]
 950:	cmp	r2, r0
 954:	beq	964 <rb_dlinkFind+0x70>
 958:	ldr	r3, [r3, #8]
 95c:	cmp	r3, #0
 960:	bne	94c <rb_dlinkFind+0x58>
 964:	mov	r0, r3
 968:	pop	{r4, pc}
 96c:	.word	0x0000067c
 970:	.word	0x00000718
 974:	.word	0x00000730
 978:	.word	0x00000650
 97c:	.word	0x000006ec
 980:	.word	0x00000711

00000984 <rb_dlinkAdd>:
 984:	cmp	r0, #0
 988:	push	{r4, lr}
 98c:	bne	9b4 <rb_dlinkAdd+0x30>
 990:	ldr	r3, [pc, #176]	; a48 <rb_dlinkAdd+0xc4>
 994:	mov	r2, #143	; 0x8f
 998:	ldr	r1, [pc, #172]	; a4c <rb_dlinkAdd+0xc8>
 99c:	ldr	r0, [pc, #172]	; a50 <rb_dlinkAdd+0xcc>
 9a0:	add	r3, pc, r3
 9a4:	add	r3, r3, #13
 9a8:	add	r1, pc, r1
 9ac:	add	r0, pc, r0
 9b0:	bl	668 <__assert_fail@plt>
 9b4:	cmp	r1, #0
 9b8:	bne	9e0 <rb_dlinkAdd+0x5c>
 9bc:	ldr	r3, [pc, #144]	; a54 <rb_dlinkAdd+0xd0>
 9c0:	mov	r2, #144	; 0x90
 9c4:	ldr	r1, [pc, #140]	; a58 <rb_dlinkAdd+0xd4>
 9c8:	ldr	r0, [pc, #140]	; a5c <rb_dlinkAdd+0xd8>
 9cc:	add	r3, pc, r3
 9d0:	add	r3, r3, #13
 9d4:	add	r1, pc, r1
 9d8:	add	r0, pc, r0
 9dc:	b	9b0 <rb_dlinkAdd+0x2c>
 9e0:	cmp	r2, #0
 9e4:	bne	a0c <rb_dlinkAdd+0x88>
 9e8:	ldr	r3, [pc, #112]	; a60 <rb_dlinkAdd+0xdc>
 9ec:	mov	r2, #145	; 0x91
 9f0:	ldr	r1, [pc, #108]	; a64 <rb_dlinkAdd+0xe0>
 9f4:	ldr	r0, [pc, #108]	; a68 <rb_dlinkAdd+0xe4>
 9f8:	add	r3, pc, r3
 9fc:	add	r3, r3, #13
 a00:	add	r1, pc, r1
 a04:	add	r0, pc, r0
 a08:	b	9b0 <rb_dlinkAdd+0x2c>
 a0c:	mov	r3, #0
 a10:	stm	r1, {r0, r3}
 a14:	ldr	r3, [r2]
 a18:	cmp	r3, #0
 a1c:	str	r3, [r1, #8]
 a20:	strne	r1, [r3, #4]
 a24:	bne	a34 <rb_dlinkAdd+0xb0>
 a28:	ldr	r3, [r2, #4]
 a2c:	cmp	r3, #0
 a30:	streq	r1, [r2, #4]
 a34:	ldr	r3, [r2, #8]
 a38:	str	r1, [r2]
 a3c:	add	r3, r3, #1
 a40:	str	r3, [r2, #8]
 a44:	pop	{r4, pc}
 a48:	.word	0x000005ec
 a4c:	.word	0x00000684
 a50:	.word	0x000006a9
 a54:	.word	0x000005c0
 a58:	.word	0x00000658
 a5c:	.word	0x0000068a
 a60:	.word	0x00000594
 a64:	.word	0x0000062c
 a68:	.word	0x00000644

00000a6c <rb_dlinkFindDestroy>:
 a6c:	cmp	r1, #0
 a70:	push	{r4, lr}
 a74:	bne	a9c <rb_dlinkFindDestroy+0x30>
 a78:	ldr	r3, [pc, #176]	; b30 <rb_dlinkFindDestroy+0xc4>
 a7c:	movw	r2, #287	; 0x11f
 a80:	ldr	r1, [pc, #172]	; b34 <rb_dlinkFindDestroy+0xc8>
 a84:	ldr	r0, [pc, #172]	; b38 <rb_dlinkFindDestroy+0xcc>
 a88:	add	r3, pc, r3
 a8c:	add	r3, r3, #25
 a90:	add	r1, pc, r1
 a94:	add	r0, pc, r0
 a98:	bl	668 <__assert_fail@plt>
 a9c:	cmp	r0, #0
 aa0:	mov	r2, r0
 aa4:	ldrne	r0, [r1]
 aa8:	bne	ad4 <rb_dlinkFindDestroy+0x68>
 aac:	ldr	r3, [pc, #136]	; b3c <rb_dlinkFindDestroy+0xd0>
 ab0:	mov	r2, #288	; 0x120
 ab4:	ldr	r1, [pc, #132]	; b40 <rb_dlinkFindDestroy+0xd4>
 ab8:	ldr	r0, [pc, #132]	; b44 <rb_dlinkFindDestroy+0xd8>
 abc:	add	r3, pc, r3
 ac0:	add	r3, r3, #25
 ac4:	add	r1, pc, r1
 ac8:	add	r0, pc, r0
 acc:	b	a98 <rb_dlinkFindDestroy+0x2c>
 ad0:	mov	r0, r3
 ad4:	cmp	r0, #0
 ad8:	popeq	{r4, pc}
 adc:	ldr	ip, [r0]
 ae0:	ldr	r3, [r0, #8]
 ae4:	cmp	r2, ip
 ae8:	bne	ad0 <rb_dlinkFindDestroy+0x64>
 aec:	ldr	r2, [r0, #4]
 af0:	cmp	r3, #0
 af4:	strne	r2, [r3, #4]
 af8:	streq	r2, [r1, #4]
 afc:	ldr	r2, [r0, #4]
 b00:	cmp	r2, #0
 b04:	strne	r3, [r2, #8]
 b08:	streq	r3, [r1]
 b0c:	mov	r3, #0
 b10:	str	r3, [r0, #4]
 b14:	str	r3, [r0, #8]
 b18:	ldr	r3, [r1, #8]
 b1c:	sub	r3, r3, #1
 b20:	str	r3, [r1, #8]
 b24:	bl	5e4 <rb_free_rb_dlink_node@plt>
 b28:	mov	r0, #1
 b2c:	pop	{r4, pc}
 b30:	.word	0x00000504
 b34:	.word	0x0000059c
 b38:	.word	0x000005b4
 b3c:	.word	0x000004d0
 b40:	.word	0x00000568
 b44:	.word	0x0000058d

00000b48 <build_nicklist.constprop.3>:
 b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b4c:	add	fp, sp, #32
 b50:	sub	sp, sp, #20
 b54:	mov	r7, r0
 b58:	mov	r0, r1
 b5c:	mov	r5, r1
 b60:	sub	r9, fp, #40	; 0x28
 b64:	bl	62c <strlen@plt>
 b68:	add	r0, r0, #8
 b6c:	mov	r1, r5
 b70:	ldr	r6, [pc, #344]	; cd0 <build_nicklist.constprop.3+0x188>
 b74:	bic	r0, r0, #7
 b78:	mov	r5, #0
 b7c:	sub	sp, sp, r0
 b80:	ldr	sl, [pc, #332]	; cd4 <build_nicklist.constprop.3+0x18c>
 b84:	mov	r8, r5
 b88:	mov	r4, sp
 b8c:	mov	r0, r4
 b90:	bl	5fc <strcpy@plt>
 b94:	ldr	r3, [pc, #316]	; cd8 <build_nicklist.constprop.3+0x190>
 b98:	mov	r0, r4
 b9c:	mov	r2, r9
 ba0:	add	r6, pc, r6
 ba4:	add	sl, pc, sl
 ba8:	ldr	r1, [pc, #300]	; cdc <build_nicklist.constprop.3+0x194>
 bac:	add	r6, r6, #512	; 0x200
 bb0:	add	r3, pc, r3
 bb4:	add	r1, pc, r1
 bb8:	strb	r5, [r3]
 bbc:	strb	r5, [r3, #512]	; 0x200
 bc0:	bl	644 <rb_strtok_r@plt>
 bc4:	mov	r4, r0
 bc8:	cmp	r4, #0
 bcc:	bne	bd8 <build_nicklist.constprop.3+0x90>
 bd0:	sub	sp, fp, #32
 bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 bd8:	ldrb	r3, [r4]
 bdc:	cmp	r3, #45	; 0x2d
 be0:	moveq	r3, #1
 be4:	movne	r3, #0
 be8:	addeq	r4, r4, #1
 bec:	mov	r0, r4
 bf0:	str	r3, [fp, #-48]	; 0xffffffd0
 bf4:	bl	650 <find_named_person@plt>
 bf8:	cmp	r0, #0
 bfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
 c00:	bne	c38 <build_nicklist.constprop.3+0xf0>
 c04:	ldr	r2, [pc, #212]	; ce0 <build_nicklist.constprop.3+0x198>
 c08:	mov	r3, r4
 c0c:	movw	r1, #401	; 0x191
 c10:	mov	r0, r7
 c14:	add	r2, pc, r2
 c18:	bl	620 <sendto_one_numeric@plt>
 c1c:	ldr	r1, [pc, #192]	; ce4 <build_nicklist.constprop.3+0x19c>
 c20:	mov	r2, r9
 c24:	mov	r0, #0
 c28:	add	r1, pc, r1
 c2c:	bl	644 <rb_strtok_r@plt>
 c30:	mov	r4, r0
 c34:	b	bc8 <build_nicklist.constprop.3+0x80>
 c38:	cmp	r3, #0
 c3c:	beq	c8c <build_nicklist.constprop.3+0x144>
 c40:	ldr	r0, [pc, #160]	; ce8 <build_nicklist.constprop.3+0x1a0>
 c44:	add	r0, pc, r0
 c48:	ldrb	r3, [r0]
 c4c:	cmp	r3, #0
 c50:	beq	c60 <build_nicklist.constprop.3+0x118>
 c54:	ldr	r1, [pc, #144]	; cec <build_nicklist.constprop.3+0x1a4>
 c58:	add	r1, pc, r1
 c5c:	bl	5f0 <strcat@plt>
 c60:	ldr	r0, [pc, #136]	; cf0 <build_nicklist.constprop.3+0x1a8>
 c64:	rsb	r2, r5, #508	; 0x1fc
 c68:	mov	r1, r4
 c6c:	add	r2, r2, #3
 c70:	add	r5, r5, #1
 c74:	add	r0, pc, r0
 c78:	bl	65c <strncat@plt>
 c7c:	mov	r0, r4
 c80:	bl	62c <strlen@plt>
 c84:	add	r5, r5, r0
 c88:	b	c1c <build_nicklist.constprop.3+0xd4>
 c8c:	ldrb	r3, [sl, #512]	; 0x200
 c90:	cmp	r3, #0
 c94:	beq	ca8 <build_nicklist.constprop.3+0x160>
 c98:	ldr	r1, [pc, #84]	; cf4 <build_nicklist.constprop.3+0x1ac>
 c9c:	add	r0, sl, #512	; 0x200
 ca0:	add	r1, pc, r1
 ca4:	bl	5f0 <strcat@plt>
 ca8:	rsb	r2, r8, #508	; 0x1fc
 cac:	mov	r1, r4
 cb0:	add	r2, r2, #3
 cb4:	mov	r0, r6
 cb8:	bl	65c <strncat@plt>
 cbc:	mov	r0, r4
 cc0:	add	r8, r8, #1
 cc4:	bl	62c <strlen@plt>
 cc8:	add	r8, r8, r0
 ccc:	b	c1c <build_nicklist.constprop.3+0xd4>
 cd0:	.word	0x0001152d
 cd4:	.word	0x00011529
 cd8:	.word	0x0001151d
 cdc:	.word	0x000004b8
 ce0:	.word	0x0000045a
 ce4:	.word	0x00000444
 ce8:	.word	0x00011489
 cec:	.word	0x00000414
 cf0:	.word	0x00011459
 cf4:	.word	0x000003cc

00000cf8 <m_accept>:
 cf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 cfc:	mov	r3, #0
 d00:	sub	sp, sp, #28
 d04:	mov	r4, r2
 d08:	mov	r0, r2
 d0c:	str	r3, [sp, #20]
 d10:	ldr	r3, [sp, #64]	; 0x40
 d14:	ldr	r6, [pc, #568]	; f54 <m_accept+0x25c>
 d18:	ldr	r1, [r3, #4]
 d1c:	add	r6, pc, r6
 d20:	ldrb	r3, [r1]
 d24:	cmp	r3, #42	; 0x2a
 d28:	bne	d38 <m_accept+0x40>
 d2c:	bl	798 <list_accepts>
 d30:	add	sp, sp, #28
 d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d38:	bl	b48 <build_nicklist.constprop.3>
 d3c:	ldr	r1, [pc, #532]	; f58 <m_accept+0x260>
 d40:	add	r7, sp, #20
 d44:	mov	r2, r7
 d48:	ldr	r0, [pc, #524]	; f5c <m_accept+0x264>
 d4c:	ldr	r9, [pc, #524]	; f60 <m_accept+0x268>
 d50:	add	r1, pc, r1
 d54:	ldr	sl, [pc, #520]	; f64 <m_accept+0x26c>
 d58:	add	r0, pc, r0
 d5c:	ldr	fp, [pc, #516]	; f68 <m_accept+0x270>
 d60:	bl	644 <rb_strtok_r@plt>
 d64:	mov	r8, r0
 d68:	add	r9, pc, r9
 d6c:	add	sl, pc, sl
 d70:	add	fp, pc, fp
 d74:	cmp	r8, #0
 d78:	bne	e08 <m_accept+0x110>
 d7c:	ldr	r0, [pc, #488]	; f6c <m_accept+0x274>
 d80:	mov	r2, r7
 d84:	ldr	r1, [pc, #484]	; f70 <m_accept+0x278>
 d88:	ldr	r3, [r4, #432]	; 0x1b0
 d8c:	add	r0, pc, r0
 d90:	ldr	r9, [pc, #476]	; f74 <m_accept+0x27c>
 d94:	add	r0, r0, #512	; 0x200
 d98:	add	r1, pc, r1
 d9c:	ldr	sl, [pc, #468]	; f78 <m_accept+0x280>
 da0:	ldr	fp, [pc, #468]	; f7c <m_accept+0x284>
 da4:	add	r9, pc, r9
 da8:	ldr	r8, [r3, #324]	; 0x144
 dac:	bl	644 <rb_strtok_r@plt>
 db0:	add	sl, pc, sl
 db4:	mov	r3, r0
 db8:	add	fp, pc, fp
 dbc:	cmp	r3, #0
 dc0:	beq	d30 <m_accept+0x38>
 dc4:	mov	r0, r3
 dc8:	str	r3, [sp, #12]
 dcc:	bl	650 <find_named_person@plt>
 dd0:	subs	r5, r0, #0
 dd4:	ldr	r3, [sp, #12]
 dd8:	bne	ea8 <m_accept+0x1b0>
 ddc:	mov	r2, sl
 de0:	movw	r1, #401	; 0x191
 de4:	mov	r0, r4
 de8:	bl	620 <sendto_one_numeric@plt>
 dec:	mov	r2, r7
 df0:	mov	r1, fp
 df4:	mov	r0, #0
 df8:	add	r8, r8, #1
 dfc:	bl	644 <rb_strtok_r@plt>
 e00:	mov	r3, r0
 e04:	b	dbc <m_accept+0xc4>
 e08:	mov	r0, r8
 e0c:	bl	650 <find_named_person@plt>
 e10:	subs	r5, r0, #0
 e14:	bne	e44 <m_accept+0x14c>
 e18:	mov	r3, r8
 e1c:	mov	r2, sl
 e20:	movw	r1, #401	; 0x191
 e24:	mov	r0, r4
 e28:	bl	620 <sendto_one_numeric@plt>
 e2c:	mov	r2, r7
 e30:	mov	r1, fp
 e34:	mov	r0, #0
 e38:	bl	644 <rb_strtok_r@plt>
 e3c:	mov	r8, r0
 e40:	b	d74 <m_accept+0x7c>
 e44:	ldr	r8, [r4, #432]	; 0x1b0
 e48:	cmp	r4, r5
 e4c:	add	r8, r8, #316	; 0x13c
 e50:	beq	e8c <m_accept+0x194>
 e54:	mov	r1, r8
 e58:	bl	8f4 <rb_dlinkFind>
 e5c:	cmp	r0, #0
 e60:	bne	e8c <m_accept+0x194>
 e64:	ldr	r3, [pc, #276]	; f80 <m_accept+0x288>
 e68:	add	r5, r5, #88	; 0x58
 e6c:	mov	r1, r9
 e70:	mov	r0, r4
 e74:	ldr	r2, [r6, r3]
 e78:	add	r3, r4, #88	; 0x58
 e7c:	str	r5, [sp]
 e80:	add	r2, r2, #88	; 0x58
 e84:	bl	5d8 <sendto_one@plt>
 e88:	b	e2c <m_accept+0x134>
 e8c:	mov	r1, r8
 e90:	mov	r0, r5
 e94:	bl	a6c <rb_dlinkFindDestroy>
 e98:	add	r1, r5, #408	; 0x198
 e9c:	mov	r0, r4
 ea0:	bl	a6c <rb_dlinkFindDestroy>
 ea4:	b	e2c <m_accept+0x134>
 ea8:	cmp	r4, r5
 eac:	beq	ec4 <m_accept+0x1cc>
 eb0:	ldr	r1, [r4, #432]	; 0x1b0
 eb4:	add	r1, r1, #316	; 0x13c
 eb8:	bl	8f4 <rb_dlinkFind>
 ebc:	cmp	r0, #0
 ec0:	beq	eec <m_accept+0x1f4>
 ec4:	ldr	r3, [pc, #180]	; f80 <m_accept+0x288>
 ec8:	add	r5, r5, #88	; 0x58
 ecc:	mov	r1, r9
 ed0:	mov	r0, r4
 ed4:	ldr	r2, [r6, r3]
 ed8:	add	r3, r4, #88	; 0x58
 edc:	str	r5, [sp]
 ee0:	add	r2, r2, #88	; 0x58
 ee4:	bl	5d8 <sendto_one@plt>
 ee8:	b	dec <m_accept+0xf4>
 eec:	ldr	r3, [pc, #144]	; f84 <m_accept+0x28c>
 ef0:	ldr	r3, [r6, r3]
 ef4:	ldr	r3, [r3, #96]	; 0x60
 ef8:	cmp	r3, r8
 efc:	bgt	f24 <m_accept+0x22c>
 f00:	ldr	r3, [pc, #120]	; f80 <m_accept+0x288>
 f04:	mov	r0, r4
 f08:	ldr	r1, [pc, #120]	; f88 <m_accept+0x290>
 f0c:	ldr	r2, [r6, r3]
 f10:	add	r3, r4, #88	; 0x58
 f14:	add	r1, pc, r1
 f18:	add	r2, r2, #88	; 0x58
 f1c:	bl	5d8 <sendto_one@plt>
 f20:	b	d30 <m_accept+0x38>
 f24:	bl	614 <rb_make_rb_dlink_node@plt>
 f28:	ldr	r2, [r4, #432]	; 0x1b0
 f2c:	mov	r1, r0
 f30:	mov	r0, r5
 f34:	add	r2, r2, #316	; 0x13c
 f38:	bl	984 <rb_dlinkAdd>
 f3c:	bl	614 <rb_make_rb_dlink_node@plt>
 f40:	mov	r1, r0
 f44:	add	r2, r5, #408	; 0x198
 f48:	mov	r0, r4
 f4c:	bl	984 <rb_dlinkAdd>
 f50:	b	dec <m_accept+0xf4>
 f54:	.word	0x000112dc
 f58:	.word	0x0000031c
 f5c:	.word	0x00011375
 f60:	.word	0x0000031f
 f64:	.word	0x00000302
 f68:	.word	0x000002fc
 f6c:	.word	0x00011341
 f70:	.word	0x000002d4
 f74:	.word	0x0000030d
 f78:	.word	0x000002be
 f7c:	.word	0x000002b4
 f80:	.word	0x00000054
 f84:	.word	0x00000058
 f88:	.word	0x000001cb

Disassembly of section .fini:

00000f8c <_fini>:
 f8c:	push	{r3, lr}
 f90:	pop	{r3, pc}
