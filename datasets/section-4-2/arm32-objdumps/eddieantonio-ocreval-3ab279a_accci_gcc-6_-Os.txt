
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

0001094c <.init>:
   1094c:	push	{r3, lr}
   10950:	bl	10b94 <getc@plt+0xa8>
   10954:	pop	{r3, pc}

Disassembly of section .plt:

00010958 <calloc@plt-0x14>:
   10958:	push	{lr}		; (str lr, [sp, #-4]!)
   1095c:	ldr	lr, [pc, #4]	; 10968 <calloc@plt-0x4>
   10960:	add	lr, pc, lr
   10964:	ldr	pc, [lr, #8]!
   10968:	muleq	r1, r8, r6

0001096c <calloc@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #77824	; 0x13000
   10974:	ldr	pc, [ip, #1688]!	; 0x698

00010978 <raise@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #77824	; 0x13000
   10980:	ldr	pc, [ip, #1680]!	; 0x690

00010984 <strcmp@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #77824	; 0x13000
   1098c:	ldr	pc, [ip, #1672]!	; 0x688

00010990 <printf@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #77824	; 0x13000
   10998:	ldr	pc, [ip, #1664]!	; 0x680

0001099c <fopen@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #77824	; 0x13000
   109a4:	ldr	pc, [ip, #1656]!	; 0x678

000109a8 <free@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #77824	; 0x13000
   109b0:	ldr	pc, [ip, #1648]!	; 0x670

000109b4 <utf8proc_get_property@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #77824	; 0x13000
   109bc:	ldr	pc, [ip, #1640]!	; 0x668

000109c0 <fgets@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #77824	; 0x13000
   109c8:	ldr	pc, [ip, #1632]!	; 0x660

000109cc <utf8proc_encode_char@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #77824	; 0x13000
   109d4:	ldr	pc, [ip, #1624]!	; 0x658

000109d8 <strdup@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #77824	; 0x13000
   109e0:	ldr	pc, [ip, #1616]!	; 0x650

000109e4 <rewind@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #77824	; 0x13000
   109ec:	ldr	pc, [ip, #1608]!	; 0x648

000109f0 <unlink@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #77824	; 0x13000
   109f8:	ldr	pc, [ip, #1600]!	; 0x640

000109fc <utf8proc_tolower@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #77824	; 0x13000
   10a04:	ldr	pc, [ip, #1592]!	; 0x638

00010a08 <__xstat@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #77824	; 0x13000
   10a10:	ldr	pc, [ip, #1584]!	; 0x630

00010a14 <fread@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #77824	; 0x13000
   10a1c:	ldr	pc, [ip, #1576]!	; 0x628

00010a20 <utf8proc_iterate@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #77824	; 0x13000
   10a28:	ldr	pc, [ip, #1568]!	; 0x620

00010a2c <__libc_start_main@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #77824	; 0x13000
   10a34:	ldr	pc, [ip, #1560]!	; 0x618

00010a38 <__sysv_signal@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #77824	; 0x13000
   10a40:	ldr	pc, [ip, #1552]!	; 0x610

00010a44 <__gmon_start__@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #77824	; 0x13000
   10a4c:	ldr	pc, [ip, #1544]!	; 0x608

00010a50 <getpid@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #77824	; 0x13000
   10a58:	ldr	pc, [ip, #1536]!	; 0x600

00010a5c <exit@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #77824	; 0x13000
   10a64:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a68 <utf8proc_category@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #77824	; 0x13000
   10a70:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a74 <strlen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #77824	; 0x13000
   10a7c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a80 <fprintf@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #77824	; 0x13000
   10a88:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a8c <sqrt@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #77824	; 0x13000
   10a94:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a98 <__isoc99_sscanf@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #77824	; 0x13000
   10aa0:	ldr	pc, [ip, #1488]!	; 0x5d0

00010aa4 <fclose@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #77824	; 0x13000
   10aac:	ldr	pc, [ip, #1480]!	; 0x5c8

00010ab0 <sprintf@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #77824	; 0x13000
   10ab8:	ldr	pc, [ip, #1472]!	; 0x5c0

00010abc <utf8proc_errmsg@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #77824	; 0x13000
   10ac4:	ldr	pc, [ip, #1464]!	; 0x5b8

00010ac8 <fputs@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #77824	; 0x13000
   10ad0:	ldr	pc, [ip, #1456]!	; 0x5b0

00010ad4 <strncmp@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #77824	; 0x13000
   10adc:	ldr	pc, [ip, #1448]!	; 0x5a8

00010ae0 <abort@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #77824	; 0x13000
   10ae8:	ldr	pc, [ip, #1440]!	; 0x5a0

00010aec <getc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #77824	; 0x13000
   10af4:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00010af8 <error@@Base-0x1400>:
   10af8:	push	{r0, r1, r2, r4, r5, lr}
   10afc:	add	ip, sp, #8
   10b00:	mov	r3, #0
   10b04:	str	r0, [ip, #-4]!
   10b08:	ldr	r2, [pc, #64]	; 10b50 <getc@plt+0x64>
   10b0c:	mov	r0, ip
   10b10:	mov	r5, r1
   10b14:	bl	1201c <error@@Base+0x124>
   10b18:	ldr	r3, [sp, #4]
   10b1c:	cmp	r3, #1
   10b20:	movgt	r4, #0
   10b24:	bgt	10b3c <getc@plt+0x50>
   10b28:	ldr	r0, [pc, #36]	; 10b54 <getc@plt+0x68>
   10b2c:	bl	11ef8 <error@@Base>
   10b30:	ldr	r0, [r5, r4, lsl #2]
   10b34:	bl	10c80 <getc@plt+0x194>
   10b38:	add	r4, r4, #1
   10b3c:	ldr	r3, [sp, #4]
   10b40:	cmp	r4, r3
   10b44:	blt	10b30 <getc@plt+0x44>
   10b48:	bl	10cb8 <getc@plt+0x1cc>
   10b4c:	bl	11ea0 <getc@plt+0x13b4>
   10b50:	andeq	r2, r1, r4, lsr #25
   10b54:	ldrdeq	r2, [r1], -r6
   10b58:	mov	fp, #0
   10b5c:	mov	lr, #0
   10b60:	pop	{r1}		; (ldr r1, [sp], #4)
   10b64:	mov	r2, sp
   10b68:	push	{r2}		; (str r2, [sp, #-4]!)
   10b6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b70:	ldr	ip, [pc, #16]	; 10b88 <getc@plt+0x9c>
   10b74:	push	{ip}		; (str ip, [sp, #-4]!)
   10b78:	ldr	r0, [pc, #12]	; 10b8c <getc@plt+0xa0>
   10b7c:	ldr	r3, [pc, #12]	; 10b90 <getc@plt+0xa4>
   10b80:	bl	10a2c <__libc_start_main@plt>
   10b84:	bl	10ae0 <abort@plt>
   10b88:	strdeq	r2, [r1], -r0
   10b8c:	strdeq	r0, [r1], -r8
   10b90:	muleq	r1, r0, fp
   10b94:	ldr	r3, [pc, #20]	; 10bb0 <getc@plt+0xc4>
   10b98:	ldr	r2, [pc, #20]	; 10bb4 <getc@plt+0xc8>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r2, [r3, r2]
   10ba4:	cmp	r2, #0
   10ba8:	bxeq	lr
   10bac:	b	10a44 <__gmon_start__@plt>
   10bb0:	andeq	r3, r1, ip, asr r4
   10bb4:	muleq	r0, r0, r0
   10bb8:	ldr	r3, [pc, #28]	; 10bdc <getc@plt+0xf0>
   10bbc:	ldr	r0, [pc, #28]	; 10be0 <getc@plt+0xf4>
   10bc0:	sub	r3, r3, r0
   10bc4:	cmp	r3, #6
   10bc8:	bxls	lr
   10bcc:	ldr	r3, [pc, #16]	; 10be4 <getc@plt+0xf8>
   10bd0:	cmp	r3, #0
   10bd4:	bxeq	lr
   10bd8:	bx	r3
   10bdc:	andeq	r4, r2, r7, lsr #1
   10be0:	andeq	r4, r2, r4, lsr #1
   10be4:	andeq	r0, r0, r0
   10be8:	ldr	r1, [pc, #36]	; 10c14 <getc@plt+0x128>
   10bec:	ldr	r0, [pc, #36]	; 10c18 <getc@plt+0x12c>
   10bf0:	sub	r1, r1, r0
   10bf4:	asr	r1, r1, #2
   10bf8:	add	r1, r1, r1, lsr #31
   10bfc:	asrs	r1, r1, #1
   10c00:	bxeq	lr
   10c04:	ldr	r3, [pc, #16]	; 10c1c <getc@plt+0x130>
   10c08:	cmp	r3, #0
   10c0c:	bxeq	lr
   10c10:	bx	r3
   10c14:	andeq	r4, r2, r4, lsr #1
   10c18:	andeq	r4, r2, r4, lsr #1
   10c1c:	andeq	r0, r0, r0
   10c20:	push	{r4, lr}
   10c24:	ldr	r4, [pc, #24]	; 10c44 <getc@plt+0x158>
   10c28:	ldrb	r3, [r4]
   10c2c:	cmp	r3, #0
   10c30:	popne	{r4, pc}
   10c34:	bl	10bb8 <getc@plt+0xcc>
   10c38:	mov	r3, #1
   10c3c:	strb	r3, [r4]
   10c40:	pop	{r4, pc}
   10c44:	strheq	r4, [r2], -r8
   10c48:	ldr	r0, [pc, #40]	; 10c78 <getc@plt+0x18c>
   10c4c:	ldr	r3, [r0]
   10c50:	cmp	r3, #0
   10c54:	bne	10c5c <getc@plt+0x170>
   10c58:	b	10be8 <getc@plt+0xfc>
   10c5c:	ldr	r3, [pc, #24]	; 10c7c <getc@plt+0x190>
   10c60:	cmp	r3, #0
   10c64:	beq	10c58 <getc@plt+0x16c>
   10c68:	push	{r4, lr}
   10c6c:	blx	r3
   10c70:	pop	{r4, lr}
   10c74:	b	10be8 <getc@plt+0xfc>
   10c78:	andeq	r3, r2, r4, lsl #28
   10c7c:	andeq	r0, r0, r0
   10c80:	push	{r4, r5, r6, lr}
   10c84:	mov	r1, r0
   10c88:	ldr	r4, [pc, #32]	; 10cb0 <getc@plt+0x1c4>
   10c8c:	mov	r0, r4
   10c90:	ldm	r4, {r5, r6}
   10c94:	bl	110ac <getc@plt+0x5c0>
   10c98:	ldm	r4, {r1, r2}
   10c9c:	ldr	r0, [pc, #16]	; 10cb4 <getc@plt+0x1c8>
   10ca0:	sub	r2, r2, r6
   10ca4:	sub	r1, r1, r5
   10ca8:	pop	{r4, r5, r6, lr}
   10cac:	b	117a8 <getc@plt+0xcbc>
   10cb0:	andseq	r4, r3, r0, lsr r5
   10cb4:			; <UNDEFINED> instruction: 0x009b6cf0
   10cb8:	push	{r4, lr}
   10cbc:	sub	sp, sp, #32
   10cc0:	ldr	r4, [pc, #144]	; 10d58 <getc@plt+0x26c>
   10cc4:	add	r2, sp, #24
   10cc8:	add	r1, sp, #16
   10ccc:	mov	r0, r4
   10cd0:	bl	117f4 <getc@plt+0xd08>
   10cd4:	ldr	r1, [r4, #12]
   10cd8:	ldr	r4, [pc, #124]	; 10d5c <getc@plt+0x270>
   10cdc:	ldr	r0, [pc, #124]	; 10d60 <getc@plt+0x274>
   10ce0:	bl	10990 <printf@plt>
   10ce4:	ldr	r1, [r4]
   10ce8:	ldr	r0, [pc, #116]	; 10d64 <getc@plt+0x278>
   10cec:	bl	10990 <printf@plt>
   10cf0:	ldr	r1, [r4, #4]
   10cf4:	ldr	r0, [pc, #108]	; 10d68 <getc@plt+0x27c>
   10cf8:	bl	10990 <printf@plt>
   10cfc:	ldm	r4, {r2, r3}
   10d00:	vldr	d6, [pc, #72]	; 10d50 <getc@plt+0x264>
   10d04:	ldr	r0, [pc, #96]	; 10d6c <getc@plt+0x280>
   10d08:	sub	r3, r2, r3
   10d0c:	vmov	s14, r3
   10d10:	vcvt.f64.s32	d7, s14
   10d14:	vmul.f64	d7, d7, d6
   10d18:	vmov	s13, r2
   10d1c:	vcvt.f64.s32	d6, s13
   10d20:	vdiv.f64	d5, d7, d6
   10d24:	vmov	r2, r3, d5
   10d28:	bl	10990 <printf@plt>
   10d2c:	ldr	r3, [pc, #60]	; 10d70 <getc@plt+0x284>
   10d30:	ldr	r0, [pc, #60]	; 10d74 <getc@plt+0x288>
   10d34:	str	r3, [sp, #8]
   10d38:	ldrd	r2, [sp, #24]
   10d3c:	strd	r2, [sp]
   10d40:	ldrd	r2, [sp, #16]
   10d44:	bl	10990 <printf@plt>
   10d48:	add	sp, sp, #32
   10d4c:	pop	{r4, pc}
   10d50:	andeq	r0, r0, r0
   10d54:	subsmi	r0, r9, r0
   10d58:			; <UNDEFINED> instruction: 0x009b6cf0
   10d5c:	andseq	r4, r3, r0, lsr r5
   10d60:	andeq	r2, r1, r0, lsl ip
   10d64:	andeq	r2, r1, r6, lsr #24
   10d68:	andeq	r2, r1, sl, lsr ip
   10d6c:	andeq	r2, r1, sl, asr #24
   10d70:	andeq	r2, r1, r3, ror ip
   10d74:	andeq	r2, r1, lr, asr ip
   10d78:	mov	r2, r0
   10d7c:	push	{r4, lr}
   10d80:	mov	r1, #99	; 0x63
   10d84:	ldr	r0, [pc, #12]	; 10d98 <getc@plt+0x2ac>
   10d88:	bl	109c0 <fgets@plt>
   10d8c:	adds	r0, r0, #0
   10d90:	movne	r0, #1
   10d94:	pop	{r4, pc}
   10d98:	strheq	r4, [r2], -r9
   10d9c:	push	{r0, r1, r2, r3, r4, lr}
   10da0:	str	r2, [sp, #8]
   10da4:	ldr	r3, [r1, #12]
   10da8:	str	r3, [sp, #4]
   10dac:	ldr	r3, [r1, #8]
   10db0:	str	r3, [sp]
   10db4:	ldm	r1, {r2, r3}
   10db8:	ldr	r1, [pc, #8]	; 10dc8 <getc@plt+0x2dc>
   10dbc:	bl	10a80 <fprintf@plt>
   10dc0:	add	sp, sp, #20
   10dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   10dc8:	andeq	r2, r1, sp, ror #25
   10dcc:	push	{r4, r5, r6, lr}
   10dd0:	mov	r5, r1
   10dd4:	mov	r4, r2
   10dd8:	bl	10d78 <getc@plt+0x28c>
   10ddc:	cmp	r0, #0
   10de0:	bne	10dec <getc@plt+0x300>
   10de4:	mov	r0, #0
   10de8:	pop	{r4, r5, r6, pc}
   10dec:	mov	r2, r5
   10df0:	ldr	r1, [pc, #32]	; 10e18 <getc@plt+0x32c>
   10df4:	ldr	r0, [pc, #32]	; 10e1c <getc@plt+0x330>
   10df8:	bl	10a98 <__isoc99_sscanf@plt>
   10dfc:	cmp	r0, #1
   10e00:	bne	10de4 <getc@plt+0x2f8>
   10e04:	ldr	r3, [r4]
   10e08:	ldr	r2, [r5]
   10e0c:	add	r3, r3, r2
   10e10:	str	r3, [r4]
   10e14:	pop	{r4, r5, r6, pc}
   10e18:	andeq	r2, r1, r3, lsl sp
   10e1c:	strheq	r4, [r2], -r9
   10e20:	push	{r4, lr}
   10e24:	sub	sp, sp, #24
   10e28:	mov	r4, r1
   10e2c:	bl	10d78 <getc@plt+0x28c>
   10e30:	cmp	r0, #0
   10e34:	beq	10eac <getc@plt+0x3c0>
   10e38:	add	r3, sp, #20
   10e3c:	str	r3, [sp, #4]
   10e40:	add	r3, sp, #16
   10e44:	str	r3, [sp]
   10e48:	add	r2, sp, #8
   10e4c:	add	r3, sp, #12
   10e50:	ldr	r1, [pc, #92]	; 10eb4 <getc@plt+0x3c8>
   10e54:	ldr	r0, [pc, #92]	; 10eb8 <getc@plt+0x3cc>
   10e58:	bl	10a98 <__isoc99_sscanf@plt>
   10e5c:	cmp	r0, #4
   10e60:	movne	r0, #0
   10e64:	bne	10eac <getc@plt+0x3c0>
   10e68:	ldr	r3, [r4]
   10e6c:	ldr	r2, [sp, #8]
   10e70:	mov	r0, #1
   10e74:	add	r3, r3, r2
   10e78:	str	r3, [r4]
   10e7c:	ldr	r2, [sp, #12]
   10e80:	ldr	r3, [r4, #4]
   10e84:	add	r3, r3, r2
   10e88:	str	r3, [r4, #4]
   10e8c:	ldr	r2, [sp, #16]
   10e90:	ldr	r3, [r4, #8]
   10e94:	add	r3, r3, r2
   10e98:	str	r3, [r4, #8]
   10e9c:	ldr	r2, [sp, #20]
   10ea0:	ldr	r3, [r4, #12]
   10ea4:	add	r3, r3, r2
   10ea8:	str	r3, [r4, #12]
   10eac:	add	sp, sp, #24
   10eb0:	pop	{r4, pc}
   10eb4:	andeq	r2, r1, r7, lsl #26
   10eb8:	strheq	r4, [r2], -r9
   10ebc:	cmp	r2, #0
   10ec0:	vmov	s14, r1
   10ec4:	bne	10ed4 <getc@plt+0x3e8>
   10ec8:	mov	r1, r0
   10ecc:	ldr	r0, [pc, #44]	; 10f00 <getc@plt+0x414>
   10ed0:	b	10ac8 <fputs@plt>
   10ed4:	vcvt.f64.s32	d7, s14
   10ed8:	vldr	d6, [pc, #24]	; 10ef8 <getc@plt+0x40c>
   10edc:	ldr	r1, [pc, #32]	; 10f04 <getc@plt+0x418>
   10ee0:	vmul.f64	d7, d7, d6
   10ee4:	vmov	s13, r2
   10ee8:	vcvt.f64.s32	d6, s13
   10eec:	vdiv.f64	d5, d7, d6
   10ef0:	vmov	r2, r3, d5
   10ef4:	b	10a80 <fprintf@plt>
   10ef8:	andeq	r0, r0, r0
   10efc:	subsmi	r0, r9, r0
   10f00:	andeq	r2, r1, r7, lsl sp
   10f04:	andeq	r2, r1, r0, lsr #26
   10f08:	ldr	r2, [r0, #12]
   10f0c:	ldr	r3, [r1, #12]
   10f10:	cmp	r2, r3
   10f14:	beq	10f20 <getc@plt+0x434>
   10f18:	sub	r0, r3, r2
   10f1c:	bx	lr
   10f20:	ldr	r2, [r0, #16]
   10f24:	ldr	r3, [r1, #16]
   10f28:	cmp	r2, r3
   10f2c:	bne	10f18 <getc@plt+0x42c>
   10f30:	ldr	r1, [r1, #8]
   10f34:	ldr	r0, [r0, #8]
   10f38:	b	11da8 <getc@plt+0x12bc>
   10f3c:	push	{r4, r5, r6, r7, lr}
   10f40:	mov	r4, r1
   10f44:	mov	r6, r2
   10f48:	sub	sp, sp, #20
   10f4c:	mov	r7, r3
   10f50:	ldm	r1, {r2, r3}
   10f54:	ldr	r1, [pc, #84]	; 10fb0 <getc@plt+0x4c4>
   10f58:	mov	r5, r0
   10f5c:	bl	10a80 <fprintf@plt>
   10f60:	ldr	r2, [r4]
   10f64:	ldr	r1, [r4, #4]
   10f68:	mov	r0, r5
   10f6c:	sub	r1, r2, r1
   10f70:	bl	10ebc <getc@plt+0x3d0>
   10f74:	cmp	r6, #0
   10f78:	movne	r2, r6
   10f7c:	ldrne	r1, [pc, #48]	; 10fb4 <getc@plt+0x4c8>
   10f80:	bne	10fa0 <getc@plt+0x4b4>
   10f84:	add	r2, sp, #4
   10f88:	mov	r1, r7
   10f8c:	mov	r3, #1
   10f90:	mov	r0, r6
   10f94:	bl	125b0 <error@@Base+0x6b8>
   10f98:	ldr	r1, [pc, #24]	; 10fb8 <getc@plt+0x4cc>
   10f9c:	add	r2, sp, #4
   10fa0:	mov	r0, r5
   10fa4:	bl	10a80 <fprintf@plt>
   10fa8:	add	sp, sp, #20
   10fac:	pop	{r4, r5, r6, r7, pc}
   10fb0:	andeq	r2, r1, r6, lsr #26
   10fb4:	andeq	r2, r1, r0, lsl #26
   10fb8:	andeq	r2, r1, r1, lsr sp
   10fbc:	push	{r4, r5, r6, r7, r8, lr}
   10fc0:	mov	r4, r0
   10fc4:	mov	r0, r1
   10fc8:	mov	r5, r3
   10fcc:	mov	r6, r2
   10fd0:	mov	r7, r1
   10fd4:	bl	11c7c <getc@plt+0x1190>
   10fd8:	sxth	r0, r0
   10fdc:	add	r0, r4, r0, lsl #3
   10fe0:	ldr	r3, [r0, #68]	; 0x44
   10fe4:	add	r3, r3, r6
   10fe8:	str	r3, [r0, #68]	; 0x44
   10fec:	ldr	r3, [r0, #72]	; 0x48
   10ff0:	add	r3, r3, r5
   10ff4:	str	r3, [r0, #72]	; 0x48
   10ff8:	ldr	r3, [r4, #2116]	; 0x844
   10ffc:	add	r3, r3, r6
   11000:	str	r3, [r4, #2116]	; 0x844
   11004:	ldr	r3, [r4, #2120]	; 0x848
   11008:	add	r3, r3, r5
   1100c:	str	r3, [r4, #2120]	; 0x848
   11010:	add	r4, r4, r7, lsl #3
   11014:	add	r4, r4, #8192	; 0x2000
   11018:	ldr	r3, [r4, #1988]	; 0x7c4
   1101c:	add	r2, r3, r6
   11020:	str	r2, [r4, #1988]	; 0x7c4
   11024:	ldr	r2, [r4, #1992]	; 0x7c8
   11028:	add	r3, r2, r5
   1102c:	str	r3, [r4, #1992]	; 0x7c8
   11030:	pop	{r4, r5, r6, r7, r8, pc}
   11034:	add	r0, r0, #2112	; 0x840
   11038:	push	{r4, r5, r6, r7, r8, lr}
   1103c:	add	r4, r0, #12
   11040:	mov	r0, r4
   11044:	mov	r8, r1
   11048:	mov	r7, r2
   1104c:	mov	r6, r3
   11050:	bl	11a24 <getc@plt+0xf38>
   11054:	cmp	r0, #0
   11058:	beq	11078 <getc@plt+0x58c>
   1105c:	ldr	r2, [r0, #12]
   11060:	ldr	r3, [r0, #16]
   11064:	add	r2, r2, r7
   11068:	add	r3, r3, r6
   1106c:	str	r2, [r0, #12]
   11070:	str	r3, [r0, #16]
   11074:	pop	{r4, r5, r6, r7, r8, pc}
   11078:	mov	r1, #20
   1107c:	mov	r0, #1
   11080:	bl	11f34 <error@@Base+0x3c>
   11084:	mov	r5, r0
   11088:	mov	r0, r8
   1108c:	bl	109d8 <strdup@plt>
   11090:	str	r7, [r5, #12]
   11094:	str	r6, [r5, #16]
   11098:	mov	r1, r5
   1109c:	str	r0, [r5, #8]
   110a0:	mov	r0, r4
   110a4:	pop	{r4, r5, r6, r7, r8, lr}
   110a8:	b	11a68 <getc@plt+0xf7c>
   110ac:	push	{r4, r5, r6, r7, r8, lr}
   110b0:	mov	r7, r1
   110b4:	sub	sp, sp, #24
   110b8:	ldr	r1, [pc, #704]	; 11380 <getc@plt+0x894>
   110bc:	mov	r5, r0
   110c0:	mov	r0, r7
   110c4:	bl	11fc0 <error@@Base+0xc8>
   110c8:	mov	r4, r0
   110cc:	bl	10d78 <getc@plt+0x28c>
   110d0:	cmp	r0, #0
   110d4:	beq	1136c <getc@plt+0x880>
   110d8:	mov	r2, #40	; 0x28
   110dc:	ldr	r1, [pc, #672]	; 11384 <getc@plt+0x898>
   110e0:	ldr	r0, [pc, #672]	; 11388 <getc@plt+0x89c>
   110e4:	bl	10ad4 <strncmp@plt>
   110e8:	ldr	r6, [pc, #664]	; 11388 <getc@plt+0x89c>
   110ec:	cmp	r0, #0
   110f0:	bne	1136c <getc@plt+0x880>
   110f4:	mov	r0, r4
   110f8:	bl	10d78 <getc@plt+0x28c>
   110fc:	cmp	r0, #0
   11100:	beq	1136c <getc@plt+0x880>
   11104:	ldr	r1, [pc, #640]	; 1138c <getc@plt+0x8a0>
   11108:	mov	r0, r6
   1110c:	bl	10984 <strcmp@plt>
   11110:	cmp	r0, #0
   11114:	bne	1136c <getc@plt+0x880>
   11118:	mov	r2, r5
   1111c:	add	r1, sp, #4
   11120:	mov	r0, r4
   11124:	bl	10dcc <getc@plt+0x2e0>
   11128:	cmp	r0, #0
   1112c:	beq	1136c <getc@plt+0x880>
   11130:	add	r2, r5, #4
   11134:	add	r1, sp, #8
   11138:	mov	r0, r4
   1113c:	bl	10dcc <getc@plt+0x2e0>
   11140:	cmp	r0, #0
   11144:	beq	1136c <getc@plt+0x880>
   11148:	mov	r0, r4
   1114c:	bl	10d78 <getc@plt+0x28c>
   11150:	cmp	r0, #0
   11154:	beq	1136c <getc@plt+0x880>
   11158:	mov	r0, r4
   1115c:	bl	10d78 <getc@plt+0x28c>
   11160:	cmp	r0, #0
   11164:	beq	1136c <getc@plt+0x880>
   11168:	add	r2, r5, #8
   1116c:	add	r1, sp, #12
   11170:	mov	r0, r4
   11174:	bl	10dcc <getc@plt+0x2e0>
   11178:	cmp	r0, #0
   1117c:	beq	1136c <getc@plt+0x880>
   11180:	add	r2, r5, #12
   11184:	add	r1, sp, #12
   11188:	mov	r0, r4
   1118c:	bl	10dcc <getc@plt+0x2e0>
   11190:	cmp	r0, #0
   11194:	beq	1136c <getc@plt+0x880>
   11198:	add	r2, r5, #16
   1119c:	add	r1, sp, #12
   111a0:	mov	r0, r4
   111a4:	bl	10dcc <getc@plt+0x2e0>
   111a8:	cmp	r0, #0
   111ac:	beq	1136c <getc@plt+0x880>
   111b0:	mov	r0, r4
   111b4:	bl	10d78 <getc@plt+0x28c>
   111b8:	cmp	r0, #0
   111bc:	beq	1136c <getc@plt+0x880>
   111c0:	mov	r0, r4
   111c4:	bl	10d78 <getc@plt+0x28c>
   111c8:	cmp	r0, #0
   111cc:	beq	1136c <getc@plt+0x880>
   111d0:	mov	r0, r4
   111d4:	bl	10d78 <getc@plt+0x28c>
   111d8:	cmp	r0, #0
   111dc:	beq	1136c <getc@plt+0x880>
   111e0:	mov	r0, r4
   111e4:	bl	10d78 <getc@plt+0x28c>
   111e8:	cmp	r0, #0
   111ec:	beq	1136c <getc@plt+0x880>
   111f0:	add	r1, r5, #20
   111f4:	mov	r0, r4
   111f8:	bl	10e20 <getc@plt+0x334>
   111fc:	cmp	r0, #0
   11200:	beq	1136c <getc@plt+0x880>
   11204:	add	r1, r5, #36	; 0x24
   11208:	mov	r0, r4
   1120c:	bl	10e20 <getc@plt+0x334>
   11210:	cmp	r0, #0
   11214:	beq	1136c <getc@plt+0x880>
   11218:	add	r1, r5, #52	; 0x34
   1121c:	mov	r0, r4
   11220:	bl	10e20 <getc@plt+0x334>
   11224:	cmp	r0, #0
   11228:	beq	1136c <getc@plt+0x880>
   1122c:	mov	r0, r4
   11230:	bl	10d78 <getc@plt+0x28c>
   11234:	cmp	r0, #0
   11238:	beq	1136c <getc@plt+0x880>
   1123c:	mov	r0, r4
   11240:	bl	10d78 <getc@plt+0x28c>
   11244:	cmp	r0, #0
   11248:	beq	11258 <getc@plt+0x76c>
   1124c:	ldrb	r3, [r6]
   11250:	cmp	r3, #10
   11254:	bne	1123c <getc@plt+0x750>
   11258:	ldr	r3, [sp, #8]
   1125c:	cmp	r3, #0
   11260:	bgt	11280 <getc@plt+0x794>
   11264:	ldr	r3, [sp, #4]
   11268:	cmp	r3, #0
   1126c:	bgt	112e0 <getc@plt+0x7f4>
   11270:	mov	r0, r4
   11274:	bl	11df0 <getc@plt+0x1304>
   11278:	add	sp, sp, #24
   1127c:	pop	{r4, r5, r6, r7, r8, pc}
   11280:	mov	r0, r4
   11284:	bl	10d78 <getc@plt+0x28c>
   11288:	cmp	r0, #0
   1128c:	beq	11264 <getc@plt+0x778>
   11290:	ldr	r8, [pc, #248]	; 11390 <getc@plt+0x8a4>
   11294:	ldr	r7, [pc, #236]	; 11388 <getc@plt+0x89c>
   11298:	b	112b0 <getc@plt+0x7c4>
   1129c:	ldr	r3, [sp, #16]
   112a0:	ldr	r2, [sp, #12]
   112a4:	ldr	r1, [pc, #232]	; 11394 <getc@plt+0x8a8>
   112a8:	mov	r0, r5
   112ac:	bl	11034 <getc@plt+0x548>
   112b0:	mov	r0, r4
   112b4:	bl	10d78 <getc@plt+0x28c>
   112b8:	cmp	r0, #0
   112bc:	beq	11264 <getc@plt+0x778>
   112c0:	add	r3, sp, #16
   112c4:	add	r2, sp, #12
   112c8:	mov	r1, r8
   112cc:	mov	r0, r7
   112d0:	bl	10a98 <__isoc99_sscanf@plt>
   112d4:	cmp	r0, #2
   112d8:	beq	1129c <getc@plt+0x7b0>
   112dc:	b	11264 <getc@plt+0x778>
   112e0:	mov	r0, r4
   112e4:	bl	10d78 <getc@plt+0x28c>
   112e8:	cmp	r0, #0
   112ec:	ldrne	r7, [pc, #156]	; 11390 <getc@plt+0x8a4>
   112f0:	beq	11270 <getc@plt+0x784>
   112f4:	mov	r0, r4
   112f8:	bl	10d78 <getc@plt+0x28c>
   112fc:	cmp	r0, #0
   11300:	beq	11270 <getc@plt+0x784>
   11304:	add	r3, sp, #16
   11308:	add	r2, sp, #12
   1130c:	mov	r1, r7
   11310:	ldr	r0, [pc, #112]	; 11388 <getc@plt+0x89c>
   11314:	bl	10a98 <__isoc99_sscanf@plt>
   11318:	cmp	r0, #2
   1131c:	bne	11270 <getc@plt+0x784>
   11320:	ldrb	r3, [r6, #31]
   11324:	cmp	r3, #125	; 0x7d
   11328:	ldrbeq	r3, [r6, #30]
   1132c:	beq	1133c <getc@plt+0x850>
   11330:	cmp	r3, #92	; 0x5c
   11334:	bne	11358 <getc@plt+0x86c>
   11338:	mov	r3, #10
   1133c:	str	r3, [sp, #20]
   11340:	ldr	r3, [sp, #16]
   11344:	ldr	r2, [sp, #12]
   11348:	ldr	r1, [sp, #20]
   1134c:	mov	r0, r5
   11350:	bl	10fbc <getc@plt+0x4d0>
   11354:	b	112f4 <getc@plt+0x808>
   11358:	add	r2, sp, #20
   1135c:	ldr	r1, [pc, #52]	; 11398 <getc@plt+0x8ac>
   11360:	ldr	r0, [pc, #52]	; 1139c <getc@plt+0x8b0>
   11364:	bl	10a98 <__isoc99_sscanf@plt>
   11368:	b	11340 <getc@plt+0x854>
   1136c:	cmp	r7, #0
   11370:	ldr	r1, [pc, #40]	; 113a0 <getc@plt+0x8b4>
   11374:	ldr	r0, [pc, #40]	; 113a4 <getc@plt+0x8b8>
   11378:	movne	r1, r7
   1137c:	bl	11f80 <error@@Base+0x88>
   11380:	andeq	r3, r1, r1, lsr #20
   11384:	andeq	r2, r1, r0, asr #26
   11388:	strheq	r4, [r2], -r9
   1138c:	andeq	r3, r1, r0, ror #19
   11390:	andeq	r2, r1, pc, lsl #26
   11394:	andeq	r4, r2, sp, asr #1
   11398:	andeq	r2, r1, fp, ror #26
   1139c:	ldrdeq	r4, [r2], -r8
   113a0:	andeq	r2, r1, sl, lsr sp
   113a4:	andeq	r2, r1, pc, ror #26
   113a8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   113ac:	mov	r4, r0
   113b0:	mov	r0, r1
   113b4:	ldr	r1, [pc, #612]	; 11620 <getc@plt+0xb34>
   113b8:	bl	11fc0 <error@@Base+0xc8>
   113bc:	ldr	r3, [pc, #608]	; 11624 <getc@plt+0xb38>
   113c0:	ldr	r2, [pc, #608]	; 11628 <getc@plt+0xb3c>
   113c4:	ldr	r1, [pc, #608]	; 1162c <getc@plt+0xb40>
   113c8:	mov	r6, #0
   113cc:	add	r7, r4, #68	; 0x44
   113d0:	mov	r8, r6
   113d4:	mov	r5, r0
   113d8:	bl	10a80 <fprintf@plt>
   113dc:	ldr	r3, [pc, #588]	; 11630 <getc@plt+0xb44>
   113e0:	ldr	r2, [r4]
   113e4:	ldr	r1, [pc, #584]	; 11634 <getc@plt+0xb48>
   113e8:	mov	r0, r5
   113ec:	bl	10a80 <fprintf@plt>
   113f0:	ldr	r3, [pc, #576]	; 11638 <getc@plt+0xb4c>
   113f4:	ldr	r2, [r4, #4]
   113f8:	ldr	r1, [pc, #564]	; 11634 <getc@plt+0xb48>
   113fc:	mov	r0, r5
   11400:	bl	10a80 <fprintf@plt>
   11404:	ldr	r2, [r4]
   11408:	ldr	r1, [r4, #4]
   1140c:	mov	r0, r5
   11410:	sub	r1, r2, r1
   11414:	bl	10ebc <getc@plt+0x3d0>
   11418:	ldr	r1, [pc, #540]	; 1163c <getc@plt+0xb50>
   1141c:	mov	r0, r5
   11420:	bl	10a80 <fprintf@plt>
   11424:	ldr	r3, [pc, #532]	; 11640 <getc@plt+0xb54>
   11428:	ldr	r2, [r4, #8]
   1142c:	ldr	r1, [pc, #512]	; 11634 <getc@plt+0xb48>
   11430:	mov	r0, r5
   11434:	bl	10a80 <fprintf@plt>
   11438:	ldr	r3, [pc, #516]	; 11644 <getc@plt+0xb58>
   1143c:	ldr	r2, [r4, #12]
   11440:	ldr	r1, [pc, #492]	; 11634 <getc@plt+0xb48>
   11444:	mov	r0, r5
   11448:	bl	10a80 <fprintf@plt>
   1144c:	ldr	r3, [pc, #500]	; 11648 <getc@plt+0xb5c>
   11450:	ldr	r2, [r4, #16]
   11454:	ldr	r1, [pc, #472]	; 11634 <getc@plt+0xb48>
   11458:	mov	r0, r5
   1145c:	bl	10a80 <fprintf@plt>
   11460:	ldr	r3, [r4, #12]
   11464:	ldr	r1, [r4, #8]
   11468:	ldr	r2, [r4]
   1146c:	add	r1, r1, r3
   11470:	mov	r0, r5
   11474:	bl	10ebc <getc@plt+0x3d0>
   11478:	ldr	r1, [pc, #460]	; 1164c <getc@plt+0xb60>
   1147c:	mov	r0, r5
   11480:	bl	10a80 <fprintf@plt>
   11484:	ldr	r2, [r4]
   11488:	ldr	r1, [r4, #48]	; 0x30
   1148c:	mov	r0, r5
   11490:	sub	r1, r2, r1
   11494:	bl	10ebc <getc@plt+0x3d0>
   11498:	ldr	r1, [pc, #432]	; 11650 <getc@plt+0xb64>
   1149c:	mov	r0, r5
   114a0:	bl	10a80 <fprintf@plt>
   114a4:	mov	r1, r5
   114a8:	ldr	r0, [pc, #420]	; 11654 <getc@plt+0xb68>
   114ac:	bl	10ac8 <fputs@plt>
   114b0:	ldr	r2, [pc, #416]	; 11658 <getc@plt+0xb6c>
   114b4:	add	r1, r4, #20
   114b8:	mov	r0, r5
   114bc:	bl	10d9c <getc@plt+0x2b0>
   114c0:	ldr	r2, [pc, #404]	; 1165c <getc@plt+0xb70>
   114c4:	add	r1, r4, #36	; 0x24
   114c8:	mov	r0, r5
   114cc:	bl	10d9c <getc@plt+0x2b0>
   114d0:	ldr	r2, [pc, #392]	; 11660 <getc@plt+0xb74>
   114d4:	add	r1, r4, #52	; 0x34
   114d8:	mov	r0, r5
   114dc:	bl	10d9c <getc@plt+0x2b0>
   114e0:	ldr	r1, [pc, #380]	; 11664 <getc@plt+0xb78>
   114e4:	mov	r0, r5
   114e8:	bl	10a80 <fprintf@plt>
   114ec:	ldr	r3, [r7]
   114f0:	cmp	r3, #0
   114f4:	ble	11514 <getc@plt+0xa28>
   114f8:	mov	r0, r6
   114fc:	bl	11cb0 <getc@plt+0x11c4>
   11500:	mov	r3, r8
   11504:	mov	r1, r7
   11508:	mov	r2, r0
   1150c:	mov	r0, r5
   11510:	bl	10f3c <getc@plt+0x450>
   11514:	add	r6, r6, #1
   11518:	cmp	r6, #256	; 0x100
   1151c:	add	r7, r7, #8
   11520:	bne	114ec <getc@plt+0xa00>
   11524:	add	r6, r4, #2112	; 0x840
   11528:	mov	r3, #0
   1152c:	ldr	r2, [pc, #300]	; 11660 <getc@plt+0xb74>
   11530:	add	r1, r6, #4
   11534:	mov	r0, r5
   11538:	bl	10f3c <getc@plt+0x450>
   1153c:	ldr	r3, [r4, #4]
   11540:	cmp	r3, #0
   11544:	bgt	11564 <getc@plt+0xa78>
   11548:	ldr	r3, [r4]
   1154c:	cmp	r3, #0
   11550:	bgt	115cc <getc@plt+0xae0>
   11554:	mov	r0, r5
   11558:	add	sp, sp, #8
   1155c:	pop	{r4, r5, r6, r7, r8, lr}
   11560:	b	11df0 <getc@plt+0x1304>
   11564:	add	r7, r4, #8192	; 0x2000
   11568:	add	r0, r6, #12
   1156c:	bl	11b00 <getc@plt+0x1014>
   11570:	ldr	r2, [pc, #240]	; 11668 <getc@plt+0xb7c>
   11574:	ldr	r1, [r7, #1980]	; 0x7bc
   11578:	ldr	r0, [r7, #1984]	; 0x7c0
   1157c:	bl	11784 <getc@plt+0xc98>
   11580:	mov	r1, r5
   11584:	ldr	r0, [pc, #224]	; 1166c <getc@plt+0xb80>
   11588:	bl	10ac8 <fputs@plt>
   1158c:	ldr	r8, [pc, #220]	; 11670 <getc@plt+0xb84>
   11590:	mov	r6, #0
   11594:	ldr	r3, [r7, #1984]	; 0x7c0
   11598:	cmp	r6, r3
   1159c:	bge	11548 <getc@plt+0xa5c>
   115a0:	ldr	r3, [r7, #1980]	; 0x7bc
   115a4:	mov	r1, r8
   115a8:	mov	r0, r5
   115ac:	ldr	r2, [r3, r6, lsl #2]
   115b0:	add	r6, r6, #1
   115b4:	ldr	r3, [r2, #8]
   115b8:	str	r3, [sp]
   115bc:	ldr	r3, [r2, #16]
   115c0:	ldr	r2, [r2, #12]
   115c4:	bl	10a80 <fprintf@plt>
   115c8:	b	11594 <getc@plt+0xaa8>
   115cc:	ldr	r1, [pc, #144]	; 11664 <getc@plt+0xb78>
   115d0:	mov	r0, r5
   115d4:	bl	10a80 <fprintf@plt>
   115d8:	add	r4, r4, #10176	; 0x27c0
   115dc:	mov	r6, #0
   115e0:	ldr	r7, [pc, #140]	; 11674 <getc@plt+0xb88>
   115e4:	add	r4, r4, #4
   115e8:	mov	r8, r6
   115ec:	ldr	r3, [r4]
   115f0:	cmp	r3, #0
   115f4:	ble	1160c <getc@plt+0xb20>
   115f8:	mov	r3, r6
   115fc:	mov	r2, r8
   11600:	mov	r1, r4
   11604:	mov	r0, r5
   11608:	bl	10f3c <getc@plt+0x450>
   1160c:	add	r6, r6, #1
   11610:	cmp	r6, r7
   11614:	add	r4, r4, #8
   11618:	bne	115ec <getc@plt+0xb00>
   1161c:	b	11554 <getc@plt+0xa68>
   11620:	andeq	r3, r1, r0, ror #9
   11624:	andeq	r3, r1, r0, ror #19
   11628:	andeq	r2, r1, r0, asr #26
   1162c:	andeq	r2, r1, r1, lsl #27
   11630:	ldrdeq	r3, [r1], -r2
   11634:	strdeq	r2, [r1], -ip
   11638:	andeq	r2, r1, r6, lsl #27
   1163c:	andeq	r2, r1, sp, lsl #27
   11640:	muleq	r1, ip, sp
   11644:	andeq	r2, r1, lr, lsr #27
   11648:			; <UNDEFINED> instruction: 0x00012dbe
   1164c:	andeq	r2, r1, sl, asr #27
   11650:	andeq	r2, r1, r1, ror #27
   11654:	andeq	r2, r1, r0, lsl #28
   11658:	andeq	r2, r1, r6, lsr #28
   1165c:	andeq	r2, r1, sp, lsr #28
   11660:	andeq	r2, r1, r6, lsr lr
   11664:	andeq	r2, r1, ip, lsr lr
   11668:	andeq	r0, r1, r8, lsl #30
   1166c:	andeq	r2, r1, sl, asr lr
   11670:	andeq	r2, r1, r2, lsl #29
   11674:			; <UNDEFINED> instruction: 0x0010ffff
   11678:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1167c:	mov	r7, r0
   11680:	ldr	sl, [pc, #248]	; 11780 <getc@plt+0xc94>
   11684:	mov	r9, r1
   11688:	mov	r6, sl
   1168c:	ldr	r3, [sl]
   11690:	mov	r4, r9
   11694:	mov	r5, r7
   11698:	ldr	fp, [r3, r7, lsl #2]
   1169c:	cmp	r5, r4
   116a0:	blt	116ec <getc@plt+0xc00>
   116a4:	ldr	r3, [r6]
   116a8:	sub	r1, r4, #1
   116ac:	cmp	r7, r1
   116b0:	str	fp, [r3, r4, lsl #2]
   116b4:	bge	116c0 <getc@plt+0xbd4>
   116b8:	mov	r0, r7
   116bc:	bl	11678 <getc@plt+0xb8c>
   116c0:	add	r7, r5, #1
   116c4:	cmp	r7, r9
   116c8:	blt	1168c <getc@plt+0xba0>
   116cc:	add	sp, sp, #12
   116d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116d4:	sub	r4, r4, #1
   116d8:	cmp	r5, r4
   116dc:	sub	r8, r8, #4
   116e0:	bne	116f0 <getc@plt+0xc04>
   116e4:	mov	r2, r4
   116e8:	b	11764 <getc@plt+0xc78>
   116ec:	lsl	r8, r4, #2
   116f0:	ldm	r6, {r2, r3}
   116f4:	mov	r0, fp
   116f8:	ldr	r1, [r2, r8]
   116fc:	blx	r3
   11700:	cmp	r0, #0
   11704:	blt	116d4 <getc@plt+0xbe8>
   11708:	ldr	r2, [r6]
   1170c:	lsl	r1, r5, #2
   11710:	add	r8, r5, #1
   11714:	ldr	r0, [r2, r4, lsl #2]
   11718:	lsl	r3, r4, #2
   1171c:	str	r0, [r2, r5, lsl #2]
   11720:	add	r5, r1, #4
   11724:	cmp	r8, r4
   11728:	bge	11778 <getc@plt+0xc8c>
   1172c:	ldm	r6, {r1, r2}
   11730:	mov	r0, fp
   11734:	str	r3, [sp, #4]
   11738:	ldr	r1, [r1, r5]
   1173c:	blx	r2
   11740:	add	r5, r5, #4
   11744:	ldr	r3, [sp, #4]
   11748:	cmp	r0, #0
   1174c:	bgt	11770 <getc@plt+0xc84>
   11750:	ldr	r1, [r6]
   11754:	sub	r2, r4, #1
   11758:	mov	r4, r8
   1175c:	ldr	r0, [r1, r8, lsl #2]
   11760:	str	r0, [r1, r3]
   11764:	mov	r5, r4
   11768:	mov	r4, r2
   1176c:	b	1169c <getc@plt+0xbb0>
   11770:	add	r8, r8, #1
   11774:	b	11724 <getc@plt+0xc38>
   11778:	bne	11750 <getc@plt+0xc64>
   1177c:	b	116e4 <getc@plt+0xbf8>
   11780:	andeq	r4, r2, r0, lsr #2
   11784:	cmp	r0, #1
   11788:	bxle	lr
   1178c:	ldr	r3, [pc, #12]	; 117a0 <getc@plt+0xcb4>
   11790:	stm	r3, {r1, r2}
   11794:	sub	r1, r0, #1
   11798:	mov	r0, #0
   1179c:	b	11678 <getc@plt+0xb8c>
   117a0:	andeq	r4, r2, r0, lsr #2
   117a4:	andeq	r0, r0, r0
   117a8:	push	{r4, r5, r6, lr}
   117ac:	mov	r4, r0
   117b0:	mov	r6, r1
   117b4:	mov	r0, #1
   117b8:	mov	r1, #32
   117bc:	mov	r5, r2
   117c0:	bl	11f34 <error@@Base+0x3c>
   117c4:	str	r6, [r0, #8]
   117c8:	str	r5, [r0, #12]
   117cc:	ldr	r1, [r4, #24]
   117d0:	ldr	r3, [r4, #28]
   117d4:	add	r1, r1, r6
   117d8:	add	r2, r3, r5
   117dc:	str	r1, [r4, #24]
   117e0:	str	r2, [r4, #28]
   117e4:	mov	r1, r0
   117e8:	mov	r0, r4
   117ec:	pop	{r4, r5, r6, lr}
   117f0:	b	12838 <error@@Base+0x940>
   117f4:	push	{r4, r5, r6, lr}
   117f8:	vpush	{d8-d9}
   117fc:	ldr	lr, [r0]
   11800:	mov	r6, r2
   11804:	mov	r4, r0
   11808:	mov	r5, r1
   1180c:	mov	r3, lr
   11810:	mov	r2, #0
   11814:	cmp	r3, #0
   11818:	bne	1182c <getc@plt+0xd40>
   1181c:	cmp	r2, #1
   11820:	bgt	11840 <getc@plt+0xd54>
   11824:	ldr	r0, [pc, #388]	; 119b0 <getc@plt+0xec4>
   11828:	bl	11ef8 <error@@Base>
   1182c:	ldr	r1, [r3, #8]
   11830:	ldr	r3, [r3, #4]
   11834:	cmp	r1, #0
   11838:	addgt	r2, r2, #1
   1183c:	b	11814 <getc@plt+0xd28>
   11840:	ldr	r2, [r4, #24]
   11844:	ldr	r1, [r4, #28]
   11848:	vldr	d8, [pc, #328]	; 11998 <getc@plt+0xeac>
   1184c:	sub	r3, r2, r1
   11850:	vmov	s13, r2
   11854:	vmov	s14, r3
   11858:	vldr	d2, [pc, #320]	; 119a0 <getc@plt+0xeb4>
   1185c:	mov	r0, lr
   11860:	vcvt.f64.s32	d6, s13
   11864:	vcvt.f64.s32	d7, s14
   11868:	vmov.f64	d9, d2
   1186c:	vmul.f64	d7, d7, d8
   11870:	vdiv.f64	d3, d7, d6
   11874:	vldr	s15, [r4, #12]
   11878:	vcvt.f64.s32	d4, s15
   1187c:	vmov	r3, s15
   11880:	sub	r3, r3, #1
   11884:	vmov	s13, r3
   11888:	vstr	d3, [r4, #32]
   1188c:	vmul.f64	d3, d4, d3
   11890:	cmp	r0, #0
   11894:	bne	11924 <getc@plt+0xe38>
   11898:	vcvt.f64.s32	d7, s13
   1189c:	vmul.f64	d2, d2, d7
   118a0:	vdiv.f64	d5, d2, d4
   118a4:	vsub.f64	d5, d3, d5
   118a8:	vldr	d3, [pc, #240]	; 119a0 <getc@plt+0xeb4>
   118ac:	vstr	d5, [r4, #40]	; 0x28
   118b0:	cmp	lr, #0
   118b4:	bne	11970 <getc@plt+0xe84>
   118b8:	vdiv.f64	d6, d3, d7
   118bc:	vdiv.f64	d0, d6, d4
   118c0:	bl	10a8c <sqrt@plt>
   118c4:	vldr	d7, [pc, #220]	; 119a8 <getc@plt+0xebc>
   118c8:	vmul.f64	d0, d0, d7
   118cc:	vldr	d7, [r4, #40]	; 0x28
   118d0:	vsub.f64	d7, d7, d0
   118d4:	vcmpe.f64	d7, d8
   118d8:	vmrs	APSR_nzcv, fpscr
   118dc:	bgt	11984 <getc@plt+0xe98>
   118e0:	vcmp.f64	d7, d9
   118e4:	vldr	d6, [pc, #180]	; 119a0 <getc@plt+0xeb4>
   118e8:	vmrs	APSR_nzcv, fpscr
   118ec:	vmovmi.f64	d7, d6
   118f0:	vstr	d7, [r5]
   118f4:	vldr	d7, [r4, #40]	; 0x28
   118f8:	vadd.f64	d0, d0, d7
   118fc:	vcmpe.f64	d0, d8
   11900:	vmrs	APSR_nzcv, fpscr
   11904:	bgt	1198c <getc@plt+0xea0>
   11908:	vcmp.f64	d0, d9
   1190c:	vldr	d7, [pc, #140]	; 119a0 <getc@plt+0xeb4>
   11910:	vmrs	APSR_nzcv, fpscr
   11914:	vmovmi.f64	d0, d7
   11918:	vpop	{d8-d9}
   1191c:	vstr	d0, [r6]
   11920:	pop	{r4, r5, r6, pc}
   11924:	ldr	ip, [r0, #8]
   11928:	ldr	r3, [r0, #12]
   1192c:	sub	ip, r2, ip
   11930:	sub	r3, r1, r3
   11934:	sub	r3, ip, r3
   11938:	vmov	s12, ip
   1193c:	vmov	s14, r3
   11940:	vcvt.f64.s32	d5, s12
   11944:	vcvt.f64.s32	d7, s14
   11948:	vmul.f64	d7, d7, d8
   1194c:	vdiv.f64	d1, d7, d5
   11950:	vcvt.f64.s32	d7, s13
   11954:	vmov.f64	d5, d3
   11958:	vmls.f64	d5, d7, d1
   1195c:	vstr	d1, [r0, #16]
   11960:	vadd.f64	d2, d2, d1
   11964:	vstr	d5, [r0, #24]
   11968:	ldr	r0, [r0, #4]
   1196c:	b	11890 <getc@plt+0xda4>
   11970:	vldr	d6, [lr, #24]
   11974:	ldr	lr, [lr, #4]
   11978:	vsub.f64	d6, d6, d5
   1197c:	vmla.f64	d3, d6, d6
   11980:	b	118b0 <getc@plt+0xdc4>
   11984:	vldr	d7, [pc, #12]	; 11998 <getc@plt+0xeac>
   11988:	b	118f0 <getc@plt+0xe04>
   1198c:	vldr	d0, [pc, #4]	; 11998 <getc@plt+0xeac>
   11990:	b	11918 <getc@plt+0xe2c>
   11994:	nop			; (mov r0, r0)
   11998:	andeq	r0, r0, r0
   1199c:	subsmi	r0, r9, r0
	...
   119a8:			; <UNDEFINED> instruction: 0xf5c28f5c
   119ac:	svccc	0x00ff5c28
   119b0:	muleq	r1, r1, lr
   119b4:	sub	r2, r0, #1
   119b8:	mov	r0, #0
   119bc:	push	{r4, lr}
   119c0:	ldrb	r3, [r2, #1]!
   119c4:	cmp	r3, #0
   119c8:	bne	119dc <getc@plt+0xef0>
   119cc:	ldr	r1, [pc, #16]	; 119e4 <getc@plt+0xef8>
   119d0:	bl	12b60 <error@@Base+0xc68>
   119d4:	sxth	r0, r1
   119d8:	pop	{r4, pc}
   119dc:	add	r0, r0, r3
   119e0:	b	119c0 <getc@plt+0xed4>
   119e4:	strdeq	r0, [r0], -r7
   119e8:	push	{r4, r5, r6, lr}
   119ec:	add	r6, r0, #8000	; 0x1f40
   119f0:	mov	r4, r0
   119f4:	mov	r5, r0
   119f8:	add	r6, r6, #48	; 0x30
   119fc:	mov	r0, r5
   11a00:	add	r5, r5, #16
   11a04:	bl	12810 <error@@Base+0x918>
   11a08:	cmp	r5, r6
   11a0c:	bne	119fc <getc@plt+0xf10>
   11a10:	add	r4, r4, #4096	; 0x1000
   11a14:	mov	r3, #0
   11a18:	str	r3, [r4, #3952]	; 0xf70
   11a1c:	str	r3, [r4, #3956]	; 0xf74
   11a20:	pop	{r4, r5, r6, pc}
   11a24:	push	{r4, r5, r6, lr}
   11a28:	mov	r4, r0
   11a2c:	mov	r0, r1
   11a30:	mov	r5, r1
   11a34:	bl	119b4 <getc@plt+0xec8>
   11a38:	ldr	r4, [r4, r0, lsl #4]
   11a3c:	cmp	r4, #0
   11a40:	beq	11a58 <getc@plt+0xf6c>
   11a44:	ldr	r1, [r4, #8]
   11a48:	mov	r0, r5
   11a4c:	bl	10984 <strcmp@plt>
   11a50:	cmp	r0, #0
   11a54:	bne	11a60 <getc@plt+0xf74>
   11a58:	mov	r0, r4
   11a5c:	pop	{r4, r5, r6, pc}
   11a60:	ldr	r4, [r4, #4]
   11a64:	b	11a3c <getc@plt+0xf50>
   11a68:	push	{r4, r5, r6, lr}
   11a6c:	mov	r4, r0
   11a70:	ldr	r0, [r1, #8]
   11a74:	mov	r5, r1
   11a78:	bl	119b4 <getc@plt+0xec8>
   11a7c:	mov	r1, r5
   11a80:	add	r0, r4, r0, lsl #4
   11a84:	add	r4, r4, #4096	; 0x1000
   11a88:	bl	12828 <error@@Base+0x930>
   11a8c:	ldr	r0, [r4, #3952]	; 0xf70
   11a90:	cmp	r0, #0
   11a94:	beq	11aa4 <getc@plt+0xfb8>
   11a98:	bl	109a8 <free@plt>
   11a9c:	mov	r3, #0
   11aa0:	str	r3, [r4, #3952]	; 0xf70
   11aa4:	ldr	r3, [r4, #3956]	; 0xf74
   11aa8:	add	r3, r3, #1
   11aac:	str	r3, [r4, #3956]	; 0xf74
   11ab0:	pop	{r4, r5, r6, pc}
   11ab4:	push	{r4, r5, r6, lr}
   11ab8:	mov	r4, r0
   11abc:	ldr	r0, [r1, #8]
   11ac0:	mov	r5, r1
   11ac4:	bl	119b4 <getc@plt+0xec8>
   11ac8:	mov	r1, r5
   11acc:	add	r0, r4, r0, lsl #4
   11ad0:	add	r4, r4, #4096	; 0x1000
   11ad4:	bl	12860 <error@@Base+0x968>
   11ad8:	ldr	r0, [r4, #3952]	; 0xf70
   11adc:	cmp	r0, #0
   11ae0:	beq	11af0 <getc@plt+0x1004>
   11ae4:	bl	109a8 <free@plt>
   11ae8:	mov	r3, #0
   11aec:	str	r3, [r4, #3952]	; 0xf70
   11af0:	ldr	r3, [r4, #3956]	; 0xf74
   11af4:	sub	r3, r3, #1
   11af8:	str	r3, [r4, #3956]	; 0xf74
   11afc:	pop	{r4, r5, r6, pc}
   11b00:	push	{r4, r5, r6, lr}
   11b04:	add	r6, r0, #4096	; 0x1000
   11b08:	ldr	r4, [r6, #3952]	; 0xf70
   11b0c:	cmp	r4, #0
   11b10:	popne	{r4, r5, r6, pc}
   11b14:	ldr	r3, [r6, #3956]	; 0xf74
   11b18:	cmp	r3, #0
   11b1c:	popeq	{r4, r5, r6, pc}
   11b20:	mov	r5, r0
   11b24:	mov	r1, #4
   11b28:	mov	r0, r3
   11b2c:	bl	11f34 <error@@Base+0x3c>
   11b30:	ldr	lr, [pc, #60]	; 11b74 <getc@plt+0x1088>
   11b34:	mov	r3, r4
   11b38:	mov	r2, r4
   11b3c:	str	r0, [r6, #3952]	; 0xf70
   11b40:	ldr	r1, [r5, r2, lsl #4]
   11b44:	mov	ip, r3
   11b48:	cmp	r1, #0
   11b4c:	mov	r3, ip
   11b50:	bne	11b64 <getc@plt+0x1078>
   11b54:	add	r2, r2, #1
   11b58:	cmp	r2, lr
   11b5c:	bne	11b40 <getc@plt+0x1054>
   11b60:	pop	{r4, r5, r6, pc}
   11b64:	str	r1, [r0, ip, lsl #2]
   11b68:	add	ip, ip, #1
   11b6c:	ldr	r1, [r1, #4]
   11b70:	b	11b48 <getc@plt+0x105c>
   11b74:	strdeq	r0, [r0], -r7
   11b78:	push	{r4, r5, r6, r7, r8, lr}
   11b7c:	add	r6, r0, #8000	; 0x1f40
   11b80:	mov	r4, r0
   11b84:	mov	r7, r1
   11b88:	mov	r5, r0
   11b8c:	add	r6, r6, #48	; 0x30
   11b90:	mov	r0, r5
   11b94:	mov	r1, r7
   11b98:	add	r5, r5, #16
   11b9c:	bl	1290c <error@@Base+0xa14>
   11ba0:	cmp	r5, r6
   11ba4:	bne	11b90 <getc@plt+0x10a4>
   11ba8:	add	r4, r4, #4096	; 0x1000
   11bac:	ldr	r0, [r4, #3952]	; 0xf70
   11bb0:	cmp	r0, #0
   11bb4:	beq	11bc4 <getc@plt+0x10d8>
   11bb8:	bl	109a8 <free@plt>
   11bbc:	mov	r3, #0
   11bc0:	str	r3, [r4, #3952]	; 0xf70
   11bc4:	mov	r3, #0
   11bc8:	str	r3, [r4, #3956]	; 0xf74
   11bcc:	pop	{r4, r5, r6, r7, r8, pc}
   11bd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bd4:	mov	r7, #0
   11bd8:	ldr	r6, [pc, #144]	; 11c70 <getc@plt+0x1184>
   11bdc:	ldr	r5, [pc, #144]	; 11c74 <getc@plt+0x1188>
   11be0:	mov	sl, r6
   11be4:	sub	r8, r6, #1024	; 0x400
   11be8:	add	fp, r6, #2
   11bec:	ldrsh	r9, [r6]
   11bf0:	mov	r4, #0
   11bf4:	b	11bfc <getc@plt+0x1110>
   11bf8:	add	r4, r4, #1
   11bfc:	cmp	r4, r9
   11c00:	bge	11c3c <getc@plt+0x1150>
   11c04:	ldr	r1, [r8, r4, lsl #2]
   11c08:	ldr	r0, [r5, #8]
   11c0c:	bl	10984 <strcmp@plt>
   11c10:	cmp	r0, #0
   11c14:	bne	11bf8 <getc@plt+0x110c>
   11c18:	ldr	r3, [r5]
   11c1c:	ldr	r2, [r5, #4]
   11c20:	cmp	r2, r3
   11c24:	bcs	11c64 <getc@plt+0x1178>
   11c28:	add	r7, r7, #1
   11c2c:	cmp	r7, #91	; 0x5b
   11c30:	add	r5, r5, #12
   11c34:	bne	11bec <getc@plt+0x1100>
   11c38:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c3c:	bne	11c18 <getc@plt+0x112c>
   11c40:	cmp	r4, #256	; 0x100
   11c44:	bne	11c50 <getc@plt+0x1164>
   11c48:	ldr	r0, [pc, #40]	; 11c78 <getc@plt+0x118c>
   11c4c:	bl	11ef8 <error@@Base>
   11c50:	add	r3, r4, #1
   11c54:	strh	r3, [sl]
   11c58:	ldr	r3, [r5, #8]
   11c5c:	str	r3, [r8, r4, lsl #2]
   11c60:	b	11c18 <getc@plt+0x112c>
   11c64:	strb	r4, [r3, fp]
   11c68:	add	r3, r3, #1
   11c6c:	b	11c20 <getc@plt+0x1134>
   11c70:	andeq	r4, r2, r8, lsr #10
   11c74:	andeq	r2, r1, ip, lsr #29
   11c78:	strdeq	r3, [r1], -r0
   11c7c:	ldr	r3, [pc, #36]	; 11ca8 <getc@plt+0x11bc>
   11c80:	push	{r4, lr}
   11c84:	mov	r4, r0
   11c88:	ldrsh	r3, [r3]
   11c8c:	cmp	r3, #0
   11c90:	bne	11c98 <getc@plt+0x11ac>
   11c94:	bl	11bd0 <getc@plt+0x10e4>
   11c98:	ldr	r3, [pc, #12]	; 11cac <getc@plt+0x11c0>
   11c9c:	add	r0, r3, r4
   11ca0:	ldrb	r0, [r0, #1026]	; 0x402
   11ca4:	pop	{r4, pc}
   11ca8:	andeq	r4, r2, r8, lsr #10
   11cac:	andeq	r4, r2, r8, lsr #2
   11cb0:	ldr	r3, [pc, #56]	; 11cf0 <getc@plt+0x1204>
   11cb4:	push	{r4, r5, r6, lr}
   11cb8:	uxtb	r5, r0
   11cbc:	ldrsh	r2, [r3]
   11cc0:	mov	r4, r3
   11cc4:	cmp	r2, #0
   11cc8:	bne	11cd0 <getc@plt+0x11e4>
   11ccc:	bl	11bd0 <getc@plt+0x10e4>
   11cd0:	ldrsh	r3, [r4]
   11cd4:	cmp	r5, r3
   11cd8:	blt	11ce4 <getc@plt+0x11f8>
   11cdc:	ldr	r0, [pc, #16]	; 11cf4 <getc@plt+0x1208>
   11ce0:	bl	11ef8 <error@@Base>
   11ce4:	ldr	r3, [pc, #12]	; 11cf8 <getc@plt+0x120c>
   11ce8:	ldr	r0, [r3, r5, lsl #2]
   11cec:	pop	{r4, r5, r6, pc}
   11cf0:	andeq	r4, r2, r8, lsr #10
   11cf4:	andeq	r3, r1, fp, lsl #6
   11cf8:	andeq	r4, r2, r8, lsr #2
   11cfc:	ldr	r3, [pc, #56]	; 11d3c <getc@plt+0x1250>
   11d00:	push	{r4, r5, lr}
   11d04:	sub	sp, sp, #116	; 0x74
   11d08:	ldr	r4, [r3]
   11d0c:	mov	r5, r0
   11d10:	bl	10a50 <getpid@plt>
   11d14:	mov	r2, r4
   11d18:	ldr	r1, [pc, #32]	; 11d40 <getc@plt+0x1254>
   11d1c:	str	r5, [sp]
   11d20:	mov	r3, r0
   11d24:	add	r0, sp, #12
   11d28:	bl	10ab0 <sprintf@plt>
   11d2c:	add	r0, sp, #12
   11d30:	bl	109d8 <strdup@plt>
   11d34:	add	sp, sp, #116	; 0x74
   11d38:	pop	{r4, r5, pc}
   11d3c:	addseq	r6, fp, r4, lsr #26
   11d40:	ldrdeq	r3, [r1], -r6
   11d44:	ldr	r3, [pc, #84]	; 11da0 <getc@plt+0x12b4>
   11d48:	push	{r7, lr}
   11d4c:	mov	r5, r0
   11d50:	ldr	r3, [r3]
   11d54:	cmp	r3, #0
   11d58:	beq	11d60 <getc@plt+0x1274>
   11d5c:	blx	r3
   11d60:	ldr	r6, [pc, #60]	; 11da4 <getc@plt+0x12b8>
   11d64:	mov	r4, #1
   11d68:	ldrsh	r3, [r6]
   11d6c:	cmp	r3, r4
   11d70:	bge	11d7c <getc@plt+0x1290>
   11d74:	mov	r0, r5
   11d78:	bl	10a5c <exit@plt>
   11d7c:	mov	r0, r4
   11d80:	bl	11cfc <getc@plt+0x1210>
   11d84:	add	r4, r4, #1
   11d88:	sxth	r4, r4
   11d8c:	mov	r7, r0
   11d90:	bl	109f0 <unlink@plt>
   11d94:	mov	r0, r7
   11d98:	bl	109a8 <free@plt>
   11d9c:	b	11d68 <getc@plt+0x127c>
   11da0:	addseq	r6, fp, r8, lsr #26
   11da4:	andseq	r4, r3, sl, lsr #10
   11da8:	mov	r3, #0
   11dac:	ldrb	r2, [r0, r3]
   11db0:	cmp	r2, #0
   11db4:	beq	11de0 <getc@plt+0x12f4>
   11db8:	ldrb	ip, [r1, r3]
   11dbc:	cmp	ip, r2
   11dc0:	beq	11dd8 <getc@plt+0x12ec>
   11dc4:	ldrb	r3, [r1, r3]
   11dc8:	cmp	r3, r2
   11dcc:	mvnhi	r0, #0
   11dd0:	movls	r0, #1
   11dd4:	bx	lr
   11dd8:	add	r3, r3, #1
   11ddc:	b	11dac <getc@plt+0x12c0>
   11de0:	ldrb	r0, [r1, r3]
   11de4:	cmp	r0, #0
   11de8:	bne	11dc4 <getc@plt+0x12d8>
   11dec:	bx	lr
   11df0:	ldr	r2, [pc, #28]	; 11e14 <getc@plt+0x1328>
   11df4:	ldr	r2, [r2]
   11df8:	cmp	r2, r0
   11dfc:	bxeq	lr
   11e00:	ldr	r2, [pc, #16]	; 11e18 <getc@plt+0x132c>
   11e04:	ldr	r2, [r2]
   11e08:	cmp	r0, r2
   11e0c:	bxeq	lr
   11e10:	b	10aa4 <fclose@plt>
   11e14:	strheq	r4, [r2], -r0
   11e18:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   11e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e20:	sub	sp, sp, #92	; 0x5c
   11e24:	mov	r1, sp
   11e28:	bl	12bf4 <error@@Base+0xcfc>
   11e2c:	clz	r0, r0
   11e30:	lsr	r0, r0, #5
   11e34:	add	sp, sp, #92	; 0x5c
   11e38:	pop	{pc}		; (ldr pc, [sp], #4)
   11e3c:	ldr	r3, [pc, #36]	; 11e68 <getc@plt+0x137c>
   11e40:	push	{r4, lr}
   11e44:	ldrh	r0, [r3]
   11e48:	add	r0, r0, #1
   11e4c:	sxth	r0, r0
   11e50:	strh	r0, [r3]
   11e54:	bl	11cfc <getc@plt+0x1210>
   11e58:	mov	r4, r0
   11e5c:	bl	109f0 <unlink@plt>
   11e60:	mov	r0, r4
   11e64:	pop	{r4, pc}
   11e68:	andseq	r4, r3, sl, lsr #10
   11e6c:	push	{r4, lr}
   11e70:	mov	r4, r0
   11e74:	bl	10a74 <strlen@plt>
   11e78:	sub	r0, r0, #1
   11e7c:	sxth	r0, r0
   11e80:	cmp	r0, #0
   11e84:	blt	11e94 <getc@plt+0x13a8>
   11e88:	ldrb	r3, [r4, r0]
   11e8c:	cmp	r3, #47	; 0x2f
   11e90:	bne	11e78 <getc@plt+0x138c>
   11e94:	add	r0, r0, #1
   11e98:	add	r0, r4, r0
   11e9c:	pop	{r4, pc}
   11ea0:	push	{r4, lr}
   11ea4:	mov	r0, #0
   11ea8:	bl	11d44 <getc@plt+0x1258>
   11eac:	ldr	r2, [pc, #52]	; 11ee8 <getc@plt+0x13fc>
   11eb0:	push	{r4, lr}
   11eb4:	ldr	r2, [r2]
   11eb8:	cmp	r2, #0
   11ebc:	beq	11ec8 <getc@plt+0x13dc>
   11ec0:	blx	r2
   11ec4:	bl	11ea0 <getc@plt+0x13b4>
   11ec8:	mov	r3, r0
   11ecc:	ldr	r2, [pc, #24]	; 11eec <getc@plt+0x1400>
   11ed0:	ldr	r0, [pc, #24]	; 11ef0 <getc@plt+0x1404>
   11ed4:	ldr	r1, [pc, #24]	; 11ef4 <getc@plt+0x1408>
   11ed8:	ldr	r2, [r2]
   11edc:	ldr	r0, [r0]
   11ee0:	bl	10a80 <fprintf@plt>
   11ee4:	b	11ec4 <getc@plt+0x13d8>
   11ee8:	addseq	r6, fp, r0, lsr #26
   11eec:	addseq	r6, fp, r4, lsr #26
   11ef0:	andeq	r4, r2, r8, lsr #1
   11ef4:	andeq	r3, r1, r4, ror #17

00011ef8 <error@@Base>:
   11ef8:	mov	r3, r0
   11efc:	ldr	r2, [pc, #32]	; 11f24 <error@@Base+0x2c>
   11f00:	ldr	r0, [pc, #32]	; 11f28 <error@@Base+0x30>
   11f04:	push	{r4, lr}
   11f08:	ldr	r2, [r2]
   11f0c:	ldr	r1, [pc, #24]	; 11f2c <error@@Base+0x34>
   11f10:	ldr	r0, [r0]
   11f14:	bl	10a80 <fprintf@plt>
   11f18:	ldr	r3, [pc, #16]	; 11f30 <error@@Base+0x38>
   11f1c:	ldr	r0, [r3]
   11f20:	bl	11d44 <getc@plt+0x1258>
   11f24:	addseq	r6, fp, r4, lsr #26
   11f28:	andeq	r4, r2, r8, lsr #1
   11f2c:	strdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   11f30:	muleq	r2, ip, r0
   11f34:	push	{r4, lr}
   11f38:	bl	1096c <calloc@plt>
   11f3c:	cmp	r0, #0
   11f40:	popne	{r4, pc}
   11f44:	ldr	r0, [pc]	; 11f4c <error@@Base+0x54>
   11f48:	bl	11ef8 <error@@Base>
   11f4c:	strdeq	r3, [r1], -fp
   11f50:	ldr	r3, [pc, #32]	; 11f78 <error@@Base+0x80>
   11f54:	ldrb	r2, [r3, #2]
   11f58:	cmp	r2, #0
   11f5c:	bne	11f74 <error@@Base+0x7c>
   11f60:	push	{r4, lr}
   11f64:	mov	r2, #1
   11f68:	ldr	r0, [pc, #12]	; 11f7c <error@@Base+0x84>
   11f6c:	strb	r2, [r3, #2]
   11f70:	bl	11ef8 <error@@Base>
   11f74:	bx	lr
   11f78:	andseq	r4, r3, sl, lsr #10
   11f7c:	andeq	r3, r1, r5, lsl r9
   11f80:	push	{r0, r1, r2, lr}
   11f84:	mov	r3, r0
   11f88:	ldr	r2, [pc, #32]	; 11fb0 <error@@Base+0xb8>
   11f8c:	ldr	r0, [pc, #32]	; 11fb4 <error@@Base+0xbc>
   11f90:	str	r1, [sp]
   11f94:	ldr	r1, [pc, #28]	; 11fb8 <error@@Base+0xc0>
   11f98:	ldr	r2, [r2]
   11f9c:	ldr	r0, [r0]
   11fa0:	bl	10a80 <fprintf@plt>
   11fa4:	ldr	r3, [pc, #16]	; 11fbc <error@@Base+0xc4>
   11fa8:	ldr	r0, [r3]
   11fac:	bl	11d44 <getc@plt+0x1258>
   11fb0:	addseq	r6, fp, r4, lsr #26
   11fb4:	andeq	r4, r2, r8, lsr #1
   11fb8:	andeq	r3, r1, r4, lsr #18
   11fbc:	muleq	r2, ip, r0
   11fc0:	push	{r4, r5, r6, lr}
   11fc4:	subs	r4, r0, #0
   11fc8:	mov	r5, r1
   11fcc:	bne	11fe8 <error@@Base+0xf0>
   11fd0:	ldrb	r3, [r1]
   11fd4:	cmp	r3, #114	; 0x72
   11fd8:	ldreq	r3, [pc, #44]	; 1200c <error@@Base+0x114>
   11fdc:	ldrne	r3, [pc, #44]	; 12010 <error@@Base+0x118>
   11fe0:	ldr	r0, [r3]
   11fe4:	pop	{r4, r5, r6, pc}
   11fe8:	bl	1099c <fopen@plt>
   11fec:	cmp	r0, #0
   11ff0:	popne	{r4, r5, r6, pc}
   11ff4:	ldrb	r3, [r5]
   11ff8:	mov	r1, r4
   11ffc:	cmp	r3, #119	; 0x77
   12000:	ldreq	r0, [pc, #12]	; 12014 <error@@Base+0x11c>
   12004:	ldrne	r0, [pc, #12]	; 12018 <error@@Base+0x120>
   12008:	bl	11f80 <error@@Base+0x88>
   1200c:	strheq	r4, [r2], -r0
   12010:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   12014:	andeq	r3, r1, r1, lsr r9
   12018:	andeq	r3, r1, r7, asr #18
   1201c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12020:	mov	r8, r0
   12024:	ldr	r0, [r1]
   12028:	str	r2, [sp]
   1202c:	mov	r7, r1
   12030:	mov	r9, r3
   12034:	bl	11e6c <getc@plt+0x1380>
   12038:	ldr	r3, [pc, #396]	; 121cc <error@@Base+0x2d4>
   1203c:	ldr	r1, [pc, #396]	; 121d0 <error@@Base+0x2d8>
   12040:	str	r0, [r3]
   12044:	mov	r0, #2
   12048:	bl	10a38 <__sysv_signal@plt>
   1204c:	ldr	r1, [pc, #380]	; 121d0 <error@@Base+0x2d8>
   12050:	mov	r0, #15
   12054:	bl	10a38 <__sysv_signal@plt>
   12058:	ldr	r3, [r8]
   1205c:	cmp	r3, #1
   12060:	movne	r6, #0
   12064:	movne	r5, #1
   12068:	bne	1218c <error@@Base+0x294>
   1206c:	ldr	r3, [pc, #352]	; 121d4 <error@@Base+0x2dc>
   12070:	ldrb	r6, [r3, #4]
   12074:	cmp	r6, #0
   12078:	beq	12198 <error@@Base+0x2a0>
   1207c:	ldr	r0, [sp]
   12080:	bl	11eac <getc@plt+0x13c0>
   12084:	ldr	r4, [r7, r5, lsl #2]
   12088:	lsl	sl, r5, #2
   1208c:	ldrb	r3, [r4]
   12090:	cmp	r3, #45	; 0x2d
   12094:	bne	121bc <error@@Base+0x2c4>
   12098:	ldrb	r3, [r4, #1]
   1209c:	cmp	r3, #0
   120a0:	str	r3, [sp, #4]
   120a4:	beq	121bc <error@@Base+0x2c4>
   120a8:	mov	r0, r4
   120ac:	bl	10a74 <strlen@plt>
   120b0:	mov	r1, r4
   120b4:	mov	r2, r0
   120b8:	ldr	r0, [pc, #280]	; 121d8 <error@@Base+0x2e0>
   120bc:	bl	10ad4 <strncmp@plt>
   120c0:	cmp	r0, #0
   120c4:	beq	1207c <error@@Base+0x184>
   120c8:	add	r0, r5, #1
   120cc:	cmp	r0, fp
   120d0:	addlt	sl, r7, sl
   120d4:	movge	r1, #0
   120d8:	ldrlt	r1, [sl, #4]
   120dc:	cmp	r9, #0
   120e0:	ldr	r3, [sp, #4]
   120e4:	beq	121a4 <error@@Base+0x2ac>
   120e8:	mov	r2, #0
   120ec:	add	lr, r2, r2, lsl #1
   120f0:	add	ip, r9, lr, lsl #2
   120f4:	ldrb	lr, [r9, lr, lsl #2]
   120f8:	cmp	lr, #0
   120fc:	beq	121a4 <error@@Base+0x2ac>
   12100:	cmp	r3, lr
   12104:	bne	12144 <error@@Base+0x24c>
   12108:	ldr	r3, [ip, #4]
   1210c:	cmp	r3, #0
   12110:	bne	12150 <error@@Base+0x258>
   12114:	ldr	r3, [ip, #8]
   12118:	cmp	r3, #0
   1211c:	beq	121a4 <error@@Base+0x2ac>
   12120:	ldrb	r2, [r4, #2]
   12124:	cmp	r2, #0
   12128:	bne	121a4 <error@@Base+0x2ac>
   1212c:	ldrb	r2, [r3]
   12130:	cmp	r2, #0
   12134:	bne	121b0 <error@@Base+0x2b8>
   12138:	mov	r2, #1
   1213c:	strb	r2, [r3]
   12140:	b	12184 <error@@Base+0x28c>
   12144:	add	r2, r2, #1
   12148:	sxth	r2, r2
   1214c:	b	120ec <error@@Base+0x1f4>
   12150:	ldrb	r2, [r4, #2]
   12154:	cmp	r2, #0
   12158:	cmpeq	r1, #0
   1215c:	beq	12114 <error@@Base+0x21c>
   12160:	ldr	ip, [r3]
   12164:	cmp	ip, #0
   12168:	bne	121b0 <error@@Base+0x2b8>
   1216c:	cmp	r2, #0
   12170:	addne	r1, r4, #2
   12174:	str	r1, [r3]
   12178:	ldrb	r3, [r4, #2]
   1217c:	cmp	r3, #0
   12180:	sxtheq	r5, r0
   12184:	add	r5, r5, #1
   12188:	sxth	r5, r5
   1218c:	ldr	fp, [r8]
   12190:	cmp	r5, fp
   12194:	blt	12084 <error@@Base+0x18c>
   12198:	str	r6, [r8]
   1219c:	add	sp, sp, #12
   121a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121a4:	ldr	r0, [pc, #48]	; 121dc <error@@Base+0x2e4>
   121a8:	mov	r1, r4
   121ac:	bl	11f80 <error@@Base+0x88>
   121b0:	mov	r1, r4
   121b4:	ldr	r0, [pc, #36]	; 121e0 <error@@Base+0x2e8>
   121b8:	b	121ac <error@@Base+0x2b4>
   121bc:	add	r3, r6, #1
   121c0:	str	r4, [r7, r6, lsl #2]
   121c4:	sxth	r6, r3
   121c8:	b	12184 <error@@Base+0x28c>
   121cc:	addseq	r6, fp, r4, lsr #26
   121d0:	andeq	r1, r1, r0, asr pc
   121d4:	muleq	r2, ip, r0
   121d8:	andeq	r3, r1, fp, asr r9
   121dc:	andeq	r3, r1, r1, ror #18
   121e0:	andeq	r3, r1, r0, ror r9
   121e4:	push	{r0, r1, r2, lr}
   121e8:	mov	r3, r0
   121ec:	ldr	r2, [pc, #28]	; 12210 <error@@Base+0x318>
   121f0:	ldr	r0, [pc, #28]	; 12214 <error@@Base+0x31c>
   121f4:	str	r1, [sp]
   121f8:	ldr	r1, [pc, #24]	; 12218 <error@@Base+0x320>
   121fc:	ldr	r2, [r2]
   12200:	ldr	r0, [r0]
   12204:	bl	10a80 <fprintf@plt>
   12208:	add	sp, sp, #12
   1220c:	pop	{pc}		; (ldr pc, [sp], #4)
   12210:	addseq	r6, fp, r4, lsr #26
   12214:	andeq	r4, r2, r8, lsr #1
   12218:	andeq	r3, r1, r4, lsr #18
   1221c:	push	{r4, r5, r6, lr}
   12220:	mov	r4, r0
   12224:	uxtb	r6, r1
   12228:	mov	r0, #1
   1222c:	mov	r1, #16
   12230:	mov	r5, r2
   12234:	bl	11f34 <error@@Base+0x3c>
   12238:	strb	r6, [r0, #8]
   1223c:	str	r5, [r0, #12]
   12240:	mov	r1, r0
   12244:	mov	r0, r4
   12248:	pop	{r4, r5, r6, lr}
   1224c:	b	12838 <error@@Base+0x940>
   12250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12254:	sub	sp, sp, #116	; 0x74
   12258:	ldrb	r3, [r2]
   1225c:	adds	r3, r3, #0
   12260:	movne	r3, #1
   12264:	cmp	r1, #0
   12268:	movne	r3, #0
   1226c:	cmp	r3, #0
   12270:	beq	12280 <error@@Base+0x388>
   12274:	ldr	r1, [pc, #752]	; 1256c <error@@Base+0x674>
   12278:	ldr	r0, [pc, #752]	; 12570 <error@@Base+0x678>
   1227c:	bl	11f80 <error@@Base+0x88>
   12280:	mov	r6, r0
   12284:	mov	r0, r1
   12288:	ldr	r1, [pc, #740]	; 12574 <error@@Base+0x67c>
   1228c:	mov	r4, r2
   12290:	ldr	r7, [r6, #4]
   12294:	bl	11fc0 <error@@Base+0xc8>
   12298:	ldrb	r3, [r4]
   1229c:	cmp	r3, #0
   122a0:	mov	r5, r0
   122a4:	beq	122f0 <error@@Base+0x3f8>
   122a8:	mov	r2, r0
   122ac:	mov	r1, #99	; 0x63
   122b0:	add	r0, sp, #12
   122b4:	bl	109c0 <fgets@plt>
   122b8:	cmp	r0, #0
   122bc:	beq	122e0 <error@@Base+0x3e8>
   122c0:	mov	r2, #51	; 0x33
   122c4:	ldr	r1, [pc, #684]	; 12578 <error@@Base+0x680>
   122c8:	add	r0, sp, #12
   122cc:	bl	10ad4 <strncmp@plt>
   122d0:	subs	r8, r0, #0
   122d4:	moveq	r9, #99	; 0x63
   122d8:	ldreq	sl, [pc, #668]	; 1257c <error@@Base+0x684>
   122dc:	beq	1236c <error@@Base+0x474>
   122e0:	mov	r0, r5
   122e4:	bl	109e4 <rewind@plt>
   122e8:	mov	r3, #0
   122ec:	strb	r3, [r4, #11]
   122f0:	ldrb	r3, [r4, #1]
   122f4:	ldr	r8, [r4, #4]
   122f8:	mov	r0, r5
   122fc:	cmp	r8, #0
   12300:	mov	fp, #0
   12304:	str	r3, [sp]
   12308:	moveq	r8, #94	; 0x5e
   1230c:	bl	10aec <getc@plt>
   12310:	add	r3, sp, #9
   12314:	str	r3, [sp, #4]
   12318:	cmn	r0, #1
   1231c:	bne	1238c <error@@Base+0x494>
   12320:	mov	r0, r5
   12324:	bl	11df0 <getc@plt+0x1304>
   12328:	ldrb	r3, [r4, #9]
   1232c:	cmp	r3, #0
   12330:	bne	12430 <error@@Base+0x538>
   12334:	ldrb	r3, [r4, #10]
   12338:	cmp	r3, #0
   1233c:	bne	12544 <error@@Base+0x64c>
   12340:	add	sp, sp, #116	; 0x74
   12344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12348:	mov	r1, sl
   1234c:	add	r0, sp, #12
   12350:	bl	10984 <strcmp@plt>
   12354:	cmp	r0, #0
   12358:	bne	1236c <error@@Base+0x474>
   1235c:	add	r8, r8, #1
   12360:	sxth	r8, r8
   12364:	cmp	r8, #1
   12368:	bgt	12384 <error@@Base+0x48c>
   1236c:	mov	r2, r5
   12370:	mov	r1, r9
   12374:	add	r0, sp, #12
   12378:	bl	109c0 <fgets@plt>
   1237c:	cmp	r0, #0
   12380:	bne	12348 <error@@Base+0x450>
   12384:	mov	r3, #1
   12388:	b	122ec <error@@Base+0x3f4>
   1238c:	ldr	r3, [pc, #492]	; 12580 <error@@Base+0x688>
   12390:	ldrsb	r9, [r3, r0]
   12394:	cmp	r9, #0
   12398:	bgt	123a4 <error@@Base+0x4ac>
   1239c:	ldr	r0, [pc, #480]	; 12584 <error@@Base+0x68c>
   123a0:	bl	11ef8 <error@@Base>
   123a4:	cmp	r9, #1
   123a8:	strb	r0, [sp, #8]
   123ac:	beq	123d4 <error@@Base+0x4dc>
   123b0:	sub	sl, r9, #1
   123b4:	mov	r3, r5
   123b8:	mov	r2, sl
   123bc:	mov	r1, #1
   123c0:	ldr	r0, [sp, #4]
   123c4:	bl	10a14 <fread@plt>
   123c8:	cmp	sl, r0
   123cc:	ldrne	r0, [pc, #436]	; 12588 <error@@Base+0x690>
   123d0:	bne	123a0 <error@@Base+0x4a8>
   123d4:	add	r2, sp, #12
   123d8:	mov	r1, #4
   123dc:	add	r0, sp, #8
   123e0:	bl	10a20 <utf8proc_iterate@plt>
   123e4:	cmp	r9, r0
   123e8:	beq	123f4 <error@@Base+0x4fc>
   123ec:	bl	10abc <utf8proc_errmsg@plt>
   123f0:	b	123a0 <error@@Base+0x4a8>
   123f4:	ldr	r3, [sp]
   123f8:	cmp	r3, #0
   123fc:	beq	12410 <error@@Base+0x518>
   12400:	ldr	r3, [sp, #12]
   12404:	cmp	r8, r3
   12408:	moveq	fp, #1
   1240c:	beq	12424 <error@@Base+0x52c>
   12410:	mov	r1, fp
   12414:	ldr	r2, [sp, #12]
   12418:	mov	r0, r6
   1241c:	bl	1221c <error@@Base+0x324>
   12420:	mov	fp, #0
   12424:	mov	r0, r5
   12428:	bl	10aec <getc@plt>
   1242c:	b	12318 <error@@Base+0x420>
   12430:	cmp	r7, #0
   12434:	mov	sl, #32
   12438:	ldrne	r8, [r7, #4]
   1243c:	ldreq	r8, [r6]
   12440:	mov	r5, r8
   12444:	cmp	r5, #0
   12448:	bne	124d0 <error@@Base+0x5d8>
   1244c:	cmp	r8, #0
   12450:	beq	12334 <error@@Base+0x43c>
   12454:	ldr	r2, [r8, #12]
   12458:	ldr	r9, [r8, #4]
   1245c:	cmp	r2, #32
   12460:	eor	r3, r5, #1
   12464:	bne	12524 <error@@Base+0x62c>
   12468:	cmp	r9, #0
   1246c:	orreq	r3, r3, #1
   12470:	cmp	r3, #0
   12474:	bne	12488 <error@@Base+0x590>
   12478:	ldr	r3, [r9, #12]
   1247c:	cmp	r3, #10
   12480:	cmpne	r3, #32
   12484:	bne	12538 <error@@Base+0x640>
   12488:	cmp	r9, #0
   1248c:	moveq	r3, #0
   12490:	andne	r3, r5, #1
   12494:	cmp	r3, #0
   12498:	beq	124b4 <error@@Base+0x5bc>
   1249c:	ldr	r3, [r9, #12]
   124a0:	cmp	r3, #32
   124a4:	ldrbeq	r3, [r9, #8]
   124a8:	ldrbeq	r2, [r8, #8]
   124ac:	orreq	r3, r3, r2
   124b0:	strbeq	r3, [r9, #8]
   124b4:	mov	r0, r6
   124b8:	mov	r1, r8
   124bc:	bl	12860 <error@@Base+0x968>
   124c0:	mov	r0, r8
   124c4:	bl	109a8 <free@plt>
   124c8:	mov	r8, r9
   124cc:	b	1244c <error@@Base+0x554>
   124d0:	ldr	r9, [r5, #12]
   124d4:	mov	r0, r9
   124d8:	bl	109b4 <utf8proc_get_property@plt>
   124dc:	cmp	r9, #13
   124e0:	bhi	12514 <error@@Base+0x61c>
   124e4:	cmp	r9, #11
   124e8:	bcs	1251c <error@@Base+0x624>
   124ec:	cmp	r9, #9
   124f0:	beq	1251c <error@@Base+0x624>
   124f4:	cmp	r9, #10
   124f8:	beq	1250c <error@@Base+0x614>
   124fc:	ldrsh	r3, [r0]
   12500:	sub	r3, r3, #23
   12504:	cmp	r3, #2
   12508:	bls	1251c <error@@Base+0x624>
   1250c:	ldr	r5, [r5, #4]
   12510:	b	12444 <error@@Base+0x54c>
   12514:	cmp	r9, #160	; 0xa0
   12518:	bne	124fc <error@@Base+0x604>
   1251c:	str	sl, [r5, #12]
   12520:	b	1250c <error@@Base+0x614>
   12524:	cmp	r2, #10
   12528:	movne	r3, #0
   1252c:	andeq	r3, r3, #1
   12530:	cmp	r3, #0
   12534:	bne	12488 <error@@Base+0x590>
   12538:	subs	r5, r2, #10
   1253c:	movne	r5, #1
   12540:	b	124c8 <error@@Base+0x5d0>
   12544:	cmp	r7, #0
   12548:	ldrne	r4, [r7, #4]
   1254c:	ldreq	r4, [r6]
   12550:	cmp	r4, #0
   12554:	beq	12340 <error@@Base+0x448>
   12558:	ldr	r0, [r4, #12]
   1255c:	bl	109fc <utf8proc_tolower@plt>
   12560:	str	r0, [r4, #12]
   12564:	ldr	r4, [r4, #4]
   12568:	b	12550 <error@@Base+0x658>
   1256c:	andeq	r3, r1, r1, lsl #19
   12570:	andeq	r3, r1, fp, lsl #19
   12574:	andeq	r3, r1, r1, lsr #20
   12578:	muleq	r1, fp, r9
   1257c:	ldrdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   12580:	andeq	r3, r2, r8, lsl #28
   12584:	andeq	r3, r1, fp, lsl #20
   12588:	andeq	r3, r1, r3, lsr #20
   1258c:	push	{r4, lr}
   12590:	bl	109cc <utf8proc_encode_char@plt>
   12594:	cmp	r0, #0
   12598:	bgt	125a4 <error@@Base+0x6ac>
   1259c:	ldr	r0, [pc, #8]	; 125ac <error@@Base+0x6b4>
   125a0:	bl	11ef8 <error@@Base>
   125a4:	sxtb	r0, r0
   125a8:	pop	{r4, pc}
   125ac:	andeq	r3, r1, fp, lsr sl
   125b0:	push	{r4, r5, r6, r7, r8, lr}
   125b4:	uxtb	r4, r0
   125b8:	cmp	r4, #0
   125bc:	mov	r7, r1
   125c0:	mov	r6, r2
   125c4:	uxtb	r8, r3
   125c8:	beq	125dc <error@@Base+0x6e4>
   125cc:	mov	r1, r2
   125d0:	mov	r0, #94	; 0x5e
   125d4:	bl	1258c <error@@Base+0x694>
   125d8:	sxth	r4, r0
   125dc:	cmp	r7, #10
   125e0:	add	r5, r6, r4
   125e4:	bne	12604 <error@@Base+0x70c>
   125e8:	ldr	r2, [pc, #168]	; 12698 <error@@Base+0x7a0>
   125ec:	cmp	r8, #0
   125f0:	ldr	r1, [pc, #164]	; 1269c <error@@Base+0x7a4>
   125f4:	mov	r0, r5
   125f8:	moveq	r1, r2
   125fc:	pop	{r4, r5, r6, r7, r8, lr}
   12600:	b	10ab0 <sprintf@plt>
   12604:	mov	r0, r7
   12608:	bl	109b4 <utf8proc_get_property@plt>
   1260c:	cmp	r7, #32
   12610:	beq	12630 <error@@Base+0x738>
   12614:	ldrh	r3, [r0]
   12618:	cmp	r3, #29
   1261c:	bhi	12678 <error@@Base+0x780>
   12620:	ldr	r2, [pc, #120]	; 126a0 <error@@Base+0x7a8>
   12624:	mov	r1, #1
   12628:	ands	r3, r2, r1, lsl r3
   1262c:	beq	12678 <error@@Base+0x780>
   12630:	mov	r0, r7
   12634:	bl	10a68 <utf8proc_category@plt>
   12638:	sub	r0, r0, #6
   1263c:	cmp	r0, #2
   12640:	bhi	12658 <error@@Base+0x760>
   12644:	mov	r1, r5
   12648:	ldr	r0, [pc, #84]	; 126a4 <error@@Base+0x7ac>
   1264c:	bl	1258c <error@@Base+0x694>
   12650:	add	r4, r0, r4
   12654:	sxth	r4, r4
   12658:	add	r1, r6, r4
   1265c:	mov	r0, r7
   12660:	bl	1258c <error@@Base+0x694>
   12664:	mov	r3, #0
   12668:	add	r0, r0, r4
   1266c:	sxth	r0, r0
   12670:	strb	r3, [r6, r0]
   12674:	pop	{r4, r5, r6, r7, r8, pc}
   12678:	cmp	r7, #255	; 0xff
   1267c:	movhi	r2, r7
   12680:	ldrhi	r1, [pc, #32]	; 126a8 <error@@Base+0x7b0>
   12684:	ldrls	r1, [pc, #32]	; 126ac <error@@Base+0x7b4>
   12688:	movls	r2, r7
   1268c:	mov	r0, r5
   12690:	pop	{r4, r5, r6, r7, r8, lr}
   12694:	b	10ab0 <sprintf@plt>
   12698:	muleq	r1, sl, sp
   1269c:	andeq	r3, r1, r2, asr sl
   126a0:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   126a4:	andeq	r2, r0, ip, asr #11
   126a8:	andeq	r3, r1, lr, asr sl
   126ac:	andeq	r3, r1, r7, asr sl
   126b0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   126b4:	mov	r6, r0
   126b8:	mov	r0, r1
   126bc:	ldr	r1, [pc, #132]	; 12748 <error@@Base+0x850>
   126c0:	mov	r5, r2
   126c4:	bl	11fc0 <error@@Base+0xc8>
   126c8:	cmp	r5, #0
   126cc:	mov	r4, r0
   126d0:	beq	12700 <error@@Base+0x808>
   126d4:	mov	r1, r0
   126d8:	ldr	r0, [pc, #108]	; 1274c <error@@Base+0x854>
   126dc:	bl	10ac8 <fputs@plt>
   126e0:	mov	r1, r4
   126e4:	ldr	r0, [pc, #100]	; 12750 <error@@Base+0x858>
   126e8:	bl	10ac8 <fputs@plt>
   126ec:	mov	r0, r4
   126f0:	blx	r5
   126f4:	mov	r1, r4
   126f8:	ldr	r0, [pc, #80]	; 12750 <error@@Base+0x858>
   126fc:	bl	10ac8 <fputs@plt>
   12700:	ldr	r5, [r6]
   12704:	mov	r6, #0
   12708:	cmp	r5, #0
   1270c:	bne	12720 <error@@Base+0x828>
   12710:	mov	r0, r4
   12714:	bl	11df0 <getc@plt+0x1304>
   12718:	add	sp, sp, #16
   1271c:	pop	{r4, r5, r6, pc}
   12720:	ldr	r1, [r5, #12]
   12724:	ldrb	r0, [r5, #8]
   12728:	mov	r3, r6
   1272c:	add	r2, sp, #4
   12730:	bl	125b0 <error@@Base+0x6b8>
   12734:	mov	r1, r4
   12738:	add	r0, sp, #4
   1273c:	bl	10ac8 <fputs@plt>
   12740:	ldr	r5, [r5, #4]
   12744:	b	12708 <error@@Base+0x810>
   12748:	andeq	r3, r1, r0, ror #9
   1274c:	muleq	r1, fp, r9
   12750:	ldrdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   12754:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12758:	mov	r4, r1
   1275c:	mov	r1, #0
   12760:	add	r6, sp, #8
   12764:	mov	r7, r0
   12768:	mvn	r8, #0
   1276c:	mov	r5, r1
   12770:	str	r1, [r6, #-4]!
   12774:	ldrb	r3, [r4]
   12778:	cmp	r3, #0
   1277c:	bne	1278c <error@@Base+0x894>
   12780:	mov	r0, #1
   12784:	add	sp, sp, #12
   12788:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1278c:	mov	r2, r6
   12790:	mov	r1, r8
   12794:	mov	r0, r4
   12798:	bl	10a20 <utf8proc_iterate@plt>
   1279c:	subs	r9, r0, #0
   127a0:	ble	127bc <error@@Base+0x8c4>
   127a4:	ldr	r2, [sp, #4]
   127a8:	mov	r1, r5
   127ac:	mov	r0, r7
   127b0:	bl	1221c <error@@Base+0x324>
   127b4:	add	r4, r4, r9
   127b8:	b	12774 <error@@Base+0x87c>
   127bc:	mov	r0, #0
   127c0:	b	12784 <error@@Base+0x88c>
   127c4:	cmp	r1, #0
   127c8:	push	{r4, lr}
   127cc:	mov	r4, r0
   127d0:	stm	r2, {r1, r3}
   127d4:	strne	r2, [r1, #4]
   127d8:	streq	r2, [r0]
   127dc:	cmp	r3, #0
   127e0:	streq	r2, [r0, #4]
   127e4:	ldr	r0, [r0, #8]
   127e8:	strne	r2, [r3]
   127ec:	cmp	r0, #0
   127f0:	beq	12800 <error@@Base+0x908>
   127f4:	bl	109a8 <free@plt>
   127f8:	mov	r3, #0
   127fc:	str	r3, [r4, #8]
   12800:	ldr	r3, [r4, #12]
   12804:	add	r3, r3, #1
   12808:	str	r3, [r4, #12]
   1280c:	pop	{r4, pc}
   12810:	mov	r3, #0
   12814:	str	r3, [r0, #4]
   12818:	str	r3, [r0]
   1281c:	str	r3, [r0, #8]
   12820:	str	r3, [r0, #12]
   12824:	bx	lr
   12828:	mov	r2, r1
   1282c:	ldr	r3, [r0]
   12830:	mov	r1, #0
   12834:	b	127c4 <error@@Base+0x8cc>
   12838:	mov	r2, r1
   1283c:	mov	r3, #0
   12840:	ldr	r1, [r0, #4]
   12844:	b	127c4 <error@@Base+0x8cc>
   12848:	mov	r3, r2
   1284c:	mov	r2, r1
   12850:	ldr	r1, [r3]
   12854:	b	127c4 <error@@Base+0x8cc>
   12858:	ldr	r3, [r1, #4]
   1285c:	b	127c4 <error@@Base+0x8cc>
   12860:	ldr	r3, [r1]
   12864:	ldr	r2, [r1, #4]
   12868:	cmp	r3, #0
   1286c:	push	{r4, r5, r6, lr}
   12870:	mov	r4, r0
   12874:	strne	r2, [r3, #4]
   12878:	streq	r2, [r0]
   1287c:	ldr	r2, [r1, #4]
   12880:	mov	r5, #0
   12884:	cmp	r2, #0
   12888:	streq	r3, [r0, #4]
   1288c:	ldr	r0, [r0, #8]
   12890:	strne	r3, [r2]
   12894:	cmp	r0, r5
   12898:	str	r5, [r1, #4]
   1289c:	str	r5, [r1]
   128a0:	beq	128ac <error@@Base+0x9b4>
   128a4:	bl	109a8 <free@plt>
   128a8:	str	r5, [r4, #8]
   128ac:	ldr	r3, [r4, #12]
   128b0:	sub	r3, r3, #1
   128b4:	str	r3, [r4, #12]
   128b8:	pop	{r4, r5, r6, pc}
   128bc:	ldr	r3, [r0, #8]
   128c0:	cmp	r3, #0
   128c4:	bxne	lr
   128c8:	ldr	r3, [r0, #12]
   128cc:	cmp	r3, #0
   128d0:	bxeq	lr
   128d4:	push	{r4, lr}
   128d8:	mov	r1, #4
   128dc:	mov	r4, r0
   128e0:	mov	r0, r3
   128e4:	bl	11f34 <error@@Base+0x3c>
   128e8:	ldr	r3, [r4]
   128ec:	str	r0, [r4, #8]
   128f0:	sub	r0, r0, #4
   128f4:	cmp	r3, #0
   128f8:	bne	12900 <error@@Base+0xa08>
   128fc:	pop	{r4, pc}
   12900:	str	r3, [r0, #4]!
   12904:	ldr	r3, [r3, #4]
   12908:	b	128f4 <error@@Base+0x9fc>
   1290c:	push	{r4, r5, r6, lr}
   12910:	mov	r5, r0
   12914:	mov	r6, r1
   12918:	ldr	r4, [r5]
   1291c:	cmp	r4, #0
   12920:	bne	12928 <error@@Base+0xa30>
   12924:	pop	{r4, r5, r6, pc}
   12928:	mov	r0, r5
   1292c:	mov	r1, r4
   12930:	bl	12860 <error@@Base+0x968>
   12934:	mov	r0, r4
   12938:	blx	r6
   1293c:	b	12918 <error@@Base+0xa20>
   12940:	cmp	r1, #0
   12944:	beq	12b50 <error@@Base+0xc58>
   12948:	eor	ip, r0, r1
   1294c:	rsbmi	r1, r1, #0
   12950:	subs	r2, r1, #1
   12954:	beq	12b1c <error@@Base+0xc24>
   12958:	movs	r3, r0
   1295c:	rsbmi	r3, r0, #0
   12960:	cmp	r3, r1
   12964:	bls	12b28 <error@@Base+0xc30>
   12968:	tst	r1, r2
   1296c:	beq	12b38 <error@@Base+0xc40>
   12970:	clz	r2, r3
   12974:	clz	r0, r1
   12978:	sub	r2, r0, r2
   1297c:	rsbs	r2, r2, #31
   12980:	addne	r2, r2, r2, lsl #1
   12984:	mov	r0, #0
   12988:	addne	pc, pc, r2, lsl #2
   1298c:	nop			; (mov r0, r0)
   12990:	cmp	r3, r1, lsl #31
   12994:	adc	r0, r0, r0
   12998:	subcs	r3, r3, r1, lsl #31
   1299c:	cmp	r3, r1, lsl #30
   129a0:	adc	r0, r0, r0
   129a4:	subcs	r3, r3, r1, lsl #30
   129a8:	cmp	r3, r1, lsl #29
   129ac:	adc	r0, r0, r0
   129b0:	subcs	r3, r3, r1, lsl #29
   129b4:	cmp	r3, r1, lsl #28
   129b8:	adc	r0, r0, r0
   129bc:	subcs	r3, r3, r1, lsl #28
   129c0:	cmp	r3, r1, lsl #27
   129c4:	adc	r0, r0, r0
   129c8:	subcs	r3, r3, r1, lsl #27
   129cc:	cmp	r3, r1, lsl #26
   129d0:	adc	r0, r0, r0
   129d4:	subcs	r3, r3, r1, lsl #26
   129d8:	cmp	r3, r1, lsl #25
   129dc:	adc	r0, r0, r0
   129e0:	subcs	r3, r3, r1, lsl #25
   129e4:	cmp	r3, r1, lsl #24
   129e8:	adc	r0, r0, r0
   129ec:	subcs	r3, r3, r1, lsl #24
   129f0:	cmp	r3, r1, lsl #23
   129f4:	adc	r0, r0, r0
   129f8:	subcs	r3, r3, r1, lsl #23
   129fc:	cmp	r3, r1, lsl #22
   12a00:	adc	r0, r0, r0
   12a04:	subcs	r3, r3, r1, lsl #22
   12a08:	cmp	r3, r1, lsl #21
   12a0c:	adc	r0, r0, r0
   12a10:	subcs	r3, r3, r1, lsl #21
   12a14:	cmp	r3, r1, lsl #20
   12a18:	adc	r0, r0, r0
   12a1c:	subcs	r3, r3, r1, lsl #20
   12a20:	cmp	r3, r1, lsl #19
   12a24:	adc	r0, r0, r0
   12a28:	subcs	r3, r3, r1, lsl #19
   12a2c:	cmp	r3, r1, lsl #18
   12a30:	adc	r0, r0, r0
   12a34:	subcs	r3, r3, r1, lsl #18
   12a38:	cmp	r3, r1, lsl #17
   12a3c:	adc	r0, r0, r0
   12a40:	subcs	r3, r3, r1, lsl #17
   12a44:	cmp	r3, r1, lsl #16
   12a48:	adc	r0, r0, r0
   12a4c:	subcs	r3, r3, r1, lsl #16
   12a50:	cmp	r3, r1, lsl #15
   12a54:	adc	r0, r0, r0
   12a58:	subcs	r3, r3, r1, lsl #15
   12a5c:	cmp	r3, r1, lsl #14
   12a60:	adc	r0, r0, r0
   12a64:	subcs	r3, r3, r1, lsl #14
   12a68:	cmp	r3, r1, lsl #13
   12a6c:	adc	r0, r0, r0
   12a70:	subcs	r3, r3, r1, lsl #13
   12a74:	cmp	r3, r1, lsl #12
   12a78:	adc	r0, r0, r0
   12a7c:	subcs	r3, r3, r1, lsl #12
   12a80:	cmp	r3, r1, lsl #11
   12a84:	adc	r0, r0, r0
   12a88:	subcs	r3, r3, r1, lsl #11
   12a8c:	cmp	r3, r1, lsl #10
   12a90:	adc	r0, r0, r0
   12a94:	subcs	r3, r3, r1, lsl #10
   12a98:	cmp	r3, r1, lsl #9
   12a9c:	adc	r0, r0, r0
   12aa0:	subcs	r3, r3, r1, lsl #9
   12aa4:	cmp	r3, r1, lsl #8
   12aa8:	adc	r0, r0, r0
   12aac:	subcs	r3, r3, r1, lsl #8
   12ab0:	cmp	r3, r1, lsl #7
   12ab4:	adc	r0, r0, r0
   12ab8:	subcs	r3, r3, r1, lsl #7
   12abc:	cmp	r3, r1, lsl #6
   12ac0:	adc	r0, r0, r0
   12ac4:	subcs	r3, r3, r1, lsl #6
   12ac8:	cmp	r3, r1, lsl #5
   12acc:	adc	r0, r0, r0
   12ad0:	subcs	r3, r3, r1, lsl #5
   12ad4:	cmp	r3, r1, lsl #4
   12ad8:	adc	r0, r0, r0
   12adc:	subcs	r3, r3, r1, lsl #4
   12ae0:	cmp	r3, r1, lsl #3
   12ae4:	adc	r0, r0, r0
   12ae8:	subcs	r3, r3, r1, lsl #3
   12aec:	cmp	r3, r1, lsl #2
   12af0:	adc	r0, r0, r0
   12af4:	subcs	r3, r3, r1, lsl #2
   12af8:	cmp	r3, r1, lsl #1
   12afc:	adc	r0, r0, r0
   12b00:	subcs	r3, r3, r1, lsl #1
   12b04:	cmp	r3, r1
   12b08:	adc	r0, r0, r0
   12b0c:	subcs	r3, r3, r1
   12b10:	cmp	ip, #0
   12b14:	rsbmi	r0, r0, #0
   12b18:	bx	lr
   12b1c:	teq	ip, r0
   12b20:	rsbmi	r0, r0, #0
   12b24:	bx	lr
   12b28:	movcc	r0, #0
   12b2c:	asreq	r0, ip, #31
   12b30:	orreq	r0, r0, #1
   12b34:	bx	lr
   12b38:	clz	r2, r1
   12b3c:	rsb	r2, r2, #31
   12b40:	cmp	ip, #0
   12b44:	lsr	r0, r3, r2
   12b48:	rsbmi	r0, r0, #0
   12b4c:	bx	lr
   12b50:	cmp	r0, #0
   12b54:	mvngt	r0, #-2147483648	; 0x80000000
   12b58:	movlt	r0, #-2147483648	; 0x80000000
   12b5c:	b	12b80 <error@@Base+0xc88>
   12b60:	cmp	r1, #0
   12b64:	beq	12b50 <error@@Base+0xc58>
   12b68:	push	{r0, r1, lr}
   12b6c:	bl	12948 <error@@Base+0xa50>
   12b70:	pop	{r1, r2, lr}
   12b74:	mul	r3, r2, r0
   12b78:	sub	r1, r1, r3
   12b7c:	bx	lr
   12b80:	push	{r1, lr}
   12b84:	mov	r0, #8
   12b88:	bl	10978 <raise@plt>
   12b8c:	pop	{r1, pc}
   12b90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b94:	mov	r7, r0
   12b98:	ldr	r6, [pc, #72]	; 12be8 <error@@Base+0xcf0>
   12b9c:	ldr	r5, [pc, #72]	; 12bec <error@@Base+0xcf4>
   12ba0:	add	r6, pc, r6
   12ba4:	add	r5, pc, r5
   12ba8:	sub	r6, r6, r5
   12bac:	mov	r8, r1
   12bb0:	mov	r9, r2
   12bb4:	bl	1094c <calloc@plt-0x20>
   12bb8:	asrs	r6, r6, #2
   12bbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bc0:	mov	r4, #0
   12bc4:	add	r4, r4, #1
   12bc8:	ldr	r3, [r5], #4
   12bcc:	mov	r2, r9
   12bd0:	mov	r1, r8
   12bd4:	mov	r0, r7
   12bd8:	blx	r3
   12bdc:	cmp	r6, r4
   12be0:	bne	12bc4 <error@@Base+0xccc>
   12be4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12be8:	andeq	r1, r1, r8, asr r2
   12bec:	andeq	r1, r1, r0, asr r2
   12bf0:	bx	lr
   12bf4:	mov	r2, r1
   12bf8:	mov	r1, r0
   12bfc:	mov	r0, #3
   12c00:	b	10a08 <__xstat@plt>

Disassembly of section .fini:

00012c04 <.fini>:
   12c04:	push	{r3, lr}
   12c08:	pop	{r3, pc}
