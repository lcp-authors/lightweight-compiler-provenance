
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

00010774 <.init>:
   10774:	push	{r3, lr}
   10778:	bl	1086c <_start@@Base+0x3c>
   1077c:	pop	{r3, pc}

Disassembly of section .plt:

00010780 <printf@plt-0x14>:
   10780:	push	{lr}		; (str lr, [sp, #-4]!)
   10784:	ldr	lr, [pc, #4]	; 10790 <printf@plt-0x4>
   10788:	add	lr, pc, lr
   1078c:	ldr	pc, [lr, #8]!
   10790:	andeq	r0, r1, r0, ror r8

00010794 <printf@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #16, 20	; 0x10000
   1079c:	ldr	pc, [ip, #2160]!	; 0x870

000107a0 <free@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #16, 20	; 0x10000
   107a8:	ldr	pc, [ip, #2152]!	; 0x868

000107ac <fgets@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #16, 20	; 0x10000
   107b4:	ldr	pc, [ip, #2144]!	; 0x860

000107b8 <realloc@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #16, 20	; 0x10000
   107c0:	ldr	pc, [ip, #2136]!	; 0x858

000107c4 <strcpy@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #16, 20	; 0x10000
   107cc:	ldr	pc, [ip, #2128]!	; 0x850

000107d0 <puts@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #16, 20	; 0x10000
   107d8:	ldr	pc, [ip, #2120]!	; 0x848

000107dc <malloc@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #16, 20	; 0x10000
   107e4:	ldr	pc, [ip, #2112]!	; 0x840

000107e8 <__libc_start_main@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #16, 20	; 0x10000
   107f0:	ldr	pc, [ip, #2104]!	; 0x838

000107f4 <__gmon_start__@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #16, 20	; 0x10000
   107fc:	ldr	pc, [ip, #2096]!	; 0x830

00010800 <strlen@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #16, 20	; 0x10000
   10808:	ldr	pc, [ip, #2088]!	; 0x828

0001080c <__isoc99_scanf@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #16, 20	; 0x10000
   10814:	ldr	pc, [ip, #2080]!	; 0x820

00010818 <abort@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #16, 20	; 0x10000
   10820:	ldr	pc, [ip, #2072]!	; 0x818

00010824 <getc@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #16, 20	; 0x10000
   1082c:	ldr	pc, [ip, #2064]!	; 0x810

Disassembly of section .text:

00010830 <_start@@Base>:
   10830:	mov	fp, #0
   10834:	mov	lr, #0
   10838:	pop	{r1}		; (ldr r1, [sp], #4)
   1083c:	mov	r2, sp
   10840:	push	{r2}		; (str r2, [sp, #-4]!)
   10844:	push	{r0}		; (str r0, [sp, #-4]!)
   10848:	ldr	ip, [pc, #16]	; 10860 <_start@@Base+0x30>
   1084c:	push	{ip}		; (str ip, [sp, #-4]!)
   10850:	ldr	r0, [pc, #12]	; 10864 <_start@@Base+0x34>
   10854:	ldr	r3, [pc, #12]	; 10868 <_start@@Base+0x38>
   10858:	bl	107e8 <__libc_start_main@plt>
   1085c:	bl	10818 <abort@plt>
   10860:	andeq	r0, r1, r4, lsr #22
   10864:	andeq	r0, r1, r0, lsr #18
   10868:	andeq	r0, r1, r4, asr #21
   1086c:	ldr	r3, [pc, #20]	; 10888 <_start@@Base+0x58>
   10870:	ldr	r2, [pc, #20]	; 1088c <_start@@Base+0x5c>
   10874:	add	r3, pc, r3
   10878:	ldr	r2, [r3, r2]
   1087c:	cmp	r2, #0
   10880:	bxeq	lr
   10884:	b	107f4 <__gmon_start__@plt>
   10888:	andeq	r0, r1, r4, lsl #15
   1088c:	andeq	r0, r0, r0, asr #32
   10890:	ldr	r0, [pc, #24]	; 108b0 <_start@@Base+0x80>
   10894:	ldr	r3, [pc, #24]	; 108b4 <_start@@Base+0x84>
   10898:	cmp	r3, r0
   1089c:	bxeq	lr
   108a0:	ldr	r3, [pc, #16]	; 108b8 <_start@@Base+0x88>
   108a4:	cmp	r3, #0
   108a8:	bxeq	lr
   108ac:	bx	r3
   108b0:	andeq	r1, r2, ip, asr #32
   108b4:	andeq	r1, r2, ip, asr #32
   108b8:	andeq	r0, r0, r0
   108bc:	ldr	r0, [pc, #36]	; 108e8 <_start@@Base+0xb8>
   108c0:	ldr	r1, [pc, #36]	; 108ec <_start@@Base+0xbc>
   108c4:	sub	r1, r1, r0
   108c8:	asr	r1, r1, #2
   108cc:	add	r1, r1, r1, lsr #31
   108d0:	asrs	r1, r1, #1
   108d4:	bxeq	lr
   108d8:	ldr	r3, [pc, #16]	; 108f0 <_start@@Base+0xc0>
   108dc:	cmp	r3, #0
   108e0:	bxeq	lr
   108e4:	bx	r3
   108e8:	andeq	r1, r2, ip, asr #32
   108ec:	andeq	r1, r2, ip, asr #32
   108f0:	andeq	r0, r0, r0
   108f4:	push	{r4, lr}
   108f8:	ldr	r4, [pc, #24]	; 10918 <_start@@Base+0xe8>
   108fc:	ldrb	r3, [r4]
   10900:	cmp	r3, #0
   10904:	popne	{r4, pc}
   10908:	bl	10890 <_start@@Base+0x60>
   1090c:	mov	r3, #1
   10910:	strb	r3, [r4]
   10914:	pop	{r4, pc}
   10918:	andeq	r1, r2, r4, asr r0
   1091c:	b	108bc <_start@@Base+0x8c>

00010920 <main@@Base>:
   10920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10924:	add	fp, sp, #28
   10928:	sub	sp, sp, #92	; 0x5c
   1092c:	mov	r0, #12
   10930:	bl	107dc <malloc@plt>
   10934:	movw	sl, #2868	; 0xb34
   10938:	movw	r7, #2874	; 0xb3a
   1093c:	movw	r6, #2910	; 0xb5e
   10940:	movw	r8, #4176	; 0x1050
   10944:	mov	r4, r0
   10948:	mov	r0, #0
   1094c:	add	r5, sp, #8
   10950:	movt	sl, #1
   10954:	movt	r7, #1
   10958:	movt	r6, #1
   1095c:	movt	r8, #2
   10960:	str	r0, [r4]
   10964:	str	r0, [r4, #4]
   10968:	str	r0, [r4, #8]
   1096c:	str	r4, [sp, #4]
   10970:	mov	r0, sl
   10974:	mov	r1, #1
   10978:	bl	10794 <printf@plt>
   1097c:	ldr	r0, [r4]
   10980:	cmp	r0, #0
   10984:	str	r0, [sp]
   10988:	movweq	r0, #2927	; 0xb6f
   1098c:	movteq	r0, #1
   10990:	bl	107d0 <puts@plt>
   10994:	mov	r0, sl
   10998:	mov	r1, #2
   1099c:	bl	10794 <printf@plt>
   109a0:	ldr	r9, [r4, #4]
   109a4:	cmp	r9, #0
   109a8:	beq	109b4 <main@@Base+0x94>
   109ac:	mov	r0, r9
   109b0:	b	109bc <main@@Base+0x9c>
   109b4:	movw	r0, #2927	; 0xb6f
   109b8:	movt	r0, #1
   109bc:	bl	107d0 <puts@plt>
   109c0:	mov	r0, sl
   109c4:	mov	r1, #3
   109c8:	bl	10794 <printf@plt>
   109cc:	ldr	sl, [r4, #8]
   109d0:	cmp	sl, #0
   109d4:	beq	109e0 <main@@Base+0xc0>
   109d8:	mov	r0, sl
   109dc:	b	109e8 <main@@Base+0xc8>
   109e0:	movw	r0, #2927	; 0xb6f
   109e4:	movt	r0, #1
   109e8:	bl	107d0 <puts@plt>
   109ec:	mov	r0, r7
   109f0:	mov	r1, #3
   109f4:	bl	10794 <printf@plt>
   109f8:	mov	r0, r6
   109fc:	mov	r1, r5
   10a00:	bl	1080c <__isoc99_scanf@plt>
   10a04:	ldr	r0, [r8]
   10a08:	bl	10824 <getc@plt>
   10a0c:	ldr	r0, [sp, #8]
   10a10:	cmp	r0, #3
   10a14:	bhi	109ec <main@@Base+0xcc>
   10a18:	cmp	r0, #0
   10a1c:	beq	10a98 <main@@Base+0x178>
   10a20:	movw	r0, #2913	; 0xb61
   10a24:	movt	r0, #1
   10a28:	bl	10794 <printf@plt>
   10a2c:	ldr	r2, [r8]
   10a30:	add	sl, sp, #12
   10a34:	mov	r1, #80	; 0x50
   10a38:	mov	r0, sl
   10a3c:	bl	107ac <fgets@plt>
   10a40:	mov	r0, sl
   10a44:	bl	10800 <strlen@plt>
   10a48:	add	r0, r0, sl
   10a4c:	mov	r1, #0
   10a50:	ldr	r4, [sp, #4]
   10a54:	strb	r1, [r0, #-1]
   10a58:	ldr	r0, [sp, #8]
   10a5c:	add	r0, r4, r0, lsl #2
   10a60:	ldr	r9, [r0, #-4]
   10a64:	mov	r0, sl
   10a68:	bl	10800 <strlen@plt>
   10a6c:	add	r1, r0, #1
   10a70:	mov	r0, r9
   10a74:	bl	107b8 <realloc@plt>
   10a78:	ldr	r1, [sp, #8]
   10a7c:	add	r1, r4, r1, lsl #2
   10a80:	str	r0, [r1, #-4]
   10a84:	mov	r1, sl
   10a88:	bl	107c4 <strcpy@plt>
   10a8c:	movw	sl, #2868	; 0xb34
   10a90:	movt	sl, #1
   10a94:	b	10970 <main@@Base+0x50>
   10a98:	ldr	r0, [sp]
   10a9c:	bl	107a0 <free@plt>
   10aa0:	mov	r0, r9
   10aa4:	bl	107a0 <free@plt>
   10aa8:	mov	r0, sl
   10aac:	bl	107a0 <free@plt>
   10ab0:	ldr	r0, [sp, #4]
   10ab4:	bl	107a0 <free@plt>
   10ab8:	mov	r0, #0
   10abc:	sub	sp, fp, #28
   10ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010ac4 <__libc_csu_init@@Base>:
   10ac4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ac8:	mov	r7, r0
   10acc:	ldr	r6, [pc, #72]	; 10b1c <__libc_csu_init@@Base+0x58>
   10ad0:	ldr	r5, [pc, #72]	; 10b20 <__libc_csu_init@@Base+0x5c>
   10ad4:	add	r6, pc, r6
   10ad8:	add	r5, pc, r5
   10adc:	sub	r6, r6, r5
   10ae0:	mov	r8, r1
   10ae4:	mov	r9, r2
   10ae8:	bl	10774 <printf@plt-0x20>
   10aec:	asrs	r6, r6, #2
   10af0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10af4:	mov	r4, #0
   10af8:	add	r4, r4, #1
   10afc:	ldr	r3, [r5], #4
   10b00:	mov	r2, r9
   10b04:	mov	r1, r8
   10b08:	mov	r0, r7
   10b0c:	blx	r3
   10b10:	cmp	r6, r4
   10b14:	bne	10af8 <__libc_csu_init@@Base+0x34>
   10b18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b1c:	andeq	r0, r1, r0, lsr r4
   10b20:	andeq	r0, r1, r8, lsr #8

00010b24 <__libc_csu_fini@@Base>:
   10b24:	bx	lr

Disassembly of section .fini:

00010b28 <.fini>:
   10b28:	push	{r3, lr}
   10b2c:	pop	{r3, pc}
