
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

0001101c <.init>:
   1101c:	push	{r3, lr}
   11020:	bl	113b4 <__snprintf_chk@plt+0x48>
   11024:	pop	{r3, pc}

Disassembly of section .plt:

00011028 <calloc@plt-0x14>:
   11028:	push	{lr}		; (str lr, [sp, #-4]!)
   1102c:	ldr	lr, [pc, #4]	; 11038 <calloc@plt-0x4>
   11030:	add	lr, pc, lr
   11034:	ldr	pc, [lr, #8]!
   11038:	andeq	r5, r1, r8, asr #31

0001103c <calloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #86016	; 0x15000
   11044:	ldr	pc, [ip, #4040]!	; 0xfc8

00011048 <fputs_unlocked@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #86016	; 0x15000
   11050:	ldr	pc, [ip, #4032]!	; 0xfc0

00011054 <raise@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #86016	; 0x15000
   1105c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011060 <strcmp@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #86016	; 0x15000
   11068:	ldr	pc, [ip, #4016]!	; 0xfb0

0001106c <strtol@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #86016	; 0x15000
   11074:	ldr	pc, [ip, #4008]!	; 0xfa8

00011078 <fflush@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #86016	; 0x15000
   11080:	ldr	pc, [ip, #4000]!	; 0xfa0

00011084 <sigprocmask@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #86016	; 0x15000
   1108c:	ldr	pc, [ip, #3992]!	; 0xf98

00011090 <free@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #86016	; 0x15000
   11098:	ldr	pc, [ip, #3984]!	; 0xf90

0001109c <_exit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #86016	; 0x15000
   110a4:	ldr	pc, [ip, #3976]!	; 0xf88

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #86016	; 0x15000
   110b0:	ldr	pc, [ip, #3968]!	; 0xf80

000110b4 <execvp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #3960]!	; 0xf78

000110c0 <mbsinit@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #3952]!	; 0xf70

000110cc <signal@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #3944]!	; 0xf68

000110d8 <memcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #3936]!	; 0xf60

000110e4 <fputc_unlocked@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #3928]!	; 0xf58

000110f0 <dcgettext@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #3920]!	; 0xf50

000110fc <alarm@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #3912]!	; 0xf48

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #3904]!	; 0xf40

00011114 <timer_create@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #3896]!	; 0xf38

00011120 <textdomain@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3888]!	; 0xf30

0001112c <iswprint@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3880]!	; 0xf28

00011138 <timer_settime@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3872]!	; 0xf20

00011144 <sigaction@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3864]!	; 0xf18

00011150 <fwrite@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3856]!	; 0xf10

0001115c <lseek64@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3848]!	; 0xf08

00011168 <waitpid@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3840]!	; 0xf00

00011174 <__ctype_get_mb_cur_max@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3832]!	; 0xef8

00011180 <strcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3824]!	; 0xef0

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3816]!	; 0xee8

00011198 <mbrtowc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3808]!	; 0xee0

000111a4 <error@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3800]!	; 0xed8

000111b0 <timer_delete@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3792]!	; 0xed0

000111bc <malloc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3784]!	; 0xec8

000111c8 <sigaddset@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3776]!	; 0xec0

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3768]!	; 0xeb8

000111e0 <__freading@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111ec <__gmon_start__@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3752]!	; 0xea8

000111f8 <getopt_long@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3744]!	; 0xea0

00011204 <kill@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3736]!	; 0xe98

00011210 <__ctype_b_loc@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3728]!	; 0xe90

0001121c <exit@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3720]!	; 0xe88

00011228 <strlen@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3712]!	; 0xe80

00011234 <__libc_current_sigrtmax@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3704]!	; 0xe78

00011240 <strchr@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3696]!	; 0xe70

0001124c <__errno_location@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3688]!	; 0xe68

00011258 <__sprintf_chk@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3680]!	; 0xe60

00011264 <__cxa_atexit@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3672]!	; 0xe58

00011270 <memset@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3664]!	; 0xe50

0001127c <sigsuspend@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3656]!	; 0xe48

00011288 <__printf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3648]!	; 0xe40

00011294 <prctl@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3640]!	; 0xe38

000112a0 <strtod@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3632]!	; 0xe30

000112ac <fileno@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3624]!	; 0xe28

000112b8 <__fprintf_chk@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3616]!	; 0xe20

000112c4 <fclose@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3608]!	; 0xe18

000112d0 <fseeko64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3600]!	; 0xe10

000112dc <strtod_l@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3592]!	; 0xe08

000112e8 <setlocale@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3584]!	; 0xe00

000112f4 <sigemptyset@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3576]!	; 0xdf8

00011300 <fork@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3568]!	; 0xdf0

0001130c <strrchr@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3560]!	; 0xde8

00011318 <nl_langinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3552]!	; 0xde0

00011324 <newlocale@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011330 <setpgid@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3536]!	; 0xdd0

0001133c <bindtextdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3528]!	; 0xdc8

00011348 <__libc_current_sigrtmin@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3520]!	; 0xdc0

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3504]!	; 0xdb0

0001136c <__snprintf_chk@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3496]!	; 0xda8

Disassembly of section .text:

00011378 <.text>:
   11378:	mov	fp, #0
   1137c:	mov	lr, #0
   11380:	pop	{r1}		; (ldr r1, [sp], #4)
   11384:	mov	r2, sp
   11388:	push	{r2}		; (str r2, [sp, #-4]!)
   1138c:	push	{r0}		; (str r0, [sp, #-4]!)
   11390:	ldr	ip, [pc, #16]	; 113a8 <__snprintf_chk@plt+0x3c>
   11394:	push	{ip}		; (str ip, [sp, #-4]!)
   11398:	ldr	r0, [pc, #12]	; 113ac <__snprintf_chk@plt+0x40>
   1139c:	ldr	r3, [pc, #12]	; 113b0 <__snprintf_chk@plt+0x44>
   113a0:	bl	111d4 <__libc_start_main@plt>
   113a4:	bl	11360 <abort@plt>
   113a8:	muleq	r1, ip, fp
   113ac:	andeq	r1, r1, r4, asr #25
   113b0:	andeq	r5, r1, ip, lsr fp
   113b4:	ldr	r3, [pc, #20]	; 113d0 <__snprintf_chk@plt+0x64>
   113b8:	ldr	r2, [pc, #20]	; 113d4 <__snprintf_chk@plt+0x68>
   113bc:	add	r3, pc, r3
   113c0:	ldr	r2, [r3, r2]
   113c4:	cmp	r2, #0
   113c8:	bxeq	lr
   113cc:	b	111ec <__gmon_start__@plt>
   113d0:	andeq	r5, r1, ip, lsr ip
   113d4:	andeq	r0, r0, r0, lsr #2
   113d8:	ldr	r3, [pc, #28]	; 113fc <__snprintf_chk@plt+0x90>
   113dc:	ldr	r0, [pc, #28]	; 11400 <__snprintf_chk@plt+0x94>
   113e0:	sub	r3, r3, r0
   113e4:	cmp	r3, #6
   113e8:	bxls	lr
   113ec:	ldr	r3, [pc, #16]	; 11404 <__snprintf_chk@plt+0x98>
   113f0:	cmp	r3, #0
   113f4:	bxeq	lr
   113f8:	bx	r3
   113fc:	andeq	r7, r2, pc, lsl r3
   11400:	andeq	r7, r2, ip, lsl r3
   11404:	andeq	r0, r0, r0
   11408:	ldr	r1, [pc, #36]	; 11434 <__snprintf_chk@plt+0xc8>
   1140c:	ldr	r0, [pc, #36]	; 11438 <__snprintf_chk@plt+0xcc>
   11410:	sub	r1, r1, r0
   11414:	asr	r1, r1, #2
   11418:	add	r1, r1, r1, lsr #31
   1141c:	asrs	r1, r1, #1
   11420:	bxeq	lr
   11424:	ldr	r3, [pc, #16]	; 1143c <__snprintf_chk@plt+0xd0>
   11428:	cmp	r3, #0
   1142c:	bxeq	lr
   11430:	bx	r3
   11434:	andeq	r7, r2, ip, lsl r3
   11438:	andeq	r7, r2, ip, lsl r3
   1143c:	andeq	r0, r0, r0
   11440:	push	{r4, lr}
   11444:	ldr	r4, [pc, #24]	; 11464 <__snprintf_chk@plt+0xf8>
   11448:	ldrb	r3, [r4]
   1144c:	cmp	r3, #0
   11450:	popne	{r4, pc}
   11454:	bl	113d8 <__snprintf_chk@plt+0x6c>
   11458:	mov	r3, #1
   1145c:	strb	r3, [r4]
   11460:	pop	{r4, pc}
   11464:	andeq	r7, r2, ip, lsr r3
   11468:	ldr	r0, [pc, #40]	; 11498 <__snprintf_chk@plt+0x12c>
   1146c:	ldr	r3, [r0]
   11470:	cmp	r3, #0
   11474:	bne	1147c <__snprintf_chk@plt+0x110>
   11478:	b	11408 <__snprintf_chk@plt+0x9c>
   1147c:	ldr	r3, [pc, #24]	; 1149c <__snprintf_chk@plt+0x130>
   11480:	cmp	r3, #0
   11484:	beq	11478 <__snprintf_chk@plt+0x10c>
   11488:	push	{r4, lr}
   1148c:	blx	r3
   11490:	pop	{r4, lr}
   11494:	b	11408 <__snprintf_chk@plt+0x9c>
   11498:	andeq	r6, r2, r4, lsl #30
   1149c:	andeq	r0, r0, r0
   114a0:	bx	lr
   114a4:	push	{r4, r5, r6, lr}
   114a8:	mov	r4, r1
   114ac:	subs	r5, r0, #0
   114b0:	beq	114c4 <__snprintf_chk@plt+0x158>
   114b4:	mov	r1, r4
   114b8:	mov	r0, r5
   114bc:	bl	11204 <kill@plt>
   114c0:	pop	{r4, r5, r6, pc}
   114c4:	mov	r1, #1
   114c8:	mov	r0, r4
   114cc:	bl	110cc <signal@plt>
   114d0:	b	114b4 <__snprintf_chk@plt+0x148>
   114d4:	push	{r4, r5, lr}
   114d8:	vpush	{d8}
   114dc:	sub	sp, sp, #36	; 0x24
   114e0:	vmov.f64	d8, d0
   114e4:	mov	r5, r0
   114e8:	add	r4, sp, #24
   114ec:	mov	r0, r4
   114f0:	bl	12630 <__snprintf_chk@plt+0x12c4>
   114f4:	mov	r3, #0
   114f8:	str	r3, [sp, #8]
   114fc:	str	r3, [sp, #12]
   11500:	add	r2, sp, #16
   11504:	ldm	r4, {r0, r1}
   11508:	stm	r2, {r0, r1}
   1150c:	add	r2, sp, #4
   11510:	mov	r1, r3
   11514:	mov	r0, r3
   11518:	bl	11114 <timer_create@plt>
   1151c:	cmp	r0, #0
   11520:	beq	115a0 <__snprintf_chk@plt+0x234>
   11524:	cmp	r5, #0
   11528:	beq	1155c <__snprintf_chk@plt+0x1f0>
   1152c:	bl	1124c <__errno_location@plt>
   11530:	ldr	r4, [r0]
   11534:	cmp	r4, #38	; 0x26
   11538:	beq	1155c <__snprintf_chk@plt+0x1f0>
   1153c:	mov	r2, #5
   11540:	ldr	r1, [pc, #192]	; 11608 <__snprintf_chk@plt+0x29c>
   11544:	mov	r0, #0
   11548:	bl	110f0 <dcgettext@plt>
   1154c:	mov	r2, r0
   11550:	mov	r1, r4
   11554:	mov	r0, #0
   11558:	bl	111a4 <error@plt>
   1155c:	vldr	d7, [pc, #156]	; 11600 <__snprintf_chk@plt+0x294>
   11560:	vcmpe.f64	d8, d7
   11564:	vmrs	APSR_nzcv, fpscr
   11568:	mvnge	r0, #0
   1156c:	bge	11590 <__snprintf_chk@plt+0x224>
   11570:	vcvt.u32.f64	s15, d8
   11574:	vcvt.f64.u32	d6, s15
   11578:	vcmpe.f64	d8, d6
   1157c:	vmrs	APSR_nzcv, fpscr
   11580:	movgt	r0, #1
   11584:	movle	r0, #0
   11588:	vmov	r3, s15
   1158c:	add	r0, r0, r3
   11590:	bl	110fc <alarm@plt>
   11594:	add	sp, sp, #36	; 0x24
   11598:	vpop	{d8}
   1159c:	pop	{r4, r5, pc}
   115a0:	mov	r3, #0
   115a4:	add	r2, sp, #8
   115a8:	mov	r1, r3
   115ac:	ldr	r0, [sp, #4]
   115b0:	bl	11138 <timer_settime@plt>
   115b4:	cmp	r0, #0
   115b8:	beq	11594 <__snprintf_chk@plt+0x228>
   115bc:	cmp	r5, #0
   115c0:	bne	115d0 <__snprintf_chk@plt+0x264>
   115c4:	ldr	r0, [sp, #4]
   115c8:	bl	111b0 <timer_delete@plt>
   115cc:	b	1155c <__snprintf_chk@plt+0x1f0>
   115d0:	bl	1124c <__errno_location@plt>
   115d4:	ldr	r4, [r0]
   115d8:	mov	r2, #5
   115dc:	ldr	r1, [pc, #40]	; 1160c <__snprintf_chk@plt+0x2a0>
   115e0:	mov	r0, #0
   115e4:	bl	110f0 <dcgettext@plt>
   115e8:	mov	r2, r0
   115ec:	mov	r1, r4
   115f0:	mov	r0, #0
   115f4:	bl	111a4 <error@plt>
   115f8:	b	115c4 <__snprintf_chk@plt+0x258>
   115fc:	nop			; (mov r0, r0)
   11600:			; <UNDEFINED> instruction: 0xffe00000
   11604:	strdmi	pc, [pc, #255]	; 1170b <__snprintf_chk@plt+0x39f>
   11608:	muleq	r1, r4, ip
   1160c:	andeq	r5, r1, ip, ror ip
   11610:	push	{r4, r5, r6, lr}
   11614:	vpush	{d8}
   11618:	sub	sp, sp, #32
   1161c:	mov	r4, r0
   11620:	cmp	r0, #14
   11624:	moveq	r2, #1
   11628:	ldreq	r3, [pc, #340]	; 11784 <__snprintf_chk@plt+0x418>
   1162c:	streq	r2, [r3]
   11630:	ldreq	r3, [pc, #336]	; 11788 <__snprintf_chk@plt+0x41c>
   11634:	ldreq	r4, [r3]
   11638:	ldr	r3, [pc, #324]	; 11784 <__snprintf_chk@plt+0x418>
   1163c:	ldr	r3, [r3, #4]
   11640:	cmp	r3, #0
   11644:	beq	1177c <__snprintf_chk@plt+0x410>
   11648:	ldr	r3, [pc, #308]	; 11784 <__snprintf_chk@plt+0x418>
   1164c:	vldr	d8, [r3, #8]
   11650:	vcmp.f64	d8, #0.0
   11654:	vmrs	APSR_nzcv, fpscr
   11658:	bne	11698 <__snprintf_chk@plt+0x32c>
   1165c:	ldr	r3, [pc, #288]	; 11784 <__snprintf_chk@plt+0x418>
   11660:	ldrb	r3, [r3, #16]
   11664:	cmp	r3, #0
   11668:	bne	116d4 <__snprintf_chk@plt+0x368>
   1166c:	ldr	r5, [pc, #272]	; 11784 <__snprintf_chk@plt+0x418>
   11670:	ldr	r6, [r5, #4]
   11674:	mov	r1, r4
   11678:	mov	r0, r6
   1167c:	bl	114a4 <__snprintf_chk@plt+0x138>
   11680:	ldrb	r3, [r5, #24]
   11684:	cmp	r3, #0
   11688:	beq	11748 <__snprintf_chk@plt+0x3dc>
   1168c:	add	sp, sp, #32
   11690:	vpop	{d8}
   11694:	pop	{r4, r5, r6, pc}
   11698:	bl	1124c <__errno_location@plt>
   1169c:	mov	r5, r0
   116a0:	ldr	r6, [r0]
   116a4:	mov	r2, #9
   116a8:	ldr	r3, [pc, #216]	; 11788 <__snprintf_chk@plt+0x41c>
   116ac:	str	r2, [r3]
   116b0:	mov	r0, #0
   116b4:	vmov.f64	d0, d8
   116b8:	bl	114d4 <__snprintf_chk@plt+0x168>
   116bc:	mov	r0, #0
   116c0:	mov	r1, #0
   116c4:	ldr	r3, [pc, #184]	; 11784 <__snprintf_chk@plt+0x418>
   116c8:	strd	r0, [r3, #8]
   116cc:	str	r6, [r5]
   116d0:	b	1165c <__snprintf_chk@plt+0x2f0>
   116d4:	add	r1, sp, #12
   116d8:	mov	r0, r4
   116dc:	bl	1444c <__snprintf_chk@plt+0x30e0>
   116e0:	cmp	r0, #0
   116e4:	bne	11724 <__snprintf_chk@plt+0x3b8>
   116e8:	mov	r2, #5
   116ec:	ldr	r1, [pc, #152]	; 1178c <__snprintf_chk@plt+0x420>
   116f0:	mov	r0, #0
   116f4:	bl	110f0 <dcgettext@plt>
   116f8:	mov	r5, r0
   116fc:	ldr	r3, [pc, #128]	; 11784 <__snprintf_chk@plt+0x418>
   11700:	ldr	r0, [r3, #20]
   11704:	bl	142bc <__snprintf_chk@plt+0x2f50>
   11708:	str	r0, [sp]
   1170c:	add	r3, sp, #12
   11710:	mov	r2, r5
   11714:	mov	r1, #0
   11718:	mov	r0, r1
   1171c:	bl	111a4 <error@plt>
   11720:	b	1166c <__snprintf_chk@plt+0x300>
   11724:	str	r4, [sp, #4]
   11728:	ldr	r3, [pc, #96]	; 11790 <__snprintf_chk@plt+0x424>
   1172c:	str	r3, [sp]
   11730:	mov	r3, #19
   11734:	mov	r2, #1
   11738:	mov	r1, r3
   1173c:	add	r0, sp, #12
   11740:	bl	1136c <__snprintf_chk@plt>
   11744:	b	116e8 <__snprintf_chk@plt+0x37c>
   11748:	mov	r1, r4
   1174c:	mov	r0, #0
   11750:	bl	114a4 <__snprintf_chk@plt+0x138>
   11754:	cmp	r4, #9
   11758:	cmpne	r4, #18
   1175c:	beq	1168c <__snprintf_chk@plt+0x320>
   11760:	mov	r1, #18
   11764:	mov	r0, r6
   11768:	bl	114a4 <__snprintf_chk@plt+0x138>
   1176c:	mov	r1, #18
   11770:	mov	r0, #0
   11774:	bl	114a4 <__snprintf_chk@plt+0x138>
   11778:	b	1168c <__snprintf_chk@plt+0x320>
   1177c:	add	r0, r4, #128	; 0x80
   11780:	bl	1109c <_exit@plt>
   11784:	andeq	r7, r2, r0, asr #6
   11788:	andeq	r7, r2, ip, lsr #2
   1178c:			; <UNDEFINED> instruction: 0x00015cb0
   11790:	andeq	r5, r1, ip, lsr #25
   11794:	push	{r4, lr}
   11798:	sub	sp, sp, #128	; 0x80
   1179c:	mov	r4, r0
   117a0:	mov	r0, sp
   117a4:	bl	112f4 <sigemptyset@plt>
   117a8:	mov	r1, r4
   117ac:	mov	r0, sp
   117b0:	bl	111c8 <sigaddset@plt>
   117b4:	mov	r2, #0
   117b8:	mov	r1, sp
   117bc:	mov	r0, #1
   117c0:	bl	11084 <sigprocmask@plt>
   117c4:	cmp	r0, #0
   117c8:	bne	117d4 <__snprintf_chk@plt+0x468>
   117cc:	add	sp, sp, #128	; 0x80
   117d0:	pop	{r4, pc}
   117d4:	bl	1124c <__errno_location@plt>
   117d8:	ldr	r4, [r0]
   117dc:	mov	r2, #5
   117e0:	ldr	r1, [pc, #24]	; 11800 <__snprintf_chk@plt+0x494>
   117e4:	mov	r0, #0
   117e8:	bl	110f0 <dcgettext@plt>
   117ec:	mov	r2, r0
   117f0:	mov	r1, r4
   117f4:	mov	r0, #0
   117f8:	bl	111a4 <error@plt>
   117fc:	b	117cc <__snprintf_chk@plt+0x460>
   11800:	ldrdeq	r5, [r1], -r0
   11804:	push	{lr}		; (str lr, [sp, #-4]!)
   11808:	sub	sp, sp, #60	; 0x3c
   1180c:	subs	r6, r0, #0
   11810:	beq	1184c <__snprintf_chk@plt+0x4e0>
   11814:	ldr	r3, [pc, #828]	; 11b58 <__snprintf_chk@plt+0x7ec>
   11818:	ldr	r4, [r3]
   1181c:	mov	r2, #5
   11820:	ldr	r1, [pc, #820]	; 11b5c <__snprintf_chk@plt+0x7f0>
   11824:	mov	r0, #0
   11828:	bl	110f0 <dcgettext@plt>
   1182c:	ldr	r3, [pc, #812]	; 11b60 <__snprintf_chk@plt+0x7f4>
   11830:	ldr	r3, [r3]
   11834:	mov	r2, r0
   11838:	mov	r1, #1
   1183c:	mov	r0, r4
   11840:	bl	112b8 <__fprintf_chk@plt>
   11844:	mov	r0, r6
   11848:	bl	1121c <exit@plt>
   1184c:	mov	r2, #5
   11850:	ldr	r1, [pc, #780]	; 11b64 <__snprintf_chk@plt+0x7f8>
   11854:	mov	r0, #0
   11858:	bl	110f0 <dcgettext@plt>
   1185c:	ldr	r3, [pc, #764]	; 11b60 <__snprintf_chk@plt+0x7f4>
   11860:	ldr	r2, [r3]
   11864:	mov	r3, r2
   11868:	mov	r1, r0
   1186c:	mov	r0, #1
   11870:	bl	11288 <__printf_chk@plt>
   11874:	mov	r2, #5
   11878:	ldr	r1, [pc, #744]	; 11b68 <__snprintf_chk@plt+0x7fc>
   1187c:	mov	r0, #0
   11880:	bl	110f0 <dcgettext@plt>
   11884:	ldr	r4, [pc, #736]	; 11b6c <__snprintf_chk@plt+0x800>
   11888:	ldr	r1, [r4]
   1188c:	bl	11048 <fputs_unlocked@plt>
   11890:	mov	r2, #5
   11894:	ldr	r1, [pc, #724]	; 11b70 <__snprintf_chk@plt+0x804>
   11898:	mov	r0, #0
   1189c:	bl	110f0 <dcgettext@plt>
   118a0:	ldr	r1, [r4]
   118a4:	bl	11048 <fputs_unlocked@plt>
   118a8:	mov	r2, #5
   118ac:	ldr	r1, [pc, #704]	; 11b74 <__snprintf_chk@plt+0x808>
   118b0:	mov	r0, #0
   118b4:	bl	110f0 <dcgettext@plt>
   118b8:	ldr	r1, [r4]
   118bc:	bl	11048 <fputs_unlocked@plt>
   118c0:	mov	r2, #5
   118c4:	ldr	r1, [pc, #684]	; 11b78 <__snprintf_chk@plt+0x80c>
   118c8:	mov	r0, #0
   118cc:	bl	110f0 <dcgettext@plt>
   118d0:	ldr	r1, [r4]
   118d4:	bl	11048 <fputs_unlocked@plt>
   118d8:	mov	r2, #5
   118dc:	ldr	r1, [pc, #664]	; 11b7c <__snprintf_chk@plt+0x810>
   118e0:	mov	r0, #0
   118e4:	bl	110f0 <dcgettext@plt>
   118e8:	ldr	r1, [r4]
   118ec:	bl	11048 <fputs_unlocked@plt>
   118f0:	mov	r2, #5
   118f4:	ldr	r1, [pc, #644]	; 11b80 <__snprintf_chk@plt+0x814>
   118f8:	mov	r0, #0
   118fc:	bl	110f0 <dcgettext@plt>
   11900:	ldr	r1, [r4]
   11904:	bl	11048 <fputs_unlocked@plt>
   11908:	mov	r2, #5
   1190c:	ldr	r1, [pc, #624]	; 11b84 <__snprintf_chk@plt+0x818>
   11910:	mov	r0, #0
   11914:	bl	110f0 <dcgettext@plt>
   11918:	ldr	r1, [r4]
   1191c:	bl	11048 <fputs_unlocked@plt>
   11920:	mov	r2, #5
   11924:	ldr	r1, [pc, #604]	; 11b88 <__snprintf_chk@plt+0x81c>
   11928:	mov	r0, #0
   1192c:	bl	110f0 <dcgettext@plt>
   11930:	ldr	r1, [r4]
   11934:	bl	11048 <fputs_unlocked@plt>
   11938:	mov	r2, #5
   1193c:	ldr	r1, [pc, #584]	; 11b8c <__snprintf_chk@plt+0x820>
   11940:	mov	r0, #0
   11944:	bl	110f0 <dcgettext@plt>
   11948:	ldr	r1, [r4]
   1194c:	bl	11048 <fputs_unlocked@plt>
   11950:	mov	ip, sp
   11954:	ldr	lr, [pc, #564]	; 11b90 <__snprintf_chk@plt+0x824>
   11958:	ldm	lr!, {r0, r1, r2, r3}
   1195c:	stmia	ip!, {r0, r1, r2, r3}
   11960:	ldm	lr!, {r0, r1, r2, r3}
   11964:	stmia	ip!, {r0, r1, r2, r3}
   11968:	ldm	lr!, {r0, r1, r2, r3}
   1196c:	stmia	ip!, {r0, r1, r2, r3}
   11970:	ldm	lr, {r0, r1}
   11974:	stm	ip, {r0, r1}
   11978:	ldr	r1, [sp]
   1197c:	cmp	r1, #0
   11980:	moveq	r4, sp
   11984:	beq	119ac <__snprintf_chk@plt+0x640>
   11988:	mov	r4, sp
   1198c:	ldr	r5, [pc, #512]	; 11b94 <__snprintf_chk@plt+0x828>
   11990:	mov	r0, r5
   11994:	bl	11060 <strcmp@plt>
   11998:	cmp	r0, #0
   1199c:	beq	119ac <__snprintf_chk@plt+0x640>
   119a0:	ldr	r1, [r4, #8]!
   119a4:	cmp	r1, #0
   119a8:	bne	11990 <__snprintf_chk@plt+0x624>
   119ac:	ldr	r4, [r4, #4]
   119b0:	cmp	r4, #0
   119b4:	beq	11ac8 <__snprintf_chk@plt+0x75c>
   119b8:	mov	r2, #5
   119bc:	ldr	r1, [pc, #468]	; 11b98 <__snprintf_chk@plt+0x82c>
   119c0:	mov	r0, #0
   119c4:	bl	110f0 <dcgettext@plt>
   119c8:	ldr	r3, [pc, #460]	; 11b9c <__snprintf_chk@plt+0x830>
   119cc:	ldr	r2, [pc, #460]	; 11ba0 <__snprintf_chk@plt+0x834>
   119d0:	mov	r1, r0
   119d4:	mov	r0, #1
   119d8:	bl	11288 <__printf_chk@plt>
   119dc:	mov	r1, #0
   119e0:	mov	r0, #5
   119e4:	bl	112e8 <setlocale@plt>
   119e8:	cmp	r0, #0
   119ec:	beq	11a04 <__snprintf_chk@plt+0x698>
   119f0:	mov	r2, #3
   119f4:	ldr	r1, [pc, #424]	; 11ba4 <__snprintf_chk@plt+0x838>
   119f8:	bl	11354 <strncmp@plt>
   119fc:	cmp	r0, #0
   11a00:	bne	11a64 <__snprintf_chk@plt+0x6f8>
   11a04:	mov	r2, #5
   11a08:	ldr	r1, [pc, #408]	; 11ba8 <__snprintf_chk@plt+0x83c>
   11a0c:	mov	r0, #0
   11a10:	bl	110f0 <dcgettext@plt>
   11a14:	ldr	r5, [pc, #376]	; 11b94 <__snprintf_chk@plt+0x828>
   11a18:	mov	r3, r5
   11a1c:	ldr	r2, [pc, #376]	; 11b9c <__snprintf_chk@plt+0x830>
   11a20:	mov	r1, r0
   11a24:	mov	r0, #1
   11a28:	bl	11288 <__printf_chk@plt>
   11a2c:	mov	r2, #5
   11a30:	ldr	r1, [pc, #372]	; 11bac <__snprintf_chk@plt+0x840>
   11a34:	mov	r0, #0
   11a38:	bl	110f0 <dcgettext@plt>
   11a3c:	mov	r1, r0
   11a40:	ldr	r2, [pc, #360]	; 11bb0 <__snprintf_chk@plt+0x844>
   11a44:	ldr	r3, [pc, #360]	; 11bb4 <__snprintf_chk@plt+0x848>
   11a48:	cmp	r4, r5
   11a4c:	movne	r3, r2
   11a50:	mov	r2, r4
   11a54:	mov	r0, #1
   11a58:	bl	11288 <__printf_chk@plt>
   11a5c:	b	11844 <__snprintf_chk@plt+0x4d8>
   11a60:	ldr	r4, [pc, #300]	; 11b94 <__snprintf_chk@plt+0x828>
   11a64:	mov	r2, #5
   11a68:	ldr	r1, [pc, #328]	; 11bb8 <__snprintf_chk@plt+0x84c>
   11a6c:	mov	r0, #0
   11a70:	bl	110f0 <dcgettext@plt>
   11a74:	ldr	r3, [pc, #240]	; 11b6c <__snprintf_chk@plt+0x800>
   11a78:	ldr	r1, [r3]
   11a7c:	bl	11048 <fputs_unlocked@plt>
   11a80:	b	11a04 <__snprintf_chk@plt+0x698>
   11a84:	mov	r2, #5
   11a88:	ldr	r1, [pc, #280]	; 11ba8 <__snprintf_chk@plt+0x83c>
   11a8c:	mov	r0, #0
   11a90:	bl	110f0 <dcgettext@plt>
   11a94:	ldr	r4, [pc, #248]	; 11b94 <__snprintf_chk@plt+0x828>
   11a98:	mov	r3, r4
   11a9c:	ldr	r2, [pc, #248]	; 11b9c <__snprintf_chk@plt+0x830>
   11aa0:	mov	r1, r0
   11aa4:	mov	r0, #1
   11aa8:	bl	11288 <__printf_chk@plt>
   11aac:	mov	r2, #5
   11ab0:	ldr	r1, [pc, #244]	; 11bac <__snprintf_chk@plt+0x840>
   11ab4:	mov	r0, #0
   11ab8:	bl	110f0 <dcgettext@plt>
   11abc:	mov	r1, r0
   11ac0:	ldr	r3, [pc, #236]	; 11bb4 <__snprintf_chk@plt+0x848>
   11ac4:	b	11a50 <__snprintf_chk@plt+0x6e4>
   11ac8:	mov	r2, #5
   11acc:	ldr	r1, [pc, #196]	; 11b98 <__snprintf_chk@plt+0x82c>
   11ad0:	mov	r0, #0
   11ad4:	bl	110f0 <dcgettext@plt>
   11ad8:	ldr	r3, [pc, #188]	; 11b9c <__snprintf_chk@plt+0x830>
   11adc:	ldr	r2, [pc, #188]	; 11ba0 <__snprintf_chk@plt+0x834>
   11ae0:	mov	r1, r0
   11ae4:	mov	r0, #1
   11ae8:	bl	11288 <__printf_chk@plt>
   11aec:	mov	r1, #0
   11af0:	mov	r0, #5
   11af4:	bl	112e8 <setlocale@plt>
   11af8:	cmp	r0, #0
   11afc:	beq	11a84 <__snprintf_chk@plt+0x718>
   11b00:	mov	r2, #3
   11b04:	ldr	r1, [pc, #152]	; 11ba4 <__snprintf_chk@plt+0x838>
   11b08:	bl	11354 <strncmp@plt>
   11b0c:	cmp	r0, #0
   11b10:	bne	11a60 <__snprintf_chk@plt+0x6f4>
   11b14:	mov	r2, #5
   11b18:	ldr	r1, [pc, #136]	; 11ba8 <__snprintf_chk@plt+0x83c>
   11b1c:	mov	r0, #0
   11b20:	bl	110f0 <dcgettext@plt>
   11b24:	ldr	r4, [pc, #104]	; 11b94 <__snprintf_chk@plt+0x828>
   11b28:	mov	r3, r4
   11b2c:	ldr	r2, [pc, #104]	; 11b9c <__snprintf_chk@plt+0x830>
   11b30:	mov	r1, r0
   11b34:	mov	r0, #1
   11b38:	bl	11288 <__printf_chk@plt>
   11b3c:	mov	r2, #5
   11b40:	ldr	r1, [pc, #100]	; 11bac <__snprintf_chk@plt+0x840>
   11b44:	mov	r0, #0
   11b48:	bl	110f0 <dcgettext@plt>
   11b4c:	mov	r1, r0
   11b50:	ldr	r3, [pc, #92]	; 11bb4 <__snprintf_chk@plt+0x848>
   11b54:	b	11a50 <__snprintf_chk@plt+0x6e4>
   11b58:	andeq	r7, r2, r0, lsr r3
   11b5c:	strdeq	r5, [r1], -r0
   11b60:	andeq	r7, r2, r4, ror #6
   11b64:	andeq	r5, r1, r8, lsl sp
   11b68:	andeq	r5, r1, ip, asr sp
   11b6c:	andeq	r7, r2, r4, lsr r3
   11b70:	muleq	r1, ip, sp
   11b74:	andeq	r5, r1, r8, ror #27
   11b78:	andeq	r6, r1, r4, asr #1
   11b7c:	andeq	r6, r1, r8, lsl #2
   11b80:	andeq	r6, r1, r8, lsr r1
   11b84:	andeq	r6, r1, r0, ror r1
   11b88:	andeq	r6, r1, r0, lsr r2
   11b8c:	andeq	r6, r1, ip, lsl r3
   11b90:	andeq	r5, r1, r4, asr #23
   11b94:	andeq	r5, r1, r8, ror #25
   11b98:	andeq	r6, r1, r4, ror #8
   11b9c:	andeq	r6, r1, ip, ror r4
   11ba0:	andeq	r6, r1, r4, lsr #9
   11ba4:			; <UNDEFINED> instruction: 0x000164b4
   11ba8:	andeq	r6, r1, r0, lsl #10
   11bac:	andeq	r6, r1, ip, lsl r5
   11bb0:	muleq	r1, r8, sp
   11bb4:	andeq	r6, r1, r4, ror #12
   11bb8:			; <UNDEFINED> instruction: 0x000164b8
   11bbc:	push	{r4, r5, lr}
   11bc0:	sub	sp, sp, #20
   11bc4:	mov	r4, r0
   11bc8:	ldr	r3, [pc, #236]	; 11cbc <__snprintf_chk@plt+0x950>
   11bcc:	add	r2, sp, #8
   11bd0:	add	r1, sp, #4
   11bd4:	bl	150d0 <__snprintf_chk@plt+0x3d64>
   11bd8:	cmp	r0, #0
   11bdc:	bne	11bf0 <__snprintf_chk@plt+0x884>
   11be0:	bl	1124c <__errno_location@plt>
   11be4:	ldr	r3, [r0]
   11be8:	cmp	r3, #34	; 0x22
   11bec:	bne	11c3c <__snprintf_chk@plt+0x8d0>
   11bf0:	vldr	d7, [sp, #8]
   11bf4:	vcmpe.f64	d7, #0.0
   11bf8:	vmrs	APSR_nzcv, fpscr
   11bfc:	blt	11c3c <__snprintf_chk@plt+0x8d0>
   11c00:	ldr	r2, [sp, #4]
   11c04:	ldrb	r3, [r2]
   11c08:	cmp	r3, #0
   11c0c:	beq	11c74 <__snprintf_chk@plt+0x908>
   11c10:	ldrb	r2, [r2, #1]
   11c14:	cmp	r2, #0
   11c18:	bne	11c3c <__snprintf_chk@plt+0x8d0>
   11c1c:	cmp	r3, #104	; 0x68
   11c20:	beq	11c88 <__snprintf_chk@plt+0x91c>
   11c24:	bhi	11c90 <__snprintf_chk@plt+0x924>
   11c28:	cmp	r3, #0
   11c2c:	beq	11ca4 <__snprintf_chk@plt+0x938>
   11c30:	cmp	r3, #100	; 0x64
   11c34:	vldreq	s0, [pc, #112]	; 11cac <__snprintf_chk@plt+0x940>
   11c38:	beq	11c78 <__snprintf_chk@plt+0x90c>
   11c3c:	mov	r2, #5
   11c40:	ldr	r1, [pc, #120]	; 11cc0 <__snprintf_chk@plt+0x954>
   11c44:	mov	r0, #0
   11c48:	bl	110f0 <dcgettext@plt>
   11c4c:	mov	r5, r0
   11c50:	mov	r0, r4
   11c54:	bl	142bc <__snprintf_chk@plt+0x2f50>
   11c58:	mov	r3, r0
   11c5c:	mov	r2, r5
   11c60:	mov	r1, #0
   11c64:	mov	r0, r1
   11c68:	bl	111a4 <error@plt>
   11c6c:	mov	r0, #125	; 0x7d
   11c70:	bl	11804 <__snprintf_chk@plt+0x498>
   11c74:	vldr	s0, [pc, #52]	; 11cb0 <__snprintf_chk@plt+0x944>
   11c78:	vcvt.f64.s32	d0, s0
   11c7c:	vmul.f64	d0, d0, d7
   11c80:	add	sp, sp, #20
   11c84:	pop	{r4, r5, pc}
   11c88:	vldr	s0, [pc, #36]	; 11cb4 <__snprintf_chk@plt+0x948>
   11c8c:	b	11c78 <__snprintf_chk@plt+0x90c>
   11c90:	cmp	r3, #109	; 0x6d
   11c94:	vldreq	s0, [pc, #28]	; 11cb8 <__snprintf_chk@plt+0x94c>
   11c98:	beq	11c78 <__snprintf_chk@plt+0x90c>
   11c9c:	cmp	r3, #115	; 0x73
   11ca0:	bne	11c3c <__snprintf_chk@plt+0x8d0>
   11ca4:	vldr	s0, [pc, #4]	; 11cb0 <__snprintf_chk@plt+0x944>
   11ca8:	b	11c78 <__snprintf_chk@plt+0x90c>
   11cac:	andeq	r5, r1, r0, lsl #3
   11cb0:	andeq	r0, r0, r1
   11cb4:	andeq	r0, r0, r0, lsl lr
   11cb8:	andeq	r0, r0, ip, lsr r0
   11cbc:	muleq	r1, r8, r4
   11cc0:	andeq	r6, r1, r0, asr r5
   11cc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cc8:	vpush	{d8}
   11ccc:	sub	sp, sp, #296	; 0x128
   11cd0:	mov	r5, r0
   11cd4:	mov	r4, r1
   11cd8:	ldr	r0, [r1]
   11cdc:	bl	1276c <__snprintf_chk@plt+0x1400>
   11ce0:	ldr	r1, [pc, #1448]	; 12290 <__snprintf_chk@plt+0xf24>
   11ce4:	mov	r0, #6
   11ce8:	bl	112e8 <setlocale@plt>
   11cec:	ldr	r6, [pc, #1440]	; 12294 <__snprintf_chk@plt+0xf28>
   11cf0:	ldr	r1, [pc, #1440]	; 12298 <__snprintf_chk@plt+0xf2c>
   11cf4:	mov	r0, r6
   11cf8:	bl	1133c <bindtextdomain@plt>
   11cfc:	mov	r0, r6
   11d00:	bl	11120 <textdomain@plt>
   11d04:	mov	r2, #125	; 0x7d
   11d08:	ldr	r3, [pc, #1420]	; 1229c <__snprintf_chk@plt+0xf30>
   11d0c:	str	r2, [r3]
   11d10:	ldr	r0, [pc, #1416]	; 122a0 <__snprintf_chk@plt+0xf34>
   11d14:	bl	15ba0 <__snprintf_chk@plt+0x4834>
   11d18:	ldr	r7, [pc, #1412]	; 122a4 <__snprintf_chk@plt+0xf38>
   11d1c:	ldr	r6, [pc, #1412]	; 122a8 <__snprintf_chk@plt+0xf3c>
   11d20:	ldr	r9, [pc, #1412]	; 122ac <__snprintf_chk@plt+0xf40>
   11d24:	ldr	sl, [pc, #1412]	; 122b0 <__snprintf_chk@plt+0xf44>
   11d28:	ldr	r8, [pc, #1412]	; 122b4 <__snprintf_chk@plt+0xf48>
   11d2c:	mov	r3, #0
   11d30:	str	r3, [sp]
   11d34:	mov	r3, r7
   11d38:	mov	r2, r6
   11d3c:	mov	r1, r4
   11d40:	mov	r0, r5
   11d44:	bl	111f8 <getopt_long@plt>
   11d48:	cmn	r0, #1
   11d4c:	beq	11e28 <__snprintf_chk@plt+0xabc>
   11d50:	cmp	r0, #115	; 0x73
   11d54:	beq	11db4 <__snprintf_chk@plt+0xa48>
   11d58:	bgt	11d7c <__snprintf_chk@plt+0xa10>
   11d5c:	cmn	r0, #2
   11d60:	beq	11dec <__snprintf_chk@plt+0xa80>
   11d64:	cmp	r0, #107	; 0x6b
   11d68:	beq	11da4 <__snprintf_chk@plt+0xa38>
   11d6c:	cmn	r0, #3
   11d70:	beq	11df4 <__snprintf_chk@plt+0xa88>
   11d74:	mov	r0, #125	; 0x7d
   11d78:	bl	11804 <__snprintf_chk@plt+0x498>
   11d7c:	cmp	r0, #256	; 0x100
   11d80:	beq	11dd4 <__snprintf_chk@plt+0xa68>
   11d84:	ldr	r3, [pc, #1324]	; 122b8 <__snprintf_chk@plt+0xf4c>
   11d88:	cmp	r0, r3
   11d8c:	beq	11de0 <__snprintf_chk@plt+0xa74>
   11d90:	cmp	r0, #118	; 0x76
   11d94:	bne	11d74 <__snprintf_chk@plt+0xa08>
   11d98:	mov	r3, #1
   11d9c:	strb	r3, [r8, #16]
   11da0:	b	11d2c <__snprintf_chk@plt+0x9c0>
   11da4:	ldr	r0, [r9]
   11da8:	bl	11bbc <__snprintf_chk@plt+0x850>
   11dac:	vstr	d0, [r8, #8]
   11db0:	b	11d2c <__snprintf_chk@plt+0x9c0>
   11db4:	add	r1, sp, #276	; 0x114
   11db8:	ldr	r0, [r9]
   11dbc:	bl	122f8 <__snprintf_chk@plt+0xf8c>
   11dc0:	str	r0, [sl]
   11dc4:	cmn	r0, #1
   11dc8:	bne	11d2c <__snprintf_chk@plt+0x9c0>
   11dcc:	mov	r0, #125	; 0x7d
   11dd0:	bl	11804 <__snprintf_chk@plt+0x498>
   11dd4:	mov	r3, #1
   11dd8:	strb	r3, [r8, #24]
   11ddc:	b	11d2c <__snprintf_chk@plt+0x9c0>
   11de0:	mov	r3, #1
   11de4:	strb	r3, [r8, #25]
   11de8:	b	11d2c <__snprintf_chk@plt+0x9c0>
   11dec:	mov	r0, #0
   11df0:	bl	11804 <__snprintf_chk@plt+0x498>
   11df4:	mov	r4, #0
   11df8:	str	r4, [sp, #4]
   11dfc:	ldr	r3, [pc, #1208]	; 122bc <__snprintf_chk@plt+0xf50>
   11e00:	str	r3, [sp]
   11e04:	ldr	r3, [pc, #1204]	; 122c0 <__snprintf_chk@plt+0xf54>
   11e08:	ldr	r3, [r3]
   11e0c:	ldr	r2, [pc, #1200]	; 122c4 <__snprintf_chk@plt+0xf58>
   11e10:	ldr	r1, [pc, #1200]	; 122c8 <__snprintf_chk@plt+0xf5c>
   11e14:	ldr	r0, [pc, #1200]	; 122cc <__snprintf_chk@plt+0xf60>
   11e18:	ldr	r0, [r0]
   11e1c:	bl	14a20 <__snprintf_chk@plt+0x36b4>
   11e20:	mov	r0, r4
   11e24:	bl	1121c <exit@plt>
   11e28:	ldr	r3, [pc, #1184]	; 122d0 <__snprintf_chk@plt+0xf64>
   11e2c:	ldr	r3, [r3]
   11e30:	sub	r5, r5, r3
   11e34:	cmp	r5, #1
   11e38:	ble	11fd4 <__snprintf_chk@plt+0xc68>
   11e3c:	ldr	r5, [pc, #1164]	; 122d0 <__snprintf_chk@plt+0xf64>
   11e40:	add	r2, r3, #1
   11e44:	str	r2, [r5]
   11e48:	ldr	r0, [r4, r3, lsl #2]
   11e4c:	bl	11bbc <__snprintf_chk@plt+0x850>
   11e50:	vmov.f64	d8, d0
   11e54:	ldr	r5, [r5]
   11e58:	add	r8, r4, r5, lsl #2
   11e5c:	ldr	r3, [pc, #1104]	; 122b4 <__snprintf_chk@plt+0xf48>
   11e60:	ldr	r2, [r4, r5, lsl #2]
   11e64:	str	r2, [r3, #20]
   11e68:	ldrb	r3, [r3, #24]
   11e6c:	cmp	r3, #0
   11e70:	beq	11fdc <__snprintf_chk@plt+0xc70>
   11e74:	ldr	r3, [pc, #1076]	; 122b0 <__snprintf_chk@plt+0xf44>
   11e78:	ldr	r9, [r3]
   11e7c:	add	r7, sp, #140	; 0x8c
   11e80:	mov	r0, r7
   11e84:	bl	112f4 <sigemptyset@plt>
   11e88:	ldr	r3, [pc, #1092]	; 122d4 <__snprintf_chk@plt+0xf68>
   11e8c:	str	r3, [sp, #136]	; 0x88
   11e90:	mov	r6, #268435456	; 0x10000000
   11e94:	str	r6, [sp, #268]	; 0x10c
   11e98:	mov	r2, #0
   11e9c:	add	r1, sp, #136	; 0x88
   11ea0:	mov	r0, #14
   11ea4:	bl	11144 <sigaction@plt>
   11ea8:	mov	r2, #0
   11eac:	add	r1, sp, #136	; 0x88
   11eb0:	mov	r0, #2
   11eb4:	bl	11144 <sigaction@plt>
   11eb8:	mov	r2, #0
   11ebc:	add	r1, sp, #136	; 0x88
   11ec0:	mov	r0, #3
   11ec4:	bl	11144 <sigaction@plt>
   11ec8:	mov	r2, #0
   11ecc:	add	r1, sp, #136	; 0x88
   11ed0:	mov	r0, #1
   11ed4:	bl	11144 <sigaction@plt>
   11ed8:	mov	r2, #0
   11edc:	add	r1, sp, #136	; 0x88
   11ee0:	mov	r0, #15
   11ee4:	bl	11144 <sigaction@plt>
   11ee8:	mov	r2, #0
   11eec:	add	r1, sp, #136	; 0x88
   11ef0:	mov	r0, r9
   11ef4:	bl	11144 <sigaction@plt>
   11ef8:	mov	r1, #1
   11efc:	mov	r0, #21
   11f00:	bl	110cc <signal@plt>
   11f04:	mov	r1, #1
   11f08:	mov	r0, #22
   11f0c:	bl	110cc <signal@plt>
   11f10:	mov	r0, r7
   11f14:	bl	112f4 <sigemptyset@plt>
   11f18:	ldr	r3, [pc, #952]	; 122d8 <__snprintf_chk@plt+0xf6c>
   11f1c:	str	r3, [sp, #136]	; 0x88
   11f20:	str	r6, [sp, #268]	; 0x10c
   11f24:	mov	r2, #0
   11f28:	add	r1, sp, #136	; 0x88
   11f2c:	mov	r0, #17
   11f30:	bl	11144 <sigaction@plt>
   11f34:	mov	r0, #17
   11f38:	bl	11794 <__snprintf_chk@plt+0x428>
   11f3c:	bl	11300 <fork@plt>
   11f40:	ldr	r3, [pc, #876]	; 122b4 <__snprintf_chk@plt+0xf48>
   11f44:	str	r0, [r3, #4]
   11f48:	cmn	r0, #1
   11f4c:	beq	11fec <__snprintf_chk@plt+0xc80>
   11f50:	cmp	r0, #0
   11f54:	bne	1201c <__snprintf_chk@plt+0xcb0>
   11f58:	mov	r1, #0
   11f5c:	mov	r0, #21
   11f60:	bl	110cc <signal@plt>
   11f64:	mov	r1, #0
   11f68:	mov	r0, #22
   11f6c:	bl	110cc <signal@plt>
   11f70:	mov	r1, r8
   11f74:	ldr	r0, [r4, r5, lsl #2]
   11f78:	bl	110b4 <execvp@plt>
   11f7c:	bl	1124c <__errno_location@plt>
   11f80:	ldr	r5, [r0]
   11f84:	cmp	r5, #2
   11f88:	moveq	r4, #127	; 0x7f
   11f8c:	movne	r4, #126	; 0x7e
   11f90:	mov	r2, #5
   11f94:	ldr	r1, [pc, #832]	; 122dc <__snprintf_chk@plt+0xf70>
   11f98:	mov	r0, #0
   11f9c:	bl	110f0 <dcgettext@plt>
   11fa0:	mov	r6, r0
   11fa4:	ldr	r3, [pc, #776]	; 122b4 <__snprintf_chk@plt+0xf48>
   11fa8:	ldr	r0, [r3, #20]
   11fac:	bl	142bc <__snprintf_chk@plt+0x2f50>
   11fb0:	mov	r3, r0
   11fb4:	mov	r2, r6
   11fb8:	mov	r1, r5
   11fbc:	mov	r0, #0
   11fc0:	bl	111a4 <error@plt>
   11fc4:	mov	r0, r4
   11fc8:	add	sp, sp, #296	; 0x128
   11fcc:	vpop	{d8}
   11fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fd4:	mov	r0, #125	; 0x7d
   11fd8:	bl	11804 <__snprintf_chk@plt+0x498>
   11fdc:	mov	r1, #0
   11fe0:	mov	r0, r1
   11fe4:	bl	11330 <setpgid@plt>
   11fe8:	b	11e74 <__snprintf_chk@plt+0xb08>
   11fec:	bl	1124c <__errno_location@plt>
   11ff0:	ldr	r4, [r0]
   11ff4:	mov	r2, #5
   11ff8:	ldr	r1, [pc, #736]	; 122e0 <__snprintf_chk@plt+0xf74>
   11ffc:	mov	r0, #0
   12000:	bl	110f0 <dcgettext@plt>
   12004:	mov	r2, r0
   12008:	mov	r1, r4
   1200c:	mov	r0, #0
   12010:	bl	111a4 <error@plt>
   12014:	mov	r4, #125	; 0x7d
   12018:	b	11fc4 <__snprintf_chk@plt+0xc58>
   1201c:	mov	r0, #14
   12020:	bl	11794 <__snprintf_chk@plt+0x428>
   12024:	mov	r0, #1
   12028:	vmov.f64	d0, d8
   1202c:	bl	114d4 <__snprintf_chk@plt+0x168>
   12030:	ldr	r3, [pc, #632]	; 122b0 <__snprintf_chk@plt+0xf44>
   12034:	ldr	r4, [r3]
   12038:	add	r0, sp, #136	; 0x88
   1203c:	bl	112f4 <sigemptyset@plt>
   12040:	mov	r1, #14
   12044:	add	r0, sp, #136	; 0x88
   12048:	bl	111c8 <sigaddset@plt>
   1204c:	mov	r1, #2
   12050:	add	r0, sp, #136	; 0x88
   12054:	bl	111c8 <sigaddset@plt>
   12058:	mov	r1, #3
   1205c:	add	r0, sp, #136	; 0x88
   12060:	bl	111c8 <sigaddset@plt>
   12064:	mov	r1, #1
   12068:	add	r0, sp, #136	; 0x88
   1206c:	bl	111c8 <sigaddset@plt>
   12070:	mov	r1, #15
   12074:	add	r0, sp, #136	; 0x88
   12078:	bl	111c8 <sigaddset@plt>
   1207c:	mov	r1, r4
   12080:	add	r0, sp, #136	; 0x88
   12084:	bl	111c8 <sigaddset@plt>
   12088:	mov	r1, #17
   1208c:	add	r0, sp, #136	; 0x88
   12090:	bl	111c8 <sigaddset@plt>
   12094:	add	r2, sp, #8
   12098:	add	r1, sp, #136	; 0x88
   1209c:	mov	r0, #0
   120a0:	bl	11084 <sigprocmask@plt>
   120a4:	cmp	r0, #0
   120a8:	bne	120b4 <__snprintf_chk@plt+0xd48>
   120ac:	ldr	r4, [pc, #512]	; 122b4 <__snprintf_chk@plt+0xf48>
   120b0:	b	120e8 <__snprintf_chk@plt+0xd7c>
   120b4:	bl	1124c <__errno_location@plt>
   120b8:	ldr	r4, [r0]
   120bc:	mov	r2, #5
   120c0:	ldr	r1, [pc, #540]	; 122e4 <__snprintf_chk@plt+0xf78>
   120c4:	mov	r0, #0
   120c8:	bl	110f0 <dcgettext@plt>
   120cc:	mov	r2, r0
   120d0:	mov	r1, r4
   120d4:	mov	r0, #0
   120d8:	bl	111a4 <error@plt>
   120dc:	b	120ac <__snprintf_chk@plt+0xd40>
   120e0:	add	r0, sp, #8
   120e4:	bl	1127c <sigsuspend@plt>
   120e8:	mov	r2, #1
   120ec:	add	r1, sp, #136	; 0x88
   120f0:	ldr	r0, [r4, #4]
   120f4:	bl	11168 <waitpid@plt>
   120f8:	cmp	r0, #0
   120fc:	beq	120e0 <__snprintf_chk@plt+0xd74>
   12100:	blt	12148 <__snprintf_chk@plt+0xddc>
   12104:	ldr	r3, [sp, #136]	; 0x88
   12108:	ands	r4, r3, #127	; 0x7f
   1210c:	bne	1217c <__snprintf_chk@plt+0xe10>
   12110:	asr	r3, r3, #8
   12114:	uxtb	r3, r3
   12118:	str	r3, [sp, #136]	; 0x88
   1211c:	ldr	r3, [pc, #400]	; 122b4 <__snprintf_chk@plt+0xf48>
   12120:	ldr	r3, [r3]
   12124:	cmp	r3, #0
   12128:	beq	12140 <__snprintf_chk@plt+0xdd4>
   1212c:	ldr	r3, [pc, #384]	; 122b4 <__snprintf_chk@plt+0xf48>
   12130:	ldrb	r3, [r3, #25]
   12134:	cmp	r3, #0
   12138:	moveq	r3, #124	; 0x7c
   1213c:	streq	r3, [sp, #136]	; 0x88
   12140:	ldr	r4, [sp, #136]	; 0x88
   12144:	b	11fc4 <__snprintf_chk@plt+0xc58>
   12148:	bl	1124c <__errno_location@plt>
   1214c:	ldr	r4, [r0]
   12150:	mov	r2, #5
   12154:	ldr	r1, [pc, #396]	; 122e8 <__snprintf_chk@plt+0xf7c>
   12158:	mov	r0, #0
   1215c:	bl	110f0 <dcgettext@plt>
   12160:	mov	r2, r0
   12164:	mov	r1, r4
   12168:	mov	r0, #0
   1216c:	bl	111a4 <error@plt>
   12170:	mov	r3, #125	; 0x7d
   12174:	str	r3, [sp, #136]	; 0x88
   12178:	b	1211c <__snprintf_chk@plt+0xdb0>
   1217c:	and	r2, r3, #127	; 0x7f
   12180:	add	r2, r2, #1
   12184:	sxtb	r2, r2
   12188:	cmp	r2, #1
   1218c:	ble	12260 <__snprintf_chk@plt+0xef4>
   12190:	tst	r3, #128	; 0x80
   12194:	bne	121dc <__snprintf_chk@plt+0xe70>
   12198:	ldr	r3, [pc, #276]	; 122b4 <__snprintf_chk@plt+0xf48>
   1219c:	ldr	r3, [r3]
   121a0:	cmp	r3, #0
   121a4:	beq	12200 <__snprintf_chk@plt+0xe94>
   121a8:	ldr	r3, [pc, #260]	; 122b4 <__snprintf_chk@plt+0xf48>
   121ac:	ldr	r3, [r3]
   121b0:	adds	r3, r3, #0
   121b4:	movne	r3, #1
   121b8:	cmp	r4, #9
   121bc:	movne	r3, #0
   121c0:	cmp	r3, #0
   121c4:	movne	r2, #1
   121c8:	ldrne	r3, [pc, #228]	; 122b4 <__snprintf_chk@plt+0xf48>
   121cc:	strbne	r2, [r3, #25]
   121d0:	add	r4, r4, #128	; 0x80
   121d4:	str	r4, [sp, #136]	; 0x88
   121d8:	b	1211c <__snprintf_chk@plt+0xdb0>
   121dc:	mov	r2, #5
   121e0:	ldr	r1, [pc, #260]	; 122ec <__snprintf_chk@plt+0xf80>
   121e4:	mov	r0, #0
   121e8:	bl	110f0 <dcgettext@plt>
   121ec:	mov	r2, r0
   121f0:	mov	r1, #0
   121f4:	mov	r0, r1
   121f8:	bl	111a4 <error@plt>
   121fc:	b	12198 <__snprintf_chk@plt+0xe2c>
   12200:	mov	r1, #0
   12204:	mov	r0, #4
   12208:	bl	11294 <prctl@plt>
   1220c:	cmp	r0, #0
   12210:	bne	12234 <__snprintf_chk@plt+0xec8>
   12214:	mov	r1, #0
   12218:	mov	r0, r4
   1221c:	bl	110cc <signal@plt>
   12220:	mov	r0, r4
   12224:	bl	11794 <__snprintf_chk@plt+0x428>
   12228:	mov	r0, r4
   1222c:	bl	11054 <raise@plt>
   12230:	b	121a8 <__snprintf_chk@plt+0xe3c>
   12234:	bl	1124c <__errno_location@plt>
   12238:	ldr	r5, [r0]
   1223c:	mov	r2, #5
   12240:	ldr	r1, [pc, #168]	; 122f0 <__snprintf_chk@plt+0xf84>
   12244:	mov	r0, #0
   12248:	bl	110f0 <dcgettext@plt>
   1224c:	mov	r2, r0
   12250:	mov	r1, r5
   12254:	mov	r0, #0
   12258:	bl	111a4 <error@plt>
   1225c:	b	121a8 <__snprintf_chk@plt+0xe3c>
   12260:	mov	r2, #5
   12264:	ldr	r1, [pc, #136]	; 122f4 <__snprintf_chk@plt+0xf88>
   12268:	mov	r0, #0
   1226c:	bl	110f0 <dcgettext@plt>
   12270:	ldr	r3, [sp, #136]	; 0x88
   12274:	mov	r2, r0
   12278:	mov	r1, #0
   1227c:	mov	r0, r1
   12280:	bl	111a4 <error@plt>
   12284:	mov	r3, #1
   12288:	str	r3, [sp, #136]	; 0x88
   1228c:	b	1211c <__snprintf_chk@plt+0xdb0>
   12290:	muleq	r1, r8, sp
   12294:	andeq	r6, r1, r8, lsr #9
   12298:	andeq	r6, r1, ip, ror #10
   1229c:	andeq	r7, r2, r4, lsr r1
   122a0:	andeq	r2, r1, r8, lsr r5
   122a4:	strdeq	r5, [r1], -ip
   122a8:	muleq	r1, r4, r5
   122ac:	andeq	r7, r2, r8, lsr r3
   122b0:	andeq	r7, r2, ip, lsr #2
   122b4:	andeq	r7, r2, r0, asr #6
   122b8:	andeq	r0, r0, r1, lsl #2
   122bc:	andeq	r6, r1, r4, lsl #11
   122c0:	andeq	r7, r2, r0, lsr r1
   122c4:	andeq	r6, r1, r4, lsr #9
   122c8:	andeq	r5, r1, r8, ror #25
   122cc:	andeq	r7, r2, r4, lsr r3
   122d0:	andeq	r7, r2, r8, lsr #6
   122d4:	andeq	r1, r1, r0, lsl r6
   122d8:	andeq	r1, r1, r0, lsr #9
   122dc:			; <UNDEFINED> instruction: 0x000165b4
   122e0:	muleq	r1, ip, r5
   122e4:	ldrdeq	r5, [r1], -r0
   122e8:	ldrdeq	r6, [r1], -r0
   122ec:	andeq	r6, r1, ip, ror #11
   122f0:	andeq	r6, r1, r0, lsl r6
   122f4:	andeq	r6, r1, r8, lsr r6
   122f8:	push	{r4, r5, r6, r7, r8, r9, lr}
   122fc:	sub	sp, sp, #12
   12300:	mov	r7, r0
   12304:	mov	r8, r1
   12308:	ldrb	r3, [r0]
   1230c:	sub	r3, r3, #48	; 0x30
   12310:	cmp	r3, #9
   12314:	bhi	12384 <__snprintf_chk@plt+0x1018>
   12318:	bl	1124c <__errno_location@plt>
   1231c:	mov	r4, r0
   12320:	mov	r3, #0
   12324:	str	r3, [r0]
   12328:	mov	r2, #10
   1232c:	mov	r1, sp
   12330:	mov	r0, r7
   12334:	bl	1106c <strtol@plt>
   12338:	ldr	r3, [sp]
   1233c:	cmp	r7, r3
   12340:	beq	12484 <__snprintf_chk@plt+0x1118>
   12344:	ldrb	r3, [r3]
   12348:	cmp	r3, #0
   1234c:	bne	12484 <__snprintf_chk@plt+0x1118>
   12350:	ldr	r3, [r4]
   12354:	cmp	r3, #0
   12358:	bne	12484 <__snprintf_chk@plt+0x1118>
   1235c:	cmn	r0, #1
   12360:	mvneq	r3, #0
   12364:	streq	r3, [sp, #4]
   12368:	beq	123f4 <__snprintf_chk@plt+0x1088>
   1236c:	cmp	r0, #254	; 0xfe
   12370:	movgt	r3, #255	; 0xff
   12374:	movle	r3, #127	; 0x7f
   12378:	and	r0, r0, r3
   1237c:	str	r0, [sp, #4]
   12380:	b	123f4 <__snprintf_chk@plt+0x1088>
   12384:	bl	15074 <__snprintf_chk@plt+0x3d08>
   12388:	mov	r9, r0
   1238c:	ldrb	r4, [r0]
   12390:	cmp	r4, #0
   12394:	beq	123c4 <__snprintf_chk@plt+0x1058>
   12398:	mov	r5, r0
   1239c:	ldr	r6, [pc, #236]	; 12490 <__snprintf_chk@plt+0x1124>
   123a0:	mov	r1, r4
   123a4:	mov	r0, r6
   123a8:	bl	11240 <strchr@plt>
   123ac:	cmp	r0, #0
   123b0:	subne	r4, r4, #32
   123b4:	strbne	r4, [r5]
   123b8:	ldrb	r4, [r5, #1]!
   123bc:	cmp	r4, #0
   123c0:	bne	123a0 <__snprintf_chk@plt+0x1034>
   123c4:	add	r1, sp, #4
   123c8:	mov	r0, r9
   123cc:	bl	142d0 <__snprintf_chk@plt+0x2f64>
   123d0:	cmp	r0, #0
   123d4:	beq	123ec <__snprintf_chk@plt+0x1080>
   123d8:	ldrb	r3, [r9]
   123dc:	cmp	r3, #83	; 0x53
   123e0:	beq	1241c <__snprintf_chk@plt+0x10b0>
   123e4:	mvn	r3, #0
   123e8:	str	r3, [sp, #4]
   123ec:	mov	r0, r9
   123f0:	bl	12714 <__snprintf_chk@plt+0x13a8>
   123f4:	ldr	r0, [sp, #4]
   123f8:	cmp	r0, #0
   123fc:	blt	1244c <__snprintf_chk@plt+0x10e0>
   12400:	mov	r1, r8
   12404:	bl	1444c <__snprintf_chk@plt+0x30e0>
   12408:	cmp	r0, #0
   1240c:	ldreq	r0, [sp, #4]
   12410:	bne	1244c <__snprintf_chk@plt+0x10e0>
   12414:	add	sp, sp, #12
   12418:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1241c:	ldrb	r3, [r9, #1]
   12420:	cmp	r3, #73	; 0x49
   12424:	bne	123e4 <__snprintf_chk@plt+0x1078>
   12428:	ldrb	r3, [r9, #2]
   1242c:	cmp	r3, #71	; 0x47
   12430:	bne	123e4 <__snprintf_chk@plt+0x1078>
   12434:	add	r1, sp, #4
   12438:	add	r0, r9, #3
   1243c:	bl	142d0 <__snprintf_chk@plt+0x2f64>
   12440:	cmp	r0, #0
   12444:	beq	123ec <__snprintf_chk@plt+0x1080>
   12448:	b	123e4 <__snprintf_chk@plt+0x1078>
   1244c:	mov	r2, #5
   12450:	ldr	r1, [pc, #60]	; 12494 <__snprintf_chk@plt+0x1128>
   12454:	mov	r0, #0
   12458:	bl	110f0 <dcgettext@plt>
   1245c:	mov	r4, r0
   12460:	mov	r0, r7
   12464:	bl	142bc <__snprintf_chk@plt+0x2f50>
   12468:	mov	r3, r0
   1246c:	mov	r2, r4
   12470:	mov	r1, #0
   12474:	mov	r0, r1
   12478:	bl	111a4 <error@plt>
   1247c:	mvn	r0, #0
   12480:	b	12414 <__snprintf_chk@plt+0x10a8>
   12484:	mvn	r3, #0
   12488:	str	r3, [sp, #4]
   1248c:	b	123f4 <__snprintf_chk@plt+0x1088>
   12490:	andeq	r6, r1, r8, lsl #14
   12494:	andeq	r6, r1, r4, lsr #14
   12498:	push	{r4, r5, r6, r7, lr}
   1249c:	vpush	{d8}
   124a0:	sub	sp, sp, #12
   124a4:	mov	r5, r0
   124a8:	mov	r4, r1
   124ac:	add	r1, sp, #4
   124b0:	bl	112a0 <strtod@plt>
   124b4:	vmov.f64	d8, d0
   124b8:	ldr	r3, [sp, #4]
   124bc:	ldrb	r3, [r3]
   124c0:	cmp	r3, #0
   124c4:	bne	124e4 <__snprintf_chk@plt+0x1178>
   124c8:	cmp	r4, #0
   124cc:	ldrne	r3, [sp, #4]
   124d0:	strne	r3, [r4]
   124d4:	vmov.f64	d0, d8
   124d8:	add	sp, sp, #12
   124dc:	vpop	{d8}
   124e0:	pop	{r4, r5, r6, r7, pc}
   124e4:	bl	1124c <__errno_location@plt>
   124e8:	mov	r6, r0
   124ec:	ldr	r7, [r0]
   124f0:	mov	r1, sp
   124f4:	mov	r0, r5
   124f8:	bl	15248 <__snprintf_chk@plt+0x3edc>
   124fc:	ldr	r3, [sp]
   12500:	ldr	r2, [sp, #4]
   12504:	cmp	r2, r3
   12508:	strcc	r3, [sp, #4]
   1250c:	vmovcc.f64	d8, d0
   12510:	strcs	r7, [r6]
   12514:	b	124c8 <__snprintf_chk@plt+0x115c>
   12518:	ldr	r3, [pc, #4]	; 12524 <__snprintf_chk@plt+0x11b8>
   1251c:	str	r0, [r3]
   12520:	bx	lr
   12524:	andeq	r7, r2, ip, asr r3
   12528:	ldr	r3, [pc, #4]	; 12534 <__snprintf_chk@plt+0x11c8>
   1252c:	strb	r0, [r3, #4]
   12530:	bx	lr
   12534:	andeq	r7, r2, ip, asr r3
   12538:	push	{r4, r5, r6, lr}
   1253c:	sub	sp, sp, #8
   12540:	ldr	r3, [pc, #200]	; 12610 <__snprintf_chk@plt+0x12a4>
   12544:	ldr	r0, [r3]
   12548:	bl	152d4 <__snprintf_chk@plt+0x3f68>
   1254c:	cmp	r0, #0
   12550:	beq	12574 <__snprintf_chk@plt+0x1208>
   12554:	ldr	r3, [pc, #184]	; 12614 <__snprintf_chk@plt+0x12a8>
   12558:	ldrb	r3, [r3, #4]
   1255c:	cmp	r3, #0
   12560:	beq	12590 <__snprintf_chk@plt+0x1224>
   12564:	bl	1124c <__errno_location@plt>
   12568:	ldr	r3, [r0]
   1256c:	cmp	r3, #32
   12570:	bne	12590 <__snprintf_chk@plt+0x1224>
   12574:	ldr	r3, [pc, #156]	; 12618 <__snprintf_chk@plt+0x12ac>
   12578:	ldr	r0, [r3]
   1257c:	bl	152d4 <__snprintf_chk@plt+0x3f68>
   12580:	cmp	r0, #0
   12584:	bne	12604 <__snprintf_chk@plt+0x1298>
   12588:	add	sp, sp, #8
   1258c:	pop	{r4, r5, r6, pc}
   12590:	mov	r2, #5
   12594:	ldr	r1, [pc, #128]	; 1261c <__snprintf_chk@plt+0x12b0>
   12598:	mov	r0, #0
   1259c:	bl	110f0 <dcgettext@plt>
   125a0:	mov	r4, r0
   125a4:	ldr	r3, [pc, #104]	; 12614 <__snprintf_chk@plt+0x12a8>
   125a8:	ldr	r5, [r3]
   125ac:	cmp	r5, #0
   125b0:	beq	125e8 <__snprintf_chk@plt+0x127c>
   125b4:	bl	1124c <__errno_location@plt>
   125b8:	ldr	r6, [r0]
   125bc:	mov	r0, r5
   125c0:	bl	14134 <__snprintf_chk@plt+0x2dc8>
   125c4:	str	r4, [sp]
   125c8:	mov	r3, r0
   125cc:	ldr	r2, [pc, #76]	; 12620 <__snprintf_chk@plt+0x12b4>
   125d0:	mov	r1, r6
   125d4:	mov	r0, #0
   125d8:	bl	111a4 <error@plt>
   125dc:	ldr	r3, [pc, #64]	; 12624 <__snprintf_chk@plt+0x12b8>
   125e0:	ldr	r0, [r3]
   125e4:	bl	1109c <_exit@plt>
   125e8:	bl	1124c <__errno_location@plt>
   125ec:	mov	r3, r4
   125f0:	ldr	r2, [pc, #48]	; 12628 <__snprintf_chk@plt+0x12bc>
   125f4:	ldr	r1, [r0]
   125f8:	mov	r0, #0
   125fc:	bl	111a4 <error@plt>
   12600:	b	125dc <__snprintf_chk@plt+0x1270>
   12604:	ldr	r3, [pc, #24]	; 12624 <__snprintf_chk@plt+0x12b8>
   12608:	ldr	r0, [r3]
   1260c:	bl	1109c <_exit@plt>
   12610:	andeq	r7, r2, r4, lsr r3
   12614:	andeq	r7, r2, ip, asr r3
   12618:	andeq	r7, r2, r0, lsr r3
   1261c:	andeq	r6, r1, r8, asr #14
   12620:	andeq	r6, r1, r4, asr r7
   12624:	andeq	r7, r2, r4, lsr r1
   12628:	andeq	r6, r1, r8, asr r7
   1262c:	andeq	r0, r0, r0
   12630:	vldr	d7, [pc, #184]	; 126f0 <__snprintf_chk@plt+0x1384>
   12634:	vcmpe.f64	d0, d7
   12638:	vmrs	APSR_nzcv, fpscr
   1263c:	ble	126c4 <__snprintf_chk@plt+0x1358>
   12640:	vldr	d7, [pc, #176]	; 126f8 <__snprintf_chk@plt+0x138c>
   12644:	vcmpe.f64	d0, d7
   12648:	vmrs	APSR_nzcv, fpscr
   1264c:	bpl	126d8 <__snprintf_chk@plt+0x136c>
   12650:	vcvt.s32.f64	s14, d0
   12654:	vcvt.f64.s32	d6, s14
   12658:	vsub.f64	d0, d0, d6
   1265c:	vldr	d6, [pc, #156]	; 12700 <__snprintf_chk@plt+0x1394>
   12660:	vmul.f64	d0, d0, d6
   12664:	vcvt.s32.f64	s15, d0
   12668:	vcvt.f64.s32	d6, s15
   1266c:	vcmpe.f64	d0, d6
   12670:	vmrs	APSR_nzcv, fpscr
   12674:	movgt	r3, #1
   12678:	movle	r3, #0
   1267c:	vmov	r2, s15
   12680:	add	r3, r2, r3
   12684:	ldr	ip, [pc, #124]	; 12708 <__snprintf_chk@plt+0x139c>
   12688:	smull	r2, ip, ip, r3
   1268c:	asr	r1, r3, #31
   12690:	rsb	ip, r1, ip, asr #28
   12694:	vmov	r2, s14
   12698:	add	r2, ip, r2
   1269c:	ldr	r1, [pc, #104]	; 1270c <__snprintf_chk@plt+0x13a0>
   126a0:	mul	r1, r1, ip
   126a4:	subs	r3, r3, r1
   126a8:	submi	r2, r2, #1
   126ac:	addmi	r3, r3, #998244352	; 0x3b800000
   126b0:	addmi	r3, r3, #1753088	; 0x1ac000
   126b4:	addmi	r3, r3, #2560	; 0xa00
   126b8:	str	r2, [r0]
   126bc:	str	r3, [r0, #4]
   126c0:	bx	lr
   126c4:	mov	r3, #-2147483648	; 0x80000000
   126c8:	str	r3, [r0]
   126cc:	mov	r3, #0
   126d0:	str	r3, [r0, #4]
   126d4:	bx	lr
   126d8:	mvn	r3, #-2147483648	; 0x80000000
   126dc:	str	r3, [r0]
   126e0:	ldr	r3, [pc, #40]	; 12710 <__snprintf_chk@plt+0x13a4>
   126e4:	str	r3, [r0, #4]
   126e8:	bx	lr
   126ec:	nop			; (mov r0, r0)
   126f0:	andeq	r0, r0, r0
   126f4:	mvngt	r0, r0
   126f8:	andeq	r0, r0, r0
   126fc:	mvnmi	r0, r0
   12700:	andeq	r0, r0, r0
   12704:	bicmi	ip, sp, r5, ror #26
   12708:	ldrtmi	r2, [r8], #4001	; 0xfa1
   1270c:	blcc	fe6c4f14 <optarg@@GLIBC_2.4+0xfe69dbdc>
   12710:	blcc	fe6c4f14 <optarg@@GLIBC_2.4+0xfe69dbdc>
   12714:	push	{r4, r5, lr}
   12718:	sub	sp, sp, #12
   1271c:	mov	r5, r0
   12720:	bl	1124c <__errno_location@plt>
   12724:	mov	r4, r0
   12728:	ldr	r3, [r0]
   1272c:	str	r3, [sp]
   12730:	str	r3, [sp, #4]
   12734:	mov	r3, #0
   12738:	str	r3, [r0]
   1273c:	mov	r0, r5
   12740:	bl	11090 <free@plt>
   12744:	ldr	r3, [r4]
   12748:	cmp	r3, #0
   1274c:	moveq	r3, #4
   12750:	movne	r3, #0
   12754:	add	r2, sp, #8
   12758:	add	r3, r2, r3
   1275c:	ldr	r3, [r3, #-8]
   12760:	str	r3, [r4]
   12764:	add	sp, sp, #12
   12768:	pop	{r4, r5, pc}
   1276c:	push	{r4, r5, r6, lr}
   12770:	subs	r4, r0, #0
   12774:	beq	127ec <__snprintf_chk@plt+0x1480>
   12778:	mov	r1, #47	; 0x2f
   1277c:	mov	r0, r4
   12780:	bl	1130c <strrchr@plt>
   12784:	cmp	r0, #0
   12788:	addne	r5, r0, #1
   1278c:	moveq	r5, r4
   12790:	sub	r3, r5, r4
   12794:	cmp	r3, #6
   12798:	ble	127d8 <__snprintf_chk@plt+0x146c>
   1279c:	mov	r2, #7
   127a0:	ldr	r1, [pc, #96]	; 12808 <__snprintf_chk@plt+0x149c>
   127a4:	sub	r0, r5, #7
   127a8:	bl	11354 <strncmp@plt>
   127ac:	cmp	r0, #0
   127b0:	bne	127d8 <__snprintf_chk@plt+0x146c>
   127b4:	mov	r2, #3
   127b8:	ldr	r1, [pc, #76]	; 1280c <__snprintf_chk@plt+0x14a0>
   127bc:	mov	r0, r5
   127c0:	bl	11354 <strncmp@plt>
   127c4:	cmp	r0, #0
   127c8:	addeq	r4, r5, #3
   127cc:	ldreq	r3, [pc, #60]	; 12810 <__snprintf_chk@plt+0x14a4>
   127d0:	streq	r4, [r3]
   127d4:	movne	r4, r5
   127d8:	ldr	r3, [pc, #52]	; 12814 <__snprintf_chk@plt+0x14a8>
   127dc:	str	r4, [r3]
   127e0:	ldr	r3, [pc, #48]	; 12818 <__snprintf_chk@plt+0x14ac>
   127e4:	str	r4, [r3]
   127e8:	pop	{r4, r5, r6, pc}
   127ec:	ldr	r3, [pc, #40]	; 1281c <__snprintf_chk@plt+0x14b0>
   127f0:	ldr	r3, [r3]
   127f4:	mov	r2, #55	; 0x37
   127f8:	mov	r1, #1
   127fc:	ldr	r0, [pc, #28]	; 12820 <__snprintf_chk@plt+0x14b4>
   12800:	bl	11150 <fwrite@plt>
   12804:	bl	11360 <abort@plt>
   12808:	muleq	r1, r4, r7
   1280c:	muleq	r1, ip, r7
   12810:	andeq	r7, r2, r0, lsr #6
   12814:	andeq	r7, r2, r4, ror #6
   12818:	andeq	r7, r2, r4, lsr #6
   1281c:	andeq	r7, r2, r0, lsr r3
   12820:	andeq	r6, r1, ip, asr r7
   12824:	push	{r4, r5, r6, lr}
   12828:	mov	r5, r0
   1282c:	mov	r4, r1
   12830:	mov	r2, #48	; 0x30
   12834:	mov	r1, #0
   12838:	bl	11270 <memset@plt>
   1283c:	cmp	r4, #10
   12840:	beq	12850 <__snprintf_chk@plt+0x14e4>
   12844:	str	r4, [r5]
   12848:	mov	r0, r5
   1284c:	pop	{r4, r5, r6, pc}
   12850:	bl	11360 <abort@plt>
   12854:	push	{r4, r5, r6, lr}
   12858:	mov	r4, r0
   1285c:	mov	r5, r1
   12860:	mov	r2, #5
   12864:	mov	r1, r0
   12868:	mov	r0, #0
   1286c:	bl	110f0 <dcgettext@plt>
   12870:	cmp	r4, r0
   12874:	popne	{r4, r5, r6, pc}
   12878:	bl	15500 <__snprintf_chk@plt+0x4194>
   1287c:	ldrb	r3, [r0]
   12880:	bic	r3, r3, #32
   12884:	cmp	r3, #85	; 0x55
   12888:	beq	12904 <__snprintf_chk@plt+0x1598>
   1288c:	cmp	r3, #71	; 0x47
   12890:	bne	12960 <__snprintf_chk@plt+0x15f4>
   12894:	ldrb	r3, [r0, #1]
   12898:	bic	r3, r3, #32
   1289c:	cmp	r3, #66	; 0x42
   128a0:	bne	12960 <__snprintf_chk@plt+0x15f4>
   128a4:	ldrb	r3, [r0, #2]
   128a8:	cmp	r3, #49	; 0x31
   128ac:	bne	12960 <__snprintf_chk@plt+0x15f4>
   128b0:	ldrb	r3, [r0, #3]
   128b4:	cmp	r3, #56	; 0x38
   128b8:	bne	12960 <__snprintf_chk@plt+0x15f4>
   128bc:	ldrb	r3, [r0, #4]
   128c0:	cmp	r3, #48	; 0x30
   128c4:	bne	12960 <__snprintf_chk@plt+0x15f4>
   128c8:	ldrb	r3, [r0, #5]
   128cc:	cmp	r3, #51	; 0x33
   128d0:	bne	12960 <__snprintf_chk@plt+0x15f4>
   128d4:	ldrb	r3, [r0, #6]
   128d8:	cmp	r3, #48	; 0x30
   128dc:	bne	12960 <__snprintf_chk@plt+0x15f4>
   128e0:	ldrb	r3, [r0, #7]
   128e4:	cmp	r3, #0
   128e8:	bne	12960 <__snprintf_chk@plt+0x15f4>
   128ec:	ldrb	r2, [r4]
   128f0:	ldr	r3, [pc, #124]	; 12974 <__snprintf_chk@plt+0x1608>
   128f4:	ldr	r0, [pc, #124]	; 12978 <__snprintf_chk@plt+0x160c>
   128f8:	cmp	r2, #96	; 0x60
   128fc:	movne	r0, r3
   12900:	pop	{r4, r5, r6, pc}
   12904:	ldrb	r3, [r0, #1]
   12908:	bic	r3, r3, #32
   1290c:	cmp	r3, #84	; 0x54
   12910:	bne	12960 <__snprintf_chk@plt+0x15f4>
   12914:	ldrb	r3, [r0, #2]
   12918:	bic	r3, r3, #32
   1291c:	cmp	r3, #70	; 0x46
   12920:	bne	12960 <__snprintf_chk@plt+0x15f4>
   12924:	ldrb	r3, [r0, #3]
   12928:	cmp	r3, #45	; 0x2d
   1292c:	bne	12960 <__snprintf_chk@plt+0x15f4>
   12930:	ldrb	r3, [r0, #4]
   12934:	cmp	r3, #56	; 0x38
   12938:	bne	12960 <__snprintf_chk@plt+0x15f4>
   1293c:	ldrb	r3, [r0, #5]
   12940:	cmp	r3, #0
   12944:	bne	12960 <__snprintf_chk@plt+0x15f4>
   12948:	ldrb	r2, [r4]
   1294c:	ldr	r3, [pc, #40]	; 1297c <__snprintf_chk@plt+0x1610>
   12950:	ldr	r0, [pc, #40]	; 12980 <__snprintf_chk@plt+0x1614>
   12954:	cmp	r2, #96	; 0x60
   12958:	movne	r0, r3
   1295c:	pop	{r4, r5, r6, pc}
   12960:	ldr	r3, [pc, #28]	; 12984 <__snprintf_chk@plt+0x1618>
   12964:	ldr	r0, [pc, #28]	; 12988 <__snprintf_chk@plt+0x161c>
   12968:	cmp	r5, #9
   1296c:	movne	r0, r3
   12970:	pop	{r4, r5, r6, pc}
   12974:	strdeq	r6, [r1], -r8
   12978:	andeq	r6, r1, r4, lsl #16
   1297c:	strdeq	r6, [r1], -r4
   12980:	andeq	r6, r1, r8, lsl #16
   12984:	strdeq	r6, [r1], -ip
   12988:	andeq	r6, r1, r0, lsl #16
   1298c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12990:	sub	sp, sp, #116	; 0x74
   12994:	str	r0, [sp, #36]	; 0x24
   12998:	mov	sl, r1
   1299c:	str	r2, [sp, #52]	; 0x34
   129a0:	str	r3, [sp, #28]
   129a4:	ldr	r8, [sp, #152]	; 0x98
   129a8:	bl	11174 <__ctype_get_mb_cur_max@plt>
   129ac:	str	r0, [sp, #84]	; 0x54
   129b0:	ldr	r3, [sp, #156]	; 0x9c
   129b4:	lsr	r3, r3, #1
   129b8:	and	r3, r3, #1
   129bc:	str	r3, [sp, #32]
   129c0:	mov	r3, #1
   129c4:	str	r3, [sp, #40]	; 0x28
   129c8:	mov	r3, #0
   129cc:	str	r3, [sp, #80]	; 0x50
   129d0:	str	r3, [sp, #44]	; 0x2c
   129d4:	str	r3, [sp, #48]	; 0x30
   129d8:	str	r3, [sp, #60]	; 0x3c
   129dc:	str	r3, [sp, #72]	; 0x48
   129e0:	str	r3, [sp, #76]	; 0x4c
   129e4:	mov	r7, sl
   129e8:	mov	sl, r8
   129ec:	cmp	sl, #10
   129f0:	ldrls	pc, [pc, sl, lsl #2]
   129f4:	b	12bac <__snprintf_chk@plt+0x1840>
   129f8:	andeq	r2, r1, ip, asr sl
   129fc:	andeq	r2, r1, ip, lsr #20
   12a00:	andeq	r2, r1, r8, lsl #23
   12a04:	andeq	r2, r1, r4, lsr #20
   12a08:	andeq	r2, r1, ip, lsr fp
   12a0c:	andeq	r2, r1, ip, ror #20
   12a10:	ldrdeq	r3, [r1], -r8
   12a14:			; <UNDEFINED> instruction: 0x00012bb0
   12a18:	andeq	r2, r1, r8, lsr #21
   12a1c:	andeq	r2, r1, r8, lsr #21
   12a20:	andeq	r2, r1, r8, lsr #21
   12a24:	mov	r3, #1
   12a28:	str	r3, [sp, #48]	; 0x30
   12a2c:	mov	r3, #1
   12a30:	str	r3, [sp, #32]
   12a34:	str	r3, [sp, #60]	; 0x3c
   12a38:	ldr	r3, [pc, #4068]	; 13a24 <__snprintf_chk@plt+0x26b8>
   12a3c:	str	r3, [sp, #72]	; 0x48
   12a40:	mov	fp, #0
   12a44:	mov	sl, #2
   12a48:	mov	r6, #0
   12a4c:	ldr	r3, [sp, #48]	; 0x30
   12a50:	eor	r3, r3, #1
   12a54:	str	r3, [sp, #68]	; 0x44
   12a58:	b	13340 <__snprintf_chk@plt+0x1fd4>
   12a5c:	mov	r3, #0
   12a60:	str	r3, [sp, #32]
   12a64:	mov	fp, r3
   12a68:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12a6c:	ldr	r3, [sp, #32]
   12a70:	cmp	r3, #0
   12a74:	bne	12bc8 <__snprintf_chk@plt+0x185c>
   12a78:	cmp	r7, #0
   12a7c:	beq	12be8 <__snprintf_chk@plt+0x187c>
   12a80:	ldr	r3, [sp, #36]	; 0x24
   12a84:	mov	r2, #34	; 0x22
   12a88:	strb	r2, [r3]
   12a8c:	mov	r3, #1
   12a90:	str	r3, [sp, #48]	; 0x30
   12a94:	str	r3, [sp, #60]	; 0x3c
   12a98:	ldr	r3, [pc, #3980]	; 13a2c <__snprintf_chk@plt+0x26c0>
   12a9c:	str	r3, [sp, #72]	; 0x48
   12aa0:	mov	fp, #1
   12aa4:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12aa8:	cmp	sl, #10
   12aac:	beq	12ad0 <__snprintf_chk@plt+0x1764>
   12ab0:	mov	r1, sl
   12ab4:	ldr	r0, [pc, #3948]	; 13a28 <__snprintf_chk@plt+0x26bc>
   12ab8:	bl	12854 <__snprintf_chk@plt+0x14e8>
   12abc:	str	r0, [sp, #164]	; 0xa4
   12ac0:	mov	r1, sl
   12ac4:	ldr	r0, [pc, #3928]	; 13a24 <__snprintf_chk@plt+0x26b8>
   12ac8:	bl	12854 <__snprintf_chk@plt+0x14e8>
   12acc:	str	r0, [sp, #168]	; 0xa8
   12ad0:	ldr	r3, [sp, #32]
   12ad4:	cmp	r3, #0
   12ad8:	movne	fp, #0
   12adc:	bne	12b14 <__snprintf_chk@plt+0x17a8>
   12ae0:	ldr	r3, [sp, #164]	; 0xa4
   12ae4:	ldrb	r3, [r3]
   12ae8:	cmp	r3, #0
   12aec:	beq	12b34 <__snprintf_chk@plt+0x17c8>
   12af0:	ldr	r2, [sp, #164]	; 0xa4
   12af4:	mov	fp, #0
   12af8:	ldr	r1, [sp, #36]	; 0x24
   12afc:	cmp	r7, fp
   12b00:	strbhi	r3, [r1, fp]
   12b04:	add	fp, fp, #1
   12b08:	ldrb	r3, [r2, #1]!
   12b0c:	cmp	r3, #0
   12b10:	bne	12afc <__snprintf_chk@plt+0x1790>
   12b14:	ldr	r0, [sp, #168]	; 0xa8
   12b18:	bl	11228 <strlen@plt>
   12b1c:	str	r0, [sp, #60]	; 0x3c
   12b20:	ldr	r3, [sp, #168]	; 0xa8
   12b24:	str	r3, [sp, #72]	; 0x48
   12b28:	mov	r3, #1
   12b2c:	str	r3, [sp, #48]	; 0x30
   12b30:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12b34:	mov	fp, #0
   12b38:	b	12b14 <__snprintf_chk@plt+0x17a8>
   12b3c:	ldr	r3, [sp, #32]
   12b40:	cmp	r3, #0
   12b44:	bne	12c04 <__snprintf_chk@plt+0x1898>
   12b48:	mov	r3, #1
   12b4c:	str	r3, [sp, #48]	; 0x30
   12b50:	cmp	r7, #0
   12b54:	beq	12c20 <__snprintf_chk@plt+0x18b4>
   12b58:	ldr	r3, [sp, #36]	; 0x24
   12b5c:	mov	r2, #39	; 0x27
   12b60:	strb	r2, [r3]
   12b64:	mov	r3, #0
   12b68:	str	r3, [sp, #32]
   12b6c:	mov	r3, #1
   12b70:	str	r3, [sp, #60]	; 0x3c
   12b74:	ldr	r3, [pc, #3752]	; 13a24 <__snprintf_chk@plt+0x26b8>
   12b78:	str	r3, [sp, #72]	; 0x48
   12b7c:	mov	fp, #1
   12b80:	mov	sl, #2
   12b84:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12b88:	ldr	r3, [sp, #32]
   12b8c:	cmp	r3, #0
   12b90:	beq	12b50 <__snprintf_chk@plt+0x17e4>
   12b94:	mov	r3, #1
   12b98:	str	r3, [sp, #60]	; 0x3c
   12b9c:	ldr	r3, [pc, #3712]	; 13a24 <__snprintf_chk@plt+0x26b8>
   12ba0:	str	r3, [sp, #72]	; 0x48
   12ba4:	mov	fp, #0
   12ba8:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12bac:	bl	11360 <abort@plt>
   12bb0:	mov	r3, #0
   12bb4:	str	r3, [sp, #32]
   12bb8:	mov	r3, #1
   12bbc:	str	r3, [sp, #48]	; 0x30
   12bc0:	mov	fp, #0
   12bc4:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12bc8:	ldr	r3, [sp, #32]
   12bcc:	str	r3, [sp, #48]	; 0x30
   12bd0:	mov	r3, #1
   12bd4:	str	r3, [sp, #60]	; 0x3c
   12bd8:	ldr	r3, [pc, #3660]	; 13a2c <__snprintf_chk@plt+0x26c0>
   12bdc:	str	r3, [sp, #72]	; 0x48
   12be0:	mov	fp, #0
   12be4:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12be8:	mov	r3, #1
   12bec:	str	r3, [sp, #48]	; 0x30
   12bf0:	str	r3, [sp, #60]	; 0x3c
   12bf4:	ldr	r3, [pc, #3632]	; 13a2c <__snprintf_chk@plt+0x26c0>
   12bf8:	str	r3, [sp, #72]	; 0x48
   12bfc:	mov	fp, #1
   12c00:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12c04:	mov	r3, #1
   12c08:	str	r3, [sp, #60]	; 0x3c
   12c0c:	ldr	r3, [pc, #3600]	; 13a24 <__snprintf_chk@plt+0x26b8>
   12c10:	str	r3, [sp, #72]	; 0x48
   12c14:	mov	fp, #0
   12c18:	mov	sl, #2
   12c1c:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12c20:	mov	r3, #0
   12c24:	str	r3, [sp, #32]
   12c28:	mov	r3, #1
   12c2c:	str	r3, [sp, #60]	; 0x3c
   12c30:	ldr	r3, [pc, #3564]	; 13a24 <__snprintf_chk@plt+0x26b8>
   12c34:	str	r3, [sp, #72]	; 0x48
   12c38:	mov	fp, #1
   12c3c:	mov	sl, #2
   12c40:	b	12a48 <__snprintf_chk@plt+0x16dc>
   12c44:	mov	r3, #0
   12c48:	str	r3, [sp, #56]	; 0x38
   12c4c:	ldr	r3, [sp, #52]	; 0x34
   12c50:	add	r2, r3, r6
   12c54:	str	r2, [sp, #64]	; 0x40
   12c58:	ldrb	r4, [r3, r6]
   12c5c:	cmp	r4, #126	; 0x7e
   12c60:	ldrls	pc, [pc, r4, lsl #2]
   12c64:	b	134a0 <__snprintf_chk@plt+0x2134>
   12c68:	andeq	r2, r1, r0, lsl #29
   12c6c:	andeq	r3, r1, r0, lsr #9
   12c70:	andeq	r3, r1, r0, lsr #9
   12c74:	andeq	r3, r1, r0, lsr #9
   12c78:	andeq	r3, r1, r0, lsr #9
   12c7c:	andeq	r3, r1, r0, lsr #9
   12c80:	andeq	r3, r1, r0, lsr #9
   12c84:	ldrdeq	r3, [r1], -ip
   12c88:	andeq	r2, r1, r8, ror lr
   12c8c:	muleq	r1, r4, r1
   12c90:	andeq	r3, r1, ip, lsl #3
   12c94:	strdeq	r3, [r1], -ip
   12c98:	strdeq	r3, [r1], -r4
   12c9c:	andeq	r2, r1, r0, ror lr
   12ca0:	andeq	r3, r1, r0, lsr #9
   12ca4:	andeq	r3, r1, r0, lsr #9
   12ca8:	andeq	r3, r1, r0, lsr #9
   12cac:	andeq	r3, r1, r0, lsr #9
   12cb0:	andeq	r3, r1, r0, lsr #9
   12cb4:	andeq	r3, r1, r0, lsr #9
   12cb8:	andeq	r3, r1, r0, lsr #9
   12cbc:	andeq	r3, r1, r0, lsr #9
   12cc0:	andeq	r3, r1, r0, lsr #9
   12cc4:	andeq	r3, r1, r0, lsr #9
   12cc8:	andeq	r3, r1, r0, lsr #9
   12ccc:	andeq	r3, r1, r0, lsr #9
   12cd0:	andeq	r3, r1, r0, lsr #9
   12cd4:	andeq	r3, r1, r0, lsr #9
   12cd8:	andeq	r3, r1, r0, lsr #9
   12cdc:	andeq	r3, r1, r0, lsr #9
   12ce0:	andeq	r3, r1, r0, lsr #9
   12ce4:	andeq	r3, r1, r0, lsr #9
   12ce8:	andeq	r3, r1, r0, lsr r2
   12cec:	andeq	r3, r1, ip, lsr #4
   12cf0:	andeq	r3, r1, ip, lsr #4
   12cf4:	andeq	r3, r1, r4, lsl #4
   12cf8:	andeq	r3, r1, ip, lsr #4
   12cfc:	andeq	r3, r1, r4, ror r8
   12d00:	andeq	r3, r1, ip, lsr #4
   12d04:	andeq	r3, r1, r4, lsl #8
   12d08:	andeq	r3, r1, ip, lsr #4
   12d0c:	andeq	r3, r1, ip, lsr #4
   12d10:	andeq	r3, r1, ip, lsr #4
   12d14:	andeq	r3, r1, r4, ror r8
   12d18:	andeq	r3, r1, r4, ror r8
   12d1c:	andeq	r3, r1, r4, ror r8
   12d20:	andeq	r3, r1, r4, ror r8
   12d24:	andeq	r3, r1, r4, ror r8
   12d28:	andeq	r3, r1, r4, ror r8
   12d2c:	andeq	r3, r1, r4, ror r8
   12d30:	andeq	r3, r1, r4, ror r8
   12d34:	andeq	r3, r1, r4, ror r8
   12d38:	andeq	r3, r1, r4, ror r8
   12d3c:	andeq	r3, r1, r4, ror r8
   12d40:	andeq	r3, r1, r4, ror r8
   12d44:	andeq	r3, r1, r4, ror r8
   12d48:	andeq	r3, r1, r4, ror r8
   12d4c:	andeq	r3, r1, r4, ror r8
   12d50:	andeq	r3, r1, r4, ror r8
   12d54:	andeq	r3, r1, ip, lsr #4
   12d58:	andeq	r3, r1, ip, lsr #4
   12d5c:	andeq	r3, r1, ip, lsr #4
   12d60:	andeq	r3, r1, ip, lsr #4
   12d64:	andeq	r2, r1, r8, lsl #31
   12d68:	andeq	r3, r1, r0, lsr #9
   12d6c:	andeq	r3, r1, r4, ror r8
   12d70:	andeq	r3, r1, r4, ror r8
   12d74:	andeq	r3, r1, r4, ror r8
   12d78:	andeq	r3, r1, r4, ror r8
   12d7c:	andeq	r3, r1, r4, ror r8
   12d80:	andeq	r3, r1, r4, ror r8
   12d84:	andeq	r3, r1, r4, ror r8
   12d88:	andeq	r3, r1, r4, ror r8
   12d8c:	andeq	r3, r1, r4, ror r8
   12d90:	andeq	r3, r1, r4, ror r8
   12d94:	andeq	r3, r1, r4, ror r8
   12d98:	andeq	r3, r1, r4, ror r8
   12d9c:	andeq	r3, r1, r4, ror r8
   12da0:	andeq	r3, r1, r4, ror r8
   12da4:	andeq	r3, r1, r4, ror r8
   12da8:	andeq	r3, r1, r4, ror r8
   12dac:	andeq	r3, r1, r4, ror r8
   12db0:	andeq	r3, r1, r4, ror r8
   12db4:	andeq	r3, r1, r4, ror r8
   12db8:	andeq	r3, r1, r4, ror r8
   12dbc:	andeq	r3, r1, r4, ror r8
   12dc0:	andeq	r3, r1, r4, ror r8
   12dc4:	andeq	r3, r1, r4, ror r8
   12dc8:	andeq	r3, r1, r4, ror r8
   12dcc:	andeq	r3, r1, r4, ror r8
   12dd0:	andeq	r3, r1, r4, ror r8
   12dd4:	andeq	r3, r1, ip, lsr #4
   12dd8:	andeq	r3, r1, r4, lsl #2
   12ddc:	andeq	r3, r1, r4, ror r8
   12de0:	andeq	r3, r1, ip, lsr #4
   12de4:	andeq	r3, r1, r4, ror r8
   12de8:	andeq	r3, r1, ip, lsr #4
   12dec:	andeq	r3, r1, r4, ror r8
   12df0:	andeq	r3, r1, r4, ror r8
   12df4:	andeq	r3, r1, r4, ror r8
   12df8:	andeq	r3, r1, r4, ror r8
   12dfc:	andeq	r3, r1, r4, ror r8
   12e00:	andeq	r3, r1, r4, ror r8
   12e04:	andeq	r3, r1, r4, ror r8
   12e08:	andeq	r3, r1, r4, ror r8
   12e0c:	andeq	r3, r1, r4, ror r8
   12e10:	andeq	r3, r1, r4, ror r8
   12e14:	andeq	r3, r1, r4, ror r8
   12e18:	andeq	r3, r1, r4, ror r8
   12e1c:	andeq	r3, r1, r4, ror r8
   12e20:	andeq	r3, r1, r4, ror r8
   12e24:	andeq	r3, r1, r4, ror r8
   12e28:	andeq	r3, r1, r4, ror r8
   12e2c:	andeq	r3, r1, r4, ror r8
   12e30:	andeq	r3, r1, r4, ror r8
   12e34:	andeq	r3, r1, r4, ror r8
   12e38:	andeq	r3, r1, r4, ror r8
   12e3c:	andeq	r3, r1, r4, ror r8
   12e40:	andeq	r3, r1, r4, ror r8
   12e44:	andeq	r3, r1, r4, ror r8
   12e48:	andeq	r3, r1, r4, ror r8
   12e4c:	andeq	r3, r1, r4, ror r8
   12e50:	andeq	r3, r1, r4, ror r8
   12e54:	andeq	r3, r1, r4, ror #3
   12e58:	andeq	r3, r1, ip, lsr #4
   12e5c:	andeq	r3, r1, r4, ror #3
   12e60:	andeq	r3, r1, r4, lsl #4
   12e64:	mov	r3, #0
   12e68:	str	r3, [sp, #56]	; 0x38
   12e6c:	b	12c4c <__snprintf_chk@plt+0x18e0>
   12e70:	mov	r3, #114	; 0x72
   12e74:	b	13198 <__snprintf_chk@plt+0x1e2c>
   12e78:	mov	r3, #98	; 0x62
   12e7c:	b	131b0 <__snprintf_chk@plt+0x1e44>
   12e80:	ldr	r3, [sp, #48]	; 0x30
   12e84:	cmp	r3, #0
   12e88:	beq	12f70 <__snprintf_chk@plt+0x1c04>
   12e8c:	ldr	r3, [sp, #32]
   12e90:	cmp	r3, #0
   12e94:	bne	139f8 <__snprintf_chk@plt+0x268c>
   12e98:	ldr	r3, [sp, #44]	; 0x2c
   12e9c:	eor	r3, r3, #1
   12ea0:	cmp	sl, #2
   12ea4:	movne	r3, #0
   12ea8:	andeq	r3, r3, #1
   12eac:	cmp	r3, #0
   12eb0:	moveq	r2, fp
   12eb4:	beq	12ef8 <__snprintf_chk@plt+0x1b8c>
   12eb8:	cmp	r7, fp
   12ebc:	ldrhi	r2, [sp, #36]	; 0x24
   12ec0:	movhi	r1, #39	; 0x27
   12ec4:	strbhi	r1, [r2, fp]
   12ec8:	add	r2, fp, #1
   12ecc:	cmp	r7, r2
   12ed0:	ldrhi	r1, [sp, #36]	; 0x24
   12ed4:	movhi	r0, #36	; 0x24
   12ed8:	strbhi	r0, [r1, r2]
   12edc:	add	r2, fp, #2
   12ee0:	cmp	r7, r2
   12ee4:	ldrhi	r1, [sp, #36]	; 0x24
   12ee8:	movhi	r0, #39	; 0x27
   12eec:	strbhi	r0, [r1, r2]
   12ef0:	add	r2, fp, #3
   12ef4:	str	r3, [sp, #44]	; 0x2c
   12ef8:	cmp	r7, r2
   12efc:	ldrhi	r3, [sp, #36]	; 0x24
   12f00:	movhi	r1, #92	; 0x5c
   12f04:	strbhi	r1, [r3, r2]
   12f08:	add	fp, r2, #1
   12f0c:	cmp	r5, #0
   12f10:	beq	1387c <__snprintf_chk@plt+0x2510>
   12f14:	add	r3, r6, #1
   12f18:	ldr	r1, [sp, #28]
   12f1c:	cmp	r1, r3
   12f20:	bls	1388c <__snprintf_chk@plt+0x2520>
   12f24:	ldr	r1, [sp, #52]	; 0x34
   12f28:	ldrb	r3, [r1, r3]
   12f2c:	sub	r3, r3, #48	; 0x30
   12f30:	uxtb	r3, r3
   12f34:	cmp	r3, #9
   12f38:	bhi	13898 <__snprintf_chk@plt+0x252c>
   12f3c:	cmp	r7, fp
   12f40:	movhi	r3, #48	; 0x30
   12f44:	ldrhi	r1, [sp, #36]	; 0x24
   12f48:	strbhi	r3, [r1, fp]
   12f4c:	add	r3, r2, #2
   12f50:	cmp	r7, r3
   12f54:	movhi	r1, #48	; 0x30
   12f58:	ldrhi	r0, [sp, #36]	; 0x24
   12f5c:	strbhi	r1, [r0, r3]
   12f60:	add	fp, r2, #3
   12f64:	ldr	r8, [sp, #32]
   12f68:	mov	r4, #48	; 0x30
   12f6c:	b	13248 <__snprintf_chk@plt+0x1edc>
   12f70:	ldr	r3, [sp, #156]	; 0x9c
   12f74:	tst	r3, #1
   12f78:	bne	1333c <__snprintf_chk@plt+0x1fd0>
   12f7c:	ldr	r5, [sp, #48]	; 0x30
   12f80:	mov	r8, r5
   12f84:	b	13248 <__snprintf_chk@plt+0x1edc>
   12f88:	cmp	sl, #2
   12f8c:	beq	12fa4 <__snprintf_chk@plt+0x1c38>
   12f90:	cmp	sl, #5
   12f94:	beq	12fbc <__snprintf_chk@plt+0x1c50>
   12f98:	mov	r8, #0
   12f9c:	mov	r5, r8
   12fa0:	b	13248 <__snprintf_chk@plt+0x1edc>
   12fa4:	ldr	r3, [sp, #32]
   12fa8:	cmp	r3, #0
   12fac:	bne	13a0c <__snprintf_chk@plt+0x26a0>
   12fb0:	mov	r8, r3
   12fb4:	mov	r5, r3
   12fb8:	b	13248 <__snprintf_chk@plt+0x1edc>
   12fbc:	ldr	r3, [sp, #156]	; 0x9c
   12fc0:	tst	r3, #4
   12fc4:	beq	138a4 <__snprintf_chk@plt+0x2538>
   12fc8:	add	r3, r6, #2
   12fcc:	ldr	r2, [sp, #28]
   12fd0:	cmp	r2, r3
   12fd4:	bls	138b0 <__snprintf_chk@plt+0x2544>
   12fd8:	ldr	r2, [sp, #52]	; 0x34
   12fdc:	add	r2, r2, r6
   12fe0:	ldrb	r2, [r2, #1]
   12fe4:	cmp	r2, #63	; 0x3f
   12fe8:	movne	r8, #0
   12fec:	movne	r5, r8
   12ff0:	bne	13248 <__snprintf_chk@plt+0x1edc>
   12ff4:	ldr	r2, [sp, #52]	; 0x34
   12ff8:	ldrb	r2, [r2, r3]
   12ffc:	sub	r1, r2, #33	; 0x21
   13000:	cmp	r1, #29
   13004:	ldrls	pc, [pc, r1, lsl #2]
   13008:	b	138bc <__snprintf_chk@plt+0x2550>
   1300c:	andeq	r3, r1, r4, lsl #1
   13010:			; <UNDEFINED> instruction: 0x000138bc
   13014:			; <UNDEFINED> instruction: 0x000138bc
   13018:			; <UNDEFINED> instruction: 0x000138bc
   1301c:			; <UNDEFINED> instruction: 0x000138bc
   13020:			; <UNDEFINED> instruction: 0x000138bc
   13024:	andeq	r3, r1, r4, lsl #1
   13028:	andeq	r3, r1, r4, lsl #1
   1302c:	andeq	r3, r1, r4, lsl #1
   13030:			; <UNDEFINED> instruction: 0x000138bc
   13034:			; <UNDEFINED> instruction: 0x000138bc
   13038:			; <UNDEFINED> instruction: 0x000138bc
   1303c:	andeq	r3, r1, r4, lsl #1
   13040:			; <UNDEFINED> instruction: 0x000138bc
   13044:	andeq	r3, r1, r4, lsl #1
   13048:			; <UNDEFINED> instruction: 0x000138bc
   1304c:			; <UNDEFINED> instruction: 0x000138bc
   13050:			; <UNDEFINED> instruction: 0x000138bc
   13054:			; <UNDEFINED> instruction: 0x000138bc
   13058:			; <UNDEFINED> instruction: 0x000138bc
   1305c:			; <UNDEFINED> instruction: 0x000138bc
   13060:			; <UNDEFINED> instruction: 0x000138bc
   13064:			; <UNDEFINED> instruction: 0x000138bc
   13068:			; <UNDEFINED> instruction: 0x000138bc
   1306c:			; <UNDEFINED> instruction: 0x000138bc
   13070:			; <UNDEFINED> instruction: 0x000138bc
   13074:			; <UNDEFINED> instruction: 0x000138bc
   13078:	andeq	r3, r1, r4, lsl #1
   1307c:	andeq	r3, r1, r4, lsl #1
   13080:	andeq	r3, r1, r4, lsl #1
   13084:	ldr	r1, [sp, #32]
   13088:	cmp	r1, #0
   1308c:	bne	13acc <__snprintf_chk@plt+0x2760>
   13090:	cmp	r7, fp
   13094:	movhi	r1, #63	; 0x3f
   13098:	ldrhi	r0, [sp, #36]	; 0x24
   1309c:	strbhi	r1, [r0, fp]
   130a0:	add	r1, fp, #1
   130a4:	cmp	r7, r1
   130a8:	ldrhi	r0, [sp, #36]	; 0x24
   130ac:	movhi	ip, #34	; 0x22
   130b0:	strbhi	ip, [r0, r1]
   130b4:	add	r1, fp, #2
   130b8:	cmp	r7, r1
   130bc:	ldrhi	r0, [sp, #36]	; 0x24
   130c0:	movhi	ip, #34	; 0x22
   130c4:	strbhi	ip, [r0, r1]
   130c8:	add	r1, fp, #3
   130cc:	cmp	r7, r1
   130d0:	movhi	r0, #63	; 0x3f
   130d4:	ldrhi	ip, [sp, #36]	; 0x24
   130d8:	strbhi	r0, [ip, r1]
   130dc:	add	fp, fp, #4
   130e0:	ldr	r5, [sp, #32]
   130e4:	mov	r8, r5
   130e8:	mov	r4, r2
   130ec:	mov	r6, r3
   130f0:	b	13248 <__snprintf_chk@plt+0x1edc>
   130f4:	mov	r3, #102	; 0x66
   130f8:	b	131b0 <__snprintf_chk@plt+0x1e44>
   130fc:	mov	r3, #118	; 0x76
   13100:	b	131b0 <__snprintf_chk@plt+0x1e44>
   13104:	cmp	sl, #2
   13108:	beq	13174 <__snprintf_chk@plt+0x1e08>
   1310c:	ldr	r3, [sp, #48]	; 0x30
   13110:	ldr	r2, [sp, #32]
   13114:	and	r3, r3, r2
   13118:	tst	r9, r3
   1311c:	moveq	r3, r4
   13120:	beq	131b0 <__snprintf_chk@plt+0x1e44>
   13124:	mov	r8, #0
   13128:	mov	r5, r8
   1312c:	eor	r5, r5, #1
   13130:	ldr	r3, [sp, #44]	; 0x2c
   13134:	and	r5, r5, r3
   13138:	tst	r5, #255	; 0xff
   1313c:	beq	1331c <__snprintf_chk@plt+0x1fb0>
   13140:	cmp	r7, fp
   13144:	ldrhi	r3, [sp, #36]	; 0x24
   13148:	movhi	r2, #39	; 0x27
   1314c:	strbhi	r2, [r3, fp]
   13150:	add	r3, fp, #1
   13154:	cmp	r7, r3
   13158:	ldrhi	r2, [sp, #36]	; 0x24
   1315c:	movhi	r1, #39	; 0x27
   13160:	strbhi	r1, [r2, r3]
   13164:	add	fp, fp, #2
   13168:	mov	r3, #0
   1316c:	str	r3, [sp, #44]	; 0x2c
   13170:	b	1331c <__snprintf_chk@plt+0x1fb0>
   13174:	ldr	r3, [sp, #32]
   13178:	cmp	r3, #0
   1317c:	bne	13a18 <__snprintf_chk@plt+0x26ac>
   13180:	mov	r8, r3
   13184:	mov	r5, r3
   13188:	b	1312c <__snprintf_chk@plt+0x1dc0>
   1318c:	mov	r3, #110	; 0x6e
   13190:	b	13198 <__snprintf_chk@plt+0x1e2c>
   13194:	mov	r3, #116	; 0x74
   13198:	ldr	r2, [sp, #32]
   1319c:	cmp	sl, #2
   131a0:	movne	r2, #0
   131a4:	andeq	r2, r2, #1
   131a8:	cmp	r2, #0
   131ac:	bne	131d0 <__snprintf_chk@plt+0x1e64>
   131b0:	ldr	r2, [sp, #48]	; 0x30
   131b4:	cmp	r2, #0
   131b8:	moveq	r8, r2
   131bc:	moveq	r5, r2
   131c0:	beq	13248 <__snprintf_chk@plt+0x1edc>
   131c4:	mov	r4, r3
   131c8:	mov	r8, #0
   131cc:	b	132a0 <__snprintf_chk@plt+0x1f34>
   131d0:	mov	r8, sl
   131d4:	mov	sl, r7
   131d8:	b	13a44 <__snprintf_chk@plt+0x26d8>
   131dc:	mov	r3, #97	; 0x61
   131e0:	b	131b0 <__snprintf_chk@plt+0x1e44>
   131e4:	ldr	r3, [sp, #28]
   131e8:	cmn	r3, #1
   131ec:	beq	13218 <__snprintf_chk@plt+0x1eac>
   131f0:	ldr	r3, [sp, #28]
   131f4:	subs	r3, r3, #1
   131f8:	movne	r3, #1
   131fc:	cmp	r3, #0
   13200:	bne	138c8 <__snprintf_chk@plt+0x255c>
   13204:	cmp	r6, #0
   13208:	beq	13230 <__snprintf_chk@plt+0x1ec4>
   1320c:	mov	r8, #0
   13210:	mov	r5, r8
   13214:	b	13248 <__snprintf_chk@plt+0x1edc>
   13218:	ldr	r3, [sp, #52]	; 0x34
   1321c:	ldrb	r3, [r3, #1]
   13220:	adds	r3, r3, #0
   13224:	movne	r3, #1
   13228:	b	131fc <__snprintf_chk@plt+0x1e90>
   1322c:	mov	r8, #0
   13230:	ldr	r5, [sp, #32]
   13234:	cmp	sl, #2
   13238:	movne	r5, #0
   1323c:	andeq	r5, r5, #1
   13240:	cmp	r5, #0
   13244:	bne	133f8 <__snprintf_chk@plt+0x208c>
   13248:	ldr	r3, [sp, #68]	; 0x44
   1324c:	cmp	sl, #2
   13250:	orreq	r3, r3, #1
   13254:	eor	r3, r3, #1
   13258:	ldr	r2, [sp, #32]
   1325c:	orr	r3, r2, r3
   13260:	tst	r3, #255	; 0xff
   13264:	beq	13294 <__snprintf_chk@plt+0x1f28>
   13268:	ldr	r3, [sp, #160]	; 0xa0
   1326c:	cmp	r3, #0
   13270:	beq	13294 <__snprintf_chk@plt+0x1f28>
   13274:	lsr	r2, r4, #5
   13278:	uxtb	r2, r2
   1327c:	and	r3, r4, #31
   13280:	ldr	r1, [sp, #160]	; 0xa0
   13284:	ldr	r2, [r1, r2, lsl #2]
   13288:	lsr	r3, r2, r3
   1328c:	tst	r3, #1
   13290:	bne	132a0 <__snprintf_chk@plt+0x1f34>
   13294:	ldr	r3, [sp, #56]	; 0x38
   13298:	cmp	r3, #0
   1329c:	beq	1312c <__snprintf_chk@plt+0x1dc0>
   132a0:	ldr	r3, [sp, #32]
   132a4:	cmp	r3, #0
   132a8:	bne	13ab4 <__snprintf_chk@plt+0x2748>
   132ac:	ldr	r3, [sp, #44]	; 0x2c
   132b0:	eor	r3, r3, #1
   132b4:	cmp	sl, #2
   132b8:	movne	r3, #0
   132bc:	andeq	r3, r3, #1
   132c0:	cmp	r3, #0
   132c4:	beq	13308 <__snprintf_chk@plt+0x1f9c>
   132c8:	cmp	r7, fp
   132cc:	ldrhi	r2, [sp, #36]	; 0x24
   132d0:	movhi	r1, #39	; 0x27
   132d4:	strbhi	r1, [r2, fp]
   132d8:	add	r2, fp, #1
   132dc:	cmp	r7, r2
   132e0:	ldrhi	r1, [sp, #36]	; 0x24
   132e4:	movhi	r0, #36	; 0x24
   132e8:	strbhi	r0, [r1, r2]
   132ec:	add	r2, fp, #2
   132f0:	cmp	r7, r2
   132f4:	ldrhi	r1, [sp, #36]	; 0x24
   132f8:	movhi	r0, #39	; 0x27
   132fc:	strbhi	r0, [r1, r2]
   13300:	add	fp, fp, #3
   13304:	str	r3, [sp, #44]	; 0x2c
   13308:	cmp	r7, fp
   1330c:	ldrhi	r3, [sp, #36]	; 0x24
   13310:	movhi	r2, #92	; 0x5c
   13314:	strbhi	r2, [r3, fp]
   13318:	add	fp, fp, #1
   1331c:	cmp	fp, r7
   13320:	ldrcc	r3, [sp, #36]	; 0x24
   13324:	strbcc	r4, [r3, fp]
   13328:	add	fp, fp, #1
   1332c:	ldr	r3, [sp, #40]	; 0x28
   13330:	cmp	r8, #0
   13334:	moveq	r3, #0
   13338:	str	r3, [sp, #40]	; 0x28
   1333c:	add	r6, r6, #1
   13340:	ldr	r3, [sp, #28]
   13344:	cmn	r3, #1
   13348:	beq	138d4 <__snprintf_chk@plt+0x2568>
   1334c:	ldr	r3, [sp, #28]
   13350:	subs	r8, r3, r6
   13354:	movne	r8, #1
   13358:	cmp	r8, #0
   1335c:	beq	138e8 <__snprintf_chk@plt+0x257c>
   13360:	ldr	r5, [sp, #48]	; 0x30
   13364:	cmp	sl, #2
   13368:	moveq	r5, #0
   1336c:	andne	r5, r5, #1
   13370:	ldr	r3, [sp, #60]	; 0x3c
   13374:	adds	r9, r3, #0
   13378:	movne	r9, #1
   1337c:	ands	r2, r5, r9
   13380:	str	r2, [sp, #56]	; 0x38
   13384:	beq	12c4c <__snprintf_chk@plt+0x18e0>
   13388:	add	r4, r6, r3
   1338c:	ldr	r2, [sp, #28]
   13390:	cmp	r3, #1
   13394:	movls	r3, #0
   13398:	movhi	r3, #1
   1339c:	cmn	r2, #1
   133a0:	movne	r3, #0
   133a4:	cmp	r3, #0
   133a8:	beq	133b8 <__snprintf_chk@plt+0x204c>
   133ac:	ldr	r0, [sp, #52]	; 0x34
   133b0:	bl	11228 <strlen@plt>
   133b4:	str	r0, [sp, #28]
   133b8:	ldr	r3, [sp, #28]
   133bc:	cmp	r3, r4
   133c0:	bcc	12c44 <__snprintf_chk@plt+0x18d8>
   133c4:	ldr	r2, [sp, #60]	; 0x3c
   133c8:	ldr	r1, [sp, #72]	; 0x48
   133cc:	ldr	r3, [sp, #52]	; 0x34
   133d0:	add	r0, r3, r6
   133d4:	bl	110d8 <memcmp@plt>
   133d8:	cmp	r0, #0
   133dc:	bne	12e64 <__snprintf_chk@plt+0x1af8>
   133e0:	ldr	r3, [sp, #32]
   133e4:	cmp	r3, #0
   133e8:	beq	12c4c <__snprintf_chk@plt+0x18e0>
   133ec:	mov	r8, sl
   133f0:	mov	sl, r7
   133f4:	b	13a44 <__snprintf_chk@plt+0x26d8>
   133f8:	mov	r8, sl
   133fc:	mov	sl, r7
   13400:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13404:	cmp	sl, #2
   13408:	strne	r8, [sp, #80]	; 0x50
   1340c:	movne	r5, #0
   13410:	bne	13248 <__snprintf_chk@plt+0x1edc>
   13414:	ldr	r3, [sp, #32]
   13418:	cmp	r3, #0
   1341c:	bne	13a30 <__snprintf_chk@plt+0x26c4>
   13420:	ldr	r2, [sp, #76]	; 0x4c
   13424:	adds	r3, r7, #0
   13428:	movne	r3, #1
   1342c:	cmp	r2, #0
   13430:	movne	r3, #0
   13434:	cmp	r3, #0
   13438:	movne	r3, #0
   1343c:	bne	1346c <__snprintf_chk@plt+0x2100>
   13440:	cmp	r7, fp
   13444:	ldrhi	r3, [sp, #36]	; 0x24
   13448:	movhi	r2, #39	; 0x27
   1344c:	strbhi	r2, [r3, fp]
   13450:	add	r3, fp, #1
   13454:	cmp	r7, r3
   13458:	ldrhi	r2, [sp, #36]	; 0x24
   1345c:	movhi	r1, #92	; 0x5c
   13460:	strbhi	r1, [r2, r3]
   13464:	mov	r3, r7
   13468:	ldr	r7, [sp, #76]	; 0x4c
   1346c:	add	r2, fp, #2
   13470:	cmp	r2, r3
   13474:	ldrcc	r1, [sp, #36]	; 0x24
   13478:	movcc	r0, #39	; 0x27
   1347c:	strbcc	r0, [r1, r2]
   13480:	add	fp, fp, #3
   13484:	ldr	r2, [sp, #32]
   13488:	mov	r5, r2
   1348c:	str	r8, [sp, #80]	; 0x50
   13490:	str	r2, [sp, #44]	; 0x2c
   13494:	str	r7, [sp, #76]	; 0x4c
   13498:	mov	r7, r3
   1349c:	b	13248 <__snprintf_chk@plt+0x1edc>
   134a0:	ldr	r5, [sp, #84]	; 0x54
   134a4:	cmp	r5, #1
   134a8:	beq	134d8 <__snprintf_chk@plt+0x216c>
   134ac:	mov	r3, #0
   134b0:	str	r3, [sp, #104]	; 0x68
   134b4:	str	r3, [sp, #108]	; 0x6c
   134b8:	ldr	r3, [sp, #28]
   134bc:	cmn	r3, #1
   134c0:	beq	1350c <__snprintf_chk@plt+0x21a0>
   134c4:	mov	r3, #0
   134c8:	str	r4, [sp, #88]	; 0x58
   134cc:	str	fp, [sp, #92]	; 0x5c
   134d0:	mov	fp, r3
   134d4:	b	13634 <__snprintf_chk@plt+0x22c8>
   134d8:	bl	11210 <__ctype_b_loc@plt>
   134dc:	ldr	r2, [r0]
   134e0:	lsl	r3, r4, #1
   134e4:	ldrh	r8, [r2, r3]
   134e8:	lsr	r8, r8, #14
   134ec:	and	r8, r8, #1
   134f0:	mov	r2, r5
   134f4:	eor	r5, r8, #1
   134f8:	ldr	r3, [sp, #48]	; 0x30
   134fc:	and	r5, r5, r3
   13500:	ands	r5, r5, #255	; 0xff
   13504:	beq	13248 <__snprintf_chk@plt+0x1edc>
   13508:	b	136cc <__snprintf_chk@plt+0x2360>
   1350c:	ldr	r0, [sp, #52]	; 0x34
   13510:	bl	11228 <strlen@plt>
   13514:	str	r0, [sp, #28]
   13518:	b	134c4 <__snprintf_chk@plt+0x2158>
   1351c:	mov	r2, fp
   13520:	mov	r1, r4
   13524:	ldr	r4, [sp, #88]	; 0x58
   13528:	ldr	fp, [sp, #92]	; 0x5c
   1352c:	ldr	r0, [sp, #28]
   13530:	cmp	r0, r5
   13534:	bls	13700 <__snprintf_chk@plt+0x2394>
   13538:	ldrb	r3, [r1]
   1353c:	cmp	r3, #0
   13540:	beq	13708 <__snprintf_chk@plt+0x239c>
   13544:	mov	r3, r1
   13548:	add	r2, r2, #1
   1354c:	add	r1, r6, r2
   13550:	cmp	r0, r1
   13554:	bls	13710 <__snprintf_chk@plt+0x23a4>
   13558:	ldrb	r1, [r3, #1]!
   1355c:	cmp	r1, #0
   13560:	bne	13548 <__snprintf_chk@plt+0x21dc>
   13564:	mov	r8, #0
   13568:	b	136c4 <__snprintf_chk@plt+0x2358>
   1356c:	cmp	r4, r5
   13570:	beq	13610 <__snprintf_chk@plt+0x22a4>
   13574:	ldrb	r3, [r4, #1]!
   13578:	sub	r3, r3, #91	; 0x5b
   1357c:	cmp	r3, #33	; 0x21
   13580:	ldrls	pc, [pc, r3, lsl #2]
   13584:	b	1356c <__snprintf_chk@plt+0x2200>
   13588:	andeq	r3, r1, ip, lsr sl
   1358c:	andeq	r3, r1, ip, lsr sl
   13590:	andeq	r3, r1, ip, ror #10
   13594:	andeq	r3, r1, ip, lsr sl
   13598:	andeq	r3, r1, ip, ror #10
   1359c:	andeq	r3, r1, ip, lsr sl
   135a0:	andeq	r3, r1, ip, ror #10
   135a4:	andeq	r3, r1, ip, ror #10
   135a8:	andeq	r3, r1, ip, ror #10
   135ac:	andeq	r3, r1, ip, ror #10
   135b0:	andeq	r3, r1, ip, ror #10
   135b4:	andeq	r3, r1, ip, ror #10
   135b8:	andeq	r3, r1, ip, ror #10
   135bc:	andeq	r3, r1, ip, ror #10
   135c0:	andeq	r3, r1, ip, ror #10
   135c4:	andeq	r3, r1, ip, ror #10
   135c8:	andeq	r3, r1, ip, ror #10
   135cc:	andeq	r3, r1, ip, ror #10
   135d0:	andeq	r3, r1, ip, ror #10
   135d4:	andeq	r3, r1, ip, ror #10
   135d8:	andeq	r3, r1, ip, ror #10
   135dc:	andeq	r3, r1, ip, ror #10
   135e0:	andeq	r3, r1, ip, ror #10
   135e4:	andeq	r3, r1, ip, ror #10
   135e8:	andeq	r3, r1, ip, ror #10
   135ec:	andeq	r3, r1, ip, ror #10
   135f0:	andeq	r3, r1, ip, ror #10
   135f4:	andeq	r3, r1, ip, ror #10
   135f8:	andeq	r3, r1, ip, ror #10
   135fc:	andeq	r3, r1, ip, ror #10
   13600:	andeq	r3, r1, ip, ror #10
   13604:	andeq	r3, r1, ip, ror #10
   13608:	andeq	r3, r1, ip, ror #10
   1360c:	andeq	r3, r1, ip, lsr sl
   13610:	ldr	r0, [sp, #100]	; 0x64
   13614:	bl	1112c <iswprint@plt>
   13618:	cmp	r0, #0
   1361c:	moveq	r8, #0
   13620:	add	fp, fp, r9
   13624:	add	r0, sp, #104	; 0x68
   13628:	bl	110c0 <mbsinit@plt>
   1362c:	cmp	r0, #0
   13630:	bne	136a4 <__snprintf_chk@plt+0x2338>
   13634:	add	r5, r6, fp
   13638:	ldr	r3, [sp, #52]	; 0x34
   1363c:	add	r4, r3, r5
   13640:	add	r3, sp, #104	; 0x68
   13644:	ldr	r2, [sp, #28]
   13648:	sub	r2, r2, r5
   1364c:	mov	r1, r4
   13650:	add	r0, sp, #100	; 0x64
   13654:	bl	15534 <__snprintf_chk@plt+0x41c8>
   13658:	subs	r9, r0, #0
   1365c:	beq	13718 <__snprintf_chk@plt+0x23ac>
   13660:	cmn	r9, #1
   13664:	beq	136b4 <__snprintf_chk@plt+0x2348>
   13668:	cmn	r9, #2
   1366c:	beq	1351c <__snprintf_chk@plt+0x21b0>
   13670:	ldr	r3, [sp, #32]
   13674:	cmp	sl, #2
   13678:	movne	r3, #0
   1367c:	andeq	r3, r3, #1
   13680:	cmp	r3, #0
   13684:	beq	13610 <__snprintf_chk@plt+0x22a4>
   13688:	cmp	r9, #1
   1368c:	bls	13610 <__snprintf_chk@plt+0x22a4>
   13690:	sub	r3, r9, #1
   13694:	add	r5, r3, r5
   13698:	ldr	r3, [sp, #52]	; 0x34
   1369c:	add	r5, r3, r5
   136a0:	b	13574 <__snprintf_chk@plt+0x2208>
   136a4:	ldr	r4, [sp, #88]	; 0x58
   136a8:	mov	r2, fp
   136ac:	ldr	fp, [sp, #92]	; 0x5c
   136b0:	b	136c4 <__snprintf_chk@plt+0x2358>
   136b4:	ldr	r4, [sp, #88]	; 0x58
   136b8:	mov	r2, fp
   136bc:	ldr	fp, [sp, #92]	; 0x5c
   136c0:	mov	r8, #0
   136c4:	cmp	r2, #1
   136c8:	bls	134f4 <__snprintf_chk@plt+0x2188>
   136cc:	add	r1, r6, r2
   136d0:	ldr	ip, [sp, #64]	; 0x40
   136d4:	mov	r5, #0
   136d8:	eor	r3, r8, #1
   136dc:	ldr	r2, [sp, #48]	; 0x30
   136e0:	and	r3, r3, r2
   136e4:	uxtb	r3, r3
   136e8:	ldr	r9, [sp, #32]
   136ec:	ldr	lr, [sp, #44]	; 0x2c
   136f0:	ldr	r2, [sp, #56]	; 0x38
   136f4:	str	r8, [sp, #56]	; 0x38
   136f8:	ldr	r0, [sp, #36]	; 0x24
   136fc:	b	13798 <__snprintf_chk@plt+0x242c>
   13700:	mov	r8, #0
   13704:	b	136c4 <__snprintf_chk@plt+0x2358>
   13708:	mov	r8, #0
   1370c:	b	136c4 <__snprintf_chk@plt+0x2358>
   13710:	mov	r8, #0
   13714:	b	136c4 <__snprintf_chk@plt+0x2358>
   13718:	ldr	r4, [sp, #88]	; 0x58
   1371c:	mov	r2, fp
   13720:	ldr	fp, [sp, #92]	; 0x5c
   13724:	b	136c4 <__snprintf_chk@plt+0x2358>
   13728:	cmp	r2, #0
   1372c:	beq	13740 <__snprintf_chk@plt+0x23d4>
   13730:	cmp	r7, fp
   13734:	movhi	r2, #92	; 0x5c
   13738:	strbhi	r2, [r0, fp]
   1373c:	add	fp, fp, #1
   13740:	add	r8, r6, #1
   13744:	cmp	r1, r8
   13748:	bls	13850 <__snprintf_chk@plt+0x24e4>
   1374c:	eor	r2, r5, #1
   13750:	and	r2, r2, lr
   13754:	ands	r2, r2, #255	; 0xff
   13758:	beq	1386c <__snprintf_chk@plt+0x2500>
   1375c:	cmp	r7, fp
   13760:	movhi	r2, #39	; 0x27
   13764:	strbhi	r2, [r0, fp]
   13768:	add	r2, fp, #1
   1376c:	cmp	r7, r2
   13770:	movhi	lr, #39	; 0x27
   13774:	strbhi	lr, [r0, r2]
   13778:	add	fp, fp, #2
   1377c:	mov	r6, r8
   13780:	mov	r2, r3
   13784:	mov	lr, r3
   13788:	cmp	r7, fp
   1378c:	strbhi	r4, [r0, fp]
   13790:	add	fp, fp, #1
   13794:	ldrb	r4, [ip, #1]!
   13798:	cmp	r3, #0
   1379c:	beq	13728 <__snprintf_chk@plt+0x23bc>
   137a0:	cmp	r9, #0
   137a4:	bne	13aa8 <__snprintf_chk@plt+0x273c>
   137a8:	eor	r5, lr, #1
   137ac:	cmp	sl, #2
   137b0:	movne	r5, #0
   137b4:	andeq	r5, r5, #1
   137b8:	cmp	r5, #0
   137bc:	beq	137f4 <__snprintf_chk@plt+0x2488>
   137c0:	cmp	r7, fp
   137c4:	movhi	lr, #39	; 0x27
   137c8:	strbhi	lr, [r0, fp]
   137cc:	add	lr, fp, #1
   137d0:	cmp	r7, lr
   137d4:	movhi	r8, #36	; 0x24
   137d8:	strbhi	r8, [r0, lr]
   137dc:	add	lr, fp, #2
   137e0:	cmp	r7, lr
   137e4:	movhi	r8, #39	; 0x27
   137e8:	strbhi	r8, [r0, lr]
   137ec:	add	fp, fp, #3
   137f0:	mov	lr, r5
   137f4:	cmp	r7, fp
   137f8:	movhi	r5, #92	; 0x5c
   137fc:	strbhi	r5, [r0, fp]
   13800:	add	r5, fp, #1
   13804:	cmp	r7, r5
   13808:	lsrhi	r8, r4, #6
   1380c:	addhi	r8, r8, #48	; 0x30
   13810:	strbhi	r8, [r0, r5]
   13814:	add	r8, fp, #2
   13818:	cmp	r7, r8
   1381c:	lsrhi	r5, r4, #3
   13820:	andhi	r5, r5, #7
   13824:	addhi	r5, r5, #48	; 0x30
   13828:	strbhi	r5, [r0, r8]
   1382c:	add	fp, fp, #3
   13830:	and	r4, r4, #7
   13834:	add	r4, r4, #48	; 0x30
   13838:	add	r5, r6, #1
   1383c:	cmp	r1, r5
   13840:	bls	1385c <__snprintf_chk@plt+0x24f0>
   13844:	mov	r6, r5
   13848:	mov	r5, r3
   1384c:	b	13788 <__snprintf_chk@plt+0x241c>
   13850:	str	lr, [sp, #44]	; 0x2c
   13854:	ldr	r8, [sp, #56]	; 0x38
   13858:	b	1312c <__snprintf_chk@plt+0x1dc0>
   1385c:	str	lr, [sp, #44]	; 0x2c
   13860:	ldr	r8, [sp, #56]	; 0x38
   13864:	mov	r5, r3
   13868:	b	1312c <__snprintf_chk@plt+0x1dc0>
   1386c:	mov	r6, r8
   13870:	b	13788 <__snprintf_chk@plt+0x241c>
   13874:	mov	r5, #0
   13878:	b	13248 <__snprintf_chk@plt+0x1edc>
   1387c:	mov	r8, r5
   13880:	ldr	r5, [sp, #48]	; 0x30
   13884:	mov	r4, #48	; 0x30
   13888:	b	13248 <__snprintf_chk@plt+0x1edc>
   1388c:	ldr	r8, [sp, #32]
   13890:	mov	r4, #48	; 0x30
   13894:	b	13248 <__snprintf_chk@plt+0x1edc>
   13898:	ldr	r8, [sp, #32]
   1389c:	mov	r4, #48	; 0x30
   138a0:	b	13248 <__snprintf_chk@plt+0x1edc>
   138a4:	mov	r8, #0
   138a8:	mov	r5, r8
   138ac:	b	13248 <__snprintf_chk@plt+0x1edc>
   138b0:	mov	r8, #0
   138b4:	mov	r5, r8
   138b8:	b	13248 <__snprintf_chk@plt+0x1edc>
   138bc:	mov	r8, #0
   138c0:	mov	r5, r8
   138c4:	b	13248 <__snprintf_chk@plt+0x1edc>
   138c8:	mov	r8, #0
   138cc:	mov	r5, r8
   138d0:	b	13248 <__snprintf_chk@plt+0x1edc>
   138d4:	ldr	r3, [sp, #52]	; 0x34
   138d8:	ldrb	r8, [r3, r6]
   138dc:	adds	r8, r8, #0
   138e0:	movne	r8, #1
   138e4:	b	13358 <__snprintf_chk@plt+0x1fec>
   138e8:	cmp	sl, #2
   138ec:	movne	r3, #0
   138f0:	moveq	r3, #1
   138f4:	ldr	r1, [sp, #32]
   138f8:	mov	r2, r1
   138fc:	and	r2, r2, r3
   13900:	cmp	fp, #0
   13904:	movne	r2, #0
   13908:	andeq	r2, r2, #1
   1390c:	cmp	r2, #0
   13910:	bne	13ac0 <__snprintf_chk@plt+0x2754>
   13914:	eor	r2, r1, #1
   13918:	and	r3, r3, r2
   1391c:	ldr	r1, [sp, #80]	; 0x50
   13920:	tst	r1, r3
   13924:	beq	1399c <__snprintf_chk@plt+0x2630>
   13928:	ldr	r3, [sp, #40]	; 0x28
   1392c:	cmp	r3, #0
   13930:	bne	13958 <__snprintf_chk@plt+0x25ec>
   13934:	ldr	r1, [sp, #76]	; 0x4c
   13938:	clz	r3, r7
   1393c:	lsr	r3, r3, #5
   13940:	cmp	r1, #0
   13944:	moveq	r3, #0
   13948:	cmp	r3, #0
   1394c:	beq	1399c <__snprintf_chk@plt+0x2630>
   13950:	ldr	r7, [sp, #76]	; 0x4c
   13954:	b	129ec <__snprintf_chk@plt+0x1680>
   13958:	ldr	r3, [sp, #168]	; 0xa8
   1395c:	str	r3, [sp, #16]
   13960:	ldr	r3, [sp, #164]	; 0xa4
   13964:	str	r3, [sp, #12]
   13968:	ldr	r3, [sp, #160]	; 0xa0
   1396c:	str	r3, [sp, #8]
   13970:	ldr	r3, [sp, #156]	; 0x9c
   13974:	str	r3, [sp, #4]
   13978:	mov	r3, #5
   1397c:	str	r3, [sp]
   13980:	ldr	r3, [sp, #28]
   13984:	ldr	r2, [sp, #52]	; 0x34
   13988:	ldr	r1, [sp, #76]	; 0x4c
   1398c:	ldr	r0, [sp, #36]	; 0x24
   13990:	bl	1298c <__snprintf_chk@plt+0x1620>
   13994:	mov	fp, r0
   13998:	b	13a9c <__snprintf_chk@plt+0x2730>
   1399c:	mov	sl, r7
   139a0:	ldr	r3, [sp, #72]	; 0x48
   139a4:	cmp	r3, #0
   139a8:	moveq	r2, #0
   139ac:	andne	r2, r2, #1
   139b0:	cmp	r2, #0
   139b4:	beq	139e4 <__snprintf_chk@plt+0x2678>
   139b8:	mov	r2, r3
   139bc:	ldrb	r3, [r3]
   139c0:	cmp	r3, #0
   139c4:	beq	139e4 <__snprintf_chk@plt+0x2678>
   139c8:	ldr	r1, [sp, #36]	; 0x24
   139cc:	cmp	sl, fp
   139d0:	strbhi	r3, [r1, fp]
   139d4:	add	fp, fp, #1
   139d8:	ldrb	r3, [r2, #1]!
   139dc:	cmp	r3, #0
   139e0:	bne	139cc <__snprintf_chk@plt+0x2660>
   139e4:	cmp	sl, fp
   139e8:	movhi	r3, #0
   139ec:	ldrhi	r2, [sp, #36]	; 0x24
   139f0:	strbhi	r3, [r2, fp]
   139f4:	b	13a9c <__snprintf_chk@plt+0x2730>
   139f8:	mov	r8, sl
   139fc:	mov	sl, r7
   13a00:	ldr	r3, [sp, #32]
   13a04:	str	r3, [sp, #48]	; 0x30
   13a08:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13a0c:	mov	r8, sl
   13a10:	mov	sl, r7
   13a14:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13a18:	mov	r8, sl
   13a1c:	mov	sl, r7
   13a20:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13a24:	strdeq	r6, [r1], -ip
   13a28:	andeq	r6, r1, ip, lsl #16
   13a2c:	andeq	r6, r1, r0, lsl #16
   13a30:	mov	r8, sl
   13a34:	mov	sl, r7
   13a38:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13a3c:	mov	r8, sl
   13a40:	mov	sl, r7
   13a44:	ldr	r3, [sp, #48]	; 0x30
   13a48:	cmp	r8, #2
   13a4c:	movne	r3, #0
   13a50:	andeq	r3, r3, #1
   13a54:	cmp	r3, #0
   13a58:	movne	r8, #4
   13a5c:	ldr	r3, [sp, #168]	; 0xa8
   13a60:	str	r3, [sp, #16]
   13a64:	ldr	r3, [sp, #164]	; 0xa4
   13a68:	str	r3, [sp, #12]
   13a6c:	mov	r3, #0
   13a70:	str	r3, [sp, #8]
   13a74:	ldr	r3, [sp, #156]	; 0x9c
   13a78:	bic	r3, r3, #2
   13a7c:	str	r3, [sp, #4]
   13a80:	str	r8, [sp]
   13a84:	ldr	r3, [sp, #28]
   13a88:	ldr	r2, [sp, #52]	; 0x34
   13a8c:	mov	r1, sl
   13a90:	ldr	r0, [sp, #36]	; 0x24
   13a94:	bl	1298c <__snprintf_chk@plt+0x1620>
   13a98:	mov	fp, r0
   13a9c:	mov	r0, fp
   13aa0:	add	sp, sp, #116	; 0x74
   13aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aa8:	mov	r8, sl
   13aac:	mov	sl, r7
   13ab0:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13ab4:	mov	r8, sl
   13ab8:	mov	sl, r7
   13abc:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13ac0:	mov	r8, sl
   13ac4:	mov	sl, r7
   13ac8:	b	13a44 <__snprintf_chk@plt+0x26d8>
   13acc:	mov	r8, sl
   13ad0:	mov	sl, r7
   13ad4:	b	13a5c <__snprintf_chk@plt+0x26f0>
   13ad8:	mov	r3, #1
   13adc:	str	r3, [sp, #32]
   13ae0:	str	r3, [sp, #48]	; 0x30
   13ae4:	str	r3, [sp, #60]	; 0x3c
   13ae8:	ldr	r3, [pc, #-196]	; 13a2c <__snprintf_chk@plt+0x26c0>
   13aec:	str	r3, [sp, #72]	; 0x48
   13af0:	mov	fp, #0
   13af4:	mov	sl, #5
   13af8:	b	12a48 <__snprintf_chk@plt+0x16dc>
   13afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b00:	sub	sp, sp, #52	; 0x34
   13b04:	mov	r5, r0
   13b08:	str	r1, [sp, #24]
   13b0c:	str	r2, [sp, #28]
   13b10:	mov	r4, r3
   13b14:	bl	1124c <__errno_location@plt>
   13b18:	str	r0, [sp, #32]
   13b1c:	ldr	r3, [r0]
   13b20:	str	r3, [sp, #36]	; 0x24
   13b24:	ldr	r3, [pc, #396]	; 13cb8 <__snprintf_chk@plt+0x294c>
   13b28:	ldr	r6, [r3]
   13b2c:	cmn	r5, #-2147483647	; 0x80000001
   13b30:	movne	r3, #0
   13b34:	moveq	r3, #1
   13b38:	orrs	r3, r3, r5, lsr #31
   13b3c:	bne	13c7c <__snprintf_chk@plt+0x2910>
   13b40:	ldr	r3, [pc, #368]	; 13cb8 <__snprintf_chk@plt+0x294c>
   13b44:	ldr	r2, [r3, #4]
   13b48:	cmp	r5, r2
   13b4c:	blt	13bb4 <__snprintf_chk@plt+0x2848>
   13b50:	str	r2, [sp, #44]	; 0x2c
   13b54:	add	r3, r3, #8
   13b58:	cmp	r6, r3
   13b5c:	beq	13c80 <__snprintf_chk@plt+0x2914>
   13b60:	sub	r2, r5, r2
   13b64:	mov	r3, #8
   13b68:	str	r3, [sp]
   13b6c:	mvn	r3, #-2147483648	; 0x80000000
   13b70:	add	r2, r2, #1
   13b74:	add	r1, sp, #44	; 0x2c
   13b78:	mov	r0, r6
   13b7c:	bl	14c98 <__snprintf_chk@plt+0x392c>
   13b80:	mov	r6, r0
   13b84:	ldr	r3, [pc, #300]	; 13cb8 <__snprintf_chk@plt+0x294c>
   13b88:	str	r0, [r3]
   13b8c:	ldr	r7, [pc, #292]	; 13cb8 <__snprintf_chk@plt+0x294c>
   13b90:	ldr	r0, [r7, #4]
   13b94:	ldr	r2, [sp, #44]	; 0x2c
   13b98:	sub	r2, r2, r0
   13b9c:	lsl	r2, r2, #3
   13ba0:	mov	r1, #0
   13ba4:	add	r0, r6, r0, lsl #3
   13ba8:	bl	11270 <memset@plt>
   13bac:	ldr	r3, [sp, #44]	; 0x2c
   13bb0:	str	r3, [r7, #4]
   13bb4:	add	fp, r6, r5, lsl #3
   13bb8:	ldr	r8, [r6, r5, lsl #3]
   13bbc:	ldr	r7, [fp, #4]
   13bc0:	ldr	r9, [r4, #4]
   13bc4:	orr	r9, r9, #1
   13bc8:	add	sl, r4, #8
   13bcc:	ldr	r3, [r4, #44]	; 0x2c
   13bd0:	str	r3, [sp, #16]
   13bd4:	ldr	r3, [r4, #40]	; 0x28
   13bd8:	str	r3, [sp, #12]
   13bdc:	str	sl, [sp, #8]
   13be0:	str	r9, [sp, #4]
   13be4:	ldr	r3, [r4]
   13be8:	str	r3, [sp]
   13bec:	ldr	r3, [sp, #28]
   13bf0:	ldr	r2, [sp, #24]
   13bf4:	mov	r1, r8
   13bf8:	mov	r0, r7
   13bfc:	bl	1298c <__snprintf_chk@plt+0x1620>
   13c00:	cmp	r8, r0
   13c04:	bhi	13c64 <__snprintf_chk@plt+0x28f8>
   13c08:	add	r8, r0, #1
   13c0c:	str	r8, [r6, r5, lsl #3]
   13c10:	ldr	r3, [pc, #164]	; 13cbc <__snprintf_chk@plt+0x2950>
   13c14:	cmp	r7, r3
   13c18:	beq	13c24 <__snprintf_chk@plt+0x28b8>
   13c1c:	mov	r0, r7
   13c20:	bl	12714 <__snprintf_chk@plt+0x13a8>
   13c24:	mov	r0, r8
   13c28:	bl	14b14 <__snprintf_chk@plt+0x37a8>
   13c2c:	mov	r7, r0
   13c30:	str	r0, [fp, #4]
   13c34:	ldr	r3, [r4, #44]	; 0x2c
   13c38:	str	r3, [sp, #16]
   13c3c:	ldr	r3, [r4, #40]	; 0x28
   13c40:	str	r3, [sp, #12]
   13c44:	str	sl, [sp, #8]
   13c48:	str	r9, [sp, #4]
   13c4c:	ldr	r3, [r4]
   13c50:	str	r3, [sp]
   13c54:	ldr	r3, [sp, #28]
   13c58:	ldr	r2, [sp, #24]
   13c5c:	mov	r1, r8
   13c60:	bl	1298c <__snprintf_chk@plt+0x1620>
   13c64:	ldr	r3, [sp, #32]
   13c68:	ldr	r2, [sp, #36]	; 0x24
   13c6c:	str	r2, [r3]
   13c70:	mov	r0, r7
   13c74:	add	sp, sp, #52	; 0x34
   13c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c7c:	bl	11360 <abort@plt>
   13c80:	sub	r2, r5, r2
   13c84:	mov	r3, #8
   13c88:	str	r3, [sp]
   13c8c:	mvn	r3, #-2147483648	; 0x80000000
   13c90:	add	r2, r2, #1
   13c94:	add	r1, sp, #44	; 0x2c
   13c98:	mov	r0, #0
   13c9c:	bl	14c98 <__snprintf_chk@plt+0x392c>
   13ca0:	mov	r6, r0
   13ca4:	ldr	r3, [pc, #12]	; 13cb8 <__snprintf_chk@plt+0x294c>
   13ca8:	str	r0, [r3], #8
   13cac:	ldm	r3, {r0, r1}
   13cb0:	stm	r6, {r0, r1}
   13cb4:	b	13b8c <__snprintf_chk@plt+0x2820>
   13cb8:	andeq	r7, r2, r8, lsr r1
   13cbc:	andeq	r7, r2, r8, ror #6
   13cc0:	push	{r4, r5, r6, lr}
   13cc4:	mov	r4, r0
   13cc8:	bl	1124c <__errno_location@plt>
   13ccc:	mov	r5, r0
   13cd0:	ldr	r6, [r0]
   13cd4:	cmp	r4, #0
   13cd8:	ldr	r3, [pc, #20]	; 13cf4 <__snprintf_chk@plt+0x2988>
   13cdc:	moveq	r4, r3
   13ce0:	mov	r1, #48	; 0x30
   13ce4:	mov	r0, r4
   13ce8:	bl	15000 <__snprintf_chk@plt+0x3c94>
   13cec:	str	r6, [r5]
   13cf0:	pop	{r4, r5, r6, pc}
   13cf4:	andeq	r7, r2, r8, ror #8
   13cf8:	subs	r3, r0, #0
   13cfc:	ldr	r2, [pc, #8]	; 13d0c <__snprintf_chk@plt+0x29a0>
   13d00:	moveq	r3, r2
   13d04:	ldr	r0, [r3]
   13d08:	bx	lr
   13d0c:	andeq	r7, r2, r8, ror #8
   13d10:	subs	r3, r0, #0
   13d14:	ldr	r2, [pc, #8]	; 13d24 <__snprintf_chk@plt+0x29b8>
   13d18:	moveq	r3, r2
   13d1c:	str	r1, [r3]
   13d20:	bx	lr
   13d24:	andeq	r7, r2, r8, ror #8
   13d28:	push	{lr}		; (str lr, [sp, #-4]!)
   13d2c:	subs	r3, r0, #0
   13d30:	ldr	r0, [pc, #44]	; 13d64 <__snprintf_chk@plt+0x29f8>
   13d34:	moveq	r3, r0
   13d38:	add	r3, r3, #8
   13d3c:	lsr	lr, r1, #5
   13d40:	and	r1, r1, #31
   13d44:	ldr	ip, [r3, lr, lsl #2]
   13d48:	lsr	r0, ip, r1
   13d4c:	eor	r2, r2, r0
   13d50:	and	r2, r2, #1
   13d54:	eor	r1, ip, r2, lsl r1
   13d58:	str	r1, [r3, lr, lsl #2]
   13d5c:	and	r0, r0, #1
   13d60:	pop	{pc}		; (ldr pc, [sp], #4)
   13d64:	andeq	r7, r2, r8, ror #8
   13d68:	subs	r3, r0, #0
   13d6c:	ldr	r2, [pc, #12]	; 13d80 <__snprintf_chk@plt+0x2a14>
   13d70:	moveq	r3, r2
   13d74:	ldr	r0, [r3, #4]
   13d78:	str	r1, [r3, #4]
   13d7c:	bx	lr
   13d80:	andeq	r7, r2, r8, ror #8
   13d84:	subs	r3, r0, #0
   13d88:	ldr	r0, [pc, #40]	; 13db8 <__snprintf_chk@plt+0x2a4c>
   13d8c:	moveq	r3, r0
   13d90:	mov	r0, #10
   13d94:	str	r0, [r3]
   13d98:	cmp	r2, #0
   13d9c:	cmpne	r1, #0
   13da0:	beq	13db0 <__snprintf_chk@plt+0x2a44>
   13da4:	str	r1, [r3, #40]	; 0x28
   13da8:	str	r2, [r3, #44]	; 0x2c
   13dac:	bx	lr
   13db0:	push	{r4, lr}
   13db4:	bl	11360 <abort@plt>
   13db8:	andeq	r7, r2, r8, ror #8
   13dbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13dc0:	sub	sp, sp, #24
   13dc4:	mov	r7, r0
   13dc8:	mov	r8, r1
   13dcc:	mov	r9, r2
   13dd0:	mov	sl, r3
   13dd4:	ldr	r4, [sp, #56]	; 0x38
   13dd8:	cmp	r4, #0
   13ddc:	ldr	r3, [pc, #84]	; 13e38 <__snprintf_chk@plt+0x2acc>
   13de0:	moveq	r4, r3
   13de4:	bl	1124c <__errno_location@plt>
   13de8:	mov	r5, r0
   13dec:	ldr	r6, [r0]
   13df0:	ldr	r3, [r4, #44]	; 0x2c
   13df4:	str	r3, [sp, #16]
   13df8:	ldr	r3, [r4, #40]	; 0x28
   13dfc:	str	r3, [sp, #12]
   13e00:	add	r3, r4, #8
   13e04:	str	r3, [sp, #8]
   13e08:	ldr	r3, [r4, #4]
   13e0c:	str	r3, [sp, #4]
   13e10:	ldr	r3, [r4]
   13e14:	str	r3, [sp]
   13e18:	mov	r3, sl
   13e1c:	mov	r2, r9
   13e20:	mov	r1, r8
   13e24:	mov	r0, r7
   13e28:	bl	1298c <__snprintf_chk@plt+0x1620>
   13e2c:	str	r6, [r5]
   13e30:	add	sp, sp, #24
   13e34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e38:	andeq	r7, r2, r8, ror #8
   13e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e40:	sub	sp, sp, #44	; 0x2c
   13e44:	str	r0, [sp, #28]
   13e48:	str	r1, [sp, #32]
   13e4c:	mov	r6, r2
   13e50:	subs	r4, r3, #0
   13e54:	ldr	r3, [pc, #172]	; 13f08 <__snprintf_chk@plt+0x2b9c>
   13e58:	moveq	r4, r3
   13e5c:	bl	1124c <__errno_location@plt>
   13e60:	mov	r7, r0
   13e64:	ldr	fp, [r0]
   13e68:	ldr	r5, [r4, #4]
   13e6c:	cmp	r6, #0
   13e70:	orreq	r5, r5, #1
   13e74:	add	r9, r4, #8
   13e78:	ldr	r3, [r4, #44]	; 0x2c
   13e7c:	str	r3, [sp, #16]
   13e80:	ldr	r3, [r4, #40]	; 0x28
   13e84:	str	r3, [sp, #12]
   13e88:	str	r9, [sp, #8]
   13e8c:	str	r5, [sp, #4]
   13e90:	ldr	r3, [r4]
   13e94:	str	r3, [sp]
   13e98:	ldr	r3, [sp, #32]
   13e9c:	ldr	r2, [sp, #28]
   13ea0:	mov	r1, #0
   13ea4:	mov	r0, r1
   13ea8:	bl	1298c <__snprintf_chk@plt+0x1620>
   13eac:	mov	sl, r0
   13eb0:	add	r8, r0, #1
   13eb4:	mov	r0, r8
   13eb8:	bl	14b14 <__snprintf_chk@plt+0x37a8>
   13ebc:	str	r0, [sp, #36]	; 0x24
   13ec0:	ldr	r3, [r4, #44]	; 0x2c
   13ec4:	str	r3, [sp, #16]
   13ec8:	ldr	r3, [r4, #40]	; 0x28
   13ecc:	str	r3, [sp, #12]
   13ed0:	str	r9, [sp, #8]
   13ed4:	str	r5, [sp, #4]
   13ed8:	ldr	r3, [r4]
   13edc:	str	r3, [sp]
   13ee0:	ldr	r3, [sp, #32]
   13ee4:	ldr	r2, [sp, #28]
   13ee8:	mov	r1, r8
   13eec:	bl	1298c <__snprintf_chk@plt+0x1620>
   13ef0:	str	fp, [r7]
   13ef4:	cmp	r6, #0
   13ef8:	strne	sl, [r6]
   13efc:	ldr	r0, [sp, #36]	; 0x24
   13f00:	add	sp, sp, #44	; 0x2c
   13f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f08:	andeq	r7, r2, r8, ror #8
   13f0c:	push	{r4, lr}
   13f10:	mov	r3, r2
   13f14:	mov	r2, #0
   13f18:	bl	13e3c <__snprintf_chk@plt+0x2ad0>
   13f1c:	pop	{r4, pc}
   13f20:	push	{r4, r5, r6, r7, r8, lr}
   13f24:	ldr	r3, [pc, #140]	; 13fb8 <__snprintf_chk@plt+0x2c4c>
   13f28:	ldr	r7, [r3]
   13f2c:	ldr	r3, [r3, #4]
   13f30:	cmp	r3, #1
   13f34:	ble	13f60 <__snprintf_chk@plt+0x2bf4>
   13f38:	mov	r5, r7
   13f3c:	mov	r4, #1
   13f40:	ldr	r6, [pc, #112]	; 13fb8 <__snprintf_chk@plt+0x2c4c>
   13f44:	ldr	r0, [r5, #12]
   13f48:	bl	12714 <__snprintf_chk@plt+0x13a8>
   13f4c:	add	r4, r4, #1
   13f50:	add	r5, r5, #8
   13f54:	ldr	r3, [r6, #4]
   13f58:	cmp	r3, r4
   13f5c:	bgt	13f44 <__snprintf_chk@plt+0x2bd8>
   13f60:	ldr	r0, [r7, #4]
   13f64:	ldr	r3, [pc, #80]	; 13fbc <__snprintf_chk@plt+0x2c50>
   13f68:	cmp	r0, r3
   13f6c:	beq	13f88 <__snprintf_chk@plt+0x2c1c>
   13f70:	bl	12714 <__snprintf_chk@plt+0x13a8>
   13f74:	ldr	r3, [pc, #60]	; 13fb8 <__snprintf_chk@plt+0x2c4c>
   13f78:	mov	r2, #256	; 0x100
   13f7c:	str	r2, [r3, #8]
   13f80:	ldr	r2, [pc, #52]	; 13fbc <__snprintf_chk@plt+0x2c50>
   13f84:	str	r2, [r3, #12]
   13f88:	ldr	r3, [pc, #48]	; 13fc0 <__snprintf_chk@plt+0x2c54>
   13f8c:	cmp	r7, r3
   13f90:	beq	13fa8 <__snprintf_chk@plt+0x2c3c>
   13f94:	mov	r0, r7
   13f98:	bl	12714 <__snprintf_chk@plt+0x13a8>
   13f9c:	ldr	r3, [pc, #20]	; 13fb8 <__snprintf_chk@plt+0x2c4c>
   13fa0:	add	r2, r3, #8
   13fa4:	str	r2, [r3]
   13fa8:	mov	r2, #1
   13fac:	ldr	r3, [pc, #4]	; 13fb8 <__snprintf_chk@plt+0x2c4c>
   13fb0:	str	r2, [r3, #4]
   13fb4:	pop	{r4, r5, r6, r7, r8, pc}
   13fb8:	andeq	r7, r2, r8, lsr r1
   13fbc:	andeq	r7, r2, r8, ror #6
   13fc0:	andeq	r7, r2, r0, asr #2
   13fc4:	push	{r4, lr}
   13fc8:	ldr	r3, [pc, #8]	; 13fd8 <__snprintf_chk@plt+0x2c6c>
   13fcc:	mvn	r2, #0
   13fd0:	bl	13afc <__snprintf_chk@plt+0x2790>
   13fd4:	pop	{r4, pc}
   13fd8:	andeq	r7, r2, r8, ror #8
   13fdc:	push	{r4, lr}
   13fe0:	ldr	r3, [pc, #4]	; 13fec <__snprintf_chk@plt+0x2c80>
   13fe4:	bl	13afc <__snprintf_chk@plt+0x2790>
   13fe8:	pop	{r4, pc}
   13fec:	andeq	r7, r2, r8, ror #8
   13ff0:	push	{r4, lr}
   13ff4:	mov	r1, r0
   13ff8:	mov	r0, #0
   13ffc:	bl	13fc4 <__snprintf_chk@plt+0x2c58>
   14000:	pop	{r4, pc}
   14004:	push	{r4, lr}
   14008:	mov	r2, r1
   1400c:	mov	r1, r0
   14010:	mov	r0, #0
   14014:	bl	13fdc <__snprintf_chk@plt+0x2c70>
   14018:	pop	{r4, pc}
   1401c:	push	{r4, r5, lr}
   14020:	sub	sp, sp, #52	; 0x34
   14024:	mov	r4, r0
   14028:	mov	r5, r2
   1402c:	mov	r0, sp
   14030:	bl	12824 <__snprintf_chk@plt+0x14b8>
   14034:	mov	r3, sp
   14038:	mvn	r2, #0
   1403c:	mov	r1, r5
   14040:	mov	r0, r4
   14044:	bl	13afc <__snprintf_chk@plt+0x2790>
   14048:	add	sp, sp, #52	; 0x34
   1404c:	pop	{r4, r5, pc}
   14050:	push	{r4, r5, r6, lr}
   14054:	sub	sp, sp, #48	; 0x30
   14058:	mov	r4, r0
   1405c:	mov	r5, r2
   14060:	mov	r6, r3
   14064:	mov	r0, sp
   14068:	bl	12824 <__snprintf_chk@plt+0x14b8>
   1406c:	mov	r3, sp
   14070:	mov	r2, r6
   14074:	mov	r1, r5
   14078:	mov	r0, r4
   1407c:	bl	13afc <__snprintf_chk@plt+0x2790>
   14080:	add	sp, sp, #48	; 0x30
   14084:	pop	{r4, r5, r6, pc}
   14088:	push	{r4, lr}
   1408c:	mov	r2, r1
   14090:	mov	r1, r0
   14094:	mov	r0, #0
   14098:	bl	1401c <__snprintf_chk@plt+0x2cb0>
   1409c:	pop	{r4, pc}
   140a0:	push	{r4, lr}
   140a4:	mov	r3, r2
   140a8:	mov	r2, r1
   140ac:	mov	r1, r0
   140b0:	mov	r0, #0
   140b4:	bl	14050 <__snprintf_chk@plt+0x2ce4>
   140b8:	pop	{r4, pc}
   140bc:	push	{r4, r5, r6, lr}
   140c0:	sub	sp, sp, #48	; 0x30
   140c4:	mov	r4, r0
   140c8:	mov	r5, r1
   140cc:	mov	r6, r2
   140d0:	mov	ip, sp
   140d4:	ldr	lr, [pc, #64]	; 1411c <__snprintf_chk@plt+0x2db0>
   140d8:	ldm	lr!, {r0, r1, r2, r3}
   140dc:	stmia	ip!, {r0, r1, r2, r3}
   140e0:	ldm	lr!, {r0, r1, r2, r3}
   140e4:	stmia	ip!, {r0, r1, r2, r3}
   140e8:	ldm	lr, {r0, r1, r2, r3}
   140ec:	stm	ip, {r0, r1, r2, r3}
   140f0:	mov	r2, #1
   140f4:	mov	r1, r6
   140f8:	mov	r0, sp
   140fc:	bl	13d28 <__snprintf_chk@plt+0x29bc>
   14100:	mov	r3, sp
   14104:	mov	r2, r5
   14108:	mov	r1, r4
   1410c:	mov	r0, #0
   14110:	bl	13afc <__snprintf_chk@plt+0x2790>
   14114:	add	sp, sp, #48	; 0x30
   14118:	pop	{r4, r5, r6, pc}
   1411c:	andeq	r7, r2, r8, ror #8
   14120:	push	{r4, lr}
   14124:	mov	r2, r1
   14128:	mvn	r1, #0
   1412c:	bl	140bc <__snprintf_chk@plt+0x2d50>
   14130:	pop	{r4, pc}
   14134:	push	{r4, lr}
   14138:	mov	r1, #58	; 0x3a
   1413c:	bl	14120 <__snprintf_chk@plt+0x2db4>
   14140:	pop	{r4, pc}
   14144:	push	{r4, lr}
   14148:	mov	r2, #58	; 0x3a
   1414c:	bl	140bc <__snprintf_chk@plt+0x2d50>
   14150:	pop	{r4, pc}
   14154:	push	{r4, r5, lr}
   14158:	sub	sp, sp, #100	; 0x64
   1415c:	mov	r4, r0
   14160:	mov	r5, r2
   14164:	mov	r0, sp
   14168:	bl	12824 <__snprintf_chk@plt+0x14b8>
   1416c:	add	lr, sp, #48	; 0x30
   14170:	mov	ip, sp
   14174:	ldm	ip!, {r0, r1, r2, r3}
   14178:	stmia	lr!, {r0, r1, r2, r3}
   1417c:	ldm	ip!, {r0, r1, r2, r3}
   14180:	stmia	lr!, {r0, r1, r2, r3}
   14184:	ldm	ip, {r0, r1, r2, r3}
   14188:	stm	lr, {r0, r1, r2, r3}
   1418c:	mov	r2, #1
   14190:	mov	r1, #58	; 0x3a
   14194:	add	r0, sp, #48	; 0x30
   14198:	bl	13d28 <__snprintf_chk@plt+0x29bc>
   1419c:	add	r3, sp, #48	; 0x30
   141a0:	mvn	r2, #0
   141a4:	mov	r1, r5
   141a8:	mov	r0, r4
   141ac:	bl	13afc <__snprintf_chk@plt+0x2790>
   141b0:	add	sp, sp, #100	; 0x64
   141b4:	pop	{r4, r5, pc}
   141b8:	push	{r4, r5, r6, r7, lr}
   141bc:	sub	sp, sp, #52	; 0x34
   141c0:	mov	r4, r0
   141c4:	mov	r6, r1
   141c8:	mov	r7, r2
   141cc:	mov	r5, r3
   141d0:	mov	ip, sp
   141d4:	ldr	lr, [pc, #64]	; 1421c <__snprintf_chk@plt+0x2eb0>
   141d8:	ldm	lr!, {r0, r1, r2, r3}
   141dc:	stmia	ip!, {r0, r1, r2, r3}
   141e0:	ldm	lr!, {r0, r1, r2, r3}
   141e4:	stmia	ip!, {r0, r1, r2, r3}
   141e8:	ldm	lr, {r0, r1, r2, r3}
   141ec:	stm	ip, {r0, r1, r2, r3}
   141f0:	mov	r2, r7
   141f4:	mov	r1, r6
   141f8:	mov	r0, sp
   141fc:	bl	13d84 <__snprintf_chk@plt+0x2a18>
   14200:	mov	r3, sp
   14204:	ldr	r2, [sp, #72]	; 0x48
   14208:	mov	r1, r5
   1420c:	mov	r0, r4
   14210:	bl	13afc <__snprintf_chk@plt+0x2790>
   14214:	add	sp, sp, #52	; 0x34
   14218:	pop	{r4, r5, r6, r7, pc}
   1421c:	andeq	r7, r2, r8, ror #8
   14220:	push	{lr}		; (str lr, [sp, #-4]!)
   14224:	sub	sp, sp, #12
   14228:	mvn	ip, #0
   1422c:	str	ip, [sp]
   14230:	bl	141b8 <__snprintf_chk@plt+0x2e4c>
   14234:	add	sp, sp, #12
   14238:	pop	{pc}		; (ldr pc, [sp], #4)
   1423c:	push	{r4, lr}
   14240:	mov	r3, r2
   14244:	mov	r2, r1
   14248:	mov	r1, r0
   1424c:	mov	r0, #0
   14250:	bl	14220 <__snprintf_chk@plt+0x2eb4>
   14254:	pop	{r4, pc}
   14258:	push	{lr}		; (str lr, [sp, #-4]!)
   1425c:	sub	sp, sp, #12
   14260:	str	r3, [sp]
   14264:	mov	r3, r2
   14268:	mov	r2, r1
   1426c:	mov	r1, r0
   14270:	mov	r0, #0
   14274:	bl	141b8 <__snprintf_chk@plt+0x2e4c>
   14278:	add	sp, sp, #12
   1427c:	pop	{pc}		; (ldr pc, [sp], #4)
   14280:	push	{r4, lr}
   14284:	ldr	r3, [pc, #4]	; 14290 <__snprintf_chk@plt+0x2f24>
   14288:	bl	13afc <__snprintf_chk@plt+0x2790>
   1428c:	pop	{r4, pc}
   14290:	andeq	r7, r2, r8, asr #2
   14294:	push	{r4, lr}
   14298:	mov	r2, r1
   1429c:	mov	r1, r0
   142a0:	mov	r0, #0
   142a4:	bl	14280 <__snprintf_chk@plt+0x2f14>
   142a8:	pop	{r4, pc}
   142ac:	push	{r4, lr}
   142b0:	mvn	r2, #0
   142b4:	bl	14280 <__snprintf_chk@plt+0x2f14>
   142b8:	pop	{r4, pc}
   142bc:	push	{r4, lr}
   142c0:	mov	r1, r0
   142c4:	mov	r0, #0
   142c8:	bl	142ac <__snprintf_chk@plt+0x2f40>
   142cc:	pop	{r4, pc}
   142d0:	push	{r4, r5, r6, r7, lr}
   142d4:	sub	sp, sp, #12
   142d8:	mov	r6, r0
   142dc:	mov	r7, r1
   142e0:	ldrb	r3, [r0]
   142e4:	sub	r3, r3, #48	; 0x30
   142e8:	cmp	r3, #9
   142ec:	bls	143b4 <__snprintf_chk@plt+0x3048>
   142f0:	ldr	r5, [pc, #324]	; 1443c <__snprintf_chk@plt+0x30d0>
   142f4:	mov	r4, #0
   142f8:	mov	r1, r6
   142fc:	mov	r0, r5
   14300:	bl	11060 <strcmp@plt>
   14304:	cmp	r0, #0
   14308:	beq	143e4 <__snprintf_chk@plt+0x3078>
   1430c:	add	r4, r4, #1
   14310:	add	r5, r5, #12
   14314:	cmp	r4, #35	; 0x23
   14318:	bne	142f8 <__snprintf_chk@plt+0x2f8c>
   1431c:	bl	11348 <__libc_current_sigrtmin@plt>
   14320:	mov	r5, r0
   14324:	bl	11234 <__libc_current_sigrtmax@plt>
   14328:	mov	r4, r0
   1432c:	cmp	r5, #0
   14330:	ble	1434c <__snprintf_chk@plt+0x2fe0>
   14334:	mov	r2, #5
   14338:	ldr	r1, [pc, #256]	; 14440 <__snprintf_chk@plt+0x30d4>
   1433c:	mov	r0, r6
   14340:	bl	11354 <strncmp@plt>
   14344:	cmp	r0, #0
   14348:	beq	14400 <__snprintf_chk@plt+0x3094>
   1434c:	cmp	r4, #0
   14350:	ble	14434 <__snprintf_chk@plt+0x30c8>
   14354:	mov	r2, #5
   14358:	ldr	r1, [pc, #228]	; 14444 <__snprintf_chk@plt+0x30d8>
   1435c:	mov	r0, r6
   14360:	bl	11354 <strncmp@plt>
   14364:	cmp	r0, #0
   14368:	bne	14434 <__snprintf_chk@plt+0x30c8>
   1436c:	mov	r2, #10
   14370:	add	r1, sp, #4
   14374:	add	r0, r6, #5
   14378:	bl	1106c <strtol@plt>
   1437c:	ldr	r3, [sp, #4]
   14380:	ldrb	r3, [r3]
   14384:	cmp	r3, #0
   14388:	bne	14434 <__snprintf_chk@plt+0x30c8>
   1438c:	sub	r5, r5, r4
   14390:	cmp	r0, r5
   14394:	movlt	r5, #0
   14398:	movge	r5, #1
   1439c:	cmp	r0, #0
   143a0:	movgt	r5, #0
   143a4:	cmp	r5, #0
   143a8:	beq	14434 <__snprintf_chk@plt+0x30c8>
   143ac:	add	r0, r4, r0
   143b0:	b	143f0 <__snprintf_chk@plt+0x3084>
   143b4:	mov	r2, #10
   143b8:	add	r1, sp, #4
   143bc:	bl	1106c <strtol@plt>
   143c0:	ldr	r3, [sp, #4]
   143c4:	ldrb	r3, [r3]
   143c8:	cmp	r0, #64	; 0x40
   143cc:	cmple	r3, #0
   143d0:	moveq	r3, #1
   143d4:	movne	r3, #0
   143d8:	cmp	r3, #0
   143dc:	mvneq	r0, #0
   143e0:	b	143f0 <__snprintf_chk@plt+0x3084>
   143e4:	add	r4, r4, r4, lsl #1
   143e8:	ldr	r3, [pc, #88]	; 14448 <__snprintf_chk@plt+0x30dc>
   143ec:	ldr	r0, [r3, r4, lsl #2]
   143f0:	str	r0, [r7]
   143f4:	asr	r0, r0, #31
   143f8:	add	sp, sp, #12
   143fc:	pop	{r4, r5, r6, r7, pc}
   14400:	mov	r2, #10
   14404:	add	r1, sp, #4
   14408:	add	r0, r6, #5
   1440c:	bl	1106c <strtol@plt>
   14410:	ldr	r3, [sp, #4]
   14414:	ldrb	r3, [r3]
   14418:	cmp	r0, #0
   1441c:	cmpge	r3, #0
   14420:	bne	14434 <__snprintf_chk@plt+0x30c8>
   14424:	sub	r4, r4, r5
   14428:	cmp	r0, r4
   1442c:	addle	r0, r5, r0
   14430:	ble	143f0 <__snprintf_chk@plt+0x3084>
   14434:	mvn	r0, #0
   14438:	b	143f0 <__snprintf_chk@plt+0x3084>
   1443c:	andeq	r7, r2, ip, ror r1
   14440:	andeq	r6, r1, r8, ror r8
   14444:	andeq	r6, r1, r0, lsl #17
   14448:	andeq	r7, r2, r8, ror r1
   1444c:	push	{r4, r5, r6, lr}
   14450:	sub	sp, sp, #8
   14454:	mov	r5, r1
   14458:	ldr	r3, [pc, #248]	; 14558 <__snprintf_chk@plt+0x31ec>
   1445c:	ldr	r3, [r3]
   14460:	cmp	r0, r3
   14464:	beq	1450c <__snprintf_chk@plt+0x31a0>
   14468:	mov	r4, r0
   1446c:	ldr	r3, [pc, #228]	; 14558 <__snprintf_chk@plt+0x31ec>
   14470:	mov	r1, #1
   14474:	ldr	r2, [r3, #12]
   14478:	cmp	r2, r4
   1447c:	beq	14510 <__snprintf_chk@plt+0x31a4>
   14480:	add	r1, r1, #1
   14484:	add	r3, r3, #12
   14488:	cmp	r1, #35	; 0x23
   1448c:	bne	14474 <__snprintf_chk@plt+0x3108>
   14490:	bl	11348 <__libc_current_sigrtmin@plt>
   14494:	mov	r6, r0
   14498:	bl	11234 <__libc_current_sigrtmax@plt>
   1449c:	mov	r2, r0
   144a0:	cmp	r4, r0
   144a4:	movle	r3, #0
   144a8:	movgt	r3, #1
   144ac:	cmp	r4, r6
   144b0:	orrlt	r3, r3, #1
   144b4:	cmp	r3, #0
   144b8:	bne	14550 <__snprintf_chk@plt+0x31e4>
   144bc:	sub	r3, r0, r6
   144c0:	add	r3, r3, r3, lsr #31
   144c4:	add	r3, r6, r3, asr #1
   144c8:	cmp	r4, r3
   144cc:	bgt	14534 <__snprintf_chk@plt+0x31c8>
   144d0:	ldr	r3, [pc, #132]	; 1455c <__snprintf_chk@plt+0x31f0>
   144d4:	ldr	r0, [r3]
   144d8:	str	r0, [r5]
   144dc:	ldrh	r3, [r3, #4]
   144e0:	strh	r3, [r5, #4]
   144e4:	subs	r0, r4, r6
   144e8:	beq	1452c <__snprintf_chk@plt+0x31c0>
   144ec:	str	r0, [sp]
   144f0:	ldr	r3, [pc, #104]	; 14560 <__snprintf_chk@plt+0x31f4>
   144f4:	mvn	r2, #0
   144f8:	mov	r1, #1
   144fc:	add	r0, r5, #5
   14500:	bl	11258 <__sprintf_chk@plt>
   14504:	mov	r0, #0
   14508:	b	1452c <__snprintf_chk@plt+0x31c0>
   1450c:	mov	r1, #0
   14510:	add	r1, r1, r1, lsl #1
   14514:	ldr	r3, [pc, #60]	; 14558 <__snprintf_chk@plt+0x31ec>
   14518:	add	r1, r3, r1, lsl #2
   1451c:	add	r1, r1, #4
   14520:	mov	r0, r5
   14524:	bl	11180 <strcpy@plt>
   14528:	mov	r0, #0
   1452c:	add	sp, sp, #8
   14530:	pop	{r4, r5, r6, pc}
   14534:	ldr	r3, [pc, #40]	; 14564 <__snprintf_chk@plt+0x31f8>
   14538:	ldr	r0, [r3]
   1453c:	str	r0, [r5]
   14540:	ldrh	r3, [r3, #4]
   14544:	strh	r3, [r5, #4]
   14548:	mov	r6, r2
   1454c:	b	144e4 <__snprintf_chk@plt+0x3178>
   14550:	mvn	r0, #0
   14554:	b	1452c <__snprintf_chk@plt+0x31c0>
   14558:	andeq	r7, r2, r8, ror r1
   1455c:	andeq	r6, r1, r8, ror r8
   14560:	andeq	r6, r1, r8, lsl #17
   14564:	andeq	r6, r1, r0, lsl #17
   14568:	push	{r4, r5, r6, lr}
   1456c:	sub	sp, sp, #32
   14570:	mov	r4, r0
   14574:	ldr	r5, [sp, #48]	; 0x30
   14578:	ldr	r6, [sp, #52]	; 0x34
   1457c:	cmp	r1, #0
   14580:	beq	14638 <__snprintf_chk@plt+0x32cc>
   14584:	str	r3, [sp, #4]
   14588:	str	r2, [sp]
   1458c:	mov	r3, r1
   14590:	ldr	r2, [pc, #940]	; 14944 <__snprintf_chk@plt+0x35d8>
   14594:	mov	r1, #1
   14598:	bl	112b8 <__fprintf_chk@plt>
   1459c:	mov	r2, #5
   145a0:	ldr	r1, [pc, #928]	; 14948 <__snprintf_chk@plt+0x35dc>
   145a4:	mov	r0, #0
   145a8:	bl	110f0 <dcgettext@plt>
   145ac:	ldr	r3, [pc, #920]	; 1494c <__snprintf_chk@plt+0x35e0>
   145b0:	str	r3, [sp]
   145b4:	mov	r3, r0
   145b8:	ldr	r2, [pc, #912]	; 14950 <__snprintf_chk@plt+0x35e4>
   145bc:	mov	r1, #1
   145c0:	mov	r0, r4
   145c4:	bl	112b8 <__fprintf_chk@plt>
   145c8:	mov	r1, r4
   145cc:	mov	r0, #10
   145d0:	bl	110e4 <fputc_unlocked@plt>
   145d4:	mov	r2, #5
   145d8:	ldr	r1, [pc, #884]	; 14954 <__snprintf_chk@plt+0x35e8>
   145dc:	mov	r0, #0
   145e0:	bl	110f0 <dcgettext@plt>
   145e4:	ldr	r3, [pc, #876]	; 14958 <__snprintf_chk@plt+0x35ec>
   145e8:	mov	r2, r0
   145ec:	mov	r1, #1
   145f0:	mov	r0, r4
   145f4:	bl	112b8 <__fprintf_chk@plt>
   145f8:	mov	r1, r4
   145fc:	mov	r0, #10
   14600:	bl	110e4 <fputc_unlocked@plt>
   14604:	cmp	r6, #9
   14608:	ldrls	pc, [pc, r6, lsl #2]
   1460c:	b	148dc <__snprintf_chk@plt+0x3570>
   14610:	andeq	r4, r1, r4, ror r6
   14614:	andeq	r4, r1, r0, asr r6
   14618:	andeq	r4, r1, ip, ror r6
   1461c:	andeq	r4, r1, ip, lsr #13
   14620:	andeq	r4, r1, r4, ror #13
   14624:	andeq	r4, r1, r4, lsr #14
   14628:	andeq	r4, r1, ip, ror #14
   1462c:			; <UNDEFINED> instruction: 0x000147bc
   14630:	andeq	r4, r1, r4, lsl r8
   14634:	andeq	r4, r1, r4, ror r8
   14638:	str	r3, [sp]
   1463c:	mov	r3, r2
   14640:	ldr	r2, [pc, #788]	; 1495c <__snprintf_chk@plt+0x35f0>
   14644:	mov	r1, #1
   14648:	bl	112b8 <__fprintf_chk@plt>
   1464c:	b	1459c <__snprintf_chk@plt+0x3230>
   14650:	mov	r2, #5
   14654:	ldr	r1, [pc, #772]	; 14960 <__snprintf_chk@plt+0x35f4>
   14658:	mov	r0, #0
   1465c:	bl	110f0 <dcgettext@plt>
   14660:	ldr	r3, [r5]
   14664:	mov	r2, r0
   14668:	mov	r1, #1
   1466c:	mov	r0, r4
   14670:	bl	112b8 <__fprintf_chk@plt>
   14674:	add	sp, sp, #32
   14678:	pop	{r4, r5, r6, pc}
   1467c:	mov	r2, #5
   14680:	ldr	r1, [pc, #732]	; 14964 <__snprintf_chk@plt+0x35f8>
   14684:	mov	r0, #0
   14688:	bl	110f0 <dcgettext@plt>
   1468c:	ldr	r3, [r5]
   14690:	ldr	r2, [r5, #4]
   14694:	str	r2, [sp]
   14698:	mov	r2, r0
   1469c:	mov	r1, #1
   146a0:	mov	r0, r4
   146a4:	bl	112b8 <__fprintf_chk@plt>
   146a8:	b	14674 <__snprintf_chk@plt+0x3308>
   146ac:	mov	r2, #5
   146b0:	ldr	r1, [pc, #688]	; 14968 <__snprintf_chk@plt+0x35fc>
   146b4:	mov	r0, #0
   146b8:	bl	110f0 <dcgettext@plt>
   146bc:	ldr	r3, [r5]
   146c0:	ldr	r2, [r5, #8]
   146c4:	str	r2, [sp, #4]
   146c8:	ldr	r2, [r5, #4]
   146cc:	str	r2, [sp]
   146d0:	mov	r2, r0
   146d4:	mov	r1, #1
   146d8:	mov	r0, r4
   146dc:	bl	112b8 <__fprintf_chk@plt>
   146e0:	b	14674 <__snprintf_chk@plt+0x3308>
   146e4:	mov	r2, #5
   146e8:	ldr	r1, [pc, #636]	; 1496c <__snprintf_chk@plt+0x3600>
   146ec:	mov	r0, #0
   146f0:	bl	110f0 <dcgettext@plt>
   146f4:	ldr	r3, [r5]
   146f8:	ldr	r2, [r5, #12]
   146fc:	str	r2, [sp, #8]
   14700:	ldr	r2, [r5, #8]
   14704:	str	r2, [sp, #4]
   14708:	ldr	r2, [r5, #4]
   1470c:	str	r2, [sp]
   14710:	mov	r2, r0
   14714:	mov	r1, #1
   14718:	mov	r0, r4
   1471c:	bl	112b8 <__fprintf_chk@plt>
   14720:	b	14674 <__snprintf_chk@plt+0x3308>
   14724:	mov	r2, #5
   14728:	ldr	r1, [pc, #576]	; 14970 <__snprintf_chk@plt+0x3604>
   1472c:	mov	r0, #0
   14730:	bl	110f0 <dcgettext@plt>
   14734:	ldr	r3, [r5]
   14738:	ldr	r2, [r5, #16]
   1473c:	str	r2, [sp, #12]
   14740:	ldr	r2, [r5, #12]
   14744:	str	r2, [sp, #8]
   14748:	ldr	r2, [r5, #8]
   1474c:	str	r2, [sp, #4]
   14750:	ldr	r2, [r5, #4]
   14754:	str	r2, [sp]
   14758:	mov	r2, r0
   1475c:	mov	r1, #1
   14760:	mov	r0, r4
   14764:	bl	112b8 <__fprintf_chk@plt>
   14768:	b	14674 <__snprintf_chk@plt+0x3308>
   1476c:	mov	r2, #5
   14770:	ldr	r1, [pc, #508]	; 14974 <__snprintf_chk@plt+0x3608>
   14774:	mov	r0, #0
   14778:	bl	110f0 <dcgettext@plt>
   1477c:	ldr	r3, [r5]
   14780:	ldr	r2, [r5, #20]
   14784:	str	r2, [sp, #16]
   14788:	ldr	r2, [r5, #16]
   1478c:	str	r2, [sp, #12]
   14790:	ldr	r2, [r5, #12]
   14794:	str	r2, [sp, #8]
   14798:	ldr	r2, [r5, #8]
   1479c:	str	r2, [sp, #4]
   147a0:	ldr	r2, [r5, #4]
   147a4:	str	r2, [sp]
   147a8:	mov	r2, r0
   147ac:	mov	r1, #1
   147b0:	mov	r0, r4
   147b4:	bl	112b8 <__fprintf_chk@plt>
   147b8:	b	14674 <__snprintf_chk@plt+0x3308>
   147bc:	mov	r2, #5
   147c0:	ldr	r1, [pc, #432]	; 14978 <__snprintf_chk@plt+0x360c>
   147c4:	mov	r0, #0
   147c8:	bl	110f0 <dcgettext@plt>
   147cc:	ldr	r3, [r5]
   147d0:	ldr	r2, [r5, #24]
   147d4:	str	r2, [sp, #20]
   147d8:	ldr	r2, [r5, #20]
   147dc:	str	r2, [sp, #16]
   147e0:	ldr	r2, [r5, #16]
   147e4:	str	r2, [sp, #12]
   147e8:	ldr	r2, [r5, #12]
   147ec:	str	r2, [sp, #8]
   147f0:	ldr	r2, [r5, #8]
   147f4:	str	r2, [sp, #4]
   147f8:	ldr	r2, [r5, #4]
   147fc:	str	r2, [sp]
   14800:	mov	r2, r0
   14804:	mov	r1, #1
   14808:	mov	r0, r4
   1480c:	bl	112b8 <__fprintf_chk@plt>
   14810:	b	14674 <__snprintf_chk@plt+0x3308>
   14814:	mov	r2, #5
   14818:	ldr	r1, [pc, #348]	; 1497c <__snprintf_chk@plt+0x3610>
   1481c:	mov	r0, #0
   14820:	bl	110f0 <dcgettext@plt>
   14824:	ldr	r3, [r5]
   14828:	ldr	r2, [r5, #28]
   1482c:	str	r2, [sp, #24]
   14830:	ldr	r2, [r5, #24]
   14834:	str	r2, [sp, #20]
   14838:	ldr	r2, [r5, #20]
   1483c:	str	r2, [sp, #16]
   14840:	ldr	r2, [r5, #16]
   14844:	str	r2, [sp, #12]
   14848:	ldr	r2, [r5, #12]
   1484c:	str	r2, [sp, #8]
   14850:	ldr	r2, [r5, #8]
   14854:	str	r2, [sp, #4]
   14858:	ldr	r2, [r5, #4]
   1485c:	str	r2, [sp]
   14860:	mov	r2, r0
   14864:	mov	r1, #1
   14868:	mov	r0, r4
   1486c:	bl	112b8 <__fprintf_chk@plt>
   14870:	b	14674 <__snprintf_chk@plt+0x3308>
   14874:	mov	r2, #5
   14878:	ldr	r1, [pc, #256]	; 14980 <__snprintf_chk@plt+0x3614>
   1487c:	mov	r0, #0
   14880:	bl	110f0 <dcgettext@plt>
   14884:	ldr	r3, [r5]
   14888:	ldr	r2, [r5, #32]
   1488c:	str	r2, [sp, #28]
   14890:	ldr	r2, [r5, #28]
   14894:	str	r2, [sp, #24]
   14898:	ldr	r2, [r5, #24]
   1489c:	str	r2, [sp, #20]
   148a0:	ldr	r2, [r5, #20]
   148a4:	str	r2, [sp, #16]
   148a8:	ldr	r2, [r5, #16]
   148ac:	str	r2, [sp, #12]
   148b0:	ldr	r2, [r5, #12]
   148b4:	str	r2, [sp, #8]
   148b8:	ldr	r2, [r5, #8]
   148bc:	str	r2, [sp, #4]
   148c0:	ldr	r2, [r5, #4]
   148c4:	str	r2, [sp]
   148c8:	mov	r2, r0
   148cc:	mov	r1, #1
   148d0:	mov	r0, r4
   148d4:	bl	112b8 <__fprintf_chk@plt>
   148d8:	b	14674 <__snprintf_chk@plt+0x3308>
   148dc:	mov	r2, #5
   148e0:	ldr	r1, [pc, #156]	; 14984 <__snprintf_chk@plt+0x3618>
   148e4:	mov	r0, #0
   148e8:	bl	110f0 <dcgettext@plt>
   148ec:	ldr	r3, [r5]
   148f0:	ldr	r2, [r5, #32]
   148f4:	str	r2, [sp, #28]
   148f8:	ldr	r2, [r5, #28]
   148fc:	str	r2, [sp, #24]
   14900:	ldr	r2, [r5, #24]
   14904:	str	r2, [sp, #20]
   14908:	ldr	r2, [r5, #20]
   1490c:	str	r2, [sp, #16]
   14910:	ldr	r2, [r5, #16]
   14914:	str	r2, [sp, #12]
   14918:	ldr	r2, [r5, #12]
   1491c:	str	r2, [sp, #8]
   14920:	ldr	r2, [r5, #8]
   14924:	str	r2, [sp, #4]
   14928:	ldr	r2, [r5, #4]
   1492c:	str	r2, [sp]
   14930:	mov	r2, r0
   14934:	mov	r1, #1
   14938:	mov	r0, r4
   1493c:	bl	112b8 <__fprintf_chk@plt>
   14940:	b	14674 <__snprintf_chk@plt+0x3308>
   14944:	andeq	r6, r1, ip, lsl #17
   14948:	andeq	r6, r1, r0, lsr #17
   1494c:	andeq	r0, r0, r6, ror #15
   14950:	andeq	r6, r1, r8, ror fp
   14954:	andeq	r6, r1, r4, lsr #17
   14958:	andeq	r6, r1, r0, asr r9
   1495c:	muleq	r1, r8, r8
   14960:	andeq	r6, r1, r4, ror r9
   14964:	andeq	r6, r1, r4, lsl #19
   14968:	muleq	r1, ip, r9
   1496c:			; <UNDEFINED> instruction: 0x000169b8
   14970:	ldrdeq	r6, [r1], -r8
   14974:	strdeq	r6, [r1], -ip
   14978:	andeq	r6, r1, r4, lsr #20
   1497c:	andeq	r6, r1, r0, asr sl
   14980:	andeq	r6, r1, r0, lsl #21
   14984:			; <UNDEFINED> instruction: 0x00016ab4
   14988:	push	{r4, r5, lr}
   1498c:	sub	sp, sp, #12
   14990:	ldr	r5, [sp, #24]
   14994:	ldr	ip, [r5]
   14998:	cmp	ip, #0
   1499c:	beq	149cc <__snprintf_chk@plt+0x3660>
   149a0:	mov	lr, r5
   149a4:	mov	ip, #0
   149a8:	add	ip, ip, #1
   149ac:	ldr	r4, [lr, #4]!
   149b0:	cmp	r4, #0
   149b4:	bne	149a8 <__snprintf_chk@plt+0x363c>
   149b8:	str	ip, [sp, #4]
   149bc:	str	r5, [sp]
   149c0:	bl	14568 <__snprintf_chk@plt+0x31fc>
   149c4:	add	sp, sp, #12
   149c8:	pop	{r4, r5, pc}
   149cc:	mov	ip, #0
   149d0:	b	149b8 <__snprintf_chk@plt+0x364c>
   149d4:	push	{r4, r5, lr}
   149d8:	sub	sp, sp, #52	; 0x34
   149dc:	ldr	r4, [sp, #64]	; 0x40
   149e0:	sub	r4, r4, #4
   149e4:	add	r5, sp, #4
   149e8:	mov	ip, #0
   149ec:	ldr	lr, [r4, #4]!
   149f0:	str	lr, [r5, #4]!
   149f4:	cmp	lr, #0
   149f8:	beq	14a08 <__snprintf_chk@plt+0x369c>
   149fc:	add	ip, ip, #1
   14a00:	cmp	ip, #10
   14a04:	bne	149ec <__snprintf_chk@plt+0x3680>
   14a08:	str	ip, [sp, #4]
   14a0c:	add	ip, sp, #8
   14a10:	str	ip, [sp]
   14a14:	bl	14568 <__snprintf_chk@plt+0x31fc>
   14a18:	add	sp, sp, #52	; 0x34
   14a1c:	pop	{r4, r5, pc}
   14a20:	push	{r3}		; (str r3, [sp, #-4]!)
   14a24:	push	{lr}		; (str lr, [sp, #-4]!)
   14a28:	sub	sp, sp, #16
   14a2c:	add	r3, sp, #24
   14a30:	str	r3, [sp, #12]
   14a34:	str	r3, [sp]
   14a38:	ldr	r3, [sp, #20]
   14a3c:	bl	149d4 <__snprintf_chk@plt+0x3668>
   14a40:	add	sp, sp, #16
   14a44:	pop	{lr}		; (ldr lr, [sp], #4)
   14a48:	add	sp, sp, #4
   14a4c:	bx	lr
   14a50:	push	{r4, lr}
   14a54:	ldr	r3, [pc, #112]	; 14acc <__snprintf_chk@plt+0x3760>
   14a58:	ldr	r1, [r3]
   14a5c:	mov	r0, #10
   14a60:	bl	110e4 <fputc_unlocked@plt>
   14a64:	mov	r2, #5
   14a68:	ldr	r1, [pc, #96]	; 14ad0 <__snprintf_chk@plt+0x3764>
   14a6c:	mov	r0, #0
   14a70:	bl	110f0 <dcgettext@plt>
   14a74:	ldr	r2, [pc, #88]	; 14ad4 <__snprintf_chk@plt+0x3768>
   14a78:	mov	r1, r0
   14a7c:	mov	r0, #1
   14a80:	bl	11288 <__printf_chk@plt>
   14a84:	mov	r2, #5
   14a88:	ldr	r1, [pc, #72]	; 14ad8 <__snprintf_chk@plt+0x376c>
   14a8c:	mov	r0, #0
   14a90:	bl	110f0 <dcgettext@plt>
   14a94:	ldr	r3, [pc, #64]	; 14adc <__snprintf_chk@plt+0x3770>
   14a98:	ldr	r2, [pc, #64]	; 14ae0 <__snprintf_chk@plt+0x3774>
   14a9c:	mov	r1, r0
   14aa0:	mov	r0, #1
   14aa4:	bl	11288 <__printf_chk@plt>
   14aa8:	mov	r2, #5
   14aac:	ldr	r1, [pc, #48]	; 14ae4 <__snprintf_chk@plt+0x3778>
   14ab0:	mov	r0, #0
   14ab4:	bl	110f0 <dcgettext@plt>
   14ab8:	ldr	r2, [pc, #40]	; 14ae8 <__snprintf_chk@plt+0x377c>
   14abc:	mov	r1, r0
   14ac0:	mov	r0, #1
   14ac4:	bl	11288 <__printf_chk@plt>
   14ac8:	pop	{r4, pc}
   14acc:	andeq	r7, r2, r4, lsr r3
   14ad0:	strdeq	r6, [r1], -r0
   14ad4:	andeq	r6, r1, r4, lsl #22
   14ad8:	andeq	r6, r1, ip, lsl fp
   14adc:	andeq	r6, r1, ip, ror r4
   14ae0:	andeq	r6, r1, r4, lsr #9
   14ae4:	andeq	r6, r1, r0, lsr fp
   14ae8:	andeq	r6, r1, r8, asr fp
   14aec:	push	{r4, lr}
   14af0:	bl	151c8 <__snprintf_chk@plt+0x3e5c>
   14af4:	cmp	r0, #0
   14af8:	popne	{r4, pc}
   14afc:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14b00:	push	{r4, lr}
   14b04:	bl	151c8 <__snprintf_chk@plt+0x3e5c>
   14b08:	cmp	r0, #0
   14b0c:	popne	{r4, pc}
   14b10:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14b14:	push	{r4, lr}
   14b18:	bl	14aec <__snprintf_chk@plt+0x3780>
   14b1c:	pop	{r4, pc}
   14b20:	push	{r4, r5, r6, lr}
   14b24:	mov	r5, r0
   14b28:	mov	r4, r1
   14b2c:	bl	151f8 <__snprintf_chk@plt+0x3e8c>
   14b30:	cmp	r0, #0
   14b34:	popne	{r4, r5, r6, pc}
   14b38:	adds	r4, r4, #0
   14b3c:	movne	r4, #1
   14b40:	cmp	r5, #0
   14b44:	orreq	r4, r4, #1
   14b48:	cmp	r4, #0
   14b4c:	popeq	{r4, r5, r6, pc}
   14b50:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14b54:	push	{r4, lr}
   14b58:	cmp	r1, #0
   14b5c:	orreq	r1, r1, #1
   14b60:	bl	151f8 <__snprintf_chk@plt+0x3e8c>
   14b64:	cmp	r0, #0
   14b68:	popne	{r4, pc}
   14b6c:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14b70:	push	{r4, r5, r6, lr}
   14b74:	mov	r6, r0
   14b78:	mov	r5, r1
   14b7c:	mov	r4, r2
   14b80:	bl	1558c <__snprintf_chk@plt+0x4220>
   14b84:	cmp	r0, #0
   14b88:	popne	{r4, r5, r6, pc}
   14b8c:	cmp	r6, #0
   14b90:	beq	14ba0 <__snprintf_chk@plt+0x3834>
   14b94:	cmp	r5, #0
   14b98:	cmpne	r4, #0
   14b9c:	popeq	{r4, r5, r6, pc}
   14ba0:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14ba4:	push	{r4, lr}
   14ba8:	bl	14b70 <__snprintf_chk@plt+0x3804>
   14bac:	pop	{r4, pc}
   14bb0:	push	{r4, lr}
   14bb4:	mov	ip, r1
   14bb8:	mov	r3, r2
   14bbc:	cmp	r2, #0
   14bc0:	cmpne	r1, #0
   14bc4:	moveq	r3, #1
   14bc8:	moveq	ip, r3
   14bcc:	mov	r2, r3
   14bd0:	mov	r1, ip
   14bd4:	bl	1558c <__snprintf_chk@plt+0x4220>
   14bd8:	cmp	r0, #0
   14bdc:	popne	{r4, pc}
   14be0:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14be4:	push	{r4, lr}
   14be8:	mov	r2, r1
   14bec:	mov	r1, r0
   14bf0:	mov	r0, #0
   14bf4:	bl	14b70 <__snprintf_chk@plt+0x3804>
   14bf8:	pop	{r4, pc}
   14bfc:	push	{r4, lr}
   14c00:	mov	r2, r1
   14c04:	mov	r1, r0
   14c08:	mov	r0, #0
   14c0c:	bl	14bb0 <__snprintf_chk@plt+0x3844>
   14c10:	pop	{r4, pc}
   14c14:	push	{r4, r5, r6, r7, r8, lr}
   14c18:	mov	r5, r1
   14c1c:	mov	r6, r2
   14c20:	ldr	r4, [r1]
   14c24:	subs	r7, r0, #0
   14c28:	beq	14c44 <__snprintf_chk@plt+0x38d8>
   14c2c:	lsr	r2, r4, #1
   14c30:	add	r3, r2, #1
   14c34:	mvn	r3, r3
   14c38:	cmp	r4, r3
   14c3c:	bls	14c68 <__snprintf_chk@plt+0x38fc>
   14c40:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14c44:	cmp	r4, #0
   14c48:	bne	14c70 <__snprintf_chk@plt+0x3904>
   14c4c:	mov	r1, r2
   14c50:	mov	r0, #64	; 0x40
   14c54:	bl	156e0 <__snprintf_chk@plt+0x4374>
   14c58:	cmp	r0, #0
   14c5c:	movne	r4, r0
   14c60:	addeq	r4, r0, #1
   14c64:	b	14c70 <__snprintf_chk@plt+0x3904>
   14c68:	add	r4, r4, #1
   14c6c:	add	r4, r4, r2
   14c70:	mov	r2, r6
   14c74:	mov	r1, r4
   14c78:	mov	r0, r7
   14c7c:	bl	14b70 <__snprintf_chk@plt+0x3804>
   14c80:	str	r4, [r5]
   14c84:	pop	{r4, r5, r6, r7, r8, pc}
   14c88:	push	{r4, lr}
   14c8c:	mov	r2, #1
   14c90:	bl	14c14 <__snprintf_chk@plt+0x38a8>
   14c94:	pop	{r4, pc}
   14c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c9c:	sub	sp, sp, #12
   14ca0:	mov	fp, r0
   14ca4:	mov	sl, r1
   14ca8:	mov	r9, r2
   14cac:	mov	r7, r3
   14cb0:	ldr	r6, [sp, #48]	; 0x30
   14cb4:	ldr	r5, [r1]
   14cb8:	asrs	r4, r5, #1
   14cbc:	bmi	14e18 <__snprintf_chk@plt+0x3aac>
   14cc0:	cmp	r5, #0
   14cc4:	blt	14e2c <__snprintf_chk@plt+0x3ac0>
   14cc8:	mvn	r3, #-2147483648	; 0x80000000
   14ccc:	sub	r3, r3, r4
   14cd0:	cmp	r5, r3
   14cd4:	movle	r3, #0
   14cd8:	movgt	r3, #1
   14cdc:	cmp	r3, #0
   14ce0:	addeq	r4, r4, r5
   14ce4:	mvnne	r4, #-2147483648	; 0x80000000
   14ce8:	mvn	r8, r7
   14cec:	lsr	r8, r8, #31
   14cf0:	cmp	r7, r4
   14cf4:	movge	r3, #0
   14cf8:	andlt	r3, r8, #1
   14cfc:	cmp	r3, #0
   14d00:	movne	r4, r7
   14d04:	cmp	r6, #0
   14d08:	blt	14e40 <__snprintf_chk@plt+0x3ad4>
   14d0c:	cmp	r6, #0
   14d10:	beq	14eec <__snprintf_chk@plt+0x3b80>
   14d14:	cmp	r4, #0
   14d18:	blt	14e9c <__snprintf_chk@plt+0x3b30>
   14d1c:	mov	r1, r6
   14d20:	mvn	r0, #-2147483648	; 0x80000000
   14d24:	bl	158ec <__snprintf_chk@plt+0x4580>
   14d28:	cmp	r0, r4
   14d2c:	movge	r0, #0
   14d30:	movlt	r0, #1
   14d34:	cmp	r0, #0
   14d38:	mvnne	r3, #-2147483648	; 0x80000000
   14d3c:	strne	r3, [sp, #4]
   14d40:	beq	14ed4 <__snprintf_chk@plt+0x3b68>
   14d44:	mov	r1, r6
   14d48:	ldr	r0, [sp, #4]
   14d4c:	bl	158ec <__snprintf_chk@plt+0x4580>
   14d50:	mov	r4, r0
   14d54:	mov	r1, r6
   14d58:	ldr	r0, [sp, #4]
   14d5c:	bl	15b0c <__snprintf_chk@plt+0x47a0>
   14d60:	ldr	r3, [sp, #4]
   14d64:	sub	r1, r3, r1
   14d68:	cmp	fp, #0
   14d6c:	moveq	r3, #0
   14d70:	streq	r3, [sl]
   14d74:	sub	r3, r4, r5
   14d78:	cmp	r3, r9
   14d7c:	bge	14e04 <__snprintf_chk@plt+0x3a98>
   14d80:	cmp	r9, #0
   14d84:	blt	14ef8 <__snprintf_chk@plt+0x3b8c>
   14d88:	cmp	r5, #0
   14d8c:	blt	14f0c <__snprintf_chk@plt+0x3ba0>
   14d90:	mvn	r3, #-2147483648	; 0x80000000
   14d94:	sub	r3, r3, r9
   14d98:	cmp	r5, r3
   14d9c:	movle	r3, #0
   14da0:	movgt	r3, #1
   14da4:	cmp	r3, #0
   14da8:	bne	14fb4 <__snprintf_chk@plt+0x3c48>
   14dac:	add	r5, r5, r9
   14db0:	mov	r4, r5
   14db4:	cmp	r7, r5
   14db8:	movge	r7, #0
   14dbc:	andlt	r7, r8, #1
   14dc0:	cmp	r7, #0
   14dc4:	bne	14fb4 <__snprintf_chk@plt+0x3c48>
   14dc8:	cmp	r6, #0
   14dcc:	blt	14f20 <__snprintf_chk@plt+0x3bb4>
   14dd0:	cmp	r6, #0
   14dd4:	beq	14e00 <__snprintf_chk@plt+0x3a94>
   14dd8:	cmp	r5, #0
   14ddc:	blt	14f7c <__snprintf_chk@plt+0x3c10>
   14de0:	mov	r1, r6
   14de4:	mvn	r0, #-2147483648	; 0x80000000
   14de8:	bl	158ec <__snprintf_chk@plt+0x4580>
   14dec:	cmp	r5, r0
   14df0:	movle	r0, #0
   14df4:	movgt	r0, #1
   14df8:	cmp	r0, #0
   14dfc:	bne	14fb4 <__snprintf_chk@plt+0x3c48>
   14e00:	mul	r1, r5, r6
   14e04:	mov	r0, fp
   14e08:	bl	14b20 <__snprintf_chk@plt+0x37b4>
   14e0c:	str	r4, [sl]
   14e10:	add	sp, sp, #12
   14e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e18:	rsb	r3, r4, #-2147483648	; 0x80000000
   14e1c:	cmp	r5, r3
   14e20:	movge	r3, #0
   14e24:	movlt	r3, #1
   14e28:	b	14cdc <__snprintf_chk@plt+0x3970>
   14e2c:	rsb	r3, r5, #-2147483648	; 0x80000000
   14e30:	cmp	r4, r3
   14e34:	movge	r3, #0
   14e38:	movlt	r3, #1
   14e3c:	b	14cdc <__snprintf_chk@plt+0x3970>
   14e40:	cmp	r4, #0
   14e44:	blt	14e6c <__snprintf_chk@plt+0x3b00>
   14e48:	cmn	r6, #1
   14e4c:	beq	14e88 <__snprintf_chk@plt+0x3b1c>
   14e50:	mov	r1, r6
   14e54:	mov	r0, #-2147483648	; 0x80000000
   14e58:	bl	158ec <__snprintf_chk@plt+0x4580>
   14e5c:	cmp	r0, r4
   14e60:	movge	r0, #0
   14e64:	movlt	r0, #1
   14e68:	b	14d34 <__snprintf_chk@plt+0x39c8>
   14e6c:	mov	r1, r6
   14e70:	mvn	r0, #-2147483648	; 0x80000000
   14e74:	bl	158ec <__snprintf_chk@plt+0x4580>
   14e78:	cmp	r0, r4
   14e7c:	movle	r0, #0
   14e80:	movgt	r0, #1
   14e84:	b	14d34 <__snprintf_chk@plt+0x39c8>
   14e88:	add	r0, r4, #-2147483648	; 0x80000000
   14e8c:	cmp	r0, #0
   14e90:	movle	r0, #0
   14e94:	movgt	r0, #1
   14e98:	b	14d34 <__snprintf_chk@plt+0x39c8>
   14e9c:	cmn	r4, #1
   14ea0:	beq	14ec0 <__snprintf_chk@plt+0x3b54>
   14ea4:	mov	r1, r4
   14ea8:	mov	r0, #-2147483648	; 0x80000000
   14eac:	bl	158ec <__snprintf_chk@plt+0x4580>
   14eb0:	cmp	r6, r0
   14eb4:	movle	r0, #0
   14eb8:	movgt	r0, #1
   14ebc:	b	14d34 <__snprintf_chk@plt+0x39c8>
   14ec0:	add	r0, r6, #-2147483648	; 0x80000000
   14ec4:	cmp	r0, #0
   14ec8:	movle	r0, #0
   14ecc:	movgt	r0, #1
   14ed0:	b	14d34 <__snprintf_chk@plt+0x39c8>
   14ed4:	mul	r1, r6, r4
   14ed8:	cmp	r1, #63	; 0x3f
   14edc:	movle	r3, #64	; 0x40
   14ee0:	strle	r3, [sp, #4]
   14ee4:	bgt	14d68 <__snprintf_chk@plt+0x39fc>
   14ee8:	b	14d44 <__snprintf_chk@plt+0x39d8>
   14eec:	mov	r3, #64	; 0x40
   14ef0:	str	r3, [sp, #4]
   14ef4:	b	14d44 <__snprintf_chk@plt+0x39d8>
   14ef8:	rsb	r3, r9, #-2147483648	; 0x80000000
   14efc:	cmp	r5, r3
   14f00:	movge	r3, #0
   14f04:	movlt	r3, #1
   14f08:	b	14da4 <__snprintf_chk@plt+0x3a38>
   14f0c:	rsb	r3, r5, #-2147483648	; 0x80000000
   14f10:	cmp	r9, r3
   14f14:	movge	r3, #0
   14f18:	movlt	r3, #1
   14f1c:	b	14da4 <__snprintf_chk@plt+0x3a38>
   14f20:	cmp	r5, #0
   14f24:	blt	14f4c <__snprintf_chk@plt+0x3be0>
   14f28:	cmn	r6, #1
   14f2c:	beq	14f68 <__snprintf_chk@plt+0x3bfc>
   14f30:	mov	r1, r6
   14f34:	mov	r0, #-2147483648	; 0x80000000
   14f38:	bl	158ec <__snprintf_chk@plt+0x4580>
   14f3c:	cmp	r5, r0
   14f40:	movle	r0, #0
   14f44:	movgt	r0, #1
   14f48:	b	14df8 <__snprintf_chk@plt+0x3a8c>
   14f4c:	mov	r1, r6
   14f50:	mvn	r0, #-2147483648	; 0x80000000
   14f54:	bl	158ec <__snprintf_chk@plt+0x4580>
   14f58:	cmp	r5, r0
   14f5c:	movge	r0, #0
   14f60:	movlt	r0, #1
   14f64:	b	14df8 <__snprintf_chk@plt+0x3a8c>
   14f68:	add	r0, r5, #-2147483648	; 0x80000000
   14f6c:	cmp	r0, #0
   14f70:	movle	r0, #0
   14f74:	movgt	r0, #1
   14f78:	b	14df8 <__snprintf_chk@plt+0x3a8c>
   14f7c:	cmn	r5, #1
   14f80:	beq	14fa0 <__snprintf_chk@plt+0x3c34>
   14f84:	mov	r1, r5
   14f88:	mov	r0, #-2147483648	; 0x80000000
   14f8c:	bl	158ec <__snprintf_chk@plt+0x4580>
   14f90:	cmp	r6, r0
   14f94:	movle	r0, #0
   14f98:	movgt	r0, #1
   14f9c:	b	14df8 <__snprintf_chk@plt+0x3a8c>
   14fa0:	add	r0, r6, #-2147483648	; 0x80000000
   14fa4:	cmp	r0, #0
   14fa8:	movle	r0, #0
   14fac:	movgt	r0, #1
   14fb0:	b	14df8 <__snprintf_chk@plt+0x3a8c>
   14fb4:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14fb8:	push	{r4, lr}
   14fbc:	bl	15178 <__snprintf_chk@plt+0x3e0c>
   14fc0:	cmp	r0, #0
   14fc4:	popne	{r4, pc}
   14fc8:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14fcc:	push	{r4, lr}
   14fd0:	mov	r1, #1
   14fd4:	bl	14fb8 <__snprintf_chk@plt+0x3c4c>
   14fd8:	pop	{r4, pc}
   14fdc:	push	{r4, lr}
   14fe0:	bl	15178 <__snprintf_chk@plt+0x3e0c>
   14fe4:	cmp	r0, #0
   14fe8:	popne	{r4, pc}
   14fec:	bl	15090 <__snprintf_chk@plt+0x3d24>
   14ff0:	push	{r4, lr}
   14ff4:	mov	r1, #1
   14ff8:	bl	14fdc <__snprintf_chk@plt+0x3c70>
   14ffc:	pop	{r4, pc}
   15000:	push	{r4, r5, r6, lr}
   15004:	mov	r5, r0
   15008:	mov	r4, r1
   1500c:	mov	r0, r1
   15010:	bl	14aec <__snprintf_chk@plt+0x3780>
   15014:	mov	r2, r4
   15018:	mov	r1, r5
   1501c:	bl	110a8 <memcpy@plt>
   15020:	pop	{r4, r5, r6, pc}
   15024:	push	{r4, r5, r6, lr}
   15028:	mov	r5, r0
   1502c:	mov	r4, r1
   15030:	mov	r0, r1
   15034:	bl	14b00 <__snprintf_chk@plt+0x3794>
   15038:	mov	r2, r4
   1503c:	mov	r1, r5
   15040:	bl	110a8 <memcpy@plt>
   15044:	pop	{r4, r5, r6, pc}
   15048:	push	{r4, r5, r6, lr}
   1504c:	mov	r5, r0
   15050:	mov	r4, r1
   15054:	add	r0, r1, #1
   15058:	bl	14b00 <__snprintf_chk@plt+0x3794>
   1505c:	mov	r2, #0
   15060:	strb	r2, [r0, r4]
   15064:	mov	r2, r4
   15068:	mov	r1, r5
   1506c:	bl	110a8 <memcpy@plt>
   15070:	pop	{r4, r5, r6, pc}
   15074:	push	{r4, lr}
   15078:	mov	r4, r0
   1507c:	bl	11228 <strlen@plt>
   15080:	add	r1, r0, #1
   15084:	mov	r0, r4
   15088:	bl	15000 <__snprintf_chk@plt+0x3c94>
   1508c:	pop	{r4, pc}
   15090:	push	{r4, lr}
   15094:	ldr	r3, [pc, #40]	; 150c4 <__snprintf_chk@plt+0x3d58>
   15098:	ldr	r4, [r3]
   1509c:	mov	r2, #5
   150a0:	ldr	r1, [pc, #32]	; 150c8 <__snprintf_chk@plt+0x3d5c>
   150a4:	mov	r0, #0
   150a8:	bl	110f0 <dcgettext@plt>
   150ac:	mov	r3, r0
   150b0:	ldr	r2, [pc, #20]	; 150cc <__snprintf_chk@plt+0x3d60>
   150b4:	mov	r1, #0
   150b8:	mov	r0, r4
   150bc:	bl	111a4 <error@plt>
   150c0:	bl	11360 <abort@plt>
   150c4:	andeq	r7, r2, r4, lsr r1
   150c8:	andeq	r6, r1, r8, lsr #23
   150cc:	andeq	r6, r1, r8, asr r7
   150d0:	push	{r4, r5, r6, r7, r8, lr}
   150d4:	sub	sp, sp, #8
   150d8:	mov	r5, r0
   150dc:	mov	r4, r1
   150e0:	mov	r7, r2
   150e4:	mov	r8, r3
   150e8:	bl	1124c <__errno_location@plt>
   150ec:	mov	r6, r0
   150f0:	mov	r3, #0
   150f4:	str	r3, [r0]
   150f8:	add	r1, sp, #4
   150fc:	mov	r0, r5
   15100:	blx	r8
   15104:	ldr	r3, [sp, #4]
   15108:	cmp	r5, r3
   1510c:	beq	15170 <__snprintf_chk@plt+0x3e04>
   15110:	cmp	r4, #0
   15114:	beq	1514c <__snprintf_chk@plt+0x3de0>
   15118:	vcmp.f64	d0, #0.0
   1511c:	vmrs	APSR_nzcv, fpscr
   15120:	moveq	r0, #1
   15124:	beq	1513c <__snprintf_chk@plt+0x3dd0>
   15128:	ldr	r0, [r6]
   1512c:	subs	r0, r0, #34	; 0x22
   15130:	movne	r0, #1
   15134:	cmp	r4, #0
   15138:	beq	15140 <__snprintf_chk@plt+0x3dd4>
   1513c:	str	r3, [r4]
   15140:	vstr	d0, [r7]
   15144:	add	sp, sp, #8
   15148:	pop	{r4, r5, r6, r7, r8, pc}
   1514c:	ldrb	r2, [r3]
   15150:	cmp	r2, #0
   15154:	movne	r0, #0
   15158:	bne	15140 <__snprintf_chk@plt+0x3dd4>
   1515c:	vcmp.f64	d0, #0.0
   15160:	vmrs	APSR_nzcv, fpscr
   15164:	bne	15128 <__snprintf_chk@plt+0x3dbc>
   15168:	mov	r0, #1
   1516c:	b	15140 <__snprintf_chk@plt+0x3dd4>
   15170:	mov	r0, #0
   15174:	b	15134 <__snprintf_chk@plt+0x3dc8>
   15178:	push	{r4, lr}
   1517c:	mov	r2, r0
   15180:	mov	r3, r1
   15184:	cmp	r1, #0
   15188:	cmpne	r0, #0
   1518c:	moveq	r3, #1
   15190:	moveq	r2, r3
   15194:	umull	r0, r1, r2, r3
   15198:	cmp	r0, #0
   1519c:	cmpge	r1, #0
   151a0:	bne	151b4 <__snprintf_chk@plt+0x3e48>
   151a4:	mov	r1, r3
   151a8:	mov	r0, r2
   151ac:	bl	1103c <calloc@plt>
   151b0:	pop	{r4, pc}
   151b4:	bl	1124c <__errno_location@plt>
   151b8:	mov	r3, #12
   151bc:	str	r3, [r0]
   151c0:	mov	r0, #0
   151c4:	pop	{r4, pc}
   151c8:	push	{r4, lr}
   151cc:	cmp	r0, #0
   151d0:	moveq	r0, #1
   151d4:	cmp	r0, #0
   151d8:	blt	151e4 <__snprintf_chk@plt+0x3e78>
   151dc:	bl	111bc <malloc@plt>
   151e0:	pop	{r4, pc}
   151e4:	bl	1124c <__errno_location@plt>
   151e8:	mov	r3, #12
   151ec:	str	r3, [r0]
   151f0:	mov	r0, #0
   151f4:	pop	{r4, pc}
   151f8:	push	{r4, lr}
   151fc:	cmp	r0, #0
   15200:	beq	1521c <__snprintf_chk@plt+0x3eb0>
   15204:	cmp	r1, #0
   15208:	beq	15228 <__snprintf_chk@plt+0x3ebc>
   1520c:	cmp	r1, #0
   15210:	blt	15234 <__snprintf_chk@plt+0x3ec8>
   15214:	bl	11108 <realloc@plt>
   15218:	pop	{r4, pc}
   1521c:	mov	r0, r1
   15220:	bl	151c8 <__snprintf_chk@plt+0x3e5c>
   15224:	pop	{r4, pc}
   15228:	bl	12714 <__snprintf_chk@plt+0x13a8>
   1522c:	mov	r0, #0
   15230:	pop	{r4, pc}
   15234:	bl	1124c <__errno_location@plt>
   15238:	mov	r3, #12
   1523c:	str	r3, [r0]
   15240:	mov	r0, #0
   15244:	pop	{r4, pc}
   15248:	push	{r4, r5, r6, lr}
   1524c:	mov	r5, r0
   15250:	mov	r4, r1
   15254:	ldr	r3, [pc, #108]	; 152c8 <__snprintf_chk@plt+0x3f5c>
   15258:	ldr	r3, [r3]
   1525c:	cmp	r3, #0
   15260:	beq	15284 <__snprintf_chk@plt+0x3f18>
   15264:	ldr	r3, [pc, #92]	; 152c8 <__snprintf_chk@plt+0x3f5c>
   15268:	ldr	r2, [r3]
   1526c:	cmp	r2, #0
   15270:	beq	152a0 <__snprintf_chk@plt+0x3f34>
   15274:	mov	r1, r4
   15278:	mov	r0, r5
   1527c:	bl	112dc <strtod_l@plt>
   15280:	pop	{r4, r5, r6, pc}
   15284:	mov	r2, #0
   15288:	ldr	r1, [pc, #60]	; 152cc <__snprintf_chk@plt+0x3f60>
   1528c:	ldr	r0, [pc, #60]	; 152d0 <__snprintf_chk@plt+0x3f64>
   15290:	bl	11324 <newlocale@plt>
   15294:	ldr	r3, [pc, #44]	; 152c8 <__snprintf_chk@plt+0x3f5c>
   15298:	str	r0, [r3]
   1529c:	b	15264 <__snprintf_chk@plt+0x3ef8>
   152a0:	cmp	r4, #0
   152a4:	beq	152b4 <__snprintf_chk@plt+0x3f48>
   152a8:	str	r5, [r4]
   152ac:	vldr	d0, [pc, #12]	; 152c0 <__snprintf_chk@plt+0x3f54>
   152b0:	pop	{r4, r5, r6, pc}
   152b4:	vldr	d0, [pc, #4]	; 152c0 <__snprintf_chk@plt+0x3f54>
   152b8:	pop	{r4, r5, r6, pc}
   152bc:	nop			; (mov r0, r0)
	...
   152c8:	muleq	r2, r8, r4
   152cc:			; <UNDEFINED> instruction: 0x00016bbc
   152d0:			; <UNDEFINED> instruction: 0x00001fbf
   152d4:	push	{r4, r5, r6, lr}
   152d8:	mov	r5, r0
   152dc:	bl	1118c <__fpending@plt>
   152e0:	mov	r6, r0
   152e4:	ldr	r4, [r5]
   152e8:	and	r4, r4, #32
   152ec:	mov	r0, r5
   152f0:	bl	1534c <__snprintf_chk@plt+0x3fe0>
   152f4:	cmp	r4, #0
   152f8:	bne	15320 <__snprintf_chk@plt+0x3fb4>
   152fc:	cmp	r0, #0
   15300:	popeq	{r4, r5, r6, pc}
   15304:	cmp	r6, #0
   15308:	bne	1533c <__snprintf_chk@plt+0x3fd0>
   1530c:	bl	1124c <__errno_location@plt>
   15310:	ldr	r0, [r0]
   15314:	subs	r0, r0, #9
   15318:	mvnne	r0, #0
   1531c:	pop	{r4, r5, r6, pc}
   15320:	cmp	r0, #0
   15324:	bne	15344 <__snprintf_chk@plt+0x3fd8>
   15328:	bl	1124c <__errno_location@plt>
   1532c:	mov	r3, #0
   15330:	str	r3, [r0]
   15334:	mvn	r0, #0
   15338:	pop	{r4, r5, r6, pc}
   1533c:	mvn	r0, #0
   15340:	pop	{r4, r5, r6, pc}
   15344:	mvn	r0, #0
   15348:	pop	{r4, r5, r6, pc}
   1534c:	push	{r4, r5, r6, lr}
   15350:	sub	sp, sp, #8
   15354:	mov	r4, r0
   15358:	bl	112ac <fileno@plt>
   1535c:	cmp	r0, #0
   15360:	blt	153d8 <__snprintf_chk@plt+0x406c>
   15364:	mov	r0, r4
   15368:	bl	111e0 <__freading@plt>
   1536c:	cmp	r0, #0
   15370:	beq	153a4 <__snprintf_chk@plt+0x4038>
   15374:	mov	r0, r4
   15378:	bl	112ac <fileno@plt>
   1537c:	mov	r3, #1
   15380:	str	r3, [sp]
   15384:	mov	r2, #0
   15388:	mov	r3, #0
   1538c:	bl	1115c <lseek64@plt>
   15390:	mvn	r2, #0
   15394:	mvn	r3, #0
   15398:	cmp	r1, r3
   1539c:	cmpeq	r0, r2
   153a0:	beq	153e4 <__snprintf_chk@plt+0x4078>
   153a4:	mov	r0, r4
   153a8:	bl	153f4 <__snprintf_chk@plt+0x4088>
   153ac:	cmp	r0, #0
   153b0:	beq	153e4 <__snprintf_chk@plt+0x4078>
   153b4:	bl	1124c <__errno_location@plt>
   153b8:	mov	r5, r0
   153bc:	ldr	r6, [r0]
   153c0:	mov	r0, r4
   153c4:	bl	112c4 <fclose@plt>
   153c8:	cmp	r6, #0
   153cc:	strne	r6, [r5]
   153d0:	mvnne	r0, #0
   153d4:	b	153ec <__snprintf_chk@plt+0x4080>
   153d8:	mov	r0, r4
   153dc:	bl	112c4 <fclose@plt>
   153e0:	b	153ec <__snprintf_chk@plt+0x4080>
   153e4:	mov	r0, r4
   153e8:	bl	112c4 <fclose@plt>
   153ec:	add	sp, sp, #8
   153f0:	pop	{r4, r5, r6, pc}
   153f4:	push	{r4, lr}
   153f8:	sub	sp, sp, #8
   153fc:	subs	r4, r0, #0
   15400:	beq	15414 <__snprintf_chk@plt+0x40a8>
   15404:	mov	r0, r4
   15408:	bl	111e0 <__freading@plt>
   1540c:	cmp	r0, #0
   15410:	bne	15424 <__snprintf_chk@plt+0x40b8>
   15414:	mov	r0, r4
   15418:	bl	11078 <fflush@plt>
   1541c:	add	sp, sp, #8
   15420:	pop	{r4, pc}
   15424:	ldr	r3, [r4]
   15428:	tst	r3, #256	; 0x100
   1542c:	bne	1543c <__snprintf_chk@plt+0x40d0>
   15430:	mov	r0, r4
   15434:	bl	11078 <fflush@plt>
   15438:	b	1541c <__snprintf_chk@plt+0x40b0>
   1543c:	mov	r3, #1
   15440:	str	r3, [sp]
   15444:	mov	r2, #0
   15448:	mov	r3, #0
   1544c:	mov	r0, r4
   15450:	bl	15458 <__snprintf_chk@plt+0x40ec>
   15454:	b	15430 <__snprintf_chk@plt+0x40c4>
   15458:	push	{r4, r5, r6, r7, lr}
   1545c:	sub	sp, sp, #12
   15460:	mov	r4, r0
   15464:	mov	r6, r2
   15468:	mov	r7, r3
   1546c:	ldr	r5, [sp, #32]
   15470:	ldr	r2, [r0, #8]
   15474:	ldr	r3, [r0, #4]
   15478:	cmp	r2, r3
   1547c:	beq	1549c <__snprintf_chk@plt+0x4130>
   15480:	str	r5, [sp]
   15484:	mov	r2, r6
   15488:	mov	r3, r7
   1548c:	mov	r0, r4
   15490:	bl	112d0 <fseeko64@plt>
   15494:	add	sp, sp, #12
   15498:	pop	{r4, r5, r6, r7, pc}
   1549c:	ldr	r2, [r0, #20]
   154a0:	ldr	r3, [r0, #16]
   154a4:	cmp	r2, r3
   154a8:	bne	15480 <__snprintf_chk@plt+0x4114>
   154ac:	ldr	r3, [r0, #36]	; 0x24
   154b0:	cmp	r3, #0
   154b4:	bne	15480 <__snprintf_chk@plt+0x4114>
   154b8:	bl	112ac <fileno@plt>
   154bc:	str	r5, [sp]
   154c0:	mov	r2, r6
   154c4:	mov	r3, r7
   154c8:	bl	1115c <lseek64@plt>
   154cc:	mvn	r2, #0
   154d0:	mvn	r3, #0
   154d4:	cmp	r1, r3
   154d8:	cmpeq	r0, r2
   154dc:	beq	154f8 <__snprintf_chk@plt+0x418c>
   154e0:	ldr	r3, [r4]
   154e4:	bic	r3, r3, #16
   154e8:	str	r3, [r4]
   154ec:	strd	r0, [r4, #80]	; 0x50
   154f0:	mov	r0, #0
   154f4:	b	15494 <__snprintf_chk@plt+0x4128>
   154f8:	mvn	r0, #0
   154fc:	b	15494 <__snprintf_chk@plt+0x4128>
   15500:	push	{r4, lr}
   15504:	mov	r0, #14
   15508:	bl	11318 <nl_langinfo@plt>
   1550c:	cmp	r0, #0
   15510:	beq	15528 <__snprintf_chk@plt+0x41bc>
   15514:	ldrb	r2, [r0]
   15518:	ldr	r3, [pc, #16]	; 15530 <__snprintf_chk@plt+0x41c4>
   1551c:	cmp	r2, #0
   15520:	moveq	r0, r3
   15524:	pop	{r4, pc}
   15528:	ldr	r0, [pc]	; 15530 <__snprintf_chk@plt+0x41c4>
   1552c:	pop	{r4, pc}
   15530:	andeq	r6, r1, r0, asr #23
   15534:	push	{r4, r5, r6, r7, lr}
   15538:	sub	sp, sp, #12
   1553c:	mov	r7, r1
   15540:	mov	r5, r2
   15544:	subs	r6, r0, #0
   15548:	addeq	r6, sp, #4
   1554c:	mov	r0, r6
   15550:	bl	11198 <mbrtowc@plt>
   15554:	mov	r4, r0
   15558:	cmp	r5, #0
   1555c:	cmnne	r0, #3
   15560:	bhi	15570 <__snprintf_chk@plt+0x4204>
   15564:	mov	r0, r4
   15568:	add	sp, sp, #12
   1556c:	pop	{r4, r5, r6, r7, pc}
   15570:	mov	r0, #0
   15574:	bl	155d8 <__snprintf_chk@plt+0x426c>
   15578:	cmp	r0, #0
   1557c:	ldrbeq	r3, [r7]
   15580:	streq	r3, [r6]
   15584:	moveq	r4, #1
   15588:	b	15564 <__snprintf_chk@plt+0x41f8>
   1558c:	push	{r4, r5, r6, lr}
   15590:	mov	r6, r0
   15594:	mov	r5, r1
   15598:	subs	r4, r2, #0
   1559c:	beq	155c8 <__snprintf_chk@plt+0x425c>
   155a0:	mov	r1, r4
   155a4:	mvn	r0, #0
   155a8:	bl	156e0 <__snprintf_chk@plt+0x4374>
   155ac:	cmp	r0, r5
   155b0:	bcs	155c8 <__snprintf_chk@plt+0x425c>
   155b4:	bl	1124c <__errno_location@plt>
   155b8:	mov	r3, #12
   155bc:	str	r3, [r0]
   155c0:	mov	r0, #0
   155c4:	pop	{r4, r5, r6, pc}
   155c8:	mul	r1, r5, r4
   155cc:	mov	r0, r6
   155d0:	bl	151f8 <__snprintf_chk@plt+0x3e8c>
   155d4:	pop	{r4, r5, r6, pc}
   155d8:	push	{lr}		; (str lr, [sp, #-4]!)
   155dc:	sub	sp, sp, #268	; 0x10c
   155e0:	ldr	r2, [pc, #68]	; 1562c <__snprintf_chk@plt+0x42c0>
   155e4:	add	r1, sp, #4
   155e8:	bl	15638 <__snprintf_chk@plt+0x42cc>
   155ec:	cmp	r0, #0
   155f0:	movne	r0, #0
   155f4:	bne	15624 <__snprintf_chk@plt+0x42b8>
   155f8:	ldr	r1, [pc, #48]	; 15630 <__snprintf_chk@plt+0x42c4>
   155fc:	add	r0, sp, #4
   15600:	bl	11060 <strcmp@plt>
   15604:	cmp	r0, #0
   15608:	moveq	r0, #0
   1560c:	beq	15624 <__snprintf_chk@plt+0x42b8>
   15610:	ldr	r1, [pc, #28]	; 15634 <__snprintf_chk@plt+0x42c8>
   15614:	add	r0, sp, #4
   15618:	bl	11060 <strcmp@plt>
   1561c:	adds	r0, r0, #0
   15620:	movne	r0, #1
   15624:	add	sp, sp, #268	; 0x10c
   15628:	pop	{pc}		; (ldr pc, [sp], #4)
   1562c:	andeq	r0, r0, r1, lsl #2
   15630:			; <UNDEFINED> instruction: 0x00016bbc
   15634:	andeq	r6, r1, r8, asr #23
   15638:	push	{r4, r5, r6, lr}
   1563c:	mov	r6, r1
   15640:	mov	r4, r2
   15644:	mov	r1, #0
   15648:	bl	112e8 <setlocale@plt>
   1564c:	subs	r5, r0, #0
   15650:	beq	15674 <__snprintf_chk@plt+0x4308>
   15654:	mov	r0, r5
   15658:	bl	11228 <strlen@plt>
   1565c:	cmp	r4, r0
   15660:	bhi	1568c <__snprintf_chk@plt+0x4320>
   15664:	cmp	r4, #0
   15668:	bne	156a4 <__snprintf_chk@plt+0x4338>
   1566c:	mov	r0, #34	; 0x22
   15670:	pop	{r4, r5, r6, pc}
   15674:	cmp	r4, #0
   15678:	beq	156c8 <__snprintf_chk@plt+0x435c>
   1567c:	mov	r3, #0
   15680:	strb	r3, [r6]
   15684:	mov	r0, #22
   15688:	pop	{r4, r5, r6, pc}
   1568c:	add	r2, r0, #1
   15690:	mov	r1, r5
   15694:	mov	r0, r6
   15698:	bl	110a8 <memcpy@plt>
   1569c:	mov	r0, #0
   156a0:	pop	{r4, r5, r6, pc}
   156a4:	sub	r4, r4, #1
   156a8:	mov	r2, r4
   156ac:	mov	r1, r5
   156b0:	mov	r0, r6
   156b4:	bl	110a8 <memcpy@plt>
   156b8:	mov	r3, #0
   156bc:	strb	r3, [r6, r4]
   156c0:	mov	r0, #34	; 0x22
   156c4:	pop	{r4, r5, r6, pc}
   156c8:	mov	r0, #22
   156cc:	pop	{r4, r5, r6, pc}
   156d0:	push	{r4, lr}
   156d4:	mov	r1, #0
   156d8:	bl	112e8 <setlocale@plt>
   156dc:	pop	{r4, pc}
   156e0:	subs	r2, r1, #1
   156e4:	bxeq	lr
   156e8:	bcc	158c0 <__snprintf_chk@plt+0x4554>
   156ec:	cmp	r0, r1
   156f0:	bls	158a4 <__snprintf_chk@plt+0x4538>
   156f4:	tst	r1, r2
   156f8:	beq	158b0 <__snprintf_chk@plt+0x4544>
   156fc:	clz	r3, r0
   15700:	clz	r2, r1
   15704:	sub	r3, r2, r3
   15708:	rsbs	r3, r3, #31
   1570c:	addne	r3, r3, r3, lsl #1
   15710:	mov	r2, #0
   15714:	addne	pc, pc, r3, lsl #2
   15718:	nop			; (mov r0, r0)
   1571c:	cmp	r0, r1, lsl #31
   15720:	adc	r2, r2, r2
   15724:	subcs	r0, r0, r1, lsl #31
   15728:	cmp	r0, r1, lsl #30
   1572c:	adc	r2, r2, r2
   15730:	subcs	r0, r0, r1, lsl #30
   15734:	cmp	r0, r1, lsl #29
   15738:	adc	r2, r2, r2
   1573c:	subcs	r0, r0, r1, lsl #29
   15740:	cmp	r0, r1, lsl #28
   15744:	adc	r2, r2, r2
   15748:	subcs	r0, r0, r1, lsl #28
   1574c:	cmp	r0, r1, lsl #27
   15750:	adc	r2, r2, r2
   15754:	subcs	r0, r0, r1, lsl #27
   15758:	cmp	r0, r1, lsl #26
   1575c:	adc	r2, r2, r2
   15760:	subcs	r0, r0, r1, lsl #26
   15764:	cmp	r0, r1, lsl #25
   15768:	adc	r2, r2, r2
   1576c:	subcs	r0, r0, r1, lsl #25
   15770:	cmp	r0, r1, lsl #24
   15774:	adc	r2, r2, r2
   15778:	subcs	r0, r0, r1, lsl #24
   1577c:	cmp	r0, r1, lsl #23
   15780:	adc	r2, r2, r2
   15784:	subcs	r0, r0, r1, lsl #23
   15788:	cmp	r0, r1, lsl #22
   1578c:	adc	r2, r2, r2
   15790:	subcs	r0, r0, r1, lsl #22
   15794:	cmp	r0, r1, lsl #21
   15798:	adc	r2, r2, r2
   1579c:	subcs	r0, r0, r1, lsl #21
   157a0:	cmp	r0, r1, lsl #20
   157a4:	adc	r2, r2, r2
   157a8:	subcs	r0, r0, r1, lsl #20
   157ac:	cmp	r0, r1, lsl #19
   157b0:	adc	r2, r2, r2
   157b4:	subcs	r0, r0, r1, lsl #19
   157b8:	cmp	r0, r1, lsl #18
   157bc:	adc	r2, r2, r2
   157c0:	subcs	r0, r0, r1, lsl #18
   157c4:	cmp	r0, r1, lsl #17
   157c8:	adc	r2, r2, r2
   157cc:	subcs	r0, r0, r1, lsl #17
   157d0:	cmp	r0, r1, lsl #16
   157d4:	adc	r2, r2, r2
   157d8:	subcs	r0, r0, r1, lsl #16
   157dc:	cmp	r0, r1, lsl #15
   157e0:	adc	r2, r2, r2
   157e4:	subcs	r0, r0, r1, lsl #15
   157e8:	cmp	r0, r1, lsl #14
   157ec:	adc	r2, r2, r2
   157f0:	subcs	r0, r0, r1, lsl #14
   157f4:	cmp	r0, r1, lsl #13
   157f8:	adc	r2, r2, r2
   157fc:	subcs	r0, r0, r1, lsl #13
   15800:	cmp	r0, r1, lsl #12
   15804:	adc	r2, r2, r2
   15808:	subcs	r0, r0, r1, lsl #12
   1580c:	cmp	r0, r1, lsl #11
   15810:	adc	r2, r2, r2
   15814:	subcs	r0, r0, r1, lsl #11
   15818:	cmp	r0, r1, lsl #10
   1581c:	adc	r2, r2, r2
   15820:	subcs	r0, r0, r1, lsl #10
   15824:	cmp	r0, r1, lsl #9
   15828:	adc	r2, r2, r2
   1582c:	subcs	r0, r0, r1, lsl #9
   15830:	cmp	r0, r1, lsl #8
   15834:	adc	r2, r2, r2
   15838:	subcs	r0, r0, r1, lsl #8
   1583c:	cmp	r0, r1, lsl #7
   15840:	adc	r2, r2, r2
   15844:	subcs	r0, r0, r1, lsl #7
   15848:	cmp	r0, r1, lsl #6
   1584c:	adc	r2, r2, r2
   15850:	subcs	r0, r0, r1, lsl #6
   15854:	cmp	r0, r1, lsl #5
   15858:	adc	r2, r2, r2
   1585c:	subcs	r0, r0, r1, lsl #5
   15860:	cmp	r0, r1, lsl #4
   15864:	adc	r2, r2, r2
   15868:	subcs	r0, r0, r1, lsl #4
   1586c:	cmp	r0, r1, lsl #3
   15870:	adc	r2, r2, r2
   15874:	subcs	r0, r0, r1, lsl #3
   15878:	cmp	r0, r1, lsl #2
   1587c:	adc	r2, r2, r2
   15880:	subcs	r0, r0, r1, lsl #2
   15884:	cmp	r0, r1, lsl #1
   15888:	adc	r2, r2, r2
   1588c:	subcs	r0, r0, r1, lsl #1
   15890:	cmp	r0, r1
   15894:	adc	r2, r2, r2
   15898:	subcs	r0, r0, r1
   1589c:	mov	r0, r2
   158a0:	bx	lr
   158a4:	moveq	r0, #1
   158a8:	movne	r0, #0
   158ac:	bx	lr
   158b0:	clz	r2, r1
   158b4:	rsb	r2, r2, #31
   158b8:	lsr	r0, r0, r2
   158bc:	bx	lr
   158c0:	cmp	r0, #0
   158c4:	mvnne	r0, #0
   158c8:	b	15b2c <__snprintf_chk@plt+0x47c0>
   158cc:	cmp	r1, #0
   158d0:	beq	158c0 <__snprintf_chk@plt+0x4554>
   158d4:	push	{r0, r1, lr}
   158d8:	bl	156e0 <__snprintf_chk@plt+0x4374>
   158dc:	pop	{r1, r2, lr}
   158e0:	mul	r3, r2, r0
   158e4:	sub	r1, r1, r3
   158e8:	bx	lr
   158ec:	cmp	r1, #0
   158f0:	beq	15afc <__snprintf_chk@plt+0x4790>
   158f4:	eor	ip, r0, r1
   158f8:	rsbmi	r1, r1, #0
   158fc:	subs	r2, r1, #1
   15900:	beq	15ac8 <__snprintf_chk@plt+0x475c>
   15904:	movs	r3, r0
   15908:	rsbmi	r3, r0, #0
   1590c:	cmp	r3, r1
   15910:	bls	15ad4 <__snprintf_chk@plt+0x4768>
   15914:	tst	r1, r2
   15918:	beq	15ae4 <__snprintf_chk@plt+0x4778>
   1591c:	clz	r2, r3
   15920:	clz	r0, r1
   15924:	sub	r2, r0, r2
   15928:	rsbs	r2, r2, #31
   1592c:	addne	r2, r2, r2, lsl #1
   15930:	mov	r0, #0
   15934:	addne	pc, pc, r2, lsl #2
   15938:	nop			; (mov r0, r0)
   1593c:	cmp	r3, r1, lsl #31
   15940:	adc	r0, r0, r0
   15944:	subcs	r3, r3, r1, lsl #31
   15948:	cmp	r3, r1, lsl #30
   1594c:	adc	r0, r0, r0
   15950:	subcs	r3, r3, r1, lsl #30
   15954:	cmp	r3, r1, lsl #29
   15958:	adc	r0, r0, r0
   1595c:	subcs	r3, r3, r1, lsl #29
   15960:	cmp	r3, r1, lsl #28
   15964:	adc	r0, r0, r0
   15968:	subcs	r3, r3, r1, lsl #28
   1596c:	cmp	r3, r1, lsl #27
   15970:	adc	r0, r0, r0
   15974:	subcs	r3, r3, r1, lsl #27
   15978:	cmp	r3, r1, lsl #26
   1597c:	adc	r0, r0, r0
   15980:	subcs	r3, r3, r1, lsl #26
   15984:	cmp	r3, r1, lsl #25
   15988:	adc	r0, r0, r0
   1598c:	subcs	r3, r3, r1, lsl #25
   15990:	cmp	r3, r1, lsl #24
   15994:	adc	r0, r0, r0
   15998:	subcs	r3, r3, r1, lsl #24
   1599c:	cmp	r3, r1, lsl #23
   159a0:	adc	r0, r0, r0
   159a4:	subcs	r3, r3, r1, lsl #23
   159a8:	cmp	r3, r1, lsl #22
   159ac:	adc	r0, r0, r0
   159b0:	subcs	r3, r3, r1, lsl #22
   159b4:	cmp	r3, r1, lsl #21
   159b8:	adc	r0, r0, r0
   159bc:	subcs	r3, r3, r1, lsl #21
   159c0:	cmp	r3, r1, lsl #20
   159c4:	adc	r0, r0, r0
   159c8:	subcs	r3, r3, r1, lsl #20
   159cc:	cmp	r3, r1, lsl #19
   159d0:	adc	r0, r0, r0
   159d4:	subcs	r3, r3, r1, lsl #19
   159d8:	cmp	r3, r1, lsl #18
   159dc:	adc	r0, r0, r0
   159e0:	subcs	r3, r3, r1, lsl #18
   159e4:	cmp	r3, r1, lsl #17
   159e8:	adc	r0, r0, r0
   159ec:	subcs	r3, r3, r1, lsl #17
   159f0:	cmp	r3, r1, lsl #16
   159f4:	adc	r0, r0, r0
   159f8:	subcs	r3, r3, r1, lsl #16
   159fc:	cmp	r3, r1, lsl #15
   15a00:	adc	r0, r0, r0
   15a04:	subcs	r3, r3, r1, lsl #15
   15a08:	cmp	r3, r1, lsl #14
   15a0c:	adc	r0, r0, r0
   15a10:	subcs	r3, r3, r1, lsl #14
   15a14:	cmp	r3, r1, lsl #13
   15a18:	adc	r0, r0, r0
   15a1c:	subcs	r3, r3, r1, lsl #13
   15a20:	cmp	r3, r1, lsl #12
   15a24:	adc	r0, r0, r0
   15a28:	subcs	r3, r3, r1, lsl #12
   15a2c:	cmp	r3, r1, lsl #11
   15a30:	adc	r0, r0, r0
   15a34:	subcs	r3, r3, r1, lsl #11
   15a38:	cmp	r3, r1, lsl #10
   15a3c:	adc	r0, r0, r0
   15a40:	subcs	r3, r3, r1, lsl #10
   15a44:	cmp	r3, r1, lsl #9
   15a48:	adc	r0, r0, r0
   15a4c:	subcs	r3, r3, r1, lsl #9
   15a50:	cmp	r3, r1, lsl #8
   15a54:	adc	r0, r0, r0
   15a58:	subcs	r3, r3, r1, lsl #8
   15a5c:	cmp	r3, r1, lsl #7
   15a60:	adc	r0, r0, r0
   15a64:	subcs	r3, r3, r1, lsl #7
   15a68:	cmp	r3, r1, lsl #6
   15a6c:	adc	r0, r0, r0
   15a70:	subcs	r3, r3, r1, lsl #6
   15a74:	cmp	r3, r1, lsl #5
   15a78:	adc	r0, r0, r0
   15a7c:	subcs	r3, r3, r1, lsl #5
   15a80:	cmp	r3, r1, lsl #4
   15a84:	adc	r0, r0, r0
   15a88:	subcs	r3, r3, r1, lsl #4
   15a8c:	cmp	r3, r1, lsl #3
   15a90:	adc	r0, r0, r0
   15a94:	subcs	r3, r3, r1, lsl #3
   15a98:	cmp	r3, r1, lsl #2
   15a9c:	adc	r0, r0, r0
   15aa0:	subcs	r3, r3, r1, lsl #2
   15aa4:	cmp	r3, r1, lsl #1
   15aa8:	adc	r0, r0, r0
   15aac:	subcs	r3, r3, r1, lsl #1
   15ab0:	cmp	r3, r1
   15ab4:	adc	r0, r0, r0
   15ab8:	subcs	r3, r3, r1
   15abc:	cmp	ip, #0
   15ac0:	rsbmi	r0, r0, #0
   15ac4:	bx	lr
   15ac8:	teq	ip, r0
   15acc:	rsbmi	r0, r0, #0
   15ad0:	bx	lr
   15ad4:	movcc	r0, #0
   15ad8:	asreq	r0, ip, #31
   15adc:	orreq	r0, r0, #1
   15ae0:	bx	lr
   15ae4:	clz	r2, r1
   15ae8:	rsb	r2, r2, #31
   15aec:	cmp	ip, #0
   15af0:	lsr	r0, r3, r2
   15af4:	rsbmi	r0, r0, #0
   15af8:	bx	lr
   15afc:	cmp	r0, #0
   15b00:	mvngt	r0, #-2147483648	; 0x80000000
   15b04:	movlt	r0, #-2147483648	; 0x80000000
   15b08:	b	15b2c <__snprintf_chk@plt+0x47c0>
   15b0c:	cmp	r1, #0
   15b10:	beq	15afc <__snprintf_chk@plt+0x4790>
   15b14:	push	{r0, r1, lr}
   15b18:	bl	158f4 <__snprintf_chk@plt+0x4588>
   15b1c:	pop	{r1, r2, lr}
   15b20:	mul	r3, r2, r0
   15b24:	sub	r1, r1, r3
   15b28:	bx	lr
   15b2c:	push	{r1, lr}
   15b30:	mov	r0, #8
   15b34:	bl	11054 <raise@plt>
   15b38:	pop	{r1, pc}
   15b3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b40:	mov	r7, r0
   15b44:	ldr	r6, [pc, #72]	; 15b94 <__snprintf_chk@plt+0x4828>
   15b48:	ldr	r5, [pc, #72]	; 15b98 <__snprintf_chk@plt+0x482c>
   15b4c:	add	r6, pc, r6
   15b50:	add	r5, pc, r5
   15b54:	sub	r6, r6, r5
   15b58:	mov	r8, r1
   15b5c:	mov	r9, r2
   15b60:	bl	1101c <calloc@plt-0x20>
   15b64:	asrs	r6, r6, #2
   15b68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b6c:	mov	r4, #0
   15b70:	add	r4, r4, #1
   15b74:	ldr	r3, [r5], #4
   15b78:	mov	r2, r9
   15b7c:	mov	r1, r8
   15b80:	mov	r0, r7
   15b84:	blx	r3
   15b88:	cmp	r6, r4
   15b8c:	bne	15b70 <__snprintf_chk@plt+0x4804>
   15b90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b94:	andeq	r1, r1, ip, lsr #7
   15b98:	andeq	r1, r1, r4, lsr #7
   15b9c:	bx	lr
   15ba0:	ldr	r3, [pc, #12]	; 15bb4 <__snprintf_chk@plt+0x4848>
   15ba4:	mov	r1, #0
   15ba8:	add	r3, pc, r3
   15bac:	ldr	r2, [r3]
   15bb0:	b	11264 <__cxa_atexit@plt>
   15bb4:	andeq	r1, r1, r8, ror r5

Disassembly of section .fini:

00015bb8 <.fini>:
   15bb8:	push	{r3, lr}
   15bbc:	pop	{r3, pc}
